sbb
add
std
mov
loopne
jb
lock
lret
mov
mov
dec
mov
mov
adc
and
jg
adc
movsl
push
mov
jp
push
test
scas
cli
lods
lds
xchg
jno
stos
xchg
loopne
fwait
inc
ja
mov
push
testb
mov
mov
incl
add
mov
mov
pop
fcompl
cs
sbb
jb
xchg
and
jo
and
jmp
imul
and
shrb
push
daa
and
lock
jb
jp
mov
jne
adc
test
inc
cmp
jle
fwait
pop
xor
dec
scas
jne
sbb
faddl
cli
add
int3
push
push
xchg
jecxz
std
mov
sahf
lret
adc
mov
inc
imulb
cmp
fmuls
popf
fbstp
les
xlat
std
insb
xchg
lods
inc
push
ret
cmpb
mov
sbb
mov
jbe
sbb
jp
fistl
lds
inc
and
test
test
mov
pop
ljmp
pop
mov
cmp
sbb
pop
daa
mov
dec
xchg
jecxz
add
cmp
add
cmp
adc
adc
pop
push
mov
pusha
in
ja
cmp
mov
sbb
mov
push
sub
lcall
popf
mov
aam
or
insl
xchg
in
or
std
or
movsb
je
imulb
jbe
icebp
les
nop
test
push
pop
int
mov
inc
ja
pop
cs
outsb
xor
loopne
inc
push
dec
bound
xor
iret
xorb
and
dec
mov
sti
lret
sub
pop
rorb
fnstcw
push
in
mov
mov
cmc
repz
ret
mov
loopne
push
mov
sub
mov
jl
mov
test
into
mov
ds
add
popf
gs
sub
aad
pop
and
mov
pop
div
jb
fcmovb
sbb
mov
ljmp
dec
test
sbb
inc
jl
add
jnp
jecxz
sbb
and
push
sbb
ror
mov
mov
xchg
push
mov
js
mov
add
xchg
nop
out
les
addl
cltd
cmp
jns
add
bound
add
add
pusha
scas
lcall
sti
inc
jmp
cmp
push
jmp
push
and
aad
ret
int3
stc
mov
inc
add
cmc
pop
lahf
lods
add
and
cld
dec
and
aaa
scas
mov
testl
fisubl
leave
sahf
xchg
jne
mov
mov
and
pop
push
scas
or
mov
outsb
inc
inc
add
sub
xchg
pushf
mov
adc
xor
and
jle
mov
repnz
scas
hlt
mov
imul
lcall
aaa
mov
in
jle
inc
fimuls
shll
xor
mov
popf
lods
cmp
cmp
sbb
fwait
cmc
mov
rcrl
cmp
jecxz
xchg
into
cmp
push
mov
loopne
push
aad
or
cmp
jne
push
xchg
mov
stos
or
adc
push
or
ret
sbbb
repz
imul
std
inc
push
jbe
pop
pop
lret
mov
mov
out
sub
lcall
loope
addl
or
adc
and
push
mov
and
cld
sub
inc
xor
jp
mov
sub
bound
or
fists
adc
pop
ljmp
push
xchg
les
into
fmull
mov
or
icebp
aas
cwtl
jo
shl
adc
ss
xor
inc
nop
loope
lea
les
fldcw
dec
sub
pop
cltd
push
mov
mov
testb
sub
popf
cmpsl
outsl
adc
mov
xor
sbb
mov
cmc
outsb
add
insl
xchg
shll
adc
nop
lret
pop
push
dec
xchg
inc
or
inc
pop
cmp
scas
add
inc
jnp
inc
movsl
jb
bound
mov
push
nop
cwtl
popf
dec
jp
or
jno
pop
push
pop
insb
mov
imul
lds
dec
cmp
outsl
sub
push
das
pop
or
pushf
sub
mov
mov
out
push
sbb
repnz
pop
hlt
xchg
andb
push
mov
xchg
xor
aas
data16
hlt
imul
cmpsl
sbb
pop
or
enter
mov
loope
mov
cmpsl
fldcw
fiaddl
lret
xchg
shl
in
ss
cmpb
stos
push
outsl
push
jl
mov
jbe
lcall
xchg
or
adc
pop
pop
push
xor
sub
jle
aam
pop
pop
mov
subl
mov
cld
scas
inc
aas
xor
rol
hlt
jmp
lea
sub
jecxz
sbb
or
test
in
lods
cmp
jle
popa
inc
les
popa
xchg
rcrb
sbb
fs
inc
and
gs
fsts
test
lahf
imul
mov
inc
scas
xlat
adc
idiv
jno
mov
push
cmp
imul
icebp
dec
mov
movsb
rorl
in
nop
xchg
sub
cli
push
jl
xchg
popf
call
sbb
rorl
lret
cmpsb
or
daa
sahf
ja
push
cmp
cmpb
sbb
mov
adc
sarb
mov
cmpsl
addr16
mov
lcall
adc
cmpsb
sahf
gs
xor
mov
std
mov
xchg
negb
roll
test
mov
pop
mov
fisubrs
or
enter
or
int3
dec
gs
sub
les
adc
dec
mov
js
push
out
pop
mov
fnstsw
test
je
adc
xor
outsb
roll
dec
xchg
fs
cmp
cmp
popf
cld
dec
lahf
filds
cs
pand
cmp
xlat
sub
push
shl
cld
ds
inc
adc
dec
lret
mov
pop
inc
pop
jmp
add
stos
lret
mov
stc
push
xchg
cmpsb
sub
dec
mov
push
les
or
cmp
and
pop
lret
jae
sbb
or
in
and
cmp
adc
pop
jl
pop
mov
xor
pop
mov
cs
popa
bound
movsb
cmpsl
fistl
roll
adcb
push
cmpb
cli
cmp
adc
mov
fidivl
xchg
faddl
fistpl
aam
jae
jns
ret
jg
stc
scas
mov
scas
stc
dec
mov
cltd
leave
inc
in
xchg
sub
and
push
xchg
inc
movsl
xchg
inc
int3
movsb
mov
clc
or
inc
dec
jmp
jle
fs
add
xor
je
mov
insl
sbb
and
jae
rcr
daa
mov
popa
inc
inc
xor
inc
jg
add
push
add
mov
jmp
and
nop
cmpsl
adc
jo
lds
sti
sarl
aas
idivl
jne
lods
dec
xor
mov
jns
mov
add
pop
mov
ljmp
scas
cli
push
int
data16
ds
mov
jnp,pt
gs
negl
adc
push
adc
rorb
or
cmpsb
out
int
push
cmpsl
nop
sub
test
xchg
pop
shl
dec
push
out
push
mov
mov
cmpl
mov
sbb
dec
jecxz
test
adc
dec
jl
sti
adc
xchg
xchg
orb
pop
sbb
add
xor
or
imul
stos
xchg
movl
mov
adc
pushf
push
sbb
jge
in
in
push
fdivr
jmp
lods
clc
jmp
dec
adc
cmp
sub
int
dec
fs
or
decb
add
push
mov
inc
data16
push
mov
jmp
ja
and
mov
fcoms
cmp
ret
aam
lret
xor
jne
xor
and
add
rorl
or
adc
mov
lds
mov
pop
lock
inc
ret
out
sahf
xchg
pop
mov
sbbl
xlat
pushf
nop
aad
sub
push
outsb
xorl
or
roll
lock
bound
mov
add
or
adc
add
aad
mov
xchg
xchg
addl
fcmovne
push
in
fsubl
shrl
add
inc
push
mov
jb
aaa
mov
xchg
xor
xor
das
dec
jl
fwait
mov
and
xchg
cs
fisttpll
jl
clc
popa
imul
mov
mov
hlt
imul
dec
les
jmp
mov
pop
fisttpll
sbb
cmp
mov
or
pop
push
aas
dec
je
bound
jp
push
add
fwait
stc
and
fstpl
das
int3
jo
xchg
insl
jge
fisttpll
arpl
push
inc
popa
mov
cmp
aaa
push
jle
lret
or
push
xchg
push
lret
pusha
add
push
cmpsb
mov
mov
dec
fwait
cmc
in
mov
int
cltd
jle
push
pop
shlb
sub
dec
push
lds
xchg
jmp
fdivr
dec
ror
imul
ljmp
stos
push
repnz
inc
xor
loopne
cmp
dec
imul
mov
xchg
stos
sahf
adc
and
pop
ret
jo
pop
stc
imul
in
xchg
sbb
xor
fnsave
or
sub
sbbl
fisttps
jo
xor
fstpt
inc
dec
push
dec
imul
ljmp
leave
hlt
insl
sbb
sub
je
inc
fcoms
outsl
xor
mov
pop
inc
leave
cmp
imul
dec
sub
and
inc
leave
scas
push
jl
inc
ret
int3
sbb
add
aaa
and
jg
inc
movsl
sbb
xlat
push
adc
adc
loope
xlat
mov
pushw
cmpsb
sbb
vunpcklps
arpl
js
cmp
clc
aaa
cmpsb
push
mov
pop
ret
xor
add
loopne
cmpsb
fisubl
jmp
ret
negb
divb
xor
je
movsl
add
mov
cmpsl
jp
je
adc
hlt
dec
cmpsl
sbb
xchg
fidivrl
iret
lods
adc
mov
aad
movsl
lcall
fs
fstp
scas
jle
dec
repnz
jb
xorl
push
mov
mov
push
cmpsl
in
aas
test
es
pushf
cmpsl
jmp
xor
dec
dec
loope
mov
dec
pop
insb
mov
out
pop
xchg
push
test
push
fucomp
std
sub
xchg
ret
daa
ljmp
jecxz
fwait
ss
ret
jl
out
mov
xchg
xchg
ss
shl
fs
nop
and
fisubrs
sti
mov
gs
testb
add
inc
lock
mov
mov
bound
xor
mov
out
adc
dec
push
addr16
ret
loopne
inc
cmp
push
jae
add
cmc
ss
add
mov
shrl
mul
inc
mulb
les
les
negl
aam
jnp
cmp
aaa
pushf
ja
or
imul
mov
jo
adc
loope
ja
pop
scas
mov
dec
adcb
loope
js
jge
leave
outsl
cmp
cmp
xor
mov
pop
test
mov
orb
mov
inc
jmp
jo
dec
inc
push
mov
scas
cmpsb
add
sub
fnsave
dec
into
mov
jns
inc
insb
xchg
ds
jnp
mov
jg
rorb
insb
ds
stos
shlb
xor
mov
push
mov
and
cwtl
fsubrp
mov
xchg
add
sahf
xor
mov
ljmp
je
jp
cmp
adc
xor
iret
fistl
or
mov
shlb
andl
aaa
or
push
cwtl
pop
jbe
cmpsb
addb
out
fsubr
insl
push
xor
mov
clc
mov
jmp
sbb
dec
fisubl
data16
out
mov
sub
rol
mov
or
je
fwait
roll
jne
movb
pop
nop
insl
cld
xchg
ds
xchg
xor
xchg
cmp
dec
mov
insl
push
loope
lods
rcll
xor
repz
das
add
es
ss
inc
xchg
ror
sbb
imul
mov
xchg
jle
sti
insb
push
push
fucom
mov
mov
shl
jbe
montmul
cmpsb
or
sbb
sbb
dec
lods
jle
aas
or
dec
xor
mov
add
push
push
lds
inc
or
xor
add
cmpsb
pusha
bound
repnz
pop
std
mov
xor
out
jns
outsb
arpl
frstor
fs
std
divl
xlat
lcall
jnp
sub
push
or
lret
dec
push
in
mov
mov
outsl
ds
lods
addr16
fisubrl
ds
aaa
adc
sbb
test
sbb
or
add
and
jecxz
and
shll
push
shrb
lods
mov
cmp
sbb
test
xor
mov
test
int
ret
cmp
xchg
add
add
pop
lods
push
xchg
bound
push
fstpt
xlat
mov
xor
sbb
add
push
inc
jmp
insl
fsubl
jb
mov
lods
push
imul
add
fnstsw
jl
inc
gs
inc
push
inc
xor
mov
hlt
adc
jne
movsl
mov
test
adc
and
aaa
push
xchg
push
pushf
xor
js
rcrb
adc
mov
lods
push
cmp
aam
xchg
jno
sbb
sub
es
cmp
jmp
daa
and
or
mov
adc
adc
xchg
jne
dec
out
fnstsw
arpl
push
std
mov
and
fsubrl
lret
and
ds
fdivl
pop
nop
xchg
fs
pop
int3
and
push
fisttps
cmc
arpl
push
push
fnsave
push
int3
mov
xor
sub
jbe
mov
mov
pushf
jae
mov
out
fs
fcoml
jecxz
test
xchg
ffreep
sahf
xor
scas
enter
sub
jecxz
push
push
popa
dec
fstp
ficoml
hlt
pop
cmp
sbb
hlt
nop
push
in
inc
dec
xor
shrb
push
cli
imul
jo
push
xchg
xor
xchg
jle
insb
dec
popf
test
scas
ljmp
dec
xor
dec
loopne
xor
jae
jecxz
mov
addr16
and
ss
int
sub
aam
jmp
mov
sbb
mov
jbe
mov
jne
ja
cmpl
rcl
mov
xchg
mov
sbb
cmp
mov
out
aad
add
push
std
pop
sub
fstl
daa
pop
adc
mov
xor
call
mov
loop
int
jmp
xchg
sub
aas
sbb
xchg
xchg
movsl
cli
adc
loopne
stos
pusha
adc
sbb
leave
push
push
mov
ljmp
jb
insl
call
popa
mov
outsb
mov
pop
adc
pusha
add
push
lcall
and
pop
mov
mov
or
nop
fbld
dec
addr16
jmp
ljmp
popa
mov
inc
scas
out
cmp
adc
lahf
cmc
fisttpl
mov
xchg
hlt
inc
insl
jg
into
xchg
stos
sbb
cmpsb
cltd
or
hlt
leave
add
xlat
es
fcmove
out
mov
xor
fwait
std
nop/reserved
and
mov
mov
xchg
imul
sahf
add
ret
int
push
in
shll
push
es
push
jno
dec
in
mov
inc
jno
sti
push
sbb
mov
lahf
cmc
jge
outsl
lock
push
loopne
sub
jmp
fistl
xorl
cmpsb
lods
xchg
xchg
xchg
sahf
add
fsubrl
mov
xchg
ljmp
mov
sub
cltd
pop
mov
xorl
cwtl
out
or
bound
cmp
setle
jb
fs
sub
push
cmp
pushf
jbe
outsb
add
shlb
bound
cld
inc
loopne
mov
test
ja
mov
mov
lea
sbb
cltd
jl
shl
fdivrs
sbb
pop
push
arpl
sarl
sahf
aaa
fs
aad
mov
cmp
inc
adc
xchg
jbe
out
adc
mov
ficoms
add
rolb
pop
ret
sbb
shr
jge
add
out
or
cmpsl
js
adc
push
jecxz
cmp
xlat
js
add
iret
pop
add
sub
rorl
cmpsl
or
vpacksswb
cmp
and
xor
fisttps
lock
lds
and
mov
jge
xchg
dec
mov
out
addb
mov
lea
and
push
roll
test
sbb
popl
scas
xor
cltd
dec
mov
mov
shr
sbb
sahf
sbb
or
bswap
ret
outsb
ljmp
cwtl
cltd
data16
xor
xor
jmp
out
dec
adc
or
sub
xor
mov
mov
aam
mov
shl
cltd
xchg
out
jl
mov
jne
pushf
loop
xor
fildll
js
adc
dec
inc
add
cmp
push
outsb
test
sbb
mov
push
out
push
add
aad
mov
inc
shrl
sbbb
inc
repnz
jae
in
std
mov
mov
movsl
pop
fcmovb
inc
or
sbbb
shlb
fmull
clc
loope
orl
dec
in
rorl
or
into
lcall
adc
lds
xor
dec
add
movsb
pop
cmp
xchg
mov
adc
loop
mov
jno
subb
clc
xchg
add
cltd
gs
ljmp
mov
cld
jle
jb
mov
or
mov
loope,pt
mov
sahf
leave
ljmp
or
test
mov
scas
pop
jmp
and
add
imul
testl
or
cld
dec
das
fidivrl
shrb
loope
push
rolb
push
ja
mov
fnstsw
cmp
insb
cmp
dec
loope
sub
cli
scas
fstpl
test
loope
mov
mov
add
and
call
mov
test
or
jmp
in
and
jge
inc
pop
lock
repz
or
in
xchg
pop
or
hlt
mov
cmc
movsb
cmc
subb
push
adc
cmp
repnz
cmp
xchg
cmp
jl
testl
sbb
fwait
adc
in
in
dec
movsb
inc
les
push
push
pop
loope
cwtl
jecxz
fwait
xlat
xchg
inc
adc
lea
hlt
into
jnp
cld
out
or
ja
adc
movsb
mov
xor
mov
cmc
push
cwtl
push
dec
mov
fisttps
and
xlat
mov
icebp
movsb
cli
pop
insl
sub
dec
scas
loopne
sbb
lcall
jge
xchg
sub
mov
fiaddl
xchg
xor
lcall
dec
nop
ror
ficoml
push
je
inc
popa
jge
mov
push
mov
sbb
pop
test
inc
dec
inc
mov
stos
int
pop
jo
cmpsb
adc
scas
mov
mov
fxch
mov
addr16
push
push
xchg
xchg
or
les
ljmp
xlat
jecxz
jl,pt
ds
jbe
aas
in
inc
add
xor
fsts
ljmp
fistps
psrad
pop
fimuls
push
ja
push
cmp
cmc
xor
aad
sbb
dec
fwait
arpl
imul
dec
adcb
loope
scas
adc
pop
sub
push
dec
es
lods
inc
push
mov
ljmp
pop
and
pushf
dec
mov
jmp
incl
push
clc
jnp
jnp
lods
cmpsb
pop
aaa
loopne
ret
xchg
imul
adc
fsubrl
iret
out
lcall
orb
mov
push
dec
inc
jg
daa
or
lea
imul
push
jns
gs
pop
sbb
add
inc
or
arpl
neg
imul
jne
jge
xchg
jle
xor
dec
fsubs
es
imul
mov
push
mov
xor
shl
in
push
jae
or
push
jl
push
or
insl
push
inc
and
inc
rorb
xchg
jae
sbb
jle
out
mov
ds
jmp
adc
sub
es
mov
icebp
and
nop
addb
jecxz
das
iret
adc
jbe
mov
dec
fwait
lcall
or
stos
pop
imul
mov
lds
in
inc
mov
push
in
or
divb
in
clc
ja
insl
dec
pop
dec
pop
jmp
jnp
mov
add
xchg
adc
dec
js
push
inc
xchg
cmp
dec
and
mov
inc
pop
cmp
push
pop
xchg
mov
xchg
cld
test
cs
popf
jle
jmp
loop
sbb
cltd
or
cmp
loop
xlat
push
jle
lods
cmp
test
aad
hlt
clc
out
bnd
aam
movsb
cmp
ror
dec
add
ja
lcall
fldenv
icebp
cwtl
add
flds
pop
mov
mov
mov
mov
xchg
ds
fiadds
push
adc
pop
imul
adc
mov
dec
mov
xlat
in
cmp
je
neg
pop
dec
lret
popa
in
adc
in
xchg
data16
push
add
mov
xchg
xchg
jge
sti
jle
xchg
mov
cmp
pop
pop
dec
inc
sahf
fidivrs
addr16
aam
mov
cmp
or
je
aam
addr16
adc
xchg
pop
and
cmp
daa
mov
or
adc
or
pop
mov
inc
fcoml
lock
mov
mov
push
in
fdivrl
cmp
xor
std
mov
add
push
jp
or
add
lret
out
mov
sarl
psubusb
xchg
jno
addr16
xchg
pop
outsl
outsb
stc
test
push
jb
into
out
fsubrs
push
dec
add
xchg
pop
push
or
aaa
inc
inc
mov
inc
dec
jge
jb
push
dec
fisubl
stc
call
rol
ja
movsl
push
in
jno
pop
das
xchg
add
push
ds
sbb
fmulp
in
xor
ret
mov
and
sahf
push
cmp
lods
mov
pop
lcall
cmpsl
imull
pop
xchg
push
jle
ljmp
mov
mov
mov
cmpsb
in
jno
cli
lea
cmpsb
inc
xor
xor
sbb
leave
cmp
out
cmp
jp
sbb
outsl
or
into
scas
mulb
mov
pop
cmc
add
dec
sbb
pop
push
or
pop
fidivrl
fwait
or
int
lret
scas
push
outsb
es
xchg
xchg
mov
in
ja
pop
jbe
cmp
sbb
fstpt
dec
movsl
add
or
jle
dec
in
por
mov
aas
lock
loope
pop
sub
jnp
cld
cmp
ds
gs
sub
jns
andb
fldenv
mov
aad
jge
cmp
scas
sub
fcomps
into
pop
cs
bnd
inc
cmp
shrb
adc
inc
sbb
xchg
adc
mov
fst
jge
loope
mov
mov
jb
push
inc
xchg
push
lods
pop
mov
sarl
js
loope
jmp
orb
imul
fsubr
je
adc
xor
aaa
incb
pop
push
in
lds
adc
inc
dec
push
dec
mov
popa
loope
mov
sub
sub
add
sub
idivl
xor
int
loope
mov
int
mov
xor
or
push
outsb
pop
jns
mov
pop
cli
sub
scas
dec
pop
adc
mov
xor
xor
xor
xchg
push
cmp
jmp
cmc
mov
mov
and
push
sbb
xchg
lahf
xchg
sub
nop
shll
arpl
les
cwtl
mov
fwait
vcvttsd2si
cwtl
out
hlt
lahf
lock
bnd
mov
sub
xlat
cmp
mov
sub
push
ja
sub
sub
xor
sbb
js
inc
aam
lds
testb
inc
sub
enter
pop
dec
jmp
push
cmp
test
sub
in
sub
jb
int3
insb
mov
imul
out
xchg
mov
ret
or
adc
mov
push
dec
mov
cmovns
push
dec
xchg
and
bound
inc
mov
pop
xchg
popf
sbb
loope
inc
sarl
jno
mov
es
push
sbb
gs
scas
fsts
pop
lock
loop
mov
mov
out
lahf
ljmp
call
or
xchg
cli
jb
loop
adc
dec
pop
mov
pcmpeqd
aad
push
mov
xchg
jecxz
or
mov
subl
cmc
cs
mov
sub
jae
fiadds
shrl
dec
pop
test
jbe
ret
in
cwtl
cmp
pop
and
push
ja
test
popf
adc
dec
xchg
cmpsb
jmp
sbb
cmp
fsub
mov
pop
jno
mov
lea
or
xor
lock
hlt
xchg
add
ret
fs
push
mov
orl
dec
fcomi
and
adc
dec
icebp
mov
nop
jmp
xchg
mov
adc
in
xchg
movsl
ret
jbe
fs
add
cmc
sub
dec
sbbl
call
mov
loope
inc
add
jl
pop
leave
jno
cmpsl
cli
sub
push
aam
jb
add
ds
jne
hlt
mov
add
adc
or
ljmp
cmp
sbb
ss
pop
bound
push
mov
rolb
cld
jae
fs
xchg
pop
xchg
idivb
pop
das
xchg
out
cli
popf
mov
xor
xchg
push
xchg
xor
and
mov
pop
gs
xor
cli
mov
xor
aas
add
mov
nop
sub
jg
xchg
cli
aas
rcrl
adc
add
fldcw
cmpsb
iret
or
mov
or
scas
out
cmp
divl
add
pop
xor
test
mov
or
aad
ljmp
loopne
movsl
sub
ja,pn
jecxz
add
call
call
aad
sbb
pop
push
inc
mov
pop
repz
out
and
sbb
fdivp
out
ss
jmp
cmpsl
nop
insb
lods
cmc
test
pop
fwait
insl
pop
dec
sub
dec
sub
iret
dec
xor
lods
icebp
dec
cmp
push
je
jg
pop
sti
mov
add
dec
in
pop
push
inc
cld
popf
sub
push
jl
imul
jge
fildll
dec
xchg
dec
xchg
mov
or
ret
in
pop
addl
mov
cwtl
aam
inc
into
mov
stc
xor
mov
or
lret
decb
fs
jmp
lret
sub
mov
sbb
push
and
inc
mov
pop
aam
mov
arpl
scas
push
imul
mov
mov
lods
or
cmp
ljmp
mov
xchg
cmp
loopne
loopne
int
pop
and
cld
xor
sub
push
fcomps
loop
push
sbb
inc
movsl
fdivrl
ja
jle
mov
jp
lret
push
mov
ja
inc
push
leave
movsb
lds
xor
in
inc
fdivl
int
lret
popa
sbb
mov
mov
mov
into
sub
test
ja
mov
test
mov
jmp
dec
cmp
sti
loope
ja
ror
lods
mov
ret
in
clc
mov
outsl
ds
fnstcw
loopne
fsubrs
jae
sub
mov
rol
xor
inc
in
add
hlt
mov
fildll
add
jo
pushf
xchg
xchg
inc
mov
filds
xchg
ja
adc
push
sub
sarb
jecxz
jne
rcr
pop
sbb
loop
movsb
fimuls
rorb
and
lea
iret
xor
xor
add
shr
mov
add
xchg
add
mov
sti
imul
adc
and
or
jmp
mov
push
sub
mov
mov
or
push
jmp
int
jno
out
cmp
test
call
scas
scas
pop
cmpsl
sbb
testb
mov
jne
outsb
cs
and
mov
or
jp
sub
subb
les
pop
fsts
add
and
test
xor
in
nop
mov
movsb
adc
dec
dec
adc
pop
popf
loopne
pop
daa
and
loope
nop
in
lret
jno
add
xor
jb
mov
icebp
jns
xor
sub
jmp
leave
mov
fidivrs
sbb
lret
inc
push
outsl
das
icebp
ja
jg
jg
push
xor
inc
push
adc
xor
cmp
sbb
hlt
fstpl
jmp
cli
outsl
jg
icebp
fwait
mov
cmpsb
or
or
stos
arpl
cmp
dec
dec
inc
and
jb
jae
inc
dec
jp
jae
cmpl
shrb
mov
out
sub
lcall
inc
loope
push
xor
pop
hlt
rolb
or
lret
popaw
int3
out
test
dec
loope
push
fldenv
jno
inc
pop
popa
or
push
mov
sub
dec
xor
movsl
pop
mov
leave
jne
mov
in
out
ret
scas
mov
mov
inc
xor
sbb
adc
fisubl
nop
and
mov
adc
sub
and
movsb
je
rcll
ror
movsb
jo
shrl
push
mov
ds
cmpl
adc
dec
mov
in
shrb
add
inc
imulb
negb
rcll
dec
dec
mul
in
xchg
sub
lret
mov
clc
or
add
xor
jg
and
nop
push
outsb
out
mov
xorb
mov
inc
ficoms
and
mov
or
cltd
push
ret
pop
mov
jae
dec
and
dec
mov
out
mov
adc
int3
adc
cmp
mov
addr16
jae
aas
mov
adc
cmp
lahf
cmpsl
sarl
scas
push
push
xor
fstpt
xor
and
cmp
out
adc
add
ljmp
shrl
or
stc
cmpsb
mov
sbb
out
xor
fldcw
cmpsl
imul
xchg
push
decb
jp
mov
pop
ja
jmp
xchg
andl
mov
mov
inc
sub
xor
addb
repz
add
cmpsb
sarl
ret
aaa
gs
enter
leave
xchg
pop
jne
imul
inc
imul
je
jg
adc
pop
aas
test
pop
xchg
xlat
jp
ds
pop
lds
pop
lahf
rorl
fbld
repnz
aad
pop
movsb
enter
sbb
fwait
lods
ret
imul
mov
bound
mov
jle
pop
shl
out
cmp
mov
ljmp
aam
sbb
cmp
jg
lea
daa
fldl2t
jecxz
sub
mov
loop
mov
or
xor
inc
mov
or
mov
stc
mov
dec
xchg
mov
lcall
xchg
sbb
mov
cld
and
fdivrs
ffree
xchg
cmp
lea
dec
push
cmpsb
adc
adc
push
lcall
mov
shrl
jnp
ss
xchg
xchg
aaa
add
sbb
mov
inc
cmp
sahf
sahf
jb
and
jo
gs
in
pushf
pop
sub
adc
movsb
dec
jae
jnp
cli
adc
test
mov
out
mov
lea
sub
pop
sti
loope
mov
jae
xor
inc
stos
in
add
xchg
sbb
sbb
mov
addb
cmpsl
mov
pop
xchg
repz
je
xchg
ds
testb
lcall
push
loop
daa
pop
or
mov
inc
sub
pop
sub
sbb
xor
jge
cmovne
fildl
sbb
adc
outsb
cwtl
dec
fcomps
jo
mov
inc
mov
dec
std
xchg
push
dec
dec
push
jo
mov
sbb
push
xchg
sbb
nop
jb
jo
sbb
jmp
pop
aaa
pushf
mov
or
leave
adc
cs
push
inc
dec
nop
mov
dec
inc
mov
movaps
scas
cmc
sbb
movsl
fidivs
aas
jmp
adc
mov
pop
imul
and
data16
rclb
into
test
mov
stos
jnp
ret
adc
xchg
xor
imul
ds
lock
rorl
push
inc
pop
stos
cld
adcb
pusha
mov
pop
add
int
jns
bound
pop
xor
icebp
ret
nop
popa
jmp
xchg
sub
data16
out
sbb
bound
sti
imul
dec
rcl
scas
hlt
mov
mov
and
divl
jno
fisubrs
push
or
int3
dec
cmpsl
pop
sub
ret
add
pop
xor
pop
ss
jle
js
push
jle
sub
ja
push
cmp
xchg
enter
mov
shrb
ret
mov
xchg
cmp
add
mov
movsb
mov
adc
add
and
dec
dec
pop
mov
pusha
mov
inc
es
mov
jle
mov
or
pop
pop
and
cmp
add
loop
sub
add
data16
dec
adc
popf
sahf
mov
pop
popa
xchg
pop
test
mov
enter
fistpl
sub
mov
sub
lods
xor
and
mov
fs
out
test
in
mov
mov
dec
push
mov
stc
jnp
test
xchg
lods
ds
jp
stos
pushf
int3
outsl
ja
add
sahf
mov
imul
test
adc
pop
xchg
mov
aas
lods
jnp
mov
repz
out
iret
pop
pop
dec
andb
jns
mov
sub
or
loop
add
sub
xor
lahf
mov
loop
mov
popa
xchg
bound
lret
xchg
push
and
mov
sub
lret
ret
mov
sub
gs
xchg
pop
adc
sub
cmp
mov
sub
scas
fcmovnu
pusha
cli
in
stos
cmp
rorb
xor
fistpl
adc
jge
lret
cmc
cmp
adc
xchg
inc
out
shlb
out
jo
push
jns
sub
imul
int3
sahf
pop
cmp
cmpsb
cmc
sbb
xchg
xor
loope
test
pop
sbb
into
jle
leave
iret
std
shl
xor
or
mov
lods
je
test
idiv
cmp
ror
hlt
xlat
adc
mov
push
xchg
das
das
movsl
push
push
xorb
cli
inc
loopne
xor
mov
push
lahf
sti
push
fwait
adc
jl
cmpsb
stos
stos
ljmp
fsubs
adc
in
lea
jae
adc
and
std
xor
clc
lods
popl
ja
scas
sbb
add
mov
jbe
add
xchg
jbe
xor
lret
decb
mov
lret
pmullw
adc
adc
loop
pushw
mov
push
adc
add
mov
mov
lahf
arpl
xchg
cli
mov
add
lock
icebp
mov
bound
js
inc
test
mov
jbe
xchg
mov
lea
enter
shl
push
inc
fisttpll
sbb
aaa
out
ds
xor
cmp
stc
push
lret
aaa
pop
mov
xor
mov
sub
jg
cmpsl
xchg
popa
xor
hlt
pop
xchg
or
mov
cmp
sub
adc
push
add
fst
fs
push
das
jno
and
daa
jb
adc
stos
ret
pop
adc
fisttps
add
pop
jb
dec
pop
loope
lods
adc
jo
cmp
dec
pop
stos
cmpsb
mov
filds
dec
mov
sub
xor
xchg
sbb
rcrb
push
push
jnp
push
dec
icebp
leave
cli
ds
and
loop
adc
mov
push
stc
sbb
loopne
ja
push
sbb
incl
cmc
cmp
jnp
fs
push
add
dec
or
jmp
insb
outsb
lret
jae
outsb
mov
inc
lds
pop
adc
or
pop
and
stc
inc
xchg
and
test
jne
sbb
sbb
cmp
adc
and
or
scas
push
popa
js
aas
nopl
push
ret
stos
sub
mov
jne
mov
lods
inc
int
add
ret
pop
add
xchg
ljmp
adc
rcrb
ret
mov
sbb
bound
enter
or
jns
pop
sbb
stos
jp
cmp
pop
or
jbe
xchg
xor
cltd
push
int
or
nop
jno
jecxz
pop
mov
push
dec
imul
ret
cmp
hlt
cs
int
rcll
je
sub
add
pop
mov
inc
int3
adc
add
shrb
fisubs
xchg
cmpsl
mov
xlat
test
add
cmp
cltd
xchg
sub
loopne
jbe,pt
or
cs
cmp
cmp
add
popf
xchg
mov
pop
add
leave
mov
fucomp
mov
mov
or
jle
jbe
xorb
xchg
xchg
out
mov
mov
ds
int3
pop
movsl
in
outsl
adc
lods
push
int3
lds
xchg
ds
int3
lock
adc
cmp
cmp
sub
bound
xchg
cmp
mov
pop
cmc
mov
in
sbb
cs
pop
cli
xchg
movsb
and
inc
aad
clc
jle
fwait
push
cmp
adc
pop
lods
cmc
jne
sub
jb
test
aam
add
mov
add
lods
sub
jecxz
cmp
in
jo
xor
xor
lock
in
ja
daa
push
std
fnsave
or
mov
mov
xchg
mov
add
lds
faddp
inc
xor
gs
loopne
jle
aas
xchg
flds
xor
and
sub
and
mov
mov
sub
push
jnp
or
push
movsb
xchg
dec
outsl
sub
pushf
fwait
je
arpl
rdpmc
aaa
cwtl
std
clc
nop
mov
sbb
dec
and
addl
jl
push
add
fldcw
push
or
push
inc
cmp
adc
adc
pop
sbb
xchg
or
sbb
push
pop
daa
xchg
aaa
test
inc
xlat
fnstenv
in
repz
xor
outsl
pop
dec
mov
stos
add
sbb
inc
das
mov
lods
outsb
or
push
js
dec
and
lret
xchg
test
imul
and
add
jge
out
fildl
cltd
xor
cmp
push
or
dec
and
lahf
or
pushf
inc
jbe
repnz
negb
test
and
push
mov
xchg
fadds
in
fcmovne
repz
mov
xchg
cmp
mov
pop
xchg
fisubrs
out
fdivs
xchg
xchg
nop
inc
ret
cltd
ror
or
xchg
add
xor
inc
pop
popf
pop
popf
and
push
in
imull
and
push
fwait
int
mov
mov
mov
or
sahf
cmp
cmpsl
dec
mov
dec
scas
in
push
jge
cli
fidivrs
and
out
adc
mov
mov
jge
repnz
fstpl
and
xor
and
bound
aam
cltd
pop
jecxz
lcall
jb
sbbl
out
movsl
cmc
jo
jb
out
shlb
popa
xchg
out
inc
add
jge
rcll
test
icebp
fnstenv
cmpsb
add
pop
xor
fs
mov
jae
bswap
pop
shrl
fdivr
sbb
pop
jmp
and
aad
movsb
aaa
test
push
stos
ss
imul
int
sub
push
popf
insl
jbe
cltd
into
dec
lods
les
fiaddl
mov
sbb
jmp
ret
cwtl
or
jecxz
sarb
xor
or
jge
mov
xchg
xchg
fisubl
push
mov
jnp
mov
lds
mov
rorl
shlb
insb
loop
add
jge
subl
and
repz
fstl
mov
in
cltd
add
imul
cmp
hlt
es
xorl
subb
mov
enter
push
mov
push
cltd
sbb
xchg
jnp
adcb
pop
xlat
sbb
jns
sbb
sbbb
cmpsb
and
push
xor
mov
inc
jecxz
xlat
pop
and
sti
cmp
dec
pop
lret
pop
xlat
push
dec
stc
data16
shl
jecxz
sti
add
mov
int
dec
jp
fistpll
scas
rcrb
test
push
dec
vxorps
jecxz
adc
jle
push
mov
stos
dec
je
push
xor
pop
mov
adc
xlat
push
aam
mov
arpl
nop
push
dec
test
pcmpgtd
cmp
dec
push
icebp
push
ret
or
jle
add
mov
hlt
lock
mov
fwait
mov
push
loope
mov
push
into
cmp
aam
mov
jmp
xorb
dec
jecxz
loope
dec
jmp
inc
stos
pop
dec
inc
les
rorb
add
jle
insb
orl
lock
test
dec
sarl
push
leave
aad
aaa
bound
in
mov
bound
push
xchg
pushf
cmp
adcb
stos
jne
cli
shl
mov
inc
push
fwait
movsl
lods
inc
dec
test
ss
hlt
mov
dec
mov
xor
xlat
pusha
mov
enter
push
push
fsubs
fdivs
sti
hlt
pop
pop
iret
push
loopne
jnp
mov
jne
and
popf
xchg
ficoms
mov
cmpsb
lret
jl
push
dec
ds
cltd
sbb
lock
mov
nop
rol
in
popa
aam
out
je
xlat
add
jg
sti
mov
pushf
mov
inc
sahf
psubusb
push
lahf
stos
cmp
mov
fidivrs
ret
int3
adc
inc
push
insl
adc
xchg
rcrl
test
stos
xchg
ret
mov
push
cmp
lahf
mov
ja
fsubr
in
cmp
in
dec
pop
outsb
xchg
icebp
push
adc
push
cmp
pop
pop
inc
movsl
sbb
mov
js
xor
fbld
fisttps
jp
fsubs
push
jmp
scas
fistl
jno
popa
pop
mov
fistpl
fisttpll
cmc
push
jns
push
shlb
je
jns
push
add
out
xor
cld
lret
jp
pop
mov
in
movsl
or
or
sub
dec
push
shl
arpl
dec
fsubrs
inc
lock
or
inc
lods
mov
sbb
xchg
notb
mov
cs
push
movsl
xor
scas
or
mov
xor
call
pop
sub
xor
pop
ror
repz
sub
add
int3
mov
inc
push
mov
arpl
aam
int3
or
bound
in
mov
enter
jbe,pt
mov
sbb
sbb
xchg
cltd
adc
sub
movsb
adc
adc
loopne
push
fstp
stos
int3
push
sub
pop
in
fistpll
xchg
cs
rcrl
sti
in
jmp
call
incl
imul
nop
mov
lea
das
jno
addr16
xchg
incb
jo
mov
adc
sbb
adc
pop
dec
ja
xor
jnp
js
pop
call
pop
out
data16
pushf
lods
insb
movsb
pop
mov
movsb
add
cmp
and
ret
mov
jmp
in
xchg
je
add
jmp
lahf
push
aas
ds
jae
cmc
icebp
xchg
je
jno
push
add
fsubs
loope
loopne
sub
clc
aad
push
xchg
imul
add
mov
leave
cmp
seta
xor
sub
divl
dec
pop
rorb
lock
ja
loope
shll
cld
cmp
jne
sbb
test
int3
ret
loope
je
add
and
daa
push
pop
pop
ss
push
xchg
or
leave
fildl
std
pop
std
insl
mov
fcompl
cmc
xor
lcall
pop
into
sti
push
lret
mov
xor
jle
pop
loopne
out
fcomi
inc
out
mov
jo
pop
stos
popa
mov
pop
jae
or
imul
cmp
sarb
cmp
pop
int
mov
sbb
iret
repnz
daa
pop
popf
in
lods
lcall
and
ss
and
adc
movsl
orb
sbb
sub
aam
dec
dec
or
insb
pushw
lcall
pop
pop
fucom
jne
inc
rolb
jbe
add
addb
sahf
aad
es
xor
std
or
mov
orb
jne
jbe
or
pop
sub
push
in
pop
cli
rclb
mov
aad
add
sbb
mov
mov
cmp
fistps
bound
jp
fdivrl
xlat
add
in
movsl
jmp
daa
pusha
scas
repnz
jae
ficoml
fcoml
or
jne
push
xchg
jmp
xor
sbb
jns
sub
add
push
push
sbb
push
sbbb
mov
test
cs
nop
push
mov
bound
outsl
jbe
fbstp
jns
mov
jmp
push
pop
xor
add
pop
mov
push
and
movsl
dec
dec
das
xchg
adc
and
add
in
inc
and
xchg
aas
mov
inc
lods
mov
or
stos
sbb
inc
aaa
or
imul
push
je
add
in
adc
fs
xor
mov
sub
mov
sub
js
cli
pop
mov
and
sbb
push
cmp
loopne
ljmp
xchg
sub
xor
inc
in
je
stos
sbb
fcoms
fwait
jno
popf
sarb
pop
push
add
push
ror
jbe
sub
icebp
mov
jg
xchg
xchg
inc
stc
xchg
pop
jecxz
push
mov
addr16
mov
mov
and
jns
and
cmpsb
out
and
sub
and
imul
mov
inc
js
call
inc
mov
inc
ds
outsl
out
daa
jbe
or
jge
push
movsb
je
movsl
imul
mov
fistps
cmp
out
add
adc
js
inc
scas
out
inc
pop
mov
mov
stc
mov
lea
jbe
mov
in
scas
ret
pop
inc
fcmovu
sti
lret
lods
fnstcw
and
cmc
jmp
sub
arpl
jecxz
out
arpl
xchg
dec
mul
sub
fistpll
add
pop
jp
mov
loopne
mov
out
mov
mov
popf
sti
fwait
into
pushf
lods
out
mov
add
fidivs
pop
je
xor
orb
and
inc
cmp
lcall
repz
in
mov
push
lret
xchg
out
mov
nop
call
jne
popf
bound
imul
punpckhwd
aas
mov
cmp
inc
dec
pop
addl
mov
cwtl
fistpll
lret
mov
test
mov
aas
or
cmp
pop
jge
xchg
pop
mov
xor
or
pop
insb
int
mov
push
pusha
adc
aas
or
scas
fldenv
jp
adc
dec
sbb
adc
aam
inc
mov
mov
outsb
je
push
addl
inc
bound
jp
inc
pop
in
push
pop
xchg
jno
hlt
cmp
test
sbb
test
aam
iret
test
orl
sub
push
push
cmp
xor
sub
pushf
dec
push
icebp
xor
movl
mov
and
add
es
mov
sahf
fwait
fwait
jecxz
lea
mov
mov
pop
ljmp
divb
mov
pop
jle
add
sub
dec
mov
cwtl
xchg
pop
or
cmp
jb
dec
mov
pop
fs
ja
and
shrb
add
je
push
mov
pusha
inc
hlt
mov
in
cmp
push
jns
pop
push
sar
or
dec
jno
fistpl
inc
mov
cld
aad
push
cld
mov
lods
push
ss
add
xor
dec
mov
je
loop
mov
aaa
test
lahf
lret
test
lea
insb
mov
mov
inc
push
int
xchg
aas
shlb
push
jb
and
or
push
mov
add
out
cmc
jae
dec
cmp
das
cmpsb
cltd
cmp
pop
aad
das
pusha
gs
fldl
les
pop
inc
jo
cli
lea
mov
jo
sub
enter
jnp
sub
xor
xchg
add
dec
add
or
jno
xchg
cmc
inc
mov
and
adc
hlt
out
shl
add
mov
sbb
xor
xchg
sti
mov
mov
testb
xor
fwait
jle
xchg
dec
shlb
add
test
fs
cmp
xor
mov
cmp
negl
adc
lods
sbb
into
mov
not
sub
mov
mov
or
xchg
or
inc
call
jo
mov
imul
loopne
jp
pop
outsl
ljmp
mov
insl
add
out
and
add
sub
lods
pop
pop
pop
popf
cs
push
iret
xchg
inc
int
sbb
int
dec
pop
mov
shll
xchg
fwait
xor
mov
stos
not
mov
out
rcrl
and
push
cltd
sbb
jecxz
mov
jmp
cwtl
xchg
fwait
push
out
pop
sub
notl
lea
mov
jae
and
or
dec
stos
outsb
xor
test
mov
rcll
adc
add
sbb
lret
jge
push
int3
add
sbb
inc
mov
fisttpl
jbe
rorb
sub
sbb
sbb
sahf
das
fwait
shrb
lock
in
jp
push
fsubrs
cs
cwtl
xchg
dec
jae
jae
jg
push
or
and
mov
rclb
dec
or
stos
xchg
push
adc
add
mov
and
shl
ljmp
repz
or
cmpl
sub
push
loope
inc
lods
or
test
incl
jnp
mov
insb
negb
repz
pop
aas
adc
fistps
insb
movsb
xchg
movsb
push
sbb
mov
shr
pop
inc
mov
rorb
xor
jmp
jo
aam
leave
je
test
push
and
dec
xor
jge
ja
sbb
enter
pop
xchg
mov
fisttpl
pushf
push
mov
aaa
and
push
xlat
out
xlat
fistpll
pop
lcall
fwait
rorl
out
push
outsl
pop
shrl
add
imul
mov
out
popa
sbb
outsb
jne
into
fmull
addr16
or
icebp
test
xchg
cs
cmp
mull
xor
pop
shlb
push
cmc
test
mov
sub
xor
dec
jnp
lahf
mov
add
test
les
adc
sbb
hlt
pop
sarb
mov
pusha
in
in
mov
pop
stc
ds
and
xor
mov
outsb
and
sub
ret
pop
xlat
addr16
pop
add
xor
push
adc
cmp
jmp
jae
jo
aas
data16
add
cmp
and
lea
push
mov
and
test
leave
jle
icebp
in
adc
sub
and
sbb
mov
push
jl
mov
rolb
stos
xchg
lea
xchg
push
nop
test
dec
outsl
mov
dec
jo
sbb
psubw
test
iret
ret
push
cmp
test
jg
sub
aam
cmp
inc
lods
lcall
mov
out
scas
pop
cli
and
push
inc
xorl
popf
sub
int3
sub
dec
mov
jbe
inc
addl
cwtl
pop
jl
lods
and
dec
push
or
and
xor
jnp
add
addr16
pushf
or
daa
and
daa
dec
mov
adc
xor
jne,pt
cli
pushl
adc
fiaddl
scas
rorb
mov
stos
mov
loope
xor
mov
sahf
imul
xor
mov
add
mov
jnp
inc
lahf
mov
mov
movsb
xchg
lret
jnp
cmpsb
jae
mov
mov
inc
mov
cmc
cmpsb
imul
lock
mov
movsl
pop
sub
dec
xchg
and
mov
push
addb
incb
xchg
mov
hlt
xor
pop
or
jle
ja
push
sub
jb
mov
inc
jno
rcrb
mov
in
in
mov
loop
mov
mov
shr
ret
data16
or
or
popf
sub
aad
and
shll
xchg
xchg
mov
lahf
imul
ja
das
clc
scas
sbb
mov
or
or
fistps
pushw
pop
cltd
jmp
clc
in
fimull
jg
ss
inc
pop
inc
paddq
rol
or
dec
dec
add
lret
xor
into
loope
mov
mov
in
andl
mov
sbbb
xor
movsl
jnp
pop
lock
xchg
push
or
js
and
in
sbb
jne
sub
and
push
les
ljmp
in
rorl
dec
daa
aas
out
iret
add
leave
dec
shlb
sarb
ds
push
push
inc
push
fimuls
add
aam
xchg
mov
pop
inc
out
pop
inc
xor
subps
icebp
jge
clc
xchg
xor
mov
adc
js
pop
cmp
add
movsl
inc
mov
inc
jmp
sub
jno
insb
call
test
test
shrb
push
mov
bound
adc
mov
cld
fs
repz
les
nop
aad
mov
inc
xchg
mov
push
test
dec
cmp
jnp
lret
fidivs
fwait
pop
insl
mov
aad
add
push
lock
ret
mov
add
adc
cmp
push
jl
xchg
dec
jge
fidivrs
mull
rcrl
int
loop
pop
sbb
call
cmp
cmpl
subb
fisubrs
push
sahf
stc
cmp
inc
outsb
xchg
pop
lahf
xor
sbb
popa
ljmp
cmp
dec
xlat
mov
ljmp
inc
and
bound
xor
loopne
dec
xor
bndstx
cld
cmp
ja
sarb
sub
cwtl
ds
inc
pop
push
int
leave
ja
ret
out
addl
sub
scas
dec
imul
jne
repz
out
call
movsb
jl
mov
jecxz
adc
scas
outsb
cmc
adc
xchg
push
fildl
mov
pop
js
pop
jge
cmpsl
adc
notl
jo
push
xor
fisubs
outsl
orl
mov
cli
xor
out
mov
out
idivb
shl
stos
daa
in
test
and
enter
ljmp
ja
xor
push
pushf
xchg
and
movsl
and
in
add
ss
loop
int3
mulb
cs
je
lcall
dec
aad
enter
repnz
insb
shrl
inc
mov
sbbl
ja
push
sahf
push
or
cmp
and
cli
es
sub
cmp
ror
es
loope
jmp
stos
popl
add
loope
movsb
mov
sbb
sbb
jbe
cmp
sahf
ret
rolb
rcrb
and
mov
xor
pop
jg
jecxz
mov
lea
clc
pusha
popa
mov
cli
pop
xchg
ja
in
std
pop
cmp
push
push
mov
pop
jne
mov
into
popa
notl
mov
adc
sub
pop
xchg
not
dec
jl
or
out
inc
hlt
stc
mov
std
mov
je
add
xchg
cwtl
out
mov
inc
dec
fs
mov
stos
mov
inc
subb
cmp
cmp
shll
ret
jno
outsb
int3
ljmp
cmp
daa
pop
xchg
fbstp
movsb
cwtl
sub
or
adc
imull
inc
mov
daa
aas
in
mov
xchg
pop
cmp
xchg
xor
jno
adc
cmp
test
pop
scas
jnp
daa
int
loope
push
mov
push
mov
xchg
pop
fisubs
gs
enter
mov
cmpsb
push
mov
ss
push
sub
divl
inc
mov
jo
std
aas
out
leave
xlat
mov
cmp
inc
push
std
data16
cltd
pop
test
mov
rolb
sbb
jg
xlat
jae
push
push
pop
mov
je
fnsave
dec
or
xchg
shll
shlb
mov
fnstcw
fcompl
dec
mov
or
dec
push
lock
cli
inc
pop
xor
lock
inc
add
fs
adc
add
mov
jns
adc
dec
xchg
stos
gs
movsl
jl
push
aam
mov
gs
push
push
xlat
and
xor
aaa
sub
push
dec
iret
mov
mov
lret
adc
jb
shrb
sub
xor
jl
mov
lahf
xchg
enter
cmpl
fs
xchg
fsubr
insl
xchg
lret
ja
clc
pop
in
or
sarb
je
mov
fsubl
pop
cwtl
lahf
sbb
xchg
mov
jecxz
pushf
pop
stos
rolb
testl
test
out
jp
add
inc
cmc
mov
ret
jbe
fdivs
push
xchg
xor
jecxz
push
loop
sbb
rcll
inc
push
mov
mov
sub
push
fistps
mov
jl
mov
mov
arpl
jbe
sbb
cmp
mov
xchg
lods
js
das
or
bsr
mov
push
and
mov
xor
mov
mov
mov
adc
mov
and
repnz
fbld
pop
push
ret
mov
xchg
lea
hlt
ja
fildll
dec
addr16
bound
sti
popl
jo
xchg
call
adc
jo
and
inc
mov
outsb
aam
lods
out
out
cs
insl
xchg
mov
push
mov
fiaddl
add
xlat
fidivs
xor
jmp
sbb
mov
jno
push
or
pop
cwtl
push
bound
ss
lods
jmp
bound
inc
cmpl
pop
push
pop
adc
out
xor
test
mov
out
shrl
stos
jmp
mov
decl
adc
rcrl
test
pop
mov
ficoms
cs
dec
fistpl
jo
push
or
add
mov
int
pop
jno
jb
nop
pop
xor
fwait
in
cmp
lds
sub
stos
add
add
rorl
jae
dec
movsl
ret
and
in
lahf
add
rorb
test
sub
fldt
lret
push
movsl
icebp
sahf
dec
sbb
je
into
xchg
mov
xor
dec
mov
in
inc
sub
mov
xchg
mov
cmpb
sbb
pop
es
xor
jle
inc
movsb
aam
jne
sahf
and
jl
pop
push
aaa
mov
outsb
das
bound
pop
add
push
cmpsl
xor
cli
sub
mov
push
xor
icebp
and
lods
ret
sbb
inc
cmpsl
inc
and
and
mov
das
loop
adc
hlt
sahf
push
es
notb
dec
movsb
pop
sbb
jmp
in
aam
fwait
dec
ret
add
dec
jmp
and
add
mov
popf
pop
push
mov
jmp
in
ret
incb
fcomps
arpl
pusha
xchg
sbb
adc
dec
xor
cmpsb
popa
inc
pusha
cli
gs
and
rcr
xor
loopne
and
sub
cmp
popa
push
mov
mov
inc
iret
scas
fxch
inc
add
test
push
fbstp
sbb
mov
mov
loope
mov
pusha
cli
mov
jns
lret
push
out
xchg
adc
mov
and
dec
popl
pop
pop
andl
xchg
js
ja
pushf
jns
inc
inc
rcrl
cmp
jge
mov
add
pop
adc
cmc
add
jo
mov
aam
xchg
jb
pop
xor
mov
inc
jl
into
and
sub
jb
repz
ret
and
out
pop
movsb
stc
in
xchg
rorl
push
repnz
loop
mov
lods
push
jecxz
das
mov
imul
push
cmpsl
xor
jae
inc
je
mov
add
add
test
mov
adc
ja
xchg
cmp
shlb
outsb
subl
frstor
test
add
sahf
dec
mov
je
scas
mov
ret
lods
and
mov
arpl
sub
push
push
stc
mov
mov
pop
pop
sahf
movsl
leave
push
je
mov
dec
sub
je
repnz
gs
cmp
sub
jae
mov
mov
inc
bound
std
jg
and
into
sub
cmp
mov
xlat
scas
inc
fists
pop
scas
enter
push
cmp
ret
popa
push
mov
xor
mov
fisubrl
jb
xor
es
test
icebp
xchg
mov
jnp
addb
mov
push
bound
mov
push
cmp
xchg
jbe
or
pop
push
mov
adc
jo
and
jmp
cmpsb
push
mov
mov
shrb
jg
xchg
jp
sbb
xor
enter
lcall
inc
icebp
fs
mov
ljmp
stos
xor
mov
sub
xchg
dec
dec
fisubrs
pop
icebp
push
lods
iret
stos
push
insl
aad
cmpsb
and
push
scas
cltd
and
pushf
test
dec
clc
ret
jge
dec
in
jmp
rcrl
psubd
pmaddwd
xchg
sbb
sti
dec
push
jmp
addr16
fsubs
pop
clc
sti
pop
orl
stos
xchg
push
jae
scas
das
pop
add
lock
test
neg
xchg
shll
cwtl
push
inc
std
sbb
xchg
test
iret
icebp
push
fldl
loopne
sbbl
cmpsb
popf
jle
mov
cmp
js
pusha
in
jge
sbb
push
cmp
aas
test
stos
ret
sti
cmp
adc
mov
repz
dec
fs
push
mov
mov
pop
out
int3
sub
adc
les
aaa
ss
int3
data16
xchg
stc
xchg
out
fbstp
pop
mov
xchg
cltd
pop
ja
pop
fcmovnbe
mov
mov
lods
fwait
loopne
lds
or
ljmp
repnz
mov
sub
pop
rcr
jne
aad
mov
js
out
or
cmp
adc
jecxz
jmp
push
fiadds
sub
pop
leave
ret
rclb
stos
cmp
lahf
pop
repnz
fcompl
notb
fisubl
xchg
push
and
sub
lcall
out
loop
mov
out
into
and
pop
lret
or
rcrb
xor
adc
fdivrp
hlt
mov
dec
insl
mov
jp
adc
jmp
out
xchg
call
pop
mov
push
in
lock
and
inc
rclb
mov
loop
jnp
fnsave
fadd
jbe
shll
or
jge
ret
mov
push
pop
test
or
mov
lcall
sbb
imul
mov
jae
leave
push
xor
pop
sub
arpl
or
sbb
fcmovb
bnd
shr
xchg
xchg
mov
movsl
inc
mov
mov
in
fstps
inc
addl
scas
adc
add
das
in
inc
lea
push
shr
loope
and
pop
pop
movl
xchg
xchg
mov
and
rcll
roll
jp
int
jecxz
cmp
cld
fcomps
andb
pop
or
pop
fbstp
jge
xchg
insb
enter
out
xchg
pop
out
push
or
mov
js
out
inc
idivl
fsubrl
ljmp
imul
subl
sub
iret
mov
xor
inc
pop
sub
ret
into
out
push
imul
mov
data16
pusha
push
or
bound
fcomip
test
jg
add
aas
push
mov
clc
jo
arpl
in
test
xorb
cwtl
bound
loope
in
sub
adcl
jecxz
cmp
aaa
lods
pop
adc
and
sub
std
jle
sub
sbb
inc
lds
sti
lock
addr16
sbbl
push
out
in
scas
repnz
mov
lahf
push
loopne
cld
inc
arpl
xlat
sbb
push
aam
adc
lret
jae
sub
adc
push
pop
xlat
popa
mov
pop
addr16
jl
fisttpl
fisttps
into
fbld
sarb
jmp
jmp
ljmp
xchg
xchg
pop
hlt
int
and
bound
mov
jmp
or
pcmpgtb
and
sarl
loope
in
sub
jge
es
pop
test
std
sbb
das
push
push
mov
movsl
inc
and
lahf
popa
mov
adc
fistps
or
push
jg
test
pop
or
stc
scas
adc
mov
xchg
xor
dec
adc
jl
dec
push
add
imul
das
stc
pop
in
and
or
mov
rorb
hlt
test
inc
mov
pop
add
sub
and
fs
pop
inc
sahf
mov
mov
mov
mov
mov
lea
es
sub
mov
mov
rdpmc
xchg
or
insb
sub
cmpb
xchg
fs
push
cmp
or
imul
les
and
and
cltd
cli
adc
push
notl
sub
orl
pop
cmp
shrb
adc
mov
les
repnz
movsl
mov
sub
jae
inc
inc
dec
dec
stos
inc
loop
cli
repz
add
inc
adc
call
fistpll
xchg
jg
lret
xchg
pop
stos
repnz
pop
lahf
ja
ret
xchg
montmul
cmpsb
inc
push
pop
roll
inc
and
or
cmp
push
jbe
movsb
sub
inc
popf
shll
pop
rclb
or
adc
sbb
cltd
inc
cltd
inc
pop
stos
cmpsb
and
rolb
mov
mov
pop
std
cmp
call
stc
jo
cmp
sub
sbb
aaa
lods
out
aas
and
sbb
scas
clc
push
mov
arpl
jo
in
ss
insl
cmpsl
cmp
js
mov
pop
or
inc
dec
jecxz
loop
aas
adcl
daa
mov
bound
js
add
ljmp
je
addl
test
or
mov
data16
clc
pop
sub
fnstenv
iret
jge
dec
sbb
sbb
mov
ja
jmp
dec
imul
jg
ss
mov
fidivl
cli
lods
xchg
iret
mov
into
sbb
inc
in
cwtl
pop
xor
sbb
daa
push
ja
bound
pop
push
ja
mov
mov
sbb
add
mov
aam
sub
stos
or
ja
lds
imul
dec
fmull
or
mov
inc
mov
xchg
adc
add
addr16
cli
lods
aad
sbb
sub
cltd
setb
scas
out
mov
pop
mov
les
clc
xchg
pushf
shlb
push
insl
mov
or
lods
pop
mov
or
rcr
test
sti
shl
mov
xchg
sub
rorl
popa
pusha
mulb
mov
and
xor
icebp
mov
inc
cmp
iret
xchg
jmp
push
roll
push
xor
mov
gs
inc
rcr
imul
fcompl
mov
mov
or
fnstenv
jmp
jnp
push
mull
inc
movsl
inc
je
or
popf
add
sub
adc
pushf
sbb
sbb
in
inc
dec
cli
shrl
outsl
adc
sbb
or
out
push
mov
into
insb
out
pop
movsb
cld
mov
sub
orb
mov
test
in
fdivrs
mov
push
inc
sbb
sahf
xor
jg
rolb
pop
test
xchg
aaa
xorb
pusha
add
shrb
pusha
lahf
xchg
iret
xor
fs
pop
xor
lea
out
mov
lcall
mov
pop
inc
adc
cli
or
jmp
push
rorl
lea
insl
fwait
hlt
xorl
lret
push
out
push
cld
cmpsl
arpl
insb
clc
out
pop
pushf
inc
xor
mov
xchg
sbb
dec
push
jno
dec
dec
movsb
sub
mov
dec
andl
subb
cmp
push
jo
pop
int
pop
push
ljmp
data16
xlat
jmp
jns
sarb
sbb
push
mov
mov
jnp
adc
std
ljmp
and
jne
pushf
dec
sti
in
xor
in
sbb
shlb
xchg
push
ds
inc
xchg
xor
pop
data16
dec
fcoms
mov
aaa
xchg
hlt
mov
pop
pop
bound
sbb
sbb
std
push
jecxz
cmpsb
lcall
cmc
sar
pop
js
ret
js
sub
mov
mov
aaa
lret
ret
rcll
clc
shl
cld
inc
fsubrl
je
adc
add
imul
sub
pusha
test
aad
bound
push
sub
incl
dec
mov
dec
lds
dec
mov
cmp
aaa
mov
je
jnp
hlt
cmp
jg
ljmp
aad
lcall
fdivr
xchg
adc
cmp
fs
loop
out
jo
cmp
cmp
or
js
sbb
lret
test
popf
mov
popa
pop
fnstsw
dec
sub
sub
not
add
mov
subb
clc
cld
bound
mov
enter
loope
loope
mov
inc
insl
loop
jecxz
cmp
jecxz
jmp
fsub
pop
mov
or
fs
and
call
pop
icebp
testb
mov
xchg
pmaxsw
loop
lahf
xlat
mov
mov
mov
sbb
nop
mov
add
pop
mov
lret
pop
or
icebp
jge
mov
imul
pop
in
mov
xchg
out
adc
dec
movsl
adc
cmpsl
mov
sbb
jmp
test
push
lds
and
aad
cli
adc
ror
gs
mov
int
lods
mov
stc
xor
lcall
xchg
stc
xor
xor
aam
add
js
inc
insb
sub
sub
cmp
mov
sbb
dec
into
xchg
inc
push
xchg
inc
mov
ja
push
rolb
icebp
insb
sub
es
decb
ds
jecxz
xchg
lods
cmp
es
sqrtps
out
sti
mov
adc
aam
stos
negb
push
call
invd
pushl
cld
mov
inc
mov
lahf
sub
mov
daa
jb
int3
lds
pop
sub
jnp
mov
mov
lock
out
out
dec
mov
and
mov
or
pop
cmp
push
xchg
repnz
daa
xor
adc
mov
inc
in
and
mov
xchg
adc
push
push
sub
or
lahf
mov
push
sbb
popf
clc
cmp
mov
cmpsl
scas
fcomps
test
pop
push
dec
cmp
lahf
fiadds
int3
gs
jle
mov
mov
out
pusha
adc
test
cltd
xchg
scas
aas
ucomiss
inc
out
dec
mov
push
test
lds
mov
add
xor
push
pop
lock
xchg
push
mov
xchg
ret
jno
fs
fstpl
dec
add
popa
aam
mov
stos
inc
sbbl
cltd
jns
mov
inc
mov
mov
enter
test
aam
or
mov
cmp
pusha
mov
xchg
shrl
push
and
xchg
cmp
xchg
mov
inc
lcall
xchg
ret
mov
mov
jge
add
out
fwait
cmp
jmp
jmp
ret
in
push
data16
popf
sub
scas
ret
bound
or
shll
xor
arpl
data16
push
push
loopne
xlat
mov
lahf
xlat
int3
adc
cmc
pushf
sbb
cmpsl
ljmp
cld
cmpsl
adc
jae
inc
out
aam
fisttpll
mov
sub
jnp
mov
rclb
arpl
mov
xor
push
sets
fistpl
inc
cwtl
std
or
mov
lods
push
in
repnz
rolb
in
repnz
add
dec
and
aaa
inc
pusha
popf
and
enter
fistpll
push
test
ffree
mov
stc
lods
sub
daa
adc
leave
pop
push
add
pop
xchg
xchg
mov
pop
ljmp
pop
aad
in
lock
sbb
pop
add
out
jmp
xchg
loop
icebp
ret
mov
jns
xor
lcall
xchg
aas
int
cli
jl
mov
jbe
arpl
cmp
fisttpl
stc
xchg
in
clc
call
mov
inc
stos
std
loopne
gs
lcall
mov
xchg
fsubrp
jecxz
pop
pushf
adc
arpl
cli
rolb
sti
ret
addb
pop
xorl
dec
mov
pop
jp
out
inc
push
ds
and
leave
mov
sub
stos
enter
int
jne
fdivr
ret
ret
stos
adc
push
insb
pushf
sti
scas
clc
xchg
push
std
xchg
sub
pop
xchg
dec
mov
out
test
mov
mov
cmp
inc
in
aas
sbb
adc
jae
leave
loope
jge
mov
add
pop
adc
or
enter
add
and
mov
scas
dec
mov
ja
test
movsl
xchg
adc
push
js
mov
cmp
lds
into
fs
aad
leave
verw
jbe
leave
aad
pop
movsl
das
sub
dec
imul
adc
sbb
push
in
push
fcompl
dec
dec
stc
imul
xor
les
mov
xchg
xchg
std
movb
add
sbb
loopne
dec
or
out
daa
adc
cmp
ja
out
sub
cmp
loopne
adc
lcall
es
outsl
fnstcw
sub
adc
dec
call
int
jp
xchg
xchg
aad
in
stc
jb
lock
and
pop
in
mull
sarl
cmp
fdivrp
mov
pop
fidivs
cs
xor
or
jmp
fs
xor
in
jg
xlat
xlat
or
mov
push
pop
pop
pop
or
inc
icebp
ret
pop
ljmp
rcrb
iret
ret
pop
ja
jnp
pop
xor
stc
test
aad
pop
push
adc
int3
mov
movsl
popa
ficoms
je
mov
inc
fstpl
jle
mov
cmp
idivb
xor
fcomip
sub
and
jns
test
xchg
in
in
sub
pusha
cltd
push
and
aas
xor
xor
push
jbe
inc
jl
mov
loopne
loopne
dec
es
lcall
movmskps
cs
jne
mov
std
test
loopne
sarl
mov
js
xchg
enter
push
mov
mov
hlt
test
sti
mov
aaa
inc
jle
scas
mov
xor
mov
not
or
jg
popf
sub
xor
pop
cmp
outsl
jnp
iret
lcall
inc
jnp
xchg
and
add
pop
imul
sti
jae
loopne
xchg
sbb
sbb
mov
daa
mov
sbb
cli
dec
jle
outsl
int
aaa
mov
fwait
iret
mov
fnstcw
aas
pop
movsl
lock
push
mov
sub
ja
fistpll
pop
sbb
adc
rclb
nop
adc
inc
and
shrl
and
xchg
mov
or
out
movsb
jno
fstpt
gs
mov
inc
sub
cwtl
mov
outsb
pop
ljmp
adc
pop
mov
cmp
fiadds
divb
stc
push
jns
mov
jno
mov
testl
sbb
repnz
std
adc
pushl
movsb
stos
cmc
outsl
fwait
aas
rol
out
add
mov
adc
xchg
mov
in
dec
test
int3
inc
push
push
xchg
mov
jo
sub
aad
xor
ja
ret
push
mov
xchg
jbe
xlat
and
mov
mov
and
call
mov
lret
sarb
pop
dec
xchg
shl
in
aaa
pop
out
bound
in
sbb
jle
fdivl
pop
loop
pop
addb
lock
inc
inc
iret
mov
loopne
loope
gs
mov
and
ja
sarl
cmp
bnd
fstps
jl
add
push
mov
mov
je
repnz
add
icebp
inc
aas
je
out
nop
call
stos
fldenv
aam
lcall
dec
mull
fimuls
je
icebp
jne
push
jp
fstpl
pop
mov
xlat
insl
cmp
les
jecxz
leave
rcll
xchg
jp
popa
cmp
into
xorl
adc
out
push
pop
xchg
adcl
mov
clc
mov
xchg
mov
push
sub
sbb
cmp
lds
inc
fldenv
add
mov
aas
jb
mov
test
dec
sbb
out
mov
arpl
es
cmp
dec
mov
sub
es
stos
dec
rcrl
lahf
dec
movsb
pop
jle
in
hlt
aaa
cltd
add
shrl
mov
xchg
mov
mov
mov
jl
loope
int
mov
fisubrl
insl
pop
pop
clc
dec
paddd
movsl
ret
cmp
addr16
out
pop
add
call
inc
stos
imul
cmp
stos
jle
roll
sbb
sarb
add
dec
rcrb
sti
pop
jp
idivl
jl
jo
or
pop
xchg
insb
push
mov
in
mov
mov
stos
pop
pusha
roll
push
das
adc
xchg
jne
in
push
dec
dec
dec
into
dec
pop
movsb
gs
aad
xchg
and
push
cmp
roll
bound
loopne
xchg
stos
icebp
dec
ret
cs
movsl
sub
cltd
out
mov
mov
cmp
incb
xor
outsl
jnp
fstpt
rcrb
ljmp
mov
mov
jne
sub
jge
pop
xchg
mov
testl
test
add
or
mov
xor
stos
add
pop
insb
mov
and
cmc
into
sbb
mov
inc
jecxz
xchg
push
jnp
js
mov
xchg
ret
loopne
dec
outsb
adc
popf
mov
movsb
outsb
jbe
scas
cmpsl
xor
dec
out
xor
push
mov
sti
xchg
sti
cmpsl
mov
leave
push
jecxz
add
testl
jns
dec
imul
add
cmp
ret
mov
mov
cmp
fcoms
test
sbb
sbb
sbb
xchg
fstps
popa
mov
and
mov
imul
arpl
mov
jl
test
std
js
jecxz
cld
fistl
shl
xchg
pop
jmp
sbb
jns
outsl
clc
dec
xchg
cmp
aam
pushf
fsubrl
mov
sbb
cltd
mov
sub
cmp
jmp
repz
push
fisubrl
sub
xchg
leave
inc
sti
into
pop
xor
mov
mov
ret
pop
cmp
inc
iret
rolb
jl
test
testl
jg
aaa
and
std
pop
inc
xor
int3
sub
fldcw
outsl
popa
lret
xor
fisttps
jb
push
adcl
imul
daa
shl
mov
inc
enter
mov
imul
aas
inc
sub
lods
add
and
cltd
popa
lahf
or
and
add
int
negb
nop
adc
daa
xorl
jmp
loop
out
sbb
sbb
shrl
notl
aad
mov
pmuludq
cmc
add
rcrl
mov
sub
out
sub
out
cmp
dec
sbb
popa
inc
sub
int
cmpsb
stos
jge
inc
lahf
or
mov
or
add
mov
repnz
out
aam
cmp
and
add
dec
repz
or
ret
loope
jns
mov
pop
xor
inc
loop
or
mov
fisubs
mov
and
call
lds
mov
dec
mov
adc
movl
cmp
and
andb
mov
push
inc
pop
in
jp
xchg
aam
cwtl
jle
xor
sub
pusha
stos
cmc
adc
lods
sub
sub
psubq
mov
ret
xor
into
push
aas
shll
jecxz
mov
push
mov
pop
mov
in
shl
mov
js
hlt
loop
inc
movsb
mov
push
mov
rorl
loop
into
outsl
rorb
sbb
push
outsb
jne
and
mov
rorl
or
push
inc
xchg
cmpsl
xchg
fiadds
icebp
xor
cmpsb
push
dec
mov
mov
push
in
call
pushf
dec
scas
mov
fwait
out
xchg
inc
push
dec
sub
test
loopne
add
mov
in
test
fwait
lcall
pop
adc
cli
add
mov
clc
ret
pop
adc
adc
xor
imul
xor
fisttpl
jae
xchg
mov
les
loop
les
imul
xchg
add
test
in
pop
outsl
pop
pop
xchg
mov
jle
pop
addl
push
xlat
pop
jg
sub
dec
test
pop
dec
icebp
adc
aaa
mov
xchg
mov
push
out
sbb
cmpsb
dec
sbb
es
adc
mov
ret
mov
outsb
mov
push
sbb
scas
dec
and
repz
jmp
cli
imull
pop
adc
xchg
xor
cwtl
out
dec
fisubrl
cwtl
add
pop
sbb
repz
les
push
mov
mov
pop
lds
inc
sub
inc
les
dec
pop
pushf
jge
sub
lock
lahf
imul
lods
lods
mov
jmp
add
dec
pop
mov
das
loope
xor
icebp
xchg
movsl
jmp
mov
sbbb
inc
pop
push
fdivp
inc
push
nop
pop
in
pop
iret
aad
and
or
mov
add
stc
int
iret
push
fmull
sub
adc
mov
and
xchg
cld
or
test
push
call
sub
xchg
xor
xchg
ljmp
sbb
call
cmp
adc
ficomps
or
sub
cwtl
pushf
add
jo
mov
pop
cmp
inc
inc
xlat
fwait
aaa
mov
outsl
sub
mov
stos
lods
xor
clc
sub
ret
cmp
jp
push
jl
int3
sahf
fsubl
mov
push
enter
jl
push
lcall
pop
push
fidivl
xchg
push
pop
jmp
inc
xorl
or
pop
mov
dec
lds
sbb
mov
lret
xor
adc
out
clc
jp
xchg
outsl
rorb
add
ljmp
xor
mov
add
cmp
xor
test
add
or
dec
pop
xor
add
packsswb
dec
ja
jecxz
and
mov
inc
or
and
inc
cmp
repnz
ret
sti
push
xchg
pop
mov
les
lret
mov
cmp
push
jnp
sub
gs
daa
or
pusha
adc
insl
mov
lds
dec
pop
cs
pop
push
jg
aad
pushf
inc
sub
inc
sub
in
movsl
int
out
sbb
out
daa
popf
sbb
mov
xor
rclb
cld
js
pop
sbb
or
and
xor
xor
xchg
cld
test
inc
xchg
dec
add
pop
loope
push
mov
mov
leave
add
jb
or
cmpsb
dec
lods
fs
xchg
jg
xchg
lret
clc
jmp
insb
add
outsl
aad
popa
pop
push
xor
out
jo
mov
sub
adc
dec
add
add
or
sbb
scas
mov
rcl
pop
sbb
mov
xchg
mov
gs
iret
mov
out
clc
jmp
faddp
shll
call
jl
mov
test
mov
popf
add
into
cwtl
pop
push
imul
add
repz
std
stos
jg
mov
fcmovnu
sub
mov
adc
sbb
xor
cwtl
ret
into
mov
xchg
mov
push
dec
aad
push
sahf
jno
inc
les
ja
shlb
into
in
sbb
mov
mov
subb
or
xchg
bound
enter
cwtl
cltd
adc
sarl
xor
sbb
sub
sub
test
lds
in
mov
sbb
sub
imul
sub
pop
inc
rcrl
enter
mov
and
or
icebp
imulb
sbb
push
mov
cmc
subl
or
push
sbb
mov
xchg
push
stc
fdivrs
in
mov
mov
rcrb
shrl
les
andl
mov
imul
dec
lea
out
add
jne
fnstenv
mov
pop
sbb
pop
ljmp
lret
loop
pop
lret
out
lret
lcall
jns
xchg
lret
xchg
or
push
add
and
push
and
insl
dec
cmp
stos
push
xchg
je,pn
inc
dec
ret
loop
or
out
xor
cmp
sbb
inc
stos
aas
mov
xchg
leave
or
and
sub
andb
push
out
dec
std
mov
popa
das
std
repz
les
cs
push
dec
add
lods
out
ret
inc
aaa
iret
dec
inc
sbb
hlt
lret
mov
popa
testb
or
xlat
loop
neg
lcall
sub
les
sbb
imul
mov
or
roll
negl
rcl
mov
dec
jg
scas
mov
scas
or
push
add
js
push
imul
add
test
jge
jnp
sub
jno
shrl
mov
and
leave
data16
lcall
dec
jns
cld
fwait
mov
pop
ret
insl
xchg
dec
or
adc
in
cmp
dec
fsubs
push
xor
lds
and
ljmp
mov
jecxz
cltd
icebp
fmulp
dec
in
adc
es
pusha
adc
data16
mov
and
int3
pushf
mov
lcall
subb
cmc
adc
and
add
mov
jecxz
sbb
sbb
push
mov
and
ss
imulb
sbb
sub
fwait
outsl
mov
mov
xchg
mov
lock
sarb
sub
call
movsl
dec
inc
lods
lahf
andl
mov
add
mov
bound
ret
push
sbbl
xorl
les
or
dec
jns
add
stos
sbb
add
add
mov
shlb
data16
mov
cmpsb
outsb
push
xchg
in
mov
mov
rorl
jbe
mov
test
loopne
add
pcmpeqw
mov
mov
scas
xchg
imull
jns
xlat
loopne
sub
ds
fmul
enter
aas
ret
lds
int
or
xchg
pop
fdivp
xchg
stc
cmp
xchg
pop
icebp
jl
nop
and
push
shl
clc
mov
aam
jbe
jae
movl
lret
ss
sub
xchg
sub
data16
mov
pop
ss
jp
xlat
sbb
or
push
or
jbe
cmp
in
subb
adc
adc
aaa
mov
ret
mov
je
sub
sbb
scas
adc
test
jge
fistl
inc
xor
enter
movl
cmp
add
xchg
mov
repnz
sahf
inc
and
xor
and
scas
mov
and
dec
mov
loope
push
pushf
das
cmpsl
add
push
mov
das
in
int3
push
out
push
pop
sub
jo
inc
stc
sti
insl
lret
jnp
cmp
pop
pop
fimuls
mov
fidivs
inc
mov
sbb
mov
out
fs
dec
stc
fsubrl
xor
out
xchg
sbb
mov
incb
ss
pushl
push
jp
cltd
adc
inc
test
jle
pop
test
in
or
popf
jnp
sub
mov
mov
adc
mov
adc
or
cltd
ret
mov
cmp
inc
inc
mov
adc
rcll
gs
out
push
sbb
dec
out
jecxz
mov
mov
cmp
mov
jno
in
adc
xchg
sub
cmp
jp
sbb
xor
cwtl
loopne
adc
xor
loope
adc
ss
jae
fs
push
jb
adcl
push
cmp
pop
sti
mov
push
aam
je
pop
push
imul
adc
jo
jb
inc
mov
lea
test
inc
sbb
enter
cs
mov
outsl
dec
mov
retw
aaa
add
jle
mov
push
and
insb
adcb
pop
push
jbe
outsb
out
sub
xchg
test
ljmp
sub
lods
adc
leave
sub
pop
es
testb
movsb
lret
dec
js
or
nop
int3
jae
sarb
adc
mov
daa
and
or
cwtl
call
aam
inc
mov
cld
cmp
subb
inc
clc
in
cli
cli
clc
or
jle
je
cmc
aad
dec
insb
rcrb
adc
bnd
cmc
cmc
arpl
sahf
xorb
stos
add
sub
or
into
stos
mov
imul
push
dec
ss
xchg
lds
mulb
loope
cmp
lret
imul
div
sub
dec
xlat
sahf
fnstsw
push
mov
add
jmp
push
push
out
pusha
jno
xchg
lods
mov
push
or
cmp
stos
arpl
decb
push
out
or
sahf
outsb
into
mov
ss
stos
push
lods
jb
sbb
jae
mov
pop
push
and
cltd
mov
sub
lea
jp
dec
mov
and
sbb
stc
fldt
inc
enter
push
or
leave
mov
data16
in
in
mov
sub
jle
ret
add
aad
and
cs
jge
sahf
ss
jo
mov
add
imul
jp
mov
inc
jns
add
sahf
push
and
out
inc
insb
stos
add
inc
test
in
xor
bound
cltd
loop
push
adc
pusha
fstpl
lret
or
shll
ret
mov
into
push
push
push
inc
inc
xchg
xchg
leave
cmc
movsl
scas
jnp
cmpsl
pushf
xlat
ret
movsb
mov
rorl
or
add
dec
outsl
inc
push
or
gs
inc
or
xor
fcmovb
imul
add
into
pop
pop
aaa
stc
push
adc
jmp
fistps
stos
inc
and
sub
imul
fiaddl
adc
mov
fstps
dec
shlb
adc
xor
add
movsl
jecxz
xor
hlt
mov
stos
sub
or
pop
movsl
sub
in
movsl
inc
xchg
in
jbe
mov
sub
insb
jmp
push
stos
push
push
fists
mov
dec
sti
scas
jmp
ret
mov
test
int3
ljmp
imul
jns
dec
insl
push
cmpsl
pop
adc
fwait
int3
testl
test
or
fcompl
xor
jnp
xor
ret
adc
int
sbb
mov
jmp
cmp
ss
stos
cmpsb
ljmp
mov
hlt
xlat
adc
mov
dec
test
into
jb
int
sbb
mov
test
lods
dec
or
sbb
mov
test
fistps
int3
mov
pop
test
sub
mov
push
outsb
mov
xchg
lret
pushf
add
xchg
aaa
ret
lea
pop
mov
add
mov
add
cmpsl
and
lret
cld
std
dec
mov
pop
adc
into
sub
cwtl
andl
rcrl
mov
or
cmpsb
mov
jb
ds
push
lea
cs
aad
shll
cli
xchg
out
add
sbb
lret
ja
mov
loop
out
add
stos
fstp
shlb
daa
or
mov
xor
mov
push
cli
bnd
pop
mov
add
fisubrl
scas
inc
mov
add
into
test
adc
out
inc
dec
lods
arpl
cmp
add
jg
xor
into
insb
sbb
int
pop
and
jae
jmp
push
in
cmpsl
cld
pop
fldenv
dec
adc
jne
inc
adc
insl
cmpsb
mov
cwtl
jg
loopne
jl
outsb
sub
add
dec
scas
jbe
jle
mov
pop
stos
mov
outsb
push
adc
shll
or
je
pop
xchg
jno
dec
into
sub
lods
mov
cltd
dec
mov
scas
mov
inc
sbb
jnp
mov
pop
fcmovnbe
dec
mov
push
add
sub
xchg
xchg
arpl
lods
fbld
add
mov
push
and
daa
or
push
leave
in
pop
and
sub
subl
mov
adc
addl
push
lods
pop
test
or
mov
aaa
mov
repz
adc
pop
or
int3
or
ret
aaa
pushf
add
pop
mov
je
cmp
adc
inc
aas
inc
push
or
mov
and
in
es
or
insl
movsl
cmp
jecxz
aaa
mov
sahf
lret
or
xchg
dec
imul
fidivrl
repz
xor
push
rorb
push
pop
cli
insl
sbb
shr
movsb
cmpsb
jns
test
test
xchg
or
gs
mov
test
data16
insb
add
and
cmc
or
iret
shrb
stc
pop
inc
ja
or
jg
lock
lods
cmp
push
scas
dec
mov
jno
jecxz
mov
pop
inc
frstor
adc
sti
or
mov
xor
or
cltd
push
aam
je
dec
lods
push
je
xor
aam
mov
dec
xchg
jnp
jns
mov
or
cmc
lds
push
lret
pusha
mov
add
stc
std
movb
leave
cmp
lods
pop
xchg
enter
rep
imul
push
fcomip
and
hlt
dec
clc
rorl
add
in
in
mov
inc
cmpsb
incl
insb
call
cmpsb
mov
repz
adc
call
sbb
fs
pop
rcrb
fld
dec
ja
lcall
xor
mov
andl
push
bound
ds
jns
aaa
into
mov
mov
push
mov
mov
xor
pusha
sub
jmp
adc
test
or
mov
loope
mov
test
into
jl
dec
cmpsb
xchg
mov
scas
in
hlt
xchg
std
test
fnstenv
mov
out
imul
pop
movsb
call
fld
cmpsl
jb
xchg
mov
jg
in
push
es
pop
stc
mov
inc
jo
lods
cmp
je
js
insb
pop
ds
roll
imul
adc
sub
inc
cmpsl
push
adc
add
lods
mov
push
cmp
or
cmpsb
movsl
sbb
cmp
cmpsb
or
in
mov
lock
stc
push
cli
mov
int3
sub
push
fnstsw
out
pop
testb
scas
push
adc
xor
jmp
add
cld
sbb
dec
repz
xchg
or
ror
cltd
cmp
pop
adc
push
xchg
cmp
mov
ljmp
or
or
sub
leave
cmpsb
mov
mov
test
int
adc
pop
sub
out
cs
sbb
jg
rclb
mov
mulb
imul
shlb
add
adc
pop
dec
addb
cs
out
adc
mov
sbb
stc
pop
movsl
ds
aam
sbb
add
or
fdivl
ljmp
fadds
mov
xor
mov
aaa
pop
pushf
test
jns
xlat
outsl
imul
and
test
inc
push
jbe
scas
mov
stos
rorb
push
xor
jno
add
push
push
insl
push
mov
popa
aaa
mov
push
mov
lcall
sarl
dec
lahf
mov
jnp
and
pusha
mov
packssdw
repnz
pop
ficoms
mov
mov
dec
or
inc
jbe
inc
pop
sti
repnz
push
orl
mov
sbb
les
scas
loope
por
mov
push
adc
pop
cld
xlat
les
rcl
jle
jmp
cli
dec
lcall
mov
jl
mov
fistl
ds
lret
or
test
adc
jge
push
pop
mov
jge
hlt
xchg
inc
jo
xor
add
xchg
dec
cmp
push
fldt
xchg
push
dec
mov
fdivrs
lret
hlt
mov
jns
stos
xchg
pop
pop
les
sbb
sbb
inc
cltd
insl
cmpsb
roll
and
sti
daa
inc
mov
jg
mov
mov
jl
pop
pop
cmpsl
in
pop
push
fs
mov
adc
or
jb
loopne
inc
mov
cmp
cmc
stc
leave
cltd
aas
pop
dec
dec
repz
push
shll
adc
xorb
dec
inc
adc
mov
add
jecxz
in
push
mov
push
in
jb
movsb
in
add
mov
inc
sbb
and
ret
push
sbb
and
call
xchg
bound
dec
cli
in
std
fidivl
cltd
in
jbe
ret
add
outsl
por
cmp
and
add
add
cld
clc
sbb
inc
cwtl
popa
ror
cmpsb
ret
push
cmpsl
mov
and
jle
nop
jne
bnd
int3
inc
in
call
movb
in
xor
in
enter
jnp
popf
stos
or
pop
mov
sub
dec
add
pop
push
lret
shll
pop
stos
jle
pop
pop
dec
sub
jle
divl
adc
sbb
xchg
out
ljmp
fwait
or
and
xchg
arpl
into
outsl
shlb
pop
movsb
add
jp
push
rolb
sti
in
cmp
jg
jnp
sbb
pop
enter
inc
mov
push
mov
in
xchg
lods
out
movsb
or
mov
inc
sub
int3
test
leave
jbe
adc
outsb
xchg
adc
mov
jmp
loop
rcrl
sbb
lcall
ds
mov
pop
aad
leave
sbb
and
and
mov
push
or
mov
sbb
xor
mov
rcll
lret
fld
add
jnp
in
cld
push
or
inc
sbb
int
test
aam
test
xor
push
loop
jge
cwtl
push
mov
pusha
ficoml
sahf
pusha
das
aas
dec
outsl
cld
pop
jb
mov
cmpps
out
inc
cli
cmp
dec
ljmp
fcmovnb
push
mov
mov
cmp
int
int3
add
imul
sub
mov
ss
and
clc
pop
std
mov
insb
cmp
out
test
dec
sbb
dec
jmp
es
es
outsb
daa
addb
add
push
fisttpll
push
mov
ret
lahf
ss
push
mov
std
fs
jp
leave
inc
nop
mov
pop
dec
cmp
addr16
pop
ret
pop
popa
sbb
repz
xlat
lcall
loope
rcrb
push
fldt
ret
loop
lods
shll
insb
test
xor
in
roll
xor
push
sbb
add
nop
outsb
outsl
popf
add
sub
inc
iret
popf
lods
cmc
xchg
out
stc
pushfw
jge
test
adc
out
pop
jl
pop
mov
call
pop
push
jae
div
dec
rolb
repz
gs
fcompl
movsb
cmp
mov
mov
pop
and
inc
sbb
out
xchg
inc
mov
xchg
inc
push
jae
dec
cld
mov
aad
mov
popf
or
mov
pop
mov
cmpsl
jb
or
or
jle
sbb
cmp
stos
popa
outsl
xor
jae
sub
mov
aam
cwtl
and
stos
hlt
cmp
std
sbb
xor
adc
add
out
xchg
add
sub
jl
mov
add
es
test
jbe
push
enter
sub
cmpsl
stc
adc
inc
pop
loope
jle
inc
cmpsl
das
cs
dec
test
mov
push
xchg
sbb
jle
cli
dec
imul
addw
inc
sti
icebp
aam
mov
push
mov
pop
xor
push
sbb
out
push
lret
pop
pop
or
push
lods
and
cmp
insl
fwait
push
pop
mov
rorl
lods
fildl
ficomps
cmc
stc
imulb
sub
insl
cmp
mov
cmpsl
sbb
andps
dec
cld
push
icebp
imul
out
clc
mov
adc
inc
mov
and
xchg
int3
ljmp
mov
das
or
and
adc
jecxz
stos
incl
repz
les
mov
lock
cmp
mov
mov
xlat
mov
dec
pop
xchg
pop
xchg
fwait
ljmp
jne
imul
shrl
out
or
xor
inc
int
push
shr
xchg
ja
xchg
icebp
arpl
movsl
loope
mov
xorl
in
mov
xor
xlat
cmp
cltd
cmpsb
push
dec
sahf
jbe
mov
cwtl
loop
fcmovnb
stc
sbb
pop
aaa
fcoml
mov
pop
out
fwait
mov
add
dec
ret
add
in
scas
cli
inc
cltd
mov
clc
les
cs
lock
push
mov
jle
rol
add
sub
adc
mov
es
cwtl
adc
cmpsl
insb
fisubl
xor
mov
sub
addr16
int3
push
loope
imul
jne
dec
ds
mov
rcrl
loop
pop
test
mov
mov
movl
xchg
jns
loop
in
jl
pop
inc
or
fistps
dec
in
hlt
fisubrl
sub
push
lea
scas
add
pop
and
jg
mov
sub
and
das
sbb
aam
stos
dec
and
pop
int
cltd
or
outsb
scas
push
fcmovbe
xchg
mov
sarb
aas
cmpsb
and
das
cs
add
sbb
jg
loope
int
cmp
cmp
lock
push
add
into
hlt
push
mov
fmull
ficoml
add
es
sbb
mov
sbb
push
mov
stos
ret
pushf
mov
pop
js
aad
sbb
sahf
sbb
and
sub
xchg
popf
into
cmp
in
in
imul
mov
popa
mov
lods
or
enter
push
xchg
mov
pushf
xchg
cmp
fisttps
mov
xchg
xchg
dec
sub
mov
clc
pop
aam
loopne
mov
xlat
mov
aas
fs
loop
sahf
mov
cmp
aad
mov
xlat
sub
pop
pop
mov
inc
mov
stos
add
jecxz
xlat
cmpsb
pop
xor
loopew
bound
andl
ret
mov
fsubs
mov
clc
iret
or
arpl
pusha
daa
pop
xor
dec
fisttpl
push
push
int
push
shlb
cmc
dec
mov
sbb
dec
outsb
push
in
jae
mov
xor
add
push
inc
sub
sbb
xor
data16
cmc
or
mov
mov
cwtl
stos
xchg
aas
push
fstl
imul
nop
inc
sub
aad
mov
mov
lret
rcrl
syscall
pop
rcrl
mov
mov
out
lret
dec
inc
mov
sub
jbe
xor
stos
repnz
jne
inc
scas
out
bound
jecxz
leave
adc
pop
add
inc
lods
dec
push
cmp
loopne
je
pop
in
cmp
mov
or
mov
pusha
clc
cmp
orw
adc
sub
int3
les
subb
inc
out
outsl
into
std
xchg
mov
sub
xchg
es
pop
mov
nop
xchg
int3
daa
sbb
sub
lret
sbb
adc
mov
insl
mov
cld
hlt
imul
cli
loopne
arpl
aam
popf
jge
repnz
jbe
push
inc
xor
movsl
movsb
fdivrs
lret
xchg
sub
cmpsb
or
aaa
jae
ss
cwtl
repz
mov
mov
loopne
sbb
std
mov
sbb
pop
bnd
repz
sbb
xchg
push
mov
pop
or
lea
inc
insl
adc
sub
inc
or
fwait
lret
inc
add
enter
xchg
sbb
out
scas
int
inc
movsb
cwtl
adc
loope
and
clc
mov
push
les
jp
jae
fcompl
sbb
leave
leave
pop
xchg
push
xbegin
das
stos
pusha
sbb
incl
clc
fs
mov
xchg
sub
sti
in
sub
sub
or
imul
jle
push
out
int3
push
mov
es
cmpb
xorb
and
loopne
push
mov
cmp
push
addr16
sbb
stos
inc
outsb
out
out
push
repnz
test
or
or
test
add
outsl
out
jmp
das
cmc
push
insb
jae
push
jnp
flds
fwait
jbe
jns
sub
mov
sub
bound
int
dec
imul
nop
call
aaa
push
jp
adc
jle,pn
sahf
adc
into
xorb
sbb
mov
xchg
add
dec
adc
xchg
cmp
inc
or
mov
das
fldt
cmc
in
and
xor
jl
xchg
mov
addr16
popf
out
pop
lahf
push
ret
xorl
mov
sbb
rclb
test
data16
iret
inc
add
daa
lds
scas
mov
jns
inc
inc
adc
aas
cld
mov
cmpsl
push
mov
ficoms
push
lods
das
inc
divl
or
mov
icebp
aas
ret
jmp
adc
jp
add
dec
push
mov
jmp
mov
and
pop
fsub
je
dec
jl
repz
jae
dec
mov
mov
mov
je
adc
addr16
xor
and
stos
add
stc
cmpsb
mov
aas
dec
cmp
in
cld
insl
dec
or
stos
fdivrs
pop
pop
ljmp
pop
xchg
xorl
js
cmp
mov
cmp
addr16
jae
imul
push
stos
ret
in
cmpsb
jbe
lods
lods
jns
pop
js
sbb
fwait
pop
mov
repz
rolb
jns
flds
out
cmpsl
outsl
inc
xchg
sub
cmp
test
push
xor
outsb
pop
movsb
xchg
in
push
inc
jae
jl
sbb
aad
stos
je
mov
mov
or
fidivrl
lea
and
int3
cmp
xchg
sbb
pushf
enter
xchg
mov
xchg
adc
lret
mov
or
ja
push
lahf
loopne
leave
inc
or
fdivrs
inc
sbb
sub
rcrb
test
lods
pop
mov
mov
lods
out
xchg
sbb
or
lcall
pop
aaa
inc
aam
jbe
cmpsb
cwtl
outsl
bound
aas
xchg
mov
add
mov
jl
mov
inc
popa
add
out
pop
mov
dec
sub
in
xchg
cld
jnp
mov
pop
xchg
mov
sub
lea
xchg
stos
outsb
aaa
into
jnp
sahf
push
mov
sarb
xlat
test
mov
dec
enter
push
pop
xor
fwait
sbb
xor
in
or
clc
mov
xchg
and
lds
xor
imul
mov
lcall
mov
mov
cmpb
push
dec
gs
mov
pop
insl
mov
sti
stos
cmp
jmp
sti
or
inc
jmp
das
imul
cmp
fldl2e
adc
aad
pop
ret
xor
dec
enter
es
dec
or
cmp
repz
sbb
pop
mov
push
loope
lcall
std
pop
inc
fxch
stos
jae
xchg
mov
jae
push
or
pop
ljmp
xchg
lret
jle
imul
push
cld
cmpsb
xor
stc
sbb
cmp
negl
aad
outsl
arpl
pop
cmc
pop
insb
mov
mov
mov
sub
repnz
cltd
pop
inc
push
dec
dec
add
imul
in
inc
into
cli
incb
test
mov
add
or
dec
mov
std
cwtl
adc
jne
cld
mov
cmp
pop
xor
push
adc
cli
es
lahf
or
lahf
nop
push
int3
loope
outsb
mov
lods
xor
jnp
mov
pop
sbb
mov
je
sbb
ss
jl
dec
cli
imul
inc
mov
stos
test
mov
test
cli
loop
mov
and
mov
sti
add
and
push
addl
mull
lock
mov
xor
out
inc
mov
lret
stos
xchg
and
out
cmp
out
mov
and
inc
ret
in
xorl
sbb
outsl
insl
pop
sbb
xchg
leave
ret
dec
fwait
outsb
stos
and
ljmp
mov
jle
ljmp
mov
push
mov
dec
mov
jle
mov
cmpb
test
xchg
insl
data16
mov
push
jbe
lret
mov
out
rcll
movsb
fildll
imul
and
xchg
jge
xlat
mov
mov
shlb
cmp
imul
mov
rolb
dec
imul
pop
pop
xlat
sbb
xchg
push
pushf
lret
das
ds
es
lahf
xchg
push
pop
fisubrs
xor
sahf
shl
add
cmp
push
adc
negb
jae
cmp
mov
movsl
or
icebp
mov
scas
stos
ss
pop
jbe
sti
cmp
lds
or
inc
dec
pop
hlt
filds
and
add
call
out
lods
push
in
lret
out
aam
mov
test
sub
popf
sbb
jbe
sahf
sub
ds
leave
and
scas
clc
xor
mov
enter
in
loope
outsl
push
push
test
inc
loope
hlt
mov
add
or
out
rolb
push
es
insb
cmp
ret
fildll
mov
imull
in
mov
or
jns
popf
test
fcmove
mov
in
out
push
dec
adc
xchg
inc
fwait
pop
shrb
push
sbb
mov
mov
pop
xor
bound
sub
ljmp
cltd
xor
sub
add
inc
cmp
aas
adc
das
movsb
xchg
cmpsl
inc
mov
fwait
aad
inc
sub
mov
mov
scas
cmp
dec
xchg
lods
imul
cmp
push
mov
mov
cwtl
and
adc
stos
arpl
orb
fcomps
mov
push
sbb
stc
sti
xchg
xchg
rolb
loope
mov
dec
inc
mov
jl
jno
mov
sub
or
sub
cmp
fs
popa
or
test
sahf
push
mull
push
dec
loopne
xor
rcl
xchg
sbb
fistpl
inc
dec
pusha
lods
shrb
xorl
std
insb
out
ret
fstp
mov
push
or
in
sub
cltd
cwtl
push
xor
loopne
dec
shl
fcmovnbe
pop
jns
inc
pop
bound
mov
stmxcsr
decl
hlt
popf
in
in
les
shlb
inc
sahf
cwtl
jno
adc
mov
add
cltd
jg
inc
cld
sahf
push
cmp
jb
pop
inc
fldenv
mov
inc
dec
dec
or
add
push
mov
rorb
inc
mov
mov
lds
cli
pop
pop
leave
js
xor
cmp
lds
dec
enter
and
lea
cmp
mov
sub
aas
popa
mov
bnd
mov
repnz
scas
xor
iret
loop
push
push
cwtl
sub
push
inc
movsb
xor
sub
inc
fs
cmp
inc
push
cwtl
lods
add
mov
pop
imul
xchg
jno
jge
leave
and
adc
aam
es
adc
mov
ficomps
outsb
movsl
and
fisubl
in
jne
mov
cwtl
mov
xchg
cmp
xor
iret
ss
and
xchg
mov
xchg
jne
leave
xchg
mov
mov
test
jmp
push
inc
jns
das
cmp
push
lds
xor
mov
lods
dec
out
scas
lds
aam
adc
xor
das
sahf
roll
pusha
popa
cmp
sti
aaa
lods
xor
xor
sub
jg
divb
inc
ret
add
sub
outsl
or
and
push
dec
or
in
shrb
mov
stos
aaa
mov
outsb
mov
shl
jmp
dec
js
dec
shr
and
xor
xchg
pop
sub
fsin
pop
pop
jmp
cs
xor
ret
cmp
movsb
je
sbb
mov
test
orl
popa
push
in
das
fmull
jae
bnd
aaa
jnp
imul
ret
pop
dec
push
cmc
aam
fcmovnu
ds
aad
test
xchg
pop
out
in
lea
insl
lea
sub
int3
loopne
aad
mov
stos
add
mov
stos
mov
cmpsb
int
cmpsl
out
cmp
orl
cwtl
mov
les
inc
mov
inc
mov
cli
popa
test
mov
hlt
dec
out
inc
jg
and
ljmp
or
cmpsl
push
shlb
scas
mov
cmpsl
push
icebp
jp
jnp
iret
dec
jmp
mov
stc
inc
jle
xchg
aas
mov
ljmp
scas
pusha
xor
inc
or
xchg
cwtl
pop
mov
mov
sbb
mov
or
das
add
jne
push
mov
cmpsb
rcll
dec
iret
jl
repnz
pushf
in
lret
hlt
aad
pop
add
sbb
inc
push
adc
xchg
int
push
adc
lods
ds
js
inc
loope
xor
dec
stos
ljmp
pop
gs
cwtl
call
and
mov
inc
mov
adc
leave
adc
test
data16
sbb
std
lods
jno
out
stos
std
dec
out
pop
lcall
inc
sti
mov
mov
fildll
and
pop
inc
movsl
push
xchg
pop
ret
mov
lds
push
pop
cmp
push
xchg
pop
outsb
mov
sub
jbe
fimull
inc
cltd
aad
shl
and
in
push
push
cmpsb
push
je
mov
xchg
cmp
fsubl
sub
bound
or
mov
insl
mov
test
xor
js
leave
call
dec
lods
rcrl
test
movsbl
adc
jbe
push
into
mov
addr16
lods
aas
in
jp
das
jmp
test
shr
pop
jbe
les
cmp
dec
push
adc
xchg
cmp
aad
dec
jecxz
sahf
push
add
mov
push
xchg
jns
in
or
stos
or
mov
dec
lret
inc
mov
inc
mov
cs
popa
lahf
stos
or
dec
rcrb
test
xchg
jmp
jle
cmp
inc
std
dec
rcrl
aaa
pop
jne
outsb
scas
sub
dec
sahf
and
pop
jp
test
xchg
sub
stos
or
jae
repz
sub
test
mov
notl
xchg
cli
stos
clc
cmp
and
pusha
cmc
mov
add
pop
xchg
mov
mov
rcl
nop
mov
iret
jmp
test
scas
mov
fdivrs
cwtl
icebp
push
add
aaa
sub
lock
test
stos
sbb
stc
mov
adc
dec
ljmp
ror
rcrl
xor
ljmp
lahf
adc
add
insb
inc
push
adc
sub
cmp
xor
lahf
cwtl
dec
ljmp
fadds
xor
xchg
shlb
ljmp
jno
pop
jecxz
and
fs
pushf
out
lret
fidivl
sbb
pop
mov
test
adc
int3
stc
inc
test
xor
sub
or
cmpsb
mov
cli
jo
sub
aam
call
data16
jg
mov
loopne
call
rcrb
gs
icebp
hlt
sbb
push
or
std
pop
inc
push
inc
in
jo
out
sarb
outsl
pop
cwtl
lods
jne
cmpsb
xor
inc
cs
mov
cmpsl
xchg
xor
cwtl
mov
out
inc
add
imul
call
popa
pop
dec
dec
pop
xor
and
sbb
es
xchg
or
mov
xchg
jbe
js
sar
mov
adc
cltd
dec
jmp
arpl
adc
ss
rclb
xchg
add
sbb
in
decb
ret
push
and
outsb
pop
loopne
adc
xchg
xor
jns
xchg
scas
mov
pusha
jns
mov
adc
inc
fadds
xor
or
jo
popf
push
lods
pop
sarl
jge
mov
ds
push
or
mov
pop
adc
int
jns
idivl
sub
jo
js
je
loopne
dec
ss
mov
add
dec
test
enter
xorl
je,pt
push
jg
rorl
outsb
es
xchg
jbe
aam
sti
in
add
lds
cwtl
loopne
out
leave
test
movsb
jge
mov
push
leave
push
call
and
push
stos
dec
mov
xchg
jp
repnz
cmp
aam
jno
push
mov
aaa
cmp
pop
movl
mov
sbb
ret
xor
out
and
ror
loope
add
xor
into
push
dec
mov
mov
fists
popa
mov
sti
dec
cmp
adc
enter
cmp
adc
jge
inc
and
sahf
fadds
jg
imul
out
sbbb
pop
pushl
je
shll
or
sub
pop
push
lock
and
pop
or
xor
movsb
xchg
inc
daa
jmp
ja
mov
insb
pop
xchg
and
jl
mov
dec
xchg
inc
scas
mov
mov
adc
inc
in
int3
sti
cmp
clc
lret
or
fisubrs
sbb
jmp
outsb
push
sbb
cld
ficomps
repz
push
dec
icebp
ja
ret
test
cmp
inc
fwait
mov
subl
mov
mov
aas
jbe
into
lcall
mov
pop
in
bound
leave
popf
jge
sbb
cld
xor
xchg
add
or
add
scas
lock
sbb
stc
ret
fildl
sub
mov
sbb
jl
roll
jnp
bound
test
jecxz
data16
or
push
mov
loope
mov
adc
and
jbe
ret
test
inc
jecxz
outsl
add
in
pop
in
sbb
cmp
mov
inc
cmpsb
aad
push
adc
dec
repz
sbb
push
sbb
jle
shrb
xchg
sub
pop
sub
loop
jecxz
test
xor
popa
fnstsw
xchg
xlat
jo
into
xor
jbe
gs
outsb
hlt
pop
shrd
mov
aad
les
jns
ja
sub
dec
cmpl
add
mov
pop
sub
inc
sub
mov
lret
sbb
nop
ljmp
pop
pop
pop
dec
pop
psubsw
lock
lret
es
sbb
in
or
fldl
lods
cli
or
in
lods
pusha
mov
or
add
mov
inc
inc
push
inc
std
jae
xor
or
jns
adc
not
mov
inc
mov
aas
jmp
shl
xchg
or
lcall
cmp
and
cs
popf
mov
mov
mov
mov
mov
xchg
adc
dec
sbb
mov
push
xor
test
repz
ja
sub
mov
fwait
dec
call
mov
xchg
sbb
aam
ss
inc
outsb
shll
pop
sub
jb
push
jecxz
dec
icebp
cmp
adc
fistps
stc
push
cmp
out
iret
mov
out
ds
cmpsl
mov
movsb
sbb
leave
insb
std
cmp
add
in
xchg
aam
insl
push
cmc
xlat
subb
leave
aaa
jl
sahf
push
stc
bound
mov
push
dec
add
xchg
xchg
xlat
mov
loop
add
jge
dec
or
je
inc
scas
lret
mov
rdtsc
xchg
bound
xor
outsl
in
lahf
lea
and
cmp
dec
arpl
iret
and
fists
sbb
inc
lods
xchg
test
pop
out
sub
adc
mov
scas
cmp
pop
mov
or
xchg
fsts
data16
cmpsl
sub
mov
push
mov
or
adc
sub
adc
jmp
aas
sub
arpl
subb
inc
xchg
std
jae
jmp
ret
sbbb
lds
dec
adcb
cwtl
cmp
pop
and
ja
call
jno
xor
and
jno
gs
push
cmp
jae
xchg
test
loop
cmp
xchg
outsb
ja
loop
in
sahf
std
push
dec
sbb
and
add
push
pop
jmp
xchg
cmp
mov
cmpsl
loopne
mov
sti
pop
lds
aad
and
dec
add
jns
in
sub
fsubrl
mov
mov
sbbl
push
je
add
cmp
xor
mov
ja
das
les
js
inc
xchg
cmp
mov
icebp
lret
rcrb
fs
movsl
dec
cld
dec
cld
addr16
push
mov
sti
lock
pop
or
sub
pop
test
xor
push
jb
lea
lret
iret
inc
cli
iret
aaa
cmp
lds
cmp
dec
cmp
inc
xchg
pop
in
movsl
gs
or
in
aaa
mov
aam
into
mov
or
push
les
mov
add
pop
mov
cwtl
pop
and
mov
pop
je
xorb
cmp
dec
mov
mov
push
sub
inc
imulb
leave
shlb
inc
cmp
ss
sbb
mov
xchg
lret
std
add
adc
iret
sub
cmp
bound
cmp
fdivp
les
and
fwait
xchg
ljmp
jl
mov
xor
xor
jg
jnp
ja
adc
inc
out
popf
fcoml
dec
cmp
iret
es
mov
jmp
fwait
or
gs
dec
lds
dec
inc
pop
mov
lret
jb
xchg
xchg
pop
pop
mov
repnz
fs
fs
cltd
jbe
inc
jae
xchg
fcompl
stos
jmp
sti
xor
cmc
fists
mov
push
iret
adc
rcrl
cmp
call
jns
mov
sbb
mov
xlat
sbb
jecxz
ss
sub
cmp
xchg
dec
lret
pop
loopne
pop
sbb
shr
xor
adcl
jae
and
cmp
mov
lcall
mov
jp
and
bnd
pop
addb
scas
negb
jbe
mov
cmp
push
xchg
out
out
and
adc
pop
es
push
fistpl
mov
fsts
sahf
push
jmp
xchg
push
arpl
cmp
cld
and
dec
inc
ss
or
in
adc
sub
fdivrs
mov
mov
les
movsl
push
cmp
mov
push
mov
cld
pop
or
pop
ror
jbe
mov
sub
test
mov
repnz
cli
lret
pop
sbb
push
xchg
pop
xchg
in
adc
pop
xchg
fnsave
ret
dec
decl
cwtl
ret
int
pusha
sub
cmpsb
test
divb
sub
out
repnz
cld
inc
stc
in
hlt
xor
pop
xor
mov
jecxz
and
in
into
outsb
sbb
add
ja
lods
cwtl
or
js
mov
cmp
mov
jle
xchg
cmp
rcll
sub
adc
xchg
mov
bound
cltd
in
mov
mov
and
sbb
mov
outsl
jge
out
mov
repnz
jnp
dec
test
sahf
gs
push
rep
bound
dec
aaa
jbe
push
jle
inc
inc
mov
in
dec
fisttpl
dec
xchg
std
inc
mov
mov
dec
loop
jns
lods
lock
shll
add
int3
popa
dec
push
icebp
mov
and
push
setae
gs
scas
mov
hlt
fisttpl
arpl
arpl
cmc
cmp
and
addr16
sarb
rcll
jno
or
pop
aam
jnp
aas
push
sub
adc
cltd
rorl
arpl
imul
movsb
popa
cmp
das
xchg
mov
cmp
cs
push
dec
add
mov
fcompl
filds
pop
mov
mov
inc
addb
into
push
push
jnp
push
fcomip
xlat
push
mov
fwait
and
cmc
pop
dec
fs
push
inc
adc
cmpsl
adc
jb
pop
jle
xchg
mov
xor
xor
out
adc
mov
mov
cmpsl
inc
in
arpl
push
inc
inc
lock
push
push
dec
mov
pop
mov
lret
push
imul
push
sbb
fcompl
push
fildl
jnp
fildll
repnz
scas
daa
rclb
push
pop
out
xchg
rcll
call
and
mov
mov
aas
xchg
js,pn
and
mov
push
sbb
xchg
add
adc
shl
dec
rcrl
test
push
popa
in
push
out
dec
hlt
pop
xor
dec
push
xchg
insb
mov
stos
push
push
dec
jecxz
mov
dec
mov
lock
push
mov
daa
aas
mov
adc
and
out
shl
in
ds
adc
insl
roll
cmpsl
xchg
xlat
int
popf
and
icebp
cwtl
fildl
xchg
mov
in
mov
add
mov
clc
das
mov
outsb
push
and
push
sahf
add
pop
jmp
dec
push
mov
mov
cld
sub
cmp
sahf
xchg
mov
das
cs
cli
mov
scas
pop
sbb
outsl
fadds
adc
xorl
gs
push
add
gs
cmpsb
inc
adc
dec
mov
iret
add
adc
movsb
mov
dec
pop
push
jl,pn
adc
je
aas
jmp
jb
test
dec
xor
lock
mov
int
xor
out
cmpsb
pop
sub
fsubs
mov
mov
cltd
xchg
sahf
in
and
sbb
dec
jp
and
jbe
and
insl
pop
loope
ret
xchg
push
jo
pop
cld
adc
dec
dec
add
or
js
jae
mov
or
aaa
pop
neg
in
inc
in
jne
push
negl
jnp
pushf
push
into
push
sbb
inc
sub
stos
mov
push
ficompl
popa
mov
adc
jnp
push
insb
out
mov
jmp
lcall
mov
mov
sub
and
cmpsl
push
pop
pop
popf
and
add
sbb
lods
pop
mov
pop
or
lods
sub
testl
scas
rcr
sub
idivl
nop
sbb
fnsave
das
cmp
hlt
imul
inc
inc
push
add
out
xorb
aaa
daa
cld
js
xor
pop
cmpsb
and
repnz
scas
cmp
negl
mov
add
sti
gs
inc
and
jp
scas
ss
mov
lahf
xchg
imul
fmul
pop
testl
popf
in
sub
bound
jp
pop
rol
lods
mov
jb
dec
icebp
aam
in
xchg
das
push
ja
mov
and
fidivrs
call
push
sti
mov
mov
rol
dec
or
sbb
add
notb
imul
push
outsb
lahf
scas
xchg
daa
test
rcll
mov
mov
sub
leave
inc
mov
jae
mov
mov
popa
pop
add
shrl
ja
cli
aaa
fcmovnbe
fs
jmp
pop
stos
mov
aam
outsb
dec
ficompl
jno
mov
jmp
loope
jne
mov
je
mov
add
out
or
mov
pusha
or
xchg
inc
pop
jno
scas
loopne
dec
std
sub
push
dec
outsl
ficomps
mov
cs
fwait
xorl
ficomps
dec
shrl
push
and
mov
rorb
sub
add
repz
test
mov
inc
lret
je
js
adc
test
sub
lds
cld
jp
rorl
js
mov
popf
sti
jae
jp
popf
jno
push
aam
mov
pop
xor
insl
fcomip
lock
xchg
scas
rcll
outsl
lea
xor
sub
subl
shlb
sbb
popf
icebp
or
add
sbb
add
pusha
nop
jns
cld
jge
insl
imul
cmp
add
cltd
adc
push
pop
js
aam
adc
insl
ret
fsubs
test
jno
jmp
add
xchg
dec
push
mov
xchg
and
adc
or
and
idivb
movsl
jle
add
cmp
adcl
jl
das
jns
ficoml
out
rcll
popa
icebp
sub
enter
push
cmp
pusha
cmp
pop
push
push
mov
sti
sti
andb
push
push
sub
fwait
sbb
push
icebp
fldcw
adc
inc
sub
sbb
inc
add
scas
test
fistpll
test
xor
add
jecxz
mov
scas
inc
cmp
pushf
pop
mov
push
stos
jne
and
push
adc
sub
cltd
xchg
addr16
fwait
out
xchg
lds
sub
andb
or
fimuls
add
rclb
sub
in
adc
out
test
and
iret
lods
add
lahf
icebp
arpl
push
daa
les
lcall
fbld
or
jnp
xchg
and
addl
pop
push
stos
lret
inc
pop
mov
mov
pop
fxch
sbb
lods
mov
cmp
jne
push
rorb
dec
mov
xor
leave
sub
mov
movsb
test
aad
nop
pop
mov
loope
ret
popf
inc
push
mov
cli
mov
pop
jns
loope
es
es
jbe
sti
stc
push
sub
mov
scas
int3
cltd
and
aad
xchg
add
inc
mov
jecxz
adc
lds
jmp
xchg
xchg
xchg
loop
fs
bound
dec
pop
rcl
sub
in
ljmp
pop
sbb
popl
xor
fs
jns
mov
je
out
insb
int
mov
xor
mov
int
call
adc
adc
dec
fwait
mov
lret
adc
pop
mov
imul
mov
jge
mov
and
mov
aam
adc
inc
pop
out
movb
xchg
nop
cmp
or
mov
or
push
xor
mov
pusha
cmp
lcall
jmp
pop
jle
lahf
shlb
xchg
jbe
cs
xchg
sbb
outsl
lods
and
test
mov
pop
shrb
and
xchg
xchg
scas
daa
daa
call
ljmp
popf
mov
leave
push
repnz
inc
jbe
adc
pop
inc
xor
aas
jg
ljmp
jb
int3
mov
test
mov
xor
lea
lcall
lret
out
sti
fsincos
mov
fildll
rcr
or
xor
sbb
mov
xchg
fisttpll
adc
xor
xchg
lret
mov
data16
xor
dec
inc
add
outsb
rolb
mov
adc
and
xlat
bound
pop
test
dec
or
arpl
test
popf
xchg
movsb
jnp
mov
push
push
mov
mov
scas
push
dec
arpl
sti
out
inc
incl
out
inc
sbb
gs
std
xchg
pusha
inc
adc
inc
in
arpl
xchg
push
divl
push
outsb
dec
push
sbb
xchg
lahf
inc
lret
imul
dec
and
vpmadcsswd
or
out
pop
incl
pusha
mov
int3
sbb
pop
sahf
int3
not
mov
jmp
aaa
leave
ljmp
mov
xor
pavgw
xchg
inc
ja
loopne
add
outsl
mov
jo
xor
lahf
push
or
dec
lock
lock
xor
outsb
mov
fiadds
js
adc
xor
popa
out
adc
arpl
scas
mov
int
inc
jg
or
pusha
out
shrb
scas
add
sbb
pop
repnz
test
das
push
or
leave
adc
xlat
push
cmpsl
addb
jmp
xchg
pop
cmp
sarb
mov
mov
hlt
mov
xchg
mov
cmp
addr16
push
jnp
cmp
or
dec
pop
xlat
inc
dec
or
movsb
nop
jecxz
sbb
mov
adc
subl
mov
adc
add
sub
faddl
test
cld
scas
nop
inc
xchg
inc
in
leave
mov
loope
rclb
mov
jb
fnstenv
je
dec
mov
and
rolb
ret
inc
mov
sbb
pop
jns
jg
push
xor
ret
inc
mov
cmc
add
ljmp
popf
pop
sbb
cmp
jle
sbb
lret
subb
push
or
insl
cmp
xchg
push
jmp
add
invd
and
roll
iret
pop
popf
add
sbb
mov
and
sub
jmp
jae
lahf
fbstp
mov
mov
inc
inc
mov
inc
ret
sub
xchg
and
cmp
sbb
das
dec
test
sub
ds
xlat
cmpl
inc
aaa
leave
xchg
sahf
inc
pop
and
lret
fildl
pop
iret
sub
sub
imul
cmc
dec
fwait
and
scas
aas
nop
cmp
adc
clc
lods
push
mov
fwait
mov
pop
inc
jbe
push
roll
jne
fimuls
in
leave
sbb
push
xor
call
stc
inc
mov
jp
nop
lock
mov
xchg
jge
and
pushf
hlt
notb
daa
rcrb
lea
andb
xor
loope
fdivrl
call
test
pop
or
repz
jp
lar
cmc
gs
add
rcrb
loope
sbb
mov
pop
and
int3
cmpsl
fistpl
cmpsb
ljmp
cmpsl
shlb
lods
imul
jno
mov
scas
xor
lods
call
or
cmp
mov
xchg
aas
montmul
cmpsb
inc
mov
and
push
inc
outsb
add
pop
loop
loopne
add
cwtl
push
shl
mov
mov
xor
jg
pop
je
hlt
push
xor
jge
rep
daa
ss
ret
inc
insl
cmp
fistpll
insl
mul
dec
sbb
pop
push
das
xchg
xchg
inc
test
and
mov
ds
inc
push
mov
out
fisubrs
lcall
cmp
mov
jnp
jl
dec
aad
pop
mov
pop
add
or
push
and
sub
dec
push
push
adc
lret
add
cld
movsb
push
add
rcll
adc
pop
inc
jmp
mov
jg
cmc
fistps
hlt
je
mov
pop
ficoms
pop
push
ret
fcmovnbe
mov
testb
mov
pop
pop
popf
daa
das
mov
cmp
add
cmpsb
les
and
jg
jle
movsb
pop
adc
out
push
out
add
xchg
mov
cmp
insl
xchg
ret
inc
mov
push
jmp
xor
pop
pop
sbb
movsb
fimull
lods
xchg
sub
mov
cmpb
inc
adc
mov
std
push
add
push
or
mov
shll
cmp
cltd
push
fidivl
jge
push
ret
xor
cmp
aam
adc
jns
fidivrs
mov
shrb
pop
jl
hlt
or
or
jmp
xor
mov
jae
mov
pop
mov
addr16
lods
loope
icebp
sbb
call
pop
adc
pop
push
inc
lds
mov
loopne
jp
cwtl
mov
lods
pop
fcmovnb
mov
arpl
loop
jo
mov
fldl
pop
pop
and
shrb
jbe
bound
movaps
cltd
out
or
outsb
jae
xchg
xchg
xchg
jl
int
xchg
repz
xchg
dec
xor
pop
mov
mov
pop
push
fwait
mov
mov
mov
stos
add
popa
adc
pop
sub
leave
inc
add
popa
mov
pushf
dec
ds
repz
sub
adc
jecxz
jno
cmp
pop
adc
enter
sub
fiaddl
stos
sbb
pop
sub
out
sub
cltd
lods
xchg
jecxz
negl
popf
inc
push
push
adc
gs
aaa
dec
xlat
shl
sub
fisubrl
bound
dec
dec
pushf
mov
inc
jnp
fisubrs
sub
mov
xchg
cltd
shlb
insl
pop
and
or
push
and
icebp
sbb
les
adc
jl
notb
and
and
and
and
lea
out
xor
enter
test
nop
and
sbb
movsb
xchg
push
push
repnz
adc
mov
jge
sbb
pop
mov
ret
push
jl
cmp
js
data16
std
in
xchg
mov
push
cmp
push
lea
daa
cmp
xlat
jecxz
pop
stos
mov
sti
ss
adcb
lcall
mov
jae
fsubrl
sub
cmp
movsb
inc
and
ret
ret
jno
clc
dec
icebp
test
rol
adc
cwtl
outsl
sub
xorl
sbb
rcrl
popa
mov
out
push
mov
dec
scas
call
push
jnp
cli
add
fdiv
push
sahf
mov
aaa
mov
les
nop
cmpsl
mov
pop
insl
jns
lods
jge,pn
dec
sub
inc
int
pop
notl
ljmp
mov
popa
mov
call
arpl
xor
inc
pop
out
sbb
out
lods
push
pop
je
mov
rol
adc
jmp
outsl
jns
out
daa
sub
xor
xchg
fwait
daa
stos
sbb
jns
scas
dec
mov
or
fnstsw
aas
mov
inc
jl
xchg
fdivs
stc
cmp
data16
sti
push
add
push
pop
push
xchg
das
cltd
inc
int3
dec
imul
push
sbb
push
push
leave
jbe
enter
movsl
ret
jl
data16
divl
mov
xor
movb
bound
addl
lock
stc
rcrb
test
insb
or
push
mov
mov
cmc
jne
cmp
xchg
pop
mov
jge
xlat
mov
stos
sahf
add
ret
les
xlat
jg
jle
push
daa
fmul
mov
and
fildll
lods
hlt
movsl
scas
dec
stc
jns
enter
jnp
into
ja
rorl
jg
xor
cwtl
sahf
cmp
sbb
sbb
pop
out
ja
rcl
aad
lret
jne
outsl
dec
mov
call
xor
dec
gs
mov
lahf
stos
nop
sub
pop
and
call
or
cltd
xchg
xlat
and
rcll
cmp
cmp
stos
xlat
stc
xor
push
mov
rol
in
cltd
mov
inc
jne
enter
loope,pn
cmc
jbe
xor
loopne
jmp
movsb
xchg
mov
adc
vpsrlw
hlt
rorl
jl
cli
push
movsb
movsb
xchg
xchg
jb
iret
lahf
push
cmp
pop
xlat
cmp
in
cmovg
in
cli
insl
mov
mov
or
jne
popf
les
das
push
adc
rolb
cmp
ds
es
aas
xchg
sti
loope
int
aad
jns
adc
dec
fmull
xchg
xchg
loope
and
or
mov
cwtl
pop
xchg
faddp
fists
cmp
mov
mov
shll
in
jb
jae
movsl
pop
pushf
imul
cltd
jmp
in
mov
js
push
divb
mov
repz
ss
or
add
push
in
inc
sbb
add
call
mov
and
fists
bound
aaa
ja
cmc
push
arpl
jbe
popa
ret
pop
scas
inc
sub
pop
out
js
leave
adc
sbb
das
lds
repnz
dec
ret
push
fdivs
fwait
data16
sar
lret
cltd
insb
or
dec
mov
or
mov
loope
les
test
mov
xchg
mov
push
mov
dec
adc
call
sub
imul
daa
enter
sub
inc
and
lods
jns
call
push
xor
outsl
inc
jo
or
cmp
sbb
xchg
into
into
adc
cmp
aaa
mov
dec
and
xchg
cmp
in
xor
push
outsb
jo
or
sbbl
bound
inc
jo
mov
in
add
lcall
scas
sub
sub
sbb
push
mov
mov
or
add
enter
push
inc
dec
sbb
sti
jb
js
ret
mov
jnp
ficoml
or
fistpl
sbb
mov
hlt
mov
jecxz
jmp
popa
cmp
adc
ffree
and
out
pop
push
or
loop
lahf
call
icebp
pushf
push
hlt
icebp
add
push
cwtl
dec
in
test
mov
jecxz
ja
lahf
sub
jbe
loopne
loop
xor
or
arpl
int
repz
mov
inc
and
and
mov
lahf
push
xchg
je
sbb
jmp
popa
jnp
mov
fcoml
and
sub
ss
je
inc
sbb
in
push
dec
ss
fadd
pushl
push
test
mov
testl
cwtl
je
dec
into
jnp
dec
lret
adc
shll
xchg
push
jbe
jns
jo
cmp
lret
jae
mov
xor
xchg
add
adc
outsb
mov
loop
cmp
out
stc
in
xchg
mov
xor
arpl
das
xor
bound
enter
popa
loop
mov
imul
adc
dec
in
loop
adc
cmc
orl
sub
imulb
in
out
test
adc
and
xchg
or
mov
lea
lahf
xor
popf
shlb
inc
les
inc
push
sub
inc
ss
stc
sbb
addr16
cs
pop
pusha
fsubrl
jle
and
pop
push
inc
or
jno
cmp
jl
dec
lds
outsl
aad
pop
xchg
jecxz
pop
xor
insl
dec
jmp
fmull
out
test
insb
imul
cld
dec
in
leave
test
ljmp
mov
push
sbb
data16
mov
lahf
inc
push
inc
xchg
arpl
or
add
add
les
sbb
scas
mov
push
inc
adc
push
enter
cmpsb
jp
jbe
push
sbb
or
mov
scas
cli
popf
adc
sbb
lods
scas
ror
pop
insl
mov
call
rcll
inc
sahf
jo
jnp
ret
insb
sahf
imul
lretw
ficompl
aad
dec
call
jne
dec
dec
xorb
ja
dec
idiv
addr16
std
outsl
jmp
add
push
cmp
sub
mov
cmpsb
cmp
addl
sub
js
outsb
pusha
lahf
push
fs
push
icebp
inc
cli
jp
dec
mov
fnsave
test
sahf
insl
lea
inc
outsb
fcoms
push
cmpsb
rcr
inc
add
jne
xchg
fcmovne
loope
mov
mov
pop
cltd
push
inc
jecxz
aad
lahf
sbb
rcr
lds
xchg
xchg
out
aaa
pop
jnp
je
icebp
shlb
icebp
push
push
in
mov
shl
rcrl
icebp
mov
push
movsl
test
inc
aad
stos
arpl
mov
pop
pop
mov
sbb
movsl
lret
movsl
xchg
pop
shll
gs
movsb
cmpsl
ss
mov
and
dec
out
dec
pop
sahf
incl
in
xor
gs
lahf
or
xor
xchg
jg
fimuls
add
clc
cli
lods
inc
mov
and
cs
and
jle
movsl
cmc
mov
jmp
inc
xchg
sub
lds
and
cmp
andl
ja
stos
ljmp
pop
lea
push
out
mov
movsl
inc
les
int
sti
out
pop
mov
mov
nopl
popa
sub
and
sbb
jno
dec
and
fisubs
movq
xor
aam
xchg
repnz
clc
inc
pop
jg
cmc
shll
xor
mov
adcb
int3
repz
xchg
pop
or
add
inc
or
loop
clc
xchg
stos
push
out
aaa
xchg
les
push
jge
loop
add
mov
sbb
push
pop
push
mov
aas
sbb
dec
mov
jb
pop
stos
cmpsw
bnd
cmp
cmc
es
repnz
add
fwait
mov
pop
push
xor
aad
push
mov
aam
je
and
sbb
lret
pop
push
lea
sbbl
cmp
das
xchg
cmp
fisttpl
fidivrl
outsl
jns
in
inc
xchg
popf
dec
testl
fcompl
sbb
xor
leave
popa
xor
sbb
fcomi
xor
sbb
and
inc
xor
out
push
jo
fisttpll
rolb
mov
adc
sbb
push
loopne
loop
enter
ret
dec
lea
in
add
sub
add
lock
aas
dec
xlat
dec
push
sbb
lret
iret
es
ds
pusha
xchg
xchg
jp
fwait
add
cli
pushf
sarb
xchg
mov
imul
mov
loope
lds
movsb
dec
cmpsb
in
in
sub
rolb
test
repnz
mov
jle
pop
aaa
nop
push
loopne
jmp
inc
lahf
pop
flds
repz
ret
xor
cli
dec
lahf
jl
push
inc
fldenv
and
out
cwtl
daa
dec
mov
call
rcll
cld
dec
loop
fucom
cmp
jmp
lret
cmp
inc
inc
cmp
loopne
outsb
out
sub
dec
push
lret
es
inc
and
sbb
cmpsl
lahf
nop
pop
mov
ficoms
sbbb
push
sbb
pop
mov
shrl
test
xor
inc
cmp
ret
cmpsb
dec
jo
mov
in
mov
test
roll
imul
pop
inc
xor
sub
push
cmp
pop
push
or
es
dec
dec
and
shll
xchg
sbb
add
or
fs
xchg
lea
iret
faddl
stos
imul
out
out
arpl
xor
push
imul
loopne
dec
cmpsb
in
fldcw
and
cmp
enter
push
cli
pushf
stos
pop
movsb
jecxz
xorl
fimuls
xchg
popa
push
sbb
mov
mov
dec
addr16
push
icebp
mov
mov
out
push
add
sub
nop
jl
pop
or
cmpsb
dec
out
icebp
bound
cs
or
fldenv
fchs
lret
cs
jno
fldcw
push
mov
adc
mov
cmp
arpl
mov
sub
in
cmp
pop
mov
out
gs
xchg
mov
mov
add
ljmp
out
jnp
xor
icebp
push
dec
fistl
inc
cmp
sbb
rcl
xor
out
pusha
mov
inc
in
rclb
push
jnp
xchg
jno
or
inc
repnz
inc
pop
ja
fs
call
sub
ficoms
mov
rol
mov
fnsave
int
sbb
xor
add
and
shrb
arpl
lea
sbb
lret
xchg
fiadds
and
push
or
dec
jle
ds
adc
push
es
cmpsb
ds
repz
hlt
outsb
pushf
mov
out
pop
imul
js
enter
std
mov
into
dec
dec
push
out
xchg
mov
mov
or
dec
popf
adc
rep
test
ret
inc
mov
fnstsw
jno
outsl
ret
gs
mov
jne
xlat
pop
push
fdivrl
mov
cmp
and
push
push
into
and
ja
popf
lcall
cmp
cmp
push
pop
jg
stos
inc
cmp
nop
and
push
stos
out
inc
in
mov
aaa
ljmp
sti
iret
sub
mov
je
es
clc
hlt
cltd
ficoms
add
mov
dec
push
sub
xor
sub
push
out
mov
aad
cmp
adc
cltd
aaa
mov
inc
clc
les
insl
and
fwait
push
add
xor
and
jg
call
mov
sub
sbbb
add
out
push
fidivs
push
add
daa
data16
pop
sub
pop
ljmp
adc
pop
jb
out
cmp
fiaddl
add
cmp
loope
and
adc
mov
stos
pop
ret
jmp
lds
movsb
xchg
hlt
push
xchg
js
mov
sbb
sbb
push
mov
cmp
mov
mov
push
cmpsb
sub
xchg
adc
lcall
es
aaa
xor
adc
insl
test
in
popa
xchg
mov
pop
nop
insl
mov
ret
push
pop
je
and
sub
je
ss
aam
out
popf
sub
xchg
lahf
shrb
xchg
push
loopne
movsl
pop
xchg
jecxz
push
pusha
shrb
pushf
adc
cmp
push
andl
aas
mov
cmp
lock
in
push
out
sbbb
xlat
dec
push
mov
inc
mov
cs
pushf
cmp
jp
leave
sbb
inc
shll
jl
sbb
adc
cwtl
xor
dec
xchg
jge
sbb
ds
fwait
jmp
ljmp
movsl
adc
pop
add
push
dec
xchg
in
lock
add
inc
pushf
stos
dec
out
and
jl
mov
out
sbb
aad
pusha
push
sbb
inc
xchg
out
mov
jg
lret
shl
cwtl
mov
xchg
inc
xchg
ret
push
orb
mov
pop
dec
jecxz
mov
pop
push
sub
jl
aad
inc
add
sub
sub
popa
ret
xchg
sbb
or
jno
push
mov
or
lret
icebp
sbb
and
cmp
cltd
xchg
mov
or
and
xor
push
mov
inc
popf
xlat
push
rol
adc
push
pop
push
sub
pop
sub
sahf
xor
adc
xor
fwait
aaa
jle
leave
lea
add
ja
js
movsb
scas
scas
or
sub
mov
out
loope
lods
jbe
inc
les
in
and
movsl
in
add
stc
fadds
lods
loop
mov
cmp
mov
inc
jge
scas
and
fdivl
sbb
mov
rcl
jb
sub
sub
cs
push
stos
add
mov
fistl
xchg
shlb
mov
bound
push
pop
add
jmp
les
pop
xor
dec
popa
in
sbb
pop
lcall
xchg
cmp
fdivrs
mov
pop
cltd
adc
xchg
push
mov
mov
mov
xor
sub
cmpsb
fadds
jle
cli
mov
cld
test
bound
out
dec
scas
and
sub
inc
jmp
mov
aas
and
adc
lret
mov
add
popa
and
loop
ss
fsubp
imul
cmp
dec
jno
mov
mov
adc
pop
dec
das
mov
adc
lods
aas
or
xchg
adc
add
mov
in
movsl
push
add
xchg
pop
mov
cmp
push
loope
sahf
sub
lea
add
lcall
cmc
dec
mov
iret
mov
fwait
imul
xchg
mov
xchg
jmp
lods
ret
jle
xlat
mov
or
push
aas
in
test
addr16
mov
sbb
pop
rorb
dec
lahf
cld
pop
jg
mov
fbld
ja
rcll
aaa
fdivr
dec
or
icebp
jns
jb
mov
push
adc
test
dec
jae
addl
xor
pop
or
std
jmp
adc
and
loop
push
cltd
insb
lods
hlt
stc
ret
sti
adc
dec
add
pop
mov
lock
push
sub
mov
rorl
pop
ss
inc
andb
push
cmp
sub
imul
jb
std
lock
pushf
xchg
dec
fnstsw
mov
ss
mov
adc
ds
fsts
cmp
stos
mov
ds
shlb
popf
ficoml
sbb
dec
std
push
ss
sub
xchg
and
rol
icebp
popf
mov
cwtl
xchg
popa
es
insl
sub
inc
dec
cltd
lds
je
mov
rol
push
inc
sbb
jns
mov
dec
stos
sbb
pop
sbb
fmuls
sbb
cmpsb
testb
mov
rorb
jle
fnstsw
or
ja
cmpsl
mov
xor
push
aaa
rolb
in
sbb
pop
sbb
mov
std
popf
out
or
mov
ljmp
lea
add
out
scas
aas
jnp
clc
shrb
fs
mov
push
cltd
scas
pop
shl
mov
mov
mov
outsl
test
sub
shll
pop
xor
or
rcl
sub
cmp
jne
cwtl
fst
out
out
fbld
sub
mov
sub
lods
mov
xlat
mov
leave
push
stos
pusha
sti
nop
out
insl
sub
in
mov
call
fsubl
mov
cmp
push
in
dec
shl
inc
pop
mov
sub
sbb
cmp
mov
adc
or
enter
es
mov
mov
sti
jecxz
pushf
add
movsb
sbb
push
frstor
in
into
sarl
scas
sub
popf
ret
dec
cwtl
xor
jnp
lahf
popa
out
call
ljmp
clc
mov
jp
fcmovnb
and
push
aad
imul
mov
lds
dec
test
or
test
pop
xchg
jmp
and
jns
mov
jmp
and
inc
mov
clc
cmp
outsb
xchg
jns
inc
jmp
pop
adc
pop
push
cwtl
mov
or
jbe
adc
fs
out
add
mov
ja
jno
insb
lods
cmp
mov
or
sahf
pop
int
xchg
dec
mov
push
lret
cmpsb
sub
ficoml
or
mov
sbb
mov
int3
mov
and
shll
or
mov
push
into
das
movsl
push
mov
pop
fst
jmp
sarl
movsl
dec
cmpsl
cmp
lods
orb
sbb
iret
or
jae
xor
cwtl
jp
jg
jg
leave
and
adcb
loopne
mov
push
rorb
adc
lea
sub
aam
js
and
add
jge
sbb
sub
mov
and
or
pop
push
fwait
and
xorb
pop
jle
ja
sbb
scas
in
push
push
jns
ja
clc
in
push
jne
and
jne
mov
and
xchg
and
mov
lds
adc
or
push
inc
out
adc
scas
inc
sbb
mov
mov
mov
adc
dec
and
and
imul
xchg
in
repz
stc
mov
mov
push
mov
fbstp
nop
in
xchg
xchg
mov
mov
mov
fsubs
inc
test
lret
dec
js
jge
push
and
jb
dec
inc
dec
fstps
adc
cwtl
push
cmpl
loop
mov
fsub
add
aam
scas
add
subb
dec
xchg
push
popa
ficoms
xor
push
adc
and
int
bound
fcmovnb
adc
push
add
out
push
jg
movsl
jle
inc
roll
push
and
jg
dec
and
out
stos
insl
mov
xchg
cmp
sti
decb
imul
into
jmp
xor
sbb
shrl
sub
add
sti
xor
adc
cmp
aam
dec
mov
inc
hlt
adc
pop
mov
xchg
dec
int3
xchg
ret
or
adc
cmp
mov
jbe
das
and
push
enter
popf
cmc
adc
imul
pop
out
push
aaa
dec
or
xchg
fldenv
lods
aad
je
and
test
jge
popa
fnstenv
xchg
mov
and
pop
ret
test
mov
out
inc
inc
push
hlt
imul
lahf
mull
push
xor
popf
jle
jge
adc
sahf
ss
jmp
inc
iret
mov
stos
adc
and
mov
cltd
push
adc
ljmp
rol
or
test
arpl
lods
cmc
insb
cmp
mov
lret
push
addr16
mov
mull
cmpsl
dec
and
lds
mov
xchg
popf
push
fisttpll
int3
add
inc
jb
lahf
aaa
mov
in
and
sbb
mov
cmpsl
into
dec
test
pop
mov
insl
adc
das
cmp
xorw
cmp
into
loopne
imul
dec
sbb
pop
jnp
mov
push
push
lods
mov
or
lahf
lcall
jle
cmp
bound
ljmp
aam
insl
insb
mov
pop
pushf
adc
jle
mov
lods
int3
cmp
std
outsb
add
hlt
fwait
imul
mov
ljmp
movsb
mov
fdivr
fistl
jb
fidivrs
sbb
adc
adc
mov
dec
fwait
cmp
stc
imull
fld
xlat
subb
xor
mov
xchg
scas
dec
ret
push
iret
mov
add
xchg
shrl
es
pop
insb
outsb
or
ds
leave
int
rorb
and
popf
inc
iret
les
add
ret
inc
or
and
cli
in
mov
aaa
js
pop
faddl
daa
dec
fnstcw
test
mov
pop
in
es
cmc
loope
adc
cmpsb
out
ljmp
jmp
sbb
nop
dec
cwtl
jl
je
loope
or
sub
adc
jmp
pop
xchg
aad
test
addr16
mov
cmp
pop
fldt
sbb
hlt
out
adc
dec
jnp
lret
adc
scas
xchg
sub
mulb
mov
sarb
int
mov
loop
dec
divb
rcll
fs
mov
jo
add
loop
adc
daa
adc
jb
jb,pt
xchg
pop
test
in
mov
hlt
fcoml
inc
inc
out
insl
mov
cmp
pop
outsb
jle
xchg
es
inc
mov
sbb
idivl
sti
inc
cmp
jg
rcl
mov
into
pop
add
scas
loopne
sbb
push
push
orb
call
ret
add
cmpsl
cmpsb
pop
inc
aad
loopne
dec
dec
mov
vpsubw
pusha
sbb
xchg
inc
sub
pop
int
out
push
mov
scas
pop
test
cmp
test
push
pop
inc
mov
push
and
cwtl
inc
jae
pushw
std
pushf
popa
cmp
mov
mov
repz
jp
jge
xchg
pusha
add
push
in
xchg
adc
dec
ret
sti
addr16
jno
xchg
stos
hlt
scas
mov
pop
cmpl
or
sub
mov
add
and
mov
mov
jae
jne
cmpsl
inc
cmp
popa
aaa
loopne
divb
pop
fistl
push
dec
mov
aad
lret
xor
push
stos
push
xchg
xchg
ja
push
push
pop
sar
mov
stos
push
sbb
push
xchg
adc
mov
xchg
daa
cmp
push
daa
subb
jnp
jno
iret
inc
push
loop
inc
popf
and
xor
xchg
fistpll
and
rorl
nop
push
dec
push
test
fwait
push
leave
and
shrl
and
shlb
mov
adc
xchg
sbb
fadd
les
inc
popa
add
int
iret
fcom
sbb
cs
lcall
pop
gs
mov
data16
sub
sbb
xchg
xchg
clc
ss
mov
mov
fimull
aam
adc
imul
aaa
mov
jne
shlb
push
xorl
fidivrs
ret
ret
sub
lcall
adc
ret
adc
popf
push
daa
lcall
out
imul
shll
sub
add
aam
lea
xchg
lods
out
mov
std
xchg
btr
ss
or
popa
pushf
test
das
cmpsl
xlat
xchg
imul
repnz
jge
sub
jp
stos
jmp
mov
cmp
ja
rolb
xchg
ret
aas
xor
popa
push
mov
mov
push
mov
mov
sbb
xchg
pop
push
sub
and
fsubs
push
sbb
cmp
movb
jno
shl
jmp
jns
cwtl
push
mul
in
inc
fidivrs
out
pushl
inc
movsb
sub
push
rcrl
outsl
pop
jne
pop
cmp
incb
adc
inc
xchg
imul
cmpsl
inc
inc
dec
outsl
mov
daa
mov
push
enter
fpatan
xchg
xor
js
xchg
addr16
push
iret
int
orl
leave
orl
fsubp
stc
xchg
cmp
repz
shrl
mov
add
pop
fdivrl
pop
shrl
mov
mov
mov
imul
sbb
push
mov
sbb
xchg
and
xchg
cwtl
cmp
inc
arpl
or
stos
outsl
out
pop
add
pop
xchg
stos
adc
inc
dec
in
xor
hlt
movsl
sub
and
out
cwtl
lods
adc
cs
and
outsb
xor
mov
andb
cmp
sub
jno
cmc
aam
pop
cld
sar
icebp
and
fildl
int3
ret
fdivr
and
lret
inc
sub
xchg
rolb
push
stos
or
push
cld
cmp
test
jl
lret
add
popf
jp
lods
icebp
aam
cmp
out
mov
cmp
xlat
ja
out
jp
pushw
cmpsl
imul
and
and
stos
mov
mov
aas
and
clc
mov
add
jo
jecxz
cmp
emms
sarb
mov
mov
dec
jns
push
and
push
in
aas
mov
lret
or
push
mov
aam
push
mov
push
mov
fdiv
dec
cmp
xchg
mov
mov
lds
aad
cwtl
bound
add
scas
jecxz
jg
jne
jno
and
mov
push
mov
sub
xor
popf
fidivrl
shrl
and
push
rolb
mov
xor
dec
iret
inc
push
and
adc
mov
add
xlat
sbb
mov
insl
inc
inc
fwait
sti
cli
outsb
stos
fidivl
dec
xchg
add
mov
in
adc
sub
mov
stc
pop
rol
fisttpll
fstpt
loope
fildl
aad
push
popf
ljmp
add
daa
sub
inc
cmp
jns
mov
sahf
jp
pop
push
xor
int
into
pand
movsl
cwtl
mov
inc
in
dec
pushl
jno
mov
sbb
clc
push
mov
jge
les
dec
mov
shlb
dec
lret
nop
sub
enter
xor
inc
mov
mov
nop
in
xchg
cmpsl
mov
or
scas
sub
or
stos
cld
mov
cmpsb
mov
or
fdivr
ljmp
inc
sub
pop
ret
jg
movsb
mov
mov
xchg
push
fildl
fidivs
push
clc
out
mov
push
std
mov
pop
aam
push
shr
cmp
mov
hlt
retw
mov
imulb
ja
mov
and
xchg
sub
xor
icebp
or
mov
pop
test
call
jmp
and
inc
bound
cmp
pop
jo
movsb
ss
inc
nop
fdivs
push
push
outsb
enter
pop
sahf
xchg
jge
faddl
xchg
out
flds
push
inc
aaa
pop
test
int
sub
rcrl
ss
outsb
cmpsb
movsb
fsubs
mov
ret
mov
or
and
fnstenv
imul
cmpsl
mov
popa
fsubp
mov
lods
pop
sarl
and
and
shrb
and
sbb
xchg
mov
clc
cli
icebp
add
mov
jle
pop
dec
adc
js
aad
aad
movsb
push
popa
push
push
dec
jle
cs
call
inc
sbb
and
and
loop
mov
ja
mov
cld
xlat
push
xchg
push
or
sbb
ret
pop
sahf
cli
movsl
or
jnp
popa
push
or
dec
in
jge
jle
push
stc
ficomps
fadd
push
mov
popf
mov
outsl
sbb
hlt
xor
loop
jbe
mov
lret
outsb
cmpsl
aaa
xchg
push
dec
lahf
sbb
pusha
cmp
rclb
lock
jne
or
out
pop
mov
sbbb
mov
pop
ds
sbb
nop
push
test
sbb
mov
popa
mov
dec
test
call
mov
in
sub
movsl
and
in
mov
pop
inc
sbb
andb
and
sub
xchg
mov
xchg
inc
test
jb
push
push
or
jle
mov
dec
jl
gs
ja
mov
inc
and
jnp
leave
or
mov
pop
adc
mov
jge
mov
mov
orl
push
int3
or
ss
cli
dec
sbb
fadd
je
scas
fadds
cmp
pop
ret
jl
jbe
out
into
jge
in
add
ror
negl
dec
pop
out
pop
xor
adc
mov
inc
cmp
int
outsl
rclb
cmp
mov
and
mov
mov
sub
ret
push
push
aad
cmp
fwait
jo
cltd
adc
cltd
add
das
lds
out
lds
int
gs
mov
mov
mov
imul
ret
inc
xchg
call
xchg
fists
add
add
sub
call
sbbl
mov
icebp
mov
aad
sbb
orps
add
add
xor
inc
push
pop
add
mov
test
sbb
xchg
adc
pop
adc
mov
or
je
jnp
pop
mov
outsb
or
ds
add
inc
aam
ljmp
xchg
xchg
adc
stos
out
sbbb
add
iret
std
cltd
std
lods
test
mov
cld
ss
dec
cli
mov
addl
pusha
iret
gs
hlt
mov
int
and
pop
push
xchg
nop
adc
cltd
xor
adc
aas
xlat
sbb
into
pop
and
cmpb
sbb
into
in
sahf
movsb
mov
test
cs
mov
mov
popa
rep
ret
sub
inc
or
test
repz
popf
and
aas
pop
mov
ljmp
push
jg
xor
push
mov
ljmp
ret
bound
mov
fidivrs
sub
dec
in
add
xchg
mov
inc
aam
pop
push
mov
mov
jb
push
inc
popa
iret
cmp
aaa
cmpsl
fs
sub
in
jle
xor
add
pop
push
aaa
mov
mov
mov
dec
mov
int3
addr16
mov
dec
jnp
pop
roll
or
adc
pop
cmp
pop
cmpsb
in
mov
xchg
jnp
inc
nop
and
sbb
popf
or
int3
inc
notb
sub
pop
mov
gs
arpl
jne
mov
leave
cmp
sbb
subl
push
loope
gs
pop
inc
sarb
add
or
popf
sbb
xor
fisubl
mov
imulb
jno
sub
jne
clc
lret
mov
lea
loopne
lcall
lock
sub
cmp
jg
xchg
inc
std
cmp
movsl
out
adc
xchg
sbb
in
adc
jo
dec
push
das
cwtl
jne
push
je
mov
dec
in
push
lret
jp
fsts
fbld
aam
add
test
mov
push
out
xor
xchg
pop
xor
push
adc
mov
jne
inc
shl
mov
lret
push
and
pop
js
cmc
outsb
aas
mov
jo
inc
add
shlb
mov
popa
jge
add
mov
fisubrl
fwait
subb
out
mov
mov
stos
mov
sbb
movsb
repnz
loopne
jge
xchg
aas
popf
xchg
aam
pop
sbb
mov
outsb
movsb
mov
xchg
in
jbe
adc
mov
add
mov
sahf
inc
and
fisubrl
or
or
adc
xchg
and
lahf
repz
xlat
jecxz
fisubs
sbbb
fisttpl
repnz
push
cmp
cltd
out
test
pop
or
push
loopne
push
andb
xor
loope
sub
mov
xchg
loop
pop
cmp
lret
ss
aad
mov
inc
out
mov
jne
xchg
insl
sbb
call
xorl
adc
cmpsl
pop
or
and
fs
lock
lret
fwait
jmp
outsb
rcl
stos
roll
push
mov
lahf
xchg
or
je
xlat
jg
cmpsl
stos
adc
push
sbb
xchg
sbb
pop
imul
jns
gs
xchg
mov
jg
fldcw
cmp
xchg
imul
std
and
and
mov
movsl
cmpl
jmp
mov
mov
jb
arpl
dec
inc
aaa
sub
jo
sti
pop
xlat
mov
dec
cmovl
mov
loopne
inc
mov
push
pop
sti
mov
cmp
xchg
cmpsb
shll
dec
cmpb
cmovno
jl
xlat
xchg
in
fld
push
cmp
cmovne
lret
jne
out
sbb
data16
jae
pusha
in
push
and
cmp
sbb
xchg
sbb
mov
out
fcmovbe
aas
cmp
pop
mov
jp
mov
loope
push
jno
sub
and
dec
pop
mov
lds
int3
push
insl
f2xm1
mov
imul
push
jle
icebp
xor
dec
outsb
out
or
or
jle
jp
xor
mov
scas
out
xor
leave
cmp
fistpll
xchg
outsl
cld
cmpsl
mov
fs
stos
pushf
or
add
bound
push
push
mov
repnz
jo
call
int
sub
popa
adc
sti
mov
mov
int3
mov
imul
mov
nop
lcall
scas
aaa
enter
inc
lahf
lods
xor
cwtl
cmpsb
mov
cwtl
sbb
repnz
stc
mov
bound
lods
jle
outsb
adc
jb
aaa
lods
xchg
jp
in
imul
adc
push
cltd
or
insb
or
dec
jo
fsubr
jae
daa
jle
xchg
movsb
rclb
lds
icebp
movhps
push
add
push
cmp
inc
cmp
mov
push
adc
and
rcl
loope
fstps
dec
enter
pusha
inc
mov
adc
in
sbbl
mov
or
cmpsb
push
stos
pop
mov
outsb
divb
orb
lret
cmp
rolb
les
cld
or
loop
cs
push
mov
ljmp
xchg
andl
cltd
test
mov
std
inc
into
and
xor
mov
dec
pushf
ljmp
xor
es
sub
dec
xchg
addb
cmpsb
mov
mov
fwait
adc
outsl
and
ficompl
ret
mov
dec
cmp
cmp
sti
jmp
jecxz
or
add
aad
fwait
test
sub
stc
sti
or
xor
mov
mov
jecxz
out
xchg
leave
lods
xor
xorl
xor
inc
shll
jb
div
xchg
xchg
push
stos
jno
cs
or
popa
ds
into
dec
in
ljmp
stc
movsb
ss
pop
test
mov
idivb
add
push
call
call
stos
mov
fld
lcall
pop
orb
jle
mov
and
dec
jecxz
daa
enter
js
adc
js
pop
sub
adc
xchg
or
stos
ds
out
xor
pop
cmp
xchg
out
or
mov
or
shl
xor
jmp
in
jmp
push
clc
pop
cmp
shll
inc
adc
jmp
cmpps
les
xchg
push
arpl
jne
pushf
sahf
mov
jnp
sbb
test
test
or
pop
pop
xrelease
and
and
es
sub
lret
loopne
xor
mov
aad
ret
mov
xor
inc
push
mov
lret
clc
test
into
jb
push
es
mov
pop
mov
jp
adc
xchg
popf
add
arpl
loope
pop
jl
add
inc
push
je
rcl
rcr
mov
cmpsl
pop
fcmovnbe
sub
sbb
xchg
jno
sahf
es
dec
lds
cmpsb
dec
cmc
in
jp
inc
jecxz
inc
roll
pop
aad
cltd
cmp
push
sbb
cmp
sbb
xlat
jle
out
dec
daa
idivb
or
inc
call
mov
divb
and
mov
repz
or
in
lret
rorl
mov
add
push
lods
lea
xchg
add
sbb
push
add
popa
scas
fwait
cwtl
js
mov
pusha
adc
jnp
and
dec
jbe
add
imul
pop
mov
in
push
jae
jbe
push
aam
sti
mov
rorb
push
dec
add
adc
leave
dec
sub
mov
add
pop
sub
jg
or
jns
bound
mov
adcl
ja
pop
mov
mov
or
dec
movaps
xlat
movsb
dec
jl
mov
mov
xchg
enter
js
cmp
jae
repz
sarl
pop
sbb
push
cmpsl
jne
lods
push
negl
repnz
dec
sub
xor
xor
sub
adc
out
fstpl
mov
ret
int3
push
pusha
int
xor
mov
xlat
stc
mov
push
std
idiv
cmp
fsts
lcall
int
hlt
lods
jl
cmpsl
xor
pop
sub
xchg
insb
pop
push
imul
or
cmpsb
pop
stc
or
xchg
jg
pop
adc
push
out
arpl
js
xor
out
mov
in
push
aaa
jae
mov
ss
lods
sub
jmp
jle
cmp
das
adc
dec
sti
lock
jmp
not
add
pop
daa
sbb
cmp
sbb
ja
xor
or
test
lods
test
mov
ficoml
jo
push
imul
sub
xchg
sbb
dec
sub
mov
xchg
popa
pop
sbb
repz
aaa
cs
cmpsb
push
imul
and
and
cmp
into
push
ret
outsl
scas
xor
jl
fmuls
or
outsl
andl
insb
jno
cmpsl
inc
js
sub
cmp
lcall
adc
les
sbb
imul
mov
mov
jmp
sub
sbb
popa
sbb
mov
decb
pop
addr16
daa
dec
imul
and
jne
dec
xor
dec
push
mov
cmpsl
push
pop
int3
fcom
mov
pop
fs
data16
and
mov
enter
test
inc
adcl
push
mov
inc
cmp
cmc
stos
test
movsb
fucomip
mov
inc
mov
enter
jb
out
sub
dec
lds
and
and
inc
add
and
and
test
dec
push
js
cmp
bound
and
mov
out
push
sbb
add
movsb
je
jae
movsb
mov
sbb
popa
stos
aas
out
xchg
or
mov
ficoml
sbb
xor
test
dec
cld
push
cmp
pop
test
jno
test
jge
and
mov
mov
in
ret
cmp
jb
call
jbe
aaa
out
aas
mov
test
shlb
lea
aaa
rorl
jnp
andl
dec
xchg
dec
shlb
cld
push
sub
js
out
gs
lahf
push
xchg
mov
nop
xor
addb
adc
jge
inc
aam
xchg
mov
and
cwtl
sti
xchg
insl
inc
cwtl
dec
sbb
rol
ljmp
repnz
daa
in
dec
xchg
sub
or
xor
pop
fadds
add
dec
fisubs
sahf
xor
xor
cmpsl
add
js
mov
pop
fwait
mov
mov
adc
adc
in
ja
mov
imul
call
push
sbb
insb
je
cli
sbb
mov
mov
mov
pop
cltd
mov
cmp
cmp
lds
lret
add
xor
pop
pusha
std
sti
xchg
imul
sti
jl
popf
fnstenv
imul
inc
xchg
mov
mov
mov
fnsave
mov
push
test
cmp
or
add
mov
xchg
outsb
repnz
sbb
test
popf
mov
test
mov
pop
shlb
sub
adc
loopne
add
push
mov
into
mov
sub
xor
mov
pop
inc
mov
sub
push
stos
mov
mov
xchg
xorb
fidivrl
fwait
jae
mov
iret
pop
stos
int3
dec
mov
leave
sahf
push
or
xor
dec
jmp
and
push
faddl
dec
leave
hlt
cmp
fnsave
daa
xchg
jae
xchg
cmpsl
inc
add
psubusb
stos
and
xchg
jb
jg
mov
and
es
xchg
cmpsl
addr16
iret
xor
pushl
xchg
fidivrl
xchg
adc
xor
stc
in
push
dec
mov
movsb
jno
in
mov
push
xchg
pop
mov
popf
xor
jne
mov
ret
cld
ss
mov
pop
jbe
xor
mov
dec
addl
scas
mov
movsb
mov
hlt
mov
scas
sbb
scas
dec
jmp
fwait
push
in
out
push
push
xchg
rcrb
cld
mov
push
jae
clc
sub
lods
fs
and
cmp
mov
test
in
mov
inc
sbb
sbb
mov
mov
repnz
lcall
jae
inc
lcall
shrl
fwait
into
jae
xchg
cwtl
std
lret
movsl
cltd
daa
xchg
das
sbb
pushf
mov
xor
fnstcw
ficoms
aas
subb
fldl
dec
xlat
loop
xchg
sbb
add
and
and
cs
sbb
fmull
iret
mov
into
sub
scas
pop
pop
rorb
ret
pop
cld
scas
push
pop
jo
jnp
jns
xchg
xchg
rol
push
incl
popa
das
lods
cmc
pushf
fdivrl
dec
cmpsl
fdivrs
pop
aaa
push
rolb
sbb
jl
insb
rorl
pop
xor
dec
mov
adc
subb
mov
mov
fwait
xor
add
rorl
mov
dec
inc
cltd
lret
std
push
and
mov
dec
push
cmpl
xor
in
mov
fidivrs
adc
add
repz
insb
in
loopne
filds
clc
test
mov
cmp
ja
enter
imul
icebp
out
std
lods
jo
push
lock
inc
insl
mov
and
sarb
push
cmp
or
mov
stos
insl
adc
in
pop
scas
cltd
mov
or
orl
callw
jnp
out
fwait
add
push
dec
std
xor
cli
mov
cmp
xchg
clc
pop
into
mov
pop
sbb
pop
loop
adc
in
mov
pop
sub
add
mov
adc
inc
das
cmc
fsubrs
push
sub
es
test
jp
in
xchg
or
cld
mov
xchg
loope
jg
data16
inc
fbstp
mov
fisttpll
pop
iret
adc
mov
in
xchg
sbb
mov
or
mov
lock
daa
push
mov
jb
lea
or
or
xchg
std
cmp
rolb
push
sbb
ficomps
mov
jb
adc
inc
lods
xor
je
dec
sub
jbe
test
and
in
cld
and
inc
mov
dec
or
inc
mov
xchg
orl
sbb
aad
adc
inc
xor
dec
loopne
xchg
push
sbb
imul
and
cmp
fcmovnu
test
lods
adc
jo
jecxz
das
sub
loope
test
dec
mov
mov
mov
push
pop
jmp
test
jmp
imul
fcompl
lahf
out
test
sbb
test
aas
add
add
inc
mov
into
add
xlat
xor
add
iret
pusha
arpl
stc
icebp
ret
es
in
leave
scas
mov
xchg
mov
sahf
mov
cmpsl
lea
nop
adc
icebp
sbb
sub
mov
cmpsb
add
mov
sti
jo
loope
adc
in
cli
and
out
jle
aas
adc
sub
cmp
incb
dec
cmp
jnp
pop
in
jg
lret
fistl
mov
jmp
jle
pushf
adc
shrl
xlat
popa
popa
sub
sti
adc
jl
iret
call
push
inc
cltd
aam
rolb
pop
xorl
in
or
pop
nop
enter
in
add
scas
adc
daa
in
lahf
xchg
ja
nop
stos
lods
or
sub
pop
cmpb
push
das
lock
std
cmovbe
jp
scas
cmp
and
loope
jnp
jae
lcall
xor
je
test
rol
cmp
subb
push
sti
test
scas
dec
cwtl
scas
test
jae
cmpsb
dec
ja
jle
stos
mov
lock
push
rcrb
inc
cs
outsl
ss
pop
cmc
mov
jg
dec
mov
push
dec
fbstp
lcall
pop
xchg
jmp
insb
fmull
cmp
js
ror
dec
inc
rep
mov
inc
inc
cmp
push
jae
lds
mov
shrl
cwtl
or
mov
push
adc
ja
xchg
adc
and
and
pushf
lahf
adc
xchg
movsl
ds
and
icebp
dec
mov
out
cwtl
cmp
dec
mov
xchg
lock
push
addb
inc
shrb
ss
mov
mov
xchg
mov
sub
jo
loop
ficoms
mov
adc
enter
jl
jns
xor
sbb
inc
ljmp
out
sbb
add
lcall
repz
or
xchg
orb
jo
sub
out
int
sub
add
mov
inc
sarl
push
adc
inc
dec
sub
cmc
add
mov
mov
repnz
lock
dec
shlb
adcl
pop
jbe
nop
addr16
jae
in
xchg
pop
adc
leave
nop
out
lods
lock
cli
negl
xor
jne
cmp
repz
cmp
nop
jns
cwtl
sbb
rolb
lcall
mov
sbbb
sbbb
xchg
das
xchg
jle
sbb
mov
add
aad
scas
dec
icebp
inc
mov
lea
dec
or
ljmp
pushl
or
movsb
leave
dec
rcr
mov
mov
push
pop
sbb
inc
pusha
lds
ds
pop
and
sub
fcomi
aad
lods
sub
scas
repz
xchg
cwtl
out
fstpt
and
ret
out
je
pop
push
inc
or
mov
hlt
and
ret
jo
lea
mov
cmpl
movsb
mov
movsl
shll
pop
shll
dec
loop
xor
lret
mov
sbb
sub
jb
mov
dec
mov
imull
dec
lcall
roll
mov
leave
inc
aad
das
adc
push
leave
dec
sub
or
insb
xor
cmpsl
lret
vorps
adc
sub
fdivrp
je
dec
fs
push
sub
jo
pushf
dec
add
test
xor
test
mov
aad
cmp
push
lock
pop
inc
test
dec
jl
mov
inc
flds
push
push
or
ficoms
push
and
in
lret
je
cwtl
adc
test
scas
mov
xchg
or
call
adc
mov
and
dec
adcl
out
sbb
xchg
in
xlat
xchg
lock
cltd
sahf
into
inc
movb
enter
ss
jp
mov
call
cmp
call
add
pop
popf
pop
aam
mov
jp
outsb
and
jl
push
mov
adc
dec
aas
push
pop
je
enter
jbe
hlt
jp
cli
and
jo
mov
mov
or
xor
test
inc
daa
dec
cmpsb
aam
or
xchg
mov
push
repz
imul
mov
fdivrs
add
pop
std
sub
inc
mov
shl
jl
sbb
cmp
cwtl
sub
int
aaa
call
stc
inc
outsb
ds
nop
pusha
inc
mov
js
hlt
lds
ljmp
cwtl
leave
nop
mov
bound
rcrl
mov
or
inc
gs
pop
sbb
pop
loope
xchg
mov
sbb
nop
inc
pop
out
pop
aaa
fsubr
ret
repnz
push
dec
xchg
lahf
fs
repz
push
sarb
push
mov
push
test
jne
movsl
pop
orb
outsl
cmp
rcl
mov
add
adc
fwait
subl
jg
mov
cmp
call
jne
outsb
sub
sub
jns
rcrl
push
addb
imul
xor
pushf
mov
sbb
sub
or
jl
pop
or
cmp
dec
jge
inc
xorl
inc
mov
stc
and
sub
sbb
mov
ret
gs
out
imul
sar
jo
cmp
cld
pop
sub
cmc
cmp
stos
lcall
jb
sub
hlt
xchg
fidivl
add
outsb
mov
xor
roll
push
mov
adc
jnp
std
jbe
inc
xor
ficoml
out
cld
push
js
hlt
ret
add
push
ds
cmc
pop
std
and
notl
push
subb
inc
test
stos
mov
mov
adc
adc
adc
jge
mov
or
call
in
cltd
das
jb
rorb
pop
push
sbb
push
das
and
cmp
push
pushf
ffreep
addl
sbb
pop
lcall
das
lods
ds
pop
cmp
pushf
sbb
inc
sbb
jl
or
mov
or
ss
lock
sbb
add
es
fistpll
sbb
aas
mov
stos
leave
in
add
inc
in
nop
cmpsl
outsl
imul
mov
ss
cmpsl
pop
movsl
sbb
sub
adc
fsubr
xchg
pop
mov
mov
mull
push
shlb
cmc
fcmovnbe
cwtl
xor
das
notl
sbb
xor
sub
mov
sahf
shlb
mov
jnp
inc
push
cwtl
jnp
jecxz
cmp
fistps
fmull
sbb
mov
inc
loope
lahf
dec
jp
xor
in
mov
movsl
jbe
jne
je
fsub
sbb
int
iret
fbld
mov
push
sbb
and
aad
add
test
jle
out
sub
inc
jnp
inc
xor
pushf
je
adc
pop
mov
sub
aam
sbb
incb
lods
xchg
adc
mov
ret
bnd
dec
or
test
adc
ljmp
rorl
pop
mov
mov
push
cmpsb
mov
mov
xor
orl
mov
jnp
scas
mov
and
daa
cwtl
adc
push
inc
call
and
lret
mov
js
inc
pop
xor
mov
ftst
or
les
ffree
out
xchg
and
pop
repz
imul
jle
jmp
sub
pop
notl
inc
or
roll
psubusw
sbb
adc
pop
int3
imul
js
in
pop
bound
fdivrl
in
pop
sbb
dec
jecxz
ret
xchg
xchg
or
icebp
xor
lea
cmp
ja
pop
jnp
insb
adc
cltd
in
sahf
mov
loope
loopne
sqrtps
sbb
jg
cmp
movsl
lahf
or
ret
out
lock
mov
xlat
inc
ret
pop
bound
sub
lock
jp
pop
loopne
push
mov
outsb
xchg
cmpsl
lods
or
push
lcallw
fs
xor
sbb
adc
addr16
push
orb
jo
rcrl
jge
pop
insl
pop
cmp
std
mov
mov
fiaddl
jo
inc
push
clc
mov
hlt
test
pusha
leave
mov
inc
push
lcall
cltd
cltd
icebp
fcoml
jb
pop
bound
scas
ret
sub
js
scas
dec
ret
inc
mov
xchg
inc
xchg
jo
xor
imul
into
pop
xchg
or
cld
lods
mov
and
aad
sbb
inc
mov
add
fwait
mov
xor
pop
jo
imul
fcmovu
scas
mov
xlat
jb
inc
test
cld
test
adc
dec
pusha
jo
adc
or
ficomps
loop
push
xchg
sub
jecxz
and
cmp
mov
fs
xor
pop
jmp
and
xchg
iret
mov
jecxz
aam
jp
fstpt
lods
xlat
out
jb
cli
push
sub
jl
jmp
mov
cmp
shrl
std
xchg
sarl
inc
mov
es
and
push
lahf
push
xchg
jp
mov
in
and
das
je
rcrl
faddl
xor
into
lods
xor
sbb
icebp
rcrb
mov
mov
into
inc
es
or
mov
add
or
jae
test
rclb
add
in
jb
inc
xchg
jg
xchg
pop
mov
sub
pop
sbb
cmp
out
cli
mov
scas
mov
push
sbb
sbb
aaa
push
xchg
fcmovnbe
adc
add
pop
cltd
loopne
vmread
outsb
push
test
or
and
adc
fwait
adc
add
sahf
pop
mov
push
into
xchg
sbb
mov
loope
mov
ja
mov
repz
adc
push
jmp
or
pop
in
mov
sub
pop
mov
ret
shlb
cmp
sarb
inc
and
jo
sbb
cmpsb
fwait
cmp
add
xor
lahf
loop
test
cli
out
push
mov
inc
in
jmp
sarl
loopne
push
dec
xchg
in
mov
lods
icebp
push
loop
add
ficompl
mov
xor
pushf
call
mov
stc
hlt
mov
dec
pushf
or
cmp
out
pop
cmp
pop
addr16
pusha
ficompl
aaa
ljmp
cmc
mov
aad
dec
leave
mov
push
ljmp
inc
dec
lret
lret
and
mov
sti
sub
sub
push
xor
sar
xor
popa
test
push
sbb
shlb
inc
repz
cmp
lret
push
call
popf
test
jecxz
push
insl
cmp
xor
lret
and
jl
addr16
pop
rol
pop
sahf
adc
loopne
js
jae
adc
xchg
cmpsb
inc
out
push
jns
mov
hlt
in
out
inc
pop
adc
je
inc
pop
push
jg
mov
imul
xchg
lret
orb
add
test
lahf
adc
addr16
cltd
lahf
hlt
jmp
adc
dec
pop
gs
mov
cmpsb
gs
mov
cmpb
add
mov
int3
cmp
sbb
mov
ds
outsl
loop
ljmp
xlat
jmp
mov
ds
fbld
shll
and
ss
arpl
jl
xlat
loopne
sub
std
call
out
fiadds
adc
push
adc
add
lods
xchg
mov
lret
mov
testb
mov
mov
ss
jae
ret
repnz
mov
xor
push
xchg
shl
xchg
or
aad
pop
adc
test
cli
mov
bt
mov
cmp
push
sarb
push
pop
pop
mov
mov
or
in
leave
lret
or
das
clc
addr16
or
sbb
cmp
jns
scas
sbb
lea
add
fnstenv
dec
nop
aas
push
mov
inc
ret
mov
cmc
or
dec
in
or
cmpl
loop
jle
aad
movsl
mov
iret
push
and
pop
je
data16
call
leavew
pop
mov
and
pop
inc
enter
sbb
insl
and
push
pop
mov
xor
mov
fidivrl
and
imul
je
adc
mov
jg
sub
enter
xor
mov
mov
imul
cltd
into
cmp
mov
xor
repnz
insl
test
cmp
rorb
sbb
xor
das
and
jb
clc
ds
hlt
imul
cmp
add
cmpsl
sbb
data16
mov
out
mov
push
dec
test
test
mov
mov
mov
das
insl
mov
push
push
cld
cmpsb
cmc
fcmovnbe
push
shll
xchg
stos
cmpsb
leave
call
andb
and
test
ja
test
pushf
add
andb
or
rorl
push
cli
push
dec
bound
loop
mov
lods
out
lret
mov
sbb
pop
cmp
add
pop
mov
out
lcall
arpl
xchg
or
notb
leave
shr
inc
rcr
loopne
fdivs
dec
lret
rcrb
pop
adc
push
sub
mov
add
adc
xor
loope
push
cmp
out
ss
add
adc
or
xchg
mov
sbbb
loope
sbb
dec
pop
ss
mov
testb
adc
scas
xor
fucom
pop
xchg
cs
les
into
das
insl
ret
mov
jbe
clc
push
adc
insl
loop
dec
cmp
mov
ds
pusha
rcr
mov
or
bound
xor
daa
arpl
mov
movsl
mov
stc
jp
sub
xchg
outsl
dec
mov
sbb
cltd
lds
inc
lock
mov
push
rorb
xor
pop
into
aam
jmp
pop
outsl
jp
imul
js
and
mov
mov
aas
and
dec
cmp
jae
push
mov
mov
loopne
mov
rcl
xor
xor
mov
fadds
aaa
das
pushf
out
out
imul
dec
add
adc
testl
popa
je
mov
jg
shrl
mov
cld
sbb
xchg
sbb
mov
stos
xor
mov
mov
mov
mov
fneni(8087
adc
adc
sbb
push
aam
pop
into
or
loop
cmp
dec
repnz
jge
pop
push
fwait
pushf
out
add
shl
adc
sarl
bound
sub
push
push
out
imul
mov
lds
loopne
and
test
sub
fnsave
sub
test
adc
mov
mov
adc
insl
push
inc
ret
or
loopne
sarl
cmp
call
aaa
jns
or
jg
and
lahf
pusha
pop
sub
je
xor
sbb
ja
fistpl
sbb
imul
int
lret
pop
pop
imul
inc
push
adc
or
das
xchg
or
roll
fcoms
pop
or
idivb
pop
push
mov
lods
or
mov
ja
dec
mov
mov
adc
jp
movsb
sub
cmp
jmp
leave
mov
out
ds
sub
shrb
mov
lea
sbb
pop
mov
jp
cmp
cmp
data16
pop
add
inc
mov
addb
js
dec
push
mov
lds
xor
ror
jnp
fdivp
movsl
sub
outsb
repz
cwtl
dec
sub
sbb
insl
cmpsb
jbe
and
ret
sbb
nop
lds
or
addb
dec
or
xchg
test
cmpsl
lods
stos
push
pop
dec
cmp
dec
ret
dec
mov
into
xchg
movsl
push
cld
js
out
push
mov
test
lods
and
inc
xor
inc
jno
aas
jp
push
mov
imul
add
cmp
jns
jg
mov
jp
push
pop
mov
mov
mov
pop
shrl
int3
adc
add
iret
out
mov
xlat
imul
or
test
ret
or
fdivr
repz
aaa
lcall
xchg
nop
mov
push
add
sbb
imul
jg
cmp
scas
jg
lret
sti
roll
dec
and
fsub
inc
push
ljmp
or
mov
pop
xor
dec
dec
in
cmp
adc
dec
insl
jnp
mov
ret
jb
inc
mov
mov
and
inc
insb
and
push
cs
aaa
repnz
js
testb
inc
repnz
push
cwtl
popf
ja
sub
mov
enter
xchg
movsb
push
stos
loopne
mov
push
dec
or
cmc
ficoms
movsb
or
js
rcrl
je
jne
mov
int3
xchg
int3
lcall
pop
pushf
inc
dec
ret
repz
fdivrl
mov
or
lcall
xor
xchg
jno
xchg
orb
cld
in
jne
push
fsts
push
fdivrl
mov
call
test
xor
insb
add
xor
mov
dec
fists
pop
inc
xor
jb
jp
out
cmp
adc
push
push
sbbl
and
xchg
mov
dec
scas
jbe
popf
iret
inc
cmp
aad
mov
pop
add
mov
addr16
mov
je
pop
dec
out
aam
adc
lds
mov
jg
cli
lds
xchg
and
cmpsb
in
xchg
xor
lahf
mov
push
push
fstpl
push
pop
mov
scas
xchg
inc
jecxz
cmp
mov
cwtl
arpl
sbb
or
mov
pop
mov
insb
loope
loope
sbb
clc
iret
jae
int3
sub
cmp
ret
pop
or
lahf
rcr
pop
insb
or
nop
mov
mov
inc
mov
hlt
inc
sub
xor
xchg
cmp
jle
insb
cmp
scas
std
ds
cwtl
lods
sbb
loop
movsb
in
add
dec
dec
lcall
push
inc
ja
cmp
popf
add
adcl
mov
leave
cmp
mov
cmp
aaa
mov
mov
sbb
xor
add
sbb
mov
push
push
jp
pop
in
and
sbb
andb
xor
jp
or
mov
push
test
popf
and
lahf
aaa
sub
mov
and
xchg
out
repz
cli
pop
push
ret
sbb
hlt
push
test
popa
or
inc
mov
or
and
xchg
cmp
out
dec
dec
push
cmc
daa
jg
push
cltd
add
aas
and
cmp
fiaddl
inc
pop
in
and
cld
js
dec
and
push
sbb
es
aaa
or
lret
sub
mov
xchg
push
add
repnz
mov
push
in
push
pop
add
out
scas
aam
add
adc
sub
push
jnp
jg,pn
ret
xchg
mov
test
loop
sub
imull
negb
cmp
sbb
inc
mov
jo
dec
mov
cli
jmp
les
add
adc
push
xchg
btrl
xchg
cltd
add
jle
cmpsl
inc
nop
mov
push
lds
sbb
gs
arpl
xor
push
aam
dec
stc
call
arpl
xchg
sub
push
mov
fidivl
pushf
repnz
mov
stc
test
or
out
imul
dec
outsb
imul
shlb
scas
in
pop
add
adc
popa
inc
pop
xlat
ret
fiadds
sub
inc
fwait
pop
pushf
or
sub
xor
data16
stc
imulb
add
test
sbb
test
loope
sahf
xor
inc
xchg
xchg
mov
pushf
nop
pop
mov
cmp
dec
enter
leave
fdivr
in
pop
sti
xchg
inc
movsl
fsubrl
int
lcall
add
mov
mov
sti
or
xor
lea
inc
out
or
cwtl
mov
xor
pop
ljmp
outsl
insb
loopne
aaa
push
sbb
pop
xchg
cld
clc
pop
sub
cli
or
xor
addr16
inc
xchg
cld
mov
sub
sti
sbb
xchg
dec
push
adc
call
sbb
push
push
arpl
jno
rcrb
add
sbb
pop
mov
int3
jb
out
int
and
ret
mov
lods
xor
repz
ficompl
loope
js
insb
fdivp
aaa
and
loop
ljmp
mov
inc
clc
push
fistl
out
dec
scas
cmp
xlat
fnstenv
lods
repnz
mov
lcall
push
add
aas
and
mov
sbb
popa
pop
lret
mov
xor
fimull
int3
xchg
mov
xchg
outsb
dec
inc
mov
xchg
pop
or
sbb
sbb
push
shr
gs
adc
pop
aaa
or
daa
outsl
or
xor
xlat
and
fsubl
test
daa
std
rclb
jge
mov
adc
sar
shl
jne
leave
push
in
sub
mov
loopne
inc
mov
jl
lret
add
scas
xchg
push
xor
jno
ret
testl
out
or
movsb
fcompl
dec
pusha
sub
orb
mov
sbb
xchg
mov
in
inc
jle
addr16
cwtl
xchg
pop
sbb
mov
in
push
pop
icebp
repnz
das
lcall
insl
dec
mov
aas
lods
sbb
movsl
xor
imul
rolb
jmp
or
ljmp
or
mov
and
xor
in
aam
sbb
jmp
mov
pop
call
decl
cmp
or
dec
stos
into
sbb
push
sub
lea
sub
je
mov
mov
ror
sarl
leave
jge
mov
and
jl
jo
dec
mov
push
cmpsb
insb
jne
sahf
lods
and
mov
xlat
mov
lods
movl
in
addr16
lahf
ret
shrl
lcall
inc
inc
lret
test
iret
inc
lea
mov
mov
ror
stos
ds
out
or
mov
dec
ds
or
mov
mov
repz
cwtl
mov
xchg
pop
xor
jg
lahf
stos
mov
notb
arpl
scas
sti
movsl
repnz
mov
fs
xor
inc
and
mov
loopne
stos
mov
rcr
mov
jo
ljmp
pop
mov
cmp
out
rcll
push
out
jbe
pop
les
mov
lock
es
les
enter
mov
jae
xchg
or
adc
mov
add
fldl
shr
or
test
xchg
decb
pop
addr16
adc
fildl
mov
mov
sbb
lahf
jae
loope
xor
dec
and
mov
pop
xor
push
inc
int3
lds
subb
dec
mov
add
xchg
rclb
aas
test
stos
jmp
add
int3
mov
adc
shlb
div
inc
xchg
jecxz
outsl
loopew
cmp
add
repnz
jecxz
shll
mov
pusha
call
shrb
cs
lret
mov
out
xor
add
add
add
lods
dec
dec
bound
and
jne
or
xor
movsb
add
sbb
lcall
or
mov
cmp
cs
vpaddw
ljmp
push
pushf
fs
mov
shll
xchg
sbb
cmpsb
call
mov
aam
jbe
testl
inc
mov
out
outsb
xor
cld
push
scas
push
or
out
jb
sub
out
aas
iretw
jno
cmp
pusha
sbb
mov
jnp
bound
loope
xor
push
add
cmp
mov
jbe,pn
test
xor
add
out
xor
sarb
xchg
xchg
sbb
loopne
push
inc
cmp
sbb
std
fmul
xchg
xchg
inc
and
stos
jno
push
out
push
rorl
les
push
xchg
int
inc
mov
stos
dec
add
adcb
out
int3
inc
adc
bound
testl
out
test
and
gs
xorb
icebp
imul
sbb
mov
mov
add
sbb
sub
popa
fs
mov
cmpsb
lahf
mov
test
jg
mov
pop
ds
js
dec
fcmovnu
fbstp
mov
push
ja
dec
leave
cwtl
movsb
insl
lea
inc
ljmp
adc
iret
sub
loope
sbb
xchg
das
push
in
leave
sub
inc
and
add
mov
cld
pop
aam
add
scas
bound
ret
add
gs
sub
bndldx
and
cwtl
fstpt
in
xlat
cmp
sbb
cld
mov
enter
mov
bound
sbb
jecxz
idivl
gs
aaa
mov
scas
push
outsb
add
faddl
cmp
jne
jne
ljmp
or
nop
cmpl
inc
rorb
dec
ds
xchg
pop
shlb
ds
movsl
fidivrl
adc
orb
cmp
rclb
jb
cmp
fstpt
popf
pushf
cmp
pop
jp
daa
xlat
ljmp
insl
das
aas
cmp
sbb
gs
cmp
inc
pop
inc
or
and
push
pop
movsl
daa
pop
jecxz
or
mov
fcmovnbe
pop
dec
inc
cwtl
data16
jo
icebp
pop
mov
mov
add
sbb
or
adc
or
scas
sbb
jge
push
pop
daa
nop
mov
or
mov
aas
jb
pop
and
inc
lods
out
jb
jns
shl
sahf
pop
and
adc
mov
dec
jp
lock
gs
lret
aaa
and
leave
adcb
dec
add
mov
pop
jle
jmp
shrl
and
in
pop
mov
mov
imul
imul
push
jp
add
sub
inc
xchg
jge
cmc
pop
or
pop
mov
mov
and
jmp
pop
sub
mov
mov
mov
sub
mov
inc
in
mov
inc
inc
add
es
and
xchg
adc
or
les
jnp
push
popf
cmp
sbb
mov
jg
das
sarl
jnp
ds
mov
jp
mov
add
xchg
cmp
popf
pop
in
bound
push
jne
push
in
cld
int3
xorl
push
es
fldcw
popa
mov
xchg
dec
mov
sbb
data16
jl
mov
add
lret
shlb
mov
xchg
hlt
pop
dec
imul
je
cmpsb
pop
adc
push
sbb
lcall
fucomi
inc
fstpt
scas
dec
sub
jne
inc
sbb
pop
inc
cld
or
push
pushf
push
outsl
aaa
sbb
inc
and
mov
jnp
jb
pushf
sbb
mov
out
test
or
pop
adc
push
inc
enter
jge
cwtl
sbb
cmp
jle
jne
aam
mov
adc
fsubrl
rorb
dec
inc
adcb
mov
mov
loopne
loopne
test
jl
sub
dec
or
rcll
das
mov
lret
sbb
pop
insl
fistpl
inc
js
loope
cmpsl
js
jns
mov
decl
dec
fistpl
push
cmpsb
mov
fcoms
jb
hlt
rcl
or
dec
xor
mov
sub
pop
cmp
lret
into
add
shlb
ja
pop
insl
mov
mov
sbb
fistpll
pop
pop
stos
push
test
out
jg
pop
adc
rclb
add
pop
xchg
insb
cmp
cli
sbb
fwait
pushf
add
inc
sahf
in
rorb
imul
push
fs
fidivrs
ror
ret
aad
mov
daa
data16
stos
fcomps
jge
test
jae
pop
rcrb
divb
outsb
fidivrs
clc
lret
xchg
inc
lods
push
sub
sub
loope
xchg
adc
ja
fidivs
jg
cmp
sbb
jb
sub
insl
sarb
mov
cmc
dec
js
mov
cmc
xchg
jp
cmp
adc
in
jg
and
or
add
mov
int
pushf
and
scas
push
sbb
out
mov
ljmp
enter
xchg
mov
sarl
xor
fidivs
dec
cltd
cmc
test
cltd
pop
das
or
addr16
inc
stc
jge
add
out
ds
push
cmp
in
orb
cmc
out
inc
inc
aaa
test
scas
cmp
cwtl
pop
dec
hlt
cmp
fnstenv
or
pusha
mov
pop
pop
add
dec
arpl
mov
add
or
sbbb
cmp
inc
in
push
dec
or
xor
cmpsl
test
push
aad
sub
and
add
lods
sbb
sahf
jle
outsl
enter
adc
push
loop
pop
cld
aas
lret
repz
push
mul
or
xchg
mov
xchg
lret
movl
mov
dec
stos
lret
mov
cwtl
or
nop
dec
jae
xor
push
push
cs
push
push
lods
sar
scas
add
mov
movsb
dec
lret
xchg
add
nop
jle
mov
jne
push
mov
mov
mov
mov
and
mov
mov
push
insl
mov
inc
sub
add
scas
jmp
xor
mov
push
adc
lret
aaa
xchg
outsb
xchg
fmuls
fisttps
pop
pop
pop
mov
test
jg
gs
pop
jp
jle
push
xchg
mov
enter
shr
imul
xchg
add
out
push
mov
aaa
pop
fistl
sub
mov
lcall
int
mov
xchg
jl
mov
ja
in
push
hlt
ljmp
movsl
rcll
adc
ds
hlt
xor
jae
mov
sub
and
mov
and
outsb
xlat
or
adc
or
lret
and
stos
sub
inc
mov
jo
sub
imul
and
sbbb
ss
aas
sbb
stos
sub
fildll
pop
pop
mov
mov
xchg
fwait
mov
iret
push
jecxz
mov
jle
movsl
add
aad
sub
repz
xchg
and
pusha
enter
movsl
inc
inc
xchg
fmulp
dec
sub
fsubrl
jns
sub
repz
sbb
push
sti
flds
mov
test
in
test
lret
push
mov
pop
xchg
push
adcb
imul
aaa
sub
jp
and
add
sub
pop
jno
es
insb
cmp
insb
jg
inc
fcompl
cmp
sbb
mov
jb
or
dec
sbb
sbb
jbe
sub
push
pop
clc
and
std
dec
and
out
out
add
or
xchg
cmp
subb
je
mov
lods
and
mov
dec
ja
aam
mov
testb
jg
mov
mov
mov
add
ljmp
movsl
arpl
jge
stos
out
pop
xchg
xor
testb
cli
ret
out
jns
jae
xor
call
cmp
in
lcall
iret
lret
int
aaa
inc
in
xlat
movsl
xor
test
push
scas
lret
jo
jns
sub
das
roll
inc
pushw
gs
daa
pop
lahf
fsubl
stc
jecxz
out
xor
inc
aas
lret
xor
xchg
jno
add
jbe
into
add
out
mov
jp
sbb
cmc
cmpsl
xor
inc
ror
jbe
imul
fmull
cmp
movsb
push
testb
xchg
js
lcall
js
pop
mov
andb
incb
shll
adc
aas
and
jne
ja
fidivrl
mov
shrl
aam
je
insb
in
shrb
adc
cmp
add
icebp
lods
cmpb
pushf
ljmp
call
inc
push
je
mov
pop
js
or
in
data16
fs
test
loop
addr16
mov
icebp
fstps
out
sar
enter
sub
sub
dec
out
ja
popl
inc
push
test
dec
push
dec
adc
inc
inc
in
sbb
xchg
aas
ret
ss
adc
mov
sti
or
mov
icebp
shll
xchg
dec
sbb
arpl
and
mov
and
inc
cmp
add
cmp
dec
shr
or
mov
push
test
adc
pop
mov
lea
pop
sub
dec
rcrb
cmp
iret
push
and
aas
test
loopne
int3
xchg
fdivrl
add
rcrl
mov
scas
xor
jae
xchg
sub
loopne
pop
pop
data16
cwtl
pop
jae
shl
xor
or
lret
call
shll
repz
clc
and
mov
jo
fstpt
test
cmp
cmpsb
mov
ss
inc
jmp
pop
mov
mov
xor
out
jno
popa
stos
xor
lahf
out
shrb
mov
es
ss
jno
scas
or
xor
cmp
enter
fiaddl
inc
hlt
add
loopne
xchg
jne
repnz
sbb
lods
fcomp
jg
dec
sti
hlt
cmp
fiadds
inc
push
subl
sub
and
lea
cmp
mov
jnp
outsb
sub
xor
sbb
scas
mov
rcl
or
xchg
stos
stos
icebp
mov
jmp
xchg
frstor
int3
fldcw
lahf
cwtl
testb
push
sbb
jmp
popa
loop
inc
imul
mov
mov
shll
mov
add
test
mov
aam
inc
jg
push
mov
push
imul
das
cmp
jae
xchg
fnclex
or
fwait
jae
mov
adc
daa
add
pop
repnz
arpl
adc
add
clc
into
ss
jb
andl
out
cmp
xor
dec
punpckldq
jge
ds
inc
scas
inc
dec
mov
push
pop
lods
mov
sahf
pop
push
or
add
mov
xor
adc
jns
addl
aas
mov
push
lods
cmpsl
in
sbb
sbb
pop
bound
mov
addr16
enter
shrb
jb
xchg
sti
add
jmp
fs
push
aam
add
loopne
mov
out
or
stos
into
push
dec
out
adc
push
scas
xchg
xor
jne
mov
and
inc
hlt
and
clc
push
cs
cmp
mov
mov
psubusb
push
les
adc
repnz
test
ret
push
push
and
movntq
push
int
pop
mov
rorl
inc
test
sahf
sub
jg
sub
mov
fmuls
jp
sbb
pause
xchg
xor
out
in
aas
mov
sbb
xchg
sbb
lock
xchg
add
repz
pop
in
ja
iret
jno
dec
cmp
push
testb
aam
stc
outsl
inc
es
dec
dec
xor
mov
pop
repz
push
int
pop
dec
jbe
mov
inc
jnp
pop
mov
icebp
cmp
inc
xor
cwtl
mov
daa
out
jmp
fdivl
dec
out
das
aaa
loop
sbb
scas
and
testl
add
mov
jne
inc
aaa
cmpsl
int
int
mov
push
dec
out
mov
pop
inc
popl
xchg
inc
outsl
arpl
test
pop
mov
insb
xchg
mov
mov
leave
fbstp
pop
fnstenv
mov
scas
divl
push
std
and
mov
pop
adc
ret
inc
or
push
add
jge
adc
in
mov
movb
cmp
cmc
sbb
sti
add
mov
fsubl
mov
negb
out
imul
push
cmp
sbb
or
xor
into
mov
mov
xchg
pop
or
mov
test
or
push
daa
ja
pushf
xor
in
mov
push
out
pop
addr16
push
leave
out
sbb
inc
adc
lea
mov
and
fcmovbe
ficomps
imul
jecxz
enter
loop
shl
jmp
dec
es
shll
xchg
push
test
xor
xor
mov
cs
add
or
or
jnp
jge
mov
xchg
or
push
movsb
clc
aaa
or
jae
and
inc
fldcw
and
or
mov
gs
dec
out
sti
push
fldt
dec
repnz
add
loop
adc
push
ret
sub
neg
adc
dec
lahf
cmp
mov
mov
jne
pop
or
push
cld
add
into
test
mov
and
xor
lock
add
jno
or
xchg
mov
xchg
push
js
dec
int
mov
ds
lock
push
and
lcall
mov
or
xchg
jo
inc
in
pop
xor
or
or
push
mov
sahf
push
mov
or
stos
test
fstpl
sbb
repz
push
inc
daa
jg
cwtl
aas
jl
iret
sbb
cltd
inc
xlat
push
add
or
or
push
or
mov
movsb
add
leave
add
jmp
pop
pushf
ds
lea
mov
dec
xchg
ja
cmp
add
gs
das
scas
dec
jne
pop
sub
push
jo
inc
mov
cmp
or
cmpsb
test
ret
pop
lods
fildl
stos
add
in
mov
call
mov
pushf
idivb
insb
rorl
mov
stos
popa
xchg
int3
iret
test
stc
sub
movsb
int3
pushf
in
adc
cmp
rcrb
mov
xchg
leave
cmc
and
lret
add
es
jno
movb
push
negl
repnz
sbb
loopne
dec
int3
lds
push
mov
nop
sub
mov
or
cmpsl
es
int3
mov
sub
mov
sub
scas
dec
fstl
jmp
jg
int3
inc
sbbb
mov
xorb
std
pop
daa
dec
xchg
scas
jnp,pn
push
sbb
or
test
sub
adc
and
jno
dec
mov
mov
sbb
mov
loopne
pop
jb
gs
in
je
jnp
dec
mov
mov
add
mov
push
lock
aas
pushf
mov
scas
int
lahf
scas
dec
jns
inc
sub
out
pusha
insb
or
adc
sahf
stos
and
cwtl
stc
mov
cmpsl
push
jmp
imul
jmp
mov
pop
or
repnz
xchg
pop
or
or
in
push
pop
mov
sub
add
and
insb
into
inc
mov
and
adc
jmp
fs
loopne
insb
cwtl
xor
orl
scas
push
adc
mov
mov
inc
inc
fs
clc
and
pop
push
push
loop
out
dec
mov
in
push
dec
inc
gs
sbb
pop
sub
pop
mov
inc
js
in
outsl
sbb
mov
adc
cmpsl
mov
push
dec
push
fwait
popa
adc
insl
push
cmp
cmpsl
dec
sti
ds
jae
push
push
add
adc
and
call
cmc
cmc
sub
add
sbb
cmp
iret
arpl
jnp
jp
inc
loop
insl
into
movsb
jle
rol
lea
lea
jp
imul
sbb
out
cmpsl
xor
ja
scas
ror
fwait
lahf
je
cltd
sbb
int
fwait
mov
sub
or
mov
push
jmp
sbb
nop
sbb
into
sti
add
sbb
fildl
clc
xor
jecxz
outsl
mov
mov
dec
scas
into
or
sbb
insl
mov
dec
loopne
or
sbb
jno
rcrl
jns
mov
dec
cmp
testb
mov
xchg
and
mov
push
inc
clc
mov
lods
outsl
in
decl
and
adc
stc
mov
les
fnstsw
xchg
call
repz
sub
divb
imul
dec
out
inc
lea
xchg
sbbb
xchg
repz
leave
aad
shr
push
inc
mov
push
ss
arpl
xchg
in
test
int3
xchg
bnd
arpl
jae
jle
mov
pop
push
dec
imul
js
pop
jb
fnstsw
push
mov
aas
and
nop
xor
aas
lock
mov
adc
xchg
add
adc
and
cs
cmp
push
push
mov
cld
rcll
pop
movsl
inc
sub
repz
jg
rcr
hlt
out
xchg
cmp
adc
jne
scas
in
jmp
fwait
stos
lds
gs
sti
xchg
mov
inc
xorl
mov
cmp
sbb
stc
rolb
aam
jl
or
movsw
mov
inc
jno
push
div
popf
mov
fildll
loop
xchg
mov
popa
jl
pop
bound
ljmp
scas
cmp
pop
adc
scas
jo
lock
and
imul
clc
negl
addr16
out
add
xchg
xor
mov
pop
mov
dec
enter
jmp
addr16
jge
pop
xchg
jmp
popa
rorb
pop
and
inc
xadd
imul
inc
sbb
xchg
shl
arpl
shlb
mov
jns
xchg
and
jnp
aam
shufps
iret
mov
add
pushl
test
imul
jb
and
daa
add
xchg
out
sbbb
test
lret
xchg
ret
inc
jbe
mov
xchg
pop
ljmp
push
xchg
gs
fisttpl
jmp
dec
negl
clc
adc
sbb
push
pop
jo
push
and
or
test
dec
push
sti
push
sbb
stos
sub
ds
add
lahf
push
sub
xor
fldcw
jnp
daa
adc
hlt
jb
add
test
mov
fstl
icebp
rcrb
test
cmp
xchg
out
pop
inc
adc
fsts
in
cmp
pop
cmc
outsl
jl
and
stos
inc
push
or
mov
jns
xor
sub
decb
sub
mov
roll
test
rclb
jmp
imul
dec
aas
lret
pop
inc
mov
dec
test
mov
xchg
or
dec
sub
cmp
pop
fisttpl
adc
or
or
cwtl
fcmovnb
sub
subb
push
outsl
outsl
sahf
pop
cli
push
movsb
in
pop
scas
std
cli
adc
sbb
sti
inc
push
rcl
pop
mov
in
test
test
rorl
sbbb
dec
adc
ret
test
sar
sub
insl
sti
pop
das
sbb
pushf
sahf
push
cmp
push
add
adc
mov
lds
imul
xchg
adcb
js
xchg
dec
ret
add
cmp
aam
mov
pop
test
notl
sub
push
push
mov
pop
pop
repz
insl
inc
mov
daa
push
push
out
test
sbb
jmp
jo
pusha
add
jbe
jno
or
mov
gs
lds
lret
das
jle
mov
cmp
cmpsb
popa
ficompl
orb
mov
jns
nop
stos
pop
fwait
mov
adc
call
or
sbb
sbb
add
push
inc
push
adc
dec
popf
testl
mov
addr16
call
arpl
jl
add
sub
unpckhps
push
mov
inc
clc
aam
imul
cmp
fmuls
add
xlat
xchg
cmc
push
lret
sahf
xor
imul
std
dec
in
dec
pop
inc
xor
xchg
push
xchg
xorl
sub
lahf
test
mov
cmp
and
into
jns
add
pop
push
mov
mov
imul
sbb
and
mov
mov
int3
mov
xchg
xchg
jne
repnz
mov
cmp
sub
jo
mov
adc
jge
das
push
xchg
lret
sbb
mov
sub
dec
cmc
in
push
pop
sbb
jnp
ljmp
add
pusha
cmc
add
imul
sbb
sbb
sub
xchg
mov
loope
out
mov
loope
cmp
nop
mov
xor
les
js
mov
pop
aas
sti
punpcklbw
ret
sbb
jmp
mov
mov
adc
add
dec
cmp
or
je
jp
jecxz
pop
aaa
stos
in
rorl
adc
les
lahf
jg
xchg
dec
repz
or
out
fwait
or
movsl
xlat
jnp
fidivs
stc
add
jae
dec
fwait
sub
mov
gs
fdivs
stc
adc
pop
cmpb
dec
xchg
rcll
lds
mov
and
scas
push
test
aas
push
sub
mov
in
sub
ret
mov
int
push
xor
pop
fists
divl
cmpsl
mov
mov
jmp
xchg
or
sbb
imul
or
xor
push
out
js
xchg
divl
and
push
ds
dec
xor
mov
mov
inc
adc
inc
jo
push
mov
cmp
pusha
out
inc
scas
jmp
push
lahf
jmp
pop
mov
mov
cmp
cmpl
or
jno
adc
xlat
add
sbb
aam
adc
xchg
add
jo
adc
cld
mov
test
or
cmp
pop
mov
inc
icebp
aaa
mov
mov
insl
fimull
std
lock
call
mov
or
stos
dec
mov
mov
mov
loop
dec
adc
stos
mov
in
jbe
fists
popa
cmp
pushf
cld
add
pop
in
js
es
mov
inc
daa
cmp
xor
sub
jnp
je
cmp
dec
add
sbb
movsl
sbb
mov
fcmovnbe
cmp
mov
aaa
adc
stos
or
fiadds
cmpsb
cmp
mov
enter
push
cmp
sbb
push
mov
cmp
in
aaa
cli
push
cwtl
cmp
cs
mov
ss
test
psrlw
dec
leave
dec
dec
mov
push
fsubrp
mov
lds
arpl
int
mov
push
lcall
jnp
loopne
in
repz
mov
rep
loope
test
mov
call
out
fld
divl
mov
call
ds
stos
and
roll
pop
stos
mov
fldt
add
test
xchg
repz
fwait
test
push
add
lods
fidivs
mov
add
jl
dec
dec
out
adc
movsl
je
jno
mov
sub
sahf
insl
lcall
cld
xchg
cltd
cmp
clc
mov
outsb
add
test
dec
test
sub
inc
lcall
push
mov
lahf
fldt
xor
jno
sbb
cmpsl
jo
mov
cmp
sbb
lea
cmp
inc
pushf
arpl
pop
loope
mov
call
pop
roll
jle
push
cmpsb
mov
push
jl
test
call
fmul
int
iret
adc
fistl
mov
sti
dec
rcrb
scas
mov
xor
mov
xchg
cltd
push
sahf
inc
push
xchg
mov
inc
cmpsl
xor
pop
cmpsl
in
enter
mov
xor
mov
rcr
add
loopne
shlb
mov
in
jge
gs
push
test
jg
cmpsb
out
or
cmpsl
int
add
iret
mov
stos
jbe
lock
ljmp
dec
into
repz
push
pop
push
xor
inc
int
push
sarl
popa
cld
fildl
fwait
std
repz
enter
sbbl
mov
sub
xchg
call
mov
jns
and
scas
das
or
data16
lods
adc
mov
popf
xchg
push
sahf
and
pop
fsubr
mov
fbstp
sbb
sub
inc
in
inc
in
sbb
out
pop
xor
inc
sahf
push
mov
sub
xor
dec
pop
test
ficomps
jnp
jnp
in
add
addr16
cwtl
movsb
insb
lcall
and
cmpsl
jecxz
lcall
repnz
mov
cmp
int3
pop
das
inc
hlt
mov
and
pop
xchg
cmc
nop
scas
sbb
cmp
stos
xchg
lock
add
call
int
nop
cs
and
fs
cmpsl
test
sub
mov
or
stos
and
sub
xchg
int
out
pop
push
mov
call
adc
or
pusha
aam
push
lock
jle
adc
out
push
sbb
push
jae
stos
xor
sbb
pop
ffreep
push
test
push
data16
repnz
ret
je
daa
push
pop
mov
add
out
subl
lret
mov
std
sub
add
sbb
loopne
xor
sahf
xchg
xlat
imul
dec
ret
inc
ret
sub
icebp
jle
or
jl
shrb
aaa
push
out
and
scas
cmp
imul
outsb
add
test
jmp
jge
cli
test
push
or
cmp
repnz
lods
inc
ret
add
lahf
adc
es
jecxz
movsl
mov
pushf
cmp
arpl
enter
jb
hlt
pushf
pop
mov
out
popa
xlat
jp
push
cmp
testl
popf
notb
mov
jns
test
xlat
jne
push
sahf
xlat
lcall
sti
pop
inc
stos
movsl
sub
or
sub
outsb
dec
sbb
mov
notl
ret
shll
xlat
xchg
loope
das
insl
adcb
scas
lret
out
xor
sub
aas
lret
rolb
rcrb
fisubrs
sbb
xchg
adc
aas
and
lods
dec
in
xchg
int
push
enter
jl
add
adc
test
lahf
lods
sbb
jle
cmp
jns
nop
in
cli
sub
and
fsubr
jnp
or
das
into
lcall
xor
js
ret
lea
shl
scas
pop
add
ficoml
subps
not
stos
iret
stos
mov
pusha
mov
mov
jno
cmp
fildll
orb
xor
in
out
ficompl
inc
and
andb
je
testb
fsubs
xor
adc
mov
div
push
stos
sti
loope
rolb
imul
add
into
cmp
jo
mov
ds
xchg
mov
sub
mov
daa
push
je
jmp
xor
jecxz
adc
or
jecxz
mov
push
push
rclb
imul
pop
push
inc
cmp
adc
dec
lea
adcl
nop
push
jmp
or
inc
cmp
scas
int
cmp
addr16
sub
pop
xor
aad
sti
pop
subb
das
mov
jecxz
nop
in
inc
xor
test
dec
or
idivb
out
mov
adc
test
lcallw
push
push
movsb
rcll
push
xchg
ljmp
rolb
push
popf
sub
icebp
pop
pop
cmp
inc
mov
rolb
mov
dec
mov
or
fnsave
dec
clc
ss
and
or
stos
iret
jmp
or
lret
cli
int
sub
repnz
loope
push
sub
jg
call
sbb
pop
jb
rorb
jp
mov
daa
repz
sbb
inc
ret
and
cmp
aaa
cltd
sti
stos
sub
mov
and
push
scas
add
out
push
push
add
daa
pop
shll
nop
jmp
les
mov
or
push
orl
dec
inc
loop
jge
adc
pop
inc
add
pop
pusha
enter
movb
insb
adc
push
aam
fadds
pop
in
sub
and
xor
mov
add
push
xor
out
rclb
mov
jns
inc
flds
sbb
inc
test
and
xchg
push
mov
stos
mov
aam
cltd
inc
xor
cmp
mov
xchg
movsl
out
stos
arpl
js
lahf
jecxz,pt
rolb
fucomp
push
adc
out
adc
pop
mov
jbe
fldcw
lods
ds
pop
mov
scas
mov
adc
cli
in
push
call
dec
adc
sub
jp
lret
xor
popa
cltd
daa
outsl
cltd
loopne
and
testb
and
jl
aas
test
loop
cld
stc
and
imul
lret
xchg
sbb
mov
dec
fistl
add
mov
rcrl
mov
loopne
mov
scas
popa
adc
pop
roll
or
adc
mov
addr16
jg
jns
jp
dec
push
adc
cwtl
pop
xor
push
and
mov
xorl
mov
adc
fst
xor
out
popf
in
inc
mov
mov
jns
push
cmc
lds
or
jmp
sbb
mov
lcall
fwait
pop
push
adc
lcall
cmp
lret
movb
repz
stc
mov
scas
in
into
pop
adc
sub
cwtl
push
loope
push
ret
addr16
movsl
popw
ret
lret
nop
cmp
xchg
ja
cmp
xchg
xor
jb
push
mov
jl
xchg
and
rcrl
mov
mov
lahf
dec
push
cltd
das
icebp
sahf
test
pop
push
and
roll
addl
sarb
pop
stos
push
outsl
or
and
adc
dec
jae
fdiv
sub
stc
scas
xor
scas
push
mov
xor
cwtl
jno
or
fldl
in
fisubs
rorl
add
data16
adcb
fnstsw
or
push
pop
outsl
jno
xchg
xchg
pop
mov
shlb
mov
jnp
xor
or
ret
sti
out
jp
les
es
test
cmp
mov
xchg
xor
mov
out
pop
add
push
mov
xchg
or
push
je
jge
sub
les
add
mov
cmc
push
jbe
in
xor
jge
rorl
mov
mov
dec
cmp
pop
add
fisttpll
adc
cmp
test
or
lret
push
mov
dec
divl
pop
cmp
lahf
aaa
adc
fdivrl
lret
cmp
sub
test
or
repz
push
dec
pop
and
xor
shlb
fisttpll
in
jne
jmp
jno
test
jge
push
mov
push
mov
cmp
sti
shll
xchg
movsl
in
aad
inc
pop
mov
adc
mov
push
sub
mov
xchg
push
pushf
pop
fstpt
push
or
mov
or
adc
pop
xor
add
outsb
ljmp
push
sbb
sbb
out
mov
push
jnp
cmp
cltd
mov
sarb
ror
fs
push
mov
cmpsl
xchg
and
test
out
orl
jb
into
pop
addr16
in
daa
loopne
mov
and
std
or
jae
into
mov
fdiv
push
cmpsl
fmulp
push
movsl
xchg
jns
xor
inc
mov
ficoms
outsl
or
or
addr16
fwait
pusha
jno
mov
stos
lods
cmp
xor
popa
js
lods
inc
inc
dec
and
in
imulb
movsl
dec
ret
outsl
les
adc
fisubrl
fldcw
loope
outsl
or
pushl
sbb
aam
pushf
push
imul
sbb
mov
adc
adc
out
sbb
cmp
iret
mov
arpl
jne
adc
fsubrl
insl
aaa
aam
or
frstor
inc
loop
and
aaa
xor
dec
add
cmc
jb
lds
cs
inc
xor
add
push
jns
jmp
mov
clc
xchg
dec
push
sub
mov
clc
pop
adc
jmp
mov
lods
je
mov
or
jae
dec
test
addr16
in
push
xchg
inc
loop
xchg
jb
loop
filds
mov
movsb
lret
jne
iret
inc
scas
fsub
inc
xor
fldt
xor
enter
inc
movsl
std
push
mov
out
xchg
std
in
jae
or
fistpll
cmpsl
lcall
jg
adc
mov
and
sbb
es
cmpsl
mov
and
or
inc
cmp
aad
daa
int3
rorb
xlat
pop
pop
push
xchg
xor
fwait
addb
lock
cmp
jmp
shlb
idiv
xchg
rcrb
cmp
pop
int3
xchg
cmp
xor
test
mov
push
and
sbb
sub
adc
inc
push
sbb
mov
lds
pop
sbb
mov
xchg
mov
mov
popa
insl
or
inc
mov
cmc
cmp
movsb
xor
rcr
negl
jmp
in
pop
mov
es
hlt
mov
gs
inc
mov
mov
test
in
popf
mov
jmp
inc
ret
test
and
pop
adc
insb
pop
jbe
inc
inc
int3
add
clc
push
mov
stos
push
mov
push
fcoml
sub
mov
movsb
mov
mov
lret
roll
test
hlt
mov
std
mov
pop
ljmp
psubd
xlat
ret
pop
mov
jbe
aaa
nop
adc
repnz
ret
std
sub
fsubrs
mov
mov
data16
cmpsb
fsubp
inc
pushf
push
jbe
int3
inc
xor
lret
ljmp
pop
fucomip
xchg
push
sti
sbb
sbb
sub
filds
out
insb
mov
shl
outsl
xchg
inc
cmp
jne
cwtl
enter
adc
and
push
stos
mov
jg
dec
rcr
mulb
cmp
push
jge
mov
das
push
scas
rcrb
pop
add
in
lahf
mov
mov
cmp
mov
push
lret
xor
add
lea
sub
cmp
inc
mov
jecxz
jo
push
inc
cwtl
cmc
dec
push
cltd
mov
imul
xchg
add
shl
and
pop
lcall
ja
stos
or
add
and
push
inc
mov
add
stos
pop
loop
movsb
outsb
iret
imul
sbb
cmp
scas
jns
loope
test
lds
shrl
arpl
cmpsl
pop
das
scas
rcrl
lea
out
pop
mov
cmp
add
or
push
lret
or
push
pop
fadds
mov
hlt
negb
ror
test
push
in
in
in
sbb
fildll
dec
xor
lret
call
stc
sbb
stos
mov
enter
mov
jns
int
std
sub
decl
or
mov
dec
lds
cmp
ljmp
push
mov
push
mov
sti
leave
js
and
les
xchg
int
cmpsl
stos
mov
dec
fildll
sub
push
adc
out
ljmp
jns
stos
mov
lahf
lods
xor
stos
mov
mov
xchg
jno
dec
mov
and
pop
scas
mov
mov
add
and
fdivl
test
outsb
js
ficompl
rcl
cmp
in
rolb
in
add
enter
loope
pop
sub
mov
xchg
rorb
into
push
scas
push
jb
push
xchg
jns
xadd
ss
add
rorl
xor
push
jecxz
stos
movsl
sbb
repz
fxtract
inc
int3
or
mov
sbb
int
lret
fisttps
push
or
jle
pop
pop
std
fwait
lret
ds
lret
leave
xchg
pop
add
roll
xor
jns
push
lea
aad
xchg
add
cmc
inc
jle
mov
adc
cmp
jno
out
lods
stc
inc
xchg
adc
dec
lcall
pop
jae
and
mov
shll
je
lock
sbb
cmp
stos
mov
mov
lcall
and
imul
stos
pushf
and
mov
push
fcompl
add
imul
out
adc
addb
mov
jle
flds
mov
mov
aas
fldt
jne
test
das
bound
xor
adc
push
sub
popf
xor
imul
xchg
pop
pop
stos
and
sub
add
adc
inc
sub
mov
out
and
outsl
sbb
cltd
test
pop
pusha
mov
mov
adc
mov
mov
pusha
data16
xor
and
cmp
xchg
inc
stos
aad
adc
jge
xlat
sub
mov
adc
scas
mov
sbb
mov
loopne
add
outsb
mov
loopne
mov
ret
add
push
sbb
add
test
push
sti
fnsave
into
stc
mov
int
iret
jae
mov
dec
andb
icebp
xchg
cmp
pop
mov
lds
scas
je
inc
or
les
sub
scas
xor
mov
popf
mov
pop
jae
xchg
mov
push
cmp
jp
mov
sbb
fisubs
mov
sub
push
xor
push
test
jmp
mov
addl
pop
shl
adc
jecxz
and
or
sti
sub
jle
lods
std
cmpsl
inc
cmp
test
addr16
dec
and
iret
push
sbb
lcall
pop
mov
test
mov
inc
int
andb
loop
aam
push
je
std
mov
push
inc
repnz
and
adc
jecxz
xor
and
ljmp
test
stc
test
add
add
pop
mov
and
aad
mov
popf
sub
adc
xchg
xlat
sub
insb
or
cmp
pop
or
and
sbb
mov
mov
push
hlt
xchg
ret
or
shr
test
jg
push
insl
dec
cmp
out
loop
push
inc
call
lock
pop
xchg
mov
sahf
dec
movsl
push
jae
ret
ss
push
lret
mov
in
mov
mov
adc
cmpl
xchg
cwtl
jmp
inc
cmpsl
cld
xchg
inc
lcall
jno
test
shlb
je
adc
fwait
ss
push
into
pop
sub
lods
mov
xor
sub
fstpt
xor
pusha
popf
in
ficompl
cmp
je
negl
lret
jnp
fistpl
or
push
cmpsl
dec
add
into
pop
jbe
imul
sub
loop
mov
andb
in
out
mov
pop
repnz
andb
and
add
movsl
outsl
push
pop
adc
xchg
hlt
gs
enter
jle
fidivl
push
jo,pt
repnz
test
cmc
inc
andl
adc
test
sbb
shlb
pop
cmp
and
mov
jb
cld
add
push
jbe
jl
out
out
into
mov
and
ficoms
divl
pop
shll
mov
and
mov
adc
mov
js
leave
imul
push
mov
or
in
sub
jbe
or
pushf
push
inc
fstpt
dec
arpl
mov
and
aam
mov
loope
push
push
fistps
cmp
scas
push
adc
lcall
out
pop
outsb
lcall
sahf
loope
sbb
jne
jp
adc
and
inc
inc
cmp
add
cmp
and
jb
les
sbb
pop
adc
cs
leave
mov
jp
outsl
add
adc
push
jb
mov
xor
dec
xchg
sub
and
mov
push
xlat
pop
fiadds
mov
mov
sbb
and
or
scas
fldt
addb
repnz
or
mov
ss
enter
leave
arpl
dec
lcall
inc
jo
or
mov
into
jge
pop
add
dec
add
jns
outsb
pusha
rep
cld
lds
pop
adc
adc
das
lar
mov
mov
lock
std
lret
dec
push
xor
xor
das
mov
push
mov
push
mov
pop
push
aaa
add
mov
cmp
movsl
sub
int3
sbb
bound
inc
inc
mov
sbb
dec
add
rclb
std
jge
shll
lods
das
fwait
sbb
pop
insb
push
mov
mov
pop
mov
sub
or
pop
cmpl
xchg
ljmp
push
sbb
or
dec
dec
gs
loope
mov
jecxz
sbb
js
sbb
mov
xchg
xchg
lahf
ds
push
xor
xchg
and
cmc
mov
mull
js
xchg
xlat
daa
sub
cmp
sbb
mov
shlb
outsl
add
jl
test
out
mov
fcoms
popa
psubw
fldl
sbb
int
inc
push
test
push
fbld
movsb
fcmovnu
xchg
adc
imul
hlt
push
fmul
fwait
mov
movsb
jno
mov
sub
in
xchg
add
imul
into
lock
xor
or
lods
jl
out
sub
dec
loop
cmp
cmp
pop
mov
aad
fistpl
std
fcmove
mov
adc
adc
or
fstpl
daa
mov
in
arpl
cmp
mov
sub
push
xor
add
jae
adc
sub
sbb
in
js
jp
jecxz
in
xchg
adc
sti
sbb
and
lea
cli
mov
xchg
xor
dec
jg
cmp
ljmp
movsb
and
and
and
outsb
and
xor
nop
mov
lcall
cmp
imul
subb
into
or
jp
ljmp
and
or
cmp
push
es
pop
inc
mov
aas
sub
jl
dec
mov
or
lods
scas
lods
xor
repnz
sarb
xchg
ss
mov
mov
push
leave
push
test
cmp
aaa
jle
adcl
mov
icebp
psrld
arpl
sbb
pop
jmp
sbb
mov
out
xor
mov
shl
pop
outsl
dec
outsb
add
stos
scas
push
xchg
mov
ret
or
out
es
dec
pop
cmp
inc
imul
rcrb
pop
fbstp
sub
mov
add
mov
xchg
pop
bound
loop
inc
stos
mov
jmp
xorl
aad
inc
adc
cmp
lds
idivb
popa
sub
outsl
push
int
sbb
ret
mov
adc
shll
loop
cmpsb
xchg
cltd
iret
adc
movzwl
add
roll
xor
loopne
and
aaa
mov
ret
aad
mov
mov
call
mov
xor
in
adc
std
mov
ja
add
mov
pop
sbb
cmp
inc
popa
and
iret
pop
inc
mov
ja
push
dec
cmp
xor
push
jmp
push
pop
xor
ja
dec
es
jle
ret
sub
insl
scas
shlb
icebp
gs
rcrb
push
imul
das
mov
fistpl
and
aam
arpl
sub
jmp
es
push
cmpsl
ja
pop
sahf
sub
xchg
imul
xor
xchg
lock
into
cmpsb
adc
ret
mov
mov
scas
call
loop
mov
std
xor
fidivrs
xchg
and
xchg
adc
cmpsb
pop
int
mov
sar
push
and
nop
cmpsb
cs
lock
push
fcompl
outsl
std
in
gs
mov
ret
ja
fsubrl
xor
sub
imull
sub
cmpxchg
mov
rclb
jp
or
jbe
mov
les
fs
inc
clc
add
mov
dec
jg
orb
sbb
std
xchg
xchg
outsb
adc
mov
scas
dec
stos
mov
fldcw
sbb
cmpsb
and
dec
in
jb
pushf
inc
cmp
mov
imull
xchg
test
mov
cmp
lcall
push
pusha
jle
cmp
lret
ljmp
sbb
sbb
gs
inc
int
and
int
gs
sbb
cmc
mov
cmp
mov
leave
pop
sti
xchg
pop
sbb
out
cmc
dec
adc
mov
dec
push
call
sti
fisubrs
sbb
or
and
jle
sahf
cld
repz
push
jae
data16
mov
gs
into
sbb
enter
adc
daa
loop
leave
sbb
xor
jns
loopne
cld
jl
pop
lret
fists
mov
adc
icebp
mov
out
mov
lock
mov
in
mov
addl
xchg
sbb
icebp
cmp
add
mov
xor
loope
outsb
push
pusha
sahf
mov
jne
std
neg
iret
mov
xor
cmpsl
in
sub
cmp
jb
cmp
push
mov
or
adcl
ret
xchg
sbb
jl
sub
or
push
push
fldcw
mov
in
clc
icebp
push
idivl
or
call
push
sahf
cmp
addl
and
cld
mov
mov
lock
xchg
pop
sbb
les
scas
ja
xchg
loopne
cmc
in
adc
mov
dec
mov
cmpsb
outsb
cmp
les
mov
cmp
cmp
sub
das
ss
movsl
inc
mov
lods
add
mov
in
arpl
xchg
inc
add
push
xor
cmp
mov
shl
mov
ret
cmpsb
es
fistpl
mov
sub
dec
out
cmp
pop
imul
or
add
and
fcmove
or
pop
sub
daa
adc
push
hlt
xor
out
jl
int
cli
mov
pushf
in
lret
xchg
je
add
popa
fstl
fadds
push
sub
loop
adc
clc
jle
add
pop
jae
cltd
push
loopne
or
mov
push
testb
fs
push
pushf
xor
rcrl
mov
cmpb
leave
inc
icebp
out
clc
insb
rorl
in
addr16
inc
test
cmpsl
mov
inc
sub
outsl
adc
push
mov
inc
in
push
sub
pop
icebp
cli
xchg
ss
sti
xchg
fdiv
add
push
out
sbb
jl
cmp
int
adc
fimuls
mov
inc
lods
jno
sub
lret
cmpsl
adc
dec
cs
inc
or
cmp
mov
fisttpl
iret
push
mov
fistl
xor
xor
xchg
in
xchg
dec
or
jb
push
dec
or
int
outsl
cwtl
sbb
stc
mov
in
push
lcall
inc
mov
jecxz
cmpsb
mov
mov
add
repnz
cmp
cmp
cmp
js
setbe
and
aas
cltd
int
es
add
or
xchg
sbb
seta
xchg
jns
shl
popa
pop
pop
addr16
xor
inc
push
mov
mov
pop
fcoms
and
call
sbb
cli
lahf
cs
cld
in
inc
in
mov
imul
imul
xor
lock
je
in
cltd
std
inc
push
push
mov
jp
and
rcrb
aam
inc
mov
push
inc
mov
jno
mov
aam
jns
lods
or
dec
dec
xchg
repz
inc
loope
in
xchg
or
outsl
lret
icebp
inc
adc
mov
loopne
test
and
xchg
mov
loop
adc
add
int3
scas
test
sbb
xor
out
jl
out
push
pop
push
popf
mov
arpl
mov
adc
repnz
mov
mov
das
pop
hlt
mov
push
lret
ljmp
test
mov
mov
into
mov
jp
xchg
out
xor
or
inc
out
ljmp
gs
or
mov
adc
test
or
ret
cmpsb
xchg
inc
xchg
dec
bnd
mov
ja
and
jo
das
jne
add
pop
xchg
rcrb
loop
xchg
dec
fdivp
decb
push
sub
cmp
mov
and
sub
data16
andb
loop
or
jp
loop
jbe
pop
mov
cwtl
pop
mov
pop
rol
xchg
arpl
dec
lock
pop
lods
data16
adc
push
push
in
ljmp
fsubrl
in
sbb
xlat
jmp
push
mov
push
dec
xor
ret
inc
repz
mov
push
lock
mov
push
das
lret
jae
rorl
mov
jge
loope
rolb
sti
pop
xchg
xor
xchg
jg
enter
shl
inc
inc
and
add
ss
pop
jg
xor
fsubl
cltd
cs
lock
fstp
int3
int3
mov
cmp
pop
jl
decb
out
xchg
movsl
jmp
dec
fs
popf
mov
adc
out
aas
fldenv
movsb
ljmp
add
ret
xor
aaa
add
lahf
imul
incw
movb
aaa
lret
lods
mov
xor
fistps
std
hlt
or
push
vandps
and
cmp
outsl
cld
test
inc
loopne
pop
call
dec
inc
mov
mov
cmp
lea
aam
es
mov
or
idivb
dec
or
jne
mov
mov
data16
mov
sub
inc
jle
sti
dec
test
xchg
dec
daa
mov
lea
sub
and
or
mov
pusha
or
nop
dec
jle
out
popf
sar
leave
les
aad
push
ficompl
in
pop
sub
xlat
out
les
push
push
fwait
in
scas
adc
mov
inc
xchg
fimull
sub
and
lret
in
jmp
xor
push
fld
jl
lds
loop
pop
outsl
mov
fnsave
push
xor
mov
movsl
movsl
adc
imul
or
sbb
lock
jmp
push
xor
inc
jmp
dec
xor
outsl
push
cmpsl
jbe
push
xchg
mov
pop
arpl
loopne
in
mov
inc
ds
out
insl
cmp
sub
lods
aad
jecxz
pop
cmp
fsubrl
pop
push
mov
sub
fld
xchg
test
imul
xchg
loop
adc
loopne
dec
mov
lock
in
jp
into
push
into
test
packsswb
test
es
pop
rcl
xor
pop
cmp
cmp
aad
push
js
repz
add
lret
or
adc
mov
lret
fstpl
pushl
push
in
mov
push
outsl
jp
cld
out
and
scas
sub
cmp
out
movsb
xor
mov
fs
mov
push
lods
cli
sub
mov
jne
adc
ss
lods
ds
movsl
icebp
lock
push
pop
sub
stos
cmpsb
mov
outsl
das
aam
xor
pop
das
mov
cli
sbb
es
std
addb
pop
pop
dec
or
fdivl
pop
push
or
andl
pop
leave
fwait
jge
test
mov
inc
dec
cmp
movsl
insl
imul
repz
pop
or
stc
pop
push
nop
leave
sub
dec
add
into
rorb
cmp
cs
in
mov
xorb
das
push
dec
stc
add
mov
sbb
mov
add
add
mov
jmp
cmp
mov
dec
and
into
inc
add
int3
loope
sbb
cmp
jle
xchg
mov
adc
icebp
faddl
mov
int
sbb
xor
fisubrl
push
mov
mov
add
and
enter
idivb
aas
lahf
jl
insb
fs
adc
sub
pop
lret
mov
stos
movb
add
in
roll
push
inc
xor
lret
aam
rcll
or
data16
jmp
xor
sarb
fdiv
popa
mov
out
fisttps
loope
mov
cmp
loopne
adc
mov
ficompl
dec
or
jnp
iret
cmp
iretw
pushf
and
sbb
repz
aad
mov
dec
out
jb
jae
adc
xchg
inc
cmp
fdivrp
out
jae
fstpl
dec
gs
dec
push
lock
cltd
xor
jmp
sbb
sbb
xchg
inc
cmp
add
push
mov
arpl
loopne
vmulpd
push
imul
test
in
shl
loop
mov
cmpsb
sti
pop
xor
cmp
stos
inc
clc
je
inc
ds
fcomps
int3
pavgb
jo
scas
xchg
cwtl
popf
pop
call
imul
lods
insl
enter
ret
sbb
mov
adc
rcrb
cld
xlat
push
push
rcr
ds
cli
xchg
in
push
iret
stos
or
in
cmpsl
inc
pushf
jecxz
insl
stos
pop
icebp
sub
or
out
jl
fisubs
lock
mov
rcrb
or
pop
aas
push
es
sub
fidivl
int3
pop
push
negl
ficoml
lds
aad
pop
xchg
mov
insl
inc
pop
mov
inc
lea
out
xchg
aaa
push
or
xchg
jae
xchg
pushf
mov
mov
dec
and
pop
push
or
sbb
lcall
call
jl
push
jecxz
out
movsl
lds
outsb
int
arpl
and
rcrb
adc
test
in
imul
jbe
ja
xchg
bound
add
bound
sbb
adc
hlt
es
inc
mov
sub
stos
push
and
ret
xor
scas
call
aad
cmpsb
jne
out
rcrl
pushf
lds
xchg
xchg
mov
xor
mov
mov
push
gs
lock
js
mov
sbb
pop
cli
iret
in
fwait
push
lcall
jecxz
xchg
out
or
ret
lods
gs
pop
enter
cmp
and
jnp
test
fucomp
fmull
ret
js
jns
leave
std
in
inc
mov
int
or
iret
sub
stc
jle
imul
jge
xorb
ljmp
idivb
into
xor
pop
mov
dec
cmp
cli
adc
addr16
pop
push
aas
movsb
and
push
scas
mov
push
dec
pop
imulb
lea
cmpsl
mov
rol
xorb
xchg
les
cld
mov
adc
or
testl
sarb
mov
and
popf
sar
mov
sub
iret
sub
mov
stc
adc
sbb
outsl
stos
sbb
push
xor
leave
aaa
jle
pop
stos
es
or
movsl
fwait
cmpsb
xchg
inc
lods
push
inc
cmp
int
mov
jbe
test
push
inc
dec
push
data16
fnsave
sub
xchg
arpl
mov
jno
jge
inc
jae
movsb
or
pop
mov
sbb
add
call
add
idivl
fldl
sti
and
sbbl
jae
add
lods
jns
sub
int
dec
add
jecxz
mov
push
clc
lds
into
movsb
mov
cs
sub
lret
pop
mov
or
icebp
lods
add
pop
or
xor
cmp
or
test
scas
insl
jae,pt
cli
pusha
mov
dec
sbbl
mov
scas
mov
push
faddl
popf
int3
adc
xchg
cmc
add
daa
mov
leave
syscall
fst
sahf
dec
add
push
mov
xchg
push
pop
xchg
iret
sbb
cmpsl
je
mov
into
ja
dec
push
push
adcb
pop
cmc
icebp
addr16
outsl
fincstp
adc
push
cmpsb
pop
js
inc
cld
dec
cmp
cltd
arpl
add
push
movsl
out
cwtl
inc
outsl
mov
call
sbb
enter
sbb
enter
insb
adc
pop
rclb
stc
inc
sub
rclb
adc
mov
ljmp
mov
in
cmpsb
mov
cs
or
sbb
inc
sub
in
mov
hlt
sbb
and
dec
adcb
fdivrs
jns
mov
pop
fstl
dec
outsb
or
and
push
rorb
adc
lcall
jns
nop
sbb
mov
and
imul
popf
pop
fidivl
xor
push
dec
imul
loop
push
pop
push
movsb
dec
cli
xor
push
mov
in
or
and
cli
mov
nop
add
fwait
in
jnp
mov
mov
insb
packuswb
cmp
out
loop
adc
shl
aam
in
loop
cli
and
cmp
insl
fprem1
aas
fildll
xchg
popf
and
mov
rclb
cli
adc
lea
or
sti
std
sbb
xchg
loope
mov
mov
pop
adc
push
in
movq
cmp
testl
push
pop
xor
and
hlt
flds
test
std
and
int
add
loop
sarb
sarl
xchg
pop
leave
cli
clc
push
fsubr
inc
jno
cmp
stos
jb
fstps
roll
sar
xlat
mov
or
sbb
add
icebp
mov
sarb
inc
mov
test
xor
adc
mov
ds
pop
enter
iret
inc
rorl
pop
and
fistps
scas
test
xor
add
sahf
lods
xor
jbe
test
sti
push
fisubl
xchg
test
or
out
sarl
hlt
inc
adc
adcb
imul
mov
movsl
jo
fistpl
mov
gs
push
mov
in
pop
xchg
mov
mov
lea
xchg
lcall
addl
xchg
and
dec
std
sub
mov
inc
mov
xorb
mov
iret
pusha
sbb
jno
adc
pop
popf
or
fcoms
call
test
sub
lret
push
pop
adc
cs
lods
mov
jne
int3
lods
cmc
sahf
pop
dec
push
outsb
pop
cwtl
cmp
jne,pt
and
iret
int
sbb
test
mov
ljmp
sub
jecxz
pop
sbb
mov
jle
xchg
mov
scas
rol
adc
ds
mov
and
sbb
lahf
rcl
sahf
out
rorb
lds
xor
repz
sarl
sub
cmp
pop
inc
cli
aam
inc
push
cmp
cmp
out
movsb
pop
mov
dec
sbb
pop
and
fwait
sub
mov
mov
into
mov
sbb
icebp
mov
pop
loopne
icebp
test
cmp
or
pop
jno
arpl
sbb
shrb
add
flds
loopne
pop
fildl
jge
movsb
or
fwait
sti
cmpl
insb
divb
aam
cmp
iret
push
jmp
rcrl
je
insl
sbb
xor
mov
aaa
push
stc
fwait
test
stos
mov
adc
mov
pop
push
or
in
popf
pop
aaa
rcll
adc
xlat
iret
jle
push
xor
mov
ss
mov
pop
add
inc
xchg
dec
mov
inc
xchg
adc
bound
test
lea
mov
cmp
xor
jmp
ss
lods
inc
xor
in
and
rcr
out
pop
imul
jp
data16
iret
daa
inc
lcall
addr16
dec
pushf
adc
fisttpl
xchg
add
xchg
xchg
dec
mov
fmul
pushl
dec
mov
inc
dec
jo
scas
rolb
stc
pop
fs
push
lret
adc
jp
or
mov
cwtl
loope
test
jmp
sti
mov
out
xchg
inc
mov
mov
rcll
pop
push
xchg
pop
jle
jns
adc
mov
test
hlt
mov
enter
pop
ljmp
test
and
pop
dec
add
mov
ds
aam
jp
test
mov
aad
popf
dec
cs
sbb
adc
and
or
loope
jl
push
les
rorl
shll
or
and
pusha
xchg
xchg
jg
mov
movhps
ds
test
cmp
pop
in
fsubp
inc
push
sub
xchg
rcl
jnp
xchg
jl
loope
in
sub
loop
lea
mov
xchg
push
jmp
dec
add
insl
mov
jns
idivl
xchg
mov
xchg
adc
cs
test
rorl
dec
cmp
scas
push
imull
fs
push
into
aaa
xchg
xchg
mov
add
lock
lods
sbb
stos
gs
sbb
pop
push
or
adc
gs
aaa
push
stos
cli
popa
clc
cmc
ja
bound
xchg
adc
mov
pushf
xor
fdivrl
sbb
sub
cmp
sti
loop
ljmp
fmuls
push
mov
outsl
je
xchg
ret
or
inc
mov
pop
pop
imul
mov
rcrb
xor
rorl
mov
or
adc
lds
in
cmp
fnstsw
pop
and
sub
sbb
xchg
test
push
bound
or
push
cmp
in
xor
mull
pop
push
inc
jne
sub
mov
inc
xchg
pop
cmp
xor
int
xlat
adc
lods
ret
cmc
inc
into
inc
pop
and
scas
ds
mov
xchg
in
sub
jbe
std
out
mov
imul
inc
push
imul
push
jnp
mov
add
test
out
fisubl
xchg
or
xchg
test
jmp
xchg
test
popa
leave
push
in
pop
mov
push
mov
stos
shrl
dec
xchg
out
dec
stos
iret
inc
mov
std
js
jnp
lea
push
dec
pushf
mov
push
mov
cltd
jp
lods
pop
clc
lea
xor
ja
movl
xor
add
arpl
dec
pop
iret
xchg
and
mov
xor
xchg
mov
test
outsl
sarb
adc
inc
mov
loopne
adc
xchg
call
or
mov
loope
cld
in
push
jg
clc
mov
inc
lods
ljmp
fiadds
pop
movsl
xchg
pop
gs
popf
sarl
int
adc
leave
cmpsb
cmp
or
fnsave
fnstsw
and
test
js
sub
mov
mov
pop
pop
iret
cld
add
jecxz
cmp
jne
push
ret
dec
popa
addr16
repz
imul
mov
loopne
sti
lock
or
push
leave
lock
mov
dec
scas
pop
rorl
popf
pop
jne
xchg
bound
movsl
mov
out
dec
mov
daa
xchg
test
cmpsl
add
jle
mov
add
testb
or
ds
je
mov
testl
ret
enter
inc
inc
ficompl
inc
lock
mov
xchg
pop
and
push
out
fsubr
imul
xor
cmp
fimuls
jnp
cmc
in
pop
jns
jecxz
out
sbb
mov
mov
inc
dec
leave
xchg
in
jmp
stos
addr16
in
push
xor
stos
insl
arpl
cmpb
les
mov
outsb
enter
rol
ret
mov
cmp
mov
xor
pop
sbb
cmp
in
jae
bnd
js
jp
or
xchg
jg
es
cld
lods
jle
dec
push
or
mov
sahf
mov
fnstcw
cwtl
inc
jne
popf
fisubrs
or
into
xor
jno
push
jbe
pushf
sub
fisubrl
cmpsb
push
pusha
arpl
xchg
mov
push
cmc
push
push
pop
push
mov
outsl
sar
int3
stos
loop
fisubrs
inc
pusha
addr16
cs
aaa
inc
sub
cltd
cmp
add
loop
jge
lea
xor
xchg
in
push
add
rol
decb
jno
sbb
add
push
adc
les
gs
stc
xor
bound
clc
sahf
pusha
sbb
aam
pop
jmp
pop
test
mov
or
xor
and
es
mov
cmp
add
sbb
cmp
jnp
nop
mov
int
adc
pop
inc
xchg
xchg
push
jbe
pop
iret
ja
in
add
data16
sub
xor
jecxz
jbe
insl
mov
fldt
dec
sbb
lods
mov
lock
test
mov
ljmp
int3
in
xchg
cmp
jecxz
rcrl
movsl
popf
hlt
fcomps
jp
roll
mov
mov
divl
inc
mov
inc
test
aad
dec
jecxz
rorb
add
push
stos
adc
lea
loopne
lret
sub
or
dec
push
cltd
xchg
mov
push
mov
mov
sbb
test
cmp
or
pop
addr16
lods
lds
lods
js
pusha
outsl
int3
fdiv
enter
lods
test
lods
int
ds
popa
pop
cltd
jle
fsubs
iret
mov
push
dec
sahf
ja
cli
scas
fldz
dec
lods
fildl
fcmovbe
add
nop
push
int
mov
mov
loopne
std
inc
test
add
stc
jo
xorb
push
sub
push
and
pop
cltd
out
mov
jmp
iret
ljmp
inc
jecxz
dec
mov
or
sar
xor
cltd
or
aaa
cmp
cltd
imul
push
dec
pop
adc
ds
sub
ret
push
stc
jns
daa
arpl
inc
mov
mov
lcall
xchg
sahf
xchg
pop
push
jbe
jge
lret
jns
lahf
ret
aad
mov
push
or
lods
repnz
ljmp
scas
xor
pop
out
mov
push
aaa
mov
aam
das
outsb
sbb
xor
stos
push
out
sub
ja
fisubrs
test
mov
pusha
popf
pop
test
mov
sbb
fnsave
mov
inc
sarb
or
cld
clc
xchg
cli
gs
push
pop
mov
xor
cmp
inc
in
lods
inc
mov
jge
pop
movsl
mov
jbe
jns
cwtl
xor
jns
mov
inc
or
jl
nop
in
or
cmpsl
rorl
push
popf
mov
shlb
out
test
hlt
inc
in
or
pop
push
shrl
cmp
das
cmp
shrl
mov
cmc
data16
repz
mov
mov
pop
test
lds
push
leave
lret
lods
adc
pop
mov
lahf
mov
pop
xchg
cmp
test
aam
add
cmc
je
push
decb
pusha
cs
iret
sti
loope
ljmp
cmp
pop
cld
loopne
or
dec
out
pusha
clc
inc
jg
mov
dec
aas
es
sbb
rol
testb
xchg
sub
jae
mov
add
pop
xlat
pop
xor
scas
cmc
xchg
adc
sbb
test
repz
stc
sub
loop
gs
js
pop
rcr
adc
or
adcb
dec
repz
loope
into
sbb
nop
mov
test
push
pop
testl
xchg
adc
dec
pusha
in
cmp
out
sub
aam
clc
popa
cmpsb
repnz
test
add
inc
pop
push
gs
sub
mov
into
xor
stc
add
in
mov
add
and
idivl
ds
xchg
rcrl
mov
icebp
shll
pusha
stc
sbb
sbb
xor
aad
outsb
mov
adc
inc
scas
mov
jmp
jns
inc
fstpl
sub
and
and
mov
inc
pop
sahf
pop
inc
mov
addb
pop
lea
pop
lea
lahf
dec
sbb
aam
clc
int3
dec
jmp
jns
popa
or
fdivr
mov
mov
gs
add
clc
rcrl
jns
mov
push
inc
dec
dec
pop
jmp
push
in
xchg
enter
hlt
adc
test
and
stos
jne
js
fnstsw
xor
xchg
ds
lret
outsb
sbb
cs
sbb
std
mov
pop
rolb
lahf
cmp
add
cmp
jns
fadd
addb
les
mov
push
sub
pop
push
jecxz
addr16
dec
into
add
testb
push
add
mov
cmc
and
mov
ja
scas
mov
data16
insb
xchg
and
movsl
rolb
inc
les
arpl
sub
insb
mov
dec
scas
imul
imul
ret
push
dec
cmpsl
or
mov
out
jne
inc
shrl
enter
or
lcall
add
and
adc
push
aad
mov
enter
pop
cmp
ret
mov
addr16
xor
add
movsl
lahf
push
ljmp
sub
ret
push
adc
neg
ja
mov
jg
sub
cwtl
and
mov
sub
inc
dec
loope
or
push
jb
cmp
mov
addr16
lods
xor
pop
cli
dec
test
repz
fcmove
scas
jb
push
push
jle
fists
cltd
mov
jne
push
lods
push
cmp
and
lods
and
fisubs
faddl
in
push
test
lahf
pop
sbb
mov
xlat
sti
sub
cmp
adc
xor
jp
pushf
or
subb
rcrl
pop
sbb
fisttpl
ja
mov
dec
xchg
jns
testl
lods
pop
fldcw
aaa
test
rolb
jle
cmc
mov
adc
in
aad
push
pop
iret
mov
inc
scas
mov
inc
xchg
or
xor
fnstcw
int3
jno
mov
stc
cltd
pop
mov
push
jge
mul
sub
repz
sbb
out
sub
xor
push
aas
lret
test
add
mov
inc
xchg
sbb
push
lods
out
sar
jo
cmp
push
leave
sbb
rorl
jno
xchg
pop
popf
mov
mov
cmp
cmpsl
sti
jno
add
xor
clc
into
jp
int3
add
dec
push
adc
aas
stos
mov
jo
iret
stos
shl
sbb
mov
daa
xchg
pop
lret
dec
cmc
aaa
sbbl
dec
mov
jg
jo
sub
lea
jns
js
imul
add
xchg
push
imul
or
in
gs
dec
insb
push
adc
orl
cmp
pop
out
cld
clc
jbe
pop
push
sbb
out
dec
dec
push
out
lock
dec
cmp
sti
fcomi
jp
cmp
pushf
leave
into
or
aad
push
and
inc
dec
push
jmp
test
push
cmc
fs
pop
subl
xor
pop
sarb
sub
pushf
xchg
add
outsb
leave
sub
push
ja
decl
inc
pop
ljmp
stos
and
add
cmp
push
push
add
sub
mov
sbb
push
mov
pop
orb
cmpsl
jb
leave
outsl
jecxz
add
inc
aas
fisubrl
aaa
insl
in
scas
xor
mov
popf
adc
lret
lret
hlt
fisubl
fcoms
push
cmpsb
dec
dec
ljmp
jno
mov
sbb
pop
insl
out
pop
push
or
push
mov
rcll
lahf
mov
jbe
cli
cmp
lock
iret
stc
pop
movsb
xchg
sti
mov
movsb
add
ljmp
cmpb
sti
popa
nop
mov
inc
icebp
mov
popf
in
pop
jl
inc
faddl
lods
adc
out
rcrb
insl
lret
fnstcw
ds
mov
adc
mov
cmp
rclb
mov
cmp
lods
lret
lods
pop
test
mov
mov
add
cmpl
mov
dec
push
add
lret
xchg
push
pop
ficompl
outsb
cmp
pop
ficomps
and
ret
inc
cwtl
pop
add
cmc
xchg
pushf
dec
mov
push
das
std
insb
pop
arpl
push
fisubrl
les
jp
je
mov
add
int3
adc
test
into
cmp
and
loope
lods
add
cmc
cmp
lret
insb
inc
jg
xchg
aam
pop
pop
fdiv
mov
scas
add
mov
popa
mov
cwtl
push
xlat
sbb
ds
sbb
fisubs
ljmp
jbe
mov
imul
add
dec
pushf
pop
mov
xor
decb
test
or
jg
jge
movsb
inc
repnz
subb
jno
push
jae
dec
push
jle
popa
cwtl
scas
dec
insb
xchg
mov
ret
sbb
addr16
jne
outsl
push
dec
fldcw
and
movsb
inc
mov
sahf
cmp
test
movsb
rcrb
mov
mov
and
ja
jp
je
mov
sahf
pop
or
dec
inc
je
notl
cwtl
or
xor
add
divb
aaa
lods
ret
cmc
sub
push
cs
push
pushf
fsubl
push
or
sub
int3
or
xor
fadds
sbb
jb
rcrl
lea
sub
jne
out
or
rolb
or
dec
jle
xor
or
push
mov
inc
xchg
sti
cld
out
jmp
push
incb
in
xchg
sub
je
movsl
inc
dec
clc
sub
inc
loope
mov
jb
dec
lock
add
sbb
inc
xchg
in
lea
push
scas
xor
fcmovb
mov
aad
dec
pop
bound
fcmovnu
push
sahf
icebp
adc
idivb
cmp
adc
mov
insb
scas
fs
dec
iret
or
and
or
int
jae
pop
loop
and
insb
iret
push
push
or
inc
sub
jae
and
out
mov
aam
sahf
jg
xor
and
loop
and
hlt
je
xchg
jle
ljmp
fdivrp
mov
flds
loope
mov
mov
scas
test
jno
repz
pop
or
das
je
loope
push
negl
push
ss
in
mov
imul
dec
js
data16
mov
mov
or
xor
mov
and
dec
iret
mov
testb
mov
cs
cmp
fs
cmp
insl
xor
cmp
xchg
push
adc
adc
xor
xchg
or
je
and
pop
push
cld
inc
inc
xor
enter
mov
out
rolb
add
xchg
push
stos
fcmove
push
jle
imul
add
xchg
dec
jae
xchg
ss
adc
pop
pop
lods
pop
sti
mov
out
les
out
pop
inc
add
and
mov
xchg
jne
or
and
inc
aam
je
fld
je
mov
push
loopne
sbb
lods
leave
xor
sarl
jo
and
mov
cmp
cmp
sub
addr16
imulb
pop
fldenv
xchg
lret
adc
xchg
cmp
pop
mov
es
fidivl
adc
ja
out
lahf
mov
sub
lcall
adc
lahf
into
int3
outsl
push
pop
add
cli
add
cmpsl
cwtl
add
frstor
mov
jno
scas
faddl
cld
push
test
stc
dec
pusha
inc
sbb
push
add
loope
mov
jle
xchg
loopne
popa
xchg
movb
sbb
pop
insl
popa
sub
adcb
outsb
inc
lods
or
mov
dec
in
and
andl
mov
xchg
mov
xchg
jmp
jnp
xlat
imul
lds
fwait
sub
mov
xor
pop
std
lods
notl
negl
inc
rcrl
imul
ficomps
andb
lock
jl
mov
cli
lea
and
xchg
mov
cmc
mov
jle
aaa
shrl
add
aas
sti
mov
pusha
pop
mov
je
jl
in
pop
dec
repz
jecxz
sbb
sbbl
mov
psubsw
loope
pop
dec
xchg
push
out
scas
insl
nop
popa
xchg
pusha
jg
pop
shlb
xchg
adc
push
dec
fs
ficoms
arpl
icebp
mov
jbe
xlat
insb
leave
mov
dec
mov
xchg
loopne
fcompl
jl
cmp
sahf
jmp
adc
jo
jno
mov
mov
iret
pop
push
pusha
ds
add
insl
pusha
call
mov
add
in
bound
dec
dec
cmp
or
jg
shll
test
mov
push
insl
mov
test
xchg
shr
leave
das
ss
jle
pop
mov
insl
clc
cmp
call
sbb
les
push
push
xchg
test
aam
inc
enter
inc
xor
scas
mov
ret
sbb
test
mov
jg
in
dec
or
inc
icebp
jg
imul
and
int3
shlb
mov
sub
cs
outsb
xchg
sub
and
jb,pn
and
mov
int
nop
lret
jecxz
push
cltd
ja
inc
xor
xchg
push
inc
pop
pop
fbstp
sub
adc
movsl
xor
or
cmpsb
int3
jl
adc
cld
je
adc
push
in
sbb
inc
inc
sub
loopne
mov
pop
xchg
test
movsb
je
out
decl
into
pop
in
fildll
mov
hlt
out
xchg
ret
imul
lret
push
jbe
and
fnstsw
xchg
fs
mov
xor
aas
inc
lods
xlat
inc
call
sub
and
fnsave
inc
cld
push
mov
out
data16
test
push
jns
jo
hlt
mov
and
movsl
and
jb
mov
in
mov
add
sub
jmp
insb
enter
scas
bound
add
mov
gs
test
push
jo
out
lea
mov
scas
sub
add
adc
jno
test
loopne
pop
jae
data16
adc
xchg
mov
fmul
cli
mov
push
fidivs
pop
nop
sbb
mov
jp
mov
push
jle
sub
aam
rclb
add
loopne
adc
dec
adc
pusha
out
shlb
and
jae
stc
lcall
xchg
push
push
adc
inc
dec
in
in
loopne
or
fcmovne
sub
xchg
push
ss
ficoms
pusha
xchg
add
movsb
fmul
shrl
jo
xor
mov
add
pop
pop
mov
inc
icebp
mov
sbb
mov
mov
jb
push
inc
scas
or
cmpsl
jne
nop
jae
or
xchg
shlb
or
repnz
jle
mov
push
cld
xchg
loop
inc
jg
and
icebp
sub
mov
jnp
outsb
stos
adc
jb
cmp
and
add
dec
sti
sti
lods
pop
fstl
and
loopne
imul
fistpll
loopne
inc
shrl
mov
sub
add
add
mov
mov
pop
xchg
nop
incl
sti
or
daa
push
stos
or
xchg
cmp
xor
sbb
shll
enter
ja
rcrb
cmpsb
dec
aas
xor
jo
fwait
or
push
sbb
cld
dec
icebp
inc
imul
movsl
add
int
lods
mov
mov
test
mov
fwait
loop
add
cmp
mov
pop
ror
sti
mov
fsubrl
fsubrl
shll
add
xor
mov
xor
pop
sbb
icebp
mov
jg
cwtl
push
sbbl
inc
sbb
cmpsb
mov
rcrl
sub
ljmp
pop
push
xchg
popa
fs
xor
lcall
mov
and
mov
pop
or
add
call
adc
jns
outsb
orl
lods
enter
test
inc
and
ret
lret
mov
push
add
pop
cmp
jg
fwait
xchg
lods
cmp
std
and
add
inc
and
nop
cld
inc
adc
sbb
outsl
out
push
lret
daa
sub
idivl
xor
lock
inc
pop
ror
scas
mov
pop
inc
push
mov
movl
sbb
xchg
cmp
pushl
movsb
jbe
lods
and
stc
test
sahf
adc
mov
sbb
iret
xchg
lock
jno
and
insb
scas
sahf
pushf
enter
in
mov
movsb
mov
xchg
inc
aaa
js
add
in
or
sub
int
cld
and
stos
pop
aas
lock
shlb
or
in
aaa
divl
cmp
ljmp
sbb
xor
jno
pop
mov
xchg
pop
adc
fadds
mov
in
push
pop
jbe
and
je
or
xor
aaa
push
int3
popa
or
fdiv
sti
xchg
sbb
jne
ljmp
cmc
push
inc
inc
jmp
arpl
cs
mov
sub
xchg
xor
dec
cmpsb
mov
and
in
fsubl
jnp
pop
mov
stos
stos
mov
testl
ljmp
pop
negl
imul
or
inc
jnp
jne
loopne
ret
xchg
stos
mov
shrl
cmp
aaa
add
movsb
sub
push
push
adc
ss
xor
or
jle
loop
jnp
sbb
or
outsb
in
out
sbb
or
jno
jmp
dec
jl
mov
and
pop
adc
rorl
dec
iret
pop
xor
adc
fdivrl
mov
adc
lea
fcom
arpl
outsl
stos
sbb
movsb
mov
leave
pop
mov
inc
clc
dec
repnz
mov
gs
jns
cltd
in
xchg
mov
or
iret
dec
hlt
xor
pusha
xlat
std
test
jle
cs
dec
push
aas
push
call
lcall
pop
out
or
lret
sbb
mov
jl
in
lds
rolb
ds
jg
fs
imul
test
sbb
ja
jb
inc
dec
test
jb
xor
outsl
push
xchg
hlt
clc
mov
fiadds
aaa
add
cmp
sub
aas
jmp
push
pop
es
dec
mov
negb
rolb
push
mov
inc
int
dec
mov
lods
bnd
movsb
lods
sub
roll
mov
lahf
sub
filds
popf
pop
and
neg
add
dec
inc
push
dec
out
jl
out
out
ret
mov
lea
mov
fimull
mov
jmp
add
add
cmp
scas
mov
pushl
movsl
sbb
les
push
dec
jo
xchg
xchg
sbb
ljmp
jnp
notb
dec
mov
pusha
sbb
mov
movsb
jae
es
adc
sub
jbe
clc
pop
adc
sbb
ljmp
icebp
enter
jecxz
pop
std
xor
fs
pop
repnz
fidivrs
enter
adc
mov
sbb
mull
jl
pop
pop
lods
xchg
push
sub
inc
pop
lea
dec
gs
cmp
inc
sub
repz
call
push
add
cmp
into
cmp
pop
dec
jp
loopne
cmp
adc
sti
jb
divb
adc
imul
pushw
in
xchg
notl
add
sti
negl
inc
sbb
out
xorl
cmpl
enter
pushf
mov
or
jle
mov
adc
cmpsl
jae
xchg
sub
xchg
mov
sub
pop
add
adc
mov
psubsw
add
lahf
xchg
gs
push
fs
jne
mulb
dec
or
insl
aad
mov
and
outsb
mov
jae
lds
scas
add
sub
pop
ja
cmp
xorl
sbb
push
add
dec
add
adc
inc
mov
in
add
pop
jno
das
sbb
jo
or
mov
cmc
cs
and
xor
or
and
dec
xchg
mov
leave
pusha
mov
cwtl
stc
jno
ss
xor
and
sbb
imul
and
mov
sbb
out
jg
repnz
testb
cltd
mov
ja
outsb
inc
sbb
lret
xchg
stc
popf
arpl
or
pusha
dec
push
lds
shlb
imul
movsl
stos
pop
fbld
mov
or
xchg
sahf
pop
dec
faddl
jnp
sarl
popf
and
pop
lds
add
push
sub
push
mov
mov
push
ds
lods
pop
xor
cld
imul
ret
imul
jb
mov
mov
fwait
mov
fiaddl
sbb
fidivs
mov
mov
or
xchg
mov
mov
sar
pop
or
sbb
sub
test
inc
imul
cld
fidivrl
push
xchg
push
lret
xchg
xor
mov
pop
lcall
repz
jne
xchg
mov
add
jo
xchg
arpl
or
imul
leave
insl
inc
bound
lcall
popf
shr
dec
fidivs
lods
jg
cmpsb
and
xlat
arpl
js
nop
jg
mov
jno
mov
or
mov
sub
loope
shl
idivb
aas
aam
cmc
cmp
mov
mov
pop
insl
sbb
or
cmp
mov
adc
mov
push
sarl
adc
pusha
mov
xchg
enter
inc
ljmp
repnz
adc
xchg
cli
inc
cmp
sahf
mov
cltd
sbb
dec
movsb
imul
sbb
xchg
mov
scas
pop
add
push
cmp
push
push
jle
and
sbb
mov
aad
cmp
out
mov
aam
stos
xor
mov
enter
das
jo
jns
cmp
imul
cwtl
and
js
inc
sbb
cld
adc
xor
hlt
cmpsl
push
test
lock
mov
or
mov
pushf
mov
jbe
push
jns
lods
test
adc
lahf
push
xor
add
jge
lds
adc
inc
push
addr16
out
enter
pop
mov
xor
shl
into
cmp
data16
mov
das
pushf
xchg
in
sti
lods
pushf
test
dec
pop
pusha
outsl
subl
fnstsw
adc
adc
lea
arpl
sbb
jmp
popa
into
xchg
in
mov
es
scas
mov
scas
jmp
faddl
jno
clc
sub
cld
jp
or
std
movsl
data16
mov
cmp
cmp
and
mov
jno
sbb
enter
inc
das
sbb
scas
xchg
pop
out
pop
outsb
leave
pop
imul
std
mov
xor
popa
and
sub
mov
and
inc
insl
shrb
sub
mov
std
and
and
jge
fs
or
or
pop
cmp
gs
cmpsl
testb
or
outsb
pop
mov
jae
jbe
les
mov
arpl
cld
outsl
mov
and
inc
rcll
aaa
mov
dec
test
pop
test
je
pop
dec
loop
and
push
ret
and
das
outsl
clc
fidivl
inc
add
and
adc
loope
shll
and
fstl
inc
xchg
adc
xor
sbb
int3
push
cmp
sbb
hlt
sbb
outsb
ja
push
xchg
arpl
adc
cmpl
sti
push
mov
gs
clc
and
sub
in
mov
and
jno
cmp
xchg
mov
cmp
fsubl
dec
jbe
jno
inc
clc
mov
test
enter
imul
push
sbb
movsb
pop
adc
rcl
sbb
jnp
mov
mov
fidivrl
jp
dec
shlb
push
xlat
push
adc
cmc
add
push
stc
adc
or
call
pop
push
stos
outsb
dec
shll
in
jg
push
lea
out
cmpsl
testl
sub
mov
cmp
inc
lock
mov
inc
repnz
pop
xchg
inc
add
pop
dec
scas
add
jo
mov
mov
mov
mov
push
dec
lds
sub
xlat
jge
bound
std
mov
shlb
mov
in
push
xor
gs
pop
ss
rcll
push
lcall
das
sbb
inc
out
inc
dec
lods
jp
loopne
jo
std
xchg
pop
stc
scas
testl
sbb
out
popf
push
or
in
add
xchg
inc
jp
mov
into
push
xor
fdivl
mov
jmp
dec
inc
pop
lods
mov
in
nop
in
mov
mov
out
jns
push
jg
mov
push
loope
xchg
out
popf
xor
not
or
imul
ret
outsb
dec
jae
in
mov
push
xchg
inc
repnz
adc
or
ds
fwait
stos
enter
loope
jbe
or
pop
mov
mov
dec
sbb
test
jle
clc
add
jnp
pop
cmc
dec
mov
jp
pcmpgtb
jnp
mov
adc
xchg
xlat
cltd
sub
mov
jmp
cmp
xor
call
icebp
stc
loope
loop
cmpsb
fistl
sub
sbb
inc
or
ss
cmpsl
test
pushf
or
dec
mov
aas
roll
fwait
mov
aaa
les
sar
in
jmp
clc
dec
push
pop
movsl
fs
test
inc
cmp
add
xor
in
aad
dec
xor
xchg
out
insl
dec
pop
dec
mov
mov
enter
lcall
sbb
jg
scas
jp
mov
pause
mov
mov
lock
loop
icebp
adc
pop
sbb
or
popa
or
push
pop
or
mov
or
mov
dec
xchg
mov
push
jle
sbb
pushf
sti
lods
sbb
push
cmc
push
out
mov
loop
in
mov
in
pusha
sub
xchg
int
inc
mov
xchg
cmp
iret
test
scas
xchg
in
jb
jmp
pop
jmp
pusha
clc
aam
imul
dec
aam
xor
mov
jae
popf
adc
shlb
rcrb
imul
sbb
repnz
pop
in
fwait
mov
out
lds
iret
jb
addl
movsb
push
js
mov
lret
add
adc
fisubrl
or
sbb
fnstsw
movsl
int3
insb
fcmovnbe
scas
push
cmc
jg
into
dec
push
push
jp
sub
mov
sbb
shl
test
xchg
cld
or
cld
mov
imul
lods
mov
lahf
int
addr16
push
roll
les
outsb
outsl
or
mulb
mov
adc
scas
sbb
cmp
add
jg
daa
or
rcrl
mov
jge
outsb
imulb
repz
imul
cli
test
repnz
inc
fldcw
dec
xor
inc
in
jo
insb
xlat
pop
and
inc
adc
xchg
inc
sbb
aad
enter
jo
lock
push
sub
shll
sbbb
push
sub
sbb
outsb
std
pop
jmp
adc
adc
jo
popa
pop
movsl
push
xchg
and
subb
js
mov
pop
inc
icebp
out
fcmovu
or
pop
and
stos
mov
mov
sahf
push
push
dec
mov
and
loope
lcall
xchg
call
mov
jl
inc
shl
das
sbb
lret
pop
fnstenv
in
cmpsb
cli
mov
xor
jne
jno
and
dec
adc
pusha
fwait
inc
or
sub
or
mov
lret
dec
jl
out
push
rcrb
sub
lcall
sbb
stos
shll
subb
arpl
xchg
sub
or
cwtl
add
push
std
adc
inc
mov
jl
lock
cmp
emms
inc
and
or
mov
stos
sbb
push
lea
mov
push
xor
inc
pop
mov
push
lds
and
jg
nop
ffree
and
mov
lret
icebp
shll
sbb
add
in
jae
inc
inc
jecxz
test
lock
mov
mov
pop
push
inc
sub
lahf
fcomi
inc
cmc
out
fldl
mov
shrb
loope
push
jmp
xlat
aas
or
imul
inc
jmp
mov
xchg
outsb
dec
sbb
or
incb
imul
movsl
push
scas
push
das
xor
dec
lods
mov
and
adc
imul
loope
dec
imul
cwtl
data16
pop
lcall
xchg
clc
mulb
cmp
sahf
aam
movb
outsl
pop
movntq
out
cmc
push
push
call
push
aaa
jnp
movsb
testb
lods
adc
and
mov
cwtl
cltd
cmp
lret
addb
dec
cmp
imull
mov
insb
dec
cs
push
lret
jp
pop
mov
jl
in
je
ffreep
push
inc
sahf
jge
in
sub
out
je
hlt
xchg
out
shl
adc
lahf
mulb
enter
add
mov
mov
dec
xchg
push
shl
sub
clc
sub
lds
sbb
loop
movsl
dec
mov
daa
cmp
mov
jmp
lea
dec
leave
cltd
add
adc
push
or
lret
fsubl
sub
cs
movsl
lds
aad
pop
scas
ds
enter
cmp
inc
into
add
ds
adc
add
mov
and
pop
stos
push
dec
dec
xlat
mov
mov
and
mov
dec
fs
mov
mov
rol
sti
jp
ds
gs
loope,pn
faddl
aad
es
aaa
insl
pusha
xchg
xchg
loop
or
cmp
pop
push
mov
mov
daa
addr16
dec
mov
or
das
out
imul
inc
mov
stos
loope
ffree
xor
adc
and
xor
sub
test
inc
ljmp
xor
inc
shlb
jnp
vpmuludq
pop
dec
es
inc
stos
aam
jo
mov
loopne
and
push
push
cmp
lea
cwtl
or
push
and
scas
inc
jle
iret
lods
ja
cld
dec
xor
xlat
sub
pushf
popa
lods
pop
jno
sbb
mov
adc
xor
lcall
xor
pushf
and
sahf
jmp
xchg
jbe
loopne
jle
cwtl
test
addr16
pop
jne
sbb
xor
ljmp
mov
dec
rcll
rsm
jl
sub
and
insb
adc
add
xor
pop
sahf
cld
jp
hlt
test
inc
pop
jmp
push
mov
jge
imul
dec
in
cmc
mov
imul
xor
jne
cli
testl
sbb
and
xchg
jmp
popf
xchg
mov
dec
jbe
or
movsl
mov
push
scas
push
sbb
out
imul
mov
add
ror
add
xchg
ss
iret
lods
jbe
into
imulb
mov
pop
sub
imul
sbb
je,pt
movb
adc
jmp
sbb
aam
mov
inc
push
enter
jb
inc
xor
insl
sub
fstp
push
movsb
add
push
aas
jl
and
push
and
pop
mov
xchg
lcall
stos
repnz
iret
pop
mov
pusha
int
pop
push
mov
lcall
push
push
mov
enter
xor
jae
fsts
insb
pop
mov
or
sub
testb
stc
fisubs
js
sub
dec
xchg
pop
gs
sti
mov
ret
out
in
sub
jo
arpl
fcoml
push
aaa
push
push
or
std
xchg
into
icebp
sti
dec
xor
add
sub
roll
jecxz
xor
pop
js
mov
movsb
movsb
aad
inc
dec
or
mov
leave
fdivs
lcall
jg
gs
fs
add
out
inc
adc
xor
scas
imul
lods
pop
jmp
lds
int
sub
out
add
call
movsl
lods
xchg
bound
xchg
call
add
lock
sub
mov
lcall
and
sub
in
add
xchg
jmp
lds
mov
cmpsl
jecxz
aaa
lods
jg
mov
bound
fstl
dec
dec
sub
mov
mov
jb
js
test
xchg
daa
loopne
arpl
pop
std
xlat
jae
dec
call
mov
ret
stc
jp
jo
sahf
sub
test
out
sub
xchg
sahf
mov
cmpl
test
icebp
or
popf
test
addr16
mov
or
pop
mov
popa
add
jo
sbb
jbe
sub
xor
adc
inc
cmpsl
stc
jae
je
loop
mov
dec
sub
push
lret
test
sbb
idivl
sbb
sub
xorb
fs
inc
shl
repnz
pop
pop
lock
shrb
or
test
daa
cmp
pop
pop
adc
dec
stc
push
jg
nop
cmpl
mov
and
mov
adc
jo
insb
dec
decb
in
sti
loopne
sub
rcrb
sarl
dec
jp
subb
lds
pop
outsb
push
loope
dec
cmpsb
lods
test
pop
stos
pop
sbb
mov
cmp
and
lds
mov
ret
cltd
lret
sub
cmp
push
xchg
int
iret
test
pop
push
adc
arpl
stos
jb
xor
adc
mov
pop
add
xchg
bnd
lods
mov
mov
inc
or
jb
xchg
in
xchg
outsb
popf
jno
push
xchg
xchg
xlat
ficoms
adc
jne
das
out
cmp
pop
cmc
cmp
cmp
pop
mov
push
adcb
mov
sahf
push
adc
push
dec
sahf
dec
in
movsl
mov
xor
jecxz
pop
sub
sbb
jecxz
flds
dec
and
ljmp
stos
scas
icebp
cld
rclb
out
mov
push
add
cmp
fldt
sub
mov
dec
popf
in
enter
ss
xor
inc
cmp
and
insl
sbb
scas
stc
sbbl
cmp
lods
xchg
xor
inc
sbb
push
xlat
inc
cmp
mov
and
mov
push
push
push
xor
cli
dec
das
add
out
push
adc
lret
jo
sbb
repnz
cli
jbe
sbb
mov
movsb
adc
mov
fs
inc
das
out
ds
dec
addr16
pop
in
frndint
lea
mov
test
divl
push
aaa
pop
mov
cmp
cmp
das
push
fs
fisttpl
jmp
enter
and
jne
je
fiadds
std
andl
push
xchg
mov
cmp
popa
aaa
stc
jp
jmp
ret
fidivs
aaa
jnp
and
cmpsb
fcmovbe
jge
insb
cmp
jae
in
loope
or
push
push
data16
sbb
pushf
mov
js
push
pusha
adc
sbb
shll
mov
int
xor
movb
in
lods
cmp
sbbl
pop
mov
scas
adc
imul
xchg
and
aad
sbb
dec
pop
push
push
stc
mov
pop
call
out
jb
xchg
mov
push
push
jl
mov
stos
std
xchg
or
aad
aam
lret
mov
jo
je
adcb
dec
fnstcw
movsl
leave
cwtl
jbe
cli
mov
fwait
dec
pushf
add
mov
fldenv
in
pop
push
inc
dec
push
xor
mov
icebp
sub
std
mov
loop
mov
test
push
cmpsb
dec
mov
lcall
imul
lock
lea
js
xor
xor
cmp
pop
imul
shr
xchg
and
mov
int3
mov
ds
pop
ljmp
rol
push
imul
lahf
fucomip
pop
les
das
or
sarb
popa
mov
or
add
inc
bound
add
jae
lret
cvtpi2ps
xchg
mov
cmp
aam
mov
scas
push
push
or
not
mov
imul
push
imul
loope
and
fcomps
mov
mov
divb
jmp
inc
cmp
mov
inc
xchg
jecxz
in
fistps
xor
inc
xchg
rcr
test
fdivrl
insb
mov
push
mov
stos
inc
cs
add
jne
lret
mov
sub
and
ljmp
push
lods
rclb
push
mov
jbe
or
ss
push
dec
rcl
test
dec
out
lods
dec
xchg
fistpll
push
pop
mov
lcall
xchg
pop
sub
push
rorl
mov
xchg
jne
jnp
stc
or
pop
call
mov
cmp
push
lret
or
adc
mov
inc
in
loope
clc
fwait
cmp
leave
std
in
movsb
mov
dec
jae
push
add
out
pop
push
rcl
pushf
xchg
roll
or
call
add
mov
lea
inc
pop
repnz
loop
lock
pop
nop
or
xchg
xor
mov
push
xorb
push
clc
xchg
xchg
sbb
movsl
lock
filds
sar
adc
mov
test
sub
mov
ss
imul
mov
jo
fwait
mov
pusha
into
adc
jbe
mov
or
pushf
pop
xchg
push
fnstcw
or
int3
dec
clc
iretw
test
mov
icebp
fmuls
icebp
xor
stos
shrl
data16
nop
xchg
mov
shrb
add
xchg
fwait
jecxz
lea
out
pop
pop
sub
adc
sub
sub
icebp
cs
mov
cwtl
lods
enter
mov
repz
fwait
movsl
or
cwtl
push
scas
sub
in
psllw
data16
cs
gs
mov
push
sbb
sbb
cmc
sbb
push
xchg
test
sbb
mov
and
clc
lret
sbb
loope
pushf
pop
mov
lret
adc
jne
aas
imul
outsb
and
pop
push
dec
add
out
push
mov
popa
sub
sar
lods
scas
iret
repz
push
in
mov
scas
mov
aaa
ret
std
roll
ret
fs
pusha
repz
pusha
push
sub
hlt
push
pop
push
mov
out
movb
mov
push
pop
mov
xchg
imul
pop
dec
sarl
lods
add
xor
mulb
mov
outsl
bound
sub
in
mov
int
mov
arpl
jbe
movsl
xlat
insb
mov
push
outsl
lods
xchg
adc
mov
mov
data16
jno
sbb
jbe
and
adc
cmp
cs
or
pop
pop
test
mov
test
sbb
dec
sbb
pop
fwait
jns
shrd
pop
fmul
jo
push
jecxz
push
pop
mov
xchg
inc
cli
pop
dec
std
sbb
iret
popf
push
inc
lods
pop
or
nop
mov
jo
add
cmp
add
add
pop
mov
lock
push
add
jae
aam
inc
xchg
pop
push
std
mov
adc
mov
xchg
inc
jecxz
or
mov
outsl
or
stos
xchg
addr16
stos
popf
push
and
shll
xchg
jno
push
bound
fadds
stc
jo
aaa
inc
imulb
mov
repnz
repnz
data16
xor
xorb
and
xchg
sbb
add
dec
push
and
inc
int
scas
jmp
sbb
lock
mov
fbld
cmp
bound
popf
jno
mov
xor
mov
cli
insl
inc
mov
jl
inc
mov
test
jbe
pop
jecxz
jnp
outsb
fsts
xor
js
xor
idivb
cwtl
inc
js
imul
dec
or
cmpsl
pop
mov
adc
pop
sbb
clc
out
and
jo
jae
push
mov
das
dec
cmp
adc
lret
dec
and
lret
dec
mov
nop
sbb
xor
xchg
cmp
scas
scas
jnp
mov
pop
inc
lret
push
ja
subl
xchg
insl
and
or
push
ficompl
pop
aam
mov
cmp
imul
mov
pop
or
mov
lods
stos
sub
mov
xchg
mov
or
cmp
pop
jo
stos
mul
cld
into
pop
xchg
cmp
mov
int3
or
adcl
adc
div
dec
lret
icebp
test
jae
ja
or
dec
shll
outsb
lds
fldpi
jnp
test
outsl
ljmp
roll
xchg
and
or
jae
and
bound
cmp
outsb
orb
pop
ss
loopne
push
pop
pop
test
and
jg
ret
mov
in
and
mov
xchg
jmp
loopne
cs
pop
xchg
mov
dec
add
ds
dec
jne
mov
push
int3
push
jo
and
mov
arpl
xchg
leave
mov
test
subl
testl
jl
jecxz
push
jo
loope
iret
jbe
xor
popa
xlat
in
js
movsb
inc
jecxz
fs
xor
mov
jp
mov
xchg
mov
cwtl
mov
lret
sbbl
dec
es
or
adc
in
push
in
movsb
pop
fs
xchg
adc
xor
mov
dec
jge
mov
jmp
sub
ret
dec
pushf
ss
and
insb
ja
mov
sub
into
cmp
sub
stos
in
outsb
add
xor
outsl
push
mov
mov
in
lods
stos
add
push
cs
jmp
lret
outsl
test
cmp
scas
xchg
xchg
loopne
jg
and
mov
sub
jg
and
ret
arpl
test
push
out
lcall
lret
jne
cmp
inc
addr16
jne
lods
sbb
lock
cmpsb
scas
or
push
outsl
xor
adc
ficomps
dec
fnstcw
add
negb
mulb
and
cs
lahf
mov
cmp
in
das
adc
jle
ficoms
mov
cltd
inc
xchg
negl
jmp
and
jb
ret
jg
aaa
mov
fisubl
xchg
or
adc
inc
fsin
jmp
pop
in
popa
insb
push
mov
mov
stos
aas
cmp
pop
jmp
cmpsb
push
sub
ficompl
sbb
je
shlb
xchg
movl
sbb
cmpsl
mov
xorb
jb
xchg
mov
cmp
in
xchg
in
fs
and
cmp
out
pop
shll
cmpsl
imul
shrb
adc
cmp
push
and
data16
scas
mov
sbb
xchg
jl
and
and
pop
pop
ret
dec
cmp
into
das
sbb
push
imulb
repz
mov
sub
insb
les
mov
cmp
dec
pop
mov
cmp
rcll
and
ret
scas
xchg
fucomp
ja
icebp
scas
movsb
cmp
das
dec
mov
pop
mov
call
mov
cmc
aas
push
dec
pop
push
dec
mov
xchg
arpl
xchg
mov
adcb
lods
push
cli
cltd
nop
mov
mov
fisubrl
pop
pop
fimull
jge
mov
pop
pop
hlt
push
dec
lcall
mov
mov
les
into
imulb
pop
aaa
aad
sbb
jecxz
jl
int3
shr
mov
fmuls
inc
test
mov
jg
aad
cwtl
lods
arpl
mov
push
mov
insb
movsb
movsl
add
or
test
cs
out
enter
cwtl
rcr
addb
mov
scas
imul
out
mov
scas
xchg
mov
test
dec
cmp
xchg
adc
jne
pusha
xor
mov
pop
push
xor
mov
rclb
cmpsl
rcll
test
std
mov
fimull
adcl
mov
aaa
movsl
xor
mov
sbb
pop
mov
leave
incb
out
adc
push
in
jge
or
adc
or
flds
adc
xor
pop
sahf
inc
in
std
sub
popf
or
gs
aas
xor
cwtl
pop
mov
imul
push
imul
dec
dec
mov
mov
lock
push
aad
cli
dec
cs
hlt
fxch
adc
lahf
leave
out
mov
fstps
xor
sub
stc
mov
std
mov
out
and
jmp
stos
xchg
add
cwtl
and
jbe
outsl
out
rol
mov
jle
cmc
or
cmp
pop
jmp
add
jg
mov
adc
pop
mov
popf
or
pop
cmpsb
push
lds
stc
test
dec
adc
pushf
adc
shll
dec
pushf
sbb
addr16
shrl
pusha
cmp
cmp
sub
test
int3
sub
inc
cmp
out
imul
scas
jmp
add
cwtl
idivl
or
mov
push
push
mov
mov
sbb
fwait
aad
pop
mov
stos
lret
shrl
mov
enter
lds
bound
shlb
addl
ja
inc
imul
mov
aaa
fisubrl
xchg
mov
xchg
pop
enter
std
sbb
nop
sbb
sub
jne
enter
pop
or
inc
pop
jge
clc
gs
dec
notb
imul
hlt
or
and
popf
adcl
sahf
dec
outsb
adc
ds
decl
or
inc
cmpl
and
xchg
pushf
push
inc
adc
mov
and
in
orb
add
push
aas
and
gs
outsb
cmp
mov
and
mov
mov
inc
shr
mov
and
inc
loope
dec
push
push
pop
or
hlt
mov
mulb
fsubrp
add
or
or
inc
cmp
cltd
outsl
leave
xchg
pushl
xor
sub
inc
int
lock
xor
mov
cltd
or
push
cmp
or
add
sub
jp
dec
xchg
mov
fs
in
ss
mov
push
shrl
add
jnp
or
pop
dec
inc
inc
ret
iret
mov
jne
sub
inc
push
jb
insl
and
cltd
lahf
add
ja
icebp
mov
dec
lods
imul
inc
xor
fcompl
lods
mov
mov
stos
in
mov
jno
cli
mov
mov
or
insb
jb
lahf
push
ret
add
mov
mov
inc
lahf
xchg
loope
lock
cmp
repz
jle
inc
add
divb
movsb
out
inc
and
push
in
andl
rcrl
pop
test
dec
jnp
loop
bound
fsub
test
or
xchg
or
sarb
loope
mov
jno
cli
stos
mov
mov
mov
test
cmc
icebp
test
bound
sub
insl
test
add
adc
mov
pop
mov
aas
lods
cmp
jl
xor
mov
aas
repnz
mov
insl
push
add
popa
loopne
adc
addl
outsb
cwtl
rcll
adc
pop
lods
mov
push
ret
cli
pop
dec
aam
std
in
mov
jne
pop
cmpsl
fdivrs
mov
ficoms
imull
pop
push
popf
xchg
rcll
in
mov
popf
xor
add
test
xor
out
dec
or
iret
or
repnz
stos
pop
mov
movsb
jno
inc
push
jbe
out
test
in
add
adc
hlt
jb
or
rorl
movd
add
in
ja
rcll
daa
std
jge
adc
sub
ret
push
sub
inc
xrelease
xor
mov
lods
xchg
mov
mov
aas
es
inc
mov
sahf
cmp
dec
dec
cltd
jb
test
mov
jecxz
mov
xchg
mov
mov
sub
dec
daa
incb
outsb
pop
and
adc
fnsave
popa
mov
adc
rorb
outsl
push
and
jb
xor
dec
out
aas
push
data16
call
std
rcrb
in
hlt
sbb
push
sarl
adc
cwtl
jle
add
rorb
lcall
pop
lods
and
and
xlat
cmp
mov
movsl
cmp
sub
fs
bound
push
xorb
inc
ficoms
xor
jmp
adc
fisubs
cld
pop
pop
int
outsb
or
fnstcw
and
fs
mov
sub
jne
adc
xchg
jno
lcall
jae
push
int
mov
push
into
cwtl
inc
xchg
pop
lret
inc
clc
dec
xor
movsb
fdivrs
mov
sbbl
vpunpcklbw
int3
or
ror
lock
and
int
in
dec
pop
ret
or
inc
sub
test
je
es
add
sahf
ret
aaa
inc
jg
daa
adc
sarb
call
dec
xchg
ret
shll
stc
dec
into
pop
test
in
test
cmp
push
test
mov
repz
sar
mov
ret
jg
jl
idivl
inc
mov
mov
div
into
push
sbb
movsb
mov
mov
mov
mov
fwait
jmpw
cwtl
test
mov
pop
push
cmp
pop
pop
fistpl
sub
mov
imul
jmpw
ret
idivb
lret
jbe
and
adc
cli
ffreep
jnp
sub
sti
pusha
xchg
pop
gs
sub
cld
pop
iret
movsb
mov
mul
pop
xor
sub
lock
push
jg
dec
std
mov
or
shrb
mov
and
lock
xchg
add
icebp
push
outsl
mov
jle
jae
mov
and
inc
mov
pushw
mov
add
sbb
test
cs
test
or
xor
xor
dec
into
sbb
les
mov
inc
xchg
cmp
ljmp
arpl
push
pushf
int3
and
jle
nop
nop
cmp
ret
std
sarb
sub
lea
aas
xchg
xor
cwtl
mov
mov
mov
js
cmp
dec
test
cltd
push
mov
adc
jbe
outsl
loop
in
pop
fistpll
aas
lcall
xor
push
aas
gs
pop
sbb
xchg
adc
inc
sti
mov
mov
inc
les
lock
xchg
loop
xor
jecxz
imul
outsl
and
int3
or
inc
int
je
sbb
movsb
div
mov
cmp
sahf
rolb
jp
push
in
cmc
push
push
cmp
lock
out
ljmp
data16
jnp
aam
mov
daa
loope
mov
inc
xor
sbb
pushf
ret
clc
cld
leave
inc
in
shl
cmpsb
sbb
stos
aam
ss
pop
xlat
jmp
mov
cmp
in
inc
jg
or
popf
xor
inc
mov
mov
and
inc
subb
mov
sbb
cmp
jmp
mov
test
mov
cmpsb
cmp
mov
adc
push
add
mov
xchg
push
daa
out
rcrb
sub
add
mov
data16
in
xchg
test
pop
lds
inc
cmp
xor
das
test
out
sarl
xor
sbb
into
pop
and
stos
and
push
out
cmc
fidivrs
fsub
out
sub
in
sahf
xor
cmpsb
fistps
push
in
aaa
rcrb
inc
mov
hlt
cs
mov
rorb
rcll
lods
outsb
aad
repnz
add
push
mov
lods
int3
pop
jnp
jns
gs
pop
dec
dec
mov
mov
mov
mov
xchg
in
clc
mov
mov
in
ss
sbb
lcall
push
push
sbb
sbb
push
add
xlat
or
les
xor
mov
mov
xor
sub
add
imul
imul
dec
mov
jbe
pop
pop
or
pop
out
mov
sahf
cmc
inc
add
dec
add
fs
idivl
arpl
lods
add
in
or
movsb
sub
daa
imul
fcomp
popl
sub
insb
jne
inc
cld
xor
jmp
mov
sahf
sbb
dec
and
pop
xor
xorb
loop
mov
mov
fiadds
inc
int3
movsb
inc
mov
xor
xchg
mov
mov
cs
adc
push
lods
fnstsw
ret
adc
lods
jg
sbb
dec
aaa
outsb
cmp
mov
pop
testl
int3
sbb
lcall
popa
mov
sbb
add
in
lsl
mov
fwait
aad
lods
jae
mov
dec
and
push
testl
andb
repz
mull
insb
sbb
lahf
insb
sub
adc
insl
sub
fs
or
push
test
mov
mov
jb
jp
add
mov
add
bound
imul
in
sub
shl
add
add
lahf
and
jmp
shrb
jecxz
adcb
add
mov
xor
out
outsl
popf
inc
dec
xchg
pop
mov
pop
or
cmp
lahf
lahf
es
aad
jmp
mov
xor
mov
in
lea
dec
mov
rclb
rorl
out
int
test
cld
jmp
and
add
pushf
and
and
roll
stos
mov
pop
or
and
pop
inc
loop
out
adc
xor
mov
pop
das
sti
mov
sbb
cmpsb
xchg
pop
dec
add
lea
jnp
mov
andb
sub
int3
push
cmpsl
test
fwait
xchg
shll
sub
jl
xor
or
stc
push
mov
sbb
mov
jo
inc
jle
enter
out
pop
sbb
push
mov
and
outsb
leave
push
xchg
xor
and
aad
cli
repz
roll
arpl
or
ljmp
push
jg
xchg
hlt
inc
negl
and
xchg
jge
cmp
loopne
xchg
int
mov
sub
or
imul
and
dec
xchg
insl
stc
xchg
jl
subl
ljmp
fiadds
stos
lods
dec
adc
fsin
adc
and
adc
mov
in
sbb
xchg
arpl
outsb
in
mov
pop
rcr
pusha
imul
push
out
add
mov
mov
xchg
mov
sbb
jmp
push
mov
or
dec
or
pop
adcl
and
jecxz
movsb
and
push
and
pushf
mov
sbb
hlt
sarb
pop
add
push
ljmp
fucomp
mov
jo
add
push
mov
aaa
movsb
xor
jns
mov
push
pop
cmp
aam
xor
test
inc
movsb
sbb
rolb
fmull
es
dec
sbb
out
in
or
mov
mov
pop
movb
call
loope
inc
adc
push
cwtl
fstl
sbb
rcrl
subl
mov
push
dec
xor
pop
pop
push
push
dec
dec
lea
lods
add
sbb
roll
and
popf
in
push
jo
pop
lret
xchg
pop
and
stc
test
mov
sub
pop
ret
aam
dec
sti
jge
mov
orl
test
jae
and
lret
daa
mov
push
fstp
mov
les
xor
das
mov
cmpsl
adcl
xchg
in
insl
nop
jl
sub
mov
adcb
inc
enter
jne
sar
or
mov
pushf
xor
xchg
cwtl
pop
push
sbb
jecxz
push
dec
push
jne
es
adc
xchg
ds
jbe
vcvtss2sd
sti
cli
mov
dec
aas
sbb
dec
and
test
mov
sub
lock
mov
shrl
add
pop
mov
mov
jl
mull
xchg
push
push
jecxz
rsm
lcall
add
mov
pop
jge
or
mov
mov
outsl
out
mov
jg
shrb
cmp
jg
inc
sbb
add
lock
xor
mov
hlt
cmp
bound
push
cltd
mov
test
jnp
sub
inc
fisubrs
arpl
and
fstpt
ss
sahf
arpl
cmp
xchg
fdiv
lret
push
dec
jo
sub
push
jo
adc
out
mov
cmp
fnsave
sarb
js
xchg
mov
push
mov
dec
sub
add
mov
in
jle
jle
aas
xchg
xchg
xchg
loop
mov
or
cmc
outsb
ljmp
pusha
sbbb
inc
sti
gs
lret
push
es
fcomip
in
insl
mov
in
xchg
jg
xor
lods
xchg
jp
or
pop
insl
jl
mov
aad
mov
jge
xor
mov
mov
cmpsl
hlt
sub
adc
or
lret
leave
aam
je
and
xchg
mov
ret
pop
lahf
aas
dec
stos
test
leave
mov
loop
pop
push
ret
rcll
mov
dec
fsubrs
inc
inc
xchg
adc
outsl
lahf
mov
je,pn
pop
and
rcr
adc
sub
fdivrl
outsb
or
jnp
xchg
and
ds
xchg
popa
fldl
xor
sub
adc
sbb
lods
addr16
and
jb,pn
clc
test
out
pop
nop
imulb
lret
dec
les
test
rolb
inc
push
pop
pop
push
mov
xlat
lods
daa
add
cmpsb
fistps
dec
xchg
gs
push
into
das
insl
or
fwait
mov
mov
add
add
mov
daa
add
add
push
ljmp
mov
incb
push
scas
pop
xchg
lahf
hlt
push
jns
jmp
dec
stos
xchg
inc
decb
outsl
mov
imul
xor
cmp
inc
xchg
mov
lods
adc
or
mov
push
pop
push
popa
pop
cmp
aam
mov
ret
push
dec
cmp
roll
sub
cmpb
scas
cmp
pop
pop
adc
cmc
inc
lods
lea
inc
js
xchg
iret
inc
adc
stos
jecxz
adc
add
xchg
dec
mov
pop
xor
sub
xorl
enter
bound
pop
scas
mov
clc
aad
and
jecxz
add
jecxz
pop
dec
cmp
or
js
mov
fsubrs
inc
adc
push
out
js
dec
mov
inc
pop
imul
cmp
in
fstl
sub
mov
inc
mov
adc
push
sbb
cmpsl
push
xchg
dec
mov
ret
mov
inc
pop
pop
add
lret
cmpsl
adc
addb
lods
insb
adc
popa
xlat
pop
enter
mov
push
cld
dec
sbb
mov
push
popf
push
mov
and
out
imul
mov
sbb
sbb
loopne
les
addr16
dec
mov
jle
sub
or
push
sub
das
xchg
mov
sub
jbe
inc
mov
pop
mov
pushf
pop
pop
inc
add
dec
mov
xchg
pop
ja
in
dec
fs
mov
xor
cwtl
push
jns
xor
sub
push
push
adc
repz
xchg
xchg
packuswb
ds
lds
shrl
js
ret
inc
js
jmp
mov
sub
adc
in
addr16
pusha
popf
inc
xor
xor
iret
shll
sub
push
out
jge
jne
inc
loop
sub
mov
mov
pop
xchg
xchg
in
add
imul
xchg
das
or
pop
jbe
xchg
repnz
aad
popa
dec
nop
xor
aam
xor
repz
dec
mov
sub
and
pop
inc
push
mov
pop
rolb
jge
xor
pop
into
mov
pop
imul
jno
or
xchg
mov
in
xor
inc
dec
mov
inc
insb
in
push
cld
les
cmc
lods
mov
rclb
push
cmp
cmpsl
lock
jge
xchg
mov
fcoms
ljmp
out
mov
or
xlat
int3
out
mov
pop
cmpsb
adc
repnz
push
sbbl
mov
sti
mov
jne
pushf
aam
ja
mov
adc
lcall
stos
cmp
cmp
add
xor
div
mov
jb
and
rcrb
ror
xchg
jo
loope
dec
push
in
jbe
or
hlt
jno
movsl
sbb
add
ret
inc
andb
cld
pushf
add
mov
adc
out
jnp
shl
cmpsb
add
pop
xchg
mov
leave
leave
inc
jnp
call
add
lods
mov
pop
in
xchg
push
sbb
or
mov
pop
aam
outsb
jle
inc
addr16
es
repz
mov
mov
ja
xchg
mov
aad
sbb
pop
lahf
jge
rcrb
sti
ret
push
shl
repnz
xor
adc
scas
push
xlat
and
test
fsubr
ret
xchg
pop
pushf
jmp
mov
mov
iret
jg
cmpsl
fs
and
push
cs
jb
loope
imul
jnp
cmpsb
in
xchg
jbe
jg
idiv
ss
jne
clc
jecxz
call
jne
movsb
notb
mov
jg
shrl
stos
adc
fimull
insl
sub
sbb
sbb
dec
rorl
jg
cmpsb
rorb
inc
xchg
notb
fcoml
xchg
rclb
jae
sbb
outsl
jnp
xchg
insl
imul
jne
mov
jmp
testb
mov
out
sti
dec
jae
js
insb
outsb
out
shll
mov
mov
in
imul
psubw
dec
inc
out
sub
sbbb
ds
aas
fwait
je
rcrb
test
inc
stos
fcompl
xchg
xchg
add
stc
shlb
xchg
out
xor
inc
xchg
adc
xchg
shll
push
adc
leave
cmpsl
jae
test
xor
out
pop
mov
roll
out
incl
mov
scas
sub
mov
cs
xchg
jl
mov
mov
sarl
inc
lret
test
pop
insb
mov
or
sbb
push
pop
push
pusha
sti
dec
mov
notl
sarb
repnz
lret
sbb
leave
das
imul
and
std
icebp
loope
fwait
mov
in
lret
aas
or
sub
pop
jmp
clc
cmp
xchg
pop
das
push
inc
jl
stc
popf
mov
add
pusha
push
lods
stos
cmp
mov
mov
xchg
push
out
or
fidivs
shl
lea
scas
int3
dec
lea
ffree
cli
jmp
fnsave
xor
and
mov
or
jmp
push
jns
mov
cwtl
out
scas
lods
out
cmpsb
movsl
mov
in
xchg
push
fisttpll
jmp
movsb
or
xchg
lods
fcompl
jne
or
std
mov
popf
dec
mov
out
aam
pop
mov
adc
int
sub
adc
pop
imul
mov
lret
push
aas
into
popa
jns
and
shl
shld
jg
dec
fwait
outsl
push
fdivl
mov
stos
ja
scas
out
scas
in
dec
inc
inc
mov
cmpsb
dec
xchg
jne
mov
add
das
imul
stc
inc
inc
in
outsb
or
sbb
mov
mov
in
xchg
mov
sbb
adc
xchg
sub
push
jmp
push
sbb
pop
in
insl
push
push
mov
sub
jge
push
sub
push
jo
push
cli
pop
imul
cmpsb
ja
repz
inc
int
das
addb
pop
mov
add
sub
cmp
push
rorb
ret
fsubrl
or
stos
mov
xor
fisubs
push
je
and
mov
aam
ljmp
xchg
sub
jbe
scas
outsl
int
mov
test
ret
movl
fcoms
aas
pusha
xchg
fs
loope
push
or
or
and
dec
leave
and
inc
push
test
je
push
mov
cwtl
cmc
or
ss
fwait
inc
xor
dec
and
push
lret
ret
dec
and
mov
aas
add
aad
mov
mov
mov
outsb
or
cmpsb
mov
fisttps
mov
daa
or
xor
pop
outsl
int
pop
mov
bound
arpl
mov
push
sbb
ja,pt
xor
mov
out
repz
lahf
xor
sub
inc
add
aam
mov
ja
mov
push
push
push
cmp
inc
aad
inc
dec
jl
add
int3
pop
test
cld
pop
mov
add
insl
or
aam
xor
xor
xchg
js
adc
arpl
nop
stc
lahf
add
jne
into
pushf
addb
rorb
xor
xor
xor
call
test
push
iret
push
insl
cs
cld
rcrl
les
std
push
or
sahf
lret
hlt
cwtl
xor
xchg
sbb
and
or
test
icebp
scas
mov
fimull
jno
hlt
lret
xor
pusha
fsubp
cmpsl
das
push
mov
popf
out
out
push
and
mov
pop
cmp
clc
insb
or
test
jae
jle
out
hlt
add
cmp
icebp
outsl
xchg
pushf
sbb
fiadds
inc
add
inc
shrb
mov
popf
mov
or
insb
cmp
ret
lods
xor
pop
mov
repz
cmp
mov
cltd
out
and
xchg
sbb
orb
cmp
add
xchg
call
sbb
sub
dec
std
pop
and
and
subb
ljmp
ds
mov
cmp
sbb
sub
xchg
shll
xlat
mull
adc
inc
cltd
xchg
push
loop
fwait
xchg
addb
dec
and
xchg
pop
pop
and
jmp
pcmpeqd
out
and
cmpsb
es
fstps
out
pop
aam
and
jmp
xchg
lcall
ret
ret
push
enter
push
add
dec
cmp
loope
push
out
cmpsl
jmp
mov
mov
jbe
xchg
fisttpl
cmpsb
cmpb
or
fwait
movsb
insl
scas
push
movsb
jnp
lret
xor
sub
loope
mov
pop
inc
int
jne
leave
ljmp
aad
loope
aas
mov
jo
int
mov
mov
mov
jle
xchg
jo
popf
sbb
clc
push
mov
in
inc
rol
das
or
pop
add
lret
and
jmp
loopne
adc
cs
dec
xchg
mov
enter
je
dec
add
mov
push
sahf
jnp
adc
xchg
push
and
lds
jne
and
in
ret
jbe
sbb
add
mov
stc
mov
rcrb
lret
adc
je
popa
jnp,pn
cs
repz
arpl
lea
jbe
cmp
aad
xor
fistpll
push
je
mov
mul
in
fs
int3
ljmp
into
dec
outsl
xchg
in
jns
mov
lret
movsb
jmp
cmpsl
sbb
xlat
inc
loopne
dec
jl
call
xor
fldl
dec
push
dec
sub
inc
push
and
mov
cmpsl
mov
add
sub
lds
mov
and
pop
xor
adc
fwait
jno
aad
sub
push
lods
les
or
dec
aas
sub
pop
pop
in
push
addr16
inc
ret
add
mov
push
fidivrs
es
xchg
inc
stos
push
mov
test
imul
loope
sbb
addl
xchg
xor
jnp
cmpsl
adc
mov
cmc
mov
adc
xchg
and
pop
xchg
jb
push
inc
js
scas
in
cmp
fiaddl
inc
int
rsm
or
inc
lret
mov
mov
jg
sbb
orb
fcoml
mov
fwait
mov
in
xchg
push
fadd
mov
stc
jecxz
daa
mov
scas
jl
xchg
dec
dec
lea
pop
call
js
and
fdivs
loop
dec
scas
outsl
and
loope
nop
cmp
jb
mov
sub
clc
aam
pop
or
je
push
ljmp
mov
cmc
aam
popf
lret
inc
into
add
adc
cmp
add
lret
negl
mov
push
push
sub
cld
cmpsb
xchg
ljmp
cmc
mov
lret
mov
add
in
sahf
cli
dec
lahf
push
or
xchg
stos
push
mov
inc
movsb
and
les
xor
test
faddl
jo
jl
or
dec
outsl
movsl
out
push
in
mov
and
jno
bound
xchg
sub
mov
mov
dec
mov
or
adc
sbb
aam
push
jl
mov
scas
push
jo
enter
ret
cmp
jecxz
cld
xchg
xchg
push
inc
je
inc
sub
and
movsb
shll
push
fnsave
mov
cwtl
and
addb
or
imul
xchg
or
sbb
nop
movsb
popf
pop
or
icebp
or
add
mov
aad
test
into
test
sbb
or
xchg
shlb
std
push
repnz
or
inc
pop
jbe
movsb
mov
xor
into
or
pop
cwtl
insl
sbb
xor
scas
imul
rorl
sti
mov
pop
sub
scas
push
int3
lea
pop
mov
les
add
scas
cli
xchg
mov
loopne
gs
stos
or
or
mov
xchg
scas
jb
enter
lods
jl
adc
xor
int3
popf
clc
loope
cmp
and
jle
js
inc
fs
xchg
out
notb
lea
jg
mov
and
repz
out
jl
jl
stos
xor
pusha
outsl
rorb
push
decb
pop
inc
or
xchg
add
sub
cmp
loope
mov
popf
inc
out
sbb
pushf
sbb
mov
fstpl
rcl
and
repnz
push
test
stc
pushf
fwait
cwtl
mov
xchg
or
cld
gs
dec
xor
mov
inc
cltd
cmp
fs
jmp
dec
mov
cli
insb
test
aaa
aaa
cmpsl
popa
lods
push
cli
mov
mov
cmp
pop
sub
dec
mov
xor
sbb
sahf
lcall
pop
adc
or
mov
daa
ja
mov
cld
mov
lret
repz
mov
xchg
stos
lret
cmp
adc
pop
push
mov
es
jmp
pop
lret
mov
mov
cmpb
dec
std
dec
movsl
mov
sarl
stc
gs
loopne
int3
xchg
lods
ficompl
and
cmc
cmpsb
cmp
sbb
rcll
out
cmc
out
push
loope
fisubrl
jne
or
mov
push
or
icebp
ljmp
jle
popa
pop
push
shlb
pop
leave
cmp
add
movb
adc
repnz
fidivl
es
mov
xor
jbe
call
leave
shl
sahf
adc
aam
mov
push
pop
daa
scas
rcrl
aas
inc
xchg
mov
in
mov
imul
xor
pop
xor
add
test
aad
and
inc
pop
xor
sahf
or
mov
cmpsl
xchg
mov
test
and
aaa
movsl
int3
jle
dec
mov
xchg
inc
pushf
add
insl
sbb
stos
cmp
cmp
xchg
xchg
jnp
popa
pop
inc
ret
enter
in
mov
jl
push
sbb
xchg
aam
xor
cmpl
sti
sub
addb
or
or
lret
fdivl
ljmp
mov
xlat
ja
lret
jb
lahf
lock
in
mov
mov
mov
fisubl
daa
sub
lea
add
push
xor
scas
add
sub
add
xchg
es
lock
add
mov
xor
leave
jns
pop
pop
fbld
push
push
mov
das
stos
ficoms
dec
fcompl
stos
ljmp
sbb
add
or
dec
cltd
shll
insb
pushf
test
sbbl
jb
inc
jno
adc
popf
and
adc
loopne
pop
or
adcb
jo
insb
testl
mov
push
push
gs
subl
jmp
jecxz
pop
fisubrl
xor
outsb
aaa
outsb
shr
mov
push
xchg
cmp
fs
ss
repnz
ljmp
or
cli
ror
ret
notl
fwait
jno
and
cmp
jecxz
push
or
fisubrl
xchg
mov
xchg
sahf
jb
outsb
mov
lods
adc
or
mov
leave
dec
pop
pop
pushf
adc
ds
push
dec
scas
ljmp
and
pop
add
imul
lock
push
stos
test
out
mov
movl
mov
cmp
shll
fimull
enter
push
cmp
push
cmp
ror
xchg
adc
mov
jl
push
aaa
imul
sbb
sbb
clc
inc
shrl
push
stos
mov
cmpl
ss
lea
js
push
js
jmp
and
inc
sbb
add
xor
jp
movl
iret
xor
xor
cmpsb
lea
xchg
lcall
test
and
cld
in
rol
add
aaa
je
jg
pop
and
repnz
sbb
pop
lds
iret
push
gs
inc
push
adc
fldcw
mov
pop
xor
jo
ss
cli
ret
jbe
lods
imul
js
fnstsw
pushf
and
and
das
mov
icebp
in
out
or
in
out
aad
test
sahf
cmpsb
add
faddl
mov
out
cmc
push
pop
hlt
pop
mov
pusha
mov
lods
jl
mov
push
loopne
or
mov
aaa
ja
pop
adc
or
dec
cmp
adc
mov
inc
pop
mov
fldcw
shrl
mov
int3
inc
and
lcall
xor
ret
ljmp
mov
lahf
cwtl
lcall
cmp
sub
jo
mov
push
cwtl
sbbb
pop
mov
lods
jne
adc
cs
jp
je
bound
push
cltd
clc
daa
push
or
pop
cmpsl
xor
mov
clc
out
or
ja
jecxz
xchg
jnp
aad
inc
mov
into
mov
clc
push
call
sub
jno
dec
dec
cmp
repnz
dec
cmc
xchg
out
ljmp
xchg
push
cwtl
xor
je
xchg
dec
out
cmp
cmc
clc
lds
pop
test
push
fs
cmovl
jno
and
inc
hlt
outsl
scas
ljmp
mov
lods
data16
movsb
sbb
test
loopne
scas
mov
pop
test
es
lods
inc
imul
adc
dec
das
sbb
mov
add
insl
push
jne
lock
inc
dec
mov
sar
adc
popf
shrl
aam
or
jnp
dec
hlt
and
pop
inc
mov
scas
je
fildll
xlat
dec
sub
mov
mov
lret
cs
sahf
shll
jo
sbb
xor
sti
iret
mov
mov
mov
jl
inc
adc
and
jp
mov
imul
jge
es
sub
lret
movsl
jb
popf
je
incb
pop
lods
sbb
cltd
mov
cli
pop
xor
jp
mov
lods
or
les
sahf
sub
cmp
mov
push
pop
and
adc
out
outsl
xorl
jb
adc
cwtl
gs
mov
lret
movsb
test
sahf
fstpl
les
je
sub
dec
imul
and
icebp
pop
jl
hlt
or
dec
xor
in
jne
std
pop
jp
shll
sub
mov
insl
or
pop
push
push
fmuls
add
adc
jnp
and
push
js
mov
xor
lahf
inc
les
mov
cmp
daa
or
and
or
mov
mov
jp
and
mov
pusha
jbe
cmc
pusha
movsb
insb
dec
inc
xchg
fistps
dec
or
lret
repz
jg
hlt
loop
ljmp
mov
add
mov
les
jmp
mov
fnsave
in
lds
sub
or
lret
shll
pop
mov
and
xor
push
scas
ds
outsb
aam
lds
and
stc
shlb
test
sahf
mov
pop
test
pop
clc
jl
inc
outsl
sbb
push
loopne
mov
shrb
cmp
xlat
inc
nop
push
loopne
hlt
jae
fstpt
jge
ss
and
push
fmuls
scas
cld
mov
cmp
mov
std
cs
ss
js
jb
jbe
test
out
jmp
inc
loopne
inc
or
add
mov
cmp
mov
xor
shl
sub
pop
xor
out
sub
movsb
je
lea
sub
mov
mov
fiadds
jmp
adc
pop
jmp
add
lahf
mov
ds
push
test
xchg
sbb
leave
cs
add
xchg
ss
xchg
pop
out
pushf
inc
mov
push
repz
push
inc
jl
shrb
fiadds
or
add
adc
adc
dec
mov
adc
adc
dec
sbb
fidivl
cmp
es
decb
sub
jg
jl
push
or
add
or
jnp
xchg
or
mov
pop
sub
loope
frstor
imul
adc
mov
lea
pop
pop
popa
mov
push
dec
out
movsl
jg
mov
xor
inc
xchg
push
addr16
and
mov
mov
lcall
add
inc
iret
ret
jne
and
jns
nop
jecxz
lcall
cmp
orb
dec
mov
shrl
inc
jmp
mov
push
jb
imul
jmp
aaa
int3
outsl
sub
pushf
arpl
fstps
insl
push
mov
out
cmp
getsec
cli
lcall
or
cmp
cmp
push
cmp
mov
pop
rorl
mov
sbb
pop
inc
cmp
dec
add
xor
inc
cmpsb
in
aas
in
dec
imul
cmc
daa
sub
jl
jbe
call
cmp
dec
gs
cmp
movsl
dec
mov
cwtl
movsl
sahf
jbe
nop
jp
hlt
add
add
jo
cmpsl
cwtl
sub
xor
mov
fisubrs
xor
shl
std
pop
add
sbb
jmp
push
gs
shl
mov
rcll
mov
movsl
ss
dec
add
push
in
pop
lock
jbe
hlt
ja
dec
push
push
aaa
mov
mov
pop
testb
es
stc
jae
dec
pop
or
xor
mov
lds
clc
leave
xchg
xchg
ljmp
inc
sbb
pop
ss
rcll
loope
mov
jns
ficompl
mov
fcmovne
dec
and
popa
popa
loope
inc
push
sbb
jle
pop
pop
cld
daa
push
rol
inc
pop
xchg
mov
out
imul
inc
xchg
inc
insl
dec
test
or
add
push
nop
stos
inc
je
rorl
and
cmp
sub
enter
add
push
push
lock
adc
stc
push
popf
and
pop
adc
into
xchg
push
aam
sub
inc
push
dec
cmpsb
pop
mov
scas
lods
pop
jno
adc
mov
mov
test
ja
into
inc
jl
sbb
xor
shll
jno
or
xchg
aam
das
xchg
cmc
mov
shlb
push
push
in
rcrb
jp
and
mov
cmp
inc
arpl
pop
and
pusha
stc
mov
xor
dec
push
in
cltd
arpl
mov
jae
loop
cmp
aas
fsubp
sbb
add
or
xor
inc
mov
xor
push
xor
and
pop
push
ds
shlb
mov
data16
fidivs
lcall
dec
mov
adc
add
mov
movsl
mov
lahf
pop
lcall
andl
lahf
cmpsl
popf
test
xor
xchg
test
lds
or
mov
mov
cmpsb
mov
call
lcall
cmp
cmp
xchg
push
ljmp
gs
sbb
sbb
lock
xchg
fcoml
cld
fstpl
dec
fildl
ljmp
or
stc
loopne
mov
push
outsb
int
cmp
mov
movsb
movsl
popa
adc
and
add
push
stos
lahf
jp
andl
xchg
aas
loope
subl
xor
ret
cmc
cmpsb
fidivrl
xchg
popa
les
in
mov
in
xchg
rol
outsb
or
roll
and
out
mov
pop
jb
mov
pop
xlat
push
lds
je
jmp
mov
rol
mov
test
mov
lds
mov
sub
aaa
mov
in
shlb
mov
jo
dec
mov
aad
dec
inc
cmp
xlat
bound
fdivrs
push
addb
mov
pop
lock
pop
jnp
sub
data16
adc
out
or
mov
or
stos
mov
cmp
mov
push
and
pmaxub
dec
repnz
and
in
aaa
jb
into
jno
pop
std
fwait
sahf
or
push
or
fnop
mov
jns
in
mov
push
jmp
jecxz
lahf
mov
adc
loopne
inc
and
pop
rcrb
andl
fldt
xor
pop
xor
sti
mov
out
sti
mov
jmp
add
fisttps
push
pop
sbb
dec
pop
movsl
and
sub
add
enter
fisubrs
fcos
cmpsb
and
roll
jp
mov
insl
or
iret
in
mov
movsb
lods
cmp
stc
xchg
xchg
std
add
fwait
dec
out
in
rcr
into
mov
jnp
inc
fimuls
and
mov
xorb
loopne
xchg
or
mov
pop
cmp
mov
ud0
bound
test
gs
fs
pop
cmp
stos
stos
shlb
inc
cmp
dec
push
sub
xor
movsb
roll
cmp
jl
and
pop
or
and
mov
adc
lock
stc
pop
jg
push
fildll
add
push
rcr
jmp
test
gs
arpl
mov
xchg
dec
xchg
push
bound
push
insb
or
outsl
pop
fldenv
lea
cmpsl
sub
push
mov
dec
dec
daa
adc
pop
subb
les
sbb
insb
cmp
ficoms
enter
inc
mov
insl
jns
rcrb
xorb
nop
push
and
pop
addl
test
data16
inc
sbb
sbb
xchg
stos
shll
push
je
mov
shlb
mov
fisubl
xchg
loopne
adc
mov
sbb
ds
push
imul
pop
cli
pop
hlt
push
jns
or
mov
in
cmpb
cwtl
cmc
cli
and
xor
cmp
pop
push
mov
mov
dec
loop
or
xchg
daa
jmp
icebp
pop
sarb
std
call
inc
mov
mov
jnp
loope
mov
sub
push
jnp
adc
inc
jg
add
mov
bound
dec
mov
sbb
adc
lret
cmp
rcrb
cltd
lret
mov
arpl
or
xor
aaa
pop
and
out
adc
mov
adcb
jl
mov
ret
shrb
dec
mov
fstpl
out
cmp
mov
adc
xchg
push
fstps
cmpsl
push
fwait
add
std
mov
pop
xlat
cmp
inc
pop
push
enter
adc
ljmp
sbb
shrl
mov
shrl
lds
cmpsl
cmc
xor
push
iretw
xor
out
sbb
enter
test
add
movsl
jmp
sub
cwtl
lods
mov
lods
mov
jnp
nop
adc
push
push
jns
mov
subb
cs
call
sub
xchg
stos
dec
jecxz
push
cmp
shll
repz
xchg
push
xchg
in
clc
ds
cs
pop
dec
add
xor
jo
push
out
sarb
dec
int
mov
movsl
and
cs
out
or
movb
push
iret
jmp
push
decb
int
fmuls
xchg
xor
or
leave
sti
in
lods
cmpsl
aam
pop
mov
pop
mov
mov
mov
dec
lds
xchg
popf
mov
fsubl
jge
push
mov
and
lock
xchg
std
scas
arpl
mov
inc
out
cmp
inc
add
insb
pop
popa
or
sub
pop
in
adc
dec
push
xchg
iret
mov
test
dec
stc
test
jl
xchg
cmp
push
fdivs
fnsave
mov
lods
mov
mov
ret
clc
push
test
rclb
inc
jns
add
jae
pcmpeqw
fists
jae
pop
push
jp
jbe
in
mov
pushf
stos
xchg
nop
xor
add
push
mov
and
or
ss
movsb
inc
cmp
ja
loopne
pusha
int3
loopne
push
insl
repz
sbb
loope
dec
mov
add
sti
lret
test
cs
sti
in
sbb
dec
out
add
rolb
cmp
hlt
sar
movsl
lods
cltd
divl
fcomi
lods
lds
scas
fwait
xchg
pop
scas
xorb
pop
popa
sbb
jb
pop
out
and
stos
push
stos
aas
popf
mov
cmp
daa
lcall
les
and
pop
push
or
mull
punpckhbw
cmp
fistl
hlt
dec
fimuls
sbb
push
dec
push
jle
pop
pop
fdivl
adc
dec
inc
int
fisubs
vpunpcklbw
push
in
jmp
out
pusha
rcl
dec
std
sahf
mov
mov
add
xchg
xchg
sub
out
lock
xchg
push
xchg
arpl
add
mov
mov
dec
pop
sub
cltd
xor
mov
imul
in
xchg
push
rcr
inc
lods
jae
cli
push
outsl
xor
hlt
sub
adc
into
aam
adc
sub
add
es
pop
shr
int3
and
mov
sbb
loope
repnz
ja
xor
jmp
dec
xor
adc
mov
stc
outsl
dec
push
pushf
dec
jne
xor
sub
cmp
push
pusha
mov
std
jg
in
dec
mulb
fwait
jo
ret
pushf
sub
cli
inc
push
or
inc
or
jmp
push
subb
xchg
or
pusha
mov
and
int3
ret
les
sub
xchg
aaa
cmpsb
loopne
dec
mov
jle
push
pushf
test
icebp
clc
and
leave
insl
jp
sbb
sub
pop
loope
rcll
pop
stc
sub
shll
dec
jp
xorl
push
cmova
mov
jbe
stc
push
mov
fmuls
lcall
jmp
xchg
dec
mov
jmp
mov
in
jmp
arpl
push
mov
jne
dec
cmp
aas
lds
pop
pop
cwtl
outsb
lea
in
je
sbbb
cmp
sbb
jle
dec
scas
inc
lcall
sbb
add
test
xchg
inc
enter
pop
mul
xchg
aad
insb
in
fwait
sbb
mov
or
add
test
mov
cld
mov
xchg
add
fbstp
jg
cmp
jecxz
rcrl
cmp
sub
adc
cmp
mov
mov
jl
jle
mov
fisubrl
xchg
xlat
jmp
lret
adcl
outsl
push
add
mov
xchg
not
jle
sbb
pop
cmp
icebp
mov
dec
inc
sub
in
orl
mov
cwtl
jmp
mov
push
push
int
arpl
lret
push
nop
sbb
pusha
ud1
or
ja
int3
pop
repnz
sbb
ja
inc
pop
jns
pop
pop
jno
ret
ljmp
les
in
lret
jno
mov
pop
jl
aaa
stos
mov
xchg
clc
test
sub
jecxz
enter
mov
cmp
das
mov
or
and
push
jno
shrl
sub
push
movsbl
cmpsb
mov
je
lcall
and
push
cmp
fisubs
xchg
xchg
aaa
cltd
xchg
mov
lcall
push
into
in
jl
or
jno
jl
hlt
arpl
mov
jb
inc
xor
cmp
mov
mov
mov
dec
repnz
xchg
sahf
xor
push
mov
decb
add
dec
dec
ljmp
test
test
lods
pop
sbb
adc
adc
data16
xchg
pop
fadd
call
cltd
les
mov
jl
push
mov
pop
mov
jnp
mov
add
enter
xchg
xchg
js
sbb
and
sub
push
push
mov
cmpsb
mov
adc
cmpsb
mov
popa
dec
xchg
insb
push
stc
mov
push
call
aam
lret
pop
fucomp
pusha
and
pop
cmp
sbb
inc
repz
mov
fxch
enter
stos
sbb
pop
xchg
fcmovbe
mov
and
jae
add
mov
lret
incb
sbb
push
pop
hlt
and
jno
out
sub
sub
pop
adc
int
jle
test
dec
sti
push
cmpsl
sbb
add
inc
mov
xor
mov
in
imul
aam
inc
cli
test
movsb
push
lret
jmp
ja
sbbl
in
pusha
data16
btsl
or
out
prefetch
lcall
jp
int3
scas
insb
push
out
add
and
popf
lahf
xchg
push
mov
popf
daa
add
sub
jmp
incl
fwait
addr16
push
adc
sbb
inc
and
ret
outsl
pushf
aam
pop
outsb
enter
cwtl
mov
sub
shll
in
rcrb
inc
cmc
stos
mov
sbb
xchg
mov
shrb
add
adc
fisttpl
xor
add
xchg
lock
pop
xchg
lock
out
out
pop
rcrl
nop
fdivrp
mov
movsl
cwtl
xor
loop
sbb
add
cld
fildll
sbb
pop
clc
dec
pop
push
ja
jnp
mov
arpl
imulb
xor
adc
insl
fisttps
mov
or
jmp
mov
cld
fs
fsubrl
test
jo
pop
int3
imul
xlat
or
out
inc
les
xchg
insb
stos
pop
jno
into
outsl
pop
lock
add
xorb
push
jecxz
imul
xor
ret
out
ja
inc
lret
adc
dec
xor
ja
sub
fistpll
mov
push
and
out
enter
shr
loope
arpl
scas
rolb
daa
daa
dec
jb
push
and
lock
or
mov
nopl
xchg
cltd
add
cli
cmp
mov
cmc
ss
jne
push
sbb
pusha
cmpsl
jmp
cmp
shll
xchg
sbb
push
sub
mov
cmp
sbb
and
imul
mov
lahf
fstps
psubsw
cld
nop
xor
jbe
xor
scas
mov
push
mov
mov
hlt
cli
outsl
aam
movsl
imul
xor
pushl
cwtl
add
aas
push
cmp
mov
push
popa
les
mull
push
mov
mov
and
fiaddl
inc
aad
jmp
ret
and
push
repnz
mov
mov
jg
dec
in
and
fsts
cmpsb
fcomp
lcall
mov
xchg
push
nop
or
scas
add
inc
out
mov
dec
insl
cmp
mov
mov
sub
shrb
fs
pop
bound
js
sub
sbb
xor
dec
mov
in
mov
or
inc
fildl
scas
add
leave
or
and
fidivs
sbb
jns
dec
sti
sbb
sbb
inc
cmpl
push
xchg
outsb
cmp
jne
mov
sti
pop
outsl
cmp
cli
lds
test
movsl
add
sbb
inc
fnsave
mov
add
lods
testl
nop
xor
fsubp
clc
xchg
xchg
fwait
es
add
xchg
mov
insl
testl
push
cltd
mov
in
inc
iret
lock
xor
push
stc
lret
and
lahf
sbb
push
and
push
jmp
inc
push
outsb
adc
jecxz
dec
andl
stos
outsl
mov
stos
addr16
outsb
push
xor
jg
in
movsb
inc
jecxz
cmpsl
lods
adc
adc
repnz
leave
scas
adc
lcall
add
cltd
dec
push
popf
inc
xchg
jmp
icebp
dec
jbe
cmpsb
xchg
dec
dec
jnp
mov
mov
inc
enter
rclb
dec
jnp
js
pusha
sbb
mov
push
ds
add
inc
out
js
push
sub
daa
insl
xor
into
dec
fdivl
cwtl
mov
or
mov
mov
pop
add
and
jge
push
loopne
pop
adc
pop
rorb
sub
loop
mov
or
sub
stos
int
push
dec
insb
int
je
outsl
dec
mov
icebp
or
mov
mov
sbb
or
in
jg
fdiv
lahf
pop
scas
mov
and
mov
push
insb
clc
cmp
xlat
fbld
sub
xchg
and
pop
aam
mov
cld
insb
sbb
stos
icebp
ds
fisttps
lds
push
pop
int3
ss
inc
movsb
add
fisttpl
mov
dec
ds
cmp
pop
add
je
jecxz
cmpb
cmpsl
mov
sbb
sub
add
test
push
icebp
jae
or
insb
out
aaa
push
jae
jns
imul
test
daa
jecxz
dec
push
jns
out
jge
imul
mov
cwtl
or
xor
or
lods
jecxz
push
mov
stc
sub
xchg
and
dec
jae
jge
sub
enter
sub
jae
push
jns
sbb
daa
call
je
push
push
in
mov
pop
jae
popa
ror
push
or
imul
sub
xlat
cld
inc
jnp
mov
jbe
ds
ds
or
movsl
cmpsb
rclb
add
jno
scas
cmpsl
pop
adc
pop
ret
dec
ret
jg
adc
or
cmp
loop
add
jne
xchg
push
xrelease
cld
popa
cmpsl
leave
jno
aaa
mov
bound
add
xchg
mov
mov
arpl
or
scas
mov
mov
cld
pop
sub
ret
mov
sbb
arpl
or
add
push
shll
out
push
dec
mov
fisubl
or
fisubs
cli
mov
xlat
je
inc
lret
aad
cmp
push
out
mov
mov
sbb
jns
and
cmp
mov
mov
pop
test
dec
inc
or
pop
out
mov
push
mov
cs
dec
mov
pop
xor
incl
push
popf
shrl
jecxz
xchg
fdecstp
addr16
clc
sbb
notb
ss
xchg
jl
push
aad
sub
repnz
sub
push
enter
xor
insb
ss
pop
push
repz
xor
adc
sub
cmp
lret
push
jo
pop
push
sbb
fisubrs
gs
pop
dec
loopne
gs
jmp
mov
mov
movsb
lods
inc
stos
dec
jg
insl
cwtl
mov
out
adc
loope
gs
out
mov
or
mov
add
fildl
xor
fsubrs
cmpsb
call
mov
cmp
mov
imul
out
mov
and
and
mov
push
fcmove
xchg
leave
addb
sti
leave
jecxz
xor
sub
adcb
xchg
pusha
mov
cmpsb
dec
lock
cltd
dec
inc
pop
clc
fcomps
mov
in
adc
sub
mov
add
push
xor
jle
dec
push
xorl
pop
mov
push
in
inc
add
jecxz
cmpsl
mov
add
adc
testb
aam
rcrl
fldlg2
xor
xor
insb
popf
scas
movsb
adc
ret
mov
lods
mov
sub
and
inc
jnp
movl
sub
test
dec
test
jnp
movsb
cmp
add
rolb
popf
jle
in
aas
cmp
fsubl
leave
push
scas
inc
std
das
leave
mov
add
data16
or
mov
jne
jle
fmul
movsl
das
pushf
repz
js
add
add
cmpsl
push
adc
mov
sbb
push
jo
stos
mov
dec
cmp
cmp
pextrw
dec
frstor
mov
insb
pop
ss
add
cmpsl
clc
aam
jne
xor
push
negb
repz
int
aas
aas
repnz
jno
jge
lret
push
push
and
bound
pop
sub
les
fisubrs
dec
sub
mov
cmp
jne
inc
sbb
idivl
xchg
test
push
jge
cmp
loope
movsb
aam
ror
pop
cltd
adc
dec
lahf
pop
add
dec
add
sahf
icebp
jge
push
cld
dec
ret
testb
xchg
mov
daa
sub
dec
cmp
cmpsb
push
mov
jg
push
scas
inc
ss
pop
mov
bndstx
out
out
ljmp
cltd
or
push
stos
sub
popa
mov
sahf
jne
adc
jbe
cmp
dec
aam
pop
insb
push
mov
adc
inc
lret
lock
jb
cmp
xor
mov
ljmp
je
push
or
mov
jecxz
clc
in
insb
mov
add
sub
xchg
inc
cmpsb
das
push
mov
push
imul
es
movsl
pop
jno
lret
imul
ficomps
add
xchg
sub
dec
cmc
push
bound
jne
xor
fildll
movsl
pop
pop
test
jle
out
sub
mov
dec
xlat
and
popa
cmpl
fisttpll
fst
in
or
mov
ret
sbbl
insb
xchg
iret
mov
jo
dec
data16
adcb
dec
xor
xor
enter
and
jns
cmpb
nop
xor
xchg
je
stos
dec
in
adc
mov
lret
pushf
aas
add
mov
adc
fldl
repnz
pop
psubw
fsubrs
jbe
mov
jo
test
add
pop
cmc
inc
mov
ja
or
xchg
sub
pop
xchg
in
aas
ds
push
mov
mov
leave
fsubrl
lds
mov
xchg
and
and
sbb
push
aad
repz
pop
movsb
ds
xchg
stos
cmp
hlt
mov
dec
push
pop
je
stc
call
orb
bound
lods
imul
rorb
stc
mov
add
in
orb
dec
jp
pop
sbb
setl
sar
movsl
mov
xor
sbb
popa
pop
call
mov
ljmp
loopne,pn
stos
mov
mov
sub
xchg
sbb
stc
adc
jno
xchg
mov
and
pop
xor
pop
mov
xor
out
arpl
stos
and
inc
inc
nop
rorl
add
in
test
cmp
iret
pop
ja
mov
scas
xchg
mov
mov
jle
lcall
jo
or
imul
jecxz
push
inc
into
cmp
jo
sbb
loope
in
push
stc
push
jbe
outsb
push
jmp
lods
sbb
sbb
and
xchg
mov
or
pop
mov
or
cltd
in
mov
mov
sub
addr16
pop
out
aas
cmp
mov
pop
xor
push
jecxz
icebp
or
jmp
test
cwtl
ds
hlt
aam
fmul
fiadds
imul
in
adc
cmc
sub
stc
or
sbb
add
xor
sub
movl
jno
test
mov
xorl
stos
loopne
mov
lret
mov
xchg
fadds
jg
pop
xlat
push
add
and
and
mov
push
incl
lods
pop
add
shlb
sbb
push
mov
lret
sub
push
call
pop
ja
int3
dec
dec
inc
cltd
sbb
mov
rolb
xchg
xchg
aad
inc
adc
mov
xchg
shlb
add
gs
xchg
push
pop
add
stc
cmc
rcrb
xchg
mov
cmp
sub
cmpsl
inc
jmp
xor
leave
or
cmp
out
in
pop
jp
aaa
lds
mov
cmp
pop
pop
cmp
sbb
cmp
out
dec
adc
or
push
xchg
push
das
lea
xor
cwtl
scas
ficompl
hlt
sbb
dec
std
jp
sahf
out
adc
mov
lret
and
mov
add
inc
add
jb
xor
pop
int
daa
mov
fidivs
nop
cltd
and
arpl
stc
daa
jo
xchg
mov
pop
sbbl
adc
jmp
add
jmp
lock
pop
clc
out
cmp
jle
insl
mov
jno
dec
mov
or
fisubrs
or
sbb
sbb
out
inc
in
xchg
mov
and
rcrb
ja
inc
xchg
aad
adc
or
mov
and
fiaddl
sbb
dec
push
inc
push
das
dec
adc
rclb
in
mov
fistpl
xorb
mov
lahf
dec
outsl
mov
pusha
stc
scas
mov
cmp
inc
add
in
mov
loopne
adc
push
ds
inc
cs
add
pop
sub
pushf
lret
loopne
mov
fdivrs
ja
mov
push
pop
push
aaa
mov
pop
sti
xsaveopt
adc
jge
jmp
ja
sbb
dec
int
js
xchg
sbb
mov
xor
jb
push
or
xchg
repz
mov
cmc
cmp
stos
test
stos
xor
stc
ss
and
pop
xchg
daa
pop
das
inc
out
rclb
push
stos
add
and
arpl
xor
pop
ficomps
nop
inc
sbb
dec
inc
out
rclb
insl
pop
leave
xor
dec
jl
addr16
lcallw
mov
divl
jge
inc
lahf
pop
jmp
ja
cmc
jns
pop
mov
cmp
rep
out
push
aas
es
pop
lds
lock
cmpsb
in
sub
aaa
and
aas
mov
pop
cs
pop
lods
mov
and
sub
movsb
mov
xchg
push
sub
es
xor
daa
loope
add
push
fdivrl
popl
rclb
fisubs
jns
es
add
and
mov
add
test
push
loope
hlt
jns
pop
xlat
push
into
adc
pusha
das
and
repnz
scas
mov
push
repnz
pop
push
fildl
xor
mov
push
lods
dec
lds
ror
leave
mov
xor
pop
push
mov
popa
sbb
mov
int3
sbb
or
fstpl
mov
loope
call
push
mov
xchg
mov
sub
cld
les
mov
scas
out
xchg
sbb
add
push
add
cmp
xchg
outsl
or
sbb
repz
hlt
dec
fiaddl
js
lea
mov
mov
jle
or
cld
pop
jnp
push
mov
cmp
aaa
jp
sbb
push
in
hlt
movsb
stos
pop
cmc
mov
int
dec
cmpsb
push
out
pushf
es
sbb
xor
mov
aas
enter
mulb
in
stc
int3
std
add
mov
aaa
or
jle
repnz
lea
sarl
pop
adc
testb
scas
test
adc
js
shll
andb
int
int3
or
into
ljmp
or
sub
fwait
xchg
jg
cmc
roll
in
jg
pop
or
cltd
sbb
push
xchg
les
jp
movsl
pop
fsts
pop
inc
mov
pop
add
xchg
js
lret
shll
xchg
push
adc
sub
pop
or
xchg
add
andl
sti
into
pop
nop
fs
cmp
sub
cli
add
enter
cs
push
insb
sub
cmc
inc
adc
test
lea
loope
and
xchg
sbb
and
pop
xor
mov
fdivrl
jb
sbb
cmp
sub
sub
test
icebp
xchg
pop
mov
popf
fwait
pop
inc
mov
jp
mov
sahf
mov
fs
inc
sbb
fistl
jb
hlt
cld
xchg
or
pop
dec
jno
ret
pop
in
add
sti
mov
or
jno
std
loop
popf
dec
stos
movsl
insb
dec
ret
cmc
pop
xor
cltd
nop
aad
aas
jp
or
stc
adc
ds
movsl
sbb
addr16
movsb
push
cmp
into
stos
data16
xor
js
rcll
push
mov
mov
fldcw
mov
popa
cmp
int3
insl
test
mov
out
mov
adc
or
sbb
xor
js
push
lret
out
or
call
inc
cs
popa
inc
jae
lret
push
and
aam
cs
mov
xchg
push
jl
aas
adc
daa
loope
mov
and
adc
andb
rcrl
jge
nop
push
je
cmpsl
jge
adc
mov
lods
clc
out
lods
adc
enter
cmpsb
xlat
mov
pop
cli
popa
repz
mov
mov
and
mov
mov
mov
enter
pop
mov
insl
xlat
gs
inc
or
sub
mov
loopne
mull
js
out
mov
inc
jns
popf
les
jg
pop
repz
adc
cmc
xchg
lret
sbb
stos
inc
fnstsw
lahf
mov
lahf
clc
xchg
sti
add
enter
push
inc
rorl
aad
std
hlt
clc
inc
adc
fstl
pop
lahf
outsl
mov
test
movl
out
sahf
mov
mov
cltd
movsl
lret
outsb
jns
cmpsl
je
xor
aam
mov
xchg
loopne
xor
cmp
pop
aad
fcmovne
mov
mov
mov
test
insl
mov
mov
pop
add
ret
imul
and
shll
adc
jb
sub
enter
je
xor
and
add
aas
ret
or
mov
xchg
mov
jb
inc
lret
xchg
fadd
out
push
inc
adc
into
add
jb
mov
les
xchg
xor
cld
mov
xchg
leave
frstor
push
dec
pop
mov
inc
cmpsl
cmp
js
aam
lods
test
mov
mov
jg
and
out
fsts
scas
jmp
out
cmpsl
call
test
es
sbb
call
out
ja
in
mov
fcmovbe
repz
cmpsl
dec
je
xorl
addr16
inc
jg
scas
mov
pop
xor
pop
movsl
push
add
inc
push
push
mov
cld
sub
shll
dec
xchg
fs
cwtl
jns
out
and
adc
stos
pushf
dec
sub
mov
into
jbe
pop
xor
xor
fistpll
pop
cmp
add
inc
sti
sar
adc
outsl
jae
xor
jno
loope
push
mov
addr16
xchg
out
and
aaa
xor
cmc
call
fs
add
and
cld
pusha
int3
xadd
sub
mov
cmp
add
add
jl
pop
add
add
cmp
pop
pop
push
and
mov
cmp
and
leave
aaa
aas
fwait
jle
dec
icebp
add
xchg
fs
jge
rclb
xor
popa
xor
or
add
adc
shrb
cwtl
pop
fldenv
pop
mov
jecxz
in
enter
lods
dec
into
cmp
mov
sub
dec
and
push
push
mov
and
jnp
lret
push
mov
jae
repz
jp
ljmp
and
mov
ret
dec
jns
and
lahf
jl
int
pop
imul
or
sbbl
xchg
fadds
jmp
xor
arpl
and
pop
dec
jne
hlt
and
adc
push
and
lds
jae
aaa
xchg
je
inc
mov
xor
dec
cmpsb
pop
adc
pop
or
lret
std
pop
mov
push
hlt
sarb
rep
xor
cmp
or
lock
adc
jmp
ds
xor
add
xor
repz
dec
das
sub
pop
dec
shlb
xor
xchg
or
sbb
stos
xchg
mov
sbb
bound
inc
ja
push
bound
jmp
test
xchg
adc
int3
xchg
jne
out
lcall
xor
orb
pop
ror
mov
ficoms
jg
rcrl
add
or
xchg
dec
push
xor
outsl
jge
sbb
mov
out
and
pop
xchg
insl
adc
insl
mov
nop
cwtl
push
notl
fidivs
push
hlt
mov
fcmovbe
dec
mov
aaa
jg
adc
frstor
mov
addr16
fdivs
sbb
mov
aad
or
cmp
pop
xor
shll
das
ja
in
jo
add
cli
mov
jo
add
movsb
pusha
cmp
lods
or
nop
pusha
adc
adc
pop
inc
outsb
lods
lea
pop
scas
in
jge
les
inc
pop
jnp
sub
stos
xchg
rcl
stc
push
cli
xor
aam
pop
stos
cwtl
cmp
adc
cmp
test
cmc
sbb
cli
mov
cmc
out
cmp
lds
mov
rcrl
cmp
dec
pusha
daa
mov
scas
popa
mov
mov
dec
cli
adc
jle
sarb
aaa
add
out
cmp
jp
fs
mov
testb
insl
test
xor
xchg
cmpsb
cmp
movsl
adcb
mov
decb
adc
jp
dec
inc
leave
adc
push
xchg
xor
rorl
rcrb
cmpsl
and
adc
cmpsl
stos
jno
or
push
ret
or
aaa
rcll
pop
add
jg
popa
xchg
dec
pop
pop
hlt
and
mov
pushf
mov
lahf
xor
or
leave
fidivrs
sub
rcr
ja
cmp
mov
sbb
inc
mov
jmp
sbb
cmpsl
sti
call
orl
out
adc
outsb
iret
cmp
notl
mov
sar
fistpll
inc
cmpsl
mov
inc
push
or
lret
lcall
out
cmp
push
push
int
xlat
mov
in
add
jl
push
xor
cs
lea
xchg
mov
jno
cmc
add
push
mov
sbb
adc
sbb
cli
xchg
aad
fmuls
push
cld
add
scas
in
aam
loope
ja
fdiv
inc
add
jbe
outsb
shlb
xchg
inc
repz
aas
int
dec
xchg
dec
fwait
ret
mov
maxps
lret
push
cmp
or
or
and
jle
je
aaa
negb
testl
inc
in
xor
icebp
out
je
dec
je
pop
and
pushf
loopne
ljmp
jecxz
adc
je
fstpl
test
push
arpl
jle
in
jbe
or
in
cmp
outsl
std
arpl
xchg
jle
adc
xor
adc
mov
pop
jne
nop
mov
cmpsb
mov
adc
incl
push
insl
add
add
adc
sahf
xchg
and
into
test
fsts
mov
sub
jnp
inc
add
jnp
add
cmp
js
pop
dec
sbb
mov
clc
popa
and
mov
pop
push
inc
mov
jne
std
loopne
into
sub
mov
mov
xchg
rcl
pop
hlt
loop
xlat
and
int
xchg
scas
repz
sti
divb
sub
imul
das
push
sub
sbb
push
xchg
inc
jnp
xchg
movsb
cmp
and
out
mov
jno
paddsb
pop
xchg
adc
lret
fadds
xor
popf
inc
rol
mov
jnp
lret
test
cs
dec
aas
xor
or
negb
lds
daa
jp
movsl
cmpsb
and
imul
mov
cli
out
aad
inc
push
mov
or
aas
cmpsb
arpl
call
pop
shrb
mov
jae
es
lcall
das
jo
sti
cmp
call
push
cmp
les
cmp
inc
sbb
adc
adc
mov
sub
cmp
lahf
movsb
test
lds
mov
pop
mov
shlb
or
jae
lods
cwtl
or
and
fwait
adc
cwtl
add
sbb
in
mov
movl
js
jl
sbb
sbb
imul
sti
sub
adc
sub
fmull
pop
adcl
inc
jmp
std
pop
leave
aam
orb
cmpb
cmpb
movsb
sub
fistpl
dec
imul
push
fisttpll
jp
ret
xchg
decl
pop
outsb
mov
push
iret
leave
popl
test
mov
mov
mov
xchg
sbb
push
jmp
sbb
add
les
sub
sub
mov
inc
ljmp
adcl
mov
mov
mov
jg
lret
loopne
mov
cmpl
sbb
loopne
push
sbb
movsb
movsb
adc
xchg
cmp
insl
xor
push
outsb
and
aad
popa
outsb
imul
cmp
jnp
dec
inc
or
push
xchg
mov
adc
or
shrl
pop
xchg
in
xchg
insb
sbb
sbbb
mov
mov
adc
lcall
ds
or
pop
sbb
pop
in
push
test
cmpsb
and
inc
cmpsb
jle
fidivs
imul
xchg
mov
dec
mov
sbb
incl
pop
leave
jle
sarl
pop
adc
and
ja
jo
or
xchg
pop
adc
xchg
or
scas
insl
mov
jno,pn
xlat
add
pop
shlb
jae
imul
jmp
push
es
ds
and
rorl
adc
js
iret
aas
dec
leave
pop
das
jmp
ret
inc
pusha
pop
push
and
xor
pop
test
fxch
shlb
push
out
or
sub
in
outsl
paddusw
or
sbb
mov
popa
fildl
dec
cmp
mov
scas
in
add
inc
loope
mov
notb
sahf
sub
mov
cs
imul
xchg
pop
pop
xchg
mov
test
je
enter
adc
shlb
les
pusha
jecxz
push
int3
add
loop
inc
pop
push
popf
imul
jo
cmp
adc
fcoms
adc
mov
ljmp
pop
xchg
scas
fistpll
adc
add
jb
pop
pop
inc
inc
movsl
fcoml
fists
addb
out
ja
mov
xor
mov
test
rcrl
test
xchg
mov
xor
add
ds
inc
lods
pop
jecxz
cmp
bound
cwtl
decl
sahf
bound
push
sub
and
fstpt
scas
jbe
lret
orl
inc
and
lea
inc
xor
add
sbb
xor
or
mulb
dec
xchg
popa
pop
int
sbbb
popa
hlt
inc
pop
test
jl
adc
in
std
fwait
lea
adc
mov
dec
bound
insb
pop
sub
sbb
in
inc
popa
stos
sbb
lods
xlat
pop
sbb
lock
push
aad
pop
and
jp
push
pop
or
iret
jb
prefetch
mov
adc
sub
ds
or
scas
add
push
insb
vucomiss
mov
pop
clc
daa
outsb
mov
pop
pop
xchg
cwtl
and
rolb
lea
lret
cmp
push
xchg
int
xadd
inc
xor
or
in
jge
push
mov
repz
pop
shll
dec
xchg
pop
mov
imull
icebp
icebp
sub
cmpsl
cwtl
addb
push
cld
call
push
pop
fldenv
sbb
add
jnp
scas
fsts
adcl
push
pop
dec
scas
jmp
jp
shl
sbb
inc
and
std
aad
pop
mov
xchg
adc
cs
mov
lds
adc
xchg
and
inc
mov
jns
pop
lds
mov
cmp
sbb
push
test
ret
sbb
loope
dec
mov
dec
push
aad
mov
xor
inc
inc
jmp
ja
icebp
add
arpl
xorl
mov
ljmp
jmp
or
push
mov
dec
jno
add
cmp
sbb
push
xor
inc
out
inc
jg
add
lret
fwait
cmp
push
fld
in
cmpsl
aaa
sbb
xchg
addl
stos
test
push
xor
cmp
insl
mov
mov
fistl
testb
sbb
aas
xor
mov
inc
cmp
push
or
pop
sub
out
mov
jg
aam
dec
popf
in
movsl
cmpsb
rcll
dec
clc
push
rcll
push
sbb
fists
pop
sub
in
push
push
loope
jne
outsb
outsl
xchg
pop
leave
pop
js
sbb
jnp
sub
or
dec
insl
mov
scas
mov
inc
or
and
idivb
icebp
movb
mov
dec
lret
lret
or
adc
sub
push
push
mov
xor
jl
xchg
aaa
mov
scas
add
jle
jecxz
jge
imul
push
push
inc
lret
jo
pop
inc
dec
loope
or
das
sbb
imul
stos
sahf
push
pop
cmpsw
dec
sub
mov
int
or
xchg
cmpsl
cltd
xor
pusha
push
push
int3
mov
push
cmp
aaa
jmp
sarb
mov
and
dec
movb
and
pop
sub
adc
xor
cmp
testl
cmp
jbe
push
mov
loope
out
sbb
jbe
in
loop
movsl
push
out
out
jne
or
xlat
std
cmp
loopne
adc
xchg
and
pusha
inc
and
jg
shrl
dec
xor
mov
lahf
stc
push
and
mov
jle
cld
shrl
dec
xor
daa
test
aam
sbb
mov
shrb
pop
mov
ret
dec
xor
mov
stos
xchg
xchg
nop
out
jle
iret
aas
fs
insl
mov
into
mov
mov
into
fbld
sti
dec
mov
mov
adc
lods
dec
bound
or
mov
fisubrl
out
mov
adc
mov
cmp
lcall
cs
push
cmpsl
add
testl
cmc
mov
xor
sar
test
add
roll
mov
jle
jge
enter
loop
punpckhwd
and
outsb
je
sbbb
lods
mov
shrb
jg
into
xor
and
les
push
stos
incb
push
pusha
cmp
daa
shll
es
push
cld
mov
fnsave
sar
aad
inc
in
lahf
and
fadds
stc
or
rol
loopne
test
mov
jp
flds
and
into
or
adc
push
push
rcrl
movsb
jge
stos
sbb
mov
addr16
testb
test
mov
daa
and
fsubrs
jl
mov
pop
sub
icebp
mov
insl
lods
jecxz
dec
xchg
mov
pop
xchg
lcall
mov
scas
mov
ss
dec
loopne
push
and
jge
mov
cld
gs
adc
imul
inc
xchg
jp
inc
jg
dec
inc
gs
lret
jge
push
lcall
push
jbe
mov
push
lds
cmp
push
mov
pop
and
pop
lret
jbe
popf
cmpsl
test
data16
push
stos
shll
jae
scas
inc
jl
je
xchg
xchg
ja
ljmp
cwtl
imul
mov
movsl
imul
mov
lea
imul
push
jbe
mov
lds
nop
jge
aaa
push
out
decl
lods
push
inc
xchg
push
jne
notb
cwtl
es
sbb
mov
fidivs
adc
aad
mov
mov
ret
xchg
xchg
cmp
sbb
subl
dec
push
sahf
out
jnp
stos
fsubl
in
enter
stc
lods
outsb
movsb
lds
test
cmpsb
loopne
and
mov
mov
push
xchg
lock
es
insl
sarl
pop
cmp
rclb
or
mov
inc
and
outsl
ja
fistl
vpaddw
test
or
xchg
mov
pop
out
jnp
out
or
xchg
cmp
add
sub
test
push
sahf
mov
cli
inc
fs
sti
mov
jge
dec
sbb
cmp
aaa
jnp
insl
std
sahf
hlt
mov
jbe
and
or
mov
mov
ss
jnp
test
xchg
ss
ss
xor
loopne
insb
xor
pop
mov
pop
sub
adc
lea
jbe
addl
mov
inc
or
xor
hlt
lods
mov
imul
mov
mov
or
pop
cmp
sbb
rol
jp
jnp
xor
testb
cld
outsb
pop
das
xor
or
les
cmp
push
mov
test
xor
xorps
push
cmp
pop
push
xlat
popl
ljmp
shlb
into
ret
sub
adc
adc
add
sub
jmp
call
fidivrl
fistps
push
stc
ret
jp
into
sbb
push
dec
stos
adc
mov
jns
xchg
add
push
inc
rolb
loop
or
flds
sbb
jmp
sarl
mov
pop
mov
push
and
mov
lea
adc
test
jnp
pop
ret
mov
es
and
pop
lds
xchg
xor
sbb
shlb
xchg
call
add
test
mov
out
test
je
sub
shll
aas
mov
imul
mov
sbb
insl
adc
das
movsl
das
iret
test
rcl
or
mov
inc
outsl
pusha
std
jns
out
popf
lret
sub
frstor
push
add
sbb
xor
js
dec
stc
push
cmp
stos
mov
in
mov
mov
das
lcall
ret
lret
cmpl
mov
fs
lret
mov
rorb
xchg
bound
subb
shlb
out
xchg
sub
jmp
sub
int
lcall
sahf
lock
in
jns
push
cs
cmp
sahf
push
lock
xor
cltd
loop
adc
movsl
and
push
sub
jnp
push
movsb
cmpsl
lret
ja
lret
jmp
push
mov
and
or
enter
daa
out
lods
pop
jge
ss
dec
scas
xchg
imul
movsl
mov
xchg
xor
xorb
cs
push
icebp
xchg
test
lret
cmp
into
sub
add
fisubl
sbb
ret
ucomiss
dec
cmp
loope
rorb
ss
add
jo
push
xor
leave
and
addr16
jb
mov
pop
mov
push
mov
adc
jb
mov
popa
push
jnp
dec
rorb
jno
stc
mov
mov
mov
pusha
stc
dec
xchg
or
inc
mov
daa
mov
loope
pushf
pop
sbb
push
pop
nop
xor
js
mov
and
xchg
fucomp
rorb
js
inc
dec
fsubrl
addb
mov
filds
fstps
push
aad
fwait
jne
rcll
adc
pop
sub
call
stos
jns
daa
mov
sub
mov
mov
aad
xchg
gs
push
insb
addr16
push
cmpsl
shl
xchg
das
jge
xor
xchg
add
outsb
jns
imul
xor
cld
mov
fimull
data16
sub
dec
inc
mov
mov
add
icebp
push
sub
aad
push
sub
dec
adc
adc
in
or
mov
cmp
mov
aad
rolb
jnp
mov
pushf
ds
pop
int3
cmp
mov
and
stos
nop
in
dec
pop
out
pop
push
ret
mov
dec
sub
sarb
xchg
push
jnp
push
out
out
dec
cmp
enter
jnp
jmp
js
stos
sti
cmp
inc
shll
fmull
push
or
jp
sub
mov
jmp
cmp
and
insl
lret
filds
scas
je
outsb
fstp
out
adc
je
inc
sbb
test
cmp
jg
mov
shlb
pop
data16
sbb
add
lea
and
cmc
jmp
ljmp
cmp
movsl
add
or
jbe
adc
scas
add
jno
jbe
xor
jmp
dec
sti
inc
and
sub
push
sti
daa
adc
addr16
adc
xchg
mov
repz
icebp
lret
insb
lcall
inc
pushf
mov
push
push
sub
push
jae
or
flds
gs
jno
xor
and
mov
enter
push
push
aaa
mov
dec
daa
inc
ftst
lea
insl
mov
shll
mov
cmp
inc
andb
fstpt
imul
loop
int
mov
loop
mov
adc
mov
loope
nop
data16
ss
subl
dec
sbb
fs
lock
push
cmc
xor
daa
sub
cmp
jecxz
push
jmp
sbb
jo
adc
sbb
fidivrl
jns
arpl
sbb
mov
xchg
inc
inc
dec
jp
ss
std
icebp
cmpsl
xor
xchg
shr
rol
in
dec
mov
int3
nop
out
adc
addr16
jns
and
push
movsb
lds
dec
mov
jle
ret
loope
jno
outsl
dec
and
lods
icebp
push
xlat
xor
xchg
lahf
loope
xor
dec
mov
int
les
mov
pop
cwtl
pop
je
lcall
testl
mov
add
shrl
lret
rorb
pusha
ja
jmp
outsl
push
mov
dec
lahf
mov
jno
clc
jmp
in
fwait
ja
fistps
xchg
daa
xchg
adc
mov
pop
mov
mov
sbb
add
leave
mov
fcomp
lret
scas
mov
loopne
inc
pop
cli
cmovs
mov
ret
adc
jnp
or
call
outsl
pop
stc
insb
xchg
out
dec
jo
mov
and
jo
pop
push
scas
cmp
test
pop
cmpsb
lock
mov
hlt
pushw
fcmovu
ja
sbb
dec
aam
pop
mov
stos
cwtl
sbb
xchg
lret
repz
inc
outsb
decl
jae
cmpsl
mov
cmpsl
in
fwait
lcall
clc
inc
mov
loopne
enter
dec
ret
mov
mov
lret
adc
repnz
sub
jle
lahf
fcompl
in
pop
lds
cmp
loopne
fldl
push
pushf
imul
cld
inc
dec
movsl
mov
mov
xor
mov
dec
xchg
shrb
data16
or
jg
xor
push
cld
sbb
shll
mov
mov
mov
inc
dec
jns
aad
insl
cmp
or
jge
cmp
shlb
cli
pop
testb
adc
jecxz
jl
push
out
xor
adc
push
mov
mov
fsubl
movsb
xchg
cwtl
pop
cwtl
pop
mov
mov
fcompl
push
mov
data16
cmp
jmp
add
cwtl
xor
scas
outsl
sbb
and
sarb
outsl
lret
arpl
adc
adc
lcall
fcmovne
push
push
sbb
jg
mov
negl
and
and
fildll
xor
inc
negb
fidivrl
aam
imul
sub
xor
fidivrs
out
mov
cmp
push
adc
ds
mov
fs
xchg
sub
pop
mov
dec
mov
push
cmp
ret
jl
sbb
sbb
mov
stos
cli
pop
out
adc
add
xor
movsl
xchg
cmpsb
or
add
mov
out
xchg
std
jnp
pop
xchg
imul
daa
mov
mov
ficompl
lcall
and
fwait
add
pushf
dec
int3
ret
add
xchg
jp
add
outsl
pop
data16
fisubl
sbb
cmpsl
cmpsb
mov
sbb
inc
xchg
push
push
fildll
xchg
push
movsb
in
lret
ljmp
fwait
push
cmpsl
or
sti
jnp
das
imul
arpl
mov
fsubs
inc
cld
mov
add
daa
cmp
dec
xorb
mov
dec
movsb
arpl
insl
data16
clc
out
out
cmpsl
ret
jne
sbb
test
push
adc
std
mov
sbb
dec
movsl
aaa
loope
push
cld
in
addr16
loopne
or
xchg
sub
xchg
sti
aaa
and
ret
aas
int3
rorl
mov
mov
jecxz
adc
idivl
ja
jmp
add
popa
mov
je
inc
iret
push
ja
push
lds
sbb
aad
lods
mov
mov
and
or
sub
fstpt
mov
mov
cmpsl
scas
dec
fnstcw
mov
aas
cmp
outsl
or
ret
pand
jns
xchg
popa
adc
sti
sub
sahf
shrl
dec
lods
movsb
jno
mov
jo
loope
cmc
push
out
cld
sbb
dec
jecxz
hlt
jg
test
lea
ret
test
inc
dec
test
inc
or
dec
fwait
or
rorl
push
in
pushf
js
dec
and
jbe
fidivrl
inc
dec
sahf
test
test
xorb
or
mov
add
add
or
es
loopnew
aas
push
data16
ds
pushf
xor
mov
push
inc
sub
fwait
push
mov
out
scas
sub
dec
add
fsubrl
movsb
xchg
mov
cmp
xor
clc
cmpxchg
inc
mov
xchg
scas
push
sub
sbb
rcll
sbb
leave
iret
out
mov
in
xor
ja
add
xchg
enter
pop
je
shlb
mov
cwtl
cmp
mov
jno
inc
inc
ja
xchg
sahf
lods
lret
sar
xor
fwait
mov
addl
or
hlt
pop
ja
subb
xchg
ret
fcoms
lahf
pop
push
in
mov
inc
pop
fimuls
xchg
jbe
call
jne
cmp
push
sarl
xor
out
stc
add
and
cmc
scas
mov
jle
pushf
cs
pop
fsubl
sub
test
aad
xor
push
in
xchg
pop
inc
jl
and
pusha
pop
mov
push
jno
pop
pop
jne
pop
ja
inc
rclb
test
sub
insb
lds
inc
jns
and
cmp
push
sti
adcb
iret
xchg
scas
loopne
test
inc
sahf
cmpsl
jg
mov
ret
mov
cmp
sbb
push
fdivl
outsb
andb
or
cs
clc
loope
fdivrl
pusha
mov
xlat
sbb
xchg
flds
call
and
pop
pop
push
aaa
mov
outsl
lret
jo
movsb
insl
sub
xor
movsl
fsubl
sbb
sti
xor
jg
jecxz
insl
aas
vaddss
cmc
push
notb
insb
jb
xor
or
cmpsl
repnz
loopne
popa
icebp
adc
or
push
es
xlat
xchg
outsb
faddl
ret
mov
sub
and
fcoml
adc
mov
inc
inc
clc
mov
lret
fs
repz
xchg
nop
dec
je
repz
xchg
sbb
push
scas
push
mov
rcrl
mov
pop
scas
or
sqrtps
adc
sbb
imul
mov
mov
xor
sbb
test
imul
aaa
in
cmc
pop
shlb
xchg
pop
cwtl
mov
lods
outsb
push
out
mov
xor
sahf
xchg
ljmp
call
xchg
mov
mov
bound
lods
xchg
out
fstps
daa
addb
js
out
enter
xchg
adc
insb
mov
sub
dec
push
xchg
fcompl
sbb
push
push
scas
push
and
jmp
pushaw
scas
addr16
mov
les
push
cmpsl
add
push
cltd
dec
ror
jmp
push
enter
test
popf
xchg
mov
mov
dec
mov
dec
sub
out
pop
xchg
mov
inc
str
xlat
sbb
std
lret
push
inc
es
scas
mov
loopne
or
and
loop
out
je
jne
lret
sbb
mov
jno
xor
idivb
push
mov
xor
pusha
loopne
fmuls
mov
jae
jmp
add
outsl
inc
xlat
test
sbbb
cli
xchg
lock
xchg
adcb
lods
inc
push
pop
lea
add
pop
int
shrb
or
pop
xor
cmpsl
and
lcall
xchg
or
out
jns
repnz
cmp
jnp
test
nop
ficompl
nop
sbb
hlt
jle
xlat
push
mov
mov
jae
sbb
mov
les
daa
sbb
inc
inc
lret
inc
inc
jae
or
imulb
pop
fs
jae
scas
pop
sbb
jnp
sub
ss
jle
lock
inc
ja
shll
or
in
pop
int
iret
or
and
loop
mov
js
or
mov
cmp
push
repz
jmp
adc
push
lcall
fnstenv
popf
pop
cli
jge
sbb
mov
adc
jb
sub
or
inc
jnp
faddl
jns
add
xchg
lret
cmp
pop
out
lods
ret
fmuls
lods
dec
aad
add
pop
adc
mov
insl
inc
mov
and
and
and
movl
add
jae
xchg
in
lds
pop
mov
push
push
ret
stos
rcrl
rcrl
and
sahf
icebp
icebp
enter
adc
xor
call
fwait
inc
mov
stc
fsub
xchg
xchg
sub
sbb
out
test
ljmp
xor
mov
inc
pop
fisubrs
std
jne
jl
std
bound
je
xchg
out
pop
daa
std
popa
push
jmp
and
or
in
mov
mov
inc
mov
rcrl
rcl
and
lock
add
fisubrl
dec
xchg
jge
ss
leave
xchg
sbb
cltd
xchg
xchg
int
pop
and
in
loopne
pop
outsb
add
mov
test
out
xchg
push
xchg
cmp
je
ret
pop
in
mov
dec
jb
cmpsl
sbb
fwait
mov
jl
mov
gs
ret
gs
bound
add
movsb
vpaddusb
int
mov
jb
or
or
popa
or
test
jmp
or
cmpsb
push
out
fcom
out
leave
dec
aas
push
ss
xchg
std
out
lahf
jns
cmpsb
mov
fdivr
xor
insl
mov
leave
mov
cmpsb
js
arpl
xor
repnz
movsb
inc
xchg
cmp
sbb
add
xchg
enter
dec
and
dec
cmpsl
test
int3
xor
xchg
sbb
push
negl
data16
xor
mov
jbe
sarb
arpl
in
out
mov
into
out
or
fisubs
shll
push
push
notl
mov
inc
lret
es
rcl
mov
pop
inc
or
outsb
xchg
mov
inc
scas
bound
inc
and
add
popf
test
pop
sub
sbb
fcoml
cmp
xchg
lahf
imul
in
lahf
into
and
test
dec
jmp
imul
add
mov
or
cld
mov
out
sbb
into
rcrl
add
mov
fwait
mov
mov
ljmp
sbb
jno
and
adcl
jg
jbe
sbb
mov
adc
dec
stc
inc
mov
push
or
int
pop
int3
call
ror
popa
das
shll
int
mov
sub
mov
sub
clc
fistl
popf
sbb
lds
xchg
xor
dec
fdivl
xor
imul
div
pop
movsl
adc
arpl
xlat
add
or
imul
out
push
test
sbb
mov
sbb
cmc
movsb
add
adc
or
sbb
pop
push
repz
fdivl
fwait
rcrb
insl
mov
mov
test
sub
xor
cmp
insl
lock
imul
xor
sbb
push
cmp
ss
ret
cs
mov
aad
rorl
mov
pop
and
fwait
popa
shll
xchg
xor
cmp
and
or
inc
mov
mov
adc
mov
fstp
xor
xchg
ja
mov
orb
enter
loopne
icebp
pusha
rcrl
loop
pop
pop
mov
xor
gs
out
out
out
test
xor
loopne
sbb
scas
movsl
les
sub
popf
ds
mov
sti
sarl
dec
lret
and
cmp
cmp
mov
fs
inc
ljmp
dec
xor
insb
hlt
cmp
cmc
xchg
and
out
mov
cmp
test
mov
andl
popf
clc
xor
inc
adc
or
call
divl
xchg
test
sub
dec
in
cld
pop
dec
xor
leave
je
gs
cmpl
and
push
and
inc
hlt
js
ja
loope
subb
sbb
fs
mov
mov
mov
dec
testb
jmp
dec
cwtl
add
cmp
mov
aad
lods
and
data16
sbb
mov
xor
fimull
mov
and
frstor
loope
loope
addr16
lret
sub
and
hlt
sahf
xor
aaa
mov
or
hlt
std
sbb
popa
out
loop
sub
cmp
and
dec
cmpsb
sbb
lds
pusha
xchg
cmpsl
sbb
dec
push
mov
loope
stos
and
sub
add
shlb
adc
push
data16
push
lahf
xchg
loopne
mov
sbb
mov
and
sbb
mov
popf
imul
or
adc
mov
jnp
mull
js
andl
iret
in
ja
jl
mov
dec
das
xor
mov
fcomps
or
push
or
jmp
in
mov
cmp
out
ss
pop
inc
ja
pusha
inc
add
outsl
and
cmp
pop
adc
fsub
mov
lahf
mov
fcmove
bound
loop
xor
ret
xchg
mov
neg
or
cld
push
jb
and
sti
test
xor
daa
mov
cmc
mov
lea
and
mov
js
ja
inc
inc
add
cwtd
in
jo
ss
lods
aas
loop
aaa
xchg
clc
ret
fs
pop
test
dec
jmp
movmskps
mov
xor
add
aaa
or
lock
es
leave
ror
xchg
cmp
adc
hlt
xchg
mov
shl
inc
mov
pushf
mov
mov
fs
dec
sub
icebp
iret
mov
clc
or
dec
mov
adc
sub
push
sub
inc
aam
dec
repnz
jmp
cmp
stos
fldt
shlw
push
lods
mov
lods
in
mov
test
ret
and
sub
cmc
ljmp
stos
arpl
jno
xor
dec
adc
into
ret
cmp
loop
push
adc
imul
mov
mov
in
dec
sub
mov
ds
outsl
or
add
jae
cmp
pop
das
icebp
cmc
mulb
sbb
dec
stc
imul
sub
sbb
outsb
lea
int
cmp
andb
inc
mov
pop
jge
jmp
inc
sub
dec
popa
adc
cmp
cs
dec
stc
jge
mov
jg
es
mov
or
xlat
fwait
lcall
movsb
push
enter
push
jnp
les
mov
mov
adc
insb
dec
pop
jg
sbb
jle
and
push
cmp
xchg
xor
lods
add
cmpsb
xchg
dec
push
add
and
ljmp
daa
mov
lds
mov
push
mov
loope
mov
leave
jo
aaa
data16
jns
pop
push
rclb
xchg
cld
jnp
test
nop
es
jp
mov
inc
insb
xor
jmp
adc
int3
stos
outsl
outsb
paddw
mov
pusha
cmpsl
mov
pop
cmpsb
fisttps
sub
jle
xlat
lock
lahf
mov
out
cmpsb
jmp
fsts
fcmovnbe
popl
leave
loopne
pop
fwait
or
xlat
cld
cmc
daa
fadd
xor
aas
es
lcall
inc
or
mov
out
sub
cwtl
jl
dec
scas
out
sbb
out
int3
es
push
jno
adc
cs
and
dec
add
dec
mov
xor
lret
ja
inc
dec
pop
in
addb
cmp
outsl
and
sub
repz
out
xchg
mov
jb
inc
jecxz
xchg
lcall
mov
cmp
cltd
test
gs
xor
mov
ret
pop
mov
jo
lock
mov
js
ds
jbe
jne
jb
jne
cmp
cmp
call
xor
dec
xchg
out
mov
sub
imul
push
lds
xor
stos
pop
lock
cmp
sti
cmpsb
dec
push
jmp
adc
pop
push
stc
loop
icebp
mov
lods
pop
and
xor
push
cmpsb
xchg
and
cltd
mov
in
and
mov
flds
inc
xlat
dec
mull
mov
repz
insb
pop
sbb
mov
jle
dec
fildll
jecxz
add
lahf
pop
and
mov
cmp
cmpsl
scas
jle
cld
mov
push
lret
out
jmp
jbe
mov
inc
notl
push
outsb
movsb
and
lret
cltd
push
das
mov
sahf
push
jo
fcmovnu
and
xor
cltd
jno
dec
mov
xchg
insl
cmpl
jns
mov
imul
mov
stc
mov
sub
inc
aad
push
cwtl
or
addr16
cmc
dec
add
add
stos
std
pop
sar
insb
mov
jecxz
push
jnp
mov
add
push
jbe
xchg
cmpsl
xchg
pop
xor
mov
adc
mov
subb
bound
mov
cmpsl
orb
iret
dec
aaa
pop
or
in
int
sub
jle
loop
mulb
imul
xor
pop
sub
cmp
shl
and
hlt
pop
inc
push
lcall
fadds
push
gs
enter
cmpsb
out
mov
shlb
pusha
shlb
addr16
sti
mov
cmpsl
pop
nop
lods
aad
aas
push
fisttpll
and
add
test
jecxz
test
inc
pop
sbb
mov
lock
movnti
iret
push
dec
mov
dec
mov
cli
arpl
xor
in
out
jbe
shr
outsl
fdivrp
aas
or
leave
lret
sbb
pop
lds
aad
fs
bound
mov
sbb
jle
jge
xchg
scas
bound
cltd
pop
imul
int3
xchg
mov
inc
jmp
scas
xchg
xor
adc
insl
lods
outsl
je
fwait
adc
jae
call
in
sarl
data16
daa
movsw
adc
out
cwtl
scas
inc
test
popa
mov
out
testl
adc
jns
or
xchg
xlat
add
mov
inc
xchg
test
addb
shrb
mov
enter
cmpsl
repz
fwait
dec
xor
adc
ja
xchg
call
adc
mov
xchg
test
ja
pusha
pop
and
orl
in
dec
adc
add
push
ss
aaa
push
jns
popa
adc
movb
pop
dec
lds
loope
push
stc
jo
xor
adc
mov
fstpt
shl
lahf
psubsb
inc
mov
fisubl
imul
in
aad
pusha
cmpsb
mov
int
shl
jae
fidivrl
in
cwtl
test
repnz
or
repz
sub
cmp
aas
pop
enter
lahf
pop
ds
cmp
add
popf
orb
or
shl
repnz
out
sti
sti
cltd
ret
add
icebp
les
sti
push
les
fwait
iret
daa
lods
pop
and
and
clc
push
cmp
push
dec
and
test
push
push
sbb
xchg
mov
pop
cmp
fnstcw
cmp
insl
fisttps
out
mov
psrld
sbb
sub
int
pop
mov
inc
rclb
loopne
call
mov
outsb
fisubl
sbbl
repnz
insb
cmp
das
push
mov
test
pop
mov
xor
imul
mov
mov
adc
jb
inc
push
adc
ror
mov
or
jnp
rcr
les
mov
jo
sub
jmp
xor
cwtl
xchg
dec
or
and
xchg
or
add
or
sbb
flds
sbb
xchg
mov
or
push
dec
icebp
dec
js
jns
ds
jne
push
xlat
xchg
mov
dec
push
sub
xchg
inc
mov
pop
lret
adc
add
push
and
rcll
das
cmp
pop
cmp
lret
in
mov
frstor
movsb
cmp
jge
enter
sub
mov
addr16
sbb
adc
and
in
pop
inc
jae
add
dec
mov
lea
pop
mov
pusha
loope
lds
push
hlt
loope
push
fiadds
dec
test
jae
paddsb
inc
xchg
fsubl
push
js
lret
or
loope
inc
je
iret
sub
push
les
fld1
mov
insb
mov
fstpl
clc
ret
daa
cmpsb
lahf
lret
imul
repnz
xchg
xchg
push
cld
sbb
mov
xchg
bound
fdivl
test
fsubrl
orl
xchg
push
push
sbb
fsubl
ret
ja
fidivl
icebp
call
mov
dec
jae
add
jae
xchg
sbbl
pusha
add
lret
lea
das
jo
int3
mov
loop
jp
leave
dec
or
lea
shll
jge
dec
xor
pop
pop
mov
ss
xor
adc
mov
fimuls
dec
inc
fidivrl
insb
adc
dec
jbe
or
mov
jl
cmp
push
fsts
fwait
mov
clc
or
sub
dec
lea
cmpb
gs
sti
fisubrl
sbb
cmpsl
int
aaa
iret
cli
out
mov
mov
xchg
jecxz
mov
xor
xchg
lds
clc
pop
xchg
ss
mov
pushf
xlat
repz
lret
in
jns
out
and
jg
sub
mov
xor
stos
pop
je
repz
pop
mov
scas
loop
ljmp
xchg
mov
std
sbb
jno
xor
dec
jne
dec
pop
sub
lds
mov
pop
scas
cs
imul
mov
mov
test
ret
lea
adc
cmp
push
sbb
in
jb
int
arpl
and
push
rorl
repnz
mov
dec
pop
mov
fwait
je
xchg
jb
mov
fwait
and
sbb
adc
add
cmc
sub
jg
jnp
ss
aam
push
or
repz
clc
lcall
faddl
mov
fdivl
loope
rolb
cld
jl
or
sub
push
xchg
lea
lret
sarb
sti
loopne
fdivs
loope
lret
daa
subb
add
inc
inc
xor
add
scas
ss
imul
or
test
cld
in
in
outsl
inc
cmp
int3
sub
dec
xor
inc
inc
and
movsl
pop
jle
mov
or
add
push
jle
pop
mov
fnstenv
cwtl
div
repz
orb
insl
sub
dec
cmp
jg
pushf
xchg
lods
xor
push
enter
xchg
ffree
movsl
xchg
int3
inc
sub
xchg
lds
xor
push
pop
adc
into
enter
push
fcoms
push
fisttpl
mov
lret
mov
cmpsb
cmp
jae
or
aam
dec
out
sub
sub
lea
push
mov
adc
add
and
in
jns
mov
xchg
and
mov
push
pusha
mov
mov
mov
mov
add
sarl
repz
push
int
push
mov
add
xchg
andl
mov
hlt
add
xchg
insb
inc
push
outsb
and
xchg
jo
ja
testb
mov
xchg
adc
pop
sbb
xchg
mov
das
stc
test
pop
mov
aas
xchg
xchg
clc
sbb
in
or
outsb
xlat
std
mov
mov
jo
jmp
pop
in
repnz
negl
mov
mov
pop
cltd
mov
sbb
and
add
cmc
jecxz
add
xchg
inc
cmp
shrl
xchg
sbb
pop
and
jo
inc
loopne
test
cmp
hlt
dec
jp
icebp
daa
mov
nop
cmp
popf
aas
leave
cmp
test
jp
int
or
fbld
mov
or
mov
push
es
add
adc
jno
out
pop
xchg
mov
adc
xchg
dec
cmp
les
test
ret
push
repnz
out
inc
fisttps
leave
cmp
scas
xchg
pop
xlat
stos
jno
imul
std
push
mov
push
ficomps
mov
xchg
pop
dec
xor
into
push
int3
test
ret
nop
cmp
dec
fsubp
jnp
or
mov
mov
fimuls
ret
iret
push
ret
or
cli
sbb
fwait
cmp
bound
in
cli
and
leave
xor
xchg
inc
or
stos
jae
ds
inc
ffree
push
cltd
push
cs
mov
or
mov
lods
sbb
sbb
jl
and
inc
dec
add
mov
mov
les
mov
cmpsl
xchg
outsl
ficoml
mov
push
xor
dec
xchg
test
cmp
mov
mov
xchg
sbb
outsl
jl
sbb
aas
ja
xor
ror
incb
mov
mov
mov
pop
mov
cs
lret
xchg
pop
jg
jno
cli
cmp
sub
and
test
repnz
nop
fcmovbe
jecxz
push
cmp
std
inc
and
cmp
insl
addr16
push
das
out
mov
test
inc
je
and
ret
ret
clc
cmp
movsb
add
mov
pop
hlt
cmp
movsb
insb
jle
aas
test
mov
cmp
inc
xor
adc
mov
jmp
xor
mov
jb
mov
scas
jno
cmp
add
aaa
add
mov
mov
sahf
adc
dec
adc
das
aam
pop
adc
mov
popa
pop
push
jno
pop
jp
push
xchg
mov
test
dec
or
xlat
mov
sbb
sub
hlt
out
orb
leave
dec
lock
pop
mov
popa
jo
inc
or
stos
sbb
out
push
sbb
pop
xchg
int
stos
sub
adc
mov
fimull
das
mov
pop
dec
out
and
xchg
push
push
cs
popf
sbb
push
int3
mov
cwtl
lods
loope
lock
int3
sbb
mov
in
iret
mov
pop
mov
mov
lret
repnz
cmp
push
or
loope
inc
and
out
and
data16
clc
add
inc
mov
push
jne
cli
popa
and
adcl
and
or
insb
inc
jecxz
jl
mov
fisttpll
aas
arpl
fimull
cmpsb
dec
pusha
shlb
int
scas
xchg
cmp
subb
addr16
add
or
dec
bound
jno
pop
cmpsb
aam
test
adc
jp
filds
jl
xor
in
ret
movsb
lock
mov
out
xchg
push
faddp
pop
rcrl
mov
mov
lahf
stos
out
xchg
sub
cmp
and
sub
inc
lahf
push
ds
inc
ljmp
push
clc
jp
or
lea
hlt
jp
sahf
add
shlb
lret
scas
mov
pushf
cmp
popf
add
popf
lods
cmp
rcrl
push
cmp
mov
cs
mov
add
pop
les
push
xlat
outsl
mov
adcb
test
cmpsl
xor
js
sub
mov
mov
fwait
aad
mov
movsl
or
jns
pop
repnz
loope
outsb
add
sub
adc
or
fistpll
jecxz
or
inc
aas
cld
mov
xor
push
jg
cmp
add
rcrb
pop
ss
mov
int
fs
mov
test
sbb
iret
xchg
xor
pop
or
lds
adc
sbb
sub
and
pop
jp
fwait
cmpb
xor
imul
pop
push
cmp
inc
add
ljmp
movsl
popa
bound
es
pushf
adc
push
lods
cmp
jecxz
push
aaa
jge
and
imul
mov
inc
jg
int
push
test
pushf
out
adc
subl
out
push
mov
push
pop
insl
xchg
outsl
repnz
in
jg
adc
aas
test
imul
pop
in
rol
adc
insb
mov
pop
dec
inc
mov
call
xor
lods
int3
lock
add
aad
inc
mov
popa
dec
das
sbbb
loop
call
call
and
mov
xor
mov
or
sub
mov
dec
out
rcrb
mov
and
mov
and
jl
sub
or
mov
pusha
dec
sbb
shll
sbbb
pusha
test
add
pop
jbe
nop
pop
sub
lcall
cmpsl
and
dec
fwait
jge
adc
dec
mov
lock
xchg
cmpsl
lcall
ds
push
inc
jg
mov
arpl
and
xchg
jl,pn
push
leave
pushf
jns
in
add
sub
rcll
jno
pop
adc
lcall
xchg
jae
sub
cwtl
mov
mov
inc
or
les
sub
jg
and
testb
bswap
repz
mov
neg
lahf
in
aaa
mov
cmpb
or
and
lock
cvtps2pd
sbb
xchg
mov
int3
leave
psrld
test
lock
out
push
pusha
sbbb
leave
mov
negl
dec
sbb
jmp
jae
ljmp
xchg
lods
aaa
push
push
jne
repz
insl
mov
add
cmp
pop
subb
inc
add
dec
mov
dec
mov
or
sbb
jle
fdivrp
pushf
push
call
pop
dec
cmp
or
and
rcll
dec
mov
stos
pop
int
adc
adc
and
fidivrl
pop
add
inc
or
pop
or
fstpl
and
subb
mov
sub
aad
push
jg
pop
sub
ds
pop
xchg
push
mov
mov
sub
out
and
inc
mov
jp
mov
icebp
inc
xchg
fldl
addr16
mov
cli
popa
insl
ja
stc
fldpi
fistps
sbb
push
sub
jge,pn
stos
mov
fst
pop
cltd
rcll
mov
fnsave
fsubrl
mov
sti
jnp
dec
sub
or
jne
lahf
enter
dec
leave
nop
inc
or
inc
lret
clc
in
push
fildl
fstps
jns
mov
clc
pusha
add
aas
in
arpl
imul
jle
pop
mov
adc
mov
mov
std
repz
outsb
mov
mov
dec
add
out
faddl
adc
sar
gs
jnp
shrl
arpl
mov
fisubl
paddsb
je
inc
fdiv
mov
cmp
shrl
leave
es
mov
adc
sbb
cmp
adc
test
pushl
push
mov
fildll
dec
push
call
lcall
push
lds
mov
lcall
mov
sbb
push
repz
xor
mov
cmpsb
fwait
pop
xchg
sbb
mov
sub
maskmovq
sti
adc
aad
jae
insb
pop
jbe
jne
push
adc
dec
btc
mov
dec
add
mov
jno
cmpsb
daa
inc
ja
loope
repz
inc
push
cmpsl
mov
jge
or
mov
xchg
cmp
ret
push
hlt
iret
ljmp
sbb
sbb
push
lret
outsb
fs
dec
mov
mov
or
sbb
out
lods
pop
icebp
cmc
xor
push
nop
add
add
mov
rclb
or
adc
scas
dec
iret
sub
or
lock
test
fdivrl
pop
adc
jns
je
stc
ss
push
or
aad
addb
cli
xlat
test
ja
lods
lock
sub
addl
aas
aad
mov
mov
mov
lahf
mov
dec
nop
jbe
out
jp
mov
jmp
or
lret
rorl
out
dec
mov
sub
loop
pop
inc
lock
es
pop
mov
enter
mov
dec
pop
jmp
and
test
bound
xchg
xor
movsb
mov
and
xor
out
std
add
mov
or
test
out
sbb
pop
push
dec
lret
sub
ja
push
sbb
jb
jp,pn
push
mov
sar
daa
adc
out
arpl
mov
lret
dec
or
test
pop
gs
xorl
test
cmp
lret
jle
and
mov
cmpl
cmpl
push
and
movsl
jecxz
push
sbb
into
sbb
inc
sbb
dec
jmp
movhps
add
sub
ljmp
push
push
sarb
xchg
lods
xchg
push
mov
outsb
dec
out
idivl
ja
or
ja
pop
test
mov
mov
pop
xor
ss
sub
ljmp
mov
out
test
sub
inc
out
mov
sarl
imul
fcompl
add
sub
xchg
dec
adc
pop
jae
push
add
sub
es
and
adc
gs
fsubrs
jl
add
lret
mov
divb
mov
les
das
inc
lret
popf
dec
out
jne
lea
sbb
mov
imul
jns
adc
add
es
pushw
scas
pop
mov
ljmp
lret
jae
push
mov
jl
mov
xchg
jb
rorb
cld
lods
mov
sbb
add
imul
or
stos
mov
lret
lock
insb
push
push
and
addr16
and
popl
aaa
jns
add
aas
lds
cmp
sbb
int
xchg
lret
repz
testb
mov
push
jae
or
vmovmskpd
cmp
fdivs
add
lret
and
xchg
rcrl
arpl
mov
mov
icebp
xchg
arpl
cld
and
jecxz
push
daa
push
dec
mov
das
pushf
aam
add
insl
int
mov
adc
jnp
sahf
pop
outsl
leave
out
inc
aaa
shrl
sub
push
mov
sbb
sbb
xor
cmc
push
xchg
sub
jge
dec
not
fcomps
jne
hlt
enter
ret
cmp
cmp
gs
xor
fsubrl
jmp
mov
jmp
and
loop
negl
inc
mov
int
enter
or
or
dec
xor
and
sti
daa
pushf
push
push
mov
push
pop
lahf
rcl
mov
mov
inc
jbe
inc
lcall
or
cmpsl
xor
dec
jmp
dec
call
pop
sub
cld
inc
div
mov
in
dec
push
addr16
in
scas
je
nop
stc
daa
std
cltd
mov
dec
lret
aad
mov
movsl
leave
add
cmpsl
test
jp
fldcw
outsl
xchg
ljmp
sub
hlt
pop
popa
or
xchg
and
loope
addr16
outsb
jmp
add
mov
das
mov
inc
sub
or
cld
in
imul
les
bound
jmp
clc
bound
add
std
lret
pop
xor
jecxz
cmp
mov
daa
in
sbb
sub
std
into
cmpsb
xor
stos
pop
mov
dec
es
push
js
and
adc
outsb
aaa
jb
fistl
xor
dec
ja
scas
int
popw
mov
cmp
mov
loopne
push
pop
or
scas
jb
mov
repnz
push
mov
scas
push
cltd
roll
testb
stc
jno
adc
out
pop
sar
xchg
cli
test
xlat
iret
aad
mov
push
mulb
test
jae
push
cmp
call
es
cwtl
xchg
sbb
pusha
add
outsl
and
adc
pop
adc
sub
mov
icebp
lahf
sbb
pusha
push
inc
mov
xor
imull
push
lahf
mov
movl
movsl
aad
cld
ss
jo
fistl
les
inc
idivl
sarl
fs
and
inc
inc
sbb
lcall
sbb
iret
out
push
into
mov
pop
ja
add
sbb
sbb
lods
push
loope
fcoml
loopne
adc
cmc
fcoms
xchg
test
fnop
xlat
cmc
push
xor
pop
in
xor
fstpt
jo
sbb
fldenv
aad
in
in
adc
xchg
pop
in
cmp
mov
bound
jmp
roll
lock
loopne
push
test
test
mov
in
popa
adc
pop
cmp
stos
sbb
in
dec
adc
sbb
jcxz
iret
fsubrs
xchg
sub
jmp
cmp
jg
cmp
adc
clc
xchg
push
daa
std
xor
jge
sub
xchg
cmp
dec
ror
and
mov
ret
xor
sahf
pop
inc
loope
push
adc
inc
hlt
add
leave
push
outsl
push
jo
lahf
pop
push
into
add
pop
ds
aam
or
cmp
mov
popf
inc
jmp
xchg
repnz
add
shll
pop
add
and
add
jp
je
jb
pusha
lea
mov
adc
lcall
fcmovnb
or
repnz
pushf
pop
xchg
xchg
or
pushf
iret
fsts
mov
mov
stos
xchg
arpl
mov
cmpsb
lea
push
adc
lods
aam
push
jle
add
dec
fwait
dec
jb
inc
mov
push
enter
aas
fldcw
stc
add
dec
xchg
data16
cmp
arpl
pop
lods
xor
jmp
push
mov
jo
aad
or
arpl
aam
faddl
gs
stc
cmc
mov
xor
adc
cmpsb
je
jecxz
icebp
mov
lock
mov
es
nop
test
pop
test
movsl
lcall
pop
cmpsb
aam
loopne
and
xchg
jae
mov
and
out
xchg
add
push
cmp
sbb
xchg
dec
sub
ljmp
sbb
mov
lods
xchg
call
or
test
lds
in
es
mov
push
add
add
loope
inc
cld
ffreep
mov
sub
cltd
ret
and
sbb
scas
add
and
xor
daa
testl
fldenv
inc
fwait
cmc
dec
mov
ds
fstps
repnz
pop
and
lods
insl
cli
push
add
testb
jg
loop
ret
adc
fnstcw
and
xchg
push
dec
icebp
nop
mov
jnp
sbb
stc
mov
pop
push
je
mov
pop
ret
xlat
test
cwtl
cmp
hlt
enter
mov
out
cli
cmc
les
and
out
in
dec
mov
jge
jb
pop
push
popf
lods
data16
fistps
pop
mov
cmpsb
mov
das
xor
sub
cmp
mov
mov
mov
jp
ds
adc
mov
jnp
pop
adc
aaa
cld
jmp
cmp
mov
ja
inc
test
in
sarl
cwtl
das
pop
lcall
pop
mov
loope
stos
push
lret
lret
jno
jge
jno
fcmove
xor
sarb
mov
lods
pop
push
and
xchg
push
dec
fs
sub
push
lcall
aas
roll
mov
shr
jle
xchg
and
add
jecxz
dec
outsl
pop
xchg
fistpl
loope
sub
fildll
mov
jne
cmp
out
in
lock
test
in
mov
and
sbb
fwait
cmp
out
icebp
js
cmp
fs
push
sub
or
sbb
pop
pop
inc
cmp
pop
aas
iret
into
in
xor
mov
jnp
jmp
in
xor
daa
adc
xor
sbb
mov
xchg
mov
push
mov
pop
ja
lcall
jl
je
imul
and
mov
xlat
sub
lods
mov
xchg
inc
jg
inc
cmp
mov
push
sub
in
je
fbld
jge
push
cmp
pop
shlb
fdivrp
pusha
fisttpll
fdivs
cs
mov
pop
mov
lret
stc
mov
sbb
dec
hlt
adc
jnp
out
sub
test
rcr
int
jle
out
cmpsb
jmp
inc
dec
les
xor
sub
add
les
add
adc
add
sti
xchg
mov
and
xchg
iret
add
lret
mov
mov
test
mov
mov
push
clc
jnp
xchg
or
sub
adc
in
lds
bound
cmpl
mov
jne
in
mov
sub
and
xor
mov
outsl
idiv
sbb
adc
jnp
lods
or
or
ret
push
fists
mov
into
inc
insb
scas
int3
cmc
and
mov
mov
add
and
ret
subb
adc
pop
sbb
cld
dec
mov
inc
push
hlt
test
adc
adcb
push
pop
aam
mov
inc
jle
adc
aaa
mov
mov
pop
mov
jg
bnd
xchg
push
cmpsb
aam
cld
dec
or
aad
aam
movaps
mov
jb
jno
mov
push
mov
fmul
sbb
inc
les
lea
fsub
mov
lods
inc
dec
xor
out
or
cmp
push
loope
nop
or
pop
mov
push
rcrl
lock
mov
inc
mov
clc
sub
test
mov
data16
js
cmp
adc
mov
lods
cmp
les
adcb
repz
loop
push
divb
inc
push
popf
insb
cmp
dec
mov
sahf
popf
mov
gs
cmp
cld
sub
shrl
push
lea
aad
xchg
in
daa
lods
cld
stc
aaa
fisubrs
mov
pop
sbb
dec
add
bound
push
stc
dec
stos
pop
loop
lcall
mov
pop
mov
loop
ds
dec
sub
stos
in
lods
push
jbe,pn
movsl
subl
ljmp
cwtl
inc
pop
mov
mov
jge
inc
sahf
and
gs
pop
adc
pop
lret
jno
push
xchg
and
xor
jae
cmp
push
scas
in
sarl
inc
js
push
cld
pop
mov
inc
or
mov
lods
aas
xchg
add
pop
imul
mov
dec
in
push
pop
hlt
sub
inc
lcall
sub
dec
das
jae
pop
push
roll
test
mov
dec
aam
test
dec
in
sub
stos
cmp
sub
cmp
mov
mov
jbe
and
out
sub
lea
insl
ficoml
add
aad
mov
out
aad
dec
xor
xchg
lret
mov
popf
ret
cmp
xor
push
jmp
outsl
mov
dec
aas
das
lcall
movsl
aam
into
rcll
xor
shll
sub
dec
arpl
lcall
into
mov
js
xor
pop
aaa
jne
push
push
lea
jecxz
aam
ss
inc
push
cli
mov
int
das
icebp
fiaddl
cmpl
dec
pop
xchg
test
lock
add
lcall
or
in
xchg
mov
arpl
xchg
insl
popa
push
dec
push
loopne
movsl
imul
cmc
sahf
mov
mov
cmp
mov
dec
je
test
xlat
fldt
repnz
cmp
in
mov
cmp
xchg
mov
fdivl
pop
icebp
xlat
mov
xchg
cmp
or
push
push
adc
and
pop
add
bound
test
mov
fcoml
adc
out
xchg
dec
addl
mov
sub
mov
inc
movsb
leave
frstor
pop
fiaddl
stc
pop
shlb
into
nop
pop
xchg
fs
jns
xchg
imul
insb
rorl
lods
dec
outsb
mov
xlat
push
dec
mov
push
xchg
pop
xchg
testl
fwait
rcrb
xchg
inc
xchg
lods
iret
call
pop
add
or
je
das
jns
and
call
popf
add
fdivrl
adc
loopne
cmp
lcall
in
sub
xor
xlat
pop
movsb
cmpsb
xorb
xor
push
mov
in
inc
jmp
mov
adc
loope
mov
mov
outsl
pop
test
jb
xor
inc
test
adcb
popf
fucom
xlat
loope
mov
push
push
xor
inc
dec
mov
dec
jo
mov
inc
cmc
imul
cmc
pop
inc
add
pop
cs
pop
imull
orl
xor
mov
cmp
push
cmpsl
dec
cmp
mov
outsb
pop
clc
cmp
decb
add
popa
mov
sbb
das
iret
inc
addb
cmpsb
ret
test
shll
lock
sub
add
repnz
arpl
out
push
daa
loope
adc
lock
lea
lret
mov
lds
add
fisttps
mov
lret
or
jns
movsb
inc
data16
jne
or
add
dec
ret
es
icebp
push
dec
pop
xor
das
pop
ss
mov
test
lock
inc
inc
jno
stc
int3
leave
fs
scas
jae
in
add
test
add
divb
xor
jns
imul
mov
mov
or
into
jecxz
xchg
adc
mov
lock
dec
dec
mov
cmpsl
or
mov
pop
inc
sbb
dec
jae
sbb
gs
sbb
xchg
out
dec
rorb
out
push
andb
mulb
jb
add
xchg
mov
inc
add
sub
clc
repnz
outsl
cmp
mov
add
bndldx
mov
sahf
addr16
shr
push
popf
jmp
mov
mov
cmpsl
jno
mov
iret
in
movsb
std
adc
fdivrs
enter
inc
mov
in
ss
xor
mov
xchg
inc
stos
ret
sub
repz
and
adc
cmc
mov
std
dec
loope
imul
mov
insl
gs
fbld
subb
les
inc
mov
push
nop
ret
rcll
mov
push
add
adc
add
int
arpl
cmp
or
xchg
rcr
cwtl
jne
loopne
mov
icebp
shll
iret
mov
fdiv
mov
bnd
outsb
stos
stc
inc
adc
mov
nop
sahf
dec
add
inc
inc
lea
sub
sti
insb
or
stos
adc
cltd
aad
sbb
roll
stc
jecxz
xchg
adc
jmp
std
mov
rcll
xorb
jne
and
sub
and
jnp
mov
inc
adc
nop
outsl
cwtl
js
cmp
sub
jge
pop
add
adc
adc
popf
stc
add
pop
mov
leave
pushf
inc
insb
sub
outsb
dec
push
cmp
shl
jmp
icebp
push
xchg
add
movsl
dec
jns
out
bound
and
fwait
std
dec
jae
push
ret
loope
push
outsl
lcall
jmp
out
lret
popf
jecxz
jnp
popf
ljmp
inc
nop
aaa
lea
sub
lods
stc
mov
mov
jo
push
int
outsb
insl
mov
and
es
addr16
adc
jp
add
rol
adc
dec
fsubs
fstpt
lcall
shl
mov
lds
push
push
sbb
xchg
bound
pushf
and
mov
adc
lcall
call
jb
mov
push
cli
adc
mov
mov
push
pop
sarb
repz
mov
or
xor
stos
and
clc
lds
or
outsl
jl
fcompl
stos
lcall
jae
xchg
mov
sub
and
sti
adc
pop
cmpsl
sub
or
jmp
movsb
int3
jnp
mov
and
test
loope
addr16
fldz
imul
pusha
test
jle
xchg
push
icebp
sbb
lea
outsl
jecxz
adc
xchg
orl
adc
aam
in
pop
je
push
adcl
imull
ljmp
pushw
adc
clc
xacquire
insb
mov
inc
cmpsl
stos
mov
icebp
jge
imul
push
add
or
in
push
ja
mov
cmp
sbb
pop
call
ret
sub
mov
sbb
imul
jb
scas
mov
mov
cltd
mov
jno
pop
jle
loope
ljmp
and
loope
jge
sbb
int3
and
rep
sbb
clc
in
icebp
push
add
xor
mov
pop
divl
xor
les
push
pop
test
orl
ds
aas
dec
adcl
pop
cmp
jmp
push
rorb
inc
outsb
jge
inc
adc
jnp
aad
xlat
cmp
push
imul
out
push
mov
add
mov
or
cmp
mov
out
mov
push
inc
or
xchg
add
xchg
jae
movb
mov
arpl
mov
jb
xchg
mov
rcrl
jecxz
jo
adc
aas
dec
xchg
lods
jbe
pop
int
adc
clc
mov
dec
jmp
enter
insl
shrl
sub
dec
rorl
sub
adc
mov
bnd
xchg
mov
mov
test
lcall
test
adc
sar
test
icebp
subl
out
ret
pop
cwtl
cltd
mov
lods
mov
mov
iret
pop
or
jge
push
jle
adc
sahf
jmp
xchg
nop
fcompl
add
testb
jp
out
in
ret
push
leave
xor
jbe
mov
inc
push
in
stc
jo
rolb
andl
sbb
pop
pop
mov
jge
sbbl
or
mov
and
stos
lahf
imul
subb
cmp
xchg
push
inc
andb
mov
ror
mov
xchg
sub
imul
inc
cwtl
push
test
inc
fiadds
imul
out
xor
inc
imul
std
and
push
add
sbb
jle
xchg
xor
cmp
ja
add
pop
cwtl
adc
addr16
lret
fcmove
push
outsl
cld
mov
addr16
aad
lret
jp,pn
sub
data16
popa
fcoms
push
rorl
push
es
negl
pop
mov
popf
lahf
jge
scas
adc
xlat
fisttps
xor
xor
mov
dec
lahf
push
cwtl
xor
scas
xchg
mov
and
sub
xchg
pop
push
je
sub
mov
fidivl
mov
imul
jb
xchg
fcompl
pop
ffree
aad
imull
adc
cmp
mov
xor
sbb
repz
cwtl
pop
fwait
shlb
xchg
int
mov
outsl
add
addr16
sbbb
mov
addr16
jbe
jbe
imul
mov
lods
pop
xor
insb
push
xchg
lcall
add
dec
lods
enter
cmp
jl
loope
xor
das
cmc
es
je
mov
in
addr16
inc
insl
es
imul
lcall
data16
push
cltd
mov
mov
mov
jnp
clc
aas
mov
or
jg
imul
test
fcomi
add
cmp
push
cmp
jns
pop
and
stc
sbb
or
ret
dec
cltd
sub
shl
lds
sbb
xchg
xchg
movsb
jae
mov
dec
ds
jg
dec
stos
cmc
shll
test
fsts
cltd
add
lods
cmp
arpl
mov
jae
cmp
cmp
dec
ds
pop
cmp
in
cwtl
ljmp
cmp
aaa
mov
pop
shlb
lret
xchg
fisubs
sbb
enter
es
pop
push
xchg
lds
lods
mov
jae
daa
sub
cs
sub
fiaddl
cmpsl
pop
sub
insl
pop
pop
aad
mov
or
jo
add
pop
imul
imul
in
and
fs
push
lea
push
or
gs
xor
rorl
pushf
andl
push
xor
push
lods
lock
mov
xchg
fsubp
addr16
sub
loop
sbb
addr16
pop
fdivrp
add
jp
scas
incb
pop
fs
mov
lcall
sbb
div
out
ds
cld
data16
pop
adc
and
xor
fnstcw
push
or
imul
mov
hlt
cmp
scas
or
xor
sbb
hlt
mov
mov
je
call
mov
imul
ret
mov
roll
cwtl
dec
xchg
mov
fst
push
pop
mov
jne
xlat
jmp
jg
cwtl
push
gs
jl
mov
and
jno
add
mov
lahf
cmp
outsl
movsl
pop
add
jno
aam
nop
pop
jbe
xchg
push
fwait
or
stos
shl
sub
or
jb
and
add
in
cmp
lock
rcll
and
pop
imul
leave
jl
dec
pushf
xor
pushf
imul
cli
xchg
mov
repz
add
jmp
or
ficomps
mov
ret
sub
jbe
xlat
push
in
mov
jl
popf
mov
ljmp
mov
pop
cmpsb
insb
lcall
push
add
sub
jnp
aaa
sti
xor
stc
repz
or
xlat
xchg
imul
cli
xchg
xchg
dec
fmull
or
mov
pop
lods
fwait
and
loop
lods
adc
cmpsb
in
adc
mov
das
jmp
stos
mov
call
imul
mov
popa
dec
xchg
sbb
pop
sub
shrb
sbb
out
in
jle
nop
nop
or
pmaxub
out
xor
stos
inc
mov
mov
cltd
and
adc
aas
loopne
cmp
xchg
push
dec
std
and
pop
dec
or
insb
mov
sbb
icebp
jbe
mov
cs
sbb
pop
nop
add
mov
mov
add
xchg
push
mov
add
fwait
loope
and
add
add
sbb
xchg
dec
jmp
fucom
lret
subb
incb
inc
push
pop
pop
popa
out
and
popf
and
dec
xchg
fstpl
mov
dec
push
sbb
mov
add
stos
mov
idivl
jnp
rorb
push
jno
outsl
and
xorb
or
or
pushf
cltd
test
and
stc
mov
jb
sub
ja
pop
das
mov
or
jl
xchg
xor
and
pop
adc
pop
dec
jae
mov
pop
mov
push
aad
cmp
jnp
mov
loopne
ffreep
dec
sbb
mov
mov
jno
ljmp
idivb
inc
dec
push
inc
dec
xor
aad
int
sbb
mov
inc
cmp
cmpsb
pop
dec
push
mov
fdiv
sbb
push
sahf
call
xchg
mov
cmp
mov
xor
sub
cmpsb
inc
dec
leave
inc
out
popa
xor
jns
into
sbb
rcrb
or
mov
data16
cmc
sub
xchg
bound
mov
mov
fsubs
rorb
mov
ja
push
out
ret
mov
cmpsl
stc
xor
movsl
jmp
add
in
ficomps
mov
adc
shl
xlat
psubusw
stos
stc
sub
jbe
pop
pop
movsl
lcall
enter
cmp
push
test
xchg
cwtl
pop
xchg
sbb
lret
push
ds
ljmp
sbb
jp
add
fcomps
iret
push
pop
cltd
in
loope
cld
push
pop
inc
lcall
jno
pusha
icebp
adc
icebp
js
lods
repnz
repz
dec
cmp
out
call
insl
mov
mov
or
cmp
fstps
nop
lds
sub
dec
push
imul
xchg
sbb
jb
mov
mov
inc
cmp
fucom
xor
mov
movb
adc
mov
mov
lods
iret
mov
or
xor
pop
pusha
cmpsb
imul
fistpll
addl
fdivl
mov
outsl
and
jno
imull
inc
insb
pushf
xchg
mov
add
sub
mov
mov
and
or
xchg
jne
fcmovnb
out
jl
in
iret
insb
mov
adc
pop
loope
pop
or
xchg
fwait
dec
js
adc
mov
iret
xor
adc
cmpsb
mov
in
arpl
pop
imul
movsb
lds
mov
scas
outsb
pusha
mov
shlb
out
dec
push
lods
in
fisttpl
lret
inc
push
lret
int3
fs
aas
clc
daa
sbb
mov
fmul
leave
and
out
lock
jo
and
bound
leave
and
pop
in
xchg
fldenv
xlat
and
push
test
std
lret
inc
cwtl
mov
movsbl
or
xor
mov
pop
adc
fsubr
mov
pop
sarl
mov
jbe
cmpsl
shlb
ds
and
ret
xchg
bound
jmp
les
push
inc
push
call
xchg
inc
dec
jle
data16
aad
sahf
loop
push
repnz
push
or
bound
jo
stc
cmp
jmp
imul
stos
testb
sbb
adc
subb
adc
sub
sub
adc
jge
push
int3
pop
cmp
inc
add
popf
ljmp
nop
fdivrl
jmp
cld
cli
in
lret
repnz
pop
xchg
shlb
ljmp
les
adc
adc
xchg
stos
cmp
and
mov
das
jl
cmpsl
jno
push
or
enter
in
and
pop
nop
xor
jae
push
test
cmp
mov
and
das
pop
inc
addb
int
and
out
push
sbb
xor
push
and
inc
enter
das
xchg
cmp
mull
jns
stc
test
pop
pop
pop
call
mov
shrb
jge
js
inc
mull
mov
je
mov
cmpsl
arpl
jae
scas
fidivrl
mov
adc
mov
pop
cltd
frstor
fidivs
sub
sub
mov
cmpsb
popa
push
mov
cmp
lcall
push
jl
mov
mov
push
loopne
push
sbb
add
in
cmp
out
mov
jns
mov
cltd
jno
icebp
or
data16
in
pop
add
js
mov
shrl
sti
sar
push
pop
pop
sbb
divl
rcrl
and
jo
shll
cmp
fidivrl
out
cli
sbb
pop
fsubs
std
std
movsb
pop
xor
subb
fidivs
std
add
jbe
or
sti
sub
outsb
mov
jmp
xchg
sbb
gs
fnstenv
xor
cmp
jmp
cmp
push
out
inc
push
push
mov
or
push
hlt
imul
pop
fildll
cmp
cmpsb
xor
dec
dec
into
xchg
aas
test
push
inc
or
pinsrw
gs
jecxz
lea
daa
pusha
sub
mov
sub
bound
pop
jge
sub
decb
dec
enter
jne
pop
repnz
mov
push
inc
jo
add
scas
bound
ret
jp
sbb
in
faddl
cmp
mov
sbb
adc
sbb
cmp
sub
push
push
scas
pusha
enter
cwtl
mov
pop
xchg
and
mov
pop
pop
sub
or
lret
dec
nop
stos
dec
mov
pop
insl
jecxz
mov
mov
inc
dec
sbb
fdivrl
xchg
cmp
mov
sub
or
imul
imul
pop
decb
and
add
dec
mov
push
sub
xchg
movsl
popf
mov
mov
mov
ss
sbb
rorb
outsb
mov
add
push
jmp
sti
jge
inc
lahf
jo
xchg
push
lods
pusha
sub
rcll
or
fucomi
movsl
mov
sbb
cmp
inc
add
cwtl
inc
arpl
aas
lds
jg
inc
int
insl
out
mov
ss
inc
fdivs
and
test
mov
inc
add
div
push
xor
dec
add
jbe
mov
jecxz
mov
jns
test
mov
xor
lods
xor
fwait
lods
outsl
es
aad
stc
add
xchg
xor
xor
jne
aaa
push
pop
popa
push
std
xchg
negl
adc
sub
xlat
mov
arpl
adc
test
jge
dec
leave
push
test
rcrl
sar
arpl
ss
cmp
call
adc
negl
cmp
mov
inc
bound
inc
in
lods
in
push
inc
mov
call
dec
fcmovnu
aas
cmpl
lods
mov
mov
lret
dec
je
repz
lret
test
sahf
clc
mov
fldcw
ds
cmp
lcall
popa
pop
daa
inc
stos
xor
push
and
aaa
sub
movl
push
add
xchg
lret
les
inc
xor
loopne
and
arpl
push
lret
adc
push
inc
add
out
adc
in
adc
xor
mov
jnp
mov
outsl
je
testl
lds
int3
and
cmc
adc
mov
mov
dec
roll
or
mov
xchg
lock
or
xchg
sbb
fstpt
xchg
push
pop
dec
xor
inc
jno
jp
leave
imul
jg
xor
in
mov
mov
cmp
ret
pushf
mov
lods
popa
pop
fldt
in
ljmp
fs
sarb
mov
mov
imul
mov
iret
rcrb
shll
pop
cld
mov
jnp
push
shll
push
lret
mov
mov
add
xor
sub
xor
sbb
outsb
mov
scas
or
push
push
scas
scas
push
adc
mov
ja
pop
mov
pop
js
push
push
mov
jmp
mov
or
add
jns
test
pop
popf
cmp
subl
out
xchg
push
xchg
jl
sbb
fsubrs
inc
sub
jo
mov
mov
lcall
mov
mov
mov
scas
jl
sub
cmc
pusha
mov
iret
dec
cmp
mov
add
mov
cmc
add
cmpl
frstpm(287
jne
fidivl
pusha
mov
jne
cmp
movsl
sbb
push
addb
add
mov
or
sub
test
mov
mov
lret
ss
rcrb
add
fimull
sbb
and
jb
inc
dec
mov
jle
aad
clc
push
pushf
adc
sbb
imull
dec
rcrl
push
jg
nop
cli
push
push
pop
adc
sub
xchg
jmp
fwait
sub
sub
pop
lods
repnz
sub
call
dec
imul
inc
jg
jmp
push
fisubl
jmp
xor
adc
aas
sarl
nop
mov
es
inc
xor
hlt
adc
icebp
ret
jnp
jl
data16
xor
ljmp
into
jnp
cli
hlt
adc
xor
and
dec
std
je
mov
pop
je
int
jmp
mov
pop
jb
xorb
and
push
ret
and
cmp
inc
clc
cmp
loopne
inc
add
mov
xchg
mov
sbb
fdivr
fstl
outsl
into
dec
inc
push
pop
cwtl
or
and
push
insb
mov
jle
sub
fwait
shlb
in
push
push
dec
and
int3
jae
bound
pushl
push
lahf
mov
jno
sbb
xchg
jne
pop
bswap
mov
mov
mov
jne
repz
repz
xchg
xchg
add
mov
push
jbe
mov
xor
adc
pop
sbb
fiadds
add
insl
xchg
int3
mov
or
mov
xor
dec
xor
dec
pop
shlb
fwait
insb
insb
fwait
iret
mov
sbb
int
insl
imul
das
sub
das
inc
adc
dec
adc
pop
xchg
xchg
je
popa
pop
or
cmpsl
sub
sbb
int3
and
pop
pushf
js
xor
mov
inc
jp
dec
mov
lcall
pop
add
imul
sbb
xor
mov
xchg
cmp
rorl
adc
es
data16
mov
mov
pop
cmp
mov
inc
xor
push
xchg
jne
or
das
mov
in
xchg
inc
sbb
addr16
inc
xlat
cmp
adc
cmpsl
and
scas
push
pop
std
inc
sbb
sub
out
in
out
lcall
mov
xchg
lahf
xor
aas
iret
xchg
xchg
mov
push
xlat
dec
add
or
sbb
fiadds
push
xcrypt-ecb
cmpsl
mov
add
rcl
mov
movsl
push
inc
into
aam
addb
mov
rorb
into
fstpl
adc
cwtl
mov
les
lea
mov
lods
movsl
push
js
inc
sub
nop
adc
addl
and
je,pn
cmp
cmp
mov
sbb
mov
fsub
add
out
imul
push
jae
jmp
pop
sub
rcll
cmp
and
shrb
jp
push
lea
push
xor
xor
mov
cwtl
in
add
insb
repnz
in
insl
cmp
imul
lods
mov
jno
lods
xchg
je
mov
mov
dec
push
in
inc
push
ja
jb
xchg
jl
cli
add
imul
cmpb
pop
test
xchg
sub
jno
mov
lret
push
jmp
mov
jg
cltd
add
loop
out
jmp
movsb
call
repz
sub
test
dec
mov
add
imul
mov
jnp
pop
popa
enter
lcall
test
addr16
push
sbb
dec
push
ja
add
loopne
test
sbb
push
bound
addr16
aaa
stos
sti
sbb
push
adc
mov
cmp
inc
and
pushf
mov
jl
adc
test
sbbb
ja
xor
out
push
jg
in
xchg
sti
xor
aam
inc
xchg
xchg
sub
lock
push
addl
xchg
xor
js
mov
sub
shll
cmc
push
sbb
pop
inc
into
xor
clc
pop
jns
enter
mov
lea
repnz
cld
adcl
test
jmp
jecxz
xor
mov
bound
jns
test
loop
xchg
mov
mov
testl
ss
aam
cmc
push
hlt
lret
adc
xor
jne
arpl
arpl
add
pop
out
dec
inc
idivb
jmp
jecxz
push
jno
pop
sbb
inc
dec
icebp
fwait
mov
sub
sbb
xchg
cmp
sbb
dec
and
dec
fld
mov
insl
outsl
push
xchg
push
cmpsb
bound
cltd
aam
xchg
pop
pop
dec
cli
lds
out
imul
pop
mov
pop
ret
sti
stos
jle
es
inc
mov
push
and
shlb
jg
lret
pop
mov
aam
pop
jb
test
push
dec
mov
rol
xchg
movsb
pusha
and
stos
cltd
jae
addr16
jae
test
popa
inc
lods
bound
cmp
in
adc
push
jp
mov
add
cmpsl
cmp
and
sbb
inc
xor
outsl
lret
mov
push
mov
jge
dec
mov
xor
adc
out
add
pushf
lock
ds
inc
jp
fsubp
pop
cmpsb
mov
or
push
faddl
push
cs
push
mov
aaa
call
repnz
lret
mov
mov
push
pop
int3
es
insb
mov
movsl
jno
or
adc
pop
cmpsl
cmp
xchg
cmp
inc
in
sub
stos
jae
in
xchg
call
pop
aad
aaa
inc
cmpsb
mov
iret
fiadds
dec
int
enter
ss
pushf
ret
addr16
in
cmova
clc
inc
adc
out
jae
sub
lock
add
and
and
cmp
sub
and
push
scas
pop
mov
lds
fidivl
sub
stos
loopne
lods
cmpsb
inc
call
scas
scas
xchg
out
std
pop
pop
mov
popa
ds
insl
popa
mov
push
cmp
negl
inc
sti
mov
push
and
into
pop
test
xchg
push
cmp
cmpl
xor
popf
pop
int3
dec
ljmp
ss
incb
sarb
push
xchg
push
pop
add
dec
in
add
dec
in
push
ljmp
jno
jno
push
mov
out
dec
cmpsb
addl
mov
fs
and
lods
test
inc
sbb
mov
pop
fs
inc
mov
push
inc
sub
push
mov
and
test
add
pop
loop
sub
push
imul
jmp
push
or
fisttps
push
jns
cmp
jbe
fnstsw
bound
out
repz
xchg
sub
stc
aas
leave
into
adc
scas
into
mov
jge
xchg
jp
shrb
cmp
or
adc
int
arpl
jo
adc
popa
cmc
pop
xor
mov
inc
ljmp
ret
xor
sbb
fisubs
sbb
cmp
incl
mov
sbb
jp
jb
ss
test
lahf
inc
into
and
cmp
sub
lret
or
fistpll
fs
rcrb
popf
int
jnp
mov
in
mov
dec
xlat
jbe
imulb
jne
adc
lcall
and
add
fiaddl
cmp
push
sub
add
sub
loop
pop
frstor
in
test
adc
adc
and
mov
and
pop
dec
insl
mov
pop
pop
fimuls
push
inc
sbbl
cmp
in
rcrb
scas
out
inc
jg
mov
cli
hlt
jmp
mov
inc
adc
sub
or
cs
mov
scas
mov
pop
ja
cld
pop
jo
sub
dec
fisubrs
add
mov
cmpsb
ret
jl
dec
mov
xor
add
fisubrl
xorb
xchg
test
jecxz
mov
jb
xchg
out
sbb
aad
push
ljmp
and
ds
mov
jae
mov
bound
scas
shl
push
fsubrs
cmpsb
fcompl
sub
add
shrb
cmp
lret
xchg
jno
lods
xlat
jnp
pop
or
inc
xlat
int
sahf
push
add
iret
mov
mov
mov
add
sbb
mov
add
loope
inc
and
div
jmp
mov
loop
loopne
subl
xor
sbb
ret
pusha
shrl
adc
insb
repz
cltd
lahf
add
pop
pop
pop
push
jp
aaa
mov
fs
add
scas
popa
into
out
stos
jno
xor
jmp
test
inc
in
xchg
mov
pop
pop
subb
xchg
push
mov
pop
jno
loope
popa
stc
fucomp
add
pop
add
cld
sbb
pop
or
mov
cltd
add
sahf
dec
mov
aas
bound
lds
or
cwtl
jae
jl
jnp
in
into
ja
imulb
push
inc
xchg
inc
xchg
jno
inc
adcl
mov
pop
cwtl
fsub
xchg
loopne
stos
cltd
jno
adcb
inc
sbb
mov
mov
std
scas
or
inc
sub
add
pushf
lea
into
repnz
mov
lea
jl
push
cmc
mov
jno
subb
pop
jbe
or
jns
xor
mov
pop
arpl
aaa
pop
add
push
out
mov
mov
jecxz
iret
xor
xchg
stos
or
jae
or
icebp
rorb
adc
stos
pushf
cmp
inc
arpl
movsl
pop
mov
jle
mov
jb
push
push
fidivrl
mov
and
sub
adc
sub
push
ror
or
fcoml
lods
in
mov
cmc
add
xchg
cltd
shld
push
sbb
je
jnp
imul
pop
les
inc
dec
aam
and
jl
lea
rcrb
pop
in
jno
sbb
stos
les
je
or
ja
bound
push
push
and
ljmp
cmp
cld
inc
lea
call
aaa
add
sbb
fs
repnz
xor
shll
xchg
dec
lahf
mov
pop
out
or
cmp
fistps
imul
ja
add
add
push
xor
outsl
lret
dec
mov
test
lds
sbb
cmp
js
ljmp
or
adc
cmp
dec
ljmp
std
jecxz
push
xor
xor
outsb
mov
test
jmp
mov
add
mov
inc
mul
push
adcb
jl
xchg
aad
icebp
iret
rcr
in
xchg
imull
ret
mov
popw
test
cmpb
push
cmc
sbb
aas
pop
mov
sbbb
aad
jb
and
mov
xchg
sbb
jl
pop
imul
lea
xchg
and
mov
das
sub
pop
in
jecxz
cmp
and
les
int3
les
push
test
mov
and
jo
lods
or
jmp
aas
into
or
js
and
imul
lds
popa
and
or
or
add
xor
aaa
ror
dec
sub
jmp
hlt
test
xchg
fnsave
and
loop
push
lock
imul
lret
das
xchg
neg
jne
imul
dec
pop
xlat
icebp
pop
mov
imul
jmp
in
xor
xchg
push
or
jle
jno
xchg
or
mov
shlb
test
push
iret
cwtl
mov
mov
pop
inc
xor
jg
cltd
inc
out
faddl
adc
std
aam
movsl
test
jl
fsubrs
adc
and
sti
xor
mov
add
ss
xchg
mov
mov
jne
sbb
inc
push
das
das
add
into
sub
scas
dec
sbb
or
adc
sub
inc
inc
cmp
inc
push
xorb
push
rcrb
out
xor
cs
sar
testb
mov
mov
xchg
jno
fildl
outsb
cmp
shll
xchg
loope
mov
mov
popa
mov
dec
and
inc
inc
lock
fnstenv
add
rcrb
int
xorb
and
mov
pop
mov
test
cli
addr16
xchg
repz
cld
dec
aam
in
pusha
ds
inc
lret
ficompl
cmpb
sub
and
ds
push
ja
xchg
adc
mov
dec
or
jae
inc
out
mov
xchg
inc
jp
cmp
sub
lds
and
cli
mov
jp
or
mov
imul
xor
pushf
mov
repnz
inc
je
int3
push
jle
and
jns
sbb
push
into
out
in
xor
adc
js
push
notb
inc
mov
lods
ftst
mov
repz
fstl
leave
gs
lea
ret
in
mov
decl
mov
jmp
xor
cmp
int
pop
mov
std
ror
rcll
ror
mov
aaa
std
mov
mov
inc
js
adc
sbb
out
ljmp
pop
adc
mov
pop
xor
fbld
or
sbb
into
sbb
xlat
and
sarl
inc
and
mov
lds
addl
adc
mov
mov
and
test
and
js
mov
adc
dec
scas
mov
data16
fsub
and
mov
pusha
cmp
popf
std
cmp
cmpl
xchg
cmpl
test
ja
and
adc
sub
add
clc
imul
adc
incl
decl
add
mov
insb
adc
sub
mov
in
cmp
ljmp
xchg
sbb
fstpl
test
sub
ss
daa
mov
adc
sbb
gs
fs
hlt
sbb
adc
orb
mov
adc
loope
test
shlb
out
nop
inc
mov
jecxz
loope
add
scas
loopne
pop
or
ret
imul
aad
outsl
push
add
mov
daa
mov
mov
lock
cmp
dec
imul
mov
int
addr16
test
mov
sbb
jns
xchg
xchg
mov
cltd
inc
mov
ljmp
test
cmp
dec
int3
cltd
push
xor
data16
dec
fsubl
js
mov
adc
mov
popf
shll
cmpsl
sti
cmpsl
jg
repz
xchg
dec
test
lea
add
mov
xchg
jp
fcoml
addb
and
fsubrs
outsb
and
std
mov
pop
inc
cmp
lret
mov
add
int
inc
sub
sbb
jecxz
test
pop
shlb
and
dec
pop
data16
adc
inc
ljmp
icebp
repnz
cs
xor
fsts
and
push
ss
scas
enter
js
lahf
fs
loope
mov
addb
adc
cmp
push
enter
dec
cmpb
enter
stos
pusha
inc
idivb
mov
jp
bt
stc
push
inc
enter
lcall
mov
vmread
push
sub
pop
lret
out
jle
out
xor
push
out
sbb
dec
loop
cltd
or
inc
cmp
jl
movsl
sub
test
sub
test
jp
xor
cmpl
stc
enter
push
mov
adc
pushf
jns
jge
add
add
arpl
xchg
decb
jnp
xchg
or
into
jecxz
iret
xor
cmc
sti
ret
mov
loop
test
clc
xor
dec
out
or
dec
mov
jg
loopne
mov
xchg
xor
and
inc
test
loopne
mov
outsb
mov
mov
xchg
jne
in
push
ja
imul
out
pop
cmp
push
int
fists
popa
sub
out
xchg
cli
sub
xor
sub
shlb
fldl
adc
sbb
loope
jns
jge
lods
mov
lds
xchg
jle
push
sub
xchg
sub
aam
xchg
mov
sbb
sub
adc
fmull
add
pop
out
aad
outsb
in
shl
loop
pop
jno
cmc
jb
dec
sub
fadd
arpl
sub
sahf
fwait
mov
out
pop
adc
jl
imul
je
lods
into
mov
push
push
nop
inc
sub
push
out
aaa
pop
and
cmc
pop
outsb
cld
testb
xorl
sbbl
insl
lcall
std
mov
and
jbe
outsb
mov
shll
std
pop
fstps
fidivrl
pop
cmp
sar
sub
xlat
insb
enter
movsb
jecxz
xorb
aam
or
sbb
pop
adc
rcll
nop
clc
mov
loope
test
aas
gs
sub
sbb
inc
rcl
arpl
cld
fwait
ror
iret
add
imulb
sub
xor
inc
int
stos
imul
mov
pusha
xor
add
mov
das
and
mov
data16
arpl
jecxz
nop
ja
shrb
and
fldl
mov
shl
xor
add
and
movsb
iret
push
int
scas
iret
mov
inc
fidivs
arpl
loopne
and
dec
and
mov
cmp
xchg
and
into
into
jp
xchg
out
dec
rolb
dec
push
mov
jnp
es
or
push
mov
inc
clc
sub
or
cmp
add
movsb
or
shrl
and
cli
and
aaa
andl
mov
hlt
adc
jo
push
in
xchg
xchg
mov
sbb
les
dec
rol
popa
cmp
push
pop
gs
mov
dec
sub
cmp
dec
mov
subl
mov
subl
addr16
popf
cmp
ljmp
push
xchg
pop
data16
pop
push
sub
outsl
add
shrb
das
fwait
add
mov
sub
jp
xchg
adc
fldenv
lcall
fcmovbe
icebp
lcall
scas
pop
ror
sahf
popf
fidivl
xchg
mov
cltd
outsb
or
cmp
cmpb
hlt
jecxz
sahf
mov
cmp
sub
push
xor
and
and
lds
xor
sbb
inc
ja
cmpsb
pop
push
pop
int3
std
and
loope
ror
ja
xor
cmp
cmc
dec
pop
mov
fistps
rol
lahf
or
add
scas
decb
in
pop
mov
and
adc
data16
fwait
sub
adc
mov
pop
cmp
sti
test
add
inc
stc
jmp
shr
mul
push
xchg
jbe
push
movsl
mov
ret
in
mov
dec
sub
iret
pusha
push
repz
lret
mov
aas
pop
mov
jl
cmp
mov
out
push
cmp
pop
xchg
ret
pop
jnp
les
lahf
push
xchg
hlt
in
or
mov
push
lcall
scas
into
push
push
sub
push
repnz
push
push
push
jb
cmpsb
fucomi
pop
popf
aas
push
imul
cmp
mov
shr
push
mov
loop
sbb
inc
outsl
sub
jp
aam
idivl
fldt
adc
jmp
add
lods
mov
clc
cmp
test
sub
stos
fistl
jmp
pop
inc
lods
outsl
les
loope
adc
aaa
inc
or
lcall
push
imul
fadds
sbb
jp
pushf
cmp
adc
shll
popf
lods
jecxz
pop
jl
dec
stc
das
leave
lds
out
or
ljmp
arpl
pop
rol
inc
push
jmp
push
aad
xor
dec
or
lret
inc
out
push
jb
pop
stos
rcl
je
sbb
and
clc
add
or
and
dec
ja
adc
sbb
cld
sub
mov
cmp
xchg
jmp
testl
push
xchg
sub
dec
sarb
jbe
es
jne
into
stc
pop
lea
movsl
dec
jno
outsl
xor
fidivrl
std
dec
in
and
leave
fdivrs
push
fisttps
push
mov
sbb
stc
jbe
mov
sti
loop
sub
fiaddl
adc
adc
or
xchg
push
call
and
fdivl
and
push
xchg
loopne
stos
inc
sub
pop
or
inc
push
leave
aam
sub
pop
jl
rcrb
sub
fsubs
mov
add
pop
ror
inc
int3
divb
pop
mov
dec
idivl
sbb
mov
and
xor
insb
nop
out
fiaddl
int3
daa
mov
jecxz
je
aam
jb
shl
arpl
mov
sub
and
pop
xchg
adc
mov
mov
mov
aam
insl
push
jmp
rcr
xchg
pop
shll
cmp
pop
mov
and
arpl
sbb
sbb
jmp
sbb
mov
xchg
int3
sar
sub
loope
or
push
mov
mov
in
inc
je
push
test
clc
ret
outsl
cmp
pop
mov
loopne
lock
xchg
cld
aaa
dec
add
arpl
push
fidivrl
cmp
sbb
popa
scas
test
push
lock
mov
mov
xchg
push
shll
or
xor
add
mov
adc
test
add
int
mov
fimull
or
jne
dec
mov
das
cmpsl
loop
pop
fiadds
out
fnstenv
push
lcall
ljmp
mov
dec
outsl
es
xor
and
add
out
pop
orl
pop
out
sbb
loopne
imul
xchg
dec
adcb
push
scas
inc
dec
push
insl
lea
mov
pop
lcall
pop
hlt
lock
out
and
fchs
sar
fildl
jns
in
clc
out
aas
ljmp
mov
in
jo
fistpll
test
sbb
lahf
and
sahf
dec
or
sahf
or
cmc
sub
cmc
lret
sbb
aas
imul
mov
xor
cmp
iret
in
dec
fs
pop
test
movsl
or
sbb
sbb
sub
xor
test
dec
rcl
mov
jle
push
inc
rcll
sbb
sub
and
out
push
jns
push
pop
ret
mov
lds
add
add
sti
jb
imul
inc
ljmp
xchg
out
push
adc
or
add
enter
imul
sub
ret
mov
xchg
mov
mov
mov
adc
jmp
out
aad
mov
pop
jb
fucomp
ja
stc
repz
xchg
xchg
jmp
fistpl
xorl
lea
cltd
imul
pop
shll
sub
dec
push
jl
pop
pop
stc
sub
mov
sti
in
add
cs
mov
push
fcoms
rolb
push
push
adc
fsubrs
mov
ror
loopne
mov
mov
sub
cli
pusha
inc
sub
cmp
cmc
xchg
pop
lods
jge
stos
sti
jns
incl
pop
mov
aam
sbb
and
sbb
jb
cli
inc
sbbl
and
add
push
cmpsl
aam
test
jne
jl
fbld
mov
ss
lahf
cmpl
mov
sti
cli
or
sub
in
loope
faddp
ja
mov
sbb
push
xchg
and
lahf
pusha
test
mov
cmp
in
fnstsw
and
and
int
mov
lea
xor
in
jnp
mov
sbbb
cld
fs
cli
push
adc
aam
sbbl
or
sub
outsl
lahf
dec
add
repz
jmp
insb
not
je
sbb
sahf
mov
cmp
ljmp
mov
addr16
sub
sbb
insb
mov
or
sar
and
and
fdivp
and
jnp
loope
ret
lods
ja
stc
mov
notrack
push
lea
call
mov
mov
imul
dec
mov
cld
in
xchg
mov
dec
adc
inc
xchg
movsb
pusha
cmpsl
out
pushf
dec
sub
sbb
pop
mov
mov
push
mov
sub
hlt
cmp
outsl
mov
pop
jne
lret
cmp
repnz
xchg
call
adc
pop
inc
shlb
jg
cmp
cmpsb
add
mov
mov
mov
jnp
sbb
or
sbb
out
push
mov
cmpl
jge
sbb
add
xchg
fwait
xchg
mov
mov
mov
aaa
aad
mov
inc
insb
in
and
jnp
fcmovu
into
fcmovu
add
jp
xor
pop
out
xchg
dec
sbb
loope
pop
popf
orb
imul
mov
dec
aad
stos
inc
dec
mov
fistpl
movsl
dec
adc
out
shll
pushf
loop
repz
stos
out
int3
enter
je
or
test
jecxz
dec
sti
icebp
jno
xchg
mov
mov
xor
aaa
iret
mov
push
xchg
das
jle
scas
aam
push
pop
fadd
les
or
ficompl
mov
jle
test
or
pop
xorl
push
pop
in
mov
popa
cld
cmp
das
xchg
mov
out
int
sbb
mov
sbb
or
cmp
sbb
mov
sub
mov
or
scas
inc
dec
mov
mov
addr16
mov
and
mov
push
pop
cmp
out
pop
mov
lock
negl
stos
cmp
roll
in
jg
sub
aad
pop
pop
pop
xchg
test
adc
ret
mov
push
mov
int
pop
incl
cmp
lods
and
icebp
iret
cli
xor
rcll
dec
and
rorb
jne
aas
fisubl
lods
mov
jae
fistpl
test
xchg
hlt
rcrl
add
mov
insb
jge
push
xchg
mov
mov
fwait
add
jp
pusha
int
xor
test
imul
outsl
xchg
dec
sbb
dec
lcall
aas
xchg
ficomps
push
jns
loop
fmull
insl
inc
or
xchg
sbb
int
mov
loopne
mov
push
ljmp
or
pop
push
out
inc
jo
notb
sub
xchg
mov
jmp
outsb
jmp
cli
cli
scas
adc
out
jle
mov
shr
les
add
fdivl
push
jle
cmp
aad
jmp
test
adc
dec
es
mov
and
sbb
call
lahf
inc
test
mov
lds
jecxz
mov
adc
adc
ja
in
lcall
test
popf
inc
sbb
xor
loop
push
ljmp
dec
push
fs
cwtl
pop
jle
or
dec
mov
xchg
rcrl
pop
cmp
sahf
and
jo
push
add
and
mov
and
cwtl
cmp
movsb
lods
pop
loopne
mov
pop
lret
add
loopne
mov
mov
add
push
cmp
icebp
loope
push
inc
mov
push
ficoml
fwait
ss
fcomps
sub
out
lcall
pushf
aaa
jg
das
pop
rorb
add
repz
lahf
aaa
pushf
addl
nop
mov
jmp
pop
sub
hlt
dec
adc
mov
outsl
cwtl
and
xchg
scas
stos
sbb
push
lea
xor
sbb
xor
dec
movsb
sarb
test
loope
jg
mov
xorl
lods
test
pusha
pop
adc
test
push
pop
xor
adc
add
jb
jmp
adc
adc
pop
or
outsb
in
xor
sbb
xor
in
or
clc
mov
jg
add
push
mov
lar
cmc
push
dec
push
in
in
cmpsl
pop
jne
mov
push
imul
aas
shlb
xchg
movsb
mov
pusha
fildll
cmp
or
mov
jge
cmp
push
imul
je
stc
pop
sub
and
jge
mov
popa
xchg
push
sbb
dec
outsb
jno
adcl
stos
cmp
inc
dec
mov
data16
aas
lret
xor
imul
xchg
and
aam
loopne
nop
and
inc
inc
jg
data16
leave
mov
jle
mov
mov
sbb
iret
mov
push
mov
lea
std
xor
cltd
dec
xor
sub
pop
int3
jns
xchg
cld
scas
pop
xchg
int
inc
add
sub
in
movsb
xlat
jl
or
jmp
addps
sub
insl
cmp
insl
roll
into
cs
jno
das
mov
xchg
int
sbb
cwtl
or
hlt
ret
sbb
ljmp
pop
jb
fnstsw
sbb
out
push
cli
mov
int
inc
xor
dec
adc
scas
mov
test
ss
mov
adc
out
sahf
loope
pop
inc
lcall
sarl
popf
notb
pop
ja
hlt
addr16
clc
push
dec
adcb
rclb
mov
test
shlb
je
jle
xchg
add
and
mov
iret
push
sub
inc
dec
or
lret
mov
ljmp
incl
mov
in
dec
dec
outsl
jns
jge
cmpsl
fiaddl
pop
scas
ljmp
js
inc
lods
ret
adc
mov
add
pshufw
push
je
daa
mov
lods
loop
adc
mov
pop
and
cmp
push
clc
sub
xor
iret
loopne
xchg
and
addr16
push
xor
and
mov
push
aaa
dec
addr16
lds
sub
ds
in
xchg
fsubs
std
mov
aas
in
mov
or
push
push
std
lods
xor
mov
divb
inc
xchg
add
push
and
push
pop
inc
inc
cli
or
lahf
dec
inc
push
xchg
ret
sub
mov
xchg
out
icebp
pushf
das
adc
add
insl
gs
ds
cltd
mov
shr
jns
cmp
frstor
xchg
adc
or
mov
cwtl
lods
cs
adc
sbb
in
and
jl
jmp
push
dec
out
ljmp
je
jbe
repnz
repz
adc
insb
or
adc
pop
or
pop
aam
daa
cltd
sub
mov
sub
popl
pop
mov
mov
pop
xlat
dec
dec
in
mov
dec
fsubrs
cltd
outsl
jge
movb
lret
in
and
pusha
cli
lods
or
stc
add
sub
cmp
jp
leave
inc
aaa
pop
icebp
and
cmpsl
cs
mov
or
pushf
push
cmc
adc
sub
or
jbe
mov
cmc
es
jge
push
das
add
mov
push
cmp
cmpsl
jle
xchg
mov
rorl
mov
add
jb
std
fwait
decl
fstl
xor
adc
cmc
testb
jno
mov
nop
inc
sub
aad
adc
mov
out
lock
or
or
mov
cmpsb
and
in
repz
push
into
push
adc
push
lret
sbb
cmc
sbb
jmp
jl
cmp
xlat
cmp
lods
testb
inc
int3
jbe
push
movsl
test
out
jae
out
cmp
stos
incb
insl
cmc
and
or
in
stos
sbb
aad
shrl
addr16
cwtl
cwtl
test
mov
gs
rcrb
or
mov
push
ss
push
data16
aam
mov
mov
inc
pop
mov
push
gs
xor
pop
stc
gs
mov
cmp
mov
cmp
mul
jp
test
push
dec
push
push
dec
aam
loopne
shlb
and
mov
mov
movsl
rcll
arpl
in
insl
loope
sub
ss
dec
das
loop
in
mov
scas
mov
sub
push
leave
and
sub
pop
sbb
sbb
sbb
arpl
in
cmp
and
push
and
testl
nop
test
add
mov
cmp
and
push
int3
arpl
or
shrb
lret
lods
push
lods
mov
cmp
jae
push
cwtl
mov
mov
out
mov
inc
icebp
pop
enter
dec
or
mov
xor
push
fs
jp
push
sub
insl
push
movsl
fstpt
aam
sar
add
xchg
jecxz
lret
dec
mov
cmp
ljmp
mov
in
sbb
cltd
fst
iret
aam
adc
in
fadds
mov
mov
add
gs
jo
aas
aad
fcompl
test
dec
pop
pop
out
fadds
fcomi
xchg
and
aaa
fdivs
inc
adc
adc
addr16
ja
aaa
xchg
inc
xchg
fldt
addr16
mov
push
mov
dec
lret
mov
stc
pop
sbb
xor
imul
sbb
dec
enter
cmp
dec
xchg
jne
xor
xchg
mov
inc
into
int3
or
pop
pop
mov
into
adc
out
aaa
sub
mov
ss
stos
imull
lods
addb
push
pop
and
incb
inc
dec
xchg
inc
mov
stos
xorl
mov
xchg
xchg
test
jmp
sub
xchg
adc
cwtl
add
xchg
popa
xchg
mov
shrl
sub
movsl
insb
jecxz
xchg
push
ds
mov
mov
rorl
test
loop
mov
mov
push
out
cmp
add
pushf
fwait
in
stos
xor
cmovge
scas
sahf
adc
shll
sub
sub
pop
mov
sahf
les
jo
cmp
scas
xchg
add
sbb
pop
push
ds
in
cltd
icebp
test
dec
pop
cmp
xor
into
or
jne
shrb
cmpl
add
xor
fmuls
add
js
div
call
mov
push
mov
xor
jb
repz
popa
imul
mov
repnz
adc
divl
jmp
dec
lcall
xor
push
mov
xor
cmp
xchg
sbb
icebp
sub
sub
dec
mov
add
sbb
aaa
pop
rcr
sbb
push
push
cmp
stos
xor
movsb
mov
mov
ret
call
jecxz
sub
xchg
insl
inc
in
mov
push
xchg
bound
or
es
xchg
adc
sbb
jb
xchg
lret
out
icebp
push
and
xor
addr16
int3
xor
dec
cmovge
cld
ljmp
mov
adc
addr16
mov
adc
pushl
int3
stos
daa
sbb
mov
and
xchg
cld
push
jmp
divb
xchg
xchg
push
out
sbb
inc
push
int
into
cmp
pop
push
in
mov
sbb
xor
leave
push
stc
inc
or
jae
and
mov
xchg
insl
xchg
rorl
sarb
into
sbb
fdivrs
jae
cmp
xchg
and
dec
pop
imul
decb
aaa
push
jae
sub
imull
iret
push
adc
loope
nop
dec
xchg
loope
sub
imul
stos
cld
jae
das
rcr
xchg
sbb
xor
jns
pop
cltd
mov
mov
inc
les
pop
adc
test
cmp
sub
sub
stos
sub
nop
dec
mov
dec
push
sbb
mov
sahf
inc
scas
xor
mov
je
fcmovu
adc
xor
xchg
mov
pop
test
jg
cmp
je
jge
mov
inc
mov
sub
adc
or
fcompp
repnz
scas
loopne
jp
jge
push
xchg
adc
inc
cmp
fcmovbe
or
adc
ret
sahf
fidivrs
loop
imul
fwait
sub
add
mov
mov
push
outsl
outsl
js
stos
inc
lahf
sbb
pusha
push
cltd
lret
std
mov
dec
dec
sarl
mov
push
es
mov
clc
pusha
push
mov
pop
push
nopl
xor
sbb
ljmp
sbb
stc
sbb
pop
in
xor
imul
mov
shlb
jp
push
inc
js
xchg
fdiv
imul
orl
ss
pop
test
loopne
lods
cmpsb
loop
out
js
sahf
pushf
mov
shll
int
mov
inc
sub
stos
lock
lea
les
test
xor
jns
push
cmpsb
lret
dec
jmp
mov
push
mov
decl
std
mov
and
scas
leave
add
nop
call
mov
in
cmc
push
pop
xor
mul
inc
inc
fdivl
and
stos
out
rol
mov
jge
loop
mov
mov
or
mov
push
std
jne
imul
pop
rep
add
or
sub
dec
aaa
je
mov
mov
dec
icebp
fxch
adc
and
cmpsl
xchg
and
dec
mov
add
sbb
arpl
cmp
int3
and
leave
cmp
add
pop
loop
and
mov
mov
test
add
jbe
add
push
rcl
lods
mov
mov
and
xor
dec
out
out
dec
mov
and
push
notb
orb
lods
cmp
popa
addr16
jge
adc
clc
or
repnz
xor
push
test
jae
mov
cmp
dec
pop
sbb
xchg
arpl
add
sub
sub
jg
fstps
pop
jne
jecxz
in
xchg
adc
out
iret
mov
jp
mov
dec
sub
sub
adc
sbb
in
mov
cmp
add
jle
pushf
pop
sub
in
pop
and
mov
add
arpl
or
add
mov
push
mov
aam
rcrb
stc
mov
mov
insl
pop
testb
inc
xchg
insl
ljmp
in
pop
je
dec
lret
jle
xlat
pop
pop
mov
adc
mov
push
mov
test
ret
mov
cli
mov
or
loop
bound
cli
sbb
flds
cmc
mov
adc
cmp
xor
inc
int
stos
bound
lods
fldenv
xchg
or
call
add
add
push
sub
add
daa
and
push
lcall
in
pop
add
mov
dec
push
pop
sub
repz
push
jg
and
jb
push
dec
push
fldt
outsb
and
std
jmp
popf
daa
popf
arpl
xor
out
in
add
xchg
and
jbe
pop
xor
jmp
movsl
pop
sbb
je
mov
sahf
add
mov
dec
mov
and
popa
mov
lock
inc
aam
cmp
test
aad
push
xchg
push
nop
popa
mov
push
icebp
scas
cmpb
inc
add
cmp
je
adc
mov
and
mov
adc
hlt
loop
gs
test
xor
loopne
shll
mov
or
pop
jns
cs
xlat
jp
pop
add
push
xor
or
cltd
loope
sbb
lcall
add
fidivrs
adc
pop
xchg
dec
outsl
fnstsw
insl
shrb
out
scas
shrl
push
gs
pushf
add
jnp
mov
jecxz
imul
add
sbb
leave
push
lds
or
push
cmp
fildll
cmp
lock
xchg
add
pop
mov
mov
js
fistl
xorps
push
sbb
movsl
push
or
push
lret
push
inc
xor
hlt
das
out
out
imul
inc
mov
mov
mov
std
out
rclb
mov
ljmp
xchg
jns
push
mov
add
sbb
adc
xchg
jecxz
jo
sbb
lods
stc
dec
and
dec
pushf
jmp
fwait
pop
push
mov
add
cmpsl
xlat
add
mov
push
aas
fdivrl
jmp
dec
push
mov
lods
fisubs
into
dec
mov
add
xchg
cli
mov
test
cltd
insb
stos
sti
aam
dec
and
jae
xor
pop
repz
xlat
and
push
inc
es
sahf
push
bswap
outsb
mov
lds
xchg
movsb
mov
gs
cwtl
sub
push
inc
std
jae
fimuls
pavgb
cmpsl
daa
insl
xor
xchg
call
mov
jge
push
push
inc
repnz
cmp
and
icebp
fisubs
iret
fmull
cmp
jae
xchg
mov
loope
mov
xor
scas
mov
xchg
xchg
mov
adc
cmp
xchg
incl
ret
cld
sbb
cmc
out
pop
mov
jg
adc
sub
jecxz
or
movsl
ljmp
cmp
adc
push
add
dec
imulb
popa
ds
xor
mov
out
xor
movsb
dec
jns
push
aaa
xlat
int
mov
sbbl
enter
std
adc
push
pop
mov
lcall
xchg
aam
insl
pop
rolb
push
mov
aaa
and
sbb
xchg
imul
cmpsb
and
ljmp
jp
in
ret
lds
xor
xchg
fs
aam
or
fistpl
nop
les
jp
fcmovbe
cmp
push
mov
mov
int
sub
ja
and
lods
xor
dec
in
cwtl
test
xchg
mov
jg
ret
mov
and
sahf
cmp
movsb
push
sahf
lret
jb
mov
inc
jl
subb
les
mov
xchg
dec
incb
mov
pop
cwtl
adc
sarb
cltd
ss
scas
and
add
xor
xorl
imul
xor
mov
mov
pop
idivb
imul
mov
cmc
mov
jb
sti
push
dec
popa
inc
lea
inc
mov
inc
xor
aad
xor
cmp
jbe
pop
aad
shlb
dec
mov
cs
pop
mov
xlat
dec
insl
xchg
cmpsb
divb
and
jb
push
scas
cmp
addl
adc
data16
fs
call
test
js
dec
push
mov
ja
push
in
fwait
adc
rorl
or
ja
aad
cmc
dec
es
outsl
cmp
lahf
push
loope
adc
sbb
xor
add
insl
fs
cmc
std
into
aas
lods
mov
pop
inc
daa
or
add
fwait
ss
dec
mov
push
int3
sbb
fildll
xchg
inc
loopne
loop
push
mov
in
loop
sbb
lahf
push
jnp,pt
xor
push
dec
jno
push
push
ret
jmp
sti
cmp
cld
test
ret
pushf
rorb
inc
jp
xsaveopt
ja
fwait
jno
pop
add
jnp
xchg
lcall
mov
dec
jns
jnp
loope
xchg
out
adc
loope
push
aaa
xor
cmp
pop
gs
jg
jb
lret
aas
xchg
pop
or
mov
les
inc
jns
mov
pop
or
sbb
int
cld
mov
sub
push
cltd
adc
mov
in
mov
repnz
push
gs
mov
in
xchg
inc
hlt
cmpl
stos
push
sahf
push
das
fildl
lret
jg
mov
push
movsl
rclb
cs
push
sti
cli
bnd
popa
fdivr
xchg
push
push
xchg
mov
lds
movl
adc
js
std
icebp
sbb
add
loopne
sbb
lock
lahf
sar
cltd
addl
pop
cs
dec
dec
add
or
arpl
sub
push
and
jnp
add
jl
adc
popf
push
jmp
scas
xchg
outsb
xchg
xchg
dec
xor
jmp
dec
adc
cmp
pop
sub
xchg
jge
cmp
lods
popf
push
ret
adc
jmp
cmpb
pop
in
mov
jecxz
in
mov
push
cmp
dec
cld
lahf
mov
cmpl
mov
dec
int3
push
nop
sub
fsubrs
xor
mov
pop
shlb
lock
in
ss
ja
sbb
jno
xor
popf
push
fsubrs
into
rcll
subl
inc
ja
inc
push
out
dec
xchg
mov
mov
xchg
cmpsb
cmpsl
mov
das
adc
pushl
xchg
mov
fiaddl
stos
push
pop
pop
xchg
mov
dec
jecxz
call
pop
mov
dec
pop
xchg
xchg
cmp
decl
pop
and
imul
inc
std
in
popa
dec
mov
test
sahf
insl
dec
mov
ljmp
xchg
das
scas
xchg
fxam
stos
push
sbb
sub
orl
out
fs
ret
jp
test
lods
mov
les
rcrl
mov
pop
je
test
ret
popf
sbb
xor
push
mov
out
fnstsw
pop
test
int3
nop
les
push
pop
jmp
pop
fwait
xlat
lret
xor
push
test
mov
movsb
lds
lret
mov
arpl
in
fimuls
dec
mov
pop
mov
pop
push
call
sbbl
xor
inc
sub
dec
mov
inc
ret
pop
std
arpl
outsb
adc
jne
add
mov
aaa
sub
xlat
psrlw
jle
or
cwtl
dec
test
aas
popa
jmp
jns
jae
pop
and
cwtl
mov
and
test
out
ss
dec
shlb
xchg
jg
call
idivl
jecxz
jns
or
in
fsubs
test
and
ds
push
cltd
adc
or
pop
rcll
loop
push
popf
dec
stc
dec
sti
in
inc
or
cmpsl
sub
push
cld
int3
and
jmp
cmpsl
inc
rcrl
js
into
les
jle
and
sub
sbb
cmpsl
in
subb
dec
sub
xor
jb
mov
fnsave
dec
ret
adc
xchg
mov
lds
mov
sbb
add
push
bound
lea
mov
dec
mov
arpl
mov
pop
std
push
adc
mov
ret
and
lret
xor
pop
pop
adc
push
enter
outsl
rorb
in
jl
adc
push
xchg
mov
mov
ljmp
ja
ret
xchg
mov
adc
mov
std
push
cwtl
inc
hlt
ret
je
and
mov
sub
in
movsl
fistpll
sbb
std
push
push
outsl
rorb
std
outsl
icebp
jmp
inc
or
cli
cmp
pop
xor
sub
or
es
mov
filds
jbe
mov
loope
jecxz
mov
jl
test
fdivl
cmp
out
clc
dec
cld
loope
enter
loopne
jle
ds
rorl
push
xchg
xor
loope
pusha
jge
mov
stos
lods
dec
pop
cmp
xor
xchg
pop
jecxz
sti
in
ficoms
daa
scas
and
int
nop
mov
cmp
cmpsl
dec
xchg
popa
sub
pushf
into
fadds
enter
adc
mov
xchg
fwait
add
cmpsb
stc
or
push
movsb
shrl
sub
jl
cmpsb
ficompl
leave
mov
push
inc
subb
mov
inc
jmp
mov
push
pop
and
orb
mov
mov
rorl
adc
cltd
shlb
mov
ficomps
iret
imul
idivb
sahf
mov
inc
adc
hlt
push
pop
and
xor
mov
lret
jg
xchg
jns
mov
jns
cli
and
mov
pop
mov
lret
repz
ljmp
pop
cmpl
rolb
test
mov
mov
push
push
dec
cld
mov
leave
loope
pop
sbb
xchg
imul
add
hlt
xchg
cltd
lods
jbe
out
sub
imul
movsb
shlb
inc
call
pusha
adc
iret
jge
pushf
jmp
arpl
xor
dec
jnp
pop
pushf
inc
arpl
xchg
cmpsb
idivl
dec
sub
out
imul
jmp
ljmp
bound
test
and
or
dec
aam
jecxz
pop
push
sub
outsl
xor
mov
pop
dec
cmp
and
outsb
lahf
adc
push
cmp
lcall
push
cmpsl
jl
loop
negl
jle
lcall
lret
ds
frstor
cs
shl
int
shl
or
push
jno
fwait
cs
mov
inc
push
scas
jno
adc
or
test
sub
sarb
xchg
clc
sbb
mov
clc
push
jmp
lcall
in
test
xor
cmp
ds
sub
sub
pusha
sub
mov
dec
dec
jmp
xchg
aas
test
iret
push
jne
in
fsubp
in
insl
pop
lret
ret
cltd
cmp
lcall
dec
outsb
xchg
in
data16
fbld
push
mov
imul
pop
push
or
xor
push
xor
fwait
loope
xchg
push
sar
sbbl
cmp
jge
push
mov
sub
sahf
cwtl
and
xchg
xchg
push
push
movsb
mov
je
negl
or
or
dec
int
sbb
mov
add
cwtl
ficoml
push
mov
mov
inc
fld
xchg
dec
push
mov
dec
leave
and
sbbw
test
cmp
sub
xchg
jge
xchg
add
daa
lea
in
das
push
fstpt
push
hlt
dec
popa
enter
sbb
mov
sbb
ficoml
mov
mov
cmp
cs
jp
cmpsb
or
add
clc
and
call
dec
jge
cld
jne
out
mov
or
test
mov
addr16
jle
xchg
mov
outsl
fwait
aam
imul
cmp
sbb
mov
jne
bound
out
xor
push
mov
push
fs
sbb
in
xchg
push
mov
sbb
iret
push
test
out
dec
adc
inc
test
xchg
or
mov
in
jnp
clc
jmp
imul
sti
mov
mov
cmp
sub
std
inc
mov
je
and
fcmovb
ret
push
cmp
dec
xor
jl
test
mov
sahf
int
inc
inc
mov
dec
xor
inc
lds
mov
hlt
arpl
loop
in
add
and
ja
adc
pop
stc
movb
jne
dec
pop
movsb
pop
xchg
fbld
lods
jmp
mov
inc
clc
jne
fistpl
xchg
adc
shll
sub
scas
cwtl
cmc
repz
xchg
pushf
or
movsb
out
and
mov
fcoml
ret
cmp
lods
or
test
lock
pop
popa
sbb
jp
sub
cmpsl
fistl
outsl
add
sub
movsb
adcl
xchg
push
repnz
leave
loope
and
push
pop
xor
clc
fs
in
movsl
inc
xchg
mov
nop
jns
out
or
in
push
je
xor
leave
aam
jnp
xor
ret
sub
int3
adc
mov
lret
icebp
insb
pop
inc
loop
dec
dec
lret
push
loopne
dec
jnp
push
repnz
add
aaa
xchg
pop
bound
lahf
mov
hlt
cmp
pop
jno
jl
mov
pop
sub
push
push
ss
clc
jne
aaa
aad
push
push
dec
sar
js
in
ja
dec
orb
jmp
adc
outsl
or
mov
mov
shlb
js
aad
test
dec
rcll
sarb
xchg
mov
sbb
pushf
lods
lea
add
gs
xchg
mov
out
mov
test
aas
out
pop
add
lahf
sti
loop
adc
aad
out
in
mov
or
push
cmp
dec
pop
push
mov
mov
xchg
pusha
aas
xchg
popf
bound
or
rcr
xchg
inc
sbb
out
out
pop
test
outsb
int3
xor
jno
mov
test
push
pusha
push
ds
inc
out
ret
aas
test
pop
and
pop
aad
outsl
cld
shlb
jmp
push
sbb
adc
adc
mov
or
adc
daa
and
and
testl
adc
out
add
mov
outsb
daa
push
xor
loope
and
mov
stos
out
addb
pop
pop
outsl
negb
adc
call
ja
adc
std
aad
mov
inc
jb
mov
xchg
js
popl
mov
mov
repz
cmpsl
adc
add
dec
stos
mov
mov
mov
or
xor
cmpsb
sub
jns
lds
mov
cmp
pusha
push
and
mov
xchg
pop
fisttps
es
adc
fwait
push
dec
nop
and
lods
lock
sub
stc
xchg
cs
in
jecxz
push
xorl
out
arpl
outsb
out
push
mov
mov
xor
loopne
sarl
daa
repz
rorl
lea
mov
repz
pusha
dec
and
sbb
pop
cli
cli
jo
mov
cld
pop
mov
jne
ret
cli
in
and
es
test
insl
mov
loope
sbb
sbb
pop
scas
enter
fdivs
ffreep
call
xlat
add
std
dec
xchg
fldenv
mov
fiaddl
addr16
es
add
sahf
test
outsl
mov
test
data16
cmp
ffreep
xchg
pop
xchg
jns
adc
jecxz
or
stos
pop
loopne
or
fxch
js
add
xor
and
or
or
jecxz
mov
dec
test
pop
lea
imul
add
nop
mov
in
mov
shlb
and
cmpsb
adc
pop
lods
mov
les
ljmp
fdivl
pop
test
sbb
imul
xchg
sub
in
ret
stc
fsubs
jg
mov
and
add
jb
rcll
out
shr
pop
dec
sarl
pop
push
je
mov
sub
mov
xchg
fs
push
add
push
jle
inc
sbb
movsl
stos
stc
js
fcompl
les
mov
lret
sbb
lds
add
mov
lock
sbb
ljmp
cli
fcompl
rorl
pop
ss
imul
sub
xchg
push
push
sub
xchg
scas
test
gs
push
jle
pop
xor
and
dec
mov
in
xchg
pop
pop
ja
jge
inc
pop
movsb
lahf
mov
xchg
mov
pushf
andl
fildll
sbb
mov
add
push
xchg
xchg
or
jno
push
lea
and
cmp
mov
push
lret
jl
outsb
mov
fdecstp
cwtl
shll
outsb
fisttpll
push
and
xchg
xor
xchg
fs
mov
and
adc
sbb
mov
sub
or
bound
xlat
imul
leave
jo
mov
scas
jmp
or
xor
lcall
mov
imul
jl
and
xlat
out
sbb
pop
mov
inc
int3
aaa
dec
cmpsl
jb
mov
sub
out
leave
lahf
out
cld
cld
js
cmpsb
or
lcall
mov
js
imul
and
cmp
xor
lock
cs
fiaddl
in
xchg
popa
cmp
out
xchg
push
shll
add
dec
enter
fistps
push
or
out
inc
addr16
inc
jno
jg
in
lock
out
sub
cld
xchg
jbe
aas
in
enter
add
add
leave
sahf
stc
dec
jp
push
iret
leave
push
hlt
loop
mov
iret
cs
imul
push
daa
cwtl
dec
iret
sub
cmpsl
out
aad
pop
mov
add
cmpsl
or
ret
lods
rorl
or
mov
cmp
inc
sbb
jae
movsl
jne
movsb
xchg
sbb
xchg
into
and
and
leave
mov
fistpll
pop
xlat
add
add
int3
fsts
frstor
aaa
lock
mulb
xchg
cmp
mov
cmp
jg
lahf
imul
jbe
mov
std
xchg
push
rorb
mov
aad
dec
leave
mov
dec
push
pop
sub
cs
jne
xor
xchg
push
or
mov
stc
in
xor
out
xchg
add
jge
insl
mov
adc
pushf
fidivrs
fwait
dec
sub
push
mov
and
jp
mov
in
jnp
sbb
mov
scas
mov
cmp
pop
or
push
repnz
fldt
fsubr
add
ret
stos
lock
popf
mov
mov
xchg
scas
adc
enter
in
out
inc
pop
andl
inc
cltd
lret
divb
loopne
add
mov
jp
add
aad
mov
add
je
lods
rorl
sub
inc
xlat
sti
push
les
sahf
jg
loope
inc
unpckhps
cmp
mov
inc
in
outsb
pusha
mov
dec
mov
mov
stos
pop
mov
icebp
inc
ja
aam
or
pop
push
lretw
stos
xchg
lahf
aas
pop
mov
mov
jmp
mov
movsb
mov
dec
int
fistpl
lods
xlat
lods
sbb
test
xor
inc
in
add
cmp
push
jb
xor
negb
mov
cs
insw
lcall
mov
xchg
pop
push
xor
lods
jno
and
push
and
lods
push
ret
xor
push
idivb
roll
std
fiadds
dec
out
adc
shlb
pop
and
cmp
pop
sub
jnp
sub
xchg
aas
fidivrs
adc
loope
lods
shlb
sbb
sbb
push
xchg
adc
dec
or
movsl
scas
add
xchg
aam
push
or
lret
roll
js
inc
mov
popf
fwait
jne
test
adc
push
sbb
testb
jno
mov
jns
ljmp
dec
push
mov
mov
jb
in
jae
out
adc
jnp
sbb
xlat
in
sbb
fnstsw
subb
push
sub
xchg
sarl
add
sub
sbb
je
mov
je
xor
mov
test
cmp
adc
xchg
mov
decb
and
dec
sub
xchg
cmp
xor
lcall
test
inc
cmp
sbbb
cmpl
jne
inc
jge
ljmp
fsts
popa
not
adc
scas
xchg
fldenv
loop
mov
and
icebp
fisubrs
xchg
into
push
insb
jo
adc
imul
aam
mov
fnstsw
mov
icebp
or
gs
shlb
mov
dec
xchg
fisttpl
dec
cmpsb
add
mov
and
sahf
ja
cwtl
js
cmpsb
mov
insb
mov
pop
out
inc
js
xchg
mov
daa
js
push
jmp
std
gs
je
sub
outsb
sub
lahf
mov
movnti
cmp
xchg
xchg
push
xchg
sbb
inc
jae
jo
or
mov
pop
outsb
sbb
xor
insb
and
mov
int3
lret
into
and
divb
std
sbbl
mov
and
xor
nop
iret
fsubrp
mov
jno
xor
insl
int3
out
push
dec
xchg
cmpsb
shr
or
dec
rcr
das
imul
aas
rol
and
adc
jl
divb
fcompl
sarb
mov
call
and
cmc
pop
aas
cmp
rcrl
push
dec
inc
out
sub
int
lsl
in
or
fbld
ret
adc
jl
lock
xor
cmp
xchg
cmp
sub
lods
scas
dec
insl
jb
into
mov
int3
sub
or
inc
dec
pop
insl
scas
rcl
xchg
cmp
and
sar
sbb
mov
pop
lods
mov
adc
inc
xchg
push
inc
fiaddl
test
inc
addr16
jbe
inc
cmp
lods
adc
cmc
outsb
test
pusha
int
int3
sbb
clc
icebp
push
cmp
xor
mov
or
mov
or
in
dec
imul
jmp
ret
inc
pop
rcr
pop
mov
dec
pop
jnp
inc
add
mov
dec
out
lret
jge
or
push
cmpsb
jp
clc
cmp
inc
iret
imul
jmp
jl
adc
mov
mov
mov
jb
aad
add
mov
mov
inc
jle
jg
in
inc
mull
sbb
not
jmp
sahf
sbb
lret
mov
mov
xchg
int
scas
mov
push
popa
popf
pandn
rcrb
iret
loope
aas
pop
sahf
sti
or
add
popa
inc
aad
movl
or
xlat
jae
scas
sbb
xchg
int
mov
adc
pop
out
xchg
lea
mov
mov
stc
stos
mov
and
enter
fdivp
popf
pop
pop
cmp
push
sub
insl
push
lret
bound
push
xchg
aad
jg
sbb
stc
pop
ljmp
ljmp
pop
mov
mov
mov
jnp
sbb
jmp
fwait
and
fdivl
cmpsl
mov
or
cltd
mov
test
stc
popf
js
and
push
in
mov
push
in
repz
or
rclb
dec
xor
les
data16
outsb
jmp
leave
mov
dec
addr16
push
pop
mov
cmp
mov
inc
mov
orl
xor
xorb
jg
push
ljmp
jo
js
fisubl
ficompl
addr16
and
testl
js
and
insb
xchg
shl
scas
mov
je
leave
and
ljmp
lea
loope
sbb
pusha
sbb
call
into
out
mov
cli
icebp
divl
xchg
movsl
lock
xchg
jge
fmulp
in
jl
cmp
and
xchg
pop
adc
jp
repnz
shlb
insl
pusha
mov
add
popf
and
lahf
fidivrl
inc
push
outsb
mov
stos
dec
xchg
aas
nop
ja
pop
jne
shlb
sub
hlt
rcll
dec
aas
mov
xchg
and
outsb
add
sahf
sub
mov
xor
test
fldt
inc
add
mov
arpl
pop
mov
fidivl
xor
push
addr16
in
push
ljmp
aad
ss
out
push
cld
xor
xchg
je
adc
cmpb
fmull
jne
aad
mov
dec
adcl
les
out
aaa
aam
dec
aas
movsl
and
lret
frstpm(287
inc
inc
mov
sbb
mov
inc
xchg
cmpsl
gs
lcall
mov
aaa
or
out
outsb
out
stc
xchg
mov
js
sbbl
pop
dec
icebp
and
sbb
sahf
and
dec
clc
fdivrp
shrb
pop
jg
std
sub
daa
in
xor
into
xchg
fcmovnbe
roll
xchg
insb
push
sbb
and
pop
mov
xlat
cmp
pusha
jnp
scas
mov
add
sti
adc
fwait
mov
lret
popa
push
stos
jns
pop
in
jmp
mov
pop
cltd
mov
and
pop
cmp
je
adc
mov
xchg
sub
dec
fs
dec
rcrb
fwait
shrb
add
out
iret
scas
adcl
inc
xchg
mov
sub
ret
popf
inc
aad
push
ret
jae
iret
cmc
pop
clc
aad
in
aaa
xchg
sarl
fwait
cmp
mov
nop
or
imul
pop
out
inc
xchg
fwait
mov
mov
or
push
ret
inc
out
lahf
pop
mov
dec
std
push
sarb
into
fisttpl
push
mov
imul
pushf
enter
xorb
mov
and
jo
mull
pop
and
fisubl
enter
sbb
stos
dec
ret
xlat
jae
push
rorb
push
ljmp
and
mov
or
xchg
ds
dec
push
inc
iret
inc
call
jecxz
mov
call
dec
mov
rolb
sub
out
popf
xchg
leave
jecxz
cmc
js
lret
iret
cmpsl
stc
mov
pop
xchg
or
jle
mov
ss
out
inc
adc
movsb
mov
cmpsb
out
xor
mov
ret
adc
and
xchg
dec
push
int3
outsb
fstpt
enter
inc
sbb
jnp
push
test
jle
roll
ficompl
xchg
fs
push
outsl
pop
lret
ror
cmpsl
into
push
out
mov
shr
jp
inc
cmp
mov
cmc
ficoms
jp
xchg
lret
ficomps
sbb
repnz
sti
ret
jns
pop
mov
adc
push
push
xchg
and
icebp
add
cwtl
mov
inc
pop
sub
fs
ret
addl
lcall
mov
lea
adc
jns
into
ret
out
es
mov
jg
icebp
pop
rorb
addr16
inc
mov
lahf
mov
gs
stos
daa
aas
jnp
mov
mov
rcrl
js
dec
cli
push
xor
xchg
push
js
out
push
fldl
xchg
je
mov
and
cltd
loop
pop
dec
mov
movsl
lcall
ss
inc
pop
cwtl
and
gs
sbb
lret
loopne
or
sbb
stos
rclb
or
clc
inc
adc
or
call
jg
sub
int3
sbb
sbbb
jp
push
cli
jo
out
lret
ficoml
xchg
lock
push
mov
cld
icebp
xor
add
inc
ja
push
je
jge
shrl
pop
mov
fisubl
mov
jns
fistps
adc
imul
mov
ss
mov
mov
test
xchg
rorl
and
sub
sti
aaa
pop
shll
adc
fwait
nop
sbb
dec
ds
mov
mov
lea
dec
rcl
fimull
lahf
inc
outsl
push
pop
rcrl
push
popf
lods
cld
testb
stos
jl
inc
push
das
cmp
sub
push
mov
push
fidivs
cmp
jnp
mov
lods
into
xchg
into
roll
insl
pop
iret
push
cmpsl
adc
mov
test
ds
sbb
jbe
push
popf
adc
mov
shr
icebp
add
int3
xor
cmp
popf
xor
lcall
jo
std
mov
xchg
xchg
loopne
dec
xor
push
cmp
fucomip
imul
xor
inc
arpl
mov
add
xor
mov
fcoms
iret
inc
push
cmp
push
les
pop
test
loop
push
inc
into
cli
jns
imul
jl
icebp
adcl
fisubrl
jne
adc
incb
push
jecxz
cwtl
jne
bound
cs
mov
in
push
pop
xorb
leave
dec
jmp
bound
into
repnz
std
mov
push
out
and
jecxz
mov
loop
dec
pop
pop
scas
ss
nop
nopl
mov
mov
mov
es
push
inc
xchg
loop
xor
push
std
addl
mov
sub
loopne
xor
inc
pop
cld
add
nop
call
mov
in
cmp
ja
subb
jb
popfw
loopne
xchg
daa
push
inc
or
push
test
daa
bound
mov
and
add
stos
cld
fsubrl
inc
rcrl
and
sahf
cwtl
mov
int3
mov
xor
pop
aad
stos
lods
sahf
or
sub
dec
sub
push
fcomi
loop
mov
sub
cwtl
sub
loope
adc
nop
and
mov
lcall
fcompl
sbbl
aad
adc
cmp
xchg
sub
fimull
repnz
adc
push
mov
int
ret
adc
xor
jae
xor
mov
out
insl
sti
mov
std
repz
js
pop
cmp
adc
popf
in
lcall
ret
movsl
and
out
or
fs
je
xchg
pop
or
push
sbb
xor
sti
and
nop
add
les
ret
icebp
jle
fidivs
jg
sahf
add
stos
mov
mov
jp
dec
mov
in
das
enter
and
test
mov
jg
loopne
adc
out
out
push
xlat
sbb
enter
insb
cmpsb
incl
mov
aaa
jecxz
aas
test
movsl
lret
adc
pop
shl
mov
and
add
and
lret
jno
scas
repz
xlat
mov
jns
and
sbb
push
jg
pushf
cmp
jns
push
or
fbld
mov
divl
push
fiadds
mov
pop
cmovge
lock
es
arpl
ror
add
adc
pop
popa
push
mov
and
test
fucomip
addr16
fwait
or
mov
inc
or
out
fs
fmulp
adc
and
mov
lcall
cmp
shrl
push
mov
push
imul
mov
mov
inc
xchg
xchg
rorl
dec
das
sbb
xchg
test
mov
inc
push
inc
push
inc
xor
sbb
clc
movsl
cmp
sbb
cmpsb
mov
js
rcrb
popf
mov
fcomps
inc
cmpsl
popf
sub
ss
sub
xchg
inc
xor
inc
inc
test
iret
sub
or
insl
pop
fisubs
cmp
ja
xor
mov
xchg
jmp
fsubr
mov
and
jle
outsl
xor
mov
pop
dec
jb
pop
imul
sbb
call
adc
push
scas
xor
icebp
mov
pop
push
fcomip
adc
lods
pop
int
sbb
sub
sbb
dec
mov
scas
jle
cmp
sub
dec
imul
inc
fdivl
push
es
aaa
cmp
inc
fnstsw
push
fbstp
inc
mov
push
xor
add
cltd
aad
dec
orb
sbb
or
addr16
sbb
pop
out
add
sbb
fcom
sbb
aad
and
ljmp
add
test
mov
push
loope
xor
push
fsts
push
jb
fsubrs
andl
lea
push
push
mov
addr16
xchg
sbb
movsl
pop
xor
fwait
call
xor
and
dec
push
shll
mov
push
sti
sahf
das
adc
jnp
cli
repz
sbb
bnd
mov
jae
cmp
fists
xchg
lcall
or
pushf
outsl
push
in
out
mov
or
mov
sahf
js
inc
iret
jp
adc
lret
shl
xorl
pop
mov
cmp
push
adc
push
pop
clc
mov
inc
mov
xchg
ret
repnz
pop
fcmovnu
and
push
arpl
int
adc
cltd
pop
sub
rcrl
lock
mov
add
sub
mov
jg
aaa
scas
test
inc
jp
mov
movsb
pop
lods
add
ss
jmp
cmc
mov
inc
sbb
je
sbb
xchg
adc
mov
pop
pop
cmpsl
mov
nop
add
lods
subl
pop
xorps
imul
cmpsb
mov
cs
cmpsl
cmp
push
std
enter
xchg
lods
inc
loopne
cld
jb
fimull
jmp
icebp
mov
std
adc
data16
icebp
stos
pop
jmp
iret
scas
clc
sahf
stc
imull
mov
xor
test
pusha
add
pop
ret
jg
in
mov
push
adc
pop
cmp
insl
insl
cmp
dec
mov
aaa
ror
ja
pop
sahf
cmc
scas
out
aad
dec
push
cmp
ds
pusha
aas
add
daa
dec
pop
in
dec
les
data16
cmp
imul
leave
push
jle
movsb
outsb
add
and
add
data16
mov
add
imul
sbb
push
mov
or
xor
mov
pop
fucomi
xchg
frstor
out
jnp
jne
je
push
xor
inc
dec
iret
and
push
ljmp
mov
cmc
shlb
lds
dec
inc
popa
dec
dec
shrb
xchg
push
rcrl
or
addl
sub
cmp
out
cmp
roll
test
int
jp
int3
jns
imul
dec
pop
sbb
sub
mov
or
mov
mov
jge
mov
arpl
inc
mov
in
and
shr
jmp
adc
and
test
xor
xor
insb
inc
movsl
sub
les
outsb
out
push
imul
push
lret
inc
insl
and
lcall
mov
fidivrl
outsl
sbb
lods
mov
ja
mov
sahf
lret
out
popa
fimull
dec
or
loopne
adcl
mov
cmp
jge
mov
fiaddl
icebp
add
cli
or
sahf
mov
add
mov
cs
cld
adc
jecxz
or
jae
push
jge
or
jmp
add
popf
fs
clc
xchg
pop
mov
negl
jge
sti
or
sub
aad
test
cwtd
mov
jmp
mov
and
push
lods
lock
cld
in
and
mov
sbb
lret
mov
pusha
pop
adc
cmp
mov
sbb
mov
jecxz
sbb
sbb
mov
xchg
je
mov
in
jecxz
jl
sbbb
jno
jmp
popf
mov
jge
nop
xchg
bound
fs
clc
add
arpl
ret
pop
test
mov
sub
fsubs
mov
mov
lret
fwait
and
sbb
je
sti
jb
push
frstor
aam
push
cmp
or
push
aad
insb
inc
aas
clc
inc
ret
inc
shlb
lcall
push
arpl
jge
scas
loop
fdivp
mov
insb
insl
pop
call
inc
cltd
sub
rcrb
ficoml
mov
push
mov
dec
pop
das
out
xchg
cmp
lods
add
mov
mov
leave
popa
xchg
mov
into
out
sbb
jae
aam
or
ss
cmp
xchg
out
pop
imul
cltd
inc
fbld
pop
iret
or
iret
inc
mov
mov
jecxz
sbb
xchg
xlat
sbb
sbb
lahf
push
cmpsl
jg
in
adc
xor
pop
sub
stos
imul
cs
mov
fstps
xor
out
mov
cmp
and
lahf
sbb
imul
xor
pop
fstpl
cld
adc
xchg
retw
xchg
scas
sbb
jae
add
rcrb
stos
ds
dec
loope
push
adc
fisttps
xor
mov
mov
cld
mov
scas
arpl
or
movl
jecxz
dec
or
sbb
lods
lahf
pop
xlat
stc
sub
cwtl
jne
jmp
cmp
lods
sbb
scas
stc
lcall
or
add
mov
mov
mov
out
ret
enter
mov
ds
add
loope
cs
sbb
sarb
inc
mov
and
rcl
xchg
or
jmp
stos
xor
pop
pop
lea
fcomps
aas
add
lahf
lds
dec
push
fmul
ret
cmp
mov
cmc
mov
ss
fdivr
imul
imul
push
fstpl
loop
cmpsl
testb
or
mov
or
jbe
or
sub
jecxz
mov
aas
enter
ja
push
jg
lcall
xchg
lods
mov
inc
add
mov
xchg
lds
or
mov
cwtl
adc
pop
add
data16
aam
cmpsl
xlat
cwtl
int3
or
jo
imul
ljmp
sub
outsl
nop
sbb
loop
loope
cs
mov
sbb
pop
push
push
cmp
sbb
push
mov
jle
outsl
pop
pop
fdivs
mov
mov
sbb
mov
in
lcall
add
popf
adc
inc
mov
inc
or
jmp
mov
scas
hlt
and
adc
into
arpl
mov
xor
loope
jp,pn
lods
mov
mov
fsubrs
sahf
xchg
rorb
adc
inc
push
clc
in
ret
dec
sub
adc
fistl
and
fisttps
aam
xor
jl
pop
jle
in
mov
addl
and
aas
in
icebp
and
pop
sti
xor
jl
jo
icebp
mulb
aas
in
cmp
fsubrs
jp
ret
insb
fstl
sarb
push
pushfw
lods
jo
xchg
mov
fisubs
dec
sub
mov
cmpsb
inc
in
push
pop
test
push
out
insl
xlat
xchg
movsb
mov
fdivr
mov
sbb
xchg
pop
jo
mov
mov
inc
aaa
xor
and
outsb
sbb
shll
mov
push
adc
pop
pop
jl
and
add
xchg
mov
das
mov
dec
popw
lret
push
xchg
test
pop
mov
dec
adc
push
rcrb
lock
or
adc
lret
mov
and
enter
mov
addr16
cmp
mov
popf
or
cmp
sbb
or
aad
pop
rclb
cwtl
enter
into
lods
lcall
and
lcall
scas
sti
xchg
or
add
imul
lea
iret
push
dec
sbb
inc
addb
dec
test
roll
dec
sbb
iret
fildl
hlt
aam
repz
jae
push
push
inc
loope
dec
jo
aaa
dec
ret
ss
mov
mov
xor
into
mov
pop
or
jne
ret
int
push
enter
scas
inc
lock
mov
mov
push
cmp
es
pusha
mov
fucom
add
fdivl
cmp
filds
cmp
shlb
mov
insl
jg
push
adc
arpl
jns
test
jbe
outsb
mov
mov
idivl
xchg
lret
ljmp
call
ret
lcallw
test
imul
scas
testb
mov
or
shlb
inc
mov
insl
pop
sub
insl
leave
pop
mov
jmp
cmp
pmaxsw
mov
xor
data16
jmp
lea
mov
bound
sbb
mov
adc
fsubrp
fidivs
sbb
stc
loopne
jmp
daa
pop
push
cmp
adc
cmpsb
repnz
sar
inc
xchg
cmp
inc
dec
lods
add
repz
in
mov
loop
mov
push
mov
cmpsb
loop
xchg
sarb
inc
out
shl
add
outsb
icebp
mov
jae
sbb
shll
enter
out
cmp
and
or
aad
sbb
inc
sub
out
in
gs
inc
push
dec
pop
adc
mov
cmc
rclb
xor
outsb
pop
shll
mov
xor
mov
fdivrs
and
je
loop
sbb
pop
in
sbb
pop
dec
adc
fsts
lock
es
inc
in
lods
andb
mov
aas
mov
push
push
or
sub
inc
xor
loop
xchg
sub
dec
add
cmp
sub
sub
inc
jge
mov
jle
sbb
jmp
out
fsts
lret
out
xchg
in
leave
mov
cmp
into
adc
test
and
popf
jbe
cmc
gs
xor
mov
pushf
cmpsb
cmp
loope
mov
mov
fistps
movsl
sbb
rol
icebp
add
sbb
sbb
lahf
fs
cs
pop
cmpsb
test
pop
outsb
jmp
sub
icebp
push
aad
sub
mov
sbb
mov
fldenv
repnz
cmp
movsb
loopne
mov
sbb
xlat
repz
int
pop
mov
scas
andb
out
je
xor
push
mov
xchg
mov
push
mov
push
scas
imulb
addb
ret
sub
pop
sbb
rolb
ss
xchg
xchg
and
mov
sbb
add
mov
call
jge
inc
xor
out
xchg
xor
jge
pop
iret
adc
fwait
in
xchg
fs
imul
and
xchg
adc
lea
inc
xchg
push
xor
and
sub
mov
mov
pop
push
enter
scas
shrl
cmp
rorl
rolb
mov
jnp
adcl
lods
dec
cmc
insl
movb
jb
push
clc
mov
dec
aad
vmovshdup
cmpl
addl
cmp
adc
sbb
jp
push
sarb
jbe
xor
mov
test
jns
jne
ret
out
lahf
mov
dec
aam
sbbl
xchg
sub
sbb
nop
imul
xchg
pop
shr
mulb
cld
fisubrs
inc
push
pop
clc
cmp
xchg
clc
xor
insb
push
in
sub
push
xor
fisubrl
jmp
mov
mov
fimull
xlat
mov
pop
dec
in
mov
or
clc
add
ret
cmp
push
fisubl
xchg
int3
fists
push
pop
and
push
mov
iret
in
and
pop
adc
pop
in
nop
jmp
inc
dec
xchg
push
push
mov
sbb
bound
imul
dec
or
xor
mov
mov
pop
xchg
rcrl
push
cmp
cli
inc
mov
shl
and
sarl
jns
mov
repz
mov
arpl
aam
les
dec
xor
call
in
sub
int3
mulb
add
add
shlb
scas
mov
mov
orb
xchg
mov
sub
andb
clc
scas
xchg
and
fsts
out
mov
adc
rorb
jae
add
mov
in
cmp
cmp
ja
mov
cmp
push
cmp
dec
sbb
popf
int
dec
adc
xchg
mov
lds
rcl
bound
mov
pop
pop
mov
pop
add
jno
push
adc
jns
or
aam
ja
jae
jns
aam
add
sbbb
ret
ret
push
insb
pop
test
out
cmp
fwait
cs
popa
out
inc
ja
loop
repz
cmp
mov
adcb
or
fsubrs
adc
mov
adc
mov
mov
hlt
rcl
nop
mov
fnstcw
sub
cli
mov
repz
ljmp
mov
pop
hlt
push
adcl
mov
or
mov
les
sub
fisubrl
pop
mov
test
mov
mov
insl
cmc
sbb
xchg
lahf
cmp
adc
push
ficoms
pop
dec
enter
pop
add
inc
mov
icebp
fwait
in
popf
cli
inc
xorb
push
jp
icebp
imul
loop
mov
mov
jle
out
in
jbe
inc
aad
fs
and
mov
loop
test
enter
call
jnp
sub
orb
daa
mov
xchg
add
negb
lcall
mov
mov
shrl
aam
mov
jne
xor
push
pop
mov
fiadds
out
nop
and
mov
or
xor
dec
mov
and
add
and
pop
sahf
add
ljmp
jle
adc
xchg
push
pop
pop
popl
jbe
inc
xlat
and
and
pop
cld
sub
inc
dec
adc
and
sbb
cmp
add
scas
jmp
sub
call
jb
in
arpl
out
xchg
fs
pusha
sti
incb
jb
push
xlat
inc
scas
repnz
mov
scas
dec
mov
andl
adc
mov
or
lods
fdivl
jb
jnp
adc
jns
aas
mov
gs
movsl
jle
clc
insl
std
sahf
cmp
jmp
aam
popf
popa
sub
aam
mov
js
pop
xor
repnz
mov
jne
push
scas
jl
adc
mov
ljmp
fbld
aaa
stc
jl
jb
stos
lahf
cmc
loop
cmpsb
inc
mov
lods
nop
repnz
data16
xchg
insl
push
mov
ret
pop
ffreep
cmpsl
insl
adc
or
jmp
jle
xchg
cld
int3
jns
int3
stc
rcll
icebp
addr16
dec
sahf
push
pop
and
int3
insb
fdiv
mov
lahf
in
push
cld
addr16
inc
ret
fidivrl
or
dec
mov
stc
rclb
aas
fs
push
gs
rclb
in
ss
decl
pushf
cmpl
and
dec
lea
daa
addr16
cmp
test
mov
sbb
clc
mov
mov
ret
aad
mov
xor
sbb
ljmp
ljmp
lahf
popf
data16
mov
nop
push
mov
adc
mov
insl
out
repz
loop
stos
lods
and
sbb
push
jns
in
inc
loope
dec
mov
dec
mov
fcmovnu
adcb
jmp
add
add
call
add
lcall
jae
push
or
inc
cld
lret
cmp
inc
aas
imull
xor
stos
mov
add
loopne
leave
inc
xor
add
or
add
sahf
pop
lock
sub
mov
jmp
jecxz
mov
ja
dec
adc
jg
add
cmpb
sbb
xchg
jb
fadd
mov
fistl
jecxz
movsb
cmpsl
mov
push
loop
xor
jo
sbb
sbb
dec
or
mov
negb
in
push
push
xor
std
test
cmp
movsb
or
ja
push
mov
outsb
pop
outsl
inc
js
int3
xchg
jbe
sub
in
mov
cmp
dec
xorl
repnz
xchg
in
adc
dec
fcoml
ret
call
lret
inc
out
out
cs
imul
jne
jmp
sbb
mov
pop
push
mov
js
rorl
push
jge
add
sub
jg
adc
dec
sub
add
out
push
mov
mov
or
pushf
filds
or
pop
ficompl
lock
mov
dec
inc
ja
xchg
pop
lcall
je
in
adc
ja
or
pop
jne
pusha
movsl
adc
out
or
testb
aas
jbe
mov
push
push
sbb
mov
jmp
shll
cmpsb
adc
pop
js
aam
sub
pop
sub
sbb
movb
or
bswap
cltd
gs
inc
pop
jbe
cmc
cmp
dec
ds
mov
dec
inc
push
add
and
cmp
add
mov
ret
cmpsl
xor
fisubs
fisubrl
or
lock
js
jbe
inc
leave
loop
sub
movsl
sbb
push
cmp
mov
sbb
pusha
insb
push
les
xor
push
iret
mov
stos
lock
movsl
std
xchg
push
xchg
out
add
xor
loop
mov
mov
sbb
jg
sub
negb
sarl
dec
push
in
adc
push
mov
xlat
daa
lcall
mov
cmpsb
out
xor
je
inc
xchg
add
stc
fmulp
int3
nop
imul
data16
add
adc
jo
adc
push
sti
fisubrl
in
push
dec
adc
dec
jb
jae
daa
insl
mov
pop
rorb
lea
test
jmp
jnp
sti
fsubs
insl
add
pop
mov
inc
cmp
add
fxch
or
lcall
mov
int
imul
ds
push
lock
and
cwtl
and
sub
inc
lret
mov
nop
fldcw
mov
mov
hlt
dec
fcompp
push
inc
inc
sub
xor
mov
jle
in
lcall
and
jl
cmp
xor
or
subl
cmpl
jb
movsl
dec
das
and
push
in
cmp
xchg
enter
scas
add
mov
imul
rcrb
mov
mov
jecxz
in
push
jge
sub
not
fisttpll
mov
mov
js
faddl
call
xchg
repz
data16
pop
sub
sti
es
in
push
addl
push
sbb
stos
in
movsl
mov
jmp
push
insb
sub
jle
enter
adc
push
stos
dec
cmp
and
fldcw
rdmsr
sarl
ss
jle,pt
cmp
insl
pop
xchg
mov
sahf
outsl
ss
push
shl
add
leave
mov
ljmp
das
push
push
out
inc
popa
mov
xor
add
jge
sub
adc
pushf
in
pop
mov
mov
push
out
ss
ret
adc
rcll
pop
mov
js
std
ss
inc
arpl
lds
cld
mov
cmp
movsl
jmp
mov
icebp
xor
sti
es
cli
jo
cmp
imul
xchg
xchg
and
scas
mov
inc
push
sub
ja
inc
adc
leave
or
xchg
dec
aas
out
cmpsb
outsb
cmp
xchg
iret
repnz
shlb
mov
xchg
enter
xor
lods
lock
cmpsb
sbb
testb
sarl
pop
sahf
repz
xor
sub
ror
loop
lods
aad
aaa
jns
scas
int
test
test
jecxz
inc
jbe
push
test
push
popf
inc
idivb
xchg
idivl
jne
fildll
jle
in
insb
add
mov
out
lcall
outsb
and
xor
mov
bswap
or
or
inc
mov
mov
pop
aas
mov
andb
and
das
mov
clc
in
mov
clc
scas
pop
xor
or
sarb
xlat
jbe
push
data16
les
das
popa
xchg
sti
push
jmp
int3
sbb
out
mov
ret
adc
fcmove
xor
stos
xchg
lahf
jge
aam
push
cmp
mov
call
pop
nop
ljmp
push
stos
data16
push
fucom
sub
mov
push
or
jnp
sbb
sbb
sub
aam
leave
xlat
sub
push
ljmp
xchg
mov
push
add
gs
popf
insl
filds
outsl
mov
jp
pop
cmpsl
mov
xchg
jnp
sar
add
andl
out
xchg
adc
mov
movl
in
or
mov
pop
and
imul
inc
lret
mov
scas
flds
mov
ficoms
and
loope
push
pop
push
push
das
push
push
cmp
xchg
mov
adc
stos
and
in
popf
xchg
jo
add
xchg
and
cmp
cmpsb
in
push
xorps
stos
push
jmp
and
and
jb
push
cmc
jo
fdivrl
sbb
push
adc
pop
js
jge
adc
dec
or
popf
pushf
call
mov
test
jg
shll
adcl
mov
jno
or
jns
push
std
push
js
push
imul
mov
stos
push
jnp
insb
ds
mov
mov
int3
aaa
pop
xor
jbe
gs
jnp
adc
outsl
test
push
or
iret
pop
or
lret
ds
test
popa
mov
sub
add
js
fs
pop
stc
cmp
cmp
test
adc
dec
dec
aad
inc
sbb
jb
cmp
lcall
xchg
push
add
leave
sub
jnp
dec
pop
xchg
jge
inc
ja
mov
ffree
fiadds
adc
rclb
inc
test
sbb
push
test
es
and
sti
daa
lahf
or
or
cmovle
lret
adc
mov
imul
dec
fcoms
dec
call
xchg
aam
cmp
dec
in
dec
xchg
out
pop
mov
aam
js
gs
mov
xchg
push
stos
insb
lcall
hlt
ret
sub
dec
inc
daa
outsl
mov
mov
add
xlat
adc
dec
cmp
inc
xchg
rcrl
scas
cmpsb
push
mov
popf
adc
movsl
ficoml
mov
cmp
dec
sub
inc
jb
jnp
xor
dec
stos
jecxz
daa
sarb
jb
scas
xchg
stc
push
push
mov
icebp
mov
and
push
test
cmc
data16
mov
sbb
jg
mov
test
shr
cmc
lea
bnd
lods
and
cmpb
add
mov
mov
hlt
jmp
pop
mov
sar
xorps
shl
pop
and
jns
mov
bound
leave
clc
inc
mov
push
ret
lret
pop
xlat
iret
cld
and
ficomps
xor
pop
pop
cld
push
jo
ja
imul
jno
cmp
nop
out
repnz
repz
out
adc
xor
daa
or
lock
jne
xchg
lods
xor
popf
subb
xchg
jl
out
jbe
jl
or
xor
lea
jbe
enter
aad
cmp
js
add
push
fimull
outsb
cmp
out
gs
mov
loopne
in
je
lcall
into
inc
sahf
xchg
mov
movsl
and
xchg
add
or
add
pop
sub
repz
cli
mov
jle
xchg
pop
sub
dec
xor
pop
pop
push
shrl
and
mov
into
add
in
test
jge
and
or
cltd
fimuls
lock
xchg
jp
sbb
and
fdivr
dec
mov
enter
out
inc
sbb
cmpsl
or
dec
out
push
in
and
lahf
add
dec
cmpsb
cmp
cmp
mov
or
push
xchg
or
xor
adc
bound
mov
inc
and
popf
sbb
dec
inc
std
sbb
sub
xchg
add
fabs
cmpsb
fwait
ds
faddl
aam
imul
orb
lock
mov
and
pop
mov
sub
dec
push
pop
js
add
inc
les
aad
cmpsl
ret
push
mov
fadd
inc
movsl
inc
xchg
hlt
add
aaa
rcrb
sbb
mov
movsb
cmc
mov
or
fbld
notl
cmpsb
std
inc
dec
ffreep
adc
and
push
add
jg
mov
pop
mov
mov
and
mov
mov
or
push
or
stos
mov
push
add
aam
mov
xchg
xor
mov
jge
clc
inc
or
xor
dec
jmp
jle
push
sbb
bound
cmp
mov
inc
jne
or
inc
sub
sub
mov
out
push
rorl
movsl
cmovno
jb
add
adc
and
jmp
lret
rcrl
cld
ss
xchg
int
pushf
jg
jecxz
mov
adc
add
mov
sub
call
pop
cmpsl
lcall
dec
sub
mov
jecxz
adc
ret
mov
inc
subb
inc
xor
pusha
pop
dec
inc
jmp
xchg
lret
adc
sarb
test
push
push
lret
jnp
sbb
mov
addl
jmp
int
mov
imul
xor
or
jp
fcompl
jmp
sub
lock
gs
push
lcall
mov
or
xlat
lcall
outsb
jge
fs
fldl
inc
jmp
jl
jno
notl
sbb
lret
mulb
enter
push
imul
jl
addr16
addr16
pop
cmp
jl
adc
push
dec
gs
pop
inc
ja
add
dec
aas
xchg
pop
push
xchg
daa
adc
fucomi
pop
dec
adc
push
lea
sbb
cmc
dec
shll
test
fsub
fldcw
cmp
dec
inc
add
movsb
push
inc
mov
out
aad
bound
sahf
cmp
mov
xchg
pushl
jmp
adc
pop
jmp
sbb
lret
mov
into
xor
icebp
out
and
gs
mov
lods
sti
shr
sbb
test
jb
cmpsb
lcall
push
fwait
mov
mov
cmpsl
pop
dec
dec
dec
mov
dec
pop
or
add
mov
push
mov
cs
mov
inc
push
adc
movsb
push
aas
movsb
fcmovnu
fisubs
jle
pushf
xor
lret
push
xchg
sbb
adc
sbb
jns
les
cmp
xchg
lds
sbb
push
imul
mov
pop
or
addr16
mov
mov
fldl
adc
adc
adc
cmp
pop
shrb
or
insl
adc
and
fwait
cmp
fisttpll
lods
xor
jecxz
inc
loopne
outsb
cmp
push
fildll
push
dec
aas
std
pop
mov
add
ret
inc
minps
fst
das
xor
inc
sbb
or
jl
sbb
pop
xchg
hlt
pop
mov
inc
adc
sub
sub
xor
clc
jecxz
mov
mov
sahf
dec
cmp
xchg
inc
add
mov
scas
into
loope
repz
push
push
lret
aad
pop
xchg
std
cmp
xor
nop
lods
mov
mov
sub
adc
popa
icebp
cwtl
inc
lret
push
xchg
pop
adc
push
subb
in
scas
pop
pop
in
xor
dec
sbb
insl
adc
pop
fmull
push
fildl
add
out
rorl
sub
dec
mov
mov
lcall
aas
jbe
rclb
cmp
in
add
fsubl
cs
cmp
jno
ds
or
mov
mov
clc
lcall
iret
jbe
dec
and
jbe
jnp
iret
pop
repnz
rcrl
gs
shrl
pop
fidivrs
iret
cmp
add
xor
jbe
or
push
push
dec
or
arpl
inc
int
mov
jecxz
std
adc
int
shlb
jmp
sbb
shlb
pusha
ljmp
mov
pop
xor
xchg
mov
hlt
inc
cmpsb
fadds
xchg
test
fidivrs
out
ja
jnp
outsl
arpl
add
mov
mov
xchg
cmpsl
out
rorl
hlt
and
ret
cmp
xor
dec
movsl
sti
jns
mov
fildl
dec
ss
mov
in
pop
adc
std
aad
sub
aam
push
daa
xchg
inc
inc
lods
xlat
pop
mov
negb
lret
jae
pop
loope
lock
testb
aas
ret
add
pop
mov
mov
dec
add
pop
notb
and
movsl
rcll
mov
push
sub
out
das
push
andb
sub
xchg
test
insl
jle
xchg
jae
testb
push
push
mov
leave
data16
lea
pushf
bound
cmpsl
test
xchg
lret
xor
lret
xlat
js
jge
inc
push
mov
pop
hlt
sbb
pop
xor
sub
dec
stos
and
mov
mov
or
sbbb
icebp
pop
loop
outsb
mov
mov
sbb
mov
jg
call
sbb
sbb
cmpsl
sub
daa
pop
jecxz
leave
loop
cmp
leave
mov
mov
xchg
jae
adc
sbbb
xor
loopne
xchg
mov
decl
int
mov
or
bound
jb
dec
out
dec
lds
lahf
mov
adc
push
push
push
jbe
inc
in
into
pop
stos
imul
or
jg
call
cmpsb
in
out
mov
pop
mov
sbb
lret
mov
in
mov
mov
ja
mov
call
and
out
aad
lods
and
repz
dec
mov
scas
adcl
repnz
rcrb
andb
je
orb
mov
xor
and
mov
push
sub
fistps
mov
sbb
movsb
cltd
mov
jle
pop
dec
test
xor
dec
jg
addb
icebp
or
xchg
inc
pushf
jo
and
sub
sbb
mov
arpl
int
xor
movsb
fldcw
pop
adc
push
shr
cmp
es
insl
ja
mov
cld
mov
or
xchg
stc
in
sub
pop
dec
inc
add
into
test
aam
mov
jmp
sbb
jbe
mov
sub
pop
setae
add
std
popf
mov
out
rclb
adc
xchg
test
in
mov
in
dec
xchg
outsb
jo
sub
jne
push
inc
pusha
movswl
pushf
cltd
sahf
test
push
xor
jns
mov
ret
ds
mov
jo
dec
insb
fstps
pop
push
mov
xchg
mov
sbb
push
fiaddl
mov
mov
divl
clc
mov
mov
call
pop
sahf
cmp
jg
stc
enter
push
int3
mov
aad
loop
cltd
fcoms
adc
dec
ret
sub
mov
adc
hlt
lea
pop
jnp
mov
add
push
or
sub
insb
shrb
push
push
stc
mul
insb
jo
inc
cltd
mov
les
mov
scas
cmp
adc
hlt
push
xchg
call
sub
daa
cmpsl
mov
scas
aam
xchg
notb
fcoml
push
mov
out
pop
jge
iret
xrstor
or
xchg
fmull
orb
jmp
push
mov
xchg
push
inc
xchg
pop
jb
pop
and
pop
dec
loop
cmp
push
into
jge
push
mov
in
xchg
xchg
icebp
sarl
mov
push
pop
mov
jae
pop
push
push
enter
cmc
es
ret
or
or
fs
pop
ds
jg
cwtl
je
into
or
cmp
mov
push
cmp
loope
call
inc
mov
out
nop
mov
mov
lahf
and
hlt
xor
stc
push
adc
outsl
cs
xchg
lock
ss
scas
inc
push
sub
push
push
in
out
jg
pop
shrb
test
call
ficomps
mov
subl
mov
in
adc
mov
and
and
fwait
mov
mov
lret
insb
in
xor
xchg
or
xchg
xor
roll
xchg
ucomiss
sar
dec
cmp
popf
sahf
inc
fprem
jmp
push
imul
aas
xor
repnz
cs
popa
cmpsb
scas
fidivl
bound
mov
test
ret
pop
std
ljmp
pushf
cltd
and
fcomp
pop
push
push
xchg
fstl
push
xorl
adc
push
movsl
in
shrb
pop
sub
iret
out
mov
cmpsb
jb
adc
cmp
fisubrs
fisubs
je
jp
andb
mov
mov
mov
mov
cmp
xchg
or
jae
xchg
mov
out
movsb
and
sub
bound
loop
or
pop
test
dec
mov
fiaddl
add
sbb
mov
push
arpl
push
jmp
dec
fdivrl
mov
lods
arpl
xlat
pop
nop
shlb
orl
arpl
pop
jae
bound
popa
xchg
std
aad
dec
push
xor
mov
ds
fildl
push
les
cld
test
cmpsl
sbb
push
lea
dec
cmp
jb
dec
aad
fdivr
xchg
mov
stc
loopne
dec
and
and
adc
cmp
xchg
hlt
sub
push
push
cmp
lock
addr16
or
into
dec
dec
jge
dec
je
add
ret
repnz
lret
inc
and
cmc
sbbl
cmpsb
imul
flds
insb
sub
lret
and
andl
int
push
mov
fidivs
pop
mov
leave
mov
movsb
clc
stos
sub
test
fcompl
jmp
ds
aam
add
mov
sbb
lcall
leave
faddl
test
pop
xor
shrl
xchg
xlat
pop
and
lds
mov
imul
test
jo
in
aaa
mov
lret
movsl
xchg
jecxz
mov
fdivrs
insl
jge
in
das
xchg
cwtl
jae
jae
lods
adc
xchg
je
loope
scas
or
mov
and
sbb
jg
jle
xchg
push
iret
ljmp
rcrb
out
jno
cmp
cld
sub
xchg
mov
in
cmc
lahf
shll
mov
out
xor
pop
push
xchg
fcoms
call
lahf
jge
test
lahf
mov
pop
iret
lods
stc
pop
lahf
mov
lret
std
inc
int3
mov
mov
stos
push
nop
add
jl
sbb
insb
pop
dec
push
and
jns
xchg
dec
andl
test
lods
loopne
fistps
push
into
mov
sub
insb
inc
test
scas
push
aad
out
and
and
pop
sbb
and
push
fmull
mov
push
mov
aad
insl
jle
clc
adc
add
push
and
sub
jo
ss
sub
lds
pusha
lret
add
xchg
add
js
jbe
das
and
sbb
fildl
pop
out
inc
aam
inc
xor
subb
and
push
xchg
ljmp
cwtl
je
in
push
push
dec
add
push
je
add
lcall
jle
add
add
mov
mov
xchg
pusha
ss
ret
adc
outsb
pop
stos
sub
call
adcl
cmp
mov
outsl
jnp
mov
sbb
sti
push
loope
mov
adc
inc
das
sub
je
mov
icebp
xlat
sub
test
movsb
pop
mov
mov
cmpsb
rcrl
dec
mov
pusha
cmp
loope
push
ds
pop
push
inc
inc
popa
addr16
jle
jle
adc
mov
xchg
into
sub
sbbl
fst
adc
popf
jno
pop
dec
sub
daa
xor
inc
mov
add
daa
je
vrcp14ps
dec
addr16
mov
nopl
xchg
sub
imul
ja
xor
mul
mov
mov
cmp
and
add
cmp
cmp
lds
aaa
push
dec
enter
add
stc
testl
jl
cmp
lret
jecxz
push
imul
adc
loop
aas
icebp
scas
mov
stos
inc
cmp
movsb
out
cmp
sbb
outsl
lock
jge
sub
sub
pop
enter
sub
lcall
mov
mov
mov
and
gs
test
outsl
sbb
or
loopne
hlt
add
or
push
or
jp
push
repnz
xchg
mov
es
enter
push
imul
fdivs
mov
test
imul
cwtl
jl
lods
and
fcos
out
aas
jne
sub
jne
bound
push
roll
inc
lret
loop
or
pop
sbb
aam
xchg
jo
push
in
add
inc
stos
data16
add
stc
fldl
xor
sbb
ret
mov
or
ljmp
stc
lods
push
cli
and
jns
sbb
dec
fists
add
lahf
lret
fwait
xchg
imul
mov
jge
inc
mov
cmp
jno
adc
push
mov
mov
daa
test
xor
jno
inc
mov
adc
push
jmpw
add
cmpsb
fdivrl
or
repnz
xchg
enter
mov
pop
mov
mov
sbb
jbe
xchg
dec
cltd
sub
inc
fadd
mov
out
mov
aam
or
popa
cmp
ret
pop
movsb
cmp
popa
or
xlat
ds
cwtl
pusha
shrb
inc
xor
rclb
sub
ja
roll
movsl
sahf
pushf
loop
das
lahf
movsb
daa
mov
fidivrs
xlat
out
sub
test
ret
out
rcll
jbe
aam
repnz
sbb
pushw
add
mov
mov
pop
repz
mov
daa
jmp
outsl
adc
je
pop
test
fnsave
mov
cs
sub
cld
in
adc
test
lret
pop
stos
push
push
ljmp
fsubr
adc
inc
and
cmp
inc
mov
mulb
mov
inc
adc
stos
insb
jo
pop
ja
bound
adc
test
je
mov
push
push
push
test
nop
or
enter
fs
ret
mov
out
push
repz
xchg
push
dec
dec
cli
nop
pop
test
mov
mov
sbb
mov
sti
sub
adcb
rclb
jns
mov
mov
or
or
jns
cmp
arpl
lret
lods
pop
cmp
or
shl
cmp
dec
sbb
mov
or
cwtl
pop
or
popa
iret
sbb
or
adc
push
xchg
fisttps
xchg
es
test
mov
xchg
sar
dec
xchg
mov
jl
adc
xchg
ficoms
and
daa
jb
ds
insb
or
mov
pop
aaa
pop
jle
cmc
inc
or
pop
sub
jno
lahf
mov
jle
pop
jb
cmp
out
jbe
das
sbb
scas
xchg
lea
call
cmpsb
mov
xor
int
jp
lods
pop
fs
push
imul
ret
fisubl
mov
and
xor
jle
mov
mov
mov
lret
push
cmp
inc
jle
les
aad
in
fstpt
jmp
aaa
pop
das
and
in
dec
in
insl
and
data16
inc
ds
dec
push
sub
mov
dec
pop
push
jns
cltd
adc
ret
xchg
call
add
ret
cmp
repnz
imul
cmc
pop
add
mov
mov
ret
arpl
test
sbb
call
js
add
fs
dec
repz
rep
mov
mov
lret
and
pop
std
loope
pushf
rorb
lods
data16
jne
adcb
push
dec
jl
cmp
nop
push
mov
and
push
mov
jecxz
daa
cld
sahf
out
add
xchg
adc
adc
inc
push
sahf
mov
inc
loope
loop
add
das
shlb
push
xlat
insb
xor
pop
xchg
test
mov
outsl
lcall
jnp
daa
flds
cmp
push
push
pop
clc
cmp
cwtl
movsb
mov
xchg
jl
xorb
lock
je
imul
insl
dec
aaa
fdivrl
lods
pop
jmp
cld
outsb
xor
enter
jb
ret
jle
loope
rcrb
and
jecxz
adc
aam
jmp
xchg
stos
mov
es
es
loope
ss
nop
ffreep
jns
pop
inc
dec
loope
jmp
ficompl
sbb
leave
sbb
mov
sbb
loop
push
movb
xchg
mov
loope
lea
fwait
pop
and
out
or
pop
inc
test
call
mov
mov
add
xor
out
xor
notb
stc
fcomps
sbbb
add
es
lea
loopne
xchg
int
mov
mov
jnp
push
add
fimull
pop
inc
cmpsl
mov
dec
mov
loop
sub
dec
test
cmp
test
jnp
pop
fwait
mov
adc
rorb
push
xchg
or
cs
sbb
jge
lret
test
shrb
adc
loop
gs
jp
in
ficoml
sub
fwait
cmp
sbb
fiaddl
pop
and
jbe
out
ficoml
sahf
mov
test
fwait
and
outsb
ret
add
enter
or
xchg
fcoml
mov
pop
cld
es
std
fsubrp
daa
sbb
sub
out
imul
imul
mov
push
xor
dec
cmc
mov
clc
inc
sahf
or
pop
stc
add
mov
sub
out
movsl
sub
shlb
dec
cmp
insb
pop
jg
sti
inc
adc
mov
xchg
in
test
in
mov
lret
mov
test
repz
fnstsw
aad
xorb
jns
aas
pushf
and
subb
mov
fdivs
cmp
inc
dec
add
out
pop
stos
or
lret
or
jo
lods
push
sbb
rep
fsubrl
xchg
add
stos
ret
cmp
addb
faddp
aas
mov
into
aaa
test
xchg
lods
out
cmp
fs
sbb
dec
daa
dec
loopne
fneni(8087
sub
fcoml
cmpsl
pop
pop
push
dec
punpckhbw
xchg
test
push
enter
mov
mov
lret
mov
insb
clc
or
ds
push
in
mov
and
lret
push
mov
out
std
mov
and
dec
sub
mov
xchg
mov
addr16
ficompl
fcompl
mov
lcall
pop
jge
xchg
mov
jne
adc
call
sahf
mov
dec
cmpsb
mul
sahf
cmpb
push
mov
cmc
sub
mov
fcmovne
clc
pop
inc
mov
xor
insl
out
leave
and
stc
push
dec
int3
or
cli
aaa
lods
mov
jns
sbb
ja
add
mov
dec
mov
push
xor
pushf
lock
cmc
adc
dec
push
int
out
pop
fistps
dec
ds
rorb
shlb
stos
sub
out
pop
dec
inc
call
shll
nop
push
sti
shl
mov
inc
jg
sbb
cltd
sti
lcall
call
cmp
or
jp
jl
adc
push
xchg
sub
dec
pushf
je
push
nop
outsl
pop
ljmp
pop
movsb
pop
sbb
jp
mov
mov
lea
fcomp
or
rcrl
cmp
lock
inc
rcrl
movsb
cmpsb
jp
popl
and
fisubrl
divl
push
into
cmc
inc
or
and
and
shl
inc
in
inc
pop
cltd
and
cltd
shr
lods
gs
mov
and
std
ret
sub
fst
lahf
lahf
call
aaa
push
clc
icebp
jmp
outsl
sbb
xrelease
push
ds
pop
cltd
fdivl
aad
movsb
aam
mov
insl
and
mov
leave
jl,pn
daa
pop
in
insl
sub
gs
cmp
negl
lret
sahf
pop
popa
cmpsl
jle
jns
repnz
pusha
shlb
ret
mov
adc
xor
cwtl
mov
or
mov
mov
and
push
jp
pop
pop
rclb
fnstenv
es
sbb
fsubl
test
add
lahf
mov
mov
shlb
cmp
push
sahf
jge
sbb
arpl
das
pop
es
mov
iret
mov
xor
sbb
negl
mov
lods
bound
into
mov
test
in
sti
mov
enter
xchg
loopne
shlb
data16
mov
xchg
lods
faddl
std
fs
adc
stc
rorb
xor
sbb
mov
add
mov
cmpsl
subb
movsl
lcall
jbe
ja
imul
lods
or
mov
stos
dec
sbb
inc
sub
loopne
ficoms
into
aad
push
jne
out
lahf
jmp
stos
dec
clc
xchg
ret
cltd
movsl
in
pop
sub
xchg
mov
pop
scas
add
mov
imul
call
mov
xor
testl
cmc
ret
mov
xchg
mov
jae
inc
mov
imul
ds
lds
add
sbb
xchg
negb
cmc
jmp
imul
mov
fldcw
out
rcrl
pop
mov
clc
sub
xor
cmp
shrb
push
mov
pop
mov
scas
and
push
mov
pop
inc
iret
pop
xor
mov
fldcw
xor
push
pop
cmpsl
leave
dec
push
xor
ja
xchg
call
lret
pop
pop
jmp
cmp
adc
sti
or
mov
mov
ds
in
dec
arpl
mov
cmp
mov
fmuls
push
adc
in
jo
inc
das
fdivrl
add
mov
mov
test
ret
popf
mov
aam
pop
jle
push
sbb
sti
cmpb
cli
repnz
or
dec
add
loope
pop
pop
insb
inc
shrl
xor
fists
lods
cmp
xor
mov
sub
xchg
sub
shlb
pop
lahf
push
in
nop
inc
repz
and
ret
fiadds
iret
cmp
cmp
insb
fs
pop
data16
out
pop
sbb
loope
inc
ret
mov
fstl
jnp
shll
stc
sahf
add
bswap
test
cwtl
iret
cwtl
lds
test
xor
mov
xor
fstl
and
jmp
add
pop
lods
bound
sbb
mov
jne
mov
xchg
adc
jecxz
test
jecxz
lret
sbb
cld
inc
rclb
push
mov
lahf
pop
in
cmp
nop
clc
test
mov
gs
push
pop
stos
sub
sbb
xchg
sub
sub
push
jmp
cmp
xor
test
stc
mov
or
les
mov
add
xchg
cs
test
xchg
pusha
je
sbb
hlt
fbld
fbstp
in
adc
pop
test
adc
shrb
testl
testb
mov
cmp
push
popa
dec
out
out
xchg
lods
sbb
mov
jp
insl
add
xchg
add
add
lret
rep
push
test
test
add
jne
lahf
or
imul
es
mov
add
mov
int
inc
add
pusha
shlb
and
mov
lcall
pop
lods
shlb
rcll
xor
pop
outsb
sub
push
xor
decb
pause
inc
in
fdiv
jp
jnp
jp
lods
or
add
mov
or
mov
cmp
sbb
in
jne
lea
mov
mov
lea
cmp
test
aam
pop
pop
enter
mov
cmp
mov
rorl
mov
bound
dec
push
lods
dec
cmp
in
push
adc
sbb
fmull
sbb
cmp
inc
daa
ret
std
cmp
inc
insb
xchg
test
insb
cmp
jp
mov
mov
jmp
mov
fcomp
inc
into
jmp
movsb
out
call
jle
adc
ds
out
pop
cli
mov
aam
cmp
cmp
jb
sub
jae
iret
gs
dec
mov
in
push
loopne
in
sbb
or
adc
movsb
dec
popf
test
add
pop
or
add
mov
push
jmp
fs
mov
inc
mov
mov
lret
mov
pop
insb
xchg
es
dec
adc
sbb
mov
loop
push
sbb
push
xor
rcll
stos
lcall
cmp
rol
mov
or
pop
jne
xor
cwtl
cwtl
or
lret
arpl
sbb
out
inc
push
or
mov
mov
jne
sar
xlat
rorb
jl
and
mov
mov
or
inc
xchg
sbb
shll
sbb
or
sub
push
or
mov
mov
inc
fs
les
inc
sbb
aaa
ds
inc
insl
add
pop
mov
pop
xor
out
sub
hlt
and
or
inc
scas
movsb
in
stos
push
adc
lock
inc
jb
jmp
outsb
pop
bound
adc
idiv
jge
adc
popf
scas
mov
or
add
movsl
and
cmp
add
cmp
add
dec
jl
stos
stos
pusha
pop
decb
stos
addr16
jb
int
pop
push
outsb
cmpsb
push
push
xchg
lret
sub
in
jno
out
dec
lret
add
test
lds
lahf
scas
dec
pop
sub
push
jl
sbb
mov
xor
test
xchg
sarb
xor
sub
sub
pop
mov
mov
fcmovnu
loopne
cmp
in
jg
insb
fldl
push
arpl
dec
cltd
repz
push
sbb
adc
clc
mov
out
mov
adc
in
xchg
add
shl
sti
sbb
jl
mov
mov
jo
or
pop
loop
rorb
mov
sti
xchg
xchg
faddl
xor
cli
or
cmpsb
jmp
or
stc
cmpsb
jg
mov
jge
lods
sbb
loope
pop
stc
mov
cmp
rolb
pop
mov
les
int3
daa
push
jle
or
add
loope
in
lahf
jge
xchg
mov
xchg
pop
push
movsl
and
pop
mov
cs
sub
fistpl
xor
jae
movsl
fwait
add
lods
pop
frstor
in
xor
incb
dec
pop
pop
mov
pop
int
loopne
shll
jg
call
iret
std
hlt
dec
sub
sbb
sub
stc
mov
ja
sub
lret
out
jp
pushf
mov
adc
divb
mov
es
daa
test
clc
sub
jbe
inc
insl
xor
popf
or
sub
pusha
jl
cwtl
stc
aam
cmp
imul
je
dec
rcr
pop
idivl
sub
inc
xor
fistps
mov
sarb
and
or
inc
sbb
lods
mov
insl
lea
loopne
pop
add
jge
cmp
cmpsb
fisttpl
fdivl
loop
dec
pop
dec
sbb
js
fwait
dec
push
sub
loop
arpl
dec
ja
mov
movl
cltd
adc
lret
inc
jae
enter
pop
xchg
jp
or
push
dec
push
mov
or
cmp
xchg
inc
xor
dec
inc
xchg
movsl
iret
popf
cs
cmpsl
or
pop
call
mov
mov
mov
or
lea
fisubs
push
ret
divl
mov
xor
and
insl
lcall
adc
push
int
sti
call
mov
dec
leave
repz
inc
push
push
stos
xor
fcomps
xor
dec
mov
cmp
and
cmp
mov
das
push
mov
testb
pop
pop
pop
sti
jmp
or
pop
les
push
out
push
push
xchg
aas
sbb
mov
gs
and
inc
adc
xchg
in
movsb
insb
add
cmpsb
dec
mov
lret
inc
mov
nop
jns
test
pop
shlb
fs
das
mov
fwait
xchg
mov
push
xor
rcr
pop
xor
lret
jge
mov
ss
mov
pop
ss
dec
pop
push
movsb
je
inc
pusha
cld
push
loopne
push
adc
jmp
sbb
mov
out
ficoms
push
in
aad
sub
cmp
or
xchg
aas
in
inc
data16
js
jbe
xchg
mov
data16
testl
pop
rcrb
adc
cmpsl
ljmp
mov
dec
jp
mov
fistpll
push
insl
sub
adcl
imul
xchg
sub
fs
mov
scas
aaa
dec
cmp
add
sahf
pop
ds
adc
mov
and
lds
push
push
les
dec
imul
cs
pushf
jno
jb
repz
aad
callw
or
aas
lcall
rcrl
xor
push
or
add
cwtl
add
stos
push
and
imul
adc
cmp
arpl
bound
lea
pop
and
sbb
loope
jnp
sbb
pop
loopne
mov
or
mov
cmp
lret
inc
cmpb
shrl
sbb
lret
mov
push
dec
cmc
test
jbe
xchg
es
pop
jo
fwait
hlt
inc
or
les
adc
xchg
pop
push
mov
jmp
add
and
loop
ret
ljmp
data16
jnp
mov
mov
popf
jmp
call
dec
icebp
roll
fimuls
xchg
cmpsl
push
push
pop
stos
mov
xchg
les
fs
mov
repz
outsb
insl
sub
fnstsw
jb
mov
insb
cmp
daa
mov
adc
insl
xor
cmp
cld
add
notb
add
adc
popa
push
and
enter
pushf
ret
aad
pop
cmp
sub
add
shll
mov
xchg
and
fsubrs
and
mov
mov
add
lahf
inc
mov
push
loop
adc
mov
push
das
fwait
bound
sbb
fstpt
lds
lea
sbb
scas
add
or
shlb
inc
outsb
aad
jle
movsb
push
lods
jmp
or
jns
xchg
cmpsb
mov
jb
push
enter
je
dec
or
adc
dec
xchg
pop
lods
xchg
push
xchg
mov
data16
mov
xor
cmpl
movlps
fiaddl
or
sbb
push
addb
movsl
mov
add
jle
push
out
popf
stos
adc
push
in
mov
or
mov
je
jno
shlb
dec
sbb
lds
lock
ret
pop
fsubs
cltd
imul
push
cmpsb
jmp
mov
push
repz
nop
pop
push
pusha
push
sub
fs
xchg
out
inc
sub
lcall
inc
xor
jae
in
enter
mov
int3
sbb
gs
or
cmp
and
insl
mov
aam
mov
stos
mov
imul
sahf
ror
lahf
fdivs
mov
ret
mov
lret
repz
pop
push
lds
inc
std
push
dec
push
inc
fdivs
addl
enter
jl
mov
mov
cmp
and
jle
or
push
outsl
adc
clc
lea
test
call
mov
enter
arpl
mov
xor
in
adc
mov
cmc
filds
dec
mov
push
test
xchg
push
sub
dec
leave
xchg
pop
mov
adc
mov
lea
arpl
mov
pop
push
cmp
int
pop
test
cs
pop
push
stos
call
mov
add
adc
lods
negb
ljmp
jecxz
lods
xchg
and
or
dec
fs
add
xchg
fwait
les
shlb
cmp
mov
xor
push
je
fidivl
loope
mov
jmp
mov
pusha
add
cmpl
sub
stc
jecxz
je
xchg
jle
es
inc
arpl
sub
push
cmp
shll
jb
mov
mov
jne
mov
int
mov
push
jns
cwtl
jns
ds
int
jp
cmp
add
xchg
lock
xor
in
popf
mov
mov
xchg
ljmp
test
mov
pop
pop
pop
lcall
push
cwtl
and
aas
push
or
ret
fisubrl
adc
repnz
aam
pushf
idivb
testl
callw
mov
loop
and
mov
pop
insl
xchg
repnz
in
arpl
add
lahf
push
add
xchg
sbb
test
rcll
shrb
clc
fwait
mov
xchg
add
inc
icebp
fldz
pop
pop
mov
and
test
and
xchg
mov
jnp
push
sbb
pop
add
mov
movb
add
jge
add
dec
out
imul
dec
mov
movsb
add
dec
pop
jmp
xor
stos
or
ret
sbb
cmp
pusha
int3
mov
data16
mov
test
xor
test
cmp
imul
inc
inc
and
fs
cmp
xor
jecxz
stos
mov
mov
movsl
mov
cld
pop
inc
inc
jge
cwtl
adc
dec
test
cli
mov
xor
cs
ret
or
push
mov
cmp
ja
ficoml
pop
ret
incl
out
std
in
xchg
mov
xchg
push
adcl
leave
pop
aam
mov
in
sub
out
inc
daa
sbb
mov
or
sti
mov
std
lds
dec
jl
push
jnp
xor
jbe
and
cmp
pop
int
xchg
inc
mov
rcl
jl
pusha
outsl
push
xchg
jg
popf
sub
pop
or
mov
divb
mov
push
outsb
cwtl
push
subb
mov
cmp
mov
fdivs
sbb
std
sbb
xorl
icebp
ja
mov
dec
hlt
jb
or
bswap
mov
jl
faddl
test
mov
fisttps
cmp
add
push
push
fimull
lcall
pop
cli
lea
sbb
or
pushf
push
cmpsl
lret
mov
xlat
cmpsb
and
out
out
pop
push
fisubl
fcoms
gs
mov
int
jno
addr16
adc
cmp
into
cs
subb
les
adc
jl
cmp
aad
insb
cmpsl
ficoms
xchg
adcl
aas
or
jnp
cmp
inc
repz
push
push
hlt
push
inc
lods
mov
xor
push
out
scas
imul
arpl
idivl
lods
les
js
jo
mov
insb
jl
pop
into
int
add
ljmp
push
mov
pusha
adc
mov
mov
inc
dec
pushf
ljmp
stos
stos
lods
sti
cli
jl
pop
insb
hlt
cmpsb
inc
sub
lock
adc
loopne
sahf
sub
mov
les
out
fcompl
lock
lret
div
pop
es
push
adc
mov
les
cmp
rcrl
je
pop
fisubl
rcrb
fwait
sub
mov
cmp
cli
in
inc
pusha
mov
adc
jbe
aas
sbbb
cs
popf
sub
movsb
js
push
dec
faddl
and
dec
in
dec
bound
int3
pop
sbb
rcrb
lret
add
push
lock
dec
daa
inc
push
and
call
adc
jecxz
je
sbb
pop
mov
and
mov
push
lock
mov
push
xlat
sar
and
xlat
mov
xor
clc
sarl
clc
rcll
outsb
ljmp
sahf
jmp
or
in
jno
dec
test
dec
test
xchg
push
sbb
enter
push
std
cmp
popf
aaa
out
and
ds
xlat
clc
sub
sbbb
pop
into
cli
shlb
jmp
mov
stos
dec
sub
add
outsb
jp
sub
sub
int3
sahf
je
fldt
lods
pop
push
jne
test
frstor
push
pop
xchg
jle
repz
out
inc
in
push
cmp
inc
inc
negb
cld
lea
filds
ffreep
pop
push
xor
xchg
outsl
lahf
and
fmull
in
mov
cmpsl
xchg
mov
cmpsb
fimuls
cmp
fs
mov
cmp
rolb
sbb
rcrb
imul
insl
mov
push
mov
cltd
inc
imul
push
movsb
lea
mov
outsl
jmp
call
dec
mov
mov
pop
movl
or
xor
lea
fnstenv
xor
mov
orl
push
jl
mov
fistps
sub
pop
int3
pop
push
mov
push
cmpps
stos
jb
dec
xchg
repz
sbb
push
shl
icebp
mov
pop
jb
mov
imul
mov
fsubrl
inc
ljmp
mov
scas
push
out
push
es
mov
and
mov
je
stc
dec
add
rcrb
and
mov
or
push
pop
and
push
sub
jge
mov
xor
mov
das
push
insl
cmp
push
push
fldl
ja
push
call
jnp
ljmp
fdivrs
mov
loop
push
outsl
mov
adc
adc
jl
out
xor
add
add
cmpsb
inc
push
add
fcmove
push
cmc
xchg
adc
pop
cs
mov
dec
test
lea
pop
fdivrl
rol
xor
stc
inc
or
or
and
jecxz
scas
test
pop
std
cli
fldcw
mov
and
in
scas
push
das
push
ret
je
and
dec
sbb
and
xchg
loope
jmp
fistl
cmp
icebp
cli
out
push
outsl
clc
repnz
mov
daa
stos
mov
mov
imul
mov
les
adc
cli
mov
dec
adcb
jns
sti
call
int3
fiadds
cmpl
test
dec
jns
ljmp
scas
inc
sbbl
add
pop
mov
xorl
call
mov
inc
pop
mov
outsb
dec
pushf
shrb
mov
rorl
xchg
push
and
cmpsb
mov
insl
push
xor
scas
lcall
push
jle
out
scas
mov
fistl
arpl
pop
cmp
dec
pop
add
out
push
push
xchg
div
daa
push
ficompl
pop
jb
jb
lock
ret
push
cmpsl
call
out
gs
scas
or
notl
test
or
inc
repz
fwait
push
jle
dec
out
jne
out
repz
sub
sbb
sub
addr16
pop
add
bound
sbb
cmp
mov
lds
int3
imul
lahf
js
clc
sti
mulb
mov
and
push
lcall
daa
clc
cmp
pop
popa
ret
add
out
mov
jnp
aas
out
sub
sbb
xor
xchg
jmp
jecxz
mov
and
dec
in
aad
andb
pusha
adc
pop
bnd
mov
jne
jae
ja
xor
ret
test
mov
push
test
xor
push
in
int
testb
out
dec
rolb
test
mov
sbbl
out
push
popa
mov
dec
dec
sub
insl
push
sub
or
iret
ss
cli
pop
lahf
aaa
popf
push
adc
clc
mov
mov
mov
imul
mov
lret
aad
inc
lret
pusha
pushaw
test
rcr
sbb
push
ljmp
fcmovb
fwait
in
add
pop
mov
jo
rorl
lret
xor
cmc
cmp
loopne
stos
popf
lods
jmp
and
fs
nop
lret
jecxz
fs
pop
push
push
pop
pop
dec
fmul
or
sub
mov
adc
adc
or
jecxz
cmpl
jge
push
push
je
or
stos
mov
sub
cmpsb
inc
sub
outsl
enter
cmp
adc
loop
push
mov
lea
pop
pop
int3
stc
int3
aad
cmp
mov
or
or
leave
xor
cwtl
and
in
mov
add
les
mov
mov
andb
xor
xchg
outsl
pop
cs
shrb
xlat
push
sahf
xor
or
push
jmp
popa
inc
mov
adc
pop
xchg
lods
cmp
enter
nop
cmp
fwait
inc
leave
loopne
xchg
daa
pusha
push
inc
jle
add
rolb
or
sti
pop
imul
pop
or
sub
imulb
sub
sbb
pushf
aam
or
fdivrs
xchg
arpl
dec
adc
aam
pop
rorb
fnstenv
stc
icebp
or
dec
or
outsb
int3
cmp
xor
push
shlb
sub
and
mov
adc
cmc
in
scas
imul
outsl
repnz
inc
outsl
popf
stos
sbb
sti
jae
fmull
and
jnp
adc
in
push
roll
cmp
mov
cmpsb
and
aaa
int
aas
xchg
out
xchg
stos
xchg
ret
xchg
xchg
mov
xchg
lock
mov
inc
mov
cwtl
jbe
sbb
mov
in
test
imul
inc
cwtl
aaa
lea
mov
mov
iret
or
lods
aaa
out
lea
aam
inc
mov
aaa
cmp
das
addr16
int
or
fs
cmp
imul
movsl
popf
jle
jne
lcall
mull
xchg
push
std
and
jle
push
out
or
jbe
pop
add
jb
jae
notl
ret
pop
das
popf
sub
loopne
push
jns
js
test
leave
pop
fiaddl
push
mull
mov
inc
in
mov
stc
test
arpl
sub
xchg
inc
insl
leave
push
mov
xchg
das
in
mov
fsts
sub
push
lods
fwait
inc
dec
adc
sbb
int3
js
pop
xchg
fadd
imul
data16
push
loopne
cld
push
pusha
pusha
dec
add
lods
mov
out
rcl
add
arpl
cli
aam
push
je
inc
jge
in
lret
aaa
ja
pop
mov
jmp
lret
sub
stc
push
daa
mov
fs
mov
out
cmpsb
test
xor
push
in
ljmp
cmpsl
add
or
inc
lahf
movl
push
addr16
mov
sub
clc
scas
and
pop
popa
dec
in
dec
xchg
sti
cmp
in
xor
pop
jns
pop
pop
sahf
inc
mov
pop
inc
xchg
xor
int3
push
out
pop
cltd
and
xchg
xchg
or
and
loopne
clc
aad
xchg
dec
adc
aas
jl
and
jne
pop
mov
std
add
out
and
fdivr
xchg
push
adc
das
psllq
and
push
nop
xor
loop
push
mov
dec
call
lods
pop
std
sti
xlat
add
out
aam
add
outsb
mov
sub
in
xchg
jge
testl
mov
sbb
dec
ret
repz
je
clc
iret
inc
aas
add
sbb
mov
in
fnsave
mov
daa
dec
dec
lds
adc
ret
or
repz
scas
repz
icebp
cwtl
push
cmp
lcall
fidivrs
fiaddl
xchg
into
leave
add
cmp
out
jnp
fldt
cwtl
stos
or
lcall
ljmp
sbb
mov
cltd
pop
sub
add
loop
leave
pushf
cmp
jge
add
mov
adc
add
adc
fs
imulb
outsb
mov
and
int
lret
add
cmp
roll
or
and
add
sbb
fisttpll
adc
sbb
sbb
aam
pop
mov
lods
iret
jns
ljmp
loope
jecxz
add
rcrb
dec
sub
jp
fistl
add
mov
push
imul
sub
adc
inc
fcmove
aad
and
lods
mov
sbb
pop
mov
stos
jne
mov
lds
cmp
clc
js
push
pop
out
in
jle
inc
rcll
xchg
jo
mov
jmp
mov
push
mov
aad
sbb
mov
mov
xchg
out
jae
sahf
push
push
mov
test
jg
pusha
fimull
in
adc
pop
xchg
push
jbe
jnp
or
cmp
aam
es
mov
push
mov
loop
ljmp
call
gs
inc
addr16
and
and
ds
mov
pop
daa
sahf
inc
xchg
mov
dec
xor
inc
mov
inc
or
push
pop
loop
loop
sub
sbb
out
add
clc
cli
hlt
xor
xchg
push
mov
cwtl
and
leave
es
ja
xor
loope
pop
jmp
pop
out
pop
or
arpl
cli
xlat
fimuls
es
test
sbb
gs
pop
mov
into
adc
cwtl
leave
outsb
movsb
mov
leave
pop
jo
jmp
test
lea
lret
pop
dec
and
leave
sub
dec
pop
jo
push
xor
scas
add
testb
jns
addl
jp
sbb
mov
scas
add
cli
je
or
push
ds
xor
sub
or
cs
into
xchg
stos
mov
fsubl
mov
fisttpl
les
out
ror
xor
shll
pop
mov
testb
jl
mov
inc
lock
mov
js
mov
sub
dec
or
repnz
cmp
push
movsl
pop
mov
pop
push
xor
cmp
dec
insb
jg
mov
mov
outsl
mov
mov
xchg
pusha
stos
popl
mov
lods
fucom
pushf
fsts
mov
ja
inc
pop
stc
outsb
out
dec
xchg
jl
outsl
test
mov
loope
mov
scas
insb
in
imul
jo
dec
push
js
cmp
dec
inc
es
lar
and
fiaddl
scas
loope
addr16
xchg
orl
push
sbb
imul
xor
int
and
sub
popa
cld
inc
leave
inc
jl
push
rol
push
push
aad
cs
mov
add
pop
ret
in
aad
sub
outsl
adc
sarb
push
adc
outsb
shlb
inc
mov
subb
int3
xor
adc
dec
add
lahf
dec
lcall
enter
cmp
mov
lods
jp
popl
adc
mov
into
and
fsubrp
shll
jl
outsb
xchg
mov
mov
lret
das
cmpsb
das
test
mov
inc
jne
xor
repnz
adc
inc
insl
jae
int
mov
negb
or
sbb
and
inc
lea
mov
pop
sbb
rolb
movsb
pushf
cmp
mov
push
out
dec
pop
sbb
xchg
sub
or
mov
jns
lock
xlat
fneni(8087
or
mov
jns
push
scas
fadds
pop
cmp
pushf
les
jp
mov
sub
lods
leave
jle
jecxz
cs
push
movsl
xchg
fcomps
stc
ret
or
and
mov
jae
enter
movsl
pop
xchg
in
aam
jb
mov
loop,pt
pop
push
scas
stos
lods
xchg
add
pop
fistps
pushf
insb
mov
inc
test
mov
push
xabort
mov
int
pop
popf
ja
add
data16
cmpsb
xlat
push
movsb
pushf
in
int
fs
jmp
imul
and
sub
dec
aad
pop
shll
imul
mov
lods
sub
push
and
and
repz
stos
in
jno
outsb
mov
adc
sbb
add
loope
mov
fs
sbb
shlb
es
fisttpl
in
xchg
ss
das
pushf
jns
or
or
pusha
icebp
movsb
dec
int
enter
rcll
adc
mov
pop
ss
pop
adc
das
dec
push
cld
xchg
sub
out
adc
stos
arpl
and
cmpsl
xor
popa
test
addb
mov
pop
in
aam
inc
dec
stos
cli
sub
jmp
jbe
sbb
sub
lahf
jns
sub
adc
pop
and
popl
ds
dec
sub
lahf
xor
adc
pop
imul
xchg
aas
sar
lahf
and
dec
jg
and
lret
dec
loope
xor
xor
jbe
or
test
test
test
pop
fsubs
sbb
inc
pop
or
add
pop
in
scas
lea
imul
decl
icebp
adc
jecxz
addb
stos
inc
loope
push
movaps
pop
push
dec
and
pusha
dec
mov
test
add
or
sub
cmp
xchg
cmp
and
rcrb
mov
fistpll
push
hlt
fisubl
repz
fwait
aad
xor
aam
into
mov
xor
mov
adc
shrl
and
pop
rol
push
cmp
sbb
dec
cmpsb
mov
cltd
les
jle
arpl
mov
hlt
add
addr16
cld
xchg
popa
jge
popa
mov
std
lea
aad
cld
mov
inc
cld
mov
andps
pusha
jle
push
iret
cmp
ret
ja
popf
xacquire
jbe
pop
inc
ss
mov
jno
xchg
mov
leave
dec
and
outsb
rorb
mov
outsb
inc
xchg
add
inc
jecxz
sbb
popf
orl
les
inc
stos
in
push
lcall
adc
mov
fwait
stc
daa
in
enter
cmp
mov
repnz
lds
add
jecxz
sbb
sub
leave
mov
movsl
das
xor
inc
loop
movsb
jo
sub
jecxz
mov
subl
xchg
test
loopne
jae
push
int
das
out
into
lock
filds
testb
mov
add
and
shlb
pop
insb
sti
pusha
cmp
add
mov
subb
scas
push
in
cmpsl
and
fidivrl
loop
bound
jo
mov
enter
movsb
mov
jmp
bnd
jmp
xchg
sbbb
jg
fimuls
imul
add
mov
pop
lret
enter
insl
dec
lods
adc
or
or
sbb
aam
mov
mov
test
dec
add
add
test
arpl
int
fwait
dec
push
popf
fists
pop
loop
sbb
inc
stc
shrl
mov
cmpsl
lahf
inc
lock
sbb
notl
xchg
xorps
push
lcall
dec
mov
mov
xchg
push
push
mov
inc
ja
and
jle
or
mov
sarl
ret
adc
outsb
ja
cli
gs
nop
hlt
dec
adc
movsl
mov
imull
aaa
push
es
lret
cs
pop
lock
add
test
in
push
xchg
and
rorb
jno
divb
mov
movsb
lahf
fs
sub
fnsave
sub
stos
and
add
icebp
jge
stc
andb
fidivrl
ficompl
add
loope
and
adc
dec
jno
cmp
inc
scas
out
push
ret
popf
into
sti
sub
bsf
jle
jns
mov
outsb
popf
xlat
cmpl
lret
push
lret
jne
dec
inc
inc
aaa
adc
js
in
add
mov
icebp
popa
out
or
sub
mov
in
add
mov
mul
aaa
cmp
loope
fcompl
cltd
pop
lahf
sbb
dec
jbe
xchg
inc
add
push
xchg
test
dec
call
sub
adc
das
pusha
push
pushf
push
adc
xchg
mulb
popf
sbb
ss
out
mov
inc
cmpsb
mov
mov
inc
sahf
test
push
jns
cmpsl
loopne
mov
push
mov
push
repnz
sub
pop
rclb
jle
aad
out
ret
sub
fisttpll
fwait
outsb
cmp
outsb
jo
icebp
lock
xchg
dec
sub
sbb
xor
adc
out
mov
xchg
mov
adc
add
push
aad
bound
adc
push
adc
pushl
inc
insl
testl
sub
mov
ret
sbb
push
fs
lahf
fwait
mov
cmp
lahf
loope
lock
iret
pop
imull
and
jns
mov
aas
mov
mov
inc
and
xchg
xor
cmp
repz
mov
sbb
movsl
jnp
and
test
mov
xor
les
mov
dec
in
sbb
fistl
shlb
shrb
inc
shll
sub
cli
jmp
rorb
mov
mov
push
jmp
out
lret
dec
in
jle
add
int
mov
mov
jns
cli
aas
imul
xchg
xchg
xchg
pop
shlb
jge
aas
cwtl
js
xchg
sub
push
sub
icebp
mov
aam
lock
xor
jbe
cmp
dec
test
jle
repnz
pop
repnz
mov
std
aaa
outsb
cmp
mov
cmp
in
in
lret
xchg
mov
sbbb
bound
sub
jns
frstor
fnstcw
mov
lahf
scas
out
pop
and
xor
aaa
and
push
in
pop
jmp
add
mov
dec
out
psllw
adc
adc
decw
mov
push
push
add
add
fists
mov
dec
cwtl
out
jmp
fiaddl
cwtl
movsl
fs
cmpsl
mov
add
jmp
dec
mov
dec
and
dec
mov
and
mov
mov
xor
jo
ss
cmp
sub
in
negl
xchg
sbbl
adc
adc
repnz
inc
xlat
cmp
sub
xchg
repz
or
mov
aas
mov
jne
neg
jbe
xorl
mov
flds
jnp
insb
cmpsl
int3
jle
cmp
leave
jg
dec
in
adc
daa
mov
shl
push
jge
mov
cmp
dec
inc
hlt
ljmp
not
insb
je
pop
into
xchg
push
xchg
sub
push
sbb
mov
lahf
dec
rclb
leave
adc
lds
push
jne
hlt
scas
cld
xor
mov
fists
jmp
mov
ja
xchg
mov
lea
repz
data16
add
shlb
and
mov
sbb
test
mov
lods
add
push
and
push
mov
test
or
nop
xchg
mov
test
adc
push
lock
out
stc
iret
mov
sub
lret
cmp
push
or
imul
lret
lods
lds
sbbb
push
loope
mov
scas
out
mov
sbb
in
xor
sub
xorl
lds
xchg
lcall
sar
push
sbb
mov
push
xchg
dec
sub
mov
dec
inc
jne
popf
xlat
test
mov
fdivrp
xlat
jb
mov
xor
pushf
imul
push
les
jae
add
leave
int
lods
shll
and
es
xchg
mov
in
in
das
push
cwtl
push
popf
xchg
bound
xor
pop
cwtl
iret
hlt
jo
outsl
and
xchg
pop
pop
xlat
dec
mov
sbb
mov
adc
mov
push
push
mov
call
movsb
stos
imul
fcoml
fidivrl
and
pop
jl
mov
push
in
loop
daa
push
bound
movsb
or
cmp
or
lahf
fdiv
adc
cmp
pop
jns
ss
mov
and
jecxz
and
outsb
pushf
fucomip
adc
jmp
outsb
cmp
push
fstpt
movsl
mov
cs
scas
dec
jne
add
add
stc
addr16
mov
push
cwtl
jns
test
mov
orl
ret
pop
mov
adc
fwait
or
mov
jb
adc
call
in
std
push
dec
es
scas
push
ds
pop
dec
xchg
cwtl
push
filds
in
bound
cmpsl
push
adc
out
ja
mov
lahf
ss
cmp
gs
sbb
lea
fsubs
push
sar
sub
aaa
int3
sub
pop
aam
repz
orl
fcomp
pop
xor
lret
pusha
lret
jb
dec
int3
je
sbb
insl
insb
inc
sub
dec
inc
adc
jg
in
mov
ljmp
gs
mov
shrb
jns
adcl
push
imul
stos
mov
fs
push
fmuls
imul
pop
sbb
icebp
sub
movswl
cmp
loop
sub
aam
loop
lods
sub
and
shlb
cmp
decb
xor
scas
fsubrl
outsb
pusha
inc
aam
and
bnd
fisubl
mov
sub
test
movsl
rcll
addr16
jae
ss
subb
jge
cld
adc
in
xchg
lds
cmpsb
clc
mov
pushf
dec
outsb
mov
dec
test
push
or
testb
add
mov
into
jo
mov
adcb
insb
lods
lret
pop
cmp
test
adc
fnstenv
push
add
int
or
pop
inc
nopl
jp
mov
pusha
mov
ret
ret
push
jns
pop
inc
inc
js
cmp
or
sarl
mov
decl
cli
push
cmp
inc
shll
cmp
outsb
cmpsb
lahf
push
mov
shr
outsb
subl
jge
iret
mov
in
or
inc
adc
push
mov
in
push
mov
decl
fcomps
repnz
sbb
test
arpl
mov
push
stos
loop
xchg
repnz
mov
sarb
enter
mov
dec
xchg
push
popa
fcmovbe
stc
fmul
imul
jle
out
and
dec
or
cmp
xchg
mov
fisubrs
mov
push
dec
pop
jmp
ret
lock
sub
mov
movsb
sbb
jnp
mov
mov
sbb
inc
cmp
or
cs
push
lods
mov
fstpl
dec
addr16
dec
jle
test
push
testl
mov
rclb
cmp
push
mov
dec
inc
hlt
adc
ljmp
sub
or
arpl
mov
aam
add
outsl
sub
test
or
outsl
sub
call
flds
jp
and
in
mov
lock
sbb
push
mov
leave
ror
stos
jbe
clc
shrb
xchg
jge
popa
inc
dec
divl
outsl
pop
pop
test
pop
xchg
orl
fldcw
push
adc
push
in
jmp
hlt
push
jo
push
xchg
std
add
xchg
xchg
icebp
sub
mov
in
cwtl
insl
mov
pop
lret
push
fistpl
pop
fcmovnb
rcll
mov
data16
das
fistps
icebp
daa
shll
cmp
fdivl
xchg
push
inc
movsl
nop
bound
mov
cmpl
leave
aaa
dec
ret
in
rcrb
sub
incb
ss
not
xor
enter
inc
mov
push
cld
sbb
fsubs
idivl
dec
pop
mov
ss
adc
cmp
cmova
adcl
call
adc
xor
xchg
fwait
lods
jno
loopne
rorl
xchg
inc
in
fldln2
mov
pop
mov
or
push
jne
mov
jmp
sbb
dec
pop
mov
insl
xor
mov
adc
shrb
div
jg
xlat
imul
and
cltd
outsb
in
and
sbb
insb
sbb
fs
inc
mov
fcoml
repz
js
fadds
jae
mov
xchg
js
ds
outsl
arpl
notl
aaa
xchg
lret
out
jne
nop
push
pop
sbb
mov
inc
sub
pop
mov
and
mov
cld
pop
out
mov
shl
das
dec
mov
cmp
mov
cmp
and
sub
out
fwait
jae
inc
add
lods
popf
les
in
sahf
inc
pop
or
sub
scas
ret
pop
jge
ja
outsl
outsl
mov
pop
xchg
call
jp
pop
pop
sbb
adc
imul
cltd
sahf
xchg
gs
xor
push
push
sub
pop
out
test
lcall
push
cmp
ret
sbb
int
pop
cmp
addl
movsb
sbb
xchg
adc
shl
call
sti
lds
cli
addl
loopne
clc
in
pop
repnz
adc
out
popa
pushf
cmpsb
adc
cmp
xor
stos
outsl
adc
or
cmp
pop
popf
adc
loopne
stos
xchg
jno,pt
mov
jge
sahf
add
xor
test
push
lret
inc
xchg
dec
xor
lcall
scas
mull
insl
xor
xor
sbb
mov
cld
mov
jmp
xchg
fnstcw
ret
cmp
cmc
inc
push
mov
pop
sbb
popf
pop
or
xor
xchg
mov
cmpsb
adc
and
ljmp
movsl
fdivrs
mov
mov
pop
add
das
mov
addr16
mov
xor
inc
inc
push
cld
pop
sbb
fisttpl
add
jge
arpl
testl
jg
mov
dec
aad
clc
xor
cmc
pushf
mov
mov
shl
mov
sbb
adc
push
out
pop
mov
jns
iret
mov
sbb
sbb
dec
lret
shl
dec
push
roll
mov
adc
pop
sbb
lcall
ja
pop
out
hlt
cmc
xchg
and
inc
popl
xchg
xorl
pusha
loopne
rorl
mov
leave
clc
mov
push
xchg
pop
mov
push
mov
inc
or
jno
sbb
sub
xchg
cli
gs
cmpl
inc
mov
inc
mov
pop
into
mov
and
ret
addr16
cltd
push
fnstenv
je
jb
jg
mov
cltd
dec
cli
inc
idivb
xchg
in
and
insl
xor
xchg
xor
adc
popa
mov
jg
js
notl
mov
lods
inc
outsb
test
push
sbb
sub
js
notb
push
lods
xchg
lods
das
xor
xor
enter
xchg
and
ja
jl
jle
mov
sbb
cwtl
xor
jecxz
faddp
stos
cli
loopne
dec
jo
test
js
lret
aaa
repz
pushf
scas
and
push
jae
sbb
nop
mov
mov
addr16
inc
lret
dec
aam
push
sbb
xor
dec
pop
lahf
subb
push
mov
pop
pusha
cmpsb
sahf
out
push
aam
pushw
scas
lret
decb
lea
aam
lret
sub
adc
loop
arpl
rolb
sub
outsb
loopne
jmp
lea
lock
sbb
jno
test
sahf
mov
in
popf
jmp
scas
sbb
cli
and
enter
fs
cmpb
pop
out
in
sub
and
xchg
test
lahf
mov
xchg
dec
call
jg
mov
je
adc
ljmp
imul
sub
mov
movlps
jg
mov
sbb
fs
repnz
sub
mov
push
ljmp
mov
addl
cmpsb
jmp
mov
pusha
movsb
mov
dec
mov
xchg
flds
test
sub
mull
lahf
xchg
add
sub
cmp
mov
jbe
xchg
push
pop
ds
stos
leave
adc
inc
dec
pop
pop
fs
or
int3
xchg
aam
iret
xor
mov
inc
inc
jle
jl
repz
divl
dec
mov
mov
mov
adc
movb
inc
sub
aaa
xchg
loopne
andl
mov
push
push
push
fdiv
jae
and
sti
test
sbb
mov
fstpt
adc
push
push
out
xor
jno
enter
xor
movsb
insb
decb
xchg
and
popf
mov
ret
adc
mov
push
sub
add
hlt
test
fcoml
test
jno
jo
jb
push
mov
push
xchg
icebp
jmp
out
jecxz
out
test
inc
scas
mov
inc
cli
jge
mov
inc
or
xlat
hlt
mov
push
inc
sbb
mov
out
dec
xlat
sub
stc
cltd
jg
pusha
pusha
in
and
pusha
nop
dec
aad
pusha
hlt
test
data16
repz
addr16
mov
lret
xor
pop
push
cmpsb
nop
mov
or
adc
mov
mov
fwait
sbb
dec
cwtd
roll
xchg
and
adcl
xchg
mov
add
push
test
subb
mov
addr16
push
addr16
or
push
fsubrp
mov
scas
sbb
orb
xor
adc
add
bound
push
das
inc
cmpsb
and
repz
out
iret
clc
cmp
or
cli
sub
or
xchg
push
adc
fnstsw
cmp
jl
scas
ds
mov
pop
fnstcw
inc
lret
loopne
je
in
push
stos
aas
ret
push
xchg
mov
shrb
push
clc
pop
cmc
push
xlat
pop
rcr
loope
pop
push
inc
rorl
adc
fcmovnu
and
xchg
mov
push
inc
sarb
and
bound
stc
mov
xchg
cmpsl
add
and
cmp
daa
adc
filds
add
dec
clc
in
dec
mov
sbb
std
daa
sub
mov
push
test
hlt
push
jae
xchg
sub
inc
or
test
scas
gs
inc
xchg
mov
sub
inc
jo
fidivrl
push
fsubrl
cmpl
jo
pop
pop
push
fmuls
lds
and
push
jmp
fwait
sbb
sub
shll
adc
jnp
popf
jns
and
scas
mov
mov
inc
lods
push
xchg
scas
adc
sbb
inc
mov
xchg
push
cs
sub
out
fidivs
lahf
int
popf
test
sbb
into
mov
out
lods
inc
pop
mov
inc
jae,pt
ja
cmpsb
or
int
mov
mov
sbb
add
movl
pusha
lahf
loop
push
out
std
ljmp
pop
push
mov
leave
and
leave
mov
std
xor
stos
mov
mov
call
adc
shll
push
and
sub
mov
push
mov
pushf
popa
call
addr16
sub
bound
or
or
jmp
out
fnsave
sub
or
pop
out
popf
leave
out
sbb
xor
dec
shrl
dec
aam
add
mov
push
clc
push
sbb
mov
xor
dec
shll
leave
xor
and
jmp
jns
arpl
or
xchg
jp
rorb
xchg
lret
cld
lods
testb
dec
je
js
xor
xor
pop
mov
pushf
lods
push
loop
mov
jmp
repz
pop
mov
mov
dec
test
cmp
dec
mov
stc
xchg
stos
stos
mov
mov
stos
ret
pop
inc
fs
call
test
fwait
mov
or
jno
mov
mov
sub
out
out
enter
fneni(8087
pop
mov
sbbb
mov
cs
jno
or
sbb
in
out
cmp
push
out
xchg
xor
jne
test
cmp
add
sub
cmp
sbb
sub
push
fwait
or
lock
push
jp
out
cmp
xorl
and
xchg
sub
lahf
dec
or
popa
in
sbbl
sub
and
mov
hlt
mov
cwtl
fcmovnb
push
ror
outsl
xchg
mov
sbb
adc
add
lods
push
aaa
mov
mov
subl
insb
sub
dec
mov
cwtl
je
jg
inc
negl
movsb
out
stos
daa
aad
jno
lahf
mov
insb
inc
sub
stos
leave
rclb
mov
pop
dec
or
test
mov
pop
clc
les
and
push
nop
mov
popa
pop
out
or
push
ret
jae
subl
xlat
test
adc
push
jae
xor
pushf
ret
sbb
roll
loope
out
sub
jns
icebp
push
out
push
inc
in
or
les
inc
movsl
ljmp
hlt
push
les
insw
movsl
sbb
out
iret
loopne
sbb
dec
mov
sarb
es
sbb
scas
or
xor
rorb
sar
cmpsb
sbb
fistpl
mov
shrl
stos
push
or
in
lds
pop
hlt
mov
dec
dec
mov
xchg
dec
sub
lods
lods
pop
loopne
xchg
aaa
xchg
mov
sbb
addr16
daa
xchg
inc
std
xchg
test
clc
inc
dec
sub
movsl
mov
outsb
in
into
out
push
addb
inc
and
sar
mov
add
mov
fldcw
and
pop
mov
mov
mov
mov
fdivrl
jg
or
xchg
or
faddl
hlt
pop
inc
push
loope
dec
and
aas
sbb
addb
sbb
push
adc
test
stos
ljmp
pop
xor
sbb
jae
sbb
inc
jns
fwait
mov
jge
in
testl
out
stos
or
and
aam
pushf
push
pop
mov
cli
xchg
out
lret
mov
lods
les
adc
lret
int3
fxch
cmp
movsb
mov
mov
in
ficomps
sbb
lds
xchg
add
sbb
jae
pop
inc
and
cmp
add
imul
jbe
mov
shll
and
aad
outsl
adc
inc
lds
addr16
lock
cmp
sub
in
imul
lret
cmpsl
and
outsb
mov
bound
scas
ret
loope
lahf
dec
jo
jge
mov
pop
scas
inc
sub
int
in
mov
mov
sub
xor
xchg
jmp
mov
cmp
adc
insb
dec
jnp
sub
mov
or
enterw
cmp
adc
cld
add
enter
mov
enter
test
shrb
movsl
pop
das
pop
out
stc
stos
jnp
test
or
jno
push
dec
inc
inc
in
int3
cmp
mov
add
ficomps
mov
imul
xchg
jge
pop
push
sbb
xchg
js
arpl
adc
clc
gs
pop
arpl
adc
push
sbb
push
add
add
sbb
cwtl
mov
mov
jp
add
sub
cmp
test
test
leave
repnz
mov
insb
xchg
dec
test
lock
sbbl
inc
push
adc
imul
inc
dec
cmovle
pusha
cwtl
jle
mov
xor
and
xor
pop
scas
or
jnp
adc
jb
ss
mov
lahf
ljmp
stos
and
push
push
fbld
jno
movsl
rolb
mov
rolb
cmp
repz
xor
xchg
xor
sbb
mov
in
inc
das
xor
pop
sbb
cmp
pusha
inc
loope
icebp
push
lock
pmulhuw
mov
inc
cld
popa
cmc
dec
and
sub
das
ljmp
ljmp
dec
out
scas
inc
mov
dec
jnp
jle
mov
ds
push
sarl
stc
mov
push
sti
les
addl
xor
js
inc
fldl
mov
xchg
lret
push
cld
mov
xor
xchg
xchg
ret
bound
jbe
repz
cmpsb
jecxz
rcl
xchg
dec
fnstcw
leave
or
push
sti
in
andb
cltd
popf
sbb
xchg
mov
lcall
and
fs
inc
adc
inc
sahf
loop
sub
into
aam
mov
push
cmp
fs
xchg
sub
ljmp
pop
inc
ret
out
int
shrb
sub
in
sub
push
cld
ds
add
jg
jmp
mov
adc
fdivrs
add
jb
hlt
dec
push
mov
in
pop
pop
sti
loope
jbe
outsb
fisttpll
lahf
insb
loope
clc
lcall
and
rcll
push
div
rol
mov
pop
mov
shrl
scas
mov
cli
adc
stos
mov
les
insl
insb
rcl
imul
sbbb
and
inc
stos
push
and
fucomip
fs
je
fstp
mov
ret
push
xor
cmpsb
mov
daa
stos
shll
movsl
xchg
test
xor
and
push
scas
aad
inc
int
and
dec
mov
xchg
jle
jno
in
aaa
xchg
scas
lcall
dec
cmp
mov
iret
adc
cmp
fsubp
stc
mov
adc
xor
sbb
std
push
xorb
jmp
enter
stos
mov
fcoms
mov
add
pop
adc
push
push
mov
fs
rcr
cmp
cmpsb
sbb
or
jmp
adc
aaa
mov
dec
mov
outsl
sbb
adc
fldenv
adc
cs
cmp
cwtl
mov
andl
outsb
movsl
jo
loop
push
dec
jmp
cltd
jg
cld
rorb
ds
test
int3
push
add
fadds
jns
std
mov
sbb
orb
push
xchg
sub
adc
cmp
lock
enter
scas
sub
lret
mov
shrl
punpckhbw
sti
js
test
xchg
and
int3
and
in
loopne
je
add
movsl
icebp
sub
adc
mov
mov
cmp
mov
mul
fidivrs
outsl
and
in
push
and
mov
and
stos
and
or
je,pn
out
push
mov
rcrl
jle
ret
pop
xchg
aam
fcmovnu
lahf
lret
push
fisubl
test
in
inc
dec
stos
sbb
das
ss
mov
sbb
mov
test
jne
lea
icebp
arpl
sbb
pop
jge
cmp
fistpl
or
sbb
subl
outsl
hlt
aas
cmp
dec
loopne
cs
ret
cli
cmp
pop
jnp
xor
data16
adc
cs
cld
mull
sahf
pop
out
lret
sbb
jns
dec
ret
pop
xchg
push
adc
mov
daa
push
pop
pushf
push
cltd
popf
or
mov
jb
bound
sbb
xor
mov
outsb
loop
stos
out
lds
repz
insl
mov
ret
fimull
mov
inc
mov
add
lds
add
or
jge
fdivl
mov
test
rcrl
adc
imul
dec
cld
push
dec
push
adc
scas
call
lods
mov
jmp
test
repz
call
or
dec
inc
sub
loope
jbe
cmpsb
xor
test
push
das
mov
hlt
pop
mov
ret
loope
fwait
pop
jmp
orl
sbb
loopne
popa
dec
ret
mov
mov
push
adc
adc
les
das
and
mov
jg
int3
sbb
cmp
ljmp
cmp
xchg
pop
out
mov
loopne
bound
sub
add
or
sbb
adc
mov
jle
test
push
mov
lret
aaa
or
jno
add
iret
pusha
movb
jmp
mov
lods
inc
and
fbld
adc
and
fildl
dec
sub
cmp
or
xchg
pop
imul
shrl
mov
pop
mov
addr16
inc
loope
xchg
lock
in
movsl
les
pop
shrl
into
ds
adc
es
jle
and
loop
add
xchg
cmp
jbe
push
xchg
pop
out
sbb
jl
fimull
shrb
test
jb
jle
sub
or
pop
pop
stos
call
or
or
pop
or
jns
sbb
icebp
push
inc
xlat
dec
and
out
sbb
dec
inc
pop
jmp
popf
frstor
push
cmp
mov
jnp
sub
sbb
cmp
lret
cmc
out
icebp
lret
xor
jno
jne
popa
dec
adc
popa
jo
cmpsl
cmp
lock
inc
mov
syscall
icebp
push
leave
fidivrl
mov
testl
mov
sbb
fisubs
movsb
mov
or
cltd
dec
add
or
push
mov
dec
shll
hlt
push
in
mov
xchg
outsb
insl
faddl
movsl
sbbl
ljmp
inc
dec
or
or
jmp
or
sbb
lcall
movsl
dec
sbb
cmp
aam
test
sub
and
sub
lods
xchg
jge
pop
push
scas
lea
mov
rclb
or
pop
ret
leave
mov
or
sub
mov
mov
lret
or
pop
fwait
add
pop
cwtl
rcll
dec
repnz
add
int3
sbb
mov
hlt
int3
pop
mov
inc
subl
fs
inc
xor
push
mov
ss
push
push
sub
inc
prefetch
pop
jg
rolb
add
xchg
gs
dec
ret
jo
movl
test
xor
adc
jno
ja
pop
loopne
jno
cmp
mov
push
shl
scas
inc
pushf
js
in
xlat
sub
lods
mov
xor
testb
bound
mov
push
or
stc
stc
les
pop
mov
mov
or
pop
mov
xor
add
mov
jp
pop
dec
and
jge
outsl
in
inc
lret
aas
cli
push
test
push
xor
push
cmp
inc
pop
mov
clc
and
or
push
xchg
dec
push
in
xchg
in
adc
dec
push
or
xchg
sahf
in
dec
push
stos
call
loop
lock
call
adc
imulb
outsl
lock
arpl
int3
cmp
js
jge
push
push
cmp
sbb
sbb
adcl
imul
das
cmc
test
mov
inc
rolb
dec
xchg
loop
shlb
nopl
sbb
inc
lcall
fstps
pop
pop
iret
leave
push
and
dec
sbb
dec
adc
pushf
adc
mov
sti
adc
jnp
aad
sbb
bound
data16
xchg
inc
into
pop
xchg
inc
jae
xor
push
jae
cmc
cmp
push
dec
sub
loop
bound
stos
in
and
movsb
sbb
sbb
outsb
jl
dec
jmp
rclb
enter
adc
adc
movb
pop
rcl
pop
mov
test
call
gs
ret
bnd
mov
push
inc
lock
dec
int3
jl
or
mov
jnp
jp
popa
adc
xchg
out
mov
scas
rclb
mov
int3
popf
cltd
jb
cmp
sbb
sbb
adc
add
out
mov
shll
lods
push
mov
mov
bound
repz
outsb
pop
xchg
mov
rsm
das
or
jne
fstpl
sbb
sub
cmp
inc
mov
and
push
cwtl
sub
sarb
adc
push
push
shll
mov
sbb
in
adcl
sub
lock
mov
sub
xor
and
jns
dec
inc
xchg
testb
jne
fs
sbb
add
cmp
cmp
xor
movsb
popf
xchg
push
push
xchg
add
jl
jno
test
out
jl
push
stc
lcall
and
cld
stos
pop
cwtl
fidivrl
fiadds
cmpl
movsb
push
xor
mov
push
ljmp
lret
mov
mov
cli
bswap
jnp
xchg
out
push
mov
out
mov
imul
xorl
ljmp
xchg
sub
cmp
fimull
stc
enter
shlb
scas
and
aas
ret
daa
dec
mov
bound
addr16
enter
add
sbbl
int3
int3
mov
cmpsl
mov
ret
adc
les
mov
inc
fsubs
jns
or
pop
mov
jns
sub
mov
icebp
dec
jo
and
popa
test
cmovnp
add
lret
pusha
lahf
ja
movsb
cmp
fcmovbe
nop
add
mov
aas
mov
imul
test
dec
sarl
dec
andb
add
scas
jbe
fdivrs
in
rcll
repnz
negl
or
repz
fcoml
and
mov
add
mov
or
pop
xlat
mov
jae
in
andb
xchg
jmp
mov
out
mov
sub
stc
add
incb
cmp
cli
mov
popa
shlb
mov
stc
std
lods
sbb
jg
cmp
and
mov
lahf
or
push
add
out
lret
xor
ret
mov
xchg
insl
das
in
popf
lahf
mov
hlt
repz
idivl
xlat
insb
xor
inc
cmpsb
push
lock
mov
mov
mov
pushf
fwait
jge
aaa
stc
mov
out
shll
lret
imul
outsl
cmp
or
or
cs
xor
mov
push
xor
cmp
mov
cli
stos
lcall
push
mov
lods
rolb
mov
fcmovnbe
sub
popf
mov
imul
push
or
mov
pop
sbb
stos
or
inc
xor
sub
sarb
movsl
rorl
nop
push
repnz
adc
push
popa
icebp
test
sar
cmp
cli
das
jg
inc
aas
test
mov
nop
or
sbb
xor
int3
rcll
pop
inc
cltd
adc
pop
hlt
bound
jnp
push
cli
mov
or
fidivs
push
push
lock
jo
and
mov
mov
imul
enter
sbb
aas
mov
mov
and
or
dec
push
sub
pop
test
insb
pop
adc
call
aam
jg
sub
sub
xor
xchg
lret
shlb
push
cmp
addr16
dec
pop
lods
les
nop
inc
bound
inc
sarb
adc
xor
stos
ja
fcoms
dec
xlat
testb
loop
arpl
adc
add
push
mov
daa
sbb
sahf
xchg
arpl
movsb
fldcw
jp
repz
nop
push
add
fimuls
pop
nop
fisttpll
pusha
or
inc
lock
push
arpl
das
mov
xorb
loop
cltd
iret
dec
in
nop
lds
cwtl
push
das
mov
sti
jns
mov
popf
divl
sbb
loope
aaa
xchg
call
push
fsubs
arpl
pop
xorb
pop
loopne
hlt
mov
lea
dec
xchg
jns
pop
fidivrl
adc
mov
ret
mov
mov
and
push
xor
in
call
mov
emms
leave
sub
mov
sarb
cmp
test
cmp
je
dec
pop
dec
xchg
sahf
adc
in
xorl
and
out
fmuls
repnz
sti
decb
insl
jp
xchg
movsb
sub
test
int
pushf
inc
mov
add
cmpb
adc
sbb
xchg
out
dec
mov
popa
rcrl
mov
pop
mov
dec
pop
sub
clc
outsb
jecxz
cmp
inc
mov
adc
or
seta
ljmp
pop
fiaddl
rcrl
inc
ds
lods
outsl
sub
repnz
rcrb
sbb
mov
aaa
mov
push
jle
add
push
ss
daa
cmpsb
shlb
xchg
pop
push
sbb
test
and
jbe
add
xor
imul
scas
push
movsb
mov
push
inc
icebp
xor
fisubrl
dec
daa
jo
iret
iret
push
ret
jne
insb
add
cld
jnp
mov
enter
cld
jae
xchg
outsb
jno
fcomps
arpl
repz
test
cmpl
pusha
mov
inc
test
sti
not
insb
loopne
loope
inc
or
pushf
push
cmp
fdivl
es
adc
pop
fcoms
mov
gs
push
es
inc
lods
bound
mov
insb
jle
sbb
and
outsb
and
imul
jne
and
mov
cmp
test
dec
dec
or
nop
imul
push
pop
gs
add
adc
mov
stos
scas
loop
xlat
dec
int
les
add
mov
in
xlat
xchg
cmp
push
push
jp
not
notl
rolb
jge
inc
rcll
sbb
sbb
shrb
fwait
or
jns
ret
inc
jo
bound
ja
cmpsl
out
stos
adc
push
push
sub
addr16
jbe
xlat
jno
popa
push
loopne
lcall
int3
daa
jmp
jnp
outsb
push
xchg
sub
jg
cmpsl
dec
sbb
in
insl
xchg
mov
push
mov
adc
insb
aas
call
test
fmuls
jle
dec
aas
inc
xchg
mov
xchg
jb
dec
cmp
xor
sbb
fnsave
xchg
mov
push
lock
xor
in
cmp
inc
jo
pop
inc
insl
ja
shlb
cmp
dec
leave
decb
loopne
ss
orb
das
mov
cwtl
roll
sub
xchg
in
int3
les
xchg
mov
cmp
jl
outsl
mov
scas
inc
inc
scas
insl
push
sbbl
psadbw
outsb
jno
adc
adc
or
jno
xchg
testl
sahf
into
mov
or
lods
int
inc
jo
adc
mov
push
add
jae
lock
lods
outsb
es
cmpsl
addl
mov
imul
lock
adc
fidivs
inc
push
mov
cmpsb
fwait
scas
and
addb
scas
sub
clc
add
push
int3
lods
xor
xchg
xor
and
jns
dec
mov
mov
test
mov
iret
sub
sarl
dec
jo
sub
inc
test
fldt
dec
idivl
cld
int
jnp
loop
jle
push
add
pop
inc
in
lea
push
scas
insb
mov
dec
scas
flds
adc
js
rsqrtps
dec
sub
lahf
sub
inc
xchg
addr16
cli
mov
push
fisttpll
faddp
jo
addr16
stc
mov
popf
jl
and
imulb
outsb
scas
cmpsb
in
mov
mov
fistpl
or
mov
mov
push
mov
out
dec
pop
mov
jae
in
push
lea
sub
inc
mov
push
push
jl
cmp
sbb
jmp
popl
push
loope
mov
mov
dec
sub
lahf
jmp
es
xchg
cwtl
mov
jecxz
cmp
test
fcomp
xor
aad
or
inc
call
adc
ficoms
xchg
movsl
pusha
add
stos
out
mov
mov
add
mov
jmp
fildl
cmpsb
lea
lock
sarb
push
sahf
add
cltd
mov
xor
inc
and
add
push
adc
outsl
lcall
push
scas
or
xchg
imul
add
inc
and
mov
scas
insb
lds
movsb
data16
mov
dec
insl
std
insb
fsubl
mov
ret
addr16
ret
pushf
outsl
out
sbb
push
xor
xchg
jbe
adc
pop
stos
int3
mov
xor
lret
cwtl
mov
js
daa
test
shr
dec
and
ret
pop
js
fstpt
sub
ret
shll
and
sbb
sbb
fisubrl
mov
outsl
cmp
test
cmc
dec
sub
xchg
out
imul
mov
adc
andb
divl
in
mov
pop
xor
mov
aam
jmp
in
fwait
pushf
xchg
inc
push
scas
pop
test
add
stos
mov
or
and
sub
cmpsb
leave
outsl
hlt
inc
mov
or
aaa
cmpsb
nop
push
mov
fistpll
xchg
idivl
mov
push
or
mov
or
or
fisttpll
subb
in
mov
jmp
mov
dec
xchg
sbb
repz
es
aam
vpshaq
adc
push
sti
jnp
fldenv
inc
mov
cmp
sbb
jne,pt
xor
outsl
jge
enter
mov
cmp
adc
jno
ljmp
outsl
shr
jnp
and
daa
or
push
and
cmp
lcall
test
sbb
int3
shrl
data16
add
aaa
inc
ja
std
sub
pop
jp
mov
cmpsb
insb
icebp
cmp
idivb
inc
cmp
je
pop
outsb
popa
push
xlat
push
xlat
addr16
cmpsl
xor
fcoml
loope
mov
addl
cmp
and
popf
jnp
add
xchg
insl
lahf
mov
es
fsubrs
sahf
inc
and
cmp
cmp
jb
xchg
dec
jecxz
mov
pop
popa
inc
dec
std
bound
jge
in
add
mov
ljmp
mov
mov
loope
push
lea
dec
rorb
and
bswap
cs
cwtl
or
sbb
mov
sar
adc
insl
lret
mov
add
xor
mov
das
add
in
addr16
dec
cmpsl
movsb
cmpsl
mov
lods
jmp
pop
dec
cmp
cmc
jle
adc
dec
jg
rolb
mov
stos
icebp
add
cmc
fcmovnu
push
xor
repz
sub
inc
out
jecxz
jno
pop
cmc
in
outsb
mov
dec
iret
add
lahf
mov
push
cli
test
icebp
mov
pusha
adc
int
xchg
hlt
pop
jae
cmp
ficoms
push
dec
push
dec
jl
aad
movsb
incl
adc
bound
mov
jmp
sahf
lcall
lcall
sbb
sub
adc
cmp
icebp
dec
push
pop
fwait
in
adc
outsb
pop
mov
insl
cmovb
sti
scas
push
push
aad
ja
mov
stc
outsb
mov
jae
xchg
xchg
adc
rcl
ds
mov
sahf
jmp
cs
mov
push
int3
push
push
cs
jo
sbb
jp
in
xchg
pop
fnstenv
or
push
adc
xchg
jb
sbb
lods
cmp
xchg
gs
mov
testl
int3
out
test
js
lcall
or
faddl
push
pop
and
jge
fdivl
shl
push
jno
push
lds
fcomi
adc
inc
clc
xor
les
js
daa
sub
pop
les
scas
arpl
xchg
jp
mov
and
adc
jne
add
aad
rclb
gs
xchg
mov
pop
movl
push
ror
sub
mov
mov
sarl
dec
in
push
lods
adc
pop
mov
or
sub
dec
mov
lret
daa
pop
scas
lcall
push
add
sub
in
push
in
loopne
push
imul
ds
sbb
push
xor
inc
cltd
sub
push
scas
lahf
adc
imulb
add
cltd
ret
ficoml
leave
xchg
jo
data16
jb
sub
mov
cwtl
inc
and
iret
pop
pop
insl
mov
iret
jecxz
lods
mov
pop
mov
bound
adcb
sbb
test
mov
adc
xorl
add
outsl
icebp
mov
lret
adc
cld
cmp
dec
mov
pop
inc
scas
test
and
iret
pop
inc
cmp
push
jp
jge
push
ja
sbb
cmp
enter
or
idivb
sahf
pop
out
or
jo
hlt
jg
data16
sti
mov
repnz
xor
pop
push
fcompl
dec
jecxz
mov
out
aas
leave
sar
xchg
mov
cwtl
jb
imul
xchg
fstpt
pop
ds
add
push
and
mov
dec
test
int3
or
adc
push
clc
inc
enter
jne
gs
push
sub
mov
aam
jl
or
test
or
jmp
cmp
mov
loopne
push
out
fdivs
jge
adc
enter
fisubl
jp
push
aaa
push
mov
dec
lea
pop
add
repz
add
mov
in
int3
out
jns
adc
push
call
fldenv
xor
cld
xchg
aam
cmp
adc
rcrl
pop
mov
lods
jno
jb
sahf
xchg
sahf
or
sbb
roll
clc
add
rclb
fstps
mov
aam
or
inc
push
sbb
gs
sbb
cmp
mov
fadds
fstpt
mov
push
add
popf
addr16
xor
jno
testb
adc
cmp
mov
pop
sbb
fcmovnu
jle
pop
sub
push
or
push
pop
push
popa
inc
imul
gs
push
xorl
jmp
mov
test
mov
add
inc
push
gs
shrb
cmpsl
in
cltd
pop
subl
movsb
fiaddl
lcall
jle
pop
int
loope
xchg
fcmovnu
sbb
adc
push
jg
loop
or
ret
outsl
push
pop
repz
jo
xchg
add
insb
or
outsl
cmp
sbb
rcrb
pop
sahf
cld
add
clc
adc
and
popa
xor
add
add
sub
fmuls
loopne
xor
dec
aam
push
call
xchg
and
cmpsl
aad
pop
sbb
std
jp
dec
jns
add
cmp
stos
fmull
push
cli
jbe
push
cmp
fldcw
jmp
and
xor
test
xor
and
jo
dec
mov
cltd
dec
movsl
jae
stc
inc
repz
sub
cmpsl
lea
rclb
stos
aad
pop
dec
cmpsl
fisttps
repnz
int
inc
pusha
jmp
push
adc
and
jno
xchg
mov
add
ds
out
mov
pop
stos
outsb
xchg
sub
int3
ja
mov
in
adc
jl
and
xlat
mov
inc
sub
cmpsl
inc
and
mov
lret
stc
and
dec
inc
inc
mov
fcomip
push
aam
cmp
adc
mov
or
popa
addr16
adc
or
sbb
idivb
fdivrl
lcall
jo
xor
mov
add
ljmp
ret
shlb
adc
es
xor
nop
adc
cmp
pop
sbb
arpl
movsl
inc
xchg
nop
xchg
cs
xor
in
inc
jnp
mov
in
mov
lret
cltd
fildl
or
cld
push
lahf
xor
out
pop
jp
inc
cltd
sbb
lret
mov
mov
push
sub
xor
cltd
jl
addb
hlt
outsb
gs
mov
cld
in
xchg
and
loope
cmp
ljmp
or
xchg
daa
and
fnsave
push
jbe
fcmovb
add
and
pop
cmp
lcall
rorb
sub
xchg
push
pusha
movsb
movl
adc
ret
and
jl
aad
loopne
bound
pop
addb
cmp
push
cwtl
pop
insb
and
jle
or
out
imulb
cmp
pop
push
loopne
repz
jg
ds
ja
lahf
mov
cmp
push
or
or
push
cmp
sbb
pop
ds
aas
or
into
pop
subl
xor
js
dec
mov
cmpsb
push
scas
out
loop
mov
pop
xlat
push
adc
push
inc
insl
inc
add
rol
inc
icebp
mov
icebp
jnp
push
fstps
aad
lods
jno
inc
xchg
jmp
pop
xchg
movsl
insl
jb
mov
outsl
adc
dec
movsl
pop
mov
test
aad
xchg
iret
fisubs
fistpll
adc
cs
gs
cwtl
testb
sub
inc
sub
mov
sub
imul
push
jno
test
xor
pusha
into
ja
push
out
stc
xchg
mov
mov
outsb
into
clc
inc
cli
or
mov
xchg
test
int3
fdivrs
mov
jl
mov
add
or
in
rcrl
bound
mov
pop
xor
push
pop
out
sbb
mov
stc
call
push
lea
xor
add
test
cmp
lea
dec
dec
and
push
scas
or
push
inc
inc
add
mov
call
aas
mov
cli
aas
into
mov
je
xor
nop
je
fisttpll
sbb
hlt
add
dec
mov
mov
sub
insb
dec
rcl
sub
lcall
adc
insb
xchg
fucom
adc
or
stos
loope
ljmp
lcall
jnp
cmc
faddl
and
rcl
pushf
call
imul
lea
repz
or
mov
inc
int
dec
subl
adc
imul
fimuls
and
sar
pop
jbe
push
int3
js
mov
xor
in
cmp
xchg
xchg
pop
in
xchg
inc
push
sub
es
dec
push
pop
std
mov
cmp
jns
xchg
test
arpl
or
cwtl
jne
sub
xor
jbe
movsb
ret
test
mov
mov
in
mov
jbe
lahf
fdivp
cmpsb
ds
clc
call
sub
into
push
add
pop
xchg
fwait
in
enter
jmp
pop
jle
jb
outsb
xor
mov
pop
in
jmp
jnp
ret
and
mov
int
test
daa
push
mov
push
xchg
fnsave
lods
xor
sbb
cmp
push
cli
jg
sub
sub
jmp
push
push
test
pop
pushf
fistpll
or
fidivrl
pop
xor
cmpsb
in
fsts
cmc
cmc
pop
jecxz
pop
pop
fldt
xor
shl
mov
xor
cmp
fldl
pop
cli
insb
pop
push
test
push
addr16
adc
imul
rclb
mov
sbb
cs
dec
cltd
and
sarl
mov
in
ljmp
mov
mov
pop
inc
cmp
movb
add
cld
ja
jbe
icebp
or
and
jnp
lret
xor
jnp
lret
add
out
push
sbbl
mov
xchg
cwtl
mov
jo
jecxz
cmp
in
push
xlat
inc
jns
push
mov
ss
mov
pop
inc
inc
lods
pop
cmp
xor
mov
xchg
test
in
jo
popa
int3
xlat
gs
cs
push
pop
pop
pop
push
fldl
cmp
jp
sub
mov
out
shrb
jl
or
cmp
and
dec
jne
rcll
add
mov
inc
mov
sahf
lret
sub
push
xor
out
popa
pusha
in
stos
push
dec
inc
mov
adc
add
fldz
iret
scas
mov
dec
xor
and
aaa
push
cmp
mov
pop
xor
inc
out
xchg
push
cmp
cmp
push
das
add
cli
in
fistpll
js
movsl
inc
out
lcall
pop
dec
or
jnp
adc
xlat
shl
add
adcb
push
cmpl
dec
int
lds
mov
push
outsl
mov
xor
lea
daa
scas
jge
sahf
and
fpatan
xor
dec
sub
inc
cs
sbb
push
mov
popa
fs
pop
pop
insl
loope
mov
lea
out
test
pop
push
test
data16
xchg
mov
cwtl
fistl
scas
xchg
dec
add
mov
jae
or
inc
sarb
lods
push
std
movsl
sbb
mov
out
cmp
in
subl
les
imul
push
and
stc
rcrl
rcrl
in
mov
adc
insb
pop
sbb
xlat
xor
test
add
fwait
mov
push
cmp
cmp
int
es
call
mov
sarb
and
jbe
and
repz
push
rol
add
jp
data16
mov
mov
dec
ret
jae
inc
xlat
mov
cmc
je
rorl
add
mov
aam
je
fbstp
push
jecxz,pn
mov
imul
cmp
xor
lahf
add
mov
push
dec
mov
test
mov
mov
push
xchg
mov
inc
dec
fsub
cltd
mov
jg
pop
or
sbb
arpl
xlat
pushf
jo
out
jae
sub
or
mov
std
pop
mov
hlt
fistpll
pop
shl
cs
xchg
enter
add
aaa
add
jne
adc
mov
jb
jl
or
in
mov
sub
cmp
scas
jp
adc
ret
xchg
pop
fdivr
mov
rcl
test
fimull
mov
pusha
sub
pop
cltd
sub
mov
lods
jno
inc
push
sbb
jmp
in
mov
dec
imul
movsb
mov
xchg
cmp
pop
dec
jno
and
xor
mov
ja
xchg
fstpl
mov
add
jae
xchg
lret
es
stc
in
mov
sahf
xchg
add
incb
test
xchg
aam
xchg
push
and
cltd
imul
mov
add
push
out
sub
and
daa
or
push
out
mov
mov
or
outsb
adc
cs
pop
orl
xchg
pop
movsl
push
jbe
xor
stos
stc
cmp
jne
xchg
and
pushf
repz
int
dec
inc
and
dec
aaa
and
push
pusha
sub
xlat
mov
mov
sbb
call
jns
pop
adcb
mov
adc
xor
push
and
and
dec
js
mov
mov
icebp
mov
sbb
xor
add
cmp
xchg
push
mov
lods
add
dec
jbe
cli
or
mov
sub
jg
cmp
ficoml
cmp
jb
mov
clc
inc
aas
inc
lods
pusha
popf
push
mov
and
push
leave
mov
insl
in
fdiv
adc
dec
sbb
imul
test
call
cli
jmp
mov
cmp
lea
cmc
jl
inc
or
mov
fidivs
stos
mov
sub
mov
inc
sbb
pop
jno
ss
lret
loope
sbb
data16
sahf
mov
add
xchg
loopne
gs
sub
mov
insb
push
sbb
dec
pop
sbb
push
dec
jg
mov
xchg
push
lret
std
mov
les
mov
or
stos
xchg
in
fisubl
jbe
jp
dec
mov
scas
cmp
cltd
sti
test
pop
xchg
adc
or
xor
xchg
aam
xchg
in
mov
pop
inc
cmpsb
je
ret
ss
and
outsl
insb
inc
cmp
lea
ret
out
test
jp
mov
pop
mov
fst
adc
test
push
jg
dec
mov
lea
insl
test
jb
jbe
push
cmp
mov
or
hlt
hlt
repnz
lods
cwtl
retw
stos
mov
sbb
lods
push
pop
push
and
sahf
or
mov
fwait
aas
scas
dec
mov
add
fmuls
lahf
shrl
dec
lret
stos
andl
rolb
lret
popf
sbb
add
push
fmul
xor
lret
ret
mov
and
mov
faddp
sbb
addr16
ljmp
cmp
xchg
ja
mov
mov
cmp
pop
call
mov
push
mov
xchg
outsl
sub
or
movsb
adc
mov
data16
lahf
jg
jecxz
mov
jmp
add
mov
sbb
fldt
loopne
mov
jo
movsl
mov
sbb
adc
fwait
push
jne
adc
add
lods
std
pop
or
cmp
xor
xor
add
mov
nop
push
mov
imul
jge
shr
adc
test
cmp
xor
jne,pt
jno
and
jp
outsl
push
or
fucomi
addr16
dec
dec
stc
jl
sahf
scas
or
es
stos
sub
pop
int
dec
ret
nop
out
lret
out
pop
mov
aas
xor
add
mov
cmp
leave
icebp
cld
mov
and
nop
pop
sahf
mov
aad
shl
inc
jg
adc
mov
sub
cmp
xchg
push
jne
addr16
jae
ja
lret
call
adc
fmul
insl
js
leave
push
pop
repnz
cwtl
subl
shlb
in
sub
mov
mov
mulb
cmp
call
lock
xchg
test
aad
mov
cltd
or
inc
sub
into
jmp
icebp
ljmpw
pop
jbe
sbb
fbstp
lds
daa
and
unpcklps
shl
in
sub
xor
push
pop
or
mov
fwait
sbb
outsb
subb
xchg
dec
stc
sbb
and
fidivrl
loop
imulb
sbb
sub
insb
out
cmpsb
sub
ljmp
mov
xchg
mov
into
es
add
sbb
xor
cltd
addr16
mov
xor
inc
ret
out
pop
mov
add
and
lret
pushf
imulb
or
dec
push
stc
jmp
sbb
jecxz
scas
adc
loop
or
div
ds
sti
jbe
cli
mov
cltd
scas
faddl
dec
mov
insb
aaa
add
sti
sbb
aaa
movsw
ss
out
insl
jg
sahf
inc
cld
fidivl
pop
and
mov
orb
cltd
or
mov
mov
shr
fildll
xor
sub
jg
pop
clc
push
jmp
test
inc
ja
xchg
jl
lahf
js
pusha
nop
repz
sbb
sarl
mov
test
push
lods
ds
aas
and
adc
fisubs
in
jmp
and
lock
jg
pusha
loope
loopne
adc
les
repz
fldl
dec
pop
ret
jb
dec
add
cld
xor
lods
in
arpl
aaa
aaa
cmp
push
pop
call
push
movsl
jge
outsb
out
aad
xchg
sub
cmc
jg
mov
mov
orl
adc
mov
adc
mov
or
in
xchg
xor
mov
sub
jl
std
pop
pop
cld
mov
mov
js
in
fucom
xor
nop
and
xchg
xchg
ja
dec
mov
or
test
insl
and
mov
and
lret
push
xor
leave
mov
repnz
xchg
mov
rorl
pop
js
pusha
es
mov
into
lock
pop
ja
push
push
sub
rcrb
jp
rcrb
push
push
jnp
push
sub
lds
mov
pop
dec
push
sahf
mov
out
or
lcall
mov
cmpsb
shl
fidivrs
adc
mov
movsl
sahf
pop
movsl
imul
or
mov
decl
jl
in
aas
pop
aas
push
inc
out
pop
adc
out
add
push
mov
sbb
xchg
mov
icebp
xchg
jle
aas
sbb
mov
adc
fcoml
mov
or
mov
ret
mov
ud0
mov
js
mov
inc
in
push
add
jb
lods
cwtl
into
inc
inc
sub
adc
inc
push
inc
dec
push
loopne
js
fmuls
cmp
push
cmovge
cli
dec
dec
stos
rorl
clc
and
cs
pushf
or
sbbb
out
jnp
sub
add
int
mov
push
cld
mov
aam
popf
in
xchg
add
mov
inc
xchg
mov
xchg
cmp
xor
mov
outsb
cmp
and
js
enter
insb
and
xchg
popf
sbb
sbb
stc
sbb
cld
push
loope
pushf
adc
and
daa
mov
mov
call
xchg
add
sbb
fisubs
decl
arpl
mov
jo
pusha
outsb
push
out
shrl
fwait
lds
adc
stos
in
into
loope
jae
test
test
scas
std
push
negl
mov
sahf
push
add
arpl
mov
rclb
cs
rcll
mov
movsb
push
idivl
test
movntq
daa
jp
sub
in
lret
pop
lods
mov
popf
dec
ja
fucomip
int3
dec
les
das
jecxz
repz
fcomp
pop
adc
outsl
or
in
jnp
or
aas
push
push
or
mov
add
jg
pcmpeqd
pop
mov
push
jl
sbb
inc
adc
repnz
faddl
fsubrl
xor
mov
aaa
mov
jo
daa
lret
or
pop
jmp
mov
fs
adc
div
push
popf
push
mulb
aam
not
sbb
xlat
mov
mov
sub
fwait
aad
cmc
sub
ljmp
call
iret
sub
pop
and
push
sbb
xchg
stos
in
ljmp
cltd
addr16
cwtl
sbb
jo
cwtl
adc
test
jle
dec
jle
popf
nop
cmp
pop
mov
jp
jbe
xor
cli
pushf
movsl
push
jmp
cld
push
cld
jno
pop
jno
push
loope
mov
outsl
or
ret
cmp
in
push
pcmpgtd
loopne
bound
ds
es
out
push
into
lock
pop
sbb
xchg
cli
xor
xchg
jbe
add
gs
ja
mov
mov
into
push
loopne
aas
xadd
ret
and
mov
adc
cwtl
imul
mov
sub
int
gs
mov
jg
fstl
insl
pop
std
les
ret
testl
sbb
outsl
ror
clc
inc
leave
mov
repnz
mov
mov
fs
pop
cmp
scas
push
mov
leave
les
enter
data16
out
jecxz
in
sbb
add
movl
and
xchg
shll
std
stos
pop
repz
testl
hlt
lds
push
adc
add
cmp
mov
repnz
roll
pusha
out
addr16
sub
jnp
lods
pop
mov
mov
icebp
dec
mov
xchg
or
inc
xchg
ljmp
and
fs
cmp
fnstcw
pop
fmull
ljmp
sbb
out
pop
imul
push
fwait
sub
jp
mov
xchg
add
fcompl
lahf
push
mov
ret
sub
jmp
scas
sti
push
push
shll
int
inc
xchg
and
insb
mov
stos
inc
xor
or
in
lods
outsb
mov
sbb
mov
mov
jge
jne
test
push
arpl
movsl
push
cwtl
push
in
mov
pop
xchg
int
outsb
out
lcall
cmp
lods
push
pushf
pop
xor
mov
sub
add
jg
movsl
out
inc
hlt
jmp
jl
push
rcr
xchg
xor
cmc
dec
jp
je
jnp
movsl
xor
push
ret
stos
iret
js
and
inc
and
mov
icebp
stos
outsb
pop
in
mov
loop
out
mov
sub
jle
jno
ss
pop
adc
sbb
aaa
cwtl
jno
mov
jb
setg
sub
mov
mov
mov
dec
movsl
sahf
mov
test
fisubrs
pop
inc
mov
add
mov
call
mov
les
adc
cmc
mov
or
or
jge
jecxz
stc
testl
or
jns
jecxz
in
or
push
lret
mov
lock
pop
pop
xchg
ds
and
gs
jne
out
test
push
sub
popa
xchg
sub
popa
fldcw
add
adc
xchg
out
daa
sbb
xor
jmp
cmpsb
mov
loope
and
xor
jle
jns
out
movsb
mov
test
sbb
push
sub
cmp
dec
int
rcl
cmp
ret
stc
mov
xchg
add
in
out
mov
fsub
jne
insl
dec
gs
or
add
push
bound
leave
sahf
fidivrl
dec
shrl
jne
test
inc
mov
jns
cmp
or
fadds
addr16
jl
testl
clc
jge
inc
push
adc
sbb
lods
sub
pop
cmp
subb
push
mov
mov
xchg
xchg
sub
sbb
pop
add
sub
test
mov
cmp
fstl
cmp
sbb
adc
jne
or
stc
cmp
mov
test
jno
or
repnz
rcrl
mov
movsl
repnz
and
mov
repz
arpl
testl
fwait
mov
pop
test
xor
ljmp
imul
mov
enter
lock
push
inc
dec
call
xor
cmp
xchg
mov
cmp
sbb
adc
sarl
shl
sbb
stos
leave
in
ficompl
stos
jge
outsb
and
and
bound
gs
in
xchg
xchg
or
pop
lods
movsb
repz
sbb
mov
test
cmp
jmp
sub
in
xor
out
mov
insl
sti
xchg
lock
ret
push
mov
data16
scas
or
adc
inc
dec
sub
inc
push
hlt
push
inc
jg
xchg
jecxz
sbb
xlat
stc
popa
dec
mov
outsb
and
cmp
mov
inc
mov
or
xchg
jg
dec
jae
jl
sub
ds
adc
test
cmpsl
movsl
mov
jp
and
xchg
movsb
rep
movsb
rcrb
jbe
fidivl
adc
cmc
test
leave
cmc
lahf
scas
mov
scas
subl
jp
xchg
cmpsl
adc
shr
mov
push
push
imul
cs
lahf
enter
push
bound
ja
jg
popf
dec
cmc
push
add
addl
dec
and
ror
inc
insl
pop
or
xchg
dec
xchg
testb
aas
js
addr16
push
inc
jecxz
lods
rorl
and
cmpb
imulb
ljmp
clc
and
xchg
sbb
mov
shrl
or
inc
arpl
lock
negb
lods
aas
push
xor
and
movsb
cmp
jmp
leave
fistps
lock
and
sbb
cmp
inc
push
xchg
jno
adc
sub
pop
jl
int
push
pop
vmwrite
pop
cld
inc
lret
mov
loope
and
or
inc
rol
push
push
xchg
out
imul
push
pop
in
mov
das
xchg
xor
jp
add
test
cli
out
dec
imul
test
cli
inc
outsl
jmp
dec
scas
daa
dec
gs
dec
ret
cmp
and
dec
push
repnz
movsb
adc
aas
xor
imulb
xor
gs
mov
mov
jl
sbb
outsl
pop
jne
aad
and
jl
adc
fwait
ret
and
imul
pop
ljmp
repnz
scas
addr16
lahf
lret
xchg
push
pop
andb
rorb
xor
add
add
adc
js
mov
mov
add
cmp
pushf
jo
dec
js
add
jns
cmp
ljmp
pop
add
xchg
xlat
or
add
fs
addr16
sbb
add
rorb
js
cmp
mov
mov
sub
and
jmp
mov
adc
in
shrb
ret
inc
das
inc
mov
dec
cmp
xor
test
cld
mov
dec
xor
out
push
add
jbe
or
jnp
push
cmp
movsb
xor
or
inc
pop
cmp
out
xchg
dec
cmp
insl
ret
data16
dec
repz
lcall
aaa
xor
in
and
dec
fistl
sahf
fnstsw
sub
mov
jle
daa
outsl
mov
add
fnstsw
mov
fdivrl
nop
negl
shrl
pop
push
inc
stos
sbb
enter
xchg
cmpsb
add
sub
popf
xchg
mov
xor
inc
push
inc
stc
aad
addb
fwait
in
sbb
sti
lar
fisttpll
arpl
sbbl
jmp
sub
sbb
push
daa
sti
push
pop
enter
push
cmp
out
pop
or
ds
and
dec
inc
mov
div
fnstenv
leave
mov
cmp
xor
movsl
mov
out
iret
mov
inc
movsb
jb
mov
xchg
jge
rcrb
insb
bound
xor
cs
push
les
fnstsw
in
inc
mov
sahf
aad
jno
lret
mov
js
inc
daa
addr16
cmpsb
ja
xchg
movsl
fcomp
outsb
jns
add
in
adc
leave
push
sub
sub
dec
nop
mov
and
mov
ret
fisttpll
addr16
call
mov
xor
pop
mov
or
test
push
stos
cmp
add
ret
pushf
jb
cmc
pushf
add
sarl
xchg
mull
movsl
add
jo,pn
loopne
hlt
cmp
call
xor
push
push
mov
lds
push
scas
into
repnz
mov
push
int3
ja
inc
mov
fstl
lret
mov
xor
xor
pop
jp
stos
rcrb
xchg
xchg
mov
jns
add
xor
ljmp
xchg
adcb
xorb
pop
outsb
dec
pop
mov
dec
adc
mov
pop
pop
out
inc
mov
aam
rcrl
adc
sbb
xlat
sbb
dec
cld
xchg
xchg
mov
xchg
push
mov
neg
mov
jb
cmp
lahf
push
and
mov
inc
adc
xor
iret
push
imul
mov
push
aad
push
xor
and
call
pushf
xchg
dec
data16
push
insl
push
or
cmpb
adc
or
js
or
xrelease
mov
cmpsl
xor
les
out
notl
jb
cli
xor
insl
push
jbe
or
sbb
inc
cli
test
insl
outsl
push
cmp
lea
orl
add
push
lods
loop
fs
fstpt
sbb
cli
in
pushf
rorl
lret
sub
mov
roll
push
out
lock
pop
pushf
fmull
rorl
mov
in
push
push
sbb
ds
ss
insb
mov
jmp
cmp
push
add
pop
cmpsb
xor
and
mov
int3
repz
dec
mov
cmpsb
fisubrl
loope
jnp
pop
or
sbb
xchg
gs
mov
sbb
loop
xor
push
out
pop
cmp
idivl
add
shl
outsl
lds
push
xor
iret
dec
pushf
es
xchg
call
fadd
call
repz
mov
inc
push
jmp
push
pop
sarb
cmc
cwtl
fucom
js
js
xchg
das
aaa
fdivs
insb
ds
aas
stc
sbb
xor
add
pop
sbb
scas
adc
mull
ljmp
inc
xchg
test
mov
hlt
mov
jb
mov
jmp
out
mov
fcmovne
imul
pop
mov
add
jnp
and
pop
pop
jmp
or
or
popa
out
jae
nop
xor
addb
jp
repnz
mov
test
fidivrs
dec
xor
in
lret
scas
or
push
test
mov
jno
scas
and
daa
push
push
movsb
cmp
inc
fwait
mov
rolb
sub
hlt
lea
adc
es
xor
test
pushf
cmp
mov
int
jo
jmp
popa
shr
inc
jne
leave
dec
dec
and
in
lods
push
repnz
mov
sbb
call
push
call
lahf
stos
and
and
adc
scas
adc
cmc
lds
fbstp
adc
insl
ljmp
insl
pop
add
dec
dec
popa
lahf
int3
xchg
jmp
fldcw
test
xchg
cmp
test
push
outsb
mov
lods
gs
mov
ret
mov
lcall
jle
push
lahf
mov
cmp
repz
stos
cmp
jo
rolb
cs
inc
xchg
mov
mov
mov
arpl
add
push
mov
test
cmc
adc
rcrb
push
int
xor
loope
xorl
mov
inc
insl
jmp
mov
pop
lret
mov
out
xor
scas
push
xlat
sbb
dec
mov
adc
jno
dec
notb
jnp
xchg
add
arpl
out
mov
in
xor
adc
cmpsb
test
pop
movb
lea
ljmp
xchg
xchg
popf
js
mov
dec
mov
xor
jle
mov
sub
gs
add
jge
cs
mov
cmp
jno
mov
js
push
mov
push
icebp
orl
test
lods
inc
sub
adc
jb
test
test
mov
or
movsl
fwait
mov
and
mov
inc
rcl
out
or
adc
and
mov
ss
test
and
cmp
clc
add
and
sub
test
jmp
mov
push
rcrb
dec
dec
sub
sbb
dec
inc
xor
xchg
pop
jle
rorb
jle
sub
pop
inc
js
das
inc
mov
pop
sub
xchg
icebp
and
cmc
sbbl
add
test
dec
icebp
and
cmp
cli
jne
shl
adcl
lods
daa
cs
xchg
xor
or
jmp
pop
push
fidivs
mov
ljmp
dec
fstpt
pop
xlat
dec
pop
dec
add
mov
or
mov
out
xchg
mov
andb
pushw
mov
and
scas
lods
ds
int
cmpsl
addl
pop
mov
cmc
stos
fisubrl
mov
stos
mov
dec
cld
fstpl
pushf
xlat
mov
lahf
mov
into
adc
jecxz
pop
push
xchg
out
addr16
or
xchg
in
push
cmp
ss
call
and
mov
xchg
loope
loope
add
roll
or
pop
and
test
jge,pt
dec
js
ljmp
cltd
aam
xlat
or
jae
stc
lcall
popa
cmpsb
push
imul
xchg
jno
int3
testl
adc
xchg
push
lds
js
or
push
shll
mov
scas
jnp
pushf
clc
loopne
sbb
mov
fidivrs
and
ds
ficoml
pop
fwait
cwtl
rclb
inc
and
pop
scas
in
xor
gs
adcb
js
sub
push
repnz
fwait
sbb
dec
outsl
iret
jp
dec
sbb
in
repz
cli
mov
fdivl
push
stos
inc
movsl
add
cmp
insl
incl
push
jo
test
and
mov
jno
leave
fists
icebp
sbb
xor
subl
pop
rep
addl
aad
pusha
adc
mov
rcl
sbb
es
mov
or
scas
repnz
std
sub
xchg
pop
ret
mov
mov
hlt
in
ret
jge
int3
testl
mov
test
fimuls
leave
mov
sub
imul
enter
ja
inc
stos
mov
or
sub
jmp
orl
mov
lret
into
push
pop
cmp
loopne
jl
leave
into
dec
mov
mov
pop
and
pusha
mov
fidivrs
inc
mov
mov
cmp
fsubs
jb
movsb
mov
loop
or
je
jno
outsl
cmp
roll
shlb
mov
cltd
pop
scas
mov
cmp
cs
repnz
ret
arpl
mov
call
outsb
xchg
lcall
xor
in
sub
push
pop
dec
sti
stos
push
mov
pop
inc
push
jecxz
jge
in
xchg
push
mov
add
sbb
adc
je
cmp
iret
test
dec
jae
inc
in
xchg
mov
repz
mov
stos
out
insb
push
jmp
insl
jno
in
jno
jl
addr16
mov
jns
push
adc
pop
mov
mov
mov
xchg
xchg
mov
or
daa
mov
sti
cmp
test
pushf
pop
loope
xchg
in
fwait
cli
cmp
mov
test
divl
test
dec
push
mov
xchg
cmp
outsb
pop
repz
xor
pop
cmpl
leave
dec
idivb
mov
out
xchg
inc
jg
aam
mov
mov
sub
mov
mov
outsb
adc
ds
sarb
inc
pop
lret
sub
ret
data16
and
cmp
aaa
cwtl
cmp
lret
pop
sub
sub
sub
test
ret
pop
out
jle
or
fsubrs
out
mov
adc
adc
adc
out
imul
jno
inc
cwtl
iret
inc
scas
push
sahf
scas
pop
xchg
dec
mov
js
sub
push
cmpsl
lahf
cmp
icebp
push
ljmp
mov
aam
inc
jmp
sub
xor
adcl
and
into
mov
shll
arpl
pop
aam
aas
fcoms
xor
pop
stos
insb
ficomps
test
xor
xlat
sbb
lcall
mov
pop
fcomps
push
inc
in
lret
fimuls
sahf
xchg
cmp
cmp
jge
decl
push
inc
xor
jp
std
testl
fwait
xor
mov
arpl
aad
mov
fcomp
sub
pop
or
in
mov
and
pop
sub
adc
xlat
dec
cs
cld
mov
jmp
mov
mov
mov
sub
bound
test
out
xchg
adc
popf
sbb
scas
pop
iret
stc
stos
ds
inc
jge
stc
and
xchg
or
mov
mov
jo
xor
sub
xor
sahf
pop
cs
fsubr
repz
inc
sbb
loop
ja
inc
popf
stc
test
les
xchg
jae
je
leave
enter
sub
imul
sub
inc
mov
or
pop
jp
leave
push
mov
fildl
fsubs
jo
cwtl
inc
out
mov
repnz
jmp
daa
mov
mov
mov
test
pcmpgtd
sub
xchg
in
or
movsb
dec
inc
mov
and
scas
inc
jo
outsl
sbb
lret
sbb
popf
in
add
repnz
std
mulb
mov
or
lcall
repnz
pop
les
test
aam
push
pop
inc
mov
repnz
xor
jp
arpl
hlt
pop
test
imul
gs
rcrl
bnd
push
cmpsl
adc
jae
add
pop
enter
mov
adc
fs
imul
dec
push
mov
push
cs
test
adc
inc
mov
ja
outsb
pop
push
dec
pop
pop
outsb
and
push
mov
push
scas
je
idiv
aas
fs
lcall
sbb
sbb
sbb
cmp
push
sbb
repnz
inc
adc
cld
pushw
mov
fnstsw
xlat
loop
aas
outsb
aam
adc
faddp
movl
push
out
sub
mov
jmp
add
js
out
pushl
movsl
or
sub
movsl
or
int3
pop
mov
daa
fmuls
adc
jns
mov
out
lock
inc
and
fs
sub
fsubl
ljmp
dec
push
dec
std
adc
inc
xor
inc
adc
pop
addr16
fisubrs
ficompl
inc
push
movsl
pop
dec
aad
movsb
cmp
jle
rcll
cwtl
jnp
mov
mov
repnz
rorl
test
in
test
push
adc
data16
mov
or
loop
loopne
ret
adc
mov
movsl
loopne
out
mov
movsb
sub
and
mov
rcrl
push
add
pusha
lock
mov
pop
cld
lods
out
jecxz
daa
rclb
in
or
jecxz,pt
jae
idiv
pop
idivb
pop
pop
stc
pop
ret
loope
push
xchg
fsubrp
jb
add
jecxz
dec
mov
cmp
iret
sub
or
inc
movsb
faddl
mull
jge
idivl
out
lahf
xlat
ljmp
ja
stc
repnz
mov
push
jmp
push
cmpsl
ret
ret
in
cmpl
adc
push
inc
jg
and
xchg
gs
jle
ret
jecxz
out
addr16
out
mov
pusha
aad
dec
add
in
mov
sbb
push
inc
int3
ss
frstor
mov
int
out
and
pop
pop
rol
out
cmc
and
cmc
mov
in
pop
mov
pop
test
cli
push
sahf
call
pop
xor
mov
mov
xchg
add
enter
pusha
lea
jl
mov
push
insb
out
movsb
mov
jle
jns
xorl
dec
je
jmp
outsl
and
mov
jg
fs
aaa
imul
loop
inc
pusha
inc
pop
push
pusha
and
fadds
pushf
sti
lret
aas
sub
sbb
inc
add
sub
push
or
imul
pop
pushf
dec
pop
push
sbb
add
cmp
xor
loope
jbe
ss
inc
mov
bound
push
jns
popf
test
stos
push
xor
xchg
mov
sarb
dec
fidivs
or
sti
push
jns
mov
dec
xor
arpl
pop
fcmovne
popa
cmp
lret
mov
sub
int
sbb
add
loope
mov
lret
mov
rol
cli
fwait
jp
call
xchg
cmp
inc
xchg
add
adc
aad
xchg
int3
rcll
movsb
movsb
jp
inc
inc
dec
pop
hlt
mov
inc
fwait
jl
lahf
or
jg
int3
jmp
shl
push
and
popa
mov
adc
sti
loope
sbb
cmp
fistps
mov
jp
cmp
rorb
mov
adc
inc
add
mov
jle
xor
fwait
add
mov
adcl
scas
loopne
stos
cmc
sub
sbbl
or
divb
mov
mov
cwtl
arpl
int3
lock
out
bound
lcall
divps
cmp
ss
add
add
sbb
movsb
stos
pop
jae
nop
fs
jge
outsb
push
icebp
cmp
mov
xchg
inc
cmc
xchg
jns
lock
xchg
xchg
in
fistpl
jb
sub
sub
xchg
gs
adc
add
sbb
repz
pop
inc
mov
inc
pop
dec
xor
out
ljmp
insl
push
jmp
mov
jae
movsb
pop
or
xor
dec
stos
stos
mov
jge
cmp
ja
adc
sti
jno
inc
xchg
cltd
popa
cmp
push
jmp
pop
cmp
les
fs
pop
pop
add
insb
fnsave
sub
pop
sub
dec
or
push
add
cmp
cmpsl
sti
test
fsts
dec
mov
out
mov
inc
aaa
mov
repnz
ss
psubsb
push
out
xchg
test
jb
xor
xchg
inc
lea
mov
jg
push
addr16
mov
inc
xchg
popa
mov
mov
popf
inc
xchg
and
outsl
decb
sub
and
incb
jg
xchg
lock
cmp
fidivs
in
push
xchg
jo
imul
sub
mov
dec
test
cmp
das
nop
xchg
aam
test
in
shrb
lcall
mov
pop
dec
inc
add
pop
or
enter
div
fnstenv
cld
jge
movb
int
test
cmp
std
aam
lods
cli
dec
imul
dec
int
inc
mov
pusha
mov
add
leave
sbb
inc
xlat
dec
push
mov
mov
pop
lock
call
lret
sti
cmp
insl
adc
movb
filds
adc
and
clc
jae
dec
xchg
dec
les
or
xor
mov
pop
out
shr
dec
cmp
adc
movsl
std
clc
xorb
pop
sbb
xchg
loopne
fcoml
push
pop
push
nop
dec
ficompl
lods
add
insb
test
je
sahf
jnp
pop
loop
or
jnp
mov
daa
xchg
in
or
ss
sar
jmp
sbb
dec
or
mov
repnz
test
decb
cli
adc
pop
xor
xchg
in
jge
lea
orl
mov
sub
das
aam
sub
sar
jmp
sub
jmp
mov
aam
shll
nop
inc
mov
push
pop
pop
mov
mov
dec
xor
call
fidivrl
dec
xor
push
jle
lret
sbb
adc
cmpsl
sbb
cmp
or
cmp
dec
sbb
pop
adc
dec
dec
push
sbb
push
int3
inc
mov
mov
mov
jo
jbe
push
jbe
mov
in
test
fisttps
sbb
add
ds
cmp
cli
call
cmp
scas
andl
pop
data16
inc
dec
mov
pop
out
lea
adc
mov
das
cmp
xchg
push
xchg
sbb
xchg
dec
ds
sar
xor
sarb
lds
jp
mov
jecxz
dec
call
or
push
dec
gs
pop
insl
pop
jmp
mov
repz
sub
or
fldcw
pop
mov
test
aas
scas
adc
dec
scas
lea
js
movsl
mov
ljmp
xor
inc
mov
dec
mov
mov
cs
in
cmp
ja
or
jb
mov
pop
jg
xchg
push
sub
frstor
mov
pop
cmp
cmp
xchg
lock
or
call
out
insb
sub
adcl
out
dec
and
das
ret
orl
mov
ss
mov
das
or
clc
jb
sub
mov
add
rclb
xchg
fs
rcrb
in
negb
adc
sbb
add
popa
daa
ror
xchg
jne
jb
in
clc
jnp
dec
push
clc
cmpsb
dec
sub
dec
rep
adc
pop
lock
out
mov
mov
nop
das
mov
cmp
push
rcrb
or
push
xchg
fwait
pusha
jecxz
adc
mov
adc
jl
sbbl
adc
lahf
loopne
cli
or
test
add
ljmp
xchg
or
subb
push
in
cli
out
lods
jp
pusha
outsb
xor
adc
lahf
es
sub
dec
rcr
ja
mov
rep
je
or
xchg
sbb
adc
push
inc
mov
imul
pop
out
mov
cmpsl
cmc
out
sar
stc
adc
mov
dec
or
loopne
mov
pop
in
sbb
mov
in
sbb
cltd
jno
repnz
jnp
mov
std
mov
orl
sahf
cmc
addr16
push
sub
and
pop
mov
fidivrs
ret
sti
repnz
shll
hlt
lock
xchg
stc
movsl
leave
sub
negl
ret
sahf
mov
rcrb
fisttpll
mov
scas
sti
dec
div
jb
bnd
icebp
out
mov
mov
shll
push
sbbb
fldenv
sbb
cmp
mov
pushf
push
mov
ds
imul
sbb
sub
movsl
sbb
das
out
sbb
std
hlt
loop
mov
ret
and
outsb
js
outsl
lock
loopne
dec
dec
popa
or
orb
jbe
scas
jbe
xor
je
icebp
sbbl
jne
ficoml
pop
mov
es
mov
mov
cmp
pusha
push
and
aaa
push
pusha
and
shl
data16
sbb
lds
ss
bound
aam
sahf
or
mov
add
pop
xlat
pop
xlat
pop
xchg
notb
sub
pop
xor
jns
jle
jmp
fwait
pushf
mov
sbb
orb
test
in
mov
divl
imul
inc
shrl
mov
dec
pop
loopne
aaa
pop
push
and
pop
xchg
mov
movsl
gs
insb
add
mov
aam
and
or
test
jno
cs
arpl
push
sbb
adc
repz
mov
sub
lret
out
xchg
sbb
incb
mov
movsl
jl
imul
sbb
push
jp
cwtl
incl
stos
jp
mov
push
into
add
cmpsb
inc
int3
pop
mov
push
loope
in
je
jecxz
pop
test
insb
lret
dec
lods
mov
gs
sub
loope
inc
jne
test
xchg
sub
and
push
ret
ljmp
pop
loopne
fbstp
mov
xor
aam
into
repz
push
fists
xor
pop
dec
int
ss
hlt
mov
sbb
lea
sub
dec
int
fwait
push
popa
aad
ret
pop
inc
inc
or
fimull
cmpsl
mov
nop
or
cmp
mov
sarl
dec
push
js
aas
enter
and
push
jbe
cmp
or
xlat
cmp
repz
mov
popf
xchg
xor
movsb
fisubrs
mov
inc
and
fs
xchg
movsl
es
mov
mov
rcll
movsl
mov
xchg
mov
xchg
sbb
pop
call
roll
decl
pop
test
xchg
cmc
adcl
movsl
sbb
pop
and
fcmovnbe
idiv
dec
mov
imul
inc
mov
xor
sub
aas
push
test
shrl
adc
stc
in
mov
dec
xchg
lods
insl
inc
stos
push
jge
mov
ss
jb
xlat
dec
call
mov
loope
pop
inc
iret
ficoms
mov
addr16
stos
aam
inc
pop
shr
out
sbb
xor
sahf
cmpl
jmp
fadds
jmp
pop
ss
sbb
fstps
popa
out
leave
xchg
insl
mov
mov
popa
sbb
inc
mov
rcrb
dec
xchg
lcall
dec
dec
dec
std
add
shlb
push
das
jo
add
loop
sub
pop
jnp
mov
pop
mov
xchg
mov
mov
push
popf
mov
imul
out
lock
sbb
xchg
lcall
repnz
ss
addr16
push
push
ss
cmp
aas
cmp
dec
aad
pop
popf
loope
xor
mov
mov
lret
movsb
repnz
mull
mov
mov
xor
cwtl
ljmp
pop
mov
iret
lock
pop
lret
imul
out
mov
push
inc
lds
lcall
mov
mov
or
adc
cltd
arpl
popf
sahf
add
mov
xchg
loopne
sahf
jg
stos
int
and
mov
pushf
and
call
inc
insb
les
mov
cs
jne
mov
jo
sub
fwait
daa
dec
outsb
lods
bnd
sbb
jo
jo
cmc
xor
mov
xchg
scas
aas
sbb
add
push
in
push
push
push
pop
aad
pusha
dec
xchg
mov
test
in
ja
lods
aaa
mov
push
dec
mov
in
fst
xor
inc
sahf
pop
xchg
push
mov
ds
xor
adc
pop
ret
fldl
lret
mov
pop
ljmp
mov
ror
fldcw
andl
dec
and
jg
push
or
cmp
inc
adc
shlb
jbe
scas
sbb
jbe
fwait
sub
xor
pop
or
data16
xchg
jge
jge
movsl
fsubl
jo
push
add
iret
out
mov
movsb
xor
shrb
outsb
es
in
repz
mov
or
jb
jne
insl
mov
dec
test
cmpsb
les
add
mul
lahf
and
xor
mov
sti
enter
push
sub
sbb
inc
pusha
insb
iret
subb
fs
addr16
adc
dec
push
and
cmp
iret
aaa
pop
xorb
add
xchg
stos
or
notb
ljmpw
int3
fsts
add
push
lahf
rclb
xchg
cmp
xchg
mov
enter
rorl
lret
stc
and
mov
test
mulb
and
iret
or
jle
cltd
xchg
xor
xchg
or
push
dec
int3
mov
addr16
into
cmc
pop
push
mov
stc
fsubs
arpl
test
xchg
inc
negb
in
or
xor
push
sbb
mov
adcl
xchg
repnz
inc
cmp
sub
lds
inc
mov
adc
sub
or
jns
outsl
pop
mov
popf
jle
fisubrs
push
mov
xor
es
test
scas
in
imul
jae
push
mov
mov
outsl
sbb
mov
out
add
inc
popa
das
aas
adc
imul
inc
jae
adc
push
mov
test
aad
testb
popa
stos
icebp
into
je
push
jge
cmp
dec
xor
sbb
push
sbb
fiaddl
int3
cmp
dec
push
lret
jae
fildl
add
pop
cmpsb
xchg
mov
jge
stos
in
pop
xchg
jb
loope
jmp
inc
ret
xor
sbb
mov
insb
push
push
clc
mov
jb
int3
ret
lods
test
pushf
jns
adc
dec
or
push
lcall
int3
or
xchg
xchg
shrl
in
sbb
xchg
mov
call
and
xchg
push
mov
rcrl
fists
cmp
sub
aam
jo
pop
mov
inc
jge
add
cld
xor
add
dec
out
add
in
cld
push
mov
rcr
sub
mov
iret
cmp
inc
rcll
bound
cmp
adcb
sbb
es
or
mov
testl
sti
jbe
pop
icebp
inc
jae
xor
in
push
insl
enter
cs
adc
test
negb
jle
addb
sbb
jno
pop
mov
popa
jge
icebp
or
inc
mov
push
arpl
out
loope
pop
jno
testl
pop
xchg
in
adcb
aaa
pop
or
ret
lock
sbb
aad
jl
es
rorb
cmp
cmp
cltd
call
insb
testl
add
mov
cwtl
fldt
dec
fdivl
js
dec
clc
out
pusha
sbb
mov
inc
stos
pop
cmp
ja
scas
push
test
aaa
pop
inc
jg
mov
xor
fnstenv
loop
jnp
jecxz
mov
xchg
enter
mov
xchg
loopne
sub
cmp
ss
in
loopne
adc
sub
mov
cltd
lcall
pop
cmpsb
jg
dec
call
rcrb
daa
cmp
in
push
cmc
and
pop
aaa
mov
sbb
lahf
inc
pmaxub
inc
cmp
lahf
rcrl
hlt
mov
pop
gs
ds
jno
fwait
arpl
push
lods
push
cmp
cld
bound
push
pop
and
pusha
mov
adc
add
pop
cld
mov
and
dec
lea
mov
mov
dec
sbb
repz
rorb
arpl
adc
xorl
shrb
add
add
stos
pop
mov
pop
cmp
sub
sbb
pushf
or
push
and
mov
adc
stc
mov
dec
arpl
arpl
push
jo
addb
out
stc
out
movsl
jns
into
lock
movsb
and
xorl
jg
inc
mov
mov
add
nop
loope
mov
cmp
test
xchg
es
andl
pop
data16
pop
jecxz
push
xor
cmp
mov
daa
cs
mov
aad
xchg
adc
leave
dec
mov
inc
or
fcoms
dec
mov
adc
xchg
or
mov
aaa
icebp
test
inc
fisubl
sti
adc
lods
and
fwait
xor
sbb
aam
fmul
aaa
mov
pop
into
push
shrl
xchg
or
daa
xor
lds
push
ss
jecxz
adc
cmp
hlt
dec
jno
push
mov
pop
dec
pop
pop
sbb
hlt
mov
dec
inc
dec
imul
mov
push
sbb
mulb
mov
out
xchg
xchg
or
ret
cmp
jge
js
into
inc
and
cli
and
and
fadds
lret
movsl
out
push
xor
inc
mov
pop
xlat
insl
mov
dec
cmp
jnp
push
ljmp
mov
loope
mov
pop
mov
sahf
adc
into
roll
pop
ljmp
pop
ja
mov
push
pusha
and
xchg
js
popa
insb
addr16
push
shlb
nop
scas
imul
push
lret
push
jl
nop
icebp
push
popf
mov
lret
stc
jnp
subb
das
outsl
add
push
mov
lahf
jae
lds
xchg
mov
or
pop
push
mov
lods
lcall
or
das
adc
lret
adc
iret
jle
scas
sarl
addr16
jecxz
mov
lds
mov
lods
pop
repz
in
icebp
cwtl
or
cwtl
jb
sbb
mov
add
add
mov
cmpl
imul
xchg
and
sub
jl
outsb
sub
addr16
pop
pop
mov
cs
mov
out
push
dec
jae
xchg
pop
aaa
ljmp
xor
orl
enter
std
dec
mov
push
ret
rolb
lahf
pop
push
jle
sub
xor
jne
adc
pusha
mov
pop
sub
leave
and
sub
mov
or
push
call
mov
movb
inc
lret
or
inc
push
cmpsb
xor
out
and
sub
int3
mov
inc
outsl
cmp
fs
jle
sbb
sub
jl
and
jle
ret
or
mov
xchg
outsl
add
ret
ret
and
outsl
push
mov
pop
lret
push
pushf
das
push
mov
stos
es
loop
xchg
repnz
cmp
xchg
xor
lods
out
or
add
cmpsb
mov
pushf
ja
jbe
lds
shrl
lcall
sti
loope
pop
xor
add
testl
jg
xchg
int
call
or
mov
push
jae
icebp
cmp
not
mov
sahf
rcll
inc
cli
out
in
rolb
rolb
fstp
sbb
mov
pop
mov
stos
ljmp
cltd
mov
cmc
dec
push
push
out
rcll
pop
js
add
ret
lods
mul
adc
fdivs
shl
ficoml
lret
mov
ljmp
mov
stos
and
mov
mov
nop
ljmp
cli
mov
pop
int
cmpl
sbb
dec
or
inc
lret
pop
dec
mov
int3
dec
add
jecxz
aam
cltd
dec
out
push
and
jne
call
movsb
int
fbstp
xchg
bound
and
and
pop
add
or
add
ficoml
push
pop
xchg
imul
stos
add
cmp
pop
insl
sbb
adc
pop
jp
pusha
rcrb
pop
sbb
or
adc
ret
inc
insb
cmp
mov
aad
inc
stos
xor
std
mov
push
cli
js
mov
imul
ss
inc
add
sub
mov
mov
dec
int3
push
or
fnstcw
fcoml
cld
inc
push
mov
pop
mov
sbb
stc
clc
inc
js
repz
insb
clc
in
lret
int3
cmp
sub
add
adc
iret
out
aam
ljmp
into
rolb
cmc
mov
dec
icebp
push
das
sbb
add
pop
shr
into
dec
push
gs
pop
jp
jns
push
lock
js
les
lcall
cmpsl
jo
dec
mov
in
and
sub
adc
mov
ret
adcl
xor
push
in
shr
sbbl
sbb
rcll
fdivrl
test
sub
xor
or
jns
xchg
dec
mov
add
sti
sbbb
mov
or
pop
loopne
ret
sub
inc
decl
and
shrl
stc
xor
jnp
pop
aaa
jg
movsl
mov
out
fidivrl
sti
loope
mov
pop
jne
xor
cwtl
add
fdivrl
lret
rcl
movsl
pop
cmp
mov
movsl
inc
xor
insl
cmc
or
fstp
sbb
shll
lods
test
mov
or
pop
repnz
cmp
and
push
aaa
in
popa
shlb
xor
add
dec
xlat
mov
dec
das
mov
jne
test
cmp
inc
fs
mov
bound
test
stc
dec
mov
fcoml
adc
out
xor
add
dec
iret
imul
sub
arpl
sbb
lcall
movsl
lea
std
xorl
xchg
les
ret
mov
dec
xchg
into
xchg
jmp
dec
fwait
out
dec
xchg
cmp
dec
jno
add
lods
dec
mov
mov
iret
in
cmp
into
xlat
adc
jl
popf
dec
inc
mov
mov
adc
movsl
and
dec
das
cmp
mov
repz
loopne
sbb
repnz
or
les
and
pop
xor
stos
add
in
adc
clc
push
lods
fdivrl
cmpsb
inc
adc
aaa
dec
sub
je
mov
out
rclb
nop
push
cs
in
es
dec
jnp
std
push
mov
jl
cmpl
mov
push
and
xchg
mov
jne
or
mov
inc
xchg
pusha
in
insl
xchg
jle
push
es
mov
rcr
pop
jns
cmp
out
push
test
jecxz
shr
inc
jl
push
aam
mov
dec
lock
jle
or
lock
ficoml
fists
insl
add
sti
push
add
push
pop
es
out
aaa
repz
push
int3
outsb
call
pop
mov
inc
aas
jg
dec
fisttpl
stos
es
lret
in
cltd
pop
sbb
imul
in
xchg
mov
cld
mov
adc
inc
jl
inc
xor
pop
daa
enter
popa
and
inc
sub
cmp
stos
aam
lahf
lds
mov
mov
out
pop
jne
cwtl
stos
test
out
adc
lods
into
bound
cmpsb
fiadds
add
jmp
fcompl
sbbl
mov
push
stos
je
sub
lret
jle
pop
cmp
into
pushf
movsb
fmul
in
pop
adc
je
pop
mov
jne
loop
sub
mov
loopne
xchg
cmc
ret
subb
les
int
cmp
fs
pop
or
cmp
or
dec
mov
mov
inc
cmp
arpl
adc
scas
mov
and
dec
push
jmp
iret
cmpsl
faddl
jle
xor
pop
lds
fldt
pop
mov
flds
inc
pop
or
imul
mov
xlat
lahf
ret
cs
cmp
movsb
dec
mov
sti
lock
rorb
dec
lds
pop
mov
ret
in
add
xchg
in
pusha
fcomip
popf
ja
mov
mov
fsub
push
dec
das
loopne
lcall
mov
test
test
sub
xchg
cmp
push
call
mov
in
pop
push
push
out
out
push
push
das
push
inc
add
aam
je
dec
xor
ja
outsl
ljmp
push
dec
fldcw
roll
jmp
sbb
lret
sub
xor
adc
xor
mov
fwait
sar
push
mov
fmull
jns
shll
mov
sub
sahf
xchg
adc
jg
push
cmpl
or
enter
sbb
or
jmp
decb
and
mov
mov
adc
out
adc
or
jg
outsl
mov
inc
and
shl
push
loop
icebp
ja
cmp
loope
sbbb
sbb
pop
repz
shr
xor
add
pop
push
ds
repnz
lcall
mov
adc
les
push
cmpsb
dec
jbe
test
mov
cmp
or
dec
rcrl
in
and
hlt
jbe
mov
aam
xor
push
jns
inc
out
dec
inc
inc
mov
int
mov
xor
cmp
adc
mov
and
mov
aas
jg
lds
repnz
call
test
outsl
lahf
lods
inc
mov
cli
xlat
inc
xor
push
cmp
cmp
out
dec
fldt
or
repnz
or
int
xor
fisubs
shl
sub
pop
pushw
push
xor
push
enter
insl
shrb
adc
imul
push
decb
and
sbb
cmp
ds
push
xchg
sbb
inc
mov
inc
push
fsubr
mov
mov
bswap
inc
xchg
push
insb
ja
jnp
cmpb
cmp
test
sbb
mov
cmpsl
insl
pop
jnp
pop
ljmp
cmp
fldl
dec
inc
shlb
push
and
and
and
sbb
mov
ss
mov
mov
test
xor
fisttps
pop
das
enter
pop
push
popf
sbb
and
call
cmp
out
jne
notb
push
arpl
mov
pop
push
inc
lods
jl
ds
sti
cmp
lret
xchg
outsb
test
in
mov
cwtl
cmp
mov
and
pop
sub
adc
dec
jno
dec
add
xchg
das
sbb
enter
shl
pop
mov
pusha
inc
stos
sub
xor
in
cmp
or
pushf
cmc
ljmp
ret
int
pop
js
test
gs
fisttpll
cmpl
mov
or
shl
fucomi
test
lret
scas
out
xor
hlt
cld
in
int3
mov
push
movsl
lock
jo
into
or
and
setge
fsubr
sarb
in
and
js
sti
sahf
xor
lcall
dec
out
nop
cmp
push
mov
add
shll
fwait
lcall
imul
int3
out
scas
xchg
iret
imul
sti
lcall
xor
pop
orl
adc
jno
push
jae
es
in
test
cltd
push
cmp
add
lea
int3
push
das
mov
popa
fcmovnu
jecxz
cmp
adc
loope
mov
xor
or
or
out
jnp
jle
out
test
add
inc
orb
add
aaa
mov
aam
jg
imul
inc
iret
ds
shlb
loopne
movsb
mov
or
flds
call
aas
lea
xchg
lret
push
scas
sbb
icebp
rcrl
fwait
cmpsl
xchg
sbb
insl
jl
sub
mov
lds
sbb
and
decl
outsb
aaa
cmp
jmp
call
out
mov
or
fiaddl
pop
jnp
lods
aam
insl
sti
sbb
adc
enter
fsubp
sub
ja
pop
sub
mov
out
dec
aam
test
outsb
movsl
fcoms
shll
jle
sbb
pop
sub
movl
ja
xchg
das
loope
loop
push
mov
mov
mov
incl
into
rcrb
xchg
dec
adc
adc
ret
cmp
push
jnp
sub
out
mov
ds
mov
sub
out
or
test
sbb
shrl
pop
testb
adc
mov
loop
push
sar
xchg
addr16
stc
sub
out
cmp
jb
sti
out
in
inc
mov
les
pop
jb
test
popa
iret
add
sub
pushf
xchg
dec
hlt
cmp
jno
pop
and
mov
sbb
out
ficoms
mov
cmpsb
jbe
add
jns
pop
filds
mov
dec
ret
leave
fdivp
into
mov
repnz
shll
fwait
lds
mov
addr16
jne
xor
xchg
jne
test
mov
sarl
push
mov
shll
fldt
pop
das
pop
cmp
testb
sahf
bound
es
cli
stos
lods
xchg
faddl
fnstsw
aas
cwtl
jg
inc
insl
sub
test
fldt
in
and
inc
mov
repz
movsl
xchg
jno
pop
insb
aas
popf
sub
in
push
outsb
out
dec
jge
mov
imulb
mov
aad
shrl
out
cld
cmpsb
cltd
xchg
push
nop
test
into
pop
sub
sbbl
lea
sub
adc
fistpl
bound
test
mov
mul
mov
adc
inc
ss
adc
jns
mov
add
movsl
mov
push
dec
push
lock
mov
push
fdivp
dec
xchg
repz
sbb
aas
lret
inc
lcall
cmp
ret
mov
in
mov
and
inc
push
xchg
cmp
xor
xchg
dec
jp
mov
or
push
ret
fimull
into
jae
fistps
adc
sub
xchg
aad
clc
cmp
subb
jle
mov
fists
and
push
jmp
add
imul
mov
xchg
imul
dec
repnz
je
xchg
pop
les
cld
fdivrp
mov
loopne
jecxz
mov
push
out
popa
outsl
out
mull
sahf
xchg
and
ja
add
and
add
mov
jo
pop
sub
and
xchg
minps
shrl
xchg
js
inc
in
add
lods
inc
outsb
shrb
sub
push
push
sub
jbe
jne
rorl
jg
sbb
subl
notb
ficomps
outsl
jbe
addl
daa
xor
lods
dec
cmp
mov
sbb
lret
pop
cmp
jb
add
test
xchg
pop
lea
fidivrs
pop
mov
push
in
inc
jo
iret
xchg
pop
add
pop
pop
cs
inc
cwtl
and
sub
push
push
rorb
repnz
loope
out
mov
repnz
out
mov
lock
aam
xlat
test
and
jne
faddl
cli
jg
sbb
imul
mov
iret
adc
xor
xchg
push
stos
lret
xchg
jecxz
loope
or
mov
out
xchg
or
test
mov
lods
fiaddl
test
xlat
mov
mov
pop
sub
in
push
sbb
sbb
xchg
mov
daa
sbbl
or
pop
adc
sub
xchg
xchg
mov
test
mov
das
in
out
cli
outsl
xchg
insl
mov
jl
pusha
jns
mov
dec
cli
sahf
imul
mov
or
mov
call
aad
mov
jae
or
inc
pop
xor
inc
ret
pop
insb
fisubrl
inc
addl
in
das
xorl
int
xchg
cmp
es
push
leave
jge
xchg
cltd
and
or
jecxz
add
and
push
fisubrl
cwtl
pop
jo
lret
pop
cmp
jne
mov
jnp
js
sub
popa
xorb
stos
pop
jg
dec
daa
test
and
fs
sbb
sub
sbb
mov
dec
cld
aaa
lods
adc
insl
iret
inc
cmpsb
pop
push
out
ret
clc
inc
or
mov
test
addr16
fsubs
pop
int
loopne
push
cwtl
mov
xchg
pop
xor
imul
in
jns
adc
cld
jmp
push
push
cmpl
xlat
sub
cli
push
cwtl
push
loop
xchg
es
mov
sbb
cltd
lock
jne
cmpsb
push
xchg
mov
test
div
popa
ss
xor
faddl
or
add
mov
test
cmp
mov
ljmp
push
mov
and
xchg
adc
rcrl
and
subl
cmp
mov
jecxz
jle
arpl
rcll
ds
lds
ret
ffreep
push
sub
stc
std
iret
movsl
xor
xchg
mov
in
insl
pop
push
xchg
ds
out
xchg
xchg
out
roll
mov
sub
ss
popa
mov
sub
xor
cwtl
dec
and
jnp
enter
mov
dec
arpl
push
loopne
sub
jb
movsl
cli
ret
popf
cmp
cmp
in
movsb
inc
fcoms
xchg
xor
in
mov
loop
clc
clc
jno
and
xor
popf
cwtl
call
inc
xchg
cs
cmp
icebp
jo
xor
cltd
andl
push
dec
push
sbb
xlat
xor
jo
and
add
clc
sti
mov
xor
or
shl
decb
js
jle
xchg
hlt
pop
dec
cwtl
mov
add
addr16
jne
cmp
sbb
ja
pop
push
jg
xchg
sbb
cld
aam
fnstenv
test
or
rcr
add
pop
pushf
mov
adc
mov
jle
rcll
pop
notl
sub
xlat
inc
or
cmp
arpl
outsl
jecxz
mov
push
cs
mov
mov
fimuls
jecxz
loop
pop
pop
outsb
lahf
xor
xchg
cltd
pushw
std
add
jne
idivb
adc
add
ret
arpl
andl
out
ret
xor
mov
and
jnp
push
xor
pop
loopne
fidivl
inc
xchg
stos
adcb
insl
adc
mov
jge
pop
push
sub
or
andl
ja
clc
adc
xor
adc
aaa
addr16
cmp
popf
cli
ret
push
lret
jle
xor
cmc
es
sbb
ds
pop
inc
fildll
es
add
lea
sahf
xchg
jb
sbb
jb
daa
jp
test
pop
jnp
or
jle
aaa
dec
adc
mov
jmp
and
loopne
inc
push
add
inc
imul
push
cmp
ret
enter
mov
inc
mov
aaa
lea
hlt
xchg
ficoms
mov
inc
xlat
mov
push
repnz
out
lcall
cmpsl
bound
incl
push
pushf
cmp
and
xchg
pop
out
divl
hlt
in
jnp
dec
pop
sbb
jo
orl
inc
mov
loope
push
cmpsb
mov
jae
dec
jge
mov
inc
mov
loop
sbb
scas
popa
sub
add
sub
mov
xor
inc
jp
jns
mov
pop
mov
inc
pushf
cltd
pop
pop
cmp
add
mov
cmpsb
jl
xchg
mov
mov
jb
xor
mull
das
xor
jne
sub
inc
jle
cmp
scas
cmc
and
push
mov
adc
leave
sub
cmp
out
inc
push
call
lods
push
sbb
arpl
int
mov
std
das
mov
pop
ds
jge
andb
mov
fstl
add
outsb
mov
into
inc
jnp
decl
fildl
inc
nop
fs
cli
andb
cmc
out
ret
pop
mov
iret
in
xor
mov
push
cmp
xchg
scas
sar
mov
and
dec
fwait
pop
pop
sbb
xchg
dec
or
or
fistl
dec
xor
loope
adc
lea
sub
fsubl
xor
hlt
dec
pop
adc
mov
cmpsl
or
jne
incb
mov
shl
adc
mov
mov
data16
sub
mov
rorb
vmovlps
rcll
mov
lock
sahf
adc
inc
in
push
mov
pop
jnp
or
cmpb
jb
jbe
mov
mov
mov
ret
cli
inc
stos
xchg
fwait
jg
sbbb
enter
orl
jl
test
fisttps
sarb
jo
mov
pop
dec
and
sti
fistps
or
mov
inc
rcll
mov
and
int
push
fwait
cmpsb
ret
into
das
sub
lretw
add
das
and
xlat
bound
fimull
jo
in
xor
mov
sbb
aaa
xchg
dec
jp
loopne
bound
add
inc
addb
je
stos
xor
jb
push
fistpll
add
ljmp
mov
add
jmp
mov
movsl
pop
lcall
mov
pop
and
cmpsl
idivl
jno
test
sar
push
fidivl
mov
mov
shlb
js
adc
cli
jp
nop
dec
shl
out
pop
aam
aam
mov
mov
scas
test
xor
in
lcall
push
mov
inc
xor
sub
cs
repz
pop
subl
icebp
mov
jg
mov
cmp
adc
cwtl
jmp
leave
ja
ja
lea
hlt
inc
cmc
inc
cmpsl
xor
xchg
fwait
mov
mov
lret
or
gs
jo
and
js
iret
jge
into
mov
adc
filds
std
fldenv
xchg
mov
push
mov
cwtl
scas
add
iret
sbb
jmp
mov
jne
test
adcl
fcmovnbe
ja
push
test
fwait
movl
pop
outsb
pop
or
iret
sbb
cmpsb
pop
roll
lock
fdivrl
icebp
mov
pop
xor
loope
mov
inc
push
es
addr16
jg
outsb
scas
mov
inc
aad
cld
adc
push
loop
and
ja
jecxz
or
data16
je
push
push
jo
add
cltd
es
push
das
lahf
sbb
cs
jge
outsl
in
and
fnstenv
iret
subl
and
in
decb
adc
mov
dec
pop
push
lret
int3
aaa
cmp
xorb
stc
not
js
pop
sbb
and
test
cs
fmuls
add
lods
repz
movsb
push
daa
nop
adc
or
push
xchg
fisubrl
dec
repnz
sti
jecxz
mov
bound
lcall
sbb
js
sahf
and
add
aam
xchg
sbb
lea
push
hlt
mov
jle
aad
jns
xor
sti
jle
call
mov
mov
fs
lods
repnz
jnp
iret
fmuls
sub
mov
mov
dec
add
sub
roll
sub
jle
cltd
pop
xor
cmp
push
mov
sub
inc
pop
xor
imulb
gs
or
out
lcall
orl
out
daa
xchg
lods
push
aad
rclb
sar
fdivs
mov
imul
movsl
lcall
inc
repz
aas
and
in
ljmp
and
sbb
lea
and
les
arpl
dec
and
repnz
dec
pop
ret
xchg
xor
stos
es
inc
ret
add
shrl
pop
jle
mov
idivl
inc
inc
and
xchg
xchg
daa
inc
pop
mov
adc
mov
mov
inc
lahf
push
lea
outsb
adc
pusha
mov
xlat
leave
in
mov
add
movsb
icebp
mov
in
pop
out
fistl
popa
sbb
jns
fiadds
lret
add
inc
mov
and
je
call
xchg
notl
popa
cs
aam
out
jbe
push
xor
jno
cmp
adc
fcompl
cmpsb
cltd
sbb
data16
es
inc
push
cmp
pop
lret
sbb
mov
sub
stos
push
popa
lahf
cmp
decl
orl
jl
sub
push
imul
sub
addl
fildll
repz
and
int3
out
in
and
mov
ja
jp
xchg
push
push
mov
outsb
sub
out
pavgw
mov
sub
cmp
inc
fidivrl
data16
adc
mov
aad
mov
xor
or
test
cmp
fucomp
hlt
iret
cwtl
inc
mov
dec
enter
and
ret
gs
xor
ljmp
ss
mov
in
push
xchg
sbb
test
jno
xor
mov
loop
cmp
lods
jbe
jmp
and
ss
testl
jle
das
mov
mov
add
add
scas
xchg
cmp
popa
xchg
mov
sbb
mov
mov
popa
add
inc
push
arpl
movsl
stos
dec
insb
mov
add
push
or
lds
mov
dec
add
xorb
lods
test
jmp
lods
adc
and
xchg
jmp
jns
mov
in
inc
stos
pop
xor
movsl
cltd
mov
pop
popa
imul
mov
faddl
mov
loop
cmp
stos
dec
cmp
cmp
inc
adc
ja
hlt
jp
add
test
push
pusha
mov
repnz
inc
movsb
lds
cmc
mov
out
sar
mov
pop
icebp
rcrb
fdiv
movsb
repnz
stos
nop
loopew,pt
sub
fnstenv
sub
lahf
cwtl
and
jecxz
jle
xor
mov
in
lcall
stos
jns
outsl
xchg
andb
mov
push
mov
cmp
aas
pop
adc
nop
inc
shll
lock
mov
loopne
shrl
stc
mov
fisttpl
dec
cwtl
sti
push
movsb
popa
mov
jb
mov
fnstsw
sbb
leave
scas
add
inc
mov
in
iret
push
pop
mov
add
shlb
fdivl
or
mov
shr
out
fidivs
fidivrl
out
ja
sub
push
stc
cmpsb
fnstsw
xchg
lods
ljmp
ret
sbbl
es
test
mov
int3
xor
test
sbb
push
or
pop
mov
add
mov
cmp
xor
ja
dec
jmp
mov
arpl
gs
cmpsb
push
test
in
sbb
dec
mov
push
adc
push
mov
push
dec
jge
push
scas
xlat
and
int
inc
mov
sub
jnp
inc
xor
and
sub
and
sbb
xchg
out
sub
mov
sbb
mov
imul
pop
aaa
or
rcr
and
in
mov
adc
gs
or
jge
outsl
scas
movsl
stc
ret
popa
mov
mov
fstl
push
jl
sub
loopne
test
sahf
shlb
in
inc
int
test
cltd
movsl
inc
xchg
pop
mov
inc
adc
push
ret
popf
loopne
sbb
dec
add
or
or
rcrb
fdivrs
push
sub
js
sbb
dec
lret
movb
jns
movb
jne
arpl
xchg
xchg
pop
dec
arpl
lret
in
adc
pop
pop
cmp
cmp
inc
jbe
lds
sti
sub
enter
push
xlat
add
xor
dec
incl
enter
pop
cmp
sub
pop
ret
dec
sub
cli
sub
aas
mov
cwtl
inc
mov
push
fucomip
xchg
fsubrs
mov
mov
in
nop
gs
add
enter
push
inc
mov
jae
fmulp
xchg
test
lret
sub
repnz
mov
aam
inc
into
push
stos
mov
aad
fwait
add
mov
jmp
xchg
repnz
push
outsl
out
scas
lahf
negl
out
mov
mov
inc
push
scas
add
adcl
sub
add
adc
pushf
hlt
insb
sub
push
negb
and
cwtl
cld
ret
mov
sbb
dec
loop
outsb
inc
ds
inc
mov
or
das
dec
pop
pop
dec
push
adc
test
pop
mov
or
aas
mov
insb
mov
lds
popf
pushf
imul
inc
mov
push
and
out
add
mov
mov
pop
or
clc
add
lods
dec
sti
jle
dec
push
inc
fists
cs
mov
jno
pop
cld
xchg
pop
mov
loope
pop
lds
pop
add
and
adc
ljmp
clc
movsb
sbb
mov
xor
add
in
jnp
push
inc
gs
mov
xor
pop
cwtl
lods
pop
sahf
pop
xchg
outsb
or
insl
and
jnp
sarl
ds
movsl
lret
add
fisttpl
rolb
popa
cs
push
mov
cli
mov
mov
and
cmp
sbb
ret
sub
or
mov
pop
shrb
test
jecxz
lret
lret
fwait
xchg
iret
mov
push
xchg
mov
jno
in
and
cmp
fs
add
add
mov
xor
bound
xchg
and
insb
nop
add
push
insl
out
jg
enter
mov
sbb
jnp
rol
add
cmp
xchg
mov
fwait
sbb
xchg
enter
js
sbb
enter
gs
rolb
mov
daa
dec
out
xchg
cs
jecxz
enter
enter
xor
pop
psubsb
mov
mov
dec
cmp
lea
and
fcomi
addb
mov
dec
mov
lret
jns
xchg
mov
xchg
psubw
add
cmp
imul
xchg
push
cmpsl
aam
fcmovnb
jne
mov
push
pop
bound
jo
mov
les
ss
ffreep
cmc
addl
fwait
dec
outsl
mov
sub
sub
push
fs
loop
call
bound
or
inc
cmpsb
dec
icebp
push
movsb
mov
outsb
push
imul
int
ja
lahf
adc
add
outsl
jnp
jnp
incb
jae
cli
pushf
jecxz
sahf
mov
ja
jg
and
or
xchg
jge
cmpsb
push
stos
jl
mov
xchg
les
pusha
jmp
sbb
mov
int
sbb
ja
jb
inc
push
or
and
aam
xchg
std
adc
push
ds
nop
in
jl
icebp
enter
jo
fs
ljmp
pop
sahf
scas
loop
roll
pop
pop
icebp
out
pop
dec
ficoms
mov
sub
arpl
daa
adc
cmpsl
cmp
pop
cmpsb
in
push
inc
dec
xchg
pushf
jl
test
dec
je
shlb
movsl
pop
sti
push
mov
lahf
fidivs
cmp
xchg
xchg
sub
outsl
andb
sub
adc
xlat
inc
xlat
xor
lret
sahf
jge
shl
aam
out
out
scas
lds
jo
fbstp
ljmp
lock
sbb
add
out
fs
insb
arpl
push
pop
lods
into
stos
daa
push
inc
pop
leave
adc
daa
mov
in
cwtl
cmp
enter
stc
sbb
mov
std
int
out
clc
mov
cmc
mov
in
push
cmc
add
pusha
gs
mov
popl
mov
sbb
cmp
or
mov
push
mov
dec
imul
push
cmp
mov
add
js
dec
jg
adc
mov
sbb
mov
push
xchg
mov
adc
mov
and
jns
loopne
repnz
shll
mov
sti
insb
push
dec
mov
sub
cmp
lret
cmpsl
add
dec
fwait
push
aad
or
ljmp
push
addb
add
pop
pop
loop
mov
and
iret
push
es
mov
cmpsl
sbb
xor
cs
pusha
add
loopne
xlat
fs
sbbb
gs
xlat
pusha
hlt
mov
pop
xchg
dec
hlt
or
sarb
xchg
test
out
or
cmpsb
sbb
in
fimuls
roll
push
in
adc
pushf
rcr
and
or
in
rorb
test
hlt
dec
cmp
mov
repz
leave
pusha
cmp
lods
fildll
pop
adc
aas
lods
push
test
jg
pop
test
adc
cmp
les
inc
popl
test
notb
add
lods
out
insl
xchg
mov
std
or
dec
mov
push
cltd
xor
pop
lahf
pop
push
sub
sbb
fldcw
clc
xchg
popf
call
dec
pop
push
pop
inc
iret
push
pop
and
inc
push
jmp
or
and
repz
out
inc
or
mov
das
mov
lock
add
push
rorl
dec
lods
pop
pop
mov
sti
sbb
inc
xchg
cmpb
jb
xchg
mov
and
into
jno
jo
sub
pop
pop
mov
or
outsl
in
insb
xor
xlat
cltd
sub
lcall
fstps
subb
xchg
loop
and
fs
xchg
pop
jno
fcmovne
in
testl
push
push
dec
imul
fstpl
jmp
adc
inc
push
mov
sti
or
xor
mov
adc
push
sbb
repnz
inc
push
cmp
mov
gs
lret
loopne
mov
or
and
mov
fincstp
sbb
cmp
mov
lcall
movsbl
push
sahf
in
mov
cltd
xlat
scas
mov
push
adc
cmp
ljmp
jno
dec
cmp
jnp
push
notl
daa
movsb
sbb
xchg
lods
std
fcompl
inc
lret
mov
jnp
scas
gs
jbe
nop
pop
xchg
test
push
clc
add
push
lods
clc
out
in
sbb
ds
jmp
nop
push
in
icebp
ss
cmp
das
mov
push
xor
les
adc
lock
adc
or
adc
sub
xchg
sub
scas
into
iret
xor
dec
fxch
rcll
fwait
inc
cs
psubb
cwtl
pusha
imul
lds
push
es
mov
mov
je
or
jbe
les
sub
ljmp
pop
lock
or
adc
xor
dec
lods
dec
lret
sbb
add
pop
xor
pop
jmp
push
cmp
mov
cwtl
push
cmpsb
movsl
pop
sahf
aad
cmpsb
push
iret
mov
ja
leave
addr16
mov
push
test
push
ret
mov
icebp
cmp
add
pop
inc
dec
mov
dec
xor
mov
imul
cmpb
fsubs
mov
inc
or
mov
stos
inc
adc
mov
dec
iret
dec
cmp
jnp
add
and
jae
mov
rcll
adc
jmp
pop
clc
inc
xor
jecxz
and
xor
xor
jmp
sahf
fisubrs
fcmovne
add
jo
xchg
mov
leave
sub
jo
les
outsl
clc
jo
scas
xchg
push
int3
xor
xchg
loope
les
je
icebp
add
sub
test
cmpsb
sbb
jns
add
pop
inc
cwtl
cmp
jb
or
cwtl
inc
scas
and
jmp
adc
jne
pop
shrl
inc
adc
jmp
sbb
xor
sub
push
inc
jmp
inc
in
xor
insl
loopne
addr16
outsb
xor
fsts
orl
jle
and
push
test
out
lods
sub
mov
ror
pusha
dec
loopw
or
adc
in
adcl
sbb
imul
jbe
test
pop
aaa
jo
cmp
push
pusha
cmpsb
and
mov
mov
jmp
sbb
loopne
rclb
arpl
pop
sub
iret
outsb
out
mov
movsl
add
sti
mov
js
fsub
clc
sub
js
jmp
test
je
addr16
rolb
loop
ds
out
scas
push
addl
nop
dec
dec
mov
add
dec
mov
and
sti
mov
cmpsl
add
insb
nop
rcrb
ret
pop
pop
mov
notl
pop
lods
mov
mov
sbb
jae
xchg
inc
push
fcompp
dec
mov
rcrb
movsl
dec
stos
mov
mov
jl
data16
mov
mov
int
cli
test
test
cld
and
faddl
xor
aad
mov
cmpsl
jo
int
jp
xchg
inc
scas
mov
lret
xchg
pop
add
mov
lock
in
add
mov
mov
mov
pop
jne
ds
cld
repz
add
int
js
cwtl
push
push
addr16
incb
xchg
or
test
pop
dec
shlb
shlb
js
adc
popa
lcall
gs
in
and
jns
cltd
stos
xor
mov
pop
je
push
jp
lcall
adc
pop
cwtl
mov
jmp
inc
push
adc
push
xabort
inc
stc
sysenter
xor
pop
repz
mov
sahf
outsb
lods
call
fcompl
mov
cli
in
movl
and
sbbb
jo
xchg
mull
mov
dec
cwtl
or
dec
and
pop
dec
push
les
movsl
jg
fldenv
dec
loop
and
push
in
es
leave
mov
push
add
ss
and
mov
sub
inc
mov
test
lea
mov
outsb
jbe
dec
dec
repz
pop
frstor
divl
mov
jmp
lock
dec
aad
movsb
ds
lret
ret
mov
cmp
jecxz
scas
mov
adc
stc
add
dec
mov
leave
mov
mov
dec
std
xchg
scas
inc
lret
mov
das
jl
call
jecxz
jo
mov
repz
notl
mov
jo
cmp
and
mov
xchg
mov
push
inc
mov
out
push
fildl
inc
xchg
fdivs
sbb
incl
cmp
and
and
dec
add
aam
mov
das
scas
xor
cmc
push
jo
dec
pop
sub
mov
add
inc
dec
or
mov
pop
pop
fdivp
cmp
ficoml
dec
dec
and
int3
out
jp
push
mov
enter
lahf
cmpsb
mov
inc
nop
std
mov
sbb
mov
in
xor
adc
data16
fists
rcrl
pop
cmpsb
mov
xor
jle
sbb
and
aaa
insb
fsubr
nop
add
ret
nop
bound
aas
add
scas
or
andb
mov
popa
lret
std
call
ljmp
loop
xor
cmp
cmp
dec
sbb
clc
add
cmp
mov
xchg
inc
mov
sahf
mov
mov
sbb
cmp
xorl
and
add
push
dec
pop
imul
mov
jle
sbb
push
dec
or
or
add
pop
jge
xchg
dec
lods
in
sub
or
out
adc
mov
inc
ljmp
ret
xchg
xlat
xchg
lods
in
in
inc
add
in
or
adc
cmp
xchg
jae
mov
test
jae
fisubrs
mov
pop
rolb
add
dec
je
cmpsb
test
fistl
or
shlb
pop
dec
jmp
outsb
mov
test
fsts
and
rolb
mov
xchg
cmovb
into
dec
out
and
xchg
push
xor
adc
jmp
xor
aad
scas
mov
add
fadd
aad
sarb
pushf
adc
aam
mov
xchg
mov
mov
cmpsl
addr16
push
pop
dec
inc
and
sbb
adc
dec
dec
rol
push
pop
sub
push
jo
xchg
in
adc
dec
loop
in
sub
scas
imul
imul
adcb
xchg
sub
and
or
mov
sub
insb
stos
mov
xchg
push
outsb
roll
mov
jge
shlb
cmc
into
or
jnp
dec
push
or
jg
dec
and
sub
fidivs
jmp
cli
jl
enter
mov
mov
es
in
xor
popa
divb
dec
cmpsl
loopne
cli
jne
jae
ljmp
pusha
mov
dec
mov
push
stos
mov
inc
inc
or
push
test
cmc
repnz
cs
lret
push
xchg
add
loopne
loop
cmp
test
mov
rclb
pop
and
xchg
ret
xchg
lods
mov
mov
mov
mov
sub
mov
mov
test
mov
cltd
mov
sahf
test
pop
aad
dec
inc
mov
loop
mov
push
dec
movaps
in
cmpsb
inc
jns
sub
jns
je
xor
jne
or
mov
ljmp
jns
cmp
add
xchg
aad
popa
bound
cmpsl
lahf
cmp
les
push
dec
loopne
lods
push
push
pop
xchg
mov
cmp
sbb
sarb
push
push
push
inc
in
inc
les
mov
cmpsl
mov
pop
jmp
les
les
in
and
adc
inc
incb
xor
mov
jl
xchg
stc
dec
stos
ds
rcrb
push
bound
mov
mov
test
inc
push
pushf
adc
sbb
pop
xchg
dec
dec
xor
cltd
sbb
adc
mov
mov
add
add
loopne
stos
aad
dec
xchg
das
andb
cli
or
iret
inc
pop
hlt
jge
data16
mov
sbb
stc
sarb
push
inc
mov
shlb
mov
pop
loope
cs
push
test
orl
and
out
pop
and
lock
aaa
xor
push
mov
push
and
or
loope
mov
push
jo
test
and
cwtl
divb
push
cmp
cld
leave
jecxz
sbb
insb
iret
dec
sub
mov
xchg
sub
lret
nop
mov
lds
jge
add
or
inc
lcall
jne
push
das
mov
mov
js
sti
dec
into
imul
loop
adc
fwait
sbb
mov
jns
cltd
jg
jge
dec
push
in
add
repz
pop
inc
and
cmpl
mov
stos
cmp
xchg
flds
pop
fwait
cld
insb
pop
and
movsl
lods
fldcw
daa
or
push
sub
xor
aaa
aam
repnz
add
scas
stos
shr
shl
jg
cwtl
incb
cmp
sahf
pop
dec
pop
mov
or
or
adc
inc
repnz
xchg
jno
jg
mov
push
add
pop
push
lret
cltd
push
mov
loope
call
jmp
cld
addr16
aad
scas
xlat
rcl
fsubl
mov
or
loop
lret
shl
sub
or
mov
out
cmp
rorl
lea
fs
pop
ljmp
bound
mov
rorl
pop
add
push
xchg
jg
jp
paddusb
mov
ret
or
cmp
popa
outsb
roll
jbe
cs
mov
and
shrl
push
ds
ret
ret
loopne
iret
sbb
mov
rcrl
mov
movsb
addl
sbb
sar
jmp
out
fidivl
popf
test
addr16
jl
add
out
stos
jo
loopne
fsub
fs
xorl
and
popf
leave
lret
lods
clc
loopne
add
sbb
imul
sbb
sbb
cmc
incl
ja
popa
dec
aad
jg
adc
and
popa
jb
or
xchg
in
and
sub
call
test
xor
mov
jns
adc
mov
pmaxub
mov
addr16
fwait
movsb
fnstcw
mov
fisubl
mov
push
das
pop
pusha
fidivl
mov
or
and
pusha
out
mov
std
adc
popa
push
jo
out
mov
mov
call
add
cmp
gs
sub
sub
out
ds
mov
int3
pop
adc
fwait
pop
add
bnd
mov
mov
lods
adcl
cmp
or
hlt
add
in
mov
dec
jae
cmp
push
pop
mov
rcrb
push
clc
jb
mov
mov
dec
popa
mov
mov
mov
add
mov
dec
imul
fs
test
push
add
cmp
je
push
lds
iret
subb
or
inc
pop
dec
mov
mov
pop
loopne
mov
xchg
push
mov
in
mov
mov
mov
fxch
inc
subb
mov
and
into
cld
repz
or
fbstp
mov
push
mov
jl
enter
add
and
xchg
xchg
pop
aaa
xchg
jnp
out
testb
or
iret
movsl
cmp
loop
jecxz
dec
scas
or
rolb
inc
clc
pusha
inc
loop,pn
push
clc
mov
je
stos
inc
inc
addr16
stc
pop
clc
cmp
mov
cmpsl
test
inc
jmp
jo
inc
lret
jno
mov
ret
addr16
gs
gs
rclb
les
int3
or
out
sub
scas
int3
cmpsb
jge
fildl
pop
jl
sub
test
call
aaa
dec
data16
mov
cmpsl
cmp
insl
sub
and
andl
cmpsb
jne
stc
mov
ret
xchg
in
dec
into
sbb
dec
push
fmul
in
cmp
mov
test
jns
mov
pop
loope
outsb
adc
pop
into
pop
lea
mov
dec
lods
jnp
mov
mov
xor
stos
cmp
scas
add
dec
mov
subb
test
fildll
sub
push
inc
ja
jb
sbb
rol
mov
cmp
sbb
inc
daa
test
jle
adc
lea
sahf
sub
pop
and
adc
in
cvtpi2ps
cmpb
and
das
addb
inc
jle
test
xchg
push
dec
outsl
movsb
icebp
sub
mov
cmp
sbb
sbb
xchg
mov
cmp
fcompl
pushf
push
add
cs
popf
lret
pop
dec
mov
pop
add
scas
inc
aam
dec
push
lea
jns
sbb
push
cli
cmpl
subl
cmp
sbbb
out
pop
adc
xchg
pop
mov
mov
xchg
daa
mov
mov
push
push
cli
cmp
xor
movsb
jne
xchg
and
jne
mov
pop
add
and
xchg
sub
insb
adc
mov
adc
push
aam
orb
data16
push
and
mov
jl
dec
test
hlt
dec
int
bound
sub
dec
cmp
or
shl
imul
jo
lret
decl
out
cmp
mov
mov
and
push
adc
push
orl
shrb
neg
loop
push
test
scas
sub
pop
enter
out
cmp
data16
cli
popa
rcl
into
imul
push
aaa
sbb
bound
shrb
js
ret
cmp
arpl
jmp
add
xchg
popa
dec
cmpsl
pushf
cwtl
or
pop
pop
fsubrs
ret
aaa
push
push
push
add
stc
mov
inc
in
jns
in
jge
cmp
cmp
loopne
sti
adc
inc
stc
mov
jo
das
pop
leave
enter
pop
sbb
dec
cltd
cmp
test
cltd
mov
out
nop
cli
aas
ja
jae
and
pop
dec
inc
or
es
jns
mov
and
pop
and
fbld
mov
rcll
in
add
jbe
push
jae
repnz
sbb
shrl
js
mov
roll
int
adc
jg
jg
out
and
popf
shrl
jae
xchg
clc
jl
xchg
push
push
jp
mov
and
mov
mov
loop
repz
mov
ds
and
idivb
cmp
das
or
aas
cmp
je
in
inc
sbb
test
sub
sub
pop
aam
pop
ror
test
push
xchg
movsl
cmc
iret
xor
stos
fisttpl
xchg
push
stc
mov
inc
std
or
cs
rep
ss
fmuls
pop
jl
jb
push
imull
fisubrl
movsl
nop
sbb
lea
and
orb
jnp
xor
xor
jmp
push
cmp
cmp
rcrl
loopne
xor
stos
out
push
add
in
les
ss
lea
icebp
add
ljmp
mov
in
in
mov
pushf
ljmp
sarb
orl
js
enter
shrl
mov
ss
js
xchg
xor
sbb
jnp
cli
mov
into
pop
insb
xchg
test
dec
mov
jle
push
arpl
and
mov
test
mov
or
movsb
mov
or
and
stos
div
xchg
mov
push
sbb
dec
outsb
jmp
mov
xor
cs
adc
or
xor
adc
jmp
pop
and
sub
popf
xchg
dec
mov
es
outsb
pop
int3
rcll
pop
mov
xlat
cmpl
cli
imul
pop
jl
mov
cmp
inc
cmp
jecxz
outsl
push
jecxz
jns
adc
pop
dec
sti
adc
lret
pop
test
das
pusha
leave
push
jno
sarl
lock
mov
mov
insb
xor
cwtl
or
mov
pop
push
pmaxub
je
clc
sbb
xlat
leave
das
cmpsb
ret
push
adc
jmp
aam
mov
adc
dec
out
data16
adc
test
dec
inc
orb
mov
scas
insl
mov
pop
cmp
pop
push
imull
dec
outsl
xchg
mov
pushf
das
je
jbe
roll
aad
in
daa
or
repnz
ja
or
imul
cmp
and
dec
addr16
aad
or
sbb
and
sub
lret
mov
add
xchg
adc
out
mov
imul
adc
jle
jp
les
fdivrl
pop
pop
in
data16
mov
cmpsl
cmpsb
jmp
fwait
pcmpeqw
test
fidivrl
sub
roll
daa
fwait
in
xor
stc
push
cs
in
dec
push
dec
or
std
lahf
inc
push
rorb
add
std
xlat
dec
jo
jecxz
xlat
int3
lock
cmpsl
out
pop
xchg
jae
push
sub
loop
xchg
stos
jbe
dec
call
xchg
lret
push
xchg
push
popf
xchg
fisubrs
out
fists
stos
jg
jnp
imul
push
or
mov
adc
mov
into
stos
and
mov
leave
mov
bound
jae
ja
push
xor
mov
mov
xchg
insl
mov
lret
xor
xchg
addr16
xor
mov
xor
nop
mov
mov
icebp
adc
add
aam
mov
cmp
test
movsb
jl
ret
push
fisttps
pop
in
adc
cmp
pop
fs
mov
incl
inc
fisubrl
mov
cmc
mov
add
inc
fwait
mov
scas
cmp
aaa
pop
adcb
mov
sub
out
data16
mov
rorb
cs
les
lock
inc
into
shrd
leave
pusha
add
sub
push
adc
aad
mov
pusha
or
sbb
ljmp
fldcw
enter
int3
xchg
imul
shl
aad
je
jle
shlb
inc
jo
pop
mov
jb
xor
sti
mov
rorb
ljmp
mov
lea
repnz
mov
ja
enter
mov
jp
rcrb
mov
shll
shrl
ja
loop
xlat
mov
inc
pop
sbb
xor
stos
outsl
pop
cmc
mov
xchg
sub
shlb
inc
cmp
lods
jns
push
sbb
outsl
lds
mov
cmpsb
jg
jnp
xor
pusha
popa
aaa
cmp
aad
push
xor
and
jl
mov
lcall
push
mov
pop
in
or
call
testb
dec
fdivrs
sub
cmc
repz
jns
push
sub
imul
sub
stos
push
pop
test
xor
outsl
mov
dec
fisttpll
adc
lods
cltd
fadds
mov
mov
pusha
es
lcall
rorl
fadd
lods
adc
xorb
test
and
mov
sub
dec
dec
mov
lcall
mov
ljmp
jae
pop
pop
or
jg
dec
mov
in
jge
xor
dec
cmp
xor
pop
and
xor
and
int
adc
shrb
hlt
pop
push
mov
dec
push
outsb
mov
insl
pop
dec
cs
out
push
cltd
addl
or
mov
push
aas
rcrb
ret
movsl
pop
or
mov
pop
xchg
std
inc
and
dec
mov
repnz
ja
jle
mov
leave
mov
mov
sub
adc
xchg
negb
sub
movsb
xor
insb
jmp
insl
jl
dec
leave
cmp
ljmp
and
push
jnp
inc
adc
push
mov
pop
or
add
pusha
loop
movsl
and
xor
mov
push
repz
in
outsb
call
rorl
fadds
cmpsl
lcall
jmp
cltd
dec
subb
add
mov
popa
inc
cmovb
jle
jne
mov
fistpl
pusha
cwtl
inc
fimuls
pop
pop
call
loop
mov
adc
fucomip
cmpb
mov
adc
sbb
mov
sbbb
es
jbe
cmp
sub
movsl
pop
stos
andl
scas
shr
pop
mov
fadd
sbb
loopne
int
icebp
mov
and
pop
or
mov
es
in
push
aad
out
and
jle
bound
cmp
add
mov
stos
cld
shll
adc
inc
je
mov
jmp
and
mov
dec
cmpsl
cmpsl
addr16
push
cld
sub
cs
cmp
inc
bndldx
xchg
adc
out
or
pop
push
cmc
inc
push
jge
mov
jbe
bound
push
xchg
ds
mov
adc
sub
aam
push
jb
stos
cli
out
mov
out
sbb
stos
inc
add
mov
mov
pop
mov
pop
inc
test
popa
lret
add
adc
rcll
stc
push
jmp
aas
filds
inc
fmulp
sub
push
movsl
into
sub
fadd
gs
jns
sbb
push
movsb
xor
rcrb
scas
xchg
fs
xchg
popa
push
inc
jg
mov
fsts
inc
mov
adc
les
xchg
pop
stos
std
lcall
icebp
dec
inc
mov
icebp
push
int3
jg
push
jge
add
outsl
pop
xchg
jge
imul
rorb
dec
pop
sub
jl
dec
cmpsb
sub
or
scas
push
and
shl
adc
push
or
sub
int
mov
insl
mov
cmp
push
pop
pop
mov
decb
cmc
add
inc
popa
test
push
add
xchg
add
mov
enter
pop
push
arpl
clc
xorl
movsb
and
pusha
dec
xchg
in
enter
repnz
mov
movsl
push
mov
pop
jo
jno
cltd
sbb
sub
and
out
inc
add
inc
add
int3
fadd
xor
push
fadds
js
mov
int3
sti
les
das
rolb
xorb
lods
pop
cmp
mov
aam
insb
adcl
mov
in
fstl
mov
mov
arpl
cs
xor
popa
repnz
popa
jge
sarl
fmuls
and
loopne
xchg
ss
in
aaa
jne
xchg
sbb
jl
loopne
jmp
xchg
test
lahf
pop
cmp
loopne
lock
add
lret
dec
jmp
pop
daa
cwtl
repnz
pushl
mov
test
out
sbb
popf
ds
add
daa
mov
pop
rcll
sub
decb
clc
push
jne
lods
mov
dec
sbb
ljmp
fs
xor
repnz
rorl
int3
and
das
pusha
mov
call
mov
or
lahf
movsb
pop
pushf
dec
jnp
mov
iret
sbb
jle
inc
fucom
mov
and
in
mov
inc
xchg
cli
imul
dec
cmc
lret
dec
arpl
add
sti
xor
jg
aad
and
ja
push
icebp
mov
into
cmp
movsb
mov
mov
std
sub
pop
and
pop
test
imul
mov
dec
mov
or
xchg
xchg
mov
jle
sti
mov
inc
int3
and
loopne
pop
pop
ret
repnz
nop
push
leave
xor
mov
daa
mov
sub
das
into
icebp
xchg
mov
xorb
add
jae
jb
lahf
ja
xchg
std
es
sub
push
mov
lret
pop
pop
xor
xchg
lds
jne
loop
mov
lcall
sbb
aaa
es
mov
cmp
fisttpl
jg
and
xchg
adc
cltd
push
es
push
fildl
or
cld
stos
enter
aas
xchg
adc
mov
jo
cmp
cmc
arpl
sbb
inc
mov
mov
mov
pushf
push
add
fcmovne
sub
rorb
call
icebp
mov
or
arpl
mov
lcall
pop
test
sbb
xor
mov
xor
ss
mov
fbld
pop
ret
mov
mov
xor
sub
stc
sbb
cmp
int3
sbb
push
push
shrb
jo
sbb
push
inc
fsts
lea
adc
adc
lret
sbb
loope
mov
ret
sbb
movsb
push
ss
rorl
lods
lods
loopne
mov
and
add
sub
jnp
jge
insb
pop
add
repz
data16
mov
mov
push
jbe
jle
inc
xchg
mov
mov
insl
jg
imul
mov
mov
sub
or
into
inc
xchg
mov
lahf
aaa
mov
insl
jmp
sub
add
mov
arpl
in
data16
pop
lret
ss
cmp
sbb
mov
mov
sub
inc
push
clc
aad
loope
xchg
fstpl
fbstp
mov
dec
jl
jg
add
mov
bnd
enter
sub
es
movsb
push
inc
leave
push
jcxz
inc
stc
into
inc
imulb
hlt
push
lods
in
mov
clc
test
inc
popa
inc
sbb
lahf
push
jmp
aaa
xchg
arpl
rorb
xchg
mov
orb
push
rcl
enter
orl
pop
push
ja
xchg
lds
pusha
stos
lcall
ja
inc
inc
loopne
mov
loopne
inc
inc
sub
insb
dec
sahf
ja
pop
shrb
outsl
or
fisubrs
pop
sbb
ljmp
imul
xchg
aas
leave
cld
xchg
and
add
xor
scas
xchg
push
sti
fstpt
pop
leave
subl
sub
add
cli
xorl
cltd
jecxz
aad
cs
mov
inc
adc
push
push
loopne
test
out
jmp
stos
icebp
fnstsw
or
mov
add
call
inc
xchg
or
push
and
mov
adc
fucomip
push
xor
xor
or
cmpsl
and
insl
movb
jne
cmpb
clc
xchg
jne
ret
jmp
inc
test
xchg
inc
insl
xchg
movsb
xor
jp
sbb
xchg
pusha
and
dec
cmc
inc
jmp
rcr
ljmp
imul
stos
mov
fisubl
and
fisttpl
roll
cli
ret
lea
clc
or
stos
popa
mov
lods
lods
xchg
cmp
sbb
and
aaa
movsl
dec
mov
cwtl
outsl
jnp
inc
sub
mov
dec
xchg
pushf
mulb
or
jmp
rcrb
insb
pop
hlt
dec
rcrl
dec
ret
repnz
jl
mov
test
lds
push
push
mov
sub
pop
adc
dec
mov
adc
out
pop
pop
insb
das
das
adc
mov
mov
dec
in
mov
sub
push
pop
sub
fstl
popw
mov
out
and
sbb
mov
rolb
dec
xor
cld
mov
fiadds
sti
mov
scas
inc
xchg
leave
fistpl
sbb
sbb
xchg
int3
xchg
stos
and
mov
pop
stos
and
das
sarb
inc
inc
pop
pmaddwd
ljmp
popf
lods
mov
hlt
dec
dec
repnz
in
xor
sbb
daa
lods
sahf
lds
xlat
std
ror
inc
fs
sbb
mov
xchg
xor
sbb
out
push
pop
jmp
or
and
xor
out
stos
cld
dec
mov
ficoml
or
inc
es
es
imul
xchg
jo
sbb
cli
inc
jp
shr
lret
out
test
or
mov
sub
push
jecxz
sbb
int3
lsl
dec
repz
push
or
subb
xlat
or
pop
and
loop
dec
mov
mov
scas
inc
in
xchg
outsl
dec
cwtl
mov
push
arpl
xchg
std
and
testb
out
and
movsb
je
mov
cmpsl
ret
shr
mov
mov
cmp
in
lods
test
in
std
lahf
pusha
test
ljmp
ror
inc
out
push
dec
xchg
sub
lods
inc
int
xor
xorl
jge
aam
add
push
sub
test
inc
aam
or
xchg
jns
wrmsr
mov
andb
jge
sbb
out
xor
and
push
add
leave
pop
lods
out
push
fs
sbb
dec
scas
xorb
pop
ficoml
into
mov
les
jo
addl
xchg
dec
dec
dec
nop
mov
cltd
int
adc
scas
xchg
jb
ja
daa
js
daa
ds
pop
sahf
add
stc
pop
jp
inc
ljmp
stc
cs
data16
add
add
pop
mov
jne
dec
iret
mov
add
ss
dec
mov
add
clc
xor
jecxz
fildl
std
dec
dec
add
push
std
adc
popf
shll
repnz
in
mov
sahf
repnz
lcall
pop
xchg
cmp
sub
in
cmpsb
scas
inc
arpl
aas
pop
adc
push
mov
dec
or
and
cmc
sub
scas
jecxz
dec
push
dec
mov
jmp
add
loop
jg
test
mov
xchg
cmp
push
sub
bound
leave
and
cli
mov
sbb
adc
or
mov
mov
or
lock
xchg
push
fcoml
test
lea
shlb
inc
shll
mov
push
jae
jns
lahf
dec
outsl
fldl
jmp
pop
xchg
pop
adc
add
xchg
sub
jle
fidivs
sarb
scas
lods
xchg
cmpsb
lcall
pop
inc
sub
jb
shrl
push
jns
or
mov
or
sub
xlat
sub
push
hlt
sarb
push
mov
and
dec
in
xor
lret
xchg
pop
and
outsl
nop
xchg
jbe
jecxz
sbb
dec
or
jo
jp
lahf
push
mov
std
nop
jbe
xor
cltd
sahf
mov
stc
loop
mov
fnclex
mov
lods
jns
cwtl
xchg
shll
clc
test
mov
pushf
in
adcl
xchg
in
int
mov
pop
call
push
xchg
outsl
adcl
nop
and
dec
sub
pop
add
testb
pop
mov
sub
mov
lds
jnp
cmp
and
cmp
std
lock
push
adc
pop
je
or
je
jnp
push
lods
mov
mov
dec
and
xor
xor
rorb
xor
shr
cmc
movsb
pop
rcrb
jnp
inc
pop
jno
pop
sahf
xchg
loopne
into
jecxz
jb
aas
rcl
enter
mov
int
jno
pop
jl
sar
fwait
add
lea
mov
push
mov
sbb
popw
lds
xchg
test
movsl
sbb
outsb
mov
mov
fcmovnbe
xlat
hlt
and
aaa
addb
call
fmuls
mov
push
xchg
and
jnp
sti
add
mov
cmp
test
stos
int3
xchg
lea
sub
sbb
push
xchg
in
shl
xchg
or
fistps
es
jns
sub
pop
std
inc
pause
push
shl
sub
push
jmp
lahf
or
add
cmp
xchg
cmp
fists
mov
push
inc
push
xlat
aas
add
or
mov
adc
into
outsb
test
cld
scas
test
out
inc
cmp
shll
jmp
sub
inc
pop
push
cltd
scas
add
sbb
jmp
xchg
push
adc
ds
jge
mov
pop
xor
or
es
daa
aad
xchg
dec
mov
rcrb
push
pushl
mov
movsl
bound
popa
lea
insb
pusha
push
xchg
xor
ljmp
jmp
lret
bound
shll
std
dec
ret
jne
clc
jle
loopne
mov
sub
andl
popf
rclb
pop
sti
push
sub
mov
push
into
mov
cmpsl
fistpl
push
jle
xchg
mov
mov
loope
xchg
or
jo
add
pop
sub
sbb
in
jno
mov
insl
sbb
out
dec
add
pcmpeqb
pop
xor
add
mov
pop
jns
sbb
rcrl
mov
xlat
mov
or
sbb
fnstenv
aad
cltd
or
loopne
sti
aam
inc
ficoml
repnz
adc
cs
cld
jno
push
repnz
jg
sub
nop
xchg
add
inc
jns
add
and
and
int
xchg
jmp
push
xchg
pop
cmp
aas
push
jae
int
cld
js,pn
push
jb
test
shll
push
xchg
ja
fsubl
scas
addr16
jo
pusha
add
mov
test
mov
cld
inc
push
clc
jle
jo
adc
ja
lds
rclb
sbb
pop
xchg
lea
enter
xchg
aam
xchg
outsb
ja
std
or
data16
pop
inc
jecxz
jg
repz
cld
sub
inc
push
xchg
hlt
loopne
filds
imul
xchg
fs
insb
push
stc
icebp
push
xchg
scas
dec
add
les
scas
cmp
inc
test
pop
mov
pop
inc
push
jnp
orl
push
pop
or
dec
pop
mov
fsubrs
push
dec
roll
rcrb
mov
mov
mov
adc
cmp
movsl
mov
sbb
popf
pop
gs
jle
pop
testb
jae
jge
in
adc
fldenv
sbb
je
push
add
cmp
inc
roll
data16
das
adc
adc
movsl
xchg
movsb
xor
shlb
jg
adc
push
xor
ljmp
into
sbb
outsb
mov
adc
fadds
out
mov
cmc
jb
sub
or
in
mov
jo
imul
test
lret
mov
mov
leave
adcb
in
and
cmp
out
add
mov
and
das
cld
jp
fwait
mov
mov
int3
push
std
bound
leave
or
adc
bound
out
pop
sub
inc
dec
mov
inc
fsubrl
in
and
pop
je
push
dec
xchg
movsb
pop
cmc
mov
mov
bound
and
pop
shll
js
loop
sub
inc
cmp
sbb
dec
repnz
mov
insb
inc
stos
movsb
mov
loopne
inc
ret
cmpsl
leave
pop
sub
test
pop
xchg
xchg
sbb
push
sub
jb
cs
test
add
inc
sbb
mov
mov
into
out
loope
adc
cmpb
vminsd
pop
or
mov
cmp
std
mov
jbe
andb
xor
mov
mov
xor
iret
popa
popf
cmp
and
in
xchg
add
inc
push
or
cli
idivl
daa
das
mov
les
enter
and
lret
jne
push
cmp
pop
enter
jne
aaa
iret
inc
push
or
xor
test
dec
lahf
sub
pushf
mov
adcb
mov
scas
int
cmp
push
lret
sbb
loope
or
cmp
and
jo
popa
xor
sti
push
data16
add
sbb
into
lea
fldcw
and
fsubr
sbb
ljmp
outsb
push
lahf
xchg
loope
dec
sti
xor
ret
pop
dec
sbb
imul
add
xchg
push
sarb
sbb
mov
call
push
shll
inc
pop
cltd
fidivl
adc
in
push
mov
lret
xlat
mov
test
daa
pusha
lock
shll
mov
jmp
pop
mov
test
or
enter
aam
test
vmovdqu
xor
pusha
scas
jge
mov
fildl
cmp
mov
and
cmp
or
stos
cmp
imul
gs
ss
pop
add
mov
fadds
add
js
xchg
or
mov
cwtl
fwait
bnd
pop
push
pusha
pop
add
movsb
jo
push
ja
insb
loopne
fadds
negb
fwait
in
add
je
and
adc
iret
shrl
mov
inc
mov
loopne
fnstsw
fsubr
cmp
test
fpatan
jb
or
fildl
pusha
aaa
outsl
add
dec
sub
dec
insl
inc
pop
cmp
push
adc
bound
mov
push
shrb
xlat
and
or
sbb
shr
les
cmpsb
adc
jmp
dec
popf
mov
popa
or
ljmp
dec
cmp
mov
add
push
je
decb
jle
jg
or
je
bound
iret
stc
pop
lahf
pop
fimull
inc
mov
addr16
push
aaa
inc
les
jne
sbb
or
cmpsl
lock
lcall
xor
out
sub
aam
xlat
mov
test
movsb
testb
mov
xor
repnz
adc
out
cltd
or
adc
out
jmp
push
add
mov
aaa
lock
js
movsl
hlt
jl
ss
dec
aad
cmp
les
xlat
incb
adcl
add
sub
inc
mov
lods
push
out
dec
mov
inc
test
adc
lret
pusha
fimuls
xor
loopne
cmc
cmp
xor
testb
adc
mov
daa
cmp
js
pop
shll
pop
jbe
test
pavgw
cmp
cltd
iret
incb
or
cli
xchg
xor
inc
or
inc
push
orl
int
mov
in
insb
inc
xchg
add
cmp
daa
sub
and
rorl
xchg
insl
sbb
inc
daa
inc
ficomps
jge
sub
lcall
test
inc
inc
outsl
sub
mov
xchg
sub
push
shr
cmp
ljmp
jmp
cmp
push
testl
jp
push
mov
push
sub
enter
mov
fstpl
mov
xor
adc
push
insl
outsl
xchg
dec
xchg
cmp
lret
roll
rcr
adc
or
in
push
jne
mov
xor
daa
or
add
jnp
add
aad
sub
jns
rep
das
pop
test
dec
or
inc
test
jmp
jmp
mov
push
inc
adc
sbb
pusha
das
rcl
jp
xor
inc
cwtl
js
lock
push
cmc
xchg
sub
push
mov
movb
and
repnz
lds
je
out
and
pusha
cmp
sbb
mov
fsubrl
lret
add
cmc
jnp
inc
test
pop
lea
mov
xchg
shlb
mov
push
test
xchg
fbstp
xchg
and
jp
sub
cmp
out
stos
stos
stc
inc
in
push
sti
sub
mov
mov
push
mov
and
ljmp
adc
cwtl
lret
sbb
test
push
xor
repz
adc
xchg
sahf
mov
pop
ficompl
in
cmpsl
test
lock
icebp
test
lea
push
cmpsl
fs
mov
sbb
push
lds
jbe
sti
lret
jle
mov
sbb
das
addr16
push
insb
addb
xchg
lret
andb
rcl
out
punpckldq
repz
out
aas
popf
xor
mov
js
cmc
scas
ret
addr16
xchg
dec
dec
out
add
in
out
movsb
popf
and
xchg
sbb
mov
dec
mov
int3
add
nop
pop
testl
sub
test
sub
scas
ja
jmp
or
or
jle
jo
std
or
pop
insl
rolb
nop
test
sub
jnp
in
xlat
sbb
stos
dec
pop
les
and
inc
xchg
mov
xlat
stos
dec
incl
stos
pop
repnz
sbb
addr16
in
and
ret
in
pop
hlt
push
pop
xor
dec
cmp
inc
pop
mov
loopne
imul
test
mov
sbb
and
js
in
ss
push
mov
cmp
push
cmp
or
and
sti
jae
es
push
cs
pop
or
leave
pusha
mov
call
jb
mov
pop
cmp
add
adc
jb
call
je
jnp
or
push
mov
mov
in
cld
sar
insb
subl
or
push
aaa
hlt
dec
jnp
mov
daa
rcrl
aaa
mov
jno
leave
lods
and
pop
sub
test
jo
fldl
jge
and
in
fadds
cltd
sahf
icebp
subl
dec
sub
shll
inc
clc
mov
xchg
or
cli
std
and
outsb
push
dec
mov
inc
mov
in
orb
aad
popa
jns
imul
sub
mov
mov
xchg
loop
jae
das
movsb
or
mov
push
mov
jb
aas
int
loop
dec
and
push
adc
cmp
inc
dec
mov
clc
jb
ret
and
mov
jecxz
movsb
sarb
pop
adc
sbb
test
dec
aaa
cs
test
inc
inc
jae
ja
out
or
jmp
inc
ljmp
and
dec
das
insb
mov
lods
pop
add
ret
jns
enter
mov
out
adc
push
idivb
sbb
xchg
int
enter
ljmp
jle
addr16
mov
jbe
mov
mov
sub
call
add
or
and
adc
or
mov
inc
add
scas
or
cmp
and
xchg
push
sub
and
mov
fimull
cmpb
stos
mov
pop
outsl
mov
rep
rolb
repnz
cmpsb
nop
mov
cs
lods
pop
mov
dec
dec
enter
dec
jns
xchg
dec
xchg
and
lock
sub
jmp
mov
mov
mov
shrb
adc
and
in
test
ret
or
xor
mov
push
lods
xor
mov
notl
jbe
sub
ss
int3
out
jb
sti
popf
cltd
sbb
lahf
dec
inc
cmpsb
stos
xchg
jmp
sarl
adc
xchg
inc
scas
add
cmc
mov
pop
iret
push
clc
shr
mov
mov
ret
movsl
inc
stos
ss
adc
iret
push
das
cs
mov
std
in
dec
mov
and
push
jno
daa
icebp
addl
dec
jg
mov
shll
add
repnz
sahf
dec
icebp
push
jl
mov
das
jns
test
cwtl
lds
adcl
mov
mov
lea
negl
inc
jp
das
cmp
adc
dec
iret
sub
pop
sbb
jle
rclb
loope
in
sub
xor
jmp
mov
mov
lcall
into
lock
jno
jp
inc
sub
mov
test
popl
sbb
into
mov
cltd
xor
scas
negl
lea
divl
xor
add
fidivrl
inc
adc
or
fdivs
push
adc
add
cwtl
inc
fwait
inc
jbe
and
and
xor
push
adc
movsl
cmp
mov
or
mov
adc
cmpsb
fsubr
cmp
pushf
repz
and
jle
fldenv
mov
xchg
inc
ss
xchg
cs
icebp
pop
mov
jge
dec
or
insb
dec
leave
iret
mov
jl
jp
add
test
and
pop
mov
mov
stc
enter
in
ja
stos
xchg
arpl
jmp
fisubs
jno
outsb
push
mov
ror
pop
sbb
sub
subb
add
rcrl
jmp
sbb
and
cmpl
and
sub
lods
jns
or
add
test
addb
cmp
mov
loop
dec
lret
js
jg
movsl
icebp
icebp
xchg
mov
sub
ds
mov
inc
sub
mov
xchg
add
in
push
mov
stc
fidivrs
mov
fdivrl
sub
rcrl
das
xchg
adc
roll
clc
or
jmp
xchg
ljmp
rorb
lock
adc
andl
out
mov
push
add
mov
insl
pop
test
jno
mov
push
std
push
push
adc
adc
cmp
and
bound
fnsave
xchg
leave
mov
lock
rorb
aaa
cmpsb
iret
push
dec
int3
movsl
jb
pop
nop
pop
stos
mov
or
dec
pop
and
jp
cltd
outsl
xor
lret
adc
jge
ljmp
sbb
aam
inc
fistpll
sub
jns
lret
cld
push
repz
push
jno
iret
fists
and
aas
stos
xchg
sbb
data16
inc
imul
add
bound
test
insb
outsb
stos
fs
cmpsl
mov
rcl
sub
xchg
mov
mov
jne
mov
in
aad
pop
aaa
notl
fsubrl
cmp
aad
repnz
xchg
nop
jecxz
inc
dec
sbb
mov
jg
inc
xorps
aad
lds
aas
aaa
mov
and
shrb
jbe
and
cmp
lods
mov
repz
test
enter
aas
cmp
pop
fstp
push
addr16
imul
ret
cmpsl
scas
xor
inc
sub
dec
adc
enter
dec
addb
dec
cmc
jl
mov
push
cmpl
in
pop
sbb
jmp
push
fcmovnu
icebp
push
inc
mov
add
and
adc
pop
adc
add
cmp
jmp
jge
sub
sub
mov
push
roll
adc
fld
mov
loop
lods
stc
aad
jb
js
push
mov
cmpsb
fs
inc
inc
mov
aaa
jb
inc
pop
cmpsb
loop
out
xor
mov
xchg
gs
movsb
outsb
or
cwtl
xchg
pop
scas
or
push
xor
jo
pop
sub
xchg
insb
popf
xchg
rorl
insl
cmp
jecxz
rcrb
data16
push
lcall
lret
ds
movsb
cmc
jp
push
ljmp
sbb
mov
mov
sub
pop
icebp
push
fs
orb
inc
push
jns
adcb
push
lods
sbb
mov
fwait
xor
std
ret
pusha
add
lahf
in
test
stos
pop
sub
sbb
add
repnz
push
daa
sarl
inc
sbb
sbb
mov
test
or
pop
xor
aaa
mov
sub
jns
dec
xorb
jno
in
pusha
das
ljmp
fidivl
inc
mov
popf
xchg
vandps
mov
cmp
push
and
xchg
xchg
xchg
jecxz
jno
cmp
jbe
lods
insl
sbb
or
mov
popf
mov
pop
sub
jp
int
jo
jecxz
mov
test
jne
or
push
sbb
mov
subb
cmp
jbe,pn
pop
xor
aas
popf
ficompl
pmulhuw
repz
sbb
jno
dec
sub
testl
and
sti
cmpl
les
lock
fistps
or
popa
mov
iret
lea
pusha
add
dec
cmpsl
sti
mov
mov
movl
pushf
fisubrs
xor
jmp
popf
bound
outsl
push
jl
out
mov
mov
inc
push
mov
stos
out
or
std
jo
lds
stos
into
and
mov
push
xor
repz
outsb
out
jns
xchg
fisubl
int3
mov
lods
maskmovq
cltd
jg
inc
jae
aaa
rorl
add
ficompl
sahf
mov
xchg
jb
enter
and
mov
leave
push
je
aas
jns
in
sub
pop
mov
repnz
xchg
add
cmpsb
mov
dec
rorb
imulb
mov
arpl
push
mov
lea
xchg
mov
jnp
inc
loop
fldl2e
push
xchg
nop
mov
int
pop
jo
loop
jmp
das
pop
mov
and
mov
ret
mov
mov
mov
push
xchg
shll
insl
dec
push
inc
pop
popa
mov
bound
xlat
jno
cmc
inc
popf
sub
mov
aaa
leave
in
inc
mov
lock
fnstenv
mov
sti
fstps
mov
cmc
sub
mov
pushf
lahf
data16
out
xchg
or
data16
adc
jbe
add
lods
fistpl
xchg
jns
daa
fs
mov
mov
sbb
and
inc
pop
pop
push
pushf
ss
sbb
lods
mov
sub
push
fldl
xchg
push
shrl
mov
pusha
mov
and
xchg
ret
pop
out
inc
jmp
mov
daa
sti
lea
sub
std
dec
xor
inc
push
insl
add
pusha
xor
mov
gs
movsb
cmp
jns
shlb
dec
in
inc
arpl
ret
jbe
mov
shr
nop
fisttps
ja
mov
push
sbb
fcoms
push
cmp
imul
andl
std
push
cltd
imul
clc
xor
jae
pop
cld
ficoms
les
lret
dec
mov
aas
arpl
lods
dec
mov
adc
enter
xor
inc
aad
sub
add
push
in
adcl
jmp
xorb
push
cld
or
mov
bound
and
add
mov
bound
or
andb
jo
inc
and
mov
jno
sbb
pop
jae
inc
sti
lret
push
inc
cmpsl
push
movl
mov
ljmp
xchg
jae
leave
push
jecxz
jo
jl
add
loop
mov
divl
shll
insl
inc
orb
fxch
repz
jns
imull
xor
out
test
mov
push
int3
mov
or
in
xor
cmc
jl
es
jne
xor
out
fwait
cmp
cmp
shll
popl
cmp
lcall
movsb
das
bound
and
fnstcw
add
adc
mov
bound
xor
and
mov
sub
loope
pop
cmpsl
push
xor
push
out
add
push
push
xchg
push
imul
fwait
into
pop
push
lcall
push
and
aam
sar
cmp
xchg
lods
fwait
pop
sub
pop
add
xor
out
insl
aam
pusha
mov
sti
add
jl
scas
and
aaa
stc
addb
inc
out
stc
out
popa
mov
fsubs
lock
lcall
insl
push
xchg
sbb
insl
add
ds
iret
hlt
and
sub
jl
cwtl
adc
aaa
pusha
sub
loop
inc
sbb
jo
and
and
fldt
fwait
int3
adc
vcvtps2pd
push
xchg
dec
pop
mov
pop
loopne
das
outsl
imul
iret
bound
insl
mov
adc
or
cltd
out
shrb
enter
arpl
test
push
test
sbb
sub
imul
adc
inc
mov
ret
in
leave
imul
rol
mov
push
adc
inc
lahf
out
and
lret
inc
or
add
xchg
std
lret
ss
shll
fs
xor
fwait
xor
cld
insl
xchg
in
mov
sar
lahf
cltd
and
mov
push
pop
xchg
sub
cld
movsb
mov
jne
mov
sub
imull
dec
lahf
pop
clc
and
and
sbb
aaa
adc
cmpsb
jns
sbb
pop
and
or
fisttpll
or
push
adc
or
pop
push
js
ljmp
divb
sbb
lods
and
scas
dec
xchg
loop
sbb
push
into
daa
add
mov
in
push
xor
jno
data16
and
inc
loopne
xor
push
in
mov
sub
lcall
jno
xchg
mov
pop
bound
movsl
sbb
mov
cli
cwtl
mov
cmp
cmp
jmp
stc
cs
cs
mov
sahf
mov
xor
jmp
sub
mov
rcll
lret
mov
ret
cmp
mov
sbb
or
mov
imul
jns
imull
jns
je
add
cmpb
cmpsl
lret
adc
adc
ja
sbb
mov
nop
push
hlt
stos
and
cmp
sbb
ljmp
cmc
pusha
lret
xchg
sbb
lret
add
cmp
lahf
mov
fiadds
shrb
dec
or
adc
lcall
or
push
pop
fnclex
inc
jbe
and
mov
or
bound
push
mov
mov
call
fwait
sahf
dec
cmp
mov
mov
ja
imul
dec
sbb
push
mov
in
sarb
mov
ljmp
push
loop
dec
sbb
xorl
mov
cltd
outsb
cltd
arpl
push
jl
mov
push
mov
mov
cli
leave
pop
aaa
in
lods
pushf
fisttps
clc
andb
jle
enter
cmp
and
pop
jle
stos
xor
lock
and
sub
adc
pop
mov
pop
inc
scas
ja
gs
sbb
clc
inc
icebp
ret
ss
mov
pop
add
push
mov
shr
aad
arpl
lahf
jmp
stos
push
xchg
gs
movsb
and
ret
mov
insl
sub
jno
mov
lock
mov
das
pusha
mov
sub
mov
mov
notl
mov
jno
pop
addr16
xlat
mov
jp
fisubl
mov
repnz
int
xor
lcall
and
push
pop
inc
flds
test
jl
scas
or
fisubl
mov
ljmp
arpl
adc
ret
repz
loope,pt
push
inc
loop
movsb
sbb
ss
inc
loopne
roll
fmuls
mov
dec
pop
ret
out
fcompl
mov
or
push
mov
pop
xor
lods
testb
lcall
rcl
imul
mov
push
cmp
fbld
ja
and
mov
mov
lods
push
shr
mov
jnp
push
icebp
mov
and
mov
ja
mov
mov
push
int
les
mov
in
jo
out
sbb
test
xlat
or
loope
xlat
pop
cmp
mull
pop
jno
lret
ljmp
push
cmp
scas
pop
jg
or
outsl
mov
inc
js
push
add
sub
add
mov
popa
dec
xchg
test
adc
cmp
xchg
pop
cmpsl
dec
add
lcall
push
out
icebp
enter
dec
xchg
sbb
mov
fsub
enter
inc
repnz
push
loopne
daa
adc
push
mov
mov
fimull
push
out
mov
or
fidivs
jge
andb
jb
xchg
lret
or
mov
adcb
test
xor
and
mov
inc
jb
or
sbb
dec
clc
cli
fdivrs
fbld
aas
mov
out
sbb
fisubs
stc
adc
repnz
cmc
push
ss
dec
ja
mov
xchg
aad
clc
xor
loope
push
dec
sbb
imul
pop
inc
cld
push
fistl
test
cmp
aas
sbb
inc
orb
daa
nop
pushf
pop
cmpl
push
push
dec
dec
lds
pop
push
mov
push
enter
push
or
pop
mov
aas
pusha
in
adc
arpl
call
test
jp
xchg
push
mov
mov
push
ljmp
push
mov
je
aas
xor
shrl
push
jns
aam
outsl
stc
mov
push
jmp
subl
adc
fnstsw
repz
test
mov
push
in
jle
ret
int
outsb
fcmovnbe
cwtl
pop
jecxz
repz
idivb
loopne
add
lods
add
pop
cltd
popf
sti
cmp
push
mov
scas
ds
rorb
outsb
jecxz
or
movsb
rcrb
imul
cmp
jl
jmp
jno
frstor
lds
loopne
std
xchg
out
sub
jb
test
imul
sbb
mov
icebp
dec
clc
repnz
sbbl
dec
std
fwait
adc
popf
in
sub
repz
popa
sbb
shll
shr
cmc
addr16
popa
mov
dec
sbb
aad
adc
shlb
sbb
aaa
and
or
mov
imul
test
fcmovbe
repz
pop
outsb
jg
int3
data16
jae
mov
add
cmpsb
xchg
and
or
cmp
jl
movl
xor
pusha
push
and
fmull
adc
xorl
rcrb
sub
xor
sub
dec
test
jns
and
sahf
push
popf
sub
dec
les
lret
call
pop
xlat
clc
ror
adc
lock
or
icebp
jae
add
sti
push
dec
push
jg
out
cmp
test
push
jne
mov
push
les
dec
lcall
repz
and
push
and
movsb
mov
jge
incl
fnsave
xchg
hlt
mov
int3
mov
adc
xchg
das
addr16
pop
jmp
aas
data16
cmpsb
loop
jge
adc
mov
fidivl
push
fadd
jnp
inc
push
dec
inc
xorps
cmc
push
mov
cmpsb
dec
fwait
cmpsb
out
or
int
jmp
adc
adc
jns
cmp
jnp
scas
jo
cld
xor
shl
scas
xchg
add
mov
mov
ja
push
cltd
adc
mov
insl
cwtl
push
rorb
enter
fsubl
cltd
fsubl
int
test
inc
push
sbb
cld
test
mov
movsb
push
dec
sbb
sub
clc
leave
jmp
lahf
jb
or
dec
inc
or
sarl
cld
bound
mov
push
xlat
dec
inc
sbb
and
xchg
and
aas
bound
xlat
pop
mov
int3
cmpsl
clc
add
sbbl
lahf
push
shll
sbbl
mov
rcl
lret
jp
daa
popf
push
jecxz
gs
sbb
adc
lret
dec
mov
inc
ficomps
push
cmp
int
testl
mov
or
dec
stc
push
mov
scas
out
jge
xchg
cld
or
into
mov
mov
testb
lods
shrb
mov
mov
fdivrs
pop
testb
dec
stos
dec
push
xor
jae
in
rolb
mov
jb
push
cmp
bnd
bound
scas
sbb
mov
adc
push
pop
iret
xchg
aam
mov
sub
xchg
inc
lcall
ss
push
push
rorl
xor
ror
loop
pop
movsl
mov
mov
cmp
sbb
pop
out
dec
push
addr16
shrl
mov
pop
dec
jl
and
iret
cmpb
push
push
push
mov
stos
xor
adc
push
mov
or
aas
das
xchg
xor
pop
dec
rol
sub
pop
ds
adc
mov
mov
aas
adc
fstps
clc
hlt
mov
dec
out
mov
and
sub
jmp
and
inc
mov
mov
xor
enter
and
or
fsts
stos
mov
push
xor
push
arpl
dec
jno
sub
in
fdivrl
adc
adc
rorl
or
test
ss
cmp
jmp
mov
testb
mov
jns
fsubr
jae
xor
xor
jb
rcr
insl
ds
cmp
daa
imul
fisttpll
inc
aas
dec
sbb
inc
out
inc
push
adc
shlb
ja
leave
or
mov
jbe
rcll
gs
add
sub
mov
mov
loope
pop
sub
fisttpll
push
scas
mov
jmp
jp
popf
add
cmp
in
in
sub
dec
cmp
push
loopne
test
test
mov
cmp
out
mov
pop
aas
jge
popa
test
jmp
mov
out
int3
mov
sarl
test
ss
or
pop
push
cltd
test
loopne
loope
push
mov
in
cmp
pusha
inc
mov
ret
test
aas
sti
data16
das
and
dec
mov
push
cmp
jge
iret
mov
fadds
stc
push
stc
divl
emms
cmp
hlt
mov
cltd
cmp
xor
sub
test
push
sahf
inc
mov
pop
mov
lods
dec
fadd
jp
fadd
xlat
mov
fcomip
lock
cmpsl
dec
mov
cmp
and
jns
cmpsb
pop
mov
enter
sub
loope
jae
popa
aaa
fwait
ss
cmpsb
mov
xor
imul
pop
add
add
push
arpl
loop
iret
std
dec
out
xchg
fwait
test
cld
jecxz
push
dec
iret
pop
inc
adc
xor
jbe
pop
in
je
lahf
jge
setbe
add
jl
add
in
cmp
or
int
lea
divb
or
in
icebp
imul
sub
mov
mov
jbe
jno
pop
pop
dec
aam
cmpl
pop
mov
stc
push
idivb
sbb
rorl
pusha
push
fcompl
lret
jns
icebp
mov
mov
pop
test
int3
inc
adc
aam
mov
dec
jno
mov
stc
lock
outsb
out
adc
pop
sub
loop
pop
pop
cmc
mov
sub
lods
cmp
xchg
icebp
clc
iret
sub
test
stos
push
push
and
inc
or
xchg
cld
out
push
pushf
sti
mov
aas
adc
xor
adc
test
in
test
add
scas
mov
xchg
pop
test
repz
mov
in
fs
int
cltd
and
inc
xchg
jle
ss
je
or
ljmp
jbe
shr
add
xchg
stos
adc
ss
xchg
pop
pop
bound
jae
hlt
fldl
mov
mov
jg
pop
push
pop
lahf
mov
dec
and
jae
inc
xchg
dec
out
or
repnz
push
xchg
mov
pop
cmp
cwtl
xor
mov
cli
ja
jne
subb
rorb
scas
jb
pushf
push
mull
nop
dec
lahf
cwtl
inc
ret
loope
fsts
shld
pop
add
adc
add
xor
daa
xchg
jnp
hlt
pop
add
in
adc
push
daa
adc
arpl
lds
insl
or
xor
addr16
inc
adc
add
mov
lds
je
in
xchg
mov
push
movsl
cmp
pushf
xor
mov
lods
jb
cmp
js
sbb
cli
cli
xchg
push
je
sti
sub
sub
mov
xchg
push
cs
dec
pop
aam
and
mov
and
ss
add
mov
xor
xchg
es
lret
mov
daa
adc
pop
fstpt
ss
or
sarb
mov
ljmp
mov
xchg
aad
inc
xor
jo
xchg
xorl
dec
xlat
push
xchg
gs
mov
adc
je
lahf
cli
mov
pop
movq
add
les
and
xor
les
mov
adc
pop
adc
adc
loopne
mov
das
pop
inc
stc
mov
pop
inc
adc
iret
dec
push
insl
lahf
add
test
movzwl
or
out
insl
fstpt
adc
dec
pusha
lahf
push
scas
mov
lods
fldt
xor
dec
mov
push
or
dec
jle
xchg
add
aad
js
push
loop
in
or
lods
push
mov
scas
adc
shrl
cmp
mov
mov
pop
mov
add
outsb
testl
in
sarl
insl
lea
jecxz
push
or
int
mov
in
repz
add
xor
ds
cmc
xchg
mov
fnstsw
sbb
dec
jp,pn
adc
fisubrs
and
jb
cli
jp
or
sbb
or
mov
rorl
out
daa
popa
ja
les
or
sbb
xchg
imul
addr16
insl
lret
jnp
iret
xchg
mov
pop
inc
pop
xchg
cmp
je
mov
xlat
cmp
loope
js
jle
insl
andl
std
inc
pop
outsl
dec
lcall
push
mov
mov
scas
repz
inc
insb
cli
adc
leave
cltd
mov
out
cli
sub
fildll
lods
in
and
call
outsb
inc
movl
insl
xor
loope
jno
mov
in
pop
cmp
dec
mov
inc
push
push
dec
in
xchg
inc
and
push
inc
dec
or
repz
sbb
in
push
sub
add
mov
out
cmpl
xorb
loope
jle
stos
aaa
add
mov
sarl
leave
pusha
in
mov
lret
jno
popf
test
inc
out
jmp
xorb
mov
adc
repnz
mov
divl
in
sti
jl
repz
mov
dec
ljmp
xchg
mov
or
push
mulb
pop
popf
xchg
mov
dec
jns
jb
adc
sub
push
cmpl
adc
jp
or
sub
and
aad
mov
bound
pusha
loop
bound
add
mov
les
fdivrl
int3
pushf
pop
jecxz
and
sbb
aas
sbb
test
insb
jp
lock
and
outsb
pop
and
fdivrs
test
dec
aam
inc
dec
stos
xor
mov
andb
jp
push
and
loopne
fs
or
scas
mov
pop
in
and
lods
les
push
pop
push
sub
gs
pushf
fwait
or
cmpsl
xor
in
sbb
fmuls
pop
clc
xor
pop
jnp
mov
das
in
sarl
int3
jmp
rol
push
lock
stos
push
into
xchg
scas
inc
push
xor
mov
or
scas
cmp
sub
mov
iret
sub
mov
or
xchg
aam
add
popf
popa
jae
stc
cld
stc
sbb
jo,pn
out
mov
cli
fisubrs
test
mov
and
pop
daa
popf
cwtl
push
inc
inc
sahf
cwtl
xchg
cmp
xor
sub
and
mov
test
jb
fisubrl
jge
mov
movsl
es
adc
sbb
rorb
aaa
fwait
mov
jae
or
and
inc
out
test
xchg
adc
push
stos
ds
mov
loopne
add
or
dec
or
shll
push
in
cmp
mov
xchg
jb
mov
sbb
mov
jmp
das
int
mov
call
sub
scas
ret
in
cmp
push
xchg
rcl
fisubl
popa
mov
mov
adc
xchg
jno
loopne
scas
or
fpatan
mov
loope
stos
xchg
xchg
insb
daa
or
sbb
lret
dec
shrl
lahf
jg
fldt
bound
es
xor
fcmovnbe
pushf
out
idivl
out
fisubs
dec
jne
std
test
jg
mov
mov
pop
scas
loopne
jle
or
loopne
pop
test
clc
and
icebp
cltd
lret
shl
dec
sub
dec
rorb
mov
mov
int3
mov
jbe
sub
mov
xchg
addl
mov
cmc
repz
insb
push
xchg
lahf
fs
les
mov
es
fmuls
test
lahf
bound
xchg
cmc
enter
into
insl
pop
ljmp
cs
scas
and
cmc
and
push
adc
shr
and
adc
pop
sub
xchg
stos
or
out
mov
inc
sahf
jnp
jb
addr16
sti
cmp
imul
or
ss
cmovle
sbb
ljmp
pop
pushf
mov
lret
cmp
mov
adc
test
shll
fdiv
jb
popf
cmpsl
lods
aas
fdivrs
sbb
mov
mov
xchg
mov
jecxz
mov
dec
mov
jo
mov
add
xor
repz
or
sub
and
test
les
jecxz
pop
push
xor
into
pop
jns
push
cmp
mov
int
in
fiadds
add
stos
jne
pop
jno
repz
mov
jmp
jnp
pop
aad
cs
inc
fimull
ss
cmp
enter
adc
scas
ja
push
lds
mov
psubsb
icebp
jae
mov
lods
adc
lret
pop
stc
mov
mov
test
add
cmpsl
nop
andb
cwtl
sbb
rclb
aam
subb
inc
push
jns
inc
mov
mov
pop
cmc
cmp
add
mov
jg
mov
icebp
js
ret
test
shll
xor
mov
inc
inc
mov
xor
aam
push
push
test
fcmovu
rorl
scas
stos
inc
outsb
push
flds
cmp
cmc
push
adcb
aaa
roll
outsb
sub
add
add
or
fisttpll
add
inc
lds
mov
dec
or
movsb
mov
inc
lret
xor
aam
stos
cld
lcall
xor
or
lret
sti
or
sub
dec
out
inc
mov
aaa
dec
mov
push
sti
shrl
lahf
test
loope
jl
stc
scas
xlat
xor
cmp
push
ret
jmp
add
inc
mov
movsb
push
and
ficompl
jno
jno
pop
jmp
mov
jns
fwait
xchg
inc
shll
mov
arpl
inc
cmp
pop
pop
je
push
int
jmp
inc
mov
ret
clc
push
sarb
repz
fimull
add
xchg
inc
cmpsb
cmp
xchg
pop
cmp
mov
outsb
sub
jge
inc
mov
into
imul
mov
in
push
cmpsb
xor
popf
shlb
jmp
hlt
pop
mov
jne
mov
mov
imul
lock
and
cmc
push
xorl
aaa
mov
leave
aad
enter
mov
repz
sbb
std
das
mov
in
rcrl
xor
test
aaa
pushf
mov
test
aad
xchg
mov
es
je
xchg
mov
idivl
pop
lods
cmc
repnz
cmp
add
mov
mov
fnstcw
push
mov
test
adc
dec
into
or
mov
xlat
pop
sbb
clc
xchg
das
repz
jbe
inc
aas
mov
xor
inc
cmpsb
loop
and
je
and
mov
cmp
ss
out
or
jno
aaa
imul
imul
jns
mov
mov
pop
jb
pop
mov
test
in
ret
push
sarb
cmp
dec
inc
rorl
cmp
repz
mov
cs
daa
add
cli
test
or
outsl
and
sti
xchg
cli
push
push
bound
pop
sbb
insb
rolb
mov
jecxz
mov
jmp
cli
ss
inc
addr16
clc
sub
mov
sub
jle
repnz
pop
test
daa
lea
add
jmp
jmp
orl
push
sub
or
xor
fadd
mov
fsubs
sub
fwait
movsl
movsl
pop
adc
arpl
push
mov
test
repz
pop
ret
pop
leave
int3
outsl
leave
rcll
outsl
fs
cmpsl
adc
idivl
divb
pop
mov
inc
test
int3
inc
out
add
sub
jnp
ffree
std
loope
pop
mov
rol
cmp
cmp
dec
cltd
push
out
jns
pop
mov
int
mov
pop
cltd
es
stc
fisubl
cmp
clc
sub
data16
xor
adc
jmp
inc
pop
push
cmp
iret
loopne
sbb
mov
xchg
jno
insb
jecxz
jle
add
pop
add
sub
sub
jmp
enter
nop
into
add
sbb
in
int
jns
iret
mov
movsb
lock
stos
sub
movsl
lock
dec
jecxz
imul
lds
xchg
mov
and
outsl
xchg
adc
and
mov
in
hlt
scas
rolb
push
out
pusha
and
in
enter
lods
pop
xchg
test
lea
into
add
xor
ja
and
ret
pop
mov
pop
jmp
test
jnp
dec
push
dec
or
xchg
inc
xchg
int3
std
xchg
outsb
xor
cs
cli
xor
imul
mov
cld
cmp
bound
in
iret
pop
jp
pop
mov
out
jmp
hlt
les
je
sub
inc
das
sub
xchg
cmp
in
fadds
jbe
lods
jns
or
inc
movsb
lock
int
and
push
mov
outsb
inc
cmp
jmp
jg
idiv
xor
daa
les
add
fcoms
fstps
stos
jnp
insl
xor
popl
ljmp
shrb
lods
pop
or
inc
push
xchg
mov
xor
fwait
push
ret
inc
cmp
sub
rcrb
sub
mov
jmp
sbb
sti
imul
dec
test
outsb
test
pop
aas
in
mov
out
gs
test
mov
mov
inc
xchg
mov
inc
jae
mov
call
jne
inc
js
mov
push
pop
fucomp
adc
push
jne
jns
push
stos
in
test
ljmp
out
xor
sti
mov
shr
mov
pushf
push
mov
mov
jl
popf
mov
push
xor
mov
cmpsb
enter
aaa
mov
jp
test
hlt
mov
and
sub
test
mov
sub
daa
fdivrs
and
roll
sbb
lea
roll
add
fstl
jg
lea
das
mov
xchg
fcmove
push
jle
nop
jo
out
mov
lea
mov
dec
ret
pop
ja
inc
push
ret
mov
inc
es
out
cmp
inc
mov
out
ljmp
jne
mov
imul
pop
mov
xchg
leave
mov
test
cmp
test
inc
jp
imulb
pop
pop
sub
loopne
inc
and
call
gs
xchg
jl
mov
gs
cmp
insl
sub
call
js
fldl
into
test
addl
aaa
push
sarb
lods
cmp
stc
bswap
div
xlat
pop
adc
cmp
push
push
repz
ret
call
lret
lods
les
cmp
xor
lods
subb
inc
addr16
lret
push
in
out
sub
dec
into
push
add
push
outsl
pop
adc
mov
fwait
jp
sbb
insl
jmp
frstor
movsb
cmpsb
cmpsb
mov
sbb
sbb
aaa
sbb
xor
mov
xchg
inc
or
daa
adc
sub
mov
addl
call
sahf
test
in
add
dec
pop
iret
mov
pop
clc
push
dec
out
fstps
lret
fucomi
lret
mov
lcall
push
shlb
inc
and
adcb
aaa
fsubl
sub
loope
pop
xchg
xchg
inc
mov
jecxz
int3
jae
shr
idivl
mov
mov
mov
fdivrl
imul
inc
cmp
add
aad
sarl
jmp
sbb
inc
in
add
fs
dec
cmpsb
mov
xor
fs
adcl
movsb
icebp
repnz
out
out
sub
mov
inc
mov
sbb
lahf
inc
jle
mov
xchg
push
lods
inc
in
sahf
addr16
scas
jno
aam
popa
jp
in
jbe
cmp
jle
daa
into
push
adc
fsin
gs
add
sbb
and
and
xor
out
adc
out
adc
loop
jns
add
sub
ja
sbb
outsb
nop
sub
xchg
cmp
xorb
jl
cmp
pushf
or
push
pop
or
out
orl
rol
lahf
je
in
int
orl
or
add
cld
mov
lock
sti
int
flds
jmp
movl
mov
cmpsl
pop
lds
and
test
jbe
adc
cs
dec
dec
jmp
sub
lcall
mov
ss
mov
outsb
repz
xlat
ss
icebp
lcall
or
aam
adcl
xor
movsl
repnz
cmp
push
inc
pop
cld
push
pop
pop
fdivl
cli
ss
cwtl
ret
mov
fiadds
push
pop
push
ja
and
dec
rcrl
jnp
ja
insb
mov
sub
cmc
jno
cwtl
xchg
push
xchg
mov
lock
pushf
fidivs
outsl
hlt
xchg
or
mov
jae
cmpsl
in
lret
rcl
pop
imul
mov
inc
mov
xlat
aas
ret
in
cmpsb
dec
leave
fcmovu
rorl
enter
aam
or
jp
in
sbb
nop
cld
xchg
and
adc
flds
fcomip
mov
mov
sti
test
xchg
xchg
loope
in
popa
ret
add
xchg
or
les
loope
popf
jne
pop
icebp
mov
sbb
add
in
and
push
add
xchg
mov
xor
mov
jle
push
mov
clc
sub
fs
sub
daa
cld
ficompl
push
out
mov
in
jg
bound
in
mov
sbb
loope
mov
add
jno
mov
push
fwait
sub
and
inc
cli
fmull
and
repz
fwait
push
pop
inc
loop
shll
sub
rcll
xchg
inc
stos
arpl
insl
mov
push
or
es
cmp
sbb
mov
xor
mov
add
mov
push
mov
fcmovb
negb
aad
insb
or
arpl
bound
fsubl
movsb
fadd
mov
rorb
pop
outsb
xchg
adc
pminub
stos
push
jle
inc
and
rcll
cli
mov
mov
inc
and
js
mov
scas
and
ds
mov
popf
sbb
aaa
inc
and
xchg
outsl
ljmp
inc
mov
enter
insl
test
frstor
push
sbbb
fildll
adc
lods
jle
enter
and
int3
and
loopne
jb
add
pop
cs
gs
out
xchg
mov
es
ljmp
loopne
lods
add
insb
cmpsb
adc
dec
push
lods
push
and
add
scas
imul
in
movsl
dec
jp
jmp
pop
push
pop
dec
test
jge
sahf
pop
adc
cmp
sub
aaa
push
clc
mov
mov
sub
mov
orb
mov
repz
jno
xor
iret
sbb
mov
push
rorb
lods
movsb
inc
sub
sbb
test
add
ljmp
ljmp
outsl
xor
inc
outsb
fistpl
mov
adc
jl
sub
fmuls
cmp
and
daa
outsl
and
pop
jns
adc
adc
cmpl
in
cltd
xchg
and
out
mov
aad
xchg
push
xor
and
mov
leave
sbb
cmp
xor
push
push
imull
push
mov
dec
pop
out
leave
jle
movsl
aam
sahf
push
mov
ja
scas
pop
add
lods
lcall
fisttpll
mov
lret
push
aas
dec
or
xor
cmp
and
sbb
jnp
dec
popa
loope
es
pop
jb
add
fwait
popa
iret
hlt
adc
cli
repz
pop
scas
std
mov
sbb
xor
mov
test
jp
push
inc
insl
in
jae
inc
xchg
or
shlb
out
popf
fisttpll
cmp
movsb
push
aas
cli
out
mov
not
fstps
into
movsl
loop
insl
fstpl
mov
mov
pop
cmp
rcll
test
test
enter
inc
sub
xchg
addb
imul
pop
xlat
call
mov
divl
add
cld
jbe
stc
js
shll
addl
incl
je
stos
es
add
or
mov
xchg
pop
scas
dec
insl
divb
shlb
daa
mov
shufps
lock
add
in
jmp
out
push
push
popa
movsb
scas
cmp
sbb
icebp
divb
lea
mov
mov
sub
add
es
push
cs
adc
test
ret
scas
cmpsb
dec
or
xlat
rcll
cmp
in
fld
mov
dec
scas
mov
leave
xchg
fmul
stos
push
pop
mov
adcl
mov
or
mov
ss
xchg
dec
push
xor
adc
add
cmp
flds
jle
loop
or
daa
adc
xchg
enter
cld
inc
fnstsw
and
xchg
xor
scas
push
enter
mov
push
mov
out
mov
add
shrl
pushf
cmp
push
inc
fwait
push
shl
call
fs
dec
leave
sbb
pop
sti
jne
push
ds
sbb
mov
insb
jo
xchg
test
mov
inc
stos
inc
sti
push
sbb
ds
add
out
dec
add
nop
lods
fmull
call
pop
rolb
jns
mov
nop
pushf
pop
or
fsub
mov
or
xor
adc
pop
out
std
sbb
pop
jecxz
outsl
cmpsl
xor
xchg
movsb
addr16
aam
mov
movb
loop
faddl
dec
lods
push
push
gs
dec
add
cmc
mov
cltd
xor
call
add
mov
xchg
xchg
push
jb
cmpsl
pushf
dec
and
inc
es
inc
lods
lret
sbb
adc
mov
in
mov
notb
dec
lret
add
or
aad
jbe
leave
in
mov
std
xchg
pushf
adc
test
popf
and
aaa
mov
fimuls
lods
fcoms
scas
inc
movsl
pop
sub
mov
adc
add
push
imul
rorb
jno
adc
mov
pop
lahf
loop
cmp
or
push
add
iret
push
add
movl
jb
xor
test
xchg
sbb
mov
mov
sub
dec
fcomp
rorb
mov
pushl
push
lods
stos
push
orl
add
test
cltd
mov
adc
or
fxch
mov
push
push
inc
and
xor
adc
mov
mov
outsb
xchg
xor
push
ljmp
jmp
das
xchg
clc
adc
std
sub
popa
pop
add
xchg
adc
dec
dec
xchg
add
push
out
hlt
cmp
addr16
push
aam
xor
mov
mov
xchg
js
push
adc
aaa
cmp
pop
popa
fstl
arpl
push
arpl
data16
lock
jp
adc
inc
adc
jne
xchg
jecxz
push
push
loope
ret
sbb
mov
je
lahf
push
mov
lds
jp
mov
in
fildll
imul
jae
mov
stos
sbb
inc
mov
adc
in
ja,pn
lods
dec
jge
lods
out
lock
xor
jo
orl
push
cs
adc
jge
sub
jecxz
mov
daa
adc
in
push
test
xchg
jb
xor
leave
sub
out
push
idiv
shrb
imul
iret
pushw
out
add
fistpll
pop
xorl
sbb
lahf
or
rcrl
sub
mov
jle
mov
popa
xchg
inc
mov
dec
or
xchg
imul
xchg
mov
inc
and
les
inc
popf
pop
mov
repnz
inc
adc
out
xchg
mov
aad
xor
icebp
lods
ljmp
aad
add
dec
sbb
aas
pop
mov
mov
dec
imulb
push
cli
negb
cmpsl
rol
lret
les
xchg
sub
ret
inc
mov
in
xor
pop
lcall
sub
dec
mov
iret
inc
pusha
aam
fwait
ds
push
jno
inc
ja
mov
xchg
fs
mov
jge
adc
insl
push
test
mov
adc
ja
sub
jmp
daa
loop
jle
xor
adc
sbb
cld
rcll
xchg
or
gs
jmp
orl
inc
push
inc
push
test
sbb
mov
outsb
push
adc
call
and
jl
sbb
data16
xor
insb
inc
scas
adc
cs
rorb
mov
xlat
lea
mov
pop
mov
sub
lea
aam
fistpl
frstor
inc
mov
lock
cmpb
inc
jnp
orb
sbb
sar
mov
sbb
lock
and
pop
dec
cmpsl
test
test
inc
xor
sbb
cmp
stc
push
and
sbb
xchg
insb
xor
mov
subb
mov
adc
dec
shrl
xchg
loopne
fistps
or
jae
xor
dec
xchg
adc
xchg
movsl
sbb
loop,pn
inc
fs
jb
fdivrs
mov
lds
imul
stos
mov
rcll
cmp
adc
repnz
jg
enter
and
or
inc
push
sub
pushf
pop
daa
loope
cltd
jns
stos
adc
clc
xor
mov
mov
xor
aad
sub
inc
test
jnp
out
in
divb
gs
out
lds
xor
nop
js
sbb
lahf
pop
shlb
mov
xor
inc
cmp
dec
daa
jae
dec
into
ds
jns
inc
aad
adc
xor
repnz
adc
push
shr
push
shr
cmp
gs
sub
mov
push
lea
mov
push
sub
lods
outsl
fldt
cld
mov
fadds
cltd
mov
fs
outsb
aad
fnsave
sub
mov
pop
aad
es
stc
outsl
sub
mov
mov
in
adc
fsubrs
pop
stc
mov
je
lcall
push
out
loop
mov
adc
testl
pop
sbb
xor
cmp
sub
inc
repz
or
and
sbb
dec
pop
popf
jo
sti
add
mov
mov
fs
xchg
mov
and
stos
mov
int
push
and
popa
aas
lea
dec
mov
in
inc
cmp
lcall
aas
xor
movl
cld
clc
nop
adc
pop
dec
fs
leave
push
loop
dec
mov
fsubl
xor
enter
xchg
mov
fidivrl
or
jae
sarl
pop
jae
arpl
jg
inc
daa
jnp
lret
pop
xor
stos
push
mov
jb
jg
jns
add
pop
mov
push
lcall
cmpsl
jns
in
cltd
lea
mov
int
mov
lods
pusha
daa
mov
sub
js
pop
pop
mov
imul
jae
xor
xchg
sti
add
shlb
cli
inc
scas
xor
ret
test
mov
mov
popa
inc
repnz
and
add
in
pop
repz
into
lods
ss
push
je
js
or
add
dec
pop
fs
cmpsb
mov
fldpi
jl
push
adcb
cltd
mov
or
ds
pop
sub
shll
imul
aam
or
and
push
pop
neg
mov
jb
inc
repz
iret
pop
push
imul
ds
aaa
sub
stos
add
cmc
insl
hlt
mov
and
jmp
loope
cmp
or
inc
ljmp
fucomi
jo
lds
jg
push
cmpsb
push
mov
or
dec
std
cmc
aam
mov
or
inc
ds
cltd
cmp
aam
nop
mov
cmpsb
xchg
test
fisubrs
add
scas
mov
mov
out
pop
jge
jg
push
not
jp
mov
xchg
xchg
mov
ja
sub
int3
test
hlt
stc
imul
xor
xchg
loopne
mov
pop
inc
or
push
push
xor
pop
lcall
xchg
jl
les
mov
jae
mov
jecxz
aaa
outsb
or
stos
jnp
fsub
pop
cmpsl
dec
xchg
nop
mov
and
push
cld
popa
imul
imul
insb
test
out
sbb
fstps
push
dec
mov
xor
iret
jl
popa
in
sahf
icebp
and
clc
test
xor
pop
mov
pop
push
lahf
sub
push
xchg
jle
or
inc
mov
push
out
or
cmpsb
insl
mov
xor
aam
mov
cmpsb
and
jp
jns
sub
nop
dec
ret
shlb
adc
pop
fwait
out
mov
xor
int3
pop
shll
xchg
mov
int
jo
pop
call
test
les
ljmp
arpl
mov
and
pusha
les
pop
das
loope
cld
rcll
mov
jns
fists
adc
in
icebp
insl
dec
pop
insb
je
jae
clc
repnz
or
mov
and
push
dec
xlat
aad
fwait
mov
adc
js
dec
dec
iret
push
push
stc
push
xchg
push
xchg
dec
adc
cmpb
pop
imul
push
sub
lret
fists
mov
sti
mov
push
outsl
jmp
or
jg
loop
inc
inc
xlat
xchg
test
aam
or
pop
pop
xor
scas
daa
xchg
aaa
les
daa
pop
ret
jno
xor
outsb
xchg
cmp
sub
gs
lods
pop
pop
cwtl
jecxz
mov
cmp
jns
mov
cmp
xchg
mov
mov
call
test
and
mov
sbb
mov
ja
cmp
out
loopne
ret
inc
call
xor
push
les
and
or
jne
cmc
sub
icebp
push
insb
or
mov
imul
mov
outsb
stos
sahf
xchg
and
loope
or
jp
mov
loopne
dec
aas
or
out
xchg
sub
inc
pop
and
push
cmpsb
pop
out
mov
mov
lea
sti
dec
xor
mov
mov
ljmp
repnz
mov
out
out
mov
fwait
mov
popf
stos
cmp
xor
inc
jp
out
push
test
and
ret
inc
or
pop
inc
pop
mov
sbb
out
xor
mov
mov
jp
or
adcl
and
jp
adc
xchg
dec
fmulp
jb
cmp
popf
popf
dec
or
jae
das
sub
adc
cmp
dec
cmp
push
xor
jg
sbb
xor
je
fwait
mov
fimuls
sbb
mov
negl
scas
pop
mov
pop
pop
xlat
cmp
sahf
in
mov
lock
mov
arpl
std
mov
fcompl
dec
mov
pop
cmc
lea
int3
popf
xorl
and
icebp
xor
leave
std
or
push
pushl
popf
pop
mov
stos
ljmp
or
add
les
fwait
sbb
and
jg
fistps
push
cmp
pusha
fildll
inc
mov
imulb
mov
mov
mov
cli
xchg
mov
ret
mov
sbb
imul
out
inc
add
push
popa
xchg
cmp
fstl
add
jb
test
mov
add
mulb
mov
es
cmc
ficomps
dec
imul
push
iret
add
cmp
fmull
test
push
sbb
stc
gs
push
sarl
pop
push
mov
cld
mov
cmp
xchg
xchg
sbb
fistpll
lcall
decl
lea
icebp
pop
dec
mov
ret
inc
imul
xchg
jecxz
jle
loop,pt
mov
aad
pop
test
jp
je
pop
pop
mov
scas
sbb
xor
sub
adcl
lahf
mov
sub
loopne
xchg
cmp
popf
aam
xchg
out
sub
popl
push
jmp
fidivl
arpl
pop
inc
push
test
cmpl
shrb
and
sub
fimuls
add
shll
decl
cli
adc
jne
cmp
inc
add
mov
ficoms
jg
push
test
xlat
lcall
add
adc
sub
test
lahf
in
dec
dec
sub
mov
iret
loope
mov
pop
jl
and
pslld
mov
das
dec
dec
mov
mov
repnz
adc
nop
mov
cmp
cmp
mov
jae
sub
fnstsw
lea
inc
gs
pop
mov
and
pop
dec
cmp
and
xchg
adc
iret
dec
or
int
dec
mov
aam
fstpt
pop
out
xor
stos
add
aad
push
mov
shll
pop
in
loope
lret
ljmp
push
pop
fstpl
mov
mov
mov
jne
mov
mov
incb
adc
lods
dec
jnp
movsl
sub
out
mov
mov
dec
pop
mov
xchg
icebp
out
cmp
sbb
cli
xchg
nop
adcb
enter
sbb
dec
mov
aas
ret
and
cltd
ficoms
pop
stos
add
test
fldt
inc
pop
cmp
mov
cmp
pop
xor
jno
int
mov
mov
lock
mov
rcr
sbb
mov
addr16
icebp
dec
jmp
cmp
rorl
adc
aad
sbb
add
or
xchg
outsl
adc
lods
dec
mov
out
sbb
jp
arpl
lock
scas
xor
repz
dec
push
xchg
loopne
push
sbb
jbe
aas
mov
inc
sub
pushf
notl
inc
in
push
fcoml
idivb
out
es
notb
test
ljmp
int
ljmp
cltd
push
dec
stc
mov
push
and
push
jp
dec
cli
in
daa
inc
xor
cmpsb
sub
sbb
ja
mov
xchg
mov
shlb
xchg
movsl
jmp
addr16
inc
imul
add
add
cmpsl
icebp
mov
rcll
cmp
das
pop
sarl
dec
faddl
lret
call
xor
jmp
fimull
sbb
addb
lcall
outsb
icebp
jge
imul
aas
in
inc
adc
pop
push
lock
inc
ss
test
adc
cmpl
loop
ss
es
and
jns
and
je
mov
jp
mov
jnp
lds
cltd
imul
stos
sub
mov
or
jmp
add
or
push
xchg
mov
imul
iret
adc
je
imull
adc
push
pop
test
mov
cmp
lds
inc
cmc
mov
les
push
jbe
or
jae
add
stos
adc
mov
fadd
sub
into
or
std
jbe
cmpl
xchg
mov
pop
cld
sbb
int3
sbb
stc
push
in
divb
xchg
in
testb
lahf
mov
ja
sbb
push
and
andl
mov
inc
shrl
dec
outsb
lret
movaps
pop
jbe
pop
call
jns
dec
scas
rcrl
cmp
mov
outsb
nop
add
adc
push
mov
push
shrb
pop
add
push
xchg
and
mov
cmp
jmp
add
push
iret
sub
mov
lahf
jne
pop
push
test
shll
fcomip
pusha
cs
sub
test
in
jbe
jp
out
xor
push
jmp
insl
mov
push
push
jmp
pop
fisubrs
jno
popf
mov
imul
sbb
mov
icebp
cmpb
repz
adc
sbb
cmp
pop
mov
mov
hlt
lahf
inc
mov
and
or
add
aad
aaa
xor
sub
mov
sti
mov
adc
dec
gs
push
cmpsl
repnz
xchg
and
pop
fdivr
inc
xchg
mov
dec
mov
addr16
inc
lea
ljmp
leave
mov
leave
das
enter
push
pop
cmp
test
push
shll
aam
inc
or
movsb
and
xchg
cmpsb
punpckhdq
push
mov
sub
fbstp
sbbb
sub
mov
insb
mull
nop
xchg
and
xchg
cmp
sub
jnp
jge
cmp
mov
outsb
xor
lcall
sub
or
inc
jo
mov
sbb
push
das
xor
inc
test
push
loopne
stos
inc
repnz
jp
and
mov
lahf
popf
bnd
mov
inc
xorl
stos
rcrb
mov
jo
jnp
sarl
mov
test
es
jp
or
push
in
clc
jbe
jecxz
mov
ret
sahf
fisubrs
mov
pop
fs
push
xchg
pop
push
mov
mov
mov
cs
xchg
add
imul
subl
shlb
sub
xchg
popf
mov
jb
cli
or
inc
cmp
cmp
lcall
ret
add
movl
cmpsb
lock
popf
dec
xchg
stc
and
mov
jnp
in
ss
inc
sbb
fsub
and
cwtl
scas
shrl
pop
imul
dec
sub
xor
or
notl
pushf
cmp
mov
pop
jecxz
lret
xchg
popf
adc
adcb
ret
jl
jno
jp
mov
inc
cmp
sbb
clc
outsl
sbb
test
dec
ss
or
inc
cmp
mov
mov
and
mov
mov
pop
push
adc
xchg
insb
push
in
aad
cmp
adc
rorb
pop
adc
xchg
xor
push
dec
dec
insb
rorl
cmpsl
pop
divl
and
push
shlb
xchg
push
push
adc
popf
lock
out
sti
adc
aad
adc
jl
je
cmpsb
cmc
data16
aaa
add
or
test
leave
daa
or
lcall
repnz
iret
and
lds
stos
push
ljmp
js
mov
pop
mull
gs
xor
sbb
push
push
and
lods
xchg
imul
mov
cmpsb
push
mov
dec
mov
out
test
test
inc
mov
dec
lahf
push
sub
into
cmpsb
add
loopne
push
and
mov
add
mov
dec
mov
outsb
aad
cmp
xchg
sub
lock
daa
pusha
cmp
lar
mov
fmuls
inc
mov
leave
dec
push
pminub
movsb
sbb
dec
lods
xor
sbb
cmp
or
cmp
fstpt
cmp
fadds
and
mov
std
int3
xchg
dec
data16
xlat
icebp
mov
jno
call
ljmp
pop
addl
push
test
cwtl
outsb
push
out
push
sbb
xchg
sahf
inc
sub
jge
cld
or
lahf
lcall
sarl
lods
sbb
call
div
bound
imul
cwtl
mov
popa
in
add
popa
adc
sbb
lcall
fldl
mov
mov
add
lock
push
pop
and
jle
jno
push
sbb
scas
add
xchg
add
add
jg
adc
orl
and
test
add
test
repnz
pop
cmp
imul
xchg
fcomp
mov
cltd
cmp
aaa
shll
jl
rcrb
adc
inc
jo
in
in
mov
mov
imul
pop
std
pop
sub
ja
lahf
jg
lock
dec
shl
rcr
stc
mov
add
push
cmp
mov
jmp
lea
push
in
popf
jae
rcll
aam
mov
out
jmp
shrd
push
mov
popf
mov
lods
adc
mov
enter
pushf
out
dec
outsl
test
aad
ret
out
in
pop
mov
adc
ret
lret
cmp
ljmp
lret
mov
data16
mov
xchg
adcl
popa
loopne
mov
frstor
xor
cmp
clc
or
icebp
mov
sub
sbb
sbb
dec
nop
mov
mov
add
mov
jg
aas
in
mov
cwtl
push
fwait
xchg
xchg
gs
mov
xorl
inc
cmp
or
out
or
imul
jno
enter
pop
jo
xchg
sub
ret
adc
xchg
mov
dec
out
adc
xor
movsl
sub
sbb
fcomps
dec
xlat
faddp
js
shrb
sti
cmp
mov
cmpsl
sbb
xor
je
xchg
notl
lods
lcall
fadd
out
sti
jae
jecxz
jecxz
xor
xchg
push
mov
data16
pushf
in
repnz
push
popf
and
jno
pop
pop
ljmp
adc
or
add
add
mov
or
or
cmp
mov
xor
cmpb
or
sbb
xlat
adc
hlt
in
cmp
call
dec
jo
jecxz
add
mov
mov
imul
les
fisubl
xchg
mov
jno
xlat
mov
lcall
int3
aas
sti
mov
cli
jp
or
xor
ja
and
or
imul
vmwrite
fsub
push
fsubrp
lret
ljmp
jmp
mov
push
rcr
add
mov
iret
dec
daa
sbb
shlb
fcoml
ds
and
sub
xor
xchg
mov
test
or
enter
inc
push
shll
and
scas
inc
addl
cld
pop
inc
xor
stos
add
sbb
mov
out
sub
pop
aad
popa
hlt
dec
out
cmpsb
adc
icebp
cmp
inc
mov
lods
scas
xor
jb
into
sub
in
in
cmp
cmp
insb
cmp
xor
inc
and
jg
insb
cmp
or
iret
jp
nop
sub
jl
jne
xchg
push
ljmp
cmovle
or
mov
or
dec
dec
mov
daa
mov
and
adc
pop
in
hlt
mov
das
out
mov
repz
jbe
push
jecxz
icebp
insb
out
das
xchg
adc
mov
sbb
arpl
popa
stos
mov
add
jecxz,pt
fisubrl
mov
mov
aam
dec
xor
xor
leave
inc
cli
lods
call
sub
lea
xor
and
mov
pushf
mov
cmpsb
lea
test
mov
mov
imul
mov
cltd
ret
dec
mov
imul
cmpsb
fisttpll
jmp
sub
inc
mov
cmpsb
inc
sarb
ret
dec
pop
dec
and
and
loope
fcmovnb
jmp
mov
jmp
loopne
test
xrelease
call
insl
stos
sbb
lods
add
movsb
xchg
shl
mov
aam
adc
ja
repz
repz
in
inc
fsubrs
lcall
adcb
jns
xor
sub
arpl
dec
pusha
rolb
lahf
push
lcall
fsts
and
enter
cmp
insl
mov
dec
loope
jae
nop
mov
or
push
sbb
inc
lcall
pop
fcmovnb
lret
addr16
add
sbb
pop
inc
scas
sbb
clc
mov
sub
lods
xchg
push
int3
std
sarb
aaa
js
or
jmp
push
push
call
movsb
adc
xor
push
cmp
data16
jae
cmpb
xor
jge
test
pop
mov
in
push
test
jnp
sbb
mov
push
or
sarb
cmp
lahf
icebp
pop
dec
jg
xchg
decl
jo
xchg
hlt
aaa
jmp
push
stos
bound
jge
icebp
std
stc
mov
xor
fdiv
xor
push
inc
aaa
jge
mov
xchg
sti
adc
int3
sbb
push
js
ret
sub
in
mov
andl
jmp
adc
fcom
ffreep
mov
inc
sbbb
add
out
popf
enterw
out
ret
jno
loopne
xchg
pop
notb
incl
fistl
mov
fiadds
mov
adc
pop
push
fimull
in
cmpsb
push
xor
inc
mov
inc
nop
mov
jnp
cld
mull
int3
test
ret
int3
cmc
cmp
add
mov
sbb
movsb
das
pop
mov
cmp
scas
mov
and
repz
fiaddl
jle
push
dec
movsl
add
pop
in
jle
jge
iret
sarb
ss
xchg
hlt
arpl
decb
and
and
dec
mov
popf
sbb
sub
inc
in
mov
xor
outsl
je
sub
fwait
cmpsb
into
scas
adc
xor
xchg
pop
paddsb
cmp
add
jne
mov
push
incl
test
sarl
sbb
or
sbb
jmp
stc
push
sub
and
cmp
shrb
inc
in
mov
ret
jb
jmp
sbb
bnd
adc
xchg
xor
call
inc
cwtl
pop
cld
and
xor
andb
lahf
cmp
out
ss
mov
pop
in
sub
jl
dec
js
movsl
cmp
cld
dec
sub
les
adc
mov
lret
ds
pusha
out
inc
lods
jne
xchg
shl
fmull
cmc
andb
iret
mov
lock
fistpll
jbe
fsubl
loopne
cmp
inc
dec
cmp
icebp
push
push
mov
push
lock
pop
adc
dec
aaa
shlb
in
push
lea
mov
outsl
adc
sbb
fdivrp
push
inc
dec
dec
adcb
sbb
push
push
pop
mov
pop
push
push
fwait
or
dec
pop
out
xchg
lcall
into
or
or
cmpsb
clc
mov
sub
aas
hlt
cmp
dec
inc
out
in
mov
push
mov
out
nop
faddl
jns
and
dec
fisubrl
mov
xchg
xchg
xor
mov
mov
insl
add
pop
test
and
popl
imul
mul
pop
cmp
shll
stos
dec
shll
add
js
xchg
push
sub
test
hlt
test
iret
mov
inc
hlt
and
sub
sub
scas
adc
jb
sarl
push
loope
or
mov
pop
sub
and
enter
mov
pushf
mov
mov
sbb
sbb
stos
dec
mov
xchg
rorb
cmp
daa
cmpsb
mov
mov
in
insb
lret
sbb
pop
imul
or
cltd
sub
xlat
jae
cmp
mov
add
push
scas
add
das
adc
xor
into
and
ljmp
orl
and
ja
inc
nop
dec
ja
repnz
jg
repz
aaa
int
mov
inc
stc
xchg
jnp
sahf
dec
out
out
fnstcw
mov
inc
addr16
sar
pop
push
cmp
sub
dec
lret
cmp
inc
test
inc
pop
cwtl
mov
hlt
and
mov
lcall
fsub
dec
fldt
jmp
add
xor
out
jnp
lret
sti
jecxz
mov
cmp
sub
push
in
mov
pop
pop
fucomi
mull
cltd
in
push
fcmovne
mov
sub
ret
adc
push
inc
mov
popf
repnz
mov
in
aad
pop
int3
sbb
mul
stos
idiv
insb
mov
cli
dec
faddl
hlt
jmp
aaa
and
scas
xchg
in
movl
mov
jne
jmp
pop
int
xchg
shll
out
stos
outsl
dec
rcrl
inc
mov
jle
sbb
mov
add
into
fisttpl
fs
adc
scas
or
popa
imul
in
scas
dec
popa
loope
ljmp
test
bound
mov
test
stc
ja
push
hlt
vpmuludq
data16
add
cmp
sub
mov
daa
dec
in
pop
sti
or
xor
xchg
mov
repnz
test
pushf
test
int3
cmc
icebp
les
xchg
data16
cwtl
and
test
pop
push
cmpl
es
movsl
pop
and
sahf
fiadds
sub
push
sbb
js
cmp
xchg
inc
les
and
pushf
std
pop
lds
mov
xor
test
xchg
js
fdivr
xchg
push
sbb
xchg
cwtl
inc
pop
pusha
scas
icebp
sbb
jnp
pop
xor
rorb
popa
xchg
push
cltd
cmp
orl
push
dec
sub
or
leave
pop
xor
jl
pop
mov
in
mov
pusha
loop
jo
mov
stos
popf
add
outsl
lret
test
or
loop
sub
popf
pop
loopne
iret
or
test
or
repnz
sub
jge
int3
daa
bound
jnp
xor
xchg
mov
dec
mov
in
outsb
add
repnz
ds
or
add
lea
jnp
pop
rolb
fistps
jl
push
xchg
lds
and
xchg
push
add
cmp
cwtl
or
xor
or
mov
fnstcw
aas
shrl
test
push
jb
inc
mov
mov
cmp
ret
js
mov
call
or
xor
bound
ret
dec
jg
mov
mov
dec
jp
out
push
xchg
lret
gs
fstl
mov
push
pop
enter
jno
adc
or
adc
adc
pushf
push
jnp
cmpsl
rcrb
repnz
adc
mov
jnp
cs
cmp
jmp
mov
adc
in
mov
int
repz
jg
add
inc
pop
cmp
stos
das
inc
movsl
mov
imul
push
scas
or
enter
mov
sahf
mov
std
push
sbb
mov
mov
push
out
inc
aaa
cwtl
inc
out
xchg
dec
inc
lahf
iret
movsl
push
push
arpl
aam
dec
lea
jge
mov
fcoml
push
fstpt
mov
stos
jnp
lret
jecxz
imul
xor
rcrl
cwtl
movsl
add
lock
add
sub
loopne
in
fcom
mov
mov
aad
pop
pop
pop
js
pop
push
ret
in
jno
jo
js
sbb
int3
setp
fiaddl
inc
mov
cmp
push
mov
shlb
or
lods
add
aam
loop
mov
addb
jb
dec
insb
nop
js
mov
push
push
mov
lret
int
pusha
mov
xchg
std
xor
cmc
lock
inc
mov
mov
xor
jns
add
aad
sbb
mov
lret
in
jns
lret
imul
add
sbb
aam
mov
jmp
outsb
aas
push
adcb
push
jge
mov
insl
sbb
psadbw
aam
and
dec
push
fdivrl
fnsave
jmp
in
sahf
inc
cmp
lahf
or
cmp
cmp
or
lods
sbb
inc
cwtl
xchg
pop
mov
cs
xlat
jecxz
popa
cmc
jl
jbe
xchg
mov
pop
xchg
fidivrl
xor
stc
loopne
mov
popf
mov
cmpsl
or
hlt
mov
mov
icebp
insl
lcall
stc
mov
jmp
movsl
addr16
mov
mov
push
shrb
popa
jg
push
push
stc
fwait
mov
ljmp
inc
ficomps
and
loop
cmpl
xchg
clc
inc
and
push
sbb
fs
in
ret
popf
cmp
test
lods
jmp
mov
les
or
fstp
mov
mov
mov
sbbb
cmp
fcmovbe
cmp
in
mov
data16
mov
out
xor
lock
lahf
push
mov
ret
out
sub
xor
jo
stos
cwtl
lcall
inc
or
mov
jecxz
test
aad
lret
in
out
xchg
fcompl
ds
cmp
enter
xchg
jb
fisttpll
or
dec
add
js
inc
sub
and
fistpll
shlb
int3
es
cmc
rcll
adc
loop
insb
gs
lods
xlat
mov
out
sbb
mov
insb
int
jns
and
jp
out
mov
sub
mov
sar
mov
adcb
daa
mov
sarl
cmpsb
hlt
fidivl
or
xlat
adc
adc
jo
ret
xchg
out
inc
pop
or
pop
lret
sub
hlt
inc
mov
fbld
pop
xchg
xchg
push
add
xchg
shr
push
xor
repz
cmpsl
out
rolb
enter
cmp
cli
ret
cmp
push
push
cmp
pop
aaa
aas
xchg
jae
sbb
pop
add
and
inc
or
je
mov
mov
and
addr16
sbb
sub
jge
pop
notl
inc
mov
or
ret
adc
add
push
lock
jg
bound
scas
mov
mov
mov
push
test
or
dec
push
cmp
aad
add
fs
sub
xor
mov
and
pop
push
sub
mov
and
xor
inc
ds
vpperm
ror
or
pop
push
mov
lods
cmp
in
lods
imulb
lea
lcall
mov
lcall
repnz
dec
movsb
dec
cmp
mov
jne
movsl
fs
xchg
mov
mov
and
xor
mov
mov
jl
pusha
and
inc
lods
sbb
or
lahf
rcrb
cmc
pop
mov
in
fwait
xor
sub
jb
loopne
sbb
mov
lds
xchg
mov
pop
cmp
or
ret
mov
sbb
mov
fcoms
push
test
fmull
cs
inc
in
sbb
xlat
cld
adc
stos
ljmp
shll
pop
dec
scas
sub
rol
cwtl
mov
fisubs
push
dec
cmp
jle
in
sbb
popl
push
rcrb
arpl
sbb
mov
cli
clc
sub
sbb
out
std
push
sbb
or
test
movsl
popa
jg
mov
mov
pop
xor
pop
mov
fistpl
test
les
xchg
loopne
ss
sbb
or
into
jecxz
jmp
repnz
dec
pop
sbb
cmp
cmp
bound
pop
sub
or
push
cwtl
jg
and
in
mov
pop
mov
adc
jne
jmp
xchg
xlat
mov
push
inc
jo
scas
push
or
cmp
jecxz
add
std
inc
xor
cltd
fbld
lea
inc
test
nop
jb
sub
adc
push
jne
jae
in
xchg
jb
mov
jno
pop
pop
mov
test
push
add
sbb
mov
popf
jae
mov
or
jbe
and
arpl
test
add
dec
add
out
mov
lcall
jnp
jmp
inc
add
and
adc
test
jge
sub
cltd
jnp
rorb
or
into
insl
scas
jecxz
add
inc
xor
ljmp
aam
sti
sub
cwtl
lcall
mov
xchg
xor
sub
jle
sub
and
rolb
mov
pop
cmpsb
int
popl
int3
jbe
adc
cmpl
nop
call
popl
rorl
int
lods
clc
stos
rcll
pop
add
int
mov
cli
ds
je
negl
arpl
outsl
das
loopne
les
loope
dec
and
and
dec
dec
jg
push
jmp
mov
lds
out
or
dec
bnd
movsb
jecxz
jbe
add
and
sarb
and
xor
mov
fbld
dec
mov
and
sub
xlat
scas
mov
dec
arpl
mov
std
movsl
test
xchg
std
mov
fdivr
mov
jbe
popw
sbb
ds
cwtl
pop
xor
test
adc
mov
ficomps
mov
pop
xchg
inc
das
lahf
xchg
mov
imul
and
sbb
sub
xlat
in
insl
add
fiadds
lahf
sarb
mov
into
shlb
arpl
ljmp
add
fsubp
scas
cli
loop
insl
and
cli
fsts
xor
les
xor
into
or
lock
push
add
out
das
dec
out
test
mov
add
jo
or
jl
pop
or
daa
mov
mov
icebp
fnsave
icebp
and
clc
cwtl
xchg
bound
dec
das
sub
add
push
jp
cmp
push
or
sbb
lds
cmpsl
ret
out
xor
inc
lahf
xchg
insb
nop
mov
sbb
or
hlt
scas
and
out
sbb
loop
dec
movsl
add
lcallw
lods
imul
sti
enter
inc
jge
aam
pushl
mov
cld
pop
sbb
and
movsb
xlat
pop
push
mov
add
pop
add
fisttps
or
into
dec
fsub
pop
xor
xor
mov
cld
stc
mov
mov
jno
sub
aad
ret
push
xor
roll
push
test
aas
aad
mov
mov
xchg
add
xchg
daa
inc
or
inc
sbb
imul
ror
dec
nop
stos
ret
push
stos
xor
push
sbb
or
pushw
sbbb
jns
xchg
mov
sub
jmp
cmpl
mov
add
pop
jmp
decl
in
jge
mov
outsb
pop
sahf
imul
lock
scas
mov
xor
enter
sbb
sti
sbb
mov
adc
push
pop
cli
les
or
int3
cmc
loop
mov
out
inc
adc
je
insl
leave
push
fcomps
jg
int
test
nop
mov
xorl
jae
mov
aam
loope,pt
iret
xor
movsl
adc
imul
sub
cmp
hlt
push
adc
inc
mov
ret
int
cmc
xor
rcll
and
mov
enter
shr
fmull
gs
psrad
ljmp
pop
pop
mov
push
imul
aas
and
orb
test
adc
inc
lock
sub
popf
jnp
sahf
test
jns
test
cmpb
repnz
and
lahf
lahf
std
scas
inc
or
mov
jmp
hlt
dec
ds
and
loop
add
leave
pop
push
jbe
xchg
aaa
fists
adc
adc
push
bound
mov
jno
pop
dec
test
cmpsl
jb
xor
cmp
cs
cmpsl
mov
pop
stos
adc
repnz
nop
or
push
outsl
fcoms
xor
jg
fstpt
mov
jno
in
scas
ljmp
adc
jmp
mov
sbb
test
lods
jle
loope
push
imul
mov
lret
pushl
jl
inc
jnp
adc
or
insl
mov
xchg
mov
xlat
push
arpl
xlat
mov
sub
es
or
jnp
pop
int
pop
ja
cmp
mov
xchg
and
fwait
sub
fimull
dec
dec
insl
gs
mov
mov
pop
fstpl
es
mov
mov
xor
ss
xchg
lods
popl
mov
cmp
pop
push
fcom
or
push
jge
sub
out
push
stos
add
lahf
mov
adc
add
repnz
jmp
sbb
mov
lods
ss
cltd
sbb
jp
movsb
and
cli
lcall
cltd
inc
jo
rclb
adc
push
lods
pusha
insb
insb
scas
cmpb
sub
push
mov
out
cmp
pop
xchg
vorpd
ja
rclb
and
jg,pn
xchg
fmuls
loope
imul
out
push
pop
scas
nop
stc
call
jb
std
fsts
lods
push
iret
arpl
mov
pop
push
pop
fistpl
lock
pop
cmc
addl
pop
jns
cmp
cmpsl
cwtl
jge
js
mov
pop
js
pop
dec
insl
nop
sbb
fldl
xor
pop
lss
cmp
in
sbb
mov
pop
mov
mov
lods
lret
and
jns
data16
test
push
or
adc
mov
cmpsb
xchg
add
xchg
cmp
dec
sub
xchg
aad
dec
xor
sahf
loopne
in
push
or
ja
lcall
lock
loopne
add
int3
ret
ret
xor
pop
sbbl
incb
cmp
xchg
ret
ret
notb
lds
in
cmp
shrb
fidivl
enter
fs
and
dec
sbb
xor
stos
idivb
and
jno
dec
scas
jnp
sub
mov
mov
inc
mov
add
leave
dec
jmp
jae
lret
jecxz
mov
out
into
inc
leave
jecxz
cmp
int3
pop
in
pop
sbbb
sub
push
jp
cltd
aad
cmp
jle
scas
add
jnp
inc
push
pop
ss
enter
icebp
cmpsb
adc
hlt
subb
add
mov
xchg
out
insb
icebp
dec
xchg
add
leave
adc
push
call
jnp
mov
push
or
fimull
test
sub
aas
out
or
mov
push
popa
cmp
pusha
sub
lds
cmpsb
pop
test
ja
aam
mov
sub
xchg
pop
mov
push
and
mov
clc
cmovle
jnp
sti
ja
jno
loop
mov
jbe
sbb
insb
jae
loop
jmp
xchg
xchg
into
test
out
shrb
stc
jae
jbe
sbb
out
and
mov
pop
add
jle
ljmp
mov
and
add
fldl2t
xor
fdivrs
xor
push
inc
inc
push
addl
cli
mov
in
iret
imul
mov
or
in
add
popa
mov
shrl
cmpsb
fisubl
add
repz
hlt
vpand
inc
dec
out
bndldx
mov
pushl
jp
mov
push
in
int3
popf
into
out
rorl
xor
into
sbb
nop
rclb
fcomps
xchg
mov
test
jp
lahf
adc
push
pop
sbb
and
adc
in
inc
or
jle
mov
cmp
cwtl
cmp
push
xchg
lret
inc
rolb
dec
xor
push
inc
xchg
mov
aad
lods
clc
negb
and
fldcw
add
adc
fnsave
sub
xchg
pusha
pop
popf
stos
xor
aam
adc
mov
or
mov
cmp
sarl
mov
adc
xchg
push
in
jb
sub
dec
gs
cs
sub
dec
fnsave
les
mov
fcmovnu
in
and
pop
sbb
push
push
mov
sahf
cmp
pop
aas
sbb
or
add
jmp
lret
xor
jmp
push
inc
jbe
ss
mov
jbe
gs
adc
fstps
inc
ljmp
outsb
xrstors
jecxz
sarb
or
lock
insb
fnstcw
adc
pop
add
adc
fwait
and
and
mov
test
mov
mov
ljmp
test
movsb
stc
push
push
xchg
pop
scas
and
out
das
aas
adc
cwtl
mov
inc
xor
mov
stos
fldlg2
negl
sbb
jne
mov
div
shll
loope
dec
mov
notl
or
adc
cmp
and
xor
repz
ret
rorb
pop
aam
dec
test
xchg
and
xchg
mov
dec
cmp
or
cmp
ret
outsl
dec
mov
lcall
inc
cmc
repnz
sti
push
in
nop
mov
je
ret
pushf
push
xlat
jo
or
xor
push
out
loope
adc
lret
add
cmc
insl
call
or
mov
push
cmc
mov
scas
mov
push
mov
push
sahf
orl
jp
mov
ds
pop
dec
dec
stc
dec
fcmovnbe
lods
call
adc
dec
stos
icebp
inc
repnz
adc
and
mov
int3
xor
out
enter
push
outsl
fs
xor
sub
adc
cmp
inc
sbb
dec
std
int3
adc
or
pop
mov
sbb
push
inc
mov
imul
fistpll
push
daa
add
sbb
loopne
mov
cmp
in
ljmp
loop
adc
icebp
insb
mov
int3
adc
sub
sbb
js
ret
add
stc
sub
mov
leave
or
popf
mov
pop
ljmp
fldl
adcl
dec
xchg
mov
sub
sbb
pop
cmp
xlat
sbb
mov
aas
mov
enter
clc
push
xchg
xchg
mov
xor
outsb
xchg
mov
ljmp
fildl
inc
inc
push
push
adc
jle
xor
jae
inc
inc
mov
and
pop
rorl
fimull
mov
cmp
mov
xchg
xchg
in
fwait
adcb
adc
inc
sarb
sarb
int
out
or
lahf
xor
cmpsl
dec
xor
rorb
push
or
js
fistps
outsb
hlt
sub
mov
sub
xchg
repz
or
dec
bound
mov
ds
mov
arpl
outsb
std
push
cmp
xchg
jp
int3
fnstsw
and
call
mov
xor
leave
mov
lock
push
test
pushf
cmpsb
out
add
outsb
and
add
jecxz
xchg
mov
dec
in
jmp
ret
inc
jp
mov
mov
call
imul
dec
and
xchg
into
sub
jne
movsb
lods
cld
loope
dec
fnstcw
loop
mov
aad
push
ds
jl
int3
add
repz
mov
int
push
push
sbb
lods
in
mov
cmp
lds
fwait
inc
jbe
mov
mov
aas
mov
jmp
jns
push
push
push
outsb
jbe
mov
nop
in
fcoml
nop
test
imul
cmp
mov
insl
inc
jns
pop
mov
stos
xchg
jg
ja
gs
push
sbb
test
stc
stc
scas
sbb
xchg
mov
sti
dec
jo
stos
in
lds
loop
push
add
ds
mov
sub
lock
hlt
or
ja
iret
out
push
push
cmp
lahf
and
xor
stc
int
les
cmc
testb
fisttpll
push
cli
dec
ljmp
mov
jb
jbe
add
or
rolb
cmp
and
dec
mov
lcall
mov
lock
iret
jl
orl
lret
sahf
add
pop
xchg
sbb
aaa
loop
pop
insb
fcom
add
cli
cmpl
mov
sbb
mov
mov
addr16
popa
scas
cmpsl
sbb
repz
cmp
add
test
imul
test
mov
in
or
fnstcw
push
or
sbb
sub
push
pop
jge
loop
es
scas
sub
idivl
add
fstpl
test
fs
mov
adc
mov
xchg
adc
pop
xor
lds
dec
out
mov
outsb
dec
jnp
fimuls
lret
cmpsl
cmpb
jge
sbb
inc
repnz
loop
and
into
sub
je
sub
sub
fcoml
shrb
jo
lretw
ret
aad
sahf
and
mov
enter
call
loope
mov
jnp
pusha
jo
dec
mov
xchg
std
mov
xor
xchg
xor
mov
jnp
lds
jb,pt
jo
xchg
icebp
push
icebp
inc
fwait
mov
hlt
out
and
pop
jecxz
es
popa
pmaddwd
inc
cmp
jp
mov
aad
popw
movsb
push
inc
arpl
fidivs
inc
cltd
push
xchg
mov
jnp
jecxz
xchg
and
cmc
aas
pop
mov
push
into
add
dec
xchg
daa
ficompl
push
sysenter
iret
mov
mov
lds
stc
test
jno
lret
ret
xor
mov
decl
inc
mov
cwtl
inc
ret
mov
xchg
ror
fimuls
daa
sbb
pop
scas
ret
xchg
mov
fidivrl
jmp
cwtl
inc
cmp
add
inc
mov
mov
jno
jmp
push
cmp
cmp
add
sub
mov
jge
cmp
jb
dec
cltd
push
jmp
mulb
lods
dec
xchg
mov
adcl
jp
mov
xor
jle
stc
inc
negl
imul
cmpsl
bound
mov
jmp
daa
jno
imul
adc
mov
movsb
push
lret
shll
cli
mov
out
ret
xchg
rcl
pop
cs
pop
fwait
imul
mov
popa
dec
shll
es
xchg
inc
and
and
enter
push
jns
sbb
fdivrs
mov
mov
adc
outsb
jbe
arpl
sub
xchg
aas
sti
xchg
mov
add
shl
push
lcall
push
dec
cltd
rorb
xchg
rcl
xorb
cmp
js
loopne
enter
inc
push
loop
and
gs
movsb
sti
xchg
scas
adc
stos
ret
dec
mov
jne
add
jnp
sub
sahf
mov
dec
mov
lock
mov
cwtl
jmp
addl
std
xchg
in
daa
push
fistpll
aam
mov
je
fmul
xchg
aad
and
icebp
or
stc
repz
pushf
movsb
dec
jl
ds
dec
jmp
push
sarb
sbb
xor
cli
or
and
loop
xor
push
mov
inc
mov
cmp
jmp
clc
and
jmp
test
mov
outsl
mul
ss
dec
stos
dec
cld
stc
jge
jge
mov
lds
imul
das
cmp
push
push
mov
push
xchg
mov
jbe
dec
dec
jae
mov
mov
add
dec
ss
jg
fistpl
push
aam
iret
data16
sahf
je
adc
movsb
out
iret
add
jns
lds
cmp
je
pop
cltd
js
hlt
jae
mov
mov
popf
idivl
lcall
jmp
je
ret
imul
test
mov
push
push
xchg
and
mov
popa
stos
dec
mov
inc
or
imul
inc
sarb
lret
inc
aaa
in
xor
ja
jne
sbb
rorb
add
test
xlat
es
cmp
push
ss
lods
cmp
jle
int
std
int3
insl
addr16
je
sbb
adc
lret
movb
repnz
add
jge
out
mov
movsl
lock
xor
pushf
jle
iret
lahf
out
hlt
pusha
pand
push
daa
push
push
inc
cmp
mov
cmpsb
insl
test
loopne
add
hlt
jge
fnstsw
ss
hlt
cmp
and
dec
mov
inc
jnp
push
add
add
cmp
ret
ja
aam
pop
arpl
mov
sbb
aam
jne
leave
ss
dec
fmuls
jae
pop
shlb
push
mov
lock
xor
adc
test
sbb
test
inc
add
test
xchg
mov
insl
and
mov
popf
sti
push
sbb
lea
mov
imul
imul
pop
aad
stos
nop
stos
rorb
in
addb
ret
xor
ljmp
je
mov
inc
mov
andl
sub
mov
iret
pusha
mov
xchg
rorb
pop
push
ret
mov
sub
or
js
push
mov
or
push
mov
xor
push
cmp
and
sub
mov
jg
and
je
sbb
or
adc
dec
negl
into
int
dec
push
push
sarl
cli
insl
insb
pop
xchg
push
dec
mov
test
pop
jle
movl
or
sbb
dec
popf
stos
cli
shlb
arpl
mov
mov
dec
pop
cmpsl
ret
gs
aad
jg
enter
or
bound
xchg
aam
xchg
mov
lcall
adc
fwait
cmp
ss
dec
dec
push
mov
aad
fdivrs
mov
fisubs
jbe
inc
in
push
aas
rorl
adc
ds
or
inc
mov
xchg
mov
or
sub
pop
jbe
cmp
sub
fcmovb
aam
jnp
aad
push
movsl
pop
xor
cmpsl
and
cmp
out
xchg
or
sub
cmp
xchg
scas
inc
and
or
dec
das
sub
mov
xchg
fs
dec
loope
cmpsb
int
daa
mov
cld
lock
in
mov
adc
insb
sarl
mov
pop
and
call
xchg
imul
and
mov
cltd
jbe
and
cmp
lahf
negl
dec
icebp
cltd
push
pushf
xorl
fsubp
push
adc
jle
mov
int3
jmp
mov
lret
out
xor
sub
sub
xor
jge
fcmovnb
enter
sub
cli
sub
pop
push
xchg
and
jo
xor
popa
push
aad
mov
jbe
fildll
scas
add
xchg
sahf
hlt
lret
sub
repnz
ret
mov
jecxz
xchg
or
movb
cli
adc
pop
pop
ja
lock
lock
add
in
sti
xchg
aad
andl
and
out
clc
inc
and
mov
add
lods
push
pop
ss
jbe
cmp
addr16
hlt
cmc
fiaddl
sub
cmpb
mov
push
mov
sbb
insl
repz
xchg
push
lret
inc
push
orb
enter
dec
lret
insl
pop
pop
fmulp
jnp
push
add
jg,pn
or
push
mov
inc
pop
sbbb
cmpl
negb
insb
sbb
stos
pop
mov
sub
pop
jmp
dec
add
fcmovnu
push
sub
jecxz
lcall
sub
fiaddl
aaa
lcall
mov
jb
mov
inc
rol
rcl
cmp
addb
out
mov
add
dec
cld
mov
ja
mov
loope
push
jle
jp
push
xor
adc
in
adc
loope
ja
xchg
mov
add
mov
insb
xchg
pop
aaa
stos
mov
add
push
and
sbb
dec
cltd
pop
lret
and
lds
outsb
int3
pop
push
repnz
push
ret
jl
jl
mov
testb
add
stc
loopne
mov
push
lret
out
sbb
mov
cmp
divl
sbb
adc
cmp
jmp
repz
jmp
adc
sbb
adc
mov
repz
loopne
out
cli
in
sahf
mov
sbb
je
gs
es
jl
sbb
xor
jecxz
mov
aam
inc
arpl
fisubl
push
or
cmpsb
jnp
scas
xchg
out
cmpsl
xlat
std
adc
test
out
mov
jo
inc
xor
in
arpl
icebp
jmp
jge
aam
sahf
out
popf
fimuls
clc
dec
sub
ss
mov
pop
push
push
sub
ja
pop
repz
dec
idivl
stc
sahf
xor
sbb
icebp
rorl
cwtl
push
xor
pusha
push
and
mov
mov
test
mov
aad
cmpb
jle
jecxz
xor
add
in
cli
fadd
int3
mov
cs
imul
xchg
or
pop
sbb
push
out
int
cmp
fimull
mov
shll
pop
iret
pop
aaa
lock
dec
push
std
mov
bound
leave
push
xor
mov
das
lahf
sbb
into
pop
cli
mov
mov
movsl
ds
jp
lods
mov
test
out
gs
mov
sbb
mov
xchg
inc
xchg
or
sub
fdivrs
ja
std
int3
loopne
in
push
je
or
adc
add
bound
lahf
xor
popa
lahf
repnz
movsb
jl
adc
sub
sbb
sub
imul
mov
shrd
stos
jge,pn
mov
push
and
inc
je
mov
fidivs
ljmp
inc
popf
iret
test
jl
jae
mov
jnp
lahf
ds
xchg
mov
daa
dec
sub
loope
stos
test
rclb
ljmp
int
pop
out
push
jbe
popf
and
imul
jg
xchg
loopne
mov
mov
cs
ljmp
leave
xchg
dec
jl
imulb
jl
test
out
or
mov
sub
cltd
push
mov
in
in
into
and
pop
and
lret
inc
push
lea
das
addr16
repz
mov
hlt
xchg
xor
shll
jmp
jge
mov
in
adc
mov
push
nop
push
rorb
loopne
frstor
pop
adc
jl
lret
in
inc
int
ss
or
inc
insb
mov
data16
adc
pushf
xor
sahf
add
mov
int
adc
sbb
clc
pop
xchg
sub
das
fdivrl
pusha
or
fnstsw
mov
in
ret
push
popf
cmpsl
filds
pop
sub
sub
cmp
sahf
test
dec
or
imul
push
jge
sahf
cli
rol
cld
in
fstpt
fiadds
lds
cmc
cli
movl
cs
outsb
lret
xorl
ss
mov
fldl
jnp
cli
sub
pop
fwait
or
mov
sub
scas
xor
xchg
data16
roll
and
je
push
sbb
sub
ds
int3
lret
cmp
cmpsl
cmp
adc
sbb
mov
add
into
dec
add
dec
andl
mov
or
sti
sbb
dec
sbb
push
in
scas
sbb
fwait
mov
push
or
pop
pop
pop
jle
push
icebp
dec
add
nop
aam
and
jp
lods
mov
sti
js
les
pushf
cmp
and
stc
mov
inc
or
sub
loop
dec
stos
daa
or
pushf
in
loope
mov
es
and
out
lcall
sahf
in
mov
icebp
sbb
aas
cld
test
inc
dec
jnp
addr16
mov
js
int3
dec
mov
mov
negb
pop
mov
sub
or
jno
js
and
dec
stc
in
ss
dec
pop
xorl
adc
xchg
bound
sbb
cmp
mov
and
ret
adc
out
pop
aas
addr16
leave
mov
push
call
rcrl
xor
rorl
jle
shr
cltd
or
dec
sub
sub
lret
in
cmc
xlat
adc
fcoml
mov
sti
xchg
jge
cwtl
js
or
test
and
popa
jmp
xor
pop
dec
cld
movsb
jmp
add
xor
sub
notl
cmp
sub
cmp
loopne
jnp
dec
cmpsb
mov
add
cmp
add
push
inc
dec
xor
inc
or
popa
test
inc
rcrb
cmp
push
rorb
inc
ljmp
repnz
mov
or
mov
decb
jb
test
pop
pop
les
lods
dec
pop
lahf
mov
xor
das
mov
cltd
aad
mov
cltd
xor
popl
shll
inc
xlat
lahf
ljmp
imul
xor
dec
mov
popf
mov
or
mov
sub
lods
mov
mov
xlat
cltd
mov
out
cmp
repz
std
or
fdivl
push
mov
adc
and
cmpsb
lret
aaa
pop
dec
mov
add
mov
jbe
adc
ds
adc
mov
daa
cmp
sub
enter
insb
mov
int
and
sub
push
cmp
mov
lahf
push
scas
repnz
ljmp
xchg
sub
lret
push
mov
stos
add
insl
mov
fwait
std
outsl
test
pop
lods
xorl
dec
mov
mov
cmp
pusha
outsl
xor
out
sub
arpl
fcompp
stc
call
mov
mov
xor
repnz
dec
mov
out
lret
cmpsl
mov
adc
lahf
in
push
leave
es
addr16
sahf
mov
xchg
mov
cwtl
outsb
mov
das
cmp
les
je
cmp
out
push
add
mov
mov
inc
call
adc
scas
cmp
loop
out
aaa
arpl
add
mov
pop
fmull
into
gs
mov
es
cli
pop
cs
inc
popf
push
push
sub
mov
shrl
int
sbb
jecxz
hlt
cmpsb
shlb
push
cmp
fldt
sti
test
bound
add
push
jmp
leave
outsl
fcomps
repnz
mov
mov
shll
sbb
in
cmp
mov
xor
cmc
jne
hlt
jl
enter
lret
sub
jb
add
push
mov
xor
xor
and
iret
popa
sbb
inc
adc
sbb
mov
inc
notb
repz
jge
xor
cltd
mov
lods
lret
loop
ficoms
xchg
je
inc
dec
arpl
gs
cmp
fisttpll
dec
push
je
scas
xchg
jp
xor
dec
cli
adc
and
lods
jns
adc
and
cmp
add
mov
loop
or
mov
aam
lahf
sub
mov
cmp
cmp
mov
bound
fidivrs
jmp
jle
lcall
jg
adc
jg
mov
sub
jbe
jl
mov
sbb
clc
or
push
sti
in
arpl
inc
pop
repz
and
lret
sub
dec
push
and
mov
mov
test
shll
gs
ret
out
cmp
cltd
loop
xor
insb
faddl
scas
rcrl
in
fnstenv
and
sub
ja
jmp
xchg
push
mov
xchg
sub
or
ret
lods
and
add
fcmovbe
jae
pop
push
stos
add
lods
cmp
imul
iret
cmp
daa
push
dec
fsubs
fdivr
adc
pop
pop
sbb
clc
mov
int3
scas
aad
sbb
add
push
adc
pop
outsb
sub
stos
lock
lret
fiadds
mov
mov
dec
stc
xchg
jle
cmp
sub
loope
ss
dec
iret
add
rorb
mov
es
arpl
lahf
lods
cmpsl
mov
dec
daa
mov
mulb
mov
push
xchg
cs
inc
test
mov
cwtl
nop
ror
cmp
repz
mov
pop
pop
daa
push
pop
xor
xor
push
jmp
dec
mov
idivl
pop
fadds
scas
and
test
aam
inc
test
pushf
dec
xchg
lcall
inc
pop
in
leave
std
cmpsb
inc
or
jb
inc
adc
dec
mov
jl
scas
jg
push
stos
stos
jb
or
sbb
out
in
int
xchg
sub
and
xor
fmuls
xchg
loop
mov
stos
ds
loopne
stc
dec
sub
aad
ds
into
cmp
popl
push
sub
jge
into
pusha
pushf
dec
sub
mov
mov
mov
sub
cmp
sub
mov
xchg
sub
mov
lds
imul
dec
add
cmpsl
adc
dec
addr16
ljmp
hlt
push
das
xor
jnp
or
pop
xchg
scas
dec
call
nop
je
mov
push
cmp
adc
in
lcall
push
enter
je
inc
mov
ds
add
addl
loop
cltd
jb
xchg
lret
mov
test
fstpl
out
cld
inc
mov
and
shll
dec
cmp
xchg
adc
sbb
jle
repz
stos
loop
pop
xor
or
and
push
mov
ljmp
es
cmp
mov
jg
mov
or
adc
addr16
xor
sub
fstpt
pop
popa
jmp
popa
jg
mov
mov
hlt
lcall
ficompl
int3
inc
xlat
lods
sbb
push
jnp
in
addr16
pop
sarl
xchg
dec
jg
push
dec
dec
xchg
xor
mov
xor
mov
mov
adc
test
das
sarb
adc
xchg
cmp
jmp
mov
lea
jg
jno
in
clc
pop
into
mov
xchg
sub
jmp
pop
aas
ror
cmp
call
lretw
in
stos
fiaddl
movsb
xchg
sub
mov
icebp
inc
outsl
push
aas
adc
cmc
cmpsl
std
mov
mov
into
and
iret
ss
xor
xor
mov
out
cmc
pop
insb
lods
inc
pop
test
ret
dec
sarb
xorl
sbb
xor
pushf
mov
rolb
push
and
sti
cmpsl
cmp
and
sbb
pop
rol
push
lcall
arpl
mov
dec
jecxz
mov
adc
aaa
imul
push
nop
in
inc
xchg
pop
popf
xchg
cs
mov
hlt
mov
adcb
popl
adc
icebp
in
andl
mov
movl
imul
lret
and
imul
fwait
mov
cmpsl
mov
add
mov
jbe
dec
pop
sahf
mov
mov
dec
jae
cmp
dec
add
mov
leave
notl
cmp
jmp
xchg
stc
loop
pop
jmp
xchg
or
push
cmp
mov
insb
push
inc
sbb
mov
fnstcw
cmpsl
cmp
lods
xchg
push
repz
push
shll
dec
sbb
mov
loop
inc
mov
xchg
gs
scas
dec
push
dec
test
xor
mov
mov
or
pop
fdiv
dec
repnz
mov
pop
mov
test
jp
or
int3
or
inc
nop
cld
lret
lods
jl
mov
iret
add
xchg
je
roll
sbb
cs
push
out
push
dec
aad
aas
push
and
dec
pop
les
aas
jno
fnstenv
pop
push
pop
sub
inc
or
sbb
sub
popa
rcl
pop
sbb
push
test
mov
jb
int
lock
mov
hlt
sub
or
imul
addr16
in
jge
push
pushf
sbb
icebp
lea
dec
outsl
fildl
xor
mov
mov
sbb
mov
sahf
mov
call
jno
loopne
dec
int
xchg
inc
adc
and
cltd
pop
pop
mov
or
xchg
pop
mov
add
inc
clc
lcall
sbb
add
sbb
das
imul
and
aaa
test
dec
in
fisubl
js
jnp
or
pusha
xor
push
push
or
in
sub
jo
out
int3
jnp
leave
fstpl
addb
hlt
or
or
jge
mov
inc
loop
mov
and
es
ficomps
imul
movsb
pop
and
xchg
aad
cmp
cs
cli
cmp
and
ficoml
mov
loopne
aad
pop
mov
sbbl
mov
popa
push
shr
push
roll
test
imul
sub
iret
into
add
cmp
jo
xchg
cmp
mov
jne
aas
add
push
add
cmpsb
push
out
dec
mov
xor
daa
jmp
mov
or
jle
xchg
inc
js
aad
add
addb
cwtl
mov
out
pusha
xchg
ds
jo
inc
mov
or
xor
or
push
xchg
xchg
xchg
mov
jae
xchg
push
mov
rorl
arpl
xchg
neg
shr
out
xor
stc
mov
dec
out
in
shll
loopne
loope
imul
and
sub
test
cld
add
out
and
pop
mov
dec
xchg
add
xchg
cs
mov
pop
loopne
aas
mov
jp
add
cwtl
or
mov
push
ret
add
inc
aas
inc
lock
cmp
sbb
sub
shll
and
lea
inc
cli
mov
and
xor
push
imul
mov
cli
test
out
cmc
pop
cmp
add
mov
pop
testb
add
fmull
ret
lods
aaa
add
push
cli
cmp
xchg
sub
push
loope
pop
into
mov
mov
pop
lret
in
hlt
arpl
add
mov
sub
mov
adc
es
push
sahf
std
xor
jns
data16
ret
leave
rcl
lcall
scas
mov
lock
add
rcrl
frstpm(287
test
cmp
xchg
sub
mov
or
ljmp
or
addr16
xchg
mov
rcl
push
jb
jns
ljmp
and
ret
xchg
popf
inc
jle
fisubrl
cmp
sub
adc
push
adc
mov
inc
cld
mov
dec
xor
pushf
mov
pop
popf
lahf
movsl
xor
or
or
xor
popa
cmp
sub
push
imul
and
and
icebp
sti
pusha
jbe
jp
push
popa
inc
loopne
repz
inc
xchg
mov
sub
jae
adc
and
fcmovbe
mov
mov
or
or
xchg
clc
ret
test
jg
xor
jb
popa
lds
popa
inc
pop
pop
mov
mov
rcll
call
out
dec
xchg
lret
mov
mov
insl
jbe
les
push
outsl
pushw
outsb
or
out
shrb
or
xor
mov
and
pop
int
loope,pn
adc
jns
sub
aaa
sub
call
mov
pop
outsb
nop
adc
mov
insl
loop
rcl
out
std
rcr
dec
sbb
jle
bswap
stos
adc
adc
pop
cltd
lods
sti
stc
lcallw
dec
pushf
pop
cmp
lock
jno
aam
scas
inc
mov
sbb
sub
dec
xor
sub
push
in
xchg
dec
cmp
mov
clc
add
fsts
cli
xlat
and
mov
fwait
sbb
mov
pop
and
xacquire
test
sbb
insl
aas
in
test
ds
cmp
call
mov
rcr
adc
imul
mov
fs
enter
jecxz
jg
sbb
fwait
pop
into
cltd
repnz
mov
aam
cmpb
popa
nop
in
lret
jo
sub
inc
sbb
mov
es
mov
mov
sbb
aaa
cmp
out
mov
ss
stos
pop
ficompl
and
pop
mov
mov
hlt
mov
and
cmpb
lahf
sub
rcrb
push
lods
es
lods
mov
sub
int3
ds
pop
out
xchg
sub
push
or
repz
adc
lret
or
jnp
cmp
icebp
lea
push
aaa
mov
enter
daa
fld
mov
jp
mov
aam
aad
les
roll
dec
arpl
fnstcw
adc
xchg
inc
popa
mov
fistl
xchg
cmpsb
loopne
jp
test
add
incb
sub
jge
lods
sbb
or
push
mov
mov
mov
sub
xchg
and
in
lock
mov
cmpsb
fs
mov
fstl
sub
stc
repnz
jo
xchg
lret
dec
xchg
orb
jb
scas
push
jbe
mov
push
add
fidivrs
xchg
or
addps
push
in
push
mov
call
int3
jo
rcrb
inc
sar
sbb
mov
sub
mov
mov
and
call
in
jb
cwtl
test
test
sub
hlt
rcll
movsb
and
loop
adc
inc
sub
stos
push
pushf
pop
add
add
cmc
cmp
loope
aam
or
mov
pop
ljmp
push
sbb
std
fisubl
loop
cmc
mov
mov
js
popa
mov
mov
and
xchg
popf
test
imul
lret
jne
roll
sbb
lods
and
loop
lret
push
mov
aaa
pushf
pop
repnz
and
jns
push
daa
xchg
pop
mov
push
pop
outsb
inc
cmp
push
mov
imul
mov
fwait
pop
in
sbb
adc
stc
push
push
pushf
shrl
jge
jno
push
test
push
pushf
inc
out
inc
dec
sub
xchg
pop
inc
sbb
inc
sub
jecxz
mov
mov
inc
sub
push
or
daa
and
add
stos
dec
and
dec
xchg
pop
mov
xor
adc
hlt
push
pop
sub
or
mov
push
stos
pushw
in
jmp
push
xchg
pop
gs
dec
adc
xchg
sub
test
sti
pop
faddl
divl
add
imul
pop
mov
int
nop
je
inc
imul
or
mov
pop
sbb
orb
pop
test
sbb
imul
mov
loop
sub
inc
daa
mov
dec
push
pop
cltd
mov
jmp
inc
xchg
in
jb
jmp
jg
jecxz
mov
or
mov
xor
adc
mov
xor
test
scas
and
mov
or
jbe
dec
mov
cmp
mov
ret
mov
mov
push
scas
js
mov
dec
push
dec
ss
test
xor
das
frndint
gs
movsb
cmpb
dec
hlt
mov
cmp
jmp
push
mov
out
nop
jge
nop
and
stos
push
cs
xor
sub
xchg
sub
inc
mov
stos
sbb
mov
pop
mov
cmp
add
cmp
xor
inc
gs
sahf
out
jno
fsts
mov
sbb
mov
hlt
or
lods
cmpsl
loope
shrl
mov
jp
jbe
ret
cwtl
lcall
or
ret
mov
insl
push
cmpsb
in
sbb
aas
js
inc
icebp
aam
ljmp
fsubrp
xor
repnz
xchg
outsb
pushf
sub
xor
jae
push
int3
add
fdivl
pop
mov
and
popa
and
xchg
ret
jb
mov
aaa
xlat
pushf
insl
jg
es
push
pop
pop
in
mov
adc
mov
ret
push
test
mov
cmp
mov
fidivrl
sarb
and
add
popa
dec
fisubs
cmpsb
pop
nop
xchg
insb
xchg
popa
add
and
mov
shl
pop
sub
dec
test
rorl
and
in
mov
gs
cmp
mov
sahf
sarb
in
xor
daa
fildll
sbb
push
ds
test
in
icebp
fdivrl
xchg
inc
push
xchg
pushf
jl
cltd
outsb
nop
in
xor
adc
push
stos
jmp
lahf
lods
push
popa
lret
pop
mov
dec
ja
jae
hlt
cmp
cmpsb
fwait
dec
movsl
mov
testb
testb
mov
jle
loope
sbb
jo
cmc
pop
sub
add
inc
mov
orl
imul
mov
xchg
cld
or
inc
out
lcall
lock
xchg
jbe
scas
pop
pop
subl
les
fs
cltd
es
and
cli
call
lods
or
or
pop
fs
insl
or
out
out
jns
stc
pusha
scas
nop
gs
dec
test
sub
adc
aas
mov
sti
and
out
imul
imul
push
or
inc
inc
xchg
inc
sub
fstpt
cwtl
sbb
add
or
and
popf
into
std
xor
sbb
cli
iret
xor
cs
loope
mov
ds
inc
shll
push
daa
jae
pop
adc
shrb
movsl
ficoms
repnz
pop
adc
fld
xchg
aaa
fs
rcr
out
cmp
sbb
movsl
add
mov
jle
inc
lcall
dec
add
xor
andl
outsl
push
in
andb
mov
lcall
jnp
mov
lret
inc
out
mov
inc
mov
mov
out
and
jg
xchg
int3
scas
es
ds
mov
dec
popf
xor
movsb
mov
movsb
mov
push
popa
cmpsb
arpl
inc
outsl
adc
testb
pop
cwtl
mov
idivl
jp
fbstp
imul
dec
push
dec
ljmp
pop
or
rorb
std
add
fsubl
inc
push
inc
cs
std
adc
loopne
test
or
repz
mov
pusha
mov
jl
shl
jnp
pop
imul
xchg
sub
adc
int
mov
push
push
push
jnp
pop
ret
xor
push
pop
in
xchg
and
jae
mov
push
mov
enter
adc
pop
pop
mov
push
and
push
push
js
mov
mov
lds
nop
cmc
lea
xlat
aaa
stc
adc
jb
xchg
push
fbstp
xorb
movsl
jle
inc
mov
stc
xchg
xchg
sub
sbb
out
cmpsb
mov
cmp
aaa
mov
das
scas
ds
call
popa
cmpsb
in
mov
push
push
int
pop
mov
out
adc
rcrl
aam
jecxz
and
xor
or
cld
cmp
dec
and
push
scas
xchg
cmp
add
inc
test
mov
add
sub
sbb
fcmove
sarb
gs
jno
jb
xor
lods
addl
push
loopne
sarb
and
aaa
add
inc
dec
pop
push
icebp
xchg
sub
jno
test
fwait
lods
push
roll
mov
mov
inc
mov
xchg
mov
dec
sbb
pop
pop
pop
or
stc
pop
pop
ret
pop
jae
ror
jo
loopne
dec
mov
cld
test
xlat
aaa
mov
mov
jmp
push
cwtl
dec
imull
lods
push
sbb
push
or
dec
iret
out
adc
and
jns
adc
push
cmp
mov
xchg
fisubrs
mov
and
sub
pop
mov
fwait
pusha
imul
push
imul
sahf
mov
cmpsl
cltd
mov
cmpsb
mov
out
pop
insb
movsl
cli
add
out
xchg
movsb
clc
lret
popf
mov
sub
sub
push
fldt
xchg
mov
jp
bound
les
mov
ds
xchg
dec
push
inc
fstps
inc
cs
mov
mov
lods
js
pop
mov
adc
inc
lcall
sbb
cld
xchg
loope
je
cli
dec
gs
lret
lea
lods
clc
add
pop
inc
sub
adc
mov
sbb
pop
lret
mov
jo
xchg
cmp
jmp
subl
inc
cmpsl
pop
and
ret
sbb
popf
push
sub
inc
mov
imul
sub
jno
lahf
add
xchg
sub
popa
adc
clc
pop
ja
xorl
dec
inc
ret
fildl
stos
xchg
ret
sub
mov
pop
push
adc
pop
xchg
mov
aad
mov
enter
cmpsb
jns
mov
cwtl
popa
cmp
pop
sub
fldl2t
jbe
cmp
or
xchg
ja
test
xchg
hlt
jmp
popf
adc
push
gs
jo
je
xor
sahf
js
daa
lret
xor
sbb
in
aaa
mov
inc
stos
pop
jg
adc
push
aad
stc
cltd
add
mov
jmp
cld
shll
roll
jbe
sub
jns
add
push
jae
xor
daa
xor
jnp
push
in
xor
movsb
cld
jge
inc
jne
shll
out
and
cmpsb
sub
cmp
or
push
fstl
aam
sub
add
or
das
or
mov
aaa
mov
loope
and
clc
pop
mov
es
fidivl
jbe
sub
movsl
cmp
push
push
pop
pop
adc
sub
jo
mov
ljmp
adc
nop
movnti
push
mov
call
adc
in
sbb
jge
int3
mov
or
mov
popa
xchg
inc
adc
outsb
orl
inc
and
std
outsb
mov
imul
loopne
sbb
cmp
out
fdivrs
adc
add
and
jns
xor
xlat
rcll
fwait
test
push
xchg
pop
pop
or
xor
fisttpl
jl
mov
xchg
mov
push
inc
sub
mov
into
inc
pop
je
ja
std
jge
in
inc
sbb
xchg
leave
or
inc
mov
test
mov
test
push
and
mov
movsl
in
dec
lahf
cmp
cmp
std
inc
xchg
mov
dec
adc
push
and
jmp
and
popa
or
push
testl
std
push
cmp
push
gs
xchg
imul
test
aad
xchg
data16
fisubrs
mov
insl
fildl
mov
repz
inc
data16
dec
aaa
mov
mov
jmp
dec
in
mov
icebp
test
loope
dec
push
fwait
jnp
hlt
int
jae
xchg
pusha
aaa
sbb
push
insl
or
icebp
adc
out
or
push
jp
jg
lock
inc
pop
gs
fwait
sub
add
adc
xor
sbb
outsb
add
pop
or
mov
lock
sub
aas
in
mov
or
jno
fs
test
gs
enter
ljmp
fwait
push
adc
je
int3
iret
jge
jne
sub
pop
sub
loopne
call
repz
pop
xor
adc
aad
fcmovnbe
or
ret
adc
jmp
add
mov
aas
loop
aaa
xorl
inc
sahf
xchg
in
dec
mov
cmc
xchg
imull
scas
out
mov
mov
das
mov
int
dec
aas
in
rorl
jecxz
mov
cmp
cmovge
mov
addb
sub
mov
cwtl
xchg
clc
int3
cmp
inc
in
and
cmp
adc
jecxz
adc
dec
in
fnsave
stc
insl
into
and
xchg
and
inc
add
cmp
cmp
test
push
fadds
cli
mov
and
mov
sub
dec
out
sbb
or
mov
mov
jnp
decl
jns
pop
xor
xor
rcrl
inc
push
scas
inc
inc
add
stc
ljmp
pop
cmp
sahf
rcll
pop
icebp
sub
pop
jno
orl
pop
lods
jnp
movsb
in
dec
divb
cli
xchg
mov
and
inc
push
test
push
xor
arpl
sub
int3
add
pop
mov
pop
sub
lods
mov
dec
push
cltd
aaa
and
cmp
dec
xchg
jb
adc
push
lcall
lahf
lods
xchg
dec
push
leave
shr
lds
mov
enter
push
in
jmp
mov
or
cmp
loop
sbb
push
jnp
dec
cmpsl
insb
movsl
test
negl
popf
add
jg
inc
jae
jg
cmc
cld
adc
jne
dec
cmpsb
or
mov
xchg
push
mov
adc
into
inc
setbe
or
lret
pop
aam
popf
test
aad
xchg
pushf
outsl
inc
and
out
lea
sbb
call
jge
adc
sbb
imul
insb
sub
inc
lcall
sub
adc
pop
cmp
pop
call
test
cmpsl
pop
rcrl
repz
dec
iret
daa
jb
mov
stos
push
fidivs
pop
mov
lods
sti
and
lret
dec
fwait
sub
rcrb
int
pop
xchg
adc
das
stos
inc
dec
cmp
mov
jmp
cmpsl
push
mov
mov
fnstsw
pop
xchg
jg
mov
inc
aad
xchg
sub
and
and
push
sbb
mov
add
jbe
fwait
xor
das
push
repz
scas
movsl
adc
in
jp
pop
mov
dec
cltd
pop
cmp
sbb
push
enter
cmpsl
pop
es
jle
xchg
orb
mov
pop
adc
stc
les
pop
call
adc
imul
or
push
stos
jb
push
loope
lret
lret
icebp
xchg
daa
cld
xor
dec
pop
sub
scas
int3
mov
mov
fistpll
xchg
mov
add
mov
ljmp
mov
pop
lret
lahf
mov
fstps
addr16
shl
sbb
es
and
leave
dec
jle
inc
mov
dec
mov
mov
mov
imul
cmp
jnp
push
ljmp
leave
in
sub
sarb
sub
xor
mov
xor
pop
add
shl
js
scas
rorb
mov
pop
insb
std
adc
icebp
addl
mov
pop
mov
pusha
mov
outsb
iret
dec
mov
stc
iret
inc
push
sbb
jno
pop
sbb
pop
dec
push
push
adcb
in
and
sub
push
pop
por
sub
jo
xchg
jnp
inc
aaa
repnz
cmp
or
cld
loopne
jl
pop
dec
mov
lods
pop
enter
xor
and
arpl
repnz
or
out
aas
call
in
popa
mov
int3
sti
sub
xchg
in
inc
push
cmpsb
mov
xor
mov
jl
mov
push
adc
dec
xchg
push
mov
testl
or
push
js
pop
sarb
addb
cwtl
imul
mov
loope
aad
out
add
test
and
ja
add
push
xor
test
sub
adc
mov
or
pop
sbb
dec
call
mov
sub
inc
xchg
xor
imul
push
lock
jle
add
dec
xchg
mov
pop
inc
push
pusha
aas
movsl
gs
or
aad
int
or
add
or
adc
push
ds
sub
les
stc
fcmovbe
push
cli
xchg
adc
cmp
pop
pop
push
mov
or
jmp
out
mov
mov
clc
mov
add
cmpsl
cmpsl
enter
loop
add
dec
daa
xchg
add
scas
loop,pn
sub
jmp
sub
inc
in
cli
test
inc
lods
cmp
repz
ja
jg
sbb
cmpsb
push
mov
rorb
cli
push
add
xchg
sbbl
ds
xchg
imul
pop
xlat
xor
dec
imul
push
mov
pop
push
sub
dec
rorl
mov
jbe
popa
mov
mov
and
test
cmpsb
bound
xchg
shrb
inc
adc
xchg
stos
adc
popa
cltd
and
push
inc
out
inc
cwtl
cmp
testl
imul
jne
inc
inc
xor
lods
lock
mov
sub
mov
imul
push
scas
pop
repz
push
mov
mov
daa
icebp
je
pop
enter
lock
pusha
xchg
fldt
and
cmpsl
cli
dec
xor
sub
scas
movsb
sbb
mov
mov
loope
sub
psubusb
push
cmpsl
mov
cltd
push
mov
fdivrp
dec
loopne
int3
into
popf
fstpl
outsb
adc
dec
or
adcb
lods
popa
pushf
lahf
jne
mov
dec
lea
pop
pop
std
fdiv
testl
out
rolb
leave
mov
adc
out
sbb
xchg
andb
pop
push
inc
testb
std
xor
imul
pop
and
jb
ss
pushw
test
sarb
lahf
lods
adc
sbb
add
xlat
pop
pop
pop
sbb
mov
stos
sbb
out
jae
addb
push
pop
lret
mov
pop
lcall
mov
repz
inc
lods
das
push
jae
ljmp
in
daa
or
xor
in
mov
and
jmp
jp
leave
mov
or
jmp
push
fildll
out
scas
sub
xlat
cmpl
or
ds
pop
xor
ret
movsb
mov
xor
xchg
mov
pop
pop
cld
dec
inc
mov
leave
mov
inc
xchg
in
lds
lock
in
cmp
fs
loopne
and
and
ja
mov
ds
dec
dec
jne
xor
dec
shll
xor
pop
pop
sub
sbb
clc
loop
mov
rcrb
sti
std
add
cmpsl
jmp
cli
call
inc
cmpsl
mov
stos
push
adc
stos
fdivl
and
mov
dec
aam
xor
scas
icebp
and
ret
push
xor
adc
lret
out
or
xchg
mov
add
jo
pop
lcall
push
mov
mov
stos
test
stos
pop
cld
push
sbb
jne
pop
or
in
push
add
aaa
enter
push
in
push
fisubs
push
fadds
cltd
mov
mov
scas
jp
cmp
ss
gs
push
xor
aas
pop
andl
dec
cmp
inc
cmc
in
repz
lds
and
arpl
inc
cmp
test
dec
addl
lods
adc
and
sbb
iret
xlat
subl
and
xor
dec
sub
or
jb
out
mov
and
outsb
leave
scas
out
pop
push
inc
dec
inc
adc
sahf
mov
shll
sub
and
stos
aas
xchg
or
sub
lock
push
jbe
shl
imul
and
insb
sahf
sub
inc
pop
mov
dec
das
cmp
mov
jb
push
sahf
clc
repz
lea
lock
push
add
bound
pop
fnstcw
and
adc
inc
scas
cwtl
adc
or
lock
divb
mov
call
pop
mov
sbb
mov
or
leave
mov
imul
pop
fadds
cmpb
jno
out
xchg
xchg
mov
mov
xlat
int
movsb
mov
jns
mov
and
push
dec
mov
or
and
and
popf
dec
add
jae
jmp
mov
pushf
je
enter
mov
call
and
das
mov
mov
mov
adc
call
sbb
sub
lret
repnz
jo
adc
lahf
xchg
push
push
inc
cmp
xorb
outsl
mov
into
xchg
lcall
loope
xlat
and
in
out
out
pop
aaa
movsb
vpaddsb
sti
push
out
loop
stos
jmp
lock
push
rdtsc
mov
or
mov
sub
stos
je
mov
out
outsl
push
mov
test
dec
sbb
jno
jno
pop
and
scas
outsb
sub
inc
mov
rorl
imul
mov
js
out
cmp
xor
mov
lret
test
idivb
stos
push
xchg
mov
sub
push
les
sub
int
dec
je
mov
push
int3
pop
mov
mov
jns
int
mov
addr16
out
push
aam
ffree
daa
mov
xor
and
add
dec
std
sub
cmpsb
sub
mov
cmpb
push
fsubrl
mov
mov
popa
inc
jl
push
sbbb
imul
mov
cmp
mov
fstpl
xor
xor
cmpsl
daa
hlt
sbb
testl
pop
mov
ret
stos
jne
stc
repz
sbb
fs
pop
and
cld
sarb
mov
mov
scas
insb
fxch
test
mov
popf
sbb
fdivrl
pusha
xor
add
es
std
leave
fsubs
imul
lret
adc
lret
popa
add
std
and
shr
shrl
sub
cld
lds
shr
mov
xchg
std
cli
xchg
or
std
pop
mov
std
iret
add
adc
xchg
mov
cmpb
shrb
push
je
xchg
or
mov
xchg
adc
int3
out
xor
data16
testl
cli
mov
push
sar
sbb
stc
movsl
popf
inc
dec
jg
or
inc
adc
ret
push
pop
stos
sbb
insb
xchg
test
sub
jecxz
lahf
jae
fstpl
adc
rorb
shll
xchg
xor
mov
mov
xlat
iret
jo
scas
inc
dec
loope
xchg
int3
xor
inc
cmp
aaa
fwait
sahf
jae
into
adc
push
xchg
sbb
push
imul
test
sti
sbbb
xchg
cwtl
xor
scas
and
lret
mov
cs
mulb
out
mov
lea
adc
jmp
icebp
sbb
in
xor
sbb
add
sub
sbb
xor
insl
ljmp
xor
jecxz
test
adc
xchg
mov
pusha
add
subl
shlb
sub
les
jne
mov
mov
call
subb
loop
inc
mov
aam
xor
sub
mov
out
or
rorb
lret
pop
mov
outsb
iret
sbb
fwait
hlt
push
xchg
loope
mov
outsl
or
xchg
add
mov
insb
or
popf
cmp
cli
pop
pop
adc
inc
cltd
sbb
xchg
push
stc
ss
pop
je
pop
ficompl
mov
mov
add
inc
add
shll
js
pop
in
fistpl
stos
mov
inc
xchg
jle
dec
lea
push
pop
jg
ret
inc
or
xor
add
or
pop
inc
dec
insb
insb
shlb
sub
mov
inc
mov
push
sub
sub
lods
dec
jmp
add
xchg
scas
arpl
sar
dec
sub
int3
jmp
or
mov
jae
sbb
or
das
xor
sub
and
ss
jb
push
lret
fimuls
enter
sub
cmp
jbe
call
dec
roll
loopne
popa
stos
hlt
jae
cs
lock
mov
cmc
idivl
cmc
or
inc
push
dec
gs
repz
inc
adc
sarb
pop
out
imul
xor
stos
and
jne
in
adc
les
cmpsb
jne
sbb
add
cld
xchg
gs
movsl
iret
movsb
push
push
aas
xchg
testb
jo
pushf
loope
into
mov
pushf
repz
mov
inc
inc
or
fisttpll
jmp
in
test
inc
lods
cmp
cld
or
sub
add
mov
pop
jle,pt
mov
sub
pop
or
cs
out
aaa
inc
jb
loopne
dec
fs
cltd
into
inc
add
cmp
mov
inc
push
jnp
icebp
repnz
mov
sbb
cltd
jbe
cmp
es
sbbl
mov
test
mov
sbb
and
jns
movsl
push
xchg
sbb
stos
sbb
rclb
cld
and
js
call
mov
rcrl
inc
jl
mov
ds
dec
fdivl
push
xchg
or
dec
add
sub
cmp
xor
pusha
or
inc
jbe
jp
mov
xorb
negl
push
lods
mov
imul
loope
in
mov
jo
es
dec
mov
fxch
cmp
test
pop
inc
loop
mov
fs
divb
add
addr16
mov
pop
and
sbb
xchg
shlb
sti
mov
mov
mov
pushl
xor
jp
or
insl
mov
in
ds
xchg
rol
loop
pushf
or
cli
pop
jg
popf
add
or
lds
repz
inc
popa
mov
mov
mov
insl
push
ret
lret
ret
and
stos
scas
adc
or
and
or
mov
or
popf
incl
and
popf
sbb
test
ljmp
fisttpl
pushf
inc
sbb
scas
mov
inc
mov
adc
jnp
out
sub
or
in
sbb
cmp
jg
push
imul
xchg
les
dec
and
lds
sar
mov
pusha
jae
dec
or
mov
fsubl
inc
inc
lcall
adc
sub
aad
cwtl
and
cwtl
aam
cmp
mov
or
inc
mov
mov
sub
out
insb
repnz
mov
xlat
and
sbb
xchg
clc
pop
pop
sbb
movsl
xor
xchg
lods
xlat
imul
mov
adc
push
and
movl
lret
mov
cltd
add
and
add
xchg
mov
push
scas
pop
adc
sbb
data16
out
xchg
aaa
and
popa
loope
add
pop
stc
xor
or
jnp
test
sbb
pusha
loope
mov
inc
imul
xchg
test
test
xlat
sbb
push
inc
cmpsb
xor
push
sbb
cmp
out
mov
lret
testl
xor
xchg
pop
popf
scas
xor
cmc
in
sub
jb
mov
cmp
and
enter
fs
in
xchg
mov
gs
lahf
adcb
dec
adc
icebp
or
test
adc
inc
dec
push
pushf
xor
orb
cmp
xor
xchg
fsubrs
push
imul
fistpl
mov
lret
cmp
pop
shr
call
jl
push
jle
lea
mov
cmp
ds
aas
and
sbb
mov
xchg
xor
test
inc
aam
in
in
aad
xchg
arpl
push
push
jbe
and
lcall
gs
cwtl
mov
movsb
mov
pop
or
cmpsb
stos
fs
or
inc
pop
outsl
into
lret
mov
xor
push
out
sbb
icebp
das
pop
leave
loop
xor
in
loop
pop
popa
sbb
test
or
cmpsl
sbb
orb
cmp
add
lods
movsb
sbb
rclb
add
push
push
fisttpll
mov
stc
data16
mov
enter
push
pop
adc
mov
lret
or
lret
mov
push
in
ret
push
sub
std
xor
int
scas
int
je
inc
out
jnp
xor
leave
mov
push
pop
jl
dec
lea
scas
fwait
cmp
dec
or
sbb
sysenter
test
mov
daa
mov
iret
adc
inc
cmp
aaa
or
rorb
jg
cmp
leave
repnz
imul
cs
inc
out
xor
mov
inc
loopne
ret
andl
xlat
jb
jnp
mov
dec
leave
push
popa
out
dec
popa
orl
fdivrl
sbb
xchg
sub
push
xor
rcll
mov
ljmp
ret
xchg
out
mov
push
mov
dec
push
adc
div
push
sub
das
pop
in
xor
xchg
jne
mov
cmpsl
cs
sub
insb
arpl
loopne
push
stc
dec
jb
inc
out
sarb
rcrb
leave
sbb
mov
call
into
lock
cmp
ret
mov
push
inc
aad
xor
mov
sti
jb
jno
insl
mov
cmp
xchg
jbe
test
mov
mov
popf
ficomps
adc
js
ds
movsb
cwtl
es
push
push
mov
mov
int3
lods
pop
testl
inc
mov
add
jne
outsl
mov
pushf
mov
pop
scas
lret
clc
lcall
ficoms
dec
ret
dec
int3
int
or
add
cmc
push
aaa
shrl
mov
add
scas
sub
mov
jmp
pop
outsb
js
testl
xor
pop
jne
scas
std
lds
arpl
clc
nop
sub
das
out
xor
pop
stc
repz
sbb
ljmp
pop
cwtl
loop
xchg
ljmp
jne
or
lahf
adc
mov
jp
pop
mov
fmuls
lahf
clc
dec
arpl
add
xchg
mov
pusha
xor
into
sti
cmp
mov
test
mov
push
cmp
push
adc
cltd
jo
leave
push
in
inc
pop
inc
lea
sbb
out
jbe
test
cmp
das
sbb
cwtl
mov
push
or
orb
push
jmp
mov
adc
cmp
inc
nop
lods
shlb
lds
xor
icebp
fwait
jecxz
mov
push
div
cltd
mov
push
jbe
xor
pop
inc
in
cmp
sbb
inc
aad
lret
or
cwtl
cwtl
lcall
push
mul
or
mov
ret
ret
stos
shll
test
mov
or
xchg
enter
jp
pushf
in
pop
jecxz
test
scas
xor
ljmp
xchg
and
incl
test
jge
jbe
std
jp
es
dec
jp
cmc
push
stos
cmpsl
icebp
add
lds
test
cwtl
gs
lret
adc
aam
icebp
cmp
cmp
hlt
loop
shrb
or
push
leave
movsl
jno
add
jge
daa
das
adc
dec
push
test
call
movsl
repz
ds
decb
cmc
in
pop
or
jns
mov
loope
imul
pop
xchg
jle
inc
rol
jnp
imul
lcall
stos
movsb
mul
mov
cmpsl
mov
in
mov
fsts
jle
dec
and
xor
in
stos
mov
into
pop
lds
cmp
adc
incb
dec
add
sub
test
xor
out
daa
in
inc
sub
jmp
cwtl
jb
add
sbb
xor
inc
pop
lret
rcll
loopne
mov
lret
mov
cmpsb
add
sbb
jp
jo
je
push
aas
gs
fmuls
jmp
ret
cmpsb
dec
mov
idiv
mov
or
mov
adc
push
and
adc
mov
ja
scas
pop
mov
jbe
lcall
iret
int
cmp
addb
sbb
pop
push
xchg
mov
mov
mov
adc
in
ja
jb
rcll
stos
pushf
push
data16
cmp
add
mov
mov
dec
ret
dec
lods
nop
add
mov
imulb
or
rolb
lods
or
and
xor
ja
cmp
lret
sbb
mov
jg
popa
sub
ja
in
fbstp
adc
aam
mov
or
sub
xor
hlt
popf
xchg
pop
mov
dec
aaa
push
orl
cmp
je
std
insb
les
in
jbe
in
inc
sahf
outsb
test
dec
sahf
std
sub
cmp
inc
das
lods
nop
mov
shrb
aad
daa
rsqrtps
mov
xor
cld
push
stos
fbld
jo
pop
out
sbb
aaa
lahf
lret
xlat
cmp
jecxz
lods
imul
xchg
fdivr
xor
std
rcr
loopne
call
cmp
cltd
xchg
fucom
mov
add
or
cmp
add
rcll
push
clc
mov
std
sub
inc
shrb
pop
call
leave
test
ja
sbb
and
stos
jae
pop
or
flds
fcoms
shll
js
cmpsb
dec
cwtl
jno,pn
add
pop
aaa
dec
sub
movsb
mov
lds
in
mul
jo
inc
es
cwtl
outsl
shl
or
sbb
addb
add
loopne
mov
inc
inc
fcomps
or
scas
mov
mov
mov
dec
test
sub
sub
cld
aam
aas
dec
movsl
xchg
xor
testb
pop
cmp
cs
jbe
or
push
std
push
sahf
or
fstps
imul
jae
popf
popa
cmpsb
ret
test
testb
out
cmp
sbb
mov
cmpsl
fwait
lcall
cmp
es
pop
rorl
xor
cs
or
jno
rorl
jb
jae
sub
sbb
test
sti
cs
fbld
inc
pop
dec
iret
xlat
add
jb
test
rolb
xchg
and
into
push
daa
fsub
mov
or
mov
add
das
sarb
test
pop
push
popl
ret
icebp
cld
xchg
fcmovnbe
scas
dec
lds
push
mov
rorb
mov
pop
and
cmpsl
inc
xchg
xchg
jl
push
lret
mov
pop
mov
loope
xor
pop
inc
loopne
notl
or
mov
jmp
push
enter
sahf
aad
push
out
in
jmp
and
sub
pop
out
inc
repnz
stos
jne
popa
scas
mov
mov
test
jb
dec
inc
lods
mov
or
popa
add
lret
aad
add
cld
and
lret
push
cmp
add
inc
dec
xor
mov
pop
shll
mov
clc
jp
dec
add
stos
cmp
jns
inc
mov
dec
sub
arpl
imul
sahf
xor
clc
mov
add
push
cmp
pop
inc
or
jle
hlt
xor
je
ja
js
sub
outsl
lods
insl
loope
or
call
push
and
lret
mov
push
js
jae
cmp
cld
adc
out
scas
das
shll
push
mov
stos
push
inc
mov
outsb
sub
dec
adc
mov
imul
test
sub
and
loopne
mov
iret
pop
and
pusha
insl
pop
subl
dec
or
push
xchg
int3
pop
xchg
cmp
and
push
iret
int
fs
rcll
out
sub
lock
push
in
pushf
jg
pusha
mov
test
push
std
je
adc
xor
aad
xchg
adc
xchg
inc
lock
loopne
add
xchg
push
sub
mov
je
in
add
jns
cmc
sbbb
push
fcompl
fidivs
mov
enter
xchg
add
es
stos
cltd
mov
mov
int3
push
mov
cs
mov
or
sbb
mov
popf
es
sbb
movsb
jns
mov
in
or
fsub
out
jno
lret
pop
or
sbb
mov
ret
enter
out
mov
iret
test
rorb
fwait
jnp
cmpsb
jno
pop
dec
pop
cmc
mov
push
jecxz
fsts
ljmp
imul
xchg
ss
idivb
insb
and
clc
movsb
mov
gs
bound
je
add
xor
mov
dec
and
cmp
add
imul
idiv
daa
cmp
xor
fists
pop
sbb
xor
sub
xor
stc
orb
push
push
loope
xor
js
ret
xchg
add
jnp
jbe
or
lods
stos
mov
pop
jo
xor
sbb
test
stc
and
aaa
stc
mov
imul
pop
ss
fstps
imul
mov
in
cs
js
sti
dec
hlt
enter
sub
repz
mov
movsl
shlb
mov
flds
or
inc
in
and
daa
fidivrl
pop
add
push
dec
in
pop
sbb
push
or
mov
push
insl
jae
cs
inc
cmpsb
loope
push
cld
adcb
in
cmp
jg
pop
es
inc
test
pop
mov
jmp
pop
fwait
test
jmp
imul
mov
jns
sub
pop
fnsave
lahf
cltd
and
inc
and
push
sub
jge
jecxz
sti
xlat
std
add
int3
mov
mov
clc
ret
pusha
xchg
jo
rcll
adc
mov
fsubrs
mov
and
aam
int3
das
sbb
cmp
js
cs
jno
adcb
out
dec
xor
cmp
jb
mov
xchg
jle
sti
pop
or
add
xchg
jge
xchg
test
je
mov
xchg
add
leave
mov
cmp
xchg
xchg
ds
push
int3
cmp
bound
push
fistpl
popa
ja
xor
mov
int3
out
sti
inc
mov
fnsave
inc
jmp
lock
push
ret
xorb
cmpsl
mov
test
shl
andb
subb
insl
pop
cs
scas
pop
loop
ret
data16
cmp
jo
cs
stos
inc
sub
addb
push
and
pop
cmp
sbb
rolb
mov
test
xchg
andb
inc
ds
fdivs
sub
lahf
mov
adc
push
xchg
shlb
stc
cmp
mov
icebp
sbb
fisubs
sub
mov
in
push
sub
shl
inc
int3
test
das
push
bound
inc
pop
xor
inc
mov
xor
jb
mov
hlt
pop
movsb
and
or
push
pusha
test
inc
mov
lahf
stc
xor
movsb
fmull
shlb
fs
inc
and
lret
jg
sbb
jg
repz
out
jl
les
inc
mov
insl
xor
pop
xchg
push
pop
fidivs
int
inc
dec
mov
sub
adc
andb
sub
and
sbbl
fsub
repz
test
jg
cmp
adc
xorl
lahf
mov
push
adc
nop
sbb
sbb
stc
ss
mov
popf
test
in
in
les
mov
insb
and
std
in
js
xor
sbb
shl
inc
mov
sarl
or
adcb
mov
xchg
jo
pop
mov
and
and
mov
lock
xchg
addr16
adc
outsb
aad
dec
stc
out
inc
xlat
call
xchg
jne
lods
mov
mov
dec
jmp
stos
push
mov
sub
cli
movsl
dec
push
ret
sahf
inc
pusha
add
test
add
rcl
cmp
je
dec
push
enter
sub
insb
mov
in
loop
imul
fldenv
lahf
lock
push
sar
addl
lea
inc
scas
pop
adc
dec
sub
rcrb
xchg
and
push
xlat
xchg
push
inc
jno
mov
cmp
or
subl
imull
inc
insl
add
add
sub
test
add
aad
cmp
dec
push
push
divl
cld
stos
test
movsl
insl
dec
sbb
or
es
jbe
mov
cs
repnz
xchg
movsl
cs
test
sbb
pushf
imul
xor
push
lcall
fstl
cmpb
loope
or
sub
lcall
loopne
mov
mov
ljmp
hlt
pop
jl
jnp
push
out
into
les
inc
jae
and
in
in
mov
fwait
add
neg
loop
out
mov
cmpsl
in
popa
push
push
das
pop
int3
fidivl
pop
adc
cmp
imull
and
popf
sti
pop
push
sbbb
and
jo
xchg
xchg
jp
xchg
add
dec
sahf
xchg
cmp
daa
inc
jae
lret
aad
fdivl
xchg
ficompl
sbb
cmovge
xchg
inc
mov
xchg
pop
mov
shl
sub
imul
cld
in
into
ja
stc
mov
cmp
pop
adc
xchg
js
das
or
pusha
adc
subl
rcrl
and
loop
pop
xchg
cmp
jge
testl
ss
pushl
in
adc
stc
push
rcrb
xchg
sahf
xor
inc
dec
out
iret
iret
into
in
daa
add
hlt
xchg
cmp
pop
sbb
maxps
out
add
les
jg
add
data16
gs
mov
cmc
push
push
xor
dec
insb
and
jb
push
jge
push
pop
loop
sbb
xchg
fsub
inc
das
dec
sbb
loopne
adc
mov
mov
dec
or
cs
push
push
fbstp
std
inc
fs
adc
jb
dec
or
jbe
push
sbb
adc
xor
jb
inc
mov
lret
imul
rclb
sbb
adc
xchg
mov
popa
push
mov
sbb
cmp
test
lret
shrl
adc
cmp
gs
movsb
scas
cmp
imul
jl
push
out
rclb
push
mov
dec
mov
xor
test
outsb
test
xchg
push
icebp
imul
pop
mov
mov
loope
lret
rorl
stos
sti
sub
leave
mov
xor
xlat
test
lock
dec
fnsave
jbe
enter
xor
in
out
push
sub
cmp
adc
mov
push
sbb
mov
or
push
jmp
cmpsl
ror
ds
jecxz
jnp
push
cltd
bound
jb
popa
xchg
es
sbb
jecxz
mov
pop
popa
inc
lret
xchg
outsb
dec
call
mov
inc
out
and
lock
fimuls
ja
push
and
aad
cmp
subl
sbb
and
adcl
cld
mov
xchg
mov
pop
inc
negb
pop
xchg
xchg
shlb
adc
mov
arpl
es
jb
arpl
ljmp
mov
out
fsubr
mov
aas
mov
fildll
pop
cltd
xchg
push
pushf
xchg
cmpsb
and
sahf
push
mov
or
push
sbb
mov
sub
sub
fstpt
jbe
fstpt
inc
shrl
xchg
das
pop
jp
sti
enter
adc
sbb
push
test
add
cmp
pushf
xor
jae
addr16
mov
sub
data16
lret
scas
push
test
insl
dec
fimull
push
pop
mov
sub
jo
cmp
rcr
mov
pop
mov
dec
stos
int3
jo
xchg
andl
push
xchg
clc
imul
or
mov
test
mov
cmp
fsubr
xchg
xor
xchg
and
sub
fwait
call
xorl
sbb
insl
in
cmp
mov
inc
data16
cld
sbb
scas
sub
xchg
es
add
cmp
fisttpll
push
scas
sub
xchg
xor
mov
dec
in
lahf
pusha
mov
daa
cmpsb
ret
scas
cltd
jae
xchg
adc
adc
std
mov
jmp
inc
arpl
cmp
xchg
mov
dec
jecxz
cmpsl
pop
in
scas
cld
jl
ret
out
mov
sbb
mov
dec
cmpsl
inc
sub
dec
push
daa
jle
xor
sub
mov
pop
push
adcl
in
test
out
mov
lods
int
pop
add
sub
jmp
bound
xor
push
pusha
stc
aas
pop
and
and
jmp
mov
pop
mov
lret
jmp
sub
test
popl
imul
pushf
or
dec
or
inc
cs
rcrb
roll
rep
xor
popa
repz
rcr
xor
les
jg
les
subb
je
add
and
jb
pushf
loop
mov
or
bnd
out
stc
push
jg
sbb
sbb
push
into
xor
pusha
stos
pusha
scas
xchg
jle
iret
popa
call
and
cs
add
xor
xor
sub
push
fadd
movsb
frstor
jo
push
xor
inc
add
xor
cmp
and
rcrb
cmc
cmp
lret
pop
lods
dec
sbbb
aas
movaps
xchg
xchg
or
pop
aam
out
jno
pushf
adc
cmp
cwtl
mov
lret
dec
xor
sub
mov
aad
ds
jne
lcall
fistpl
jecxz
stos
int
in
nop
ja
insl
sbb
sbb
dec
jp
inc
leave
adc
fisttps
mov
bnd
test
or
daa
outsb
add
cltd
add
xor
dec
aaa
ret
pop
add
cld
adc
and
xchg
fisubrs
fldcw
jg
jns
cmp
std
ljmp
xchg
in
leave
mov
pop
movsb
and
iret
push
jae
mov
ds
mov
and
loopne
pop
jns
push
mov
out
fcompl
or
inc
iret
xchg
in
push
inc
ret
je
leave
stos
pop
in
cmp
mov
push
clc
lods
pop
mov
sti
test
repnz
mov
pop
mov
movsl
cmp
jmp
jae
out
loopne
test
adc
and
mov
je
sbb
sub
test
std
xchg
mov
jno
mov
and
jb
dec
push
les
dec
cmc
inc
test
mov
arpl
fs
adc
jge
mov
push
js
enter
outsb
jecxz
mov
mov
sbb
jns
insb
in
fidivl
inc
iret
aam
jno
sub
dec
dec
out
mov
jecxz
cmp
push
add
push
xor
xchg
lahf
xor
out
in
idivl
outsb
sub
test
imulb
mov
and
xchg
pop
and
daa
arpl
pop
pusha
mov
dec
loopne
test
or
out
scas
shl
push
cwtl
cmc
inc
jo
pop
filds
cmp
xchg
fndisi(8087
sub
xchg
hlt
or
arpl
mov
enter
pop
popa
icebp
icebp
ret
dec
xor
add
stos
ret
shr
mov
mov
dec
inc
adc
xchg
adc
lock
xor
xor
fs
add
outsl
and
scas
xor
push
xchg
xchg
xor
jae
mov
scas
sbb
int
lds
ljmp
jns
outsl
fidivrs
add
add
popf
jge
pop
cli
stc
repz
dec
push
inc
ja,pn
shl
test
mov
pop
fmulp
clc
sub
fldl
push
jge
stos
lods
cmp
daa
lea
mov
dec
inc
lea
sahf
mov
je
push
inc
std
jnp
jo
cmp
cs
clc
and
adc
jb
loope
and
jbe
addr16
push
sub
stc
jne
mov
out
dec
xchg
pmaddwd
sbb
mov
insb
fwait
jmp
loop
jnp
aas
xchg
ss
or
and
sbb
jno
jle
shll
imul
xor
jmp
adc
cmpsb
inc
jbe
push
pop
adc
push
dec
xchg
pop
inc
ss
loop
and
inc
mov
add
dec
imull
mov
add
lcall
mov
into
and
femms
aaa
and
or
xchg
sub
xor
insl
sbb
lret
or
ljmp
mov
sti
in
jle
mov
fsubrs
dec
sbb
jne
addl
dec
mov
xchg
pop
inc
pusha
pop
dec
popa
push
pop
enter
xorb
or
addr16
and
aas
xchg
xlat
mov
call
dec
outsl
cmp
out
sub
shr
lcall
daa
inc
dec
or
dec
sub
cmpsl
outsl
fs
push
inc
add
lock
out
jge
push
dec
shlb
push
sbb
jae
icebp
stc
repnz
push
fmulp
sbb
sbb
ja
sub
loopne
add
and
icebp
pop
leave
movsb
mov
add
xchg
jns
sub
test
cwtl
mov
ljmp
iret
sub
sub
nop
cmp
add
dec
xlat
push
mov
movsb
mov
rcrl
mov
dec
push
roll
mov
arpl
dec
mov
jbe
inc
or
jno
repnz
and
call
scas
adc
sbb
out
cmp
jmp
vxorps
mov
and
lods
cltd
jo
push
pop
mov
addr16
ja
out
inc
cs
sub
fs
mov
xlat
enter
jo
testb
outsl
out
fistpll
sbb
and
icebp
or
push
cvtps2pd
mov
arpl
adc
xor
inc
loop
xchg
inc
int3
xor
stos
push
jle
adc
mov
pop
sbb
jno
enter
cmp
lock
xchg
sahf
dec
lcall
pop
jbe
add
mov
shlb
stc
out
bound
pop
js
enter
sbb
test
and
jge
jbe
rorb
inc
dec
inc
cmpsl
jo
mov
fcomp
daa
data16
mov
mov
sahf
sub
stos
dec
fbld
iret
pushf
push
mov
sbb
stos
and
ret
lods
scas
or
xor
jnp
and
inc
push
mov
inc
mov
cmpsb
rorb
clc
sub
xchg
popf
aas
dec
stos
and
sbb
imul
in
arpl
pop
or
add
mov
aam
call
mov
sbb
insb
fs
push
lods
lret
les
cmp
lds
add
inc
xor
mov
jecxz
out
jne
jns
xchg
and
push
punpckhwd
jge
das
shlb
daa
pop
or
mov
repnz
js
insb
mov
fidivrl
adc
mov
jbe
leave
test
jno
cwtl
mov
sbb
ja
push
jno
xchg
addr16
insb
xchg
out
add
rcll
inc
sub
jb
sbb
jo
outsb
adc
out
mov
mov
fwait
aas
or
cwtl
call
jmp
add
push
cwtl
dec
and
jnp
into
mov
cmp
js
pushf
pop
xchg
dec
fsts
mov
out
imul
rol
pop
lods
mov
out
sbb
mov
inc
mov
and
test
jo
out
pop
xor
clc
cmpsb
aam
das
lods
iret
xor
pop
cmp
jmp
fdivs
xor
adc
lcall
mov
mov
adc
mov
sbb
mov
and
in
fucomp
stc
imul
cmp
shr
out
and
roll
cmp
fsub
or
ret
push
mov
rcll
adc
sub
push
xchg
or
mov
mov
dec
cmpl
in
testb
pop
fiaddl
jae
dec
xchg
push
xor
xchg
stos
xor
sarb
jmp
xchg
addr16
and
push
inc
mov
push
mov
and
adc
or
jae
pop
jge
push
jecxz
xlat
scas
sbb
push
popf
fs
int
pushf
sub
fmull
sbb
ret
inc
in
in
fucom
xlat
adc
sbb
sahf
loopne
adc
mul
divb
pop
push
div
loope
dec
iret
outsb
mov
inc
fnstsw
dec
in
shrb
int3
mov
std
jne
add
dec
lret
push
aas
pop
fcoms
push
fwait
jae
data16
mov
fistpll
xchg
push
dec
pop
iret
mov
pop
push
lds
mov
rcll
mov
imul
imul
rorb
jecxz
jae
inc
sar
sub
jle
out
xor
sub
xchg
hlt
out
adc
mov
push
xor
clc
pop
xchg
enter
push
fbld
int
movsb
pop
jnp
sub
jg
dec
pop
ds
xor
adc
mov
in
jge
dec
rcrb
mov
mov
jl
xchg
pop
cmc
dec
arpl
arpl
xchg
and
adc
dec
mov
pop
lds
dec
push
lret
inc
lds
sbb
add
icebp
inc
dec
into
lds
and
out
cwtl
adc
xor
and
or
push
cmp
dec
aad
sub
sub
lods
pop
cmpsb
xlat
in
aaa
pop
mov
xchg
and
xchg
push
pop
add
orb
mov
push
xor
jl
enter
ret
call
inc
or
jp
jl
inc
iret
inc
xchg
pusha
shrl
add
loopw
mov
mov
sbb
pop
sub
hlt
xchg
push
sub
loopne
mov
xchg
mov
fcmove
sbb
sub
popa
push
xrelease
jl
sub
and
dec
xchg
es
pop
pop
pop
inc
sbb
pushf
jns
sub
imul
repz
scas
jmp
js
jns
mov
ss
jg
add
xor
mov
inc
sub
mov
mov
dec
or
out
and
insb
inc
bound
in
pop
mov
mov
call
push
sbb
mov
xchg
mov
adc
mov
in
pusha
testl
hlt
inc
adc
sbbl
lea
cmpsb
cltd
inc
fstpl
inc
inc
mov
mov
and
stc
xor
out
setb
adc
call
outsb
add
lock
lods
xor
out
adc
je
and
cmp
mov
xor
inc
shr
xor
cmp
and
test
aaa
mov
loop
mov
dec
push
pop
sub
mov
lock
mov
inc
pop
in
cmp
inc
pop
out
adc
push
sahf
aas
jecxz
dec
cwtl
sub
dec
int
sub
in
out
mov
mov
pop
cmp
fildll
sbb
add
fimuls
subb
sti
mov
fsubs
mov
jb
xor
ja
bound
fimuls
scas
push
mov
popa
cld
xchg
jp
shll
sub
jns
mov
xchg
mov
call
sbb
xlat
pushf
xchg
push
xchg
aam
fwait
xor
mov
std
test
inc
outsb
rolb
pop
test
out
push
xchg
xchg
iret
lock
push
sbb
and
adc
jns
out
stc
test
cmp
mov
inc
jp
imul
lods
fsubrl
mov
dec
loopne
jae
mov
mov
sahf
or
jp
jg
negb
lret
mov
mov
test
in
cmp
stc
nop
test
cmp
sbb
cld
inc
faddl
mov
mov
lds
int
pop
pop
loope
je
push
sub
pop
dec
and
xor
in
push
out
test
lds
adc
nop
jnp
ljmp
dec
xchg
sbb
test
fdivrl
icebp
mov
inc
shlb
mov
xor
fisttpl
repz
push
in
jno
jg
addl
adcb
imull
mov
dec
mov
imul
out
aam
xchg
lods
sarb
inc
add
enter
xor
sub
ljmp
pop
data16
push
xchg
push
lea
cs
fs
pushf
cmp
sub
in
jle
jle
pop
xor
frndint
sub
xor
fs
int
mov
sub
je
test
mov
popf
sbb
cmpsl
pushf
jmp
sti
lds
dec
loop
pop
mov
cmpsb
mov
and
xor
push
popf
xchg
adc
fwait
sbb
shl
lock
lcall
pop
and
cmp
xchg
cltd
leave
dec
sub
mov
inc
addr16
jmp
mov
adc
jne
cmp
sub
adc
push
scas
cmp
les
dec
out
cmp
nop
mov
inc
or
cltd
cli
pop
dec
and
dec
scas
dec
das
iret
inc
push
icebp
popf
jo
jp
popf
push
xchg
std
enter
mov
and
mov
fldt
cwtl
or
outsl
gs
repz
or
pop
cmp
es
jg
imul
in
and
pop
pop
push
jle
mov
repz
xchg
movsl
sbbl
shll
aad
mov
mov
push
jmp
sarl
leave
test
lcall
sub
addr16
cmc
mov
mov
mov
aas
xchg
movsb
jnp
addr16
add
sbb
dec
mov
aam
je
aas
or
xor
push
aad
popa
jns
inc
or
cmpsl
mov
cmp
jb
jo
pop
icebp
dec
add
pop
dec
dec
shll
xorl
pop
inc
jb
outsl
faddl
popa
and
movsb
ja
adc
cmp
lahf
push
fwait
sub
mov
inc
out
jge
fs
adc
cmc
stos
clc
sub
aam
mov
mov
or
xor
sub
add
sub
dec
lock
mov
jbe
push
push
out
add
into
insb
loop
not
jne
mov
out
mov
loopne
leave
sub
shrl
pop
mov
test
push
xchg
fucomp
jp
insl
inc
xor
and
es
inc
mov
shll
leave
pop
or
test
and
inc
xchg
test
mov
cmp
scas
aam
std
lods
fcoms
dec
popa
divb
and
pop
cwtl
adc
fistpll
mov
leave
scas
stc
xchg
lcall
es
adc
mov
int
aas
pushf
inc
sahf
adc
decl
dec
idivl
fs
ret
inc
in
xor
cmc
mov
into
mov
ret
xor
or
sub
inc
les
subb
pop
es
int
out
stos
xor
sbb
insl
add
xor
jge
mov
test
inc
ret
xor
cmpsl
test
aas
jle
jnp
or
sahf
mov
dec
pop
add
in
mul
testl
cmp
push
mov
cltd
sub
imul
lret
pop
shr
mov
mov
stc
imul
and
cmc
mov
aaa
mov
jbe
mov
xchg
push
enter
jae
xabort
mov
andl
out
iret
sbb
ljmp
out
push
aam
xor
push
push
int3
test
aas
mov
xchg
mov
call
mov
nop
leave
cmpsb
and
pcmpgtw
daa
shll
repz
in
adc
adc
sub
arpl
inc
out
pop
or
mov
or
call
adc
mov
push
lret
push
aad
arpl
test
mov
ffree
ljmp
dec
cs
mov
aas
mov
mov
add
pop
cs
jp
pop
rcrl
xchg
test
repz
out
lgs
cltd
test
jnp
out
jg
jno
inc
jbe
shll
movsb
jnp
js
mov
in
loop
pop
mov
sbb
sub
mov
outsl
inc
nop
or
dec
jge
test
inc
sahf
shlb
ds
outsb
scas
inc
cmp
sub
loop
sub
inc
mov
int3
imul
adc
add
bound
cmp
arpl
imul
add
mov
sahf
lds
add
cmp
xchg
std
loope
test
es
add
int3
xorl
inc
sub
push
lahf
in
andl
push
ja
inc
rolb
sbb
add
shlb
mov
dec
pop
test
push
or
rorb
clc
repz
sub
addr16
clc
dec
dec
cmp
and
and
aas
mov
xor
and
pop
dec
out
jae
call
add
sbb
cwtl
fmull
mov
mov
repz
inc
sbb
pop
cld
lods
add
pop
sbbl
les
cmp
jmp
pop
fcmovbe
sub
fs
or
dec
cld
int
sbb
sub
mov
pop
cmp
pop
inc
dec
xchg
and
xor
mov
stos
or
gs
in
scas
test
test
ljmp
xchg
dec
jecxz
jbe
fwait
mov
or
mov
mov
out
or
ss
pop
cltd
bound
insb
loop
and
js
xchg
addr16
lcall
inc
push
lods
or
shlb
add
sub
ss
stc
xorb
fldl
push
rclb
or
dec
push
jns
jl
and
inc
dec
imul
jnp
dec
das
pop
popf
out
xor
and
shlb
sbb
lea
push
shrb
mov
mov
xchg
imulb
xor
shl
sub
add
in
cmp
adc
fs
xchg
lods
sbb
jmp
shll
popa
xchg
mov
int
aad
mov
mov
pop
dec
pop
dec
sahf
dec
jecxz
mov
cwtl
mov
sbb
jmp
sbb
inc
pop
ds
aad
cmp
mov
adc
pop
lcall
arpl
xchg
in
loope
fisubrs
xchg
push
lea
fcoml
push
and
jg
int
decl
jae
aaa
daa
fnsave
loop
or
dec
addr16
push
cmp
fucomi
push
jge
mov
fdivl
push
cmp
adc
in
pop
jge
lahf
and
sub
sti
fs
add
loop
mov
xor
lret
cmp
loopne
bswap
lahf
int3
cli
out
daa
inc
ss
sub
xor
xchg
out
push
les
aad
rolb
and
push
mov
jecxz
les
pop
pop
mov
ja
arpl
cmpsb
fildll
sarb
sub
xchg
nop
mov
sub
dec
xchg
outsb
das
pop
fwait
scas
and
and
xchg
scas
enter
sbb
cmp
xchg
inc
fmull
cmpsl
push
cmp
mov
in
jl
mov
mov
in
or
and
mov
add
test
pop
imul
adc
ret
out
or
or
cmc
sbb
cmc
and
or
dec
cmp
push
sub
jmp
or
jns
adc
sbb
insb
xchg
jg
into
or
fbstp
push
jne
pop
cmp
jno
add
mov
mov
jl
fadd
je
sub
js
push
mov
incb
das
sbb
mov
out
addr16
dec
hlt
dec
andl
rorl
add
cmpb
mov
lock
push
add
mov
xchg
movsl
adc
and
mov
leave
lret
mov
sub
push
aas
adc
jb
sub
dec
push
fs
out
popf
mov
mov
push
add
fisttps
popf
test
add
loop
insb
pop
inc
cmpsl
add
sub
pop
addl
clc
dec
popf
and
sbb
dec
cltd
push
adc
cs
ret
into
fsubp
jp
xlat
jp
js
or
inc
push
adc
pop
cmp
movsl
xor
test
subb
pop
sub
jnp
pusha
imul
int
cld
mov
mov
fiadds
pop
inc
xor
jg
repnz
mov
or
iret
push
test
test
pop
addr16
adc
into
rcrl
cmp
push
mov
scas
test
cmc
aam
sti
dec
mov
insl
push
cltd
iret
xchg
pop
cmp
fwait
adc
jp
jge
decb
dec
sub
sbb
nop
push
gs
dec
or
inc
pop
xor
adc
cmovl
inc
sub
sbb
stos
dec
adc
inc
add
cmp
pusha
push
push
test
outsl
fwait
repnz
mov
test
dec
mov
cmp
jecxz
push
call
aam
xchg
das
dec
arpl
loope
faddl
aaa
xlat
mov
dec
shll
inc
ja
loope
js
call
jbe
int3
ficomps
pop
scas
aas
fs
fcmovnu
sub
push
jp
mov
mov
gs
adc
fcmovnu
inc
xchg
mov
mov
imul
inc
sbb
shl
scas
add
loope
inc
add
orl
xor
inc
pop
lret
jb,pt
shr
stos
push
into
pop
out
popf
push
adc
jl
mov
adc
xlat
sti
xchg
loopne
lods
xchg
test
xchg
xchg
test
mov
jb
outsl
pop
shlb
jecxz
nop
xor
enter
dec
nop
ljmp
pop
lock
aam
lock
das
pop
cltd
jne
and
js
movsb
cmpsl
icebp
push
getsec
xor
mov
je,pn
pop
mov
cmp
sbb
ja
xchg
popa
push
ja,pt
std
dec
adc
push
mov
sbb
adc
pop
into
cmp
fimuls
adc
xor
test
out
in
jb
jmp
negb
sahf
fnstcw
cmc
pop
loope
mov
pop
push
stos
mov
bound
outsb
mov
push
fcoml
cltd
shrl
lock
sti
add
xchg
cmp
and
jne
push
jge
bound
mov
fadds
cmp
cs
test
pop
pop
loop
mov
add
pop
push
out
arpl
and
lods
lock
hlt
and
jp
cmp
lods
add
insl
dec
dec
dec
fimuls
enter
scas
pusha
or
and
dec
jecxz
xor
jnp
lods
or
inc
repnz
push
jge
test
sti
inc
xchg
shlb
jae
cltd
aam
push
outsb
nop
mov
dec
mov
dec
daa
ret
faddl
xchg
out
jmp
jge
push
mov
mov
add
add
pop
pusha
xchg
lcall
leave
rorb
inc
aas
xchg
shll
mov
ss
inc
sti
jbe
out
jge
fdivs
sahf
out
dec
popf
cld
pop
add
stos
std
inc
xor
icebp
popw
xchg
test
or
icebp
sbb
sbb
dec
ljmp
pop
in
adc
xchg
nop
mov
or
nop
xor
lahf
inc
add
aaa
jae
mov
sub
pusha
adc
cmp
mov
xlat
jno
cld
aam
or
lcall
fcomip
lret
add
push
add
mov
daa
dec
adc
add
mov
ss
or
push
fsubrl
adc
cmpsl
cwtl
stc
lret
sbb
subl
cmp
pop
test
push
mov
xchg
cs
decb
pop
sbb
imul
pop
push
and
xchg
mov
gs
test
out
out
stos
and
inc
lret
add
js
sbb
xor
dec
data16
add
xchg
dec
clc
inc
sbb
xorb
loop
jno
jle
push
mov
xchg
jmp
loopne
xchg
or
add
mov
out
adc
xchg
pop
mov
push
sbb
push
sahf
loop
lods
cmp
mov
xlat
xchg
shl
dec
hlt
push
aad
orps
jbe
mov
pop
mov
xchg
iret
xor
test
mov
sub
cmp
dec
jl
sarb
dec
lret
ljmp
jecxz
scas
out
or
mov
jg
lret
sbb
xchg
aad
push
jle
int3
mov
out
fidivs
daa
jnp
inc
cmp
enter
cltd
sub
fldpi
xor
push
sti
jge
and
mov
inc
clc
ret
fldl
dec
mov
lock
movsl
lods
stos
lea
or
loopne
mov
lods
test
call
jl
pop
or
push
es
xlat
addr16
push
ljmp
xchg
mov
fwait
popf
or
loopne
add
and
jmp
cltd
rcll
inc
fsubl
adc
cmpl
xor
movsl
mov
jmp
cli
fwait
pop
bound
sbb
cmpsb
lret
fbstp
iret
adc
lret
adc
call
gs
sub
add
stos
fs
sbb
sbb
imul
xor
outsb
bound
mov
lcall
mov
or
mov
mov
cmp
test
pop
sbb
fwait
xchg
inc
test
pop
out
jb
jmp
xor
insl
adc
jp
ret
jns
sub
int
aas
dec
sub
and
or
gs
rcrl
ss
and
pushf
add
inc
pop
or
cltd
sbb
popf
sub
in
aas
adc
movsl
or
sti
adc
icebp
cmp
sub
test
lea
outsb
mov
shrl
stc
lock
push
and
add
pusha
push
dec
mov
pop
xchg
cmp
roll
popf
or
mov
push
in
les
add
jmp
xor
loopne
sub
push
fists
dec
out
test
sub
call
mov
shl
outsb
push
out
pushw
xchg
lds
test
imul
push
pop
inc
sbb
rcrb
ficoms
into
lds
xchg
xchg
adcb
rcrl
inc
das
dec
xchg
cmp
push
cmpsb
mov
call
shlb
stos
popf
inc
fistpl
mov
jp
pop
cmp
mov
punpcklwd
fisttps
idivb
testb
mov
mov
test
imul
lahf
lret
fwait
stos
imul
bound
cld
lcall
in
pop
adc
clc
out
icebp
sahf
subb
mov
out
xor
inc
inc
mov
loope
inc
jo
outsb
lcall
loopne
mov
lahf
pop
mov
or
sbb
lds
nop
push
sub
ss
adc
dec
stc
adc
push
sti
pop
lock
fstpl
jge
jnp
xor
or
ret
cltd
push
cmpsl
repz
sahf
lea
mov
dec
push
add
in
sub
jns
xchg
filds
cwtl
mov
fnstsw
negb
jno
sub
dec
hlt
xchg
cltd
jne
mov
dec
sti
out
mov
sub
xchg
jl
pop
popf
js
dec
stos
push
or
jmp
out
mov
and
je
adc
test
and
lcall
jne
add
add
gs
cmp
aad
cmp
mov
jo
out
fs
and
add
sbb
in
test
out
jecxz
lea
sarl
jo
jg
das
adc
mov
sbb
mov
jns
sub
adc
push
xchg
arpl
jne
or
adc
mov
and
sub
cmp
and
xchg
push
mov
cmpb
lea
push
pop
test
outsl
xchg
dec
int
sub
roll
aad
out
rcrl
cltd
pop
imul
cmpsl
mov
jl
pop
stc
rcll
icebp
mov
out
add
xor
in
add
stc
insl
lods
mov
push
rcrb
pop
push
push
imul
repz
jns
mov
xorl
js
out
ret
and
mov
xor
imul
push
sti
addr16
cld
adc
into
inc
push
pop
and
fs
and
and
in
scas
sbb
iret
and
add
nop
adcl
jg
and
pushl
pop
inc
out
xor
fs
sub
sbb
xlat
xchg
sarl
xor
add
ja
mov
ds
mov
xchg
scas
sbb
cmp
lods
clc
dec
mov
jns
je
leave
inc
jecxz
pop
sub
testb
lahf
add
xor
shll
mov
mov
xchg
es
in
pusha
std
loop
sbb
insb
ljmp
int3
rcl
jle
rclb
fisubrl
and
jns
sbb
ret
mov
cmpsl
sahf
inc
test
mov
addl
ss
cltd
jb
aad
loop
sub
jne
add
leave
adc
sbbl
mov
call
popa
push
mov
loope
dec
sbb
adc
shr
xchg
mov
faddl
and
xchg
push
daa
and
pop
cmp
adc
jns
or
andl
call
repnz
js
das
aam
lahf
movsb
mov
out
or
or
idivl
ud2
cs
mov
jp
ss
push
sbb
lcall
xor
rclb
dec
shr
add
jae
call
jbe
es
fs
in
stos
jecxz
and
in
add
push
mov
dec
sub
popf
add
or
push
jmp
lahf
jp
inc
adc
adc
movsb
push
sahf
inc
outsl
scas
adc
leave
sub
in
jbe
lahf
aad
inc
inc
test
dec
jno
js
arpl
repnz
in
hlt
adcl
add
mov
jae
inc
jae
adc
movsb
mov
adc
lock
ja
ja
pushf
mov
mov
mov
push
sbb
push
in
adc
lret
mov
xchg
int
mov
insl
xchg
out
imul
cmpsb
js
ljmp
cli
sub
push
push
push
dec
xor
ljmp
push
fmull
mov
mov
call
cld
push
mov
popa
pushf
dec
popf
pop
jle
push
sbb
je
mov
out
sbb
lahf
jnp
ffreep
mov
mov
jo
mov
sub
scas
and
lods
hlt
inc
push
cmp
shlb
xorl
xor
mull
jp
mov
test
mov
add
mov
add
sub
mov
ds
rorl
test
pop
or
adc
pop
int
shll
or
leave
aad
jmp
sahf
rclb
cld
add
inc
mov
ficoml
push
neg
jbe
loopne
and
inc
cmovno
xchg
jb
int
xor
xor
mov
movsl
sbb
pop
cwtl
loop
mov
fiadds
iret
cli
xor
cld
test
leave
sbb
pushf
mov
push
xor
add
and
jmp
sahf
repnz
in
rolb
mov
xlat
stos
and
mov
or
bound
aaa
stos
lods
rcr
test
lds
mov
and
inc
cmc
in
jns
inc
sbb
outsl
cmp
add
and
pop
shll
push
xchg
fisttpl
or
dec
daa
mov
push
in
sbb
mov
add
loope
repnz
jle
pop
nop
push
mov
sub
mov
dec
ljmp
pop
lea
mov
mov
add
inc
sub
lret
arpl
pandn
xchg
test
lea
pop
pop
jae
movsb
jl
xchg
mov
xor
jnp
cmc
xor
mov
lahf
xchg
fcoms
or
jne
dec
pop
mov
xchg
sub
rorl
fsubrp
in
stos
add
test
lea
push
mov
shrb
imul
jmp
xchg
jae
add
pusha
in
inc
leave
into
stos
xor
jns,pt
lret
fnstcw
test
pusha
mov
adc
adc
mov
pop
push
cmp
jne
mov
cmpb
push
popa
call
mov
sbb
ret
fisttpl
sub
jg
push
fstpl
ficompl
dec
jno
mov
inc
enter
popa
insl
arpl
andb
cmpsb
dec
jle
pusha
jmp
jg
call
lcall
adc
imul
push
adc
push
call
jae
dec
xchg
lcall
cltd
pop
xchg
outsl
jo
inc
mov
inc
dec
enter
mov
pop
fnstsw
cmpl
push
push
add
aad
mov
popf
clc
xor
cmc
push
imul
jle
out
add
aas
and
fmull
mov
cmc
fsub
iret
push
dec
push
cmp
and
ljmp
mov
js
jnp
les
aam
je
jmp
mov
mov
cmp
dec
lods
scas
gs
sbb
pop
cmp
dec
outsb
push
insl
lock
cmpb
cs
int
insl
arpl
xor
mov
push
nop
mov
mov
jb
mov
mov
leave
aam
xor
js
cmp
jo
sub
and
ret
sub
xlat
push
dec
sub
pop
mov
mov
bound
out
xchg
in
sti
sbb
stos
cmp
rcrl
ret
jbe
xchg
xor
imul
enter
cwtl
inc
cs
pop
mov
jl
jbe
xor
mov
jecxz
sbb
sub
stc
push
push
loope
push
add
mov
xchg
ret
push
add
pop
fidivl
mov
mov
and
pop
sbb
test
mov
dec
adc
add
outsb
xchg
ja
dec
cs
and
arpl
mov
out
sub
popf
addr16
es
or
mov
xchg
sbb
push
mov
mov
mov
rcll
jp
jno
in
sarb
inc
mov
pop
scas
shlb
add
push
inc
pop
push
push
cwtl
fcoml
call
ret
jg
cmpsl
repnz
xlat
adc
mov
rol
adc
sub
xor
jge
fwait
into
popa
cmp
insb
leave
jbe
popf
data16
adc
outsb
das
addr16
aas
jmp
mov
cltd
cltd
adc
bound
inc
idivl
loopne
sarb
incl
sbb
int3
mov
fsubl
stos
or
test
add
aam
xchg
pop
adc
nop
pop
sbb
jle
and
cmpsl
stc
xchg
mov
mov
insb
decl
mov
lahf
std
xchg
add
dec
jmp
sbb
rclb
and
movsl
xchg
sub
aad
mov
cmpsl
ret
stos
je
and
pop
and
addr16
or
cwtl
cld
aad
ja
pop
pop
pop
mov
push
and
loop
je
adc
aad
shlb
cmp
icebp
cmpsb
mov
jns
push
sahf
jp
roll
dec
xchg
fstpl
cmp
bound
pop
mov
inc
fildll
push
fwait
push
cmp
hlt
shll
and
bound
dec
sbb
out
inc
and
pop
adc
xchg
jb
fimuls
lea
cli
shrb
pusha
std
das
pop
cwtl
testl
adc
int
imul
out
inc
jo
inc
pop
push
sbb
xor
lea
mov
in
cld
mov
pusha
jmp
jb
scas
jge
rclb
mov
and
cmp
and
cmovle
imul
aad
dec
cmp
push
sbb
imul
ljmp
cld
pusha
mov
out
jae
sbb
js
mov
fstpl
jmp
iret
push
adcb
nop
mov
sbb
mov
pop
pusha
fisubrl
ret
adc
lahf
jae
loopne
jge
mov
dec
xor
int
add
mov
fucomi
aad
into
push
out
ret
movsb
movb
int3
adc
fistl
xchg
addr16
xor
int
fimull
bound
and
dec
rcrl
test
mov
dec
sbb
mov
loope
insb
lea
fnstenv
push
adcl
cwtl
push
add
inc
or
iret
mov
shr
push
sbb
or
push
dec
icebp
and
into
or
lock
cmpsb
aaa
sub
out
outsb
pop
sti
mov
push
in
fwait
jge
cmp
and
data16
sbb
pop
out
sbb
jg
out
xchg
std
xlat
push
das
push
lds
or
lret
rolb
xchg
fst
outsl
mov
hlt
mov
jnp
mov
nop
fldl
jecxz
pusha
int
add
cmp
pop
or
aas
jg
test
gs
outsb
inc
push
das
sar
add
jl
push
decb
push
xlat
nop
js
xlat
addb
enter
into
dec
mov
fnstcw
push
iret
mov
lods
subb
jecxz
data16
imul
mov
cmc
sbb
pop
pop
mov
dec
jmp
dec
mov
inc
movsl
cmp
xor
stos
or
jne
les
push
inc
daa
sbb
jnp
daa
ljmp
repz
push
in
jae
jno
adc
in
mov
adc
hlt
mov
lea
nop
das
jns
adc
out
loopne
cmpb
stc
fdivrl
jle
lahf
push
fucomip
adc
mov
scas
cli
sbb
arpl
ret
mov
and
sbb
jbe
jge
sti
add
push
xchg
aas
dec
cmpsb
les
insl
enter
jbe
pop
jmp
mov
call
pop
sub
daa
add
xor
mov
push
xlat
adc
jg
or
mov
inc
push
pop
out
or
mov
dec
sub
jmp
pop
repnz
fiadds
das
ficoml
into
jns
push
mov
leave
dec
ljmp
hlt
imull
or
call
fdivl
cmp
stos
hlt
movsb
cmc
mov
pop
mov
push
bound
push
xchg
aad
insl
add
mov
pusha
cmp
jnp
pop
push
sarl
dec
nop
fwait
sbb
jb
gs
or
adc
jmp
sub
push
jb
cwtl
add
sarl
mov
rorb
dec
ja
mov
cmpsl
pop
aas
cmp
jmp
pop
pop
jge
xor
push
cli
pop
lret
cmp
cli
fstpt
jecxz
xchg
push
mov
lods
stc
mov
xor
pop
loope
mov
rep
imull
imul
mov
inc
fisubs
push
cmpsb
ret
mov
ss
sub
inc
jmp
fwait
jge
insb
add
enter
cmp
or
in
decb
orb
cltd
jp
xchg
lahf
or
push
sbb
dec
pop
icebp
ja
mov
adc
lods
outsl
ud0
in
movsl
or
sub
xchg
mov
adc
clc
xchg
outsl
adc
mov
fidivs
leave
dec
jns
mov
xor
adc
or
fs
addr16
pcmpgtd
iret
add
jae
es
sbb
jnp
nop
pop
push
mov
xor
loop
shl
scas
repz
xchg
leave
adc
subb
and
cmp
daa
sub
push
out
cltd
xor
sub
data16
mov
gs
inc
pop
inc
push
adc
xchg
and
lods
jle
push
arpl
push
das
cmp
add
dec
packssdw
xlat
sbb
xor
xchg
movb
mov
rcll
bound
sbb
push
nop
adc
pop
add
pop
inc
daa
es
cmp
mov
pop
sbb
std
sti
and
cld
jecxz,pn
bnd
or
test
jle
mov
data16
shll
mov
ret
inc
jle
int
xor
jecxz
add
mov
test
sarb
adc
add
loop
mov
mov
mov
and
js
ficompl
dec
or
inc
test
inc
xchg
mov
lods
sub
add
imul
ret
sub
push
daa
scas
mov
movsl
lock
cmp
sti
sub
fisubl
sub
stos
inc
scas
fisttpll
xor
inc
mov
popf
jmp
call
mov
inc
mov
mov
sub
mov
lock
imulb
xor
dec
fwait
pop
jns
mov
inc
inc
or
repz
repz
inc
out
pushf
push
jmp
mov
frstor
mov
ret
xchg
jns
push
out
push
icebp
xchg
mov
jmp
in
loopne
cwtl
jle
sub
mov
int3
jns
mov
xchg
loop
mov
ret
or
daa
dec
and
fistl
cld
fs
insb
adc
aaa
ja
or
cmc
popa
fnsave
rclb
rcl
or
cmp
push
cmp
xchg
pop
data16
push
aam
mov
adcb
ret
xchg
vmovdqa
push
popa
or
ficomps
or
test
rol
xor
xchg
pop
mov
xorl
nop
icebp
ja
inc
pop
insl
in
scas
pop
mov
stc
dec
repz
mov
in
inc
aas
insb
ljmp
mov
xor
push
lea
sbb
cltd
and
cltd
jmp
or
testl
dec
adc
pop
clc
cmp
fdivrl
incb
aas
aas
pop
je
pop
outsl
jl
inc
pop
out
stos
repz
dec
fsubrs
mov
or
cmpsl
out
cmp
decl
aaa
out
imul
push
lods
inc
jnp
dec
addb
lcall
or
lods
lret
and
stos
aam
jecxz
aam
pop
in
jb
xor
jmp
ret
or
scas
push
jae
adc
sbb
inc
pop
insb
jg
fs
cmp
sub
pop
or
cli
outsb
inc
dec
ret
outsl
in
pop
push
and
clc
sbb
jo
fdiv
test
sti
sub
outsl
or
jo
call
jmp
call
push
fiadds
mov
jp
in
sarl
cld
je
lcall
mov
xchg
push
xchg
ret
enter
dec
out
enter
jae
lods
mov
pusha
fidivs
call
pushf
bound
mov
jp
sbb
push
cmpsl
mov
or
or
adc
add
stos
popf
loope
les
push
cmp
sbb
sbbl
inc
xor
pop
push
inc
xor
mov
ljmp
in
fadd
push
cwtl
and
add
push
lods
es
dec
and
lds
out
lcall
in
dec
mov
mov
inc
cmp
ss
jnp
sbb
adc
sub
stc
movsb
je
dec
call
xor
shr
or
pop
aaa
imul
inc
movsb
stc
sbb
addb
les
in
push
jb
or
cmp
ss
xor
divb
das
out
dec
ja
decb
push
into
mov
xor
sub
imul
in
jg
daa
xor
out
pop
cmp
cwtl
lods
stos
movsl
dec
inc
mov
shll
fdivp
mov
ret
test
mov
jns
mov
in
dec
dec
mov
sub
test
push
mov
jne
cli
dec
or
xchg
or
jo
lods
in
sbb
lret
adc
mov
stos
push
rcr
push
daa
lea
cmpsb
and
nop
arpl
mov
pop
dec
jno
sub
pop
enter
push
jmp
sbb
jge
pop
stos
push
in
rcrl
xor
push
push
dec
in
mov
mov
inc
and
cmp
jo
mov
sbb
int
inc
or
xor
xchg
mov
das
jmp
dec
sbb
jg
jmp
rsm
jae
jecxz
jb
cmp
ljmp
fdivrs
cmc
sbb
mov
std
and
cmp
daa
cmp
or
and
les
lret
xchg
xor
mov
aaa
loopne
mov
pop
arpl
fcmovb
clc
sbb
in
sub
jne
iret
mov
lds
psubq
dec
mov
fsubp
les
ja
inc
push
fsubr
mov
lock
dec
loope
push
in
gs
pop
test
stos
jge
pop
jae
inc
inc
lret
test
xor
mov
mov
mov
repz
mov
addb
xor
fnstenv
movsb
repnz
mov
and
aad
add
cwtl
pop
test
xor
or
inc
bound
xchg
sbb
es
xor
and
jmp
mov
out
jbe
stos
cwtl
sti
mov
mov
mov
push
xchg
imul
loopne
stos
fdivs
xchg
cmp
aaa
jecxz
xor
imul
divb
inc
adc
pop
pop
cwtl
adc
es
aaa
lds
push
stos
or
jo
pushf
jecxz
loopne
sti
test
arpl
gs
imul
lods
fnstenv
or
mov
es
in
pop
rcl
orl
leave
mov
roll
mov
stos
mov
mov
xlat
cmp
sbb
testb
insb
std
xchg
xchg
jg
clc
enter
dec
scas
adc
out
push
rclb
imul
pushf
push
dec
push
and
clc
sub
outsb
lahf
xchg
mov
js
xchg
js
push
jno
stos
xor
fbld
outsl
lahf
inc
adc
mov
fstps
add
push
ss
sub
add
mov
inc
sar
ja
mov
icebp
jns
lret
dec
or
int
movb
mov
jl
push
jg
aas
or
fcmovb
js
test
lods
enter
and
mov
mov
in
ss
icebp
int3
adc
ss
imul
aad
inc
gs
or
frstor
mov
sub
dec
insb
ret
mov
xor
das
or
aas
and
xchg
cmpsb
or
cmp
icebp
out
sbb
jbe
mov
sbb
inc
cli
push
lahf
adc
enter
out
pop
cli
nop
cld
into
ficompl
push
cmp
cmp
mov
jp
jne
cmpsb
aam
mov
or
jge
jle
cmp
mov
dec
clc
fldt
int3
mov
or
mov
js
out
pop
div
add
xor
jno
jae
push
cmp
das
pusha
scas
mov
cmc
add
lock
push
test
dec
xchg
clc
sub
in
add
jo
jbe
dec
data16
aaa
stos
xor
cwtl
mov
sbb
inc
testl
mov
fs
lds
icebp
sbb
stos
aad
into
mov
push
std
sahf
push
mov
jmp
jb
mov
fsubl
mov
mov
and
fistps
jno
sub
pop
test
lahf
push
push
mov
push
jl
fucomip
inc
jno
inc
mov
pop
je
adc
ret
and
gs
xchg
imul
int
push
out
mov
or
sbbb
shlb
decb
xchg
out
pop
cli
outsb
jbe
fidivrs
mov
mov
pop
inc
dec
jbe
mov
mov
xchg
sbb
clc
loopne
add
cmp
xor
fcomp
add
cmp
outsl
mov
dec
mov
out
or
pop
popa
jg
mov
add
stc
ror
pop
pop
push
hlt
jp
xchg
js
movl
or
out
aas
aas
pop
add
int
cld
adc
dec
in
and
scas
test
sub
insb
sub
loop
xchg
dec
dec
lahf
inc
push
xchg
cmpsb
js
int
test
in
ja
and
lods
sbb
and
out
add
sub
inc
xorb
hlt
cmc
aas
popa
ret
out
xchg
adc
xchg
andl
cmp
leave
cmp
out
shr
cmpsl
int3
xlat
rorb
mov
mov
push
in
insb
pop
outsl
ljmp
lret
aaa
xor
push
cmc
dec
mov
fldenv
in
push
xchg
or
enter
add
fsts
mov
pop
xchg
addr16
mov
stc
sbb
leave
dec
and
adc
adc
pusha
xchg
outsb
call
or
ret
daa
mov
mov
push
rclb
inc
or
sti
jp
sbb
out
push
idivl
push
cltd
arpl
push
or
mov
push
shrl
in
test
mov
mov
sub
ret
into
fldl
jg
rcr
rolb
push
shl
iret
mov
mov
popa
jb
xor
mov
out
dec
test
rclb
pusha
push
iret
push
pop
in
and
push
sti
inc
mov
mov
cmpsb
mov
out
inc
inc
sti
arpl
js
push
jo
push
lea
sti
ret
add
pop
std
dec
xchg
stos
xor
popf
cmp
sbb
xchg
das
mov
es
lahf
dec
ds
pusha
popa
jge
pop
sbb
add
mov
pusha
bound
sti
sub
loope
lods
lret
mov
mov
imul
jmp
mov
mov
lods
push
xchg
push
pop
cltd
loopne
mov
in
into
imul
xchg
dec
mov
aaa
test
sbb
or
adc
sub
xorw
aaa
and
lret
in
incb
dec
mov
inc
icebp
adc
aad
jl
adc
in
jmp
lock
ror
daa
pop
or
lods
in
jp
adc
test
hlt
pushf
pop
in
loop
cmc
dec
test
xor
jns
jno
ret
pop
test
or
ja
adc
add
movsb
pop
push
sahf
dec
add
mul
hlt
xchg
rorb
js
loop
and
dec
lods
push
sbb
xlat
pop
lea
les
ds
leave
dec
or
sti
xor
xchg
pop
dec
or
mov
mov
lret
or
arpl
add
adc
inc
pop
or
lret
mov
test
aas
inc
pop
std
xor
xchg
mov
ret
cld
lods
arpl
and
mov
fisubs
fnsave
inc
sbb
pop
inc
scas
cmp
push
mov
sarl
test
adc
and
xlat
sbb
xchg
dec
insl
jmp
mov
mov
push
lahf
aam
inc
add
test
mov
stos
push
icebp
xor
ret
inc
arpl
sub
pop
ljmp
add
popa
sbb
cmpsl
ret
dec
ret
pop
jb
mov
testb
lahf
cltd
int
mov
mov
into
loopne
push
cld
jo,pn
mov
mov
mov
add
inc
push
lods
sahf
push
push
inc
fs
fmuls
cmp
sbb
add
or
dec
mov
jae
jg
test
xlat
sub
pop
sub
sbb
mov
int3
ret
and
add
jle
hlt
mov
fwait
inc
hlt
inc
inc
add
movsl
jno
addr16
xchg
pop
jne
adc
sbb
lods
or
aas
enter
xor
ds
aaa
pop
enter
pop
dec
add
cli
aaa
mov
faddl
xor
sub
nop
xchg
mov
push
fsubrp
ror
call
aaa
dec
fcomps
fsubrs
jge
arpl
cvtps2pi
pop
test
dec
nop
pop
mov
xchg
push
add
imul
or
loop
shll
and
out
xchg
inc
dec
xchg
xchg
cmpsl
mov
or
xor
test
sahf
iret
lods
adc
das
xor
rcr
or
leave
aam
adc
xchg
inc
bnd
ds
scas
fsubrp
xchg
jo
test
sbb
mov
jp
adc
test
mov
aas
sub
mov
sub
xchg
cwtl
xchg
and
mov
dec
push
test
pop
iret
xor
lock
add
xchg
push
aam
scas
pop
cmp
add
mov
push
scas
hlt
mov
loop
outsb
dec
movsl
dec
jbe
jp
cmp
inc
rolb
or
sbb
repz
mov
int
xor
daa
ret
aas
push
push
adcb
sbb
adc
pop
popf
roll
lahf
addr16
mov
inc
inc
push
xchg
or
cmpsb
lock
dec
fadd
ret
shlb
lock
lret
lret
xchg
cmovno
dec
loope
mov
out
add
imul
xor
dec
pop
cmpsb
adc
sar
imul
push
out
in
push
in
jns
fwait
sub
jnp
jecxz
fcompl
aad
sbb
adc
sahf
int
cmp
mov
rcrl
ja
imul
inc
fstpt
fwait
ja
lds
jnp
sub
out
mov
data16
jno
movsb
sub
add
adc
push
fnsave
call
cmp
mov
rcll
mov
lret
addr16
and
ret
sub
call
push
adc
sbbl
cmpsb
repz
sbb
push
or
rcll
js
jmp
imul
inc
sbb
outsl
pushf
push
sbb
jp
inc
movl
sbb
xchg
xor
es
sahf
or
and
adc
imul
xor
movl
stos
pop
loopne
xor
sahf
xor
fdivs
cmpsb
lock
repnz
sti
jns
insb
adc
loop
xchg
imul
mov
xchg
jnp
fcos
jecxz
fcoms
lds
cmp
inc
mov
push
mov
xchg
popf
stos
sub
mov
push
inc
stos
aam
mov
das
roll
repnz
pop
pushf
mov
mov
gs
or
out
insl
pop
lea
sqrtps
inc
imul
sbb
testl
pop
int
mov
mov
sbb
ret
push
das
sub
push
or
lods
adc
sarb
fs
aaa
dec
add
sbb
cltd
add
je
adc
add
inc
jl
daa
in
xor
and
lods
mov
sub
cmp
mov
movsl
pop
mov
stos
jno
rcrb
lods
xchg
gs
mov
inc
cwtl
xchg
inc
pop
pusha
xchg
cmpb
frstor
dec
mov
outsb
shrb
and
mov
push
xor
sub
add
push
lods
or
nop
paddsb
out
sbb
aas
jnp
mov
inc
outsb
xchg
or
rcll
sub
cmp
pop
inc
add
std
inc
sub
jge
ds
and
stos
jmp
les
push
scas
dec
inc
add
popa
pop
cmc
cld
jge
add
arpl
and
mov
icebp
js
add
adc
test
jle
fwait
rcrl
push
adc
fnstenv
cmc
jns
add
xor
in
xor
inc
stc
mov
push
filds
stos
cs
es
jae
fwait
dec
push
sub
fs
add
mov
dec
jae
ficompl
fisubrl
movsl
into
sub
mov
mov
sub
add
or
std
aad
in
mov
sahf
cwtl
aam
mov
xchg
jb
pop
pop
adc
pop
or
insl
jmp
pusha
jmp
adc
sub
jnp
add
jp
lods
stc
in
out
dec
ss
pusha
nop/reserved
push
shrl
dec
jmp
push
push
jbe
push
adc
mov
and
mov
in
enter
repnz
pop
sbb
add
and
jb
stos
xchg
sbb
dec
addb
pop
push
sbb
xchg
cmpl
cltd
data16
shrb
push
into
cltd
not
push
ss
fdivs
adc
mov
fmul
shrb
xchg
inc
mov
push
cmpsl
popf
mov
pop
mov
inc
inc
inc
cmp
iret
pop
inc
inc
inc
aaa
and
imul
fucomi
xor
out
jl
or
mov
jmp
or
into
mov
sub
sahf
enter
lcall
add
addl
xor
mov
stos
push
jmp
sbb
mov
push
ss
pop
addl
add
add
jno
shlb
stos
ror
lds
push
mov
icebp
fsts
imul
js
dec
xchg
out
jnp
aas
aam
or
subb
outsb
aaa
mov
dec
jle
movsl
push
sahf
std
sub
fs
or
out
test
or
xorb
xorl
ds
dec
into
test
jne
xchg
xchg
orl
gs
xor
scas
ja
aas
jae
mov
pop
imul
aas
xchg
jne
gs
sbb
push
rcl
jo
cld
enter
or
push
fst
cmpsb
popa
and
mov
outsl
js
push
push
xor
mov
fiaddl
pop
push
sahf
pop
push
sub
movsb
push
stc
sbb
mov
repz
cmc
ret
inc
add
dec
js
mov
push
fs
xchg
xchg
and
ret
icebp
push
xor
dec
fidivl
and
popf
push
pop
pushf
xlat
ja
jmp
cmp
push
andl
aam
andl
insl
fnstsw
imul
adc
out
jl
mov
jge
inc
jne
arpl
push
out
and
inc
cmp
daa
push
repnz
cli
stc
push
nop
idivl
sbb
leave
bnd
pop
mov
scas
xchg
or
sub
loop
adc
dec
in
rcrl
fsubrl
xchg
test
lods
ss
mov
arpl
mov
jo
clc
add
jae
hlt
xor
mov
loop
fwait
sbb
sahf
loope
ror
pop
pop
jae
add
and
sbb
cwtl
xor
aas
pop
push
adc
dec
shll
lcall
pop
mov
in
sti
ficoml
out
fdiv
adc
mov
push
pop
jne
pusha
xchg
js
cmp
dec
xchg
cmp
inc
out
stos
pushl
mov
xchg
xchg
xorl
icebp
or
dec
pop
ja
xchg
int3
mov
cs
push
stc
mov
add
dec
xchg
mov
fdivs
or
cmp
mov
in
mov
jp
call
and
fisttpl
sub
cld
es
pop
jmp
sub
sub
jg
cld
push
adc
xor
push
mov
stc
or
pop
out
inc
fcomip
mov
sbb
int
push
push
sbb
mov
and
in
in
cli
sarl
rorl
daa
js
pop
fadd
lock
and
or
test
jp
inc
add
cmp
and
xchg
sub
ficompl
pop
xchg
push
aas
int
pushf
ds
sbb
xchg
sbb
out
xchg
add
xchg
movsb
mov
cmpsl
xchg
leave
add
in
les
inc
outsl
iret
add
or
xchg
dec
cmp
mov
std
xchg
jb
lods
adc
data16
inc
xchg
add
adc
cli
xchg
add
jno
mov
mov
jns
mov
push
jnp
sub
rcrl
sbb
loopne
inc
imul
push
xchg
mov
nop
cli
add
js
imulb
shlb
fbstp
and
insl
fwait
test
mul
xor
sbb
mov
icebp
scas
sbb
sbb
dec
cmp
test
push
mov
test
scas
in
inc
idiv
mov
cmpl
jnp
out
daa
fldt
aad
add
dec
shrb
fmull
adc
jecxz
cmp
mov
adc
push
scas
mov
aad
rcl
rcll
xchg
push
shll
ja
add
ss
into
jns
sbb
pop
test
xor
in
shlb
aaa
cmp
fnsave
out
adc
adc
xor
adc
cmp
mov
adc
inc
inc
cmc
add
jmp
cmpsb
dec
jne
int
fnstsw
movsl
push
mov
clc
jecxz
add
ror
arpl
fnclex
lea
add
nop
mov
js
mov
xorb
xchg
xor
push
pusha
addr16
orb
in
pop
cmp
in
fcmovnb
daa
shll
push
mov
daa
test
out
arpl
sbb
pop
push
mov
pop
sbb
cmpsl
icebp
or
pop
dec
lds
fs
ret
push
sbb
mov
out
gs
cmp
fbld
inc
mov
bound
imul
pop
pop
test
mov
lret
jl
ljmp
lds
mov
add
and
pop
dec
inc
jb
push
stos
xlat
daa
sub
or
adc
dec
stc
mov
dec
push
data16
inc
loope
lea
add
pop
add
idivb
sub
cmpsb
lods
jno
xor
cmp
ja
pop
imul
mov
aam
pop
sub
mov
lcall
inc
ficoms
sub
sbb
sub
repz
lret
pop
mov
in
sub
push
sub
inc
inc
aam
jbe
sbb
into
movsl
sbb
mov
filds
iret
ret
inc
sti
out
or
addr16
pop
pop
mov
enter
pop
stos
in
xchg
pop
jo
into
jne
aaa
xchg
or
push
into
cmp
ljmp
push
test
jns
sbb
xchg
sub
push
dec
jne
aad
inc
or
cmp
mov
jp
jmp
sbb
fldl
xchg
pop
enter
adcl
cmp
push
ret
dec
sahf
dec
cmpsl
jnp
push
in
std
mov
mov
in
pop
dec
pop
pop
sub
mov
and
mov
das
dec
leave
add
sti
addr16
orl
inc
and
lea
dec
dec
out
fidivrs
mov
aaa
pushf
rclb
push
cs
loope
push
push
pop
xlat
fsts
mov
or
je
lret
fistpll
or
pop
repz
lret
cmp
inc
push
mov
push
clc
stos
shlb
push
jbe
movsl
pusha
gs
jg
or
out
int
movsl
push
jg
xchg
out
pop
mov
inc
lcall
ret
pop
xlat
xchg
clc
fsubl
push
sahf
dec
insl
push
xor
jb
pop
test
dec
iret
push
xor
add
ljmp
adc
mov
fistps
add
and
xor
ss
mov
cwtl
adc
pop
adc
fisubl
repnz
pop
add
shrb
add
xchg
fisubl
rolb
add
add
xor
mov
and
adcb
lcall
cmpl
xor
push
mov
lret
out
xorl
add
mov
inc
das
sarb
lret
into
mov
xor
fidivl
adc
nop
sbb
into
cmp
dec
or
lock
pop
ja
mov
inc
and
cmpsb
xchg
icebp
jb
sbb
scas
sti
mov
push
mov
push
xchg
and
mov
testl
cld
dec
mov
cmpsb
repnz
push
push
and
jl,pn
add
push
enter
inc
pushl
stos
mov
xchg
movsb
push
pop
stc
cld
inc
es
js
int
leave
xor
loop
pushf
mov
ds
std
mov
dec
pusha
add
adc
arpl
xlat
repnz
fisubrl
pop
adc
mov
in
nop
lea
pop
ds
cmp
data16
int
jl
and
repz
call
fs
pop
ja
pop
in
popa
ja
pop
sub
pop
stos
lods
pop
xchg
push
xchg
adc
clc
adc
insb
pop
cmp
mov
cmpsl
rcrl
stos
mov
mov
out
pushf
xor
pusha
test
insb
aas
outsb
xchg
dec
int
cmp
jae
jecxz
xor
sbb
jno
data16
jns
loop
je
imul
popa
push
test
xchg
repnz
call
lret
test
dec
dec
mov
pushw
xchg
add
movsb
inc
xor
fsubrs
ljmp
test
and
mov
aam
adc
cmp
push
push
add
mov
jmp
and
mov
cmp
sahf
sub
inc
push
test
ret
sub
sbb
ficompl
lods
adc
dec
fisubs
loope
xor
push
repnz
cwtl
stos
push
lock
stos
nop
push
dec
into
xor
mov
xchg
fsubp
xchg
cltd
out
jecxz
sbb
sub
and
out
pop
sub
insl
sub
sub
jb
adc
push
sub
int
call
and
aad
pop
mov
or
xor
xchg
out
inc
leave
call
jmp
xor
mov
sub
leave
mov
jno
in
sbb
sub
jge
pusha
xchg
add
cmc
mov
push
adc
cmp
mov
out
adc
inc
test
push
sub
dec
inc
or
bound
and
inc
mov
insb
into
icebp
mov
dec
test
into
xchg
dec
sub
xor
and
rcrl
jno
push
xchg
cld
test
xchg
jge
adcb
ret
fs
ret
fsts
xchg
dec
pop
daa
dec
aam
dec
cmpb
cli
shll
xor
out
test
mov
repz
fsts
push
in
push
pushf
mov
testb
ljmp
jo
repz
inc
gs
repnz
cltd
xchg
fldt
inc
fisubrl
movsb
pop
js
inc
sarl
add
lods
mov
cmp
and
mov
movsb
xor
test
jne
movsl
jecxz
dec
or
scas
dec
fwait
bound
sti
mov
cld
inc
mov
imulb
inc
xorb
and
mov
jae
push
les
sub
sbb
mov
ret
popf
mov
inc
mov
and
lods
es
adc
push
or
jp
movsl
jle
dec
aad
mov
lcall
sub
mov
fists
mov
push
out
cmpb
stos
adc
ret
push
cltd
insb
scas
inc
mov
mov
jne
sarb
sbbb
pusha
dec
mov
push
mov
std
jo
push
mov
imul
and
inc
sahf
or
sub
lret
and
aam
push
movsl
lcall
sub
pop
dec
lods
xchg
das
or
mov
decb
inc
aam
inc
nop
popf
sbb
mov
in
and
jmp
mov
outsb
test
mov
xchg
mov
iret
fdivr
sub
and
push
xchg
add
jns
in
in
aas
enter
mov
andb
xchg
cmp
pop
repz
leave
ja
jecxz
sbb
push
addl
lea
or
ss
jge
cmp
sbb
push
cmpsl
xor
and
sbb
adc
inc
cmpb
xchg
push
add
lret
movsl
add
shlb
cmp
cmp
push
notb
dec
jmp
mov
lahf
dec
dec
sub
sbb
and
loopne
mov
pop
mov
pop
dec
pop
dec
and
pushf
pushf
std
je
push
jns
xchg
scas
rcll
stos
addr16
pop
addr16
outsb
jle
sub
mov
cmpsb
clc
fs
andl
add
cmp
xchg
dec
out
push
mov
add
mov
outsb
xchg
es
out
out
movsl
pop
xchg
andl
outsb
mov
das
cmp
xchg
mov
mov
xor
es
cltd
es
lcall
mov
adc
jb
sbbb
cmpsl
out
adc
adc
daa
data16
bswap
xchg
lds
loopne
xchg
adc
mov
push
cmpsb
test
fwait
pop
mov
jno
ret
mov
jae
dec
mov
paddw
testb
and
cmp
pop
pop
repnz
pushf
test
outsl
xor
cmc
and
cli
adc
jbe
lcall
test
inc
test
test
pop
jle
fdivr
lahf
adc
aaa
cmp
mov
fisubl
test
pop
dec
mov
addl
test
xchg
test
push
notb
mov
xchg
inc
andps
xor
xrelease
xor
or
pop
mov
inc
sbb
sub
jg
insb
sti
jmp
insb
jle
and
mov
rorl
loopne
inc
inc
dec
pop
leave
fstpl
or
test
in
xor
push
or
cmc
leave
or
jno
lods
jb
jne
pop
aaa
jns,pn
scas
ja
mov
test
ret
lcall
dec
fstp
sub
pop
pop
mov
and
mov
sub
ret
jmp
pop
in
lock
fwait
xor
in
dec
test
outsl
pusha
sub
jecxz
fiadds
dec
xor
push
stc
mov
clc
arpl
xor
inc
jo
lcall
stos
adc
les
cmp
clc
push
loopne
test
sbb
or
in
ret
sbb
push
loop
sbb
cmp
daa
xlat
add
cmp
jp
enter
inc
mov
loopne
jg
pop
in
fmul
mov
jae
fcoms
lods
cmc
sahf
movsb
inc
fcoms
aaa
mov
push
mov
mov
mov
fimuls
das
push
pop
and
adc
daa
cmp
dec
pusha
xchg
cld
js
mov
or
test
in
xchg
mov
mov
clc
mov
mov
repnz
dec
inc
inc
jg
push
xchg
cmpsl
pop
aam
lock
mov
movsb
inc
mov
cmp
mov
loopne
or
dec
cmp
roll
inc
inc
inc
adc
loopne
add
xor
xchg
inc
testl
clc
cmp
cli
dec
cmp
dec
and
adc
cld
pop
mov
mov
das
js
scas
push
fmull
jno
xor
push
xor
popf
or
adc
lds
xchg
addr16
iret
in
mov
cs
in
es
scas
pop
and
sbb
lods
mov
push
mov
xor
inc
sub
pop
or
jno
gs
cwtl
mov
clc
sbb
mov
test
mov
or
lret
xor
jae
inc
jmp
std
mov
mov
push
pop
pop
outsl
mov
cs
sub
and
mov
stc
cmc
xorb
stos
add
push
js
faddp
je
add
dec
das
aas
lahf
mov
rclb
das
adc
movsl
push
cltd
loope
and
mov
sarb
inc
cmp
pop
rorb
dec
repnz
sub
shrb
bound
add
xor
les
push
mov
cmp
popa
mov
adc
mov
bound
pop
in
jmp
mov
push
ss
sar
cmc
mov
jge
fdivrl
scas
cltd
fiadds
pusha
xor
pop
inc
ret
jge
orl
decb
mov
and
add
mov
pop
addr16
cli
push
stc
add
add
rol
add
scas
sti
out
js
out
ret
fsubl
out
dec
scas
iret
inc
pop
jmp
out
sub
movsl
xlat
xchg
lret
pop
lahf
movsb
lcall
xchg
inc
pop
ds
ds
outsb
imul
pop
aas
and
jecxz
or
mov
push
inc
loopne
xor
jge
mul
dec
fnstsw
fnstsw
into
les
cltd
sbb
gs
jg
aam
sub
pop
lahf
pop
out
jnp
sub
sarl
lret
mov
pushf
xor
sahf
or
in
jns
cs
cmp
xchg
and
bnd
addr16
out
add
sbb
jo
int3
xchg
sti
xor
div
mov
stos
sbb
insb
aaa
in
dec
sbb
mov
sahf
pop
sbb
mov
xchg
addr16
imull
mov
mov
and
pop
xor
ret
fwait
and
xchg
cmp
nop
sbb
xchg
mov
out
rcll
inc
and
imul
mov
pop
jns
pushl
ret
scas
push
std
in
ljmp
mov
mov
sub
adc
popf
dec
fcomps
add
call
and
xor
imul
nop
lahf
lods
sahf
repnz
movnti
inc
test
and
scas
push
mov
jns
add
mov
fwait
xchg
daa
push
insl
out
subl
add
lds
pop
fbld
push
clc
inc
xorl
xlat
mov
push
cld
negb
popa
popf
push
cli
cmc
pop
repz
mov
imul
mov
push
add
stc
xchg
loopne
test
dec
sbb
cmc
inc
jnp
jmp
inc
dec
and
xchg
mov
lcall
loope
mov
je
repz
fcomps
jne
imul
call
push
cli
stc
sbb
mov
fcoml
adc
rorb
dec
push
test
sbbb
imul
std
xor
jnp
rolb
int
je
aad
out
pop
inc
addr16
adc
idiv
mov
ja
sub
dec
gs
faddl
loopne
loopne
dec
push
ret
jne
lret
pop
cmpsb
mov
xchg
jg
pop
cwtl
push
inc
ljmp
rcl
mov
jbe
jo
xlat
out
jecxz
jae
adc
loopne
je
mul
push
dec
lods
cmp
push
jle
xchg
push
into
pop
mov
ljmp
je
or
push
mov
mov
inc
mov
add
push
lods
mov
lcall
jp
mov
or
adc
out
jle
add
jnp
lret
pop
jp
in
arpl
cmp
jne
push
push
rcl
push
push
sub
lret
jae
sbb
mov
mov
push
stos
mov
mov
cwtl
lcall
inc
mov
loope
andb
lahf
jmp
sbb
add
xchg
sub
pop
std
dec
xor
add
xor
mov
stos
daa
fimull
fwait
mov
mov
out
fadds
add
mov
inc
lret
call
adc
pop
fistpl
jle
xor
mov
or
add
xchg
pop
pushf
call
lahf
sub
imul
sbb
repz
or
cld
sub
lea
and
and
xchg
sub
sbb
leave
xchg
frstor
mov
mov
jns
sbb
xor
jb
jle
sub
push
cwtl
sbb
je
daa
adc
and
push
dec
mov
pop
out
xor
mov
or
pusha
fidivrs
sbbl
dec
push
inc
ljmp
sub
push
arpl
lods
cmp
ds
sti
je
mov
ds
fs
push
cmpsl
jmp
xchg
inc
add
add
scas
jg
pop
mov
arpl
push
jnp
sub
add
add
jbe
xchg
inc
push
jns
cli
jns
test
icebp
jl
mov
clc
lods
sub
fsubl
sti
mov
andb
add
xlat
inc
les
add
dec
cmpsl
xor
sub
fisubrs
imul
cmpsb
sub
pop
cmpsl
push
add
cmpsb
mov
stc
sti
fcomps
arpl
or
call
jp
sub
fsts
loope
lret
mov
add
mov
int3
inc
pop
push
jae
nop
push
or
push
pop
inc
fidivrl
int3
inc
cltd
in
test
cli
sub
jg
ret
sub
add
mov
lods
and
fsubr
popa
jle
in
pop
arpl
cmpsb
int
mov
push
mov
inc
push
sbb
push
loop
ret
out
outsb
pop
cmp
inc
cmc
shll
dec
sub
std
fwait
jl
shll
lock
test
jb
pop
lcall
mov
in
xchg
adc
aad
je
jp
cmp
lahf
adc
cwtl
leave
or
dec
lea
out
popf
sti
cmp
nop
cmpsb
adc
es
sub
fstpt
outsb
sub
fildll
sub
sbb
rcl
jmp
shlb
jae
fstp
imul
cmp
xor
in
jnp
dec
enter
push
add
in
inc
push
inc
mov
jno
xchg
rep
ret
imul
popf
xchg
lock
cwtl
mov
out
adc
and
stc
jbe
sub
scas
jns
aam
fldl
sbb
push
and
cmp
jmp
push
jge
rclb
xor
outsb
jnp
jno
add
inc
push
xor
icebp
add
inc
xor
outsb
dec
das
xorl
jg
dec
lahf
push
jp
adc
sahf
sub
mov
jno
outsl
aaa
stc
pop
nop
jmp
inc
add
pop
xor
ljmp
lock
cs
daa
pop
icebp
pusha
mov
cmp
test
sub
outsl
pop
loope
inc
daa
mov
aaa
repnz
sub
fistl
sub
js
out
icebp
leave
sub
jbe
das
repz
lds
div
repnz
nop
pop
xchg
sbb
outsb
push
xchg
mov
call
in
out
loope
sbb
dec
jecxz
lahf
push
add
or
rorl
mov
pop
inc
sub
xchg
pushf
cmc
jmp
add
inc
leave
pusha
cmp
lahf
mov
hlt
icebp
fisttps
jnp
stos
and
icebp
mov
sbb
sbb
movsb
jne
pop
mov
ret
out
mov
movsb
cmp
jo
cltd
ret
adc
sub
punpckhdq
ds
push
sbb
std
sub
movsb
cmp
adc
dec
jmp
adc
in
or
sbb
adc
lock
push
sbb
les
mov
inc
fsubp
dec
into
aas
inc
dec
mov
cmp
mov
push
pop
add
lret
dec
xor
fiadds
repnz
push
or
je
push
add
nop
mov
xchg
jbe
mov
das
adcb
cmpsb
xchg
mov
mov
sbb
lret
push
pop
inc
bound
inc
shlb
mov
popa
cmp
push
cli
call
push
repnz
pop
pop
cli
lods
push
je
aam
push
and
cld
jg
dec
lea
sahf
or
in
cmp
out
inc
mov
js
std
adc
jo
jg
ret
jne
mov
sti
xor
sti
pavgw
clc
jge
dec
push
rclb
bound
stc
or
mov
mov
test
call
xchg
push
mov
imul
or
sbb
cmp
loopne
insb
je
or
xchg
dec
cmp
inc
loope
add
mov
cmp
lock
push
addr16
pop
and
daa
mov
jbe
imull
and
lret
sub
mov
pop
inc
push
pop
fisubrl
arpl
mov
sub
movsl
mov
pop
cwtl
push
xor
popa
out
scas
add
sbb
push
add
pop
fs
data16
sbb
pop
cs
rclb
and
mov
pop
sub
int3
sbb
or
jbe
mov
filds
mov
cmpsl
or
cmp
pop
sarb
hlt
mov
push
cmp
loopne
jbe
cli
mov
mov
outsb
and
or
push
subb
ret
sbb
movzwl
cltd
sub
es
push
les
addr16
dec
xor
jbe
sbb
cmc
cltd
mov
cmpl
arpl
lods
inc
jle
mov
rcr
mov
cmc
loopne
jp
add
xchg
mov
out
add
dec
test
push
repnz
aaa
aad
call
lahf
push
out
js
sub
pop
mov
rorb
push
and
xchg
push
sub
mov
call
lock
or
lret
pop
clc
mov
push
insl
shll
enter
jbe
lret
scas
lret
notl
loop
xchg
adc
mov
repnz
xlat
loopne
or
addl
into
xchg
mov
adc
mov
ffree
test
mov
mov
xor
sub
adc
xor
push
pop
inc
loopne
jbe
pusha
cld
fs
adc
pop
mov
mov
jne
mov
or
inc
push
mov
daa
int3
lock
out
fidivl
stc
fildll
jmp
mov
xchg
fstl
sbb
jmp
jne
cmp
repnz
jle
xorb
xchg
dec
popa
mov
sbb
xchg
addr16
sub
sub
dec
call
cli
shlb
mov
mov
sub
or
stos
js
mov
adcb
ror
dec
pop
inc
out
mov
pop
out
repz
jae
mov
scas
push
ret
lock
movsl
dec
andl
repnz
fsubrs
xchg
pop
pop
mov
insl
adc
mov
jns
xchg
leave
scas
mov
or
jmp
mov
jns
sub
dec
push
sub
mov
ficoms
sbb
dec
add
xchg
mov
imul
in
imul
stos
enter
shl
aaa
push
andb
ret
mov
fs
xchg
xlat
sbb
cltd
repz
jecxz
mov
lar
pop
insl
inc
iret
push
addr16
out
movsl
mov
pop
dec
adc
leave
and
mov
xor
add
push
mov
xlat
clc
sbb
dec
int
xor
add
xchg
mov
push
pusha
ss
xchg
addr16
cli
xchg
pushf
sbb
sub
dec
int
mov
xchg
xor
xchg
fwait
leave
jb
mov
fcoml
cmp
add
pusha
inc
jg
clc
test
es
jecxz
ljmp
jmp
decb
or
sbb
xlat
dec
xchg
mov
adc
adc
pop
push
aam
lea
and
mov
scas
xchg
shrb
imul
push
loop
in
insl
cmpsl
adc
mov
aas
xchg
andl
push
fdivr
sbb
mov
sub
push
add
and
mov
dec
pop
js
inc
mov
sub
adc
jl
lods
fincstp
jnp
aas
hlt
xor
mov
dec
pusha
enter
lock
sbb
dec
mov
cmp
inc
xchg
scas
filds
cmc
mov
pop
popa
xchg
pop
orl
push
xor
pop
add
rolb
add
inc
loopne
pop
push
ljmp
and
sti
cwtl
xchg
adc
jg
arpl
mov
pop
pop
dec
pop
mov
push
xchg
ret
add
das
cmp
jmp
xchg
push
stos
jbe
jns
jno
lahf
inc
mov
jmp
icebp
ljmp
iret
push
xchg
jecxz
xchg
sub
in
out
xchg
js
fisubs
sbb
push
dec
orl
pop
testl
mov
dec
mov
clc
mov
add
mov
loope
jnp
movsl
cmp
popf
fistps
pop
sbb
adcl
inc
mov
xchg
cmp
mov
adc
mov
fsub
sbb
or
jnp
repz
sbb
sub
sub
lods
mov
dec
mov
fisttps
out
loopne
xchg
sbb
mov
dec
fcompl
aad
lds
inc
mov
imul
mov
jmp
xchg
out
subl
inc
mov
aam
ret
popf
sbb
stos
cs
push
add
cmp
or
popf
push
mov
faddl
add
dec
xchg
xchg
shl
subl
test
rol
out
stos
cmpsb
inc
outsb
sbb
cmpb
pop
dec
sbb
dec
dec
sub
cwtl
pop
bound
dec
les
in
xor
cmp
shll
xor
jno
dec
imul
fwait
pop
jmp
lock
add
add
adc
cmpsb
rcll
cwtl
call
and
test
scas
mov
jo
pop
fstl
imul
les
hlt
xchg
fdivrp
or
roll
mov
stos
aas
pusha
fdivrl
lea
repnz
cld
dec
mov
xor
test
call
jns
add
dec
pop
push
sub
sti
xchg
pop
dec
mov
pop
pop
inc
pop
pop
andb
jge
lds
push
out
pop
dec
or
loop
mov
call
sarb
sbb
dec
pop
imul
or
movsl
fstl
ja
out
mov
push
jb
jns
add
orl
add
fistps
cmp
pop
mov
mov
addr16
xor
stos
daa
push
cld
sbb
inc
fwait
sbb
or
insb
jl
shlb
loopne
add
jne
jecxz
sub
loop
inc
movb
loope
sbb
andl
stos
mov
push
xchg
push
scas
ret
imul
add
out
je
rolb
and
shlb
cmp
fisttpll
sub
add
in
push
xchg
dec
sarl
sub
xchg
test
mov
lds
push
ja
mov
dec
cwtl
inc
sahf
ret
pop
mov
pop
push
shlb
sbb
mov
lret
add
imul
push
inc
cmc
push
js
jge
push
inc
xchg
imul
andl
imul
arpl
out
rclb
stos
adc
pushf
xor
aam
dec
out
jle
frstor
out
loop
scas
ret
aam
adc
insl
dec
lods
fcmovbe
mov
dec
dec
repz
xchg
enter
mov
repz
mov
cmc
add
cli
shlb
cmp
in
push
cmp
inc
neg
not
cs
cwtl
sub
sahf
add
int3
mov
insb
push
mov
pop
scas
jo
cmc
out
sti
ret
cmpsl
cmp
or
ljmp
pop
test
loopne
or
push
sub
mov
jno
pop
push
not
sahf
pop
adc
xchg
dec
mov
fbld
add
xor
jbe
cmpb
aam
sbb
jns
orb
stos
push
push
sbbb
gs
enter
mov
out
mov
mov
pop
cs
jbe
out
mov
mov
inc
pop
sti
or
mov
mov
or
xchg
lods
push
pop
outsb
push
mov
inc
loop
loope
and
jmp
mov
mov
fmuls
or
push
push
add
sbb
xor
andl
sarb
cmpsl
push
and
mov
and
or
mov
or
add
loop
mov
int
pop
fisttpll
sbb
mov
cmp
ljmp
inc
mov
jbe
adc
pop
xor
jae
dec
into
pusha
xchg
mov
inc
xor
sbb
insl
push
xchg
pop
pop
iret
mov
sbb
out
mov
iret
xor
add
out
gs
push
jle
push
cmp
in
mov
and
inc
mov
enter
and
imul
mov
stos
and
xchg
and
out
out
lea
fldl2e
insl
rclb
xchg
call
sub
push
push
dec
dec
lret
out
inc
inc
movsl
push
mov
sbb
and
cmc
jmp
push
adc
int
jb
mull
sahf
and
pop
dec
dec
xor
add
int
add
cltd
jmp
std
lock
cmpsl
std
and
popf
add
adc
out
in
jecxz
test
fwait
js
mov
cmpsb
add
mov
push
cmp
lcall
aad
pop
sub
inc
je
bound
and
cmp
cmp
and
in
sti
out
mov
lock
stos
ret
mov
push
pop
pop
in
mov
jne
daa
hlt
and
shrl
xchg
pop
daa
pusha
push
push
popa
cmpsl
jg
adc
add
or
fbld
in
enter
js
mov
or
lods
mov
and
inc
or
test
mov
in
jge
rolb
jne
popf
es
adc
fcomps
scas
and
mov
clc
mov
idivb
ror
call
add
xchg
inc
push
iret
jl
and
mov
jae
enter
and
adc
push
sbb
shl
cmpsb
pop
mov
sbb
int3
mov
je
xor
mov
mov
mov
filds
pop
insb
pop
int3
int3
mov
clc
mov
push
sarb
sub
and
test
stos
sahf
push
lcall
popa
sub
loop
cs
mov
fs
cwtl
adc
adc
xor
or
cld
outsl
loop
sti
push
sub
dec
cmpsb
dec
mov
xor
es
call
sbb
cmp
mov
aas
in
bound
and
pop
ret
mov
xchg
orl
pop
sahf
pusha
out
jecxz
jp
outsb
mov
sub
out
or
and
xor
or
pop
xchg
push
lods
pop
pop
inc
jl
cli
testb
mov
mov
mov
push
mov
repnz
ficompl
mov
adc
cmp
add
adc
pop
int
inc
pop
pop
divb
push
in
in
mov
and
es
loopne
test
andl
insl
lcall
clc
and
jae
div
out
sbb
sbb
mov
out
jle
ja
lods
jb
loope
push
adc
mov
xor
out
push
outsl
cmp
ss
subl
call
repnz
imul
cmp
insb
rcr
xchg
mov
or
pop
jne
mov
popf
subb
int3
packuswb
xchg
fiadds
mov
push
dec
cwtl
call
cmp
push
insl
or
nop
stc
ficompl
popa
mov
into
out
out
call
jg
sbb
mov
push
enter
cli
cmp
inc
shlb
stos
add
pop
mov
mov
sahf
push
pop
into
adc
fisubrl
adc
dec
jae
ret
ljmp
and
mov
push
dec
movsl
sbb
pop
or
inc
mov
mov
sub
test
pop
rcrb
inc
fisubrs
jecxz,pn
mov
fnstcw
jecxz
push
into
or
or
mov
add
loope
arpl
jmp
js
mov
mov
jbe
add
insb
jle
outsl
mov
ss
out
sbb
cmp
push
adc
fldcw
mov
mov
lret
inc
fistpl
sub
icebp
insl
adc
je
mov
pop
loope
adc
sub
add
inc
xchg
xchg
mov
cmp
add
xchg
cmc
or
fadds
ficoml
inc
mov
xor
pusha
add
inc
push
cmp
dec
fildl
dec
scas
xlat
in
mov
or
push
nop
scas
test
xor
lret
aas
movb
xor
mov
cmp
inc
test
test
jecxz
inc
leave
xchg
xor
ret
shl
xor
mov
leave
subl
xor
in
adc
jae
das
dec
xchg
jl
or
adc
cld
cmpsb
mov
xchg
mov
mov
ljmp
push
push
shll
add
popa
or
jne
jp
lods
jae
mov
iret
pop
add
shrl
pop
or
imul
adc
pop
or
imul
ds
mov
rcll
outsl
xchg
mov
inc
filds
xor
arpl
dec
fsubrl
stc
call
test
lret
add
stos
mov
sub
imul
push
push
inc
les
in
adc
roll
push
sbb
push
lods
inc
ds
cmc
push
jle
mov
ss
xchg
xchg
jae
popf
gs
das
fisttps
sub
and
pushf
inc
mov
stos
mov
scas
push
fcoml
ja
xchg
add
cmpsb
add
sub
sub
sahf
fs
add
iret
lds
mov
movsb
les
loopne
push
cs
inc
xor
ds
pop
fidivrs
jne
lret
mov
icebp
jno
hlt
data16
orl
outsb
imul
mov
shll
sub
add
or
and
adc
into
push
push
xor
scas
cltd
xor
push
into
loopne
fsubrs
into
leave
xor
fisttpll
xchg
add
mov
add
inc
inc
sub
aam
and
mov
sahf
in
in
out
mov
sbb
ret
jno
aad
out
xor
es
fnsave
repz
wrmsr
iret
inc
push
xchg
fistpl
mov
cs
out
stc
lcall
pop
adc
aas
fs
sub
inc
mov
aas
jae
inc
jge
ja
adc
cmp
jbe
lods
sub
and
mov
jge
lcall
jge
fdivr
inc
jg
leave
xchg
or
sbb
inc
stos
fldcw
jno
sarb
mov
cmp
test
loope
aad
fwait
nop
int3
out
clc
sarb
nop
lods
and
dec
rcll
or
pop
icebp
xor
push
imul
push
jp
cli
fisubl
paddd
or
cmp
orl
loopne
fwait
pop
mov
outsb
jnp
cmp
mov
inc
movsb
xor
and
pop
dec
mov
xchg
and
and
sub
xor
inc
rorl
pop
jp
pop
fcomi
call
push
pop
cld
adc
sbb
les
ja
adc
xor
jmp
fidivrl
push
lret
ds
mov
inc
fwait
cmp
jns
sbb
pop
or
fwait
addr16
push
xchg
xchg
popa
fwait
lock
mov
push
shlb
shl
mov
adc
jl
mov
idivb
and
sub
je
lods
xchg
imul
dec
arpl
imul
enter
daa
adc
sbb
mov
sub
out
pop
test
cmp
dec
mov
push
imul
fs
dec
jns
dec
nop
dec
mov
inc
pop
and
adc
rol
sub
in
pushf
add
adc
jp
lods
movd
jne
arpl
pop
repnz
stc
mov
stos
xor
push
adc
mov
int3
stos
fwait
dec
in
fdivs
xor
repz
push
jnp
sub
gs
sub
sub
fldenv
sub
int
or
out
shll
or
inc
roll
adc
mov
xchg
inc
loope
add
pop
mov
pop
xor
xor
or
repz
adc
jge
sbb
inc
sub
out
fistpl
mov
inc
sbb
sub
ds
push
push
pop
jl
rolb
mov
cltd
mov
aaa
mov
ror
mov
pusha
std
ds
and
push
pushf
scas
or
aam
sbb
push
push
stos
fbld
jmp
cmpsl
and
loopne
iret
rorb
gs
sub
sub
shl
arpl
and
jp
xchg
xchg
mov
mov
pop
cmpl
push
nop
cltd
sti
dec
dec
pushf
jmp
pop
fwait
out
mov
mov
scas
mov
ja
loope
mov
push
addr16
lods
imul
fwait
pusha
aad
loope
rcrb
movsl
mov
insb
test
xchg
enter
dec
cmc
lret
cs
daa
mov
test
cmp
push
sbb
push
out
mov
in
ret
mov
into
jp
pusha
cmp
pushf
popa
mov
mov
sahf
pop
push
sub
dec
in
mov
test
cmp
jg
insb
and
shlb
test
out
adc
inc
jle
cli
ljmp
lods
mov
pop
and
cmpsl
nop
push
addr16
aam
pop
adcb
mov
inc
mov
push
in
pop
fimuls
pop
bound
push
fidivs
pop
repnz
adc
ret
inc
mov
call
push
adc
push
dec
fiaddl
push
jecxz
popf
or
push
sbb
jo
jnp
pushf
push
jmp
cld
hlt
mov
jmp
cmp
insl
scas
xor
jmp
imul
stc
iret
mov
sbbl
out
movsb
jle
fs
icebp
sub
and
mov
fists
add
push
cmp
inc
in
mov
sub
cmpsb
cmp
daa
pop
icebp
mov
es
cld
sub
call
loope
adc
rcrb
ret
bound
mov
mov
dec
fidivl
stos
iret
cmpsl
jbe
dec
jmp
cmpsb
nop
lods
adc
mov
jae
mov
jecxz
xchg
and
pop
testl
cmp
hlt
and
sti
mov
xchg
aaa
ja
jnp
mov
test
flds
sbb
mul
in
or
mov
mov
addr16
lahf
bound
sbb
jbe
aad
lahf
mov
fwait
aas
lcall
and
dec
mov
mov
out
sub
sbb
push
mov
scas
cmp
loopne
xchg
add
repnz
jle
lea
leave
dec
test
mov
loopne
or
mov
stc
push
test
fimull
push
or
js
aas
lahf
fsubl
in
adc
mov
and
in
xor
orb
xchg
jne
clc
adc
pop
sarb
inc
mov
cltd
imul
add
mov
pop
pop
inc
aaa
shrb
push
cmp
add
sbb
dec
pop
or
cmp
pop
pushl
sahf
leave
inc
pop
pusha
mov
sub
aas
pushf
test
dec
add
inc
insb
cmp
bound
jnp
imul
pop
inc
cmp
aad
scas
sub
adcb
je
stc
icebp
push
cmpsb
lods
or
das
ficoml
aaa
xlat
xlat
nop
inc
fdivl
int
pop
int
addb
xchg
fdivrs
add
pushf
lcall
lret
hlt
mov
rolb
cmp
cmp
mov
and
inc
fsub
cli
dec
jge
cmpsl
jle
jecxz
call
jnp
inc
pop
out
mov
xor
outsb
xor
sub
test
aam
and
iret
adc
test
cld
lock
lods
pop
cmpsl
shlb
aaa
bound
or
push
shll
aas
jg
pop
insl
and
push
out
add
je
popa
and
jg
repz
loope
rolb
add
xchg
and
sub
out
adc
repz
stos
push
or
pushf
out
fcomps
mov
push
xlat
in
cs
xor
js
aad
jp
loopne
inc
popf
lret
outsb
jl
nop
and
or
test
mov
push
scas
mov
insb
jp
outsb
inc
mov
lods
lods
mov
lods
push
push
mov
insb
notl
ljmp
inc
mov
ja
lcall
mov
lret
add
mov
daa
into
lods
cmp
mov
in
sahf
das
xor
shll
mov
dec
aas
testl
je
test
test
and
jmp
inc
mov
dec
aas
negl
fiadds
psrad
add
sbb
mov
xor
push
adc
adc
xchg
enter
lcall
int
inc
or
into
xchg
test
and
adc
outsl
mov
mov
or
xchg
rcrb
sti
cmpsl
pop
xlat
sbb
mov
push
insl
arpl
adc
sub
push
incl
ja
xchg
adc
or
pop
and
xorl
inc
xchg
jo
inc
repz
pop
mov
add
dec
cmp
mov
dec
hlt
xchg
pusha
loop
sbb
int
cmc
mov
jmp
xchg
mov
std
mov
inc
dec
mov
cmpl
lods
test
dec
push
pop
mov
jle
pushf
mull
rcrb
adc
mov
inc
or
xor
mov
lds
xchg
sahf
imull
and
cwtl
pop
or
inc
mov
fsub
enter
in
dec
mov
cmp
cld
out
fldl
sub
test
or
aad
pop
push
lret
add
in
adc
push
cld
xor
shld
insb
aad
shrb
into
mov
icebp
lds
in
cmp
inc
dec
pusha
adc
or
ds
mov
fs
add
pop
call
ja
das
add
mov
push
xor
wrmsr
jae
lea
mov
xor
inc
and
jno
lcall
nop
push
pop
jle
jno
and
repz
ret
mov
mov
fistps
inc
int3
cmp
aam
loope
fcomps
push
aam
mov
xor
jp
adc
mov
sub
adc
and
pop
jge
cmp
adc
dec
xchg
xorl
imul
sbb
bound
sub
iret
lock
and
pop
ja
cld
jbe
jmp
cmp
in
ja
cmp
inc
jmp
sub
lret
pop
add
or
xor
data16
adc
sub
jo
mov
push
fwait
popf
stc
sub
mov
xchg
and
push
in
mov
inc
sub
lret
imul
das
insb
pop
dec
dec
mov
mov
jl
in
lods
or
rcll
fldcw
int3
movsl
pushf
dec
fildll
int
mov
mov
lods
int
jns
pop
enter
rorl
and
inc
gs
insl
adc
test
and
in
xchg
push
lds
push
mov
addr16
aad
mov
sbb
and
cmpl
ljmp
push
fwait
push
js
test
je
not
out
jne
mov
pop
or
jns
leave
int3
cld
hlt
das
push
idivl
jl
xor
in
pop
std
push
mov
pusha
js,pt
rcl
sbb
popa
mov
mov
mov
cmc
fdivrp
shll
mov
cwtl
enter
xchg
mov
dec
int
enter
loop
clc
mov
or
xchg
ja
jae
call
js
lods
in
xor
cmp
lock
jl
pop
cs
clc
mov
push
subl
lds
lcall
bound
pop
xchg
jle
scas
bound
iret
daa
add
sar
pop
out
mov
test
test
sbb
js
insl
push
ds
xchg
repnz
inc
insl
sbb
pop
or
inc
add
mov
lcall
clc
repz
outsb
push
idivl
inc
outsl
cmpsb
addr16
aad
es
movsl
cmpsb
mov
pop
mov
and
xchg
mov
mov
pusha
roll
jecxz
mov
dec
outsb
and
mov
jmp
push
es
xchg
sbb
pop
in
xor
stos
gs
mov
jo
cwtl
xor
lods
adc
cmpsb
jb
or
and
sub
xchg
push
sbb
les
dec
and
gs
cmpsb
lahf
scas
mov
hlt
scas
adc
cmp
movsb
scas
or
lea
loop
cmp
dec
xchg
mov
shll
mov
mov
test
pop
out
outsl
data16
jl
insl
mov
loope
fwait
cli
mov
xor
test
mov
fs
es
cwtl
dec
jmp
cmp
jbe
icebp
inc
or
ss
or
or
sbb
xor
sub
push
idivl
inc
sub
pop
xchg
decb
sbb
push
mov
sub
lcall
dec
xchg
push
imull
fldt
pop
pop
inc
js
imul
push
sbb
mov
sub
hlt
pop
sbb
inc
dec
mov
or
cltd
ss
lods
sub
xchg
int
adc
nop
cmp
andb
push
insl
clc
pop
adcl
test
xchg
movb
push
movsl
jecxz
outsb
aaa
or
inc
adc
popf
jmp
movsb
fldenv
add
xchg
lahf
xor
push
int3
sbb
add
jb
push
push
xchg
pop
arpl
pop
push
in
in
sbb
xchg
cmp
in
dec
pop
out
mov
data16
imul
out
xchg
cmp
int3
xchg
xor
cltd
jmp
mov
cmpsb
mov
mov
repz
das
pop
xor
adc
data16
pop
pop
xchg
in
aad
sbb
in
cmpb
addl
ljmp
inc
clc
ja
shll
xchg
jmp
or
jns
ret
push
pop
in
test
rcrl
cmc
aaa
das
repz
jmp
lret
cmp
rol
inc
addr16
xor
fwait
jbe
push
xor
mov
data16
dec
hlt
pop
push
in
xor
dec
pop
sbb
push
addb
sub
mov
shlb
xor
hlt
fbld
or
mov
loopne
fistps
cltd
aaa
cwtl
out
mov
mul
jg
xor
jecxz
insl
pushf
lds
xor
aas
mov
rolb
add
xchg
pop
sbb
cltd
push
insb
pop
xlat
adc
in
clc
pop
xor
aam
jmp
sbb
int3
mov
add
mov
sub
sbbb
rclb
mov
mov
lds
dec
pop
push
cmp
aaa
or
into
lret
inc
cli
out
fnstsw
ret
test
cmc
pop
add
fildl
test
popf
inc
inc
movsl
mov
push
lret
add
mov
inc
mov
pop
cmp
adc
icebp
aaa
scas
cmpsl
aam
jmp
cs
push
mov
das
lods
lcall
inc
in
sub
ret
stos
icebp
clc
iret
sub
lcall
or
mov
mov
aaa
scas
in
addr16
add
dec
test
fdivrs
gs
adc
xchg
int3
loope
xchg
ret
insl
push
pop
mov
mov
sub
out
xchg
mov
mov
and
sub
mov
mov
pop
cmc
popa
mov
in
imul
out
pop
and
add
lods
call
xchg
pop
sarl
sub
das
addl
ljmp
fsubl
jg,pt
mov
mov
cmp
jl
call
cmc
outsl
or
mov
test
xor
and
push
pushf
add
imul
mov
out
inc
rorb
sbb
push
lret
arpl
sub
loop
rcrl
insl
mov
ret
mov
cmp
mov
ret
push
pop
jg
inc
jmp
jle
decb
jmp
or
ljmp
scas
sahf
xor
pop
cmp
dec
lret
jb
rolb
inc
stc
push
xor
int
mov
jle
jbe
inc
popa
lds
sti
out
or
sarb
adc
cmpsl
xchg
dec
dec
loop
inc
ja
jo
cmp
cs
push
jg
add
and
jg
aad
or
cmp
stos
sbb
pop
pop
xchg
xor
xchg
or
xor
dec
outsl
or
repnz
das
mov
loopne
enter
push
pop
rcr
std
sub
pop
fwait
loope
or
xchg
das
fisubs
mov
jb
js
andl
lods
out
inc
cmpsb
nop
pop
cmp
mov
call
idivl
cmp
push
sub
scas
jge
in
mov
jle,pt
push
xchg
ret
lea
cmp
scas
add
push
push
sbb
pop
dec
daa
jns
jb
inc
test
filds
call
pop
xchg
out
lock
xor
addb
and
adc
cwtl
pop
sbb
push
bound
rolb
xor
mov
fcompl
cmp
jb
pushf
outsl
ds
arpl
dec
lcall
scas
sbb
push
pusha
outsb
data16
out
in
inc
ret
dec
dec
pop
movsl
call
out
mov
dec
fwait
sti
inc
lahf
pushf
mov
jmp
pop
lret
addr16
cltd
mov
fwait
es
fisubrs
mov
int3
sbb
lret
add
and
call
mov
jecxz
ret
xchg
test
stos
sub
dec
push
lds
clc
add
add
imul
jp
or
or
mov
adc
sbb
pop
loopne
rorb
icebp
dec
push
pop
add
fidivrs
ss
aas
and
lret
jmp
xor
outsl
ret
stos
hlt
cmpsl
sahf
std
add
mov
sub
js
pop
push
loope
cmc
pop
jle
push
call
adc
lods
sbb
test
jmp
xchg
add
mov
lock
xor
sub
aad
outsb
inc
inc
add
jmp
stc
testl
push
push
and
rorl
pop
scas
sub
mov
cmp
sub
inc
pop
or
and
daa
out
mov
leave
inc
out
mov
adc
xor
nop
cld
fimull
and
imul
sahf
sbb
xor
imul
fildl
popl
nop
xor
mov
inc
xchg
test
push
push
and
fnstsw
leave
push
lcall
in
insb
aas
jae
fisubl
dec
out
daa
mov
std
add
add
insb
shlb
adc
cld
pop
ja
mov
pcmpeqb
push
scas
mov
mov
scas
xor
and
sbb
aas
shr
mov
stos
jno
in
lods
mov
sub
cmp
hlt
jo
std
jl
stc
jnp
inc
add
mov
out
cmpb
in
jae
mov
xor
test
xorl
xchg
movsb
sti
into
inc
in
scas
cld
and
in
xor
inc
adc
push
mov
fisubrs
std
ja
pop
ror
pop
mov
jmp
and
inc
bnd
mov
xor
mov
jbe
mov
xchg
pushf
fnstsw
sub
rorl
xchg
mov
imul
and
mov
ret
push
ret
loope
leave
push
insl
pushf
fnstenv
push
mov
fbstp
mov
mov
in
imul
xor
inc
jnp
hlt
sbb
add
mov
es
arpl
adc
outsb
push
inc
shrl
pop
neg
pushf
jns
mov
mov
inc
sub
ljmp
daa
push
stc
mov
push
xchg
dec
inc
mov
scas
mov
ljmp
cld
rolb
insl
ret
in
int
xor
sub
mov
jae
pop
xchg
icebp
pop
dec
es
insb
inc
adc
adc
jecxz
add
loop
sub
add
dec
mov
mov
mov
int
stc
testb
out
loop
mov
and
or
mov
stos
hlt
repnz
popa
or
jne
daa
push
cmp
loop
add
inc
adc
jmp
xor
lods
sub
cmp
cmpsl
pop
roll
in
mov
shlb
mov
movsb
pop
xlat
repz
xchg
ret
rclb
enter
and
mov
enter
dec
inc
xor
mov
add
dec
mov
cmpsb
cld
xchg
sbb
mov
pop
xchg
xchg
xorl
cmpsl
sti
mov
or
nop
or
cli
jns
mov
lea
idivl
sbb
cmp
aas
sbb
cmp
fmull
into
mov
xchg
clc
dec
lods
and
xchg
rolb
xchg
push
pop
repnz
jp
mov
jmp
outsb
cmp
mov
pop
xlat
and
mov
xchg
and
jns
cmovae
bound
jnp
aam
jbe
mov
scas
je
jb
test
in
mov
and
clc
aad
pushf
and
push
mov
or
sahf
lds
xchg
pusha
enter
cmpsl
mov
cmp
aaa
jmp
inc
adc
adc
xchg
adc
mov
dec
out
les
call
ret
sbb
sub
push
jp
je
popa
cs
push
xor
lret
stc
je
xchg
jno
jl
mov
push
and
sub
mov
aad
or
iret
pop
push
push
push
int
ret
xchg
dec
sahf
sar
arpl
add
add
nop
fs
stos
cli
out
push
outsb
pop
daa
pop
ret
cmpsl
bound
int3
jmp
inc
fucomp
add
mov
pop
scas
pop
divb
stc
inc
mov
outsb
adc
lea
jns
aad
addr16
and
leave
enter
push
adcb
push
mov
mov
fimull
cwtl
stc
popf
sub
push
ljmp
cmp
add
or
incb
rcrb
andl
push
movsl
out
cmp
orb
jp
and
jnp
sbb
inc
mov
sbb
push
nop
int
xor
pop
rcrl
stc
jae
hlt
addr16
cmp
xchg
idivb
inc
or
mov
int3
negb
sbb
pop
adc
sub
pop
loope
lods
jp
dec
inc
loope
xchg
add
pusha
sub
ljmp
jmp
sbb
int
dec
or
movsb
movsl
or
add
ss
dec
push
insb
insl
push
add
leave
fcompl
inc
add
lret
inc
xor
ficoms
fisubrl
xor
into
pop
pop
jge
fst
pop
insb
xchg
or
sbb
push
mov
mov
loop
pushf
sbb
mov
dec
jae
stos
inc
mov
andl
mov
adcb
push
pusha
jg
loop
rcrb
add
push
andl
sub
jno
xchg
push
mov
pop
not
adc
mov
dec
cltd
sub
push
mov
add
popf
shlb
pusha
stos
mov
push
clc
fnstenv
sub
out
push
xchg
shll
mov
cmp
sarl
sub
daa
jae
sub
out
inc
lahf
ds
dec
clc
adc
mov
roll
mov
out
fcomps
xor
outsl
sbb
jno
outsb
loope
cmp
inc
faddl
popw
stos
dec
scas
sti
jmp
arpl
sub
adcl
loope
mov
pop
pushf
dec
jae
xlat
pop
call
xchg
lds
int3
loopne
ret
push
cmp
xchg
inc
out
leave
mov
xchg
inc
inc
cmp
lock
mov
fcmovu
cmp
sbb
out
mov
pop
adc
out
fiadds
cmpsb
fisubrs
pop
lahf
std
xchg
inc
iret
dec
insb
sbb
out
cwtl
fcmovnb
xor
and
shrl
cmpsl
jle
popa
inc
and
mov
push
and
mov
push
pop
pop
push
xchg
insb
jmp
cmc
inc
xchg
adc
dec
and
jp
fiadds
jbe
inc
push
out
adc
mov
loopne
das
fmuls
nop
cltd
dec
idivb
je
loop
xorl
cmc
lea
in
pop
mov
dec
push
in
mov
push
push
mov
mov
pop
int
or
mov
add
push
mov
in
jecxz
jge
sbb
push
shll
sub
fs
mov
mul
cs
out
add
dec
daa
mov
js
shll
icebp
in
ret
inc
cmp
push
or
mov
xor
lret
enter
xchg
enter
movsb
in
jae
outsb
push
je
andl
mov
imul
inc
cmp
js
push
fldcw
dec
hlt
ret
ret
inc
pusha
pop
addr16
insb
test
movsl
sub
imul
orb
sbb
add
xchg
clc
ja
adc
adc
stc
adc
das
cmpsl
pop
sub
xchg
inc
popf
out
lods
mov
fsubrp
cmp
pop
and
aam
iret
cmp
call
cmp
mov
dec
bound
add
testl
pop
dec
negb
lret
and
jge
in
dec
sarb
adcl
sbb
inc
mov
cmp
outsb
imul
in
nop
aaa
out
in
sbb
call
mov
inc
inc
clc
mov
lahf
iret
dec
xchg
scas
pop
adc
clc
mov
out
pop
into
xor
scas
mov
loope
inc
cmpsl
aas
jl
mov
int
sahf
sbb
stc
adc
adc
sub
adc
cmp
jmp
sub
cwtl
imul
mov
jnp
xchg
inc
test
fdivrl
mov
jge
insb
pop
pusha
mov
xlat
negb
fisubrl
or
xchg
and
mov
lock
ret
test
mov
pop
xor
cs
pop
leave
lods
les
clc
mov
ljmp
xchg
cmpps
xchg
lods
dec
adc
lock
xchg
pusha
inc
into
mov
rclb
adc
cmc
das
lods
lahf
sti
in
mov
lea
sbb
jg
sahf
sub
fwait
aam
jmp
cmp
dec
imulb
icebp
mov
lret
scas
and
jmp
hlt
dec
mov
dec
xor
into
xor
adc
in
pop
lcall
nop
loop
out
adc
mov
inc
sbb
pushl
pusha
mov
ja
jg
iret
clc
jne
les
ficomps
jnp
orb
push
testb
cli
xchg
jbe
icebp
out
subb
sbb
mov
push
std
stc
cld
insb
imull
iret
and
inc
lea
in
rcr
sti
pop
jg
jecxz
ljmp
jmp
adc
cmp
aad
mulb
add
pop
mov
mov
cld
cmc
mov
push
sub
mov
push
pop
push
xlat
cmp
or
sbb
out
lahf
sub
sbb
and
and
cli
and
shl
jne
add
jae
je
add
xor
fcomip
add
je
or
lea
jns
pushf
adc
inc
mov
inc
and
add
jae
loopne
fs
imul
xlat
adc
mov
sbb
popf
fidivl
pop
mov
adc
sub
or
loop
lcall
sbb
push
in
inc
and
cmpsb
jnp
popf
xlat
sti
addr16
aas
inc
ret
fcmovbe
adc
dec
imulb
mov
sahf
pop
out
sbb
dec
lods
sbb
xlat
in
pop
stos
shl
mov
pop
jne
das
pop
xlat
dec
jle
jne
bound
mov
les
mov
in
lea
inc
int3
pop
fld
sbb
sub
sub
push
jle
pop
push
enter
inc
scas
xor
test
xor
lods
jns
push
push
xlat
and
sub
lahf
mov
inc
cmp
and
and
lods
in
daa
dec
movsb
iret
ja
dec
cmp
mov
aas
or
xlat
dec
pop
jp
jmp
cmp
sub
xor
mov
jb
dec
sbb
sub
rcl
add
popa
in
fbstp
or
add
mov
push
mov
mov
or
push
mov
and
mov
mov
dec
mov
pop
dec
jle
push
xor
add
arpl
jne
add
repnz
std
push
push
in
ljmp
stos
cmp
movsl
mov
pop
or
fs
int3
arpl
adc
sbb
mov
cmp
shrl
xor
dec
pop
mov
fildl
or
dec
sub
out
cmpsb
xor
sbb
loop
imul
mov
push
addb
addr16
aas
in
sbb
pop
ficompl
xor
je
and
aaa
sbb
stos
hlt
test
pushf
pop
lret
fdivl
scas
pop
rcr
call
es
inc
sub
test
jmp
mov
xor
mov
xor
arpl
dec
jns
loope
mov
jns
jle
stos
ret
enter
push
popa
js
test
add
fsub
push
out
daa
movb
cmp
push
repz
ljmp
stos
int3
mov
push
fbld
or
test
inc
sahf
mov
js
cmp
mov
jns
push
xor
or
fstps
adc
sbb
repnz
das
stc
mov
outsl
jb
pop
insl
and
jmp
stc
add
jmp
outsl
daa
fwait
add
pushw
cmc
xchg
loope
dec
pop
inc
adc
pop
jbe
mov
xor
outsb
lods
mov
or
fldcw
mov
push
cld
hlt
in
adc
in
pop
xor
and
les
pop
adc
mov
add
stos
xorl
cmp
loop
pop
pop
scas
or
push
jmp
mov
pop
or
push
je,pt
loop
adc
add
xor
aaa
mov
in
inc
push
fldenv
icebp
jo
push
adc
jno
push
inc
jne
out
pop
pop
es
inc
xchg
push
rcr
cmc
xchg
adc
sti
push
dec
sbb
jbe
aam
movl
or
cwtl
xor
jbe
dec
and
and
or
xchg
lods
stc
jb
xchg
cmc
cmp
cwtl
aad
ljmp
dec
jmp
xchg
sub
sub
rcrl
ss
ficomps
fistl
adc
and
movsb
mov
out
mov
cmp
aas
gs
dec
or
lret
sti
or
adc
and
movl
data16
cld
sbb
int3
xchg
outsb
mov
jmp
xor
fstps
sahf
in
inc
js
aad
ffree
hlt
jmp
xchg
mov
sbb
aas
test
cmp
icebp
jecxz
les
adc
ljmp
jne
leave
mov
clc
and
test
std
insb
stos
loope
adc
dec
decl
mov
inc
and
or
xor
and
jo
jg
push
and
mov
adc
je
mov
in
cmp
inc
mov
pop
dec
pop
mov
jl
out
aas
lods
loope
mov
xchg
sub
mov
imul
adc
ds
mov
aaa
scas
dec
mov
or
andl
jbe
push
jl
loope
test
aad
xor
and
lods
stc
dec
mov
jns
mov
sbb
push
aaa
roll
call
xchg
aaa
push
inc
repnz
dec
inc
mov
push
loope
sub
add
nop
popl
fwait
dec
push
mov
adc
xchg
out
mov
test
mov
call
push
lret
lahf
sub
dec
mov
sbbb
cmpsb
cwtl
leave
scas
cmp
fsts
mov
test
int
jl
mov
add
mov
and
add
add
int3
xchg
popa
pop
mov
cmp
add
adc
mov
cs
inc
inc
imul
push
xchg
sbb
dec
inc
cmpsb
pop
inc
mov
repz
push
cwtl
jle
mov
popa
mov
in
sbb
inc
push
addr16
scas
or
mov
dec
sub
cmp
sbb
stc
mov
dec
cmpsl
insb
add
in
add
daa
or
xlat
rorl
or
push
scas
jmp
sbb
setg
cli
mov
mov
movsl
xchg
or
jne
xor
xor
in
mov
mov
mov
jbe
icebp
iret
mov
js
adc
cmp
sarl
xchg
xchg
and
pop
or
or
cld
sub
mov
daa
or
or
cmp
push
mov
fprem1
jo
and
pop
dec
pop
loope
pop
xor
lds
cmp
xchg
mov
pop
add
mov
and
fwait
xchg
push
call
push
sub
inc
stos
dec
cmp
cmp
inc
mov
scas
repnz
fcomps
mov
into
or
fnstsw
js
loop
and
cli
les
out
adc
push
pusha
rolb
test
dec
mov
loop
outsb
adc
jns
xchg
and
and
sbb
mov
mov
out
pop
mov
jne
int3
lock
ds
into
jae
mov
popf
into
notb
pop
xor
mov
mov
xchg
fnstcw
mov
inc
leave
nop
lret
mov
push
pop
or
or
les
and
ret
adc
xchg
test
push
clc
push
mov
mov
fcmove
add
aam
jno
aad
imul
lret
sub
cltd
jge
jg
or
mov
int3
adc
lret
pop
mov
or
stc
inc
push
pop
jb
mov
data16
mulb
mov
dec
nop
popa
dec
fcoml
mov
arpl
pop
pop
movsb
or
mov
lods
cli
popf
ror
cmp
pop
mov
insl
lock
hlt
pop
pushf
frstor
pop
subl
jecxz
xchg
test
imul
fistpll
negb
ds
repz
mov
mov
xchg
and
pop
ret
fsubl
pop
mov
pop
pusha
jne
inc
xchg
scas
dec
subl
in
daa
sub
add
mov
mov
dec
cmp
and
repnz
add
push
mov
dec
xor
push
fsubs
adc
mov
divb
xchg
orl
insb
jecxz
mov
jg
movsb
sub
jg
mov
fucomip
cmpsb
mov
int
movsb
jbe
fisttpll
and
test
jl
sub
xor
fdivl
fcomps
imul
ljmp
mov
cmpsl
jo
cmpsl
in
xchg
loopne
jae
xor
rcll
jbe
test
out
out
mov
daa
or
mov
scas
inc
stos
sbb
dec
or
mov
pop
xor
mov
push
stos
fwait
pop
shrl
inc
jne
enter
mov
int3
sbb
negb
aas
push
push
aad
push
clc
iret
push
jmp
shlb
jle
or
rcl
rcrl
cmp
xor
xor
sarl
mov
decb
dec
jp
icebp
mov
lea
stc
orb
jge
stos
pop
jo
aaa
mov
jmp
xor
dec
into
in
in
push
pusha
sbb
push
rolb
cmpsl
lock
mov
pop
or
add
pop
pop
dec
popf
outsl
ljmp
cs
movsb
cs
mov
lods
jno
or
sbb
out
rclb
inc
dec
or
dec
pushf
in
inc
in
sar
adc
mov
mov
fidivs
pushf
inc
dec
push
cmp
mov
or
sub
inc
adcb
jns
pop
xchg
cmp
adc
pusha
insb
lret
xor
inc
sbb
jge
out
jne
jp
jns
pop
pop
pop
push
lret
dec
and
cli
stc
lea
cmpsb
cmp
aaa
addr16
mov
inc
mov
xchg
adc
or
dec
pop
or
mov
push
cmp
dec
jge
mov
loope
repnz
dec
jo
cmpsl
dec
jo
mov
cmpsl
mov
push
or
jae
cmp
pusha
jge
cmp
xchg
insl
jmp
pop
mov
cmp
adc
xor
sub
dec
aas
inc
jnp
xor
cs
mov
shrb
fimull
mov
mov
pop
aaa
cwtl
decl
and
lahf
or
sbbb
shlb
lret
mov
rcr
jbe
and
add
mov
repz
in
or
addr16
in
hlt
pop
mov
scas
insb
xchg
vpcmpuw
mov
out
je
shl
mov
mov
xor
push
pop
inc
fmuls
out
push
add
jg
js
enterw
ret
jmp
xlat
and
dec
aad
cmp
sahf
out
enter
mov
mov
dec
test
fists
pop
or
or
cmc
ret
dec
mov
jo
orb
jne
call
or
orb
push
inc
adc
jg
or
aam
push
mov
sbb
xchg
out
xor
mov
je
add
popf
repz
inc
fwait
enter
jl
xor
or
pushf
xchg
pop
fstps
andl
mov
adc
mov
outsl
and
add
jle
stos
cmp
leave
fldl
add
sub
push
fsts
mov
popa
xor
sub
jnp
aam
sbb
bound
xchg
pop
mov
jb
int3
mov
xchg
jmp
jge
lahf
inc
inc
add
pop
mov
add
lahf
inc
imul
into
inc
mov
lcall
push
sub
in
mov
inc
mov
out
adc
lock
or
xor
inc
rcrb
mul
push
test
out
jg
fstpl
loope
pop
popa
cmp
dec
sub
insb
cmp
xchg
and
mull
outsl
sbb
push
fs
in
mov
jle
lahf
imul
stos
inc
int3
subl
and
push
bound
lock
jne
test
aad
lahf
ds
hlt
xchg
cmpsb
fdivs
inc
inc
int3
aaa
mov
addr16
mov
adc
dec
cmpsb
adc
push
pop
xchg
and
ret
lahf
arpl
jle
arpl
fwait
out
sbb
in
out
mov
insl
negb
push
jns
cmp
jne
push
or
ret
dec
stc
jne
and
lock
stc
jo
jb
dec
pop
jb
iret
out
out
mov
mov
dec
lods
cmpsl
sub
es
dec
and
sbb
or
mov
inc
jp
fs
inc
fidivrl
push
addr16
xchg
and
mov
push
mov
pusha
mov
adc
dec
ja
rcrl
xor
jp
or
fstl
mov
pop
mov
cltd
cmp
hlt
arpl
les
enter
shll
ds
call
push
dec
or
pop
mov
xchg
imul
jle
cmp
and
sahf
out
out
cmpsb
or
jno
in
ja
sub
lret
mov
ret
xchg
das
lock
lret
movsl
popl
push
fcompl
addr16
jl
pop
inc
mov
or
andb
inc
add
dec
std
inc
mov
rcrl
mov
jg
add
push
cmc
or
sub
outsl
int3
sbb
shrl
scas
and
jg
sub
iret
rcll
adc
mov
int
hlt
js
or
dec
mov
ficomps
das
pop
lcall
movlps
dec
mov
repz
add
push
and
lock
shr
jge
mov
inc
cmc
mov
xchg
sbb
cltd
jne
adc
xor
cwtl
sbb
xchg
add
or
inc
movsl
inc
jmp
add
bound
mov
aad
sti
pop
push
aaa
testl
xor
ficomps
nop
and
mov
cmp
je
sbb
test
jo
inc
cmpsl
xor
add
jo
outsl
dec
sub
les
fmul
inc
imul
aad
cmpsb
inc
and
std
xor
sbbl
add
and
orl
and
ja
push
clc
dec
mov
mov
pop
lret
jo
dec
inc
sbb
or
add
in
insb
pop
sarb
push
xlat
add
cmpl
push
inc
jmp
mov
and
cs
mov
jnp
mov
fisubrl
ficompl
icebp
shll
scas
xor
aas
shl
jecxz
nop
sbbb
cwtl
mov
in
mov
outsl
outsl
aad
fstps
push
mov
sbbb
jg
or
lock
clc
and
dec
jmp
pop
inc
sti
mov
push
ficomps
or
repnz
hlt
repnz
cwtl
call
mov
pop
test
cmpsl
subb
cmpsb
test
sbb
daa
js
mov
sub
sub
pop
cli
int3
jns
shlb
out
or
push
fisubrl
fsubrl
fcmovnbe
xchg
push
push
jg
inc
push
pusha
jp
xchg
mull
mov
jmp
stc
xchg
dec
pusha
call
stos
loop
inc
call
rcrb
loope
in
out
int
mov
lret
and
xor
arpl
or
mov
pop
and
outsl
test
or
scas
cmp
es
cmp
push
mov
inc
imul
int3
data16
and
cmp
cmpsl
add
mov
or
shrb
push
jnp
jnp
pop
jns
jmp
sarl
and
fwait
or
mov
testl
mov
cs
sub
stos
xor
rcll
mov
sbb
cmovne
dec
lods
xor
push
es
out
or
repz
push
pop
loopne
xor
cmp
inc
and
sub
rol
aaa
gs
in
cld
lcall
or
xor
dec
xchg
pop
pop
xor
mov
pop
dec
ret
sbb
jo
outsl
rorb
add
sub
in
enter
jne
iret
stos
pop
rcrl
pop
or
das
sbb
xchg
mov
iret
je
movsb
fisttpl
cmp
jb
sahf
cmp
das
sbb
std
push
out
pop
xchg
and
inc
push
mov
dec
stc
pop
js
in
dec
repz
push
and
mov
enter
inc
push
pop
inc
or
test
pop
test
dec
movsb
xor
das
outsl
les
inc
into
lea
dec
adc
pop
sahf
sahf
dec
mov
mov
push
mov
hlt
xor
mov
sub
cmp
dec
lea
or
add
push
add
fwait
jmp
or
mov
mov
pop
ret
lahf
mov
pop
jle
clc
out
roll
mov
mov
faddp
inc
scas
xor
pop
xchg
sbb
mov
out
fnstcw
aam
ljmp
clc
adc
push
xchg
cmpsl
pop
ljmp
loopne
sahf
dec
mov
pop
imul
imul
stc
mov
fidivrs
pop
sbb
lret
daa
outsl
sbb
mov
dec
out
sub
inc
xor
mov
push
cltd
popf
sub
pusha
mov
xchg
lds
mov
mov
adc
fcomps
clc
jge
arpl
mov
jbe
adc
mov
push
pop
and
test
inc
cwtl
shll
insl
mov
push
mov
or
dec
push
xor
mov
test
enter
icebp
decl
loop
testl
rorb
jmp
addr16
push
push
xor
and
aad
inc
nop
fisubrl
orb
es
xor
lret
inc
sti
cmc
scas
out
sar
xor
dec
jns
dec
int
mov
sub
cli
nop
and
or
and
xchg
add
mov
sub
mov
cld
bound
rep
jns
notb
cmp
dec
and
outsl
lcall
and
xchg
aas
jge
xchg
stos
xchg
nop
pop
xor
xchg
hlt
sbb
pop
enter
jl
rcrl
ret
dec
int
ja
xchg
dec
pop
mov
adc
cltd
jbe
inc
jbe
jl
mov
sub
jmp
cmp
arpl
sti
addl
or
inc
or
or
cmp
jp
jno
or
xchg
stos
cmpl
insb
cld
enter
lock
jge
and
and
jo
mov
mov
or
int
mov
adc
lods
std
shrl
and
test
nop
xor
xor
add
xchg
scas
mov
or
mov
inc
repz
int3
inc
dec
in
in
sbb
jae
repz
pop
test
ss
nop
ret
subb
cmp
or
mov
and
pop
data16
xchg
inc
nop
mov
xchg
lret
test
push
cmp
dec
bound
mov
or
jnp
cwtl
and
daa
xchg
aas
lds
in
sub
inc
xchg
push
and
and
cmp
push
pop
mov
jb
popa
jle
push
pusha
into
push
dec
lods
add
jecxz
xchg
insb
pop
clc
scas
or
stos
mull
iret
mov
fistpll
pop
fisubrl
adc
or
sub
stos
repz
and
mov
sbb
shrl
test
pop
int
nop
mov
pop
jae
adcl
lock
fwait
insb
adc
loope
mov
mull
push
add
xchg
adc
lds
adc
sub
popf
xchg
xor
rorb
pop
dec
push
mov
scas
jbe
ss
ljmp
lock
or
push
adc
xchg
call
and
movsb
pop
lcall
jg
fimuls
idiv
sti
sarl
loope
jae
je
rol
xorb
fisubs
js
lret
push
lea
adc
add
sbb
pop
sbb
stc
into
divl
test
iret
lods
movsl
into
adc
mov
loop
mov
cmpsl
pop
xchg
sub
fwait
xchg
jns
pop
pop
jmp
fdivrl
push
pop
mov
jae
inc
mov
ljmp
push
jp
fstl
sahf
and
jns
cli
movsl
add
ss
lods
repz
sub
aad
xor
sahf
add
mov
decb
int3
cmpsb
cmp
or
jle
stos
movsb
out
push
inc
and
mov
pop
mov
les
jno
or
aam
ret
pop
pushf
sahf
pop
mov
inc
mov
popf
outsb
call
out
mov
loopne
cmp
push
sarl
jmp
pop
sbb
jno
js
sub
pop
sahf
ret
icebp
mov
or
jb
push
test
mov
xchg
or
jns
push
out
add
sbb
mov
lock
adc
mov
push
cmpsl
test
call
repz
add
enter
int3
xchg
inc
jbe
sti
push
orb
mov
mov
push
inc
and
push
xchg
mov
js
dec
adc
push
les
sub
jb
cli
je
rcrb
fadds
mov
cwtl
call
push
or
outsb
mov
adc
lahf
aam
xor
mov
cmc
dec
adcl
xchg
add
xchg
imul
adc
stc
cld
test
jno
or
es
ret
cmpsb
pop
xchg
out
mov
xor
mull
mov
mov
sbb
and
popf
mov
or
movsl
inc
andl
xor
repz
xor
fildll
pop
sub
mov
rcr
lcall
imul
aad
outsl
ss
ffreep
ds
and
pop
lods
mov
das
shl
lds
inc
in
cwtl
cmpsl
xor
fwait
sub
adcl
jae
jge
cs
add
addr16
call
sub
mov
lock
lods
cmc
leave
repz
push
loopne
sahf
xlat
es
add
pop
push
jl
pusha
jg
mov
das
jnp
or
sarb
mov
inc
daa
popl
jo
test
cmp
dec
dec
jnp
cmpsb
std
aaa
js
enter
pushf
lcall
roll
jns
rcll
int
or
xor
push
jp
movsb
mov
in
sub
or
rclb
mulb
xchg
test
shrb
push
mov
and
sbb
xor
jl
mov
mov
mov
stos
mov
icebp
mov
data16
jns
xor
pop
leave
outsl
xchg
jb
dec
mov
add
mov
push
pop
mov
sub
pop
call
xchg
push
test
jl
mov
xchg
movb
pop
and
pushf
sub
popf
lea
int3
inc
mov
nop
lret
adc
je
imull
dec
add
xchg
outsb
dec
mov
popa
or
aad
xlat
loop
pushf
mov
pop
cli
jge
clc
movsb
sbb
rol
loop
arpl
testb
add
stos
mov
aaa
inc
in
cmp
out
pop
test
pop
ja
mov
and
test
mov
imul
shrb
ret
fwait
jne
lret
clc
dec
push
xor
inc
xorb
mov
leave
cmc
push
outsl
outsl
std
and
shlb
mov
std
push
ljmp
and
pusha
inc
jno
loope
aas
jno
sub
jbe
cmp
add
adc
gs
mov
pop
cmpsl
rclb
out
pop
fs
sub
push
pop
and
pop
rolb
xchg
jns
pop
outsb
xchg
mov
mov
pop
ljmp
jp
cmp
cmc
adc
or
xor
xor
fidivs
fsubp
push
jno
pop
dec
inc
dec
or
inc
cld
cmp
xchg
imul
loop
cwtl
std
test
shlb
ds
and
fcomip
jno
clc
cmp
mov
add
xchg
lds
adc
and
ja
add
push
push
push
xor
int
sbb
cmp
add
adc
lret
jmp
mov
push
xchg
sub
adc
fstl
scas
jl
push
fldenv
enter
sahf
icebp
mov
aad
xchg
jecxz
push
cmp
cld
push
pop
or
jns
xchg
in
inc
sbb
lcall
fwait
mov
vrsqrtps
pop
mov
adc
mov
pop
jl
popa
pop
mov
cltd
in
cmp
ljmp
inc
idivb
and
push
scas
mov
and
out
sub
xchg
test
aaa
and
xchg
cmp
fiaddl
cmp
rclb
in
es
mov
fldcw
mov
sub
shlb
cltd
loope
push
xchg
xor
mov
sub
pop
jecxz
inc
daa
adc
insb
test
icebp
into
call
add
jo
aad
cli
add
mov
mov
test
imul
test
das
nop
ror
pop
fwait
lods
rep
in
ss
pushf
xor
adc
iret
mov
lock
push
inc
push
jp
mov
outsl
lret
mov
mov
push
daa
out
leave
mov
cmp
mov
inc
jbe
es
imul
sbbl
ret
pop
pop
sbb
mov
sbb
fs
and
pop
sub
pushf
icebp
imul
shlb
dec
fidivrs
out
js
mov
adc
mov
addr16
cmp
shrl
and
outsl
jb
sbb
cmp
push
xchg
adc
inc
sub
insl
jb
xor
test
fnsetpm(287
lahf
adc
aam
hlt
dec
fwait
out
push
xchg
or
add
and
repnz
aam
jbe
out
and
test
dec
int
inc
test
pop
repnz
sbb
mov
out
inc
mov
out
add
sbb
push
pop
push
enter
dec
adc
dec
icebp
test
push
push
lock
bound
jg
icebp
decb
outsl
js
jg
stos
push
inc
and
orb
out
mov
xor
dec
arpl
nop
adc
mov
iret
loop
push
mov
mov
sbb
aaa
sbb
jne
cmpsb
lea
mov
dec
leave
mov
mov
frstor
dec
and
daa
sarl
jns
xchg
push
inc
pop
lcall
add
std
mov
leave
push
push
popf
push
xor
or
jge
shrl
jge
sbb
daa
cli
xor
je
cmpsl
es
bound
sub
shll
mov
inc
ret
cmp
sbb
sbb
in
pop
lea
inc
ljmp
es
mov
pusha
imul
ja
movsl
lock
jg
stos
call
pop
xchg
btl
push
xchg
dec
mov
sub
ljmp
js
adc
movsb
cmc
enter
sbb
popf
mov
or
xchg
add
ss
push
add
mov
out
jecxz
xchg
inc
aaa
jae
jae
mov
sbb
bound
fisubs
adc
mov
std
psrad
push
xor
scas
mov
mov
sub
sbb
push
mov
lahf
ljmp
xchg
icebp
lock
insb
xor
arpl
stos
aad
lock
jno
mov
fcompl
mov
push
push
xbegin
stc
xchg
mov
test
ret
cld
dec
jecxz
mov
fildl
ret
xchg
fimull
xor
and
mov
or
push
test
rclb
fsubrs
test
cmp
cmpl
sbb
add
loop
stos
and
lock
and
jp
mov
mov
ret
or
in
jne
in
into
lahf
mov
fnsave
jae
jmp
xchg
adc
stc
sarb
lahf
lcall
aam
aas
inc
adc
or
lds
or
data16
cs
or
mov
mov
cmpsb
jmp
add
sub
inc
pop
push
out
add
pop
nop
inc
cmp
stos
pop
mov
stos
in
fmul
and
cmpsl
loope
add
mov
clc
loopne
adc
jno
aad
mov
push
xor
xor
jb
sar
jl
popf
rorl
and
sub
push
ja
cli
decl
or
and
sbb
mov
xchg
sbb
mov
mov
lahf
movsb
dec
in
dec
push
xchg
jnp
push
pop
adc
fmulp
fistl
xchg
xchg
ret
fstp
outsl
push
sbb
push
xchg
inc
jmp
je
ss
xchg
sbb
add
out
cmp
jge
mov
sbb
sbb
jnp
push
cmpsl
cli
fldenv
popf
dec
lcall
push
fcomp
push
jmp
scas
mov
mov
movsl
jl
notl
push
popa
test
or
push
add
add
adc
jle
jge
mov
sbb
cs
add
jns
movsb
lods
jmp
sub
add
dec
jg
sub
js
inc
push
call
inc
subl
aaa
aaa
mov
shll
rolb
adc
cmpl
mov
hlt
and
popa
inc
lcall
gs
jae
xor
scas
jae
jp
outsb
dec
push
mov
andl
xlat
mov
sub
mov
push
rclb
add
push
and
scas
push
repz
idivl
jmp
mov
iret
and
xchg
xor
mov
sbb
pop
cmp
xlat
or
cmp
lock
adc
push
ficoms
sub
jg
lods
cmp
sbb
push
popa
mov
clc
test
mov
mov
push
dec
idiv
cmc
into
out
orb
pop
xor
mov
sbb
fst
xor
push
in
inc
call
imull
jp
push
cmp
jl
arpl
repz
scas
xchg
dec
sbb
mov
test
inc
and
jae
cltd
aaa
xchg
jns
repnz
rolb
mov
lahf
insl
sbb
loop
cmp
xchg
daa
jp
push
xchg
js
pusha
in
jg
mov
enter
fcom
lret
push
jbe
pop
jl
ret
jl
out
inc
xchg
jmp
mov
push
pop
jle
fnstsw
sub
or
movsbl
shrb
mov
es
fldt
popf
xor
jmp
xor
add
incl
lea
xor
loop
mov
pushf
pop
push
mov
adc
pop
mov
cs
lret
sub
mov
aam
aad
repnz
insl
lds
push
pop
fnsave
rorl
jae
or
mov
and
xor
iret
jns
sbb
jecxz
mov
movsb
arpl
insl
test
jnp
out
and
out
fisttpll
push
sub
cmpsl
stc
or
pop
adc
cmpsl
pop
int
sub
fucom
and
xchg
es
clc
xchg
dec
sub
jo
and
outsl
icebp
add
mov
shl
sarl
flds
sbbl
test
lock
mov
div
ljmp
nop
repz
enter
repz
push
idivb
out
dec
sbb
cltd
adcl
xor
test
cmp
and
jmp
cmc
jo
in
adc
out
out
out
pop
sub
sub
stos
repnz
ss
push
inc
fsubl
dec
aam
mov
push
push
sbb
icebp
sbb
pushf
fbstp
push
test
out
daa
jb
addl
outsl
dec
jbe
lock
xchg
addr16
aam
adc
imul
int3
cmp
mov
dec
lret
mov
dec
push
sub
sar
movsl
push
lods
or
mov
test
jg
and
addr16
push
scas
jo
pop
xchg
pop
mov
sbb
in
in
pop
sub
lea
push
out
insl
aas
test
loopne
mov
out
stc
fwait
push
or
fnstenv
fiadds
movsl
sbb
mov
push
push
movsl
stc
jns
xor
mov
cltd
dec
xchg
sbb
cmp
xor
mov
add
sub
icebp
lods
push
jp
mov
scas
and
mov
dec
ror
xchg
jb
push
lock
push
sub
inc
lods
loope
mov
lods
push
cwtl
mov
push
mov
pop
lcall
jl
daa
ss
insb
les
outsb
adc
xor
jns
icebp
sbb
scas
sub
arpl
pop
aam
pop
pusha
negb
ja
pushf
loope
pop
jmp
cld
xchg
rclb
mov
pcmpgtw
incb
in
cwtl
mov
or
cmc
pop
dec
jb
jno
iret
shrl
jl
pusha
mov
rcl
out
and
nop
cmp
sarl
ret
add
push
lods
cmp
cwtl
nop
into
push
out
lock
jb
test
lock
cmp
aaa
cmpsb
jnp
dec
push
loop
jecxz
pushf
push
mov
fistpl
bndstx
insb
orl
mov
inc
pop
pop
sub
push
pop
pop
and
rclb
inc
xchg
xchg
xor
iret
cwtl
cmpsl
daa
out
rolb
outsl
mov
jmp
imul
test
jmp
dec
xchg
and
nop
addr16
test
sbb
xor
fsubp
add
lahf
jge
inc
push
mov
and
imul
std
cmp
in
rorl
andl
mov
adc
dec
es
dec
nop
inc
dec
mov
cld
jp
js
jecxz
add
and
jle
pusha
aaa
jno
cmp
and
sbb
xor
xlat
push
adc
push
mov
sbb
bound
cmp
jl
add
in
pop
push
into
or
mov
in
js
ret
push
pushf
mov
ss
dec
push
jge
push
lret
inc
adc
cmp
sub
push
or
xchg
sbb
repnz
fnsave
push
xlat
xchg
shlb
addr16
and
and
xchg
pop
pop
aaa
sar
adc
rorb
int3
jmp
insl
dec
das
or
and
addr16
iret
dec
inc
cmp
or
inc
stos
aad
mov
sbb
pusha
adc
sbb
adc
adc
js
jbe
test
cwtl
and
xor
push
enter
push
ljmp
mov
loope
clc
xchg
and
jl
out
sbb
leave
daa
xchg
mov
pusha
xchg
lock
xor
or
xchg
xchg
xor
iret
sbb
loopne
adc
xlat
pop
inc
fisttpl
js
cltd
sub
dec
mov
push
aas
lds
outsb
sub
xor
mov
pop
outsb
mov
imul
imul
pushf
xor
popa
test
daa
mov
shll
add
mov
pushf
jmp
pop
push
xor
xchg
sarb
xchg
mov
add
or
out
stc
cmp
add
jg
std
mov
rcll
xchg
cltd
xchg
leave
icebp
sahf
roll
test
ret
pop
sbb
and
pop
push
push
dec
mov
insb
cmp
loope
aam
dec
push
mov
in
enter
andl
ret
inc
call
mov
cltd
in
hlt
sbb
jp
sub
lea
lahf
jns
dec
dec
inc
loope
ror
cmp
arpl
jmp
lds
addr16
adc
ljmp
sub
and
movsl
sahf
push
adc
adc
pop
and
lods
sbb
hlt
xchg
pop
add
mov
cmc
inc
push
outsb
test
fxch
ret
repz
pop
mov
sbb
cmp
outsl
lret
mov
iret
lds
xchg
je
mov
inc
aam
xor
enter
inc
or
xor
andl
rcrl
xchg
xor
mov
xchg
cld
push
and
lcall
sar
or
fsubl
and
push
sub
into
fstl
adc
shlb
mov
jno
cmp
pusha
int
xor
int
ret
outsb
sub
lods
jg
mov
clc
inc
xlat
dec
lods
in
add
mov
icebp
mov
mov
cmpsb
insb
outsl
lods
mov
shll
mov
inc
inc
das
jl
in
push
imul
mov
sbb
sbb
push
mov
iret
pop
jb
inc
pop
stos
stos
lahf
xorl
loopne
bound
in
adc
in
push
dec
mov
sbb
shrb
mov
jae
imul
rcrl
notb
out
sbb
lret
mov
stc
lods
popf
shr
and
pop
fidivs
mov
jg
imul
mov
and
clc
cmp
add
fwait
push
scas
mov
lret
cli
inc
movsl
ret
xor
insb
in
jae
pop
fcmovb
cmp
jo
ja
mov
xchg
pop
jle
addr16
add
flds
out
cmp
xor
aaa
mov
in
jp
aas
lahf
dec
test
repnz
mov
and
xor
pop
mov
lea
pop
jp
mov
adc
mov
out
pusha
add
std
push
not
test
or
jmp
jns
ds
insb
sub
cmp
lret
or
gs
push
xchg
cltd
out
lret
fisubl
aas
cmp
in
cmpsl
jne
mov
or
and
push
pop
and
popl
push
mov
dec
sti
mov
jno
xchg
mov
in
ds
cli
push
in
mov
xor
test
dec
test
jb
fmull
push
inc
movsb
fldenv
fidivl
and
or
cli
arpl
jle
cli
int
inc
daa
stc
test
sbb
out
push
jge
or
cmp
mov
pop
pop
jo
or
loope
mov
and
inc
cltd
push
cs
jmp
mov
movb
push
xchg
test
pop
sahf
cmpsl
movsb
push
add
pop
mov
pop
ljmp
push
outsb
sbb
imul
push
inc
lahf
mov
dec
sahf
inc
xchg
or
dec
xchg
mov
jne
ret
popa
shlb
rorl
xor
repz
sbbl
push
inc
mov
jne
sti
push
outsl
in
push
mov
dec
sbb
loopne
mov
std
test
add
movsb
insb
imul
scas
pop
mov
cmpsb
ds
loop
ret
adc
or
cld
cmp
out
xlat
out
sbb
push
xor
notb
push
clc
orps
scas
out
jecxz
jae
imul
imul
mov
add
std
lods
rcrb
incb
cmp
inc
loope
cmp
jg
inc
dec
inc
push
pop
mov
ljmp
mov
dec
inc
data16
sub
xor
rorl
push
or
xor
jp
or
or
aaa
mov
sub
in
icebp
adc
lcall
arpl
inc
int3
idivl
or
int
push
scas
adc
dec
in
mov
push
fstl
test
sbb
fs
lret
daa
jmp
iret
rorb
pop
sti
bound
pushf
negl
add
push
cwtl
or
sahf
icebp
mov
add
sbb
loope
pop
mov
call
ja
lock
les
adc
inc
mov
jno
daa
movsb
jecxz
inc
ja
and
or
imul
test
jl
xchg
mov
ficomps
imul
mov
mov
std
sti
push
jno
fwait
jb
mov
sbb
dec
xor
push
aaa
sub
cwtl
mov
cmp
jp
add
inc
imul
in
lods
mov
out
popf
fdivs
xor
sub
add
fcompl
adc
sub
jg
mov
fsubrl
fnsave
outsb
inc
and
loope
and
scas
pop
lods
lcall
rolb
int3
xchg
lods
sbb
push
es
out
loopne
lods
add
mov
aaa
push
lea
mov
fs
adcl
js
stos
jmp
xchg
jg
pop
outsl
push
add
inc
out
fnstenv
fstpt
out
add
jns
push
js
or
repz
xor
addr16
add
fs
mov
inc
aad
mov
xor
pop
xchg
inc
jno
mov
pop
lock
lret
adc
pop
mov
jp
jae
push
xchg
jne
cltd
stc
ds
sub
pop
cmp
and
or
pusha
mov
rcrl
add
rcl
pusha
in
ret
cmpsb
inc
dec
cmp
sbb
pushf
ljmp
jecxz
gs
rcl
shll
out
sbb
cli
lods
lods
aaa
arpl
cmpsl
inc
xchg
add
jno
push
dec
ret
mov
les
ja
mov
inc
inc
movsl
mov
rorl
pushf
xorl
movsl
jp
jmp
xor
leave
add
aam
repnz
add
in
mov
pop
lds
inc
in
xchg
xlat
outsl
add
cmc
and
push
push
cmp
xchg
inc
jmp
nop
sbb
stc
popa
adc
mov
xchg
mov
jle
les
jae
pop
and
push
fldl
imul
shrb
rcr
xor
cli
lret
xchg
dec
ret
dec
and
sub
cmp
cmp
mov
daa
je
push
test
sahf
je
sub
sub
dec
add
mov
lcall
icebp
movsb
inc
insl
sub
lea
xor
out
in
movsl
mov
pop
pop
adc
cld
and
cmp
or
mov
sub
jbe
cwtl
pop
push
rolb
test
and
cmc
test
xchg
mov
test
pop
mov
jp
inc
jne
arpl
int3
sub
jmp
xchg
push
in
out
cwtl
cmp
in
int3
sbb
jecxz
mov
in
mov
mov
or
jmp
ret
pop
add
bound
sbbb
dec
ljmp
ficomps
sahf
pop
das
lret
test
mov
loope
and
into
fisubl
sbb
test
jb
pop
push
pushf
repz
in
sahf
xchg
lods
imul
push
pop
mov
jb
jp
stos
lock
shrl
cmp
sub
mov
je
movsb
cmpsl
bound
adc
test
sbb
xchg
mov
popf
out
inc
inc
gs
in
int
inc
or
cltd
mov
test
xor
das
icebp
shrb
xor
add
addb
inc
sbb
cmp
xor
jmp
ja
loope
sbb
push
mov
mov
lret
sahf
ss
sub
pusha
loop
aas
fs
fprem
mov
les
push
bound
xor
sub
dec
aad
scas
push
pop
and
inc
sub
icebp
fwait
push
std
inc
sbb
mov
mov
sub
fisttps
pop
cwtl
lock
adc
adc
pusha
sahf
dec
lret
mov
lods
decl
lcall
pop
mov
adc
lcall
mov
ffreep
arpl
cmc
lock
xor
add
xchg
sub
pop
jle
notb
std
std
rorb
imul
push
test
fiadds
sti
sahf
pop
in
jg
test
xlat
inc
or
pop
and
in
and
loope
xchg
mov
fsts
cmp
and
cs
cwtl
sub
pop
adc
test
push
clc
in
mov
out
popf
sub
jb
add
test
iret
xor
jns
jns
cmp
or
lds
xchg
adc
add
in
ficoml
rorb
sbb
dec
popf
cli
loop
xlat
adc
cmc
adc
lret
push
jbe
or
sbb
addl
push
sub
out
insl
pop
push
gs
xor
mov
sbb
pop
into
xchg
pop
push
movsb
mov
jne
jge
jne
es
sbb
fs
mov
inc
sub
xor
test
lcall
pop
mov
sub
dec
jno
or
xor
or
pop
data16
pop
xor
mov
pop
popf
push
cmp
push
push
cmp
pop
mov
pop
jb
pop
pushf
cld
sti
ficoms
dec
adc
or
sbb
xor
fiaddl
or
pop
pop
push
inc
fnstcw
mov
div
movsl
mov
pop
and
mov
add
das
jmp
mov
sarb
or
jge
sbb
push
inc
cltd
out
scas
rcl
stos
pushf
enter
les
or
popl
aas
mov
ljmp
add
in
pop
clc
jnp
ss
xchg
es
and
ds
add
sbb
call
mov
or
mov
inc
data16
ret
lods
mov
into
inc
call
arpl
xchg
ret
aam
jo
cwtl
aaa
and
cmp
xchg
dec
notb
jno
inc
lea
out
insl
push
cmp
les
nop
xchg
loop
loop
imul
aaa
pop
and
xchg
pop
aas
adc
and
divb
mov
pop
rolb
or
adc
pop
inc
cmpsl
stc
sbb
lods
jp
repnz
cs
mov
in
mov
jb
frstor
shlb
cmovne
loop
cmp
loope
xor
enter
in
jne
outsl
push
xchg
xor
call
cmp
cmp
jecxz
sub
cltd
enter
push
xor
pop
dec
and
jge
or
test
enter
clc
ds
nop
in
sbb
add
sar
adc
sub
shll
mov
push
inc
lcall
test
scas
arpl
sti
inc
js
cmp
xlat
ret
test
subb
es
insb
pop
cmp
ss
sbb
jae
push
fcmovnbe
fmulp
cmp
pop
xor
adc
mov
lret
icebp
cmp
int
inc
and
pop
cmp
fldl
add
subl
cmpsl
and
call
mov
jmp
imul
test
mov
ficomps
notl
int
bound
xchg
pop
outsb
pop
inc
cltd
mov
insb
xor
or
sbb
and
shrl
inc
cwtl
sbb
mov
jns
ljmp
xchg
and
enter
in
fcmovne
or
jno
in
cmpsb
and
sbb
push
lret
xchg
rorb
xchg
inc
test
dec
fnsave
loopne
rcr
mov
jbe
push
dec
or
pop
lahf
faddp
loopne
jp
sbb
mov
pop
mov
ja
inc
push
ret
xor
inc
fisttpll
dec
insb
pop
xor
dec
lock
and
dec
and
push
jo
stos
or
loop
mov
fdivp
push
sbb
mov
ds
mov
mov
mov
test
or
int3
sub
mov
movsb
ljmp
add
sbb
in
fstpt
inc
pop
push
dec
sbb
add
fs
or
test
pusha
iret
pop
js
xchg
adc
inc
or
fwait
xor
cmp
pushl
cmpsb
xor
mov
sbb
stc
mov
mov
repnz
mov
data16
lcall
cmp
ret
out
insb
scas
subl
xchg
rcrb
inc
ror
mov
mov
jg
cmp
cmpb
push
push
shrl
subb
pop
and
push
gs
inc
mov
ret
add
mov
dec
pop
cmc
xchg
dec
jp
mov
lret
loop
inc
mov
jns
leave
push
mov
or
jl
les
ja
les
jecxz
je
sub
push
push
sub
data16
imul
imul
fs
mov
fstps
cmc
out
or
pop
and
movsl
aaa
les
outsl
or
mov
lret
fistps
mov
std
sbb
push
daa
pop
popf
xchg
push
insl
lcall
mov
cmp
je
inc
mov
rorl
sub
fcos
sub
push
mov
popa
add
xchg
loopne
pop
xchg
adc
jle
mov
mov
jge
shl
arpl
ret
js
pop
sbb
imul
xchg
xchg
movsl
les
loope
push
jae
loope
stos
mov
pop
cwtl
in
lods
outsl
subl
je
mov
test
popa
push
rcr
cmp
daa
shlb
lods
jno
adc
fistpl
sub
jmp
into
in
inc
icebp
push
push
jmp
xor
sub
adc
mov
lahf
or
jno
pop
jae
test
xchg
push
lock
test
sahf
mov
ss
mull
mov
add
loope
sbb
mov
mov
xchg
sahf
loop
mov
xor
nop
scas
jge
sbb
fnstenv
fs
dec
sbb
lahf
ljmp
mov
and
fs
sahf
rcrb
fs
mov
pushf
aam
idivb
out
test
or
jb
add
jp
mov
hlt
mov
lea
fmuls
in
enter
sbb
xchg
enter
mov
jns
pop
in
enter
icebp
mov
add
out
mov
rcrb
popf
jo
or
mov
adc
pop
xorb
inc
stos
mov
sti
test
mov
pop
push
icebp
test
add
enter
push
fcomps
fsts
lret
jbe
sbbl
in
enter
pop
jb
and
out
xchg
out
or
xchg
xchg
lods
inc
clc
push
xlat
call
or
lahf
push
cmp
cmp
push
cmc
dec
jl
int3
decl
jae
jbe
jns
jns
imul
add
daa
lret
xlat
lea
gs
push
adc
mov
adc
bswap
jnp
idiv
and
scas
mov
xchg
or
fiaddl
and
add
lcall
push
jmp
cmp
xchg
daa
andl
inc
outsl
cmpsl
inc
lock
into
mov
in
test
mov
sub
test
pushl
test
adc
decl
orb
push
loope
xchg
jecxz
lahf
xchg
gs
sbb
adc
cmp
adc
stc
mov
fiadds
cs
pop
mov
aad
push
ret
pop
xchg
popa
xor
sbb
pop
bound
adc
adc
push
inc
mov
push
fstps
xorb
xchg
ldmxcsr
out
mov
daa
jle
sbb
js
cmpsb
xchg
inc
xchg
xchg
mov
rdpmc
add
insb
mov
push
sbb
and
icebp
mov
popl
cmp
mov
dec
cmpsb
jmp
sbb
iret
subl
movsl
std
push
jbe
mov
insb
fcmovbe
mov
xor
push
cmpsl
jo
aaa
and
fstpt
and
or
sbb
pusha
push
cmp
dec
fs
movsl
pop
jle
sbb
jne
pop
and
inc
lret
push
xchg
sti
xor
cli
dec
mov
dec
and
fst
inc
mov
ret
repnz
scas
pop
loopne
add
sbb
jo
xchg
mov
add
cmp
clc
jp
push
leave
int3
int
inc
dec
inc
or
std
mov
push
pop
fcmovb
or
push
add
ret
jge
data16
push
and
sbb
imul
pop
ret
push
faddl
aad
stc
xchg
sbb
lret
cmp
adc
pop
mov
xor
mov
and
push
jno
jns
and
lcall
cld
sbb
in
popa
fdivl
mov
sbb
pop
cmc
cli
leave
push
pop
pop
loopne
cmp
iret
pop
mov
push
fisttps
test
cs
mov
movsl
movsb
outsb
int
mov
adc
in
mov
sbb
mov
in
fsubs
push
dec
xor
mov
xchg
outsb
xchg
icebp
add
xor
in
adc
shlb
arpl
rcll
subb
mov
jb
into
jmp
mov
inc
xchg
lret
pop
fsts
push
xor
clc
sbb
xor
and
xor
or
jecxz
dec
jne
push
test
mov
pop
addr16
fldt
dec
stos
push
lods
fbld
inc
aam
sbb
xor
push
orl
add
push
push
mov
clc
test
fmul
pop
jg
mov
xchg
push
into
shrl
xchg
and
dec
push
cmpsl
jno
lret
pop
or
cmpsb
xor
push
in
jo
xlat
jmp
lds
pushf
inc
xor
cld
push
gs
xor
inc
inc
pusha
dec
ja
subb
sti
or
insb
xchg
sub
push
inc
mov
out
aaa
rorl
mov
push
jecxz
pop
add
call
or
fwait
xchg
mov
jnp
mov
stos
jno
mov
xchg
dec
test
mov
pop
sbb
cmp
cld
pop
xchg
jge
sub
cld
push
inc
xchg
sub
inc
lahf
popa
pop
push
mov
push
pushf
cmpsl
lret
les
inc
mov
in
mov
sbb
xchg
js
dec
pop
add
adc
mov
adc
outsb
sub
jns
sub
fs
test
out
lret
mov
cld
repnz
and
cmp
out
mov
jb
push
inc
pop
inc
aas
adc
sbb
loop
mov
loope
loopne
ret
repz
mov
mov
mov
out
xchg
dec
add
mov
stos
inc
or
fcompl
pop
ja
mov
lock
fwait
sahf
out
pusha
cmp
addl
loopne
jge
sbb
sti
dec
popf
lods
xchg
sub
jmp
shlb
shrl
jp
rolb
dec
cmpl
in
jns
fisttpl
inc
xor
cmp
lahf
sbb
int
movsb
imul
xor
sbbb
mov
mov
mov
das
stos
int
outsl
push
jg
cmp
jl
sbb
mov
cmp
jl
mov
divl
inc
sub
jnp,pt
sbb
test
jl
push
loop
mov
es
inc
pop
outsb
aas
cmc
cmovns
int3
cwtl
inc
mov
cwtl
xor
cmp
push
xor
add
cmpsl
fsub
pop
data16
insl
pop
push
fdivl
fidivl
dec
addb
push
mov
imul
shl
cmp
test
push
mov
mov
mov
mov
xchg
push
sti
sub
daa
adc
inc
aas
mov
repz
inc
sub
cmp
test
insb
fs
and
rol
cld
cmc
add
xchg
test
clc
jmp
cmpl
imul
mov
insl
mov
fnstenv
or
ret
rcrl
adc
cli
aam
cltd
repnz
pop
insl
mov
add
rcll
aas
rcl
hlt
ljmp
shlb
push
dec
addr16
fldt
inc
cld
xchg
hlt
mov
out
sub
jns
ja
ds
cli
outsl
lods
cmpsl
mov
xlat
push
push
test
icebp
aas
pop
push
inc
and
ficoms
push
je
out
shrb
icebp
sub
scas
adcl
cmp
dec
sbbl
mov
jmp
jge
loopne
xor
adc
mov
imul
or
mov
jg
movsb
add
mov
fwait
test
pop
scas
pop
or
sbb
sbb
dec
or
pop
in
je
inc
add
push
and
in
pop
xchg
js
lret
mov
xchg
sahf
mov
add
addr16
adc
cmp
jmp
sub
inc
jbe
jb
lea
lock
sub
sub
in
rcrl
or
pop
push
je
lock
pop
js
push
mov
dec
inc
cmpb
adc
iret
in
dec
pop
push
pop
scas
sarb
xor
jo
cwtl
add
aas
out
adc
xchg
sub
add
loope
xchg
insb
mov
push
mov
enter
sub
jmp
rclb
dec
mov
iret
ja
cmpsb
jg
adc
pop
cltd
jmp
pop
mov
and
cmp
leave
insl
pop
adc
lahf
push
adc
lea
sbb
repz
popf
sbb
out
cmpsl
fs
or
sbb
icebp
push
mov
xchg
mov
lods
cmp
fbstp
lds
push
lahf
sub
aas
cld
cmp
push
ljmp
push
ljmp
xchg
mov
dec
xchg
mov
push
dec
fwait
dec
and
fnsave
stos
jbe
inc
push
and
sub
cli
adc
and
mov
and
xchg
ficoml
sub
and
ss
stc
mov
insl
cld
js
push
push
or
dec
pop
sbb
jbe
shll
xchg
pop
addr16
add
xchg
gs
cmp
cltd
fmul
lods
xchg
dec
bswap
push
nop
xchg
popa
not
jle
lea
push
mov
xchg
jbe
pop
inc
mov
pop
add
push
dec
dec
lock
or
or
sbb
adc
cli
push
adc
xor
xlat
sbb
cld
mov
stc
mov
lock
mov
sub
sbb
addr16
xchg
call
xorl
push
xchg
jg
loope
adc
mov
movb
inc
push
mov
mov
push
sub
into
add
test
out
or
mov
sti
maskmovq
lret
shl
mov
out
dec
jns
jne
cmp
cld
jl
cmp
jb
push
sbb
dec
push
imul
mov
mov
sub
inc
fwait
aam
call
stos
sbbb
mov
imul
repnz
mov
sar
push
in
dec
sub
sub
fiadds
inc
xchg
xchg
mov
mov
mov
mov
push
pop
ss
pushf
jmp
stc
pop
test
mov
stc
popf
dec
test
arpl
aaa
mov
sub
and
mov
lods
test
xchg
pop
dec
lcall
test
or
rol
xchg
push
or
pop
push
imul
xchg
in
enter
sub
dec
xor
lock
ret
jl
inc
inc
xor
or
popa
shl
dec
popw
sub
nop
enter
aam
push
pop
mov
pushf
jle
dec
xchg
out
popf
pop
stos
daa
mov
pushl
and
mov
jl
aam
sti
cs
or
das
mov
push
pop
in
cmpsl
or
fildl
cmp
push
xchg
cmp
mov
inc
fisubs
cmp
sub
mov
test
xchg
inc
jno
push
lea
ret
sbb
mov
cmpsb
jne
fstpl
xor
push
adc
mov
test
daa
test
aas
inc
inc
jmp
cmpsl
aad
inc
shll
mov
mov
sarb
lcall
leave
pop
fnstsw
inc
xchg
cmp
call
or
sub
daa
xchg
and
mov
loopne
out
or
out
daa
pop
and
xor
pop
lods
mov
inc
mov
sbb
movsb
or
xor
scas
jp
icebp
or
sahf
adcb
movsl
cmc
sbb
cmp
call
xchg
test
push
adc
jle
adc
sbb
sbb
cmp
adc
jns
loop
lret
push
xchg
and
mov
negl
faddp
stos
xchg
test
jno
cmpsl
stos
lds
shl
rorb
pop
in
iret
lahf
adc
js
fcoms
lods
pop
mov
sahf
sub
or
xor
les
inc
icebp
icebp
lods
xor
hlt
dec
mulb
cmc
jp
mov
clc
push
std
enter
insl
xor
xchg
dec
xor
sub
leave
sbb
mov
or
repnz
cltd
js
dec
inc
or
cs
mov
or
sub
inc
pop
jne
and
movsb
fdivrl
jg
cli
testl
pop
out
testl
fdivr
mov
ja
adcb
jnp
repnz
fsts
push
incb
add
aad
lret
shr
jno
fsin
popa
sub
loop
jne
cmp
sbb
jno
pop
fcomps
sub
in
fisubl
les
mov
int3
popa
lods
add
jns
cs
nop
xchg
repz
movsl
imul
loope
call
in
out
icebp
push
ds
pop
fdivrp
stos
xchg
sub
push
pop
push
pop
mov
roll
cwtl
sbb
mov
insl
aaa
mov
icebp
repz
dec
sahf
push
pusha
cmp
into
loop
fwait
xor
fs
pop
rclb
push
cs
in
mov
mov
adc
or
jnp
shll
clc
pop
xor
sub
hlt
jno
xor
jne
mov
push
ja
outsb
cmc
sub
xor
sub
pop
and
push
push
mov
push
jnp
add
xor
psubq
sti
mov
gs
and
mov
enter
sbb
cmp
sub
add
in
in
jmp
jno
xor
lcall
rorl
push
addb
dec
inc
sar
and
cwtl
sub
fstps
sbb
adc
inc
and
cld
and
mov
lock
popa
sbb
xlat
mov
mov
add
decb
sbb
outsb
mov
dec
xor
push
sbb
dec
fcoms
adc
leave
mov
cmp
sub
cmp
adc
repnz
push
call
xlat
bound
adc
jmp
into
cmp
fildl
mov
ja
cmp
gs
imul
xor
pusha
pop
jle
xchg
cli
pop
adc
cmp
push
jae
fnstcw
sbb
jb
xchg
and
out
hlt
ljmp
push
push
stos
sub
or
test
mov
sbb
adc
jae
push
push
roll
push
push
jmp
mov
inc
sbb
daa
mov
mov
fs
fisttpll
mov
pop
ja
add
and
add
push
imul
adcb
or
nop
movl
mov
icebp
aas
inc
popa
repz
jmp
sub
and
jnp
and
pushf
das
addr16
clc
sbb
jp
sarl
sub
pop
lea
int3
or
xchg
roll
push
std
insb
pop
hlt
scas
rorb
ja
sub
xchg
mov
sub
ret
adc
and
punpcklwd
jno
pop
shrl
pop
and
repz
dec
mov
mov
sti
addr16
pop
rorl
inc
mov
ljmp
cltd
mov
sarb
insb
daa
dec
sbb
hlt
xor
push
mov
xlat
arpl
push
stos
xchg
xchg
shlb
mov
sbb
jae
xlat
mov
jg
sbb
push
aam
or
lods
mov
push
push
jns
js
in
sub
sub
addr16
xchg
icebp
sub
xchg
mov
sub
bound
popf
push
mov
xchg
leave
lahf
ljmp
das
xchg
in
mov
gs
mov
fcoml
inc
sbb
into
scas
in
shrb
pop
scas
fstps
inc
sahf
xchg
stos
pusha
test
rorb
mov
pop
jecxz
lods
add
int
pop
lretw
out
push
lret
xchg
xlat
fists
pushf
imul
xchg
outsb
mov
add
fwait
jecxz
jae
test
stc
jge
jae
jecxz
lea
push
pop
repnz
out
ffreep
add
jg
pop
aam
jp
sub
sti
xchg
outsb
dec
add
inc
mov
call
pop
jp
int3
iret
pop
pop
inc
and
mov
sub
cmp
je
ret
fisttps
mov
mov
sti
nop
ss
push
pop
mov
shl
sub
or
mov
fidivs
push
push
leave
clc
xchg
jnp
movsb
pop
loopne
inc
mov
icebp
pop
jae
mov
scas
scas
les
mov
cmc
adc
frstor
mov
mov
jl
cmp
jg
adc
or
es
inc
das
mov
int3
lea
sbb
icebp
push
adc
cli
out
jmp
in
movsb
sahf
push
mov
sbb
and
push
jecxz
push
clc
sbb
xor
ficoml
in
aam
scas
push
inc
pushf
movsb
js
dec
mov
es
xchg
cld
inc
push
xlat
lea
icebp
push
mov
xchg
sbb
test
das
cld
jb
in
and
dec
test
adc
mov
imul
std
xchg
sub
or
mov
paddq
or
pusha
xor
daa
lahf
fucomip
cmp
adc
inc
das
cmp
or
lcall
outsb
push
mov
cld
dec
push
mov
pop
mov
fmulp
jns
xor
icebp
jno
fsubs
dec
push
scas
andl
and
xchg
sub
xchg
and
lods
xor
mov
sub
mov
cmp
sub
fildll
and
pop
adc
inc
imull
dec
and
cltd
int
pop
jno
xor
cli
sti
sbb
mov
popa
mov
mov
jle
mov
jecxz
pusha
sbb
xor
data16
aam
insb
mov
lods
xor
cmp
jge
rol
addr16
xchg
movsl
cmpsb
push
dec
arpl
fsubs
jp
lret
xor
push
mov
mov
scas
xor
push
lahf
fstps
pop
xchg
pop
jge
dec
fisubrs
jno
fstl
loopne
mov
aas
xor
ffree
fucomip
adc
xchg
test
movsl
dec
adc
push
out
jecxz
jecxz
cmp
stos
aaa
aam
mov
adc
fsub
ret
into
push
sarb
fstpl
lcall
test
mov
pushf
push
fmull
adc
rcr
inc
gs
or
sahf
xor
and
and
bound
out
sbb
and
movsl
lods
sub
mov
xchg
jmp
push
jle
arpl
push
xor
mov
icebp
and
rorb
cmp
fimull
je
pop
mov
fs
jmp
outsb
jne
add
cmpsl
push
shll
push
fwait
inc
jp
pushf
jp
inc
pusha
jg
inc
ljmp
loopne
pop
mov
jno
or
mov
or
jmp
stos
inc
inc
sbb
scas
pop
mov
mov
mov
into
xor
add
dec
or
das
aam
push
and
and
pop
sub
jl
dec
cmp
jnp
clc
ljmp
mov
xchg
mov
mov
jecxz
test
inc
call
or
xor
sbb
rorl
bound
repnz
imul
cmpsl
fldl
pop
push
xchg
cmp
and
cmp
mov
inc
imul
mov
cli
icebp
adc
into
inc
cs
adc
pop
fcmovne
mov
outsb
cmpsb
adc
dec
cli
mov
ficoml
mov
aad
sbb
xor
push
aaa
add
cld
es
das
mov
nop
mov
mov
pop
xchg
inc
imul
outsb
push
mov
or
cmp
es
pop
push
call
int
xor
loop
repnz
int3
in
push
and
mov
xchg
sub
sti
mov
pushf
stos
addr16
lods
movsl
mov
push
xchg
lret
ja
call
push
in
scas
fstpt
lcall
hlt
push
add
lret
out
push
or
aas
repnz
popf
pop
int3
push
xchg
imul
add
mov
movsl
push
fldt
sbb
push
add
jecxz
lea
dec
lods
or
pop
pop
jae
int3
mov
stos
lds
or
sub
imul
or
push
movsl
push
rcrb
adc
dec
inc
xchg
movsb
mov
cmp
arpl
mov
add
in
mov
daa
or
xor
sti
push
idivb
mov
test
ret
pop
mov
jp
scas
fs
imul
fdivr
int
fisubrs
outsl
iret
movsl
cmc
gs
jmp
out
test
sbb
loop
sub
subl
inc
xlat
jb
mov
mov
std
sub
jg
lcall
pop
aaa
jl
std
xlat
inc
xor
mov
fcompl
adc
jns
jg
shll
lcall
sbb
addb
out
inc
pop
inc
pushf
stos
pop
sbb
scas
or
ljmp
ffreep
add
aad
gs
dec
js
cmc
cmp
xor
aaa
dec
pop
jbe
push
mov
cmp
mov
push
lcall
push
add
mov
mov
push
in
leave
sahf
push
mov
pop
jecxz
pushf
push
cmp
lods
std
rorb
sbb
stos
lret
xor
sbb
stos
pusha
movsl
inc
mov
jo
or
lcall
in
mov
sub
sbb
popf
fstpl
iret
pop
fwait
mov
push
jl
dec
lock
xlat
fwait
or
adc
in
lock
test
test
push
lahf
mov
xor
inc
push
nop
mov
dec
adc
inc
vmwrite
cwtl
lahf
dec
push
in
cmp
mov
add
test
popf
pusha
mov
inc
mov
pop
cld
push
xchg
scas
adc
pop
ficoml
lods
inc
outsb
mov
lret
data16
in
filds
sub
cli
popf
test
jo
pop
aam
push
lcall
sub
jno
mov
jbe
dec
outsl
lock
jb
mov
sbb
iret
aaa
inc
sbb
mov
xchg
cmp
cmpsb
outsb
sbb
jbe
sub
push
lock
pop
and
sbb
call
push
jg,pn
pusha
dec
adc
ja
fsincos
repnz
imul
imul
or
or
les
popl
in
jnp
jno
ss
in
or
movsl
xchg
loopne
mov
cld
fs
and
jne
dec
sti
mov
xchg
repz
sub
sarb
and
sahf
bound
mov
cmp
shll
or
int
cwtl
imul
mov
mov
dec
lods
xchg
mov
lret
scas
mov
iret
idivl
in
and
mov
or
shrl
sub
mov
adc
add
out
jne
mov
fiaddl
insl
imul
scas
int3
pop
xor
call
inc
lahf
mov
sbb
jbe
into
int
add
sub
imul
add
das
push
loopne
rcrl
sbbl
test
aad
mov
push
push
mov
push
sub
mov
rcrl
jge
mov
shr
pushf
leave
mov
push
ds
cli
in
jge
insl
xchg
cmpsl
mov
arpl
notl
mov
xor
cwtl
push
sub
fmull
lods
movb
sti
stc
out
mov
sbb
outsb
dec
movsl
inc
das
inc
stc
ret
xor
pushf
cmpsb
frstor
jb
sahf
popa
dec
lcall
jae
loope
jb
outsl
mov
jmp
ja
mov
mov
fcmove
gs
das
xchg
outsl
daa
lret
stc
into
fistps
mov
lahf
insb
sbb
sti
sub
inc
xor
or
mov
push
ljmp
in
seta
les
repz
enter
dec
inc
adc
xor
imul
dec
shl
mov
in
dec
xchg
pop
stos
ss
dec
pop
fs
fdiv
arpl
jmp
ds
stc
rorl
mov
shll
or
sahf
into
or
cmpsl
in
ror
sub
aaa
leave
insb
sarb
hlt
sub
stos
cld
add
in
lds
pop
repz
in
fsubrl
sbb
xor
mov
popa
push
das
test
cmpsb
adc
xor
sbb
xor
and
iret
xchg
dec
push
push
in
or
mov
mov
inc
cld
cmp
inc
mov
jmp
not
jns
call
sbb
push
outsl
jb
xlat
adc
sub
lcall
stos
fbstp
jle
sbb
dec
gs
repnz
lds
mov
stos
and
inc
imul
cltd
sub
sar
xor
mov
int
sbb
cmp
pop
cmp
xlat
pop
rcrl
mov
ja
outsb
mov
icebp
clc
into
sub
sub
test
pushf
push
icebp
cmpsl
movsl
nop
lods
push
inc
mov
and
fstps
outsl
dec
pushf
mov
mov
sub
fwait
dec
xchg
xchg
ret
jno
adc
lret
mov
icebp
in
mov
pop
out
mov
xchg
int
mov
cs
add
mov
fsubr
subl
out
sub
les
inc
or
pop
fcmove
fimull
mov
shll
out
push
add
stos
aad
shrl
xchg
sub
in
mov
mov
sub
mov
test
mov
fs
xchg
fsubrs
sbb
push
dec
call
mov
xor
pop
stc
ret
and
xchg
leave
stos
and
or
sub
rcrb
cmpl
mov
inc
mov
inc
mov
or
xchg
call
lock
push
lcall
sbb
ljmp
push
xchg
stc
or
les
pop
jp
subl
add
jmp
jmp
lods
pop
mov
xlat
mov
sti
test
sbb
xchg
mov
pop
rorl
loop
pushl
pop
or
jbe
pop
jl
sti
jmp
iret
mov
jecxz
orb
mov
push
sbb
shrb
cmp
push
ret
adc
fstps
aas
jmp
int3
jne
cmpsb
cltd
lds
or
xor
push
mov
add
lcall
pop
or
and
sti
pushf
mov
sub
dec
fwait
pop
inc
push
in
fstpl
sti
pushf
and
jbe
pop
orb
cli
dec
jmp
andb
lea
pop
add
jecxz
jl
sub
or
push
andl
fisttpll
aaa
aas
add
fisubrs
push
icebp
cmp
sbb
cli
out
and
xchg
fwait
push
loop
pop
cmp
stc
and
cmc
incl
out
out
sub
sbb
sbb
dec
mov
in
test
int
movsl
mov
mov
es
and
push
and
shlb
jae
leave
pop
cltd
std
testb
jbe
adc
fnstsw
nop
jae
pop
mov
hlt
add
fwait
mov
arpl
rcrl
clc
mov
out
lods
and
insl
mov
mov
clc
push
mov
into
call
ss
out
cwtl
jae
in
cmc
xorl
lahf
xor
or
push
in
andb
test
int
mov
div
lret
pop
jge
cmp
inc
xor
push
outsb
inc
jbe
hlt
nop
add
inc
xlat
repnz
inc
fiaddl
test
out
cmp
jecxz
mov
iret
mov
outsl
dec
enter
stos
insl
inc
sar
sub
lcall
stos
adc
sub
outsl
pusha
cmc
arpl
push
jno
sbb
push
sbb
xchg
fldenv
std
dec
icebp
add
fmuls
add
jb
dec
xlat
sub
imul
dec
push
sub
out
dec
push
daa
iret
daa
dec
fwait
icebp
push
mov
addr16
jge
sbb
fdivl
push
jmp
idivb
inc
mov
lcall
dec
hlt
cmpsb
insb
push
sub
xchg
jecxz
loopne
pushf
inc
jl
test
mov
addr16
ljmp
incl
xor
dec
mov
scas
cli
mov
mov
xchg
or
xor
adc
decb
mov
pop
push
mov
ret
cli
xor
pop
cmp
jle
sbb
hlt
cmp
dec
jl
sub
cmp
outsl
fldl
scas
mov
mov
dec
ret
mov
cld
pusha
adc
outsl
ret
push
arpl
sub
js
daa
pop
jg
lret
data16
xor
iret
push
mov
jno
leave
int
aam
mov
jmp
add
std
ljmp
or
js
jb
dec
imul
stos
shll
adc
adc
jg
cwtl
xchg
test
push
jnp
dec
mov
pop
sub
mov
mov
sahf
inc
test
cmp
adc
stc
mov
xchg
sbb
fildl
inc
xor
pusha
push
xchg
xor
in
sub
test
fimuls
pop
cld
dec
rorl
fistl
sbb
jb
les
sub
inc
mov
cmp
popa
emms
js,pt
je
in
xor
jl
dec
and
pop
outsl
sbb
test
dec
or
insb
aad
or
mov
pop
lea
icebp
sub
and
dec
loop
xor
aaa
jg
lcall
push
sub
mov
sbb
cld
testb
or
repnz
imul
add
pushaw
enter
dec
stos
gs
mov
jp
mov
mov
pop
call
adc
pop
mov
xor
test
std
imul
in
stc
push
rcrb
outsl
dec
cmp
pop
dec
ficoml
in
sub
push
in
cmp
mov
call
sti
push
or
outsl
mov
orl
jg
cld
jge
rcrl
shr
ja
loope
sub
push
roll
je
mov
mov
xchg
mov
xlat
or
xor
add
xor
out
fstps
cltd
shlb
pop
mov
add
sub
movsb
push
jns
xchg
adc
cmp
xchg
stos
cmp
ror
push
decl
mov
cmp
jle
cs
loop
push
pop
ret
cmp
or
cmp
mov
fsubrl
sub
mov
pop
pop
out
fs
mov
das
pop
mov
and
xor
and
loopne
jmp
loope
jmp
add
jecxz
mov
jbe
push
ret
ret
push
add
xchg
bound
lret
cltd
ss
int
inc
or
rclb
outsb
xor
popf
pop
inc
test
ficoms
xchg
sbb
pop
pop
xlat
clc
cmp
mov
pop
push
sbb
jbe
mov
adc
jb
push
fwait
aas
inc
lea
bound
es
sbb
jae
add
int3
cmpb
into
dec
dec
outsl
xor
cmp
dec
sub
lahf
xor
or
add
jl
cs
and
xor
or
in
lahf
test
in
or
push
mov
mov
icebp
inc
add
popa
in
adcl
mov
push
out
cmp
cld
leave
fld
jae
es
cmp
jo
inc
js
das
repz
shrb
push
pop
add
cltd
mov
call
push
add
loop
push
mov
popf
jl
xchg
testb
lea
ret
lds
leave
int
mov
loope
sub
subb
xchg
push
scas
jo
iret
cmp
xor
xchg
xchg
gs
mov
mov
jno
andl
inc
jb
ret
inc
cmp
xchg
in
xchg
inc
inc
cmp
add
pop
insl
pop
fidivrl
fistpl
lods
ret
das
aaa
out
sbb
and
pop
addr16
and
mov
test
pop
arpl
xchg
xchg
cmpsl
pop
inc
test
pop
push
loope
dec
push
inc
pop
call
in
or
rcll
stos
fwait
fwait
pop
mov
push
dec
mov
dec
mov
dec
sbb
div
test
xchg
fdecstp
and
stos
ljmp
adc
lahf
xchg
bound
gs
mov
inc
mov
or
adc
cmp
fwait
test
pop
mov
pop
sarb
adcl
adc
xor
adc
mov
xchg
cltd
add
daa
pop
popa
and
fldcw
and
lahf
imul
dec
cmpsb
xchg
stos
xor
add
xor
mov
inc
in
mov
pop
stos
loope
aam
adc
xchg
bound
scas
and
and
hlt
inc
push
movsl
sbb
ret
scas
je
pop
pop
push
lret
dec
mov
inc
jmp
or
test
pop
mov
pusha
int3
mov
mov
xor
pop
arpl
sti
addb
sub
addr16
sub
daa
aam
in
mov
clc
sti
pushf
xchg
cmp
push
pop
inc
negb
mov
fdivl
subl
adcl
lods
mov
out
jne
and
xchg
inc
push
pop
pop
das
jge
cmpl
pop
jno
mov
jns
cwtl
pop
dec
test
mov
psubw
loop,pn
insl
and
pop
xor
lods
inc
inc
rclb
sub
and
and
test
mov
xchg
mov
shll
in
push
je
test
adc
push
int
popf
mov
mov
shll
pop
mov
test
push
lea
fidivs
repz
jg
lds
xor
cmp
inc
xchg
mov
pop
jb
dec
mov
push
arpl
jno
lods
adc
lds
mulb
mov
push
mov
add
leave
xchg
mov
stos
xchg
jns
aas
shlb
jne
pusha
test
rorb
pop
fs
loopne
ret
push
mov
adc
pop
push
or
cltd
push
scas
popa
cli
xchg
popf
cmp
test
in
cmp
pop
sbb
cmp
push
xor
and
or
stc
movb
jmp
cmp
popa
inc
sbb
jle
mov
mov
addr16
repz
mov
std
push
fs
xchg
mov
imull
daa
sub
push
bound
aam
xchg
fcomp
jnp
mov
push
shll
sti
pop
aad
xchg
mov
shl
adc
hlt
pop
xlat
adc
xchg
fwait
xorl
scas
mov
add
in
push
cs
mov
shll
js
insl
inc
mov
add
int
add
lods
pushf
jae
mov
je
aaa
xchg
cmpsb
xlat
stc
or
daa
into
aas
mov
shl
adc
out
sub
mov
pop
out
bound
dec
orl
sub
fisttps
sub
leave
test
in
call
mov
cltd
lods
mov
push
mov
rcrb
das
aad
ss
rolb
sub
fwait
cmp
pop
iret
lods
insl
push
inc
lock
xchg
lahf
dec
xor
out
xor
inc
xor
dec
out
dec
fs
stc
ljmp
jmp
sub
and
aas
dec
pop
pop
mov
loop
push
das
lds
incb
pushf
aam
push
add
jmp
mov
jmp
enter
or
ss
jns
repz
enter
lret
ja
aad
or
adc
dec
das
push
cmp
xchg
adc
leave
adc
out
outsl
and
lods
inc
push
out
pop
sub
push
pop
lret
jp
das
loope
imul
ret
pop
and
or
push
adc
das
xchg
fcomps
jo
stos
xlat
addb
xchg
outsb
add
xchg
mov
sbb
jbe
in
add
jns
mov
gs
cmc
pop
test
jae
sarb
jb
test
sub
lock
cmpsl
jo
dec
jmp
push
inc
xchg
sbb
sbb
dec
cmpsb
call
push
jmp
mov
andb
lea
dec
add
testl
inc
inc
and
outsb
sbb
stos
ret
xor
mov
xor
and
xchg
push
push
pop
movsl
dec
cmp
cmpsl
jns
gs
add
cmp
fadds
imul
mov
cmp
fwait
inc
fisubrl
insb
popf
shrb
pop
pop
push
fidivs
ljmp
xor
lret
xor
or
cmpsb
fnstsw
jmp
frstor
rclb
ss
or
cmpsb
push
fsubrl
mov
mov
fnstsw
cmp
and
fiadds
negb
faddl
add
cmp
dec
iret
dec
push
fsubs
outsb
dec
mov
ljmp
shl
sbb
cld
call
icebp
inc
dec
in
inc
mov
lds
jae
adc
add
les
lcall
fcompl
rcrb
dec
sbb
loope
dec
xor
inc
iret
rorb
sub
into
and
pop
push
mov
pop
cmp
push
pop
dec
into
sub
int3
iret
and
int3
repnz
adc
xorl
lea
in
test
repnz
pop
mov
test
push
jb
std
jl
push
inc
daa
movsb
aam
rolb
imul
js
outsl
xchg
dec
jno
mov
cs
stos
fsub
iret
imul
mov
add
push
jmp
cli
in
ja
cmc
mov
les
lds
lods
movsb
dec
mov
sub
repz
push
cmc
xchg
je
filds
mov
push
mov
mov
std
jp
sbb
xor
inc
inc
mov
xchg
xor
loope
sarb
adc
xor
iret
inc
iret
hlt
push
and
dec
push
lods
or
ss
inc
or
insb
mov
inc
xchg
imul
incb
stos
jns
int3
sbb
mov
test
jle
sub
push
cli
jle
insl
inc
jg
mulb
fstl
mov
fcoml
ss
add
flds
sbb
sahf
mov
adc
jo
sbb
adc
mov
rorl
sub
mov
inc
testb
mov
dec
or
out
dec
jb
or
xchg
mov
bound
push
bound
outsl
popf
jle
xor
mov
in
int
pop
insl
mov
inc
lock
jns
dec
pusha
daa
nop
lcall
pop
add
lret
shrl
jno
shlb
sbb
jp
sub
idivl
inc
sti
test
subb
add
mov
ljmp
pop
dec
and
push
pop
sub
mov
cmpsl
lret
pop
jle
lahf
inc
loope
sbb
lods
xchg
fs
in
mov
in
push
nop
shrl
fidivrs
pop
sub
push
cli
push
xchg
mov
js,pt
sub
pop
jle
sub
mov
out
sub
fists
inc
test
jnp
int3
daa
jmp
mov
pop
dec
add
test
add
cmp
push
mov
je
cltd
xchg
lret
das
popa
loop
ljmp
test
jmp
test
fisttpl
or
pop
das
testb
add
mov
xor
lock
out
andl
lds
fldcw
pop
xrelease
cmp
cmp
leave
rcrl
mov
mov
hlt
fs
adc
dec
jmp
xor
outsb
shlb
data16
sbb
outsl
bound
sbb
push
scas
push
xchg
cmp
sbb
jp
aad
jne
pushf
sahf
inc
dec
xchg
mov
aas
jb
icebp
loopne
pop
fwait
out
xchg
sub
cltd
mov
cltd
jnp
and
ss
gs
ja
push
adc
sub
cmpsb
pop
push
repnz
mull
pushf
stos
pop
scas
repnz
adc
outsl
xor
add
leave
lods
cli
adc
mov
add
mov
xchg
es
bound
push
jbe
cwtl
push
adc
loope
aaa
daa
push
xor
loop
mov
mov
int3
jmp
push
out
xor
in
add
aad
dec
push
inc
test
mulb
mov
in
fbld
repz
inc
xor
pop
hlt
xor
sub
inc
mov
sbb
fistl
pusha
xchg
xor
fldl
sub
insl
xor
cltd
inc
fistpl
mov
lock
test
outsb
into
pop
js
aas
xor
cwtl
and
lahf
add
test
fs
fldt
orb
adc
sbb
fimuls
cs
leave
insb
jae
call
inc
fwait
mov
xchg
out
je
push
pop
in
pop
stos
mov
lods
or
add
push
push
mov
aas
mov
in
mov
xchg
ja
jmp
ret
mov
jp
jbe
cmpsb
xchg
dec
sbb
arpl
and
sbbl
fsts
repnz
and
adc
bound
rclb
pop
nop
add
inc
mov
popa
adc
fildl
stos
push
call
mov
xor
cmpsb
mov
add
outsl
adc
cmp
lock
or
sub
inc
or
mov
scas
jp
aam
decb
lcall
push
lret
push
sub
jecxz
incl
jp
cmp
xorl
jmp
pop
cmc
pop
mov
aam
mov
daa
out
pop
dec
xchg
sbb
mov
dec
daa
sbb
mov
sub
push
mov
adc
add
push
inc
lods
subl
sub
popf
dec
pop
mov
dec
and
movsl
jg
ljmp
dec
and
dec
sub
dec
push
xor
mov
icebp
adc
int
popa
jp
adc
and
fistpl
mov
xor
call
lock
lds
pusha
mov
sub
adc
ljmp
xlat
fwait
icebp
xlat
dec
fildl
xor
es
xchg
xor
into
stos
xor
adc
jne
push
or
or
ss
imul
sub
pop
arpl
xor
xchg
outsl
sbb
dec
dec
adc
push
mov
div
lods
pop
in
aam
mov
mov
jle
sub
xor
mul
dec
sbb
add
dec
test
mov
add
and
sub
out
adc
scas
int
sub
or
adc
shrl
pusha
pop
mov
push
xor
jle
sub
movl
add
lcall
in
xchg
ja
out
lcall
fsubs
movq
mov
mov
outsb
insl
mulb
xor
insl
push
inc
outsb
int
and
lods
dec
mov
arpl
and
enter
dec
xchg
mov
aad
add
inc
mov
int
push
lcall
cmc
mov
out
push
sub
pop
das
push
movaps
into
in
stc
or
add
out
and
out
pop
lods
adc
dec
xchg
sbb
xchg
leave
jb
push
insl
jge
mov
test
mov
inc
sub
mov
mov
push
in
jne
add
inc
push
mov
inc
repz
bound
stos
mov
call
negb
dec
test
in
push
mov
addr16
push
addr16
adcb
xor
pop
out
call
mov
sub
mov
sbb
inc
jb
iret
shlb
pop
lods
in
push
lret
data16
jns,pt
jb
les
insl
out
pop
adc
mov
mov
ror
test
stc
sbb
xor
add
sbbl
into
fwait
inc
leave
add
loop
in
inc
add
mov
or
mov
rcrl
mov
bound
rdpmc
and
loope
and
inc
ljmp
sbb
sub
mov
std
cmp
clc
movl
loop
cs
xor
cmp
scas
ret
ret
mov
push
jmp
push
fimull
sbb
sub
or
fs
cmp
mov
jae
mov
cmp
xchg
sahf
leave
jb
je
pop
inc
fidivl
lcall
or
add
jb
pop
data16
rol
test
dec
adc
sbb
jecxz
leave
cmc
inc
insb
fdivl
push
push
xchg
ret
js
pop
jp
lahf
inc
subb
test
cli
push
sub
dec
xchg
incl
pop
mov
jae,pn
fists
mov
shll
jno
jae
cmovnp
push
pop
push
mov
jbe
or
jbe
call
add
in
clc
jbe
xchg
hlt
sarb
sahf
xor
rolb
loope
xor
ss
xchg
lret
push
xor
arpl
loop
add
dec
int
dec
test
add
xchg
inc
xlat
rcr
add
popf
xorb
daa
add
sub
adc
hlt
jp
xchg
xlat
dec
xchg
dec
pop
ljmp
bound
addl
fs
jnp
pop
mov
hlt
pop
lock
fwait
scas
loope
sahf
sbb
or
mov
call
not
jge
inc
sub
sub
mov
shll
icebp
add
stos
jge
lea
adc
es
int
cltd
movsb
mov
sbb
out
out
test
rolb
mov
je
out
inc
sub
addr16
sbb
push
sub
dec
lock
dec
pop
shl
push
cmp
outsb
fst
xor
adc
movsl
in
push
daa
rol
dec
out
push
aad
ficomps
push
or
mov
cmp
inc
pop
jp
lods
imul
push
je
xchg
iret
sar
repz
outsb
cmpsb
imul
sti
stos
lds
repz
inc
test
fsubp
daa
pusha
jae
and
push
jno
jge
imul
xchg
sbb
fsubrl
sub
push
sub
push
clc
shlb
add
sarl
cmpsl
add
pop
mov
popa
mov
scas
outsl
out
stos
pushf
adc
jp
sub
jo
or
test
popa
popf
iret
test
mov
adc
sub
and
or
scas
into
imul
or
adc
xor
je
inc
das
mov
push
out
aas
push
jecxz
cmp
cwtl
and
jge
push
sbb
inc
sbb
call
jmp
and
int
xor
pop
add
incl
mov
pushf
jg
shr
cmp
ret
mov
mov
or
push
insb
lds
cmp
int3
mov
in
mov
xchg
add
sub
xor
push
jnp
lcall
in
dec
cwtl
fldenv
dec
outsb
fistps
shll
fwait
xor
test
dec
sbb
add
or
cmpsl
aam
loop
jmp
sub
ror
and
xstore-rng
cmpsl
movl
dec
push
mov
call
xchg
shl
jns
ja
xchg
xor
cmp
xor
adc
or
mov
fs
jb
test
imul
orl
mov
sbb
je
sbb
stos
lcall
icebp
pop
dec
test
int3
xor
mov
inc
out
adc
jns
xor
pop
adc
pop
dec
jae
lea
lds
mov
stos
mov
dec
xchg
dec
not
mov
xor
mov
adcb
in
lods
add
mull
inc
into
hlt
imul
movsl
mov
xchg
inc
mov
dec
sub
inc
mov
cs
xchg
ret
mov
mov
sub
pop
inc
mov
fsubrs
xchg
cmp
add
sbb
iret
imul
lret
mov
inc
push
aaa
rcll
ja
in
cltd
lcall
adc
pushw
out
pop
cmp
dec
push
leave
adcb
ljmp
ljmp
xchg
out
jb
stos
cmc
std
shll
fisttps
outsb
xchg
jo
lret
add
and
add
fistps
add
out
lea
hlt
dec
jp
cmp
sar
js
mov
lock
cld
pop
int3
pop
sti
cmpsb
clc
jg
fistl
sahf
lods
jmp
adc
and
xchg
and
jp
or
dec
jmp
sbb
jns
scas
out
xlat
push
shl
test
idivl
insb
adc
adc
push
xor
cli
sub
fstpl
push
sbb
sub
nop
pop
cs
icebp
jle
in
mov
dec
test
jbe
lcall
call
xchg
and
movsl
mov
bts
jbe
inc
xchg
arpl
cmp
push
xchg
sbbl
mov
testl
rcrl
mov
or
inc
lcall
in
mov
mov
arpl
mov
out
fucom
cmp
das
inc
adc
shrb
repz
add
div
push
mov
mov
mov
pop
lret
push
dec
ljmp
outsb
lret
mov
sub
sub
push
xor
inc
jbe
icebp
lea
push
ljmp
testl
xchg
add
pop
cmp
mov
xchg
adc
test
fcom
shl
inc
fdivrl
lret
sbb
pop
adc
inc
ja
push
lock
bound
push
jl
rclb
sbb
or
mul
fs
cmp
and
ljmp
adc
jp
out
jne
std
and
jecxz
inc
lods
out
mov
and
mov
lret
fiadds
push
xchg
xchg
andb
bound
jno
pop
enter
addr16
sub
std
mov
mov
jne
mov
xor
inc
pop
sub
xchg
dec
insb
fisttpll
pop
cli
push
out
adc
sub
xchg
mov
imul
xchg
out
pop
pop
and
imul
or
lcall
mov
inc
ljmp
jmp
cmp
mov
mov
subl
xor
popf
cmpsb
mov
or
das
dec
sbb
adc
inc
push
sbb
adc
pop
mov
nop
in
sti
adc
sbb
jl
mov
and
cmp
xchg
sbb
add
jns
adc
mov
cmp
ja
insb
mov
and
dec
fisubl
cmpl
jle
adc
leave
pop
je
add
dec
dec
pop
sbb
repz
mov
cmpsl
mov
jge
adc
repnz
push
xor
jg
dec
in
mov
cmp
repz
lods
pop
in
jge
jmp
sub
inc
loopne
mov
and
adc
arpl
xchg
xor
xor
cs
bound
mov
ds
sbbb
xor
out
push
mov
lods
scas
fisubl
pop
dec
fcomip
dec
sbb
add
and
daa
aad
mov
sbb
pusha
sub
ret
mov
mov
jmp
mov
xchg
push
add
popf
andl
jl
imul
dec
or
pop
fsubr
push
es
enter
mov
push
fidivs
sbb
mov
je
jmp
add
test
jp
into
xchg
pop
xchg
fidivs
loope
sub
insb
decl
int
insl
mov
adc
cmp
sub
cli
lock
xchg
lds
push
xor
cmp
or
cmp
jne
push
mov
mov
jp
dec
into
mov
sbb
mov
push
pop
arpl
aad
jbe
fs
jp
push
sbb
and
mov
mov
fdivr
dec
stc
jecxz
scas
mov
xlat
xchg
jmp
lds
dec
insl
jae
ljmp
sarl
clc
push
sub
jb
mov
arpl
mov
sbb
in
or
push
xor
iret
sbb
std
push
mov
icebp
mov
js
fs
clc
jnp
in
imul
repz
mov
outsl
js
pop
lds
jmp
lods
movsl
xchg
push
fisttpll
pop
dec
adc
add
push
push
loop
fs
jbe
inc
sbb
jl
or
and
sahf
clc
dec
in
stc
mov
addr16
insl
repnz
jne
addb
clc
inc
push
test
stc
pop
jmp
xchg
mov
cmp
dec
sbb
adc
pop
das
add
jle
xor
std
daa
mov
adc
cmp
xor
mov
loope
lret
mov
xchg
ret
loop
ret
enter
jns
push
pop
inc
mov
fdivrp
movsl
mov
mov
xchg
loop
jge
or
popa
xchg
popf
ja
sub
push
sub
stos
out
outsb
insb
test
xor
cmp
fimuls
and
inc
rclb
jno
push
cli
cmp
sub
jno
and
lahf
rorb
add
movsb
sub
xor
insb
xchg
dec
sub
adc
xor
or
push
push
inc
inc
cmpsl
cmp
rcll
ljmp
or
movb
push
test
mov
cmp
cmp
imul
fstpt
sub
mov
jg
xor
mov
addl
scas
xchg
sub
inc
push
jp
test
lock
sbb
add
in
ja
mov
imul
repz
fmull
out
fs
cmp
in
jmp
in
xchg
cmp
xor
push
add
fpatan
stc
fstp
adc
imul
mov
xchg
notl
iret
jnp
push
out
ret
add
mov
pop
xchg
in
test
adc
out
mov
cmp
incb
or
sub
cmp
fdivrl
dec
inc
insb
inc
or
and
and
dec
push
imul
and
cwtl
jge
lret
hlt
xchg
pop
jg
test
outsl
jb
push
clc
lds
cli
sub
dec
xor
das
lret
imul
xchg
clc
jecxz
sub
subl
iret
ja
mov
int
mov
roll
scas
pop
icebp
imul
out
cmp
adc
jne
add
cld
aad
push
mov
and
dec
lock
mov
movsb
jmp
mov
and
dec
dec
cltd
jg
inc
insl
ret
clc
cmp
push
call
rolb
ret
ret
pushf
out
or
scas
test
cli
lods
xchg
incb
dec
popa
pop
popf
push
and
push
enter
std
lret
push
xchg
insl
mov
faddl
add
sub
stos
pushf
bound
ror
or
xchg
sbb
sub
push
push
sub
imul
cli
and
mov
mov
pop
xchg
pop
popa
and
push
inc
mov
pop
push
pop
adc
inc
scas
pop
enter
out
mov
cmpsb
or
into
int3
jp
fdivrp
jb
jge
sbb
mov
in
mov
xchg
xchg
pop
lret
xchg
push
or
xchg
mov
mov
insb
ret
add
and
cmp
or
popf
fsubr
leave
jb
movsl
shrb
lret
dec
jmp
xor
adc
cmpsb
lods
test
out
add
cmp
fstps
popf
mov
dec
lahf
mov
inc
sbb
cltd
sub
mov
out
popf
mov
adc
test
cwtl
push
lcall
jge
push
cmpb
rorb
and
std
in
dec
icebp
ss
xchg
sub
js
rorb
jns
in
xor
pop
repz
outsb
jnp
lahf
cmp
fwait
jg
mov
mov
xchg
mov
sbb
inc
loop
daa
and
jns
adc
inc
movl
push
out
xorb
cmpsb
repnz
loopne
pop
jne
enter
mov
arpl
out
add
sbb
imul
leave
cli
push
shll
mov
sub
jl
xor
pop
sub
data16
movsl
sahf
in
pushf
ret
sti
add
into
cmpsl
fldenv
jnp
push
jne
jl
scas
mov
outsb
movsb
pop
xor
cmp
mov
in
push
xor
jae
pop
mov
mov
sbb
jno
adc
sub
lcall
xor
shll
inc
test
lds
popa
mov
sbb
sti
push
or
xor
xor
dec
lahf
mov
jle
pop
push
xor
repnz
mov
mov
mov
leave
clc
pop
into
gs
mov
movsb
aam
jns
mov
push
mov
insl
es
and
mov
cmp
out
fisttps
das
xor
mov
push
xor
and
gs
aas
sbb
int3
push
adc
das
test
xchg
outsb
cmpsb
test
dec
lods
push
call
sub
adc
arpl
fidivrs
dec
xor
loopne
stos
aas
imul
mov
xorl
in
sub
jb
fucom
jl
inc
lock
mov
pop
insb
or
int3
xor
mov
mov
pop
dec
ret
fmull
jae
pop
xchg
pop
fidivrl
insb
outsb
xchg
lods
push
rorl
pop
fmuls
or
push
jp
mov
pop
repz
in
push
add
xchg
pushf
mov
arpl
ljmp
pop
push
xchg
js
shll
shr
stc
cwtl
mov
mov
pop
ror
xchg
mov
jge
loop
dec
mov
cwtl
lcall
idivb
ds
scas
mov
out
lods
jne
mov
pop
push
aad
sbb
add
sub
mov
lret
cmp
sub
xor
fistpll
sub
mov
or
fcomip
movsl
inc
bound
mov
or
adc
adc
sub
popl
cmp
adc
jbe
xchg
dec
outsl
sbb
mov
sbb
fsubl
in
xchg
mov
popa
xlat
jo
lods
out
xchg
out
jge
inc
test
outsb
jne
xchg
cmpsl
pop
pop
jae
sub
iret
adcb
inc
xchg
mov
test
rol
or
pop
lods
mov
mov
sahf
sub
and
xor
sub
loope
jno
mov
lods
push
out
mov
pop
test
add
sbb
adcl
loop
loopne
jmp
or
mov
xor
outsb
adc
leave
popa
mov
sbb
sbb
sarl
icebp
lea
push
mov
xor
push
xlat
bound
xor
pop
adc
xor
repnz
mov
push
inc
lcall
lods
dec
inc
pop
xor
add
aad
loopne
xlat
jns
insb
addl
test
loope
and
xor
dec
sbb
lock
cmpsb
inc
dec
mov
add
testb
aam
pop
idivb
ljmp
std
ret
and
lret
mov
xor
jns
push
movsb
or
push
and
ror
xor
add
rcll
repz
jae
mov
inc
lock
sarb
adc
mov
xchg
je
popf
ret
stc
test
test
ret
dec
push
jp
push
mov
mov
arpl
jmp
popa
xchg
xchg
stc
jno
or
outsl
insb
cmp
daa
sub
push
lock
xor
aaa
jecxz
sub
jg
mov
cmp
add
test
jnp
push
pop
sbb
enter
enter
lret
fsubl
scas
inc
into
push
mov
shrl
in
adc
inc
out
stos
pop
xchg
iret
cli
and
sbb
insb
push
pop
test
aam
ja
jbe
mov
in
aaa
pop
adc
inc
dec
push
cltd
push
add
mov
inc
cmp
mov
or
in
mov
lds
filds
and
jbe
mov
vpaddb
sbb
inc
push
jb
mov
fsub
xchg
lret
lods
stos
mov
fisubl
in
pushf
dec
iret
bound
stos
lods
push
addr16
xchg
lret
adc
insb
ficomps
push
jne
mov
push
in
das
std
cs
sahf
push
cmc
cmpsl
push
push
clc
ljmp
xchg
mov
and
in
sub
test
inc
cmpsl
jne
sub
jecxz
dec
cwtl
call
pop
test
mov
in
lds
sub
lret
outsl
sub
call
inc
and
shlb
mov
and
movsb
mov
mov
sti
push
fldl
out
gs
mov
incb
in
es
inc
xchg
je
rcll
nop
pop
arpl
sub
pop
fwait
xor
push
mov
cmp
adc
out
les
push
xchg
in
or
cltd
sti
xchg
je
fildl
out
lret
xchg
orl
mov
aaa
aad
bound
out
mov
movsb
jle
push
daa
nop
jecxz
mov
in
xor
push
rcrb
push
loopne
lret
testb
loope
aad
jmp
adc
jl
and
add
pop
push
scas
xchg
mov
xor
cmp
and
cmp
repnz
cmp
jns
jb
xchg
jg
mov
rcll
mov
mov
sahf
sub
shll
fildll
loop
dec
adc
mov
loopne
fisubs
or
sbb
add
inc
je
pop
sub
xchg
xor
dec
push
mov
adc
cs
sbb
lret
pop
out
js
dec
fnsave
pop
loope
jmp
ljmp
cmc
outsb
insb
push
pop
inc
movsl
jmp
mov
push
cmpb
jmp
sub
adc
sub
sub
mov
mov
mov
shlb
pop
repnz
daa
jle
jo
sbb
ret
loop
fistpl
add
xchg
pop
mov
cmp
lret
push
int
xchg
inc
int3
fildl
mov
fisubrs
and
xchg
cmp
pop
jo,pt
lret
insl
add
scas
xchg
lods
inc
xchg
jnp,pt
outsl
test
adc
mov
dec
sahf
and
inc
push
sub
inc
adc
xlat
shll
xor
in
loope
lret
out
xor
cld
jbe
fimull
stos
cwtl
xchg
stos
movsl
xchg
shll
mov
cmp
cmpsb
and
inc
idiv
out
cli
jae
xchg
dec
jno
sub
push
and
jmp
mov
and
shll
stos
adc
push
dec
push
xchg
push
inc
pop
add
fwait
inc
jns
jns
mov
or
out
mov
inc
dec
cmp
mov
cmc
stos
jbe
sbb
pop
lea
shlb
mov
test
jmp
std
inc
push
aad
clc
or
jbe
jb
lea
or
out
pop
adc
dec
repnz
mov
test
xor
out
mov
or
cs
add
cmc
jmp
xchg
sbb
test
jg
add
loopne
pop
pop
push
fstps
cli
std
push
add
ds
xlat
cmpsb
sub
into
xlat
fistl
sbb
enter
cld
mov
imul
push
repnz
fwait
sahf
in
sti
and
xchg
out
sbb
pop
bound
mov
fisubs
je
push
sahf
sbb
loopne
mov
imul
imul
sub
lret
and
push
and
mull
jo
mov
jne
divb
inc
dec
inc
lcall
fisttpll
loopne
mov
mov
test
jno
pop
and
xlat
imul
push
movsl
sub
mull
push
pop
cmpsb
pop
scas
lret
inc
ret
aas
mov
cmpsb
repnz
dec
daa
adc
je
lret
lods
jbe
pop
inc
icebp
xchg
je
mov
fdivs
shlb
jecxz
mov
out
aam
cmpsl
stos
cmc
js
std
push
push
add
pushf
fdivrs
pop
adc
mov
xor
push
push
getsec
adc
imul
cmc
fimuls
jne
rcl
lret
sub
dec
jbe
mov
imul
mov
or
dec
cli
or
stos
cs
and
scas
enter
pusha
jmp
addr16
jge
leave
mov
dec
inc
jl
add
pop
mov
rcrl
pop
lret
lds
adc
pop
mov
xor
add
andb
push
sub
clc
popa
cmp
cs
out
fidivrl
mov
jge
adc
jb
xchg
xor
loop
aam
pop
lret
cmp
push
inc
nop
mov
xchg
jns
mov
stc
pop
popa
inc
leave
cmp
xorl
inc
std
pop
xchg
push
mov
jnp
ljmp
inc
mov
xchg
sti
loopne
inc
and
or
push
mov
imul
pop
movsl
arpl
insl
lock
xor
dec
scas
js
mov
xor
add
rcrb
rcll
mov
in
ljmp
xor
cmp
xchg
sub
out
xchg
lret
push
sbb
js
jnp
pop
ss
adc
push
xor
addr16
rclb
sub
dec
ljmp
scas
popf
pusha
into
and
stos
outsb
and
dec
in
dec
xchg
ljmp
shlb
mov
js
outsb
hlt
xchg
cli
mov
flds
mov
mov
outsb
lods
mov
ret
mov
mov
mov
cmp
push
cmp
frstor
sub
sub
jae
daa
jge
jae
bound
jae
mov
ljmp
gs
jae
jmp
push
sbb
cmpsb
xor
dec
mov
cmp
jecxz
cld
jecxz
dec
imul
adc
mov
sbb
aas
jecxz
pop
scas
repnz
adc
push
pop
sbb
mov
mov
dec
rolb
sbb
dec
jge
mov
adcl
mov
subl
ljmp
xor
mov
and
int3
mov
jne
xchg
and
aas
inc
push
addr16
mov
lods
or
push
mov
mov
ss
or
fwait
rorb
scas
and
adc
gs
cmp
mov
out
lea
and
and
push
testl
ja
outsl
lret
or
outsb
pusha
outsl
out
test
in
push
mov
or
mov
jb
adc
call
mov
mov
xchg
push
adc
lea
pop
lcall
xchg
sbb
or
cs
and
inc
or
add
iret
cltd
add
in
xorl
push
mov
or
add
inc
fadds
rcll
sbb
addl
fcoms
xor
xor
inc
adc
and
mov
cmp
cmp
or
ficoms
notl
xchg
je
ja
sub
jbe
enter
imul
xor
mov
mov
daa
loop
fisttps
lahf
aas
jne
int
mov
sub
popa
adc
fmuls
add
sbb
xchg
sub
cmp
inc
cwtl
imul
mov
arpl
addr16
push
ret
pop
scas
jl
aad
jne
pushf
adc
mov
sti
mov
movsl
dec
mov
pop
jle
and
push
mov
dec
sub
in
lods
out
mov
loopne
jbe
sbb
outsb
or
fcompl
and
inc
inc
mov
cmp
pop
pop
xchg
inc
aas
add
dec
imulb
pop
outsb
jb
out
push
push
int3
inc
cld
imul
xor
cmp
cmp
mov
in
mov
sti
dec
lods
fsubrp
std
and
fistpll
pop
dec
pop
popf
cmp
sub
adc
and
out
mov
jle
jno
jbe
add
stos
xchg
push
lods
xor
movsb
and
mov
cmc
mov
mov
aaa
fcomps
xorb
mov
inc
movsl
mov
sub
out
mov
mov
aaa
sbbl
in
jo
pop
into
movsl
in
or
gs
aam
call
sbb
jecxz
sar
clc
xchg
repnz
orl
imul
jns
and
dec
stc
pextrw
mov
and
popf
ror
mov
ljmp
cltd
add
or
jge
adc
shlb
clc
inc
test
dec
imul
jnp
fldt
scas
bnd
addb
aaa
je
mov
out
mov
arpl
cmpsb
fs
cld
xor
push
subl
aaa
ss
push
je
push
xchg
loope
faddp
jae
jge
push
movb
mov
cmp
pop
loopne
pusha
adc
scas
rcl
cs
cld
test
lds
cmp
sbb
cmc
inc
outsb
mov
aam
add
outsl
cmc
rcrb
popf
les
push
mov
out
imul
jbe
and
les
pop
mov
ss
rorl
jno
jo
xchg
lret
pop
xor
ret
stc
in
push
push
iret
pop
ret
sti
jp
mov
pusha
outsb
xor
pusha
int
je
subb
add
adc
xchg
negl
xor
and
test
movb
sbb
movsb
sub
mov
jo
mov
into
in
pop
jbe
mov
adc
mov
push
adc
mov
xchg
insl
subl
negl
pop
sub
mov
mov
out
dec
arpl
jecxz
in
xchg
lahf
in
daa
jmp
push
lret
mov
data16
clc
cmp
lahf
popa
lret
aam
aad
rcrl
push
mov
rcll
cmp
ret
lods
sbb
xorb
lret
lock
jbe
and
jge
cmp
movsl
fildll
je
ss
fwait
pop
mov
sti
mov
iret
xor
adc
pop
xlat
ja
aaa
pop
xchg
mov
push
rcrl
adc
imul
rcr
xchg
adcb
rclb
push
push
or
pop
lods
sbb
in
xor
icebp
sbb
xorl
mov
cwtl
arpl
xlat
mov
pop
scas
push
lods
xchg
cmc
repz
inc
pop
fwait
iret
dec
mov
push
dec
dec
jle
adc
cmp
sub
dec
fcomi
xlat
ss
mov
pop
mov
sub
cmp
pop
cmp
inc
lds
mov
mov
popf
shlb
pushf
jle
push
push
cld
mov
dec
sub
imul
xor
aam
shrl
and
pusha
dec
mov
or
lds
shll
insl
inc
xor
cmp
aad
mov
mov
mov
fsubp
stc
out
xlat
int3
cmp
popa
cmpsl
cwtl
add
xchg
jns
out
mov
lods
cmp
fildl
mov
loope
cli
jns
testl
fldcw
cltd
sbb
adc
adcl
xor
aas
push
stos
out
pop
repz
add
and
sbb
sub
mov
fadd
cmc
sub
sarb
lret
stos
jecxz
pop
test
pop
sub
or
into
insl
out
ret
mov
fucomi
cmp
add
into
pusha
jg
std
insl
ja
in
rorl
sbbb
xor
pop
mov
popf
imul
sahf
mov
inc
xor
roll
inc
icebp
xor
int
jo
outsl
push
mov
lret
sub
cmpsb
das
movb
movsl
sub
jmp
pop
jo
cmp
icebp
xchg
mov
jae
cwtl
in
in
test
mov
repnz
push
or
xor
add
inc
mov
pop
or
lahf
iret
rcr
xor
jns
jecxz
sti
pop
mov
jnp
and
outsb
cld
sbb
push
cmp
out
pop
loopne
inc
in
pop
lcall
fisttps
adc
out
je
mov
ficompl
cmp
dec
xor
cmp
push
sahf
pop
pop
mov
loop
pop
sbb
loope
ja
jb
adcl
addr16
clc
or
orb
jg
cmpsl
inc
or
sbb
in
sub
push
xchg
xchg
mov
mov
cwtl
xor
mov
push
cmpsb
pop
jmp
xchg
stc
xchg
fwait
mov
hlt
cmpsl
pop
pop
or
insb
xchg
and
pop
dec
push
fildl
enter
push
dec
es
jbe
xchg
cmp
ret
out
mov
cmp
insl
mov
cmpsl
shr
fstps
popf
dec
lret
out
lret
push
mov
cmp
dec
cmp
andb
cmp
dec
or
in
dec
jns
mov
aas
inc
int
mov
xchg
imul
mov
sub
cmp
pusha
aad
cmp
pop
mov
mov
gs
pop
rclb
and
fidivrl
xor
adc
adc
mov
mov
jp
subw
ljmp
pusha
mov
inc
pop
outsb
popf
xor
stc
xor
push
mov
pop
call
fucomp
mov
outsb
pop
insl
mov
lods
cmp
fistpl
cmp
cmc
rcl
jmp
jl
inc
call
dec
jo
repz
xlat
ljmp
lcall
sbb
pop
in
ljmp
xor
mov
jle
mov
scas
jb
fwait
mov
nop
push
sarl
cmp
fidivl
dec
adc
ljmp
dec
mov
arpl
push
mov
imul
push
sbb
and
mov
xchg
xor
outsw
inc
notb
pop
xor
or
mov
ds
xchg
loopne
sti
call
or
fbld
pop
push
ja
out
xorl
js
add
stos
mov
mov
sub
movsl
js
xchg
sarb
cmp
sub
inc
lret
faddl
mov
in
enter
cmp
mov
out
jne
cmpl
add
sbb
pop
and
mov
mov
push
into
stos
popf
ret
int
mov
push
lods
mov
sbb
lcall
daa
sbb
mov
xor
pop
cltd
ret
xor
cli
xchg
push
in
mov
mov
cmp
pop
pop
jae
pop
inc
mov
mov
es
adcb
cwtl
xor
fstpl
outsb
jmp
push
call
jns
cli
jecxz
jle
inc
jl
cltd
shlb
adc
and
mov
aad
test
inc
insl
and
push
test
mov
mov
cmpb
sub
sub
pop
in
xor
movsb
mul
dec
aas
or
insl
dec
loope
cli
cwtl
cmp
lcall
jmp
and
aas
and
sbb
int3
push
in
and
add
outsb
scas
xchg
inc
sbb
sbb
push
xchg
std
mov
das
or
push
sub
repnz
lcall
loope
imul
add
cmovne
stos
mov
xchg
das
or
mov
push
adcl
lods
or
fsubrs
sti
mov
mov
dec
jno
mov
jnp
and
mov
loope
in
push
sbb
call
push
icebp
iret
xchg
out
push
arpl
test
fs
jmp
push
arpl
repz
repz
insl
fsub
dec
loopne
sbb
mov
jbe
data16
je
aam
mov
push
adc
dec
add
into
decb
mov
sahf
mov
or
push
mov
nop
sbbl
enter
ret
test
aas
ds
sbbl
sbb
cmpsb
test
les
sbb
pop
in
mov
mov
mov
popf
or
jne
aam
or
add
jno
nop
addr16
call
int3
sub
add
div
jge
imul
sbb
inc
shll
ljmp
notl
pop
in
mov
mov
sub
add
frstor
lods
mov
out
cmpsl
test
xchg
adc
jmp
xchg
or
xchg
test
das
sahf
insl
ja
or
mov
jo
je
cmc
jns
aaa
mov
mov
mov
in
outsb
mov
cmpsl
mov
js
sahf
mov
xor
mov
cmp
icebp
in
and
dec
pop
xchg
mov
cli
sbb
pop
mov
inc
or
mov
out
dec
mov
test
dec
data16
repz
pop
and
addl
mov
jge
xor
mov
cmpl
xchg
xchg
outsl
or
lret
int3
sbb
mov
aaa
loop
mov
jnp
les
pop
push
cmp
shlb
cli
out
fstps
repnz
in
adc
ret
or
sub
mov
push
dec
pop
neg
push
movsl
dec
mov
or
jns
xchg
sub
mov
pop
mov
into
cmpsl
cmp
loopne
addps
sub
cmp
sub
push
dec
lods
daa
std
cwtl
subb
sbb
xchg
scas
sar
stos
test
jecxz
fldl
push
sbb
out
aas
adc
lret
cmpsl
mov
xchg
repz
aad
sbb
aaa
repz
insb
add
inc
test
ljmp
rolb
jge
scas
mov
in
adc
adc
lret
mov
leave
push
dec
xor
hlt
mov
dec
xor
pushf
enter
sbb
mov
add
aas
xor
dec
in
cwtl
add
rorl
mov
ja
int3
sub
sbb
mov
out
daa
sarl
clc
mov
sbb
inc
push
aas
mov
mov
dec
or
push
mov
sub
pop
inc
xor
cmp
sub
mov
xchg
in
stos
es
fisttpl
sti
loope
adc
or
add
cmp
or
xchg
cld
cli
xor
mov
shll
js
rol
adc
test
xor
pushf
and
xchg
and
fwait
lcall
xor
sbb
jp
ss
jle
sbb
leave
push
repz
subb
dec
pop
ds
in
dec
insb
jmp
pop
nop
xchg
push
jb
xor
shlb
adc
rcl
jb
je
push
ja
inc
nop
ljmp
inc
mov
dec
iret
movsl
add
lcall
or
jecxz
sbb
xor
jae
pop
dec
lea
and
xchg
or
jl
dec
fstl
leave
jo
push
mov
shl
mov
and
into
shll
stc
dec
data16
cmp
ret
iret
popf
jo
fisubrl
adc
xchg
jg
scas
push
add
xchg
jns
push
sbb
cmc
jmp
fdecstp
sbb
cld
dec
mov
stos
add
mov
mov
sub
mov
mov
int
test
push
mov
pop
cmp
adc
xor
call
add
sub
push
and
ret
out
fstps
je
int
scas
pop
int
jbe
xchg
xchg
ja
mov
cld
mov
push
hlt
xchg
add
cmpsb
out
ret
lahf
repnz
nopl
out
push
cs
mov
sub
in
add
mov
in
addr16
cwtl
push
call
sub
xor
adc
mov
das
xchg
and
mov
lret
repz
inc
xor
xchg
decl
cmpsl
jp
mov
int
stos
inc
add
jne
jp
jbe
cltd
jecxz
sbb
or
jecxz
ja
mov
sbb
jae
mov
test
addr16
add
and
test
cmpsl
cmp
icebp
das
sysret
mov
sub
mov
adc
cltd
orb
cmp
icebp
jmp
fs
jp
push
sbb
shrb
les
clc
in
scas
mov
add
xlat
imul
and
add
out
pop
xor
aaa
dec
and
jo
stos
jmp
fildl
cmpsl
iret
cwtl
push
into
add
mov
push
jnp
pop
xor
mov
jb
movl
sbb
fmul
sub
lret
pusha
fimull
enter
shrl
or
mov
scas
xchg
push
sbb
inc
movsb
lods
lods
ss
aad
cwtl
lret
add
std
fbld
xor
out
xorl
pop
test
mov
adc
lods
sub
stc
add
inc
cmc
cmp
xchg
jne
mov
mov
cmpsb
sbb
or
cld
cmp
cmp
sub
in
movsb
jmp
incb
cmpsb
rol
pop
fidivrs
lret
addr16
hlt
add
jnp
in
stc
pushf
into
outsb
or
movsl
add
daa
cmp
call
popa
xchg
cli
pop
fwait
push
leave
mov
jmp
movsb
push
mov
adc
mov
call
mov
push
and
sbb
sahf
add
jne
rcrl
test
idivb
int
scas
xor
cmp
or
addr16
mov
loope
aad
xorb
lret
mov
pop
jg
in
or
std
mov
jmp
jg
popa
stos
movsb
dec
lret
das
lcall
lods
call
aas
mov
and
outsl
sti
xor
dec
and
jo
jmp
push
mov
in
pop
outsb
mov
dec
and
sbb
sahf
sbb
or
pop
fldenv
cmp
jne
repnz
push
ja
stc
into
arpl
mov
jmp
push
mov
pushf
fcomps
ds
inc
push
dec
lds
jmp
lret
call
push
xor
mov
dec
and
and
in
and
insb
lret
lods
sbb
jmp
jp
push
mov
sbb
sarb
or
iret
lds
enter
mov
mov
dec
xlat
xchg
and
ficompl
lock
push
cwtl
ds
push
jle
aaa
mov
mov
jl
cmp
in
fisubrl
mov
or
xlat
in
lds
jo
mov
repz
pusha
or
jbe
js
outsl
imul
out
xchg
xchg
xchg
push
inc
std
aad
add
xchg
mov
mov
pop
xor
cli
scas
pop
push
aas
pusha
ret
jne
xor
pop
repz
cld
stc
jns
call
out
aas
imul
out
pusha
cmp
inc
add
rcll
mov
test
addr16
lods
push
or
pop
je
stc
inc
mov
pop
in
int3
aad
jmp
icebp
fildll
call
enter
inc
mov
js
xor
shrl
sbb
adcb
xchg
or
decl
arpl
inc
xor
cld
jnp
add
xchg
fildl
mov
rcrb
fucom
lret
push
adc
jge
push
push
pop
ss
sbb
test
lret
fnstcw
cvtdq2ps
add
adc
dec
in
cld
lods
scas
mov
pop
sub
sbb
fidivs
mov
fucomi
mov
mov
in
cmpsb
xor
push
and
outsb
test
xor
decl
dec
jo
aas
push
sub
mov
enter
sbb
sbb
out
movsl
das
popf
cmpsl
pop
lea
leave
mov
jb,pt
mov
xchg
gs
adc
int
sub
lcall
pop
loope
loop
out
repz
jnp
movsb
hlt
fwait
push
sub
negb
xchg
aam
xor
imul
ret
jns
inc
push
jne
inc
mov
test
in
stos
out
pop
std
mov
add
pusha
sub
shll
aas
sub
cmp
das
dec
out
jno
adc
mov
das
cld
dec
cmp
jo
aam
mov
cmp
mov
cmp
je
and
test
mov
shll
cmpl
jge
loope
addb
insl
popa
out
loop
arpl
je
rcll
lret
pop
cwtl
cmc
negb
mov
xchg
sarl
dec
out
cli
jge
inc
loop
cmpsb
sub
test
cmp
ret
shlb
mov
dec
andb
mov
popl
mov
in
cs
inc
jno
int
jle
insl
in
fstps
loop
mov
lock
js
cmp
jo
sbb
xlat
xor
test
sub
xchg
rcr
xor
cmpsb
mov
jle
sahf
xlat
push
push
push
sti
fisttps
cmc
pop
xchg
addr16
nop
jp
sti
sahf
or
or
test
call
in
and
test
adc
outsl
int3
aam
popa
das
imul
popf
add
jno
movsl
cld
add
pop
jbe
jg
mov
mov
movsb
pusha
adc
dec
and
aam
std
jle
loopne
pop
stos
sbb
or
jl
mov
aaa
inc
in
jl
push
cmpsb
es
addr16
int3
lahf
mov
subb
mov
rorl
mov
gs
bound
ret
testb
push
repz
and
sbb
mov
mov
jl
test
fidivrs
sbbb
mov
out
fldcw
int3
imul
sbb
pop
mov
call
cmp
push
adc
sbb
into
adc
ficoml
scas
ffree
jg
ret
jb
stc
xchg
mov
out
push
data16
movsb
sbb
sub
push
ss
sbb
sub
jno
rorl
xchg
icebp
jnp
or
in
imul
mov
jmp
mov
push
jl
xlat
scas
imul
xchg
mov
movsl
in
das
fwait
pop
pop
xchg
jbe
push
mov
out
pop
into
sub
movsb
call
mov
cltd
jns
sbb
and
and
out
lods
cltd
or
xchg
int
cmp
mov
movsb
inc
in
push
lret
mov
pop
dec
imul
add
cli
popf
push
loop
clc
pop
mov
stos
subb
mov
cs
ss
push
adc
fcmovbe
mov
das
movsl
js
leave
data16
xchg
inc
jb
cli
shr
shrl
mov
and
sub
shll
mov
cmp
insb
and
in
inc
push
movl
xchg
mov
cmp
call
out
jae
mov
icebp
mov
dec
mov
popfw
mov
push
adc
je
adc
in
lea
ret
push
addr16
add
clc
adc
imul
lds
jb
decb
cmp
push
pop
xlat
fcoms
gs
enter
shl
mov
xchg
xchg
aam
test
sbb
out
adc
cmc
jns
mov
xor
ja
pusha
dec
ds
fisttpl
xchg
mov
cmp
arpl
jge
mov
add
pop
ret
mov
mov
sar
xor
repnz
jl
dec
push
push
imul
or
mov
mov
sarb
or
mov
filds
push
jne
adc
push
pop
sarb
mov
popf
pop
lods
decl
scas
movsb
push
ss
jns
aam
scas
in
xchg
jle
enter
jb
jns
mov
iret
out
jmp
jle
scas
adc
inc
andb
and
mov
stc
xchg
cld
add
adc
jno
push
into
xchg
and
pop
scas
sahf
out
or
pop
out
orl
lods
push
nop
jbe
enter
out
jno
in
jl
in
mov
xor
stc
push
lahf
mov
aad
enter
adc
loop
sti
mov
sub
je
jmp
add
sbb
dec
push
xor
or
push
test
daa
ret
cmpsl
stos
push
std
push
test
inc
arpl
push
jno
bound
cli
and
or
xlat
sar
push
xor
stos
iret
cs
lods
push
cld
repnz
push
or
jae
mov
jmp
and
cmc
or
in
nop
sbb
ret
or
jno
jg
push
ret
cwtl
repz
jnp
leave
nop
inc
daa
xor
or
rolb
and
nop
pop
xor
mov
dec
sti
andb
mov
add
nop
loop
adc
out
fildll
mov
inc
sbb
imul
stos
push
push
test
imul
loope
int
in
scas
and
stos
repnz
inc
in
stc
sbb
test
pushf
icebp
mov
out
mov
not
pop
mov
cmc
dec
stos
sbb
sbb
push
dec
and
sub
ja
cltd
sahf
test
xor
movsl
cmp
cmp
xor
orb
xorb
xchg
pop
dec
mov
mov
pop
js
iret
jno
or
test
jne
fisubl
loopne
ret
flds
cmp
mov
xor
rcl
ss
mov
xchg
jns
repnz
nop
mov
sub
lea
je
cmp
mov
push
xchg
push
jbe
sbb
sarb
mov
in
fwait
out
or
mov
test
testb
mov
jbe
cli
pusha
xlat
mov
shlb
std
loope
sbb
or
cmpsb
imul
in
mov
push
out
and
sar
iret
mov
xor
ljmp
fnsave
pop
cmp
cmc
lret
or
jge
rcrl
jb
push
and
mov
in
aas
ret
jg
test
aas
xchg
stc
mov
adc
pusha
leave
push
xor
pop
add
testl
xchg
shll
aaa
push
pop
inc
or
cmp
sub
cmp
adc
mov
xchg
das
fiaddl
test
push
hlt
test
dec
shl
cmp
fstpl
push
mov
mov
out
aam
shrb
leave
aas
pop
mov
mov
aam
adcl
sub
cltd
cmp
scas
inc
lahf
and
movsb
dec
sti
icebp
hlt
daa
insl
popf
jecxz
pop
scas
pop
sbb
hlt
fcomi
imul
cmp
xor
je
xchg
idiv
or
xor
lcall
push
jb
sbb
and
popf
aam
xchg
fnstcw
pop
data16
mov
jecxz
in
loopne
and
pop
roll
mov
sti
lahf
int3
dec
ror
bound
pop
push
lahf
imul
mov
add
adc
test
mov
inc
aaa
test
sti
loopne
or
lock
outsb
cmp
and
pop
les
adc
add
lock
mov
jb
outsb
jnp
mov
xchg
sti
mov
inc
das
loopne
rorb
or
add
shlb
mov
fldcw
xor
mov
mov
xor
ljmp
lret
arpl
je
jecxz
jmp
dec
add
mov
and
cmp
sbb
push
cltd
mov
hlt
inc
or
rclb
out
sub
sub
jnp
popf
pushf
idivl
addl
push
enter
insb
pop
jae
cmpsl
jl
inc
add
jg
dec
sahf
ds
mov
test
cmp
lret
jp
orb
int
call
pop
cmp
cmpsb
mov
insl
dec
inc
mov
pop
outsl
xlat
pushf
push
out
sbb
or
mov
sbb
loop
mov
fwait
mov
test
push
xlat
mov
aaa
cs
push
fsubl
aaa
sbb
push
sub
cltd
or
and
repnz
mov
and
fwait
les
push
pop
xchg
fsubl
dec
lahf
cmp
add
lcall
xor
pop
enter
mov
cmpsb
repz
fwait
popf
pop
pop
sbb
fstpl
mov
cmc
out
sub
mov
push
daa
and
jg
aad
or
mov
bound
mov
lods
mov
pop
lret
pop
out
xor
jo
cmpsl
and
fisubs
pop
mov
mov
pop
xlat
or
sub
sbb
sbb
add
data16
lcall
out
and
xor
inc
pop
cmpsl
outsl
cmp
cmp
mov
into
adc
add
popa
mov
cmp
test
cmp
adc
mov
and
mov
add
dec
nop
arpl
pop
mov
or
and
mov
pop
rcll
push
push
cmp
call
xchg
popf
idivb
sub
mov
in
sbb
outsb
dec
adc
sahf
and
cmp
mov
pop
lods
inc
movsb
fstpl
out
or
ffreep
push
inc
adc
ljmp
push
test
push
jne
push
jbe
daa
and
push
decb
or
popa
repnz
lret
int3
mov
sbb
or
loopne
dec
outsl
pusha
lahf
fwait
loopne
sub
in
mov
fcomip
xchg
pusha
or
jno
jae
mov
pop
and
jo
or
mov
or
jb
add
into
inc
aas
dec
in
data16
cmp
xlat
mov
arpl
and
dec
sub
xchg
xor
subl
ret
add
sbb
mov
mov
mov
and
dec
cmc
xchg
and
out
leave
sub
push
push
lret
adc
add
mov
loop
inc
jae
mov
aad
je
iret
lock
lret
nop
test
outsb
mov
adc
test
scas
repz
jns
xchg
data16
mov
and
ja
xchg
aaa
jp
and
enter
jnp
and
jnp
jbe
and
push
lock
data16
mov
xchg
push
push
sbb
outsb
xchg
sbb
mov
jecxz
js
fildl
dec
sbb
add
idivl
iret
mov
int
or
pop
stc
enter
pop
or
int3
sub
jle
pusha
nop
out
ljmp
mov
push
mov
arpl
mov
or
insl
lds
icebp
and
jns
dec
adc
sub
sahf
adc
mov
pop
cld
aad
push
push
dec
icebp
push
les
inc
ret
loope
xor
imul
scas
xchg
sbb
dec
in
mov
cmp
scas
cmc
mov
fbld
out
push
mov
inc
adc
mov
mov
and
adc
pop
adc
das
or
adc
lock
in
into
mov
jns
clc
std
notb
pop
jb
or
popa
rorb
mov
push
push
movsl
pop
push
mov
aad
mov
xchg
and
int3
out
inc
xchg
ss
push
mov
xchg
test
mov
inc
inc
mov
xlat
lcall
call
jae
mov
jno
mov
push
add
push
jg
rorl
dec
or
or
mov
cmpsl
mov
imul
xchg
or
inc
mov
mov
pushf
outsb
leave
inc
cs
loop
je
nop
in
pop
nop
adc
cwtl
push
inc
lret
inc
fcomp
push
or
rcrl
out
loopne
inc
xchg
or
mov
jp
dec
mov
out
or
or
mov
std
insb
xor
enter
xor
into
lahf
repz
push
lock
lahf
mov
daa
inc
push
mov
jo
mov
insb
push
pop
adc
jge
pushf
add
push
add
cmp
sub
jb
pop
pop
add
sti
les
nop
jle
ljmp
push
sub
lds
push
insl
cmp
mov
mov
mov
addb
popf
in
fcmovbe
popa
xor
jp
push
hlt
stc
pop
adc
sub
decl
stos
in
mov
dec
out
or
aaa
aad
pusha
push
mov
cmpsl
movsl
sti
in
mov
push
mov
adc
ret
mov
dec
add
dec
xchg
lods
je
pop
mov
cli
les
fwait
mov
fisubrs
sub
insb
jg
and
les
popa
add
ljmp
sub
iret
in
scas
pop
jno
cld
iret
jno
arpl
adc
inc
mov
xlat
pop
stos
cmp
or
jle
dec
cmc
int3
test
mov
add
dec
jnp
js
in
mov
mov
repz
pushf
mov
cld
mov
cmp
adc
pop
sbb
push
cmp
mov
divb
or
mov
aas
loopne
popf
mov
mov
mov
stos
daa
addl
int3
or
push
inc
nop
int3
jp
fidivl
lea
cmp
stos
jl
or
aas
or
jnp
push
lds
cwtl
roll
loope
mov
popf
je
sbb
sbb
pop
pop
out
daa
psubq
stos
dec
ljmp
push
popa
adc
xchg
dec
lods
pop
into
pushf
loope
mov
pop
fst
testb
dec
scas
and
stc
xchg
movsb
sub
sbb
cs
mov
data16
notl
push
loopne
mov
cltd
int
lea
jne
hlt
bound
cmp
sub
push
sbb
testb
and
xchg
dec
push
adc
dec
mov
addl
xchg
jnp
pop
fstpl
push
stos
and
fnstsw
fs
mov
rcrl
rcrb
sub
jnp
rorl
stos
test
or
jge
in
mov
mov
popl
mov
insl
enter
test
push
push
hlt
dec
cmc
repnz
cmc
into
rcrl
call
sub
and
movsb
xlat
and
scas
call
mov
inc
cmp
cs
sbb
cld
icebp
cmpl
push
cmpsl
cmp
mov
ret
shrl
lea
ja
sbb
das
lret
xchg
repz
insb
adc
ds
inc
lahf
into
xor
inc
neg
inc
xchg
je
ja
je
push
sub
pusha
imul
mov
push
in
in
mov
cmp
add
adc
jmp
pop
iret
decl
das
dec
push
leave
or
test
jae
xlat
movsb
pop
add
pop
mov
or
es
lret
out
pop
inc
pop
scas
ljmp
inc
dec
cmp
inc
inc
xorb
mov
push
iret
sbb
clc
and
cmc
cmp
add
hlt
push
mov
pop
inc
movsl
mov
les
scas
fiaddl
mov
gs
outsb
insl
aam
inc
sbb
cmp
cmp
pushl
sub
aam
sbbl
cmc
dec
push
rcr
cmpsb
rol
inc
mov
sub
jnp
mov
sub
jns
lds
fdivrl
cmp
gs
iret
into
lahf
outsb
es
add
xchg
fcmovnb
test
cmc
push
mov
cmp
or
adc
in
jecxz
jbe
cmp
pop
cs
pop
cmpsb
sti
popa
lea
pop
lret
movsb
push
jno
and
or
aam
cs
fisubrl
pushf
fidivrl
jae
cmpb
scas
jl
and
cmpsb
pop
movsl
sbb
push
add
and
lret
stos
cmp
push
andl
insb
sbb
pop
leave
inc
fstps
ret
fisttpl
sub
adc
sub
lcall
dec
jle
jbe
xor
or
lcall
pop
das
mov
lea
mov
mov
and
ficomps
das
cmpsb
bound
fwait
dec
js
scas
push
xchg
and
loop
mov
in
push
cmp
bnd
or
movsb
xlat
push
ljmp
xchg
sub
cmp
enter
xor
sub
fldcw
adc
xor
mov
and
cmpsb
xor
lret
sub
mov
add
sbb
icebp
scas
mov
mov
loope
push
scas
outsl
push
shr
mov
dec
xor
mov
cwtl
es
dec
cs
in
xchg
cltd
xor
mov
cmp
sbb
daa
push
ss
xor
int
mov
out
mov
pop
mov
mov
addr16
pop
mov
ja
jge
push
sub
push
inc
popf
jne
cmp
xor
das
test
and
rolb
test
inc
imul
scas
scas
xor
cmp
add
pop
sub
daa
jle
jne
mov
cmp
lods
jbe
add
sbb
mov
gs
push
xchg
xchg
mov
movsl
subb
out
xchg
pop
cmpsl
or
pop
xor
dec
insl
shll
into
sbb
adc
out
sbb
ss
ret
in
js
jns
cmpsl
mov
jmp
aaa
mov
push
flds
daa
inc
or
iret
scas
xchg
xchg
sbb
sub
fsub
push
adc
out
mov
pop
jge
pushf
cmpsb
fs
rcrl
inc
mov
in
aaa
orl
cmp
jmp
sti
lret
push
lods
xchg
shlb
mul
in
loop
pop
sub
push
add
fmulp
les
mov
and
clc
xchg
push
les
xchg
stos
jne
mov
popa
xchg
testb
push
or
ret
and
iret
lea
lods
subl
mov
into
cmp
aaa
in
sub
sbb
mulb
addr16
call
mov
mov
jbe
lock
jge
mov
stos
lds
mov
bound
shl
nop
aad
rcr
icebp
mov
sbb
jge
scas
and
sbb
mov
dec
or
jbe
je
pop
jae
mov
popa
jb
push
mov
loopne
sahf
lret
push
sbb
mov
fwait
jno
psllw
pushl
cmc
scas
pop
sub
aas
mov
pop
test
adc
fs
jecxz
xchg
rorb
sti
mov
push
leave
pop
fistl
mov
arpl
sahf
add
push
mov
out
stos
push
xchg
mov
jp
fldcw
enter
push
lods
mov
mov
jae
stos
xchg
xorb
pushf
xor
rorb
xor
cltd
shl
xchg
cmp
add
enter
and
push
dec
popa
inc
and
ljmp
mov
loop
je
xorl
movsl
cmpsl
test
push
leave
cs
push
stc
pushf
add
imul
ljmp
add
gs
gs
xorb
movsl
lock
cli
icebp
nop
pop
mov
mov
or
pop
pop
pushf
scas
int
mov
inc
std
loop
mov
mov
jnp
push
add
imul
push
lahf
cmp
fldl
push
idivl
or
jmp
into
in
xchg
int
or
aam
dec
jmp
xchg
or
sbb
dec
idivl
int
cmpsb
in
mov
pop
int
iret
in
stc
sub
pop
test
test
aad
pop
add
shll
dec
icebp
ljmp
push
xchg
or
pop
ljmp
cltd
imul
lahf
test
repz
std
sbb
cld
cli
jp
push
inc
btr
fwait
lret
out
sub
inc
pop
out
in
stos
leave
sbb
push
xlat
fildll
xchg
push
xchg
jo
mov
or
xchg
fsubr
sbb
jne
pop
mov
je
jge
repnz
add
mov
int3
insb
add
xchg
das
jmp
rclb
adc
or
xchg
ds
clc
mov
push
aad
jge
nop
inc
mov
outsb
cmp
sbb
jb
daa
inc
test
sbb
mov
dec
inc
push
mov
inc
leave
pusha
jp
adc
sbb
addr16
and
cmp
xchg
mov
negl
enter
push
les
ret
or
pushf
push
or
dec
jbe
xor
clc
push
cmpsb
bound
inc
outsl
aas
pop
fimull
and
int
xchg
jmp
sub
xchg
outsl
fstps
scas
add
stos
mov
push
cmpsl
mov
sbb
mov
mov
add
aam
inc
aaa
cmpsb
mov
in
xor
pop
test
dec
lea
xor
fiadds
xor
lods
xchg
fstl
repnz
inc
bound
push
dec
push
rolb
je
push
add
inc
inc
inc
push
push
jnp
fs
out
sub
or
add
or
outsl
gs
divb
sarl
ret
scas
sub
mov
cwtl
xchg
jo
out
xchg
cltd
xor
stc
andl
xchg
mov
jmp
jne
out
sub
loopne
out
aas
stos
push
lret
xchg
out
sbb
mov
addr16
fnstcw
fdivrs
sub
mov
mov
ds
sub
mov
sbb
adcl
fs
mov
xchg
stos
pop
sbb
jg
mov
mov
mov
xor
sub
pop
pop
pop
enter
inc
lods
jge
clc
popa
gs
or
loopne
adc
sti
adc
hlt
jge
test
into
add
xor
pop
cmpsl
jmp
pop
add
test
mov
ret
subl
subl
jp
dec
stos
les
push
fwait
out
lret
lret
jbe
int3
stc
imul
fistps
cmp
das
or
movsl
push
mov
fsubrl
cmp
mov
mov
into
xchg
dec
les
fwait
dec
mov
add
cld
add
sub
icebp
call
sahf
pop
sbb
cld
imul
push
xor
aas
in
push
test
in
push
inc
in
mov
in
adc
push
inc
call
pop
sub
popa
xchg
lcall
mov
stos
aam
int3
imul
pop
sbb
cmp
mov
push
and
add
cmp
mov
daa
cltd
push
mov
fwait
sbb
or
mov
inc
and
lea
mov
nop
das
cld
jne
add
cwtl
mov
inc
stc
int
dec
sbb
jl
mov
xor
test
fisttpll
setne
mov
and
inc
dec
cmp
adc
pushf
jg
ret
rol
mov
mov
cmp
inc
dec
inc
clc
outsb
call
hlt
jno
mov
and
xor
lds
fcoml
cmp
pop
push
mov
repz
mov
je
cld
dec
sbb
rcrl
mov
insb
jle
mov
xchg
mov
jne
add
enter
pop
or
push
das
xchg
adc
stos
lea
push
push
push
mov
aad
rcr
inc
push
xchg
sub
adcb
imul
fstpl
mov
inc
inc
mov
cmp
xchg
pushf
inc
orb
mov
shrl
repnz
imul
out
cs
roll
or
sbb
jmp
and
add
aaa
imul
int3
es
lock
nop
aaa
mov
mov
lcall
popa
sbb
sbb
mov
push
push
push
lods
lret
imul
cmpl
out
pop
xchg
mov
test
out
pop
pushf
or
lea
insb
hlt
mov
mov
bound
pop
call
sub
orl
lods
mov
loop
adc
jp
push
std
adc
fists
mov
adcb
fs
test
aam
cmp
bswap
jnp
iret
add
scas
push
dec
mov
inc
popa
lods
subb
and
sbb
jle
lret
sbb
cwtl
ret
in
mov
adc
lret
shll
gs
clc
xlat
aaa
dec
test
lods
sub
mov
aas
dec
scas
loop
insb
add
fsubp
mov
inc
orb
push
cld
out
jl
or
cltd
lahf
jg
fucom
bound
jl
sbb
ficoms
jo
mov
lods
push
mov
data16
xchg
cmp
dec
pop
ret
and
jecxz
sub
sahf
lea
jecxz
push
movsl
xchg
xchg
or
mov
movsl
xor
enter
xor
lods
add
sbb
adc
lcall
pop
sub
aam
pusha
mov
repz
gs
adc
add
xor
outsb
add
push
sub
adc
imul
popa
pop
mov
cld
aas
sub
jg
stos
jge
jns
xchg
jmp
sub
pop
xor
adc
sarl
negl
and
cmp
in
cmovno
mov
les
mov
mov
std
push
sahf
fwait
inc
mov
mov
add
cmc
cmp
mov
fcoms
rorl
cmp
add
jg
les
ud1
inc
mov
xor
outsb
add
push
or
cmpsl
int3
adcl
xchg
pop
mov
fsub
fidivs
mov
out
add
iret
jle
popa
fsub
pop
mov
aam
and
repnz
mull
rcl
mov
subl
in
stos
imulb
clc
and
mov
nop
lea
shrl
lea
sti
and
cwtl
testl
sub
sbb
movsb
dec
push
xchg
fdiv
or
int3
adc
pop
jnp
xchg
imul
mov
and
jb
mov
dec
enter
outsb
jl
jl
loope
divb
stos
xor
ljmp
lea
insb
lods
in
shll
adc
stos
xlat
mov
push
in
int
cs
sahf
adc
ljmp
add
scas
ror
inc
mov
jns
pop
mov
loopne
xchg
fdivrs
mov
cmp
pop
xor
es
adc
repnz
pop
xchg
cmpsl
sub
add
adc
inc
in
stos
inc
cmp
loope
outsl
or
pop
xlat
jmp
xchg
sub
roll
inc
ret
adc
fists
frstor
add
mov
mov
stc
fiadds
add
xchg
sahf
test
loop
jmp
sahf
ja
mov
icebp
arpl
lods
shll
in
add
pusha
sbb
inc
push
pop
mov
mov
aad
sti
mov
imull
push
sbb
jo
movsl
aaa
jge
sbb
fmull
es
aas
pop
lret
outsb
inc
mov
mov
mov
scas
jle
aaa
mov
les
adc
and
mov
inc
das
and
adc
dec
pop
rolb
sbb
pop
movsl
sti
push
cmp
dec
dec
jl
sbb
hlt
cmp
lret
sbb
cmp
pop
mov
insl
push
mov
test
push
aaa
sbb
gs
jecxz
ljmp
or
in
xor
out
in
xchg
mov
lret
int
xor
dec
or
int3
xchg
in
sbb
sub
push
cmp
push
add
shrb
inc
push
insb
dec
dec
arpl
mul
cwtl
nop
in
loop
push
and
push
in
mov
sahf
fnstsw
mov
fwait
into
lods
xchg
inc
inc
and
out
data16
stos
cmpsb
fwait
test
push
or
jb
cmp
popa
je
movsb
mov
xchg
repz
push
cmp
dec
loopne
mov
xchg
mov
cmp
or
int3
adc
insb
outsl
lock
insb
movsb
mov
cmp
push
sbb
sub
seta
mov
jno
cld
imul
data16
jl
jmp
pop
lret
arpl
pop
into
add
pop
cltd
fcoms
int
cwtl
lret
xchg
lods
call
lods
movnti
adc
mov
mov
sbb
sbb
icebp
daa
lret
js
lods
aam
ror
jle
adc
int
iret
dec
add
add
inc
pop
int3
pop
in
rclb
sbb
sub
call
pop
and
hlt
testb
xchg
ror
fstp
cmpsb
sub
xor
sub
pop
jmp
adc
movsl
mov
and
pop
test
and
out
cmp
call
pop
icebp
pop
aas
and
xor
mov
sbb
nop
sbb
cwtl
clc
mov
call
imulb
xor
sbb
jo
pop
jne
mov
push
jle
fidivrs
pop
popa
add
jno
adc
lea
xchg
out
es
and
jno
push
pop
lret
test
sbb
xchg
arpl
and
jnp
xorl
dec
loop
and
mov
arpl
scas
repnz
adc
shll
mov
pop
ret
das
push
arpl
or
dec
aad
das
xor
shll
out
popf
imul
daa
or
push
pop
fwait
scas
sti
flds
adc
mov
dec
cmp
call
jnp
scas
pop
and
lock
cmc
add
aaa
addr16
sbb
sbb
or
jmp
repnz
rcrb
mov
or
cmp
inc
imul
and
push
cmc
dec
mov
sbb
push
cs
xor
push
data16
push
cwtl
mov
insb
sub
add
and
cwtl
adc
fcoms
loopne
xchg
fwait
daa
sbb
js
dec
je
and
xchg
fnstsw
addr16
std
into
dec
jns
fwait
repnz
addr16
mov
test
adc
mov
push
pop
mov
push
sub
and
jne
stos
movl
sbb
and
jmp
and
mov
ljmp
repnz
sub
fidivl
xor
mov
aas
lods
push
jno
lods
add
push
mov
aaa
add
addl
sub
pop
push
sub
in
inc
inc
ljmp
xchg
pop
jo
aam
push
loopne
cmp
test
jb
fiaddl
shll
sbb
lods
mov
cmc
ss
in
jl
xor
ret
popf
out
cmc
pop
cmpsb
dec
ret
push
inc
inc
lods
fbstp
out
scas
xorb
sbb
shl
pop
in
mov
sub
jmp
mov
sarb
pop
int3
xor
inc
movsb
pop
scas
popa
test
insb
jae
lret
mov
xchg
jmp
add
sbb
inc
push
test
xor
jl
mov
inc
sub
test
dec
add
adcl
daa
loopne
jecxz
jecxz
sub
xchg
and
fnstsw
sub
cld
pusha
mov
loopne
and
daa
mov
iret
cwtl
sahf
push
push
fldt
xlat
idivl
popf
or
mov
jae
mov
mov
dec
sbb
and
dec
xchg
jle
pop
outsb
or
rcrb
xor
xorb
lock
inc
pop
popf
dec
dec
iret
js
mov
shlb
and
imul
lret
clc
mov
pushf
dec
add
arpl
mov
bound
idiv
sbb
adcb
repz
fsubrp
adc
and
out
fsubl
push
cmp
dec
xchg
outsb
or
or
jo
cmpsb
and
push
and
mov
pop
popf
addr16
outsb
jno
xchg
loope
sub
lret
cmp
ljmp
ds
sub
push
loopne
out
sbb
add
jg
aaa
daa
xchg
loop
test
imul
cltd
aaa
xchg
mov
test
cltd
dec
lret
mov
cmc
sbb
rcl
xchg
xchg
cltd
and
imul
mov
cs
insb
push
loope
ja
imul
insl
cs
cmc
inc
fadds
jmp
sub
notb
add
sbb
sbb
dec
loopne
push
bnd
shlb
cmpsb
and
mov
sti
mov
js
je
xchg
push
inc
mov
daa
insb
adc
sub
rol
adc
pop
movsb
pop
push
inc
jp
and
loopne
xor
das
sar
push
add
mov
adc
mov
jp
dec
dec
dec
or
fstl
pop
push
leave
fisubrl
add
into
ret
dec
jbe
cltd
dec
and
stos
add
fiaddl
adc
or
add
jmp
cltd
jl
shrb
js
sbb
rcl
cli
sub
xlat
dec
inc
scas
fdivrl
pop
jnp
orl
dec
aaa
testb
enter
js
hlt
sbbl
mov
cli
js
mov
fs
addr16
sarl
xchg
xchg
mov
jg
popf
lock
shll
mov
fildll
aas
fbstp
data16
xchg
mov
jnp
call
outsl
cmp
push
push
cs
sbb
add
sbb
daa
in
mov
or
push
sbb
sub
out
andb
sti
enter
xchg
xlat
into
add
jg
dec
mov
stos
loope
jbe
add
lcall
xchg
pop
inc
mov
cltd
jmp
push
mov
outsb
lret
inc
ret
das
or
sbb
adc
lods
add
lret
sbb
push
jle
or
mull
xchg
aad
xchg
mov
pop
in
dec
dec
mov
mov
lods
add
mov
cwtl
jmp
push
adc
aad
or
sub
sub
xchg
arpl
and
fwait
inc
mov
movsb
ficompl
cmc
mov
sti
dec
les
aas
push
jmp
cld
pusha
dec
lret
jbe
shll
enter
mov
adc
xor
dec
hlt
push
pop
sahf
adc
out
push
loope
test
inc
test
dec
jns
fmul
mov
xor
push
mov
insb
push
push
testl
lahf
cmpsl
les
lret
xor
jb
inc
push
adc
push
mov
loope
orb
movsb
adc
int
test
sub
inc
pop
xlat
sub
pop
cwtl
jno
xor
ja
sbb
insl
sub
xor
shl
lcall
mov
ret
aad
test
pushl
cmp
push
jg
xchg
sbb
jae
jge
cmp
std
fisttps
pop
cltd
test
mov
mov
lock
jmp
mov
out
scas
inc
loop
in
mov
aaa
decl
imul
lret
inc
test
push
rcll
jp
sub
add
and
leave
push
out
scas
mov
lret
sbb
xor
mov
in
xchg
mov
sahf
sbb
and
jo
insl
stc
gs
pusha
ret
xor
adc
xchg
adc
movsl
mov
lret
push
dec
mov
mov
stc
imul
bound
jb
push
add
inc
rcrl
mov
cmpsb
pop
xor
lods
sbb
lock
push
pop
add
pop
shll
jae
push
dec
out
fmull
pop
mov
movsl
cmpxchg
out
dec
cmp
mov
xchg
xorl
test
int
pop
sub
std
lea
sbb
jb
imul
je
xchg
out
cwtl
sub
aaa
out
dec
aam
push
inc
shrb
add
hlt
xor
adcl
xchg
ret
lret
hlt
mov
and
arpl
mov
push
sub
xor
adcb
out
or
sahf
pop
or
push
lahf
mov
pop
mov
imulb
push
jecxz
addl
adc
push
mov
shrl
add
and
mov
inc
pusha
es
dec
xchg
movsl
sub
lret
cs
loop
and
cmp
rorb
mov
cmp
std
mov
mov
les
xor
out
adc
mov
shrl
fwait
movsl
push
jns
mov
xlat
aaa
ficoms
inc
mov
xor
leave
and
jg
ret
je
mov
ret
icebp
add
sub
insb
insl
fstpl
push
icebp
enter
add
or
cltd
adc
icebp
stos
sub
or
sahf
sub
pop
bound
mov
mov
stc
sbb
in
fistl
sbb
mov
and
fcomp
mov
adc
push
out
aaa
jmp
push
push
pop
mov
popf
cmp
sarl
stos
xor
fs
dec
pop
or
or
mov
aas
xchg
mov
dec
rol
push
and
pop
rclb
addr16
cmp
aam
xchg
cmp
mov
sub
aaa
lret
aas
pop
ret
sbb
scas
lret
xor
cs
xor
fwait
xchg
test
aas
xchg
jmp
bound
cld
mov
icebp
lret
cltd
pop
fwait
dec
inc
incb
jecxz
test
pusha
push
add
leave
lods
or
test
pop
call
test
lcall
notb
scas
fisubl
bound
cmpsl
stos
or
mov
fdiv
out
insl
cmp
fildll
sbb
fcoms
sbbl
sti
pop
popf
cmp
testl
mov
xchg
cltd
inc
dec
and
stc
xchg
pop
jecxz
add
in
das
or
arpl
mov
add
sbb
add
int
xchg
popa
dec
cmc
sbb
push
sbbl
xor
dec
shrl
inc
je
jecxz
jmp
xchg
cli
and
mov
fdivl
xlat
in
sbb
rolb
lods
cmp
cli
push
jmp
aad
ja
mov
xchg
pop
int
push
shl
cwtl
mov
fdiv
jmp
shrb
mov
mov
outsb
mov
or
xor
shrb
stos
js
lods
stos
pushf
xor
sub
inc
repz
into
loope
and
dec
and
sahf
mov
mov
mov
pop
push
xchg
cs
push
or
pand
stos
mov
lret
fists
lcall
test
sti
cwtl
popf
pusha
fcoms
pop
lahf
dec
ret
cmpsb
xchg
loop
fwait
cmpsb
popa
dec
out
repnz
mov
test
mov
dec
loop
aam
cmc
lods
outsb
jmp
jle
enter
adc
sti
imul
xor
xor
jns
cmp
ja
punpcklbw
or
or
jge
adc
xchg
mov
dec
loop
fs
faddp
lods
insb
mov
out
add
rcrb
adc
fisttpl
pop
xor
add
dec
mov
movsl
popa
lcall
add
mov
rolb
ret
dec
push
sti
andl
aad
jne
aam
aaa
adc
sub
adc
jbe
pop
xor
push
jg
mov
cbtw
lcall
gs
imul
jae
pop
pop
stos
jns
jmp
xchg
adc
imul
hlt
cmp
xchg
loop
push
cmp
cwtl
add
push
lock
xchg
test
mov
nop
or
mov
jb
and
shrb
xchg
mov
inc
xchg
xchg
mov
ljmp
push
inc
pop
or
outsb
pop
xlat
dec
mov
jnp
jle
pop
and
cltd
sbb
nop
int
enter
xchg
mov
sub
sub
xor
aaa
roll
jb
jle
fcmovbe
inc
pop
add
cld
stos
sub
stc
push
adc
and
pushf
rcrb
shll
mov
or
add
arpl
pop
and
and
add
cmp
cmpsb
sub
das
jp
out
pop
add
sub
pop
or
pushf
in
cmpsb
stc
cs
jge
cmc
mov
xor
dec
shrb
sbb
dec
mov
imul
shrb
push
pop
jl
lds
ja
je
cmp
pop
lea
cmp
imul
xchg
clc
rolb
jns
arpl
pop
lods
push
and
or
xor
sbbb
dec
or
jo
pop
mov
pusha
lock
lret
ret
daa
addr16
mov
push
pop
insl
jns
push
jmp
mov
int3
cmp
mov
mov
leave
stc
mov
cld
aam
adc
stos
push
es
push
icebp
mov
xchg
mov
xor
dec
in
mov
ljmp
jle
jo
jge
leave
lret
mov
fwait
mov
sbb
jnp
sbb
jae
nop
std
lods
and
nop
test
mov
mov
dec
pop
mov
lods
cld
imul
adc
into
sbb
leave
data16
push
andl
add
and
pop
dec
inc
xchg
aam
or
dec
jb
dec
pop
xor
lods
test
leave
out
sub
int
lods
jns
out
jo
push
fsubl
push
mov
pop
nop
rcrb
fadd
jns
pop
pushf
xchg
jp
js
xchg
sbb
insl
lret
push
fnstcw
movsb
or
loop
scas
bound
test
cmpsl
mov
push
fcompl
es
mov
sub
insb
das
pop
lret
xchg
jle
adc
stc
test
adc
clc
stos
push
pop
xorps
inc
jp
adc
xchg
cmpsl
addl
push
or
push
fisttpl
subb
mov
mov
shlb
rcrb
sub
fcomps
pop
add
faddl
jno
fldcw
in
outsb
jns
imul
inc
mov
rcll
push
fsubl
mov
lea
and
insb
sub
or
scas
rclb
xchg
scas
xchg
fisubs
les
test
movsb
sbb
ret
jmp
push
push
arpl
add
sub
mov
or
pusha
fisubrs
adc
loopne
lock
inc
adc
fcomps
lea
sbbb
lret
test
in
jo
mov
jno
rorb
test
lods
das
jle
fwait
orl
test
sbb
popa
fs
inc
mov
lret
xor
std
dec
shl
lret
nop
mov
mov
popf
xchg
imul
dec
clc
in
mov
jle
cld
rol
cmp
arpl
sarb
pop
and
jp
mov
dec
pushf
or
pop
xchg
imulb
in
sub
push
inc
imul
arpl
xchg
loopne
jle
add
mov
inc
and
rcll
or
jle
jmp
pop
or
mov
sbb
je
pop
push
add
fidivrs
out
pusha
jp
pop
lahf
mov
stos
push
out
jne
jmp
aas
cli
add
jmp
inc
das
fstps
add
jge
lock
mov
mov
jmp
fidivl
outsb
xchg
push
mov
jo
add
push
adc
jo
stc
sub
push
cmpsb
stc
xor
into
cmp
and
and
cmp
xchg
dec
loope
jns
jle
adc
lea
out
inc
icebp
mov
js
mov
add
mov
pop
mov
or
dec
call
and
push
inc
lret
ficompl
pop
xchg
and
or
pushf
cmpsb
jmp
les
testb
rorb
nop
ret
aas
mov
mov
jge
hlt
mov
leave
jns
push
pop
in
mov
jg
xor
mov
xchg
leave
mov
flds
mov
dec
cmp
push
mov
rol
adc
adc
pop
xor
push
pop
or
in
adc
aas
lcall
ljmp
leave
cmp
pop
enter
out
hlt
pop
mov
addr16
pop
stos
out
pop
stc
and
pop
mov
icebp
push
aam
popf
dec
in
insb
xchg
cld
lahf
xor
gs
pusha
jecxz
andl
scas
pop
mov
lret
inc
push
dec
shlb
aas
push
mov
jmp
lock
lret
pop
lcall
ds
das
cmp
shlb
lcall
lea
pushf
dec
cltd
aam
cmp
mov
xchg
leave
jns
out
imul
pop
push
inc
cmp
shl
and
and
lahf
adc
lret
and
pusha
push
jne
rcrl
cmp
stc
out
mov
outsb
std
jge
sti
fldcw
ss
dec
ljmp
push
or
test
je
cmp
xchg
test
push
imulb
cli
fstl
mov
int3
outsb
adc
inc
insl
cmp
insb
notb
sahf
sar
test
push
sti
add
xlat
inc
in
pop
aad
add
popf
rclb
mov
test
mov
ret
stos
mov
outsb
push
pop
ret
ds
adc
into
sti
cmpsb
repz
popf
mov
xor
push
cmpsb
decb
fs
mov
xor
aas
push
rclb
or
xchg
dec
aam
in
fwait
mov
mov
out
dec
cld
xor
mov
or
clc
testl
mov
fsubrs
pop
xor
sbb
mov
and
and
mov
dec
loope
loope
sub
mov
pop
sbb
int
sbb
xchg
cmpsl
adc
loop
adc
jp
xchg
and
push
lcall
loopne
lods
fdivrs
out
xor
adc
jne
cmc
and
mov
scas
jnp
xchg
adc
pop
sbb
mov
sbb
pusha
cmp
jb
jl
out
cmp
and
stos
jl
add
enter
jle
or
inc
ret
and
andb
rol
aad
arpl
adc
pop
test
pushl
and
pop
dec
mov
movsb
outsl
or
mov
incb
and
mov
les
xchg
mov
inc
out
lods
ret
or
push
in
mov
xchg
lcall
incb
insb
cmp
fs
imul
push
jne
mov
popl
lock
push
repnz
add
fwait
aaa
cmpsb
mov
xchg
mov
xchg
inc
scas
sbb
movsb
dec
lods
push
je
push
sbb
adc
push
add
cmpl
jbe
and
cwtl
and
mov
rcll
aad
pop
cmp
jp,pt
filds
add
lods
dec
sahf
test
sub
lock
jmp
xchg
icebp
arpl
jno
xchg
lods
add
dec
pop
add
aad
or
pop
out
sahf
mov
iret
or
imul
xchg
daa
dec
mov
aas
cwtl
lock
call
mov
lea
xchg
xchg
pop
pop
movsb
fistpll
jl
xor
mov
fldl
shlb
stos
add
sub
into
data16
inc
cwtl
xor
jne
stc
inc
dec
mov
hlt
mov
bound
shrl
jl
loopne
xchg
test
ret
lea
mov
cmpsl
mov
insl
stc
lret
pusha
cmc
or
scas
adc
inc
mov
push
mov
jle
pop
js
pop
mov
push
pop
je
rcll
adc
and
and
testl
adc
lods
mov
in
push
mov
sbb
cltd
lret
stc
push
mov
mov
ss
xchg
lods
movsb
loope
sub
xchg
inc
push
push
push
inc
inc
cmp
rcll
adc
jbe
xchg
inc
push
push
xor
test
jge
arpl
mov
jo
mul
js
inc
int
xor
addr16
das
add
pusha
roll
in
fwait
lcall
pop
aas
rorl
xchg
je
adc
xchg
inc
lock
fstpl
dec
lods
aam
mov
sub
sub
cltd
stc
insb
jle
and
or
xchg
mov
add
imul
or
ds
sbb
inc
xchg
mov
dec
test
jecxz
repnz
pop
lahf
sub
mov
adc
fs
mov
mov
jbe
lds
popa
loope
hlt
in
and
jle
sub
out
inc
loopne
lods
ret
not
mov
or
das
fcmove
mov
add
loop
xor
movsb
add
xor
fwait
dec
dec
push
jmp
and
rolb
fidivrs
sub
dec
daa
stc
and
mov
pop
stos
xchg
inc
jge
inc
or
mov
scas
shrl
add
jmp
jmp
dec
and
aad
inc
pop
push
sahf
out
lods
dec
xor
outsb
push
mov
iret
adc
jle
cmc
lock
or
cmp
dec
cli
mul
out
jne
mov
xchg
mov
stos
idiv
cmp
mov
mov
fsub
mov
leave
jo
inc
mov
mov
call
hlt
fidivs
xor
pop
sub
lahf
xchg
or
dec
les
pop
fs
mov
pop
xchg
push
inc
in
xor
push
push
and
xor
sbb
fisubl
pop
int
xchg
cmp
and
push
mov
cmpsl
and
inc
mov
out
pop
jp
sbb
lods
pop
inc
dec
and
sub
fstps
dec
mov
test
std
nop
pop
add
or
jmp
les
lods
fwait
jno
cwtl
iret
mov
inc
cwtl
add
jb
scas
bnd
and
hlt
movsb
insl
adc
mov
push
cmp
push
or
ret
push
sahf
imul
nop
imul
mov
bound
mov
pop
or
add
cmc
jp
lods
enter
into
jl
icebp
mov
insb
adc
sub
mov
in
inc
pop
push
inc
cmovb
cld
cmp
xchg
xor
test
mov
add
mov
dec
jp
paddsw
cmp
cmp
push
pop
jne
adc
hlt
fisttpl
nop
xlat
adc
into
nop
insl
cmp
pop
jno
and
arpl
dec
int3
sbb
mov
icebp
push
orl
xchg
pop
mov
mov
jnp
jne
jp
dec
inc
test
testb
andl
filds
xchg
movaps
cli
out
mov
aam
mov
in
mov
popf
fcoms
dec
jmp
divl
ss
enter
and
sbb
popf
cli
popf
xor
roll
dec
out
mov
adc
cmpsb
xchg
aam
adc
sahf
sub
repz
out
les
rolb
movsb
push
outsl
rcrb
jnp
push
mov
and
push
add
mov
inc
mov
bound
imul
imul
rep
aas
sbb
test
inc
pushf
popa
fidivrl
push
jo
fistpll
sbb
aad
out
aam
addr16
inc
cmpsb
xchg
mov
fs
hlt
mov
cmp
das
xchg
test
ja
mov
out
pop
int3
les
je
dec
int3
dec
nop
or
mov
stos
mov
mov
dec
inc
inc
aam
pop
hlt
mov
xchg
lock
test
inc
scas
xchg
nop
dec
std
cmpsb
sub
jp
into
adc
popa
std
scas
jb
insl
dec
shll
push
daa
aas
dec
xchg
mov
adc
inc
ret
adc
push
lock
out
stc
rcrl
fsubs
mov
xchg
int
mov
fnsave
fidivrs
and
xor
clc
je
testb
cmc
js
dec
pop
xlat
pusha
add
fstpt
xor
stc
lea
pop
jge
jns
es
pop
mov
mov
inc
and
xor
fcoms
jle
stos
xor
cmp
add
mov
sub
adc
xchg
and
mov
cmp
mov
push
iret
sub
or
and
enter
inc
adc
add
add
jns
inc
aad
scas
lods
sbb
cmp
xor
add
jbe
mov
and
dec
clc
ret
mov
or
cld
icebp
mov
dec
stos
sahf
sub
test
fcomps
shlb
xchg
inc
or
xor
cmp
mov
dec
pop
adc
cmpsl
mov
pushf
jg
inc
push
inc
frstor
cmp
mov
ret
sub
out
mov
jo
xchg
xchg
imul
pusha
out
cmpsb
imul
out
movsl
mov
jl
int3
lods
outsl
adc
fidivs
lods
mov
pop
xchg
pop
jecxz
fnstcw
xor
push
es
xor
and
arpl
push
aam
xchg
cli
in
mov
incl
and
stc
test
out
pop
imul
fucom
aam
repnz
in
add
insl
and
pusha
sbb
pop
xor
mov
fsts
inc
push
cltd
cmp
rclb
mov
stos
dec
or
mov
sbb
mov
push
fwait
ret
and
cmp
fwait
jp
shrd
sbbl
les
inc
repnz
cltd
pusha
ss
lret
pop
aam
subb
jae
xlat
dec
imul
lods
in
xlat
adc
mov
mov
call
ret
jg
pop
sahf
cmp
adc
imul
lret
rcrb
mov
mov
jmp
dec
xor
fwait
rcrb
movsl
sub
std
fstpl
filds
enter
vorpd
adc
sbb
push
loopne
adc
fadd
cmp
ss
in
inc
sbb
pop
xchg
outsb
leave
cmp
orl
aas
lahf
jl
jno
inc
ret
xchg
loope
sbb
je
fwait
push
stos
or
lock
test
push
xlat
fcomip
sbb
cwtl
xchg
xchg
pop
test
push
cld
inc
mov
dec
cmp
int
or
mov
or
lret
negb
pop
cmp
in
and
subb
jne
cwtl
sbb
enter
xor
sbb
out
xor
fwait
jmp
push
cli
into
movsl
xchg
stc
dec
jl
jle
bswap
or
and
cmp
fs
inc
dec
lods
fdivrp
cmpsb
xor
sbb
jns
es
mov
in
call
and
jle
fldt
add
cmp
and
leave
inc
shl
mov
in
aam
mov
jns
mov
dec
outsl
ljmp
lcall
xchg
dec
xor
cld
shrl
aad
loopne
mov
lahf
mov
cmp
daa
add
xchg
adc
addb
ret
test
ret
push
or
push
sub
mov
xchg
pop
movsl
mov
push
mov
dec
into
aad
sub
shlb
push
fsubrs
andl
or
and
xchg
or
push
sbb
mov
jns
mov
cmp
ja
movsb
bsf
inc
hlt
dec
sub
add
add
xchg
add
cmpsb
pop
mov
xchg
push
push
or
xlat
mov
pushl
test
es
adc
repz
xor
cmp
or
addr16
sbb
imul
adc
cmp
popa
bound
call
sbb
loopne
jmp
out
mov
pop
adc
jg
xchg
int
pop
jns
cmp
jns
push
loope
jl
lea
or
adc
xchg
sbb
sbb
hlt
addl
dec
cmpsb
sbb
pop
jmp
js
into
mov
dec
and
in
xchg
mov
add
lds
push
dec
stc
mov
jp
call
mov
dec
out
insb
call
pop
push
test
mov
adc
das
inc
and
sarl
repnz
and
sarl
rcr
call
dec
mov
loop
mov
fwait
pop
jbe
pop
mov
add
pusha
or
inc
xor
adc
movsb
jg
inc
lock
sbb
inc
ljmp
cmpsl
push
aaa
or
cmp
imul
mov
adcl
sub
add
cmpl
mov
jmp
pop
lret
mov
stos
insb
call
pop
stos
jl
je
ror
sub
sub
js
add
adc
loop
nop
inc
sbb
fs
test
leave
fldenv
out
mov
cmpsb
stos
and
xchg
xchg
mov
outsb
es
lds
mov
mov
xchg
add
sub
enter
mov
scas
xchg
je
jl
outsl
xchg
fldcw
cltd
adc
ret
sub
jno
push
jnp
and
loopne
and
fwait
or
push
mov
clc
and
jnp
in
in
push
mov
xchg
hlt
or
lcall
jecxz
jg
xchg
xchg
mov
popa
pop
jne
adc
mov
movsb
lret
push
sub
inc
hlt
insb
jae
push
gs
popf
dec
cmp
xor
ret
add
sahf
and
push
pop
jp
movsl
push
mov
push
test
and
repz
xchg
pop
cmc
lcall
outsl
and
fs
mov
std
movsl
mov
xchg
cmp
hlt
lock
out
xor
xchg
out
andl
insl
sbb
bound
in
cmp
dec
in
shrl
lds
xchg
push
sub
jb
arpl
ja
stos
xchg
push
xchg
hlt
mov
rcrl
dec
cs
mov
adcb
clc
jmp
pop
or
sahf
dec
and
mov
xor
imul
in
mov
lahf
lret
xchg
ficoml
xor
mov
outsl
pcmpgtb
pop
aas
loop
dec
add
or
xchg
dec
and
xlat
push
addl
lds
js
scas
xchg
jp
shll
cmp
mov
out
inc
jl
fwait
mov
test
sahf
and
xchg
pop
dec
mov
cld
stos
xor
cli
test
adc
shlb
adc
jae
test
adc
mov
mov
jno
inc
es
stos
cmpsb
inc
mov
arpl
testl
imul
dec
push
sub
mov
lods
ficomps
adc
sarl
xchg
hlt
mov
inc
leave
sbb
jmp
cltd
aam
aaa
sbb
or
test
add
jg
lret
push
push
sub
mov
pop
lea
mov
icebp
in
jecxz
rcrb
popa
xorb
dec
fldenv
jnp
in
call
sbb
jno
lcall
mov
cmpsb
push
jge
mov
dec
xor
and
lea
cmp
enter
mov
pop
icebp
movb
roll
mov
bound
inc
les
iret
int3
mov
sub
rcll
dec
and
mov
repz
outsb
out
xor
inc
jnp
lods
test
add
jne
cmp
int
pop
test
and
gs
sbb
cmp
xchg
mov
push
pop
gs
mov
and
stos
mov
push
adc
sbbb
fimuls
es
maskmovq
mull
cmpsl
cs
mov
pop
xchg
in
adc
sbb
xchg
mov
sub
out
ss
popf
addr16
cmp
mov
mov
sbb
imul
pop
sahf
popf
movsb
sub
rcrl
and
xchg
pop
popf
add
jl
mov
pop
and
inc
mov
in
sbb
lahf
and
fincstp
xchg
shll
jbe
test
or
xchg
and
inc
dec
test
scas
sahf
shlb
pushf
lret
xchg
popa
cltd
div
jmp
cmpsl
iret
loope
sti
into
cmpsl
mov
mov
cmp
add
popa
hlt
repnz
scas
pop
lret
and
and
pushf
cmc
push
in
jp
push
xchg
fs
imul
cmp
mov
ret
jl
push
jbe
dec
lcall
sub
add
add
ds
or
mov
mov
push
jae
push
xchg
out
pop
add
cmc
clc
xchg
mov
je
push
jne
jge
sbb
movsl
adc
adc
dec
push
push
push
mov
cmp
sbb
sahf
dec
repz
movups
das
push
je
neg
jge
frndint
sub
test
or
inc
xchg
int
clc
jbe
pop
out
jnp
js
mov
in
inc
sbb
xchg
mov
popa
fcoml
pop
lods
mov
pop
test
jp
adc
xor
lock
dec
lea
dec
lds
sub
push
pop
pop
dec
popa
scas
arpl
bound
adc
gs
jmp
jl
mov
pushf
xor
pop
xor
jecxz
sub
push
js
in
jge
inc
jnp
mov
cld
ret
int
addl
jb
out
jnp
inc
jne
movsl
xlat
mov
nop
pop
in
and
inc
stc
aad
mov
das
cli
sub
jno
jb
loop
sub
mov
andb
sbb
and
cmp
mov
and
xchg
sarb
test
cltd
and
dec
cmp
inc
or
adc
stos
into
iret
xlat
loope
orb
stos
cmpsl
jb
testl
jb
xor
lret
mov
jbe
jne
add
mov
icebp
mov
push
test
mov
lea
xor
out
xor
into
xor
adc
mov
add
into
mov
roll
scas
jp
mov
mov
outsl
mov
mov
insb
cltd
loop
add
dec
add
mov
repnz
test
int
outsb
push
xchg
add
push
pop
or
inc
xchg
mov
repnz
shlb
call
jmp
fildl
mov
jmp
das
loop
adc
sahf
xor
xor
mov
mov
cltd
and
cmp
mov
adc
test
fs
leave
inc
cmc
addl
hlt
mov
xor
mov
aad
mov
popa
fsubrl
loop
jmp
out
rcll
sbb
dec
mov
shrb
outsl
push
adc
aad
push
movsl
mov
scas
and
call
sbb
imul
mov
pop
and
push
rorb
dec
add
ret
mov
jge
cmpb
dec
dec
xor
xor
lret
into
imul
push
jg
out
add
lock
xchg
lret
push
fcmovb
std
shlb
xchg
mov
scas
and
movsl
and
mov
orb
mov
loope
xchg
in
lret
mov
sbb
cmp
shrb
and
jae
xor
loope
pop
ret
inc
jno
push
sub
sahf
mov
xchg
loope
js
lock
dec
sub
jae
stc
cs
fldcw
adc
icebp
pop
rcl
arpl
jge
ds
std
lret
lret
pop
sbb
les
fdiv
lahf
dec
fcmovu
xorl
and
hlt
aas
cmp
inc
addl
and
clc
out
dec
cli
out
dec
mov
out
out
mov
cwtl
cmpsb
or
adc
sbb
insb
push
inc
sbb
addr16
jle
push
push
int
mov
adc
and
enter
shrb
xchg
push
pop
adc
pop
arpl
xchg
in
mov
out
int
subps
xchg
xchg
icebp
and
xchg
jle
das
adc
and
pop
push
sub
aas
dec
pop
les
xor
cmp
sbb
pop
sti
xor
imul
dec
sub
stc
adc
jae
push
stos
mov
pop
scas
jmp
ss
inc
in
imul
lds
dec
mov
jmp
cli
adc
mov
enter
lock
adc
ret
push
movq
ljmp
ret
test
xchg
in
mov
inc
xor
icebp
push
aaa
aaa
jnp
lods
faddl
lds
sub
gs
push
sub
cmpsl
mov
jle
mov
popa
outsl
mov
xor
dec
addb
std
push
jmp
popf
add
out
cwtl
add
add
rolb
sub
pop
sbb
jae
outsl
push
pop
sub
push
sub
repnz
lret
loopne
lods
in
fldcw
insl
loope
cmp
mov
shll
inc
and
test
arpl
push
outsl
into
in
pop
andl
lahf
add
fmuls
xrelease
xchg
dec
incl
imul
xor
xchg
or
xorl
mov
in
addr16
dec
dec
cmp
and
mov
rcl
cs
xlat
movl
adc
pop
jg
jbe
push
pop
test
je
js
pop
pushf
lret
pop
jg
pop
mov
xchg
cmpsl
dec
scas
into
jns
jno
add
or
cmc
adc
stos
jns
fstpl
inc
movb
xchg
sub
mov
and
adc
ds
cs
out
lret
in
mov
or
aas
push
mov
jg
push
nop
sti
fadds
int3
test
shll
xor
xchg
dec
push
cmp
sub
push
lcall
xor
jae
mov
int3
fnsave
pop
sub
loopne
dec
mov
js
arpl
loop
jne
xchg
movsb
fildll
mov
sarl
stos
mov
fs
out
fiaddl
scas
dec
mov
out
lea
aaa
scas
add
icebp
shrb
icebp
in
sbb
out
ret
xchg
push
or
daa
ja
cmp
and
fwait
mov
push
adc
cld
sub
inc
cmp
iret
jg
rol
sbb
out
xchg
cli
mov
jp
hlt
lret
xorl
and
adc
idivl
mov
and
test
dec
fimuls
int3
imul
es
push
cli
sub
test
ljmp
pushw
and
jecxz
subb
out
sub
jae
mov
in
lock
xchg
jle
mov
cmp
das
inc
or
and
push
cmp
stos
rcr
aam
mov
mov
pop
jle
testb
in
sbb
je
sbb
mov
pop
stc
add
testb
movsb
xchg
fdivp
mov
mov
mov
jnp
add
mov
mov
ds
sub
je
cwtl
inc
xchg
ljmp
mov
cmp
dec
ss
xlat
push
stc
mull
mov
cmp
out
mov
or
orb
insb
bound
dec
push
sbb
popf
mov
mov
lods
pop
inc
inc
jecxz
xchg
push
in
cwtl
push
xchg
andb
mov
fwait
push
push
mov
adc
mov
cmp
add
push
inc
loop
movsb
mov
sti
sub
jne
pop
ja
cmp
cmp
xchg
fwait
jmp
imul
and
push
push
mov
cmp
rcrb
sub
sbb
xor
adc
pusha
test
sbb
cmp
pushf
jge
fdivs
pop
xchg
lds
hlt
sbb
mov
or
or
push
repnz
adc
jge
sbb
shlb
test
sbb
xor
pop
mov
inc
and
test
mov
lahf
lret
adc
xor
mov
cmp
add
popf
ret
push
pop
mov
jae
sub
push
cmp
test
push
inc
push
jmp
mov
sbb
pop
leave
mov
cli
fsubr
outsl
sti
cmp
mov
xchg
xchg
xor
mov
sbb
add
and
xchg
dec
push
lods
lret
mov
lods
mov
push
scas
lret
je
xchg
xchg
pop
popa
inc
pop
scas
mov
loop
rorl
shlb
inc
ds
ret
push
xchg
cmpsl
adc
js
mov
mov
sub
iret
dec
or
pop
xor
xchg
add
lock
rcr
ret
xchg
stos
out
lret
jae
fbstp
gs
cmp
push
jae
stos
sbb
mov
imull
cmp
roll
add
pop
iret
mov
or
sbb
xchg
jg
repnz
addr16
and
push
pop
nop
fst
imul
out
and
mov
cmp
sahf
jns
sub
jb
das
pop
sbbl
pop
sbb
mov
or
push
mov
jb
push
fldl
or
push
sub
xchg
int3
mov
sahf
jno
add
xchg
inc
sub
fdiv
jmp
jb
popf
popf
subl
jge
mov
jl
rcrl
and
js
mov
js
icebp
push
cmp
mov
fdivl
cmp
mov
or
push
dec
loop
rolb
mov
sub
dec
ds
mov
xor
ja
loopne
cwtl
lret
lahf
mov
ret
mov
xchg
iret
adc
rolb
mov
mov
je
shlb
mov
push
adc
leave
xor
cmc
std
popf
or
add
push
pop
popf
jl
dec
pop
cmc
push
cmp
test
jmp
mov
imul
imul
adcl
ja
clc
int3
and
adc
imul
xchg
lock
insb
jle
mov
shl
sbb
jnp
rorb
fisttps
loopne
pop
cmp
or
les
inc
cmpsl
sub
push
lea
insb
sub
cmpl
rorb
es
fdivr
or
hlt
outsl
out
sbb
pop
push
ret
or
fldt
add
push
push
adc
xor
cs
das
add
bound
xchg
jle
cmpsb
mov
add
cmp
xchg
mov
cmpb
or
xchg
imul
hlt
inc
addr16
in
leave
xor
out
inc
repnz
rcrb
inc
or
ljmp
mov
mov
dec
shr
mov
mov
pusha
xor
ds
aas
xchg
inc
sbb
movd
pop
cmc
push
cmp
push
lods
cld
bound
stos
pop
xor
adc
adc
cmp
pop
xor
push
mov
hlt
nop
push
pop
jp
xchg
sub
xor
fimull
xor
outsb
dec
adc
push
ds
in
jb
aas
mov
insb
cltd
xor
lds
jp
shrb
negb
push
loop
pushf
insb
ljmp
mov
idivb
popf
in
cwtl
lods
inc
sbbl
mov
xchg
adc
jmp
gs
das
cmp
mov
cwtl
jmp
pop
xchg
jmp
pop
pop
test
jecxz
jb
add
out
movsb
outsl
sub
nop
mov
ror
ficoms
gs
aaa
xor
jp
xchg
pushf
cmp
cmc
inc
repz
dec
daa
and
or
inc
outsl
mov
in
cwtl
ja
or
jmp
clc
sbb
dec
cmp
repnz
pop
or
aaa
je
mov
lods
std
ss
xor
jbe
mov
lds
std
add
or
dec
jmp
adc
or
or
xor
arpl
lods
fisubs
or
pop
cmp
dec
mov
and
rorb
std
aaa
stos
xchg
inc
into
stos
push
cmp
imul
mov
shll
cmp
mov
pop
fcoms
adc
lret
adc
cmp
movsb
mov
xor
jo
out
aam
mov
inc
inc
sahf
mov
add
adc
in
pop
mov
movsb
inc
or
mov
push
and
xchg
mov
jl
pop
cmpsl
movl
adc
mov
cmp
pop
pop
jecxz
mov
decb
iret
popf
pop
ss
dec
mov
jl
ja
or
cmp
adc
jmp
js
push
cmp
sbb
jecxz
lret
dec
sbb
stos
pop
push
js
sbb
jno
sbb
in
pop
mov
es
cmc
or
mov
popf
dec
cwtl
test
test
mov
mov
in
icebp
bound
and
push
fcmovnu
xchg
and
lret
xchg
clc
pop
sub
imul
sarl
sbb
testl
jns
and
jne
pop
add
xor
jno
hlt
xor
push
push
mov
lds
adc
bnd
fs
adc
out
adc
adc
jmp
std
mov
inc
xor
ss
iret
pop
xchg
pop
mov
cltd
push
mov
mov
icebp
ljmp
and
or
jl
jl
jl
pop
pop
iret
arpl
lea
les
pop
fnstenv
icebp
mov
add
jns
in
mov
mov
insl
add
add
aad
dec
shlb
inc
jbe
jmp
or
pop
mov
cli
jno
xchg
xor
pop
pop
clc
out
std
and
add
cwtl
inc
int3
pop
jp
cld
ja
inc
push
pop
mov
pop
xchg
sbb
dec
in
mov
or
dec
or
jecxz
jb
push
imul
mov
in
and
popa
stc
out
rorl
pop
jp
mov
imul
arpl
push
daa
dec
daa
mov
repnz
pop
cmp
cmp
cmp
fsubl
inc
nop
and
pop
jo
xchg
jae
push
rcll
idivl
and
sub
push
mov
dec
xor
xchg
addr16
test
jns
inc
pop
pop
mov
inc
xchg
lock
repz
mov
fdivs
mov
dec
push
inc
jg
xchg
sti
jne
loope
lea
adc
out
cmpsl
sbbb
adc
pop
repnz
jp
pop
mov
aam
push
xchg
push
inc
xchg
mov
and
or
mov
aad
cld
and
movsb
rclb
out
mov
xchg
call
rorb
mov
dec
loopne
fiadds
out
or
es
cld
fcomps
lcall
insb
stos
sub
mov
out
inc
loop
mov
inc
mov
ret
aad
and
insb
aas
jno
cwtl
inc
sub
pop
in
ret
inc
mov
push
dec
fldcw
mov
xor
or
dec
adc
cmpl
mov
or
mov
xlat
scas
ret
push
jg
mulb
push
jbe
push
mov
mov
add
or
xchg
adcb
rdmsr
inc
inc
inc
push
xor
ret
sub
orl
mov
cltd
jbe
das
mov
xor
push
sub
shll
imul
xchg
adc
sbb
fldt
dec
repnz
mov
and
icebp
sub
mov
lods
shlb
aam
jl
loope
pusha
push
daa
jecxz
mov
mov
dec
clc
xchg
js
insl
int
scas
movsl
in
pop
cmp
xor
adc
aas
jecxz
adc
outsl
pop
mov
iret
ss
stos
mov
lock
mov
stos
cmp
cmp
and
mov
cld
mov
pop
cli
sti
jecxz
call
movsl
mov
mov
cs
jnp
repz
xor
pusha
add
stos
and
into
mov
sub
mov
adc
imul
xchg
enter
cli
outsb
stc
push
jno
stc
adc
bound
inc
nop
push
call
xchg
jg
js
frstor
cmp
in
adc
push
lea
add
and
cmpsl
push
aam
jle
lret
and
lret
mov
mov
in
add
dec
fistl
xchg
out
pop
mov
pop
mov
sbb
lds
or
fidivs
cmpsb
inc
jecxz
je
sub
mov
gs
gs
pop
cmp
in
xchg
inc
in
pop
fnsave
or
push
and
loopne
test
pushf
in
jg
or
push
push
cmpsb
inc
mov
nop
jle
mov
call
pop
cwtl
xchg
add
adcb
or
adc
lcall
inc
dec
lods
cld
mov
loope
and
imull
sub
cmp
daa
jnp
fs
sbb
lcall
push
jle
xlat
stc
and
stc
mov
adc
stos
jo
outsb
outsl
adc
inc
sbb
adc
pop
mov
sub
cmpsb
xchg
xchg
add
rclb
fidivl
cli
xchg
lret
push
mov
test
mov
mov
cltd
and
popa
iret
int3
jge
mov
sub
push
push
popa
jle
add
xchg
mov
lock
std
add
xor
adc
or
xor
hlt
or
dec
and
mov
pushf
jmp
xchg
xor
xor
jle
adcb
jl
cmpsb
or
call
mov
and
imul
xchg
xchg
push
mov
and
adc
sbb
adc
popa
icebp
lock
movsl
das
xchg
in
inc
jae
leave
mov
cmp
aas
mov
imull
or
gs
enter
mov
jge
dec
jg
cmp
pop
adc
daa
jle
scas
inc
mov
daa
fwait
dec
aas
adc
xor
sbb
fcmovnb
mov
scas
arpl
and
push
mov
inc
mov
inc
xchg
outsl
add
call
ret
js
std
es
cmp
in
out
or
enter
adc
mov
lods
scas
adc
imul
fildll
js
es
xor
lcall
xor
inc
test
mov
sti
push
iret
inc
push
lds
xor
shlb
dec
jg
into
pop
push
cmc
shll
bound
sub
mov
adc
call
imul
add
mov
test
addl
adc
and
in
jle
filds
sbb
cli
mov
jae
sahf
or
pop
leave
mov
add
inc
je
push
jbe
lret
imul
das
insl
insb
in
pop
int3
adc
test
leave
sub
in
in
xchg
mov
dec
fcmove
or
fsubrs
pop
xor
stos
xlat
fisubs
ficompl
sbb
stos
sbb
jnp
sbbl
in
shrl
pop
lods
jnp
push
clc
lcall
mov
test
add
popa
push
dec
fwait
add
mov
add
inc
jmp
xchg
xchg
sbb
daa
ret
jmp
rolb
jecxz
sbb
cwtl
push
lods
push
push
dec
cmp
loopne
das
mov
lret
cwtl
sahf
cmpsl
test
aas
test
jecxz
lahf
cmp
cltd
jg
inc
aas
pop
push
adc
sbb
rorl
adc
sbb
jne
and
scas
in
sub
in
movsl
pop
hlt
repnz
les
ret
jb
cmc
push
ss
pop
jl
lret
popa
pop
jns
sbb
jbe
push
fsts
sti
je
out
aad
push
mov
cmp
sbb
xchg
xchg
iret
adc
mov
inc
or
dec
mov
sbb
stc
sub
or
pop
push
shl
loop
inc
sub
clc
or
lds
cmp
xchg
iret
cmp
inc
nop
cmp
dec
xor
lea
std
leave
and
lea
jns
dec
jnp
mov
push
imul
dec
xlat
cmpsl
inc
sbb
aam
xor
adc
push
imul
pop
mov
cmpsl
mull
sti
pop
xchg
dec
jnp
mov
cs
and
mov
dec
test
lret
bound
sub
rcl
pop
fmulp
ljmp
mov
mov
stos
testb
xor
int3
mov
fadds
jmp
jg
scas
adc
stos
cmp
push
sub
push
lea
jl
ficompl
call
and
sub
or
xchg
arpl
addr16
aaa
cmp
insl
into
mov
inc
jge
inc
bound
imul
es
sbbl
loopne
aam
inc
rorl
cmpsl
aaa
push
xchg
cmp
mov
mov
adc
cli
rclb
aam
inc
push
sarl
adc
jae
out
or
ds
in
jmp
imul
xor
and
push
loope
sti
jg
xchg
jbe
insl
jnp
push
and
sub
xchg
xor
jl
push
std
test
mov
inc
mov
xchg
jbe
xor
mov
dec
outsl
int3
mov
push
mov
sahf
pop
inc
jnp
nop
out
in
mov
imul
sub
jmp
xchg
into
data16
push
aas
push
icebp
dec
daa
sbb
cmpsb
mov
xor
ficoms
xorl
rcrb
sub
stos
mov
add
jns
jge
repnz
mov
cltd
dec
mov
sbb
fildl
nop
out
inc
cmpsl
cmp
adc
lock
or
push
test
call
mov
pushf
cli
sbb
mov
mov
cmp
insl
adc
ss
jae
cmp
jae
in
arpl
dec
aad
outsb
adc
fsubl
in
jle
pop
rcll
xchg
das
sbb
rcrl
je
mov
leave
mov
cwtl
push
mov
bound
out
and
nop
sti
adc
adc
loope
xchg
dec
idiv
jno
xlat
mov
adc
pop
inc
cmpsl
jle
leave
ficoms
imul
repnz
dec
mov
xchg
test
mov
sub
add
push
mov
mov
adc
push
jg
ret
int
xchg
xchg
movsl
lret
es
icebp
inc
fcmove
orl
inc
stos
fwait
inc
lods
add
je
in
cmpsb
jle
insl
xor
jle
imul
je
push
loopne
and
in
enter
jne
lea
je
sub
pop
inc
lock
arpl
in
mov
shll
push
enter
jns
js
ljmp
push
pop
xchg
mov
mov
pop
leave
cld
daa
stos
aad
dec
push
out
pop
into
mov
lcall
cmp
into
lock
and
dec
mov
mov
cltd
sbb
sub
pop
pushl
insl
xor
fs
sub
icebp
adc
mulb
pop
add
sahf
inc
xor
popa
in
sbb
sbb
sub
jo
add
mov
ljmp
or
iret
dec
or
push
clc
aam
mov
mov
pusha
pop
push
cs
bound
sub
push
push
or
cmp
sub
je
fildll
je
sub
loopne
mov
sub
mov
xchg
fwait
push
fwait
mov
mov
sub
out
pop
xor
loope
push
repz
jns
cmc
mov
repz
jno
xchg
insb
xchg
inc
xchg
mov
stc
mov
adc
push
lcall
pop
cmp
mov
cmpsl
shrl
mov
icebp
es
repz
inc
adc
and
lcall
jg
sahf
ffree
aaa
sub
in
cwtl
dec
push
and
inc
lret
jge
xchg
pop
push
incl
std
jecxz
mov
shrb
sbb
xor
sbb
push
or
hlt
ret
pop
mov
mov
nop
inc
mov
aaa
cmpsb
xchg
sub
outsb
mov
mov
outsl
xorl
xchg
pusha
push
dec
rcll
mov
lret
lea
mov
into
add
or
sub
cli
fiaddl
xor
aaa
stc
arpl
sbb
jnp
xchg
jg
sub
rcr
lea
shr
in
add
mov
add
mov
push
pusha
or
sub
sbb
add
cmc
ljmp
sub
out
daa
out
data16
daa
jge
sbb
cs
ss
repnz
test
test
repnz
pop
adc
outsb
repnz
sarl
call
fucom
sub
xchg
and
add
mov
inc
sbb
sub
push
insb
inc
cmc
xchg
data16
xchg
nop
and
jne
xor
pop
mov
pushf
lods
pop
lahf
xor
mov
js
dec
mov
cmpsb
pop
dec
cmp
sub
or
jmp
ljmp
or
out
lret
shlb
test
dec
mov
in
mov
xchg
js
dec
dec
lcall
repnz
cmp
sbb
jnp
mov
mov
fbld
iret
bound
mov
mov
adc
cmp
sbb
int
cmp
dec
mov
call
sub
dec
ret
insl
xor
xchg
jns
sti
arpl
jnp
sti
ficomps
in
dec
repnz
fidivs
arpl
sbb
sbb
jno
cmc
mov
jmp
ja
mov
rcrl
cli
xchg
out
aad
lods
ds
mov
pop
xchg
and
hlt
adc
pusha
add
sti
and
xor
fwait
js
scas
ds
add
mov
inc
mov
sub
mov
shlb
cmp
popf
sbb
mov
xor
or
fcmovnb
cmpxchg
int
jl
mov
je
xchg
outsb
lahf
push
mov
push
movl
rsqrtps
cmc
mov
and
popf
subl
xchg
pop
into
mov
fcomps
sbb
ja
adc
mov
xchg
inc
out
divb
mov
int3
stos
cmpsb
incb
scas
bound
dec
pop
mov
pop
push
add
shl
out
jno
sbb
cmpsb
mov
pushf
dec
sub
pusha
mov
pushf
in
shl
cltd
imul
dec
push
and
in
cltd
imul
loopne
mov
jecxz
push
test
add
cltd
jecxz
stc
cwtl
push
push
scas
rorb
and
clc
test
or
inc
repz
mov
mov
and
mov
pop
adc
icebp
enter
loope
das
adc
outsb
pop
xchg
cmpsl
mov
push
sahf
test
pop
cmc
cs
stos
xchg
inc
pop
out
shrb
pop
aaa
push
adc
and
dec
pop
add
ds
int3
adc
lock
into
sub
sub
outsb
xor
adc
push
lods
arpl
ds
mov
push
inc
int3
leave
fucomip
jp
pop
mov
jg
js
js
movd
adc
or
adc
push
xor
xchg
dec
jmp
and
mov
mov
mov
jmp
mov
xchg
daa
adc
ret
mov
jnp
negb
cmp
jbe
aas
pop
dec
or
xor
push
fstl
stos
das
push
adc
cmp
popf
mov
ja
pusha
cmp
out
pop
push
adc
sbb
xor
orb
mov
or
and
sbb
gs
cmp
stc
mov
inc
negb
jmp
loope
ret
je
dec
insl
out
out
or
xchg
std
adc
dec
or
call
imul
inc
roll
iret
repz
fwait
loop
loopne
loopne
movsl
xor
cltd
cwtl
pusha
out
mov
sub
cwtl
push
pop
sub
jecxz
xchg
pop
or
cmp
test
cmp
jb
jb
jne
int
jno
cs
cwtl
inc
mov
test
out
in
aas
sub
pop
nop
int3
cmp
dec
sub
lods
nop
push
inc
subb
insl
sub
mov
dec
jle
cs
add
pop
jae
push
loop
push
xchg
jp
movsb
and
loop
push
clc
imul
js
inc
mov
lods
push
sub
jle
pop
mov
pop
jno
aad
push
js
enter
xlat
add
mov
dec
jecxz
mov
sbb
flds
mov
jb
pop
in
push
mov
aad
push
pop
or
jecxz
pop
iret
add
jl
dec
dec
lahf
int3
pop
pop
add
xchg
js
out
dec
inc
aaa
inc
mov
cmp
xchg
xor
and
cltd
insb
or
movsb
daa
add
clc
xchg
sub
xchg
int
mov
in
pop
cmp
repnz
push
pop
jo
insb
add
push
leave
sarb
shll
mov
jb
das
push
pop
gs
mov
inc
cmp
or
insb
adc
scas
inc
xor
in
sti
sbb
inc
add
out
out
xor
cmc
movsl
mov
cmp
aam
cltd
or
add
imul
and
push
pop
xchg
push
rcrb
fsubrl
pop
pop
test
pop
dec
icebp
sarl
cld
adc
push
adc
sahf
mov
das
jp
test
ss
ret
adc
out
imul
rol
mov
inc
sub
mov
cmp
popa
or
adc
adc
icebp
paddsw
lret
jno
jns
lods
jge
lock
div
xchg
dec
inc
dec
test
xchg
mov
sti
jbe
out
and
iret
adc
ljmp
leave
mov
push
pop
insb
pop
stos
stos
sub
lret
imul
pop
fldcw
xor
add
adcl
add
je
pmaxsw
lods
aam
xorb
add
pop
in
movsb
jne
shlb
mov
inc
mov
insb
test
sbb
mov
pop
mov
xchg
popa
adc
mov
push
mov
and
and
dec
les
or
aaa
fildl
mov
fdivrl
ficompl
adc
addb
or
push
mov
cmp
xchg
mov
and
rcrb
cld
call
jae
mulb
wrmsr
hlt
inc
add
sub
mov
adc
shrl
sub
mov
jae
cli
or
jbe
xchg
movsb
nop
sahf
test
dec
sbb
cmp
enter
xchg
idivl
stc
push
adc
and
cmp
mov
xor
fsts
jb
adc
int
pop
sti
mov
push
popf
les
push
icebp
pop
fwait
aam
xorb
or
fbld
jno
sahf
cmp
test
mov
mov
out
mov
add
push
mov
pop
imul
sbb
or
adc
out
pop
cli
xchg
dec
jns
and
xlat
cmp
jl
in
ja
fstpl
stc
sub
fdivr
shrb
in
popf
call
daa
sti
pusha
repnz
jae
sbb
aaa
stos
mov
sub
and
sbb
jmp
push
add
popa
pop
and
sahf
adc
pop
xor
mov
clc
push
mov
adc
push
imul
lea
scas
hlt
fnsave
in
mov
fmull
scas
or
push
rcrb
fwait
enter
xchg
or
int
cli
pusha
bound
loopne
pop
lds
movsb
lret
dec
inc
hlt
fstpl
mov
mov
xchg
push
outsb
fsts
cmc
jns
xchg
std
cmp
imul
or
dec
mov
sbb
mov
ljmp
movsl
jno
add
inc
sub
sbb
dec
imul
dec
jl
aas
xlat
cld
pusha
mov
iret
adc
aad
jne
sti
add
cwtl
cmp
popf
les
jo
movsl
ja
out
test
rcl
xchg
arpl
fwait
lcall
xchg
test
lods
dec
pop
dec
mov
ret
push
fdivrs
lds
jo
mov
push
push
aad
repnz
test
jne
mov
sbb
fwait
out
aas
lea
test
fwait
sub
xlat
int3
shll
dec
xchg
jne
mov
pushl
jle
into
pop
add
sub
add
icebp
outsl
xchg
xor
jg
push
fisubrl
pop
xor
das
sub
call
sub
cmp
je
sbb
mov
rcl
ds
pop
sti
in
pop
pop
add
mov
cmp
xchg
adc
hlt
dec
lahf
or
jne
repz
sbb
lds
inc
aam
dec
push
mov
mov
movl
fcmovbe
jbe
cmp
dec
sbb
test
nop
xchg
xor
xchg
arpl
pop
mov
jecxz
call
jne
iret
push
xor
xchg
mov
repnz
sub
pop
push
xchg
and
inc
dec
je
lret
cwtl
mov
dec
sub
mov
pop
jns
fisttpll
jle
xlat
notb
push
push
jo
rclb
daa
inc
cmp
outsb
xchg
movsl
mov
adc
fists
or
inc
xor
lock
cltd
fbstp
mov
xor
ds
out
add
cmc
orl
xchg
cmp
not
jg
jae
cmp
mov
cmp
movsb
pop
jno
imul
jl
sub
mov
test
shrb
xlat
rol
cmp
hlt
sbb
cmp
xchg
fistl
std
push
xchg
shlb
pop
xchg
int3
mov
sbb
out
push
fstps
jb
ds
jp
pop
jbe
sbb
sub
pop
shll
pop
xchg
xchg
loop
ds
dec
pop
cli
mov
adc
add
push
test
push
inc
cltd
mov
dec
idivb
fstl
imul
scas
jmp
jne
cmp
sub
std
frstor
pop
add
mov
push
loop
mov
es
xor
xchg
into
xchg
gs
sbb
xchg
push
scas
and
sbb
test
jge
push
loopne
shr
ret
and
and
pop
add
es
in
push
sti
add
in
jo
jno
ljmp
adc
mov
mov
sbb
mov
pop
push
cmp
stos
jg
sub
aas
aaa
pop
ds
ja
test
xlat
shrb
push
cmp
pop
movsl
push
dec
daa
out
mov
cltd
and
les
xor
inc
xor
les
stc
movsl
repz
je
sarl
jbe
or
mov
imul
shlb
add
adc
or
scas
mov
popf
inc
add
clc
out
mov
scas
cmp
push
rcl
std
pop
jl
loopne
xchg
sbb
push
out
scas
xchg
outsb
fdiv
lock
imul
in
jns,pn
movsl
fstpt
sub
outsb
cmp
push
mov
mov
mov
icebp
ret
imul
loopne
pop
test
ret
pop
sahf
cld
outsb
lea
and
sub
enter
das
pusha
push
dec
ror
push
in
add
sbb
cs
loope
sub
sub
and
out
in
add
sbb
nop
cmp
insb
pop
push
jge
fldcw
in
leave
pop
dec
pop
jecxz
out
cmpsl
xor
fimuls
add
push
test
add
sub
sbbl
scas
leave
arpl
dec
jne
pop
dec
in
out
sub
adcb
outsl
mov
mov
and
and
push
or
mulb
je
jae
push
dec
cmpsb
sub
xchg
dec
jecxz
cmp
push
js
subb
inc
std
add
in
shr
dec
pop
or
mov
nop
dec
call
pop
movsb
cmp
jae
std
and
and
cmove
stc
dec
lea
push
ljmp
shlb
jge
mov
out
das
gs
xor
sbb
jae
sub
or
sub
pop
shlb
stos
daa
jnp
shr
jb
mov
push
add
les
dec
dec
std
daa
and
xor
leave
and
mov
or
out
xor
shlb
jns
xor
into
pop
dec
push
sub
iret
inc
sbb
and
xchg
in
mov
fadd
scas
push
roll
mov
mov
jp
outsl
adc
sbb
xor
scas
cltd
js
ss
jnp
lea
sbb
ficoms
data16
ss
nop
jo
ss
faddp
rclb
cmpsb
dec
bound
mov
push
enter
lret
pop
lret
dec
fidivrs
stos
add
jg
sub
int
cld
add
sahf
dec
aad
push
imul
cld
addr16
xor
iret
pop
add
inc
sub
cmp
sub
pop
push
mov
mov
lock
push
push
jecxz
pop
out
enter
and
xlat
adc
aas
leave
sbb
pop
mov
fimuls
ret
pop
je
mov
daa
jbe
iret
sub
sbb
sbb
das
dec
insl
ljmp
mov
mov
in
shlb
cltd
mov
mov
xchg
loope
lds
ret
dec
pop
sbb
lods
lock
daa
jnp
aaa
hlt
or
nop
mov
adc
lods
pop
loopne
mov
lods
jne
faddl
jg
aam
shll
stos
mov
lock
jecxz
fsubl
or
sub
roll
sti
dec
aad
inc
push
sahf
scas
cwtl
sbbb
stc
and
shl
popa
in
sbb
insb
adc
xchg
jae
jecxz
xor
ljmp
mov
stc
imull
xchg
aam
imull
popa
lret
je
sub
push
cmp
cmpsb
jg
js
mov
inc
out
pop
or
xchg
xchg
cs
xchg
and
pop
loope
mov
cmpl
arpl
mov
sub
addb
xorl
scas
sti
mov
jnp
mov
and
push
pop
les
cld
xor
mov
mov
push
cmp
lcall
lds
jnp
mov
mov
push
push
inc
test
adc
or
cltd
sub
je
dec
xor
mov
mov
jne
sub
mov
mov
sbb
call
or
jmp
out
xor
int3
add
adc
movsb
daa
lods
sub
push
sbb
int3
dec
or
sti
fdivrp
call
scas
pop
mov
cmpb
nop
xchg
mov
pop
add
aas
xchg
int3
pop
jg
cmp
scas
mov
cltd
add
dec
mov
pop
in
jle
xor
xor
pop
xor
loop
ficomps
mov
test
mov
subb
mov
add
mov
sbb
xor
pop
pop
dec
arpl
jmp
xorb
stos
add
xchg
lods
jl
int
notl
push
mov
xor
lahf
je
sar
fstps
es
pop
cmp
xor
push
mov
clc
bound
sub
xchg
jns
mov
stos
and
fwait
rcll
mov
xchg
pusha
xor
mov
push
das
inc
xchg
xchg
mov
mov
in
fldl
and
push
mov
dec
leave
or
mov
dec
sti
pusha
dec
hlt
pop
sbb
mov
xchg
xchg
in
fcoms
xlat
add
xchg
mov
fdivs
add
mov
jmp
js
insb
lret
mov
repz
daa
adc
hlt
push
or
fcoms
jbe
inc
jne
enter
dec
fisubrl
sahf
xor
int3
cmp
stos
into
gs
pushf
xchg
xlat
push
sti
push
pushf
loope
or
push
lea
fs
xchg
mov
and
int
pop
into
out
push
testl
ror
loopne
pop
ret
fwait
adc
pop
and
loopne
xlat
cli
daa
add
idivb
or
jp
lret
push
pusha
push
xchg
icebp
jno
mov
pop
popf
cmp
push
outsb
pop
mov
cmpsl
imul
inc
pusha
aaa
int3
cmp
fimull
loope
popa
imulb
xor
call
adc
push
and
stos
mov
jnp
lock
ret
push
stos
maskmovq
imull
add
fnstsw
out
cs
pop
mov
lcall
je
inc
sbb
inc
xor
lret
or
fldcw
dec
add
jo
mov
add
mov
and
gs
dec
fsubs
lcall
xchg
dec
cmp
jb
mov
sbb
ret
push
xchg
iret
repz
push
jp
movb
dec
or
xchg
jns
arpl
sub
stos
xchg
dec
mov
cmp
rorb
lods
ds
cmp
cmp
or
xlat
xchg
sub
jbe
popf
inc
inc
jecxz
fidivrs
push
lea
dec
add
lods
or
cmp
hlt
xor
stos
pushf
test
mov
sub
xorl
mov
inc
adc
and
pop
sub
enter
and
insb
bound
ds
and
rorl
js
int3
mov
adc
or
inc
imul
mov
mov
cmp
jno
stc
sub
lods
xchg
mov
lret
insb
pop
mov
cmpl
dec
insl
aas
stc
pop
hlt
pop
je
inc
pop
iret
inc
icebp
addr16
ja
mov
lcall
dec
jae
shlb
insb
push
and
pop
mov
xor
dec
call
std
cmp
imul
int3
lock
int3
lods
pusha
pop
push
mov
fwait
negl
pop
es
leave
or
mov
jno
adc
bound
frndint
jno
xor
push
mov
jbe
stos
cltd
adc
into
sbb
int
shll
insl
movsb
jmp
and
sub
mov
and
cmp
outsb
jbe
dec
push
add
and
mov
sbb
mov
fxam
ret
inc
mov
add
sub
xchg
lret
movsb
ds
test
add
je
adc
cmc
mov
loopne
rorl
inc
jnp
cmp
daa
bound
xchg
cmc
hlt
div
add
ss
sahf
adc
hlt
dec
inc
or
pop
aaa
cmp
xchg
sahf
out
jae
test
into
sub
ret
cltd
adc
cs
in
add
jp
pop
mov
adc
push
pop
cmc
push
jb
cltd
loopne
pop
adc
sbb
jbe
rcrb
sub
jb
jle
clc
pop
test
mov
pop
jge
hlt
dec
cltd
fwait
aaa
loopne
aas
mov
es
test
je
push
mov
jl
sbb
jp
xchg
clc
push
fstpl
sbb
dec
inc
leave
xchg
fldenv
cmp
cltd
pusha
out
test
jns
sub
push
sub
jno
and
pop
sub
and
push
in
loope
inc
lahf
in
xor
mov
ljmp
mov
movsb
mov
mov
rcll
repnz
sub
push
gs
imul
bound
mov
dec
and
mov
pop
insb
pop
inc
mov
xor
adc
and
and
sarb
imul
not
or
test
or
in
jmp
sbb
hlt
mov
xchg
pop
jno
adc
mov
popa
dec
inc
jo
repz
pop
ljmp
mov
and
lods
adc
pop
jg
dec
adc
inc
and
cs
jecxz
jne
clc
sub
jle
enter
mov
and
xchg
fldt
les
mov
mov
repz
mov
mov
insb
push
xchg
outsl
push
imulb
xchg
xchg
out
in
jo
shlb
inc
loop
aad
inc
push
mov
adc
mov
nop
mov
cmp
shrb
outsb
push
dec
hlt
movsb
sti
daa
push
push
push
in
xchg
add
cmp
push
mov
and
stos
in
rolb
push
orl
popl
mov
int3
leave
pop
add
push
popf
enter
xchg
lret
sbb
lret
add
mov
cmc
hlt
push
adc
push
lods
incl
inc
or
outsl
or
or
int3
and
mov
ja
jae
icebp
shl
pop
pop
xor
adcl
mov
scas
repnz
je
adc
mov
inc
rcr
popf
pop
add
jmp
rorl
outsl
ljmp
pop
ja
rclb
in
pop
pop
enter
mov
stos
sub
inc
dec
mov
divps
dec
out
xor
dec
cli
jp
cwtl
cmpsb
repz
mov
xor
rorb
popf
xchg
mov
inc
xor
cmpsl
arpl
aad
rclb
mov
insb
icebp
leave
sbb
push
cmp
inc
xchg
mov
mov
das
insb
add
lahf
push
push
push
dec
pusha
fnstenv
aaa
add
mull
inc
push
das
repz
das
inc
inc
push
xlat
adcl
xor
test
insl
sbb
lret
lds
mov
lea
mov
faddp
vpxor
xor
ret
aam
sbb
push
push
sbb
xchg
dec
sti
fstpl
out
imul
cli
push
cwtl
aad
mov
mov
imul
push
xor
sbbb
xchg
sub
loopne
pop
in
andl
dec
adc
xlat
movsb
pop
out
shrl
adc
lahf
outsl
xchg
sti
aas
loopne
pop
rorl
stc
into
out
xchg
mov
and
aas
jae
adc
dec
jecxz
mov
adc
xchg
mov
mov
push
out
add
push
inc
mov
sbb
sub
pop
inc
mov
faddl
iret
scas
sub
lock
inc
aaa
pop
leave
mov
sub
adc
mov
ss
and
pop
ljmp
out
inc
mov
lds
icebp
lcall
mov
movsl
sbb
scas
dec
sbb
xchg
repz
jae
mov
pushf
test
inc
sahf
adc
out
nop
xchg
arpl
pop
add
call
fisubrl
aam
and
cmp
orb
fildll
leave
mov
iret
test
out
add
adc
sbb
adc
fmul
xor
push
dec
rcll
push
mov
lea
jne
cmpsl
push
or
or
maskmovq
imull
jecxz
mov
xchg
sbb
jle
or
daa
ja
push
add
jmp
xchg
cmp
sarl
mov
aas
adc
cmp
mov
adc
cmp
sbb
cmp
mov
dec
mov
cmp
clc
cli
add
decb
dec
test
icebp
xchg
adc
mov
jle
addl
lea
divl
push
mov
sub
fisubl
jae
mov
jge
lock
outsl
ljmp
fiaddl
das
lods
nop
cmpl
insb
push
pop
xor
sub
out
xlat
insb
add
call
mov
popa
lods
and
out
mov
ret
sub
cmp
movsl
cmp
int3
in
jo
rolb
les
fdivl
mov
xchg
in
xor
lcall
push
insl
pop
adc
jbe
dec
xchg
dec
outsl
push
or
pop
js
movsb
push
test
cmp
icebp
xor
clc
mov
outsb
xchg
mov
iret
xchg
in
insb
mov
xchg
cwtl
sbb
stos
stos
or
movntps
dec
in
sub
xor
rcrb
mov
test
mov
test
sub
jae
ss
out
shrb
and
mov
push
sub
sub
stc
shlb
jne
dec
and
lods
in
ret
adc
adc
outsl
pop
test
outsl
jnp
jmp
inc
and
out
mov
mov
rcrb
jmp
dec
pushf
mov
fisttpll
cmp
mov
push
sbb
test
out
popf
pop
fdivrp
jp
or
xor
cmp
int
imul
xchg
pop
pop
aas
out
jb
jl
jno
xor
pop
sbb
add
xchg
add
or
in
jg
xchg
cltd
mov
inc
loope
xlat
adc
js
sahf
inc
jo
xchg
test
ret
cmp
jbe
fidivrs
outsl
mov
jae
and
xchg
sub
loope
inc
mov
mov
add
xor
hlt
fs
xor
sub
andl
mov
adc
out
cmpsl
out
inc
imul
sub
push
js
lahf
push
jns
movsb
test
lcall
dec
rcll
xchg
push
lods
push
cmp
vmovddup
jno
inc
arpl
ja
shlb
movsb
push
inc
push
jae
pusha
pop
jge
jecxz
mov
bound
stos
xchg
mov
mov
jbe
lret
jne
ret
addr16
test
loope
int3
cmpsl
aam
mov
into
mov
mov
adc
push
ljmp
pop
aas
adc
rclb
add
jno
or
push
sbb
imul
cmp
xor
stos
leave
in
loopne
movsl
xchg
shrb
mov
mov
mov
pop
xchg
cli
push
arpl
add
sbb
xchg
mov
imul
jne
pop
pop
push
add
xor
fdivs
mov
ds
jbe
addr16
pop
test
adc
push
or
movsb
jp
sbb
test
stos
sub
in
sti
dec
loopne
stc
imul
xchg
push
inc
pop
xor
dec
sub
fwait
dec
test
xor
cmp
sbb
imul
push
sti
cmp
fwait
test
movsb
roll
mov
or
mov
jbe
xchg
push
jecxz
sbb
cmp
cmp
loope
pushf
jecxz
or
mov
inc
sbb
rcrl
mov
fidivs
loope
xchg
jb
cld
xor
loop
sti
jp
fmuls
aaa
es
shlb
fstpl
cmpsb
stc
cs
pand
pop
aaa
push
stc
je
test
and
and
mov
int
mov
arpl
sbb
ror
jp
int
cmpsb
imul
aad
ret
cmc
adc
iret
inc
cmpsb
jbe
jns
imul
lret
iret
cli
push
mov
xchg
mov
adcb
adc
or
setg
lahf
mov
faddp
sbb
mov
inc
xchg
stos
les
cmpl
xor
pop
pop
jecxz
nop
xchg
xchg
lock
jb
sbb
cmp
movsb
lea
jmp
notl
adc
jb
inc
and
mov
data16
popf
cmp
lcall
dec
rolb
lret
sub
xchg
popf
loope
rolb
stc
dec
popf
xor
dec
push
add
testl
repz
ljmp
inc
jns
out
dec
leave
hlt
scas
lds
mov
add
scas
rclb
pusha
mov
or
sub
repz
test
js
scas
push
fcmove
inc
insl
lcall
dec
jne
popa
mov
adc
rcrl
jo
js
or
adc
xor
nop
push
or
js
mov
shr
jnp
loopne
add
shlb
add
idivb
enter
dec
dec
jae
pop
adc
gs
lret
add
dec
mov
pop
lods
rcll
imul
mov
adc
into
dec
push
ret
fisttps
inc
adc
push
ficomps
fwait
out
das
and
and
jecxz
pop
fstl
movsb
dec
in
dec
jmp
mov
sbb
xor
or
fxch
test
into
mov
mov
jecxz
xchg
push
and
fbstp
pop
cmp
pop
rcll
out
lret
jmp
xchg
clc
fidivs
add
frstor
out
popf
rcrl
mov
sbb
movsb
dec
ret
push
jecxz
stc
mov
and
adc
cmp
jne
mov
inc
push
pop
dec
or
jbe
inc
pusha
push
cmp
push
insb
inc
push
popf
or
cmp
xor
push
pop
sahf
xor
stc
movsl
out
xor
incb
dec
add
les
out
mov
in
daa
pop
add
in
dec
cmp
iret
sti
xor
sbb
pop
js
xor
lcall
je
mov
stos
xorl
jl
lret
pop
adc
cmp
test
lret
std
pop
push
sarb
push
arpl
aaa
and
nop
andl
sbb
hlt
cmp
pop
sahf
and
stos
cwtl
lcall
cmp
lret
pop
push
jmp
fwait
and
adc
cmpsb
leave
jle
imul
push
dec
lods
pushf
les
sub
ja
mov
int
ret
dec
test
scas
out
or
and
xchg
jns
loop
jmp
mov
and
shlb
inc
pop
int
push
les
sbb
in
stos
pop
add
fidivrs
sbb
lods
cmpsb
xchg
mov
jb
jne
loope
ret
ret
push
push
nop
push
nop
outsl
and
out
mov
sub
inc
sbb
ret
loope
adcb
andl
daa
cmp
mov
andb
cmp
mov
lds
mov
mov
fs
clc
lea
sub
jle
mov
filds
jns
jp
cmp
fcomps
mov
jecxz
sbb
inc
adc
cmpsl
dec
in
fcoml
xchg
and
xchg
mov
xchg
mov
pop
push
pop
and
loopne
push
std
int3
sti
sub
arpl
or
jno
mov
cwtl
push
cmpsb
cmpsl
mov
in
mov
jmp
mov
cmc
jns
jns
jp
lret
iret
jnp
lcall
mov
sub
push
jg
je
dec
repnz
aad
arpl
mov
or
jns
jge
xchg
in
shr
xchg
insl
cltd
fsubrs
shl
leave
sub
push
adc
pop
and
repz
xchg
push
scas
xchg
fsubs
cmp
data16
adc
mov
xchg
add
sti
mov
stos
cmp
jg
jg
pop
sbb
shrb
fld
imul
pop
pop
mov
xchg
repz
xchg
imul
push
popa
mov
push
jno
ss
adc
dec
out
or
insb
or
mov
out
lret
rcr
arpl
cmp
mov
fmull
xor
imul
inc
mov
push
shll
jge
dec
cmp
sub
lds
inc
lret
out
scas
jecxz
sti
push
mov
addb
test
add
hlt
and
fwait
adc
loopne
xor
loopne
inc
std
inc
cmpsl
and
add
sub
rclb
or
hlt
sahf
and
js
sub
cmpl
iret
push
jae
adc
push
out
pop
jge,pt
ret
adc
push
cmpsl
xor
or
mov
cli
sahf
outsb
cld
xchg
adcb
nop
cmpl
jb
sbb
adc
push
adc
fadd
dec
add
js
adc
clc
add
pop
rolb
xlat
in
sti
sbb
xor
jecxz
shll
test
pop
aas
insb
push
subl
pusha
into
out
xlat
xor
sub
and
lods
jnp
divb
pop
outsl
dec
dec
in
scas
loop
rolb
je
fs
out
lahf
ffreep
in
jb
hlt
jo
adc
mov
sub
clc
cmpsb
and
repnz
in
nop
movsl
push
lods
std
mov
popf
pop
mov
std
cmp
fdivrp
repnz
dec
xor
cltd
dec
iret
stos
pop
mov
sub
jmp
adc
jb
lods
into
mov
and
and
sbb
cmc
xchg
sbb
outsl
pop
rcr
pop
push
jo
and
push
push
cltd
push
jb
mov
imul
xchg
inc
hlt
cmp
clc
sub
in
push
repz
adc
das
pop
cmp
jecxz
pop
cmp
test
int3
inc
push
outsl
adc
mov
dec
setl
mov
add
cmp
dec
xchg
insb
pop
pop
push
mov
adc
lods
fwait
rcrb
out
xlat
xor
sbb
and
fs
loop
in
std
sarl
mov
jg
mov
cmpsl
pop
mov
inc
std
xorl
orl
pop
xchg
inc
imul
mov
arpl
xchg
std
mov
out
cmc
cld
inc
jmp
rolb
mov
jge
out
push
iret
insl
jge
mov
dec
enter
test
stos
gs
fs
inc
add
in
cli
push
xchg
out
das
stos
pop
clc
popf
mov
add
and
cmp
pop
mov
dec
cwtl
icebp
in
lret
jg
clc
rclb
std
sbb
loopne
and
jp
sbb
stc
jo
test
and
push
cld
out
add
inc
fcomi
mov
shlb
xor
lea
cwtl
lcall
loopne
adc
fwait
sbb
mov
jmp
sbb
push
push
dec
push
adc
cmp
popa
sub
call
repz
mov
and
and
adc
sub
loop
jge
in
repnz
stos
test
es
mov
xchg
dec
js
push
xor
das
fisubl
xor
icebp
dec
out
jge
ljmp
mov
out
xchg
shl
sbb
es
jb
mov
mov
or
icebp
mov
int3
pop
dec
mov
rol
or
leave
andb
imulb
aad
add
fidivl
mov
cmc
imul
aaa
pusha
loop
xchg
ret
test
xchg
stc
adc
dec
mov
add
aad
dec
mov
or
out
xor
dec
fidivl
push
fistpl
fimull
mov
ret
cmp
push
out
gs
push
mov
jg
fcoml
orl
jns
or
pop
and
inc
xlat
or
pop
repnz
scas
test
sar
inc
ds
dec
push
mov
or
jecxz
and
and
and
mov
add
jne
icebp
repz
sbb
and
xor
movsb
int3
sbb
or
adc
mov
add
test
add
fmul
pop
sbb
addr16
jmp
insl
add
pop
jl
adc
shlb
pop
pop
idiv
pusha
xchg
mov
mov
in
jns
xor
imul
sub
mov
jb
sub
popf
les
or
js
iret
inc
pop
and
fisubl
lods
test
leave
insb
scas
pop
sbb
lods
cmpsl
push
sbb
insb
dec
xchg
and
icebp
pop
imul
pop
adc
jne
movsl
adc
lds
fmul
lods
cli
pop
xchg
lods
dec
xor
or
and
xchg
in
jns
in
stc
mov
fucom
ljmp
pop
push
jmp
imul
shlb
fmuls
jmp
sub
pop
arpl
dec
push
decb
mov
and
push
lret
shrb
pop
sbb
jp
pusha
out
aad
ljmp
add
or
loope
cltd
mulb
cli
sub
stos
imul
xor
mov
mov
test
sub
dec
outsb
insl
sbbb
push
jp
je
lods
jae
bound
subl
inc
movsl
call
aam
outsl
or
dec
adc
mov
add
test
and
sub
pop
pop
dec
or
leave
popl
inc
xor
push
dec
int3
mov
adc
cmpsl
xchg
mov
std
loope
neg
pusha
loope
cmp
pop
cmp
sbb
lret
inc
mov
ja
stos
in
adc
pop
dec
cmp
pop
popf
sub
repnz
test
fldt
cmc
push
dec
test
std
sub
lahf
inc
cmp
inc
dec
mov
inc
fistps
push
sub
nop
pop
loop
ret
mov
in
jo
pop
sbb
insb
test
pusha
enter
fincstp
and
xor
mov
ss
cld
pop
jmp
pop
in
fs
lock
pop
scas
mov
int
sbb
push
hlt
iret
fldln2
push
ret
movsl
sbb
stos
add
lock
ds
lock
das
or
jae
repz
xor
jp
jle
pop
xchg
decb
and
sti
jl
fwait
test
loop
dec
or
inc
lahf
test
stos
ljmp
pop
jnp
add
or
push
jbe
call
cmp
add
lret
icebp
aad
push
jl
and
std
push
pop
pop
jo
jg
jno
push
cmpsl
lods
aad
ljmp
movsb
dec
sbb
nop
and
rclb
aaa
in
mov
jae
repnz
push
pop
fs
sub
jl
cli
mov
xchg
inc
leave
pop
or
pop
leave
dec
ss
lret
cld
fisttpll
sbb
clc
ret
mov
cmpsl
jb
cltd
fcomip
adc
pop
clc
add
mov
sti
or
repz
dec
inc
rol
and
sbb
xchg
mov
jmp
xorb
sub
xchg
mov
sub
push
jle
pop
pop
jno
fs
inc
imul
nop
push
pop
ficomps
pop
push
xchg
push
jle
jbe
jne
negb
bound
adc
aaa
and
in
inc
out
push
scas
les
sarl
jnp
or
adc
sbb
imul
aad
cmc
fisttps
ja
mov
in
ret
dec
and
enter
xchg
test
les
fidivrl
rorb
fs
sti
loope
fisttps
aam
jmp
xor
push
dec
jecxz
mov
xlat
cmovg
add
or
mov
mov
loop
mov
xor
sub
mov
add
out
test
push
dec
cmp
test
aas
push
sbb
fisubrs
xchg
imul
cwtl
cmp
out
rorl
insb
inc
sbb
mul
xchg
loopne
push
lods
fbstp
fmull
lret
mov
adc
inc
mov
push
push
dec
mov
mov
fbld
data16
add
sub
jns
shlb
jo
fstpl
and
sbb
mov
aaa
sbb
mov
sbb
ret
stc
sbbl
mov
pop
mov
inc
out
push
fnstsw
jb
dec
lds
dec
mov
mov
sbb
vmovmskps
mov
or
ja
or
fnsave
jae
adc
imul
add
push
mov
inc
pop
lahf
jae
imul
idivl
frstor
in
add
getsec
push
adc
fsubl
scas
and
sarb
push
dec
inc
jnp
subb
sub
mov
sbb
jo
dec
test
outsb
call
sbb
fsubrs
xchg
mov
sbbl
mov
mov
xchg
adc
cmc
dec
pop
jl
daa
jmp
arpl
xchg
ljmp
ljmp
jmp
jne
xchg
and
lret
outsb
imul
loopne
fstps
imul
dec
int
mov
inc
inc
lret
pop
adc
popa
cmp
fsubl
fwait
mov
push
js
cmp
lret
push
fwait
and
imul
out
cmp
dec
xchg
ret
stc
lds
inc
daa
or
test
mov
call
sbb
mov
sbb
sub
jp
cwtl
jne
mov
sbb
mov
adc
push
push
shrb
or
mov
insb
lret
int
and
mov
adc
jle
inc
or
inc
lret
mov
jp,pn
into
add
enter
das
jmp
je
daa
ds
sahf
bound
gs
stos
imul
insb
and
call
mov
aaa
imul
mov
repz
pop
pushf
lret
jp
jno
pop
addr16
pushf
xor
mov
test
rolb
or
pop
les
nop
adc
jge
mov
dec
adcl
ss
push
mov
push
mov
and
cmc
in
xor
push
les
stos
pop
negl
mov
shrl
test
aas
xchg
xlat
add
cmp
test
mov
sub
scas
call
cmp
push
sbb
push
xchg
mov
out
mov
stos
add
in
jl
inc
mov
ret
fidivl
mov
sahf
pop
push
adc
dec
xchg
xchg
test
jg
clc
mov
xor
addr16
out
shll
test
iret
addl
sbb
icebp
fstpl
xchg
je
cmp
test
fld
and
popf
mov
inc
aaa
movsb
inc
inc
cltd
xchg
fs
lret
xchg
or
mov
or
cmp
ja
inc
push
or
jbe
push
push
adc
adc
sub
dec
add
adc
sub
in
iret
addb
sti
mov
nop
in
int
xchg
icebp
inc
les
pop
fidivrl
inc
or
mov
outsl
and
fs
pop
mov
or
jge
ds
and
cmpsl
add
mov
adc
push
sbb
pop
xchg
mov
sub
push
lahf
scas
mov
xor
cmp
add
data16
add
cltd
jo
jp
lahf
clc
ds
or
sbb
adc
adc
rcrl
mov
dec
leave
out
jecxz
dec
mov
cmp
jbe
xor
popl
rcrl
mov
jae
sub
cmp
inc
xchg
sbb
adc
aad
in
cld
sbb
hlt
leave
aaa
mov
or
and
add
loope
into
fimuls
aaa
jo
mov
pop
xchg
popa
cld
movsb
in
jne
hlt
push
and
adc
adc
aad
dec
shll
inc
es
aaa
ds
aas
push
nop
lea
pushf
sti
roll
ficoml
mov
ds
fstpt
gs
rcr
scas
push
addr16
sbb
lods
fs
jmp
jg
add
pop
mov
mov
mov
jmp
jecxz
xor
xorb
cmp
sarb
sbb
cmp
test
fmuls
bound
ret
test
in
and
test
jmp
xchg
out
mov
fs
insb
out
mov
push
dec
mov
test
std
loopne
or
das
inc
mov
sbb
push
cmp
sti
inc
cmp
add
clc
nop
mov
inc
push
repnz
rolb
mov
rcrl
dec
pop
jle,pn
cmp
fimull
adc
pop
int
and
rorl
sub
popf
subb
push
add
cli
loope
cmc
out
jne
aaa
shrb
dec
adc
xorl
cmpsl
aam
push
mov
shl
loope
dec
cs
lea
ja
jmp
xchg
ss
dec
pop
stos
stos
push
lret
std
in
stos
lock
xor
mov
sub
scas
mov
xchg
ja
inc
add
mov
into
aas
ljmp
push
mov
jge
testl
in
cmp
pop
sub
js
lret
xor
or
lahf
stos
cmp
sbb
mov
mov
fistps
lret
rolb
mov
cmc
stos
mov
adc
fisubs
jecxz,pn
in
pusha
imul
add
mov
adc
pop
cmp
push
int3
jle
in
xchg
pop
add
in
fnstcw
stos
pop
icebp
cld
notb
jle
jne
aam
xor
push
or
mov
jne
inc
push
test
push
add
inc
lock
jmp
push
jl
stc
imul
xchg
cwtl
or
fiaddl
mov
outsl
inc
test
ret
std
mov
flds
outsl
mov
fwait
or
in
xchg
and
cmp
xchg
loopne
inc
enter
push
les
cwtl
mov
jmp
arpl
arpl
sub
pop
addl
mov
sub
loop
and
les
xchg
std
in
popa
jbe
fmulp
scas
imul
insb
fsubr
pop
mov
inc
data16
xor
push
movsl
sub
rclb
daa
or
jge
frstor
fildll
inc
loop
and
lock
xchg
pop
rcrb
stc
fistpl
dec
pop
nop
adc
and
jecxz
ss
add
test
jno
mov
les
jno
in
stos
pushf
loope
pcmpeqb
idivl
adc
pop
nop
adc
dec
mov
out
fdivrl
mov
iret
add
insl
jnp
arpl
lea
xor
aaa
test
cmp
mov
arpl
sbb
imul
mov
push
mov
mov
inc
sub
stos
lahf
dec
xchg
jl
subl
jecxz
aad
adc
xor
push
add
xchg
jbe
pop
stc
lahf
xchg
rolb
cmp
test
adc
mov
das
stos
sbb
insb
push
test
add
cwtl
ds
out
xchg
inc
jle
test
inc
sbb
sub
and
xor
inc
fucomi
xchg
mov
shl
inc
xchg
fdivl
mov
jmp
sbb
insb
push
push
enter
push
jne
int
mov
push
lcall
sub
ficoms
nop
pop
pop
xor
jg
jo
mov
jl
mov
scas
aad
cld
push
push
cmp
sub
lods
push
inc
and
or
and
mov
fxtract
aam
push
mov
ljmp
xor
insl
xchg
jg
pop
int3
pop
push
roll
sub
dec
gs
jo
fadds
lods
and
sub
xor
rolb
jno
mov
movsb
mov
out
fsubrs
outsl
add
jns
inc
lea
lret
pop
out
popf
lcall
add
fcoms
cmp
jo
outsl
jne
in
icebp
leave
inc
xchg
popf
daa
pop
mov
pop
mov
mov
les
lods
stos
roll
xlat
pop
arpl
fstp
xchg
icebp
ss
loope
xchg
sarb
lock
mov
pop
ret
rcl
shl
sbb
lods
dec
int
jmp
imul
xor
mov
lahf
mov
sub
cmp
xor
andl
out
fsubs
and
sub
jp
test
pop
adc
mov
repnz
push
imul
jl
mov
sar
and
add
adc
inc
mov
fldenv
sbb
sahf
gs
mov
lods
mov
out
test
inc
xor
insb
test
dec
flds
add
push
popf
cmp
into
adc
arpl
sbb
mov
sub
xchg
mov
jbe
jge
and
lret
ljmp
jg
dec
mov
loope
aad
scas
add
dec
cmpl
and
xorl
fmuls
outsb
sahf
mov
arpl
repnz
xchg
dec
fimuls
les
push
mov
in
xor
rcl
cmp
aas
xor
mov
dec
inc
clc
jge
jno
and
loop
xlat
test
sbb
jmp
jnp
xor
push
je
dec
fstpt
js
and
fbstp
hlt
push
in
and
and
sbb
dec
pop
or
and
rcll
mov
cmp
test
or
jo
sbb
lods
inc
stos
icebp
repnz
mulb
data16
fsub
aam
mov
rcr
out
loop
sbb
jne
jae
les
xchg
inc
iret
pop
add
ja
mov
ret
inc
out
pop
xor
xor
in
jmp
pop
leave
cmp
xor
ljmp
sub
mov
mov
jbe
out
push
repnz
dec
icebp
mov
nop
int
jmp
sub
mov
incb
or
add
les
cmp
cltd
xlat
ljmp
mov
fadds
pop
cmpsb
mov
in
xchg
cmpsb
or
es
fwait
jmp
lea
cmp
mov
fsubs
icebp
sub
mov
mov
xchg
and
je
adc
jmp
dec
add
lock
pop
aaa
cmp
repnz
fnstcw
sti
xchg
lcall
mov
out
push
add
sbb
arpl
dec
clc
cmp
dec
push
imul
aaa
je
cli
push
lea
insb
and
int
int3
xor
push
sub
cmp
fmuls
xchg
ret
or
insb
outsl
or
fstl
pop
lahf
cmp
gs
xchg
scas
movb
je
nop
fldl
test
mov
fs
mov
sub
or
dec
xchg
testl
scas
pop
std
std
int
bswap
loopne
cmpsb
or
sub
push
stc
mov
dec
push
aam
aam
pop
stos
mov
dec
cmc
jge
jg
cld
outsb
xorb
cltd
push
negb
xor
jnp
xorb
bound
loop
fnstenv
xchg
dec
xor
inc
xchg
out
jbe
mov
pushf
das
jl
aad
xchg
cmp
mov
jae
sbb
stos
mov
mov
rorb
inc
sbb
cld
pop
fsubrs
push
call
or
pop
arpl
cmpsl
jbe
jg
pushf
cmp
adc
in
movsl
insl
push
je
ljmp
filds
data16
in
popf
mov
decb
pop
mov
xchg
in
jge
icebp
mov
repnz
cwtl
in
xchg
add
cmc
pop
jmp
xchg
mov
dec
or
loopne
pop
cs
jno
clc
scas
ja
push
es
push
pop
movsbl
ds
ret
push
bound
sbb
mov
sub
loopne
ret
imul
mov
js
or
scas
pop
test
sub
xchg
int
hlt
fidivl
push
sbb
shr
jne
outsl
pusha
jb
popa
loopne
pop
adc
mov
or
popa
sbb
pop
push
subb
add
jle
jl
nop
aas
or
pop
orb
cmp
aas
cmp
je
pop
xor
xor
xor
push
daa
faddl
xor
add
inc
outsl
cmp
ficoml
shlb
jnp
jo
jbe
cmp
cmp
dec
inc
and
jae
outsb
loopne
mov
nop
mov
pop
daa
scas
push
ja
iret
jp
stos
insl
fdivs
repnz
pop
sbb
in
into
outsl
jmp
movaps
int
aaa
test
xor
rclb
cwtl
loope
cld
push
add
sub
sbb
out
repz
ds
inc
mov
xchg
dec
test
sti
jae
fwait
repz
or
and
sbb
mov
or
addr16
jle
cs
mov
imul
call
outsb
mov
and
daa
and
out
iret
add
inc
dec
test
out
int3
mov
xchg
ss
xchg
addr16
inc
hlt
ljmp
in
adc
lea
int
pop
aaa
inc
sbb
adc
fdivrs
or
fwait
sahf
clc
xchg
outsl
rcr
les
xchg
popa
dec
ret
out
dec
push
scas
mov
and
fucomip
in
loop
cmpsl
fstps
jns
xor
test
adc
cli
sarl
sub
mov
das
sub
movb
jecxz
stos
sbb
arpl
cs
outsb
add
enter
xchg
int
fisubrl
adc
lock
xorb
fdivrl
xchg
cmp
inc
dec
enter
push
mov
fmuls
xchg
or
jmp
bound
cld
sbb
cltd
lret
cltd
mov
roll
push
nop
xchg
mov
aad
std
mov
lahf
push
xchg
sti
ret
btr
push
fstl
es
rcr
add
push
ljmp
pop
out
jg
les
stc
inc
scas
ds
enter
or
stos
ds
addr16
jecxz
popf
sbb
dec
xchg
or
jno
mov
sbb
iret
ja
xor
daa
movb
ja
scas
adc
jecxz
jno
in
call
imul
pop
or
lret
xor
pop
mov
sub
call
xchg
in
jmp
ja
inc
push
pop
cwtl
addr16
mov
jg
mov
jle
test
jo
push
sbb
sbb
mov
jecxz
sbb
es
lods
popa
test
imul
jge
bound
mov
in
pop
cmpsl
cld
add
adc
lret
xchg
scas
scas
push
mov
or
mov
cmc
cmp
add
cmovno
and
jns
in
xchg
push
xlat
incl
in
adcl
mov
sub
lds
cmp
push
xchg
inc
mov
testb
mov
or
xchg
xor
lock
orb
pop
or
xor
stc
lahf
test
inc
mov
dec
out
push
mov
xor
mov
iret
jne
pop
inc
ja
adc
jmp
mov
out
roll
inc
enter
es
aaa
or
int
fdivrl
xchg
movsb
cmp
fiadds
in
call
xor
xor
rolb
jno
es
mov
in
jnp
loop
jae
mov
xlat
pop
and
mov
mov
jo
jmp
adc
and
roll
sahf
cmp
in
ljmp
adc
lds
add
iret
mov
inc
mov
divb
xor
jle
jno
or
outsl
test
xchg
xor
daa
mov
push
aas
movsb
rorb
xor
mov
fs
call
jmp
xchg
push
pop
stos
fwait
std
xor
ficoms
js
and
subb
adc
cwtl
es
dec
sub
adc
adc
and
mov
or
xchg
fmulp
fistl
xchg
add
mov
dec
xor
in
dec
jb
cmpsb
adc
push
sub
ljmp
dec
cmp
or
lcall
mov
add
daa
xor
and
add
pop
icebp
ja
xchg
fisubl
ljmp
repnz
push
sbb
mov
pop
jp
and
outsb
add
pop
idivl
repz
xor
mov
pop
xor
js
iret
fsubr
into
imul
test
jae
xchg
or
pop
push
xchg
into
test
jge
lret
mov
mov
cmp
int3
push
or
fcoms
and
pop
cmpsl
subb
repnz
icebp
ficoms
adc
jno
push
shrl
pushf
adc
mov
rcl
idivl
push
push
lea
into
out
hlt
addr16
mov
xchg
or
xchg
and
popa
lahf
iret
daa
mov
aam
pushf
fwait
cwtl
insb
testl
ss
clc
mov
push
imul
roll
fwait
xor
add
out
andl
pusha
ds
popf
fidivrl
enter
jnp
inc
xchg
data16
mov
movaps
sbb
inc
xchg
sbb
int
xchg
in
cmpsl
lahf
addps
arpl
subb
adcl
push
cld
or
xchg
sub
test
mov
ljmp
popf
insb
mov
push
mov
int
pop
sub
mov
adc
mov
fdivrs
xlat
out
test
mov
inc
xor
add
jg
add
mov
popf
ss
and
cmp
insb
pop
cmpsl
add
jns
and
into
dec
push
xchg
push
xor
mov
mov
jmp
xor
repz
sbbl
xchg
aam
fs
call
sub
cmp
cmp
fmulp
lods
std
leave
popa
mov
movsl
testl
sub
loopne
cs
stc
lahf
xchg
sub
lock
push
ret
push
out
out
fnstcw
sub
sub
inc
aam
aas
sbb
or
test
add
xor
das
jg
mov
aam
or
adc
outsl
test
pop
sub
cs
mov
gs
call
popf
mov
subb
in
adc
movb
mov
test
lods
cmp
cmp
jmp
lods
repnz
jnp
jbe
cmp
insb
std
pop
fwait
insb
inc
popf
pop
fcmovu
icebp
insl
test
cmpl
lahf
fisubl
lea
sbb
sbb
push
mov
nop
sbb
or
ss
xor
jl
mov
push
mov
ret
ljmp
pop
lds
stos
jae
rcll
fwait
mov
out
int
inc
adc
mov
sub
js
mov
lock
mov
mov
lret
mov
cmpb
rol
jmp
jecxz
pusha
lods
sub
xchg
sbb
lret
adc
ss
xor
inc
call
mov
jp
shlb
inc
stos
or
and
push
fstpt
jns
js
lods
fyl2xp1
sarl
inc
hlt
jns
mov
repz
xchg
sbb
lret
sub
aas
fsubrs
cmpsl
test
and
sti
mov
lret
mov
or
lahf
mov
xor
push
pop
cltd
xchg
cmp
lods
jecxz
clc
inc
test
mov
mov
jbe
push
xchg
dec
mov
dec
test
add
inc
sahf
mov
xchg
cmpsb
push
xor
adc
pop
sahf
inc
adc
push
jae
int
enter
fidivs
outsl
or
mov
adc
in
clc
mov
bsr
pushf
cmp
cwtl
inc
outsl
pop
mov
mov
int
xor
adc
mov
loop
xchg
lret
mov
jb
adc
cmp
mov
test
xchg
js
test
in
arpl
add
in
fs
cltd
shrb
mov
mov
pop
test
outsl
clc
repz
inc
inc
and
xchg
pushf
jnp
pop
xchg
push
fcoms
fwait
and
lods
daa
sub
ret
rorl
pop
cmp
pushf
aaa
dec
cmp
dec
xchg
push
stc
cltd
jns
pop
and
lret
sbb
call
cli
das
cltd
bound
lods
mov
in
scas
lods
dec
sbb
lret
sarb
add
mov
ljmp
arpl
ja
lcall
jnp
ds
xchg
movsl
lea
je
push
movsb
xor
adc
mov
mov
or
pop
cmp
mov
ljmp
mov
outsl
mov
leave
mov
gs
dec
mov
js
addl
scas
and
mov
cmc
jecxz
cs
leave
inc
push
jb
dec
insl
xchg
lahf
cld
adc
or
mov
dec
pushf
lret
cmpb
jo
mov
movsb
pop
dec
out
ficoms
inc
loope
test
test
push
push
cmp
jge
mov
jnp
mov
cmp
kmovw
mov
xchg
jle
mov
inc
enter
cwtl
fldcw
test
or
mov
repnz
and
insb
xchg
fwait
out
mov
cmp
add
mov
push
add
inc
mov
cbtw
ret
pushf
cmc
mov
out
notl
mov
cmc
repnz
jno
cmp
adc
movb
cmpsl
popf
adc
or
outsl
push
dec
pop
std
xorb
ds
imul
movsb
xor
movsl
hlt
or
lret
jle
ss
push
hlt
test
jb
arpl
inc
cmp
loop
pop
add
mov
pop
pop
dec
push
jge
mov
es
jbe
dec
dec
ljmp
cmpb
bound
xor
dec
mov
ss
stos
jo
mov
repnz
neg
pop
lret
jnp
xchg
dec
sub
mov
cmpb
cmp
xchg
push
fs
mov
sub
mov
pop
lea
test
inc
sbb
and
pop
cmc
pushf
xor
cmp
add
jp
push
jno
xor
aad
mov
add
iret
cmp
jle
clc
or
lds
cli
cmpsb
mov
icebp
ja
outsb
je
sbbl
pop
aad
arpl
jecxz
sub
inc
cmc
jno
jbe
push
adcl
adc
xor
rcrb
cltd
jmp
sarb
mov
pop
aad
jecxz
and
cltd
sbb
repz
cmp
xchg
adc
cmpb
mov
es
pop
je
xchg
jb
add
sub
test
insb
lods
enter
leave
lods
push
mov
js
cld
data16
jns
mov
into
sub
aaa
jne
inc
cmp
inc
fistpl
les
mov
mov
enter
fdivrs
mov
jecxz
dec
jge
in
data16
hlt
sbb
adcb
notb
cs
cmpsl
add
or
shrl
into
fadds
sub
push
cmc
or
cli
xor
jb
pop
mov
mov
xchg
aas
inc
mov
andb
xor
aam
inc
lcall
cmp
inc
dec
test
pop
mov
ss
cmpsl
mov
push
pop
push
push
adc
cwtl
mov
cli
cmp
lods
xor
cs
mov
jbe
mov
cmp
xchg
aam
fdivr
fdivs
out
jnp
imul
cmpsb
adc
or
ss
sbb
hlt
and
ss
sbb
cmpsb
pop
jne
jmp
inc
aaa
mov
mov
adc
sub
cwtl
and
pop
aas
cmp
and
pusha
xor
cltd
mov
out
aam
cltd
sbb
add
push
pop
imul
mov
cmp
incl
dec
ljmp
addr16
mov
push
aad
push
repz
pop
dec
push
jge
sub
mov
dec
cmp
sbb
push
sbbl
popf
add
mov
push
in
imul
fisubrs
pop
clc
jl
inc
dec
out
icebp
movsl
and
shll
cli
cld
mov
push
mov
pop
add
rcl
rol
and
sub
fsubrp
scas
push
push
pop
and
in
xor
leave
jo
dec
lods
jnp
fincstp
ds
cli
ja
stc
arpl
xchg
ja
bound
pop
in
mov
add
pop
nop
aam
lret
fisubs
shr
push
mov
icebp
mov
bndstx
mov
xchg
inc
call
pusha
jbe
sub
mov
das
call
out
pop
adc
jmp
inc
lods
and
dec
pop
jle
add
mov
repz
test
push
sbb
mov
jle
inc
add
push
stc
xchg
sti
sbb
ja
mov
cltd
ret
xchg
int3
mov
sub
sarb
aaa
cwtl
add
ss
clc
test
cmp
fdivs
add
adc
jle
imul
cli
jns
out
daa
xchg
mov
push
push
or
incl
xor
jp
hlt
shll
lahf
and
adcl
inc
outsl
out
inc
push
popa
push
pusha
pop
sub
ss
mov
sub
icebp
pop
cwtl
pop
sbb
jp
repnz
sbb
shll
sbb
dec
add
mov
fldt
movb
pop
jbe
cmp
test
pushf
and
inc
int
out
daa
jecxz
inc
pop
jbe
xchg
in
jmp
sub
mov
mov
js
jp
les
je
cld
or
jne
cmp
push
popf
dec
push
inc
leave
mov
mov
mov
jl
jbe
rcl
push
pop
push
jb
icebp
sub
xchg
int3
and
lahf
scas
or
adc
cld
jno
jae
or
xchg
fdivrp
mov
scas
insb
and
dec
lds
xor
inc
push
sbb
data16
xor
add
cli
pushf
out
pop
mov
mov
insb
test
ret
test
loope
ljmp
push
inc
push
push
mov
std
mov
mov
push
enter
lods
mov
je
or
shrl
out
push
inc
stos
lock
mov
int3
imul
dec
push
dec
hlt
in
ret
into
pop
sbb
setg
arpl
clc
clc
jno
lcall
jns
fucomp
mov
or
pop
xor
sub
fcomip
lret
outsb
adc
loopne
ss
or
movsb
lret
fstps
sub
std
sbb
pop
dec
mov
sub
jp
pop
hlt
xor
pop
jae
clc
shlb
or
inc
push
fwait
mov
xor
mov
ss
out
lret
imul
fidivs
xchg
daa
mov
insb
leave
sub
movsb
mov
adc
mov
pop
stc
cmp
jns
pop
sbb
jecxz
test
pop
je
fimuls
push
xchg
test
cmpsl
fldl2e
push
enterw
jmp
dec
scas
push
into
cmp
loopne
dec
nop
addb
mov
dec
sar
scas
aad
fiaddl
enter
loopne
and
mov
cmp
iret
shlb
sub
mov
mov
adc
fmull
das
xchg
ja
mov
int
nop
insb
jbe
lock
in
out
adc
mov
pop
es
nop
xor
es
or
jecxz
push
mov
testl
mov
jl
mov
popf
or
mov
cmp
or
and
je
dec
mov
mov
cmpsl
icebp
adc
mov
xor
outsl
jnp
insl
adc
mov
xchg
add
dec
mov
sbb
sbb
jne
xor
mov
imul
movsb
mov
rcl
dec
nop
test
pop
in
mov
cmpsb
or
scas
lods
push
fidivrs
and
mov
je
pushf
mov
daa
push
std
fildl
outsl
out
inc
and
test
stc
inc
mov
xchg
test
in
xlat
stos
and
xchg
pop
xchg
aaa
adc
test
push
gs
inc
mov
in
movb
scas
pop
rorb
add
sbb
lret
and
dec
cmp
loop
nop
cmpsb
sbb
mov
xor
dec
cld
cmp
jge
sub
out
push
jge
les
push
sbb
mov
sti
push
push
mov
xchg
loop
push
andb
or
dec
orl
bound
call
lret
and
lods
pop
add
movsl
lds
or
cwtl
pop
cs
sbb
fsubs
outsb
inc
out
aas
scas
out
cltd
cmpsb
xor
les
mov
xchg
xchg
xor
data16
outsl
mov
fimull
sub
sbb
adc
dec
mov
or
icebp
pop
mov
insl
mov
in
xlat
xchg
push
adc
movsl
inc
push
sub
sbb
mov
xchg
int
pop
loopne
mov
dec
rcll
push
push
lods
jae
mov
cmp
push
xchg
jle
or
pop
pop
pop
aad
and
inc
jno
bound
cmp
jmp
dec
lea
push
mov
pop
scas
ret
and
jne
stos
jmp
pop
cltd
insb
loop
mov
cmpsl
push
pop
mov
fldenv
and
sub
mov
lahf
pop
add
scas
mov
adc
insb
jle
daa
push
mov
hlt
adc
cltd
dec
mov
dec
test
xor
jbe
stos
fimuls
jge
push
cwtl
adcl
cmpsb
sub
pop
test
ljmp
lret
mov
and
popa
add
and
jbe
arpl
fnstcw
rolb
scas
les
cmp
arpl
arpl
jb
loope
or
cmc
jne
and
jg
test
fwait
sub
jmp
jg
fdivrl
std
sahf
sarl
pop
mov
push
xchg
hlt
mov
pushf
call
addl
sbb
fidivl
test
adc
push
xlat
mov
sub
in
call
xchg
int
or
mov
mov
in
fs
pop
push
xor
in
jo
inc
or
mov
ljmp
mov
dec
in
mov
mov
repz
les
stc
jge
mov
push
pusha
lret
inc
pop
pop
cmp
add
or
mov
jmp
mov
daa
cmp
inc
addr16
or
sbb
rep
jecxz
mov
push
repz
fiaddl
das
fstpt
xchg
xchg
subl
ret
test
sub
lods
loopne
test
fidivrs
and
hlt
loope
bound
adc
rolb
inc
mov
scas
into
sbb
mov
rclb
lds
fnsave
push
es
lds
jnp
std
rcrl
pushf
out
pop
fcoms
test
cli
push
call
roll
push
aaa
rcrl
jp
push
mov
out
rcr
cmp
sbb
sbb
jns
and
das
pushf
mov
mov
xor
js
jmp
rol
outsl
cmp
out
mov
fs
mov
ret
enter
mov
adc
mov
dec
jecxz
bswap
cmp
mov
jle
repz
cmp
bound
test
stos
lock
lods
xor
fimull
cmp
push
dec
in
xor
mov
in
mov
push
ret
popa
mov
cmp
mov
xor
ret
lods
xchg
aad
xor
insb
sub
sahf
xor
xchg
lret
xchg
ds
fldpi
and
xchg
test
fs
sti
ret
cltd
fildll
jmp
xchg
xor
int3
in
repnz
hlt
mov
bound
pusha
fildl
inc
cmp
and
or
mov
icebp
jp
into
sub
mov
es
or
adc
pusha
sbb
pop
pop
aad
scas
bound
rcrl
sbb
dec
xchg
xchg
cmc
adc
mov
mov
andb
xor
ret
hlt
rorl
pop
test
cmp
pop
loope
pushf
sub
dec
xchg
decl
xchg
test
xor
pop
sub
add
clc
in
push
inc
mov
pop
icebp
pop
enter
jns
test
xchg
stos
ja
mov
sahf
add
popf
pop
repnz
lods
sbb
clc
decl
inc
xchg
dec
rorb
mov
dec
dec
pop
sub
cmp
repnz
xchg
addl
outsb
mov
dec
mov
call
hlt
sahf
pusha
int3
mov
cmp
dec
lock
jns
jg
and
sbb
mov
mov
stc
push
cltd
xor
imul
adc
into
fptan
cmpsb
shlb
jmp
or
mov
int3
imul
in
adc
jnp
pushl
cmpsl
and
dec
cwtl
xchg
shrl
loope
loop
test
addr16
cld
cmp
mov
adc
push
jmp
in
hlt
loopne
outsl
inc
sub
xchg
cmpsb
sub
dec
jle
cmpsl
jle
cltd
and
je
or
dec
jmp
dec
shll
xor
addr16
mov
mull
sbbl
mov
in
ss
ds
push
xor
pushf
jecxz
sub
cmp
test
mov
jp
lret
push
fsubrp
cmp
pusha
inc
dec
loope
push
and
sbb
test
xchg
dec
jno
out
jl
outsl
shlb
mov
je
mov
int
sub
movsl
sti
jo
xchg
cmp
sub
fcomip
jbe
leave
nop
push
mov
dec
imul
push
pop
sub
lods
jle,pn
inc
mov
pop
sub
sti
xchg
iret
mov
test
add
push
sub
pop
enter
mov
data16
mov
pop
out
sbb
sub
xor
pushf
mov
lds
inc
lock
sbb
popf
lret
clc
sub
xor
fs
inc
and
jo
sub
push
and
mov
sbb
nop
or
mov
xchg
aad
sub
xlat
add
fadds
inc
es
mov
jb
pop
mov
je
mov
mov
inc
add
mov
jnp
sbb
xor
pop
dec
stos
shrl
or
shlb
testl
push
not
int
call
jecxz
stos
scas
push
aad
fsub
aam
pop
pushf
clc
cmp
mov
add
adc
xchg
cld
test
jecxz
es
aas
or
add
mov
out
xor
push
mov
adc
mov
inc
out
repnz
dec
rcr
push
into
xor
popf
aad
lcall
in
mov
fwait
pop
xor
std
fisubrs
icebp
xor
xchg
insl
push
pop
iret
sbb
mov
clc
pop
sbb
jmp
rorb
xor
cltd
jb
addb
mov
dec
mov
outsb
ss
incb
es
lock
mov
rol
adc
aam
sarl
scas
and
mov
arpl
dec
mul
xchg
inc
inc
jge
fs
lret
and
sub
sub
mov
xorl
or
lods
mov
cmovge
jbe
cmp
or
add
fsubrl
jp
pop
iret
sbb
cmp
dec
icebp
xor
push
pop
or
test
dec
push
into
aad
icebp
jle
aaa
imul
sbb
or
push
rorb
ret
mov
roll
jo
stc
shrl
jle
mov
fnstcw
sbb
pop
enter
divb
dec
mov
loopne
daa
sub
and
fbld
in
out
cmpsl
lret
fstl
hlt
mov
cmp
mov
out
ds
or
leave
push
adc
mov
scas
pusha
ja
jl
mov
xor
inc
xchg
lds
cmp
ret
pop
stos
mov
sub
in
jp
sbb
pop
push
mov
js
push
icebp
adc
pop
sub
sbb
mov
sti
scas
icebp
bound
mov
jl
mov
aaa
mov
and
xchg
or
cmp
ror
mov
rorb
lret
or
inc
mov
sar
loop
mov
mov
arpl
or
cmc
dec
pop
mov
mov
test
loope
notl
pop
lock
ret
call
mov
cld
jno
cmp
mov
mov
aas
fildll
imul
ja
sti
sub
pushf
mov
add
sub
sahf
sub
stos
mov
pusha
and
fisubrl
data16
sub
cmc
inc
push
test
aad
pop
or
cltd
cmpl
sbb
mov
sbb
sub
insb
leave
fsubrs
cmp
clc
inc
ret
mov
sub
xor
inc
mov
xorb
popa
xchg
jnp
xor
mov
hlt
xor
mov
cmpsl
push
pop
test
cltd
and
xlat
sbb
leave
inc
xchg
and
dec
nop
inc
imul
inc
cli
das
faddp
test
sub
mov
push
add
sub
mov
arpl
add
mov
inc
insb
sub
ja
xchg
push
ja
inc
or
sub
mov
pop
xchg
xor
sbb
or
insb
dec
clc
push
adcb
int3
sarb
cld
call
insb
dec
pop
adc
mov
push
xchg
and
and
mov
pop
mov
rolb
repnz
adc
aas
sbb
movsb
push
push
leave
cmp
testl
mov
dec
jmp
repz
push
mov
nop
mov
les
sbb
shll
or
mov
sub
pop
cmp
dec
aam
outsl
xchg
xlat
inc
movsb
or
mov
sbb
pop
je
xor
addl
inc
aam
add
outsl
or
mov
arpl
dec
mov
pop
mov
mov
cmp
inc
nop
inc
enter
bound
and
mov
int3
push
xor
gs
push
xor
lret
mov
sbb
or
pop
decb
xchg
stos
push
lea
test
cltd
mov
enter
adc
mov
lahf
pop
ljmp
dec
es
leave
loope
mov
bound
clc
icebp
les
test
mov
negb
or
jbe
and
fadd
es
bound
jbe
arpl
mov
fs
ret
adc
dec
push
xlat
addr16
sub
and
xchg
mov
jno
inc
push
push
fldt
clc
orb
or
dec
or
paddd
pop
xor
sbb
out
xchg
imul
cmp
clc
sahf
out
rclb
xor
or
rorb
and
push
scas
dec
inc
mov
mov
jbe
mov
jb
xor
jbe
shrl
pushf
inc
icebp
pop
push
adc
sbb
mov
into
leave
mov
icebp
arpl
or
repnz
lea
mov
inc
inc
inc
dec
push
sub
idivl
dec
add
out
mov
insb
xor
je
ficoms
push
xchg
jl
mov
mov
xchg
xchg
adc
popf
push
scas
rol
jne
ret
mov
in
loopne
cmp
scas
inc
insb
sub
mov
sbb
xor
cld
ljmp
ret
inc
jg
push
pop
jg
andl
test
ficoml
lds
cld
mov
mov
mov
mov
mov
mov
xor
loop
add
adc
jno
adc
push
aas
pop
repnz
mov
jae
pop
fcompl
popa
pop
or
inc
dec
dec
pop
popa
nop
dec
push
dec
hlt
lret
jl
add
or
mov
fdivrl
sahf
shr
xchg
aas
mov
xchg
mov
dec
inc
mov
xchg
fistpl
andb
and
test
mov
mov
pop
pop
inc
sub
out
testb
xchg
cmc
in
je
adc
es
mov
push
addr16
xchg
adc
insb
dec
fyl2xp1
jb
fadd
lock
add
lret
push
lods
or
iret
jge
arpl
inc
cmp
negl
addr16
out
jno
sbb
mov
add
add
frstor
cwtl
jl
jae
adcl
push
in
ror
loope
inc
cwtl
mov
sbb
stos
dec
jb
sub
mulb
int
or
sub
ljmp
sub
xor
xlat
add
mov
inc
mov
mov
jbe
sbb
icebp
addr16
sbbl
pop
mov
xchg
ds
adc
mov
dec
sub
shr
lahf
cmp
mov
fsubs
or
pop
mov
inc
pop
xorb
cmpsl
sub
pusha
sti
es
inc
sarb
pop
repnz
into
ss
fdivrl
mov
enter
jne
fwait
xor
clc
rolb
fs
addb
mov
xor
aad
inc
push
cmp
pushf
inc
pop
roll
xlat
bound
adc
dec
push
daa
push
fisttpll
or
fsts
out
in
inc
lds
dec
inc
push
or
scas
jae
leave
jne
das
add
stc
test
movsl
mov
push
push
cltd
xchg
les
aam
or
in
mov
arpl
or
fnstsw
or
add
xchg
push
fwait
push
test
add
cmp
into
inc
addr16
in
pop
xchg
pop
lock
mov
shrb
lret
xchg
push
jle
jl
out
and
testb
cld
sti
inc
lock
push
jl
adc
scas
mov
ss
add
call
int3
inc
lods
std
icebp
stos
push
push
add
es
inc
jmp
lods
adc
push
ret
push
stos
outsb
mov
add
shr
jl
lock
aam
in
adc
push
dec
nop
xchg
aam
push
int
shlb
sbb
jecxz
mov
add
jbe
sub
mov
mov
cmp
inc
pop
push
aas
fcomps
pop
push
fstps
mov
nop
fsubrl
into
push
jne
fldenv
sub
sahf
test
les
cmp
lds
movsb
lods
std
daa
in
lea
lock
sub
mov
fimuls
out
pushf
pop
pop
jle
jmp
cmp
outsl
shlb
jnp
or
adc
lret
mov
fimull
scas
adc
push
push
sub
and
mul
outsb
sub
dec
out
fdivrs
mov
in
in
notl
xchg
jnp
mov
mov
jne
je
lret
les
adc
jo
jns
dec
dec
adc
mov
adc
loope
test
aad
imul
pop
and
add
mov
or
mov
sub
dec
pop
repz
nop
jp
insb
fildl
sahf
popf
rorb
push
xor
xchg
repz
mov
cmp
cmpsb
jns
aas
sbbl
es
pop
mov
sub
leave
sub
mov
sub
test
and
pop
push
and
gs
lods
pop
jg
scas
fldl
mov
pop
loope
sub
pusha
js
xor
adc
mov
xchg
jb
add
test
or
repnz
push
pop
outsb
daa
into
sbb
mov
cli
stos
pop
lcall
jne
cwtl
std
fs
std
lock
shll
mov
stos
push
aad
les
cmp
aaa
mov
fcoml
scas
dec
add
cmp
dec
cmp
cmpb
inc
cmpsb
sbb
xchg
fistpll
iret
iret
leave
int3
dec
jns
bts
pop
adc
testl
jle
xlat
mov
push
mov
push
scas
std
push
push
or
je
inc
out
out
or
gs
test
mov
repnz
andl
int
and
mov
icebp
xchg
cld
mov
jmp
out
clc
or
flds
sub
shrl
push
sti
xlat
jecxz
xchg
fidivrs
aam
movsb
popf
mov
out
push
in
insb
mov
pop
je
xchg
sarb
pop
lahf
mov
in
adc
lock
std
inc
dec
stc
test
xor
sbb
pop
mov
mov
movsl
pop
shl
jl
dec
std
and
or
sbb
aaa
xor
clc
test
mov
mov
gs
clc
adc
mov
push
mov
lcall
cltd
add
xor
pop
cs
shl
nop
fucomip
xor
jo
bnd
insb
lock
cmpsb
scas
sahf
push
jg
div
pop
pop
lock
push
mov
sbb
jae
xor
sbb
jbe
sub
sub
add
cwtl
lret
jo
add
mov
pusha
pop
enter
dec
mov
dec
dec
inc
push
mov
cmpsb
cmp
js
std
popa
shlb
out
psrld
jno
aas
jmp
mov
cmp
out
xor
outsb
and
push
stos
mov
int
cmp
push
fisttps
out
sbb
pop
fistpll
jb
mov
pop
cmc
push
mov
enter
xchg
inc
lds
sub
nop
mov
mov
sub
push
outsl
push
push
mov
push
dec
xbegin
mov
addl
push
jg
add
or
inc
addr16
xchg
adc
and
or
mov
dec
call
jo
mov
jle
xor
mov
pop
div
sub
popf
scas
dec
or
sbb
outsl
xchg
call
mov
into
fcomp
cmovle
jnp
nop
xchg
sar
data16
push
xor
adc
adc
out
out
aam
jnp
jmp
adc
jecxz
xchg
pop
jno
mov
push
test
adc
ret
rclb
bndldx
or
pop
call
inc
aad
fistpl
clc
mov
test
adc
mov
test
test
lds
test
or
inc
inc
adc
out
inc
or
les
aam
sbb
sub
scas
pusha
or
insl
mov
out
stc
push
mov
cmp
jnp
ljmp
lds
push
adc
cs
lods
addr16
pusha
cmp
aam
in
xor
inc
adc
outsl
rcrl
inc
aaa
mov
test
ret
mov
mov
int3
or
adc
stos
jmp
and
loopne
jl
js
dec
adc
jno
jecxz
fwait
shl
add
adc
sub
xchg
pop
jbe
pop
sub
or
xchg
push
xchg
arpl
mov
xchg
jne
pop
dec
mov
and
clc
add
out
xchg
mov
xchg
and
lods
pop
sahf
outsb
add
popa
ja
pushfw
inc
in
dec
cmp
xchg
cmp
mov
cmp
cmp
push
xchg
mov
or
push
push
jp
push
insb
mov
in
and
or
dec
aaa
int3
add
stos
lcall
mov
cmp
mov
iret
xor
std
or
aaa
cmp
orb
add
add
es
adc
mov
iret
into
test
adc
loop
inc
xchg
rol
cmp
hlt
iret
fcoml
adc
push
fs
into
sbb
and
push
dec
scas
mov
hlt
insl
fbstp
cltd
sbb
pop
push
inc
adc
loope
jo
fsubrl
bound
in
xchg
push
sbb
inc
popa
fsts
push
sbb
lds
popf
fistl
cmp
dec
mov
test
mov
mov
scas
mov
shrl
mov
mov
inc
ss
and
data16
push
jle
xor
lret
and
shl
or
in
inc
faddp
dec
in
pop
cltd
xor
call
and
scas
out
ret
xchg
sbb
pushf
add
dec
cltd
fidivl
notl
shr
cmp
cltd
adc
xor
push
out
add
std
in
sub
xchg
lock
xchg
nop
and
add
movsl
out
mov
ret
test
push
stc
and
jns
mov
rcrb
ja
sub
dec
pushf
loop
xor
ficoms
addr16
cmpsl
push
push
adc
daa
push
cmp
fdivrs
pusha
fdivrl
adc
lock
cld
cli
dec
xchg
icebp
pop
xchg
movsl
mov
cld
daa
stc
jbe
insl
mov
pop
xor
push
sub
inc
adcl
push
test
xlat
loope
and
int3
shll
outsb
das
out
ss
fbld
mov
and
call
mov
xchg
pop
mov
cmp
lds
jle
rcrb
gs
dec
add
xor
jne
or
push
and
add
enter
popf
jo
daa
std
aad
jb
xor
ljmp
or
mul
add
or
fldcw
pop
jmp
movsb
clc
push
xlat
inc
test
sub
jmp
push
sti
arpl
lods
popa
bt
mov
loopne
fnsave
mov
mov
pushf
jnp
sbb
xchg
bound
popf
mov
sbb
ret
test
imulb
add
roll
jne
lcall
mov
insb
inc
dec
cmp
jge
mov
pop
pop
sbb
cwtl
pop
scas
pusha
ret
daa
pop
mov
add
lds
and
sub
js
cmp
mov
xchg
loopne
sar
movlps
pushf
jle
sub
mov
fistps
add
cwtl
pop
addr16
out
adc
and
fwait
mov
in
adc
jne
xor
adc
cld
cwtl
in
loop
and
mov
into
jb
out
dec
shlb
cld
xchg
lock
xor
add
iret
adc
les
push
jg
push
or
sub
sbb
addr16
lds
push
push
pop
addr16
xchg
sub
mov
add
loope
mov
sub
jnp
mov
ficoml
test
sbb
pop
test
sti
sub
icebp
adc
ja
jno
sbb
cli
popa
pop
or
fildl
fmuls
or
jns
loopne
insl
pop
add
cmpsl
jl
inc
inc
repz
xchg
xlat
gs
pop
fnstcw
xchg
mov
xor
in
fidivrs
aam
sub
sub
pop
repz
loopne
pusha
mov
xchg
adc
mov
push
fpatan
stc
fidivrl
push
es
sbb
das
sbb
fimull
xor
clc
mov
cmp
mov
shrl
xor
jp
mov
pop
divl
or
in
or
mov
xor
mov
leave
or
sbb
or
cmp
inc
outsl
in
into
mov
adc
jg
sbb
dec
mov
cmp
pop
das
fcmovnu
test
ror
xor
test
mov
adc
mov
das
rcrb
loope
cwtl
int3
mov
mov
dec
imul
sub
mulb
mov
out
push
mov
std
imul
fcoml
cs
lea
shr
int
enter
mov
or
sti
scas
scas
push
xchg
outsl
into
mov
ficoml
shrl
xlat
test
sbb
mov
adc
lahf
pop
sbb
cmp
cmp
in
test
dec
aas
ljmp
mov
stos
rcll
mov
add
xor
into
xor
fidivl
dec
jle
in
jle
ret
pop
mov
dec
cmpsl
sbb
inc
push
inc
add
xchg
jle
call
mov
xor
xchg
push
push
dec
add
xor
mov
call
and
int3
dec
add
push
cmpsl
mov
sti
push
stc
and
adc
mov
sbb
aad
scas
jo
pushf
mov
pop
cmp
mov
cmp
test
jecxz
mov
outsb
lret
repz
pusha
or
push
addr16
ja
xor
xor
stos
and
xor
pop
loope
fcomp
scas
data16
out
fs
sbb
test
sub
xchg
daa
lds
push
jge
push
loopne
jo
sbbl
dec
mov
dec
mov
test
jge
sbb
and
out
lock
lret
mov
cmpsl
outsl
and
mov
insb
lret
sbb
dec
push
dec
mov
jo
mov
mov
xchg
jno
push
int3
push
aam
aad
pop
andb
mov
mov
and
clc
cld
or
out
add
push
in
jecxz
outsl
js
push
add
mov
mov
jnp
cmp
sub
inc
or
cmc
push
dec
fiaddl
and
stc
pop
or
lcall
shll
ljmp
aas
fcomps
out
loope
jno
inc
or
lds
clc
loopne
push
cmpsl
inc
xchg
inc
sbb
sar
xor
iret
fstpt
stos
mov
sub
ja
loop
push
into
mov
push
and
enter
mov
and
test
xchg
dec
add
aaa
cmp
sbbb
jnp
and
test
jmp
test
ljmp
dec
or
lahf
stos
outsl
inc
and
dec
add
or
add
dec
dec
bound
inc
es
repz
popa
ja
jp
jle
mov
cwtl
fnstsw
xlat
loopne
mov
into
sub
test
mov
sub
or
inc
mov
pop
pop
mov
or
cs
in
xchg
or
cmp
hlt
daa
mov
sub
mov
mov
hlt
push
mov
inc
inc
icebp
rcrb
cs
fwait
mov
xor
std
gs
fiaddl
sbb
dec
push
inc
sahf
xchg
xor
jno
addr16
sub
and
mov
dec
jae
and
mov
or
roll
push
adc
sbb
mov
sti
mov
add
jecxz
jg
and
and
add
push
xor
and
mov
xchg
les
inc
push
fidivs
es
jl
popf
xchg
cwtl
jbe
out
lock
xor
pop
lods
pop
cmp
mov
in
pop
inc
jle
arpl
jbe
jnp
frstor
xor
repnz
jecxz
adc
shrb
jne
cmp
imul
push
js
push
int
js
das
push
leave
cmc
fistpl
nop
xchg
mov
sarl
arpl
dec
adc
cmp
subl
jnp
lret
jbe
cwtl
sarl
cmp
pop
jp
clc
ja
jae
fs
xchg
pushf
hlt
xchg
push
pushf
rcll
mov
sub
inc
andl
xchg
pop
xor
sbb
js
xchg
pop
push
aad
mov
and
dec
sbb
mov
jle
push
stc
cmc
cmp
sbb
push
adc
sub
pop
inc
sbb
subl
mov
adc
adc
fldt
sub
dec
xchg
mov
scas
add
xor
or
rorb
and
and
popf
sbb
sbb
xchg
xchg
inc
repnz
sbb
push
sub
shl
dec
cmp
stos
or
push
mov
and
mov
ja
nop
push
pop
popf
cld
sbbb
dec
jecxz
inc
lret
into
insl
xchg
int3
mov
xchg
xchg
cmp
cmp
sub
leave
in
xchg
cmpsb
mov
dec
mov
xchg
jecxz
fdivl
daa
out
cmpsl
jnp
jne
ss
int
jmp
cmp
sub
cmp
dec
in
lret
fcoms
push
iret
icebp
pop
ja
fdivrs
ds
arpl
lcall
loope
xor
sbb
ret
inc
inc
cmp
setp
idivl
adcb
xchg
shlb
lret
sahf
mov
cmc
enter
aad
cmp
negb
loopne
pop
shl
test
mov
mov
std
testb
sahf
fidivl
sub
into
ficompl
mov
int
xchg
cmp
mov
fs
pushf
sub
cltd
aaa
sbb
test
test
xor
ja
lock
cs
xor
add
mov
pop
push
jno
cmpsl
xchg
daa
inc
sti
daa
clc
lret
and
sbb
ja
add
out
sahf
jne
pop
scas
mov
dec
test
mov
pop
sbb
daa
jnp
add
enter
scas
push
xchg
or
and
lcall
leave
imul
mov
out
cmpsb
inc
fldcw
mov
hlt
push
daa
add
xor
sarl
sbb
lods
pop
mov
outsb
insb
fstpt
ja
movb
xchg
aaa
cwtl
and
xor
cmpsl
jns
or
imul
pusha
jg
in
enter
ljmp
sub
rcpps
xor
es
or
popf
push
and
loopne
int
mov
pop
mov
mov
pop
faddl
outsl
insl
femms
lock
clc
push
inc
loope
mov
add
out
push
dec
lods
jle
cmp
push
or
mov
fcmovb
jns
out
ret
ljmp
sti
add
adc
shr
fcompl
jle
scas
push
pop
or
cli
shll
dec
cmc
mov
jmp
mov
dec
sbb
enter
aam
in
and
jmp
jp
dec
mov
sahf
loop
scas
add
ljmp
push
mov
pop
xchg
testl
sti
out
gs
push
loopne
push
mov
movsb
dec
mov
decl
jae
push
mov
mov
mov
and
lods
aad
jecxz
sub
mov
mov
lcall
push
adc
push
mov
mov
je
inc
lea
inc
xor
mov
mov
mov
or
mov
cld
xor
jge
xchg
mov
mov
iret
fistpll
adcb
mov
push
paddsw
loop
bound
sub
mov
int3
dec
mov
andb
cmpsb
imul
fwait
pop
jge
add
and
and
stc
aad
repz
mov
mov
and
imul
cmp
sub
stos
sbbb
jno
arpl
es
cmp
cltd
push
shrl
stc
pop
je
stc
pop
in
push
sbb
sub
dec
xor
daa
mov
loopne
enter
mov
fsubl
or
aad
jecxz
sbb
test
nop
dec
xchg
jp
jb
ret
mov
xor
out
push
sahf
dec
out
arpl
inc
push
inc
sti
out
stc
xchg
fmuls
jno
call
adc
mov
pop
lcall
mov
push
leave
addb
hlt
repnz
xchg
out
jp
push
push
stos
int
mov
lds
push
xlat
stos
aas
je
repz
jge
mov
cmp
in
cmpsl
add
xchg
mov
jne
loopne
adc
mov
mov
or
jae
mov
xor
add
xor
pop
fnstsw
mov
aaa
push
sbb
pop
sbb
cmc
aas
jns
pushfw
inc
in
push
cs
nop
inc
outsl
cli
test
ret
cs
shll
loopne
and
inc
int3
dec
ficoms
decl
scas
lods
push
adc
push
sbbl
rolb
pop
dec
pop
inc
xchg
subb
mov
cwtl
vpsubsw
mov
jmp
sbb
stos
sbb
imul
push
xor
ja
arpl
sbb
sahf
and
fwait
jmp
in
mov
dec
jg
mov
dec
or
data16
xor
push
rorb
mov
mov
fcompl
divb
shlb
inc
insl
jl
in
out
push
push
out
push
jae
mov
pop
jge
inc
cld
lret
fucomi
pop
push
int
sbb
jp
and
addr16
dec
aam
inc
and
out
xchg
mov
mov
int3
lret
out
and
mov
xor
into
in
jp
aas
jmp
cli
test
sbb
fistpll
mov
mov
stos
imull
nop
push
aam
dec
xor
and
xor
mov
jae
lret
dec
cli
out
decb
popa
push
stc
lret
jp
fadd
mov
sbb
inc
mov
lods
jp
lods
adc
outsl
pop
bound
mov
mov
jge
pop
mov
mov
mov
add
xor
mov
pop
lods
pushf
movsl
add
dec
addl
jge
fisubl
cwtl
mov
mov
fisubl
leave
cmp
fwait
sahf
push
loope
pop
icebp
xchg
mov
xor
xchg
call
lods
sbb
mov
lahf
push
ss
subb
cmp
cmp
fwait
adc
iret
sahf
xorl
push
fldenv
inc
xchg
jecxz
and
and
xor
and
inc
and
andb
jmp
or
inc
pop
add
rol
xchg
cmp
mov
xchg
adc
popa
mov
mov
push
inc
cmc
imul
dec
int3
call
adc
rorb
inc
sub
push
clc
outsb
stos
cmp
es
fsts
movsl
or
popa
mov
xlat
push
aad
sub
or
clc
ljmp
cwtl
mov
mov
or
ret
or
lret
add
pop
jae
ss
into
sub
pusha
scas
jo
pop
jle
les
mov
aaa
sbb
jns
mov
jmp
push
sahf
rcrl
adc
popf
jo
ffree
or
inc
adc
or
push
shl
sbb
or
mov
or
pop
and
jo
test
xchg
or
notb
jl,pn
inc
mov
xchg
negb
dec
test
out
or
cwtl
movsb
fiadds
fcmove
pusha
sub
xchg
mull
dec
fidivrl
movsl
imul
xor
and
outsb
mov
and
imul
es
decl
in
xor
cwtl
jbe
lret
jecxz
or
add
pop
pop
mov
dec
mov
mov
mulb
inc
cwtl
ja
aaa
fsubp
clc
sub
inc
cmc
loope
subl
in
cmpsl
xchg
lahf
cmp
xor
pop
cmpsb
sub
mov
flds
xlat
xor
sbb
arpl
xchg
inc
xorl
cmp
imul
fadd
add
ljmp
test
mov
cmpsb
sub
or
pop
pop
mov
idiv
mov
cs
and
sbbl
sub
fsub
and
in
mov
in
mov
xchg
cmc
jno
andb
pop
pop
jle
subl
sti
rcll
jp
sub
mov
and
out
sub
mov
mov
xchg
mov
xchg
loop
sbb
out
or
or
inc
clc
jbe
shl
mov
mov
pop
dec
rorb
adc
xchg
pop
inc
mov
and
cs
loope
lea
enter
lock
test
inc
xor
scas
or
inc
xchg
lret
out
cmpsb
sar
inc
int
es
rcll
gs
xor
push
cmp
cs
in
cs
sbb
inc
test
cmp
inc
sub
sahf
pop
mov
xchg
cmc
or
jg
ret
xchg
dec
ficompl
dec
cld
mov
push
adc
aam
mov
add
fnstenv
mov
das
xor
cmp
adc
shll
dec
cmp
adc
add
mov
inc
lods
xor
adc
xchg
and
iret
loop
sahf
xchg
shrl
loopne
idivb
and
mov
std
pop
aaa
adc
cmovge
and
outsb
rcll
mov
cmp
inc
loopne
adc
sbb
add
or
cld
jns
ljmp
sbb
cmpsb
popa
xor
out
xlat
xor
mov
pop
ss
inc
lds
mov
jl
cmp
sbb
mov
mov
sahf
frstor
stos
fwait
sub
mov
dec
push
pop
cmp
sbb
sbb
sub
add
push
and
popf
lcall
mov
aaa
mov
mov
mov
push
mov
jmp
adc
xlat
push
sub
insb
mov
pop
cmp
jmp
repz
ss
test
cld
aam
mov
cs
in
scas
sub
mov
lcall
sti
sbb
imul
imul
out
cwtl
dec
insl
mov
inc
test
push
adc
in
mov
inc
mov
jb
ret
xchg
rclb
lret
in
roll
push
add
push
aaa
fistpl
cld
mov
xor
daa
jnp
push
jbe
inc
dec
fstpt
pop
dec
dec
mov
jae
pop
or
les
pop
sub
ljmp
jns
leave
repz
insl
lret
xchg
cmp
stos
and
ljmp
call
add
dec
jb
das
out
push
xorl
push
shr
repz
rcrb
xor
ret
sub
mov
enter
jmp
sbb
dec
imul
adc
int3
or
xchg
dec
inc
inc
pop
gs
out
mov
pop
sti
jnp
xchg
adc
cmpsl
ljmp
sbb
cs
popf
xchg
arpl
inc
dec
cmp
inc
outsb
movsl
fmuls
js
loope
mov
cmp
andb
in
clc
idivb
add
pop
jp
mov
rolb
imul
daa
jbe
sub
add
mov
lea
pop
xchg
sbbb
cmpsb
xor
in
xchg
xchg
jo
shll
int
jbe
int
jmp
loope
dec
cwtl
inc
scas
add
mov
fyl2xp1
js
lret
mov
push
fsubr
sti
ss
mov
jl
sbb
adc
shll
sbb
das
mov
sbb
lods
cmpsl
push
and
movsb
mov
mov
mov
into
jne
mov
hlt
sti
arpl
cltd
xor
adc
jnp
and
xor
out
mov
movl
mov
cmpsl
mov
js
pop
jns
mov
pop
jg
jge
loopne
gs
mov
adc
dec
jo
scas
aaa
cmpsb
jne
xchg
and
mov
mov
pop
xchg
jae
sub
insb
lds
imul
add
jno
jno
mov
dec
test
ja
nop
push
inc
pop
mov
stos
divb
pop
add
shlb
sub
rcrl
daa
pop
mov
lea
cmp
hlt
inc
insl
ja
cmp
popa
ret
cld
les
es
xor
and
jo
in
sub
repz
inc
add
mov
jmp
ja
icebp
pop
fwait
pop
and
imul
push
pop
pop
mov
sbb
outsl
and
and
mov
nop
push
xor
aaa
xor
add
push
cs
aas
and
test
decb
out
insl
pop
ret
enter
mov
imul
dec
std
jno
loope
or
mov
clc
fstl
sti
nop
lret
mov
fldl
dec
daa
push
call
and
push
ja
loopne
sbb
sbb
test
stc
dec
add
addr16
repz
int
repz
or
test
ljmp
movsb
push
sub
lcall
shrb
mov
ficoms
xor
add
popa
inc
sub
enter
adc
inc
inc
sti
jne
inc
and
cli
je
js
jl
push
test
sub
out
imull
bound
inc
ret
sahf
ds
mov
lea
dec
cmp
ja
scas
stc
or
xor
enter
sub
xchg
in
sub
les
add
out
dec
outsb
push
pop
test
inc
lahf
scas
add
hlt
jbe
inc
lcall
dec
ret
fsubrl
sbb
pop
out
pop
push
cmp
push
out
repz
std
fists
cmp
out
dec
or
aam
inc
xor
sub
rcrb
mov
iret
mov
loop
push
je
fists
imul
adc
bound
stc
aas
fcmovu
popa
movsl
sub
dec
pop
cmpsb
cmp
push
adc
cmp
jae
int3
mov
xor
and
fwait
xchg
std
repz
rorb
pop
ret
mov
fidivrs
test
push
dec
mov
in
sbb
sub
imul
adc
in
out
repz
gs
leave
les
pushf
pusha
dec
aad
jno
jnp
call
rclb
inc
das
add
fsubp
js
fwait
push
nop
andl
add
mov
dec
shlb
dec
mov
and
xor
or
fsubrl
mov
test
mov
jns
cmp
mov
out
andb
mov
stos
push
sbb
pop
enter
iret
daa
fs
iret
xchg
and
test
xchg
loope
jge
inc
and
in
xchg
cmp
loopne
dec
and
mov
mov
lock
xchg
cmpsl
shll
jmp
aam
lret
out
adc
inc
sbb
inc
push
sti
lock
pusha
xchg
push
andl
mov
pop
sub
or
jge
ljmp
cli
stos
adc
mov
xor
aad
mov
adc
jmp
push
xchg
dec
rolb
jmp
ja
mov
and
push
xor
iret
push
mov
cmpsl
or
push
ljmp
xlat
movsl
mov
arpl
push
pusha
jne
in
arpl
sub
inc
rcll
aad
shll
jg
sbb
dec
xchg
xor
mov
add
js
sub
pop
sahf
or
in
mov
and
mov
cli
das
aad
jle
push
leave
push
xchg
stos
cmp
inc
xor
popl
and
pushl
and
dec
outsb
lret
int3
inc
and
mov
cmp
cmp
shl
or
cmp
inc
fldenv
repnz
movsb
and
subl
cmpsl
mov
insl
in
das
mov
mov
add
push
sbb
mov
cli
push
mov
add
adc
push
and
jne
sbb
std
or
add
cmp
arpl
ss
mov
xor
test
lcall
fcompl
lret
mov
jmp
mov
fs
jmp
xchg
int3
inc
int
and
lahf
repnz
cmp
cmp
inc
adc
sbb
hlt
pop
data16
adc
and
sub
cmpb
mov
insl
aas
cld
mov
cs
mov
aaa
loopne
icebp
cmp
cltd
ljmp
pop
dec
cmpsb
sbb
mov
cmp
or
cmp
dec
sbb
cli
dec
jmp
adc
xchg
loope
inc
jmp
scas
movsl
enter
in
jmp
xchg
add
dec
xor
arpl
dec
nop
test
sbb
rcrb
and
jecxz
add
imul
or
dec
jno
mov
subl
mov
pop
aam
lea
sbb
or
lods
cs
lret
psubsb
ret
sahf
push
repnz
pop
mov
loope
pushf
rolb
ja
test
sub
mov
out
icebp
push
push
mov
push
outsb
test
cld
shrb
fmuls
call
or
lea
leave
cmp
andl
push
dec
ja
mov
lods
aas
inc
mov
lret
cmp
outsb
mov
fistl
push
fldcw
call
mov
shll
adc
lahf
std
cmpsl
pop
pop
jg
jb
or
lret
cld
jbe
repz
loopne
out
pop
out
dec
inc
repz
mov
mov
add
repnz
in
popf
repz
pop
mov
je
stc
jge
push
dec
xchg
cmp
std
pop
mov
cmc
aad
inc
and
aas
outsb
cltd
jg
dec
xchg
ficomps
mov
sbb
cmpsb
lcall
inc
cmpsl
cmp
push
push
out
in
clc
mov
xor
sbb
scas
sbb
ret
dec
mov
cmc
push
dec
test
pop
jns
sub
jo
mov
loopne
mov
push
into
push
mov
mov
outsl
push
mov
lock
xchg
mov
stos
pusha
adc
aas
push
or
cmp
ja
repz
jno
iret
add
xchg
movsb
lret
dec
ja
and
or
mov
std
inc
fisubs
lcall
sarl
fildll
ja
cmp
mov
sbb
xlat
lds
inc
mov
jg
pop
cmp
adc
mov
sbb
out
loopne
and
mov
pop
cmp
call
clc
push
outsl
sub
fwait
push
cmc
call
data16
dec
or
imul
inc
sub
pop
inc
xchg
mov
mov
mov
insl
or
jo
mov
xor
jnp
mov
inc
xorl
push
dec
push
mov
ficoml
loop
inc
fsts
jmp
mov
mov
pop
sub
fsubl
xor
pop
loop
push
test
pop
sarb
leave
imul
sbb
jbe
arpl
lods
cmp
insb
out
adc
push
and
pop
fdiv
cld
xchg
jle
adc
sti
push
push
pop
or
add
adc
and
mov
sti
sbb
inc
mov
mov
pop
test
fbld
pop
jns
mov
repz
jb
ja
dec
xchg
sub
sarl
fs
push
and
aaa
outsl
jb
arpl
or
or
icebp
insb
or
mov
ficomps
cmp
xchg
push
sbbl
mov
popa
jg
insl
stos
or
cli
test
inc
imul
add
ja
das
push
stc
mov
outsl
cmp
sbb
cmc
add
mov
cmp
sahf
mov
jnp
cmp
sahf
cld
mov
cmp
mov
inc
sub
push
movsb
js
scas
in
dec
sub
xor
hlt
push
mov
dec
ret
dec
in
xchg
stos
popf
mov
outsb
sub
js
xchg
xor
pop
mov
xchg
sbb
fsubrl
pop
xchg
mov
xchg
test
xor
inc
cs
ret
and
mov
aaa
jg
inc
xor
fnstcw
add
mov
test
jp
or
adc
and
mov
sbb
sub
addb
mov
std
push
popf
icebp
sbbl
or
sub
cld
add
in
jg
cmp
cmp
push
inc
adc
pop
mov
arpl
mov
push
je
in
dec
pop
adc
mov
jne
xor
shll
call
ss
dec
and
filds
dec
mov
xchg
add
adc
dec
fdiv
dec
mulb
aaa
adc
repnz
push
jmp
scas
call
repz
and
repnz
ss
jmp
ss
xchg
mov
jmp
addr16
cmp
and
and
nop
xchg
push
fsubl
out
sbb
fwait
pop
mov
or
lock
mov
addr16
fcmovne
addb
mov
js
cli
pop
sbb
add
mov
stos
or
pop
lods
fcompl
mov
pop
xlat
push
mov
pop
insb
jae
jle
popf
jl
pushf
sbb
jg
jle
leave
test
lods
out
cli
pusha
pop
outsl
iret
test
mov
into
add
leave
jmp
inc
dec
cmpsl
adc
out
cmp
cmp
das
mov
jp
stos
sbb
add
sbb
cmpsb
xchg
push
testb
mov
stos
je
xor
mov
push
mov
and
rcrb
inc
push
out
ds
cli
test
cmp
jb
jmp
or
addb
mov
movsl
cmpsl
mov
lock
iret
arpl
jno
pop
call
push
push
ds
lds
mov
or
test
das
push
fsts
pusha
pop
add
fidivrl
lret
mov
mov
fnstenv
cwtl
xchg
push
cmpb
rclb
rol
cmp
push
bound
push
cmp
add
jmp
or
add
inc
lahf
fiaddl
int
das
pop
mov
sbb
scas
icebp
xor
cli
cld
dec
jmp
clc
jle
cmc
test
xlat
add
mov
mov
mov
mov
fbstp
pusha
jns
fimuls
lods
rcll
adc
inc
jbe
repnz
data16
outsb
out
test
mov
mov
ljmp
cmc
or
stos
leave
pop
sub
outsb
out
mov
outsl
cmp
shrb
xor
inc
jae
push
pop
sahf
jno
cmp
stc
add
mov
movsb
rolb
mov
jg
int
mov
dec
imul
xchg
lret
andl
cltd
fs
jbe
add
std
or
inc
cmp
mov
cli
stos
or
out
subb
in
mov
rorl
sbb
add
dec
loopne
in
xchg
push
cli
push
jnp
sbb
int
push
filds
jge
je
push
ret
ss
mov
bound
jns
sbb
ja
xchg
inc
adc
and
adc
pop
add
xchg
popf
adc
mov
pop
movsb
jo
movsl
scas
or
xchg
mov
mov
jno
push
mov
sub
mov
pushf
imul
loopne
or
mov
imul
and
mov
and
xor
and
or
pop
lods
push
jno
pop
fisubs
inc
push
mov
lcall
rorl
inc
xchg
add
and
jg
mov
sub
dec
mov
adc
iret
and
mov
sbbb
hlt
enter
or
mov
roll
lods
mov
das
inc
xchg
sbb
pop
mov
test
adc
enter
add
imul
cmp
add
sahf
negl
dec
mov
fisubl
mov
test
dec
sub
push
notb
sub
push
mov
popf
icebp
mov
mov
adc
push
dec
out
sbb
sbb
sub
lahf
fcmovu
sub
cltd
mov
enter
sbb
cmp
lds
mov
and
iret
int
mov
outsb
das
xlat
dec
and
jno
out
mov
xor
scas
mov
imul
lret
and
stos
ret
mov
in
rcll
out
jne
jne
int
aas
inc
loop
cmc
test
jne
mov
sub
pop
pushf
jmp
jmp
outsb
mov
push
mov
lahf
cli
mov
shl
inc
sbb
sub
shl
sbb
je
pop
push
mov
fcomip
push
pop
push
int
fisubrs
jbe
sarb
inc
stos
pop
inc
leave
ja
arpl
int
test
cmp
sub
mov
mov
pop
and
or
mov
mov
inc
xchg
jge
push
iret
inc
nop
push
mov
inc
shll
xor
sub
jle
data16
push
sbbb
mov
das
ficompl
mov
call
lea
fs
pop
in
movsb
jge
jb
dec
adcb
mov
jp
les
imul
jg
sbbb
pop
out
jo
cmc
mov
stos
out
and
out
pop
icebp
pushf
xor
push
or
ret
jmp
pop
out
push
outsl
or
push
sahf
rorl
in
lahf
sar
mov
lods
lcall
xchg
fbstp
push
xor
jge
je
test
mov
pop
adc
ja
mov
xlat
mov
shrb
and
adc
popa
xchg
pop
mov
stos
inc
andnps
popa
and
push
xchg
test
icebp
lcall
and
in
ret
test
dec
push
mov
dec
pushf
or
movsl
and
inc
mov
add
push
mov
xchg
call
mov
or
enter
cmpsb
icebp
push
or
jmp
fwait
or
aam
js
mov
add
mov
adc
in
adc
aas
push
and
mov
push
mov
cmpsb
adc
cmp
dec
adc
stos
dec
inc
mov
jne
xchg
cmp
scas
xorb
xor
js,pn
call
and
sbb
jmp
xor
mov
cmpsl
repz
or
pop
pop
and
pop
cmp
xchg
neg
scas
test
aad
je
scas
sbb
inc
into
outsl
xor
jnp
out
fldl
xor
lods
mov
xor
and
and
nop
adc
mov
cmc
xchg
and
cwtl
push
cmp
imul
pop
test
lods
sub
mov
inc
sub
jno
mov
push
out
loopne
adc
dec
xchg
imul
push
pop
push
movsb
xchg
stos
lods
pop
sbb
jg
aas
das
lahf
push
push
sub
sbb
sub
aad
aaa
lret
sub
and
mov
dec
mov
sub
jae
dec
sti
jbe
mov
das
cmpl
popf
arpl
dec
repz
fstp
shl
mov
sbb
test
sbb
int
hlt
stos
rcll
add
cltd
mov
roll
fidivl
jmp
or
fcomps
jno
push
sbb
fiaddl
adc
push
pushf
outsb
jbe
sbb
js
test
jno
jo
addr16
call
mov
xchg
mov
insl
mov
mov
cmpsb
ljmp
loope
iret
mov
pushf
add
enter
imul
mov
in
add
ret
push
xlat
aad
shrb
jmp
repnz
loopne
pop
adc
jbe,pt
adc
daa
xlat
dec
push
xor
hlt
imul
iret
leave
fimull
loopne
jns
sbb
fcmovb
mov
movsb
outsl
scas
inc
shrl
movsb
push
add
incl
xchg
negb
pop
iret
cmp
not
daa
fstl
jge
lret
jle
jns
sahf
inc
outsb
hlt
add
arpl
incl
andl
les
std
pop
nop
sub
adc
cmc
adc
mov
icebp
cli
insb
add
jne
cmp
ret
add
mov
sti
bound
sbb
add
sbb
out
cltd
shl
stos
xor
adc
adc
push
inc
es
iret
ja
gs
popa
sub
jae
or
xchg
or
xchg
scas
nop
popf
mov
jo
inc
and
pop
add
and
cmp
dec
push
bound
push
push
push
xchg
dec
in
inc
outsl
loope
cmp
or
scas
cmp
add
sbb
pusha
mov
test
and
push
ret
cmp
xchg
movsb
inc
inc
stos
xchg
shl
sub
add
jmp
daa
lret
xor
cmp
ja
push
dec
mov
fadd
in
ja
insb
gs
cmc
lods
lcall
dec
sub
inc
jecxz
out
adc
jmp
jge
pop
scas
and
scas
mov
xorl
mov
adc
je
mov
mov
insb
lock
or
sub
push
andb
mov
push
out
sti
cld
xchg
mov
mov
movsb
cltd
cmp
outsl
and
je
sbbl
jbe
mov
inc
fisttpl
jl
fs
data16
lret
repnz
flds
mov
xchg
jae
popa
mov
stos
in
mov
xorl
aad
sub
mov
test
adc
inc
fisubl
sbb
push
int3
cmp
adc
or
mov
ret
daa
in
hlt
inc
adc
mov
lahf
outsb
push
jb
mov
rcrl
rolb
ret
cli
and
push
lcall
sbb
popa
jl
mov
fnstenv
or
xchg
jno
jg
cmp
fcoms
test
daa
push
push
cmpsl
cmp
xchg
test
sbb
pop
cld
shll
push
scas
repnz
dec
pop
pop
adc
mov
jae
jl
lret
sbb
lahf
fwait
mov
xchg
pop
push
cltd
movsb
or
iret
test
iret
daa
cmp
mov
jge,pt
insb
add
add
stc
and
lahf
pop
sub
pop
sbb
stc
add
cmp
nop
les
jg
out
pusha
push
mov
jns
jecxz
lahf
cmpsb
xchg
test
dec
shl
sahf
mov
push
nop
mov
sub
pushf
in
cmp
xchg
scas
cmp
nop
sub
push
cmpsb
mov
daa
shrl
sub
pop
jg
inc
repnz
pop
dec
push
dec
pop
pop
shlb
xchg
jnp
cmp
xor
sbb
in
and
aad
jle
cmpsl
das
shll
andl
cmpsb
sbb
pop
cmp
inc
sub
and
inc
pcmpgtd
pop
dec
or
dec
cmp
pop
xor
fisttps
pusha
cmpsb
sbb
lret
pop
mov
mov
es
lds
sahf
and
mov
int3
jg
ret
sub
popf
xchg
or
cmpsb
dec
fcoms
jno
call
dec
cltd
mov
cltd
sub
fistps
ret
std
xchg
clc
xchg
lea
into
add
or
int
lock
pushf
sub
sub
flds
xchg
enter
push
mov
loope
cltd
mov
sbb
imul
pop
out
in
scas
mov
or
ljmp
ror
cli
add
lods
xor
int3
ljmp
or
mov
push
mov
repz
lret
pop
cmp
rcll
ss
loope
push
xchg
lea
cmp
push
lahf
or
cwtl
xor
lret
popf
mov
inc
stos
sub
iret
out
mov
sbb
xchg
movsl
mov
nop
out
mov
es
adc
adc
ret
cld
mov
mov
sub
mov
dec
dec
pop
sarl
and
pop
jmp
rorl
and
xor
jl
pop
sbb
add
fstl
mov
or
jge
dec
aaa
lods
test
cmc
jmp
scas
push
insl
fiadds
push
scas
outsb
rclb
hlt
pop
xchg
rorb
xlat
cmp
sub
js
cmpsb
ds
mov
xchg
fimull
popa
cld
loop
fwait
jp
rcrb
imul
cmp
out
xchg
out
adc
je
daa
mov
leave
addl
add
lret
fiaddl
das
ljmp
jb
incl
lret
fxch
dec
or
test
movsb
mov
adc
adc
and
jb
mov
mov
pop
les
mov
incb
xchg
insl
push
or
int3
dec
xchg
cld
fnstenv
sbb
dec
jo
add
mov
inc
loope
mov
cmp
mov
pop
mov
add
push
lds
sub
int
pop
insl
into
mov
pusha
sub
subb
out
and
iret
sub
mov
xacquire
jge
out
inc
xlat
inc
push
inc
fnstenv
aaa
out
mov
imul
addr16
cli
in
addl
call
fstl
lret
adc
dec
sbb
mov
lds
ja
mov
lret
adc
adc
mov
fistpll
cs
lret
add
mov
fwait
inc
sub
hlt
or
dec
test
ljmp
and
sbb
test
push
repnz
lock
xor
in
cmp
xor
popf
cmp
out
cs
arpl
cmp
addr16
rcrl
adcb
mov
loop
mov
call
aad
gs
xor
mov
mov
jmp
stos
mov
mov
jbe
or
bound
and
stos
inc
jae
add
pop
add
repnz
pop
mov
jl
lods
and
aaa
cmp
and
inc
test
movsb
pop
push
adc
jp
dec
jp
clc
push
mov
sbb
das
in
adc
mov
out
lcall
sbb
cmp
jmp
or
push
adc
in
fldl
ja
stos
jl
daa
call
clc
imul
add
jl
or
flds
test
fisubl
sbb
inc
mov
xchg
lcall
push
sbb
ret
mov
out
mov
roll
jnp
aas
jne
jp
and
xor
ljmp
inc
popa
pop
or
pop
shlb
dec
mov
fs
bound
fs
dec
es
je
inc
cltd
mov
jmp
xchg
push
clc
test
sbb
mov
lret
es
repnz
dec
add
pop
daa
arpl
std
fsubp
fstpt
xor
mov
test
jle
dec
jge
push
ret
lock
ja
xor
std
imul
mov
test
bound
cli
into
lcall
nop
jmp
inc
cwtl
push
mov
sub
pop
or
repnz
cmp
mov
pop
negb
popf
xor
sbb
sub
daa
mov
int
mov
imul
jns
xchg
and
xchg
icebp
mov
bound
repnz
mov
popf
xchg
in
loopne
mov
call
cmp
mov
inc
adcb
pop
mov
xchg
push
pop
lcall
jnp
jns
dec
fmuls
push
push
rol
loope
icebp
rorb
jle
mov
cmpsb
sbb
dec
dec
lock
mov
in
cld
add
dec
out
mov
in
mov
pop
sbb
dec
inc
in
xchg
lds
sub
push
insb
out
xchg
jnp
sub
add
jnp
pop
push
jle
out
or
xchg
mov
stos
inc
dec
pusha
out
inc
mov
push
enter
sbb
push
das
push
push
loope
dec
push
jmp
or
mov
enter
push
mov
push
xchg
dec
imul
jae
jp
xchg
mov
testb
or
cwtl
dec
imul
enter
cmp
ret
push
in
sbb
dec
pop
xchg
xchg
xchg
scas
jnp
sbb
ss
pop
fildll
sbb
pop
scas
push
or
in
lret
ret
fisubs
addr16
cltd
daa
rolb
call
sub
lea
fisubrs
ja
xor
stc
mov
sub
pop
fsubp
sub
scas
outsl
pop
in
mov
stos
inc
push
rclb
mov
inc
sbb
std
adc
movsl
mov
cld
lock
and
jo
pop
or
popf
mov
and
push
jbe
mov
push
mov
or
sbb
cmp
xchg
mov
gs
jo
add
push
jg
sbb
pop
aaa
insl
int
data16
mov
sbb
adc
mov
fwait
sahf
movsl
xchg
pop
dec
sub
xchg
pop
or
xor
and
mov
cmp
div
xchg
jno
aaa
andl
sub
dec
scas
mov
jbe
sbb
mov
push
cmpsl
daa
testl
in
data16
rcll
aad
cmp
xchg
lcall
shl
pop
xchg
imul
ror
and
pop
sub
sub
popf
inc
out
push
into
add
pushf
pop
addr16
push
mov
sbb
and
dec
add
mov
pop
xchg
cmpsl
ficoml
dec
xchg
pop
insl
mov
cmp
pop
lock
or
out
aam
pushl
ret
push
iret
sub
pushf
popf
ss
jp
lock
pusha
mov
ja
movsb
mov
push
inc
out
dec
imulb
out
xchg
pop
sub
jp
pop
aam
in
push
cltd
cltd
adc
repnz
inc
dec
xchg
xlat
imul
clc
sahf
ds
repz
notl
or
in
lock
cmp
out
imul
ljmp
in
jp
enter
jl
xlat
mov
push
dec
mov
enter
mov
sbb
leave
dec
mov
add
jbe,pt
out
mov
je
pop
jbe
pop
mov
cld
rcrl
out
mov
mov
dec
jg
inc
sahf
inc
sar
xlat
pop
pop
pop
pop
in
adc
or
xchg
jns
jl
mov
inc
add
addr16
mov
fildl
mov
in
xchg
nop
mov
sbb
lea
das
dec
adc
repnz
nop
sarb
adc
iret
popa
jns
loop
insl
clc
pop
inc
and
addr16
rclb
cmp
leave
mov
in
pop
nop
dec
push
loope
and
scas
push
pushw
mov
push
mov
inc
mov
dec
cmpsl
mov
jo
iret
scas
in
loopne
and
gs
add
cmc
arpl
cmp
je
xor
nop
cmp
scas
dec
popa
aas
pop
je
ja
les
sbb
xor
aam
sbbl
pushf
mov
push
out
test
outsb
int
imul
and
xor
movb
sub
imul
or
and
bound
pop
dec
repnz
cmc
insl
and
cmpsb
pop
popa
aad
add
inc
or
mov
mov
adc
mov
pop
xor
pop
xlat
add
rcrb
es
lcall
jb
test
push
mov
lcall
pop
pushf
rclb
xchg
test
or
xor
fs
sti
add
dec
mov
dec
inc
xor
pop
mov
pusha
xchg
dec
fstpl
adc
scas
aad
in
xor
sbb
in
cld
pop
inc
cli
fs
inc
stos
lret
arpl
mov
testl
js
add
mov
mov
loope
xchg
push
outsl
loop
push
fwait
xchg
loop
dec
cs
sti
shrb
filds
shlb
pop
call
popf
sub
or
adc
pop
fsubl
scas
or
sub
jp
test
mov
jl
or
add
mov
clc
js
aam
mov
pop
out
pop
lcall
stc
ret
pop
je
iret
push
sbb
dec
or
or
fistpl
xlat
lret
cltd
stos
repz
adc
cmp
mov
repnz
inc
stc
xor
fsubs
jp
jp
or
or
mov
loope
test
lcall
gs
pop
push
call
xchg
pop
sub
and
lock
sub
repnz
xchg
pop
mov
or
sub
cmpsl
jmp
subb
cmpsl
sti
repz
inc
push
xor
or
loopne
shlb
xchg
cld
out
push
pop
mov
jne
pusha
movsb
push
jae
jno
jne
nop
lods
cmp
pop
xchg
outsb
add
out
bound
loop
xor
and
push
and
inc
mov
xchg
pushl
push
adc
sub
cwtl
ss
fcomps
add
gs
and
jbe
cmpsl
fnstsw
popf
sub
inc
xchg
data16
out
pop
and
pushf
jg
sahf
fs
fimuls
icebp
jno
addr16
xchg
jnp
aaa
add
jp
cmp
and
jl
sub
sbb
lahf
sahf
popf
mov
xor
cmp
mov
add
push
inc
dec
fmull
in
lods
xchg
mov
add
dec
movsbl
outsl
jnp
adc
mov
mov
rcrl
es
je
xor
test
xor
cmp
icebp
test
fisubrl
adc
cmpsl
in
mov
sub
pop
dec
cmp
mov
inc
dec
std
cmpsb
jno
fstl
cmpl
push
xchg
out
decb
dec
int
popf
outsb
cmp
mov
push
scas
shl
push
aam
sbb
in
ja
lcall
shll
dec
hlt
outsb
mov
out
sbb
insl
aad
movsl
mov
lret
cld
lods
push
jnp
sbb
xor
mov
cmc
adc
test
add
mov
mov
or
stos
and
dec
out
jecxz
push
xchg
pop
jl
sub
inc
cmp
mov
mov
imul
sbb
leave
add
inc
jg
jne
flds
cli
dec
mov
clc
pop
fildl
rclb
and
scas
sbb
pop
mov
popf
push
jne
mov
pop
pusha
enter
sub
pusha
aas
fistpll
out
ss
xchg
dec
sub
cmp
jb
je
xor
jle
pop
insb
xlat
mov
addb
push
aas
push
lret
fwait
lock
sbb
mov
adc
pop
shll
jmp
sbb
cmc
jns
dec
mov
xchg
stos
mov
dec
or
dec
inc
lock
mov
test
fldt
in
push
call
jp
out
sbb
les
std
imul
lahf
pop
push
push
dec
cmp
or
xchg
dec
xchg
cmp
out
sar
ds
sbb
jno
add
test
rolb
mov
mov
sbb
out
lea
das
and
lock
sbb
jmp
mov
inc
adc
jle
test
and
mov
mov
stos
lods
push
push
mov
and
test
shl
jmp
or
call
aam
sbb
inc
jmp
iret
adc
sbb
js
pushf
pop
lea
imul
insb
cmp
shll
scas
and
js
cmp
mov
add
ffree
scas
sbb
cltd
mov
lds
xchg
inc
or
mov
pop
je
jno
test
cmp
sub
jecxz
mov
mov
sub
sti
mov
scas
lret
mov
jl
and
cltd
jecxz
dec
dec
pop
and
sbb
pop
jns
ja
pop
out
mov
and
test
ret
jl
in
mov
jnp
cmp
jecxz
xchg
dec
std
jg
in
jo
mov
mov
clc
pop
xchg
add
stos
jne
push
ret
or
add
xchg
inc
leave
xor
test
xchg
push
push
les
inc
roll
lret
inc
cmp
lahf
mov
cmp
testb
mov
cmp
js
push
or
dec
repz
add
or
pop
sub
daa
cmp
leave
fcoms
lahf
adc
fistpll
mov
sarl
xchg
lahf
push
jo
lds
cmp
push
dec
mov
inc
fiadds
mov
cmpsb
out
and
xchg
pop
mov
rcrl
fisubrl
mov
fwait
push
ret
sub
pop
fs
aas
sub
jo
jb
je
and
in
fists
in
push
pop
or
lea
int
mov
ret
fdivr
mov
push
mov
cmp
scas
mov
sbb
sbb
sbb
into
xchg
jge
jae
jmp
ja
mov
mov
jecxz
repnz
and
and
test
in
insb
lahf
repz
shlb
cmpb
push
pop
lret
loope
push
cltd
add
les
movsl
xchg
rolb
jmp
or
push
pushf
repz
mov
sub
jno
mov
lcall
cmp
rcrl
mov
sbb
ljmp
int3
aas
or
fcoms
jmp
mov
stos
test
les
adc
movsb
xchg
stc
das
aaa
gs
aad
mov
push
adc
sahf
popf
scas
subb
mov
bound
les
imul
mov
arpl
mov
testb
xlat
cmp
xchg
iret
imul
cs
push
rclb
jge
cld
cmp
dec
or
xchg
iret
push
test
inc
aaa
loope
dec
push
pusha
jne
enter
shrl
inc
enter
xchg
pushf
mov
subl
sub
orb
fdivrs
adc
ficomps
or
jle
aaa
hlt
insl
test
jne
mov
pop
jp
arpl
mov
jl
lcall
scas
out
stos
out
or
jbe
jmp
mov
test
sbb
sub
ds
test
imul
in
in
mov
pop
cmpsl
les
ss
mov
lds
in
pop
mov
stos
enter
add
adc
nop
call
jnp
jbe
cmp
xor
adc
adc
sahf
sbb
adc
adc
aad
xchg
std
pop
rcrb
loop
scas
mov
add
mov
loopne
push
push
clc
xchg
and
sbb
push
mov
xchg
cmpsb
xchg
and
adc
shl
fidivrl
pushf
fisttps
movsb
aas
mov
adcl
xor
lcall
jecxz
inc
push
aaa
xor
fists
test
repnz
and
pop
leave
leave
xchg
pop
push
lret
fists
mov
sub
jae
ret
or
ret
lds
outsl
inc
or
lcall
and
push
xchg
arpl
adc
sbbl
push
ficoml
jns
vcvttsd2si
lret
pop
enter
fimull
add
add
xlat
fsubs
push
gs
stos
aas
dec
icebp
and
inc
addr16
lods
cmp
in
bswap
aam
mov
push
insb
cltd
sbb
add
dec
aaa
sbb
jmp
pop
xor
dec
fcomps
jge
loopne
jg
addr16
push
dec
and
pusha
sub
dec
mov
insl
mov
cmpb
mov
xlat
mov
fmuls
and
outsb
xor
rorb
adc
into
jns
or
xchg
xchg
scas
pop
xor
inc
scas
inc
xor
pop
loop
pop
mov
adc
arpl
inc
aad
out
arpl
mov
popl
xchg
pushf
dec
add
aad
stos
dec
sub
loope
aaa
sub
dec
dec
pop
cmpsl
jmp
lcall
lcall
push
mov
pusha
imul
add
rolb
daa
out
xor
ficoml
jle
add
call
xchg
std
jns
mov
scas
xlat
ret
xor
inc
mov
inc
adc
jg
add
fsubs
rcr
mov
inc
fnstsw
insl
mov
xchg
pop
mov
call
pop
mov
sbb
in
dec
in
mov
mov
cs
imul
int3
cmp
add
out
lret
inc
add
xchg
cltd
je
sub
nop
mov
sarl
into
dec
icebp
add
inc
add
data16
pusha
jae
jmp
xchg
push
inc
lahf
movsl
adc
jbe
sub
dec
cli
in
in
sbb
out
adc
inc
out
pop
xchg
dec
aas
adc
dec
into
mov
and
mov
dec
fistps
xchg
bound
jne
adc
push
lock
add
cwtl
mov
lods
in
sub
jp
push
lahf
lods
pop
in
mov
sbb
out
shll
arpl
loopne
fnstenv
aad
xchg
or
sahf
inc
and
movsb
add
loopne
dec
jmp
daa
mov
sbb
add
mov
outsb
inc
stc
push
inc
push
mov
mov
outsl
inc
ficoml
mov
and
mov
nop
outsl
mov
xchg
aaa
pop
lods
mov
out
adc
add
xchg
sbb
push
lods
mov
fiadds
inc
inc
add
lods
int3
inc
lahf
xchg
fwait
xor
mov
mov
push
call
in
inc
jmp
testb
and
imull
ds
fld
cmp
subl
dec
inc
cs
xchg
movsb
jmp
cmp
add
shlb
or
repnz
mov
mov
ret
dec
mov
aaa
inc
mov
mov
dec
push
add
insl
xchg
fcoms
nop
adc
mov
pop
mov
xchg
outsl
add
insb
call
test
ss
lea
leave
jo
xor
jecxz
add
inc
adc
repz
push
jns
lds
adc
xchg
adc
out
and
mov
aad
cld
jbe
mov
sub
jne
pop
push
xchg
sbb
aas
mov
in
mov
cmpb
loopne
push
faddl
ljmp
push
inc
add
jo
xchg
adc
and
mov
sbbb
fbstp
cmp
pop
loopne,pt
mov
das
mov
jl
lret
lock
imul
outsb
dec
jno
es
aaa
clc
cmp
cmp
aad
fidivs
popf
jae
loopne
ret
rolb
inc
or
lods
xor
pop
in
cmc
les
js
xor
pop
add
mov
cmp
mov
jmp
push
push
xlat
aad
xor
xor
test
cld
jecxz
push
lods
sti
add
jb
sbb
addr16
aas
lds
imul
adc
mov
sub
push
sti
jmp
cmc
cmc
xchg
xor
sbb
ret
pop
inc
xchg
enter
inc
push
out
jmp
push
rclb
ret
daa
leave
push
mov
and
xchg
and
inc
mov
push
mov
test
pop
xchg
mov
adc
enter
mov
aam
cmp
adc
ret
test
bound
or
sahf
repz
mov
in
bound
sarb
sbb
ret
pop
enter
adcl
sbb
into
leave
repz
mov
cmp
sbbl
out
or
cli
cmp
out
xchg
popf
pop
loope
xchg
sbbb
loopne
js
shl
xchg
add
mov
adc
lahf
stos
sub
push
movsl
or
sub
fwait
rcrb
xchg
scas
mov
mov
cmp
mov
jns
test
lods
pop
xchg
mov
subw
adc
lahf
pushf
dec
jl
out
rorb
data16
or
jbe
sub
dec
shrb
loopne
jne
dec
addr16
add
in
cmp
addr16
xchg
insl
cli
mov
fwait
mov
pop
arpl
dec
jg
scas
or
stos
push
add
loop
ja
pop
gs
sub
out
sbb
sti
mov
cmp
push
push
jge
jae
dec
pop
int
and
ret
movsl
jb
cmpsl
cmpsb
fwait
test
test
jne
dec
sub
mov
mov
daa
sbb
test
out
push
in
ret
xchg
jne
test
push
jmp
lds
mov
push
test
scas
sbb
rcrb
test
test
daa
sub
daa
mov
dec
lahf
movsl
push
shl
outsl
push
sbb
popf
mov
push
lret
repz
popl
popf
pop
shrl
push
cmp
sbb
dec
or
bound
jbe
repz
mov
fmull
stos
lret
adc
outsl
mov
shl
enter
aad
je
into
mov
out
xor
ja
ja
or
pop
push
sub
inc
mov
jl
or
pop
lret
pop
mov
cli
jb
mov
xchg
jmp
push
jb
sub
fsubp
cmp
mov
ret
dec
dec
inc
ret
daa
roll
fcmovnbe
std
xor
test
fidivrl
loop
movsl
dec
lahf
fistps
sar
xchg
jmp
mov
mov
das
inc
lahf
movsb
pop
lock
jmp
jmp
dec
sbb
and
imul
stos
sbb
stos
pop
aad
dec
push
mov
inc
mov
mov
inc
push
jno
mov
cld
repz
xchg
andl
dec
sbb
pop
scas
nop
mov
jmp
mov
and
fcos
add
sub
std
pop
fcmove
xchg
adc
mov
pmullw
scas
dec
sti
rol
icebp
fwait
das
jo
pushf
addl
cs
je
test
clc
cmp
roll
cmpsl
mov
and
dec
negl
rolb
in
pop
subl
jnp
mov
mov
daa
and
jae
mov
subb
mov
xchg
push
xor
orl
adc
adc
mov
imul
lahf
int
push
arpl
cmp
loope
fwait
sahf
aad
movsb
mov
sub
cmp
aam
nop
push
sbb
mov
mov
dec
pop
pusha
cli
mov
jb
shlb
mov
ficoml
push
sbb
mov
and
std
repz
mov
xor
and
add
xchg
push
inc
mov
popf
fiaddl
mov
loopne
mov
push
out
sbb
inc
xor
pop
ss
fidivrs
adc
loope
cmpsl
lds
add
xor
imul
ss
imul
test
jmp
cmp
fwait
or
push
fldcw
cmpb
mov
push
or
fisubs
ss
xchg
adc
mov
inc
jmp
jo
or
jno
call
es
sub
xor
ds
or
lds
mov
xor
add
std
mov
cmpl
jnp
cmp
rcrl
mov
add
push
inc
loopne
pop
mov
scas
or
adc
out
mov
test
push
pushf
movsl
or
nop
lea
mov
push
xchg
mov
xchg
ret
je
xor
add
ret
push
mov
aam
into
and
jp
fsubl
sahf
loopne
mov
sarl
test
xor
out
shr
into
add
push
mov
shr
cs
cmp
cltd
nop
jmp
dec
in
shlb
dec
std
and
movsb
inc
outsb
ljmp
int
cmp
mov
dec
ss
sub
lret
jecxz
mov
and
hlt
jg
push
xor
test
push
faddl
jae
lret
imul
js
push
jecxz
cmp
cwtl
adc
mov
fbstp
cli
dec
lea
mov
or
fildl
mov
xor
je
cmp
and
ljmp
push
in
xchg
je
ljmp
ds
clc
rcll
sbb
in
std
cmpsl
and
mov
mov
cmp
xor
fcmove
call
mov
nop
mov
mov
jmp
inc
or
std
outsl
loopne
or
inc
and
inc
test
mov
and
repz
add
sbb
mov
adc
std
mov
sahf
repz
lea
lret
inc
mov
hlt
jp
adc
scas
jp
mov
inc
push
pop
es
mov
fimull
inc
clc
pop
xchg
cmp
mov
outsb
add
cmc
dec
cld
cli
das
fiadds
mov
push
jl
test
xor
and
mov
out
lods
mov
adc
es
xchg
mov
sbb
cld
jno
and
pop
push
cmpsb
in
xor
out
cmc
insb
fidivrs
cmpsl
fstpl
mov
ljmp
lods
adcb
jnp
adc
pop
add
out
push
mov
mov
push
mov
mov
mov
sbb
stc
decl
dec
lods
fbstp
mov
xlat
nop
ja
jge
mov
out
int
mov
shrb
das
mov
scas
int
push
adc
fstpl
cmp
insl
mov
in
sub
gs
jle
ficompl
adc
dec
daa
pop
xlat
mov
jge
notl
lds
imul
add
shr
fadd
fucomi
xor
dec
jns
mov
xchg
adc
jne
cwtl
sbb
lahf
pop
sub
and
fmull
iret
xchg
popf
lds
pop
sbb
shlb
aas
push
loopne
add
xor
adc
inc
test
in
aam
aam
ja
cmpsb
pop
mov
mov
lea
cmp
movsl
push
lods
rorb
dec
ss
jecxz
cmp
test
mov
push
add
pushf
insb
and
xor
push
cmp
test
imul
xchg
jle
mov
or
jnp
mov
flds
mov
and
ds
mov
cmp
mov
out
fbld
mov
push
aam
jb
dec
fildl
ss
xor
cmp
rcll
adc
adc
jae
jge
push
das
pop
cmp
das
adc
adc
and
mov
sub
mov
push
mov
xchg
xchg
fbld
jne
and
jl
hlt
xor
rcll
pop
imulb
and
adc
dec
ljmp
jg
xor
sbb
dec
cmpsl
icebp
adc
inc
rcll
sub
pop
push
sti
pop
data16
xor
mov
jecxz
mov
or
enter
and
icebp
push
mov
clc
jb
mov
jns
mov
mov
xor
xchg
jmp
test
push
jb
out
movsb
ja
mov
fcomps
mov
lock
out
sarl
jmp
dec
cld
jg
xor
or
lods
pop
lret
pushf
inc
daa
inc
out
int3
shl
jp
dec
inc
mov
or
ret
aam
pop
jae
leave
daa
fnstsw
mov
sahf
loope
push
mov
imul
push
mov
pop
cltd
mov
xor
js
stos
fprem
push
pop
jp
xchg
jne
or
lret
mov
in
push
ja
and
adc
not
and
jmp
fcomps
dec
xchg
ret
lcall
or
mov
mov
mov
fnstenv
lret
imull
fdivrs
push
aas
imul
popf
mov
sbb
mov
clc
push
lcall
xchg
jo
push
xadd
loop
lods
inc
das
lret
xlat
and
popa
sub
xchg
jl
pop
repz
rcll
stc
cld
add
lret
xchg
xor
jle
adc
push
dec
icebp
shlb
cld
pop
jbe
jle
negb
jb
or
add
out
mov
cltd
sub
push
int3
iret
aam
test
mov
mov
shrb
jne
daa
mov
ret
lds
push
enter
xchg
mov
sub
pop
addr16
xor
sbb
mov
sub
jns
xchg
xlat
jne
sarl
jge
sub
cs
adc
xchg
movsl
or
xlat
ds
in
dec
mov
inc
movsl
sub
dec
pop
sub
add
sub
sbb
in
mov
loopne
nop
addr16
nop
aas
pop
xchg
and
lahf
enter
mov
push
ljmp
xchg
push
or
add
int3
js
xchg
in
insl
add
push
or
add
and
pop
mov
sbb
std
dec
loop
add
data16
add
add
jle
fxch
jmp
in
mov
mov
repnz
imull
out
setg
mov
xor
ror
jno
ficoml
mov
ljmp
mov
pop
cmp
adc
hlt
mov
fs
test
xor
or
mull
push
pop
add
dec
stos
xor
lcall
les
pop
pop
shll
push
xchg
adc
pop
push
adc
pop
jp
dec
in
sbb
xchg
jmp
filds
shlb
dec
int
xchg
in
in
fiadds
and
sub
xchg
rolb
shl
stc
push
mulb
iret
shll
int3
pop
cltd
mov
cmp
in
clc
test
jg
fsub
mov
outsl
fs
addb
cmp
gs
mov
mov
inc
mov
mov
stos
test
insl
cmp
push
add
mov
jnp
fcmovu
mov
popf
in
push
mov
cmp
pop
call
sahf
test
loop
imulb
cmpsl
push
cmp
dec
outsb
push
cld
fidivs
int
dec
sub
push
push
xor
stos
outsl
cli
sbb
std
mov
hlt
ja
movsb
fcmove
cmp
mov
xchg
mov
xorl
aas
mov
pop
int
sbb
jbe
lcall
iret
decb
push
jno
push
cmpl
fmull
inc
add
mov
xor
ljmp
jnp
mov
addr16
jno
fwait
pop
jae
mov
xor
ja,pt
out
orl
movsl
popf
pop
sub
jg
pop
cmpb
jns
lock
aad
mov
or
inc
push
imul
xchg
maskmovq
negl
cli
mov
add
mov
push
mov
cmp
sarl
xchg
fisttps
mov
insl
ret
scas
xchg
scas
sub
call
sub
call
push
ja
or
inc
inc
inc
lea
and
rcll
dec
ss
mov
rolb
notb
leave
in
jecxz
sbb
sbb
movsl
adc
out
fstpt
mov
xlat
cld
push
mov
mov
pop
jbe
adc
sbb
xor
cmp
aam
int
adc
test
mov
into
push
mov
pop
jecxz
xor
std
cmp
xchg
pop
mov
xchg
or
pop
scas
stos
lock
jle
mov
rorb
shlb
test
iret
in
pop
mov
adcb
test
adc
add
jge
cmpsb
jmp
inc
pop
add
fs
pop
std
leave
xchg
lods
sub
repz
sub
lret
cltd
enter
pop
xchg
cmpsb
sub
jmp
aas
inc
loope
push
jge
cmp
test
arpl
leave
test
xor
fsubl
je
xchg
loop
enter
roll
mov
fwait
aam
dec
ja
fisttps
push
cwtl
jmp
sbb
lret
push
pop
sti
pop
leave
aas
imul
pop
mov
daa
and
shll
imul
xor
stc
add
sub
and
or
push
jp
int3
ret
push
sbb
mov
jge
sbb
sbb
inc
into
ret
mov
testb
or
or
loope
repz
rcrl
frstor
sub
pop
iret
in
repz
test
cmp
data16
insl
data16
xchg
popf
pop
mov
subb
arpl
mov
cmp
jle
scas
fs
jge
insb
das
inc
or
and
jne
mov
pop
xchg
outsl
lret
mov
mov
sub
orb
or
xor
pushf
inc
fisttpll
push
lret
pop
cli
out
scas
xor
jg
dec
mov
mov
adc
cltd
loope
xor
add
jns
das
xor
push
inc
or
sti
inc
and
fbld
jbe
jnp
cld
out
ret
adc
xchg
fistpll
insb
or
mov
sbb
dec
push
sub
mov
cmpsl
jae
leave
push
fcomp
sub
shlb
lock
aad
sub
sbb
xchg
mov
mov
pushf
mov
test
cmc
xor
loope
mov
xchg
scas
lods
mov
xor
fwait
rolb
mov
ror
insl
jne
clc
mov
pop
es
mov
lds
stc
in
mov
in
daa
nop
in
mov
dec
icebp
hlt
add
in
in
mov
rcrb
cld
loop
pop
dec
shll
orl
cmpsl
push
jle
lock
adc
dec
arpl
into
test
outsl
dec
arpl
pop
push
mov
aad
and
and
jns
jl
mov
and
ret
or
cli
pusha
sarb
inc
bound
push
ret
jl
xor
insb
mov
mov
test
fsubp
jns
scas
cld
dec
dec
out
rcr
fiadds
dec
sub
out
lahf
and
enter
movsl
xchg
mov
test
pop
pusha
or
shl
fs
popa
cwtl
in
push
cmp
clc
test
in
push
mov
in
inc
ret
xchg
loopne
or
fldt
sbb
iret
push
test
loope
jle
dec
orl
imul
test
dec
stos
flds
out
lret
xchg
sahf
into
add
stos
inc
cmp
mov
mov
or
jbe
les
out
ret
jb
mov
adc
loope
or
fisttpll
mov
jecxz
push
ss
mov
add
std
xor
cmp
fimuls
bound
mov
push
cmp
adc
and
femms
out
jge
sahf
xlat
icebp
addb
mov
shll
jmp
dec
insb
jb
dec
mov
cwtl
imul
or
in
xchg
lahf
xchg
in
sub
das
xchg
jo
adc
nop
mov
loope
xchg
jl
or
std
and
inc
xchg
cmp
movsb
add
pop
cmp
lock
test
mov
cs
nop
rcrl
push
push
in
and
push
mov
sbb
out
gs
and
mov
dec
xchg
rorb
fwait
jo
dec
push
je
clc
jo
xor
mov
in
sbb
cld
xchg
stc
movsl
dec
sbb
mov
addr16
lods
cmp
outsb
jo
and
jb
or
jl
pop
ljmp
push
clc
mov
stos
sbb
jecxz
jbe
mov
in
das
arpl
mov
addl
mov
xorl
nop
and
rorb
fs
add
sti
outsl
mov
js
jmp
mov
in
pop
xor
xchg
sbb
and
mov
lea
sbb
cwtl
jge
insb
xchg
out
movsb
mov
mov
aad
add
jae
push
sub
je
int
lods
in
push
mov
cmpsl
xor
xor
imul
pushf
push
movsl
loop
pop
adc
sbb
scas
enter
xor
jp
ret
pusha
dec
pop
lods
aam
add
adc
popa
sub
lods
fstl
call
inc
lahf
lahf
xchg
mov
ss
in
fcomps
popf
add
ja
mov
insb
in
cmp
and
ret
cmp
bswap
push
xchg
shrb
jle
pop
push
aas
add
or
push
lock
fsubrs
out
add
out
jae
xor
dec
test
lret
jnp
loop
hlt
inc
flds
adc
mov
inc
in
mov
repnz
jo
sub
jo
xor
test
inc
mov
pop
jl
sub
std
push
push
in
in
imul
xorb
jae
sbb
lahf
mov
xlat
movsb
addr16
mov
and
adc
test
ficoms
dec
sbb
es
add
cmp
idivl
add
in
cmc
jns
push
jl
bound
sub
jle
shr
stos
xchg
xchg
push
xchg
jmp
or
shrl
nop
push
movzbl
mov
gs
outsb
mov
pop
cmp
dec
xor
mov
daa
pop
inc
jp,pn
xchg
inc
out
dec
jp
fadds
mov
stc
maskmovq
divl
std
xchg
xchg
cmp
cmp
and
lret
or
flds
enter
adc
adc
jmp
out
aad
sub
test
cmp
xchg
or
repnz
or
dec
mov
es
fsubrs
fldcw
or
int3
inc
pushf
cmp
adc
jo
xchg
cmpsb
clc
jbe
scas
fbstp
mov
clc
lods
jle
sbb
xchg
adc
mov
repnz
mov
cmpsb
mov
xchg
loopne
rorb
mov
cmpsl
repnz
push
rol
imul
mov
mov
push
scas
xchg
ret
add
das
push
add
xor
mov
mov
mov
es
test
or
jmp
cmp
and
mov
xchg
cmp
cmp
mov
ret
mov
fnstcw
out
cmp
push
sarl
outsb
hlt
pop
push
inc
adc
adc
jle
xor
cltd
mov
fadds
pop
fstpl
or
filds
out
cmpsl
mov
mov
test
das
dec
je
cs
mov
jo
xchg
mov
sub
xchg
pop
xchg
xchg
adc
sub
dec
lahf
hlt
outsb
adc
add
jle
jnp
idivb
inc
inc
add
arpl
clc
jecxz
or
cmp
and
fsubl
xchg
jo
fsts
or
and
mov
xorl
rcrl
xor
outsl
mov
xchg
aam
pop
dec
sahf
fistpll
and
insb
adc
pmaxub
stos
fsubrl
push
jmp
dec
cmpsb
jge
shl
inc
jne
mov
inc
mov
rcl
xlat
push
ror
in
mov
sbb
das
call
cvtdq2ps
jbe
and
out
sahf
frstor
xchg
inc
dec
out
into
lcall
mov
adc
mov
nop
stos
lcall
fstpl
mov
push
inc
cmp
imul
loopne
lcall
or
lcall
ljmp
dec
iret
sarb
shll
sahf
mov
jne
fcomi
mov
jne
mov
aad
ds
mov
xchg
sub
sbb
mov
sub
scas
sub
fildll
add
fdiv
mov
and
push
jne
mov
inc
vpcmpeqw
push
xchg
dec
mov
push
xchg
addr16
bound
sbb
dec
fsubrs
in
scas
lcall
adc
and
jl
cld
jno
adc
mov
xchg
lods
or
xor
mov
hlt
imulb
or
sub
insl
pushf
pop
je
sbb
add
repz
push
inc
adc
mov
lret
pushf
push
ret
sbb
insl
out
mov
addr16
imul
fistl
jecxz
mov
fadds
stos
hlt
inc
add
rorl
inc
push
lods
xchg
test
push
cli
or
and
or
pop
aaa
cli
adc
push
pop
xchg
xchg
add
sbb
cmp
lods
adc
ds
push
mov
inc
jo
pop
pop
lcall
add
add
or
int3
jo
xchg
add
roll
sbb
jp
add
and
daa
xor
push
fs
bound
out
int3
mov
inc
popf
xor
sbb
mov
push
mov
data16
dec
pop
nop
jge
fmull
subb
outsl
repz
icebp
lods
push
pop
das
xchg
ds
xlat
push
mov
ret
aad
les
dec
sbb
mov
pop
xchg
imul
and
sbb
mov
xor
xchg
dec
rclb
out
mov
fwait
sti
dec
into
dec
push
push
ds
adc
adc
unpckhps
sbb
fdivs
sub
xchg
push
cmp
pop
pop
mov
push
test
cmp
pushf
icebp
mov
sti
cwtl
arpl
imul
dec
jae
jo
mov
jecxz
xchg
jg
adc
in
push
test
dec
mov
xchg
lret
fnstsw
out
jno
cltd
test
mov
mov
xor
in
xchg
mov
iret
fdivrl
xchg
add
movsl
je
sbb
aam
sbb
dec
movsl
es
push
or
mov
xor
mov
xor
je
sbb
pop
out
hlt
sbbb
test
mov
mov
sahf
inc
or
mov
and
sub
sarl
stos
xchg
dec
cwtl
mov
pusha
mov
jae
and
xchg
fdivrs
cld
xchg
sbb
sub
mov
xchg
inc
loope
lds
push
dec
ret
in
xchg
cmp
lcall
testb
jne
cmpsl
sbb
rcl
and
mov
fwait
inc
push
mov
je
dec
jle
les
dec
repnz
int
movsl
jle
inc
imul
test
orl
leave
popa
bound
out
jb
imul
test
mov
xor
nop
outsb
fistps
xor
jae
xchg
daa
mov
push
outsl
test
pop
nop
cmp
pop
xchg
cmp
popa
or
cmpsb
or
push
sbb
and
dec
cmp
mov
dec
xchg
lods
icebp
and
js
inc
mov
arpl
pop
scas
es
addr16
sahf
outsl
mov
mov
mov
cmp
dec
xor
lock
loop
iret
and
mov
fisttpl
je
mov
or
data16
sbb
fld
jae
ret
pop
scas
jno
je
mov
dec
test
sbb
adc
mov
jp
fmulp
in
loopne
call
mov
addr16
mov
mov
inc
sub
or
les
and
dec
sub
roll
loopne
xor
addb
xor
and
das
dec
in
out
xlat
pusha
jno
jmp
jmp
mov
ljmp
subb
pop
imul
xorl
imul
pop
fwait
jns
push
addr16
mov
dec
sbb
xchg
add
lahf
mov
xchg
pop
mov
push
inc
adc
jo
mull
mov
pop
or
pop
cmpsb
xchg
subb
push
xor
xor
cmp
lods
xchg
cmp
adc
sub
ljmp
adc
add
lahf
addr16
gs
cwtl
and
fcoms
lods
pop
add
out
cmpsl
or
movsb
aaa
call
and
jg
std
das
inc
movsb
dec
gs
loope
rolb
mov
xchg
sub
scas
test
aas
int3
outsl
std
in
hlt
jl
pop
sub
or
lds
dec
cld
mov
mov
inc
adcl
fdivs
roll
and
sahf
rcr
sub
xor
out
repnz
jl
mov
rorb
imul
bnd
mov
pop
movsb
in
sbb
loopne
inc
lds
pusha
inc
movsl
test
pop
mov
inc
xchg
fs
mov
pusha
or
and
push
jge
and
xor
adc
ds
jg
in
dec
sub
mov
in
push
ljmp
pop
mov
push
in
cld
xorl
add
pop
mov
fwait
mov
cmpsb
cld
pushf
jge
adc
sbb
roll
push
pop
lret
rorl
fnstenv
lods
loope
add
jno
in
cmp
jbe
pop
loope
movsl
cmp
add
bound
mov
or
dec
inc
inc
mov
mov
pusha
inc
fisubl
divl
or
sahf
shl
mov
mov
cwtl
cs
filds
jmp
flds
enter
out
sbb
inc
test
mov
scas
sub
cmp
jecxz
push
xchg
pop
lcall
jnp
inc
imul
in
dec
mov
mov
mov
leave
pop
mov
mov
sbb
sub
or
in
push
lret
lret
fstpl
inc
fists
sub
dec
ss
js
push
mov
pop
cmpl
cmp
cmp
sbb
outsl
loopne
jnp
mov
cmpsb
add
jecxz
mov
jbe
adc
inc
notl
xor
sbb
out
jbe
es
or
mov
scas
arpl
xchg
add
xlat
dec
lds
loope
push
and
xchg
lcall
pop
gs
stc
jle
inc
dec
sbb
xchg
mov
bound
loopne
pop
xor
in
jbe
dec
push
lcall
out
ljmp
jns
mov
xor
ja
push
mov
ljmp
fldenv
scas
pop
sub
cmp
aas
fsts
dec
push
sbb
jmp
cli
dec
jb
adc
mov
repnz
sarb
xlat
enter
pushf
stos
pop
cmp
bound
pop
mov
pop
lods
imul
jg
out
enter
cli
call
sahf
sub
imul
jne
sti
pop
xor
xchg
adc
jp
cld
or
icebp
lahf
in
cmovae
stc
test
mov
cmp
lret
adcb
adc
pop
insb
push
push
test
xorb
call
enter
sub
mov
jg
repz
out
push
mov
sbb
int
out
jle
adc
leave
or
int
mov
xor
jne
add
xor
and
jno
xor
push
pushf
mov
adc
lret
xor
shr
and
aaa
adc
popa
xchg
jno
xor
xchg
movsb
shll
in
jno
mov
test
repz
sbb
fadd
clc
lahf
out
lds
outsb
adc
int3
push
jecxz
add
adc
pop
pop
je
push
stc
test
or
dec
test
pop
pop
or
dec
popa
aam
and
nop
inc
cmp
gs
adc
mov
inc
imul
js
jge
popf
cmp
loopne
jle
push
in
orl
mov
scas
or
adc
stos
aam
sbb
rcrl
int
ljmp
insb
mov
xchg
jge
pop
jl
xchg
xchg
mov
stos
xchg
mov
dec
sub
jae
fs
pop
mov
pop
sbb
pushf
adc
ljmp
xchg
mov
xor
stos
sub
jle
idivb
rclb
mov
pop
mov
aam
insl
push
stc
adc
cltd
incb
mov
neg
xchg
sbb
outsl
pop
call
or
icebp
xor
jns
cmp
rorl
push
xlat
ss
mov
aad
nop
jmp
lcall
xor
aam
andb
jg
inc
into
cmc
jge
xorb
mov
addl
adc
adc
das
add
std
arpl
and
inc
adc
push
arpl
xchg
jo
sub
addps
subb
mov
scas
loopne
daa
arpl
mov
xchg
pop
mov
das
push
cli
inc
push
cwtl
push
and
add
leave
jg
jb
mov
xchg
bound
cmc
cltd
mov
cli
pusha
rcll
addr16
xchg
sti
js
dec
sbb
xchg
and
int3
inc
imul
jbe
je
or
cli
in
add
push
sbb
sub
outsb
jg
mov
push
push
jp
fisubrs
fstpt
loop
mov
or
add
fnstenv
jle
inc
inc
jg
shrb
jbe
mov
inc
sub
bound
cmpsl
sbb
lds
div
push
jle
pop
xchg
cmp
shlb
aaa
lret
pop
pushf
inc
rcr
out
jo
cmp
pop
jmp
test
pushf
loop
in
add
mov
xchg
xchg
pusha
lock
aad
aam
test
test
adc
in
mov
out
fmuls
test
dec
mov
mov
xor
testl
xchg
xchg
and
mov
sub
mov
push
xor
fnstsw
inc
lods
sti
cld
push
sub
pop
jl
int3
and
jb
int
xchg
sbbb
hlt
and
data16
or
call
call
cmp
mov
lcall
scas
jae
enter
ja
mov
shlb
icebp
and
ret
fdivp
ftst
dec
xchg
rcll
loope
mov
sbb
pop
outsb
mov
sti
ds
pop
sub
cs
ss
rorl
mov
adc
ret
cmpb
rcrb
loope
lcall
lcall
mov
orb
xchg
int3
sub
out
seta
cmp
scas
cmp
out
clc
jle
int3
push
mov
cltd
ljmp
arpl
pop
fidivl
push
fnstsw
jl
sbb
dec
mov
xor
jo
jb
outsl
sbb
dec
cmp
into
imul
xchg
mov
jle
fisubrl
lret
ret
jl
dec
xlat
int
dec
push
movsl
adc
and
and
mov
mov
out
cli
scas
loope
add
inc
scas
in
pop
fisubrs
add
add
in
jp
fisttpll
mov
adc
xorb
jno
jp
sub
call
sti
jp
test
popl
imul
pop
and
aam
popf
cmc
pop
mov
mov
pusha
rolb
faddl
push
and
repnz
fcomp
push
dec
dec
enter
dec
pop
add
or
jns
rcll
or
daa
imul
dec
lret
sahf
inc
pop
sbb
cmp
int
add
sbb
pop
stc
sub
and
mov
shll
mov
pushf
sub
mov
test
leave
lds
cltd
mov
xchg
pop
xor
aas
and
cmp
call
or
push
sub
outsb
in
dec
push
push
inc
shl
flds
pop
push
mov
jae
enter
dec
aam
push
ja
rcrl
lcall
push
mov
das
jle
popa
rclb
jnp
add
test
stc
test
mov
test
dec
popf
push
push
addr16
out
dec
push
jbe
xor
jl
xchg
fisttps
xchg
xchg
xlat
adc
cmp
cmpl
scas
fsubr
shl
test
jge
xorl
mov
inc
dec
scas
and
xor
pop
cwtl
push
stc
outsb
sbb
lret
je
testb
outsl
lret
push
rolb
and
push
lret
pop
imul
test
inc
adc
pushl
cmp
mov
sbb
inc
xchg
call
stos
jae
rcrl
cmp
dec
cli
incl
sbb
and
fmul
sbb
xor
test
mov
cmp
lock
mov
push
xor
dec
inc
and
push
mov
mov
out
orl
xchg
xor
xorb
xchg
arpl
in
sbb
sti
dec
sub
outsl
pop
int3
sbb
fs
sbb
test
stos
faddl
xchg
push
sub
jl
xor
jo
cmp
fidivrl
jmp
call
cli
mov
pop
jno
faddp
sbb
adc
cli
outsl
cmp
in
cmp
and
aad
pusha
mov
sti
cmpsb
adc
pop
add
shr
sbb
xchg
or
dec
xorl
dec
stos
mov
sbb
jmp
jp
add
shll
mov
mov
adc
mov
xor
mov
js
popf
in
cmp
imul
mov
fsubp
sub
push
dec
enter
xchg
mov
xchg
mov
adc
mov
xchg
or
mov
push
add
pop
mov
push
ror
lds
ror
movd
shlb
or
sub
rcrb
divb
push
lea
push
iret
pusha
pop
neg
pop
cmp
fidivrs
divb
adc
mov
xor
pushf
dec
cmpsl
cmp
cmc
in
mov
test
shrl
mov
addl
sub
out
out
mov
rorl
sti
xchg
xchg
lods
sarl
xchg
js
cmp
pop
sti
cmpl
dec
out
hlt
pop
out
cmpsl
addb
or
mov
or
adc
daa
popf
pop
ja
out
mov
mov
std
lods
xor
mov
xchg
add
ja
gs
lret
pop
inc
bound
adc
or
push
mov
lcall
cmp
sub
push
mov
cwtl
push
mov
cmc
mov
call
insl
arpl
xchg
pop
pop
sti
push
ss
leave
cmc
inc
mov
cmp
call
and
insb
in
lods
fwait
mov
out
popf
decb
or
jb
popa
movsb
dec
pop
push
cld
lds
aam
mov
adc
lret
ds
adc
xor
ret
test
xchg
iret
jp
mov
mov
addl
xchg
pop
mov
adc
call
mov
test
scas
loopne
call
inc
xchg
cwtl
stos
aam
pop
and
mulb
jecxz
xchg
es
stc
cmp
repnz
stos
adc
sub
adc
repz
cltd
inc
add
sub
cld
sub
inc
test
sbb
xchg
push
hlt
xor
inc
mov
mov
push
mov
jns
pop
and
mov
cmp
cmpsb
jg
pop
sbb
rclb
mov
push
mov
popa
xor
aaa
out
cmp
aas
lds
cmpsl
pushw
dec
xchg
out
xchg
icebp
cmp
xchg
sbb
ret
jbe
lds
push
dec
xchg
inc
shrb
das
mov
movsl
inc
pop
mov
pop
pop
out
mov
add
sbb
hlt
sahf
mov
addr16
ja
mov
xchg
and
jp
insl
inc
repnz
loopne
cltd
bound
push
sub
push
xchg
hlt
jno
in
insb
mov
sbb
lds
dec
test
in
inc
pop
jecxz
aaa
sahf
xor
lods
test
push
insb
icebp
mov
and
push
push
dec
cmp
and
arpl
adc
outsb
fmull
addr16
idivb
cmpsl
test
je
hlt
adc
mov
lods
or
aaa
mov
dec
dec
push
ja
mov
sbb
mov
pop
xchg
adc
notb
mov
repz
sub
push
inc
addr16
cli
pop
sahf
cmp
int3
movsb
pusha
add
in
iret
stos
movsl
rcrl
fucomp
imul
jb
dec
arpl
xchg
pop
lods
int3
push
fisttpl
cwtl
ja
and
pop
daa
out
scas
sub
and
sbb
pop
xchg
int
xchg
cmp
aas
mov
sub
xchg
push
pop
pushf
iret
sub
orl
leave
repnz
ss
fcomps
xchg
lock
stc
lods
mov
out
fcmovu
cmpsl
ret
cmp
mov
pushl
pop
mov
lods
mov
dec
cmp
enter
mov
add
mov
pop
adc
and
in
lret
clc
add
fisttpll
sarb
mov
xchg
loop
and
or
sbb
fdivrl
add
cmpl
dec
adc
lret
xchg
mov
mov
iret
mov
mov
ja
shr
daa
add
test
push
mov
ficoms
jb
xor
cmpb
aad
and
int
push
inc
push
push
mov
push
inc
sub
mov
lahf
fcomp
dec
mov
jnp
das
hlt
sbb
pop
icebp
dec
rclb
jo
ss
data16
stos
in
add
inc
cmpsl
and
and
sti
adc
ljmp
and
and
push
cld
rolb
test
pop
bound
sti
jle
lahf
notl
xor
mov
xchg
push
push
or
lcall
frstor
enter
add
je,pn
daa
sarl
incl
mov
test
mov
or
sar
aaa
mov
mov
lret
mov
pop
pop
cmp
lcall
pop
mov
mov
xlat
xor
jmp
sbb
addr16
cmp
dec
subl
leave
sub
or
sub
pop
out
and
imul
lret
pop
mov
cltd
outsb
xor
orb
jnp
ret
mov
xor
pop
pop
inc
movsb
dec
xor
cmc
das
icebp
test
mov
sbb
daa
pop
aas
adc
jns
ds
test
pop
das
xor
movsb
push
inc
xor
out
add
int
mov
jp
xadd
xchg
and
pop
das
jnp
pop
mov
lahf
adc
dec
aam
icebp
aam
sbb
sbb
xor
cli
pop
or
mov
mov
push
push
lods
out
cmp
clc
cmp
cmp
mov
fwait
add
flds
pop
mov
movmskps
cs
call
add
daa
mov
xchg
cltd
and
inc
insl
sbb
pop
rsqrtps
cmc
out
fxch
sarb
movsl
addr16
push
lea
dec
push
and
sbb
cmp
lods
mov
imul
pop
adc
ret
repnz
sub
jb
push
pusha
sbb
push
add
jns
cmc
les
enter
lock
in
jecxz
imul
cwtl
pop
daa
mov
sti
sti
out
hlt
and
mov
rorl
inc
ljmp
repz
xor
std
cs
sbb
cmp
andb
cvtps2pd
xor
push
icebp
insl
pop
js
stos
rclb
in
test
sarl
jmp
pop
adc
xor
enter
imull
push
xchg
jl
jbe
in
inc
repz
ret
cmc
mov
and
outsb
adc
aam
fstpl
lds
mov
sbb
stos
mov
outsl
mull
inc
dec
out
cld
and
icebp
jmp
in
jno
xchg
sbb
notb
das
mov
popf
push
xchg
mov
mov
push
and
mov
ficoms
mov
jge
dec
lds
xor
cmp
popf
sub
xchg
stc
or
push
out
loopne
pusha
or
mov
js
jo
call
ret
push
dec
movsb
xchg
cmp
jg
xchg
sbb
mov
add
or
das
mov
fistl
xchg
in
movsb
aaa
pop
jmp
rcll
or
adc
sub
imul
nop
int
mov
dec
sbb
or
inc
loope
jo
repz
lahf
mov
mov
jmp
outsb
sahf
ds
aam
mov
inc
imul
add
in
add
iret
movsb
popw
dec
and
nop
faddl
jecxz
pop
jbe
les
test
out
mov
aas
add
jno
pop
mov
jmp
aas
stos
add
fdivrs
xchg
or
icebp
mov
sub
mov
lock
mov
add
leave
jmp
stos
fstl
mov
mov
xchg
add
mov
add
movb
sub
dec
cli
les
pop
pop
cmc
dec
jo
dec
pop
sub
mov
shrl
xchg
test
aaa
je
or
mov
inc
loope
test
ret
pop
lret
outsl
or
push
pushf
aad
nop
imul
inc
out
mov
mov
into
add
xchg
clc
out
cs
push
cmpsl
pop
inc
cmp
mov
aad
ret
push
insb
ljmp
pusha
cltd
sub
inc
xor
push
xlat
std
or
outsl
lods
sbb
addr16
mov
enter
lcall
lock
sbb
xchg
lods
jle
push
movsl
nop
movsl
pop
call
stos
add
xor
or
in
mov
rorb
push
out
cltd
mov
mov
push
stos
cmp
fldl
sbb
aaa
lock
push
repz
or
fsubr
pop
mov
arpl
adc
xor
cwtl
inc
fistl
jo
lods
mov
dec
jbe
test
dec
sub
add
pop
pop
aaa
xchg
add
aad
pushf
stos
data16
into
and
adc
lock
inc
lret
lahf
mov
cmp
mov
lods
scas
aaa
in
iret
jmp
lock
pop
adc
pusha
push
ds
and
pop
mov
cwtl
adc
jbe
mov
and
pusha
mov
mov
mov
inc
imul
jbe
data16
bound
std
and
lods
xor
sbb
and
pushf
xchg
test
test
jo
rolb
addr16
and
into
or
int
sar
and
mov
movsl
push
dec
dec
xchg
or
lea
sbb
mov
and
das
pushl
fcoms
cwtl
gs
pop
pop
lea
es
fidivrs
and
push
xchg
sub
pop
pop
inc
and
push
push
and
hlt
frstor
dec
sbb
lock
mov
adc
call
jecxz
mov
ret
mov
int
lods
lock
ss
repz
or
in
sti
xor
pop
add
mov
jbe
and
sti
inc
jne
rorb
shll
adc
rol
sar
jae
dec
inc
mov
ss
test
repnz
bound
mov
adc
jecxz,pt
hlt
repnz
pop
pop
dec
mov
pop
push
dec
dec
sbb
lock
mov
mov
mov
bound
movsl
adc
dec
mov
jmp
imul
cwtl
movsl
popa
sti
out
out
shlb
in
xchg
in
mov
add
push
in
add
js
cmp
imul
sti
push
or
adc
repz
aam
addr16
lret
subb
andl
sbb
hlt
in
sbb
lret
adc
cmc
xor
mov
dec
rcrl
es
mov
jno
inc
aas
imul
add
shl
imul
inc
fs
aam
std
sti
out
out
repz
scas
add
dec
mov
cmp
mov
push
mov
push
gs
push
jle
push
and
aaa
inc
dec
test
xor
shlb
in
and
mov
mov
repz
add
inc
test
pop
push
xchg
pop
je
insb
pop
xor
sbb
jnp
shl
imul
jle
dec
loope
cmp
add
lock
bound
mov
insl
dec
or
cld
xor
jnp
xorb
cmp
nop
adc
loop
repnz
in
nop
inc
ret
sbb
sub
jno
addb
ds
add
mov
ljmp
ja
fcomps
push
and
push
dec
cld
shl
xchg
fsubp
ficomps
jns
jns
jo
adc
pop
shlb
add
in
stc
sub
outsb
aaa
pop
outsb
inc
adc
and
adc
cmpb
mov
xor
cmp
cs
nop
jecxz
pusha
jg
fadd
inc
fisttps
sbb
xorl
not
adc
ja
mov
ficompl
mov
in
in
mov
mov
fs
xor
call
in
test
lret
call
orb
fsubl
retw
lods
xor
push
ss
arpl
jecxz
push
les
mov
cmp
loopne
mov
mov
shlb
lea
mov
pop
push
jno
jp
and
stc
pop
ret
scas
repnz
ds
lret
add
xor
les
pop
popa
iret
nop
insl
popa
xchg
jmp
dec
fsubrs
repz
into
lock
pop
jle
inc
divl
movsl
nop
add
icebp
je
inc
out
scas
fistps
cmp
sarb
aas
adc
clc
jecxz
fwait
cltd
add
jl
lcall
xlat
adc
mov
mov
roll
mov
push
push
test
call
ja
xchg
push
mov
cltd
arpl
lret
insl
inc
xchg
add
push
in
idivb
ds
dec
xor
jne
cmc
lret
pop
jl
movl
icebp
cmpsl
std
pusha
sarl
and
lret
or
adc
jo
mov
sahf
std
fbld
xor
sub
aad
pop
in
lea
into
scas
mov
xchg
mov
dec
stos
fsubl
inc
lret
dec
popf
sub
push
mov
sbb
xchg
subl
sub
lcall
jl
loopne
in
gs
xchg
movsl
push
outsb
cmp
notb
adc
xchg
lods
rolb
dec
mov
inc
or
cmpsl
rolb
insl
es
arpl
popa
call
dec
push
fidivrs
ss
add
test
test
insb
fnstcw
mov
sub
gs
mov
sub
sbb
sub
fldt
jb
xchg
dec
pop
ret
jne
lret
push
ss
add
shl
sbb
inc
and
repnz
xchg
fistpll
scas
adc
or
lahf
out
sub
xor
and
add
std
sub
daa
mov
push
lock
in
or
and
clc
mov
jmp
or
adc
xchg
std
outsb
mov
or
lods
dec
cmp
cmp
insl
jl
lahf
shll
mov
and
and
pop
xchg
push
push
pop
rcl
lock
xor
les
push
cmp
dec
hlt
in
cmp
lret
lahf
and
lea
jl
xorb
aaa
pop
add
sbb
push
sahf
addr16
sub
ds
and
inc
js
hlt
nop
mov
and
pop
cltd
mov
inc
fstpt
jmp
fistl
cld
scas
lahf
pop
sbb
test
out
push
pop
dec
shll
cltd
in
add
add
mov
jecxz
push
fiaddl
je
int3
lcall
cmp
xor
jp
cmp
xchg
lods
cmp
ja
mov
xor
cmc
pop
xor
out
cmpsb
mov
cwtl
sbb
pusha
popa
mov
push
test
or
hlt
add
pop
adc
mov
inc
stc
add
sbb
push
cli
jg
lds
mov
jecxz
addr16
jmp
mov
call
jp
mov
mov
cli
test
daa
mov
int3
add
dec
lds
and
mov
fst
imul
sti
hlt
insl
lcall
into
mov
dec
dec
dec
movsb
push
dec
dec
test
enter
jne
lea
cmp
xchg
outsl
test
in
cltd
sbb
push
inc
popa
mov
or
pusha
loop
pushl
xchg
mov
xchg
cmpsl
pop
and
mov
mov
jge
pushf
iret
mov
data16
adc
mov
sti
dec
daa
mov
pushf
stos
pop
inc
ret
cmpsl
pop
dec
or
imul
jg
out
imul
or
sub
xchg
cwtl
aas
cltd
daa
dec
iret
je
jae
stos
xor
jmp
lock
clc
mov
rorb
jg
pop
int3
push
orl
xchg
or
fdivp
or
loope
xchg
or
movsb
fisubl
xchg
jl
xchg
mov
ljmp
cltd
loope
lock
cli
sahf
jo
mov
aam
and
test
sbb
xchg
inc
iret
mov
lcall
jbe
std
lcall
dec
jp
es
inc
mov
movsb
jo
push
rcll
jbe
lcall
cs
int3
or
add
out
mov
jge
push
pop
int3
and
test
fs
mov
idivl
popa
aad
dec
pop
pop
xchg
add
fcomps
jae
mov
mov
fimull
cmp
popa
mov
cwtl
mov
test
xor
mov
stos
jne
pop
lcall
fcomi
shr
aaa
outsl
mov
out
push
mov
stos
mov
and
es
enter
imul
cmpsl
mov
lods
sub
clc
sub
fldl
sbb
lahf
cmp
inc
mov
fsts
mov
adc
shl
ja
inc
mov
mov
jg
fldt
mov
mov
push
bound
jae
xchg
orb
xchg
shrb
imul
add
sbb
cwtl
sub
pop
das
mov
xchg
cs
into
push
nop
xlat
sti
int
fsubr
xor
xchg
mov
xor
ficoms
push
pop
aas
adc
movsb
mov
pop
stos
jmp
cmp
jb
jnp
es
lcall
enter
pop
shll
movsl
insl
push
enter
dec
fstpl
cltd
cli
int
xchg
in
xor
sti
adc
sub
xchg
push
jnp
jnp
mov
lret
adc
pop
aaa
rcrb
frstor
pop
ja
iret
mov
lds
shld
in
lret
int
shll
mov
pop
add
test
popa
aam
inc
shlb
imul
je
icebp
xchg
jp
mov
fildl
adc
lahf
ret
lret
mov
mov
sub
outsl
inc
fcomps
jo
loop
mov
mov
neg
rolb
repz
into
mov
xchg
dec
adc
movsb
ss
push
cmpsb
mov
inc
aaa
mov
xor
sbb
and
push
int3
sub
mov
mov
jp
sbb
aas
scas
movsb
lods
cmp
mov
addr16
cmp
in
inc
jg
add
rcr
pop
push
push
loopne
jo
loope
pop
xchg
fidivrl
scas
push
ftst
test
mov
and
lods
fs
lahf
mov
sub
sbb
or
js
stc
icebp
jle
add
and
sbbl
mov
sub
and
mov
pop
bswap
push
data16
sub
shlb
jl
xchg
rorb
sub
pop
push
insb
fsts
push
inc
iret
xchg
add
cmpsb
scas
mulb
test
sbb
add
out
xchg
popf
jno
mov
mov
mov
jae
addl
add
mov
bound
pop
insb
sub
lods
inc
xchg
fs
dec
mov
and
imul
mov
mov
or
mov
out
mov
pop
push
cmp
push
scas
aaa
or
mov
push
cmc
adc
or
aas
hlt
xor
adc
mov
js
mov
out
mov
pop
add
repnz
mov
or
stc
sbb
test
cmp
dec
mov
int3
iret
sbb
inc
aam
std
imul
jae
into
leave
cmp
or
mov
mov
add
or
hlt
rol
jp
call
sbb
fwait
rcll
stos
insb
push
fisttpl
sarb
adc
xchg
mov
mov
pop
stc
ja
dec
pop
sbb
mov
adc
hlt
sub
xchg
mov
mov
pop
adc
insb
push
sarb
nop
js,pt
loope
ds
das
ljmp
jae
loop
sub
xchg
add
xchg
fcompl
sarl
inc
mov
ja
inc
pop
call
xor
xchg
pusha
out
ljmp
dec
sub
mov
inc
test
ss
rcrb
push
mov
fld
mov
repnz
icebp
mov
inc
and
cmp
adc
jp
cwtl
iret
andb
xchg
nop
jbe
mov
mov
add
pushf
inc
xor
push
mov
inc
or
push
sti
jo
pushl
ja
pop
jae
das
loope
push
add
pop
test
aad
and
sbb
clc
mov
imul
in
jbe
fisubs
leave
into
pushf
or
pop
dec
stc
subb
pop
out
mov
je
mov
loop
pop
aam
xchg
and
aad
scas
cli
lock
sub
and
shlb
out
or
dec
mov
pop
popl
in
or
test
pop
repnz
and
movsl
xlat
pusha
cmp
pop
jmp
lahf
adc
int3
add
or
cltd
pop
dec
push
push
scas
jne
sub
fbstp
lds
pextrw
push
inc
xlat
fcoml
ljmp
rclb
push
les
mov
gs
vpandn
jns
cmp
and
lret
push
sbb
and
ljmp
xchg
adc
repz
jecxz
push
mov
or
gs
mov
outsl
rolb
enter
mov
ret
mov
adc
push
std
sbb
inc
mov
repnz
loope
add
dec
sub
and
aam
mov
mov
jecxz
andb
jge
pop
mov
icebp
int3
out
pop
insb
and
test
inc
add
jg
inc
xchg
popf
xchg
fcmovnbe
mov
test
mov
out
lock
outsl
mov
nop
imul
jl
adc
dec
adc
push
pop
jp
stos
inc
sbb
inc
decb
fcomi
add
divl
fisttpl
jge
fmul
push
mov
sbb
jbe
mov
scas
push
mov
cmp
cmp
pop
test
ret
sahf
cmc
scas
add
sub
push
ljmp
and
cmp
xchg
in
imul
mov
mov
rcrl
rorb
mov
sar
insb
add
sub
mov
leave
jno
jmp
dec
out
addr16
cmpsb
stos
call
mov
sbb
das
pop
test
stos
sbbb
out
sub
inc
mov
xor
xchg
and
mov
cmp
stc
xchg
in
pop
cmp
or
adc
push
lods
sbb
push
out
push
iret
fisttpl
dec
pop
inc
lahf
lea
cmpsl
insb
jle
rcrb
mov
lock
sti
rolb
arpl
lods
mov
loopne
inc
lahf
fs
mov
cwtl
pop
loope
lds
mov
jbe
xchg
mov
xor
movsb
pop
adc
jge
adc
pushf
rol
repz
sti
push
loop
jle
jmp
pop
clc
loop
stos
ror
mov
faddl
fcompl
jno
std
inc
les
int
pop
inc
std
or
jmp
fdivr
inc
inc
shrb
push
cmp
cmpsl
jle
movl
fs
int3
mov
lret
mov
fisttpll
xchg
out
dec
gs
clc
int3
pop
or
cmpsb
lea
inc
je
sbb
add
arpl
orb
outsb
adc
or
inc
xchg
xor
jns
pop
subl
sub
adc
and
hlt
int
jbe
sbb
out
pop
daa
fstl
or
lea
popa
cmp
sbb
and
jp
ss
jle
in
and
mov
xor
and
popa
mov
mov
push
push
adc
cmc
sbb
xor
jne
aad
out
push
add
loop
lods
jnp
mov
mov
mov
hlt
fidivrs
dec
mov
fisubs
and
cmp
cs
mov
in
stos
repnz
push
subl
test
xchg
push
lret
or
jp
insb
mov
inc
mov
outsb
xor
pop
mov
pusha
inc
aaa
add
adc
mov
jp
fistpll
call
push
addr16
fsubr
adc
lods
jmp
cmp
push
xchg
fcompl
xchg
les
ficoml
call
outsb
dec
lret
ret
ja
cmp
mov
mov
jae
ljmp
call
into
add
push
gs
shl
dec
push
mov
xor
dec
xor
fwait
cmp
and
popf
rcrl
and
sbb
dec
mov
inc
hlt
sti
sahf
mov
stos
js
je
xor
insb
sub
andl
cmp
or
aaa
shll
lock
pushf
cmpsb
sub
dec
inc
xor
stc
cmp
fadd
idivl
idivl
adc
and
mov
sbb
lods
dec
push
enter
lds
les
ds
outsb
sahf
mov
lret
pop
cmpsb
rcrb
rcll
push
pop
sbb
or
int
mov
sbb
jnp
mov
roll
jb
jno
xchg
xlat
inc
pushf
aaa
loop
mov
mov
add
dec
inc
movsb
arpl
addr16
and
shlb
sub
mov
jecxz,pn
hlt
jg
outsl
sbb
adcl
sub
dec
test
repz
jp
lahf
xchg
sbb
adc
xchg
inc
aas
dec
je,pt
pop
or
test
aam
sub
mov
cs
adc
push
mov
or
push
push
dec
and
mov
lods
roll
fnstcw
jle
jmp
bound
cs
or
cmp
clc
cmp
les
fsubrs
dec
out
lods
popf
and
dec
inc
xchg
aam
mov
lahf
pop
xchg
sbb
rorb
inc
add
fimull
imul
cld
pop
push
aam
mov
iret
fcomps
pop
cli
adc
rolb
icebp
mov
adc
fildl
int3
sub
ret
xor
fistl
hlt
int
mov
cmc
ret
push
xor
cmp
clc
ljmp
adc
mov
sbb
adc
add
mov
frstor
in
iret
sti
push
push
jae
pop
inc
xorb
or
or
gs
adc
cwtl
cwtl
mov
mov
cli
mov
or
mov
ljmp
or
shrl
gs
leave
push
shr
cmp
lock
sbb
mov
push
mov
jge
gs
gs
dec
jbe
das
pop
fs
mov
or
jle
adc
mov
push
int3
pushf
cmc
xchg
test
insl
xor
pop
stos
xchg
cmp
fmull
in
jae
leave
inc
cmpsl
add
sub
adc
mov
inc
stos
or
movsl
cmp
sbb
mov
mov
mov
mov
pop
popa
stc
test
mov
vmovaps
icebp
insb
and
imul
adc
ja
dec
pop
shld
cmp
or
mov
mov
and
jae
mov
test
mov
lock
push
les
xchg
in
icebp
and
movl
cld
pop
in
mov
jp
cmp
inc
bound
pop
icebp
jb
push
pop
xchg
xor
sbb
int
cmc
fsubl
mov
out
mov
sti
and
push
mov
inc
pushf
mov
pop
mov
js
xchg
mov
in
icebp
movsb
movsl
scas
mov
jb
insb
mov
pop
insl
dec
xchg
mov
push
mov
cmc
jecxz
testb
stos
or
inc
xor
xchg
in
xchg
repz
clc
and
cmp
push
and
or
fmull
or
ja
mov
jecxz
cmp
outsl
sbb
xor
or
mov
inc
pop
jo
imul
pop
xor
or
jl
dec
clc
lods
fwait
pop
sarb
xor
repz
mov
dec
mov
mov
mov
daa
rcrb
mov
pop
faddl
call
mov
ret
xchg
sbbl
add
fistpl
fldt
add
lret
push
sbb
push
stos
cmp
push
add
xor
daa
and
mov
mov
scas
push
and
mov
jecxz
or
lret
stc
addl
adc
mov
lds
js,pt
push
ret
scas
or
dec
mov
loope
roll
xorb
sbb
mov
lret
xchg
or
fcmovnbe
jle
adc
adcl
enter
pop
inc
and
and
push
and
insl
dec
cltd
into
je
cmc
shl
outsl
sbbb
out
mov
ja
iret
mov
sahf
in
sbb
add
mov
les
outsb
enter
sti
inc
push
and
dec
dec
cmp
push
mov
xor
sbb
gs
ja
sub
cld
pop
jns
mov
pop
and
jmp
cli
lea
in
add
mov
clc
mov
rol
and
clc
mov
mov
leave
out
sbb
pop
push
iret
cmpsb
pop
xor
adc
out
repnz
rcl
xchg
add
daa
inc
mov
lock
mov
in
and
and
in
sbb
or
xor
fstpl
mov
jl
int
mov
repnz
xchg
out
loope
sub
sub
pushf
push
sbb
mov
ss
popf
notb
cmp
xchg
repz
xor
inc
pop
shlb
inc
lods
ret
filds
mov
push
stos
ret
inc
mov
fmull
or
mov
shlb
int
push
jle
cltd
adc
dec
ja
test
fwait
push
shll
cld
adc
sysret
dec
and
add
xor
dec
and
rorl
push
pop
ljmp
enter
cltd
xchg
add
sub
nop
in
mov
cmp
xor
jecxz
je
push
cmp
nop
jo
mov
mov
add
add
or
movb
mov
aad
sub
imul
cs
das
cs
dec
popa
mov
test
cltd
xor
mov
mov
nop
arpl
mov
mov
cmp
inc
sbb
fwait
mov
test
outsl
dec
xchg
pop
jge
push
sbb
pop
shl
jmp
mov
and
fs
adc
stos
lods
leave
stos
adc
sub
testl
xchg
ret
add
cmpsb
add
ror
out
pop
jl
inc
or
shrl
xor
lods
push
loope
lcall
inc
jge
stc
shll
mov
jne
subb
and
repz
dec
nop
test
fldt
insb
push
sub
roll
popf
mov
mov
les
and
adc
xchg
push
inc
pop
mov
sub
ret
mov
sti
test
clc
push
imul
jo
or
jo
cmpsl
into
mov
push
iret
shl
jb
mov
mov
jb
push
mov
dec
les
scas
shlb
sti
jg
dec
aam
adc
popf
pop
xor
pop
es
and
loop
and
mov
stos
mov
clc
std
loop
ret
fidivl
jp
dec
lret
mov
mov
pop
dec
imul
xor
test
dec
cmp
xorl
lret
jp
sub
rclb
rorb
arpl
dec
fists
cmp
xchg
adc
mov
es
jge
xor
mov
fiadds
xchg
push
or
shl
movsl
xrelease
xor
imul
ret
mov
inc
int3
xor
enter
sbb
loope
addr16
mov
sbb
mov
xlat
mulb
movsl
sbb
push
inc
jne
mov
and
pushl
pop
lods
sub
sub
out
rep
nop
cmp
insb
jnp
jae
test
ja
jg
into
mov
cli
push
pop
jle
mov
lods
dec
push
xchg
push
leave
fsubrs
jmp
cwtl
fdivs
push
popf
out
loop
loope
mov
add
lds
insl
test
scas
in
nop
out
push
pop
les
cwtl
pusha
shrl
mov
arpl
jmp
inc
sbb
sub
sub
and
jecxz
dec
sahf
rclb
popf
sbb
adc
push
icebp
in
in
push
add
xor
repnz
add
dec
gs
mov
loop
stc
arpl
cmc
mov
scas
add
int3
stos
scas
roll
pop
cmp
and
je
pop
out
mov
mov
cwtl
mov
mov
outsl
and
and
lret
ljmp
add
outsb
pop
xchg
out
jne
cmp
mov
sbb
xor
mov
dec
mov
pop
insl
inc
orl
daa
mov
mov
cmpl
add
jge
jo
outsl
je
in
daa
cmp
popf
lods
pop
mov
pop
cmp
out
test
push
cmp
lret
pop
cmp
mov
cmp
mov
cmpsl
jge
adc
mov
sub
in
icebp
push
out
or
pop
enter
les
sub
push
sti
push
orb
inc
xchg
mov
mov
rcrb
adc
lds
add
frstor
jne
mov
inc
xchg
int
popf
daa
insb
out
and
pop
ljmp
ja
inc
dec
cmpsl
cmp
in
es
rcr
inc
mov
ja
cmp
out
and
jecxz
sbb
lcall
or
mov
pop
out
mov
loop
cwtl
repnz
mov
push
jmp
sbb
push
mov
mov
push
loope
or
mov
jge
adc
sbb
arpl
cmc
cmpsl
call
pop
jae
int
enter
lds
sarl
ret
inc
nop
in
ds
mov
mov
add
faddl
pop
pop
mov
jg
dec
fidivs
jbe
lds
inc
dec
ja
xchg
and
out
mov
mov
cmpb
loopne
push
loope
jne
insb
pop
fldcw
in
in
rcrb
adc
mov
pop
rcl
orb
and
adc
fs
shll
add
push
lea
out
or
in
data16
shlb
jbe
xor
lock
mov
lcall
jno
adc
and
in
fsubrl
cli
sub
dec
stc
and
mov
mov
mov
adcl
push
lock
fiadds
fcompl
rorb
out
mov
mov
popa
fisttpl
cmp
in
xchg
outsl
and
sbb
xchg
jne
push
jns
shl
fmull
daa
xor
inc
les
mov
mov
sub
add
mov
push
mov
mov
int
mov
out
push
or
fstps
in
mov
lds
stos
mov
ret
stos
rcr
adc
sub
fwait
push
xchg
ljmp
xchg
inc
out
nop
dec
jecxz
mov
mov
pop
pop
push
push
add
cltd
pop
mov
lret
repnz
std
sub
pusha
outsl
add
je
pop
mov
cwtl
xchg
and
and
in
das
dec
adc
test
mov
outsb
loope
adc
loop
xlat
fs
pop
push
mov
lods
into
sub
lret
mov
dec
lods
dec
or
mov
outsl
pop
in
cmp
test
mov
mov
push
cmp
lret
mov
cmp
enter
push
mov
lods
xchg
xchg
stos
and
das
sub
testb
jno
divl
xchg
dec
xor
icebp
enter
clc
push
enter
lea
jmp
mov
ret
and
mov
dec
mov
mov
jae
adc
stos
shrl
mov
inc
xor
in
push
sub
mov
out
mov
push
sub
fmull
push
dec
mov
add
push
repnz
ds
sub
mov
xchg
jle
pop
icebp
jbe
push
mov
or
inc
mov
jmp
sbb
mov
icebp
push
cwtl
lods
pushf
pop
sub
scas
pop
aas
mov
addl
mov
insb
bound
push
dec
aaa
sub
jecxz
cmp
les
mov
or
mul
in
inc
mov
jl
lret
push
cli
mov
mov
hlt
ds
test
mov
add
daa
imul
jbe
jp
loopne
sti
dec
cmp
sbb
sbb
scas
inc
outsl
loope
movsb
mov
dec
rcll
mov
adc
loope
sbb
cmp
stos
mov
mov
xor
sub
in
sub
dec
cli
mov
pop
call
or
out
adc
xchg
lock
jo
push
test
divb
mov
dec
div
push
xor
push
andl
inc
push
das
loopne
mov
ret
test
and
in
mov
fsubrl
push
inc
mov
xchg
cmp
pop
adc
aas
ficoml
outsb
jge
data16
jp
and
ljmp
jp
mov
ret
pop
mov
pavgb
mov
int
jns
jle
jo
sub
mov
sbb
cld
ljmp
mov
xor
lock
and
clc
imul
shrl
fcmovb
push
lds
push
gs
mov
and
std
mov
out
daa
movsb
xchg
lret
xor
dec
xchg
lret
mov
adcb
push
inc
gs
fstpt
xchg
mov
das
xor
sub
xor
fwait
loop
inc
fidivrl
mov
popf
sbb
jl
aaa
jnp
popf
jge
xor
jns
xor
sub
sbb
popf
bound
sub
jae
and
add
out
sbb
push
repz
stos
ret
xor
fnsave
mov
sbb
push
xchg
rolb
out
cltd
adc
pop
in
leave
sbb
daa
lock
movsb
sub
and
push
dec
sti
inc
xchg
psubq
lock
mov
cwtl
aam
or
pop
hlt
scas
mov
cmp
and
out
xchg
fildl
dec
enter
inc
imul
shll
cmpsb
and
xchg
into
mov
push
test
jo
lret
mov
and
lahf
dec
pop
iret
je
mov
stos
test
sub
jecxz
call
xor
jl
mov
mov
cmp
insb
js
adc
leave
cmp
js
dec
fs
mov
popl
movsl
xchg
pop
push
stos
cmp
enter
cmp
std
not
aaa
scas
les
or
popa
loopne
sub
pop
mov
loop
pop
imulb
jl
cmp
cmp
inc
jle
and
out
addr16
leave
mov
pop
mov
fcomp
in
adcb
push
js
sub
in
mov
cmp
cmp
jp
cmp
pop
notl
es
int3
imul
test
aaa
lock
rolb
cmp
or
mov
mov
fildl
clc
push
push
push
inc
mov
js
sti
fildl
addr16
fwait
inc
add
repnz
cmpb
mov
mov
rcl
jae
rclb
mov
cmp
repz
push
dec
cmp
stc
push
outsl
sti
aad
cmpsl
pop
inc
mov
sbb
les
mov
push
stos
rep
fwait
dec
sbb
enter
test
pop
out
jp
test
ja
leave
and
mov
jp
jl
stos
inc
out
insb
in
test
inc
stc
mov
cmp
test
xor
mov
sbb
insl
xor
loopew
jg
popf
out
jns
add
movsb
dec
pop
mov
pop
xchg
jo
lret
lock
sbb
jae
inc
push
mov
out
mov
sub
inc
out
repnz
dec
ret
mov
pop
dec
es
add
inc
sbb
sub
mov
add
lret
out
shrl
stos
fwait
dec
rorb
and
xor
subb
cmp
lods
sbb
cli
fwait
imul
in
dec
out
lods
adc
add
insb
movsb
push
arpl
lds
sarb
int
pop
lret
sbb
repz
out
mov
subl
in
test
sbb
outsl
das
loope
pop
stos
das
pop
and
filds
xor
int3
xlat
loope
or
sub
push
icebp
jmp
mov
dec
fxch
push
and
bound
aaa
jecxz
sbb
mov
mov
int
sbb
int3
adc
dec
cli
sbb
add
xor
xor
in
jb
sahf
xor
aas
sub
fistl
push
imul
inc
pop
jp
ret
jle
adc
std
cmpsb
sbb
push
xchg
jbe
add
enter
mov
push
das
sbb
in
push
test
movsb
clc
jae
cmp
pop
jl
lret
loopne
fwait
div
inc
add
inc
sbb
cmpsb
jbe
jge
test
bound
test
test
dec
mov
ss
rcrb
call
or
pop
xor
lock
lods
loop
outsl
fcmovb
popa
jl
andb
xlat
mov
cmpsb
lcall
pavgw
sub
xor
xchg
or
nop
hlt
ja
add
xchg
insb
add
lcall
adc
out
adc
dec
pop
insl
popf
push
mov
mov
pop
clc
int3
add
pop
mov
cmp
in
dec
dec
movsb
cmpsb
push
fcmove
xor
xor
xor
mov
rcll
test
cld
loopne
das
shll
cmp
pop
xor
lret
in
insl
cmpb
adcl
xchg
and
sbb
call
aam
lock
xchg
std
imul
dec
in
pop
out
enter
movsb
mov
cmpb
rcl
jp
adc
out
jo
pop
xchg
add
inc
sub
mov
stos
pop
mov
mov
pusha
aam
shrb
adc
xor
xor
mov
adc
dec
or
add
sbb
sbb
in
mov
and
daa
xor
and
push
hlt
xor
push
sub
xchg
bnd
inc
mov
dec
loopne
sbb
nop
sbb
xor
cmp
jbe
nop
clc
mov
lock
jns
mov
rep
pop
or
push
sub
push
aam
jae
mov
ret
addl
mov
adc
push
xchg
xchg
int3
lea
add
dec
std
inc
jno
jne
or
ljmp
and
inc
pop
adc
sbb
mov
cld
mov
inc
pop
and
xchg
das
pop
push
jle
pop
les
xchg
dec
aaa
xor
movsb
add
cmp
inc
xor
push
add
xchg
cmpsl
inc
or
cmp
push
imul
flds
push
dec
mov
add
dec
gs
pop
jp
push
in
sbbb
pop
xchg
xchg
sub
cmp
jno
fwait
jmp
xor
sahf
fucomi
sahf
stos
mov
cmp
mov
xchg
lret
push
mov
pop
cmpsb
cwtl
orl
push
inc
hlt
inc
loopne
lahf
jl
inc
sbb
pop
jae
int
xchg
call
clc
inc
cltd
loop
or
mov
scas
loope
and
and
mov
cld
mov
and
mov
jnp
neg
cwtl
mov
xchg
adc
cmp
and
dec
inc
or
mov
xor
sbb
lcall
jno
dec
jae
loop
stos
shll
jl
mul
sbb
hlt
dec
add
lret
aas
jle
sti
add
ja
mov
pop
add
mov
xchg
push
in
pop
sbb
cmp
dec
outsl
aad
fidivrl
xchg
jl
xor
adc
ja
dec
mov
push
cmp
bound
xor
ret
mov
addr16
movsb
sbb
repnz
aas
xchg
sbb
adc
std
shrb
push
aad
xchg
pop
in
imul
and
pop
fs
cmp
pushl
daa
stos
test
push
sarl
jae
xor
ret
sbb
icebp
iret
inc
dec
mov
imul
xchg
push
mov
mov
pop
adc
add
subl
repnz
push
subb
mov
adc
sbbl
xorb
pop
jp
sbb
xlat
lods
out
mov
add
pop
inc
mov
rclb
test
mov
lods
insl
pop
int
scas
and
test
jp
mov
jb
pop
std
shll
fwait
icebp
shlb
dec
push
mov
push
test
in
sbb
or
or
xor
sub
mov
fcomps
push
movsl
stos
cli
jmp
nop
into
iret
pop
sti
in
mov
cmovle
xchg
cmp
xchg
faddl
sti
adc
mov
andl
std
adc
icebp
divb
aaa
roll
xchg
shr
jnp
clc
pop
pop
call
sbb
movsl
and
test
insl
mov
mov
cltd
aam
inc
in
mov
cmp
cwtl
sub
xchg
pop
rcrb
in
sub
movsb
scas
arpl
int3
les
sbb
push
pushf
adc
fimuls
xchg
sub
and
pop
adc
aaa
xchg
push
mov
cs
stos
mov
xchg
movsb
add
cmp
test
jge
mov
jl
push
xor
dec
aaa
mov
gs
aad
xor
jl
aas
inc
in
adc
xchg
xor
dec
fiaddl
iret
mov
dec
aas
push
fiadds
jmp
cmpb
loope
push
dec
push
sub
rol
dec
ja
xchg
cmp
int
mov
lcall
inc
jl
cmp
sbb
icebp
dec
sub
test
adc
lds
adc
or
stc
cli
arpl
lods
xlat
or
push
jb
mov
popa
and
lret
fwait
lds
cwtl
pusha
push
mov
je
repz
mov
shl
aas
mov
mov
mov
mov
ret
xchg
jnp
lret
and
sub
pop
gs
mov
bound
repnz
push
cs
inc
mov
adc
mov
aaa
jne
fdivrl
xor
push
xchg
mov
dec
add
imul
test
test
pop
imul
xorb
dec
push
push
mov
hlt
pop
push
mov
jb
insb
movsb
mov
pop
mov
incl
iretw
lods
pop
in
and
mov
loop
add
cld
push
push
out
sbb
pusha
jle
adc
mov
cltd
jle
test
fsubrp
hlt
repnz
push
outsb
or
mov
fstp
pop
sbbl
and
ja
mov
inc
in
dec
xchg
fst
lcall
ror
add
jns
xor
shlb
mov
jg
inc
icebp
mov
pop
pop
add
or
les
cltd
in
mov
or
inc
push
mov
fdiv
inc
inc
push
test
arpl
enter
call
cld
add
add
sbb
mov
jl
data16
rep
scas
dec
andl
dec
leave
je
push
push
insl
jnp
pushf
and
into
icebp
mov
sub
insb
sub
mov
inc
jnp
rolb
inc
add
stos
push
xchg
add
mov
movsb
je
jge
dec
mov
sub
jmp
adc
in
cltd
and
les
testb
rcrb
fsubr
stos
inc
mov
int3
leave
pop
inc
mov
dec
mov
ljmp
test
jbe
add
or
js
dec
adcl
cmpsb
icebp
sbb
fs
and
andl
js
test
mov
push
inc
and
rcr
adc
pop
mov
mov
mov
inc
andb
pop
bound
int
cli
pop
into
jae
dec
jns
int
std
out
mov
int
call
roll
push
sbbl
stc
add
lock
adc
aam
mov
adc
popfw
stc
std
popf
cmp
mov
mov
insl
add
lods
inc
xchg
jae
cmp
add
push
leave
lret
or
cmc
mov
test
daa
inc
fisubl
lds
mov
sbb
add
icebp
je
loope
mov
add
jle
add
int
sub
cmp
mov
mov
lret
dec
jmp
or
xchg
in
ficomps
push
int3
mov
pop
jp
scas
stos
hlt
jl
jmp
clc
or
xchg
dec
and
cmc
cvtps2pi
aaa
lods
xrelease
mov
xchg
adc
mov
mov
test
lahf
cltd
jno
cmpb
js
lret
test
mov
cmp
clc
insl
dec
jbe
fldenv
add
repz
test
sub
lret
cmpl
and
or
loopne
sub
push
mov
inc
fmul
inc
and
lock
cmp
fldenv
dec
sbb
sahf
push
in
push
orl
jne
pop
mov
sbb
in
shll
je
cmpb
pop
inc
mov
xchg
xchg
and
mov
jmp
push
ljmp
sti
jnp
jl
pop
xorb
xor
loopne
push
add
inc
outsl
loopne
push
aas
mov
mov
adc
stc
testb
pop
lods
pop
or
lret
das
inc
dec
or
cmc
mov
sahf
cmpsl
mov
loopne
gs
mov
mov
add
sub
out
sar
shlb
or
cmp
jmp
int
cltd
pop
and
mov
push
inc
aaa
ror
adc
jmp
insl
or
xor
jns
leave
popa
mov
pop
mov
jmp
dec
xorl
iret
pop
push
cltd
insb
add
cmpsl
in
push
repz
xor
shl
xlat
push
push
pop
jno
pop
xor
push
lahf
clc
in
jg
sub
sbb
xchg
outsb
data16
repnz
xchg
test
in
xor
mov
lock
add
cmp
mov
mov
xadd
nop
push
lock
lret
push
scas
mov
push
shrl
jp
repnz
shl
dec
xchg
add
add
lock
cmp
sbb
pop
push
xchg
jecxz
sub
ret
rol
subb
mov
aas
push
ljmp
mov
sbb
loope
pop
inc
rcl
fidivl
js
jno
xchg
aas
arpl
add
xor
sbb
bound
sti
test
mov
push
adc
pushf
jb
or
rorl
test
clc
cld
mov
aad
push
pop
dec
sub
imul
jg
inc
rclb
fisttpl
mov
in
adc
jmp
inc
cmp
ret
pop
les
stc
adc
bound
jns
repnz
and
ficompl
lahf
fimuls
cmp
adc
movsl
jnp
push
sarl
inc
and
lret
push
push
std
mov
push
fistpl
incb
out
jle
adc
aam
pusha
in
aam
mov
pushf
and
pop
sbb
gs
adc
xor
push
jbe
arpl
push
imul
cmp
push
pop
pop
mov
sbb
mov
test
in
jmp
mov
nop
ds
mov
aas
or
adc
lahf
leave
sub
and
mov
loopne
movsb
shl
mov
mov
dec
and
imul
push
inc
cmp
jb
pop
mulb
sbb
sub
out
sub
inc
lea
mov
sub
mov
mov
shll
push
mov
mov
inc
mov
inc
pop
push
int
insl
jmp
test
clc
sub
pushf
mov
lcall
and
xchg
or
dec
jp
idivb
in
fidivrs
pop
and
push
jmp
movsb
gs
rorb
add
jnp
push
pop
pop
push
fwait
in
cmc
inc
test
sub
and
xor
sbb
inc
ret
movsb
aam
cltd
fstpt
mov
or
mov
push
adc
outsl
push
jge
jl
mov
cmc
adc
out
adc
outsl
and
pop
popf
nop
xchg
mov
mov
mov
push
adc
xchg
or
mov
mov
push
sahf
lret
cmp
gs
stc
ficoms
xor
inc
pop
lods
cli
shll
lea
xor
arpl
out
lods
jns
daa
mov
cld
add
mov
push
rcrl
mov
shr
or
jp
bound
cmp
repz
mov
add
mov
xchg
out
inc
jp
mov
add
jmp
je
in
adc
xor
xor
cmc
cli
std
mov
dec
lret
sbb
and
enter
aaa
pop
mov
rcr
or
out
out
dec
inc
dec
dec
jno
loopne
ljmp
notl
mov
enter
mov
inc
ret
cmp
sub
push
cld
push
popf
imul
mov
out
aaa
xchg
xor
jle
icebp
inc
fs
adc
mov
pop
or
stos
stos
and
or
adc
sub
stos
cmpl
sbb
mov
cld
outsl
in
subl
xchg
lcall
nop
mov
int3
dec
add
dec
mov
inc
addl
mov
outsb
std
push
cs
iret
cwtl
adc
mov
pop
inc
sub
jo
jmp
mov
int
cmp
mov
loop
dec
push
add
pop
or
push
xor
fbstp
sbb
fadds
cmp
dec
adc
cs
push
les
push
mov
xchg
fucom
xor
jmp
mov
cwtl
roll
aad
pop
fdiv
mov
sbb
mov
movsb
orl
into
adc
fnstcw
sbb
or
pop
jae
aas
push
lock
mov
push
js
sub
inc
pushf
inc
xor
out
sarb
popa
mov
out
mov
sub
fisubs
pusha
pop
pop
xchg
test
mov
and
cmpsb
mov
jno
pop
or
scas
jmp
sbb
dec
adc
lods
fistl
mov
push
cmpsb
int
mov
fs
stos
cmp
daa
add
fsubl
sub
xchg
cmpsb
arpl
or
inc
rorl
push
push
ss
and
scas
icebp
jbe
cmp
scas
mov
xchg
xchg
enter
shlb
inc
add
push
jb
loopne
insb
clc
xchg
jl
ss
outsb
add
xor
cmpsl
xor
adc
xchg
lret
ljmp
lahf
bound
cmp
mov
imul
les
adc
add
mov
icebp
sub
pop
std
push
push
daa
arpl
pop
ja
call
test
idivl
cmpsl
aam
adcl
or
inc
sub
aaa
pusha
jmp
ss
gs
mov
cmp
test
ret
jbe
lcall
push
sbb
popf
dec
shl
mov
and
ja
outsl
push
adc
mov
xchg
pop
add
push
mov
outsl
xor
dec
ret
cmp
movsl
mov
xchg
stos
inc
into
pusha
mov
lods
mov
shr
and
inc
enter
ret
xchg
inc
fbstp
leave
inc
out
sub
ss
iret
mov
sbb
pop
fisttpl
ret
repnz
ret
int
cwtl
dec
adc
or
les
mov
sub
lcall
rcrb
cmp
rorl
lcall
lods
adc
mov
das
push
scas
add
outsb
stos
stc
addr16
leave
xchg
test
inc
cmp
ja
sbb
push
mov
dec
push
and
aam
xor
cmp
jb
iret
ljmp
jmp
out
pop
fidivrs
add
dec
or
ds
add
mov
mov
dec
rolb
test
sar
cmp
lret
outsl
dec
outsl
test
mov
cmpsl
lea
lods
andl
xchg
das
in
mov
hlt
sbb
jno
or
jno
cmpsb
and
lods
cmp
sbb
push
call
xor
loope
dec
insl
dec
push
mov
stos
pop
push
jg
xor
pop
adc
int3
stos
mov
adcb
cmp
mov
push
dec
lea
dec
jb
outsl
test
push
or
rolb
jb
xchg
lock
sarl
jne
clc
or
js
jo
fs
or
mov
repnz
in
jae
push
lcall
imul
ljmp
gs
imul
sub
nop
jle
add
das
lods
xor
sub
cwtl
mov
dec
mov
add
xor
outsl
jp
jbe
out
popa
ds
loop
mov
pop
jno
movsb
daa
shll
aaa
dec
xchg
fwait
or
xchg
test
adc
push
cmp
mov
push
stos
dec
aam
loop
inc
add
out
push
in
mov
sub
xor
ljmp
add
lret
into
sbb
aam
lcall
call
cld
adc
out
test
fcmovne
fs
dec
or
and
testl
sbb
lea
lods
sub
inc
rcrl
int
imul
dec
pop
test
cli
add
jb
loope
enter
fadd
mov
pop
pop
mov
orb
adc
int
test
inc
std
jmp
mov
pusha
adc
arpl
leave
sub
aaa
dec
loopne
cmp
inc
pop
and
xchg
mov
nop
cmp
lret
sub
sbb
mov
jmp
push
ds
push
and
neg
lock
ret
xor
lock
sbb
sub
idivl
por
mov
cmc
dec
adc
lcall
shlb
shl
sub
out
mov
mov
or
jle
jae
sbb
lds
icebp
push
ss
push
imul
rorl
shll
mov
inc
je
mov
ss
mov
loope
mov
jle
leave
lcall
sbb
cmpsl
cld
rol
cmp
lods
negb
ret
movsl
and
fwait
push
cmpl
inc
push
push
adc
jmp
and
jmp
faddl
jb
inc
mov
sub
pushf
outsb
push
sbb
aas
fisubrl
fcoml
cmc
add
movsl
in
jo
icebp
les
decb
cltd
scas
mov
out
test
in
sbb
sar
add
data16
les
pop
lea
xor
or
in
lods
out
int
cmp
dec
and
ds
mov
sbb
xchg
push
adc
fildl
ret
sub
push
xchg
jge
sub
dec
mov
sahf
imulb
sub
rcr
imul
add
mov
test
outsl
push
cs
sbb
ss
fs
xchg
pop
dec
xchg
addr16
jns
mov
mov
repnz
arpl
sti
jo
test
scas
out
ret
xor
insb
lea
loopne
or
mov
cli
sbb
push
lcall
xchg
iret
mov
andb
outsb
or
jg
pop
movsl
das
int
pop
dec
xchg
push
and
lahf
push
mov
scas
lds
and
push
inc
clc
ret
cli
sbb
sub
add
or
pop
xor
es
js
xor
mov
cmpl
inc
fsubp
xchg
mov
std
cmp
cmc
mov
mov
pop
call
sub
addb
out
shl
enter
and
aas
into
rorb
push
pop
ret
jmp
cmc
scas
sub
mov
push
and
mov
testb
cld
scas
cs
test
in
movsb
test
and
out
mov
movsl
aad
dec
clc
mov
mov
into
in
push
scas
inc
mov
cmp
out
inc
xchg
mov
bound
rolb
ret
pop
ja
int3
push
sbb
cmp
adc
pop
repz
pop
dec
xlat
or
pop
jo
adc
inc
ror
mov
sbb
sub
lret
lds
jp
js
imul
inc
mov
dec
jo
stos
push
dec
int
jle
cwtl
ret
fistl
sbb
orb
cltd
test
hlt
jae
daa
idiv
fildll
dec
jp
loop
pop
mov
sub
cmp
inc
leave
cmp
mov
leave
cmp
inc
cwtl
or
cmp
test
cmpsl
pusha
sbb
cmp
fs
push
scas
lret
pop
cld
fbld
inc
loop
cmc
lods
enter
hlt
fs
je
fisubs
mov
stc
aas
push
mov
sub
inc
xchg
sarl
and
stos
in
daa
and
int3
pop
inc
pop
pop
scas
sub
outsb
fbld
mov
xchg
add
repz
adc
loopne
xchg
aas
jmp
data16
adcb
mov
sbb
repnz
mov
clc
push
repz
jns
scas
icebp
popf
ss
incl
fsubs
cmp
repz
repz
push
cmp
adc
mov
shlb
and
out
mov
lods
fildl
xor
lcall
lods
repz
pusha
mov
nop
xchg
jns
xor
jbe
ret
xor
jmp
fs
idivb
std
lcall
scas
pop
cmc
int3
addl
aas
movsb
sub
rcrb
cmpsb
jl
loope
je
shr
js
loopne
inc
aas
jecxz
inc
call
or
jecxz
adc
xlat
rcrb
pop
ss
mov
into
or
imul
pop
jbe
xchg
mov
jae
inc
inc
jae
xchg
lahf
in
fs
push
jae
scas
scas
push
test
or
mov
cmp
sub
dec
fistl
repz
mov
add
stc
pop
movsl
fisubs
sub
sbb
into
xor
jle
ffree
jne
or
mov
mov
mov
mov
or
push
out
mov
mov
mov
mov
stos
inc
push
call
inc
cld
pop
fwait
cwtl
hlt
xchg
and
fs
mov
and
mov
adc
scas
popf
add
es
les
push
jae
or
icebp
popf
dec
mov
cmpsb
jge
jnp
aas
inc
sbbb
aad
lods
hlt
repnz
test
adc
jb
mov
fcomi
sub
cltd
mov
fidivrs
loopne
adc
cmc
call
add
out
outsl
add
pushl
gs
mov
pop
mov
xlat
lods
add
movsb
and
inc
fnsave
mov
push
lret
insl
cmp
mov
aaa
sbbb
nop
cld
xchg
cltd
and
sbb
lods
cmpb
inc
and
sub
movsl
jno
jno
jmp
es
dec
shll
mov
stos
dec
push
sti
rolb
or
sahf
xchg
push
cmp
push
jae
jae
outsb
jnp
stos
iret
jbe
inc
cmp
mov
gs
rolw
xlat
pop
mov
arpl
push
xor
dec
mov
sbbb
add
add
ficomps
sub
stos
add
push
lods
add
hlt
dec
push
jmp
popf
sti
je
dec
bound
stos
adc
stos
push
jl
sbb
and
adc
fcmove
fstpl
xchg
inc
fwait
scas
lods
cmp
jb
loop
jecxz
sti
in
leave
mov
movsb
int
and
mov
repnz
fwait
scas
push
fldz
out
cmc
and
enter
jne
dec
cmp
pop
cmpsb
jge
sub
mov
sets
pusha
or
jmp
sub
sarb
mov
xchg
push
scas
les
outsb
inc
inc
jp
and
cltd
cmp
jne
xor
ret
sub
icebp
fmull
mov
lret
out
sbb
cmp
pop
or
jbe
dec
aad
xchg
mov
push
in
dec
inc
xor
fadds
jbe
lahf
mov
pop
dec
fldt
mov
ja
orb
movsl
aam
or
adcl
mov
jbe
mov
ret
sahf
les
xchg
jne
push
ljmp
cwtl
inc
das
jl
cltd
jecxz
ss
sub
sub
cmpsb
mov
into
lods
adc
fmul
scas
push
push
sub
mov
push
outsb
int
sub
jmp
decl
mov
insb
xor
cwtl
xor
jl
or
or
int3
push
loope
and
adcb
mov
stos
lods
loopne
sub
xchg
popf
lods
aas
dec
or
inc
jb
ja
push
popf
in
jp
mull
xor
mov
stos
and
jae
mov
loopne,pt
sub
jnp
out
inc
sub
loope
mov
insb
ret
cmc
les
int
xchg
movsb
dec
xor
pop
push
sub
dec
mov
ret
arpl
jp
nop
loopne
lock
ljmp
stc
stos
pusha
aaa
daa
xor
mov
fiadds
or
push
mov
mov
std
mov
push
fnstsw
cmp
sbb
and
inc
les
pop
pop
cmp
and
mov
jo
jnp
ret
and
mov
mov
mov
mov
fbstp
sbb
mov
jno
cmpsl
lods
das
in
call
lds
mov
adc
inc
gs
hlt
sbb
xor
xlat
stos
inc
shr
and
pushf
dec
inc
cltd
mov
clc
add
or
xchg
push
sti
push
mov
mov
dec
sub
inc
jo
push
jmp
cmpsl
mov
or
mov
xchg
add
and
enter
jp
ja
sub
mov
lret
mov
sahf
je
xchg
and
mov
jo
pusha
pop
jne
popf
mov
int
inc
push
and
icebp
push
dec
inc
out
ror
sub
call
ljmp
or
and
icebp
mov
dec
xchg
inc
jb
stc
push
ljmp
into
roll
cli
mov
gs
dec
mov
daa
sbb
call
jecxz
push
sub
adc
nop
sbb
mov
inc
xchg
sbbl
mov
add
push
cltd
ds
lock
je
loope
inc
std
mov
ss
mov
hlt
nop
roll
icebp
pop
jmp
or
and
inc
fidivs
shrl
lods
ffreep
inc
cmp
es
test
hlt
mov
call
cmp
mov
call
xchg
push
or
lods
int3
cli
int3
popa
push
sbb
ljmp
xor
jbe
clc
push
mov
cli
jg
cld
add
jmp
mov
outsl
sarl
xchg
shll
pushf
fwait
or
jno
mov
sbb
sbb
scas
in
faddl
scas
sub
mov
adc
inc
fwait
or
xchg
inc
cmp
mov
cli
frstor
addr16
sbb
cwtl
cmp
call
pusha
stos
loopne
lahf
push
dec
imul
rcll
aas
insl
xchg
mov
or
out
addb
cmc
add
es
pop
loopne
call
add
sbb
mov
ret
lcall
into
cltd
or
call
adc
lods
pop
push
mov
push
adc
jne
xchg
mov
and
jmp
jbe
movsl
push
mov
or
adc
mov
into
int3
popa
inc
out
jg
imul
mov
sub
es
push
ret
jl
loope
rorb
daa
pop
scas
inc
cmp
sub
adc
adc
rcl
jae
lods
mov
leave
jmp
icebp
or
shlb
enter
mov
or
ljmp
sub
out
dec
add
pop
loop
adc
stos
and
pop
jno
movsl
mov
mov
mov
imul
xchg
inc
aam
inc
dec
jo
dec
cmpsb
inc
lods
jbe
xor
orl
test
jo
in
aaa
dec
and
xchg
pop
push
fisubrl
lahf
test
sub
cmp
inc
xchg
cmp
scas
or
push
imul
std
push
rcrb
in
pop
bound
arpl
call
lods
sti
dec
mov
push
dec
sub
lcall
ljmp
dec
mov
fldl2e
or
cltd
int
mov
cli
cmpsl
lods
mov
icebp
hlt
cli
lcall
in
adc
dec
push
cmc
mov
add
adcb
push
fsubl
dec
in
jecxz
imul
lcall
jae
add
mov
aam
add
jnp
mov
dec
mov
imull
mov
aad
fiadds
pop
pfrcpit2
adc
je
lds
outsb
mov
nop
mov
rolb
jp
mov
pop
pop
inc
add
out
mov
mov
das
std
jmp
push
dec
outsl
in
test
fnsave
xchg
shrl
sti
mov
fsubrl
or
iret
ret
cli
sbbb
insl
xchg
pop
inc
sub
mov
pop
stos
enter
das
fmull
lret
fwait
jle
jg
push
leave
push
jl
es
jnp
mov
xchg
cmp
jmp
push
bound
sbb
ss
mov
or
mov
sub
xchg
sub
xor
add
sub
sub
xchg
mov
mov
mov
sbb
lahf
xchg
adc
jmp
inc
fs
sbb
xor
fidivs
mov
es
jge
fcmovne
outsb
xchg
mov
inc
movsl
cmp
push
test
scas
inc
mov
push
rcll
inc
mul
mov
add
data16
jnp
add
ss
adc
jg
xchg
test
movsb
cltd
jl
push
sarb
jmp
and
mov
std
icebp
xchg
addb
mov
or
jns
sbb
sbb
ljmp
movsb
sub
lcall
scas
jns
mov
ljmp
aas
push
popa
in
lock
dec
call
inc
sub
xchg
fidivl
push
ficoms
inc
das
cmp
pushf
cmpsl
mov
subl
aas
dec
cld
lods
sub
negb
jecxz
mov
repnz
jmp
pop
scas
inc
dec
leave
call
or
movsb
xor
lret
xchg
lahf
add
popf
pop
jae
xchg
test
pop
xchg
inc
push
loopne
jp
xor
or
jmp
inc
xor
mov
sub
in
shlb
gs
loopne
mov
lcall
int3
xor
movsb
pop
ret
hlt
rcll
mov
lods
xchg
cli
mov
jmp
mov
frstor
pop
addl
mov
jle
mov
adc
and
daa
adc
dec
xor
cmp
xchg
mov
out
ret
pop
cmpsl
dec
jl
daa
dec
sub
push
pop
mov
hlt
ret
mov
hlt
js
sub
jge
test
insb
sarl
aaa
xchg
and
test
iret
jnp
sbb
in
xor
cmp
xor
push
mov
or
push
je
lcall
jle
sbb
jg
gs
out
xor
mov
adc
sbb
jmp
xchg
test
or
adc
jmp
leave
repz
pop
xchg
sub
fcoml
pop
das
jo
push
insl
outsb
inc
cmp
push
cmpl
mov
xor
adc
imul
arpl
loopne
test
stc
jge
mov
lds
mov
cmp
notl
jp
aam
aad
mov
lods
lahf
xlat
jmp
mov
fisubrl
cmpl
fwait
push
outsb
loopne
xor
fimull
shll
adc
add
cwtl
mov
lods
adc
outsl
xchg
lret
jno
push
lea
and
ds
add
mov
rclb
dec
pop
dec
fxch
cmp
into
add
icebp
cmc
in
fldl
or
ljmp
push
lahf
popf
dec
sub
and
xchg
int3
loopne
andb
in
or
pop
mov
mov
push
rcrl
shr
pop
mov
cmp
fwait
mov
jmp
lds
mov
imul
mov
sbb
int
inc
dec
fcoml
gs
sub
fwait
sub
mov
mov
dec
pop
jns
xor
int
test
rcr
xchg
in
xchg
xlat
push
mov
popa
les
jecxz
movsl
sub
sti
add
or
loope
clc
or
loop
test
out
xchg
mov
cmc
mov
or
js
jge
movsb
adc
mov
icebp
fbld
testl
neg
or
lret
imul
mov
pop
push
into
sahf
mov
cltd
je
add
mov
loope
pop
fwait
out
xor
addl
fwait
mov
jns
mov
mov
sar
lcall
cmp
addr16
or
dec
out
stc
adc
mov
mov
or
inc
icebp
xchg
in
fwait
dec
inc
xlat
adc
jae
aam
inc
push
stos
aam
stc
stos
imull
mov
rcrb
jne
sub
es
dec
lea
mov
mov
pop
jmp
and
in
int3
popa
int3
out
in
mov
mov
and
mov
out
dec
fwait
addr16
mull
lea
mov
test
jg
data16
insb
lock
outsl
inc
sub
xor
fcmovnb
lret
add
mov
mulb
mov
out
push
hlt
mov
inc
bound
je
sub
add
sbb
jmp
add
in
test
stos
mov
cmp
ret
int3
lea
arpl
jae
mov
popa
aad
jo
sbb
pop
add
daa
dec
mov
ss
jmp
mov
gs
pop
xor
add
cmp
add
push
adc
pusha
add
arpl
push
inc
lret
or
dec
jg
mov
test
inc
ja
incb
add
dec
jno
dec
lods
add
xlat
mov
mov
pop
les
mov
mov
sbb
jno
push
test
aam
iret
or
mov
add
scas
dec
clc
or
bound
repz
jno
xchg
pop
xchg
jge
daa
daa
iret
pop
aad
sahf
jmp
pop
mov
call
outsl
sbb
cmp
pop
dec
out
push
scas
loope
insb
aaa
xchg
mov
ret
negb
lahf
jecxz
pop
mov
in
mov
ret
cmp
mov
xchg
mov
add
mov
in
xchg
sub
aas
pushf
std
mov
pop
sti
pop
add
rcrl
push
dec
dec
or
inc
pop
in
test
push
fwait
xor
test
sub
mov
in
xchg
jl
mov
imul
push
gs
mov
les
ret
or
xchg
cltd
and
inc
and
mov
test
sub
aaa
movsb
sub
push
mov
pushf
mov
ss
and
mov
ret
adc
cmp
dec
enter
dec
cld
push
dec
in
sbb
shrl
xlat
xchg
cltd
pop
loop
push
jp
adc
mov
mov
imulb
enter
imul
test
jmp
test
scas
push
into
gs
add
cmova
add
or
notb
pushf
repz
dec
dec
pop
adc
test
lods
les
add
int3
int
pop
mov
add
pop
fnstsw
jl
push
loop
add
cwtl
out
idivl
sbb
cmc
jp
loope
or
iret
outsb
or
int3
fs
dec
mov
mov
cmp
inc
mov
pusha
scas
xchg
sub
dec
pop
jmp
cmp
movsl
sbb
cmp
jp
xor
inc
fsubl
sub
sbb
push
jb
getsec
xor
adcl
pop
push
mov
cmp
cli
mov
sbb
stos
inc
in
icebp
adc
xor
outsl
push
sub
sub
push
insl
icebp
fmul
shl
dec
xchg
mov
loopne
xchg
cmp
xchg
mov
out
int3
jle
push
add
sub
xchg
icebp
mov
testl
xchg
insl
fs
mov
mov
add
fisubrs
mov
cli
int
data16
in
mov
aad
fdivs
lret
mov
sbb
fldl
mov
mov
add
mov
clc
add
icebp
mov
es
xor
out
push
xchg
std
lret
jmp
std
leave
adc
add
fucomip
add
sbb
xchg
mov
push
sub
scas
insl
fdivs
pop
rol
lock
pop
leave
loope
ljmp
cmpsb
inc
xchg
add
fisubl
stos
inc
pop
xchg
adcb
loope
lods
scas
icebp
add
xor
dec
in
mov
xlat
fstpt
pop
cmp
and
cmpsb
push
lret
dec
inc
aaa
inc
pop
mov
dec
mov
sbb
add
cld
push
dec
push
inc
mov
shll
mov
popf
ror
pop
lods
push
jb
js
lea
inc
inc
test
repnz
sub
loop
or
jp
adc
pusha
jae
and
mov
sarb
aaa
scas
add
sub
xchg
or
pop
mov
pop
outsl
inc
pushf
ljmp
bound
sub
jno
mov
mov
fcmovne
or
loopne
or
inc
in
and
mov
repz
iret
popf
inc
roll
jp
mov
adc
sbb
das
outsl
pop
or
dec
mov
iret
cmp
scas
aaa
add
insb
xchg
stos
cmpsl
lock
jns
daa
lret
insb
dec
jecxz
xor
ljmp
cmp
into
sbb
mov
les
pop
movsl
daa
or
rolb
mov
fistpl
lahf
fists
and
adc
xor
pop
xchg
mov
xchg
jae
mov
cmp
je
sbb
and
mov
push
push
mov
sbb
xor
mov
mov
jo
cmc
cli
sbb
fdivr
movsl
fsubrp
pushf
ljmp
xor
mov
mov
mov
stc
and
loop
adc
imul
jnp
pop
push
cmc
mov
pop
sub
leave
daa
les
in
lret
fstps
jbe
call
add
adc
mov
cs
mov
jecxz
jp
mov
lret
push
push
jge
push
jg
mov
imul
mov
cmp
xor
test
push
dec
aaa
sar
xchg
mov
cmpl
in
into
and
clc
sarl
mov
cmp
bound
lock
adc
xchg
ss
fdivs
xor
fidivs
add
sbb
push
xor
outsl
push
jecxz
lods
mov
pop
shlb
adc
cmpsb
jp
inc
mov
scas
stc
xor
imul
rol
inc
mov
aas
sbb
addr16
dec
mov
xchg
movsl
imull
inc
push
sbb
cltd
push
lock
int3
adc
cmp
inc
xchg
add
fwait
mov
pop
sbb
pop
dec
push
rolb
popa
xor
xlat
or
stc
jo
push
ja
xorl
inc
xchg
pop
hlt
jne
push
adc
aam
fadds
outsl
shlb
pop
inc
dec
push
out
cmpl
movsl
xor
cmp
loopne
mov
pop
jne
leave
push
in
pop
pop
and
xchg
sahf
sub
insl
stc
lcall
inc
inc
cmpb
call
scas
lea
push
jo
push
in
pushf
mov
sahf
sub
xor
mov
not
in
lret
add
scas
jmp
mov
jb
cmp
aam
sbb
xchg
js
enter
push
pop
pushf
inc
or
daa
icebp
and
push
fstpl
mov
add
insb
add
mov
stos
dec
mov
daa
scas
xchg
mov
jo
fcomps
pop
xor
ljmp
jns
out
data16
add
shlb
push
push
or
movsl
adc
mov
sahf
add
xchg
pop
loope
pusha
rdtsc
jne
mov
sbb
sahf
push
call
adc
xor
mov
mov
xor
push
push
bound
pop
pxor
adc
push
sbb
adc
popf
pop
gs
xchg
mov
fwait
outsb
fsub
inc
stos
lcall
mov
mov
es
jp
pushf
xchg
popf
pop
inc
xlat
lret
mov
insl
mov
pop
push
xor
sub
aad
push
xor
aaa
jmp
mov
add
inc
pushw
andl
jns
sub
and
mov
loope
sarb
mov
fistpl
ja
and
or
add
xchg
xchg
jb
inc
dec
inc
bound
icebp
mov
cltd
mov
cmp
fildll
push
mov
add
test
pop
outsb
mov
xlat
notl
mov
sahf
pop
addr16
repnz
add
daa
movsl
lahf
ja
sub
xchg
std
push
es
adc
xchg
push
mov
adc
add
in
test
stos
push
sub
mov
mov
ret
inc
push
pop
mov
add
sub
add
test
insb
add
dec
out
pop
cli
lret
xchg
sub
aam
roll
jmp
push
jne
mov
pop
ja
sbb
in
and
dec
lea
mov
xor
push
pop
cltd
mov
inc
popa
sti
movsl
mov
dec
scas
inc
sti
std
shrb
dec
stos
jb
add
and
push
fnsave
out
mov
sbb
jo
adc
sub
iret
mov
mov
stc
or
mov
push
dec
pop
pop
xchg
or
rcll
and
add
push
test
pop
or
rcrb
xchg
add
fisttpll
sub
jae
push
and
inc
movsl
pop
xchg
jecxz
adc
std
mov
cmp
and
pusha
cmp
pop
inc
nop
stos
ret
fimuls
in
fs
das
push
loopne
imul
mov
fs
mov
xor
or
in
adc
std
cmp
fldt
into
jp
sti
push
sahf
int3
out
or
mov
mov
xor
push
sbb
mov
test
out
mov
lds
jl
lea
nop
cltd
test
push
in
outsb
lcall
lret
pop
inc
shlb
loopne
mov
sahf
mov
jle
mov
push
loope
mov
aaa
or
enter
loope
int3
aad
push
ja
aam
stos
add
lods
sahf
ss
push
mov
xchg
sahf
fwait
int
fistpl
dec
inc
push
mov
push
inc
mov
js
pop
dec
push
mov
lock
xor
jmp
int
xor
push
mov
bound
add
jle
hlt
add
push
lret
cmc
sbb
add
cmpsb
sbb
outsl
out
call
pusha
icebp
mov
dec
mov
cmc
bound
xchg
pop
mov
sub
jmp
pop
inc
pop
popa
dec
dec
xchg
cmp
xor
jge
hlt
shll
into
pop
mov
jge
xorb
jmp
fwait
xchg
cmp
es
dec
gs
leave
popa
fistl
cwtl
loopne
fldl
in
gs
jns
and
push
imull
and
jno
mov
mov
dec
pop
mov
pop
js
push
lret
enter
ret
mov
rorl
mov
xchg
push
xchg
dec
push
push
mov
popf
sub
mov
rclb
and
sti
lods
mov
pop
xchg
sub
int3
fisubs
mov
xor
popf
ficompl
adc
cmpsl
fidivl
mov
xor
enter
cmc
mov
dec
pop
push
adc
mov
jl
sbb
sub
in
inc
or
xchg
add
fists
push
cld
and
repz
xchg
loop
pusha
stos
mov
adc
out
sbb
jecxz
inc
insb
sahf
mov
inc
sti
mov
testb
daa
push
cmc
sub
mov
or
rcrl
pop
and
cmp
and
sarb
jnp
mov
mov
sbb
mov
cmp
adc
or
push
mov
inc
or
hlt
push
ds
repnz
add
mov
mov
push
std
push
dec
xchg
push
mov
push
es
and
lret
ljmp
fbstp
mov
ljmp
ret
jp
movsb
pop
and
adc
stos
pop
push
mov
divl
movsl
pushf
out
shrl
scas
or
pushl
add
jg
fsubl
adc
or
imul
out
lea
lcall
ficomps
mov
push
fildll
in
ljmp
test
clc
sub
xchg
mov
inc
jmp
dec
mov
in
push
int
shll
adc
and
test
jmp
cmc
jp
xor
dec
jbe
mov
pop
jge
pop
les
xchg
pop
dec
mov
xchg
cmp
dec
pop
shr
adc
add
pop
out
shll
fwait
sub
dec
pop
enter
or
sbb
shll
pop
sbb
jl
loope
sti
scas
jne
outsb
and
push
je
lea
rclb
jno
aaa
dec
leave
enter
ja
sub
lock
pop
jns
mov
adc
call
ret
aas
das
mov
mov
inc
and
fnsave
cmp
shrl
adc
pusha
jmp
sub
add
ret
sbb
icebp
dec
cmp
cwtl
ret
or
in
sbb
push
loope
push
clc
adc
inc
push
dec
jecxz
cmc
mov
sub
sub
pop
mov
xchg
jns
aad
dec
adc
loopne
adc
sahf
mov
push
movsb
dec
xor
sbb
sbb
cmp
jae
sbb
std
cmc
outsb
inc
sbb
cmpsl
and
fadds
mov
adc
out
fwait
les
movsl
and
ds
lret
jae
jo
sbb
mov
jnp
jo
loopne
scas
sub
jecxz
lock
lahf
cmc
mov
xlat
and
fldenv
xor
push
jl
nop
inc
add
jb
gs
xlat
daa
mov
mov
mov
ja
adc
jg
mov
sbb
mov
mov
jno
adc
jge
inc
data16
in
pop
rcll
out
mov
cmp
push
mov
pop
push
inc
ja
push
adc
and
pusha
jno
sbb
popa
cmc
xchg
lret
popa
imul
fnstsw
aam
out
cmp
push
push
and
dec
mov
addr16
rcrl
pushf
mov
cltd
cmp
iret
das
sbb
je
jmp
stos
push
inc
or
mov
xor
aaa
sbb
daa
adc
cmp
ja
inc
mov
and
xor
daa
test
pop
mull
jecxz
pop
push
test
xlat
out
mov
pop
fcmovnb
into
push
xchg
leave
ret
sbb
daa
pop
adc
daa
in
rcrl
in
sub
xor
pop
pushf
xchg
mov
xor
inc
xchg
fcmove
ret
mov
mov
insl
xchg
clc
push
lret
or
scas
pop
xlat
lret
adc
dec
adc
add
mov
mov
aad
xchg
mov
lcall
notl
pushf
jnp
sub
adc
pop
cmp
xchg
lcall
setge
inc
add
dec
jle
mov
test
mov
jge
inc
outsb
stos
push
or
push
scas
jmp
jmp
add
pop
sub
out
leave
pop
mov
mov
int
scas
in
ficomps
cmp
lret
popf
test
sti
push
enter
cmp
xor
imul
jnp
push
cmp
inc
xchg
shrl
jb
xchg
and
insb
jg
pop
xchg
cli
negl
pop
sbb
xchg
push
dec
lret
fwait
lods
cmc
inc
or
lods
xor
dec
stos
sub
jmp
pop
scas
les
mov
jbe
fmuls
cmp
sub
pop
jo
mov
call
xchg
lods
stc
int
fisubl
jno
loop
sbb
in
sub
dec
xor
add
mov
lods
mov
mov
xor
push
std
enter
cmp
out
mov
bound
inc
lock
jle
mov
mov
mov
mov
mov
scas
push
shr
test
xor
orb
fcoms
pop
jns
insb
push
xchg
loop
adcb
pusha
add
imul
push
hlt
mov
sub
call
xchg
inc
repz
mov
cmp
mov
imul
stos
xchg
lcall
adc
sbb
jns
es
adc
mov
mov
mov
xchg
in
sbb
out
popa
sub
jecxz
push
or
scas
fs
pop
mov
and
adc
rcr
insl
mov
jbe
add
mov
xchg
dec
push
mov
fldlg2
cmp
jle
shlb
cmp
pop
insb
sbb
push
inc
mov
add
xchg
nop
dec
add
hlt
shrb
fs
push
mov
sahf
add
pop
nop
and
imul
inc
jb
pop
loope
jg
pop
add
iret
inc
xchg
out
mov
mov
es
mov
test
mov
fidivs
sbb
push
jne
inc
lock
and
jle
cmp
lods
cli
inc
mov
and
loopne
sub
ss
cmpsl
push
rorl
push
and
or
push
cltd
jle
stc
test
call
mov
aam
add
add
sub
daa
mov
out
mov
mov
addr16
mov
and
out
push
or
xorl
add
shlb
pop
int
xchg
loopne
pop
js
jecxz
gs
or
sbb
push
test
cmpsl
add
lret
jecxz
lret
lods
fsubl
test
xor
pushf
push
inc
push
fwait
aaa
push
repnz
inc
jecxz
jmp
sbb
in
jno
jle
push
test
dec
shlb
jne
rol
cli
sarl
add
mov
mov
jge
mov
add
xchg
mov
das
xchg
bound
shl
repnz
cmp
push
xchg
stos
lret
loop
test
test
sbb
cli
cmpsl
or
jo
hlt
and
out
cmp
clc
jle
divb
cmp
xchg
imul
jmp
jno
sti
out
mov
jnp
dec
cli
mov
pop
sbb
cmp
inc
insb
xlat
or
and
dec
push
sbb
pushf
lret
xlat
inc
and
cmp
jl
dec
dec
xchg
ja
jbe
dec
cs
inc
out
insl
pusha
pop
sahf
push
jnp
pop
fsubrs
iret
sub
stos
push
and
xchg
cmp
pop
sahf
mov
push
cmp
aaa
lahf
jle
jns
and
mov
or
xor
cmpsb
jae
rcrb
xor
out
repz
test
xorb
orb
ja
xchg
and
push
pop
cmp
sahf
xchg
outsl
xchg
call
stc
xchg
enter
scas
stos
mov
sbb
push
dec
jne
ja
sbb
xor
rorl
push
fsub
cltd
cmp
sub
mov
sbb
and
rolb
xchg
dec
sub
popa
pop
shrb
sub
cmp
sti
xor
int
int
ljmp
pop
stc
add
jmp
and
in
push
nop
fidivrs
and
mov
pop
cld
dec
das
inc
cmp
jno
jle
test
inc
push
jne
and
cmc
inc
xchg
pop
add
nop
pop
or
xchg
stos
push
xchg
xor
je
les
popf
in
rolb
fidivs
xor
insb
cld
xor
repnz
cwtl
xchg
and
bound
or
mov
idivb
stc
outsb
lret
mov
sti
inc
loop
and
push
or
movsb
mov
push
ja
sub
xchg
cmp
jno
addr16
rclb
clc
ficomps
roll
aad
repz
cltd
jnp
inc
push
jle
lea
daa
dec
int
push
cmpsl
dec
mov
or
into
rcrb
fwait
push
push
fists
xchg
jp
inc
in
fldcw
mov
sbb
leave
fsubrl
add
push
mov
repnz
xor
or
push
sbb
mov
inc
push
adc
repnz
insb
xchg
cmpsb
pop
xorl
push
push
nop
out
pop
int3
lcall
mov
mov
mov
jae
mov
push
mov
and
pop
loope
scas
dec
dec
sbb
pop
push
push
rol
insl
fistps
or
addb
movsb
add
ljmp
scas
dec
ficomps
pop
mov
inc
das
xor
cmpsb
ja
push
sbb
jge
lcall
mov
outsl
xor
int3
movsb
stc
rolb
sbb
enter
mov
dec
jle
mov
dec
addr16
xchg
es
xchg
or
repz
shlb
rcrb
stc
push
fcompl
push
mov
call
iret
dec
cmp
lods
pop
sub
fcompl
movsb
out
lret
rol
test
stos
nop
das
add
cltd
lret
mov
push
or
push
fiadds
js
xor
shrb
mov
push
fdivrl
and
cmp
add
fnstsw
insb
repnz
xchg
and
dec
dec
sti
shll
xlat
dec
pop
stc
fadd
icebp
xchg
sbb
je
cmc
out
fwait
fs
in
pop
cmp
push
popa
fildll
dec
mov
out
ss
outsb
mov
std
cmpsl
xchg
fs
lahf
aad
loopne
xchg
jg
fistpll
ja
jnp
jl
jae
mov
mov
outsb
lret
or
andl
or
cld
push
sbb
adc
jae
lods
lcall
into
je
cs
xchg
imul
add
and
pop
aas
ljmp
lcall
push
inc
and
adc
mov
add
outsl
dec
jecxz
jmp
aas
into
popa
aam
ss
xchg
mov
aam
stos
xchg
xor
test
adc
push
nop
inc
lods
imul
insb
jns
outsb
inc
dec
jns
mov
sub
test
je
outsl
ds
sbb
mull
and
stc
popf
movsl
sub
add
in
add
inc
imul
icebp
jno
popf
add
and
jl
pop
fildll
mov
pop
cmp
add
pusha
roll
adc
mov
fwait
scas
stos
out
add
xchg
std
add
xor
into
xor
dec
push
bound
xchg
pop
pop
xchg
imul
xchg
sub
cli
push
mov
pop
mov
rcrb
mov
xchg
cmpb
lods
push
into
and
adc
mov
pop
test
or
mov
xchg
push
mov
sub
mov
jns
inc
inc
mov
flds
lret
push
dec
out
out
gs
xor
mov
mov
test
cmp
fildl
int
movsb
push
lock
mov
jl
loopne
adc
cmp
mov
jp
fisttps
mov
mov
je
adc
xchg
xchg
fwait
in
and
xchg
nop
mov
call
jb
jns
stos
pop
into
xor
bound
add
out
push
mov
mov
pop
fisubrs
jge,pt
xchg
cmpsb
in
test
test
push
mov
testb
aas
je
fists
lds
lods
aad
dec
les
and
jl
aaa
out
testb
loop
sbb
push
out
dec
rcll
add
cmp
pop
shlb
xchg
inc
jle
dec
clc
lcall
adc
sbb
xchg
fsubr
mov
dec
filds
dec
ret
add
jbe
pop
jmp
fldt
iret
cmpsl
sbb
xchg
into
cwtl
cli
add
sub
xor
out
les
lea
xchg
dec
mov
ja
pop
ficomps
cmp
adc
les
adc
lods
mov
mov
call
mov
lahf
xor
adc
out
pop
xor
movsl
ret
bound
outsb
popl
aas
lea
sub
lcall
in
mov
sub
fldcw
test
aad
dec
mov
ja
andl
js
rcl
push
shrb
jecxz
insl
mov
lods
mov
inc
test
and
imul
stos
sbb
outsb
adc
mov
imul
scas
inc
mov
std
jl
sti
out
fwait
mov
cmpsl
jp
cwtl
or
adc
fwait
stos
sarb
ss
inc
push
mov
imull
jbe
aaa
xlat
outsb
arpl
inc
sub
inc
mov
mov
inc
or
push
nop
in
xchg
in
or
inc
ret
mov
or
dec
pop
and
mov
or
xor
mov
cmp
cmp
lock
lahf
mov
dec
repz
cli
xor
cmpsb
mov
lods
dec
cmp
mov
rcr
jne
std
fcomi
dec
add
inc
shl
pop
jns
adcb
loope
hlt
add
jmp
out
pop
cltd
test
xchg
xchg
in
cs
mov
scas
out
push
or
das
mov
clc
mov
and
inc
sbb
ret
mov
lahf
adc
insl
mov
cmpsl
in
xchg
ds
mov
pushf
cmp
and
dec
movsb
fs
inc
fldl
int3
cmp
pop
ret
jne
and
cmp
push
xor
push
repnz
mov
rolb
mov
and
scas
fstpl
into
push
sbb
xchg
movsl
adcl
int
jo
jae
pop
adc
xlat
int
cmp
mov
ljmp
mov
lretw
inc
out
mov
dec
icebp
imul
ret
ret
sahf
xor
pop
mov
test
jne
lock
and
cmp
enter
cmpsl
push
mov
sbb
inc
lods
jno
mov
dec
ds
cmp
ficoml
mov
add
std
xchg
sub
sbb
out
sbb
xor
or
jns
cld
mov
and
daa
nop
scas
push
xchg
pop
pop
sbb
dec
shlb
stc
xchg
cs
icebp
mov
push
push
or
or
jle
cmpsb
mov
mov
add
outsb
inc
dec
push
fimull
pop
sbb
mov
pop
jmp
lock
js
sti
push
pop
inc
ret
ljmp
hlt
fsubrl
jnp
cmp
mov
mov
ja
stos
jg
push
push
jmp
fstl
idivl
call
loopne
mov
inc
xor
push
add
testl
aas
lcall
and
mov
dec
movsb
shl
enter
dec
lock
xchg
imulb
shr
lods
adc
sbb
es
xor
les
xchg
in
cld
adcl
jo
mov
sbb
call
jo
ss
xchg
gs
xchg
dec
dec
loop
leave
cli
mov
mov
aas
dec
adc
push
inc
movsl
inc
jmp
fxch
adc
jl
add
fistpl
xor
shlb
testl
daa
sahf
stos
push
or
and
push
shl
addl
xor
xchg
adc
mov
jl
out
dec
jbe
and
push
inc
out
jmp
mov
jb
lock
lcall
mov
iret
aam
cmpsl
inc
insl
arpl
mov
test
and
jg
jns
push
mov
daa
fists
jmp
pushl
outsl
test
loope
xchg
sub
sub
scas
mov
inc
scas
pop
fimuls
insl
jae
lods
pop
into
xor
pop
lret
lret
cmp
pushf
lret
jo
pop
mov
stos
shrb
mov
xchg
add
cmp
hlt
les
xchg
cmpsb
dec
xchg
add
icebp
sbbl
in
movl
test
jle
daa
enter
mov
inc
pop
mov
insl
movsb
mov
incl
leave
aaa
add
insl
pop
cwtl
or
push
dec
out
stc
mov
push
inc
pop
inc
xor
out
leave
shrb
mov
test
xlat
and
mov
adc
inc
mov
mov
out
mov
xchg
ja
int3
sbbb
xchg
fwait
pop
movsl
inc
adc
or
nop
out
adc
sahf
test
xchg
push
aad
bound
shl
fsubrp
sbb
adc
ljmp
xor
mov
add
lods
dec
jbe
xchg
jne
xchg
filds
out
mov
test
xor
and
or
ljmp
pop
or
inc
jne
outsl
punpckhwd
sub
stos
xlat
mov
ret
add
or
cmc
call
fwait
add
jns
insl
lods
aas
cltd
adc
sbb
shll
cmpsb
push
jns
call
aaa
data16
sub
inc
xor
mov
jne
xchg
stc
xor
push
mov
stos
push
push
xbegin
lret
inc
mov
mov
jp
or
push
sub
pop
int
popl
aas
sti
lods
mov
out
ret
aad
jl
inc
aam
imul
sub
sub
paddsw
jg
jmp
js
ss
add
out
lods
add
add
clc
outsb
hlt
add
sbb
fcoms
jg
in
adc
mov
sti
stc
push
or
or
jg
add
inc
fisttpl
repz
sub
out
cmp
data16
ret
lds
out
add
leave
hlt
movsl
push
inc
mov
inc
test
dec
popa
insl
mov
shrl
mov
repnz
test
add
push
xchg
pop
inc
cli
pop
mov
jge
ljmp
pop
insb
cmp
rclb
rolb
cli
or
out
loope
rcrl
call
cmp
gs
xor
push
dec
test
pop
lret
xor
and
int3
int3
push
jno
push
lahf
sub
outsl
sti
cmp
xchg
mov
add
adc
mov
loop
xchg
test
test
jo
push
sub
scas
gs
jo
pop
popf
mov
out
mov
cmp
jle
push
mov
sub
mov
push
xchg
jbe
jecxz
imul
jns
popa
cmp
inc
push
fsub
shll
rclb
lret
mov
sbb
fmull
mov
loop
jmpw
lahf
mov
popa
xchg
push
test
pop
into
adc
rep
das
cmp
cmpsl
test
movsl
rcrl
stos
pop
aas
ljmp
and
das
cmpsb
or
les
mov
xor
sub
push
dec
std
fnstenv
mov
lret
popf
lds
xor
test
inc
imul
push
js
mov
or
mov
mov
xchg
add
cli
xchg
xchg
pop
aaa
jle
lret
jb
bnd
dec
cs
arpl
sbb
addr16
jnp
ljmp
inc
mov
add
jge
fmull
gs
mov
inc
adc
fcoml
or
mov
pop
lss
xchg
aam
jbe
enter
fsts
push
or
cmp
stc
mov
pop
dec
push
loope
inc
cmp
pop
xchg
fsub
or
sahf
jecxz
pop
iret
and
outsb
ljmp
sbb
popa
lock
stos
in
mov
rcr
push
or
xchg
mov
push
cmpsl
pushf
dec
jne
ds
cmp
adc
pop
and
jmp
sub
rorb
push
push
or
fdivs
jl
test
push
or
cmp
and
mov
pop
lock
mov
mov
push
stc
shll
arpl
mov
repz
in
xor
push
push
jae
xorl
lahf
cmpl
cmp
adc
add
mov
mov
pop
repz
les
pop
xchg
push
fwait
bound
in
push
ret
cs
mov
pop
cmp
ja
dec
jne
cld
test
pusha
insb
aam
and
add
rorb
cmc
mov
clc
stos
mov
sub
xor
push
dec
dec
cmp
repz
mov
ret
inc
pop
mov
mov
enter
push
dec
pop
loop
add
xchg
mov
jmp
adc
iret
adc
fnstcw
fsubrl
mov
mov
push
push
jbe
clc
pop
in
mull
imul
scas
sub
adc
nop
and
in
mov
ficomps
std
xchg
in
push
adc
adcb
xor
dec
and
mov
std
aas
cltd
arpl
movsl
jp
sub
es
pop
in
or
cld
dec
add
jp
rclb
bound
test
adc
sti
lret
adc
mov
push
dec
or
ds
hlt
push
mov
adcl
mov
adc
insb
pop
pop
idivb
roll
inc
mov
ds
cmp
ret
pop
rorl
das
sub
sub
push
jle
add
jbe
dec
mov
ffreep
ljmp
cltd
push
xchg
sub
repz
adc
ret
adc
pop
adc
jno
mov
lahf
or
cltd
or
inc
xchg
push
leave
push
repz
cmp
nop
mov
mov
shlb
inc
mov
and
xchg
xchg
lahf
and
cmpsl
mov
lock
dec
movsb
xor
roll
push
and
daa
insb
lods
inc
push
incb
clc
sbb
jmp
lock
add
xchg
pop
mov
aas
sbb
call
or
pushaw
iret
nop
leave
imul
fsubs
pushf
int3
inc
xor
or
cmp
fs
or
icebp
loopne
and
jp
dec
add
movsl
sti
add
push
cltd
ret
sub
shrb
movsl
das
cwtl
push
dec
push
int
test
stos
out
fsubs
inc
mov
lea
cli
test
stos
cltd
and
jle
je
test
xor
and
dec
testl
xor
mov
push
inc
xchg
add
mov
stc
cli
pop
mov
and
aam
xchg
int3
and
insb
scas
stc
imul
popf
sbb
outsl
mov
cwtl
cli
leave
jnp
ja
add
or
outsb
push
sub
loop,pt
mov
xchg
adc
sbb
testl
ds
add
lods
jecxz
jge
lret
xor
call
stc
hlt
not
repz
xchg
insl
jl
dec
xchg
push
lods
add
sub
loope
or
add
sbb
jns
xchg
rcrb
mov
xchg
leave
sub
inc
push
sarb
cld
xchg
inc
push
mov
ja
jne
or
cmp
xchg
adc
scas
mov
xor
pop
arpl
popf
mov
push
popf
out
mov
leave
pop
jge
in
jno
jg
push
insl
in
insb
or
add
dec
ja
push
fdivp
jg
jecxz
cmp
fnsave
rcrl
mov
popf
push
rorl
sub
pop
dec
or
xlat
inc
fnstsw
push
fisubs
movsl
push
add
xor
jmp
les
add
or
stos
enter
test
sbb
pop
pop
mov
int
or
push
shr
sub
dec
add
movsl
leave
int
sti
xchg
loopne
mov
scas
xchg
faddl
sub
mov
xchg
xchg
das
adc
out
mov
or
lcall
outsb
sbb
test
xorl
xor
mov
or
dec
aas
les
test
mov
shl
fadd
add
hlt
fildl
jle
lret
int
inc
pop
ja
clc
sub
jne
mov
jle
std
lret
sub
shl
mov
adc
cmc
xchg
data16
push
in
outsb
cmpsb
in
add
cmp
repnz
das
cmp
mov
fdivrs
insl
test
inc
int
sub
movsb
and
mov
js
orb
rcl
or
in
incb
cmp
imul
mov
nop
sahf
and
aad
test
orl
or
ret
or
sbb
jg
mull
jnp
adc
aaa
mov
dec
dec
inc
xor
mov
adc
orb
xlat
lahf
dec
jp
lahf
or
fisubs
les
outsl
scas
jns
fwait
xchg
sub
aaa
repz
xor
mov
lods
mov
jbe
mov
jmp
rorl
imull
pop
mov
push
jecxz
lods
mov
roll
mull
stos
adc
sti
idivl
test
fistpl
mov
std
sub
call
and
stc
pop
popa
clc
mov
in
xor
and
mov
lock
or
cmpsl
lret
xor
aad
into
pop
orb
pop
jno
cmp
mov
fnstcw
or
sbb
fsubs
mov
add
jge
xchg
jge
jle
cmpb
dec
mov
fldcw
iret
mov
lods
fs
popf
sbb
mov
inc
ret
ret
jo
cmp
movsl
dec
add
add
cmp
mov
xchg
jns,pn
fs
lock
cmp
add
mov
dec
mov
stos
mov
or
xor
xchg
out
fwait
mov
fldcw
insl
lock
pop
cmpsl
scas
iret
test
xchg
inc
sub
dec
pusha
push
out
inc
mov
fsts
cmp
fldcw
mov
sub
ds
mov
ret
mov
sub
xchg
or
pusha
adc
xchg
insb
xchg
or
aad
nop
int
out
stc
call
mov
xor
mov
cmp
cwtl
jns,pt
cwtl
or
pop
aad
inc
popa
jo
sahf
aam
sbb
insb
cli
sbb
cld
push
cwtl
fcompl
rol
xlat
cmp
fstps
pop
inc
jnp
stos
insb
or
mov
shrl
js
imul
rdpmc
sahf
lahf
jae
aas
xor
push
jmp
roll
inc
sbb
push
dec
addr16
inc
mov
inc
mov
fildl
fstpl
push
xor
add
test
and
rcrb
lods
push
push
jmp
sbb
mov
movsb
hlt
imul
adc
push
scas
xor
xchg
push
ret
lods
mov
pop
dec
mov
pop
or
dec
les
jg
push
out
jle
push
add
lahf
push
scas
sbb
outsb
rorl
pop
popf
je
std
or
add
mov
gs
repnz
sbb
cmp
adc
ficoml
pusha
fs
nop/reserved
leave
enter
aaa
pop
cmpxchg8b
enter
out
popf
push
sbb
dec
adc
xlat
enter
loop
out
stos
jl
outsl
jecxz
outsl
inc
cmp
scas
in
cmpsl
test
pop
orb
sbb
icebp
in
cmp
ret
ss
xchg
dec
jmp
pop
xchg
cltd
enter
mov
rorb
xchg
out
add
sbbb
jae
shll
dec
mov
xchg
xor
add
andb
dec
and
mov
movsb
mov
outsb
gs
ficoml
stc
shrl
mov
inc
cmp
xlat
sti
mov
les
and
mov
jnp
sti
dec
cmp
adc
push
addr16
scas
dec
push
sbb
fdivrl
cmp
cmc
push
pop
mov
test
cmp
pop
xchg
mov
and
xor
pop
or
jecxz
shrb
cmovg
push
leave
subb
and
cmp
mov
mov
or
dec
ret
scas
repz
cmp
addr16
fnsave
stos
xchg
test
push
shrb
mov
mov
outsb
cld
sbb
mov
xchg
icebp
xchg
xchg
insl
lret
push
pop
mov
lret
cld
ljmp
leave
or
jnp
int3
scas
push
popl
inc
sbb
rcrb
mov
jp
faddl
into
in
nop
outsl
xchg
decb
fcompl
cmp
fsubrs
inc
stc
dec
and
mov
cld
and
in
mov
or
sbb
ret
rorl
imul
sahf
fnstcw
xor
xor
dec
aad
movsl
movsb
in
rclb
les
push
xlat
pop
sub
mov
lahf
popl
daa
mov
inc
xchg
pop
jns
sub
fistpl
lds
mov
sahf
jb
jp
addr16
arpl
mov
xlat
xchg
dec
test
jno
adc
rcll
lea
movl
xor
xor
mov
lods
jle
xor
mov
or
mov
nop
sbb
out
sbb
add
pop
outsb
jbe
aaa
pop
in
mov
add
test
sahf
iret
add
push
scas
fcmovne
or
aad
cmp
loope
jne
mov
stc
es
inc
rdpmc
test
negb
lea
sub
add
iret
lret
lods
sbb
test
push
push
add
cmp
mov
sbbb
pop
xchg
mov
lcall
in
dec
xchg
pop
rclb
roll
rcr
out
dec
pushf
pushf
fsubl
daa
jb
dec
cmc
shlb
sbb
popf
clc
mov
xor
inc
sbb
repnz
sub
mov
mov
mov
mov
dec
dec
dec
fsubrp
pop
push
cmpl
jns
in
or
push
lcall
jae
scas
sub
int3
stos
scas
fistps
gs
xchg
push
add
loopne
scas
push
jl
jns
or
lahf
outsb
inc
lret
cs
jle
into
xchg
mov
mov
or
mov
scas
jp
inc
dec
pop
loope
inc
ds
ret
cmp
repz
xorl
mov
scas
test
push
das
lea
rorl
xor
prefetchwt1
js
xchg
imul
aas
jl
sahf
pop
lret
and
push
js
push
push
jnp
ja
xchg
clc
insb
scas
aas
inc
dec
arpl
pop
jnp
fdivs
outsb
jnp
loop
cmpsl
mov
push
testl
adc
ljmp
lret
shrb
sbb
stos
aam
dec
fsubl
adc
imul
mov
push
dec
sti
mov
sub
cmc
inc
fwait
sbb
sahf
or
fs
enter
sub
out
or
ljmp
add
or
mov
dec
and
xor
xor
mov
pop
sbb
xor
mov
push
and
jmp
xlat
clc
sti
imul
mov
loop
xchg
push
push
xchg
mov
xchg
adc
dec
adc
cmp
popf
pop
mov
mov
pushf
into
mov
fldl
stc
sub
repz
lret
testb
mov
or
mov
lods
mov
or
inc
xchg
enter
xchg
cmp
int3
sahf
mov
jbe
adc
imul
adc
sbb
jp
in
pop
and
popa
cmc
ret
dec
jge
pop
sbb
les
or
sub
aas
cwtl
xchg
lcall
sbb
inc
cmp
mov
outsl
cmpsl
pop
add
xlat
or
xchg
pop
cwtl
mov
hlt
dec
mov
in
jno
call
pop
adc
lahf
int
push
mov
fs
lahf
pop
pop
lods
aad
jno
test
dec
push
imul
pslld
std
push
inc
jb
push
inc
jbe
lods
pusha
movsb
loop
ds
negl
mov
icebp
sub
das
push
ss
lret
loope
sub
mov
and
loopne
dec
sub
call
jo
mov
lret
push
pop
filds
sub
sub
cld
rclb
mov
pcmpgtd
lret
lret
cmp
xchg
nop
or
cmp
and
or
aas
dec
leave
cmp
dec
mov
fisubrl
dec
daa
incl
mov
cmp
pop
dec
cmp
push
outsb
mov
add
mov
hlt
sbb
enter
pop
push
sub
and
outsb
or
dec
lds
cmpsb
jge
push
push
jae
stos
inc
dec
mov
xchg
jnp
add
sbb
xor
jbe
fucomi
in
sub
shlb
js
fwait
cli
inc
jns
adc
xchg
arpl
jb
push
sbb
cmp
jp
xor
sub
hlt
mov
push
adc
cmp
outsb
aaa
insl
xor
adc
mov
daa
insb
loopne
xor
pop
adc
push
call
mov
jb
cmpsl
pop
jnp
dec
pop
clc
pop
and
jo
pop
xor
cmpsb
or
mov
sbb
xchg
scas
add
pop
stos
sub
or
jp
jge
sti
dec
negl
icebp
pop
test
test
mov
repz
sub
push
xchg
les
mov
fldl
adc
pop
pop
dec
mov
test
ja
xchg
sbbl
mov
dec
gs
mov
cs
or
pop
add
pop
cwtl
jnp
or
push
popa
cmp
cltd
adc
push
xor
jge
mov
mov
testl
addr16
dec
inc
stos
cli
jecxz
stos
cld
push
lahf
push
xchg
aaa
xlat
hlt
ret
add
adc
sbb
pop
ds
into
jg
aad
xlat
push
or
pushf
ja
and
test
test
imulb
jbe
dec
dec
jae
sbb
stos
arpl
pop
mov
aam
mov
stc
sub
pop
xor
insl
loope
aas
push
xchg
jne
sbb
in
test
loope
push
mov
jno
inc
fists
jb
lcall
daa
cmp
pusha
daa
inc
mov
and
fs
cmp
xchg
push
aaa
push
adc
lret
test
push
jl
mov
mov
pusha
push
faddl
je
push
sub
adc
test
dec
mov
add
lcall
rcl
ljmp
jnp
or
pusha
shlb
cmpsb
outsl
mov
out
sti
rorl
mov
fs
fs
xchg
inc
mov
xchg
dec
in
adc
mov
jmp
orl
mov
dec
mov
xchg
outsl
fs
icebp
mov
into
popa
pop
int
jp
mov
test
mov
mov
les
ljmp
notb
test
clc
pop
imul
lods
incl
or
sbb
xor
repz
pushf
mov
jbe
mov
cmp
add
sbb
mov
clc
adcb
pop
add
sub
jg
pushf
pop
imul
add
jno
pop
inc
adc
mov
cmp
loopne
adc
lcall
xchg
sbb
mov
mov
clc
fwait
lahf
inc
in
sar
and
cmp
dec
jg
or
imul
mov
mov
mov
jmp
bound
cmp
or
mov
stos
fistpl
jge
std
xchg
sbb
jmp
jecxz
cwtl
es
push
repz
dec
in
pop
in
jl
pop
enter
out
sub
mov
repz
xlat
lods
xor
jne
dec
mov
and
ljmp
xor
mov
jg
adc
inc
jns
inc
add
out
hlt
lock
jg
jge
stos
jno
mov
test
mov
push
mov
inc
fbld
dec
jns
js
in
jbe
sub
jl
adcl
sbbl
sti
bound
pop
xchg
lret
rcll
pop
dec
test
cmc
leave
enter
rcrl
arpl
ret
xor
push
movb
mov
fstpt
mov
shr
pop
xor
or
sahf
loope
test
hlt
mov
imul
loopne
and
scas
loop
adc
leave
insb
jns
in
popf
lahf
mov
cwtl
mov
push
jb
roll
xchg
inc
mov
push
nop
out
dec
jge
test
dec
inc
xchg
or
or
mov
push
loopne
inc
mov
movsl
daa
sarb
roll
repz
movsb
insl
inc
or
dec
mov
clc
jae
aam
scas
jbe
aas
push
fs
pop
and
testb
xor
mov
xor
leave
lea
test
loope
jo
pushf
aad
xor
adc
mov
cmpsb
push
push
jge
inc
dec
push
mov
scas
or
cmp
jl
sbb
out
or
mov
iret
roll
pop
jge
or
sbb
xchg
sahf
insb
mov
loopne
ds
or
mov
ret
imul
mov
mov
xor
repz
push
jge
test
stos
jne
aas
jge
in
scas
fimuls
or
outsb
iret
test
push
loop
fisubs
lret
jle
hlt
pop
icebp
icebp
jecxz
repz
dec
bound
mov
push
push
mov
popa
fcmovbe
mov
xor
adc
movsl
insl
inc
dec
lcall
sbbl
fsub
les
add
sub
jmp
nop
popfw
pop
sbb
cmp
decb
or
sub
and
out
add
cmp
mov
fs
xchg
mov
fimuls
push
inc
pop
lock
cmpl
icebp
popf
aam
jnp
int3
daa
sub
mov
outsl
add
inc
lea
in
stc
jae
rcrl
xor
dec
xlat
xor
jge
shrl
mov
lahf
push
arpl
cmp
sbb
out
lret
stos
lcall
scas
xchg
pop
das
or
subl
push
or
inc
insl
mov
sub
lock
cmp
adc
gs
aad
popf
in
jecxz
xchg
mov
test
leave
mov
jle
imul
inc
fcoms
xor
jp
inc
mov
repz
mov
enter
push
subb
ss
xor
fwait
dec
pushf
pandn
test
sarl
dec
pop
cmp
lcall
in
and
das
dec
jmp
xor
sbb
jno
push
cmpsb
add
jmp
mov
pop
daa
imul
push
aaa
jo
roll
lretw
cmpsb
inc
data16
aad
gs
testl
add
js
lods
push
adc
test
jmp
in
jnp
repz
loopne
mov
loop
clc
ret
lds
push
ljmp
lock
jge
push
arpl
cmp
adc
push
mov
shrl
dec
jmp
rcll
stos
pop
mov
jecxz
ss
jmp
lret
daa
inc
es
pop
nop
int3
mov
and
les
sub
ja
lock
adc
mov
ljmp
data16
cwtl
mov
jno
test
xor
std
push
xchg
movsl
mov
mov
stos
lahf
adc
bound
lock
jnp
ret
and
mov
call
rorl
or
lret
imul
sub
insl
cmpsl
mov
shrb
adc
pusha
dec
movsl
xchg
movsb
mov
cmp
mov
dec
adc
cmpsb
push
mov
outsb
popa
mov
jns
or
sbb
aaa
pop
pop
test
lret
inc
xchg
lds
push
add
pushf
push
push
imul
div
mov
mov
loope
cltd
cmpsl
loope
push
or
xchg
or
lods
out
in
mov
pop
loope
mov
add
jae,pt
mov
loopne
mov
pop
jp
rol
inc
fcoml
or
je
mov
xchg
repnz
fmull
test
sahf
lret
scas
iret
fdivrs
fwait
scas
pop
push
pushf
push
lahf
inc
loope
movsl
xchg
mov
jle
sub
push
cmp
idiv
push
sub
loope
jb
mov
dec
cmpb
and
out
push
inc
cmp
dec
cmp
cmpsb
test
out
or
imul
add
sbb
push
sub
incb
icebp
testl
lret
inc
fsts
fwait
inc
add
les
mov
fwait
xor
enter
cmp
pushf
movsb
dec
cltd
or
in
jns
xor
push
and
fs
cs
pop
cli
mov
mov
xor
push
fsts
xchg
pop
sbb
mov
pop
fidivrs
xor
jno
push
sarl
jl
pusha
daa
push
movsb
cltd
nop
fidivl
sahf
faddp
cwtl
movsb
mov
rol
scas
cltd
pop
fisttpl
xlat
inc
mov
pop
cmp
and
mov
xchg
scas
and
add
and
mov
int
repz
mov
mov
and
ss
push
ljmp
das
push
repz
sahf
in
jl
jns
pop
jp
sub
fisubs
aaa
jmp
jns
bound
cmp
hlt
shll
scas
jmp
sti
into
lods
pop
pop
xchg
dec
jecxz
push
insl
sti
sbb
aas
xchg
inc
scas
sbb
inc
cmpsb
mov
jmp
pusha
inc
loop
mov
icebp
sbb
inc
out
loope
adc
add
mov
push
sub
or
push
cmc
lods
mov
mov
push
adc
xlat
xor
scas
jle,pn
push
lds
cmpsb
in
xchg
rcrb
mov
xchg
jg
loope
ds
xorb
punpcklbw
loope
add
scas
mov
icebp
push
sbb
out
ljmp
sub
push
xchg
mov
sbb
gs
ret
fbstp
test
insl
or
mov
push
push
test
in
rcrb
pusha
bnd
cmp
jo
imul
dec
stos
nop
loop
mov
std
rcrb
pop
sbb
pop
xlat
les
mov
and
mov
push
dec
lods
outsl
sub
in
cld
push
out
mov
dec
popa
ficompl
fbld
xor
pushf
lcall
sti
out
jb
fimuls
pop
pop
mov
add
in
insb
and
imul
dec
lea
scas
js
xchg
sbbl
inc
andb
test
js
pop
cmp
std
pop
mov
loope
in
and
shrl
xchg
adc
movsl
mov
xchg
data16
addb
cli
xchg
xchg
lret
pop
jno
push
xchg
in
push
mov
mov
adc
push
jae
in
ljmp
inc
add
test
sbb
rclb
jecxz
jns
or
jae
mov
or
dec
jne
pop
mov
sahf
into
mov
cld
xor
test
shrb
mov
lods
ss
push
push
cli
mov
call
or
lahf
stc
jl
mov
nop
loop
sbb
jl
xor
jp
ss
dec
xor
in
repnz
notb
loope
adc
sbb
les
xchg
xchg
inc
repnz
xor
add
call
jl
out
ret
xchg
hlt
pusha
cmpb
aad
mov
cmpsl
push
xor
imul
mov
loop
nop
nopl
clc
aad
adc
idiv
sbb
adc
imul
push
or
int
arpl
fs
or
lods
loop
je
std
mov
in
dec
pop
fcomps
mov
mov
inc
add
push
lahf
loope
jl
btc
inc
test
repnz
and
xchg
shrb
cmpsb
pop
fldt
fmul
ljmp
and
sub
data16
popf
sbb
xor
jecxz
cmp
sub
and
pusha
mov
cltd
into
in
jbe
adc
push
push
cmp
add
inc
jno
pop
shrb
and
aad
outsl
mov
es
insb
push
lret
fld
push
fcmovb
vmwrite
pop
enter
flds
enter
xchg
pop
rcll
jae
outsb
fadds
dec
push
push
cmp
mov
popa
cmp
pop
push
ja
in
pop
daa
gs
popf
mov
mov
rol
ja
mov
mov
dec
pushf
push
stos
and
stos
je
xchg
mov
movl
fsubl
sbb
pop
mov
cmp
cwtl
int
pop
mov
shll
dec
in
jo
stos
jns
inc
sub
mulb
push
sub
test
das
adc
in
pop
mov
jns
stos
mov
lods
lret
xchg
adc
xchg
repnz
dec
push
lea
out
lds
jl
and
mov
lret
sub
xor
in
mov
sbb
sub
ss
stos
clc
in
dec
insl
mov
ja
out
pop
pop
dec
and
fistpl
dec
imull
inc
sbb
loope
ljmp
loopne
idivl
mov
xchg
repnz
push
mov
cmpsl
rclb
mov
mov
and
cli
dec
dec
cltd
mov
icebp
push
push
xor
or
and
divb
and
cmpsb
mov
fnstenv
push
fmulp
sub
mov
inc
rorb
arpl
dec
push
dec
loop
sbb
sbb
inc
into
mov
jae
mov
push
jnp
sub
pop
xlat
pop
xor
div
cmpsb
jg
push
fs
mov
xchg
jle
repnz
outsb
je
or
lret
push
scas
or
decb
mov
stos
pop
cltd
sub
jb
or
call
cltd
mov
dec
xor
fstpl
push
iret
inc
sbbb
lret
shrb
hlt
cmp
and
loopne
dec
insb
stos
out
aad
sub
fstpl
push
add
pop
pusha
push
cmp
repnz
roll
lcall
and
pop
lret
add
outsb
outsb
jnp
fcmovne
cs
hlt
dec
pop
arpl
test
popa
push
push
add
jae
mov
mov
xchg
fs
pop
pop
xchg
dec
popf
jmp
test
jno
jle
js
jmp
scas
push
aas
repnz
call
loopne
xchg
mov
repnz
or
or
fsubr
sbb
mov
mov
or
andb
mov
sbb
dec
push
dec
hlt
in
fcmovu
les
inc
rcll
pop
jge
int
mov
dec
add
cld
sbb
ss
rcll
sub
and
sti
jge
rorl
aas
rorb
cmp
mov
stos
cmp
xchg
ljmp
dec
arpl
mov
xchg
ljmp
call
out
stos
fdiv
ret
loop
hlt
dec
dec
loopne
les
cmp
inc
iret
inc
add
mov
and
jge
pop
sub
sbb
gs
inc
push
adc
sub
jbe
xor
out
adc
fistps
pop
lret
add
pop
mov
xor
add
loopne
mov
adc
adc
test
fiaddl
sub
xlat
and
push
inc
mov
mov
mov
mov
ds
test
jno
rcrl
das
lock
pushf
fs
pop
pushl
mul
pop
cmp
push
fucom
aad
stos
mov
shrb
xchg
je
cmp
sbb
push
addb
inc
adc
adc
jp
mov
cltd
jae
sub
mov
filds
bound
pop
fnstsw
outsl
insl
push
leave
mov
xchg
in
cmpsl
or
lea
push
cmpb
aad
pop
outsl
push
mov
scas
xchg
cmpsl
pusha
cmpsb
das
fisubl
inc
mov
push
add
xor
mov
icebp
sbb
inc
cmp
jb
inc
js
fstpt
jno
xor
loopne
xchg
adc
mov
clc
mov
out
mov
xchg
push
int
lcall
jnp
insb
inc
shlb
mov
movsb
mov
cmp
rcll
out
popf
idivl
cli
and
dec
cwtl
andl
mov
icebp
pop
int3
inc
jns
add
test
jp
mov
cmc
pop
std
out
and
fwait
ror
ja
adc
xchg
push
into
lret
sub
test
ds
movsl
movsb
jecxz
leave
push
cs
outsb
add
and
jno
sbb
outsb
or
loop
dec
dec
xchg
shlb
or
sub
dec
out
andb
sar
sub
inc
scas
jle
mov
jns
push
rcll
loope
test
add
stos
xchg
ja
int3
sub
out
push
mov
sbb
pop
mov
lds
fistl
dec
xchg
mov
les
add
xor
sbb
pop
cmc
pushw
imul
xor
adc
cmp
push
push
xor
lret
cmpsl
xchg
cmpsl
dec
cmpsb
cmp
xchg
push
out
out
or
push
sahf
pop
sahf
and
or
cmp
imul
js
sbb
dec
dec
sarb
dec
or
leave
dec
jecxz
inc
mov
js
clc
push
xchg
mov
jne
and
jmp
jp
sbb
es
rcrl
les
xchg
inc
sbb
aaa
add
outsl
mov
mov
adc
adc
jg
scas
repz
pop
popf
add
mov
test
dec
addl
push
lds
ficoml
data16
testb
iret
jmp
and
push
lds
loope
out
push
xor
scas
or
fwait
vmwrite
pusha
pop
aas
test
lcall
add
daa
stos
and
jmp
das
popl
lods
andl
push
icebp
mov
fs
notl
hlt
enter
pop
xchg
scas
cli
ja
inc
loop
mov
jmp
test
pusha
imul
jno
rcrl
sahf
arpl
loope
xchg
xchg
pop
adc
scas
inc
hlt
jbe
addr16
dec
fnsave
mov
call
jno
pop
sbb
pop
movlps
sahf
ljmp
xchg
lds
insb
pop
mov
repz
stc
adc
jno
enter
stos
mov
repz
xchg
cltd
dec
out
movsl
loope
inc
lahf
jnp
testl
lahf
fstl
scas
mov
mov
int
sbb
stos
inc
xchg
push
cmpsl
mov
mov
push
cmp
pop
jae
das
mov
in
dec
inc
push
adc
mov
push
mov
out
xor
push
push
mov
xchg
inc
stos
das
std
cmp
sbb
dec
cmpsb
divl
sbb
add
add
xor
sahf
iret
je
push
adc
jecxz
mov
jb
mov
das
or
int
mov
add
pop
adc
push
gs
push
cmp
sub
imul
pop
insb
stc
dec
les
adc
mov
dec
aad
sbb
sbb
mov
popf
sbbb
add
push
xchg
lock
ret
sbb
jne
imul
je
fwait
xor
repz
sbb
xchg
adc
xchg
es
test
insl
std
testl
jmp
subb
xchg
add
mov
or
addl
jo
add
mov
je
lea
or
mov
lds
jmp
dec
pop
pop
cmp
cmp
push
mov
xchg
push
or
jae
jnp
cli
sbb
fistpl
add
cmpsl
es
lods
dec
jp
inc
push
or
mov
rolb
sbb
testl
adc
gs
outsb
cmp
ficoml
fsub
push
lcall
push
jle
loope
loope
subl
pushl
jbe
or
repnz
push
js
repz
mov
stos
xor
les
push
fisttpl
cmp
fwait
cmp
in
sub
call
jnp
or
push
in
aaa
iret
jg
std
mov
mov
cmpb
sbb
mov
add
clc
jl
inc
inc
rorl
mov
into
lahf
in
ljmp
js
cmp
fistl
adc
rcrb
std
xchg
pop
mov
cmpl
subl
adc
adc
data16
cmp
dec
mov
hlt
xchg
push
dec
sbb
mov
sbb
mov
test
jnp
adc
shrb
ss
fdivr
insb
adc
or
sbb
mov
icebp
test
jp
leave
jns
push
call
cmp
mov
aam
fcompl
mov
fs
out
xor
mov
push
in
jle
int
add
xchg
pushf
es
andl
les
inc
pop
fldl
fldcw
movsb
cli
xchg
push
pop
in
imul
andl
outsl
cmp
jg
js
sahf
shl
mov
mov
leave
mov
cwtl
stc
inc
inc
sub
jnp
std
push
push
adc
int3
or
andl
add
popf
mulb
mov
pop
push
adcl
fldcw
adc
lods
lret
adc
mov
scas
cltd
sub
lea
push
mov
mov
inc
jb
dec
or
jecxz
mov
daa
xorl
clc
adc
mov
sub
insl
imul
pop
mov
inc
jp
testl
pop
repnz
cmc
xor
dec
scas
into
dec
dec
mov
or
jbe
xor
movsl
xor
jecxz
lcall
pop
mov
rclb
cmp
or
fsubl
pop
popa
out
fsub
rcll
jecxz
jne
add
cltd
inc
aam
dec
popf
sub
in
adc
scas
cmpsl
push
in
addr16
mov
mov
inc
pop
mov
mov
cli
pop
lret
imul
popf
mov
jge
sbb
movsl
in
add
and
popf
sbb
stos
stc
add
push
jnp
test
loopne
sar
aas
push
pop
xor
sbb
std
push
loope
xchg
in
subb
fdivl
sub
cmp
push
pop
jne
gs
lcall
mov
int3
jecxz
sbb
call
push
call
jmp
xchg
adc
or
fisubs
xchg
push
push
arpl
ss
rcr
cmp
rcrb
aam
in
lock
fstps
mov
push
sub
test
iret
mov
inc
rolb
rclb
jae
or
inc
push
mov
icebp
jmp
xor
in
icebp
add
jecxz
movsb
mov
cli
fldl
cwtl
jmp
imul
cld
enter
pop
adc
fbld
in
dec
cmp
push
subl
mov
xor
mov
xchg
mov
rcll
fucom
loopne
dec
pop
and
cmp
dec
insb
sbb
adc
xor
ret
test
push
into
sbb
fcomip
mov
hlt
adc
mov
sub
pop
dec
lock
outsb
adc
gs
jo
ret
imul
loopne
cld
cmp
call
mov
and
test
inc
cltd
jns
and
jb
push
pop
stos
in
pop
stos
ret
loopne
ds
lret
ds
pop
je
xchg
inc
xor
fisubl
lds
mov
mov
imul
inc
jae
pop
cmpl
cwtl
das
xor
and
mov
adc
or
orl
jl
sbb
xor
inc
fildl
aaa
fcoms
mov
sub
repnz
jl
test
arpl
sarb
sbb
and
push
mov
pop
pop
xchg
cmp
sbb
out
sbb
add
xor
adc
imul
in
ja
xchg
dec
pop
out
fs
nop
sarb
pop
fiaddl
fstl
rolb
sbb
loop
cmp
shlb
int
incl
sti
enter
mov
mov
xchg
outsl
inc
adc
xor
int
aas
sbb
push
mov
push
sbb
ja
pop
xchg
sbb
scas
shr
inc
test
mov
mov
xchg
je
sbb
add
cli
dec
pusha
sbb
push
mov
mov
xchg
mov
mov
outsb
int3
into
or
add
test
adcb
lret
lock
and
arpl
add
out
in
push
mov
ficoml
repnz
sub
std
mov
popf
jns
mov
inc
jp
testb
jmp
jecxz
xchg
shll
imul
add
xchg
in
aam
lds
lret
lret
jno
js
mov
stc
dec
leave
insb
inc
ljmp
inc
dec
jg
cmp
push
sub
mov
faddp
cmp
push
dec
mov
jl
sub
push
jae
rcl
xchg
rcrl
dec
loopne
int3
aam
xor
pop
inc
pop
lret
iret
inc
sub
xor
and
leave
out
iret
mov
repnz
aas
into
jbe
pusha
dec
lods
push
sbb
adc
lods
dec
repnz
lcallw
and
xor
xchg
mov
jmp
mov
inc
icebp
sbb
rolb
mov
pop
int
sbb
or
sbbl
clc
xchg
fists
inc
mov
push
xchg
cmp
sbb
jp
mov
mov
fildl
xlat
aas
mov
mov
inc
ret
insl
clc
int
push
ds
aam
pushf
fldenv
data16
ret
lods
fdivl
insb
push
push
jmp
sahf
pop
sub
xor
lcall
cli
mov
insl
fmull
push
iret
push
pushf
dec
mov
inc
lods
pusha
cmc
dec
xlat
push
mov
or
insl
add
in
sbb
scas
pop
sub
mov
mov
sub
mov
out
push
adc
push
cmp
cmpsl
push
pop
loope
outsl
out
jle
mov
pusha
cmpsb
cwtl
fcoml
xchg
mov
jp
enter
xchg
lret
aam
loope
in
pop
inc
call
jb
xlat
mov
pop
add
faddl
in
in
out
ds
sub
add
or
pop
pop
push
mov
mov
pushf
pop
mov
shlb
roll
fldl
insl
ja
inc
data16
and
pop
inc
mov
adc
jl
das
sub
mov
scas
xor
pop
out
or
xor
ss
es
mov
inc
or
xchg
fisubrl
jl
dec
icebp
out
les
adc
fidivl
push
adc
push
add
ret
xor
out
sahf
dec
mov
insb
push
xor
inc
cmp
sahf
cltd
out
xor
cli
sbb
mov
mov
std
mov
cli
scas
aam
loop
sub
mov
test
sbb
int3
cmpsl
pop
jmp
out
mov
push
sbb
inc
mov
notl
shlb
add
xlat
enter
loopne
mov
adc
stos
aaa
jmp
and
sub
mov
sbb
imul
loope
leave
and
dec
adc
js
xchg
cmp
adc
add
sub
pop
test
pop
dec
pusha
push
inc
ljmp
sahf
mov
cmp
adcb
roll
or
push
cmp
aam
jg
imul
push
in
movsl
imul
bound
fwait
push
mov
fwait
movsb
mov
test
xlat
push
sbb
test
pop
bound
test
shlb
mov
pop
jecxz
mov
sub
mov
and
sbb
scas
or
sub
push
xchg
xor
sub
cld
lods
loopne
iret
xorl
jno
or
pushf
mov
pop
ss
not
mov
stos
leave
sub
and
xor
inc
fnstsw
cmp
jo
inc
cmp
sub
lods
inc
xchg
in
jae
add
enter
xor
stos
pop
push
push
push
xchg
or
sbb
sbb
cmp
fwait
and
or
loope
mov
aam
dec
pop
mov
xor
fistl
mov
push
sub
mov
bound
sub
cli
mulb
dec
mov
loop
out
movsl
cmp
enter
cli
jmp
inc
cmpsl
push
mov
dec
es
adc
push
pop
cmp
pop
cld
aam
mov
les
testl
icebp
addb
push
mov
cmpsb
nop
ror
shlb
cld
pop
jge
mov
mov
adc
or
sub
loope
aad
frndint
push
cmp
push
pop
mov
ret
movb
pop
cmp
adc
sbb
inc
sbb
test
cmp
pop
pop
push
mov
imul
mov
sub
bound
lds
sub
les
lock
push
and
pop
adc
les
sti
mov
shll
lret
sahf
pop
in
mov
pop
cs
add
sbb
mov
repnz
sub
push
mov
iret
aas
outsl
xorb
sahf
ljmp
dec
lds
adc
inc
aam
sub
add
jle
or
mov
in
addr16
shrb
mov
enter
sub
insl
shl
clc
jns
or
adc
cmpsb
add
cli
lret
leave
and
scas
out
mov
movsl
sbb
dec
push
mov
lret
xor
dec
lret
add
sub
add
fiaddl
fwait
dec
inc
test
jnp
fnstsw
gs
mov
subl
pop
arpl
stos
fs
inc
xchg
leave
xor
pop
add
sbb
hlt
shr
arpl
je
ret
lret
into
aas
jo
mov
and
mov
test
scas
inc
adcb
shlb
sbb
add
cwtl
fdivrs
jecxz
ss
adc
adc
rorb
outsl
mov
add
or
ret
push
loopne
xor
sbb
popf
push
lret
aam
movsl
sti
pop
xor
sbb
add
xchg
add
adc
in
fisubrs
push
in
int3
sbb
inc
lret
sub
xor
std
nop
xor
or
lcall
icebp
loope
mov
xchg
test
ja
mov
cwtl
test
push
xchg
dec
mov
and
xor
cld
push
cmp
andb
push
sahf
sti
xor
mov
sub
daa
pop
or
imul
add
mov
call
push
pop
bnd
stc
aad
or
aam
sub
mov
mov
fdivl
or
fildl
mov
fadd
mov
xor
cmpsb
cmp
nop
aas
jge
repnz
sbb
imul
xchg
rolb
or
push
scas
jbe
mov
jmp
xchg
das
jb
or
in
jo
mov
test
fnstenv
dec
shll
adc
out
push
je
push
shll
push
icebp
adc
push
mov
repnz
stc
outsb
xchg
sbb
enter
mov
cs
inc
int
add
es
testl
ret
pop
pop
shl
jecxz
push
ret
or
fldt
aam
xor
scas
out
ret
mov
movsb
mov
movsl
mov
lcall
xchg
sti
stc
lock
arpl
xchg
mov
fldenv
push
cltd
mov
outsl
test
bound
out
pop
sub
daa
jecxz
mov
aad
ja
dec
popf
or
movsl
dec
sbb
aad
xchg
push
ret
sbb
lock
pop
stos
or
dec
cmp
dec
and
out
popa
in
lahf
cmpl
jo
mov
add
mov
and
rclb
cli
mov
scas
inc
cmp
repnz
mov
imul
sbb
popf
outsl
and
mov
dec
pop
shll
loope
cmp
push
mov
test
jp
jmp
xorl
scas
mov
mov
mov
pop
call
pop
rcl
sub
inc
ss
mov
lcall
cmp
loope
mov
jns
aaa
shll
lcall
push
repz
ljmp
bound
push
daa
or
push
insl
test
testb
into
hlt
popf
push
pop
inc
in
les
or
cmp
xor
mov
scas
lds
in
adc
les
mov
or
pop
or
xchg
cmc
mov
inc
xchg
or
add
outsl
jp
inc
clc
or
sahf
ja
std
and
mov
mov
mov
aam
inc
cltd
fldt
jecxz
push
pusha
cs
rcr
stos
out
test
cmc
jbe
vpaddusb
fsubr
mov
sbb
fisubrl
and
xor
fidivrl
mov
fnstcw
mov
daa
faddl
dec
lods
jg
jbe
enter
jb
push
mov
inc
fsubrl
add
icebp
mov
add
test
nop
mov
sub
lahf
mov
icebp
cmp
or
pop
repz
ret
loope
rcll
scas
faddl
push
out
push
aas
lea
insl
pop
insb
sbb
sbb
leave
xchg
outsl
popf
mov
sbb
jl
and
dec
loop
popf
push
iret
js
std
int3
js
fnstsw
fisubrs
mov
mov
push
sbb
leave
fisubl
sub
cmp
cmc
dec
lret
inc
lcall
imul
jbe
aaa
inc
push
jecxz
inc
ljmp
rdpmc
and
and
mov
push
mov
add
xor
out
push
xor
pop
xchg
mov
cmp
adc
dec
aam
aaa
or
cwtl
fdivs
cmp
repz
pop
repnz
enter
fnstsw
scas
ret
call
push
mov
movsl
xchg
add
lea
push
sub
pop
pop
sub
or
jo
dec
pop
in
or
mov
push
or
in
out
test
fstpl
jmp
lcall
subb
cmp
fldt
sub
inc
fwait
adc
or
adc
movsb
and
fmul
int3
rcr
xlat
inc
and
cmp
ds
xlat
push
inc
xchg
data16
inc
fdivs
pop
xchg
sbb
js
cltd
enter
sahf
dec
in
xchg
in
aad
orl
movsl
insb
add
lret
jg
adc
out
sahf
mov
mov
bound
inc
lret
or
jle
jmp
push
pop
je
out
aaa
cmc
cmpsl
pop
test
ljmp
xchg
stos
ficomps
adc
dec
fisubrl
ds
ljmp
cmp
clc
repz
out
jnp
ja
lea
mov
out
xchg
stos
js
jmp
xchg
sub
mov
push
fnstenv
sub
je
in
cli
push
push
ja
mov
jmp
loop
pop
clc
cmpb
pop
pop
es
xchg
and
loope
jle
xchg
and
pop
repz
cmp
nop
lret
imul
jnp
adc
add
add
or
test
decl
and
mov
lret
jl
jecxz
stos
and
shlb
inc
inc
dec
ss
push
lret
addr16
jge
cwtl
mov
adc
dec
xor
push
dec
sub
xlat
movsl
movsb
mov
or
xchg
mov
add
inc
outsl
sub
jmp
dec
or
push
mov
fwait
aad
and
ja
mov
xor
pop
xchg
add
xchg
dec
sub
gs
mov
outsl
ljmp
xor
mov
dec
and
enter
mov
call
dec
adc
cltd
jae
dec
stos
int3
clc
xchg
call
stos
lret
mov
cli
enter
das
clc
shlb
lcall
loope
out
lods
movsl
push
mov
dec
pop
outsb
push
cmp
pop
inc
test
daa
dec
aad
cmpsl
xchg
pop
xor
push
push
shl
sbb
and
xor
sbb
fldcw
xor
repz
mov
pop
enter
cld
inc
stc
add
jge
inc
pop
mov
dec
adc
sbb
add
jg
movb
pop
mov
repz
mov
outsb
jb
cltd
lcall
ret
dec
push
or
aad
ja
jmp
out
xor
mov
adc
or
mov
lcall
cmp
cmp
dec
adc
outsl
cmp
pusha
xchg
mov
cmp
int3
scas
sub
loop
or
push
dec
xor
jb
pop
push
xlat
stos
ds
test
mov
cmp
cs
or
dec
inc
sub
xchg
lods
in
push
test
and
cmpsl
push
push
or
jle
lret
dec
enter
pop
adc
sti
adc
adc
add
ja
cltd
mov
in
add
push
stos
fs
push
push
fwait
cld
jo
hlt
stos
dec
mov
inc
xchg
std
icebp
cwtl
jo
pusha
jmp
push
dec
inc
sahf
xor
repz
mov
xlat
xchg
stc
jno
dec
and
test
rcr
sbb
sbb
jg
push
pop
movsl
adc
sti
out
dec
lods
and
xor
notb
test
insl
cld
inc
dec
pop
imul
and
push
std
adc
mov
lret
insl
loop
ret
dec
mov
push
and
pushf
push
inc
shlb
sbb
jge
in
insb
iret
add
fsts
insl
mov
pop
or
adc
out
cmp
add
inc
sub
push
xor
adc
outsb
movsb
pop
sbb
adc
xor
test
sbb
popf
js
jo
mov
dec
repz
lret
dec
pop
jae
popa
out
test
mov
push
xor
movsb
xor
xlat
mov
hlt
sub
xlat
sti
mov
stos
out
jb
jmp
sbbl
add
and
mov
dec
sub
out
jne
xor
test
subb
iret
push
mov
adc
inc
mov
and
inc
shl
push
push
movb
rolb
push
bound
xchg
fisubs
mov
jno
roll
adc
jbe
or
jg
dec
jp
inc
loop
inc
movsb
test
inc
sub
add
popf
xchg
hlt
daa
fistpl
pop
iret
xchg
mov
test
and
mov
outsb
fs
mov
jb
xor
sti
jl
dec
sbb
or
push
xchg
clc
cld
jns
lock
and
push
jns
cmp
push
rorb
shl
add
cmp
cmp
dec
inc
pop
insl
stc
lods
or
inc
push
jnp
dec
and
loopne
shl
mov
sub
pop
inc
rolb
adc
out
in
into
pop
rcr
adcl
mov
adc
out
into
xor
addr16
mov
stos
or
loop
cwtl
push
mov
out
mov
loopne
add
add
mov
and
jle
xor
mov
dec
data16
sub
add
xchg
and
sub
out
movsl
lret
push
push
xchg
and
outsl
adc
adc
sbb
nop
lds
popf
nop
or
push
cmp
push
dec
int3
dec
and
mov
mov
dec
std
mov
aad
mov
sahf
ficoms
stos
dec
mov
push
scas
mov
sahf
stc
dec
ja
movsb
call
ret
cwtl
sub
jo
insl
mov
cs
push
ljmp
cmpsb
mov
mov
mov
mov
stc
out
mov
data16
out
mov
out
insb
cmpsl
or
xchg
andl
sbb
repnz
test
mov
test
rol
dec
xor
fbstp
insl
push
js
mov
or
adcl
lock
sti
ret
add
mov
cmp
mov
sahf
jmp
ret
add
fcomp
jae
insb
popa
dec
es
mov
nop
dec
cmpsb
hlt
and
iret
loope
jae
push
addr16
pop
fwait
dec
ret
xchg
xor
mov
stc
sahf
call
jbe
out
insl
mov
movsl
sbb
es
xlat
and
mov
push
into
mov
cld
jnp
test
stos
gs
fwait
add
addr16
lds
adc
rolb
popa
jmp
push
mulb
cmp
push
pusha
fists
ljmp
loopne
fcomps
sub
movsl
xchg
jmp
outsl
testb
push
adc
rcrb
sbb
pop
pop
pop
fst
aaa
andb
push
js
shll
and
cmp
add
into
lds
cwtl
mov
mov
stos
lret
and
testl
cmp
xor
call
xchg
xchg
sbb
sbb
inc
aad
pop
in
out
rcrl
jp
rol
in
pop
adc
loop
add
or
or
inc
jl
sbb
xlat
loopne
xchg
push
nop
xchg
or
pop
jle
and
out
mov
cmp
sbb
sub
mov
les
cmp
rorl
icebp
outsb
in
data16
push
mov
and
test
out
aam
cmpsb
jecxz
aas
stos
xchg
repnz
cmc
mov
xchg
scas
sbb
pop
cmp
jae
stos
lcall
loope
pop
sbb
jne
jg
or
sbb
cmp
mov
adc
and
pop
xchg
xchg
cmp
popf
jbe
outsb
xchg
out
test
mov
push
adc
lods
cmp
daa
sbb
jmp
mov
shlb
lock
gs
mov
int
stos
mov
cmp
pop
daa
push
sbb
cmc
cmp
es
jb
jae
mov
in
push
xor
loopne
dec
sub
add
aad
mov
mov
mov
push
dec
ss
ljmp
and
fldl
mov
push
inc
rcr
dec
outsl
pop
lock
lahf
scas
jg
int
xor
lods
fucomi
adc
xor
inc
rolb
fiadds
add
iret
adc
rcl
xor
test
popf
mov
aaa
test
clc
pushf
mov
jnp
lret
or
jnp
and
movsl
fstps
aas
aad
pushf
mov
cmp
in
pop
imul
push
jb
inc
into
mov
ljmp
dec
movsl
lret
das
pop
pop
cmp
or
inc
cmc
inc
jne
add
pop
ret
push
popf
and
inc
push
hlt
arpl
in
pop
cld
mov
scas
or
inc
adc
fbld
dec
arpl
adc
inc
jnp
mov
xchg
jnp
rorl
rclb
sub
mov
or
shll
mov
dec
dec
adc
arpl
dec
and
sub
inc
jp
cmp
sub
jmp
adc
jae
ljmp
push
xchg
shlb
jmp
in
jecxz
mov
lret
sub
or
sbb
lods
sub
sbbl
cmc
ja
lea
pushf
inc
aam
adc
mov
push
inc
scas
push
nop
insb
lds
and
sahf
dec
sbb
mov
or
aam
jno
pop
fsts
js
std
xchg
push
xlat
cmpsl
mov
mov
test
pop
xchg
cwtl
orl
add
dec
loope
pop
xchg
test
pop
xor
ret
pop
fidivs
sbb
out
jae
icebp
movl
subb
pop
data16
loop
mov
enter
shrl
inc
push
add
pop
jns
sub
outsl
add
ret
test
cli
lods
sub
adc
cltd
mov
fadds
inc
outsl
mov
or
scas
jne,pn
loope
jbe
pop
mov
test
fiaddl
aaa
clc
fs
aas
sbb
or
xor
xchg
mov
bound
in
jae
sbb
sbb
fs
jo
push
fldl
lods
addr16
nop
sbb
dec
test
sub
jno
xchg
out
stos
xor
pop
cmpsb
and
push
sub
dec
popa
add
cltd
in
jnp
aam
daa
in
cltd
ljmp
dec
stos
daa
js
push
pop
outsl
push
xor
pop
test
mov
inc
jno
mov
movsl
aad
xchg
notb
fisttpl
mov
icebp
add
in
sbb
mov
push
aad
repz
movsb
cld
add
mov
add
mov
push
mov
imul
mov
cmp
int
imul
sbb
in
data16
mov
test
fs
inc
jo
mov
pop
das
hlt
jge
fcoms
sub
xchg
stos
scas
rol
lcall
mov
insl
xchg
mov
mov
ror
icebp
popfw
sbb
stos
ljmp
inc
popw
add
pusha
data16
iret
stos
jg
xchg
mov
jle
inc
pop
stc
insb
fdivrs
mov
jle
add
push
sub
xor
jbe
jge
pop
mov
aam
add
sub
leave
std
xor
hlt
and
pop
mov
mov
dec
cmp
in
sti
xchg
out
dec
fs
xor
cmpsl
negl
sbb
iret
mov
push
and
mov
xor
inc
data16
xor
and
mov
stos
adc
ret
dec
ffreep
and
mov
cmpsl
jae
dec
pop
inc
in
stos
inc
mov
imul
push
test
pushf
aam
jno
fsts
push
inc
daa
scas
xchg
dec
sbb
or
push
add
lcall
mov
mov
fwait
es
inc
pop
mov
ja
ret
cmpsl
arpl
jle
push
pushf
ljmp
das
xor
lret
or
dec
loope
sub
mov
cltd
xchg
mov
cli
sub
icebp
cmp
xchg
stos
sbb
pop
orl
pop
fcoml
mov
mov
aas
mov
xor
push
cmp
or
lret
mov
push
arpl
testl
enter
std
push
sbb
loopne
aad
pop
mov
and
mov
or
pusha
push
notb
arpl
jmp
aaa
push
aam
shr
cmp
ss
xchg
into
and
in
pop
xor
inc
les
in
pop
mov
fwait
shll
or
test
nop
mov
mov
or
or
andl
inc
in
fstps
repz
dec
adc
adc
fiaddl
pop
loop
in
sub
mov
test
mov
pushf
lock
stos
sub
mov
and
push
jno
add
jle
or
add
int3
mov
inc
sbb
pop
cmpsb
and
mov
nop
push
sub
adc
xor
je
lret
out
out
lret
mov
mov
out
dec
adc
inc
add
popf
jne
add
pop
insl
hlt
add
jnp
sub
rcrb
push
pop
out
push
mov
sub
imul
popa
adc
insl
aad
jae
xor
lret
jg
mov
movsl
add
push
jo
sbb
cmp
xchg
sahf
cmc
imulb
mov
aad
push
mov
inc
push
jg
jecxz
mov
dec
mov
ret
test
fcomip
push
dec
out
push
sbb
inc
adc
movsb
call
nop
addr16
mov
pusha
jge
sub
xchg
mov
test
dec
aas
sub
push
or
addl
and
dec
xchg
lret
dec
movsb
adc
inc
fldt
or
mov
pop
inc
xchg
daa
mov
scas
out
jl
js
push
cld
ja
xor
or
ljmp
and
je
dec
mov
xor
popf
cmp
loopne
push
mov
inc
dec
add
pop
mov
mov
outsb
incb
icebp
out
ljmp
mov
inc
jns
push
jl
cmpsl
and
xchg
rcl
lock
aaa
sbb
inc
frstor
fistpl
shlb
mov
add
cmpsb
adc
cmp
dec
mov
jp
ss
fldt
out
popa
mov
outsb
loope
in
cmc
mov
pop
les
decb
cmp
jb
or
xlat
inc
movsb
pop
xor
ss
lock
xchg
jo
pusha
cli
inc
out
jle
ss
xchg
aaa
mov
movsl
sub
push
enter
xchg
loop
push
je
test
adc
jne
out
jnp
pop
pop
add
sub
lcall
fldenv
int
lods
inc
repnz
push
mov
and
hlt
jg
addr16
pop
popa
daa
out
ror
cmp
outsb
jo
insw
fsts
loopne
sbb
xlat
jge
popa
jo
cltd
cmp
or
adcl
lock
push
or
xor
in
aas
aam
hlt
fstl
popf
push
xchg
outsb
shll
jecxz
gs
jno
push
jl
pmaxub
sub
pop
into
cmp
cli
in
lods
fs
imul
mov
rorb
sbb
jge
test
dec
cmp
pop
adc
push
add
and
in
add
popf
icebp
lea
sub
dec
fisttpl
fs
add
or
mov
xor
and
pop
xchg
daa
out
pop
inc
hlt
sarl
ljmp
adc
pop
fs
push
nop
fisubs
insb
out
sbb
ds
xor
or
mov
adc
xor
imul
pop
repz
xchg
lcall
repz
aad
roll
add
in
daa
movsl
fwait
es
out
mov
cmpsb
mov
clc
push
testb
add
add
popf
and
cli
ret
or
ja
mov
add
outsb
inc
repz
inc
rcll
nop
xchg
mov
lock
lahf
bound
lea
ret
sbb
nop
sbb
mov
lcall
es
in
jmp
push
push
in
push
shr
or
fwait
and
push
push
repz
and
icebp
dec
mov
mov
xorb
or
pusha
outsb
loop
sbb
pop
rolb
aam
call
insl
sbb
mov
icebp
xor
scas
bound
jno
out
aas
in
stc
cmp
and
sbb
dec
loop
in
add
sti
sbb
pushf
mov
lret
inc
xor
mov
lods
jl
jb
jmp
popa
jmp
sub
mov
cmp
cmc
or
das
pop
pushf
jmp
pop
adc
iret
jge
movups
mov
addr16
and
fsubr
mov
addr16
mov
pop
movsl
cmpsl
xor
shlb
cmpsl
lret
sbb
cmp
and
dec
push
sbb
push
xchg
fsubr
xchg
xchg
dec
mov
int
pop
scas
dec
pop
inc
enter
add
inc
repnz
and
out
push
dec
sbb
mov
cmpsb
fsts
cli
loop
in
or
lcall
jl
fwait
cmp
push
mov
call
rcrb
std
cmp
xchg
pop
out
roll
lret
addb
daa
mov
scas
push
adcl
inc
push
and
jo
fisttpll
jmp
mov
mov
pop
repnz
mov
inc
aaa
jecxz
inc
xor
and
jnp
nop
sahf
or
test
inc
or
aas
ficoml
add
js
scas
push
add
sbb
imul
mov
xchg
mov
jg
aad
scas
imul
jns
and
ret
test
pop
and
leave
cmpsl
and
cmp
sbb
sub
faddl
stos
adc
adc
or
sbb
lods
shrl
fildl
cmp
xchg
jecxz
cmpsb
sbb
mov
orl
mov
cmp
hlt
mov
leave
stos
cmp
inc
jns
sbb
sahf
dec
jno
cmp
pop
stos
loope
push
clc
imul
sbb
lcall
ljmp
das
das
das
push
mov
fs
imul
subl
dec
mov
movsb
xchg
sub
loop
int3
mov
outsl
jl
lds
mov
nop
push
out
fdivrl
jmp
out
insl
pop
add
pop
popf
mov
subl
xor
mov
js
loop
in
sti
movsl
jns
enter
fidivrl
jae
pop
pushf
or
jnp
scas
scas
scas
movhlps
mov
jl
cmpsb
xlat
xchg
arpl
push
mov
sub
dec
xor
pop
pop
xchg
outsl
cwtl
cs
inc
sbb
lock
push
push
adc
cmp
stos
scas
and
sti
mov
sarb
add
push
mov
jne
mov
daa
mov
in
or
xor
outsb
and
in
inc
mov
xchg
adc
xchg
loopne
xlat
es
in
cld
pop
mov
idivl
cmpsl
jb,pn
lods
cmc
push
inc
jl
out
fwait
pop
add
xlat
push
dec
movsl
mov
mov
mov
std
mov
sahf
push
out
lods
js
out
add
and
dec
sbb
pusha
ret
dec
jmp
loopne
aam
rorl
or
test
shl
pop
mov
pop
arpl
fsubl
jle
adc
jp
popa
xchg
pushf
inc
js
les
pop
cli
lods
pop
push
cmpsb
fsts
rolb
xor
jns
push
mov
fmuls
xchg
sub
das
jp
push
js
sbb
sbbl
repnz
mov
roll
sub
insb
pop
aaa
adc
xor
shl
out
aaa
push
test
stos
xor
mov
xchg
xor
pop
jne
imul
lret
lahf
pop
adc
pop
and
mov
inc
fs
jmp
sahf
push
ret
pop
lcall
insl
dec
jge
aas
out
xlat
sbb
aaa
ja
cs
push
cs
xchg
lds
adc
push
lds
push
sub
mull
not
xchg
add
or
jne
push
setg
fdivs
inc
and
or
pop
jg
mov
int3
int
repnz
jge
lock
lcall
clc
cwtl
cmp
jne
jmp
fdivrl
jg
in
pop
jo
jmp
in
jmp
inc
xchg
test
in
test
pop
push
outsb
jnp
lret
js
xchg
adc
sbb
pop
xchg
ret
mov
jb
mov
popa
mov
xchg
inc
and
and
test
push
in
mov
imul
popa
ret
cs
les
fwait
mov
push
mov
mov
cmp
test
rcpps
clc
mov
popa
cltd
push
bound
inc
mov
adc
and
or
arpl
and
dec
clc
movsl
lods
or
and
or
fprem
insl
sub
neg
cmpsl
test
jl
lahf
inc
inc
lds
int3
lods
mov
push
xlat
pop
sub
inc
mov
xchg
movsl
add
or
sti
sub
xorb
out
push
fisttpl
fs
lods
jmp
pushf
inc
mov
sbb
in
pop
sbb
aaa
in
lds
shll
mov
xchg
and
inc
dec
pushl
xchg
sbb
jnp
and
scas
pushf
movsl
int3
movsl
mov
aam
test
mov
pop
test
jnp
or
fldcw
xor
add
repnz
rorb
pop
lds
dec
push
les
outsb
cmp
out
add
imul
inc
push
or
rolb
pop
lcall
fwait
jo
icebp
cwtl
dec
scas
or
jb
sub
jb
push
jnp
pop
mov
mov
sbb
popa
mov
jle
stos
fwait
and
addr16
addr16
pop
test
add
mov
mov
xor
mov
cli
cmp
es
out
out
push
int3
leave
int
mov
cmp
mov
mov
fnstsw
out
std
jne
dec
leave
fiaddl
std
xor
enter
mov
lds
setne
sbb
gs
and
movsb
mov
inc
test
push
adc
pop
sub
push
imul
in
es
push
loope
fwait
inc
stos
call
or
pop
scas
jle
jae
push
fimuls
test
inc
mov
or
adcl
pop
xchg
in
cld
jmp
mull
outsb
cs
jns
int
or
les
inc
add
lahf
pop
cmp
jno
jmp
xchg
pop
lret
xor
and
or
jge
pop
sarb
cmp
popf
lock
addr16
jecxz
add
mov
clc
movsl
mov
test
jle
in
xchg
fimull
cmp
sub
scas
subl
bound
sub
push
cld
or
cmp
cli
push
icebp
addr16
or
xor
pop
push
and
push
les
call
xorb
gs
xchg
sar
stos
ds
outsb
fs
dec
push
lcall
test
sbb
mov
rcll
int3
cmp
int3
rcll
mov
push
cwtl
sub
mov
rcll
lcall
mov
or
pop
fs
clc
aaa
jg
xchg
mov
push
int3
pusha
and
loope
xor
or
mov
add
and
fildl
fldz
sbb
cmp
pop
ffreep
fwait
sub
adc
movsb
fwait
lods
cmpsb
lret
mov
cmc
pop
jp
add
mov
mov
mov
iret
inc
dec
xchg
daa
cmp
push
jecxz
mov
adc
pop
cmp
iret
mov
pop
pop
mov
fstps
ja
lret
movsb
jg
mov
dec
call
push
xchg
scas
and
out
adc
scas
pop
leave
in
sub
mov
popl
lock
mov
popf
or
repz
xchg
ret
sti
out
mov
xchg
gs
arpl
xor
mov
or
jl
mov
nop
adc
lea
mov
enter
std
in
mov
jo
dec
call
aaa
repnz
and
xchg
jle
mov
popa
stos
adc
add
mov
icebp
pop
aam
call
ds
xor
xor
sub
lea
cmp
pop
ret
in
aad
out
xor
lock
aam
cmpsl
aas
repnz
pop
inc
cmp
jecxz
scas
push
xlat
fmull
sahf
cmpsl
imul
and
imul
out
push
inc
mov
daa
dec
and
ret
cltd
popf
in
out
add
sub
fidivrl
xor
and
filds
subb
inc
mov
pushw
in
fisttps
adc
fistpll
leave
mov
lds
aas
pushl
sbb
stos
cmp
cmp
lea
lret
out
mov
jl
push
flds
dec
dec
aas
jbe
push
imul
xor
xchg
mov
stos
pop
inc
mov
ja
divps
mov
push
add
cs
inc
jno
mov
mov
hlt
sub
inc
imul
psubd
xor
add
rorb
cmp
aaa
jmp
clc
out
lods
push
xchg
iret
fwait
imul
mov
dec
push
push
push
cwtl
je
xor
push
imul
cmp
loopne
cmpsl
mov
cmp
sub
gs
movsl
clc
sbb
jg
clc
loopne
or
bswap
stos
or
shlb
lahf
add
jne
mov
pop
stc
or
popf
dec
cs
je
aad
mov
stos
int
dec
adc
clc
sbb
adc
cmpb
movsb
pop
dec
cs
je
bound
mov
mov
mov
dec
xor
negl
ds
jo
lea
jnp
jne
into
mov
insl
shl
stos
push
repz
roll
push
push
xor
jmp
hlt
popa
xchg
ss
mov
test
daa
or
adc
fldenv
xlat
dec
xchg
cmp
jb
popa
mov
add
add
mov
jno
je
xchg
push
xor
push
push
inc
icebp
out
lock
popa
arpl
in
je
dec
push
scas
iret
or
dec
sahf
imul
lret
dec
mov
jne
mov
out
jle
sub
lds
fwait
jmp
xchg
sub
sbb
repz
or
sub
or
jnp
icebp
xchg
mov
mov
sub
mov
arpl
test
dec
xor
pop
dec
in
mov
sub
sbbb
lods
mov
dec
push
jne
enter
inc
div
inc
pop
xchg
mov
cmp
xchg
add
pop
lea
insl
jns
mov
mov
pop
out
mov
sub
jp
mov
mov
bswap
iret
repz
inc
mov
adc
outsl
scas
adc
sub
adc
xchg
movsl
enter
or
adc
in
sbb
sbb
inc
inc
mul
and
or
dec
jae
js
push
mov
test
in
add
decb
int3
lods
cli
into
incb
pushf
push
jp
cmpl
xchg
popf
xchg
shr
fldl
les
pop
mov
cmp
add
mov
in
arpl
bound
sbb
loopne
add
mov
in
jno
xor
and
jge
rcl
jmp
or
sbb
in
pop
movsl
rol
loope
adc
adc
pushf
or
sti
or
das
xor
ret
sub
lock
xchg
xor
mov
int3
sub
hlt
adc
and
cmp
mov
jno
fwait
lea
mov
cmpsb
iret
arpl
aam
add
pop
psubsw
mov
in
aad
sti
push
aam
les
pop
pusha
aad
ficoml
call
pop
lahf
cmpsl
test
mov
mov
adc
cltd
xchg
negb
incl
push
pop
xor
daa
and
xor
aam
xor
mov
cmc
leave
jg
repz
push
push
je
aaa
push
cmc
lcall
sbb
out
sbbl
fisubl
rorl
popa
lds
inc
pop
or
pop
in
mov
add
add
mov
mov
in
xchg
stos
jmp
bound
pop
fsubr
inc
mov
push
roll
test
cltd
xor
adc
imul
js
xbegin
stos
ja
adc
sarl
jne
sub
mov
sbb
daa
scas
push
pushf
inc
mov
sahf
in
jnp
repnz
loope
into
sub
mov
cwtl
pop
push
lods
lahf
cmpl
repz
fwait
js
sbb
jbe
push
movsb
in
mov
dec
pusha
hlt
aaa
xor
sub
out
es
inc
stos
fwait
cmp
inc
pusha
jno
dec
clc
popa
and
pop
div
loop
xchg
xlat
into
mov
lret
push
inc
and
stos
lds
std
adc
or
pop
mov
popa
pop
mov
popf
and
adc
mov
popl
jae
ljmp
sbb
popf
insl
ret
pop
insl
inc
nop
adc
cmp
neg
jp
mov
xor
mov
stos
jl
stos
stos
icebp
rcrl
add
push
xor
cmp
bound
xor
je
shll
mov
leave
pop
push
stos
add
dec
jbe
sub
iret
dec
or
pop
fsubl
nop
aas
sub
push
loop
outsb
jne
test
shr
je
inc
fadds
fucompp
sbb
push
movsl
dec
enter
outsl
mov
cmp
enter
xor
cmpsl
hlt
mov
js
push
push
jecxz
jmp
and
xor
incl
jo
xchg
sahf
sub
pop
xchg
lahf
fidivl
lcall
push
xor
lds
dec
nop
xchg
mov
insb
das
push
pop
adcb
adc
xchg
out
mov
imul
ret
adc
outsb
loop
lock
xchg
sbb
jne
pushf
shr
out
add
pop
pop
jecxz
or
inc
or
outsb
cmp
insl
push
pop
test
cli
sbb
scas
fistps
jmp
and
enter
adcl
scas
jno
push
out
aaa
mov
jp
xor
jns
pushf
pushf
int3
outsb
mov
sahf
push
fnsave
arpl
add
popa
sbb
jl
cmc
cltd
arpl
scas
popa
lods
cmp
jno
lock
dec
mov
cmp
insb
jge
jecxz
or
or
mov
dec
xchg
fstl
jge
sbb
mul
or
jb
test
xor
xor
loopne
mov
icebp
jl
dec
add
or
out
adc
gs
pop
push
pop
cwtl
push
mov
popf
mov
fs
add
out
lret
adc
mov
and
sub
arpl
lahf
mov
or
mov
cld
shl
xchg
pop
scas
sbb
int3
xor
jo
ljmp
pop
push
xor
push
jge
pop
cwtl
rcr
es
movsb
xor
pop
mov
jmp
and
and
adc
movsb
adc
mov
outsb
mov
pop
jno
push
fs
lahf
jno
pop
int3
xor
push
inc
out
ret
ret
dec
cmp
pop
ret
popa
movsl
mov
xor
jae
mov
mov
cmpsl
mov
lock
fwait
push
sbb
jecxz
or
mov
and
aaa
sar
in
push
sbb
dec
jo
or
orb
in
pusha
xchg
xorl
pop
lret
in
jle
rcrl
stos
cmpl
ja
sbb
sbb
in
roll
pusha
jbe
add
or
push
iret
mov
scas
xor
int3
pop
fstl
pop
xchg
pusha
icebp
xor
jmp
insb
int
dec
mov
pop
ja
mov
cltd
add
and
test
movsl
pop
stos
inc
loopne
fwait
inc
push
je
lahf
mov
loop
into
sbb
push
xor
jg
popf
or
sti
sbb
les
insb
das
dec
out
xlat
pop
mov
jo
rclb
jle
rclb
aad
ss
cmp
addr16
in
push
sbb
pop
icebp
aaa
mov
loope
fxam
add
jmp
addb
in
cli
icebp
fildll
sub
ret
fwait
cmpsb
cmc
or
add
or
into
notb
ret
fildl
dec
adc
mov
and
jae
bound
out
adc
mov
fstpl
das
cs
sbb
mov
and
fstps
inc
add
data16
mov
jns
cmpsl
sbb
fildll
add
ret
xchg
inc
movsb
fsubrl
lret
rorl
jbe
mov
jge
out
xor
jecxz
cmp
popf
jmp
outsl
pop
js
lret
xor
aas
pop
cld
lods
movsb
lods
aam
cmp
and
scas
and
mov
push
adc
push
test
iret
dec
push
pop
xor
popf
pop
cwtl
push
dec
xorb
iret
xor
inc
dec
pop
mov
mov
dec
loopne
xor
add
cmpsb
push
cld
pop
mov
call
adc
or
sti
int
cmp
push
incl
push
pop
addr16
sbb
dec
test
and
mov
daa
or
mov
rol
icebp
pop
inc
aam
pop
mov
in
out
jae
lods
lock
cld
bound
dec
fistpl
adc
cmpsl
add
insl
pusha
or
out
xchg
dec
sahf
lret
jp
and
inc
es
jo
adc
fwait
clc
xchg
jmp
adc
mov
sbb
out
jge
test
ret
inc
push
adc
add
pop
lahf
cmp
add
sbb
dec
addb
xchg
push
out
prefetcht1
sbbl
xor
jns
and
fs
xchg
sub
xchg
leave
fwait
xchg
xor
jg
lods
leave
xchg
dec
sahf
or
and
loopne
mov
std
ret
or
inc
lods
movsl
xor
ss
push
sbb
push
pop
mov
and
add
lahf
push
lret
lret
mov
and
sub
hlt
adcb
arpl
fldl
pop
lea
data16
repnz
and
add
adc
call
pop
cmc
push
jbe
xor
addr16
xchg
xlat
sbb
je
inc
jnp
lret
ret
xchg
mov
scas
xchg
les
mov
dec
sub
ficoml
sahf
lea
push
add
out
not
add
mov
icebp
add
add
mov
dec
dec
add
mov
pop
add
lret
fistpll
lods
or
mov
inc
xchg
sar
mov
add
xchg
aad
xchg
call
sahf
sub
test
cmp
outsb
loop
jnp
sbb
xor
mov
xor
jecxz
mov
nop
xchg
mov
fildll
negb
andb
push
shlb
int3
subl
pop
cmp
divb
pop
lret
shlb
jns
mov
mov
adc
push
stos
dec
push
inc
mov
push
or
jno
enter
lahf
das
lret
int
mov
imul
out
mov
out
mov
sub
incb
jecxz
push
adc
cs
out
xor
test
ficomps
in
push
mov
mov
dec
fdivr
cltd
in
xor
xchg
fcomp
sti
fs
push
es
addr16
test
int
fcoml
mov
shrl
pop
insl
lock
sbb
mov
mov
aam
ret
out
push
cs
push
outsl
mov
mov
push
stos
or
adc
or
popa
push
lahf
dec
mov
lds
sahf
lret
or
test
inc
xor
sub
cltd
imul
sbb
jle
xchg
push
push
fsubr
lock
lods
mov
test
cwtl
rorb
jp
sub
and
mov
cld
add
stos
jnp
mov
add
pop
cmp
inc
cmp
adc
push
std
xchg
insl
fisubrl
aad
sbb
rclb
arpl
movsb
and
call
xlat
loop
movl
adc
repnz
outsl
outsl
sub
xchg
pushl
xor
jnp
das
push
sti
pushf
or
mov
ss
call
call
xor
subl
and
jl
xor
or
xorb
and
je
test
pop
push
xchg
jmp
inc
gs
pop
fs
jecxz
jle
xchg
mov
adc
inc
lret
loope
xor
push
or
mov
icebp
add
mov
xchg
adc
dec
out
inc
sub
pop
add
test
add
and
int3
sbb
xchg
sub
and
sbb
ds
pop
fstps
xchg
mov
lock
add
insb
repnz
adc
adc
lahf
jnp
push
dec
dec
and
push
out
sahf
icebp
xor
jbe
ret
fisttps
shl
mov
lret
lea
xchg
nop
or
lret
movsb
sub
insb
fmul
or
and
sbb
cwtl
hlt
cmc
ret
mov
inc
leave
mov
inc
leave
fidivrs
xchg
ljmp
mov
mov
stos
jecxz
jge
inc
jle
mov
lret
addr16
pause
xor
xchg
pop
or
es
jno
sub
in
movsl
fnstcw
xchg
mov
lods
hlt
ja
enter
and
stc
mov
sub
popf
xchg
les
sbb
or
outsb
inc
cmp
mov
aam
jmp
loop
jp
fisttpl
test
loop
mov
push
cmp
mov
ljmp
icebp
cli
inc
push
and
fwait
std
gs
lcall
mov
adc
divb
rcrl
push
call
sbb
repz
push
sub
mov
mov
pop
popf
mov
aas
je
dec
clc
mov
jb
xlat
outsl
push
mov
mov
aad
or
sahf
outsl
insb
or
push
aad
mov
pop
cmpsl
mov
pop
or
pop
lcall
adc
cltd
mov
add
mov
mov
into
negl
sub
aam
lea
xor
add
cmp
jmp
mov
out
sbb
jns
divb
ror
inc
push
cmp
iret
shlb
loopne
or
daa
pop
pop
adc
enter
shlb
xchg
ret
sbb
xor
testl
inc
lahf
mov
jg
add
call
ret
jno
arpl
mov
shrb
mov
cmpsl
xor
jnp
add
cmp
fcompl
dec
add
ljmp
aas
push
or
mov
lret
ret
aas
adc
dec
mov
cs
sbb
pop
shlb
dec
mov
mov
sub
fists
fdivrs
sub
ds
mov
and
jl
and
jae
mov
push
push
pop
jmp
adc
mov
sarl
push
popa
icebp
popf
and
popa
cmp
mov
xor
ret
or
in
sbb
jns
dec
jo
sarl
movsb
xchg
xor
mov
mov
xlat
mov
adc
lds
repnz
ror
mov
popf
shr
jae
mov
xor
fmul
mov
in
dec
sahf
popf
imul
call
mov
inc
arpl
call
xchg
je
xor
test
push
mov
xchg
adc
inc
dec
cwtl
fyl2xp1
xchg
leave
rorb
xchg
rclb
icebp
cld
negb
push
leave
repnz
imul
insl
std
rcl
fisttpll
mov
jl
and
shrl
adc
pop
lcall
idivb
xlat
fmulp
xchg
jp
lret
loope
repnz
stos
jne
push
inc
inc
jbe
jp
das
fadds
or
hlt
cs
fwait
repz
into
cmp
popa
cmp
lahf
js
mov
jl
push
mov
mov
and
or
mov
push
es
insb
cmp
xor
addl
outsl
test
cld
arpl
push
dec
movsb
lret
pop
add
add
out
into
pop
mov
adc
and
adc
dec
lret
push
outsb
fldl
sub
push
pusha
dec
push
mov
popa
pop
mov
adcl
repnz
add
filds
push
push
ret
or
sub
push
inc
push
mov
and
fisubrl
jbe
lods
xchg
inc
inc
jae
inc
call
and
or
lods
mov
push
test
fisubl
push
xor
fdivr
aad
addr16
in
popa
test
popa
mov
inc
or
ss
push
mov
add
das
aam
js
and
cli
mov
and
cmp
mov
pop
jo
jnp
fwait
pop
sbb
adc
cmp
test
inc
loope
cli
std
ja
bound
sarb
sar
dec
lods
loopne
push
es
dec
and
pop
or
sti
mov
outsl
stc
ror
enter
lret
loopne
imul
aas
mov
arpl
sub
sub
pop
and
enter
jne
icebp
cld
xor
fwait
aad
push
arpl
lods
add
adc
rcll
xchg
das
scas
lret
inc
pop
shll
pop
or
mov
mov
mov
imul
inc
or
out
adc
cmpb
push
jp
loopne
movl
pop
adc
mov
insb
inc
popf
jge
icebp
sti
adc
inc
add
hlt
cmp
inc
add
mov
jnp
mov
adc
subb
xor
arpl
mov
int3
pop
mov
ret
mov
mov
xchg
xchg
cli
pop
push
lock
push
stos
arpl
cmp
push
jno
dec
pop
add
repnz
dec
mov
fwait
push
in
test
popa
hlt
dec
inc
and
loope
into
xor
es
pop
fadd
cmp
and
ds
into
inc
ficoms
jbe
adc
imul
ret
and
pushfw
cmp
das
icebp
inc
fcoms
aas
mov
aam
cmp
push
push
subl
inc
cmp
sub
fldenv
cltd
dec
jge
sub
cmp
inc
sbb
push
mov
dec
mov
pusha
xchg
xor
movsl
aam
or
ja
out
and
data16
loop
fiaddl
test
aam
dec
or
icebp
mov
mov
movsl
das
jmp
pusha
sub
add
frstor
ljmp
shrl
out
inc
mov
imul
jns
push
add
loop
mov
xchg
pop
mov
in
data16
and
arpl
sti
jmp
push
pop
out
lds
sub
dec
add
pop
and
stos
and
psrlq
dec
jbe
mov
call
sub
out
loope
out
scas
nop
insl
in
and
fldenv
ja
hlt
andb
xchg
pop
sbb
cmc
imul
xchg
loope
xor
inc
xor
cmp
or
into
mov
jmp
xor
push
cmc
xor
cmp
jb
mov
mov
sub
out
imul
notb
je
xor
pop
lods
xor
jo
dec
loopne
fneni(8087
sub
mov
and
loope
iret
jmp
jb
pop
push
push
xchg
shrl
jmp
mov
inc
inc
test
gs
mov
popf
jae
pop
test
test
das
into
xchg
rcll
mov
xchg
scas
into
sti
mov
ret
adc
sahf
jl
movsl
icebp
enter
sub
enter
fisubl
jnp
dec
js
inc
data16
aad
nop
stos
dec
cld
addl
mov
fisttps
ret
xor
push
dec
pop
pop
inc
stos
jecxz
aam
movsb
adc
bound
std
sub
stos
inc
je
mov
add
in
in
mov
cmc
xlat
movsl
loope
push
inc
lahf
cmp
mov
jo
int3
jo
stos
jge
std
cmpsl
adc
fcmovu
scas
add
das
repnz
sub
push
insl
add
jno
mov
cmc
xor
sbb
mov
subl
cltd
pop
dec
and
jecxz
lock
push
out
xor
sub
and
dec
enter
in
sbb
pop
pop
push
insb
sub
aaa
pop
inc
popa
call
jg
jo
shrb
sbb
rorl
ljmp
out
out
js
sti
push
ds
jbe
int
adc
mov
arpl
les
test
jmp
pushf
cmp
mov
push
nop
dec
outsb
gs
movsb
jne
mov
pop
pop
js
jl
push
lret
mov
addr16
daa
dec
loop
mov
xchg
or
jmp
dec
or
outsb
jns
inc
clc
add
stos
pop
neg
mov
sub
adc
sbb
push
ret
fcomip
xchg
pop
ljmp
adc
pop
or
adc
enter
ficoml
add
pushf
rcr
mov
shlb
add
jmp
clc
xchg
aad
stc
test
enter
xor
rcr
and
ds
xor
sub
sub
xor
lods
pop
and
or
push
and
js
orl
mov
js
in
or
and
cmp
int3
add
push
or
pop
sub
test
push
mov
sub
xchg
dec
pop
enter
push
xor
pusha
lahf
pop
and
jb
nop
lret
repz
inc
sti
inc
adc
mov
push
xor
sarl
cmp
cmp
xchg
loope
lods
mov
movaps
sub
out
xchg
flds
xchg
addr16
mov
imul
andl
scas
insb
les
add
push
sbb
pop
dec
test
lods
lahf
cmp
xor
aad
cltd
movsl
jg
out
fnstenv
sub
lds
jb
repz
or
mov
insb
fidivrl
sub
cwtl
loop
or
shlb
jne
mov
pop
rcll
enter
in
ret
sub
xor
cmp
iret
mov
pop
push
sbb
lret
sbb
lcall
mov
jbe
jno
fstpt
aaa
jns
mov
sub
aas
mov
lret
or
jle
xchg
add
stos
jae
aaa
js
out
in
cmpsl
cwtl
jle
insb
divps
fwait
adc
das
add
call
test
jns
rcrb
cmp
out
or
out
shrl
or
jge
cld
sub
xchg
mov
cltd
mov
xor
dec
cs
jb
test
jb
stc
mov
dec
incb
aam
xchg
stc
stc
aad
stc
adc
shl
push
push
les
stos
addr16
test
les
in
shlb
sti
mov
rcr
fsubrp
and
push
push
jmp
insb
daa
sub
rcr
test
repnz
movsb
aad
xchg
mov
or
testb
sub
rclb
lret
je
scas
lret
cltd
sub
ffreep
dec
mov
mov
jmp
cmp
daa
pop
xorb
mov
sbb
test
pop
ss
leave
cltd
cmpsb
shld
or
shll
add
jnp
cmp
push
outsb
pusha
fs
add
lods
jno
jae
repz
push
outsl
pop
jnp
and
mov
or
xor
das
popa
pop
pop
sbb
rclb
pop
aaa
add
dec
out
mov
inc
ljmp
scas
out
adc
loope
sub
aad
popa
dec
adc
sub
and
into
pop
dec
mov
xchg
ret
xlat
add
fwait
cld
je
rolb
cmovle
popa
sub
js
or
jp
xlat
iret
mov
inc
adc
push
inc
cmp
cmp
inc
mov
xchg
loop
dec
scas
jnp
push
add
aam
enter
xchg
xor
shr
sub
sbb
mov
jmp
jp
mov
enter
test
in
or
mov
pusha
sahf
xor
mov
das
shll
scas
sbb
cmp
outsb
bound
sarl
pop
adc
ljmp
dec
mov
in
stc
in
ret
idivl
ret
dec
fdivp
inc
mov
out
fs
popf
inc
xor
and
or
push
ljmp
mov
and
imul
cmpsl
push
push
push
pop
icebp
adc
scas
rclb
jbe
xchg
jmp
fdivrl
mov
mov
and
cmp
add
mov
mov
jle
fidivs
cmp
jb
into
das
fistpll
stc
test
sbb
mov
jne
dec
inc
inc
les
dec
les
ljmp
in
inc
adc
mov
aaa
insb
ret
sbb
bound
inc
jecxz
nop
mov
inc
ret
fs
leave
cmp
mov
filds
adc
out
cmp
cmp
mov
lret
add
test
loopne
or
bound
lods
pop
dec
sub
xor
out
andb
push
hlt
stos
add
adc
enter
aas
dec
pop
mov
das
mov
mov
xchg
lock
into
push
mov
mov
dec
adcl
dec
test
jb
stc
or
mov
cmp
or
fs
loop
scas
movsl
test
jl
daa
dec
hlt
sbb
fnstsw
addr16
jl
push
mov
cwtl
or
push
lods
push
comiss
cmpps
cmp
add
aad
es
jle
and
fidivl
xchg
sahf
aam
mov
xor
jne
aas
mov
add
inc
jae
fistpll
xor
cmp
dec
in
fdivr
xor
ret
bound
les
push
pop
cs
inc
mov
mov
mov
imul
movsb
pop
sub
jmp
xor
inc
dec
cpuid
push
mov
sahf
stc
or
popw
test
test
sbb
insl
addr16
aad
mov
in
adc
ljmp
aas
jbe
push
mov
pop
pop
or
mov
rcrb
add
ljmp
xor
push
divl
push
mov
rcrb
and
daa
mov
add
adc
rorb
mov
jno
repz
and
stos
mov
push
cmp
mov
shl
jo
xchg
sahf
xchg
mov
dec
jmp
jae
pop
lret
sub
mov
loopne
negb
add
sub
dec
out
insl
js
push
jecxz
mov
rorl
sub
orl
hlt
aaa
mov
jge
pushf
fcmovb
mov
and
sub
push
sbb
adc
notl
lods
cs
or
loope
push
les
jg
lods
dec
mov
lea
push
divl
xchg
cwtl
mov
mov
inc
data16
push
xor
xchg
lea
or
inc
xor
and
outsl
ja
pop
or
lods
and
dec
mov
lods
mov
jecxz
in
icebp
push
fwait
scas
lret
gs
shr
mov
sub
ret
int3
scas
stos
cmp
addr16
ret
cmpsl
rcll
call
adc
ret
in
popf
push
in
mov
and
test
push
insb
mov
imull
xchg
mov
nop
inc
sbb
jae
sub
leave
pop
add
sub
jp
out
scas
mov
mov
cwtl
pop
lcall
dec
inc
cld
scas
mov
data16
negb
pop
or
cmpsb
or
fs
nop
arpl
mov
aas
lods
mov
sub
dec
push
mov
ljmp
dec
jbe
in
jle
cmp
push
outsb
mov
mov
iret
or
mov
test
inc
push
dec
push
mov
jge
daa
jl
movsl
xor
data16
xchg
sti
data16
xorb
out
fbstp
stc
pop
sub
pushf
xlat
outsl
mov
bound
dec
shll
pop
ret
pop
ret
jb
imul
xor
adc
cmp
stc
insl
movsb
xchg
cltd
pop
iret
xor
jbe
aam
sbb
sub
sar
sahf
adc
fnsave
pop
out
cmc
mov
adc
xchg
push
jb
loope
mov
pop
and
dec
sub
mov
in
rol
xchg
outsl
mov
pop
jbe
xchg
movsw
hlt
adc
push
les
popf
out
clc
sarb
lcall
sub
imul
mov
into
mov
fildl
cwtl
fs
ds
loop
int3
cmpl
mov
inc
lcall
std
lea
push
mov
in
lock
jno
call
aam
data16
sbb
inc
mov
dec
loope
xchg
in
jns
cmp
cwtl
mov
inc
test
in
loope
sbb
iret
sub
push
sti
ds
sahf
jae
movsb
dec
fdivrl
test
aas
iret
adc
cs
mov
fs
les
in
shlb
lds
ss
ljmp
push
mov
cld
jg
out
outsl
or
rolb
and
pop
and
lret
movsl
in
mov
mov
xchg
sub
push
pop
pop
outsl
notb
sbb
mov
sub
jno
imul
pop
inc
outsb
mov
sarb
out
mov
xchg
mov
cs
imul
sbb
shlb
mov
out
pop
sbb
sub
xor
repnz
jo
add
mov
xlat
xchg
or
mov
mov
sub
incl
xchg
mov
mov
cmp
cmp
arpl
xor
jbe
jp
fcmovu
cmp
mov
xor
lods
icebp
mov
xor
mov
sub
adc
jle
insl
jl
inc
mov
add
sbb
jecxz
push
aam
xor
lods
aas
comiss
aas
repz
loope
push
push
push
push
mov
jp
ljmp
sbb
xlat
mov
mov
scas
and
pop
push
in
mov
addl
jge
fucomi
popf
insb
roll
cmp
call
insl
les
enter
jl
test
sti
inc
loope
mov
pusha
in
inc
pop
ret
xor
sar
test
in
inc
into
sub
inc
repnz
daa
xchg
mov
adc
mov
sbb
add
mov
inc
repz
fisubs
adc
imul
mov
hlt
outsl
cli
and
dec
jmp
jg
das
sarl
aam
cmp
ffreep
or
es
xorb
mov
add
subl
mov
out
xchg
push
sbb
inc
adc
pushf
jae
jne
push
fcoml
mov
loop
xor
jns
out
mov
or
or
ret
stos
xor
inc
xlat
pop
adc
rolb
mov
and
cmp
sub
aaa
popa
rcl
jp
ss
call
iret
or
cli
ljmp
adc
sub
lock
mov
mov
inc
or
les
mov
mov
or
mov
mov
and
mov
fimuls
repz
mov
sub
lods
scas
mov
inc
iret
les
movsl
mull
mov
stos
mov
jge
mov
xlat
push
popf
shrb
push
aaa
inc
xor
dec
push
or
sub
lret
and
insl
test
or
jecxz
dec
push
xor
fs
dec
fxch
pop
outsl
adc
roll
mov
mov
cmpsl
lods
data16
and
out
jbe
jnp
stc
and
push
fwait
inc
divb
jbe
iret
mov
aaa
jne
testl
loop
mov
dec
inc
mov
lret
fsub
popf
adc
cli
out
movsb
mov
fiaddl
popa
jno
push
in
jmp
daa
jno
out
cmp
aas
loope
mov
out
xchg
out
sbb
lahf
sbb
dec
xchg
repz
adc
lcall
cmpsb
cmp
inc
adc
adc
in
dec
mov
test
shll
lods
and
testb
and
mov
mov
aam
mov
test
das
xor
adc
adc
nop
xlat
std
dec
das
cmp
icebp
mov
and
and
mov
enter
roll
movsb
jp
fsubs
movb
jno
sub
adc
mov
dec
jmp
int
jno
sti
addr16
jbe
push
or
pop
mov
sbb
and
js
and
adc
mov
aad
lods
das
addr16
cmc
cmp
or
movsb
mov
pop
ret
inc
push
xchg
cmp
mov
or
add
cmp
aad
shrl
and
mov
xor
mov
sbb
aaa
aam
clc
sbb
and
add
pop
inc
sarl
loop
push
insb
aad
xor
test
cmpsl
xchg
mov
inc
pushf
and
std
cli
call
jmp
jmp
sub
dec
icebp
cmp
ss
xlat
push
ds
mov
negb
pop
cli
add
inc
sub
rorl
xor
jae
mov
dec
outsb
outsl
xchg
and
jno
cmpb
insb
and
imul
xor
push
pop
push
push
sbb
cmp
pop
out
pop
outsb
cmp
push
push
clc
cmpsl
pop
sub
add
dec
sub
aad
pushf
fs
mov
add
jbe
std
mov
arpl
insb
cwtl
add
push
add
cmpsl
addr16
repz
cmp
mov
push
fistl
es
mov
test
pop
daa
test
add
cmp
or
sub
andb
outsl
rorb
push
lods
add
and
stos
aas
insl
push
pop
in
push
loop
and
dec
addr16
imul
cmp
cwtl
fstpt
out
and
pop
lods
adc
pushf
pop
cltd
aas
mov
or
outsl
and
lods
call
dec
jns
lret
pop
lea
arpl
jmp
and
sub
imul
cmc
jnp
data16
push
insb
ret
leave
cmp
fdivr
sbb
jmp
loopne
inc
cltd
lds
outsb
outsl
fsubrs
or
ret
ret
push
insb
mov
push
xor
call
lds
and
je
insl
mov
mov
lahf
iret
and
jnp
in
or
das
push
in
hlt
jge
xchg
mov
sbb
lds
adc
sbb
adc
fisubs
jb
adc
lret
ret
jo
fsubs
or
inc
inc
jne
cltd
sarl
add
jne
pop
into
mov
mov
xor
repz
dec
sahf
inc
not
das
dec
xchg
outsb
aad
mov
in
push
stc
jmp
push
sub
dec
mov
mov
cmp
mov
mov
popf
inc
pop
mov
cwtl
aaa
inc
repnz
les
out
and
mov
lea
pop
sahf
xchg
gs
call
push
adcl
sbb
cld
ljmp
mov
cltd
aaa
data16
stos
inc
xchg
inc
pop
push
jg
ret
xchg
fs
push
mov
das
jl
jecxz
mov
xchg
orb
ret
ja
aad
lcall
dec
loope
dec
sbb
in
mov
adc
loope
or
cmp
xchg
leave
repnz
out
adc
pop
add
jecxz,pn
mov
pop
jg
xor
int3
rorb
pop
dec
fnsave
xchg
push
pop
cwtl
in
rorl
mov
sub
xchg
mov
pushf
pop
pop
push
mov
sbb
ds
pop
out
pop
cmp
arpl
adc
push
jbe
mov
sarb
cwtl
out
pop
add
jo
adc
pop
jl
fiadds
jecxz
sub
push
lcall
adc
les
jp
or
xchg
test
mov
push
out
addr16
mov
pusha
dec
mov
call
inc
sbb
adc
xchg
push
or
xchg
in
dec
jp
icebp
jo
cmp
cmpsb
push
roll
enter
sbb
sbb
or
in
lret
or
popf
sub
mov
jae
mov
loopne
add
aaa
imul
jbe
and
loop
popf
xor
cmpsl
push
daa
insl
clc
fists
mov
nop
movsl
and
movsl
je
in
cmpsl
cwtl
mov
adc
ret
push
jmp
scas
mov
inc
jl
inc
mov
xor
fs
out
sub
pop
pop
mov
cmp
or
int
xchg
mov
enter
sub
lcall
fisubs
clc
dec
gs
inc
fidivl
xchg
stos
xchg
or
cmp
repz
fnstsw
ja
or
push
and
mov
sub
xor
cld
pop
js
sub
pop
and
cmpsb
pop
pop
scas
xchg
xlat
insl
adc
sub
neg
mov
fwait
mov
mov
push
inc
lahf
out
add
aam
and
sbb
mov
jae
push
enter
fnstsw
fistl
fldt
int
adc
je
mov
xchg
xor
shll
popa
outsl
adc
cmpb
imul
cli
mov
adc
scas
dec
jle
popa
sbb
dec
pop
cmpl
sahf
pusha
add
mov
dec
lcall
clc
scas
dec
scas
add
push
push
subb
and
sbb
mov
mov
jb
or
push
bound
outsb
divb
inc
mov
or
sbb
or
push
negb
leave
fbstp
fcomps
adc
stos
and
cli
les
sbb
mov
rolb
push
push
xchg
push
push
cmp
icebp
jl
aam
or
leave
or
cmpsb
sbb
adc
xorb
clc
frstor
ds
and
cwtl
dec
loope
cli
sbb
test
fimull
push
jp
jae
movlps
sbb
jb
pop
outsl
addr16
cwtl
mov
inc
xlat
test
and
pop
lds
rorb
bnd
aam
push
mov
lds
dec
xchg
or
adc
aaa
adc
inc
jp
mov
stos
incl
push
je
jnp
in
inc
cld
popf
fsubrs
dec
and
lret
adc
rcrb
in
testb
mov
fmuls
push
aas
cs
mov
dec
mov
cltd
ja
mov
jno
sbbl
adc
pop
push
xorps
cmp
inc
add
cmc
xor
cs
xor
sbb
mov
lahf
and
leave
cmp
dec
sti
loop
inc
xchg
scas
iret
dec
loope
sub
adc
mov
loopne
xchg
in
pop
ja
ffreep
mov
cmp
fdiv
out
ds
lret
std
add
aas
int
repnz
lods
repz
pop
cs
mov
addr16
stos
sub
sbb
mov
cmp
loopne
es
pop
inc
sbb
imul
les
cs
out
add
outsl
dec
cmp
or
push
shll
mov
or
sbb
nop
cmp
xchg
movsb
call
ja
mov
push
sti
enter
call
cld
test
mov
jnp
inc
out
cltd
or
cmpsl
cmp
stos
cwtl
lods
inc
dec
cli
cmc
es
adc
std
repnz
arpl
loope
or
scas
cmp
daa
fstpl
js
fistl
dec
lcall
rcrb
cmpsl
outsb
cmp
ss
test
nop
shlb
or
mov
js
xchg
pushf
cmp
pop
sar
ljmp
arpl
jmp
fwait
imul
insb
mov
and
popa
aas
dec
push
inc
shll
cwtl
fs
ret
dec
lahf
lods
push
lock
test
or
xor
sub
test
inc
sub
mov
add
cs
int
loop
push
es
out
fidivl
out
sub
das
jge
xor
xor
mov
xor
das
adc
ja
movsb
sub
and
into
daa
sub
cs
sti
or
es
push
jecxz
aas
jmp
lods
stos
add
subb
stc
jle
setns
sbb
icebp
sbb
es
inc
lea
mov
adc
cli
and
fimull
add
shl
mov
divb
aaa
enter
jb
pop
lods
or
xchg
or
cmp
mov
and
jl
lds
pushf
in
cld
mov
inc
rcrb
ds
and
adc
in
xor
inc
notl
mov
addr16
rclb
mov
and
out
mov
mov
cli
xor
pop
sbb
or
dec
lods
cmp
inc
divps
sbb
stos
push
outsb
and
mov
adc
jp
arpl
jge
xchg
mov
jp
sub
jbe
cli
adc
loopnew
xchg
sub
std
xor
jmp
xor
lock
aam
mov
mov
mov
mov
and
sbb
ljmp
lods
das
sub
ficomps
mov
add
lahf
push
repz
lcall
or
in
dec
arpl
pop
lds
push
fdivl
push
push
sub
xchg
movsb
mov
das
add
jbe
daa
pop
out
fsubs
lods
ss
sbb
cmp
xor
data16
enter
enter
fldl
sub
pop
mov
stc
xchg
movsl
jmp
push
pop
leave
push
push
test
pop
jecxz
jecxz
out
test
repnz
dec
or
pop
outsb
mov
mov
enter
fs
imul
dec
imull
daa
enter
leave
cli
ret
push
imul
outsl
lahf
mov
stos
pusha
je
sarl
or
xchg
pop
push
lea
test
mov
sahf
pop
xchg
repnz
or
repz
int3
inc
dec
mov
xor
xor
rcrb
scas
or
fdivs
push
mull
sarl
scas
cmp
mov
cltd
dec
xchg
xchg
inc
je
pop
adc
pusha
jge
jle
inc
rorl
lds
mov
call
dec
or
xor
dec
dec
mov
push
push
das
sbb
cmp
lcall
pop
mov
call
xor
or
pop
fisubl
test
mov
stc
jge
fisttpl
push
js
push
cltd
or
lds
into
in
adc
pop
lods
jo
sahf
mov
inc
xchg
jae
and
sub
bound
adc
pop
repz
push
stos
jbe
xchg
inc
sub
and
xchg
mov
in
cmpb
fistl
lock
jnp
adc
cmp
xlat
in
or
pop
xchg
pop
ret
xchg
les
cwtl
pop
sub
dec
lea
sbb
div
mov
mov
add
int3
ss
rcl
dec
and
ss
cs
xchg
in
ficoml
mov
dec
xor
jl
pop
insl
stc
sbb
test
push
clc
cld
shlb
and
inc
enter
and
addr16
rol
mov
leave
es
fstpt
mov
out
fsubl
clc
pop
jns
lahf
lods
daa
sbb
mov
xor
mov
insl
cld
sbb
enter
cmpsb
xchg
movsb
mov
sbb
push
outsb
mov
cmp
jne
inc
mov
inc
sub
dec
lcall
cmpsl
ret
jne
add
mov
push
into
fcmovnu
popa
mov
ds
stc
dec
adc
roll
mov
jecxz
out
inc
jp
jno
sti
lods
das
in
sub
mov
das
cld
sub
dec
pop
mov
sub
dec
pop
les
mov
jge
stos
mov
mov
mov
ret
in
enter
iret
mov
add
jl
data16
shrb
add
clc
lock
popa
cld
jo
dec
pop
mov
outsb
dec
jl
push
stc
addr16
adc
xchg
mov
mov
add
sbb
sbb
jge
ds
orl
pop
jbe
jb
out
cmp
mov
fstpl
mov
or
sub
sub
and
push
cmpsb
mov
and
inc
daa
fld1
js
cmp
test
push
dec
inc
popl
jno
pop
addr16
sarl
ud2
out
insl
je
xchg
popl
iret
test
je
call
push
mov
int3
sti
cmp
mov
bound
mov
inc
js
mov
mov
mov
lret
insb
mov
in
xchg
loope
jno
dec
int
jmp
xor
pop
or
fmuls
or
cmp
je
jne
fucomi
push
shll
mov
sbb
loop
loopne
push
shll
push
addr16
jmp
lcall
mov
sti
xchg
mov
mov
dec
cmp
sahf
stc
push
imul
shrb
inc
lret
push
loopne
mov
and
orb
and
stos
orb
fdivrl
mov
jg
aas
xchg
cltd
cwtl
jns
decl
test
jle
arpl
mov
or
pop
mov
iret
mov
or
loope
push
xchg
push
xchg
jae
arpl
dec
arpl
jle
push
rorl
mov
repz
xchg
out
sbb
cmp
inc
xor
mov
xor
add
pop
iret
mov
fimull
pop
inc
subb
sub
inc
sti
xchg
push
inc
xchg
stc
imul
pop
out
pop
daa
clc
scas
out
cmpsb
gs
push
idivl
xlat
repz
ljmp
aad
mul
icebp
xchg
cmp
and
jbe
pop
insb
xor
mov
push
pop
into
mov
pop
clts
jae
push
cs
mov
push
loopne
pop
icebp
cmp
js
fistl
mov
gs
popa
mov
cmpsb
dec
lods
mov
fsts
jae
sbb
fstp
adc
push
outsb
ret
fbstp
push
cmp
xchg
adc
cmc
fcomps
mov
cwtl
xor
or
push
xchg
rclb
arpl
fwait
mov
mov
and
test
es
mov
incb
mov
jp
xchg
loope
js
xorb
mov
push
xchg
ljmp
out
sub
cmp
rolb
incb
xor
les
xchg
jmp
shll
ss
pop
lcall
xchg
pop
add
add
mov
insb
and
push
sub
mov
mov
loope
mov
adc
mov
xchg
sbb
mov
ja
in
push
in
ss
and
add
ljmp
lds
mov
fwait
ret
xor
pop
imul
mov
or
jge
arpl
hlt
inc
lods
jl
movlps
sbb
push
mov
out
hlt
sarb
lea
int3
push
xchg
movsl
imul
dec
cltd
add
pop
stos
mov
or
ja
cmpl
jo
mov
dec
lcall
pop
sbbl
sub
add
pop
mov
je
orb
pop
mov
pusha
mov
lcall
js
mov
les
mov
mov
gs
sub
lret
pop
xor
pop
jmp
ficoml
daa
aad
and
sub
stos
sub
std
test
data16
outsl
sub
lret
lods
sub
jle
cmpsb
scas
scas
insb
or
rorl
aam
push
push
add
mov
bound
and
int3
or
imul
xor
xor
or
xor
iret
lret
in
mov
fstps
movsb
mov
pop
push
stos
adc
jg
inc
pusha
jp
in
cmpsb
bound
scas
lds
bound
stos
es
mov
dec
mov
inc
xor
sti
test
add
inc
inc
ret
ss
es
cmp
and
jae
movsl
mov
nop
jns
mov
push
daa
fwait
andb
jns
adc
ss
xor
ljmp
std
sbb
in
mov
movsb
cmc
adc
out
lret
adcb
cwtl
jmp
xchg
cmp
out
dec
ss
imul
jp
out
xor
cltd
cmpsl
xchg
push
xor
jl
cld
je
or
shl
push
ja
push
mov
sub
cwtl
xchg
ret
xchg
mov
cmp
and
sub
sti
aad
frstor
add
fidivrs
inc
jne
leave
ljmp
xor
and
jle
ja
cmp
inc
in
repnz
jo
fisubrl
jmp
aaa
add
cmp
pop
pop
jle
adc
js
out
inc
aas
subl
push
out
sbb
mov
cmpsl
mov
push
cmc
cli
cmp
scas
fsubs
imul
or
lock
xorb
scas
push
mov
dec
mov
enter
cmpsb
xchg
sarb
xchg
inc
push
lret
dec
lret
dec
cmp
mov
call
xor
and
jge
rcrl
inc
filds
mov
cs
xor
insl
fcmovbe
push
mov
jbe
andl
push
xchg
ja
and
insl
push
sub
mov
push
xor
mov
rcll
imul
add
adc
sub
xchg
in
hlt
addr16
popa
stc
std
mov
sbb
les
ds
loop
dec
push
pop
mov
lcall
mov
jns
clc
jl
inc
roll
mov
inc
adc
lea
lods
sub
xor
and
push
cmp
sbb
es
adc
ss
jg
cmpsb
inc
dec
lock
js
lret
and
push
out
dec
dec
leave
test
cmp
xlat
loop
and
sbb
or
or
jmp
pop
repz
aad
lods
repnz
fiaddl
or
push
incb
xor
insl
jp
les
fsubrp
xchg
lret
scas
inc
sbb
cmp
ds
fs
add
cs
mov
dec
sbb
jmp
lods
sahf
stos
testb
jb
sbb
dec
xor
dec
pop
xchg
push
imul
imul
movsb
pop
outsl
dec
dec
cmp
xchg
mov
mov
mulb
loope
lahf
xlat
sub
pop
xchg
or
sub
adc
mov
mov
dec
sub
cld
enter
push
in
fmul
dec
jne
mov
ja
pop
test
sti
cmpsb
or
mov
mov
jnp
add
arpl
ljmp
daa
mov
pop
mov
insl
dec
xchg
cli
lods
or
sbb
rclb
iret
mov
pop
or
jns
mov
add
test
push
fwait
das
inc
mov
jnp
cmc
pusha
xchg
es
mov
lret
xchg
add
xchg
lcall
xchg
movsl
ja
push
dec
dec
jbe
sub
stos
out
adc
rcpps
sub
sti
mov
mov
push
or
jl
mov
in
sbb
xor
ficoms
or
mov
cmc
nop
or
lahf
mov
addr16
mov
sbb
popl
mov
adc
pop
sub
scas
jl
pop
xlat
cmp
aaa
xor
in
loopne
fcmovnbe
out
or
mov
aaa
sahf
push
xor
mov
ss
add
icebp
insb
stos
imulb
pop
mov
call
cld
jle
adc
dec
pop
pop
push
xchg
aas
insl
xchg
fs
pop
mov
mov
mov
fcmovnb
je
data16
pop
xor
xchg
mov
lret
or
fbld
loope
mov
mov
push
sub
push
sbb
or
dec
rolb
xchg
imul
pop
inc
subl
jae
stos
fcoms
addl
add
xchg
xchg
mov
mov
shl
icebp
add
mov
in
jp
jae
aam
mov
movsl
adc
mov
mov
push
fsubr
sbb
sbb
mov
jle
adc
in
inc
xchg
inc
mov
mov
stos
ret
rolb
arpl
cmp
popa
ss
insb
jg
aad
cmp
add
xor
fdivrl
push
mov
dec
les
mov
xor
inc
loope
fistl
js
sub
stos
sbbb
mov
addl
data16
sub
mov
sahf
mov
cmp
push
mov
punpcklwd
mov
jo
rcr
push
stc
iret
xor
out
mov
test
adc
sbb
sbb
out
sub
call
sub
add
or
stos
pop
loope
and
mov
lock
enter
cltd
in
cmp
pop
lds
or
lods
mov
inc
pop
push
decb
std
in
inc
jb
mov
nop
xor
inc
in
dec
repz
mov
mov
mov
cmp
sub
pop
in
sub
popa
mov
xchg
fdivs
cmc
cwtl
leave
xchg
iret
es
shlb
clc
cltd
ret
xor
idivb
mov
dec
jg
pop
xchg
pop
adc
mov
test
jne
movsl
mov
into
jae
add
and
inc
pop
push
jg
orl
fneni(8087
pop
fsub
adc
lret
into
imul
jno
rclb
aad
inc
lret
adc
dec
xor
lret
xor
dec
and
push
mov
mov
out
hlt
int3
or
pop
aaa
aaa
lcall
xchg
push
pop
das
loope
cli
adc
in
jno
sub
jmp
pop
xchg
cmp
arpl
xchg
or
aaa
outsb
sub
insl
jo
mov
and
fsubl
gs
mov
popf
aaa
mov
inc
adc
cmpsl
cmp
repnz
adc
lods
in
mov
jbe
pop
icebp
sbbb
cmp
mov
or
es
mov
xor
adc
adc
jns
sub
push
pusha
and
xor
xchg
push
sub
jge
cmp
test
or
hlt
xor
test
int
iret
push
push
popf
jno
sti
andb
cltd
repz
movsb
stos
fsubrl
xor
cmp
out
xor
xor
sub
inc
pop
dec
ret
fwait
jne
or
mov
or
cli
inc
xor
cmpsl
mov
inc
ficoms
lea
xchg
aaa
test
push
scas
sbb
push
dec
inc
stc
mov
les
mov
push
hlt
mov
inc
flds
dec
int3
jne
addr16
rcl
push
lcall
push
lods
pop
arpl
subl
mov
pushf
shlb
push
leave
jo
inc
test
jbe
test
je
sub
pop
popa
dec
push
ja
xchg
jns
nop
pop
lcall
cmp
into
je
mov
pop
pop
jns
frstor
fs
jno,pn
fbld
adc
mov
and
fisubrl
test
nop
repz
jae
js
ss
je
imul
imul
mov
lods
pushf
pop
ds
sbb
xor
dec
cmp
or
push
xchg
xchg
adc
or
cs
ljmp
xchg
mov
pop
jl
popf
inc
rorb
arpl
xor
xchg
push
jmp
testl
xlat
jbe
neg
inc
jae
orb
mov
ret
jmp
sbb
add
xchg
pop
mov
jle
jle
sbb
sub
mov
mov
mov
mov
call
xlat
repnz
push
fdivl
in
xchg
xchg
repnz
scas
inc
ret
sub
inc
rclb
lret
or
inc
xchg
mov
in
push
js
jmp
adc
adc
lods
jnp
stc
mov
fsub
mov
pusha
in
mov
fldenv
sbb
jge
insb
mov
int3
movsb
gs
repnz
stos
mov
aam
inc
jbe
pop
out
mov
movsl
mov
fistl
inc
sbb
ja
negl
pop
inc
lods
push
or
dec
pop
sub
push
cli
in
cwtl
or
lcall
jo
mov
lods
fisttpl
test
in
pop
adc
push
insl
cmp
ret
popf
push
dec
jo
inc
jge
aaa
lret
ret
pop
fmul
popa
cmp
ret
mov
sbb
std
divb
leave
push
testl
in
inc
ret
rol
test
pop
movsl
mov
adc
xchg
dec
mov
clc
jecxz
sub
inc
push
sbb
adc
data16
pop
sub
jne
gs
lret
and
movsl
in
outsl
mov
je
pop
add
pop
inc
insb
mov
dec
pop
imul
sbb
sbb
popf
adc
pusha
gs
movsb
xor
xchg
mov
andb
mov
dec
rcr
add
imul
cmc
xchg
sbb
adc
xchg
dec
adc
pop
push
adc
test
aad
lret
sub
sub
mov
es
mov
fcmovu
scas
sbb
sahf
movsb
mov
enter
or
scas
pop
icebp
dec
xchg
jb
lds
aam
xor
xchg
pushf
imul
daa
push
push
fstl
cwtl
dec
inc
int3
jmp
add
xchg
mov
cmp
mov
sbb
out
xchg
push
popf
lret
adc
ret
lret
test
out
pusha
test
push
mov
sub
loop
sub
into
mov
shrb
insl
and
icebp
inc
testl
pop
mov
xchg
orb
enter
inc
bound
fcomps
js
hlt
addl
jl
pushf
xorb
mov
fidivs
push
icebp
adc
xchg
lock
neg
ss
push
insl
add
jb
inc
nop
jnp
push
std
loopne
sub
js
lea
pusha
mov
jne
and
out
movsl
xchg
shrb
int
les
dec
mov
fwait
mov
xchg
shlb
lret
into
push
in
ret
dec
xor
push
std
cmp
divb
shrl
ja
pop
repz
add
js
lret
ja
add
test
jnp
xchg
xor
loope
mov
pop
xor
mov
sbb
push
xchg
mov
push
jge
xchg
and
into
cmp
addl
loopne
mov
xor
mov
cmp
rclb
pop
cltd
pop
pop
popa
mov
das
cmp
xchg
nop
cmpsl
xor
mov
std
lock
dec
nop
out
outsb
fwait
stos
mov
jl
xchg
nop
sub
mov
jb
sbb
mov
lret
mov
js
cmp
loop
sub
repz
scas
mov
dec
xchg
ja
cmp
cmp
in
and
sub
imul
mov
adc
mov
idivb
ret
cwtl
int
xchg
push
mov
subl
imul
rcrb
inc
mov
mov
inc
mov
xor
push
push
cmc
inc
jnp
subb
mov
adc
iret
sub
inc
leave
ljmp
inc
mov
das
push
and
mov
sahf
mov
or
lcall
adcb
lret
add
into
inc
outsl
loopne
fsts
cmp
sub
add
mov
dec
out
lret
packsswb
scas
xchg
cs
ret
adc
clc
jbe
xor
les
aaa
jmp
lds
dec
insb
xorl
inc
lahf
lock
fisttps
xlat
inc
test
adc
push
add
or
xor
pop
lods
loopne
mov
or
outsl
fwait
pop
fwait
rorb
add
stos
je
cli
pop
dec
dec
xchg
fwait
roll
jg
push
int
push
enter
adc
insl
ljmp
mov
inc
or
and
mov
xchg
out
xchg
push
dec
rcr
sarl
int
cmp
daa
mov
out
cmp
test
movsb
push
pop
out
mov
add
insb
loop
insl
jl
inc
xchg
popa
aas
daa
mov
xchg
popa
cmp
push
mov
add
iret
fimull
gs
mov
inc
xchg
lret
test
outsb
xlat
cmp
lods
test
push
jae
in
mov
adc
mov
sbb
fiadds
rorl
add
push
jbe
pop
insb
lcall
cmpsb
cwtl
jne
shr
xor
mov
sti
xor
add
bound
jecxz
fstps
pop
push
insb
or
fstp
stos
mov
mov
scas
mov
pop
lock
mov
cltd
iret
adc
sub
cli
dec
data16
or
push
sbb
cli
mov
and
xchg
cmc
sbb
test
ljmp
repz
pusha
push
popf
sbb
dec
cs
xor
adc
inc
push
mov
ret
dec
lea
mov
xor
pop
lock
add
add
pop
push
dec
jae
sahf
mov
or
mov
in
or
arpl
xor
adc
sbb
js
fisubs
movsb
bound
out
push
xchg
inc
enter
inc
pop
or
scas
pop
jecxz
sahf
jle
lds
or
mov
dec
xchg
std
dec
fnstenv
cmp
mov
cmp
cmp
bound
sub
mov
push
dec
mov
movsbl
inc
mov
mov
mov
out
scas
push
mov
inc
sbb
pop
xor
enter
test
or
xor
or
out
dec
adc
and
pop
sahf
fistpll
pop
shlb
hlt
shll
jbe
dec
lods
data16
jge
int
jmp
pop
jle
fsubrs
ret
xor
xchg
lret
insb
xchg
ja
sbb
out
sbb
push
enter
iret
cmpsl
pop
aaa
cmpsl
in
adc
jle
movsb
ret
nop
pop
push
inc
gs
mov
cwtl
lret
ss
mov
xchg
outsb
mov
addr16
push
inc
in
pop
sti
imul
sbb
add
imull
sub
lret
ljmp
hlt
adc
inc
dec
rcrl
shrb
mov
inc
sbb
inc
jb
mov
xor
bound
sbb
mov
push
fldt
ljmp
sub
std
repnz
aas
in
dec
xchg
call
sti
repz
mov
xchg
cwtl
shl
stc
sbb
sub
dec
push
movsl
stc
lret
loopne
les
xchg
push
fstpl
mov
pop
iret
movsl
and
inc
insl
xor
mov
pop
cmp
and
nop
test
sub
movsb
stc
mov
loop
lret
pop
xchg
ret
sub
loopne
or
mov
and
pop
add
push
insb
add
lods
and
and
fld
cmp
cs
xchg
iret
xor
repz
mov
cmp
cmc
mov
xchg
pop
cmc
loope
inc
in
clc
push
out
jle
dec
mov
or
sub
inc
inc
add
stos
popa
in
lods
push
push
jg
icebp
sbb
pop
loope
xchg
inc
add
loopne
ss
in
ficoml
add
mov
call
inc
dec
fimull
lods
cmpsb
dec
scas
mov
pop
mov
inc
mov
fidivrl
scas
in
cli
je
bound
lret
jns
lret
test
jno
dec
cli
dec
inc
push
pop
cmp
enter
dec
out
jecxz
sbb
mov
ret
stos
xor
push
aam
outsl
mov
jnp
stc
fildl
out
insb
cwtl
xor
insb
call
inc
push
fcomps
jmp
mov
out
xchg
adc
incb
adc
add
mov
cmp
push
ds
jne
mov
lret
xor
adc
fxch
pop
in
mov
mov
pop
xor
lahf
repz
cltd
movsb
int
jae
mov
cmp
ja
rol
and
aaa
in
popa
loopne
pop
cmp
mov
ret
mov
adc
push
outsl
movsb
fs
push
add
daa
inc
adc
loop
mov
xor
pushf
xchg
outsb
push
dec
mov
xchg
mov
add
sub
xlat
mov
popf
test
jge
sbbb
testl
and
or
xchg
sub
cs
add
push
cltd
dec
icebp
add
pop
adc
mov
inc
jge
mov
popa
xor
adc
ret
or
jbe
cltd
imul
addl
popa
dec
aaa
mov
lret
icebp
neg
ljmp
nop
icebp
pop
jg
out
daa
xor
or
in
xchg
in
push
fdivrs
push
jae
aas
idiv
stos
cmp
xlat
int3
icebp
jbe
mov
inc
push
xor
movd
sarl
pushf
pminub
aaa
cmc
adc
sub
mov
push
mov
ret
push
js
imul
mov
inc
push
clc
movsb
pop
or
lahf
fdivl
mov
data16
xorl
adc
inc
das
cmp
mov
pop
js
mov
das
sahf
divps
bound
push
lods
add
std
into
pop
insl
jo
ret
cmp
xor
mov
xchg
les
jg
push
testl
pop
mov
push
daa
in
fmuls
xor
xchg
xor
jns
inc
dec
xorl
jmp
stc
arpl
movsl
movsb
dec
xlat
adc
roll
lock
std
mov
mov
dec
xor
cmc
fnstcw
fisubl
int
aaa
mov
int3
cmp
dec
xor
inc
cmpsl
cmp
dec
stos
jp
lock
cmc
pop
movsl
scas
fmulp
jmp
xor
push
pop
ret
pop
sbb
or
pop
push
and
rcl
sarl
jmp
jb
jae
dec
mov
push
lret
inc
xlat
loop
jecxz
stos
xchg
jl
mov
mov
rolb
push
push
jo
cmp
jae
mov
sahf
adc
adc
mov
lret
jae
push
inc
xchg
ret
es
mov
adc
pop
and
or
jl
lods
add
lret
out
add
out
push
call
ret
jecxz
sti
pop
or
daa
sub
ss
ret
sbb
iret
xchg
sbbb
repz
push
test
push
push
cs
mov
cmp
xchg
and
fimull
test
push
icebp
ds
iret
cmp
call
pushf
jg
cmp
ljmp
or
adc
lods
add
mov
adc
insl
scas
pop
xor
out
es
cmpsb
and
jg
pop
mov
lcall
sbb
icebp
jmp
inc
enter
and
aas
outsl
jo
lret
jp
cltd
testl
shl
in
inc
mov
push
fisubs
aad
cmpsb
mull
stos
outsb
add
jbe
jmp
outsl
cmpsb
cli
pop
js
push
ljmp
mov
loope
dec
jo
pushf
cwtl
ficoml
add
sub
and
cmc
sbb
push
xlat
or
fsubrl
stos
call
and
jmp
aad
push
or
sub
dec
xchg
cmp
push
jmp
dec
mov
and
push
sub
dec
and
mov
push
adc
xchg
dec
enter
adc
inc
das
adc
sbb
das
mov
push
push
mov
icebp
iret
adc
mov
pop
ficomps
cld
xchg
lahf
pop
lods
cltd
loope
bnd
imul
lea
fwait
imul
jno
jge
call
fmul
inc
aam
icebp
push
icebp
ja
fs
addr16
pop
std
xor
jl
xor
xchg
mov
mov
fsubr
xchg
xor
push
sub
insb
mov
xchg
dec
out
andb
sbb
push
fisttpll
and
hlt
ret
xchg
jb
idivb
adc
stos
cmp
adc
mov
and
mov
dec
inc
pushf
jae
mov
dec
test
mov
leave
and
shlb
lcall
xchg
lds
nop
loop
out
cs
sub
js
push
sbb
int3
jecxz
loop
dec
mov
push
cmp
push
testl
je
mov
stos
arpl
bound
addr16
jge
push
add
arpl
or
sbb
push
aad
and
mov
iret
jmp
neg
mov
jle
leave
cmp
mov
or
imul
loope
shll
mov
add
movl
mov
push
push
sbb
out
nop
sub
xchg
aaa
js
add
sti
or
fstl
dec
pop
mov
aad
cmp
test
inc
mov
fmull
pop
pop
mov
push
and
sbb
xlat
aas
and
mov
add
add
push
cmpsl
into
pushf
lahf
inc
xchg
cmp
lret
das
mov
hlt
insl
loopne
loope
or
daa
jl
xchg
push
out
mov
imul
mov
push
clc
xor
int
out
pop
fnstcw
push
adc
cmp
and
push
sub
pusha
mov
cmpsb
scas
stos
or
add
or
add
add
mov
call
xor
xchg
cwtl
mov
cmp
sbb
push
jecxz
inc
cmp
scas
cmp
inc
jns
mov
adc
add
into
adc
shl
mov
fiaddl
sub
ljmp
mov
out
loop
mov
or
stc
xor
mov
shl
sub
jg
mov
shlb
mov
adc
lods
jmp
cmpl
mov
cvtps2pi
xchg
inc
sbb
sub
sub
jmp
int
fmuls
cmc
or
push
sbb
negb
je
clc
xchg
add
scas
mov
mov
or
inc
jnp
jge
je
shr
jge
mov
inc
icebp
stos
dec
push
daa
ret
cmp
scas
pop
push
leave
push
shl
mov
ret
popa
mov
pushf
jl
sub
inc
test
xor
jne
push
lret
sub
addl
ss
pop
jne
push
and
push
lcall
and
cmp
or
adc
xchg
cmp
and
xchg
xor
test
mov
ds
fmuls
mul
or
jno
testl
rcl
iret
add
xchg
lds
or
dec
cmpsl
int
mov
jle
stc
mov
bswap
shll
and
or
hlt
out
dec
or
lods
movsb
xchg
cld
bnd
pushf
popa
rcrb
inc
mov
mov
add
and
push
cmp
jo
jbe
and
lcall
sahf
test
dec
adc
add
pushf
dec
or
dec
das
sbb
pop
jbe
or
dec
push
arpl
mov
clc
in
orb
inc
cmp
xchg
clc
cs
push
mov
cmp
in
in
xchg
repnz
dec
pushl
out
add
jbe
loope
out
pop
adc
mov
les
in
daa
scas
push
inc
insl
aad
fimuls
out
decl
shll
std
inc
sub
pop
ds
push
jle
jne
call
xor
pop
mov
leave
divb
jp
cltd
dec
push
leave
and
mov
popf
lock
or
dec
cmpb
pop
or
mov
pop
dec
and
in
push
stos
push
mov
shll
xchg
cmp
es
shlb
push
andb
dec
jl
sub
je
and
divb
push
popa
stc
sahf
aam
popa
xor
mov
add
inc
jb
and
das
and
cmp
bound
inc
xchg
xchg
aam
or
data16
mov
int3
cwtl
out
aaa
pop
and
daa
lock
sbb
ljmp
pop
jno
rdtsc
xor
jle
push
repnz
cltd
sub
cmp
sbb
insb
repnz
cmp
push
rcrl
jns
les
mov
popa
lods
imul
jb
in
fstpt
arpl
aaa
cld
inc
ret
ja
adc
sub
mov
repz
movsl
icebp
leave
or
xor
adc
or
and
ljmp
or
cli
lret
cli
jge
loop
xchg
sub
dec
adc
sub
jns
clc
clc
sbb
outsb
das
repnz
add
mov
fwait
push
dec
add
adc
fstl
call
adc
push
ds
adc
add
inc
pop
dec
out
xchg
insl
pop
cmp
jnp
add
adc
cmc
pop
loop
cltd
daa
ja
adc
inc
out
lock
or
int3
mov
divb
popf
push
mov
int
lea
inc
subb
es
push
test
int
jbe
cmp
fimuls
ds
daa
jne
ljmp
and
lret
stos
jecxz
movsb
mov
xlat
aad
pop
mov
data16
hlt
frstor
mov
sbb
dec
xchg
or
dec
vpsrlq
leave
js
cltd
cmp
jecxz
sti
popf
divb
jp
fidivl
jnp
mov
stc
std
mov
ficomps
cld
fs
pop
fcoms
dec
pushf
icebp
arpl
dec
pop
jno
popa
out
shlb
rcr
mov
xchg
shrb
push
xchg
inc
stc
lods
jle
cmpsb
dec
lret
aad
roll
test
fwait
enter
cmpsl
popa
sub
mov
or
jbe
lcall
mov
add
push
push
jmp
mov
mov
into
rcrl
pop
and
xchg
mov
loop
pushf
sbb
cmp
out
cmp
cmp
mov
gs
jno
mov
mov
push
out
pop
js
dec
popa
mov
arpl
movsb
rcll
mov
out
iret
mov
sti
push
scas
mov
cmp
pop
pop
insb
sub
fsubl
push
ret
dec
fnsave
push
push
add
jecxz
stos
mov
loop
push
or
cmc
lods
xor
bound
mov
dec
jg
mov
popa
addr16
add
jl
xor
push
or
push
pop
or
pop
mov
and
jl
sub
loope
cmc
adc
xchg
cmp
xor
enter
imul
push
mov
clc
stos
sub
and
cwtl
or
mov
cmp
fadds
push
outsl
xchg
cmpb
add
lea
xchg
xor
pop
fwait
jle
and
adc
in
and
xor
push
mov
and
xchg
or
lods
inc
push
ret
loopne
jbe
adc
push
xchg
mov
mov
cmp
test
jmp
insb
sub
sub
mov
lds
les
inc
mov
dec
sub
out
mov
fadds
dec
pop
stos
dec
je
xor
cltd
out
adc
call
adc
out
adc
imul
adc
mov
sbb
sbb
stos
pop
in
lret
jne
jmp
push
adc
mov
jb
mov
rclb
push
push
dec
fimuls
sti
icebp
sub
sub
mov
pop
enter
ffreep
dec
clc
mov
push
pop
push
mov
int
aam
imul
xor
mov
aas
or
adc
cmp
pushf
pop
enter
push
cmc
testb
jnp
xchg
je
push
xorl
mov
sarb
push
jne
mov
cmp
push
enter
std
pop
push
pop
pop
pop
dec
mov
push
or
leave
stos
or
lret
lcall
mov
xorl
sub
mov
inc
cli
gs
cmp
repz
std
loope
jp
bound
orl
or
clc
adc
cli
sbb
sar
into
xor
out
shlb
fwait
sub
iret
dec
movsb
addb
scas
dec
and
jb
push
std
fsts
or
scas
xchg
inc
adc
jecxz
sbb
mov
lahf
adc
mov
dec
mov
aaa
mov
cmp
mov
fwait
or
push
sub
addr16
xchg
push
inc
and
pop
std
test
xchg
mov
xchg
mov
shrb
sub
mov
pop
scas
jge
or
fcompl
pushf
out
pushl
push
push
shld
pop
fdivr
enter
sbbl
rcrl
xchg
loopne
sarb
lock
stc
sub
pop
out
mov
into
sbb
pop
jno
adc
in
jge
addr16
sarl
je
adc
mov
call
cmc
lods
cmp
shrd
jl
xchg
pop
lcall
inc
test
loope
lahf
fistpl
xor
add
addl
mov
or
mov
push
mov
imul
xchg
and
or
mull
aaa
inc
lret
mov
or
lahf
fiaddl
ja
lea
test
dec
lods
test
push
xchg
add
mov
cmp
jl
jb
lods
and
mov
cwtl
fwait
test
pop
xor
jbe
les
iret
incl
cmp
xchg
test
std
test
fbld
aaa
aaa
lret
mov
data16
jmp
sbb
inc
aad
lret
ror
lret
dec
dec
sub
insl
mov
sahf
aaa
jl
and
aas
sbb
jb
mov
cltd
adc
es
mov
add
in
sub
dec
daa
jo
das
icebp
mov
jns
add
pop
or
sbbb
ret
sbb
push
lea
fcmovb
insb
xor
icebp
mov
xor
roll
out
and
fstps
fcomi
add
into
xor
pop
adc
push
xchg
mov
lahf
bound
dec
popf
pop
or
cmpsb
xchg
pop
outsb
rol
out
bound
sub
popl
data16
lahf
mov
sub
call
add
int3
sub
xchg
cmp
shl
sbb
or
outsb
dec
mov
ja
push
push
push
sbb
ds
xchg
pop
dec
adc
out
int
add
lods
and
lods
sti
dec
adc
adc
nop
cmp
sub
std
mov
cmpsl
or
xor
jle
xor
mov
ljmp
ficomps
sbb
add
sbb
xor
lcall
mov
out
xchg
cmpsl
xchg
rorb
xchg
cmp
aam
sbb
lea
and
insb
cli
leave
arpl
sbb
out
out
call
pop
stos
jo
mov
imul
ds
stc
pop
push
pop
outsb
in
out
xchg
dec
shrb
outsb
lods
icebp
inc
lahf
loopne
add
mov
xchg
sub
enter
jge
loop
inc
jg
arpl
repnz
mov
push
add
mov
ljmp
stos
jno
clc
xchg
test
add
jg
dec
pop
cli
push
or
in
cmp
pop
fisubrl
push
in
ljmp
jnp
orl
xor
inc
nop
mov
mov
jge
sbb
add
das
and
sbb
jg
fwait
inc
roll
into
into
test
push
push
pop
inc
mov
sbb
popf
imul
loop
mov
sub
adc
in
lea
sub
mov
mov
cmp
stc
ret
es
push
xchg
mov
lahf
jno
xchg
mov
ja
subb
mov
push
or
sbb
sub
rol
xlat
add
outsl
das
test
push
add
mov
idiv
shrl
pop
in
test
cmp
inc
cmp
or
and
clc
mov
dec
xchg
shll
stos
add
lret
jecxz
mov
pop
sahf
popf
arpl
or
scas
scas
addr16
xor
push
and
mov
cmp
xchg
dec
xor
dec
fsub
insb
jecxz
inc
xchg
jnp
jne
cltd
cmp
mov
cmp
jecxz
push
sbb
out
outsb
insb
pop
iret
jae
fs
dec
sub
add
subb
sub
inc
and
in
fldl
mov
lods
shlb
inc
mov
subb
cltd
push
icebp
push
xor
fwait
ljmp
pushf
push
add
jno
xor
inc
or
xor
das
mov
or
test
stos
out
cmp
adcb
push
mov
xchg
lods
js
cs
sahf
repnz
adc
cs
icebp
clc
imul
std
loopne
cmp
lods
xchg
xchg
sahf
repz
push
outsl
adc
push
cmp
movsl
xchg
mov
fdivrs
testb
jmp
adc
lret
outsb
adc
dec
sbb
pop
and
dec
mov
jmp
xor
pop
lods
push
mov
push
inc
sub
scas
add
imul
vmaxsd
and
repnz
in
push
push
dec
jne
notb
pop
jae
loope
jne
js
jae
fisttps
sbb
sbb
cmp
jns,pt
inc
xor
push
push
push
cs
pop
out
jb
pop
sub
push
push
je
xor
push
push
insl
outsl
xor
pusha
icebp
das
or
jg
ret
sbb
jo
adc
aam
push
jns
lret
divb
mov
popl
jb
lock
and
push
xor
lret
bound
inc
scas
adc
add
xor
fildl
scas
fisubrl
cwtl
mov
int3
xlat
add
lods
outsb
push
cmp
add
push
xchg
lds
mov
push
popf
xchg
add
sarl
cltd
mov
inc
pop
pop
mov
adc
push
mov
dec
pop
int
push
std
dec
movsb
mov
push
inc
ljmp
push
out
hlt
out
std
out
inc
dec
aaa
test
mov
dec
jbe
adc
xchg
out
mov
pop
inc
imul
sub
les
shrb
push
mov
in
cmp
lock
sbb
jae
ret
pop
movl
xchg
jmp
pop
cld
dec
aas
xchg
push
and
in
inc
in
or
jle
cmp
adc
andl
inc
cmp
mov
inc
push
sarb
inc
xor
popf
jbe
add
roll
inc
mov
mov
xchg
pop
in
pop
inc
push
insb
cs
mov
shl
jg
int
test
fldenv
ja
hlt
pop
mov
loop
imul
aaa
sbbb
xchg
inc
pop
jns
movsb
insl
pop
pop
mov
jbe
xor
or
pusha
pop
rol
gs
pop
cmp
ljmp
push
test
mov
jg
xchg
outsl
xchg
or
mov
mov
enter
fstp
sub
push
jl
lods
pop
xor
lods
arpl
push
dec
jae
inc
adc
cs
pop
mov
js
cmpsb
push
je
jp
setae
ret
enter
jge
jb
push
sub
adc
retw
cwtl
sahf
arpl
loopne
pushf
pop
mov
ds
xchg
lcall
pop
loop
aaa
dec
cmp
insl
out
insl
and
shlb
cmp
repz
nop
call
mov
or
lea
sub
push
or
mov
push
xchg
dec
xchg
fldcw
xor
movsb
jns
fwait
jmp
stos
mov
rorb
dec
xor
fstps
fisttpll
push
repnz
sarl
fistps
fimuls
pop
and
cmc
dec
adcl
inc
adc
mov
das
sbb
shlb
lcall
or
dec
pop
mov
inc
cmpsb
adc
inc
repz
inc
and
fnstsw
lcall
xor
popa
sti
pop
cwtl
lcall
push
xchg
pop
or
inc
aaa
aaa
test
ja
fistpl
pop
cs
or
insb
rcr
jp
stos
cmp
inc
pushf
or
dec
lods
mov
daa
fildl
or
dec
js
mov
sub
pop
movsl
sarl
push
adc
pop
ficoms
and
jb
mov
sbb
push
add
mov
lods
dec
pop
sub
or
loope
stc
aas
dec
js
mov
and
mov
adc
out
loope
je
cmp
jns
dec
out
jo
ret
xorb
push
jmp
jae
sub
add
sub
daa
pushf
gs
das
inc
mov
into
repz
and
lcall
fmul
jnp
cli
stos
sarb
mov
rcll
adc
scas
insb
jbe
icebp
sti
cmpsb
or
mov
fadd
sbbb
jne
mov
mov
pop
cs
add
shll
sti
cmp
or
mov
fisubs
and
cmp
mov
vmovaps
and
leave
mov
sub
roll
mov
mov
inc
xchg
icebp
sub
mov
mov
in
in
cmp
dec
mov
cmpsl
sti
pop
fsts
jle
cmpsb
mov
test
push
jne
add
mov
mull
push
testl
cmp
sbb
sbbb
dec
mov
sub
fcompl
ljmp
mov
jg,pn
ja
jae
ljmp
call
enter
and
jno
int
jg
cwtl
outsb
push
shl
or
aam
outsb
push
xor
cs
in
or
jae
enter
hlt
std
xchg
inc
pop
dec
fmull
in
rep
cmp
out
xchg
add
add
inc
xor
or
test
mov
insb
movsb
and
xor
mov
ficoms
lods
mov
mov
push
cmc
mov
fstpt
out
mov
js
scas
jbe
repnz
fistl
inc
out
out
gs
dec
push
pop
mov
mov
add
std
pop
mov
pusha
jecxz
push
dec
sub
pop
nop
in
or
ret
xor
push
cmpsb
daa
rcrb
test
jle
test
jle
push
adc
xor
vxorpd
or
push
fdivr
into
xor
jmp
lret
ss
fcompl
cltd
mov
mov
mov
out
adc
cmpsb
jle
shlb
sbb
icebp
insb
test
pop
pop
popa
das
in
mov
enter
mov
add
addr16
sbb
negb
insl
push
jno
cmp
push
xor
ret
mov
out
mov
inc
flds
test
addl
or
roll
je
xchg
in
je
aas
les
mov
and
es
mov
mov
jp
sbb
pop
add
outsl
mov
arpl
lahf
cwtl
inc
and
xor
jge
sub
outsb
xorl
insb
pop
lods
fwait
orl
xor
insl
sbb
adc
test
push
sbb
mov
sub
out
xchg
pushf
mov
push
test
shll
imul
insb
jns
test
push
sub
stc
aam
imul
loop
ljmp
jbe
xchg
inc
mov
push
push
aas
inc
jno
jae
inc
xchg
mov
jb
pop
sbb
mov
notl
inc
scas
jb
jmp
adc
mov
jmp
lcall
xchg
sbb
pop
aas
dec
adcl
push
xchg
js
mov
mov
pusha
sub
dec
andl
icebp
enter
pop
jbe
movsb
ret
inc
adc
and
cmp
cmpsl
jo
das
out
mov
and
add
mov
add
sub
mov
or
icebp
xchg
mov
lea
sub
mov
js
jmp
add
cmp
add
movsb
jmp
jecxz
inc
jp
sbb
xor
cld
imul
xchg
xchg
xchg
fdivs
dec
jge
sub
pop
mov
loopne
jno
fs
push
scas
or
pusha
xchg
rclb
pop
out
mov
push
int
in
or
int
mov
mov
pop
fsts
jg
fstl
shr
jle
pop
inc
dec
jne
cwtl
fs
dec
dec
sbb
inc
addl
pop
je
jbe
push
push
inc
nop
mov
jno
in
jp
fcmovnu
xlat
jg
mov
jbe
imul
lea
mov
fsub
xor
dec
xchg
dec
xchg
fadds
test
iret
or
fsubs
inc
mov
pop
pop
arpl
loopne
movsb
add
mov
arpl
mov
sti
push
mov
add
xchg
cmpsl
dec
sbb
in
enter
mov
repnz
sub
imul
jbe
jb
imul
sub
out
add
nop
push
fwait
call
and
push
icebp
push
xchg
xor
adc
repz
cs
ror
lock
notb
mov
jns
daa
cmpsl
xchg
dec
mov
jl
rcrb
pusha
xchg
lods
or
xchg
cmpsl
mov
jb
in
incb
xchg
xor
stc
ds
out
iret
subb
addb
mov
ja
mov
loop
mov
xchg
test
cld
lcall
xor
icebp
shlb
sub
jae
push
sbb
add
popf
sbb
sahf
pop
outsl
jbe
std
sub
pushf
fidivrs
mov
insl
je
xchg
mov
cs
rorb
push
dec
and
inc
sub
cmp
mov
cmc
push
rcll
fs
add
stos
shr
xchg
and
dec
and
clc
dec
mov
xor
test
loope
pop
ljmp
lret
mov
lods
sub
rclb
mov
add
xor
aaa
ror
adc
push
add
pushf
adc
mov
loope
data16
xor
jnp
xchg
xchg
js
cmp
mov
pop
stc
adc
cmp
lcall
and
add
or
fwait
mov
loopne
in
js
clc
xchg
pusha
push
fmuls
jge
sub
imul
pop
lcall
je
cld
jmp
daa
nop
bound
cmp
aam
aas
pop
outsl
push
cmpsb
rclb
xor
add
daa
out
xchg
xor
push
jp
jns
fwait
cmc
push
loopne
pop
inc
lahf
test
icebp
cmp
pop
adc
enter
push
lods
daa
mov
mov
testl
fs
pop
mov
loopne
loop
fdivrl
jle
push
ljmp
mov
xchg
inc
into
int3
fldl
aam
and
and
popf
mov
lods
fucomip
imul
add
jne
imul
popf
mov
xchg
adc
push
xchg
jnp
aaa
stos
jge
push
push
lret
and
and
add
lret
adc
xchg
sbb
sbb
pop
gs
test
xchg
dec
push
inc
adc
repz
div
cmc
loopne
add
in
sti
lock
sbb
ret
and
or
imul
test
ret
add
jne
mov
lret
shlb
mov
inc
pop
pop
call
xor
addr16
mov
cmp
jns
bound
push
fwait
or
pop
fisubrs
sarl
add
fsts
jb
push
add
decb
test
icebp
addb
push
js
imul
es
repz
inc
mov
enter
cld
adc
jne
and
inc
pop
ds
out
popf
mov
xor
iret
jno
lock
mov
sahf
and
fistps
stos
mov
shll
or
outsb
mov
and
jnp
movb
imul
ja
mov
es
bound
dec
push
sbb
xchg
clc
cmp
mov
add
inc
xchg
aam
sub
mov
jno
xor
lds
pop
mov
inc
pop
push
dec
push
jecxz
lret
sbb
pop
xchg
cmpsl
xchg
adc
jno
and
inc
in
std
push
comiss
mov
mov
mov
movsl
pop
rorl
bound
fbstp
into
jno
sub
xchg
pop
sbb
mov
std
jmp
add
in
sbb
xor
mov
outsl
cld
les
mov
push
adc
jns
push
insb
out
add
cmpsl
jo
lcall
scas
jl
pop
lds
out
popa
cld
jmp
lret
jmp
out
loopne
inc
les
mov
mov
pop
jg
xor
mov
mov
jmp
int3
dec
test
lock
inc
arpl
aaa
ss
test
add
iret
add
cmp
lds
xor
out
adc
xor
pop
mov
sbb
subb
daa
jno
sbb
jp
daa
in
test
aam
xor
sbb
mov
adc
jno
jge
xchg
xchg
ljmp
pop
rclb
in
inc
mov
test
aam
xchg
sbb
dec
pop
pushf
add
mov
ss
in
mov
popa
leave
dec
cmp
inc
ret
pop
shll
jg
daa
rcl
jns
dec
mov
sbb
mov
out
movsb
inc
push
adc
enter
inc
cmp
dec
sarb
pop
gs
jno
mov
les
xchg
roll
test
mov
mov
dec
jp
mov
loop
dec
stos
sbb
sub
xchg
cmp
add
mov
jb
and
adcb
and
push
adc
jns
loopne
adc
pop
in
cmp
or
sbb
xor
fbstp
in
bound
inc
leave
and
and
sbb
mov
sub
ss
jb
or
push
push
test
jb
faddl
push
sub
xchg
subl
sub
mov
jmp
push
aad
out
pop
jp
pop
dec
repnz
lds
mov
push
lea
lahf
cmp
popf
movsb
les
xchg
nop
fstpl
mov
rorl
into
and
cmp
popa
xor
in
xor
or
xchg
inc
fstps
push
or
les
push
imul
ss
arpl
cmp
mov
ja
lret
ja
pop
iretw
jbe
fcompl
xor
les
jge
nop
xor
sub
call
test
mov
sub
syscall
sub
xchg
adc
xor
ja
ds
dec
pop
dec
in
lock
jmp
sbb
pop
xchg
addr16
movsl
data16
gs
pop
xchg
mov
push
pop
inc
std
aas
scas
add
mov
movsb
sarb
ss
pop
data16
lret
xchg
cmpsl
xor
push
aaa
jge
push
push
popa
rolb
popa
xlat
enter
pop
or
das
adc
test
ss
cltd
push
or
or
inc
add
jnp
mov
insl
add
mov
leave
imul
cmp
xchg
pop
adc
push
andb
or
dec
push
aas
ret
out
mov
enter
jnp
orb
sbbl
mov
cwtl
lret
cld
mov
inc
sti
sub
sbb
xor
pop
insb
fcmovne
lahf
lcall
mov
ss
dec
xor
mov
cld
sti
and
pop
cmpsb
inc
imul
aad
mov
xchg
gs
jmp
mov
loope
ljmp
movsb
push
xchg
ret
scas
jecxz
xor
faddl
mov
mov
sub
scas
fwait
or
cltd
outsl
sti
lods
imul
fwait
mov
push
shl
loope
hlt
setl
push
stos
cmp
lds
sub
jl
push
cmpsl
popa
jecxz
std
out
stos
lcall
jae
sub
cmp
fsubl
jmp
and
sub
mov
popf
cld
test
or
fcoml
mov
fiaddl
repz
sbb
rcll
sbb
sbb
or
jnp
fwait
insb
xor
sub
movsl
jbe
sti
push
and
cmpsb
xchg
add
aaa
das
mov
movsb
fimuls
fiaddl
sti
or
imul
xor
cmp
mov
jno
je
test
fisttpl
dec
dec
or
out
gs
mov
sbb
call
cmp
mov
mov
addr16
scas
xor
dec
into
mov
and
cwtl
imul
and
dec
mov
das
test
xchg
mov
cmp
jnp
int3
jle
icebp
movsl
or
fwait
enter
jle
push
adc
xor
divl
xor
inc
icebp
add
sar
mov
push
sti
cmp
xchg
push
add
xor
call
cmc
jge
push
pop
fs
mov
addr16
add
xchg
push
inc
adc
xchg
adc
dec
test
ss
sbb
cmc
outsb
imul
mov
and
nop
xor
popa
ret
inc
xor
mov
pop
sbbl
pop
shrb
sub
mov
jnp
mov
cmp
lret
fisubrs
push
pop
push
movsl
mov
mov
sbb
call
cs
sbb
adcb
es
and
push
in
ffree
push
subl
hlt
sbb
repnz
push
das
dec
xchg
insb
push
sub
stos
xor
stos
scas
sub
popf
inc
cmc
cmp
cmpsl
or
cltd
cmp
mov
int3
sub
xchg
dec
jnp
clc
icebp
inc
add
lock
ja
sbb
adc
add
leave
ret
mov
bound
xchg
cmp
std
add
mov
sub
sarl
mov
bound
mov
hlt
inc
mov
mov
xor
mov
dec
les
movsb
enter
push
jl
dec
jmp
leave
pop
xor
movups
add
cmp
ljmp
jmp
mov
mov
mov
cld
or
rsm
gs
enter
movsl
movsb
sti
or
imul
test
add
les
ds
adc
push
in
lret
pop
sub
data16
movb
push
scas
inc
leave
xor
jge
xchg
inc
and
inc
xor
mov
pop
lock
cmp
cmp
add
jge
xor
and
fisubrs
test
in
xchg
in
dec
mov
test
jmp
popa
cmp
push
out
adc
scas
push
cmp
mov
aas
scas
cli
int
shrl
lds
test
rcrl
imul
cwtl
push
lret
adc
xchg
mov
cmp
mov
int
and
mov
movsb
cltd
xchg
gs
inc
sti
in
push
fwait
ds
je
cmp
mov
arpl
or
jae
mov
dec
lcall
outsl
xchg
add
add
mov
sbb
sbb
xchg
push
test
jne
sti
inc
sahf
pop
out
in
mov
jge
sahf
aad
push
fldcw
sub
adc
adcb
imul
xor
arpl
cmpsb
push
sub
push
adc
mov
dec
daa
xor
xchg
in
adc
int
in
sub
mov
xchg
or
cmp
or
dec
xchg
imul
inc
aas
mov
dec
push
jne
add
ja
jns
mov
mov
lahf
mov
push
out
add
dec
cmpsl
mov
xor
mov
pop
mov
mov
jmp
push
or
jo
in
xor
stc
fldt
inc
or
imul
mov
hlt
pop
or
sub
ja
push
sub
sub
push
int3
and
cmp
xchg
imul
mov
pushl
mov
stos
xlat
mov
sbb
fcmovne
lock
ret
daa
movsl
cmc
jle
push
xchg
sbb
out
cmp
je
push
in
pop
mov
fxch
sub
mov
inc
jne
mov
xchg
sbb
data16
lock
rcrb
fmull
popf
arpl
repz
into
pop
outsl
out
xor
sbb
insl
add
sbb
mov
int
mov
ds
loop
lret
adc
in
xchg
inc
jno
or
add
jo
add
dec
xor
inc
ja
adc
inc
cmpsl
leave
in
mov
xchg
or
cmp
dec
mov
mov
pop
xor
fcoml
or
lods
add
cltd
mov
cmp
mov
outsb
das
adc
xor
rcrl
cmpsb
mov
sbb
aad
ficompl
fs
insl
push
mov
sub
xor
mov
xor
jg
add
push
ror
cmp
orl
mov
ja
nop
push
out
mov
out
cmp
dec
mov
mov
pop
jne
gs
mov
push
js
pop
xchg
adc
pushl
or
es
xor
daa
loope
lock
outsl
or
popf
leave
jno
nop
pop
push
subb
mov
or
pop
xchg
mov
enter
xchg
mov
out
aas
pusha
jns
jp
push
add
xlat
nop
je
inc
je
sub
xchg
xor
test
int
loope
pushf
cmpl
fstpl
mov
mov
jns
loop
jno
sub
or
into
and
and
lret
cmp
mov
sub
adc
nop
pop
pop
shrb
xchg
pop
std
sub
xchg
mov
jecxz
cmpsb
cmp
pop
and
cs
decb
ficoml
dec
mov
pusha
cmpl
loope
adc
sbb
rclb
sub
sub
out
and
movsb
std
cmpsb
mov
lds
jae
jp
out
out
xchg
loope
js
mov
pop
popf
xorb
lcall
stos
sbb
cmc
pop
stc
stos
daa
jns
sub
das
pop
mov
loop
push
push
jmp
cli
int
sbb
push
sub
xchg
or
addr16
mov
insl
lock
sbb
xchg
fldl
xlat
pop
adc
lret
dec
xor
ds
aas
pusha
int
or
push
fs
xchg
sub
xchg
in
adc
stos
pop
cld
jmp
frstor
gs
clc
loop
lret
jecxz
test
arpl
rcl
je
adc
aam
in
mov
dec
adc
push
xor
sub
sbb
lret
inc
cld
lds
mov
mov
scas
xchg
out
pop
mov
outsb
cld
cmp
rcl
call
js
cmp
out
popa
mov
ret
outsl
mov
or
pop
out
testb
cmp
test
lods
push
jg
fsts
roll
pop
mov
fwait
repz
jmp
aas
pop
cli
out
mov
push
xor
popa
test
rorl
jae
je
dec
test
das
lea
fisubs
add
mov
cmp
lcall
mov
cmp
dec
inc
sbb
xor
xchg
fwait
or
inc
sbb
hlt
test
ss
sbb
mov
or
jb
add
pop
pop
push
adc
and
ss
jo
mov
lods
fdivrs
outsb
mov
lret
adc
setnp
pop
xor
mov
shrb
xchg
mov
leave
jo
mov
mov
push
jne
mov
xchg
fs
xchg
inc
popa
add
mov
jg
cli
std
adc
int
sub
or
push
popw
inc
xchg
stc
ret
jmp
mov
adc
outsl
or
hlt
sahf
adc
pop
mov
and
imul
dec
repz
lret
cmp
cmpsl
xor
rclb
daa
icebp
xchg
jb
jnp
shlb
test
lcall
sub
lret
stc
in
mov
cmp
cmp
adc
xlat
cmp
cmp
jae
lret
mov
sbb
aam
mov
ret
dec
sbb
mov
test
add
sbb
push
fadds
enter
imul
imul
mov
loopne
mov
es
mov
mov
add
push
testl
and
aad
in
or
imul
std
cmpsl
mov
push
mov
call
adc
dec
sbb
je
std
cmpl
add
daa
movl
out
pop
insl
mov
adc
add
lea
inc
fcmovu
lods
dec
movsb
stc
outsl
or
cmpsl
xchg
fs
movsb
or
ret
add
leave
mov
and
xor
sub
sbb
fiadds
adc
insb
xchg
enter
cmp
inc
addr16
test
inc
sub
in
sbb
jl
imul
cmp
mov
mov
adc
sahf
bound
or
cltd
sbb
mov
dec
pop
mov
negb
mov
pop
adc
push
or
fisubrl
sub
add
sbb
es
cltd
test
ds
lret
mov
enter
push
jno
inc
aas
sub
stos
or
lods
inc
subl
jmp
lds
cwtl
leave
sarb
xchg
aaa
mov
jl
lret
and
or
add
shll
pushf
or
sub
pushf
shl
stos
and
lret
nop
bndstx
movsb
add
sub
xchg
rclb
xchg
push
cmp
xor
loop
xchg
inc
xor
dec
push
stos
mov
insl
lods
mov
sub
leave
pop
dec
jg
xchg
nop
out
sbb
loope
xor
xchg
in
andl
adc
fcoml
mov
es
push
pop
jns
repz
dec
mov
pop
sbb
in
aaa
test
push
out
sub
mov
xor
orl
sarb
and
jns
fisttpl
push
add
cli
xchg
xor
mov
inc
pop
rcrl
fdivrl
sbb
push
rol
insb
fdivl
mov
cltd
xor
arpl
or
dec
lods
repz
in
mov
lods
cs
or
push
roll
repz
out
adc
push
aam
loopne
ret
std
dec
mov
pop
inc
jl
jecxz
mov
cltd
mov
out
dec
sub
adc
mov
lret
pop
adc
pop
jmp
ja
mov
inc
pop
adc
jp
sub
repz
loopne
gs
xchg
fs
lds
pop
pop
call
mov
inc
andb
in
insl
mov
enter
ret
popf
sub
xlat
and
mov
scas
pop
pop
push
lcall
lret
je
pop
outsb
icebp
push
mov
inc
out
xchg
push
jne
adc
push
lods
pop
hlt
push
fists
fidivl
adc
jecxz
std
loope
dec
add
sub
out
mov
cmp
outsl
xchg
cmp
xchg
sub
push
sti
repnz
ret
insl
push
js
repnz
int
out
out
mov
sbb
scas
add
imul
xchg
or
inc
insb
fsubrl
popa
cli
jecxz
fs
sbb
arpl
gs
std
clc
or
divl
mov
inc
pusha
in
cs
adcl
adc
arpl
dec
jnp
repz
or
ljmp
test
adc
and
pushf
jl
jnp
jge
sbb
aam
orl
xor
push
mov
jmp
mov
dec
push
sbb
push
jmp
or
mov
shrl
dec
jmp
shlb
push
dec
fwait
and
lock
sbb
and
pop
fiadds
es
popf
in
jg
outsl
lea
aas
cwtl
pop
mull
pusha
jle
popa
lahf
mov
inc
or
loopne
and
and
dec
lret
mov
inc
inc
sub
xchg
gs
out
adc
push
hlt
xchg
mov
mov
mov
add
leave
iret
sahf
pop
jno
in
shlb
sub
jno
enter
sbb
cmp
cwtl
ljmp
stc
das
xor
fsubrs
pop
or
jns
adc
xor
hlt
cmp
jle
jbe
test
ja
roll
out
mov
les
mov
outsl
je
call
or
mov
sbb
sahf
popa
jmp
pop
shrb
add
add
xchg
and
jns
aam
cli
cli
push
adc
adc
enter
adc
mov
and
jl
pop
lcall
pop
cs
and
iret
cmpsb
mov
push
xchg
pop
sub
dec
repnz
push
popf
sbb
adc
sbb
mov
adc
cmc
pop
mov
hlt
gs
cmc
in
imul
jl
inc
pop
ret
popa
push
mov
and
dec
inc
cs
hlt
dec
lods
and
ljmp
adc
aaa
lret
jae
sbb
cmc
sbb
jl
es
mov
mov
cmp
movups
fs
push
aas
cli
mov
mov
sub
fistps
sub
and
adc
repz
jmp
sub
and
pop
fdivs
icebp
aam
test
xchg
mov
cwtl
mov
sti
ret
mov
sub
xchg
mov
or
mov
lahf
scas
mov
inc
dec
inc
int3
or
enter
out
js
push
sbb
out
adc
fistps
add
mov
jg
jne
mov
fwait
bswap
dec
push
push
or
lret
mov
rorl
xor
mov
and
or
jg
add
ja
cmp
fsts
pushf
movsl
sub
jge
js
popa
loope
adc
jo
push
xor
mov
ret
in
in
pop
fs
and
out
jb
add
setne
mov
dec
pushf
or
adc
ja
out
pop
jge
fs
rolb
mov
call
pop
mov
jle
xchg
mov
adc
cs
jl
js
aas
sbb
mov
mov
sbb
push
dec
jge
mov
inc
popa
cmp
inc
dec
stos
test
inc
push
sbb
push
sbb
mov
dec
out
lods
pop
sub
fnstsw
popa
fiadds
sub
mov
ficoml
pop
jbe
jl
sub
add
das
pop
or
adc
push
js
add
push
push
mov
adc
cmp
aam
in
push
add
or
shl
xorl
lcall
fidivrl
mov
out
test
loop
pop
hlt
in
push
jge
in
mulb
and
ror
sbb
sar
loopne
mul
xchg
mov
mov
pop
xor
adc
roll
sub
cmp
out
pop
push
mov
xor
mov
rorl
pop
rorb
mov
loopne
cwtl
sub
loopne
lahf
mov
mov
pusha
aad
outsb
shll
outsl
stos
xchg
sbb
sub
lds
das
std
or
lahf
mov
mov
daa
jb
or
ret
sarl
pushf
push
mov
push
dec
mov
jg
pop
mov
push
fwait
dec
push
add
xchg
rcr
ljmp
test
fidivrs
fistl
lock
lods
movsl
sarl
insl
cmpsb
lds
xor
das
or
dec
mov
mov
mov
out
and
in
jns
mov
add
cmp
inc
xchg
out
cmp
xchg
cltd
xchg
out
mov
clc
daa
push
adc
test
jo
pop
in
loopne
mov
inc
mov
jmp
xchg
in
test
push
std
or
fdiv
fcomps
inc
lret
je
push
xor
pop
sub
test
fdivrl
xchg
hlt
fwait
or
leave
dec
dec
jl
adc
xor
sub
inc
lds
xlat
lcall
dec
das
hlt
ljmp
mov
in
call
sbb
pop
dec
add
enter
pop
je
int
hlt
push
push
pushf
pop
cmpsb
lods
imul
fisttpl
jne
mov
mov
fs
inc
fstps
mov
lret
stos
pop
fildl
stc
rcl
add
cmpsl
mov
aad
or
and
addr16
xchg
fdiv
int3
push
sub
or
ljmp
dec
enter
ret
sbb
xor
sub
mov
lock
and
or
xchg
cmp
cmpsb
in
jg
add
sbbb
out
mulb
lea
sbb
out
sub
mov
call
daa
cmp
or
out
outsl
xor
mov
xchg
ret
imul
pop
mov
out
jle
mov
sti
adc
outsb
arpl
repz
mov
push
mov
dec
mov
pushl
ret
mov
xchg
out
fnstcw
addr16
cli
or
sbb
inc
shr
int3
adc
mov
mov
insb
mov
and
mov
lea
or
jno
ljmp
add
sub
pop
mov
icebp
jecxz
jle
sbb
fistpll
inc
dec
in
inc
andl
push
push
mov
mov
outsl
or
sti
jecxz
ds
jne
sbb
mov
ret
xchg
xor
scas
roll
pop
jne
cld
mov
jmp
loope
sub
and
ret
sub
and
mov
and
cmp
nop
loope
add
int3
mov
push
add
fucom
js
xlat
pop
jb
push
cmp
or
lods
insl
add
pusha
adc
xchg
lods
addb
xchg
nop
movsl
cmpsb
rolb
and
sub
push
icebp
or
das
out
xor
test
fcmove
repz
push
cmc
cmp
pop
loope
add
inc
jno
dec
inc
pop
inc
icebp
and
sub
xor
or
xlat
add
xlat
arpl
cmp
xchg
mov
jno
jns
int3
inc
scas
push
mov
out
or
push
jle
pop
jecxz
dec
imul
fisubl
add
sub
cmp
mov
in
mov
enter
aad
mov
mov
add
sub
rorl
mov
mov
or
mov
jl
jl
lods
lret
pop
stos
repnz
mov
mov
xchg
add
push
stc
repnz
sub
aas
jge
xchg
and
mov
clc
push
cmpsb
lret
push
loopne
imul
adc
ja
xor
jp
lret
dec
xchg
pop
jle
xchg
imul
cmp
into
mov
xor
inc
aas
dec
mov
mov
mov
or
xor
aam
fnstenv
fistpl
dec
lret
rorl
popa
mov
xchg
and
lahf
negl
or
push
and
xor
jmp
cld
jmp
shr
pop
out
clc
test
fstp
add
repnz
pop
test
bsr
rorl
cmpb
out
rcrl
push
pop
inc
push
clc
add
arpl
rcll
je
add
jg
or
loope
mov
add
dec
fcmove
adc
push
jae
jecxz
lcall
mov
push
jnp
cli
adc
xchg
shlb
dec
and
faddl
shr
xor
jg
sbb
ljmp
jecxz
xor
popa
int3
movsl
roll
adc
adc
outsb
xchg
or
enter
jne
sub
adc
push
aam
daa
xchg
xor
sub
test
std
adc
push
loop
push
movsl
and
jg
and
shr
negl
fiaddl
mov
dec
jg
sti
xor
cmpsl
dec
mov
icebp
imul
mov
jle
out
and
imul
mov
out
sbb
inc
add
aaa
aas
xlat
es
mov
and
cs
push
cmp
jle
loopne
cmpsl
nop
lds
jb
dec
and
stos
mov
push
sbb
nop
jecxz
mov
je
pop
sub
push
lret
aaa
mov
jecxz
fstps
dec
call
pop
es
or
push
cwtl
aas
jne
int
out
imul
les
pop
shrl
xor
mulb
pusha
inc
cld
dec
xchg
in
cwtl
repnz
mov
mov
cltd
imul
mov
jg
fnstsw
jp
ljmp
sti
sbb
fldcw
cs
scas
vmovhpd
dec
jnp
push
or
fidivs
and
push
sbb
add
ss
stos
jo
xchg
push
mov
sbb
out
xchg
xchg
mov
out
gs
sbb
shlb
test
bound
and
mov
test
ljmp
inc
ja
xchg
mov
fdivr
lock
sti
inc
in
and
jns
dec
pop
aaa
cmp
fcmovnb
inc
xchg
sahf
fcomps
sub
fwait
loope
sub
pop
scas
or
push
dec
shlb
inc
mov
mov
xorl
push
test
fsubr
lret
add
and
pop
push
jns
loope
leave
leave
notb
testl
out
test
fucomip
dec
xchg
roll
cmp
adc
scas
or
push
sbb
push
push
inc
in
call
fisttpll
movsb
cmp
nop
sbb
pop
adc
pop
mov
scas
sub
lea
call
jge
lcall
movsl
dec
lret
or
sbb
in
push
cld
xchg
push
cs
inc
pop
in
out
push
jmp
pop
dec
add
xor
mov
inc
aaa
icebp
enter
inc
sahf
push
pop
mov
loop
mov
add
jecxz
xchg
into
mov
mov
dec
sbb
aaa
shlb
sahf
mov
mov
push
fadds
mov
or
stos
sub
out
out
and
cli
cmpsl
jnp
sbb
aad
or
jg
insb
jle
cs
xchg
fcompl
shrb
fists
adc
dec
fldcw
std
ret
and
cmc
xchg
rcrb
xor
shl
and
loopne
es
int3
std
xor
movsb
sub
pop
inc
rep
jge
aad
adc
ds
mov
sub
mov
out
push
lods
sbb
xor
push
push
outsb
xchg
mov
lods
push
filds
jp
xchg
xchg
mov
aaa
ljmp
push
gs
insl
jmp
mov
mov
mov
jmp
add
lods
sub
data16
adc
inc
ret
imul
sbb
aaa
not
xor
inc
inc
mov
out
sbb
jns
aas
dec
data16
lods
push
test
loope
mov
out
push
lret
out
scas
gs
pop
inc
iret
fildl
or
mov
loop
adc
adc
ficomps
test
inc
sub
xchg
cmp
int3
inc
jb
xchg
mov
repz
inc
fs
test
push
adc
xor
int
movsb
out
mov
xlat
lahf
or
imul
jne
je
ret
or
aad
fbld
mov
js
or
addr16
jmp
xor
and
sbb
dec
arpl
jle
mov
mov
pop
mov
dec
test
cli
cld
pushf
dec
and
lods
inc
ret
add
sbb
jmp
adc
scas
push
push
adc
ficoms
pop
xchg
push
and
cmp
int
int
fimull
push
js
mov
aaa
in
adc
or
sub
loop
out
inc
jl
lret
jns
punpckldq
cli
dec
fcom
mov
xor
add
lret
inc
sbb
sbb
mov
sahf
mov
inc
mov
xor
mov
add
jmp
js
push
nop
incl
ret
cmp
lea
in
out
je,pt
leave
iret
pop
fdivp
add
shll
sbb
push
aaa
test
push
push
and
xchg
and
dec
xlat
push
cwtl
pop
sbb
loope
sti
and
add
jp
mov
fsubp
or
repz
lock
dec
or
daa
sbb
in
push
mov
mov
mov
es
add
shrb
jae
push
popa
mov
test
xchg
das
lret
push
cmp
scas
inc
mov
push
add
dec
aaa
push
sub
std
ret
movsb
ret
pop
insb
mov
enter
mov
adc
out
out
xor
fcomp
pushf
xor
push
fistpll
js
push
mov
push
fimuls
pop
pop
push
sbb
out
imul
dec
push
fnsave
or
push
aam
cmp
cld
std
xor
test
pop
iret
or
jno
jns
in
int3
mov
sub
mov
incl
inc
xchg
and
lods
dec
jno
dec
sahf
daa
mov
adc
pop
ficomps
cmc
jo
inc
adc
fs
push
sbb
pop
scas
pop
push
rol
in
stos
jg
mov
pop
push
orb
enter
out
movsb
mov
push
xlat
fdiv
dec
pop
ret
lcall
sarl
add
jecxz
mov
out
es
pop
push
mov
jbe
fcomps
inc
sub
push
fucomip
lret
dec
rorb
or
int
lock
jb
inc
scas
or
call
inc
andb
mov
mov
mov
out
jmp
cmpsb
pop
mov
sub
or
addr16
inc
iret
mov
je
sbb
jge
sub
push
jecxz
xchg
jmp
je
xor
scas
cs
cli
xchg
cltd
in
push
shl
and
pop
sarb
push
imulb
mov
add
jo
dec
dec
shrl
outsb
sub
sbb
lock
or
inc
jg
ret
push
push
ja
out
fsubrl
mov
push
jp
cmpsl
jns
xor
lahf
cmp
jno
xor
jne
jmp
pop
xchg
lahf
daa
sub
les
lahf
daa
push
mov
inc
sub
icebp
xchg
test
pop
push
and
xchg
repz
dec
mov
adc
repz
cld
or
cmovns
or
push
inc
movsb
or
stos
cmp
xchg
jo
pop
push
into
xor
add
mov
pop
js
imul
shl
mov
xchg
jp
test
int
jnp
imul
adc
add
ss
ret
adc
test
lret
cltd
rorl
dec
inc
ljmp
mov
ljmp
dec
into
daa
ss
fsubl
sub
mov
pop
mov
lods
fwait
mov
in
ja
cld
sub
or
pop
jge
xchg
inc
jle
stos
pushf
jp
push
rorl
sar
bnd
and
mov
pop
or
mov
fistpll
inc
sarl
out
loopne
ret
inc
gs
add
out
push
mov
mov
jmp
jmp
lret
mov
punpckhdq
xchg
filds
pop
ret
pop
inc
xor
idiv
xchg
stos
push
push
add
pop
pop
xchg
cmc
mov
inc
int3
test
adc
icebp
ja
mov
inc
fimull
adc
mov
call
inc
or
or
sub
sub
lea
adc
sbb
pop
popa
stos
jp
xor
mov
xchg
pop
mov
in
rol
push
cld
add
fadds
fistl
inc
pop
inc
ret
add
jge
and
imul
fs
testl
out
imul
pop
sub
divb
cmp
cmp
fisttpl
nop
loopne
fisubrs
test
aam
je
test
neg
jp
xchg
fiadds
dec
add
add
xchg
repz
add
rolb
aam
orl
xchg
mov
xor
ret
cli
dec
inc
repnz
loope
jl
dec
std
mov
push
data16
in
push
out
xchg
sarb
sbb
xor
je
add
insl
push
std
adcl
lods
xor
lods
in
push
ret
add
out
into
xlat
sub
fwait
mov
sub
shr
leave
shrl
stc
cmp
and
mov
ja
jne
es
jns
push
or
cmpsb
lret
inc
lret
aad
movsl
dec
pop
mov
cmp
mov
bnd
xchg
mov
dec
pop
add
jae
jge
outsl
pop
mov
jg
ja
insl
popfw
push
ljmp
add
ret
enter
lock
push
and
mov
dec
cmpsl
mov
cmpb
loop
xor
adc
std
ja
sub
movsl
dec
pusha
lock
adc
jmp
cwtl
fwait
jae
dec
lods
out
dec
jmp
test
jg
mov
loope
jecxz
fcmovnb
iret
mov
push
mov
in
sti
xchg
pop
mov
in
call
lcall
add
aad
inc
gs
mov
scas
mov
adc
es
xchg
mov
sub
ret
test
dec
xor
mov
mov
push
sub
dec
xchg
fadd
dec
push
cli
rorl
lock
dec
sbb
sbb
ret
fisubrl
push
js
popa
adcb
imul
cmp
aam
gs
js
fbld
out
nop
or
dec
xchg
arpl
pop
loopne
jo
cmp
and
lret
xor
dec
insl
sbb
stc
cmp
and
popf
add
inc
ljmp
in
mov
inc
dec
inc
xor
in
cmp
mov
jb
mov
into
sub
jne
inc
jbe
adc
ror
lahf
fwait
pop
xor
insl
dec
xor
test
int3
jecxz
jb
fsub
add
je
lea
pop
fnstsw
sub
loop
cld
add
jae
sbb
lea
jne
scas
dec
call
sbb
and
pop
mov
xorl
or
push
arpl
and
inc
cltd
out
or
push
adc
lods
repz
mov
test
scas
test
cmp
out
or
mov
jb
lods
idiv
mov
into
mov
mov
push
dec
imul
scas
fiaddl
lds
or
push
shll
sbb
adc
add
push
loopne
or
xorl
lret
lret
movsl
jns,pn
in
ret
xor
xor
leave
mov
fld
test
adc
arpl
mov
lea
xor
stc
call
sub
push
xor
rclb
sahf
cmpsl
hlt
push
dec
xor
cltd
sbb
stos
lret
divl
fidivl
or
sti
dec
mov
ss
bound
sbb
cmpsb
xchg
call
fisubl
push
cmp
or
lds
dec
jp
adc
pop
fnstsw
and
imul
dec
push
data16
js
inc
lea
cld
mov
xor
into
jl
xor
xchg
hlt
xorl
dec
or
mov
gs
les
push
dec
xor
cmpsb
xor
mov
lea
jno,pt
insb
sub
and
dec
pop
clc
push
out
stc
push
insl
or
mov
sub
fsubrs
pop
pop
cmc
frstor
mov
pop
and
adc
rol
sbb
ds
leave
push
mov
inc
mov
pop
sbb
jmp
xor
leave
std
scas
and
imul
clc
pusha
scas
mov
dec
cmpsb
or
mov
inc
push
inc
jbe
cmp
lea
outsl
iret
loope
xchg
mov
push
mov
mov
pop
fcmovb
sbb
sti
jmp
push
push
movsb
sub
sbb
pusha
shrl
xchg
add
sub
jle
dec
test
lds
in
dec
pop
sbb
and
adc
jmp
and
icebp
xor
push
fucomi
inc
and
stc
adc
mov
or
stos
lods
loopne
shlb
iret
sbb
test
mov
dec
jp
test
xor
jb
adc
mov
pop
lret
xor
rol
sbb
mov
cld
xchg
sbb
aam
in
and
xchg
fidivs
xchg
fpatan
inc
repnz
fbstp
pop
mov
mov
dec
push
pop
sub
mov
xlat
cmpsl
inc
add
mov
mov
lcall
mov
shr
sbb
adc
jb
outsb
popf
adc
mov
jmp
outsb
push
bnd
pushf
leave
scas
and
ret
mov
aas
les
shll
cmp
lods
xor
out
sti
sbb
sar
jmp
sbb
data16
aad
mov
add
dec
mov
jns
xchg
pop
mov
add
mov
movsl
sub
loop
pop
xchg
sbb
ret
rcll
popf
lea
push
jecxz
in
sarl
fs
mov
arpl
xor
cmpsl
xlat
xchg
lcall
inc
jle
imul
dec
nop
pop
mov
xchg
iret
mov
and
lods
bound
lock
xchg
mov
jecxz
adc
lock
je
outsl
cli
xchg
daa
pop
mov
cltd
sahf
aam
cmp
xchg
mov
sbb
adc
ja
adc
aam
leave
jl
jne
pop
jmp
pop
add
xchg
addr16
xchg
xchg
cmp
dec
and
lods
clc
sbb
daa
cmpsl
jno
ds
add
inc
out
lods
mov
les
pop
mov
xchg
push
ret
aas
add
xor
flds
lahf
stc
inc
pop
inc
sub
idivb
popf
cmp
mov
jle
mov
sub
aad
data16
cld
divb
test
pop
jl
cltd
scas
inc
mov
inc
pop
lock
sbb
cmp
sbb
in
or
push
test
push
pop
pop
pusha
add
je
and
pushf
rcll
dec
jnp
cwtl
imul
xchg
sub
js
rcl
fs
fisttpll
das
dec
mov
pusha
fcompl
and
in
in
mov
mov
or
clc
arpl
mov
push
jbe
stos
xor
adc
adc
adc
dec
mov
cmc
bound
into
jns
roll
outsb
sub
xchg
or
sbb
jg
and
ret
stos
int
xor
das
inc
jne
sbb
or
movsl
outsb
nop
push
pop
xlat
xchg
gs
imul
mov
std
out
xor
push
dec
add
jl
pop
mov
mov
push
sub
mov
shll
outsl
mov
mov
stc
aad
mov
adc
mov
arpl
xchg
mov
adc
mov
stc
cmpsl
jbe
jp
inc
in
add
mov
sub
repz
rorb
xor
dec
sub
adc
fldcw
mov
pop
add
jo
sub
bound
mov
js
hlt
scas
inc
outsl
add
sbb
aam
loop
cmp
adc
and
add
pop
rorb
push
aam
mov
xchg
sbb
setne
fdivrl
outsb
fistps
dec
pop
repnz
adc
enter
mov
les
fs
adc
adc
add
insl
add
dec
cmp
ds
popa
mov
shll
push
jge
sub
mov
popa
pop
cli
inc
jp
std
xchg
push
push
dec
pop
addb
mov
inc
into
movsl
dec
push
jmp
mov
cpuid
movsb
outsl
cmpb
xchg
mov
lds
xchg
cmc
dec
add
mov
adc
xchg
jmp
pop
jmp
inc
cmp
hlt
aam
mov
or
sbb
movsb
jb
bound
sub
div
repnz
jns
clc
lea
clc
pop
fstp
sub
cmpb
inc
inc
in
jle
lods
stos
pop
repnz
or
loope
pop
test
push
int
imul
pop
mov
and
psubsb
subb
sub
add
dec
sub
and
sub
leave
xchg
mov
xlat
test
mov
lods
scas
dec
cmpsb
pop
loop
mov
mov
lods
testl
cmp
pop
add
inc
pushl
lds
mov
inc
mov
nop
in
test
push
cmp
mov
adc
inc
imul
out
stc
scas
inc
fistpll
fwait
shlb
int3
leave
ficomps
pop
cmpb
int
xlat
jns
or
xchg
mov
xor
stos
mov
stos
mov
mov
test
or
out
in
nop
inc
test
jle
bsf
iret
cs
adc
push
mov
sbb
inc
out
inc
ret
pop
xchg
lock
adc
inc
test
orl
pushf
call
pop
fsubp
ret
cmp
adc
mov
ret
mov
pop
ret
pop
mov
add
inc
mov
test
dec
add
dec
cmp
shlb
mov
imul
mov
inc
outsb
push
imul
mov
add
sub
jg
pushf
and
ds
insl
sbb
inc
xchg
pop
push
dec
lret
adc
jbe
and
mov
repz
push
test
insl
mov
or
mov
or
mov
inc
add
test
in
icebp
push
clc
and
adc
into
ljmp
daa
dec
pop
mov
dec
aad
sbb
ror
add
xchg
das
sub
push
inc
or
mov
lea
jl
push
test
and
and
lods
lock
arpl
rolb
movsb
xchg
mov
aam
mov
pop
xorps
jmp
jmp
jb
popa
js
pop
cmpb
or
push
loop
and
bound
cld
jo
cltd
jl
sbb
fistl
jl
mov
pop
aam
test
or
test
jae
insl
push
pop
inc
imul
cltd
xlat
sbb
dec
pop
inc
fsts
lods
mov
movsb
mov
stos
frstor
mov
into
sub
sahf
enter
pop
ret
or
stos
jbe
scas
scas
mov
push
subl
push
outsb
lret
pop
test
inc
xchg
xchg
push
rcr
xor
mov
pusha
pop
jg
and
repz
mov
pop
add
xor
jae
jb
scas
fistpll
pop
adc
add
adc
sub
mov
jmp
push
jecxz
enter
mov
addr16
rcr
das
or
daa
pop
mov
fnsave
mov
scas
fs
cli
dec
sahf
push
enter
sub
add
xchg
adc
sbb
js
notl
jge
xchg
lock
xchg
imul
push
cmpsl
pushf
xchg
sbb
inc
and
mov
sub
mov
fstpt
mov
in
adc
ljmp
sarb
inc
mov
rcll
in
cltd
fstpl
cmp
and
pusha
sarl
jmp
dec
sub
sub
xchg
add
mov
cmpsb
adc
and
into
sarb
jle
jbe
iret
movsb
xor
push
cmp
lods
mov
shll
pop
das
add
mov
mov
bound
jns
xchg
dec
sub
packuswb
popf
rcl
xchg
xchg
add
push
mov
jp
in
adcl
xor
push
xchg
mov
or
inc
jecxz
ret
repz
mov
push
sbb
andb
xlat
push
lods
push
daa
dec
daa
fcmovne
dec
xchg
add
add
lcall
cwtl
sbb
sub
test
cmp
leave
jbe
bswap
testb
std
ljmp
inc
cmp
mov
popf
add
mov
mov
jns
in
sub
push
mov
jb
andl
xor
cltd
mov
mov
mov
add
fisttps
stos
dec
out
int
sbb
push
add
stos
mov
cmp
jns
pop
push
mov
cld
lret
jne
outsb
add
ret
pop
jmp
ds
mov
mov
and
out
push
pop
push
sahf
jbe
mov
pcmpeqd
jae
jns
test
ficomps
daa
mov
adc
je
sbb
call
jecxz
and
insb
ret
xchg
ficomps
jg
enter
xor
cltd
sbb
cs
std
and
mov
pop
mov
add
subl
out
sub
imul
mov
fcoml
xchg
xchg
repz
xchg
cmc
fistpl
and
cli
push
aam
ds
ljmp
test
test
loope
shlb
add
stos
and
sbb
mov
xchg
pushf
jne
dec
lods
or
stos
subb
stos
repnz
pushf
lea
dec
fstpt
or
cwtl
inc
adc
lahf
sub
sbb
cmp
out
sub
insl
push
mov
popf
push
dec
xor
addb
dec
fcomps
push
out
frstor
jmp
sub
lea
je
mov
fwait
xchg
mov
imulb
fldenv
xor
fcmove
scas
dec
sub
mov
pop
and
cmp
lret
icebp
mov
pop
fcomps
sahf
aas
and
mov
in
test
test
test
push
mov
lods
repz
orb
movsl
pop
imul
lret
lret
xor
mov
mov
shll
sbb
lods
das
jp
leave
add
cmc
push
xchg
aam
aaa
jecxz
dec
aad
sarl
nop
sbb
inc
and
pop
aaa
loope
cmp
and
mov
lea
rol
int
dec
sbbl
pop
ja
mov
pop
enter
ljmp
aad
das
pop
movsl
dec
je
sbb
dec
xor
das
arpl
xor
cld
loop
jmp
jp
jge
push
ret
jge
das
ljmp
jp
subb
int
ficompl
stc
clc
dec
xor
sbb
push
dec
push
add
jecxz
addr16
and
push
adc
add
out
dec
pusha
jge
pop
hlt
mov
out
cld
inc
sbb
movsl
mov
sub
lea
stos
in
js
add
cmp
jbe
cld
push
nop
loope
jb
aam
fnstenv
aas
ret
lea
scas
in
mov
fsubl
xor
inc
and
rcll
xor
call
inc
pop
rcr
sbb
mov
jae
roll
mov
imul
fnstenv
xor
mov
jmp
xor
add
idivb
repz
in
psrad
test
dec
int
inc
push
orps
jae
xlat
xchg
and
add
iret
test
cmp
dec
cmpsb
das
xchg
rcrl
inc
icebp
dec
pop
test
nop
fdivrs
jno
sub
mov
outsb
arpl
sbb
dec
dec
or
enter
push
add
or
cmp
movsl
insl
ret
jp
cld
outsb
jle
ss
adc
sbb
sub
fldl
test
hlt
outsl
mov
adc
andl
jmp
lret
pop
shll
inc
adc
call
jp
subl
test
fstps
rolb
dec
mov
ja
pop
loope
mov
and
mov
outsb
ret
push
or
add
test
jb
adc
lret
mov
repnz
daa
iret
sti
pop
icebp
stc
xor
mov
test
stc
cld
arpl
fwait
mov
adc
add
add
movsl
jle
inc
sub
insb
dec
imul
adc
nop
pop
test
inc
xor
add
ljmp
fbld
into
pop
cmp
jg
dec
lahf
arpl
cmp
mov
pop
or
sbb
popf
push
mov
pushf
sub
in
dec
in
mov
adc
mov
mov
and
aaa
fstl
enter
inc
shll
fcmovne
scas
mov
mov
lods
fwait
xor
sbb
das
out
cmpsl
lods
int3
xor
push
mov
icebp
add
jle
neg
pusha
add
in
fstpt
sahf
mov
inc
fistpl
movsl
lcall
xor
inc
es
ss
call
mov
out
mov
or
rorb
into
push
in
mov
mov
arpl
jbe
push
mov
mov
stos
jns
outsb
lea
out
and
in
insb
pop
xor
mov
pop
mov
sub
push
sub
nop
push
pop
scas
sub
imul
arpl
or
daa
add
push
sub
dec
repz
adc
arpl
imul
sub
mov
mov
iret
popf
xor
addr16
xchg
scas
sub
popf
rcrb
adc
popa
cwtl
or
bound
dec
adc
insl
repz
mov
in
adc
sub
sub
fisttpl
dec
jle
jo
adc
jb
int
iret
stc
addr16
add
cmpsb
lret
popa
or
vmload
loopne
jmp
xchg
xchg
lcall
cltd
ss
cmp
inc
xor
push
dec
in
scas
mov
popf
pop
xchg
mov
mov
popa
std
stos
cwtl
jmp
sub
push
dec
iret
or
popf
das
jmp
mov
cmp
es
pushf
push
and
xor
lret
filds
xchg
out
out
aam
mov
pop
cmp
pushf
jle
call
loope
filds
hlt
es
jo
jl
test
mov
jmp
aam
add
mov
inc
fs
in
mov
xchg
sub
pop
fistpll
dec
inc
je
icebp
push
push
sbb
xor
cmpsb
shl
aam
in
add
xor
cwtl
ja
pop
sbb
jle
pop
fsubp
sahf
sub
cmpsl
icebp
daa
xor
popa
ja
std
sahf
dec
lods
rcrb
loopne
mov
xlat
jmp
xchg
cmp
or
les
aad
ljmp
mov
or
jp
adc
hlt
push
push
das
lret
mov
jnp
push
les
cmp
jne
fsts
dec
jle
or
out
fwait
inc
mov
push
mov
shl
push
jbe
pop
mov
mov
inc
mov
scas
add
pop
adc
push
push
in
or
jg
xor
rclb
inc
test
negl
xchg
sub
inc
xchg
sub
push
inc
xchg
jl,pt
inc
pop
cmc
lods
push
stos
sub
mov
cmpsb
adc
jno
jno
mov
mov
push
stos
sbb
mov
cwtl
stc
loop
xor
pop
pop
cmp
jbe
insb
cli
sbb
filds
idivb
fs
aaa
push
je
out
cmp
lods
pop
out
iret
add
xchg
cmp
outsl
xorb
imul
xor
mov
push
mov
sbb
push
arpl
lods
out
cmpl
insb
je
std
sar
push
mov
das
mov
clc
jge,pt
pushf
sahf
arpl
sar
sub
leave
fidivrs
inc
adc
fucomi
cltd
mov
mov
lock
imul
mov
fsubrl
mov
dec
push
pop
lock
push
inc
rolb
sbb
jg
leave
xchg
frstor
jmp
adc
sub
ret
pop
stos
fwait
lret
out
cmp
lahf
int3
mov
stos
xlat
jp
mov
mov
sbb
mov
scas
push
lea
insb
roll
lods
lods
sbb
test
repz
dec
mov
bnd
sub
call
add
dec
adcb
shlb
mov
pop
dec
mov
sbb
add
inc
fisubrs
adc
lcall
int
mov
adc
fisttpl
sub
add
in
mov
sbb
inc
es
sub
add
xchg
arpl
cmpsl
xchg
data16
sub
dec
nop
jnp
ljmp
pop
cmp
stos
nop
pusha
js
push
imul
or
push
pshufw
jmp
add
pop
sub
jecxz
sets
inc
aad
cwtl
fwait
dec
mov
iret
clc
into
sbb
stc
in
hlt
or
mov
inc
iret
lret
sbb
cmp
inc
cmp
ret
mov
sbb
push
inc
into
mov
test
push
fistps
fidivs
add
mov
push
adc
jle
pop
fistps
movntps
mov
inc
in
rcrl
icebp
sbb
js
xchg
cld
xchg
stos
mov
xor
mov
ljmp
jmp
pop
js
push
cmp
or
aaa
fisubs
fcomps
psraw
mov
and
shrb
adc
jb
mov
lods
add
mov
gs
enter
fidivs
adc
xchg
jl
mov
push
dec
repnz
xchg
jo
xlat
inc
push
xor
icebp
add
pop
test
popa
or
mov
test
cmp
xchg
cmp
jge
ss
sbb
sbb
and
in
sub
cmp
bound
scas
sarb
scas
xchg
sbb
std
lcall
sub
loop
push
pop
push
push
xchg
cmpb
ret
popf
outsl
data16
push
test
sbb
inc
int3
cltd
fs
bound
ret
or
xlat
out
mov
push
pop
xor
aam
add
dec
fbstp
fwait
scas
lahf
mov
pop
in
add
dec
fldt
mov
mov
jo
lea
sub
xor
xor
cmp
aam
jle
sti
mov
sbb
xchg
aas
and
pop
push
and
mov
sbb
cltd
adc
fs
gs
or
mov
xchg
mov
jb
mov
aam
jmp
scas
jp
cmp
fmuls
in
pop
inc
cmpsl
mov
scas
es
xchg
mov
mov
cltd
nop
dec
cltd
cli
cld
imul
repz
rorl
xchg
out
pop
dec
push
sbb
xchg
xor
adc
add
cltd
mov
sbb
das
push
mov
adc
add
into
stos
sbb
out
mov
or
dec
mov
push
mov
jo
pop
pop
jge
ja
add
movsb
pop
mov
sbb
mov
adc
incl
jmp
add
cmp
push
mov
cmp
xor
hlt
leave
mov
inc
xchg
repnz
fmuls
adc
xor
xchg
or
jns
pop
bound
inc
in
or
push
fidivl
repnz
xchg
jo
jns
xchg
pusha
xlat
sbb
lcall
cmp
iret
sub
mov
inc
sbb
add
shlb
pop
push
inc
inc
aad
add
ficompl
test
mov
mov
cmc
loopne
mov
push
fs
inc
cld
aaa
sbb
test
mov
loop
inc
imul
jb
add
sahf
dec
or
xchg
push
mov
mov
cmp
jecxz
push
icebp
push
add
lea
ss
roll
les
lods
xor
or
lock
push
ds
stos
stos
loopne
lock
xchg
cmp
decl
push
push
xchg
arpl
sub
fwait
inc
push
jmp
cwtl
adc
lcall
xchg
mov
pop
ja
cmp
jmp
xor
push
movsb
xor
cmp
mov
inc
shl
sti
dec
not
gs
aad
xchg
cld
aaa
loope
add
inc
fcoms
in
fadd
ss
leave
jecxz
out
cmp
xchg
jmp
ss
mov
add
aas
mov
popa
es
push
cmpsb
stos
ja
int
shlb
and
out
xlat
dec
into
in
mov
push
mov
test
fwait
std
mov
in
or
sub
sbb
popa
cmp
insl
jge
scas
inc
imul
insb
jle
jne
pop
jg
jge
sub
or
sub
mov
pushl
or
lea
lcall
mov
jbe
mov
test
andb
push
fcomi
jbe
sbb
andl
push
sbb
jb
pop
leave
jno
pop
cs
inc
rorl
sub
es
sub
cmpsl
je
pop
test
stos
xlat
cli
mov
inc
adc
mov
and
mov
mov
js
nop
lahf
movsl
scas
fs
gs
adc
fbld
or
xchg
dec
fnstsw
jmp
idivl
push
push
stos
jg
dec
outsl
aad
nop
mov
daa
dec
std
jo
sub
push
vmread
test
jecxz
movsl
dec
jo
int3
mov
xchg
outsb
sbb
xchg
ficomps
nop
or
mov
outsb
mov
sti
xor
pop
repnz
in
dec
stos
into
mov
cmp
test
or
pop
cwtl
lds
aam
mov
jb
out
add
dec
push
dec
enter
pop
pop
ja
sbb
sub
sti
dec
xor
lcall
in
add
iret
arpl
mov
repnz
adc
je
cmpsb
xlat
std
gs
inc
inc
repnz
adc
mov
mov
out
sub
add
out
push
lds
mov
imul
sarb
adc
dec
and
inc
dec
sbb
sbb
xor
xor
daa
cmp
push
sub
jge
adc
pop
sub
pushf
pop
xlat
lcall
out
pop
add
test
fldt
xchg
pop
jne
push
aas
push
or
mov
mov
test
cmc
fldcw
les
fisubl
push
mov
xchg
addr16
mov
pop
and
fisttps
jno
mov
int3
call
les
ret
scas
movhps
stos
jge
lret
ja
cmpl
out
loop
push
lods
add
inc
cmp
adc
fstps
outsl
rolb
rcr
les
lret
shll
mov
lahf
xor
rcrb
in
fwait
fisttpll
scas
movsl
jne
sub
cmp
xor
add
push
cs
loope
orb
into
add
adc
int3
call
dec
or
shlb
call
add
inc
stos
add
leave
mov
sub
sub
shll
sahf
leave
shlb
addb
pusha
sbb
daa
xor
push
rcrb
lahf
dec
int
push
cld
sar
popf
imul
je
lret
ret
nop
xchg
in
out
icebp
and
repnz
aam
loopne
adc
jns
comiss
inc
add
dec
ds
or
popa
mov
dec
mov
aam
sub
call
cmp
mov
mov
insb
xchg
sub
clc
inc
pop
or
popf
dec
lea
ret
adc
sub
jle
cltd
std
fstpl
dec
outsb
std
cmp
js
jle
shrl
adcb
sbb
xchg
push
mov
imul
mov
xor
div
idiv
mov
out
inc
xor
xchg
xchg
push
mov
pop
xor
decl
xor
stos
add
add
adc
sbbb
pop
cli
mov
and
xchg
stos
inc
test
mov
jp
sbb
mov
xchg
dec
loop
jp
cmc
mov
repnz
adc
adc
lahf
sub
push
push
lods
xchg
cli
repnz
lret
fcompl
enter
sub
into
jnp
dec
rol
adc
mov
aas
mov
or
dec
cmp
shlb
mov
mov
xchg
dec
test
mov
lods
lods
icebp
nop
iret
fldcw
sti
imul
mov
and
add
adc
mov
or
mov
pop
sahf
fmull
pushf
xchg
fs
sti
notl
and
lods
push
inc
imul
int
inc
add
push
xchg
outsb
sbbb
int3
mov
sbb
inc
and
insw
push
enter
shrl
mov
fiaddl
add
jmp
dec
adc
mov
adcb
push
xchg
shrb
fs
mov
mov
lds
mov
lock
pop
movsl
cmp
daa
dec
es
sub
fisubl
les
subl
xlat
adc
loop
test
mov
outsb
pushf
leave
lds
sbb
dec
push
sub
push
cmpsl
adc
mov
cwtl
adc
sub
mov
adc
pop
test
push
shll
ret
in
fistl
dec
mov
mov
jae
mov
mov
mov
push
mov
out
divb
mov
arpl
cmc
ficoms
filds
int3
push
dec
adc
sbb
xor
jne
mov
ja
rorl
mov
cmpsb
ret
dec
sub
in
mov
xor
stc
aam
adc
out
dec
xor
lds
call
jecxz
xorl
or
setg
add
push
inc
add
int
les
pop
fcom
xchg
dec
out
lods
es
fdecstp
das
jecxz
movl
mov
lea
insb
push
push
pop
jnp
add
adc
xchg
jle,pn
dec
outsb
and
xchg
sbb
xchg
fs
mov
out
mov
lods
imul
sub
mov
js
jnp
inc
xor
xor
mov
lret
xchg
jno
jmp
test
sub
into
ret
sub
aam
adc
out
fadd
or
fsub
xchg
leave
inc
mov
and
or
inc
mov
mull
cs
ret
inc
out
sbb
dec
jmp
lret
jl
stos
inc
movsb
out
shll
in
mov
out
mov
loopne
loope
pop
xor
imul
lock
xchg
lea
jae
lods
add
cld
cmp
in
je
or
adc
adc
xchg
push
je
lea
xchg
rolb
mov
addr16
cmp
mov
test
push
cmp
mov
out
jbe
sahf
lds
sub
xchg
pop
jmp
roll
aad
cli
xchg
inc
pop
push
and
leave
in
cs
lahf
jno
mov
or
cld
and
gs
push
mov
add
shr
jno
out
outsl
add
pushw
ja
test
add
loopne
add
subl
sbb
add
gs
dec
xor
inc
jmp
aaa
lods
inc
inc
cltd
sbb
lcall
scas
mov
cwtl
mov
and
pop
adc
fisubl
decb
das
outsb
push
fldt
fwait
shl
pop
cmp
lret
ret
xor
xor
ljmp
bound
jle
lods
fidivl
lret
int3
add
mov
std
pop
fwait
notl
mov
in
inc
sbb
cmpsl
add
dec
sbb
inc
repz
inc
fcompl
sub
cmpsl
rcrb
mov
loope
in
dec
push
push
out
mov
push
out
jecxz
sbb
lret
inc
xor
rorl
pop
inc
dec
sub
shll
or
pop
outsb
int3
jecxz
mov
shll
add
dec
xor
mov
and
cli
jge
adc
xchg
add
insb
xchg
dec
jmp
pop
popf
in
mov
dec
mov
cmp
bound
stc
nop
je
pop
cmp
mov
add
mov
arpl
sbb
orb
inc
mov
aas
jns
aas
pop
dec
jb
notb
jne
add
mov
xlat
xchg
pop
inc
jns
xor
pop
fsubrp
mov
iret
jo
clc
mulb
mov
iret
pop
dec
cmp
enter
call
pop
gs
push
rorb
negl
aad
fnstenv
push
call
jo
xorb
jns
sahf
test
lods
insb
xchg
call
lcall
dec
ljmp
mov
xor
iret
pusha
jnp
jnp
fiadds
push
xor
or
and
std
or
lods
jno
pop
cltd
add
idivl
icebp
dec
iret
inc
cmp
repz
mov
mov
out
push
jecxz
mov
insl
sahf
add
inc
out
roll
pop
and
xor
adc
inc
adcl
and
cmc
mov
xor
das
xor
mov
dec
aad
xchg
mov
pop
in
std
jb
xchg
pop
jo
stos
in
mov
inc
jge
bound
inc
adc
adc
pop
jno
sti
cmp
fisttpl
inc
daa
outsl
cld
jge
fisttpl
dec
sahf
sbb
sub
inc
rorl
mov
lods
jo
xorb
inc
cmp
mov
sti
or
and
stos
mov
jo
loopne
jl
sbb
fldcw
dec
sub
add
pushf
cwtl
inc
xor
inc
mov
sub
dec
add
ds
mov
add
push
mov
cltd
push
pusha
or
xchg
rcrb
jmp
cmp
addr16
dec
mov
test
aas
das
push
repnz
ds
mov
or
sbb
outsb
inc
loope
sbbb
adc
imul
xor
mov
mov
xor
jg
orl
pop
sahf
inc
cmp
sarb
addr16
dec
inc
inc
push
xor
sub
lods
xor
inc
shrl
adc
test
fs
adc
repz
loop
mov
mov
mov
nop
sbb
jne
repz
imul
push
adc
lret
cltd
xchg
dec
inc
cld
xlat
imul
mov
sahf
es
xchg
dec
std
ss
loope
cmp
inc
adc
or
xor
jmp
idivb
ss
pop
adc
cltd
mov
dec
push
push
jge
out
jmp
jmp
jg
sub
jmp
sub
out
add
jmp
cld
jecxz
bsf
inc
push
jne
push
or
pop
jmp
scas
jg
xchg
out
movb
ja
xchg
out
cmovg
mov
ret
pusha
cld
push
xor
scas
pop
mov
jp
jae
insb
mov
push
loop
fisubl
mov
in
push
mov
clc
pusha
lea
adc
test
mov
adc
test
sbb
fidivs
repnz
push
adc
insb
add
add
mov
mov
add
lods
adc
and
jge
addr16
mov
ret
jns
push
pop
shr
rcll
insb
pop
mov
pop
push
add
or
cmp
stc
je
inc
sbb
test
add
std
jae
enter
jg
push
or
imulb
xchg
xor
add
cmp
push
jecxz
xchg
mov
xchg
push
ljmp
cmpsl
mov
insb
sti
pushf
or
imul
jmp
jg
loope
std
mov
ljmp
cmp
xor
push
scas
pop
roll
jle
ret
lds
or
dec
sbb
mov
ss
stc
adc
gs
popa
push
stos
cltd
add
femms
sbb
xor
dec
movl
addb
mov
and
ror
stc
ljmp
bound
sub
jmp
cld
out
ficomps
pop
icebp
cltd
enter
jecxz
jmp
cmp
aam
pop
in
ljmp
lahf
insb
xchg
movsl
and
add
mov
ss
ss
icebp
lret
fcoms
inc
push
sub
and
lock
adc
adc
mov
mov
cmp
cmp
lea
adc
hlt
pop
and
lock
rcrb
xchg
xor
mov
ret
sbb
lcall
adc
mov
push
pop
sub
jge
fnstcw
push
fstpl
out
fdivs
stos
pop
loopne
in
pop
add
jb
test
inc
idivb
xchg
bnd
pop
add
xchg
sbb
push
adc
pop
and
imul
mov
lea
and
pop
jge
jl
push
mov
pop
gs
or
daa
fisttpll
lahf
sbb
mov
mov
call
cli
shlb
scas
daa
sbb
cmp
sarl
mov
lods
shll
rorb
sahf
clc
lea
popa
sub
ror
dec
pop
xchg
outsb
xchg
mov
outsl
dec
xor
mov
aas
mov
mov
xchg
shlb
pop
fisubrs
movsl
sbb
lea
test
pop
or
xchg
cli
cmpl
xor
ficoml
pop
adc
push
jmp
lock
dec
pop
xchg
sub
mov
jbe
cmpsl
push
adc
pop
out
jge
inc
test
repnz
jle
inc
movsl
push
dec
mov
mov
and
push
mov
push
or
lahf
push
dec
cmp
fstl
int3
testl
mov
scas
cmp
cli
sti
mov
sti
rclb
in
aam
push
stc
testl
shl
outsb
imul
repnz
xchg
push
loopne
mov
imulb
into
in
cs
int3
mov
or
xor
dec
dec
dec
push
daa
xchg
inc
push
out
test
mov
pop
ret
xor
xlat
roll
aad
rcl
enter
and
xor
inc
popa
dec
dec
xor
fisttps
inc
jecxz
fs
xchg
and
xor
shrb
mov
jno
ret
repz
jb
xchg
cwtl
test
nop
jns
test
mulb
xlat
insl
mov
test
dec
cwtl
xchg
mov
imul
lcall
dec
mov
stos
imul
mov
out
xor
int
dec
push
fildl
stos
cs
scas
cmp
adc
pop
jbe
into
mov
in
rorb
scas
lds
push
jmp
xorl
cltd
pop
cmp
inc
pusha
cld
fiaddl
in
loopne
loopne
shll
repz
push
pop
sahf
pop
lcall
mov
mov
or
xchg
ds
scas
addb
repnz
loopne
xor
sbb
cmpsl
pusha
dec
loope
mov
in
movsl
pushf
push
les
or
cmc
add
sahf
lods
int
dec
sbb
setne
jl
mov
mov
rolb
jno
mov
sbb
or
iret
ret
rol
outsl
sbb
xchg
xor
cmp
scas
jbe
ss
clc
outsb
adc
dec
cwtl
mov
adc
fldt
loopne
sarb
scas
fildl
mov
out
pop
cmpb
dec
scas
imul
push
jnp
cli
aam
inc
cmc
test
rcr
cmpsb
xor
dec
arpl
lods
xlat
jl
sarb
mov
jns
cmp
mov
les
jl
out
ficoms
inc
jp
add
push
lret
mov
push
mull
pusha
decb
xor
aam
call
andb
add
nop
cmp
inc
xor
int
inc
enter
adc
out
mov
mov
sbb
cmp
jo
or
repnz
cmp
dec
idivl
inc
bound
pop
nop
and
shll
adc
rclb
pop
xor
pop
addr16
in
pop
push
popa
hlt
into
mov
pmulhw
sbb
sbb
bound
mov
test
ja
iret
inc
pop
push
sub
jnp
aad
add
push
fs
jae
inc
lret
inc
sub
add
push
push
insb
or
insb
cmc
xor
int
pop
cld
cmpsl
mov
adc
popf
push
int
mov
leave
loop
shl
cmpb
les
xor
xchg
pop
repz
cmpsl
mov
lods
gs
lds
pop
int3
lds
movsb
push
or
cmp
add
xlat
sbb
xchg
ja
mov
in
into
dec
pushl
push
inc
fwait
jns
pop
sbb
dec
aas
dec
mulb
mov
or
mov
add
ljmp
das
mov
sub
jle
sbb
xchg
adc
mov
cmp
call
lcall
loop
jae
ds
dec
fsub
cmp
loope
notb
outsl
leave
in
xlat
jl
inc
mov
pop
hlt
and
jecxz
scas
imul
out
xchg
out
mov
push
jmp
xor
cmp
fsub
pop
push
repnz
add
sbb
push
ljmp
lahf
xor
orb
sbb
cmp
dec
xlat
and
out
sahf
push
mov
ljmp
jmp
aas
cli
pop
fs
mov
cmp
push
xchg
lahf
cmpsl
or
add
mov
test
in
mov
out
pop
out
stos
pop
dec
dec
cmp
push
jmp
gs
fisttpl
jge
inc
adc
clc
add
mov
mov
cmp
jbe
jb
cmpsl
mov
xchg
aaa
inc
mov
cmp
subb
cltd
rcrb
sub
movsb
jo
in
jecxz
into
clc
in
fists
mov
push
add
shlb
int3
and
cmp
jecxz
push
cwtl
movsl
push
cmp
jnp
cmp
ret
mov
xchg
push
pop
or
call
inc
sub
andb
xor
or
jns
pop
push
jae
lock
out
add
sbb
ljmp
mov
mov
loop
outsl
push
dec
push
or
jae
dec
loope
jge
jno
fdiv
xchg
leave
lods
inc
sbb
or
mov
jns
add
mov
jle
push
mov
inc
xchg
jle
lods
fldcw
int
and
ds
cmp
mov
into
js
inc
mov
mov
in
push
mov
test
outsb
inc
loop
mov
test
loopne
outsl
jl
pop
inc
lock
add
arpl
movsl
aaa
fsubrs
dec
lcall
jnp
mov
or
push
rcl
jns
mov
push
pop
orl
pop
jno
jbe
popa
cmc
push
or
sbb
and
gs
repnz
adc
outsb
js
pushf
into
or
pop
sarl
or
inc
xor
lea
mov
mov
scas
repnz
sti
negb
dec
in
mov
rclb
sar
movsb
cmp
shl
icebp
jg
ret
and
jo
mov
jl
mov
nop
mov
add
roll
jae
fwait
push
insb
dec
aas
test
mov
and
ss
push
lods
aas
shll
adc
mov
xlat
pop
daa
lret
push
ret
push
mov
mov
xchg
stos
xor
sbb
rcll
cmpsb
sub
cli
mov
jmp
xchg
clc
pop
fldz
mov
xlat
sbb
les
push
and
xchg
mov
nop
lds
lods
sbbb
mov
scas
stc
sti
push
loop
lods
sbb
repz
outsb
push
mov
push
lock
cmc
out
cmpsb
and
push
mov
fcoml
movsb
lock
repz
movsl
pushf
push
mov
jno
xchg
dec
pop
divb
leave
psubb
aad
into
in
cmpsb
mov
lods
ret
add
test
rclb
xchg
test
orb
or
xchg
add
cmc
inc
dec
nop
pcmpgtb
jns
out
jb
imul
push
push
mov
mov
popa
sub
test
loop
fmull
mov
lds
sarl
aam
push
add
jo
call
movsl
popf
jl
sti
leave
or
sar
xor
cwtl
sarb
iret
and
rcll
popf
aam
sub
sbb
call
subb
mov
and
repnz
outsl
fdivrl
pop
int3
ret
andl
cmp
or
scas
out
out
or
js
fcoms
mov
sub
frstor
push
ret
jecxz
mov
cmpsb
loope
in
out
xchg
inc
and
sbb
mov
loopne
mov
mov
xchg
idiv
push
adc
cwtl
fildll
dec
imul
ljmp
mov
xchg
xchg
jge
dec
mov
and
adc
sub
cmp
adc
movsl
and
outsb
adc
fistps
mov
sub
jge
fs
xchg
aam
mov
in
pop
shlb
imul
pop
scas
scas
cli
add
xchg
push
mov
aas
or
push
sub
mov
fcmove
dec
xchg
mov
pop
sar
loop
cmp
cmc
lods
mov
dec
mov
repz
into
mul
repz
loopne
pop
or
loope
je
into
adc
jnp
push
xlat
push
pop
sbb
mov
orb
cwtl
std
sbb
popa
daa
jle
xchg
pushl
push
outsb
fs
subl
jmp
movsl
mov
sbb
test
pop
add
hlt
mov
mov
ret
mov
js
inc
loop
in
sahf
mov
or
mov
jge
cli
sub
fsubr
das
xchg
push
mov
inc
dec
les
jmp
jge
adc
cld
nop
mov
test
cltd
push
xchg
icebp
outsl
es
cld
jle
xorps
jle
inc
js
stc
cmp
mov
jecxz
push
inc
and
out
or
outsl
icebp
in
mov
movsb
jp
pop
clc
pusha
fadds
aam
sbb
dec
in
inc
mov
mov
jle
sbb
movsb
je
das
sub
add
in
pop
jecxz
popa
popf
jne
and
ds
mov
pop
inc
in
dec
sbb
js
out
std
xchg
push
xlat
sbb
adc
in
in
xchg
jb
test
loope
stos
inc
adc
jno
das
dec
cltd
int
hlt
cwtl
dec
mov
ficoms
adc
call
mov
jbe
xchg
lods
ljmp
add
lods
out
into
popf
sbb
mov
push
das
repz
andb
push
and
aas
sub
lret
cmp
jne
xchg
xchg
cmp
gs
insl
pop
fldenv
inc
lahf
dec
add
ss
cmp
call
cmp
lock
imul
mov
mov
pushf
inc
test
pusha
cs
add
cmp
push
rclb
jnp
repz
sbb
roll
inc
mov
dec
test
pop
leave
push
mov
repnz
fadd
icebp
cmp
xor
pop
repz
xchg
mov
ret
and
cltd
scas
jle
cli
fcoms
pop
adc
in
or
mov
loopne
adc
daa
inc
clc
fcmovnb
dec
outsb
lcall
dec
imul
fisttpll
jecxz
je
add
out
mov
and
sbb
aas
xchg
insl
jmp
jae
pop
psllw
popa
xor
push
push
in
test
imul
das
fmul
jl
out
mov
cmp
cmp
sbb
in
shlb
ja
sbb
push
pop
sbbl
dec
sub
mov
fsubrp
in
mov
push
mov
cmp
scas
filds
pop
pop
mov
lods
ss
into
arpl
jmp
pop
dec
rcrl
enter
shlb
pop
test
jecxz
sub
imul
cwtl
cmpsb
ret
pop
enter
mov
pop
push
push
lret
mov
dec
movsb
in
mov
adc
mov
add
lcall
out
sbb
lods
push
jae
lea
sub
pop
pop
pop
push
and
pop
push
js
push
test
mov
add
std
lret
pop
imulb
es
adc
mov
lahf
ss
push
dec
out
jbe
mov
cmc
aam
cmpsb
fidivl
shrl
imul
cmp
xlat
fisubs
xor
jae
sub
sub
add
mov
pop
cltd
aaa
adc
clc
pop
mov
mov
lcall
mov
stos
testl
bound
xchg
or
testb
jmp
add
sbb
mov
inc
sbb
les
cmc
pop
cld
lods
sbb
js
mov
or
push
je
xchg
sub
xor
test
mov
aas
and
cmp
data16
das
and
popa
es
push
inc
leave
inc
testb
jmp
mov
mov
or
in
jg
push
and
dec
dec
xchg
mov
in
pop
mov
mov
xor
xchg
jb
jecxz
mov
lock
les
add
ret
add
sbb
xchg
in
adc
scas
test
insb
fistl
fisubrs
mov
jnp
cmp
sub
stc
out
push
push
xor
cmp
xchg
cli
pop
dec
aam
xchg
data16
or
shll
adc
enter
xor
xchg
fisttps
jp
adc
mov
cmc
lods
rcrb
ss
jo
xorl
test
test
pusha
fdivs
adc
pop
mov
mov
fucomip
mov
cmpsb
inc
mov
adc
mov
inc
jg
adc
sbbl
fstpl
push
shll
jmp
push
ds
and
mov
cld
mov
testb
inc
imul
aad
mov
sub
inc
daa
leave
xor
dec
cmp
cmpsb
jns
jge
adc
xor
jmp
ja
sbb
adc
loope
and
sbb
xchg
xor
mov
aas
and
mov
enter
stc
nop
mov
rorb
xchg
adc
lahf
mov
mov
mov
stos
push
adc
lret
out
jb
inc
sbb
sub
sbb
outsl
mov
aad
rcrl
ret
and
gs
dec
mov
mov
mov
notl
lret
inc
rcll
repnz
mov
hlt
add
fdivrl
nop
dec
loope
mov
dec
dec
dec
imul
or
push
testl
insb
cmp
and
stos
push
call
xchg
push
mov
mov
data16
adc
inc
clc
lret
ss
mov
loopne
sbb
inc
xchg
adc
mov
out
mov
ret
mov
push
arpl
data16
jno
dec
pop
pop
push
xor
inc
pop
scas
mov
sbb
jmp
test
cmpsb
imul
and
cmp
leave
loop
add
xchg
pop
xchg
sub
add
lods
push
repz
mov
xor
aaa
pop
mov
enter
or
lcall
outsb
loope
scas
sarb
mov
jle
jb
mov
test
insb
inc
lcall
and
aas
pmullw
adc
aad
jmp
outsl
cmpsl
or
movsl
push
mov
fimuls
shll
jle
pusha
icebp
mov
sub
out
arpl
outsl
gs
pop
out
cmp
jmp
out
addr16
sbb
cmp
lock
add
in
jnp
jl
sbb
fmulp
add
jnp
icebp
cmp
push
push
fs
loope
push
mov
jmp
popf
dec
dec
insl
mul
inc
jle
mov
int
push
cmp
push
push
and
cs
adc
stos
jp
test
mov
movsl
mov
movsl
outsb
jo
mov
shll
mov
int3
inc
sbb
ja,pt
test
pop
mov
xor
mov
mov
lret
pop
fbstp
enter
and
mov
sahf
clc
dec
insl
jbe
xchg
dec
test
aad
lret
mov
mov
push
fisttpll
dec
mov
mov
test
shrb
xor
iret
test
dec
dec
sub
lds
mov
add
mov
es
or
sbb
les
rcll
movb
pop
xorl
fsubrs
xor
fnstcw
add
push
add
mov
ja
dec
data16
sahf
mov
push
dec
shrl
dec
xor
popa
es
mov
movsb
stos
adc
push
mov
fs
cmc
jecxz
decl
test
das
jmp
cmp
dec
rolb
sbb
add
lret
jle
xchg
shrl
cli
lods
cltd
mov
out
inc
mov
cmpsl
mov
pop
inc
xchg
xchg
inc
mov
adc
pop
and
andb
push
mov
jl
jmp
sbb
or
roll
outsb
sub
push
cli
sub
testl
cwtl
sub
dec
pop
aam
push
adcl
mov
mov
cmpsl
xchg
test
movsl
loopne
mov
popa
sti
pop
xlat
inc
loop
in
push
roll
mov
test
xchg
lahf
stos
inc
lea
add
sbb
cmpsl
lods
xchg
leave
mov
and
andb
dec
andl
arpl
and
mov
cmpl
sub
mov
mov
pusha
xchg
loope
add
fbstp
fs
xchg
push
rcr
dec
cmp
test
sub
call
pop
mov
cmp
jno
cmp
arpl
jo
xor
jae
das
fcmovnbe
jb
cmp
shll
addb
push
loopne
xor
out
push
faddl
dec
popa
mov
cli
sub
sbb
aas
push
and
inc
mov
js
insl
and
mov
xchg
jnp
decl
filds
cs
inc
jl
imul
or
mov
js
in
cs
xor
and
outsl
mov
fs
adc
jb
jp
js
push
ss
out
insb
inc
ss
pop
outsb
shll
mov
and
outsb
push
rorb
js
mov
and
mov
or
jne
push
sub
ja
pop
cmp
pop
pop
inc
cmp
jmp
addr16
sub
and
daa
mov
pop
insl
pop
test
and
pop
test
push
jmp
out
jae
aad
or
mov
into
std
jg
jo
ljmp
push
pop
out
push
arpl
movsl
jb
in
xchg
shll
xchg
push
lret
sbb
jle
fiadds
sbb
aam
xchg
xchg
pushf
xchg
add
mov
adc
stc
mov
aaa
jns
ret
jns
adc
and
or
pop
jle
sub
int3
test
popf
mov
out
mov
call
wrmsr
cmpsl
xchg
pop
jne
js
push
jg
mov
fistl
lods
aam
jns
addr16
fisubrs
dec
xchg
push
cli
and
cwtl
mov
out
inc
mov
xchg
into
repnz
inc
dec
pop
mov
mov
mov
sbb
cmp
arpl
lea
mov
rorb
inc
jno
scas
test
mov
movsb
fsubs
icebp
out
mov
jno
mov
lret
push
xor
test
ret
sub
mov
push
dec
cs
jno
or
in
ja
repz
pop
jecxz
rcrl
and
leave
mov
xor
jbe
arpl
leave
or
jge
inc
out
enter
shrb
xchg
and
test
cmp
or
aad
movsl
loopne
dec
test
dec
jns
outsl
xchg
lret
stos
xor
sar
movsl
clc
push
in
inc
popf
mov
dec
iret
lcall
sub
jg
fimuls
cs
into
lret
push
jne
dec
xor
add
dec
lea
imul
js
add
cltd
rorl
fcoms
sti
and
jp
and
out
hlt
rorl
pop
es
xchg
mov
mov
sbb
test
pop
sarl
cmp
jl
int
push
dec
mov
pop
adc
dec
arpl
add
out
mov
xchg
lahf
nop
pushf
scas
or
push
mov
iret
pop
insl
add
mov
lahf
push
xor
cmp
lock
sbb
adc
adc
xchg
das
out
mov
mov
ficomps
xchg
xor
lds
dec
iret
pop
rep
mov
sub
out
push
fwait
emms
sbb
mov
mov
pop
xor
and
sar
add
hlt
js
sti
add
mov
negb
test
loopne
inc
testb
fstp
in
ss
dec
push
push
mov
arpl
add
repnz
xchg
shlb
adc
jns
lock
inc
fstpl
mov
rorl
lahf
mov
std
dec
mov
ds
scas
cmp
xchg
mov
rcll
fwait
sub
pop
inc
or
sbb
inc
mov
fsub
mov
lcall
daa
xchg
mull
pop
mov
fwait
cli
push
loop
out
sbb
xor
aad
mov
in
das
jae
jno
dec
stc
call
in
xchg
mov
or
negb
rcll
jmp
into
sbb
mov
pop
dec
push
push
aad
imul
sub
pop
mov
mov
and
jl
movsl
in
mov
hlt
enter
jge
out
lcall
idivl
mov
and
xchg
andl
jb
xor
dec
pop
data16
or
xlat
adc
fisttpll
int
mov
push
mov
mov
andl
rorl
pop
lods
or
pop
popa
mov
stc
lret
push
jg
adc
push
mov
movsl
fmuls
mov
lcall
jg
pop
cmp
mov
pusha
in
mov
out
mov
add
repz
ffree
int3
xchg
jp
fwait
out
sarl
cwtl
int
push
popf
jae
jb
into
push
test
sbbb
sbb
xlat
sbb
lret
cmc
and
inc
clc
daa
sub
fdivrl
push
or
jl
movsb
dec
icebp
sub
cld
bound
aad
push
adc
and
push
subb
incl
ret
outsb
adcb
mov
sbb
outsl
xchg
cmc
jne
fwait
repz
adc
pop
shll
or
enter
lods
jae
stos
iret
ja
mov
fiadds
jno
rol
push
push
adc
cmp
xlat
xchg
fucomi
into
pop
enter
jns
xchg
ljmp
xor
fnstenv
jae
out
fistpll
scas
sub
test
mov
mov
pop
and
sahf
mov
daa
shrb
xchg
inc
sub
outsb
jmp
cmpsl
and
mov
lds
pop
pop
sub
cs
xchg
test
ret
jne
adc
shlb
data16
dec
dec
lret
sub
and
or
inc
xchg
pop
popf
sub
popf
inc
repnz
dec
cmp
stc
push
aaa
das
sub
nop
xchg
push
int3
cmp
pushf
in
negl
dec
ficoms
and
pop
movsl
punpckhbw
cltd
push
push
testb
or
mov
std
sbb
fidivrs
jnp
jne
fdivl
icebp
loop
sbb
inc
and
fdivl
and
jae
mov
adc
push
jbe
adc
dec
dec
sub
push
push
add
xor
repz
lahf
nop
scas
jo
and
int
jl
fists
ret
inc
mov
push
data16
adc
mov
outsl
mov
in
lds
daa
jle
or
adc
loopne
repnz
test
cmp
je
xor
mov
xor
outsl
dec
mov
in
sub
push
sub
mov
loopne
out
sub
sub
pop
lret
xchg
cmpsb
aad
or
mov
fwait
cmp
scas
xlat
enter
mov
inc
jg
pop
mov
mov
cmp
sbb
out
pop
iret
cmp
gs
mov
add
jmp
inc
add
ja
mov
pop
setp
cmp
add
sbb
xchg
movsb
aad
push
int
ljmp
daa
arpl
outsb
xor
jmp
shrl
inc
sbb
ja
push
movsl
push
gs
stc
lea
ds
add
mov
pop
ficomps
pop
push
loop
xor
popf
aas
jae
mov
add
or
mov
xchg
push
ret
or
mov
lea
xor
iret
cmpsb
sub
pop
xchg
or
push
popa
aas
mov
fidivl
jmp
jne
cwtl
mov
mov
xchg
ljmp
out
into
jae
dec
adc
pop
xlat
sbb
xor
jae
mov
jmp
mov
outsl
adc
hlt
enter
mov
scas
out
inc
push
pop
jnp
sahf
orb
imul
sbb
shr
je
or
dec
pusha
push
aas
leave
gs
sbb
sbb
test
cmpl
mov
mov
pop
pusha
aam
pop
mov
scas
mov
mov
add
fiadds
andb
sub
or
xchg
sub
shr
sub
aaa
sbb
in
sbbl
push
mov
aad
ss
jg
fdiv
mov
cmp
cld
frstor
jecxz
daa
dec
cs
sti
call
sbb
fildl
sbb
mov
or
jne
aad
or
dec
ds
rcrb
sbb
xor
add
add
inc
cli
sarb
pushf
sahf
loop
mov
pop
lahf
adc
mov
xor
jnp
or
jl
out
sub
push
xchg
bound
sub
adc
lcall
ljmp
jge
ret
xchg
sarb
or
sub
adc
or
xchg
cmpsl
and
sub
mov
enter
xchg
pop
mov
arpl
ds
dec
pop
fdivr
in
data16
dec
mov
jg
or
sbbb
inc
aad
push
hlt
push
dec
cltd
in
lahf
lret
jb
insl
inc
inc
stos
sub
repnz
xlat
pop
lods
and
imul
ret
repnz
sti
aam
push
cs
pop
jle
jp
test
out
icebp
in
inc
ret
aad
stos
mov
sub
xchg
sahf
xlat
xor
or
and
lea
stos
mov
fadd
mov
incb
mov
mov
loope
xchg
pop
sbb
adc
xchg
sub
js
in
sar
lret
loope
dec
repz
push
sbb
jae
addr16
test
push
int3
imul
add
dec
pop
inc
mov
xchg
mov
pushf
insb
and
jnp
loope
out
hlt
mov
les
ss
aaa
push
test
lret
and
out
pop
mov
pop
iret
pop
out
mov
xchg
pop
fsubr
sbb
nop
mov
leave
imul
repz
mov
jo
mov
sbb
and
push
insb
dec
jo
sub
jg
cwtl
pop
out
iret
insb
and
cmp
in
xchg
mov
mov
pusha
xchg
mov
hlt
negl
clc
push
xchg
clc
jo
mov
mov
pop
fbstp
push
xor
std
sub
iret
cmp
push
xor
jb
mov
mov
and
jecxz
andb
daa
and
imul
pop
push
xor
xchg
fiaddl
cli
adc
mov
sbb
iret
xorb
push
jae
test
test
xor
cmpsb
cmc
cmc
dec
dec
dec
jmp
jle
xchg
je
cwtl
xchg
pop
push
lods
xor
jns
divw
icebp
negb
sbb
push
out
test
lcall
add
push
push
data16
rolb
ds
xchg
jl
sub
cmpsb
dec
call
scas
je
popa
sbb
ljmp
adc
pop
lcall
jo
lret
sub
sbbb
mov
aad
cmp
mov
cmpsb
jbe
out
lods
xor
lock
repnz
sbb
mov
cmp
xor
mov
jg
test
sti
sbb
lds
sahf
test
dec
cmc
or
les
repz
lcall
xchg
adc
add
cltd
pop
sar
ja
jbe
cld
fdivrl
test
add
test
js
jp
ret
and
stc
in
xor
push
inc
sbbl
mov
sbb
adc
imul
aas
sbb
mov
fldenv
xchg
mov
dec
ja
sub
xor
test
mov
aam
lret
imul
xor
call
test
popa
xchg
les
stos
call
jne
adc
ljmp
fldenv
push
das
fidivl
cmp
xchg
ja
popf
lods
mov
jo
dec
xor
scas
stos
mov
imul
in
dec
fidivs
cmp
test
mov
jnp
pop
int3
rclb
test
mov
push
jg
imulb
fildl
lahf
cmp
xor
mov
or
push
mov
fstps
loopne
or
out
and
adcb
jo
jge
jae
ja,pn
repnz
movsl
insl
and
mov
aaa
repz
scas
adc
jo
dec
enter
cmp
jle
push
in
into
cmc
push
sti
ret
in
add
jecxz
jecxz
add
fnstcw
je
pop
mov
stos
add
push
jns
pop
jns
incl
mov
pop
cmpl
mov
out
sub
xor
dec
test
adc
pop
jl
jae
or
mov
xor
aad
aad
aaa
xor
lods
jae
sbb
sub
pop
movsb
cmp
mov
push
hlt
test
cmp
outsb
fisttpll
pushf
addr16
aas
jle
cmp
in
ret
dec
lods
insl
mov
push
inc
pop
mulb
int3
popa
inc
pop
fiadds
repnz
and
push
and
inc
cli
mov
ja
inc
and
nop
and
inc
sub
push
push
or
xor
pop
popa
jp
fcomi
jo
mov
mov
xchg
jge
add
enter
xchg
lahf
jmp
xchg
cmp
cmp
push
iret
jns
jge
push
fidivs
mov
leave
xchg
mov
test
inc
lahf
lds
dec
sti
decb
insb
mov
xchg
and
xchg
and
xor
insl
mov
je
in
cld
nop
rolb
rcr
daa
push
sti
ds
sub
sbb
ror
cs
pop
test
sub
fcmove
cmpsl
sub
cmp
sbb
popa
pop
mov
adc
fstpt
scas
push
repnz
je
adc
fidivs
cs
lcall
xor
sub
pop
out
mov
xchg
cs
mov
mov
sbb
rorb
dec
and
dec
xchg
sbb
inc
xchg
push
stos
aas
mov
xchg
mov
mov
add
inc
fstpl
ss
mov
int
sub
hlt
ficoms
lret
pop
mov
mov
dec
icebp
scas
loopne
dec
stc
xor
xor
mov
xchg
xchg
and
and
sub
sbbl
sbb
cmc
sbb
loopne
jp
mov
ja
xor
pop
mov
addr16
mov
dec
out
bound
cltd
sub
sahf
and
pop
jg
mov
lods
push
cmp
or
dec
into
mov
stc
fucom
sub
sub
and
lcall
jnp
lods
or
test
dec
lods
cmp
xchg
call
int3
mov
rclb
dec
cmpsl
adc
inc
push
stc
test
pop
pop
vaddsubps
jl
pop
add
cmp
pop
jle
or
push
dec
mov
push
outsl
and
popa
arpl
push
repz
data16
fadds
dec
sbbb
int3
jae
jg
xor
scas
inc
adc
call
sahf
or
add
loopne
sbb
mov
rcll
mov
lcall
sbb
gs
mov
mov
adc
popa
imul
aad
dec
lahf
aas
mov
push
sbb
lea
xor
jo
jmp
or
jecxz
hlt
push
dec
jg
pop
mov
shrl
mov
cmp
jne
das
stos
sbb
subl
mov
test
push
clc
les
cmp
insb
roll
sbb
jl
and
fistpl
outsl
cld
out
insl
dec
and
insb
inc
sub
imul
jge
jae
fadds
lock
cmp
dec
loopne
and
sub
adc
shl
ljmp
xchg
es
dec
roll
and
inc
cmp
scas
out
and
mov
and
or
cwtl
mov
aad
inc
cmp
jp
jo
mov
adcl
subl
dec
arpl
push
lcall
push
cmp
out
lock
xchg
mov
movntq
mov
pop
sbb
add
cltd
xor
jl
sub
hlt
sbb
movsb
xchg
jecxz
movsb
jmp
das
movsl
adc
adc
sub
fsubs
jae
or
cmpb
push
adc
adc
mov
sub
adc
adc
enter
neg
loopne
fidivrs
sahf
mov
fdivrl
mov
es
das
mov
mov
adc
sar
scas
push
call
aaa
inc
push
insb
push
sti
daa
or
adc
mov
xchg
orb
and
out
xor
ds
adc
dec
lcall
jne
pushf
enter
mov
int3
sub
outsl
dec
mov
addl
mov
dec
sbb
aad
aas
iret
xor
out
pop
arpl
adc
je
add
push
arpl
clc
cld
fldl
push
lret
test
sub
mov
addr16
shll
imul
jne
repz
jns
insb
std
fsubrl
mov
std
xlat
out
xor
hlt
in
xchg
data16
test
int3
and
push
test
jno
mov
cmp
dec
out
bound
dec
nop
inc
cmp
or
adcl
enter
cmp
popa
in
dec
jmp
adc
sbb
inc
stos
jne
jae
cmc
dec
shrb
push
pusha
mov
or
fidivrl
das
jbe
mov
pop
sub
mov
daa
inc
jle
cmpsb
xor
fiadds
jp
aaa
fisubrs
pop
dec
cwtl
call
dec
sbbl
dec
ja
push
dec
push
xchg
fucomip
add
sbb
shrb
andb
enter
pop
aaa
loope
pop
scas
mov
cmpsl
cmp
inc
mov
je
in
filds
pop
imul
dec
or
pop
ds
cmp
enter
jl
or
cmp
imul
sub
mov
lods
ss
pop
aas
out
cli
dec
pop
add
lcall
sbb
sub
xor
cmp
push
push
push
loop
sub
and
iret
or
lock
sahf
clc
lcall
sub
cmc
gs
inc
fldl2e
lahf
mov
testl
lret
ja
das
in
arpl
arpl
enter
fiadds
xchg
cmp
jecxz
sub
push
sub
push
xchg
call
out
xchg
divb
inc
pop
sub
add
fdivs
xor
push
mov
jp
call
out
mov
mov
rcll
jno
mov
add
inc
rcrl
adc
and
or
sbbl
in
pop
dec
pop
cwtl
incl
add
dec
pop
out
arpl
test
inc
divl
push
push
push
cmp
aaa
adc
scas
dec
xchg
loop
adc
and
mov
or
add
jp
addr16
fildll
dec
xor
cmc
sbbl
sub
fld
pusha
cmp
mov
arpl
xor
add
and
mov
add
pop
mov
or
add
xor
repnz
lcall
push
mov
test
jl
push
xchg
loop
or
das
pop
mov
into
cmc
adc
int
mov
mov
or
xchg
inc
sbb
movl
mov
dec
jle
cmp
lret
cs
xchg
movsl
repz
test
mov
lret
stc
inc
test
icebp
cmp
addr16
ror
push
dec
or
nop
les
cmp
mov
adc
lahf
ret
adc
hlt
push
or
mov
jb
in
add
inc
jg
and
inc
and
inc
inc
xor
mov
test
xchg
add
jbe
in
in
lret
dec
pop
adc
inc
repz
mov
mov
inc
fimull
sub
sarb
sub
insb
dec
decb
cli
mov
loop
aam
jecxz
iret
sbbb
jge
adc
adc
xorl
or
lods
or
and
lods
mov
jbe
and
jmp
mov
push
outsb
sbb
gs
daa
dec
repnz
dec
cmp
repz
js
sub
cmpsl
jmp
nop
jg
movsl
inc
add
pushf
imull
mov
or
pushf
and
lods
les
mov
neg
mov
ss
inc
dec
jg
ret
or
mov
ja
mov
dec
loope
xchg
or
push
pusha
xor
push
int3
or
lcall
mov
and
nop
mov
add
and
out
jb
mov
enter
out
insl
sbb
test
rcrb
inc
sbb
repz
into
in
pusha
xchg
xchg
mov
jne
and
jg
cmpsb
cld
adc
out
push
ja
pop
pop
dec
jle
and
out
cmpsl
sub
mov
cs
mov
cmc
mov
add
push
xchg
fistpl
jnp
rorb
mov
fwait
imul
jmp
jbe
pop
inc
mov
or
xchg
mov
xor
jo
pop
adcl
ret
adc
jecxz
fcoml
roll
jb
leave
add
test
bound
ss
leave
cmp
pop
adc
dec
pop
xchg
jno
or
inc
sub
adc
fdivs
mov
ja
mov
push
adc
shlb
sbb
incb
data16
cmp
lea
inc
test
cmp
jne
stos
notl
pop
in
dec
push
sub
jp
add
mov
in
fs
inc
dec
stos
xchg
xchg
mov
insb
out
dec
outsb
mov
jno
jmp
testb
mov
fsubs
xlat
adc
mov
mov
in
jnp
mov
dec
mov
add
sbb
cmp
sbb
pop
add
mov
jmp
loope
imul
pop
cwtl
rcr
cmpl
and
scas
dec
sub
mov
or
sbb
pushf
xchg
xchg
int
mov
jbe
mov
stos
out
aas
imul
and
arpl
sahf
xchg
subb
adc
sub
movsl
pop
pop
and
or
add
outsl
cmpsl
sahf
push
push
lcall
imul
adc
xor
test
loopne
iret
lods
nop
add
mov
push
sub
pop
push
adc
in
shll
adc
shlb
jnp
mov
adc
aad
aad
ud2
sbb
mov
or
sar
xor
lcall
jg
lods
sbb
cmp
rclb
test
mov
fwait
cmc
adc
jmp
pusha
pop
movsl
test
xchg
negb
data16
pop
push
cmp
pushf
xor
sahf
jecxz
pop
and
mov
xchg
fisubs
mov
fchs
das
jmp
xor
add
pop
lods
fsubl
jmp
pushf
adc
xorb
ljmp
adc
and
insb
cli
xorb
xor
cmp
test
push
mov
cmp
jg
xchg
fldcw
inc
mov
xor
fdivrs
dec
std
negl
pop
gs
xor
add
and
push
or
pushf
fcmovu
sbb
stc
data16
xor
aam
mov
xchg
jbe
push
aaa
in
imul
mov
xor
ljmp
pop
ds
or
add
mov
xor
xlat
mov
inc
fcoml
mov
xchg
jae
add
flds
aaa
movsl
adc
and
push
enter
popf
arpl
and
cli
mov
mov
pushf
loop
jne
mov
dec
pop
movsl
daa
mov
shr
mov
and
push
scas
xchg
outsl
lock
mov
leave
jne
and
sti
or
sub
dec
jno
jecxz
int3
cmp
mov
or
jns
jne
leave
test
sbbl
rol
or
mov
insl
mov
or
or
xchg
or
shll
jnp
cmc
mov
popa
xchg
fnstcw
xor
xlat
mov
cli
pusha
imul
scas
jge
cmpsb
xor
xor
hlt
mov
loope
xlat
sub
add
daa
cwtl
adc
add
jbe,pn
add
int3
test
mov
movsb
pop
loope
incb
subl
xchg
xchg
mov
adc
mov
in
sti
in
xor
jo
lods
dec
out
xchg
mov
lcall
or
sub
lods
sub
pop
dec
dec
adc
ljmp
scas
mov
or
cmp
sub
mov
ds
out
mov
xor
lcall
lock
test
daa
xchg
adc
ficoml
cmp
ljmp
jbe
add
iret
fs
daa
jae
fisttps
mov
cmc
pop
movsl
out
mov
pop
jne
cmp
pushf
mov
push
insb
add
jo
mov
insb
movsl
call
jecxz
lret
mov
push
andb
mov
or
jns
lret
jg
imul
cmpsb
dec
imul
inc
push
lock
xor
arpl
and
mov
mov
out
jb
and
and
push
push
cld
mov
jbe
inc
jle
into
jne
fimull
xchg
push
mov
outsb
icebp
fdivrs
test
add
push
and
addr16
and
inc
xor
and
xchg
cwtl
enter
nop
or
cmp
sub
or
sbb
mov
ret
jne
sahf
out
adc
stc
jge
mov
dec
cwtl
mov
das
push
sbb
pushf
rcll
dec
cmp
lret
jecxz
inc
sub
sub
arpl
pusha
push
sbb
inc
add
ret
xor
cmc
outsl
mov
fwait
in
scas
inc
dec
mov
hlt
sub
test
fbstp
mov
insl
movsl
loopne
dec
mov
sti
insw
shrl
fwait
test
nop
cltd
dec
int3
push
cmp
lods
xchg
aaa
pop
pop
fildll
lcall
cmc
cmp
cmp
and
or
into
lods
jne
sbb
icebp
fwait
rorl
pop
loope
loopne
lock
std
and
test
mov
xchg
or
pop
popa
xor
dec
push
addr16
cmp
test
lock
jnp
xchg
cmp
paddsb
sub
inc
cmp
pop
cmc
xchg
mov
movb
xor
xchg
or
iret
cs
pop
add
imul
jmp
scas
xchg
aad
xchg
outsb
stos
inc
das
xchg
lret
sbb
sahf
pop
jns
int
in
pop
xchg
mov
jb
lret
jno
push
push
aas
push
pop
aad
rcrl
addr16
xchg
cmp
addb
cmpb
scas
adc
leave
sbbl
xchg
mov
sbb
or
push
push
xchg
mov
xor
jl
jae
jno
mov
cmp
movsl
rorb
lods
jns
xchg
daa
cmp
rep
cmp
mov
stos
popa
or
enter
mov
adc
nop
jmp
enter
cld
sub
sbb
pop
xchg
int3
lods
pop
jl
ja
sbb
bound
xchg
ljmp
nop
xor
stos
jg
ss
jmp
cli
jo
cmp
lea
sbb
pop
js
pop
aad
mov
mov
nop
lahf
push
jl
jno
rcrb
rolb
lea
aaa
sbb
shr
inc
les
mov
out
iret
add
repz
and
and
dec
jo
sub
mov
jmp
add
out
aas
jmp
mov
stos
push
int3
sub
cmp
jmp
sbb
xor
or
iret
repnz
nop
dec
mov
je
dec
jae
sar
xorl
es
push
outsb
sbb
xchg
loopne
mov
mov
dec
movsb
jl
jl
xchg
lret
dec
pop
sub
pop
negl
mov
pop
mov
mov
cmp
mov
outsb
xor
imul
push
aas
test
cmp
cmp
add
pop
ljmp
xchg
or
inc
pop
fiaddl
jecxz
fstpt
mov
ljmp
cmp
sub
in
push
fcoms
push
inc
shll
mov
stos
sbb
add
mov
xor
inc
test
enter
mov
cmp
test
pop
sub
lret
push
cmp
insb
nop
mov
or
inc
mov
adc
sbb
es
add
bnd
ror
pop
ljmp
and
lea
mov
jge
cs
mov
lods
jo
mov
mov
in
sbb
ljmp
test
inc
ret
out
shlb
ficompl
sti
xor
sub
les
dec
dec
mov
mov
pop
fcmovbe
jecxz
loop
xchg
mov
dec
lods
jne
xor
lods
mov
xchg
cmp
push
xchg
test
pop
hlt
shlb
clc
out
mov
sahf
dec
sbb
add
scas
fadds
push
jp
cmp
mov
cmp
mov
or
pop
lock
repz
imul
jg
push
xchg
inc
mov
adc
adc
jns
scas
sub
or
sahf
fs
dec
push
loope
sbb
sub
int
mov
lahf
bound
xlat
push
scas
xorl
daa
mov
ret
sub
inc
push
loop
dec
push
es
stos
mov
jns
cwtl
cmp
lahf
mov
pop
jge
add
mov
dec
scas
repz
cmp
aad
jne
enter
ja
mov
popa
xchg
insl
icebp
pop
daa
pop
dec
shll
mov
jo
out
mov
xchg
ret
lcall
testb
mov
mov
inc
inc
fdivrs
flds
lds
jo
xchg
call
jp
mov
stos
xlat
aad
cmp
mov
xchg
and
iret
lods
out
aad
adc
jg
inc
mov
decb
arpl
inc
imul
inc
xlat
inc
xchg
ret
jns
mov
add
das
iret
adc
cmp
insl
rcll
push
pop
js
jp
cmp
xchg
scas
aad
pop
pop
loopne
pop
fdivp
sbb
jns
aad
jge
xchg
dec
adc
pop
add
sarl
xor
adc
cmp
xor
push
push
in
out
js
aad
adc
push
jb
sti
and
xor
lret
add
inc
jbe
bound
nop
ljmp
clc
bsr
xor
xchg
leave
jecxz
add
jle
pop
std
push
mov
push
imul
stos
dec
flds
loopne
cmp
dec
xchg
sahf
mov
and
ja
adc
push
out
pop
pop
pop
les
sub
pop
inc
into
xchg
or
dec
clc
icebp
fildll
sub
push
in
in
mov
mov
and
scas
sbb
mov
sub
push
sahf
and
xorb
mov
sub
mov
cmc
fiaddl
loop
push
ret
pusha
xlat
mov
sarb
leave
stos
sbb
cmp
popf
setb
je
mov
dec
outsb
aam
stc
sbb
dec
fs
add
insl
pop
push
or
mov
int
mov
je
and
xchg
fdivp
in
push
pop
mov
test
dec
adc
mov
xor
push
jns
sbb
lock
push
push
cwtl
popa
stos
jmp
daa
pop
rclb
xor
lods
mov
sti
xchg
push
fcmove
pop
out
xor
rolb
rcrl
push
mov
jge
pushf
repz
pop
sti
clc
outsl
in
addr16
ljmp
jns,pt
call
push
mov
stc
xor
cmp
hlt
ss
mov
in
add
dec
das
adc
enter
pop
adcl
add
cld
popa
dec
pop
cmpsl
subl
out
push
xchg
int
lahf
sub
xchg
test
arpl
je
mov
adcb
push
cwtl
xchg
lret
sbb
xor
mov
mov
hlt
sbb
cmp
rcrb
jg
mov
std
outsb
aaa
and
and
adc
mov
test
cmpsl
pop
push
lods
out
mov
mov
lret
out
aaa
dec
dec
arpl
ss
add
xchg
xor
and
and
sbb
add
push
pop
subb
gs
cmp
bound
sub
fisttpll
movsl
inc
lock
mov
push
jb
push
push
hlt
arpl
dec
sbb
pop
sbb
adcb
push
xor
fwait
mov
enter
mov
repz
daa
outsl
iret
xlat
cmp
inc
scas
lret
cmp
push
sbb
je
psubusw
leave
leave
mov
jmp
cmpsl
lcall
int
imul
cmpl
pop
ds
sarb
vunpcklps
mov
and
mov
cmc
lret
inc
mov
out
adc
sbb
xchg
lcall
jg
pop
jle
push
xchg
pop
jno
push
scas
aam
jge
sub
sti
jl
addl
cmp
aam
push
ja
sbb
dec
xor
push
negl
cmp
loop
lds
xor
arpl
gs
rolb
mov
aam
and
cmpsb
es
jns
dec
jo
and
iret
je
nop
test
mov
add
sbb
imul
pusha
int3
pushf
xor
jp
jle
add
jp
dec
sbb
insb
mov
jp
cld
xchg
and
add
pop
and
bound
cs
jae
inc
pusha
cmp
jne
mov
mov
add
fwait
cmp
fstl
pop
in
lret
push
movsb
out
fdivl
mov
sub
add
jp
and
inc
sbbb
insb
adc
sub
insb
mov
mov
sbb
adc
mov
mov
lds
cmp
mov
mov
negl
jno
shrl
push
nop
arpl
inc
fldt
add
xchg
or
out
mov
ret
and
mov
scas
sahf
outsl
jns,pt
into
outsb
fisubl
adc
mov
pushf
push
xor
mov
pop
add
les
fnstcw
xor
loope
in
addr16
data16
inc
jnp
enter
jne
mov
xchg
xchg
cmp
leave
andb
int3
es
sub
in
xor
mov
nop
jns
push
and
data16
adc
mov
and
cmpsl
mov
cli
into
cs
das
cmp
jge
dec
push
sub
mov
dec
lea
jno
in
and
ljmp
clc
fdivs
cmp
jnp
cmp
ret
out
fsts
dec
out
sahf
mov
xchg
je
fistl
push
divl
xlat
idivb
xor
or
test
call
pusha
xchg
insl
sub
dec
xchg
sbb
mov
fdivs
nop
shll
xor
stos
jo
mov
hlt
jae
mov
fcmovbe
ja
shlb
pop
in
xlat
sbb
push
outsb
mov
aad
fidivrl
int
aam
imul
cli
push
mov
xor
and
xchg
and
aas
xchg
call
das
repz
mov
dec
sub
mov
into
sbb
cmp
jp
imul
push
lret
lock
movsl
insb
pop
push
push
repz
jecxz
in
dec
dec
cmp
pop
lcall
dec
aad
pop
mov
clc
mov
xor
sbb
mov
sbb
divb
div
out
push
cmp
cmp
xor
leave
dec
push
add
stos
xor
icebp
mov
mov
negb
clc
or
jle
or
adc
imul
push
pusha
lahf
xchg
dec
mov
inc
xchg
inc
es
shl
pop
nop
pushf
mov
dec
or
fildll
push
sub
frstor
cmp
jl
inc
or
jne
add
jle
outsb
mov
psadbw
xchg
into
not
sahf
ret
loop
push
or
push
xor
popa
xorl
jne
incl
add
fucomip
out
lock
or
jae
sbb
dec
cli
shll
and
lret
cli
inc
hlt
lret
leave
pusha
rcrl
fwait
iret
and
jmp
mov
cld
lods
adc
pop
pop
lods
mov
enter
pop
sub
insb
mov
into
je
sub
jns
jl
jg
pop
sbb
cmpsl
cmpb
pop
xchg
and
mov
push
mov
insl
ljmp
jnp
jns
jg
jo
gs
or
outsb
cmp
mov
inc
adc
nop
cmc
sub
aad
sub
mov
movsb
es
add
cmp
inc
mov
push
faddl
repz
adc
dec
dec
mov
xchg
cmpsl
mov
dec
mov
or
test
mov
das
push
arpl
and
dec
xlat
jecxz
xor
pop
and
js
lahf
ja
xor
sub
mov
je,pn
inc
pusha
jo
mov
cmp
fnop
jmp
int3
add
mov
cmp
hlt
jae
push
jne
mov
sbb
aas
mov
sub
sub
mov
pop
mov
sti
mov
fcoms
xchg
sub
jl
sbb
xor
pop
cld
in
fdivrl
jl
dec
pop
incl
mov
mov
add
clc
andl
pop
add
xorl
pop
add
xchg
xchg
loopne
mov
adc
loope
imul
popf
fndisi(8087
push
mov
lods
mov
pop
push
sub
fldl
pushf
adc
hlt
icebp
div
push
sahf
bound
ror
push
sub
pop
pop
movsb
jns
sbbb
pop
out
and
loopne
shrl
out
arpl
sub
sbb
add
mov
and
sub
dec
mov
push
icebp
inc
ja
add
clc
xchg
insb
cmp
enter
aas
and
aaa
jle
inc
or
or
das
std
cmp
aaa
add
movsl
int
dec
inc
mov
pop
out
mov
dec
arpl
add
add
scas
jae
xorb
scas
adc
pushf
mov
inc
test
jnp
inc
inc
sbb
ja
cli
movsl
xor
leave
iret
mov
fdivrl
jp
jno
xor
call
mov
pushf
mov
vmovd
jno
cmc
sub
sbb
sub
inc
xor
nop
push
push
mov
loop
pusha
mov
mov
mov
sti
fsubr
adc
inc
cmp
mov
jge
add
jne
jb
push
ja
cmp
popf
dec
sahf
cmc
loopne
std
xor
fiaddl
cmp
add
imul
push
in
adc
movsl
xchg
push
test
stc
std
icebp
gs
mov
pop
adc
sbb
ja
xor
fnsave
aas
jge
mov
rep
into
mov
fdivp
repnz
sub
mov
rcll
sub
aas
fldpi
sbb
add
dec
es
mov
iret
icebp
fldl
xabort
ss
push
lods
imulb
sbb
rorb
imul
jae
rcll
pop
rorl
int
inc
cmp
icebp
jno
adc
stos
lahf
sar
js
es
lods
pop
ficoml
loopne
push
pop
mov
and
in
jmp
mov
mov
sar
adc
push
push
sub
lods
test
jbe
daa
inc
in
ja
pop
inc
mov
jns
dec
xchg
out
push
inc
lds
pop
pusha
mov
and
push
lcall
cltd
inc
arpl
adc
cmp
int3
jae
or
pusha
imulb
in
shrb
in
add
out
in
and
sarl
iret
and
add
lret
add
loope
jns
cmp
mov
in
fucom
cmpsl
lods
inc
daa
or
fwait
imul
idivl
inc
pushf
mov
les
movsb
rorb
imul
arpl
addr16
lock
xlat
lahf
dec
mov
sahf
stos
rcll
dec
and
push
xchg
lods
add
push
fs
cmp
or
adcb
das
sub
xor
lret
push
dec
ds
pop
dec
loop
xchg
mov
mov
filds
pop
bound
mov
lods
in
mov
mov
scas
hlt
imul
and
push
lret
sbb
fmull
std
pop
addr16
fadds
jb
cltd
jl
xchg
jl
sti
sub
mov
and
xor
rcl
arpl
dec
loop
popa
lea
mov
out
sbb
mov
cltd
iret
mov
mov
pop
sub
adc
insl
mov
mov
push
or
imul
push
ficoms
out
stos
bound
cmp
sbb
pusha
pop
cmp
inc
sar
fistl
fldcw
inc
js
push
stos
push
fucom
sbb
mov
scas
js
cli
pop
jmp
inc
or
xlat
imul
sub
outsb
int3
dec
stc
mov
cmpsl
dec
push
cmp
jle
jp
inc
popa
jno
inc
cs
mov
dec
aaa
fdivs
mov
js
icebp
jbe
xchg
xchg
sbbl
addr16
cmp
or
mov
xchg
inc
aad
mov
xor
push
pop
into
es
das
sub
cmpsl
push
push
scas
mov
add
in
addr16
adc
cli
in
xor
fidivs
int
iret
aad
outsb
in
dec
iret
fwait
cld
cmpsl
in
push
fisttps
mov
sub
jl
cld
mov
cmp
mov
jmp
orb
xchg
inc
jp
jecxz
add
xlat
fdivrs
imul
xchg
popa
push
xor
sub
rorl
mov
pop
mov
scas
add
xchg
sub
js
ret
mov
push
imul
in
fs
pop
sub
cmpsl
fdivp
xchg
scas
out
test
push
dec
push
lcall
pop
inc
ficoms
push
fbstp
das
test
push
push
leave
aad
mov
loopne
jb
push
daa
mov
mov
adc
shl
jecxz
enter
loopne
push
pop
push
lods
cmp
push
cmpsb
js
cmp
cwtl
pusha
popl
push
sbb
mov
insl
aas
dec
mov
mov
es
add
jg
adc
jb
sbb
jg
inc
mov
divl
fidivs
pusha
adc
push
jns
loope
in
mov
jl
cmp
mov
leave
pop
lock
shll
dec
ds
jmp
leave
je
fstl
inc
or
mov
mov
fadds
xor
mov
add
add
clc
icebp
pop
mov
jle
pusha
or
add
imul
adc
dec
ret
and
cltd
sub
jecxz
loop
std
mov
mov
or
into
enter
sbb
jno
icebp
xchg
pop
aad
loop
cmpsl
in
in
ljmp
xlat
pusha
fidivs
popl
dec
sahf
mov
in
out
in
rolb
movsb
js
in
lret
mov
cmp
add
xor
dec
imul
dec
xchg
or
mov
enter
push
leave
stos
popa
fldcw
push
fwait
test
xlat
sbb
push
dec
fcmovbe
inc
xor
jne
cmp
rcrl
arpl
and
sarb
mov
or
lahf
mov
dec
cmpsl
mov
jns
movsb
xor
clc
or
adc
inc
out
adc
xor
rol
jecxz
dec
insl
in
adc
scas
sarb
faddp
mov
jnp
daa
and
shrl
test
jnp
std
push
xor
pop
dec
sahf
iret
divb
dec
out
test
jl
xchg
push
adc
mov
addr16
adc
outsb
imul
xor
out
sub
addr16
rolb
call
jb
mov
cmp
lods
mov
filds
mov
xlat
mov
dec
inc
rolb
cmc
negb
pop
mov
addr16
lock
dec
pushf
pushf
cli
fs
fisttps
adc
dec
mov
inc
push
xchg
imul
fldl
sub
ss
mov
and
std
push
push
sbb
ret
cmc
mov
mov
popa
lret
out
lcall
inc
add
inc
xchg
or
addr16
jecxz
mov
or
add
sti
rol
xchg
pusha
dec
fisttps
ss
out
pusha
pop
rcrl
push
xor
or
xor
cli
mov
lods
pop
rcll
gs
orb
jo
lcall
mov
xor
xor
jecxz
ds
xchg
fdivrs
test
imul
mov
dec
mov
mov
cmp
cwtl
inc
imul
es
or
mov
sub
push
lahf
movsb
das
dec
repz
popf
wbinvd
pushf
insb
and
push
mov
std
loope
imul
fld
pusha
push
out
nop
mov
push
insl
xor
inc
or
push
imul
ljmp
iret
test
imul
cmp
and
pusha
push
lret
cwtl
lds
pusha
mov
jno
mov
testl
dec
mov
fwait
pop
pop
scas
and
ret
cmp
jp
inc
int
andl
test
pop
xchg
xor
or
shrl
pop
mov
dec
ljmp
and
aaa
jg
outsb
test
ficomps
js
lods
pop
scas
popf
xlat
or
jb
jmp
mov
jmp
test
lret
mov
push
stc
stc
adc
scas
push
push
into
lods
cmpsb
cltd
mov
mov
mov
jecxz
mov
jnp
stos
or
sbb
mov
sub
outsb
fs
mov
mov
xchg
ds
ds
mov
push
cmc
push
ja
iret
adc
out
pop
cmp
cmp
cltd
lock
in
popf
xchg
push
lea
dec
sub
test
adc
mov
enter
in
popf
inc
xor
fnstsw
mov
dec
dec
push
js
lahf
push
aaa
fildl
mov
xor
rorl
cmp
jbe
rcr
inc
sbb
test
in
cmp
xchg
enter
xor
pop
sub
call
mov
pop
ljmp
sbb
jo
jb
movsb
push
and
aas
das
leave
dec
ss
aam
sub
xchg
and
loop
xor
das
fdivs
fstps
aad
dec
or
call
sbbb
outsl
movsb
or
cmp
xchg
into
lcall
cmpb
add
adc
mov
xlat
popf
cmp
js
xchg
and
jge
sub
fs
mov
cld
adc
adc
mov
dec
in
enter
cmp
lods
xchg
push
bsf
stos
jle
mov
js
ss
jl
je
and
aas
cmp
test
xchg
je
jne
dec
enter
stos
rol
jmp
and
and
dec
mov
cmp
sub
cwtl
cmp
scas
int
push
inc
stc
test
cmp
shll
xchg
xchg
ret
gs
popf
adc
fistpll
lahf
movsb
adc
xchg
addr16
push
mov
je
mov
mov
xchg
xchg
inc
stos
adc
daa
mov
mov
jp
sbb
and
adc
scas
xor
and
sbb
xchg
or
loopne
pop
aas
test
icebp
test
xchg
jb
push
arpl
or
inc
jp
cmp
adc
and
adc
mov
ret
inc
xchg
scas
sub
or
in
pop
dec
mov
popa
mov
fs
push
cmp
ja
fwait
sbb
pop
in
sbb
dec
push
scas
jo
pop
in
mov
movsl
pushf
incl
int
fildl
or
pop
clc
insb
loopne
insb
jmp
out
push
test
lret
stc
ja
subb
js
push
js
cltd
data16
jne
xorl
imul
lds
adc
cs
lret
arpl
rep
sti
inc
gs
fidivl
xchg
inc
ret
mov
movsl
sub
and
pop
sahf
popf
sarb
insl
push
in
mov
sub
es
cmp
sbb
jmp
ficoms
pop
push
add
mov
sub
testl
and
ret
add
and
and
jmp
sub
movsl
sub
sub
mov
mov
jno
into
dec
gs
hlt
mov
dec
ds
ljmp
lret
fstp
iret
cmp
jmp
loopne
popf
in
lods
dec
and
xchg
cmp
faddl
mov
lock
cld
bound
leave
mov
aaa
mov
lea
and
add
push
sub
pop
dec
push
mov
pop
mov
mov
fadds
ss
in
std
lret
dec
orl
sub
sub
inc
leave
fidivs
ret
lds
dec
lret
mov
gs
divb
jmp
lods
push
mov
xor
fcomip
dec
pop
pop
div
dec
sbb
fnstcw
dec
cmc
cld
lods
xchg
addr16
cli
pop
cltd
icebp
je
xchg
cld
ret
xchg
inc
lcall
dec
sbb
mov
loopne
inc
jecxz
and
and
xor
fiaddl
sbb
add
or
orl
jo
outsl
in
ljmp
fs
scas
test
jl
imul
popf
add
jb
call
pop
aaa
pop
pop
pop
or
jbe
push
push
and
jg
mov
ljmp
stc
int
jg
mov
pop
cli
mov
dec
mov
dec
loope
or
rcll
pop
push
push
pop
insl
dec
xor
mov
aas
or
mov
sarl
xchg
gs
jne
add
int3
nop
mov
dec
mov
in
mov
sub
inc
push
lea
xor
sbb
xchg
jnp
inc
add
mov
sub
mov
rorb
sbb
call
inc
mov
pop
jb
outsl
jne
cmp
iret
sub
aad
rcll
cmp
inc
mov
xchg
test
push
outsl
mov
dec
inc
cmp
xchg
sub
pop
ret
xlat
out
outsl
cmp
jg
push
ds
shl
dec
xchg
lahf
adc
inc
sbb
push
mov
cmc
pushf
jmp
mov
sub
sbb
cmc
out
fnsave
inc
fwait
adc
inc
in
mov
fcoml
adc
iret
pop
call
and
clc
or
xchg
leave
push
jbe
or
mov
pop
lods
sub
mov
xor
loope
mov
xor
or
fs
dec
dec
dec
mov
pop
rolb
andb
jae
call
inc
pop
popa
mov
adc
out
lcall
popa
jmp
fs
sub
cmp
or
pop
mov
jmp
shrl
pop
stc
mov
clc
inc
test
adc
and
lds
scas
popf
shl
push
aaa
out
jp
lock
sub
xorl
cmc
aas
fsubl
data16
pop
ud0
mov
stos
insl
cld
subb
add
jl
stos
mov
push
fmuls
lods
dec
mov
loope
stc
dec
sub
jecxz
add
iret
fistpl
adcl
shll
adc
int3
pop
cli
push
lods
adc
loope
jmp
xlat
mov
stc
mov
fstps
or
xor
enter
sahf
fisttps
pop
ret
outsl
insl
push
dec
ret
adc
out
je
push
mov
xor
xor
sti
mov
pop
push
dec
fsubl
push
or
aam
xchg
sub
das
xchg
sahf
pop
mov
mov
push
and
fs
std
cmpsl
cmp
or
jno
mov
and
hlt
sbbb
xchg
lcall
cli
push
lods
test
es
or
pop
aas
movsl
sub
repz
popf
adc
int
ss
mov
pop
mov
and
fwait
ret
push
jge
xor
mov
arpl
jns
push
les
adc
xlat
adc
or
stc
fldt
adc
fdivrp
jge
or
inc
repnz
inc
aaa
or
test
or
cmp
mov
push
or
add
or
movsl
pop
repnz
adc
bound
push
mov
cmc
mov
jmp
adc
cwtl
push
cmc
es
or
inc
dec
add
aam
jp
pop
jb
mov
mov
dec
iret
cmpsb
jno
or
mov
dec
lods
xor
testb
sub
cwtl
push
loope
pusha
lock
and
addr16
sbb
es
push
insl
mul
jmp
stc
cmc
rorl
std
std
out
lret
hlt
xor
jp
or
pop
sbb
sbb
inc
scas
outsb
popa
lods
dec
mov
jge
stos
lods
push
cmp
movsb
add
adc
fcoml
or
enter
data16
cmp
insl
jge
aas
dec
mov
mov
cmpsb
jae
sbb
je
aaa
subb
shlb
stos
mov
jecxz
stos
cmp
iret
pop
enter
sub
pop
das
test
mov
scas
dec
leave
inc
fcomps
push
ja
dec
in
push
loopne
inc
mov
dec
jns
pop
xor
and
pop
cmpsb
sub
adc
cmpsl
xchg
int3
std
pop
loopne
enter
adc
cmc
std
std
jnp
sub
ds
dec
sti
inc
sub
mov
in
mov
push
pop
popa
or
repnz
jp
pop
std
mov
xor
xlat
mov
test
ret
ja
sarl
pop
dec
mov
push
loope
xchg
xor
ret
mov
sbb
mov
and
stc
outsb
and
nop
xlat
arpl
mov
cmp
push
dec
xchg
push
mov
pop
fs
int
shlb
mov
outsl
test
nop
rep
call
cmp
addr16
mov
test
lret
pop
rcr
add
xlat
cmpl
or
es
jb
sar
mov
xor
push
rorb
repnz
ja
inc
mov
pop
ret
inc
pop
icebp
fildl
or
mov
mov
cmp
pop
je
jnp
jecxz
mov
sbb
jb
adc
cmpl
aas
sub
test
sbb
shlb
push
and
in
sbb
daa
lahf
push
cmp
movsb
pop
lahf
push
sbb
imul
pushf
gs
imul
int3
add
popa
hlt
mov
das
out
dec
and
mov
sbb
pushf
adc
mov
ljmp
jle
cmp
lea
mov
push
inc
aad
fstps
pop
subb
rclb
ljmp
call
mov
adc
stc
or
pop
jg
sbb
mov
mov
dec
pop
and
ss
rolb
fwait
dec
push
sbbb
mov
cld
jecxz
jbe
cmp
cmp
jne
push
leave
stos
cmp
scas
jns
das
fistps
mov
bnd
inc
xor
shlb
repz
mov
mov
pop
sbb
dec
test
lods
cltd
mov
mov
pusha
push
out
cmpsb
or
jge
mov
jl
adc
xlat
jnp
or
loope
dec
and
loop
inc
push
and
ljmp
cmp
mov
or
cltd
in
dec
popl
push
jns
loop
addl
cmp
dec
repnz
test
xlat
out
das
or
andb
pop
ficoml
hlt
not
es
sub
dec
in
or
xchg
out
je
lahf
inc
out
sbb
popa
cmp
mov
shll
inc
insl
sti
cmp
mov
jle
inc
adc
xchg
fwait
push
repnz
aam
inc
sarb
xor
ja
inc
xchg
mov
xchg
pop
fcmovne
rorl
jmp
cmpsb
mov
lahf
sahf
xchg
and
push
sti
pop
mov
rcrb
sbb
mov
xchg
push
cmp
sub
repnz
sub
lea
push
test
dec
mov
adc
add
pushf
ss
fxch
in
xchg
inc
mov
sbb
jns
sbb
and
lea
test
xor
mov
lcall
in
mov
add
lods
mov
pop
mov
es
push
das
cld
imul
xchg
and
pop
hlt
je
xor
xchg
pop
mov
js
push
or
mov
push
jae
sbb
adc
call
les
in
dec
push
dec
inc
cmp
xchg
dec
mov
adc
sub
jge
adc
inc
into
jp
div
inc
sub
pop
jo
jge
inc
cmpsb
mov
je
in
insb
mov
mov
cmpsb
adc
fnstsw
jmp
xlat
in
jns
jle
push
scas
lahf
inc
fsin
ret
cwtl
jg
in
cmpsb
xchg
mov
cld
jl
push
mov
pop
popa
jbe
inc
jecxz
subb
shrl
sub
mov
ds
pop
stc
mov
das
ljmp
ret
mov
ss
jns
cld
lock
xchg
ret
pusha
in
push
loope
movsl
ljmp
push
fstpl
push
stos
sub
xor
jnp
mov
nop
sub
fcomps
cltd
mov
inc
into
movsb
xchg
rorb
adc
scas
adc
pop
and
test
inc
mov
jbe
sbb
and
inc
mov
push
lods
mov
decb
lock
fidivrl
pop
mov
xchg
pop
adc
jbe
dec
adc
repnz
or
ljmp
adc
outsl
cmp
loop
int
div
icebp
pop
ret
stos
out
mov
call
cmp
cld
test
leave
or
ja
dec
mov
xchg
cmp
push
jmp
xorb
dec
stc
in
es
test
out
fsubrl
xlat
ret
and
frstor
repz
jbe
mov
lea
out
adc
clc
push
mov
mov
add
inc
lahf
and
cli
flds
das
xchg
pop
test
xchg
in
dec
jns
sub
aas
fisubs
mov
add
test
ja
js
mov
idivl
xchg
sbb
inc
popf
cmpsb
cmp
xor
mov
push
cmpsl
dec
mov
out
dec
sub
ret
addb
pop
adc
pop
push
xor
mov
add
test
inc
sbb
shl
push
adc
push
ret
push
stc
adc
call
sarb
pop
push
fadds
andb
cmp
push
push
and
repnz
loop
jge
popf
mov
and
aad
mov
adc
cmc
fwait
pop
push
arpl
xchg
adc
loope
ja
dec
mov
clc
lock
fstps
arpl
cmp
inc
divb
rclb
xchg
add
lods
fwait
and
je
xor
vmulps
adc
xchg
add
jecxz
or
hlt
push
mov
push
mov
pop
mov
push
xor
add
mov
push
iret
in
repz
add
and
das
xor
sub
sub
cwtl
outsb
jp
shrl
out
jmp
xchg
or
or
and
mov
xor
cli
mov
imul
rolb
sub
push
fwait
gs
ja
sbb
xor
adcb
outsb
pusha
and
inc
adc
imul
push
fcos
cmp
sbb
fmuls
mov
jl
es
jbe
mov
add
cmpsl
and
push
add
sub
mov
leave
call
jbe
in
cs
je
fwait
int3
inc
es
cmp
stc
cmc
gs
mov
adc
mov
filds
jmp
inc
jp
lahf
jns
filds
lret
lods
faddl
cmp
in
not
dec
nop
fst
loop
add
push
outsb
ficoml
or
adc
and
inc
mov
aam
fsubrs
arpl
push
pop
push
dec
int
jp
jno
adc
and
jl
and
dec
fs
js
adcb
or
sub
cltd
imul
mov
sbb
mov
pop
mov
push
xchg
mov
mov
mov
mov
mov
mov
pop
les
ss
fsubrl
or
arpl
xchg
std
clc
cs
cmp
mov
ja
jge
pop
xor
push
mov
mov
cltd
mov
mov
data16
or
rclb
cmp
js
xchg
pop
aad
cs
adcb
ds
xlat
js
call
inc
dec
add
adc
data16
bound
jge
pop
fbld
imul
jecxz
iret
jo
dec
mov
push
push
pop
add
je
dec
int3
adc
sarl
xor
pop
mov
sti
sbb
ss
mov
inc
les
cmc
mov
jg
mov
fsubl
jle
jae
aas
add
dec
sub
dec
bound
imul
repnz
push
pop
ret
es
rorb
fbld
jae
imul
rcrb
dec
pop
movsl
push
add
stos
xor
inc
jbe
test
push
fprem1
stos
cmp
mov
call
adc
imul
popf
push
fcoml
push
push
rol
and
add
mov
popf
pusha
or
xor
xor
jle
jg
mov
popf
test
inc
sbb
mov
sti
xchg
jg
inc
sub
ljmp
dec
out
add
and
mov
dec
dec
movsl
nop
scas
rcll
xor
pushf
aas
es
fsubrl
and
shll
mov
xacquire
mul
xchg
or
push
sti
mov
arpl
push
fucomi
out
mov
jno
scas
mov
push
add
jmp
pusha
push
gs
inc
inc
mov
sbb
loop
mov
out
aad
xor
rclb
or
out
or
icebp
push
out
shlb
cmpsb
push
or
inc
mov
mov
outsb
jle
dec
jns
push
out
or
das
xchg
mov
sbb
xor
sub
adc
movsl
add
push
test
xor
adc
fsub
push
mov
loopne
jns
pop
sti
cmp
jecxz
das
es
lds
pop
xchg
xchg
mov
jno
pop
sub
push
test
roll
and
enter
sbb
incl
loop
mov
stos
xor
inc
dec
aaa
mov
pop
mov
sbb
cltd
mov
and
adc
mov
mov
xchg
mov
push
movsl
dec
out
push
mov
push
sbb
in
ds
pop
push
hlt
iret
inc
loop
push
or
or
test
cmp
std
cli
ds
pushf
into
popa
and
outsl
pusha
push
dec
test
and
js
dec
cmc
fsubr
or
pop
adc
and
push
gs
or
inc
xor
stos
xor
scas
movsb
inc
shrb
pop
mov
and
jle
mov
inc
test
int3
into
in
into
int3
sbb
add
xchg
sub
jmp
in
cmp
fcmovnb
push
inc
push
fsub
push
push
lahf
pop
pushf
mov
jp
mov
aam
sub
mov
sbb
xchg
cmp
adcb
inc
int
push
mov
ret
add
xor
outsl
sbb
lea
int
xor
lcall
mov
xchg
adc
and
loop
push
les
js
shr
add
xchg
mov
test
lods
movsb
cmp
cwtl
dec
mov
cld
in
cmc
lret
adc
das
in
push
and
dec
mov
jmp
xchg
stos
sub
and
xchg
jae
and
and
xor
mov
and
adc
inc
loope
imul
sbb
xchg
aas
enter
push
adcb
popf
es
insl
sbb
lds
clc
adc
stos
mov
and
call
int3
cmpsl
dec
fimuls
int3
popa
fmull
mov
loop
adc
add
data16
pop
mov
and
and
test
test
aas
or
cmp
movsl
lea
jge
push
sti
cltd
mov
movq
mov
sarb
mov
aaa
lods
shll
lcall
rcr
xchg
xor
lcall
scas
or
adc
jbe
mov
xchg
test
mov
pop
push
inc
fs
lock
add
insl
lret
jg
loopne
jmp
sub
xor
imull
in
aam
data16
sbb
std
or
jp
out
inc
xchg
mov
ljmp
dec
sub
pop
rorl
adc
dec
adc
lods
xchg
out
add
pushf
mov
js
loope
mov
or
xchg
xchg
dec
in
loopne
pop
push
stos
insl
loope
dec
xchg
xchg
dec
mov
mov
dec
xor
cltd
sub
sub
pushf
fdiv
or
xchg
pop
sub
call
add
and
pop
mov
mov
sahf
xchg
mov
mov
or
mov
or
les
ljmp
cli
stos
pop
lret
inc
xchg
fldenv
push
jl
out
lcall
dec
insl
pop
lods
fs
data16
scas
int
dec
xchg
mov
inc
clc
jl
lods
or
mov
push
inc
fisubs
jge
subb
cmc
and
sbb
add
fiadds
mov
dec
ss
xchg
mov
jmp
jae
pop
jmp
stos
add
add
decl
dec
mov
jp
cltd
pop
jne
pop
sbb
mov
sti
xchg
in
in
les
dec
popa
dec
sub
arpl
mov
sbb
dec
inc
mov
adc
push
cltd
add
cmpsl
cmpsl
push
mov
icebp
or
std
cmp
pop
sbb
subl
sti
cltd
mov
fucomp
mov
cltd
sbb
aam
aaa
insb
jbe
pop
lds
repz
and
testb
test
insl
mov
dec
xchg
shrb
xor
jl
cmp
test
pop
cmpsl
rcrb
xchg
loope
sahf
je
push
cmp
repz
jb
push
movsl
js
loope
sub
js
insl
or
das
push
jo
subb
jmp
scas
fisttpl
cmp
or
idivl
outsl
lea
aad
cmp
or
shll
outsb
int
and
sub
mov
inc
cli
sub
add
and
cli
test
xchg
cli
sub
fcoms
bound
inc
adc
icebp
imul
xor
fidivrl
jne
lock
nop
stc
idivl
sub
fmull
jmp
cli
out
jne
lods
ret
adc
in
and
lret
sbb
pop
xchg
push
lds
fmulp
call
push
pop
push
lahf
push
adc
xor
and
lcall
lret
or
in
lcall
push
outsl
test
stos
in
xchg
add
lahf
cmpsb
jmp
mov
cmpsl
push
lock
jbe
clc
jae
add
push
push
repnz
enter
lock
test
cmc
bnd
dec
mov
push
jmp
mov
add
lods
fcoms
sbb
repz
inc
mov
dec
stc
outsb
mov
ret
xor
je
je
jbe
sub
repz
aad
lock
mov
leave
mov
mov
jp
sbb
adc
mov
and
jecxz
jns
adc
lcall
xchg
jo
adc
sbb
and
out
in
fdivrs
cmp
cmp
rorl
xchg
repz
sbb
mov
lret
loop
ret
mov
xor
aam
daa
mov
popf
and
jge
xchg
lds
add
out
mov
test
inc
add
bound
sub
mov
out
jp
xor
dec
mov
cmpsl
mov
iret
sbb
sub
adc
aad
jecxz
sub
aas
mov
push
inc
rorb
sarb
int
lods
sub
das
test
into
movsl
movhps
scas
xchg
pxor
push
adc
add
out
fwait
inc
push
stos
sbb
ljmp
fidivrl
jge
jae
xor
scas
out
mov
xchg
movsl
sub
xchg
mov
cmpb
xor
mov
inc
in
movsl
enter
xchg
decb
popa
mov
xchg
and
subb
or
notb
add
lock
rclb
call
leave
inc
pop
nop
cli
lods
sarl
mov
jne
outsl
dec
pop
rcll
ds
shlb
int
sub
fisttpll
mov
or
mov
cld
fimull
outsl
add
push
neg
je
hlt
into
cltd
pop
out
das
ds
incb
mov
add
sub
xchg
push
adc
pop
rcrb
pop
and
repz
xchg
cmp
or
cmc
jbe
dec
jp
sub
push
test
mov
test
test
jbe
aad
inc
add
enter
xchg
push
cmp
mov
ror
int3
jns
mov
movsb
jbe
dec
or
test
sub
cmp
mov
ja
dec
push
out
lcall
cmp
push
fsubs
mov
hlt
cmp
inc
push
jbe
adcl
cmc
pop
jns
iret
and
ret
repz
mov
test
push
dec
mov
pop
daa
imul
jo
mov
jb
js
mov
mov
fs
cmc
cmpsl
sahf
lock
sti
arpl
jp
cld
mov
sbb
xchg
subl
dec
pop
sub
push
mov
dec
cwtl
lret
loopne
sub
ss
aas
lcall
data16
sbbl
dec
inc
inc
cmp
cmp
aas
pop
loope
push
imul
int
repnz
xlat
ss
mov
xor
inc
test
push
add
mov
mov
sbb
jnp
xor
cld
cmp
insl
adc
xchg
mov
or
ds
inc
pusha
insl
mov
inc
hlt
cmp
das
xchg
fdivl
xchg
fs
xchg
fnstcw
xchg
xlat
scas
xchg
sbb
push
inc
mov
daa
clc
outsb
xor
pop
jle
jecxz
dec
adc
pusha
stos
dec
xchg
out
mov
mov
xor
xchg
scas
sub
cld
lock
jnp
aam
sub
sub
decl
inc
jp
sbb
js
xchg
call
xchg
icebp
jmp
mov
jge
xor
mov
push
enter
push
sar
mov
bnd
movsl
in
jbe
icebp
push
sbb
jp
mov
mov
out
or
movsl
adc
cmpsl
es
cmpl
inc
inc
sbb
ja
dec
movsl
inc
repnz
jno
test
mov
stc
out
insl
lahf
jbe
decb
inc
push
lds
adc
mov
fsts
or
int
cmp
cmp
and
mov
leave
nop
pop
arpl
adc
lea
mov
adcl
or
sub
lds
push
sqrtps
jns
icebp
lock
mov
cmpsl
sahf
and
fildl
mov
adc
push
inc
mov
lods
jmp
fs
push
dec
sbbb
in
repz
cwtl
or
out
adc
rclb
out
ljmp
xor
pop
test
mov
xchg
mov
pushf
mov
mov
iret
adc
es
xchg
mov
sti
pop
gs
push
nop
and
pop
xchg
lret
and
xchg
loop
rcll
pop
je
mov
adc
popa
jg
xlat
insl
mov
pop
xchg
inc
xor
loop
in
jb
mov
in
in
leave
adc
sub
jbe
xor
push
outsl
sbb
loope
pop
hlt
or
pop
stos
mov
mov
dec
and
mov
mov
xchg
push
push
mov
inc
stos
orl
mov
jae
sub
dec
rcll
and
and
dec
inc
and
push
and
sbb
adc
pop
sub
lods
add
push
or
mov
push
sbb
sti
xchg
add
add
cmc
sbb
insl
sbbb
jb
mulb
mov
ds
stos
outsl
inc
mov
jl
into
addr16
xchg
mov
fidivrl
sub
test
imul
pop
jo
sbb
andl
js
jb
push
and
mov
push
xor
push
inc
jle
xchg
or
mov
mov
sub
mov
inc
inc
popa
aas
cmp
cmp
nop
dec
cmc
in
lods
stos
add
or
push
sbb
gs
jnp
mov
xchg
rcll
jbe
icebp
mov
pop
pop
or
int3
arpl
xor
cld
jo
push
sub
cmp
loope
dec
jle
mov
fwait
inc
pop
add
jae
icebp
lret
pop
mov
sub
push
ret
das
fsubs
popf
mov
andl
mov
mov
sub
inc
dec
adc
cmp
inc
push
inc
xor
xchg
mov
clc
add
ss
sub
movsb
jnp
gs
nop
sahf
daa
fwait
jp
pop
in
fiaddl
push
mov
sub
icebp
jp
xor
cld
push
jg
pusha
scas
clc
fdivrl
lds
inc
inc
popa
dec
cltd
pop
push
mov
imulb
jne
out
mov
pop
push
pop
add
add
adc
and
adc
mov
dec
paddw
xor
xlat
inc
xor
mov
jg
and
mov
in
lds
loope
or
mov
mov
or
movsl
adc
je
mov
or
lret
jmp
add
push
fnstcw
lret
add
jl
pop
jno
inc
xor
out
icebp
ljmp
repz
adc
xor
mov
jns
ficoml
es
test
cli
addr16
cmc
xlat
push
or
cs
test
cs
sbb
jnp
out
pop
rclb
sbb
xchg
xchg
addr16
movsl
and
shlb
das
fildl
fmull
push
lock
in
sbb
test
and
and
xchg
cmp
xorl
movsb
loop
jno
out
out
xor
mov
ljmp
cmp
testl
push
jae
xor
xor
jno
in
shll
mov
rcr
push
popf
ss
mov
stos
push
repz
js
rcrl
cmp
sbb
icebp
push
mov
je
dec
popa
lret
test
cmc
fdivl
add
xor
xor
hlt
adc
jp
dec
popa
clc
cmp
ret
sbb
mov
stos
inc
enter
jns
xchg
xlat
movsb
push
and
or
sti
push
es
push
mov
dec
in
cmp
pop
mov
mov
adc
dec
lock
shlb
in
insl
or
xchg
xchg
and
mov
and
jg
push
pop
add
cmp
jmp
std
adcl
mov
lret
ds
imul
xchg
jecxz
dec
jno
das
mov
movsb
outsl
dec
mov
loopne
loope
lods
subl
mov
xor
inc
xor
push
cmp
sub
ds
testl
mov
les
mov
pop
out
in
icebp
mov
mov
xchg
or
sahf
arpl
and
sbb
xor
ja
das
add
jae
add
aaa
ret
dec
mov
call
xchg
fdivrl
sub
xor
cmp
imul
jg
xchg
je
es
jns
adc
aas
pusha
cmp
mov
mov
std
shll
jg
push
ds
cmpsl
std
push
adc
daa
fs
or
or
stc
jo
mov
sbb
test
ret
cmp
and
ficoms
jl
shlb
xchg
jo
mov
daa
popa
int3
push
sub
js
fsubrl
in
mov
iret
xchg
lock
dec
dec
mov
cmp
cmpsl
push
in
xchg
xchg
xlat
out
xor
push
repnz
sub
dec
in
nop
mov
push
push
imull
mov
adc
and
cmpsl
push
inc
jmp
xchg
iret
ret
mov
mov
cs
pop
filds
mov
inc
bnd
cmp
hlt
sub
xchg
mov
and
xor
bound
push
stos
leave
add
sub
xchg
imull
jmp
mov
add
xchg
decb
jmp
lcall
stc
or
in
popa
and
int
lods
cltd
xchg
hlt
cwtl
push
hlt
add
jne
clc
jnp
dec
or
lcall
xor
mov
lret
cmp
dec
xor
dec
push
sbb
inc
or
sbb
inc
sahf
xor
mov
cltd
xor
imul
push
popa
mov
dec
jb
rcll
shll
sub
jns
stc
sbb
mov
inc
sti
hlt
push
cmp
and
pop
xchg
imul
sbb
enter
mov
push
cli
les
pop
int3
mov
divl
or
imul
adc
cltd
cmp
lods
inc
cmp
mov
inc
iret
stos
pushf
dec
fldl
jmp
dec
sbb
xchg
dec
fs
imul
fdivrp
outsb
lret
mov
cld
out
or
inc
int3
push
repz
jmp
mov
xlat
clc
out
test
add
mov
in
push
push
push
andb
shll
add
out
jp
bound
imul
or
jg
pop
rcrb
outsl
mov
je
dec
mov
insb
test
popf
int3
add
orb
test
test
roll
dec
add
push
jle
and
dec
int3
jae
icebp
sbb
leave
outsb
sub
lea
fnstcw
jl
sub
sbb
icebp
int3
xor
dec
push
dec
push
dec
pop
push
mov
cmpsb
inc
pop
mov
in
jle
xor
aad
and
jecxz
and
mov
cmpsb
stos
pop
enter
pop
mov
jno
stos
call
lahf
jle
js
nop
and
jno,pn
and
cltd
mov
fwait
loop
cmpsl
cmp
push
inc
nop
mov
subl
mov
std
xor
and
pop
xor
pop
and
adc
int3
adc
iret
cmp
lds
add
inc
loope
out
xchg
rcrl
pusha
int
push
inc
push
jo
pop
cltd
clc
xor
sar
xor
in
jns
mov
xchg
mov
mov
xor
dec
es
sbb
xor
mov
xor
jns
mov
les
jecxz
mov
sbb
sbb
pop
push
adc
xchg
adc
in
loopne
dec
push
dec
cltd
sbb
out
push
push
nop
xchg
test
mov
inc
scas
or
flds
fwait
imul
push
xorl
jb
mov
test
and
xor
dec
insl
sbb
pusha
into
mov
and
inc
or
in
xor
sbb
lss
cltd
or
sub
jnp
mov
mov
test
mov
jae
fs
not
fldt
xchg
in
cli
lods
xchg
test
xlat
push
pop
aaa
nop
fstps
ja
aaa
out
test
pop
out
jno
sahf
scas
scas
and
in
fidivrs
cs
add
sarl
pushf
rcl
dec
lock
in
jp
pop
aas
xor
push
pop
sub
add
in
xor
cmpb
shll
ja
xchg
fmul
mov
es
inc
ja
jmp
jbe
push
dec
insb
mov
xor
adc
mov
dec
insl
std
jecxz
ficomps
xchg
cmc
and
js
andl
xor
jmp
pop
mov
sti
fistps
dec
xchg
aam
rorl
sbb
mov
xorb
sbb
leave
xor
jb
iret
lret
sbb
mov
out
sub
je
xchg
xchg
cmp
rcrb
push
dec
cmpsl
mov
sub
cmp
adc
shll
movsb
xchg
lcall
inc
inc
cmpsl
jnp
pop
xor
fdivl
in
jno
sbb
loopne
xor
movsb
pop
iret
and
aaa
jg
cmp
sub
pop
cltd
std
sub
jl
push
push
pop
scas
sub
popf
outsl
stos
xlat
imul
enter
rcr
insb
jno
nop
dec
push
pop
adc
mov
inc
fiaddl
repz
and
adc
loop
mov
xchg
sti
add
popa
pop
movsl
out
out
out
push
leave
cld
add
lahf
lods
mov
outsb
subl
sbb
or
push
adc
sbb
mov
jg
mov
xchg
lcall
pushf
dec
jecxz
xchg
jp
enter
out
pop
xchg
or
addr16
pusha
jb
shrl
fwait
mov
mov
insl
mov
fcoms
xchg
out
xchg
xorl
repz
lret
out
movb
mov
push
in
aam
or
mov
or
mov
jmp
fstl
mov
dec
fldl
inc
cmp
leave
mov
mov
mov
lfs
add
jecxz
cmp
out
jne
cmp
rorl
scas
or
leave
xor
xchg
sbb
adc
cmpsl
and
loope
or
and
pop
jb
stc
inc
lock
cs
inc
push
push
ret
jnp
add
mov
cmp
sub
push
test
sub
sbb
subb
push
xor
or
push
xchg
xchg
cmp
and
ljmp
push
imul
xchg
lret
imull
and
ffree
mov
dec
mov
xchg
xchg
add
out
aad
cltd
das
adc
mov
mov
aas
or
pop
jmp
lods
cmpsb
mov
xlat
sub
push
rcr
int3
ja
sub
sti
test
mov
jmp
mov
xchg
aaa
stc
sbb
cmpsl
fisubrl
xchg
shrl
insl
xor
imul
ret
loopne
andl
jg
lods
cmp
sub
in
mov
pop
mov
fdivrs
ficoml
out
sbb
es
out
in
mov
insl
mov
stc
orb
ds
movsb
sub
inc
add
dec
int
xchg
inc
mov
movsb
jne
stos
gs
sub
outsb
lret
aad
add
lcall
aaa
fwait
xchg
adc
pop
rcrb
lcall
push
orb
rol
and
mov
mov
dec
or
enter
ja
lret
mov
and
ja
mov
cs
xchg
fisttpll
and
jno
addl
xchg
fdivrl
test
push
nop
sarb
cli
mov
cmpsb
mov
outsb
pushf
sbb
add
js
or
mov
arpl
sbb
outsl
add
fbstp
pop
out
cmpsl
insl
lcall
pop
adc
fwait
lahf
cmp
inc
loop
mov
loop
in
add
inc
inc
cwtl
stc
out
in
and
icebp
add
sbb
je
xor
pop
or
pop
mov
add
mov
push
mov
mulb
nop
fcmovnb
shl
movsb
jae
out
scas
ljmp
pop
fdivs
movsb
inc
pop
movsl
and
mov
repnz
inc
adc
mov
roll
mov
fisttps
mov
jne
ret
jbe
in
je
scas
ret
push
sbb
xor
jecxz
mov
inc
jg
sbb
add
mov
add
popa
inc
and
pop
outsl
jae
fisubrs
lea
xchg
dec
add
orl
xor
add
fwait
mov
aam
into
pushf
and
inc
jnp
popl
dec
or
mov
mov
cmp
ja
mov
dec
dec
popa
add
push
jb
lods
dec
dec
mov
imul
dec
sbb
mov
mov
cmp
mov
pop
push
pusha
jle
mov
jl
sub
mov
out
cmp
push
pop
mov
xchg
push
inc
inc
stc
cmp
rcll
adcb
sbb
ja
xor
stos
or
daa
pop
in
mov
repnz
xlat
push
jle
push
push
enter
in
jg
sub
out
cmpsb
mov
data16
icebp
repz
lods
mov
jae
in
int
fisubs
push
stos
repnz
filds
cmpsb
or
iret
xorb
pop
jbe
cli
lret
mov
aas
sub
mov
inc
cmp
fninit
fsubl
outsl
outsl
sti
lret
lcall
lcall
xor
cs
xorl
out
lds
and
subb
push
out
subb
into
jae
add
fildll
mov
push
mov
movsb
cli
jno
xchg
movsl
xor
outsl
dec
mov
mov
sbb
inc
mov
xor
lock
scas
adc
cmpsl
mov
neg
sarl
iret
xor
repnz
lea
cmp
outsl
ret
out
imul
fstps
add
push
leave
gs
cmpsl
cmp
fwait
cmp
fnstsw
cmp
std
push
and
add
imul
stos
add
fdivs
adc
mov
and
xor
jle
or
push
jae
in
aam
repnz
xchg
mov
mov
push
int
xchg
mov
loopne
decb
movsb
inc
push
push
fisubrl
dec
cld
fimull
js
fcomp
adc
xlat
cmpsl
push
mov
xchg
pusha
mov
xorl
xor
js
popf
cmpl
cmpsl
inc
out
jnp
into
call
lods
xchg
or
mov
mov
ljmp
lahf
add
dec
repz
add
movsb
sbb
ret
into
add
movsl
sbb
mov
sbb
pop
push
ret
fcomip
lret
test
push
xor
cmpsb
inc
popf
aad
cmc
mov
mov
xchg
xlat
xchg
adc
mov
out
jno
fs
lret
icebp
xchg
cs
dec
mov
jp
fsubrl
adc
and
loop
pop
cmp
ret
xor
stc
sahf
fmulp
jno
or
pop
or
stos
push
dec
shrb
xchg
mov
sub
or
dec
inc
xor
sbb
xchg
mov
dec
fidivl
lahf
popf
xorb
cltd
inc
mov
lods
mov
cmp
pop
enter
add
test
nop
mov
adc
sbb
inc
mov
aaa
jnp
rcrl
jno
mov
add
mov
jecxz
mov
test
adc
dec
pop
push
pop
ja
or
mov
repnz
sbb
sbb
adc
loop
lock
xchg
pop
sub
insl
loop
clc
and
xorb
jmp
es
shlb
push
fldenv
mov
cmp
pushf
and
add
push
mov
add
imul
aas
dec
push
inc
add
gs
or
mov
jmp
dec
or
add
stos
add
jae
pop
fdivrl
aas
rcr
bound
add
lds
lods
sbb
icebp
mov
jbe
mov
jo
loopne
xchg
je
mov
out
sub
dec
rcrl
xchg
call
xchg
add
sbb
and
ja
mov
xlat
jo
out
faddl
sbb
das
in
lcall
enter
sbb
and
cli
pop
push
jecxz
out
mov
dec
aaa
mulb
fs
jns
lcall
lds
xchg
test
lock
fistpl
shr
cld
add
jg
push
jno
lcall
add
dec
aaa
push
push
lret
fdivrs
in
jo
dec
cmpsb
leave
ds
mov
push
push
sbb
cmpb
int
andl
test
push
sub
ret
fsubrs
out
enter
mov
popf
pop
sbb
adc
mov
sub
inc
mov
jmp
in
mov
out
je
fnsave
jmp
cltd
shl
pop
cmp
push
das
imull
fstpt
dec
rcrl
jle
add
fcomps
sub
mov
push
or
mov
insb
repnz
out
outsb
out
cmp
stc
mov
test
outsl
inc
mov
scas
movsl
cmc
xchg
push
push
sbb
jge
insl
or
xchg
out
cmp
fisubs
mov
lods
and
pop
sub
push
rcrb
xlat
jo
push
imul
mov
popa
std
dec
inc
xor
rcrb
xchg
iret
push
leave
nop
xchg
xor
sysexit
aam
jl
ja
out
sub
mov
inc
adc
fdivp
xchg
data16
push
mov
mov
push
push
ljmp
pop
psubw
and
call
outsl
push
or
dec
mov
jl
iret
enter
sbb
mov
pop
adc
dec
mov
push
stos
pop
sub
and
dec
outsb
inc
jp
push
xor
dec
push
mov
nop
cmp
jbe
jb
cmp
cmp
sub
mov
mov
pop
sbb
and
pop
call
or
push
sti
lret
lret
into
sbb
lahf
inc
dec
out
es
mov
mov
and
inc
jo
loope
mov
inc
push
int3
and
fmull
mov
jae
arpl
jbe
sub
fdivl
stos
cmp
mov
push
xor
xchg
shrb
std
loope
mov
enter
in
dec
cmp
clc
lret
imul
dec
data16
insl
dec
fistps
nop
bswap
outsb
add
es
outsb
in
dec
mov
mov
ret
add
adc
stos
mov
push
loop
xchg
jnp
loope
jo
lods
out
jle
inc
out
enter
mov
xchg
xchg
push
mov
pop
nop
sbb
mov
dec
fs
jne
pop
cmpsl
fbld
mov
movsl
mov
push
xor
insl
mov
pop
subb
int3
sbb
xchg
or
inc
sbb
das
jmp
repnz
adc
outsb
xor
jle
pop
enter
xchg
popa
gs
movb
jb
jo
arpl
sub
xchg
dec
dec
jbe
and
adc
lods
fs
test
outsb
loopne
ss
xchg
aad
push
mov
inc
outsb
pop
jb
push
mov
adc
jnp
sub
out
inc
pusha
mov
call
cmp
repnz
into
movsl
mov
leave
icebp
jnp
scas
push
fildll
mov
int3
mov
fwait
inc
mov
sub
lods
sub
daa
xor
mov
int
jb
xchg
cli
repnz
dec
or
pushf
imul
mov
movsl
movl
test
or
repz
test
testl
mov
xor
push
pusha
aas
mov
sbb
or
xor
pop
mov
cltd
ret
outsb
inc
adcb
adc
faddl
cmp
int3
sbb
push
lock
imul
outsl
dec
xchg
mov
js
repz
add
sub
out
mov
sub
push
sub
cmc
ror
ret
dec
mov
out
lret
insl
sub
mov
je
nop
leave
mov
test
ret
jns
nop
out
pop
cmpsl
in
sbb
cli
lret
lock
xor
dec
add
add
mov
push
or
sahf
cmp
mov
je
loope
in
sbb
push
jb
cmpsl
push
insl
ss
inc
dec
lock
call
cmp
cli
cmp
popa
cmpsb
aas
lret
daa
xchg
aam
call
xchg
in
mov
mov
push
jb
stos
fs
ret
sbbl
add
clc
inc
fbld
das
outsb
rolb
or
push
jg
add
sub
idivb
int3
mov
lock
dec
cmc
jnp
lods
mov
je
lret
sub
lods
xor
imul
fwait
adc
push
mov
sub
aad
pop
xchg
orl
cld
jno
lock
fimuls
sbb
orl
icebp
xchg
shlb
cli
sub
xor
mov
mov
add
je
xor
jae
rcll
mov
rolb
jno
dec
fistps
jnp
in
into
cmp
icebp
mov
test
aad
jno
pop
or
pop
in
add
dec
popf
or
clts
adc
xchg
repz
dec
roll
dec
mov
scas
or
sub
ja
sub
in
mov
mov
mov
sub
inc
mov
call
mov
daa
or
cmpsb
scas
push
or
xor
shll
not
mov
push
push
sub
cld
jns
inc
jbe
jge
xlat
and
popa
jno
daa
pop
fs
mov
pop
sub
adcb
je
lret
movsl
movsb
xchg
in
int
adc
sub
inc
push
outsb
in
xchg
cmc
lret
cmp
imul
sub
je
dec
xor
insb
push
out
mov
jge
xor
mov
fistpl
mov
push
sbb
xor
imull
ss
mov
rcl
ror
je
iret
ret
jbe
inc
push
jns
adc
mov
xor
fstpl
das
sbbb
mov
adc
out
add
pop
popa
outsl
sub
mov
pushf
sbb
imull
lcall
stos
enter
push
out
xor
test
fsts
jb
in
dec
mov
inc
push
test
fwait
dec
gs
imul
divl
ret
dec
aad
pop
jns
mov
mov
lock
push
fbstp
orl
sbb
cmp
fsubrl
leave
in
mov
dec
ffree
fisubl
lds
xchg
sub
not
out
add
adc
pop
inc
mov
sub
hlt
stos
or
shll
inc
dec
outsl
icebp
mov
arpl
cmc
ja
pop
and
pushf
lcall
inc
sbb
scas
add
jb
ficoms
xor
mov
rclb
xchg
mov
xor
inc
adc
sti
scas
and
pop
xlat
push
les
or
ficomps
pushf
gs
outsb
test
test
iret
jmp
or
movsb
pop
daa
dec
or
sbb
add
cmp
bound
mov
lcall
shlb
push
nop
cld
push
sti
adc
jmp
outsl
mov
out
adc
bound
pop
enter
stos
mov
decl
mov
hlt
pushf
add
lcall
push
nop
movb
sub
dec
test
xor
push
divb
fnstenv
fistps
fstpl
fbld
push
mov
pop
subb
pop
cli
ss
jecxz
dec
or
pop
js
lods
mov
test
or
mov
push
sub
cmpsl
xor
pop
cli
jno
sar
or
mov
loope
aaa
icebp
jle
adc
inc
jb
sub
icebp
ja
cltd
pop
lahf
lock
rcll
movsb
mov
cwtl
out
and
insl
jmp
popa
add
dec
adcl
mov
mov
pop
sbb
dec
call
push
addr16
cmp
out
icebp
int
inc
xchg
testl
gs
pop
movsl
dec
lahf
inc
loope
jnp
into
jno
mov
inc
popa
mov
pop
xchg
out
dec
dec
cmp
int3
lods
aaa
sbb
scas
outsb
or
sub
or
lahf
pop
cmpsb
add
mov
mov
in
outsb
xchg
clc
inc
cmp
das
and
in
leave
rorl
popf
sbb
mov
test
adc
inc
mov
aas
mov
iret
test
lods
int
jmp
lds
jnp
std
xor
lea
or
enter
cltd
or
ret
xchg
adc
jle
pop
cli
dec
inc
lods
push
stos
dec
mov
int3
jg
xchg
fiadds
enter
popf
mov
insl
push
addr16
xor
sub
scas
out
pop
cli
push
inc
mov
xchg
inc
pushf
lahf
movsb
das
and
mov
xlat
fwait
xchg
mov
and
sahf
lock
testl
adc
xchg
popf
or
mov
add
ss
jmp
push
push
sti
out
add
test
gs
xor
dec
cmp
ljmp
mov
push
push
xchg
xchg
imul
mov
inc
sbb
push
or
je
pop
push
or
mov
xor
fwait
pop
jno
cltd
xor
ljmp
out
mov
mov
jle
inc
xorb
leave
lods
loope
iret
xor
mov
mull
mov
int3
jl
inc
test
sub
loop
pop
and
add
sahf
jb
gs
aaa
inc
sahf
sub
sbb
rcl
movsl
jne
sbb
xor
xor
sbb
cmp
pop
ljmp
cld
es
pop
fisubrs
fldl
ret
sbbl
jge
shll
fildl
outsb
fnsave
dec
mov
lahf
je
lods
cltd
stos
jge
test
mov
aad
dec
and
rorb
cmp
sbb
sbb
ljmp
sub
and
mov
popf
mov
shlb
pop
cmp
jae
mov
push
jle
or
icebp
test
call
mov
push
ja
pop
out
adcl
push
je
mov
dec
xor
daa
cld
adc
mov
jno
out
lcall
lods
int
sti
outsb
test
cld
lods
fstpt
pop
call
mov
aad
jmp
ret
and
bnd
cmp
jge
scas
adc
push
fcoms
jmp
lret
rcll
std
loopne
icebp
cwtl
add
bound
or
cli
and
sub
add
lahf
cs
and
sub
xchg
sbb
and
xor
call
pushf
outsb
xchg
je
pop
stc
xor
add
inc
clc
ds
sub
and
mov
call
test
dec
sti
aas
and
mov
clc
int
aad
or
and
inc
inc
dec
call
jmp
sarl
dec
pushf
mov
mov
fsubs
out
sub
add
ret
test
ja
dec
xchg
sbb
jmp
lret
and
pop
sbb
outsb
fiaddl
adc
std
cmp
fwait
xor
in
mov
int3
stos
sbb
add
push
out
jp
pop
arpl
mov
push
cs
mov
or
and
push
pusha
jnp
das
push
in
and
xor
outsb
mov
nop
dec
jne
test
jb
out
push
incb
lret
mov
adc
cli
out
xchg
outsb
add
pusha
push
repnz
push
test
pop
lods
test
pop
ljmp
pop
adc
mov
mov
push
lcall
or
add
je
jmp
stc
pusha
sbb
int3
fcoml
push
xchg
inc
mov
sub
and
ror
mov
lock
mov
jge
pop
ds
pop
and
sbb
inc
fsubrl
test
pushf
push
mov
std
js
hlt
call
lods
add
adc
adc
imul
push
leave
sub
and
xor
sbb
jmp
lds
pushf
aad
sbb
inc
fadd
out
push
in
movsl
pop
in
aas
sbb
jne
push
iret
mov
cmp
push
dec
cmpsb
adc
mov
nop
clc
ficompl
stos
cmpsl
ds
aaa
xor
add
fwait
cmpl
test
push
arpl
incb
push
xor
dec
jnp
in
push
cltd
dec
test
lret
xchg
cmp
inc
pop
fucomp
mov
mov
inc
fwait
in
stos
clc
popa
in
or
add
hlt
cmp
cmpsb
mov
subb
mov
mov
sbb
sub
mov
daa
inc
mov
arpl
mov
dec
jl
mov
sub
push
decl
and
scas
jecxz
jp
pop
lahf
pop
jle
subl
aaa
orl
pop
aam
sti
dec
je
cmp
mov
aaa
fs
pop
push
lock
jne
and
cmpl
push
sbb
sub
sub
imul
add
in
lret
or
sahf
sub
roll
xchg
sbb
in
xor
andb
inc
cmpsl
adc
fldl
sahf
fnstenv
cmpsb
mov
aas
push
mov
mov
and
shr
shlb
hlt
andl
push
cmpsb
das
movsl
fdivl
pop
push
fisubrl
mov
imul
pop
ds
jp
movsb
inc
push
shll
or
fbstp
xor
cwtl
movsb
in
cmpsb
les
enter
mov
jmp
addr16
dec
jo
mov
aam
loop
popa
test
adc
aaa
mov
out
out
xor
out
pop
add
scas
out
stc
xchg
mov
test
sub
jg
jmp
pop
lret
or
aad
push
movsb
inc
out
sbb
pop
mov
scas
pop
mov
jne
imul
andl
mov
xor
lret
leave
std
enter
shlb
iret
fdivrl
sbb
ficompl
call
add
mov
push
or
mov
xchg
jecxz
cmp
iret
call
roll
sub
jmp
lds
mov
popl
or
pusha
mov
rolb
pop
jne
inc
sbb
aad
mov
xchg
or
shll
dec
cmpsb
pop
inc
adc
dec
fs
inc
push
sbb
pop
dec
sbb
repz
fsubr
dec
jnp
pop
add
push
sub
dec
aaa
out
jmp
lcall
fwait
sbb
add
xor
xchg
cmpl
and
jg
ja
and
xchg
bound
sub
into
mov
je
lock
cmpsl
sbb
out
pop
mov
out
sub
jbe
call
ret
adc
mov
test
fsubrs
jae
adcl
push
daa
ss
sub
sub
stc
xor
rcrb
and
into
lods
cmpsb
loopne
push
cwtl
inc
xor
fisttpl
loopne
insb
pop
scas
data16
xor
call
dec
or
mov
mov
and
je
scas
shll
jge
or
stc
mov
lea
idiv
lods
sub
inc
sub
shlb
or
adc
pop
sub
or
xchg
push
lds
and
ds
out
xchg
shrl
subl
sub
inc
xchg
cmpsb
lods
add
inc
in
jno
jl
roll
das
push
jg
in
jno
out
insl
xchg
pushf
mov
or
loope
fldl
and
cmpl
push
pop
repz
bound
and
mov
cli
mov
pop
mov
mov
xchg
jns
pop
add
pop
cmp
and
and
loop
repz
jp
out
inc
scas
pop
pop
setns
fistl
popf
mov
les
imul
shr
jl
mov
sbbl
inc
fimuls
fsubl
or
enter
push
in
lret
push
fildll
insb
mov
mov
mov
gs
ds
inc
mov
cs
insl
add
rclb
ljmp
add
pop
mov
dec
clc
xchg
hlt
sbb
cmp
shl
fcomp
test
aam
push
int
or
cmp
movsb
cwtl
imul
sbb
pop
test
dec
mov
jmp
int
lods
popf
outsl
fs
jbe
mulb
inc
movsb
aad
mov
push
mov
ljmp
xchg
pop
cs
shrb
bound
test
push
hlt
push
mov
sub
iret
pop
pop
push
mov
sti
mov
ss
popf
cmpsw
add
out
outsl
clc
sub
lds
movsb
ljmp
out
loope
sub
adc
sbb
add
out
iret
loop
fwait
outsb
xchg
pop
jae
push
cmp
sbb
adc
push
inc
push
cld
push
fcompl
shll
and
imul
pop
sahf
jae
mov
pop
mov
mov
test
jg
add
aaa
fdivr
xor
add
cli
test
dec
cmp
pop
adc
cmp
xorb
xor
xchg
rolb
jo
shl
and
cmpsl
mov
jae
aad
faddl
mov
test
adc
mov
and
insl
adc
fdivl
dec
aad
and
test
and
dec
loopne
mov
movsl
ja
outsl
popa
inc
imul
fimuls
ret
push
stos
jle
mov
mov
push
cwtl
test
sbb
arpl
cmp
pop
push
scas
mov
adc
fmul
out
int
inc
xchg
cmpsb
inc
cltd
les
or
outsb
dec
test
and
bound
fidivrs
pop
xor
test
pop
mov
add
call
xchg
xchg
jecxz,pn
dec
cs
into
mov
int3
sub
adc
popf
inc
mov
jbe
andb
fisttpll
mov
jnp
bound
xchg
pop
jl
addr16
gs
je
dec
push
fucompp
repz
lahf
out
mov
adc
pop
in
sar
dec
mov
cmp
mov
adc
xsha256
cmpsb
push
cmpsl
adc
aam
sbb
lret
adc
mov
lods
push
sbb
jae
push
mov
push
dec
pop
ss
imul
ss
test
sub
pop
std
int3
jbe
nop
or
loope
or
jl
sub
lock
into
es
mov
pop
loopne
xor
or
dec
mov
cmp
fs
mov
scas
mov
std
ret
pop
addr16
aas
mov
ss
pop
fistl
call
fst
out
int
xchg
js
jp
mov
xchg
lea
movsb
mov
cmp
imul
mov
cs
arpl
iret
jne
fisubl
add
add
sarl
je
insb
xor
mov
and
jbe
into
adc
mov
xchg
test
adc
outsb
or
pop
mov
addr16
shll
xchg
loop
add
jmp
adc
shlb
push
adc
dec
xor
mov
mov
or
fistpl
dec
jno
fldcw
mov
cmpl
xchg
add
inc
sub
fwait
fs
orl
xchg
push
pushl
xchg
int
rcr
xor
inc
adcl
mov
cli
pop
and
subb
push
or
sarb
jge
xor
xor
jle
or
push
dec
ret
jbe
or
ret
out
inc
gs
ret
adc
int
push
xor
dec
les
push
cs
pop
repz
push
pop
dec
add
flds
sarb
sub
bound
xchg
push
nop
cmp
cmpsb
bound
stos
ret
xchg
dec
fsqrt
dec
repz
jmp
sbb
bound
mov
fwait
push
popf
inc
aad
test
mov
insl
inc
sub
xchg
fsubrs
outsb
adc
stos
xchg
inc
push
or
mov
in
cmp
movsb
push
lret
jle
mov
lods
jmp
cmpsl
shll
int
xor
push
add
sub
aas
inc
xor
aad
andl
ret
outsb
call
and
cli
shl
and
xchg
sub
add
xchg
or
out
jmp
insb
inc
ljmp
mov
orb
popa
scas
sbb
andl
xchg
sbb
aam
jnp
sbb
mov
xchg
mov
dec
jo
loope
mov
cmpsl
fimuls
shlb
mov
incb
pop
fisubrl
ficompl
sub
jno
pop
xchg
mov
or
shrl
mov
es
movzbl
jg
mov
aad
lods
scas
or
mov
sbb
mov
and
push
sbb
cmc
adc
jne
je
lcall
in
andl
rolb
movl
push
cli
mov
mov
pop
into
fistl
xor
and
movsb
js
aas
or
cmpl
mov
dec
mov
mov
dec
ret
iret
in
jl
push
fmuls
rclb
ss
fnstcw
std
repnz
int
pop
sub
scas
lret
jmp
push
arpl
push
sub
xor
push
cs
dec
xchg
add
pusha
and
mov
lock
xchg
jge
je
arpl
loopne
mov
popf
in
sub
gs
pop
cltd
or
out
int3
fsub
mov
xlat
pop
movsb
sbb
pop
jmp
iret
adc
ret
push
popf
mov
sub
out
dec
ror
xor
xchg
jle
ret
sub
mov
sbb
xor
fwait
xor
inc
jno
aad
clc
loop
jae
jne
mov
cmpsb
and
jae
sarb
dec
mov
sar
out
sbb
inc
fsub
push
subl
data16
arpl
mov
rorl
and
add
enter
adc
jo
call
add
mov
dec
xor
cmp
not
lcall
adc
or
fcoms
cmp
test
xlat
mov
outsl
enter
cmp
fwait
xchg
test
push
mov
mov
movsl
cli
or
inc
add
inc
xchg
mov
rcll
push
xor
sub
push
pushf
xchg
sbb
pop
mov
int3
hlt
add
xor
mov
fdivp
fimuls
ror
lret
mov
jne
xor
mov
add
adcl
fcompl
fdivl
lods
in
leave
push
stc
inc
mov
push
mov
imul
sti
adc
mov
hlt
inc
inc
dec
in
dec
adc
dec
lods
bound
sbb
leave
sbb
mov
popa
jecxz
xor
push
fidivs
sbb
lahf
rorb
pop
int
mov
cmp
pusha
sub
jg
push
fnsave
push
pop
test
in
ret
es
push
mov
dec
into
fistpl
mov
in
sub
scas
add
fdivs
and
in
cmp
fcompl
das
jg
int
and
mov
in
pinsrw
xor
das
push
psubb
mov
loope
cmp
mov
pop
pop
xchg
lock
loopne
jle
mov
icebp
xor
outsb
xchg
dec
ja,pn
test
or
adc
mov
or
or
push
sbb
outsb
add
and
ret
lret
or
in
push
inc
and
jle
das
jae
lahf
mov
mov
or
jg
sub
dec
sub
inc
aad
and
xor
call
clc
mov
push
dec
mov
mov
add
cwtl
jmp
push
xchg
jle
test
cltd
dec
lods
bound
movsb
xor
lahf
fcompl
mov
mov
add
inc
mov
sub
cld
mov
mov
imul
sub
inc
mov
lcall
adc
sti
ficoml
lret
shlb
mov
dec
dec
sarb
repz
dec
enter
test
mov
mov
adc
shrb
push
orb
mov
dec
adc
jno
shrb
sub
push
bound
dec
movsl
test
test
stos
cmp
adc
stos
mov
ljmp
out
push
ficoms
push
je
inc
sti
pop
fnsave
insl
fldl
and
and
add
cwtl
lods
dec
add
pop
negb
cmp
jae
inc
dec
repz
push
pop
sbb
adc
and
adc
sti
sub
ss
xchg
call
dec
scas
sbbb
add
loopne
and
inc
jnp
and
xchg
xchg
pushf
pop
inc
mov
pop
adc
mov
rorl
cs
add
ret
fstpt
popf
mov
inc
inc
int
push
adc
iret
add
mov
add
lahf
pop
cmp
cmp
ss
dec
push
mull
mov
or
out
out
nop
cmc
testb
loopne
sahf
and
adcl
cmp
sarb
jmp
loopne
ret
inc
push
add
lods
xchg
sub
xchg
aad
sub
add
or
or
pop
into
mov
jo
jecxz
dec
jns
std
stc
lret
cltd
popa
fisttpl
dec
loopne
test
mov
sub
jne
mov
out
jne
xchg
pop
pop
out
adc
bound
xchg
xchg
jle
add
xor
xchg
icebp
scas
outsb
movsl
cmp
dec
repnz
adc
and
test
and
lret
scas
stos
xchg
xchg
xchg
out
dec
ds
ja
test
or
push
data16
xchg
sbb
nop
int3
or
jbe
in
imul
test
js
fsubs
pop
and
mov
cmpb
movsl
cmpsl
test
iret
cmp
inc
lock
sub
or
jb
xor
jle
cs
xchg
and
lahf
imul
xor
out
scas
repnz
xchg
jle
data16
imul
jecxz
push
and
addb
cld
cli
cltd
push
inc
lds
pop
aaa
test
cltd
lahf
fisubrs
push
xchg
push
call
into
xchg
out
cmp
mov
pop
push
sub
dec
pop
mov
inc
add
push
or
pop
jp
sub
test
arpl
jge
inc
and
cltd
lret
lea
xor
stos
sub
ds
mov
push
and
ljmp
dec
adc
mov
lret
clc
stc
inc
stos
xchg
in
dec
fs
leave
add
xchg
push
and
pop
jo
fstp
pop
sahf
pop
or
lea
pop
enter
pop
ljmp
mov
jns
pop
push
xchg
and
push
out
cmp
xchg
xor
jns
xchg
lods
aad
mov
f2xm1
dec
insl
stos
add
pop
pop
bound
fcompl
das
bound
pop
jecxz
adc
add
addr16
pushf
inc
das
loop
jecxz
mov
fldcw
add
sub
inc
and
mov
cmp
stc
xlat
push
arpl
stos
sub
push
cmp
ret
outsb
jp
bound
xchg
or
jecxz
cmpsl
icebp
mov
rcr
xchg
cltd
jecxz
jecxz
dec
cmp
mov
repz
sub
rol
cli
cwtl
clc
cmp
sub
mov
outsl
test
mov
or
mov
cwtl
mov
stos
mov
enter
push
cmpsl
pop
adc
dec
scas
sub
xchg
sbb
pop
xor
dec
into
ret
loopne
outsb
cwtl
outsb
mov
or
xor
xchg
mov
mov
xchg
push
fiadds
sub
sub
jp
or
inc
negb
mov
es
cs
sbb
repz
push
jb
js
lret
xchg
xchg
pop
ja
push
adc
insl
or
in
and
les
jecxz,pt
cmp
xor
xchg
mov
dec
lods
jno
negb
rorb
lods
xchg
add
mov
jbe
lcall
and
insb
test
pop
iret
inc
and
fcoml
xlat
in
ret
nop
add
lahf
or
xlat
nop
scas
cld
cltd
adc
or
aas
push
in
mov
incb
jb
inc
jne
add
in
and
pop
sub
mov
xor
mov
lods
aaa
and
mov
mov
sahf
adc
push
idiv
es
js
insl
loop
jb
sbb
test
pop
lret
test
dec
repz
orl
add
cli
ljmp
ja
mov
push
call
and
pop
mov
mov
in
push
imul
out
inc
lcall
sbb
lcall
jne
daa
inc
bound
hlt
jns
fdivrl
es
xor
jle
lcall
or
or
pop
mov
sarb
testl
xchg
addr16
scas
aas
push
pop
inc
adc
nop
mov
cmp
mov
push
lret
sub
or
cli
in
stos
xor
addr16
sahf
movb
repz
mov
insb
repnz
push
rorb
xchg
pop
pop
dec
lret
ret
hlt
add
push
push
mov
mov
inc
jne
jb
inc
jbe
popa
daa
adc
lahf
push
notb
xor
fsubrs
pop
or
and
mov
xor
subl
adc
pop
lret
sbb
jae
sbb
out
push
xchg
pop
fdivrs
mov
push
bound
xchg
sub
jnp
mov
pop
mov
pusha
pop
xchg
cmc
jns
mov
mov
inc
loop
pusha
inc
mov
sbb
ffreep
into
xchg
dec
pusha
les
xchg
ret
mov
stos
js
push
repz
lods
cmpsl
pop
push
sbb
xchg
aad
leave
jns
addl
lods
pop
inc
mov
jl
push
scas
jcxz
sub
mov
inc
inc
mov
adc
arpl
push
sub
xchg
dec
sbb
push
shr
and
aam
ret
shll
inc
jge
cmp
pop
mov
stos
jbe
inc
test
mulb
sbb
loop
mov
rclb
pop
inc
mov
ja
add
popf
cmc
or
or
fstpl
pop
or
pusha
mov
pushl
pop
sbb
arpl
stos
stc
test
loope
imul
mov
push
sub
js
je
iret
mov
lea
push
mov
cmc
inc
sahf
sub
shll
int
dec
jne
fwait
cltd
fdivrl
stos
cmp
sub
test
dec
js
scas
test
add
dec
jge
lods
mov
out
rcr
pop
adc
insb
or
repz
movsl
sub
xor
push
flds
leave
dec
push
mov
mov
aas
xchg
and
mov
xchg
xchg
sti
les
int
cmovns
jmp
xor
test
dec
ss
push
imull
shrl
fldcw
loop
js
xor
pop
cmp
das
inc
mov
inc
xchg
lss
loopne
sarb
shlb
add
add
rcr
sti
je
lcall
stc
iret
or
xorb
fidivs
cmp
data16
pop
cwtl
lret
pop
adc
mov
insb
fmull
repnz
add
push
insl
fwait
adc
jp
sti
test
inc
dec
or
negl
dec
loopne
adc
mov
add
adc
mov
bnd
leave
test
push
push
jecxz
xor
js
pop
push
loopne
xor
test
ret
adc
cltd
or
sub
cs
ljmp
mov
mov
cmpsl
or
add
dec
xchg
mov
jbe,pn
inc
fsubrl
mov
push
adc
add
and
fcmovnb
fwait
arpl
and
enter
xchg
cmp
xchg
test
lea
in
out
mov
adc
popa
repnz
mov
sbb
push
arpl
mov
lds
testl
icebp
and
es
icebp
sub
nop
sbb
ja
aas
fcmovbe
mov
in
leave
repz
dec
mov
out
xchg
ds
insl
push
jbe
adc
fwait
inc
ret
jmp
adc
inc
into
xor
out
dec
and
std
scas
test
fcmovnu
mov
sbb
sbb
mov
mov
int3
scas
or
or
mov
sbb
xchg
xchg
and
stc
stos
clc
loop
cmp
in
fwait
mov
xor
dec
cmp
out
mov
and
fisubrs
mov
sub
stos
aas
ficomps
lret
xchg
dec
xorl
xchg
cmp
adc
arpl
mov
outsb
shrb
mov
jae
sub
insb
fs
outsl
pop
xchg
xchg
out
push
test
cld
sbb
loope
test
movl
stc
cltd
mov
clc
jg
cmp
cmp
dec
pushf
leave
jno
sub
inc
jecxz
xchg
icebp
or
or
test
mov
pop
lods
pop
dec
ficoms
adc
imulb
loopne
shl
cld
dec
jg
sbb
adc
mov
mov
push
repnz
ret
pop
popa
testl
xchg
lods
inc
lret
jl
inc
hlt
pop
arpl
or
pop
pop
inc
int
pop
pop
fmul
fstps
lods
int3
enter
mov
cwtl
sti
stos
dec
add
fsubrl
pop
or
loop
test
dec
mov
pop
mov
cmpsl
cld
std
or
adc
shr
shlb
cmpsb
icebp
pop
cmp
sub
fcoms
mov
inc
sbb
sbb
cwtl
lods
fsubr
jmp
clc
or
mov
mov
hlt
add
ret
lea
xor
fst
mov
inc
xlat
je
sub
push
jp
mov
in
ret
sbb
pusha
arpl
orl
enter
sbb
jl
invd
sarl
and
or
mov
cwtl
add
adc
adc
dec
cwtl
jo
xlat
outsl
pop
pop
frstor
sbb
mov
bound
cmp
jmp
push
jne
sti
or
mov
xchg
ljmp
dec
mov
roll
mov
cmp
push
xorb
xlat
cld
hlt
rcr
call
jnp
jb
aam
insl
sub
dec
jbe
insb
or
shrb
call
push
jp
ja
gs
pop
mov
or
ljmp
dec
ficoms
xchg
and
lock
xor
ret
push
sub
jo
push
mov
mov
jl
sbb
cli
in
add
into
xor
mov
mov
clc
rcll
jo
mov
or
add
in
mov
push
pusha
mov
sub
fwait
in
das
push
xchg
in
or
xor
xchg
in
jnp
arpl
fisubl
adc
out
repz
cmpb
jmp
mov
dec
sarl
mov
cmc
pop
add
jg
mov
pusha
ds
test
and
sub
in
gs
sti
lods
push
das
aad
jp
xchg
inc
and
popf
push
lods
shrl
movsl
lcall
fcomps
cmp
incl
xor
test
xor
cmp
or
and
loope
mov
dec
jmp
pop
repnz
mov
mov
xchg
mov
test
out
call
jno
adc
in
out
lods
inc
mov
xorl
in
adc
adc
sbb
xor
and
or
scas
sub
mov
xor
add
xlat
insb
ret
xchg
jg
inc
lcall
cmpsb
xchg
cli
cs
clc
ljmp
mov
fimuls
xchg
in
or
add
flds
push
add
das
mov
lcall
adc
movsl
inc
test
dec
pop
ret
jae
orb
mov
push
in
xor
cld
cmpsl
lock
ret
mov
popa
mov
mov
xchg
adc
xchg
add
cmp
ss
stos
mov
cmpb
pop
sti
aaa
stos
pop
add
mov
hlt
je
lock
imul
add
mov
data16
int3
cwtl
aad
fwait
fs
mov
mov
or
pusha
subl
sbb
push
inc
les
push
xchg
cmp
btr
push
out
inc
notl
cmpsb
push
pop
leave
into
dec
mov
leave
add
jnp
jbe
pop
xchg
aad
sbb
mov
xor
cli
pop
and
in
xor
ss
lods
pop
in
mov
lret
xchg
jg
push
arpl
sbb
sbb
hlt
mov
xchg
jae
andb
inc
movsb
xchg
into
xchg
rol
in
stos
lds
lods
and
inc
movsl
adc
sub
push
mov
imull
cltd
lock
pop
sub
inc
cwtl
out
int3
mov
mov
mov
mov
xor
pop
pop
imul
mov
dec
fiaddl
push
inc
iret
fildll
notb
je
mov
sub
mov
xor
xchg
call
insb
xor
push
repnz
fldenv
push
jmp
fwait
in
int3
mov
mov
mov
pop
xchg
inc
cmp
addr16
mov
add
cmp
mov
mov
or
push
ja
outsl
jns
outsl
push
xlat
arpl
icebp
lods
sbb
mov
imul
daa
icebp
xor
mov
lret
neg
mov
and
push
add
cmpl
addr16
mov
push
sub
sub
sti
sub
jne
add
sbb
negl
mov
or
pop
or
jo
jle
jno
and
out
test
add
imul
inc
cmp
push
cmpsl
hlt
jmp
pop
in
push
and
pop
mov
movsb
pop
add
jmp
jbe
add
inc
popf
mov
fbld
jp
test
mov
sub
jge
pop
pop
push
sbb
bound
xchg
ss
lret
sbb
pop
addl
int3
xchg
pop
or
jecxz
aas
inc
push
sub
cmp
lods
dec
mov
cli
xor
inc
and
xor
push
sbb
pop
push
stos
enter
sub
inc
fucomp
mov
stos
sub
aam
fwait
sbb
add
jmp
mov
xor
arpl
and
ljmp
jbe
js
lret
mov
in
insl
mov
in
jg
sahf
mov
arpl
adc
push
cwtl
in
popf
jl
sbb
pusha
push
loopne
xor
icebp
mov
xchg
mov
sbb
insl
leave
sarb
push
movl
jbe
xchg
mov
orb
add
pop
in
or
xlat
dec
lret
sub
mov
scas
xchg
inc
xchg
cmpsl
dec
in
inc
inc
ds
pop
loop
xchg
dec
mov
pop
stos
scas
push
lods
jp
test
push
sub
hlt
mov
xchg
cli
repz
call
pop
inc
stc
jp
lods
xor
jl
inc
mov
lea
inc
cltd
fcmovb
sbb
inc
xchg
inc
fcmovne
mov
pop
push
cmpsl
mov
dec
xlat
ret
in
add
stos
add
fwait
out
into
dec
mov
iret
test
sbb
arpl
aaa
xchg
movsl
repz
in
inc
dec
mov
popl
out
and
shlb
or
push
popf
xchg
inc
xchg
adc
mov
jo
jb
cmp
loope
out
stc
lret
out
int3
jg
dec
stc
mov
roll
pop
mov
subb
pop
push
inc
pop
daa
lret
and
jmp
or
jmp
mov
xchg
mov
mov
lret
sub
lods
ja
repnz
adcl
sub
lahf
xor
cltd
mov
movsl
jae
rorl
jecxz
hlt
push
test
xchg
xchg
sub
insb
mov
inc
aad
dec
ret
aam
dec
cmp
xchg
pushf
outsb
and
loop
inc
flds
mov
std
pop
jecxz
shll
sbb
dec
push
test
pop
pusha
and
or
pop
in
inc
xor
fildl
jge
push
fst
inc
ljmp
jp
icebp
inc
sti
mov
mov
iret
mov
stc
jae
icebp
jecxz
loopne
lods
mov
jmp
sub
movb
mov
lahf
repnz
insb
mov
adc
pop
pop
xlat
sbb
leave
jecxz
aad
add
ret
out
sarl
repnz
jnp
ljmp
sbb
mov
ja
or
mov
cmp
and
xlat
dec
icebp
sar
and
dec
mov
fcoms
or
cli
jmp
push
and
pop
lcall
pop
cmpsb
idivl
jge
jae
mov
cmp
and
aam
mov
imul
push
pop
jnp
or
or
daa
sbb
sbb
jg
enter
sbb
sbb
rcll
cli
decb
jb
cmp
mov
aad
push
or
inc
or
dec
jecxz
fadds
push
movsb
cmp
inc
fidivrl
push
lods
scas
ss
jo
mov
ret
or
in
stos
scas
push
hlt
mov
fcoml
fldt
mov
and
into
jl
push
ljmp
iret
adc
incl
mov
push
xchg
xchg
push
mov
aaa
pop
loope
mov
cmp
sbb
add
js
jb
aaa
dec
loope
test
cmpsl
das
mov
or
or
push
jp
push
pop
pop
dec
adc
or
movb
mov
rorl
fstp
jge
and
aas
imul
xor
jae
mov
jb
and
test
dec
xorl
cmpsl
fs
add
call
xor
addr16
lock
pop
mov
std
mov
cli
loope
jg
push
mov
cmp
loop
in
outsl
out
fsubrs
adc
ds
adc
testb
fisubrs
dec
hlt
pop
scas
xchg
adc
fistl
adc
xchg
add
sbb
aas
shrl
int3
int
mov
mov
mov
xor
sub
sub
mov
movsl
adcl
push
and
mov
xor
dec
mov
jge
mov
fldt
shll
rclb
addr16
in
pushf
adc
scas
cmc
loopne
push
pop
ds
test
cwtl
pop
movsl
sbb
cltd
bound
lock
jno
adc
std
out
out
mov
mov
cltd
mov
fwait
xchg
stos
mov
fists
push
cwtl
in
addr16
mov
mov
das
lds
xorl
push
test
jo
lods
idivl
inc
into
jnp
aam
pop
stos
dec
test
xor
xchg
adc
push
push
decl
cltd
and
mov
xchg
test
push
inc
sub
lret
nop
xchg
sbb
xchg
mov
adc
js
es
mov
int3
jmp
sbb
add
jbe,pn
inc
ret
ljmp
shl
pop
inc
and
std
movsb
loope
je
lcall
loop
xchg
or
in
push
jg
sub
pop
mov
mov
mov
mov
into
outsb
pop
insb
ljmp
pushf
insl
mov
je
pop
or
push
xor
lret
out
out
out
jnp
or
out
fists
adcl
pop
cmp
in
push
mov
aam
xor
mov
add
xor
cmp
rcr
pop
jp
dec
dec
stos
mov
mov
push
mov
cmp
pop
adc
aad
jb
xchg
pop
in
pop
and
mov
mov
mov
imul
mov
jle
mov
push
iret
lcall
cwtl
pop
orl
xchg
loopne
cmp
pop
mov
jne
adc
rolb
test
inc
jle
andb
jns
ja
sub
cmp
xchg
xor
lcall
inc
or
mov
dec
cs
xlat
scas
and
iret
filds
dec
xchg
testb
dec
jecxz
in
mov
push
and
sbb
sbb
test
sti
imul
test
xchg
xchg
dec
mov
cmp
clc
push
or
jae
mov
sub
xchg
std
das
sbb
lods
xchg
sbb
in
push
cmp
xchg
lock
in
inc
cli
out
lods
out
mov
aas
in
cmp
jae
mov
daa
cmp
negl
dec
and
inc
adc
inc
xchg
add
push
out
mov
shr
test
fcompl
repz
aas
adc
mov
pop
jbe
arpl
jg
scas
lahf
subl
rclb
xchg
aas
lods
xchg
in
sbb
aas
popf
mov
ljmp
lret
sbb
fidivl
xchg
iret
pop
sbb
pop
push
lcall
je
xchg
lcall
jno
pop
inc
inc
pop
jge
mov
aam
mov
in
and
sub
ret
mov
shl
outsb
adc
sbb
dec
ds
mov
pop
or
jp
lret
or
inc
rolb
dec
inc
push
iret
cmc
xchg
or
xchg
outsl
inc
mov
or
pop
xor
iret
lret
xchg
jbe
adc
xchg
ficomps
cmp
inc
adc
jne
clc
movb
pop
movsb
pop
fiadds
mov
push
xor
daa
or
dec
or
lahf
sbb
cmpsl
and
push
pusha
dec
cmpsb
pushf
xor
jge
and
jmp
or
push
sub
sub
pop
insb
add
cmc
outsb
xchg
cmp
ficoml
jo
ljmp
mov
out
mov
hlt
mov
mov
xor
shr
lea
push
mov
mov
xchg
das
pusha
shlb
popf
popa
cvttps2pi
call
int
inc
mov
ficompl
jae
xchg
shll
xor
icebp
lods
and
pop
dec
ljmp
leave
addr16
dec
push
mov
dec
mov
mov
out
push
dec
fsubp
xor
cmc
mov
jnp
popf
mov
cltd
jae
mov
pusha
or
sub
jp
pop
loopne
jns
adc
mov
imul
add
push
mov
xchg
cltd
mov
aaa
loope
nop
push
test
lods
xor
dec
ljmp
or
mov
jl
pusha
adc
xor
pop
jb
push
stos
inc
aam
bound
push
xor
fwait
in
and
jl
daa
out
cmc
cmp
sub
cwtl
dec
loop
mov
push
cmp
mov
es
jge
pop
stc
push
adc
xor
fsubrs
aam
out
pop
xor
ss
enter
aam
jge
loopne
adcl
add
adc
loope
pop
xor
addr16
fcmovnu
or
xchg
mov
mov
sub
movsb
ret
shll
fcomps
fimuls
and
inc
fwait
xor
test
mov
mov
cmp
pop
jl
sahf
fstpt
js
pop
movsl
insb
push
cmpsb
mov
jb
aam
add
repz
in
mov
enter
lods
lods
xor
push
movsb
pushl
clc
lret
adc
inc
stc
ret
jns
push
loopne
jb
mov
rcll
aaa
xchg
xor
dec
notl
test
add
test
xorl
lea
xor
push
shll
mov
ds
js
lock
ljmpw
mov
dec
in
aaa
arpl
in
fmul
scas
cmovl
divl
popf
les
or
test
xlat
jmp
ljmp
push
sbb
dec
dec
adc
push
dec
hlt
test
f2xm1
movsb
and
leave
inc
dec
push
inc
add
push
inc
mov
or
movsb
cltd
bound
imul
scas
mov
incl
jle
pop
aas
mov
daa
cli
dec
mov
pop
mov
aas
add
xor
fucom
lods
leave
sahf
pop
movsl
jbe
jp
mov
aam
mov
jnp
dec
pusha
icebp
dec
imul
push
stos
sub
cltd
iret
xchg
cmp
jae
mov
cmp
xchg
in
push
mov
cli
ret
and
sub
cmp
test
iret
ss
lea
aad
dec
mov
inc
popa
pop
jne
dec
retw
movsb
push
mov
and
add
mov
fldenv
mov
lea
jbe
popa
icebp
sub
add
pop
sti
out
lret
test
or
and
hlt
cwtl
adc
scas
cmp
notl
sbb
xchg
test
outsl
cmp
pushf
inc
sbb
mov
jae
xchg
rol
popa
test
aam
inc
push
cmp
and
shlb
testl
push
adc
or
jb
sbb
jp
or
mov
mov
push
bound
xchg
push
dec
dec
sbb
push
leave
out
sub
daa
sub
cmp
out
add
dec
add
cmp
das
es
push
dec
stos
mov
fldcw
popf
cmp
mov
out
pusha
fdivrl
add
pusha
xchg
xor
mov
jb
lea
xor
inc
adc
cmpsb
and
out
push
incl
jl
lret
mov
sub
push
call
jp
mov
data16
das
bnd
mov
xor
adc
mov
call
jl
sahf
jge
fmull
jge
push
lods
scas
int
pop
pop
push
test
push
inc
jb
cmpl
cmpsb
mov
mov
mov
js
add
xchg
repnz
jno
clc
add
inc
pop
sarl
mov
mov
leave
aaa
pop
int
mov
xchg
mov
mov
sbb
cmp
ss
pop
inc
and
xor
sbb
in
push
add
push
into
and
int
dec
dec
cltd
mov
hlt
fstl
or
roll
pop
xchg
jns
mov
mov
mov
lret
and
arpl
mov
xor
pop
ljmp
jno
xchg
jne
imul
outsl
arpl
decl
push
xlat
lock
cld
dec
fsubrs
sbb
inc
dec
ja
sub
cmc
stos
jg
inc
testb
popf
pusha
loope
sahf
or
push
mov
arpl
out
mov
adc
lret
lock
or
sbb
push
cmp
mov
sub
mov
lret
and
pushl
aad
mov
xchg
out
dec
scas
jge
mov
mov
sarb
pushf
sarl
xchg
jmp
clc
xor
mov
outsl
push
jl
mov
mov
loopne
leave
lods
ret
mov
jl
loope
mov
stos
add
cwtl
push
xchg
lods
mov
mov
mov
push
out
adc
mov
push
cmp
enter
pop
not
xor
mov
divb
lods
stos
inc
int
dec
xlat
jl
or
int
bound
xchg
lcall
xchg
lds
sub
sahf
xchg
cltd
ficomps
xor
lds
and
push
push
mov
push
cs
imul
sarb
in
xchg
xor
cmc
xor
mov
dec
insb
aam
into
out
movsb
into
mov
leave
lea
mov
test
loopne
clc
xchg
scas
sub
ljmp
dec
or
push
in
imul
jo
fcmovnu
call
jecxz
fs
xlat
mov
sbb
cmpsl
test
mov
pushf
outsb
cli
std
jns
mov
addr16
xchg
lcall
push
test
pop
dec
jmp
mov
loopne
pusha
xchg
arpl
mov
inc
shlb
loopne
jne
xor
add
in
mov
daa
movsl
jp
mov
je
jl
fiaddl
adc
pop
pushf
insb
push
mov
ljmp
aam
popa
push
aas
add
mov
pop
cli
loop
pop
adc
mov
ljmp
add
into
cmp
pushf
scas
sbb
test
or
pop
xchg
leave
ds
dec
rorb
push
push
pop
xor
iret
sbbl
push
sbb
cmovl
xchg
iret
cltd
add
inc
xchg
pop
mov
repz
imul
sub
jmp
mov
inc
lcall
adc
sub
into
pop
lods
sbb
pop
aas
decl
out
inc
and
push
push
push
ljmp
loope
stos
and
mov
xchg
movsb
pop
jge
mov
call
ja
in
fdivl
sub
xchg
mov
dec
add
repnz
push
mov
jge
pushf
fistps
fsubrl
sbb
in
bound
mov
jp
adc
push
fstl
push
movsb
lods
inc
dec
sub
adcb
push
orl
mov
mov
push
in
jl
aad
je
ficoms
xchg
xchg
lcall
and
std
sbb
shrb
push
bound
repz
push
dec
push
cli
rcll
cld
jns
mov
out
nop
pop
cmp
xor
xchg
loope
dec
mov
dec
sahf
aam
add
psrad
xor
sub
adc
rcll
outsb
xchg
push
dec
jle
xlat
xor
pop
sub
movsb
ja
mov
or
adcb
push
cli
insl
call
push
pushf
mov
pop
and
sbb
daa
sbb
imul
mov
pop
or
inc
insl
inc
mov
jge
jmp
lock
sbb
nop
idiv
cmpl
loopne
ret
out
cmpsl
lret
xor
inc
mov
jmp
in
mov
jg
cmp
and
jge
roll
jge
push
stc
lret
inc
or
insb
xlat
in
in
ret
push
push
or
pop
iret
js
dec
insb
jne
xchg
stos
enter
shlb
sub
cmp
cmp
dec
not
sti
mov
and
jge
push
fucomi
inc
into
sarl
sbb
dec
test
mov
pop
mov
cmp
mov
movzbl
mov
out
pusha
mov
inc
jnp
cmp
cmpsl
mov
imul
jle
mov
dec
shl
out
inc
mov
adc
xor
cmp
push
and
popf
pop
scas
test
lahf
cwtl
and
xchg
push
dec
mov
cmpsb
test
adc
data16
and
inc
out
adcl
pop
out
ret
js
int3
inc
add
cld
xchg
aam
arpl
mov
into
and
repz
push
xchg
adc
fmull
mov
int3
insl
mov
rorl
repz
insl
and
icebp
pusha
mov
dec
push
push
mov
loop
jbe
cmc
push
scas
popf
loop
xor
inc
gs
outsb
and
fbld
add
call
pushf
arpl
mov
enter
mov
xchg
sbb
xor
out
fstpl
lods
mov
repz
push
test
movsl
xchg
jnp
clc
je
jnp
in
dec
daa
pop
aad
not
cmpsl
pop
xor
bound
push
adc
shrl
add
and
js
adc
sbb
cs
dec
int3
fwait
jl
loope
xchg
flds
and
or
bound
push
gs
mov
les
sub
adc
pop
adc
je
fildl
je
leave
lahf
je
push
cmpsb
loope
packssdw
jmp
in
lods
into
test
dec
stos
pop
fstps
xchg
mov
mov
jmp
cmp
inc
movsl
mov
xchg
pop
inc
add
gs
ds
cmpsb
aad
les
and
xor
push
sub
xchg
jge
mov
mov
repnz
cmpsb
or
push
cmp
adc
mov
movsl
ds
popa
push
addl
lret
dec
gs
mov
adcb
xchg
shll
add
movsl
inc
hlt
push
in
push
add
std
or
cmc
decb
jle
push
or
adc
fsts
in
cli
jnp
ja
pop
fsubs
sub
or
aas
ficoms
repz
into
sub
xchg
loop
fadds
xor
push
cli
push
lock
add
lods
xchg
push
pop
pop
mov
jb
push
push
jb
inc
pop
icebp
filds
push
rolb
jge
push
in
fmul
dec
inc
into
add
cmpsl
outsl
cltd
cltd
jge
pushf
in
xor
aam
outsb
mov
lods
aam
adc
lock
dec
ljmp
add
stos
cld
or
loop
loopne
fsub
adc
sbb
adc
arpl
or
jle
push
gs
das
jmp
fdivp
in
clc
shrl
test
cmp
pop
cmp
fxam
imul
imul
push
ss
int3
outsl
mov
add
jge
mov
jbe
sbb
cmp
imul
lods
push
lcall
xchg
jae
cmp
lret
scas
xlat
cmp
push
or
test
aaa
lcall
mov
pop
and
xchg
in
loop
mov
sub
lock
jb
fwait
mov
push
adc
sbb
sbb
scas
xor
add
push
mov
dec
insl
push
fwait
jmp
dec
out
cld
ljmp
lcall
scas
sub
mov
pusha
jg
fcomps
sub
ljmp
xor
out
or
xchg
fdiv
in
pop
enter
out
mov
mov
pop
xor
mov
ja
add
test
loope
mov
inc
popa
xor
adc
jo
mov
lock
sbbl
data16
aam
pusha
ret
xchg
xchg
leave
lods
pusha
inc
xchg
push
sbb
mov
leave
xlat
das
aad
inc
mov
jmp
ficoml
sbb
push
mov
popa
mov
xchg
push
sbb
js
insl
mov
and
pop
jp
cmpsl
jg
icebp
xchg
idivb
add
shll
mov
jbe
in
sbb
fidivl
mov
out
add
pop
pop
mov
stos
dec
adc
sti
in
xchg
sbb
incl
xchg
sub
negl
ret
jg
out
xlat
les
pop
rcrl
xchg
pushw
repnz
push
imul
and
inc
mov
lds
ficoms
jae
dec
add
or
iret
sub
pop
call
jecxz
lret
mov
xor
pand
in
int
in
pop
push
out
je
adc
movsb
and
sbb
jmp
stc
or
pop
insb
jno
ds
jge
inc
jecxz
sbb
rorl
xchg
push
cmp
sub
push
dec
icebp
push
lock
mov
testb
leave
leave
dec
mov
pop
push
imul
icebp
adc
mov
inc
lret
inc
out
push
push
pop
mov
insb
or
sub
icebp
or
mov
into
loopne
or
pop
inc
dec
test
jle
jae
int3
mov
or
aas
xchg
add
mov
test
fdivrl
lret
mov
sbb
test
das
push
jne
mov
cmp
jle
mov
gs
jp
push
in
and
sbb
popa
cld
push
xchg
iret
jae
jno
lahf
ja
mov
mov
xchg
pop
cmp
enter
pop
sarl
pslld
jp
outsl
jbe
pop
pusha
out
vpmadcsswd
adc
aad
pop
int3
loopne
jns,pt
sub
outsl
sbb
shrl
mov
cmpsb
push
stos
xor
cmc
mov
fdivrs
in
pop
pushf
push
add
ret
mov
lock
ret
jb
out
mov
xlat
adc
cltd
cmp
sahf
lds
push
imul
rcrl
push
mov
sbb
xor
sub
js
xchg
mulb
lcall
dec
cli
mov
ss
sub
stos
int
mov
aas
mov
add
add
adc
out
loope
addb
jmp
in
movl
cwtl
loopne
je
sub
jle,pt
jmp
out
jbe
cli
xor
es
pop
test
out
dec
repz
add
outsl
cmpl
rcr
arpl
cmp
mov
cmp
lods
movsl
jmp
jge
shll
test
shl
jns
pop
mov
sbb
cmp
lret
mov
bt
lret
aaa
arpl
pop
cs
pop
dec
enter
lods
fnclex
jb
cli
mov
test
inc
xor
fldcw
or
ljmp
adc
test
dec
gs
stos
shlb
cs
jp
mov
and
fisubrs
in
repnz
xor
jl
movsb
mov
mov
aam
mov
xchg
inc
cmp
push
sti
rep
outsl
xchg
lods
mov
aam
scas
adc
arpl
jbe
insb
bswap
or
call
cld
add
cli
jp
pop
mov
mov
roll
insb
lock
rcl
sbb
icebp
gs
xor
xchg
xor
rcll
mov
cmp
popa
push
mov
pop
sbb
pop
test
inc
shll
push
xrstors
and
popf
push
out
inc
sbb
inc
and
fistpll
pop
cmpsl
leave
adc
insl
pop
in
clc
scas
jo
fildll
jno
imul
push
fisttps
cltd
add
push
sub
rcrl
pop
sbb
inc
sbb
push
inc
inc
outsl
arpl
jecxz
femms
scas
in
inc
pop
cmp
jno
and
jae
add
jmp
mov
mov
jne
mov
mov
gs
dec
das
clc
mov
cmp
fisubs
add
fwait
and
sub
cld
inc
pop
outsl
fadds
sahf
push
mov
jnp
inc
daa
pop
xorl
push
jp
jmp
or
ret
mov
sti
sub
cmpsl
outsb
jmp
sbb
ljmp
adc
fcomps
push
stos
jno
cli
andb
ds
fisubrl
fildl
adc
mov
out
push
in
es
mov
push
cmp
fisubrs
mov
in
push
aas
inc
loope
add
mov
xchg
out
or
jbe
jb
xorb
sub
decl
mov
cltd
lcall
out
jecxz
or
fld
into
or
icebp
cld
sub
xchg
rcl
xor
ficomps
fxch
movsl
lds
mov
sahf
scas
cmp
jbe
incb
xchg
int3
adc
push
pusha
ja
test
adc
jnp
add
xchg
push
stc
aas
dec
dec
or
shrb
mov
mov
shll
push
mov
clc
jb
ds
xor
dec
enter
ret
sub
pop
out
sub
and
lock
jo
les
mov
sub
lock
into
xchg
test
add
jb
inc
in
inc
in
mov
sbbb
push
in
add
jg
les
and
jae
mov
call
sub
inc
sahf
sarb
movsl
lock
cwtl
arpl
stos
fs
jo
mov
popa
xchg
sbb
mov
xchg
sbb
adc
dec
insl
call
sub
test
lret
ds
mov
sbbl
ss
int
jle
mov
in
cmp
idivl
mov
decb
jns
pop
cmc
arpl
aaa
xchg
xor
and
jmp
movsl
enter
sub
icebp
push
push
sub
xchg
ss
mov
pushf
sbb
pop
ret
xor
call
sub
popa
in
hlt
lods
daa
sub
data16
cmpsb
gs
push
pop
pop
les
out
push
jecxz
xor
nop
xchg
lret
fdivrl
mov
in
push
sub
xchg
pop
cli
mov
out
xor
xorl
inc
mov
mov
push
sub
xchg
aam
popf
cwtl
gs
cwtl
sbb
adc
mov
mov
pop
pusha
cltd
mov
push
push
jne
rcl
pop
outsb
mov
adc
sti
imul
sub
cmpb
push
jnp
or
inc
dec
jo
into
jl
mull
mov
js
adc
sahf
das
insl
data16
call
dec
jp
ss
out
mov
out
cli
jle
pushl
xor
lret
add
sbb
ret
fs
out
out
int
lea
sbbb
xchg
push
test
mov
lea
sahf
insl
outsl
inc
cmp
es
nop
arpl
push
out
inc
mov
imul
cmc
sub
stos
jl
sbb
add
out
outsl
add
inc
sub
vpunpckhwd
push
cmp
jno
pop
pop
je
imul
dec
in
push
sbb
test
push
add
mov
ljmp
adc
daa
and
fisttpl
mov
in
ret
push
xor
pop
jne
pop
andl
scas
cmpsw
jmp
inc
xchg
arpl
stos
fstpt
lret
mov
out
and
je
pop
mov
push
lods
mov
adc
fcompl
ret
and
or
sbb
adc
jecxz
jle
cld
int
cmpb
dec
fdivl
fs
jecxz
dec
clc
push
ret
mov
inc
out
je
dec
loopne
jmp
pop
ljmp
xor
jge
jae
test
arpl
outsb
fldl
adc
fidivrl
jmp
cmp
xor
or
adc
sbb
sti
and
sbb
jb
or
dec
adc
ja
xorl
lds
stos
xor
or
cmp
aam
out
xchg
sbb
scas
ret
pop
mull
sbbb
jb
pop
pusha
and
fmulp
or
jo
jo
push
xchg
jb
fprem
jbe,pt
loop
lock
cmp
out
loope
fiadds
movsb
or
outsb
xchg
jge
mov
je
jg
cmp
jle
popa
adc
adc
ljmp
or
sub
cmpsl
cmp
test
jb
sub
add
das
adcl
sahf
add
lcall
xchg
cwtl
push
das
mov
lods
sbbb
aaa
xlat
dec
mov
and
orl
insl
cmp
and
lds
xchg
jp
jp
jno
stc
iret
or
cmp
inc
sub
push
and
loopne
jns
in
xchg
clc
mov
dec
sti
lcall
adc
gs
cmp
dec
push
mov
je
add
test
test
or
and
cmp
pop
into
fmul
and
sbb
pop
out
sbb
imull
mov
or
cmpsb
imul
xchg
or
xchg
into
xchg
mov
pop
jnp
jo
fsubrl
movsb
lock
and
sub
insb
inc
cmpsl
ja
jecxz
inc
lods
fistl
cwtl
add
inc
mov
leave
subb
fsubl
shrl
push
fnstcw
scas
pop
mov
dec
stos
jg
loope
inc
mov
jb
cli
xchg
shlb
or
jg
out
cmp
incb
ret
sahf
int
int3
fnstcw
cs
jo
mov
inc
scas
mov
push
ret
sub
rorb
je
xlat
sub
mov
aaa
in
dec
int3
arpl
lret
and
xor
xchg
inc
push
out
popf
adcb
cmc
add
sub
call
rol
cmp
and
adc
add
xchg
loope
inc
jne
cmc
inc
repnz
sbb
fidivrs
aaa
rcll
rcrw
jle
lds
imul
lret
div
lahf
scas
stos
test
mov
cli
mov
and
iret
ja
outsl
mov
mov
sahf
call
lahf
ds
std
sub
jl
push
dec
fistpl
dec
fldt
pop
mov
lret
pop
fsts
mov
mov
pop
push
dec
adc
mov
pop
movsl
arpl
test
mov
popa
cltd
mov
mov
pusha
xchg
popa
xchg
movsl
jno
loop
sub
push
rclb
lahf
ret
mov
cmp
cmp
in
repz
inc
mov
xchg
int3
inc
cmpsl
push
or
ret
jo
scas
addb
out
dec
js
pop
push
ret
es
push
aad
cmp
lea
mov
jecxz
mov
mov
fldenv
rcll
or
pop
xchg
scas
xor
xor
shll
mov
out
aad
bound
pusha
fucomp
push
nop
adc
cld
je
and
lds
lcall
mov
xchg
mov
subb
cwtl
fucom
mov
ja
push
pop
addr16
dec
repnz
cmp
inc
inc
mov
cmp
inc
cmpsb
push
aad
fldenv
jle
mov
dec
lret
dec
pop
sahf
out
sbb
add
in
lret
inc
push
or
int3
hlt
mov
add
dec
pop
inc
out
std
add
mov
pop
cmp
pcmpgtb
js
cmovge
arpl
mov
mov
inc
jl
leave
es
pop
daa
jmp
stos
rcrb
jb
push
stos
cmp
ss
xchg
xchg
cli
pop
bswap
lret
inc
ficoml
adc
lret
imul
fmuls
push
mov
xor
lahf
call
imul
mov
pop
jo
or
bound
inc
sbb
das
inc
pop
cltd
push
lea
push
inc
adc
cli
add
or
movsb
sbb
outsb
jo
add
lea
fwait
sub
ret
test
push
fsubr
xor
ljmp
push
jmp
jb
sbb
jecxz
ja
test
xchg
fistps
mov
jae
mov
push
jmp
adc
inc
dec
mov
xchg
and
dec
in
dec
lahf
sbb
icebp
aaa
aam
cmp
add
out
jo
cmpsb
ds
lahf
test
adc
jecxz
xchg
dec
rclb
push
ficoml
push
xor
icebp
push
mov
sbb
mov
xor
cmp
enter
lds
lock
ret
xchg
lods
aas
jl
dec
int3
rorb
repnz
cmc
inc
int3
pushf
into
rcll
test
rcl
es
in
inc
leave
inc
ss
adc
test
add
xchg
scas
mov
add
sbb
xchg
in
lea
outsb
push
push
mov
loop
insl
and
out
std
xor
push
sub
xor
sbb
sbb
sbbb
sti
mov
push
sbbb
cli
ss
add
je
call
jb
jbe
mov
fninit
xchg
movsl
add
out
jne
jbe
mov
jne,pt
clc
fwait
sbb
fwait
into
test
xchg
sbb
cmp
dec
orb
addr16
fidivs
fsubrs
ljmp
inc
push
clc
data16
mov
inc
cmc
mov
mov
in
fwait
jmp
imul
repz
cmp
inc
enter
mov
adc
addr16
lds
popa
push
test
jmp
add
cld
adc
adc
and
sahf
add
mov
sbb
pushf
or
pusha
mov
and
mov
lock
adc
inc
out
and
xchg
sahf
jle
lcall
jno
cld
push
push
or
and
mov
mov
sbb
rcr
bound
sbb
loopne
je
aam
cmp
mov
xor
jno
jne
fisubs
cmp
mov
jmp
outsl
in
xor
stos
xor
mov
and
leave
push
pop
les
inc
imul
sub
add
int
call
fsts
sub
adc
dec
jnp
fcomps
les
decl
icebp
ds
mov
push
mov
scas
xchg
idivl
pop
and
cmp
and
pop
inc
and
xor
repz
xchg
add
inc
and
imul
sahf
rolb
xor
aaa
xchg
pop
cs
mov
insb
ja
ljmp
shll
mov
mov
dec
out
sbb
push
mov
int3
int
mov
and
and
mov
mov
add
testb
inc
dec
gs
ss
add
mov
lcall
add
enter
jl
xorl
xlat
inc
push
lods
sti
aas
push
push
mov
xor
xor
push
sbb
inc
loope
addl
aaa
lahf
leave
mov
sbb
sahf
push
cmpsb
in
or
push
mov
faddl
ljmp
sbb
cli
scas
movsb
out
dec
or
cmp
xor
call
addl
pop
pop
pop
sub
xchg
xchg
and
ljmp
add
stc
pop
sbb
std
ss
clc
sbb
xorl
xchg
aaa
xchg
or
push
loope
mov
or
pop
cltd
jmp
pop
rcll
mov
push
and
cltd
add
sub
je
mov
mov
mov
outsb
popa
sbb
and
jg
std
leave
xlat
mov
in
std
aam
data16
dec
adc
mov
dec
add
js
in
push
es
mov
sarb
pop
cmp
cmpsb
cli
inc
and
orb
lret
cmpl
xchg
lcall
mov
pop
popf
adc
add
ljmp
pop
into
cmpsb
repnz
nop
push
fcoml
lds
and
jp
mov
fsubr
loopne
cmp
mov
add
push
push
ror
cld
and
fimull
adc
mov
jb
inc
repnz
mov
mov
aam
mov
cmp
push
insl
jecxz
lods
mov
test
test
ss
les
shl
das
in
cmp
pmulhw
ror
into
dec
dec
cmp
mov
inc
mov
sub
test
test
adc
sbb
lods
fisttpl
es
stos
pop
lods
lds
pop
cmp
add
call
ljmp
and
push
pop
or
out
je
cmp
rorb
scas
ja
in
fsubrs
lahf
cmp
mov
xchg
in
jge
test
xchg
xchg
mov
adc
jo
xor
les
sub
sahf
mov
cmc
jg
js
or
xchg
daa
ret
mov
sub
jne
or
adc
mov
add
insl
adcl
push
xchg
pop
cmp
cmp
lcall
cmc
popa
mov
mov
cwtl
ds
pushf
and
jp
cmpb
fdiv
inc
movsb
push
cld
fistpll
ss
sbb
jp
adc
xor
jge
repnz
sbb
jns
pushl
add
mov
leave
sub
jbe
xor
xchg
mov
rolb
repz
jp
jo
test
mov
rcl
dec
insb
dec
out
rcrb
not
xor
jns
xchg
mov
in
popa
pop
jl
or
push
pop
dec
mov
jae
mov
push
inc
cmp
lret
mov
dec
sub
cwtl
in
cmpsl
fs
xchg
xchg
xchg
loop
bnd
dec
sahf
insb
fs
lods
test
sub
test
mov
xchg
addl
pop
or
and
test
aam
ret
addl
cmp
mov
mov
mov
mov
in
sbb
out
add
dec
lock
insl
pop
mov
push
outsb
scas
xorl
ret
mov
mov
pop
out
adc
sbb
inc
mov
sub
and
into
cmp
mov
or
cmp
sub
xor
adc
into
mov
fwait
inc
or
popa
pop
scas
cld
sub
aaa
mov
fs
inc
jecxz
int3
cwtl
xor
jo
lods
or
sbb
ds
adc
lea
sti
and
xchg
int3
jg
popa
ja
scas
and
xor
mov
les
mov
or
bswap
or
js
jg
cltd
mov
loopne
iret
repz
jge
ss
lea
and
jmp
or
push
adc
cs
jnp
jle
loopne
decl
sar
adc
push
lret
in
je
and
js
xchg
flds
popf
mov
mov
rclb
pop
jb
lods
adc
outsb
and
fidivrs
mov
dec
repz
std
mov
push
pop
das
data16
imul
cmp
push
pop
cmp
cmp
enter
shlb
mov
orl
sub
jle
jg
jecxz
aad
push
imul
ss
pop
out
pop
pop
ret
dec
dec
std
test
push
or
shll
aaa
rcl
jb
inc
mov
jle
jle
cltd
cli
fstpt
push
cmpsl
ror
pop
jno
mov
iret
testl
cmp
fdivs
test
jmp
fs
mov
call
cli
insb
clc
mov
jno
inc
loop
fisubrl
icebp
lcall
add
jle
dec
add
jae
fcomps
test
pop
pusha
or
xchg
ds
ficomps
cld
imul
fimull
sahf
je
movsl
pop
fdivrs
push
mov
and
push
fstps
cmp
xchg
dec
ds
ss
popa
icebp
fdivrs
mov
fstl
popa
push
push
sti
jno
xor
mov
sub
xor
xlat
push
xor
pusha
cli
dec
sub
out
mov
repz
dec
ja
mov
data16
jne
shrl
mov
out
or
pop
movsl
push
jo
xchg
shlb
iret
dec
nop
dec
adc
xchg
fldenv
cld
cwtl
xor
mov
lds
add
fnstcw
xor
sbb
cs
add
push
xchg
push
sub
jge
cli
aaa
call
fmuls
ror
sbb
out
mov
jecxz
fdivs
loopne
mov
cld
mov
and
bound
leave
push
sub
jmp
sub
sub
inc
mov
ficomps
adc
scas
and
out
and
mov
cmpsb
cltd
test
inc
push
mov
and
js
lods
push
out
clc
jecxz
cmp
pop
or
sbb
sbb
push
push
subl
test
ljmp
adc
pop
cmc
and
cli
mov
shll
adc
xorb
aam
lock
inc
push
jne
fs
jbe
pop
repnz
adc
and
mov
in
pop
pop
test
dec
mov
or
sub
mov
pop
test
pop
push
cmpsb
xchg
xchg
lahf
aaa
mov
mov
cwtl
outsl
sub
sub
repz
scas
xchg
arpl
rcrl
mov
lods
not
in
dec
jno
fcoml
frstor
imul
cmp
rcll
out
pop
ss
and
xchg
aaa
mov
lea
jg
lock
xchg
pop
pop
push
xor
scas
jb
inc
or
js
mov
stos
pop
cmp
adc
daa
push
int3
sub
cs
ret
push
inc
sti
cld
aam
scas
lret
mov
fcomps
inc
pop
sub
jl
movsb
or
push
inc
ja
dec
daa
xchg
cmp
arpl
xlat
insl
hlt
sbb
stos
test
xor
sbb
push
add
or
in
data16
cltd
inc
lahf
sub
xchg
jle
adc
out
loopne
sbb
push
jle
or
inc
out
repnz
rep
mov
xchg
xchg
pop
test
gs
cmpsl
lret
xor
aam
pushf
adcb
lcall
mov
pop
jns
xor
and
sbb
push
jo
insl
repnz
mov
in
lret
test
aam
mov
push
scas
in
jmp
push
jno
and
je
mov
sarl
rcll
jp
push
inc
sbb
push
fisttps
test
xlat
add
rorb
mov
add
adc
xorl
mov
enter
outsb
jg
movsb
push
jo
push
mov
mov
std
and
mov
repz
pop
sbb
stc
mov
ja
movsb
pop
sbb
sub
cmpsb
lods
lea
test
sub
scas
enter
pop
pop
ret
test
cli
fstpt
mov
popf
pop
insl
les
sbb
aaa
mov
or
cltd
leave
or
out
cmp
push
clc
sbb
or
imul
pop
popa
cld
pop
mov
xor
inc
xor
mov
insb
lea
movl
sub
js
xchg
pop
jae
and
incb
push
lcall
mov
popa
and
mov
fwait
dec
ret
cmp
mov
and
jg
xchg
aad
mov
inc
or
sbb
add
jb
dec
test
outsb
out
sub
ljmp
test
add
dec
lret
mov
scas
or
add
je
cli
inc
jl
clc
dec
push
mov
pop
mov
mov
sbb
out
aam
adc
jmp
sbbl
insb
add
push
or
mov
mov
add
addb
jbe
test
xchg
adc
popa
sub
test
cmp
repnz
imul
stos
cmp
dec
push
dec
jp
or
and
es
cwtl
lret
lret
xor
jge
pop
sarb
es
pop
jmp
insl
lds
pusha
cltd
adc
data16
sbb
pop
mov
dec
arpl
or
pop
pop
movsl
inc
or
inc
inc
xchg
lret
push
and
mov
sbb
fidivl
add
xchg
cltd
push
mov
mov
cmp
insb
sbb
bound
xchg
push
cld
xor
outsb
ret
push
les
sahf
mov
inc
test
sbb
mov
ficoml
jae
int
es
push
pop
mov
loope
mov
lea
mov
out
mov
dec
xor
rcrb
sbbl
sbb
pop
xchg
fistl
inc
scas
movsl
or
loopne
bound
dec
clc
xor
js
push
dec
adc
stc
sbb
push
ret
ljmp
mov
or
imul
bound
mov
in
mov
into
xor
push
cmp
loopne
add
mov
out
sbb
mov
jge
stos
fidivrl
cmp
repz
scas
xor
dec
xor
jmp
repnz
jle
pop
or
mov
ret
loopne
adc
mov
cmp
clc
cmpsb
lcall
or
cmp
daa
pop
xor
out
push
stc
jl
lcall
ja
jae
or
pop
mov
mov
pop
xor
mov
mov
xchg
inc
ja,pn
movsl
out
imul
cmp
leave
sub
addl
pop
lods
sub
shlb
mov
jb
mov
mov
ljmp
test
aaa
sbb
movsb
dec
cwtl
clc
cld
jp
mov
push
add
cltd
or
aad
cld
or
gs
mov
out
add
add
push
xor
lds
jle
pop
sbb
inc
pop
mov
push
xchg
add
mov
stc
xlat
sti
iret
subb
push
cmpsl
push
stc
out
mov
cmp
cmp
mov
out
mov
pop
lock
aas
mov
jecxz
leave
pushf
lock
cmp
movsl
inc
into
and
jae
jae
mov
mov
mov
addr16
enter
in
inc
sbbl
ret
ds
cmp
and
adc
mov
pusha
enter
pop
aaa
fstps
mov
push
cmp
call
pop
mov
mov
inc
loop
sahf
out
mov
mov
push
lock
mov
cltd
xchg
icebp
inc
mov
inc
cmp
inc
inc
cs
rclb
call
mov
test
xchg
imul
cli
lcall
pop
xor
lds
and
xchg
cmp
mov
cmp
xor
inc
sbb
xchg
in
dec
push
and
test
push
cwtl
jno
pop
stc
test
mov
dec
sub
sahf
sub
cmp
sbb
subl
dec
dec
mov
jle
cld
in
and
imul
inc
arpl
mov
fmul
and
rorb
sub
test
cwtl
jb
repnz
mov
lret
mov
or
shlb
bound
stos
push
xlat
popf
inc
xchg
push
push
in
or
sub
ficomps
fidivrs
xchg
jo
add
sub
mov
bound
es
sub
cltd
or
jb
or
inc
jb
xchg
push
imul
inc
outsb
loope
pop
ss
lret
or
dec
or
mov
cmp
faddl
xchg
fcoml
cmc
pop
mov
mov
addb
jl
mov
in
add
mov
push
and
mov
xchg
adc
pop
xor
xchg
stc
ret
adc
xchg
aad
xchg
stc
test
fs
adc
or
jmp
gs
mov
xor
cmpsb
xchg
dec
sarl
js
lcall
stos
push
stos
mov
or
push
sub
nop/reserved
js
cwtl
scas
or
lahf
push
test
push
and
jge
sub
xchg
or
dec
lret
aas
push
addl
jecxz
call
aaa
shlb
pop
jae
mov
push
and
mov
jmp
and
sbb
cmc
loopne
pushl
inc
cmp
push
or
cmp
inc
mov
fisubrs
orb
stc
jae
stc
jne
test
mov
adc
sbb
jge
sahf
orl
ret
sbbb
sub
pop
scas
cld
mov
xchg
repz
lret
jne
mov
mov
loope
popa
push
sarl
jp
in
movsb
adc
fcoms
sub
imull
lods
flds
xchg
xor
cld
adc
jbe
xchg
or
jmp
and
pop
cmp
out
fwait
test
lea
enter
dec
pcmpgtw
push
xchg
jae
dec
cmp
xchg
cld
lods
iret
cmp
adc
mov
sbb
pop
or
addl
and
imul
loope
hlt
mov
inc
push
dec
leave
lret
hlt
shrl
and
cmp
mov
sbb
sbb
out
hlt
lret
aam
pusha
in
xor
sbb
das
push
ret
inc
leave
loope
dec
aas
data16
mov
loop
bound
cmpsb
outsb
inc
sub
mov
sub
fwait
sbb
lock
ds
adc
jns
pop
mov
stc
mov
addr16
leave
mov
clc
jo
mov
mov
sbb
test
xchg
push
dec
outsl
test
cmp
sbb
orb
dec
and
lcall
pop
enter
push
not
push
out
or
pop
xchg
pop
scas
pop
mov
and
rcr
push
dec
test
insl
cmp
push
pop
inc
popf
int
fwait
mov
jne
mov
and
hlt
jg
push
cs
in
dec
jbe
adc
pop
jg
into
add
xor
and
test
jle
addl
aam
cmpsb
pusha
call
push
or
cmp
adc
ror
int3
loopne
mov
cmpsb
repnz
mov
pop
scas
and
test
push
addl
sub
pop
movsb
mov
cld
adc
and
inc
fnstcw
xchg
popf
push
addr16
sub
xchg
push
mov
lock
add
mov
push
sub
push
jb
or
aaa
jle
mov
cmp
repnz
dec
fisubrl
repnz
adc
enter
test
mov
lds
push
adc
mov
fisubl
stos
aas
mov
rcrl
lcall
jl
push
in
cmp
bound
test
mov
push
movsl
fcompl
sub
or
mov
int3
add
and
cmpsb
sbb
jbe
cld
insb
mov
clc
dec
ljmp
inc
mov
test
xchg
mov
sbb
fdiv
mov
inc
shll
movsb
and
out
fsubl
mov
adc
jmp
shrb
lret
int3
jle
loopne
add
jns
test
out
movsb
shll
mov
dec
xorb
push
xchg
popa
lock
insb
and
or
mov
push
mov
add
adc
jno
add
and
sub
jns
sbb
push
gs
mov
call
aas
into
xor
scas
fidivrs
cmpb
and
mov
fldt
nop
or
cli
cmp
mov
sub
ficomps
or
imul
ja
std
scas
filds
dec
pop
mov
mov
cmc
xchg
shld
stos
fnstsw
rorl
xor
sbb
andl
jecxz
movsl
sub
ficoms
sub
push
scas
pop
loopne
outsb
movsl
jge
jl
sub
xor
mov
lods
jge
xchg
cmpsb
sub
pusha
in
cltd
f2xm1
test
imul
push
jb
ftst
pushf
fsubl
lahf
enter
je
dec
pop
sahf
cltd
aad
flds
inc
xchg
sbb
stos
je
and
push
push
inc
and
and
test
mov
fsubrp
inc
pop
lds
mov
ret
adc
cmpsl
dec
mov
imull
sbb
std
sbb
test
mov
add
scas
mov
xchg
das
and
xchg
scas
cmp
in
cmp
push
adc
push
sarb
lret
gs
cmpsb
mov
sbb
mov
fiaddl
pop
popf
insl
sub
fstl
pop
sub
lock
or
call
push
push
and
mov
aas
jb
pop
insb
sbb
dec
fstps
ret
add
sysenter
into
pusha
das
std
mov
call
adc
test
pop
lock
stos
sub
mov
dec
loope
movsl
add
iret
lret
repz
jle
cmp
in
jo
pop
sbb
cwtl
jno
and
lods
mov
ja
imul
or
mov
outsb
ja
cmp
push
mov
xchg
xor
outsb
fsubl
xlat
js
pop
pop
jg
cltd
outsl
add
mov
mov
les
sbb
pop
push
imul
out
push
sbb
leave
push
aad
mov
sti
push
mov
fistps
push
push
repnz
lods
dec
jle
jno
bound
mov
call
bound
je
adcl
cmpsl
iret
adc
imul
jno
popf
fcmove
test
mov
cs
mov
test
push
mov
in
and
and
nop
mov
adc
fwait
aaa
jge
shlb
mov
pushfw
cli
xchg
icebp
adc
ret
pop
push
sub
leave
jecxz
mov
stos
cmc
xor
mov
cmpb
stc
pop
lods
mov
cmp
leave
adc
mov
ss
xchg
and
pop
sbb
xchg
add
sti
adc
sub
cmp
jecxz
mov
sub
jns
jge
cli
leave
outsl
in
sbbb
cmp
pop
add
xor
add
repz
es
popa
adc
stos
loop
jp
push
out
cmp
mov
cmp
pusha
jb
xchg
inc
ljmp
mov
sbb
adc
mov
sub
fs
xchg
xchg
daa
lcall
cmp
bound
xchg
dec
enter
jmp
aaa
ret
mov
jecxz
clc
popf
mov
add
lods
sub
stos
jge
outsb
jge
add
mov
movsb
xor
xchg
jne
jl
aad
ss
cmp
and
imull
in
adc
repz
xor
je
pop
sti
popf
adc
shll
mov
and
xor
push
mov
cli
push
bound
cmc
lods
insb
in
addr16
movsl
ljmp
cmc
jb
pop
ret
arpl
pop
cli
xchg
repnz
jp
outsb
jns
fiadds
pop
icebp
scas
sub
popa
int3
jecxz
or
mov
push
std
cmp
call
je
icebp
xor
inc
insl
fldcw
add
scas
cld
sub
adc
fsts
sarl
mov
iret
jg
gs
in
fwait
xor
lods
cmp
mov
lods
xor
sub
mov
dec
pop
mov
jne
push
sub
pcmpeqd
jg
rcrl
mov
add
shl
cwtl
push
xchg
jne
cmp
push
jnp
test
sub
xchg
fwait
imul
pop
ret
pop
pop
flds
sub
ret
mov
popf
jns
sbb
andb
sub
dec
xchg
xor
arpl
adc
fwait
loope
sti
arpl
push
stos
xchg
sbb
inc
nop
push
int3
fdivrl
push
and
adc
pop
sub
pop
popf
insl
mull
xlat
pop
or
cmp
lret
rcrl
popa
subb
js
add
or
jge
pop
dec
or
outsl
jg
imul
into
repnz
js
sbb
test
jnp
enter
mulb
mov
mull
fistpl
pop
scas
pop
sbb
xor
add
in
xchg
ljmp
mov
jle
mov
test
orl
mov
daa
fistl
xchg
adc
mov
loope
stos
aad
sub
xchg
cli
fimuls
or
xor
xor
mov
movsb
hlt
loopne
fisttpll
xlat
dec
cmpl
in
mov
js
xchg
mov
push
mov
mov
xchg
cltd
jns
pusha
dec
xchg
ds
xchg
adc
sahf
xchg
fnstenv
ds
cmpsb
pop
add
or
sbb
popf
xor
leave
sub
lods
xchg
mov
fsubrp
jns
inc
xchg
and
loop
jae
push
call
popa
inc
jne
sahf
sbb
jecxz
inc
in
lret
stos
sarl
lods
mov
xchg
stos
ds
movsl
popa
pop
dec
cli
mov
push
mov
dec
je
inc
notl
dec
stc
mov
inc
mov
xor
popfw
xor
int
jbe
bound
sbb
fucomp
xor
das
mov
pop
sbb
aam
inc
mov
nop
divb
ret
enter
adc
lods
mov
sub
int3
gs
arpl
ret
lds
jne
mov
aad
sub
dec
test
push
ret
outsb
adc
adc
movsb
add
bound
push
sbb
cmp
roll
mov
xor
and
jle
cli
movsb
lahf
adc
xor
div
ret
nop
dec
daa
dec
stos
inc
push
jg
push
cmp
and
and
cld
icebp
sbb
cmp
mov
adc
cmp
in
test
gs
nop
inc
or
cmpsb
in
pusha
repz
mov
lea
pop
lock
mov
mov
dec
lea
shl
add
loope
or
dec
push
scas
cmpsl
cmp
sbb
fiaddl
push
test
in
mov
lahf
cmp
aam
lea
dec
test
outsb
pop
fcom
out
ret
push
push
xchg
je
sub
xchg
stc
inc
adc
lahf
pop
es
inc
cmp
lret
cmp
cmpsb
sbb
xlat
fdiv
lcall
in
lds
pushl
lods
xor
push
push
push
jns
rclb
stc
lret
lea
ljmp
mov
outsb
cmp
addr16
mov
inc
sbb
add
sbb
dec
mov
and
insb
mov
adc
pop
loope
inc
push
pop
stc
mov
std
pop
mov
inc
dec
int
aaa
rol
sbb
add
cltd
xor
sbb
les
mov
inc
cmc
lods
dec
xchg
mov
jnp
shlb
inc
std
xchg
cmc
das
xor
imul
fisubrs
aad
mov
pop
or
jle
cmp
lds
daa
sub
clc
cmp
xor
xchg
push
popf
pop
scas
cmp
rolb
aad
sti
mul
xor
inc
pop
iret
clc
pop
mov
xchg
push
rcrb
pop
insl
jnp
repnz
popa
mov
cmpsb
jmp
add
sbb
pop
inc
inc
and
adc
adc
mov
ret
ss
popf
das
dec
and
mov
lret
lock
pop
sbb
or
sub
ljmp
les
push
ss
jne
loope
cmp
lea
faddl
jnp
rcrl
clc
mov
imul
das
add
enter
mov
mov
adc
lock
adc
xchg
sub
pop
fstpt
jne
sub
pop
xchg
and
sti
scas
outsl
xchg
pop
out
fwait
ds
sbb
xchg
fldenv
push
faddl
xchg
ja
dec
pusha
shll
popl
mov
mov
mov
cmpsb
pop
test
aas
and
cmp
aad
aaa
icebp
fcomip
mov
or
sbb
xor
adc
test
sub
ds
mov
outsl
mov
sub
enter
sub
in
das
mov
movsl
mov
ret
sub
pop
dec
and
or
in
xchg
popf
sub
xor
hlt
adc
rcl
and
and
jo
inc
cmp
aas
dec
and
out
pop
ja
xor
movsl
fldz
rcrb
mov
sub
pop
rclb
loope
inc
cmp
popf
popa
pushf
pop
adc
lahf
and
add
mov
push
add
adc
pop
dec
mov
arpl
or
ds
decb
addr16
ja
xor
pop
inc
test
mov
xor
xchg
sub
aaa
rcrl
jecxz
loop
mov
lods
leave
cmc
dec
and
rcll
pop
mov
into
ret
mov
movsl
cmpl
fucomp
mov
xchg
andl
inc
insl
movsl
dec
mov
add
lock
popa
jl
insb
lods
test
fstpl
mov
xchg
inc
ret
insb
mov
mov
or
movsb
loop
sbb
in
sub
sub
mov
addr16
push
fimuls
cltd
stc
icebp
xchg
dec
pop
inc
ja
sbb
sbb
cmc
sbb
pushl
inc
fcomps
or
cmp
xchg
mov
stos
adc
sbb
negl
shr
pminsw
testb
or
add
xchg
repz
xchg
sti
popf
std
arpl
xchg
mov
lahf
adc
mov
ljmp
mov
mov
pop
nop
es
mov
test
xbegin
xchg
add
sub
xor
inc
test
sub
lret
das
dec
es
lret
shll
aaa
inc
adc
movsb
sbb
push
and
mov
mov
push
mov
push
xor
pusha
rol
cmp
and
push
pop
inc
inc
pop
shlb
xor
lods
fcmovne
inc
jbe
fs
imul
nop
cmc
mov
scas
xor
sbb
mov
sbb
fisubs
mov
aas
mov
les
ret
nop
xchg
jo
mov
fimuls
dec
ss
jmp
lods
in
sbb
xchg
rcrb
push
jle
inc
mov
into
fcom
xor
neg
jp
xor
movsl
fwait
clc
push
mov
loop
repnz
xor
movsb
hlt
repnz
push
movsb
xor
jl
iret
pop
sarb
add
ss
pop
fisubrl
mov
mov
lock
aas
ss
loopne
cmc
mov
stc
out
fsts
cld
pop
xchg
lods
and
xchg
testb
jmp
test
call
xor
sbb
add
cmp
test
dec
pop
adc
pusha
push
fs
jb
test
sti
int3
mov
aad
cmp
lahf
xor
jmp
fucomp
fistps
add
mov
repnz
jecxz
cmpsl
sti
fadd
xor
shlb
mov
push
out
sub
stos
mov
xchg
push
mulb
xor
jb
adc
jns
add
lret
push
cli
mov
loope
sbb
xchg
or
cmp
pop
insb
and
push
push
adc
mov
sbb
cs
push
aam
sahf
shl
pop
sbb
imul
pop
lret
push
pop
clc
push
add
inc
add
and
aaa
mov
cmp
inc
out
xor
sbb
mov
int
mov
pop
mov
test
sbb
lea
sbb
sahf
fdivrs
jnp
movsl
mov
push
loop
ja
xor
or
pop
jmp
xor
lret
mov
mull
out
fstl
lock
int
xchg
jno
xchg
mov
fcoms
adc
inc
cmp
jge
xor
jl
scas
adc
repnz
inc
and
fwait
lods
mov
ret
rorb
clc
loop
repz
cmpsb
jmp
dec
inc
cld
adc
add
into
mov
rorl
hlt
inc
push
subl
mov
icebp
jp
clc
testb
jns
hlt
out
addr16
mov
jbe
insb
mov
cmpb
sbb
in
xlat
sbb
and
mov
jg
dec
or
adc
xchg
inc
adc
test
push
jp
xchg
in
lahf
cld
repnz
and
lret
inc
int
lods
pop
fists
sub
add
push
scas
cmpsb
push
mov
jnp
add
imul
test
cmp
lock
subl
jno
ss
int3
mov
out
or
stc
fcoml
xor
dec
mov
daa
popa
adc
adc
pushf
add
imul
xor
push
dec
insb
inc
dec
fstl
pop
lcall
xchg
push
push
in
cld
into
dec
fnstenv
repz
fsubl
push
xchg
and
sub
xor
aaa
loop
xchg
mov
into
mov
xchg
mov
gs
ss
movsb
hlt
stos
scas
sub
pop
pop
dec
mov
push
mov
push
fmull
jmp
lods
jns
or
sub
pop
in
and
rcl
clc
dec
mov
aad
shlb
loope
or
xchg
push
jno
loop
adc
mov
xor
icebp
or
mov
insl
mov
inc
push
dec
push
imul
mov
and
inc
clc
fimuls
xor
pushf
inc
and
push
daa
fwait
and
das
mov
xchg
gs
lcall
xchg
sub
sub
ss
or
or
push
pop
or
xor
out
aad
into
loopew
adc
mov
gs
stos
pop
jle
xorl
dec
or
xor
mov
sbb
mov
dec
lret
sbb
push
push
sub
into
pop
leave
inc
scas
clc
fcompl
push
xorb
mov
mov
and
test
div
and
and
loopne
and
out
mov
arpl
lds
cmpsl
repz
dec
push
xor
out
inc
add
pop
mov
les
and
loope
sbb
jp
adc
fsub
jmp
shrl
adc
aas
or
test
sub
cli
int
sbb
pop
popf
jmp
shll
dec
push
lcall
js
fcomps
or
insl
out
out
shll
lea
or
ret
stc
pop
icebp
sahf
shr
push
xor
cmp
jg
mov
adc
jo
push
xor
and
push
mov
mov
mov
jno
or
stc
scas
ljmp
aaa
imull
testl
pop
jne
mulb
inc
dec
in
mov
cmp
and
aaa
adc
push
dec
push
fstl
xor
aas
pop
sub
in
sbb
mov
mov
movsl
fdivs
jle
inc
out
push
fldcw
loop
aam
sbb
lea
inc
ds
mov
jle
xchg
adc
fcmovne
repz
lret
scas
add
jbe
pop
scas
add
enter
lods
cmp
outsl
dec
dec
dec
mov
pop
push
xchg
dec
mov
lret
mov
sub
xchg
jne
std
xor
push
mov
je
and
bound
aam
push
rcll
call
lahf
push
ds
jmp
in
xor
push
ljmp
lods
std
jbe
pop
mov
inc
repnz
jo
inc
add
adc
test
fstpl
dec
jg
scas
cmp
cmpsb
ficoml
test
jp
push
and
jl
and
fdivr
xor
inc
push
xchg
int3
jmp
mov
sub
mov
mov
push
out
jbe
pop
test
push
push
call
jmp
add
add
mov
pop
into
lahf
or
sbb
in
aas
or
in
dec
jnp
aad
out
fstl
sbb
clc
nop
cmp
sbb
shr
sbb
jbe
popa
divb
push
shll
jno
cmp
mov
dec
sti
in
pop
jno
shlb
outsl
ss
adc
dec
mov
xchg
xor
jnp
mov
cmp
xchg
ret
mov
mov
dec
mov
add
std
push
dec
mov
shrb
icebp
and
pop
xchg
push
adc
adc
push
mov
mov
adc
inc
push
addr16
pop
and
fisubrl
gs
add
stc
orps
mov
lret
xchg
pop
mov
xlat
jl
mov
or
nop
fwait
sahf
fcmovnb
lret
jecxz
iret
fildll
outsb
aas
adc
and
cwtl
loop
cs
ja
mov
mov
dec
or
test
or
clc
clc
pushf
mov
add
out
filds
lea
negb
or
add
mov
lods
filds
ss
sub
ja
xor
adc
int3
out
or
xor
mov
ds
shr
dec
mov
push
xor
icebp
pushw
js
shr
sarb
mov
cmpsl
push
ss
popa
mov
data16
xchg
cmp
jmp
cs
mov
dec
cmp
push
dec
int
xor
push
into
fisubrs
mov
mov
dec
daa
cmp
repz
lods
mov
mov
push
push
inc
sbb
pop
inc
das
scas
clc
sahf
in
jl
jb
ss
daa
pop
subl
jns
sub
sarb
sbb
lods
data16
inc
data16
adc
pushf
pop
in
cmp
rorl
push
sar
xlat
jnp
xor
mov
jne
xchg
pop
inc
fisttpll
fidivl
out
and
fst
shrb
push
movsb
daa
fisttps
cmp
enter
xchg
push
test
sub
ds
es
fdivl
xchg
or
xor
out
xor
inc
test
out
xor
arpl
vmovdqu
orl
mov
jecxz
jne
xor
push
mov
mov
sbb
divps
loop
xchg
pop
rep
addr16
mov
sbb
sbbb
push
xorb
fsub
scas
aaa
scas
push
mov
pop
push
sbb
imul
sub
aam
xchg
test
shr
daa
lds
cs
repz
jge
sbb
cmc
mov
jb
in
cmpb
cmpsb
or
add
jne
mov
daa
insl
jne
inc
flds
jp
jle
jp
sahf
ret
adcl
divl
dec
push
jg
ficoms
sbb
repz
or
imul
addr16
pop
xchg
or
add
xchg
cmpsb
ret
xor
enter
sbb
dec
dec
and
xchg
lret
aam
nop
es
in
adc
xlat
jbe
push
int3
jne
pop
jle
ljmp
push
sub
gs
ffree
pop
mov
iret
les
push
test
lods
outsb
es
loopne
sub
test
xor
jnp
dec
fisubrl
sbb
jle
int3
mov
and
push
sub
jg
sti
cmc
xchg
lret
adc
movsb
mov
xchg
jno
pushf
hlt
fsub
sbbl
mov
mov
cltd
xchg
lock
arpl
sub
jnp
mov
lret
cmc
lods
pop
add
sub
push
fidivrs
dec
mov
scas
mov
cltd
xchg
mov
test
cmp
call
mov
mov
xchg
in
mov
and
repnz
fiadds
xchg
stc
dec
testl
out
ret
pop
jb
xor
sti
les
sbb
sbb
pop
js
cmp
cmp
scas
mov
int
pop
mov
outsb
js
add
lods
sbb
repnz
cmp
sahf
jo
test
lods
clc
and
ficoml
scas
mov
lret
je
add
dec
in
fadd
sub
movsb
push
mov
inc
shll
mov
sub
sub
addr16
popf
aad
pop
xchg
and
mov
daa
fmul
sti
sarl
leave
mov
add
and
sarl
arpl
addb
sbb
mov
sti
mov
push
cli
xor
leave
cwtl
add
lds
movl
adcb
pop
lret
loop
mov
push
add
and
and
fimull
jle
cmpsl
push
hlt
outsb
xor
add
mov
pop
andb
pop
sub
and
jg
push
dec
xor
fwait
and
sub
xor
sahf
dec
xorb
adc
pusha
jb
or
nop
movsl
scas
das
into
fisubs
mov
push
aad
push
jns
push
cmpsb
jns
cmpsb
jecxz
ljmp
or
sub
jbe
movsb
jecxz
mov
popa
rorl
inc
fcomps
in
inc
filds
cmp
ja
enter
or
jl
in
outsb
adc
popa
ds
sub
test
mov
push
cld
and
mov
pop
mov
ret
enter
adc
imul
in
mov
cmc
and
xchg
adcb
dec
and
leave
enter
jno
push
clc
sub
mov
xlat
xor
add
cmc
out
mov
cmp
add
push
and
dec
xchg
sbb
sbb
cld
repnz
hlt
pop
and
xchg
push
push
mov
js
dec
scas
aas
and
repnz
shll
sti
jnp
adc
or
cmp
adc
iret
test
or
jle
ror
or
push
push
inc
imul
push
sarb
int3
rcll
mov
leave
ret
test
xchg
mov
mov
sbb
mov
rcl
in
and
push
cs
pop
roll
pop
repnz
xchg
cli
shll
lcall
fists
rcrb
mov
out
adc
repz
retw
rcrb
js
pop
mov
gs
xchg
les
jmp
std
and
rorl
sti
in
jg
fs
jg
xchg
js
xchg
fstps
pop
nop
sub
cld
das
mov
cmp
pop
shll
mov
mov
jae
lret
pop
mov
mov
aad
adc
jp
jmp
adc
sub
sahf
stos
dec
fldl
xor
push
mov
mov
imul
enter
mov
jnp
ds
hlt
cmp
insb
inc
aad
and
pop
adc
les
out
neg
dec
mov
sbb
adc
push
and
leave
inc
xlat
jnp
pop
jo
in
and
aad
popf
adc
sub
push
lcall
lock
xor
pop
lock
int3
in
jb
sub
cwtl
lret
inc
xchg
sbb
xlat
scas
pop
mov
sub
loope
imul
lds
mov
inc
jns
nop
arpl
dec
sub
inc
add
das
gs
mov
adc
inc
sub
add
cmp
adc
sahf
sub
push
add
pop
adcl
fdiv
fstps
jl
hlt
and
push
xor
js
mov
jne
fstps
incb
dec
fidivrs
loope
pop
hlt
lret
mov
mov
dec
push
dec
and
out
cld
hlt
xchg
cmp
int
cmp
imul
lret
fsubs
loopne
inc
loope
push
cmp
sti
mov
imul
sti
int3
out
imul
xchg
stc
and
leave
jp
cmp
daa
jmp
push
dec
cmpsl
in
dec
das
out
rcrb
jno
add
cmp
aad
jge
cli
lret
dec
sahf
cli
clc
pushf
fisubrl
mov
mov
scas
or
bound
mov
das
divb
fs
xchg
sub
and
mov
xchg
iret
ja
std
sub
in
jge
mov
mov
xor
xchg
das
pop
or
jp
in
mov
push
std
sub
add
lahf
bound
or
hlt
or
int
cltd
aas
rolb
sub
int3
pop
scas
and
pop
jecxz
fdivs
sbb
sub
jnp
jbe
fcmovbe
out
xor
cwtl
lcall
int3
jle
cmc
cmp
ja
jecxz
pusha
cltd
andl
fcomps
outsl
inc
popa
xor
ljmp
insb
mov
xor
or
aad
gs
mov
shll
mov
jns
mov
cs
jnp,pt
shll
test
jmp
pop
cwtl
lods
loopne
mov
mov
ds
jbe
xor
dec
mov
jp
gs
pop
repz
xchg
xchg
in
adc
jae
inc
dec
scas
jne
scas
adc
jno
jge
sub
dec
aas
mov
pop
in
fldl
dec
xchg
push
adc
or
push
jo
testb
ljmp
sub
sbbb
js
adc
mov
or
decl
lock
dec
mov
lds
and
arpl
pop
shll
fwait
subl
loop
push
dec
arpl
push
cmp
das
popa
das
ret
leave
pop
inc
xchg
xor
negl
les
and
int3
clc
rcr
cmc
inc
mov
cmp
test
cmp
push
push
out
jne
cld
sbb
mov
pop
mov
jo
hlt
and
push
cld
addl
lahf
addl
xor
mov
fincstp
imul
mov
adc
xchg
jae
push
mov
push
adcl
insl
mov
iret
mov
aas
cmp
sub
adc
and
cmp
adc
fistpl
inc
pop
pop
jae
mov
or
hlt
mov
sub
insl
ljmp
out
pusha
jg
cmp
push
repz
push
int
sbb
mov
or
inc
fcoms
ret
adc
insl
shlb
push
addr16
cmp
lcall
sbb
movsl
ljmp
jns
aad
ficompl
lcall
push
xchg
mulb
xor
and
stc
popl
pop
xchg
inc
push
jns
mov
jge
or
and
push
sbb
cmc
sbb
ljmp
cmpsl
sub
mov
in
xchg
ror
sbb
dec
mov
aad
call
pop
imull
adc
fwait
push
pop
out
push
mov
out
push
nop
imul
and
inc
mov
movswl
mov
mov
add
or
or
xchg
call
pushf
adc
push
addb
mov
cltd
cmp
fwait
lcall
stc
cmpsl
test
je
sti
dec
popf
das
jmp
arpl
inc
gs
sbb
push
add
outsl
or
cmp
or
movlps
out
lods
in
pop
mov
sub
mov
addl
jp
cmp
les
sti
shlb
add
push
mov
aas
jae
adc
mov
ljmp
inc
and
int
subl
push
mov
xchg
stc
imul
dec
nop
notb
stc
std
lods
insb
mov
xchg
lods
adcl
mov
cltd
stos
lods
dec
sbbb
lods
addr16
mov
and
sbb
and
cmp
sbb
stos
add
mov
xor
and
js
icebp
shll
xor
adc
mov
xchg
mov
mov
pop
mov
or
xchg
and
addr16
mov
mov
dec
push
fbld
sahf
mov
test
test
lea
repz
mov
push
pusha
adc
mov
cmp
sub
test
enter
call
or
mov
arpl
jp
out
xchg
sbb
jg
pop
hlt
or
scas
pop
adc
mov
sub
and
xor
cli
and
popa
jno
ljmp
cmp
fisttpll
stc
pusha
xchg
iret
and
sub
fmull
decb
pop
das
bound
add
dec
cli
sub
lods
fsubrs
negl
sub
repz
mov
lea
pop
scas
or
push
jne
sahf
mov
pop
ja
test
outsb
cmp
subl
imul
cltd
lods
clc
jno
stos
pop
movsb
stos
mov
and
mov
and
sar
or
fnsave
adcl
andb
cwtl
subb
inc
dec
pop
mov
cmp
push
repz
imul
cmpsb
fmul
out
xor
and
stos
mul
stos
dec
insl
or
xchg
std
fisubrs
fcmovb
and
jbe
addr16
xor
add
aad
and
mov
xor
fstpt
jns
pushf
lods
mov
test
test
ret
lods
lahf
lret
ds
outsb
ljmp
pop
add
mov
hlt
lods
outsb
sbb
cld
and
dec
jns
loopne
inc
jmp
push
and
dec
inc
repnz
out
test
lea
sti
pop
cmc
xchg
imull
inc
jle
mov
inc
das
and
xlat
xchg
and
test
cmpsb
sarl
inc
out
mov
sub
ds
fidivs
fists
jle
push
mov
out
push
sub
sahf
sub
xor
fidivl
jge
imul
mov
push
push
test
push
xor
ss
cmpsl
xchg
and
ljmp
loope
add
push
jecxz
cltd
jg
in
mov
cmc
mov
add
sbb
lret
dec
insl
mov
mov
mov
mov
pop
cmc
sti
and
mov
dec
dec
int3
push
push
pop
cmp
mov
ds
lahf
or
dec
push
sbb
pop
pusha
pop
aas
mov
or
sub
out
es
popa
shrb
jle
jo
bswap
negl
jg
adc
ss
fcompl
iret
fwait
jbe
push
fstpl
xchg
std
or
sbbb
xchg
int
sbb
jo
cmc
xor
push
movsb
mov
sbb
and
jae
popa
xor
rcll
pushf
cld
outsb
cmp
push
lock
in
movb
stos
shlb
pop
iret
fsubs
cmp
in
arpl
dec
jo
dec
cmc
push
jb
test
xchg
push
inc
or
mov
imul
mov
sbb
je
jle
sbb
inc
fiaddl
aam
test
popa
mov
insb
dec
xchg
xchg
rorb
loope
adcb
jmp
mov
cmp
je
cmpsl
pop
adc
rcl
pop
in
adc
movsl
adc
mov
add
ss
inc
data16
push
aaa
jae
sbb
into
shll
xchg
push
fcompl
popa
ljmp
adcl
stos
dec
scas
rclb
bound
mov
icebp
movsl
lret
cmpsb
stc
lock
inc
and
cmpsb
pop
sbb
push
cwtl
adc
cld
in
push
mov
fistps
lret
loopne
push
das
mov
and
add
push
and
mov
lds
inc
les
push
mov
mov
les
pop
sub
pop
stc
sub
add
iret
int3
xor
pop
jnp
sub
pop
leave
mov
sub
sti
fs
jno
xchg
add
and
repnz
xchg
jp
xor
mov
iret
jno
fstpt
adc
jbe
sub
pop
shlb
push
pop
jge
stos
addr16
outsl
mov
inc
mov
adc
sub
or
jge
add
mov
jp
xchg
ja
adc
cli
fisubl
call
push
testb
fnstsw
xor
mov
sbb
or
xor
add
xor
jmp
lds
in
test
clc
and
aas
addb
ret
cld
out
loop
xchg
or
inc
mov
mov
sbb
pop
outsb
jecxz
push
jb
jno
pop
push
iret
aad
lods
push
mov
mov
stos
in
test
test
jp
xor
aaa
xor
pop
les
jecxz
cmp
sbb
test
pop
lods
cltd
pop
ret
sarl
lods
inc
dec
push
mov
sbb
rcrl
fcompl
or
lock
mov
and
pop
fdivrl
mov
andl
divl
sbb
pop
push
test
pop
fwait
xchg
test
hlt
sbb
cli
sbb
mov
xchg
scas
add
lock
mov
jo
dec
adc
sbbb
repz
jle
add
adc
push
xchg
std
add
and
cmpsl
pop
test
jae
jmp
xor
jns
out
pushf
and
test
js
in
xchg
mov
adc
xchg
repnz
or
scas
out
notb
outsl
push
outsb
mov
xchg
fucomip
les
inc
or
dec
add
dec
jl
cli
shrl
nop
lahf
das
jae
stos
fwait
movsb
and
pop
pop
mov
outsl
out
repz
andl
and
mov
fbld
ds
xlat
ret
sbb
add
jno
stos
lcall
fcompl
or
xchg
mov
push
xlat
repz
loopne
scas
testl
sbb
cmp
dec
shll
aam
jnp
push
mov
fwait
je
lret
mov
adc
orl
and
xchg
aas
outsl
sub
cmp
add
mov
xor
push
sbb
push
or
sbb
bswap
sub
test
dec
stc
pushf
pushl
iret
jb
jg
pop
lahf
and
dec
mov
jecxz
fs
mov
jg
pop
lea
push
adc
pop
sahf
xor
pop
push
pusha
push
mov
repz
mov
aad
pop
adc
and
insl
ds
aad
lock
mov
xor
adc
lds
dec
mov
data16
pop
data16
faddl
stos
sbb
notb
lret
out
cmc
repz
aaa
mov
pushf
mov
mov
in
mov
out
lret
jnp
popa
xchg
lock
scas
xchg
call
mov
xchg
and
inc
jbe
sbb
or
ficomps
imul
popf
mov
in
push
cmp
movsb
mov
pop
test
jmp
cs
fsts
sub
add
xchg
sub
movsb
lret
arpl
cli
es
mov
cmpsl
dec
pop
sub
les
test
pusha
out
addr16
subb
jmp
push
push
push
popa
mov
add
les
xor
scas
and
and
add
dec
mov
jnp
push
jp
xorl
adc
stc
sti
sbb
mov
rcl
mov
push
rorl
das
aam
flds
mov
stos
and
push
dec
mov
xchg
xlat
pusha
mov
xorl
push
or
decl
les
xlat
push
pop
push
cld
aaa
stos
push
rcrl
and
xor
pop
jmp
pushf
pop
jmp
mov
repz
pop
in
pop
pop
pop
icebp
adc
rcll
xchg
mov
sub
scas
jmp
dec
call
or
test
ljmp
hlt
jne
xor
mov
fmul
xchg
ret
mull
sahf
aam
bound
mov
mov
xchg
fldenv
jmp
jg
jl
scas
idivb
push
imul
lods
push
ret
int3
inc
and
negb
lock
or
daa
jge
jno
or
bound
xchg
rcrl
jne
out
sbb
inc
stos
add
and
insb
or
jge
out
cmp
xchg
int3
jno
jnp
cmp
jae
enter
pop
fucom
hlt
dec
stos
loope
mov
add
ret
fldenv
ds
pop
fsubl
mov
jnp
sbb
jno
mov
ja
cmp
inc
push
jnp
mov
push
and
jecxz
pop
mov
adcl
outsb
lcall
inc
mov
or
fsubrp
or
lret
jne
add
jnp
dec
stc
cmp
int
pop
scas
jp
into
addl
xchg
lds
fldt
pop
pusha
test
fs
mov
popf
loop
push
xor
add
jp
data16
push
out
pop
subb
pop
dec
ja
sahf
inc
pop
or
shrl
jmp
jb
and
mov
xchg
imul
leave
push
pop
movsb
xor
cmpsl
sub
jne
popa
sahf
xchg
mov
adc
mov
loop
rorl
cmp
cmp
cmp
test
jmp
jb
dec
add
pop
stc
jo
mov
pusha
lret
loope
push
xchg
cmp
mov
inc
ret
inc
std
mov
sbb
xchg
cmpsb
inc
aad
pop
inc
mov
jo
xor
jbe
jo
out
sub
mov
call
mov
sbbb
or
ret
cmp
das
bound
jp
movsl
scas
fnstenv
dec
add
or
sbb
test
dec
fisttpl
aaa
xchg
sub
inc
imul
push
pop
es
mov
cmp
push
pop
pop
cltd
xchg
cwtl
test
cltd
sbb
xchg
call
xchg
shrl
fisttpl
loop
stos
fisubs
das
test
xchg
test
int
xchg
xor
cmp
fildll
push
test
je
test
mov
andb
jo
mov
movsb
and
cmp
mov
inc
xor
jle
movsb
scas
add
xor
xchg
scas
aaa
and
or
movsb
sbb
or
clc
xchg
mov
pop
mov
sbb
and
cltd
daa
sub
cmpsl
scas
aam
and
movzbl
jp
lods
int3
or
arpl
jno
xchg
adc
dec
jnp
hlt
cltd
jl
fcoms
mov
test
pusha
xor
pop
clc
loopne
jl
insb
fwait
rorb
les
inc
gs
add
jmp
fwait
cmp
push
les
xlat
sbb
mov
lret
push
pop
incb
loope
inc
ss
jmp
ljmp
inc
mov
mov
xchg
data16
clc
cmp
xchg
xor
fs
or
and
or
lahf
inc
inc
cli
mov
or
or
pop
stc
insb
inc
sub
scas
cwtl
xor
dec
mov
xor
daa
test
pop
out
or
mov
mov
cmpsb
loop
lock
jg
push
inc
je
sbb
dec
les
cli
jae
jb
mov
jmp
push
in
fcom
test
ja
flds
stos
dec
addr16
aam
sbb
push
jbe
sarl
es
scas
fisttpll
test
xchg
shrb
sarb
jnp
sbb
or
xor
popf
daa
xor
stc
loop
aas
repnz
pop
iret
mov
pop
mov
adc
cmp
insl
stos
sub
cmp
nop
imul
dec
or
popf
hlt
pop
repnz
push
test
mov
mov
pop
push
pop
and
ljmp
pop
and
ja
jmp
jmp
call
in
add
in
lahf
sbb
fldl
mov
scas
sub
mov
jne
arpl
aas
ret
inc
outsb
ret
and
mov
fmull
cmc
ret
cli
lcall
sbb
mov
inc
bound
inc
or
js
mov
lds
jg
fmuls
cli
shlb
push
icebp
int
push
cltd
loope
add
dec
ret
dec
icebp
fidivs
xchg
repnz
out
xchg
rorb
add
push
pop
jmp
xlat
call
or
data16
mov
mov
mov
mov
xchg
nop
mov
outsl
lea
int
sub
pushl
inc
jge
pop
inc
pop
mul
int3
sub
aas
loope
out
adc
xchg
jbe
add
mov
popa
stos
pushf
push
shr
int3
in
mov
sbb
cld
pop
dec
cwtl
dec
shlb
jecxz
cmp
pop
lods
mov
gs
insl
dec
xchg
sarb
xchg
and
jnp
sbb
and
insb
pop
mov
xor
cltd
mov
and
mov
cwtl
dec
xlat
notl
fisttps
fisubs
das
xorb
push
xor
fildl
lock
mov
mov
and
cmp
fldenv
in
mov
pop
push
cmp
lret
shl
je
cmp
cld
pop
push
push
or
jo
aas
jge
inc
jbe
cltd
pop
sbb
aad
fidivl
es
mov
jo
je
lods
je
and
mov
pop
enter
in
cmp
xchg
cli
fldl2e
xchg
lahf
jmp
clc
jne
push
stos
adc
xor
fimull
aaa
outsb
inc
cmc
pop
outsl
lods
xchg
leave
mov
or
push
cmpsb
cld
adc
out
push
sub
mov
sbb
mov
mov
in
add
test
push
pop
insl
dec
aas
out
lahf
sub
jns
insb
sbb
adc
push
inc
pop
mov
mov
pushf
int
rcrb
fldcw
sahf
mov
bound
loopne
pop
pop
popf
inc
adc
fstpl
arpl
push
mov
push
or
mov
ret
mov
ficoml
sbb
imul
mov
in
adc
sub
xor
dec
push
sub
or
jnp
cmp
pop
push
movsb
test
and
shrl
loope
lret
js
dec
push
loopne
xchg
test
bound
repz
jo
popa
js
push
call
mov
inc
mov
sbb
iret
insl
cli
xor
ficomps
or
cmp
cmc
sbb
jg
pop
inc
pop
dec
mov
mov
and
idivb
std
adc
sbb
inc
adc
sbb
mov
push
sbb
in
mov
mov
bound
ror
xchg
xchg
and
adc
pushf
out
cs
mov
pop
imul
inc
xchg
gs
push
mov
and
xorl
add
jbe
daa
in
or
xor
ds
xchg
int
mov
or
pop
mov
stos
cmp
mov
mov
mov
addr16
xor
addr16
sbb
pop
leave
push
pop
push
push
xchg
sub
or
pop
pop
sub
jb
cmpb
xor
in
enter
das
mov
cmc
fucomip
rcl
inc
aad
sub
insl
repnz
mov
pop
or
cmp
in
lock
in
outsl
repz
pop
mov
clc
lret
fninit
inc
jne
mov
enter
leave
adc
inc
jle
stc
or
enter
add
push
stc
aas
test
inc
pop
imul
adc
xchg
jns
scas
sbb
mov
adc
push
mov
insl
std
clc
mov
out
aad
mov
mov
xchg
xchg
mov
sbb
dec
mov
jl
jmp
lods
and
insb
fs
fwait
jnp
pop
mov
mov
pop
or
dec
mov
pushf
sbb
pop
lret
mov
fnstcw
lods
push
sub
sti
decb
sub
out
daa
inc
mov
sub
jns
imul
mov
sbb
adc
adc
sub
out
fildl
mov
or
in
add
cmp
sahf
cmp
pop
cli
xchg
cmp
xor
cwtl
cld
jecxz
pop
push
jge
arpl
in
lret
push
pop
das
ret
mov
jg
or
sub
ficoms
push
data16
adc
mov
push
setl
dec
adc
push
inc
nop
adc
pop
inc
jp
mov
data16
jecxz
mov
lea
or
sahf
int
add
leave
out
adc
or
mov
sbb
sahf
pop
mov
aas
push
in
stos
test
aam
adc
dec
add
mulb
popf
test
mov
fldenv
push
int3
test
jg
sahf
jge
inc
sub
stos
icebp
sub
cmp
sub
dec
cmp
repnz
es
lcall
sub
test
add
jg
sub
and
sub
mov
je
ret
cmp
cmp
sbb
pop
push
adc
fs
sub
mov
test
sbb
pop
cltd
int3
jne
pop
dec
mov
lcall
mov
sar
shll
fidivrl
mov
adc
or
push
add
mov
dec
sub
icebp
movsb
pop
inc
scas
inc
cmpsl
mov
outsl
xchg
pop
fwait
out
divl
xor
jmp
push
mov
mov
fcmovu
fistps
je
into
jae
push
cltd
sbbb
dec
mov
mov
call
subl
sti
nop
push
std
xchg
sbb
outsb
sbb
and
jnp
mov
sbb
push
and
mov
xchg
sbb
mov
mov
stc
and
jmp
or
inc
negb
adc
jecxz
ss
push
lret
call
outsl
ljmp
insl
ret
loopne
ret
ja
xchg
popf
mov
mov
pop
mov
mov
in
jle
dec
jae
test
test
es
aas
insb
dec
xlat
cmp
fstpt
xor
push
pushf
test
adc
divl
dec
dec
adc
cmpsl
lock
outsb
push
inc
fcomps
xorb
adc
cmpsl
or
cmp
mov
adc
push
sbb
xchg
and
imul
ret
and
inc
jmp
fisubrl
dec
xor
and
inc
aad
or
sub
iret
leave
mov
jmp
ja
push
int3
daa
cmp
pop
es
cmp
sbb
sarl
cmpsb
fdivl
mov
mov
outsl
popf
mov
mov
in
popf
leave
inc
popf
ret
and
das
mov
sub
pop
scas
data16
xor
stc
cmc
or
cmc
outsb
push
imul
call
adc
rolb
jae
jge
xchg
inc
lahf
push
jbe
or
hlt
scas
ret
cmp
test
leave
push
stc
hlt
jecxz
lahf
mov
pusha
andb
das
iret
xlat
dec
pop
les
pop
movsl
or
in
push
imul
or
dec
cmp
or
mov
jmp
les
add
inc
aaa
aam
call
repnz
sbb
or
mov
sbbl
daa
das
pop
repz
shl
outsl
inc
dec
mov
ror
lret
dec
adc
lahf
push
call
pusha
ss
jmp
mov
or
sahf
and
jp
push
fwait
push
adc
orb
push
and
add
sbb
idivl
fmull
loop
outsb
fsts
fidivs
pop
pop
dec
fsubs
pop
adc
mov
lret
cmp
flds
jecxz
jecxz
lods
inc
mov
sub
rol
je
jb
repz
xorl
sbb
adc
mov
fisubrs
dec
inc
adc
fistl
es
lret
shrl
inc
push
fcoml
movb
or
stc
shr
fistps
cltd
pop
adc
stc
std
cmpsl
sub
dec
out
sub
shll
lods
leave
imulb
or
xor
cmp
aas
xchg
mov
push
mov
flds
adc
aas
xor
fsubs
cmp
pop
inc
jmp
or
dec
cmp
and
int3
hlt
add
pop
sahf
stos
outsl
stos
sbb
jle
pop
cmp
cmp
call
push
push
mov
push
jns
pop
fdivs
adc
jbe
movsl
enter
sbb
cmp
mov
frstor
mov
popa
or
dec
mov
mov
scas
scas
cmovp
sbb
mov
add
mov
imul
repz
inc
inc
mov
sbb
and
sbb
dec
push
xor
xlat
pop
xchg
mov
dec
push
outsl
aaa
ret
mov
cmp
pop
push
dec
jae
stos
cld
pop
cwtl
call
lea
mov
fsubrl
or
add
and
das
fcomps
cli
push
testb
mov
cmpl
cmp
cltd
mov
fdivl
icebp
outsl
dec
repnz
pop
int3
fidivrs
push
jae
xor
sub
sbb
jmp
fldcw
mov
sub
mov
inc
loop
push
js
mov
mull
jae
repnz
jl
scas
aad
cli
in
sub
inc
dec
and
daa
jae
fistps
imul
insl
jno
pop
mov
gs
scas
push
jl
lds
icebp
pop
imul
fistpl
ja
adc
sbb
adc
mov
decl
inc
cmp
xor
push
mov
jmp
cli
loopne
or
xchg
mov
inc
xor
xchg
sbb
lahf
push
push
pop
lcall
insb
and
sub
jno
xor
push
push
fldenv
aas
loopne
flds
push
mov
loop
dec
push
rcll
test
divb
arpl
lret
cmp
lods
push
mov
cmp
xchg
popf
lods
in
push
or
inc
out
loope
daa
xlat
add
cld
jecxz
ja
lea
adc
sti
cmp
idivl
sub
adc
pushf
test
mov
mov
mov
addr16
jmp
mov
push
daa
imul
and
ja
push
or
add
jae
dec
iret
jbe
fmuls
jns
int3
sub
scas
inc
popa
clc
lods
call
or
xor
addr16
test
repnz
lcall
movl
push
aam
cld
pop
cmp
je
outsl
ljmp
pop
mov
xchg
mov
jbe
and
xchg
movsl
fadds
sub
ljmp
xor
jae
mov
mov
repnz
xor
mov
dec
mov
xchg
mov
xchg
add
popa
fwait
inc
dec
int
js
repz
jb
pop
jp
and
dec
cmp
xchg
outsb
cmp
mov
cwtl
sti
dec
jo
cmp
mov
ret
mov
femms
jae
xlat
push
mov
and
cmpb
pop
fmuls
jno
dec
test
mov
es
sti
sahf
xchg
js
aad
rorb
inc
cmp
push
les
inc
add
nop
inc
jg
pop
repz
xchg
cltd
mov
das
pop
pop
loop
pop
push
mov
or
cmpb
aad
lcall
movsb
push
sub
push
inc
lods
std
addr16
inc
mov
cs
outsb
ljmp
ds
sub
sahf
jno
lahf
js
or
test
fcompl
scas
es
sub
dec
das
js
cmp
lret
rolb
pop
fnstcw
mov
in
add
dec
mov
xlat
into
jle
pusha
cmp
jmp
sub
jbe
mov
jge
mov
out
push
out
push
mov
movl
sbb
sti
push
aad
lret
sbb
pop
cmpsb
dec
mov
sbb
es
aaa
inc
mov
shrl
addb
in
arpl
stc
lahf
ja
jg
stc
hlt
clc
cli
test
lret
mov
pushf
cmp
dec
adc
lea
ret
inc
fadds
shlb
push
pushf
xchg
mov
xlat
addr16
popl
and
lods
divb
or
sbb
push
mov
lods
cli
jae
nop
hlt
nop
xor
hlt
aaa
stc
icebp
sub
xor
adc
scas
mul
add
insb
inc
and
push
fisubrl
sub
popf
dec
mov
addb
ret
sbb
cmp
jne
add
mov
sub
daa
inc
call
push
jne
out
push
jne
xchg
aaa
push
jnp
xchg
insl
sbb
out
dec
test
mov
ret
insb
bound
ds
addr16
sub
xor
sub
adcl
dec
lods
cmp
cld
insl
pop
dec
pusha
pop
pop
movsb
ret
dec
sbbl
push
out
aas
sbb
lds
pop
imul
inc
mov
dec
pop
shr
push
push
jo
ret
adc
lds
pop
lock
ret
xchg
push
or
lds
ret
add
xchg
out
insl
popa
outsb
pop
flds
lds
mov
push
cmp
imul
jb
cmp
mov
xor
movsl
mov
mov
add
pop
loope
arpl
dec
dec
aam
xchg
stc
cmp
aam
sub
pop
rcrb
lret
mulb
lods
aam
push
and
out
pop
repz
cmpsb
mov
iret
nop
cmp
loopne
sbb
xchg
and
jno
test
xchg
add
in
mov
and
cld
lret
xor
fs
ds
imul
add
cld
mov
popa
sarb
inc
negb
sub
jnp
jmp
cmpsb
or
lods
add
mov
sub
dec
inc
mov
xchg
fnstenv
add
adc
fdiv
je
mov
loope
xchg
or
and
mov
in
xchg
and
pop
aas
rep
aam
loope
dec
add
addb
roll
cmpsb
enter
stos
js
pop
mov
xor
jno
js
xor
adc
out
jge
sub
add
aaa
mov
dec
shrb
dec
xor
stc
pop
xchg
push
jp
test
mov
mov
out
es
jmp
lcall
jbe
xor
cltd
sbb
mov
mov
call
cld
or
ffree
test
xchg
fs
jge
xchg
aad
imul
inc
fstpt
stc
xchg
and
test
lock
in
xorb
shl
sqrtps
mov
cmp
dec
inc
and
aam
fwait
push
adc
xchg
sbb
mov
push
xchg
jmp
mov
dec
add
pop
inc
faddl
pop
cli
jo
test
sbbl
es
popa
mov
test
adc
push
mov
jmp
lea
insb
loop
sub
into
push
jo
neg
lahf
xchg
iret
sbb
dec
push
scas
insl
sub
cmp
mov
sbb
pop
push
or
push
cmc
out
rcr
cmc
outsb
or
movsb
out
or
mov
imul
add
insl
mov
add
sub
xchg
xor
and
js
addb
bound
or
sub
xor
das
pop
and
mov
adc
inc
cmp
cmp
pop
cmc
jecxz
cwtl
in
cmpsb
fisttpl
out
dec
mov
andl
dec
inc
cli
test
add
push
or
mov
in
lea
cmp
loopne
inc
and
push
cmp
fimull
xchg
daa
inc
push
mov
test
lcall
push
shll
nop
testb
mov
xlat
mov
mov
in
jecxz
mov
lahf
pop
in
leave
int3
mov
and
arpl
loop
push
jecxz
es
xor
pop
mov
cmp
mov
jb
lods
mov
pop
inc
pop
sub
mov
sub
add
inc
insb
cmp
les
popa
es
aaa
subl
jae
mov
mov
fiaddl
xchg
pop
ja
test
addr16
fdivrl
push
insl
call
inc
mov
or
iret
fldcw
jecxz
lds
lods
sub
push
out
jg
ja
je
fwait
popa
sbb
mov
mov
jg
cmovs
in
xchg
fisubrs
xor
cmp
popf
mov
mov
mov
mov
aam
cmc
out
cs
and
adc
or
and
aam
mov
repz
cmp
fbstp
mov
pop
addr16
adc
lahf
jge
push
xchg
pusha
jg
dec
mov
cmpsb
aad
xlat
out
gs
fmul
mov
xorb
pop
addr16
dec
scas
xchg
jne
stos
sbb
setle
mov
mov
pusha
lock
inc
repz
push
mov
lods
and
imul
lret
cli
rorb
mov
mov
loope
mov
repnz
mov
push
mov
ja
in
push
xchg
aam
into
xorl
popf
and
push
stc
jnp
loope
stos
lds
inc
push
jp
cmc
sbb
aad
xchg
cmp
in
into
insb
stos
in
addb
mov
cmp
mov
call
loopne
add
in
jnp
jbe
jle
enter
add
stc
mulps
or
pop
std
andb
stos
xor
loop
jg
ret
jle
repz
xorb
lret
sbb
lods
loopne
push
cwtl
loopne
int3
lcall
iret
repnz
loopne
sti
cs
push
adc
and
fsubs
dec
test
cld
push
fidivrs
fs
aas
fimull
xor
push
adc
sbb
push
jmp
pop
les
pop
xchg
test
cmp
xchg
sub
mov
aad
push
xchg
orl
pop
add
dec
cmp
mov
pop
mov
ret
mov
sbb
xchg
scas
insl
or
and
into
cltd
cmp
or
popa
mov
mov
jnp
je
lods
sub
adc
cmp
repnz
jmp
adc
sub
shr
mov
outsb
rcll
popf
sub
xchg
jbe
mov
repz
xchg
mov
jg
lods
push
call
mov
mov
fwait
sti
mov
aas
push
insl
cwtl
and
es
out
fs
jmp
sub
mov
push
adc
sbb
or
add
pusha
dec
adc
pop
push
in
xor
push
xchg
icebp
aad
aas
adc
fcoms
xor
fdivrl
xor
mov
lea
jns
push
inc
or
sbb
fdivr
jns
push
call
jl
lds
sub
sub
icebp
inc
popf
cmpsl
repnz
fistl
pop
into
xlat
stc
or
aaa
in
add
xor
out
inc
cmpsb
push
lods
mov
and
test
call
cmp
dec
iret
dec
xchg
and
fsubrl
in
ljmp
ljmp
push
cltd
xlat
mov
ljmp
loop
jmp
lret
lods
cmpsl
add
sub
dec
bound
pop
addr16
outsl
and
jecxz
inc
push
push
mov
add
xchg
sub
enter
hlt
inc
daa
push
fstpt
mov
rolb
scas
aam
jns
adc
mov
dec
or
mov
cmp
cmp
shlb
lcall
rolb
cwtl
sarl
jo
push
xchg
hlt
ljmp
mov
aam
test
mov
sbb
pop
in
stos
arpl
pop
outsb
inc
push
jl
pop
push
adc
les
xchg
mov
inc
add
incl
xor
out
test
mov
add
xchg
loop
insl
jg
pop
push
mov
bound
push
sahf
or
push
add
jmp
jp
add
pop
mov
js,pn
mov
sbbb
pop
jl
jmp
jl
cmp
pop
jge
dec
call
push
test
call
out
aas
fwait
xor
sub
enter
mov
dec
movups
cmp
fcomps
adc
push
mov
push
sbb
xlat
mov
addr16
int
sbb
out
adc
dec
loope
arpl
xchg
xor
in
adc
les
xor
adcl
mov
and
dec
out
mov
cmp
push
frstor
push
filds
push
rolb
or
jnp,pn
test
adc
fwait
push
pusha
inc
cmpb
and
aad
stos
test
sarl
shrb
or
imul
or
fwait
jmp
daa
add
enter
lret
test
dec
sub
xor
xchg
dec
mov
sub
in
mov
mov
dec
bound
mov
cmpsl
repz
shl
mov
add
rolb
push
lret
sub
cmp
lds
test
mov
leave
dec
dec
cmpsb
jge
jge
sti
mov
fwait
cltd
push
mov
imul
enter
insl
xchg
cltd
push
push
dec
loope
cltd
imul
outsl
inc
nop
sub
adc
cs
add
out
mov
sub
imul
stc
mov
mov
subb
mov
xor
aaa
test
push
mov
xchg
clc
outsb
into
jecxz
test
jmp
cmp
popf
mov
cmpsb
sub
mov
fiaddl
and
stc
fimull
sub
or
dec
add
aaa
ss
push
pop
in
out
dec
adc
adc
hlt
mov
jmp
inc
ljmp
fstl
repz
lahf
dec
lea
stos
lcall
adc
inc
std
inc
lea
mov
push
pop
jmp
jnp
loopne
xor
xor
in
inc
cli
stc
int3
jb
aaa
daa
mov
popa
cmpsl
pushf
cmc
push
gs
add
adc
jmp
and
cmp
adc
lahf
mov
scas
out
xchg
xor
cltd
test
stc
mov
mov
xor
sub
gs
fisubl
dec
sub
insb
and
mov
dec
inc
out
icebp
mov
jp
jmp
imul
and
cli
push
jne
mov
outsb
sub
and
dec
mov
mov
dec
pushl
inc
mov
dec
in
or
and
jle
aas
pop
test
add
sub
fistps
inc
das
cmp
xchg
lcall
imul
add
jne
mov
mov
fdivr
mov
dec
inc
aam
jp
lock
push
sub
dec
pop
dec
push
stos
data16
push
test
jmp
xchg
xor
add
cmp
add
enter
cmp
mov
fisubrl
nop
pop
jl
and
ds
lahf
leave
mov
adc
cmp
adc
pop
mov
cltd
fcom
sbb
inc
sub
and
scas
or
mov
lret
adc
lea
das
je
add
add
push
mov
data16
xchg
cmpsl
jns
into
bswap
test
outsl
mov
cmc
and
fmuls
stos
test
mov
mov
ja
clc
addl
sbb
xor
lret
outsb
movsb
dec
xchg
aam
test
dec
and
sub
in
mov
cwtl
push
xor
push
dec
test
enter
dec
cmc
lock
sbb
mov
cld
push
adc
stc
lods
jb
test
inc
push
dec
xchg
sbb
orl
sbb
fwait
xchg
xchg
sub
and
add
ret
cs
lock
rcrl
xor
or
mov
sbbb
push
test
mov
xor
lea
lcall
roll
jecxz
test
scas
loopne
xchg
adc
inc
in
lods
sbb
sub
mov
cmc
xchg
test
mov
and
adc
jns
xor
rcl
xor
dec
adc
xchg
sahf
dec
stos
es
push
dec
cmp
sub
jns
test
push
stos
mov
lods
int
js
xor
xchg
roll
pop
and
sti
lds
mov
dec
outsb
push
insl
stos
call
in
xor
mov
rcrb
test
push
jne
xor
inc
xchg
stos
sub
daa
hlt
pop
xor
and
divb
pop
loope
in
and
pop
aam
daa
int3
lahf
mov
mov
mov
jg
or
jl
repnz
lret
leave
lods
fstp
subl
sbb
xchg
movsl
inc
aam
jbe
dec
out
sahf
sub
push
rorb
inc
mov
movsb
mov
push
cli
shrb
int3
cmpsb
jmp
arpl
fsubl
cld
hlt
xchg
mov
fcomi
and
cwtl
imul
ss
or
out
mov
cmp
ja
xchg
stos
rcrb
jg
jno
adc
leave
mov
xor
scas
pop
dec
and
mov
insb
mov
cmc
pop
ret
movups
inc
xchg
sbb
xor
xchg
mov
idivb
mov
ret
push
push
adc
cltd
adc
mov
fs
sbb
or
adc
outsl
push
adc
inc
add
add
mov
dec
dec
imul
inc
int
call
jge
jmp
xor
imul
decb
mov
jo
and
pop
sub
mov
pop
cs
xor
or
mov
jne
fiaddl
ds
xchg
or
shll
aam
cli
data16
aas
sbbl
inc
add
or
xchg
or
test
mov
cmp
mov
cmp
mov
push
add
sti
stc
hlt
loopne
lcall
cltd
pop
jns
cs
push
xchg
mov
fimuls
add
dec
inc
js
push
aaa
std
mov
test
sub
lcall
ds
sub
jns
addr16
cmovbe
or
xor
fucomip
addr16
insb
mov
mov
fimuls
sub
xchg
dec
dec
fnsave
scas
insb
jno
add
mov
sub
aam
mov
jne
xor
insb
fdivs
mov
rorl
out
lcall
jmp
xor
in
mov
sbb
aad
jl
dec
ficompl
lahf
jns
inc
sub
push
jp
aas
mov
outsl
mov
hlt
jbe
mov
push
xchg
movsl
mov
shll
into
sbb
push
or
xchg
inc
push
push
decb
or
daa
jo
es
scas
cmpb
movsb
lock
mov
pop
dec
pop
mov
mov
int3
loopne
inc
pushw
sbb
arpl
xor
xlat
into
cmp
lea
jb
loope
adcl
inc
mov
je
les
outsl
pop
popa
jge
xor
jbe
xchg
mov
fdivs
xor
stc
cmp
xchg
cltd
cltd
mov
outsb
xchg
adc
mov
popf
adc
mov
adc
jns
and
sub
pusha
and
push
mov
and
xor
or
pop
daa
testl
mov
shlb
pop
cmp
cli
pop
in
adc
jae
push
mov
jle
inc
ficoml
or
mulb
rcrb
gs
mov
inc
test
movsb
jns
lea
cmp
dec
insb
sub
pop
mov
filds
int
mov
stos
mov
add
push
sbb
mov
into
pop
or
xorl
lods
stos
aaa
call
add
fwait
popa
ja
xchg
cmp
adcl
insl
xorl
cld
mov
xchg
fisttps
mov
bound
mov
test
aad
pushf
cmp
xor
sub
jmp
mov
ja
inc
in
xor
xchg
fistpl
shr
cmp
jns
je
push
xor
mov
cmp
enter
orb
dec
test
jg
testb
xchg
addr16
mov
xlat
icebp
pop
es
push
imul
jecxz
into
inc
push
enter
lods
adc
cmp
stos
xchg
test
pop
push
int
push
cmp
divb
out
rcr
pop
fldcw
lods
int
clc
test
mov
mov
push
arpl
push
mov
push
cmp
cwtl
movsl
mov
mov
inc
add
popf
sub
movsl
popa
pop
pop
mov
lods
jns
add
daa
adc
mov
adc
idivl
hlt
xchg
insl
lods
push
push
mov
aaa
mov
scas
add
es
adc
xchg
ljmp
icebp
sbb
xor
xchg
loopne
mov
mov
mov
stos
shll
or
enter
jmp
adc
stos
lds
inc
jbe
push
adc
mov
jg
data16
xchg
xchg
lcall
push
dec
xor
int3
pop
jns
andl
mov
jl
or
in
adc
dec
mov
hlt
aaa
push
lock
jns
outsl
mov
aam
push
mov
enter
push
scas
mov
mov
push
inc
xor
clc
push
push
test
add
or
jl
push
sbb
rorb
inc
mov
shlb
cs
fistl
mov
xor
cli
ffreep
lea
jb
pop
jmp
aam
dec
mov
dec
out
imul
pop
mov
fldl
mov
outsb
or
cmp
cld
mov
loopne
sarl
cmp
stos
adc
pop
cmp
mov
mov
fstpl
xchg
sarl
mov
popa
pop
and
inc
pop
mov
xchg
push
mov
test
mov
roll
addr16
xor
jp
mov
jne
push
cmp
push
aad
or
call
incb
push
push
pop
into
mov
test
sbb
pop
popa
ja
jmp
cmp
cmpsb
inc
push
adc
test
mov
mov
int3
pop
mov
or
subps
fdivrs
sub
push
rorl
pop
lea
push
dec
cli
lods
cmp
vshufpd
ds
daa
cmpsb
sbb
adc
mov
out
xchg
movswl
les
lret
and
inc
in
jbe
pusha
mov
lock
push
cli
adc
add
push
dec
dec
ljmp
pop
pusha
mov
pop
xorb
add
fldt
mov
scas
bound
incl
pop
jecxz
dec
xchg
std
push
xchg
push
fmulp
xchg
xor
sbb
lret
insb
repz
cmp
pop
dec
add
adc
xchg
and
inc
stos
ja
pop
icebp
aam
inc
jo
xchg
mov
adc
inc
not
inc
push
cwtl
test
xchg
and
sub
mov
lea
or
mov
mov
and
jecxz
insb
jp
pop
loope
sub
gs
cld
je
dec
call
sbb
xchg
sbb
mov
lods
mov
and
jno
sub
call
inc
in
push
sub
mov
mov
mov
sbb
es
in
cltd
and
xchg
mov
mov
adc
cmp
or
mov
pop
daa
mov
inc
mov
cmp
insl
aaa
lret
pop
dec
into
sub
ja
das
jb
pop
pop
je
mov
or
sbb
sbb
inc
pop
xchg
stos
das
pop
xchg
dec
addr16
adc
into
fldl
xor
stos
inc
cmp
lret
adc
adc
andl
or
jl
shr
dec
mov
sub
mov
gs
pop
ja
pop
dec
or
aas
out
clc
fwait
xor
out
or
icebp
movsb
shlb
lds
cmp
push
fisubrl
fwait
scas
mov
pusha
push
imul
jne
sti
lcall
ds
jg
insl
cwtl
decb
lods
sarl
js
in
dec
enter
aam
int3
xchg
cmc
mov
shl
adc
mov
std
mov
loopne
stos
cld
ret
mov
out
push
test
jae
shlb
xor
in
push
sbb
loope
push
clc
or
inc
inc
pop
arpl
push
dec
ret
aad
jp
pop
adc
daa
jae
xor
sarl
lahf
cmp
cmp
popf
add
or
xchg
adc
test
sti
loope
xchg
sahf
aad
mov
jp
mov
pop
fsubr
push
mov
fcmovb
or
sub
xchg
pop
pop
cltd
shr
and
je
out
rorb
xchg
add
jg
pop
sbb
and
inc
fstp
push
and
adc
adcl
add
mov
pusha
jmp
negb
movsl
cmpsb
mov
mov
js
mov
sarl
mov
movb
test
and
push
push
mov
jbe
xor
jbe
xor
jecxz
mov
jnp
or
mov
sbb
or
pop
shrd
js
mov
mov
cmp
or
sub
ljmp
jae
stos
bound
push
cs
adcb
stc
test
out
inc
jb
out
icebp
pushf
dec
aas
scas
repnz
xor
sbb
mov
or
ret
mov
test
call
pop
sub
mov
sub
xlat
adc
add
lret
sub
hlt
sub
and
mov
mov
push
sub
imul
cmp
push
std
aad
xchg
xor
aaa
andl
insb
mulb
xchg
cmp
in
fstp
data16
fsubrs
mov
repnz
es
cs
in
mov
addr16
inc
sub
mov
pop
sub
push
add
push
shl
add
or
cmpsl
push
sbb
scas
mov
gs
or
cmp
sbb
aam
add
clc
sub
push
pcmpeqb
pop
pop
push
or
shll
lea
cmc
lahf
aas
jecxz
out
mov
add
push
cmc
inc
mov
mov
testb
popa
sub
out
dec
pop
xchg
rcrb
jbe
sbb
icebp
aam
mov
roll
pop
jl
push
dec
xor
cltd
add
push
repz
lds
repz
test
cltd
flds
cs
inc
adc
lods
jb
mov
out
sub
jmp
add
push
loope
xor
mov
push
add
or
xchg
arpl
pop
push
jmp
pusha
ficomps
ret
xor
lods
adc
push
nop
ljmp
xor
pop
lcall
xchg
fisubrs
mov
and
and
adc
cmp
repnz
jp
sbb
push
jb
call
ja
xor
addr16
aas
xor
sub
mov
insb
cmp
mov
cwtl
and
shl
xor
mov
cli
pop
cmp
pop
or
mov
loope
dec
pop
dec
xor
jecxz
xchg
jp
imul
and
cmp
push
mov
inc
xchg
adc
sub
es
std
or
adc
xchg
pop
popa
xor
jmp
sub
std
xor
aad
xchg
lret
ret
sbb
cmp
hlt
xchg
push
fdivr
test
ja
popf
push
cmp
jg
fnstcw
insl
sub
mov
stc
push
cltd
mul
je
out
idivb
lret
pusha
pop
push
lcall
aad
xchg
mov
rcrb
pusha
daa
fadds
mov
mov
add
js
push
add
loopne
push
jmp
and
xor
xchg
fists
inc
clc
les
adc
jl
inc
cltd
imul
jae
arpl
dec
pusha
fwait
jbe
pop
bound
stos
xchg
int3
adc
stc
sbb
pop
les
push
daa
ljmp
pop
hlt
sub
das
pop
popa
iret
test
sub
les
push
in
out
add
cmp
push
test
popf
push
hlt
lods
cmp
aas
mov
mov
dec
stos
out
in
inc
xchg
cwtl
outsb
sbb
imul
push
aas
mov
xor
pop
outsl
pop
adc
cmp
dec
push
daa
push
icebp
fs
nop
stc
sbb
and
or
dec
pop
orl
dec
pop
dec
push
dec
fcmovb
inc
cltd
and
push
shr
add
movsb
hlt
leave
fcomps
cmp
inc
jns
xlat
out
inc
mov
leave
xchg
push
ja
xor
xchg
in
mov
xchg
pop
cmc
mov
xchg
xchg
fistl
rcr
scas
call
pop
outsb
push
mov
pop
hlt
pop
sti
jmp
test
movsb
sahf
loop
push
pop
fwait
pop
sahf
inc
cltd
jle
test
lcall
ret
adc
jns
mov
repnz
sbb
push
push
pop
adc
pop
mov
dec
sbb
sbb
test
and
cwtl
xlat
pop
lret
fildll
adc
insl
lods
fmul
outsl
roll
icebp
addl
vrsqrtps
daa
inc
push
test
pop
or
bnd
pop
sub
in
and
inc
shll
iret
shlb
mov
in
dec
ss
inc
or
inc
cmpsb
add
ds
rep
add
mov
loop
xchg
dec
shrl
dec
jl
popf
ror
dec
xchg
mov
or
lea
jne
jno
xchg
inc
cld
sbbb
call
mov
push
sbb
ss
test
sbb
jg
cmp
in
cltd
push
pop
lahf
mov
loope
xchg
in
es
je
lret
push
arpl
push
lods
fs
xchg
or
decl
rolb
mov
or
adc
test
enter
ret
pop
out
jne
ljmp
jb
outsb
int
mov
vpaddsb
out
mov
lret
out
out
jnp
lcall
pop
xor
dec
xchg
cld
sbb
ja
mov
inc
xchg
call
scas
and
mov
ja
mov
sub
mov
add
push
adc
ffree
pop
sub
dec
push
inc
popa
sbb
cmp
ds
push
dec
and
jle
jnp
xor
jbe
xchg
mov
pushf
bnd
pusha
iret
aad
xor
sub
sub
clc
jecxz
inc
sbb
hlt
call
int3
and
cwtl
outsl
sbb
ret
jo
fcmovu
pop
sahf
adc
loopne
push
stos
inc
or
mov
pop
fidivrs
sahf
dec
aas
or
mov
or
fistl
xchg
popa
mov
shrb
in
bound
push
rclb
inc
or
pop
nop
pushf
mov
scas
mov
outsb
and
mov
dec
test
orl
das
sbb
inc
jbe
aam
test
jb
sbb
inc
pop
xor
loopne
cmp
sbb
out
and
js
ret
mov
es
xlat
pushf
bound
repnz
and
int
pop
pop
mov
out
mov
jmp
cmp
xchg
clc
fimuls
xchg
in
inc
out
xchg
push
popa
iret
sub
lods
jl
or
and
and
std
lahf
or
sub
push
or
sub
scas
addr16
sahf
jno
xlat
fistpl
xor
ljmp
pcmpgtd
inc
push
loope
mov
insb
test
sbb
sbb
bound
adc
fidivrl
cmc
dec
inc
pop
cli
jmp
shlb
inc
jae
sub
mov
fldt
inc
loop
bound
and
push
jge
fistps
leave
pop
imul
lret
mov
inc
shll
mov
mov
cmp
and
nop
add
dec
out
push
repz
cmp
js
adc
ss
jno
or
cmpsb
xchg
leave
subb
pop
or
add
add
push
test
cmp
imul
mov
add
mov
cmp
sub
call
jmp
jecxz
push
push
lock
jecxz
xchg
stos
or
mov
pop
das
test
mov
add
xchg
int3
ss
js
sub
dec
push
adc
out
ret
neg
xchg
test
bound
sti
xor
je
pop
or
jnp
divl
pop
insb
int
pusha
xor
pop
jl
jo
negw
push
lods
popf
loopne
fnsave
loopne
stos
jp
xor
fcmove
adc
leave
test
loope
loope
or
xchg
xchg
inc
push
xor
insb
xchg
fidivrs
xchg
cmp
add
and
add
hlt
push
and
mov
stos
out
push
insb
push
ja
pushf
daa
fwait
inc
mul
ja
ret
mov
fisttps
inc
xchg
nop
dec
mov
jg
mov
push
pop
movsl
push
pop
jl
aas
sbb
xlat
into
pop
test
cmp
gs
dec
xchg
push
and
call
cmp
push
addr16
and
les
mov
dec
in
ljmp
addr16
pusha
icebp
mov
or
in
mov
fs
pop
xor
outsb
shlb
pop
push
jnp
repnz
push
mov
test
ja
cmp
int3
inc
fnsave
jg
or
lret
aad
into
dec
test
jb
lds
jnp
push
push
out
gs
addr16
cld
movsb
sub
push
fimull
hlt
jl
ffreep
cmp
inc
or
dec
int
lods
std
popf
bound
adc
mov
cmpsl
push
fld
push
in
cli
add
add
outsb
enter
dec
call
test
xchg
popf
loop
into
pop
movsl
std
aam
movsb
push
sahf
cmpsb
dec
pop
push
add
jmp
pslld
icebp
lea
mov
mov
jecxz
adc
pop
js
test
fisttpll
popf
inc
ljmp
clc
fidivrl
cmpsl
fcmovbe
cmc
mov
addr16
add
adc
push
insb
inc
sbb
fisttpll
imul
push
push
xor
push
mov
dec
int3
or
push
ljmp
mov
mov
and
fstpl
aam
pop
lret
jp
cmpxchg
sub
lahf
xchg
arpl
mull
pusha
pop
repnz
aam
sub
dec
int
ret
mov
mov
movsb
xchg
dec
movsb
ret
and
int
xchg
jg
fs
popa
xchg
xchg
pusha
pop
cmpsb
fdivr
imul
sub
popf
and
cmp
xchg
or
mov
ja
jnp
jle
inc
jns
or
andl
ss
mov
pop
repz
aad
adcb
mov
lods
push
popf
icebp
in
fcoml
xor
or
testl
icebp
xchg
sub
xchg
and
lods
into
sbb
das
outsl
mov
fimuls
ss
mov
xchg
lea
pop
ljmp
adc
xchg
pop
jns
pop
sub
adc
rorb
es
push
pop
jno
divl
sub
cmp
push
outsl
das
or
imul
lret
sub
test
or
cld
mov
xchg
divb
sbb
or
lret
lock
mov
dec
test
daa
mov
fcomip
movsb
movb
iret
adc
xor
in
adc
sbb
out
sbb
sub
scas
inc
dec
imul
aaa
sti
scas
xor
adc
jb
test
test
lcall
cltd
iret
mov
add
ja
or
ss
stc
add
std
movsl
adc
adc
jmp
insl
repnz
mov
lret
orl
ja
mov
loopne
mov
push
mov
fisubl
aaa
nop
mov
test
mov
or
bound
hlt
icebp
mov
addb
and
sbb
test
icebp
add
mov
and
insb
sub
loopne
xchg
sarb
std
and
sub
adc
daa
ror
xchg
jmp
push
mov
sbb
loope
add
pop
ret
jl
push
sbb
repz
xor
in
cmc
jne
mov
add
rcrl
dec
push
mov
pusha
xchg
jae
out
negb
mov
sbb
mov
add
fdivs
aad
xchg
mov
mov
lahf
out
scas
sbb
loopne
sub
mov
and
call
test
lods
data16
adc
xchg
xchg
xor
out
mov
inc
sbb
xor
fcomps
xor
push
push
add
xor
test
cmp
mov
pusha
sub
nop
nop
and
xchg
loop
imul
jnp
or
ret
xchg
iret
imul
ljmp
mov
testb
jg
jae
pcmpgtd
cmp
fcmovu
adc
fists
stos
lods
popf
arpl
mov
push
iret
cmpsl
movsb
in
mov
sub
or
dec
icebp
add
aaa
das
pop
mov
subl
jmp
and
push
mov
aas
adc
jae
mov
test
mov
repz
inc
rcrb
out
es
ljmp
cwtl
jle
into
insl
pop
and
push
ljmp
std
call
setno
insl
push
das
mov
sub
int
mov
aad
lds
push
loope
cmp
sbb
mov
ss
adc
sub
out
push
ficoml
sbb
or
mov
pop
push
xlat
pop
jnp
sbb
lcall
cmp
clc
pusha
inc
and
into
fiaddl
insb
inc
sti
add
jbe
xor
lea
in
jae
mov
fstpl
push
lods
push
ror
inc
cmp
xchg
inc
sbb
notl
push
xlat
mov
sbb
fldcw
pop
mov
dec
mov
inc
stos
add
sahf
jne
lock
in
adc
ret
iret
dec
xchg
clc
xor
out
sbb
mov
and
out
cmp
lods
jmp
inc
loope
repnz
jo
and
mov
cltd
push
ljmp
mov
ret
dec
sub
test
sub
mov
add
sub
xor
bound
dec
pop
aad
insb
jmp
aaa
push
pop
cmp
in
pop
dec
les
mov
sub
mov
push
adc
repnz
insl
ret
dec
mov
jo
and
mov
push
sub
jge
cmc
mov
icebp
test
in
mov
aaa
sbb
out
popf
scas
mov
mov
xorl
std
and
movsl
and
pushf
lods
xrelease
ret
push
lret
int3
adc
push
add
mov
mov
jbe
daa
mov
jge
rolb
mov
decb
scas
sbb
jle
sti
addb
sahf
cmp
stos
lods
loopne
pusha
call
sub
lret
and
ljmp
movsl
mov
jecxz
lock
xor
icebp
mov
leave
push
fsubrs
push
mov
lcall
adc
xchg
fsubrs
xor
cwtl
cmp
rolb
cld
cmpsl
cltd
add
scas
lds
repz
in
int3
sbb
pop
out
sbb
and
xlat
dec
push
mov
lods
ret
sbb
xchg
xor
popf
test
mov
fstl
aas
rcll
mov
xor
and
lods
sbb
push
cmc
mov
call
inc
imulb
ja
fisubrl
scas
imul
pusha
sub
pop
ds
cmp
mov
push
mov
pop
adc
dec
push
clc
mov
insl
xchg
popf
pop
fcmovu
out
mov
xlat
movsl
mov
mov
and
into
pop
dec
push
add
jo
jne
es
mov
lock
mov
inc
clc
stos
xchg
or
ss
sbb
es
pop
dec
cmp
pop
mov
sub
xchg
lcall
mov
xor
and
add
pop
fistps
mov
jmp
leave
xor
ljmp
lods
test
pop
into
in
jge
lret
sbb
out
test
sub
adcl
cmp
cld
mov
lock
fsubrs
mov
mov
cltd
movb
mov
inc
adc
roll
and
mov
mov
out
aam
fsubrl
testb
int3
xchg
popf
inc
mov
in
xlat
movsb
sbb
movb
bts
lcall
lds
test
push
iret
xor
sub
mov
sub
shl
add
enter
daa
pop
out
inc
in
jae
inc
or
aaa
inc
rolb
push
testb
faddl
cmpsb
repnz
jns
std
pop
std
cmp
scas
push
sub
dec
test
or
popa
pop
and
mov
daa
dec
mov
or
cmp
fidivrl
or
mov
into
xor
aas
cwtl
loope
mov
popa
sarb
jb
sahf
dec
aas
gs
xor
test
jmp
fmulp
ja
jp
pop
and
mov
in
lock
popa
mov
movsb
imul
ret
dec
push
pop
dec
cld
loope
iret
aam
lea
jb
lahf
loop
jo
fwait
jge
inc
push
adc
fsubrl
stos
aas
pop
pop
int
enter
movsl
fsubrl
xchg
jge
add
imul
addr16
jb
sub
jge
int3
xor
lcall
sub
sub
call
or
add
and
adc
fiaddl
imul
pop
mov
aam
gs
iret
jmp
pop
cmc
mov
outsl
test
mov
or
cli
sbb
mov
test
sahf
iret
inc
mov
rorb
add
mov
rcrl
aam
push
push
and
bound
leave
popf
lock
insl
pop
enter
sbb
mov
adc
dec
cmp
fs
jno
addr16
inc
in
ret
test
test
mov
lods
mov
jno
mov
push
icebp
jns
sti
fnstcw
popa
xchg
sub
mov
push
mov
inc
shrl
jno
inc
cmpsl
xor
fistps
sbb
mov
jmp
aam
xchg
out
sub
inc
xchg
ja
hlt
iret
pop
lcall
adc
push
sbb
enter
scas
test
pop
jo
push
les
mov
adc
sbb
data16
dec
push
inc
sbb
mov
and
pop
movsl
mov
jmp
adc
mov
push
mov
push
adc
je
imul
daa
jo
loop
jmp
mov
outsl
push
push
mov
in
jle
sbb
adc
repnz
repnz
jnp
cs
or
cmp
andb
imul
xor
cmc
std
aas
and
sbb
dec
push
enter
jecxz
jae
xor
mov
inc
shl
xchg
cmp
push
add
rclb
in
movsl
mov
movsb
mov
and
stc
or
loopne
ss
fs
xchg
jmp
push
loope
test
cmp
shlb
sbbb
popf
rclb
jg
loopne
cli
aaa
xor
addr16
jecxz
and
insl
jle
or
dec
adc
adc
dec
fcomi
mov
mov
xor
jge
mov
popl
dec
and
out
in
sub
add
mov
test
sahf
cmp
push
dec
fldl
in
je
push
lret
aam
mov
push
add
mov
adc
sbb
ds
push
fldt
inc
add
mov
mov
fldt
shrl
xor
push
call
xchg
xchg
rol
fucomi
adc
lret
in
mov
stc
sub
dec
in
fmuls
mov
nop
dec
add
xor
inc
xchg
cltd
std
push
int3
cmp
sub
jnp
pop
lea
xchg
adc
js
dec
xchg
test
hlt
sbb
dec
shlb
daa
test
ss
push
dec
or
mov
scas
imul
add
int
call
imul
cwtl
lcall
cmp
ss
or
push
iret
inc
adcb
jg
insl
mov
cmp
push
mov
add
mov
insl
shll
cmp
inc
shrb
jecxz
cmc
ja
xchg
jg
sbb
cmpl
xor
cmp
sti
xchg
and
inc
push
or
or
nop
sahf
add
roll
dec
mov
cltd
and
mov
notb
mov
jg
or
xchg
dec
filds
notb
shll
ror
add
push
dec
enter
pushf
loop
ds
jb
les
jae
mov
jg
cmp
mov
inc
xor
push
imul
scas
lret
or
push
icebp
add
lahf
dec
xchg
push
ja
or
insl
fistps
sbbl
sbb
sbb
cmc
jo
push
mov
xchg
sahf
pop
mov
inc
nop
je
push
subl
sub
jae
cmp
xor
notb
or
test
and
pushf
pop
repnz
mov
dec
mov
dec
std
lret
dec
std
jo
fdivrs
movsl
mov
mov
iret
jae
pop
inc
pop
adc
inc
adc
jp
jl
je
sbb
cmp
xlat
jb
xorl
sar
pop
lock
xchg
popa
lahf
push
test
push
mov
pop
mov
imul
dec
mov
mov
decl
jg,pt
dec
cs
jns
out
adc
lods
jge
push
adc
aaa
or
jg
or
or
mov
call
jg
imul
pop
push
roll
mov
and
cmp
mov
xchg
and
loopne
jmp
xor
pop
daa
dec
adc
pop
xchg
sbb
scas
xchg
imul
pop
aam
xchg
fbstp
jo
lahf
pop
arpl
push
bound
sbb
xchg
loop
xor
fildll
shrl
sub
mov
sub
dec
cli
sbb
icebp
sar
push
mov
pop
jp
fistpl
mov
sbb
mov
rcll
test
std
mov
xor
xchg
jnp
inc
lcall
stos
dec
dec
mov
pop
aam
or
xchg
and
inc
mov
data16
popa
es
shll
popa
cmp
fsubp
repnz
fidivl
mov
adc
pop
mov
add
cltd
loopne
das
clc
xchg
pop
cmp
dec
add
mov
sub
js
inc
dec
stc
mov
imulb
dec
push
mov
push
shlb
int
push
inc
inc
lret
and
out
or
dec
sbb
sbb
hlt
and
pusha
out
arpl
enter
jne
sahf
cli
js
jle
mov
js
into
insb
in
mov
inc
jp
flds
ljmp
sub
jns
jo
sbb
jmp
lods
shlb
or
fisttps
fs
jns
adc
out
mov
ffree
jns
rolb
cmp
push
push
in
jmp
add
jg
fsub
sub
and
dec
repnz
aaa
xor
cmp
divb
fdivrp
jecxz
jmp
inc
jle
test
sahf
add
push
or
pop
jg
nop
imul
or
in
xor
iret
int3
cmp
adc
pusha
leave
inc
mov
fcmovu
inc
cmp
mov
jge
les
cld
outsl
sbb
lret
or
pop
orl
test
or
pop
xchg
lods
xor
lcall
lods
push
xchg
push
dec
sub
xor
data16
gs
std
or
fcmovbe
pop
mov
imul
in
dec
dec
shl
pop
pop
lock
repz
les
lahf
fmuls
sahf
dec
push
push
sub
ret
push
push
add
dec
fcmovb
adc
mov
push
adc
xor
push
xchg
jb
cld
mov
imul
dec
sbb
popa
and
ret
imul
mov
or
or
iret
xchg
out
add
fdivl
xchg
pushf
dec
or
sub
mov
sbb
enter
inc
lods
push
push
sub
mov
lock
out
and
xchg
dec
shr
fidivrl
sti
sub
daa
loope
push
cltd
cld
mov
mov
add
scas
adc
adc
into
cmp
addr16
jnp
mov
push
pop
sbbb
mov
xchg
jge
push
push
push
iret
in
in
loope
cwtl
cmp
dec
movsl
jnp
ss
xor
cmp
in
nop
arpl
pop
or
shr
sahf
inc
push
outsl
js
cmpsb
int
mov
fcomp
push
cmp
adc
dec
addr16
scas
es
adc
adc
adc
cmp
movsb
cmp
out
scas
mov
mov
fldcw
outsb
push
pop
ror
xchg
pop
test
xorl
js
pop
stc
adc
mov
call
and
outsb
fldl
inc
add
pop
mov
ss
mov
inc
jno
pop
mov
adc
shl
aam
js
push
and
sbb
loopne
hlt
popl
add
cld
xchg
dec
rcl
cltd
repnz
sbb
cwtl
js
push
imul
mov
jns
push
test
pop
ret
daa
add
ja
imul
and
jp
cmc
adc
mov
rcll
test
sub
inc
fld
push
icebp
mov
mov
test
jno
inc
sub
pusha
lds
dec
mov
gs
rcr
dec
dec
js
out
popf
add
or
pushf
push
sbb
gs
cwtl
push
lret
push
jno
push
inc
cli
lret
outsl
testb
mov
xchg
sbb
add
gs
cwtl
mov
leave
mov
bound
test
mov
sbbb
stos
ret
cwtl
add
lea
in
ret
lock
xchg
lea
out
sbb
repnz
adc
pop
test
jae
pop
lahf
out
and
stc
nop
imul
in
repz
add
add
dec
dec
mov
lods
iret
pusha
std
out
js
int
ret
clc
push
lret
std
xchg
pusha
push
adc
out
push
aas
add
test
mov
stos
adc
xchg
movsl
jge
pop
out
push
push
jmp
stc
and
dec
loopne
adc
stos
or
adcl
xchg
push
mov
rorb
jo
cwtl
dec
lcall
ret
aad
mov
mov
sbb
or
frstor
aaa
sub
mov
xor
mov
dec
xchg
dec
jbe
fwait
pop
icebp
ljmp
pop
jecxz
jo
ret
inc
sbb
dec
adc
pop
and
cmp
push
fnsave
inc
pop
test
mov
fldt
dec
mov
test
jle
imul
flds
fwait
pop
push
mov
xor
dec
cmpsl
test
mov
mov
push
call
sub
ljmp
ja
popa
add
xor
add
cmc
jl
imul
scas
fs
push
dec
mov
arpl
es
sub
mov
mov
dec
mov
js
xchg
dec
pop
jp
and
push
cmpsb
jp
push
xor
cs
sbb
outsb
xor
cltd
mov
cwtl
pop
test
sub
cmpl
add
xchg
pop
dec
xchg
fwait
xor
mov
inc
nop
mov
test
das
iret
rclb
xchg
sbb
add
mov
push
orl
nop
int3
dec
jecxz
out
loope
ficoml
push
cwtl
repnz
je
jbe
push
sub
jge
jb
adc
insb
popa
insb
idiv
mulb
pop
sub
ud2
inc
jno
push
repz
pop
fidivrs
dec
cld
and
push
jecxz
push
sbb
inc
rcr
leave
mov
sbb
fwait
mov
mov
xchg
in
pop
clc
mov
pop
iret
mov
sub
mov
xchg
rclb
inc
xor
mov
stos
cmp
fsubrs
inc
call
xor
nop
xlat
rcrb
in
stos
filds
addr16
insl
cwtl
jae
jo
xor
push
aad
punpcklbw
adc
push
jo
mov
out
jmp
pop
xorb
outsl
mov
ja
int
or
and
mov
das
mov
hlt
cmp
lods
ss
inc
push
fucomi
jnp
sarl
out
es
jecxz
xchg
inc
lock
adc
and
imul
adc
fcoml
mov
andl
arpl
xchg
cli
ss
inc
mov
cmp
fdivr
xlat
inc
aas
cmp
std
sub
shl
mov
jmp
scas
jbe
push
paddb
icebp
sahf
xchg
fwait
dec
cltd
ja
repz
jle
dec
push
sahf
testb
pop
push
inc
les
mov
outsb
stos
decb
cld
aad
das
jge
insl
adc
mov
rorb
pop
orb
sbb
pop
inc
cmp
notb
xchg
clc
xchg
aas
icebp
mov
pushf
out
mov
bound
push
jno
add
sbb
sbb
mov
xchg
mov
xorb
into
out
popf
dec
xor
fsubrs
fdivrs
jno
cmpsl
sub
stos
xor
cld
sarl
jno
call
in
test
and
push
cvttps2pi
mov
mov
arpl
xor
mov
fcom
xor
adc
mov
mov
xor
pop
xchg
aaa
mov
int
push
mov
xor
fdivrs
test
popf
cli
out
xchg
push
and
pushf
xchg
data16
addl
div
test
stc
pushf
or
addr16
bound
mov
dec
mov
rorl
mov
cs
popa
jmp
sub
pop
dec
icebp
cmp
imulb
arpl
cltd
adcl
and
sbb
xchg
fldcw
lcall
lods
sar
inc
cmp
loop
rcrl
mov
or
adc
daa
and
cmp
adc
pop
fiadds
jne
into
push
mov
jl
cmpsb
sahf
inc
push
sbb
adc
movsb
sub
les
dec
adc
imul
and
stos
dec
mov
push
popf
das
and
es
add
sub
fldenv
lahf
push
cmp
std
sub
loop
jl
inc
sahf
lret
pop
push
jb
jae
cmc
out
inc
dec
icebp
lods
sbb
mov
test
cs
cmpsb
ljmp
mov
loop
xchg
ds
xor
bound
and
add
daa
jle
inc
sub
xorb
fwait
jne
ss
leave
pop
int
push
test
sti
mov
cmpl
js
adc
or
loopne
dec
or
nop
adc
xor
xor
dec
mov
lock
aaa
or
repnz
push
pop
repz
in
in
into
mov
sti
jnp
std
jbe
xchg
dec
cltd
sub
in
cltd
shlb
add
mov
fcompl
dec
enter
sarl
testb
cmpsl
out
mov
or
scas
lahf
push
xchg
je
xor
mov
cld
and
xorl
jo
outsb
sub
dec
jecxz
cmp
je
push
pusha
dec
clc
decb
cmp
jmp
adc
daa
sbb
lret
jecxz
add
scas
fcoml
js
addr16
adc
sub
data16
dec
insl
lahf
and
lahf
mov
xchg
inc
jle
jecxz
imul
aad
sarb
push
loope
bnd
or
mov
jbe
mov
and
jmp
push
cld
xchg
in
dec
mov
imul
imul
jge
out
sti
pop
repz
sbb
and
into
jecxz
loop
js
sbb
mov
adc
cs
xor
enter
sbb
or
adc
filds
aaa
rcr
push
mov
fdivrl
iret
dec
dec
mov
stc
xchg
test
cli
push
bswap
rol
test
outsl
mov
in
inc
sti
in
push
cmp
jmp
test
fmull
sbb
inc
dec
shrl
movsl
inc
sub
bound
popa
outsl
cltd
into
fpatan
inc
pop
sbb
insb
push
pop
push
push
push
sbb
xchg
mov
mov
jbe
mov
dec
mov
leave
aaa
mov
sub
mov
test
lret
in
xlat
hlt
xor
data16
cld
dec
aam
stos
sbb
cld
int
jp
xchg
add
cs
dec
roll
cld
fidivs
inc
sarl
ja
ret
inc
pop
fs
scas
pop
xchg
jnp
in
push
xor
mov
aam
xchg
xlat
call
int
and
adc
cmp
pop
scas
in
jl
mov
jo
sub
adc
jge
or
xchg
sbb
and
add
in
sub
sub
test
stos
dec
aas
insl
testb
cmp
adcb
fnstsw
mov
int
adc
mov
addr16
cmp
push
out
fldt
pop
mov
stc
mov
xlat
aam
shll
jns
mov
xchg
and
jp
lahf
repz
rorb
fld
add
xlat
stc
xchg
cmp
mov
jbe
dec
sbb
cmp
sub
std
ljmp
pushw
xor
mov
popa
fcomps
pop
cmc
mov
push
ds
mov
testl
push
int3
shrb
fsts
inc
lods
or
cmp
into
lcall
add
sbb
inc
dec
outsl
lods
xlat
into
adc
push
push
and
decl
pop
dec
stos
pop
inc
movsl
orl
movsb
adc
cmp
push
jo
sahf
inc
pop
lods
xchg
imul
push
inc
scas
hlt
aaa
aam
sbb
mov
out
add
xor
adcb
jne
ja
es
aam
dec
push
adc
sub
mov
outsl
ss
push
adc
inc
pop
dec
je
aad
gs
xchg
std
in
pusha
ljmp
sub
push
aas
repnz
out
out
xchg
jo
hlt
push
ds
scas
push
inc
fstpt
sbb
je
outsl
push
cmp
ja
nop
lret
inc
and
mov
or
pushf
mov
pop
sbb
mov
lods
xor
lret
lds
cmp
lods
xchg
gs
lea
inc
mov
xor
mov
push
or
aam
inc
cmp
cmp
repz
sbb
test
xor
shl
push
jb
fldcw
jecxz
out
sub
cmc
je
cmp
ret
loop
loop
pop
dec
xchg
pop
pop
out
mov
daa
rcpps
pop
sub
mov
out
cmp
inc
loope
push
fidivs
mov
popa
dec
or
push
ds
sahf
filds
fdivp
repnz
jg
sub
imul
or
jle
in
xchg
dec
in
orb
adc
jmp
rorl
xor
aaa
mov
mov
mov
sbb
adc
imul
push
mov
push
cmp
into
dec
cmpsl
cli
dec
jmp
push
push
test
dec
xchg
sti
jno
in
mov
in
mov
xlat
mov
sub
push
bnd
sbb
loop
enter
hlt
pop
fnstenv
fistl
inc
mov
cmp
ja
push
push
lock
push
and
out
mov
or
push
jo
mov
sub
popa
loopne
lods
push
sarl
loopne
xlat
xchg
push
jnp
daa
sbb
inc
jecxz
add
pop
pop
xchg
rcrl
ret
icebp
or
pop
pusha
aas
dec
ljmp
and
add
xchg
mov
add
out
pusha
mov
xchg
pop
push
jge
rolb
jo
jbe
sti
call
cli
mov
mov
mov
xchg
push
je,pt
xor
ja
xchg
and
cmp
or
lahf
jae
inc
test
int
addr16
scas
xchg
sbb
mov
in
mov
imull
xor
dec
xlat
jp
insl
loop
ffree
inc
fwait
sub
sub
jb
xor
inc
mov
pop
ja
cmp
cmp
adc
ret
mov
lret
imul
mov
pop
inc
fs
scas
test
fnstsw
arpl
jnp
lods
cmp
mov
ja
das
out
ljmp
es
sub
and
jmp
loopne
or
push
mov
clc
add
lret
mov
loope
mov
movsb
cmp
pop
xchg
mov
ds
test
je
fbld
imul
pop
imul
sbb
xor
mov
xor
lret
jae
insb
repnz
out
mov
mov
push
dec
adc
push
xor
and
stc
nop
setae
and
or
adc
push
js
sub
andl
pushf
out
gs
out
scas
pop
mov
pop
push
cmp
jo
inc
xor
add
movsb
lret
xor
arpl
push
dec
mov
and
pop
and
pop
pop
xchg
cs
inc
lret
scas
fldcw
xchg
sbb
shl
mov
addr16
and
shlb
mov
sub
pop
in
sbb
gs
push
adc
mov
test
mov
adc
sbb
xchg
add
ficompl
sbbl
push
mov
shll
and
imul
mov
pop
rorb
aas
ss
in
xor
and
mov
adc
sbb
ret
pop
scas
leave
sub
test
ja
outsb
mul
adc
imul
xor
sub
and
add
lock
jbe
call
shll
pop
add
gs
enter
insb
and
push
std
inc
add
test
fsubrl
popf
fidivrs
or
mov
loop
in
sbb
loope
data16
insb
nop
inc
fidivs
cltd
cmpsl
cmp
or
add
testb
lret
js
sbb
pushf
pusha
lret
jne
xlat
push
inc
mov
xchg
add
mov
and
push
cmp
xorl
add
mov
mov
testl
orb
out
push
mov
and
jl
ret
cmc
imul
mov
jne
fdivl
je
inc
push
jae
sahf
imulb
pop
mov
orb
lea
pop
or
cmp
and
jge
adc
es
imul
cmp
lret
outsb
cmpsl
push
pop
cld
adc
ljmp
stos
mov
sahf
pop
gs
dec
insl
mov
imul
mov
inc
call
jo
or
dec
sub
data16
repnz
je
test
jge
push
sarl
mov
inc
loopne
push
jbe
mov
je
cmp
cmpsb
or
repnz
xchg
add
dec
and
push
pop
stc
mov
mov
jmp
mov
pop
and
ret
dec
or
mov
inc
cmp
out
xchg
fsubl
loopne
out
and
test
xchg
push
andnps
loope
popa
aaa
jae
shlb
shrl
clc
xor
xchg
dec
clc
dec
pop
inc
lods
ret
lcall
push
loopne
aaa
mov
aam
sbb
std
aas
sarl
jo
jge
inc
pop
xchg
dec
mov
jbe
lret
lret
mov
negb
fsts
dec
fsts
xchg
cmp
mov
inc
mov
cmpsl
xchg
repz
jl
or
and
cwtl
mov
mov
adc
adc
sbb
push
cmp
loope
lret
and
adc
enter
rorl
pop
sbb
xchg
mov
cmp
and
div
dec
outsl
dec
add
cmp
pop
and
imul
jns
add
scas
xchg
lods
push
mov
or
inc
orl
xor
into
push
or
daa
and
xor
fstl
jecxz
mov
mov
rep
push
mov
push
mov
bound
outsl
pushf
mov
cmp
cmp
daa
jo
lcall
lcall
and
sub
push
fmull
pop
cmpsl
and
xchg
add
shrb
mov
or
mov
inc
fldenv
aas
loopne
hlt
pop
sub
rcrl
das
push
mov
add
pop
push
mov
cmpsb
jo
sbb
inc
fcoml
test
and
test
insb
adc
dec
iret
sub
imul
repnz
adc
mov
stos
mov
icebp
xchg
adc
mov
shl
rcrl
mov
push
test
cld
pop
loopne
int
fimuls
push
add
cmp
cmc
push
lea
stos
popa
movsl
sbb
add
sbb
pop
outsb
xor
fists
sarb
jmp
push
jno
inc
sub
xor
shlb
mov
ja
push
or
mov
adc
cmpsl
mov
leave
push
mov
ss
or
fwait
xor
fistps
dec
movsl
in
fldenv
push
adc
dec
and
or
sbb
pop
fsub
jl
push
dec
repnz
paddusw
shll
mov
sahf
lret
inc
fucom
imul
sahf
fldenv
cmp
xorl
imul
dec
inc
push
sub
mov
lret
sbb
xor
adc
imul
xchg
addr16
push
mov
push
xchg
enter
aad
lret
jmp
xor
in
stc
std
shr
pop
mov
fstpl
lods
cmp
or
mov
cmp
sub
push
cmc
mov
mov
push
jp
repz
sbb
sbb
in
and
fs
cli
fs
mov
mov
pop
ja
popf
mov
lock
push
add
mov
add
sti
mov
add
scas
jnp
mov
or
and
xchg
pop
es
push
mov
pusha
push
testl
pop
or
jnp
test
insb
xchg
ljmp
add
and
xchg
enter
shr
adc
sub
leave
ret
mov
lock
mov
xchg
jmp
stos
pop
std
aad
or
xchg
stos
add
mov
cmp
lret
lock
out
mov
push
xchg
or
rolb
cmpsb
sub
and
call
in
cld
pop
movsb
movq
xchg
lds
es
je
xchg
add
push
in
gs
pop
xchg
dec
or
sahf
inc
mov
xchg
mov
and
mov
mov
andb
add
bound
mov
jne
stos
push
arpl
cwtl
test
inc
xchg
mov
pop
mov
push
sub
loope
pop
mov
push
jge
push
mov
addl
mov
les
loop
mov
mov
aaa
push
xor
or
clc
cmp
loop
or
mov
stos
jl
cmp
outsb
push
adc
inc
jge
js
xchg
cmp
ficomps
cli
jmp
popa
push
je
xchg
aam
and
repz
sbb
cltd
pushf
sub
push
aas
aam
shrb
sub
add
mov
push
add
clc
rcrb
int
inc
jno
and
mov
imul
iret
inc
xchg
cs
test
loopne
sub
sub
stc
call
jge
adc
dec
pusha
xchg
call
or
pop
inc
jae
cmpsb
mov
sbb
jecxz
shrb
movsb
loopne
cmpsl
stos
popf
iret
es
cltd
xchg
out
cld
call
fnstcw
pop
pushf
stos
or
mov
sub
jmp
xor
jmp
adc
movsb
stc
mov
mov
push
or
das
imul
add
add
arpl
test
aam
fwait
jae
lret
adc
mov
push
movsl
lret
push
push
fld
pop
add
adc
negb
in
out
dec
insl
leave
cmpsl
insb
inc
and
repnz
xchg
call
jns
mov
mov
les
jmp
mov
pop
jp
mov
fs
js
lock
iret
jge
scas
lahf
xchg
icebp
pusha
jmp
pop
ja
test
fdivs
setle
fisttpl
adc
ljmp
push
adc
mov
push
and
js
shl
sub
hlt
mov
subl
pop
cmp
xchg
lcall
mov
jns
push
repnz
sahf
add
mov
bound
rcl
or
cmpsl
arpl
fcmovb
aam
aam
imul
inc
call
push
push
mov
test
jne
rcrl
aam
ljmp
fisubrs
push
cmp
xchg
stos
into
shld
rol
sbb
adc
adc
push
pop
dec
lcall
prefetch
pop
rorb
mov
int
or
rcll
in
jp
in
imulb
andb
push
mov
dec
sbb
cli
jl
xlat
outsl
jp
jmp
and
js
pop
lret
or
push
test
lret
fs
lea
daa
dec
mov
cli
ljmp
or
cmc
clc
or
out
lock
fimuls
xchg
mov
or
mov
dec
jmp
sub
mov
jge
sub
jle
cs
mulb
aas
mov
test
or
or
cmp
fnstenv
cltd
in
xor
sbb
sub
xor
sbb
mov
jno
jecxz
push
in
pop
xchg
sub
adc
stos
ss
dec
ret
add
fidivrl
cmp
mov
xchg
mov
fidivrs
out
cmpsb
dec
fwait
adc
fstpl
cmp
fcoml
lret
aam
mov
out
and
xor
int
clc
mov
dec
sbb
inc
mov
and
aad
xchg
iret
sbb
jle
mov
dec
sbb
add
xchg
mov
xchg
add
pop
jl
pop
push
out
jbe
jecxz
push
stos
lock
cmc
subb
out
aam
stos
sbb
es
mull
mov
int3
inc
push
scas
cmc
or
out
movl
xlat
jle
sti
and
cmc
or
mov
movsl
leave
and
loopne
mov
mov
dec
sbb
pushf
or
dec
aam
adc
cmp
xorb
enter
push
scas
and
mov
cmp
inc
cli
mov
jae
mov
mov
push
adc
ja
pop
cli
repnz
jbe
sub
das
dec
xor
push
push
ror
cmp
adc
mov
push
fdivr
das
int3
lcall
rol
pop
sahf
jae
dec
aaa
stc
adc
shlb
lcall
cmpsb
dec
or
adc
cld
fwait
lods
and
cmp
or
cmc
sub
push
lss
sbb
dec
call
imul
out
jg
mov
aad
pop
mov
addr16
xor
imul
sub
add
out
clc
sub
xchg
push
mov
dec
jg
push
scas
mov
xor
sub
mov
dec
or
inc
das
call
fmull
fcmovne
cs
sbb
and
sarb
pusha
test
insb
pop
aam
call
inc
cmp
jno
jg
push
pop
and
push
lret
xchg
inc
mov
dec
stos
add
pop
fstl
sub
sti
dec
hlt
scas
sub
adc
jo
add
xchg
hlt
fwait
xor
cwtl
jge
es
push
fisubl
xor
test
push
outsl
or
jno
in
outsl
dec
sub
pop
fs
lret
test
push
push
xchg
out
adc
test
jmp
mov
jl
push
scas
push
and
push
push
fldl
popf
cmp
mov
sub
adc
mov
loop
mov
mov
add
addr16
lret
mov
xchg
out
xchg
mov
negb
add
popf
xchg
pop
test
dec
or
dec
adc
inc
mov
subb
dec
insl
pop
hlt
cmp
outsb
pop
xchg
dec
mov
sti
fnsave
shlb
jns
out
loop
jmp
lods
arpl
inc
outsb
lret
pop
inc
sti
sub
mov
cmp
bound
test
inc
inc
jmp
cmp
push
inc
cmp
or
mov
mov
mov
aas
cmp
ror
xor
cmp
pop
jno
in
loope
adc
and
inc
xchg
sbb
stos
cwtl
adc
adc
popa
sbb
fiadds
or
fists
cmc
fs
dec
add
sarl
xor
mov
push
xor
xor
jnp
adc
xor
jmp
dec
bound
mov
scas
push
xchg
imul
arpl
cmp
fldenv
aaa
jg
mov
iret
cli
mov
pusha
dec
mov
rcrb
bound
add
hlt
xlat
jae
mov
in
sub
psubd
int3
leave
rcr
lock
xor
xlat
push
daa
mov
lcall
daa
jl
push
mov
cmp
and
cmp
cmpb
cmpsl
std
or
movsb
push
sub
mov
outsb
iret
adc
mov
jg
jecxz
inc
mov
inc
imul
jns
fistps
lea
sub
popa
es
sub
jb
cmp
push
dec
ret
cmp
xchg
mov
addl
mov
mul
fs
xlat
adc
pop
fidivrs
push
jle
and
test
cmp
ljmp
cld
pop
cmp
cmp
js
in
push
in
stc
push
fidivl
ret
push
push
mov
sbb
and
cmp
xchg
sbb
xchg
xor
adc
pop
sarb
and
mov
xor
dec
test
mov
iret
mov
push
mov
iret
xor
fsts
push
sahf
ss
or
and
xor
shl
cltd
into
lahf
mov
inc
inc
mov
repnz
sub
inc
push
test
mov
add
cltd
push
jecxz
leave
sbb
sbb
push
xor
xchg
add
mov
into
es
push
jl
mov
mov
dec
shl
or
or
lods
movb
out
xchg
daa
adc
neg
fcoms
lahf
sahf
add
out
not
ljmp
dec
aam
in
xchg
in
jg
add
adc
stc
dec
xor
adc
jmp
push
shrb
mov
cmp
fidivrl
cwtl
adc
out
mov
add
dec
push
cwtl
push
filds
xor
loop
ss
xchg
aas
jecxz
aaa
dec
or
adc
and
testb
and
xor
movsl
push
cmp
pop
and
push
call
leave
repz
jns
jo
or
or
rolb
clc
push
xor
inc
int
xchg
adc
mov
jge
push
add
lods
int3
divb
out
sbb
push
mov
sbb
bound
out
negb
clc
inc
sbb
push
cwtl
lret
or
dec
out
inc
cmp
daa
adc
sbb
mov
mov
mov
test
mov
fdivs
xor
xor
xchg
ss
aam
sbb
or
sbb
dec
xorl
insb
sub
psubq
add
and
adc
adc
lahf
mov
outsl
loopne
out
mov
adc
push
mov
and
rcrb
outsl
push
fmuls
xchg
push
aad
or
and
testl
push
ljmp
jnp
outsb
shl
dec
imul
fs
sbb
hlt
fnsetpm(287
test
sub
ljmp
adc
lahf
jmp
and
sbb
dec
lods
adc
pop
out
mov
or
test
sahf
mov
inc
out
and
repz
out
sub
int
cwtl
shl
test
dec
mov
out
xor
sub
shlb
jp
add
or
inc
pop
jnp
xchg
dec
rcrb
test
cld
xor
add
jge
mov
push
mov
out
xor
xor
movsb
lret
fidivl
jl
insl
or
movsb
js,pn
fnstsw
jno
shll
mov
push
or
dec
popa
inc
mov
xchg
inc
xchg
ret
push
xor
sbb
xchg
jnp
out
xor
push
int3
pop
iret
fyl2xp1
mov
sub
rcrb
xor
in
jne
mov
iret
fistps
jle
imul
test
adc
in
rcrb
ds
add
lock
insl
sbb
test
inc
cwtl
insb
push
sti
pusha
xchg
mov
xor
push
insb
rcl
rcrb
cmc
fisubrs
xorb
popf
das
xchg
out
das
sub
dec
in
mov
inc
mov
loopne
mov
cmpsb
cmp
scas
lcall
ret
sahf
mov
imul
or
sub
fiadds
icebp
sbb
dec
and
pop
int3
rclb
cwtl
out
jecxz
xchg
lret
dec
and
hlt
push
rol
push
push
cmpb
jecxz
mov
push
mov
jne
inc
mov
movaps
iret
repnz
sub
insl
sti
mov
push
mov
jg
lret
insl
sahf
dec
imul
jbe
lcall
leave
es
dec
pop
scas
out
inc
stos
push
xor
push
cmp
xchg
or
xchg
dec
stc
mov
inc
icebp
and
pop
push
push
jns
sahf
mov
pop
mov
ds
pop
hlt
jmp
cltd
imul
or
mov
xchg
dec
imul
inc
or
in
xlat
mov
inc
push
test
cmpl
aad
stc
loopne
push
lret
bt
movsl
and
in
mov
jg
call
sub
sbb
mov
mov
xchg
sbb
shlb
xchg
hlt
hlt
add
or
xchg
in
jl
mov
pop
aad
outsl
out
test
xchg
add
fnsetpm(287
xchg
dec
cmpsb
jge
stos
or
sub
and
in
stos
mov
sub
and
pop
push
mov
out
gs
cmc
mov
lea
sub
mov
js
push
adc
mov
mov
and
sbb
pop
mov
mov
test
aas
mov
outsb
jbe
in
pop
xchg
add
sbb
lods
mov
mov
or
or
cltd
mov
enter
and
xchg
mov
sbb
xchg
shl
dec
cmp
and
test
mov
sbb
xchg
cmc
push
push
pop
pop
mov
mov
cmpsl
xor
add
xor
mov
and
cmc
push
pop
mov
mov
push
imul
cmp
daa
sbb
or
enter
leave
mov
sbb
cmp
fisttps
mov
mov
frstor
add
inc
mov
frstor
inc
rclb
orl
rorb
dec
out
aam
xchg
mov
imul
test
fs
cli
cmp
shlb
sub
mov
daa
cltd
and
xchg
inc
loopne
pop
test
in
sahf
inc
cmp
ljmp
sbb
jo
xlat
xchg
leave
int3
and
mov
push
dec
shlb
cmp
inc
push
in
sub
pop
lods
out
shrb
retw
inc
hlt
popa
sahf
or
in
ret
in
out
xor
dec
adc
fstpl
xor
adc
nop
mov
les
xchg
dec
push
push
dec
out
stos
je
or
cmpsl
push
outsl
cld
jne
mov
lods
movsl
out
mov
test
dec
mov
cmp
into
mov
call
adc
sub
adc
inc
test
mov
push
cmp
xlat
sarb
xchg
dec
outsl
xchg
gs
pop
adc
adc
cmp
jle
cmpsb
ret
or
outsb
loop
inc
xlat
cmp
xchg
cmpsl
ljmp
in
push
or
pop
sbb
mov
sub
lret
std
ljmp
test
aas
pushl
xchg
subb
or
mov
enter
fadds
sbb
mov
dec
pusha
imul
pop
inc
push
or
inc
push
aas
sub
sub
or
nop
es
mov
or
xor
xchg
mov
stc
sub
call
gs
jno
repz
jle
mov
inc
push
outsl
ds
int3
lea
xchg
subl
das
xchg
jb
dec
fistpl
sbb
outsb
mov
mov
sub
xor
out
pop
loop
call
cli
push
pushf
mov
mov
add
arpl
out
sahf
mov
push
dec
stos
pop
ss
push
jno
pop
test
mov
nop
pop
inc
push
fbstp
pop
shl
lret
mov
nop
push
cmp
into
pminub
mov
fstpt
andl
fiaddl
push
sbb
xchg
test
sub
lock
xchg
cmp
inc
add
mov
out
mul
icebp
out
popf
jl
push
or
and
sbb
fldl
inc
cmp
cli
xchg
sbb
orl
add
cmp
jmp
sub
sbb
sarl
scas
scas
in
add
mov
push
mov
adc
jmp
into
sbb
adc
mov
add
and
xor
aaa
ljmp
push
xor
popa
cld
pop
ret
ret
push
addr16
test
push
nop
mov
out
adc
lods
add
div
iret
or
mov
xchg
pop
test
mov
sub
test
sbb
lcall
loope
andb
inc
stos
ficompl
pop
stos
or
xchg
xlat
out
shl
or
pop
mov
sub
jno
sahf
xor
pop
cmc
in
lahf
jmp
jmp
das
scas
inc
js
push
ficomps
xor
imul
push
repz
xor
cmpsl
into
fwait
add
fsts
xchg
je
mov
stos
push
xor
ret
jg
addl
ja
jns
aaa
ja
jmp
stc
popa
and
push
adc
mov
mov
imul
int
pop
or
lods
mov
gs
mov
je
rcll
mov
das
es
add
mov
sti
faddl
fmuls
gs
sbb
mov
imul
add
pop
cli
or
xor
sub
adc
lea
adc
frstor
push
adc
pushf
mov
popf
gs
stc
inc
sbb
xor
push
push
cmp
cltd
dec
cld
mov
push
xchg
sbb
xlat
push
jne
flds
jp
push
push
test
jmp
push
test
test
stos
inc
pushw
loop
test
movsl
lret
push
les
add
jb
fsubrl
repnz
int
xchg
and
jae
cvttps2pi
or
movsl
in
mov
and
xchg
and
rorl
loopne
xchg
mov
jns
lret
jmp
pop
iret
cmc
insb
xchg
addr16
int3
icebp
movsl
and
xchg
sti
fsubp
mov
xor
repnz
clc
mov
sbb
and
xadd
push
enter
ret
or
je
xor
sbb
sar
jb
cltd
paddusb
rcrb
pusha
mov
loopne
sbb
mov
mov
rolb
repnz
jle
repnz
das
and
lcall
mov
mov
aas
mov
xchg
mov
lock
daa
mov
jle
or
push
lret
inc
popf
popf
mov
in
bound
pushf
pop
sub
imul
bound
jecxz
lock
test
mov
cmc
mov
loope
xchg
pop
inc
pop
movl
sub
jp
daa
daa
fisubrl
je
pop
pop
out
call
fisttpl
add
sub
mov
mov
dec
mov
jp
les
and
mov
inc
cmp
inc
inc
cli
xchg
mov
xchg
jg
repz
lods
cld
hlt
pop
mov
int3
pop
aad
push
outsl
or
and
pop
cmp
cltd
js
popa
pop
jg
loopne
push
sub
fldcw
push
mov
cmc
xchg
enter
inc
cwtl
xchg
aad
sub
ret
sub
mov
daa
xchg
rcr
repnz
leave
call
repnz
pop
sub
addl
push
xor
lods
add
ds
jl
scas
stc
into
scas
push
fdivrs
icebp
dec
je
cwtl
fcmovne
push
sub
xor
insb
or
cmpsl
jb
fisubrl
dec
mov
push
ljmp
shrl
sbb
leave
jp
iret
mov
push
and
or
outsl
dec
or
adc
sbb
mov
mov
push
mov
dec
ds
data16
jle
popa
adc
xor
das
sbb
xchg
pop
lea
int
int3
sarl
pop
cltd
add
insb
xchg
sbb
scas
adc
pushf
mov
ja
loopne
pop
addr16
int3
sbb
or
dec
outsb
sbb
pop
shlb
push
mov
aam
sti
push
mov
gs
js
push
xchg
dec
mov
addr16
or
mov
mov
fldl
dec
aas
ret
and
inc
jns
fmul
lds
pop
imul
sub
jmp
repz
ss
push
cmpsb
or
mov
out
sbb
jecxz
push
push
xchg
rcr
inc
repnz
data16
xchg
xchg
xchg
in
mov
and
rcrl
adc
fs
pop
out
push
test
loop
cmpsb
movsb
adc
xor
cmovb
ljmp
dec
xchg
xchg
test
fs
neg
jge
lahf
mov
sub
push
jae
mov
push
sarb
mov
stos
push
lahf
add
mov
mov
jle
loop
pop
xchg
cmp
clc
push
inc
add
popf
out
int
mov
inc
daa
xor
in
xor
mov
push
sar
jp
jp
je
out
jnp
popa
addr16
push
add
mov
and
sub
push
aam
pop
sbb
mov
sub
xchg
jmp
jbe
rcrl
lds
hlt
mov
dec
push
mov
mov
add
push
pop
mov
sbb
adc
add
jle
cmc
jg
xchg
pop
div
dec
pop
add
and
cmp
or
jo
fisttps
push
cmp
data16
mov
pop
pop
in
dec
adc
jne
push
cmpl
adc
ficoms
jg
or
test
and
test
sbb
fidivrl
mov
hlt
jmp
jbe
stc
dec
jo
and
je
cli
stos
cmp
cmpsl
mov
pop
mov
jne
pop
mov
in
jmp
mov
adc
pop
jmp
sbb
lcall
dec
xchg
pushf
sbb
push
fldt
mov
jbe
xchg
or
test
jl
add
shl
hlt
add
inc
test
bound
cwtl
push
push
inc
mov
pop
xchg
dec
icebp
mov
fbstp
jge
out
jnp
popf
adc
dec
lret
mov
int
xor
das
and
push
ja
dec
adc
rclb
mov
lret
imul
jmp
pushf
iret
das
mov
cmp
jns
adc
inc
pop
andnps
ficoml
out
push
push
cmp
inc
add
jecxz
adc
scas
outsl
push
jp
ret
not
adcb
jp
int3
and
cmp
ficoms
adc
das
adc
insl
jmp
mov
in
lret
mov
add
pusha
sahf
loopne
and
sarl
xor
lret
cwtl
xor
cmp
rorb
inc
hlt
dec
stos
sbb
ja
pop
stos
xchg
mov
cli
cs
incl
sahf
in
xlat
hlt
fldt
repz
pop
movsb
xor
push
lret
push
sbbb
xchg
scas
or
adc
ret
xchg
je,pn
add
out
in
testl
mov
shlb
das
loope
pop
adcb
fimuls
lret
mov
add
sub
and
and
sub
push
pop
hlt
cld
jp
sub
lret
push
jp
jnp
xor
and
fstpl
xchg
int3
das
pop
inc
cmp
push
orb
orl
test
roll
popa
jne
outsb
dec
adc
sbbl
sub
lods
xchg
aaa
mov
cld
mov
push
cli
cmp
adc
lea
or
outsl
fcompl
fsubs
or
mov
repz
xchg
cmp
out
sbb
je
sub
xor
cmp
incb
out
jno
ja
push
test
push
scas
mov
fs
and
fs
adc
dec
mov
jo
mov
mov
orb
and
fistl
leave
mov
xchg
and
xor
stc
cmp
popa
inc
or
mov
loope
xorl
sbb
add
xchg
iret
rorl
push
sbb
or
or
shrl
sbb
dec
xchg
jle
subb
lods
mov
aaa
or
sub
popf
dec
sub
xchg
popa
push
push
jg
inc
pop
add
cmpsb
repz
jb
xor
pop
xor
out
cld
insl
adc
dec
ljmp
jns
scas
pop
lcall
sahf
adc
mov
rclb
cli
push
int
adc
mov
popa
data16
inc
mov
insl
mov
les
and
mov
inc
mov
pop
clc
push
in
xlat
jp
pop
icebp
or
in
stc
aas
and
mov
dec
pop
cmpsl
dec
stos
dec
mov
and
push
mov
pop
pop
shll
movsl
imul
dec
sub
pop
adc
sbb
push
mov
xchg
fisttpll
fsubrl
adc
sti
and
scas
add
adc
xchg
imul
mov
lods
test
cmp
push
mov
sbb
push
sub
jnp
mov
jge
mov
and
sub
sbb
in
or
loop
dec
bound
rolb
icebp
leave
dec
std
lods
dec
jo
mull
inc
mov
or
cmc
dec
xchg
pop
or
cld
or
les
jae
add
fdivrp
sbb
nop
out
add
cmp
rclb
rcr
nop
adc
dec
push
popf
dec
push
sbb
cltd
ud0
in
xchg
mov
cwtl
outsb
movsb
lcall
push
xlat
cmp
js
sub
inc
fisubs
fwait
xor
mov
fs
icebp
divb
jp
lcall
lods
das
ret
repz
jo
push
sub
adc
sti
fstps
pop
push
mov
sbb
xchg
in
sub
cmp
mov
test
mov
cmpsb
out
shl
sbb
sar
and
sbbb
or
cmpsb
movsl
popa
iret
add
adc
mov
shrb
rol
lcall
mov
shll
mov
clc
fmull
xchg
push
rol
out
xor
lods
cmp
inc
and
cltd
loop
push
hlt
dec
xor
lcall
hlt
pusha
dec
pop
cmpsb
cmp
ror
mov
sub
xchg
jg
sub
mov
clc
mov
push
and
mov
into
imul
pop
out
sarl
mov
cwtl
fwait
xchg
push
adc
jg
inc
pop
lcall
addl
sub
sbb
ret
inc
mov
push
mov
xor
fisubs
out
sbb
repnz
inc
rorl
mov
add
mov
cmpsb
mov
jmp
repnz
jae
in
sub
pop
repnz
ja
and
adc
sub
rcl
in
inc
mov
cmpsl
mov
jb
lds
leave
sbb
jae
and
sub
sub
popa
loopne
insb
xchg
cmp
mov
inc
loopne
ss
and
and
inc
dec
out
fucom
and
mov
mov
scas
push
xchg
mov
setge
stos
outsb
inc
scas
inc
push
jecxz
lock
out
mov
xchg
shll
push
and
fsubrs
sbb
mov
aad
call
fwait
push
adc
mov
cmp
or
aas
daa
cltd
xlat
addr16
inc
scas
loope
jecxz
sbb
jecxz
inc
mov
movsl
push
sub
and
and
in
out
and
ja
cmc
subb
add
inc
sbb
pusha
bound
add
xor
and
pop
jbe
aad
iret
in
aam
movsl
out
inc
fistps
outsb
adc
out
mov
mov
mov
stos
mov
stc
js
mov
aad
dec
mov
lods
add
fsubl
cmp
jne
test
inc
fmuls
push
fcoms
xor
shll
xor
cmp
cmpsl
aaa
jl
mov
jae
or
mov
test
or
jns
xor
out
fstl
add
jno
and
gs
inc
nop
out
inc
clc
fildl
outsb
mov
insb
enter
in
or
dec
lcall
xchg
xchg
mov
xor
lret
cmp
add
test
lahf
pop
xorb
adc
xchg
push
jae
sbb
mov
and
daa
push
push
cld
ljmp
lcall
repz
cmp
mov
lds
mov
and
adc
cmp
insb
fisubrl
outsl
cli
jmp
mov
insl
aad
fptan
add
int
idivb
in
call
inc
push
mov
popa
inc
loope
inc
stos
xor
mov
stos
mov
dec
je
add
decl
fnsave
jae
push
cltd
mov
xchg
xchg
pop
inc
push
out
mov
icebp
orb
xlat
cmp
fs
je
lds
inc
cltd
jbe
xchg
pop
pushl
inc
inc
fxch
scas
aam
sub
std
jge
aas
sub
lahf
or
loop
mov
mov
xor
xchg
jo
push
xchg
mov
vphaddubq
subl
ljmp
nop
test
pop
jle
pop
outsl
sub
or
popf
push
sahf
mov
rol
jl
push
inc
shll
stos
cld
sahf
cld
rorb
pop
aam
jg
and
popf
ljmp
mov
repnz
into
mov
fs
loopne
mov
mov
jp
mov
push
push
fidivl
lcall
cli
popf
push
or
pop
push
lret
stos
or
and
jbe
and
cmc
das
mov
cmc
pop
push
xchg
stc
jl
xor
test
mov
or
test
je
cwtl
cmp
sbb
push
jl
sub
and
ljmp
pushf
data16
popf
push
pushf
and
cmp
je
mov
ds
mov
iret
je
jl
push
cwtl
aas
pop
repnz
clc
repz
pop
aad
push
js
repnz
cmpsl
sar
shrb
mov
sub
outsb
pop
xor
scas
movl
sahf
sbbb
loop
fdivrs
lret
sbb
insl
out
jp
dec
jnp
xlat
mov
jecxz
aaa
je
xchg
stc
push
push
xor
sti
inc
sub
inc
push
and
add
pop
push
out
das
add
in
inc
out
xchg
mov
ja
repnz
sahf
jg
enter
sti
jnp
js
push
outsl
mov
jp
jo
adc
ficomps
daa
jns
sub
inc
push
test
xchg
pop
mov
push
mull
and
and
orl
pop
xchg
sub
mov
bound
inc
sahf
push
xor
mov
cmp
hlt
sbb
sub
jl
rorl
and
arpl
loopne
std
arpl
out
pop
pop
ret
jp
jl
adc
cltd
mov
fistpll
mulb
repz
lret
aad
jge
cmp
pop
aad
xorl
mov
mov
clc
ljmp
push
hlt
mov
test
jg
imul
xlat
cmp
out
rorb
mov
iret
cmpb
jge
lds
cmp
clc
andb
mov
cwtl
mov
test
loopne
jg
mov
mov
mull
or
mov
mov
mov
psrld
mov
rcl
and
dec
jb
cs
jbe,pt
push
jne
pushl
loopne
mov
adc
jg
xchg
jno
push
sub
mov
lret
inc
cmp
sub
sbb
lahf
fimuls
push
or
dec
mov
mov
cmp
adc
scas
movsb
and
into
mov
lret
lret
call
inc
sub
xchg
out
in
mov
lds
adc
lret
loope
xor
test
hlt
ja
mov
into
into
fiadds
jg
ret
lods
mov
cmp
cwtl
jns
scas
stos
xor
out
mov
dec
icebp
test
sti
ljmp
repz
push
and
pop
outsb
add
ja
ljmp
clc
out
das
xlat
mov
test
es
or
jmp
add
sbb
lods
push
push
decb
push
xchg
and
iret
sub
mov
jbe
ljmp
inc
pusha
adc
loop
dec
rorl
loopne
and
mov
lds
in
jnp
repz
mov
insb
sti
ficoms
jl
jl
out
mov
insb
imul
and
cmp
pop
pop
imul
test
add
mov
insb
mov
mov
push
lea
jb
add
xchg
xor
mov
das
dec
mov
shrb
insb
pop
pop
dec
mov
notl
movsb
pop
inc
or
cld
data16
js
and
testb
aas
scas
daa
push
out
push
jo
lret
add
ss
into
cltd
mov
or
xchg
inc
mov
test
mov
lcall
fiaddl
pop
cs
xlat
adc
add
jbe
and
lods
or
pop
into
fmull
push
mov
xchg
lret
mov
mov
ja
sbb
mov
int3
mov
imul
scas
jge
inc
adc
or
xor
sbb
pop
jecxz
hlt
outsl
test
leave
aas
movsl
xor
test
mov
inc
loop
pop
lahf
inc
pop
ret
cmpl
imul
int
aad
js
push
dec
push
jg
dec
adc
ret
incl
icebp
and
pop
imul
insl
mov
aas
cmp
xlat
popf
cwtl
adcb
lret
ljmp
pop
jne
leave
add
aas
jmp
sub
out
add
stc
xchg
xor
mov
inc
dec
cmpsl
daa
push
rcll
add
ds
lcall
repnz
aaa
and
loopne
mov
or
cmpsb
cs
rol
out
aaa
cmp
push
add
sbb
push
push
adc
jae
cmp
sub
aaa
stos
mov
jnp
mov
jge
xor
xchg
and
sbb
mov
add
push
cmp
adc
sbb
shr
jnp
pop
scas
enter
call
adc
xor
out
mov
mov
cmp
push
mov
iret
mov
sahf
push
mov
data16
push
push
add
add
jae
aam
xorl
rolb
add
rcl
sub
xorl
and
add
imull
mov
lods
inc
jb
jge
stos
inc
popa
jl
xchg
call
scas
fists
xchg
and
stc
cmp
mov
pop
popa
leave
frstor
lock
and
adc
xor
xor
insb
jmp
sub
sbb
int
lahf
and
daa
fmul
mov
imul
pop
mov
jmp
sbb
fwait
out
fnclex
add
mov
sbb
lds
lret
nop
mov
add
mov
add
stos
mov
add
and
out
cwtl
mov
add
jne
xor
mov
addr16
mov
push
sub
mov
mulb
inc
test
mov
insb
push
call
ds
fisubl
pushf
dec
or
leave
ret
aaa
incl
bound
cwtl
and
test
or
and
gs
sub
js
cli
sbb
or
loope
mov
and
inc
ds
shlb
xchg
xchg
test
cmp
push
add
fnstcw
les
push
mov
add
bound
xor
aad
cmc
pop
insb
adc
lods
and
mov
adc
movsb
sti
cmp
out
pop
xorl
out
jbe
add
aam
xchg
pop
jg
fimull
inc
adc
into
movsl
mov
jnp
repnz
shrl
clc
inc
add
test
stc
dec
dec
repz
push
cs
in
fisttpl
cmp
pop
push
insb
pop
out
adc
xor
add
out
adc
lahf
push
mov
aas
imul
mov
cli
ficoms
loop
repz
sbb
sub
mov
popf
jns
dec
or
xchg
pop
pop
sbb
dec
aas
outsl
xlat
pop
xchg
mov
and
sub
cmpb
pop
xor
inc
cmp
lods
mov
int3
mov
sbb
sahf
or
cmp
dec
aaa
loop
fisttpl
pop
ja
push
fs
dec
imull
test
stos
pushf
push
jg
or
push
jbe
fistpll
add
xchg
mov
and
or
jmp
test
dec
pusha
std
mov
pop
or
nop
mov
push
rcrb
push
adc
ss
push
mov
push
mov
loop
or
rsm
and
fmulp
repnz
cmp
lahf
rcl
fnsave
adc
lds
dec
popf
out
jge
mov
jnp
cmp
xor
jecxz
add
adc
push
sahf
scas
sub
cmpsb
shlb
sub
notl
xor
push
and
out
mov
outsb
int3
aad
hlt
pop
xchg
xor
rclb
push
popa
daa
cmp
add
test
mov
insb
push
pushf
push
add
ret
inc
cmp
mov
sub
sbb
add
enter
mov
inc
into
call
insl
jl
test
xor
in
push
inc
push
je
repz
cmp
js
pop
mov
cli
xchg
pushf
rorl
jnp
push
pop
stos
pop
lcall
jno
sbb
xchg
pop
inc
loop
ljmp
xor
sbb
xor
fidivs
mov
and
and
test
rolb
jecxz
adc
mov
sub
pop
sahf
pusha
insl
xor
insb
int
and
xlat
fdivp
subb
or
and
in
jo
scas
add
addr16
and
add
stos
mov
mov
push
aam
loope
jle
cmp
or
test
lods
lret
inc
and
mov
loop
ret
mov
xchg
scas
push
pop
sub
enter
inc
fildl
data16
loop
jl
push
es
or
pop
mov
ljmp
push
in
adc
sbb
inc
xor
cmp
mov
insl
leave
jbe
test
mov
sbb
jnp
pushf
ds
flds
push
insb
mov
mov
cmp
cmc
shll
sub
insb
mov
cli
cmpsb
roll
mov
sarb
fmul
aad
mov
stos
xor
iret
jmp
dec
xor
xchg
mov
test
mov
push
add
xchg
cmpl
cwtl
incl
aam
mov
inc
jb
mov
js
enter
adc
iret
jo
jl
mov
gs
jmp
shll
push
adc
sub
into
pop
shll
loope
divl
xchg
loop
rcrl
mov
sub
xor
stos
cmp
sub
mov
xor
add
shll
dec
sub
sub
push
es
mov
adc
out
shrb
bound
stos
sti
or
mov
in
xchg
mov
sbb
jecxz
into
sub
pop
lret
cltd
push
dec
stos
rclb
ret
dec
xchg
jno
sbb
daa
out
or
jne
xchg
inc
rorb
shl
cmpsb
lods
lcall
sbb
xchg
jae
inc
cs
outsl
mov
dec
or
sbb
xchg
sub
mov
fnstsw
dec
add
jmp
mov
jno
mov
mov
xchg
push
popa
dec
or
repz
arpl
movsl
dec
shlb
out
notb
push
pusha
fcmovbe
mov
pushf
dec
fidivl
pop
push
bound
jns
xor
ds
cs
xchg
cli
pushf
hlt
call
call
subl
push
test
mov
sbb
scas
les
and
xchg
push
push
adc
loope
pop
frstor
cmpsb
push
mov
mov
add
pop
mov
daa
fcomi
bound
adc
and
test
sbb
or
out
icebp
add
xchg
or
lods
push
xchg
sbb
insb
cmc
orl
pop
or
fs
scas
dec
insb
mov
aad
push
jae
dec
jne
fcmovu
sbb
inc
pop
push
pop
push
jg
cli
fsubs
inc
sub
adc
icebp
movsl
subl
enter
pushf
pushf
and
repnz
jno
push
xor
push
gs
jnp
inc
push
mov
nop
popf
mov
dec
adc
lahf
cmp
int
and
push
into
jno
mov
inc
negl
or
mov
in
jle
rcrb
out
cs
stos
cmp
push
mov
popf
inc
fisubrl
or
push
test
clc
mov
sub
xor
ds
cmc
andb
lods
adc
ja
int3
imul
cmc
add
xor
mov
adcl
hlt
call
push
pop
mov
out
and
int3
jp
aam
and
inc
add
out
fmuls
pop
int
pop
cmpsb
mov
ret
sub
jbe
mov
mov
fcoms
addr16
shr
add
push
sbb
fcoms
dec
lods
sahf
add
addr16
sub
inc
mov
pop
sbb
arpl
lods
cmp
js
fdivrs
iret
pop
add
pop
mov
popf
hlt
jmp
pop
int3
ss
clc
cmp
das
pcmpeqb
pop
in
pop
cmp
inc
repnz
enter
shlb
jne
leave
add
cmp
in
and
test
add
js
adc
dec
push
or
sti
jp
lahf
pushf
xor
jmp
or
mov
mov
test
mov
outsb
ja
test
xchg
dec
std
jecxz
into
add
push
mov
add
js
inc
scas
lods
mov
cmp
add
data16
std
push
mov
lcall
out
or
sub
push
and
fldln2
inc
scas
into
scas
pop
mov
pop
inc
std
xchg
sbb
js
call
std
repnz
mov
into
sti
cmp
and
jge
sub
or
add
shrb
pop
xor
mov
mov
jns
les
cmc
jmp
cmp
mov
xchg
adc
into
popf
add
push
pop
pop
jge
cmp
pop
or
sbb
add
test
xor
rorl
dec
mov
cs
shr
add
jns
lret
sub
outsb
clc
aas
shll
adc
pop
inc
shr
fnsave
pop
mov
and
pop
mov
repz
mov
jne
push
imul
out
inc
add
je
and
xor
mov
pop
sbb
or
cmp
cmpl
ja
sbb
xor
stc
and
xor
or
inc
rcr
jmp
or
jns
out
bound
fdivrl
cmp
xor
dec
mov
sbb
shll
cs
xor
stos
addr16
jne
ficoml
loopne
mov
xchg
or
fadds
out
negl
xchg
clc
inc
push
out
mov
pop
repnz
mov
cwtd
pop
addr16
inc
mov
lods
xor
pop
sub
xchg
icebp
dec
push
xchg
mov
xor
xchg
js
cmpl
daa
jno
cmpsl
xor
or
push
push
and
jnp
test
inc
adc
push
aaa
sbb
jae
imul
adc
ret
pop
sahf
mov
popa
pop
jl
push
outsb
sub
insl
or
adcb
mov
cltd
add
sub
xchg
ds
lods
xchg
dec
cmp
dec
in
out
jmp
sub
sbb
test
jns
test
cmc
jnp
jnp
jb
mov
push
in
lods
fidivrl
inc
inc
xlat
aaa
lock
dec
jge
mov
inc
dec
or
adc
jl
and
outsb
das
inc
insl
cld
sbb
push
pop
mov
in
mov
ss
in
mov
iret
push
fimull
xchg
shrl
cmp
or
cmc
and
loope
addl
push
adc
or
mov
subb
scas
mov
gs
cmp
inc
xchg
push
adc
jbe
mov
jo
or
cmp
movl
iret
cld
shrb
jecxz
in
lea
insl
adc
dec
test
out
jge
adc
pop
out
cli
sahf
aaa
sub
sti
mov
iret
xor
push
pop
mov
clc
adc
cmp
test
leave
adc
cmpsb
in
dec
xor
shl
mov
mov
mov
or
cmp
into
out
pop
lods
mov
scas
jbe
popf
fsubrs
notl
iret
pushl
xor
out
xchg
loopne
es
call
rorl
popf
fwait
adc
dec
jle
pop
nop
insb
loope,pn
icebp
imul
jecxz
pop
xchg
pop
rcrb
in
in
test
out
adc
xchg
push
inc
inc
mov
pop
and
bound
sbb
dec
or
movsl
pop
daa
repnz
sbbl
inc
or
inc
popa
fistl
ficomps
lods
gs
inc
mov
jl
sbb
mov
ja
jp
mov
mov
dec
inc
cmpsl
cmp
xchg
lahf
sbb
scas
rcrb
adc
mov
pushf
inc
jl
outsl
add
cmc
xor
lea
xchg
imul
insb
inc
sub
in
mov
and
cmp
dec
aam
xor
push
xor
incb
leave
xor
mov
pop
lds
arpl
test
dec
push
scas
gs
js
aaa
ljmp
jle
mov
fistl
or
and
mov
dec
mov
imul
jecxz
or
pop
jmp
psubsb
adc
test
mov
fwait
mov
or
insb
bound
dec
jecxz
frstpm(287
out
sbb
sbb
jb
jp
xchg
fldt
cli
add
cmpl
sbb
stc
rcrl
fimull
mov
pop
xor
imul
fstp
jg
xor
test
into
aaa
mov
aas
push
aaa
jmp
nop
push
mov
pop
sub
ret
sub
push
loopne
mov
out
or
enter
pop
pop
sahf
testl
inc
or
cld
dec
mov
xorl
xlat
shlb
imul
pop
aad
out
daa
mov
sbb
xor
cmpsl
and
ret
repz
push
push
jle
cld
inc
ja
sub
sbbb
imul
cmpsb
xor
pop
or
mov
adc
inc
adc
inc
cmc
jae
adc
pop
popf
mov
push
jae
cmc
hlt
inc
iret
into
test
pop
js
test
jne
xchg
push
jg
imul
cmpsl
mov
je
fidivl
mov
fwait
xchg
inc
jns
lds
lea
and
lret
iret
jnp
add
mov
mov
mov
jae
pop
fsubrl
pusha
dec
xchg
xchg
icebp
jmp
inc
mov
sbb
jmp
jno
in
jo
mov
shll
mov
mov
pop
xchg
xchg
mov
loopne
stos
and
add
mov
inc
inc
scas
push
xor
les
in
push
stc
clc
scas
je
nop
xchg
aam
inc
inc
fcomi
bndstx
movsb
repnz
xchg
push
cmpsl
ret
pop
mov
jns
cwtl
xor
test
ljmp
adc
mov
sbb
fwait
mov
inc
popf
daa
incl
and
or
jns
pop
xchg
and
in
mov
rcr
mov
fdivs
mov
xlat
xchg
mov
push
sar
push
ljmp
or
movsl
pop
xor
push
in
lods
mov
leave
aam
sbb
lcall
jecxz
ljmp
iret
inc
xchg
jl
jno
in
cld
jp
xchg
lods
mov
cmp
lret
xchg
fwait
mov
dec
fldl
jecxz
fstpl
xchg
adc
fmuls
pop
mov
mov
add
add
out
and
lods
loop
and
add
loop
cmpl
dec
sbb
add
push
mov
sbbl
or
sub
mov
jbe
insb
in
stos
iret
dec
mov
bound
andl
aam
repz
xlat
sbb
bound
push
adc
fstl
fcomi
and
add
mov
xor
scas
xor
xchg
inc
xchg
bnd
bound
cmpsl
jne
mov
adc
mov
xor
test
out
mov
aaa
testl
inc
sbb
pop
push
mov
dec
stc
sahf
sti
inc
orl
rcrl
mov
pop
mov
mov
add
pop
hlt
out
xchg
inc
popa
pushf
test
cwtl
jl
mov
out
mov
push
mov
pusha
xor
mov
jl
out
add
mov
enter
adc
push
cs
iret
xchg
adc
jb
xlat
fistpll
pop
out
jns
fsubrs
pop
mov
push
lea
push
call
jb
cmp
inc
mov
sub
xchg
mov
test
lds
dec
add
fidivs
inc
xchg
pop
mov
stos
jne
or
outsl
or
testl
jns
mov
mov
gs
mov
jp
mov
cmpb
sbb
les
pop
add
xor
mov
push
pop
in
repz
out
pusha
insb
inc
data16
lret
xor
jp
aad
pop
or
mov
int
leave
lret
fcomp
xchg
pop
pop
mov
decl
push
jnp
orl
cmp
pop
cld
lret
aaa
and
subl
dec
enter
jmp
push
lcall
cltd
data16
bound
jo
cs
jns
pop
out
mov
xor
out
jle
ret
pop
mov
rcll
movsb
mov
mov
pop
cmpsb
cmpsl
addr16
icebp
cmp
mov
xor
aas
inc
lahf
cmp
ja
sub
jmp
push
add
xor
xor
insl
popa
push
into
out
jg
jbe
or
gs
jmp
dec
pushf
push
inc
rorb
lahf
push
mov
sub
out
ds
sbb
enter
and
sub
sub
xchg
xor
clc
pop
lds
fisttps
inc
jb
lock
mov
lret
add
loope
lds
out
inc
sub
cmp
clc
mov
jno
inc
loope
jbe
inc
lret
insl
jnp
sub
hlt
out
das
int
scas
jmp
dec
in
pop
cmp
loopne
pop
std
xchg
scas
decb
dec
test
sub
out
inc
and
lret
xlat
sti
cmp
sub
sbbb
push
and
inc
enter
rol
sbb
pop
mov
and
xor
stc
xlat
add
push
mov
adc
push
jg
into
mov
cmp
adc
aad
lret
and
and
sbb
outsl
or
cmp
hlt
clc
repz
pop
cmp
insl
mov
inc
jnp
adc
mov
jmp
mov
in
sti
sbb
lods
mov
jecxz
adc
jae
mov
sbb
lret
mov
jmp
jb
xchg
mov
adc
lea
bound
loop
sbb
sbb
repz
mov
xor
je
popf
pop
mov
xchg
and
sbb
out
insb
leave
mov
sbb
std
push
sbb
jmp
mov
mov
mov
cmp
inc
ret
cld
popa
in
pop
push
jno
xchg
mov
or
std
ss
mov
out
rorl
mov
test
fcoml
mov
add
out
xlat
fstps
popf
movsl
sbb
shll
repnz
rsqrtps
push
nop
pushf
test
and
mov
test
fwait
clc
and
pop
push
mov
sbb
fistpl
sbb
imul
xor
push
lea
cmpsb
cltd
cmp
sbb
mov
aad
adc
sub
jp
push
add
sub
pop
push
lds
test
lahf
jg
sar
xchg
xor
mov
or
into
inc
pop
outsb
fldcw
and
mov
sbb
jecxz
cmp
lea
imul
push
mov
push
out
loopne
xor
loopne
fucomip
lock
lret
std
mov
sarb
inc
call
lret
movsl
xor
roll
cwtl
out
or
add
pusha
mov
jecxz
test
outsl
aam
mov
sub
cs
pushf
lds
es
xor
xor
jmp
sub
dec
push
or
rorb
stos
cmp
out
cmp
dec
stos
in
inc
test
dec
push
push
stos
pop
jae
pop
or
add
xor
jo
int
inc
jno
lock
lods
xor
sbb
lcall
jp
adc
mov
pop
sbb
inc
or
push
notl
xor
cmc
or
xchg
das
adc
ljmp
jecxz
mov
dec
mov
insl
add
push
adc
lods
out
mov
xchg
sub
popa
call
cltd
add
inc
xchg
jbe
leave
lods
in
or
enter
jo
leave
scas
scas
mov
icebp
mov
mov
sub
dec
mov
inc
aaa
push
lock
jns
mov
cmp
dec
or
xchg
dec
cwtl
das
xor
adcl
repnz
jl
ds
iret
fistps
out
mov
stos
jl
in
pop
testl
mov
lcall
adc
es
scas
pushf
and
jo
stc
dec
cmp
pop
in
cmp
xor
xchg
movsl
mov
sbb
js
aaa
pop
cwtl
add
shl
pop
jnp
repnz
xorl
stc
cld
mov
adc
add
out
pop
mov
ds
push
in
inc
testb
push
mov
fcoms
mov
mov
aam
and
mov
dec
inc
ret
mov
adc
cmp
mov
xchg
in
jns
jecxz
cmp
push
or
mov
test
sub
mov
movsl
sbb
lret
jno
jmp
ret
jp
pop
and
and
cs
dec
cli
pop
mov
shll
inc
jnp
lods
outsl
imul
inc
mov
sbb
dec
int
and
iret
out
xor
push
mov
aad
inc
fidivrl
cmpsl
out
je
mov
dec
cmp
adc
pushf
push
pop
jg
loope
les
jnp
out
pop
adc
mov
imul
mov
mov
sbb
pop
orb
in
dec
cli
in
movsb
scas
pop
repnz
sbb
sbb
int
or
fistpll
mov
cmp
cmpsb
imul
fnsave
sbb
gs
cwtl
jecxz
xor
loopne
pop
je
add
mov
test
xchg
dec
das
or
icebp
jb
or
push
pop
xlat
lldt
xor
mov
imul
aaa
push
or
sub
rcrl
sbb
adc
sub
dec
xchg
mov
push
or
push
arpl
push
jmp
in
cs
jbe
dec
stc
jb
cmpsl
rol
and
cmc
dec
add
xor
loop
mov
insl
insb
inc
jo
cltd
ret
lret
enter
inc
insb
addr16
mov
es
test
lea
mov
ljmp
inc
xor
xchg
shlb
jl
cltd
sub
dec
test
pop
jl
mov
jl
in
push
hlt
dec
mov
jno
adc
mov
call
and
adc
xchg
mov
sbb
xor
repnz
int
mov
pop
jb
and
imul
mov
loope
shll
and
pop
mov
or
scas
sub
imul
mov
and
cs
xor
dec
fsubrs
pop
hlt
sub
mov
cmpsl
pop
lea
xchg
lods
arpl
clc
jo
test
xchg
inc
es
dec
mov
repnz
jmp
ja
and
cmc
dec
in
jo
in
and
adc
add
cs
cmpsb
mov
mov
mov
xorb
mov
jno
inc
sahf
cmp
jnp
out
int
mov
jge
leave
addr16
mov
xlat
push
gs
mov
test
aam
and
xchg
in
test
in
pop
test
iret
xchg
sbb
lret
dec
fiaddl
ss
inc
sbb
xchg
xor
add
mov
or
leave
mov
fnsave
ret
pop
lock
adc
sub
test
iret
and
adc
lret
ds
push
outsl
fsubrl
jmp
inc
test
jo
xchg
pop
jg
ja
movsl
push
out
add
xchg
mov
nop
js
sub
jmp
jb
mov
xchg
inc
aaa
lods
xchg
adc
xchg
fstps
xlat
cs
dec
negb
enter
cmp
movsb
jg
jl
inc
add
mov
xchg
cld
shr
into
mov
push
sub
stos
enter
sbb
ret
jno
movzwl
mov
movsb
test
xchg
stos
and
add
adc
insb
inc
div
adc
call
fwait
jne
lret
test
pop
push
add
add
and
jae
mov
pop
sahf
push
xchg
push
sbb
sub
mov
cld
int
std
int
cwtl
shl
je
data16
mov
push
xlat
and
mov
incl
mov
fcmovu
mov
cwtl
xchg
ss
adc
or
cmp
popf
pop
arpl
pop
xchg
sub
out
cmp
jl
cli
sub
insl
loope
pop
add
cli
pop
xchg
loope
je
add
adc
sub
loop
and
adc
bound
add
in
mov
clc
push
popf
pop
push
stos
cli
and
enter
mov
xor
add
xchg
pop
jle
lret
lods
daa
push
fs
push
out
jb
aad
push
cltd
xlat
jge
jbe
jle
das
push
and
xchg
adc
shlb
push
adc
pop
jo
jo
xchg
mov
lea
insl
sub
cmp
movb
negb
popl
mov
movsl
mov
pushf
inc
gs
pop
push
push
add
jg
or
out
ja
mov
in
shlb
fdivrl
int3
adc
jns
movsb
adc
xchg
or
lods
push
mov
push
test
mov
imul
sbb
add
sub
lret
mov
mov
inc
push
cld
out
adcb
mov
jno
sahf
sbb
fnstsw
sub
repz
pop
push
push
push
pop
sbb
mov
jb
cwtl
loop
sub
cmp
shlb
push
les
sub
ja
lds
fcompl
scas
add
jle
in
pop
int3
not
mov
jmp
push
inc
dec
sub
sub
pop
loop
in
add
pop
in
dec
dec
andl
bound
cld
jmp
loop
and
mov
lret
das
ret
and
cli
scas
add
inc
fbstp
lret
xchg
add
clc
push
and
clc
sub
div
test
push
fwait
pop
jo
scas
fucomi
roll
in
adc
or
mov
jae
mov
push
decb
cmp
pop
popf
mov
cmp
ja
sub
mov
mov
push
repz
data16
mov
sub
jp
cmp
clc
jle
add
jg
mov
jmp
loope
mov
xchg
xchg
sbb
and
loope
xor
stos
push
cmp
in
cmp
rclb
mov
inc
inc
stos
push
inc
iret
push
dec
and
push
push
add
jo
dec
jl
xchg
es
sbb
fdiv
lods
adc
iret
xchg
mov
fisubrl
pop
pop
out
icebp
xchg
mov
aad
sbb
and
mov
in
shlb
dec
jg
into
mov
pop
inc
das
mov
jg
shll
mov
and
inc
hlt
jo
mov
mov
in
imul
push
fsubl
dec
jo
add
xor
aad
sub
dec
pop
int3
js
xor
mov
orb
jmp
mov
lahf
add
add
inc
fmuls
push
das
stos
das
ss
sub
xchg
subb
adc
imul
nop
cmpsb
adc
lcall
jbe
scas
lret
xchg
lea
loop
shrb
add
out
enter
cld
mov
bound
cmp
jae
cltd
clc
push
stc
lret
sub
add
in
sbb
jbe
xchg
mov
into
push
mov
fmulp
ja,pt
js
or
int3
mov
adc
xchg
clc
or
mov
cmp
jae
pop
add
icebp
push
inc
iret
aad
adc
xchg
adc
push
stos
mov
mov
pop
lret
xor
push
fidivl
repz
aas
add
pop
jae
xchg
int3
jp
fcmovnb
test
enter
sbb
xlat
mov
sub
dec
jp
xor
dec
pusha
ss
loopne
cmpsl
fldl
shlb
cmp
int3
or
test
jmp
add
std
push
out
pop
lods
sti
xor
fldl
sbbl
imul
lock
xchg
jno
in
mov
ret
jle
add
decl
out
sub
mov
andl
pushf
adc
aaa
adc
inc
adcl
mov
inc
fstps
cmp
push
call
fidivrs
jbe
ror
clc
mov
xchg
inc
inc
mov
aas
cmpsb
xchg
test
cmp
mov
lods
psubsw
push
sbb
mov
adc
shll
sbb
aaa
ljmp
xor
aam
xchg
pop
lahf
lods
lds
inc
mov
and
lahf
ret
mov
imul
mov
lods
sub
jmp
adc
shrb
leave
adc
mov
pinsrw
xor
in
aaa
cmpsl
stos
daa
js
sbb
push
in
pop
add
cmp
xchg
cs
sbb
cmpsb
fstpt
jp
pop
lods
aad
pop
mov
pop
adcb
stos
dec
sub
cmpsb
mov
mov
mov
test
dec
repz
fmull
cmc
jb
out
mov
inc
push
jecxz
insl
aam
adc
sbb
jl
test
es
mov
subl
fmul
mov
pushf
lahf
es
or
lret
fwait
add
aad
andl
fistl
addl
lea
inc
pop
int
fdiv
pop
ljmp
jns
pop
xchg
jecxz
pop
pop
jno
jle
in
jae
arpl
mov
adc
push
sub
lea
cmp
repz
gs
xchg
dec
sbb
outsl
mov
int3
jle
test
ret
in
test
jbe
clc
mov
xor
fisubrl
hlt
xlat
push
daa
cwtl
xor
jecxz
shlb
ret
inc
jmp
sub
pop
mov
outsl
sbb
sub
shrb
out
jns
int3
lcall
cmp
jmp
dec
insb
fdivs
mov
js
cmp
or
arpl
frstor
push
adc
insb
imulb
pop
jo
adcl
xchg
mov
adc
stc
mov
and
dec
inc
and
loopne
push
push
rolb
jnp
test
shrl
lret
popf
arpl
imul
mov
cld
push
iret
mov
dec
lods
js
push
or
mov
xchg
out
clc
sbb
and
cmpsb
xchg
xchg
loop
push
cwtl
adc
mov
jmp
and
mov
rcl
push
jge
mov
xchg
mov
cmpb
dec
dec
scas
rcr
out
sahf
cltd
add
mov
sbb
add
nop
add
into
mov
into
rcrb
adc
adc
daa
pop
cmp
pop
push
cmc
movsb
cmp
dec
fmuls
fwait
pop
push
dec
adc
shl
jg
cmc
mov
dec
dec
insb
or
decl
pop
nop
or
sub
cltd
sti
push
jg
dec
pushf
add
jb
lea
mov
pop
mov
adc
mov
cmp
cmp
push
mov
mov
push
into
out
leave
jb
mov
and
int3
jecxz
in
inc
repz
push
jecxz
add
in
aaa
or
mov
int
push
mov
test
xor
outsb
es
pop
pop
loopne
cli
inc
or
jl
pop
xor
dec
add
jne
xchg
pop
mov
mov
xlat
mov
push
add
mov
mul
insl
cmp
mov
mov
adc
loop
dec
popl
or
dec
out
insl
push
push
ret
scas
mov
adc
ficomps
insl
bound
stos
shl
sahf
movsb
add
insb
js
int
mov
hlt
lret
addr16
jae
push
outsl
mov
pop
stos
popa
mov
mov
sti
out
adcl
jl
sahf
and
mov
mov
test
mov
pop
sbb
mov
out
or
repz
out
or
mov
push
in
mov
mov
sbb
jns
cmpsb
rorb
inc
call
shrl
dec
imul
adc
dec
sar
ficomps
jecxz
mov
xor
add
movsl
lods
pop
and
push
adc
data16
jmp
outsl
mov
push
stos
cmp
push
xor
push
cli
adc
jbe
cmp
data16
js
add
pop
push
jg
repnz
js
cmpsb
sti
dec
mov
fdivrs
mov
lods
adc
or
imul
gs
adc
test
xchg
or
jmp
cld
cmpsb
mov
repnz
repz
mov
inc
or
cmp
push
push
cli
or
push
outsb
mov
aam
lods
sbb
out
mov
add
rcll
or
lret
sbb
jbe
mov
addr16
jge
fadd
inc
jo
lret
dec
xchg
pop
pop
push
adc
out
sbb
imul
js
in
mov
push
or
rep
das
insb
pop
jb
out
push
xchg
mov
xchg
out
push
jmp
inc
enter
push
cltd
xchg
scas
bound
insb
ss
mov
mov
rcr
mov
shrl
mov
jne
sub
insl
in
jp
pop
jl
into
inc
push
sti
push
loope
xor
sub
repnz
in
shr
imul
pop
dec
imul
popa
pop
or
inc
push
sub
sbb
jmp
inc
adc
and
mov
ficoml
and
and
into
sbb
and
mov
addr16
xor
mov
mov
mov
and
jae
cmp
lock
push
or
repnz
jecxz
mov
push
pop
pop
adc
stos
jb
psrld
lcall
mov
repnz
xor
mov
mov
popa
ror
sbb
sbb
xchg
aam
mov
adc
pushf
sub
loopne
pop
movsb
adc
xor
in
cmpb
rol
fdivl
in
xchg
stos
mov
mov
xchg
xchg
nop
jecxz
pop
cmpsb
xor
sbb
adc
rolb
adcb
and
cli
js
sbb
ljmp
mov
inc
dec
and
rcr
adc
ret
cs
push
insl
decb
es
imul
mov
icebp
sahf
xchg
inc
mov
cmpsb
dec
out
add
imul
push
lea
scas
dec
gs
mov
xor
mov
add
rolb
jb
add
push
and
cmp
and
push
inc
and
dec
and
stos
mov
xchg
out
popf
js
pop
dec
mov
cltd
sbb
xor
ret
cmpsb
fsubr
xor
pushf
shlb
out
mov
dec
outsb
into
rorl
addr16
add
lea
dec
pop
push
ret
xchg
testl
or
mov
sahf
ret
or
popa
jmp
jb
mov
cs
call
xchg
xchg
ds
int
inc
fistps
out
xor
sub
jo
cs
inc
out
std
mov
loopne
pop
dec
insb
jp
cli
mov
lahf
imul
pop
pop
lock
into
repz
cmpsl
mov
mov
jnp
mov
dec
stos
punpcklbw
test
inc
xlat
xchg
out
ror
popf
int3
xchg
push
fcoml
mov
push
test
sub
out
fdivl
mov
cmp
push
xor
add
dec
out
fisttpl
imul
dec
mov
addr16
mov
xor
push
mov
ds
das
and
or
cli
cs
cwtl
inc
jl
mov
mov
xchg
sub
or
cwtl
in
inc
and
and
cs
adc
mov
jp
lahf
std
cs
aad
aas
xchg
adc
sub
cmpsb
sub
pushf
enter
sahf
adc
cmp
in
push
mov
cmpsl
movb
push
pop
mov
stos
movsl
shl
jp
in
dec
xor
gs
jecxz
rcrl
sub
add
adc
repz
mov
enter
jae
arpl
inc
sub
xchg
inc
or
loop
add
mov
into
repz
test
lcall
clc
push
xchg
clc
lret
ret
arpl
sub
adc
mov
xchg
mov
xlat
lahf
push
push
inc
mov
mov
shrb
cltd
pop
jns
or
xor
out
pop
outsl
js
out
push
mov
movsl
insb
cltd
testb
dec
push
cmp
lea
aaa
mov
add
push
fdivp
dec
and
adc
popa
mov
imul
sbb
pop
cltd
adcl
rcrl
inc
sbb
mov
inc
das
data16
arpl
iret
fwait
daa
dec
cmp
push
push
and
jle
push
adc
add
pop
add
mov
fwait
loopne
das
push
jns
imul
fldlg2
gs
bound
push
cmp
sahf
mov
test
mov
inc
stc
mov
xor
ja
andl
dec
and
mov
fwait
pushf
push
mov
push
push
push
mov
mov
int3
xbegin
insl
daa
aam
or
jge
jno
add
jbe
pusha
cmpsb
aas
xchg
fs
inc
enter
xchg
dec
movsl
lock
push
mov
mov
dec
pop
lret
das
or
adc
sub
testb
dec
mov
xchg
ja
sahf
rcll
out
dec
arpl
xor
sbb
push
or
adc
mov
bound
fcoml
inc
dec
push
dec
mov
popa
and
in
xor
aas
jmp
pusha
fnstcw
cmpsb
lret
mov
mov
mov
jg
xchg
pop
fistpll
dec
cmpsl
in
cmpsb
cld
mov
scas
bound
cmc
mov
ja
add
stos
xchg
mov
daa
jge
sahf
cmpb
rcrl
cmp
jae
dec
lock
dec
jb
leave
adc
pop
or
mov
and
dec
mov
add
out
add
daa
xchg
and
jl
scas
pusha
call
dec
repnz
movsb
pusha
pop
mov
bound
mov
mov
cmpsl
ret
in
xchg
pop
xchg
in
cwtl
out
and
or
cmpsb
imul
cmp
pop
stos
fs
mov
sub
frstor
sub
aad
in
gs
jmp
cmpsb
int
xor
shr
fisttps
push
inc
stos
and
imul
jb
add
cmp
mov
sti
inc
cmp
ja
mov
mov
cmp
orb
mov
popf
les
jl
lods
inc
mov
sar
andl
aaa
sbb
ret
or
mov
dec
enter
mov
es
push
dec
mov
mov
push
repz
fistpll
inc
push
dec
sub
ret
call
ret
es
xchg
sbb
mov
add
cmp
add
and
jl
dec
dec
jg
adc
jp,pn
mov
int
mov
gs
jp
push
inc
mov
lcall
loope
fcompl
fmull
repnz
add
and
xor
insb
sub
pushf
inc
or
sub
hlt
in
sbb
fs
mov
cmp
lods
xorb
ds
fsubrs
rorb
je
pop
cmpsb
mov
insl
cmp
sbb
imul
loope
pop
imul
pusha
cwtl
push
add
imull
fcoms
jnp
arpl
and
pop
test
cld
loope
fs
in
cmpsb
call
sbb
jbe
or
push
in
andb
subl
ret
stos
imul
in
xor
pop
clc
mov
and
xchg
outsb
sub
subb
or
xlat
or
mov
data16
cmp
les
sub
pop
stos
add
xor
and
pusha
enter
shlb
cmp
jmp
sub
js
xlat
push
sub
mov
pop
jecxz
mov
js
mov
cli
and
mov
and
sbb
pop
fidivl
ret
push
mov
cmp
test
ret
outsb
pop
fld
sbb
inc
mov
push
popa
push
divl
jnp
addl
lock
leave
iret
sub
sbb
call
mov
movsl
sbb
jns
test
cmp
std
push
mov
xor
adc
out
lcall
js
dec
cmpsl
adc
iret
mov
dec
mov
int3
test
ficomps
shr
push
xchg
popa
loopne
push
adc
mov
sub
push
out
jp
sbb
mov
mov
icebp
xchg
int3
sti
push
cwtl
mov
or
push
aam
shl
pop
jmp
mov
xorl
insl
jl
mov
out
in
out
jecxz
stos
insb
push
sbb
and
sub
adc
pop
cmpsb
rorl
mov
or
mov
jnp
das
mov
lcall
icebp
pop
imul
sti
sbb
cmp
fs
jbe
mov
out
out
movsl
stc
js
xor
jbe
cmpsl
test
mov
fldt
inc
inc
adc
icebp
xor
in
ret
lea
pop
gs
clc
inc
mov
sub
out
dec
imul
lcall
jle
add
jecxz
inc
xor
aaa
out
aad
data16
cmp
cmp
leave
and
add
cmpsl
cmp
push
outsl
xor
cld
add
vmaxps
cmp
add
xchg
sub
jne
daa
scas
aad
jae
popf
sti
xchg
std
lock
push
mov
push
lret
les
shlb
mov
in
or
push
add
add
roll
repz
sbb
and
jae
in
in
add
jmp
inc
inc
out
enter
testb
xor
nop
out
or
pop
mov
dec
xor
adc
mov
and
pushaw
jns
loop
lret
xor
xor
arpl
bound
ret
push
loope
or
das
lcall
rclb
pop
stc
pushf
xor
movsb
outsb
aaa
adc
pop
jnp
or
ret
test
popf
adc
sub
cmpsb
daa
and
pushf
movsl
scas
jbe
push
rcrl
popf
push
pop
xchg
xchg
inc
push
aas
pop
fcomi
ret
xchg
sarb
aad
lret
icebp
imul
jge
ret
cld
lock
jns
repnz
mov
dec
xor
mov
jo
fistps
xchg
jbe
jb
mov
mov
cli
jmp
jg
inc
push
or
daa
mov
imul
or
cmc
jl
cmp
in
cmpsl
adc
or
call
lret
inc
mov
fisttps
loop
addr16
sub
fcompl
fcomps
lock
leave
ja
sbb
push
cmpsb
mov
mov
test
xor
lahf
xchg
fidivrs
cli
jne
mov
daa
jle
dec
sub
mov
xchg
test
loope
adc
add
cwtl
pop
test
jae
adc
shl
inc
repz
jp
xorl
sbb
push
jo
pop
mov
mov
test
sti
xor
out
and
lcall
loop
popa
aam
sbb
movsb
push
sub
ret
cli
call
lret
pop
lcall
cmp
jbe
mov
mov
inc
cltd
xchg
aas
push
jp
push
les
test
mov
and
inc
adc
jle
sahf
jl
test
mov
inc
cmp
jge
loop
jb
pop
jp
and
aad
lcall
jg
hlt
sti
mov
repnz
dec
aam
and
or
insb
push
mov
sub
mov
shll
xchg
sub
lret
fld
fadd
xor
inc
outsb
insl
lds
push
aam
out
mov
mov
mov
ss
mov
mov
stos
dec
aad
je
popa
loope
mov
pop
or
pop
sub
ss
add
in
or
and
test
test
sub
adc
cmp
dec
mov
stos
xchg
mov
bound
or
or
jb
inc
dec
jne
add
xchg
and
gs
mov
jno
xchg
lods
das
ja
push
mov
in
jmp
inc
adc
fucom
test
jbe
xor
dec
pop
mov
insl
scas
js
push
cs
clc
aam
je
loopne
imul
nop
popf
and
popa
pop
fisttps
or
icebp
sar
rorb
jle
shll
lds
ret
adc
mov
pushf
jae
dec
dec
lods
scas
rorl
cs
fdivp
add
xchg
or
mov
mov
xor
nop
jle
inc
sub
lds
or
mov
hlt
imul
mov
imul
mov
out
xchg
fwait
mov
leave
in
insb
cmp
fdivs
andl
ret
mov
push
ret
cmpl
add
pop
lods
fildl
stos
xor
movsb
repnz
push
pushf
je
push
repnz
add
pop
lods
mov
enter
add
add
xor
fsubrs
shll
adc
jmp
xchg
sbb
xchg
jae
mov
cmp
aam
or
lods
and
fcompl
jb
out
sbb
movsb
mov
xor
gs
push
pushf
mov
dec
inc
jns
xchg
cmpsb
shll
push
adc
adc
jnp
mov
adc
xor
push
andl
cs
add
imulb
fidivl
pop
dec
popf
incl
jns
push
inc
ret
stos
iret
inc
push
sahf
lcall
inc
lret
out
mov
xchg
shrb
sub
jge
push
and
add
push
sar
dec
int3
adc
mov
lret
or
push
popf
push
pop
xchg
push
outsl
daa
sub
mov
sbb
adc
or
cmpsl
aas
or
mov
test
rcrb
inc
lds
adc
scas
in
mov
mov
fcomps
sub
dec
dec
idivb
fisubrl
test
fidivrs
jg
cli
jne
fsubl
hlt
jae
xchg
mov
cmp
daa
cs
adc
xlat
pop
imul
sub
mov
mov
stc
sbb
pop
and
enter
lret
lods
or
iret
nop
sbb
pop
decb
lahf
repz
lret
cmpsl
cwtl
je
scas
pushf
stc
fnstcw
stc
xor
add
push
les
sbb
push
jp
push
mov
and
jle
cwtl
loope
sahf
pusha
frstor
imul
and
pop
dec
pop
xor
pop
in
lods
dec
adc
sahf
or
or
jbe
dec
xorb
test
push
hlt
sahf
xchg
and
xor
jno
xchg
scas
push
and
fcoms
stc
jmp
pop
adc
addr16
mov
lret
lock
int
push
mov
fs
mov
xchg
inc
sub
push
lods
pop
fstl
test
jecxz
dec
sbb
loop
clc
xlat
stos
arpl
pop
addr16
and
xor
add
adc
rcl
aaa
sub
or
mov
push
jb
out
fld
dec
lcall
enter
cltd
add
cmp
sbb
cmp
ljmp
adc
sbb
cmp
or
cltd
and
popa
cmp
sub
pop
mov
inc
lret
ret
cmp
dec
cmc
jnp
push
xor
idivl
mov
xor
jecxz
jmp
insb
pop
adc
jl
int
lds
cmp
fdivrs
jle
ror
int
sahf
int3
mov
hlt
jb
lret
out
cmp
clc
jp
xor
push
daa
sti
repnz
ret
imul
inc
dec
push
into
inc
inc
mov
ret
les
aas
mov
iret
mov
cmp
sub
pop
clc
cmp
popf
xor
adc
or
lds
mov
cmp
cmp
jle
daa
fwait
mov
loop
das
lds
mov
pushf
movsb
mov
outsl
jle
les
push
dec
daa
adc
inc
mov
and
fmulp
pop
cld
jl
loopne
jnp
adcl
stc
sbb
cwtl
sub
out
into
leave
aas
ja
add
mov
jecxz
dec
lods
stc
mov
push
bound
mov
and
and
lcall
movsl
movsl
mov
xchg
xchg
or
in
out
ja
push
lcall
jbe
mov
and
pop
ss
imul
ljmp
test
stc
loope
clc
imul
iret
xor
outsb
orl
push
shlb
sahf
mov
scas
mov
nopl
sbbl
sub
inc
inc
xchg
mov
ficoml
stc
loop
rorb
pop
xlat
das
dec
mov
and
pop
sub
iret
add
jg
push
adc
mov
fcomp
ss
cld
jbe
fimull
mov
loope
push
inc
inc
hlt
add
inc
jb
or
jecxz
mov
sbb
sbb
jge
fldl
and
loopne
push
pop
jnp
cmp
and
rcll
xor
daa
mov
xchg
int3
push
xchg
mov
sbb
cmc
std
dec
cld
mov
mov
pop
gs
ret
add
lods
pop
or
loope
stos
out
mov
ds
and
stos
stos
adc
mov
mov
js
push
jl
dec
or
stc
mov
xor
mov
add
add
or
inc
mov
jg
daa
iret
push
and
out
ficoms
clc
mov
imul
movsb
lcall
in
adc
lret
mov
sbb
decl
repz
into
cmp
lea
sub
or
and
cmp
insb
imul
jb
jbe
in
call
adc
xlat
lock
pop
and
fs
cwtl
int3
call
add
inc
cs
pop
and
push
sub
push
outsl
sub
pop
lahf
mov
into
jp
mov
push
mov
cs
data16
mov
and
sub
xor
inc
lret
aaa
sub
xlat
inc
stos
xor
pop
inc
insb
call
repz
jb
repz
sub
in
or
xchg
rcrl
jmp
adc
mov
dec
mov
dec
xchg
stos
pop
mov
aas
cmp
push
fstps
add
xlat
push
mov
arpl
mov
jnp
xor
pushf
sub
cmp
addl
jmp
add
jne
sub
push
push
shrl
scas
aaa
mov
add
dec
stos
test
cmovge
inc
in
sarb
aad
cli
or
mull
add
cwtl
push
xor
jns
jmp
int3
mov
add
ljmp
cmp
in
arpl
push
into
inc
push
sub
adc
pop
cmp
shrl
push
jmp
scas
out
add
sub
jne
lea
mov
popa
into
add
adc
bound
jns
add
sbb
jle
ss
sub
mov
cltd
aaa
inc
adc
or
xor
adcl
les
push
scas
xchg
jge
lods
xchg
push
pusha
mov
insb
std
dec
divb
jb
sub
xchg
repnz
xlat
imul
jb
arpl
jmp
jmp
ss
jl
jp
leave
out
hlt
rcrb
jae
or
rorb
sub
pop
inc
pop
jge
in
dec
xchg
and
and
test
int3
addl
mov
movsb
cmp
movsb
xchg
cmp
mov
jge,pt
and
jnp
cmp
xchg
push
sti
inc
and
inc
cmpsb
je
out
cmp
in
movsl
sahf
add
add
lcall
mov
lds
xor
sbb
fmul
test
insl
in
fadds
jl
outsb
cmp
daa
mov
mov
popa
sbb
dec
int3
dec
dec
dec
ret
jo
mov
ffree
xchg
dec
cmp
hlt
xor
out
add
std
adc
sbb
push
jmp
cwtl
sbb
dec
jne
xor
push
add
mov
push
aam
xchg
lahf
icebp
icebp
sbbl
mov
test
pop
cmp
dec
mov
jne
pushf
xchg
push
mov
pop
lahf
add
aas
cmpsl
pop
inc
xor
imul
mov
shrl
lret
sub
dec
fbstp
push
adc
out
addr16
out
testb
je
clc
ds
pop
out
mov
orb
scas
push
pop
lods
add
data16
into
lahf
adc
jae
dec
xchg
mov
sub
pmaddwd
mov
ds
mov
lds
pop
mov
data16
ret
je
imul
out
cwtl
or
ficoml
addr16
dec
or
pop
gs
pop
loopne
pop
mov
je
xchg
jmp
cmp
xchg
fistpl
cs
scas
nop
ret
stos
pop
add
xor
fdivp
xchg
jge
push
mov
jo
mov
lock
mov
mov
pushf
daa
mov
lret
sub
jbe
mov
push
push
jnp
stos
jp
mov
lods
pushf
test
lea
mov
ja
inc
sar
testb
or
or
xchg
fdivs
in
cltd
ret
xor
insl
adc
inc
and
pop
test
outsb
push
and
std
nop
fs
jmp
xchg
dec
sbb
cmpsl
xlat
scas
and
cmp
xchg
inc
mov
mov
popf
xchg
xor
bound
stos
test
mov
pop
shll
or
and
pusha
pusha
xor
or
fsubr
insl
adcb
pop
rcll
sarb
test
lret
jp
out
lock
fnsave
add
xor
movsb
push
test
pop
mov
adc
pushf
and
mov
push
inc
pop
out
mov
iret
loop
pop
andb
push
adc
mov
dec
lock
ret
fdivl
and
adc
ljmp
lret
mov
cmpsl
and
jae
xchg
popa
ds
jb
dec
or
push
cmp
pop
scas
loop
sbb
outsl
inc
xchg
addb
js
loop
ret
jp
push
sbb
xchg
mov
movsb
sub
cltd
hlt
push
mov
mov
adc
jnp
scas
push
sbb
rcrl
pop
mov
lods
xchg
pop
inc
or
frstor
sub
adc
or
out
lret
in
push
sub
jmp
rclb
leave
jnp
bound
push
push
icebp
adc
adc
pop
imulb
mov
or
shl
stos
ret
add
lcall
jnp
test
stos
xchg
sti
stos
mov
scas
cs
repz
loop
xor
mov
daa
mov
ret
sub
pop
scas
movsl
xor
insb
nop
adc
test
js
xchg
or
sub
enter
dec
sbb
cmp
mov
fsubs
inc
addr16
ds
das
fnsave
add
repz
or
sbb
push
and
insl
mov
or
pop
jbe
push
add
add
cli
mov
mov
out
into
xchg
adcb
sub
dec
daa
push
leave
ja
icebp
mov
decb
jmp
dec
fcomps
adc
int3
cltd
cltd
addr16
push
nop
stc
shl
popa
jbe
or
dec
cmpsl
push
int
xchg
push
insb
cwtl
pushf
addr16
jg
rcrl
pop
inc
shrb
in
cmp
xor
jmp
dec
out
cwtl
xchg
sub
sub
dec
loop
aas
mov
iret
mov
test
loope
inc
sahf
xorl
in
fcomps
shl
xchg
decl
stos
sbbb
lret
xchg
in
into
shrl
insl
mov
leave
adc
ds
lock
mov
decl
test
inc
mov
push
out
jae
mov
mov
es
mov
lods
in
cwtl
cmpl
push
dec
xchg
test
cmp
push
ret
mov
sahf
mov
imul
in
jnp
dec
mul
arpl
cmp
arpl
shrb
cltd
adc
mov
cmpsb
sub
hlt
dec
add
lods
out
shrb
lods
mov
adc
leave
cmc
push
xchg
pop
fsubr
test
jle
or
mov
imul
outsb
jecxz
ljmp
push
or
xor
mov
push
hlt
xchg
sbb
f2xm1
fsts
lret
push
mov
fadds
divl
sbb
aad
shlb
scas
mov
out
les
shlb
cld
fsubrs
das
int
popa
sbb
fwait
inc
mov
mov
mov
or
stc
rolb
push
mov
pop
iret
in
jae
lds
xchg
das
adc
fwait
test
aas
fsincos
xchg
jp
inc
pop
jmp
jnp
repz
cmpsb
sub
add
leave
rclb
popa
or
sub
sub
jle
push
movsl
pop
sahf
push
ja
scas
filds
xchg
test
mov
dec
mov
mov
xchg
sub
test
arpl
paddq
movsl
jne
jg
es
and
inc
mov
dec
call
pop
aam
out
fwait
call
adc
inc
ffreep
nop
push
push
cmpsl
dec
pop
sbb
mov
cmp
notl
ss
mov
rclb
stc
sarb
rolb
pop
jge
or
xlat
dec
cmc
lods
inc
jb
leave
leave
or
stos
push
mov
add
test
and
push
clc
and
scas
fdiv
cltd
or
inc
icebp
sub
pop
and
rol
addr16
out
xchg
fistps
add
adc
adc
sbb
mov
ja
bound
mov
fcmovb
ljmp
mov
mov
jbe
sbb
push
daa
adc
xchg
mov
out
and
pop
cld
repnz
and
xor
mov
icebp
lret
pop
dec
stos
sti
rcrb
iret
push
rcrb
sbb
pop
inc
pop
push
adc
je
data16
sbb
push
frstor
xchg
nop
sbb
aam
push
push
out
or
and
xchg
in
xchg
push
ds
rcll
mov
test
sub
pop
inc
pop
cs
xchg
fildll
test
icebp
jno
xor
rcll
push
jl
add
xchg
dec
add
cli
jns
fnstsw
jns
push
mov
pop
xor
loope
cwtl
mul
cmp
sub
sub
lcall
xor
jp
aam
sbbl
das
ret
jp
pop
xchg
sub
sub
mov
adc
pop
inc
stos
enter
mov
pop
clc
pop
sahf
or
clc
xor
sub
jns
ds
call
fs
mov
cwtl
mov
xor
push
jge
in
pop
and
shll
sahf
nopl
inc
decl
and
bound
or
jbe
idiv
shlb
mov
cmpl
adc
pop
adc
fcmove
in
or
fsubr
cmpl
cmp
xlat
sarl
add
pop
sbb
jbe
sub
loope
dec
xor
stos
jae
lcall
push
jno
lret
pop
lods
inc
mov
ja
mov
cmpsl
popa
mov
cltd
jecxz
daa
nop
lret
xor
add
push
sarl
sbb
pop
mov
loop
push
outsb
mov
xchg
inc
cmp
lock
insb
mov
and
mov
pop
pop
xchg
bts
loop
sub
mov
int3
and
xchg
mov
les
mov
push
repz
dec
data16
int
aaa
and
mov
xor
adc
div
pop
mov
sub
scas
stos
sbb
dec
sbb
cmp
push
repnz
seta
mov
lret
jmp
dec
dec
inc
push
push
hlt
xor
sbb
sub
rcrl
fs
mov
sbb
pop
lret
lcall
lret
and
or
jg
cltd
xlat
and
push
insb
cmp
adc
repnz
ss
xor
cmpsl
fisttpl
push
push
push
mov
clc
dec
incb
push
pop
aas
dec
mov
sbb
mov
push
orb
sub
adc
cmc
aam
pop
add
dec
sar
ud2
pop
in
mov
xchg
inc
or
stc
fwait
mov
lea
nop
imul
outsb
flds
int3
mov
sub
xchg
xchg
imul
mov
lret
and
adc
iret
cmp
shrb
int
push
repnz
outsb
in
cmp
in
add
jb
xchg
sahf
xchg
out
ja
jecxz
in
int3
orb
sbb
leave
and
insb
bound
adc
icebp
cmp
push
test
add
test
xchg
mov
nop
jl
and
insl
fs
popa
push
bound
loop
sbb
or
daa
cmp
xor
lock
loop
push
shl
mov
sbb
sub
add
cli
add
sub
pop
adc
lcall
outsb
test
test
fcompl
push
in
lahf
aaa
mov
push
int
cli
push
les
push
dec
mov
aas
rep
lret
and
fsts
aam
xor
test
shll
xor
jae
aad
movsb
outsb
sahf
or
pusha
aas
pop
subb
cmp
mov
arpl
cmpsl
scas
gs
pop
adc
fdivp
sbb
sbb
stc
or
pop
call
stos
ss
push
pop
inc
and
test
cmp
das
loopne
popf
bound
fwait
pop
icebp
test
cmpsl
xchg
arpl
lock
adc
das
enter
ror
movsl
repnz
jne
or
xchg
cwtl
push
fsub
repnz
mov
xor
and
push
scas
scas
ret
test
pop
jl
pop
jge
add
xor
mov
mov
insb
push
sub
movsb
mov
add
clc
notb
push
out
mov
push
shr
js,pn
cmc
sbb
fadds
cs
jmp
push
test
push
push
push
mov
or
cli
dec
addr16
out
jns
shrb
lea
jl
aas
stos
dec
pop
xor
ds
dec
stos
xchg
sbb
jb
inc
into
icebp
mov
inc
mov
outsb
insb
in
divb
notl
dec
jae
orl
xor
rorl
sbb
insl
and
mov
int3
test
or
data16
bnd
and
sub
repnz
jl
fucom
out
stc
push
ds
inc
cmp
sbb
fwait
call
and
fidivrl
fisttpl
xor
arpl
daa
dec
and
enter
into
lds
ficomps
lahf
inc
pop
mov
sti
popf
bsf
sub
sub
mov
pop
sub
mov
mov
stc
pop
inc
jo
mov
das
testl
pop
ss
movsl
ds
push
popa
orl
jg
repnz
popa
push
out
fcmovu
push
jb
mov
mov
insl
iret
cs
mov
mov
xor
adc
mov
sub
cld
dec
mov
mov
mov
xor
das
call
and
test
scas
add
les
inc
adc
push
dec
push
sti
mov
mov
rcrb
loope
mov
mov
dec
aaa
or
sub
and
bound
xor
insl
lahf
pop
in
mov
outsl
ss
lret
and
outsb
adc
pop
add
xchg
xor
pop
rcrl
repnz
arpl
cmp
pushl
sbb
lret
adc
cmpsl
repz
or
xchg
je
adc
out
cmc
pop
mov
addb
ss
mov
dec
inc
out
leave
or
inc
or
push
dec
adc
dec
fldl
stos
pop
sbb
inc
xor
imulb
pop
dec
scas
push
out
inc
fisubs
xor
pushf
push
cmp
mov
mov
bound
jg
add
testb
pop
xor
mov
push
test
das
ret
into
push
cli
adc
jl
loop
movsb
fidivs
xchg
out
push
jbe
mov
imul
jmp
xchg
pop
aam
jp
dec
mov
jp
lods
std
popa
jge,pn
sbbb
int3
xchg
and
cmp
hlt
xchg
or
test
jg
aaa
bound
mov
and
iret
sbb
cmp
inc
roll
pop
push
mov
adc
mov
into
arpl
xchg
sbb
xchg
es
push
push
pop
mov
lea
inc
in
and
or
jmp
bound
jp
es
aas
add
test
dec
adc
sub
mov
and
fadds
mov
mov
inc
out
movsl
std
dec
ljmp
lock
loope
in
out
cmp
inc
bound
mov
cmpsl
mov
movsb
jmp
adc
mov
repnz
xor
shll
outsl
sahf
jo
int3
outsb
stos
add
cltd
sub
adc
repz
movsb
sub
push
pop
shlb
lods
jns
mov
bound
sbb
lods
xchg
in
jne
sub
xorl
mov
adc
sbb
pop
sbb
stc
inc
fcompl
jnp
and
mov
shr
cmp
xor
lret
cmpsb
stos
mov
shll
or
fsubs
loop
pop
mov
sub
push
loopne
adc
repnz
add
mov
mov
inc
ret
mov
loopne
dec
jo
cmp
es
and
lds
ficompl
jmp
ds
sbb
fimull
or
jns
rcr
mov
mov
jns
jno
or
push
aas
adc
fidivs
pop
and
iret
aad
cmp
push
xchg
testb
xor
jne
repnz
rcl
sub
cs
subb
test
aaa
cmp
aas
inc
das
pop
mov
insl
adc
xor
repz
jns
fmulp
sub
insl
mov
mov
pop
xchg
repz
pop
mov
inc
adc
mov
cmp
repz
jo
mov
sub
mov
jl
cli
or
or
jnp
movsl
shl
popa
ss
shlb
cmp
movsl
cmp
divb
adc
adc
push
sub
movsl
lock
orl
shll
loop
fwait
cs
shll
and
and
das
adc
es
out
jbe
in
js
inc
ljmp
gs
or
dec
or
daa
or
push
movsb
push
jae
pop
sbb
sub
fwait
inc
sub
inc
rcr
lds
aas
je
fs
mov
sub
xlat
cmp
and
pop
xchg
push
or
out
les
xchg
xorb
xor
sub
lret
leave
mov
xor
inc
fsubrp
rclb
sbb
ds
jmp
sti
and
push
push
maskmovq
notl
cmp
data16
xchg
dec
mov
jl
pusha
adc
call
sub
and
fbstp
stos
ror
cmp
icebp
lods
out
push
arpl
cmp
les
sbb
or
iret
das
aas
stos
push
mov
pop
mov
sub
ret
clc
mov
ss
mul
sub
sub
rcll
sahf
inc
fldt
movsb
push
dec
mov
dec
mov
mov
test
mov
loope
pushf
mov
add
adc
xchg
xor
stc
dec
ss
cs
sub
repz
fcmovb
and
adc
sbb
popa
mov
sbb
lcall
sti
iret
fcompl
gs
hlt
add
flds
iret
cltd
aaa
gs
neg
stos
imull
test
xchg
movsb
pop
mov
punpckhdq
dec
jmp
in
loope
popf
adc
and
push
pop
push
sbb
add
ja
jp
test
sahf
push
pop
pop
jg
inc
rolb
test
adc
cmpsb
sub
into
shl
pop
or
gs
fnstsw
cld
pop
sbb
xchg
and
cmpsl
jg
jg
inc
and
hlt
xor
shrl
jecxz
inc
push
leave
jmp
push
popf
fs
mov
out
xchg
sbbb
clc
cltd
mov
jo
pop
mov
lret
es
les
push
outsb
retw
js
mov
xor
ret
mov
jae
lea
das
xchg
inc
push
lods
ljmp
mov
adc
js
cltd
xchg
xchg
outsb
xor
sbb
pop
push
push
lret
and
in
cld
mov
inc
jns
adc
in
mov
leave
or
test
xor
cld
scas
lea
push
or
out
xor
jge
sti
xchg
pop
scas
pop
mov
xchg
ret
dec
sub
pop
xchg
jb
fadd
aaa
or
or
dec
xchg
test
inc
pusha
dec
ljmp
dec
push
clc
test
add
push
pop
popa
sbb
int3
mov
push
cmp
mov
pop
popa
cmpsl
mov
out
and
int
mov
pop
xchg
andb
jecxz
xor
add
inc
aam
and
cld
sbb
loope
out
jns
test
pop
or
mov
or
stos
and
inc
add
jo
out
inc
leave
mov
dec
xchg
int3
stc
pop
jmp
imul
pop
cs
sbb
cltd
dec
jmp
cmp
aam
dec
push
rolb
rcll
xchg
arpl
jno
sbb
cwtl
filds
mov
outsl
push
jmp
push
jl
mov
pushf
mov
pop
mov
or
outsl
sub
jge
sbb
xchg
jo
shrb
mov
bound
addl
xor
jmp
jp
lret
or
cs
hlt
adc
jnp
sub
cmpsl
push
in
mov
bound
mov
int
jl
out
incb
mov
insb
lret
add
sub
mov
stc
aas
imul
cmp
mov
jp
mov
mov
push
jp
repz
dec
ss
clc
clc
sub
dec
aad
mov
jle
pop
mov
pop
cld
adc
bnd
xlat
cmp
jns
or
sbb
test
push
cmc
xor
push
sub
fsts
idivb
insb
push
cmp
roll
add
jle
in
xor
imul
hlt
add
dec
inc
and
in
push
add
arpl
fnstsw
lods
je
jp
loopne
jecxz
aam
scas
pop
cs
rorb
xchg
or
pushf
leave
es
subb
jb
dec
std
add
cwtl
jl
lea
shlb
push
fstpl
cmp
mov
mov
scas
pop
and
pop
pop
xor
movsb
jne
fsubrs
ds
pop
mov
pusha
cmp
inc
mov
push
popf
and
add
repnz
testb
fsubs
dec
cli
mov
dec
xor
aad
or
cmpsb
add
jecxz
ljmp
xchg
pop
mov
cmp
daa
xchg
pop
fwait
rolb
enter
adc
xchg
das
aam
aad
daa
cmpsb
imul
push
cmp
mov
sbb
pop
in
sbb
pusha
imul
xchg
jne
mov
jle
xor
xor
inc
cwtl
pop
rolb
aas
inc
and
mov
mov
xchg
call
push
jecxz
lret
in
pop
jle,pt
lret
pusha
mov
sbb
cmp
notl
inc
and
in
scas
mov
mov
mov
fdivp
adc
and
insb
push
jne
std
out
mov
lods
mov
test
inc
jnp
cwtl
or
and
xor
jl
jnp
jp
aaa
push
aas
cs
jb
cli
inc
int
gs
cmpsl
mov
pop
dec
xchg
cs
dec
xchg
jno
pop
rcll
jbe
rorl
xchg
jnp
out
xlat
mov
add
mov
inc
push
shll
xchg
outsl
mov
push
mov
push
pop
int3
mov
cmp
leave
repz
sub
fisttpll
icebp
xchg
xor
mov
gs
imul
sub
fwait
cmp
hlt
mov
movsl
out
js
ds
xor
jmp
pop
mov
ss
push
mov
ret
push
pushf
xor
or
sub
lret
test
inc
arpl
int3
stos
mov
aam
mov
dec
jmp
cmp
fisubrs
mov
shl
jp
fwait
mov
inc
out
js
adc
push
loop
lcall
cmpb
mov
push
xchg
repnz
lea
inc
xchg
daa
mov
jmp
add
rcll
fisttps
fisubs
pop
loopne
ret
sahf
ret
fdivl
out
sbb
inc
cmp
or
iret
jns
add
mov
adc
mov
cltd
sar
cmp
and
sbb
shl
mov
cmp
ja
add
sbb
dec
mov
sub
in
add
mov
mov
xchg
mov
imulb
xor
jge
popf
jge
call
inc
push
add
cmp
pop
jae
xor
je
xchg
mov
push
xor
pshufw
sbb
push
jecxz
sub
sbb
movsb
pusha
movb
roll
scas
push
pop
test
or
mov
mov
or
test
inc
das
cmp
inc
mov
das
sbb
adc
ret
lods
test
sbb
ret
sub
int
cs
jmp
sahf
cmpsb
mul
jo
std
mov
xchg
push
int
in
ds
in
mov
int
les
out
aaa
add
sbb
mov
or
inc
sub
mov
xlat
fimull
data16
inc
cmp
sub
sbb
cs
enter
dec
mov
arpl
cmp
daa
push
push
adc
inc
push
mov
in
jmp
xchg
mov
aas
js
jle
pusha
xchg
mov
or
fistps
xor
testb
pop
loope
xor
inc
jmp
movsl
cltd
leave
gs
mov
out
cmp
cs
xchg
push
addr16
jbe
fildl
sub
xor
xchg
xor
jecxz
aaa
jle
pop
xchg
lds
sub
std
adc
push
sbb
add
lock
cmp
lods
dec
push
or
cltd
arpl
fwait
movsb
out
shrl
shr
dec
roll
pop
pop
xor
pusha
push
gs
or
fdivs
test
jbe
ret
cmc
notl
popa
mov
cld
jbe
cmpsb
pop
dec
jnp
cmp
addr16
push
jae
arpl
mov
es
imul
in
es
outsb
movsl
sub
insb
or
pop
ljmp
adc
or
pop
sub
pop
out
aaa
fcompl
inc
xor
adc
push
daa
comiss
or
dec
inc
dec
push
xor
jmp
js
fnstsw
mov
movl
add
sbb
pushf
push
test
aam
jp
in
mov
nop
lahf
outsb
cld
lret
imul
adc
jg
ret
xchg
out
dec
mov
cmp
ss
movsw
jecxz
jecxz
ja
sub
and
divl
xor
or
aad
mov
lock
adc
mov
or
cmp
aam
sub
xchg
cmp
or
push
jl
fs
pop
mov
mov
movl
pop
xor
mov
jp
or
arpl
daa
add
in
xor
push
inc
jne
or
dec
adc
sti
xor
std
adc
scas
int3
lods
testb
push
loope
in
and
lods
add
cmpsl
cmp
push
push
decb
movsl
cs
shlb
shufps
dec
popa
dec
bound
je
nop
xor
nop
cld
xor
imul
cld
cwtl
stc
rorb
dec
sub
daa
xor
xlat
push
dec
pop
pop
ds
cmp
pushf
push
mov
sbb
addr16
xor
cli
cltd
and
cmc
pop
pop
or
rorl
mov
jmp
inc
adcb
xchg
sbb
shl
inc
inc
sahf
daa
cmp
xorl
push
pop
cmc
ret
dec
les
gs
mov
mov
xchg
jp
lods
xchg
loope
push
adc
inc
repz
insb
xchg
push
add
mov
lock
loop
mov
add
mov
push
fbstp
jl
cmp
cmp
jle
cld
pop
push
repz
rcrl
popf
movsl
xchg
mov
test
and
orl
jg
and
movsb
jns
in
mov
pusha
add
outsl
jne
pop
pop
adc
daa
nop
pop
into
mov
dec
fwait
lahf
jp
shlb
jns
movsl
fmuls
jns
dec
mov
mov
push
sbb
sahf
lret
pop
push
or
xchg
and
jno
mov
push
push
std
ret
loopne
lret
nop
daa
or
in
repz
fisubrs
iret
int
fstps
mov
jnp
out
push
xchg
inc
cmpsb
enter
das
fdivl
lret
lahf
filds
test
mov
mov
frstor
pop
sub
icebp
filds
js
pop
xlat
mov
mov
adc
mov
gs
inc
lds
lock
cmpl
mov
mov
mov
push
cmp
push
lahf
mov
adc
xor
cli
pop
repz
lock
out
and
mov
ret
push
shlb
aas
cmc
jbe
fimull
pop
int
inc
cli
mov
sub
mov
jo
shr
adc
lods
mov
mov
test
xchg
push
xor
and
sub
inc
xchg
sbb
enter
pop
xchg
pushf
add
cmp
out
xchg
and
jne
fwait
fwait
aam
popf
inc
mov
jo
sbb
jecxz
jl
es
js
add
js
in
mov
stos
aam
popf
jnp
adc
push
xchg
xchg
add
and
out
pop
jmp
dec
js
jmp
lcall
out
divb
mov
test
mov
push
clc
shrl
call
out
xor
loopne
mov
iret
sbb
hlt
flds
punpcklbw
adc
mov
dec
mov
pop
stos
push
xchg
jp
and
jecxz
mov
mov
addl
sbb
fidivrl
shll
in
push
cmpsl
push
cli
cmp
or
mulb
push
sub
lret
ret
adc
mov
lcall
xchg
push
test
aas
fsubrs
aas
mov
mul
add
int3
fistpl
shrb
out
lcall
jg
int
in
cmp
addl
or
dec
mov
inc
and
xor
pop
push
outsl
xlat
int
inc
cmp
sub
ror
add
jo
push
aam
aad
in
push
sarb
stos
das
daa
movsb
aam
int3
xchg
movsl
pusha
mov
test
sahf
pop
cmp
dec
jl
js
fcompl
or
add
xchg
ret
pop
and
fcompl
and
xor
aaa
loopne
dec
xchg
rcl
cli
nop
mov
ja
cli
icebp
addr16
popa
push
outsb
loop
mov
movsb
inc
mov
das
ror
loope
sub
lock
fs
notb
imul
in
aas
pop
out
jbe
dec
sbb
mov
xor
iret
jl
in
lock
pop
imull
push
adc
adc
mov
fcomp
cmp
and
rcll
mov
sub
cmpsl
push
std
xchg
es
cs
jge
mov
mov
pop
xchg
movsb
jmp
mov
xchg
or
jb
jg
push
sub
pop
push
dec
xchg
mov
sub
arpl
decb
inc
ud2
pop
repz
ror
aas
mov
std
or
cmc
ja
jae
and
aaa
xor
or
js
outsb
fwait
gs
adc
data16
mov
push
xchg
jbe
mov
sub
bnd
test
jb
sub
stos
jp
jns
jne
repnz
std
cld
cmpsl
mov
mov
mov
xor
jno
js
jbe
sti
mov
dec
add
jl
push
aad
dec
xchg
rcrb
mov
inc
push
repz
movl
mov
lahf
fcmovu
sub
cli
pop
mov
push
jae
mov
lea
int3
lret
shll
repnz
dec
mov
mov
ja
mov
inc
daa
mov
and
andb
aam
mov
add
push
mov
insl
and
jmp
ss
sti
imul
enter
inc
jg
pop
sti
jo
jge
and
inc
popa
outsl
dec
mov
add
push
les
inc
push
int3
pop
sub
test
adc
sahf
imul
ret
dec
jg
mov
cwtl
mov
aam
push
mov
loopne
jb
jno
mov
cmpsl
mov
cld
pop
fadds
fsubrp
shl
dec
inc
or
in
sub
cmpsl
sahf
lret
sbb
dec
xchg
push
or
nop
dec
ret
pop
mov
cmpsl
rorb
ds
push
ss
inc
mov
arpl
mov
nop
cwtl
mov
dec
push
jo
xor
loopne
test
xor
inc
fistpl
nop
inc
repnz
test
movsl
mov
pop
xlat
test
mov
add
repz
idiv
std
pop
int3
std
add
daa
js
add
fnstcw
xchg
stos
leave
jae
add
lds
mov
into
add
or
xchg
ja
imul
dec
and
lds
push
mov
stos
jne
lds
mov
lds
sti
jbe
mov
and
and
sbb
int3
mov
stc
push
pop
sbb
add
pop
and
sub
mov
pop
sub
sub
std
xorl
out
cmp
sahf
xor
lret
test
fistps
push
aaa
cmp
pop
jo
lds
imul
bound
jns
in
sbb
xchg
sub
fcomip
sub
in
mov
mov
sub
lea
pusha
dec
jns
push
test
adc
mov
daa
add
and
xchg
mov
pop
mov
nop
lock
cmp
jle
rorb
notb
sti
mov
push
dec
sti
int3
test
lods
cmpsl
icebp
add
inc
push
inc
leave
outsb
xchg
in
inc
aam
xchg
mov
cmp
rcrb
flds
mov
push
pop
jne
rcrb
jnp
sbb
incb
test
adc
fidivrs
mov
xchg
sbbl
xchg
test
cmp
xchg
sub
test
sahf
ds
idivl
sti
or
jno
sbb
lods
faddl
xchg
int3
sbb
push
outsb
inc
dec
adc
outsb
cs
cld
jo
in
test
into
into
je
sbb
jno
stos
xor
gs
cmc
leave
addr16
xor
mov
icebp
cmp
inc
test
push
dec
je
mov
lods
mov
pop
and
jmp
pop
jbe
les
icebp
int3
cmp
xchg
dec
std
jp
fmulp
stos
cmp
insl
in
pop
fsubrs
push
pop
aam
cmp
in
or
cs
in
stc
inc
gs
nop
cmpl
mov
call
ja
or
push
push
daa
clc
icebp
icebp
sarl
jl
lock
push
xchg
jmp
mov
dec
mov
jno
sub
inc
out
adc
inc
dec
cmp
test
mov
fsubl
cmpb
add
xor
enter
es
cmpsb
out
in
push
lods
pop
push
or
popa
sub
add
inc
enter
sub
pop
ds
ja,pt
cmp
shr
aaa
lcall
shl
cmp
and
cltd
mov
inc
aam
cmp
sub
sahf
into
std
dec
faddl
clc
adc
mov
aam
or
repnz
and
cli
xchg
jg
xor
pop
cmp
push
mov
cmpsb
call
dec
lods
fstpl
imul
mov
call
sti
sbb
mov
add
cmpsb
rorb
sbbl
rcll
mov
inc
mov
out
lcall
cwtl
imul
push
pop
push
clc
roll
pop
fistps
dec
stos
pop
pop
cltd
xchg
adc
or
call
push
loopne
jnp
dec
push
push
xlat
push
rclb
cmp
pusha
add
repz
rcrl
clc
nop
xlat
and
cmp
jl
jl
int
mov
and
mov
push
dec
lods
frstor
popa
push
mov
lret
lret
arpl
les
push
cli
pop
mov
jmp
loope
or
fstps
xor
cmp
popa
xchg
in
mov
mov
addr16
insl
rclb
leave
xor
xchg
xchg
pop
cli
sets
xor
or
fnstenv
and
xlat
loope
test
addr16
and
mov
fwait
lods
xor
inc
testb
inc
cld
mov
mov
lret
adc
adc
add
xchg
ljmp
data16
sbb
aad
xor
stos
aad
jl
jp
cmp
arpl
add
mov
push
ficoml
fwait
loop
adcl
inc
add
sbb
xchg
add
mov
movsl
cli
shlb
inc
lods
add
xor
in
push
cmp
mov
fdivrs
xchg
push
shr
filds
repz
mov
push
or
fwait
andb
rcrb
or
int
arpl
mov
insl
xchg
dec
cmpsb
sbb
cs
mov
movsb
cli
push
nop
mov
push
call
mov
sub
sar
cmp
aas
lahf
mov
bound
subl
adc
rorb
cmpsl
inc
xchg
jo
addr16
push
test
cmpsb
lcall
fldl
fildll
cmp
jo
adc
popf
xchg
mov
jmp
xor
jl
and
push
out
adc
pusha
dec
xchg
mov
scas
push
loope
push
pop
icebp
andl
sub
aas
add
adc
jo
lods
movsb
mov
inc
lods
push
fstl
popa
aas
push
pop
aas
cmp
sub
xor
cmp
jb
sti
stos
stc
pop
andb
call
test
push
imul
pusha
aad
imul
xor
sti
push
or
jne
cmp
xor
cmp
pop
dec
mov
and
or
pop
jmp
aas
xor
icebp
jnp
outsl
and
jae
in
inc
out
mov
leave
cwtl
add
mov
je
add
aaa
push
or
add
adc
scas
je
mov
cli
fsts
push
lock
mov
add
push
outsb
inc
ret
aam
repnz
dec
lock
add
jnp
loope
xor
and
enter
push
push
inc
nop
push
xchg
aam
stc
and
mov
shll
or
out
fsubrs
les
push
hlt
aad
fs
sub
xchg
xchg
leave
sub
stc
shlb
cmp
sbb
test
mov
xor
adc
sub
loope
sbb
ror
shl
fisubrs
fists
xchg
fwait
xlat
idivl
sahf
fildll
push
fsubs
inc
sbb
lea
cmpsl
int3
mov
dec
inc
fidivs
push
ljmp
xor
lahf
sti
int3
xor
mov
popa
mov
push
mov
push
mov
xchg
pop
call
aam
mov
cmp
sub
ds
jge
lahf
xchg
sbb
mov
cltd
jno
push
je
iret
aas
sbb
bound
cltd
into
mov
pop
push
scas
fs
xor
inc
push
xchg
movsb
add
pushf
adc
ret
daa
mov
adc
jg
ficomps
testl
or
push
cmp
shll
imulb
cmp
mov
shlb
jp
fisubrl
push
xchg
cmpl
push
pop
mov
add
sub
lds
flds
dec
cltd
pop
insb
jno
mov
pusha
repz
daa
in
ss
out
jmp
das
mov
loopw
out
loopne
je
movb
cmp
outsb
add
out
pusha
add
mov
adc
in
out
fwait
sub
insb
or
nop
cwtl
fimull
sar
pop
ret
mov
cli
mov
xchg
pusha
call
les
int
aas
ss
fisttpll
adc
leave
cltd
and
jno
inc
mov
add
mov
or
and
push
iret
lds
mov
jb
ljmp
cmpsb
pop
popf
xchg
and
adcl
lods
mov
cs
dec
lods
shlb
or
mov
xchg
lock
aas
jne
cmpb
jae
lods
sar
fxch
dec
ljmp
mov
fistps
addr16
frstor
stc
out
int
cli
or
and
or
add
movsb
dec
cmc
jge
cmp
outsl
sub
mov
xor
xor
aad
scas
adc
arpl
testb
dec
stos
lods
arpl
aam
out
imul
adc
rolb
jmp
dec
rorl
adc
pop
inc
and
mov
adc
jge
push
jle
mov
sbb
add
aas
and
mov
push
mov
push
and
push
mov
pop
inc
mov
ret
mov
jle
test
push
inc
imul
test
pop
inc
and
ljmp
mul
pop
and
aam
data16
jbe
adc
sbb
pop
cwtl
mov
fdivp
sahf
sbb
shlb
js
mov
out
bound
mov
rorb
cwtl
mov
xchg
jae
outsb
mov
add
cs
and
mov
std
fsubl
mov
pause
daa
stos
ss
xorl
aaa
cs
xor
mov
movsb
dec
dec
bnd
jmp
sub
out
jns
and
rclb
cmpl
les
lcall
push
jmp
cltd
inc
in
loop
fnstcw
cs
int3
rcrb
mov
cwtl
and
mov
add
jge
int
cmpl
sub
test
out
inc
cmp
icebp
nop
lods
ret
jmp
pop
jge
mov
cmp
jle
js
sub
jl
inc
in
push
aas
in
sub
in
test
sub
shr
jb
loopne
leave
lods
sub
jg
cmp
xchg
ss
cld
xchg
dec
xchg
push
pop
xchg
stc
clc
jns
lock
mov
push
scas
fucomi
scas
mov
subb
pop
cmpsb
sti
rorl
sahf
stc
xchg
push
fldl
mov
lret
cmp
outsl
cmp
rclb
repz
adc
push
cld
shll
xchg
shlb
push
aam
mov
mov
pusha
inc
aaa
ret
pop
pop
ret
test
lcall
add
and
inc
cmp
xchg
bound
cmpsl
arpl
test
sub
sub
fimull
pop
mov
outsl
lock
rcrl
dec
sub
and
fyl2xp1
fdivs
insl
les
es
sbb
xor
subb
xchg
dec
add
mov
mov
sub
ss
rorb
je
sbb
mov
stc
imul
ret
nop
inc
adcb
bound
popf
pop
xor
mov
xor
push
cmp
jae
or
cmp
inc
lods
outsl
lods
lcall
into
dec
addb
enter
dec
cli
add
or
mov
leave
rcrl
faddl
cld
inc
fnstenv
sub
mov
stc
shll
push
and
xchg
mov
xor
aam
inc
inc
scas
data16
and
outsb
fwait
inc
loop
cli
sbb
mov
adc
mov
and
fxtract
lcall
or
mul
aam
add
mov
mov
addr16
add
out
pop
in
inc
jecxz
inc
inc
sbb
incl
ficomps
jo
sub
mov
andb
test
leave
adc
mov
into
cmpl
adcb
and
pop
mov
push
shl
pushf
inc
and
arpl
mov
cmp
sub
call
xor
out
lcall
movsl
les
std
cmp
lea
push
mov
xchg
loope
stos
and
mov
or
stos
clc
push
or
sub
cmpsl
les
cmpsb
mov
iret
or
dec
xchg
divb
sub
adc
jmp
pop
mov
stos
bound
int3
mov
inc
and
adc
xor
and
rclb
push
testl
pop
rcll
in
push
cli
push
fiaddl
ja
dec
bound
mov
add
mov
and
scas
and
out
push
dec
jl
push
neg
xor
inc
mov
and
push
dec
add
decb
cld
daa
call
jecxz
push
sbb
dec
pop
cmp
pop
mov
push
add
sar
test
icebp
push
popa
sub
gs
xchg
dec
aad
dec
dec
out
clc
stc
and
sar
daa
sbb
sti
pop
pop
dec
scas
std
lea
cld
or
xchg
shl
inc
push
dec
inc
jp
mov
addr16
sbb
jbe
fcoml
jo
mov
or
pop
sub
ja
outsl
shlb
xchg
int3
test
les
icebp
mov
dec
xchg
out
xorl
out
pop
dec
lahf
int
dec
hlt
inc
stc
cmpsb
fwait
imul
cmp
jb
hlt
dec
movsl
dec
dec
jmp
int
jge
js
std
ljmp
popf
sub
mov
pop
or
aam
add
cmp
xchg
pop
mov
mov
mov
cld
jmp
int3
cli
pop
xlat
add
and
aas
shll
inc
fmull
cmpsb
aas
outsb
nop
cmpsl
jecxz
inc
loop
adc
sbb
dec
mov
xchg
add
fstpt
hlt
or
fs
lock
xchg
dec
xchg
mov
adc
lods
inc
or
xchg
loope
inc
pop
xchg
cmp
adc
adc
jbe
stc
movsl
movsl
fs
inc
imul
aas
add
cmp
repz
mov
leave
inc
mov
cmpsl
dec
int3
mov
push
xchg
lret
inc
inc
es
mov
dec
ficoml
add
aad
ljmp
dec
inc
outsb
outsl
mov
sbb
scas
sbb
pop
pop
mov
mov
iret
mov
jb
iret
push
in
lcall
pop
adc
jmp
int
loop
fs
daa
pushw
js
es
lods
fidivs
data16
push
mov
sbb
rclb
sbbl
add
push
jl
insb
sub
jno
xchg
cmp
mov
xchg
and
mov
and
shll
sub
push
out
push
cmp
nop
and
aas
mov
and
int
cmp
xchg
pop
shll
faddl
aaa
rcl
repnz
mov
bound
bound
hlt
inc
test
mov
adcb
cmp
cli
jl
lret
sbb
ret
pop
mov
sbb
shl
cmp
popa
jns
or
xlat
mov
and
pop
aas
jo
rclb
push
mov
sub
mov
mov
repz
es
lock
or
jae
pop
test
out
popa
cwtl
loop
shll
or
fisttpll
cmp
jns
ret
cli
xchg
mov
test
ror
push
fistl
cmc
stos
mov
mov
xlat
rol
rclb
jo
adc
xchg
mov
adcb
gs
push
into
mov
xor
dec
jmp
leave
stos
repnz
and
fcomps
das
sbb
jle
int
xor
jg
cmp
pop
inc
dec
test
loop
punpcklwd
or
xchg
cmp
inc
mov
movsl
jne
xchg
cmpsl
sub
inc
pushf
jmp
sti
pusha
adc
out
add
lods
clc
jl
rcrl
in
jp
lock
repz
arpl
sbb
scas
xor
sbb
dec
out
ljmp
out
je
cltd
cmpsb
mov
mov
out
pusha
scas
pop
push
pop
popa
adc
or
jno
xchg
inc
pop
add
out
scas
clc
and
adc
popa
jmp
mov
sbb
mov
push
add
shll
pop
dec
mov
cltd
fistps
xor
and
xchg
mov
int
out
adc
xchg
stos
or
push
cmp
sbb
or
rcl
sbb
jl
shll
fwait
or
push
int3
add
mov
je
or
cmp
dec
stos
std
sub
gs
es
xchg
inc
andl
jmp
outsl
sub
pop
jmp
aam
ror
fwait
cs
inc
push
testl
sbb
xchg
arpl
repz
pop
inc
lds
or
cmpsl
je
sub
cmp
or
mov
inc
push
inc
sti
sub
aas
pop
dec
pop
outsb
aaa
inc
push
scas
cmp
aas
mov
fstpl
sbbl
sarl
pop
add
icebp
les
xchg
loopne
lods
sub
push
shlb
push
lcall
or
or
and
mov
outsl
push
nop
loop
xor
sub
or
arpl
pop
cmp
sub
mov
mov
mov
lret
add
pusha
mov
aaa
and
gs
jmp
iret
mov
js
das
lock
or
dec
iret
mov
xor
jmp
sti
aas
dec
jp
jnp
inc
pop
cmc
int
negb
fwait
sbb
pushf
push
lods
add
mov
out
mov
les
mov
daa
sti
add
inc
xor
push
xchg
cmp
fistpl
dec
iret
inc
ja
mov
jp
bound
fwait
xchg
mov
jl
jmp
push
jmp
pop
mov
pop
jo
roll
arpl
pop
pop
outsl
jbe
mov
pop
add
add
push
xchg
xor
test
test
push
movsl
out
lock
fists
or
loop
cmp
inc
sbb
pop
shrb
into
inc
jae
mov
pusha
stos
fwait
jg
mov
push
pop
fs
and
dec
fnsave
xchg
rol
adc
dec
lods
mov
lret
pop
movsl
outsb
icebp
sub
and
add
dec
xorl
add
hlt
arpl
or
call
pushf
add
jae
adc
out
mov
xchg
sub
loop
cmp
push
gs
mov
notb
jb
jecxz
sub
repz
lret
pushl
sti
mov
inc
inc
push
adc
jmp
xor
pop
jns
cwtl
dec
pop
or
mov
aaa
scas
icebp
push
inc
fs
and
andb
insl
insb
cs
inc
jge
mov
push
dec
jo
cs
jbe
add
sahf
add
cwtl
in
mov
rcrl
int3
sub
xchg
shll
fcompl
das
in
push
sbb
shrb
loope
ljmp
inc
test
mov
sub
stc
mov
out
push
mov
push
daa
mov
cmp
pop
xor
and
fistpll
xchg
cmp
loop
push
sub
outsb
sarb
iret
movsb
xchg
adc
loopne
inc
adcl
int
movsl
daa
aas
inc
xchg
cmpsb
imul
sub
out
scas
into
ja
cld
pop
xchg
sub
push
lcall
sub
mov
sahf
inc
pop
roll
pop
shl
sbb
popa
add
fisubrs
or
and
imul
cmpsl
inc
insb
adc
loope
adc
mov
fwait
mov
pop
adc
mov
out
dec
fidivs
or
adc
inc
inc
mov
xchg
lret
cmp
mov
pop
andb
inc
cmp
test
mov
mov
push
out
jnp
dec
sub
aaa
cmpsl
cmpsl
xchg
shl
adc
ror
js
mov
cmp
lds
sbb
mov
imull
les
cmpsl
pop
xchg
cs
mov
jge
xor
push
gs
xchg
inc
test
cmp
sbb
adc
jle
ss
fcmovnu
or
inc
fcmovbe
out
or
jl
je
xorl
push
fnsave
adc
jg
hlt
dec
adc
mov
inc
pusha
lea
inc
stc
gs
scas
ja
jecxz
cmc
icebp
inc
es
fcoms
xchg
insb
mov
subl
jnp
jmp
sub
aam
lock
or
outsl
push
ss
aam
and
sub
lret
cmp
sub
dec
out
adc
inc
xor
push
decb
mov
cmpsb
push
sub
fcoms
into
aas
push
xor
iret
lods
jbe
pop
shl
out
bound
daa
jmp
pop
movsb
dec
xor
sbb
inc
jbe
rolb
aad
mov
mov
out
iret
jge
out
mov
mov
and
out
leave
sub
xchg
xchg
test
les
jno
fldl
in
fst
movsb
daa
scas
jmp
movsl
loopne
lahf
mov
sbbb
xor
xlat
xchg
mov
or
popa
imul
rcrl
data16
lods
jp,pn
push
or
mov
xchg
scas
ficoms
sbb
ja
or
adc
mov
sub
and
cs
push
jle
sub
dec
add
xchg
pop
cld
movb
jns
mov
cmp
in
imul
mov
jmp
std
addr16
mov
rclb
iret
push
adc
cld
test
ljmp
xor
dec
sub
mov
cmpsl
jns
pop
roll
inc
outsl
mov
icebp
pop
js
xchg
jae
adc
xchg
mov
or
push
xor
cmp
movsl
mov
inc
pop
mov
cmp
pop
mov
cmpsl
int3
cmp
mov
jno
pop
xchg
pusha
cmpsl
sub
mov
jge
arpl
sbb
rol
adc
mov
adc
sbb
fmuls
dec
jge
jo
mov
sbb
jae
mov
sbb
out
mov
shll
jl
jns
clc
xor
pop
adc
lret
dec
fisubl
and
daa
hlt
sub
dec
mov
mov
add
rcr
popf
iret
xchg
sbb
rcrb
xchg
xchg
cmp
mov
sub
xor
outsb
repz
ja
jge
ds
push
cltd
pop
mov
icebp
or
xchg
std
bound
xor
mov
pop
add
ret
xor
or
sbb
push
pushf
mov
imul
sbbl
imul
fists
nop
cwtl
andnps
jmp
pushf
stos
inc
pop
stos
outsb
jl
jle
jns
lret
push
lret
jo
sbb
sti
cmp
pop
jp
mov
mov
inc
es
inc
push
incl
xchg
out
divl
adc
sbb
adc
add
xor
jecxz
int
shr
mov
ret
mov
push
or
cmpl
fidivrl
fdivrl
adc
call
inc
adc
sbb
outsb
popa
add
dec
adc
mov
test
push
push
scas
jbe
jns
ss
sub
fwait
jecxz
dec
mov
das
cs
pop
outsb
jg
outsb
std
addr16
cmp
ret
mov
pushf
xor
mov
cmpsb
adcb
es
mov
pop
pop
fidivl
popf
mov
mov
mov
pop
fists
mov
mov
push
pop
lock
dec
mov
cmp
xor
push
or
mov
and
jecxz
adc
jmp
scas
xchg
jb
stc
lret
mov
add
mov
dec
pusha
pop
jbe
fnstenv
cmpsl
sbb
mov
iret
fcmovnu
mov
lahf
outsl
mov
rorb
xor
add
inc
xchg
call
mov
repnz
out
inc
or
es
fcmovnbe
jb
mov
lea
xchg
add
xchg
pop
mov
je
lahf
and
and
mov
push
add
xor
sub
dec
mov
pop
sahf
xor
das
mov
mov
into
push
stos
jg
divb
dec
push
sbb
mov
adc
es
or
mov
movsb
int
lods
and
leave
xchg
push
je
push
jne
shll
push
xor
imul
outsl
aam
inc
mov
insl
sbb
xchg
and
xor
cmpl
xor
jnp
cli
lods
or
mov
add
ret
push
push
mov
fnstcw
mov
sub
dec
dec
movsl
pop
gs
das
dec
movsl
adc
into
scas
mov
sub
or
mov
test
push
loopne
or
mov
inc
out
clc
xor
jne
sbb
push
mov
mov
lds
arpl
shlb
pop
inc
xlat
jle
cmp
fnstcw
pop
push
mov
popa
lock
jmp
ror
repz
scas
sbb
iret
call
fisttps
jno
ret
pop
sub
adc
stos
into
sarl
xchg
test
adc
les
shlb
jg
nop
clc
insl
ljmp
test
push
movsb
insb
ret
mov
jge
pop
fldt
movsb
or
sub
jo
jl
loopne
add
stos
or
cmc
cmc
cld
jecxz
jmp
mov
aad
push
js
scas
jae
cmc
outsl
sbb
mov
roll
push
inc
cmp
dec
aas
outsl
inc
lds
and
jle
jno
mov
imul
fdivrl
xchg
jno
pop
jge
cmp
dec
fiaddl
mov
imul
jle
stc
push
jo
and
sbb
sub
inc
or
leave
cmp
lret
push
fcoms
pop
push
mov
aad
jae
cltd
enter
sbb
repz
or
leave
call
xor
hlt
loope
popa
dec
jo
lcall
xor
push
or
adc
inc
pop
clc
xchg
push
stos
inc
adc
and
jnp
cmpsb
mov
xchg
or
test
shrb
stos
std
add
sar
and
add
pop
xchg
mov
push
lret
mov
adc
dec
popa
push
aam
ret
test
lcall
add
jg
pop
ror
jge
xchg
cli
adc
test
push
adc
add
xor
pop
inc
or
mov
jmp
sub
bound
cwtl
cmp
cmc
xor
cli
lock
mov
pop
dec
mov
mov
xor
xor
mov
xor
sbb
iret
mov
js
cmpsb
sub
ljmp
mov
mov
and
pop
xchg
dec
scas
call
xchg
rcll
sahf
jge
mov
and
scas
cmp
adc
es
roll
add
cmp
stc
sbbl
push
mov
mov
stos
cli
ljmp
add
nop
adc
xchg
dec
inc
stos
mov
test
in
cmp
or
push
cmp
aaa
out
push
es
and
sbb
imul
in
dec
dec
inc
push
add
in
leave
test
add
ficoms
ds
mov
xorl
jbe
lcall
aaa
ss
mov
lock
dec
cmpsb
xchg
test
xchg
push
cld
adc
push
fldl
sub
mov
inc
rcr
mov
xor
xlat
push
movsb
cli
fldl
imul
pop
clc
out
push
into
or
mov
xor
cmp
aam
mov
fcomip
sbbb
mov
shr
test
das
inc
jne
fsubrl
push
jnp
push
out
shlb
pop
sub
xchg
aam
int3
icebp
push
shl
mov
je
pop
pop
fidivs
in
add
pop
dec
xchg
mov
xchg
stos
in
cmp
lock
lds
shlb
mov
or
cmpsl
rclb
cmc
adc
insw
loop
inc
in
mov
sub
fmull
xor
jmp
std
add
ja
lds
lret
xchg
imul
pop
xchg
xchg
mov
out
scas
push
adc
xchg
jb
mov
shlb
xchg
pop
cmc
push
cmp
cmp
push
jp
inc
arpl
mov
push
scas
pop
shll
inc
pop
xchg
lret
lock
and
mov
mov
bound
lret
test
add
add
movsl
pop
xchg
and
jo
sub
adc
dec
xor
ds
sbb
xchg
movsl
sub
inc
jge
push
adc
fwait
loope
or
scas
pop
je
das
dec
imul
loopne
sbb
jg
lock
xchg
add
cmpb
xor
hlt
fildll
or
sahf
popa
mov
mov
in
fisubrs
mov
out
dec
imulb
adc
and
sbb
ja
mov
scas
fwait
ss
hlt
mov
repz
sub
jl
adc
lock
in
mov
and
testb
xchg
das
mov
lock
cmpl
insl
pushf
je
jbe
ljmp
mov
out
cmc
sahf
lds
mov
lock
xor
popa
std
and
xlat
pushf
push
clc
fisttps
sbb
xchg
das
sub
aad
or
outsl
shlb
add
dec
leave
mov
xlat
mov
sub
cmp
pop
xchg
xlat
sub
mov
mov
cmp
pop
mov
stc
mov
xchg
pusha
imul
inc
dec
frstor
or
mov
scas
cltd
les
or
xchg
aaa
andb
and
mov
mov
mov
or
dec
ret
ja
outsl
out
sbb
jmp
int
or
int3
xlat
les
mov
mov
push
mov
scas
lock
ja
sub
outsl
pop
cmp
sbb
shlb
push
mov
mov
pop
xchg
and
or
pmulhw
dec
or
push
cmp
add
cmp
in
adc
adcb
mov
jo
or
jle
dec
pop
push
and
push
insb
into
and
int
outsl
sbb
or
test
add
pop
sub
aas
outsb
xchg
mov
rcl
dec
sti
inc
cmp
es
dec
jmp
jge
inc
incb
hlt
fs
push
je
stos
lods
and
in
popf
popa
pop
mov
mov
sbb
out
dec
xor
outsb
cwtl
xchg
jno
xchg
adc
ljmp
push
setl
adc
sub
adcb
mov
scas
xor
inc
xor
inc
cmpsl
adc
sti
faddl
dec
xor
adc
shll
dec
or
sub
mov
xchg
or
mov
inc
repnz
fists
addl
gs
push
mov
mov
bound
movsl
mov
add
jns
insb
mov
xchg
lret
fbld
mov
in
aad
xchg
daa
pop
scas
stos
mov
and
test
mov
nop
flds
mov
fiadds
inc
aam
push
cmpsl
jo
sbb
fstl
jl
fldcw
out
sbb
add
pop
push
gs
and
aam
cmpb
std
stos
jge
in
daa
adc
mov
sti
outsl
out
jmp
loopne
cltd
push
ja
test
adcl
sbb
lods
incb
iret
push
mov
xchg
out
data16
sbb
mov
xchg
and
adc
loopne
aam
xchg
std
dec
int
out
jbe
mov
lea
push
mov
or
ficompl
push
js
inc
cmp
dec
mov
mov
cltd
fcmove
or
pop
jmp
sbb
mov
test
inc
ds
pop
in
add
shlb
mov
daa
push
dec
in
mov
mov
add
insl
push
sub
sub
out
daa
repz
adc
push
fs
pop
and
loope
add
cmp
add
adc
or
popa
sbb
push
jg
jbe
repz
das
movsb
push
pop
mov
pop
jmp
int3
cmp
int3
dec
cltd
lods
int3
jne
xchg
push
inc
add
xchg
adc
das
cmp
jne
cmpl
dec
arpl
pop
fwait
mov
mov
pusha
mov
mov
int3
jno
xchg
adc
lods
scas
enter
into
cli
scas
add
aad
stos
add
movsb
clc
mov
or
lods
push
call
and
int3
push
call
jb
jp
xor
pop
inc
and
mov
or
mov
hlt
xchg
scas
mov
xchg
cmp
sbb
mov
inc
inc
lcall
cld
out
xor
hlt
mov
sbbb
pop
or
cmpsl
xor
icebp
nop
push
xchg
xlat
cmpsb
dec
xor
rcr
adc
daa
dec
insl
stc
fidivrs
and
mov
insl
pop
and
mov
xchg
push
std
jno
dec
sti
inc
in
jle
mov
and
out
clc
pop
rcr
mov
test
fidivl
dec
cmp
pop
popf
adc
and
aam
lds
xchg
xchg
dec
push
xchg
in
push
lds
mov
movsb
int
pop
outsl
dec
add
add
movsl
hlt
push
lret
subb
dec
xchg
xchg
lahf
add
push
dec
test
call
xlat
lret
inc
dec
ljmp
xchg
mov
imul
sub
inc
mov
jae
mov
sbb
mov
aas
in
cmp
bound
xchg
sub
push
clc
aaa
repz
push
mov
lcall
fidivl
adc
pop
push
movsb
lods
add
dec
shlb
xor
fisttpl
mov
pop
xchg
pop
insl
outsb
adc
scas
pop
test
and
add
ja
pop
nop
in
xchg
and
movsb
fs
jnp
nop
in
inc
xchg
out
ret
jno
ss
push
xor
inc
mulb
subl
jecxz
sbb
mov
xor
ficoml
add
stc
fs
or
mov
mov
daa
mov
out
and
push
jne
push
adc
fldcw
add
xor
jmp
dec
xchg
sti
fldt
cmpsb
inc
icebp
je
mov
incb
sub
in
je
sahf
mov
push
inc
push
inc
push
jle
lret
xor
or
cs
lock
mov
in
lods
js
or
fwait
dec
xchg
cmpsl
xor
add
imul
sub
imul
popa
cltd
push
subl
movsb
mov
push
rclb
mov
sub
mov
jmp
jbe
popa
and
sti
rclb
aas
and
bound
stos
movsl
shll
sub
xlat
scas
sub
jno
adc
test
cli
lret
mov
adc
mov
sahf
ror
fdivrl
adc
and
sub
neg
cmp
mov
pop
enter
enter
jmp
sbb
push
shll
mov
xor
sub
pop
push
int
lret
aas
jecxz
iret
cli
out
sbb
lods
sub
das
repnz
cmp
aad
hlt
xchg
cmp
frstor
jbe
js
lock
inc
fildl
rcll
dec
sbb
adc
repnz
adc
test
jle
test
mov
mov
stc
aaa
xchg
cmpsb
neg
dec
lods
es
ja
xor
xchg
repz
jb
addl
sarl
add
test
mov
sub
imul
sub
adc
lds
or
push
je
outsl
xchg
and
fadds
imul
movsl
push
pop
or
sbb
lahf
test
lahf
mov
fistl
out
rclb
jmp
push
xor
inc
pop
cmp
shlb
xorb
and
roll
jmp
jbe
and
xchg
inc
shrl
stos
xor
ja
ret
lcall
and
cmp
inc
mov
pop
xchg
addr16
pushf
imul
jp
jns
rorb
dec
movsl
xchg
mov
int
into
orl
dec
aas
cmpsb
adc
and
dec
dec
pop
jp
fiaddl
cmc
sub
jle
aaa
sbb
pop
cld
rcll
jb
push
mov
js
scas
and
push
mov
add
icebp
pop
mov
jo
or
ja
and
mov
scas
push
push
fs
push
fsts
sbb
mov
sbb
stc
insl
mov
stos
sub
cld
es
int3
sub
orl
in
repz
and
or
or
int3
sbb
mov
push
fs
ret
mov
inc
jle
rcrb
push
in
adc
inc
push
inc
sbb
rcr
jnp
dec
mov
xor
cli
int
inc
xchg
pop
jo
push
loop
pop
adc
sti
add
inc
popa
int3
cmp
jns
cmp
sub
cmp
push
loopne
sarb
push
sub
imul
adc
lahf
cmc
cwtl
pop
fidivrs
lock
ds
out
mov
in
xchg
test
int3
int3
call
xchg
pushf
mov
push
or
lods
cmp
arpl
dec
pop
pusha
fidivrl
movsl
sub
aaa
punpcklbw
jo
out
imul
push
into
jg
cli
scas
add
inc
add
les
rcrl
and
or
jnp
gs
push
push
xor
jl
loope
int
xlat
mov
loop
push
mov
xchg
mov
test
test
ljmp
lock
push
iret
dec
jecxz
mov
xchg
add
jno
scas
mov
aam
repz
test
mov
push
jne
xlat
jnp
jns
mov
hlt
adcb
clc
mov
sbbb
cmp
pop
xor
and
mov
stos
xor
mov
pop
xchg
sub
mov
les
nop
fwait
jnp
arpl
dec
mov
push
or
mov
sbb
lea
xor
xchg
das
cmpsb
std
daa
ss
or
lcall
adc
or
outsb
hlt
data16
sti
sahf
je
xor
out
sbb
jp
sahf
js
xchg
jo
out
insb
cmp
loopne
gs
mov
dec
in
addb
fisubrs
mov
loop
data16
mov
pop
mov
ret
movsb
push
jge
or
insl
jecxz
int
outsl
or
pusha
out
imul
std
jae
div
pop
pop
addr16
adc
push
bnd
and
icebp
fdivl
dec
push
mov
inc
lcall
popa
add
pusha
std
add
frstor
dec
and
sub
sub
pop
xchg
xchg
shl
outsb
sar
popa
dec
mov
jns
leave
xchg
cmp
aas
cltd
sbb
insl
cmp
sbb
xchg
push
loopne
cmpb
mov
sarl
mov
into
out
mov
mov
mov
push
push
lret
in
dec
cli
mov
movsb
jbe
aas
xor
std
repnz
add
dec
ror
repnz
ror
pusha
sub
inc
sarl
out
arpl
cmpsb
adc
fisubl
in
lods
cli
adc
mov
mov
and
inc
imul
or
mov
dec
mov
and
mov
mov
xlat
adcl
iret
shrb
loope
inc
cmp
sbb
add
fs
mov
push
andl
jle
xchg
xor
mov
jle
notl
popa
lea
cld
mov
xchg
fdivrp
aad
push
ss
stc
aam
repnz
jmp
in
cmpl
fstp
iret
jns
pushaw
rorl
jno
idivb
mov
dec
das
cmp
iret
mov
scas
lds
ret
pop
ret
fsubs
fildll
dec
outsl
mov
int3
pop
xlat
ret
cmp
cs
dec
lds
pusha
and
mov
pop
subl
add
pop
lret
xorb
inc
pop
jno
lret
lock
or
pop
cmp
clc
xchg
out
sti
xorl
and
mov
in
imul
divl
lahf
mov
test
sub
idivb
push
call
inc
jnp
fs
jmp
lret
ljmp
jmp
sub
std
inc
cmp
enter
add
adc
mov
gs
mov
test
data16
mov
divl
pop
mov
add
push
jb
clc
or
jp
jno
jge
out
loop
xchg
push
pop
test
mov
mov
popa
cli
andl
xchg
cmp
and
stc
icebp
fs
xor
jno
stc
fsubs
in
cld
inc
test
pop
pop
mov
iret
mov
mov
jb
cmc
lods
mov
je
cmp
hlt
jno
ret
outsb
or
push
adc
mov
mov
pushf
jb
mov
cmp
push
cltd
sub
mov
idivb
cld
das
inc
in
out
sub
mov
scas
adc
push
fistps
xor
jg
dec
es
add
sub
call
xchg
and
xchg
ds
mov
int3
add
dec
aad
stos
es
in
or
fiaddl
adc
cmp
in
sbb
lret
imul
or
adc
inc
nop
orl
add
add
cmp
dec
cmp
ficoml
fidivl
inc
shlb
jge
mov
pop
mov
mov
xor
sub
jge
push
xchg
rcrl
mov
loope
lcall
push
shll
jne
mov
push
repz
xchg
out
sub
adc
movsl
out
scas
mov
pop
add
call
adc
aam
lds
xor
xor
fldl
popf
js
fistps
scas
test
push
push
or
jbe
add
adc
sub
mov
or
cld
pop
aad
les
push
adcb
fcoms
jno
add
cmp
mov
adc
fisttps
sub
xchg
cmc
cmp
dec
jp
aam
mov
or
sub
andb
or
data16
xchg
mov
leave
fadds
test
shlb
int3
add
rcrl
call
jge
inc
rorb
mov
loopne
jg
adc
int3
sbb
push
ret
popa
divb
push
xchg
xchg
mov
adc
lods
cmpl
dec
mov
mov
adc
ror
fstpl
call
push
stos
cmpsl
mov
mov
ret
mov
or
jge
pop
mov
xor
das
popa
pop
arpl
inc
arpl
mov
jne
adc
sbb
out
mov
cld
xor
lahf
dec
das
loope
dec
dec
imul
mov
movsl
inc
fidivs
int3
xor
fsts
out
nop
cwtl
cmp
pmulhw
mov
iret
push
jno
popf
mov
push
cmp
mov
mov
jo
and
xor
jge
or
test
add
sub
xchg
fmull
fwait
pop
out
lods
xchg
sbb
imul
sti
sub
lret
xchg
cwtl
xchg
jp
inc
cld
cmc
add
push
cmp
pushf
jne
xchg
shlb
adc
nop
inc
lret
insb
vpcmpeqd
add
sbb
ljmp
mov
xlat
lea
push
pop
jns
xor
push
sbb
pop
add
out
xor
das
mov
int3
mov
pop
push
xchg
movb
or
mov
in
jno
adc
lods
sbb
pusha
adc
xchg
mov
adc
inc
add
dec
dec
mov
mov
lret
in
pop
cs
das
push
js
insl
dec
jle
jo
fs
mov
into
cmpsl
xchg
xchg
aam
rorb
rcrl
cmp
sub
loop
call
mov
xor
out
ds
loope
pusha
adc
mov
push
mov
in
xor
mov
cmpsl
int3
jbe
shll
scas
inc
mov
xchg
dec
scas
pop
rcll
or
aad
call
faddl
inc
xchg
mov
data16
adc
mov
aad
mov
cmp
das
add
pop
testl
movsb
out
xchg
test
ret
and
aad
mov
xchg
or
in
enter
scas
pop
and
repz
pushl
sub
lret
add
mov
mov
mov
pop
dec
inc
adc
sbb
in
push
sbb
ljmp
clc
sub
inc
mov
loop
jnp
sbb
fwait
out
dec
adc
js
in
testl
lret
push
jge
in
xchg
sbb
lret
xor
ret
repz
jb
popa
xchg
pop
les
mov
pop
fsubrs
fbstp
data16
cli
mov
and
inc
mov
lds
sub
and
mov
lods
cmc
jnp
or
das
outsb
dec
mov
fdivrl
addl
lret
aaa
repnz
or
and
mov
stos
dec
push
xchg
push
mov
sub
mov
sbb
lock
sub
aam
mov
mov
xchg
jb
cmpsl
pop
mov
lds
mov
ja,pt
xchg
loopne
push
fwait
pop
imul
insl
inc
jns
jb
mov
sbb
bound
mov
fists
add
sti
mov
mov
int
pop
mov
inc
out
dec
jno
push
jle
cmc
and
jmp
inc
mov
dec
inc
add
rcl
es
roll
mov
or
sbb
std
mov
in
pop
popf
aas
lret
or
ja
pusha
cmp
cmp
sub
icebp
in
mov
mov
mov
cmp
loope
or
scas
bound
in
mov
sub
test
mov
xor
lea
out
add
frstor
data16
dec
loopne
rep
cmc
rol
sbb
mov
scas
movsl
cmp
test
inc
rorb
add
cli
mov
rclb
pop
cmp
pop
xchg
push
test
cld
cmp
jmp
in
add
xor
inc
dec
je
ja
mov
addr16
mov
mov
and
in
push
add
sti
mov
cmp
je
sub
xor
mov
lahf
call
dec
inc
jp
pop
or
ret
dec
ljmp
push
popa
jg
push
add
pop
pop
mov
sbb
ljmp
popf
sti
lret
lods
push
xchg
xor
adc
lods
add
js
adc
mov
cmp
subb
rolb
or
scas
inc
push
in
rclb
outsl
test
and
loopne
cmp
int3
xchg
cmp
arpl
cs
inc
jns
aas
shrb
movsl
add
out
xchg
pop
test
jmp
insb
daa
dec
addr16
notl
mov
cltd
mov
ret
aas
mov
nop
in
je
cmpsl
flds
pop
mov
je
fs
int3
ja
jl
jns
jl
sbb
cmp
jae
push
decb
xchg
leave
sbb
mov
out
outsb
out
std
lret
inc
rorl
jl
xchg
mov
xchg
aam
push
jns
jle
fwait
les
mov
cwtl
out
jo
push
dec
lock
xchg
cmpsl
mov
mov
in
mov
fs
cli
je
cmpsl
and
sub
mov
mov
scas
dec
push
stc
iret
lahf
pop
incl
jnp
cmc
repz
dec
inc
push
cltd
repz
popf
and
dec
sub
xor
imul
dec
outsl
xorb
mov
cltd
and
sbbl
sarb
mov
imul
loope
xor
lret
push
imul
pop
dec
or
sbbl
adc
movsb
pop
jp
jno
mov
add
daa
jae
loop
arpl
pop
lcall
int3
aas
xchg
pusha
mov
pop
push
imul
xlat
and
out
adc
stos
lea
mov
xorl
mov
mov
daa
imul
or
loopne
les
xchg
scas
mov
xchg
pop
jnp
leave
insl
test
repz
sub
sub
das
jge
cmp
inc
add
add
cmp
jl
push
std
mov
inc
cmpsb
dec
dec
addr16
negb
enter
fisttpl
inc
jne
xchg
mov
std
mov
inc
cwtl
outsb
dec
and
int3
addl
lods
imul
test
mov
push
xchg
popf
mov
jge
pop
push
outsb
cmp
add
pop
or
cmp
lret
stos
and
insl
pushf
bound
repz
mov
adc
imul
jg
xchg
sub
xchg
xlat
inc
addr16
loop
cmpsb
xor
cmp
aad
cmpsl
iret
popa
shll
sahf
inc
rcll
xor
ja
gs
jmp
inc
mov
jno
ljmp
mov
fists
out
and
cli
or
repnz
hlt
movsl
adc
jne
fsts
les
fdivrp
sub
push
jns
jae
adc
mov
mov
iret
mov
or
test
xor
push
sbb
test
aad
out
pop
add
mov
clts
mov
jae
imul
leave
mov
lds
sti
adc
cmc
aad
int3
add
cmpb
addl
stc
pop
jne
xchg
in
and
fprem
scas
out
mov
push
cmp
inc
out
ror
rorb
mov
jge
push
aad
scas
and
xlat
sbb
pusha
loop
ret
jae
fwait
dec
dec
xchg
mov
sub
sub
lcall
xor
inc
mov
push
adc
pop
sti
jbe
aaa
inc
or
xchg
or
add
fisubrs
xor
add
sub
mov
dec
or
dec
insb
mov
push
mov
inc
popa
pop
cmp
nop
lahf
mov
sahf
pop
push
or
jecxz
mov
inc
repnz
pushf
lea
shrb
divb
mov
xor
out
test
push
repz
and
xor
adc
out
xor
lea
int3
add
icebp
dec
xor
lret
adc
jno
into
sahf
or
insb
xor
inc
iret
mov
sub
test
sti
mov
incl
xchg
pop
das
sbb
xchg
hlt
add
pop
mov
lock
mov
jbe
int3
jnp
inc
addr16
mov
inc
aam
ja
in
jp
popl
clc
mov
xchg
sbb
notb
les
cmpl
mov
insb
testb
insl
xor
ficoms
cmp
gs
std
dec
push
ja
repnz
fnstsw
popf
icebp
add
cmpsl
out
sub
clc
mov
insb
push
xor
mov
cltd
subl
nop
adc
cmp
js
enter
mov
shrl
test
jae
sbb
fmuls
mov
sub
lret
xchg
daa
cmp
daa
das
cmp
sub
andb
inc
or
daa
push
int
xor
add
loope
loop
pop
push
cmpsb
hlt
xorl
sbb
cmp
inc
ss
dec
inc
cmp
std
add
test
or
in
fimuls
dec
aam
lods
rorl
or
loope
loop
mov
xor
and
pop
or
mov
adc
sahf
cmpsl
dec
xlat
ljmp
dec
insl
fwait
loopne
scas
pop
dec
ja
cld
sbb
dec
dec
inc
sbb
lahf
jne
sti
adc
fwait
sub
fisubrl
sub
addb
sub
repnz
sti
test
cmpsl
gs
imul
sahf
pushf
mov
pop
pop
inc
mov
inc
mov
inc
adc
mov
cmp
mov
inc
inc
out
jnp
cmp
ds
cli
mov
cmpl
xchg
leave
and
mov
dec
sbb
jae
or
daa
jo
fcmovb
pop
es
test
jge
push
sbb
test
dec
ja
cmp
mov
mov
repz
inc
out
add
loopne
shrb
mov
cmp
cld
ret
je
xchg
adc
or
mov
and
xchg
adc
ds
shr
popf
insl
out
xchg
jmp
mov
out
das
in
xchg
mov
jno
cmp
jle
outsl
out
and
cli
xlat
testl
dec
sub
or
cmpsb
iret
aas
mov
inc
ja
cld
jmp
adc
in
push
mov
add
push
cmc
in
shll
xor
jge
out
outsl
lods
loopne
fidivrl
aad
mov
mov
jbe
pop
adc
and
sbb
inc
je
clc
hlt
mov
xor
inc
inc
clc
cmp
xchg
sarl
xchg
jge
sbb
or
sub
jl
mov
mov
orb
cmp
mov
jmp
and
js
mov
mov
pop
scas
lds
inc
pushw
inc
sbb
mov
cmp
ffree
dec
xor
mov
push
mov
fisttpl
push
and
jl
sub
mov
mov
add
dec
mov
add
xor
scas
popa
or
inc
imul
pop
xchg
or
mov
mov
push
xchg
xchg
inc
cmp
sbb
adc
xchg
stc
and
imul
ds
sti
outsb
xor
scas
inc
pushf
lds
pop
add
push
data16
into
outsb
insb
out
arpl
jno
mov
aaa
pop
mov
sti
xlat
lods
sub
ret
xor
lods
scas
insl
iret
and
pop
mov
add
pop
pop
add
or
adc
push
jb
push
jp
mov
imul
es
cs
aad
add
pop
mov
mov
jge
into
sti
sbbb
scas
lds
imulb
inc
dec
adc
push
push
cmp
add
sbb
mov
jl
adc
inc
jle
clc
inc
stos
ret
xchg
inc
mov
jo
arpl
fiadds
outsl
loopne
rolb
aas
pop
jmp
cmpsl
cmp
lret
repnz
fcoms
sbb
or
ficomps
andps
loop
mov
jmp
int
aas
sbb
jmp
and
ds
jle
test
xchg
push
jl
rcrb
mov
xor
add
test
stc
daa
fildl
stos
enter
pop
hlt
adc
push
mov
es
in
sbbl
test
mov
mov
adc
cmp
xchg
mov
nop
inc
lds
jl
sub
int3
cwtl
orl
pusha
push
xor
rcrl
xlat
rcrl
es
cld
ja
adc
loop
pop
xchg
sbb
and
loopne
dec
dec
pop
jbe
fnstsw
push
sub
int3
sbb
cli
mov
cmp
add
or
in
fcoms
testb
scas
scas
inc
and
dec
xchg
loop
leave
jmp
sahf
push
lcall
rorl
mov
push
or
sub
push
or
dec
pop
ja
sarl
bound
push
pop
push
in
imul
addr16
and
fst
mov
ja
push
loop
mov
jp
and
in
push
sbb
mov
or
and
adc
fstpt
pushf
out
jmp
sub
dec
xchg
test
loop
or
xchg
hlt
and
xchg
jg
mov
pop
scas
pop
push
mov
cmp
pop
loop
xlat
adc
cvttps2pi
xor
mov
pop
shlb
mov
pop
xor
lds
jl
xchg
cwtl
mov
inc
mov
pop
into
dec
push
in
test
adc
push
sahf
rcrl
std
in
stos
outsb
add
dec
mov
stos
xchg
stos
popf
fldl
es
inc
in
sbb
push
xchg
mov
push
dec
bound
ret
jmp
ret
mov
jno
inc
out
adc
pop
cmc
and
insb
pop
or
add
sbb
pop
cmpsb
pop
loop
movsl
and
or
arpl
fcompl
jns
es
test
ret
inc
std
icebp
ja
imul
push
iret
or
sbb
sub
jno
std
xchg
and
cmpsl
push
or
xchg
adc
cmc
cmp
lods
aad
inc
test
jmp
scas
cli
insl
arpl
lret
cmp
out
add
aaa
insb
mov
xlat
stc
add
cmp
dec
scas
lcall
not
repnz
sub
test
inc
mov
mov
push
shr
leave
outsl
test
out
out
push
lock
and
pop
into
add
and
pushf
jl
mov
mov
jl
out
push
repz
push
js
fldcw
pop
pop
push
shll
fdivrs
dec
ja
dec
addr16
add
push
xor
jne
mov
push
jle
xor
xchg
xchg
imul
rcrb
stos
in
xor
lock
pushf
add
popf
cmp
push
loop,pt
push
mov
dec
lods
push
inc
mov
dec
mov
pop
flds
push
rdpmc
ljmp
rorb
pop
dec
pop
inc
test
dec
inc
and
jno
mov
insb
xchg
clc
mov
repnz
push
xchg
inc
mov
push
mov
push
adc
cmovae
jecxz
bound
ss
adc
adc
or
nop
iret
push
packuswb
fcoml
push
jns
xchg
inc
push
orl
sub
test
mov
mov
jl
pop
je
or
inc
xor
je
retw
shrl
jmp
xchg
int3
sub
rclb
inc
cmp
int3
stc
jle
push
xchg
scas
cmp
or
mov
sbb
push
sbb
fcomip
sahf
jecxz
jns
adc
sub
adc
iret
pushf
push
test
jge
loop
adc
add
rcrl
and
pop
pop
jae
es
lock
in
xor
xchg
adc
sbb
xchg
mov
subl
pop
or
ss
dec
addb
pop
jmp
pusha
sub
fisubl
sbb
cmpsb
or
ja
jne
add
leave
sbb
fwait
xchg
pop
mov
and
jns
mov
mov
xor
mov
call
outsb
adc
pushf
lds
pop
push
or
or
std
insl
sub
ret
out
stc
daa
dec
shl
push
mov
cs
xchg
jnp
or
and
jg
imul
shrl
fsubrl
sbb
ljmp
push
daa
frstor
cld
pop
stos
lods
push
fbld
ja
mov
call
xchg
xchg
insb
push
mov
imul
add
lods
in
lret
push
pop
aaa
xchg
jno
cmp
popa
loope
and
xor
ljmp
arpl
mov
xchg
outsl
imul
test
movsb
dec
mov
cmpsl
je
jp
inc
iret
pop
add
loope
int
push
ja
push
pop
jb
fsubrs
shll
cld
mov
sti
enter
dec
iret
adc
pop
mov
sbb
lock
pop
mov
xchg
out
dec
xorb
push
mov
insb
mov
aad
mov
inc
aas
or
jns
mov
in
and
adc
push
fxtract
cmpsl
sbb
clc
es
push
fdivrs
push
cmp
repnz
push
adc
into
push
mov
icebp
mov
push
and
or
xchg
mov
jnp
inc
scas
fdivs
sbb
sbb
cmp
ds
stc
mov
sbb
loop
scas
mov
jne
adc
test
sub
fldl
aam
cli
insl
pop
xchg
mov
xchg
mov
sbb
xor
leave
lds
adc
push
adcl
mov
orb
daa
int
out
cld
or
jbe
dec
mov
xchg
jge
aad
out
ds
cli
sahf
pop
dec
jb
push
cmc
enter
adc
scas
fcompl
xor
or
cmc
cmpsl
lret
pop
sbb
jbe
xchg
ss
mov
test
xchg
cld
push
xor
stos
nop
and
jle
xor
mov
xchg
and
mov
push
imul
and
lret
cltd
push
call
and
je
outsb
mov
mov
push
repnz
shlb
inc
test
jo
push
xchg
xlat
cmpsl
mov
add
std
orl
jne
fs
loop
or
jg
cli
lret
add
and
mov
jge
fdivp
mov
xchg
or
mov
adc
add
mov
mov
dec
ficoms
ljmp
shl
xor
aad
jb
lahf
movsl
mov
data16
icebp
mov
pop
outsb
cmp
push
inc
jo
movsb
jmp
adcb
mov
shrb
addr16
std
loope
xchg
push
cmp
cmc
xor
icebp
negb
loop
xchg
pushf
or
inc
or
and
dec
test
pop
dec
stc
imul
mov
je
xor
mov
cld
cmp
je
push
and
push
fidivl
or
xchg
call
test
jns
sbbb
push
mov
mov
and
into
jl
pusha
add
fidivs
adc
shl
sahf
ss
sub
js
in
inc
imul
lods
pop
xorb
pusha
fsubrs
aas
inc
mov
jno
cmp
inc
iret
dec
dec
out
cmp
bound
xor
adc
mov
xor
pop
nop
cmp
adc
mov
lds
jmp
jge
daa
jbe
dec
dec
outsl
sbb
iret
jae
adc
in
lds
popa
inc
arpl
xchg
inc
cli
or
jle
mov
jo
in
fwait
data16
stos
pop
jne
out
arpl
push
mov
jo
sub
dec
mov
add
sbb
fcmovnb
call
cltd
fdivp
inc
sahf
js
test
jecxz
out
dec
inc
xor
mov
sbb
mov
pop
cmp
mov
pop
jnp
in
sarb
jae
loope
lds
xchg
xchg
iret
mov
imul
out
mov
xchg
orl
sahf
das
pusha
adc
push
xchg
xor
fisttps
repnz
jg
sahf
repnz
adc
je
mov
std
xlat
add
push
popf
jg
pop
push
push
nop
cmp
scas
loope
sub
daa
mov
cmp
xor
dec
sbb
dec
test
std
data16
dec
fsubrl
sub
cmp
fstps
inc
test
clc
lods
jl
dec
push
inc
adc
pop
pop
popa
push
add
jl
jo
aam
ja
lret
cmp
stc
aad
loopne
sbb
adc
aas
jo
js
mov
adc
pop
mov
insl
xorb
fs
mov
stos
sbb
mov
or
xchg
adc
int3
mov
sahf
js
cmp
cltd
jo
sahf
and
xchg
rclb
loop
outsl
sbb
out
jne
scas
pop
mov
sti
clc
inc
jb
mov
js
sbbb
rorl
inc
mov
inc
mov
sbb
mov
xchg
out
ret
rorb
mov
pop
xor
xor
mov
xchg
les
in
mov
in
mov
inc
inc
out
sbb
out
and
ljmp
cmc
add
in
pushf
inc
cmp
js
mov
jl
and
cs
pop
cmp
add
mov
sub
inc
xor
mov
jg
stos
mov
push
adc
mov
dec
adc
ret
push
repnz
adc
test
sarb
cli
jne
jp
inc
outsl
mov
mov
cmp
sbb
sub
xlat
jnp
mov
jmp
cmpsl
sbb
xchg
xchg
mov
mov
decl
add
or
ret
inc
mov
imul
repnz
mov
inc
mov
in
mov
in
fwait
push
mov
ss
push
stos
jae
adc
add
xchg
mov
scas
add
mov
sub
lahf
pop
cld
icebp
mov
in
fnstenv
clc
ret
pop
or
lret
mov
mov
inc
push
lret
gs
jno
push
fdivr
flds
cmp
sbb
jecxz
roll
loopne
push
cmpsb
sbb
fnstsw
and
cmc
mov
fisttps
inc
mov
pop
inc
pop
inc
xor
adc
popa
sbb
xchg
mov
aam
sti
fadd
inc
sbb
pop
frndint
in
into
pusha
mov
int
daa
xor
and
xchg
out
aaa
clc
cli
jmp
lock
into
idivb
mov
sbb
xchg
les
cmpb
subl
mov
add
ljmp
jg
push
fwait
aas
dec
cmp
xchg
xchg
mov
cmc
lahf
or
cld
push
aas
adc
test
repz
jle
xchg
lea
jns
out
mov
xor
add
out
mov
and
ss
mov
add
les
enter
fcmovb
add
jl
pop
xor
sub
adc
mov
arpl
cmpb
xchg
dec
jmp
push
dec
mov
ja
test
pop
xchg
xchg
lea
rolb
jno
inc
adc
cmp
ss
xchg
inc
test
inc
adc
iret
pop
or
scas
cmpl
xchg
inc
fwait
add
ljmp
sti
iret
iret
repnz
popf
mov
pop
ja
cmpsb
xor
addl
rcpps
jmp
xor
dec
stos
lods
clc
fsubl
cmpb
pusha
sarl
gs
push
cmp
cli
add
dec
scas
call
ljmp
lods
jmp
stos
mov
xchg
or
sbb
cmp
addl
push
cmp
es
push
cmp
stos
inc
jnp
outsl
pop
int3
xchg
mov
dec
aam
jl
sbb
leave
jne
rclb
mov
pop
pop
inc
pushf
pop
push
mov
push
jb
mov
out
vfrczsd
jp
inc
shrb
xor
add
add
test
cwtl
adc
lret
enter
push
loope
fs
dec
pop
xchg
cmpsb
mov
inc
jae
fistpl
xchg
and
ss
adc
xor
or
sbb
xor
mov
ss
adc
inc
sahf
push
std
push
sub
xchg
xor
or
gs
cmpsb
mov
dec
mov
aas
stc
enter
inc
cmp
aam
les
cltd
out
cmp
gs
loop
mov
fstps
sub
inc
fidivrs
cli
jnp
aaa
mov
out
repz
jbe
sbb
mov
xchg
xchg
vshufps
jns
inc
push
xor
jbe
jb
adc
mov
stos
cmp
or
dec
sti
push
mov
sbb
pop
add
dec
int3
add
stos
mov
push
fsts
and
lahf
xor
mov
inc
aam
jecxz
mov
sub
pushf
sub
and
sub
jmp
inc
shrb
std
stos
ds
rcr
je
mov
roll
and
add
and
lcall
fnstcw
fnstsw
xor
xor
in
mov
or
pushl
es
test
rcrl
pop
xor
negb
sub
rcrl
and
shrl
and
push
xchg
xchg
in
adc
mov
and
inc
cmp
movsl
or
popa
sbb
test
jmp
pop
lds
inc
rorl
xor
push
dec
stos
loopne
inc
jg
imul
insb
leave
sti
sahf
rcrb
lods
test
adc
mov
inc
mov
xchg
or
push
or
xorb
jge
jl
clc
or
pop
mov
inc
test
inc
ss
or
fildll
push
sbb
or
ss
stc
repz
push
mov
enter
mov
jl
pushf
fstpl
or
sbb
mov
push
daa
leave
mov
loopne
mov
dec
cs
popa
sub
inc
jp
outsl
ja
cli
movsb
pop
in
add
enter
push
adc
sahf
into
and
out
test
push
dec
fdivl
rcl
dec
sbb
xchg
stc
sbb
dec
mov
in
in
or
sub
mov
dec
mov
pop
orl
and
loope
cmc
dec
cmpsl
es
inc
sahf
xor
cmp
mov
sbb
mov
das
sbb
adcl
bound
sub
dec
pop
test
add
sti
mov
adc
mov
jbe
pop
arpl
sbb
repz
int3
sbb
adc
stos
loop
jns
add
stos
lcall
lods
cmp
lcall
ss
in
and
push
jecxz
aam
add
inc
sub
cs
inc
push
scas
adc
mov
add
out
dec
sub
in
das
lcall
jl
daa
fs
popa
jnp
dec
in
cli
sub
jmp
cmp
sbb
sbb
sahf
cmp
and
push
ds
outsb
sub
mov
adcb
push
mov
hlt
mov
sbb
aaa
inc
movsl
or
rorl
jl
fwait
mov
cmc
fcmovb
imul
into
mov
popa
ficompl
adc
ljmp
stc
pop
pushf
xor
in
filds
mov
shlb
xor
inc
ret
mov
jb
lahf
repnz
out
orb
neg
call
pop
or
shrb
cmc
shrb
loop
lods
jb
push
bound
mov
inc
cli
adc
shl
sbb
or
adc
fsubl
jle
and
ljmp
adcb
xorb
dec
sbb
bound
stos
inc
xor
and
ret
stos
push
xor
cwtl
jno
fcoms
xor
dec
fistpll
mov
jo
adc
jecxz
xchg
fwait
mov
pop
sbb
ret
pop
jns
mov
xchg
adc
rcr
das
fwait
cmc
cltd
sub
cmp
gs
dec
xchg
jge
lods
xor
pop
pop
xor
inc
mov
mov
aaa
lahf
dec
xor
jns
add
in
inc
bound
lea
pop
js
fidivrs
addr16
sbb
mov
push
sub
add
js
adc
push
in
adc
pop
mov
inc
iret
testb
int3
in
sbbb
sub
mov
mov
sub
lods
out
mov
jmp
mov
pop
imul
jns
stos
divb
fwait
jo
push
daa
and
ds
jo
mov
nop
xchg
jg
ror
sbb
loopne
sbb
loope
cmc
cmpsl
into
jo
repnz
ret
jnp
in
popf
movl
mov
stos
inc
push
or
push
movhps
cmp
xchg
adc
in
adc
mov
push
out
xchg
data16
dec
push
jo
hlt
mov
mov
int
cmpsb
nop
push
xor
xor
mov
loope
inc
scas
pop
push
clc
ljmp
push
in
nop
insl
cltd
scas
or
mov
mov
push
mov
adc
movl
jno
and
inc
scas
push
out
test
xlat
lods
pop
aas
dec
test
sub
pop
sub
shrl
filds
mov
xor
xchg
push
sbb
jge
imul
adc
jb
adc
mov
xchg
inc
pop
mov
aaa
faddl
roll
pop
movsb
inc
pop
cld
icebp
les
and
mov
roll
in
out
dec
sbb
xchg
mov
arpl
in
push
mov
adc
dec
dec
mov
xor
in
pop
ret
sub
lock
divb
sbb
or
inc
jns
fcomi
jns
xchg
or
mov
repnz
xor
lods
hlt
push
call
and
lret
addl
fwait
sbbl
movsb
mov
lcall
gs
cmp
pop
mov
icebp
xlat
pop
in
dec
addl
cmp
ficoms
ljmp
addr16
pop
jmp
add
data16
into
hlt
loop
std
mov
testb
repnz
jmp
push
lret
test
xchg
jmp
mov
iret
ds
mov
cmc
fisttpll
clc
js
xchg
or
mov
inc
pop
push
add
out
mov
fbld
das
scas
and
inc
test
es
push
or
jmp
lcall
pop
out
pop
test
mov
add
push
xchg
cltd
pop
loop
aad
ds
push
addb
mov
lret
arpl
sbb
sahf
push
sbb
adc
out
push
mov
les
cmp
int3
lcall
mov
repnz
or
adc
sti
fucomp
jecxz
icebp
clc
and
fnsave
mov
xlat
or
inc
rol
data16
inc
mov
jae
clc
mov
in
push
xchg
out
jbe
xor
insb
das
pop
cmp
pop
movsl
popf
add
je
sub
stos
push
inc
push
sub
dec
add
pop
rolb
sbb
ficompl
lcall
jo
or
leave
xchg
mov
popf
lds
sbb
push
fwait
sub
push
inc
ret
inc
xchg
adc
pop
adc
call
dec
mov
in
sub
scas
mov
xor
outsl
and
xor
in
addr16
rcl
daa
sbb
push
push
pusha
jl
pop
subb
sbb
pop
add
cmpl
rorl
mov
inc
loop
cltd
jge
inc
mov
lret
add
pop
sub
sarb
es
jb
mov
xchg
jge
pop
push
repz
lea
jmp
ljmp
push
or
mov
fwait
xor
and
sbb
push
std
pop
sbb
lods
sub
outsl
xor
popa
pop
outsb
icebp
cmpsb
pop
aad
pop
dec
cmp
mov
push
push
icebp
nop
adc
addr16
pop
xlat
popf
sub
adc
xchg
aam
push
repz
pop
call
adc
xchg
sbb
cld
jns
mov
dec
mov
int
ja
jno
or
icebp
push
push
push
dec
inc
cltd
adc
out
push
dec
cwtl
adc
popa
das
sub
test
loope,pt
or
icebp
sub
jge
xchg
mov
jns
cltd
fadds
cmpsb
imul
push
dec
in
int
cmpsb
fsubp
inc
xor
pop
xchg
mov
bound
adc
push
pop
in
inc
out
mov
fsubrs
pop
in
or
cmp
cmp
xchg
daa
mov
cltd
mov
into
adc
mov
mov
cmpsb
rcrb
xor
mov
pop
push
fistpll
leave
lods
cmp
outsb
pop
or
and
and
fwait
imull
sub
popa
mov
roll
pop
ja
fwait
repnz
icebp
push
xchg
ret
inc
mov
fistpl
jns
rolb
lea
add
adc
push
jns
xor
test
inc
push
inc
scas
push
cltd
mov
imul
inc
scas
mov
shl
pop
aas
jbe,pn
bound
adc
cs
dec
movsb
negb
cld
xchg
sub
or
push
outsl
fbstp
push
xor
mov
bound
or
or
cli
xchg
movsl
in
mov
xor
xor
sbb
cld
aad
sbb
mov
lahf
leave
fnstsw
lds
rcl
push
mov
jb
pop
leave
cmp
mov
adc
mov
adc
and
in
sub
repz
insl
mov
inc
or
dec
dec
daa
mov
xor
fldt
jmp
or
push
hlt
push
or
mov
or
mov
mov
pop
cli
dec
dec
xor
adc
xor
push
xchg
cmpsl
xchg
idiv
xor
xor
xchg
sarl
fucomp
mov
inc
in
pop
stos
rcrb
jne
push
mov
iret
cmpsl
push
dec
sahf
outsl
cmp
xchg
out
std
add
addl
pushf
aas
cmp
enter
pushf
cmp
and
cmp
dec
stc
popf
pop
push
jmp
out
gs
inc
cmp
enter
lahf
movsb
jae
sub
push
dec
pop
xchg
sbb
loop
test
jg
rcrb
scas
in
or
sub
dec
cli
leave
jmp
in
je
inc
inc
inc
mov
andb
ja
xor
jg
push
xchg
into
enter
in
xchg
adc
xchg
pop
xor
mov
stos
fistps
and
mov
fwait
pop
xchg
mov
mov
xorps
jge
dec
inc
leave
jns
fildll
fistps
jmp
ret
or
or
stos
lea
pop
shr
jge
es
mov
inc
repz
add
add
es
cmpsl
cmp
xchg
out
outsb
mov
loop
cmp
imulb
into
xlat
sbb
xor
rcrl
imull
or
or
mov
or
and
cmp
pop
data16
loopne
ss
mov
test
pop
pop
test
test
or
pop
sbb
adc
fstpt
mov
out
mov
push
dec
sub
pushf
jo
xlat
push
sbb
pop
lods
jp
cs
gs
leave
mov
dec
inc
mov
and
int3
push
inc
cmovs
pusha
sbb
scas
call
les
pop
aad
or
jae
dec
mov
add
push
pusha
xchg
mov
push
xchg
in
rcll
or
pop
dec
cmc
jb
iret
scas
loope
cmp
ret
popf
orl
push
aad
sub
jnp
add
mov
sub
jo
cmp
std
nop
cmp
xor
sahf
mov
test
enter
mov
test
mov
pop
das
push
xchg
aaa
and
mov
adc
sbb
adc
iret
pushf
sbbl
ficomps
mov
out
push
sbb
subl
fistl
push
xchg
adc
ds
jns
sbbl
cltd
cwtl
sbb
rcrl
repnz
call
jle
push
dec
out
sub
xchg
ret
xchg
sub
ds
iret
icebp
and
insb
sub
pop
lcall
imul
insl
bswap
pmaxub
dec
xchg
addr16
repnz
out
imul
push
repz
cs
out
mov
push
in
test
mov
jle
sub
mov
xchg
add
pop
movsl
sub
outsb
inc
aas
jns
push
inc
inc
mov
dec
mov
inc
sub
stc
mov
inc
push
ljmp
insb
test
jo
stos
pop
mov
xor
or
in
mulb
mov
test
subb
mov
dec
or
aaa
out
dec
pop
lods
imul
addb
fidivrl
and
ds
frstpm(287
testb
adc
xlat
sbb
jnp
aas
dec
cmpsl
out
aaa
mov
les
pop
add
add
xchg
adc
push
add
and
jmp
stc
inc
push
mov
mov
scas
pop
inc
push
pop
mov
ret
and
xchg
jne
lods
xchg
add
pop
ja
data16
mov
mov
pop
ret
mov
inc
pop
jl
xor
out
jg
lods
rcr
dec
test
lock
push
cmpsl
in
gs
pop
fucomp
adc
pop
aas
fs
enter
aam
sbbb
stos
cmp
sbb
sbb
add
pop
aad
cltd
inc
mov
inc
mov
in
idivl
mov
sbb
mov
push
or
xchg
push
jne
movsl
arpl
mov
xchg
insb
aad
and
test
mov
jo
idiv
aad
and
pop
std
lea
fwait
js
lahf
repnz
mov
gs
mov
imul
mov
pop
push
in
fdivp
ds
gs
xchg
dec
and
aas
or
jne
je
fcomp
pusha
sahf
and
sahf
jmp
sbb
sahf
inc
cltd
or
popa
lahf
xchg
mov
movsb
subb
rol
fbstp
repnz
dec
push
movsl
inc
jle
repz
or
in
lret
add
pop
in
or
jmp
inc
popf
hlt
arpl
adc
not
pop
adc
add
jecxz
ljmp
movb
outsb
xor
leave
inc
shll
push
in
push
repnz
lahf
xor
vcvtsd2si
lods
pop
std
test
std
push
bound
repnz
or
imul
enter
cmp
loop
iret
leave
inc
cltd
jle
mov
pop
mov
popf
xchg
idivb
pop
pop
repnz
int
aam
mov
hlt
mov
adc
jmp
shrb
movsl
xor
int3
and
sub
jl
pop
or
pop
cmp
lea
pop
loopne
mov
lods
aaa
mov
mov
dec
lea
lds
filds
cmp
lahf
xor
roll
adc
jmp
aas
jmp
add
mov
rcrb
aad
cmp
inc
ret
xor
dec
insb
data16
fsubl
mov
mov
pop
xor
pop
icebp
lret
xchg
call
fisubrl
cld
fmul
test
xchg
outsb
fstp
sbb
outsl
inc
add
mov
mov
scas
mov
cmp
xchg
pop
out
sub
shlb
fdivl
pop
mov
cltd
int
pushf
mov
fiadds
iret
mov
jnp
mov
sub
pop
cli
out
xlat
xor
pop
int
cmp
adc
fs
mov
xchg
mov
rcll
ds
subb
pop
push
sub
and
sub
mov
pop
and
push
sarb
xchg
sub
mov
adc
dec
ds
sbb
sbb
test
lea
pop
rcrb
jae
call
sub
call
popf
test
subl
andl
aad
add
dec
adc
pop
adc
and
test
call
lret
and
lret
lahf
ljmp
jle
int3
mov
sbb
into
daa
in
test
in
fisttpll
pop
lahf
cs
insl
loope
jnp
jne
inc
ret
adc
mov
cltd
dec
in
lcall
inc
ret
imul
fs
xorl
push
fwait
out
movsb
push
shl
sub
lods
mov
mov
xor
clc
fisubrl
push
cmp
sub
push
push
mov
push
and
scas
mov
sarl
push
dec
out
aaa
lcall
ss
addr16
push
push
repz
jmp
xor
push
push
mov
jno
mov
addb
aad
fbld
jle
shr
mov
inc
mov
mov
inc
test
cmp
fcomps
mov
mov
in
cmc
pusha
xor
jne
repnz
xchg
loop
pop
dec
dec
mov
fcmovu
dec
jo
adc
stos
and
adc
movl
scas
call
mov
dec
lahf
add
cmp
dec
and
arpl
mov
sbb
in
imul
call
mov
shrb
jge
jae
mov
mov
mov
scas
adc
sub
sbb
pop
cmp
jb
and
test
jmp
xchg
not
mov
mull
std
es
cmp
mov
lahf
sti
jo
mov
push
dec
inc
xor
push
and
sti
and
in
jmp
mov
pop
mov
push
ret
or
js
enter
mov
and
sub
bswap
or
out
sub
push
lds
sub
sarb
pushf
enter
add
cmp
pop
stc
cmovg
les
push
xor
inc
sti
mov
lret
adc
pop
push
es
sub
or
push
aas
rolb
mov
popf
call
scas
fndisi(8087
xlat
in
push
mov
push
out
or
push
dec
mov
mov
mov
mov
inc
cmpsl
cmp
mov
scas
push
or
cli
ljmp
dec
testl
and
scas
push
sti
cmpsl
or
xchg
fwait
mov
in
xchg
lret
js
push
subb
movsb
iret
or
test
dec
fwait
xchg
and
rep
jge
stos
jb
mov
jb
add
in
nop
mov
imul
lods
jbe
inc
mov
mov
pop
add
mov
xchg
test
cmpsb
cmp
not
mov
jmp
cmp
add
pop
loope
popf
subb
mov
or
cmp
push
push
call
dec
mov
xchg
out
movsl
xchg
punpcklwd
or
jae
or
inc
jle
cmp
and
cli
xor
adc
dec
cwtl
loop
cmpsl
jmp
lods
mul
hlt
jge
cmc
mov
adc
sbb
movsl
and
push
sbb
nop
cs
daa
jns
in
andl
ret
call
inc
sti
mov
or
xchg
pop
shrl
lcall
jp
pop
mov
jns
push
icebp
jb
add
in
es
mov
sbb
push
arpl
sub
xchg
ret
xor
std
mov
dec
data16
inc
es
imul
xor
push
fistpll
rcrb
aaa
push
lret
add
mov
insl
sub
pop
stos
xor
movsl
mov
push
inc
add
data16
rcll
xor
sbb
test
in
dec
int3
mov
leave
jecxz
aas
sahf
lret
std
dec
mov
or
dec
sub
insl
lfs
imul
mov
mov
push
movl
cmpl
out
ror
fbld
jo
cmp
mov
sbb
jp
mov
or
shrl
jne
dec
nop
xor
push
ret
cmp
xchg
and
xor
inc
call
call
sbb
jg
movsl
sbb
or
lret
sbb
cmpsl
mov
pop
xchg
adc
mov
loop
lea
mov
adc
js
mov
hlt
mov
ds
gs
push
sub
jae
insb
add
mov
pop
mov
int3
in
dec
fs
test
add
jmp
jae
cli
jnp
cltd
sub
or
xchg
test
dec
ljmp
pusha
out
add
ss
adc
inc
aas
push
outsl
mov
adc
dec
imul
es
pop
frndint
push
add
into
fdivrl
out
mov
imul
fpatan
stos
popa
mov
pop
sub
jno
and
fildll
pushf
cltd
adc
cmp
sarl
push
mov
pop
dec
mov
cmc
cmpsl
adc
arpl
aaa
xchg
xchg
icebp
pop
adc
jbe
hlt
or
add
sub
data16
test
xchg
xchg
addl
xchg
fdivl
cmpb
push
or
push
fwait
jp
fbld
dec
push
push
jl
int
or
je
ds
push
push
push
push
sub
sub
icebp
push
sti
add
sarb
call
data16
mov
pop
ja
mov
adc
mov
test
mov
pop
dec
adc
int3
pop
loop
cmpsl
clc
pmulhuw
xchg
jns
in
or
adc
lock
lock
mov
mov
ss
fdivl
or
jmp
mov
xchg
mov
outsl
fs
or
movsl
pop
jbe
jge
pop
or
nop
xor
mov
cmp
test
jno
xchg
dec
mov
mov
shlb
mov
addb
mov
jl
adc
mov
leave
outsb
mov
mov
sti
inc
add
mov
out
addr16
fidivl
shl
or
pop
icebp
push
fdivrs
mov
cmpsb
inc
jp
pop
shrb
popf
jp
repz
mov
mov
jecxz
and
sub
sub
add
fsubr
sub
xor
movsl
dec
ljmp
adc
mov
cmp
movhps
pusha
pop
pop
subl
mov
aaa
mov
inc
mov
xor
aam
cmp
pop
add
add
cmp
in
xor
push
jl
scas
fiadds
arpl
mov
pop
outsl
xchg
cmp
bound
sub
push
cld
mov
push
arpl
push
pop
stos
push
mov
insb
xor
sub
jno
cltd
sbbl
sbb
push
loope
and
and
ds
bound
cwtl
es
aas
push
lock
fbstp
inc
jo
nop
push
mov
cmp
inc
loop
mov
pop
popf
xor
sbb
repnz
xor
inc
fmul
sub
aad
int
mov
test
ret
in
jecxz
or
fwait
pop
pop
mov
popa
mov
sti
xlat
js
insb
cmp
pop
sub
std
mov
lods
cmp
push
cltd
testb
cmp
push
bound
es
pushf
inc
add
imulb
xacquire
pop
dec
je
cmc
jnp
pop
scas
repnz
pop
jmp
dec
push
jb
ret
fsts
lahf
daa
inc
xchg
lods
movb
pusha
adc
ret
mov
fidivs
outsb
adc
add
iret
mov
sub
in
out
inc
out
jno
xchg
lret
rol
mov
xchg
test
jne
dec
mov
and
xchg
adc
dec
data16
add
js
sbb
jecxz
stos
xchg
push
cltd
aam
insl
dec
xchg
andl
xchg
mov
sub
or
popf
aam
or
xchg
fadd
in
lods
orl
ljmp
push
cld
sub
fidivs
mov
xchg
leave
adc
out
insb
push
mov
out
scas
pop
push
jl
xchg
out
add
sarb
sarb
cmp
aad
pop
push
lret
fimuls
movsl
jp
mov
xchg
and
add
popf
adc
lods
ljmp
add
leave
or
js
or
ss
and
inc
push
insl
mov
inc
in
or
add
mov
mov
mov
sub
in
bnd
aaa
insb
xor
insb
hlt
or
inc
shll
cmp
sti
push
aas
mov
jns
andl
sub
sub
push
sub
movsl
bound
ss
insl
out
mov
sub
popf
cli
and
pop
push
lods
inc
sbb
adc
scas
pusha
sub
or
mov
jb
mov
test
xorb
clc
lods
xor
or
movsl
pop
cmp
jae
cmp
das
cld
setge
lock
jp,pn
fidivs
popa
inc
xor
data16
cld
sub
lahf
adc
stos
mov
xor
dec
mov
or
mov
push
mov
adc
pop
xchg
adc
xchg
xchg
out
adcl
int3
shrl
jge
xchg
data16
outsb
jb
add
cli
mov
inc
shll
loope
lret
fldt
lcall
cmpsl
or
ss
lock
movsl
jo
mov
fsts
stos
fisubrs
sahf
xor
pop
imul
push
pop
rorb
cld
bound
cmp
test
popaw
jb
jb
scas
call
jp
fidivrs
jle,pn
mov
insb
sarl
sub
jae
rolb
imul
aaa
cs
rolb
in
dec
mov
dec
add
push
scas
xor
sti
not
adc
dec
cmp
nop
xor
xlat
call
gs
sub
mov
sub
sub
fstpl
dec
int
loop
mov
imul
mov
push
in
lds
or
test
cli
negb
sub
stos
gs
sub
mov
mov
xchg
mov
adc
sub
repz
sub
lcall
inc
je
arpl
popf
mov
jbe
inc
xchg
out
mov
rcrb
jae
push
mov
mov
notb
sbb
sub
imul
inc
insb
or
iret
push
lods
hlt
adc
mov
lds
sub
adc
jns
push
add
and
inc
mov
out
adc
adc
icebp
lods
mull
lds
cmp
push
daa
mov
mov
daa
aas
ljmp
push
sub
out
xchg
ds
dec
jmp
inc
filds
ficompl
cltd
inc
add
in
addb
scas
out
and
inc
mov
dec
stos
dec
stos
mov
push
ja
fs
mov
add
push
cli
das
mov
bound
je
fisubl
sub
ret
shlb
sahf
imulb
mov
jp
xor
add
xchg
enter
xchg
aam
push
loope
mov
dec
mov
jne
inc
dec
mov
xchg
lcall
int
push
lahf
repz
repnz
iret
xchg
leave
xchg
lock
xlat
mov
push
mov
cmp
rcrb
mov
dec
or
xchg
adc
pushf
ss
test
in
xchg
fidivs
mov
add
cs
mov
sub
iret
mov
cld
fildl
pop
mov
adc
test
cwtl
mov
inc
adc
stos
xchg
cli
sub
add
movsl
fcoml
dec
adc
in
ljmp
cmovb
pop
sub
iret
out
fcoml
cld
cmc
repz
out
adc
sbb
sub
pop
rcll
ss
jbe
mov
jmp
call
push
jmp
out
xchg
imul
mov
arpl
lahf
mov
test
iret
js
pop
sbb
out
cld
es
in
jecxz
lods
out
fimuls
inc
shr
outsl
mov
inc
pop
pop
mov
push
rolb
sub
mov
dec
jle
imul
cmpsb
xor
mov
xchg
ret
inc
out
mov
lods
or
add
out
sub
sahf
imul
enter
pop
mov
mov
inc
adc
les
xchg
or
loop
outsb
imull
js
inc
pop
mov
pop
push
inc
xlat
jmp
rcrl
mov
call
arpl
push
nop
add
add
cltd
lods
adc
sahf
ja
adc
jns
add
mov
lahf
xchg
xorb
cmp
add
das
loopne
lea
pop
cmp
sahf
mov
inc
push
out
out
xchg
test
fisttpl
xchg
cltd
xor
pop
in
fisubrs
push
adc
imul
mov
mov
repnz
xchg
sbb
iret
mov
ds
dec
xor
mov
imul
mov
cli
stos
jmp
cltd
and
repnz
add
out
dec
lods
lea
sbb
jns
fldt
push
cmpsb
sub
pop
lea
dec
xor
bound
add
push
or
xchg
stc
pop
cmc
mov
fnstsw
fistpll
add
and
xlat
lods
dec
cli
test
pop
mov
ljmp
or
xchg
xchg
jecxz
mov
xor
out
adc
push
loopne
in
jl,pn
push
push
mov
inc
sbb
mov
mov
gs
mov
and
sbb
out
sbb
imulb
ja
cltd
mov
xchg
iret
cli
and
and
lcall
andb
iret
lds
push
test
pop
or
or
inc
cmpsb
lods
fcoml
roll
jns
xchg
mov
push
add
push
sti
and
out
jo
sbb
or
xchg
stc
add
pop
jae
nop
adc
cmpl
rorl
inc
xchg
cmp
dec
les
pushf
mov
rclb
cmp
je
outsl
adc
leave
cmc
sub
xchg
out
xor
push
ds
jae
mov
push
lret
push
imul
sub
faddl
dec
mov
lcall
sub
jp
cmp
jecxz
stos
ss
iret
pop
das
aaa
loopne
pop
sbb
lock
cltd
push
mov
mull
clc
xchg
mov
popf
adcl
add
adc
inc
out
cmp
xor
fstps
jecxz
sahf
orl
or
mov
call
int
test
jg
dec
in
sub
outsl
aam
test
xchg
dec
jl
dec
scas
lods
push
fistps
ret
xchg
cmp
lods
mov
repz
dec
dec
cmp
repnz
sbb
push
inc
lods
mov
pop
mov
cmp
inc
jle
cli
rcrb
mov
push
mov
cmp
inc
mov
fadds
insb
addr16
imul
sbb
inc
mov
push
cltd
pop
mov
pop
cmpsl
mov
push
jle
mov
insb
jb
mov
sbbl
pop
jl
shrb
ret
adc
testb
cmp
or
sbb
jnp
mov
cmp
fcmove
mov
pop
rclb
xor
fsts
test
push
sub
or
xchg
jnp
mov
dec
inc
sub
je
jmp
imul
or
jbe
popa
xchg
sbb
ret
xchg
sub
push
hlt
dec
push
sub
andb
outsl
mov
fcomps
or
lods
aam
popf
enter
out
cmpb
and
addr16
ja
push
sbb
jnp
aas
cmp
adc
mov
cmp
adc
aas
lock
call
mov
in
movaps
and
xor
inc
mov
lods
fbstp
jle
test
push
push
inc
sbb
and
je
test
icebp
fs
push
mov
sub
mov
lea
xor
pusha
cmp
xchg
daa
mov
cmp
xchg
jmp
loope
mov
or
jg
test
sbb
es
jbe
rorb
adc
ljmp
mov
out
xorl
fimull
inc
inc
add
stc
mulb
ds
mov
ja
mov
pop
cmp
mov
mov
mov
es
sbb
movsl
push
lea
addb
mov
stos
sub
pop
cmp
xchg
ja
cld
push
mov
mov
fisttps
iret
pop
in
xor
lcall
xorl
sbb
dec
loope
or
movsl
aad
je
loop
sti
and
jae
xor
stos
in
test
cmp
cli
sarl
lock
insl
or
jg
xchg
adc
xor
sbb
dec
xchg
adc
sbb
mov
ss
push
jbe
jmp
adc
stos
pop
test
inc
xchg
lahf
lock
scas
scas
jl
mov
std
cmc
sti
or
xlat
mov
aam
fs
es
in
daa
test
arpl
or
add
inc
std
movsl
fsts
and
cmp
mov
dec
xchg
xor
cmpsl
shlb
clc
push
out
and
or
ret
push
or
mov
movb
mov
lock
test
aam
sub
add
dec
dec
sahf
add
iret
cmp
mov
jnp
pushl
test
lds
stc
fsubrl
js
xor
xor
xor
scas
push
pop
hlt
sub
mov
les
sbb
xor
dec
xchg
push
sub
xor
loopne
imul
pop
lahf
dec
mov
mov
xor
inc
mov
mov
shll
aas
push
xchg
mov
jecxz
mov
fwait
ret
push
mov
test
sbb
jnp
ljmp
das
movsl
mov
fwait
xor
push
ss
adc
fsubrl
jge
aas
sar
repz
int3
jp
pop
sbb
lock
loope
adc
jbe
in
push
repnz
xlat
out
outsl
test
imul
xor
aad
dec
lahf
mov
outsl
inc
cltd
add
xor
pop
adc
push
cwtl
aad
repnz
aam
mov
jnp
adc
xor
add
data16
andb
mov
xor
inc
mov
clc
jg
testb
sbb
xor
xchg
xor
lods
jno
dec
subl
bnd
pop
sub
outsl
adc
cmp
mov
jg
daa
mov
es
pop
pop
enter
sub
mov
out
cmpsl
rolb
leave
mov
push
xor
test
cwtl
cltd
jne
push
xchg
rcl
jne
mov
cli
or
dec
test
lods
lahf
mov
sub
jno
pop
and
xor
lea
sar
cltd
icebp
stos
push
aad
adc
add
mov
push
test
cltd
data16
dec
push
aaa
ret
sbb
aad
jb,pt
or
fistl
imul
test
push
adc
cld
leave
scas
nopl
xchg
xchg
mov
push
aas
clc
mov
dec
shlb
mov
bound
cmc
stc
ss
cmp
push
pop
mov
mov
xor
mov
sbb
cmp
mov
nop
mov
xchg
stos
lea
mov
mov
rcrb
dec
adc
nop
push
dec
ret
addb
xorb
or
sub
aas
inc
dec
sbb
fstps
repz
and
sbb
push
dec
or
test
add
or
nop
outsl
mov
imul
jmp
push
lcall
jl
in
in
mov
test
fisttpl
sar
push
sti
sub
xchg
jbe
into
popf
mov
loopne
mov
dec
jns
jle
cs
push
dec
repz
pop
sub
cmp
scas
leave
dec
push
sbb
add
mov
mov
or
setnp
or
add
clc
or
repz
sub
std
mov
js
cmp
or
das
cwtl
loop
adc
clc
pop
enter
push
lods
sub
or
filds
test
lock
xorb
ret
xor
mov
notb
hlt
iret
mov
sub
pop
test
repz
dec
inc
mov
sub
pop
jnp
mov
xchg
add
add
jp
sub
mov
jo
clc
add
mov
mov
inc
cmp
aas
jmp
sub
ds
dec
jo
push
enter
lds
scas
or
sbb
jbe
packuswb
mov
mov
rcr
subb
adc
xchg
hlt
add
sbb
pop
cmpsl
test
cltd
jle
jo
mov
mov
inc
sbb
mov
push
and
int3
adcl
push
xchg
dec
testb
clc
stos
leave
add
sub
inc
dec
xchg
inc
negl
mov
shl
in
dec
daa
cmpl
push
mov
outsb
lods
and
mov
xlat
in
pop
sbb
nop
lea
mov
fsts
in
and
jle
or
add
cmp
leave
xor
sub
clc
xor
jecxz
mov
insb
out
arpl
cmpsl
je
insb
xchg
mov
je
push
sahf
xchg
push
lea
scas
sub
mov
out
xchg
out
mov
in
gs
add
andb
fsubrs
cmpsl
popf
movsb
jne
or
xor
sti
popf
insl
fcoms
dec
xchg
or
les
mov
inc
jp
mov
mov
jp
std
cld
jge
insb
xor
mov
lret
and
insb
sahf
or
mov
mov
loope
pop
daa
fs
xlat
dec
jl
add
adc
mov
in
adc
inc
mov
sti
out
jmp
cmc
xor
push
xchg
fistpl
loope
mov
and
xlat
loope
jp
mov
jp
jp
scas
pop
cmp
mov
std
pop
das
sbb
pop
sbb
shrb
in
xchg
pop
cmp
std
push
push
pusha
sbb
das
in
loope
daa
jmp
stc
mov
subb
inc
mov
xchg
add
push
cmp
jnp
mov
jmp
out
loope
rorl
xchg
pushf
arpl
dec
cmp
dec
push
dec
call
rclb
imul
mov
pop
mov
lcall
jg
mov
or
pop
popa
mov
xlat
inc
inc
sub
jle
fs
aaa
jmp
aaa
mov
push
cpuid
push
and
popa
bound
xor
dec
jb
imul
add
int3
scas
je
neg
and
je
rcll
cli
test
incb
leave
and
sar
add
popa
and
push
ret
insl
sbb
sbb
orb
mov
pop
sub
movsl
gs
xchg
addr16
inc
cwtl
push
sub
rcrl
mov
cmp
mov
shlb
lods
and
add
pop
sbb
jno
rcrl
outsb
xor
add
pop
xor
out
outsb
pop
xchg
cmp
push
jmp
cmp
jmp
insl
lret
gs
inc
iret
lds
sbb
call
sbbl
mov
lods
int
int
sbb
cmc
cmpsl
shrl
std
enter
loopne
jns
test
push
fmuls
adc
and
fdivr
sub
xchg
lods
cmpsb
enter
out
cmp
mov
pop
enter
ss
xchg
lret
xchg
mov
enter
cltd
aad
loope
dec
jle
je
inc
push
pop
cmpsl
xchg
popf
pushf
cmpsl
out
stos
jbe
or
call
call
in
into
adc
mov
jnp
add
jge
int3
xchg
pop
pushf
sti
mov
shlb
jne,pn
pop
aad
mov
mov
mov
pushf
jmp
xor
pop
jno
nop
add
lret
fs
inc
xchg
out
sbb
push
movsl
cmp
clc
iret
xchg
pushf
popa
fbld
imul
push
ret
and
stos
mov
je
xor
imul
test
push
mov
and
pop
dec
leave
jl
aam
loopne
cmp
outsl
pop
push
dec
hlt
fcomps
sub
and
push
scas
xor
movsb
xchg
popa
or
rorl
pop
dec
xor
or
sti
sbb
push
out
fsubrl
fwait
sbb
sub
mov
xor
mul
and
push
cmp
adc
leave
rcl
add
lock
dec
out
mov
mov
add
lcall
mov
jnp
jae
pusha
jns
pop
pusha
clc
rol
pop
test
stos
lret
jnp
popa
sbb
jmp
adc
fdivrl
aaa
leave
cmp
stc
lods
mov
xor
pop
and
sbb
je
fs
mov
xor
cltd
sbb
dec
ret
loop
adc
lcall
test
andl
jg
pop
rol
xchg
sbb
and
fstpt
sbb
cmp
mov
xchg
mov
mov
inc
test
fwait
call
pusha
xchg
xor
mov
test
jo
pop
das
mov
xchg
into
add
jb
ss
jne
clc
cmp
xor
xchg
cwtl
insb
cwtl
dec
test
mov
pop
pop
and
fimuls
xchg
lods
outsl
outsb
loop
inc
xchg
push
lock
adc
and
leave
and
xor
aad
imul
inc
fcoml
cwtl
xchg
cltd
fisttps
inc
repnz
cmpsl
adc
mov
xor
mov
test
std
addr16
adc
mov
xorb
repz
mov
es
or
inc
pop
push
mov
lret
imul
sub
and
cmpsl
pushf
inc
push
daa
std
add
pop
jnp
fwait
pop
movsl
adc
sbb
dec
jne
in
jge
mov
lock
and
fbld
test
lods
mov
add
aas
aad
imul
push
fimull
inc
inc
loopne
jo
adc
mov
int3
cmpsb
inc
pop
outsl
mov
iret
leave
dec
jbe
sbb
push
xchg
xchg
rolb
imul
jo
je
xor
loope
int
jae
mov
adc
adc
pop
push
pushf
inc
xchg
sahf
loope
leave
or
std
popf
xchg
bnd
testb
xchg
inc
xor
cmp
mov
push
popf
pop
xor
and
cwtl
add
jbe
adc
imul
mov
xchg
adc
jge
popa
daa
or
popa
data16
push
mov
cmpsb
pop
movsl
sbb
push
sahf
movsb
xor
lock
inc
cmc
cmp
in
repnz
jns
and
imul
arpl
lahf
push
add
icebp
lret
ds
mov
test
push
movsl
xor
cli
notb
lret
xchg
popl
inc
fs
and
sub
adc
and
xor
iret
jle
dec
pop
fidivrs
sbb
push
rolb
cbtw
push
outsb
add
mov
push
fists
cmp
sbb
xchg
scas
dec
sbb
jbe
mov
mov
pop
icebp
sbbb
ljmp
adc
testb
sbb
cli
add
jle
sti
popa
sbb
imul
out
sarl
lock
push
jge
sarl
mov
and
add
aas
adc
stos
fmuls
and
push
jge
outsl
nop
in
lcall
and
loopne
movl
aaa
pop
dec
pop
ljmp
mov
ret
shlb
push
sbb
lret
inc
fldcw
fildll
xchg
das
or
push
pop
sbb
pop
lock
inc
inc
push
enter
pop
jl
sub
sub
int
lret
stos
addr16
mov
pop
out
stos
and
aaa
cld
and
mov
mov
dec
dec
and
cli
mov
mov
aaa
arpl
sbb
mov
add
test
notb
adc
cli
mov
push
clc
mov
sub
test
xchg
xor
mov
bound
in
sbb
mov
loope
xchg
inc
mov
jne
pushf
testl
fidivrs
add
or
mov
cmp
cmp
dec
int
sub
xchg
pop
sti
add
test
dec
out
scas
movsl
sbb
push
mov
cwtl
subb
mov
cmpsb
jae
push
lret
add
sar
ss
scas
inc
rcrl
mov
xor
stos
cld
inc
cmpsl
popa
in
pop
out
sbb
shrl
hlt
call
push
and
mov
cs
mov
inc
out
xchg
dec
pop
push
repz
mov
imul
out
cmp
ret
les
jp
pop
mov
mov
and
and
mov
pop
fadds
push
imul
inc
mov
mov
daa
cmpsl
add
inc
sbb
lcall
xchg
pop
fwait
xchg
repnz
sbb
std
into
insl
dec
push
add
xchg
pushf
movsl
fildl
push
icebp
test
add
and
out
loope
jp
lret
mov
dec
movsl
pop
testb
sbb
imul
shrb
xorb
xchg
sub
jl
and
jecxz
iret
jo
and
pmaddwd
icebp
inc
push
add
add
xchg
fsubl
es
mov
ja
dec
cli
dec
scas
lods
push
daa
push
clc
sbb
js
les
mov
pushf
inc
mov
sahf
out
adc
ljmp
dec
movsb
push
jl
fildl
stos
into
jmp
test
outsl
out
mov
mov
leave
jl
gs
in
push
mov
hlt
push
jmp
rolb
int
push
aaa
mov
std
and
subl
jge
jnp
stos
int
stos
mov
out
sbb
mov
sbb
das
pop
jnp
daa
sarl
cmp
and
adc
or
mov
test
xlat
testb
insb
jmp
xchg
push
mov
test
push
shlb
movsl
jb
aaa
lahf
adc
pop
ss
jns
dec
inc
dec
enter
lretw
fidivrl
xchg
push
repnz
mov
fimull
jns
xchg
cmc
sub
lcall
pop
pop
lret
out
xchg
xchg
lods
popf
lock
ret
mov
out
fdivrl
aaa
push
fidivrl
loopne
mul
jo
push
pop
sbb
sbb
xor
xorb
inc
roll
dec
shrb
push
xor
jp
mov
out
inc
enter
cmp
mov
inc
push
ljmp
jg
fistps
jno
rcrb
stc
and
or
or
or
roll
jo
cltd
pop
cmc
xchg
out
xchg
or
mov
push
push
pop
lods
xchg
ret
in
push
inc
arpl
js
push
jno
or
cmp
outsl
pop
inc
sub
lods
pop
daa
mov
cwtl
daa
aas
out
and
lret
iret
push
dec
in
pop
outsb
daa
mov
cmp
daa
rcr
and
push
test
pop
out
mov
jo
push
popa
xor
dec
insl
mov
stos
mov
incb
shll
imul
and
fistl
push
inc
pop
push
mov
cld
ja
std
shrb
cmp
data16
xchg
out
push
int
fisubrl
mov
push
les
adc
sbb
inc
xchg
icebp
fcoms
mov
out
sti
sub
test
or
filds
cs
pop
jno
and
sti
push
sbb
fisttpll
mov
mov
pusha
or
lret
push
ja
adc
test
sub
idivb
dec
mov
or
bound
movsb
in
adc
jle
xchg
push
or
and
fstl
sahf
fcomi
mov
call
lds
inc
mov
jb
repz
jne
les
push
xchg
push
sub
mov
sub
or
jp
bound
test
fsincos
xchg
push
cmp
jecxz
dec
inc
stos
xor
rclb
pop
pop
cmp
mov
and
int
data16
mov
nop
inc
fsubl
pop
fistl
and
inc
mov
in
jno
and
inc
or
pop
lds
int
enter
xlat
in
in
aam
and
push
mov
inc
mov
aas
ds
push
icebp
ss
inc
repnz
addl
negl
jle
lods
es
mov
out
call
lea
mov
adc
stos
jb
int
mov
ja
std
xchg
inc
es
negl
andb
xor
inc
and
hlt
hlt
cmp
movsb
mov
sti
fs
or
inc
in
or
imul
fwait
movsl
xchg
cltd
cld
int3
mov
add
cmpl
mov
fdivp
divb
xor
int3
aam
add
out
add
ljmp
es
dec
push
flds
pop
aad
adc
pop
mov
inc
mov
mov
inc
add
cltd
pusha
push
push
xor
adc
and
enter
test
sti
test
ds
in
cmp
jbe
cmc
gs
inc
out
push
or
mov
iret
and
sbb
jle
sti
mov
dec
pop
pop
loop
adc
mov
lcall
pop
xor
fadd
cmp
lahf
adc
movsl
pop
rcrl
or
lds
adc
cld
rcrb
inc
nop
scas
cmp
inc
pop
inc
and
lret
lock
aad
add
and
cmp
mov
cmp
cmc
std
mov
inc
cmpsl
scas
ja
bound
cli
mov
shll
roll
mov
in
dec
push
inc
xor
movsl
lods
sbb
shrb
hlt
add
xor
leave
jmp
in
push
and
test
nop
vpcmpeqb
and
mov
std
ljmp
push
jbe
or
mov
jge
cmpsl
das
lods
xor
jp
dec
add
jae
jp
sbbl
cld
cs
stos
mov
adc
mov
rcrb
lods
sbb
sub
mov
call
repnz
add
insb
addr16
mov
fsubs
stos
jb
lahf
mov
inc
clc
mov
mov
out
sahf
xchg
push
shll
scas
push
outsb
nop
adc
aaa
adc
mov
jge
xchg
push
adc
inc
in
pop
fcoms
sbb
push
push
js
clc
movsb
xchg
and
lret
dec
jg
pop
data16
insl
jns
mov
lret
mov
loopnew
fwait
push
sahf
cmc
outsb
dec
jmp
or
bound
mov
scas
inc
mov
fs
xchg
out
cmpsb
imul
orl
mov
mov
fistpll
pop
lret
les
frstor
mov
inc
mov
mov
sub
push
ret
jns
cwtl
cmp
xchg
bound
sub
ret
jnp
test
out
xchg
scas
pusha
mov
mov
cwtl
xchg
cmp
ljmp
mov
push
mov
jne
loopew
sbb
aad
adc
fs
xor
sub
xor
sti
mov
jmp
andb
push
dec
inc
cmpsl
inc
dec
push
inc
inc
sub
lahf
and
pop
mov
mov
jns
or
mov
xor
dec
sahf
xor
test
pop
int3
iret
or
add
pop
xchg
and
jge
ret
push
fdivr
in
lock
jle
inc
lds
les
and
inc
jl
std
dec
ja
cmp
cli
clc
inc
inc
pop
pop
and
pop
pop
das
xchg
lea
mov
add
adc
dec
mov
add
in
fimull
mov
jmp
addr16
hlt
fs
sub
push
pop
mov
cmp
adc
jmp
movsb
in
jns
and
cmp
cli
push
notb
inc
mov
stc
cmp
jne
cmp
cmpsl
jno
mov
mov
or
and
into
lcall
mov
ljmp
jp
dec
insl
push
roll
lds
xor
lds
push
jno
sbb
adc
push
dec
popf
push
je
pop
ss
lods
and
xchg
clc
les
dec
loop
bound
int3
out
or
and
movsl
outsb
dec
pop
int
mulb
fmull
test
xchg
sub
test
adc
ja
incl
sub
and
je
jo
test
scas
insb
daa
fs
jg
imul
dec
std
std
in
dec
dec
out
pop
aad
call
pusha
mov
lret
cmp
into
sub
xchg
xor
gs
aam
mov
or
lahf
cwtl
push
mov
add
xchg
in
nop
ja
sbb
jle
or
aas
fucomip
fadds
ret
jns
mov
mull
js
jo
das
lret
and
adc
sub
xor
or
push
push
mov
imul
adc
fucom
pushl
in
mov
shll
pushf
mov
jo
cli
lods
pop
lock
push
popf
popa
inc
jae
fwait
mov
mov
movsb
xchg
sub
ds
jecxz
cltd
enter
call
adcb
sti
in
push
mov
jmp
lahf
pop
cmc
fisubs
xchg
and
out
rolb
iret
lods
imul
out
movsl
lahf
fldt
test
push
arpl
lahf
cs
mov
sub
xchg
inc
inc
stos
fidivl
dec
adc
dec
sbb
xchg
sub
push
cld
std
jp
int3
movsl
jne
imul
into
jae
cmp
cmp
outsl
into
add
imul
mov
or
insb
sti
pop
pop
inc
outsl
sar
adc
dec
addr16
insl
out
sub
dec
repnz
sbb
jne
xchg
cmp
mov
sub
lds
xor
popf
mov
dec
mov
fsubp
jmp
fwait
mov
pop
fld
xor
or
mov
cmpl
sbb
cmp
mov
mov
xchg
enter
mov
aam
loop
and
shlb
pop
mov
imull
daa
mov
inc
or
imul
add
ja
xor
pop
aad
aas
mov
int3
sbb
dec
int
xlat
cmpsl
pushf
push
xchg
or
add
hlt
pop
cvtdq2ps
ds
pop
rol
inc
js
pop
push
xchg
inc
test
push
xchg
scas
mov
push
push
and
xchg
shlb
jecxz
cmpsb
mov
repnz
xor
insb
dec
stos
mov
and
jnp
xor
push
pop
pop
adc
idivl
jns
or
adcl
insb
aam
sbb
hlt
pop
loop
add
sti
rcr
or
out
or
fcompl
mov
xchg
aad
dec
sbb
mov
push
loopne
int
adc
in
cltd
push
adc
cmp
cmpsl
andb
iret
mov
ja
inc
dec
sbb
or
loope
add
je
arpl
clc
mov
bound
loope
and
sbb
pushf
push
xchg
in
js
mov
data16
das
cmpl
xor
jb
jge
inc
sub
subl
fnstenv
or
mov
mov
dec
xchg
loope
push
bound
fcom
xchg
lods
mov
fwait
dec
push
mov
cmpsl
mov
imul
adc
mov
add
adc
jecxz
fisubs
sub
scas
fists
hlt
in
icebp
adc
xor
and
inc
jl
gs
negb
mov
dec
cmpsb
lds
inc
mov
jns
push
mov
rclb
mov
push
or
sub
loopne
cmp
mov
leave
leave
repz
nop
pop
fidivrl
cmp
std
mov
inc
add
xor
add
dec
loopne
cltd
push
ljmp
jbe
lds
adc
test
ret
insl
andb
push
ss
int3
pop
inc
lahf
ret
daa
dec
rcrl
inc
test
fistpl
arpl
or
filds
or
inc
nop
fs
int3
push
dec
mov
lcall
xchg
stos
lahf
lds
sub
in
jp
sbb
outsl
jne
cld
fsubrp
into
insl
mov
dec
mov
or
rorb
jp
cmpsb
jno
cltd
pop
popa
jnp
sti
and
cltd
jecxz
pop
adc
dec
enter
clc
sub
or
rorl
push
loope
dec
jne
into
movb
cmp
insb
cmpsl
setp
pop
std
icebp
push
dec
xchg
int
pop
fstl
ret
inc
inc
mov
or
pusha
dec
loope
imul
addr16
ljmp
outsl
pushf
xchg
stos
jne
outsl
rolb
jle
fisubrs
adc
mov
or
fwait
pop
mov
cwtl
mov
add
xor
enter
and
shll
test
cmp
movsl
dec
or
cli
loopne
and
pusha
adc
mov
lds
in
pop
pop
popa
fcom
mov
lods
movsl
mov
ret
mov
push
push
cmpsl
pop
fists
or
cmp
stos
cli
mov
mov
add
xor
and
jae
sub
das
add
rclb
mov
int
pop
xchg
mov
and
ss
leave
pop
push
cli
dec
push
adc
inc
cmp
cld
mov
scas
mov
lcall
cmovge
shlb
pop
in
and
insb
xchg
push
mov
aad
bound
mov
pop
mov
stc
inc
pop
sbb
les
subb
pop
insl
fs
inc
addr16
dec
xchg
aas
push
cs
mov
inc
in
dec
stos
addr16
adc
jg
inc
xchg
mov
jg
arpl
mov
pop
mov
inc
cmp
add
mov
mov
into
adc
sub
popf
mov
mov
add
test
loope
ss
popa
or
and
xor
dec
and
in
aaa
and
jns
enter
add
mov
inc
cmp
mov
je
jp
mov
popa
loopne
xor
cmp
push
cld
sub
fdivs
das
mov
and
jb
cmp
mov
sarb
sub
into
outsl
lahf
fcoms
add
jmp
ss
xchg
push
popl
addr16
call
aad
mov
push
movsl
fsubl
sarb
lret
and
cmp
fmul
daa
fldln2
int
pop
mov
stc
test
das
xchg
pop
jle
stos
xor
adc
xchg
and
push
inc
pop
das
sbb
lret
stos
push
mov
stos
jno
mov
pushf
jae
jo
lahf
lods
ss
sub
jle
insb
scas
pop
icebp
adc
mov
add
xchg
mov
adc
mov
hlt
out
push
ret
or
in
push
outsl
mov
sbb
test
fcomps
dec
cmpl
popf
out
or
jb
cmp
es
fsubp
cli
repz
repnz
out
icebp
lods
jns
mov
addr16
push
insl
mov
inc
dec
clc
pop
and
push
jo
xor
sbb
inc
ss
lock
stos
jg
and
ja
out
arpl
pop
cmp
movsl
mov
es
jl
sbbl
mov
ss
imul
jb
add
mov
mov
adc
scas
cmpsl
stos
int
sub
mov
ds
fisttpll
fwait
aaa
iret
test
dec
xchg
shl
push
cmp
cltd
and
inc
ret
clc
xchg
pop
cmp
push
shlb
ret
mov
in
loopne
popf
inc
mov
in
ror
and
sbb
adc
xor
stc
insb
or
push
out
out
dec
repz
fistpll
cmpsb
and
jmp
popf
jo
jb
loopne
push
fwait
or
push
sti
in
push
sub
pop
dec
rcll
shrb
fcmovbe
or
or
cmp
mov
mov
inc
pop
jmp
pop
push
mov
cmpsb
cld
pop
repz
scas
mov
stos
jne
cmp
or
xchg
or
hlt
xor
stos
addw
jb
jl
or
mov
lea
xchg
aaa
icebp
pop
mov
pop
push
xchg
test
out
lods
fmulp
pop
lret
dec
sbb
leave
stc
std
mov
pop
pop
xor
aad
lret
pusha
bound
sub
mov
lcall
js
aaa
pop
or
sarl
cmp
jae
stc
dec
int3
bnd
push
cmp
lcall
inc
rcrl
lret
stc
int3
push
pusha
add
dec
jne
sub
inc
pop
adc
sub
dec
adc
mov
orb
push
or
repnz
ss
inc
inc
cmp
sarb
test
or
add
lods
inc
pop
aas
roll
data16
or
sbb
mov
aad
cld
or
dec
maxps
push
enter
mov
mov
call
dec
imul
pop
xchg
inc
fstps
ret
inc
enter
cli
dec
adc
add
mov
insl
or
push
pop
add
xlat
ret
je
sub
aaa
out
sub
xchg
dec
mov
cmp
sub
into
loope
sub
mov
inc
mov
adc
fs
mov
bound
enter
popf
jno
and
pop
and
inc
cmp
cmp
cmp
add
imul
mov
adc
test
push
or
rorb
outsb
sub
jmp
cmpsl
sti
imul
sbb
rclb
push
dec
mov
pushf
sahf
or
sub
pop
test
push
fsts
or
arpl
sbb
jae
imul
cmp
sub
adc
pop
push
shll
push
and
int3
repnz
jle
mov
loope
mov
push
ficoml
inc
and
je
loopne
fcoml
and
ss
or
adc
pop
arpl
loope
nop
ss
rol
dec
lahf
lcall
repz
jnp
pusha
ss
sub
cmp
mov
xchg
gs
push
sbb
maskmovq
testl
pop
mov
push
lar
dec
arpl
cmpsb
mov
std
mov
test
stc
mov
jne
daa
clc
repz
push
hlt
sub
cmp
int3
inc
xlat
aad
sti
sahf
mov
jb
or
repnz
mov
rolb
sub
jecxz
sbb
aaa
addr16
mov
mov
rorb
loopne
cmp
sbb
inc
movsl
lods
lods
cmp
add
mov
cmp
xchg
movsb
add
cmp
pop
mov
push
outsb
test
xchg
lahf
int
lret
jmp
aad
and
loop
push
faddp
into
mov
cmpl
jo
cmpsl
push
xor
jbe
cltd
idiv
jle,pn
mov
jp
xchg
jecxz
mov
jo
mov
jmp
pop
lods
dec
sub
or
fnstcw
popf
fsts
movsl
mov
shlb
in
and
pop
add
mov
daa
xchg
ret
xchg
inc
lahf
push
lods
lcall
xchg
lahf
mov
xchg
repz
lds
xchg
out
push
xor
push
mov
in
cwtl
mov
push
clc
imul
mov
jo
mov
xchg
push
bound
mov
jecxz
hlt
daa
sub
add
outsb
push
mov
je
cmp
push
adc
and
push
mov
in
mov
xchg
inc
insl
sti
mov
mov
dec
clc
lock
in
mov
pop
mov
fldt
js
mov
mov
fidivrs
dec
imul
iret
js
mov
jb
add
pop
xor
stos
leave
notl
cmp
subb
shlb
mov
or
fwait
cli
inc
ret
lock
push
pop
mov
push
jge
cmp
push
cwtl
bnd
mov
loope
pop
add
adc
push
inc
jne
int
cwtl
mov
and
mov
gs
fidivl
cmp
xor
inc
in
aam
inc
pushf
ljmp
sub
or
pop
mov
or
lods
jbe
sub
dec
jae
inc
aaa
std
cmpb
pop
push
ss
stos
mov
out
int
adc
adc
cmp
stc
sub
inc
pop
sub
sbb
push
xlat
cmp
mov
icebp
pop
cmpsb
arpl
pushf
and
test
cmpsl
subl
xor
ljmp
lock
lret
push
nop
sub
add
arpl
jnp
jecxz
in
cmp
std
push
pop
je
mov
movups
popf
insl
ljmp
push
sub
insl
sub
insb
xchg
pushf
cld
xor
stc
rcl
movsb
lds
clc
pop
jne
push
outsl
movl
lock
and
gs
loope
sti
dec
dec
inc
or
jge
inc
call
or
dec
push
ljmp
adc
add
adc
dec
leave
lods
cmpsb
xor
popf
xchg
or
mov
test
pop
xchg
adc
and
push
insb
push
inc
add
test
popa
cld
dec
mov
int3
jle
and
pop
xchg
in
xchg
mov
mov
jge
cmp
push
mov
daa
in
push
mov
xor
es
inc
repnz
mov
sbb
les
stos
push
xor
inc
adc
popf
sarb
pop
jl
mov
or
jae
xlat
les
daa
ljmp
mov
outsb
push
in
pop
add
xchg
lock
and
dec
loop
inc
xchg
mov
dec
sub
xchg
or
jl
cmp
pop
inc
out
ret
hlt
std
push
jnp
and
in
test
mov
test
test
inc
ljmp
movsl
lret
xchg
ds
and
push
mov
inc
sbb
dec
stos
inc
pop
jle
hlt
sub
out
jmp
cld
mov
jbe
pop
add
les
fidivs
cmpsb
movsl
mov
and
ret
out
test
sbb
xor
jl
fs
inc
fldt
mov
out
movsl
out
rcl
inc
dec
call
jb
fnstenv
arpl
xor
adc
adc
gs
xlat
inc
adc
in
xor
icebp
dec
sbb
in
shl
pop
or
pop
adc
dec
aaa
sub
pop
mov
clc
jnp
stc
xchg
mov
inc
and
cmpsb
out
and
in
or
into
mov
cs
scas
mov
mov
stos
lods
xor
cmc
mov
mov
and
add
pop
adc
insl
jg
or
push
jle
adc
mov
add
inc
xchg
mov
imul
ret
mov
or
jl
movsb
ss
outsl
rorl
jb
fnstenv
pop
sbb
push
shl
adc
jae
lret
jne
loop
pop
jne
dec
sub
jo
in
jg
stc
xorb
call
hlt
mov
xor
out
fsubr
jecxz
sbb
push
mov
clc
mov
ja
movsl
insb
addr16
fsubl
and
adc
mov
adc
push
cmp
inc
jmp
pop
mov
xor
out
cmc
push
iret
inc
shlb
sbb
cmc
pusha
jns
mov
sub
gs
rolb
dec
es
mov
xor
inc
outsb
bound
mov
fcompl
shr
aaa
jmp
sub
dec
in
mov
jmp
inc
dec
push
leave
aad
and
scas
cmc
test
das
xchg
pop
pushf
sbb
jno
xor
ret
das
dec
xlat
fwait
push
fldl
das
inc
loopne
ret
inc
aad
mov
push
fnstsw
cmp
cltd
push
push
pop
inc
mov
push
inc
pop
ljmp
jb
popa
ljmp
jb
sub
das
xor
insl
inc
mov
sub
nop
dec
dec
nop
imul
xchg
jmp
out
dec
jp
mov
call
movsb
mov
ss
push
xor
or
jmp
dec
sbbb
adc
xchg
mov
cld
mov
xchg
int3
push
fcompp
ja
push
lock
xor
pushf
xorb
push
icebp
sbb
test
jbe
and
cmp
mov
dec
clc
sub
jnp
mov
jecxz
popf
test
adc
or
mov
add
dec
jns
out
lahf
std
cmovno
dec
lock
int
out
sub
pop
mov
sub
mov
sbb
cmp
xlat
clc
mov
out
mov
jnp
aas
inc
les
mov
jo
stc
pop
dec
xor
mov
iret
jo
sub
popf
and
and
cwtl
ljmp
dec
in
adc
addr16
and
roll
sbb
sub
add
pmulhuw
movsl
and
sti
fmul
jae
bnd
stos
call
pop
cs
cmp
rcll
test
les
or
add
mov
cmp
pop
imul
inc
inc
das
mov
push
cmpsl
clc
xor
fmul
test
hlt
imul
xor
xchg
mov
jae
xlat
mov
stos
jg
pop
xchg
cli
fmul
cmc
mov
and
adc
jg
push
and
mov
or
jmp
xchg
cmp
fsubp
dec
ljmp
adc
mov
add
lcall
outsb
pop
inc
sub
pop
inc
ret
mov
sarb
loopne
lret
lahf
bnd
fcoml
mov
dec
mov
sbb
mov
loope
inc
and
push
idivl
adc
insl
in
pop
jns
add
imul
stc
mov
imul
xchg
psubusw
push
fmull
out
out
add
das
push
add
cltd
pop
fstpl
push
sub
idivb
fnop
pop
sbb
push
das
jbe
stc
aas
add
lcall
test
jns
pop
pop
push
push
sub
cmp
xchg
inc
add
test
xor
jne
push
subl
cltd
cmp
aaa
dec
push
inc
test
push
and
add
pop
or
xor
aas
fcompl
sbb
mov
in
jg
inc
xor
push
cmp
mov
daa
out
cs
push
jno
imul
jg
cld
sbb
sbb
jmp
pop
pushf
or
rclb
mov
mov
sub
jno
call
cmpsb
outsb
ror
mov
nop
push
push
jl
xlat
vpsubd
in
sti
insb
ffree
lcall
inc
adc
daa
in
mov
cmp
monitorx
arpl
and
sub
ss
mov
popa
lods
and
sub
jp
jl
jge
lds
and
dec
and
cmp
cld
dec
mov
stos
fstps
adc
cld
out
push
filds
mov
jnp
pop
vmovd
add
outsb
loope
xorl
ret
push
sbb
inc
inc
sub
jb
adc
jmp
pushf
cmp
dec
lahf
sbb
sub
push
daa
fldcw
or
jl
or
jae
pop
bound
rclb
cmp
iret
inc
shll
lahf
dec
xor
call
push
xor
mov
push
xor
loop
js
mov
jae
movsl
shrl
sub
adc
fcmovnbe
enter
pop
ja
cld
movsb
xchg
mov
xchg
rcr
or
xchg
push
xor
loope
xchg
enter
dec
out
lret
dec
dec
fdivrs
mov
lock
sbb
subl
aaa
lods
repnz
mov
popf
xchg
dec
add
push
or
mov
xchg
sbb
mov
in
cmpsl
pop
jo
jge
int
mov
jge
xchg
push
cmpps
jecxz
adc
hlt
adc
ds
push
xor
in
daa
cs
cmp
push
loop
push
mov
jo
outsb
adc
sti
mulb
mov
xor
jo
mov
mov
jno
mov
sar
xor
js
mov
sbb
mov
test
jbe
mov
jns
xor
adc
xchg
mov
std
mov
mov
mov
mov
sahf
fwait
mov
out
mov
pop
add
jecxz
mov
cltd
cmp
ret
enter
fsts
daa
in
cld
dec
idivb
call
jo
repnz
push
dec
pop
pop
leave
dec
aas
test
test
test
fwait
inc
jle
aas
mov
mov
mov
hlt
jge
sub
or
stc
fwait
push
scas
es
mov
aaa
sub
mov
into
xchg
iret
jns
aas
adc
dec
push
jae
sbb
in
test
outsb
ret
packsswb
lods
fs
sub
add
movsl
nop
lods
cmp
cmp
jno
mov
inc
sbb
mov
je
or
or
xchg
mov
mov
or
bound
inc
sbb
sub
mov
xchg
lcall
mov
xor
adc
fidivs
lcall
dec
sub
dec
sub
xor
not
jno
cli
adc
xchg
inc
lods
and
fwait
mov
aad
ss
outsb
movsb
std
xor
xor
sub
lret
or
or
fwait
pop
ret
jg
dec
repz
push
test
inc
clc
cmp
cmp
mulb
pushf
dec
fucom
sbb
jo
movsb
jne
fwait
sbb
xchg
sbb
out
mov
push
push
add
push
dec
mov
sub
cmp
adc
xor
jb
push
leave
mov
mov
push
in
repnz
xlat
mov
jns
mov
inc
xlat
loope
mov
ljmp
aaa
dec
hlt
cmpsl
pushf
jmp
jb
jecxz
inc
cmpb
pop
fcompl
std
or
lea
hlt
push
cmp
test
pushf
and
push
sbb
mull
mov
dec
jmp
nop
or
inc
sti
ja
adc
adc
adc
sbbb
popf
push
fwait
in
sub
mov
pop
push
sarl
sbb
xlat
cmpsl
fbld
outsl
lds
cmpsb
neg
movsb
and
insl
jno
dec
mov
push
cmp
aaa
test
subb
push
leave
pop
aam
add
add
iret
dec
cmpsb
jl
aad
imul
add
mov
mov
xchg
xor
filds
test
sub
clc
aam
jae
pop
jp
rcl
push
aam
mov
adc
adc
stos
ret
sub
pop
mov
xchg
jmp
mov
xchg
lcall
ret
testl
sub
es
pop
pop
insb
adc
imul
sbb
loopne
int3
push
xor
sub
iret
push
cmpsl
mov
insb
sbb
les
scas
loopne
adc
mov
mov
pop
mov
xchg
sub
das
daa
jmp
int
sub
cwtl
andl
sub
clc
fcoms
out
rorl
pushf
inc
dec
mov
jmp
in
and
lretw
pop
aaa
cmpsl
xor
dec
pop
clc
mov
imul
jbe
inc
push
js
push
xor
cmp
ss
adc
jbe
and
jae
mov
outsb
add
lods
cmp
rolb
int3
mov
in
jecxz
mov
mov
cs
and
sub
fwait
dec
mov
loopne
ja
mov
add
cmp
add
lock
cmp
sub
mov
test
xor
sbb
jo
xor
call
bound
loope
mov
or
outsb
xor
popa
inc
movsl
mov
lcall
jbe
inc
rcr
dec
add
push
push
in
inc
mov
add
sbb
je
sub
sahf
bound
jl
std
inc
push
pusha
cmp
jb
bound
in
inc
hlt
inc
jle
dec
and
adc
jnp
aam
insl
xchg
sbb
in
testb
subb
enter
test
and
jno
popf
sarb
movsl
xchg
cmpsb
jne
push
subl
sbb
je
xchg
inc
cwtl
ds
pop
jne
cmp
sbb
xor
ret
lret
ds
sbb
mov
pop
add
mov
adc
daa
insl
js
stos
insl
sbb
pop
and
aad
in
xorb
mov
mov
lock
ror
loop
pop
movsb
add
sbb
psubusw
add
inc
daa
inc
pop
loop
test
scas
hlt
jae
sub
dec
dec
pop
ss
jae
push
arpl
push
cltd
add
mov
jbe
loopne
push
ret
pop
or
out
test
mov
pop
ror
clc
push
cmp
push
arpl
rclb
ljmp
test
ss
cmpsl
sub
push
call
push
mov
mov
push
sbb
out
movsb
sbb
jl
mov
adc
rclb
mov
icebp
mov
dec
push
xor
mov
mov
push
jmp
cs
nop
cli
into
lods
imul
pop
add
ret
fnstsw
popf
inc
ljmp
into
repnz
push
add
or
call
xchg
aaa
inc
in
addb
mov
fwait
mov
dec
adc
rclb
add
mov
dec
loope
loope
outsl
mov
inc
filds
push
adc
jbe
daa
mov
push
fdiv
push
out
mov
pushf
stos
adc
dec
pop
aad
xchg
xor
jo
mov
fstp
int
xor
enter
push
testl
test
push
popf
xor
fcoml
je
cmp
scas
mov
add
scas
aad
test
les
or
aaa
fisubl
and
dec
iret
add
aad
sti
xchg
jbe
push
test
sbb
aad
dec
in
test
sub
cs
sub
cmpsl
std
pop
mov
jge
push
add
xor
fsts
fmul
push
dec
and
lahf
je
inc
shrl
push
add
sub
inc
mov
mov
cmp
lock
orb
or
pusha
xor
cmp
shlb
inc
dec
lahf
mov
dec
jne
sub
mov
and
jl
or
gs
rol
pop
or
sub
jbe
dec
dec
cmp
jae
push
dec
shl
mov
jnp
dec
dec
aad
sub
movsb
jmp
xchg
not
push
or
or
iret
cwtl
sub
inc
test
dec
mov
jnp
jbe
es
jb
aas
pop
sbb
mov
cli
pushw
xchg
movsl
sbb
jle
mov
xor
mov
test
sub
imul
fldcw
icebp
out
xor
fs
fists
sub
sbb
popf
mov
mov
cmp
mov
push
push
inc
stc
outsl
mov
imul
fidivs
pop
stc
movl
xor
add
dec
jo
es
sbb
stc
pop
jno
add
jo
push
addr16
out
push
inc
iret
pusha
cmp
push
xchg
lcall
pop
add
cli
pop
mov
lcall
fcmovbe
sahf
jne
or
movsb
adc
jl
push
push
sbb
fisttpll
push
sbb
fdivs
repnz
aad
cmpsb
int
fs
lret
push
xchg
cmp
lret
jg
jnp
icebp
pop
out
add
jbe
xor
es
xor
pop
mov
movsl
push
ss
add
pop
inc
mull
aaa
aad
mov
adc
push
sahf
lahf
dec
mov
dec
push
imull
bswap
aas
jno
add
incl
push
lret
lcall
addb
mov
or
cwtl
shll
out
mov
dec
adc
call
sbb
mov
es
cmp
xor
out
or
pop
sbb
pop
or
aaa
mov
cli
mov
xchg
out
idivl
aad
adc
pop
nop
popa
shlb
cmp
push
leave
pop
push
adc
xchg
pop
and
dec
add
movsl
adc
fwait
adcl
mov
addl
sbb
fs
leave
dec
adc
inc
add
bound
stc
mov
stos
gs
mov
in
out
lret
sbb
pop
and
fisttpll
cmp
stc
push
dec
aam
inc
pusha
dec
not
xor
shrb
jge
push
xchg
test
iret
es
push
add
mov
mov
loopne
dec
sbb
push
loop
fcmovnu
dec
cmp
mov
bound
int
pop
mov
aad
out
mov
mov
flds
repnz
sub
out
xor
mov
lret
out
xor
mov
mov
movsl
mov
xchg
sbb
scas
add
push
jp
addb
or
pop
push
push
movsl
je
cwtl
xor
sahf
cld
mov
psrld
inc
jbe
add
int3
pop
xor
mov
pop
and
jae
push
in
int3
ja
jo
adc
ror
sub
or
je
lds
mov
movb
xchg
addl
xor
cld
sub
push
addb
insl
jno
repz
mov
je
fstps
imul
dec
shl
clc
mov
cs
test
les
fs
jne
clc
mov
test
pop
shl
mov
dec
mov
cmpsb
insb
sub
sub
stos
outsl
xorb
jb
fcmovbe
pop
cltd
fwait
arpl
pop
inc
cli
gs
mov
int
scas
adc
xor
filds
push
mov
fidivl
sub
movsl
mov
inc
sbb
pop
or
out
sub
and
lods
sub
and
movsb
xor
ret
cwtl
cli
out
pushf
and
leave
aad
ftst
dec
mov
lods
cli
dec
mov
das
daa
lret
test
enter
dec
jg
xlat
push
or
or
inc
and
sarl
jmp
in
mov
mov
enter
int3
xorb
popf
cmp
lock
mov
mulb
cli
lock
xor
or
test
push
stos
jmp
cmc
mov
cld
mov
cmc
mov
lcall
cli
jle
adcb
mov
mov
pusha
lods
dec
out
dec
enter
lock
push
push
sarb
dec
inc
or
mov
xchg
aas
ret
xor
and
andb
mov
jp
push
repz
cli
sbb
in
cmp
sub
leave
addr16
xchg
pop
sub
orb
mov
mov
xchg
add
pop
mov
and
subb
mov
aam
mov
pop
sbb
cmpsb
es
sub
shrb
pop
pop
sub
rcrl
inc
fsts
out
mov
cmc
stos
sbb
jmp
mov
pop
push
fildl
cli
je
aad
mov
dec
inc
push
cltd
mov
in
cmp
push
loopne
pop
lret
push
cmp
jmp
xor
loop
iret
clc
sbb
push
sub
sbb
call
mov
xchg
mov
sarb
pushf
insb
arpl
cmp
iret
sub
sbb
mov
test
cli
and
sbb
cmp
sbb
inc
sti
es
mov
jne
lods
xchg
stc
cmp
out
stos
or
fcmovu
mov
jo
insl
cmp
mov
inc
out
push
inc
lret
adc
or
fsubs
loop
orb
into
pusha
outsb
rol
jg
pop
stos
xchg
movsl
pop
mov
cmc
sbb
pop
mov
addb
cmpsl
outsl
push
jmp
neg
and
add
or
cmp
mov
ret
rclb
nop
ljmp
fiaddl
leave
or
cltd
fisubrs
stc
pop
in
stc
xor
jns
cwtl
daa
pop
and
mov
out
sub
repz
or
xlat
testb
adc
xchg
mov
push
xor
pop
cmpsl
sub
dec
movsb
adcb
fistps
cmp
jg
insb
in
mov
mov
loopne
ss
cli
adc
push
pop
mov
jns
aas
jmp
ss
adcb
push
or
sarl
or
iret
or
mov
pop
xchg
sarl
fdivr
cltd
xlat
outsl
ja
lcall
push
mov
cmpsl
sbb
or
dec
mov
lcall
cs
cmpsb
cmp
jmp
mov
fsubs
add
xchg
mov
xor
call
jg
mov
sbb
inc
push
test
lds
xor
fimuls
clc
and
sbb
js
pop
xchg
je
cmp
inc
inc
faddl
jle
scas
nop
sbb
jo
and
or
out
push
push
mov
mov
sub
adc
inc
sbb
lret
mov
shrl
repz
jle
je
or
mov
add
shlb
negl
std
aad
mov
cmpsb
mov
add
push
cwtl
inc
js
clc
popf
add
adc
int
pop
mov
sahf
pop
fmuls
popa
sbb
jno
inc
add
hlt
popf
xor
inc
repz
or
out
in
testl
cmp
lea
outsl
lods
push
mov
int
cmp
sbb
int
pop
adc
jle
jmp
mov
adc
sbb
jmp
outsl
cli
or
loop
push
mov
inc
pop
int3
mull
repz
push
shr
loopne
or
jp
dec
push
std
push
xor
pop
std
sbb
or
clc
or
sub
dec
call
cmp
and
xorl
jmp
push
arpl
push
cmp
dec
imull
cmp
jp
inc
and
data16
cmp
xor
push
int3
shl
and
mov
ss
cld
int
int3
pop
adcl
test
psubb
jmp
aam
xchg
mov
mov
mov
adcb
int3
movsb
decl
adc
push
or
mov
mov
mov
push
enterw
sahf
xchg
inc
xchg
filds
push
adcb
fstl
pop
dec
mov
cmc
jbe
and
aam
imul
or
sbb
lea
loop
pop
cmp
push
test
mov
add
push
test
dec
jno
aad
fcomps
jg
cmp
xchg
dec
hlt
in
sar
test
and
jle
cs
xchg
ss
mov
or
out
inc
mov
inc
mov
mov
aas
lahf
scas
pop
das
cmpsb
mov
cli
into
sbb
dec
test
xorl
mov
mov
add
or
pop
mov
and
cmp
dec
cmp
adc
scas
std
jmp
mov
inc
jmp
cmp
cmpsb
add
je
xchg
leave
cmp
out
call
jae
jo
dec
dec
or
fisubs
cmc
mov
test
adc
mov
pop
mov
es
es
arpl
jl
adc
mov
sub
ss
movsl
mov
sbb
pop
cmp
adc
mov
xor
and
loope
js,pn
add
std
xor
iret
cmp
mov
insb
mov
bound
std
stos
jl
cmp
fxch
ds
sarb
jmp
fstps
mov
clc
mov
sahf
je
outsb
adc
subl
aad
in
insl
mov
sub
aad
ss
imul
imul
js
xor
adc
mov
in
xor
shll
inc
jle
fwait
pop
pushf
push
pop
cmp
xchg
rcrb
and
push
mov
jae
mov
test
mul
mov
call
jno
adc
cmp
jbe
cwtl
cltd
insb
das
ss
push
lahf
fisubs
mov
lcall
xchg
or
gs
jmp
jo
mov
jbe
cmpsb
mov
inc
fldl
inc
mov
lods
testl
mov
je
adc
in
push
aas
add
sub
push
push
xor
int3
test
cli
mov
sbb
popa
frstor
pop
pop
jl
sbb
ret
pop
ror
adc
stos
and
jo
pushl
cmc
into
outsl
sub
ja
stc
int
jle
dec
scas
push
and
out
nop
ret
lods
jo
pop
sub
pop
sti
xchg
push
sbb
cmc
mov
adc
icebp
cmpsl
xchg
clc
or
xorl
add
add
imul
idivl
pop
fildll
icebp
or
scas
mov
js
jge
fiaddl
or
inc
ljmp
mov
add
jno
jmp
pop
scas
repz
sbb
xor
push
jo
mov
dec
mov
pop
xchg
xchg
aas
mov
loopne
pushf
lret
pop
xlat
push
dec
cmp
divb
jbe
loop
stos
xchg
xor
jnp
xor
lea
cmpsl
cmc
call
add
popa
dec
add
inc
jnp
push
xchg
test
inc
mov
arpl
xchg
outsb
fistpll
add
cs
cltd
dec
cli
sti
hlt
cmpb
xor
pop
push
or
cli
xchg
inc
fcomps
fs
push
aas
imul
pop
fisubs
ret
ljmp
in
jp
sar
test
lea
cli
mov
xor
mov
int
imul
lods
ljmp
rorl
xlat
cmp
cmpb
lds
push
mov
pop
pop
and
cmp
jp
ja
cmp
stos
repnz
pop
mov
and
loope
insb
lcall
loop
fnstenv
and
scas
push
repnz
arpl
mov
adc
int3
inc
cmp
sti
or
ss
imul
push
cmc
imul
repz
sub
out
ja
arpl
rorb
movsb
enter
sub
test
xor
xor
outsb
and
and
xlat
sbb
push
xchg
and
in
stc
aaa
popa
push
shrl
cwtl
adc
in
incl
inc
inc
sub
mov
mov
clc
mov
mov
pop
and
push
pop
or
into
lret
insb
push
loope
sbb
or
inc
aam
xor
sub
pmulhuw
dec
popl
adc
int
push
and
test
cmp
sub
push
scas
xor
dec
pop
pop
orb
push
pop
cmpsb
mov
push
sub
xchg
mov
push
lock
adc
fdivrs
mov
ds
cmp
jl
jmp
pusha
ds
pushf
sbb
jecxz
add
jo
ficomps
cltd
mov
mov
insb
roll
inc
or
or
fisubrs
test
and
lea
mov
sbb
movaps
dec
xor
mov
in
movsb
lea
ret
jo
addr16
inc
cmp
out
jg
fs
push
pop
or
pop
rorl
cmp
subl
sbb
lock
jb
add
lcall
sub
fiadds
loop
fistpl
js
inc
jb
push
shrb
inc
xchg
repz
jmp
and
aad
and
sar
das
mov
pop
jl
mov
fidivrl
push
cmc
cmp
cmpsb
stos
jmp
inc
rcrl
add
fldl
xchg
shrl
jbe
and
testl
sub
sub
popa
push
jb
mov
repz
addr16
xor
adc
add
xchg
inc
cmp
lahf
cmp
aam
je
fidivs
dec
cmpsl
idivb
orl
inc
cs
insl
ret
jne
inc
add
lods
stc
sub
and
dec
and
push
mov
and
sub
movsl
cmpsl
out
dec
mov
jp
cmp
sbb
insl
iret
fmul
fld
jb
sbb
imul
les
pop
loopne
dec
dec
out
push
push
enter
inc
mov
cli
clc
push
out
call
pusha
xchg
sbb
sbb
lds
mov
cmp
js
fadds
pop
in
pop
cs
into
aad
imul
mov
pop
pusha
mov
dec
jecxz
cmp
xchg
jmp
pop
xchg
and
sub
fwait
rep
cmpsl
adc
sub
mov
mov
sub
xchg
outsb
int
and
dec
cwtl
jae
dec
aam
sub
lcall
in
dec
mov
ret
xchg
jp
mulb
bound
adc
mov
fstp
clc
mov
add
xchg
xor
or
lods
fdivs
dec
or
fdivs
or
cmpsl
pop
pop
hlt
sahf
cwtl
jnp
push
mov
sbb
stos
testb
jns
enter
test
cmp
inc
adc
cmpsl
test
mov
and
dec
mov
mov
add
movhps
adc
jge
ret
pop
xchg
hlt
insb
add
xchg
or
addr16
mov
aas
pop
push
inc
inc
ret
xchg
scas
aaa
push
cs
sub
fisttps
js
jle
inc
movsb
es
in
xchg
and
sbbb
stos
mov
cmpsl
sbb
mov
sub
fldt
push
mov
ja
sbb
and
adc
mov
dec
cmpsb
sub
mov
insl
xor
xor
cltd
push
mov
cmpsl
sub
xchg
cmp
sbb
mull
sub
enter
cmpsb
inc
xchg
div
inc
jne
dec
fbstp
mov
mov
in
mov
mov
and
mov
roll
mov
testb
js,pn
ja
aas
ror
sub
sbb
imul
jnp
pmulhuw
lds
call
cwtl
dec
loope
add
scas
mov
sub
jne
pushf
xchg
sbb
mov
push
stos
pop
cs
arpl
insl
in
jb
andb
xchg
and
mov
mov
daa
aad
inc
mov
inc
lret
lret
movsb
test
xchg
std
pop
push
insl
mov
rcl
testl
into
popl
movsb
cs
add
mov
jne
push
in
pop
insl
aad
jno
jmp
test
adc
dec
push
or
fs
sbbb
push
xchg
ucomiss
sbb
inc
mov
pop
jo
push
scas
sbb
jg
dec
mov
push
ffree
xor
push
add
mov
mov
lods
je
mov
insb
mov
pmaxub
icebp
adc
into
fldl
cmp
pop
outsl
out
adc
jns
sub
mov
popa
stos
mov
js
les
add
idivl
imul
imul
movsb
xor
sub
dec
and
and
pop
pop
sub
cmpsb
xchg
cmpsb
cs
mov
mov
or
clc
or
add
lcall
sbb
inc
loope
out
jmp
loop
pop
jo
cmc
dec
popa
xchg
int
repz
lcall
in
imulb
jp
jge
in
test
push
jae
xchg
pop
out
sbb
fsubrp
paddb
jge
and
dec
add
jmp
adcb
ret
test
jne
adc
xchg
jns
out
mov
and
pop
inc
mov
lea
fbstp
das
push
fs
or
mov
xlat
pusha
push
inc
dec
int3
dec
arpl
jle
jbe
test
jne
pop
into
in
push
sub
push
xchg
test
dec
adc
mov
movsl
inc
xor
xchg
xor
icebp
jo
jg
into
xor
cmp
arpl
pop
rol
repz
pop
xchg
push
pop
cmp
fisttpll
push
push
leave
mov
cmp
icebp
lea
mov
loop
or
bound
jg
inc
xchg
jge
xorl
aaa
clc
outsl
pusha
test
test
add
test
inc
cltd
loope
sti
bound
jae
inc
sub
cld
xor
push
pop
imul
jle
mov
mov
mov
dec
inc
mov
cmp
jge
in
loope
pop
mov
xchg
add
xorb
mov
stos
sbb
xor
push
pusha
inc
int
push
dec
push
adc
or
xchg
xorb
leave
adc
or
jl
adc
sub
and
jmp
push
jmp
add
in
testl
aaa
js
mov
out
add
mov
and
nop
sub
clc
pushf
sub
rclb
ja
mov
nop
fstl
mov
lret
mov
dec
mov
mov
test
lss
lds
cltd
jbe
sbb
ja
mov
sahf
jo
ficomps
xor
mov
xchg
mov
fdivrl
out
dec
in
jle
adc
mov
push
sbb
das
cld
jnp
pop
jl
js
dec
gs
mov
xchg
sahf
pop
sbb
ficoms
lds
pop
mov
push
xchg
je
push
push
nop
lahf
jl
lea
fs
mov
dec
inc
xchg
repz
out
loope
mov
lods
jno
fisubrs
or
out
ja
push
pop
cmp
iret
inc
dec
cmp
xor
mov
add
clc
arpl
inc
imulb
jge
add
popf
jno
subl
jg
cld
mov
negb
push
lcall
mov
add
out
subb
jo
icebp
push
and
jnp
mov
loopne
push
nop
imul
jbe
xor
mov
pop
int
push
cli
mov
xchg
xor
adc
out
dec
rcrb
sbb
stos
xchg
adc
add
imul
int3
cltd
sub
ja
xor
cmp
sbb
stc
bound
shlb
dec
aaa
push
fptan
mov
or
sub
mov
pop
dec
movsb
xor
push
push
xlat
into
xor
xchg
lret
cld
xor
inc
pop
mov
sbb
pop
and
dec
pop
lods
inc
push
jo
mov
pop
push
adc
sub
out
fstps
add
adc
js
je
icebp
ljmp
imul
xor
loop
push
and
movsl
test
hlt
pop
cmp
cmc
imul
sbb
xor
jnp
loopne
movsl
jbe
and
ror
loop
ret
mov
mov
jae
dec
lods
in
push
repnz
es
je
insb
adc
pop
out
xchg
icebp
movsb
xchg
pop
mov
lret
ret
scas
inc
test
and
sbb
sub
sahf
jecxz
orl
pusha
stc
sub
dec
loope
inc
std
jb
test
fs
jp
cmpsb
mov
sbb
xchg
pop
dec
push
test
outsl
scas
cmp
icebp
cld
mov
lods
xchg
test
js
sub
add
stos
repz
inc
cmpsb
xchg
ss
daa
mov
arpl
shrb
dec
add
andl
inc
jnp
je
movsb
notl
movsb
lock
dec
xchg
imul
pusha
inc
jbe
sub
push
cmc
mov
and
mov
xlat
inc
sub
jg
jl
test
into
or
add
add
sbb
mov
sub
leave
insl
push
cmp
bound
mov
popf
and
push
add
cmpsl
push
adc
loope
and
xor
mov
add
push
push
inc
pop
inc
pusha
repnz
push
mov
fcomps
xchg
jnp
out
clc
sti
mov
cmp
and
jns
out
mov
ret
mov
mov
icebp
or
and
psllw
cmpl
mov
or
lock
loope
mov
pop
sbb
or
jbe
neg
sub
push
cmpsb
in
fwait
ljmp
jmp
lods
dec
mov
cmp
repnz
mov
and
cmpsb
xchg
out
adc
lret
add
xchg
push
xchg
xor
cwtl
add
inc
dec
jne
and
push
adc
es
jmp
es
mov
adc
push
and
es
xchg
imul
sub
mov
add
hlt
fcomp
out
inc
and
sbb
movsl
popl
mov
xchg
xorl
lods
pop
es
pushf
mov
xchg
or
pusha
stos
popf
adcb
mov
and
inc
aam
xor
or
xchg
push
repz
ja
jbe
fdivrl
sbb
add
aas
in
fldl
xchg
call
xor
es
ret
adc
fistpl
icebp
sbb
inc
and
xor
xchg
cmp
mov
arpl
stos
and
adc
cmp
punpckhdq
mov
xchg
fimuls
sahf
inc
push
outsb
cmp
ja
sub
adc
sbb
pop
sarb
cmp
lods
outsl
push
clc
mov
icebp
jno
arpl
push
ds
push
gs
or
and
fwait
rol
push
ss
jecxz
loope
adc
add
mov
lods
mov
aas
jno
lock
and
inc
ret
pop
xchg
fcmovne
cli
test
sbb
adc
push
sub
repnz
xchg
popa
cs
mov
xchg
push
in
mov
movsl
pop
cmp
in
imul
mov
or
dec
dec
jbe
sbb
sub
fimuls
lret
and
push
xor
or
ljmp
lret
add
ds
sbb
sbb
dec
int3
inc
leave
mov
and
lret
xor
stos
xchg
out
in
lret
xor
mov
xchg
jns
inc
and
test
adc
ret
jl
jns
mov
iret
imul
xlat
pop
pop
pop
mov
lods
jle
jp
adc
test
mov
aam
cmp
lret
mov
mov
dec
fbstp
fldt
stos
cltd
xchg
mov
push
inc
shrb
call
cmp
cmc
pop
ror
lods
adc
shll
xchg
test
jle
je
pusha
pop
dec
insl
sub
mov
icebp
and
cmp
pop
or
scas
add
cmpsb
sahf
adc
add
lods
push
int
mov
cld
add
lds
rcl
lock
std
movsl
testb
rcrb
adcl
adc
inc
jbe
sbb
sbb
cmp
xchg
jp
enter
or
adc
mov
stos
xor
cmpsb
loope
cmc
xchg
mov
and
mov
jno
sub
popa
faddl
mov
xchg
mov
cmp
or
jecxz
jne
mov
xor
mov
mov
ljmp
mov
stos
adc
fdivs
jns
ret
jecxz
sub
les
mov
push
mov
cmp
out
dec
xor
imul
xchg
dec
fxch
call
leave
xor
lcall
pop
xchg
in
ss
cmpsl
or
mov
pop
jl
js
dec
jp
mov
pop
lahf
popf
push
add
mov
fildll
stc
add
shll
aaa
adc
mov
jns
ret
inc
int
pop
fistpll
push
sub
sub
and
pop
shlb
jns
scas
push
sahf
inc
inc
cmp
jns
push
js
mov
out
in
pop
xchg
testl
mov
rcll
je
rorl
repz
into
cltd
mov
mov
repz
sti
lcall
cmpsl
jg
daa
pop
lock
test
pop
je
push
movsb
mov
mov
adc
out
mov
loop
inc
daa
mov
mov
cltd
push
sub
ret
xor
mov
jbe
push
mov
jb
mov
sub
scas
inc
mov
lret
xchg
xor
add
addr16
push
adc
stos
lods
mov
fildll
adc
mov
les
or
xlat
pop
add
insb
inc
ret
cwtl
rolb
mov
cmp
push
lds
popf
mov
sahf
mov
fistl
add
mov
addl
mov
jl
push
xor
int3
or
or
cmp
push
inc
ja
ficoml
lods
ja
mov
adc
add
push
ja
rorb
sub
jmp
mov
or
xchg
and
mov
mov
push
repz
adc
jne
insb
jnp
sub
adc
cwtl
mov
push
xor
mov
test
adc
add
stc
add
push
mov
andl
lock
es
out
jmp
cmp
cmp
out
dec
fcmovu
cltd
or
push
ljmp
add
push
push
add
sahf
imul
in
shll
cmp
icebp
jle
xor
call
sub
sbbl
mov
leave
and
push
mov
pop
aad
test
jae
lret
aad
cmpsl
dec
cmp
jbe
push
or
mov
sarb
test
ss
in
mov
dec
aam
mov
xchg
ljmp
mov
cs
adcl
pop
adc
dec
cli
xchg
outsl
into
push
je
jo
addr16
out
pop
mov
scas
add
jo
mov
xlat
pop
outsb
mov
mov
test
and
xchg
push
pushf
ret
mov
sahf
mov
pop
or
lods
jno
loopne
cmc
cmp
inc
push
in
repnz
add
dec
jae
xor
inc
dec
and
push
js
xchg
popa
xchg
shr
out
fsubl
or
in
fsubl
arpl
mov
push
lahf
sub
adc
add
iret
int3
lds
add
mov
sub
mov
dec
addr16
xlat
mov
cmc
and
andb
and
cwtl
inc
into
xor
mov
cmp
insb
je
leave
dec
push
add
inc
push
jmp
pop
add
sub
inc
decl
fdivrl
hlt
jecxz
add
test
push
xor
mov
push
mov
cmpb
push
into
add
pop
test
sub
shl
mov
xchg
sub
mov
sub
ja
xor
ds
xchg
xor
push
test
icebp
mov
mov
mov
cmp
cmp
ljmp
lods
int3
lods
mov
in
stos
dec
adc
and
mov
imul
and
sahf
pop
mov
sti
push
pop
ja
xchg
sub
xor
inc
pop
push
outsl
xor
js
dec
dec
fwait
sbb
test
incb
pop
out
sub
lods
sti
add
scas
daa
lods
xchg
into
jge
cmc
mov
lods
mov
jns
gs
jae
push
and
xchg
mov
jge
lods
jg
mov
mov
lods
mov
sarl
mov
xor
sub
fs
out
xchg
cli
pusha
dec
or
fiaddl
fidivrl
je
inc
fmul
push
inc
mov
cmp
imul
mov
inc
arpl
enter
xor
xchg
and
out
pop
int
cmp
ljmp
jmp
cltd
pushf
test
cmpsl
pop
inc
mov
mov
push
push
and
das
mov
inc
and
pop
cltd
jge
lods
popa
push
cwtl
or
data16
cltd
in
mov
sub
nop
stos
lods
dec
xor
test
cmp
out
cmp
movsl
push
and
fsts
fwait
mov
lods
or
jb
cmp
sbb
pushl
insb
shr
push
xor
jnp
stos
rolb
idiv
mov
fs
in
push
movsl
lods
in
scas
xor
or
jp
gs
sahf
cmc
aas
adc
rep
sbb
or
shrl
nop
pop
in
hlt
jle
and
adcl
das
and
lods
mov
cmp
jle
cs
fstpl
pop
or
xchg
push
repnz
pop
inc
movsb
adc
sbb
push
pop
push
cmp
push
xor
sar
xchg
xchg
sbb
push
in
cmp
sbb
loope
ja
mov
aaa
jbe
add
xchg
and
cmc
push
xlat
pushf
mov
jp
outsl
je
inc
mov
xor
addl
shlb
leave
xor
push
pop
jb
rcr
and
das
push
sbb
faddl
jo
mov
in
or
fcmovnbe
adc
repnz
inc
test
add
pop
jns
stos
xchg
xor
stc
das
mov
ljmp
lea
dec
std
and
push
sbb
imul
out
add
push
daa
aam
test
clc
sahf
test
stos
iret
cmp
leave
xchg
lds
pop
xor
rolb
inc
outsb
and
mov
cmp
cmp
cltd
pusha
out
fildll
pop
adc
pushf
inc
data16
add
shrb
scas
fs
in
xchg
xor
cmp
mov
fwait
les
and
push
insl
xlat
loop
pop
dec
mov
mov
jb
cmpsl
stos
in
mov
test
sub
add
sbb
frstor
pop
pop
or
mov
pop
sub
and
in
xor
cmp
xlat
aaa
bound
xchg
jns
fxch
fs
sbb
mov
scas
lods
fidivs
add
test
push
mov
jae
into
mov
dec
adc
les
add
sub
aad
in
inc
xchg
sub
xor
loop
int3
enter
mov
out
sti
jne
jb
push
add
xor
mov
sub
arpl
lahf
ret
push
dec
dec
lds
xor
jnp
shll
test
mov
imul
cmp
dec
push
xchg
jno
popa
test
lret
stos
sbb
sbb
jne
out
test
ss
dec
ljmp
int3
push
shrb
cwtl
sub
cmp
imul
jae
out
cmp
sarl
push
loopne
mov
sub
xchg
mov
sbb
add
jge
mov
dec
fistpl
dec
ret
pop
sbb
fsts
and
jmp
enter
inc
push
push
dec
dec
push
adc
add
add
mov
data16
sub
mov
mov
pusha
mov
jmp
insb
popf
inc
cli
js
jge
push
xor
rclb
lret
leave
xchg
mov
pop
add
jb
cltd
iret
imul
inc
sbb
push
xchg
xchg
add
add
push
loope
jg
sub
call
fs
cmp
scas
popa
nop
imul
jecxz
fsubl
xchg
sahf
fincstp
out
mov
cmp
out
adc
loope
out
inc
cs
into
fdivs
inc
out
add
clc
outsl
and
imul
xor
xor
call
or
mov
out
inc
sbb
xorb
add
rorl
nop
mov
cmc
adc
sub
orl
lret
mov
inc
movsl
dec
stos
sub
data16
fdivp
aaa
pop
mov
clc
add
sbb
and
or
movsl
add
jecxz
repnz
jg
mov
ret
xor
dec
jecxz
cmp
clc
jo
call
jmp
cmp
mov
cli
sti
in
mov
bswap
mov
jb
std
or
movsl
subb
xor
iret
push
out
aad
jbe
in
daa
sbb
push
add
xor
add
mov
stc
jl
mov
mov
movsl
xor
sub
mov
dec
adc
cmp
iret
fnstenv
jnp
clc
lret
inc
cmp
add
push
dec
pop
mov
out
pop
lds
sahf
ret
ljmp
mov
push
dec
movsb
jns
aaa
cmp
addb
adc
daa
push
sbb
push
push
jle
test
and
ja
aaa
in
test
imul
mov
push
and
stos
mov
or
iret
push
int3
dec
mov
push
jb
ljmp
push
mov
sub
cmp
aas
mov
es
cmp
clc
xchg
mov
sbb
dec
rdtsc
mov
dec
push
icebp
imul
add
pop
and
popf
movb
scas
imul
sbb
leave
pushf
test
inc
xchg
and
push
ljmp
stos
mov
daa
or
shlb
cmp
sub
xchg
insb
fildl
xchg
cmpl
fmul
xchg
add
push
cli
add
add
call
mov
mov
xorl
pmaxsw
sbb
sbb
dec
les
dec
push
aaa
rclb
insb
and
rolb
mov
ds
mov
sahf
push
lock
gs
outsb
loope
inc
xor
lret
xor
xor
dec
shr
push
cld
mov
jmp
mov
je
jg
jge
hlt
jle
pop
cmc
cld
rcrb
mov
mov
or
xor
add
popa
gs
jnp
lahf
push
repnz
push
jne
inc
pusha
inc
call
adc
pop
fdivr
add
adc
xor
push
shrb
es
jno
outsb
jae
js
icebp
in
insl
inc
ret
mov
ret
and
andb
stos
stos
gs
mov
into
sub
xchg
jl
fdivrs
test
je
mov
ja
xor
pop
aam
clc
outsl
shlb
rcll
mov
pop
dec
movsl
enter
ds
loope
xchg
xchg
xor
cli
test
adc
cli
bswap
sbb
in
xchg
into
arpl
push
insl
or
imul
mov
and
js
or
in
rolb
adc
gs
adc
subb
ss
xor
add
or
aam
adc
push
out
bound
dec
jbe
bound
arpl
ret
daa
enter
lods
xchg
or
outsb
xor
mov
rolb
pop
mov
inc
stos
or
sbb
js
imull
dec
sbb
repnz
cmp
test
lods
dec
std
push
pop
pop
push
scas
mov
scas
cli
daa
shrl
dec
xorl
lcall
xor
xor
push
ja
mov
mov
or
cli
in
mov
enter
xchg
movsl
mov
add
ljmp
filds
jns
add
cmp
stos
sarb
lock
fldt
popf
xor
jnp
mov
add
popa
jle
sbb
cmc
sbb
cmpsl
dec
push
jle
loop
add
mov
cmpsb
inc
add
aad
in
pusha
push
in
jbe
sti
push
ss
insl
push
aaa
and
jle
sarb
leave
into
jae
clc
loope
inc
push
inc
rorb
push
or
jmp
nop
xor
int
icebp
sbb
bswap
sub
push
inc
loopne
xchg
xchg
loope
fiadds
int3
sbb
dec
fs
out
inc
mov
lret
push
pop
and
loop
add
mov
dec
adc
ds
ret
test
mov
fiadds
fcomps
mov
inc
lock
lods
flds
nop
in
inc
cmc
fstps
and
jno
mov
into
call
adc
sub
pop
je
int
scas
or
xchg
and
sbbl
pop
out
out
ljmp
cmp
hlt
fcmovbe
xchg
mov
mov
xor
push
and
adc
pop
sub
cbtw
movsb
sub
or
fwait
leave
into
repnz
lds
lahf
mov
mov
mov
adc
adc
sbbl
mov
nop
imulb
or
pop
dec
jne
push
jge
out
dec
jbe
xorb
pop
fsubrs
popf
mov
xchg
ret
fsubrl
data16
loopne
out
add
cmpsl
xchg
add
stos
xchg
xor
add
xchg
inc
dec
outsl
cmp
add
addr16
sbbl
dec
cmp
int3
ss
xor
fildll
cld
mov
and
xor
inc
pushf
inc
jecxz
inc
add
pop
aas
fdivr
or
pop
mov
inc
mov
jb
pushf
ds
add
adc
sub
pusha
jb
ss
push
outsb
loope
ret
movsl
dec
test
pop
sbb
shlb
out
pop
push
mov
fstpl
jne
loop
iret
lock
pop
bound
dec
stos
sti
jge
push
pop
pop
std
jns
and
les
jl
push
arpl
cld
mov
jecxz
mov
sbb
cmp
xchg
mov
dec
pop
push
mov
aam
pop
jg
jmp
outsb
xlat
mov
fstl
pop
aam
mov
sbb
out
sbb
push
dec
outsl
popf
movsl
push
cmp
mov
cmpb
mov
sub
into
out
or
sbb
pop
fisubl
push
sub
mov
push
dec
mov
mov
xchg
enter
addr16
cmp
or
adc
jne
lock
xchg
push
in
jae
stos
mov
sbb
dec
mov
or
popf
aad
push
lds
mov
js
inc
ljmp
insl
fildl
dec
out
sub
and
push
scas
jne
dec
mov
push
xchg
cmpsb
out
xor
mov
cmp
mov
outsb
adc
mov
push
enterw
push
jb
jg
dec
sbb
rcll
mov
fdivs
push
xchg
cltd
std
popf
add
xor
mov
sbb
sub
iret
add
jns
mov
mov
pop
repz
jecxz
movsb
sub
push
or
sub
cmp
or
jge
arpl
inc
jnp
push
ret
out
push
cmpsl
es
test
andps
fmuls
and
into
sahf
sar
popa
cmp
mov
mov
das
pushf
or
sbbb
arpl
jae
xor
xorl
leave
mov
ret
jo
xor
shl
imul
mov
push
pop
incb
clc
shl
and
push
rclb
add
push
xchg
icebp
adc
daa
sbb
pusha
lods
int3
or
lahf
push
dec
repnz
into
pop
xchg
dec
pop
repnz
jmp
xor
add
and
mov
std
mov
pop
pop
out
xor
pop
sub
push
sbb
cvttps2pi
jns
push
into
xchg
in
stos
int
daa
add
bound
ficoms
and
mov
test
lret
scas
in
js
aad
sub
or
movb
popf
scas
loope
stc
leave
fld
mov
data16
mov
sub
aas
loope
lahf
sahf
mov
stc
lret
jno
into
push
pop
test
leave
roll
mov
push
mov
inc
dec
aad
mov
inc
pop
testl
mov
xchg
xchg
inc
jno
mov
in
sti
sbb
mov
push
and
bound
repnz
cmpsl
fucomip
fsin
mov
cmpsl
scas
int
jo
cmp
push
cs
xor
mul
ljmp
in
and
push
decl
stos
dec
xchg
mov
cmp
pop
add
pop
mov
or
adc
and
loopne
popa
cmp
mov
repnz
popa
test
or
mov
mov
xor
mov
test
xchg
fcmovnbe
mov
imul
fisttpl
enter
loopne
xchg
lds
and
xchg
xchg
cmp
cs
popf
rclb
pop
ret
lret
orl
andb
int
add
push
loop
jno
addr16
jl
push
shlb
xchg
cmp
pop
push
out
aad
int
or
leave
mov
pusha
cmp
rclb
mov
and
and
jmp
filds
adc
insl
ret
sbb
repnz
mov
cmp
cmp
loopne
cmpsl
mov
pop
cmpsl
mov
dec
cmpsb
cmp
pop
mov
and
jno
xor
rcrl
lea
testl
int3
in
add
fdivl
stos
iret
in
cltd
sbb
aad
jmp
dec
cwtl
inc
scas
fisttpl
sbb
and
jo
add
add
mov
dec
jmp
out
inc
daa
xchg
and
icebp
mov
sar
dec
in
ja
out
sbb
add
pop
into
mov
jmp
sub
xor
lods
nop
movsb
xor
and
pusha
test
sbb
dec
cmp
shl
add
pop
xchg
int
loop
inc
and
jl
test
push
adc
iret
aas
das
js
dec
or
add
ret
xchg
dec
xchg
jp
aaa
test
mov
pop
dec
pop
je
pop
call
dec
clc
lods
lods
mov
ljmp
pusha
sbb
and
xchg
fstps
xchg
cmp
jnp
in
cltd
inc
movsb
stc
jmp
adc
popf
or
sete
sbb
inc
jmp
xor
cltd
xchg
xchg
fsubrl
jmp
pop
add
sbb
xor
push
stos
xor
push
fbstp
imull
lret
mov
shlb
insl
or
mov
lcall
daa
stos
adc
sarl
rclb
xchg
es
push
mov
cmpsl
xchg
mov
xor
ja
aad
rcll
pop
fldcw
cmp
sub
sahf
aam
cmp
sbb
stos
inc
loop,pt
stos
cltd
es
shrl
sti
inc
add
shrb
sub
xchg
sbb
mov
add
std
pop
scas
shrb
ret
mov
mov
fwait
daa
inc
mov
jl
xlat
add
movaps
and
jle,pn
xchg
inc
cmp
test
adc
lret
cmp
adc
stos
cmp
loop
jo
xchg
divb
pop
adc
out
in
inc
mov
dec
in
sbb
cmp
stos
out
repz
out
addr16
loope
ljmp
data16
repnz
dec
add
test
push
sub
ret
mov
js
inc
movsb
ss
cmp
cmp
dec
mov
js
cmp
mov
sub
mov
aaa
cmp
rorb
xor
jl
sarl
imul
xor
or
ss
lds
pop
or
and
rolb
or
mov
jnp
shl
xchg
lret
pop
xor
mov
lods
fimull
or
mov
pop
sub
push
dec
jns
xor
les
xor
add
popa
push
loopne
fadd
outsl
and
loopne
bound
xchg
inc
fcomps
insl
jmp
add
cmp
nop
sub
daa
shlb
in
xchg
sub
jmp
je
push
repz
jae
stc
lret
movsb
lods
ret
jmp
rclb
cmpsl
sbb
leave
push
subl
cmp
xchg
sub
pusha
call
adc
sbb
dec
mov
mov
dec
sti
dec
int3
ret
and
hlt
jbe
lock
in
fisttpl
pop
test
fldl
inc
push
jae
outsl
in
sbb
mov
pusha
aaa
mov
subb
jp
pop
cli
jns
add
sub
xchg
aaa
push
xchg
cltd
sarb
push
mov
adc
adc
js
arpl
dec
out
pusha
shl
movsl
push
imul
mov
mov
push
or
inc
aaa
jne
mov
jecxz
stos
mov
jp
push
rolb
pop
cmp
lea
daa
dec
and
out
in
xor
nop
in
xchg
or
lret
icebp
jnp
sahf
mov
inc
mov
inc
inc
cmc
sbbb
mov
mov
lods
push
gs
mov
xchg
push
jmp
sti
pop
and
cmp
pop
mov
inc
outsb
insl
rclb
dec
daa
jl
and
jp
test
sti
cmp
push
das
subl
fnstsw
sbbb
cld
dec
mov
cmpsl
mov
std
andl
xor
cmp
jmp
sub
jne
arpl
rcrb
clc
lds
imul
pushf
popf
or
adcb
pop
or
roll
sub
xchg
jo
pop
lods
or
lret
add
cltd
push
adc
inc
mov
cmpsb
pushf
negb
xor
cwtl
leave
pop
adc
movsb
jns
and
sub
dec
dec
pop
sub
lods
sbb
aaa
pop
pop
mov
cmp
repnz
cs
mull
scas
testl
mov
inc
fnstcw
pop
outsl
mov
in
lds
ror
sub
popf
cmpsb
jne
lods
adc
dec
cmp
js
push
mov
js
inc
pop
sbb
jo
inc
jg
dec
rep
shl
fisubrl
bound
pop
les
loopne
fistps
mov
dec
mov
xlat
mov
adc
insl
enter
shll
faddl
jg
mov
frstor
test
mov
outsb
data16
repnz
leave
xchg
cmp
mov
lock
xlat
pop
mov
adc
pop
sub
scas
xchg
mov
aad
clc
adc
dec
dec
movsb
xor
addr16
movsl
and
test
in
push
loopne
in
movsl
icebp
add
push
push
push
movsl
das
cld
outsl
push
jo
ja
mov
push
jecxz
dec
sahf
inc
dec
cmc
into
pop
push
arpl
inc
into
into
xchg
or
ret
ja
fyl2x
rcrb
cwtl
sbb
mov
and
bound
pushf
pop
xor
add
jmp
lea
mov
fistl
in
cmc
jo
inc
inc
push
test
cmp
repnz
ret
mov
dec
or
std
sub
mov
jl
or
bound
roll
sahf
xor
push
push
inc
hlt
mov
adc
push
add
inc
leave
xchg
adc
scas
das
cs
shlb
mov
fimull
aaa
mov
cmp
popf
fwait
lret
pusha
fidivrl
push
and
ret
pop
in
inc
jmp
hlt
loop
icebp
scas
pop
das
adc
sbb
or
out
divl
adc
sbb
inc
or
xchg
sub
sar
xor
sbb
sbb
cld
cmp
addl
popa
and
es
fisttpll
cmc
lods
cltd
adc
insb
out
mov
je
in
push
icebp
pop
je
stc
mov
inc
fdivr
loop
mov
cmpsb
cmpsb
out
in
jns
push
lret
stos
jge
sub
mov
and
sbb
test
pop
daa
incb
jnp
or
push
call
mov
or
dec
push
in
push
aam
push
idivb
pop
rorb
cli
jge
push
jg
pushl
mov
inc
fisubrs
jmp
cmp
or
inc
adc
xor
inc
mov
scas
aad
cmp
aam
out
mov
mov
mov
lret
jg
clc
aad
mov
inc
or
mov
shrl
out
pop
shl
cmp
mov
xlat
xchg
iret
push
fidivl
push
repnz
or
aad
and
scas
jnp
push
cs
mov
pushf
test
xor
jg
cmp
out
fs
ret
adc
pop
and
fisttpll
dec
les
outsb
fcoms
pop
inc
gs
jp
out
sub
cmc
lcall
mov
les
xchg
rcrb
imul
sbb
add
mov
sbbl
mov
jbe
test
lods
jg
insl
add
mov
pop
push
mov
mov
int
fisttps
cwtl
outsb
movsb
and
cmp
cs
lock
push
pop
jb
addr16
out
clc
mov
pop
je
sti
cltd
subl
mov
add
std
ret
es
scas
mov
xchg
int
jge
adc
fsubl
cmp
add
fnsave
iret
aaa
cmp
les
push
sub
enter
scas
cli
divb
jns
dec
fdivrl
adc
loope
cmpl
push
in
stc
jmp
std
adc
sub
or
popf
adc
arpl
stc
xchg
and
dec
fsubl
mov
cld
xchg
jmp
adc
push
jge
pop
xchg
sahf
mov
icebp
les
or
mov
jmp
cltd
add
xor
jnp
aam
or
and
das
aaa
mov
out
sti
jle
loope
sbb
jle
insb
adc
test
out
and
mov
out
frstpm(287
sbb
stos
int
and
mov
testb
icebp
xor
rcll
fldl
mov
xorl
xchg
in
lret
shlb
out
daa
add
xor
add
jl
mov
test
pop
sbb
or
push
xchg
dec
add
and
adc
xchg
je
clc
fs
jno
adc
fiadds
ret
jp
mov
inc
ss
out
stos
movsb
mov
xor
test
nop
addr16
jns
sbb
push
nop
jns
orb
mov
jno
fcmovu
call
ret
push
push
inc
cmpb
jp
test
jmp
cmp
shlb
jo
roll
cmp
or
lahf
and
jae
mov
and
mov
cmc
imull
add
push
bnd
mov
es
popf
pop
pop
out
dec
and
test
lds
xor
insl
loopne
into
popa
in
push
ret
jnp
and
out
add
adc
push
xlat
dec
scas
dec
int
jge
fidivl
insb
lahf
and
js
mov
add
mov
xchg
ja
or
addr16
cli
add
sub
ljmp
enter
rcll
or
test
mov
adc
inc
dec
sbb
add
mov
outsb
popa
movsb
ja
sbb
adc
xor
in
scas
gs
xchg
jnp
cmpsl
xor
aam
or
addb
inc
and
dec
inc
repz
jb
or
jo
rorb
inc
mov
and
sbb
pop
lahf
test
scas
sub
cmc
in
std
xchg
mov
push
movb
mov
push
adc
and
outsl
and
mov
mov
sub
outsl
xchg
insl
and
int
fwait
into
popa
cmpsb
cmp
push
inc
pop
imul
addl
cmp
push
inc
add
mov
fmuls
dec
pop
orb
jns
mov
sub
fisttps
cwtl
ftst
push
push
ds
mov
xchg
or
rorl
shll
xchg
mov
call
adcl
outsl
cmp
pop
and
inc
adc
inc
mov
mov
lds
test
push
push
xor
pop
or
add
sbb
das
cmp
cmpsl
mov
cmp
cmpsl
xor
addr16
insb
dec
scas
or
inc
daa
in
and
inc
mov
cmp
jo
sbb
cmovb
pusha
sbb
push
mov
push
mov
icebp
dec
fmul
enter
sbb
and
pusha
pusha
fbld
std
or
push
lret
inc
pop
xor
mov
adc
nop
or
push
imul
xchg
mov
repnz
push
test
sbb
rol
or
push
mov
cmp
pop
mov
push
jp
pop
or
iret
pop
and
mov
fwait
rolb
aas
frstor
cmp
jmp
cmpsl
mulb
mov
and
clc
lea
lret
fsts
cmc
addr16
std
cmp
lcall
xor
lock
in
das
push
adc
xchg
push
adc
lret
add
sbb
mov
fisubl
aad
aaa
clc
iret
push
shr
push
pop
gs
mov
loopne
mov
xor
in
out
inc
sti
cltd
lds
shlb
mov
ficomps
pop
mov
cs
movsb
popf
dec
in
in
sbb
pop
sub
dec
or
and
mov
mov
push
mov
cmp
daa
je
push
mov
cmp
jge
xchg
adc
sahf
sarl
lret
cmpsb
pop
cmpsl
cmpsb
std
int
and
pop
jmp
mov
mov
fstl
xchg
loop
ss
or
xor
push
xchg
push
outsb
and
fisubl
jnp
pusha
kmovb
or
cmpsb
inc
aas
mov
mov
mov
and
and
imulb
adc
mov
lock
sbb
push
mov
mov
ret
adc
in
dec
sti
fcomps
inc
push
push
adc
xchg
xlat
and
pop
xor
call
ja
or
lods
dec
sti
das
pop
out
inc
add
cmp
loope
adc
and
sahf
sbb
test
pop
daa
lahf
push
add
lea
lds
or
mov
enter
xlat
clc
fildl
dec
loopne
push
movsl
push
insl
data16
fsubrp
mov
mov
and
cmpsl
xchg
in
add
sub
sbb
stc
out
test
sbb
enter
pop
lock
ss
iret
adc
in
into
aas
add
push
pop
cwtl
push
ret
cmp
xor
pop
lret
adc
push
in
loop
xor
enter
push
into
or
add
xor
push
and
lcall
cwtl
shrl
fidivrl
and
test
data16
adc
bound
scas
dec
adc
xchg
jecxz
push
cli
clc
loop
xchg
jge
cmp
sub
repnz
ds
push
je
sbb
test
idivb
shll
cmp
jle
roll
ljmp
dec
fisttpll
stos
pop
out
out
out
xlat
fs
pop
inc
lods
das
fistps
xchg
push
cmpsl
cmpsb
xchg
sub
or
xchg
shll
cmpsb
mov
mov
dec
sti
pusha
in
jmp
das
add
xchg
in
and
mov
lret
fs
jmp
iret
mov
js
pop
iret
or
sbb
xor
xor
xchg
sub
cmp
jmp
xchg
mov
dec
mov
push
mov
inc
xor
jle
repz
rolb
pop
fcmovnb
leave
inc
cmp
push
shlb
mov
adc
mov
pop
push
adc
dec
jne
fldenv
xor
scas
adc
data16
fbld
jbe
adc
mov
push
pop
pop
cs
mov
sbb
and
push
pop
into
sbb
cltd
jne
cmp
add
out
push
outsb
xchg
lahf
lods
sub
addr16
testb
shlb
jo
cmpsb
inc
push
jp
ficomps
lods
mov
ror
je
or
or
movsl
mov
mov
cmp
enter
add
xchg
aaa
xor
insl
mov
xchg
enter
popf
fsts
fmulp
aaa
mov
mov
sub
xchg
into
je
repnz
cmpsl
sub
fcompl
loopne
mov
mov
xor
or
imul
shl
or
cli
push
jge
jecxz
jge
fbstp
out
lcall
inc
mov
or
mov
shlb
mov
insl
dec
adc
push
xchg
mov
enter
add
movb
cli
or
push
js
jne
cwtl
pop
xorb
sub
es
in
pop
push
dec
push
mov
push
add
out
pop
mov
inc
cmpsl
inc
and
mov
cmp
repz
mov
shl
xlat
mov
mov
bound
das
or
xor
add
iret
xor
mov
rcl
fldl
pop
pop
xor
es
mov
lahf
outsb
imul
movsl
and
jp
mov
or
loop
ja
mov
push
jae
jmp
jmp
sbb
xlat
xor
xor
sbb
pop
mov
push
or
movsb
das
fsqrt
push
pop
push
mov
jp
adc
or
ss
pop
jecxz
mov
mov
in
sub
sbb
mov
pop
mov
and
mov
cmp
leave
sbb
jbe
cmp
xchg
or
xor
pusha
nop
jl
repz
mov
into
fnstenv
ret
fnsave
arpl
inc
adc
mov
mov
cmp
cs
pop
js
jmp
lods
imul
jp
adc
add
inc
jecxz
sbb
push
movsl
lret
inc
mov
test
jo
jae
nop
sarb
fucomp
dec
dec
or
xchg
ja
in
es
stos
mov
or
addr16
push
hlt
out
adc
sbb
addr16
cmp
je
lods
jecxz
cli
iret
cmp
and
xchg
push
popf
ja
xor
imul
xchg
lcall
and
dec
out
mov
jb
xor
addr16
fisubl
cwtl
lcall
pop
int
mov
mov
push
pop
inc
pop
push
test
push
add
in
dec
push
push
fnstcw
movsb
sti
pop
fdivr
dec
xchg
out
cwtl
mov
mov
in
xorb
ss
push
sar
jnp
hlt
inc
in
mov
push
jo
es
scas
into
pop
ljmp
rorb
sub
add
dec
or
pop
push
aaa
jae
mov
sbb
jle
cmpsl
pop
scas
cwtl
sbb
xchg
add
pop
push
loopne
lock
enter
mov
sahf
inc
xor
rolb
inc
ss
popa
mov
jno
pop
xor
or
int
add
in
sarl
jae
push
push
movsl
sti
lret
cmpl
cmc
bound
fnstcw
rdtsc
ljmp
add
push
outsl
push
je
fstps
jmp
mov
push
repz
or
push
out
xchg
mov
dec
movsb
imull
mov
cmp
cs
sar
arpl
adc
and
xor
sub
xor
sub
ljmp
push
scas
or
mov
and
sub
add
and
pop
fidivrl
aas
cmp
out
lods
fdivl
shlb
loop
mov
test
inc
mov
inc
lahf
mov
out
enter
mov
xor
ror
out
jnp
iret
mov
test
jp
sub
pop
pop
mov
ret
sar
add
mov
push
xchg
adc
adc
imul
dec
xchg
daa
mov
xchg
inc
repz
add
cwtl
mov
jbe
lods
jae
inc
clc
clc
and
or
or
in
xchg
mull
fwait
xor
mov
add
or
test
fidivrs
jmp
xchg
xor
push
xor
pop
rol
push
push
pop
push
mov
nop
lea
jl
mov
sbb
addr16
push
stos
push
daa
push
sbb
popf
jne
adc
fs
mov
dec
push
jo
xchg
scas
adc
sbb
push
pushf
ss
mov
mov
or
lods
mov
imul
and
maskmovq
arpl
scas
mov
imul
xchg
rcll
outsb
inc
dec
into
sub
cs
mov
fsubs
stos
jne,pt
inc
push
test
xor
jb
adc
flds
inc
mov
pop
inc
movl
jne
xor
lods
in
xchg
pop
mov
lock
push
jne
leave
jbe
lcall
fs
cltd
in
notl
push
imul
cld
pushf
mov
xlat
fwait
cs
imul
imul
xor
stos
cmp
mov
movsb
leave
outsl
pop
movsb
lcall
repnz
ret
fldcw
movsl
aad
iret
mov
sti
pop
movsb
mov
adc
sahf
scas
in
and
test
pop
jge
out
aas
xor
neg
sub
and
sbb
dec
xchg
and
roll
mov
push
cmp
adc
into
mull
sub
cmpsl
data16
jecxz
adc
in
push
lret
addl
mov
jg
pop
call
xchg
mov
push
jb
lds
dec
in
add
in
adc
in
cwtl
xchg
and
add
xor
or
pushf
fsubl
mov
and
mov
decb
cmp
mov
sarb
sub
fimull
jo
and
aam
fs
push
adc
sbb
push
mov
cs
pop
jno
lea
ja
sbb
inc
cmp
test
jbe
or
pop
fmull
xchg
cmpsb
mov
bswap
ljmp
stc
pop
adc
jge
cmp
fisubrl
fsts
cmp
shlb
inc
stos
popf
xor
sbb
and
movsb
cmp
aaa
cmpsb
lret
aad
mov
xchg
test
sbb
sbb
in
cltd
cs
mov
test
push
dec
pushf
dec
xchg
mov
mov
aaa
sub
scas
test
pop
xor
push
sarl
xchg
mov
mov
mov
jae
popa
fisubrl
lods
dec
sub
inc
sub
loopne
sbb
jl
icebp
cmp
mov
sub
fwait
dec
jne
sti
push
add
and
lret
sbb
pop
ds
sub
sub
pop
jmp
mov
inc
cmp
adc
out
xchg
out
sub
insb
sub
mov
les
mov
orb
ret
outsl
repnz
push
lret
ljmp
xor
or
inc
shl
test
or
repnz
or
leave
mov
xor
and
adc
bound
push
push
sbb
dec
xor
movsl
out
and
rcrl
jmp
loop
xor
inc
cmp
test
loope
scas
mov
inc
stos
cmp
mov
int
int
adc
sbb
bound
icebp
je
xor
push
hlt
mov
pop
mov
les
inc
out
and
mov
xor
cmp
repz
push
add
out
rcrl
loopne
lahf
xchg
or
xor
mov
arpl
push
mov
outsb
inc
mov
jecxz
xorb
mov
mov
daa
push
and
xor
arpl
mov
lea
mov
cmp
mov
incl
jbe
xor
call
ret
ret
iret
dec
pop
xor
mul
jae
stos
das
push
scas
or
bnd
add
jno
mov
in
dec
fscale
sub
loope
aam
loopne
mov
loope
sarb
xchg
fnstcw
nop
inc
test
inc
xchg
imul
mov
mov
fldenv
dec
ret
xor
adc
mov
pop
aam
aad
outsl
outsl
mov
popaw
fisubs
push
jno
push
push
adc
mov
data16
mov
jle
outsl
nop
cmc
jg
sub
inc
outsb
dec
cmp
ss
add
out
inc
push
gs
mov
push
ja
incl
pushf
mov
es
and
sbb
sub
insl
sbb
or
js
and
cli
lea
cmp
push
clc
lods
cmp
xchg
sub
and
adc
les
lods
out
lds
popa
aas
add
dec
xchg
inc
arpl
add
ret
shrl
xor
jne
sub
das
addr16
std
ds
mov
mov
or
cmp
sti
lret
pop
fdivp
jmp
add
outsl
enter
scas
pop
dec
ds
mov
insl
xor
out
cmpsb
sbb
adc
pop
mov
shlb
dec
xor
rol
repnz
lret
lret
cmp
sbb
push
add
xchg
cmpsl
or
cmpsl
dec
popa
mov
pop
mov
outsl
mov
jns
jns
lret
into
dec
incb
roll
sbb
adc
or
xchg
cltd
cwtl
loopne
jecxz
mov
mov
jnp
sbb
mov
popa
xor
test
sbb
cli
jb
test
xchg
jle
orl
cs
push
and
leave
jnp
dec
xchg
mov
mov
xor
scas
mov
dec
jge
sahf
ljmp
cld
mov
sar
xchg
int3
mov
xchg
mov
pop
mov
inc
js
push
int
mov
jne
add
xlat
cmc
xor
xor
adc
popf
mov
push
adc
cmp
in
adc
popl
jo
pop
in
mov
ret
and
sbb
or
adc
adc
fsubs
mov
or
adc
jae
or
data16
inc
xchg
fnstcw
mov
lds
das
cs
or
in
repz
adc
insb
adc
dec
sub
inc
cmpsb
cmp
add
mov
pop
addw
mov
and
aad
jnp
push
jno
outsl
mov
mov
loopne
out
cmp
cltd
popf
add
stos
cmp
jae
xchg
pusha
and
jo
aad
xor
inc
add
daa
cmpsb
mov
mov
lock
cmp
addr16
shlb
sub
add
dec
cld
add
or
stc
sti
imul
jne
in
gs
mov
push
sbb
sbb
out
mov
pop
mov
pop
sub
xor
add
int
mov
jns
dec
adc
mov
mov
inc
pop
lods
arpl
add
xlat
xor
scas
sub
scas
in
popf
sbbb
sti
or
sbb
test
lock
cmp
push
fdivrs
adc
outsl
jp
fdivs
scas
inc
out
je
dec
push
fwait
lret
xchg
stc
les
sub
add
in
sub
aad
fucomi
inc
push
push
movsl
push
push
mov
inc
rcll
or
inc
mov
fwait
sub
mov
ljmp
stc
pop
mov
cwtl
push
pop
dec
roll
jp
mov
adc
repz
dec
mov
pop
stos
and
xchg
hlt
stos
fsubrl
push
in
push
das
xchg
xor
adc
pop
pushl
add
xor
je
pop
push
scas
or
xor
andb
pushf
das
out
jns
push
in
mull
addl
imul
sbb
repnz
mov
add
push
push
adc
and
in
jmp
mov
dec
cli
decl
sbb
lret
fsubr
cmp
jmp
insb
pop
mov
rolb
idivl
add
hlt
popa
push
into
xor
fcmovu
int3
xchg
pop
mov
ffree
cmp
mov
mov
lret
js
jge,pn
popf
dec
mov
std
outsb
pushf
in
cmp
push
pop
xchg
out
inc
jae
pop
pop
movsb
push
xchg
jns
ret
pop
jecxz
in
or
cmp
test
dec
cmp
fwait
xchg
dec
cmpl
add
inc
pop
scas
sti
jl
call
outsl
pop
pop
adc
cmpl
mulb
dec
push
xor
pop
cld
dec
daa
mov
and
fcomp
mov
mov
aas
xchg
out
pushf
adc
jbe
mov
push
add
mov
mov
lret
xchg
stos
cwtl
mov
inc
sub
movsl
popf
jbe
lea
add
jbe
cmp
inc
loop
dec
push
int3
es
and
ja
pop
into
xchg
es
ret
add
in
aam
xchg
mov
push
hlt
xchg
pop
test
cmp
sti
xchg
mov
shlb
test
sbb
lret
int
cmp
adc
sbb
dec
cmp
test
dec
or
xor
jne
mov
les
data16
dec
or
rorb
mov
stos
push
stos
mov
add
nop
cmpsl
sahf
pusha
mov
lahf
xchg
lock
lds
call
xchg
das
repz
fimuls
insb
and
xor
cmp
mov
es
int
test
sub
mov
pusha
das
inc
mov
jg
push
fwait
out
cmp
int3
cmpsl
mov
stos
js
jge
mov
mov
mov
sbbl
inc
movsl
xchg
xor
mov
or
sub
into
daa
and
lods
mov
out
shl
out
and
sbb
stc
stc
adcl
sub
and
or
mov
and
inc
das
call
or
fwait
mov
sub
xor
out
jnp
jno
fldcw
cmpsl
mov
idivl
lret
dec
test
stos
inc
inc
into
dec
sub
daa
or
dec
xchg
lcall
and
or
cltd
cmp
mov
add
dec
adc
xchg
sbb
jns
mov
xchg
fs
int3
sub
cwtl
jg
mov
mov
xchg
aas
xor
cmp
or
outsl
pushf
jl
dec
sub
fstps
ljmp
push
sub
add
jp
adc
push
mov
xchg
mov
push
dec
fadd
std
loop
dec
push
sahf
pop
mov
cmc
mov
sbb
sbb
out
lret
out
push
cli
fidivl
jl
loop
sub
shl
jp,pt
sbb
sub
mov
movsl
aas
add
int3
add
testb
add
in
iret
imul
cwtl
call
dec
andl
test
stc
add
pop
mov
hlt
sahf
adc
arpl
adc
gs
jb
mulb
jge
arpl
inc
fwait
inc
jae
cmp
xorb
jl
dec
sub
or
or
imul
dec
imul
push
repnz
mov
and
mov
mov
dec
out
sub
mov
lcall
xchg
mov
pop
shrl
jb
mov
imul
jmp
mov
cli
icebp
in
enter
adc
cmc
aaa
das
in
mov
out
repz
in
frstor
pop
mov
and
mov
inc
sahf
pusha
dec
or
cmp
testb
pushl
ret
xchg
fwait
bound
push
inc
xchg
out
push
mov
in
jnp
repnz
pop
mov
and
frstor
cld
pop
mov
dec
jb
ss
cmp
loopne
mov
cmp
jg
mov
adc
dec
jl
xchg
into
push
fdivr
aas
lcall
in
jns
sbb
rcll
outsl
mov
fs
ja
pop
fcompl
cmp
adc
xchg
lret
les
pushf
jne
mov
stos
in
xchg
or
sub
jnp
sbb
lcall
and
icebp
test
fldl
lods
cmpsl
test
daa
xor
dec
dec
sarl
js
jae
pop
dec
dec
or
dec
mov
dec
iret
add
cmp
lcall
adc
inc
xor
cmp
cltd
xor
rcrl
cld
push
jnp
xchg
cmp
mov
ds
dec
rcll
jmp
add
cld
in
xchg
rcrl
les
mov
fisubl
mov
fldt
inc
jge
lahf
dec
push
notb
xchg
outsl
dec
stos
push
cmpsl
or
in
pop
mov
mov
es
inc
das
orb
ss
ja
adcl
mov
inc
popf
mov
cmp
imull
pop
pop
popf
jmp
xchg
imul
or
lods
adc
les
adc
rorb
mov
sbb
mov
jns
mov
gs
insb
arpl
jecxz
push
int
aad
push
pop
js
imul
pop
xchg
xor
push
js
dec
push
push
mov
mov
xor
out
pop
out
fwait
mov
adc
shl
mov
fstpt
popf
outsb
and
push
mov
xchg
popf
js
mov
sarl
outsl
movsl
xor
in
ja
pop
scas
inc
cmp
sbb
test
dec
jl
xor
test
mov
mov
xor
insl
xchg
and
pop
pop
mov
inc
add
dec
rorl
xchg
mov
xchg
fstps
arpl
cmp
or
pop
cmp
and
test
pop
lods
loop
mov
xor
sbb
es
fwait
cmc
jp
add
sub
decb
mul
in
popl
aam
mov
mov
pop
mov
sti
ds
test
testb
jg
xor
addr16
mov
ret
ss
arpl
loop
or
and
das
mov
adc
movsb
sub
lret
xchg
mov
loopne
xor
mov
lds
cmp
in
mov
pop
xor
push
lds
push
jmp
add
inc
jno
lahf
jmp
rol
into
rcrl
mov
fisubrs
jns
push
dec
push
fs
cmp
mov
xchg
jae
fs
rorb
lods
ret
and
lret
or
cmc
dec
les
lea
rclb
sti
sbb
movsb
sbbb
pop
jnp
and
add
hlt
jmp
mov
lret
and
pop
jne
mulb
mov
fdivl
inc
xchg
push
data16
scas
dec
jne
mov
and
adc
ficomps
sub
test
sti
test
ds
xchg
mov
cli
push
push
add
push
leave
ja
test
push
or
repz
mov
ret
imull
push
ficoms
fs
stos
jo
idivb
pushl
push
jae
mov
outsb
mov
mov
dec
arpl
idivl
jno
into
les
xchg
fstpl
mov
rorl
pop
addl
lods
popa
add
mov
pop
pop
sub
aaa
ret
aas
outsl
pop
xchg
fnsave
cld
insb
int3
jo
sbb
je
adc
dec
fldt
arpl
leave
xor
mov
in
orl
cmp
mov
sahf
jae
pushf
lcall
pop
pop
sbb
sub
xor
insl
out
and
sub
fidivs
mov
pop
push
push
dec
xchg
cmpsl
nop
pop
mov
push
cmp
mulb
daa
dec
or
mov
sbb
test
pop
cmp
stos
xor
sti
test
sbb
jge
push
rclb
dec
jmp
xor
pop
arpl
cmp
into
adc
and
movsb
fcomps
loopne
gs
lcall
ljmp
lock
add
xor
fdivl
mov
or
loopne
aad
gs
and
add
daa
das
inc
out
cmp
fstpt
xchg
imul
lds
mov
adc
pusha
test
out
xchg
popa
lret
pusha
xchg
jae
or
out
jecxz
test
push
into
stc
add
lahf
jmp
sub
push
inc
scas
insl
jno
cmpl
jecxz
push
xlat
jne
inc
jb
sbb
cmp
test
mov
add
pushf
adc
cmp
sahf
adc
insl
xchg
jge
lahf
add
xor
jno
test
adcl
sbb
lods
push
cli
pushf
inc
bound
add
sbb
stos
xchg
cmp
pop
pop
mov
out
ret
ficompl
adc
loop
sbb
and
add
fistpll
loop
out
xchg
mov
adc
push
xor
cmc
mov
or
out
push
and
enter
sbb
jnp
mov
rorl
push
mov
jns
out
sbb
mov
rolb
jne
mov
fcomps
push
pop
in
fcmovu
add
mov
mov
inc
jmp
jge
xchg
gs
icebp
ss
pop
popa
sbb
out
sub
into
and
out
adc
shl
adc
rclb
mov
mov
dec
push
cmp
movsb
pop
mov
sti
dec
add
in
sbb
bnd
dec
jg
push
rolb
test
out
outsl
out
in
arpl
push
in
addb
push
hlt
nop
push
imul
push
insb
movsl
xchg
cmp
pushf
xor
sbb
push
mov
cltd
fcomip
ds
xchg
adc
addl
jp
jo
dec
adc
xor
mov
outsb
add
mov
movb
pop
cmc
test
ret
ret
imul
add
and
and
in
insl
mov
add
cmp
pop
or
push
adc
push
xchg
xchg
ret
fcompl
jge
jnp,pn
or
push
add
repz
loop
popf
out
adc
dec
pop
fcomps
fwait
add
or
cmc
cmp
fstl
sbb
jl
lcall
cwtl
push
add
push
sbb
sub
daa
sti
setge
cmp
out
pop
adc
fidivrs
sub
xlat
adc
les
insl
arpl
xor
sub
sub
sti
sbb
stc
jl
lret
mov
mov
mov
mov
pop
jecxz
xchg
rclb
iret
aaa
cli
ror
aaa
stc
xlat
push
outsb
jns
mov
jg
mov
test
adc
shlb
ss
or
sbb
sub
fwait
lea
push
jge
aas
xor
xchg
xchg
testl
or
clc
sub
cmp
jne
scas
pop
push
dec
cmpl
jle
std
test
insb
cmp
aad
loop
jge
dec
adc
sub
repnz
mov
sub
stos
or
es
insb
pop
arpl
test
pop
cmpsb
mov
or
lock
fidivrl
jmp
loopne
leave
or
in
out
mov
jnp
sbb
mov
fists
rcrl
lods
sub
mull
add
mov
cli
and
out
and
mov
inc
jno
int
lahf
dec
lock
loope
cmpl
shll
jle
stos
dec
cwtl
stc
lahf
loope
sbb
sub
jle
mov
test
jmp
je
dec
add
stos
inc
jbe
lods
dec
mov
sub
lcall
mov
iret
sbb
insb
pop
test
imulb
mov
outsl
ss
sub
aam
iret
dec
loopne
pop
clc
adc
xor
fs
test
negb
sti
and
dec
dec
push
popf
mov
and
mov
mov
dec
test
aas
es
stos
hlt
jl
outsb
push
mov
jl
push
inc
cmp
lds
adc
movsl
rcl
adc
jno
pop
jl
mov
ret
xor
pop
aam
adc
or
push
adc
cmp
lods
in
out
test
xchg
push
pop
aaa
xchg
sub
push
pop
pushf
and
std
es
xchg
std
sbb
push
loope
fs
jmp
sub
int3
push
jns
pop
sti
fs
cmp
shl
lcall
in
push
shlb
sub
cli
adc
push
mov
ret
fs
mov
movsb
test
mov
stc
jnp
or
sub
sar
xor
in
jmp
outsb
mov
hlt
dec
mov
cs
xchg
cltd
inc
jno
out
stos
movsl
push
in
dec
mov
cmp
jns
leave
jo
test
add
aas
std
cmp
ret
inc
out
inc
xchg
sar
sbb
ja
jge
fdivrp
pusha
icebp
mov
pusha
cltd
add
push
loop
in
mov
mov
or
hlt
and
jne
dec
push
pop
jl
ds
xor
pop
int
mov
sbb
loopne
andb
jbe
daa
lcall
ja
ss
stos
out
stc
or
pop
ss
mov
push
pop
and
and
cmp
dec
mov
and
leave
or
mov
icebp
pop
mov
adc
xchg
adc
dec
cmp
sbb
push
dec
mov
js
notb
dec
repz
idivb
jno
cltd
inc
fistl
mov
mov
lret
lcall
adc
mov
test
pop
pop
shrl
in
cwtl
aam
and
lods
scas
push
dec
lcall
pushl
ss
jge
and
mov
inc
ljmp
divl
dec
hlt
push
mov
out
add
xor
daa
dec
inc
and
push
jb
mov
clc
arpl
xor
ja
sub
and
mov
or
lods
lds
lret
sbb
scas
mov
sahf
insb
ljmp
notl
push
jge
push
fcom
repnz
repz
icebp
test
jmp
xor
shlb
xchg
push
sub
fldenv
gs
jae
xor
jns
push
mov
ss
inc
dec
mov
test
dec
lds
movsl
mov
filds
mov
out
xchg
xchg
gs
stos
movsl
test
and
negb
leave
inc
xor
imul
xchg
inc
jp
xchg
int
pusha
subb
cmp
stos
aad
xlat
out
xchg
mov
mov
loopne
ss
fsubrs
pop
cmp
cmp
pop
cmp
filds
push
loopne
fdivrl
add
push
mov
sub
and
mov
push
pop
inc
cwtl
cmp
rclb
mov
and
ds
mov
inc
mov
sbb
xchg
clc
incb
jge
fstl
or
out
and
rcl
cmpsl
clc
scas
adc
sub
or
mov
iret
in
or
jecxz
fsubrl
not
sbbl
subl
push
pop
ficoml
test
std
popf
in
cmpsb
dec
mov
mov
fisubl
mov
fadds
repz
xor
jg
dec
mov
outsb
orl
hlt
cmc
mov
das
pop
rcll
loopne
sbb
push
cmp
rorb
push
xor
leave
adcb
mov
xorl
je
ret
ds
outsb
cmp
mov
cmp
inc
adc
or
jle
shll
xchg
and
popf
pop
sbb
sbb
xchg
mov
mov
inc
loop
into
mov
movsb
cld
into
or
xchg
xor
add
in
pop
sahf
jp
das
mov
jo
mov
pop
jle
loopne
rclb
jne
pusha
xchg
inc
mov
fwait
fwait
sbb
mov
lcall
fdivrs
jge
xor
nop
rclb
mov
mov
rdtsc
xlat
mov
push
add
cmp
scas
repnz
repz
test
jecxz
loop
fnstcw
lods
leave
mov
rorb
mov
adc
xchg
cld
sbb
pop
cmp
adcl
cmpsl
jle
stos
iret
dec
cmp
pop
sar
mov
aaa
xor
cmp
add
fdivrs
dec
inc
jmp
mov
jmp
sbb
dec
pop
adc
fwait
push
imul
mov
mov
sub
lahf
add
jb
ljmp
mov
loop
adc
sbb
cs
ljmp
mov
mov
jmp
sub
and
insl
sbb
push
adc
push
sub
pushf
cmp
cmc
xchg
add
sub
cwtl
sub
or
dec
xlat
leave
inc
jle
adc
push
rorb
js
mov
push
enter
mov
shlb
ret
push
xchg
std
es
pushl
sub
jb
pop
pop
test
into
out
push
xchg
mov
sub
test
dec
loop
push
inc
push
roll
insl
out
ret
pop
adc
push
repz
addr16
loope
mov
adc
shrb
sub
inc
sbb
push
xchg
fsub
and
sti
popf
and
sub
loop
mov
pusha
test
push
fwait
mov
cmp
jp
cmp
inc
cmp
mov
leave
sub
push
cmp
dec
add
dec
and
add
cmp
or
cwtl
out
icebp
test
fisttpl
call
dec
jno
pcmpeqw
mulb
incl
std
insb
in
xor
xchg
jle
aaa
loop
xchg
out
pop
sbb
push
or
lds
adc
push
xchg
stc
fpatan
ucomiss
inc
xchg
push
adc
sub
insb
sbb
cmc
test
push
dec
cmpsl
pop
pop
andl
daa
mov
leave
push
das
fcomps
cmp
sub
pop
mov
push
xchg
pushf
add
adc
mov
fcmovnb
mov
iret
lcall
into
lods
adc
dec
xor
mov
arpl
mov
add
push
or
hlt
cmp
cmp
cld
sub
out
sbb
push
daa
mov
mov
jp
call
xchg
movsb
jo
popa
jl
add
leave
mov
mov
sbb
leave
mulb
hlt
sbb
aas
mov
dec
mov
add
adc
insl
mov
les
pop
out
lret
inc
fwait
scas
test
inc
test
es
shl
fwait
or
ja
popf
xor
daa
push
stc
lahf
add
jae
mov
movsl
push
push
adc
mov
daa
jp
push
xlat
pop
sbb
sbb
jb
add
pop
jbe
or
int3
js
mov
fucom
sbb
xor
cltd
cli
inc
icebp
jecxz
dec
dec
push
test
adc
cmp
test
mov
setns
mov
dec
enter
in
in
mov
les
mov
hlt
jb
push
cmp
sti
lea
shrl
sbb
jl
pusha
int3
sub
push
cltd
push
imul
mov
fwait
and
sbb
lahf
sbb
push
mov
jo
out
jb
subl
and
push
xchg
int3
les
rclb
mov
xchg
dec
bound
sbb
or
pop
add
xor
cs
inc
aas
cmpsb
push
push
divb
lds
cmpsb
push
in
shrb
imull
sub
sbb
pop
ja
mov
in
mov
sub
outsb
outsl
ds
mov
and
sub
cmp
xor
aam
push
xor
dec
mov
mov
and
jmp
jo
mov
inc
std
jns
and
adc
inc
cli
imul
sub
ret
sbb
arpl
divb
mov
dec
xorb
ja
add
in
pop
fdivrs
out
add
aaa
inc
mov
or
add
pop
cli
sbb
lahf
mov
push
xchg
imul
xor
in
aaa
ror
mov
cmp
icebp
in
jmp
fs
or
movsl
adc
cmpsb
fwait
mov
sbb
fsubl
lahf
enter
cld
outsb
pushf
sbb
and
cmp
lds
enter
nop
adc
xor
jp
cmp
xchg
push
repz
inc
stc
inc
test
mov
xor
rcrl
ss
jp
into
mov
repz
jge
test
in
sub
loop
mov
icebp
lahf
jge
mov
fdivl
cmp
inc
ret
add
push
push
mov
adcb
jp
push
imul
xor
rcl
loopne
iret
and
divb
xchg
repnz
add
add
fdiv
jle
cmp
xchg
inc
cli
shrb
in
and
mov
dec
aas
testl
in
fsts
mov
stc
int3
ret
clc
jae
sub
repz
inc
into
inc
or
jg
cmp
and
xor
loopne
push
xor
xchg
dec
cmc
sahf
push
lds
das
daa
cld
bound
push
movd
outsb
adc
jno
adc
or
mov
jae
pop
add
cmpl
js
mov
daa
adc
xchg
inc
add
xor
int
not
aad
xor
pop
cld
les
jle
dec
xor
je
xchg
dec
cmp
and
sti
inc
aas
lock
dec
add
xlat
dec
mov
mov
test
xchg
out
fdivl
adc
outsb
scas
push
jge
jge
mov
and
rcl
jmp
dec
inc
ss
lods
jge
sbb
lcall
rcrl
add
jns
mov
xor
sbb
lret
repz
add
add
mov
mov
iret
loopne
in
jb
push
lea
movb
inc
xchg
loope
stc
out
popf
pop
rorl
inc
mov
inc
lods
mov
lret
cmp
pop
push
or
pop
xlat
sub
fcompl
mov
popf
lahf
mov
ret
xchg
ret
shl
sahf
xlat
jg
jo
int
mov
or
ss
mov
addl
std
cmpsl
inc
xchg
mov
sub
sub
icebp
leave
add
jne
fs
mov
push
sarb
or
int
pop
shlb
iret
add
xchg
stos
inc
and
xlat
sbb
mov
push
mov
fists
pop
xor
xchg
fucomip
outsl
test
mov
cld
rcrl
pop
cltd
xchg
inc
incb
or
inc
lahf
mov
xchg
xchg
fidivl
js
push
int3
mov
inc
popf
stc
pushf
test
lea
mov
adc
add
pop
add
lcall
sbb
jo
jge
xor
sub
insl
pop
test
shlb
divl
scas
mov
insl
dec
insb
into
mov
xchg
dec
jnp
lret
sti
popa
pop
out
out
stos
mov
xlat
and
sub
xor
shl
inc
pushf
push
add
mov
jmp
cli
xchg
pop
jecxz
and
mov
mov
xor
ljmp
fldl
sbb
iret
jecxz
mov
or
cmp
test
xor
lock
push
adc
push
push
jns
xor
mov
jle
cmp
push
and
loope
fdivrs
daa
inc
sbb
shll
sub
push
bsf
cld
in
pop
pop
inc
mov
push
int3
out
cmp
push
adc
push
std
scas
pop
nop
push
movsb
sahf
pop
xchg
cmpsl
fsubrs
xchg
mov
push
out
test
fnstenv
add
push
mov
lcall
fmull
gs
daa
push
cmp
incb
xchg
cmp
icebp
adc
sub
jmp
pop
sbb
jbe
dec
cld
sub
ja
mov
in
je
lock
xor
aaa
andl
push
xor
aad
jmp
xorl
aam
into
dec
ds
mov
push
jno
imul
jns
pop
iret
out
or
daa
and
xor
shll
cmp
out
int3
addr16
add
pushf
mov
arpl
imul
sub
sub
adc
cld
scas
push
addr16
addr16
and
push
fcompl
cmpsb
inc
inc
out
fwait
sarl
addr16
sbb
sbb
and
jecxz
insl
or
and
push
xchg
push
sbb
jnp
mov
test
test
loop
mov
dec
jno
sub
aad
xchg
mov
dec
iret
add
sarb
ja
jg
dec
dec
pop
push
push
xor
cli
pop
out
shll
lret
iret
and
in
push
cmp
xchg
cltd
in
jnp
xor
insl
mov
arpl
sbb
pop
scas
insl
roll
dec
sbb
mov
mov
sbb
pop
scas
mov
test
push
mov
bound
pop
pop
gs
push
das
xor
mov
js
mov
popa
push
fldt
inc
mov
testb
fwait
jge
adc
int3
out
pop
pop
shlb
xchg
jl
arpl
mov
mov
scas
out
mov
xlat
pop
shrb
nop
cmp
shrl
sub
mov
stos
push
sub
adc
cwtl
and
mov
cmpsl
mov
or
cld
or
mov
imul
sahf
push
mov
dec
mov
and
jmp
mov
movsl
or
test
aaa
and
mov
iret
fstpt
sub
rcrl
mov
iret
sbb
gs
sbb
mov
nop
push
insb
lods
aas
test
cmpsl
cs
push
sahf
sbb
mov
mov
cmp
imul
decl
push
pop
or
jo
scas
clc
inc
jns
sti
mov
xor
adc
mov
mov
stc
cmp
icebp
mov
mov
cmpsb
and
jmp
rep
xor
push
mov
xor
xor
xor
imul
xchg
pop
inc
popf
pop
xchg
lret
jge
repz
pop
jne
lcall
lahf
div
ljmp
mov
and
mov
repz
add
adc
stos
imull
push
fwait
lea
pop
cmp
int
push
imul
mov
mov
mov
loop
lock
int3
scas
inc
xchg
pop
push
fistpll
call
jmp
add
pop
aad
mov
int
sbb
jp
loope
and
rorb
pop
or
imul
push
push
adc
and
jge
cld
push
push
je
cwtl
je
dec
adc
int3
or
sub
push
scas
into
sub
data16
cmpsb
xor
add
lock
lcall
aaa
sbb
aaa
xchg
mov
fisttpl
jae
or
das
push
cmp
out
cmp
out
jb
lds
sub
movl
inc
imul
imul
pushf
gs
push
popf
loope
cltd
mov
sarb
mov
lds
dec
shrb
add
incb
add
cltd
scas
loopne
aaa
popf
push
fstpt
call
and
jge
push
orl
and
push
mov
es
sub
xlat
leave
mov
dec
or
pop
push
aam
lods
in
or
cmpb
imul
xor
rol
sbb
insl
insb
je
fmuls
dec
jg
mov
in
pop
sbb
add
add
in
inc
add
push
sub
lahf
iret
cmpb
pop
mov
mov
xchg
loop
stc
mov
push
mov
xor
pushf
pop
repz
cmc
xchg
mov
push
into
xchg
xchg
xor
add
sub
outsb
std
add
stos
repz
push
inc
imul
pop
add
inc
jp
pop
dec
aas
xor
ljmp
dec
sbb
cs
fildl
mov
mov
test
add
cmp
dec
test
and
imul
int
pop
rclb
cmp
fnstenv
xlat
mov
das
jo
hlt
mov
pop
xor
push
sarl
cld
fcompl
testl
push
jb
sbb
sub
jl
lea
or
jne
push
mov
sbb
in
xchg
add
dec
cmpsb
mov
dec
sbb
or
or
lahf
mov
or
or
pop
sub
movsb
cmp
inc
stos
jno
xchg
cmp
ds
js
sub
cmp
xchg
push
aad
adc
sub
pop
push
aad
xchg
sbb
or
jge
mov
add
out
cwtl
add
aam
ss
loopne
dec
in
fdivr
mov
mov
ja
sti
into
jno
jp
adc
popf
inc
mov
dec
ss
and
rcll
es
mov
fldt
shll
xor
push
xor
imul
jle
sbb
pop
call
mov
mov
xor
cld
std
popa
dec
std
arpl
mov
pop
xor
pop
maxps
push
adc
les
adc
js
cs
push
xchg
add
adc
subb
mov
cs
dec
adc
sub
lds
lea
mov
jne
std
into
mov
test
mov
sub
xor
jns
xchg
xchg
mov
lahf
cltd
inc
mov
stos
test
mov
sub
jnp
test
das
mov
mov
mov
das
mov
repz
fcomps
mov
mov
xor
or
mov
push
arpl
jo
jecxz
jbe
mov
xchg
add
inc
jg
test
sbb
mov
adc
cmpsl
mov
in
int
cmpsb
lahf
mov
mov
pop
mov
leave
icebp
lahf
ja
pop
xchg
xor
sbb
outsl
imul
inc
pop
xorl
sahf
xor
pop
out
add
xcrypt-cfb
cmpsl
and
xchg
mov
popf
std
mov
into
cmp
shl
push
sbb
rorb
sub
lock
or
or
aam
pusha
fs
sub
in
sbb
xlat
dec
pop
jmp
lds
cmp
cmpsb
mov
pop
sub
inc
and
cmpl
stc
nop
rclb
push
scas
pop
mov
push
mov
and
adc
sbb
ds
in
adc
jp
aaa
sub
outsl
pop
cmpsl
test
ret
mov
push
inc
fxch
mov
push
inc
jl
cld
mov
divb
pusha
sbb
jnp
enter
xchg
jne
aas
jp
ja
and
ja
xchg
sub
and
mov
add
ja
sti
rolb
pop
push
hlt
dec
sub
shrb
sbb
outsb
xchg
sub
and
cmp
xor
dec
insl
push
pop
pmaxub
push
out
inc
jne
negb
dec
dec
repz
xor
sub
mov
add
jmp
cmc
xor
mov
data16
cmp
aam
cmp
xchg
mov
lahf
dec
push
xor
in
mov
sbb
xor
enter
in
inc
dec
and
xchg
out
sbb
test
mov
mov
mov
mov
dec
in
out
xchg
les
jl
mull
inc
adc
mov
jo
rorb
xchg
es
dec
jno
mov
scas
cli
cmc
push
dec
and
cmpb
jns
test
ljmp
sub
push
pusha
lret
in
js
movsl
xchg
inc
fcmove
dec
in
sarl
leave
push
pop
add
mov
test
pop
aam
push
sub
cmpsb
jg
aad
in
push
mov
notl
jecxz
fldl2e
je
xlat
pop
lea
pop
mov
or
outsl
jle
dec
lods
fs
push
popf
mov
js
dec
jns
mov
mov
es
sbb
fcmovbe
adc
incb
xlat
add
test
sbb
not
icebp
notb
es
mov
pop
pop
cli
push
xor
xor
add
mov
pop
push
lret
and
xor
in
sbb
lods
fwait
aaa
stos
in
mov
sub
dec
fwait
bound
or
dec
xchg
adc
ds
test
int
les
pop
nopl
push
push
xor
js
jle
and
out
mov
ss
aas
js
inc
jecxz
cmc
add
push
adc
push
inc
repz
mov
into
icebp
imul
mov
les
push
or
sbb
cli
push
scas
out
add
clc
add
pushf
pop
lock
or
je
push
jl
adc
sahf
test
dec
push
sub
mov
fildll
cltd
xchg
inc
out
std
jecxz
sub
jg
mov
sbb
push
les
cmp
dec
mov
iret
push
push
lds
mov
inc
jns
mov
movl
lea
mov
adc
dec
int
jmp
xor
mov
clc
aam
push
adc
xchg
mov
sbb
adc
mov
mov
mov
hlt
ficomps
xchg
adc
popa
repnz
or
pop
push
dec
mov
cmp
sbb
popf
out
mov
aaa
addr16
xchg
rolb
insb
dec
or
stos
sub
mov
dec
xor
pop
sbb
ja
pop
test
mov
and
sbb
imul
lea
jb
ljmp
imul
cmp
data16
enter
add
push
roll
adc
into
cmp
and
std
cmpsl
pop
cltd
icebp
cmc
cmpsb
adc
add
xor
xchg
cmp
iret
sbb
cwtl
lret
cmp
sbb
outsb
fmulp
stos
lock
mov
int3
les
test
and
mov
sub
bound
jnp
aaa
add
pop
ret
in
mov
push
add
pusha
xlat
cmpsb
push
adc
mov
xchg
rcrb
pop
mov
ds
lea
pop
stos
xchg
push
test
cld
push
mov
sub
push
xor
out
xor
sbb
int
sbb
push
jno
lods
mov
push
ljmp
popf
cmpsl
inc
cmp
sbb
js
mov
jl
rcll
jle
ret
cmpsl
or
pop
stos
mov
fs
cmc
inc
mov
jl
cs
enter
push
scas
ja
in
mov
lcall
stos
mov
pop
mov
das
scas
sub
inc
repz
aam
pop
dec
cltd
shlb
popf
dec
mov
push
fwait
sub
sbb
test
ret
in
adc
xor
in
push
test
pop
ljmp
cltd
aas
cli
inc
mov
test
pop
aas
aaa
adc
in
pop
pop
repnz
cmpsb
pop
push
xlat
cmp
adc
pop
daa
xor
ret
loop
arpl
in
cmpb
repnz
bound
scas
cmpsl
push
rolb
pop
mov
and
mov
mov
daa
lock
loope
cs
lods
adc
mov
mov
push
adcl
lods
push
cmp
add
inc
lea
ds
out
gs
mov
daa
mov
or
sub
xchg
or
pop
loopne
push
mov
sbb
inc
icebp
inc
or
gs
movsl
adc
pop
fwait
add
aaa
jl
add
jb
push
pop
repnz
fisubl
push
jl
push
ror
push
push
cs
jae
in
rcrb
fildl
pop
adc
adc
popl
pop
hlt
out
repz
clc
dec
mov
sub
insb
xchg
ja
jbe
dec
cmpsl
xor
fdivs
pushf
aas
and
mov
dec
push
shlb
jno
xor
movsb
int3
ljmp
lret
fsub
push
xor
and
jbe
and
pop
in
mov
adc
ja
imul
pop
mov
mov
lds
mov
popf
scas
jo
out
mov
roll
jae
sub
aad
cld
stc
lcall
cmc
setp
pop
xor
inc
mov
dec
xchg
pop
jl
adc
pop
mov
push
nop
test
dec
or
repz
mov
jne
gs
push
add
lret
ret
cmp
fisubrl
shrb
inc
arpl
mov
lret
ja
lcall
cmp
inc
stc
or
mov
das
fdivrs
ljmp
push
cli
push
popf
inc
jg
pop
jb
mov
adcb
jmp
dec
ss
stc
rorb
xchg
fsubs
repnz
push
int3
daa
aaa
lcall
addr16
lods
movsb
fwait
jge
addr16
sbb
xor
adc
int
adc
rorl
loop
repz
and
mov
jmp
jmp
xor
sahf
and
jmp
fsubs
fdivl
pop
das
test
fldt
jbe
fadds
je
or
test
cs
mov
enter
insl
out
movsb
aas
int3
mov
fldt
xor
mov
sub
or
inc
sub
mov
rcrb
xlat
push
enter
cmpsb
rclb
shr
xor
jo
lds
leave
mov
xor
ds
stc
cmc
jp
mov
or
cmpsl
cmp
stos
mov
dec
add
mov
lret
adc
jne
ds
mov
mov
aaa
sub
icebp
cmp
fldl
test
push
int3
cmp
mov
ret
sbb
mov
sbb
jl
lds
stos
lcall
std
aad
sbbl
in
in
and
add
sub
mov
xor
jns
dec
repz
push
and
push
decl
adc
mov
pop
xchg
repnz
iret
xor
sbb
ret
sbb
ss
jno
sub
jb
mov
mov
out
adc
add
adc
mov
fnsave
imul
int
pop
cmc
xchg
addr16
cmp
jns
out
mov
enter
or
cmp
push
push
test
add
and
add
sarl
es
xchg
mov
or
cmp
scas
inc
pop
in
inc
cmpsb
outsl
xor
jp
dec
xchg
add
and
push
xor
lds
mov
call
xchg
into
xor
xchg
and
mov
jmp
sbb
pop
cli
xchg
mov
testb
mov
jmp
xor
xchg
mov
push
cmp
jecxz
pop
das
icebp
mov
roll
sub
bound
inc
leave
fisttpl
movsb
subb
and
nop
pop
rcrl
or
out
pop
sar
ficompl
subl
mov
lahf
ficoml
xchg
loopne
sub
or
lcall
xchg
shl
stc
mov
mov
inc
orb
jno
inc
push
push
mov
dec
shlb
pop
cli
inc
das
addr16
sbb
lods
in
sub
xor
sub
movsb
orb
mov
je
push
push
push
clc
jp
nop
mov
xchg
mov
push
out
sbb
mov
cmp
push
lock
rolb
test
xor
sub
mov
xchg
and
pop
inc
cmp
fmull
les
lods
push
pop
outsb
and
insl
movl
sti
dec
test
xchg
mov
xchg
sbb
movsb
sub
xor
mov
or
sbb
js
push
adc
push
sub
mov
mov
dec
pop
mov
pop
push
leave
sub
jle
jmp
cs
xor
xor
pushf
addr16
dec
out
scas
mov
fdivrs
mov
xor
inc
cmpl
sarl
xchg
ret
in
dec
add
mov
adc
and
sub
iret
adc
mov
or
mov
mov
dec
or
mov
fisubl
jmp
lahf
xorl
fldt
mov
mov
fs
jae
cld
ret
sub
out
xchg
sbb
iret
clc
in
mov
push
cwtl
jle
or
sub
cmp
std
loopne
ljmp
cmp
add
cmc
jecxz
fsubrs
or
scas
mov
cwtl
mov
das
jmp
enter
fisubrl
aam
lret
in
jmp
mov
jo
mov
mov
jbe
xor
jno
jle
insl
mov
fadd
movsb
movsb
inc
loope
int
cmp
adc
sub
pop
orl
jle
push
movl
dec
dec
xor
push
pushf
adc
add
inc
rclb
inc
mov
push
lods
mov
mov
popf
insl
je
aaa
pop
adc
push
fisttps
je
test
pop
aaa
insl
xchg
pop
aaa
int
push
mov
popa
test
outsb
mov
xchg
cwtl
loop
or
stos
mov
int3
je
pop
mov
sub
ucomiss
pop
out
scas
pop
and
push
call
hlt
std
push
or
movsb
xchg
iret
mov
or
and
stos
or
push
push
cmp
frndint
sbb
jp
xor
cmp
dec
aam
push
jo
or
jbe
mov
dec
fisubl
pop
std
mov
int3
pop
or
add
shrb
in
cmpsl
pop
push
jb
mov
xor
or
mov
cmc
xor
xchg
mov
shrb
subb
xchg
int3
les
bound
jmp
js
push
scas
mov
aaa
movsb
xchg
xor
xor
fs
mov
mov
add
and
push
cmp
gs
adc
jle
mov
lcall
fwait
pushf
cltd
pop
xor
push
mov
out
int3
movsl
mov
sub
sub
adc
mov
in
and
notl
pop
mov
xchg
inc
popa
adc
dec
sbb
out
fldcw
push
sti
or
cmp
mov
or
xor
rcl
xor
mov
sub
icebp
cmp
sahf
and
mov
cmc
stos
cmc
xor
dec
pop
out
mov
dec
loopne
insl
aad
enter
enter
jecxz
or
adc
in
xchg
dec
fisttps
sbb
enter
call
mov
xchg
cs
faddl
lods
lock
sahf
xchg
push
jmp
mov
dec
shl
pop
adc
push
dec
cli
aad
push
xchg
add
movsb
out
insl
and
std
jae
pusha
lock
cmc
in
dec
test
mov
jp
mov
rcll
mov
mov
push
scas
ret
dec
int3
mov
push
sub
and
inc
out
mov
fstpt
dec
lods
je
or
jno
nop
add
mov
icebp
mov
and
inc
xchg
pop
push
loop
and
add
jne
jmp
jl
jmp
xor
pop
adc
cs
cmp
fstps
or
fisubs
cli
mov
inc
pop
mov
scas
stos
or
add
scas
cmc
mov
sub
xchg
push
pop
or
or
adc
lret
test
adc
mov
imul
pop
inc
pop
cmp
test
push
add
jnp
rorl
xchg
std
mov
sbb
mov
sbb
cld
mov
mov
mov
out
rcll
iret
sub
ficompl
or
cmp
flds
adc
xor
inc
adc
icebp
fmull
scas
out
cmp
lahf
adc
hlt
and
inc
xchg
mov
fisttpll
mov
add
pushf
cltd
cld
pop
lahf
jbe
ljmp
in
or
inc
mov
mov
jmp
testl
sahf
add
fs
push
scas
testl
lock
pop
ret
mov
or
inc
cmp
cmpsl
aas
roll
jns
cmpsl
aas
jnp
push
repz
popa
dec
jae
jl
jecxz
mov
cld
mov
cmp
push
pop
adc
pusha
std
nop
pop
cld
mov
aam
add
pop
mov
imul
sbb
mov
mov
sub
jge
pop
lcall
jb
push
cmp
notb
jbe
jp
scas
es
add
sub
lods
and
adc
sbb
jbe
inc
adc
mov
inc
xchg
add
orl
adc
mov
sub
jle
jns
sti
cli
arpl
lret
dec
cmpsl
mov
push
insb
push
pop
arpl
xchg
rorl
and
xchg
popa
outsb
out
stc
pop
jo
or
pop
out
sbb
sahf
andnps
cltd
add
fiaddl
sbb
in
ljmp
testl
cmpsl
fcmovu
pop
cld
mov
push
mov
push
outsb
roll
pop
xor
movsl
shlb
push
xchg
adc
xor
sbb
mov
fsts
insl
mov
adc
mov
xchg
rolb
lahf
mov
push
inc
pop
jmp
loope
ljmp
enter
gs
outsb
cmp
scas
xor
sahf
jo
out
xor
cltd
shr
les
sub
test
sahf
mov
xchg
mov
jge
xchg
lods
ret
add
movsl
mov
jmp
int
xchg
fldt
test
mov
cmp
mull
test
mov
addb
xchg
bound
scas
add
inc
xor
insl
mov
and
cmp
sub
std
repnz
adc
or
out
mov
cmpsl
imulb
lcall
stos
shll
dec
jg
test
test
mov
fwait
daa
xchg
mov
lock
dec
test
mov
les
je
dec
push
ss
cs
cmp
nop
dec
pop
addr16
ss
movsl
lock
jae
or
mov
rcl
addr16
jo
lret
cmp
ljmp
mov
cs
mov
pop
mov
sub
test
daa
add
and
movsl
hlt
sub
jg
mov
xchg
sub
mov
hlt
hlt
fcomip
pop
pop
call
push
push
aaa
fucomp
sub
rorl
fchs
lcall
sbb
das
aam
xchg
mov
mov
dec
push
daa
aad
shlb
mov
lods
sub
add
cmp
cmp
mov
add
sbb
xor
sbb
bound
out
jae
fdivrs
shl
push
ss
adc
sbb
es
or
cld
mov
inc
jp
fwait
sub
xlat
sbb
int
mov
pop
mov
out
pop
fbstp
in
add
mov
jo
mov
rcrb
mov
mov
mov
out
movsl
sahf
imul
clc
add
arpl
scas
cmpsb
pop
test
loopne
movsb
imul
inc
push
push
push
imul
in
mov
scas
mov
sbb
andl
ds
push
imul
cld
mov
or
les
lock
mov
and
jnp
pop
testl
inc
fwait
xor
das
xchg
loop
pop
dec
pop
bound
xlat
ja
sub
lea
or
xchg
out
add
pop
psubusb
arpl
jmp
inc
xchg
test
mov
data16
cmp
jb
lret
mov
sbb
pop
repz
sub
sub
jp
dec
sbb
fdivl
lea
push
push
inc
mov
xlat
inc
push
das
scas
xor
xchg
sbb
sbb
mov
mov
mov
fimuls
cltd
fiadds
repnz
cmp
push
jmp
ljmp
popf
push
ljmp
pop
cmp
ds
jg
sahf
cli
cmp
lea
or
aaa
stc
cmp
lods
loopne
pop
mov
push
cmp
fdivp
ds
aas
out
xchg
sub
minps
or
xchg
mov
out
mov
bswap
lahf
mov
adcl
ret
jne
push
decl
jge
jbe
je
or
mov
fwait
call
outsb
ret
push
test
pusha
sbb
sbb
ret
jmp
shrl
popa
mov
popa
es
mov
lahf
or
push
adc
pushf
es
outsl
repz
jle
xor
push
cmp
icebp
xchg
fnstenv
dec
xorl
mov
out
sbb
pop
jmp
xchg
xchg
lcall
test
xchg
aam
or
pop
aaa
daa
movsl
push
pop
jg
movsw
mov
sub
adc
sub
fwait
in
dec
dec
or
stos
mov
mov
in
add
js
neg
mov
pop
adc
rol
adc
mov
pop
or
dec
sub
mov
and
mov
ss
sub
cmp
loop
jns
mov
pop
adc
pop
movsl
mov
push
or
rcrb
stos
jae
shlb
in
ja
rorb
sbb
movsb
idiv
jo
imul
sarl
stos
jns
add
pop
std
and
adc
call
nop
aaa
sbb
lods
sub
inc
ss
pop
gs
int3
enter
repnz
out
and
mov
mov
out
xchg
add
dec
testb
jecxz
stos
repnz
stc
push
jne
adc
test
daa
sarb
add
int
cmpsl
test
sti
xor
xchg
mov
jmp
push
mov
hlt
addr16
xchg
ret
xchg
xchg
sarl
dec
shll
xchg
sub
mov
or
loopnew
mov
loop
lods
stos
inc
mov
ftst
pop
movsl
shrb
test
xchg
dec
loope
and
sub
into
mov
into
xchg
pop
and
inc
xchg
ja
jb
popa
out
mov
mov
pop
outsb
addr16
inc
mov
sub
mov
or
js
sbb
ljmp
fs
add
sti
sbb
pop
pusha
lcall
aaa
fisubrs
add
loopne
rcll
pop
ror
sarl
jb
xor
jecxz
dec
jns
sti
sar
fstps
jb
idiv
and
popa
lcall
addr16
mov
mov
pop
insb
movsb
cmp
push
ja
sbb
bound
jl
jle
sub
bound
mov
mov
xchg
outsb
mov
sbb
pop
aas
jnp
fisubrs
fnstsw
xchg
mov
xor
js
js
in
jnp
xchg
rcrb
addb
aad
cmpsl
sti
pop
xor
xlat
xchg
xchg
das
push
dec
mov
movsl
lock
cmovp
sub
daa
add
or
push
push
bound
jb
cmp
pop
loope
cmp
inc
sbbb
shrb
data16
pop
daa
pop
jnp
add
sub
imul
xchg
pop
test
push
cmc
jp
cmp
inc
mov
fstpt
arpl
xor
aam
push
dec
clc
pop
add
sbbl
xchg
out
push
add
orl
insb
jnp
jmp
inc
push
js
sbb
xorb
je
dec
and
mov
lahf
sub
mov
push
sbb
cmp
andl
andb
mov
call
pop
add
and
sub
jp
je
or
xchg
jecxz
jle
jl
jg
mov
inc
push
mov
mov
rorb
xor
call
or
or
pop
pop
sbb
ret
out
mov
jmp
fisubs
sbb
aad
dec
adc
ja
aam
add
iret
inc
and
out
push
adc
stc
ret
clc
lock
or
out
mov
arpl
or
loop
jmp
sbb
loope
add
inc
mov
inc
fwait
into
std
ret
shl
xchg
xor
add
pop
xor
sete
xchg
dec
cwtl
imul
outsb
or
pop
ljmpw
xchg
fldt
inc
cs
cmp
in
gs
adc
or
stos
jl
jl
data16
leave
mov
xchg
ret
xor
add
jp
jp
roll
adc
xchg
jns
inc
rcrl
mov
pusha
lahf
cmp
push
add
push
jno
jno
insb
sbb
xlat
add
icebp
in
or
jno
shll
js
mov
mov
and
fdiv
inc
cmp
fwait
cmc
shrl
sahf
loope,pt
out
cli
inc
sbb
scas
nop
stc
adc
fwait
jno
and
je
sbb
xor
in
inc
add
cmp
mov
jb
dec
push
aad
push
popf
lret
rorb
xor
cmp
mov
mov
sbb
jo
xor
gs
lods
dec
pop
inc
xchg
dec
imul
pop
fidivl
aas
jecxz
sbb
jb
fsubl
ficoms
int
repnz
or
pop
popf
xchg
xlat
or
and
stos
inc
sbb
and
cmp
dec
mov
xchg
mov
adc
jno
cmp
or
dec
or
and
sub
and
popf
ds
push
icebp
pop
shrb
inc
or
ja
pop
test
lock
test
aaa
push
test
gs
call
lods
add
outsb
lahf
bound
mov
pushf
mov
stos
movsb
lcall
scas
sar
addb
sbb
inc
mov
outsb
and
fisubs
sbb
fisubrs
push
jp
pop
rolb
loopne
cmp
cs
inc
jecxz
mov
insb
xchg
sub
lods
sub
jge
push
cmp
adc
add
out
dec
sbb
cwtl
or
dec
aad
sbb
mov
lret
inc
adc
in
imul
pop
cmp
and
jp
fisubrl
loopne
dec
pop
loope
cltd
arpl
jge
or
sub
and
jg
aam
loopne
push
cmp
push
sub
dec
test
cmovno
jo
push
cmp
lock
dec
lahf
cmc
popa
xchg
rcll
outsl
lret
test
movsl
sub
scas
adc
jbe
jnp
mov
popf
sbb
cmp
pop
push
xchg
out
sahf
mov
and
or
push
daa
jae
adc
xchg
cli
jle
hlt
jns
cmc
sbb
aam
arpl
cmpsl
cwtl
and
and
cli
aaa
ret
adc
mov
mov
push
inc
outsb
adc
imul
icebp
dec
sbb
jl
jmp
mov
add
adc
in
jg
and
pop
jg
sbb
mov
scas
jne
pop
movsb
sbbl
cwtl
sar
bound
add
fucomi
add
std
ficoml
nop
lcall
fisubrl
pop
enter
out
mov
lods
dec
movsl
add
or
dec
mov
lcall
cwtl
sarl
dec
movsb
and
sbb
push
cmp
test
cmp
sub
mov
inc
push
out
or
stc
mov
outsb
jns
xchg
test
aas
test
pmaxub
inc
or
scas
mov
rorl
jmp
jecxz
rolb
and
mov
dec
shll
mov
add
xor
push
xor
adc
pop
cmc
lret
aaa
test
int3
mov
mov
adc
xor
cmpsl
sbb
push
fwait
mov
sub
inc
mov
adcl
add
ss
imul
je
shrb
and
imull
imul
in
mov
icebp
xor
pushf
dec
jle
or
lahf
mov
mov
cmp
mov
push
or
sarb
imul
add
in
dec
cmc
push
xchg
cwtl
loop
and
sub
cmp
icebp
push
lds
mov
xor
or
rolb
mov
negb
xchg
mov
sbb
pushf
dec
adc
int
jmp
fisttpl
hlt
inc
fnstsw
or
cli
fmuls
mov
jmp
mov
daa
insl
pusha
cmp
inc
mov
dec
mov
jg
iret
movsb
jo
mov
in
mov
rcll
fwait
pop
xor
push
inc
dec
stc
scas
and
jae
arpl
push
daa
mov
inc
push
add
rorb
jecxz
cs
push
cmpl
push
btrl
push
mov
test
inc
xchg
mov
xor
sub
shll
xchg
pop
mov
int3
testl
inc
cmpsl
in
aad
outsb
xor
jb
testl
lods
pop
xchg
js
pop
and
stc
stos
or
mov
test
cmp
add
add
pop
fistps
shr
and
adc
stos
into
inc
icebp
or
adc
inc
mov
popf
cmpsb
pop
xchg
xchg
push
shrb
xchg
xor
pop
and
pop
enter
add
xor
mov
cli
push
sbb
bound
jns
and
movsl
or
sti
adcl
mov
stc
nop
es
cli
or
in
pop
fstl
imul
pusha
pop
cmp
jge
stos
or
pop
and
ds
aaa
loopne
subb
jmp
ds
adc
rolb
addr16
xchg
jg
outsb
dec
adc
repnz
dec
or
xchg
mov
xchg
jb
scas
out
cmp
add
arpl
push
cmp
push
aas
aad
mov
test
lods
iret
or
mov
pop
stos
jmp
and
int
push
pushf
imul
std
jle
insl
lea
xchg
cwtl
mov
orb
and
aam
or
fisttps
es
push
mov
shlb
jg
out
xor
or
adc
daa
add
shlb
adc
ds
pushf
jnp
pushf
out
out
ljmp
jmp
and
lahf
mov
mov
shrb
or
adc
sub
into
or
mov
aas
dec
mov
aaa
dec
push
popf
jns
mov
outsl
jl
cmp
inc
ja
lods
lcall
mov
sbb
xchg
mov
jg
movsl
faddl
roll
hlt
or
or
xchg
mov
rclb
shll
xor
mov
out
or
jbe
pop
push
roll
pop
jne
adc
sub
mov
imul
dec
sahf
push
pop
cmp
mov
mov
sahf
data16
repnz
dec
ud0
cltd
cmp
stos
addl
iret
xor
fisttpl
std
cs
push
icebp
pop
outsl
fidivrl
int3
lcall
sub
xorl
push
or
js
sbb
mov
iret
cmp
add
iret
xlat
shrb
mov
sub
inc
jmp
std
lahf
jp
sahf
sub
sub
push
cli
jp
ror
int
cmp
push
test
or
dec
call
ja
xchg
cld
dec
scas
xchg
jge
lcall
lret
sub
xchg
add
add
xlat
fcmovb
inc
xor
imul
mov
adc
shrl
push
jnp
xchg
push
push
lret
and
mov
mov
dec
dec
icebp
repnz
pop
dec
lahf
in
into
jle
lret
lods
dec
loopne
pop
push
and
je
xchg
fisttpl
push
mov
das
adc
pop
jb
in
out
testl
ja
scas
inc
loopne
shrb
js
inc
dec
scas
ljmp
push
aas
leave
jo
and
decl
lret
mov
pusha
mov
jmp
jnp
pop
lock
cmp
cmp
cmpb
push
aaa
pop
mov
lock
aam
js
xchg
in
in
repnz
mov
aad
mov
or
mov
sub
out
repz
mov
mov
cmp
xor
outsl
sub
xlat
dec
mov
and
ljmp
or
cld
inc
dec
push
jbe
or
bswap
shlb
jmp
dec
sbb
pop
sahf
xor
push
ljmp
pop
das
add
je
pop
andb
jecxz
sbb
cmpsb
loop
jecxz
shrl
xchg
icebp
cmp
lret
lcall
cld
mov
jne
sub
cld
mov
repnz
jle
jecxz
cmpsb
pop
jnp
xchg
pushl
push
lods
sbb
into
in
sbb
add
dec
ret
cmp
andl
clc
adc
pop
xchg
nop
into
pop
cli
push
xchg
lcall
fldln2
cs
jbe
mov
push
jg
push
nop
sub
lea
mov
push
into
ss
inc
inc
sbb
or
mov
pop
jg
lahf
pop
mov
dec
sbb
sbbb
cmp
shll
cs
xlat
mov
test
inc
xor
inc
int3
ljmp
mov
adcb
scas
test
push
test
jbe
jp
repnz
add
aad
pop
hlt
lret
xchg
pop
cmp
push
mov
jno
sti
ffreep
test
arpl
out
sub
add
insb
jo
cmp
imul
add
inc
fidivl
addb
faddp
sbb
in
pop
and
cmc
xchg
stc
and
pop
divl
cs
rorb
push
lret
sbbb
lock
rclb
mov
cmp
add
jbe
aas
sub
xor
idiv
or
ds
jge
imull
xchg
shr
dec
dec
push
sub
lods
sahf
or
pop
shrb
push
mov
sub
sub
das
loop
out
inc
addb
and
dec
xchg
aaa
pop
lea
aaa
ljmp
jge
cmp
rolb
enter
ja
mov
cli
jp
xor
inc
and
push
mov
jecxz
mov
jns
pushf
aas
xchg
pop
inc
xchg
jbe
pop
pushl
aas
repz
push
popa
lcall
outsb
movsl
mov
jp
scas
adc
mov
enter
inc
dec
xor
jmp
es
push
or
jne,pt
into
outsl
cmpsl
or
sahf
fisttps
imul
jge
subl
mov
push
les
add
jnp
outsl
mov
mov
jb
sbb
dec
sbb
out
into
lea
add
mov
call
out
popf
es
pop
lea
sahf
jmp
icebp
dec
out
aas
add
in
repz
jle
xor
push
clc
ss
jmp
mov
cmp
mov
pop
cmp
xchg
hlt
loopne
sahf
fstpl
adc
jb
test
jl
stos
dec
jb
data16
sub
xlat
xchg
or
sbb
adc
cmp
in
loop
pop
mov
add
rcr
insl
mov
outsl
rorl
and
xchg
xchg
mov
dec
dec
xchg
jne
lods
jle
insl
cmp
push
adc
mov
aad
mov
pop
add
dec
mov
nopl
jle
and
out
jge
mov
push
mul
push
mov
mov
sub
arpl
jae
jns
fadd
mov
xchg
and
movswl
loope
pushf
inc
pop
cwtl
xlat
fistps
xchg
xchg
int
push
xor
outsb
int3
scas
iret
pop
push
imul
insl
or
jbe
jge
cltd
cwtl
or
sub
mov
iret
sbb
xor
cmp
insb
stos
lods
adc
pop
mov
sti
movsb
pop
shll
and
adc
sub
into
lahf
adc
lret
rcrb
lock
fnstenv
mov
push
cmp
cs
icebp
adc
fwait
add
stos
xlat
inc
sbb
lcall
xor
test
lcall
mov
inc
push
scas
cmp
pop
adc
pop
repz
inc
pop
push
fdivl
dec
mov
rolb
inc
aad
outsb
jns
xor
mov
filds
je
dec
aam
mov
loope
rcl
pop
pop
mov
rol
outsb
ss
jae
push
fstpt
mov
mov
repnz
lcall
adc
sbb
xor
nopl
mov
mov
adc
ret
test
pop
push
imul
push
xorl
lret
jge
cmp
xor
add
clc
push
pop
pushf
fwait
mov
xchg
fldenv
jo
je
push
sbb
leave
divl
ds
out
pop
or
mov
out
cmp
add
dec
or
ror
popa
loope
xor
add
aaa
jmp
mov
out
jae
std
mov
add
xor
lea
add
dec
jp
das
jo
pop
je
jo
or
inc
push
les
movsb
sub
loop
pop
xorb
adc
and
aad
fisttps
and
mov
pusha
xor
iret
inc
loopne
cmp
push
dec
add
dec
jmp
test
pop
jmp
std
xor
lcall
pop
lds
push
adc
repnz
fwait
inc
mov
cmp
mov
sub
shlb
icebp
and
jmp
into
xchg
pop
ljmp
add
lret
inc
lret
jne
in
jmp
stos
cmp
scas
push
cmp
sahf
cld
jle
sub
inc
pop
push
add
movsb
inc
inc
adc
jno
inc
and
mov
xor
push
push
pop
mov
add
fs
pop
les
fsubrl
aam
push
test
bound
imul
aaa
leave
fsubrl
dec
sbb
sub
jb
sbb
mov
push
ljmp
push
int3
jecxz
jge
sbb
dec
add
out
ret
jno
xchg
and
aas
repnz
or
jge
arpl
or
xor
sub
mov
stc
out
outsl
cmp
fcomps
jle
sarl
mov
xchg
mov
and
cmpsb
xchg
dec
and
imul
inc
arpl
lds
dec
mov
out
adc
popa
push
jg
adc
sub
xor
cmp
xor
pushf
sub
outsb
ds
int3
dec
iret
and
mov
push
xchg
or
loope
lock
cmp
std
int
adc
add
lds
jae
xor
add
das
pop
dec
repz
notb
cmp
inc
test
push
das
stc
aad
sbb
sbb
and
inc
or
xor
decl
les
call
outsl
jbe
jecxz
push
test
add
fldcw
push
nop
mov
addr16
xchg
push
sub
cmp
mov
dec
cmp
mov
sti
dec
scas
inc
xor
sarl
out
scas
aam
aad
mov
xor
enter
xchg
or
push
pop
stos
sbb
xor
scas
icebp
stos
scas
mov
iret
and
pop
scas
ss
push
mov
subl
addb
rolb
xchg
jg
in
xchg
jnp
mov
push
test
cmp
xchg
roll
xor
aad
mov
rolb
xchg
push
xor
ss
aam
bound
cld
loopne
push
pop
push
add
fadds
sbbl
jge
xchg
jmp
test
mov
popf
inc
outsb
cwtl
sahf
mulb
lods
div
dec
add
pushf
lahf
push
in
adc
popf
push
scas
adc
add
out
mov
outsl
mov
xchg
stos
cli
cmp
inc
scas
sti
add
cmp
sbb
xchg
das
int
stc
aaa
mov
fwait
in
sbb
push
or
xchg
push
lret
sub
fs
ds
add
inc
push
sbb
int3
push
jge
jmp
mov
cmp
outsb
or
fwait
aas
cmp
mov
jecxz
jp
lods
and
mov
je
test
pop
xlat
mov
ds
orl
sti
int
xchg
xchg
sbb
mov
mov
or
cmp
stos
out
pop
test
jg
ljmp
insb
pop
pop
jno
pop
fisubl
fld
sub
ds
push
jmp
inc
ss
lahf
pop
mov
rolb
sub
inc
lock
pop
inc
or
sbb
dec
jbe
in
xor
int3
inc
pop
cmc
popf
ss
pop
out
insb
xchg
insl
jb
jg
adc
nop
out
mov
cltd
ja
jg
dec
push
ljmp
jb
js
js
pop
mov
insb
mov
fcmovu
bound
pop
lea
pop
icebp
mov
xchg
jge
xchg
ret
ss
movsl
aad
call
js
inc
jae
rorb
add
stc
mov
adc
cmp
sub
push
adc
mulb
das
mov
cli
xchg
sub
test
fildll
std
adc
sahf
pusha
pop
iret
cmp
test
sbb
adc
jae
dec
and
repz
inc
rcrb
sbbl
jl
fildl
cmp
lea
inc
adc
add
movsl
outsl
sub
std
dec
xlat
mov
dec
out
add
jo
sti
xor
aaa
xor
pop
in
cwtl
ljmp
fwait
xchg
outsl
or
scas
jmp
push
sub
cmp
xchg
add
xor
dec
pop
push
es
sub
push
mov
dec
jle
loope
or
ds
inc
fisttpll
pop
cmp
mov
sub
loopne
gs
mov
scas
cltd
out
cld
jecxz
outsb
arpl
mov
add
and
sbb
jl
dec
sbb
out
xlat
jecxz
cmp
jmp
pop
fwait
inc
pushf
mov
fucomi
jne
popa
sti
in
mov
mov
lods
sahf
pop
stos
loopne
and
xchg
pop
js
pop
frstor
jbe
cmpsb
push
xor
jp
jge
inc
mov
stos
adc
jbe
inc
in
push
das
or
divl
sarb
in
lea
and
ljmp
popa
test
lea
xor
mov
repz
sbb
sbb
in
pusha
adc
cmc
cmp
xor
test
lea
pop
mov
lock
clc
stos
stc
pop
mov
mov
data16
adc
lock
jle
mov
test
jo
insl
int
jbe
ds
inc
lods
jmp
add
pop
push
cli
fdivs
bound
ret
and
pusha
data16
in
decb
jne
mov
cli
jp
pusha
mov
scas
mov
iret
dec
jecxz
xlat
into
mov
inc
push
stos
out
mov
cmp
cmp
cmp
push
ffree
xor
push
pop
sub
cmp
in
inc
sub
lea
pop
das
jbe
les
pop
cmp
movl
add
cmp
das
cld
or
test
ficoms
sbb
mov
pop
loope
cwtl
push
fsubrs
pop
push
orl
je
fwait
int3
cmc
popf
stc
dec
lret
cli
and
nop
mov
sub
call
bound
jge
sbb
push
cltd
xchg
sub
fldt
cld
jnp
dec
or
inc
sub
xor
pop
dec
subl
repz
mov
shlb
lea
adc
pop
insl
shr
rorl
mov
xor
pop
clc
jg
aad
leave
mov
xchg
or
cwtl
pushf
add
and
ljmp
push
aam
add
sub
imul
push
cmp
outsb
push
jne
sbb
mov
or
adc
xor
and
sarb
push
or
fnstenv
jge
mov
nop
mov
dec
xor
jae
mov
pusha
stc
jmp
or
hlt
add
sbb
mov
push
adc
sbb
mov
sub
mov
outsl
and
push
fldenv
movsb
xor
jne
popf
lea
jne
ret
mov
add
movsl
lret
xchg
xlat
add
mov
or
fdivs
in
or
sub
sub
sub
add
scas
ret
es
je
xor
sbb
mov
xor
shrl
repnz
jae
imul
pop
lds
xor
inc
cmp
aas
dec
out
pop
les
jecxz
pop
xchg
or
cmpsl
jbe
mov
adc
pop
dec
aad
cld
xor
scas
mov
pop
push
sub
arpl
inc
pop
aad
xchg
testb
stos
prefetch
mov
rcrl
pop
and
call
roll
test
mov
lcall
gs
mov
ja
or
lock
cmpl
pop
gs
mov
push
mov
je
mov
out
cmp
and
and
loopne
xchg
lcall
mov
aaa
icebp
adc
sub
int3
ss
lods
or
pop
idivl
test
jbe
cmp
out
sahf
into
push
es
xor
push
adc
push
rorl
adc
movsb
out
pop
xor
aas
cld
sub
fldcw
icebp
mov
or
pop
ja
adc
sbb
jb
cmp
in
imull
fisttps
dec
xchg
xorl
out
push
js
mov
mov
dec
int3
sarl
jae
cmpsl
sbb
xor
mov
imul
loope
push
andb
lods
push
rclb
in
inc
jo
pop
lods
ds
jb
dec
jle
shl
cld
in
fldl
push
fwait
xchg
mov
adc
inc
dec
pop
test
and
and
push
cmp
fwait
dec
or
cltd
push
or
or
popf
jmp
leave
js
cmp
fcoms
fidivrs
sub
add
enter
mov
mov
ss
fsubs
aad
mov
fmul
movsl
fidivrs
fincstp
gs
ja
jle
scas
mov
mov
sarb
push
push
xor
mov
arpl
lds
andl
mov
aaa
jg
sub
addr16
mov
fucom
imul
cs
out
shlb
pop
out
adc
lods
sub
aas
inc
xor
int
xlat
xor
outsl
loope
dec
inc
sub
aam
test
nop
xchg
push
xchg
fsubrl
call
add
scas
filds
les
xor
xchg
ss
adc
ja
mov
mov
icebp
jns
inc
aas
and
cmpsl
sbb
cmp
call
or
push
shlb
sahf
xchg
inc
push
stc
mov
and
mov
aad
sub
pop
movsb
lock
mov
mov
inc
push
loop
push
xchg
movsl
pop
daa
adc
push
daa
push
jecxz
pop
int
int
out
push
cli
aam
push
nop
loop
fstp
or
in
in
outsl
cmp
fcoml
mov
lahf
add
jo
push
imul
sbb
shlb
ljmp
ss
out
iret
aas
add
pop
cmpsb
adc
xchg
pop
and
int
sub
mov
jb
clc
pop
and
pop
lahf
mov
xor
stos
add
aad
xchg
xor
je
adc
mov
daa
xchg
mov
mov
inc
test
ljmp
leave
repnz
cmp
and
push
and
mov
xlat
out
add
outsb
sbb
sbb
out
lds
pop
xchg
dec
cld
push
in
repz
fbstp
leave
scas
inc
and
adc
mov
or
xchg
pop
das
and
out
or
rclb
sub
cmpl
cmp
out
lret
dec
out
jb
cld
addl
push
push
xchg
roll
push
movsb
mov
shrw
cs
mov
dec
insb
subb
sbb
dec
inc
inc
inc
idivb
les
xor
mov
adc
fstpt
scas
pop
sbb
inc
into
ja
popa
xchg
mov
fdivl
mov
in
cld
je
pop
mov
repnz
mov
ret
or
fbstp
gs
iret
test
sub
sub
pop
cmp
imul
dec
sbb
sub
inc
or
aad
out
mov
dec
shrb
aam
scas
lret
das
mov
loope
out
add
fiadds
popf
jmp
and
and
or
inc
add
mov
aam
pop
imul
aaa
addb
repz
jmp
cmp
mov
jl
xor
pop
and
into
ljmp
popa
aas
and
test
xor
fidivl
filds
ret
dec
in
sbb
sar
int
add
or
pop
scas
idivb
adc
xchg
hlt
rcrl
xlat
arpl
pop
ds
jmp
repnz
repnz
ja
push
clc
adc
push
inc
scas
dec
mov
out
jno
push
xchg
icebp
dec
cmp
pop
add
lcall
xchg
scas
adc
add
xchg
in
mov
jl
or
lret
push
xor
iret
pop
into
adc
js
test
and
sarb
sahf
cmc
push
cli
scas
rorl
mov
jo
int3
popf
inc
mov
inc
daa
in
sbb
mov
push
mov
lret
hlt
jg
cli
cmp
fidivl
sub
mov
test
mov
sahf
sbb
and
mov
adc
lods
cwtl
mov
test
out
and
scas
cwtl
icebp
dec
dec
addr16
xor
loope
mov
xchg
fisubrs
insl
popf
sbb
sub
lret
mov
aas
imul
cltd
cmp
mov
xchg
repnz
fcomps
dec
lock
fmuls
loop
mov
es
or
jp
dec
hlt
xchg
inc
lret
xlat
rcl
xchg
mov
in
mov
daa
in
ret
cmp
in
loope
movsl
addr16
push
lods
imul
mov
mov
in
xchg
es
repz
add
pop
sbb
lock
jmp
adc
outsb
mov
cltd
loope
xlat
mov
outsl
rorl
xlat
adc
jnp
in
mov
out
push
jge
xchg
mov
mov
pop
mov
cmc
loop
mov
xchg
sbb
hlt
inc
cmpsl
lods
or
sub
pop
cmp
aas
add
bound
lods
xlat
lods
sbb
pop
cmc
ja
test
dec
orl
add
rclb
mov
push
xorl
out
sbb
mov
or
inc
xchg
adc
enter
repnz
push
ficoml
add
jo
shrl
shl
shrl
dec
mull
mov
dec
cmpsl
std
sub
adc
arpl
sbb
out
mov
inc
hlt
push
push
in
and
pop
es
sbb
stc
rsqrtps
daa
dec
fsubrs
sarl
mov
data16
mov
jne
shll
mov
xor
jge
sti
jmp
ss
lret
jnp
adc
push
or
adc
fsubr
enter
jle
xchg
je
sub
dec
pop
sbb
xor
out
jbe
dec
mov
ds
in
pushf
scas
dec
mov
xlat
adc
pushl
mov
movsb
dec
xlat
adc
lock
iret
fstpt
fs
jbe
rorb
mov
jl
mov
cwtl
and
imul
cmp
push
pop
bound
adcl
ret
rcrb
fldenv
popa
sbb
hlt
es
repnz
jmp
aaa
jmp
push
or
xlat
sahf
and
mov
sub
fs
popf
mov
mov
add
fcmovne
aas
xchg
mov
mov
or
add
inc
cltd
fildl
repz
lods
icebp
pop
or
int3
xchg
dec
movsb
packuswb
pop
mov
dec
mov
repnz
cli
scas
pop
in
jle
sub
jne
ficoml
jp
lea
arpl
aaa
or
daa
rcrb
lds
cmpsb
and
mov
inc
rcrl
mov
clc
adc
or
push
push
cmp
cmp
push
mov
dec
sbb
lods
jbe
mov
insb
inc
int
cltd
lods
xor
test
or
mov
dec
ret
add
or
lds
mov
push
push
adc
dec
cmp
ffree
inc
push
std
jmp
xchg
pop
add
repnz
fstpt
sbb
clc
mov
xlat
adc
out
jge
adc
sub
ret
ficomps
mov
inc
insl
xchg
push
js
jg
add
jge
enter
pop
sub
lahf
popf
fimuls
stos
mov
fstps
xor
pop
jo
pop
pop
ret
leave
insb
sti
imul
lea
loope
movsl
pop
sub
fs
jns
fdivrl
add
cmpsb
dec
test
shrl
jnp
jmp
push
pusha
aas
sub
std
mov
sub
ja
mov
fs
and
scas
ret
bound
imul
sub
xchg
scas
repz
jmp
iret
test
xchg
pop
ds
leave
lds
or
int3
mov
sti
mov
filds
ret
xchg
test
sbbb
jns
dec
cmp
and
adc
lea
pop
jo
push
jle
or
pop
mov
mov
adc
sub
add
mov
lods
sub
sub
mov
xlat
push
inc
nop
pop
push
clc
mov
cmp
js
aaa
cmovs
mov
adc
xchg
pop
popa
add
aam
mov
push
mov
cmc
fs
popf
sbb
lahf
push
outsl
inc
push
call
and
mov
movsl
pop
lds
add
notb
dec
dec
test
mov
cmpsb
mov
jecxz
xchg
cmp
mov
out
sub
xchg
and
rcr
insb
pop
pop
les
inc
aaa
cmpsb
sarl
ds
mov
in
adc
imul
leave
ljmp
aas
jecxz
subl
fidivs
in
xchg
stos
lret
inc
push
fcomip
test
mov
xsave
mov
push
cmpsl
out
and
nop
inc
cmpsl
out
ja
pop
and
xchg
aas
es
sbb
fsubr
aas
inc
xorb
outsl
mov
push
sbb
ja
pop
jnp
jbe
lahf
inc
flds
dec
push
push
sbb
shlb
add
popf
lcall
mov
mov
pop
aad
loopne
jnp
loop
popa
sbbb
ljmp
popf
push
cmc
jne
push
pop
inc
dec
in
test
mov
pop
adc
jmp
ret
cmp
jns
rclb
and
stc
aas
sbb
testb
inc
lcall
cmp
int
adc
add
add
sub
xor
mov
in
mov
jmp
jae
mov
and
movsb
jl
pop
ljmp
or
and
mov
lret
popf
mov
gs
cmp
pop
popf
push
xchg
and
sbb
sbb
mov
cwtl
cmp
mov
cmp
fisubl
cmp
and
inc
sub
jl
int3
adc
in
lcall
mov
mov
ds
pop
sbb
outsb
dec
in
jp
xchg
add
nop
scas
idiv
shl
aas
ss
add
push
rorl
xchg
add
mov
popaw
call
mov
hlt
inc
jecxz
lahf
test
std
sub
jne
push
xchg
arpl
ret
adcl
shl
in
jmp
mov
xchg
push
sbbb
jns
roll
test
sub
dec
pusha
ja
xor
jp
xor
cs
inc
aad
mov
push
sub
xchg
clc
sbb
popa
sub
and
add
test
popf
fildll
nop
xorb
mov
out
in
cmpl
add
jmp
js
mov
jg
and
pop
lock
ds
dec
mov
das
mov
movsb
mov
push
jo
in
xchg
sbb
imul
rclb
adc
dec
dec
movsl
xchg
adc
stos
repz
inc
mov
mov
lea
gs
or
xchg
adc
jecxz
and
jg
add
pop
out
push
sbbb
hlt
ficoml
mov
pop
imul
das
dec
jge
mov
rcll
scas
lahf
cs
jp
push
fsubrl
mov
or
stos
mov
mov
mov
jg
mov
faddp
push
js
js
push
stc
and
scas
dec
dec
mov
xchg
xlat
insb
pop
in
add
ja
mov
adc
jo
test
wrmsr
push
fsubrl
leave
aam
lock
fsubrl
outsb
sub
sub
mov
adc
mov
push
xor
pushl
fistpl
out
push
dec
push
gs
hlt
out
mov
mov
mov
mov
and
add
mov
nop
aas
push
cmp
ss
or
out
jmp
inc
out
fwait
mov
into
insb
test
pop
cwtl
out
adc
jns
xchg
or
test
outsl
dec
int
repnz
mov
scas
cmp
push
pop
shl
hlt
push
push
stos
mov
dec
fs
mov
test
jle
nop
hlt
sub
into
cltd
or
sub
cmc
rcll
mov
shrb
shll
fidivrs
imul
ja
out
fisttps
inc
sub
outsl
popa
repnz
xor
fs
sarb
lock
sarl
push
cmpsl
xor
icebp
fidivrs
or
arpl
insb
xchg
mov
mov
in
pop
sub
popa
mov
ljmp
jecxz
sbb
sbb
mov
push
add
iret
dec
push
or
das
push
mov
push
xor
dec
xor
sbb
dec
stos
aad
xchg
test
adc
stos
sti
push
arpl
bound
arpl
bnd
mov
ja
push
lret
sub
enter
stos
inc
pop
inc
lahf
aam
lds
outsb
mov
push
mov
imul
pop
jge
pop
mov
jmp
sbbb
shr
movsl
stos
jmp
push
xchg
stos
loope
xchg
push
insb
xor
or
jbe
adc
lahf
mov
cmpsb
and
negb
mov
lea
test
fildll
mov
in
repnz
movb
adc
sbb
push
pop
xchg
cmpb
mov
add
mov
lea
sub
lods
outsl
pop
sbb
div
js
pop
mov
cmp
pop
mov
or
fdivl
xchg
push
pop
push
jecxz
aad
dec
in
std
mov
xor
adc
repnz
mov
mov
setae
and
jb
out
outsb
inc
mov
lahf
push
out
inc
jbe
lea
pop
mov
sbb
or
call
mov
push
adc
ret
dec
rcrl
notb
mov
addb
cmc
jno
cmp
in
orb
cwtl
pop
push
icebp
test
nop
rcl
es
mov
xchg
lds
xchg
xchg
ret
pop
jb
xor
loop
arpl
and
inc
in
vprotw
jle
imulb
test
enter
pop
gs
gs
jg
jo
popa
ret
mov
mov
stc
mov
sbb
decb
test
aas
cmpsb
sti
repnz
pop
jle
lock
push
rcrb
fidivrl
iret
push
xchg
in
fmul
pushf
subb
es
arpl
mov
inc
mov
ss
jnp
ret
mov
imul
jo
pop
or
pop
call
jae
imul
mov
in
ret
sub
enter
aaa
fdiv
aas
mov
fistl
sub
ret
or
sbb
fsubs
fdiv
sub
cld
cmp
mov
mov
cmp
or
and
inc
lcall
outsb
cs
mov
or
add
or
add
cmp
adc
imul
cmp
sbb
arpl
jo
fidivrl
cmp
in
imull
das
adc
jno
mov
pushf
adc
pop
rep
insb
inc
xor
stos
ret
add
int3
pop
outsb
sbbl
std
lods
mov
ljmp
clc
lds
mov
xlat
cld
xor
dec
dec
in
add
jno
into
cmp
mov
adc
addr16
mov
popf
nop
pop
das
jg
test
fistps
outsl
loopne
xlat
add
pushf
jmp
insb
dec
mov
repz
mov
xchg
fs
pop
mov
js
xlat
inc
dec
imul
sub
push
xchg
cwtl
sbb
or
fisubrs
or
push
sbb
repz
push
mov
ds
jne
mov
sbb
lcall
daa
orl
pusha
aaa
out
idivl
rclb
sbb
add
mov
loope
mov
and
add
adcl
xchg
dec
in
cmp
push
mull
inc
in
xchg
and
xor
cmp
cmp
mov
test
mov
push
insb
call
or
ja
shrb
mov
fsubrp
or
ds
pop
enter
jne
popf
jo
lds
cmp
cmp
sar
mov
inc
pop
xor
in
sbb
xor
nop
push
icebp
outsl
dec
push
jne
andb
dec
inc
pop
pop
pop
repnz
adc
das
insl
shl
xchg
adc
cld
int3
clc
jl
pusha
ficoml
js
scas
fdivl
cmp
ja
sub
push
jp
mov
cmpsl
jae
dec
rclb
aas
sub
incl
in
in
into
inc
in
fisubrs
dec
clc
rcr
inc
fstpl
lds
mov
pop
movsl
inc
mov
sahf
pusha
fs
outsl
enter
das
pop
mov
stc
jb
jp
decl
mov
test
pop
or
dec
popf
loop
cmpsb
inc
xlat
jb
and
sarl
inc
out
in
insb
push
fisubrs
xchg
jge
ds
das
sbb
js
jno
and
adc
pop
mov
sahf
push
hlt
mov
pop
xchg
mov
iret
push
scas
inc
pushf
lods
addr16
movsb
fildll
cltd
mov
dec
outsl
sarl
repnz
lods
test
orl
scas
inc
scas
pop
fldt
sbb
and
jno
test
call
push
jns
fcomp
sub
pop
sbbl
dec
aam
mov
clc
ret
inc
sbb
sbb
mov
dec
test
ret
push
jae
pop
dec
and
test
gs
jne
push
mov
fdivs
push
lds
fiaddl
loopne
mov
int3
push
arpl
out
cmp
add
xchg
or
pop
bound
mov
iret
push
inc
mov
rolb
out
cli
and
inc
pushl
mov
aam
out
sbb
scas
in
jo
ljmp
fstps
inc
adc
push
jecxz
daa
mov
gs
fldt
sub
add
pop
or
xchg
dec
iret
rol
sahf
lods
push
push
xchg
loope
clc
adcb
jecxz
jle
ss
sysexit
iret
jbe
mov
mov
pop
popf
testl
jg
xor
xor
ja
cmp
scas
mov
lret
mov
ret
dec
xor
clc
or
ss
in
inc
int3
or
add
mov
out
hlt
aam
cmpsl
push
add
pusha
dec
pushf
pcmpgtd
sub
push
cmp
stos
bnd
inc
jne
xchg
cs
in
dec
js
popf
add
dec
sbb
fisttps
mov
sub
jns
inc
cmp
or
mov
lods
loopne
adc
sub
mov
repz
cmc
divb
sub
adc
pop
push
lock
call
testb
out
push
and
cld
and
sahf
aaa
mov
nop
mov
pop
push
pop
lret
arpl
test
jmp
dec
addr16
jl
jmp
and
roll
adc
mov
std
movsb
out
mov
leave
jns
and
jp
pinsrw
jae,pn
sub
std
aam
js
sub
push
jmp
jne
push
push
hlt
lea
cmp
xchg
xor
pop
pop
sub
mov
mov
mov
ja
push
test
mov
inc
inc
outsl
je
ret
pop
scas
sub
sbb
xlat
pop
cmp
mov
fwait
subb
fcoms
testb
pop
fwait
pop
enter
cmpsl
mov
or
stc
dec
lret
xchg
dec
movsl
mov
bound
sub
push
fsubp
out
lret
push
insl
mov
test
or
push
rcrl
ja
push
mov
sub
mov
mov
ret
cmpsl
xor
adc
push
mov
sub
mov
jnp
mov
aad
xchg
int3
push
xchg
cmp
in
or
jge
xor
aam
fsubr
xchg
dec
cmp
fs
sub
movsl
adc
push
test
scas
mov
or
mov
pop
mov
imul
fidivrl
mov
sbb
inc
xchg
and
iret
fistpll
mov
insb
jno
dec
addb
mov
fld
mov
inc
mov
pop
stos
dec
cmp
push
adc
jae
rorl
mov
mov
mov
sbb
and
sbb
mov
xor
sub
pop
scas
cmp
dec
out
repz
cmpsb
add
mov
adc
push
fsubr
jne
mov
testl
fcoml
adc
rorl
xchg
xor
cld
cmpsl
or
pop
test
sub
ja
das
jbe
or
push
es
dec
shlb
adcb
das
jb
stc
jle
or
shll
pop
aas
mov
sub
jp
out
mov
pop
push
xchg
push
mov
data16
sarl
lret
xor
sahf
mov
lret
jl
inc
jmp
xchg
jmp
xor
and
sbb
dec
aam
inc
loope
test
and
push
adc
loope
iret
jne
sahf
xor
mov
push
leave
adc
std
out
fcomi
push
jge
add
sbb
jl
mov
xor
push
aam
mov
pusha
mov
adc
cwtl
inc
pop
mov
jle
cmp
ljmp
popf
inc
hlt
mov
aaa
cmc
or
xchg
dec
cmpsb
mull
add
cltd
fwait
jle
test
mov
mov
pcmpeqd
jb
mov
sub
mov
and
and
xor
fidivrs
out
cmp
inc
add
insb
addl
push
push
push
pop
mov
rol
sub
sbb
mov
cld
and
and
imul
add
clc
fbstp
sar
adc
inc
in
jecxz
ds
cltd
xorb
mov
rcrb
and
mov
jnp
sbb
test
outsl
mov
sub
lcall
or
bound
add
bnd
movsl
lret
pop
stos
popa
add
test
mov
dec
lahf
xor
add
imull
lods
mov
sbb
pop
cmpsb
and
cld
jp
mov
fmull
shlb
sub
sahf
sub
push
and
dec
or
pop
cmp
push
addr16
add
mov
ljmp
dec
xchg
sub
adc
in
cmp
es
movsl
ja
add
xlat
xchg
mov
dec
stos
hlt
icebp
pop
aas
es
leave
xchg
mov
and
jno
mov
sub
mov
mov
mov
mov
rorl
mov
mov
fwait
shlb
lods
xor
scas
lret
jge
mov
fwait
dec
pop
mull
sbb
int
mov
mov
lods
pop
sub
and
push
mov
insl
pop
je
fistps
adc
add
icebp
jae,pt
cmpsl
addr16
mov
shl
divb
out
mov
inc
cli
inc
inc
add
push
int
fmull
cld
mov
and
cmp
add
cmpsb
jo
jp
and
and
push
daa
or
pop
sub
std
outsl
je
xor
or
cmp
jbe
and
outsb
addl
mov
add
in
or
cmpsl
mov
dec
sub
push
enter
xchg
movsb
pop
in
out
insl
lret
test
lds
addb
sti
jbe
pusha
mov
jo
add
push
pop
lret
xchg
mov
xor
dec
jmp
push
jmp
aam
dec
jo
movsb
fmul
ret
jae
sahf
rol
mov
jmp
add
dec
popf
pop
loopne
jb
sub
and
arpl
je
and
add
xor
push
flds
rorb
adc
test
inc
cmp
jg
daa
into
adc
and
addr16
movsb
mov
aaa
mov
inc
mov
fnstenv
pop
inc
clc
popf
mov
sub
mov
push
popf
call
int
test
gs
push
outsl
pop
and
mov
bnd
daa
adc
into
xchg
cwtl
pop
push
mov
in
shlb
xchg
pop
push
and
aas
jecxz
es
lods
pop
scas
mov
cmp
hlt
cltd
repnz
movsl
jle
push
int3
gs
lds
loopne
pop
adc
shll
xor
push
cmp
dec
mov
les
rcrb
sti
sahf
add
sub
inc
repnz
cmp
in
sbb
popf
sbb
out
push
push
popf
cli
xchg
mov
push
cmp
add
jns
jno
or
inc
js
xchg
scas
or
cwtl
dec
cmc
push
ljmp
sub
and
repnz
loopne
mov
in
cmp
jmp
push
mov
adc
sbb
mov
xor
pop
jo
push
iret
xchg
push
pusha
sbb
cwtl
mov
enter
sbb
cmp
jno
jmp
fs
adc
mov
testl
cmc
es
cmp
and
pop
add
jle
mov
test
sub
stos
inc
ja
repnz
push
movsb
imul
push
sbb
flds
fistps
xor
xorl
sbb
push
into
or
addr16
cmpsl
in
or
mov
jl
lret
js
call
cmpsl
lea
cmpsb
sub
sub
sub
lret
or
std
mov
imul
jle
pop
lods
imul
and
xor
mov
mov
lahf
jne
xchg
cmpsb
adc
movl
inc
aaa
jmp
in
push
lcall
adc
leave
loope
push
insb
in
or
and
ficomps
xchg
daa
subl
adc
aam
adcb
jl
xchg
xor
iret
loope
jb
in
and
xlat
decb
adc
dec
aam
xchg
xchg
mov
loopne
fidivl
xlat
or
test
mov
push
iret
mov
xchg
jmp
adc
sbb
out
into
dec
lret
sbb
push
and
clc
sti
into
mov
push
inc
repz
ss
inc
test
sbb
aad
in
aad
and
mov
add
dec
jbe
outsb
add
mov
sub
or
push
xor
test
mov
out
add
push
cmp
push
imull
sbb
call
inc
cs
cmc
adc
and
jl
pop
inc
pop
add
adc
pop
and
mov
fdivs
jne
sarl
cli
loopne
cmp
inc
outsb
dec
mov
and
fisubs
mov
or
ja
js
pop
inc
cmp
push
rclb
bnd
inc
dec
rol
mov
dec
jb
ja
jne
cmp
sbb
inc
dec
in
std
mov
fucom
xchg
test
sbb
inc
in
pop
sub
in
inc
into
mov
loop
gs
or
aam
repnz
xchg
push
addb
aas
inc
iret
pop
mov
cmp
repnz
std
jae
fsubrs
jge
mov
pop
int3
adc
cmc
jecxz
shl
push
jecxz
test
insl
scas
leave
hlt
jge
lods
inc
push
movl
lods
flds
out
push
mov
js
inc
fwait
cmp
in
and
enter
and
stos
or
test
repnz
movsl
call
pusha
cmp
xchg
lret
aad
pop
jmp
jae
inc
inc
ljmp
adc
dec
xorl
iret
sahf
jl
dec
sub
outsb
enter
or
ljmp
fwait
outsb
inc
cld
or
lahf
arpl
inc
and
and
mov
push
xlat
sahf
pop
xor
rcll
dec
xchg
icebp
pop
adc
add
adc
pop
mov
inc
mov
insl
or
loop
mov
popa
pushf
frstor
inc
cs
je
add
inc
mov
mov
int
sub
lods
out
loope
mov
jbe
or
shlb
stc
int3
push
cwtl
jns
inc
mov
pop
lds
xor
push
jmp
rcrl
imul
lcall
shll
xor
shlb
aad
fistpll
sub
push
xor
ja
mov
pushf
push
xchg
pop
dec
cld
sbb
gs
call
dec
mov
dec
arpl
mov
sbb
popf
and
sub
inc
fcmovnu
adc
sbb
std
mov
xlat
sbb
rcrl
repz
fistl
adc
sub
add
loop
shr
pop
and
push
push
into
sbb
movsl
xchg
pushf
xor
arpl
out
ss
push
add
inc
jns
shrb
loopne
xor
testb
stos
loopne
lds
jp
lea
sub
cmp
fninit
pop
add
cmp
push
push
jno
ljmp
jg
or
jae
loopne
iret
mov
into
dec
call
scas
es
rorl
ret
outsl
sbb
and
mov
aam
in
cltd
mov
push
xchg
dec
loop
sbb
adc
mov
inc
mov
das
dec
xor
push
in
data16
mov
sbb
mov
mov
sub
sbbl
rclb
clc
xor
fbld
adc
stos
pop
ljmp
shlb
xor
push
pop
inc
pop
test
mov
cli
inc
dec
xor
xchg
sub
cs
mov
inc
mov
outsl
xorl
sbb
das
cmp
js
loope
mov
jns
jge
lods
jnp
xlat
sub
and
loopne
add
fwait
xor
adc
movsb
mov
icebp
and
pop
push
lret
popa
or
dec
pop
icebp
pop
sti
dec
imul
enter
mov
fdivrl
cmpsw
aad
cli
jg
test
mov
xchg
enter
testl
out
sbb
aas
add
das
loop
mulb
repnz
lcall
adc
icebp
arpl
ret
cltd
insl
push
inc
sahf
and
inc
mov
adc
sahf
xor
outsl
inc
decb
pusha
inc
push
adc
rorb
and
fucomp
dec
adcl
pop
xor
stos
cltd
dec
sub
mov
fisttpl
outsl
xchg
movsl
cld
pop
sbb
les
mov
or
je
sub
cmp
repnz
mov
popl
xchg
xchg
lret
xchg
and
mov
pop
popf
adc
xchg
daa
mov
repnz
mov
dec
ficoml
aaa
test
xor
adc
cmp
rcr
mov
sbb
sub
mov
jae
shll
push
fcmovnb
iret
dec
ret
and
mov
loopne
popa
cmc
sbb
icebp
inc
ror
jmp
cmpl
fwait
push
dec
out
lret
les
repnz
add
repz
out
sbb
ljmp
jle
fsts
add
aas
xchg
push
mov
outsl
dec
xchg
in
adc
dec
test
repnz
cwtl
fisubl
fisttpl
dec
jne
xchg
and
jge
or
lea
adc
adc
iret
outsb
fdivrp
negl
ja
inc
cmpsb
imul
mov
mov
rclb
inc
mov
fmull
pop
or
shll
xchg
repnz
mov
fisttps
gs
ss
inc
pop
jle
or
adc
inc
pop
stos
jnp
and
and
loope
push
pusha
fcomps
mov
and
idivl
outsb
xor
movsl
xlat
shrb
jl
cmp
sbb
stos
movsl
ret
ljmp
cmp
sub
cmp
sbb
xlat
mov
into
jbe
movb
repnz
cmc
call
lret
nop
scas
loopne
pusha
rorl
dec
push
stos
repz
pop
ret
popf
ja
lods
leave
mov
sub
dec
jb
fnstsw
mov
mov
mov
rcrl
xchg
jo
or
cwtl
jbe
repz
cs
mov
loope
add
mov
in
mov
mov
rcll
lds
xor
sub
dec
hlt
pop
pop
lahf
loop
lock
dec
jmp
ret
rcll
mov
bound
aas
pop
xchg
xor
call
clc
lret
je
xchg
cmp
cmp
sbb
push
fimull
lods
jne
lcall
fsubl
adc
testl
insl
mov
clc
ret
cmp
aam
push
in
loop
xor
add
xchg
add
aam
inc
xchg
jl
pop
dec
imul
sub
mov
jmp
ja
jp
adc
fsubrs
adc
movsb
dec
mov
mov
lods
iret
sub
jbe
adc
and
add
push
enter
cltd
es
adc
stc
jecxz
ret
pop
adc
ljmp
shlb
shll
test
mov
xchg
mov
cmc
push
mov
cmpsb
ja
lea
jno
mov
jg
jp
jmp
dec
fbstp
decl
mov
imul
in
dec
and
add
daa
xchg
lret
add
arpl
loopne
fmul
or
sarl
push
sahf
lea
addr16
mov
insl
or
cmp
rorl
addr16
mov
not
icebp
lock
push
shll
add
iret
jge
aaa
mov
fisubs
xchg
fisttpll
sbb
adc
lcall
add
cmpsb
mov
push
daa
mov
sahf
jmp
inc
mov
jg
push
cwtl
jp
mov
stc
jne
syscall
and
xor
inc
xlat
xchg
pop
outsl
fdivs
xchg
mov
daa
adc
in
icebp
fsubrs
pop
lock
dec
cmp
sub
mov
pop
in
or
arpl
inc
cmpsb
cmp
fcoms
gs
pop
inc
rorl
mov
xchg
iret
pushf
stos
mov
fcomip
fistpll
cs
out
sbb
out
inc
push
and
adcb
xchg
ja
xchg
rcll
cld
dec
mov
inc
out
test
icebp
loope
jg
loopne
fcmovb
pop
add
inc
in
jo
xor
sbb
ficoms
inc
in
jl
mov
push
pop
stos
jmp
sub
push
cwtl
sbbb
xchg
enter
push
xor
sub
mov
pop
pop
pop
mov
xchg
clc
fldl
stos
fldcw
cmc
mov
mov
xchg
or
xchg
adc
ljmp
pop
jecxz
ljmp
out
fisubl
repnz
xor
sbb
imul
xchg
sub
testl
mov
les
sbb
and
lods
outsl
dec
or
mov
lcall
mov
xchg
inc
jg
or
fdivrs
sub
pop
push
das
movsb
movl
xlat
in
lds
xchg
int
flds
je
cmc
imulb
pop
pop
jb
out
fs
cld
jecxz
stos
or
mov
mov
mov
mov
aaa
push
pop
add
outsb
cwtl
dec
dec
insb
popa
xchg
pop
in
ret
iret
jae
mov
cmc
test
push
xor
movl
jle
cmp
lret
adc
fidivs
inc
lea
add
dec
xor
push
jmp
or
xor
cmpsl
add
imull
cli
out
lock
pop
sub
stos
sbb
push
aas
lcall
cmp
insb
fsubs
lret
cltd
imul
pop
mov
adc
aam
and
dec
shlb
movsb
xchg
ja
scas
xchg
dec
sub
pop
xchg
jp
cwtl
mov
ret
sub
inc
out
push
add
dec
mov
xor
scas
aam
push
dec
fucomi
mov
cmp
rorb
adc
call
lahf
push
jecxz
adc
cmpsl
pop
loop
inc
mov
sbb
pop
dec
or
inc
je
ss
mov
lret
movsl
pushf
imul
and
enter
jge
jmp
add
mov
sbb
sarl
ljmp
movsb
jg
sbb
sbb
imul
xchg
inc
loop
popa
stos
lods
nop
pop
pop
push
dec
dec
cmp
hlt
in
ret
cwtl
xchg
mov
loop
ja
shrl
dec
or
xchg
xlat
jo
xor
or
adc
mov
mov
popa
pop
les
mov
mov
mov
push
iret
pop
shlb
scas
adc
mov
shrb
in
shlb
fs
push
mov
aam
es
pop
xorb
std
adc
push
std
fldenv
or
aad
andl
add
scas
test
pop
shrl
fsubl
test
icebp
xchg
fstps
mov
or
mov
mov
push
jmp
pop
inc
loopne
mov
jmp
pop
iret
inc
mov
call
mov
enter
add
out
fimull
adc
jne
std
add
mov
push
insb
mov
fwait
sti
jl
in
xchg
in
sti
cltd
cmpsb
ret
and
loope
push
das
xor
aam
sub
adc
std
into
movsl
jecxz
fistl
or
ja
lcall
lods
js
jl
inc
je
mov
call
xor
or
aad
lcall
push
fsubrs
sub
cmc
sahf
shl
icebp
subl
mov
pop
aas
nop
xchg
clc
and
pop
mov
iret
xor
push
or
cmp
std
daa
push
fsubrs
mov
mov
pop
add
mov
idiv
inc
adc
pushf
cld
push
dec
mov
rclb
inc
hlt
or
dec
and
lods
cmc
out
xchg
push
int
jp
test
mov
loopw
pop
inc
hlt
xor
call
dec
mov
lock
push
dec
mov
xor
pop
or
out
xchg
int
in
out
lret
inc
leave
lods
into
aaa
dec
imul
sbb
xor
lds
loope
or
or
mov
mov
add
xlat
ror
push
in
pop
cli
insl
imul
shl
mov
pop
push
lds
into
inc
mov
mov
fscale
fwait
icebp
je,pt
aam
in
shr
js
cmp
lods
imul
xchg
jmp
stc
int3
mov
mov
inc
lea
push
or
and
test
xchg
lret
repnz
and
test
insb
repnz
adc
sahf
inc
sbb
insb
out
dec
fidivs
push
cmp
lock
lret
adc
sbb
mov
ljmp
lret
shlb
aam
jl
xor
mov
jg
icebp
dec
xchg
xor
mov
stos
lods
push
push
push
ljmp
mov
lret
xchg
stos
or
xor
movsl
or
rcrl
das
out
sbb
mov
shr
jle
or
insb
negl
mov
ret
and
mov
jae
add
popa
mov
sbb
mov
dec
jno
pop
arpl
test
push
movsl
lcall
jnp
or
ret
loop
adc
es
adc
outsl
add
push
xor
xor
or
lods
mov
fwait
clc
cmp
cmp
pop
jle
adc
mov
jmp
rolb
mov
lcall
mov
shll
popa
cld
and
lea
inc
sub
dec
mov
lea
mulb
xor
in
leave
mov
mov
es
add
push
push
out
mov
shll
shrl
dec
pop
lods
pop
mull
arpl
scas
inc
push
lret
jns
dec
mov
sub
cli
fcomps
push
mov
pop
lcall
subl
mov
adc
mov
and
rolb
add
lds
xlat
xorb
fistl
push
aaa
in
lcall
inc
and
sti
mov
incb
inc
and
data16
repz
xchg
inc
pop
or
lods
xor
lahf
fdivrs
jo
inc
in
test
push
loope
and
test
mov
arpl
mov
xor
xor
scas
sub
cmpsb
cmp
mov
pop
into
xchg
fsubl
subl
cltd
in
idiv
mov
dec
jns
cli
jne
jb
push
clc
hlt
push
and
movsl
pop
aas
adc
mov
insb
inc
adc
mov
jns
xchg
pop
lret
sbb
fmull
pop
cmp
or
je
inc
test
pop
scas
out
push
mov
xlat
mov
xlat
or
inc
sub
fcmovnbe
mull
adc
adc
movsl
int3
lods
fists
outsb
jnp
sub
add
inc
es
dec
fs
adc
neg
pop
jo
je
cmp
mov
in
mov
rorl
inc
in
mov
or
js
aam
lcall
adc
push
mov
xchg
pop
or
fnstsw
sub
xor
aas
sub
mov
dec
gs
into
xor
aas
push
stos
ret
ja
gs
mov
xlat
push
lock
faddp
jb
enter
stc
jge
subl
movlps
adc
icebp
aad
addps
mov
stos
ret
cmp
mov
stc
mov
mov
into
mov
fadds
das
inc
lcall
cmp
mov
xlat
mov
arpl
adc
fisubl
sub
adc
adc
mov
mov
test
jle
dec
fnsave
add
out
pop
xchg
icebp
shll
mov
popa
cltd
cmp
mov
jbe
pop
cmp
pusha
inc
push
push
mov
mov
ljmp
add
or
pop
mov
sbb
adc
xchg
xchg
add
cmp
sti
arpl
fists
pop
js
xchg
mov
popa
clc
scas
mov
fcmovnu
daa
jmp
and
popf
sub
fmul
loopne
gs
mov
xchg
bound
jb
aam
rclb
nop
xor
mov
xchg
std
das
jno
mov
xchg
ss
mov
mov
mov
repz
xchg
xchg
xchg
cmp
repz
jnp
imul
mov
jo
and
mov
add
and
mov
pop
pusha
mov
ljmp
mov
bound
call
es
shlb
jmp
pop
xchg
jne
cwtl
mov
adc
mov
sub
dec
arpl
stc
mov
pop
icebp
xor
stc
lods
imul
dec
nop
shrb
popf
fcomi
push
dec
ss
cmpsl
pop
push
jb
lret
out
xchg
out
data16
pushf
sti
xchg
dec
sbb
enter
lret
xchg
clc
sub
lods
je
and
inc
paddq
popa
in
jns
xchg
lock
and
andb
pop
xchg
add
sub
push
and
hlt
stos
repz
mov
loop
call
aaa
mov
imul
lcall
mov
sub
pushf
add
and
add
cmp
pusha
push
pavgb
pop
test
fmull
pop
je
call
orb
lahf
jbe
sbb
sahf
jl
lock
fists
push
dec
test
notl
jne
mov
dec
push
mov
lock
loopne
push
lret
aad
mov
mov
add
fisttpl
sub
mov
popf
cld
push
fcmovu
jno
in
pop
inc
mov
stos
fists
and
pop
negl
sub
mov
in
sub
mov
bound
es
jno
jl
or
jns
testb
fbld
stos
xchg
xor
push
sub
mov
mov
mov
scas
into
addr16
vmaxps
cmp
sub
jo
push
cmpsb
adc
cmp
out
xor
inc
and
sbb
cli
lea
fidivrl
cmpsb
jo
enter
mov
jbe
in
or
js
xor
jecxz
pop
or
std
inc
mov
shll
das
mov
mov
inc
ret
mov
jcxz
pop
mov
icebp
insl
jo
test
jo
mov
fstpl
mov
dec
inc
cltd
xor
sub
rol
aaa
mov
mov
push
out
int
or
cmpsb
jge
xor
push
cmp
push
add
mov
mov
stos
and
and
cltd
pushf
push
mov
sahf
test
inc
bound
mov
pop
adc
lret
dec
out
xchg
sti
sahf
xchg
idivl
xor
lret
loop
pop
adc
ds
cmp
pop
inc
xchg
sbb
jns
lds
and
pop
sub
lock
cld
pop
or
cmp
andb
push
stc
inc
mov
out
push
adc
or
stos
icebp
inc
fmul
insl
mov
push
push
scas
lds
nop
leave
push
xchg
push
and
xor
lods
push
push
and
push
fsubrs
fmul
mov
leave
into
cmp
jg
mov
inc
xchg
jg
mov
inc
test
add
movsl
into
pop
adc
jmp
lock
add
lods
mov
lods
cmpsl
add
push
inc
push
mov
cs
push
jl
scas
out
or
scas
mov
cmp
aam
out
or
inc
mov
rorl
pop
daa
adc
orb
insl
add
testb
das
dec
adc
xchg
sbb
icebp
icebp
cmp
fnsave
push
insl
mov
mull
outsb
inc
test
mov
dec
push
in
mov
add
or
in
leave
xor
dec
fidivrs
movl
pop
or
ds
and
adc
in
mov
insb
mov
jecxz
shrb
pop
in
add
bound
push
sub
sahf
lods
je
xor
sbb
jmp
inc
add
push
sarb
call
add
jnp
sub
add
stos
cmp
add
sarb
sarb
adc
sbb
push
dec
jb
mov
insb
jne
xchg
out
inc
cmpsl
add
fdivr
mov
inc
nop
lds
pop
mov
sarl
and
cwtl
or
fcomip
loope
cmp
fisttpll
push
xor
push
mov
xchg
pop
xchg
std
ret
fwait
and
push
int3
pop
sub
pop
pop
fidivl
xchg
mov
mov
faddp
adc
push
out
jbe
jle
scas
add
fdivl
mov
gs
or
stos
and
pop
rcr
gs
push
imul
pop
pop
sbb
ud0
push
fistps
push
sahf
or
cli
lcall
cmpb
sbb
in
xor
out
in
shrl
mov
ds
mov
lahf
lock
mov
in
push
dec
inc
fmull
xchg
add
popa
pop
sub
mov
rorl
cld
out
inc
ja
dec
popf
cmpsb
mov
andb
xchg
or
and
outsb
div
aam
sub
aas
inc
inc
call
ljmp
jno
ljmp
lret
push
cmpsb
xlat
orb
std
imul
std
pop
xchg
mov
fidivs
daa
pop
shll
xchg
shlb
insl
orb
pop
push
incl
pop
sub
out
insl
insl
pop
xchg
add
cmp
adc
xor
pop
dec
xchg
shrb
orb
pop
lods
add
jb
sbb
and
lret
cmp
adc
sahf
addl
push
shrb
mov
add
adc
sbb
mov
inc
mov
mov
dec
ret
fmulp
std
daa
cmp
or
sbb
and
cmp
push
andl
lods
je
orb
sub
push
add
mov
sub
mov
dec
aad
in
adc
inc
cmp
ret
movsl
cmpl
mov
mov
sbb
stos
jae
xlat
jb
xchg
push
push
xchg
jnp
cmp
cmpsl
fadds
les
stos
aad
ficompl
sub
pop
fisubs
dec
es
fwait
loope
adc
adc
jns
jl
bound
loope
add
mov
or
aas
dec
inc
mov
mov
pop
in
arpl
hlt
cmpsb
rorb
add
pop
mov
clc
pcmpgtb
xchg
cmp
subb
xor
inc
dec
roll
xor
sub
jmp
cmp
mov
out
int3
cmc
adcl
iret
sbb
jecxz
fistpll
sub
adc
jne
repz
mov
add
shll
and
push
sub
sbb
pop
notb
std
scas
scas
fmull
fstpl
jp
jnp
mov
mov
sbb
push
rcll
and
push
cld
ret
mov
cwtl
scas
xchg
js
pop
cld
mov
lahf
sbb
adc
pop
aaa
clc
inc
push
rcll
jg
sbb
out
adc
arpl
mov
jb
enter
dec
inc
addb
mov
fstpl
lahf
loopne
mov
xlat
arpl
mov
lods
nop
cli
aam
adc
push
mov
pop
xor
pop
push
stc
popa
pop
aas
scas
jne
jg
aaa
ljmp
adc
pop
test
daa
aaa
lahf
mov
cmp
out
mov
jb
into
inc
cmpsb
mov
mov
mov
shl
mov
mov
jg
inc
lret
mov
or
mov
lods
xor
das
jb
jae
mov
sbb
stos
mull
aas
pop
sub
je
mov
mov
jge
cld
jge
stos
and
pop
scas
sbb
aam
adc
or
ret
push
mov
mov
popa
lock
push
sub
leave
jl
mov
lods
pop
cmpsb
test
rcrb
comiss
std
jnp
mov
stos
mov
ja
jg
jns
push
out
mov
mov
ror
out
js
pop
imul
jno
jo
jle
ss
lods
or
enter
jno
loope
fimull
xor
cmpsb
jl
sub
dec
mov
mov
adc
mov
xchg
mov
mov
iret
or
sub
incb
aas
das
fildl
and
mov
and
cmpsl
popf
xchg
in
and
and
cmp
or
mov
shrb
xor
xchg
or
popa
lods
cmpsb
out
cli
inc
sub
ret
ss
pop
mov
pop
imul
lds
mov
xchg
fildl
and
aam
ds
add
xor
adc
jo
xchg
dec
loope
mov
into
and
outsb
mov
mov
loope
dec
fsubs
test
push
mov
sub
cmp
mov
jne
jb
push
inc
cmp
inc
test
jg
mov
fistl
xlat
sub
rcl
icebp
loopne
xchg
inc
imul
sbb
scas
pop
in
repnz
and
rcl
mov
sti
divl
mov
add
adc
lods
add
and
xchg
inc
aas
shlb
cmp
mov
enter
push
imul
mov
cmpsb
sahf
or
xchg
cwtl
inc
aad
pop
andl
adc
in
into
sarl
xor
movsl
add
lock
inc
jno
out
lods
push
insb
cmpsb
out
fildll
inc
fdiv
and
push
pop
push
add
mov
pop
mov
jle
add
xchg
xchg
imul
ret
out
dec
jno
mov
lret
sbb
or
add
cltd
sbb
cs
loop
xchg
jl
es
orb
mov
aam
decb
fistl
imul
xchg
xchg
les
std
dec
inc
inc
fwait
test
push
sahf
push
jo
lds
sub
into
pop
or
cmpsb
sub
fwait
leavew
adcl
divb
push
jle
xchg
jnp
test
mov
sahf
loop
lret
shl
and
mov
xchg
cmp
xchg
or
lock
jo
in
in
mov
xchg
sarl
mov
incl
scas
sub
xchg
pop
adc
dec
inc
xor
lods
or
pop
pop
sbb
sub
mov
bound
test
xchg
pop
inc
mov
sub
push
lcall
sbb
sbb
mov
test
mov
mov
sbb
mov
dec
xchg
aaa
out
int
imul
mov
enter
xchg
push
sbb
bound
mov
or
push
dec
mov
and
cmp
out
aaa
cli
in
negb
popa
addr16
fmuls
mov
mov
jg
icebp
loope
rolb
inc
shrl
pop
call
push
loope
xchg
stos
cwtl
int3
nop
sarb
iret
sub
xor
insl
push
jbe
mov
ja
aad
mov
xor
icebp
mov
insb
lcall
or
sub
sub
sub
out
mov
sub
push
fists
push
mov
popa
aas
pop
mov
leave
outsl
jg
dec
cli
ja
sub
mov
sbb
mov
andl
mov
nop
loope
or
pop
xchg
adc
jno
test
movl
jo
mov
shlb
out
orl
mov
inc
and
sbbb
mov
les
cmp
sbb
out
loope
pop
xor
and
xorl
pop
push
sub
mov
rcr
in
dec
mov
add
arpl
inc
inc
iret
dec
aas
addr16
inc
xchg
sti
sbb
test
jge
push
dec
mov
out
jle
inc
rcrl
adc
mov
popf
jg
and
imul
or
std
xchg
pop
dec
cltd
mov
and
push
dec
roll
dec
mov
stc
jo
mov
xor
sahf
inc
mov
hlt
push
jno
mov
xchg
lahf
out
sub
push
cltd
xor
std
jp
sbb
adc
mov
pushf
xchg
mov
pmullw
addb
push
and
and
aas
pop
int
pop
mov
pop
mov
cmpsb
out
xchg
fildll
or
add
or
mov
xchg
mov
inc
xor
insb
pop
push
mov
mull
jmp
cwtl
int3
leave
jo
and
push
mov
xor
aam
cmp
sub
add
sahf
dec
push
cltd
mov
mov
pop
or
jno
popa
xchg
dec
ficompl
in
scas
jns
test
xchg
sub
xchg
jns
test
loop
mov
jns
jns
mov
ficoms
in
out
bound
push
ljmp
push
xchg
fistpl
test
fwait
push
std
mov
jle
lds
popa
insl
fwait
and
jge
mov
sbb
ret
lds
cmp
dec
xor
icebp
popf
push
popf
xlat
push
push
mov
lcall
pop
jle
sbb
sbb
shll
push
add
mov
in
out
out
out
dec
xchg
cmp
lods
inc
jmp
out
dec
lods
jne
scas
out
pop
xlat
jecxz
pop
jb
pusha
fists
jae
fisttpl
repnz
test
loop
dec
jbe
mov
sahf
or
inc
sub
adc
lret
std
and
sbb
decb
fwait
std
push
dec
mov
insl
add
mov
or
testb
add
cmp
push
sbb
mov
movb
mov
popf
lock
test
jb
mov
mov
cmp
gs
sbb
pop
mov
fwait
aaa
aas
subb
inc
jb
je
cmp
push
sarb
and
cmpsb
mov
jg
pop
call
sub
xor
adc
cmpl
call
mov
push
test
cld
arpl
inc
mov
dec
xchg
xor
and
push
cs
sub
cmp
ret
push
xchg
sbb
mov
sbb
push
imul
fs
sub
call
fstpt
pop
cmp
fsubs
mov
ret
or
sub
fstl
cmp
gs
hlt
fs
jns
in
idiv
ficompl
dec
cli
pop
neg
imul
jae
stos
xchg
xor
ficomps
mov
add
fldcw
lret
xchg
enter
jb
cwtl
aad
testl
ja
shrl
addr16
xchg
repnz
js
inc
movsl
add
leave
lods
cld
jmp
sub
mov
push
or
movsl
mov
dec
negl
or
sub
mov
sub
scas
adc
adcb
cmpsl
xchg
je
push
inc
and
daa
push
aaa
shrl
pop
cmp
xchg
mov
push
repnz
add
adc
mov
das
mov
out
or
push
mov
lret
and
inc
lock
outsl
lods
test
outsb
push
test
pop
loope
mulb
addr16
sbb
out
jbe
out
xchg
jl
call
mov
mov
fwait
nop
push
test
pop
sub
or
movsl
mov
fucom
call
mov
cmp
rcll
sub
mov
fstpt
hlt
push
sub
gs
out
push
aam
mov
push
imul
mov
test
fistpll
ja
mov
add
push
pop
push
out
xor
add
sti
dec
imul
jnp
mov
cmc
inc
clc
fstpt
lods
or
dec
ljmp
jmp
adc
pop
pop
divb
adc
jle
push
jle
dec
repnz
negl
cltd
hlt
push
xor
adc
divb
sub
mov
cli
add
leave
out
pop
gs
mov
mov
push
movsl
mov
mov
jecxz
call
mov
xor
dec
fstl
lahf
loope
inc
orl
sub
insl
sub
mul
mov
xchg
fs
mov
cs
dec
and
jbe
mov
add
aad
aaa
in
addr16
sti
or
or
jns
inc
xchg
hlt
pop
mov
cs
xchg
or
mov
call
jb
jnp
adc
jmp
xor
enter
ret
addb
dec
cmp
test
and
sbb
and
mov
lods
dec
shll
adc
data16
ljmp
fnsave
fldcw
mov
stos
mov
sbb
movsl
mov
add
jbe
int3
xor
repz
fcmovnbe
ss
lcall
fcmove
fwait
xor
dec
adc
push
push
pop
push
in
pushf
mov
add
lds
mov
js
jl
push
dec
stos
cmpsl
push
fstpt
lea
lock
dec
sbb
into
dec
jno
jns
xchg
or
repz
xchg
dec
jb
out
cwtl
xchg
push
sub
push
xchg
pop
call
inc
repz
int3
mov
push
mov
lea
and
bound
nop
mov
sbb
call
and
pop
pop
je
fisubl
in
fdivrp
loope
lods
mov
mov
fnstenv
cld
push
in
dec
xchg
lea
sarb
dec
inc
sahf
daa
sbb
fsubs
clc
dec
jg
cmp
xor
scas
arpl
xor
test
push
mov
xor
or
shll
jae
pop
mov
jne
adc
add
lods
push
jg
push
or
inc
mov
cmc
insl
into
pushf
aam
and
imul
jg
shrl
dec
mov
sahf
mov
gs
fisubrs
js
aaa
jg
xchg
fsubrs
mov
outsl
cmpsb
add
fs
ja
pusha
loopne
jmp
inc
lock
push
fwait
divb
lea
ret
push
mov
insb
push
outsl
insl
pop
icebp
out
leave
cmp
jbe
imul
xchg
cli
inc
sbbb
test
loop
or
push
aam
sbb
test
jb
loope
les
cli
inc
loop
mov
mov
les
in
cld
mov
jle
outsb
cmp
add
xor
cld
jno
outsl
inc
dec
jo
sub
inc
ror
dec
push
nop
push
push
add
cmp
mov
dec
pop
mov
mov
mov
or
test
pusha
mov
enter
cmc
push
mov
sarb
ficoms
push
sub
jnp
mov
dec
lcall
test
loopne
loopne
xchg
hlt
gs
out
push
cmp
sarl
stos
fstl
jno
jae
divl
call
add
lds
cmc
inc
cmc
pop
cmp
xchg
jno
andl
adc
pop
popa
mov
sbb
movsb
or
cmc
xchg
bound
jp
in
add
icebp
jb
sub
jg
lcall
out
out
mov
or
jo
fsubrs
mov
xor
js
icebp
or
std
cmp
jbe
adc
insb
and
mov
cmp
xchg
jns
push
adc
addb
or
insl
fisubs
cmp
xor
adc
pusha
or
sbb
pop
add
push
les
insb
ds
pop
cmp
dec
imul
or
mov
adc
lock
outsl
xorb
hlt
xlat
mov
pop
ficoml
mov
dec
dec
addl
mov
sbb
sub
cmp
xchg
scas
push
ret
das
mov
out
xlat
sbb
pop
in
sbb
xchg
arpl
mov
stos
sub
in
nop
cmp
xchg
and
lcall
mov
sub
push
push
mov
jo,pn
fwait
jl
shll
into
xchg
mov
xor
popf
jb
dec
ret
add
and
pop
test
icebp
mov
sub
pop
mov
adc
jbe
shll
bound
push
jae
mov
mov
mov
mov
push
nop
adc
test
mov
cld
pop
jnp
jne
or
dec
mov
icebp
jbe
nop
test
jg
sub
pusha
or
lcall
push
stos
rcll
into
adc
sbb
push
out
sbb
cmpsb
jo
sahf
adc
push
idiv
add
xchg
jnp
call
rorb
inc
mov
lds
pop
lcall
jbe
daa
xchg
lock
push
scas
in
push
loopne
test
sbb
in
fwait
or
sbb
adc
jnp
jp
out
xchg
arpl
push
or
dec
mov
rolb
xchg
push
xlat
pop
std
inc
mov
sbb
ret
and
mov
out
pop
je
cltd
lock
adc
sbb
ljmp
mov
pop
lods
andb
inc
imull
xorl
push
data16
add
mov
lret
mov
sbb
fwait
in
popa
xor
mov
sbb
lret
sti
lods
xchg
xchg
push
mov
je
hlt
dec
dec
inc
inc
cwtl
mov
xorl
adc
popf
and
pop
mov
inc
mov
sub
decl
xchg
push
jbe
adc
in
ds
push
inc
int3
jecxz
outsb
dec
jns
jno
and
push
xchg
mov
cmp
add
iret
pushf
mov
leave
fcomps
and
pop
push
jle
or
arpl
cltd
mov
mov
imul
xor
gs
popf
lahf
scas
jmp
shll
mov
mov
adc
je
je
popf
pushf
xchg
and
cmpsb
mov
aas
add
stos
xor
mov
pop
ficoms
cld
xchg
and
rcr
xor
xchg
mov
lea
push
xchg
inc
rcrl
jg
outsb
adc
jge
stos
popf
dec
imul
add
mov
inc
std
push
test
mov
pop
mov
add
movsl
scas
scas
lret
movl
fs
psraw
outsb
push
and
movsb
push
sbbl
test
jno
xor
pop
xorl
cmp
in
dec
insl
xor
inc
pop
loope
lods
xchg
dec
xor
add
dec
ret
pop
popa
enter
outsb
je
mov
out
inc
fucomp
xor
leave
out
jmp
in
idivl
inc
iret
gs
sub
call
aas
mov
inc
out
jp
push
and
adc
mov
aam
adc
dec
fnsave
pop
shlb
push
pushf
out
xchg
ret
xchg
add
in
pop
ljmp
int
mov
lock
sub
pop
cs
ret
add
lods
and
mov
xchg
ss
sbbb
dec
ja
out
xchg
bound
cwtl
mov
add
xchg
cmp
pop
lock
pop
cmpb
jne
shll
cmpsb
out
loop
and
xchg
icebp
lahf
lods
std
icebp
sbb
mov
aam
insb
test
dec
dec
incl
lea
sbb
ljmp
cwtl
and
dec
jne
xchg
inc
xchg
sbb
movsl
clc
xchg
lods
or
mov
push
push
dec
fcom
adc
int3
fldenv
xchg
cld
lcall
lahf
les
movsb
inc
push
fwait
addb
lcall
neg
or
or
stc
xor
add
outsl
xlat
into
es
stc
cs
mov
ret
scas
inc
xchg
jae
test
jg
mov
outsb
or
sti
rcr
shll
insl
aaa
fadds
rcl
pushf
or
enter
in
std
faddl
aad
xchg
int3
sub
das
std
sub
mov
sbb
pushf
rorl
in
dec
push
xchg
inc
inc
add
rclb
dec
xor
sub
pop
cmp
insl
sbb
push
push
popa
add
xchg
or
xor
insb
dec
jg
aad
cmpsb
and
arpl
jbe
arpl
add
fscale
or
sub
aaa
adc
sub
ret
hlt
mov
lea
pop
clc
rorl
ljmp
in
filds
hlt
addb
inc
test
pop
shr
mov
adc
mov
or
mov
subl
sarl
call
or
jl
nop
xchg
imul
add
push
push
cld
lahf
addr16
cwtl
push
mov
xchg
in
cmpsl
subl
in
mov
icebp
sbb
fldl2e
push
aas
stc
xchg
int3
stc
and
mov
sbb
push
mov
out
cmp
or
scas
andb
in
push
xlat
and
or
xor
lods
rcrl
jns
ss
xchg
adc
in
mov
inc
sub
dec
cli
cmc
lea
push
or
aam
sbb
pop
imul
mov
jmp
sbb
jp
test
in
js
daa
xchg
mov
rclb
fxch
rcrb
addl
lret
clc
int3
cmpsl
sbb
aas
add
js
shll
mov
ja
sub
xchg
xor
cmp
ror
xor
dec
sub
movsb
mov
adc
mov
repnz
out
pop
jl
mov
das
fisubrs
fidivl
fwait
sub
xlat
adc
pop
repz
fsts
movsl
cmp
mov
and
xchg
das
and
and
rcrb
mov
hlt
scas
fmull
adc
cmp
push
out
xchg
idivb
das
fs
sub
add
push
mov
leave
fldenv
jl
iret
mov
mov
scas
sarb
roll
mov
rcr
rolb
xchg
jge
movsl
or
jnp
sub
in
sbb
adc
inc
pusha
sbb
adc
outsl
js
pop
xor
mov
testb
pop
mov
loope
sbb
mov
fists
xchg
jp
repz
imul
out
add
push
xor
into
out
mulb
arpl
repnz
mov
dec
sub
xlat
push
push
fisttpl
push
adc
cli
outsb
push
aad
fxch
push
xor
fsubrl
xor
stc
push
jb
xchg
xlat
movb
lods
mov
insb
insb
dec
sarb
sbb
pop
frstor
xchg
pop
fs
mov
test
movsl
mov
insb
sbbl
test
dec
lahf
add
sub
aad
inc
mov
xchg
xlat
xlat
push
dec
dec
push
cmpsb
out
test
gs
xchg
out
jbe
push
flds
rorb
inc
mov
push
sbb
lret
test
addr16
xor
ljmp
faddl
aas
ss
xorl
pop
fsubrs
add
pop
mov
rcr
dec
pusha
mov
lds
lahf
insl
mov
dec
or
movsl
jns
aam
aas
in
outsl
xor
mov
stc
pop
loop
jns
pop
int
inc
aam
fbstp
std
sub
pop
movsl
frstor
jp
cli
repnz
jmp
cmp
outsb
mov
cli
addb
outsb
pop
das
cli
jle
stc
cmpsl
pop
cmp
jb
sbb
mov
fwait
mov
cmpsb
xchg
inc
cmp
stos
mov
or
mov
cmp
iret
or
pop
aas
and
mov
or
int3
movsb
aam
lahf
ja
hlt
popa
sbb
data16
repnz
cwtl
sub
cmpsb
mov
add
cmp
mov
mov
pop
rclb
into
mov
mov
sbb
and
mov
sbb
fucomi
imul
push
enter
test
or
jnp
push
shlb
pop
jo
negb
insl
mov
dec
pop
test
cmc
cmc
dec
shr
push
jge
ja
jecxz
adc
xchg
loopne
ds
and
jecxz
sbbb
push
leave
or
mov
ds
xchg
sarl
xchg
shrl
fsubs
jns
stos
or
mov
loop
pop
jl
lahf
inc
outsl
rcrb
push
ret
fisubrs
adc
pop
dec
fs
cmp
adc
xchg
repz
cmp
repnz
in
cld
push
addr16
insb
movsb
ret
loope
xchg
pusha
mov
in
je
outsl
sbb
jo
xchg
in
adc
pusha
in
ds
mov
or
mov
scas
mov
insl
or
orl
lea
push
pop
ss
mov
cld
push
mov
cmp
xor
notl
inc
ja
or
pop
les
pop
dec
push
mov
mov
je
cwtl
xor
fld
aaa
imul
aaa
mov
mov
js
adc
shrb
das
jge
popa
push
xchg
inc
sub
add
and
jge
cmp
jbe
jp
xor
mov
pop
fcmovbe
adc
xor
loope
test
add
fstpt
test
cmpsb
out
and
aad
sub
popf
cld
scas
pop
push
jp
lock
jo
mov
cmc
or
les
inc
pop
stos
mov
leave
jge
push
push
push
outsl
xchg
pop
adc
inc
mov
mov
jnp
dec
push
iret
xchg
gs
shll
cmc
mov
aam
aas
outsb
add
cmc
loop
push
dec
mov
mov
mov
add
cmpsl
loop
pop
stos
pop
out
inc
js
loop
into
jg
xor
jmp
ficomps
sbb
cld
test
mov
and
movsb
cmpl
ja
xchg
inc
mov
inc
jb
out
cld
shll
movb
daa
and
orb
and
mov
popa
push
movsl
rcrb
mov
rcrl
mov
or
es
in
and
cli
and
aas
sbb
in
add
fildll
or
dec
xor
aaa
shlb
out
xor
mov
inc
add
les
pop
test
in
fsubrs
and
mov
mov
scas
xchg
mov
aaa
inc
pop
mov
shl
mov
mulb
xor
enter
cltd
dec
mov
pop
loopne
mov
push
stos
push
aaa
inc
stos
fs
adc
stos
mov
aas
jns
jbe
sub
inc
pushf
adc
or
push
in
scas
das
mov
cwtl
pop
loop
add
inc
push
xchg
fmuls
xor
push
ljmp
data16
lcall
mov
hlt
faddl
add
shlb
test
test
shrl
push
daa
sbb
jne
xchg
pop
ljmp
and
jb
pop
xchg
pop
dec
pop
aad
push
pop
sti
dec
cs
mov
sar
test
incl
xor
pop
scas
sbb
mov
in
cs
xchg
jl
addr16
cs
mov
pop
xchg
inc
sbb
popa
mov
lock
bnd
push
xor
push
int3
out
ljmp
or
adc
pusha
std
outsl
aaa
clc
xor
aam
orb
push
test
aaa
cmp
pop
fsubrs
xor
jno
dec
ja
scas
fbld
stos
testl
dec
xchg
shrl
sar
scas
cmp
insb
cmp
jecxz
outsl
xchg
sbb
dec
pop
aad
leave
outsb
push
movsl
inc
repz
mov
clc
clc
xchg
int
insl
jo
add
xor
movsl
push
std
dec
dec
dec
bound
in
in
pop
icebp
xchg
movsb
push
leave
xchg
clc
and
pushf
mov
mov
lock
push
jp
ret
jns
xor
sbb
add
mov
jae
jns
loope
mov
arpl
adc
mov
add
and
cmp
and
dec
xor
ficoml
inc
sub
jl
icebp
push
mov
cmp
es
leave
lock
divb
sbbl
pushf
pop
add
dec
aaa
mov
adc
jecxz
jge
sbb
sub
popa
inc
mov
jmp
push
fwait
movsl
mov
fnsave
sbb
and
and
adc
fisttpl
jne
out
sarl
arpl
xchg
sbb
aaa
leave
mov
cmp
aam
test
cs
test
pop
cmp
scas
xlat
cmc
es
mov
adc
aaa
xorb
mov
mov
test
je
xchg
add
cmp
push
cld
add
popf
jecxz
in
mov
push
add
lcall
mov
cmpsb
insl
mov
test
sti
mov
scas
dec
fcmovbe
in
out
push
xor
pop
movsl
int3
mov
adc
mov
mov
lods
jl
adc
pop
es
loopne
and
jb
push
push
mov
fmull
stos
pop
adc
inc
mov
add
ficomps
xchg
ret
or
pusha
jmp
fs
xlat
mov
xchg
mov
inc
cmp
sbb
cmp
xor
jp
jmp
xor
mov
or
test
or
jp
and
add
inc
fnstcw
movsb
inc
imul
iret
sub
add
mov
xchg
push
mov
in
cli
jns
ss
test
aam
lods
imul
push
sahf
jbe
or
push
or
aaa
and
es
dec
xor
cmp
mov
test
push
rdtsc
clc
movsl
xchg
cmp
or
arpl
sahf
mov
divb
pushf
in
lods
inc
sahf
popl
outsl
cmp
or
push
or
jae
dec
jle
dec
stos
fisubl
cmp
mov
mov
pop
push
mov
add
mov
cmpl
or
sbb
or
out
push
subb
fs
mov
push
push
jg
lcall
imul
cs
out
cmpsb
push
cmp
mov
mov
push
xor
fcoms
repz
insb
scas
or
je
fstpt
pop
int
jbe
add
sub
int3
cwtl
std
decl
ss
jnp
xor
sbb
jle
push
loopne
inc
out
push
dec
in
mov
fprem
cmp
es
fucomip
cmc
fcompp
add
lock
jmp
pushf
add
cmpsl
mov
fcoms
pop
sbb
mov
and
xor
fmul
sbb
adc
aad
mov
push
jno
adc
dec
push
jb
int3
mov
addr16
nop
sub
jb
xor
in
pop
fildl
cltd
and
test
mov
mov
mov
shll
inc
push
xor
addb
mov
aad
cmpsl
or
stos
dec
mov
push
mov
adc
and
ffreep
cmpsb
icebp
mov
ficoml
and
mov
mov
jmp
sub
int
pop
xor
aas
addl
dec
sbb
test
sub
aaa
mov
cwtl
movsl
inc
lea
push
mov
adc
mov
mov
adc
jnp
repnz
mov
in
push
and
mov
loop
out
adc
mov
data16
int
fsubrl
mov
jl
pop
out
push
jecxz
mov
mov
mulb
pop
mov
xchg
add
gs
or
cmpsb
sti
and
sti
call
pop
mov
push
xchg
push
ljmp
icebp
mov
mov
adc
test
fdiv
cmp
pop
mov
add
cld
mov
ret
icebp
push
scas
add
inc
pop
push
idivl
cli
inc
subb
inc
cmpsl
and
test
int
or
sbbl
push
pop
pop
cmp
cltd
pop
cltd
pop
mov
jmp
dec
cmpsb
lcall
xchg
inc
mov
enter
xchg
mov
or
and
movsb
push
loop
int3
dec
inc
sub
fisttpll
adc
xorb
xor
loop
xor
sub
dec
mov
or
jge
sbb
push
je
or
sti
cmc
mov
out
ja
and
rcrb
stc
stc
cmp
daa
mov
sbb
and
les
lahf
test
inc
xchg
mov
fwait
inc
push
pop
cli
test
ret
mov
cmp
sbb
loope
jne
popf
lret
sub
xchg
lret
aaa
mov
xchg
fistl
rcrb
or
fs
lahf
pusha
dec
mov
add
repz
jo
jno
insb
imul
mov
addr16
repz
shlb
out
dec
loopne
int3
add
push
rcr
clc
mov
fisttps
out
inc
aad
and
xchg
fstpt
jle
xchg
mov
pop
push
movsb
xchg
insb
lret
mov
mov
pop
movsb
add
inc
xor
ja
adc
ret
dec
fdivs
pop
jno
xorl
bound
pop
and
inc
in
roll
add
or
cmp
aad
sbb
imul
movsb
or
xor
icebp
pop
xchg
call
imul
xor
jp
lds
fs
add
sbb
cwtl
pop
inc
cmp
dec
fisubrs
sub
fimuls
push
add
xchg
test
mov
jne
lds
sbb
push
mov
pop
dec
add
push
repnz
cmpsl
xbegin
das
xchg
dec
fcomps
xchg
sbb
mov
pop
or
arpl
mov
mov
fucomi
inc
ja
jns
stos
mov
into
call
xchg
stc
jecxz
dec
inc
test
jle
negl
pop
mov
push
xchg
jg
push
test
lds
movsl
ljmp
jno
adc
out
mov
push
xlat
ficompl
sub
push
sbb
daa
pop
sbb
or
pop
jecxz
insl
add
pop
xchg
dec
addr16
mov
and
push
data16
push
inc
divl
clts
inc
xchg
rolb
imul
cld
sub
jno
in
js
jmp
xchg
lods
loope
pop
push
aam
pop
pop
cmp
and
adc
fnsave
imul
mov
insb
shrb
lock
pop
loop
outsb
and
cld
cmp
gs
dec
test
inc
inc
fidivs
jo
push
mov
jg
imul
loopne
lds
incb
and
aam
cli
fcmovne
sbb
cmp
jo
mov
outsb
sbb
mov
daa
add
hlt
dec
mov
adc
and
test
icebp
in
insb
fisttpl
sub
popf
cmp
mov
leave
dec
adc
es
pop
popf
jne
or
addr16
jmp
daa
rol
lcall
cli
jp
aam
inc
iret
xchg
into
xor
shlb
mov
in
push
int3
or
jmp
and
xor
js
dec
fwait
or
fnstsw
pop
into
icebp
dec
push
fisttps
xchg
sahf
js
push
dec
dec
pop
mov
out
add
clc
adc
sub
addl
cwtl
and
mov
lea
sub
fadd
imul
push
jnp
ja
out
aad
mov
xor
dec
aaa
mov
push
dec
ja
pop
movsb
push
in
or
inc
push
pop
jle
xor
and
lock
cs
pushf
inc
out
insb
mov
bswap
call
cltd
pop
dec
push
xchg
fldt
sti
and
mov
pop
cmp
shrb
js
rolb
add
mov
or
adc
outsb
outsb
cmp
sub
cmp
mov
lcall
push
or
jge
lcall
add
stos
decl
adc
and
loop
or
sub
mov
les
popf
or
inc
inc
push
stos
mov
mov
sub
mov
push
or
test
cmp
jbe
xchg
fwait
inc
mov
mov
mov
and
lods
bound
jl,pt
fistpll
ds
popf
fst
push
mov
loopne
add
movsl
lret
cmc
or
lods
mov
clc
psubq
scas
xchg
pushf
daa
mov
aas
sub
and
das
push
das
mov
xor
mov
mov
adc
ljmp
inc
mov
xchg
pop
xchg
clc
stc
jmp
popf
test
cmpsb
jl
sbb
loop
je
notb
cmp
sub
rorb
enter
push
int3
add
icebp
jo
xchg
and
dec
jecxz
jge
and
mov
lahf
cmp
push
dec
xor
leave
sub
pop
es
mov
repnz
fidivrl
sar
lds
pusha
cwtl
repnz
fs
inc
movsb
adc
pop
test
imul
or
pushf
jge
stos
scas
jge
daa
and
pop
inc
inc
mov
pop
inc
mov
mov
mov
and
dec
mov
jmp
nop
shlb
dec
sbb
jl
mov
repnz
es
cld
pop
test
imul
arpl
pop
outsb
mov
or
or
fcoms
mov
adc
leave
sub
mov
cmp
add
mov
or
or
ja
push
mov
xor
mov
enter
popa
or
outsb
sbb
cmp
test
daa
mov
xchg
lcall
cmp
roll
mov
and
jne
sub
sahf
mov
inc
cmp
pop
dec
repz
shlb
inc
add
push
add
inc
xor
mov
adc
loop
in
push
jo
in
mov
or
popa
mov
shr
push
sbb
pop
fld
inc
mov
popf
cmp
mov
sub
jno
cmp
aas
fcom
xor
xchg
push
xchg
mov
je
in
push
mov
mov
and
loope
cmpsb
out
movsl
push
imul
sti
daa
in
push
das
mov
mov
fsts
cmpsb
shlb
lods
dec
jmp
push
icebp
fidivrl
push
stos
jmp
jae
adc
pop
dec
and
dec
lret
inc
dec
aad
cmp
stos
or
dec
sub
hlt
mov
bound
sub
mov
xchg
scas
mov
aam
leave
clc
jmp
xchg
mov
adc
call
and
outsl
out
fwait
mov
sub
cltd
sbb
int
lods
loopne
cmp
add
out
movsb
lahf
inc
and
ds
adc
rol
fisubrs
pop
in
sub
sub
mov
push
and
outsl
inc
lods
das
add
xor
idivb
inc
or
jb
test
xchg
testl
inc
xchg
or
mov
adc
mov
cwtl
pop
add
ret
scas
adc
adc
je
jae
in
mov
xchg
scas
inc
dec
jmp
dec
sub
or
dec
pop
sub
in
rclb
sub
jle
push
inc
pusha
cmp
mov
xchg
inc
sub
jp
sbb
fcompl
jmp
and
push
pop
pavgw
test
fcompl
rcrb
stos
std
cmp
ret
xlat
push
test
or
js
aaa
rorl
sub
cmc
xchg
or
sub
lret
adc
xchg
mov
push
push
dec
cmp
or
sub
xor
inc
push
es
sub
lds
cmp
aam
dec
test
push
repz
out
sub
mov
les
pop
lods
push
lret
jmp
icebp
clc
cmp
or
mov
pop
repnz
popa
pop
pop
pop
scas
imull
pop
pop
or
adc
loopne
push
xor
das
icebp
dec
push
or
cwtl
and
pop
cltd
stos
xor
out
xorl
sbb
sbb
nop
out
loope
ljmp
out
ja
sti
mov
pop
dec
clc
fimull
into
inc
or
pop
mov
nop
push
in
sti
jg
sub
sahf
jmp
lcall
repz
aad
jecxz
into
out
jle
cmpb
aaa
popa
xor
mov
outsb
fstps
sbb
pop
xor
int
icebp
negl
mov
imul
sub
fcomps
repz
rcrl
dec
cld
repz
enter
mov
mov
mov
mov
sub
popa
imul
add
or
mov
adcb
adc
call
movaps
fnsave
and
add
test
out
adc
mov
jecxz
and
push
pop
loope
scas
adc
mov
ss
adc
cmp
jns
cwtl
das
dec
daa
xor
jmp
push
xchg
push
out
and
push
jno
mov
add
rcrb
sbbb
xchg
mov
out
leave
mov
hlt
jge
mov
jmp
aas
cmp
sbb
pop
mov
xor
iret
push
mov
and
jne
icebp
cmc
mov
aaa
out
adc
popf
and
pop
mov
insb
mov
push
inc
mov
push
popa
inc
push
pop
orb
addl
ljmp
pop
dec
or
call
ja
push
nop
insl
fsubl
fiadds
or
mov
and
xchg
cmp
movsb
test
enter
icebp
cltd
cmpsl
sub
mov
and
sub
test
push
and
out
pop
fmul
sub
mov
loop
mov
sbb
push
xor
cmp
incl
fcompl
cmp
shll
aaa
movsb
popa
loop
jle
mov
and
bound
outsl
inc
lds
push
xchg
fsub
adc
push
adc
nop
std
cmp
push
xchg
add
ja
and
lret
dec
movsl
adc
xchg
shrl
pop
scas
or
out
xor
xchg
mov
mov
jns
mov
in
cli
or
dec
ds
mov
outsl
in
cmp
dec
out
daa
push
scas
das
rorb
push
dec
xchg
fldt
iret
icebp
lcall
mov
rcr
into
adc
aam
xor
sbb
inc
aam
ret
shrb
stc
sbb
testb
lahf
pop
pop
insb
jo
sbb
addr16
iret
pop
adc
bound
lea
hlt
mov
add
jo
sub
out
and
xchg
add
xlat
daa
xor
data16
or
jnp
dec
pop
test
xchg
mov
push
xchg
push
popa
bound
sti
rclb
and
nop
rep
pop
cmp
sti
or
mov
clc
popf
fsub
push
leave
sbb
pop
and
sbb
sub
push
arpl
mov
sbb
ljmp
and
aad
sarb
nop
push
fiadds
pop
lret
fmull
mov
pop
inc
lret
jp
out
lods
jg
sub
or
add
outsb
icebp
mov
add
or
arpl
insl
fsubr
or
pop
dec
pop
mov
adc
xchg
daa
aaa
pop
cmpsb
rep
movl
int3
jmp
jo
ret
insl
jp
iret
sbb
xlat
mov
xorl
xchg
int3
into
push
ret
cmp
shll
mov
sbb
jo
test
and
mov
movb
or
push
mov
mov
lahf
xchg
xor
mov
popa
mov
pop
push
sbb
add
adc
cmpl
sbb
dec
or
sub
push
jp
xchg
loopne
sbb
inc
inc
add
add
sub
cmp
out
test
cmp
jmp
or
lret
adc
xchg
mov
shll
sub
push
adc
add
ficoml
movsl
jge
jae
ja
dec
xchg
inc
sub
fbstp
pop
test
push
sbb
inc
cmp
les
push
ljmp
mov
call
or
lahf
xor
pop
out
loopne
leave
sarl
pop
push
and
xchg
inc
jbe
cwtl
je
je
pop
pusha
aas
fcmove
or
bound
es
int3
or
ds
adc
loope
adc
int
clc
jmp
or
sub
sahf
sub
and
insl
test
sbbb
loope
mov
mov
pushf
enter
shll
int3
mov
mov
stos
xchg
jnp
and
jmp
jg
stos
into
rol
lds
cltd
dec
jp
pop
jle
add
cli
lods
push
ret
fadds
dec
push
scas
xchg
jmp
sub
jnp
clc
loope
subl
stos
jp
xor
fs
pop
xchg
push
fwait
inc
dec
mov
jl
add
sub
fisttps
imul
mov
xchg
xchg
lahf
syscall
popf
pop
cld
pop
icebp
repnz
add
pop
jg
lcall
inc
in
jle
loope
xchg
cmp
add
sub
mov
xchg
out
cs
lds
mov
mov
insl
adc
xchg
sbb
loop
aaa
lods
push
or
or
repz
out
sub
stos
dec
mov
sub
cltd
cwtl
inc
lds
push
jg
inc
js
je
xchg
mov
dec
add
gs
subb
gs
or
push
stos
mov
push
mov
dec
inc
jo
call
xchg
in
xchg
push
loopne
sbb
and
mov
pop
movsl
mov
mov
mov
jne
fimull
fistpl
jecxz
inc
pop
xchg
rcl
xor
mov
mov
mov
dec
push
test
push
nop
xor
jmp
mov
pushw
es
fiaddl
pop
xchg
jl
pusha
mov
jl
add
mov
pop
pop
pop
in
mov
outsl
xor
jp
icebp
adc
push
inc
cmp
or
cwtl
std
or
fnsave
sub
or
sub
adc
das
fcompl
xchg
sbb
out
jge
js
xchg
iret
pushf
mov
repz
sub
lods
inc
sbb
jnp
sbb
scas
mov
cs
push
dec
shl
icebp
insl
mov
decl
inc
ret
daa
add
int3
cmpsb
test
dec
mov
xor
pop
adc
out
dec
cli
jo
pop
sub
aaa
pop
int
dec
je
lret
pushf
sub
inc
dec
jecxz
cli
push
pop
outsl
xchg
pop
test
push
mov
pop
shll
or
fnstcw
xor
int
loop
push
pop
pop
add
jge
repz
aam
cmc
cs
push
mov
push
sub
mov
ret
and
cmc
test
jl
popa
cmpsb
aam
jnp
inc
jmp
and
xchg
add
push
test
push
jp
xchg
sahf
ror
lods
inc
pop
ret
cltd
in
movsl
xor
in
pusha
cwtl
mov
ret
sbb
fcompl
fldt
pop
xor
mov
xchg
cmpsb
jge
pop
outsl
lahf
cmpl
addr16
adcl
cmp
inc
pop
xchg
cmc
or
inc
cmpl
cmpb
bound
subl
adc
insb
add
jmp
imul
rorb
fwait
das
int
fimuls
and
lock
mov
test
fsts
jno
cmp
and
cwtl
mov
loop
pop
mov
insl
and
jle
adc
loop
pop
adc
ret
imulb
cmpsl
subb
daa
mov
aaa
lods
pop
lret
repz
clc
mov
jns
push
movsl
or
sub
pusha
jmp
jle
pushf
push
arpl
enter
push
shlb
sub
cmp
in
call
dec
xor
mov
mov
out
pop
dec
pop
fbld
ret
cld
mov
mov
push
and
dec
and
jl
iret
adc
cmp
jbe
dec
aas
cmpb
and
jno
sub
sub
test
pop
lcall
fsubl
and
outsb
cld
ret
push
insb
test
stos
mov
push
or
xor
jecxz
loopne
iret
adc
inc
mov
sbb
pop
add
mov
fisttpll
rcrl
shl
push
into
sbb
aad
xor
mov
adcl
test
sahf
push
lock
outsl
or
push
adc
iret
add
ds
mov
cmpsl
xchg
jecxz
adc
out
push
rorl
mov
add
hlt
inc
imul
adc
sub
push
bound
daa
fdivrs
adc
mov
loopne
push
jmp
dec
lods
in
fwait
arpl
gs
cmpsb
icebp
xchg
and
nop
mov
in
cmp
shll
divl
clc
xchg
adc
inc
jg
jge
lret
imull
inc
stos
cld
fs
jb
pop
cmp
stos
and
xor
repnz
mov
in
mov
cmp
test
mov
adc
fbld
mov
dec
dec
sti
or
push
sbbl
ret
mulb
jae
mov
fcomp
in
dec
sti
fldenv
daa
pop
add
mov
jmp
shlb
fst
mov
adc
int3
lahf
movsl
sbb
mov
sbbl
aas
xor
pop
ss
fcompl
xchg
in
int3
fdiv
jbe
mov
je
jg
imul
loope
movsb
jbe
xchg
dec
xchg
mov
cmp
inc
jbe
enter
jmp
mov
xor
xchg
sub
icebp
stc
mov
mov
pop
addb
sub
es
divb
ss
out
fidivrs
xchg
xor
push
icebp
imul
push
mov
xchg
aaa
dec
mov
lret
mov
cltd
mov
xor
jg
xchg
sub
test
in
dec
sarb
jne
jmp
or
imul
pop
jnp
dec
scas
popa
addr16
popl
sbb
ljmp
cmpl
sbb
lahf
nop
and
jo
jle
mov
inc
cmp
adc
test
div
sub
out
mov
adc
xchg
cmp
std
or
cltd
stos
mov
push
pop
subb
sbb
divl
insb
out
cs
mov
es
jle
jno
dec
pop
cmpsl
stos
das
les
mov
iret
mov
mov
cmp
add
xchg
adc
loop
sahf
push
adc
dec
push
movsl
mov
pop
push
shll
es
int
mov
sub
ret
xchg
and
cmpsb
rcrl
mov
test
dec
popf
loop
add
sti
in
adc
xchg
lahf
sub
repz
pop
sub
fcmovb
out
pushf
push
fildl
jne
movsb
lods
daa
push
jae
adc
add
xor
lahf
cmpsb
repz
int
flds
ret
fs
push
mov
jo
and
lock
ja
cmp
lods
cmp
pop
push
jbe
or
jle
fcomi
jg
sub
adc
push
jecxz
push
pop
shll
aad
shll
sbb
mov
xchg
scas
adc
loope
cmp
adc
pushf
ja
or
cmpsb
leave
mov
outsl
imul
mov
pop
inc
jo
rolb
jns
fisubl
add
cld
adc
das
mov
out
ret
jae
cmp
fcoml
cmp
movsl
jno
insb
xor
rclb
sub
and
cmp
call
push
adc
jnp
mov
mov
insb
xchg
jno
loop
sub
and
lea
repnz
mov
leave
pop
pop
ljmp
inc
mov
scas
mov
outsb
sbbb
pop
mov
mov
dec
push
dec
popa
mov
sub
mov
cmp
daa
aas
inc
xchg
clc
ss
inc
cmp
or
imul
sti
inc
enter
in
adc
in
push
inc
mov
js
loope
sbb
psrlw
inc
push
xor
aaa
repnz
imul
xor
pop
stos
cmp
orb
cmpsl
adcl
lahf
loop
insb
jecxz
orb
and
cmpsb
push
lret
cmpsb
mov
sbb
xor
fadd
or
jmp
push
jl
ja
cmp
and
movsl
test
push
jne
jns
repz
subb
pop
push
push
hlt
mov
push
mov
xorb
xor
hlt
fwait
sahf
pop
mov
fbstp
push
dec
out
enter
jp
sbb
push
popf
inc
sahf
add
inc
stos
adc
shrb
inc
test
addl
mov
out
rclb
stos
lods
sbb
lcall
mov
xchg
clc
jae
jb
mov
repz
or
je
inc
pop
faddl
or
lahf
fcoml
ss
fsubrl
pop
inc
sbb
fidivs
hlt
icebp
cmpsl
sub
and
pop
mov
bound
push
inc
sbb
or
adc
inc
fnstsw
cmpsl
int
push
popf
test
cmp
mov
mov
loop
scas
fbld
cmp
mov
jp
push
adc
mov
jmp
push
jbe
add
adc
jno
xchg
lea
cmp
mov
mov
cli
add
adc
scas
in
aaa
dec
mov
lock
jge
and
lcall
jns
cmp
rcrb
aaa
add
mov
sub
in
add
jge
loope
enter
gs
jle
test
jae
mov
ds
pop
and
cmp
push
adcl
ret
sub
xchg
in
inc
lea
xor
out
clc
lret
add
repz
fnsave
xchg
insl
out
lock
mov
in
inc
xor
les
rclb
xor
add
and
push
adc
mov
ja
mov
incl
jne
xor
loopne
mov
push
lods
adc
sub
sbb
mov
repnz
mov
push
outsb
lods
xchg
lret
adc
mov
and
ljmp
cs
add
lret
push
mov
test
add
ficoml
rolb
cmpsb
mov
pop
shlb
in
pop
mov
int
and
sbb
adc
jnp
orl
xor
call
les
test
stos
jmp
sahf
xchg
out
inc
sbb
gs
xor
rcll
push
aad
mov
mov
jmp
jne
dec
pop
into
or
cmp
stos
sbb
cs
jbe
xchg
cmp
xor
dec
adc
leave
dec
dec
mov
and
faddl
add
inc
std
loopne
popf
jp
in
dec
mov
xor
or
xchg
sbb
mov
mov
cmp
fsubs
add
xchg
mov
xor
adc
sahf
fwait
pop
pop
mov
in
or
pop
add
inc
test
mov
daa
add
mov
dec
sahf
les
hlt
decl
mov
jmp
out
shlb
cld
sub
les
cltd
fcompl
shrl
cld
sub
mov
daa
dec
fsubs
outsl
daa
scas
pop
loop
mov
out
push
mov
rcrb
cmp
scas
mov
inc
push
push
lahf
int
jmp
mov
lock
int
xor
mov
cltd
cmp
rorb
push
sbb
std
ret
dec
fstl
mov
jb
add
outsb
xchg
xchg
cmp
int3
push
jecxz
cmp
lret
lahf
test
ret
inc
jbe
or
outsl
fistpll
push
dec
pushl
data16
mov
sub
dec
mov
incb
test
jge
aaa
sbb
sti
dec
out
cld
xchg
insl
push
addr16
sbb
push
cltd
gs
mov
aam
push
insl
loopne
or
mov
and
bound
aam
testl
xor
and
push
int
pop
jae
cmp
or
enter
jae
pop
fcomp
scas
and
fucom
and
iret
aaa
pop
add
cwtl
pop
or
dec
sub
andl
ret
repz
fisubrl
sub
int3
or
movsl
or
insl
cmpsb
dec
adc
or
xor
inc
cmpsl
aad
push
pop
out
and
std
xor
mov
sbb
ret
dec
adc
outsl
jnp
xor
inc
ret
sub
ret
arpl
and
add
xchg
lods
inc
out
jb
mull
inc
sub
dec
push
mov
in
ja
mov
rcl
jmp
icebp
call
xchg
pushf
dec
lea
movsb
call
push
jne
sahf
add
adc
add
stos
fsubs
mov
inc
subb
xchg
loopne
dec
cmp
push
stos
repz
add
or
pop
and
mov
or
push
xchg
xor
mov
lret
xchg
xchg
pushf
mov
mov
inc
sbb
xlat
clc
xlat
inc
cmp
popf
mov
mov
pop
jmp
mov
push
sub
leave
loop
lds
frstor
fisttpl
xchg
and
fs
and
call
inc
cmpsb
pop
add
out
rcrl
ljmp
enter
pop
jno
mov
loop
lret
sub
xchg
cmp
ds
xchg
mov
inc
dec
cltd
pop
push
sbb
or
stos
add
popf
adc
xor
lcall
mov
sahf
cmc
mov
jl
mov
jmp
std
fcoms
cmpsb
mov
ucomiss
xchg
stos
in
mov
adc
cwtl
insl
mov
adcl
cmpsb
and
push
inc
movsb
clc
mov
out
cmp
cmc
jecxz
push
inc
data16
mov
outsb
mov
in
dec
jbe
std
cmp
in
mov
aad
or
in
fadd
and
cld
loope
xor
sub
sarl
movsb
pop
cmpsl
add
aad
popa
stos
jnp
fisttpl
rclb
imul
jg
sahf
ljmp
testb
imul
cld
lods
lods
dec
mov
cmc
pop
jo
pop
cmpsl
sbb
mov
js
xlat
movsl
mov
jg
mov
adc
lcall
pop
pop
pushf
bound
dec
ss
jno
je
popa
ja
loopne
xor
inc
add
jl
lcall
or
adc
fwait
jns
xor
push
mov
sbb
out
inc
dec
push
fisubrs
xor
test
lret
cmpl
mov
loopne
call
in
and
add
cli
cmp
fwait
testl
mov
mov
mov
aas
push
insl
jo
xor
inc
repz
or
int
adc
push
movsb
adc
mov
mov
cli
cmp
jmp
cmp
mov
push
ja
filds
out
aas
sti
and
adc
test
test
inc
stos
push
outsb
sbb
sti
pop
push
out
daa
jecxz
pusha
xchg
out
mov
jne
adc
cmp
push
fisttps
cmpsl
std
push
mov
idivl
jno
imull
sbb
sbb
data16
cmp
xchg
sbb
lods
or
ja
out
cmpsl
fstl
lcall
sbb
out
cmp
nop
mov
and
sti
in
jno
scas
adc
loope
insb
inc
pop
push
jae
pop
fidivrs
adc
sarl
lahf
cmp
adc
or
pop
adc
subb
xor
sbb
xchg
and
dec
push
aas
pop
pop
xchg
sub
jnp
inc
cmp
in
cmp
mov
dec
iret
cwtl
mov
cltd
push
pusha
mov
mov
inc
rclb
sahf
mov
pop
jp
and
cmp
fidivrs
fnstcw
je
push
daa
inc
push
sbb
push
cmc
and
lods
jmp
pop
mov
xor
out
lret
addb
xchg
mov
stc
jle
sbb
lcall
sti
jmp
lods
pop
mov
push
sahf
xor
imul
cwtl
lret
mov
out
dec
leave
jge
adc
fs
faddl
pop
and
aad
addb
fs
cwtl
data16
mov
enter
xor
jp
cmp
pop
push
inc
jbe
and
sub
divl
lahf
mov
and
mov
pop
mov
imull
mov
aaa
shlb
jnp
xor
push
ljmp
add
popf
mov
xlat
pop
cmpsl
scas
jp
add
cmp
or
ficomps
andl
mov
sub
pop
lret
push
dec
bound
and
xlat
subl
jbe
dec
cwtl
lds
lcall
js
mov
jno
dec
in
sub
push
mov
popf
jo
mov
xor
loopne
jle
movsl
dec
jge
sbb
xchg
js
cmc
test
aad
xor
mov
add
xor
dec
inc
mov
mov
mov
test
push
ds
cmp
sbb
xchg
mov
add
or
mov
cld
ja
ret
hlt
push
xchg
mov
or
pop
frstor
out
cmpl
clc
pushf
jns
cltd
mov
std
sub
xor
jmp
pusha
push
pop
cwtl
test
xchg
test
sbbl
push
js
inc
cmp
test
aam
mov
inc
loop
stos
leave
add
das
mov
into
xlat
jl
js
add
out
mov
sub
call
mov
jl
adc
push
xlat
xchg
popl
fwait
xor
mov
movsl
xlat
mov
add
xorl
jbe
outsl
sbb
fidivrl
ds
mov
pop
adc
js
notl
push
mov
adc
push
arpl
jb
push
push
lret
icebp
lret
insl
subl
fmull
addr16
pop
or
inc
pop
cmc
movsl
cmp
cmp
mov
and
ret
fcmovbe
jge
xor
add
xor
lds
xor
and
int
scas
das
fs
dec
leave
push
ret
out
fnstenv
sahf
push
jnp
int3
xor
mov
sub
ret
jo
and
pop
in
ror
sbb
or
push
mov
mov
xchg
dec
repnz
jle
movsl
cmp
inc
mov
xchg
xlat
cmpsl
sub
out
push
repnz
mov
add
rolb
sub
dec
gs
ds
pusha
jg
xor
dec
pop
or
sub
inc
fwait
repz
movsl
mov
jbe
mov
xchg
test
push
ficompl
pop
inc
xchg
or
daa
xchg
adc
inc
pop
outsl
jb
add
rcr
pusha
jmp
mov
push
dec
sub
cmc
add
inc
push
test
mov
es
mov
mov
mov
nop
int
punpckhbw
daa
lret
cmpsb
pushf
movsb
fidivl
into
inc
call
pop
fwait
adc
cs
mov
mov
dec
inc
adc
out
aaa
mov
jns
addb
adc
sub
dec
dec
xlat
iret
xor
fstpt
pop
mov
sub
mov
jp
jne
pop
repnz
ret
cmp
lods
pop
cld
xor
aaa
inc
push
imul
or
sub
cs
push
ja
pop
mov
pop
add
lods
xor
inc
bound
bound
dec
mov
mov
jle
inc
adc
test
rolb
fiaddl
jnp
and
mov
push
xor
fcmovne
shrl
aas
inc
pop
cmp
dec
cld
out
sbbl
cltd
data16
add
jge
push
cltd
idiv
and
mov
in
adc
sub
push
stos
outsb
adc
pop
sub
mov
xchg
dec
mov
call
adc
cld
cmovl
arpl
jb
out
popf
sub
lods
loope
cmp
pop
fwait
dec
mov
cmp
andb
pop
fidivl
pop
fdivs
test
sbb
pusha
or
sbb
pop
fbstp
out
mov
clc
aad
xor
popa
cld
les
mov
cld
jbe
es
ret
repnz
dec
pop
ss
subb
outsb
les
xchg
add
pop
sub
repnz
cmp
lahf
mov
mov
mov
xchg
jl
dec
lcall
and
sub
arpl
jns
fisubrl
nop
popa
stos
mov
sahf
xchg
cmc
nop
lea
inc
mov
cli
cmpsl
daa
lods
jo
and
roll
int
xchg
jne
out
jp
arpl
jle
nop
xchg
cmpsl
and
leave
inc
imul
mov
lds
repnz
sub
inc
or
jae
cld
sub
call
mov
pop
hlt
sti
jl
xchg
push
xchg
test
repz
push
fldl
out
roll
xor
add
push
cmp
test
das
xchg
fst
daa
push
mov
cmp
adc
cmp
cmp
cli
hlt
xor
push
clc
daa
add
repz
sbb
adc
or
add
stos
pop
fs
mov
rclb
xchg
adc
insb
dec
std
test
jnp
sbb
hlt
push
into
sbb
dec
dec
add
lcall
mov
push
repz
decb
xor
xchg
inc
mov
stc
rol
mov
or
xchg
sbb
mov
lds
lea
popf
mov
xchg
test
lahf
inc
or
dec
ds
ret
cmc
sbb
das
test
fadd
cmp
add
mov
push
jnp
and
dec
call
pushf
fwait
nop
dec
mov
aam
rcll
pusha
xor
ret
inc
mov
arpl
mov
pop
mov
cld
in
xor
pop
mov
fcmove
inc
addb
and
dec
out
mov
lahf
fnstsw
lret
mov
mov
rcl
pop
andl
in
mov
js
jge
mov
mov
aad
out
push
jbe
mov
lods
xchg
std
add
cwtl
out
stc
ds
clc
idivb
inc
cmp
lock
lock
cmp
sbb
das
loop
arpl
xchg
movzwl
jl
push
push
lock
lea
cmp
cmpsb
repz
mov
adc
idivl
or
test
in
jp
mov
jl
add
jle
pushl
jp
mov
or
cltd
push
sbb
lahf
pop
adc
dec
lods
jns
mov
inc
dec
aad
shll
push
cmp
jecxz
out
js
xchg
sti
push
mov
inc
call
clc
mov
mov
add
insb
cmp
test
add
popa
sbb
in
dec
mov
sbb
pop
repnz
inc
scas
loopne
dec
lods
cmp
mov
push
cmpsb
pushf
gs
movsb
nop
andl
movsb
sti
cltd
jbe
sub
mov
iret
icebp
aam
add
inc
ja
mov
pusha
mov
stc
into
cmp
lods
push
adc
sub
mov
out
js
jge
sahf
fs
sbb
movsb
push
sbb
xor
leave
pop
jne
pop
add
pop
ret
in
fisubrl
cmp
cmc
mov
or
nop
fwait
mov
data16
ret
pushf
mov
aam
loope
inc
addl
xorl
outsb
push
dec
mov
leave
mov
pop
icebp
fsubrs
or
sahf
adc
xchg
int
or
jno
jge
jne
mov
and
mov
mov
movsl
pop
pop
repnz
or
mov
adc
bound
add
jecxz
lret
add
push
fldenv
addl
and
aad
and
inc
aas
std
fisttpll
daa
and
adc
fdivr
rclb
sub
push
jl
outsb
int
out
lea
jo
in
jge
add
mov
jb
jno
xchg
jp
daa
lret
xor
insl
xchg
pushf
xor
in
push
arpl
aas
test
cmpsl
daa
icebp
filds
inc
xor
imul
mov
sbb
inc
mov
popa
mov
enter
xchg
jo
push
das
adc
sub
cltd
inc
and
cmp
lahf
xchg
lcall
xchg
cltd
push
jae
call
fstpt
mov
jo
clc
jmp
lds
lock
cmp
push
sti
dec
lret
repz
pop
push
sbb
clc
jb
mov
sbb
jle
movsl
xor
sbb
call
or
cmc
addr16
xor
mov
xchg
sub
or
inc
adc
push
push
into
adc
sub
inc
stos
mov
jg
loopne
in
stc
ret
xchg
leave
mov
mov
jae
cmpsl
mov
adc
mov
mov
lret
jo
or
sbb
dec
das
mov
sahf
daa
xlat
mov
out
push
ljmp
or
aaa
xchg
stc
dec
bound
push
xor
lods
int3
sub
push
push
lods
outsb
sbb
mov
andb
std
js
rol
and
lcall
int
push
scas
push
cmp
repz
jne
imul
xchg
xchg
mov
out
pop
aas
int3
iret
or
data16
inc
bound
and
shl
stos
sbb
cs
fiadds
push
inc
in
stos
xchg
cwtl
mov
jp
ss
adc
inc
test
xor
fbld
cmpsb
mulb
and
lock
push
packssdw
outsb
sbb
mov
push
dec
idivl
jae
stos
push
or
pop
jne
sbb
pop
jne
daa
jbe
and
sbb
add
es
mov
stos
lahf
iret
rcrl
int3
out
scas
sub
incb
push
mov
aaa
cld
adc
sbb
andb
subb
dec
inc
clc
scas
sbbl
inc
popa
lea
sub
sbb
jno
push
xor
sub
ljmp
inc
rol
mov
mov
pop
fmul
sbb
push
test
sub
push
xchg
push
jne
dec
xor
sbb
and
lea
push
loopne
sbb
inc
sbb
cmpsb
sbb
arpl
pushl
mov
je
mov
pop
cmp
ss
or
lahf
sub
aad
mov
push
mov
and
inc
lret
push
imul
lcall
add
push
pop
xchg
fwait
push
jp
ja
je
outsb
test
scas
loop
hlt
fisubs
xor
mov
mov
mov
icebp
ljmp
push
xchg
ret
adc
sub
je
jmp
int
push
fcmovne
mov
push
xchg
dec
arpl
mov
mov
cwtl
xchg
or
add
imul
data16
rcr
jbe
out
loope
imul
imul
test
in
sub
aam
filds
test
fwait
xor
lret
push
std
not
sub
in
stc
or
lock
or
mov
inc
pop
sub
jb
je
add
xor
jnp
or
cmpsb
movsb
pop
cwtl
sarb
jno
adc
xchg
mov
mov
insb
loop
ljmp
xchg
mov
subl
or
shll
adc
int
cmp
mov
nop
test
adc
aam
imul
xor
mov
pop
mov
sub
adc
sub
cmc
sti
scas
int3
xchg
das
pop
push
add
push
inc
push
fs
lds
shll
jge
inc
fists
push
dec
clc
push
mov
outsb
jo
lret
lahf
add
mov
cwtl
je
loopne
gs
push
dec
incb
dec
mov
push
inc
adc
mov
fldcw
jle
xor
pop
jno
xchg
in
lds
mov
stc
pop
mov
push
mov
xchg
pop
aaa
lret
cmpsl
call
add
or
cmp
add
fs
bound
xchg
fldt
cmpsl
pop
outsb
fsubr
dec
repnz
xchg
dec
jmp
mov
lock
jecxz
inc
clc
or
inc
test
xchg
lcall
jmp
movsb
mov
loop
cltd
mov
subl
xchg
and
aaa
jns
inc
test
xchg
adc
cmp
pop
or
ret
test
pop
xor
cmp
cmp
movsl
or
bound
or
cli
add
das
mov
je
mov
and
push
inc
leave
mov
mov
sub
or
cld
mov
xchg
ja
cld
shl
rorb
push
sti
mov
sahf
inc
or
pushf
movnti
adc
or
ret
pop
repnz
cmp
cwtl
sbb
aad
mov
cltd
jne
pop
mov
xlat
in
sub
into
in
faddl
adc
mov
mov
in
add
addb
pop
xchg
cli
add
xchg
jge
xorb
clc
inc
mov
sahf
cmpl
sbb
repnz
inc
rcrl
xor
lea
in
aad
cmp
daa
in
cltd
mov
jge
dec
sbb
xor
out
xorb
pop
mov
insl
cmp
fistpl
pop
push
enter
and
sbb
out
outsl
add
adc
loope
mov
in
aaa
sahf
arpl
mov
int3
gs
ja
mov
mov
mov
add
stos
fisttpll
and
and
xchg
sub
in
addr16
sub
or
xor
jg
dec
fnstcw
lcall
fidivrs
pop
lock
adc
sub
scas
inc
in
hlt
jb
aaa
in
jno
imul
mov
sbb
cltd
ljmp
mov
mov
push
inc
test
inc
leave
ds
je
js
sbbb
xchg
faddl
shlb
cmc
cmp
ret
mov
ljmp
paddw
push
xchg
xlat
insl
mov
xchg
xchg
in
scas
push
movsl
sub
lret
inc
aad
orb
rcl
mov
xorb
scas
out
inc
sub
jg
push
out
push
dec
ja
lahf
xor
xlat
mov
leave
add
fucomp
dec
cmp
fmuls
pop
xor
mov
je
out
scas
inc
cmp
mov
jl
add
in
xchg
jl
push
ljmp
mov
outsl
scas
add
jg
sub
xchg
dec
add
repz
xlat
mov
and
pop
mov
lcall
imul
cmp
mov
lret
das
das
jle
mov
xor
sub
mov
mov
arpl
pop
repz
lods
lret
mov
xor
mov
in
push
mov
data16
loop
jo
pop
fnstenv
inc
jns
push
pusha
and
push
enter
and
cmp
dec
fwait
leave
inc
jp
mov
dec
aad
outsb
push
jnp
pushf
mov
cmp
xchg
xchg
cwtl
std
inc
rclb
mov
jge
dec
aaa
int3
mov
cmp
or
test
xchg
nop
push
cli
mov
push
movsl
mov
shrl
and
icebp
and
lock
sti
pop
push
push
and
mov
sub
xlat
xchg
insb
sub
jne
stc
jg
ror
mov
decb
pop
popf
fsubl
mov
xchg
divb
jg
inc
pop
sbb
cmp
add
fisttpll
xlat
jne
mull
div
and
call
shlb
dec
cli
push
test
std
jmp
push
xor
and
shrl
clc
add
stc
cmp
jp
add
imul
push
fnstcw
sbb
cmp
or
incl
or
out
aad
lock
mov
sub
pop
xor
aaa
adc
ret
cmp
pop
je,pt
or
leave
mov
and
jle
mov
mov
mov
or
ljmp
mov
lods
pop
dec
jl
sub
into
sahf
mov
bound
das
dec
adc
outsb
out
insl
mov
ja
sub
dec
push
cmp
inc
sub
dec
xor
jbe
jno
add
mov
loopne
pop
xor
rclb
outsb
inc
jecxz
pop
adc
mov
xchg
pop
or
add
les
sub
xorb
fdivrl
push
ljmp
std
in
cmpl
lods
addr16
xor
fistl
notb
js
pop
test
insl
xlat
pop
repnz
mov
jge
mov
push
sub
jg
pop
push
mov
enter
mov
lods
add
jp
in
andl
movsl
push
mov
insl
bound
mov
mov
scas
and
mov
cltd
gs
sbbb
inc
loop
shrb
dec
and
cmpsl
dec
aas
push
nop
jno
mov
and
loopne
xchg
jp
leave
aaa
lock
ljmp
mov
lds
mov
in
inc
movsb
mov
pop
fisubrl
imul
or
sub
push
jo
sbb
pop
xchg
test
out
add
adc
or
and
adc
push
ja
jb
dec
and
cs
push
stos
inc
cltd
das
mov
js
fwait
mov
call
outsl
pop
leave
cltd
sbb
mov
ror
das
sub
inc
lahf
scas
std
int3
jp
test
and
sbb
imul
jns
jecxz
shl
mov
imul
jnp
fists
xor
add
lds
ret
pop
sbb
cmp
add
dec
jmp
mov
int
nop
push
gs
in
cmp
cmpsb
xor
jb
cmc
divb
jecxz
iret
cwtl
bound
popf
mov
pop
fbstp
call
xchg
and
loop
outsl
push
cmp
add
ss
loopne
leave
mov
int3
adc
push
mov
es
sub
dec
loop
inc
sbb
sahf
sub
xchg
push
mov
adc
fldl
lret
je
pop
mov
mov
std
push
mov
std
int3
dec
fwait
cmpsl
mov
mov
lea
cmp
fwait
or
pop
lods
jae
cld
inc
leave
fcoml
dec
adc
das
or
stc
jecxz
sti
jne
repnz
adc
insb
jo
stos
jbe
xor
push
add
aas
cmpsl
inc
arpl
sub
test
jnp
sub
cmp
inc
xchg
pusha
mov
sub
push
pop
inc
adc
or
sbb
lods
cmp
sbb
dec
inc
pop
mov
rcll
and
call
jp
cs
and
push
jnp
lea
inc
sbb
mov
or
cmpsl
dec
fnstcw
cmpsb
mov
push
enter
push
les
lods
push
shl
in
loope
scas
inc
cmpsb
or
xchg
lods
mov
xor
mov
sub
icebp
xor
and
pop
sbb
shrl
dec
mov
mov
mov
xchg
ljmp
outsl
icebp
outsl
enter
dec
jg
fwait
add
les
pop
and
insl
mov
xchg
test
pop
mov
pop
insb
test
sbb
jmp
dec
dec
int
push
loop
or
pop
incb
fwait
imul
cld
sub
loop
incl
and
sub
mov
cmp
test
sub
fcoms
loopne
lcall
cwtl
push
cmp
mov
mov
jb
lods
clc
sbb
les
push
mov
adc
lahf
adc
je
push
cltd
pop
cmpsb
fdivrl
xor
jae
in
pop
test
mov
icebp
mov
xchg
decl
in
sbb
aaa
popl
mov
dec
fucomp
mov
inc
add
orb
aaa
faddl
movsl
lods
popf
adc
inc
addr16
xor
hlt
add
aad
ja
jecxz
jbe
jge
or
cmpl
stc
ror
cmp
sahf
cmp
dec
pop
arpl
mov
jmp
cld
or
fcomps
adc
shlb
mov
clc
out
stos
rcl
cmpsl
pop
fwait
cmpsl
mov
inc
cmp
pop
insl
fsin
mov
loopne
in
add
mov
lcall
mov
xchg
mov
xchg
inc
pop
flds
or
mov
stos
sets
xor
insb
sub
fdivr
lock
dec
xchg
and
mov
sub
xor
pop
jmp
stos
sub
out
mov
ret
sbbl
add
add
mov
push
sub
cld
dec
pusha
jl
and
or
xchg
aaa
xor
cmpsb
bound
scas
jp
int3
cltd
adc
iret
xchg
push
popf
orb
jo
mov
lods
popf
push
ret
adc
data16
jne
inc
add
mov
xchg
inc
sub
addr16
mov
inc
dec
adc
sbb
leave
or
movsb
test
and
test
sbb
mov
out
cld
push
mov
push
push
mov
pushl
arpl
adc
frstor
mov
mov
pop
lret
aad
iret
dec
pop
hlt
cmp
pop
cmp
cltd
sbb
mov
mov
or
push
ret
loope
or
in
xchg
pusha
pop
lods
notb
mov
pop
out
testl
add
adc
insb
test
dec
inc
call
repnz
aas
mulb
fcom
sub
mov
jns
mov
xchg
and
pop
pop
mov
cltd
loop
lcall
fimull
pop
int
sbb
js
rcll
jb
test
sub
or
xor
cmp
cmp
jle
dec
dec
icebp
stos
pop
cwtl
inc
cmp
fists
pop
dec
xor
test
mov
fwait
add
nop
mov
mov
mov
push
pop
inc
adc
mov
push
mov
sub
bound
sbb
sbbl
nop
jae
add
scas
ljmp
call
in
xchg
dec
mov
jge
cltd
leave
out
dec
inc
repnz
fiadds
iret
mov
sub
sti
pushf
jnp
xchg
jge
xor
jae
ds
dec
test
mov
int3
lods
hlt
push
mov
jle
mov
push
cmp
xchg
sbb
nop
aad
xlat
push
out
xor
mov
xchg
aad
or
jp
popa
cmp
fidivrs
arpl
int
mov
rcl
mov
movl
jns
repnz
jmp
xchg
cld
cmp
test
and
pop
or
dec
ss
pop
xchg
and
daa
jne
call
rorl
xchg
add
inc
repnz
ss
add
cld
std
adcl
ror
sbb
ds
fists
or
fimull
arpl
inc
nop
cmpsb
mov
xor
popa
xchg
sahf
mov
shrb
inc
sbb
aaa
mov
orb
mov
in
pop
ficoms
pushl
mov
or
je
inc
xchg
iret
jae
in
out
mov
jae
ficompl
scas
stc
insb
xor
xchg
shl
sub
gs
scas
mov
fdiv
pop
enter
in
jae
jno
int3
pop
daa
insb
add
fs
jns
sub
push
enter
rorl
xchg
add
jge
and
dec
lods
cmc
or
ficomps
test
push
popf
sbb
dec
sti
mov
mov
xchg
mov
xchg
xchg
rcrb
mov
inc
out
mov
pop
ret
aam
lock
loope
mov
outsb
mov
add
sti
xor
mov
std
shr
rolb
hlt
in
lds
and
and
ljmp
js
add
nop
pop
mov
adc
cmc
pop
rorl
cmp
aad
dec
shrb
or
push
dec
or
mov
sbb
add
test
clc
sub
sbb
es
push
movl
in
scas
out
popf
dec
cmp
testb
iret
aaa
shl
and
sub
dec
test
aaa
sbb
int3
xor
fldenv
ljmp
movsl
sbb
and
mov
dec
sub
es
sbb
icebp
mov
adc
clc
jae
xor
fsts
mov
lahf
pop
stos
cli
mov
repz
js
jl
jge
cs
sahf
clc
mov
sub
pop
xor
push
in
aaa
mov
cld
daa
pxor
insl
pop
in
bound
iret
cltd
jae
cmpsl
sbb
xlat
cmpsl
int3
out
mov
mov
fisubrs
adc
orl
mov
dec
lahf
lea
mov
mov
iret
sbb
lods
test
adc
imul
clc
and
outsl
xchg
mov
aas
sub
movsb
inc
dec
cmp
cli
cmp
fbld
inc
sbb
adc
ja
mov
pop
gs
scas
fisubrs
xchg
inc
sbb
mov
jne
inc
pop
jne
mov
cmpsl
sbb
addb
adc
dec
loope
into
xor
js
inc
and
inc
mov
jns
lods
jmp
shlb
cmpsl
jns
fnsave
or
in
ret
dec
stos
int3
scas
into
add
rcr
xchg
adc
cmp
shr
mov
xchg
mov
sub
movsb
push
cmpsl
push
outsl
inc
jbe
pop
or
data16
jp
movsb
pop
or
jb
shl
cmpsb
out
fildll
aam
push
stos
mov
aad
repz
cmp
dec
add
leave
cmpsb
inc
mov
dec
in
pop
mov
mov
pop
push
lcall
push
gs
push
out
lcall
je
adc
and
cmp
sub
fildl
arpl
repnz
mov
les
mov
xlat
outsl
subb
dec
xlat
xchg
jo
pop
ret
popa
sub
jne
inc
add
pop
inc
pop
ja
out
enter
out
adc
and
insb
clts
sti
push
outsb
adcb
setle
lods
inc
and
sub
jl
mov
test
testb
fcmovnbe
jne
shlb
jo
jl
hlt
and
jp
xchg
mov
mov
xor
bnd
aam
movsb
inc
sarl
out
insl
jno
daa
push
out
or
lods
inc
fs
pop
jne
jmp
add
jg
mov
fidivrl
mov
pop
out
daa
add
jns
fildll
pop
add
jb
sub
pop
fmul
or
and
pop
sarl
jp
into
sub
ja
aad
adc
mov
mov
dec
out
xchg
mov
mov
mov
mov
jbe
lahf
loop
in
in
rolb
mulb
arpl
out
sbb
idiv
inc
rorl
fs
inc
adc
push
jmp
ljmp
push
outsl
dec
test
pop
es
inc
xchg
or
orl
jne
lock
sbb
mov
add
cltd
subb
mov
add
stc
add
enter
xchg
cmp
call
dec
sub
dec
xchg
mov
pop
aam
in
mov
pusha
lret
pop
idivl
mov
sti
int
loop
and
fcmovnu
mov
mov
test
sarb
add
jp
mov
push
sti
push
sbb
mov
addr16
arpl
xor
out
xor
push
push
outsl
leave
lds
pop
in
nop
mov
mov
std
insl
imul
mov
and
inc
inc
push
mov
test
xchg
adc
pop
dec
cltd
or
cmp
scas
pop
cli
stc
cmc
or
mov
insb
push
pop
jecxz
pop
add
xchg
pop
pop
pop
mov
dec
cmpsl
jo
das
ja
ficomps
fcmovu
ficomps
sbb
xchg
sub
gs
ret
scas
ja
ret
arpl
test
movsl
fimuls
mov
sti
popa
mov
cld
xchg
imul
leave
jg
leave
xchg
dec
xor
sub
fimuls
stos
inc
cwtl
movsl
bound
cmp
iret
bound
repnz
outsl
pop
and
or
push
cwtl
popf
xor
lahf
dec
mov
outsb
mov
pop
fsubl
sbb
jmp
mov
and
mov
mov
enter
mov
negl
xor
pop
add
push
clc
movsb
dec
add
jge
add
xchg
pop
push
les
mov
icebp
mov
adc
sarb
sub
jns
leave
pop
push
mov
pop
xlat
fcmove
pop
sub
sbb
adc
cld
ljmp
sub
push
push
add
xlat
adc
pop
mov
and
inc
mov
cmp
popa
jge
mov
xchg
push
loope
int
es
outsl
pop
lods
pop
shrb
testb
insl
loop
cmp
das
aad
push
loopne
add
es
icebp
push
mov
dec
dec
jo
and
pop
js
aaa
sub
jle
push
adc
out
cwtl
dec
fadds
and
stos
xchg
cmp
sahf
orl
stos
or
pop
andl
or
enter
out
adc
and
jno
fcmove
inc
aaa
daa
rcll
shr
jno
stos
adc
enter
mov
scas
adc
push
inc
push
cmp
inc
aad
sbb
jbe
push
pop
adc
push
pop
or
xchg
pushf
xchg
mov
iret
loope
cmp
push
clc
and
jb
sbb
out
lds
push
lds
dec
shrl
push
outsb
bound
mov
or
dec
nop
je
das
inc
enter
inc
scas
mov
adc
jge
pop
xchg
push
add
or
push
and
js
pushf
cmp
test
outsb
pop
push
jl
addb
sbb
jg
pop
cli
sub
outsb
sti
or
sub
add
stc
int3
sub
adc
cmpsb
nopl
or
ja
sub
test
push
data16
lods
pop
push
and
dec
sbb
mov
lcall
shrl
jmp
lock
notl
and
and
loop
and
lret
je
test
rcll
mov
hlt
pop
and
pop
fbstp
mov
push
jno
js
andb
inc
mov
sub
das
repz
std
mov
in
pop
rcll
lock
add
cmc
pusha
sbb
inc
les
cs
lret
push
into
xor
jns
mov
dec
xor
xor
xchg
mov
test
negb
cmp
out
dec
fadds
or
out
and
push
enter
jecxz
idivb
fisubrl
into
xchg
dec
mov
pop
imul
add
push
ds
xchg
adc
fucomip
mov
jp
into
cld
or
lea
test
pop
xchg
cmpsb
fdivr
mov
aad
xor
pop
and
dec
sbb
icebp
pop
data16
fldenv
push
inc
pop
push
push
icebp
aaa
sbb
loop
jmp
ljmp
movb
add
mov
cmpsb
jns
mov
cmp
jmp
mov
jb
and
sbb
inc
sbb
adc
pop
clc
lods
adc
sub
mov
and
fistps
leave
pop
in
lods
fadd
lods
mov
inc
mov
orb
xor
or
mov
int
jo
jne
xchg
rorb
out
pop
sar
jns
lcall
stos
mov
pop
mov
cltd
test
mov
aas
movsl
imul
push
or
in
xor
addr16
mov
fucomip
xchg
fsubs
ljmp
dec
and
addr16
inc
and
add
js
hlt
test
fnstcw
arpl
movsl
pop
or
sub
rep
mov
mov
pop
mov
pop
push
jbe
cmp
pop
adc
and
std
sub
pop
jbe
scas
push
cmp
push
outsl
mov
dec
mov
add
and
ja
xchg
dec
sbb
inc
jl
xchg
out
mov
fcompp
mov
test
inc
push
mov
pop
xchg
cmp
outsl
push
sub
mov
xchg
ret
mov
or
xchg
jo
loope
dec
push
ja
daa
mov
jg
jnp
repnz
inc
icebp
add
mov
test
adc
push
mov
adc
sbb
bnd
inc
mov
jns
push
jp
adc
addr16
xor
fsubrl
or
enter
mov
jecxz
andb
mov
test
insb
push
xchg
scas
push
mov
push
and
fwait
lea
int3
loop
push
xchg
xchg
lock
sbb
nop
xor
mov
loop
fcomp
push
insl
insl
fldcw
scas
xor
mov
icebp
mov
mov
mov
out
add
std
mov
fdivr
jnp
pop
insb
sub
cmp
inc
inc
jmp
add
rcl
cmp
dec
mov
jecxz
xor
aam
clc
fisttpll
sub
popf
pop
push
xor
inc
push
mov
scas
dec
pop
insl
and
and
loope
jns
jne
orl
scas
nop
js
shl
rclb
cltd
jnp
adc
popf
cmpsb
or
adc
sub
cmp
mov
stos
in
pop
stos
inc
and
insb
pop
add
adc
add
ljmp
push
sub
cmpsl
push
addr16
fwait
xor
sbb
jb
hlt
jo
sbb
push
mov
pop
inc
subl
cmpsb
dec
jp
mov
xchg
or
inc
lods
and
lahf
and
xor
push
movsb
push
or
lods
inc
jo
adc
jb
sbb
xchg
jbe
or
mov
mov
std
stos
ja
xor
scas
icebp
pop
push
rcr
mov
incb
mov
push
adc
pop
mov
xchg
add
sbb
sbb
cmp
sub
pop
gs
jae
fsts
lods
mov
test
push
push
scas
mov
push
xor
cwtl
cmp
loopne
cmc
data16
adc
lods
cmp
and
sbb
inc
fmuls
sbbl
push
shr
fnstenv
mov
pop
aaa
pop
and
sbb
jns
sub
push
mull
outsl
rcll
outsl
push
insl
lret
adc
fs
mov
xchg
outsb
sub
pop
jp
cltd
inc
iret
test
sbb
loope
dec
cli
mov
ficompl
call
movsl
cli
ja
xor
push
andb
aad
cmp
pop
clc
daa
aaa
sbb
lcall
mov
add
mov
das
mov
or
push
sub
inc
pushf
and
and
scas
orb
les
push
roll
mov
rorb
cmc
push
int
das
xor
cmpsl
clc
insl
push
push
pusha
mov
and
mov
ss
arpl
fcomp
mov
or
inc
mov
jne
xlat
int3
mov
ficoms
fsts
mul
in
xchg
mov
jl
mov
std
pop
xchg
rolb
out
ror
adc
or
popf
and
push
push
or
clc
jns
ss
orl
pop
dec
test
mov
std
cmp
add
jecxz
lret
xor
mov
ss
aaa
jl
rolb
rcll
jg
xchg
mov
imul
jge
mov
daa
push
test
mov
pop
jecxz
dec
pusha
or
dec
ljmp
pop
push
fildll
add
ficomps
mov
pop
pop
addl
mov
add
mov
arpl
inc
int
mov
sbb
mov
pop
fwait
lods
dec
fimuls
mov
mov
arpl
orl
and
out
xchg
and
push
mov
fcmovbe
arpl
dec
mov
and
pop
sub
sbb
cmp
jle
or
mov
and
pop
adc
push
jne
lcall
push
mov
lock
push
xchg
stc
xor
mov
and
adc
mov
pop
jle
mov
cmp
movl
add
xchg
hlt
and
pop
sahf
in
cmpl
inc
mov
xchg
outsl
xchg
hlt
addb
ficoml
jnp
stc
add
jge
stos
fnstsw
aad
mov
mov
jecxz
nop
mov
cmp
pushf
or
imul
in
enter
mov
in
popa
fs
andb
jns
insb
in
into
fucomi
lds
push
orb
and
jb
push
aaa
sbb
scas
aam
lods
inc
leave
lock
sbb
in
or
mov
jne
push
imul
scas
lret
gs
out
and
fdivrl
jmp
sbb
mov
sub
mov
add
push
or
xchg
dec
or
pushf
jp
xchg
testb
inc
mov
fnsave
icebp
stos
inc
adc
popf
jo
mov
leave
jae
leave
test
cmp
cld
jnp
mov
push
or
cmpsl
mov
inc
add
add
int
inc
push
cld
adc
dec
faddl
mov
imul
xor
cs
sub
fidivrl
sub
mov
mov
dec
sub
inc
mov
sub
test
in
jnp
int3
cmp
je
mov
push
int
aaa
repz
out
cwtl
cld
lahf
jbe
daa
mov
mov
fstp
aaa
fwait
push
fwait
jo
mov
inc
mov
jnp
add
stc
sbb
mov
dec
jp
or
repz
xchg
imul
xchg
cmpl
xlat
daa
dec
cmc
and
sbbl
pop
jns
aas
test
roll
and
cmp
dec
push
mov
out
in
and
daa
fiadds
imull
adcl
inc
dec
adc
inc
loopne
out
mov
ss
out
jno
dec
pop
cmpsl
add
and
or
lea
xchg
push
lahf
lret
jbe
mov
fimull
jg
pop
cmc
sbb
add
pusha
sahf
mov
addr16
push
in
mov
fmuls
out
adc
mov
sbb
or
xorb
pop
push
outsl
and
xchg
dec
mov
daa
inc
sbb
call
jmp
pusha
ds
movsb
jp
es
mov
out
push
jmp
inc
test
jno
pop
mov
outsb
ljmp
cmp
jge
sarb
cmp
add
push
mov
int3
and
pusha
shrb
hlt
ja
lods
jle
dec
push
jmp
mov
pop
aam
cmp
scas
loop
sbb
iret
pusha
mov
ret
clc
lock
adc
or
in
cmpsl
and
and
xor
or
push
dec
sub
push
movsl
mov
dec
push
pop
cmp
sbb
cmc
repnz
insb
xorb
and
stc
fdivr
fidivl
fcompl
and
or
jb
stc
xor
outsb
cmp
pop
fisttps
test
xchg
adc
int
pop
push
lret
bound
mov
or
stos
mov
or
in
aaa
gs
shll
xchg
jmp
dec
inc
aam
popa
insl
push
pusha
sub
int3
sub
add
adc
xchg
aad
dec
aam
cld
lahf
scas
pop
push
les
inc
ja
dec
jmp
ret
rcll
push
xor
dec
mov
mov
int3
test
sub
mov
jle
sbb
rcr
and
scas
jg
cmp
int
push
out
mov
pop
aam
mov
jnp
movsl
adc
pop
sub
cmpb
and
adc
dec
mov
dec
lret
and
inc
test
insb
jge
add
fcoml
jg
sbb
fsts
fistpl
and
inc
jg
fdivp
fwait
mov
xor
xchg
push
in
inc
mov
push
and
jne
push
jnp
mov
stos
in
jecxz
std
add
xor
xor
int
sub
mov
in
pushf
test
mov
loop
and
pop
mov
repnz
jne
shlb
punpckhdq
jge
fiadds
rorb
popa
add
inc
push
cmp
lods
mov
loop
shrb
xor
and
push
xchg
mov
aaa
inc
loopne
out
std
lret
xchg
sar
scas
xchg
loopne
dec
data16
add
inc
inc
xchg
pop
pop
cltd
sub
loop
mov
mov
mov
sbb
xor
lock
dec
into
push
dec
das
jge
xor
mov
or
jno
pop
or
add
sahf
pop
inc
insl
jle
bound
xchg
in
lret
test
push
fwait
cmp
pop
dec
push
sti
rorb
arpl
jno
mov
lahf
mov
sbb
or
mov
lods
and
mov
aaa
cmpsb
out
adc
sbb
imul
sbb
cmp
add
and
mov
mov
inc
mov
rclb
mov
pop
nop
mov
push
sub
mov
cmp
mov
in
mov
inc
add
xor
push
mov
inc
fdivrp
cmp
cmpsb
loop
push
insb
jno
push
lock
rcr
leave
jns
scas
xchg
pop
mov
scas
jp
sub
lods
push
addr16
inc
pop
jl
dec
cltd
stos
dec
stc
rolb
push
das
or
inc
sti
pop
jbe
push
bound
jmp
sbb
pop
sahf
sbb
adc
movsb
je
fsubs
fdivrl
aas
jg
add
call
out
out
jmp
fdivrp
movsb
dec
fildll
adc
aas
mov
or
mov
icebp
or
sahf
xor
stc
mov
rol
iret
or
push
push
testl
in
sbb
push
or
fs
adc
mov
insl
clc
cmp
dec
jecxz
cs
dec
movsl
add
mov
lods
testb
fstps
jno
mov
xor
je
ret
xchg
mov
dec
inc
imul
push
les
dec
push
cmp
jo
repz
stc
addb
mov
bound
data16
ficoml
out
mov
scas
imul
cmpsl
inc
cmp
pushf
adc
or
mov
clc
mov
mov
jmp
es
push
int3
add
loope
inc
mov
and
mov
mov
notb
mov
or
cltd
xorl
pop
jae
add
push
dec
push
repnz
jne
cmp
mov
test
jle
dec
js
aaa
adc
inc
cmp
andb
jecxz
out
scas
dec
push
in
addr16
mov
adc
ss
add
es
push
iret
add
mov
dec
dec
dec
sbb
sbb
xchg
int
loopne
lret
scas
xchg
js
fiadds
adc
fldcw
icebp
mov
ror
jl
fisubrs
push
and
push
add
jnp
movsb
adcl
int3
das
stc
out
add
or
sub
pop
sti
pusha
jle
jbe
cmp
fcomp
dec
xchg
lret
jecxz
inc
pop
fmull
add
dec
adc
dec
test
nop
pop
iret
add
cmpsl
and
es
fidivs
inc
or
sbb
push
xor
pop
and
data16
cmp
push
jnp
bound
push
inc
add
in
gs
xor
fisttpll
scas
out
fcoml
xor
inc
pop
flds
adc
lret
mov
mov
dec
xchg
jbe
pop
pop
cmp
pop
cwtl
leave
mov
repz
test
push
fwait
xor
ret
fimuls
icebp
mov
imul
in
xor
xchg
iret
fs
inc
jmp
cld
test
dec
push
or
mov
and
or
aam
or
jns
fidivrs
jnp
lods
in
test
lock
mov
sub
cmp
icebp
orl
lcall
aaa
bound
xchg
jb
mov
mov
push
ss
and
arpl
call
adcb
test
aas
loope
addr16
out
sub
mov
imul
sub
leavew
les
mov
add
jl
jno
add
cld
mov
fsts
push
mov
sarl
test
call
and
mov
dec
jp
icebp
pop
ret
mov
roll
iret
mov
scas
push
movsl
ss
ljmp
push
sahf
ficompl
fdivp
xor
pop
divl
xor
daa
inc
mov
push
lds
push
in
and
xor
mov
imul
xchg
iret
mov
push
push
jbe
popa
sub
mov
iret
mov
mov
mov
test
inc
inc
jb
xchg
inc
add
jp
xchg
shrl
repnz
je
lds
fstpl
outsl
sub
mov
push
and
dec
fistpl
sub
add
nop
test
das
mov
nop
pop
and
lods
adc
femms
pop
paddb
push
xchg
subl
fsubrp
cmp
push
dec
and
or
orl
sub
dec
rolb
cmc
ljmp
movsl
jmp
jle
mov
add
shll
cmp
mov
fwait
test
insl
mov
mov
pop
cmpsl
mov
xchg
pop
cld
fisubs
xchg
sbb
leave
es
xlat
shll
dec
imul
jo
in
nop
leave
arpl
mov
ja
into
adc
mov
dec
test
repnz
mov
outsl
std
push
dec
adc
clc
enter
mov
mov
inc
loopne
mov
ds
aam
dec
jl
leave
outsb
sub
idivl
ss
pop
lcall
icebp
inc
je
repnz
xor
outsl
sti
subl
mov
mov
and
out
inc
ds
mov
jecxz
mov
cwtl
testl
repz
push
pandn
je
pcmpgtw
push
lahf
aaa
test
mov
aad
inc
add
icebp
lds
pop
mov
hlt
cmpsl
out
lret
and
pop
push
in
popa
xchg
sbb
push
adc
sub
scas
or
push
bound
lea
adc
adc
and
push
movb
inc
adc
shl
jno
out
adcb
cmp
push
sub
fsubrs
push
sbb
stc
sub
shll
mov
fs
add
lods
scas
ljmp
das
xchg
push
lret
pushf
in
jecxz
dec
adc
lds
ja
pop
jle
xor
es
repz
jecxz
push
inc
xor
outsb
mov
inc
xchg
pop
mov
scas
shrb
daa
test
add
gs
and
add
outsb
inc
sbb
stos
test
mov
loop
adc
dec
xlat
popa
aas
adc
or
mov
xor
pop
push
fbld
pop
xchg
clc
jmp
aad
cmc
enter
inc
xor
inc
pop
rcrb
loop
test
mov
dec
aaa
sub
sub
cmp
mov
aaa
lcall
sbb
sub
sub
int
in
push
push
lcall
and
add
ss
cmp
xorb
xor
mov
or
outsb
test
push
mov
cmp
mov
bnd
nop
cmpl
mov
call
stc
mov
lahf
adc
div
fidivrs
adc
shlb
jle
xlat
pop
adc
lret
mov
sbb
pop
gs
add
icebp
xchg
nop
movsb
or
popa
jl
iret
repnz
orb
mov
add
xor
xor
popf
add
js
cmpsl
mov
out
dec
nop
pop
enter
cmp
or
lock
xchg
xorl
in
out
mov
dec
sub
inc
add
add
jecxz
sbb
add
aaa
mov
loop
jnp
ds
cmp
add
into
cmpsb
orb
ret
dec
icebp
pop
sub
or
xchg
iret
push
push
jne
cmpsb
or
cmc
cmp
aaa
jns
xor
je
in
fsubp
mov
mull
rclb
or
testl
imul
cs
pop
cmp
inc
or
imul
xchg
or
jnp
and
sub
jg
cmp
or
lret
pop
add
js
sub
dec
mov
sub
addr16
adc
add
cmp
fldcw
sti
cltd
or
cmp
inc
sarb
bound
sub
ljmp
neg
arpl
inc
loop
dec
xlat
jmp
lds
jbe
xor
mov
and
fistps
inc
pop
adc
sub
xor
push
mov
xchg
aam
scas
scas
sti
fidivrl
add
sub
sub
and
mov
or
push
sarb
fcmovu
mov
dec
pop
push
insl
and
jp
push
add
das
dec
fwait
push
sarb
and
mov
call
fsubl
repnz
icebp
mov
fwait
jmp
lock
sbb
dec
mov
out
gs
jg
fcmove
push
stos
cmc
gs
dec
xor
loope
test
and
sub
jne
aam
dec
inc
add
inc
popf
dec
xchg
out
loope
pop
int
mov
in
mov
push
fisubl
out
push
pop
enter
cmc
div
cltd
mov
lret
loop
sub
fisttpll
lret
mov
xchg
in
mov
push
es
or
xchg
add
jns
int3
inc
pop
add
xor
loopne
scas
int3
repnz
lods
jp
sahf
sub
dec
push
pop
scas
mov
lods
sub
inc
xchg
cmp
daa
pop
jmp
mov
sbb
or
cli
mov
push
dec
sub
sub
adc
or
dec
movsb
fimuls
push
lcall
fstpt
stc
fld
push
int3
in
xlat
push
xchg
xor
in
ljmp
int3
fildll
lret
cmp
lock
ficompl
cmp
or
add
adc
out
and
sbb
in
popf
push
adc
icebp
xchg
xchg
lds
fbld
icebp
scas
adc
shrl
stos
clc
cmp
out
ss
orb
fnsave
movsl
mov
daa
jnp
sarl
lock
rep
mov
xor
jle
je
popf
ja
jp
inc
sahf
add
xor
xchg
cmp
loopne
pop
push
mov
pop
arpl
xor
ret
cmpsb
leave
or
jecxz
loop
data16
fdivr
add
adc
sbb
pop
rclb
mov
jo
data16
cmp
push
lahf
cs
cwtl
cmc
mov
mov
ret
dec
jo
out
push
test
cmp
lret
jbe
push
out
imul
dec
or
and
push
testb
inc
ss
and
xorb
rolb
mov
fsub
rclb
jl
push
loope
arpl
mov
cmp
sahf
jnp
cmp
inc
jnp
repz
fwait
xchg
int3
ds
mov
jo
mov
or
pop
pushf
ss
pop
jp
dec
loop
in
xchg
stc
rcrl
jo
stc
fcom
rorb
xlat
outsb
pop
dec
aaa
xor
in
imul
cmpsb
shlw
and
inc
adc
sub
cmpsb
xchg
mov
rcrl
push
jp
ss
xchg
rorb
push
in
xchg
stos
inc
push
sub
adc
sub
fwait
sub
cmp
addl
xchg
loop
adc
repnz
cmp
gs
pop
xor
sbb
lahf
in
mov
movsb
cmp
add
aad
sbbb
mov
setge
pusha
pusha
bswap
out
popa
icebp
jg
fs
jge
dec
push
sbb
insl
add
mov
test
jns
gs
cmc
in
ret
inc
jmp
idivl
and
push
xchg
arpl
in
inc
pop
dec
insb
push
in
cli
cwtl
test
sarl
ss
sub
add
shll
push
and
fdivrs
sub
and
cwtl
jmp
mov
int
addr16
sub
cmp
movsb
test
mov
in
js
cmp
cmp
fs
push
sbb
xchg
push
rorb
out
aad
sub
mov
pusha
push
pop
movl
push
ss
roll
out
push
mov
sbb
dec
xchg
add
or
or
cmpsl
outsb
repz
xchg
jb
mov
rclb
and
rclb
or
movl
lret
shl
xchg
cmp
pusha
push
adc
sub
add
dec
mov
pushl
icebp
mov
jno
rolb
js
ljmp
cmpsb
xor
pop
bound
loopne
push
and
cmp
or
and
rorl
fidivl
adc
adc
ficoms
daa
mov
pop
mov
add
shlb
pop
sub
inc
aas
sub
and
sbb
push
lcall
cmp
dec
push
lea
leave
xchg
out
adc
cmp
jne
add
fsubs
sub
or
cmp
arpl
int3
push
aaa
mov
cmpsl
stos
shlb
dec
jno
push
lret
outsl
cli
pop
mov
std
es
dec
pop
dec
out
in
add
mov
mov
mov
add
push
stc
test
loop
rcrb
mov
loopew
arpl
insl
dec
push
jbe
add
dec
adc
int
testl
bts
fsubl
fdiv
sbbl
dec
jns
jmp
jp
out
js
jmp
mov
jnp
pushf
or
adc
fs
daa
inc
mov
xchg
into
adc
jmp
sahf
sbb
cmpsl
mov
test
and
test
cltd
pop
or
push
addr16
sub
insl
js
and
and
jnp
xor
mov
cmpsb
cmpb
lock
push
sbb
aad
test
pop
xor
and
mov
sub
das
mov
cld
mov
test
dec
pop
fmull
push
enter
dec
xchg
addl
push
sarb
mov
pusha
mov
jo
jae
jg
mov
push
lcall
mov
sub
outsb
inc
pop
add
jb
in
xlat
les
cltd
xchg
lcall
jnp
shrb
fxch
and
inc
or
in
jns
xchg
mov
repnz
jns
repz
push
adc
nop
jge
xor
xchg
fcmovnu
rcr
hlt
sbb
adc
cmp
cmp
repnz
dec
sub
cs
inc
sbb
mov
xchg
stos
pusha
push
jno
mov
dec
sarl
aas
int
fdivrs
mov
adc
ss
cmp
mov
jp
scas
mov
adc
loope
cmp
mov
loopne
dec
push
mov
jl
xor
lret
cld
dec
mov
mov
pop
pop
aaa
call
cld
cmp
mov
mov
add
sahf
add
andb
roll
fists
outsb
scas
mov
cmp
cld
test
lret
lcall
mov
mul
jl
das
pop
lret
xor
and
push
ds
mull
adc
fs
stos
cmp
xchg
adc
mov
popa
shll
fcompl
cmp
in
mov
aam
and
in
int3
je
dec
iret
jp
dec
imul
lcall
bound
inc
ficoms
xor
aad
xor
adc
aas
stos
lods
clc
sbb
push
movsl
repz
enter
mov
sub
loop
mov
psubsw
icebp
add
rorb
jg
cmp
push
mov
cmpb
fdivl
fnstsw
add
dec
stos
lods
mov
mov
mov
mov
sbb
seta
pop
pushf
xor
fwait
ds
loope
mov
xchg
xchg
loopne
hlt
inc
jo
divb
int
stc
cld
cltd
call
fildll
lret
cmc
fisubrs
pop
push
fmull
int
mov
jb
out
pop
mov
cmp
shll
sub
ljmp
jns
push
rcll
add
ss
pushf
sbb
movsl
add
ret
rclb
les
repz
xor
test
jb
push
xchg
xlat
sbb
mov
fistpll
and
jg
sbb
xor
test
outsl
roll
add
ljmp
fcomps
scas
push
repnz
and
jbe
pop
dec
shr
mov
mov
jle
pop
or
cmpsb
enter
hlt
or
mov
popa
mov
out
fimuls
leave
sbb
jns
sti
mov
test
bound
inc
push
icebp
test
add
xor
lahf
dec
aaa
in
mov
pushf
and
movsl
cmpsb
popf
pop
enter
cmp
popf
sbb
xlat
movsb
push
fs
mov
cs
push
test
mov
ljmp
adc
jge
outsb
dec
mov
or
popf
inc
cmpsb
mov
mov
addr16
pop
arpl
xchg
cli
or
mov
add
movsl
mov
mov
ret
mov
lret
add
sti
add
mov
aam
fs
shlb
outsb
pop
jl
sub
sbb
cmp
lods
jae
cmpsl
in
xchg
pop
es
adcl
pop
in
das
mov
mov
mov
daa
pop
in
dec
and
mov
push
xchg
mov
pop
inc
aam
push
and
hlt
push
icebp
sets
mov
mov
icebp
lret
mov
das
dec
gs
lcall
ficoml
mov
movsbl
fs
les
mov
push
jecxz
pop
cmp
inc
pop
cmp
insl
lret
lret
lahf
out
jae
lds
mov
sbb
sti
xchg
or
dec
or
call
adc
sbb
jge
inc
mov
xchg
dec
ljmp
add
sub
cmpsl
dec
and
das
sbb
jno
mov
data16
mov
mov
inc
ret
adc
mov
test
dec
roll
xor
push
stos
cld
stos
mov
shll
rorl
out
cli
dec
cli
push
inc
xor
pop
scas
and
sbb
push
popf
mov
jle
sbb
sub
jecxz
sub
aaa
sbb
xor
lret
fadd
out
dec
jp
jmp
ljmp
sar
sbb
outsb
addr16
inc
mov
fimuls
out
mov
sub
push
xchg
add
pop
lea
xor
sub
dec
jne
scas
mov
pusha
mov
out
mov
inc
mov
fnstsw
testl
xlat
rcrl
popa
rcr
or
jl
mov
shll
dec
pushl
jmp
inc
add
pop
dec
push
cld
loope
adc
jmp
popa
push
mov
xchg
ljmp
aam
push
xor
clc
loope
add
lfs
jl
icebp
cmp
pop
and
data16
repz
orb
xchg
int
cmp
and
movb
in
push
inc
inc
sbb
or
fdivr
mov
lcall
int3
lds
push
test
lock
fs
mov
inc
adc
insl
sub
and
inc
into
xchg
inc
mov
push
push
jmp
mov
push
xchg
out
and
sbb
cwtl
lret
std
mov
cwtl
cmp
xchg
jmp
xchg
mov
mov
cmp
lock
pushf
or
xorl
adc
fsubl
imul
sahf
xchg
ret
roll
inc
movsl
nop
add
xchg
mov
jl
mov
cmp
iret
insb
test
test
lock
push
pop
mov
idivb
jae
rep
movsb
call
push
xor
lret
pop
aam
movb
push
mov
mov
pop
push
xor
mov
imul
call
mov
xor
add
add
outsb
pop
push
dec
or
in
aas
fidivrl
in
mov
add
out
arpl
nop
je
xor
or
push
push
sbb
cs
repz
gs
cmpsb
inc
sti
roll
mov
mov
mov
popa
mov
jb
mov
xor
std
lds
and
mov
pushf
out
fwait
sbb
pop
xchg
inc
dec
dec
dec
jne
and
sbb
jmp
int3
shll
xor
push
push
dec
dec
lods
and
mov
mov
loopne
adc
stos
add
int3
xchg
and
jne
mov
push
push
lret
sub
fcomps
cltd
xor
mov
fucomp
mov
repnz
test
test
lea
in
jnp
ret
cmp
push
xor
dec
fnsave
mov
cmpsb
pop
and
fwait
das
mov
xchg
add
shl
call
add
jmp
loop
aaa
and
xchg
mov
mov
mov
and
ret
addr16
sub
push
push
mov
push
jge
mov
jge
je
icebp
cmp
and
pop
imul
adc
loopne
mov
push
inc
xchg
movsb
jmp
push
mov
lock
lock
lods
push
les
fbstp
cld
pop
jne
dec
ja
mov
add
lea
mov
fyl2x
outsl
jb
mov
push
cli
daa
inc
movsl
popf
push
cmp
stos
out
xchg
sub
push
xor
loop
push
mov
sub
mov
and
pop
push
ja
pop
pop
adc
test
pusha
inc
ljmp
dec
push
push
std
repz
clc
out
test
cmp
lea
push
adc
rorl
es
xchg
aam
jb
insb
cmc
pop
pop
call
adc
subb
or
fildl
fmuls
jp
imul
pop
inc
mov
leave
sbb
ljmp
and
xchg
adcl
hlt
test
les
mov
lahf
lea
xlat
adc
cmp
mov
hlt
psraw
loopne
xlat
xchg
int
mov
xchg
repz
popf
mov
and
xchg
cwtl
sbb
leave
ljmp
add
leave
fsubrp
lods
fdivrl
stc
mov
aas
cmpsl
clc
sub
add
sub
and
rorl
int3
sbb
aaa
fyl2x
add
dec
sahf
pusha
add
sti
inc
adc
scas
ret
int
int3
es
out
icebp
enter
pusha
adc
mov
in
xchg
xor
fdivrs
adc
mov
and
or
stc
jmp
inc
mov
push
add
sbb
enter
aaa
in
sub
push
roll
xlat
imul
ds
fdivrl
xchg
or
sbb
fistps
inc
mov
jge
jge
inc
push
jge
or
adc
xor
xor
roll
ret
cmc
cmp
sbb
inc
dec
push
out
cmpsl
xchg
jecxz
mov
dec
mov
loope
iret
mov
jp
mov
es
adc
scas
pop
sbb
sbb
dec
jbe
divl
push
shll
jl
shlb
aad
stc
fadds
add
add
jg
sub
jle
shl
imul
lds
pushf
sub
cmp
push
sub
or
mov
movaps
mov
mov
jae
sbb
mov
lahf
jne
cltd
outsb
iret
mov
xchg
push
lret
pop
add
cli
lcall
adc
and
ss
clc
cmp
or
dec
mov
cli
inc
pop
xor
jl
ds
imul
mov
out
push
outsl
and
mov
shll
popf
in
cmp
ficomps
movsb
xchg
lods
jns
mov
push
inc
in
or
cs
ljmp
aad
test
fs
sub
mov
dec
int3
cld
or
jg
jge
in
int
dec
fst
or
jp
cmpsb
dec
or
xor
cmpsl
pop
inc
fcmovu
mov
or
in
ja
sbb
add
cmp
fstpl
xchg
pop
subl
sub
outsl
ret
notl
mov
dec
and
mov
andl
test
out
xchg
pop
jnp
sub
and
fsubs
jecxz
add
scas
iret
xorl
xchg
pop
test
stos
fbstp
dec
mov
scas
lret
cmp
sti
call
sub
cs
andl
jbe
push
cmpsb
es
lahf
lds
cli
aaa
xor
add
sti
pushf
inc
popa
dec
test
fucom
daa
mov
lcall
lods
xchg
xor
or
inc
daa
mov
push
mov
scas
mov
int
cs
or
push
xor
adc
dec
in
dec
into
icebp
adc
push
sbb
xor
mov
cld
notl
and
or
sbb
sahf
inc
aas
loopne
ss
pop
push
xchg
ret
or
data16
or
punpcklwd
jle
enter
adc
div
xor
gs
jne
arpl
adc
lahf
out
cld
jp
sti
adc
sti
jne
icebp
inc
or
mov
cwtl
xor
jmp
lds
notb
repnz
lods
dec
jle
lods
pop
add
ss
and
lahf
fstpt
or
xor
sub
mov
insb
pop
adc
orb
inc
outsb
xchg
or
jmp
jmp
or
jne
out
adc
add
sbb
xchg
or
xchg
pop
dec
inc
gs
push
out
inc
add
aad
sub
mov
lock
mov
cmpsl
repz
shrb
loope
pop
nop
jb
add
scas
push
dec
cmp
xchg
mov
xorl
mov
jg
shr
sub
jge
ljmp
inc
out
and
stos
in
movsl
popf
popa
dec
sub
pop
or
call
out
mov
push
mov
jnp
mov
lea
les
out
jnp
cltd
ret
loope
scas
cmp
cmp
ljmp
or
or
fiadds
fwait
adc
shl
repz
ljmp
cmp
dec
mov
fcoml
sub
sub
mov
inc
sub
xchg
pop
inc
filds
test
lds
pop
fwait
lahf
xor
loopne
scas
sbb
sub
and
xchg
in
aaa
pop
int
movsl
or
adc
and
lret
or
mov
mov
rorl
mov
mov
inc
mov
je
fsubrl
dec
and
insl
mov
xor
mov
adc
dec
out
push
nop
adc
cmp
out
cltd
jl,pt
shl
jbe
pop
sub
out
adc
push
mov
mov
inc
push
and
fwait
pop
push
mov
es
adc
xchg
sub
imul
and
icebp
lods
stos
push
shr
push
or
pop
hlt
aad
sarb
mov
scas
or
bound
and
pop
je
dec
ja
js
pop
in
std
div
xchg
jmp
push
push
loope
stc
add
sahf
invd
jl
clc
daa
jne
push
or
sbb
push
leave
pop
mov
lea
xchg
sbb
scas
call
lea
in
lret
adc
add
inc
jp
and
inc
lods
repz
push
fs
scas
mov
mov
or
push
push
pop
push
jmp
push
xchg
push
adc
lds
xor
dec
and
push
sbb
cs
push
cli
jg
mov
sub
cmp
jle
gs
inc
jge
and
cs
mov
xlat
sbbl
testl
cmp
mov
sub
inc
test
pop
mov
call
sub
jbe
sub
lret
mov
call
mov
and
xor
mov
inc
xchg
hlt
clc
cltd
pop
mov
movl
call
fists
pop
in
std
test
mov
cmp
loope
test
cmpsb
mov
and
aad
cmc
add
lea
gs
lock
arpl
inc
sahf
xchg
sbb
popf
cmp
push
neg
mov
ja
pop
out
mov
push
add
or
mov
jle
pop
neg
loope
xor
scas
mov
loope
xor
arpl
pop
std
cli
cltd
cld
sarl
ret
push
mov
mov
inc
lret
dec
push
xchg
xchg
out
pop
pop
inc
andb
sbb
mov
xchg
adc
sbb
fimuls
xchg
sub
testb
push
mov
jno
jnp
mov
test
stos
pop
je
pop
lods
mov
pop
cli
add
rcll
imul
adc
cmp
out
popa
pop
std
pop
jno
jbe
add
sub
repnz
cmp
jl
push
jns
xor
mov
rorl
mov
shll
or
cli
sub
fldl
aad
xor
mov
movsb
or
imul
gs
scas
stc
sti
pop
pushl
push
or
aam
aas
sbb
inc
pop
cmp
lods
cmp
mov
add
fwait
orb
adc
int
shll
add
mov
xchg
cmp
pop
shlb
scas
mov
add
pushf
mov
lock
bound
jmp
test
imul
sub
ficomps
mov
pop
adc
enter
jecxz
xor
push
cmp
add
inc
fimuls
add
loopne
dec
and
sarb
jnp
jns
dec
out
adc
dec
popl
fidivrl
pop
int3
dec
iret
pop
mov
xor
or
mov
nop
and
shrb
cs
idiv
sbb
scas
sti
or
mov
dec
mov
out
mov
dec
pop
out
cmpsb
xchg
pop
popa
lret
lcall
sbb
push
fwait
addr16
cs
mov
in
add
dec
fs
repz
cmpsb
xchg
inc
mov
mov
aas
cld
ja
lock
jg
xchg
sub
mov
leave
lret
xor
leave
dec
inc
incb
mov
cmp
out
cmp
pushf
jae
icebp
adc
adc
int3
push
enter
pop
add
push
call
inc
sahf
imul
out
cwtl
arpl
jmp
das
in
out
es
out
push
cwtl
out
mov
or
cmp
outsl
jbe
or
jmp
adcb
pop
xchg
loopne
loope
ja
or
ret
fs
add
dec
jne
or
mov
adc
mov
mov
loopne
or
sahf
cwtl
add
popa
fimuls
mov
fisubs
rorl
cltd
xor
push
js
push
dec
xchg
mov
cmpb
mov
enter
sarb
jl
pop
je
cmc
jecxz
movsl
lods
xchg
lahf
jb
sarb
ds
sbb
jb
or
icebp
in
rorb
mov
and
add
int3
sti
jne
lcall
orl
ficompl
mov
pop
jle
push
and
inc
mov
mov
xor
sub
ss
mov
mov
adc
loope
lcall
mov
mov
test
aad
push
repz
sbb
outsb
and
fmull
sub
movsl
and
add
std
mov
xor
sahf
lods
xor
add
stc
test
cwtl
xor
xor
jnp
ret
push
cmp
inc
into
stc
lahf
loopne
and
shlb
sub
jbe
and
cmp
pop
push
sub
sub
fbld
adc
mov
and
or
adc
jae
pop
xchg
adc
cmp
aad
lea
push
shll
cmpl
cmp
adc
push
and
aas
or
sub
mov
addr16
xor
or
aam
mov
xor
adc
mov
popa
sub
inc
fstl
lcall
xor
sbb
fsubl
cmc
pusha
pusha
sahf
cltd
push
push
loopne
sub
or
mov
push
pusha
push
xlat
fistl
loopne
scas
and
insl
cmc
xchg
adc
data16
out
aaa
xor
scas
scas
sahf
in
mov
and
nop
es
into
int3
mov
int3
clc
dec
mov
dec
cmp
jae
xor
sbb
cmpsb
xor
in
out
mov
adc
int
or
cmpb
enter
addl
dec
ljmp
mov
jmp
lret
mov
mov
loopne
sbb
push
mov
mov
push
loopne
pop
sbb
push
pop
pop
ret
call
sub
das
inc
les
mov
jp
divl
call
adc
dec
pop
pusha
ret
iret
pop
sub
pop
enter
mov
cmp
xor
rcrl
insb
and
in
push
insb
sahf
mov
jge
dec
mov
in
sub
or
xchg
mov
xchg
aad
rorl
and
jle
into
push
in
or
cld
mov
inc
xchg
ret
mov
js
cli
add
mov
adc
bound
dec
or
mov
rol
loope
xchg
loope
inc
insl
stos
add
xchg
popf
std
push
push
inc
lods
push
mov
xchg
jo
sub
push
jb
in
push
fisttps
fwait
jo
cmpl
je
mov
mov
test
outsb
lock
out
jae
xor
std
pusha
mov
add
repnz
imul
pop
cmp
xchg
dec
mov
fs
dec
mov
xchg
lahf
call
aas
js
out
push
inc
xchg
sbb
aad
cmp
cwtl
mov
pushf
xchg
mov
gs
inc
and
lds
xor
jo
movsl
or
adc
sar
fadd
loop
sbbl
dec
ret
rorl
xchg
pop
inc
arpl
xchg
das
in
jnp
addr16
test
cmp
mov
xor
push
cmp
pushf
imul
mov
mov
out
jmp
add
xor
jno
xchg
fistps
mov
add
sub
das
lahf
or
dec
out
and
mov
shufps
cmc
dec
jl
mov
jb
ljmp
add
xchg
enter
in
jecxz
sbb
adc
in
adc
sbb
xchg
fsub
pop
xor
xchg
aad
inc
mov
and
xchg
int3
pop
xor
mov
stc
fisubrs
push
ds
jns
inc
lcall
rcrl
pop
sti
xchg
sub
loopne
jg
inc
sahf
pop
es
arpl
mov
xor
inc
test
cmp
aaa
sahf
cmp
leave
inc
jnp
les
clc
cmp
sbb
jp
mov
imul
mov
mov
scas
sub
out
mov
test
mov
push
test
push
xchg
pop
mov
pop
cltd
and
dec
mov
fwait
dec
negb
sbb
add
push
in
fs
xchg
cmp
jge
mulb
add
fldt
pushl
inc
test
sbb
fidivrl
stc
xchg
sbb
pusha
inc
cwtl
xor
adc
mov
xchg
jno
icebp
in
xchg
adc
inc
pop
insl
pushf
cmp
xor
jecxz
roll
fadd
mov
test
addr16
and
outsl
out
push
dec
sbb
cmp
mov
fmuls
push
mov
add
lret
mov
xchg
shl
sub
and
mov
inc
repz
sbb
pusha
sti
movsb
push
into
stos
cvtpi2ps
stc
mov
nop
xchg
jle
add
mov
push
ja
push
out
inc
popf
push
out
das
mov
dec
xorl
dec
mov
jge
cmpsl
in
stos
pushf
aad
rol
pop
xor
mov
mov
push
sbb
enter
pop
dec
aad
lret
push
fwait
sbb
jnp
popa
or
mov
loope
inc
adc
shlb
xor
pushf
fstpl
sbbl
cmp
inc
clc
jmp
test
ljmp
mov
movsl
jp
dec
in
and
sub
jno
dec
mov
lds
pop
call
cs
jno
mov
test
mov
or
das
adc
mov
lock
fdivl
fisttpl
jno
bound
and
fistl
mov
push
mov
ds
cmpsl
jb
scas
dec
xor
inc
fbld
pushf
scas
xor
add
xchg
scas
in
or
jno
push
and
popa
mov
pop
ljmp
ss
aad
out
push
cwtl
std
xchg
js
movsl
lcall
mov
pop
adc
push
and
inc
fistpl
fiaddl
loopne
xor
jno
cmpsb
xchg
adc
lcall
gs
aas
pushf
into
cwtl
divl
inc
inc
test
lds
jg
or
call
testb
jge
setae
jp
addb
lahf
or
rorl
xor
testb
cmpsl
ret
imull
and
mov
daa
xorb
ret
dec
scas
clc
mov
insl
push
icebp
mov
adc
ds
or
sbb
fldl
int3
jns
adc
std
repnz
adc
dec
push
sarl
leave
jle
xchg
js
dec
js
icebp
sbb
insl
mov
in
mov
or
cwtl
mov
add
cmp
adcb
insb
lds
rorb
or
adc
mov
mov
in
fwait
sbb
je
sub
jle
mov
and
add
ljmp
or
jnp
cli
pop
jg
outsl
and
lret
xchg
fsts
mov
dec
jg
insb
sub
mov
sub
arpl
std
sar
dec
jle
fdiv
stos
repz
sbb
data16
aad
and
enter
ret
push
xchg
cmp
rorl
in
dec
ficoms
and
sub
jbe
push
push
scas
cld
jne
push
xor
adcl
pop
inc
add
cmc
lcall
out
or
mov
dec
jnp
jl
mov
dec
pop
and
xchg
push
adc
adc
cltd
dec
int
push
mov
stos
int3
std
add
sar
xor
push
cld
push
enter
inc
xlat
adc
call
movsb
jo
push
dec
test
mov
lds
out
sub
ja
sub
push
inc
imul
push
shr
mov
cmp
adc
push
cltd
cs
sub
mov
push
fucomp
loopne
sbb
jae
daa
inc
stos
addr16
push
loope
lcall
push
sub
dec
bound
xchg
ficoms
xchg
mov
add
and
cmp
xchg
jb
adcb
xor
je
pop
inc
dec
repnz
mov
add
movsb
mov
xor
xor
mov
sti
push
lds
cmpsl
imul
jae
jno
sub
cs
xchg
aas
jo
xchg
lods
js
xchg
push
rcl
adc
mov
cmpsl
arpl
pop
xchg
xor
jmp
fistl
and
sub
inc
mov
pushf
inc
push
stos
mov
fiadds
jge
jno
movsl
imul
pushf
pop
mov
mov
iret
jnp
cmc
pop
int
lock
jo
add
xchg
push
test
test
iret
fdivs
or
nop
dec
sti
fstl
jmp
loopne
ja
or
fcmovb
insl
ror
clc
mov
aaa
outsb
enter
iret
loope
shl
cli
inc
inc
insl
lea
loope
add
aaa
push
stc
dec
arpl
not
rcr
add
mov
es
in
cmpsb
cltd
mov
movsb
jns
shlb
ret
out
dec
imul
jns
pop
fimull
mov
fisttpll
sbb
cmp
aaa
mov
mov
inc
fistps
ret
out
scas
into
push
insl
pusha
pop
jb
add
fwait
mov
clc
push
push
cmp
sbb
insb
add
ss
lcall
xor
ja
lret
pop
outsb
into
xor
push
int3
lock
aas
mov
sub
int
test
imul
lock
aam
stos
call
pushf
fnstenv
cmp
mov
das
frstor
mov
fists
xor
cmp
in
insl
call
scas
notl
imul
xor
cmp
rorb
hlt
adc
pop
sub
aad
pop
stc
shl
dec
sahf
lea
in
in
cmpsb
pop
les
call
data16
orb
ja
lea
mov
in
out
xchg
in
push
scas
xlat
xor
cld
push
pop
cmpsl
or
sbb
pop
cs
pop
test
pop
addr16
daa
mov
scas
icebp
push
xchg
shrb
mov
mov
lock
mov
and
pop
fsts
cli
rol
daa
pushf
data16
aad
dec
adc
insb
xchg
out
icebp
jnp
outsl
jo
xor
mov
mov
add
inc
pop
add
xchg
or
fnstcw
stos
mov
scas
aam
push
push
test
cmp
mov
test
adc
data16
hlt
sbb
pop
pushf
mov
addr16
in
ficompl
inc
mov
pop
stc
fisubrl
cmc
sti
fs
adc
jmp
sbb
pop
xchg
add
inc
xor
jp
jns
ret
dec
test
inc
add
dec
test
sbb
out
rorb
cwtl
and
mov
popf
sti
xchg
or
outsb
mov
movsb
push
stos
lahf
fld
lock
push
repz
enter
push
scas
fcoml
mov
mov
hlt
mov
add
rcrl
xchg
cmp
rolb
and
mov
sbb
cli
shll
xor
pop
mov
lods
push
ljmp
lahf
fdivl
call
fimull
jmp
cs
xor
divb
jnp
imul
jns
pop
movsb
pop
or
sbb
push
inc
outsl
mov
mov
ret
les
in
push
push
sub
cmpsb
notb
leave
call
push
rolb
pop
mov
adc
lods
xor
aaa
mov
ret
pop
push
jecxz
xchg
cltd
jbe
push
jbe
adc
cmp
sti
mov
les
xor
fstl
lret
dec
in
lods
imulb
out
shl
shll
push
dec
pop
lods
pop
dec
mov
jecxz
push
es
mov
movsl
sar
dec
push
test
imul
cmpsb
lcall
and
imul
xchg
sahf
ds
aas
loopne
xchg
inc
pop
sub
jnp
sub
jne
orb
dec
mov
mov
push
daa
lods
inc
push
xchg
mov
fwait
or
into
sub
sub
sahf
cld
loop
adc
fucomip
xor
dec
mov
sarl
inc
mov
or
adc
cli
mov
lods
xchg
out
pcmpgtb
fsubrs
pusha
xlat
push
or
xor
mov
mov
mov
dec
bound
shl
sub
sub
mov
mov
out
xor
mov
in
mov
je
jle
mov
lods
stos
dec
jnp
fisttpll
sbb
negb
movsb
mov
add
aaa
mov
jno
shlb
ret
ljmp
or
jbe
sbb
pop
dec
lods
mov
cmp
jle
fldt
das
sbb
xchg
aas
mov
les
or
shll
aad
and
fidivrl
push
pop
push
xchg
sti
cltd
lods
ds
and
adc
das
pop
lcall
std
inc
jecxz
xlat
add
imul
cltd
lock
mov
cs
cmpps
sub
jmp
jle
jl
mov
pop
fucomi
sbb
pop
inc
lcall
dec
ja
ret
shrb
xor
lods
dec
mov
dec
imul
aas
sub
jnp
dec
jmp
sub
push
fidivs
rcl
mov
imul
jbe
fwait
je
push
add
add
insl
sbb
mov
loop
stc
or
jge
loope
arpl
cltd
jge
lahf
mov
push
lret
cmp
sub
and
xchg
sub
cltd
jbe
jbe
clc
xchg
xlat
mov
loop
mov
int3
and
rorl
mov
push
cld
call
xor
ja
scas
shlb
mov
mov
sub
jae
sbb
dec
sbb
jne
ret
je
push
sbb
lods
shlb
dec
fistpll
mov
aad
jo
ret
inc
fs
shl
mov
rcrl
pop
cmp
jp
pop
aaa
out
cvtdq2ps
pop
imul
push
loope
or
dec
aaa
into
je
scas
aam
dec
adc
sbb
dec
cmpsl
mov
mov
pop
add
mov
daa
inc
cltd
neg
iret
mov
js
dec
ds
lcall
add
and
std
xchg
or
adcb
xor
rcr
pop
sbb
pop
cmp
push
mulb
sub
nop
jo
pushf
lds
imul
jns
test
jno
cltd
mov
inc
or
cmp
inc
clc
mov
in
add
cmp
lahf
mov
push
in
push
cld
out
jmp
cmp
std
hlt
fimuls
pop
les
roll
loope
sbb
inc
in
popa
push
pop
inc
ss
lock
push
xchg
ret
inc
mov
cmp
cmc
mov
pop
mov
cmc
adc
jns
push
or
fildll
xchg
mov
enter
or
inc
popa
in
xchg
dec
xchg
cmp
jnp
push
addr16
mov
dec
cmpsb
cmp
dec
leave
mov
or
and
adc
lea
pop
in
addr16
push
push
jo
ljmp
popa
scas
roll
enter
xor
cmc
lods
mov
pop
mov
in
fwait
pop
lahf
addb
test
sub
loopew
es
loop
mov
xchg
push
push
frstor
fsts
jmp
clc
adc
clc
and
sub
faddp
ss
jecxz
int
pop
inc
hlt
pop
xor
loop
inc
sahf
insl
enter
fdivrs
pop
leave
imul
lahf
lcall
es
sub
enter
mov
mov
inc
out
bnd
fistps
in
add
andb
rol
or
xor
xor
shl
movsl
das
insl
cmp
mov
sahf
mov
mov
sahf
xor
pop
adc
mov
dec
cmpsl
and
cltd
mov
ror
mov
sub
add
lcall
add
xor
inc
shrb
adc
jne
inc
push
sbb
push
push
and
or
fcoms
mov
or
adc
xchg
outsb
ljmp
fstl
mov
cld
mov
add
pop
and
pop
adc
aam
pop
imul
and
aam
dec
hlt
movsb
jge
jns
jns
lret
push
jge
cld
pusha
loope
mov
dec
pop
shl
push
ds
cwtl
outsl
repnz
sub
stc
pop
lock
mov
xor
lahf
mov
or
adc
inc
scas
mov
jl
dec
mov
insl
test
fcoms
push
xor
push
outsb
popa
mov
sahf
adc
sub
mov
inc
cmp
xchg
lret
data16
cmpsl
or
jge
pop
dec
cmpsb
or
aam
lea
mov
inc
cmpps
scas
lret
lods
add
rcl
add
scas
movsb
and
lret
and
mov
lods
adc
shr
lock
cltd
enter
inc
test
jmp
in
dec
fsubrl
lahf
fucomp
hlt
movaps
les
std
cmpsl
inc
jne
mov
push
sahf
pop
mov
and
xchg
repz
iret
imul
jae
lcall
cmp
dec
mov
mov
mov
fldl
fisttpll
or
insl
pop
mov
inc
mov
push
insb
mov
sbb
pop
aaa
call
lods
in
push
insl
sub
pop
push
jo
shl
mov
movsl
iret
and
fidivl
push
push
sarl
out
test
out
adc
ljmp
sub
add
mov
push
xchg
mov
rcrl
stos
rolb
jns
adcl
dec
jbe
iret
popl
int
rcll
cld
mov
call
mov
sbb
mov
mov
and
add
push
or
imul
test
add
test
dec
lds
fs
adc
mov
shlb
lock
cltd
adc
jmp
cli
adc
dec
add
push
fwait
lock
jl
push
es
mov
loop
jno
mov
inc
mov
enter
xor
outsb
lret
fprem
jmp
adc
mov
inc
jecxz
out
lods
jle
pusha
pop
aas
ja
xchg
sar
int
sub
int
cmpsl
pop
sbb
sub
cmpsb
xorb
pop
shrl
xor
mov
sbb
dec
xchg
cmp
cmpsl
mov
push
mov
cmp
jb
clc
jecxz
pusha
fidivl
sbb
addr16
shlb
and
loopne
sub
pop
sbb
xorb
lods
pop
mov
mov
test
jl
clc
aas
dec
pop
scas
cmpl
int
xchg
cmp
test
adc
or
dec
ljmp
cmp
or
lret
call
out
test
and
push
test
and
mov
xchg
jo
mov
xchg
lods
mov
jb
push
jg
mov
mov
test
test
pop
cmc
in
fwait
cmp
insl
sti
scas
sbb
repz
pop
ret
mov
cld
fwait
out
xchg
push
dec
loop
subl
int
sbb
out
xchg
push
cwtl
push
and
inc
test
loope
jle
insb
out
jnp
lods
incl
push
push
sbb
xor
flds
xchg
push
xchg
and
mov
bound
dec
in
rorl
mov
in
sub
jno
jl
adc
insb
inc
mov
sbb
in
add
scas
xor
mov
insl
fnstsw
pusha
or
inc
aaa
mov
rcrb
mov
rcrl
int
repnz
pusha
fbld
adc
gs
or
push
rorl
sbb
adc
mov
pop
frstor
ljmp
adc
pop
add
xchg
in
es
xchg
mov
add
or
rorb
jnp
andl
mov
and
or
sti
js
xor
push
xor
into
addr16
or
push
push
xor
or
daa
in
cmp
stos
aas
sahf
addr16
jo
scas
push
mov
lahf
int3
setle
rep
mov
and
mov
jp
scas
or
cmc
out
pop
push
gs
dec
pop
push
stc
aas
sti
mov
fiadds
jno
gs
or
mov
xchg
out
pop
dec
je
and
push
jo
adc
and
push
push
mov
lds
jno
dec
fbstp
aas
sbb
or
aad
mov
aad
pop
xor
scas
out
sub
cmp
not
mov
aam
stos
cmp
sbb
cltd
lods
ss
xchg
xor
gs
daa
jecxz
loope
add
fsubr
fimull
leave
and
fcomps
addr16
stos
cltd
xchg
sub
movsl
push
xchg
jae
add
pop
addr16
mov
sub
pop
lret
fdivl
mov
pop
scas
xchg
mov
cld
inc
pop
cmp
mov
imul
pop
add
mov
mov
sub
adc
mov
data16
scas
pop
or
mov
xor
les
cmpsl
cmp
sbbl
push
pusha
jne
cmp
push
test
or
test
hlt
adc
pop
add
enter
xor
mov
or
dec
sub
sub
loopne
and
push
xor
decl
pop
test
jg
xor
pop
test
sub
dec
sub
or
ja
pop
jmp
cmpsl
js
pop
scas
inc
jmp
mov
inc
mov
es
xor
inc
stos
xchg
sti
cmp
mov
inc
jge
shll
cmpsl
loopne
push
loope
add
cmp
inc
out
shrl
cltd
or
pop
jno
jp
jecxz
outsb
and
icebp
lods
inc
mov
int
mov
mov
movsb
lcall
adcl
addr16
in
sbb
pop
lock
lret
xchg
jo
xor
cmp
in
mov
nop
inc
mov
hlt
dec
ljmp
nop
mov
jmp
mov
je
pushf
xchg
sbb
xor
add
xor
xor
loope
mov
sub
xor
in
loopne
sbb
jb
inc
insb
mov
call
or
repnz
testl
stc
mov
aad
inc
xlat
loop
or
sub
bound
std
cmp
pusha
jno
in
movsl
dec
cmp
lret
aam
push
and
inc
xchg
mov
xchg
and
and
ja
loop
sub
push
aas
mov
xor
les
sbb
add
mov
hlt
faddl
aad
inc
js
in
mov
mov
add
ror
dec
pop
mov
pop
pop
repnz
sbb
rol
add
aam
out
paddb
sub
out
roll
push
rorb
xor
imul
popa
loop
ret
sbb
jle
fdivl
cmpl
cmpsb
test
cmp
mov
popa
loop
fldcw
jbe
stos
insl
lcall
neg
add
mov
mov
xchg
in
jmp
xor
stos
out
mov
mov
cmp
fnstsw
mov
pusha
and
outsl
xlat
ds
fstpl
ret
rcrb
mov
outsl
daa
sbb
cmpsl
hlt
xchg
fsubrs
push
fcmovnu
cmp
lret
jl
cli
lahf
mov
sbb
mov
cs
push
jge
jmp
iret
int
enter
idivb
cltd
push
dec
aaa
mov
jb
movsb
push
fwait
shl
mov
jle
enter
dec
inc
xchg
pop
aam
cltd
dec
aaa
sub
rcrb
cmp
inc
fwait
push
xor
sbb
mov
jge
mov
dec
and
push
or
or
shll
xor
rorb
add
adc
aad
pushfw
out
andb
cmp
sub
negb
jp
sbb
add
sub
imul
mov
xchg
lcall
dec
repnz
jne
test
cmc
sbb
popf
mov
jno
add
nop
push
inc
ret
js
jb
lock
xor
rclb
sub
mov
subl
jge
pusha
cmpxchg
lock
sbb
rol
mov
inc
outsb
fidivrs
mov
sbb
cmp
jg
insb
les
push
mov
jbe
mov
add
xor
enter
das
rcrb
int
jmp
xchg
lods
stc
jg
inc
pop
mov
sar
xchg
dec
rorb
fs
loope
pop
cmpsl
lds
jne
test
push
push
jns
popf
push
ror
push
jb
mov
data16
arpl
push
xor
jne
push
ret
fidivrl
jnp
cli
out
data16
push
js
add
dec
les
in
sbb
xor
ja
out
xchg
jge
out
push
pop
mov
iret
jg
sahf
inc
data16
pusha
sub
fwait
inc
loop
lcall
aas
lcall
sub
or
mov
rcrb
inc
sbb
adc
movsl
add
aad
movsb
popa
mov
mov
or
adc
stos
mov
dec
scas
fs
dec
fnsave
mov
popa
mov
sub
inc
in
mov
nopl
nop
jne
rcl
mov
outsb
dec
mov
popa
push
pop
or
movsb
sub
fisttpl
sar
and
stos
mov
mov
mov
sbb
adcb
arpl
je
xchg
in
lahf
pf2id
hlt
and
pop
hlt
xchg
mov
dec
cmp
cmpb
sub
jne
xor
lods
jmp
adc
cmp
xchg
stc
loope
jbe
and
cmp
lret
xchg
fucom
pop
int
xor
pop
sbb
xor
add
outsb
add
xchg
cltd
arpl
mov
xchg
dec
push
xchg
inc
adc
mov
mov
push
mov
in
dec
cltd
test
mov
lcall
nop
pushf
adc
repz
pop
push
int
jp
loope
js
sbb
push
std
add
inc
lcall
or
ljmp
xorps
test
call
out
iret
cli
stos
cmp
cmp
stos
jns
int
inc
cmp
push
bnd
aaa
imul
mov
xchg
push
stc
add
cld
jnp
fisubl
add
cmpsb
mov
das
fs
xor
arpl
insb
shlb
insl
sbbb
ds
insl
or
pop
cli
xor
push
pop
jo
mov
andb
fmuls
jne
or
div
shl
mov
push
test
sbb
adc
out
sub
roll
and
jl
pushl
popa
aam
inc
add
cmp
mov
pand
jmp
stc
fldenv
insb
adc
push
enter
push
cmp
pop
sub
dec
in
addr16
jp
call
std
jl
aaa
mov
jnp
mov
test
cmpl
cmc
adc
lock
mov
push
inc
and
jb
sbb
or
das
popf
leave
and
shlb
xor
adcb
cmp
jmp
stc
repnz
fiadds
pusha
add
fwait
mov
cld
mov
inc
inc
or
inc
mov
roll
push
mov
push
xchg
in
movsb
bound
and
call
loopne
inc
loopne
fucom
and
mov
pop
shl
std
cmp
dec
out
sbb
call
gs
pop
dec
or
sbb
ds
pop
loopne
push
iret
jns
aam
mov
outsl
rcrl
xor
dec
and
mov
daa
fcmovnbe
or
ljmp
push
mov
in
fstl
dec
shrl
leave
mov
push
addr16
lret
sub
sub
xchg
mov
jno
mov
cld
rolb
mov
imul
scas
cmp
aaa
pop
mov
mov
xor
or
mov
pop
xchg
pushf
xor
mov
jno
pop
lret
pop
ljmp
push
out
jg
dec
testb
lret
or
std
jp
pusha
jge
insl
in
lret
int3
mov
adc
jns
jl
sbb
dec
push
out
cmp
jne
out
cli
js
scas
rcrb
push
cmp
rcr
jl
pop
mov
iret
add
hlt
outsl
xchg
push
sub
lods
jmp
imul
push
lock
mov
setl
mov
sub
cmp
aaa
mov
push
mov
push
addr16
movsl
xor
dec
mov
jecxz
cmc
xor
lds
pop
sub
stos
test
test
aas
js
and
lods
neg
leave
fldenv
jnp
stos
out
cmp
sub
mov
mov
cmp
or
insl
push
leave
mov
loope
mov
xchg
inc
imul
das
mov
nop
leave
fsts
outsl
jg
fsubs
cmp
xchg
pop
popa
scas
fsubrl
cmc
pop
aas
test
jp
xor
lcall
cltd
pop
in
int
mov
push
jae
cmp
nop
mov
stc
iret
ror
sbb
outsb
sbb
sahf
jnp
rclb
xor
je
imul
scas
mov
ss
hlt
les
adc
lahf
clc
adc
pop
mov
cmp
test
nop
lcall
mov
adc
data16
mov
add
aas
mov
lcall
fbld
sbb
and
lcall
lds
pop
nop
mov
mov
mov
dec
incb
test
loop
in
mov
nop
lea
xchg
jo
leave
pop
outsb
cmp
pusha
mov
fisttpl
dec
inc
adc
pop
in
mov
test
jae
inc
cmp
stos
jle
fs
js
fsubr
js
dec
cltd
dec
jmp
adc
sub
lahf
pop
out
cld
dec
push
in
or
dec
xchg
sub
mov
cmp
adc
ret
inc
push
out
push
fbld
cmp
or
fsubrp
push
popf
lods
mov
gs
inc
adc
mov
pusha
or
cmp
mov
ficompl
or
stc
sub
or
cmp
cld
pushf
mov
and
lock
addl
leave
test
mov
aas
divb
cmc
jae
sarl
push
pop
and
inc
lods
nop
inc
add
jno
clc
xchg
pop
xor
hlt
imul
mov
int3
and
into
ret
pop
lea
lret
mov
ret
mov
f2xm1
es
and
sahf
jb
add
ret
inc
ret
int3
pop
test
test
inc
mov
push
dec
aad
es
jne
dec
mov
adc
add
fs
adc
and
enter
jns
inc
fwait
mov
faddl
stos
jbe
sub
xor
jg
lea
or
movsl
js
rorl
out
sbb
mov
dec
mov
jbe
mov
dec
outsl
add
aam
pop
mov
or
pop
adc
push
jecxz
pop
fsubrl
pop
ret
push
stos
xor
adc
adc
mov
or
stos
ret
xchg
loope
and
aas
ljmp
ja
inc
pop
cmp
lret
scas
out
inc
sub
movsb
xor
jo
and
sub
cmc
into
ret
lret
cmpl
cmp
es
pop
sar
fwait
scas
sbb
outsl
push
mov
inc
bound
or
lea
nop
pop
lds
mov
xchg
addl
mov
ljmp
sbb
push
repnz
das
das
sub
ss
loope
and
aam
adc
xchg
adc
and
test
stos
stos
xor
cmpl
sbb
icebp
lahf
inc
jb
pop
lds
adcl
insb
out
add
adc
js
lahf
mov
stos
out
jg
xchg
add
out
mov
sub
xor
pop
xchg
and
into
lret
imul
fldenv
mov
out
inc
pop
and
int
test
inc
imul
mov
jle
popf
lods
jb
fbstp
lods
nop
mov
arpl
leave
pop
into
dec
mov
pop
or
inc
outsl
fsubrl
popa
mov
mov
and
repz
xchg
lret
movsb
or
xchg
or
sub
jns
xchg
lcall
pop
push
xchg
test
lds
jno
les
cvttps2pi
push
lea
mov
loope
jg
ret
pusha
adcb
push
movsb
loop
xchg
xchg
sbb
js
jle
dec
fsubs
repnz
mov
iret
inc
hlt
stc
dec
jbe
outsl
sbbl
imul
lret
cli
pop
cmpsl
out
mov
je
mov
push
aas
scas
sbb
mov
movsl
mov
push
lods
imul
adc
sbb
xchg
pop
xchg
lret
jmp
fstpt
cmp
fimuls
jns
aad
xchg
sahf
insb
or
stos
jae
into
outsb
lea
xchg
adc
cli
mov
cltd
mov
mov
or
or
shl
sbb
test
or
fiaddl
mov
leave
mov
fucomip
fldcw
in
pop
inc
mov
jmp
dec
jmp
dec
add
sbbb
xchg
outsb
pop
sub
mov
out
orb
or
nop
pop
push
aam
hlt
sbb
pop
push
pusha
or
ds
ljmp
sbb
cmpsl
or
push
test
xchg
fidivrl
insb
call
add
cmp
daa
jp
push
cmp
or
dec
ds
loope
lods
xor
and
fldcw
ljmp
nop
push
push
loop
sbb
insb
outsl
mov
sbbl
sbb
int3
inc
add
stos
sub
jne
ljmp
jmp
jge
mov
fstpl
mov
xor
adc
out
mov
cmp
or
rcrl
xor
xchg
jae
pop
sbb
in
cmp
incb
dec
mov
xchg
xlat
jns
lods
pusha
and
jg
lcall
out
add
pop
sbb
cmp
lea
push
pop
add
pop
pop
adc
test
lock
push
lahf
sti
pop
insb
aas
jnp
jle
scas
mov
mov
rcl
lret
pop
inc
arpl
inc
test
popl
ljmp
pushf
fstps
or
loop
shlb
pop
or
pop
jbe
mov
push
fisttps
dec
or
fdiv
xor
sbb
adc
sbb
mov
adc
xchg
push
xlat
mov
cs
jecxz
push
cwtl
or
sbb
cmpsb
pop
xor
stos
cltd
dec
ror
push
or
in
inc
sub
std
sub
cmc
sub
push
rolb
sbb
ljmp
pushf
push
mov
loope
pop
push
subl
add
or
subl
sar
mov
xor
sbb
mov
das
mov
sbb
pusha
jbe
shl
dec
sahf
test
data16
mov
icebp
ror
cmp
push
icebp
es
jns
nop
icebp
mov
stos
call
stos
mov
xchg
aad
hlt
xchg
jp
inc
jns
stos
in
ljmp
or
arpl
inc
mov
or
insl
cltd
in
adc
xor
inc
in
mov
push
and
inc
push
lods
imul
sbb
sahf
lret
insl
sbb
in
lret
cmc
push
lahf
les
and
popa
and
jle
sbbl
ret
imul
cmpsl
mov
dec
inc
sub
mov
cmpsl
gs
cmp
aaa
dec
cmp
jl
dec
jg
popa
setg
adc
xchg
inc
dec
adc
decb
inc
shl
mov
jne
dec
or
cmp
pop
mov
inc
fdivrs
and
leave
mov
test
mov
sub
fsubrs
mov
cmc
lods
dec
test
sub
cs
adc
push
lock
add
or
pusha
jnp
dec
and
in
push
lods
mov
mov
mov
push
sub
mov
pop
pop
mov
ja
sti
frstor
jb
sub
sti
pop
cltd
mov
push
adc
dec
cs
and
int3
ljmp
xchg
sbb
shrb
jl
das
mov
jns
mov
out
mov
clc
sbb
add
stos
mov
or
push
mov
test
out
sbb
mov
jp
mov
lret
sbb
fiadds
cli
and
out
dec
mov
inc
xor
rcrb
sub
mov
mov
sbb
sti
cmp
xchg
cltd
xor
and
xlat
and
pop
inc
jno
pop
jg
nop
lahf
inc
jle
hlt
mov
pop
sbb
dec
sbb
cmp
ja
xchg
es
cmp
sahf
sbb
cmp
jnp
outsb
lret
push
mov
jg
xlat
clc
lea
mov
and
stos
mov
add
xchg
popa
sub
adc
push
sbb
or
lods
test
and
or
dec
into
push
xor
and
sub
cli
mov
pop
and
addr16
and
or
mov
outsb
mov
lcall
mov
repnz
adc
mov
je
test
popf
js
add
pop
sbb
je
push
pop
testl
sbb
loop
push
movd
or
and
push
lods
addr16
adc
stos
cmp
add
aad
sbb
xchg
dec
pop
pop
lock
dec
pop
push
push
std
and
inc
sbb
pop
inc
outsb
out
mov
ss
movsl
sub
jo
sub
or
push
mov
push
imull
in
out
test
inc
lret
xor
push
pop
ja
frstor
push
fdivl
dec
jmp
or
inc
imul
bound
inc
aas
lods
jmp
pop
jge
enter
and
arpl
shrl
cmp
xchg
in
xorb
iret
jle
dec
xchg
mov
into
cld
rcrl
inc
push
sbb
jmp
leave
adc
sub
push
xchg
xor
fiaddl
imul
add
out
test
sbb
pop
jecxz
orb
xchg
xchg
ror
dec
test
mov
out
es
in
outsl
sar
xchg
or
push
in
xchg
jne
add
les
sahf
or
mov
clc
out
in
test
push
gs
fwait
mov
lods
jb
in
dec
xor
fistps
mov
xor
pusha
test
jbe
repnz
ds
inc
add
xlat
mov
insl
out
mov
mov
inc
cltd
pop
rcl
out
jecxz
outsl
stc
loopne
lock
mov
pusha
jmp
pop
mov
xchg
inc
loopne
adc
popf
xchg
pusha
lahf
cwtl
pop
pop
pop
mov
int3
or
cmp
adc
push
stc
xor
aad
push
hlt
cli
or
mov
dec
mov
adc
rcr
cmp
ret
sbb
mov
adc
mov
pop
dec
loope
jp
inc
push
in
mov
xor
xchg
in
lcall
nop
lahf
sub
ja
daa
mov
ret
xlat
mov
cld
js
or
adc
dec
ret
mov
mov
dec
mov
mov
sub
insl
xchg
outsb
dec
icebp
and
pop
fistpl
mov
aaa
inc
xchg
pop
mov
jl
icebp
jns
push
mov
and
stos
nop
vmovsldup
fistpl
decb
jmp
cmp
in
cmp
sub
sub
movsl
test
inc
imul
mov
sub
scas
cwtl
jns
dec
call
cld
xlat
sar
cld
mov
cmp
lea
sbb
arpl
lcall
push
fiaddl
pop
sbb
mov
mov
xor
adc
js
mov
je
mov
js
movsb
sub
cli
xor
add
cmp
and
dec
es
pushf
jbe
and
test
sub
push
imul
add
fbld
arpl
xor
out
les
mov
std
dec
icebp
push
mov
stos
icebp
daa
inc
int
add
nop
cltd
addr16
movsl
in
aas
std
sbb
add
inc
sbb
cli
dec
movsb
push
cmp
jno
cmc
out
rcrb
jae
jge
pop
out
sub
mov
jns
cmp
jnp
ds
cmp
ljmp
mov
jo
mov
pop
inc
jb
push
sbb
mov
sbb
xchg
int
pusha
sbb
sbb
out
popa
sub
or
repnz
call
pushf
outsl
rorb
into
movsl
xor
call
ret
pop
xor
cmp
cmp
or
jmp
jno
rcl
inc
xchg
dec
nop
mov
loop
inc
jge
ret
movsb
addr16
stc
xchg
int3
inc
jge
push
adc
movsl
cmp
subl
cmpsb
hlt
dec
das
xchg
rcr
cmp
cmp
scas
pusha
or
imulb
xor
jo
pop
outsb
sub
mov
les
sub
in
std
popf
nop
mov
dec
jg
out
stos
pop
cmpsb
aas
out
sub
mov
mov
lods
repz
test
pop
mov
shrd
push
xor
add
sub
mov
sub
mov
xchg
add
pop
in
das
fdivrl
push
dec
pop
ljmp
cmpl
mov
rolb
lahf
inc
fists
in
bound
fsubs
xor
sti
movsb
mov
sub
js
mov
xor
shlb
sbb
or
test
push
push
movsb
dec
inc
jg
jae
test
lea
mov
mov
mov
pop
and
imul
push
nop
aam
or
sar
stc
jge
sarl
sub
sbb
ss
iret
repnz
addb
xor
xchg
dec
addr16
rclb
xchg
add
ja
daa
jno
test
iret
pop
ja
dec
jge
icebp
push
push
jnp
push
pop
lds
call
mov
cmp
pop
xlat
inc
pusha
shrb
push
pop
jno
adc
push
in
mov
mov
mov
sub
dec
xor
xchg
pop
lcall
dec
es
les
dec
adc
xor
pushf
jmp
frstpm(287
cmpb
cmp
xchg
cltd
movsl
or
lcall
gs
icebp
data16
repz
adc
xor
int
shrb
in
adc
add
xchg
scas
push
mov
cmc
push
mov
imul
cmpsb
out
and
or
subl
les
pusha
test
pusha
xlat
adc
xchg
add
cwtl
jecxz
ss
cmpsb
flds
in
pop
xchg
out
mov
icebp
mov
or
je
lahf
cwtl
cld
pop
pop
jmp
adc
push
push
lds
adc
fdivs
xor
and
sbb
xor
xor
clc
or
or
push
push
push
stc
int3
push
iret
lret
xor
mov
mov
or
or
push
dec
sbb
negl
add
lcall
cwtl
cmp
lahf
jge
mov
or
jecxz
dec
mov
sbb
mov
movsl
in
sbb
cmovl
imul
ds
xlat
or
aad
lods
dec
fninit
cmp
ret
leave
cmpsb
mov
lcall
fidivrl
das
cli
ds
push
stc
movsl
fisttps
es
pop
or
shrb
sti
lahf
xorl
push
cmp
nop
mov
and
sbb
insl
push
sub
xor
sub
jle
push
inc
data16
inc
mov
test
xchg
call
jns
mov
dec
mov
mov
jl
push
inc
std
scas
lahf
push
subb
fwait
sbb
rcrb
xchg
in
mov
nop
add
test
cmpsl
inc
pusha
fmull
jno
mov
scas
mov
mov
clc
lar
rolb
fimuls
ljmp
mov
idivl
or
leave
fs
aad
nop
sbb
inc
pop
lock
rcl
arpl
pusha
subl
imull
fs
fwait
movsl
sbb
xchg
pop
gs
push
bound
and
cmp
add
push
sti
aas
std
dec
xchg
mov
rcrl
sub
lcall
xchg
sbb
stos
xchg
roll
adc
mov
sarl
test
sahf
mov
sbb
rcrb
daa
pushf
pop
fimull
dec
cmp
xchg
test
push
filds
cs
loopne
mov
add
jns
mov
popa
out
shlb
pusha
sub
mov
pop
insl
adc
std
gs
cmpl
les
in
pop
inc
dec
sub
push
leave
xchg
cli
jmp
or
lret
js
push
jo
enter
cwtl
in
xchg
pop
pushf
fcompl
lret
dec
or
ljmp
sarl
push
lods
jae
jae
scas
inc
jno
ja
addr16
or
fwait
xchg
fimull
gs
test
add
sbb
data16
xorb
call
lea
cs
jns
movsl
sbb
jl
ds
xor
or
or
sbb
ja
mov
sbb
mov
mov
ljmp
es
sbb
popa
mov
hlt
repz
fimuls
out
xchg
push
pop
dec
pop
and
aas
sbb
out
pusha
movsb
sbb
jne
jmp
mov
arpl
jmp
push
xor
and
xchg
movsl
pop
mov
push
es
arpl
add
sahf
aas
lret
mov
aas
mov
popf
popa
sbb
bound
dec
or
jecxz
xchg
adc
mov
in
sub
pop
aaa
or
pop
aam
stos
in
mov
ds
inc
negb
lods
dec
sbb
ss
push
mov
sub
sub
out
movl
ja
iret
jl
adc
aaa
mov
cmpsl
loopne
or
and
adc
push
addr16
sub
inc
xor
out
cli
sbb
std
xor
arpl
sub
sub
lea
jp
movsb
jns
dec
jno
lret
sti
in
daa
mov
cli
insl
push
sub
xchg
pop
mov
mov
sbb
or
and
cs
add
adc
lcall
sbb
adc
test
addr16
cmp
scas
jns
loope
xor
shrl
mov
dec
ffreep
shlb
mov
cmc
fdivr
sti
cli
shll
loop
shrb
ficompl
add
add
jns
push
mov
mov
lds
aad
sbb
mov
jmp
push
movsl
lcall
inc
jmp
jge
inc
or
or
inc
ss
dec
inc
pop
popf
mov
mov
pop
mov
in
mov
scas
dec
imulb
xchg
in
and
in
daa
testb
popf
mov
into
jge
loope
and
mov
xchg
ret
mov
xor
sub
ficoml
lds
bound
loopne
mov
aad
jb
ret
sbb
inc
push
mov
fidivrl
clc
imull
test
cli
cmp
sub
std
arpl
mov
pop
or
loop
dec
adc
mov
cmpsb
jp
mov
pop
pop
mov
in
clc
orb
mov
pusha
popa
dec
int
cmp
adc
fdivr
cmp
mov
fsubp
sub
mov
and
xchg
ret
dec
or
add
sbb
push
and
mov
pop
and
dec
adc
in
jo
inc
lods
scas
push
scas
cwtl
or
pushf
test
cmp
les
scas
or
or
xchg
cwtl
jne
std
jg
dec
sbb
nop
mull
bound
ret
jo
mov
in
ljmp
mov
mov
jns
or
mov
scas
pop
pusha
test
cmc
mov
push
push
cmpsb
mov
ss
fcompl
jge
imul
fbstp
or
in
adc
scas
pop
xchg
sub
or
cmp
add
xor
and
sbb
mov
stos
sbb
push
nop
les
movsb
pop
and
adc
sub
fwait
inc
or
cmpsb
insb
mov
sbb
lock
jp
cwtl
push
or
mov
xchg
jo
cmpl
shll
jo
sbb
clc
daa
aas
add
jl
jmp
xchg
pop
jnp
sbb
pop
scas
ljmp
imul
movsl
shrb
mov
es
push
shrl
mov
clc
int
push
andb
ds
in
std
loope
test
sub
outsl
cmp
sti
test
pop
add
outsb
lcall
dec
in
push
push
pop
fwait
pusha
lods
imul
outsl
xchg
in
and
sub
jbe
xor
lods
outsb
cli
inc
mov
mov
push
lcall
push
mov
inc
cmp
mov
frstor
std
nop
dec
repnz
aaa
sub
aad
dec
push
orb
inc
pop
push
test
push
xchg
stos
push
push
bound
imul
fsts
xchg
test
out
cltd
mov
or
jmp
cmpl
cmp
and
pop
leave
lcall
jl
insl
pop
ss
pop
pop
push
xchg
fnstsw
imul
shl
inc
mov
mov
and
dec
clc
data16
bound
enter
sbb
add
inc
mov
mov
sbb
leave
shll
into
shl
andl
jmp
dec
stos
pop
jp
xchg
jecxz
push
data16
push
adc
mov
cmp
xchg
mov
add
sbb
int3
leave
add
jb
add
repz
jb
cmpsb
add
cmp
xorb
add
lret
rcr
inc
sub
mov
dec
push
mov
push
lock
sti
mov
mov
sub
je
roll
push
adc
fs
enter
fisubrs
dec
adc
add
push
push
addr16
mov
pop
rol
iret
pop
and
jmp
ret
xor
and
pop
mov
stos
in
cmp
push
clc
aam
dec
mov
into
outsb
xchg
and
lcall
push
pop
sbb
sub
minps
adc
add
ljmp
jmp
cmp
in
decl
jge
nop
ret
cmc
sub
xor
insb
lahf
cmp
repz
call
js
sbb
dec
loop
xor
mov
and
mov
sub
ret
test
outsl
pop
clc
test
push
inc
pop
push
addr16
add
push
mov
pop
decl
push
outsb
dec
xor
push
insb
js
dec
xchg
dec
and
outsb
cmp
insl
sbb
imul
cli
insb
push
jl
dec
xor
in
or
repz
inc
push
pop
sahf
jae
mov
pminub
push
dec
sar
jns
in
add
sbb
pushf
dec
out
dec
inc
imul
sbb
cmpsl
cmc
scas
loopne
shll
add
sti
mov
ss
test
mov
fidivrl
pop
loopne
outsb
xchg
sub
shlb
mov
mov
xor
ret
movsb
xor
iret
popl
mov
pop
les
in
xchg
fsubr
jns
arpl
dec
std
daa
xchg
xor
mov
daa
bnd
mov
push
xlat
and
jae
sub
cltd
subb
cmp
inc
cs
xor
mov
sub
mov
andl
pop
pop
pop
jecxz
aam
jp
and
movups
mov
xor
add
mulb
and
testb
jl
push
scas
mov
insb
andb
scas
mov
mov
inc
pushf
testl
ds
imul
lcall
loope
xchg
xchg
pop
xor
dec
adc
aad
cmc
rcll
lcall
or
insb
fsubrs
jle
fadds
test
inc
mov
fdivs
pop
mov
rcrb
push
cmc
loope
dec
dec
lea
adc
das
mov
scas
jne
jl
push
mov
lods
push
mov
je
in
sbb
sbb
mov
data16
sub
cmp
adc
jbe
xor
or
or
jbe
aam
sahf
inc
ljmp
pop
cwtl
movsb
rol
dec
dec
insl
lea
fcomi
data16
movsb
jnp
cmp
in
inc
in
clc
test
les
inc
mov
or
leave
imul
dec
fdiv
out
jns
push
movsb
mov
cmp
mov
out
fadds
or
inc
pop
push
xchg
cs
jg
mov
nop
test
mov
mov
or
leave
mov
das
sub
sbb
dec
mov
jnp
xchg
std
pop
data16
mov
add
push
jecxz
test
and
cli
arpl
test
outsb
int
fdivr
fistpl
cltd
xor
mov
jb
sahf
jno
mov
sbb
shll
lret
or
adc
xor
loope
mov
mov
cmc
sbb
lea
add
dec
cli
out
add
inc
push
push
shl
push
ja
dec
mov
movsb
cmp
mov
lock
xor
gs
stos
inc
lods
jmp
dec
pop
inc
icebp
repz
stos
dec
jbe
mov
arpl
dec
xor
xchg
gs
mov
jnp
loop
cmpsl
mov
clc
pop
in
movsb
mov
sub
repnz
and
call
adc
gs
sbb
test
lock
out
divl
lods
push
cltd
iret
mov
mov
ds
jecxz
lock
mov
and
imul
mov
cmpsl
xor
jbe
dec
outsl
mov
mov
test
stc
movsb
or
pop
lods
add
add
inc
inc
lcall
mov
test
popa
lahf
and
imul
mov
mov
jo
popf
push
out
inc
gs
push
stc
push
sub
push
rolb
scas
inc
in
insb
pop
fcomi
jne
pop
daa
inc
movsb
sbb
mov
inc
lcall
lcall
and
mov
push
ret
out
push
aam
and
test
sub
mov
fcomp
mov
int
fildl
hlt
leave
push
test
aad
dec
lock
adc
pushf
push
or
push
push
fsubs
sub
stos
jge
hlt
aam
arpl
add
shl
push
xor
push
and
ss
and
popf
sbb
and
inc
notl
or
push
repz
ret
out
add
cmp
push
int
mov
std
call
and
clc
pop
orl
js
jecxz
xchg
or
in
fldz
xlat
inc
sbbl
xorl
jge
cmp
je
push
iret
orb
push
push
ret
movsl
call
or
stos
sbbb
sahf
das
and
lods
mov
cltd
enter
stos
ret
test
daa
adc
daa
js
sbb
or
xchg
add
pop
sbb
inc
es
or
mov
call
jnp
es
mov
mov
subl
xlat
outsl
sub
cli
test
jl
adc
xchg
pop
cltd
mov
out
xor
stos
hlt
jae
ficompl
push
ret
fdivrs
test
xor
cltd
jnp
bound
mov
cmp
mov
repnz
sahf
jmp
std
sahf
stos
push
icebp
pusha
into
test
pop
fs
cli
rorb
jg
sub
loopne
push
xlat
mov
cwtl
arpl
adc
aas
int3
cmp
dec
xor
lret
add
or
test
cmpsb
int3
test
mov
popa
sub
cmpsb
mov
add
mov
out
adc
mov
pop
rol
scas
das
cs
lock
xor
mov
insl
daa
adc
xor
ss
add
orl
movsb
hlt
imul
rolb
cs
in
sbb
shlb
imul
sub
andl
mov
hlt
fwait
shll
and
sarb
fildll
ficompl
nop
in
lds
btr
repz
clc
repz
mov
dec
mov
dec
dec
test
fisttpll
xchg
jns
mov
xchg
test
push
mov
inc
push
jmp
jmp
jle
ljmp
cmp
loope
ljmp
js
xor
jbe
lods
icebp
mov
add
repz
lds
ds
jg
into
cli
dec
mov
xchg
out
in
push
dec
loopne
je
dec
adc
mov
call
fisubrl
dec
cmp
mov
ds
test
mov
insb
push
push
in
cmp
jnp
or
pop
stc
mov
out
sbb
push
add
cmp
aaa
outsl
cmpsl
das
pusha
sub
mov
lds
push
push
jle
shrb
ds
pop
bnd
mov
cltd
imul
stos
push
mov
imul
dec
fwait
sub
sarb
xor
loope
mov
cs
cli
dec
fidivrs
jecxz
gs
stc
scas
in
popa
push
mov
sbb
test
xchg
ret
outsb
sahf
jne
sbb
cld
fdivrs
pop
xor
sub
mov
push
push
clc
rcr
iret
add
ror
popa
scas
cmpsb
arpl
clc
cmp
jb
js
mov
pop
aad
in
xchg
clc
enter
hlt
es
xchg
jecxz
add
and
lock
mov
popf
out
push
pop
dec
mov
mov
push
inc
adc
scas
mov
or
mov
dec
sub
xchg
jb
outsl
dec
cmp
mov
fdivr
push
mov
cli
dec
xor
iret
iret
xchg
stc
pop
fucom
push
add
and
push
or
loope
push
push
cmp
jge
stc
xchg
push
unpcklps
out
xchg
pop
enter
and
dec
sub
mov
push
pop
jb
aam
je
push
jle
sbb
and
xchg
xor
jge
lcall
push
mov
cmp
cs
into
fisubrs
dec
cmpsb
xor
xor
repnz
jo
and
hlt
shr
sub
inc
dec
daa
lds
dec
int3
inc
push
flds
mov
xchg
push
pop
pop
idiv
cli
adc
mov
cltd
js
cmp
iret
mov
call
cmp
fcmovnbe
mov
fdivr
adc
mov
jg
push
inc
insl
sbbb
popl
push
xor
push
jg
xchg
scas
jnp
add
test
ljmp
cmp
pop
out
jo
mov
mov
repz
mov
lods
pop
inc
mov
fisttps
pop
add
das
inc
fbstp
mov
jg
aam
pop
and
and
xchg
sbb
sub
sub
fsubrl
cmp
push
xchg
rorl
idiv
out
out
and
jle
mov
mov
mov
mov
mov
decl
fs
inc
movsl
insb
mov
push
sub
scas
js
jg
sahf
or
sbb
sub
jle
add
ja
sbb
adc
sbb
mov
xor
sub
dec
fcoms
push
mov
pop
divb
gs
mov
and
cmc
jne
mull
mov
ficompl
jne
mov
jae
sub
icebp
cmpsl
adc
mov
jge
test
ss
cmpsl
ds
cmp
sarl
push
test
mov
in
leave
adc
sahf
cmpsl
or
call
in
xchg
loopne
bound
dec
rclb
pop
sub
iret
xor
sub
mov
into
pop
jl
sbb
mov
inc
xchg
je
je
jl
fstpt
sub
inc
or
push
mov
inc
jle
jg
fisttpl
stos
pushf
cmp
push
mov
mov
icebp
lea
std
dec
lea
out
pop
sub
js
jbe
rcrl
aaa
add
lahf
pop
jecxz
aad
stos
fs
adc
mov
lahf
stos
pop
in
divb
xchg
pop
movsb
xorb
incl
cwtl
aad
adc
ljmp
repnz
mov
cmp
mov
cmpsb
popf
imul
pop
cwtl
mov
out
xchg
jo
adc
lret
inc
in
and
push
int
dec
sub
xor
and
ror
push
xlat
xor
dec
cmp
cmp
mov
int3
in
aad
divl
insl
inc
push
orb
mov
icebp
mov
and
mov
imul
js
insl
xchg
pusha
ret
jno,pt
orl
adc
mov
insl
jae
pop
sti
in
and
scas
xor
add
ds
pop
xchg
mov
ficompl
mov
pop
out
push
into
call
out
xchg
cmp
ficomps
cmp
test
outsb
inc
loope
and
add
dec
ret
loope
pop
repz
jp
adc
jp
jbe
dec
fs
dec
adc
or
mov
mov
jns
mov
sub
inc
push
dec
rolb
leave
xchg
adc
add
lcall
scas
push
arpl
push
mov
push
jmp
jp
aas
lods
movsb
jmp
adc
push
lods
mov
dec
ret
sub
aaa
shlb
pop
ja
xor
ds
aaa
insb
cltd
fstps
jae
push
inc
aas
pop
cmc
loope
popf
lcall
xor
cmp
jmp
cmp
mov
fdivs
mov
push
hlt
ja
lods
arpl
push
and
enter
iret
xor
xor
mov
dec
shll
cmp
xlat
jno
adc
into
ja
in
xor
stos
xlat
mov
test
add
sub
jbe
sbb
push
push
inc
adc
lods
push
jb
loopne
adc
mov
insl
dec
push
inc
mov
fs
xchg
cmp
cmc
int
stos
mov
mov
mov
cwtl
mov
inc
je
notl
mov
cwtl
ret
adc
inc
sbb
jns
mov
out
jno
js
pop
movsb
pop
jne
sub
lret
mov
mulb
fmuls
inc
push
xor
sub
pop
adc
mov
xchg
test
xchg
xor
notb
mov
and
inc
pop
sbb
test
adc
add
dec
push
rcl
les
fadds
cmp
sbbl
inc
mov
push
xchg
ret
push
jg
sbb
pop
cmp
cmp
mov
sub
sub
int3
scas
test
shlb
dec
or
jmp
movsl
int3
xor
or
fnstcw
shrl
mov
cwtl
nop
enter
adc
test
push
fwait
jmp
mov
insb
cwtl
je
shll
popa
sbb
aam
xorl
daa
mov
add
xor
sub
hlt
cmp
cmpsb
add
jecxz
sub
sbb
nop
lcall
push
pop
mov
cmp
mov
inc
loope
adc
pop
add
mov
or
stos
dec
push
icebp
gs
push
loopne
xchg
clc
mov
fwait
int3
shlb
push
leave
lret
mov
pop
cmovp
pop
mov
xor
cmpsb
rolb
sub
cld
lock
out
icebp
inc
sub
mov
adc
add
inc
fwait
jmp
adc
ret
mov
std
and
sub
repnz
mov
in
or
dec
mov
mov
scas
push
repz
and
js
lcall
dec
xor
and
push
rol
stc
test
push
imul
mov
pop
xchg
dec
jl
int
and
scas
iret
mov
lret
add
in
cmc
cltd
scas
in
inc
sub
adc
jmp
addr16
dec
add
ljmp
sti
cmc
pusha
call
push
popa
aad
sub
lret
add
aam
mov
lcall
mov
add
cmp
es
adc
add
cwtl
aam
daa
pop
shll
test
into
or
or
adc
movsb
cmp
loop
cs
cltd
cmpsb
ret
scas
mov
jecxz
clc
mul
sti
xchg
gs
push
xor
inc
pushf
dec
fstl
sub
enter
inc
test
int3
bound
fstpl
int
pop
sbb
and
mov
pop
or
popa
or
and
lds
mov
sub
push
lods
movl
sub
xchg
in
mov
add
mov
pop
shlb
test
sti
xor
test
icebp
pop
aas
rol
mov
xchg
mov
aas
pop
pushf
out
jg
inc
inc
insl
fbld
sub
lahf
ljmp
popw
dec
jl
inc
inc
push
in
shrl
cmpl
cmp
xchg
sub
xlat
add
loopne
sub
popf
lahf
call
stc
inc
cltd
add
fdivr
cmp
shr
mov
push
sub
lret
adc
pop
mov
and
mov
lds
sti
push
sub
popf
lods
ret
fucomi
and
dec
jge
jne
std
sbb
cmp
xor
sub
shrb
pop
xchg
mov
push
repnz
sbb
adc
cmp
adc
add
aaa
xor
aad
scas
movsl
adc
inc
daa
add
insl
lea
mov
xchg
push
mov
mov
or
flds
pushf
jbe
pslld
fcmovne
in
xchg
push
imul
pop
stos
stos
push
lea
pop
adc
jmp
mov
push
push
insl
dec
xchg
jecxz
mov
aaa
sub
outsl
pop
or
into
mov
or
imul
ss
cwtl
pop
aam
inc
and
mov
popf
paddd
sbb
cmpsb
ror
stos
stos
add
pop
sub
insl
les
mov
jnp
fcoml
sbb
mov
sub
arpl
leave
push
stos
mov
push
or
out
cli
popl
pop
fs
out
test
xchg
pop
ds
mov
inc
fs
xor
popa
cmp
xchg
roll
xor
rdmsr
sbb
adc
xchg
lods
sbb
xchg
push
add
push
cmp
sub
out
std
mov
xchg
stos
adc
sarb
rol
mov
or
xor
aad
xor
stos
mov
jae
inc
out
adc
les
inc
adc
aaa
adc
sub
xchg
pushf
flds
adc
push
pusha
and
loope
in
fsubrs
pusha
cmpsl
dec
orb
mov
xchg
hlt
jp
and
sahf
push
and
pop
mov
aas
jae
and
xor
cmp
or
fdiv
mov
pop
pop
movsb
shll
mov
mulb
jae
lea
xor
mov
dec
fisttpll
jne
adc
xchg
scas
or
outsb
and
test
shll
fsts
pop
adc
insb
enter
dec
and
xlat
xchg
or
mov
jnp
mov
push
movsl
imul
iret
cwtl
fsubrl
into
pop
test
fdivrp
sbb
out
mov
hlt
rcr
cmp
dec
pop
sub
lea
mov
xorl
sub
scas
cld
dec
test
mov
push
mov
cltd
fcmovbe
inc
xor
rcrl
loopne
je
inc
pushf
cmp
mov
cmovne
fiaddl
and
sub
cli
lods
into
mov
fsubp
test
cmp
xchg
and
pop
cmpb
sbb
add
inc
jge
sbb
push
femms
add
add
sbb
fs
sbbl
inc
mull
xor
add
int
divb
push
imul
pop
std
cmc
mov
leave
pop
jne
xor
mov
lock
adc
or
inc
nop
jo
repz
pop
pop
outsb
mov
cmp
enter
add
mov
mov
iret
aaa
jb
mov
mov
or
xchg
cs
mov
mov
push
in
pop
mov
push
stc
cmp
adc
adcb
dec
pushf
push
movsl
hlt
pop
add
cmc
movsb
mov
out
xor
mov
pop
sbb
movsl
inc
cmp
mov
mov
sbb
mov
ret
stc
popa
ds
mov
and
icebp
movsl
push
mov
out
sbb
into
cs
js
inc
jle
jae
jecxz
bound
mov
pushf
nop
pop
push
pop
pop
xchg
stc
push
pop
or
popf
and
jecxz
sarb
dec
pop
into
mov
js
out
shlb
ret
mov
or
sub
xchg
mov
jecxz
jecxz
jb
or
andb
cmp
push
mov
pop
lret
nop
out
adc
cmp
mov
scas
fistps
mov
push
enter
cltd
clc
stos
cmp
jmp
popf
repnz
jle
mov
lds
jg
leave
scas
xchg
les
aad
les
sub
push
inc
inc
cmpl
in
adc
add
cmc
aaa
mov
cmp
cltd
adc
pop
jne
stos
mov
rep
pop
loopne
or
sbb
xchg
xchg
int
push
pop
out
cli
sub
jp
adc
xchg
icebp
orl
and
leave
xor
ljmp
cmp
cs
inc
add
add
push
repz
leave
xor
adcb
jmp
adc
mov
pop
outsb
cli
xor
stos
int3
cli
inc
loopne
jle
aaa
add
insl
fldl
into
xorl
add
add
pushf
cmp
lahf
jmp
popa
imul
xchg
out
out
nop
fxam
scas
pcmpgtb
out
sub
jle
push
cmp
scas
adc
loope
xchg
les
rolb
lods
jbe
xchg
jae
pop
shr
jge
fs
fsubrp
lcall
and
xchg
push
xchg
pop
sbb
add
xor
jb
sbb
add
mov
sbb
enter
test
cmp
adc
pop
mov
cmc
aas
lret
or
movsb
xchg
jo
pop
cmp
cwtl
pop
jmp
rorb
fimuls
add
mov
cmpsb
addr16
jno
mov
xchg
popa
out
mov
inc
sub
pop
adc
lods
andb
sarb
push
xchg
popw
add
xchg
stc
dec
std
mov
cmp
sarb
cltd
jae
ljmp
mov
mov
dec
push
and
and
hlt
mov
lret
outsl
outsl
pop
out
add
js
xchg
push
mov
jne
rcl
ret
and
xor
stos
nop
dec
mov
and
and
adcb
inc
addr16
or
jae
push
sub
fisubs
lret
loop
add
push
jg
adc
push
dec
movsb
jmp
xchg
jle
test
push
ret
push
jnp
subb
cltd
movsl
push
sbb
mov
icebp
pushf
pop
mov
cmpsb
adc
rorl
fsqrt
sahf
dec
cs
pop
ds
jp
lods
push
cmpsb
lods
nop
dec
dec
rorb
in
negb
mov
out
loope
out
movb
mov
dec
or
jns
ja
out
pop
fnstenv
add
add
xchg
xchg
lret
loope
in
std
ja
cltd
sti
cmp
pop
cmp
sub
mov
gs
jmp
xor
inc
decl
sahf
decb
aas
sub
loope
mov
adc
daa
sub
pop
stc
rcl
cmp
lret
das
mov
jae
shl
jno
xchg
push
mov
jno
jp
leave
cltd
into
fcoml
iret
neg
xchg
jb
jb
sbbl
imul
imul
scas
int
jbe
shll
subl
lods
fdiv
cmpsb
addb
jns
sahf
jge
push
ds
scas
pop
test
aaa
shr
pop
ljmp
pop
dec
mov
movsb
xchg
mov
int
cmp
dec
loopne
inc
outsl
add
pushf
mov
movsl
inc
add
xor
xchg
aas
testb
xor
xchg
aas
pushf
fldcw
js
outsb
cmp
or
or
movsb
stos
cmp
sub
call
mov
les
xchg
test
iret
pop
iret
sub
jns
cld
add
movsb
and
fwait
push
fprem1
out
les
lods
jmp
testl
xor
mov
ljmp
jno
dec
lods
addr16
pop
cmc
ret
ret
outsl
inc
and
sub
xchg
push
in
mulps
adc
sarb
xchg
pop
xor
jmp
jns
push
mov
movsl
xor
inc
insb
xchg
in
aam
mov
xor
inc
or
pushf
jp
mov
or
scas
out
cltd
mov
icebp
ds
dec
shlb
xor
in
test
and
icebp
mov
or
cmp
dec
test
push
jmp
cmpsb
loopne
xchg
addb
lret
pop
jo
xchg
or
and
movsb
std
enter
mov
insb
in
push
sub
and
dec
cmpsb
push
negb
jns
cmp
divl
sub
xchg
mov
sbb
insl
mov
addl
loop
pop
xchg
mov
faddl
mov
icebp
es
push
arpl
dec
enter
push
inc
dec
inc
ret
int
inc
cmc
mov
aad
pop
movsb
mov
les
dec
pusha
cmc
adc
sahf
mov
lds
xchg
sbb
xchg
xor
pop
sub
sarb
jge
repz
fldl
test
outsb
enter
outsb
mov
mov
adc
and
fcmove
add
sub
dec
and
sti
dec
jae
mov
lret
push
test
or
xchg
sbb
das
scas
push
add
in
adc
fdivrl
xchg
fcoml
adc
inc
das
addr16
int3
enter
and
cmp
fstl
mov
lahf
xchg
aaa
lret
aas
or
inc
es
xor
push
cmp
imull
aaa
shlb
cmp
leave
mov
lods
outsl
sarl
stos
inc
shll
dec
outsb
pop
jecxz
mov
cmpsl
fidivrs
scas
insb
nop
std
mov
dec
or
xchg
enter
bound
mov
xlat
loop
sbb
or
mov
mov
out
dec
push
push
clc
add
fdivs
ret
adc
xchg
insl
ret
fwait
in
adc
lods
sub
imul
xlat
mov
push
ljmp
cmp
mov
push
popa
test
or
lea
or
or
cmp
insb
lret
inc
and
mov
xor
inc
or
dec
js
push
jmp
loop
dec
mov
pop
sub
jae
nop
inc
mov
rclb
popf
push
lods
pop
sub
rcrl
xchg
cmp
ja
adc
ja
sti
gs
adc
outsl
ja
mov
add
js
rorl
mov
pop
mov
jnp
jnp
movb
inc
andb
inc
sub
fisttpll
mov
mov
aaa
sti
lods
dec
insl
js
repz
xor
mov
test
dec
jecxz
jp
cmpsl
jp
cmp
mov
inc
or
or
mov
mov
sub
test
popa
popf
lcall
or
xor
das
rolb
inc
mov
sub
pop
fisttpll
gs
aas
mov
jmp
cli
adc
adc
or
movsl
mov
xchg
push
cmp
lods
inc
push
call
bound
repz
lods
add
push
sub
pushl
pushf
shrl
shlb
or
jmp
sub
xchg
dec
cmp
push
cs
pop
les
loopne
pushf
mov
insb
or
repz
movsl
shrb
movsb
jb
push
mov
in
or
or
scas
sbb
aam
mov
popa
fadds
mov
adc
ror
sub
jge
pop
lret
sbb
xor
pop
inc
sahf
jo
rclb
dec
or
cmpl
mov
sub
repz
rcrl
popf
and
test
std
sbb
xlat
loopne
outsb
pop
sub
dec
shl
push
sub
movsl
or
mov
add
insl
sbb
push
clc
hlt
std
lods
push
sbb
jecxz
push
in
sbb
dec
movsl
cmp
dec
adc
ljmp
xchg
into
dec
loop
int
xor
or
shl
sahf
lret
mov
lahf
sub
clc
loope
outsl
mov
mov
loope
push
adcb
lock
fwait
pop
cltd
repnz
lret
jne
outsl
es
cwtl
inc
add
aaa
xchg
push
sbb
dec
fistpll
mov
rcl
push
ss
cltd
cltd
pop
add
cmpxchg
sahf
insb
xchg
sub
int3
xor
inc
mov
mov
mov
mov
jge
push
push
mov
sbb
cld
or
das
das
and
mov
mov
sbb
scas
fwait
nop
mov
add
sti
xchg
xor
xor
stos
vpminub
inc
sbb
jmp
xchg
xchg
dec
xchg
mov
call
das
pop
leave
icebp
push
xlat
sbb
ror
lds
scas
leave
mov
pushf
dec
inc
jnp
cmp
mov
rcll
test
cltd
xchg
jp
adcl
xlat
out
cmp
mov
pusha
inc
or
repnz
fisubrl
push
inc
pop
ja
mov
sti
sbb
popf
fs
movsb
js
bound
stos
mov
pop
orb
lahf
pop
ffreep
mov
pushf
sbb
imul
dec
adc
es
dec
int3
lret
pop
jbe
sarl
enter
xchg
add
call
sti
jg
mov
add
hlt
nop
mov
sarb
insb
jnp
and
adc
mov
test
push
mov
dec
shr
and
push
xor
jp
cwtl
ss
add
sbb
or
ret
adc
xchg
jle
push
mov
iret
add
push
push
pop
sar
das
add
jge
into
ss
xor
jmp
in
sti
xchg
in
enter
mov
repz
dec
outsb
std
mov
imul
and
into
and
arpl
xchg
or
sub
mov
fwait
shrb
shrb
cmpsl
pop
xchg
pop
pop
pop
insb
mov
sarl
adc
push
ret
xchg
and
add
clc
jne
into
cld
sub
int
int
cwtl
std
orb
insl
lods
and
rorl
mov
xchg
cltd
test
jno
mov
jecxz
sub
and
xor
cmp
and
fdivr
jne
push
dec
lahf
pop
into
pop
inc
jae
imul
aas
mul
dec
jmp
xor
andb
inc
cwtl
lock
lea
jns
dec
lods
rcl
mov
pop
outsl
mov
xor
lods
add
add
pop
lahf
out
add
sub
adc
rcrb
mov
dec
cmc
call
notb
push
es
push
mov
push
xchg
dec
jbe
push
mov
pop
jns
push
clc
outsb
clc
in
dec
mov
incl
rol
jb
inc
adc
or
adc
enter
or
jbe
mov
cmp
fiaddl
ljmp
inc
mov
xor
stos
test
cmpsb
mov
insl
mov
cmp
movsl
lcall
clc
in
mov
or
int3
fldenv
popa
sahf
call
cmp
cs
rcll
pop
add
mov
cmp
popfw
cltd
mov
enter
mov
loopne
les
stos
das
in
lods
or
call
in
or
in
jne
in
or
inc
ds
stc
mov
fstpl
insl
mov
bound
mov
mov
bound
mov
inc
pop
adc
movups
ljmp
mov
mov
loop
xchg
movl
cmp
jmp
and
lods
insb
adc
jbe
in
out
dec
imulb
fpatan
mov
mov
icebp
fwait
inc
xchg
iret
push
sbb
cmpsl
shll
dec
aam
clc
xor
hlt
mov
rcll
mov
pop
push
pop
addr16
gs
fidivs
pop
or
jo
pop
add
sbb
pop
leave
cmc
xchg
mov
pushf
mov
cltd
test
popf
aam
xchg
iret
adc
push
rorl
sub
add
mov
insl
fimull
dec
into
sub
adc
sahf
xchg
and
clc
aas
jl
leave
popa
fisubrl
stos
js
out
cmp
push
mov
adc
mov
pop
mov
test
es
sbb
dec
inc
lods
dec
inc
or
fistpll
mulb
fistpl
dec
inc
cmc
fs
mov
or
sub
push
outsb
xor
fisubs
les
dec
mov
shll
pusha
ret
jp
xor
test
jo
add
fiaddl
xorb
sti
rorb
jecxz
ds
lret
test
retw
ficompl
jne
sub
in
es
cmp
fs
lea
out
fwait
mov
insb
fidivs
cmpsl
xor
mov
insb
mov
ret
pop
inc
scas
pusha
movsb
or
mov
mov
in
xchg
add
loope
sub
xlat
das
fbstp
ds
xor
jg
fisubrs
lods
jecxz
adc
orl
jnp
scas
sub
bound
sub
out
dec
aaa
es
mov
jl
pusha
adc
cmp
pusha
jmp
sbb
push
ss
scas
icebp
sbb
xlat
fdiv
dec
xchg
ja
and
mov
ret
xchg
pop
nop
mov
xchg
adc
and
pop
lret
adc
or
sub
leave
shlb
fwait
mov
lea
xor
jb
push
int3
push
fbld
and
dec
repnz
push
dec
ss
hlt
dec
aaa
movsb
pop
cmp
es
xchg
push
jns
jns
into
les
sahf
xchg
pop
adc
xlat
in
mov
cmp
jmp
jp
push
clc
call
inc
xor
add
pusha
fsqrt
int
cwtl
sbb
lret
and
nop
sbb
mov
fcmovb
mov
sub
pop
sbb
bound
push
pusha
jno
iret
xchg
mov
fs
xlat
adc
add
sbb
imul
mov
stos
test
rcrb
ljmp
jb
xor
push
xor
and
stos
ret
mov
daa
adc
inc
cmp
inc
cmpsb
pop
sub
xchg
mov
cmpsl
sbb
inc
dec
scas
shlb
lea
mov
dec
pushf
sahf
add
adc
mov
sbb
and
lret
inc
lahf
shll
mov
and
xor
push
xlat
fsubr
cmpsl
push
pop
enter
decb
imul
lods
ds
mov
aad
hlt
icebp
mov
mov
add
sarb
popf
into
int
loope
sub
pop
addr16
stos
mov
jmp
es
scas
add
add
fs
mov
ja,pn
mov
cmp
pop
pop
lds
xchg
mov
mov
push
fcomps
ss
or
mov
mov
lock
shlb
test
mov
in
pusha
mov
mov
adc
adc
inc
arpl
adc
push
xorl
mov
cmp
push
push
pop
lcall
inc
out
pop
sub
outsb
pop
adc
movsb
jl
int
xor
jp
and
pop
pop
enter
mov
aaa
leave
push
push
lret
sar
push
push
int3
cs
aaa
pop
and
iret
or
or
add
push
lahf
int3
mov
pushf
dec
orl
pop
popf
pushf
pop
lahf
inc
mov
mov
sti
pop
dec
push
stos
enter
mov
mov
and
les
jbe
dec
and
push
jg
pop
jnp
sahf
jnp
lods
jge
andl
in
call
mov
lcall
jne
mov
pop
mov
push
ss
push
sub
fisttpl
mov
mov
mov
shlb
push
int3
mov
pop
cltd
fstps
fldcw
mov
push
sub
mov
and
icebp
sbb
fsubrs
inc
inc
repz
sub
mov
dec
mov
adc
inc
fisubl
stc
shrl
or
jle
movsl
cli
out
cmp
push
in
pop
icebp
testl
gs
outsb
and
xchg
repz
shll
push
gs
mov
inc
lea
cld
cld
ror
xchg
or
testl
sbb
sahf
pusha
fdivs
je
cli
in
jmp
jae
in
cwtl
lock
inc
dec
repnz
outsl
pop
out
mov
and
test
mov
push
test
clc
pop
jge
fst
popf
repnz
mov
dec
jnp
sub
stc
pop
dec
inc
aad
xor
jmp
add
iret
ds
out
add
xor
scas
clc
adc
fadds
adc
lds
jp
push
lds
les
ficompl
adc
cmc
lock
scas
push
les
rcl
pop
ljmp
sbb
jmp
pop
adc
cmp
jg
xchg
jge
and
fidivl
jg
xor
cmp
insl
lahf
flds
mov
cltd
cld
in
xor
in
jmp
mov
insb
xor
mov
insl
push
xlat
jns
test
fistpl
aam
mov
adc
dec
and
daa
insb
jb
cltd
mov
pop
leave
xchg
das
xor
cwtl
mov
cwtl
jle
cmc
dec
push
cmp
std
mov
movsl
movsb
outsb
and
jno
mov
insb
jo
imul
mov
fwait
or
mov
jne
dec
imul
cmp
sbb
enter
pop
mov
cmp
loop
push
cmp
mov
cmp
xor
sub
lods
ja
aad
aad
icebp
in
or
push
xor
lock
pop
xchg
lcall
sbb
imul
jo
daa
dec
jmp
mov
dec
fldt
and
fstpt
add
rorb
push
adc
pop
ljmp
mov
mov
cmp
jnp
dec
enter
mov
mov
pop
mov
orl
and
shrb
adc
and
repnz
incb
aas
cmp
cs
incl
cmp
pop
jae
call
jno
scas
fnstsw
jp
mov
xchg
mov
daa
iret
scas
arpl
dec
xlat
sub
int
mov
into
add
xchg
sub
mov
push
div
dec
mov
dec
inc
sub
into
popa
in
inc
mov
push
dec
hlt
inc
or
shlb
js
scas
mov
inc
cmp
inc
mov
xchg
lcall
ss
mov
call
xor
pop
inc
pop
add
sbb
outsl
push
adcl
ljmp
ret
mov
imul
mov
cmp
ljmp
mov
sub
ja
and
out
outsb
fldcw
sub
lods
cli
mov
mov
int
or
ret
jns
add
aad
ret
decl
out
pushf
inc
sbb
loop
push
mov
clc
pop
int
mov
push
fsincos
es
fdivs
mov
sub
mov
mov
aam
xor
fisubs
scas
jo
xchg
sub
mov
push
pop
cmp
xchg
les
loopne
jge
adcb
lcall
push
shrb
aam
mov
xchg
lret
inc
mov
ret
popf
call
sub
popa
push
mov
ss
or
push
xchg
jae
repz
pop
decb
mov
push
imul
inc
cmp
scas
repz
pop
fbld
mov
cmp
add
add
pusha
sbb
xchg
repz
mov
pop
jne
in
mov
shlb
int3
les
dec
sbb
mov
jb
jl
add
subb
enter
imul
and
cli
enter
jecxz
sbb
clc
fisubs
adc
loope
jo
in
mov
insb
fnsave
sub
call
or
sar
jbe
shll
xor
and
mov
pushf
fsubrl
xor
orl
cmpsl
filds
jge
inc
int3
inc
mov
mov
insl
cltd
jecxz
dec
stos
fsubrs
mov
imul
adc
cs
ret
loopne
dec
orb
or
cmp
loopne,pt
flds
pusha
mov
scas
push
mov
lods
into
rclb
add
inc
pop
pusha
into
aaa
stc
das
pop
data16
popf
mov
and
push
xlat
adc
mov
adc
scas
call
in
xchg
or
mov
sarl
jbe
xchg
cmp
inc
sti
cmp
gs
cli
insl
xor
pushf
jecxz
push
daa
stc
fs
push
jno
cltd
int
je
push
ljmp
fisttpll
lods
hlt
dec
dec
data16
les
icebp
push
ficomps
jmp
xor
das
and
pop
and
rcl
repnz
in
stos
roll
cmp
fidivrl
in
ss
mov
mov
or
testl
idiv
sbb
mov
sub
imul
dec
cltd
xchg
inc
lock
inc
xchg
imul
push
mov
fcmove
jg
negb
into
jno
dec
cld
mov
pop
mov
cwtl
dec
or
pop
adc
ds
jo
dec
mov
stc
bound
int3
lahf
fidivrl
push
adc
scas
adc
addl
clc
outsl
push
lods
mov
jg
pop
outsl
mov
hlt
popa
jnp
or
into
test
shll
mov
insb
cltd
xor
roll
lcall
add
sbb
adc
inc
lret
pop
cld
inc
adc
or
les
leave
sub
sbb
jae
lea
jns
xchg
daa
mov
inc
push
cmc
xorb
add
and
cmpsl
sbb
fxch
push
mov
mov
mov
pop
sub
jecxz
icebp
jae
nop
add
ret
push
add
fimuls
clc
ret
sbb
and
xchg
xchg
push
out
movsb
xchg
or
lret
mov
dec
loope
sbb
mov
jnp
dec
and
jo
into
imul
jecxz
xor
sbb
lods
mov
push
ds
loop
add
cmp
fimull
jbe
stos
out
inc
push
push
pop
inc
lods
mov
push
jg
insb
jno
cmpsl
out
int
add
shll
pop
dec
lods
in
xchg
ret
push
stc
je
sub
mov
rcl
jo
xchg
cmp
pop
push
fimuls
pop
push
sub
adc
aam
sbb
ret
out
xchg
pop
push
fildll
in
outsl
lods
push
addr16
in
sub
mov
dec
xor
outsl
test
in
sub
xor
stos
sbb
test
mov
fisttps
lock
dec
xchg
cmpsb
cli
gs
pop
lds
aam
push
xchg
fsubrs
adc
mov
sarb
jp
movsb
scas
cltd
pop
adc
mov
js
lret
add
jb
int3
cmp
in
push
mov
pop
pop
fldt
or
mov
adc
cltd
loop
add
mov
cmpb
mov
lods
out
leave
fs
xchg
mov
push
pop
inc
adc
in
outsl
or
lds
adc
sub
xchg
mov
outsl
push
jg
sub
fcmovne
ret
insb
fsts
xor
adc
jb
pop
fisubrs
or
lock
mov
and
jae
mov
sbb
shrl
mov
rolb
sub
jecxz
mov
add
pop
adc
adc
push
jecxz
xchg
jmp
push
inc
fistps
pop
aad
jnp
idivl
icebp
fmull
jl
test
sarb
sbb
outsb
jo
and
out
je
pop
push
fdivrl
jo
mov
fiadds
icebp
pusha
sub
mov
jge
shrb
xchg
mov
leave
push
push
jnp
lock
ret
xor
out
ds
loopne
orb
js
out
sub
push
jg
dec
popf
xchg
sub
aas
xor
pop
sub
out
rclb
ja
clc
data16
jl
mov
jge
add
jp
pop
inc
adc
inc
and
mov
add
es
fdivrl
fcmovnbe
loopne
push
push
mov
stos
decb
xor
idivl
out
sub
imul
and
xchg
or
or
enter
lcall
insl
push
and
fs
or
stos
mov
push
fisttpll
adc
lahf
inc
addb
mov
cli
and
ds
mov
sub
popa
out
pop
xchg
push
xchg
push
inc
inc
mov
fisubs
mov
add
sub
cmpsb
or
mov
aad
cmp
jmp
pop
fwait
jp
mov
or
add
mov
xchg
jle
dec
cmpb
jbe
push
aam
iret
movups
sahf
and
test
enter
mov
cltd
out
lds
mov
or
mov
xchg
xchg
rolb
xchg
pop
mov
repnz
test
lret
lea
jecxz
pusha
cmp
xor
roll
fsubp
jge
sbb
push
sbbl
dec
jg
fcomi
dec
nop
inc
push
jmp
call
push
push
imul
js
xchg
lcall
imul
iret
cmp
pop
xor
ficoms
or
adc
cmp
push
mov
dec
mov
mov
xchg
inc
xlat
repnz
or
gs
cmpsl
lock
nop
fisttpll
push
xor
and
dec
lahf
dec
or
stos
ror
mov
fisubs
int
xor
and
fsubs
fcoml
jle
arpl
add
xorb
mov
lock
mov
mov
inc
xchg
scas
aas
sub
int3
out
sbb
out
loope
fildl
das
div
add
pop
push
movsb
and
loope
sbb
lret
add
loope
ss
or
bound
int3
mov
inc
jne
adc
in
and
pop
outsl
je
out
adc
mov
scas
in
fadd
push
or
das
push
popf
pushf
xor
mov
mov
jb
popa
xchg
dec
cmpsl
cmp
hlt
lods
push
in
stc
fcoms
push
cld
fdivs
sub
aaa
cmp
xchg
fstpl
dec
movsb
stos
xchg
mov
inc
xorb
add
cs
testl
ret
pop
or
mov
sbb
and
fwait
imul
adc
addb
pop
fistpll
mov
push
and
shll
test
fistps
adc
mov
push
sbb
fwait
jnp
jp
hlt
inc
mov
imul
lods
jl
mov
cmpsb
insb
cmp
pop
and
xchg
adc
or
push
or
add
inc
jno
dec
xchg
cmp
mov
push
sub
xor
mov
orl
push
sti
test
in
int
xchg
and
sub
aas
aam
mov
mov
push
adc
rcl
notl
cmp
cli
mov
mov
cmc
sbb
shlw
push
fcmovu
or
jbe
mov
test
cmp
test
dec
push
mov
mov
inc
fnstcw
inc
xchg
dec
push
repnz
rcrl
mov
cmp
and
mov
push
sbb
ja
out
push
jae
mov
cltd
bound
push
inc
mov
mov
adc
sbb
negb
roll
into
dec
bound
insb
pcmpgtb
outsb
jmp
stos
stos
jo
subl
and
xchg
xchg
mov
or
push
push
lahf
dec
inc
loope
stos
mov
les
aam
iret
ret
and
xor
sahf
in
pop
call
out
fwait
sbb
sbb
pop
mov
xchg
xlat
sbb
fldl
xchg
or
cmp
cmc
push
popf
push
adc
cmc
sbb
mov
movb
bound
cmp
sti
sbb
jb
xchg
jecxz
in
and
xlat
and
pop
xlat
loope
inc
dec
jnp
call
pop
je
test
jns
push
orl
rclb
adc
jns
add
lods
jg
outsb
mov
pop
jmp
mov
repnz
fidivl
ror
jg
and
outsb
cwtl
test
mov
in
and
dec
jg
push
jp
add
inc
into
adc
cmp
fs
mov
dec
subb
outsb
in
test
mov
movl
imul
pop
clc
call
inc
sbb
mov
xchg
das
scas
mov
add
inc
xor
das
daa
incl
loope
lret
dec
mov
mov
mov
pop
jmp
leave
ljmp
cmp
aaa
adc
divb
add
js
in
inc
sbb
shlb
or
sbb
ljmp
sbb
icebp
and
pop
cmp
nop
movb
lods
or
sbb
xor
cwtl
aad
aam
xchg
mov
dec
test
clc
and
test
rcrw
int
dec
sarl
and
jp
inc
pop
push
fidivs
or
loop
aaa
decb
fnstcw
sub
addr16
ss
test
mov
negb
cmp
fwait
rolb
movsl
movsb
arpl
jnp
jns
sub
pop
cltd
cs
cwtl
mov
popf
mov
sarl
imul
js
xchg
jge
adc
mov
dec
fcomi
cmovno
mov
outsb
push
loope
cmp
and
bnd
ret
mov
lret
test
aad
imul
cmpb
sub
xlat
cs
inc
movsl
inc
and
mov
movsl
loopne
push
mov
mov
mov
pop
faddl
dec
xchg
cli
ljmp
push
xlat
or
jmp
out
stos
and
cmp
sub
outsb
xlat
int3
inc
ss
inc
lods
mov
sub
sub
cmc
movsb
mov
imul
lock
decb
pushf
inc
dec
push
jecxz
and
movsb
jp
and
pop
das
push
sbb
daa
out
mov
adc
adc
inc
imul
push
inc
pop
pusha
push
shl
sub
cmc
mov
hlt
icebp
push
push
xchg
xchg
mov
mov
cld
add
or
pusha
sbb
xorb
inc
mov
pop
dec
call
add
shll
pop
outsl
pop
add
mov
jmp
rcr
or
sub
cld
sub
mov
hlt
mov
push
inc
and
xlat
dec
push
push
aas
mov
inc
pop
das
jge
out
push
mov
sbb
cmp
inc
pop
jbe
int3
push
mov
out
cld
arpl
lret
mov
adc
addr16
or
flds
cmpsb
push
fnstcw
mov
inc
fst
dec
mov
push
inc
xchg
cld
sti
and
sti
push
jmp
loopne
lods
sbb
insl
pop
and
pop
lock
xchg
sub
ret
fwait
test
rorb
sub
adc
push
ljmp
inc
mov
stos
lock
shlb
mov
les
add
orb
adc
mov
or
fadds
or
inc
cmpsl
shlb
sbb
jnp
adc
mov
mov
mov
hlt
inc
arpl
addr16
test
jmp
mov
imul
cmp
sahf
testl
cs
sub
jo
gs
jbe
dec
shlb
and
rcr
dec
std
sbb
imul
in
add
hlt
push
bound
loope
ret
lcall
jae
sbb
and
pushf
jl
xor
xchg
out
stos
pop
std
hlt
cmp
testb
inc
dec
xchg
aas
out
gs
rolb
pop
xor
or
loopne
adc
jl
inc
aam
sub
into
ret
xchg
mov
insl
lret
sub
inc
in
fwait
jmp
stos
or
cld
outsb
addl
mov
loop
outsb
gs
lret
repz
jo
jae
jb
lahf
test
in
xchg
dec
vmovapd
insl
test
sub
mov
ret
testl
jbe
push
imul
and
mov
insb
sbb
cmp
into
leave
test
shll
mov
leave
fstpt
add
les
push
add
insb
imul
xchg
test
imul
sub
inc
adc
add
cmp
xchg
test
ret
jae
or
xor
push
adcl
mov
pop
xchg
repnz
loope
loopne
out
xor
cwtl
jnp
xlat
ficoml
mov
sbb
jb
and
and
pop
or
xchg
mov
adc
cld
pcmpeqb
sahf
jecxz
xor
out
mov
mov
add
cmp
dec
cmc
sbb
dec
sub
pop
ret
ret
push
sub
aaa
jge
imul
add
outsl
inc
xchg
xlat
pop
jge
lret
leave
xchg
int3
fisttpll
popa
xchg
mov
lods
push
or
add
cli
sub
dec
mov
mov
cmp
rol
loopne
xor
add
inc
stos
stc
gs
sbb
mov
in
jecxz
xchg
or
dec
pop
dec
push
add
mov
fildl
xchg
add
not
jnp
xor
cmpsl
fmulp
sbb
outsl
mov
mov
mov
mov
xchg
repnz
mov
xchg
sti
or
sub
mov
out
shll
mov
out
rorb
mov
and
jg
adc
jbe
loope
inc
push
in
jecxz
xor
jp
mov
lock
xchg
push
subb
inc
sub
sbb
mov
sbb
add
cwtl
mov
xlat
cltd
int3
inc
lds
and
pop
fwait
das
inc
dec
or
repnz
loop
pop
fstpl
pop
add
fistpl
adc
mov
stos
pop
mov
or
push
push
pop
inc
aas
subb
xchg
iret
cmp
test
mov
imul
jnp
xorl
jb,pn
loope
sahf
mov
inc
mov
test
sbb
fldenv
or
enter
mov
js
sub
test
or
fimull
or
lcall
mov
pop
shll
adc
mov
rclb
xor
or
andb
sub
fs
aam
sub
mov
repz
sbb
xor
ficoms
cli
test
jp
ljmp
cmp
mov
and
aaa
sahf
mov
cmpsb
inc
lcall
out
xchg
cmp
aas
adcl
jge
aad
nop
push
jle
mov
mov
pop
daa
test
daa
mov
and
or
mov
imul
out
cwtl
sbbl
jle
ret
pop
adc
cs
out
push
jmp
bound
daa
sbb
add
test
hlt
test
cmpl
test
std
mov
arpl
mov
fimull
icebp
repz
fidivs
push
pop
sbb
xor
inc
mov
popa
dec
pop
or
pushf
xchg
addl
or
lods
jl
and
stos
adc
sbb
in
scas
out
adc
sbb
dec
xchg
or
aas
sub
pop
jle
and
rcrl
out
xchg
jl
ds
cmp
std
stos
jg
in
sbb
divl
mov
les
cmp
mov
lods
repnz
or
and
sub
imul
mov
cmc
add
push
data16
pop
cmp
aam
filds
jbe
lods
xlat
and
cwtl
leave
pop
cmp
sbb
aam
pop
loop
lcall
sub
dec
add
xor
loope
add
push
int3
cli
pop
xchg
mov
push
mov
push
and
dec
ss
das
sbb
mov
xchg
pop
inc
cmp
insl
add
test
ret
jge
mov
mov
hlt
movlps
jne
jmp
enter
out
mov
mov
cmp
pcmpeqd
clc
negl
lcall
sbb
ja
push
in
cmp
ret
testb
or
push
stos
jl
cwtl
sub
js
sub
adc
imul
jns
adcb
lcall
int3
push
adc
sti
push
popa
jbe
idivl
mov
je
icebp
popf
cmpb
aam
inc
or
loopne
nop
lcall
popa
pop
mov
ror
test
js
jno
test
addr16
push
andl
test
jbe
mov
movups
and
cmp
mov
sbb
sahf
mov
lock
adc
ds
out
mov
mov
dec
sbb
rorl
aaa
jmp
ret
and
hlt
push
inc
lods
test
xlat
dec
xor
lods
inc
mov
xor
cmp
sbb
stos
push
hlt
cmpsb
enter
int3
push
mov
sahf
mov
lret
iret
dec
dec
mov
cltd
insb
adc
rorl
cmc
jbe
mov
jmp
das
inc
fcoml
jae
pop
inc
negb
mov
int
adc
dec
cmc
shl
loopne
jmp
mov
and
fwait
nop
bound
test
adc
cmp
fsubs
mov
lea
rcrb
push
and
pop
subb
cs
dec
aas
inc
jno
in
test
push
jo
pushl
das
bound
xlat
push
dec
dec
and
xchg
dec
je
sbb
cwtl
outsl
sbb
fstps
mov
mulb
pop
jnp
pop
xchg
jecxz
pop
mov
addr16
pop
inc
mov
ficoms
call
loope
inc
lods
out
orl
in
rolb
inc
test
int3
xchg
sahf
jno
shl
insl
loopne
call
fistpl
cmp
jg
xor
test
icebp
popa
inc
in
jne
nop
add
int3
sub
mov
mov
pusha
sti
push
out
ds
inc
jge
orl
mov
sub
xchg
pushf
fs
cmpsb
dec
repnz
ret
loope
mov
dec
in
fucomip
push
test
popf
lock
hlt
fadd
xlat
incl
fiaddl
inc
popf
popf
bound
mov
adc
lret
test
xchg
jmp
inc
cmpsl
cs
cmp
ds
add
andb
mov
xor
into
shl
inc
test
rorb
jne
rcll
jno
lret
and
call
or
leave
lret
cmp
stos
pop
movsb
push
enter
jno
push
stc
xor
sub
and
fs
cmpsl
dec
in
push
dec
xchg
adc
push
cwtl
jecxz
sub
insl
loope
dec
in
xorl
mov
in
fdivrp
jp
push
and
incb
mov
mov
gs
scas
push
dec
and
push
dec
or
lcall
cmpl
sub
xor
stc
xchg
xchg
inc
insl
insl
dec
pop
aam
fwait
gs
add
ret
outsb
sahf
jmp
xor
or
int
mov
ficompl
mov
xchg
and
sbb
jae
jmp
sti
push
out
out
lcall
lea
cmp
mov
imul
xchg
fadds
sub
repz
pop
jl
fdivr
mov
mov
scas
dec
push
jb,pt
into
fstps
ljmp
out
mov
fsubrl
cmp
add
dec
adc
and
lahf
aad
in
cmp
dec
jmp
dec
add
xor
mov
jecxz
jp
das
mov
daa
popf
mov
push
mov
pop
jnp
inc
mov
mov
fwait
mov
mov
xor
sub
cli
mov
xor
dec
sti
jg
pop
xlat
sbb
jle
lret
das
jmp
ficoml
xor
shr
xor
inc
jl
cld
shrl
jle
outsb
push
call
arpl
test
sarl
push
int3
mov
pop
or
inc
dec
icebp
sub
dec
maskmovq
testl
xor
call
aam
xchg
push
xor
push
repz
repz
push
mov
xchg
xor
fwait
sub
pop
les
rorb
add
daa
cmp
das
inc
pop
mov
and
mov
ss
loope
aam
fnsave
mov
in
and
jmp
test
iret
push
sub
lahf
xchg
cwtl
test
in
iret
subb
les
inc
out
push
enter
mov
sub
fwait
daa
mov
repz
cli
popa
nop
push
aam
das
div
js
je
or
mov
test
or
sti
and
addr16
xchg
js
add
dec
pushf
rcll
sbb
scas
mov
ss
fldt
inc
pushf
add
enter
loope
and
in
cs
jno
dec
fs
imul
add
ss
xchg
and
add
test
push
cli
add
sub
fildll
mov
movb
cld
mov
rclb
pop
sub
push
aam
push
push
cmc
mov
or
mov
test
xchg
xor
shrb
push
xchg
pop
lahf
mov
test
jmp
adc
ljmp
sahf
pop
jmp
in
mov
mov
shl
ret
les
push
jae
push
incb
xchg
nop
js
sbb
data16
jmp
mov
and
aas
mov
ret
cld
ret
mov
sub
push
xor
lods
test
cs
lret
adc
lea
jbe
add
repnz
xchg
jl
pop
dec
push
pop
lods
jmp
lret
jl
std
push
movsb
xchg
pop
xchg
push
or
pop
sbb
jecxz
cwtl
push
into
fdivrl
dec
xchg
jp
jmp
rolb
outsl
popf
cmp
inc
jg
sbb
in
shlb
push
arpl
jle
insl
rorl
out
or
test
jo
push
hlt
lcall
lcall
stos
std
movsl
ror
out
pop
mov
scas
jl
mov
sbb
out
add
outsl
test
mov
pushl
cmp
in
push
imul
xlat
push
sarl
ss
scas
inc
cld
pop
loope
jmp
leave
mov
stc
mov
jge
adc
or
push
add
xchg
add
popa
mov
cmp
mov
xor
xor
inc
cs
movsl
pop
push
shlb
and
fwait
dec
cmp
and
mov
lea
cmp
adc
pop
sub
push
popf
or
ret
and
inc
sub
cmp
imulb
xchg
mov
ficoml
rclb
pushf
jle,pn
inc
fcomps
ret
pop
ror
mov
sbb
stos
dec
shrd
xchg
int
inc
stos
push
lahf
push
ret
imul
shll
sbb
jnp
movsb
cmp
mov
xchg
pop
dec
add
xor
push
jecxz
lret
jp
and
sahf
jg
add
daa
jle
add
out
xchg
push
or
stc
cs
cmpsl
pop
mov
stc
or
mov
push
pop
nop
call
pop
hlt
gs
mulb
lds
cld
sbb
shrb
idivb
in
out
pop
int3
or
rcr
rcrb
loop
lahf
ret
fs
test
or
jnp
and
ds
dec
stc
mov
notb
lahf
jmp
add
mov
xchg
add
ret
sub
fldz
ret
or
or
testb
imul
push
xchg
lcall
mov
mov
test
mov
fwait
aas
mov
or
dec
mov
stos
aaa
mov
add
enter
push
dec
popf
icebp
cmp
mov
mov
clc
das
fisubs
decl
enter
call
hlt
jb
pop
addr16
call
fstpt
pop
outsl
or
or
leave
ja
fistps
push
ljmp
or
jns
leave
dec
outsb
xchg
jbe
add
popa
jl
decb
stc
orb
sbb
xlat
out
mov
subl
subb
shlb
add
inc
in
stos
repz
adc
or
mov
shlb
or
and
jbe
imul
inc
nop
cmpsb
cmpsb
xchg
jae
in
or
icebp
inc
data16
and
adc
roll
dec
jbe
push
jmp
dec
out
es
cli
fwait
push
mov
gs
inc
jnp
xchg
scas
nop
pop
fwait
xor
mov
das
add
gs
outsb
fcoms
pop
out
in
mov
fcmovbe
loope
lea
xchg
sarl
xor
ficompl
jns
shl
in
dec
and
loope
sub
jg
repnz
out
aad
inc
cmc
in
cmp
lret
or
add
mov
sahf
mov
int
cmp
imul
incl
jge
lods
or
lods
popa
dec
push
mov
lret
mov
in
jbe
lret
iret
add
jp
fistps
cli
mov
xchg
xchg
dec
in
clc
mov
add
aad
mov
or
pop
pop
xor
mov
test
mov
es
jge
mov
push
sbb
jmp
out
mov
mov
jecxz
filds
mov
cwtl
imul
repz
add
sbb
aam
stos
and
xlat
cmp
out
aam
cmp
adc
in
inc
mov
add
mov
mov
adc
pop
nop
mov
fstps
push
ficoms
das
sti
flds
dec
nop
adc
jnp
sub
mov
jb
and
rolb
pop
pop
and
and
loopne
aad
popa
jb
pop
mov
fnstenv
insb
dec
clc
push
pop
mov
ficoms
pop
dec
fldenv
jecxz
ret
jmp
mov
jg
push
xor
and
mov
lret
cmp
sub
jbe
movb
je
fs
in
cs
mov
fcomps
incb
jecxz
sub
test
sub
leave
push
pop
mov
adc
les
ret
sbb
decl
movsl
movsb
scas
push
push
xchg
fnsave
pop
mov
std
jns
or
mov
dec
scas
stos
jl
int3
xorl
pop
clc
repz
jns
jno
xchg
push
cmp
testl
decl
push
bound
mov
dec
xchg
adc
xor
and
xchg
lods
sbb
cmp
mov
cmp
ss
sub
mov
leave
loop
inc
sbb
jb
enter
mov
adc
sbb
lret
and
sbb
inc
jge
mov
xor
mov
in
xchg
bound
or
sahf
sbb
pop
jmp
out
rorb
repz
fdivs
pop
jp
in
pop
or
adc
in
mov
and
adc
ret
rorb
pop
or
add
out
cmc
pusha
mov
push
shlb
mov
xchg
pop
dec
movsb
lahf
mov
push
out
cmp
divl
sbb
fdiv
in
pop
push
sti
push
nop
pop
jae
jl
incb
xlat
push
jmp
vunpckhps
pop
ror
stc
and
stc
in
push
inc
aaa
idivl
out
push
cmpsl
movsb
mov
cltd
movsb
mov
rcll
decb
jge
sti
arpl
jbe
pop
loop
push
push
pop
jp
xchg
pop
xchg
or
xchg
mov
icebp
push
imul
and
cmpsb
popf
sbb
std
pop
inc
jge
pop
lods
cwtl
nop
adc
les
mov
cmp
popf
xrelease
adc
add
movsb
in
loopne
jne
dec
xchg
lods
insl
xchg
xchg
fucomp
inc
mov
out
mov
pop
push
hlt
inc
inc
sub
push
es
pop
mov
or
repnz
push
cmp
in
daa
leave
cmp
xchg
jp
scas
inc
mov
mov
movb
cmp
jo
clc
and
jne
cmpsl
inc
mov
push
cmp
mov
and
add
mov
popf
pop
shl
aas
xor
xchg
push
arpl
xor
mov
xchg
and
add
jae
scas
push
push
roll
loop
jno
mov
xadd
mov
jge
hlt
fwait
dec
testb
mov
or
cmp
xchg
les
out
inc
and
test
mov
movsl
push
xor
addr16
cltd
in
and
sub
icebp
aas
or
xor
mov
cmp
jnp
mov
mov
sbb
andb
sti
lea
jae
add
stos
lret
dec
jae
mov
hlt
mov
pop
test
in
jecxz
fs
push
push
xchg
push
fidivrs
test
cmp
in
hlt
insb
cmp
imul
ljmp
loop
pop
push
jno
pop
sub
ss
or
cli
test
mov
dec
xchg
stos
mov
add
dec
fsubrp
sbb
lods
js
adc
pop
daa
dec
repz
loope
mov
lock
repz
popa
mov
xor
scas
in
jns
jns
movsb
inc
jnp
shrl
mov
sti
or
loop
add
movsb
mov
bound
jns
xor
lods
mov
and
daa
xchg
push
sub
bound
ret
ss
mov
lods
adc
movsl
add
and
cmp
xchg
jnp
cmp
cmp
adc
gs
inc
std
add
xor
stos
inc
cmp
cmp
out
lock
cmpsb
fildll
or
shl
and
and
outsl
idivl
pop
xchg
loopne
adc
xor
jnp
test
jecxz
in
xchg
lcall
jne
mov
dec
movsb
and
and
loopne
pusha
les
pop
dec
movsl
popf
dec
push
xor
sub
push
add
mov
sub
jnp
rclb
push
pop
mov
mov
pusha
mov
notl
pop
dec
push
repnz
jns
mov
addr16
cmp
daa
mov
loopne
add
stos
inc
mov
mov
sbb
rorb
cmc
outsl
ffree
xchg
dec
pop
mov
pop
adc
mov
mov
outsb
adc
in
xchg
mov
insl
jg
rol
fnsave
cmpsb
mov
addr16
iret
sub
pop
leave
push
cmp
sbb
cmp
test
mov
add
jmp
cmpb
jo
aas
jae
sub
cmc
out
ror
mov
dec
jle
cmp
insl
mov
mov
inc
pop
mov
scas
jecxz
pop
jmp
xor
or
mov
pop
out
outsb
cmp
shll
jle
xor
jge,pt
or
mov
mov
in
dec
jno
stos
jle
fnstenv
pop
push
cmp
lret
adc
cli
mov
mov
mov
dec
enter
cmp
mov
out
lcall
lahf
xor
cmp
xchg
negl
out
je
popf
push
dec
call
and
mov
xchg
rcll
sti
add
pop
add
data16
popl
lods
scas
jb
sbb
imul
mov
je
mov
adc
clc
xchg
mov
jp
inc
inc
xchg
fcmove
rorb
sahf
stos
ret
xor
bound
pop
leave
fcomip
nop
inc
cltd
dec
push
mov
add
push
test
movsl
jp
dec
xor
pop
sbb
inc
xchg
sti
inc
mov
negb
adc
sub
hlt
lock
add
pop
shll
mov
sbb
cs
add
arpl
addr16
pop
stos
test
out
jg
lods
lods
sti
jmp
mov
fldcw
andl
mov
test
and
lods
add
std
xchg
xor
int3
xchg
inc
xchg
sbb
sar
loope
repz
into
push
pop
ror
push
mov
jge
arpl
xchg
add
pop
or
or
lock
loope
sub
clc
sbb
pushf
jle,pn
das
xchg
dec
add
inc
or
loope
xor
hlt
jl
sub
cmp
sub
lods
add
pop
pop
cmpsl
jns
lds
out
mov
out
push
sbb
mov
loop
adc
pushf
mov
jle
cli
and
push
fistl
out
mov
inc
movl
jle
pop
cmp
je
cwtl
test
sbb
lods
mov
es
and
xchg
mov
and
andb
shlb
and
add
add
scas
icebp
movsl
fildll
push
ds
cld
xorl
or
jg
dec
mov
push
test
xchg
lock
push
repnz
test
add
icebp
xchg
mov
xor
inc
xlat
aad
test
add
test
int
add
aaa
sub
inc
and
mov
pop
jno
dec
sub
push
fmull
add
or
hlt
jae
stc
cmp
test
test
or
enter
push
xlat
ret
xor
mov
movsb
mov
inc
push
fsubrp
mov
in
mov
enter
ljmp
gs
ret
lret
xor
loope
out
aas
sbb
mov
xor
dec
cltd
ret
mov
jmp
inc
mov
aad
icebp
rol
jge
xor
and
lock
nop
repz
push
mov
cwtl
stos
movsl
mov
popa
and
sbb
mov
mov
adc
in
add
stc
add
push
add
pop
insb
push
in
pop
sbb
fildl
addr16
xor
pop
jp
push
andb
jmp
cmpsl
mov
cmc
add
xor
or
pop
loopne
mov
lock
xor
repnz
cmpsb
mov
mov
stc
mov
loope
dec
imul
leave
subb
ret
xor
aas
dec
sarb
mov
add
add
mov
jp
cmpsb
movsl
push
fisubl
dec
xrelease
xor
shll
sub
lea
pushf
movsl
daa
sbbl
pop
mov
fistpl
mov
cmp
pop
shll
shll
subl
rolb
push
push
imulb
fimull
ss
xchg
and
push
fucom
jo
xlat
pop
sbb
pop
shll
mov
out
mov
ljmp
jg
dec
mov
nop
aas
enter
sbb
xchg
mov
push
int
insb
inc
fs
mov
adc
mov
mov
and
call
pop
or
sahf
out
sbb
inc
cmp
cltd
push
fldt
lods
xor
imul
sub
movl
repnz
aaa
mov
gs
pop
rcl
test
imul
popf
fwait
mov
mov
std
sub
or
leave
dec
into
xchg
mov
loop
imul
sbb
das
aad
scas
aaa
jns
stos
mov
sahf
add
push
dec
jg
mov
loopne
or
aas
cmpsl
inc
pop
imul
sub
dec
pop
adc
or
jl
jl
mov
xchg
mov
xchg
sub
pop
enter
jns
ljmp
mov
lret
fisubrs
inc
mov
inc
lret
shll
daa
xchg
or
and
sbb
adc
cwtl
fcmovne
loopne
scas
das
dec
pop
xchg
xchg
xor
push
movl
adc
out
stc
stc
mov
das
lcall
mov
cli
ret
popf
fucom
or
test
cmp
aad
sbb
add
outsl
lods
sbb
or
fs
push
mov
mov
mov
outsb
leave
sahf
add
ja,pt
cmc
shrl
adc
leave
xchg
add
dec
in
loopne
pusha
out
pop
xchg
sub
popa
imul
lahf
and
jnp
add
xchg
cmp
pop
cwtl
mov
adc
cmp
sbb
nop
or
xchg
ss
push
int
mov
call
aaa
in
sbb
mov
enter
inc
add
pop
pop
mov
jbe
rorb
sbb
or
test
arpl
dec
push
cmp
adc
jno
push
sbbb
inc
push
movsl
pop
inc
inc
sbb
adc
sbb
scas
rolb
pop
notl
inc
lds
jne
lahf
mov
or
xor
es
cmp
fildll
or
xchg
sub
ret
cmp
push
push
adc
add
outsl
or
mov
push
cs
in
clc
daa
xor
push
add
lock
imul
pop
jnp
pop
mov
dec
pop
inc
mov
inc
or
out
lock
jns
push
mov
dec
xor
dec
adc
repnz
imul
les
stc
mov
aas
jns
jo
nop
mov
es
cmp
fwait
mov
push
lods
fnstcw
lock
fwait
mov
jo
or
and
cli
fcmove
ja
mov
mov
sbb
or
mov
mov
cmp
pop
or
stc
jns
mov
mov
mov
mov
mov
xor
push
dec
pop
xor
jg
sub
cmp
popa
mov
inc
call
xchg
div
sahf
jno
pop
icebp
dec
mov
ret
mov
out
cltd
dec
push
movb
mov
iret
sbb
iret
xchg
lea
aam
mov
hlt
mov
mov
test
mov
sarb
adc
dec
aaa
mov
xor
push
fimull
xchg
pop
negl
cmp
sub
push
pop
inc
mov
mov
into
sub
repnz
lret
sub
cltd
and
pop
dec
loop
mov
and
in
mov
js
sub
mov
movsb
cld
xchg
xchg
cmp
ljmp
loopne
pop
sub
cld
out
pop
mov
in
inc
daa
fwait
shl
mov
xor
mov
shlb
loopne
daa
mov
flds
add
push
into
in
andl
ss
addb
xchg
data16
mov
pop
call
mov
add
push
mov
push
and
sbb
shlw
dec
hlt
dec
push
mov
fiaddl
and
fs
into
push
mov
or
xor
idivb
pop
jns
mov
and
push
repz
add
inc
jl
sahf
subl
out
ljmp
mov
push
and
outsb
jg
mov
lods
xor
inc
sbb
mov
popf
mov
lret
jp
jp
mov
sub
jmp
jbe
int3
xchg
xor
inc
js
movsl
stos
sbb
insl
shll
and
pop
cld
xorl
pop
mov
mov
or
in
jb
data16
lcall
bound
jge
jo
arpl
das
mov
fs
mov
dec
adc
ja
cmp
int3
ss
cmp
push
lahf
mov
cmp
cltd
sahf
sahf
arpl
inc
fstp
and
push
int
lret
rcl
repnz
mov
cmp
sbb
repz
pop
bound
sarb
enter
cmp
jne
insl
insb
nop
adc
repnz
push
xor
mov
cmp
sbb
mov
mov
mov
dec
int
lret
pop
and
repz
movsb
jp
or
sub
cli
xchg
sbb
insl
js
sbb
pop
jecxz,pt
outsb
leave
aaa
dec
xchg
mov
fiadds
cmp
iret
sbb
mov
pop
xor
push
loop
ljmp
xchg
into
sti
push
cmp
mov
es
push
frstor
test
hlt
aas
inc
pusha
jmp
sbb
enter
dec
pop
into
mov
xchg
adc
cmp
outsl
sub
fxtract
stc
clc
cmp
adc
mov
mov
pop
adc
int3
rclb
cmp
sti
aam
mov
jp
push
adc
call
mov
xchg
lods
jg
push
insb
mov
sbb
dec
das
push
adc
int3
imul
push
adc
mov
sbb
int3
push
std
cwtl
xor
mov
in
jl
mov
lret
mov
scas
mov
push
prefetchwt1
mov
lcall
xor
test
popf
or
xor
dec
pop
out
lods
imul
fisubrs
cmp
aad
pop
jmp
pop
jmp
in
cmp
xchg
mov
data16
in
lret
add
scas
xchg
test
andb
add
sbb
mov
loopne
dec
pop
loop
push
adc
fwait
xor
add
mulb
push
in
push
mov
into
xlat
int3
int
pop
cwtl
and
mov
mov
or
in
inc
pop
adc
imul
sub
mov
add
inc
mov
xor
cmp
and
iret
pushf
push
test
jns
pop
nop
xor
mov
xchg
dec
lods
subb
ljmp
adc
movsb
inc
push
ljmp
scas
push
push
nop
inc
add
sub
adc
push
pop
not
jb
fs
shrl
test
pop
sub
lods
add
sahf
lods
pop
mov
sub
outsl
push
cmp
mov
aam
rcr
or
adc
mov
sub
mov
adcl
data16
add
lret
shrl
push
je
cmp
in
inc
sbb
out
or
fisubrl
in
cmp
pushf
aaa
jl
sbb
sbb
or
pop
shlb
ret
pop
dec
or
loopne
push
and
pop
jnp
xchg
pop
jno
ret
inc
mull
repz
add
cmp
or
ljmp
dec
dec
je
in
cmpb
jp
add
imul
pop
lods
cmp
std
aas
cmp
outsb
push
ret
dec
lds
test
scas
push
loopne
mov
jno
cmp
lock
adc
jmp
leave
inc
cmp
or
lahf
xor
mov
ja
inc
xor
iret
lods
push
xor
and
dec
loopne
aaa
cmp
dec
pop
or
ljmp
pop
aam
add
and
rolb
xor
das
push
mov
jge
mov
lret
and
subl
cld
test
cli
xchg
cmp
add
int3
addb
pop
popa
adc
and
int3
push
pop
pop
mov
gs
hlt
test
push
push
test
push
cli
jmp
add
mov
pop
cmp
and
arpl
popf
movsl
xchg
push
iret
or
jge
xchg
pop
loopne
rcll
test
mov
cmp
jg
fidivrl
sbbb
mov
xchg
mov
mov
test
and
sbb
clc
or
test
xor
push
inc
jmp
push
aad
dec
pusha
pop
aad
imul
add
or
sub
add
jmp
enter
ret
xchg
mov
pop
sub
daa
loopne
inc
pop
lret
cmp
xor
aas
je
lods
pusha
and
sub
jne
imul
sahf
fwait
out
mov
sub
ret
outsb
cmp
scas
leave
cmp
loop
mov
lahf
inc
jl
fldenv
jp
jo
xchg
inc
pshufw
ja
inc
fisubs
add
sub
stos
push
add
test
daa
pop
hlt
popf
in
add
pop
add
cmp
fbstp
les
clc
add
jno
push
rcrb
loop
mov
js
and
cli
divl
lods
dec
mov
notb
pushf
pop
jne
xor
cltd
mov
movsl
in
dec
addr16
xchg
cmovle
mov
test
insl
sti
enter
lea
mov
push
insb
push
loop
data16
ss
popa
inc
mov
cmp
mul
lods
add
push
and
fsts
pushf
cmp
test
outsl
xor
and
and
das
iret
out
push
inc
test
popf
cmp
xor
jge
in
fcoml
in
add
xchg
and
xor
pushf
insl
into
lods
inc
mov
decl
repz
cmpsb
and
add
inc
mov
push
push
cmp
jne
xchg
das
dec
mov
rcrl
cwtl
rcrb
into
sahf
insl
std
push
shrl
pop
aaa
hlt
pop
sub
out
dec
cmc
sbb
sbb
aam
cmp
sub
bound
jecxz
mov
pop
jne
xor
icebp
inc
cld
and
jecxz
sub
pop
push
arpl
rol
pushf
inc
sti
aas
push
add
popa
mov
repz
push
negb
jmp
ficomps
cli
dec
jns
mov
sub
adc
sti
inc
xor
inc
rol
jo
repnz
out
dec
and
bound
imul
mov
lds
add
jae
push
or
enter
mov
push
ja
mov
adc
mov
jae
hlt
scas
lret
stos
out
xchg
cltd
rcr
push
xchg
jns
inc
lcall
into
nop
add
and
repnz
mov
stc
mov
clc
jp
out
push
es
push
int3
or
jge
ja
jecxz
pop
into
xor
shrb
jecxz
mov
js
sahf
pop
or
sbb
stc
adc
mov
jb
decb
add
push
std
int3
arpl
jg
xchg
inc
roll
clc
les
sub
push
dec
add
stos
out
xchg
and
mov
inc
mov
out
popf
das
mov
and
adc
cmp
or
adc
jecxz
loopne
addr16
xchg
cltd
clc
jecxz
sbb
nop
pop
inc
xor
mov
rclb
and
in
inc
shlb
xchg
cwtl
adc
pop
jmp
xor
inc
add
aam
icebp
sub
adc
pop
adc
ret
xchg
repz
mov
divb
add
mov
mov
enter
jg
gs
push
sub
push
or
adc
pop
imul
aam
push
mov
fistps
stos
xchg
or
add
arpl
out
adc
cmp
jnp
cmpsl
jb
push
or
push
mov
and
cmp
lcall
lea
cmp
adc
mov
mov
xchg
lods
add
push
movl
leave
das
iret
out
jo
mov
inc
pop
ficomps
test
ljmp
out
add
mov
or
sbb
enter
test
insb
or
lahf
xor
popa
dec
adc
insl
cld
xlat
jg
lods
inc
add
cmp
cmp
sub
aaa
cmc
movsl
pusha
jo
scas
xor
add
push
mov
addr16
mov
inc
dec
sbb
cmp
push
cmp
or
dec
filds
mov
xor
or
mov
lret
cmp
inc
push
in
dec
or
sub
out
gs
jmp
add
nop
inc
adcb
out
push
mov
sub
ljmp
sub
adc
jae
dec
xlat
negb
int
lgs
insl
insb
clc
loopne
loop
lahf
jno
pop
rorb
or
jae
mov
roll
push
lods
mov
dec
dec
mov
lcall
rcrb
loopne
pusha
push
mov
and
and
es
imull
sbb
test
push
and
popl
add
sti
in
es
aam
arpl
pop
movsl
inc
mov
mov
pop
cwtl
mov
popa
xor
out
xchg
adc
dec
mov
xor
lods
hlt
push
mov
push
xor
adc
jo
inc
xchg
add
cmp
add
imul
cmp
ss
inc
sbb
das
adcl
in
sbb
mov
loope
sub
sub
pusha
dec
or
gs
xchg
push
jb
jne
adcb
icebp
and
and
inc
imull
cwtl
adc
cmp
jo
mov
addb
mov
push
popa
fmull
mov
lds
insb
push
stos
sub
or
mov
and
xchg
loope
mov
pop
and
add
xchg
inc
mov
es
xor
sahf
movsb
in
or
test
jecxz
sbb
out
cmp
jo
adcb
cmp
sub
pushf
sbb
stc
aam
loopne
out
adc
popa
jno
xchg
mov
sub
jo
or
mov
ret
popf
mul
push
icebp
jne
xchg
stos
pushf
aam
dec
into
and
jl
sbb
and
out
sub
aaa
or
inc
xor
pop
jb
imul
sbbl
jg
popf
jg
outsb
das
nop
pop
jae
sub
xchg
mov
pop
out
push
cmpsl
push
add
mov
xor
enter
add
sub
pop
sahf
shr
xor
repnz
ds
rcrl
idivl
pop
les
dec
mov
or
xor
add
cmp
adc
mov
js
insl
inc
mov
xlat
xor
stos
lahf
jne
pop
or
into
fidivrl
jl
mov
dec
inc
pop
test
add
jl
and
jmp
push
mov
push
in
mov
xchg
pop
adc
jmp
sbb
in
adc
adc
aad
daa
mov
mov
pop
js
push
or
jle
outsl
jmp
mov
mov
cmpsb
cmp
jbe
aaa
cmp
mul
ret
insb
xor
add
inc
add
mov
cmc
xlat
push
and
test
cmp
xor
aad
in
dec
bound
imul
xor
mov
sub
mov
mov
lds
cltd
enter
daa
and
out
in
in
xor
lea
mov
iret
xlat
mov
inc
xor
mov
arpl
sti
jle
loopne
add
push
stc
pop
jno
inc
sbb
mov
xchg
cltd
outsb
or
iret
das
jecxz
or
sahf
stos
repz
jne
call
testb
sub
repz
lods
popa
cmp
mov
or
inc
cli
leave
push
lcall
dec
add
std
xor
cmp
xor
fistps
inc
rol
pop
xor
in
sti
dec
pop
cmp
xchg
pop
inc
mov
mov
mov
or
xchg
inc
or
add
shll
push
mov
pop
inc
jg
sbb
orb
movsb
adc
mov
mov
in
out
std
ds
mov
push
xchg
call
and
lahf
lea
fwait
lea
fwait
push
dec
push
cs
lcall
jb
jp
or
sti
fcmovnb
xchg
pop
mov
jge
sbb
jae
stos
je
mov
sti
mov
mov
jae
dec
pop
and
adc
adc
cmpsl
jl
xchg
sub
jnp
in
dec
xchg
sub
sbb
fadds
sbb
cs
mov
ret
adc
rclb
sahf
lcall
mov
xchg
pop
mov
adc
cmpsb
fisubrl
or
jo
pop
cwtl
cltd
sub
adc
pushf
ret
pop
xlat
and
push
in
sti
cltd
sti
and
lret
int
xadd
mov
dec
jmp
jg
cwtl
iret
in
gs
ja
or
fs
adcl
dec
sti
pusha
lret
mov
xchg
mov
sahf
nop
jle
push
pusha
js
out
inc
testl
add
dec
jge
xor
rcrl
cli
sbb
movsl
repz
dec
pop
sub
inc
inc
add
insl
sbbl
xchg
sub
xor
xor
lds
push
adc
cmp
xchg
mov
pop
je
lahf
dec
repnz
push
aam
inc
cmp
xchg
es
sbb
call
push
insl
sbb
inc
pop
push
cmp
pop
pushf
add
mov
sub
les
lods
mov
nop
stc
stos
and
outsb
push
adc
dec
outsb
lea
push
sarl
lods
arpl
dec
fidivs
pop
addl
scas
test
mov
data16
test
loop
push
rclb
rclb
xorb
scas
lock
push
out
add
fstpt
or
push
scas
mov
out
rclb
jge
xor
icebp
dec
in
scas
aad
cmp
xor
xor
nop
out
aam
push
clc
mov
xchg
jp
arpl
cmp
sub
inc
sbb
and
cwtl
cmp
jns
push
btc
adc
push
xor
repnz
lret
scas
sahf
xor
and
inc
orb
xchg
pop
xlat
movsb
cs
ret
pop
popl
addr16
mov
and
scas
scas
nop
xchg
into
enter
stos
jmp
mov
or
inc
bound
adc
xor
insl
fildll
dec
imul
or
mov
cld
aas
outsb
cs
jle
test
dec
in
stos
dec
nop
and
mov
cmp
out
cli
aas
loopne
stc
in
inc
imull
subl
std
mov
rcrl
jnp
xchg
pop
roll
pushl
jne
pushl
push
ds
inc
hlt
xor
scas
in
scas
sbb
popl
aad
popl
inc
mov
adc
addr16
adc
cmpsl
mov
push
jae
xchg
jnp
inc
aam
dec
adc
xchg
dec
sbb
jle
aad
popf
aas
fdivrl
loop
out
test
jmp
jmp
pop
pushaw
inc
adc
cmp
lret
ds
in
int3
push
jb
cltd
jno
cltd
in
aam
lods
jns
pop
les
aam
push
mov
icebp
fwait
jne
imul
dec
cmpsl
cld
aam
lcall
out
js
jmp
push
mov
rcrl
sarl
xor
xchg
jb
sub
dec
in
loop
fsubrl
flds
jp
imul
pop
or
sbb
jae
lds
les
jg
mov
hlt
lret
push
das
dec
repnz
scas
push
into
dec
mov
xchg
jb
int
cmc
inc
mov
and
push
sbb
lea
add
ljmp
xchg
popf
rcrl
sub
insl
mov
xor
jo
jbe
push
inc
jne
cmp
or
add
inc
popf
icebp
xchg
out
push
xchg
mov
loopne
jnp
add
push
imul
jmp
xor
xor
mov
adc
out
movsl
jecxz
pop
fs
mov
sub
out
cmp
das
dec
in
fwait
repnz
fstps
mov
notl
out
cmp
or
jb
sub
jbe
pop
clc
repz
je
adc
dec
movsb
xchg
or
addr16
fs
sbbb
cmp
mov
sti
pop
gs
xchg
dec
jge
dec
leave
inc
add
xor
pop
scas
dec
sbb
pop
jbe
cmpsb
xor
ds
push
hlt
sti
sub
cli
sub
mov
rclb
call
arpl
das
add
add
pushf
mov
push
std
jecxz
pop
mov
mov
cmpsl
test
push
dec
and
pop
inc
push
jns
test
adc
dec
mov
jp
mov
loopne
adc
enter
and
mov
sbb
and
xchg
xor
scas
inc
pop
pushf
outsl
pusha
mov
pusha
ret
rcr
lock
dec
js
data16
sahf
mov
test
pop
xchg
addr16
lods
adc
dec
sti
iret
pusha
xor
mov
mov
les
jl
push
dec
push
int
sbb
lods
xor
jno
int3
mov
mov
mov
int3
adc
add
add
cmp
fistpl
js
mov
fwait
icebp
dec
cmp
aad
sub
test
push
subl
jo
mov
or
lods
aad
xchg
in
pusha
inc
cvtdq2ps
test
mov
imul
scas
pop
adc
ljmp
cwtl
inc
mov
push
xor
mov
jne
out
sbb
jle
stc
dec
iret
loope
das
or
popf
xchg
out
inc
mov
sub
ret
push
mov
fbld
push
and
sbb
repnz
lock
pop
nop
sbb
inc
mov
loope
xchg
sbb
nop
inc
in
pop
cwtl
ja
add
clc
mov
mov
xor
inc
enter
dec
xor
mov
push
sbb
and
out
inc
jle
pop
in
mov
fcoms
sub
aam
dec
xor
repz
rol
mov
rcrb
sub
movsb
and
sbb
cs
mov
scas
inc
mov
lods
cmp
cli
mov
add
sahf
imul
mov
inc
scas
cltd
dec
stc
and
xor
stos
sbb
mov
out
lcall
jle
bound
inc
andb
push
mov
lret
cmc
loope
add
push
lahf
insl
outsl
movsl
insb
or
int3
adc
stos
lcall
rcr
cld
or
jbe
movsl
js
mov
jp
scas
dec
mov
jge
sbbl
cmpsb
jo
ss
mov
loopne
inc
mov
lea
jecxz
mov
push
pop
jecxz
ret
sti
sub
ja
xor
outsb
addr16
adc
mov
mov
imul
mov
pop
test
data16
xchg
mov
stc
inc
hlt
push
xor
dec
lea
mov
jle
aad
movsb
pop
or
or
fwait
sahf
push
mov
push
stos
into
jae
jecxz
andl
xchg
mov
dec
out
pop
test
sub
mov
jle
icebp
and
push
sti
mov
mov
pop
adc
aad
sub
ljmp
addb
test
xchg
adc
mov
sbb
stos
stos
out
add
push
mov
in
mov
fstps
ljmp
mov
or
lcall
add
repnz
mov
out
adc
sahf
xor
data16
xor
lret
movsl
mov
popf
xor
stos
mul
mov
jg
icebp
xchg
xchg
lds
bound
xchg
sbb
leave
int
icebp
lods
adc
jle
sbb
imul
fwait
lcall
add
cmp
das
enter
mov
loopne
or
mov
test
pop
aam
xor
clc
leave
xor
test
aad
imul
pop
sahf
adc
mov
push
fisubl
xchg
aaa
mov
cmp
sub
jae
leave
les
imul
jae
sub
sbb
rcrl
in
mov
jns
imul
pop
movsb
mov
inc
xor
dec
in
faddp
daa
and
inc
sub
imul
cmp
sub
das
inc
mov
jg
insl
or
mov
cmp
ret
push
jge
cmp
loope
in
mov
movb
mov
push
test
sub
test
pop
xlat
mov
cwtl
loopne
adc
add
std
mov
aam
xchg
cwtl
sbb
lret
xlat
xchg
jo
mov
adc
bound
lahf
push
dec
and
mov
rolb
daa
sub
movl
xchg
jns
and
xor
cli
adc
pop
mov
fwait
bound
in
and
add
imul
jae
sarb
js
jge
test
sbbl
add
fnstenv
ljmp
xchg
adc
movl
xchg
xor
mov
sub
add
push
mov
adc
pop
sub
jmp
cmovbe
and
mov
and
jge
sub
mov
and
int3
push
mov
ds
mov
mov
stc
mov
sbb
int3
pop
rcpps
mov
divb
js
fs
sub
pop
int
fnstenv
lods
jb
mov
mov
add
jmp
sub
cs
mov
pop
jno
bound
subl
xor
sub
mov
icebp
push
push
iret
xor
js
sbb
hlt
push
jecxz
jmp
sbb
pop
das
stc
mov
loop
mov
out
popf
clc
push
inc
cmc
out
dec
xlat
shll
lret
jle
lods
jb
push
sub
rorb
cmp
dec
lcall
pushf
jmp
mov
adc
ret
gs
sub
stos
jb
daa
inc
xor
mov
ficomps
leave
and
es
mov
shlb
sbb
sbb
mov
hlt
or
adc
jg
in
mov
sbb
add
push
dec
jmp
mov
notb
pusha
outsb
inc
push
lods
or
loope
outsl
xor
xchg
shrb
cmp
and
cld
jnp
decl
mov
sbb
mov
icebp
or
addl
dec
not
mov
je
clc
mov
mov
sbb
cmp
push
rcrl
testl
in
cmp
lret
popa
or
imulb
jmp
and
mov
ret
jmp
sub
dec
test
ja
adc
stos
xor
add
pop
lret
rcrl
roll
jbe
pop
push
mov
clc
sbb
push
mov
mov
cltd
bound
loop
fsubrp
mov
cwtl
mov
pop
mull
mov
xchg
xchg
xchg
xor
lea
fadd
add
scas
xchg
test
push
aaa
xchg
outsl
adc
lret
xlat
ret
ja
lret
clc
mov
mov
push
xchg
dec
sub
sbb
insb
rcrb
jae
adc
sbb
sub
fwait
mov
mov
cltd
insb
add
nop
sti
subl
pop
xlat
dec
mov
je
pop
inc
xchg
jnp
push
lds
cmp
xchg
xchg
adc
and
addb
jmp
daa
mov
cmp
ljmp
inc
adc
aas
push
jne
aas
cmp
stos
es
or
lea
jle
mov
push
mov
jmp
popl
pop
out
mov
inc
push
pop
test
adc
push
jge
pop
pop
jne
xchg
pop
imul
or
popf
lret
adc
jle
loopne
mov
int3
add
cwtl
bound
pushf
push
mov
push
cmp
lock
pop
imul
stos
add
xchg
es
lahf
loop
jb
imul
daa
aam
xchg
jb
aam
sub
sub
adc
enter
add
push
pushf
jno
adc
jb
dec
and
mov
aam
adc
stos
inc
pushf
mov
cmpb
mov
or
lock
adc
cmp
into
sti
mov
xchg
out
mov
xchg
lcall
in
pop
sbb
imul
push
loop
subl
into
mov
repnz
cmp
add
js
jns
repz
push
mov
xchg
sbb
in
sbb
mov
mov
bound
mov
loope
stos
sbb
xchg
test
cmpsl
scas
dec
lcall
dec
jo
or
sub
xor
cltd
mov
push
pop
push
loopne
shl
data16
scas
scas
lgs
cmp
push
adc
clc
les
sbb
outsb
in
xchg
addl
in
bound
iret
mov
insl
push
xchg
shlb
fdivrs
in
push
lret
dec
and
popf
sti
js
jb
es
push
or
popa
mov
mov
inc
push
cwtl
test
fxch
add
push
movb
xor
xchg
xor
sbb
and
lret
stos
icebp
xchg
insb
negb
push
out
and
popf
and
mov
sub
add
jb
arpl
jnp
mov
frstor
inc
sahf
jmp
pop
push
mov
add
popf
push
imul
lret
jl
sub
pusha
pop
lock
hlt
mov
mov
mov
data16
sub
adc
lcall
stos
lods
fbld
pusha
in
mov
mov
jg
fs
aaa
or
cmp
mov
adc
jg
imul
xchg
adc
mov
add
popf
in
js
mov
out
std
mov
pop
fiadds
push
out
sbb
inc
mov
cmpl
push
fimull
sbb
mov
sarl
pop
test
repz
fistps
pop
mov
lcall
fwait
jb
scas
cltd
dec
loope
loop
vpcmpgtd
ljmp
mov
cmp
out
jae
mov
rcr
push
adc
sub
ss
push
clc
adcb
or
out
mov
ret
pop
pop
data16
xor
ja
iret
adc
iret
adc
sbb
hlt
fs
jnp
jmp
sbb
mov
xchg
js
mov
push
xor
adc
insl
dec
sbb
in
inc
pushf
push
icebp
nop
jle
cs
les
lret
pop
sbb
je
hlt
inc
test
pop
movsb
ja
sub
mov
jecxz
xor
pop
adc
mov
scas
scas
fiaddl
mov
push
in
scas
xor
jp
ss
mov
scas
mov
mov
sub
mov
xor
push
test
icebp
lcall
xorb
sbb
jo
push
pop
sbb
stos
scas
sbb
xor
dec
mov
arpl
push
or
mov
inc
mov
popa
mov
jge
pop
fwait
xchg
in
bound
sub
sub
xor
pop
popw
sbb
enter
dec
dec
loope
loop
add
mov
test
sbb
mov
das
jbe
mov
out
outsl
lds
int3
es
xchg
aam
in
dec
aas
sbb
hlt
test
vmread
icebp
cltd
test
aam
push
fisubrl
scas
pop
faddl
cmp
fadd
sbb
cmp
jbe
scas
cmc
add
inc
cmp
nop
xchg
pop
adc
fcompl
sbb
fidivrl
ds
cld
test
lret
adc
and
inc
fbstp
and
mov
xor
movsb
push
or
mov
mov
jae
xor
add
adc
xchg
dec
mov
mov
lret
jno
lea
mov
mov
dec
mov
mov
test
into
mov
out
imulb
mov
outsl
xchg
jge
sub
imul
dec
mov
fwait
sub
icebp
mov
xor
or
clc
push
int
xor
scas
xorl
pop
or
xor
ret
mov
cmp
adc
jle
add
dec
cmp
sahf
frstor
lods
je
pop
jge
push
mov
push
pop
cmp
sti
loop
imul
incl
mov
movsl
ja
into
xchg
in
pop
pop
imul
dec
sti
mov
inc
jmp
mov
lret
mov
js
fs
sbb
add
cwtl
cli
mov
xchg
out
in
clc
mov
cmp
jmp
mov
les
cli
push
cld
inc
popf
out
lcall
jg
cmp
and
lret
sahf
cli
in
inc
loope
push
jecxz
cld
stos
adc
push
pop
fs
dec
bnd
sbb
mov
leave
insb
or
mov
subb
sbb
pop
insb
adc
or
jae
adc
cmp
sub
shll
das
push
mov
mov
xchg
movsb
cmpsl
stos
aas
sbb
push
pop
cmp
dec
mov
or
mov
faddl
sbb
jp
lea
mov
lret
lret
pushf
test
aaa
nop
lcall
jmp
add
sbb
adc
add
rcrb
sub
push
jnp
xchg
icebp
push
out
mov
insl
cmc
rorl
mov
push
mov
and
into
out
xchg
mov
pop
pop
out
stos
cmpsb
into
mov
mov
cmp
add
idivl
inc
out
cmp
cmc
movsl
jmp
mov
rcrl
iret
enter
mov
repnz
out
pop
sbb
jle
sbb
cmc
imul
movsl
aas
gs
out
ja
lods
mov
lds
xor
inc
xchg
les
inc
popa
incl
aad
mov
les
lret
mov
out
push
jbe
aas
jbe
push
pusha
lret
loopne
cld
and
cmp
bound
cwtl
adcb
daa
pop
mov
insb
xchg
test
push
sbb
dec
inc
mov
inc
icebp
sbb
clc
add
ss
or
mov
ret
aaa
xor
add
sbb
aad
jecxz
dec
or
aaa
leave
xchg
fldenv
in
outsb
je
mov
repnz
ja
into
pop
pusha
xchg
out
test
pusha
sub
mov
cpuid
mov
shl
and
int3
shll
adc
ret
add
nop
das
ja
jmp
inc
out
int3
xchg
add
ja
rcr
jmp
rcrl
shlb
rolb
jae
mov
adc
loopne
xchg
xchg
xlat
stc
push
popa
cmp
pop
pop
cmp
sub
mov
out
xor
movsb
ja
aad
lcall
or
fstps
push
mov
pop
mov
subb
fisubs
xor
dec
sti
and
testb
xor
repnz
imul
jnp
aam
lods
mov
sbb
into
xchg
sahf
inc
lcall
dec
inc
mov
or
cli
mov
xlat
xor
or
add
jecxz
stc
jne
add
push
mov
pop
pusha
mov
inc
mov
xchg
push
mov
pop
jl
out
iret
repnz
jno
push
or
inc
cmc
out
insb
sub
mov
out
fs
xchg
and
xchg
jg
push
imul
bound
stos
scas
shrd
pop
pop
sub
out
testl
and
or
in
jge
insb
pop
cmc
fildll
jno
mov
pop
lods
loopne
bsf
stos
mov
cmc
mov
popa
jp
or
lret
or
testl
cltd
cmpsb
xchg
jb
fildl
lock
push
dec
xor
daa
add
xchg
pop
rorl
jl
pusha
bound
rolb
lahf
leave
xor
sbb
xor
int
mov
jno
sti
data16
adc
sbb
xlat
and
das
mov
fdivl
lods
fildll
pop
add
mov
jecxz
pop
lds
mov
adc
cs
adc
cmpb
mov
hlt
imul
test
xchg
jb
ret
cli
test
mov
mov
xchg
xchg
cmp
lret
ret
pop
lea
insb
fdivs
dec
js
daa
or
sbb
push
fcmovu
pop
mov
call
dec
add
hlt
cmc
call
outsw
call
mov
dec
xchg
roll
outsl
or
mov
mov
pop
pushf
testl
mov
cmc
in
js
jmp
xchg
mov
shl
mov
mov
lods
rcrl
mov
sbb
mov
jmp
pushf
jae
cmp
rcrl
addr16
cmpsl
fimuls
add
add
out
xchg
mov
or
movsl
mov
pop
xchg
xchg
lcall
outsl
mov
add
iret
and
push
pop
repnz
out
movsl
jg
leave
stos
inc
insb
push
dec
in
stos
and
scas
cmpl
jae
addr16
xchg
inc
addr16
pushf
faddl
mov
jle
fdivrl
pop
pop
or
mov
xchg
lahf
jmp
in
add
stos
or
out
in
and
clc
fcoms
mov
dec
icebp
adc
mov
iret
js
pop
lock
jl
das
pop
je
mov
mov
mov
sbb
pop
jecxz
and
cltd
pop
mov
ss
iret
mov
mov
mov
js
push
or
std
into
xor
in
cmp
cmpsl
icebp
add
enter
push
ss
stos
add
mov
fcomps
cmpsl
jmp
pop
adc
dec
shrl
ret
sti
sbb
jle
sub
push
inc
pop
fwait
or
int3
shll
xchg
pop
xchg
sub
push
mov
scas
push
jo
lret
fnstsw
notb
mov
pop
sbb
push
mov
int3
lahf
push
lcall
push
push
adc
aad
aaa
ret
ljmp
fcomps
jle
shl
arpl
sub
int3
mov
popf
fiadds
jecxz
and
fcmovnu
imul
fs
mov
xor
js
xchg
mov
clc
in
ficompl
or
in
and
pop
jbe
cltd
subl
mov
and
mov
pop
pop
pusha
jbe
jne
pop
push
cltd
cmpsb
es
cmc
jno
leave
dec
cltd
mov
scas
insw
jmp
push
lcall
or
nop
arpl
repz
sarl
icebp
add
adc
push
int
mov
dec
cmp
push
sub
mov
in
jns
je
push
hlt
stos
mov
les
rcl
movsb
gs
mov
dec
test
gs
add
hlt
mov
mov
neg
shlb
inc
mov
movsl
sub
ja
add
mov
mov
sarb
fcompl
pop
and
test
jp
xor
sub
pop
imulb
mov
nop
insl
scas
lret
cld
mov
cmpsb
in
xchg
imul
jbe
dec
nop
xchg
sbb
mov
and
jle
inc
arpl
add
mov
lret
das
pusha
icebp
mov
aam
hlt
inc
dec
testl
jmp
fs
push
push
jmp
movsl
xor
dec
je
cli
jno,pn
dec
in
push
enter
mov
push
push
adc
push
push
add
les
orb
test
fcoms
rcll
mov
leave
cs
cltd
cs
scas
cli
jmp
aad
jns
into
es
repz
add
add
pop
gs
push
ljmp
push
pusha
inc
jmp
jg
lret
pop
pop
jne
xchg
mov
push
out
test
add
mov
mov
and
jp
mov
dec
or
les
mov
negl
gs
repz
and
mov
lea
pop
jecxz
dec
sbb
pop
in
mov
outsl
jp
mov
mov
fmul
pop
arpl
jb
sub
mov
cmpsl
xor
fs
in
pop
jl
daa
jb
aas
sub
popf
fbstp
xchg
ret
push
jmp
stc
dec
test
xchg
and
pop
sbb
pusha
call
pop
loope
popf
mov
mov
add
push
adc
pusha
cli
test
xor
jns
fisttps
push
mov
mov
loopne
cltd
fsubl
addr16
sti
inc
ret
enter
shll
loopne
aas
fwait
mov
cmp
notl
arpl
and
sbb
testl
sub
mov
fldenv
into
rorl
or
mov
lcall
pushf
lahf
nop
add
xor
scas
ret
sbb
sbb
lcall
xchg
inc
xchg
aam
repz
and
adc
test
inc
cmc
xor
mov
push
mov
push
xchg
push
cwtl
adc
dec
push
push
jne
jg
push
scas
out
fmul
sahf
jecxz
mov
pop
call
pop
dec
mov
or
pushf
inc
dec
mov
hlt
jae
dec
sub
mov
mov
sub
jmp
popf
sti
jbe
iret
fldl
lahf
gs
test
pop
sub
pop
mov
dec
test
test
xlat
test
mov
mov
adc
mov
pop
dec
roll
inc
cmpsb
rcrb
clc
js
mov
xor
push
sbb
pop
add
or
push
fsubrl
cmp
pop
rcr
sbb
mov
pop
jmp
loopne
jne
dec
pop
jae
daa
dec
sbb
mov
jmp
ds
pop
clc
test
or
add
push
pop
jge
push
pop
fdivrl
das
addb
inc
les
enter
push
mov
or
sbb
cmp
int
pop
xchg
pop
push
and
in
lahf
iret
cs
mov
movsb
and
arpl
fcmovbe
xchg
adc
xchg
mov
gs
lea
stos
int
neg
nop
adc
fisubrs
pushf
dec
pop
adc
sbb
inc
scas
push
sub
dec
mov
adc
dec
push
xlat
xor
pop
iret
out
adc
jno
std
xor
pop
fistl
cli
mov
mov
jns
pushf
mov
sub
mov
loope
arpl
pop
add
push
sti
fistl
jge
mov
enter
and
fs
push
dec
dec
mov
xchg
popf
leave
out
cs
adc
lahf
mov
mov
mov
adc
add
ret
pop
outsb
pop
xorl
push
push
loop
mov
and
mov
pop
xchg
jmp
stc
sub
aad
ds
cld
fildl
arpl
xor
inc
and
and
mov
ror
mov
jge
fwait
rcll
divl
dec
cmp
sahf
lock
cmpsb
xor
inc
ret
imul
shll
xchg
xor
cli
cmc
hlt
push
call
dec
xchg
dec
in
inc
call
divb
lods
xchg
inc
mov
pusha
jl
or
or
jb
in
out
push
sub
movl
jno
lret
adc
ljmp
add
cmpsl
sub
in
popa
cmpb
pop
mov
cmp
mov
outsb
stc
mov
mov
loop
jae
pop
push
in
hlt
inc
cmp
push
and
pop
pusha
ss
fsubrs
mov
xor
adc
arpl
test
xchg
add
out
leave
mov
mov
pop
outsl
jnp
pop
push
mov
popf
js
scas
rolb
xor
inc
into
and
inc
jmp
or
aam
ds
inc
xor
clc
xor
fwait
adc
sbb
add
insb
jbe
std
outsl
hlt
sbb
idivb
xchg
call
cmpl
fmul
adc
dec
lcall
ds
jno
xor
arpl
in
inc
dec
cli
aas
pop
pop
adc
imul
push
das
aaa
xor
or
pop
into
in
xor
test
push
jecxz
int3
lret
cmp
sbb
inc
cmp
leave
aaa
test
cltd
cmp
add
adc
popa
lds
lods
xor
xor
push
sbb
inc
sbb
test
mov
dec
pop
sub
adc
add
psubsb
jp
sub
and
pop
jge
inc
out
mov
mov
insb
cmp
in
mov
sub
test
adc
xor
test
cltd
xlat
lret
pop
jbe
or
es
dec
cld
movsl
or
and
inc
or
js
mov
dec
jle
ds
mov
pop
xchg
inc
lods
add
mov
pop
mov
aaa
outsl
pop
into
mov
adc
pusha
jnp
adc
lock
inc
mov
mov
sarb
xor
lret
inc
lret
pop
xlat
cs
icebp
and
adc
inc
push
addr16
lahf
cmp
xor
imul
int3
sub
aaa
insl
or
xchg
xchg
int
add
ficoms
dec
cmp
mov
psllq
adc
inc
and
mov
enter
test
lret
daa
or
jae
mov
mov
adc
and
rolb
mov
mov
xchg
mov
cld
dec
jae
adc
sub
jnp
jbe
fadd
and
rorl
mov
mov
mov
pop
sbb
mov
enter
mulb
insl
xchg
fbstp
or
lods
sub
or
jae
mov
sbb
into
repnz
xor
shlb
leave
ret
fldt
adc
push
test
dec
clc
fmull
inc
jo
xor
adc
inc
pop
repz
jmp
sub
mov
push
lods
mov
ds
jbe
into
jmp
in
aaa
ret
jno
test
jg
inc
addr16
nop
jge
filds
hlt
lods
jns
and
inc
int3
pushl
jae
dec
push
imul
jne
popl
xchg
into
push
int
xor
imul
jecxz
mov
mov
jle
jl
cmpsl
xchg
sub
cltd
out
mov
push
xchg
ficoml
push
lret
adc
mov
pop
pop
cmp
lret
mov
lahf
inc
mov
in
aas
pop
pop
add
push
loopne
or
inc
lds
js
fadds
ja
add
movsl
inc
test
mov
mov
test
sti
hlt
fucomp
pop
repz
jb
mov
xchg
movsb
cmp
fdivl
inc
hlt
jp
adc
push
xor
data16
cmpb
pop
ret
mov
jno
fsubp
push
fcmovu
cmp
xchg
sbb
out
sub
jae
xchg
mov
or
cmp
lods
cwtl
loopne
iret
repz
jbe
push
fmull
push
notb
mov
jmp
loopne
adc
jmp
mov
pushf
fstpl
repz
or
sbb
add
mov
cwtl
lock
xor
aam
in
aaa
scas
xor
add
test
in
out
cmp
lret
fnstcw
xor
mov
push
mulb
sahf
cmp
lahf
pop
xchg
sbb
and
dec
jb
shrb
leave
lahf
fstps
xor
test
nop
jb
dec
icebp
int
int
lods
addr16
fisubrl
sbb
mov
iret
and
das
and
stc
cmc
jnp
insl
stos
mov
add
xor
add
pusha
lock
sbb
cmp
xchg
inc
dec
inc
adc
xor
xor
pusha
mov
sahf
pop
push
enter
mov
and
call
push
in
mov
or
rcl
pop
daa
sti
mov
and
ret
jnp
add
xchg
lret
mov
jno
mov
jb
inc
lea
shrl
push
cmp
sbb
scas
cmp
or
dec
add
pop
repnz
mov
flds
fisttps
shll
addr16
and
mov
jge
inc
mov
shlb
xchg
lea
lcall
out
mov
es
cmp
push
ljmp
fnstenv
rcrb
sub
xchg
scas
rep
inc
nop
mov
adcb
and
add
shrb
arpl
jmp
jb
push
in
pushf
add
xlat
or
jmp
jge
jo
gs
testl
xchg
mov
and
adc
lcall
jl
dec
mov
test
or
shlb
gs
jecxz
rolb
push
lret
lods
scas
sbb
loope
add
sbb
mov
add
pop
mull
adc
fldenv
mov
mov
mov
inc
test
mov
cmpb
jmp
cmp
push
sbb
pop
shll
pop
roll
or
call
arpl
push
iret
add
out
jae
jecxz
adc
xor
xchg
shr
mov
int
stos
dec
aam
xor
and
imul
setbe
xor
fcoml
pop
imul
lock
adc
ss
push
in
mov
mov
push
scas
mov
rclb
repnz
in
sub
enter
pop
add
shll
sbb
adc
fcoms
loopne
xor
cli
es
jo
adc
es
mov
pushf
push
sahf
jl
outsl
and
in
cmp
pop
push
fs
fdivp
add
jne
insl
lods
xor
shlb
lea
orl
notl
inc
loope
sub
mov
cli
push
lcall
aad
repnz
int3
xchg
aaa
les
xchg
cwtl
dec
jb
xchg
mov
aad
into
std
lcall
jg
stos
orb
enter
inc
lahf
lods
ror
das
pop
mov
xchg
test
or
hlt
xor
lcall
mov
mov
adc
add
jp
ss
inc
rcrb
lea
mov
push
push
jmp
out
ss
mov
iret
cmpl
aaa
int3
sahf
adc
inc
or
mov
clc
pop
inc
sub
loopne
movsl
mov
je
xchg
arpl
fmuls
mov
stc
js
enter
ja
sub
cmpsl
mov
jle
push
mov
dec
fstpl
sub
jmp
cmp
and
pop
cmpsl
mov
clc
iret
out
mov
cwtl
xor
rcrb
push
lods
mov
sub
out
sbb
jno
xor
jo
push
and
mov
or
inc
push
out
and
pop
pop
psubsb
inc
hlt
cld
add
fcoms
std
and
mov
sub
push
sbbb
push
inc
popa
sub
jge
pop
mov
insb
leave
jb
sbb
and
pop
fwait
inc
out
jnp
fst
loope
loopne
xor
fidivs
ss
jno
in
lret
icebp
cltd
nop
mov
rolb
into
lods
adc
and
pop
cmp
xor
pop
out
and
dec
add
or
push
jle
jmp
hlt
and
stos
add
jg
add
add
push
mov
lret
fimuls
push
inc
movsl
jnp
mov
leave
xor
mov
les
in
mov
dec
into
sub
cmp
cltd
popa
rcrb
inc
xchg
and
insl
ret
sbb
movsb
pop
popa
dec
ss
push
das
ljmp
mov
pop
push
aaa
mov
mov
jns
mov
and
mov
xchg
mov
xor
xor
sbb
imul
fisubrs
fldenv
imul
lock
xlat
xor
xchg
gs
push
jne
cltd
mov
movsb
pop
sbb
xor
xorb
fsubrs
jmp
sub
leave
push
rol
mov
xchg
dec
xchg
aam
pop
sub
mov
and
inc
repnz
fidivl
inc
dec
sbb
lret
fwait
out
popa
sbb
add
add
mov
iret
outsb
jns
or
das
push
hlt
je
stos
adc
loopne
cmp
sahf
lahf
push
mov
inc
scas
sbb
std
adc
sbb
or
outsl
jmp
fsubr
mov
dec
ss
stc
mov
cld
pop
sub
and
fs
add
in
mov
loopne
jp
sbb
pop
jae
stos
sub
aam
ret
inc
nop
or
pop
sub
and
gs
inc
loope
jb
loop
or
and
add
pop
push
movsl
in
lret
call
lods
cmpsb
jno
xchg
and
test
aas
mov
fld
and
movsl
mov
mov
push
ljmp
cltd
inc
lods
pop
popf
mov
shll
and
xor
jno
out
sbb
jl
mov
push
inc
push
xchg
jle
cmp
ret
or
fisttpll
nop
lcall
jl
dec
jmp
dec
nop
inc
sub
mov
sbb
fcmovu
jle
insl
jo
xor
cmp
insb
jns
mov
xchg
or
sbbb
push
sub
jecxz
pop
push
enter
lret
je
cmc
and
push
mov
loope
sahf
xchg
push
mov
std
ror
lods
pop
fcmovnbe
xchg
add
lret
pop
pop
mov
into
mov
aaa
push
adc
roll
cmpsl
hlt
andb
pusha
sbb
bound
out
pop
inc
mov
jecxz
adc
cmp
mov
xchg
mov
mov
aam
mov
push
push
ret
pop
repnz
daa
sti
or
cld
xlat
lret
add
pop
adcb
out
rclb
movsb
bound
mov
imul
cli
cmpsl
es
addb
out
inc
cmp
pop
mov
imul
nop
loope
inc
adc
push
insl
mov
or
mov
sti
fdivrl
xchg
pop
cli
mov
pop
sub
iret
idivl
test
test
rorl
sahf
jnp
mov
sub
ja
adc
fistpl
jl
mov
and
jg
test
add
movsb
pop
idivl
push
cmc
pop
sub
mov
mov
add
adc
mov
in
call
jl
test
jl
lds
sbb
mov
iret
xor
fcompl
ret
dec
arpl
or
and
mov
mov
mov
mov
sahf
sbb
leave
in
cmp
out
xor
out
jne
lcall
mov
popa
out
cmp
pop
jp
leave
scas
ret
fistps
bound
lods
dec
idivl
xchg
stos
jl
dec
xchg
mov
push
ds
pop
leave
mov
dec
mov
notb
jne
inc
xchg
sti
adc
add
add
xchg
add
call
jge
inc
ds
jmp
test
ss
jge
xchg
jg
addl
lahf
adc
ds
cmp
inc
adc
rcrl
ret
inc
stos
mov
push
fistl
and
mov
sbb
sti
ret
cltd
push
fs
int3
dec
and
fmuls
dec
xchg
aad
add
push
adc
test
jge
or
and
aad
cmpsb
fidivl
sub
lret
int
test
mov
cmp
int3
aad
lods
inc
outsb
pop
iret
pop
stos
out
outsb
dec
inc
das
adc
testl
xor
inc
dec
iret
outsb
int
lcall
pusha
push
sahf
xchg
jmp
stos
jl
mov
ror
lcall
and
push
inc
mov
lea
jae
jle
add
pop
sti
lret
outsl
pop
xor
xchg
add
add
jnp
test
mov
jg
ficoms
mov
clc
outsl
fsubs
sbb
push
xor
lcall
in
data16
int
cmp
arpl
adc
mov
sbb
dec
and
addb
or
outsb
sbb
mov
fdivrl
jp
call
lds
adc
in
fisttpl
outsb
jmp
push
sub
out
add
jmp
mov
sahf
mov
subl
iret
stc
mov
ss
pop
aam
jl
ja
lods
fsubp
xor
mov
js
fiadds
cmp
aam
inc
push
pushf
outsl
pop
jmp
mov
cmp
mov
adc
or
test
in
jo
out
ds
adc
mov
xchg
mov
outsb
std
push
pop
sub
jmp
mov
pop
pushf
je
ret
sbb
add
popa
and
fs
mov
bound
xlat
bnd
out
mov
outsb
mov
je
cmp
loopne
sbbl
pop
jb
xchg
or
inc
xor
xchg
cmpsb
lock
insb
mov
or
dec
dec
sbb
test
inc
out
and
inc
xor
sub
or
add
xor
xor
popa
aas
and
mov
xor
loop
les
or
cmc
sub
or
mov
mov
rcrb
mov
cmpsl
movsl
lcall
mov
cmc
xor
pop
cmp
push
jns
outsb
jp
jmp
hlt
lods
pop
lods
push
add
aaa
ficompl
push
xor
jo
daa
dec
test
not
or
cmc
iret
mov
lret
jmp
lahf
int3
mov
iret
push
fsubp
push
mov
jno
or
adc
adc
or
int
ja
jo
ljmp
jbe
fdivr
fdivl
cmp
lret
jp
mov
mov
jmp
idivb
call
push
test
or
fsubrs
mull
dec
ret
jno
jno
xchg
mov
xor
imul
std
ret
xor
insl
dec
xchg
adc
mov
push
xor
push
jge
pop
rorb
lods
arpl
push
sub
jl
or
xor
call
iret
daa
push
test
movsl
scas
fadds
jecxz
dec
jle
mov
and
pop
aas
test
cmpsb
repnz
and
out
test
adc
aad
adc
nop
cmc
pop
rcrb
mov
in
jl
or
ficoml
push
adc
aas
xchg
inc
push
xor
add
lret
sarl
repz
and
push
mov
mov
xchg
and
enter
or
push
mov
push
lds
push
les
fwait
cmpb
push
mov
xchg
fnstsw
push
bnd
fmuls
xorl
inc
push
cmpsb
fsubr
enter
cld
cld
out
dec
push
lret
ja
lcall
add
inc
loope
dec
sub
inc
and
in
cmp
mov
mov
pushf
add
gs
push
insb
xchg
daa
aad
pop
and
ficoml
and
and
jne
fnsave
sbb
test
or
jmp
mov
pop
and
shll
stos
or
xchg
add
xchg
aam
pop
xor
pusha
loope
dec
stos
add
mov
loopne,pn
cmp
arpl
insb
pop
shl
pop
adc
push
xor
or
mov
int
ds
imul
pop
add
add
mov
movl
mov
not
xor
out
mov
sub
fidivrl
jo
sbb
sbb
movsb
adc
add
gs
and
shrl
call
push
sahf
nop
jge
mov
inc
loope
pop
lock
leave
lods
outsl
mov
mov
icebp
es
push
and
popa
into
jle
inc
outsb
xchg
mov
cmp
or
into
je
dec
test
push
xor
fldl
ljmp
popf
fadd
outsl
mov
imul
add
sbb
enter
enter
xorb
inc
mov
xor
fidivrs
pop
or
add
jl
xchg
gs
loope
loop
push
push
stos
jo
mov
xor
dec
mov
xchg
push
inc
movsl
dec
xorl
jg
jo
cld
add
cmpsb
addr16
adc
add
in
ret
ljmp
outsb
fs
test
int3
ret
ss
shr
popf
fwait
mov
xchg
icebp
loop
sub
lea
sbb
xor
add
cmp
js
inc
push
jnp
sbb
sbb
push
imul
je
add
mov
mov
test
jbe
popa
test
lret
pop
cwtl
sbb
mov
lahf
outsb
cmp
iret
dec
jge
cmp
jns
push
outsl
cmpsl
sub
mov
xchg
push
sbb
cs
dec
dec
scas
incb
imul
shr
jecxz
out
adc
add
stos
insb
cmp
and
insl
cmp
rcl
das
jecxz
sbb
les
jns
or
jae
insl
movsl
add
adc
sub
pushf
jg
xchg
rcrb
ret
shlb
int3
and
daa
sub
inc
lea
add
push
fidivl
cmpsl
scas
stc
dec
movsb
popa
fwait
orb
scas
jmp
jmp
mov
jmp
cmpsl
adc
imul
js
cmp
fidivl
or
fisubs
out
and
outsl
mov
das
or
cmpsl
push
jae
loop
sbb
pop
dec
xchg
dec
xchg
push
daa
xchg
mov
es
lahf
fimull
in
inc
into
xlat
subb
xchg
int3
bound
stc
inc
stos
int
mov
mov
and
repz
inc
dec
jo
add
fs
frstor
sbb
ret
imul
or
lds
sbb
dec
sahf
and
popa
dec
inc
jns
sbb
fsts
out
data16
shlb
sti
dec
cmp
xlat
hlt
lds
jmp
xor
aas
push
mov
test
adc
dec
jb
add
lahf
scas
shrl
jecxz
stc
or
xchg
sti
push
lcall
pop
sub
add
mov
mov
repz
push
xor
add
pop
inc
cli
cltd
lock
jo
cmp
xchg
ds
jge
sub
sbb
xchg
cmp
scas
shll
mov
lret
cmpsl
outsb
test
data16
lods
xlat
enter
fxch
add
push
sub
arpl
stos
cmp
ficomps
lods
push
mov
sahf
xchg
popf
inc
cltd
arpl
daa
dec
sarl
test
cmp
popa
and
mov
mov
push
fsubl
push
jge
sub
sbb
pushf
xor
xlat
lock
sbb
imul
sub
stos
ret
je
data16
adc
xor
bound
push
shlb
jnp
mov
lahf
lods
jge
inc
sbb
xor
or
pop
or
jne
jae
mov
sub
push
and
loope
xor
arpl
int3
jle
pop
decb
sbb
nop
xchg
mov
inc
rcll
inc
adc
aas
jne
pop
cmp
cmp
decl
jne
insl
push
or
sbb
lea
pushf
jno
ljmp
movsl
fdivs
mov
mov
popf
out
stos
aam
test
cmpsl
jmp
cmp
mov
push
fidivs
xchg
clc
jae
inc
in
sub
js
jmp
jbe
ljmp
push
xchg
push
mov
lds
int3
in
div
fistpl
sub
rcrl
pop
out
mov
mov
jg
mov
push
pop
insl
and
pusha
pop
or
pop
push
sub
inc
xchg
shl
mov
aad
jl
cli
repz
out
cmp
push
out
mov
mov
xchg
mov
or
and
test
or
xor
or
mov
pusha
mov
jo
mov
xor
xor
aas
out
sar
das
idivl
xchg
cmpsb
in
xchg
ljmp
nop
sbb
cmp
xchg
inc
push
add
mov
lods
cltd
scas
in
add
mov
dec
and
movsl
cmp
cmp
mov
movsl
jne
leave
and
inc
and
mov
ror
jae
fimuls
negb
adc
in
sub
push
enter
push
addr16
mov
dec
xor
arpl
xchg
repz
mov
inc
pop
fidivrl
lea
sbb
dec
addb
adc
movsb
or
adc
bound
insb
cmpsb
test
js
cmp
xchg
ja
mov
pop
ja
js
xchg
clc
aas
fsub
inc
out
xchg
dec
jg
ret
cli
pop
aaa
inc
pusha
in
mov
std
sub
loop
mov
lea
cmp
xchg
fs
out
mov
mov
dec
enter
xchg
xor
xor
or
outsl
pop
mov
and
push
jl
stos
popa
clc
sub
inc
push
js
dec
pop
shll
mov
pushf
mov
popa
and
loope
push
xchg
mov
xor
mov
or
test
push
test
cli
mov
or
movsl
rorl
or
or
or
out
xchg
mov
nop
xor
push
inc
mov
cltd
mov
rcll
mov
add
imul
addb
xchg
nop
testl
sbb
into
int3
aad
fldl
das
pop
mov
jo
loope
pop
repz
adc
pop
jne
adc
and
cltd
hlt
xchg
pop
aam
push
dec
daa
mov
cmp
sub
mov
dec
rorl
sbb
add
loope
shl
mov
push
scas
jnp
xor
not
and
xor
pop
mov
rclb
dec
pop
sti
dec
insb
ds
ret
fwait
sub
lea
dec
int3
ret
xlat
mov
cmc
fimull
testl
cltd
xor
in
hlt
ret
test
jp
icebp
aam
inc
aaa
xor
mov
cltd
cmpsb
or
fwait
cmc
or
pop
sbb
cltd
pop
es
inc
cltd
sbb
lcall
test
inc
popf
or
lret
cmp
pop
ds
inc
lds
loopne
sbb
xchg
subb
adc
jb
scas
mov
jmp
dec
fmull
cli
pop
pop
cltd
inc
cmpsb
iret
cmp
out
mov
fisubrl
inc
xchg
mov
rorl
jp
adc
mov
les
jmp
mov
sbb
mov
shlb
push
test
movb
and
clc
jmp
dec
mov
iret
nop
dec
mov
daa
sub
lods
xor
mov
lret
jmp
enter
fs
mov
pop
mov
popf
daa
out
push
dec
sahf
mov
test
ret
out
repz
sub
xchg
pop
mov
mov
push
mov
test
aas
ret
stos
imul
xchg
lock
pop
loopne
pop
adc
hlt
jp
and
mov
out
push
lods
movsb
pop
rcrl
cltd
adc
sub
or
stos
mov
ja
fst
jno
test
insb
fisttpl
imul
iret
mov
mov
mov
repz
and
mov
xor
scas
sahf
sbbl
ror
or
in
popf
jae
mov
movsl
pop
int3
mov
dec
arpl
aas
iret
fisubrl
push
cmp
outsl
xor
outsb
mov
fnstsw
jb
idivl
mov
or
aad
leave
cmp
dec
repz
add
clc
insl
out
xor
xchg
push
ret
jne
loope
lods
xchg
adc
pop
aam
sbb
mov
pushf
push
jmp
jmp
push
mov
mov
shll
insb
mov
fildll
push
addr16
stos
daa
aas
sub
mov
jl
sbb
or
pop
nop
fldt
and
dec
pop
adc
sub
repnz
pop
jl
daa
cs
xor
mov
mov
xlat
push
sbb
dec
push
mov
push
out
add
sub
mov
and
stos
dec
sbb
ficoml
out
xchg
mov
das
inc
add
cmc
nop
mov
sbb
dec
mov
cmp
adcl
dec
jns
xor
gs
outsb
adc
daa
mov
addr16
stos
inc
jne
test
test
icebp
sub
jno
les
leave
loopne
aaa
mov
shl
es
js
movsl
rol
fsubrs
sub
scas
sti
and
jl
and
xor
jle
or
mov
outsb
or
mov
push
jbe
jmp
xchg
fwait
mov
stos
aad
lea
xor
jno
jns
imulb
fcoms
popa
dec
fs
ss
jae
dec
bound
hlt
mov
loopne
arpl
pop
sbb
mov
xchg
sbb
or
shlb
loop
xorb
shr
push
in
mov
leave
mov
push
xor
shlb
adc
and
dec
mov
sbb
adc
lea
movsl
cltd
fistps
lcall
inc
fidivs
lcall
dec
lret
pop
jno
adc
aad
repnz
fdivl
cmp
push
lds
sbb
cld
push
outsb
push
enter
mov
ja
sbb
inc
push
jo
add
pop
cmpl
add
dec
adc
lcall
dec
lahf
out
dec
fbstp
add
and
push
movsl
mov
subb
mov
sbb
sub
cmp
and
push
push
xlat
lahf
cwtl
jnp
pop
scas
xlat
inc
inc
imul
mov
adc
cwtl
pop
inc
adc
pusha
lds
cli
mov
lods
imul
sbb
mov
inc
inc
mov
pop
jle
xor
mov
enter
sbb
sub
pop
mov
xchg
add
cmp
xorb
outsl
fstpl
cmp
je
pop
push
hlt
in
inc
mov
mov
fisubrl
loopne
add
fnstenv
gs
xor
xor
adc
mov
sbb
lret
sbbb
xchg
push
fwait
pushf
sbbl
rolb
sbb
jg
in
and
dec
sub
fwait
mov
cmp
cs
hlt
dec
imul
testl
lret
arpl
xchg
fs
mov
mov
cwtl
mov
mov
cltd
dec
xor
xchg
sub
mov
xchg
cltd
push
orps
and
jo
xchg
pushw
lahf
sbb
push
add
pop
jnp
mov
pop
loope
rol
aad
xlat
imul
inc
xchg
mov
cmp
sbb
mov
imulb
sahf
and
and
mov
leave
adc
movsl
xor
mov
daa
and
dec
sub
jae
inc
cwtl
movsl
das
imul
push
cmp
imul
push
cmp
push
pushf
stos
sbb
sbb
pop
push
fiaddl
pop
popa
out
outsb
enter
es
imull
dec
andb
ja
loopne
sub
popf
dec
lret
les
neg
iret
movsb
int3
adc
pop
add
add
out
or
inc
lcall
fsubs
popf
mov
or
inc
loop
out
pushf
pop
xchg
xlat
data16
sub
pop
mov
mov
adc
cmp
mov
shl
dec
test
sbb
fiadds
push
mov
aam
xor
subl
lret
faddp
add
sub
jb
adc
push
xor
xor
inc
out
int3
cmp
dec
inc
ficompl
out
les
jp
sub
xor
test
test
fcoml
xlat
adc
fiaddl
inc
sub
push
sbb
repz
adc
loopne
out
adc
or
sahf
mov
inc
inc
push
loope
jg
push
add
lret
mov
xor
insb
fdivrs
xchg
mov
mov
repnz
jns
and
jnp
xchg
iret
jg
mov
notb
mov
popa
add
xchg
js
int3
neg
repnz
sbb
cmp
mov
and
mov
lcall
daa
xchg
test
in
sub
ret
fnstsw
xor
dec
cmp
mov
out
mov
pop
ja
or
push
lcall
xchg
repz
lahf
ffree
mov
icebp
adc
outsb
adc
hlt
leave
jp
mov
ret
and
inc
test
mov
jb
insb
dec
roll
pop
aam
mov
cltd
adc
xor
cltd
xor
mov
aaa
xchg
and
inc
lds
mov
and
pop
sti
cmc
fmull
push
cmpsl
xchg
adc
jb
scas
pop
call
jmp
pop
loop
test
shl
jno
loop
gs
lds
lahf
stc
aad
dec
mov
jg
mov
mov
imul
test
xlat
mov
enter
aam
push
popf
xchg
insl
xchg
ret
pop
sub
jge
insb
ljmp
fxtract
outsb
adc
ret
jmp
xor
cmp
data16
xor
inc
mov
xchg
fstpl
or
ds
push
into
stos
push
add
test
sbb
lods
ljmp
dec
sub
mov
or
push
jle
xchg
jmp
mov
pop
cmc
sbb
xchg
push
ja
pusha
mov
mov
lods
cmpsb
xor
push
out
fcmovnbe
or
dec
jmp
cmp
mov
cltd
pusha
lret
add
pop
xchg
fsubs
nop
jge
fcmovnu
mov
add
xor
les
testl
sub
lock
addb
fistpll
xlat
pop
inc
je
jecxz
or
inc
pop
mov
inc
push
pop
or
fwait
cld
inc
sbb
outsb
fcomi
fildll
dec
aas
cmc
push
nop
xchg
jnp
jb
xchg
inc
push
push
dec
add
ss
add
pop
out
popa
frstor
dec
add
in
add
jae
sbb
leave
jnp
add
mov
xchg
push
dec
and
and
xchg
xchg
inc
mov
fnstcw
test
xchg
out
mov
mov
xor
inc
mov
mov
andl
repz
imul
pushf
jp
popl
in
pop
sub
popf
insb
jo
mov
mov
xor
sbb
lret
data16
ret
pop
mov
out
mov
sbb
data16
popa
adc
loope
lods
mov
add
pop
ljmp
mov
pop
and
xor
sub
mov
fcomp
mov
dec
jg
jl
jno
mov
adc
inc
pushf
mov
out
pop
sub
ret
call
jnp
push
int3
clc
rcrb
nop
repnz
clc
jo
sub
sarb
push
mov
mov
adc
popf
aam
lcall
add
lods
jp
add
cmc
sahf
repnz
xchg
adc
enter
fidivl
sub
sub
lahf
or
push
add
stc
adc
push
arpl
repz
out
fildl
data16
mov
mov
add
push
adc
sti
push
pop
fsubrl
daa
loope
jbe
ret
pushf
fmuls
repnz
lea
and
xchg
int3
push
inc
cmp
rclb
and
jmp
jo
mov
sarl
adc
adc
movsl
addb
fwait
ds
adc
insl
negl
gs
dec
roll
add
and
jo
lcall
orl
js
lods
enter
or
cmp
rcr
pop
and
sbb
ficomps
push
pushf
or
dec
and
test
lods
mov
dec
stos
in
push
aaa
pop
dec
pusha
push
and
stos
jno
sub
fsubr
iret
subb
jp
outsl
jb
inc
negl
int
xchg
mov
sub
xchg
lods
mov
loope
mov
cmpsb
imul
cmp
test
gs
cs
into
das
cmp
out
mov
dec
pop
mov
xchg
mov
loopne
xchg
push
js
iret
adc
clc
out
ljmp
xor
dec
out
adc
sbb
xchg
js
das
inc
dec
out
pop
pop
cli
stos
shll
call
fnstenv
mov
mov
jl
jno
hlt
movsb
mov
lods
and
and
ja
les
ffreep
gs
mov
mov
dec
ret
inc
in
mov
inc
xor
loopne
adc
repz
dec
xorb
push
or
aaa
popa
popf
pusha
adc
xchg
push
lock
pop
rcll
sbb
cltd
mov
or
aad
dec
and
dec
gs
mov
xchg
daa
push
loope
lods
insb
inc
jo
jp
push
loopne
outsb
push
inc
mov
sub
mov
cmp
cmp
mov
pop
sbb
jno
mov
negl
cwtl
mov
mov
jb
inc
std
lock
sub
shll
cmp
hlt
and
cwtl
lret
sti
adc
xchg
xor
jle
lods
mov
inc
inc
and
jno
fldenv
inc
mov
icebp
mov
pop
sub
push
inc
xor
mov
inc
or
lret
push
lret
shrb
ret
jmp
mov
insb
mov
jnp
adc
jb
aaa
fsubp
and
lret
fsubs
mov
xchg
jg
push
mov
in
jnp
lcall
movsb
pop
jmp
enter
es
outsl
inc
pop
adcb
mov
push
shl
cmp
jns
repz
mov
cwtl
out
ja
psllw
jnp
les
les
outsl
fidivs
pop
push
pop
out
roll
sub
pop
in
dec
retw
push
inc
sahf
ljmp
lea
out
jns
push
pop
push
test
xor
lods
add
sub
sti
leave
cmp
push
xor
lea
adc
fmul
inc
subl
xchg
sub
add
xchg
pop
mov
test
cmp
outsl
test
popf
cltd
sbb
fldt
sub
es
sub
xchg
xlat
xchg
push
dec
mov
aad
mov
js
cmp
mov
mov
and
cltd
cmp
test
cwtl
mov
cltd
push
jae
xchg
nop
std
in
push
test
add
mov
mov
dec
insb
dec
insb
jbe
insb
jmp
push
mov
rclb
xchg
outsb
xchg
repz
int
loop
xchg
pop
cmp
jb
mov
and
lods
addr16
adc
lcall
pushf
out
cltd
mov
push
lods
out
jno
mov
test
test
add
insb
gs
jns
xor
dec
ljmp
mov
add
push
jl
adc
scas
inc
std
mov
adc
mov
loope
push
test
xchg
cmpsb
mov
movsl
push
mov
push
cli
sbb
or
fninit
dec
lods
inc
xchg
test
sub
jno
out
pusha
sbb
rcll
pop
and
das
std
xchg
out
xchg
mov
mov
push
jbe
cmp
jns
cmc
mov
test
xchg
sbb
sbb
sbb
xchg
std
aas
pop
sbb
lock
and
pop
imul
popf
je
pop
sub
shl
into
mov
xchg
mov
jb
scas
les
inc
lret
aas
int
push
aam
jecxz
xor
jne
cmp
lods
sahf
push
ss
inc
popa
adc
lock
stc
xchg
lods
push
out
or
fldcw
lods
add
sahf
pop
je
pop
fbstp
nop
shll
pop
pop
cld
lock
in
pop
flds
aaa
sub
xlat
add
sahf
in
xor
subl
sbb
inc
cld
mov
shlb
fdivrp
out
jle
addr16
addr16
maxps
mov
stc
or
int3
rolb
mov
mov
ljmp
xchg
lock
adc
cmc
in
cmp
or
into
pop
add
sahf
mov
int3
push
push
lods
mov
rcll
xchg
and
fwait
or
push
std
xor
push
push
mov
cmp
mov
out
imul
cmc
roll
rorb
movsl
aas
xchg
sbb
mov
pop
test
mov
sub
sub
fwait
dec
jnp
jb
mov
or
xchg
pop
gs
loop
add
mov
sbb
and
test
add
ret
sbb
jnp
inc
push
fs
loop
sbb
jecxz
pop
scas
xor
inc
ficoml
add
pusha
test
popf
and
ret
dec
or
adc
addr16
fstl
enter
xor
xlat
aas
mov
push
lds
and
into
or
mov
xor
sbbl
adc
mov
repnz
dec
out
lcall
pop
adc
dec
xchg
mov
mov
repz
cmp
add
add
add
lahf
xor
cmp
push
cmc
push
mov
ret
push
stc
inc
cmp
sti
sub
jmp
out
stos
mov
rol
popf
arpl
loopne
mov
aaa
sahf
mov
jne
orl
aam
inc
fnstsw
dec
dec
jmp
loopne
jb
pop
das
insl
insb
sahf
not
rorb
call
xchg
in
pop
jo
js
mov
add
and
push
pushf
or
jecxz
cmc
mov
outsb
cmp
shll
and
lret
cmp
imul
out
cmc
inc
mov
add
aas
pop
or
ja
sahf
jns
pop
pop
std
fmull
out
push
sub
fstpt
rolb
pop
xchg
adc
mov
push
fmuls
pusha
jb
cs
outsb
imul
push
dec
or
lcall
cmp
pop
sbb
adc
test
pop
mov
dec
in
cld
insl
mov
mov
mov
push
bound
mov
xchg
cmp
cwtl
nop
add
daa
mov
push
push
jns
adc
aad
arpl
pop
stos
ret
jne
cmp
popf
not
cmp
pop
xchg
dec
and
or
pushl
negl
adc
gs
cmp
cmp
mov
inc
not
push
mov
push
xor
ret
and
and
leave
mov
sub
addl
push
pop
mov
call
mov
lods
cmp
leave
lcall
cmp
and
sahf
aam
shlb
sub
mov
fildl
sti
daa
int3
fcomps
pop
sub
jnp
and
daa
hlt
mov
fiadds
jle
pusha
push
out
adc
hlt
mov
sarl
loopne
push
pop
frstor
jge
push
hlt
jmp
cltd
jecxz
fbstp
add
lahf
and
pop
mov
mov
jle
mov
test
cli
jecxz
ja
dec
xor
movsb
and
ja,pn
xor
pop
int3
jp
cwtl
dec
cmp
shlb
cmp
pop
jle
je
pop
cmp
xor
xchg
test
push
jnp
inc
and
inc
sahf
inc
shlb
out
cmpsb
ds
pop
movsb
inc
sarb
rorb
cmp
iret
mov
in
sub
adc
dec
dec
pusha
test
mov
call
mov
out
push
inc
jns
imul
jns
and
add
clc
fcoms
inc
imul
sub
in
cld
push
ss
sub
adc
push
jp
shll
ror
aad
loop
push
xor
mov
mov
nop
cltd
sbb
sbb
xor
inc
cli
dec
inc
lds
jecxz
and
mov
cmpsb
aas
out
push
lods
mov
fidivrl
sbb
mov
jnp
imul
lea
xchg
stos
and
sub
int3
mov
js
mov
mov
imul
xor
fisttps
cltd
lock
lret
push
pop
pop
loopne
jns
xor
dec
fcoms
test
aad
cmp
out
sbb
sbb
movsb
and
push
lods
and
std
movb
mov
jg
dec
sub
ja
or
pusha
sti
out
xchg
int
cmpsl
test
push
rcll
sub
mov
jo
sahf
mov
pushf
ror
insb
fists
xor
sbb
pop
js
sub
js
nop
cwtl
dec
cmp
divb
enter
imul
push
add
mov
test
in
mov
lret
loopne
jp
out
dec
loop
mov
inc
imul
jle
aam
jnp
adc
in
adc
inc
mov
cmp
test
aad
lahf
mov
stos
and
inc
and
and
lds
lock
sub
iret
ss
mov
out
or
push
add
mov
popf
idivb
cmp
popf
arpl
mov
cmpsl
mov
xlat
jp
movsb
and
lds
filds
pop
adc
sub
inc
xchg
int3
sub
jg
jge
jbe
pop
or
mov
cltd
push
jnp
cmpsl
iret
push
stos
push
mov
add
inc
adc
mov
pushf
mov
mov
fwait
sbb
or
dec
cltd
push
popa
sbb
pop
cmpsb
inc
incl
mov
mov
negl
aas
jmp
pop
ds
ds
loop
daa
mov
popa
mov
inc
lock
inc
fcoml
test
jp
cmp
sub
jnp
push
mov
call
dec
sarl
fcoml
xchg
or
or
sub
jl
sbb
pop
pop
push
fisubrs
cs
dec
mov
lahf
out
xchg
push
mov
jnp
cmp
xchg
mov
mov
mov
inc
test
pop
mov
test
scas
in
pop
and
pcmpeqw
orb
shll
bound
mov
dec
insl
sub
pop
ljmp
cmpsl
lds
lahf
sub
jo
ffreep
or
pop
jae
outsb
ja,pt
sub
cld
cltd
sub
push
mov
mov
nop
push
dec
cmpb
inc
dec
xor
pop
and
divb
mov
adc
add
in
push
addr16
sarl
stos
pop
mov
pop
loopne
inc
xchg
sub
mov
lods
adc
adc
fwait
mov
pop
fnsave
stos
shll
jl
jbe
sahf
lods
out
sbb
ss
sub
loope
int
mov
ret
mov
int3
cmp
push
stos
cltd
mov
incl
jbe
pop
jne
and
clc
jmp
push
rcrb
jle
cwtl
shr
xchg
mov
push
inc
lahf
and
mov
roll
adc
paddb
push
mov
xchg
push
cld
mov
repz
cli
or
das
imul
aas
fnstenv
mov
mov
dec
cmp
or
and
dec
push
or
xchg
add
call
push
je
cmpsb
out
inc
imul
popf
iret
cmc
and
add
jmp
scas
out
cmp
or
or
xchg
cmp
jnp
cmp
shll
pushf
inc
outsb
cmp
scas
lret
push
ret
mov
test
adc
add
cltd
cmp
pop
xor
pop
cmp
icebp
cltd
dec
jge
outsl
test
or
xor
pop
xchg
testl
adc
sbbl
and
loopne
sbb
div
mov
ret
add
mov
nop
dec
mov
cmp
mov
sub
inc
sti
leave
pop
sub
dec
dec
daa
dec
cmp
mov
loop
cltd
test
fcmovnbe
push
jns
push
add
inc
add
add
loope
lds
cmp
push
pop
mov
insb
dec
cs
mov
add
fbld
xor
sbb
dec
enter
pop
xchg
dec
repz
mov
fmuls
popf
push
pusha
push
push
adc
fnsave
mov
ljmp
rorl
repz
mov
jmp
xor
mov
mov
jmp
sti
inc
pusha
xorl
jg
iret
mov
rolb
cld
scas
imul
nop
mov
test
ret
ret
add
call
push
push
sbb
push
and
fstpl
sahf
pop
push
mov
dec
adcl
aaa
js
sub
cmp
mov
jno
sub
mov
mov
mov
ja
cmp
icebp
jnp
dec
xchg
sbb
out
test
mov
jns
dec
dec
jmp
sbb
mov
xchg
ds
aaa
fsubrl
inc
bound
cmp
push
outsl
test
scas
add
test
lcall
test
dec
test
push
push
pop
cmp
pop
nop
stos
daa
ja
cmpsl
cmc
xchg
clc
mov
pop
outsb
xor
cmc
test
add
dec
fidivl
lea
cmc
mov
and
xchg
fcoml
ja
push
push
outsl
pop
fisttpll
out
je
push
bound
lret
scas
xchg
sub
insl
mov
gs
ret
cld
and
inc
cmc
xchg
ds
jmp
call
lcall
stos
xor
push
aam
push
dec
ret
or
jnp
test
in
std
lcall
and
cmp
mov
adc
jnp
mov
xor
push
mov
in
sarl
push
aam
xchg
jg
add
push
aam
jmp
mov
jecxz
dec
shrb
xor
sub
push
mov
xor
negl
mov
push
pop
jne
inc
int
mov
insb
fidivrl
sbb
add
fmul
mov
or
fistpl
mov
cli
sub
add
xor
popa
mull
in
popa
std
cmp
insb
and
dec
out
insb
push
fistl
repnz
pop
orl
sub
movsb
mov
shll
mov
pop
test
mov
call
dec
mov
cmp
xor
inc
cli
repz
icebp
fs
imul
js
enterw
sbb
fimuls
aas
inc
xchg
cli
frstor
cmpl
add
jecxz
cs
jbe
sub
mov
ret
adc
mov
push
mov
cmp
push
test
mov
jg
popf
push
rolb
dec
push
sbb
jecxz
movsb
popf
shll
push
push
push
ss
mov
cs
movsb
mov
cmp
stos
sub
or
xchg
mov
fidivrs
pop
repz
fisubs
nop
cmpsb
xchg
fidivrs
movsb
or
and
mov
mov
lods
cmpsl
fsubr
xchg
iret
ja
loop
stos
jg,pt
ret
cltd
into
mov
cmc
aas
mov
divb
mov
ds
sti
leave
popa
sbb
les
mov
or
aaa
pop
aas
scas
fimuls
std
sarb
stos
fbld
push
roll
icebp
sbb
sub
pop
repz
sub
adc
jo
jne
imul
sub
mov
mov
out
iret
push
xchg
inc
inc
divb
out
mov
sbb
stos
inc
mov
int
xor
cmp
into
pushf
xor
push
pop
lcall
push
subl
push
mov
jns
rcl
popl
sbb
adc
cmp
sar
out
mov
add
addr16
jg
or
aad
mov
pop
popa
int3
jb
test
ljmp
daa
fcoms
ljmp
movl
dec
and
mov
jl
mov
or
cmp
fcom
jg,pn
in
lret
xchg
mov
rorb
xchg
ret
cmp
cmp
cmp
or
rorl
scas
sahf
aad
bound
lcall
or
in
lea
sti
jge
pop
pop
dec
outsl
test
loope
xor
gs
rorb
rcrl
push
mov
inc
or
repz
xchg
cli
scas
loop
stos
xor
add
icebp
cltd
or
idivl
repnz
xlat
enter
cmp
add
cmp
jne
fdivr
add
xchg
sahf
popa
push
popf
lods
or
sbb
sbb
iret
pop
cmp
mov
jo
ds
xchg
cwtl
mov
addl
stos
lock
inc
cld
xchg
test
mov
cmp
dec
jne
fdivs
outsl
mov
mov
leave
pop
test
xor
push
dec
add
ret
cli
rcrb
aas
jae
test
loopne
push
sbb
jb
adc
imul
or
cmp
mov
push
sahf
mov
mov
rolb
aas
adc
mov
mov
mov
insb
xchg
jp
mov
cmp
push
rclb
rcr
push
adc
int3
push
aaa
ljmp
fwait
imul
mov
lods
cwtl
push
add
sbb
mov
push
cli
jg
xor
mov
fbld
xor
lods
xchg
and
pop
push
push
aad
lods
shlb
leave
push
mov
and
les
pop
mov
or
bound
mov
pop
js
cmpsb
shl
pop
enter
test
dec
or
push
xchg
jnp
pop
lock
sub
jmp
add
xchg
das
pop
inc
sbb
mov
lods
or
or
nop
pop
les
push
les
lahf
out
adc
adc
dec
xchg
or
mov
inc
lahf
jmp
pop
jle
adc
xchg
adc
es
test
jae
mov
dec
push
sub
fldt
xor
jge
leave
cmp
arpl
adc
imul
ds
loope
sarb
inc
xor
inc
addr16
cmpsl
cmp
sbb
loop
insl
sub
sub
mov
fldenv
stos
dec
pop
add
mov
jle
and
jae
mov
sub
pop
or
loopne
and
inc
inc
jge
iret
lods
mov
mov
pop
sbb
lcall
pop
cmp
and
rcr
jg
sbb
mov
sub
xchg
or
mov
orb
out
adcb
sub
cmp
mov
dec
cmc
xchg
inc
jg
data16
repz
push
push
push
xchg
push
jbe
stc
and
jns
inc
outsb
add
mov
fisubs
cmp
mov
int
mov
lcall
jb
add
sub
mov
cmp
cmp
push
ret
add
xor
mov
repnz
or
cwtl
cmp
fcomps
imul
outsl
ret
xor
pop
jae
pop
pop
fs
cmp
or
in
pop
jbe
lods
inc
pop
pop
mov
fnstcw
popa
daa
iret
fbld
out
xchg
ss
xor
sahf
cmpb
scas
or
xor
lock
test
inc
out
xchg
jp
dec
lds
pop
and
dec
testb
lcall
outsl
xchg
popf
ficoml
pop
pop
arpl
aam
lret
add
mov
adc
cmp
je
sub
imul
sub
mov
or
adc
jl
fcomps
addr16
and
fcoml
and
mov
into
clc
sub
pop
imul
addr16
xchg
mov
flds
repnz
jmp
arpl
imul
xchg
lcall
mov
insl
mov
lcall
lods
or
call
cmpxchg
cmpb
fwait
out
ret
loop
mov
mov
or
test
xchg
in
int
insl
sahf
dec
lods
fsubrp
jo
lods
cmpsb
icebp
or
jl
xor
ss
fwait
push
mov
or
dec
cld
xchg
mov
or
mov
mov
rcll
push
xchg
jle
sahf
test
dec
lock
jno
mov
pop
mov
lret
out
jns
divl
dec
out
pop
dec
push
shlb
adc
mov
adc
loope
jge
sbb
jmp
fmul
fs
shr
rcrl
fucomip
push
jmp
pop
jns
sbb
aad
push
inc
add
fildll
stc
push
mov
nop
aaa
jl
out
fidivs
hlt
imul
lahf
fidivl
adc
test
add
pop
insb
mov
cmp
andl
rcll
in
push
loop
xor
jp
int3
sub
xor
sub
and
cmp
inc
outsb
fimuls
or
add
out
push
inc
jne
repnz
mov
xchg
rcl
mov
dec
inc
mov
in
push
sti
sti
mov
cmp
jecxz
and
fwait
int
inc
fsubl
jo
rcrb
jg
cmpsb
pop
hlt
out
cs
dec
inc
mov
push
sbb
data16
outsl
jne
cmp
repnz
aas
xchg
aam
lods
mov
in
add
hlt
sub
cmp
or
movsl
fs
aaa
fisubl
sub
dec
int3
xchg
sarb
loopne
pop
sbb
mov
ss
leave
pop
push
es
and
push
mov
or
ja
cmp
sbb
jne
fimuls
cmp
adc
push
mov
cmp
cwtl
inc
inc
or
mov
outsl
adc
sar
dec
jo
or
mov
outsb
cmpsl
and
xchg
and
cmp
mov
outsb
std
imul
int3
sbb
adc
arpl
mov
stc
test
sbb
xchg
mov
lock
je
pop
cmp
mov
cmp
aad
cmp
movb
and
test
sbb
or
inc
add
cltd
push
pop
mov
push
into
rcrl
push
add
cmpsb
js
jnp
cmpsb
mov
mov
shlb
lcall
sbb
add
push
xchg
adc
or
cmp
xchg
lcall
and
mov
or
and
push
mov
adc
jle
jbe
cli
cltd
insb
enter
pushf
out
xor
lds
in
shll
add
fiaddl
and
mov
addl
inc
sub
dec
arpl
mov
loope
add
mov
cmp
pop
or
test
jnp
pop
mov
in
shrl
insb
shrb
fldenv
aas
std
sbb
fadds
or
adc
imulb
jns
lret
lret
pusha
std
fwait
addr16
clc
sub
call
movsl
jae
aaa
syscall
pop
idivb
adc
xor
mov
jmp
scas
sbb
clc
loopne
jle
lea
jmp
fnstcw
dec
push
movsb
mov
stos
add
stos
sub
mov
dec
daa
pusha
jne
sbb
jle
pop
mov
pop
or
loop
jne
and
mov
in
xlat
fimull
test
jmp
dec
mov
ss
push
sbbl
push
out
add
lea
insb
scas
pop
jg
jb
and
push
scas
stc
adc
dec
jg
aas
dec
repz
stc
dec
daa
stos
int
pop
dec
inc
loope
movlps
jno
mov
and
push
sbb
andb
lret
cmp
aad
out
shrb
pushf
lret
mov
les
add
sarl
stc
into
mov
mov
rorl
loop
fsubrl
jne
int
mov
fwait
rolb
or
cwtl
xchg
mov
mov
jmp
js
sub
inc
pop
add
je
out
mov
inc
pop
lea
xor
inc
add
aad
pop
xorl
dec
adc
sbb
mov
xchg
mov
nop
cmp
insl
dec
cmp
or
sub
imul
and
add
add
adcl
bound
xchg
lods
lret
addb
add
out
adc
mov
jecxz
cli
stos
stos
mov
xchg
jge
dec
test
cwtl
out
mov
xchg
mov
mov
je
mov
cmp
and
sbb
pop
lods
rol
mov
xchg
mov
inc
push
mov
iret
jno
fs
or
jp
std
pop
mov
adc
dec
add
lret
cmp
ret
out
fs
push
xor
jle
xor
mov
das
faddl
ljmp
leave
xchg
jae
ds
rclb
mov
frstor
or
pop
popl
mov
push
outsb
mov
and
xor
push
shrb
pop
cmp
mov
or
ret
int
in
mov
mov
jle
ret
hlt
add
push
shrb
adc
push
movsl
rolb
ja
into
pop
sub
and
mov
lret
mov
call
pushf
repz
mov
sti
pop
sbb
pop
mov
cld
pop
adc
movsl
faddl
or
fcomip
std
sbb
bound
dec
test
jmp
and
cltd
scas
mov
dec
cmpsb
ret
fnop
jecxz
into
popa
rorl
mov
lds
bound
cmc
xchg
pushf
push
cltd
into
ja
mov
cld
xor
push
mov
xor
lret
push
aad
jmp
or
mov
push
ja
imulb
gs
ljmp
jl
push
stos
pop
cltd
imul
mul
sbb
push
push
jl
xchg
sti
sub
and
sbb
xorl
inc
xchg
or
insl
dec
pop
or
push
sub
adc
sbb
jl
ljmp
mov
popa
pop
push
repnz
ret
orl
or
stos
sub
and
sahf
adc
je
xor
ljmp
xor
shr
filds
adc
enter
jmp
add
sbb
add
mov
pop
pop
lds
cmpsl
jl
daa
add
and
push
xor
pop
imul
push
lcall
xchg
ss
mov
movsb
cs
pop
sti
push
in
ret
or
xchg
fisubs
iret
push
sub
fs
cmp
fwait
movsl
fwait
orb
fchs
es
push
pop
push
stos
pop
stos
pop
push
push
inc
gs
popf
iret
mov
mov
pop
mov
xor
popa
push
outsl
mov
int3
xor
lcall
lcall
xchg
sbb
aad
or
mov
pop
xor
pusha
pop
add
pop
cmpsb
mov
xor
sbb
cmp
or
hlt
adc
out
jbe
or
les
enter
sahf
xchg
and
imulb
jns
adc
xor
lcall
ds
and
xchg
cmp
subl
pushf
adcb
xor
or
mov
and
jp
xor
fidivl
mov
stos
sbb
cmpsb
mov
xchg
adc
adc
inc
lret
mov
nop
sbb
lcall
dec
sub
cmp
jbe
jb
outsb
mov
cli
adc
mov
xor
mov
je
xor
mov
rorb
cmp
mov
jge
mov
scas
sarb
call
stos
mov
xchg
in
mov
hlt
mov
pushf
pop
add
sub
sbb
cmp
shrl
stc
cmp
ljmp
xchg
inc
sbb
jp
out
mov
sbbl
ljmp
inc
iret
sbb
xor
cmp
hlt
mov
mov
and
mov
fsubrp
jge
movsl
out
push
rclb
xor
cmpsl
mov
mov
loop
xchg
test
jo
cmpsb
jb
ss
push
or
mov
lea
arpl
mov
rep
jecxz
sub
mov
outsb
pop
push
mov
jo
and
dec
pop
frstor
sub
mov
into
pushl
cmpsb
or
scas
lret
mov
dec
dec
daa
inc
cmpsb
das
clc
inc
popf
pop
lcall
or
cmp
mov
inc
cltd
add
ret
outsb
mov
in
jp
cs
ds
ret
cs
ljmp
inc
add
sarl
loope
pushf
inc
ret
pop
jbe
inc
je
push
inc
leave
dec
lods
push
loope
mov
mov
ljmp
sub
mov
sbb
incl
add
movsb
xchg
inc
dec
imul
and
mov
cmpsb
cmpsl
insl
xchg
and
cli
call
in
test
std
rorl
mov
jae
or
jnp
dec
jno
push
pop
stc
ja
or
scas
out
mov
insl
orl
fstpt
fwait
sub
test
cmpsb
dec
stc
inc
pop
outsb
loop
faddl
dec
repz
and
dec
cmp
push
or
imul
paddusw
fdivrs
popl
add
sahf
xchg
daa
cmp
push
aas
cmp
push
fwait
mov
mov
lret
pop
mov
mov
test
dec
loop
add
ret
insb
jb
jp
das
push
xchg
jmp
mov
divb
fwait
sbb
imul
jne
lahf
cld
or
addl
mov
loop
xchg
sub
push
test
mov
pop
mov
mov
pop
adc
scas
dec
ljmp
jo
push
repnz
add
pop
ret
inc
lret
sti
pop
arpl
dec
add
push
adc
pusha
dec
xchg
int3
mov
xchg
pop
fildll
adc
add
das
mov
dec
outsl
lret
or
pop
xor
xor
nop
xor
je
mov
mov
push
pop
icebp
dec
repz
shrb
imul
rolb
shll
aam
add
mov
mov
popa
inc
sub
les
push
push
call
jae
arpl
sbb
idivl
and
leave
lock
fnstsw
lcall
popa
adcb
int3
std
or
xchg
inc
bound
movsl
mov
adc
sub
mov
loopne
lock
popf
xchg
cmp
testl
or
ror
je
pop
sbb
movsl
imul
push
cwtl
bound
scas
cmc
jns
pop
into
jmp
pop
sbb
mov
clc
outsl
inc
xchg
ss
int3
push
mov
sub
stos
in
outsl
clc
jp
xchg
es
pushf
mov
push
and
jle
sbb
push
das
rorb
aam
xor
inc
inc
gs
sbb
and
and
jae
scas
push
mov
jno
push
mov
jl
ds
jp
ret
mov
stos
fisubrs
das
xor
loopne
aam
mov
icebp
add
mov
mov
xlat
push
mov
push
push
call
outsl
sbb
lds
mov
pop
mov
les
ljmp
scas
outsl
call
inc
push
dec
and
mov
sahf
sahf
adc
leave
cmp
pushf
rolb
jns
pushf
je
add
arpl
mov
adc
xor
fistpl
lcall
xchg
xchg
test
xchg
les
mov
inc
xchg
jmp
test
jae
shrl
mov
cmpsl
mov
jmp
fstpt
fimull
pop
insb
cmp
negb
lret
mov
lock
push
mov
cmp
cmpsl
add
jle
mov
pop
xchg
shll
sbb
adc
icebp
aas
inc
and
ja
mov
pop
cli
xor
push
icebp
dec
cmpsl
cmp
xor
or
lods
jne
cmp
or
aaa
popa
cltd
pusha
adc
lahf
or
fwait
xchg
out
pop
sahf
fstl
insb
nop
xchg
jae
lods
jno
sub
and
jmp
inc
mul
xor
sub
shrb
inc
xchg
fbld
adc
mov
iret
sub
xor
dec
lcall
xchg
xor
testl
ds
sbb
fwait
add
mov
or
adc
mov
cmp
mov
into
pop
sub
or
push
sbb
xchg
jns
out
push
xor
inc
enter
cmp
shrb
lret
out
jecxz
mov
pop
xchg
pop
test
and
imul
mov
add
jb
mov
fld
xchg
cmp
repz
push
xor
cmp
push
stos
pop
ds
outsb
movsb
push
mov
insl
ss
movsb
popf
sbbl
fstpl
movsl
frstor
fwait
add
push
xor
call
or
xchg
mov
xchg
mov
out
and
jb
mov
movsb
out
push
xor
xor
repnz
andl
rorl
xor
loop
imul
jmp
jb
icebp
subl
adc
popa
push
mov
mov
into
jae
js
push
inc
ss
call
outsl
popa
or
ret
jl
xchg
dec
jns
mov
mov
call
xor
lods
rcr
or
mov
and
mov
xchg
not
and
daa
cli
jl
pushf
lock
mov
fsubs
or
in
pop
push
add
ja
mov
xchg
rcrl
pop
mov
nop
test
loope
add
lret
into
aam
std
add
xchg
aad
pop
cmpsb
and
stc
add
lret
fwait
mov
scas
pop
cmp
push
bound
sbb
mov
std
mov
imul
lock
add
sbb
adc
lret
cmp
stc
in
push
adc
push
jl
xchg
push
dec
fstpl
out
aad
xor
popa
movsl
movsl
push
orl
int
pushl
sub
mov
iret
imul
push
mov
roll
or
andl
xchg
lahf
cmpsl
in
stos
dec
aam
aaa
inc
out
scas
push
mov
lahf
std
mov
popf
ljmp
mov
test
loope
push
jno
loop
jp
mov
jge
mov
add
dec
sub
fwait
xchg
adc
sub
adc
sub
lea
scas
lret
dec
sbb
xor
xchg
jno
shll
addr16
xor
push
or
push
push
xor
adc
dec
cli
adcb
mov
mov
push
rcrb
jbe
xchg
xchg
xorl
push
dec
jb
fs
dec
es
lods
loop
addr16
notb
mov
in
adc
xor
jp
fwait
inc
out
xchg
ret
push
xor
or
mov
shlb
not
stos
aas
push
imul
les
mov
pop
shl
and
push
stos
shll
fcoms
ss
push
or
ljmp
xchg
pop
aaa
or
pop
loopne
lods
cmpsb
sub
push
lahf
jae
repz
cmp
inc
add
sbb
cmp
xorb
int
outsl
loope
leave
pop
inc
or
stos
fst
jmp
mov
adc
rclb
dec
push
cld
sub
insb
paddd
push
push
ja
dec
push
push
hlt
push
lock
js
in
add
jmp
jnp
xchg
dec
sbb
call
jnp
loope
addb
js
stos
mov
or
lcall
push
inc
and
subl
mov
pop
iret
jae
stos
jno
int
pop
call
adc
out
mov
cmp
jp
mov
sub
add
stos
jb
gs
call
cmc
inc
repz
adc
lock
mov
out
pushl
imulb
insb
insl
test
jle
popf
loop
xlat
jbe
rclb
shrl
sbb
rcrb
and
arpl
sti
daa
roll
movsl
popa
inc
sub
ds
stos
dec
xor
inc
pop
outsl
mov
xor
adc
mov
sub
sub
mov
pop
sub
sbb
out
xchg
out
movsl
ljmp
pop
mov
dec
xor
repnz
push
aaa
cmp
push
xchg
cmp
mov
dec
dec
insb
push
jge
sbb
mov
jp
repz
xor
inc
cmpsb
xchg
cmp
shr
pop
xlat
inc
xchg
ret
out
pusha
or
inc
dec
mov
mov
shlb
push
sbb
icebp
ss
push
push
mov
pushf
gs
or
jno
js
outsb
fstpl
and
stc
ss
mov
lods
cltd
cmp
mov
jl
in
xor
lds
sub
xchg
jbe
and
add
subb
sub
push
dec
fldenv
push
cld
popf
adc
sbbb
movsb
sbb
out
ja
lcall
call
out
shrl
cmpsb
sbb
or
test
cwtl
enter
fcomps
sbb
movsl
loopne
sahf
push
or
std
sbb
addr16
mov
jbe
inc
lods
push
js
push
mov
pushf
imul
mov
inc
imul
jmp
js
stos
repnz
mov
ss
dec
mov
pop
fs
xchg
jg
pop
pop
in
in
arpl
lds
test
xchg
push
mov
mov
lahf
ss
and
int
jbe
push
mov
popf
cmp
sbb
shlb
fisttps
mov
imul
movsl
cltd
rcrb
dec
push
mov
mov
dec
push
cmp
cmp
ret
or
aam
lret
push
push
ss
push
out
movsb
push
pusha
std
lcall
movsl
pop
mov
or
les
fisttpl
add
test
mov
dec
and
jne
adcb
pop
gs
cmp
clc
xlat
fsub
xlat
icebp
xchg
enter
in
xor
sub
out
mov
dec
xlat
mov
insb
push
xor
xlat
xor
inc
cli
or
mov
in
outsl
popf
xchg
push
ds
push
hlt
loope
xchg
mov
fbstp
out
xchg
in
xor
int3
mov
aam
aad
push
mov
inc
mov
push
mov
pop
test
cmp
dec
cmpsl
nopl
jmp
loopne
cmp
mov
xchg
fsubr
pop
jecxz
ret
inc
cmp
sub
movsl
lock
imul
enter
mov
out
add
and
dec
aaa
and
stc
leave
shrb
or
ja
push
ss
push
jae
pop
cwtl
int3
add
daa
aaa
out
or
xor
cmp
jmp
stc
mov
imul
adc
ljmp
andl
js
sub
xchg
pop
nop
mov
jns
scas
fldenv
xchg
cmp
fwait
mov
sbbb
aad
dec
mov
adc
shlb
add
or
out
js
ljmp
in
push
aad
outsb
iret
scas
xchg
sbb
sarb
adc
pop
ljmp
call
cld
enter
mov
subl
sti
in
or
lret
jg
cmp
push
xchg
inc
cli
adc
ljmp
jp
cmp
shrl
pop
into
cmp
lods
lds
aam
add
sub
mov
add
sbb
sbb
icebp
loopne
data16
dec
xor
push
cmp
inc
aad
cmp
ds
fidivs
sub
or
icebp
push
adc
pop
pop
aad
out
int
sbb
ret
je
jnp
mov
pop
push
pop
repnz
in
ret
xchg
loopne
loopne
ljmpw
mov
inc
std
and
fwait
in
cmp
sub
jb
jns
and
fstpl
lods
push
enter
xor
rorl
stos
loope
or
stos
xchg
mov
scas
fdivr
cmpsl
popf
test
std
bound
or
mov
adc
mov
push
lcall
cli
pop
push
jns
add
xchg
lods
dec
push
dec
rclb
rcll
stos
inc
cld
xchg
outsl
jp
rorl
dec
push
and
mov
pop
or
sbb
lret
add
sbb
sub
insb
dec
adc
xchg
push
pop
stc
mov
push
add
jns
call
inc
rolb
jmp
ret
lea
fiaddl
sub
sti
sub
mov
mov
outsl
or
lods
dec
push
xlat
cltd
shr
inc
push
pop
xchg
ljmp
adc
dec
arpl
les
mov
jns
cwtl
cltd
xorb
cmpsb
adc
xchg
xchg
dec
iret
int3
sbb
icebp
sub
cmpsb
cmp
sub
sbb
outsl
adc
sbb
pop
out
aas
fmul
push
sbb
andl
jo
subl
mov
lds
out
test
iret
adc
loop
xchg
push
ret
push
dec
fbstp
push
js
je
sbb
mov
addr16
inc
inc
ret
and
fcom
out
test
mov
sub
dec
mov
aad
add
mov
jnp
rcll
mov
jmp
sbb
cmp
shrb
into
add
mov
or
push
lds
hlt
mov
pop
and
out
xchg
mov
inc
jmp
jne
push
hlt
push
hlt
xchg
cs
cmc
bnd
or
lret
notl
pop
adc
inc
and
mov
xchg
fmul
xchg
and
std
in
loop
mov
push
pop
inc
pop
pushf
mov
stos
sar
pop
mov
lds
mov
ss
into
sub
sbb
push
cld
or
lods
mov
cmp
cltd
or
test
xor
sub
mov
cmpsl
xor
aaa
cltd
hlt
xlat
mov
sbb
repz
and
jmp
push
fisubrl
push
imul
test
inc
scas
mull
jge
xchg
movsl
dec
inc
push
or
add
inc
push
daa
mov
cmpb
test
add
aad
int3
stos
sbb
call
jmp
sti
and
addr16
popa
sar
inc
fmulp
xchg
lret
aad
ss
cmp
fnstsw
nop
dec
iret
out
inc
sbb
and
out
push
pop
repz
push
sbb
iret
scas
xor
fstpl
inc
jmp
je
sbb
popa
jnp
nop
repnz
leave
and
xchg
mov
and
int3
cwtl
leave
xchg
xchg
bound
fdivr
dec
sbb
repz
sub
adc
pusha
in
and
movsl
ljmp
int
push
cmp
frstor
scas
mov
rcrb
test
dec
push
ret
jge
xor
add
roll
cmp
jmp
test
data16
cltd
aaa
call
sub
mov
roll
push
xor
and
fwait
push
and
mov
aad
cmp
pop
xchg
inc
mov
ret
sbb
xchg
dec
xor
jno
jl
sub
or
add
stos
mov
data16
lds
out
push
sbb
mov
xor
mov
in
push
cmp
movsl
movsb
jne
or
test
adc
mov
or
out
xor
dec
mov
mov
sub
inc
mov
shll
bnd
out
imul
ljmp
mov
mov
mov
pop
sub
pop
inc
jno
push
ss
xchg
push
sub
shlb
lahf
sub
cmp
lcall
hlt
cmp
popf
mov
hlt
dec
jnp
mov
and
loopne
ds
sub
pop
lahf
jg
shlb
jae
add
mov
pop
inc
mov
mov
mov
test
push
pop
pop
lods
jb
ds
add
mov
pop
ss
scas
sub
mov
jnp
mov
movzwl
xor
ja
loope
push
jae
add
es
aas
scas
in
sub
and
ljmp
fcoml
push
iret
out
inc
mov
add
pop
mov
mov
int
sahf
adc
add
arpl
xchg
push
inc
lret
mov
jmp
adc
sub
sub
add
repnz
mov
xchg
xchg
jle
push
mov
sbb
stc
and
inc
lret
jle
pop
mov
imul
cmpsl
stos
mov
js
cwtl
and
push
cmpsb
fisubs
push
or
les
push
popa
loopne
repz
mov
cld
lahf
leave
lahf
popf
and
fiadds
jo
adc
cli
call
mov
aam
mov
jnp
mov
adc
adc
mov
lahf
adcl
aas
sub
fldenv
mov
jmp
test
test
iret
jnp
push
lods
lods
stos
mov
cltd
cmpsb
rorb
movsl
fsubrl
mov
cmp
sbb
sub
mov
mov
push
xor
xor
insb
aam
int3
inc
xchg
int3
cmc
pop
xchg
add
pop
and
shrb
pop
cmpsl
sub
inc
cmp
cwtl
out
inc
out
ja
ret
dec
into
jb
inc
xchg
jmp
outsl
ficoml
dec
mov
adc
fs
or
push
inc
push
cmpsb
jge
mov
orb
loope
sbb
ret
dec
testb
mov
add
jne
fstl
pop
jl
aas
int3
cmp
test
push
stos
cmp
iret
stos
fisttps
loop
repz
decl
cmp
or
lret
cmc
dec
mov
jnp
xor
jae
mov
out
pop
add
outsl
jmp
adc
mov
cmp
add
ljmp
sub
addr16
jecxz
sub
out
in
rorb
movsl
adc
sbbb
jecxz
lods
inc
aad
pop
add
xchg
loope
mov
outsb
cmp
jle
jp
mov
pop
xchg
cmpsb
out
pop
jg
ljmp
and
jnp
jle
cmp
ss
jg
lock
subb
cmp
leave
je
dec
int3
dec
mov
pop
out
inc
pop
std
xchg
ja
adcl
je
fbstp
jno
imul
and
in
addr16
mov
lock
pop
xchg
jl
jnp
xchg
mov
test
repnz
sti
dec
movsl
cld
mov
cwtl
push
movsb
mov
xor
sub
roll
jns
jmp
or
shrb
sub
pop
dec
nop
in
inc
cmp
push
dec
add
int
orb
add
aas
sbb
outsb
fwait
xor
dec
pop
xchg
push
lods
adc
ret
and
and
inc
sbb
dec
or
inc
pop
dec
xchg
mov
es
adc
add
movsb
inc
pop
adc
sbb
jb
call
add
adc
xchg
repz
ss
aaa
sarl
jbe
and
popa
lea
aas
add
xor
scas
sbb
push
orl
dec
push
xchg
lcall
sub
adc
mov
stos
jne
adc
ret
xor
jecxz
xchg
shl
stc
and
cmc
aam
imul
out
lahf
xor
in
mov
das
out
data16
xchg
pop
addb
jle
xchg
leave
xor
push
into
jmp
into
jle
sub
popf
loopne
cld
mov
add
push
inc
xor
sub
or
mov
cmpsb
mov
mov
inc
mov
mov
jl
insl
inc
pop
test
pop
pop
and
insl
pop
fs
lret
adc
pusha
pop
jnp
push
xor
repz
push
out
andl
adc
pop
outsl
push
shrl
add
or
test
jno
xchg
stc
fsubl
fdivrs
cmp
scas
push
test
adc
ffree
out
mov
mov
dec
mov
ja
in
inc
das
dec
inc
lret
push
jg
lret
fmuls
mov
sbb
xor
aam
test
cmc
js
push
aaa
bound
mov
push
jb
cmc
and
pop
fidivrs
push
out
out
loopne
lock
mov
cmp
orb
sub
push
ret
mov
ret
adc
dec
lret
fistps
call
cmpsl
sti
mov
pop
xor
std
imul
insl
xchg
idivl
mov
adc
out
bsr
js
loope
cmpsb
popf
mov
cmpsb
outsl
lahf
repz
dec
xchg
jmp
and
jae
dec
ja
pop
or
std
sbb
sbb
xchg
adc
clc
or
push
loopne
sbb
rcll
js
loope
mov
loope
mov
mov
test
test
jno
es
sub
into
or
or
mov
jns
mov
pop
mov
ror
xor
dec
lods
loop
jne
sbb
adc
jns
sub
dec
ljmp
mov
cmp
add
fadds
fnsave
jnp
adc
pop
iret
popf
lcall
sbbb
inc
sarl
jge
mov
pop
mov
out
mov
fptan
out
inc
imul
adc
js
ss
movsl
dec
pop
addl
mov
test
sub
or
push
in
scas
inc
pop
mov
addr16
lods
cmp
leave
or
jae
add
xor
test
ljmp
aam
or
or
fdivrl
add
sbb
nop
adc
jno
daa
in
in
shrl
lahf
or
xchg
fmuls
pop
loopne
mov
das
out
and
xlat
test
outsl
insb
sub
xor
xor
or
push
aaa
lret
add
frstor
movsl
xor
inc
cmp
pop
adc
hlt
mov
aaa
mov
aaa
mov
mov
ret
cmp
sub
int
lods
cmp
std
test
jge
xchg
leave
cmp
push
inc
rorl
int
popf
xor
pusha
jp
ss
sbb
jb
dec
aam
loop
enter
insb
rcll
sbb
stos
divb
fsubl
lods
push
mov
sub
rcll
xchg
add
mov
jo
jecxz
iret
sub
testl
sub
mov
fsubrs
ljmp
mov
jp
adc
subl
js
rolb
ret
sahf
sub
dec
dec
lcall
and
insb
jp
out
pop
out
fistl
and
cmp
jle
jne
adc
sbb
into
movsl
adc
js
xor
lods
stos
in
pop
push
push
ljmp
dec
jp
shr
adc
and
sbb
popf
fists
lahf
test
xchg
mov
pushf
dec
ss
xchg
adc
add
fmuls
sbb
inc
shll
sbb
xchg
lahf
sub
sub
ret
pop
cmp
rorb
adc
pop
movsl
push
out
mov
jle
xchg
xor
push
dec
pop
pop
add
adc
into
xchg
push
push
imul
push
add
orl
or
add
lcall
pop
xchg
repz
test
ret
push
movsb
inc
ljmp
fdivrl
testl
jecxz
fldl
xlat
push
js
leave
xor
shrl
dec
and
cmp
inc
dec
ds
pop
xchg
mov
hlt
lret
loop
and
pop
in
fidivs
sbb
mov
ret
and
mov
lcall
fldl
dec
mov
lret
pop
dec
or
adc
jb
pop
int
cmp
sbb
mov
sarb
sub
orl
sarl
pop
cmpsl
xchg
sbb
cmpsl
sbb
es
imul
insb
mov
pop
stc
mov
insb
or
mull
xchg
cld
ljmp
and
xor
sbb
int
test
pop
cmpsb
inc
and
mov
jge
mov
mov
or
jbe
lds
mov
sbb
add
int3
xchg
movsb
lea
insl
push
pmulhw
lcall
add
insl
inc
fdivrs
dec
incl
fmull
jg
roll
jge
pop
adc
push
xchg
cld
dec
push
insl
inc
pop
inc
mov
dec
sub
gs
arpl
xchg
cld
cmc
push
cmp
fnstcw
inc
xlat
fcompl
dec
jecxz
pop
jns,pt
fsubr
out
lock
dec
ror
mov
lcall
ja
punpckhwd
inc
dec
jecxz
test
aaa
dec
mov
gs
test
cmp
xor
mov
test
pop
adc
mov
sbb
sbb
lahf
repz
xor
arpl
jmp
popf
lea
xchg
sbb
mov
into
bswap
xchg
push
lcall
daa
aam
aam
sbb
pusha
cmpsb
jno,pn
push
and
add
or
int3
mov
test
fidivrl
sbb
add
sub
dec
mov
xlat
popl
into
mov
imul
cmpsl
sub
xchg
lods
mov
push
jbe
pop
pop
push
je
adc
push
xchg
imul
jl
jae
scas
cmpb
rcll
add
into
cwtl
sarl
adc
icebp
cltd
fsts
stos
jmp
lea
jmp
gs
sahf
sbb
mov
fcompl
dec
push
aaa
je
jg
insl
jne
adc
ljmp
cmp
sub
jno
mov
dec
lds
int3
sub
mov
aad
popf
xchg
xor
mov
mov
loop
dec
add
movsl
fwait
scas
push
sbb
lret
jb
rclb
adc
mov
push
in
cmp
or
int
out
jne
sbb
jbe
movsb
or
enter
lret
xor
scas
pop
outsb
and
imul
out
movsl
and
filds
jle
add
cmpl
cmc
and
jmp
test
dec
mov
mov
mov
icebp
xchg
ret
mov
aam
xchg
mov
push
std
mov
mov
and
ds
cmp
popf
in
push
inc
pop
mov
movsl
cmp
fmull
or
mov
jbe
pop
cs
push
and
ss
inc
pop
enter
sahf
sub
test
dec
ljmp
pop
push
lret
mov
iret
sub
sub
sbb
adc
insb
adc
pop
sbb
loop
add
push
int
jge
xor
fdivl
xor
jbe
ljmp
jnp
mov
xlat
add
push
xor
sub
xchg
xorl
dec
enter
sub
js
jmp
cwtl
ss
dec
mov
sub
xchg
cmp
cmpsl
inc
and
lret
pop
push
lods
cmp
mov
cwtl
pop
into
pushf
fwait
pop
or
gs
lods
orl
iret
sub
sub
aam
inc
daa
loopne
sbb
mov
loop
outsl
cmp
dec
and
mov
cmp
stc
cmp
mov
add
aad
lock
pop
sbb
sbb
lea
inc
xchg
xor
pop
mov
mov
sub
pop
or
push
cli
imul
lcall
pop
sub
xchg
xchg
pop
cmp
int3
or
mov
push
xor
mov
aas
sbb
into
adc
testb
ret
mov
rep
iret
cwtl
loopne
mov
clc
pushf
pop
add
and
loope
loop
es
ret
inc
or
cmp
xor
and
cmpsb
ss
in
fs
je
sar
es
loopne
adc
sbb
clc
mov
or
or
push
cmpsl
out
inc
stos
xor
clc
stc
cmpsl
in
push
lds
imul
dec
or
lret
jecxz
add
or
mov
or
aas
pop
sarl
cwtl
fxch
xor
subl
jmp
int3
xor
inc
xchg
popf
cmp
into
mov
push
push
ljmp
pop
mov
xor
dec
les
xchg
js
sbb
mov
jb
pop
inc
sub
lods
rcll
flds
inc
dec
pop
adc
jne
popa
in
bound
cmp
je
push
pop
jmp
loop
cli
sub
sbb
xchg
pusha
shlb
adc
test
fs
jo
add
mov
orl
movsb
and
lcall
imul
mov
xorl
lret
pop
cmp
mov
sbb
je
fimull
out
aam
mov
push
stos
push
and
out
xlat
sub
mov
xor
inc
fs
cmp
add
jne
popa
or
shr
cmpb
lret
lea
mov
mov
stc
mov
push
je
xchg
aaa
in
xor
mov
ljmp
mov
pop
mov
gs
lret
adc
jns
pop
jecxz
cmp
outsl
push
dec
jle
adc
jecxz
mov
adc
ds
dec
cli
dec
rorb
xor
in
jae
mov
mov
xchg
test
lods
rclb
ja
fnstcw
incb
push
push
das
ficompl
in
outsl
sarb
lahf
dec
cmpsb
push
lahf
outsl
adc
scas
pop
sbb
addr16
test
dec
aaa
jb
test
jno
movsb
icebp
mov
aad
xor
mov
push
nop
sbb
adcb
jmp
stos
cltd
jo
pop
nop
cmpsb
mov
fdivs
and
push
sbb
sti
cmpsb
insl
pop
inc
in
call
ds
sub
scas
jmp
push
mov
mov
adc
and
sti
and
inc
rcr
pop
or
xchg
cs
push
nop
imul
int
add
roll
mov
jle
inc
in
push
mov
ret
cmpsl
mov
ds
dec
inc
fstpt
pusha
filds
mov
inc
fldz
push
cmp
adc
cmc
stc
loopne
dec
adc
or
jne
push
push
test
hlt
sahf
sub
in
ja
and
push
enter
call
sti
loopne
scas
movsl
mov
mov
sbb
aas
fwait
mov
outsb
mov
mull
and
loope
popf
xor
and
jns
xchg
mov
aam
scas
sahf
xor
sub
popa
flds
sbb
push
xor
dec
sbb
into
imul
cmc
movb
outsl
push
sub
data16
mov
cmpsb
sbb
lret
movsb
popl
test
sbb
in
ror
sub
xor
clc
mov
mov
inc
sahf
inc
jmp
cli
ja
out
push
mov
leave
sti
and
mov
and
in
iret
sub
rolb
add
add
cmp
mov
mov
cmpb
stc
int
pop
movsl
xchg
pushf
jne
clc
push
jno
out
mov
loop
cmp
dec
xor
rol
movsl
lods
div
iret
lods
lea
and
adc
mov
pop
dec
or
je
mov
clc
xor
add
inc
mov
push
jns
sub
sbb
test
movsb
and
in
test
inc
adc
inc
clc
bound
add
lods
inc
mov
popf
sub
into
dec
and
test
push
call
pop
pop
adc
dec
jg
add
push
mov
jecxz
jae
and
stc
pushf
hlt
into
xor
adc
sub
sbb
loope
in
sbb
adc
push
jbe
bound
lret
xor
aas
mov
sbb
cmp
das
cld
sbb
pushf
imul
rcll
jns
push
mov
mov
and
lock
add
xor
into
add
je
inc
dec
dec
iret
popa
xchg
add
movsl
jmp
fstl
sbbl
xchg
mov
sub
fstpl
in
xor
mov
jmp
ret
add
pusha
lcall
pop
sarb
sbb
test
sub
inc
dec
jge
jns
pop
and
fwait
pop
sbb
mov
jns
mov
and
cmp
popa
insb
xchg
icebp
jne
sbb
mov
xchg
push
mov
out
dec
icebp
dec
xchg
and
lods
adc
shll
out
ss
jge
out
jp
or
mov
mov
ficompl
rcrl
dec
lahf
adc
mov
movsl
mov
push
into
scas
dec
fcmovu
test
fsubp
jo
pop
sub
ret
subb
insb
cmp
ljmp
clc
sub
cmp
lea
sbb
xor
pusha
test
mov
fdivr
stos
xchg
and
adc
insl
sub
jb
mov
shrl
cs
cmpsb
xchg
push
fcmove
or
adc
jmp
les
cmpsb
sbb
jl
adc
fs
arpl
mov
stc
adc
mov
dec
push
les
cmp
js
popf
dec
dec
add
jnp
popa
das
adc
outsb
repz
lds
cmc
lret
fadds
inc
es
push
push
cmc
arpl
push
bnd
test
xchg
jne
jo
pop
and
mul
loop
popa
cli
mov
inc
jo
or
jmp
add
sahf
cld
lahf
mov
lea
aad
xlat
enter
mov
mov
xchg
fwait
cli
in
decl
sahf
mov
roll
fnstsw
and
in
sub
cwtl
inc
dec
xchg
mov
add
mov
push
xchg
sub
jo
jns
repz
stc
das
mov
sti
pop
cmp
stos
pop
sti
or
jns
fcmove
cmc
jmp
adcb
shrb
xchg
fst
sbb
fnstsw
cmp
out
sub
mov
sub
ljmp
jae
jae
xchg
mov
fs
mov
jae
ds
clc
jnp
jb
dec
xor
fs
add
or
rolb
mov
fistpll
mov
icebp
or
sub
mov
xchg
and
mov
cltd
push
jl
mov
or
sub
les
push
bound
je
jmp
shrl
js
inc
jmp
cmpsb
inc
add
cwtl
inc
leave
dec
mov
shrl
daa
dec
push
rclb
sub
std
dec
xlat
jb
mov
mov
lds
mov
testb
pop
mov
adc
cmpsb
xchg
ja
addr16
test
in
popa
dec
loopne
gs
pop
and
out
mov
mov
add
mov
xchg
mov
inc
aaa
sub
fldl
test
cmp
iret
push
push
mov
shl
in
pop
jne
inc
jnp
jbe
mov
out
xchg
gs
push
push
mov
mov
cmp
in
add
test
in
dec
es
out
push
mov
outsb
movsb
mov
jae
ficoml
mov
mov
sahf
pop
lret
pop
xor
and
ss
or
lock
cmp
shrl
xchg
jmp
add
pop
cmpsb
sti
inc
sub
icebp
mov
xor
leave
dec
sub
das
jnp
jmp
loop
mov
push
das
jge
negb
xchg
pop
xlat
enter
aam
enter
or
es
test
mov
xor
dec
scas
pop
xor
lods
dec
sub
cmp
or
xor
sbb
xchg
or
or
jae
cld
imull
ret
add
xlat
addr16
sbb
xor
out
cmp
or
jmp
dec
mov
sub
jle
cwtl
cli
icebp
push
mov
adc
sub
jbe
lret
inc
fsubrl
push
sbb
mov
xchg
stos
xchg
mov
mov
fwait
mov
insl
test
scas
ret
push
lock
sbb
mov
or
loop
push
clc
xorl
and
arpl
pusha
in
aad
pushf
int3
inc
jns
sbb
jnp
push
movsl
add
xchg
or
roll
mov
cmp
lret
cmc
shrl
dec
xor
rcl
push
dec
dec
dec
test
hlt
decb
in
fcmove
call
cmp
sahf
int3
jbe
dec
pop
je
and
jmp
insl
lods
xlat
xor
mov
stos
dec
xchg
xchg
dec
dec
push
jp
sub
scas
or
inc
repnz
mov
fildl
int3
pop
aam
pop
cmpsl
test
jbe
je
sti
and
or
lretw
adc
jae
mov
shll
pop
je
mov
adc
sti
cmp
sbb
adc
xchg
mov
and
cmc
mov
pushf
in
ss
pop
pop
xchg
adc
inc
cwtl
and
or
or
mov
push
addr16
into
out
aad
pusha
cs
mov
xor
cs
in
stc
cwtl
movsl
popf
clc
stos
popa
sbb
imul
sub
or
scas
dec
test
scas
mov
lea
shlb
mov
fidivrs
fistps
sub
les
dec
cmpsb
sbb
maxps
and
fstps
fidivl
imul
insl
mov
xchg
and
dec
inc
push
mov
add
test
push
test
popa
adc
push
outsb
subb
out
testl
lds
stc
das
stos
jmp
cwtl
jmp
or
vpsubsb
cli
repz
repz
sbb
sbb
mov
jne
outsl
movsb
data16
jge
in
push
fidivs
push
pop
cld
xor
cmp
test
xchg
add
scas
pop
push
movb
and
jp
push
jecxz
leave
ret
adc
mov
sub
mov
ljmp
sbb
mov
add
mov
scas
jbe
loopne
ret
ja
in
sbb
call
cld
mov
scas
push
imul
loopne
sub
sbb
dec
adc
test
mov
testl
cmp
sahf
shll
pop
clc
cs
addl
pop
ljmp
iret
inc
sbb
jns
bound
jmp
add
or
push
adc
bound
rol
mov
adc
nop
push
lcall
ja
cmp
fdivr
jne
inc
jne
and
call
out
das
inc
xorb
lret
in
mov
xchg
mov
mov
out
arpl
daa
scas
or
stos
mov
popa
mov
hlt
adc
jecxz
mov
out
enter
cmp
enter
ficoml
aam
cmp
sub
cmpb
loopne
outsb
xor
out
pop
inc
incl
dec
mov
mov
adc
bound
lea
pop
cmp
das
xchg
mov
int
mov
data16
or
in
xchg
sbb
fdivp
stos
sub
fcoms
lret
sub
pop
jne
xor
shrl
xchg
int
adc
and
mov
ds
popa
jmp
imulb
call
ja
cmp
shrl
cmp
gs
imul
lcall
pop
jne
mov
xor
sarl
cmp
mov
jb
push
sti
jae
pop
xor
mulb
jns
cmp
push
push
das
pop
hlt
adc
test
jg
cli
fnstcw
insb
sub
mov
iret
and
aam
lods
lods
adc
cltd
pusha
pop
mov
mull
scas
inc
stc
loope
dec
das
sub
je
cltd
sub
lods
negl
ret
dec
mov
sub
cmp
ret
lahf
iret
adc
xor
or
ret
dec
rcrl
test
mov
cmc
jl
les
or
pop
sbbl
jo
sbb
xchg
push
ret
dec
xchg
dec
clc
mov
lock
shrl
lea
jmp
out
jo
xchg
out
fwait
outsl
xor
mov
and
jno
sub
sub
push
fidivs
sbb
sub
xor
xor
icebp
mov
xchg
pop
add
shrb
mov
xor
cmp
inc
and
aam
pop
ret
mov
pusha
ret
mov
leave
bound
cmp
jo
or
sbb
xor
ret
inc
stc
dec
out
mov
mov
and
push
mov
sbb
mov
and
or
mov
gs
push
mov
jge
iret
insb
idivb
in
xchg
cmp
inc
js
cs
push
lods
ljmp
jl
pop
imul
jne
adc
or
or
cmpsb
rcrl
inc
inc
fadd
daa
mov
mov
test
divl
xchg
cwtl
fnstcw
xor
adc
mov
daa
data16
cmc
popf
add
and
imul
jle
outsb
xchg
mov
or
or
or
jp
arpl
sarb
cmp
push
xchg
jae
dec
push
jo
test
cltd
loop
les
pop
data16
imul
or
dec
xchg
addb
movsb
call
xor
pop
push
movsb
mov
lds
repnz
fdivrl
popa
and
pop
pop
pop
fs
jle
lret
imul
sbb
mov
movups
add
jmp
ret
int3
js
jae
sahf
jp
adc
jae
pop
cmc
ret
and
mov
sub
lods
inc
sarb
push
xchg
xor
bound
xchg
inc
inc
in
repz
inc
jo
fs
dec
out
mov
and
andl
adc
mov
mov
pusha
ja
push
popa
push
hlt
jbe
and
mov
jnp
fwait
add
or
dec
pop
aad
mov
push
cltd
arpl
sbb
xchg
int3
cmpsb
xor
aas
std
in
pop
imul
stos
outsb
fmuls
lcall
stc
mov
push
aaa
iret
rorb
jb
test
push
fs
adc
adc
je
jae
mov
add
fists
sar
loope
or
cmpsb
inc
dec
lods
cwtl
mov
pop
jae
pop
loop
xchg
fistl
pop
call
pop
adc
cwtl
pop
dec
cmc
push
jns
in
or
and
and
shrb
sub
pop
mov
mov
jo
xor
cs
mov
inc
xor
adc
insb
mov
dec
movsb
sub
sbb
repnz
inc
shrl
outsb
jae
mov
and
scas
or
sahf
fwait
jg
out
xor
dec
mov
cmp
or
ds
jb
fmuls
add
pop
into
mov
js
lock
add
jmp
or
stos
rcll
fistl
xor
mov
loopne
fwait
enter
mov
in
test
dec
adc
mov
loope
daa
repz
movsl
pop
lret
pop
ret
or
loop
xchg
jle
aas
adc
jb
mov
icebp
daa
sub
or
or
mov
cli
insl
pop
mov
out
scas
sbb
movsb
pushf
mov
shll
and
mov
nop
inc
repnz
add
sub
cld
jle
inc
jb
stos
nop
pop
push
shl
pop
bound
and
sbb
clc
test
mov
jmp
mov
jns
xor
mov
lcall
sub
xchg
jge
pop
test
sbb
add
mov
mov
adc
test
sbb
scas
das
outsl
add
and
cmp
lods
imul
lods
in
push
and
mov
out
jg
loope
fldcw
shl
pop
xchg
jl
imul
push
or
inc
sarl
xor
aad
pop
cmp
test
dec
adc
add
andl
adc
test
pop
jg
std
inc
adc
xor
mov
js
jo
lret
xor
in
mov
stc
clc
push
arpl
dec
outsl
out
jbe
in
inc
stos
mov
rorb
pop
jg
subb
jns
or
jo
dec
ss
enter
outsb
movups
cmp
repz
cmp
add
dec
mov
fcomip
jl
push
test
push
icebp
adc
xor
adc
xchg
cwtl
add
push
iret
aaa
sub
in
mov
cld
jo
push
lret
mov
pop
jmp
sarb
jo
add
mov
fiadds
data16
jge
mull
lahf
rcll
fs
or
test
xchg
jae
shrb
and
pop
dec
in
stos
xlat
pop
repnz
mov
cmpsl
cld
lret
mov
loopne
xchg
sbbb
dec
pop
lods
or
shlb
nop
xor
icebp
adc
fisubl
test
ret
mov
fldl
or
aaa
insl
sub
lock
sbb
fs
xchg
adc
rorl
cmpsl
dec
cmp
xchg
cwtl
xor
lcall
stos
pop
arpl
out
movsl
and
push
dec
test
add
ljmp
inc
sub
adc
rolb
push
mov
adc
jmp
jae
mov
adc
xor
int3
jg
add
leave
enter
cwtl
add
and
sub
or
out
dec
lds
pop
mov
push
xchg
push
lcall
adc
repz
xchg
or
mov
mov
cli
gs
cmp
out
jl
add
outsb
push
mov
stos
cmp
push
push
imul
jno
add
cmc
xchg
or
add
cs
xchg
push
or
cli
or
lcall
jbe
imul
add
pushf
out
cmp
dec
iret
das
stos
xor
mov
mov
or
push
xchg
push
addb
call
test
ret
sub
mov
sub
sub
clc
mov
shrl
pop
mov
int
inc
cmp
leave
xchg
loopne
jmp
call
adcl
jp
mov
scas
or
xor
dec
mov
movsb
inc
iret
shr
push
sub
cmc
inc
iret
sbb
mov
pop
sub
dec
stc
and
into
xchg
test
ficoms
xchg
bound
and
fidivrs
push
jnp
cwtl
mov
or
lret
popa
mov
and
ffree
rclb
and
fdivs
xor
cmpsb
les
jg
repz
mov
loope
jnp
mov
sarb
pop
lea
xchg
or
lock
mov
dec
in
add
insl
xchg
jmp
ja
fwait
cmc
jne
ret
test
mov
xchg
sbb
push
mov
sbb
inc
mov
cmp
mov
xchg
and
test
dec
cmpsl
shlb
pop
inc
insb
xor
dec
mov
out
arpl
inc
xchg
jmp
or
dec
mov
and
jl
xchg
jb
xor
sbb
cmp
mov
shr
push
mov
xor
cmp
sub
addr16
xor
in
add
stos
daa
out
out
sub
outsb
or
aad
fistps
test
and
sbb
popa
mov
cmc
mov
add
rcl
cmp
inc
mov
jle
mov
test
test
push
data16
mov
fsubs
xor
ljmp
out
jmp
stos
das
imul
push
xchg
cmpl
fs
pop
mov
xchg
sbb
jg
dec
inc
scas
jno
mov
imul
xchg
ljmp
mov
dec
pop
add
lock
jecxz
xor
and
lock
inc
and
dec
mov
in
inc
pusha
popa
decl
lret
pop
lds
xor
fdivrl
jnp
out
rcrb
jo
push
push
loop
ljmp
int
aad
fsubs
dec
sarl
repnz
outsb
cli
aaa
sbb
rolb
scas
out
pop
bound
decb
subb
mov
sub
call
fwait
lret
jno
add
inc
push
rcll
and
rcl
mov
and
in
jns
dec
in
dec
jns
jge
push
add
test
cmp
test
pushf
push
jg
sbb
jno
lahf
jmp
and
in
out
lcall
push
pop
xor
sub
movsb
adc
cld
mov
inc
aad
sub
pop
cltd
inc
fisubrl
sub
sbb
push
inc
rcrb
lret
out
mov
das
xor
les
add
fistps
lds
and
jns
stc
rolb
lret
std
jb
orb
ror
lahf
sbb
mov
mov
xor
sub
xor
mov
inc
scas
gs
clc
push
and
sbb
lea
push
ror
lret
scas
push
std
movsb
test
scas
lea
lret
adc
inc
pushf
pop
jnp
mov
pop
sub
cmc
js
sbb
adc
repz
xchg
imul
or
and
iret
mov
jmp
or
jne
sbb
mov
fnstcw
rol
enter
pop
test
jge
bound
jae
inc
scas
inc
mov
sbb
jg
mov
addr16
nop
add
xlat
lahf
insl
xchg
jmp
in
inc
jg
cmpsb
sub
in
mov
mov
ja,pt
faddl
sbb
jge
xchg
push
lret
add
in
sub
mov
mov
ficomps
push
dec
mov
lea
or
mov
std
mov
cltd
pop
int
jp
mov
pop
jns
cmpsb
ds
sub
adc
jae
in
xor
shll
jl
pop
inc
ja
add
pop
and
test
adc
push
ret
add
in
jp
lcall
jo
shll
out
jbe
cltd
in
inc
mov
lods
fnstenv
call
in
and
mov
dec
cmp
dec
sub
gs
repnz
mov
fsts
nop
mov
stc
or
push
in
add
xchg
pop
test
sub
dec
out
outsb
std
cmp
mov
subl
inc
sbbl
mov
outsl
push
pop
pop
inc
movsl
xor
fsubr
and
xor
and
adc
lahf
pop
repnz
lahf
movsb
push
sti
dec
inc
pop
adc
adc
mov
sbb
mov
jne
ja
or
jle
test
int
xchg
dec
mov
sbb
pop
aam
jmp
sub
mulb
test
cmpsl
aam
xchg
les
sbb
jmp
jo
adc
mov
sbb
mov
pop
jno
fstl
sbb
test
insl
jmp
and
mov
cmpsl
push
cmp
les
mov
push
pop
shl
xor
bound
sar
ret
mov
and
jnp
stos
adc
nop
aas
cmpsb
pop
inc
pusha
inc
enter
into
movsl
sbb
jge
jp
mov
in
jb
and
jae
push
shl
and
fwait
add
adc
lret
bound
sbbb
lret
stc
add
xchg
mov
jae
fdivrs
subl
inc
xchg
fdiv
cltd
fs
leave
es
scas
leave
jmp
push
xchg
sbb
ffree
pop
pop
pop
popf
lods
imul
jmp
sti
xor
out
jmp
inc
jnp
pusha
movsl
dec
sbb
or
dec
push
arpl
xchg
dec
mov
mov
dec
pop
pop
push
ljmp
fcoms
add
pop
lods
clc
add
aad
xchg
shl
pop
test
xchg
jne
add
sub
cmc
push
xchg
les
cmpsb
rep
xlat
test
adc
arpl
fisttpll
int
lcall
and
roll
loop
popa
sub
shrl
cmpsb
pushf
leave
popa
sbb
clc
mov
lcall
and
sub
jne
jle
jb
jns
mov
add
repnz
jne
in
filds
add
or
mov
cmp
and
xorl
mov
pop
inc
cmp
cwtl
addr16
pop
loope
clc
pop
scas
inc
cli
adc
mov
lcall
adc
dec
sbbb
push
inc
mov
push
mov
jle
or
int
adcl
test
jecxz
jno
and
repz
int
lods
scas
ss
xchg
mov
fsts
scas
scas
add
test
add
fiadds
addb
push
push
nop
pushf
cltd
mov
ss
sbb
add
aam
jo
mov
and
cld
mov
ljmp
add
pop
push
push
and
and
in
lahf
shr
stc
sarb
sub
mov
aaa
add
mov
cmp
mov
xchg
xlat
out
cltd
arpl
mov
orl
ljmp
push
clc
mov
jp
mov
cmp
repnz
cli
dec
jle
jecxz
lds
mov
xchg
jg
cli
jo
pushf
cld
xor
or
cmc
test
sbbb
insb
lret
repz
int3
sbb
bound
sbb
xchg
jg
lahf
pop
mov
add
inc
inc
push
inc
jo
push
imul
or
adc
mov
pop
subb
repnz
lret
stos
dec
test
lahf
pushf
int
xchg
insb
and
pop
repz
jnp
sbb
daa
jne
test
pop
dec
scas
xchg
out
cmp
mov
sub
rcll
fs
push
out
sbb
cmp
pop
aas
iret
mov
jp
addr16
out
stos
mov
stos
adc
into
and
das
cmp
dec
stc
add
or
xor
xchg
xor
inc
xchg
cmp
adc
push
pop
mov
dec
mov
lret
cmp
in
push
fisttpll
je
jle
aaa
inc
mov
cmp
in
into
loope
sub
fstpl
iret
cmpl
jno
mov
sbb
xchg
aas
jns
dec
sub
std
inc
sbb
sbb
jns
imul
hlt
decl
lds
inc
mov
sbb
push
hlt
sbb
addr16
pop
sysenter
loop
hlt
adc
cmp
sub
cwtl
clc
sbb
push
push
mov
aas
xchg
lcall
nop
dec
jo
iret
fnsave
bnd
push
andb
int3
loop
inc
inc
xor
fstpl
mov
fdivrl
mov
cmpsl
bswap
xor
es
mov
out
pop
imul
call
sub
cmp
insl
xor
jg
mov
push
int
push
sbbl
sbb
ret
mov
loop
jbe
pop
mov
or
ret
cmc
outsl
mov
scas
push
lahf
mov
clc
outsl
mov
into
mov
or
push
xor
pop
lret
test
push
pop
mov
adcb
daa
push
ret
sbb
xor
and
in
inc
push
push
shrb
and
add
dec
inc
and
xchg
mov
test
xlat
push
xchg
pop
sub
push
or
mov
ja
sub
lods
mov
test
cwtl
or
loop
sbb
mov
negl
dec
hlt
and
or
or
test
movsl
adc
arpl
xchg
test
inc
or
adc
mov
push
pop
mov
aad
dec
loop
sub
jbe
and
push
test
stc
fmulp
iret
movsb
mov
sbb
cld
imul
add
push
cmp
pop
cmp
push
cmp
push
mov
sbb
and
loope
inc
dec
sbb
pop
fnstcw
mov
jmp
sbb
xchg
shlb
or
push
mov
fsub
inc
aas
loopne
in
pop
jbe
mov
sbb
ret
loop
movsb
pop
sbb
fists
jge
xorb
jecxz
xlat
add
mov
inc
cmp
aad
inc
sub
and
push
or
pop
ret
pop
inc
add
cli
mov
pop
push
hlt
aaa
mov
mov
ret
or
sbb
jl
add
std
sub
inc
mov
lahf
cs
dec
stos
movsl
xor
data16
gs
or
pop
fwait
cmp
data16
sbbb
movsl
jecxz
sbb
pop
inc
push
xorl
lret
negb
push
enter
adc
dec
lret
lahf
dec
push
mov
add
jmp
outsl
popa
adc
fisubrl
sub
int3
jge
scas
cmpsl
outsl
push
aam
pop
cltd
and
lods
sbb
mov
xchg
shll
mov
cmp
ja
cmp
sti
outsb
test
or
or
sub
pop
fsubrp
fisubs
adc
sahf
lahf
jns
jmp
inc
push
xor
adc
adc
sub
js
xchg
std
mov
mov
bound
fs
neg
pusha
sti
push
je
ja
inc
lret
sti
dec
fs
adc
flds
iret
push
jns
cld
cmpsb
call
adc
dec
push
and
jo
ficomps
pushl
dec
mov
jge
jl
and
pusha
in
sub
dec
adc
sub
dec
dec
int3
mov
dec
sub
cs
push
mov
cmp
pop
mov
loope
into
dec
outsl
cs
inc
cmp
and
stos
loope
hlt
push
bound
xor
sbb
xlat
pop
mov
lcall
or
push
jb
and
fcomip
mov
jne
cwtl
movsb
adc
mov
cmpsl
scas
xchg
or
sub
ret
lret
nopl
sub
or
test
sbb
repz
rcr
jne
xchg
out
cmp
aam
cmpl
inc
mov
in
ss
and
adc
sbb
push
cwtl
push
sub
xchg
ret
cmpsl
push
pop
jo
int3
lds
add
and
orb
mov
imul
cmpb
ret
or
push
movsb
rcr
repz
mov
enter
inc
xchg
sub
imul
or
mov
or
mov
icebp
pop
xor
push
and
push
add
bound
movsb
xchg
pop
into
mov
adc
cmpsb
and
dec
ret
jg
push
dec
in
mov
push
pusha
idiv
sub
idivl
mov
xchg
mov
xor
lods
inc
cld
pop
test
inc
pop
xlat
mov
psllq
roll
cld
pop
sbb
push
jl
add
mov
adcb
push
ror
pushf
mov
sbb
adc
popa
inc
cmp
or
rorl
icebp
add
cmp
aaa
push
mov
in
rcll
outsb
pop
push
and
sub
dec
and
inc
arpl
push
xchg
daa
push
fcoml
inc
adc
insl
push
out
mov
pop
pop
jp
mov
test
in
jle
pop
sbb
fcmovnb
jle
lahf
mov
xchg
sub
movsb
and
and
adc
out
in
daa
jb
push
xchg
cmp
fwait
lea
ret
lock
stos
push
dec
div
sub
insl
cld
aad
arpl
mov
jo
loopne
pop
xchg
adc
xor
push
repz
inc
data16
jo
in
mov
push
cld
shll
enter
mov
adc
cmpsl
or
xchg
cltd
dec
test
mov
cmp
xchg
cwtl
jecxz
add
mov
movsb
lods
mov
mov
fldl
ljmp
scas
pop
cmpsl
lcall
mov
loope
aam
dec
push
mov
icebp
push
sbb
jno
cwtl
test
adc
int3
lods
scas
data16
insl
lahf
push
push
movsl
scas
push
or
jl
mov
cmc
mov
nop
hlt
and
mov
cmp
adc
pusha
adc
fidivl
inc
push
and
fdivr
jo
repz
daa
stos
mov
mov
les
imull
xor
cmpsb
scas
inc
push
sbb
cmc
into
mov
fld
ret
aas
shll
push
sub
jl
fsubs
pop
popf
mov
lahf
mov
and
mov
add
mov
mov
jno
inc
jns
and
dec
or
or
push
imul
add
sub
fisttpl
testl
jae
dec
test
jbe
dec
shlb
cwtl
push
push
scas
js
xor
call
adc
add
in
inc
push
adc
icebp
loop,pt
fs
aad
sbb
outsb
filds
add
mov
pmullw
and
out
shll
sbb
push
cmp
jno
adc
mov
in
xchg
pushf
loop
add
inc
fwait
stos
mov
xchg
addl
and
in
movsl
pop
data16
xlat
dec
aas
xchg
loop
mov
xchg
repnz
push
mov
adc
cmp
fistps
xchg
or
sub
and
xor
lea
adc
mov
icebp
or
jns
pop
push
leave
fs
mov
dec
inc
stos
insl
test
cli
xor
inc
test
pop
xchg
jns
sbb
dec
mov
insb
pop
push
pop
ljmp
int3
clc
aaa
orb
jmp
adc
std
xchg
mov
mov
fwait
test
aad
stos
add
out
dec
adc
adc
add
andb
mov
mov
mov
add
mov
push
fdivs
sub
loopne
aad
fiadds
lret
lret
mov
cmpl
loopne
cmp
adc
outsb
daa
and
sbb
ja
push
pop
mov
les
mov
setb
adc
bound
mov
jnp
cmp
mov
sub
mov
popa
add
gs
das
in
mov
add
and
ret
jecxz
dec
push
cmpsl
movsl
add
jb
dec
push
xor
js
cmp
sub
add
outsl
inc
mov
insl
adc
xor
jle
outsb
dec
sahf
sub
push
movsb
xchg
outsl
arpl
aad
pop
push
cwtl
test
and
mov
outsb
xor
out
jb
aam
aas
pop
pop
xor
aas
inc
leave
test
test
mov
cli
xchg
rclb
mov
insl
nop
ljmp
les
inc
fisubl
outsb
mov
push
aam
movsl
lea
fidivs
and
mov
mov
fcomps
xor
or
hlt
ret
aam
repz
es
in
sbb
mov
dec
xlat
dec
mov
testb
das
lds
cmp
push
pop
lds
xchg
mov
xor
jo
jecxz
mul
push
xchg
lods
sti
leave
jb
lea
mov
sar
or
mov
push
sub
pop
or
clc
mov
cmp
movsb
test
lret
aam
xchg
ror
rclb
bound
outsb
dec
popa
iret
xor
ret
sub
and
mov
sub
jmp
arpl
pop
mov
mov
xor
mov
mov
pop
dec
aad
or
add
jle
fildl
sub
out
dec
lock
mov
mov
jae
negl
inc
xchg
movsb
jp
mov
inc
imul
xor
aam
leave
pop
and
mov
ss
mov
movsl
fmuls
scas
jo
inc
test
mov
divl
push
xchg
test
daa
jle
aaa
sbb
jmp
fisubrl
out
mov
cmpsb
sbb
popf
mov
fldt
cli
bound
pcmpeqw
pop
sub
rorb
stc
mov
iret
dec
and
shrl
adc
mov
aaa
scas
lea
ds
ds
cmp
adc
mov
jns
leave
stos
and
push
sbb
lahf
mov
hlt
adc
lret
leave
pushf
dec
dec
inc
sub
jmp
inc
mov
fadds
rolb
shrl
incl
xlat
xor
repz
sub
sbb
mov
in
sbb
cmp
cli
pop
aam
or
pop
outsb
mov
add
aam
stos
push
xor
fstpl
arpl
push
outsl
test
mov
mov
adc
in
mov
jle
jp
push
xor
fsubrl
repz
outsb
push
lret
bndstx
outsl
out
lock
sarb
mov
lods
mov
inc
insl
jnp
jbe
cmc
insl
call
das
movsb
adc
push
pop
cmpsb
aad
lret
xchg
cmp
hlt
popa
mov
add
pop
push
jl
fldl
test
sbb
mov
jle
mov
jg
daa
mov
inc
adc
pop
pop
fwait
rcll
imul
add
fdivs
cmp
test
daa
std
mov
dec
arpl
mov
out
loopne
outsb
mov
in
sub
sub
repnz
add
sub
or
pop
mov
out
clc
inc
pop
xchg
daa
sub
fldl
std
scas
push
out
adc
repnz
insb
addb
inc
pushf
jp
and
xlat
ja
mov
aaa
sbb
icebp
jmp
jl
cld
fildll
int
adcl
push
dec
inc
negb
orl
leave
jns
sub
es
inc
out
stc
and
push
sbbl
arpl
imull
xchg
mov
std
out
out
xchg
pushf
fldcw
insl
loop
mov
push
mov
repz
sbb
cli
sub
cmc
jl
lds
sub
ss
sbb
mov
cmp
fidivs
stos
pushf
inc
sbb
jns
out
mov
dec
gs
jmp
dec
stos
fstl
mov
loopne
push
sub
inc
push
cmp
mov
xor
movsb
add
or
inc
repnz
ja
lahf
dec
nop
or
sub
repnz
inc
cmp
sub
movsb
cmp
outsb
int
push
or
dec
decb
dec
gs
scas
insl
andl
mov
add
divl
je
sbb
mov
out
xor
repnz
mov
sti
inc
scas
ja
sub
inc
out
sbb
adc
pop
push
add
and
mov
loopne
mov
pop
mov
out
stos
cmc
lds
arpl
push
lcall
call
or
aam
mov
lret
popf
imul
int
test
insl
xchg
rcrb
mov
pop
clc
fistps
xor
dec
add
xor
cmp
loope
mov
mov
repnz
or
call
pop
jno
pop
stc
mov
lret
and
adc
jle
push
mov
cmp
mov
sti
push
scas
sbb
fldt
pusha
js
sbb
push
arpl
push
scas
sub
in
xchg
out
push
cmpsl
js
jae
and
cmp
pop
jmp
mov
cmpsb
imul
jo
stos
xchg
mov
das
imul
sbb
out
test
cltd
lods
shlb
or
movsl
jo
sti
arpl
xor
add
arpl
or
push
push
in
lock
sbb
sti
cmp
std
mov
shrl
adc
mov
clc
xchg
call
mov
xor
fimull
inc
scas
push
add
loope
xchg
nop
dec
sbb
add
iret
cld
xchg
xor
arpl
add
xor
mov
lods
xchg
push
mov
cwtl
push
fcmovnb
jp
pop
shl
mov
push
sahf
das
in
sbb
imul
sti
cld
lds
int3
adc
mov
jmp
imul
addr16
jecxz
cmp
inc
rcl
push
out
cmc
psubsw
mov
jns
out
dec
mov
push
movsl
orb
inc
ja
mov
mov
enter
cli
pop
dec
js
adc
cwtl
sub
pop
xchg
mov
aam
or
arpl
aad
mov
ds
jmp
jle
push
insl
push
out
xchg
jmp
jmp
cltd
jmp
bound
sbb
xchg
stos
nop
add
insl
xor
daa
push
repnz
xchg
fildl
call
add
lods
cltd
arpl
movsl
mov
in
mov
iret
stos
repz
movsb
adc
pop
mov
push
test
sbb
lock
icebp
insb
std
repnz
movsl
push
jno
pop
imul
into
mov
add
fisubs
stc
jb
fiaddl
cmc
mov
mov
sar
rcll
mov
xchg
lret
add
cmp
hlt
or
in
pop
cli
jle
pop
fldt
mov
lods
inc
pop
or
jb
and
jmp
popa
cmp
mov
insb
incl
mov
ljmp
push
ja
rorl
es
adc
sahf
push
bound
xchg
mov
cmpl
add
adc
mov
and
adcl
ss
xchg
cmp
out
jb
add
imull
mov
xor
ds
enter
lods
xchg
inc
repnz
mov
push
shlb
jo
sbb
adcb
or
and
xchg
ror
mov
je
mov
int3
arpl
cmp
lods
pop
xor
push
cli
js
scas
addl
pusha
jp
pop
movsb
and
push
adc
inc
mov
jl,pt
cli
repz
jbe
mov
outsb
sbbl
out
sbb
pop
loope
stos
js
repnz
cmc
pop
clc
fwait
inc
jno
fstpl
xchg
pop
pop
pop
push
add
push
nop
ret
in
cmpsb
xor
pop
mov
stos
ret
ret
in
xchg
mov
xchg
pop
cmpl
fwait
rolb
sbb
adc
adc
mov
jecxz
pop
daa
jnp
pop
test
clc
stos
xchg
setle
mov
inc
adc
loopne
std
ret
mov
xor
out
xchg
mov
lods
ror
cmp
fisttpl
sbb
shrl
movsl
out
mov
mov
imul
cld
sahf
int
in
dec
and
xchg
ucomiss
pop
sbb
cmc
ljmp
mov
pop
cwtl
and
push
inc
aaa
jbe
mov
scas
sub
out
fildl
loop
fisubs
inc
enter
xchg
hlt
cmp
pop
xor
xor
jb
and
stos
push
sub
inc
lret
aaa
sbb
and
pop
das
or
ret
push
push
ffreep
or
inc
stos
cmpsb
sub
neg
push
adc
mov
mov
fwait
inc
inc
xchg
rcl
jbe
add
push
sub
mov
mov
dec
adc
int3
int3
mov
pop
sbb
dec
arpl
or
mov
stos
xor
shll
movsb
and
insl
arpl
sbb
mov
push
out
adc
xlat
cmc
out
cli
mov
mov
xchg
ds
lcall
ja
out
jge
adc
jp
xchg
jae
dec
out
imul
leave
mov
pushf
cmp
mov
cmp
jl
out
cmp
int3
add
roll
js
iret
adc
test
mov
mov
jne
push
mov
ret
pusha
ljmp
mov
repz
cmpsl
push
push
iret
inc
push
fxch
xchg
pop
insl
test
jg
ficompl
mov
and
xor
mov
push
mov
mov
or
add
out
aam
mov
add
mov
cmc
jp
jbe
adc
shl
test
fs
xchg
mov
jo
js
scas
lcall
stos
shl
jp
and
mov
inc
clc
lods
mov
jmp
les
andl
btr
in
in
sbb
xchg
imul
cltd
mov
xor
xchg
movsl
dec
fwait
adc
hlt
fucomip
js
fprem1
jno
jmp
adc
push
and
stos
push
adc
enter
jno
cmpsb
mov
out
out
dec
adc
lahf
in
inc
jno
adc
xchg
mov
inc
inc
inc
test
test
xlat
adc
add
bound
sbb
mov
loopne
outsb
repz
inc
stos
and
xchg
add
xor
enter
std
loop
push
mov
dec
or
or
les
dec
xchg
pushf
arpl
push
jo
cmp
mov
jge
loopne
outsb
pop
mov
sub
dec
push
lods
scas
scas
sub
cwtl
idiv
in
add
mov
cmpsb
adc
mov
fnstsw
rorb
mov
sbb
fidivl
xlat
adc
data16
repnz
outsb
repnz
xchg
ljmp
sub
jo
out
int3
fadds
lds
jns
popa
ss
imul
mov
jp
testb
jbe
mov
test
jbe
mov
fisubrs
push
cli
scas
jle
mov
dec
cmc
pop
dec
stos
arpl
repz
xchg
fnstcw
xlat
in
fistl
outsb
fisttpll
clc
add
daa
loop
mov
and
iret
mov
pop
and
xchg
test
adc
adc
cmc
rorb
push
and
mov
loop
cmp
xor
mov
andl
outsb
or
push
dec
addr16
sub
dec
pop
pop
out
stc
les
or
bound
mov
popf
jle
or
or
mov
rorl
xchg
cmp
sbb
push
pop
and
sub
neg
bound
test
fcom
cld
pop
adc
pop
repnz
leave
insb
push
adcb
sub
inc
jns
lea
out
fs
mov
test
lods
xchg
jbe
and
fucomi
and
hlt
inc
adcl
shlb
pop
xor
jns
fmuls
add
in
scas
sub
outsb
or
lret
push
sub
xchg
scas
int
or
xor
pushf
int
aad
jb
lods
shll
loopne
xlat
sbb
fstpl
jo
xor
and
pusha
push
mov
arpl
pop
add
inc
add
shrb
sahf
jno
stc
and
dec
add
stos
lods
adc
xor
pop
pusha
test
les
imul
hlt
jnp
push
dec
arpl
cmpb
das
outsl
sub
cwtl
test
jecxz
mov
dec
popf
jl
push
inc
cmpsb
dec
jp
loope
mov
cmp
js
inc
test
ret
cld
fists
push
dec
add
sahf
cmp
add
pop
adc
jecxz
cli
xchg
in
idivb
sub
test
shl
xchg
popf
pop
jl,pn
push
inc
xlat
xchg
inc
test
fsub
pusha
jg
std
rcl
xchg
or
or
movsl
loopne
dec
into
jl
mov
mov
adc
leave
inc
fs
das
add
int
jl
sub
add
mov
outsb
sbb
pop
mov
into
xchg
nop
push
sbb
push
pop
push
fsts
ja
cli
or
pop
popf
and
adc
out
xchg
pop
popl
cmp
jbe
fidivrl
add
std
adc
das
jne
aam
inc
jnp
inc
lret
lea
cs
stos
in
jo
pushf
pcmpeqd
daa
mov
btc
cmp
mov
ret
add
in
in
hlt
popf
repz
call
xlat
cmc
mov
add
es
inc
out
movsl
pop
hlt
xor
dec
jp
les
push
cltd
hlt
xor
hlt
ret
xor
and
jl
cmp
repz
lea
mov
push
sub
rclb
in
push
call
or
fcomps
in
xchg
inc
pop
add
jge
add
popa
xchg
pop
ret
push
dec
mov
pop
pusha
adc
arpl
jle
repnz
mov
inc
sbb
and
mov
pusha
popf
movsb
jbe
nop
jb
cmpsb
dec
push
and
stos
ret
icebp
adc
enter
andl
sbb
push
ret
sub
fdiv
jp
jbe
shrl
stos
gs
data16
imul
xchg
icebp
pop
fdivrp
imul
scas
jle
mov
pop
push
stos
add
push
inc
jl
xor
orb
sub
adc
push
loopne
clc
push
mov
iret
mov
adc
xchg
or
les
dec
out
std
mov
cmpsb
imul
fs
push
fsubr
notl
lret
and
lods
lret
out
dec
push
mov
cmpsb
cmp
jle
fimull
sbb
or
movsl
jl
add
int
xor
mov
mov
mov
fiaddl
sub
lret
xor
mov
js
cmc
imul
shlb
cwtl
mov
js
add
in
xchg
inc
addr16
decb
pop
push
jle
aad
push
mov
lds
dec
outsl
cmc
inc
add
add
add
hlt
into
cli
push
pop
xchg
cs
fwait
das
cmp
adc
jp
data16
pop
inc
mov
dec
test
and
xor
shll
repnz
daa
test
dec
leave
imul
jb
in
ret
pop
test
subl
in
in
ss
xchg
popf
rcrl
push
xchg
daa
xor
pop
dec
in
dec
ja
and
in
lods
in
test
bound
clc
add
push
repnz
jns
sahf
sub
or
cmpsl
xchg
lret
addr16
pushf
scas
or
je
push
fbstp
sbb
shll
outsl
push
sbb
xor
push
cmpsb
xchg
or
inc
in
or
test
inc
jp
stc
push
adc
sbb
dec
test
xorl
mov
popa
pop
pop
sbb
xchg
xchg
mov
pop
fs
add
add
xor
add
fidivs
scas
in
es
xchg
push
aam
sar
xchg
es
add
mov
and
adc
pop
in
out
shll
mov
pop
popa
aam
leave
fs
jl
in
js
mov
cmp
lods
lret
sbb
push
push
out
sbb
jmp
mov
add
cmp
jnp
hlt
jbe
stos
dec
test
into
dec
or
ss
jbe
mov
mov
jne
cmp
fs
or
mov
lcall
and
xchg
cmpsl
push
test
fcomi
data16
fistps
xor
and
mov
ja
mov
mov
push
adc
cmp
aam
loope
repnz
lcall
roll
jg
or
clc
call
pusha
pop
fiadds
mov
inc
sub
dec
xchg
aam
xor
push
icebp
popf
sbb
cltd
das
js
repnz
fstps
fstpt
lret
jge
xlat
pusha
sahf
or
jecxz
pop
xchg
xlat
fisubrl
mov
jae
sub
lret
sbb
out
arpl
mov
repnz
add
pushf
daa
and
or
cmp
mov
inc
xchg
dec
cmpsl
or
int3
inc
adc
push
setl
loope
loop
mov
mov
lea
push
gs
fwait
mov
cmc
ss
xor
inc
add
enter
cmpsb
add
mov
outsb
cmp
pop
jae
add
movsl
daa
xlat
push
cld
out
adc
sub
push
fmuls
aam
adc
xor
xlat
push
push
jns
dec
andl
pop
push
inc
int
xchg
lds
scas
andb
ljmp
lret
jo
jb
xor
sarb
daa
lret
push
xchg
mov
xor
scas
inc
mov
inc
outsb
push
inc
jo
nop
sbbl
icebp
jno
gs
xchg
test
lods
push
jb
xchg
cmp
popa
in
mov
nop
cli
test
cmp
cli
mov
jge
xchg
add
loop
xchg
iret
in
hlt
ret
xor
xor
lret
or
push
stc
jge
sbb
or
inc
add
cli
xchg
pop
cli
test
dec
scas
mov
pop
adc
outsb
sbb
ja
sub
mov
fsubrl
sbb
fistpl
inc
inc
aas
or
jle
jo
xchg
sar
dec
scas
jbe
insb
test
lret
pop
jb
out
pop
scas
add
lods
sub
clc
call
inc
jo
sbb
loope
fsubs
sub
fildl
mov
mov
adc
push
sbb
sbb
movsl
inc
jne
and
loopne
sub
adc
fldcw
iret
push
dec
inc
dec
sub
xlat
xchg
in
insl
jmp
mov
ret
mov
mov
nop
gs
dec
xor
fisttpl
in
dec
insl
stos
mov
inc
ljmp
js
push
mov
sub
push
sahf
nop
or
loopne
lods
add
or
or
imulb
loope
adcb
cmp
pop
aam
das
and
shrb
sbb
into
inc
imul
pop
pusha
lock
mov
mov
ret
mov
sub
or
cmpsb
push
jmp
stc
outsl
xor
cmpsb
loopne
sub
pop
iret
jp
mov
bound
add
cmp
xor
dec
mov
andb
mov
push
mov
outsl
icebp
icebp
pop
sbb
add
lret
xor
and
psubsw
adc
ss
mov
hlt
into
ljmp
lahf
inc
test
mov
in
inc
or
dec
and
or
ret
repnz
negb
lcall
sub
mov
sub
pcmpeqb
push
cmp
pop
lds
and
pop
jl
mov
das
clc
fs
nop
xchg
out
mov
or
stos
fdivl
std
inc
mov
mov
push
lods
mov
insb
sti
or
ljmp
xchg
inc
mov
push
outsb
push
imul
subb
outsb
push
xchg
je
jb
pop
ficoms
in
mov
jb
popf
fstl
je
ds
cmpsb
js
cld
inc
xor
imul
stos
std
adc
pushf
loop
out
jno
arpl
and
pop
pop
leave
andl
sub
push
and
int3
push
xchg
or
ud0
bswap
popf
inc
jecxz
xchg
pop
xchg
xchg
push
xchg
jl
in
repz
ljmp
pop
int
push
sub
js
xor
dec
fbstp
pop
fwait
lcall
lds
xlat
dec
cmp
xchg
push
cmp
lods
ja
test
jle
scas
adc
int3
mov
pushf
lcall
and
fstps
and
out
cs
sub
out
mov
fs
mov
cmp
mov
jno
or
lret
cmpb
fisttpl
push
inc
sbb
rcl
dec
inc
adc
aaa
scas
cmc
cs
sti
xor
cmp
add
call
jmp
sbb
xor
aam
xor
jg
aas
jp
stos
sbb
push
stc
in
and
cld
insl
int
adc
call
sub
dec
jle
pop
movups
nop
mov
lretw
sbb
jno
push
jmp
test
icebp
pop
lods
aaa
cmp
inc
fildll
push
xchg
push
jnp
fcmovb
cmp
dec
in
push
jp
pop
add
test
mov
ss
out
pop
pop
cmp
push
add
fs
bound
leave
pop
mov
push
xchg
pop
sti
gs
xchg
cwtl
and
sub
popa
mov
mov
cmpsb
iret
scas
popf
inc
dec
stos
rol
mov
shlb
ds
dec
mov
into
mov
jmp
icebp
mov
add
xor
aaa
pop
add
dec
out
outsl
test
in
lahf
sahf
pop
cltd
fdivr
pop
xchg
cmp
ret
jecxz
inc
iret
add
jbe
mov
lahf
aam
xor
add
cmp
sbb
sbb
sub
pop
inc
mov
cs
and
dec
ljmp
sub
cmp
scas
lfs
dec
idiv
sti
add
adc
fwait
adc
cmp
test
fcomps
aas
pop
sahf
fst
inc
movsb
in
lock
test
stc
mov
cmpsl
lret
ret
jne
ficompl
pop
adc
jmp
inc
mov
jno
sbb
daa
jb
aas
cmpsb
xlat
mov
pop
mov
inc
int3
mov
rorl
sti
mov
or
lret
insb
inc
outsl
jb
mov
inc
pop
sbb
lret
lahf
xor
push
int3
repnz
idivb
ret
ss
lea
rorl
sbb
shlb
idiv
jg
mov
mov
fidivs
xor
stos
mov
out
loopne
dec
imul
sti
xchg
xchg
xchg
and
push
in
das
sub
fwait
mov
fdivl
ljmp
and
jns
pusha
int
mov
mov
and
or
xor
dec
and
out
add
cmp
out
inc
ret
in
jne
jl
or
fsts
mov
addr16
push
jle
movsl
notl
or
not
dec
sub
xor
sbb
dec
pop
cmpsb
sar
mov
out
pop
mov
fndisi(8087
les
pusha
popf
jno
repnz
add
mov
out
push
les
inc
aaa
mov
cmp
lods
push
stos
sbb
lret
push
mov
lea
je
adcb
repz
lea
inc
sti
sbb
push
jnp
loop
std
adc
rolb
sub
jns
inc
pop
pop
aaa
scas
sbb
inc
add
jae
xor
sti
rcrb
jmp
xor
std
cmpsl
ljmp
cmp
mov
fdivl
addr16
lcall
sti
xor
mov
pop
scas
addr16
neg
xchg
daa
mov
sbb
sti
mov
lret
fwait
jnp
in
andl
iret
or
cmc
mov
lcall
or
sub
mov
mov
inc
lds
and
rolb
pusha
xor
cmp
andl
movups
or
mov
xchg
lret
frstor
adc
mov
and
hlt
xor
bound
push
sub
ret
adc
mov
je
mov
push
mov
call
mov
sbb
and
push
sub
mov
mov
insb
sbb
add
jg
pop
xchg
dec
stc
ja
test
push
sub
adc
popa
int
pop
loope
cmp
push
or
adc
dec
out
int3
cwtl
nop
imul
dec
sbb
ret
sbb
pop
sub
flds
pop
rcrb
mov
xchg
int3
jl
xlat
pop
shll
jno
ret
enter
mov
faddl
cmp
push
add
cs
lods
fadd
dec
push
scas
xchg
jno
test
jg
cmc
notl
lock
add
movsb
mov
pop
sub
mov
and
mov
jo
cmp
xor
mov
xor
out
fists
cltd
mov
jmp
xlat
push
je
inc
sbb
push
xchg
mov
xchg
or
dec
cmc
ljmp
std
pop
xor
fldcw
mov
test
loop
lret
jns
sub
inc
jmp
bound
cmp
mov
sub
add
adc
cmp
out
push
push
imulb
mov
call
push
dec
insl
enter
outsl
std
ja
sub
sbb
insl
outsl
das
pop
cwtl
or
les
adc
inc
xor
imul
sub
mov
fiadds
in
dec
pusha
xchg
and
stc
es
push
cmp
jmp
sbb
and
xchg
dec
mov
fyl2xp1
jl
iret
nop
sbb
rcrb
jns
and
xor
push
xchg
dec
jno
sub
mov
sub
or
cmp
lret
or
mov
cmp
or
rorl
lea
sub
mov
xchg
sbb
das
sbb
int
adc
mov
sub
jbe
loop
mov
push
mov
test
lods
and
fwait
rorl
iret
aam
sub
outsb
inc
lret
sbb
scas
daa
lahf
and
jecxz
push
or
scas
push
fisubrs
fistpll
rorl
dec
mov
daa
xchg
shrb
add
pop
sahf
mov
or
mov
fldt
sub
sbb
jo
stos
rolb
sub
rclb
jnp
mov
adc
cmp
xchg
iret
fidivrl
sahf
addr16
mov
mov
push
insb
fidivs
out
rorb
add
fwait
repz
addb
subl
dec
mov
outsb
add
jnp
jmp
addr16
movsb
mov
dec
jb
aad
lea
fimuls
ds
icebp
add
sub
jmp
lret
cmp
pop
xor
or
sbb
call
lds
inc
ret
rclb
pusha
or
into
mov
mov
mov
aas
fstl
arpl
jge
mov
lea
popf
sti
imul
xor
popa
cmpsl
dec
add
sti
pop
ficoml
pushf
xchg
int
and
mov
add
callw
std
sub
adc
add
outsb
icebp
lock
xlat
xchg
dec
xchg
xchg
in
xchg
imul
push
pop
clc
dec
out
jmp
fst
dec
lret
test
ret
inc
adc
pop
mov
xor
dec
movsb
aad
mov
sub
jp
and
adc
and
shr
data16
push
in
or
mov
mov
fdivr
lea
stos
sti
cs
fistl
mov
add
sbb
dec
add
inc
or
out
or
lods
push
enter
push
push
adc
xor
mov
scas
enter
inc
jp
dec
cltd
xchg
cld
and
mov
and
aad
mov
jbe
push
shll
rorl
pop
and
les
xchg
mulb
cmp
arpl
loope
lds
cld
stc
lret
push
dec
push
roll
dec
mov
add
xchg
leave
cmp
sbb
stc
dec
fpatan
xchg
mov
adc
pop
add
or
and
imul
mov
xchg
or
fcomi
mov
pop
cwtl
cmpsl
and
push
xchg
sbb
into
cs
testl
cmpsb
fsubrp
adc
push
mov
ljmp
push
sub
pop
jg
out
fistl
mov
paddusb
ljmp
lcall
movsl
xor
daa
pop
repz
cwtl
mov
fsubr
dec
mov
sbb
xor
cmp
adc
enter
and
je
xor
ja
and
icebp
out
sub
stos
xchg
mov
jl
iret
mov
pop
jns
xor
stos
imul
xor
repz
leave
iret
fisubs
aam
mov
test
data16
dec
mov
cmp
jno
test
loopne
jmp
loop
int3
push
hlt
addl
jle
push
call
adc
ds
mov
sbb
jp
mov
rclb
rorb
fsts
test
outsb
push
es
lret
mov
inc
arpl
clc
cmc
xor
push
and
jl
pop
sbb
idiv
xlat
xor
add
inc
loope
dec
divl
dec
dec
push
repz
cmpl
pop
dec
jle
shrb
lods
lods
mov
inc
arpl
insb
mov
pop
clc
mov
insb
xchg
ficoml
pop
inc
sbb
fs
add
xchg
xchg
jae
cmp
cmp
or
xchg
clc
push
and
mov
std
ja
stos
sub
pop
mov
xor
lcall
mov
fimull
or
fxam
test
pop
out
push
inc
xchg
mov
or
sbb
enter
inc
and
ja
or
loope
fs
aam
nop
pop
mov
fnstenv
and
adc
pop
inc
repz
mov
pop
sbb
fbld
mov
adc
inc
push
fwait
adc
push
gs
xorl
cmpsl
xor
shlb
out
vmulsd
inc
ja
pop
and
inc
adc
dec
and
jno
add
aaa
decb
dec
ja
jb
xchg
imul
bound
xchg
xor
push
insb
daa
loopne
out
and
les
xchg
cs
push
repnz
inc
adc
test
sbb
cmp
nop
and
xor
cmp
cli
mov
dec
sti
pop
cmpsb
pop
adc
lods
jae
fucompp
dec
sub
rorb
cwtl
addb
test
dec
xchg
imul
mov
ret
push
mov
jns
fs
dec
pop
nop
into
and
icebp
addr16
movsl
je
mov
or
and
flds
jl
sbb
andb
imul
call
fdivrs
jno
pop
ljmp
sbb
inc
lret
movsl
and
cmp
push
mov
add
dec
fbld
popf
dec
mov
cmp
inc
mov
mov
aam
stos
push
mov
jmp
aas
lods
mov
outsb
inc
lret
push
lret
es
es
ljmp
in
dec
lret
repnz
mov
clc
xchg
aas
scas
xchg
cmc
arpl
gs
orps
jmp
lret
xchg
or
and
mov
fwait
stos
xlat
dec
in
cmp
push
mov
and
fwait
xchg
mov
pop
jae
insb
sbb
sahf
sub
cmpsl
cmp
mov
and
dec
out
cld
push
inc
jb
pop
mov
cmpsb
mov
lcall
sbb
mov
mov
mov
add
adc
mov
sti
scas
aam
pop
ficoml
loope
mov
mov
sbb
push
mov
add
xchg
subb
sbb
clc
stos
adc
dec
incb
fmul
test
inc
std
cmpsb
rcl
jno
aam
inc
nop
repz
add
jmp
jmp
jmp
cmp
stos
fisttps
jae
lahf
data16
adc
int
pop
hlt
ret
push
xchg
xchg
xchg
int3
jge
mov
jo
sbb
xchg
shrb
lds
movsl
gs
aad
loope
mov
cmc
xchg
push
je
jae
inc
or
ret
add
cmp
inc
mov
lock
mov
ret
push
adc
xor
shl
imul
leave
fcmovnbe
sub
leave
fwait
push
insb
loopne
out
push
jae
das
push
nop
add
mov
xchg
js
or
sti
je
mov
leave
dec
mov
inc
lahf
es
scas
jg
cs
fucomi
push
fldcw
jne
pop
and
scas
mov
mov
adc
test
mov
dec
mov
jns
push
pop
loop
jno
insb
dec
fnstsw
pop
add
sarb
sahf
jns
or
push
pop
jbe
js
push
ficompl
test
sbb
aad
movsb
pusha
frndint
pop
jbe
cli
xor
add
push
in
jo
cmp
xchg
xor
mov
xchg
popa
movsl
in
mov
out
faddl
push
xchg
and
add
inc
popa
mov
pop
std
pop
pushf
adcb
inc
inc
scas
sub
xor
mov
testb
shlb
pushf
jmp
jle
or
dec
or
add
icebp
leave
pop
xor
pop
sub
adc
dec
sbb
adc
out
test
jnp
in
orl
out
xor
mov
ljmp
dec
pop
fwait
scas
xor
jle
mov
ss
push
shl
dec
les
jmp
inc
aaa
imul
mov
push
adc
movsb
fsubrs
test
lret
out
cld
inc
cmp
adc
incl
or
addr16
or
cmp
cli
sub
push
out
adc
or
mov
imul
mov
jp
les
push
mov
ja
jl
scas
cmpsl
jb
test
mov
imulb
or
adc
dec
cmp
pop
arpl
into
repnz
dec
shll
inc
or
push
lods
js
and
mov
and
fistpl
roll
fwait
ret
dec
xor
ret
loopne
scas
push
cmp
and
xchg
out
cmpsl
push
push
lea
or
cltd
lock
fistl
mov
rorl
in
sbb
and
js
rcl
pop
pop
leave
pop
pop
add
ljmp
mov
arpl
cmc
push
jb
cmp
shll
cld
test
and
ffreep
pop
imul
repnz
mov
test
dec
dec
ljmp
sub
pushf
and
xchg
cmpxchg
mov
int
and
push
inc
push
daa
adc
lret
and
pop
rcrb
xchg
pushf
pop
xor
xor
arpl
xchg
arpl
mov
push
ss
jge
sti
ja
push
shl
fwait
jmp
and
imul
xor
jnp
insl
sarl
cmp
pop
cmp
pusha
adc
xchg
mov
ljmp
ficoms
jp
je
out
dec
lret
sbb
mul
mov
xchg
push
xor
in
aaa
pop
cwtl
mov
xlat
cmc
mov
dec
sub
push
pop
adc
jl
sub
rorb
pushf
mov
scas
or
fnsave
ss
pop
xchg
dec
jo
adc
mov
ljmp
mov
adc
push
daa
or
mov
shlb
xchg
imul
and
mov
fists
loopne
lahf
or
addb
inc
add
fwait
je
push
data16
adc
mov
fisubs
add
enter
out
notb
loopne
pushf
fdivs
adc
repnz
xor
inc
leave
mov
cmp
pop
push
push
icebp
dec
jne
sub
cmp
xlat
lret
es
dec
shlb
mov
push
pop
add
std
inc
arpl
sub
xor
loope
in
ds
loopne
push
fldt
or
sti
pop
lock
in
cmc
fisttpl
cli
ret
leave
push
push
jbe
and
pop
into
jp
std
ret
pop
fdiv
pusha
clc
out
mov
lcall
scas
sub
bound
inc
mov
jno
lods
outsl
mov
mov
add
adc
rorl
sub
xor
pop
xor
sbb
das
nop
mov
pop
roll
test
xchg
push
orb
aas
repz
dec
mov
int
mov
push
int3
cld
inc
pushf
cmp
or
ljmp
pop
aas
pop
inc
into
jne
aam
jmp
xchg
loope
sub
and
and
sbb
pop
jle
addr16
xor
mov
pop
jnp
cltd
push
test
jg
add
je
ss
in
jecxz
shll
in
cmpsb
stc
jnp
dec
xor
xor
ret
mov
push
sub
rolb
sbb
hlt
and
test
add
push
or
xor
push
jecxz
es
dec
mov
cs
sti
sbb
dec
movl
popa
sub
or
out
in
je
push
inc
mov
mov
data16
sub
adc
pop
notb
add
sti
sbb
out
outsl
jmp
mov
lods
int3
add
sti
in
cli
mov
adc
jae
jp
aam
cwtl
xchg
xlat
pop
popa
push
aad
std
sub
ja
mov
mov
mov
cmp
rol
xchg
inc
shrb
xchg
pop
iret
or
mul
xor
cmp
lods
xchg
mov
mov
xor
addb
cmpl
cld
xchg
lahf
idivl
pop
fs
outsl
dec
sub
cmp
repnz
sub
loopne
pop
call
lcall
mov
add
mov
pop
pop
push
cld
or
push
xchg
insb
mov
aaa
sbb
mov
ffree
mov
adc
or
adc
pop
das
lret
sbb
inc
stc
jbe
mov
mov
iret
lcall
push
adc
pop
scas
aad
iret
shl
incl
negb
rcr
fcoms
dec
rclb
dec
aaa
dec
cld
adc
sarb
out
jbe
mov
and
enter
in
pop
push
jnp
ljmp
adc
mov
stos
add
pop
xchg
sbb
jl
fcmovbe
pop
iret
or
fstpt
fdiv
pop
pop
sub
mov
aad
pop
mov
loopne
dec
daa
sub
lret
sub
idivl
adc
mov
test
insb
xchg
jl
push
add
popa
fsts
sbb
push
rolb
xor
push
mov
sbb
mov
pop
scas
cmpsl
inc
in
push
push
sti
dec
into
push
cld
std
loope
lahf
xor
clc
or
stos
mov
add
jne
fdivs
pop
sbb
pop
cld
out
jle
jo
jno
adc
dec
or
mov
sub
push
inc
stc
addr16
repnz
pushf
mov
les
jg
xchg
jb
jecxz
out
dec
cmpsl
movsb
dec
and
mov
movsb
loope
scas
mov
mov
xchg
pop
or
pop
xor
fs
pop
ss
scas
sbb
adc
mov
add
adc
aas
xchg
pop
mov
xchg
scas
cs
inc
es
push
adc
insb
mov
jg
push
popa
sub
and
mov
lahf
out
out
mov
inc
cmpsb
jg
test
js
fs
jl
mov
add
xchg
lcall
jle
scas
jno
and
sbb
cmc
call
cmpsl
lcall
pop
and
push
jmp
dec
vrsqrtss
repnz
leave
int
or
call
sbb
and
xor
jb
rcrl
fwait
nop
lahf
mov
xor
xchg
cs
or
scas
lahf
mov
xchg
adc
incb
mov
cs
lock
pop
push
das
stos
xor
cmp
sbbl
add
jl
adc
and
roll
les
push
into
nop
xchg
sbbl
aaa
imul
sub
sub
xor
push
pop
testb
or
insl
test
stos
adc
fiaddl
dec
adc
mov
shl
sbb
hlt
int3
xchg
imul
aam
mov
inc
mov
cmpsb
add
mov
adc
test
scas
lcall
mov
xchg
imulw
sbb
adc
add
and
pop
sub
jnp
mov
dec
mov
dec
ljmp
int
inc
stos
lahf
jmp
inc
fldenv
testb
mov
adc
loopne
xor
in
mov
xchg
inc
sbb
rorb
cmp
clc
stos
cmpsl
pop
adc
mov
or
insb
popa
adc
jle
or
or
mov
mov
add
pop
scas
test
adc
add
fstps
std
inc
pushf
out
pop
xchg
sub
or
icebp
cmpsl
bound
jae
fisubs
cmpsb
add
or
addr16
shlb
jge
data16
pushf
dec
jo
jl
lea
cs
repz
mov
outsl
call
sahf
iret
in
dec
mov
sub
sbb
push
dec
adc
adc
std
es
cmpsl
and
dec
imul
jl
push
int3
jbe
aas
sub
jne
xor
adc
inc
pop
mov
sbb
push
int3
movsb
scas
orl
test
lret
mov
lahf
aad
xchg
jns,pt
mov
jae
mov
movsl
rorb
push
sbb
fnstcw
test
ljmp
add
mov
and
por
add
popa
mov
sbb
sahf
sahf
dec
cwtl
mov
cmpsb
in
xlat
or
xchg
mov
fdivl
ficoml
pusha
xchg
adcl
sub
loopne
inc
xchg
inc
stc
das
jp
shll
minps
imul
push
sub
sub
rcl
sub
adc
ret
test
or
xor
and
xchg
adc
insl
jp
inc
and
lahf
pop
jne
push
sub
lea
imul
and
inc
sub
cmp
je
inc
es
insb
inc
push
sarl
inc
inc
sti
mov
imul
ret
push
cmp
test
mov
mov
outsb
xchg
mov
in
clc
ljmp
test
cmpsb
fwait
cmpb
push
cmp
fldcw
xchg
icebp
shlb
mov
cwtl
jp
mov
shlb
and
pop
xchg
ret
ror
jo
cli
push
inc
int
pusha
mov
lcall
xorb
loopne
sbb
ror
and
mov
cmpsb
ljmp
into
sub
repnz
shlb
repz
int
mov
jo
or
stc
stos
push
sbbb
push
loop
xor
adc
fiaddl
fists
data16
or
adc
cmpb
lret
fcoms
lods
xchg
pop
popf
test
inc
cwtl
cmp
inc
iret
sbb
inc
xchg
push
xor
outsl
push
push
cmp
lret
enter
fwait
push
xchg
push
ret
popa
hlt
cmp
nop
dec
jmp
jmp
imul
lods
jbe
rcrl
sbb
adc
adc
fwait
repnz
jg
push
fisubl
push
imul
or
sub
ret
jmp
test
dec
fstps
cld
cmpb
mov
fldcw
push
imul
xchg
or
and
dec
xor
pop
fmuls
push
push
scas
fsts
jmp
arpl
push
mov
and
jo
cli
dec
sbb
sarl
pop
sub
cmp
not
iret
mov
scas
push
dec
push
dec
fst
cmp
hlt
xchg
outsb
lcall
jb
jb
mov
xchg
std
mov
repnz
mov
icebp
mov
hlt
std
ds
lret
arpl
jmp
in
fsubl
pusha
pop
mov
hlt
sub
and
sub
adc
mov
and
rcll
aas
mov
rolb
ja
jae
adc
pop
les
mov
xor
inc
das
ret
xor
fs
mov
dec
dec
cmp
fst
lea
add
cmc
sarl
cltd
jl
push
mov
outsb
adc
pop
insb
lahf
push
popf
xchg
jbe
adc
cli
out
pop
mov
xorl
std
insb
sub
fwait
out
inc
sbb
mov
cli
push
lds
flds
popa
push
sub
dec
fisttpll
inc
xchg
mov
dec
mov
repnz
and
scas
cli
dec
js,pn
jle
fs
sub
test
sbb
or
xchg
pop
xor
insb
iret
xchg
xchg
daa
nop
xchg
mov
nop
xchg
push
stc
sti
sbb
jp
imul
mov
in
shr
xchg
mov
loop
imul
xor
xchg
pop
stos
xchg
les
xchg
cmp
xor
into
cmp
dec
sub
cwtl
sub
inc
pop
cwtl
xor
inc
cli
push
nop
rclb
stc
movsb
test
mov
mov
icebp
arpl
scas
test
xchg
dec
adc
dec
mov
sbb
pop
test
movsl
out
cmp
mov
sbb
ret
push
dec
addr16
icebp
adc
popa
sub
push
lret
xchg
xor
jb,pn
shl
sbbb
lea
push
je
push
adc
scas
mov
in
xor
push
std
and
data16
mov
rclb
mov
push
ja
xchg
or
cmp
stos
push
daa
adc
das
xor
pop
inc
or
xor
lret
orl
mov
xchg
add
inc
push
jmp
scas
lock
adc
fidivs
inc
cmp
mov
repz
aam
jb
cmc
jbe
pop
mov
cmp
mov
and
cmp
mov
ss
lods
or
jecxz
inc
mov
mov
push
popa
pop
inc
enter
sbb
repz
or
mov
out
mov
jecxz
fs
adc
loopne
fiadds
test
dec
fistps
push
sbb
in
frstor
test
inc
lds
mov
pop
popa
icebp
xor
ret
cltd
fwait
stos
and
fimull
xchg
cmpsb
mov
in
divl
clc
sti
ret
mov
out
adc
jl
in
add
idivb
out
aad
daa
xor
test
xlat
cmpsb
push
sub
loope
das
imul
adc
jnp
scas
fwait
or
aas
mov
dec
mov
leave
push
pop
ljmp
lds
mov
js
mov
js
xchg
nop
jae
icebp
mov
cmc
divl
jge
shlb
and
bound
mov
cmp
arpl
dec
jmp
aam
xor
je
and
fucomip
ret
cmp
and
and
int
pop
fs
int3
sti
lods
sub
mov
pop
jmp
cmpsl
inc
imul
fcompl
jae
inc
lret
sub
sub
test
enter
mov
js
aam
and
jbe
ja
sbb
roll
xlat
pop
jle
or
pop
xchg
int3
lcall
ret
mov
pop
push
inc
rorl
add
inc
mov
mov
loop
sbb
pop
mov
mov
aas
mov
jge
les
add
out
jecxz
or
rorl
and
jae
shl
pop
inc
rep
mov
sbbb
aas
scas
leave
xlat
xchg
dec
out
mov
clc
lret
pop
xchg
insl
xchg
jp
push
jge
mov
add
ret
out
mov
gs
pop
es
cwtl
mov
mov
cltd
mov
js
add
pop
push
divb
movsb
pop
pop
cmpsl
jg
stc
neg
adc
lds
pop
xchg
push
inc
ficoml
sub
cmp
pop
adc
jbe
mov
popf
testb
sbb
test
sti
cmp
mov
adc
enter
push
lea
jb,pt
or
insl
jmp
cmp
add
and
pop
lock
mov
in
fwait
sub
push
das
sbb
fisubrl
dec
ret
inc
mov
xchg
pop
cmp
out
iret
cwtl
cmp
arpl
int3
pop
push
imul
fxch
inc
ja
cmp
dec
dec
inc
out
jp
fldenv
dec
and
ja
push
sarb
xor
pushfw
dec
jecxz
ret
das
imul
je
je
into
nop
mov
xchg
add
and
ja
test
repnz
sub
clc
das
xor
leave
and
insb
das
imul
jmp
add
cmp
fdiv
or
and
fwait
outsl
enter
xorl
mov
loop
mov
and
sbb
imulb
notb
std
mov
cs
cmp
loopne
cmp
stc
test
imul
sub
int
idivb
fsubrs
imul
mov
test
icebp
iretw
outsl
xor
inc
mov
push
cwtl
sbb
inc
or
dec
mov
cmc
cmp
or
pop
mov
int3
add
loopne
xor
cwtl
enter
adc
scas
pop
lods
cmp
cld
test
jmp
popl
cmp
stc
aad
or
adc
fs
adc
sarb
leave
pop
popf
cld
in
mov
xchg
sbb
insl
cli
int3
adc
sub
decb
iret
jmp
sub
lods
clc
repz
scas
xchg
xchg
cli
cmp
sahf
mov
out
scas
ret
jmp
out
repnz
jnp
add
mov
inc
adc
dec
adc
cmp
sbbb
repnz
mov
pusha
testl
cmp
out
ret
pop
ret
cmp
jbe
xor
sahf
sarb
lcall
popa
mov
mov
dec
pop
and
fisubrl
mov
push
shrb
add
std
xchg
cmp
stos
push
in
inc
mov
iret
stos
mov
add
jb
add
pop
repnz
xor
cwtl
inc
dec
pop
pop
add
shlb
mov
outsb
cmp
insb
ret
ret
outsl
mov
mov
cmpsl
mov
lods
cwtl
sbb
lahf
test
or
mov
jo
test
mov
push
bound
push
fdivs
mov
je
jmp
enter
dec
mov
rcrl
cmc
and
push
or
cmp
outsl
push
sub
push
notb
xchg
aam
lds
xor
bound
lahf
je
mov
adc
shlb
push
jge
mov
out
bound
mov
andb
js
xchg
jmp
and
pop
push
ret
cmp
lock
pop
jmp
mov
fdivl
ja
and
or
popa
pop
movsl
mov
repz
add
arpl
adc
sarl
cmpsl
pop
ss
xchg
mov
xor
dec
jne
xchg
aas
jnp
outsl
ret
nop
sbb
push
xchg
insl
dec
add
xor
pop
mov
and
test
js
lret
enter
xlat
mov
jno
xor
int3
push
stos
or
mov
or
jg
dec
rcll
dec
aaa
or
add
sbb
test
adc
bnd
pushf
lahf
xor
inc
outsb
push
xor
mov
stc
mov
push
and
addr16
add
ret
xchg
into
xchg
icebp
pop
pop
sub
jb
cmp
push
mov
and
pop
les
sub
or
pop
rcrb
arpl
js
mov
aaa
and
imul
adc
and
mov
xchg
fwait
push
cld
add
shrl
jne,pt
les
xchg
dec
ds
lds
ret
mov
mov
lods
and
call
mov
aaa
imul
in
mov
lret
ret
pextrw
sub
sub
gs
xlat
je
xchg
xchg
pusha
lea
jp
les
and
dec
push
inc
or
push
sub
mov
ret
mov
inc
adc
dec
sbb
imul
insb
movsl
imul
mov
and
daa
movsl
cmpsl
test
xchg
xchg
inc
gs
adcl
das
jbe
cmp
test
rorl
and
mov
or
fcmovbe
ds
add
jo
dec
mov
call
push
jae
mov
mov
jbe
ret
test
dec
pusha
pop
or
insl
xchg
addr16
fsts
xchg
out
jle
inc
test
push
xchg
pop
inc
pop
stc
sub
cmp
sub
daa
cli
pushf
mov
push
add
adc
insl
cli
dec
push
in
dec
shll
push
mov
push
ljmp
pop
push
hlt
ret
xchg
ret
jl
mov
xchg
cmp
das
mov
xor
inc
or
mov
mov
or
into
ljmp
in
jg
mov
ja
xchg
fcompl
xchg
gs
dec
pop
int
lahf
add
pop
rorl
mov
mov
lahf
aas
xor
ljmp
leave
paddusw
fs
lret
loopne
mov
stos
mov
lahf
mov
cmp
insl
enter
rclb
les
or
or
jp
frstor
movsb
mov
push
xchg
loopne
push
jns
in
lods
cltd
mov
add
lock
lods
mov
in
lds
cmpb
popf
jo
dec
out
pusha
fcomps
arpl
mov
aas
iret
pop
int
mov
inc
fnstenv
ret
scas
and
mov
or
sti
lock
dec
outsl
ret
popf
in
rcrl
adc
sahf
enter
push
sub
out
push
or
pop
aaa
sarl
inc
fdivs
xor
out
div
arpl
call
push
repz
int
xchg
push
orb
mov
xchg
stos
cmpb
add
add
and
inc
push
and
ss
sub
sahf
addr16
pop
adc
sbbl
mov
xlat
push
out
roll
jmp
decl
jne
cmp
je
pop
lods
subl
mov
and
in
and
bound
ljmp
ret
cmc
sbb
or
in
in
nop
mov
icebp
insb
xchg
or
jg
pop
mov
xchg
ds
add
inc
sahf
dec
mov
jno
pop
xor
mov
sbb
fwait
add
test
sub
or
dec
dec
xchg
stos
aad
dec
push
popa
and
jle
lret
inc
or
inc
sub
jbe
loope
decb
mov
xchg
jle
fcomps
pop
fisubs
cmp
ljmp
pop
sub
icebp
inc
push
ja
in
dec
xor
jo
testl
cmpsl
mov
adc
push
or
and
mov
fldcw
lock
bound
imul
je
dec
jmp
mov
out
outsb
ja
data16
fstl
icebp
cmpsb
mov
pop
stos
sub
in
xchg
std
pop
in
add
mov
and
xchg
fistpll
sbb
sbbl
cmp
popa
sbb
jmp
adc
cmpsl
ja
mov
mov
dec
push
or
jbe
adc
test
adc
jp
cmp
stc
out
aaa
callw
aaa
orb
cltd
jb
scas
sbb
test
cmp
lds
mov
dec
xorl
pop
push
repz
mov
pop
or
inc
fisubs
popf
imul
sti
clc
cmpsl
sbb
inc
ja
imul
loope
mov
push
dec
scas
adc
mov
pop
mov
in
pop
rcrl
lods
lret
call
sbb
or
out
lea
mov
imul
jb
mov
in
or
jnp
xchg
add
shr
sbb
in
xchg
dec
mov
xchg
push
adc
jecxz
sub
jns
push
jl
inc
pusha
push
mov
mov
enter
jmp
fadd
mov
lock
cmp
scas
mov
das
out
xchg
cmp
cmpsb
js
pop
lods
push
dec
arpl
stc
cltd
or
std
sar
push
inc
test
clc
xchg
jns
or
lcall
sti
cli
repz
adc
fisubs
in
vcvtpd2ps
shrl
ret
adc
in
mov
ss
add
mov
fnstsw
lret
add
das
inc
sarb
mov
mov
popf
fcoml
adc
jb
mov
jle
push
adc
cmpsl
jecxz
and
mov
aaa
ret
test
ja
addr16
mov
xchg
aaa
cld
ss
gs
adc
out
insl
mov
add
out
xchg
aaa
mov
cmpsb
ljmp
inc
shrl
adc
cmp
loopne
shl
or
cmp
mull
jo
mov
dec
and
repz
clc
mov
xchg
xchg
rclb
dec
mov
cmpb
int
mov
jns
fcompl
rcr
push
insl
iret
sub
loope
aam
mov
mov
fstpt
mov
scas
in
lahf
out
xor
out
mov
mov
xor
and
dec
fcomip
stos
aam
lods
ror
dec
pop
and
cmpsb
int3
pop
jecxz
mov
jns
push
mov
mov
out
out
sbb
sub
stos
mov
xchg
mov
jp
inc
dec
insl
push
mull
nop
lods
fucom
adc
outsl
inc
add
and
outsl
add
lahf
xor
fidivrs
movsb
mov
push
lea
movsl
shrl
stos
sahf
lcall
sbb
aad
repnz
fs
decb
xor
fwait
adc
xor
in
decl
jbe
mov
sbb
push
mov
scas
arpl
and
out
and
mov
andb
xchg
inc
dec
mov
push
lcall
pop
mov
jno
loope
scas
add
xchg
sbb
cmp
dec
je
sbb
adc
xchg
fcmovb
icebp
and
jmp
test
test
cwtl
jo
push
pop
mov
xchg
mov
loope
xchg
fcomps
stc
mov
xor
mov
jbe
cltd
test
cmc
or
andl
aas
shr
test
cmp
sub
jne
and
pop
xlat
aam
xchg
not
aaa
arpl
scas
clc
cmp
jno
das
dec
sahf
cli
xchg
rolb
jp
push
jb
push
sub
mov
mov
aad
popf
mov
mov
subb
cmc
jo
fisubrl
in
loop
xchg
lahf
xor
xchg
jge
out
addb
sub
in
cwtl
out
insb
mov
arpl
push
lret
or
jl
or
push
push
dec
movsl
sbbb
dec
imul
sub
sub
or
call
dec
sti
inc
dec
cs
sbb
mov
pushf
or
fiadds
cld
mov
cmp
push
push
into
out
and
jg
adc
jmp
push
adc
cmp
mov
movsb
fldcw
cwtl
aam
inc
push
jbe
mov
test
enter
and
test
adc
inc
push
push
insl
insb
xor
and
inc
push
movsl
push
arpl
or
pop
mov
xor
out
mov
xchg
xchg
inc
inc
pop
fsubrs
bound
inc
popa
int3
sbb
mov
mov
mov
jne
jb
inc
push
das
adc
dec
dec
lods
xorb
sub
cmp
in
jg
xchg
xchg
mov
stos
dec
in
pop
mov
sub
push
cmp
xcrypt-ctr
cmpsl
popf
mov
cmp
mov
jae
lret
movsl
les
push
filds
sbb
testb
add
pop
adc
cmp
mov
dec
jno
es
ds
pop
jbe
push
xor
sahf
jge
pushf
mov
sub
push
daa
mov
adc
aam
shlb
and
sahf
mov
sbb
decb
xor
inc
push
xor
lret
pop
sub
jo
inc
divl
sub
pusha
sub
addr16
dec
jl
enter
lahf
xchg
test
lock
mov
and
gs
fsubr
jg
jl
mov
jne
pop
dec
aad
test
mov
mov
xchg
cmp
loopne
cwtl
stos
adc
xorb
and
imul
inc
inc
cmc
or
dec
sbb
dec
fldl
mov
int3
pop
frstor
xor
pop
adc
rolb
xchg
idivb
mov
clc
addr16
pop
inc
push
mov
fsubl
pop
jmp
mull
inc
lret
and
push
dec
mov
test
jge
sti
dec
add
sti
jnp
add
inc
xor
ljmp
mov
sub
outsl
pop
mov
lods
xor
jb
cmp
push
ljmp
mov
addr16
iret
int
sbb
jnp
and
xchg
popf
jg
pop
cs
mov
imul
scas
les
adc
sub
loope
bound
mov
in
and
add
in
dec
inc
cmpsl
sub
pop
jns
push
sbb
dec
rep
cmp
jg
ljmp
jae
loop
add
mov
add
stos
fbstp
xor
dec
pop
push
aad
imul
jl
enter
mov
pop
cld
dec
inc
mov
mov
cltd
dec
pop
or
shrl
fiaddl
inc
mov
into
inc
pushf
jle
aaa
outsl
jmp
xor
icebp
mov
jb
fsubrs
fadds
push
mov
pushf
push
xlat
mov
test
lds
leave
pop
stos
sub
xor
pop
pop
in
shrl
rcll
sub
iret
orb
sbb
flds
imul
dec
cmp
sti
daa
imul
hlt
xor
add
insb
lods
sbb
imul
pop
dec
int
fcompl
stos
loop
add
cmpl
jb
xchg
pop
lods
mov
push
pop
test
mov
ficoms
mov
push
test
add
jecxz
adc
orb
xorl
sub
mov
and
aam
cmp
inc
daa
push
subb
mov
inc
mov
pop
adc
push
sub
or
pop
pop
push
add
mov
adc
pop
int
loopne
sbb
test
push
rcll
inc
push
in
add
testl
jb
addr16
or
adc
xchg
scas
test
adc
shll
imul
scas
or
adc
mov
mov
shrl
in
ja
push
jl
fisubl
pop
lock
aas
pop
cmpsb
in
loop
mov
push
in
jl
inc
les
movsl
add
jmp
ffreep
xor
add
lods
rorb
ss
scas
jne
cmpsb
xor
push
dec
loop
dec
sub
or
fdivrp
in
shrb
push
push
popf
add
mov
daa
fpatan
push
ss
out
fadds
insl
popa
stc
mov
push
push
sarl
jno
gs
mov
xchg
fdivrl
aam
scas
inc
mov
sub
call
mov
sub
jnp
mov
sarl
ss
mov
mov
sbb
stos
cmc
leave
rep
subl
push
lock
shrl
idiv
enter
cmp
in
lea
in
push
sub
hlt
popf
inc
lret
dec
pop
std
leave
cmp
sub
test
loopne
sub
pop
bound
mov
fmul
cmpl
xchg
cmp
jle
or
jns
mull
test
sbb
lret
insb
push
pavgw
test
inc
pop
dec
pop
push
aam
push
shlb
inc
cmc
cmp
es
sbb
add
jb
fists
add
repnz
imul
dec
mov
push
nop
push
arpl
outsl
testb
sbb
fadds
int3
jno
fnstenv
push
hlt
inc
test
ss
jnp
cmp
adc
pop
mov
push
mov
fdivrs
pop
ljmp
gs
std
cmp
adc
lret
pop
sub
and
jmp
xlat
addr16
and
test
cmp
mov
ljmp
aad
add
xor
lea
lods
popl
sub
cltd
push
dec
mov
rcrb
scas
mov
mov
fwait
pop
xor
out
mov
pop
or
sbb
xchg
lret
filds
cli
add
cmp
stos
lods
int3
xor
jns
negb
mov
imul
iret
cmp
frstor
inc
stc
test
and
inc
ret
fidivrs
outsb
bnd
js
add
out
pop
jbe
lfs
lea
lret
mov
push
jp
mov
mov
adc
jp
cmp
loop
mov
stc
jne
pop
or
imul
scas
leave
loopne
or
lea
xor
jp
sub
movsb
cmp
lods
sub
inc
fisttpl
pop
jbe
fstps
shrb
mov
ljmp
dec
jl
loop
xor
push
mov
push
loop
adc
inc
add
dec
je
pop
das
out
icebp
mov
dec
cmp
faddl
mov
xor
pop
fwait
aas
movsb
sub
addr16
fsubs
sub
lods
outsb
aaa
and
rorb
scas
mov
jp
call
movsb
setnp
cmp
add
xor
insb
stos
lods
sbb
repz
jmp
cmp
sub
fcos
shll
lds
arpl
in
xchg
dec
xchg
add
cmp
out
movsl
std
fiadds
loope
adc
outsl
out
loop
push
mov
les
adc
lds
jae
mov
in
cmc
les
insl
inc
jg
sbb
sub
inc
addb
test
out
lds
xchg
mov
mov
or
dec
sbb
jg
shlb
scas
subl
sub
shr
repz
mov
fcompl
in
xchg
sahf
je
xor
fcoms
std
int3
adc
nop
sbb
outsb
mov
mov
adc
adc
imul
inc
enter
xor
and
mov
push
pop
rorl
xchg
idiv
ds
int
stc
or
push
in
fldcw
and
and
and
fsubrs
shll
jmp
repz
mov
or
addr16
lods
add
sbb
out
adc
jmp
mov
jmp
rolb
sub
pop
mov
jp
jmp
ljmp
clc
cmp
stc
mov
jno
dec
lods
in
jle
add
push
lcall
add
in
mov
adc
stos
xchg
push
fimull
jp
inc
pop
mov
jb
test
jb
lods
test
xor
mov
xlat
popa
in
sub
icebp
pop
xor
je
cwtl
push
push
add
fsubrl
pop
lds
push
xchg
push
mov
in
xor
mov
sub
mov
mov
adc
push
push
cmpsl
lahf
test
sti
gs
pop
ljmp
test
jns
subl
sub
xor
mov
push
loop
adc
mov
outsb
aam
jmp
pusha
in
xor
stc
lret
and
aaa
mov
xchg
repnz
inc
mov
loope
or
mov
push
aad
dec
jp
test
xchg
xor
jno
xlat
jo
mov
push
bound
out
pop
dec
shl
hlt
adc
or
add
and
cmpsl
pop
xchg
push
or
jecxz
loopne
mov
push
popf
js
jle
xchg
out
ss
pushf
sbb
subl
data16
adc
out
bound
xchg
cs
add
sub
add
shl
add
repnz
jns
rcrl
xchg
je
pop
jl
add
sbb
mov
clc
stc
xchg
iret
ret
pushf
lcall
cmp
rcrl
pop
ret
mov
and
lock
push
maskmovq
notl
or
test
jmp
xlat
sar
mov
jmp
sub
sbb
cwtl
and
and
insl
push
adc
bnd
xor
pop
mov
and
lods
inc
inc
jl
mov
mov
repnz
add
or
repnz
mov
mov
hlt
fnsave
xchg
dec
sahf
mov
xchg
ss
or
jl
sub
les
inc
push
sbb
pop
fincstp
jne
pop
daa
test
mov
xorb
movsb
jo
cmpsl
andb
fsubr
cmpsl
mov
testl
arpl
xor
push
sti
dec
mov
cld
dec
fstpl
movsb
sbb
jne
mov
shlb
and
lods
add
stos
or
cld
shl
repnz
pop
out
mov
mov
or
sbb
loopne
cmp
mov
jo
pop
mov
push
mov
lret
dec
les
loope
push
sub
stos
jecxz
iret
push
pop
aas
jp
pop
and
dec
add
daa
pusha
rcl
mov
sete
cmp
pop
lock
hlt
pushl
fstpt
imul
es
aad
inc
cmpsl
or
xor
push
cmc
popa
divl
ss
sub
or
testb
loopne
or
xor
pop
pop
sarb
fcompl
imul
iret
push
loope
mov
dec
out
fisttpll
insb
or
data16
dec
xor
lea
pop
test
nop
fistps
imul
ljmp
add
gs
pop
pop
push
cltd
rorb
add
mov
xor
sahf
cmp
adc
test
or
mov
sbb
rcll
dec
cmpsb
cmc
mov
lock
cmp
dec
data16
sbb
xchg
testl
popa
cwtl
add
inc
repz
pop
ftst
mov
dec
ret
out
mov
pop
xlat
mov
add
sub
lock
lods
repz
jae
dec
xchg
jecxz
repnz
mov
lock
stos
rcrl
add
out
hlt
and
lret
xchg
inc
decb
shll
inc
popf
push
xlat
inc
mov
or
hlt
fcoms
mov
hlt
nop
xorb
adc
add
mov
mov
jle
mov
ret
fwait
pop
sbb
pop
andl
ficoml
push
push
out
mov
into
mov
das
xor
stos
adc
lret
shl
sbb
sbb
mov
test
and
or
in
inc
xor
ljmp
cmpsb
pop
inc
or
jle
xchg
jno
outsl
iret
mov
jp
cmp
sub
inc
outsl
loope
out
cmp
sub
rorl
out
imul
xchg
add
and
lock
cmp
xchg
add
out
jg
pop
pop
repnz
cmp
mov
lds
and
pop
push
add
lods
jl
and
aaa
pop
jmp
mov
js
pop
xchg
lahf
add
inc
fadds
xor
addr16
push
les
cli
push
dec
inc
pushf
int
sbb
sarl
inc
jmp
dec
les
rolb
cmpsb
pop
cmp
sbb
js
and
inc
daa
fdivrp
fdivrs
adc
pop
rcrl
xchg
aaa
mov
leave
cmp
xor
xor
das
push
jne
sbb
push
int
inc
cltd
pushf
dec
mov
push
add
jge
mov
adc
inc
adc
ret
jnp
iret
push
hlt
stc
dec
lret
dec
mov
push
jns
inc
cmp
pop
push
push
test
nop
xor
lods
push
loopne
inc
ljmp
cli
scas
push
or
jae
rcrb
idivb
loope
sbb
pop
or
sub
jne
iret
arpl
push
out
mov
add
adc
pop
dec
loop
ds
cmp
shrl
ds
dec
jo
sbbb
inc
pop
push
decl
jo
mov
adc
fmulp
into
xchg
hlt
mov
mov
inc
shlb
stc
cld
jne
test
mov
lcall
push
and
add
pop
jnp
arpl
jmp
repz
jl
cltd
ret
hlt
sbb
xor
dec
and
xchg
mov
movsl
mov
fs
in
sahf
jge
roll
jns
test
or
push
sbb
pop
inc
pop
xchg
or
out
adc
cmp
jp
lahf
mov
and
repz
cli
les
adc
jno
test
xchg
and
shll
push
dec
cmp
pop
sbb
lret
das
notb
stos
jns
xchg
mov
and
push
ss
adc
and
stc
pop
mov
loope
arpl
mov
ds
dec
xchg
and
mov
je
pop
insl
jno
andl
lahf
sbb
mov
btr
fdivrl
lock
arpl
leave
push
faddl
xor
jo
inc
sti
loopne
mov
stos
mov
sbb
int
adcb
xor
jae
lock
lahf
repnz
cli
fs
or
dec
popf
adc
addr16
fisttpll
dec
push
out
fidivl
adc
and
push
or
movsb
push
ret
cmpsb
aas
inc
test
mov
rorb
jo
imul
hlt
ret
jbe
andb
popl
inc
int3
cmpsb
clc
jb
or
jg
lock
xchg
xchg
sti
sbb
ret
aad
mov
pop
std
add
lea
jle
es
push
test
push
stos
lods
js
pop
shlb
push
pop
int3
inc
sbb
mov
xchg
cmpsb
inc
xor
cld
jno
loop
test
bound
shl
jl
mov
and
xchg
xorb
std
mov
xorl
and
js
icebp
fistpl
insb
push
push
dec
and
mov
cmp
loop
push
cs
ja
fwait
lods
or
cwtl
sub
fnstenv
or
cmc
das
popf
stc
xchg
and
adc
dec
jbe
jg
jl
rcrl
and
inc
sbb
jp
int
pop
sbb
push
xchg
popa
pop
dec
cmpsl
or
xchg
mov
test
push
jb
scas
adc
jae
aam
shlb
mov
inc
dec
leave
adc
cmpsl
push
das
les
cmp
sbb
push
clc
xchg
xor
sub
mov
mov
iret
adc
lds
das
sbb
pop
push
jae
in
pop
call
mov
sub
jne
adc
jb
sub
fists
fmuls
lcall
outsb
mov
inc
pop
mov
sub
loopne
push
insl
mov
cld
cmp
hlt
scas
js
mov
mov
jge
or
xor
sub
fs
push
cmp
cmpsl
pop
or
fisttpll
mov
test
icebp
imulb
fwait
mov
push
adc
lods
xchg
rep
mov
sar
out
out
mov
push
popa
rcrl
sub
mov
fistpl
or
cmpsl
shrb
iret
fbld
sbb
sbb
jno
push
sub
jp
mov
push
loop
push
shrl
ja
jmp
outsl
pop
xor
fstl
scas
popf
cmpsb
sbb
xchg
sbb
xor
xchg
dec
call
jp
mov
iret
mov
add
pop
mov
dec
pop
aad
push
xor
loopne
pop
add
add
loopne
icebp
jmp
cwtl
mov
fisttpll
sub
rclb
icebp
jg
enter
add
outsb
adc
lret
push
mov
shr
lret
loopne
cs
pop
cmp
lret
mov
add
ficoml
pop
mov
repnz
xchg
xchg
pop
js
pop
adc
sbb
push
cmp
xchg
nop
fs
push
ss
cli
pop
jnp
ljmp
orb
mov
mov
jg
add
cmp
fbstp
xlat
fiadds
divb
or
outsl
jnp
xchg
jno
push
xlat
pushf
nop
mov
int3
or
test
sub
push
icebp
sub
js
lahf
mov
cmp
fmulp
dec
mov
rolb
mov
stos
adc
pop
dec
mov
jae
lret
inc
out
inc
inc
stos
arpl
fwait
int
mov
inc
xchg
or
scas
and
jmp
mov
mov
call
add
mov
pop
insb
cmc
jo
and
subl
cmp
fdivrs
cmp
push
mov
pushf
push
hlt
push
sub
imul
ret
loop
jmp
not
ret
and
or
bound
pop
xor
mov
mov
push
and
sub
push
sub
leave
dec
mov
pop
fcmovne
loopne
adc
sbb
lcall
arpl
xchg
cmp
arpl
imul
shrl
jg
addl
inc
xchg
jns
leave
sbbl
mov
xchg
adc
mov
shrb
sub
test
mov
ror
aaa
les
fisttpl
imul
pop
sub
cmp
lret
xor
dec
addr16
incb
mov
stc
xchg
push
mov
and
dec
pop
jnp
pop
mov
aad
dec
pop
mov
mov
stos
cltd
pop
in
adc
cmp
je
adc
int
xchg
jle
sbb
push
inc
sub
repnz
mov
add
jo
mov
push
jns
sbb
fs
jmp
cli
mov
push
pop
pop
out
xchg
in
repz
rcrl
iret
mov
dec
fs
push
pop
pop
in
mov
in
push
iret
inc
adc
icebp
mov
test
and
or
lcall
lret
test
test
aaa
push
xlat
cltd
mov
movsb
sbb
push
in
movsl
or
insb
mov
mov
cmp
push
mov
push
push
cli
lahf
jo
pop
or
sub
jl
ret
data16
out
push
fisubrs
pop
mov
and
mov
stc
divb
mov
pop
pop
shll
dec
enter
roll
mov
push
adc
inc
mov
jl
mov
pop
sbb
loop
push
adc
inc
loope
push
insl
sti
jo
push
mov
lahf
sbb
lods
repnz
add
push
out
mov
jo
lret
and
cmp
xor
into
xor
jge
dec
xorl
pop
xchg
iret
es
mov
inc
stc
pop
dec
out
cwtl
mov
sub
pop
cmp
cmp
je
push
xchg
jg
out
mov
dec
fists
add
cmp
mov
je
cmc
cmp
sub
int3
push
out
fs
push
gs
xchg
cmpb
xchg
outsl
out
movsl
jmp
fs
sub
clc
jp
outsl
adc
es
enter
mov
test
cld
inc
fimuls
int
in
or
pop
js
pop
xor
addr16
xchg
movsl
imul
ljmp
dec
mov
fnstcw
dec
mov
sbb
adc
test
shrl
aad
dec
jbe
scas
call
xor
leave
gs
maxps
ret
xor
hlt
mov
clc
adc
pop
aam
adc
int
jbe
jnp
push
add
jge
bound
cli
and
mov
insb
movb
leave
popf
enter
lahf
fs
popf
pop
lds
hlt
shlb
mov
iret
mov
and
fnstenv
cmp
and
out
sahf
mov
fiaddl
aas
mov
ret
mov
sbb
and
popf
sbb
inc
sub
lea
inc
rorl
ret
int
and
inc
push
ds
pop
mov
add
sbb
nop
inc
inc
iret
mov
xor
shlb
clc
int
add
test
fstpl
lock
cli
fadds
mov
imul
scas
aas
insl
inc
jnp
aaa
cli
sahf
mov
clc
push
sub
stc
iret
cli
fildl
cmp
lods
in
in
add
push
pusha
mov
jb,pn
xchg
loop
pop
sbb
notl
jge
dec
push
mov
bound
sbb
push
or
int
jns
aas
out
ret
repnz
or
xor
int3
or
lahf
fisubs
dec
test
filds
lods
rorl
cmp
dec
mov
jb
stc
dec
dec
gs
pop
push
loope
mov
fwait
mov
dec
mov
fsubrp
cmpps
xchg
mov
push
jnp
xchg
xor
mov
xor
or
push
fldcw
sbb
xor
push
dec
add
lods
push
mov
jb
nop
out
lds
cmp
aad
fisubs
jmp
test
insl
and
unpckhps
cmp
insl
in
movsb
in
inc
repz
xchg
pusha
cmpsl
mov
sar
cli
cli
dec
gs
imul
aaa
in
mov
cs
icebp
sarl
dec
mov
test
xor
fsts
cmp
mov
sbb
lret
sub
or
aas
idivb
outsb
js
jo
shl
sbb
inc
mov
jle
xchg
jo
insb
cli
std
or
pop
mov
jbe
ja
mov
xchg
outsb
or
xor
inc
push
xchg
pushf
mov
inc
in
idivl
push
js
and
dec
mov
out
dec
and
inc
adc
lcall
sbb
bsr
popf
ss
xchg
and
push
js
sub
outsb
cmp
stos
and
imul
arpl
xchg
mov
jno
dec
add
adc
add
add
data16
jb
mov
sbb
imul
and
arpl
dec
movl
and
outsl
mov
mov
pop
mov
sbb
decb
aam
daa
jb
mov
int3
int
mov
mov
add
addb
jl
sub
std
mov
movsl
mov
xor
cmp
int
inc
aas
xchg
hlt
rol
lods
cmp
dec
or
fnstsw
dec
outsb
pop
orl
in
enter
xchg
mov
leave
inc
icebp
ss
test
add
out
jl
pop
pop
hlt
jmp
lret
jl
pop
dec
push
pop
fdivs
xchg
fs
lods
aad
pop
filds
push
jg
dec
inc
sbb
outsb
clc
int
and
mov
dec
iret
sub
lcall
or
push
aas
into
mov
jecxz
mov
dec
xchg
testl
pop
inc
stos
mov
xchg
outsb
dec
inc
and
test
stos
sbb
in
cmp
test
push
shrb
pop
leave
out
out
fcmovne
sbb
leave
stos
imul
or
lods
cmp
sub
pop
test
fcoms
jns
lds
or
out
jg
cltd
adc
xor
ljmp
outsb
inc
jne
xchg
or
mov
pop
pusha
sar
dec
ror
aad
cwtl
inc
push
movsl
repz
in
mov
into
pop
cmp
jge
imul
add
or
or
les
rcl
sub
out
aas
add
jecxz
int3
dec
push
mov
pop
outsl
test
in
push
aaa
sarb
xchg
ljmp
clc
sahf
mov
mov
add
jns
and
mov
sbb
nop
test
mov
mov
sbb
and
and
mov
dec
aad
jnp
jno
bound
xor
and
loop
inc
push
sarl
mov
in
pause
out
pop
and
cmp
or
sbb
mov
sti
jo
jo
fisttpll
or
sbb
or
add
cmp
cli
sbb
xchg
sub
inc
mov
mov
jns
out
enter
sbb
dec
into
jns
insl
fcmove
loopne
ljmp
jae
les
in
imul
sti
cwtl
arpl
mov
xchg
lock
pop
mov
icebp
xor
mov
inc
mov
mov
sub
loopne
mov
or
pop
add
mov
mov
cmp
jle
decb
push
xchg
adc
pop
xchg
xchg
jno
mov
pop
or
repnz
adcl
and
mov
call
arpl
fnstsw
or
in
push
inc
sbb
cmpsb
mov
push
jb
arpl
push
pop
adc
loop
test
xchg
xor
call
ja
sub
jo
enter
jns
aam
sbb
outsb
ja
sbb
xchg
cmc
gs
xchg
rcll
jecxz
mov
js
ja
and
imul
aad
and
sub
fucomp
inc
clc
xlat
pop
gs
mov
dec
mov
fisubs
lock
sub
ja
jmp
sbb
jge
mov
out
imull
loop
dec
cmp
cltd
push
insb
add
pop
push
adc
ds
fld
and
xchg
adc
push
lods
push
adc
aas
mov
cmpsl
mov
das
cmp
xchg
lods
cmpsl
pop
mov
xchg
or
push
sbb
in
ret
loop
jbe
sbb
shl
dec
adc
jp
aaa
inc
jns
dec
pop
add
push
aaa
cmc
xor
push
ret
ja
sbb
aam
xchg
mov
pop
movsb
inc
cwtl
cmp
or
cmp
pop
int
xchg
push
loop
pop
das
adc
dec
pop
mov
iret
push
mov
mov
cmc
pop
dec
mov
push
leave
jg
cmpl
sub
adc
iret
xor
ljmp
jg
mov
mov
add
xor
jnp
out
lret
test
pop
lret
repz
pop
fldl
ja
popa
fisubl
in
jl
cmpsl
dec
loopne
loopne
pop
lods
mov
fisttpl
sarl
or
lret
jne
dec
cmp
jo
hlt
add
xor
mov
cmp
jg,pt
adc
adc
dec
lcall
inc
out
test
sub
out
jae
cmpsl
into
lret
clc
popf
xor
xor
mov
pop
jecxz
arpl
insb
ja
test
lret
into
xor
mov
hlt
sbb
mov
test
push
lods
xchg
dec
jp
jnp
mov
es
mov
ret
sub
jp
pop
aas
dec
repz
sti
mov
popf
mov
fists
pop
das
cltd
dec
jb
dec
stos
or
pop
adc
aaa
or
mov
mull
ja
sub
in
inc
aad
push
mov
push
mov
jne
xor
test
lds
mov
ljmp
outsb
adc
pop
in
daa
pop
shl
push
into
daa
mov
mov
or
cmc
jo
adc
nop
inc
pushf
hlt
mov
repz
lods
sbb
stos
ja
and
mov
pop
add
push
jmp
hlt
sahf
mov
lds
sbb
je
jno
rol
fs
stos
xor
and
inc
das
or
inc
cmp
push
ret
xor
iret
inc
adc
inc
pushf
inc
data16
pop
xchg
cld
and
icebp
outsb
dec
es
aaa
cmp
mov
leave
js
imul
into
mov
cmp
or
mov
bound
jno
adc
adc
mov
inc
or
sbb
and
pop
shl
in
push
mov
sahf
xchg
aad
insb
add
pop
ret
cwtl
add
mov
and
mov
mov
in
and
lds
dec
jge
aas
into
pop
insl
xchg
and
mov
push
jp
fucom
cli
or
lahf
push
ljmp
xor
gs
aaa
lahf
jae
mov
js
sbb
pop
cmpb
aas
loop
ficoms
cwtl
mov
imul
adcb
push
add
pop
aas
daa
out
push
scas
xchg
test
aas
push
fdivr
pop
mov
jmp
adc
aad
insb
outsb
adc
pushf
cwtl
daa
dec
movsl
test
push
shll
hlt
sbb
rorb
xchg
dec
in
pop
sub
mov
push
imul
decb
xor
movsb
popa
ss
sbb
push
flds
xor
imulb
int
sbb
call
mov
jecxz
outsl
js
sahf
sbb
nop
and
xchg
mov
repz
nop
rcrb
jle
loopne
sahf
cltd
or
outsb
aas
int3
push
into
adc
sbb
stc
mov
rcll
inc
shrb
and
out
pop
cmp
xchg
andl
fcmovnbe
cli
dec
push
les
ja
mov
mov
test
incl
or
popl
stos
mov
and
rcll
mov
cli
arpl
in
add
mov
mov
push
in
test
psllq
les
imul
mov
mov
cwtl
xor
dec
int
push
inc
xchg
dec
push
mov
movsb
testl
dec
add
sub
ret
adc
ds
dec
mov
mov
cmp
icebp
bound
aam
push
sub
mov
test
insl
add
jmp
push
nop
mov
pushf
ret
inc
popa
mov
adc
jecxz
mov
daa
scas
ds
sub
bswap
test
push
xchg
enter
decl
test
addb
inc
popf
xlat
dec
in
inc
test
dec
int
mov
lods
sti
bound
pop
mov
lods
les
cmc
sub
sub
mov
test
jnp
sub
stos
inc
fistpl
out
xchg
pop
sub
add
ss
mov
out
jnp
or
jae
push
imul
xchg
lret
rcrl
pushf
insb
loopne
xchg
popa
je
mov
pop
testb
add
mov
mov
movsb
data16
fnstsw
jmp
pop
cmp
xchg
dec
js
lods
xchg
mov
inc
jne
pop
mov
xchg
out
cltd
inc
mov
mov
sub
mov
lds
adc
lods
mov
repnz
mov
push
stos
cmpsb
dec
sub
imul
aam
lock
ds
mov
jp
xchg
lahf
mov
push
fisubs
add
aaa
pop
shlb
add
lahf
mov
cmp
dec
mov
scas
mov
push
xchg
sbb
mov
test
mov
rorb
inc
mov
mov
jl
aam
pop
cmpsb
jae
cmpsb
xchg
inc
lret
inc
or
repz
insl
mov
sahf
mov
ret
loopne
je
xor
lods
dec
movsl
popl
daa
push
jecxz
dec
push
hlt
dec
sbb
and
xchg
rorl
and
in
adcb
pop
sub
adc
lea
or
out
aaa
pop
insb
sbb
pop
push
fists
sub
outsl
cmpb
pop
cmp
mov
push
dec
mov
iret
sub
adc
movsb
loop
push
or
sbb
adc
movsb
pusha
icebp
in
lds
or
push
xlat
adc
inc
std
or
cwtl
je
cmpsl
dec
orb
mov
sub
mov
dec
dec
cmc
ds
jp
jae
xor
dec
jg
icebp
and
rorl
inc
leave
dec
xchg
aas
sub
shll
dec
jae
lds
sub
jns
jge
and
mov
jg
xor
fnstcw
stos
cli
xor
leave
std
sti
lcall
inc
scas
pop
aam
add
std
push
in
andl
mov
popa
mov
inc
sti
jmp
rclb
loop
fsubl
loop
orb
loope
lret
or
add
lods
and
loopne
movsb
jg
dec
push
sbb
test
xchg
stc
dec
inc
ror
stc
sub
or
xchg
mov
push
lods
mov
test
add
shl
push
arpl
mov
cmp
push
stos
jg
imull
mov
pop
adc
fiaddl
fildl
test
mov
lret
in
pop
sti
into
divps
js
int
iret
aad
or
fwait
test
push
das
mov
sarb
repz
pop
nop
push
cltd
mov
bt
cmpb
sub
cmp
cmpsl
in
adc
stos
pop
mov
mov
aaa
fdivs
inc
adc
adc
lods
jno
push
mov
fisubrl
les
out
xchg
mov
sbb
jbe
dec
fs
xchg
jmp
aad
out
lcall
mov
xchg
jo
nop
cltd
lds
cld
pop
mov
xor
out
lret
lds
jbe
dec
inc
negb
jl
xor
pop
and
in
int
mov
jbe
mov
jnp
cli
lcall
mov
jae
jp
vmaxps
mov
jmp
scas
icebp
mov
sarl
mov
pop
imul
dec
ds
sub
fistpl
enter
in
popa
sahf
daa
testb
out
test
xchg
mov
cmp
cmp
lock
lods
les
mov
mov
xor
cs
andl
cmp
iret
inc
push
out
ljmp
jl
popf
aad
pop
jge
inc
rcrl
dec
sbb
sbb
les
dec
enter
addr16
adc
ret
sub
loopne
pop
mov
mov
aaa
out
sbb
imul
mov
push
adc
in
in
pop
adc
or
mov
inc
sub
xlat
fdivl
xchg
loop
iret
dec
xor
add
addr16
sbb
sub
xchg
jge
enter
jne
mov
std
push
sbb
jnp
push
fidivl
jle
ljmp
fidivs
add
lock
in
mov
outsw
outsb
mov
inc
les
push
lods
xchg
sub
push
fstp
xchg
mov
xor
bound
sbb
sub
ret
jnp
xlat
xor
test
mov
add
enter
ljmp
pop
pop
rorb
shll
add
f2xm1
repz
lods
pop
out
cmp
fldt
lcall
cmp
iret
jbe
in
and
push
push
pop
jnp
xor
ds
cmp
sub
mov
xor
inc
dec
adc
aaa
fcmovne
stos
fbld
fs
sub
fxch
rcrb
bound
divb
pop
push
loope
jnp
ret
mov
addr16
push
mov
les
outsl
mov
adc
push
inc
subl
sub
test
add
xacquire
out
jbe
push
stos
dec
inc
aas
xor
add
xchg
lock
out
shll
push
jmp
mov
push
int3
add
es
mov
xchg
pop
ds
out
negl
inc
inc
inc
lahf
sqrtps
cltd
mov
and
fistps
test
jg
mov
mov
xchg
cmpsl
xchg
mov
popf
pop
out
mov
cld
cmp
mov
out
cmp
loopne
leave
lock
es
loopne
out
ljmp
stos
dec
or
int
mov
jge
mov
mov
mov
aam
sub
inc
jmp
lret
add
xor
loop
jo
sti
mov
lock
mov
jp
mov
jp
cmp
repnz
movsl
leave
xchg
add
stos
cld
ret
mov
std
sti
sub
mov
stc
in
lahf
incl
mov
jns
inc
int
xchg
out
movsl
jg
mov
daa
cmpsl
sbb
pop
xchg
cmpsb
pop
sub
ret
ret
or
data16
jmp
pop
jbe
jp
cmp
sbb
bound
push
jp
inc
add
cld
ret
loopne
scas
or
cs
xor
xchg
pusha
push
adcb
test
sbb
xchg
mov
xor
mov
cmp
inc
jae
es
pop
sbb
pop
aad
xchg
jg
xor
mov
sbb
in
xlat
scas
int3
daa
popa
test
jp
pop
ja
mov
out
pop
and
js
fimull
push
jp
inc
adc
mov
xchg
push
shrd
aas
jns
jb
outsl
in
pushf
xchg
xor
mov
lret
cmp
add
lods
dec
lea
push
cmp
push
xchg
or
inc
xchg
je
sbb
mov
mov
outsl
push
std
stos
cli
xchg
hlt
mov
mov
sub
add
push
or
pop
popa
shlb
xchg
push
cmp
push
test
repz
cmp
mov
out
inc
mov
mov
xor
push
cmp
cmc
js
jp
hlt
scas
pop
fbstp
aam
stc
sbb
cwtl
aaa
xor
inc
test
jp
incb
inc
xor
clc
mov
mov
or
sub
jb
call
cmp
arpl
pop
or
push
rcll
shlb
popa
mov
sahf
call
lds
jp
mov
push
insl
add
xchg
mov
loopne
out
arpl
cmp
shlb
dec
jp
mov
out
sub
sub
mov
sarl
mov
adc
cmp
xor
insb
xor
mov
lock
sub
mov
adc
jne
sub
mov
in
shll
add
sub
insb
icebp
les
dec
or
xor
adc
rorb
insl
test
add
out
ja
push
daa
inc
int
rcr
sub
call
testl
je
cmp
and
and
pop
insl
xor
sbb
stos
cs
adc
sub
insl
jns
pop
mov
rcl
fists
sub
sbb
xor
cld
lock
int3
mov
adc
mov
movsl
imul
jo
push
fisubs
xchg
xor
std
add
ljmp
push
int
iret
popa
sbb
dec
xor
sarl
add
and
xor
dec
adc
loop
pop
pop
pop
lcall
lds
adc
jno
push
insl
hlt
lock
pop
jle
xchg
jecxz
and
fidivrs
int3
pop
sub
sub
movsb
xchg
arpl
mov
je
cmpsb
insb
addr16
add
nop
bsf
arpl
xchg
cltd
push
push
cmp
sbb
add
sbb
and
or
add
adc
sbb
mov
push
jp
xchg
mov
jnp
jge
scas
push
pop
xor
xchg
orb
adc
and
cwtl
inc
fiaddl
shlb
add
repz
pop
fisttpl
sub
insb
dec
mov
pop
xchg
mov
push
adc
mov
mov
outsb
arpl
dec
push
pop
jg
mov
loopne
or
cs
clc
sub
push
std
dec
adc
fwait
push
prefetch
jle
fisttpl
push
ljmp
shll
xchg
and
dec
adc
stc
add
or
fistps
loopne
pop
ja
out
and
insl
jns
cmpb
jcxz
jo
sbb
add
js
xlat
faddp
sub
data16
xchg
fsubl
inc
call
aas
jns
jno
mulb
shrl
sbb
pop
and
scas
aam
adc
int3
adcl
mov
add
pop
pop
xchg
push
mov
stc
or
int3
sbb
jo
mov
xlat
lcall
jno
xor
xchg
lock
push
mov
sub
jmp
mov
push
adc
pusha
push
mov
hlt
ljmp
cmp
pusha
cli
sahf
add
sbbl
pop
mov
nop
call
pop
outsb
out
clc
xor
imul
orl
nop
test
dec
std
cltd
cs
js
rolb
sarb
push
cmc
je
sub
adc
scas
in
out
lods
xchg
xchg
mov
lods
ret
sbb
imul
fisubrs
insl
mov
fisttpl
sti
xor
hlt
adcb
jnp
mov
loop
lcall
jg
repz
pop
jb
outsl
dec
cmp
push
call
xor
mov
fucomi
loopne
les
sub
dec
cli
add
sub
in
cmp
cmp
mov
int
dec
mov
mov
lock
cmp
mov
xchg
movzwl
dec
xchg
lcall
dec
or
orl
push
xchg
iret
repz
xor
hlt
mov
or
xor
hlt
add
hlt
loop
mov
cmp
insl
mov
jecxz
ds
in
bound
out
fwait
aad
mov
pop
pop
cli
in
mov
dec
loopne
add
stos
push
push
lea
push
sahf
ficoml
aaa
add
jle
jnp
je
sbb
dec
pushf
dec
adc
inc
cmp
add
fmulp
adc
inc
or
push
lds
jns
icebp
aaa
scas
stos
pop
lcall
mov
jb
push
pop
cltd
leave
aaa
inc
mov
dec
mov
mov
mov
sbb
nop
mov
dec
mov
inc
xchg
pop
outsl
pop
hlt
aam
xchg
enter
pop
adc
jg
mov
scas
les
add
add
mov
dec
jg
hlt
pushf
mov
out
bound
sbb
stos
call
fsubr
mov
pusha
pop
repnz
shrb
or
push
xchg
or
or
orl
and
cwtl
loopne
jecxz
cmpsb
sahf
dec
stc
jle
cwtl
jo
pushf
cmc
mov
pop
stos
lret
sub
repnz
adc
xchg
dec
inc
pop
sahf
xchg
in
inc
dec
in
aaa
les
insl
mov
pop
push
jge
out
in
sbb
call
push
js
fdivl
inc
cmc
pop
ljmp
push
insl
js
enter
inc
aad
repz
sti
jmp
subl
cmc
mov
cmp
divb
mov
push
mov
xor
xchg
xchg
and
movsl
push
add
and
sub
nop
jb
or
hlt
in
pushfw
roll
decb
imul
jo
sub
push
pop
adc
xchg
arpl
subb
lods
lret
adc
xchg
out
clc
xchg
jle
cli
jp
icebp
mov
mov
mov
pop
aam
lods
dec
jmp
lods
adc
cli
shrl
mov
mov
inc
bound
inc
xchg
lret
add
pop
push
data16
loop
sbbb
mov
in
repnz
xchg
lea
fs
or
inc
negl
mov
and
sahf
aam
push
push
js
sbb
shrl
das
test
and
xor
xor
in
addr16
sub
stc
add
cmp
fnstcw
add
push
cmp
les
jp
shlb
in
cmpsl
mov
pop
push
enter
pop
popa
adc
aad
imulb
pop
fmull
cmp
sbb
fwait
mov
sub
mov
xchg
stos
jae
jp
jp
in
dec
popf
mov
cmp
xor
out
out
jnp
adc
or
lds
cmpsl
roll
loope
adc
stos
mov
addb
and
and
adc
mov
lods
addr16
pop
xchg
bound
out
daa
outsl
iret
aas
push
xor
fstl
push
fcompl
mov
sub
pop
das
or
add
addr16
sbb
in
xchg
jo
push
pusha
push
push
push
test
mov
cmp
push
cmp
sahf
adc
lods
inc
int3
sub
jb
cmp
gs
pop
fidivrl
clc
sar
mov
push
inc
adcl
mov
inc
data16
stc
or
mov
rcrb
and
sub
pop
stos
test
jne
inc
push
pop
lock
pop
daa
jo
mulb
mov
mov
sbb
pop
mov
fiaddl
dec
mov
jmp
xor
outsb
mov
mov
hlt
jae
cmp
shl
stos
hlt
mov
or
add
pop
inc
push
jns
jle
xchg
mov
xchg
into
jb
rolb
dec
rolb
icebp
aad
pop
int3
gs
ror
call
jb
push
in
hlt
jb
call
fwait
xor
daa
je
push
xchg
movsb
pusha
jae
aas
rcr
inc
push
lods
jge
mov
aam
sbb
int
xchg
xchg
test
daa
adc
imul
push
mov
repnz
ss
int3
repnz
cmp
pop
and
dec
lahf
mov
mov
fisubl
popa
in
ret
add
push
pop
mov
mov
dec
pushf
fidivrs
mov
into
cmp
sahf
or
mov
mov
push
ds
pop
daa
adc
dec
add
jo
cmp
sbb
mov
int
sbb
push
add
dec
aaa
push
cmpsl
sub
stc
add
push
xlat
dec
pop
icebp
xchg
and
aam
add
sbb
fstp
faddl
ja
adc
popl
mov
mov
sti
sub
les
fimull
popa
jb
fcom
fwait
ss
or
push
xchg
andb
ja
in
stos
mulb
cmpsl
xor
js
out
sarb
data16
mov
aad
cmp
bound
es
lret
test
mov
xchg
mov
stc
sbb
call
push
lock
scas
jne
leave
enter
lods
loope
iret
mov
jmp
pop
andl
xchg
sub
test
fcoms
frstor
mov
ds
add
mov
adc
imulb
outsb
mov
pop
jns
iret
dec
xor
pushf
or
xchg
pop
cli
inc
dec
xor
data16
cmc
mov
push
mov
test
add
cltd
mov
ret
int
add
shl
sti
push
cmp
jmp
mov
hlt
add
add
add
jns
mov
cli
insl
sub
xor
loope
adcl
scas
movsl
repz
into
cmp
adc
mov
mov
ss
shrl
stos
mov
jmp
scas
dec
out
xor
rorl
cs
pop
imul
jge
incl
dec
cmc
js
out
push
scas
mov
pop
push
cmp
lds
jl
and
cwtl
xor
sarl
add
mov
inc
xchg
push
dec
icebp
xor
lea
lods
pop
cs
or
test
or
dec
sbb
cli
or
popf
pop
and
sar
ret
into
sub
std
sub
xchg
shll
lods
clc
cli
inc
pop
outsb
mov
scas
push
pop
dec
nop
into
mov
cmc
mov
adc
std
jg
aas
sub
dec
sub
mov
mov
lret
enter
fstpt
inc
mov
fcomip
ljmp
mov
stos
loop
into
xor
into
mov
jmp
addr16
jle
test
mov
pusha
lret
stos
xor
cmp
inc
andl
fwait
pop
lods
fs
lcall
rolb
or
mov
pop
dec
mov
add
ljmp
xchg
jl
cmp
aaa
mov
xlat
dec
mov
sub
mov
push
movsl
inc
in
mov
lods
inc
in
mov
outsl
mov
push
and
out
jae
cld
stc
xor
mov
pop
es
mov
jmp
sbb
inc
adc
mov
xor
test
xlat
sbbb
rcrl
push
push
fsub
in
cwtl
sbb
in
ljmp
test
or
sub
bound
adc
out
fs
aad
sub
sub
es
fstps
andb
sub
stos
pop
in
rorl
icebp
sti
mov
lods
mov
std
fists
jno
mov
call
into
mov
lods
lods
lods
cmpsb
dec
or
popf
mov
jmp
popa
rol
sbb
inc
adc
in
je
mov
repz
fadd
es
into
scas
lods
pushf
pop
mov
adc
and
mov
cmp
je
add
jnp
fcomi
adc
stos
sbb
xor
cltd
cmc
incl
lret
sbb
sub
jae
mov
push
pop
jle
sahf
xchg
and
jg
in
cmp
pop
fnstenv
pushf
xor
jge
sub
int3
pop
inc
sub
cmp
in
mov
test
rcrl
rcrl
cmpsl
push
xor
mov
cs
in
push
ficoms
das
fwait
xchg
push
gs
inc
int
mov
adc
das
ja
xchg
repz
stc
add
mov
adc
in
stc
outsl
mov
into
subb
pop
lahf
push
and
rorb
xchg
or
dec
jb
add
jge,pn
mov
inc
add
ljmp
nop
push
cltd
add
or
loop
xor
push
cs
lds
pop
test
mov
inc
fiaddl
jg
push
mov
std
scas
mov
cmp
imul
cld
mov
cwtl
jp
fimull
inc
shlb
out
cs
cmp
pushw
mov
xchg
jno
cmp
push
pop
rcl
inc
xchg
adc
inc
dec
ljmp
rcrl
cwtl
pop
dec
inc
xlat
sub
or
pop
aam
pop
pop
add
sbb
inc
js
int
inc
in
stos
and
jp
mov
mov
popl
sbb
xchg
sub
xlat
sub
inc
insl
stos
inc
dec
insb
les
jmp
inc
es
jge
enter
jg
jecxz
adc
adc
jp
mov
lds
add
cmc
imul
mov
movsl
push
adc
addr16
jl
xor
imul
daa
mov
or
cmc
ss
enter
adc
mov
outsl
mov
fcoml
bound
pop
pop
add
loope
mov
in
push
dec
xor
dec
sbb
jb
xchg
pop
mov
loopne
mov
jne
pop
xor
cmc
sub
pop
pop
add
push
je
ret
ljmp
jmp
repz
dec
inc
stc
daa
adc
sahf
pop
add
out
cmp
adc
cmp
pop
pushf
jge
rcrl
ror
cwtl
xchg
mov
scas
and
ret
push
js
and
adc
lret
ja
cmpsl
push
fs
sarb
shrl
inc
cld
scas
pop
lahf
inc
add
mov
jmp
das
sbb
pop
pop
imull
add
in
in
mov
lods
dec
and
pop
and
pop
or
out
aam
aaa
dec
sahf
mov
daa
dec
cmpl
xchg
add
push
imul
pop
or
pop
and
inc
mov
ret
mov
mov
adc
in
into
andl
pushf
xlat
dec
push
loope
and
pusha
jb
and
aam
loopne
xor
outsb
push
or
icebp
jl
lret
in
outsl
jp
add
mov
adc
xorl
or
loope
sbb
cmp
mov
call
cmp
test
sar
sti
fcoms
xchg
test
cltd
pop
xor
push
push
leave
add
out
add
pop
jbe
in
outsb
inc
adc
aam
ljmp
mov
jp
ret
cltd
test
aaa
fbstp
jo
cld
and
je
jl
mov
cmp
inc
gs
sti
push
dec
mov
or
inc
mov
ret
in
test
sbb
hlt
adcb
cmpsl
push
div
sbb
inc
jno
jp
cli
xchg
lahf
xchg
dec
mov
lods
pop
inc
test
pop
sub
sub
into
out
mov
ljmp
push
inc
out
jle
outsb
jle
ret
arpl
leave
or
mov
jns
cwtl
das
fdivrs
cwtl
icebp
push
loopne
mov
jno
aam
xor
xor
sbb
pop
mov
je
adc
push
sub
and
les
jp
shll
ja
bound
jmp
push
mov
lea
das
adc
cmc
sbb
and
out
mov
sub
loopne
and
arpl
in
out
pop
popa
jnp
adc
dec
push
ret
dec
push
lret
fildll
inc
dec
mov
cmp
out
fidivrl
mov
ss
xor
sub
xchg
pusha
repnz
mov
rcrl
jne
mov
fwait
pop
gs
sub
add
clc
push
xor
lock
cmovg
push
mov
inc
cmp
daa
movsb
add
inc
jo
out
mov
or
jmp
int3
pop
cmc
and
fnstsw
cld
inc
cwtl
fsubs
imul
or
lret
add
nop
cmpsb
xchg
mov
add
ds
cmp
test
jne
into
clc
jbe
rcl
jp
dec
inc
xor
push
cmpsl
hlt
fstl
cs
jp
add
test
mov
in
add
nop
dec
add
lcall
stc
or
test
pop
sub
repnz
pushf
mov
iret
push
sub
stos
push
je
or
ja
push
sahf
fsubs
mov
jbe
into
inc
inc
or
aaa
clc
pop
mov
push
scas
mov
pop
lds
pop
idivb
mov
push
add
testb
dec
or
mov
cmc
adc
addb
dec
inc
roll
xchg
push
and
sbb
pop
jns
xchg
adc
inc
pop
pop
cld
in
stos
adc
lods
sub
or
adc
call
mov
aam
hlt
ret
add
ljmp
and
cmpsl
std
sub
fsubs
fisttps
or
cltd
adc
mov
hlt
mov
stos
mov
mov
push
or
mov
ljmp
add
cmp
subl
jno
sub
sub
sub
sbb
or
addr16
mov
mov
xlat
es
enter
in
push
sbb
sarl
adc
cmpsb
movsb
rcl
sub
sub
into
mov
jb
xlat
push
daa
iret
sub
shll
neg
ret
adc
lahf
test
xor
dec
sub
adc
adc
xlat
sub
mov
jb
lahf
jne
mov
xchg
push
dec
pop
lods
sbb
mov
test
aaa
cltd
add
les
scas
jae
flds
pop
adc
xlat
dec
xor
test
push
jl
sub
sub
icebp
adc
mov
and
sbb
pushf
fstpl
dec
sub
or
sub
and
inc
test
dec
mov
lock
pop
scas
push
cmp
insl
nop
lds
add
sbb
imul
divl
sbb
fcoms
out
es
xchg
jge
xor
sub
pop
dec
xchg
aas
sarl
jne
shl
jp
adc
insl
jecxz
int
cli
jmp
inc
pop
add
mov
jecxz
jno
xchg
call
mov
dec
sbb
pop
dec
add
sbb
loop
push
rcll
call
xor
das
lock
jmp
stos
jmp
rorb
xchg
dec
and
jno
pop
add
mov
mov
inc
jns
cmp
dec
test
enter
mov
movsb
jmp
out
lea
aaa
frstor
xor
rclb
jge
or
repnz
movsb
stos
pop
out
das
push
add
js
ss
in
rcll
xchg
imul
das
sub
push
aad
xchg
mov
in
jno
shll
sbb
inc
sub
lds
xchg
outsb
mov
inc
lret
cmp
hlt
cmpsb
int3
pusha
mov
adc
and
cwtl
or
imul
addr16
mov
push
adc
and
sub
mov
mov
lds
dec
arpl
in
sbb
jno
rcr
les
push
sub
xchg
data16
or
cmp
jne
ja
out
lock
mov
mov
mov
sbb
stos
out
inc
add
arpl
jne
fstp
mov
add
cmp
lods
loop
repz
in
scas
pushl
mov
icebp
inc
mov
mov
loopne
mov
and
sub
imul
rcrb
pop
and
sbb
xor
test
jns
xchg
enter
pop
enter
cmp
push
movsl
xchg
xlat
jnp
js
pop
xor
repz
enter
out
ficompl
mov
xlat
sarl
pusha
in
movsb
or
push
mov
jnp
filds
add
mov
mov
pop
outsb
xor
loope
xchg
outsb
loop
adc
fsubrl
in
xchg
jecxz
sbb
sbb
aas
fwait
push
pop
icebp
xchg
in
outsb
cmp
pop
lcall
fdivr
movsb
inc
xchg
ja
scas
sbb
pop
mov
jno
adc
leave
push
test
cmp
xchg
outsb
xchg
fdivrl
das
or
mov
movsl
dec
out
mov
out
arpl
test
xchg
sub
xchg
xchg
sub
das
leave
fs
rcr
lock
ret
xchg
ret
dec
add
mov
in
inc
mov
jp
stos
xor
insb
dec
push
inc
push
nop
xchg
fwait
test
mov
pop
pop
jns
mov
jmp
pop
fsubl
mov
std
jbe
jecxz
adc
mov
sub
stc
push
addr16
aam
fsubr
seto
sahf
mov
mov
movsl
xor
xchg
ja
stos
ja
leave
xor
adc
pop
lret
dec
mov
dec
push
incb
fists
fildl
loope
mov
in
xchg
inc
sbbb
jnp
addb
iret
or
and
imull
cmc
push
adc
inc
adc
and
pusha
sbb
mov
mov
repnz
lock
fldt
and
into
jb
push
loopne
loope
ror
ljmp
xlat
arpl
dec
xor
or
mov
subl
jae
push
sbb
leave
mov
xchg
mov
mov
lret
aam
in
jmp
fwait
adc
jg
push
cltd
mov
xchg
xchg
fldenv
ret
aam
cmpsb
dec
outsl
dec
jae
ret
leave
rorb
andb
lods
bound
stc
cmp
cmp
sub
xor
pop
aad
in
jo
movsb
pop
jmp
mov
jb
aas
sub
and
lea
mov
and
notb
dec
xlat
sub
pushf
adc
fnsave
dec
push
out
mov
and
adc
pop
sbb
pusha
cli
aaa
inc
xlat
ljmp
push
sbb
mov
idivl
lods
iret
xlat
xor
les
aaa
ja
adc
test
call
xchg
scas
dec
sub
inc
push
imul
addb
jo
push
sbb
scas
and
notb
dec
push
adc
fs
mov
fbld
pop
jbe
xchg
scas
cs
popa
aas
sub
fdivl
xor
dec
stos
fistl
mov
adc
cmpb
xchg
add
mov
and
pop
inc
pop
fs
cmp
mov
sahf
and
jg
jns
ret
push
or
cwtl
icebp
pop
mov
inc
fimuls
jl,pt
mov
aaa
nop
and
adc
jns
stc
lods
inc
inc
jecxz
fbstp
jg
jnp
ret
repz
push
mov
out
jp
lods
in
add
sub
lock
sahf
pop
xor
and
notl
sub
lods
cmpsb
inc
add
pop
xor
call
cmpsb
out
jo
and
push
fwait
pop
adc
push
sbb
ds
lret
and
std
inc
pushf
dec
popf
outsl
scas
lahf
fists
shlb
fistps
pop
out
filds
outsl
aam
mov
sbb
mov
xchg
push
test
jb
jbe
cltd
clc
mov
mov
jno
mov
add
dec
push
out
cmp
mov
sub
dec
mov
faddp
pop
xor
rorb
pop
imul
sbb
xor
testl
rcr
scas
sti
std
xor
mov
int
mov
and
xor
repz
add
dec
popa
shlb
leave
lds
jbe
xor
or
in
dec
sbb
inc
xor
test
dec
add
js
cld
testb
lods
pop
gs
aam
mov
jecxz
ud0
jmp
sbb
xchg
jp
ja
xor
dec
mov
lea
mov
dec
xor
pop
cmpsb
clc
xchg
push
cwtl
in
push
enter
jg
fucomip
sarl
push
addr16
leave
sbb
std
rcrl
imul
jne
scas
adc
ja
inc
rclb
scas
push
loop
cmp
outsb
mov
jmp
mov
xchg
push
pop
scas
cmp
mov
stos
jmp
mov
insb
pop
dec
std
rcrb
lock
jbe
pop
cmp
push
jnp
jl
sub
xchg
stc
mov
push
pop
pop
cltd
xchg
sarb
rorb
insl
lret
aad
mov
jb
movsl
popa
mov
push
jnp
in
pop
dec
and
es
xchg
cmp
fdivrs
mov
out
add
clc
sub
xchg
ja
loop
mov
mov
sbb
lret
or
rcrb
push
and
mov
popf
leave
mov
ljmp
andl
mov
cwtl
cmpsb
jge
cli
jns
cltd
cld
add
inc
add
pop
jle
fldl
cmp
test
test
lods
and
into
mov
test
outsl
or
xor
paddusw
xor
adc
dec
inc
or
cmc
cwtl
adcl
dec
loopne
out
subb
cld
inc
pop
pop
pop
lcall
int
pop
in
movl
in
cmp
cwtl
iret
mov
movsl
test
pop
cli
xor
mov
mov
repnz
cmp
insl
insl
mov
pusha
lcall
or
mov
mov
subb
inc
push
idivb
xchg
push
fwait
push
dec
inc
out
das
mov
shll
stos
lods
insl
add
mov
or
stos
lods
mov
subps
loop
addl
add
dec
or
cmp
mov
not
inc
vmovups
icebp
jb
outsl
scas
movl
loope
jnp
fiadds
stos
mov
xor
push
imul
mov
fisubl
pop
pop
push
and
mov
adc
sub
and
popf
xor
lahf
dec
add
or
push
ret
insl
and
pop
xor
pushf
sub
andl
lcall
mov
cld
aam
nop
movsl
mov
mov
pop
out
jmp
in
xor
sub
movsb
ret
mov
sahf
mov
stos
mov
jecxz
aas
mov
mov
mov
test
mov
orl
call
xchg
jle
and
push
sbb
lret
push
adc
fstpl
das
ljmp
enter
inc
jg
push
pop
or
or
mov
push
les
movsb
scas
fsubrs
pop
shrb
mov
inc
sarl
hlt
push
lahf
enter
sbb
rcrl
xor
lods
and
out
xchg
add
cmpsl
andl
add
mov
pop
repz
rol
mov
jne
cmp
popa
movsl
inc
adc
jae
xor
hlt
scas
mov
jne
fstps
pop
pop
lea
fcmovne
jno
js
imul
pop
sbb
xlat
pop
movsl
sbb
test
xor
aad
orb
jmp
loop
jbe
test
add
pushl
scas
mov
push
jmp
imul
push
fildl
and
ret
test
sarb
adc
in
xchg
dec
jae
sbb
add
xchg
lea
fs
aaa
mov
lcall
xchg
mov
mov
push
sbb
andb
pop
xchg
sub
add
and
pop
loop
mov
clc
bound
std
loop
lods
daa
jle
jb
int
xor
mov
mov
clc
push
shrl
jp
or
xorb
pop
add
lahf
mov
mov
sbb
std
fld1
mov
imul
mov
mov
inc
psadbw
push
xchg
gs
hlt
sub
or
punpcklwd
mov
inc
rolb
lret
mov
xchg
ror
icebp
or
mov
jmp
jle
jae
js
cmp
dec
cmp
jg
push
mov
fidivs
sbb
sbb
loopne
aas
jb
xlat
outsb
iret
adc
xor
jle
cs
jge
adc
xlat
mov
negb
pusha
sbb
add
xchg
lods
mov
mov
sbb
adc
jecxz
shlb
xchg
jg
mov
push
and
loopne
lret
repz
mov
rolb
adc
push
lods
xchg
int
mov
push
push
cmp
rcr
xchg
dec
outsb
pop
push
and
xchg
lods
and
stos
subl
mov
cmc
adc
rcll
andnps
mov
flds
pop
add
shlb
movsb
arpl
mov
pop
mov
jo
mov
pop
add
xor
push
out
jb
push
ret
ss
cmp
movsb
ds
pop
pusha
std
out
cmp
pushf
outsb
sub
fstpl
pop
add
jnp,pt
sub
cltd
icebp
xor
inc
gs
xchg
fidivs
lds
aam
jge
inc
cs
mov
in
ss
push
sub
mov
fcoms
pop
fwait
movsb
arpl
sti
mov
mov
adc
sbbb
dec
inc
cmovbe
cmp
jno
jae
repnz
popf
in
lods
aad
and
cmp
ljmp
mov
dec
pop
lds
lret
popf
lret
pop
jg
in
jecxz
push
loop
and
push
in
fidivs
dec
pop
push
sarl
jg
pop
jnp
cs
and
jnp
imul
lret
pop
mov
jge
mov
pop
jb
xchg
push
sbb
in
ljmp
cld
in
es
jno
xchg
push
lret
test
push
mov
out
mov
inc
mov
ret
xor
mov
mov
mov
dec
inc
mov
aaa
outsb
inc
mov
xchg
mov
dec
pop
or
ret
loop
aad
fdivl
pop
xlat
jo
cwtl
mov
std
mov
hlt
jmp
shrb
fldl
pop
or
lea
jmp
fwait
cmp
mov
das
cmpsl
outsl
dec
push
push
jne
xor
pop
lock
cwtl
test
jle
sti
sub
and
inc
or
cmp
aad
arpl
ret
dec
sub
xchg
test
and
jl
mov
inc
cmp
lods
or
sub
stc
fsubp
or
fcmovnbe
adc
or
imul
mov
jno
dec
cmpsl
outsl
enter
mov
add
mov
in
outsb
insl
pop
xchg
fmulp
icebp
mov
rorb
and
cmp
clc
xor
mov
pop
mov
cmc
mov
mov
js
testb
cs
sbb
mov
and
arpl
cmpsl
ljmp
cmp
xor
mov
mov
push
fwait
ds
mov
or
andl
inc
shr
dec
movb
rep
add
aad
pop
lods
ffreep
mov
sub
sbb
cmpsb
and
test
jecxz
cmp
aad
iret
add
sahf
stc
inc
xchg
dec
sbb
lahf
inc
add
xor
sbb
popa
ss
outsb
in
and
fbstp
mov
stos
incb
ret
cwtl
in
jg
jecxz
int3
xor
dec
add
add
push
outsb
cmpsb
xchg
rcr
xor
aad
cs
add
call
inc
xchg
adc
jecxz
mov
pushf
mov
jp
andl
mov
int3
cmp
xchg
inc
mov
cs
push
aas
bound
insl
inc
push
jle
cli
shl
mov
jne
loopne
movsb
call
adc
shll
jno
xor
inc
cmp
mov
out
mov
aam
or
cmp
mov
or
push
jg
fwait
cli
inc
mov
std
imul
xor
call
mov
add
sub
fdivrl
or
addr16
lss
jns
test
dec
cmc
sbb
test
and
adc
popa
fmuls
addb
lret
jb
scas
jg
jns
xchg
lret
xorb
data16
pop
xor
imul
xor
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fdivs
inc
in
test
inc
outsl
lcall
stc
popf
push
stc
enter
or
lods
daa
xchg
in
sbb
jp
loop
lret
outsb
push
pop
and
jge
or
push
mov
js
xor
fistps
dec
push
dec
jg
pmullw
lret
sbb
sbb
xor
jb
jle
stos
jg
jg
test
loop
push
repnz
sbb
add
hlt
rorb
pop
xchg
lods
roll
fisubs
push
mov
pop
ror
std
cli
push
pop
ja
ja
jne
push
leave
loope
sbb
add
pop
sub
push
inc
nop
cmp
jne
bound
sub
sub
sbbl
jns
clc
push
jle
push
lods
shlb
dec
pop
cmpsb
fwait
sub
jge
sub
ljmp
or
push
inc
mov
dec
dec
shll
push
in
ljmp
adc
push
fld
jl
sbb
lret
lods
push
mov
jge
movl
sub
cmp
jmp
xor
jle
cmp
stc
push
mov
inc
xor
mov
ss
cmc
test
or
push
add
loope
fildl
push
xchg
iret
gs
insb
sub
faddl
cld
dec
daa
adc
xor
insl
daa
pop
mov
mov
sbb
pushf
xor
and
and
xchg
loopne
jp
ss
or
xchg
and
xchg
dec
call
or
pop
data16
add
daa
push
loopne
jmp
push
pop
adc
xchg
xchg
stc
rcll
cld
push
mov
arpl
mov
push
pop
into
jae
fcompl
mov
test
pushf
pop
aaa
xor
int3
arpl
sahf
jge
jl
pop
and
and
jo
xlat
fstpl
out
aam
loopne
inc
in
sbbb
inc
popa
sbb
testl
popa
or
or
jg
sbb
popa
or
mov
sarl
cmpsb
pop
lods
xor
inc
ja
outsb
dec
imul
pusha
ja
jno
push
push
add
jne
mov
icebp
test
xchg
cmpsb
or
lret
xchg
xor
cmp
jmp
xchg
xor
fs
push
stos
inc
in
int
mov
xchg
push
push
xor
mov
popf
sub
test
lods
into
cmc
test
cwtl
xor
push
adc
clc
and
lds
add
clc
push
add
out
out
stos
push
daa
and
mulb
xor
and
xchg
ds
sbb
xchg
fidivrl
aad
pop
mov
xor
imul
lret
fsubrs
int
std
leave
inc
into
loop
and
and
jmp
in
inc
xor
mov
dec
rcll
jp
fwait
into
cmp
out
jl
roll
xor
insl
inc
mov
mov
cs
jle
adc
es
popf
dec
mov
ret
mov
pop
cmp
repnz
add
andl
and
dec
jmp
rcrb
sub
xchg
lcall
sub
pop
pusha
mov
push
stc
fnstsw
jle
movsb
icebp
and
pop
imul
cmc
cmp
or
in
les
jmp
outsb
push
fimull
add
dec
in
mov
mov
fstl
repnz
clc
adcl
sub
adc
repnz
lods
gs
mov
jmp
jno
xchg
imul
insl
fisttpll
jnp
nop
lds
cmpsl
mov
pushf
subb
xchg
xchg
mov
data16
popf
sar
mov
sbb
mov
jmp
sbb
jg
fadds
adc
lahf
sub
mov
into
pop
outsl
jnp
lods
dec
ret
je
jae
mov
or
lret
push
cld
outsb
jecxz
dec
pop
lahf
js
mov
aad
jo
sbb
mov
xor
sub
dec
mov
gs
cmp
cltd
sbb
add
loopne
movsb
aas
cs
xsha1
cmpsb
leave
jne
mov
lock
lods
fs
and
inc
xor
imul
fs
inc
inc
and
push
jecxz
and
sub
sbb
xor
inc
cmp
mov
mov
pop
pop
push
adc
dec
sarb
sub
sub
stc
xchg
insb
cmpsl
jno
fdivrs
enter
pop
arpl
into
lcall
inc
mov
lods
mov
je
jo
pop
xor
loop
icebp
out
pop
and
push
rcr
add
out
andb
push
inc
bound
fdivrs
cmp
lea
fisubrs
clc
inc
push
lock
jne
jg
jecxz
jl
outsl
nop
sub
sahf
cmc
fsts
jge
and
push
test
push
out
lock
mov
pop
or
xchg
out
jne
push
xor
sbb
test
sub
std
mov
inc
or
movsb
loope
stos
movsb
or
xchg
push
repz
push
aas
or
push
daa
or
inc
push
add
pop
add
xor
sahf
aam
push
cmp
xchg
push
stc
jb
imul
shll
jecxz
mov
mov
idivb
inc
cmpsb
inc
xor
jge
or
stc
cmpsl
mov
loop
loopne
push
xchg
testl
sbb
mov
icebp
inc
pop
inc
and
fisubs
in
leave
loope
sbb
pop
mov
push
inc
pop
fwait
pushf
xor
dec
inc
out
ja
out
dec
in
repnz
cmpsb
xor
popf
dec
sahf
adc
xor
roll
xor
aaa
adc
cmp
in
inc
mov
mov
jle
out
xor
aaa
jbe
mov
xchg
sub
fwait
push
dec
or
xchg
sbb
dec
mov
mov
adc
pop
sahf
outsl
jp
jbe
hlt
enter
inc
dec
jbe
and
adc
dec
das
xor
nop
cs
inc
fwait
gs
int
pop
push
push
add
xor
aaa
scas
push
cwtl
rorb
mov
fstps
push
gs
es
or
decb
cmp
push
mov
ret
sbb
mov
cmp
cmp
test
pop
aam
mulb
mov
add
out
leave
adc
xor
mov
stos
add
cld
imul
sub
jle,pt
rcll
nopl
pop
mov
inc
out
lock
adc
mov
test
dec
adc
stos
cmp
sbb
mov
pop
shr
xchg
je
into
decb
loop
out
addr16
fldl
loope
add
cmpsl
and
addr16
cmp
aam
inc
adc
jle
mov
call
shll
cwtl
xor
lock
aaa
jne
xchg
cmp
sarl
lds
adc
lret
pop
ret
lahf
lahf
pusha
mov
dec
aam
jae
dec
lock
in
xchg
jns
je
push
mov
sbb
mov
daa
shrl
mov
pop
lods
jne
into
xor
sarb
outsb
xchg
test
shlb
dec
push
je
test
out
mov
rcrb
pop
movsb
xlat
rclb
dec
scas
outsl
jnp
lds
xchg
and
jp
inc
inc
mov
cltd
or
push
mov
mov
jbe
mov
rcrl
imul
cmpsb
dec
xlat
xchg
call
push
ds
cmp
loope
cltd
fs
arpl
std
adc
push
pop
cmc
cmp
mov
xor
pusha
icebp
xchg
or
or
jae
sbb
fisttps
out
repz
mov
je
pop
sbb
mov
aam
test
cmpsb
and
aam
js
jge
enter
into
lock
xchg
xchg
xor
xchg
cmpsb
fisubrs
mov
sbb
or
mov
mov
inc
cmc
rorl
fldl
ljmp
test
pop
call
lea
cmp
sub
cmp
mov
or
pop
imulb
icebp
pslld
movsl
add
mov
outsl
and
pop
inc
imul
insb
xor
xor
stc
pop
push
add
sbb
cmp
lods
cld
aam
xor
iret
into
cmp
jo
push
sbb
gs
out
popf
inc
xlat
push
mov
sahf
test
repz
sbb
shr
outsb
cmp
sub
adc
mov
xchg
sbb
arpl
in
pop
jle
ficoml
inc
xor
out
leave
push
jge
xchg
mov
sti
push
aaa
bound
cmp
jp
movsl
sub
dec
fs
dec
xorl
int3
stos
lahf
lods
into
sbb
pop
movsb
in
jb
jmp
loopne
mov
call
adc
push
ficompl
sub
dec
sbb
rorb
xchg
ret
movsb
mov
sbb
jg
jle
dec
repnz
cmc
jbe
mov
loopne
inc
les
lods
jnp
dec
loop
pop
movsl
arpl
pushf
jmp
xchg
and
mov
mov
hlt
jo
push
or
lods
or
or
mov
stos
xchg
pop
mov
loop
xchg
sub
int
xor
xchg
add
ficompl
bound
cmp
xchg
ss
push
mov
xchg
lret
std
pop
lcall
outsb
cmp
and
aaa
jl
jecxz
gs
mov
ret
hlt
xor
sub
out
in
pop
popf
pushf
sahf
decb
mov
fldcw
add
movsl
mov
inc
out
xchg
daa
xchg
jns
std
xchg
push
mov
cmp
data16
mov
push
or
loope
cmp
xor
or
xchg
ja
jbe
dec
insl
push
pop
mov
lcall
push
push
mov
loopne
ds
cmp
mov
mov
loop
inc
mov
sub
inc
pop
jg
out
and
inc
icebp
loop
and
mov
movsl
mov
mov
pop
xchg
xchg
fcoms
lret
xchg
and
arpl
cmp
mov
sbb
mov
mov
fdivrl
fcomps
ljmp
mov
sbb
out
pop
dec
jns
sbb
pop
inc
inc
arpl
mov
xchg
cmc
rcrl
loope
daa
in
mov
add
pop
and
iret
or
jnp
or
xor
es
jae
xchg
push
and
leave
push
jae
sbb
xchg
cld
adc
mov
test
fcoml
movsb
or
push
ret
mov
sbb
jge
mov
mov
cltd
pop
loope
clc
xor
cmp
pop
out
dec
enter
cltd
into
nop
push
sahf
push
bound
push
or
dec
lock
shll
gs
fsts
push
push
jg
aam
push
cmp
es
lods
adc
arpl
add
in
ret
cmp
btr
push
push
mov
sahf
jmp
pusha
scas
dec
pushf
jl
pop
movsb
or
shlb
in
mov
cmp
cltd
or
and
std
sbb
mov
add
mov
pop
outsl
sahf
inc
shll
lea
add
add
add
pop
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
