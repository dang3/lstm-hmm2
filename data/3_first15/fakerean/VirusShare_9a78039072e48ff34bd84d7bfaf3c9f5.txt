add
je
sbb
mov
test
add
ret
testb
jne
mov
lea
call
mov
lea
call
xor
mov
call
movl
jmp
mov
mov
cmp
jg
sub
mov
mov
imul
cmp
dec
xchg
inc
add
jmp
push
mov
push
push
push
xor
cmp
je
push
mov
movw
cmp
je
pushl
mov
lea
mov
call
mov
cmp
mov
mov
je
mov
mov
mov
push
lea
call
mov
push
lea
call
mov
lea
push
push
call
mov
cmp
pop
jne
lea
call
lea
call
lea
call
xor
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
test
je
test
movl
je
push
push
lea
mov
movl
call
mov
lea
lea
push
push
mov
call
test
js
mov
test
je
add
lea
add
jne
lea
mov
mov
lea
mov
movl
movl
movl
movb
call
test
js
cmpl
je
lea
push
lea
mov
call
inc
add
jne
cmpl
movl
jne
mov
test
jne
test
jne
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
lea
call
jmp
push
mov
sub
push
push
push
mov
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
mov
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
mov
mov
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmp
jne
pushl
lea
call
add
jne
pushl
mov
pushl
mov
push
call
test
jne
mov
lea
push
pushl
push
call
cmp
je
push
lea
mov
mov
call
mov
lea
push
push
call
pushl
lea
pushl
call
mov
cmp
pop
pop
mov
mov
mov
je
mov
lea
call
mov
lea
call
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
pushl
push
call
cmp
mov
je
lea
call
push
mov
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
lea
call
mov
cmp
je
mov
push
call
lea
call
mov
mov
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
pushl
mov
push
call
mov
cmp
je
mov
mov
push
push
call
mov
mov
mov
lea
mov
call
cmp
je
mov
push
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
cmpl
je
decl
jne
add
mov
call
ret
mov
test
jg
cmpl
je
test
lea
mov
jne
add
mov
call
ret
mov
cmp
jae
inc
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
lea
cmp
push
jne
mov
test
jne
xor
pop
pop
pop
ret
push
push
push
lea
call
push
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
push
pushl
call
cmp
je
mov
call
test
jne
pushl
mov
push
call
lea
mov
push
call
test
je
mov
call
test
jne
mov
push
pushl
push
call
xor
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
mov
cmpl
jge
push
mov
xor
push
mov
call
mov
add
lea
call
cmp
jne
mov
mov
mov
push
call
mov
add
test
pop
je
mov
mov
push
push
push
push
push
add
push
push
mov
call
lea
call
pop
pop
pop
add
ret
cmp
je
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
xor
mov
push
lea
lea
mov
movl
movl
mov
mov
mov
call
cmp
je
mov
push
mov
lea
lea
mov
lea
push
lea
push
movl
movl
movl
mov
mov
mov
movl
movl
mov
mov
call
mov
test
jne
test
jne
mov
mov
push
push
lea
push
push
push
push
mov
call
test
js
mov
mov
mov
push
push
push
call
mov
mov
test
jne
test
jne
lea
call
mov
pop
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
mov
cmpb
jne
cmpl
mov
jne
cmpb
je
cmpl
jne
mov
cmp
jne
mov
cmpl
mov
movl
jne
mov
call
test
jne
test
jne
mov
cmp
je
cmp
je
cmp
je
cmpb
je
mov
mov
mov
call
test
je
test
je
test
je
mov
mov
mov
mov
lea
mov
test
je
mov
test
je
push
call
add
test
jne
mov
mov
mov
call
test
je
cmp
jne
mov
cmp
jne
push
push
call
add
test
jne
cmpl
jne
push
lea
push
push
call
add
cmpb
jne
movzbl
mov
sub
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
test
jne
cmpb
jne
mov
mov
mov
mov
cmpl
jne
mov
mov
mov
test
mov
mov
jne
mov
add
add
je
mov
lea
call
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
lea
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
jmp
mov
mov
mov
mov
push
push
push
add
add
sbb
add
lock
mov
pop
pop
pop
mov
pop
ret
test
movl
je
mov
push
add
add
mov
call
mov
call
test
jne
mov
mov
call
test
je
mov
mov
push
push
push
push
call
mov
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
cmpl
je
pushl
call
pop
ret
mov
test
je
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
mov
push
xor
push
mov
mov
push
mov
xor
push
lea
lea
mov
movl
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
add
cmp
je
movl
movl
movl
movl
mov
mov
mov
push
mov
mov
call
mov
push
mov
lea
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
mov
push
mov
call
mov
mov
mov
push
call
test
je
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
push
mov
lea
mov
call
mov
mov
lea
push
push
mov
call
cmp
jne
push
call
add
cmp
je
call
cmp
je
mov
mov
mov
push
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
mov
mov
push
push
call
mov
mov
push
call
mov
lea
call
lea
call
mov
mov
mov
push
call
jmp
lea
call
lea
call
test
js
mov
xor
lea
call
lea
call
cmp
jne
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
push
push
call
xor
add
cmp
je
push
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
xor
pop
ret
push
mov
and
mov
sub
cmp
push
push
push
jne
pop
pop
pop
mov
pop
ret
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
movl
push
xor
mov
mov
push
lea
add
movl
mov
mov
movl
mov
mov
mov
cmp
jbe
mov
push
push
push
call
add
cmp
je
sub
mov
mov
cmp
jae
cmp
mov
mov
mov
mov
jb
lea
mov
mov
mov
lea
push
call
mov
mov
mov
sub
sub
add
je
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
movl
lea
push
call
mov
or
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
movl
movl
movl
add
enter
movl
movl
movl
push
movl
mov
push
push
call
movl
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
lea
call
cmpl
lea
je
push
call
add
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
mov
test
je
mov
call
test
je
push
call
add
mov
mov
lea
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
push
lea
push
push
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
call
mov
pop
pop
pop
pop
xor
call
add
ret
mov
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
movl
movl
movl
movl
movl
je
mov
lea
push
mov
call
mov
test
push
lea
push
jne
lea
call
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
jne
mov
test
pop
pop
je
mov
push
mov
call
mov
test
je
addl
je
lea
call
lea
call
lea
call
lea
call
mov
call
mov
xor
cmp
movl
je
mov
mov
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
push
mov
push
mov
call
add
test
je
mov
mov
call
add
je
add
test
mov
je
mov
mov
push
call
cmpl
je
lea
lea
push
mov
mov
movl
movl
movl
mov
movb
call
add
test
jne
mov
mov
mov
push
push
push
push
push
push
call
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
test
jne
test
jne
lea
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
mov
mov
push
xor
push
mov
mov
mov
call
push
lea
mov
mov
call
mov
mov
lea
lea
push
push
call
testl
jne
cmp
jne
push
lea
lea
movl
movl
add
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
push
mov
lea
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
push
mov
lea
mov
call
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
call
lea
mov
call
push
lea
call
mov
mov
lea
push
push
call
lea
call
testb
mov
mov
mov
mov
je
movzbl
mov
push
mov
mov
push
mov
push
push
lea
push
push
mov
xor
push
push
push
push
push
call
mov
mov
mov
mov
push
push
call
cmp
jne
mov
cmp
je
lea
mov
mov
push
push
mov
call
call
push
push
push
push
call
cmp
jbe
add
cmp
jne
cmp
je
cmpl
je
testl
mov
mov
lea
jne
push
mov
call
cmp
je
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
mov
push
push
mov
call
mov
mov
mov
mov
add
push
push
call
lea
call
mov
cmp
mov
je
test
mov
js
mov
mov
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
pop
add
ret
push
lea
call
push
lea
call
mov
xor
test
je
jmp
push
mov
push
mov
test
je
mov
mov
andl
push
mov
lea
call
mov
mov
mov
lea
mov
call
xor
pop
pop
ret
cmpl
mov
mov
je
orl
xor
ret
push
mov
sub
push
xor
cmp
je
push
push
lea
mov
mov
call
lea
push
lea
lea
mov
push
push
movl
movl
movl
call
testb
jne
testb
jne
pushl
mov
lea
mov
call
pushl
mov
add
mov
call
cmp
je
pushl
mov
mov
push
push
pushl
push
call
test
js
mov
mov
push
push
call
mov
mov
add
push
push
call
push
push
pushl
push
pushl
call
add
lea
call
lea
call
lea
call
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
push
mov
push
mov
push
mov
movl
mov
test
push
mov
mov
jbe
mov
mov
mov
mov
lea
cmpw
je
sub
add
test
jne
mov
cmpl
movl
je
mov
mov
call
test
je
mov
mov
lea
lea
sub
mov
xor
sar
cmp
lea
mov
movl
movl
mov
mov
je
push
lea
call
test
je
mov
or
lea
call
test
je
mov
test
jbe
mov
mov
sub
movzwl
cmp
jae
movzwl
movzbw
movzwl
mov
add
sub
jne
mov
lea
push
call
mov
mov
add
test
jne
test
jne
cmpl
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
push
call
mov
add
jmp
sub
sar
test
jle
mov
push
push
push
lea
movl
movl
movl
call
push
call
add
mov
mov
add
test
jne
test
jne
cmpl
je
mov
sub
sub
push
add
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
mov
mov
mov
mov
push
push
call
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
test
je
testw
jne
pop
leave
ret
cmpl
je
cmpl
je
mov
mov
mov
pop
cltd
inc
add
push
mov
mov
mov
mov
call
test
mov
ja
mov
mov
lea
push
call
mov
test
mov
je
andl
push
mov
add
call
mov
test
je
lea
or
push
mov
mov
mov
push
call
mov
mov
lea
push
push
call
xor
cmp
jge
cmp
jge
cmp
jge
cmpl
jne
cmp
jge
lea
call
lea
call
pop
pop
jmp
pushl
mov
call
test
jne
pushl
mov
call
test
jne
cmpl
je
cmpl
je
jmp
push
mov
sub
push
mov
test
je
andl
push
mov
lea
call
mov
test
jne
and
push
mov
add
call
mov
test
jne
and
push
mov
lea
call
mov
test
je
mov
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
test
je
cmpb
je
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
mov
lea
call
mov
pop
leave
ret
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
push
mov
call
test
je
push
push
push
xor
push
lea
mov
mov
mov
mov
mov
call
push
lea
call
push
lea
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
call
test
js
mov
mov
mov
call
cmp
mov
je
mov
mov
mov
push
call
mov
mov
push
mov
call
mov
call
mov
mov
push
push
lea
push
call
mov
mov
mov
push
mov
lea
push
mov
push
push
mov
push
mov
push
push
call
test
mov
js
cmpl
jne
cmp
je
test
je
mov
call
push
call
mov
mov
andb
test
movb
movl
mov
mov
je
mov
mov
add
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
mov
mov
push
mov
call
push
mov
call
mov
andb
mov
mov
test
movb
movl
mov
je
mov
mov
add
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
pop
mov
pop
pop
pop
add
ret
int3
int3
push
mov
push
mov
call
test
jne
mov
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
je
mov
cmp
je
call
mov
test
mov
mov
jne
and
testb
je
mov
cmp
je
test
mov
je
mov
test
je
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
mov
mov
mov
push
push
push
call
test
mov
mov
mov
js
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
test
add
test
jne
add
add
test
jne
add
or
test
jne
add
add
push
and
add
mov
mov
test
je
mov
mov
mov
mov
mov
movl
xor
mov
test
jne
cmp
je
mov
pop
pop
pop
pop
add
ret
mov
test
je
mov
mov
test
mov
mov
je
mov
cmp
je
test
mov
je
mov
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
mov
jae
add
add
test
add
or
test
add
add
push
and
add
mov
mov
mov
mov
mov
mov
movl
xor
test
js
mov
test
jne
pop
pop
pop
pop
add
ret
mov
mov
lea
push
push
push
mov
call
mov
jmp
test
js
mov
mov
call
jmp
mov
call
pop
pop
pop
xor
pop
add
ret
int3
sub
push
push
push
mov
xor
push
mov
xor
mov
mov
call
test
mov
jne
lea
push
lea
push
push
push
push
mov
mov
call
add
xor
test
mov
js
push
push
lea
push
mov
lea
push
mov
push
push
push
call
mov
mov
add
test
js
mov
lea
movl
mov
movl
mov
mov
xlat
mov
test
js
mov
test
jne
lea
push
lea
push
push
call
add
cmp
je
cmp
mov
mov
mov
je
test
je
mov
movl
mov
mov
mov
test
jne
test
jne
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
mov
call
mov
mov
lea
lea
push
rep
call
mov
add
push
call
mov
add
cmp
jne
cmpb
je
mov
test
jne
add
push
call
add
add
push
add
call
add
mov
lea
push
lea
push
mov
lea
push
lea
push
push
call
fldl
fstl
add
fldl
lea
fstl
fldl
fsubp
fxch
fstpl
fsubrl
fstpl
call
inc
add
call
fldl
mov
call
mov
push
mov
lea
push
push
mov
lea
push
add
call
fldl
mov
fchs
fldl
mov
sub
fchs
fstpl
fstpl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lea
push
push
call
mov
add
test
mov
je
mov
call
mov
mov
lea
push
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
je
mov
push
push
call
mov
push
mov
call
add
lea
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
and
push
push
push
mov
push
lea
push
lea
mov
call
cmpl
je
flds
flds
flds
flds
mov
fxch
fstpl
fxch
fstpl
fstpl
fstpl
mov
pop
pop
pop
mov
pop
ret
sub
push
mov
cmp
push
push
push
je
mov
mov
mov
push
mov
call
test
jne
add
test
jne
push
mov
call
mov
mov
mov
mov
call
cmp
je
cmp
je
cmp
je
cmp
je
movl
mov
mov
cmp
jne
mov
mov
push
mov
call
test
jne
mov
and
or
jne
xor
pop
pop
pop
pop
add
ret
mov
and
or
jne
cmp
je
jmp
mov
mov
jmp
mov
call
test
jne
jmp
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
sub
lea
movl
movl
mov
push
push
mov
call
mov
mov
mov
add
add
sub
sub
js
mov
sub
mov
sub
js
test
mov
jl
xor
test
jl
add
ret
xor
jmp
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
push
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
lea
mov
call
mov
mov
push
call
lea
call
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
push
mov
cmp
mov
je
mov
push
call
mov
mov
call
lea
mov
call
lea
call
pop
lea
call
lea
call
incl
pop
xor
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
add
mov
xor
call
test
je
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
test
mov
mov
je
and
mov
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
test
je
lea
cmp
jne
add
test
je
mov
cmp
je
add
mov
mov
call
mov
call
inc
add
add
mov
lea
call
mov
pop
pop
pop
add
ret
mov
test
jne
jmp
push
push
mov
call
lea
mov
call
mov
pop
pop
pop
add
ret
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
push
xor
lea
mov
push
push
mov
call
mov
mov
add
cmp
je
cmp
mov
jne
cmp
je
cmp
jne
cmp
jne
mov
mov
cmp
je
mov
cmp
je
mov
mov
and
xor
or
jne
mov
and
xor
or
jne
mov
and
xor
or
mov
mov
mov
jne
mov
xor
and
or
mov
mov
mov
mov
je
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
cmp
jne
mov
lea
call
mov
add
mov
push
call
add
mov
lea
call
mov
mov
add
call
mov
mov
and
or
mov
jne
mov
and
cmp
mov
mov
je
or
jne
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
nop
mov
cmp
jne
add
cmp
jl
lea
mov
lea
mov
cmp
jne
add
lea
cmp
jae
cmp
jne
add
lea
cmp
jb
cmp
mov
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
mov
mov
jne
cmp
je
mov
mov
lea
call
mov
cmp
je
mov
mov
push
call
sub
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
cmp
jne
mov
mov
mov
add
rorb
lret
jne
lea
cmp
jb
add
call
lea
call
jmp
or
cmp
mov
mov
je
jmp
mov
mov
add
call
jmp
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
xor
cmp
push
push
je
mov
cmp
mov
je
mov
mov
push
call
mov
lea
mov
mov
lea
push
mov
mov
movl
mov
mov
mov
mov
push
push
mov
call
lea
lea
push
lea
icebp
mov
sbb
inc
and
adc
add
mov
mov
mov
call
add
cmp
je
push
call
add
cmp
je
mov
call
xor
cmp
mov
je
xor
cmp
lea
sete
mov
push
mov
push
push
push
call
mov
test
js
mov
mov
push
push
lea
call
test
js
cmpb
je
mov
mov
mov
push
push
push
mov
call
mov
test
jne
test
jne
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
lea
call
mov
mov
pop
pop
pop
xor
call
add
ret
mov
mov
movb
mov
jmp
push
mov
push
push
xor
cmp
push
je
cmp
je
mov
mov
mov
push
mov
call
mov
push
push
call
test
js
mov
push
mov
lea
mov
call
cmp
je
cmp
jne
mov
pushl
mov
push
call
mov
mov
lea
mov
mov
call
mov
mov
push
pushl
pushl
push
call
test
jne
lea
call
xor
pop
pop
leave
ret
mov
lea
push
call
mov
lea
push
push
call
test
js
xor
jmp
push
mov
push
mov
cmpb
push
jbe
mov
mov
mov
mov
xor
inc
call
test
je
mov
mov
pop
pop
pop
ret
push
mov
push
mov
test
je
lea
push
pushl
add
pushl
push
call
and
jne
test
jne
pushl
mov
call
pop
pop
ret
andl
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
test
je
mov
and
cmp
jne
mov
mov
add
mov
mov
xor
pop
ret
mov
test
push
push
je
mov
push
call
add
mov
call
push
mov
call
add
test
pop
pop
jne
jmp
int3
int3
int3
sub
mov
mov
push
push
mov
push
push
mov
mov
test
mov
jne
mov
mov
lea
push
push
push
push
push
mov
mov
call
xor
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
add
lea
lea
lea
call
test
je
mov
mov
mov
push
push
push
push
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
mov
test
jne
mov
mov
test
lea
je
andl
mov
mov
push
mov
call
test
jne
mov
mov
push
mov
call
test
jne
mov
lea
mov
and
mov
je
mov
test
jne
mov
test
mov
mov
je
test
jne
mov
mov
push
push
mov
push
push
push
push
push
lea
push
push
call
cmpl
mov
mov
jne
xor
mov
push
push
push
mov
push
mov
mov
push
push
push
push
push
mov
call
lea
call
cmpl
jne
mov
mov
mov
jmp
cmpl
je
andl
jmp
mov
push
push
lea
push
call
jmp
lea
jmp
mov
jmp
mov
jmp
add
andl
jmp
mov
mov
mov
add
or
mov
ret
push
mov
mov
push
push
xor
mov
mov
mov
mov
cmp
mov
je
mov
lea
push
push
push
call
test
js
add
lea
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
pop
pop
ret
mov
mov
push
pushl
push
call
ret
int3
int3
sub
push
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
call
test
jne
xor
mov
test
mov
mov
je
mov
mov
mov
mov
mov
push
push
push
push
call
lea
mov
mov
test
jne
test
je
mov
cmpl
je
mov
mov
add
mov
xor
lea
mov
mov
mov
lea
mov
cmp
jae
mov
add
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
jmp
mov
mov
mov
mov
and
mov
jne
pop
pop
pop
pop
add
ret
int3
int3
mov
mov
test
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
push
mov
movl
je
push
mov
push
mov
push
mov
test
jne
mov
movzbl
movzbl
cmp
jne
xor
add
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
sub
cmp
ja
jmp
test
je
pop
pop
pop
mov
pop
ret
mov
test
je
test
jne
cmp
jne
lea
cmp
je
mov
mov
jmp
pop
pop
pop
mov
pop
ret
lea
shlb
mov
or
mov
or
mov
or
mov
or
mov
or
repz
adc
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
lea
push
mov
push
lea
push
call
mov
mov
add
test
mov
jne
ret
mov
mov
push
call
mov
mov
call
fldl
add
push
push
fstpl
call
pop
pop
call
cmp
jl
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
mov
mov
mov
push
push
add
push
xor
mov
movl
movl
call
mov
or
cmp
je
cmp
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
push
mov
call
test
jne
push
lea
push
mov
call
mov
mov
pop
mov
mov
pop
mov
pop
mov
mov
pop
add
ret
xor
cmp
jne
push
mov
cmp
jne
push
mov
cmp
jne
pop
mov
pop
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
mov
mov
mov
call
push
mov
mov
push
call
add
push
push
call
mov
add
mov
mov
cmp
jne
mov
mov
mov
and
xor
or
jne
mov
pop
pop
pop
ret
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
imul
test
lea
ja
mov
add
pop
ret
mov
mov
test
je
andl
add
dec
jne
jmp
xor
pop
ret
push
mov
mov
andl
test
jne
lea
call
lea
pop
jmp
push
mov
andl
call
test
mov
jne
pop
jmp
int3
int3
fldl
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fldl
fcoml
fnstsw
test
je
fcoml
fnstsw
test
je
fstp
fldl
faddl
fcomp
fnstsw
test
je
fldl
faddl
fcomp
fnstsw
test
je
fstp
ret
push
push
mov
lea
push
mov
call
test
je
pop
pop
ret
andl
push
call
pop
xor
jmp
push
mov
add
push
pushl
call
mov
pop
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
test
push
mov
push
push
mov
push
jne
test
jne
mov
lea
xor
push
mov
mov
call
testb
jne
mov
cmp
je
mov
mov
lea
push
push
call
lea
call
mov
mov
push
push
lea
call
test
je
mov
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
cmpl
je
lea
call
xor
pop
pop
pop
pop
add
ret
lea
push
mov
mov
call
testb
jne
mov
mov
mov
mov
mov
push
push
push
mov
push
push
push
push
push
call
pop
pop
pop
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
push
push
mov
push
push
lea
movl
call
add
cmpl
je
test
jl
mov
mov
lea
push
mov
push
mov
mov
mov
add
push
push
call
test
js
cmp
jae
push
push
push
push
push
push
push
push
call
mov
mov
mov
add
mov
pop
pop
pop
xor
ret
int3
push
mov
and
sub
test
push
push
je
movl
test
je
sar
test
je
movl
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
lea
push
push
push
call
add
test
je
mov
mov
lea
push
mov
push
push
push
call
add
test
je
fldl
lea
push
sub
fstpl
call
add
test
jne
mov
push
call
add
pop
or
pop
mov
pop
ret
pushl
andl
mov
mov
call
mov
ret
mov
mov
mov
mov
cmp
push
jne
call
ret
int3
sub
mov
xor
mov
push
mov
push
push
push
mov
call
mov
cmp
je
cmp
je
cmp
je
movzbl
cmp
jle
mov
mov
mov
push
push
mov
call
test
jne
mov
orl
mov
cmpl
jne
cmpb
jne
mov
orl
mov
cmpl
jne
testw
je
mov
call
test
je
cmpb
jne
mov
orl
mov
movzbl
cmp
jne
mov
mov
mov
push
push
mov
call
test
je
mov
test
je
cmp
je
mov
mov
lea
push
call
test
je
mov
test
lea
mov
movl
movl
movl
mov
movw
lea
je
push
push
call
cmpl
je
mov
test
jne
test
jne
mov
test
jne
mov
mov
pop
pop
pop
xor
call
add
ret
cmpl
je
jmp
sub
cmp
ja
movzbl
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
mov
mov
mov
push
push
call
test
je
jmp
testb
jne
cmpb
je
mov
ss
inc
add
add
inc
add
movl
call
cmpl
je
mov
orl
mov
jmp
mov
orl
mov
jmp
testw
je
jmp
mov
orl
mov
jmp
add
adc
ja
adc
add
add
add
add
add
int3
int3
int3
int3
int3
mov
mov
push
push
push
mov
test
push
jg
mov
pop
pop
pop
movl
xor
pop
ret
mov
mov
xor
lea
mov
cmp
je
add
add
cmp
jl
mov
pop
pop
pop
movl
xor
pop
ret
mov
push
mov
call
add
test
je
mov
jmp
mov
lea
call
test
je
mov
mov
pop
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
lea
push
mov
push
mov
push
push
movl
call
mov
test
jge
push
mov
push
call
test
je
movl
orl
pop
xor
pop
pop
ret
mov
mov
shl
sub
lea
mov
push
push
call
xor
pop
pop
ret
mov
mov
cmpl
je
push
pushl
call
ret
xor
jmp
int3
int3
push
push
mov
mov
mov
mov
mov
call
test
jbe
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
cmp
je
mov
mov
push
push
push
push
mov
call
add
cmp
jb
pop
pop
pop
pop
pop
ret
mov
cmp
jne
mov
mov
test
jne
push
push
call
test
je
mov
mov
push
call
mov
jmp
mov
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
xor
cmp
jne
push
call
cmp
pop
je
movl
mov
mov
mov
push
call
push
lea
mov
call
mov
lea
push
push
push
call
mov
push
call
pushl
movb
pushl
pushl
push
call
test
mov
js
mov
call
mov
push
push
mov
pushl
mov
push
call
sub
je
dec
je
mov
call
mov
pop
pop
pop
pop
ret
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
push
push
mov
mov
mov
mov
push
mov
xor
cmpb
mov
mov
jne
cmpb
je
call
test
jne
mov
mov
mov
push
push
mov
call
cmp
je
mov
call
mov
movl
mov
mov
mov
push
push
push
push
push
push
mov
call
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
cmp
jne
mov
mov
lea
push
push
add
push
push
mov
mov
mov
call
mov
test
js
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
push
push
push
call
mov
mov
mov
push
push
push
push
push
push
mov
push
mov
push
push
push
mov
call
mov
lea
mov
push
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
cmpb
jne
lea
test
je
mov
test
mov
movl
movl
mov
mov
je
mov
mov
push
call
mov
test
mov
push
mov
push
mov
mov
je
mov
mov
push
call
mov
test
mov
jne
mov
lea
call
lea
call
mov
test
pop
pop
je
mov
mov
push
call
xor
add
ret
mov
jmp
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
cmp
push
push
lea
push
mov
mov
jb
mov
xor
cmp
je
mov
mov
lea
push
push
lea
push
lea
push
push
push
push
mov
mov
mov
sub
inc
add
inc
and
add
add
mov
mov
mov
mov
call
add
test
je
cmpl
jb
mov
mov
mov
add
push
push
push
xor
lea
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
mov
call
test
js
mov
push
push
xor
lea
call
mov
cmp
jne
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
mov
push
mov
push
mov
push
push
push
push
call
inc
add
dec
and
push
push
push
call
add
test
je
test
mov
je
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
mov
sub
cmp
push
mov
push
je
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
add
ret
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
call
pop
pop
add
ret
cmpl
je
xor
ret
cmpl
je
push
push
mov
push
lea
mov
call
test
je
push
lea
push
mov
call
push
lea
call
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jbe
push
mov
xor
cmp
je
movzwl
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
jne
cmp
jae
cmp
jae
cmp
jae
cmp
jae
add
cmp
jb
pop
pop
ret
mov
movzbw
movzwl
jmp
cmp
ja
jmp
movb
jmp
mov
test
je
mov
test
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
test
je
sar
add
lea
or
mov
ret
push
push
push
mov
push
mov
test
mov
je
mov
call
cmpl
jne
mov
or
mov
addl
mov
add
lea
or
mov
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
push
push
push
call
xor
add
cmp
jne
cmp
jne
xor
lea
mov
push
call
add
cmp
jne
jmp
cmp
jne
mov
mov
mov
cmp
jge
mov
call
mov
mov
mov
mov
cmp
je
lea
cmpl
je
mov
mov
push
call
add
cmp
jne
cmp
jne
xor
mov
push
call
add
cmp
jne
mov
lea
mov
mov
cmp
jl
cmp
je
mov
cmp
je
add
mov
cmp
mov
je
addl
cmp
jne
mov
mov
call
push
call
add
jmp
mov
sub
je
sub
jne
cmp
jne
mov
mov
call
mov
cmp
addb
pusha
call
movl
mov
call
pop
pop
pop
pop
pop
ret
cmp
je
mov
mov
cmp
lea
jne
mov
push
push
call
pop
pop
pop
pop
pop
ret
mov
push
call
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
call
test
movl
mov
je
addl
mov
mov
mov
mov
mov
movl
mov
xor
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
lea
push
lea
mov
iret
pushf
inc
add
mov
movl
mov
push
call
add
jmp
mov
mov
mov
mov
jmp
mov
push
call
jmp
push
mov
lea
push
call
mov
pop
mov
mov
cmp
pop
push
jne
call
ret
push
mov
sub
push
push
push
mov
mov
call
test
mov
je
mov
mov
push
xor
call
cmp
je
mov
mov
call
push
mov
lea
mov
call
mov
push
lea
lea
mov
mov
mov
mov
call
pushl
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
add
lea
push
push
call
mov
push
lea
lea
mov
mov
mov
call
mov
cmp
je
call
cmp
jne
cmp
jne
mov
mov
push
push
pushl
call
lea
call
lea
call
add
call
lea
call
cmp
jne
lea
call
pop
pop
pop
leave
ret
pushl
call
test
pop
jne
jmp
push
mov
sub
andl
push
push
push
call
test
je
mov
xor
lea
inc
mov
push
mov
mov
mov
call
test
pop
mov
jne
mov
lea
push
movl
mov
mov
mov
call
test
pop
jne
mov
testb
je
pushl
andl
pushl
call
pop
pop
test
je
push
push
call
pop
pop
cmpb
jne
mov
lea
mov
push
mov
mov
mov
call
push
push
mov
call
add
cmpl
jne
mov
andl
lea
push
movl
mov
call
lea
push
lea
push
lea
mov
add
inc
fsubs
repz
movl
mov
mov
mov
mov
call
push
push
call
push
push
call
lea
push
lea
push
lea
mov
push
mov
movl
mov
mov
mov
mov
call
push
push
call
push
push
call
andl
add
movl
mov
push
lea
call
mov
mov
call
test
js
mov
push
call
test
je
andl
mov
mov
lea
push
push
pushl
movl
call
pushl
pushl
call
add
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
xor
push
push
mov
mov
mov
mov
movl
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
push
lea
mov
mov
movl
movl
mov
call
push
call
add
push
mov
call
lea
push
call
add
push
mov
call
mov
test
jne
test
jne
mov
pop
pop
pop
xor
mov
call
add
ret
mov
ret
int3
int3
int3
int3
int3
sub
push
push
mov
xor
cmp
push
je
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
mov
je
mov
lea
push
push
mov
call
mov
cmp
jg
cmpl
je
mov
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
mov
mov
push
push
call
mov
push
lea
mov
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
test
js
cmp
je
mov
mov
lea
push
push
mov
call
cmp
jne
lea
call
lea
call
lea
call
mov
pop
pop
pop
add
ret
push
lea
mov
call
mov
mov
lea
push
push
mov
call
mov
test
js
mov
cmp
je
mov
mov
add
push
mov
push
push
mov
call
lea
call
jmp
push
mov
and
mov
mov
sub
push
mov
test
push
push
movl
jne
push
mov
call
add
push
mov
call
mov
add
lea
push
mov
mov
push
push
push
mov
movl
call
mov
mov
mov
add
test
je
mov
test
je
jmp
lea
mov
test
je
mov
xor
nop
cmpw
je
xor
test
jne
add
add
jmp
cmp
je
mov
test
jne
xor
test
jne
mov
pop
pop
pop
mov
pop
ret
mov
jmp
test
je
mov
mov
mov
mov
cmp
je
movzwl
movzwl
sub
jne
jmp
sub
add
add
test
jne
jmp
mov
mov
push
push
call
add
test
je
mov
not
test
jne
mov
push
push
xor
call
add
push
mov
lea
mov
call
mov
cmp
je
mov
push
mov
lea
mov
call
mov
cmp
je
mov
mov
mov
cmp
je
mov
mov
call
cmp
je
mov
mov
mov
call
cmp
mov
je
mov
mov
push
call
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
lea
call
test
js
cmp
je
mov
mov
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
lea
call
lea
call
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
push
push
je
test
je
sar
mov
mov
mov
push
push
push
push
push
call
xor
lea
mov
test
jne
cmp
jl
pop
pop
pop
xor
pop
ret
mov
jmp
mov
call
test
jne
mov
mov
mov
mov
push
push
call
add
add
jmp
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
cmpl
je
call
mov
cmp
jne
mov
test
je
mov
pushl
mov
push
call
ret
push
xor
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
push
push
push
je
mov
mov
mov
cmpl
je
xor
pop
pop
pop
pop
add
ret
mov
push
call
add
test
je
call
mov
test
mov
je
mov
mov
push
call
test
movl
je
add
push
push
add
test
js
push
call
add
test
je
mov
mov
call
mov
lea
call
cmpl
je
call
test
mov
je
mov
mov
mov
push
call
mov
test
je
mov
test
je
push
push
call
add
test
mov
je
add
push
call
mov
lea
push
lea
push
push
push
push
call
add
test
js
mov
test
je
mov
push
push
call
mov
push
mov
mov
push
push
movl
call
add
test
je
mov
mov
mov
push
push
push
call
test
js
push
call
add
mov
test
je
test
je
mov
mov
lea
call
lea
call
lea
call
jmp
xor
jmp
int3
sub
mov
xor
mov
push
push
mov
push
push
xor
push
lea
lea
push
push
movb
call
push
push
push
call
add
lea
push
movb
call
mov
cmp
lea
je
mov
shr
lea
cmp
jl
mov
cmp
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
test
jne
mov
test
jne
lea
lea
push
lea
mov
mov
mov
movl
call
call
push
push
push
call
mov
cmp
je
testl
jne
mov
cmp
jne
push
mov
push
add
push
call
add
push
push
call
mov
add
stos
mov
add
into
add
add
push
jno
scas
mov
xchg
add
lret
add
add
or
mov
rolb
lods
rorb
mov
jb
imul
arpl
arpl
add
add
mov
push
xchg
arpl
mov
popl
add
mov
test
add
add
imul
lea
add
hlt
add
xchg
ret
add
push
add
in
test
mov
loopne
add
imul
add
add
mov
iret
add
cmpsl
lret
out
add
add
add
add
fisubl
add
notl
add
mov
mov
add
les
mov
loopne
adc
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
aam
mov
mov
add
lcall
scas
in
add
add
mov
add
cltd
add
pop
add
add
add
lods
mov
insb
xchg
mov
pusha
add
icebp
stc
add
fwait
xlat
add
scas
add
add
add
pushf
add
xorl
add
in
lcall
call
add
push
orb
and
movl
popl
push
push
push
push
push
call
add
add
add
add
insb
add
jl
pop
add
into
add
mov
aad
add
mov
xchg
clc
add
jno
int3
je
add
add
add
pushf
mov
mov
cmc
xchg
mov
loopne
mov
mov
icebp
test
jmp
push
addl
mov
add
mov
fs
add
add
add
pop
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
xchg
xorl
add
mov
jae
jnp
je
lds
fwait
mov
test
and
ljmp
add
add
add
sub
mov
mov
lret
push
add
add
add
jno
pushf
aad
lods
arpl
add
add
notl
ffree
add
pop
add
add
fcoml
pushf
add
pop
push
call
push
lea
push
push
lea
push
call
movsl
xchg
nop
lret
add
and
add
pop
add
outsl
add
add
xchg
add
xchg
add
xchg
add
add
into
push
fsubr
add
pop
mov
mov
pop
jns
jns
add
flds
sahf
negb
jns
incb
cwtl
jns
fbstp
mov
andb
stos
mov
lea
pop
call
push
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
js
jl
add
add
add
mov
add
add
outsl
in
add
xlat
add
add
mov
ja
add
ret
add
push
add
add
lcall
enter
add
stc
add
clc
add
mov
add
lods
add
add
add
mov
lea
pop
call
jmp
ret
push
push
push
call
mov
xchg
add
mov
bnd
rolb
add
out
add
enter
add
out
rorl
add
add
add
add
add
mov
movsb
add
push
lock
lea
xchg
xor
add
loop
enterw
add
xchg
arpl
hlt
lea
pop
mov
mov
push
push
lea
push
call
jne
imul
push
mov
test
ljmp
fs
add
popa
add
mov
push
data16
add
cli
add
fiaddl
jnp
add
nop
jl
out
les
push
mov
filds
pop
add
mov
push
mov
fmuls
add
fmull
pop
in
ret
add
add
push
push
push
call
add
add
add
out
add
test
push
pop
icebp
xchg
jge
testb
mov
gs
stc
rolb
add
add
fidivs
outsl
push
mov
sti
in
push
xchg
add
mov
cwtl
mov
rcr
roll
out
push
cmpb
cli
add
push
add
sub
into
cmpsl
add
fldcw
jl
fmull
ret
je
add
push
push
push
push
push
push
push
push
push
call
enter
cwtl
add
movsl
addb
mov
add
faddl
push
pop
add
add
push
add
test
out
add
aam
add
fwait
push
add
loope
gs
add
pop
jecxz
ret
add
add
mov
add
jp
lock
lods
pop
xchg
rolb
add
mov
lods
mov
lcall
jne
call
data16
mov
xor
push
lea
push
push
call
outsl
aad
into
idivb
sbbb
clc
jnp
xchg
pop
add
add
roll
add
lock
fucom
leave
add
add
ja
add
cmpsb
xchg
add
loopne
jo
pop
out
movsb
xchg
fldl
add
roll
into
jge
add
add
loop
mov
push
mov
mov
lea
pop
add
push
push
push
call
add
pop
add
mov
lock
in
add
stos
add
hlt
rorl
testb
add
add
test
out
add
mov
add
add
mov
add
pop
rcll
add
add
mov
fisttps
add
add
leave
js
lahf
add
add
pop
call
mov
xor
push
push
ror
xor
ror
rol
push
and
add
sub
sub
sub
pop
sub
sub
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
add
mov
add
cmc
enter
add
add
nop
iret
add
lret
add
pop
js
add
xchg
add
add
scas
lods
int3
add
jmp
jecxz
stc
mov
pop
aam
add
and
loop
push
pop
add
shlw
cwtl
add
push
fildl
sarl
add
loopne
mov
push
lock
lea
pop
pushl
push
lea
push
push
push
push
push
push
push
push
lea
push
call
jno
pusha
cmpsl
fdiv
scas
xchg
pop
les
rorl
add
add
push
add
add
add
pushf
lret
add
add
int3
add
sti
fcoms
jmp
add
push
fwait
jno
fwait
ret
fiadds
loope
in
stos
add
incb
loopne
add
cwtl
in
mov
lea
pop
call
mov
movl
push
lea
push
push
push
push
lea
push
push
push
lea
push
push
call
add
pop
add
addl
add
call
stos
jae
mov
fsubp
add
mov
leave
aad
lea
add
add
lods
lahf
lods
fwait
sti
in
jl
pop
add
pop
add
data16
add
add
cli
add
add
add
add
add
mov
add
add
jb
mov
add
add
pop
lea
push
pushl
push
push
push
lea
push
push
lea
push
call
mov
nop
cli
add
push
loope
add
push
sti
add
pop
add
add
loop
rolb
mov
xorl
mov
loop
add
ljmp
add
xchg
add
int
add
xchg
testb
shrb
repnz
mov
aam
add
add
add
jb
add
add
pop
pushl
push
push
call
mov
std
add
pushf
jb
xlat
pop
jne
jb
add
mov
add
mov
add
jecxz
add
push
xchg
mov
add
add
add
movsb
mov
add
add
xlat
pop
jp
mov
add
mov
add
rol
mov
add
add
add
add
add
add
fiaddl
jle
add
add
mov
add
add
bound
pop
call
pushl
push
lea
push
call
mov
sarl
add
js
add
fcoml
test
cltd
add
fdivrl
xchg
test
add
lret
mov
add
xlat
mov
icebp
scas
add
mov
jno
movsb
fwait
lods
pop
fistps
enter
add
add
fmul
add
jae
lock
add
je
mov
mov
add
iret
add
pop
pushl
call
push
push
rol
push
or
not
add
sub
sub
rol
sub
pop
add
pop
push
push
push
push
call
lds
cwtl
cltd
in
nop
addb
out
add
orb
add
jge
clc
add
add
shlb
add
mov
add
mov
add
loopne
pusha
jl
add
fbld
push
add
jl
jae
add
out
lock
jl
add
les
jne
call
push
push
push
call
icebp
andl
je
add
pop
add
add
lea
add
cmc
stos
fmul
xchg
movb
add
pop
add
loop
mov
stos
add
mov
pop
xor
leave
add
clc
mov
push
add
add
add
add
rcr
arpl
add
add
lea
add
add
add
add
mov
lea
pop
push
push
push
inc
add
lea
push
push
pop
add
sub
sub
dec
pop
lea
pop
push
push
push
lea
push
lea
push
push
call
add
aad
jl
jle
add
add
add
stos
add
test
add
bound
cmc
add
push
jns
mov
add
add
mov
enter
test
add
push
xchg
mov
mov
popf
mov
loopne
test
add
add
add
in
mov
add
mov
add
repnz
int3
jle
add
add
add
jle
add
lea
pop
push
push
lea
push
push
push
push
push
push
push
call
add
repnz
test
iret
mov
jmp
loopne
add
mov
mov
add
cwtl
hlt
pop
add
push
add
ret
cli
pushf
cmpsb
xchg
filds
clc
add
repnz
mov
lret
leave
add
test
scas
out
roll
jge
jne
add
add
cmpl
add
push
add
mov
lea
pop
push
push
push
push
push
push
push
push
push
push
push
call
jbe
ja
subl
fistpll
fiaddl
cmpsl
add
add
test
add
add
add
pop
iret
mov
add
add
add
les
jge
add
nop
roll
test
add
mov
popa
pop
mov
add
mov
pop
call
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
fiaddl
add
add
in
add
add
rcll
add
lahf
pop
mov
jb
loope
add
add
je
pop
add
cmc
push
mov
jae
gs
loope
xchg
faddp
fcmovne
fildl
add
icebp
add
add
roll
add
outsl
insb
shr
mov
add
xchg
add
outsl
jo
mov
add
mov
aam
bound
mov
push
push
push
push
lea
push
push
call
add
filds
add
mov
jecxz
mov
mov
scas
pusha
sub
add
xlat
add
insb
add
cld
push
lahf
jnp
add
mov
add
lods
push
mov
jle
stc
in
addb
popl
filds
mov
loopne
gs
add
pop
xchg
mov
mov
rol
jge
shl
mov
pop
data16
add
add
pop
mov
add
add
push
push
push
push
push
push
push
push
push
call
in
bound
lock
add
pop
stc
add
add
insb
push
stc
add
mov
insb
mov
jo
add
add
lea
ret
in
imul
loopne
test
push
pop
xlat
xchg
movsl
xlat
lcall
add
stos
icebp
xchg
add
rcl
add
add
mov
add
add
add
pop
add
mov
xor
push
push
push
push
push
push
lea
push
push
push
call
mov
imul
test
cmpsl
add
shll
add
mov
xchg
test
add
mov
cmpsl
pushf
add
add
cli
cld
mov
nop
in
add
hlt
pop
mov
add
add
cmpsb
out
add
addr16
mov
add
out
jbe
add
mov
xchg
add
addb
add
shll
add
mov
lea
pop
add
push
push
call
add
call
push
add
pop
mov
ljmp
add
add
add
add
lret
popf
add
add
add
fsubrl
out
mov
push
popl
add
add
mov
add
test
filds
add
add
jmp
mov
lea
pop
push
mov
xor
push
push
push
lea
push
push
push
push
lea
push
call
out
mov
add
push
cli
imul
add
popf
add
mov
pop
mov
lcall
jne
std
hlt
add
add
add
add
fwait
ja
xchg
js
add
ljmp
bound
add
int
test
add
icebp
cli
add
cmpsl
xchg
add
insb
add
jne
add
fisttps
rorb
pop
add
pop
push
push
call
lcall
pop
xlat
jmp
add
push
add
in
ja
jp
add
aam
add
mov
add
addr16
rolb
mov
pusha
add
add
xchg
add
push
pop
add
add
pushf
mov
add
ja
push
add
icebp
add
sti
popa
push
add
jge
cwtl
mov
lds
add
add
pushf
jbe
add
pop
mov
xor
push
push
lea
push
push
push
push
push
lea
push
push
push
call
pop
scas
add
mov
lods
push
add
add
leave
add
mov
mov
add
int3
push
iret
bound
mov
add
testb
test
add
mov
add
test
mov
scas
mov
mov
xchg
out
xchg
add
gs
test
xorb
add
add
add
add
add
add
add
pop
push
mov
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
roll
stos
pop
into
cwtl
jo
add
lock
mov
add
mov
jns
mov
mov
shr
int3
imul
jge
fadds
add
mov
add
outsl
popf
push
out
addb
add
add
aam
xchg
add
add
xchg
jmp
jo
faddl
cli
jb
add
lock
push
stc
jge
mov
add
pop
xchg
mov
lea
pop
xor
push
lea
push
push
call
add
xchg
add
pop
test
out
mov
mov
cwtl
mov
xchg
mov
jno
icebp
add
outsl
loopne
add
int
fnstcw
out
add
xchg
add
add
in
xchg
cwtd
in
add
add
xchg
add
add
pushf
jb
imul
int
out
mov
cmpsb
aam
add
mov
test
xchg
les
add
mov
lea
pop
add
push
push
push
lea
push
push
call
jmp
add
pop
mov
add
bound
add
int
add
rolb
add
outsl
add
mov
faddl
mov
add
push
int
shr
add
add
hlt
out
mov
mov
jle
push
add
mov
add
iret
add
test
test
mov
mov
lea
pop
sub
push
push
push
push
push
push
push
lea
push
push
push
call
add
popf
jb
add
xchg
add
add
pop
mov
add
add
jne
add
add
test
jne
add
pop
xchg
add
add
jo
add
jnp
add
push
ficoms
add
xchg
fsubrs
call
lock
xchg
mov
lods
out
lret
lea
pop
pop
push
push
push
push
push
lea
push
push
call
shrl
add
loop
push
in
add
add
mov
std
add
add
add
sti
add
xchg
pop
movb
outsl
nop
jae
lret
mov
push
xchg
add
cmc
mov
mov
pusha
popf
in
add
add
add
sarb
add
loopne
add
mov
mov
jbe
aam
jecxz
xchg
hlt
add
lods
xchg
jo
std
mov
mov
sahf
mov
lea
pop
rep
push
lea
push
call
mov
js
mov
jnp
lock
add
xchg
mov
sahf
out
jl
fcompl
jnp
add
mov
popf
roll
add
push
add
push
ljmp
add
imul
mov
fisubrs
mov
add
add
add
testl
add
lret
mov
lea
pop
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
movsb
stc
add
jb
popf
xchg
mov
lret
add
int
jl
mov
add
imul
jle
add
mov
addr16
add
push
iret
cltd
enter
fwait
mov
add
popf
clc
in
aad
add
subb
add
enter
shll
pop
push
add
iret
or
cmpsb
shl
add
pusha
rcr
mov
lea
pop
mov
push
lea
push
lea
push
push
call
add
add
add
test
mov
fiaddl
fldenv
addb
mov
mov
add
add
loop
push
jle
add
rolb
push
add
xchg
into
add
xchg
mov
mov
add
push
add
les
pusha
add
testl
je
add
push
add
push
nop
mov
xchg
aam
add
lahf
add
les
pop
in
push
lea
push
push
push
push
lea
push
lea
push
call
jae
add
add
mov
xchg
movsb
rcll
in
f2xm1
les
scas
add
xchg
mov
hlt
lods
add
xchg
jno
add
add
pop
add
jb
mov
add
pop
add
scas
les
add
pop
popa
stos
movsl
add
jmp
add
scas
mov
mov
lret
scas
fs
data16
mov
fstps
in
into
push
add
mov
lea
pop
add
add
push
push
call
add
add
jl
iret
add
cltd
mov
add
imul
xchg
add
nop
add
add
shlb
stos
test
add
jmp
repnz
add
enter
add
arpl
add
add
stos
lods
icebp
int
std
clc
mov
ljmp
lea
pop
mov
xor
push
lea
push
call
mov
push
enter
testb
out
add
outsl
jae
roll
add
jae
pop
xchg
clc
add
out
mov
movsb
movsb
add
js
jnp
mov
xorl
add
add
add
lds
add
jp
mov
add
add
jl
hlt
add
add
mov
mov
sar
add
xchg
add
addb
cmpsl
fs
negb
jge
in
mov
lea
pop
mov
push
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
push
out
aad
add
cmpsl
push
xchg
add
imul
jmp
add
test
fadds
mov
add
add
mov
sti
add
andl
add
popl
stos
xlat
add
pusha
hlt
pop
push
loop
add
add
jo
mov
add
pop
xchg
xchg
pop
lods
add
shlb
push
xchg
into
mov
add
jge
aad
fmull
adc
push
push
push
lea
push
push
push
push
push
call
into
js
pop
pop
arpl
jp
mov
lock
add
xorb
fldl
add
popa
iret
add
mov
in
add
add
add
add
out
fiadds
push
popf
pusha
add
arpl
lods
loop
add
add
add
cmpsb
test
add
roll
push
add
rcll
hlt
lea
pop
add
push
push
call
enter
pusha
add
add
jp
lret
adcl
add
fmuls
add
ret
push
rol
add
add
bound
cld
scas
add
sti
push
movl
add
loopne
xchg
icebp
mov
add
add
add
xchg
outsl
add
add
cwtl
fidivl
imul
out
jbe
cmpsl
fmull
pop
mov
xor
push
push
lea
push
push
call
les
jb
push
mov
insb
pushf
jge
add
mov
mov
movb
aam
add
mov
add
enter
icebp
add
jne
int3
add
add
mov
add
push
add
fldl
xchg
mov
test
add
add
xchg
push
add
clc
add
mov
popa
movsb
in
fxch
pop
filds
xchg
pop
add
push
push
lea
push
push
push
call
cbtw
add
cmc
std
add
loop
mov
add
lods
add
popf
test
add
cmpl
add
mov
add
leave
cmpsb
add
jo
add
in
add
jecxz
add
clc
add
add
sahf
clc
addr16
add
cmpsb
add
add
mov
add
shrb
adc
add
mov
push
push
not
rol
add
push
and
add
add
inc
shr
sub
add
pop
sub
not
shr
pop
push
push
lea
push
lea
push
push
push
call
add
data16
push
pop
rcrb
mov
add
mov
in
add
cld
mov
loop
mov
inc
cmc
add
mov
add
cld
mov
pop
add
mov
xchg
add
pushf
add
mov
add
add
mov
add
add
nop
mov
arpl
add
mov
lea
pop
pushl
call
push
push
push
push
push
pop
add
lea
shl
sub
dec
pop
add
shl
add
add
pop
push
push
lea
push
push
push
lea
push
push
call
addb
add
add
arpl
test
addb
add
cli
cli
mov
add
popl
fdivrs
mov
push
push
lcall
add
cmpsl
cmpsl
add
pop
xchg
add
test
mov
addr16
add
add
add
cwtl
pop
add
pop
ficoml
leave
into
fstpt
mov
lea
pop
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
call
add
xchg
add
add
xchg
faddl
add
call
pop
add
add
lcall
add
xchg
jmp
ret
add
int
add
jne
lret
loope
add
loop
add
cltd
jo
shrl
les
push
fistpl
fmuls
pop
call
push
push
push
push
push
lea
push
lea
push
call
mov
xchg
mov
ja
mov
add
push
add
add
stc
add
add
add
push
add
add
xchg
shl
add
aad
add
jno
add
test
add
in
std
add
add
lahf
add
mov
pop
ret
popa
add
add
je
pop
cwtl
add
movl
in
enter
add
add
scas
scas
pop
add
enter
addr16
mov
push
push
call
xchg
ja
xchg
add
add
pop
lcall
cwtl
add
shl
mov
rolb
mov
add
fwait
mov
add
aam
loop
int
not
mov
rolb
mov
add
popa
lds
add
xchg
fildl
add
xchg
add
add
add
fwait
addb
add
arpl
or
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
xchg
js
add
mov
data16
adcl
xchg
lahf
lock
out
fildl
int3
insb
jle
repnz
addr16
fstl
add
xchg
mov
add
add
stos
stos
int3
mov
mov
add
jmp
add
xorl
add
add
ljmp
mov
and
mov
add
push
push
lea
push
push
lea
push
push
call
pop
add
xchg
ficomps
out
add
add
out
add
les
js
add
ficoms
lock
shll
fildl
imul
pop
xchg
loope
add
std
add
cli
add
sbb
iret
add
std
xchg
add
fildl
out
add
std
icebp
add
cld
lea
pop
add
push
push
lea
push
lea
push
push
push
call
fxch
push
stc
enter
add
loopne
add
add
jmp
out
aam
add
lods
imul
jne
add
add
add
in
add
push
add
insb
fsubrs
movb
add
add
add
rorl
xchg
icebp
mov
push
jle
add
add
jns
xchg
jecxz
pop
add
mov
pop
add
mov
push
push
push
push
push
push
call
in
add
ret
add
js
call
fwait
fs
add
jecxz
mov
add
pusha
mov
jge
fadds
lds
add
add
xchg
jbe
stc
cld
add
add
add
cwtl
push
jns
jmp
add
add
lds
bound
mov
add
add
add
pop
cmpsl
outsl
pop
add
ljmp
addr16
xor
push
push
push
push
lea
push
push
lea
push
push
call
jnp
add
add
mov
mov
add
add
nop
add
mov
pop
clc
add
sbb
mov
je
jb
lods
incb
pop
add
add
pop
lret
mov
pushf
lcall
ret
add
lret
lcall
push
fcmovne
add
cwtl
push
add
add
add
lahf
shr
jns
add
jns
jae
popf
mov
lea
pop
add
push
push
lea
push
push
push
lea
push
call
int
add
ja
add
stos
add
test
add
cmc
jne
lds
add
cld
xchg
addb
cmpsl
nop
rcrb
jmp
add
pop
push
xchg
pop
pop
fwait
add
push
call
xchg
pop
cmc
mov
outsl
xchg
xchg
scas
cwtl
jnp
jp
add
add
add
int3
lea
pop
add
push
mov
xor
push
push
push
push
push
push
call
add
aad
xchg
stos
mov
pop
add
cmpsl
sti
jns
pop
test
enter
add
out
add
push
mov
add
add
in
mov
sti
enter
add
mov
out
nop
jae
shrb
enter
mov
jo
jge
add
testb
mov
fcomps
popa
sbb
lock
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
roll
jae
jns
in
add
add
add
add
add
add
add
push
popf
mov
icebp
add
xchg
ret
xchg
add
xchg
push
add
add
add
add
push
add
add
push
testb
mov
add
add
in
faddl
test
fistps
mov
lea
pop
pop
push
push
push
push
push
call
add
popf
jp
leave
mov
xchg
clc
lods
add
xchg
imul
add
add
add
add
pop
jae
add
pop
add
add
mov
add
add
loope
movsb
outsl
fcomps
mov
xchg
in
mov
add
iret
les
js
push
rcll
out
add
jp
popf
xchg
mov
data16
mov
xor
push
lea
push
push
push
call
ljmp
add
push
cmc
in
mov
stos
hlt
mov
xchg
mov
add
mov
add
add
pusha
rolb
int
fisubrs
add
sahf
nop
add
mov
add
push
mov
xchg
mov
int3
int
test
jno
cli
add
pop
xchg
jmp
add
jecxz
add
pop
rep
push
push
push
lea
push
push
push
push
push
lea
push
push
call
int
jp
neg
mov
in
into
add
pop
mov
add
add
push
in
mov
add
add
in
js
push
add
clc
mov
add
lods
movsl
lcall
nop
jo
add
ljmp
lock
add
jmp
pop
add
add
jb
add
add
pop
pushf
stos
cli
ljmp
shrb
jp
add
scas
addr16
lea
pop
mov
push
push
push
push
lea
push
lea
push
push
push
call
mov
mov
mov
ja
movsl
add
add
xchg
add
add
fadds
pop
lcall
pop
cld
mov
outsl
add
test
add
addr16
add
add
add
divb
pop
add
cli
enter
cmc
add
hlt
add
loope
gs
mov
lea
pop
xor
push
push
call
add
pusha
jae
mov
pop
fadds
imul
iret
stos
mov
mov
mov
mov
in
add
add
in
add
add
mov
addl
fwait
add
lea
add
add
insb
add
add
loop
mov
add
push
roll
add
popa
mov
cmpsl
int3
add
mov
stos
add
add
jmp
mov
lea
pop
add
push
push
lea
push
push
push
push
lea
push
push
push
push
call
mov
add
nop
add
cli
add
outsl
test
pop
add
call
iret
test
xchg
leave
cld
lds
pop
iret
add
add
pop
cwtl
lea
push
add
add
add
mov
add
add
leave
aad
movsl
divl
add
add
outsl
add
add
add
mov
sub
leave
je
push
push
push
push
lea
push
lea
push
push
push
push
call
movsl
add
sahf
add
add
lret
jns
mull
add
add
mov
xchg
out
add
add
sarb
enter
add
add
hlt
lods
loopne
add
add
test
shll
add
leave
lea
mov
push
add
mov
leave
add
jmp
mov
out
out
add
xchg
aad
add
popa
and
mov
push
push
push
push
push
push
push
push
call
outsl
ret
pop
mov
pop
mov
add
popf
mov
jo
faddl
fiaddl
add
add
fcoml
add
shlb
add
les
mov
mov
pop
push
ja
xchg
add
add
fdivl
mov
enter
add
clc
fcoms
add
int
add
leave
aad
cli
add
push
add
pop
movsb
in
pop
mov
lea
pop
xor
push
push
push
push
push
push
push
lea
push
call
aad
arpl
add
jecxz
jle
add
mov
add
jb
aam
add
mov
popa
add
fisubl
int3
add
mov
add
xchg
push
mov
add
pop
pop
add
jecxz
add
rolb
aad
lret
cmpsb
addl
add
mov
add
rorl
out
add
add
stos
fcmovne
add
fmull
les
push
lea
push
push
push
push
push
call
push
ljmp
add
add
mov
cmp
jge
add
jmp
add
rcrl
xchg
add
push
mov
xchg
add
push
mov
mov
mov
add
movsl
add
insb
hlt
out
mov
ljmp
scas
push
mov
jb
jns
mov
add
add
cmpsb
add
pop
mov
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
icebp
mov
hlt
arpl
xchg
add
add
into
mov
pop
add
faddl
add
fiadds
cld
mov
popa
mov
ret
mov
add
scas
pop
add
stos
add
shll
les
lods
add
pop
add
mov
xchg
scas
add
mov
ret
mov
add
mov
pusha
add
lea
pop
xor
push
lea
push
push
call
mov
add
gs
movsl
add
addb
xlat
add
fwait
movb
add
in
lds
add
mov
jae
add
xchg
div
lret
add
in
pop
add
add
pop
add
outsl
mull
xchg
add
in
bound
add
fmull
les
push
push
push
push
call
ja
out
add
add
add
in
les
add
lcall
ret
add
jne
mov
push
add
in
push
lret
lods
popa
pop
clc
mov
push
adc
add
stos
mov
mov
add
lahf
add
scas
leave
aam
repnz
movsb
gs
add
lea
pop
add
push
ror
add
pop
add
push
push
push
push
push
lea
push
call
xchg
add
add
pop
mov
mov
pop
sti
add
lea
pop
add
add
add
add
aad
pop
mov
sahf
add
sahf
mov
pop
jle
push
jecxz
les
filds
add
add
fidivl
rcl
jne
xchg
mov
pop
add
add
test
dec
add
test
mov
sbb
push
push
push
push
push
push
call
rolb
add
push
add
add
push
movsl
lahf
mov
add
add
in
jbe
icebp
add
icebp
add
clc
mov
add
add
add
jo
call
add
rolb
mov
mov
add
add
xchg
pusha
incb
mov
add
add
bound
pop
mov
push
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
in
ja
add
test
add
bound
jns
add
add
popa
imul
add
stos
push
in
add
stc
jp
xchg
add
mov
add
add
imul
movl
add
add
push
add
add
nop
xchg
js
add
add
mov
lea
pop
xor
push
push
push
push
push
push
push
push
push
call
test
cli
add
aam
add
push
mov
add
xchg
add
ret
xchg
add
sti
add
movsl
add
jnp
popf
mov
push
mov
add
add
xchg
out
add
rcr
lods
add
fdivrp
mov
lods
add
lahf
xor
pop
test
mov
lea
pop
add
push
lea
not
pop
add
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
int
jnp
push
jge
lods
add
pop
add
add
lds
test
stos
add
imul
pushf
shll
addl
mov
add
mov
add
les
add
pop
add
add
mov
add
js
imul
add
lea
add
ret
mov
lea
pop
pop
rep
push
shr
ror
ror
pop
mov
xor
push
lea
push
push
lea
push
push
push
lea
push
call
cwtl
add
iret
jnp
enter
push
jmp
add
add
jmp
jno
movsb
icebp
nop
add
mov
add
add
mov
arpl
stos
add
int3
mov
mov
add
add
cwtl
add
or
push
jo
mov
xchg
stos
mov
mov
xchg
faddl
add
sahf
cmpsl
roll
sbb
or
je
mov
add
push
push
push
push
call
rolb
fcomip
enter
mov
lds
jae
mov
mov
cmpsl
add
add
add
sti
mov
add
ja
jbe
cli
pop
out
push
mov
xchg
repnz
mov
rolb
add
add
mov
ja
mov
push
jmp
mov
jle
jo
cmc
orl
add
add
movsb
push
lea
push
lea
push
push
call
insb
jo
add
add
mov
test
jns
fwait
testl
pop
jno
movsb
add
shl
cmc
mov
add
push
rorb
mov
enter
popl
add
mov
fiadds
add
loopne
mov
clc
test
add
fwait
add
aad
bound
mov
bound
pop
pop
push
push
not
rol
push
sub
add
xor
lea
rol
sub
not
dec
pop
lea
pop
push
inc
pop
pop
push
not
rol
pop
mov
mov
push
push
push
push
call
lret
xchg
pop
add
jecxz
pop
add
add
add
popa
faddl
add
add
add
add
add
fisubl
fldl
add
add
stos
pop
pushf
les
add
add
in
clc
add
add
add
add
add
enter
add
xchg
add
out
add
pop
add
jbe
lock
mov
mov
pusha
stos
test
lea
pop
mov
jmp
push
xor
shl
pop
push
mov
push
push
push
push
call
add
scas
mov
orb
insb
flds
aam
push
test
les
add
cmpsl
test
mov
add
mov
rcrl
add
fsqrt
std
add
mov
shl
mov
add
add
testl
add
lods
icebp
fsub
add
add
stos
add
xchg
out
jno
add
mov
lea
pop
add
push
shr
rol
not
pop
push
push
push
lea
push
lea
push
push
call
sti
add
pop
out
movsl
add
add
call
arpl
divb
push
testb
out
add
icebp
add
add
add
mov
mov
jbe
cmpsb
add
mov
xorl
add
add
add
add
add
int
mov
and
add
adc
push
push
shl
pop
push
push
push
push
push
push
push
call
jp
in
sahf
add
pop
jp
add
jo
push
add
cltd
mov
divl
xchg
push
add
add
jne
add
add
add
test
add
add
mov
imul
je
add
push
shlb
add
popl
rol
push
scas
xlat
add
add
mov
mov
outsl
pop
mov
add
mov
lea
pop
mov
pop
push
push
push
call
shl
leave
mov
add
cmc
add
add
add
int3
xchg
mov
ret
add
fbld
add
mov
arpl
add
insb
add
stc
lret
stos
jb
mov
int
add
les
lods
jmp
hlt
jns
push
jge
mov
out
test
add
add
mov
add
add
add
scas
std
scas
roll
mov
lea
pop
pop
pop
pop
push
sub
pop
leave
push
push
push
push
push
push
push
call
mov
movsb
pop
xchg
lds
movsb
add
xchg
in
add
xchg
add
lea
lods
testb
add
add
in
filds
jp
fldl
pop
fcomps
add
add
mov
fs
cli
push
fildl
xchg
xchg
mov
add
add
add
shlb
lea
pop
ret
push
push
lea
push
lea
push
push
call
jmp
negl
add
out
pop
xchg
add
push
xchg
leave
mov
add
data16
push
xchg
fstps
jbe
aam
loopne
mov
test
jns
popa
add
js
lret
lock
out
in
jae
add
mov
shlb
cmpsl
mov
add
xchg
add
mov
mov
add
stos
in
jns
popa
pop
pop
mov
fidivl
add
pop
push
push
dec
ror
lea
pop
mov
add
push
push
push
push
call
lds
test
lds
rcr
add
push
mov
add
add
rolb
add
add
xchg
add
add
mov
add
mov
mov
jl
xchg
xchg
add
std
lret
pushf
jb
imul
outsl
std
mov
shrb
repnz
cli
scas
xchg
add
xchg
nop
push
fsincos
mov
lea
pop
push
push
push
push
push
push
lea
push
call
nop
fcompl
mov
aad
out
icebp
jmp
add
add
xlat
lahf
testl
clc
mov
fchs
mov
add
shll
lds
add
mov
loopne
mov
add
outsl
flds
test
add
xchg
addl
mov
add
add
add
add
add
add
arpl
pop
push
movl
addl
push
ror
pop
test
je
push
push
push
push
push
lea
push
lea
push
push
call
lcall
add
add
xchg
add
jmp
xchg
out
add
mov
fistl
mov
movl
xlat
in
add
add
jnp
arpl
stos
lods
js
push
jl
add
push
jp
add
fcmovnbe
movsb
mov
add
push
shll
je
push
sarl
pusha
and
inc
or
shll
xchg
ret
add
pop
pop
pop
pop
push
lea
lea
pop
pop
push
push
push
push
push
push
push
push
push
push
call
in
add
add
clc
int3
add
test
jne
sti
mov
rorb
imul
mov
std
add
push
add
loop
add
pop
add
mov
xchg
add
je
lods
add
movsl
les
add
xchg
add
arpl
add
notb
mov
xchg
addr16
pop
addb
add
push
mov
lea
pop
leave
push
lea
push
call
mov
aam
pushf
push
add
pop
add
addb
out
add
add
nop
add
pop
sti
out
pop
shrb
add
add
add
fldln2
mov
push
jbe
pop
cli
pop
add
add
lods
add
mov
js
lret
jmp
pop
fs
jb
jo
out
add
jmp
data16
add
jb
mov
lea
pop
ret
push
push
push
push
lea
push
call
jb
add
cwtl
fstp
add
cmpsl
mov
mov
cltd
add
mov
add
xchg
mov
std
add
jmp
add
cld
push
mov
test
js
add
nop
pop
arpl
mov
add
bound
pop
add
loop
add
data16
pusha
jle
add
add
cld
lea
pop
push
mov
push
push
push
push
push
push
push
call
xchg
add
add
pop
xchg
fdivrs
add
add
add
enter
test
pop
add
test
in
int
in
cltd
xchg
ljmp
add
mov
flds
add
add
scas
add
add
ljmp
mov
aam
add
pushf
ret
icebp
popf
add
add
lea
pop
add
push
add
add
inc
pop
push
push
push
push
push
push
push
push
push
push
push
push
lea
push
call
xchg
jge
add
add
pop
add
add
add
mov
adc
add
cld
ljmp
mov
bound
add
push
hlt
add
lret
add
mov
lahf
mov
jle
add
pop
xchg
lcall
add
mov
cli
addl
add
out
rolb
add
push
add
jnp
xlat
mov
push
add
cld
add
pop
push
push
xor
shl
pop
testl
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
outsl
mov
add
lea
add
arpl
addl
add
mov
lea
add
out
cmc
scas
add
lock
mov
push
jno
mov
add
cwtl
fwait
loopne
movsl
add
lods
add
roll
mov
add
xchg
popf
test
add
add
jns
mov
lea
pop
addl
push
lea
push
call
incb
into
fsubr
jecxz
push
mov
add
jnp
jnp
roll
fcompl
rcrb
xchg
scas
pop
add
lods
push
filds
into
add
push
loop
mov
jmp
fadds
out
add
add
stos
add
lea
add
push
cmpsb
add
addl
mov
pop
stc
test
jno
add
add
clc
pusha
out
mov
hlt
lea
pop
push
call
mov
push
push
push
lea
push
push
call
clc
add
xchg
add
add
add
std
incb
add
mov
add
pusha
push
pusha
add
add
fisubs
mov
add
add
stos
mov
add
mov
jmp
iret
jne
add
cmpsb
add
jnp
add
add
add
iret
lock
mov
add
clc
cmpsl
ret
mov
jb
jae
pop
add
pop
pushl
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
push
add
lahf
lods
je
add
idiv
imul
je
mov
loope
add
add
push
add
add
lret
nop
jbe
push
popl
pop
mov
pop
mov
add
add
adcb
jl
test
add
movsl
bound
xchg
pop
clc
scas
in
fwait
lahf
call
add
mov
lea
pop
push
push
push
push
push
push
push
lea
push
lea
push
call
add
push
cli
andb
push
mov
ljmp
gs
call
add
add
cmpl
loopne
cmp
sahf
add
je
add
xchg
mov
push
into
arpl
roll
movsb
mov
add
mov
test
fadds
mov
lcall
mov
cmpsb
mov
je
mov
lea
pop
call
push
sub
pop
cmpl
jne
push
not
add
pop
pop
push
inc
ror
shr
lea
pop
pop
pop
push
pop
pop
push
push
push
lea
push
push
push
push
push
call
add
xlat
push
pusha
mov
push
mov
lret
popa
out
add
jbe
in
jnp
out
pushf
add
mov
add
jge
jae
jl
mov
add
mov
fildl
add
add
jecxz
aad
int
add
mov
aad
and
add
xchg
push
fiadds
mov
icebp
jecxz
mov
lods
xchg
add
add
and
push
shl
sub
sub
add
pop
ret
push
push
push
lea
push
push
call
jge
add
add
add
add
add
faddl
add
add
rclb
fiaddl
add
add
add
xchg
enter
add
iret
add
add
popf
lods
call
mov
call
jle
add
in
shrb
add
roll
pop
jp
mov
lea
pop
push
push
sub
pop
mov
push
pop
add
push
push
shr
pop
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
mov
add
into
xchg
xchg
add
cli
faddl
mov
add
add
fimuls
mov
add
rcrl
popa
pusha
filds
push
add
in
add
add
rclb
scas
mov
jmp
imul
add
js
mov
add
fdivl
mov
popa
test
push
in
in
add
mov
filds
mov
je
add
pop
push
push
not
shr
pop
push
movl
push
push
call
add
add
add
add
add
mov
add
filds
std
add
faddl
add
andl
add
aad
jo
push
add
push
ror
notl
add
add
mov
add
gs
add
movsb
mov
imul
mov
loopne
mov
lea
pop
push
call
push
lea
push
lea
push
push
push
push
call
mov
add
jp
mov
push
pop
add
add
repnz
add
add
add
xchg
add
mov
push
add
xchg
add
add
clc
jae
add
mov
add
add
add
fiadds
rolb
insb
add
add
lds
fdivrs
into
push
cwtl
lahf
add
sahf
add
addb
loop
push
add
out
icebp
lea
sbb
or
xchg
incl
add
not
pop
cmpl
jne
pop
pop
push
push
push
push
push
push
push
push
push
call
iret
popl
add
scas
pop
xchg
add
cmpsb
add
jb
int3
add
mov
notl
push
int3
mov
sahf
movsl
add
in
add
mov
xchg
mov
data16
add
lcall
pop
lcall
add
cld
in
bound
add
les
mov
lea
pop
pop
pop
leave
push
lea
push
lea
push
call
push
add
bound
add
mov
add
shl
add
mov
cltd
mov
or
imul
pop
jnp
xchg
fcom
add
sub
add
std
add
add
js
push
add
add
sahf
add
mov
xlat
mov
mov
add
xchg
and
arpl
scas
ja
pop
add
add
leave
add
add
mov
lea
pop
ret
push
mov
push
push
lea
push
lea
push
push
lea
push
push
call
out
add
andb
add
add
add
add
orl
mov
jmp
stos
imul
pop
add
add
add
fcmove
fcoms
loop
add
imul
lods
lret
jb
xchg
add
shr
in
mov
orb
pop
add
add
add
add
add
aam
bound
add
push
push
push
rol
shr
pop
push
push
mov
push
sub
sub
pop
lea
sub
push
add
add
add
ror
pop
mov
push
push
push
push
push
call
add
pop
add
add
lods
pop
mov
shr
push
lret
add
push
rolb
rolb
add
lock
test
add
mov
add
xchg
mov
xlat
movl
add
mov
add
mov
sarl
xchg
add
je
imul
add
out
sti
add
movsb
lcall
test
test
flds
in
mov
les
call
push
push
push
push
push
push
lea
push
push
call
pop
mov
add
jge
mov
fistpl
pop
mov
mov
add
arpl
add
mov
scas
add
jne
add
mov
add
add
mov
mov
pop
add
add
add
add
fdivl
add
xorl
lret
xchg
add
mov
xchg
mov
add
jae
hlt
lea
pop
mov
mov
push
push
push
push
push
push
push
push
call
je
jo
add
jae
add
jne
add
add
add
jl
popf
add
add
add
add
js
mov
and
add
mov
add
ja
out
pusha
fwait
icebp
jae
pop
push
jp
popa
add
add
pop
add
push
mov
lea
pop
add
push
push
lea
push
push
push
push
push
lea
push
call
push
mov
add
pusha
add
testb
lock
mov
add
add
pushf
add
xchg
add
test
mov
jno
add
add
insb
mov
jns
lea
xchg
add
add
push
xchg
pop
jae
testl
fwait
xchg
ljmp
push
out
add
pop
lcall
mov
lea
pop
add
push
shl
sub
xor
pop
mov
mov
cmp
jne
push
add
shl
rol
pop
cmp
jne
mov
push
shl
sub
pop
movl
jmp
push
add
sub
sub
sub
pop
mov
push
sub
rol
pop
mov
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
in
add
stc
incb
lcall
add
push
data16
push
pop
roll
roll
mov
add
add
pop
mov
int3
jecxz
jnp
add
stos
add
mov
ljmp
cmc
xlat
jno
les
imul
add
test
xlat
shll
add
addr16
sub
jne
mov
push
rol
rol
not
pop
movl
push
sub
lea
sub
pop
jmp
push
push
push
push
push
push
push
push
push
call
add
add
add
jp
add
loopne
fisttpl
pop
lret
scas
add
roll
cli
mov
clc
add
fsts
arpl
pop
add
repnz
mov
add
add
cwtl
mov
xchg
add
add
add
add
and
mov
push
shr
add
pop
mov
cmp
jne
push
not
lea
add
pop
mov
movl
jmp
push
push
push
push
push
push
call
add
add
add
sti
jmp
int
add
out
fldt
movsb
add
add
pushf
add
imul
fsubrl
jmp
mov
fsubp
rcll
add
div
add
mov
add
clc
test
jl
add
add
mov
loopne
fildll
aam
add
xchg
sbb
inc
cld
cmpw
jne
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
int
fldl
xchg
fildl
roll
add
lahf
rolb
add
push
fdivl
add
mov
add
add
push
cmc
bound
push
test
push
add
std
pusha
push
add
int3
cli
add
loop
mov
add
pop
add
mov
add
add
or
add
add
jae
add
lds
cld
lea
pop
mov
movl
push
add
ror
pop
jmp
push
dec
pop
pushl
push
push
push
lea
push
push
push
lea
push
push
push
call
add
mov
xchg
add
fbld
push
imul
mov
mov
add
leave
add
add
mov
jne
add
loopne
add
add
mov
lret
add
cltd
ret
mov
add
xchg
add
lods
test
ja
add
add
push
jae
test
lea
pop
pop
mov
push
ror
not
xor
pop
mov
push
push
push
push
push
call
je
add
xlat
mov
pop
jle
add
jmp
add
insb
add
add
add
pop
add
add
or
add
rol
ja
add
mov
add
shlb
add
nop
cld
fsts
jno
jo
add
jle
hlt
mov
xlat
add
pop
mov
push
push
xor
push
or
not
add
add
sub
sub
ror
pop
sub
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
loope
lods
push
mov
roll
add
mov
add
add
cli
add
iret
add
add
xchg
add
add
fdiv
mov
add
mov
out
mov
call
mov
add
mov
add
movsl
cmc
add
jo
add
add
addb
push
popl
inc
add
sub
cld
daa
add
cmpl
je
push
push
shr
push
and
add
shr
shl
sub
add
pop
inc
inc
rol
pop
push
push
push
call
rorb
add
loope
add
pop
add
add
cmp
push
int
mov
pop
add
fadds
add
bound
add
add
xchg
shll
add
outsl
add
popa
loopne
push
add
enter
add
add
hlt
pop
mov
test
popa
add
iret
mov
add
testl
in
add
nop
cltd
add
mov
lea
pop
push
call
cmpl
je
push
push
shl
push
or
not
add
lea
sub
inc
pop
pop
push
not
pop
push
call
push
push
push
call
xchg
test
add
addb
clc
data16
addr16
mov
ljmp
mov
push
jno
add
loope
add
add
add
fwait
add
enter
add
sti
stos
sahf
fdivrp
lahf
int3
add
js
add
add
add
mov
mov
xlat
in
push
rolb
outsl
add
mov
xchg
mov
add
pop
icebp
aad
cld
mov
in
or
fmull
js
int3
fldz
ret
pop
pop
add
push
push
dec
push
and
add
ror
add
sub
add
rol
pop
xor
sub
pop
push
push
call
xchg
add
pop
jnp
add
pop
jmp
add
add
add
mov
add
add
mov
xchg
add
bound
jno
cltd
loopne
jbe
je
iret
cmc
add
icebp
add
add
leave
add
xchg
add
add
jnp
xchg
push
mov
mov
shl
rcrl
mov
fs
mov
int3
lea
pop
push
push
push
push
lea
push
call
popf
add
add
test
xchg
jmp
add
into
add
add
pusha
add
add
add
mov
jp
testb
add
add
outsl
icebp
hlt
in
lods
add
jge
pop
xchg
rolb
add
add
flds
ljmp
fcmovnb
add
repnz
int3
cmpsl
sarl
add
add
popa
mov
icebp
add
pop
call
cmpl
je
push
push
shr
lea
shl
shr
push
sub
add
add
sub
ror
sub
pop
shr
pop
push
lea
push
push
push
push
lea
push
call
add
add
add
loopne
add
cmpsb
sahf
add
int
add
add
add
add
cwtl
cld
add
xlat
add
stos
mov
add
push
add
add
rcr
jo
fstpl
mov
pop
lea
imul
add
push
mov
in
rorb
lds
sbb
call
push
inc
rol
pop
cmpl
je
push
push
lea
push
or
not
add
shr
rol
sub
rol
add
rol
pop
rol
shr
pop
push
sub
pop
push
push
lea
push
push
lea
push
push
push
push
call
cld
add
add
push
stos
xchg
into
ljmp
cmc
hlt
add
lea
in
fidivrs
add
mov
add
add
pop
add
push
cmc
imul
add
add
fwait
pop
add
test
add
add
fldln2
add
fstpt
sarl
movb
roll
stos
rolb
push
add
fdivr
sti
mov
icebp
cmpsb
add
add
pop
call
push
xor
not
pop
cmpl
je
push
push
shl
push
xor
add
add
sub
inc
dec
shr
shr
pop
pop
push
lea
pop
push
push
push
lea
push
push
lea
push
call
push
cli
loopne
mov
loope
add
add
xchg
add
add
lds
fmul
add
bound
add
addl
add
repnz
pop
add
cmpsb
add
into
aad
lods
lds
lods
fiaddl
cwtl
test
cld
scas
addr16
loope
idivl
pop
scas
std
mov
mov
lea
pop
call
cmpl
je
push
push
sub
push
push
pop
add
inc
dec
sub
dec
pop
not
inc
not
sub
pop
push
rol
pop
push
call
cmpl
je
push
push
ror
shl
push
sub
add
ror
sub
add
sub
not
pop
pop
push
sub
shl
rol
pop
push
push
shr
shl
pop
call
push
push
call
add
add
rolb
les
add
add
add
cmc
add
add
add
add
test
hlt
add
subl
add
mov
addb
add
add
loopne
mov
pop
mov
mov
add
mov
jbe
add
in
add
add
faddl
add
lret
xchg
mov
add
jae
js
lret
mov
lea
pop
cmpl
je
push
push
shr
push
push
pop
add
xor
sub
pop
shl
dec
sub
pop
push
push
sub
pop
call
push
dec
lea
inc
pop
cmpl
je
push
push
push
push
pop
add
rol
not
sub
shl
add
pop
rol
inc
pop
push
sub
rol
pop
push
push
push
push
lea
push
lea
push
call
add
add
lds
jbe
mov
loope
addl
imul
rolb
lcall
movsl
nop
pop
add
test
push
fmulp
outsl
add
popa
add
add
add
fwait
aad
xchg
mov
rorl
push
int
fnsave
mov
lds
add
add
mov
lea
pop
call
cmpl
je
push
push
push
push
pop
add
dec
shr
inc
sub
add
pop
dec
pop
push
push
lea
push
push
push
call
in
add
fistpl
shlb
add
stc
ja
add
lods
mov
pop
jae
fs
popl
add
add
add
xchg
rcr
add
loopne
stos
fisttps
pop
add
lahf
mov
add
add
jecxz
mov
cli
fsubrl
repnz
mov
add
fiaddl
mov
stos
fmull
adc
push
push
dec
rol
pop
call
cmpl
je
push
push
shl
shr
ror
push
sub
add
inc
lea
sub
shr
sub
ror
pop
shr
sub
pop
push
rol
pop
push
push
push
push
lea
push
lea
push
call
arpl
cli
add
add
jne
cwtl
fmulp
in
add
add
add
mov
add
jge
add
ljmp
jns
add
shll
add
add
test
jecxz
call
jge
add
push
clc
pop
std
lcall
mov
add
into
mov
add
jns
add
rolb
add
pop
call
cmpl
jne
mov
push
push
push
lea
push
push
push
call
into
add
xchg
lods
call
add
lret
lahf
lock
add
add
cwtl
mov
sahf
fnstcw
lcall
insb
pop
cmpsl
add
add
add
js
add
stos
lods
mov
enter
in
arpl
jae
add
add
mov
movsb
push
add
add
xchg
add
add
incb
add
in
add
lea
pop
movl
jmp
push
dec
shl
lea
pop
xor
push
lea
push
push
push
lea
push
push
push
push
call
add
aam
outsl
fadds
repnz
insb
cli
gs
mov
add
sar
add
fnstsw
add
push
jo
filds
call
lods
pop
mov
test
add
add
movb
mov
imul
add
mov
jmp
push
leave
in
lods
in
bound
test
ret
add
shr
test
xchg
les
pop
bound
pop
pop
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
push
std
add
movsb
test
stos
add
xchg
clc
pop
add
add
lock
lcall
ljmp
jl
fldl
mov
sti
add
add
mov
add
xchg
pop
shrl
add
xlat
add
frstor
add
add
add
xchg
iret
cli
sti
lods
add
mov
and
pop
pop
push
xor
add
shl
lea
pop
pop
push
dec
pop
leave
ret
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
cmpsl
mov
movsl
add
lret
jb
test
jns
add
add
add
jne
popf
loop
jns
movl
jns
fldt
testl
leave
add
jle
add
add
pop
stos
add
lea
aam
popf
add
out
fs
add
add
in
add
mov
add
fiadds
jecxz
add
add
add
ja
add
cld
lea
pop
mov
add
push
sub
inc
pop
cmpl
jne
push
push
push
push
pop
add
sub
rol
xor
pop
sub
xor
pop
pushl
push
ror
add
shl
shr
pop
call
push
push
rol
pop
call
push
push
lea
push
push
push
push
push
call
out
add
lock
roll
fimull
add
out
aad
mov
add
stos
in
je
add
add
add
mov
add
add
imul
into
add
add
add
lods
push
add
add
movb
add
pop
repnz
jae
mov
in
add
cmpsb
add
jb
add
add
ja
hlt
lea
pop
jmp
push
add
dec
pop
cmpl
je
push
shl
pop
cmpl
jne
leave
add
push
lea
ror
not
dec
pop
pop
pop
pop
push
pop
pop
leave
push
pop
add
ret
push
not
not
pop
jmp
cmpl
jne
push
push
ror
rol
push
push
pop
add
sub
sub
shl
pop
rol
pop
push
push
push
push
push
lea
push
push
call
sarb
loope
add
add
fldl
add
shll
out
cmpsl
testb
add
jle
movsb
add
in
push
jl
lods
lret
mov
jle
lahf
add
cld
add
jecxz
rcrl
add
lods
cld
test
add
jno
add
in
add
add
mov
add
movsl
jmp
mov
out
add
test
add
je
les
jne
push
xor
xor
pop
call
push
shr
xor
pop
push
call
jmp
push
lea
push
lea
push
push
push
call
add
jl
add
out
add
movsl
add
lcall
add
add
test
jbe
add
js
add
stos
push
fildll
add
add
add
js
jae
rcll
cwtl
rolb
faddl
add
stos
jno
add
add
pusha
add
fwait
pop
outsl
test
add
in
lret
mov
lea
pop
cmpl
jne
push
add
add
pop
mov
push
not
add
sub
pop
mov
call
push
push
push
call
add
fidivrl
leave
add
add
pusha
lock
add
mov
add
incb
ret
add
add
jecxz
add
jnp
add
push
add
add
addr16
push
cli
jecxz
add
add
jmp
in
add
pop
mov
mov
add
add
add
add
add
lahf
cli
mov
lds
rcr
les
dec
jne
push
lea
push
push
push
push
push
lea
push
push
push
call
add
mov
test
cli
jbe
popa
jns
pop
shl
jle
movsl
imul
repnz
add
push
push
js
add
pop
add
add
roll
add
leave
mov
add
push
pop
rolb
jb
mov
mov
jne
fiadds
xchg
hlt
scas
add
pop
push
add
add
xchg
pusha
mov
add
mov
lea
pop
call
push
lea
push
push
push
push
push
lea
push
call
add
stc
imul
fwait
mov
mov
push
rcrl
add
lcall
add
add
mov
add
stos
call
addr16
jecxz
mov
lods
jne
add
int3
lahf
add
xchg
stos
fst
add
jno
sti
mov
arpl
add
add
add
add
into
stos
add
lock
sti
jge
add
int3
lea
pop
jmp
push
push
call
incb
insb
add
add
mov
mov
mov
add
addb
insb
xchg
into
add
loopne
mov
ficoml
insb
add
add
mov
add
ja
add
cwtl
mov
loope
add
in
add
add
push
add
add
add
int3
lea
pop
call
push
push
add
push
push
pop
add
sub
shr
sub
sub
not
xor
add
pop
rol
pop
push
rol
xor
pop
pushl
call
push
add
pop
push
push
lea
push
call
stc
arpl
js
add
add
push
add
icebp
add
jp
popf
push
mov
add
lret
repnz
add
push
loope
lds
ret
add
jmp
subb
add
add
popf
lret
sti
int3
mov
hlt
xchg
add
mov
stc
addr16
lcall
lds
add
add
mov
add
add
mov
iret
clc
out
add
add
or
rclb
push
mov
jno
push
push
push
lea
push
lea
push
push
push
call
in
add
pop
fists
test
les
add
add
jo
jecxz
mov
push
jmp
add
les
loop
out
add
int
scas
scas
add
add
cld
addr16
mov
add
mov
cltd
scas
out
mov
add
loope
add
fsubrl
cld
lea
pop
mov
push
push
push
lea
push
push
lea
push
push
push
call
add
add
je
add
add
lahf
add
add
lahf
pop
mov
add
add
add
movsl
add
addr16
push
cmpsb
lods
add
lods
add
pop
mov
add
test
lods
in
je
push
fnsave
xchg
add
fs
add
add
add
ljmp
jbe
jno
bound
mov
lea
pop
lea
push
push
add
shr
push
sub
add
add
sub
dec
ror
shl
pop
lea
ror
pop
push
ror
pop
pushl
call
push
add
add
add
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
aam
jne
add
stc
add
add
add
add
push
flds
call
add
mov
add
xchg
nop
add
add
shl
mov
add
lock
pop
add
add
add
loope
jnp
loopne
add
mov
add
pop
mov
pusha
roll
scas
add
sti
into
push
filds
add
add
mov
add
push
mov
lea
pop
call
push
push
lea
shl
push
or
inc
add
dec
sub
shr
shr
rol
pop
lea
inc
inc
pop
push
inc
pop
pushl
call
push
push
push
push
push
push
call
add
int3
add
mov
loopne
rolb
add
arpl
push
int3
jmp
mov
add
add
imul
lods
imul
add
call
add
pusha
push
add
mul
add
mov
add
push
mov
xlat
test
add
sti
mov
add
ja
add
mov
sbb
rorb
jecxz
cwtl
push
lea
push
push
push
push
push
push
push
push
call
xchg
jl
add
data16
push
scas
add
fdivrp
iret
pop
out
add
add
add
add
add
pop
add
jnp
jle
push
mov
add
add
add
add
add
jae
add
mov
faddl
pop
xchg
pusha
jecxz
mov
movsb
add
outsl
cmc
add
gs
popf
movsb
mov
lea
pop
lea
push
push
ror
rol
push
sub
add
add
ror
sub
dec
inc
pop
shr
inc
pop
pushl
push
add
ror
pop
call
push
lea
push
push
push
call
pop
movl
add
clc
push
idivl
roll
stos
push
stc
add
cld
add
popa
out
stos
push
data16
js
lods
jp
jo
scas
insb
repnz
divb
addl
out
lret
add
test
lea
add
mov
add
popf
add
add
mov
lea
pop
lea
push
add
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
push
call
scas
add
in
add
add
add
sarb
add
add
nop
cmpsl
add
bnd
add
aad
mov
xchg
cwtl
imul
iret
addb
popf
lods
sbbl
add
add
nop
les
fildl
leave
jbe
add
roll
ja
add
test
shlb
lea
pop
push
pushl
push
push
inc
add
push
sub
add
rol
sub
xor
shl
shr
add
pop
dec
xor
sub
pop
push
add
rol
pop
push
push
push
push
push
lea
push
call
cli
mov
add
movsl
sti
fwait
xchg
add
out
insb
add
add
lods
xchg
add
int
xchg
faddl
push
addr16
mov
add
rcrb
popf
in
mov
add
add
std
pushf
pop
add
jno
add
jb
push
in
add
push
add
add
add
add
subb
pusha
adc
call
push
push
shr
add
shl
push
sub
add
sub
sub
pop
ror
sub
pop
pushl
push
shr
pop
call
push
call
push
push
add
push
push
pop
add
dec
sub
sub
sub
pop
dec
shr
shr
pop
push
push
push
push
lea
push
push
push
call
push
fiadds
pop
add
jp
movsb
pop
jp
mov
add
aam
add
faddl
pop
xchg
add
add
testl
loopne
add
roll
call
je
jmp
iret
faddl
lea
stc
mov
add
lret
pushf
add
xchg
add
mov
add
add
mov
push
ret
xchg
push
add
mov
cltd
add
loopne
add
pop
pushl
call
call
push
sub
sub
shr
pop
jmp
push
sub
ror
ror
pop
pushl
push
rol
pop
mov
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
test
lock
addb
push
into
add
add
mov
fadd
mov
int3
in
add
cld
loope
fdivrs
add
add
outsl
cmpsb
add
push
add
in
test
push
add
pushf
pop
incb
mov
add
mov
lea
pop
jmp
push
push
ror
ror
push
xor
add
xor
rol
not
sub
add
pop
dec
sub
sub
pop
push
pop
pushl
call
push
push
dec
add
pop
call
push
push
shr
rol
not
push
sub
add
shr
not
sub
sub
pop
add
xor
pop
push
add
inc
add
pop
pushl
call
push
push
call
xchg
pop
xchg
mov
hlt
xchg
fs
shll
add
mov
les
add
add
out
add
mov
add
out
loop
add
add
mov
mov
add
mov
add
imull
fiadds
enter
fists
std
cld
roll
frstor
add
jle
add
add
in
rcl
cld
add
cld
lea
pop
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
popl
cltd
add
add
add
enter
or
push
add
mov
add
testl
shlb
mov
add
int3
rcl
add
add
mov
scas
lds
jle
stc
enter
add
pop
fwait
add
add
add
pop
call
push
pop
leave
add
pop
push
shr
pop
pop
pop
push
xor
xor
pop
pop
push
push
push
push
push
push
lea
push
call
add
add
push
add
add
stc
add
add
mov
pop
push
add
mov
add
pop
add
mov
add
add
mov
add
add
add
add
add
add
add
lock
add
rolb
jp
jno
fdivrs
rcrl
scas
out
pushf
std
mov
in
jmp
xchg
cmc
add
clc
lods
push
mov
cld
lea
pop
leave
add
push
rol
add
sub
pop
ret
leave
ret
push
xor
inc
ror
inc
pop
push
push
pop
mov
cmpl
jne
mov
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
out
ljmp
push
add
bound
int
mov
fildl
pushf
add
lods
scas
shrl
add
add
adcl
aam
fxch
pop
movsl
add
add
add
pusha
test
pop
arpl
add
add
insb
add
add
lds
stc
add
lea
sahf
imul
add
add
scas
add
arpl
popf
add
mov
lea
pop
jmp
mov
push
push
push
push
push
push
push
call
aam
push
add
add
leave
out
stc
std
or
add
sahf
add
mov
loope
pop
add
add
add
push
push
loop
mul
add
ret
movsl
add
add
bound
xchg
add
add
mov
sahf
addb
aam
mov
push
out
clc
add
clc
add
add
mov
sbb
and
push
shl
pop
xor
push
shr
pop
xor
push
dec
sub
pop
add
push
ror
pop
xor
dec
sub
push
inc
sub
pop
jmp
push
sub
shr
xor
pop
sub
pushl
pop
push
push
push
push
call
jns
mov
out
je
add
repnz
popf
add
fucomi
movsb
in
add
sahf
cld
add
push
add
add
add
rolb
mov
mov
add
add
addl
add
add
fst
les
mov
cwtl
add
add
push
add
pop
sub
push
push
push
push
push
push
push
push
push
push
call
add
xchg
imul
test
fs
mov
push
add
jne
shrl
add
jb
push
mov
add
pop
pop
test
add
popf
insb
movsl
fucomip
repnz
push
popa
movsb
test
jmp
add
add
jns
add
add
pop
add
pop
add
add
imul
add
hlt
lea
pop
cmp
jne
mov
lea
push
shl
add
pop
sub
mov
push
push
push
lea
push
lea
push
lea
push
push
call
add
aad
imul
add
add
pop
mov
add
call
push
cmc
add
add
out
add
test
sti
add
add
add
add
mov
jo
add
add
mov
aam
jo
mov
mov
in
mov
les
add
iret
add
mov
lea
pop
shr
push
lea
push
lea
push
push
lea
push
push
push
call
in
add
add
add
add
in
lret
out
xchg
fiadds
add
jp
push
rcl
add
int
imul
cli
jmp
in
data16
in
add
add
add
in
cmpsb
cli
add
push
std
add
jo
add
add
add
pop
mov
push
testb
jle
add
sbb
add
push
push
lea
push
push
push
push
push
push
call
out
int3
add
jns
int
scas
imul
cld
mov
data16
jl
jp
aam
testb
lods
loope
push
jne
cli
xchg
add
add
add
pusha
add
add
add
add
push
add
add
loopne
add
add
add
fmull
jmp
push
lea
push
push
push
push
push
push
push
call
mov
add
pop
add
out
add
xchg
mov
imul
add
test
add
xchg
pop
add
add
pop
loope
mov
add
add
add
add
mov
mov
popl
jns
pop
js
add
shll
mov
add
mov
cwtl
nop
int3
jmp
mov
lods
aad
add
pop
add
jmp
add
xchg
lcall
test
popa
and
pushl
pop
push
push
lea
push
lea
push
push
push
push
call
push
add
shrl
cltd
mov
add
jne
mov
xchg
add
jge
imulb
aam
add
sahf
add
lret
iret
add
add
add
fnstenv
xchg
shr
add
test
mov
add
add
push
arpl
add
mov
add
add
mov
add
add
mov
pop
shr
and
sub
push
lea
sub
pop
cmp
jne
leave
ret
push
pop
push
push
sub
pop
mov
add
push
push
push
push
push
push
push
push
call
in
out
pop
lcall
mov
add
js
add
xchg
add
add
pop
popf
imul
arpl
out
neg
pop
pushf
faddl
mov
out
aad
scas
mov
cltd
xchg
shll
out
xchg
add
add
add
insb
mov
jecxz
pop
add
movb
jns
jmp
shll
cwtl
jl
test
add
popa
sbb
push
push
push
push
not
pop
push
push
push
lea
push
push
call
mov
add
mov
xchg
jns
add
add
xchg
test
cld
lods
sti
mov
add
add
jp
stos
add
xchg
aam
js
cli
arpl
filds
xchg
in
jp
lock
push
add
push
test
mov
jo
mov
mov
lea
push
jns
pop
test
lea
pop
mov
push
rol
shl
sub
pop
lea
sub
push
sub
add
inc
pop
mov
push
shl
lea
pop
shr
push
xor
pop
add
mov
add
push
push
push
lea
push
push
push
push
push
lea
push
push
call
jnp
stos
add
adcl
ja
push
add
mov
add
shll
add
data16
add
xchg
mov
add
jb
add
mov
mov
int3
mov
add
add
pop
add
add
sarl
add
hlt
lea
pop
mov
add
xor
push
xor
pop
mov
and
call
push
sub
pop
add
cmp
je
add
push
push
push
push
call
add
add
bnd
shlb
add
enter
add
mov
test
add
out
pop
add
sti
lret
add
fisubl
stos
arpl
push
mov
insb
insb
add
test
add
in
in
add
shll
add
add
call
mov
add
mov
lea
pop
cmpl
jne
push
push
call
xchg
stos
jmp
add
fadds
add
out
add
out
add
cltd
popa
add
mov
add
les
stos
lods
pop
add
add
add
lcall
mov
data16
add
call
cwtl
jbe
add
jp
cmpsb
add
add
add
icebp
test
jmp
ror
enter
pop
cmc
add
ret
out
fistl
hlt
add
pop
xor
pop
push
push
call
add
add
add
add
pop
add
lret
pop
pop
add
add
stc
pop
mov
add
add
add
ret
add
mov
stos
add
add
lods
scas
add
add
movb
xchg
iret
pop
add
mov
les
pop
pop
push
push
call
add
add
lret
mov
scas
xchg
add
frstor
xchg
loopne
into
mov
mov
loope
add
in
jnp
add
lret
add
flds
test
addb
mov
jae
jne
add
add
popl
loopne
lock
mov
add
add
cmc
xchg
lods
repnz
stos
movsl
pop
add
add
fld
popa
jmp
or
push
inc
xor
pop
leave
push
push
push
call
add
nop
mov
add
repnz
mov
jecxz
addl
add
add
int
cwtl
stos
mov
jmp
jge
add
mov
add
add
icebp
add
add
out
add
repnz
xchg
add
imul
add
popa
add
mov
add
add
add
jno
icebp
rolb
xchg
add
add
hlt
mov
lea
pop
ret
mov
add
push
lea
push
push
push
push
push
push
push
push
call
mov
push
jl
add
rolb
addl
add
add
add
add
lahf
lret
leave
add
cwtl
add
scas
cltd
mov
add
imul
add
add
add
mov
nop
ficompl
cli
add
push
test
add
mov
loopne
add
add
add
fcoml
push
add
lods
add
imul
xchg
mov
lea
pop
push
push
push
push
lea
push
lea
push
push
push
call
stc
insb
add
jl
fnstsw
pop
lret
add
push
fildl
push
add
fnstenv
loope
jne
add
stos
in
loopne
popa
lret
add
mov
lock
add
shl
xchg
sti
add
testl
add
pop
add
rcr
jle
repnz
enter
in
add
faddl
lods
add
data16
mov
add
mov
cld
lea
pop
push
push
shl
rol
pop
pop
pop
mov
push
not
inc
inc
sub
pop
push
call
push
ror
add
add
xor
pop
xor
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
ljmp
add
xchg
test
mov
mov
add
clc
jo
add
add
pop
ret
mov
fld
lods
add
xchg
cli
lret
leave
mov
mov
add
addr16
fildl
les
add
mov
cmpsl
xchg
cmpb
pop
stos
repnz
imull
add
insb
mov
lea
pop
pop
pop
push
inc
xor
pop
pop
pop
leave
push
push
lea
push
lea
push
call
roll
push
mov
mov
add
mov
push
add
mov
add
jae
stos
int3
mov
pop
mov
add
les
pop
pop
add
mov
shll
test
aad
roll
mov
push
shl
pop
stc
mov
scas
test
mov
cmc
fs
add
add
mov
lea
pop
ret
push
push
push
lea
push
push
push
lea
push
call
push
add
js
jnp
add
stos
stc
add
bound
in
add
hlt
xor
loope
roll
cmpsl
test
mov
add
add
scas
mov
fcoms
jecxz
xchg
xchg
add
sub
testl
jnp
iret
add
add
add
mov
stc
popf
fiaddl
pop
jl
mov
int
les
in
add
push
dec
lea
inc
pop
push
push
add
rol
shr
pop
push
push
push
push
push
lea
push
push
push
call
add
test
jecxz
div
fdivs
test
pushf
cmc
jns
popa
jbe
add
movb
ficoms
test
cld
add
add
add
mov
fiadds
jns
jp
add
jecxz
imull
lock
add
xchg
add
testb
stc
lods
add
fst
add
jl
add
in
jl
add
shrb
test
mov
out
push
lods
add
clc
add
pop
push
push
mov
push
push
lea
push
push
lea
push
push
push
push
call
add
pop
add
add
bound
add
gs
add
mov
add
mov
add
insb
cmc
add
pop
test
lods
je
add
mov
test
push
cmpsl
test
cwtl
cmpsb
jge
int3
mov
jmp
ficomps
jmp
jns
add
enter
add
lods
add
jns
add
ret
fs
mov
push
stos
pop
jne
loop
add
mov
lea
pop
push
pop
lea
push
push
call
mov
out
add
add
xchg
push
leave
popa
testb
add
add
jbe
in
mov
add
pop
fcmove
xchg
out
int3
roll
jecxz
mov
pusha
popa
add
add
xchg
add
add
js
clc
lock
mov
cmc
add
jnp
jne
add
cli
jb
add
cwtl
mov
out
loop
fdivl
shlb
lea
pop
sub
push
push
push
push
push
lea
push
push
lea
push
call
add
pop
jle
add
les
test
jo
add
add
push
js
test
clc
xchg
rcll
xchg
add
clc
add
add
mov
add
mov
mov
add
add
fisubrs
call
add
loop
add
addb
add
cmpsb
mov
pop
mov
push
lea
inc
pop
shr
add
mov
push
push
push
lea
push
push
push
push
push
push
call
fcompl
add
orb
add
push
mov
add
add
shll
lods
mov
add
cmpsb
add
add
add
adcb
jge
push
add
xchg
add
roll
add
scas
xchg
cld
add
add
leave
xchg
rolb
popf
mov
push
lea
pop
add
pushl
push
lea
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
jne
cltd
add
mov
add
roll
lods
cld
add
add
lea
lods
xchg
fs
addb
xchg
xorb
stc
mov
add
roll
enter
jle
add
add
add
fisubrl
mov
add
add
jo
sahf
cltd
cmc
add
jbe
add
scas
mov
stc
leave
cli
out
xchg
pushf
mov
mov
mov
lea
pop
popl
mov
add
push
push
lea
push
push
push
push
push
lea
push
call
xchg
mov
xchg
add
pusha
repnz
push
xchg
shlb
nop
add
into
add
add
cmpsb
shll
add
cwtl
jmp
mov
je
gs
push
into
mov
data16
scas
push
hlt
xchg
mov
je
add
add
ljmp
in
add
fwait
lcall
xchg
add
add
jl
add
add
cld
lea
pop
xor
lea
mov
push
push
push
push
push
lea
push
lea
push
push
call
add
lahf
insb
stos
add
add
mov
xchg
movsl
outsl
add
negb
mov
stos
add
movsl
add
push
add
add
sti
xlat
cmpsb
movsb
add
addb
xchg
add
popa
aad
add
test
add
add
std
add
add
icebp
jo
mov
add
ja
add
lret
add
add
lahf
add
push
std
gs
out
icebp
add
add
pushf
lock
pop
add
push
push
lea
push
call
pop
push
lock
lcall
add
add
add
add
add
add
ja
add
testb
jp
popf
add
int3
xchg
add
into
idivb
add
shl
add
pop
shlb
pop
push
add
xchg
add
add
addr16
add
mov
jmp
ja
xchg
call
pop
add
add
popf
pop
xor
call
push
push
lea
push
lea
push
push
lea
push
push
call
lahf
add
in
add
push
mov
jle
sarl
ljmp
add
lcall
cli
add
incb
xchg
divb
mov
xchg
faddp
add
add
movl
add
pop
add
add
aam
push
add
clc
add
iret
push
negb
xchg
add
shl
add
add
add
pop
add
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
jne
mov
faddl
jl
add
jno
mov
xlat
mov
mov
add
rcr
add
sahf
iret
in
xchg
add
add
add
xchg
mov
in
pop
sarl
add
mov
movl
clc
pop
add
enter
add
add
push
rclb
add
xchg
add
mov
mov
mov
and
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
mov
fsub
add
add
mov
ret
cmpsl
sub
filds
into
std
add
jp
add
outsl
jmp
jl
in
xchg
mov
mov
repnz
stos
add
push
add
add
addl
fwait
std
nop
xchg
mov
xchg
add
add
in
add
mov
add
push
add
cld
stos
cli
add
roll
xchg
nop
pusha
add
pop
nop
push
push
push
lea
push
lea
push
push
push
push
call
add
xlat
mov
loop
add
mov
mov
jne
cli
test
data16
add
xchg
enter
jns
jecxz
in
sub
xchg
mov
pusha
add
add
aam
add
cwtl
add
lahf
add
xchg
hlt
mov
scas
add
aam
mov
add
rolb
add
add
add
add
add
pop
cmp
je
nop
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
mov
stos
mov
flds
incb
add
add
add
add
add
data16
add
nop
xchg
jne
mov
movsl
add
sarl
add
lods
cld
mov
out
mov
pop
pop
jno
mov
add
cli
fwait
add
in
mov
add
add
addr16
lea
pop
nop
inc
nop
push
push
push
lea
push
push
push
call
roll
add
add
sbb
insb
add
lahf
into
add
imul
add
mov
push
mov
testb
loop
mov
mov
imul
add
add
add
cmpb
add
add
out
add
add
add
xchg
add
fcompl
push
loopne
insb
test
flds
movsb
pusha
std
add
add
sbb
cmp
jb
xor
push
push
push
push
call
in
cld
out
jmp
popf
sti
imul
push
add
push
in
into
into
add
in
fwait
cwtl
xchg
testb
add
or
movsl
add
mov
add
pop
repnz
hlt
in
xchg
mov
mov
into
push
lcall
add
mov
mov
add
pop
add
mov
lea
pop
jmp
mov
push
lea
pop
add
movzwl
push
push
call
add
add
out
add
add
lods
mov
mov
ret
add
cltd
mov
add
add
add
movsl
mov
add
loope
add
push
shlb
add
mov
add
roll
add
add
lret
cmpsl
fsubp
add
add
cmpsb
stc
call
or
inc
sbb
inc
pop
add
push
dec
pop
mov
push
sub
pop
xor
xor
push
push
lea
push
push
push
lea
push
lea
push
call
add
jecxz
add
stc
out
pop
add
xchg
incb
fst
in
xchg
ljmp
add
add
push
add
push
jge
add
add
xchg
test
les
in
lahf
rcl
add
in
add
add
popa
lea
add
add
jo
add
add
movl
popa
sbb
shl
xor
shl
push
inc
sub
ror
dec
pop
xor
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
filds
add
les
mov
add
fiaddl
faddl
roll
add
add
je
nop
shlb
outsl
idivl
fs
xchg
mov
mov
add
mov
jb
add
mov
cli
add
lcall
cli
sti
jle
add
aam
add
pop
shl
xor
mov
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
push
xchg
pop
pushf
mov
int3
add
test
add
in
add
loopne
mov
loope
add
stc
push
add
jge
push
add
subl
xchg
add
jp
add
mov
add
ficomps
cmpsl
mov
jbe
add
add
addb
add
add
scas
add
add
imul
data16
inc
hlt
pop
push
ror
lea
pop
pop
pop
pop
push
add
add
ror
pop
leave
ret
push
push
xor
not
inc
pop
mov
push
lea
push
call
mov
stos
enter
add
lahf
nop
mov
add
fs
jno
cmpsb
in
add
add
add
xor
lret
ja
add
mov
xchg
add
pop
add
and
add
add
ret
add
int
push
add
insb
loopne
mov
add
cli
mov
cmpsb
jb
add
pop
loop
add
movl
mov
lea
pop
push
push
push
push
push
push
push
push
push
push
call
fisttpll
addl
pop
rcl
movsl
hlt
lcall
add
add
add
into
pop
pushf
repnz
cmc
jo
jne
lea
add
jbe
add
stc
movsb
lcall
pusha
add
lahf
add
mov
pop
xchg
xchg
imul
xchg
mov
add
mov
mov
lea
pop
push
mov
mov
push
not
sub
rol
pop
mov
test
je
mov
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
add
mov
repnz
add
add
in
add
addl
int
mov
imul
arpl
js
add
pop
lods
in
in
add
lods
scas
add
icebp
ja
xchg
cmpsb
add
data16
xchg
add
xchg
iret
mov
add
out
add
stc
add
add
jle
xchg
out
roll
mov
cmc
lret
add
add
pop
test
je
push
push
push
push
call
je
nop
add
int3
out
add
movsl
sar
jno
add
mov
call
cltd
fwait
add
testb
jge
add
mov
mov
mov
mov
test
pusha
mov
lret
in
cltd
add
outsl
add
mov
mov
mov
pop
in
jp
add
add
add
add
add
fsubrp
movsl
jb
mov
mov
out
jmp
add
cmc
movsl
mov
lea
pop
mov
mov
mov
push
push
lea
push
push
push
push
call
add
imul
add
add
fiaddl
rcrl
jb
roll
jge
mov
pop
add
fildll
xchg
jnp
pushw
jne
jmp
xchg
cltd
test
fwait
scas
js
fildl
pushf
add
add
int
add
test
mov
mov
add
popf
add
add
cli
imull
ret
fwait
ja
fmull
cmp
je
test
je
push
lea
push
lea
push
push
push
push
call
test
test
pop
in
mov
add
lods
add
int3
lcall
mov
test
add
iret
test
add
mov
clc
add
mov
pop
and
add
xchg
add
testl
je
mov
add
mov
jo
add
data16
add
loop
add
add
mov
mov
lea
pop
mov
inc
cmp
je
push
add
ror
pop
test
jne
xor
pop
push
push
push
push
push
lea
push
push
push
call
out
add
xchg
xchg
add
add
add
call
xchg
push
add
add
hlt
cld
push
loop
add
add
popf
mov
pusha
add
add
mov
lahf
pop
cli
jp
pusha
add
addr16
add
add
add
lret
sahf
cltd
add
add
mov
add
add
add
mov
lea
pop
pop
pop
pop
push
add
shr
pop
leave
push
sub
pop
ret
push
not
add
shl
add
pop
mov
inc
cmp
jne
push
push
call
test
push
add
add
xchg
sahf
jnp
add
scas
fldl
add
roll
jmp
mov
add
add
add
cmpsl
mov
add
mov
mov
xchg
xchg
adcb
pop
add
add
add
sahf
pop
insb
xchg
outsl
into
add
add
add
add
filds
rolb
add
add
or
jle
mov
test
je
push
shr
ror
shl
pop
mov
push
sub
pop
add
cmp
jne
push
dec
add
pop
mov
push
add
lea
pop
test
je
push
shr
pop
mov
push
rol
pop
add
push
dec
ror
ror
pop
cmp
je
push
push
push
push
push
push
push
lea
push
call
add
add
add
add
roll
add
add
add
add
add
fwait
add
into
add
roll
add
lret
pushf
lds
loop
popl
push
add
call
lret
pusha
enter
push
clc
ja
add
stos
pop
add
mov
jo
mov
lea
pop
jmp
push
lea
push
push
call
fnsave
add
add
add
addl
ror
mov
jmp
add
add
add
jl
add
loopne
fisubrs
push
mov
lret
lahf
add
fisubl
mov
shlb
gs
sahf
in
repnz
sarl
mov
add
outsl
jo
movsb
add
xchg
push
loopne
cld
lea
pop
xor
push
pop
pop
pop
push
inc
shr
add
pop
pop
push
lea
push
push
push
call
xchg
popa
add
fildll
loop
int
fiaddl
stos
push
mov
cli
jle
fbstp
ficoms
mov
lds
sar
sahf
fldcw
test
xchg
add
mov
add
xchg
push
add
jns
mov
test
mov
jae
imul
popf
arpl
mov
lea
pop
pop
push
lea
push
lea
push
push
call
add
cld
add
lds
cmpsl
lret
jne
test
push
add
add
scas
fucompp
add
neg
add
stc
mov
add
shlb
jo
add
jecxz
callw
fildl
bound
out
test
push
add
add
add
call
test
mov
lea
pop
leave
ret
lea
push
sub
pop
pop
pop
pop
push
sub
shr
pop
pop
leave
ret
push
sub
pop
mov
pop
pop
push
push
push
push
push
push
push
push
push
lea
push
call
test
add
add
add
mov
add
xchg
add
push
faddl
mov
addl
test
add
test
add
add
add
aam
mov
out
subb
loope
sahf
cld
add
aam
add
jo
jb
mov
lods
mov
gs
add
mov
lea
pop
pop
pop
leave
push
lea
rol
pop
ret
push
lea
push
push
push
push
call
loope
cmpsl
arpl
out
push
jmp
add
mov
imul
je
add
cli
xlat
add
mov
incb
push
pushf
pop
popf
push
add
add
rcrl
mov
add
fnstenv
add
loop
cli
add
andb
js
add
push
xchg
add
into
mov
ja
add
pop
xlat
cwtl
add
pop
rol
push
push
push
call
push
shll
shll
xchg
jbe
into
mov
add
add
fnsave
add
stos
mov
add
pop
cmc
add
push
add
push
les
repnz
call
xchg
fsubl
add
sahf
xchg
push
cwtl
mov
mov
add
pop
mov
fs
js
mov
pop
add
add
les
mov
lea
pop
rol
xor
push
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
fidivrl
push
add
xchg
int
lods
add
add
mov
add
shr
std
add
add
mov
scas
rolb
ficomps
add
add
lods
jmp
lahf
test
add
mov
cmc
push
mov
add
lock
lea
icebp
add
add
addb
add
add
test
lcall
add
jnp
ja
add
mov
hlt
lea
pop
inc
push
lea
push
push
push
lea
push
push
call
mov
add
add
xchg
add
cwtl
jnp
addb
add
lds
add
mov
add
pop
mov
add
add
out
add
mov
add
jb
mov
leave
add
pop
lea
add
add
xchg
in
shrl
pushf
add
add
clc
lock
lea
pop
cmpb
jne
push
xor
add
not
pop
ret
sbb
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
adc
sti
movsb
xchg
mov
sti
je
mov
sti
test
mov
sti
movsb
shlb
sti
push
hlt
or
jnp
fisubs
dec
scas
push
cmp
push
adc
int3
movsb
les
jmp
movsl
push
sbb
hlt
mov
jo
lds
daa
dec
das
sbb
lea
popf
pop
aas
aam
sbb
and
fdivrl
push
adc
out
xor
imul
loopne
popa
mov
push
stos
lcall
in
sbb
les
jg
cs
inc
lret
xchg
movsb
mov
pop
adc
popf
xchg
stos
inc
das
dec
add
or
mov
or
cld
add
mov
xchg
call
cmpsl
dec
outsl
jae
cli
inc
sbb
movsb
data16
cltd
sub
test
jmp
push
imul
push
jl
xorl
xor
scas
dec
pop
pushf
sub
sbb
data16
sbb
ret
andb
sbb
cmp
jnp
mov
pop
cltd
cmp
push
js
add
dec
retw
or
jno
aas
and
inc
and
adc
ja
les
ror
cmp
mov
or
outsl
cmp
loope
mov
add
enter
inc
out
mov
jno
mov
inc
jl
or
popf
test
mov
adc
bound
inc
cli
dec
pop
adc
pop
or
cmpsl
imul
mov
jne
pop
sbb
test
push
ret
scas
fsubr
pop
mov
clc
loope
test
addr16
mov
mov
xchg
ss
mov
scas
ja
xor
mov
int
cmp
cwtl
orl
jp
fists
sbb
and
push
push
push
ss
or
dec
stc
add
outsl
imul
inc
push
and
addl
jmp
mov
stc
mov
frstor
hlt
push
mov
xchg
fiaddl
fwait
dec
xchg
orb
aam
cli
std
out
sub
call
jnp
push
jl
mov
cmp
in
xor
mov
es
and
test
xchg
or
movsl
xchg
jmp
lea
mov
sbb
and
cmp
jge
lea
jno
das
cmp
aas
vpshufhw
fistpll
lock
mov
lcall
push
pop
movsl
mov
mov
mov
jle
iret
mov
mov
test
jmp
in
sbb
sbb
lods
xor
sbb
cmp
popa
lds
leave
xchg
mov
fisttpl
andb
lret
or
mull
cmpb
scas
movsb
xchg
xor
fwait
roll
repnz
cld
xor
cmp
push
inc
fildll
lret
mov
sti
cmp
in
in
aas
aas
sahf
lock
xchg
add
xor
mov
nop
arpl
sbb
sub
xchg
adc
les
data16
decl
ja
mov
xor
inc
lahf
dec
dec
loop
push
cmp
cli
test
lret
mov
in
push
bound
add
mov
ljmp
std
rorl
cmovnp
and
pop
fisubrs
xchg
jns
call
repz
jl
push
and
popf
lret
cwtl
ret
mov
sbb
mov
or
jl
divl
fisttpll
enter
sti
xor
ds
add
sbb
les
stos
xchg
inc
sub
decb
xor
rolb
add
daa
ds
inc
negb
mov
pop
std
lds
pop
xor
bound
loop
enter
jmp
in
cmp
xor
subb
adc
or
pminsw
sub
jb
xchg
push
xchg
mov
xor
test
mov
popf
in
cmp
rcll
in
stc
inc
pop
dec
lahf
testl
dec
pop
jno
inc
mov
sub
mov
mov
fnstsw
pusha
out
xlat
enter
lcall
push
mov
outsl
sub
add
inc
test
pop
jns
add
cli
add
movsb
jns
add
adc
pop
jmp
jge
jge
inc
push
in
mov
dec
mov
pop
outsb
add
and
outsb
aas
sti
and
sub
cmc
adc
data16
and
stc
andl
int
or
adc
lret
aaa
mov
push
pop
fisubrs
cld
or
mov
inc
jb
fwait
sbb
jp
mov
sbb
or
push
shr
test
cmp
cmp
ds
pop
aas
ds
rcll
stc
cli
repz
mov
dec
push
int3
sub
cmp
sub
adc
andb
or
in
pop
rorb
movsb
cmpb
orb
push
nop
out
sbb
test
xor
gs
push
cmp
icebp
jp
sbb
jmp
inc
pushf
pop
mov
sar
lcall
cmp
loop
adc
call
aad
jbe
mov
fwait
es
cmpsb
js
sbb
pushf
xor
sbb
pushf
sub
out
sbb
je
sbb
inc
mov
inc
and
mov
dec
jne
sub
rcrl
popa
jbe
add
icebp
test
mov
lcall
outsl
xor
fldenv
or
mov
cmp
mov
decb
sbb
pop
outsb
out
xlat
or
inc
stos
loope
adc
mov
jb
mov
mov
aaa
xor
push
cltd
adc
fcmove
int
jno
notl
xchg
bound
aam
pop
sbb
cmp
cmp
dec
pushf
mov
test
mov
insl
mov
fisttpl
lds
push
mov
push
or
clc
sub
or
cmp
jl
roll
push
in
leave
or
cltd
js
xor
push
inc
cmpsl
mov
leave
mov
pop
in
mov
rolb
fcoml
jp
xchg
aad
pushf
adc
pop
notl
shr
mov
jno
jae
and
ds
xor
mov
mov
pusha
jge
or
inc
or
or
imul
dec
fwait
mov
mov
mov
pop
sbb
and
das
pushf
sbb
push
out
in
push
das
or
shll
scas
push
mov
dec
jnp
sti
outsb
cmc
ret
inc
or
xchg
jnp
jb
and
test
xor
inc
mov
jle
mov
sbb
dec
xor
mov
loop
xor
int
cli
and
cmp
cmpsb
popf
loopne
inc
and
mov
roll
fbld
adc
mov
sti
sbb
jne
shrl
cmp
mov
or
mov
out
pushf
pop
iret
ss
outsb
sub
inc
sub
sub
lcall
xchg
push
push
in
mov
dec
cwtl
xchg
cmp
test
enter
in
je
adc
pop
xchg
cmp
insl
xor
sti
loopne
cs
xor
imulb
cmc
adc
enter
and
pause
inc
inc
cmpsb
in
mov
mov
push
repz
jns
outsb
mov
arpl
stc
mov
movb
aad
stos
cwtl
mov
sbb
repnz
adc
xchg
sub
int
aaa
fbld
dec
mov
ljmp
jge
inc
icebp
mov
push
xchg
pop
push
inc
aam
or
aam
pop
inc
sub
mov
pop
insl
cmc
xchg
sbb
mov
sub
dec
in
pop
daa
je
test
enter
decb
test
inc
mov
xor
lock
mov
test
push
inc
popf
cwtl
call
inc
cmp
push
mov
adc
movsl
or
sti
inc
add
out
cld
pop
out
mul
cwtl
inc
addr16
nop
mov
inc
jecxz
and
push
mov
in
lds
mov
xor
mov
push
test
popf
in
xchg
adc
jp
mov
ror
inc
mov
fstpl
or
or
cmpl
xchg
xor
jbe
jbe
pop
pop
jbe
js
mov
mov
fisubl
jecxz
in
in
out
xchg
cmc
test
cmp
xchg
lds
repnz
mov
inc
dec
mov
cld
sti
xchg
mov
or
in
mov
gs
jo
inc
jne
loope
scas
in
and
pusha
fwait
xor
push
mov
lock
in
cmp
cmp
adcb
mov
jo
lock
ror
lret
xor
lret
cmp
pop
sub
xchg
imul
jmp
and
jp
out
cwtl
pop
cmp
orl
sbb
sbb
sbb
cwtl
cmc
jl
enter
push
lods
scas
and
jp
das
pop
xchg
cwtl
add
aad
push
sbb
xor
mov
in
sub
insl
les
push
lods
pop
mov
xor
leave
add
mov
xchg
clc
pop
push
mov
push
xchg
jae
inc
lods
cmp
aaa
jecxz
aad
stc
aaa
rcl
sbbb
sub
sahf
jp
xorl
lock
xchg
scas
test
and
xor
adc
xor
pop
dec
push
shlb
clc
pusha
jns
gs
int3
fsubr
inc
subl
mov
aad
mov
inc
pop
ja
adc
ja
out
mov
or
pop
adc
push
push
test
or
imul
mov
mov
notl
sbb
lret
xor
push
mov
fs
mov
cmp
mov
push
stos
push
push
fdivr
jl
xchg
rol
aas
sub
jecxz
push
mov
jp
into
push
lret
lcall
mov
cmc
push
sysenter
inc
rcll
push
shl
or
pop
xchg
inc
aam
mov
mov
sub
test
aam
mov
inc
xchg
add
push
shl
scas
cltd
cmp
mov
sbb
cltd
pop
mov
enter
mov
hlt
xor
pop
cmc
jb
arpl
push
outsb
movsb
cmp
int
adc
mov
add
push
inc
sub
inc
jne
mov
inc
bound
sbb
xchg
xlat
int3
mov
aas
and
or
fwait
xchg
sarb
mov
loopw
pop
adc
sbb
or
lock
test
mov
repnz
in
push
rcrl
fstl
enter
adc
dec
sarb
popf
pop
cs
mov
pop
cmp
aaa
setg
pop
and
lds
cli
pop
adcl
xchg
or
and
cmpsb
test
fsubrs
roll
popa
outsl
cmp
inc
pop
outsb
inc
incl
mov
fadd
xchg
dec
push
adc
or
fcmovu
inc
loop
int
mov
cli
aas
adc
jo
loopne
add
jp
paddusb
jns
daa
adc
fildll
rcrl
dec
push
test
cs
mov
sahf
jnp
push
test
mov
in
sub
dec
cmp
cmp
pop
fldcw
jnp
testl
dec
fsub
or
inc
in
lock
lock
movsl
cli
addr16
mov
and
insb
mov
daa
or
sahf
xchg
ss
pushf
lea
mov
js
cltd
add
nop
jge
adc
and
inc
or
test
enter
ret
rclb
mov
xchg
stos
dec
cli
or
pushf
push
xlat
pop
pop
rcrb
adc
sbb
aad
fsubrs
icebp
mov
flds
inc
or
pop
sbb
cltd
jp
fisubrl
popa
xor
jecxz
aad
fdivrs
add
xchg
push
sub
push
mov
sbb
adc
and
out
push
mov
je
ljmp
mov
loop
negl
xchg
or
mov
mov
or
in
fadds
sub
lods
stc
xor
mov
jmp
test
lcall
push
push
int
mov
cmp
lods
pop
imul
imul
mov
push
adc
mov
inc
cwtl
sbb
mov
push
xchg
sbb
xchg
out
orl
enter
fnstcw
lock
mov
sar
pop
or
aam
shlb
aam
and
out
je
pop
imulb
xor
lock
pop
add
sub
lods
mov
pop
lods
xchg
cmp
jmp
das
popf
or
call
iret
jne
jecxz
xor
mov
pop
pop
jmp
rolb
mov
sbb
loop
out
es
sahf
leave
sbb
cmc
scas
ds
outsb
ret
xlat
inc
scas
mov
xor
mov
popf
sub
add
mov
push
add
push
ror
xor
cld
imul
shll
push
jl
cmpsl
subl
mov
jl
and
movsl
jg
in
add
inc
aam
adc
lods
ror
xchg
lret
scas
pop
cmp
movsb
mov
lcall
push
pop
rclb
dec
dec
shlb
pop
mov
lret
sub
mov
lea
shl
inc
xor
out
jne
jne,pt
push
int3
sub
pop
mov
or
cmp
push
mov
int3
pop
out
int3
sub
popa
xorb
pushf
and
jle
sbb
cmp
cmp
and
imul
cli
jns
icebp
dec
fldl
pop
sbb
or
aam
xchg
pop
xor
mov
repz
das
jge
scas
and
dec
jge
movsl
bound
icebp
pop
mov
inc
aam
mov
stc
dec
jbe
fucom
lret
hlt
jge
sbb
sbb
mov
cltd
aad
adc
jge
dec
xchg
negb
shr
or
movsb
mov
add
sbb
cmp
mov
or
mov
adc
test
or
cmp
clc
add
add
sbb
jp
shlb
inc
out
mov
adcl
int3
jmp
mov
test
and
outsb
gs
pop
inc
sarb
std
hlt
adc
fwait
inc
imul
mov
sbb
jns
mov
mov
adc
jno
clc
or
enter
and
out
cmp
leave
je
mov
outsl
fnstenv
sahf
dec
popf
je
shrl
add
mov
jnp
mov
xchg
or
cvttps2pi
xchg
into
dec
imul
xchg
call
int
stos
mov
lcall
iret
mov
stos
cmp
dec
pop
fcomip
dec
push
out
ss
dec
in
enter
dec
rorl
xchg
int3
int3
popa
mov
scas
in
mov
mov
inc
sbb
xor
add
cld
call
push
pop
or
imul
pop
inc
inc
dec
and
jae
lods
push
fildl
jmp
out
inc
scas
repnz
xchg
sbb
or
adc
push
lret
push
dec
in
jno
loopne
out
fdivrl
add
cmc
or
xchg
push
inc
push
sub
xchg
div
or
dec
and
dec
out
sbb
nop
test
pop
mov
pop
rorb
mov
mov
jnp
mov
stos
dec
cli
mov
in
loop
icebp
inc
aam
fstl
fcomps
xorb
lods
mov
mov
mov
ret
pop
repz
dec
aas
pop
dec
inc
jle
je
sub
outsl
aam
stos
in
jbe
enter
xchg
cltd
adc
test
xchg
add
xor
push
sti
scas
lods
ret
jb
pop
mov
outsl
lret
fisubs
xchg
push
jnp
in
jge
jnp
shll
cmp
jmp
ljmp
shlb
js
je
add
xchg
fdivrl
notb
xor
mov
cmc
xlat
pusha
scas
xchg
push
pop
pop
lock
jbe
jg
out
sti
add
add
dec
or
out
aas
out
xor
pop
repnz
nop
sahf
in
les
aaa
mov
mov
and
mov
fwait
mov
dec
pop
iret
sbb
jb
lea
in
pop
ljmp
xchg
and
pop
jb
pop
ss
add
adc
pop
sbb
dec
cltd
pop
push
dec
int3
mov
les
xor
int
sbb
or
outsl
shlb
add
or
jl
aad
push
inc
jl
shl
mov
mov
and
mov
and
push
cli
sub
sub
cmp
push
nop
xchg
sti
fstpt
les
mov
pushf
sub
fwait
xchg
lret
les
out
jo
pop
hlt
and
cmpsb
loop
dec
jp
push
add
and
and
out
jmp
mov
sub
sbb
repz
mov
cmp
mov
push
jbe
enter
je
jb
pop
and
or
mov
sbb
dec
loope
xchg
fwait
jns
dec
fidivs
push
loopne
iret
adc
push
inc
insl
push
cmpsl
or
movsl
shl
push
xchg
xor
gs
hlt
mov
pop
xlat
in
stos
lahf
push
add
lret
xlat
xchg
jg
add
test
les
mov
cmpsb
cmp
int
and
sbb
or
push
cmp
sub
ret
dec
add
cs
mov
cmp
loopne
add
mov
jecxz
mov
add
dec
jns
mov
xchg
add
mov
pop
call
or
lret
mov
push
adc
jne
and
rcr
pop
lds
push
xchg
es
push
dec
sbb
inc
adc
pop
stc
or
data16
jae
faddl
and
xchg
xchg
inc
cmpsb
sub
popa
or
jne
xchg
sbb
stos
insb
or
fimuls
jle
popf
pop
mov
fists
aad
or
push
add
fdivl
push
and
mov
shrl
adc
and
mov
loope
adc
adc
or
push
mov
ss
xor
je
jns
int3
out
add
ret
insb
sti
xchg
mov
dec
xchg
mov
sbb
nop
mov
ss
and
add
addr16
aaa
cmp
adc
les
mov
or
mov
stos
mov
cmp
mov
push
mov
mov
cmp
and
outsl
in
push
pop
adc
xchg
xchg
inc
cmpsb
test
out
rcrl
les
jno
fistl
enter
pop
call
std
xchg
xor
imul
sub
or
jg
push
xchg
push
pop
call
adc
push
fcomip
sbb
inc
fwait
test
ss
inc
mov
fimull
mov
sbb
clc
movsl
push
mov
mov
cmp
in
adc
pushf
xor
mov
aaa
mov
sahf
popl
add
push
xchg
pop
inc
sbb
sub
sbb
les
mov
sti
rcrb
insb
clc
jl
shl
ret
mov
sub
aaa
mov
lret
inc
subb
mov
leave
mov
mov
ret
fadds
mov
jno
cmpsl
mov
add
divl
sub
xor
or
push
mov
xchg
sub
push
aaa
fnstenv
and
js
mov
ret
pop
xchg
into
and
ficompl
aas
out
fstpt
jge
sahf
mov
imul
cmc
out
int3
ret
int
sbb
add
mov
cmpsb
rcr
stos
adc
getsec
pop
add
lock
or
mov
push
out
js
pusha
int
push
cmpsl
out
fwait
mov
or
loop
xchg
outsb
mov
insl
pop
fdiv
jmp
bnd
mov
sub
sub
loop
cld
mov
jmp
repz
hlt
and
add
iret
enter
and
adc
mov
xchg
ljmp
insb
imul
mov
mov
fldln2
or
mov
mov
push
sub
lret
out
push
pop
push
or
pop
jnp
pusha
dec
sbb
mov
mov
push
pop
pop
inc
ja
cld
dec
cmp
cmp
cmpsb
les
or
pop
lret
mov
pop
lods
ja,pt
adcb
imul
xchg
lds
sbb
cs
int
add
pop
cmp
jge
aam
icebp
push
mov
rorb
in
mov
pop
or
push
std
fld
push
adc
mov
inc
inc
dec
inc
imul
cmpsl
mov
xor
mov
and
xchg
mov
call
shr
xchg
push
push
out
push
fidivrs
or
sahf
pop
in
pushf
pop
lods
xor
mov
stos
adc
enter
test
or
into
std
inc
dec
cltd
addb
test
dec
out
adc
cmp
imul
sbb
pop
or
mov
adcb
mov
imul
pop
arpl
mov
rorl
dec
iret
test
adc
jle
repnz
repnz
adc
xor
inc
fistpl
sub
aam
mov
sbb
test
xchg
ret
popa
jge,pt
lcall
insb
inc
fdivl
insb
push
aaa
push
in
in
inc
mov
fs
xor
inc
movaps
jp
add
xor
in
int
out
jmp
addr16
or
xchg
sub
subl
push
push
mov
sbb
xchg
mov
mov
aas
cmp
and
scas
mov
xchg
jge
add
std
xor
lods
inc
adc
js
jbe
mov
pop
lea
es
jge
fdivrs
xchg
xchg
int
outsb
inc
mov
int
mov
ret
sub
div
dec
arpl
mov
and
mov
push
pop
mov
mov
sub
in
lock
cwtl
fcompl
push
push
incl
dec
fsub
pop
inc
pushf
out
lret
or
pop
sbb
lret
loopne
sahf
and
jnp
sub
push
sbb
mov
mov
push
and
dec
es
in
loopne
push
cmpsb
cmc
out
sahf
sub
test
pop
jecxz
mov
lret
scas
ljmp
fsubrl
iret
imul
pop
mov
movsl
jae
lret
clc
rolb
jge
jns
fiadds
cmp
push
jge
cli
sti
sbb
jl
push
xor
test
mov
mov
or
add
mov
sbb
push
aad
mov
dec
push
jo
xor
into
repnz
scas
lcall
jge
mov
pushf
dec
jg
jecxz
mov
jns
hlt
dec
xlat
cmpsb
call
scas
add
dec
add
int3
sar
jb
sarb
ja
icebp
addl
jae
push
mov
sbb
aad
push
jecxz
lret
inc
sub
les
data16
iret
ret
aam
popf
test
das
add
or
mov
xchg
jns
in
and
movsb
lock
xchg
and
inc
pop
retw
into
mov
dec
pop
add
in
adc
shlb
or
xchg
into
dec
stos
mov
sbb
and
int3
nop
push
inc
or
xor
and
cli
add
jecxz
sub
inc
in
cmp
out
stc
dec
push
mov
cwtl
jnp
sub
loopne
lcall
push
jb
mov
fiadds
pop
push
fcoml
imul
in
push
cmp
pop
js
popa
scas
jl
or
dec
push
adc
mov
ret
stos
imulb
bound
sub
add
loop
iret
jb
mov
add
mov
lea
jmp
dec
mov
mov
stc
pop
movsb
push
enter
xchg
outsb
fs
cltd
cltd
add
jge
adc
adc
xor
nop
out
jno
pop
inc
mov
mov
xchg
into
push
pop
imul
or
mov
ljmp
movsb
rorb
enter
or
cwtl
pusha
pusha
push
mov
jle
ljmp
das
aam
lea
sbb
cmc
inc
xchg
mov
and
mov
cmp
dec
loope
mov
mov
or
lods
inc
xchg
repnz
xchg
fcomps
mov
mov
and
mov
mov
lret
push
das
lods
jb
mov
mov
pop
call
imul
dec
bound
subb
mov
dec
push
xor
mov
xchg
ds
outsl
ret
jp
mov
les
sbb
rorb
jnp
imul
imul
mov
xchg
outsb
js
fdivr
cmp
lahf
mov
cmp
out
pop
popf
dec
mov
xchg
mov
imul
out
lcall
divb
adc
leave
inc
sbb
dec
mov
xchg
sbb
jbe
iret
xchg
repnz
ret
pusha
fdivl
xchg
cmp
mov
dec
pop
outsl
mov
cmc
xchg
aas
or
lahf
and
xchg
sbb
in
cmp
enter
cs
out
adc
sbb
outsb
cmp
rorl
jbe
fsts
and
push
push
jae
jmp
cmp
mov
sub
ja
into
ss
stos
pop
push
add
stc
ja
cmpsw
xchg
pop
jo
cld
jb
push
lods
aad
decl
mov
imul
movsl
xchg
daa
push
add
aaa
jnp
jne
push
sbb
mov
pop
pop
clc
rol
cmc
mov
push
test
pop
pop
mov
dec
mov
cmp
orl
jo
imul
out
daa
and
sub
adc
lret
mov
mull
data16
xorl
mov
out
mov
movsb
inc
dec
cld
mov
jmp
cmpsl
popf
add
std
cmpsb
pusha
pop
dec
addr16
mov
aaa
sbb
pop
add
xor
iret
jne
fstps
jmp
xchg
movsb
ljmp
push
xlat
scas
dec
int3
loope
mov
loop
and
or
addw
sti
fs
aaa
mov
mov
lahf
sub
cs
cmpsb
in
stc
pushf
test
filds
fisubs
and
adcl
jbe
icebp
push
test
mov
adc
loopne
push
pop
jno
mov
mov
pushf
inc
pusha
testl
or
xor
push
gs
xlat
cmc
mov
sahf
mov
pop
mov
loopne
push
dec
div
daa
cmpsl
cld
test
lods
pop
mov
imul
loop
in
stos
add
enter
fadd
mov
jne
ret
pop
adc
lret
xchg
inc
mov
arpl
dec
ret
mov
adc
xchg
imul
das
call
cmp
inc
je
jo
es
mov
mov
test
mov
xchg
xor
push
inc
les
lods
add
in
lahf
dec
adc
push
test
dec
mov
in
ret
cmp
jmp
stc
int3
ds
fidivs
jmp
mov
mov
jmp
addr16
mov
sub
leave
add
cmc
bound
sbb
adc
lahf
sarl
cltd
add
pop
stos
dec
sub
dec
sbb
aas
xor
div
dec
adc
cli
insl
jbe
fidivrl
jbe
push
ds
sub
inc
popf
sbb
xlat
icebp
fists
or
or
stc
jg
flds
cli
inc
cmp
mov
jns
mov
dec
cltd
jb
cwtl
cmp
into
lds
mov
fists
sarl
je
adc
or
pusha
sub
rolb
sub
push
dec
jb
lcall
aad
xchg
out
adc
popf
or
sarb
shll
ja
xor
add
mov
jecxz
cmpsl
mov
fisubrs
dec
data16
popf
loop
mov
test
sub
mov
push
inc
adc
jle
idivb
test
les
lea
pop
sahf
sbb
mov
sub
and
mov
push
lret
adc
hlt
sub
cld
mov
sbb
stc
outsl
daa
pop
xor
sub
popa
pop
fdivr
and
mov
fadd
fmulp
xor
enter
ret
fwait
mov
sub
dec
jmp
out
les
and
sbbb
adc
imul
push
mov
sbb
sub
repz
jo
mov
out
int
adc
mov
call
adc
loopne
lret
lds
daa
cmc
or
mov
inc
test
out
sbb
lock
dec
mov
imul
int
xchg
cmp
dec
push
dec
or
or
dec
jle
ret
pop
daa
mov
shrb
outsl
outsl
shlb
les
out
mov
mov
sbb
push
mov
nop
add
andl
add
jbe
cmp
inc
or
movsb
loop
push
mul
mov
or
sarl
pusha
mov
dec
loopne
dec
or
adc
js
add
push
testl
mov
push
sbb
cmp
mov
xchg
and
fnstsw
out
cmpsl
push
sbb
mov
movsl
lock
shr
or
fucom
loop
sbb
adc
xchg
sub
xchg
es
push
pop
mov
ljmp
pop
cmp
add
data16
mov
cli
dec
cli
sub
jae
push
jbe
popa
adc
jae
fistl
in
mov
jne
jmp
cwtl
adc
out
push
in
xchg
pop
scas
add
sub
lods
cld
por
dec
or
mov
lea
sbb
pop
out
mov
ffree
lahf
xchg
aaa
lods
mov
dec
inc
dec
inc
emms
fsubrl
int
lods
inc
mov
ret
adc
nop
sbb
cmp
inc
sub
sbb
xchg
sub
jecxz
and
ds
inc
xchg
mov
inc
frstor
jecxz
fstpl
pusha
sbb
ljmp
push
rcrl
lods
xor
push
scas
loopne
add
dec
and
les
mov
dec
enter
dec
shlb
mov
inc
iret
xchg
aam
push
mov
sbb
rolb
mov
inc
scas
push
mov
xchg
in
fldenv
mov
cld
fcoms
aas
sub
nop
add
jnp
icebp
ret
jnp
scas
jbe
jae
std
out
lods
xor
jno
sub
lock
lea
add
shlb
rorb
add
dec
sbb
loopne
insb
mov
js
xlat
mov
fisttps
mov
rorb
stos
cmp
xor
in
jnp
pop
adc
ret
or
jmp
cmp
fisttpll
mov
ret
out
or
pop
fsts
outsb
or
add
std
testb
or
movswl
sbb
je
std
sub
pop
add
jmp
addb
cli
xor
inc
ss
xor
dec
int
sbb
clc
cmpsb
inc
push
mov
ficoml
stos
xor
outsl
repz
ss
sti
call
jmp
inc
incl
pop
dec
adc
xchg
mov
jb
mov
sub
aad
cs
lock
sar
jge
rol
adc
inc
cmp
ds
jb
pop
mov
push
popf
xchg
fidivrl
int3
mov
loopne
jg
stos
leave
push
and
pop
pop
or
es
lods
addr16
xor
int
mov
push
pop
adc
and
pminsw
xor
fwait
add
lock
inc
mov
push
stos
jbe
call
cmp
movsb
and
out
movsl
sbb
pushf
stos
xor
std
adc
scas
xchg
test
and
xchg
mov
mul
aad
mov
das
scas
sbbb
inc
outsb
dec
lret
jg
aaa
sarl
push
and
sbb
dec
push
roll
adc
in
outsb
adc
sbb
jl
mov
frstor
sub
cmp
lds
mov
or
adc
and
into
and
cmc
mov
jle
sbb
adc
jbe
push
popa
pop
inc
sub
outsl
add
stc
sbb
mov
push
mov
mov
addr16
test
hlt
xchg
jle
sti
dec
dec
xlat
sti
cmp
ficoml
sarb
popa
test
aaa
out
pusha
mov
out
cwtl
bnd
xor
jge
pusha
test
je
pop
outsl
inc
imul
daa
stc
or
fcomps
add
lretw
mov
pop
adc
fcomps
fsubp
inc
fimull
repnz
xchg
dec
test
in
xchg
out
dec
mov
repz
fsubs
or
sbb
std
xchg
shl
push
push
int3
inc
imul
fxtract
aaa
test
sub
dec
inc
in
add
pop
jo
subb
jnp
jl
scas
xor
xchg
ja
dec
adc
xor
jl
nop
aas
shl
mov
dec
ret
icebp
mov
loop
inc
sbb
xchg
mov
push
movsb
cmc
jmp
das
xchg
jb,pt
js
nop
xor
outsb
rcrl
xchg
test
cmp
adc
mov
aas
out
out
gs
jmp
sub
inc
mov
je
loop
mov
push
jno
push
and
sahf
test
lret
fwait
lds
daa
push
mov
fs
std
add
ret
mov
and
shll
push
cmpsl
rcrl
dec
mov
jecxz
mov
xchg
jne
sti
xor
push
scas
cmp
xchg
mov
dec
mov
adc
pop
lret
out
cmc
ud1
out
fidivl
adc
push
test
mov
lds
lock
shl
out
push
test
loope
mov
jecxz
xor
and
stos
jbe
jle
adc
dec
ja
xor
dec
out
add
adc
lret
vucomisd
mov
aam
cmp
sub
xchg
xchg
xchg
daa
xchg
test
into
pop
int3
add
push
fldl
inc
jmp
xchg
inc
sbb
daa
fildll
push
addr16
hlt
lods
xchg
lret
movsl
mov
xchg
cmc
pop
ja
cmp
addl
push
jnp
arpl
cmp
data16
hlt
out
rorl
jecxz
cmpsl
push
add
loop
adc
pop
mov
pusha
nop
cmp
int
jbe
jmp
int3
pop
movsl
xchg
in
movsl
jno
imul
cmp
fsub
xchg
cmpb
xchg
daa
sub
dec
xor
mov
push
mov
inc
imul
mov
sub
gs
cmp
pop
pop
xchg
xor
mov
mov
or
arpl
push
cwtl
addr16
sbb
sub
xchg
mov
mov
and
ljmp
sbb
int3
test
or
push
xlat
mov
mov
cltd
push
mov
dec
repz
add
repnz
or
out
jg
adc
scas
mov
ja
in
adc
xchg
icebp
fld
pusha
add
ret
or
push
rol
in
dec
cli
mov
push
mov
mov
push
pop
jbe
pop
xorb
in
jecxz
nop
scas
xchg
and
sub
cmpsb
in
pushf
lds
popa
aad
or
js
outsb
add
cmp
lds
test
cmc
mov
rcrb
push
sbb
mov
mov
adc
subl
mov
sbb
inc
popf
sbb
dec
xor
mov
inc
int3
mov
adc
xor
mov
xchg
xlat
loope
pop
add
push
inc
push
adc
mov
jns
sub
jecxz
sbb
inc
jne
and
and
bnd
sub
cmp
enter
adc
icebp
iret
pusha
inc
mov
mov
and
in
outsl
rorl
inc
int3
in
cmpsb
daa
jmp
fstps
sbb
mov
or
out
adc
dec
arpl
jnp
outsl
add
pushf
std
addr16
lock
xor
sub
cltd
ret
lock
mov
out
gs
inc
xchg
andl
add
mov
enter
jo
data16
xor
sbb
push
test
add
pop
push
push
and
ss
sub
shlb
dec
jns
stos
dec
enter
ss
dec
xchg
push
ret
fiaddl
mov
out
pop
testb
cld
push
push
lods
push
jo
popa
mov
out
std
xlat
das
fs
scas
mov
loope
movzwl
pop
push
mov
jl
xchg
cmp
push
sbb
push
adc
sti
mov
pop
mov
out
mov
test
addr16
xchg
dec
stc
sbb
inc
mov
adc
pop
ret
fnstenv
sti
popf
adc
cmp
mov
mulw
push
rorb
adc
push
rcll
inc
test
inc
mov
loope
xor
popf
xor
loope
mov
pop
push
inc
sbb
push
fidivrs
push
fs
pop
aad
iret
mov
push
and
cmp
rclb
sub
fstps
les
cli
cmp
push
mov
dec
loope
inc
inc
xchg
jmp
fbld
aad
push
cmpsl
popa
gs
into
lock
pop
insl
rcll
dec
mov
xchg
pop
out
pushf
ds
dec
jg
xlat
jbe
jge
mov
mov
movsl
push
jns
out
pop
sbb
stc
push
sbb
cmp
cld
cmp
dec
aam
test
out
aam
mov
icebp
adc
sti
mov
sti
in
jle
xlat
jmp
jmp
xor
ret
iret
lods
pop
adc
icebp
lcall
cmp
sub
lret
cli
cmpsb
jp
or
arpl
fwait
sub
mov
push
cld
sbb
shl
pop
dec
mov
pop
add
sub
mov
mov
test
xor
jb
sub
xor
cltd
js
or
add
mov
push
fsubr
stc
imul
test
mov
adc
cmpl
gs
mov
push
shlb
dec
mov
push
rcll
dec
jle
jns
lods
add
movl
shlb
popf
repnz
inc
mov
outsl
fwait
shl
out
mov
test
xor
mov
outsb
pop
cmp
dec
repnz
mov
mov
iret
stc
xlat
push
fildl
icebp
stc
mov
mov
dec
jp
addl
adc
in
inc
dec
jb
xor
dec
rclb
inc
lods
xchg
xchg
and
cmp
adc
cltd
mov
push
xchg
out
loope
add
push
fisttpl
sub
mov
cmp
nop
xchg
mov
rorb
and
dec
xor
or
inc
jo
fcoms
popa
imul
xor
lock
dec
je
xchg
inc
rclb
insb
data16
push
sti
adc
add
adc
or
test
imul
push
lahf
nop
xchg
mov
test
loop
dec
int3
outsb
xor
pop
sub
pop
or
xchg
xchg
aad
push
outsl
lods
sbb
push
test
lock
out
loopne
dec
dec
inc
dec
loop
out
lgs
jge
add
inc
lds
and
cmp
aam
jge
mov
and
nop
xor
mov
cmpsl
mov
sub
mov
rorl
add
add
adc
adc
jp
std
sub
xor
add
sbb
scas
daa
ss
std
mov
cmp
cltd
mov
mov
xchg
arpl
shlb
xchg
push
sub
dec
mov
pop
outsb
sub
icebp
jo
and
pop
push
sbb
mov
push
ror
inc
fiadds
mov
adc
adc
enter
push
xchg
pusha
call
mov
ja
adc
lcall
sbb
mov
or
push
mov
cs
sub
add
gs
enter
mov
shlb
pop
inc
adc
fcompl
sbb
cs
mov
bound
lahf
xor
sub
out
cwtl
sbbl
xchg
or
addr16
pop
push
add
or
enter
dec
mov
inc
xor
mov
rorb
fnstenv
inc
xor
xlat
call
ficompl
pop
mov
jb
insl
cs
cmp
push
sub
adc
loope
imul
xor
add
hlt
stos
xor
mov
push
or
repz
fiaddl
sub
dec
sahf
stc
in
sbb
mov
sbb
add
out
divb
sub
cmp
ficomps
mov
mov
jo
jns
and
ret
lcall
mov
and
add
add
xor
push
iret
lods
pop
or
mov
jecxz
cs
out
add
and
or
add
inc
and
xor
out
rolb
xchg
outsb
insl
out
dec
jl
in
movsb
out
mov
pop
inc
cld
mov
imul
testl
out
xchg
lret
out
mov
std
in
in
lea
jbe
loopne
pop
loop
movsb
test
cwtl
test
pop
cli
imul
dec
mov
jb
sarl
scas
imul
adc
insb
sbb
add
mov
mov
enter
sbb
lcall
in
ftst
jae
cltd
icebp
fisttpl
xchg
xor
mov
pop
pop
pop
call
mov
test
xchg
xchg
xlat
mov
cmp
pop
push
ficomps
push
pop
pop
mov
popf
jp
inc
aam
add
dec
adc
sbbw
into
push
mov
add
mov
jl
adc
dec
icebp
cld
adc
sub
or
or
dec
loope
loope
mov
les
popa
js
mov
sbb
lds
cmc
ret
test
incl
push
mov
aaa
negb
push
mov
sti
mov
mov
dec
out
insb
gs
and
into
dec
test
cmp
jle
fadd
ret
popf
pop
jg
pop
shrb
sbb
mov
aam
insb
test
and
sub
fstl
test
call
dec
aam
ljmp
inc
in
out
jl
xchg
mov
cwtl
jg
jp
and
enter
mov
mov
loope
and
push
movsb
int
mov
mov
pop
subl
ret
pop
bound
jbe
cwtl
mov
outsl
lret
add
add
inc
jl
push
lock
fdivrp
fcoml
or
mov
mov
out
out
cmpsb
inc
ret
insb
pop
aad
rcll
cmp
or
pop
leave
pusha
xchg
mov
imul
int3
jae
add
or
mov
mov
mov
lret
sbb
or
xor
out
jg
or
cli
inc
sub
rcrb
or
loop
je
push
imul
push
sbb
or
andl
in
xor
scas
adc
aas
mov
lahf
loope
jo
das
mov
ljmp
mov
js
mov
or
mov
jmp
loop
lea
add
xlat
out
mov
js
js
lret
inc
into
icebp
add
nop
dec
mov
daa
inc
adc
jecxz
lret
pop
or
mov
test
pop
xchg
sbbb
stos
leave
jge
push
popf
jne
ljmp
sub
shrl
mov
gs
sub
ret
fisubl
stc
mov
mov
int
xchg
or
push
pop
and
das
test
inc
into
mov
popaw
add
inc
or
sbb
sarl
stc
push
test
ds
int3
sub
lods
test
arpl
mov
lds
mov
dec
sbbl
jns
sbb
sbb
shrb
or
mov
xchg
jg
mov
loope
popl
iret
cmp
stc
pop
mov
xchg
mov
sub
mov
dec
xchg
push
aaa
in
pop
cwtl
std
push
mov
jge
sbb
mov
xor
push
fisttpl
fwait
cltd
add
andb
fidivl
jmp
sub
push
sub
cmp
popf
push
mov
xchg
movsb
pop
lret
gs
cmp
aam
adc
setp
dec
dec
fsts
test
pop
fcmovnb
mov
mov
mov
fists
pop
mov
sbb
dec
and
test
mov
jge
popa
cmpl
jmp
sub
and
lods
es
dec
lret
mov
popl
sub
pop
dec
xchg
xor
ret
jmp
divb
sbb
aaa
pop
loopne
or
das
push
outsb
enter
sahf
gs
cmpsl
add
clc
outsl
xor
add
sub
pop
sbb
mov
aad
je
ret
push
shl
popf
xchg
cmp
sub
pop
pop
dec
jmp
cmp
test
push
jge
adc
push
inc
push
gs
int3
xchg
ret
dec
pop
call
sub
pop
stos
mov
and
pop
fcomps
jb
add
or
push
outsb
sub
sbb
mov
sub
and
clc
pop
addl
sbb
xor
imul
pop
cmp
aam
push
call
push
daa
hlt
inc
inc
insb
xchg
cmp
sub
jbe
jno
adc
and
fsubl
xchg
ja
icebp
cmpsl
pop
int
sbb
ja
cmp
loopne
inc
mov
stos
fs
repnz
out
inc
mov
sub
or
daa
fstpt
xchg
mov
ds
mov
repz
test
mov
decb
addr16
std
fsts
loope
cmp
mov
mov
inc
push
scas
pop
mov
sbb
and
aad
jl
xchg
js
xor
mov
xor
roll
xchg
xchg
xchg
adc
pcmpeqw
stos
loope
inc
push
jne
and
jno
jge
stc
sbb
cmp
mov
out
mov
xchg
cmc
push
clc
xor
cmpsl
lret
cmpsl
xchg
dec
sbb
mov
lahf
nop
cmc
jns
ljmp
ret
je
aaa
push
movsb
dec
es
ret
ret
and
push
popa
push
add
sub
rol
dec
add
cmp
cwtl
inc
sbb
pop
cmp
data16
pop
ss
fwait
stc
cmc
jp
xrelease
push
lock
push
stos
or
lret
xor
mov
hlt
adc
in
xchg
fcoms
xor
adc
mov
inc
push
sbb
movsl
and
pop
sub
mov
push
stc
push
cmpsb
jae
in
outsb
cmpsl
popf
cmp
insl
inc
ds
or
pop
inc
jg
lods
mov
hlt
scas
pop
inc
mov
or
sbb
pop
xchg
xor
xor
mov
push
mov
in
out
outsb
push
dec
xchg
sub
rolb
mov
push
inc
sti
xor
fdivs
dec
test
xchg
xchg
push
dec
sub
sub
sub
testl
out
add
mov
fwait
clc
jb
out
iret
xchg
je
and
dec
lods
popf
lea
cmp
int
das
dec
jnp
mul
addr16
repnz
jl
xor
je
jno
fstl
lret
mov
push
pop
out
jo
loop
les
inc
cmp
cmp
mov
pop
sbb
sbb
mov
push
mov
cmp
lcall
mov
adc
pop
xlat
or
scas
xchg
add
mov
dec
fsubl
comiss
xorb
add
dec
add
sti
aad
push
sti
imul
movsl
mov
push
pop
push
cs
out
ss
adc
js
mov
xor
mov
and
sbb
mov
xchg
ljmp
lcall
xchg
in
xor
push
sti
repz
lret
ret
and
out
jp
jge
pop
outsb
add
mov
inc
jp
xchg
outsl
outsl
mov
mov
push
ret
loop
mov
push
adc
enter
bound
mov
dec
jmp
andl
push
push
sub
sub
adc
movsb
scas
add
push
sti
mov
or
push
cmp
mov
ret
push
enter
stos
or
push
scas
adc
arpl
pop
in
push
imul
mov
lahf
outsb
pop
ret
stc
stos
das
mov
sub
stos
data16
bnd
mov
or
jb
jle
out
mov
cmpsl
fiadds
or
les
or
aam
xchg
xchg
imul
push
lods
pop
icebp
mov
adc
xor
enter
mov
push
loop
mov
dec
ficomps
mov
mov
cmpsl
jmp
imul
pop
mov
mov
sti
scas
ljmp
pop
out
dec
out
sbb
mov
dec
mov
sub
dec
andl
xchg
rorl
mov
and
addr16
ja
insl
ret
cli
jge
pop
negb
lods
cmp
push
test
jns
jne
scas
mov
stos
bound
dec
cmpsb
jae
repnz
pop
inc
push
fistpl
jl
or
push
xchg
ret
jp
pop
outsl
sahf
out
stc
enter
mov
cmp
jno
mov
rcll
dec
jle
or
test
jno
dec
sbb
pop
jle
jo
lea
rcll
imul
stc
shl
movsl
and
sti
movsl
jns
push
mov
push
dec
xor
and
mov
xchg
stos
xchg
jle
cmc
push
pop
push
sub
sbb
out
dec
out
adc
sub
push
cmp
jno
into
imul
ficoms
cli
or
loope
testb
mov
or
outsl
add
gs
push
sbb
andl
adc
mov
fwait
insb
mov
cmp
dec
cmp
add
shlb
jle
pop
jo
xchg
decl
push
aad
push
xchg
inc
inc
lods
iret
mov
jg
ds
rclb
cli
inc
xchg
mov
ret
push
mov
int
xchg
jne
mov
sbb
push
mov
jg
imul
mov
jp
stc
xor
dec
rcrl
dec
jb
mov
outsb
xchg
mov
outsl
push
ja
shlb
sub
jmp
pop
mov
out
out
enter
pop
insl
loopne
mov
xchg
and
xor
mov
repz
jge
sbb
dec
dec
mov
vmaxps
cmc
mov
mov
inc
cmp
inc
jmp
pop
ja
leave
add
jle
stos
cmpsb
mov
aam
test
ror
and
sbb
push
push
pop
mov
testl
adc
or
push
daa
inc
xchg
js
inc
xor
jne
lret
cs
pushf
in
push
push
dec
mov
lods
test
popf
push
mov
adc
push
jmp
je
mov
adc
inc
lahf
or
sub
add
leave
mov
jno
pop
jmp
jge
out
sbb
gs
mov
push
flds
out
loope
out
xor
jne
ljmp
push
cmpsb
pop
stos
push
shrl
dec
das
push
sub
push
es
add
or
movsb
les
mov
lock
repnz
or
adcl
xor
cmp
mov
adcl
into
aaa
pop
sbb
call
es
daa
outsb
leave
out
xchg
mov
shrb
pop
jle
adc
inc
lods
ja
aad
lods
testb
in
ret
fprem
pop
push
mov
mov
imul
jmp
jns
push
lret
jb
ljmp
frstor
sbb
push
jecxz
mov
enter
dec
jp
testb
inc
and
inc
jb
daa
mov
test
loopne
outsb
dec
insl
scas
jle
inc
dec
pop
pop
mov
call
and
andl
xchg
add
xor
test
sub
lods
add
adc
sbb
sub
mov
stos
jg
mov
movsl
pop
rclb
repnz
xchg
inc
pop
pop
int3
push
push
inc
das
lret
jecxz
addl
or
xlat
cmpsb
jecxz
jmp
divb
pop
pop
or
mov
push
xor
mov
stos
mov
gs
adc
mov
aas
inc
xchg
or
add
rclb
outsl
lret
insb
and
xchg
fsubs
lret
mov
dec
mov
push
jge
loop
xor
dec
xchg
mov
jl
lods
nop
jg
cmpsl
daa
std
dec
clc
mov
adc
fs
push
shll
ret
inc
call
mov
popf
xchg
sub
xorl
movsb
sub
test
es
push
lock
cltd
adc
adc
fmuls
dec
inc
ss
pop
adc
mov
movsl
in
mov
icebp
aam
in
adc
stos
pop
ficoms
push
mov
cmc
lret
pop
daa
xor
sub
pop
std
push
adc
imul
mov
cld
and
sbb
test
mov
xor
xchg
popa
movsb
pop
mov
out
fnstenv
addr16
mov
popa
mov
cld
jns
mov
arpl
push
sbb
xchg
sarb
mov
xchg
add
fxch
iret
std
xor
xor
mov
adc
enter
lea
call
rsm
add
pop
sbb
pusha
ret
dec
fcoms
cmpl
xchg
test
fstps
dec
xor
int
push
out
push
push
xchg
loop
pop
jp
out
lods
test
jb
push
jge
cmp
add
sarb
insb
cmp
jg
in
lret
rcrb
test
lea
pop
stos
inc
push
leave
mov
scas
pop
inc
jmp
or
mov
jne
sub
pop
lods
jmp
push
aam
fiaddl
lods
movsb
mov
pop
std
dec
jmp
aad
or
adc
stos
cs
and
call
je
movl
repnz
ss
xor
lds
shlb
es
inc
mov
fyl2x
rcll
test
dec
fs
dec
insb
add
popa
out
mulb
inc
cmpsb
and
xchg
jo
cmp
out
jno
mov
addr16
jne
pop
cmc
mov
add
jne
aam
and
cmp
or
cmc
cwtl
or
xor
lods
and
popw
push
test
and
jmp
xchg
sub
int
pop
clc
decb
sub
pop
lahf
sub
or
mov
out
push
leave
stos
fcoms
jecxz
out
and
xor
adc
sarb
imul
shl
into
fsubrp
add
aas
imul
jbe
and
in
ror
mov
sarl
leave
outsl
xchg
mov
and
cmp
adc
shlb
mov
iret
add
in
arpl
mov
jbe
mov
test
ret
jecxz
cli
stos
cmpsb
rcrb
jno
mov
or
cmovb
adc
dec
or
sbb
lds
test
sbb
sahf
pop
sub
inc
bound
jl
in
outsb
or
mov
dec
pusha
cli
pop
imul
pop
sbb
or
dec
cli
adc
jmp
xlat
jmp
cli
nop
mov
jo
out
xor
mov
jns
insl
cmp
add
shrb
fimull
jmp
add
int3
add
out
imulb
push
fldcw
add
jo
les
idivb
fsubrl
rorl
popf
in
mov
mov
push
or
mov
rclb
fcmove
xchg
add
outsl
adc
jnp
in
xchg
cmp
dec
scas
insl
xorb
popa
mov
xchg
jae
notb
clc
test
pop
cmp
xchg
dec
cli
mov
scas
cmc
pushf
or
mov
jp
pop
push
scas
hlt
push
stos
xor
pop
lea
stos
mov
dec
or
lea
icebp
and
xor
pusha
in
cltd
mov
lret
fists
sub
or
adc
hlt
mov
sarl
push
js
mov
js
in
inc
arpl
orl
adc
sub
out
outsl
sbbb
xchg
mov
es
lods
cmp
dec
lcall
popa
push
mov
sti
daa
pop
jecxz
or
xchg
loop
pushf
in
jne
lret
rolb
out
fwait
adc
fsubrl
jg
repnz
adc
stos
cmc
sbb
js
daa
stos
test
push
sbb
fimull
xor
fldcw
aad
stc
int3
add
sub
xchg
out
fs
out
repnz
xchg
mov
xchg
sbb
mov
and
dec
decb
push
push
or
or
lret
push
stos
cmp
or
jge
or
inc
call
in
sbb
inc
mov
inc
int3
jo
adc
faddp
add
cltd
repz
test
xchg
stos
lahf
test
js
js
iret
adc
stos
addb
repz
cmp
in
cmpsb
mov
inc
and
sbb
mov
dec
sub
data16
push
xor
fildl
pop
or
cli
add
addr16
mov
lret
add
fmuls
add
loope
call
or
jae
scas
push
aas
lods
cmp
dec
mov
outsb
jae
pop
push
scas
add
dec
pop
lret
mov
sbb
mov
jo
mov
xor
shl
push
mov
mov
cmp
xlat
mov
sub
roll
aaa
shll
xchg
mov
shrb
adc
das
pop
cmp
jecxz
xor
pop
out
insl
mov
pop
gs
aam
sbb
push
shll
test
inc
mov
fisttps
sub
adc
mov
or
fsubrl
popf
je
mov
je
imul
xchg
fadds
jecxz
out
pop
pop
xor
in
pop
imul
adc
lods
fcoms
mov
ficoml
mov
pop
fildl
adc
inc
pusha
jnp
push
scas
or
xchg
add
shlb
sub
pop
shl
stos
movsb
sbb
xchg
pop
add
fnstsw
xor
add
mov
push
scas
movsb
fnstcw
repz
sub
js
or
jo
iret
cltd
cli
jl
sbb
arpl
mov
std
or
out
out
or
std
in
add
or
loop
sbb
mov
or
shll
sub
adc
out
cmpsl
jbe
xchg
sbb
in
inc
or
fidivrs
sbb
shr
in
stos
mov
mov
enter
idivl
push
stos
jp
mov
add
and
xchg
dec
ss
xchg
fwait
sub
in
inc
add
insl
int3
xchg
fimuls
xchg
mov
push
pop
out
mov
mov
and
inc
sub
dec
stos
or
ljmp
scas
cmp
xor
sbb
loopne
ret
jb
imul
push
insb
addl
stos
mov
ss
pop
dec
jae
jno
outsb
arpl
push
outsl
nop
pop
call
loop
add
sarb
mov
cmp
lahf
fstpl
es
enter
push
and
sbb
adc
and
adc
ror
inc
jns
mov
inc
jecxz
insl
sbb
stc
sarl
inc
push
in
pop
mov
mov
andb
or
xor
jl
and
mov
pop
arpl
dec
sbb
or
retw
xor
dec
js
sbb
sahf
adc
cmp
dec
dec
inc
sub
xchg
lods
mov
popf
mov
mov
movsl
jo
fildll
mov
push
jns
les
ret
and
cld
inc
movsl
sti
dec
addr16
xchg
fnstcw
mov
rcrb
dec
inc
sbb
inc
in
jge
push
movsb
movl
adcb
adc
xor
int3
into
fwait
lds
sbb
popf
adc
fwait
decb
jle
and
es
or
andb
lds
and
lea
mov
add
test
es
call
push
xchg
int3
sbb
jp
sbbb
jge
daa
aad
inc
or
orl
mov
add
or
or
or
and
test
lret
lcall
mov
cs
pop
fbstp
dec
jno
daa
xchg
mov
test
pop
cmp
sbb
sbb
in
ret
popa
dec
jbe
cltd
and
pop
jle
popa
or
sbb
pushf
ja
rclb
bound
cwtl
pop
or
out
push
sbb
mov
cmp
loop
cmp
fnstcw
add
mov
pop
jg
cmp
mov
cltd
push
stc
cmpsl
mov
iret
mov
idivl
clc
push
int
or
mov
inc
jmp
xchg
add
pop
xchg
fstps
ret
sti
push
add
xchg
push
sbb
or
inc
or
icebp
fcmove
mov
fstpt
dec
jb
fwait
arpl
push
movl
fimull
jl
subl
push
push
movsl
stc
pop
mov
xchg
aam
mov
sub
inc
push
and
mov
push
or
xor
bound
sahf
push
rorb
push
iret
fistl
and
into
fidivrl
push
std
in
jnp
daa
mov
xchg
sub
out
lahf
clc
jl
xchg
jmp
xchg
xchg
pop
punpckhwd
dec
fdivl
in
xor
ret
test
es
xchg
mov
xchg
xlat
icebp
pop
dec
js
fstpt
jno
mov
lea
or
jne
stc
movsl
std
inc
gs
test
adc
mov
pop
arpl
imul
int
inc
cwtl
rcr
mov
mov
cmp
cltd
pop
repnz
out
and
or
mov
lea
mov
push
push
and
es
sar
fisubs
les
lret
mov
fisttpll
popf
cmp
iret
or
sub
mov
sbb
mov
sbbb
cwtl
lahf
iret
jle
scas
or
adc
adc
jo
mov
jne
cmovno
and
stos
xchg
std
mov
lods
fwait
ret
xor
shrl
mov
dec
dec
mov
xor
inc
cli
or
adc
inc
mulb
btsl
and
push
push
mov
mov
cmp
pop
je
add
or
jg
fcmovnu
enter
xor
add
ficomps
mov
sbb
sub
jae
out
pop
imull
sbb
mov
mov
mov
into
mov
into
or
clc
loop
jmp
push
fs
ja
fisttps
pop
jl
lret
mov
aas
stos
pop
cltd
loopne
push
pop
jbe
in
push
cmp
add
xchg
jle
out
xchg
dec
out
into
arpl
inc
mov
jp
ret
maxps
idiv
test
test
fisubs
or
mov
push
std
loop
mov
shll
pop
sub
int
pushf
mov
inc
ret
xor
leave
adc
sarb
out
jno
xor
rclb
mov
fisubl
sbb
push
movsl
mov
and
xchg
sbb
pop
fadds
movsb
enter
ds
call
rorl
insb
pop
and
sbbl
sbb
pop
rcrl
bswap
xor
xchg
es
es
xchg
sub
icebp
cmp
mov
push
loopne
mov
pop
push
mov
add
insb
out
fcoms
lock
or
leave
add
cmp
and
sub
push
popa
aas
aaa
std
out
cmp
add
imul
adc
fs
xchg
mov
sub
enter
test
les
or
mov
sahf
in
xchg
pop
arpl
bound
repz
pusha
mov
aad
and
popa
fs
jo
jecxz
das
jno
jne
or
loop
je
cmp
insb
adc
push
cmp
sub
movsl
add
addr16
pop
mov
fiadds
cmc
fsts
inc
mov
sub
outsb
and
sub
cmpsb
or
push
mov
pop
fwait
xor
js
nop
sahf
loope
xchg
mov
dec
mov
jnp
int3
data16
das
int3
pop
xchg
loopne
mov
mov
std
cmp
push
add
ja
xor
in
lods
pop
mov
rorl
sub
lret
imul
adc
jb
xor
lahf
jp
push
lcall
int
sbb
leave
fs
jg
jp
cmpsb
jmp
add
sbb
mov
xor
jmp
ljmp
dec
lods
xorl
pop
cltd
std
cs
sbb
sub
or
rcr
ja
in
lods
ja
adc
aaa
rol
imul
sub
int
daa
ficoms
pop
ret
lret
lret
push
lds
fucomp
cltd
test
aam
push
mov
les
repz
inc
mov
loop
dec
jo
or
movsb
dec
mov
ljmp
movsl
enter
aas
loop
mov
pop
fs
jl
aas
incl
fstpt
xchg
jb
outsl
arpl
shl
enter
sub
fistl
jmp
aas
ljmp
je
outsl
pop
mov
inc
shrl
test
into
inc
popf
insb
test
push
jbe
push
arpl
movsl
sub
lds
pop
stos
cltd
fbld
mov
or
sbb
shll
push
int
repz
or
loopne
mov
in
loopne
shll
cs
fsubrs
sub
aaa
rcll
fdivs
out
xchg
popf
fwait
mov
daa
subl
or
out
stos
in
arpl
push
addr16
pushf
scas
xlat
cld
inc
pop
pop
sub
xchg
pop
cmp
sbb
pop
scas
ds
sub
cwtl
into
ret
aas
xor
scas
cltd
and
ds
gs
mov
iret
subps
cli
push
pop
cmc
mov
pop
mov
stos
pusha
ja
ret
repnz
xchg
xlat
jne
xchg
aad
and
pop
test
and
push
and
push
jp
cmpsb
iret
sub
mov
enter
rcrl
dec
and
loope
mov
js
lds
clc
dec
adc
mov
fldl2t
adc
in
inc
dec
adc
divb
in
aaa
dec
adc
gs
pop
dec
jns
pusha
movsl
insb
in
push
test
pop
mov
xor
ds
mov
mov
lds
cmp
jmp
jnp
sbb
sub
mov
fisttpll
xchg
and
xchg
lods
lret
pushf
in
mov
imul
pop
nop
fildll
xchg
and
popf
mov
xor
lcall
lcall
fiadds
lock
in
in
push
or
jmp
pop
mov
inc
js
pop
push
jae
pop
push
out
sub
bound
cmp
cltd
in
xor
inc
imul
lahf
jo
mov
rcrl
leave
or
and
pop
xchg
mov
cwtl
push
js
mov
scas
inc
clc
repz
out
test
mov
cmp
mov
cmp
or
cwtl
jo
xchg
mov
inc
add
sti
inc
in
clc
pop
cmp
jnp
adc
daa
fs
lahf
int3
shl
jl
out
jecxz
mov
cs
xlat
inc
lret
and
sub
movsl
fiaddl
test
arpl
nop
push
in
clc
ja
mov
xchg
faddl
push
or
fmull
fldenv
insl
mov
je
mov
frstor
fisttpll
inc
fwait
add
mov
pop
mov
test
xor
cmc
adc
mov
sbb
in
push
mov
in
pushf
loope
pop
sbb
testb
push
fmuls
adc
es
ja
lcall
das
mov
imul
leave
inc
jg
cwtl
daa
jecxz
lahf
or
pop
mov
inc
loop
cmc
jecxz
repnz
xor
gs
imul
mov
jl
push
test
push
adcl
adc
xchg
pop
sahf
aam
push
repnz
cmpsb
ret
imul
pop
xor
ds
mov
aad
mov
or
push
divb
lret
jecxz
lret
mov
xor
andl
push
rorb
stc
mov
cmp
cmpsl
mov
add
shl
in
mov
jb
push
lahf
jecxz
sub
out
jecxz
ja
add
test
jne
sub
mov
flds
test
and
adc
pop
mov
mov
sti
cmp
adc
xchg
pop
sbb
fwait
cmp
aaa
sbb
cltd
mov
sub
aad
adc
popa
mov
mov
je
leave
jno
or
jecxz
sub
pop
inc
sbb
add
add
and
mov
sub
mov
shll
es
add
pop
mov
in
fimull
inc
and
cmpsb
mov
pop
stc
pusha
push
or
jmp
xchg
in
mov
outsb
mov
pop
pop
sub
sub
xor
xchg
push
mov
repz
jne
and
sbb
xor
jl
sbb
lcall
out
in
xchg
xchg
mov
jnp
jle
xchg
cmp
scas
insb
incl
dec
xchg
mov
stc
leave
xchg
and
out
xlat
and
out
mov
pop
mov
mov
jle
sub
mov
icebp
sub
inc
pop
and
jecxz
aam
insb
insl
dec
sarb
js
lea
add
mov
pop
push
add
pmuludq
adc
push
and
movsl
sti
jb
leave
pop
fcomip
in
mov
mov
push
dec
add
movsl
rcl
jbe
and
mov
adc
int
mov
rcrl
mov
jg
push
mov
das
sub
mov
rorb
mov
inc
incb
jmp
pop
xorb
cmpsl
gs
dec
notb
scas
xchg
cli
sub
xchg
shll
xchg
jns
or
xchg
mov
inc
lea
int
adc
mov
mov
mov
xchg
pop
sbb
pop
sub
sbb
jno
xor
pop
cmp
mov
in
ficoms
jne
mov
loopne
mov
push
mov
dec
les
sbb
shr
in
dec
mov
lret
cmp
cmc
test
mov
enter
add
sub
insb
pop
add
fs
outsw
out
push
pop
in
daa
adc
or
hlt
push
push
mov
jp
xchg
popf
es
test
fisubs
sti
add
jno
sbb
or
loop
into
fidivs
call
nop
dec
jbe
add
mov
outsl
mov
mov
jns
mov
dec
pop
sub
scas
add
into
push
xchg
and
xchg
data16
jb
dec
addl
sahf
mov
pop
in
ja
out
xlat
add
ror
into
mov
in
add
and
push
inc
and
xor
iret
test
lods
dec
pop
mov
inc
sbb
add
insl
mov
jmp
mov
bswap
aad
sub
sti
push
push
jle
or
rcll
gs
add
inc
adc
cmp
mov
js
lock
sbb
sbb
jp
cmpsl
pop
jecxz
addr16
cmpsb
aad
inc
dec
addr16
enter
pop
fcmovnb
adc
gs
dec
loope
add
pop
push
loope
sub
les
lahf
stc
add
fnsave
out
xlat
xchg
sbb
xor
mov
sub
or
inc
int
mov
mov
or
and
insl
sub
jbe
xchg
xchg
daa
hlt
call
mov
jp
or
fidivrl
add
lahf
sub
xor
cs
and
add
loopne
pop
push
les
xlat
xchg
lcall
cmp
push
je
mov
dec
add
ja
hlt
mov
sub
jle
hlt
push
sbb
cmp
jecxz
cltd
sbb
adc
mov
lret
in
mov
pop
daa
nopl
mov
inc
dec
adc
mov
int
aad
xchg
stos
adc
push
inc
test
sub
aad
repnz
pusha
mov
lret
inc
data16
stos
cmp
and
out
mov
xchg
xchg
or
in
aad
daa
adc
fstpl
sub
push
xchg
hlt
push
in
xchg
cmp
jp
aas
shrb
dec
cmp
lods
arpl
xchg
out
jae
inc
lret
lcall
jnp
repnz
dec
ret
pushf
stos
mulb
mov
pusha
pop
shl
enter
mov
inc
js
or
xchg
xlat
mov
push
dec
es
and
mov
adc
out
sbbb
push
ljmp
dec
mov
adc
and
and
or
sub
xorl
jle
imul
sbb
test
clc
sbb
out
in
push
jge
push
jns
std
scas
loop
jp
test
loope
test
scas
adc
sarb
mov
cwtl
mov
repnz
popf
leave
int
xchg
rcll
pop
push
add
inc
add
ljmp
xchg
xchg
data16
lea
jmp
aaa
addr16
jo
lret
outsl
les
loope
adc
sbb
js
fucomi
sub
mov
sub
movsl
push
std
jecxz
adc
nop
cmp
dec
adc
add
xchg
pop
xchg
arpl
push
scas
push
jmp
jmp
std
xor
push
int
or
adc
sbb
xchg
ficoml
test
mull
jmp
inc
xor
out
mov
fsubs
pusha
adc
adc
popa
lret
add
stos
aaa
mov
push
loope
into
fistpl
and
xchg
ret
cmp
sub
imul
mov
cs
enter
adc
xor
add
outsb
out
mov
outsb
or
call
cmp
ret
mov
add
in
loope
pop
dec
xchg
gs
push
jg
shll
adc
dec
stos
icebp
inc
loopne
sarl
in
icebp
jnp
xorl
andb
or
aam
mov
jnp
xor
scas
out
fldt
adcb
in
in
adc
mov
lock
and
xor
sbb
add
dec
iret
add
fs
or
dec
fmull
or
enter
inc
add
dec
add
push
into
mov
mov
sbb
dec
insb
repnz
lahf
inc
adc
sub
fs
push
or
lcall
jnp
sbb
jns
test
push
imull
insb
rcrl
sub
xchg
scas
and
mov
mov
aam
adc
xchg
add
cli
fcompl
aas
insb
int3
inc
sarb
mov
fnsave
push
int
xchg
ja
inc
movsb
xor
pop
adc
iret
jbe
rcrb
stos
lods
push
cmp
mov
test
cmpsb
aad
outsb
aas
outsl
adc
jg
movsb
jp
daa
and
popl
cs
data16
sbb
nop
jp
pop
push
clc
movsb
lods
mov
ds
sbb
and
das
and
cmpsl
cs
lret
enter
mov
pop
out
clc
or
mov
repz
fdivrl
or
fcomip
mov
into
xlat
inc
cmpsl
push
adc
shlb
in
adc
sbb
in
stos
lahf
movsb
xchg
aaa
adc
call
loope
dec
dec
sub
arpl
sbb
sarb
mov
or
loopne
jo
sub
inc
psubb
out
sbb
mov
aas
pop
fcompl
add
ss
adc
and
and
mov
fdivl
xchg
dec
inc
pop
xorb
ja
jno
sbb
test
pushl
cmpsb
loopne
test
shll
add
and
push
xchg
mov
jbe
hlt
into
jmp
mov
xchg
pop
mov
cmp
xchg
negb
push
insl
rcrb
inc
sbb
iret
repz
xor
xor
aad
scas
negl
test
pushl
mov
push
mov
sub
or
lret
mov
repnz
testl
jle
rcl
sub
mov
dec
mov
and
xor
add
xchg
mov
ljmp
mov
add
add
lret
or
ss
fbld
pop
or
mov
fs
mov
cs
mov
xor
mov
adc
and
call
aam
sub
int3
mov
call
fs
fcomi
je
jae
push
loope
add
push
roll
fstl
shll
leave
xor
rep
jbe
sub
mov
mov
dec
cmp
jl
pop
mov
jb
add
mov
xchg
loopne
mov
imul
push
in
pop
mov
sub
sbb
cmpsb
inc
ljmp
dec
sbb
inc
mov
inc
jne
orb
xchg
repz
inc
mov
sub
adc
into
fstl
sub
shrb
push
xchg
sub
rcrl
xchg
dec
sar
js
lea
inc
fadd
or
mov
inc
dec
out
pushf
imul
xchg
in
pop
push
testb
add
mov
shrl
adc
xchg
mov
mov
ficomps
fcmovu
nop
jp
push
and
push
out
mov
sbb
xchg
icebp
sti
lahf
int3
ret
dec
fwait
iret
call
sub
mov
fsubs
leave
lea
and
hlt
push
jnp
add
pusha
outsb
ds
mov
lea
inc
je
mov
movsl
stos
sbb
xor
dec
sbb
out
mov
add
inc
adcl
cmp
testb
daa
mov
gs
pop
fstpt
into
mov
add
mov
cmp
pushf
cmc
pop
in
mov
addr16
cld
xor
or
jbe
jbe
rolb
push
cs
rolb
pop
mov
imul
loop
ret
adc
shlb
inc
dec
jp
sub
mov
in
push
in
xchg
push
pop
inc
jle
jno
popf
push
pop
call
and
pop
cmpsb
out
jbe
add
test
xchg
call
inc
mov
jecxz
out
jmp
popf
int3
imul
dec
mov
je
out
mov
xor
outsl
stos
pop
roll
push
push
into
inc
addr16
stos
add
jle
jp
shl
add
cmp
lods
mov
gs
lahf
rcrl
out
nop
rcrl
jl
pop
movsl
scas
lahf
xchg
sbb
sbb
test
sbb
or
repnz
sbb
inc
or
loope
push
add
jbe
jnp
pop
xlat
push
imul
jmp
aam
adcb
jae
jmp
mov
cltd
int3
les
loope
mov
cld
push
out
arpl
test
pop
push
rorb
popf
cmp
ljmp
into
movsl
and
movsb
jge
shrl
cmp
sbb
out
pop
orb
push
xchg
and
xchg
or
push
sbb
mov
jge
cwtl
mov
sub
mov
roll
cwtl
fisubl
sub
jno
scas
sbb
add
imul
nop
jo
dec
inc
dec
out
call
fisubl
xor
ds
and
bound
cmpsl
add
and
xchg
jmp
push
pop
aas
pop
dec
sub
lahf
les
inc
call
jmp
into
jl
sarl
lods
xchg
test
inc
or
xchg
and
pusha
lock
adc
lock
inc
cmp
inc
jo
push
or
lret
addr16
push
jne
sahf
out
cmp
testl
gs
mov
cmp
xor
xlat
in
in
xchg
xchg
les
fwait
mov
sub
lahf
pop
out
mov
jae
sbb
jne
mov
sbb
loopne
cli
insb
jg
jmp
cmp
mov
push
pushf
push
mov
push
sbb
dec
aad
mov
je
pop
fs
xchg
dec
fwait
xchg
xchg
inc
scas
repz
cmp
mov
test
xchg
xorl
ja
js
ja
xor
jae
lcall
add
jmp
js
cmc
push
loopne
sahf
nop
in
mov
mov
jb
les
scas
push
jb
dec
repnz
adc
addr16
jno
cmc
or
rol
cs
cmp
lds
cwtl
ret
xorb
out
xchg
dec
sub
add
adc
sub
jge
and
stos
or
sti
in
add
mov
addb
data16
dec
dec
movsb
ljmp
rcl
sub
nop
xchg
xchg
push
imul
icebp
lock
mov
sbb
sbb
aaa
ss
sbb
loopne
sbb
sbb
mov
sub
fsts
jbe
add
mov
dec
pushf
icebp
sbb
mov
les
clc
mov
mov
rep
popa
aad
test
jmp
das
sahf
cmp
int
dec
jmp
lods
mov
ljmp
insb
ficoms
jns
outsl
or
adc
sti
test
sub
cmp
sbb
aaa
jno
xor
div
pop
jo
inc
push
cld
dec
adc
movsl
jne
imul
add
nop
stc
cmc
ja
es
insl
jg
sub
test
call
xchg
jmp
mov
mov
inc
std
cmpsb
inc
push
fsts
pop
pop
push
adc
test
outsb
sbb
gs
mov
sub
pop
clc
and
dec
push
sub
or
cld
aas
scas
push
js
sti
sub
insl
mov
cltd
inc
pop
mov
cwtl
mov
lea
adc
int
ds
in
sbb
stc
xor
out
push
pop
sub
mov
push
pop
gs
push
inc
test
dec
out
xchg
lcall
rcrl
insl
adc
xor
das
fwait
aaa
sbb
dec
nop
sub
mov
gs
and
iret
ds
out
xchg
mov
jl
xchg
je
insl
inc
push
mov
xlat
out
xchg
rorb
out
movsl
fisttps
xor
in
inc
out
mov
cs
cltd
lret
roll
jle
ljmp
in
inc
clc
or
adc
pop
jg
add
xor
out
jecxz
xor
out
stos
xor
add
xchg
sub
out
pop
out
sbb
xchg
cs
add
mov
loopne
adc
out
push
push
inc
mov
hlt
push
sarb
into
notb
jg
cmpsb
push
shrb
mov
icebp
outsl
cmp
dec
clc
jp
xchg
or
pop
pop
and
das
fxch
lret
xchg
xchg
rolb
mov
sub
arpl
xorb
inc
push
jmp
data16
push
mov
leave
icebp
or
icebp
idivb
or
imul
movsb
mov
arpl
rcll
mov
in
lods
jns
lock
jg
enter
push
fldl
push
lock
dec
scas
lret
mov
je
out
add
dec
sub
cmpsl
loopne
jge
or
add
fldenv
dec
inc
pop
dec
repnz
fs
ret
inc
adcb
xor
outsl
mov
gs
filds
fimuls
daa
repnz
inc
inc
outsb
adc
lock
rol
add
movsb
pop
sub
stos
lods
fimull
out
scas
cmp
in
in
test
jne
add
mov
cmpsb
popf
int
fwait
and
pop
in
xchg
hlt
mov
and
xor
imul
inc
mov
in
ja
stc
add
aam
imul
hlt
sti
test
pop
shrb
imull
jns
stos
or
loopne
jbe
cmp
pop
fwait
sbb
or
mov
aaa
dec
mov
fdivrl
pop
int3
pop
add
dec
mov
sbb
ja
stos
or
jnp
and
xchg
test
and
cmp
cli
scas
xlat
pop
es
or
xchg
xchg
mov
and
xchg
inc
fists
xchg
push
xor
push
add
xor
xor
rorb
stc
push
sbb
cmp
loop
addr16
or
adc
cld
sub
stc
std
mov
jg
sub
ljmp
and
in
das
out
and
sahf
mull
cli
popa
ficoml
data16
pushf
mov
xor
cmp
scas
inc
je
es
jle
xchg
xchg
aaa
adc
stc
push
pminsw
insl
push
mov
cmp
mov
sti
mov
pop
movups
into
pop
push
rolb
lret
cmp
out
test
push
pop
in
mov
or
mov
xchg
test
inc
mov
push
mov
leave
insb
push
test
stos
push
dec
int
pusha
shlb
notb
mov
jb
push
jle
add
sub
loopne
pop
push
xchg
dec
test
loopne
add
movsl
push
and
pop
cmp
xor
push
dec
xchg
ljmp
ds
pop
stos
mov
loop
push
xchg
mov
ja
call
push
dec
pop
arpl
lods
or
jne
adcl
xchg
pop
cltd
push
call
mov
mov
sub
pop
push
shrl
popf
adc
xor
sub
clc
idiv
addr16
stos
lret
xchg
movsl
pop
sahf
or
js
dec
ss
xor
pop
roll
outsb
mov
pusha
adc
add
in
inc
xchg
mov
xor
mov
icebp
int
inc
and
or
xchg
push
mov
shlb
dec
mov
jnp
jp
dec
dec
and
loopne
insl
dec
and
xor
pusha
testl
dec
and
adc
test
addr16
call
cwtl
into
pop
jl
sub
fisubrs
sahf
ja
lcall
imul
out
sub
pop
stos
scas
int
add
jae
into
cmpsb
inc
in
decl
lcall
es
in
sbb
scas
jns
push
inc
inc
xchg
mov
test
ret
pop
xchg
cmp
pop
jg
shlb
ja
push
sar
out
fwait
add
aad
or
xor
pusha
mov
pop
push
and
es
movsb
and
cld
mov
mov
aad
pop
aam
jns
adc
aas
lret
xchg
lretw
icebp
push
ljmp
mov
sub
fcompl
movsbl
in
xchg
or
xchg
xor
les
and
test
popf
mov
out
shlb
adc
lea
or
pop
dec
dec
das
icebp
movsb
dec
fisttpl
rolb
inc
stos
movsb
sub
jnp
xor
cmpb
shlb
cmp
pop
or
js
loope,pn
jno
lods
pop
mov
clc
mov
sti
mov
mov
arpl
pushf
clc
mov
mov
enter
adc
loopne
pop
filds
mov
cmp
mov
inc
mull
xchg
xlat
cmc
insl
dec
push
push
in
jle
xor
mov
fs
aad
cmp
repz
lods
ja
dec
lds
loopne
icebp
clc
cmp
mov
std
dec
and
sbbl
push
test
imulb
adc
vmovups
jne
shl
add
mov
test
ret
fnstcw
mov
pop
xchg
faddl
shrl
pop
cmp
insb
xchg
and
push
adc
pusha
cmp
xchg
mov
negl
add
stos
and
push
mov
les
or
movsb
cmpsl
ss
cmpsl
in
call
jp
fldcw
add
mov
mov
xchg
lcall
insl
imul
ss
and
aam
adc
cmp
cmp
sub
in
push
and
lods
andb
outsb
pop
mov
call
ds
jbe
les
jne
xchg
nop
movsl
cmpsb
adc
push
aad
mov
adc
dec
cmp
lock
push
loopne
dec
mov
lahf
jo
and
xchg
insl
fstp
sub
out
pop
pop
mov
mov
xchg
js
insb
adc
sbb
xor
mov
loop
dec
lock
lds
push
mov
pop
pop
jb
jb
cld
push
sub
sub
xchg
bnd
sbb
push
mov
mov
jle
push
mov
pop
push
mov
cld
test
push
lds
push
jle
lock
fdivrs
mov
push
lcall
mov
enter
mov
xchg
xchg
rcll
lea
mov
push
and
xor
scas
mov
cmp
adc
popa
cltd
xorb
pop
mov
xlat
fsubrp
inc
stc
out
inc
rcrl
sub
xchg
adc
cmp
pop
jne
mov
dec
imul
jb
xor
lock
imul
xlat
mov
pop
xchg
sti
stc
rorl
cmp
mov
daa
jl
push
ja
dec
xchg
lock
jo
pop
dec
lds
adc
mov
repnz
movsl
or
mov
lret
or
push
adc
and
cmp
jno
mov
add
in
xor
mov
xchg
lods
aas
rol
jno
pop
addr16
or
mov
fists
pop
mov
or
jo
test
jg,pn
dec
dec
lock
push
or
insl
mov
movsl
imul
in
add
lea
sbb
jns
mov
cli
push
adc
hlt
cmp
test
dec
xor
add
les
push
int3
push
and
daa
int
aas
dec
sub
lahf
fstps
pop
or
xor
lods
inc
push
mov
mov
xchg
js
sub
or
cmpsb
mov
cmp
hlt
xchg
lea
dec
arpl
cwtl
push
stc
jg
shlb
push
test
pop
dec
outsl
inc
stos
mov
mov
and
popf
sbb
jno
sti
cld
push
ficoms
push
pop
jns
sub
or
xchg
add
jo
push
imul
ret
xchg
rcrl
mov
sbb
jnp
in
in
sar
es
jne
adcb
fwait
lahf
dec
lret
into
fsubs
rcr
addr16
lds
mov
movsb
rcll
jge
mov
in
dec
negb
rcl
addl
sti
pop
sarl
and
inc
ret
addb
stos
cld
shll
loop
outsb
and
mov
jne
mov
call
pop
push
mov
mov
ficomps
fisubl
cs
in
mov
push
loope
loope
push
and
dec
push
stos
cmp
gs
mov
dec
leave
lods
scas
pop
out
jae
inc
and
xchg
movsl
or
xchg
stc
add
rolb
xchg
icebp
adc
or
outsl
fcompl
sub
pushf
cmpsb
jnp
rorb
fs
xchg
add
popa
std
push
pop
into
xchg
mov
arpl
ja
cmp
dec
adc
mov
or
adc
arpl
cld
arpl
inc
xchg
cltd
push
ret
mov
xchg
pop
test
shl
dec
ret
ja
cli
mov
jns
pop
stc
add
sti
cli
aad
cltd
xchg
js
jg
das
mov
mull
sbbl
sbb
push
and
add
movsb
sbb
inc
push
sub
cmp
gs
xchg
and
cmpsl
dec
pusha
test
es
cld
stc
icebp
arpl
movb
mov
fisubrs
lret
cmpsb
popf
loope
cmpsl
scas
test
pop
jne
push
movsb
insb
mov
adc
lret
sub
lret
insl
sti
jecxz
mov
push
in
sbb
mov
loop
dec
or
int3
sub
jl
jne
mov
sbb
ljmp
or
imul
loop
mov
fiadds
jmp
jnp
rcll
mov
push
and
jge
and
jne
mov
inc
jmp
push
push
mov
dec
fsub
in
pop
mov
shr
jne
lea
jb
vmread
add
sub
xchg
movsb
test
aaa
cmp
jl
in
pusha
pop
das
mov
mov
xchg
lock
aaa
cmp
xor
loopne
xchg
jmp
je
stc
xchg
ss
adc
inc
movsl
mov
pushf
ds
mov
rcll
les
clc
clc
repnz
add
sbb
aam
pop
xchg
push
push
or
dec
mov
pop
pop
push
xor
pushl
mov
lods
xor
push
lret
dec
mov
push
jae
sbb
cmpsb
arpl
pop
call
inc
mov
pusha
xchg
cld
mov
cmpsl
aam
clc
add
mov
stc
das
pusha
shlb
inc
dec
ror
fildll
xor
sbb
dec
cmpsb
pop
lahf
mov
pop
aas
adc
clc
ret
dec
add
push
sahf
adc
out
mov
mov
enter
inc
add
insb
add
sbb
pop
jge
push
cmp
xchg
lret
shr
mov
test
fwait
fs
in
mov
xor
add
lret
mov
decb
inc
popa
mov
cmp
pop
xor
adc
push
mov
cwtl
cmp
inc
xchg
inc
popf
aas
mov
mov
jns
pop
xchg
repnz
cld
loope
out
stos
inc
jecxz
cmp
bound
movswl
rorl
pop
lods
push
test
xchg
dec
adc
mov
test
cmpsb
test
push
add
xchg
push
adc
insl
pop
xlat
call
enter
je
addr16
sub
add
rorb
adc
ja
mov
inc
loope
jmp
add
inc
inc
lcall
mov
adc
decb
and
ret
cmp
mov
in
jns
push
lret
push
sub
pop
sbb
js
fwait
jo
aam
xchg
cmp
inc
push
mov
or
scas
repnz
xchg
xor
jle
out
fsubrs
stc
ja
out
repnz
sub
mov
dec
push
mov
add
xchg
cmpsb
jl
xor
imul
pop
outsb
test
imul
jg
in
sti
sub
aad
xor
sub
xchg
and
mov
xlat
arpl
test
sahf
cs
push
and
fldcw
iret
cld
mov
add
movsb
cmp
and
cwtl
fcomps
mov
xchg
jl
add
jnp
mov
test
sub
lahf
xchg
iret
inc
pop
mov
xor
jle
fiadds
popa
stos
fldt
pop
push
lock
gs
cmp
cmp
mov
pop
cmp
fnstenv
cmp
cmc
js
pop
mov
sbb
inc
popf
rorl
jno
in
test
cmpsb
repnz
sti
leave
jg
sti
pop
push
loopne
xchg
jp
push
jns
push
andb
mov
cmp
outsb
cmp
pop
outsb
ja
or
dec
jmp
lret
enter
subl
ret
outsb
movq
dec
add
loop
repnz
mov
pop
pop
rorb
aam
mov
lret
pop
dec
fstpt
outsb
loopne
out
dec
jno
cmp
shrl
pop
xchg
push
dec
xor
lock
dec
ljmp
or
or
mov
mov
xor
sub
dec
lcall
inc
fstps
pop
int
adc
cmc
aas
es
cmc
loop
mov
dec
loope
mov
mov
test
icebp
xlat
xor
jmp
clc
cld
lretw
push
or
mov
cmp
pop
adc
inc
cmp
adc
cmp
sub
mov
xchg
hlt
push
xchg
xchg
test
mov
xchg
cmp
push
mov
mov
shlb
sarl
iret
cmc
sbb
inc
dec
xor
fcomp
adc
adc
es
jnp
sub
sub
mul
and
pop
mov
and
push
sbb
inc
aad
cmp
mov
aas
lea
jb
hlt
pushf
call
jge
lea
sbb
mov
dec
xor
in
idivb
int
jmp
imul
sub
repz
js
sub
xchg
push
jecxz
stos
fscale
sti
test
cmp
pop
add
ficoms
out
iret
adc
jmp
popf
jmp
movsb
jp
xchg
mov
cmc
push
and
mov
xchg
pop
testb
in
fs
cwtl
pop
adc
ret
push
lret
sbb
push
and
and
mov
rclb
stos
cmp
pop
xchg
adc
mov
bound
out
xchg
lds
cs
and
ss
outsb
xor
pop
pusha
loop
adcb
and
xchg
cwtl
out
mov
sub
push
cs
push
dec
adc
lods
inc
out
test
sti
jmp
push
sub
loope
jl
jl
inc
push
cltd
lret
jns
push
mov
jae
in
jns
mov
mov
cmp
cmc
and
dec
xchg
add
fists
cld
mov
andb
mov
ffree
and
lahf
notl
add
mov
dec
cmp
mov
mov
xor
mov
and
sbbb
dec
addr16
lods
sbb
imul
inc
out
ja
lods
clc
in
addr16
cmpsb
dec
std
cwtl
sbb
enter
imul
sbb
mov
push
mov
xchg
cmp
ljmp
push
js
pop
loope
pop
cmpsl
icebp
sub
inc
shlb
mov
adcb
test
dec
fs
pop
mov
movsl
mov
repz
push
mov
xchg
inc
push
shll
sbb
shlb
xor
jno
rcl
hlt
std
lods
outsb
inc
sub
fs
in
mov
dec
xor
inc
out
adc
mov
mov
rorb
mov
cmp
mov
lret
sahf
cwtl
test
insb
pop
hlt
add
fnsave
cmp
movsl
mov
scas
inc
mov
lea
jnp
sbb
pop
or
add
in
inc
and
dec
int
cmpsb
mov
xor
cmp
pop
arpl
rclb
and
jp
adc
push
sbb
pusha
xor
jg
jmp
dec
pop
enter
ret
mov
push
outsl
inc
push
push
jl
out
das
stc
jle
mov
enter
mov
les
xor
int
jnp
cmc
insl
out
lea
pop
int
daa
xor
adc
pop
and
jg
orb
dec
sbb
add
roll
jp
sbb
push
call
xchg
lods
lcall
xor
lea
mov
mov
jecxz,pt
int3
jle
inc
aas
daa
mov
cltd
pop
mov
insb
aam
mov
test
popl
fld
std
in
sub
addr16
mov
sub
gs
add
out
out
into
xor
test
or
shll
jg
stos
mov
inc
in
into
sub
and
outsl
rcrl
inc
sbb
imul
push
ja
sbb
jbe
fstl
dec
xor
add
mov
push
push
adc
lock
jnp
inc
int
fdiv
push
daa
repnz
inc
or
movsl
sub
sbb
mov
jnp
int3
sbb
jl
xchg
push
imulb
daa
stos
clc
jns
fsubrs
sub
das
fwait
xor
cli
test
sub
imul
in
pushf
inc
mov
shrb
ret
mov
clc
sar
add
mov
xchg
sub
mov
es
adc
movsl
adc
inc
or
xchg
mov
loop
repz
jbe
subb
aad
in
aad
inc
inc
xchg
sub
cmp
jl
jg
jo
daa
outsb
xchg
jg
pop
or
mov
aad
inc
in
ret
xchg
jle
dec
mov
lds
movsl
imul
xor
jne
xchg
out
sbb
fmull
pop
add
int3
lods
mov
shrb
popl
fsts
and
pusha
and
or
in
dec
push
push
xchg
adc
call
gs
bound
leave
dec
out
sub
repnz
and
pop
insl
dec
jge
and
inc
dec
or
push
hlt
pop
mov
je
and
jne
insb
arpl
pop
fisttps
mov
daa
lret
data16
stos
mov
fsubrp
mov
jl
add
in
mov
mov
xchg
jmp
mov
dec
and
lcall
stc
mov
and
mov
adcl
fildl
imul
pop
lahf
call
jp
rcrl
or
pop
mov
mov
jecxz
cmc
jb
xchg
mov
rcrl
stos
dec
int
add
test
sahf
xchg
cmpsb
push
push
imull
addr16
inc
pop
sbb
pop
pop
bnd
shrb
rcl
jp
mov
insb
add
mov
aam
adc
subb
in
loopne
sub
xlat
rcl
xchg
imull
jp
push
ret
dec
sbb
inc
lcall
and
or
or
xchg
andl
pusha
pop
cli
mov
lods
jge
cmp
clc
inc
push
jbe
imul
outsl
lret
cmp
lea
mov
xchg
in
xchg
or
subl
mov
inc
push
cmpsb
sub
sub
lcall
fldenv
or
pop
cmp
add
scas
out
xchg
enter
push
jo
mov
stos
or
pushf
lret
inc
xor
repnz
xchg
scas
pop
pop
sbb
fstpt
nop
sub
in
jge
jge
jnp
xor
sbb
sarb
out
in
in
xor
jmp
sbbl
imul
stos
pop
loop
mov
dec
js
mov
mov
shll
lods
and
gs
insl
pop
and
icebp
cmp
jge
lret
add
mov
movd
jbe
out
rcrb
outsb
push
inc
into
dec
test
gs
decl
std
imulb
nop
jne
dec
and
cmp
add
sbb
int
js
cmp
sbb
and
jae
fsubrl
dec
mov
popa
sbb
stc
out
sub
xor
dec
testl
pushf
arpl
out
ret
mov
ds
dec
les
pop
and
inc
arpl
cmp
xchg
inc
pop
sub
jne
xlat
lret
hlt
dec
jae
adc
jbe
aas
inc
inc
mov
cmp
roll
fwait
hlt
scas
rorb
fs
dec
cmc
sub
mov
jno
test
cmpsb
fistps
subl
popa
daa
dec
jmp
xchg
inc
dec
mov
aam
push
xlat
cmp
inc
add
add
ds
movsb
out
call
loop
dec
push
js
in
mov
push
push
addr16
jl,pn
adc
xor
jo
xchg
mov
cmp
clc
adc
adc
test
out
pop
call
mov
enter
cltd
mov
xchg
test
arpl
movsb
push
or
or
push
xor
add
fcmovnu
enter
mov
inc
rorb
inc
cmp
es
mov
mov
iret
popf
mull
test
aad
jno
fildll
ret
ljmp
lods
movsb
push
add
ret
mov
sbb
add
cmpsb
ret
test
lock
out
mov
cmpb
add
xor
lods
test
ds
and
movsl
cltd
sbb
sub
sbb
push
jge
pop
ret
xchg
in
pop
sub
cmp
cmp
mov
mov
shrl
sbb
inc
fildl
and
pop
cmc
dec
mov
xor
jmp
data16
into
mov
inc
rolb
cmpsl
xor
mov
push
sub
xor
mov
sbb
jno
sub
xor
fnstcw
sbb
and
lock
addr16
iret
add
out
imul
jecxz
shr
inc
cmp
arpl
daa
sarl
bound
lds
leave
pop
addr16
xchg
xor
or
xlat
pushf
mov
push
and
fistps
daa
cmp
mov
push
cmpsb
out
add
fldl
mov
fcos
cli
sub
mov
dec
add
stc
pop
push
and
push
mov
or
testl
sbb
ja
mov
movsb
std
mov
adc
ja
cmp
mov
cmpsl
addr16
dec
fs
out
pop
je
nop
mov
pop
testl
cld
incl
mov
cmp
jnp
pop
or
lds
test
lods
sbb
in
out
dec
imul
pop
jecxz
bound
fwait
and
adc
sub
jb
lcall
xor
xor
pop
jmp
jo
std
jbe
into
js
cltd
and
loopne
enter
push
cltd
arpl
mov
movsb
sub
pop
sbb
adc
sbb
scas
dec
lret
ret
mov
lea
xchg
outsb
popa
popf
mov
loope
adc
jns
and
mov
insl
xor
jo
rcrl
jo
aad
and
jmp
xor
in
mov
dec
add
mov
insl
rcll
adc
inc
lcall
js
fcmovnbe
xlat
push
rorb
leave
insb
or
add
push
jle
mov
iret
aam
dec
pop
cmp
xor
ljmp
test
xchg
ljmp
out
hlt
out
popf
out
bound
adc
sahf
icebp
in
cmp
pop
addr16
xchg
popf
lret
jne
flds
and
mov
aad
sbb
sbb
gs
rcl
jg
or
mov
mov
adc
imul
fcoml
sub
movsl
test
test
stos
pop
negl
inc
test
outsl
mov
inc
das
mov
out
jbe
push
mov
sub
lret
and
sarl
ret
movsb
scas
mov
dec
jns
test
cmpsl
stos
push
out
jae
xchg
cwtl
lods
mov
mov
test
shll
cs
and
mov
pop
repz
sub
fs
ds
dec
fwait
sub
cmp
push
stos
mov
cld
loop
cltd
int3
iret
ds
repnz
or
xchg
lea
push
gs
rcrl
imul
lret
adc
push
push
or
in
add
jmp
out
sub
xchg
lods
xchg
or
mov
repz
push
sub
out
mov
adc
jnp
lahf
in
pusha
ss
andb
xor
xor
adc
sbb
pop
jge
test
or
dec
call
sbb
mov
and
push
jmp
cmp
cli
out
mov
add
push
xchg
jbe
nop
and
inc
imul
pop
jb
jg
cmp
inc
aas
pushf
xor
sbb
mov
and
hlt
inc
sub
nop
dec
pop
gs
sub
dec
xorb
rol
test
popa
push
bound
xor
mov
jecxz
inc
imul
inc
mov
add
jno
shll
jbe
cmp
jl
loopne
shrl
fisttpl
call
xor
dec
into
fdivl
cltd
cmp
sub
in
js
xchg
cld
pop
jg
jne
mov
ret
scas
inc
ret
lock
cmc
stc
sub
add
nop
pop
push
shrl
lods
ret
aaa
ljmp
out
cmpsb
repnz
sub
jmp
pop
or
mov
dec
mov
in
dec
cmpb
add
jne
aaa
stc
push
xor
xchg
inc
nop
fstpl
mov
or
shll
ss
inc
sub
xchg
mov
mov
mov
hlt
push
jns
call
mov
xor
cltd
fstps
jae
int3
pusha
xor
out
movsl
imul
aam
out
push
cmp
add
xor
lret
and
filds
push
cmp
lock
iret
js
push
sub
mov
dec
jae
mov
add
std
jl
rolb
push
jb
mov
jp
mov
add
sub
dec
xchg
and
sahf
jae
or
push
repnz
dec
push
add
test
adc
aaa
or
dec
add
fwait
pop
jp
popa
sti
dec
out
sbb
scas
insl
add
nop
sbb
aaa
dec
and
mov
mov
idivl
popa
jecxz
push
xor
jl
push
sbb
ja
cmpsb
dec
imulb
adc
xor
mov
or
dec
xchg
js
dec
inc
dec
or
or
pmaxsw
cltd
push
dec
nop
icebp
push
lcall
sbb
or
dec
adc
ds
jb
xor
mov
into
xchg
sahf
mov
fs
and
rorb
dec
movl
outsl
push
dec
xchg
in
adc
xlat
pop
enter
pushf
add
negb
andb
push
xchg
jmp
mov
out
lds
mov
gs
lea
loope
dec
mov
push
das
in
pop
das
das
adc
sub
lret
dec
add
xchg
and
pusha
mov
adc
aas
xchg
stos
mov
dec
and
dec
int
aam
pop
aaa
jle
movsb
ret
fidivrs
push
xor
out
jmp
lcall
notb
and
dec
cmpsb
fstps
sbb
dec
jns
dec
rcl
sbb
sub
jecxz
lods
mov
jg
sbb
xor
adc
jg
leave
pop
inc
iret
inc
sub
js
fst
repnz
cmp
shl
insb
fs
cmp
or
mov
jg
bound
mov
inc
pop
jnp
adc
call
stos
or
lds
adc
ror
add
xor
sbb
insl
inc
jge
stos
or
sub
lods
es
add
insb
data16
lcall
cmp
daa
popa
movnti
outsl
aad
in
lret
shlb
mov
loope
int3
and
push
ret
adcl
into
add
adc
out
iret
cmp
inc
or
cwtl
cmpsl
sub
mov
insl
dec
mov
sahf
mov
cli
sub
push
and
sbb
mov
cmp
imul
push
fs
js
int3
repz
je
adc
pop
lcall
mov
sbb
insl
jb
aam
jne
mov
je
cmp
mulb
shrb
mov
xor
lret
sub
inc
js
pop
ss
mov
mov
inc
xlat
jge
ret
mov
bound
dec
subb
leave
push
hlt
jno
lret
aaa
sarb
pop
dec
cli
jno
mov
pushf
js
pop
xchg
mov
lock
jle
or
xor
push
push
or
lcall
jo
mov
push
xorl
data16
incl
and
jl
scas
icebp
andnps
xor
test
push
movsb
cmp
ljmp
mov
xchg
xchg
clc
pop
lret
fdivl
popf
mov
scas
push
mov
sub
les
repnz
mov
jp
push
xor
insb
or
or
mov
push
push
dec
enter
int3
insl
and
jns
push
cmp
and
xor
nop
ja
clc
fisubrl
xchg
xchg
outsb
jns
addb
mov
sbb
sub
mov
dec
add
sub
sub
mov
addr16
jmp
mov
push
dec
xchg
lret
pop
out
pop
std
pop
mov
cltd
mov
fcos
rclb
sub
cld
push
sbb
jnp
and
jp
in
pushf
dec
std
xor
xchg
shlb
mov
push
xchg
in
shrl
insb
xor
cli
shr
stos
jmp
in
xor
or
ljmp
ja
mov
in
repnz
cltd
pop
inc
xchg
jecxz
sahf
das
cmpsb
adc
inc
xor
and
int3
mov
shlb
xchg
ret
push
cmpsw
sbbl
cld
pushf
add
add
cmp
stos
mov
mov
push
pushf
sub
jecxz
aad
xchg
stos
ljmp
stos
in
fsts
addr16
daa
push
cld
pop
push
cmpxchg
aas
mov
cmp
insl
pop
bswap
je
and
fnstenv
push
sbb
mov
into
xor
in
hlt
ret
xchg
sub
lret
dec
inc
ret
adc
cmpsl
mov
add
cmp
adc
push
sbbb
and
pop
lods
outsw
lcall
rorl
outsb
jg
and
aaa
mov
arpl
mov
inc
lret
and
lret
and
repz
jnp
adc
and
pusha
xor
fadds
pop
or
add
xor
cmpsb
jmp
js
stos
in
push
pop
dec
xchg
lret
nop
das
inc
sbb
test
orb
jmp
mov
sub
dec
into
es
add
dec
jg
int
cmp
dec
cmpsl
in
mov
sahf
cltd
push
aad
insb
cs
mov
jle
orl
loopne
sbb
inc
pusha
push
cmpsb
jnp
pop
arpl
sbb
mov
data16
mov
dec
or
or
jae
dec
xor
aaa
cmp
daa
mov
fcompl
ljmp
inc
or
into
mov
pop
xor
cmp
inc
jmp
and
popf
xchg
xorl
fwait
xchg
sbb
mov
pop
mov
mov
popf
and
xor
pop
and
jmp
je
cmc
les
pop
pop
negb
push
and
je
icebp
and
test
clc
jne
cltd
inc
mov
mov
dec
inc
jmp
cmpsb
inc
mov
out
pop
inc
aad
cmpsl
add
imul
adc
lahf
ja
jb
inc
iret
repnz
in
ret
dec
movsb
lahf
movsl
ret
sahf
scas
sti
push
ja
pop
out
or
je
inc
jge
sub
inc
test
cmp
pusha
mov
jnp
mov
pop
sub
xor
imul
sahf
negl
cli
pop
cmpsb
out
rolb
fwait
mov
in
dec
ljmp
insb
push
inc
add
in
ret
loopne
stos
mov
mov
mov
pop
pop
jns
movsl
mov
pop
jns
jb
mov
pop
push
xor
xchg
mov
arpl
pop
movsl
cmpsl
int
pop
jne
adc
scas
stc
fidivrl
jo
ss
popf
dec
mov
cmp
shlb
pop
push
icebp
and
dec
int
stc
xor
test
xchg
cmpsb
mov
scas
adc
jno
fildll
or
sbb
aaa
movsl
xchg
add
repnz
push
mov
jmp
cmp
insl
jmp
fisttpll
loop
push
test
mov
or
les
repz
pop
cmpsl
push
sub
inc
pusha
jecxz
sbb
ja
insl
sahf
xchg
in
jns
pop
dec
out
cmc
mov
into
xor
dec
pop
push
lods
cs
imul
les
pop
fadds
adc
mov
popf
mov
xchg
jge
repz
mov
inc
imul
mov
xor
fs
dec
es
mov
dec
pop
sbb
add
add
push
js
add
scas
pusha
stc
mov
shll
sbb
in
dec
in
xchg
fimull
or
xor
loopne
xchg
push
push
ljmp
movsl
jae
xor
inc
xchg
sbb
sbb
add
jle
ret
lock
lahf
jae
das
sbbb
jle
dec
dec
push
sbb
cs
mov
jp
jbe
jb
or
sub
adc
shlb
pop
rolb
fucomi
dec
xchg
xchg
test
and
push
inc
add
inc
outsb
jg
fiadds
add
std
outsb
movsl
shlb
sbb
and
xchg
inc
sub
fdivs
pop
hlt
out
cmp
push
fisttpl
jge
js
std
inc
fidivrl
push
lock
xor
test
aam
popf
pop
leave
and
incl
xor
xor
push
jns
movb
xorl
xorl
movb
outsl
movsb
xchg
movsl
test
lods
lret
rcrl
jecxz
in
aaa
mov
ds
mov
adc
sub
clc
pop
cmpl
inc
sahf
cmp
pop
into
jne
push
into
xor
ss
ljmp
push
movsl
dec
stos
push
mov
stc
fmull
int3
movsl
push
xchg
add
or
pop
in
sbb
stc
mov
push
loope
inc
nop
test
mov
and
aas
bound
jl
jle
repz
cmp
jne
in
arpl
jge
or
gs
test
jp
sarb
xchg
jae
ret
cmp
xor
pop
mov
fcmovnbe
inc
idivl
lods
cs
in
mov
stc
mov
and
pop
sub
push
mov
mov
sub
sahf
inc
xlat
je
mov
or
push
into
add
mov
and
movsl
fcompl
add
fsub
int3
mov
push
fcmovnbe
mov
rolb
push
icebp
or
cmp
mov
ljmp
lahf
pop
imul
loopne
loop
add
push
nop
std
mov
jp
mov
sub
lahf
adc
or
fucomip
cmp
ja
add
mov
or
arpl
sub
add
out
jbe
pushf
jo
dec
iret
daa
enter
lret
test
fcmovbe
stc
jmp
rcl
addr16
dec
scas
jl
pop
int
lds
push
repnz
pop
cmp
sbb
cmpb
sub
loope
fidivrs
cmpsl
int3
xchg
out
inc
inc
jg
test
or
jne
and
repnz
orb
xchg
clc
int
xor
jg
arpl
cmpsb
xchg
mov
pop
push
add
jnp
int
in
loopne
out
shrl
and
shl
xor
rcrl
push
pop
add
lds
cwtl
add
ds
adc
out
sbb
shll
js
xchg
mov
outsl
pusha
inc
xorl
jmp
add
pop
aaa
imul
test
pusha
and
sbb
mov
hlt
mov
mov
or
pusha
push
sub
ss
imul
cmp
mov
scas
jmp
or
and
aas
addl
scas
and
xor
push
push
dec
repz
pop
out
add
sub
inc
movsl
xor
mov
and
andl
daa
inc
adc
jp
lret
jp
cmpsb
inc
fdivrl
mov
rcrb
int3
mov
push
insl
or
movsb
push
jecxz
cmp
pop
fistpll
repz
lea
or
in
sbb
sbb
popf
cmpsb
lcall
dec
dec
xchg
mov
mov
push
add
lods
mov
ret
dec
cmp
sub
bound
pop
inc
movsb
iret
sub
adc
je
xor
out
cmp
insb
mov
jp
add
lret
cmp
ret
rolb
lret
fistl
mov
pushf
push
add
jp
mov
mul
push
xor
push
rcll
xor
mov
push
aaa
je
mov
out
jb
ret
mov
sbb
cmp
jo
jg
fisttpl
loope
mov
in
popf
lods
jge
in
adc
mov
icebp
jmp
adcb
xlat
jbe
inc
or
and
add
cmp
push
js
or
xchg
cmp
lods
mov
add
push
xor
fldl2t
push
gs
mov
arpl
mov
push
aam
mov
xor
dec
or
xor
xor
dec
adc
push
sbb
push
pop
and
testb
mov
sub
push
inc
aad
adc
and
push
sub
and
cmp
inc
push
xor
jecxz
jg
imul
pop
push
push
dec
imul
push
icebp
xor
inc
popf
fisubrs
adc
and
in
sub
dec
out
cmp
sub
xchg
testl
mov
arpl
mov
scas
test
jae
mov
fisubl
fimull
fiadds
or
subl
mov
mov
and
loop
dec
mov
xlat
out
out
rcrl
aad
push
das
inc
jbe
cltd
lods
push
lds
and
xchg
stc
jle
sub
shll
fldlg2
adc
pop
xlat
popf
mov
sub
in
dec
xor
inc
cmp
movsl
lock
xor
xchg
bound
xchg
push
pusha
cmpsl
fldenv
dec
enter
aas
jmp
andb
inc
xchg
sbb
xor
fs
lods
mov
push
xor
jbe
in
out
pop
repz
or
pop
in
jns
in
lret
sub
rcl
fiaddl
popf
fwait
rolb
xlat
add
in
mov
dec
mov
fsubrs
lret
jmp
adc
test
les
sbbb
xor
loope
lret
cmp
sarl
enter
push
cld
hlt
add
loope
adc
lret
aad
xchg
push
hlt
test
and
mull
add
mov
pop
fistpll
cmp
iret
cmc
pop
pop
fwait
in
bound
mov
jbe
rorl
test
repz
pop
xchg
adcb
aam
cld
rclb
sub
jg
add
push
pop
ss
mov
xorb
ljmp
mov
mov
sti
sub
jnp
jno
lcall
push
pop
or
mov
in
xor
xlat
mov
xchg
ljmp
jns
cltd
push
outsb
out
jb
movsb
and
jbe
pop
roll
rorb
js
pop
push
hlt
lds
inc
cvtps2pd
cmp
sbb
and
pop
cmpsl
xchg
and
xor
jmp
pop
and
into
pop
xor
sub
fistl
movsl
lods
xor
push
orl
jl
mov
in
test
xor
lock
leave
faddl
sahf
pop
in
jo
pop
popf
mov
or
mov
mov
jo
aam
add
push
aam
fldt
stos
mov
sub
mov
lock
lods
cwtl
push
int
scas
jp
sub
xchg
cwtl
mov
dec
sahf
xlat
sub
or
es
hlt
les
imul
jbe
rolb
pushf
push
sti
add
and
sbb
xchg
addr16
imul
lods
cmp
mov
push
ficomps
aam
dec
push
xlat
dec
js
xlat
inc
and
xchg
aas
xor
sub
repnz
fs
testl
jecxz
into
mov
fmuls
xor
sub
lods
andb
xor
faddl
xchg
in
addl
movsl
aas
sub
test
sti
jno
sub
je
cmpsl
sub
out
push
daa
add
adc
mov
xchg
jecxz
cmpsl
ds
mov
ja
sub
jecxz
stc
icebp
inc
test
dec
push
ljmp
pusha
mov
mov
out
inc
pop
stc
and
add
pop
push
jg
insb
fs
and
xchg
call
movsb
xchg
imul
loope
jmp
mov
xor
rcll
lcall
sti
xchg
mov
cli
sbb
test
sbb
mov
pop
call
out
and
inc
aas
adc
lahf
sahf
lods
popf
jb
inc
dec
pop
push
pop
cltd
jns
test
lret
add
lret
mov
adc
jle
jp
test
and
mov
xchg
jne
adc
mov
and
dec
push
push
push
dec
arpl
xor
sbb
mov
shr
or
mov
fisubrs
adc
push
xchg
movsl
and
add
xchg
in
repnz
xchg
leave
aam
sbb
push
aad
je
stos
mulb
imul
mov
int3
xchg
xor
scas
xchg
mov
aaa
daa
dec
sub
in
xlat
jg
push
sub
push
scas
xor
mov
fbstp
pusha
mov
cmp
push
pop
jp
addl
neg
outsb
inc
sub
mov
pop
sbbb
dec
pop
inc
mov
adc
dec
les
inc
cli
mov
sub
divl
fiaddl
pop
icebp
mov
ror
mov
cld
ds
sbb
sarl
and
or
clc
cs
push
test
xchg
adc
es
jmp
lds
lods
cmp
xor
mov
in
jbe
jbe
daa
outsl
cmp
cmc
ljmp
push
enter
pop
cmp
lds
and
jmp
dec
movsb
decl
arpl
xchg
mov
mov
loopne
cwtl
ds
lods
stos
add
pop
sbb
aam
sbb
adc
into
idivb
sbb
mov
adc
jae
movsb
add
add
push
sub
out
mov
in
jecxz
cmpsb
stc
add
or
imul
clc
or
enter
testl
jecxz
jo
sti
adc
mov
ds
test
scas
xchg
inc
lret
fwait
aas
cmp
fdivrl
adc
mov
je
push
in
hlt
fldt
mov
sub
jns
cltd
cmpsb
xlat
and
pop
rol
mov
xchg
adc
pop
push
push
add
push
in
adc
idivl
cmc
dec
adc
jns
jnp
or
dec
loop
pop
inc
sti
addr16
insl
ds
addl
aam
mov
mov
mov
adc
push
cltd
clc
add
push
in
push
pusha
js
sahf
mov
sbb
adc
pop
adc
sbbl
mov
fisubl
cmp
inc
xor
and
xor
dec
clc
les
mov
pushf
rorb
cmpl
jmp
xor
or
gs
popf
mov
fcomps
cli
subl
adc
pop
mov
lods
xchg
pop
lea
cmp
or
or
ds
cmpsl
jb
lds
mov
dec
popa
std
pop
mov
and
inc
imul
mov
loope
rcll
test
jno
push
push
pushf
sub
or
add
sub
dec
pushf
movsl
xchg
xor
mov
add
repnz
adc
mov
inc
jb
sub
cmp
test
add
out
mov
sbb
ja
cwtl
stos
insl
xchg
insb
dec
popa
pop
mov
test
adc
cmp
lcall
clc
fbld
adc
sub
lds
pop
pusha
gs
mov
cltd
fcompp
clc
testb
cmp
mov
mov
sti
fwait
adc
add
jle
imull
push
pusha
pop
sbb
inc
test
push
jge
inc
rcrb
nop
xor
adc
adc
push
push
in
daa
pop
addr16
push
push
push
arpl
inc
inc
icebp
pop
popa
jg
mov
in
aas
decl
inc
out
or
dec
pop
mov
subl
mov
ss
push
ja
and
xchg
das
jg
ficoms
fldenv
shl
aas
pop
adcl
lsl
insl
lcall
ret
sti
ljmp
fwait
mov
clc
not
jno
mov
dec
lea
pop
stos
fdivs
pop
cmpsb
fmuls
push
cmp
iret
fwait
jns
push
jecxz
sub
and
push
popf
mov
mov
in
imul
leave
out
jo
push
push
rclb
inc
insb
add
mov
loopne
stc
add
and
jns
dec
inc
addr16
aas
jmp
aas
stc
cmp
cmp
and
pop
insl
in
fistl
xor
xorb
push
jns
daa
lods
jno
shll
pop
je
hlt
icebp
pop
lock
jae
shrb
lods
sbb
lcall
das
es
pushf
ror
out
jmp
lods
iret
sub
xor
enter
sub
sub
imul
and
call
bound
dec
jecxz
xchg
push
cltd
xchg
lret
xor
cld
fldcw
mov
jl
sahf
fmull
iret
test
mov
in
dec
lea
cmp
into
jge
into
scas
fwait
mov
adc
mov
jl,pn
jbe
or
sbb
pop
jl
pusha
fs
lret
lret
out
push
jp
cmp
xchg
std
cwtl
es
mov
push
aad
and
stos
mov
cmpsl
nop
fsubrs
fbld
loopne
mov
adc
out
sti
lret
push
clc
add
and
imul
add
lock
movsl
dec
ret
nop
inc
pop
push
ds
movsb
push
dec
iret
push
dec
mov
push
idiv
adc
clc
push
sbb
mov
inc
mov
fnstcw
ljmp
or
inc
testl
out
adc
outsb
in
cmp
in
outsb
or
ja
mov
andb
outsb
pop
push
roll
call
pop
pop
xchg
xor
jecxz
call
std
inc
leave
loopne
in
jb
iret
fmuls
outsb
in
insb
mov
jecxz
mov
xchg
xchg
sti
vmulpd
inc
jbe
icebp
mov
sub
mov
mov
test
mov
outsl
in
lea
mov
push
inc
sti
addb
pusha
les
cmpsb
mov
add
popf
jp
cs
fdiv
popf
fstpt
add
mov
push
inc
out
pop
lea
push
data16
ret
loope
adc
mov
cmpb
push
std
pop
repnz
pop
bound
push
insb
pop
cld
es
sti
mov
mulb
pop
stos
stc
cmpsb
sar
sti
adc
inc
inc
jl
aad
stos
cmp
jb
lods
mov
cs
imul
mov
adc
dec
adc
xor
nop
divl
mov
sub
aas
pop
or
cmc
dec
inc
dec
and
push
lock
cs
aas
adc
outsl
imul
orl
mov
ljmp
xor
sbb
test
les
fildll
and
cmovs
cmp
push
cmpsb
xchg
jbe
mov
std
or
aam
les
dec
aad
inc
iretw
and
pop
sbb
out
cmpsb
idivb
jno
pop
push
rcr
mov
insb
aad
or
aaa
shlb
nop
mov
dec
jne
pop
insb
lcall
int
outsl
jg
xor
xor
rol
pusha
scas
xchg
add
pop
insl
scas
sub
xor
movsl
mov
aas
stc
sahf
xor
ds
pop
fistps
sub
iret
push
mov
loopne
mov
ds
es
loop
shlb
xchg
repnz
mov
arpl
sub
ret
xchg
xchg
xor
subb
xchg
test
xor
int3
mov
gs
push
movsb
aam
aaa
mov
xchg
mov
mov
ret
fldcw
jbe
sbb
sub
mov
sub
xorb
jle
sti
xor
pop
cmpsb
cltd
lods
sub
inc
add
adc
fldenv
sti
iret
popf
push
sarl
cltd
dec
dec
ficoms
jmp
imull
jnp
int3
jae
mov
cli
dec
mov
or
das
stos
call
aad
push
nop
scas
mov
mov
xor
mov
mov
push
adc
je
pop
scas
lahf
mov
sahf
inc
push
mov
loop
stos
xor
mov
loopne
movsl
sbbl
popa
sbb
and
jge
push
shl
in
aam
jo
out
inc
popf
call
insl
subb
ja
push
and
pop
rcr
data16
clc
xlat
test
mov
jp
addr16
stc
mov
xchg
sbb
clc
les
add
mov
es
xor
push
cmp
sub
out
jno
ja
push
mov
inc
inc
loopne
mov
sahf
sbb
cmp
icebp
fmul
bswap
movsl
mov
pmaxsw
dec
mov
sbb
in
stos
arpl
mov
dec
mov
xlat
push
jge
icebp
mov
ss
imulb
sub
ds
sub
adc
add
sub
lods
push
loopne
out
push
aad
mov
dec
push
and
les
iret
popa
scas
dec
ret
push
incb
popf
out
js
or
jg
lds
inc
jae
cs
stos
add
fcomi
or
xor
pusha
xor
push
mov
mov
repnz
push
mov
dec
sub
pusha
dec
dec
test
jmp
stc
xor
cs
inc
enter
jne
inc
dec
adc
cli
xchg
movsl
jbe
jo
mov
xor
cli
out
fsubrl
dec
adc
push
add
ss
dec
mov
test
mov
bound
adc
out
out
ds
sbb
int
adc
rcrb
pop
nop
cld
push
add
xlat
mov
mov
mov
js
inc
movsl
inc
pop
pop
sbb
addr16
jecxz
scas
sar
adc
xchg
or
dec
jp
outsl
sbb
push
in
xchg
push
xchg
xchg
fiaddl
mov
stos
cmp
inc
dec
push
jl
jo
cmp
mov
sbb
aas
pop
pop
jg
mov
scas
cmpsb
jp
mov
add
and
adc
xchg
jns
xchg
and
arpl
outsl
pop
mov
or
out
xchg
add
inc
dec
add
cmp
movsb
mov
out
xchg
pop
mov
loop
mov
pushf
rol
cwtl
mul
aad
xor
xlat
sub
aaa
or
mov
insb
ja
mov
sbb
test
into
mov
push
stos
mov
loope
popf
xor
int3
ss
jle
add
mov
add
push
shr
add
pop
stos
stc
push
sahf
adcl
mov
fistpl
ljmp
xlat
pop
xor
pop
dec
mov
shlb
repnz
and
xor
xlat
inc
sub
fisttpl
adc
mov
sti
cmc
and
xchg
ret
loop
xor
je
aad
pop
and
inc
test
clc
xchg
rcll
mov
adc
adc
add
add
fs
test
cmp
mov
jle
adc
mov
xchg
jl
jnp
lds
imul
insb
inc
mov
std
cmc
sti
and
je
push
cwtl
imul
lret
pop
insl
cmp
push
and
in
jg
rol
mov
rcll
xor
sbb
std
jge
add
dec
push
mov
mov
sbbb
jne
mov
add
jno
cs
jl
adc
ds
ljmp
clc
das
in
mov
rolb
lods
lahf
out
xor
jne
dec
mov
les
daa
pop
mov
in
pop
repnz
jmp
xchg
icebp
iret
pop
lcall
scas
push
push
dec
pop
hlt
jae
jg
jmp
pop
sarl
leave
scas
and
sbb
push
push
adc
adc
jbe
adc
mov
in
push
adc
xor
inc
pop
fcompl
insl
fsqrt
outsb
fcoml
in
sub
stos
imul
shll
pop
orl
addr16
stos
push
hlt
lods
or
push
xor
ret
add
out
mov
jp
sti
scas
std
aad
push
mov
jns
shll
and
cltd
mov
out
sub
lock
dec
les
leave
lret
xchg
cmp
ljmp
xchg
adc
cwtl
jmp
dec
sbb
lds
push
xchg
push
stos
xchg
xor
dec
leave
subb
out
cmp
jle
mov
pushf
mov
cli
stc
mov
mov
add
sub
jle
jns
mov
mov
out
in
mov
inc
mov
das
daa
gs
jl
vxorpd
jnp
pop
push
pop
pushf
and
rcrb
inc
sub
mov
cld
add
mov
adc
mov
mov
addl
movl
out
inc
pusha
push
cwtl
push
xor
jo
push
adc
popf
push
push
movsl
cmc
jnp
push
repz
inc
pop
xor
test
negl
add
cmpsb
xchg
int
mov
mov
sbb
mov
insl
jge
jl
mov
mov
xchg
mov
pop
and
mov
push
pop
push
mov
sbb
and
push
and
loopne
fcmovne
mov
cs
jge
or
data16
cmp
pop
inc
lret
xchg
push
fistps
imull
or
clc
repnz
mov
dec
notl
aas
sbb
jbe
mov
jbe
mov
jo
in
inc
enter
fucom
cld
cmp
int
sbb
add
inc
lock
xor
lods
add
frstor
repnz
sub
mov
xchg
xor
in
mov
les
dec
dec
js
test
int
push
in
jmp
cwtl
in
test
or
add
sub
xlat
mov
addr16
cld
xchg
les
popf
bound
imul
lahf
cld
or
rolb
sub
ljmp
clc
ds
push
push
sub
pop
outsl
mov
scas
pop
clc
aam
cli
cli
pushl
insb
repz
mov
sarb
adc
nop
rorb
xchg
xchg
mov
imul
xchg
test
ror
cld
ss
jne
adc
in
push
mov
mov
je
push
in
pop
mov
mov
pop
pop
push
xor
add
nop
xchg
and
shl
add
push
add
inc
pusha
inc
mov
adc
lods
lcall
mov
cmp
adc
call
adc
push
or
mov
fwait
cmp
lods
mov
xchg
sbb
std
xlat
dec
sarl
adc
mov
push
pop
shlb
repz
add
sti
cmp
inc
scas
xor
adc
mov
pusha
pop
mov
mov
xor
lahf
mov
ljmp
jbe
sti
pushf
pop
push
sub
jecxz
lock
repz
popf
dec
mov
pop
mov
xorl
inc
xchg
xor
ret
pop
pop
icebp
out
arpl
push
insb
cmp
mov
add
rorb
or
sub
cmp
and
fisttpll
mov
push
sbb
push
jp
xchg
push
jecxz
fiaddl
jnp
insl
fs
stc
add
fnstenv
push
fsubp
inc
and
adc
pop
test
imul
iret
inc
dec
andb
aad
fwait
cmc
cld
loop
cmp
jp
cmp
pop
mov
sub
jne
mov
aas
pusha
or
out
leave
mov
push
adc
jo
out
lds
ljmp
or
aad
ret
lret
add
repnz
ret
neg
idivl
icebp
jb
push
out
xchg
dec
sub
jl
loopne
addr16
nop
xor
adc
mov
es
push
mov
ljmp
sub
mov
pop
hlt
jne
and
cmp
ljmp
sbb
in
adc
out
daa
shlb
dec
or
in
adc
add
adc
mov
mov
leave
xor
insb
and
xor
out
pop
mov
pop
cmc
cs
outsl
lret
xchg
dec
pop
lea
mov
xchg
mov
dec
add
pop
sub
inc
and
test
out
jno
pop
cmp
jns
cmpb
enter
adc
ret
add
mov
stc
addr16
mov
lahf
fstl
clc
pop
data16
and
adcb
push
mov
pop
xor
fimuls
cmp
dec
cmpsl
lahf
xchg
outsb
mov
inc
sub
test
jg
je
icebp
jle
push
je
imul
pop
clc
pushf
js
jp
xchg
fadds
int
xor
jmp
js
xchg
xchg
call
je
imul
movaps
push
inc
shlb
sarl
incb
int
jne
data16
pop
inc
xchg
pop
sbb
int
in
add
pmaxsw
outsb
jmp
addl
loope
cmc
ret
cmp
lock
aam
cltd
cmp
lret
bound
sub
hlt
sub
sub
lea
add
sub
addr16
sbb
add
dec
ds
pop
inc
and
fcompl
sbb
out
push
out
adc
push
outsb
ds
imul
inc
out
sbb
jp
xchg
jns
mov
mov
arpl
fnstcw
stc
or
ret
cmc
repz
sub
mov
pushf
xor
clc
jno
add
rcll
testl
dec
jle
jle
jmp
in
sub
movsb
jge
jae
lahf
inc
pushf
lods
shll
push
jno
add
pop
sbb
pop
push
movsb
cmp
pushf
repnz
mull
dec
push
enter
mov
or
or
std
setns
jns
push
xor
jo
xchg
cli
adc
roll
push
or
fidivl
fwait
mov
sub
mov
aaa
gs
pop
rcl
mov
jns
icebp
stos
stos
mov
cld
adc
ss
test
push
js
jecxz
mov
insb
and
repz
xchg
out
aas
in
call
add
push
lcall
adc
fdivr
xchg
push
fldcw
fistl
addr16
or
std
loopne
movsl
loope
mov
jp
mov
mov
xlat
shlb
rol
jg
pop
sarb
push
sub
inc
push
bound
loopne
or
aas
sub
xchg
int
scas
fsubr
outsb
push
rcl
fildll
add
cmp
idivb
je
push
out
dec
xchg
in
stc
popf
fwait
stc
xchg
xlat
outsl
xchg
add
cmp
inc
jmp
sub
jl
cmp
lcall
jl
xor
in
mov
push
push
ret
mov
ss
jle
dec
push
pop
and
mov
inc
fists
insl
dec
loopnew
mov
bts
stos
imul
loop
int
inc
push
sub
add
jbe
adc
xchg
mov
inc
xchg
lahf
lcall
add
pop
push
cmp
pop
push
sti
dec
add
fisubrs
shr
sbb
mov
cs
jge
sub
int
in
push
into
dec
in
filds
push
cmpsb
and
int3
jae
push
add
mov
fisubl
loope
pop
jecxz
mov
add
push
jne
jnp
add
mov
out
aad
mull
popa
cmovnp
aad
dec
roll
jecxz
out
mov
iret
xor
in
das
push
dec
lcall
mov
jmp
insb
sbb
cmpsb
cmp
mov
imul
dec
inc
xorb
or
jl
insl
xchg
test
and
adc
jno
ja
pop
dec
roll
mov
das
in
sub
iret
or
adc
cmp
add
mov
pop
push
fs
xchg
das
stc
cmp
gs
not
icebp
arpl
leave
ret
je
clc
fbld
and
and
in
or
cmpsb
cmp
inc
sahf
rorl
scas
mov
jno
mov
push
test
xor
mov
jno
xchg
add
and
jmp
sub
addr16
sub
xchg
adc
push
add
dec
pop
in
cmp
inc
jge
and
mov
outsb
dec
jnp
cmp
jnp
sub
outsl
enter
fsqrt
jle
aad
movsb
inc
gs
jmp
jg
push
repnz
rcrb
inc
adc
inc
jge
mov
push
fldl
icebp
test
push
dec
push
ret
and
xlat
jp
inc
pop
mov
xor
cmp
lahf
sub
imul
dec
mov
sti
sub
adc
out
ds
mov
fsubrl
pop
pusha
add
lds
adc
sar
and
shlb
and
cmp
into
mov
arpl
out
das
xor
xchg
cmpsb
sub
sub
mov
sbb
dec
push
jmp
jmp
inc
dec
mov
jle
sbb
sahf
pop
sub
push
sbb
cli
jg
stos
ja
cmp
add
aam
xchg
sarb
xor
stos
movsb
cwtl
xchg
insl
mov
adc
ret
jb
es
push
inc
mov
sahf
add
sub
rorb
fstl
popf
lret
jp
jp
mov
test
adc
adc
pop
insl
pop
mov
lcall
jae
repz
popl
jmp
push
out
pop
loope,pn
repnz
add
fyl2x
rclb
clc
jge
cmp
movsl
xor
outsb
ds
mov
sbb
inc
inc
sub
jns
cli
out
adc
mov
ror
push
cmp
ss
xchg
stos
rcrw
in
push
xchg
rorb
lcall
push
pushf
push
mov
xlat
aas
add
cmp
mov
mul
sbb
sub
lret
xchg
sahf
adc
icebp
divl
out
adc
cmp
mov
sbb
adc
dec
es
inc
and
pop
cmpsb
xchg
lahf
out
xor
cmp
lcall
inc
push
scas
pop
adc
add
jecxz
pop
push
jge
scas
sub
xor
scas
outsl
ss
cli
adc
imul
mov
mov
rorl
pop
rcrb
dec
test
mov
hlt
bound
lods
add
dec
std
jle
popa
jo
imul
adc
lock
mov
mov
xchg
and
jecxz
stos
mov
hlt
sbb
lret
dec
push
mov
mov
jmp
fadd
cld
ffreep
aad
push
mov
mov
ficoml
inc
mov
out
loope
addr16
sub
negl
push
nop
xor
push
xlat
and
fdiv
add
fadds
test
popf
test
pop
scas
addr16
mov
fnstcw
mov
jnp
jge
sahf
mov
inc
jecxz
pop
mov
dec
mov
jo
jl
fildl
adc
mov
icebp
sti
cmpsb
stc
imul
mov
jns
mov
cmp
adc
xchg
iret
push
pop
mov
pop
mov
outsb
inc
adc
jne
mov
lret
jno
dec
push
and
adc
test
push
inc
clc
dec
mov
rcll
xchg
rcll
cmpsl
imul
imul
aaa
testb
jnp
mov
and
fimuls
adc
andb
sti
mov
iret
xor
popa
and
mov
pop
movsl
ss
mov
mov
or
push
jge
fstpt
hlt
cli
stc
mov
pop
ds
out
pop
xchg
push
pop
xlat
mov
add
loop
xor
test
or
idivb
adc
fstps
popa
in
inc
jno
outsb
ret
sub
inc
add
dec
adc
inc
das
xchg
jo
mov
cmpsl
mov
mov
js
rcrb
and
ficomps
or
jbe
cmp
xchg
pusha
push
std
mov
lcall
pop
aam
imul
frstor
xchg
int
inc
jo
int
xor
ret
call
fstpl
enter
xor
or
lahf
out
jns
mov
outsb
mov
mov
jne
xlat
pop
or
jno
mov
nop
pop
and
cmp
sbb
movsb
push
fldt
stc
out
dec
sbb
in
push
xorb
icebp
imul
out
pushf
arpl
or
daa
and
dec
adc
or
in
and
inc
adc
shll
aad
js
lcall
lret
lods
xor
push
mov
push
jmp
popf
cmp
jmp
xchg
adc
xchg
inc
mov
movl
mov
cmp
add
pop
pusha
out
or
jne
lret
je
in
pop
dec
sbb
pop
pop
dec
push
je
into
loop
inc
cmp
jle
daa
loope
shl
mov
scas
mov
lret
pop
push
adc
push
or
ficoms
lds
inc
jnp
cs
push
incb
cltd
mov
jmp
mov
mov
ja
stos
and
bound
cs
mov
add
inc
inc
mov
mov
call
xlat
sbb
sbb
movsb
pushl
mov
push
push
adc
jmp
mov
mov
and
jl
sbb
xchg
outsl
push
out
popa
std
shll
stc
insl
push
dec
push
cmp
fwait
aaa
fs
jno
sub
sbb
lcall
es
adc
push
adc
add
js
xor
popf
xchg
movb
xor
add
jae
popa
jp
das
dec
sub
dec
cmp
cmp
pop
and
insb
xchg
cli
sbb
int
movsl
daa
hlt
jmp
int
mov
lret
xor
cmpl
lds
mov
sub
and
inc
loope
pop
fldcw
out
icebp
sahf
inc
int3
adc
fcoms
mov
and
pop
adc
ret
mov
jbe
cwtl
mov
fwait
pusha
mov
adcl
rcrl
sbb
mov
pop
xor
inc
mov
nop
jp
gs
sbb
movb
add
test
adc
jnp
push
jmp
fcmovnb
inc
jecxz
sub
xchg
bound
jno
pop
cmpsl
shl
inc
push
dec
jb
dec
fsts
fisubl
pusha
mov
adc
mov
mov
xchg
dec
xchg
not
mov
scas
inc
push
sbb
sti
stos
popa
cwtl
icebp
push
jmp
push
subl
xchg
gs
jbe
sbb
pop
aaa
or
and
cmp
xchg
xor
in
mov
mov
outsb
mov
sbb
xchg
or
outsl
add
fidivrl
clc
cwtl
mov
das
repnz
cmpsb
jge
pushf
int
std
aaa
inc
in
dec
into
cld
mov
lock
scas
pusha
xchg
dec
jle
icebp
mov
and
jbe
dec
aaa
andl
test
jg
pushf
pop
sbb
mov
cmp
dec
pop
and
fidivrs
sub
lret
pushf
loop
outsb
add
pop
imul
imul
or
lahf
in
jae
push
pushf
dec
jnp
gs
or
jb
jb
pushf
int3
data16
and
in
cmp
mov
jae
enter
jmp
lcall
push
insl
push
out
cmp
insw
push
and
inc
cmp
lods
div
sub
inc
mov
les
int
jge
inc
xor
xor
loop,pn
xchg
and
mov
xchg
lahf
pop
cmp
stc
add
repnz
out
mov
sbb
mov
jbe
sbb
arpl
ret
mov
ret
enter
out
mov
push
lahf
xor
mov
sub
movsl
push
jge
movups
sbbl
shlb
icebp
jae
mov
arpl
fisttpll
mov
sbb
jo
insb
scas
pop
mov
notb
mov
jge
movsl
daa
clc
lods
inc
aaa
rol
push
out
movsl
imulb
test
mov
add
ror
mov
or
mov
ss
sub
mov
cmpsl
je
rolb
popf
mov
inc
cwtl
lahf
loope
js
in
mov
sbb
jbe
push
jecxz
js
xor
jl
leave
or
mov
mov
push
mov
iret
repnz
inc
mov
pop
cmp
push
loopne
call
inc
sub
add
movsb
dec
ja
test
jg
imul
ja
push
jp
gs
aaa
insl
stc
add
adc
cli
jbe
push
sti
fbld
shl
stos
fisttps
mov
dec
lahf
mov
xor
sub
adc
adc
repnz
inc
and
push
add
sbb
cmp
xchg
mov
nop
pop
cmpsb
lods
xor
aas
shl
movsl
mov
leave
mov
jo,pt
cmpsl
lea
outsl
pushf
lea
mov
cmp
xchg
movsb
push
ss
filds
roll
mov
stos
inc
movsl
jmp
sub
ljmp
test
sub
cld
xchg
pop
loope
push
ficoms
std
mov
push
and
scas
out
dec
cmp
repz
clc
cmpsb
dec
jp
mov
cmpsl
inc
and
sbb
xor
adc
out
in
add
inc
jmp
test
pop
mov
sbbb
xchg
cmp
adc
and
sbb
jae
jmp
cmp
mov
das
notb
adc
and
dec
pushf
movsb
iret
lods
popf
cmpsb
jne
xor
and
inc
fidivrl
stc
sbb
fwait
sub
or
push
sbb
xor
jmp
scas
pusha
outsb
xor
xor
mov
adc
fidivl
mov
adc
jecxz
sbb
arpl
mov
adc
dec
push
jnp
mov
or
add
push
mov
rorb
jp
je
iret
xchg
test
or
mov
stos
in
lret
xor
xor
jnp
push
mov
movb
cmp
sbb
push
loopne
cmpsb
stos
hlt
cli
cmc
jo
outsl
lret
std
movsb
insb
sti
repnz
arpl
xchg
mov
fldcw
mov
cwtl
lcall
nop
hlt
loope
aam
push
sub
xor
and
dec
add
inc
ret
dec
inc
cmp
jb
mov
mov
repz
out
xor
xchg
movsb
xchg
fstenv
adc
sarl
push
push
sbb
sar
and
fwait
les
int3
nop
mov
out
mov
aaa
int3
xchg
dec
or
mov
ja
mov
adc
sub
imul
fnstcw
mov
fs
jo
clc
addl
ljmp
pop
into
aaa
jp
pop
inc
sbbl
jns
insl
sub
outsb
add
inc
push
pop
push
pop
mov
jae
sub
cs
push
mov
icebp
add
push
lods
arpl
inc
inc
outsl
rep
stc
push
mov
fwait
mov
rclb
cmp
and
and
pop
push
repnz
xchg
jmp
int
jle
gs
mov
addr16
aam
mov
mov
jae
push
out
dec
mov
mov
inc
mov
pop
mov
repnz
add
dec
and
repnz
pop
dec
xchg
adc
xor
shll
incb
inc
lret
jmp
push
jle
sbb
push
dec
xor
stc
cmp
jno
or
xchg
loope
sbb
dec
push
leave
lods
jo
push
test
pop
aam
psubq
xor
cmc
push
in
inc
ret
in
or
stc
jb
or
pop
push
adcb
test
push
into
jae
mov
scas
push
xor
mov
mov
test
or
ss
pop
cmpsb
js
fs
stos
pop
cmpb
jno
in
push
or
add
adc
testb
aam
cwtl
lcall
sti
mov
mov
pop
or
and
fwait
loop
cwtl
mov
jae
in
mov
mov
lea
aam
jmp
mov
mov
push
mov
jb
lea
cs
sbb
inc
cwtl
and
sbb
or
pop
cwtl
push
add
pop
sbb
pusha
stos
inc
sub
mov
mov
jb
pop
fidivrs
pop
test
cmpsb
fsubrl
cmpsb
inc
push
pop
mov
add
sub
aaa
cld
popa
movsl
cmp
stc
les
stc
ret
in
mov
addr16
push
pop
shll
sub
pushf
xchg
test
fldcw
cmp
adc
sar
push
xor
pushl
xchg
push
clc
ja
or
test
lret
in
mov
adc
fimuls
mov
dec
xor
adc
stos
in
xor
in
lret
xchg
inc
fnstenv
sbb
fnstsw
adc
cltd
sbb
mov
dec
jmp
mov
loope
or
pusha
and
cmpsb
lahf
push
pxor
dec
mov
rolb
loope
xchg
dec
cmpxchg
notb
cmp
pop
hlt
daa
mov
jae
loop
in
aas
xchg
lahf
dec
lret
and
ficompl
sub
in
aas
cmp
scas
mov
cmp
sahf
fidivrs
sbb
dec
mov
es
shlb
sahf
mov
lods
les
pop
xchg
jl
enter
bound
inc
fwait
mov
mov
mov
inc
inc
push
adc
popa
test
pusha
mov
jno
test
out
cmpsb
lods
sbb
push
jno
andl
repz
stos
mov
test
xorl
es
mov
and
push
mov
xchg
jmp
scas
inc
ljmp
fs
dec
ds
ds
fsubrs
adc
or
mov
mov
stos
xchg
decb
imul
stos
sbb
jl
dec
xor
pop
pop
ss
ljmp
dec
cmp
inc
cld
or
jmp
add
or
lock
fwait
leave
fnstenv
dec
inc
mov
mov
arpl
les
out
cld
repz
dec
rorb
in
jecxz
dec
dec
push
push
push
jae
xorl
pop
stos
add
dec
popf
jne
mov
insl
dec
push
dec
sub
decl
stos
jmp
iret
arpl
ret
stos
inc
int3
sti
sbb
jne
mov
xor
cmp
jg
out
adc
add
mov
stos
test
jge
mov
push
gs
jae
ret
xchg
inc
pop
mov
push
jbe
es
std
nop
or
loope
jb
sysenter
cmp
xchg
call
fimuls
dec
jl
pop
sbb
jbe
sbb
jo
decl
fwait
je
test
dec
shl
dec
popf
xchg
and
inc
and
fsts
or
int3
or
pop
fpatan
cmp
iret
xchg
enter
mov
cmp
xchg
fisubs
loop
pop
dec
lret
or
add
inc
stos
inc
adc
sbb
pushf
aam
mov
jl
arpl
repz
dec
mov
jge
sub
add
cltd
fistpl
into
dec
pushw
xor
adc
fiadds
push
mov
fsts
push
lahf
sbb
xchg
jns
xlat
sbb
cmpsl
fcomip
sub
adc
imul
jns
or
fnstenv
pop
pop
ds
popf
push
inc
push
xor
jne
cmp
pop
mov
mov
add
out
lahf
push
xor
stos
loope
cltd
sub
or
cmc
and
fidivrs
inc
mov
sbb
dec
insb
rolb
imul
fnstsw
lahf
int
mov
pop
sahf
fldl
sbb
lahf
add
dec
out
mov
jmp
aam
ret
inc
mov
and
popf
push
repz
stos
mov
int3
xor
dec
pop
daa
sub
das
mov
mov
jo
pop
add
xchg
aam
mov
mov
jb
xchg
nop
xor
cmp
or
loopne
and
clc
repnz
mov
and
fmuls
pop
mov
xchg
lahf
lds
inc
lret
das
add
inc
jno
jb
aad
xchg
lahf
pop
cmc
add
add
aas
xor
and
xor
sbb
jg
cmpsl
cld
fstpl
mov
in
push
rolb
sbb
fcoml
adc
xchg
and
push
aam
push
inc
call
cmp
ficomps
jp
jnp
fstpl
hlt
sub
arpl
jl
mov
ss
sub
test
in
stc
xor
mov
sbb
and
out
scas
imul
into
ret
shrl
xchg
fildll
aad
out
sub
pusha
pop
mov
out
jg
inc
rclb
mov
mov
fxch
aad
xor
sub
leave
sahf
mov
mov
xor
insb
fwait
pop
shlb
sub
mov
fists
mov
imul
xor
popa
and
push
xor
add
jbe
mov
pop
cld
shrl
movsb
push
mov
jp
push
mov
lret
bound
fnsave
ss
dec
popf
sti
call
in
rcrl
js
fisubrs
sbb
imul
dec
and
sub
and
mov
das
jnp
mov
push
and
shlb
add
repz
je
mov
jl
inc
mov
xchg
dec
repz
jne
inc
adc
push
mov
sbb
cli
inc
xor
repz
and
push
xchg
outsb
sbb
dec
ss
or
push
jp
sbb
sbb
sub
hlt
jb
cmpsl
mov
shrl
rorl
mov
movsl
mov
imul
pop
mov
int
das
out
xchg
mov
aad
stos
leave
mov
xor
push
ja
xor
dec
aam
xor
xor
outsb
call
aam
cmp
outsb
xor
mov
sub
jae
ret
iret
pop
mov
push
leave
sbb
pop
pop
ljmp
jb
push
jg
mov
fists
sub
sub
cmpsb
sbbb
xchg
bound
scas
jne
mov
loop
jecxz
cld
or
cvtps2pi
dec
mov
and
fs
popa
mov
or
lret
mov
test
scas
push
fldlg2
enter
pop
mov
sbb
and
cli
pop
arpl
or
push
ljmp
les
cmp
lock
adc
sub
push
lock
pop
leave
in
add
jns
insl
mov
fdivrl
in
sti
das
and
fucomi
test
xlat
sbb
fwait
sub
sahf
in
jle
xor
loope
jo
and
push
xchg
das
divl
push
repz
pop
ret
repz
loopne
xchg
add
repz
ror
fcomp
out
xchg
mov
js
pop
test
cmp
insb
sbb
hlt
rcr
sub
jbe
mov
add
repz
inc
test
cmp
pop
rorl
lods
xor
lret
dec
lods
in
or
int3
mov
in
rcl
mov
leave
fisubrs
aam
imul
popf
cltd
int3
inc
push
lods
jp
xlat
ret
xor
xor
insb
pushl
mull
pop
repz
loopne
mov
push
lret
jb
or
addr16
jb
sbb
mov
popf
sub
adcb
pushf
cmp
jns
scas
mov
pop
jb
inc
and
divl
or
sub
int3
ret
xchg
rolb
jg
lcall
adc
xchg
call
aas
pop
lock
ja
insl
fdiv
mov
rorl
pusha
or
jb
push
adc
faddl
jmp
ja
clc
dec
test
sbb
loope
cmp
fld
aas
mov
add
xchg
sub
inc
sub
cmpsl
cmc
sub
adc
rep
and
fpatan
call
and
xchg
out
adc
mov
enter
dec
inc
sub
inc
ret
repnz
add
stos
sub
stos
mov
xchg
dec
lods
stos
xor
add
in
push
repnz
dec
inc
sbb
inc
rcrb
xor
loope
jl
sbb
jb
mov
mov
xchg
shll
xor
cmpl
jnp
divb
cmc
pop
adc
pop
mov
shlb
dec
inc
lret
mov
dec
sbb
notb
sarl
xor
xor
lock
inc
out
jmp
add
sub
shrl
mov
inc
sbb
and
xchg
mov
iret
dec
ss
insl
mov
mov
call
xchg
sbb
inc
mov
inc
jns
imul
mulb
mov
pop
clc
cmc
cs
push
lods
aad
mov
test
rorb
lret
pop
mov
movsl
cmp
dec
cmp
xlat
sub
fwait
int3
pop
push
pop
cmpsb
xor
mov
fidivl
mov
dec
push
ret
stos
mov
in
sarl
ds
test
push
mov
jle
cli
jg
stc
cmp
pop
push
sub
jg
lahf
add
cltd
push
pop
mov
cmp
add
loope
mov
pusha
mov
sbb
stos
call
push
in
inc
pop
data16
fdivr
ret
mov
jmp
in
icebp
in
inc
sub
add
shlb
sbb
cmpsb
cld
aas
int3
lods
mov
mov
out
lock
call
imul
push
imul
jb
aam
cmp
pop
cmp
sub
lahf
lods
mov
cmp
pop
lret
movsl
mov
and
mov
mov
fcom
inc
inc
pushf
dec
cli
fs
and
subb
mov
insl
adc
mov
mov
icebp
or
sub
inc
test
add
jmp
xor
or
jns
jne
and
xlat
cmpsb
hlt
sarl
pusha
pop
fistpl
mov
mov
push
xchg
mov
sahf
cwtl
cmp
jo
pop
mov
data16
sub
mov
dec
lgs
mov
stc
adc
jno
pop
out
sbb
scas
les
sub
fdivrs
dec
in
data16
out
inc
pop
mov
jae
mov
icebp
sub
lret
xchg
cmp
xlat
or
sbb
loope
sahf
or
repz
sub
mov
or
mov
xchg
insb
pop
rcr
sub
xor
js
or
imul
test
out
lods
setle
jne
cwtl
push
jnp
inc
push
pop
cmpsb
add
shr
and
push
bound
jg
xchg
pop
bound
mov
cltd
add
mov
cmpsl
fcoml
pop
add
ljmp
jge
xchg
aad
adc
pop
push
in
push
pusha
cmp
int3
sub
jno
mov
in
xor
loope
hlt
or
fs
push
inc
jge
pusha
jge
pop
push
lds
inc
and
jle
cmpsb
ret
mov
mov
mov
add
add
icebp
and
mov
enter
push
pop
aam
dec
ret
push
sbb
xchg
insb
adc
or
daa
rorl
cmc
test
or
outsb
mov
xor
xchg
ja
cmpsb
pusha
in
scas
repz
sbb
push
shl
inc
test
roll
gs
sub
fs
mov
dec
adcb
push
sub
xor
loope
and
test
push
add
pop
inc
fildl
push
fs
into
fcmovnbe
aas
pushl
mov
sti
fs
pextrw
jno
jne
call
xchg
enter
test
popa
ja
dec
out
xorb
inc
pusha
gs
sar
iret
jne
dec
inc
cmp
pop
cltd
jmp
lea
std
mov
pop
jbe
insl
mov
mov
aas
pushl
and
sub
xor
and
sbb
jl
int
xchg
inc
pop
enter
repnz
inc
cld
sti
mov
or
or
mov
xchg
dec
cmpsb
ljmp
xor
movsb
cmp
int
cmp
iret
push
insb
mov
inc
loop
xor
or
cmpsl
mov
sbb
mov
cmp
clc
repz
imul
push
lods
leave
push
jmp
push
in
or
lret
mov
jae
jecxz
push
inc
and
mov
cmp
pop
mov
sbb
and
lock
ss
arpl
jbe
popf
pop
rol
xor
sub
cmp
inc
xchg
dec
jmp
popf
cmp
cmp
das
not
scas
mov
lods
fisubs
cmp
cmpsl
pop
or
mov
xor
int
dec
rolb
int3
notl
mov
cmc
sti
sub
dec
push
ljmp
mov
adc
call
cmp
xchg
inc
mov
loop
out
ffree
push
or
mov
sub
pop
add
inc
rol
pop
les
fadd
cmpsl
push
fldenv
jb
pop
mov
jg,pn
fwait
loop
out
fbld
outsb
mov
stc
cmpsb
xchg
sbb
push
lahf
or
lds
push
mov
mov
mov
test
or
xchg
loope
pop
push
xchg
bound
sbb
mov
lods
fstpt
fisubs
bound
jmp
aaa
inc
inc
lds
std
mov
das
xchg
mov
push
xchg
mov
les
push
out
sahf
xchg
data16
lea
in
mov
push
loope
stos
jl
push
mov
fadd
repz
addb
jae
ja
mov
repz
js
cmp
xlat
ss
les
and
jecxz
add
fs
call
and
push
mov
sbb
ljmp
dec
add
shr
sbb
lods
adc
sub
pop
or
xchg
and
mov
dec
sbb
sbbl
movsb
jb
push
push
sbb
lds
jbe
xchg
xchg
loopne
mov
fldl2e
or
out
outsb
and
add
sub
repnz
mov
push
jns
nop
je
and
test
mov
stc
xchg
mov
outsb
movl
decl
lahf
pop
fs
dec
dec
dec
and
mov
inc
jno
pushf
jns
or
cltd
ret
mov
pop
lret
dec
dec
cld
mov
mov
cmc
sub
dec
cmp
sbb
jecxz
mov
fistpl
test
push
pop
in
xor
arpl
in
imulb
inc
lahf
aam
adc
adc
xchg
arpl
into
clc
in
cs
stc
jp
jg
jb
bound
dec
out
mov
xchg
sbb
ljmp
int
mov
arpl
nop
add
or
and
fists
cmpsb
js
arpl
les
iret
int
push
xchg
das
cmp
sarl
cmc
leave
clc
inc
cld
leave
add
xor
mov
push
pop
js
repz
xchg
mov
jge
lret
and
xchg
xchg
or
jg
pusha
mov
jo
and
mov
dec
sub
imul
sbb
lret
stos
and
rorl
in
icebp
sbb
xor
test
lods
inc
inc
adc
push
xor
sarb
xor
or
mov
add
mov
outsl
push
out
jmp
adc
push
jae
dec
pop
push
jle
or
ss
decl
inc
sbb
in
jge
add
mov
ss
push
pop
imul
xchg
jle
rcrl
sti
jmp
push
jns
in
das
pop
cmp
cmp
xchg
pop
or
sub
sbb
push
addr16
adc
into
cld
aas
ds
lcall
insl
insb
lods
call
mov
jle
imul
jmp
loope
mov
inc
lods
mov
cmp
cli
mov
sbb
sub
pop
jb
lahf
or
loop
push
cmp
mov
fs
lret
xor
outsb
test
and
mov
and
push
mov
push
outsl
mov
sub
jne
pushf
jmp
iret
enter
pusha
mov
pop
sarb
or
mov
push
inc
out
add
jno
xchg
in
insl
ss
js
pop
pop
jg
cmpsb
aaa
enter
lret
les
hlt
arpl
push
mov
loope
mov
test
mov
adc
xchg
cmp
pop
jo
repz
lret
add
movb
daa
xchg
xchg
jo
addr16
js
sbb
or
or
mov
sbb
mov
push
and
mov
fpatan
jmp
outsl
popf
xor
cmp
add
fadds
ljmp
cltd
xor
jle
leave
or
sub
pop
jmp
fildl
sbb
out
pop
mov
push
f2xm1
cli
or
int3
dec
imul
sarl
sti
movsl
addr16
scas
sub
es
in
cmp
int
icebp
jl
xchg
mov
push
or
fstpt
jno
push
adc
jle
in
sti
lock
adc
cmpsl
cmp
pop
jnp
cmp
movsl
stc
sub
adc
fwait
add
cli
jo
out
dec
inc
lret
cmpl
les
dec
cld
xchg
cmp
dec
shrl
add
gs
xchg
scas
lods
bound
or
ljmp
adc
ljmp
or
pop
scas
push
add
pop
lods
inc
mov
iret
push
pop
mov
mov
test
cld
mov
mov
pop
in
xor
bound
stos
push
push
loope
push
sbb
aam
pushf
mov
outsl
mov
or
jl
aad
nop
dec
xchg
jl
jb
sbb
and
push
cmc
leave
sub
and
aas
mov
fcmovnbe
pop
das
mov
cmp
lahf
jge
mov
and
inc
es
inc
and
sub
inc
fistpll
and
pop
mov
pop
pushf
out
dec
push
scas
push
repz
lahf
push
mov
and
sbb
sarb
popf
jno
insb
push
xchg
pinsrw
dec
aaa
add
out
jbe
fistl
xorl
stos
test
mov
pushf
jecxz
sub
jmp
fisubrl
mov
movb
ficoms
mov
ljmp
fsubr
js
idivl
shl
adc
jnp
push
mov
mov
cwtl
mov
xor
cmp
in
insb
cmp
add
mov
xor
mov
xchg
loope
mov
add
cmp
jbe
pop
jno
add
scas
and
xchg
push
jae
das
mov
xor
pusha
sarl
ret
loop
dec
cmpsl
jns
lds
or
jg
mov
ret
lcall
sahf
imul
call
lcall
inc
cli
sub
sbb
repz
data16
xor
rcrb
cmpsl
insb
lock
ljmp
rcl
jl
mov
inc
or
in
mov
insb
push
mov
sahf
in
inc
jg
emms
add
in
cmp
push
lods
jmp
incb
sbb
or
mov
jge
loop
adc
push
outsb
int3
add
aad
jno
scas
js
repnz
fnsave
scas
mov
pop
out
sub
push
aad
push
push
inc
or
ja
push
stos
shlb
pop
cs
dec
adc
repz
jae
mov
pushf
and
adc
fcmovnu
push
push
daa
jg
movsl
push
jbe
jle
jmp
orl
imul
pop
push
repz
and
mov
aam
adcl
int
dec
cmpsl
cmp
pop
pop
in
add
add
adcl
in
test
xchg
adc
std
fcoms
gs
xor
in
mov
fwait
inc
dec
xlat
fucomip
dec
cmpsl
repnz
cmp
fnsave
andl
int3
push
push
mov
fnstcw
mov
stos
ja
int
hlt
shrl
lret
or
dec
dec
jg
jl
ret
je
pop
test
push
ret
cmp
shlb
mov
and
pop
jae
add
xchg
mov
movsb
pop
sub
imul
subl
add
daa
ret
push
jnp
sub
xchg
test
or
mov
loop
push
hlt
loopne
mov
arpl
fdivl
sbbl
loop
inc
pop
pop
aas
mov
jmp
fisubrl
jo
sub
divl
xchg
sub
cmc
cmpsb
ss
hlt
pop
inc
mov
insl
adcl
aad
mov
push
and
cltd
lock
xor
jecxz
jp
xchg
lahf
sbb
adc
sti
xor
rcll
jbe
dec
and
sub
ret
notb
outsl
dec
jge
mov
cli
pop
fmulp
xor
sbb
out
push
pop
ja
out
pop
je
xor
mov
sub
jae
sub
cld
cmp
dec
sub
mov
or
and
ja
jmp
or
sarb
cmp
jae
push
dec
fistpll
push
inc
mov
xchg
test
imul
adc
aam
push
cmpb
or
push
cli
sub
subl
mov
popf
cmp
jl
cmp
jo
jb
arpl
cmc
add
sbb
scas
xlat
adc
mov
std
imul
cmp
dec
and
test
pop
add
stos
lret
cmp
mov
andb
cmpsb
cmc
dec
add
jecxz
or
es
pop
fs
cmc
popf
fisttpl
pusha
shl
xchg
cmpsl
dec
cmc
aam
aam
pop
sub
push
fsubrp
adc
es
jle
cmpsb
mov
push
jns
lods
push
xor
rcr
sub
jl
mov
mov
clc
inc
shrb
cmp
push
leave
imul
mov
xchg
sar
je
pop
lahf
rorb
je
les
rcr
fcmove
imul
push
test
xchg
cltd
icebp
decb
sub
frstor
enter
clc
jle
mov
stc
ret
mov
mov
aas
dec
inc
cmp
mov
mov
push
lods
test
sti
in
sub
jp
jmp
cmp
mov
push
ds
cltd
xchg
jp
mov
mov
inc
push
inc
int3
mov
mov
cmp
mul
jno
out
adc
inc
add
ss
pop
xor
icebp
mov
and
fistps
out
jbe
lods
scas
cmp
xor
call
sbb
je
negb
mov
in
cmc
test
jae
jg
xor
int3
gs
stos
sbb
addr16
inc
xchg
mov
push
es
push
xlat
push
jp
imul
xor
into
sbb
ret
mov
hlt
sub
sbb
mov
push
dec
sbb
dec
mov
into
in
fisubs
popa
jmp
mov
icebp
cmpl
push
ljmp
jae
mov
mov
push
add
jbe
mov
cmp
jecxz
xchg
jp
leave
lret
jns
cli
cld
jno
lret
je
xor
js
call
pop
cmp
push
insb
sbb
mov
test
cmp
or
sti
dec
mov
add
lods
sbb
popa
push
adc
mov
cltd
push
in
fildll
cltd
scas
call
or
or
push
push
add
std
mov
data16
sbb
leave
xor
fsubrs
or
xchg
xchg
incb
leave
mov
roll
add
dec
jmp
mov
jmp
enter
clc
ficoml
ret
mov
adc
scas
movsl
add
push
sbbb
in
imul
mov
aas
mov
sbb
mov
out
sub
cld
push
movsb
lds
dec
dec
movsb
ljmp
hlt
in
inc
push
sti
sbb
push
pushf
fsubrl
dec
movsl
mov
xor
mov
addr16
add
xchg
nop
inc
pushf
adc
call
loop
scas
push
mov
ljmp
outsw
and
cmp
xchg
adc
xor
pop
mov
sub
rcr
pop
jl
lds
cmp
sahf
cmpsb
mov
cli
hlt
pop
jmp
mov
pop
fwait
incl
test
loop
sbb
add
or
daa
push
ss
hlt
lds
push
xor
adc
ftst
std
inc
aam
mov
into
mov
aaa
push
pop
mov
sti
xor
push
xchg
jle
imul
dec
out
dec
push
mov
mov
loope
dec
xor
inc
xchg
push
fwait
loopne
inc
lahf
nop
mov
insb
in
jno
pop
idiv
arpl
call
daa
movsb
jb
std
fistpll
push
inc
cli
jmp
aam
fwait
aam
gs
imul
sar
lods
and
cwtl
jae
jae
ds
arpl
aad
ret
bnd
rorl
jle
mov
jg
lret
xchg
outsb
jns
stc
push
pop
xlat
das
add
xchg
icebp
mov
jg
adc
adc
mov
insl
jecxz
xchg
roll
cwtl
mov
and
fdivs
pusha
mov
mov
pmulhw
adc
xlat
or
test
mov
je
mov
pop
in
and
xor
cmp
std
rclb
pop
lock
pop
cltd
mov
gs
in
push
jne
xor
stc
cmp
mov
inc
pop
fwait
testb
mov
inc
sbb
add
sti
bound
in
inc
mov
cmpsb
and
lret
jecxz
shr
push
aad
pop
and
test
push
xchg
jle
repnz
arpl
ss
mov
outsl
int3
sub
xchg
add
enter
adc
push
mov
daa
jg
hlt
rorb
and
mov
outsl
mov
cmpsb
pop
insl
sub
mov
mov
mov
jge
icebp
loop
movsl
jge
lods
loope
insl
mov
dec
sub
aaa
pop
and
rorb
and
jp
in
dec
xchg
adc
iret
cmp
loope
cmp
scas
xor
addr16
pop
stos
das
les
xchg
ljmp
sub
sub
repnz
push
std
lods
pop
jo
and
repz
mov
push
dec
mov
or
mov
js
add
mov
dec
and
mov
xchg
mov
jecxz
xor
repnz
push
xchg
mov
shlb
into
dec
repz
movsb
push
push
outsl
imul
jle
dec
imul
sbbb
adc
dec
jno
sbb
sub
mov
call
cmp
add
fs
cmpsl
mov
sbb
push
and
loopnew
dec
outsb
or
cs
xor
inc
nop
lods
dec
rolb
pop
mov
cmp
pop
jp
out
push
add
mov
inc
jbe
idiv
iret
push
mov
cmp
cmp
lock
sbb
mov
mov
mov
test
or
adc
mov
xor
or
lea
and
cmpsl
mov
lea
dec
sub
imul
add
repnz
ror
jae
outsb
popf
adc
mov
hlt
stos
jmp
pop
push
mov
adc
xor
ror
in
divb
stos
cli
insb
scas
into
cs
aam
adc
std
sbb
cmp
jns
inc
cltd
cmpsl
xchg
mov
daa
stc
fiadds
push
push
mov
mov
mov
mov
je
pop
insb
shlb
add
push
jbe
flds
xor
leave
out
dec
jnp
lods
sbb
xor
ret
addr16
jnp
and
xchg
lahf
and
out
into
ficoml
sbb
ret
ret
push
jg
sub
test
es
push
hlt
sbb
mov
sub
rcr
shl
ss
bound
inc
gs
lret
or
mov
cmc
aaa
in
add
push
pop
adc
popf
movb
insl
mov
jnp
sahf
and
icebp
rclb
dec
xor
iret
cli
jnp
test
das
cmpsb
jnp
pushf
push
ret
jo
add
stc
test
sbb
adc
movsl
push
jecxz
or
hlt
test
stc
stc
jle
mov
adc
push
push
sub
pop
divl
pop
inc
lea
lock
adc
sti
xchg
mov
push
in
int3
pop
xor
repnz
mov
jbe
jle
outsl
mov
icebp
loop
xchg
dec
fstpt
adc
stc
aam
add
rorl
mov
jno
cmp
sbb
pop
inc
aam
push
frstor
and
in
adc
icebp
jecxz
pop
cld
fwait
orb
jae
cli
negb
or
push
fcomip
mov
inc
jle
jl
rcll
lock
mov
adc
mov
lahf
ror
xchg
inc
das
inc
sub
ret
ret
mov
mov
sub
shrl
inc
int3
xchg
aaa
popf
pop
js
adc
fdivr
xlat
ja
mov
add
xor
ret
test
mov
out
lock
in
push
mov
fimuls
inc
adcl
clc
sub
jbe
push
andl
aas
lret
adc
sub
lahf
into
je
fxch
fsubrs
repz
fldenv
rorb
ja
jno
dec
jo
xor
idivb
pop
jmp
push
xchg
pop
add
mov
adc
popa
es
jl
jge
jns
xchg
enter
inc
bnd
jle
jns
pushf
cmc
lret
sub
xor
xchg
jno
inc
pop
add
mov
xchg
dec
lahf
je
aad
mov
xor
and
negb
push
inc
iret
dec
neg
pop
mov
pop
addr16
mov
jns
mov
ss
fldt
test
shlb
orl
adc
inc
jecxz
scas
pusha
mov
jno
iret
je
rcrb
ss
mov
sbb
cltd
mov
mov
in
lret
popa
fimuls
inc
xor
and
mov
leave
jg
add
movsl
insb
es
xchg
std
and
and
sub
lock
adc
test
shll
xor
clc
mov
fnsave
push
mov
jmp
sbb
outsl
and
out
sbb
xor
int3
into
cli
pop
and
into
jno
mov
rorl
lahf
xorb
cmpl
and
stc
adc
and
sbbl
push
push
xor
int
push
or
pop
mov
cwtl
or
test
cmp
lods
repz
call
mov
inc
fidivs
cli
xor
pop
mov
xchg
jge
movsl
cmpsl
fwait
cltd
xor
loopne
cmp
je
adc
ret
es
sti
xchg
icebp
idivl
ret
cwtl
orl
pop
fldcw
xor
rorb
jae
jmp
sbb
aaa
inc
mov
std
dec
mov
and
mov
imul
daa
xor
pop
subl
pushf
in
inc
fldenv
sbb
stos
and
out
pop
and
ret
dec
mov
data16
add
lock
loop
popa
mov
pop
dec
adc
sbb
mov
ficoms
sub
add
sbb
divb
std
mov
add
or
aad
sub
out
or
insl
stos
pop
sub
adc
jmp
xor
mov
inc
push
add
xor
je
mov
lods
mov
rolb
mov
jmp
adc
je
cs
lods
fwait
hlt
mov
push
and
mov
shll
dec
fcmovbe
jae
cmp
pusha
and
repz
addl
jne
and
xor
adc
jne
rcll
sub
out
in
xchg
fmull
mov
cwtl
or
inc
jo
loop
lret
mov
lock
adc
stos
sahf
imul
andb
lcall
sub
shr
xchg
out
mov
adc
ret
pop
popf
jb
stos
sub
pop
adc
or
outsb
scas
pop
out
mov
sbb
cmp
xchg
enter
insl
and
mov
dec
mov
mov
sbb
sub
js
xor
mov
loop
mov
cmp
lret
dec
xor
dec
pop
inc
sbb
lea
dec
imul
dec
mov
and
xchg
clc
sbb
in
sti
pushl
or
push
loopne
in
inc
xchg
cmp
inc
xchg
jne
fdivr
adc
adc
ds
mull
inc
in
add
cltd
mov
dec
add
adc
test
stos
ret
pop
or
lea
jbe
ja
ja
mov
jo
jo
loopne
xor
add
mov
mov
jae
push
mov
cli
xchg
sub
andb
adc
add
xchg
mov
mov
pop
in
les
push
or
xchg
add
js
mov
and
outsb
dec
je
stos
push
mov
sahf
insl
addr16
inc
lret
mov
push
cli
push
addr16
push
mov
mov
clc
scas
fisttpl
icebp
pop
push
or
xor
mov
add
inc
sub
add
lods
cli
insl
in
sub
and
std
add
mov
leave
add
rorb
pop
into
mov
repnz
pop
cmp
mov
popa
or
fmull
cmp
ja
je
inc
mov
cmp
mov
mov
mov
add
sarl
lahf
mov
or
data16
mov
aas
sbb
push
popa
xor
out
lret
js
imulb
mov
push
push
xchg
push
cmp
pop
daa
xchg
fdivs
xlat
outsb
iret
adc
jecxz
or
push
jp
mov
jae
jno
pop
testl
sub
inc
or
fdivrp
jp
mov
mov
stos
incl
cmp
xor
pop
in
and
or
or
repnz
insb
fwait
lahf
cwtl
data16
mov
cmp
jae
mov
ret
or
or
lods
aas
and
loop
lea
test
mov
sti
data16
mov
adc
add
xchg
add
cmp
lea
and
push
dec
mov
push
sub
sbb
adc
inc
lcall
repz
pop
mov
add
loopne
push
mov
sub
int
mov
or
addl
ret
in
ss
xor
gs
imul
mov
fisubrs
lahf
pop
test
and
test
jle
push
dec
mov
xlat
adcb
add
rcrl
or
stc
rorl
lds
adc
jns
fidivrs
out
sub
dec
mov
addr16
xor
das
loope
jmp
mov
popa
pop
cmp
imul
mov
fdiv
scas
lea
popf
fcoms
sub
xor
mov
inc
rol
push
ret
push
mov
mov
inc
pop
jge
or
adc
aas
xchg
pop
jo
add
bsf
cmc
out
sbb
pusha
lods
cmp
inc
int3
mov
std
pop
pop
inc
jl
test
fdivrl
dec
roll
movl
scas
pop
loopne
push
mov
dec
xchg
fdiv
dec
sub
and
mov
add
fs
repnz
clc
mov
bound
fisubl
cmp
jmp
jecxz
adc
mov
mov
roll
add
movsb
jne
mov
sbb
popf
lods
pop
pop
jl
push
lret
lea
sahf
and
mov
mov
sarb
bound
rorl
xor
xor
in
fcoms
and
dec
aaa
roll
xlat
dec
sbb
add
cmc
xorb
xchg
les
push
insl
dec
fsubrs
stc
pushf
popf
push
cmp
mov
sbb
mov
xchg
xlat
lods
push
inc
subl
sub
fnstenv
out
stos
xor
insb
nop
jno
jbe
pop
stos
push
sbb
cmp
pop
xor
leave
jnp
iret
push
cmp
mov
and
push
imul
sbb
je
lds
and
adcb
dec
xchg
and
adc
mov
mov
ljmp
leave
pop
push
rolb
xchg
into
sub
mov
je
jae
shrb
inc
xchg
xchg
in
push
imul
sub
and
sub
out
push
neg
push
adc
sub
mov
stc
outsb
mov
fsts
or
lret
sub
mov
sbb
lret
mov
adc
xchg
insl
repz
in
movsb
push
cs
outsl
sub
add
dec
fnstsw
mov
call
push
pop
lock
ja
pop
lsl
loopne
inc
jb
and
cmp
out
pusha
mov
pop
sub
imul
mov
push
pop
adc
sub
sbb
cltd
adc
mov
adc
pop
loop
hlt
xor
mov
mov
adc
adc
andb
jae
xchg
test
sbb
push
sbb
sbbl
shr
pusha
and
popa
pop
ds
adc
dec
repnz
sbb
dec
pop
adc
xchg
inc
adc
imul
cwtl
fdivs
imul
push
imul
jns
out
mov
and
adc
pop
clc
dec
or
aaa
jns
ljmp
jp
aaa
in
mov
fcoms
adc
mov
jo
fwait
xchg
xor
add
hlt
inc
xchg
cmpb
cmp
pop
hlt
or
xchg
xchg
xchg
or
mov
cmp
push
movsb
std
push
dec
icebp
das
xchg
nop
add
mov
lret
fimuls
lea
mov
fwait
insb
cs
arpl
out
sbb
inc
mov
jns
pushf
fldl
xor
popa
xor
int3
mov
adc
jb
das
jno
call
cmp
sbbl
fsts
mov
mov
push
mov
sbb
cmp
sarl
popl
xchg
inc
jge
adc
shlb
das
xchg
add
lods
jno
sbb
imulb
or
push
and
mov
bound
mov
push
in
sbb
dec
addb
int3
push
shrl
xchg
cmp
push
fnstenv
repz
jns
mov
xor
dec
adc
inc
xchg
adc
fidivs
cs
aad
sbb
push
das
aas
jnp
dec
inc
pop
push
btcl
or
mov
cwtl
addl
ss
imul
pop
cli
repz
jge
xor
dec
fs
jne
add
ss
lar
jne
pop
pushf
pop
pushf
mov
sahf
push
adc
inc
movsb
aaa
inc
js
cmp
dec
bound
xor
test
mov
and
or
arpl
jp
insl
push
out
filds
bound
fcmove
push
scas
mov
cmpsl
push
add
mov
out
and
out
push
aaa
mov
popa
fisubs
mov
in
inc
cmc
pop
mov
cmc
lds
push
mov
hlt
scas
movsb
es
movsl
cmpb
adcb
or
jecxz
loope
cmpsb
xor
jge
or
inc
lock
xorl
push
lods
sub
stc
lret
pop
movsb
imul
and
loopne
add
adc
sti
pushf
ret
insl
imul
adc
push
sti
daa
popf
enter
test
mov
shlb
add
cs
mov
and
test
hlt
out
cmp
jp
xchg
hlt
xchg
mov
bound
and
in
push
rcr
mov
pop
inc
aam
shl
pop
mov
dec
dec
sub
jns
lock
fistpll
jo
rcll
lock
bnd
pop
inc
cs
jg
dec
or
jle
inc
outsb
shlb
lret
dec
addr16
test
inc
inc
jle
inc
sahf
rol
pushf
jb
cmp
cli
sub
aam
test
sti
hlt
mov
push
mov
jb
fists
cmp
mov
lds
lock
xor
adc
push
loopne
fdiv
lock
aaa
pop
inc
inc
xor
out
hlt
mov
adcl
iret
cmc
or
fmull
jo
ror
call
nop
into
dec
addl
stc
rcll
test
and
sarb
out
std
loop
xchg
pop
mov
and
push
insb
cmp
fstpl
repz
dec
out
xlat
aad
out
and
je
sbb
test
xlat
fisttpl
adc
cmp
lock
movsb
jg
scas
ja
mov
les
enter
dec
jmp
fwait
add
fsts
imul
clc
mov
push
shrl
mov
jle
subb
loope
push
inc
xor
mov
fcoms
out
push
jne
lret
sub
cmp
cmc
xchg
lahf
out
movsl
imul
jmp
pusha
lret
test
aaa
cmpsl
xlat
into
shr
cmp
scas
push
pop
cli
pop
add
das
lahf
pop
cmp
in
shr
stos
push
insb
xchg
jns
mov
leave
pop
cmp
negl
cmpsb
insb
int
enter
fadd
dec
sub
jns
dec
xchg
jo
in
add
mov
loope
inc
xchg
shlb
rclb
nop
stc
cmp
mov
mov
push
aas
in
dec
mov
inc
arpl
fnstsw
push
dec
jecxz
aad
sub
xchg
sub
xchg
mov
adc
xor
popa
rcl
sub
inc
pop
fwait
aam
push
hlt
aam
push
xor
xor
dec
jbe
pop
sbb
xor
adc
daa
jg
sbb
cmp
lahf
leave
sahf
aam
pop
jp
ror
sub
pop
add
or
test
inc
and
and
pusha
inc
pop
mov
or
stos
movsb
lret
ljmp
mov
or
aaa
inc
and
inc
pop
sti
xchg
aad
inc
or
pop
cld
out
adc
push
ds
push
call
vmwrite
add
push
lret
mov
or
push
jle
cmp
and
and
test
scas
lea
xchg
stos
cmp
xor
jae
fsubrs
popf
xchg
jmp
cs
pop
rol
sbbl
out
cli
fstps
imul
mov
inc
mov
jno
loope,pt
jns
in
pop
iret
jecxz
loop
rol
scas
xchg
jnp
mov
mov
push
roll
stos
es
in
lods
cs
cmp
lahf
insb
dec
out
jnp
insb
push
ret
in
cmpsb
pop
mov
shrb
cs
mov
shrb
insl
sahf
jbe
test
psubusb
xor
and
movaps
adc
mov
jp
add
add
pop
repz
inc
sub
ss
sub
out
loop
adc
ret
pop
mov
jae
add
cmp
xor
mov
jbe
and
inc
subl
lret
daa
mov
mov
popa
xor
cli
loopne
inc
icebp
pop
movsl
cmpsl
dec
ret
xchg
jo
jle
mov
cmp
xor
cmpsb
enter
push
mov
arpl
movsl
sbb
in
sub
pop
mov
cmp
out
pushf
mov
dec
adc
aam
xor
mov
sub
nop
push
scas
jae
or
es
and
jmp
mov
roll
xor
bound
imul
inc
std
lds
cmc
aaa
adc
rcrl
add
dec
cmp
cmp
dec
daa
pop
mov
mov
push
scas
and
dec
and
clc
mov
lock
ret
into
lea
and
rorl
in
mov
pushf
testl
call
fs
mov
pop
fs
mov
js
dec
inc
das
lods
or
popl
sbb
mov
int3
icebp
cmp
fs
test
inc
fimuls
mov
test
cli
notb
bound
xchg
cmp
in
xchg
adc
rcrb
popa
mov
mov
pop
loopne
out
pop
fmulp
sub
adc
dec
ljmp
lods
jne
je
add
pop
mov
movsb
mov
clc
scas
and
push
mov
out
xor
pushf
mov
push
sub
sub
out
sub
dec
dec
fcoml
imull
icebp
test
in
dec
adc
ret
data16
xchg
push
xor
pop
sbb
in
sarl
or
mov
and
mov
mov
les
in
int3
icebp
insl
gs
cs
mov
mov
fistpll
notb
negb
test
into
data16
dec
dec
xor
arpl
dec
call
sub
callw
fs
xchg
adc
adc
inc
xor
add
inc
iret
mov
xor
lcall
sbb
out
pop
dec
cld
outsl
xor
push
jge
push
divb
and
jecxz
dec
mov
in
xor
dec
movsl
and
and
lcall
jp
xor
out
jp
sarb
mov
nop
ljmp
rorl
adc
popa
inc
mov
mov
mov
inc
sarb
jmp
cld
xor
xor
and
mov
or
sbb
hlt
inc
dec
dec
push
dec
loope
and
sbb
push
sub
add
jp
push
push
jb
push
fcompp
das
dec
sbb
sub
nop
ljmp
ret
lea
jp
ss
lds
imul
ret
fbld
repnz
sub
xlat
jbe
inc
or
dec
add
mov
aaa
mov
aad
iret
cmp
rcll
sbb
pop
decb
loope
mov
jo
fs
adc
incl
fisubrl
in
mov
xor
inc
ds
cli
xchg
xlat
sub
ds
inc
push
cmp
jns
data16
in
sbb
adc
das
mov
mov
jecxz
stos
mov
mov
int3
sarb
mov
mov
inc
add
or
mov
push
in
rcrl
jae
fdivrs
xor
push
into
adc
inc
cmp
bound
mov
mov
mov
add
dec
jno
fs
or
mov
into
fidivrs
test
arpl
mov
sub
and
jne
jnp
lret
mov
mov
dec
bound
or
jb
iret
pop
sub
int
leave
cmpsb
mov
mov
or
subb
ds
je
ret
shlb
ficomps
cmp
dec
test
inc
insl
cld
nop
add
jnp
cmpsb
divb
movsb
cmp
in
and
insl
mov
imull
mov
stc
test
cs
fdivr
in
clc
bound
inc
les
mov
dec
sub
cltd
shlb
xor
mov
xchg
push
call
mov
jns
ficompl
icebp
inc
sub
push
lock
pushf
imul
mov
add
xor
ret
pop
in
enter
mov
movsb
leave
jecxz
in
inc
jno
fwait
or
xor
stos
and
xchg
xchg
neg
fsts
or
and
fimull
test
mov
mov
jmp
arpl
add
push
mov
xchg
push
lret
mov
dec
je
pop
mov
clc
pop
leave
lds
mov
inc
lds
and
mov
mov
xor
loope
stos
sub
ljmp
out
sbb
pop
ret
add
xor
mov
arpl
adc
jno
lret
xchg
dec
and
add
lea
bound
push
dec
popf
mov
mov
or
ja
divb
push
lods
jo
lret
fdivrl
sbb
or
repnz
jnp
xchg
movsb
mov
xchg
es
jne
jb
ja
pop
pop
add
xor
mov
xchg
or
push
ss
in
lock
fldcw
sub
rorl
sub
mov
enter
dec
jns
cmpl
call
sti
fiaddl
xchg
cmc
add
push
cmp
cmp
sahf
sub
jne
repz
cmp
cltd
mov
pop
lea
jns
mov
test
add
jb
pusha
cltd
mov
cmc
mov
shl
xor
into
ja
sbb
idivb
push
aas
aaa
cmpsl
cmpsb
addb
in
sbb
andl
add
je
cmp
cmp
sahf
xchg
cmp
cltd
xchg
imul
dec
stos
xchg
or
pusha
and
cmpsl
aas
nop
sbb
pop
and
lods
into
mov
mov
imul
push
lcall
pop
test
push
jb
sbb
add
fsubs
pushf
mov
push
push
push
add
push
ds
fstpt
popf
mov
popf
stos
and
dec
mov
nop
mov
sub
in
das
in
shrb
outsl
std
pop
mov
add
dec
iret
add
mov
sbbb
nop
sti
mov
cltd
mov
sbb
xchg
jnp
rolb
pop
mov
mov
iret
and
or
sahf
dec
test
sub
ja
jae
inc
add
jge
inc
xorl
lahf
repnz
xor
arpl
movsb
or
sub
shrl
mov
pop
adc
push
jbe
rorb
aam
cmp
mov
cmp
inc
push
loopne
jne
ss
sub
mov
sub
push
rclb
mov
mov
ret
out
xlat
sbb
add
and
dec
lock
add
sub
xchg
les
dec
pop
hlt
inc
lahf
push
es
cmpsw
fsubr
push
outsl
into
jns
fcompl
pop
daa
int3
fmul
jmp
xor
jg
movsb
ljmp
sar
cmp
or
fisubs
bound
out
push
jg
sbb
inc
enter
mov
stc
sub
adc
out
lods
inc
in
sbbb
ret
out
enter
pop
sarl
js
cltd
out
push
dec
scas
lret
sahf
cs
rcrb
cltd
cmpsb
repnz
cwtl
push
sbb
aas
mov
push
insb
and
or
dec
lea
leave
jg
push
adc
xchg
adc
mov
mov
push
inc
int
xlat
mov
xor
shlb
jmp
fbstp
daa
scas
push
loope
test
xlat
movsb
push
pushf
ret
add
stos
or
inc
push
mov
test
xchg
sarb
jge
fsubl
mov
jo
outsl
mov
mov
outsl
jno
or
cltd
mov
mov
lock
ss
pop
rorb
stos
adc
mov
insl
add
and
adc
cmpsl
push
mov
push
push
out
inc
pop
int
ja
pop
out
mov
xor
lods
push
xor
mov
or
fucomip
and
jecxz
lret
scas
sbb
xorb
pop
xchg
mov
movsb
dec
popa
pushf
ljmp
jmp
mov
in
add
mov
dec
orl
ss
mov
nop
add
xchg
dec
jl
fsubr
xchg
lret
lahf
pop
inc
push
jne
or
inc
cltd
cmp
popa
dec
int
gs
sbb
push
aaa
nop
inc
ljmp
pop
js
and
jo
xchg
dec
sbb
sbb
outsl
xor
les
pusha
jmp
insl
mov
jmp
xchg
in
jl
adc
adc
lods
rclb
stos
and
shl
or
loop
stos
dec
test
daa
int
icebp
mov
pop
stos
add
sbb
pop
fstps
fcompl
jbe
shrl
mov
xorb
int3
push
test
mov
jecxz
fwait
aas
not
mov
sbb
and
or
sahf
sahf
xchg
cmpb
mov
lcall
in
lods
cmp
xchg
adc
pop
push
mov
out
nop
mov
out
pop
inc
mov
mov
inc
cmpsl
or
lods
mov
xchg
push
push
push
sahf
scas
leave
add
mov
in
mov
jg
movsb
jmp
mov
mov
jle
fwait
xchg
jle
xor
pop
inc
test
push
fstpl
subb
les
fnstcw
or
sbb
sub
sbb
xchg
insl
sub
test
push
ljmp
or
xor
fistpll
push
cwtl
cmpsl
das
arpl
pop
into
rorb
imul
xchg
and
xchg
mov
out
leave
mov
inc
iret
cld
mov
in
in
aad
dec
jne
enter
sbb
adc
jnp
sti
stos
in
xorl
pop
push
sub
pop
pop
sub
nop
filds
out
out
roll
push
jl
push
or
cli
js
addr16
lahf
in
adc
adc
ret
stos
mov
movsl
lcall
lret
push
leave
test
imul
in
push
out
shrb
test
sub
aam
or
jo
cmp
cmpsl
pop
out
inc
adc
xchg
and
mov
insb
rolb
xlat
mov
fdivs
es
movsb
sahf
cmp
aaa
mov
fiaddl
mov
cwtl
pop
int
lahf
adc
nop
xchg
iret
ljmp
outsb
cmp
pushf
daa
or
mov
cmp
xchg
lret
aas
sub
add
push
mov
aas
pushf
nop
mov
jns
sub
stos
pusha
in
out
push
std
iret
int
or
je
jge
ret
call
outsb
jecxz
xlat
mov
repnz
into
mov
movsb
push
mov
imul
sbb
xchg
xchg
jecxz
je
sahf
pop
push
pop
mov
add
hlt
fisubl
xchg
stos
scas
mov
lcall
dec
sbb
movsb
and
aaa
ds
add
hlt
lds
scas
cmpsb
push
leave
and
pop
mov
push
addb
shlb
sub
ljmp
xchg
sbb
adc
in
out
test
pop
pusha
cmp
daa
xchg
and
sub
xchg
or
and
fidivrl
outsl
subl
enter
lret
mov
sarl
into
lods
popf
clc
sub
pop
xor
decl
dec
xlat
mov
mov
ss
imul
ffreep
jl
test
faddl
es
lods
lods
pop
push
adc
jne
adc
xor
jno
outsb
or
push
add
into
sub
repz
outsl
jns
pushf
lods
cmp
pop
gs
inc
pop
insb
adc
test
ja
outsb
mov
lret
sbb
lock
jns
pop
std
ja
mov
outsl
lds
sbb
inc
enter
das
cmp
pop
rol
add
out
into
sbb
dec
lods
inc
push
cs
cmpsb
icebp
and
ret
movsb
movsb
mov
sub
cmp
jns
pop
jle
xchg
add
lcall
push
xlat
in
imul
push
das
sbb
jecxz
sub
lock
adc
sub
scas
test
xchg
shll
dec
sbb
adc
sbb
sub
sbb
out
add
add
inc
ds
or
movsl
sub
inc
pop
sub
add
fidivrs
mov
cmp
xchg
out
fcoml
jbe
push
jp
inc
fsubrs
xlat
in
insb
lret
or
jmp
jmp
mov
adc
leave
cmp
loopne
push
jnp
out
or
dec
frstor
mov
cmp
popf
rcrl
jg
fmul
test
push
mov
mov
mov
push
lds
popa
jge
ss
repnz
jg
add
push
lcall
aam
push
inc
jmp
rorl
scas
sarw
mov
dec
jmp
mov
insb
jg
ja
fsubl
inc
shll
lods
push
loopne
loopne
into
xorb
lret
jb
dec
rclb
pop
jns
xchg
dec
imul
test
inc
fnstcw
dec
push
add
ret
cmc
shll
pop
cmp
mov
mov
icebp
sbb
dec
and
and
add
sub
add
push
mov
pop
sbb
inc
movsb
or
rclb
lcall
adc
add
int
cmc
out
mov
and
insl
lods
ds
dec
jno
mov
sbbl
cmp
jb
dec
in
jmp
out
sub
repz
ret
ret
xchg
iret
stc
xor
daa
int3
lods
ss
xchg
xorl
sub
push
int
sbb
in
xor
hlt
adc
ret
push
pop
pop
insl
fldt
xor
outsl
aas
shrl
push
pop
pop
inc
int3
sub
ljmp
clc
mov
addr16
pushl
icebp
enter
in
cmp
mov
fistl
dec
stos
cmp
mov
xchg
pop
push
insb
xor
outsl
insb
pushf
hlt
arpl
aaa
xchg
xor
ret
inc
icebp
ret
jno
jne
aam
rcrl
je
movsl
ljmp
mov
xor
and
lea
sbb
mov
fisubrl
outsb
out
jecxz
aaa
or
xchg
xor
jge
ficoml
in
jp
mov
call
lods
clc
push
dec
add
gs
jo
xor
mov
push
xchg
or
js
mov
ret
xorl
sub
hlt
js
adc
dec
out
addr16
ss
je
out
arpl
sbb
xor
jns
jg
mov
stos
mov
rep
in
shrb
pushf
popf
xchg
dec
and
call
rcr
loop
xchg
jle
sub
frstor
or
cwtl
test
and
mov
aas
xchg
std
ljmp
pop
mov
fnstcw
les
and
push
and
push
push
scas
inc
pop
mov
xchg
sbb
xor
adcl
mov
mov
adcb
push
lods
repnz
cmp
push
movsl
adc
scas
out
push
sbb
dec
out
in
cmp
or
mov
pushl
repz
iret
pop
pop
mov
ret
mov
sbb
clc
adc
sub
lret
pop
test
imul
mov
lock
lock
subl
pop
fiadds
pop
cmp
pop
cmp
adc
push
xlat
mov
sub
mov
mov
inc
xorl
jbe
fsub
out
push
push
hlt
jne
pop
sbb
repz
ret
sbb
jmp
pop
call
jb
jno
addl
jmp
pusha
xor
mov
mov
jae
cmp
and
into
push
pop
orb
mov
dec
inc
jb
rolb
iret
xacquire
andb
das
inc
dec
rep
stc
pop
jo
mov
mov
lock
mov
dec
loop
cmpl
rclb
xlat
cmpsl
fcmovb
les
sub
push
dec
cmpsb
bound
imul
inc
mov
scas
and
in
mov
inc
stos
loopne
leave
sbb
imul
lods
push
insb
add
push
mov
in
daa
js
sub
test
outsl
inc
mull
out
sti
fldt
jge
ds
push
mov
ss
in
hlt
cltd
test
stos
mov
sub
test
inc
or
push
aam
jg
push
and
mov
iret
adc
pop
sbb
mov
xchg
adc
and
jae
mov
icebp
hlt
sub
popa
leave
push
xor
inc
or
jle
inc
mov
push
mov
or
cmpb
roll
sbb
ja
aam
cmp
rcll
test
dec
push
call
sub
fimull
or
mov
mov
jno
or
rcrb
pop
add
roll
or
xchg
pop
mov
xchg
sbb
inc
adc
push
jb
sbb
fs
mov
sub
or
jp
adc
xchg
loope
xchg
stc
push
std
cmp
mov
imull
int3
push
push
mov
cmp
xor
inc
xor
jo
in
ret
mov
je
push
scas
mov
jbe
cli
int3
push
jns
cmp
dec
imul
scas
ret
sub
pop
mov
clc
incl
mov
jl
push
mov
out
test
and
rclb
sbb
pop
mov
leave
pop
lds
jns
les
int
xlat
je
and
scas
cmp
mov
mov
loopne
jmp
test
popl
lahf
pop
sub
ret
cltd
pop
xchg
insb
mov
in
dec
mov
shrl
jge
icebp
adc
cmc
sub
push
adc
sbb
inc
ja
daa
int3
inc
pop
nop
int
mov
cwtl
movq
xor
ljmp
cmc
in
sahf
push
ret
push
mov
cwtl
repz
daa
movsl
shl
pushf
pop
xchg
cmp
insl
jns
test
sub
push
push
ljmp
gs
push
push
jmp
fstps
enter
hlt
adc
in
mov
mov
fsubs
push
adc
dec
push
dec
adc
mov
cmp
dec
jg
adc
cld
dec
das
int3
dec
push
imul
push
loopne
lods
push
fyl2xp1
std
lods
push
mov
xchg
fst
mov
jnp
jmp
add
inc
movsl
pop
jo
and
outsl
cmp
dec
das
in
mov
mov
push
push
mov
inc
cs
call
xor
add
xchg
dec
add
dec
xchg
fcompl
cmpb
lock
push
hlt
test
movsl
add
jae
adc
jmp
mov
mov
test
fiaddl
test
stos
mov
pop
xor
inc
aaa
int
adc
call
divb
dec
jne
cmp
popa
lret
fdivrs
mov
imul
mov
dec
xor
sbbb
pop
ret
push
sarl
push
add
mov
sarb
mov
subb
xchg
fucom
mov
adc
jl
xchg
stos
fwait
lahf
xchg
xor
call
je
lret
rorb
pushf
out
sub
xchg
out
sub
push
das
sub
in
sbb
outsb
inc
mov
ss
fisubl
popf
lock
test
jecxz
cmc
push
push
inc
fbstp
stos
jae
popa
pop
enter
mov
fmull
dec
lock
pop
fldt
push
andb
push
xor
and
test
pop
jle
xchg
lods
cld
ljmp
lock
jl
mov
xchg
mov
popf
in
and
mov
cmp
mov
xor
out
dec
js
mov
and
cltd
jmp
insl
clc
stos
fistps
or
fldl
rcll
pusha
les
int3
pushf
jecxz
push
jns
mov
lahf
add
lcall
shll
ljmp
into
aam
fadds
pusha
insl
jne
js
cmp
pop
xchg
out
punpckhdq
out
or
mov
fistpll
fcomps
dec
addl
insl
testl
movsb
aaa
cs
mov
dec
xor
lret
dec
xchg
sbb
je
test
dec
mov
mov
mov
out
pop
cltd
cmp
lahf
aas
cmp
ja
test
mov
fists
sti
or
test
je
xchg
jnp
cmpsb
enter
xchg
cmp
inc
pop
mov
pop
push
das
repz
mov
mov
mov
and
inc
ds
pop
push
inc
adc
jno
adc
fistps
jo
jle
jnp
inc
notb
xchg
movb
mov
or
bound
and
aad
repnz
mov
js
imul
and
or
movsl
inc
in
add
pop
sbb
push
cltd
xor
push
pop
cmpsl
xor
jle
fldenv
fisubs
pop
jb
gs
test
xor
ljmp
jae
sub
movsl
lock
in
leave
test
js
push
cmc
mov
push
out
inc
loope
cmc
test
lods
test
call
enter
xchg
aas
mov
pop
xchg
fists
mov
mov
xlat
int
aad
mov
dec
push
add
pop
adc
mov
in
lods
cmp
push
jle
out
xor
cli
cmp
pop
insb
and
imul
fimuls
sub
cwtl
ror
add
pop
cmp
gs
aas
outsb
mov
loopne
xchg
inc
push
adc
je
jae
jae
mov
cltd
mov
jle
jp
xchg
repnz
pop
insb
popl
cltd
stos
add
or
out
cmp
call
or
cmp
shrl
add
test
shrb
dec
xchg
and
and
je
pop
xor
in
and
into
mov
xchg
je
aaa
movsl
clc
stc
lock
jp
cmp
mov
xor
dec
ret
mov
iret
icebp
mov
stos
lret
mov
test
in
push
gs
xchg
leave
mov
xchg
jmp
inc
fists
fucomi
sahf
add
icebp
pop
aaa
stc
or
sar
stos
mov
push
or
idiv
or
inc
lea
lock
xor
xlat
push
dec
adc
pop
inc
fsubr
mov
jo
test
mov
jg
push
out
sbb
cmpsb
aas
inc
dec
dec
fs
adc
mov
jl
mov
stos
aaa
jg
mov
cmpsb
xchg
dec
mov
cmp
pop
cmpsb
pop
jp
add
les
cld
add
xorl
jecxz
test
pop
in
dec
out
clc
fbld
orl
ljmp
pop
adc
fidivs
add
lods
daa
sbb
repnz
cmp
xor
int
fsub
ror
popa
cmp
jae
enter
in
shrb
adc
add
sub
mov
hlt
cmp
xlat
push
fcomip
das
rcr
int3
iret
shl
scas
jnp
mov
imul
jl
mov
flds
add
lds
or
pop
and
cmc
outsb
aaa
aam
jge
testl
sbb
movsl
jne
repz
jmp
mov
sbbl
sub
fdivrs
dec
dec
add
push
xlat
cmp
inc
imul
mov
vmwrite
and
stos
sti
jo
jns
int
jno
int
jl
jge
push
std
mov
popf
cmp
in
fwait
mov
mov
int3
fistpl
clc
sbbb
iret
lahf
aam
scas
cmp
or
xor
mov
imul
xlat
in
mov
lea
inc
sarb
inc
mov
mov
push
cmpsl
cli
aas
mov
rorl
mov
les
movsb
hlt
xor
lods
push
vmaxss
pop
lods
inc
xchg
mov
cs
int
dec
cmp
mov
cmp
pop
push
pop
and
sti
add
jmp
scas
insb
testb
sub
cli
pusha
sbb
lods
aam
push
ds
jl
xor
ud2
or
jl
mov
outsl
push
iret
lret
xor
dec
add
xor
or
mov
cmp
mov
sbb
clc
mov
pop
cmp
or
pop
mov
roll
push
and
mov
scas
push
pop
jecxz
bound
dec
out
pop
push
divl
sbb
aam
mov
dec
andb
adc
mov
sub
fildl
xor
movsb
dec
pop
fndisi(8087
jge
adc
sbb
cld
call
into
mov
xchg
inc
jl
pusha
and
insb
add
fiaddl
pop
aas
cli
fwait
push
js
out
push
mov
xchg
mov
inc
insb
xchg
int
pop
dec
jb
sub
inc
cmpl
fbstp
outsb
add
adc
jne
mov
inc
fwait
mov
into
js
lds
jle
xchg
dec
andb
jb
fwait
imul
pop
scas
adc
dec
or
xor
movsl
aam
loopne
iret
pushf
or
out
mov
mov
sbb
aam
mov
shrl
mov
ss
pop
pop
movl
cli
push
test
mov
notl
shl
andb
xchg
std
imul
adc
xorl
cs
fsubl
add
out
icebp
sahf
in
fsts
jns
lret
sub
aas
or
mov
or
out
divl
ljmp
stos
sbb
scas
dec
das
cmp
fdivs
push
inc
out
xchg
fnstsw
sub
pushf
push
push
mov
gs
mov
lds
push
cmpsb
sub
outsl
cmpsl
outsb
adc
mov
std
cmpsb
jno
scas
jle
lods
or
outsb
ss
dec
mov
add
jmp
data16
mov
loopne
mov
jbe
mov
gs
dec
loop
ss
jno
push
out
fisubrl
or
jb
daa
orl
mov
in
dec
imul
out
mov
mov
jns
stc
out
inc
repz
lock
ja
loop
push
inc
cmp
pusha
dec
push
test
mov
and
xchg
jl
divb
jp
mov
add
push
add
pop
shlb
pop
mov
insl
sbb
pop
cld
fs
sbb
call
inc
jb
cmpsb
inc
in
adc
adc
add
in
pop
leave
or
mov
mov
xchg
shlb
lds
mov
ss
je
xor
and
out
push
nop
jl
cmp
into
and
es
xor
sbb
xor
divb
pop
es
sub
inc
adcb
rorb
sbb
xchg
jmp
xchg
loope
sub
sub
mov
lods
in
not
out
adc
sub
dec
rcr
nop
dec
lret
aaa
movsl
fsts
and
cmp
imul
and
mov
in
or
mov
mov
xlat
lds
cmp
dec
cmc
mov
pop
and
pop
dec
ds
cltd
jmp
cmpsb
dec
cli
mov
fcompl
movsl
std
and
loopne
sbb
dec
loope
or
mov
loop
push
pop
es
cmp
push
adc
jge
lret
jbe
stc
les
pusha
addr16
mov
mov
outsl
pop
movsl
lcall
pop
dec
dec
aaa
sbb
push
mov
in
sub
or
cmp
mov
ret
sub
push
pushf
loop
jecxz
out
inc
dec
lods
imul
sbb
sub
test
ja
scas
mov
cwtl
clc
cmp
push
lods
sbb
pushf
orb
shr
xor
in
mov
mov
push
or
or
icebp
or
jns
aad
daa
cmp
add
cmp
lds
mov
xlat
and
movsl
aad
xchg
cmp
push
cltd
jp
insb
out
movsl
pusha
push
push
adcl
xchg
movsb
stos
cmp
push
cmp
in
jns
ja
jae
mov
ret
arpl
call
cli
mov
cmp
scas
test
cmpl
cmpsb
aas
das
jnp
mov
jnp
testl
stos
or
fwait
mov
aas
sub
jg
lret
aaa
pop
lock
daa
cmpsl
test
out
lahf
movsl
sub
sbb
push
or
and
sub
or
mov
movb
jmp
es
dec
or
cmp
jns
and
fcomip
rorl
je
or
fdivrs
js
in
adc
pop
jnp
cmpsb
dec
xchg
cmc
or
pop
adc
mov
out
sar
mov
jecxz
insb
pop
dec
dec
cmp
sbb
arpl
mov
aam
jnp
add
jnp
es
in
and
mov
add
sub
lods
fdivrp
das
repnz
cmp
aaa
jns
lods
push
push
jecxz
push
push
inc
adc
sub
rorb
push
add
dec
xchg
pusha
dec
adc
sub
jbe
push
enter
push
popa
outsb
sbb
loopne
loopne
pop
fcoml
mov
popa
imul
xor
lods
xchg
lods
repnz
cmp
stc
testl
mov
xchg
mov
in
push
sub
xor
sbb
shll
sbb
arpl
dec
test
and
lahf
repnz
and
aam
dec
mov
inc
iret
cmp
out
pop
mov
aad
xlat
sahf
in
or
into
mov
cmp
xchg
insl
imul
leave
add
mov
or
xor
pop
add
xor
pushl
dec
jmp
arpl
lods
add
test
pop
cmovg
arpl
dec
rorl
sbb
adc
inc
push
cmp
test
xchg
pop
or
fstl
pop
mov
int
xor
test
loope
frstor
sbb
addb
xchg
dec
cmp
ret
or
and
das
fldenv
rclb
push
dec
jg
mov
fidivs
movsl
shlb
fldcw
fbld
adc
xor
mov
jnp
ds
gs
xor
mov
and
loope
push
dec
xor
or
cmp
sbb
dec
outsl
cli
sub
jae
jmp
pop
lcall
and
rol
std
sub
push
push
jnp
dec
notl
lea
cmp
push
mov
inc
popa
cmp
adc
imul
pop
pop
mov
xor
mov
jo
fmul
cld
pop
sub
mov
mov
mov
dec
dec
cmp
sahf
in
push
xor
push
xchg
fucom
insb
mov
mov
mov
loopne
js
in
xchg
pop
xor
lock
sti
mov
push
fcomps
in
out
pushf
outsl
cmp
insl
cs
and
mov
lea
add
mov
repnz
movsl
mov
push
sbbb
insl
adc
js
push
xor
mov
ds
push
data16
mov
or
mov
pop
cwtl
inc
shl
inc
rorl
dec
pop
lods
lods
les
add
add
push
add
push
cmp
sti
add
push
outsb
je
xchg
shll
push
test
stos
lahf
mov
jge
insb
inc
push
sbb
jle
in
cwtl
jb
add
enter
lods
flds
icebp
pop
cmp
cmp
fnstsw
pop
imul
mov
mov
lock
mov
mov
adc
call
xchg
adc
fstl
mov
std
shrb
lahf
icebp
mov
xchg
cmp
stos
loopne
andl
cmp
fwait
and
rorb
or
xchg
pop
dec
adc
cltd
xchg
xor
sub
jge
les
xor
out
adc
ret
dec
in
push
pusha
or
sbb
popf
int3
mov
add
cmp
insb
out
mov
mov
sbb
insb
xchg
xor
push
jge
xor
add
mov
lahf
gs
jns
popf
pushf
jo
cmc
xor
mov
mov
xchg
jbe
das
cmpsl
scas
sub
stos
jle
sbb
mov
pop
fnsave
fimuls
mov
jp
out
ret
lock
insb
sbb
out
add
mov
pop
bound
jno
push
inc
je
bound
mov
lret
leave
jnp
into
in
xchg
mov
fs
adc
ds
cmp
ret
mov
xchg
cwtl
test
xchg
and
je
adc
jmp
dec
adc
sbb
jge
ret
popf
or
in
lds
sub
mov
sub
pusha
jle
cmp
fnstenv
pop
inc
add
xchg
xlat
repz
cmp
mov
cmp
pop
sub
add
cmp
add
leave
ret
daa
pushf
divl
aam
iret
xor
jnp
xor
push
jg
pop
push
mov
notl
lret
scas
adc
xor
out
mov
fs
pop
adc
enter
adcl
push
dec
rcrb
mov
loope
adc
dec
jmp
xchg
add
jg
lds
fs
mov
and
call
aaa
adc
cmp
add
mov
scas
adc
xchg
jnp
and
insb
test
cmpsl
adc
inc
dec
cmp
orb
fs
out
xchg
stos
mov
jle
paddq
mov
aad
sti
and
mov
mov
xor
into
out
mov
das
test
sti
mov
push
loopne
mov
xor
or
xchg
mov
repnz
fldenv
lret
jg
dec
push
or
fsubp
push
sub
or
les
ficoms
lods
popa
push
cmc
add
xor
adc
push
mov
inc
mov
xchg
and
ds
add
fdivs
xor
mov
mov
dec
pop
stos
in
test
mov
andb
fbld
push
mov
mov
sub
daa
push
push
out
hlt
imul
cmp
rcl
and
jecxz
cld
mov
psrld
shrl
lods
fdivrs
jmp
hlt
scas
out
pop
popa
cmp
je
cmpsl
push
bound
movl
fisubl
bound
push
sbb
mov
aam
pushf
cwtl
inc
jb
nop
lock
lahf
jb
dec
jl
xchg
cmp
xor
cmpsl
shlb
ss
lahf
divl
sbb
outsb
xchg
mov
mov
mov
sbb
testl
jb
and
lahf
shl
inc
push
inc
xlat
sub
mov
dec
cmp
add
call
mov
xchg
outsb
idivb
aaa
aas
les
inc
stos
in
mov
negb
lahf
sbb
sbb
repz
addr16
stc
mov
inc
pop
sub
and
repnz
or
movsb
cmp
jb
std
lcall
xor
loop
or
or
fstpt
ret
shr
les
scas
repz
sub
push
push
cmp
mov
push
dec
fisttps
out
movsl
pop
in
std
insl
lcall
pop
pop
pop
jae
mov
push
dec
or
movsb
dec
lcall
lahf
je
xchg
incl
out
and
xorl
movsl
mov
dec
xchg
xchg
jae
mov
mov
dec
loopne
xchg
stos
iret
int
xorl
call
mull
inc
aaa
out
jmp
add
hlt
data16
test
in
pop
cmpsb
insl
fnstenv
xchg
mov
aam
cmp
xor
cld
fs
push
push
roll
cltd
adc
fcmovne
or
repz
pushf
fistpl
cmp
sbb
mov
jb
mov
aad
push
pop
cmp
or
repnz
bound
fwait
ret
inc
xchg
out
mov
and
inc
sbb
enter
mov
and
outsb
lea
and
iret
std
xchg
jecxz
and
popa
mov
lds
jl
mov
mov
mov
inc
mov
outsb
sub
and
xor
das
push
outsl
scas
jl
sub
mov
sbb
popf
add
jae
out
add
cs
fldenv
out
pop
jo
aaa
cli
pushf
or
out
mov
jle
pop
scas
add
fnstsw
lahf
shll
fstps
dec
sbb
insb
shlb
dec
xchg
sbb
andb
mov
fildl
sub
push
adc
jne
ja
fs
pop
fnsave
xor
push
mov
jae
sbb
and
add
insl
subl
jmp
data16
mov
xor
ja
and
push
mov
xlat
jge
lods
inc
pop
movsb
mov
mov
nop
jae
jmp
mov
sahf
popf
insl
dec
ret
inc
mov
xchg
push
ds
jg
out
loope
rorb
es
xor
out
insb
add
lods
push
ret
adc
data16
fwait
mov
insb
or
je
push
push
mov
icebp
andb
mov
jg
xor
push
xor
gs
mov
arpl
lock
xor
push
testl
add
and
mov
push
jmp
aas
pop
push
add
roll
cld
push
push
shrb
mov
push
lods
scas
mov
xor
mov
lcall
out
jle
rep
push
aas
sbb
or
or
jmp
cmc
fbld
dec
sbb
punpckhbw
movsb
out
lcall
xchg
pop
lcall
in
rorl
into
in
xor
test
sub
adc
fdivrp
ja
and
pop
loope
lods
lcall
out
and
fisttpl
xchg
mov
push
lods
or
pusha
inc
xchg
lahf
and
pop
or
push
cmp
adc
scas
push
dec
mov
ret
inc
mov
cmp
ret
fwait
sbb
push
leave
lods
cmp
popa
movsl
out
mov
adc
fmuls
cld
xchg
hlt
xchg
push
mov
mov
and
pop
cli
sbb
pop
stos
push
fnstsw
call
inc
imul
mov
out
movsl
stc
xor
jp
mov
lods
pop
mov
xchg
or
jns
scas
leave
pop
mov
mov
rolb
iret
pop
or
addr16
sub
cmp
fistps
mov
cs
cs
pop
mov
pop
in
add
movsb
hlt
lahf
fsubl
cmp
pop
int
les
inc
push
add
jmp
jg
pushf
arpl
add
mov
adc
inc
shll
xchg
and
jle
lahf
xchg
arpl
or
rorl
xchg
push
and
and
jo
cltd
data16
push
test
inc
push
mov
pop
cmp
and
lahf
or
mov
hlt
lods
adc
sti
jno
dec
add
mov
pop
ds
jmp
pusha
inc
jno
cmp
out
push
cmp
andl
icebp
imul
aam
cmc
dec
fs
jne
ds
pop
inc
jbe
or
dec
out
pop
inc
cli
push
push
insb
pop
cwtl
mov
adc
rorb
iret
pop
popa
xor
les
div
jge
shll
push
call
test
or
in
cmp
push
mov
mov
sbb
jb
das
aam
roll
movsl
test
stos
arpl
ds
cmp
loop
pushf
stos
ret
inc
popa
or
ljmp
xor
dec
sahf
mov
xlat
or
shrl
xor
imul
add
clc
add
test
add
sub
adc
jae
div
popf
cmpsb
loop
insb
into
jbe
jbe
aad
mov
loop
add
inc
xchg
and
add
jns
mov
mov
push
aam
mov
add
stc
sub
mov
jecxz
xchg
into
mov
aas
jb
fwait
xchg
addl
push
popf
xlat
clc
movsl
scas
addb
in
pop
jp
push
scas
mov
shll
mov
mov
nop
add
mov
cmp
or
outsl
imul
xchg
add
xlat
shll
out
bound
or
adc
daa
insl
mov
adc
xchg
jmp
and
int
out
pusha
adc
inc
rorl
or
fistpl
xor
call
rol
lods
push
mov
movsb
cld
jnp
sub
outsl
aam
lea
test
loope
xchg
jno
and
sbb
inc
in
push
lcall
shll
pop
mov
mov
in
fdivp
xor
jo
js
mov
jno
sub
roll
cltd
cmc
fwait
stos
jl
push
or
cmp
dec
rcr
jmp
add
sub
mov
test
idivl
imul
sahf
mov
adc
jcxz
xchg
jns
dec
mov
sbb
scas
and
pop
mov
xchg
xor
lods
jno
xchg
popf
in
or
mov
insb
pop
adc
jns
ret
rolb
popa
std
jl
cwtl
aam
sbb
leave
outsb
lret
fsincos
cli
jnp
sbb
rcr
jecxz
rclb
call
imul
mov
cmc
imul
aas
leave
test
pop
sbb
iret
jmp
je
fiadds
daa
jnp
jg
pop
mov
test
in
jle
xlat
shll
aaa
pop
jns
jge
adc
lret
dec
imulb
xchg
xor
pop
mov
or
ud2
push
cmp
aas
dec
loope
push
xchg
cmp
sub
adc
adcb
iret
xorb
fidivrs
inc
pop
dec
js
hlt
inc
jnp
mov
mov
cmp
ret
push
test
push
inc
subb
cli
mov
int
lods
cs
stc
movsl
mov
fcomip
sbbb
jg
jnp
ret
mov
pop
mov
test
or
lds
pusha
outsb
and
test
into
lea
mov
scas
les
mov
lods
iret
dec
xor
cmc
mov
ja
in
stos
or
ret
int
fidivrs
inc
ja
xchg
xchg
add
iret
mov
test
sub
repz
dec
int
add
divb
popf
jle
push
pop
cmp
ror
adc
cmpb
out
pop
pusha
sbb
jg
mov
daa
push
jns
lock
pop
js
icebp
ljmp
sub
inc
sbb
inc
pushf
jp
aas
je
imul
insb
outsb
mov
sti
pop
inc
je
adc
out
sub
xchg
and
push
push
sbb
jl
sub
inc
inc
scas
bound
or
in
cwtl
and
int3
add
adc
mov
lret
mov
and
push
mov
and
pop
xor
lret
enter
scas
cmp
int3
dec
sub
add
xchg
jnp
out
dec
mov
xchg
xchg
outsb
xchg
mov
es
mov
pusha
inc
lret
lret
xchg
dec
outsl
xchg
inc
clc
jbe
mov
cmpb
lods
in
ds
idiv
ret
jbe
jne
js
repnz
pop
push
or
insl
test
adc
orb
lods
out
test
xchg
pop
in
xchg
xor
xchg
xorb
jo
mov
leave
lock
mov
daa
add
cmpsb
adc
push
icebp
movsb
push
or
popa
test
je
sub
pusha
mov
push
lcall
inc
sub
or
aaa
mov
loope
aad
es
ret
mov
xor
lods
pop
pop
inc
fldenv
movsb
cmp
sub
bound
aad
jecxz
int
into
rorl
out
int
push
cmpsl
cmpsl
mov
dec
mov
xchg
sbb
fsts
mov
xchg
flds
lea
dec
add
pushf
daa
jmp
sub
mov
negl
pop
sahf
sub
xor
pop
sbb
jl
movsl
mov
idiv
mov
movsl
mov
push
adc
movsb
das
mov
int3
imul
lahf
dec
inc
push
rcl
inc
pop
add
cld
mov
push
pop
daa
rep
in
pop
sub
inc
in
int
push
dec
xchg
lret
out
test
rcrb
sub
xor
pop
shlb
sub
stc
aas
in
pop
jmp
lea
pusha
and
clc
enter
xchg
pushf
or
lds
nop
pop
adcl
lods
cmp
jg
push
sub
cwtl
mov
xor
jbe
sub
fnstenv
push
fldt
ja
std
fists
mov
adc
fdiv
mov
mov
cs
ds
les
cmp
out
icebp
out
clc
xchg
mov
and
mov
jb
mov
dec
adc
test
das
inc
dec
insb
xchg
cli
cmp
lahf
std
add
cmpb
xor
sbb
xchg
sbb
lods
scas
fisttpll
mov
dec
test
or
push
fcoms
loopne
push
sub
mov
shr
mov
lea
sbb
lret
int
cmp
push
sbb
in
or
mov
loopne
xchg
jp
scas
mov
stos
lret
jb
popa
push
mov
lret
sbb
add
imull
add
fistpll
inc
cmp
xor
mov
test
in
mov
xchg
mov
arpl
outsb
ret
jae
mov
stos
mov
xor
dec
clc
sbb
shr
cwtl
push
and
mov
push
xlat
lahf
add
mov
sub
dec
adc
jno
jo
jmp
push
adc
and
cwtl
arpl
filds
shll
sub
mov
outsl
pop
out
xor
mov
cmp
push
movhps
dec
scas
inc
fwait
adc
in
pop
adcb
fnstcw
jmp
dec
mov
bound
fwait
or
add
jl
leave
jge
cltd
xchg
add
mov
mov
sub
fnsave
lds
mov
dec
jo
lret
dec
insl
popa
ljmp
xchg
adc
dec
fists
pop
pop
insb
repz
stos
shl
xchg
test
sarb
call
sbb
fstps
aam
data16
jno
fdivl
inc
inc
or
stos
pushw
ljmp
xchg
fiaddl
stos
push
movsb
cmp
movsl
lds
sub
lcall
pop
in
and
out
hlt
cmp
arpl
push
setg
fwait
pop
addr16
cmp
sbb
sti
ja
movsb
push
cwtl
mov
gs
xor
jp
stc
jae
or
roll
dec
dec
pop
aas
es
jle
sub
adc
xchg
gs
xchg
aaa
xchg
ret
iret
adc
ja
cli
xorl
sbb
sbb
icebp
adc
dec
imul
into
inc
stos
int3
pop
cmpsb
push
cmp
add
pop
jecxz
cwtl
cmp
mov
pop
js
aaa
notl
test
fildl
jp
scas
dec
dec
mov
shl
jg
std
mov
lods
ret
xchg
xor
mov
inc
push
daa
lods
rorl
cmp
fxch
out
icebp
lcall
bound
push
arpl
jb
cltd
push
rol
lcall
mov
sub
mov
es
test
and
push
sub
jne
mov
xor
jnp
push
push
outsb
mov
pop
sarb
clc
scas
leave
add
dec
shlb
inc
push
ljmp
add
or
inc
lods
sub
out
adc
adc
and
mov
gs
je
pushf
sbb
sti
les
adc
or
cmp
cltd
jle
mov
scas
fldl
aam
jg
xchg
movsl
dec
repz
xchg
incl
addr16
rorb
jo
inc
lret
test
aaa
pushf
aad
fisttps
popf
inc
hlt
out
dec
sub
loop
sub
and
jae
hlt
dec
movsl
inc
add
in
lcall
pop
lds
mov
jl
xor
add
ret
push
loope
ret
shrb
ljmp
fs
add
lcall
cmp
pusha
mov
mov
inc
mov
mov
cmpsb
insl
xor
sbb
jbe
dec
or
rcrb
mov
stos
and
adc
es
scas
mov
fs
inc
rorb
fs
jecxz
clc
add
jns
es
mov
mov
fwait
push
pop
ret
or
out
or
pop
mov
insb
decl
rcrb
jbe
fistl
inc
xchg
testl
or
in
pop
pushl
movsb
pushf
jecxz
mov
inc
stos
lea
push
inc
imul
mov
push
and
jb
aaa
pushf
sub
xchg
push
push
xchg
imul
dec
mov
out
mov
xchg
fcomps
pushl
das
mov
adc
push
dec
bound
inc
scas
xchg
ss
ljmp
jge
inc
push
test
mov
jge
pop
lret
inc
cmp
sti
loope
jnp
adc
scas
fldenv
in
pop
xchg
out
dec
sbb
mov
int3
clc
sarl
add
bound
movsl
aad
xor
mov
xchg
xchg
movsb
or
inc
jbe
inc
frstor
xchg
mov
adc
shll
xchg
inc
xchg
arpl
mov
sbb
mov
into
sbb
repz
icebp
mov
hlt
popa
andl
loop
jb
or
stos
loope
adc
and
push
xchg
add
or
and
xor
xor
inc
push
les
xor
imul
pushf
or
dec
loope
xor
fcom
js
jbe
lret
dec
jbe
out
xchg
fisttpl
adc
subb
daa
xchg
inc
arpl
fidivrl
pop
push
xor
sbb
add
xchg
push
aas
repz
adc
mov
sub
jp
sub
shlb
mov
sbb
enter
fwait
push
jl
push
and
mov
dec
in
dec
lds
adc
stos
cmpsl
dec
fucomip
xor
pop
popa
dec
adc
loopne
cltd
out
pop
test
testb
ss
sahf
int3
arpl
inc
pop
adc
jnp
ljmp
fnsave
ret
dec
int
or
add
or
mov
or
out
call
mov
inc
call
les
sbb
mov
sub
sub
adc
sbb
insl
add
pop
or
or
pop
das
pop
repz
push
stos
mov
and
aad
in
aas
stc
push
nop
adc
sti
add
adc
out
push
sbb
cmp
dec
imulb
jbe
mov
repnz
mov
xchg
dec
inc
je
push
xchg
cmpb
inc
call
and
cmc
ds
cmp
subl
lahf
jae
adcb
sub
xor
pop
cmp
cmc
imul
pop
test
push
je
add
dec
or
shrb
inc
mov
scas
and
adc
mov
int
sahf
push
daa
jbe
jae
mov
mov
mov
scas
and
into
decl
call
aam
add
and
cmpsl
insb
in
pop
movsl
or
pmaxub
fucompp
add
pop
add
lds
jno
lret
into
clc
xchg
jo
popl
int3
xchg
popf
inc
in
jae
imul
mov
or
dec
add
fs
xchg
jo
dec
dec
aad
push
popa
repz
mov
push
data16
clc
gs
imul
xchg
xor
out
sti
inc
and
test
jl
daa
nop
mov
sbb
xchg
xchg
fwait
mov
dec
inc
imul
mov
mov
push
lret
xor
mov
cmp
xor
rclb
pop
out
dec
popa
jle
ljmp
lahf
mov
test
out
mov
or
push
subl
test
ret
leave
arpl
pop
add
dec
repz
into
shlb
dec
sarb
ret
pop
sub
sub
push
cmp
dec
and
pop
add
mov
dec
dec
push
lods
jno
pop
decl
and
mov
dec
lods
push
inc
call
dec
and
pop
cmp
clc
test
das
xchg
scas
pushf
dec
shr
dec
andb
jle,pt
sbb
lds
mov
xchg
adc
xchg
icebp
adcl
add
testb
or
mov
test
or
int
or
cmp
repnz
dec
mov
pop
addb
dec
hlt
pop
insb
mov
imul
mov
js
incl
lea
aam
and
mov
cs
stos
pop
and
fmuls
pop
aad
arpl
fcoml
mov
in
les
cltd
xchg
xchg
or
cwtl
push
add
mov
aas
fnstsw
mov
es
mov
nop
les
sahf
clc
jmp
and
or
sub
adc
mov
jmp
xchg
mov
jns
gs
inc
ret
xor
cs
mov
mov
into
lock
jnp
sahf
and
ja
movsl
add
cli
rorl
daa
jp
mov
mov
inc
andl
in
in
push
movb
add
or
adc
pusha
jno
add
lret
ret
mov
sub
cmc
in
cld
lods
jne
push
adc
in
mov
repz
jns
pop
add
pop
cltd
jmp
adc
dec
lea
cmpsb
lret
gs
mov
push
loope
mov
adcb
xchg
adc
jg
lret
or
inc
jb
mov
dec
jnp
xchg
popf
lret
adc
or
add
pushf
inc
mov
iret
arpl
mov
inc
sub
fiaddl
mov
mov
test
push
push
ljmp
inc
out
loope
dec
icebp
xchg
aas
cltd
mov
leave
or
xor
fdivrs
scas
test
jmp
cmpsb
mov
mov
push
daa
lahf
enter
mov
aam
fstl
fisubl
pop
ret
lods
push
or
cmp
cwtl
cmpb
lea
xchg
xor
xor
in
test
popf
xor
int
retw
ret
repz
into
das
repnz
jl
jno
dec
mov
pop
dec
dec
sub
sub
and
jb
pop
ljmp
inc
jnp
cmp
jg
repnz
pop
fnstsw
jns
test
xchg
push
cwtl
pop
rclb
je
fists
mov
movsb
push
and
test
iret
or
nop
icebp
int3
fsubl
loop
adc
subb
fistpll
rolb
fisubrl
js
cmpsl
test
insl
cmp
add
int
xorl
adc
lret
lock
iret
push
aas
fdivs
sub
push
jo
dec
xor
js
xor
mov
mov
mov
mov
push
xor
mov
jp
int
sub
inc
or
ljmp
jae
dec
movsl
dec
or
test
leave
insb
pop
mov
mov
enter
jnp
pop
mov
iret
inc
ds
adc
rcl
loop
sarl
pop
or
cmp
sub
adc
adc
push
xchg
lret
push
sbb
push
into
fs
push
fstpl
mov
mov
xchg
jns
xor
mov
out
addr16
inc
add
loopne
icebp
cmc
jne
jge
adc
enter
rol
in
jge
mov
jp
mov
jnp
pop
pop
adc
jo
jo
enter
push
pop
dec
sub
mov
pop
pop
fsubrl
in
jae
into
loopne
std
xchg
int3
add
adc
jo
push
decb
pop
scas
lret
shl
sub
in
add
cmp
in
call
in
aas
inc
mov
imul
jb
push
mov
mov
aaa
repnz
mov
pushf
mull
add
pusha
add
imul
push
pop
mov
pop
leave
pusha
in
cmpsb
shrb
leave
dec
pop
cmpsl
std
fstpl
xlat
dec
call
jmp
add
mov
insw
neg
sub
shlb
ret
dec
data16
or
xchg
aam
pop
lock
inc
lret
jp
loopne
push
add
adc
or
in
lret
pop
inc
pop
sbb
mov
iret
or
cmpsl
test
mov
call
fnstsw
std
scas
push
add
mov
or
shll
ljmp
inc
lahf
je
adc
test
xchg
mov
dec
les
and
push
sbb
adc
mov
je
clc
and
aas
and
sub
and
popa
cmpsb
add
dec
mull
jnp
mov
sbb
shlb
rol
cmp
jl
mov
bound
or
adc
imul
mov
jb
or
and
xorb
mov
jae
cli
mov
cld
adc
xorl
sbb
repz
and
cmc
mov
jne
sub
stos
fdivp
out
inc
and
sbb
mov
xchg
push
fdivrl
add
js
sbb
jno
jb
or
or
add
cltd
push
and
rorb
in
add
mov
icebp
push
mov
negb
sub
lea
testl
stc
mov
dec
lcall
fistpl
mov
out
add
cmp
pop
frstor
sub
movsl
or
repnz
xor
add
cmp
mov
lret
cmc
pop
sbb
inc
adc
movsl
and
lods
fldcw
andl
add
out
loopne
ljmp
push
push
inc
sbb
dec
sub
push
shll
int3
mov
orb
call
ljmp
aaa
imul
pop
out
gs
dec
shlb
adc
not
adc
xchg
pop
push
xchg
or
xchg
imul
out
push
sbb
lret
sub
pop
es
or
mov
pop
mov
lea
cmp
nop
jecxz
xchg
lcall
in
pop
dec
jbe
sub
pop
loope
jg
pushf
aad
icebp
cltd
in
lahf
mov
js
push
mov
adc
aas
dec
shl
ja
xchg
xor
test
repnz
cmp
std
sbbl
and
pop
xchg
test
and
lret
cmp
ljmp
and
adc
sbb
lock
scas
jge
push
insb
cld
push
int3
mov
mov
mov
sbb
mov
es
xor
into
cmp
xchg
inc
jno
mov
outsl
push
jp
out
scas
popf
pop
lds
adc
popa
scas
mov
pop
pop
fiaddl
lret
cmpsb
in
addb
ds
iret
push
and
fidivs
test
pop
imul
movsb
xchg
xchg
rcll
dec
push
in
pop
sbb
jg
inc
aas
cmp
or
or
xor
mov
stos
or
lret
inc
push
mov
inc
nop
jae
js
cmp
std
sub
es
cli
jae
es
xor
pusha
pop
push
mov
dec
add
mov
mov
icebp
cmp
fs
cmpsb
sbb
add
add
ret
sub
jo
or
fsubl
shrb
sub
mov
cmpsl
jge
mov
xchg
pop
arpl
cmpsl
scas
rcrb
inc
ret
cmpsb
pop
jmp
aas
mov
cmp
ljmp
popa
sbb
pop
adcb
mov
pop
mov
sbb
fsts
cld
xor
dec
shr
and
aas
mov
xor
int
pop
xor
mov
or
or
stc
and
or
shll
rolb
cld
imul
sbb
leave
mov
imul
cli
test
jecxz
in
adc
push
ljmp
mov
nop
mov
repz
gs
lcall
fdivs
cmc
xor
or
xor
cmp
pop
decb
jge
mov
div
adc
xor
stos
sbb
repz
mov
mov
push
out
cmp
sub
cmp
pop
xor
pop
sbb
rcr
lahf
jp
shl
popf
pushf
outsb
test
data16
out
xor
adc
movsl
jne
shl
sub
lahf
hlt
jb
xor
rorb
cmp
cmc
pop
add
int3
inc
cltd
and
aaa
test
mov
xchg
inc
fistpll
sub
adc
stos
or
cli
xor
mov
lahf
jb
pushf
shll
xlat
sub
les
push
push
xchg
push
mov
aaa
adc
hlt
inc
jns
ljmp
and
jnp
adc
pop
fisubrs
ja
jne
pop
or
sub
fwait
push
adc
mov
add
sub
xor
repz
fsubl
fsubl
cmp
les
lock
dec
repz
sbb
sbb
pop
scas
push
pushf
push
push
ret
add
loopne
xor
mov
aam
adc
jnp
inc
add
out
lock
mov
int3
push
ja
mov
dec
daa
aad
stos
pop
mov
push
in
dec
addr16
mull
push
mov
dec
outsb
sbb
divb
pop
or
or
movl
pop
into
loope
dec
sub
ret
lret
popf
loop
enter
push
mov
test
or
lret
or
aam
xchg
mov
sbb
sub
sbb
sbb
inc
jo
pop
cmc
std
pop
xchg
ljmp
pusha
add
xchg
push
mov
jnp
dec
jmp
sbb
inc
leave
test
mull
mov
dec
rcrl
mov
push
insb
pop
ljmp
or
cwtl
sbb
aad
decb
in
xchg
insl
sahf
and
inc
insl
sub
loop
push
mov
rcll
sbb
fldenv
push
xchg
aam
and
hlt
imul
mov
aas
stos
cmpsb
pop
ss
in
cmpsb
sarb
mov
jmp
adc
rcrb
add
pop
push
not
enter
outsl
mov
mov
jae
lahf
int3
and
jns
loope
sbb
fwait
dec
mov
mov
and
adc
and
aad
adc
mov
sahf
cmp
stos
sub
push
sbb
mov
adc
sub
sub
clc
rorl
fwait
mov
jns
xlat
lods
xor
stc
inc
imul
loope
lods
pop
iret
hlt
mov
jmp
pop
stos
xchg
sbb
test
ja
push
xor
ret
inc
lods
aas
cltd
rcr
xor
ret
cmp
cmc
in
test
mov
jg
jnp
push
aad
mov
sbb
fmuls
loop
xchg
outsb
arpl
nop
das
fstps
and
xchg
mov
addr16
imul
xor
inc
xor
push
in
loop
inc
dec
adc
mov
mov
jl
lcall
mov
mov
aaa
mov
and
xchg
mov
mov
fiadds
xor
inc
icebp
call
mov
icebp
fucomp
faddl
cmp
iret
pop
test
mov
mov
shll
bound
pop
mov
stc
or
xor
mov
inc
add
or
test
arpl
cwtl
aam
xchg
jle
sub
sbbl
add
aas
cmp
in
lahf
enter
divl
arpl
ss
movsl
test
push
subl
fsubr
lahf
sti
je
int
movsl
repz
adc
jp
stos
xchg
xchg
mov
loope
lcall
sbb
cltd
add
jecxz
mov
sub
rclb
add
stos
rcrb
xor
test
jae
mov
and
test
in
aad
add
sbb
mov
xchg
fidivl
jle
adc
add
or
push
frstor
or
jge
push
cmp
sbb
arpl
loopne
jl
add
je
gs
mov
pop
inc
into
jle
lcall
repnz
cwtl
jns
call
mov
adc
mov
leave
and
pop
insl
sub
ljmp
jle
add
inc
je
mov
fidivs
mov
inc
pop
or
stc
orl
or
and
es
cmp
or
mov
in
adc
cld
frstor
addb
mov
xor
jecxz
push
es
pop
dec
jecxz
mov
jae
push
xchg
gs
fildll
lret
cmp
aaa
pop
dec
adc
jl
fs
add
jl
pop
sti
pop
jle
loope
fists
cmpsl
hlt
aas
and
fcomps
add
ffree
lods
or
push
sub
in
sub
test
jnp
lret
cmp
or
cmc
or
push
fdivrp
movsl
mov
cmp
cmp
decl
jae
inc
lea
or
cmp
xchg
push
cmpsl
das
shrb
dec
sub
sbb
push
repz
lret
jne
xor
cltd
adc
xor
mov
jecxz
lea
fsubp
shll
pusha
fmuls
push
fsubr
outsl
sbb
xchg
call
adc
ljmp
jecxz
cmp
pushf
jae
lret
and
push
in
cs
std
movsb
insb
and
add
pop
test
fcomps
push
mov
enter
into
in
fsts
jns
or
lock
out
pop
mov
cwtl
push
mov
fsubr
mov
inc
cmp
fisubl
xor
rclb
add
xor
pop
nop
sub
testb
adc
cmp
mov
fists
jecxz
jge
mov
outsb
dec
ret
pop
pop
nop
cmpb
mov
dec
or
andb
push
push
loopnew
mov
xlat
push
mov
mov
and
sub
push
test
mov
push
insb
mov
andl
outsl
test
ljmp
push
mov
fs
out
pusha
push
aaa
ror
jmp
into
call
inc
fsubrs
push
add
xor
rcrl
sub
pushf
inc
xor
stos
xor
cli
push
push
or
push
push
fwait
leave
subl
inc
out
test
cld
or
jbe
and
negb
stc
ss
mov
andl
mov
sub
fwait
mov
das
enter
out
hlt
jge
fdivs
mov
stc
mov
fidivl
int3
lahf
int3
fdivl
and
mov
test
fldcw
in
cmpl
inc
sub
push
or
out
dec
je
mov
cli
inc
and
into
repz
jae
bound
ja
dec
gs
jbe
aad
fistps
or
cmp
and
out
shll
mov
cmp
adc
jp
xor
fdivrs
ret
mov
loope
pop
cmp
ffree
cs
outsl
push
mov
mov
lahf
mov
inc
adc
push
xchg
pop
into
mov
xchg
loope
mov
add
xchg
cli
stc
dec
adc
rol
insb
sub
cmp
lahf
fisttps
lock
scas
mov
mov
adc
aam
sbb
fwait
mov
sbbb
xchg
mov
mov
shl
shl
mov
cmc
cmpsl
cmp
jg
negb
lcall
xor
std
jle
xlat
xlat
leave
loopne
test
out
mov
in
cli
mov
stc
lret
fldt
out
das
inc
inc
dec
es
xor
scas
sbb
es
cmp
cmp
nop
les
xorb
rorl
pop
rclb
mov
and
addr16
sti
jns
and
and
and
pop
push
cltd
roll
pop
ja
inc
ret
call
mov
adcl
addr16
test
adc
ficomps
std
xor
fsubs
pop
adc
jns
adc
lret
addl
push
add
fbstp
sub
inc
sub
inc
xchg
push
js
in
mov
xchg
adc
pop
test
sbbb
mov
xchg
ljmp
and
and
xchg
shl
mov
push
in
fiadds
aas
xchg
and
xchg
icebp
dec
std
cli
or
subb
cmp
adc
add
movb
sub
xor
in
arpl
out
xlat
imul
in
test
std
jle
test
cmpb
adc
xchg
sub
xchg
shrb
out
cwtl
sub
iret
dec
call
xchg
jns
xor
jle
test
test
mov
xchg
mov
cwtl
inc
sbbl
xchg
xor
sti
adc
sbb
nop
mov
out
xlat
sbb
rol
sub
lods
push
add
push
add
pop
aam
bound
lock
fisttps
call
insl
push
mov
lret
xchg
test
adc
icebp
enter
add
sarb
jl
adc
cmpl
add
ljmp
scas
mov
adc
inc
push
leave
xchg
mov
xchg
mov
jp
inc
mov
sbb
int3
inc
or
mov
xorl
or
mov
mov
pop
subb
insb
push
mov
cmp
push
or
mov
test
add
fcmove
imul
fwait
mov
and
fstps
outsb
push
ja
stc
cmp
cmpsb
jb
es
add
dec
xchg
repz
inc
inc
dec
dec
mov
xchg
ficoml
mov
imul
in
stos
inc
scas
sbb
push
push
mov
mov
adc
das
cmpsl
vpminsw
aas
iret
test
testb
loop
in
pop
scas
orb
movsb
or
add
mov
ret
pushf
flds
jb
jmp
pusha
mov
dec
push
xchg
dec
or
push
adc
lret
dec
das
les
rorl
jnp
dec
or
repz
fmull
sbb
sbb
ss
daa
insb
sub
xor
sub
jmp
jno
subb
mov
stos
inc
push
mov
or
sbb
jg
popf
jp
fwait
xchg
and
pop
cmc
adc
xlat
shl
xchg
in
or
sarl
sarl
or
push
fwait
inc
xchg
mov
adc
imul
cmp
xor
adc
xor
shrl
xchg
pop
jge
js
mov
inc
je
xor
aam
jnp
mov
xchg
sbb
fbld
cmpsl
lods
push
rorl
add
push
xchg
mov
jp
adc
js
push
dec
mov
mov
imul
das
iret
leave
inc
stos
pop
stos
sub
test
pop
adcb
cmp
jo
push
lods
xor
ficomps
js
loope
pop
cmp
shl
mov
leave
push
fidivs
lods
pop
stos
sub
lahf
mov
ss
sbb
ljmp
lahf
outsb
sub
lcall
shlb
movsb
imul
xchg
gs
shll
cltd
mov
std
sbb
fbstp
dec
xor
cmp
xor
decl
sahf
mov
int3
pusha
aad
and
jae
mov
out
enter
test
insb
ret
cld
cmove
push
and
ljmp
ror
mov
jg
test
pop
ret
push
mov
leave
out
push
cli
mov
into
rcl
in
and
add
addr16
push
cs
aam
pop
int3
xchg
insl
pusha
push
dec
lods
mov
fcmovbe
mov
mov
sbb
imul
inc
popa
mov
mov
sub
xchg
push
cwtl
clc
push
xchg
idiv
leave
mov
inc
pop
or
mov
outsb
int
lods
cld
lret
pusha
mov
pop
sub
divl
inc
dec
lock
fs
mov
add
pop
lret
dec
jle
stos
mov
inc
mov
mov
icebp
loop
mov
into
or
scas
jecxz
xchg
fstps
fistps
jbe
or
or
cmp
push
int3
xchg
push
mov
stos
jo
adc
movsb
imul
movb
jno
xchg
lods
lods
cmp
inc
xchg
sbb
jbe
xlat
lds
mov
jae
ret
ficomps
in
fwait
in
jg
sbb
mov
push
add
or
out
bound
jns
popf
or
les
push
into
fnstsw
xchg
or
imulb
insb
dec
xchg
cmp
add
or
push
adc
sub
push
rorb
cmp
jno
cli
sub
test
enter
lods
jge
and
push
mov
aam
mov
sbb
lret
or
daa
in
jecxz
stos
inc
popf
and
and
xchg
aaa
inc
into
and
xchg
ja
gs
addl
push
insl
add
decl
outsb
outsl
cmp
faddl
xor
test
and
dec
into
js
repz
addr16
out
insb
int3
jmp
roll
stc
pop
in
mov
mov
dec
cmp
sbb
cmp
clc
xchg
dec
push
xlat
call
dec
fdivs
iret
stos
loop
xor
fdivr
mov
stc
js
jp
in
and
sub
jno
fwait
mov
jbe
mov
xor
xchg
in
mov
pusha
add
test
xor
dec
cwtl
or
mov
adc
mov
add
rcrb
ljmp
jne
int3
pop
mov
subl
loop
jbe
fildl
faddp
inc
push
jg
test
cmp
loop
enter
jmp
ljmp
dec
subb
je
cmpsl
rorl
arpl
mov
repz
pop
push
push
sbb
cld
jns
mov
insl
push
into
inc
and
in
stc
leave
jbe
fistpl
inc
ret
lcall
ja
cmpsb
icebp
cmpl
push
sarl
inc
outsl
lods
or
movsb
test
stc
lret
dec
add
lret
in
and
cmp
sbb
out
rol
test
jle
push
sahf
cs
dec
scas
sbb
add
sub
inc
pop
mov
nop
or
push
inc
jp
dec
jno
xchg
jmp
inc
enter
ret
sbb
pusha
jge
pop
sbb
roll
xchg
pop
inc
gs
iret
ds
out
cmp
cwtl
addr16
movsb
inc
dec
jbe
pop
subl
pop
insl
or
jmp
sub
movl
and
testl
adc
add
cmp
mov
stos
aas
and
dec
or
test
leave
and
add
xor
orb
div
jne
mov
out
mov
popf
mov
aam
lret
push
mov
inc
pop
test
imul
mov
das
jne
shll
xchg
sbb
testl
or
outsl
and
fs
lea
and
adc
sbb
rcrb
or
xor
lds
or
outsb
mov
arpl
cmpsb
scas
mov
mov
sub
into
or
lds
in
and
pop
out
popa
or
lods
jecxz
popa
cld
insl
mov
pop
aam
mov
cmp
jo
adc
mov
sbb
push
stc
mov
dec
loope
mov
mov
lds
xor
negl
jns
popf
arpl
add
scas
enter
mov
addl
pop
das
popa
clc
dec
incl
mov
dec
mov
gs
mov
jle
movsb
stc
or
fidivrs
mov
call
sti
ret
pop
pop
lock
adc
pop
sub
and
into
jnp
insb
mov
jno
leave
xchg
pusha
push
jb
cs
or
movntps
sub
ljmp
xchg
lcall
add
push
inc
cmp
lea
das
mov
iretw
sub
mov
xor
les
dec
xchg
mov
jle
lock
and
xchg
jno
sub
add
icebp
jecxz
mov
sub
movsl
push
mov
pushf
mov
stc
call
ljmp
lods
stos
outsb
lahf
push
lret
rcr
pop
jge
push
jns
stos
and
pop
and
push
shll
push
repnz
repnz
in
add
xchg
imul
repnz
or
add
add
out
cltd
testl
lea
jle
mov
push
repz
pop
mov
je
pusha
jmp
pop
cli
bound
dec
sub
cs
cltd
in
adc
lds
ljmp
adc
movq
add
jns
es
mov
add
sub
xchg
or
mov
scas
loopne
jge
xor
stos
shlb
das
ja
sub
pop
dec
rcll
mov
cmp
mov
mov
mov
lret
dec
pop
xlat
cmp
jl
addr16
push
sbb
mov
clc
hlt
jg
xor
fisttpll
cmp
mov
cltd
cwtl
ljmp
add
xchg
out
inc
cmpsb
xadd
mov
mov
ss
xorb
data16
pop
mov
mov
dec
enter
inc
test
idiv
out
jge
lret
inc
ffree
dec
pop
pop
loop
xchg
clc
push
nop
or
ljmp
bound
hlt
js
je
xor
loope
or
xor
mov
movsl
or
popf
mov
xchg
in
xlat
sti
push
lcall
movsl
xor
inc
sub
mov
cli
mov
pop
sbb
in
shlb
js
sub
mov
inc
out
std
adc
sarb
cmp
mov
sbb
adc
adc
push
adc
sbbb
mov
shlb
push
xor
daa
mov
mov
push
lea
push
xchg
jle
dec
test
into
inc
idivb
js
and
lods
sarl
aaa
adc
pusha
mov
jmp
adc
in
pop
pushf
mov
xchg
loop
sbbl
fwait
jo
sbb
imul
roll
cmp
push
pop
dec
mov
test
cmp
lods
dec
push
pop
and
std
rcr
inc
lret
gs
add
adc
jmp
sbb
jnp
mov
mov
aas
outsl
dec
dec
dec
insl
clc
jl
or
pop
sub
and
int3
mov
adc
jb
xor
mov
add
push
sub
in
out
mov
dec
negb
adc
adc
mov
out
fwait
jo
mov
xchg
jb
sbb
out
jp
in
iret
fwait
mov
fiadds
int
dec
dec
shlb
test
jno
loop
xchg
push
int3
jg
add
fwait
and
ffree
orb
dec
icebp
popf
mov
cli
in
test
add
popf
cli
push
ret
dec
mov
fcmovnu
les
std
cs
jecxz
fimuls
xchg
dec
mov
lds
rcll
add
cltd
xor
or
jmp
xchg
add
fidivl
cmp
and
repz
ss
xchg
jle
pop
insb
movsl
cmp
insb
xchg
cmp
push
rclb
stos
sbb
pushf
rsqrtps
ret
or
dec
and
pop
cwtl
lods
mov
fnstsw
mov
sbb
pop
inc
cmpb
es
sub
add
outsl
loopne
mov
pop
enter
cmpsl
dec
fildll
inc
sti
das
mov
in
insb
mov
jae
add
lods
inc
sbb
xor
xor
xor
imul
ret
out
negl
xchg
mov
lcall
dec
push
dec
xorb
fdivl
sub
pop
mov
frstor
lahf
jns
pop
je
xchg
cli
add
rorb
mov
or
mov
push
lret
mov
fisttps
nop
cltd
inc
popa
sbb
pop
push
cwtl
adc
lret
ret
stc
arpl
outsl
mov
adc
xor
sub
xchg
push
jecxz
adc
sbb
cs
or
aas
dec
sahf
add
test
lret
jge
inc
cmpsl
jae
popa
xchg
cwtl
xor
or
or
add
subb
xchg
rcrl
sub
clc
push
push
out
sub
insb
jae
xchg
pop
test
insl
sub
dec
mov
sub
rorb
cmpsb
pop
dec
loopne
outsl
cmp
or
stos
jp
out
jmp
sub
scas
mov
or
hlt
int
or
sbb
adc
adc
mov
test
xchg
sub
mov
fwait
mov
xchg
add
out
in
cmp
sbb
ss
adc
dec
int3
adc
addr16
mov
leave
xchg
jbe
jge
jnp
add
insb
mov
dec
pop
pusha
xchg
adc
in
into
je
push
sbb
push
cmp
insb
int3
stc
scas
mov
dec
daa
imul
nop
call
gs
lods
inc
cmpl
sub
jp
mov
outsb
cmp
mov
mov
inc
outsl
push
mov
outsl
mov
pusha
jo
add
mov
mov
add
gs
add
mov
lods
mov
push
or
adc
enter
sbb
out
lods
stos
subl
fdivl
je
dec
sti
sar
int
cmpsb
jno
inc
cld
mov
fcoml
gs
jp
scas
mov
cmp
out
repnz
pop
popf
push
test
out
jp
sahf
jecxz
jecxz
enter
adc
xchg
data16
popf
cmc
ret
mov
mov
repz
nop
mov
out
enter
int
adc
aad
test
mov
aaa
sahf
pusha
push
lods
push
pminsw
or
jp
loope
adc
or
divb
outsl
movsl
cmp
and
fwait
cli
ja
aas
std
ja
popf
cmc
enter
dec
cmpsl
jae
out
ret
push
xchg
aaa
xor
ja
add
and
mov
popf
fdivs
push
jno
mov
and
pop
mov
sbb
stos
cmpsl
xchg
add
mov
iret
imul
test
repz
sub
xchg
ja
jmp
out
jbe
into
call
inc
movsl
in
aad
cmp
sbb
movsl
nop
add
bound
repnz
int3
emms
mov
adc
out
cmp
xlat
inc
into
cmpsb
jns
dec
mov
aas
and
popl
call
add
add
jge
push
movsl
push
lock
fsubrs
xchg
loop
mov
sbb
and
mov
std
sub
inc
lcall
imul
mov
dec
iret
or
xchg
fwait
adc
push
adc
mov
jns
jg
popf
mov
fwait
shl
jp
rorl
rcrb
shll
stos
ljmp
fsubr
lods
mov
add
jae
cld
cmp
addl
fcoml
sbb
aam
xchg
lods
xchg
mov
test
nop
gs
push
lahf
sbb
mov
hlt
and
jg
pop
ret
jnp
stc
pop
je
sbb
dec
repnz
jbe
mov
sub
inc
mov
jae
aad
std
mov
jecxz
scas
arpl
inc
notl
adc
int3
jmp
pop
inc
dec
mov
jecxz
pop
sub
les
sbbb
insb
mov
sbb
lcall
mov
or
sbb
lahf
mov
or
cmp
inc
and
sbbb
jo
std
sbb
iret
ljmp
in
fildl
cmc
push
lods
sub
pop
mov
in
shr
mov
jns
filds
cmp
inc
adc
add
push
xor
sbb
mov
insl
push
mov
pop
push
xor
or
jns
add
lds
lea
inc
adc
repnz
movsb
dec
xchg
cmp
sbb
je
push
xlat
jl
push
sti
add
sub
push
les
and
and
fadds
sbb
sarl
lock
push
dec
decb
call
loop
mov
aas
imul
call
clc
pop
ljmp
stos
sti
or
js
cmc
mov
inc
push
cltd
xchg
ss
mov
cld
aam
sahf
leave
in
inc
ljmp
imul
mov
inc
and
push
loopne
lahf
int3
add
popf
push
mov
lods
daa
dec
cmpsb
adc
testb
push
cli
ja
cld
pop
fwait
inc
pop
fnstsw
and
mov
lahf
gs
sbb
icebp
es
sti
je
testb
cmc
mov
arpl
sub
pop
out
daa
std
dec
push
cli
mov
lret
mov
mov
stos
movsb
mov
mov
fistl
lods
pop
stos
dec
dec
dec
adc
xchg
std
sub
pop
add
mov
or
lret
lcall
adc
mov
cmp
cmp
push
dec
xor
dec
call
pusha
adc
sub
out
jmp
mov
pop
push
pusha
xchg
dec
test
cltd
xor
xchg
jle
ret
xor
pop
aad
je
add
mov
jle
cwtl
stc
xor
cli
cmp
das
mov
fwait
iret
in
mov
decb
adc
stos
push
lcall
push
jbe
enter
sbb
mov
bnd
or
or
cmc
mov
cmp
and
adc
clc
lret
enter
stc
sahf
ja
add
ljmp
addr16
dec
outsl
ret
repz
test
push
jne
fwait
lahf
repz
mov
cmp
enter
test
and
ja
incb
xor
add
in
pusha
jl
pop
mov
ret
sub
clc
jp
push
mov
stos
repz
pop
sub
lcall
xchg
pop
xchg
and
cmp
ret
xor
dec
inc
ja
inc
lret
add
mov
jns
mov
mov
xor
adc
aaa
pop
sub
mov
push
cmc
mov
pop
sub
call
xor
clc
inc
mov
stos
jb
fwait
lods
sbb
addb
cmp
lods
xor
pusha
pop
pop
imul
jae
inc
push
adc
sbb
fwait
push
add
fcomps
add
lods
jmp
adc
nop
dec
mov
mov
repz
dec
push
push
xor
movsl
scas
jnp
out
jmp
push
rep
in
into
fidivl
inc
jge
aaa
xchg
sub
jns
popf
ja
push
dec
addr16
mov
out
imul
out
mov
jl
popa
pop
jb
xlat
pop
fcoms
add
add
in
cmpsb
mov
fcomps
cmc
imul
test
xchg
inc
mov
lods
or
mov
push
xor
xchg
imul
jmp
dec
and
push
ss
mov
mov
shrl
pop
into
hlt
xor
mov
sbb
in
or
push
cld
dec
cmp
or
fs
pusha
leave
hlt
and
push
pop
icebp
and
popf
pop
push
add
cmp
xchg
lods
mov
sqrtps
mov
adc
call
fwait
jne
push
mov
aas
mov
das
mov
cmp
divb
sub
cltd
fmull
jb,pt
push
push
lods
subb
repz
enter
sub
sub
scas
dec
ljmp
and
or
adc
jp
pop
xorl
lods
in
loope
push
das
sub
jne
mov
inc
fdivrl
jbe
in
stos
pop
fwait
inc
insl
lret
lds
jo
lret
mov
dec
cmp
popa
out
out
pop
inc
jmp
sub
imul
lea
arpl
add
inc
ret
shr
and
xor
xor
mov
cmpsb
and
inc
dec
pop
xlat
mov
push
jg
pop
push
insl
outsl
pop
sbb
outsl
mov
pop
jmp
fwait
inc
xchg
or
movsb
ljmp
push
mov
mov
rorb
xor
inc
outsl
xchg
mov
movsl
xor
in
mov
xor
aam
into
dec
xor
aaa
loop
xchg
xor
mov
pop
outsl
mov
cld
out
stos
push
mov
push
dec
or
cmpsl
cmp
or
cltd
cld
mov
into
insl
cltd
enter
enter
sbb
hlt
cmp
aam
xor
xor
and
fsts
sub
mov
ds
xchg
mov
mov
sbb
ds
pop
and
pushf
pop
xlat
arpl
push
in
add
sbb
dec
addb
push
cmpsb
adc
xor
stos
js
or
in
sub
or
lret
mov
gs
push
or
xlat
pop
cmp
xchg
arpl
mov
inc
mov
cmpsb
cmc
bnd
push
pop
rcrb
sbb
push
cmp
xchg
std
mov
outsl
mov
out
mov
dec
clc
sbb
fnstenv
inc
mov
dec
test
aas
icebp
xchg
add
arpl
and
or
fildl
std
jne
mov
cmpsb
call
sbb
jno
or
push
es
popa
pop
in
insl
xor
push
addr16
pop
hlt
or
scas
or
mov
mov
movsb
push
xchg
cmp
psadbw
icebp
lods
add
popa
sub
push
jp
add
xchg
notb
pop
cmp
inc
ds
add
iret
pushf
jmp
lahf
or
shlb
clc
pop
arpl
inc
outsl
lcall
insb
push
or
js
xchg
push
inc
shll
mov
jmp
mov
cli
nop
call
adc
movsb
fsts
or
lahf
inc
in
in
stos
ret
enter
mov
jle
pop
jae
movsb
dec
test
jl
pop
outsb
stc
inc
in
sbb
pop
lods
popf
dec
mov
lods
mov
aas
mov
cmp
inc
ljmp
push
enter
icebp
dec
mov
mov
and
xchg
xchg
jg
cmp
push
xlat
decl
jne
sti
inc
add
lea
mull
pop
lods
push
cmp
lock
and
jg
scas
aad
push
mov
adc
sbb
sub
popa
out
clc
insl
js
cmp
data16
inc
add
xchg
mov
lret
lock
cli
push
xchg
lock
mov
rcrb
popa
xchg
dec
ret
mov
push
lock
outsb
cmp
mov
lock
jae
mov
add
mov
jmp
mov
lret
mov
fisubs
sbb
insl
ret
push
dec
cltd
addb
inc
and
aad
jo
sub
shrl
popf
imul
sub
scas
clc
rcr
inc
imul
arpl
loopne
xor
out
or
and
add
fsubrp
push
clc
mov
aad
pop
cs
lods
jg
mov
pop
jge
and
iret
cmpsb
cmpsb
inc
aad
xchg
iret
mov
jae
xchg
lock
dec
xor
mov
std
sub
and
shlb
xor
sbb
xchg
add
sbb
imul
cs
adc
xchg
jmp
and
dec
or
mov
les
rolb
jg
push
xlat
int
mov
jl
ret
jl
jnp
jo
mov
mov
cmp
aad
fmulp
cs
or
jecxz
sahf
arpl
mov
stos
data16
and
sub
divb
push
xor
or
scas
in
jp
in
xchg
shlb
lcall
std
fstl
mov
lret
xor
add
sub
mov
mov
cmp
mov
in
xchg
stos
inc
and
les
adc
mov
movl
push
std
push
in
add
popa
aam
add
jecxz
or
adc
push
loop
aam
adc
or
cli
push
mov
inc
pop
roll
xor
movsb
add
mov
adc
ss
ds
mov
cltd
shlb
dec
dec
xchg
or
fcoml
in
test
mov
jecxz
ss
cld
pushf
mov
adc
data16
mov
cmp
xor
xchg
adc
or
cltd
push
mov
rcrl
mov
je
aas
lds
repnz
jnp
adc
lods
loope
ret
sub
mov
test
lock
ljmp
jg
pusha
mov
fcoms
arpl
mov
push
shrb
repnz
cs
loop
repz
mov
jle
xor
hlt
ret
pop
imul
daa
mov
mov
add
stos
cld
addr16
push
sbb
add
dec
cmp
popa
push
mov
xor
pop
out
and
mul
pop
mov
pop
shl
lahf
and
jns
test
inc
das
mov
dec
fwait
add
adc
cwtl
js
xlat
shll
add
fxch
adcb
xchg
jb
xor
xchg
inc
clc
out
clc
pcmpgtd
fsubrl
or
xor
mov
je
sahf
xor
nop
stos
stc
mov
insl
cli
inc
cmp
xchg
jb
jl
cwtl
dec
jne
fmull
mov
pop
push
mov
lret
inc
rcrl
cmpsl
testl
sub
clc
addr16
mov
mov
jns
pop
pop
ret
xchg
int
xor
test
sbb
idivb
cltd
sub
and
paddsb
out
push
inc
and
clc
stos
arpl
fwait
int3
pop
call
and
jae
sbb
enter
jno
xchg
mov
movsb
std
dec
dec
mov
inc
mov
int
jecxz
std
pop
push
mov
pushl
lds
push
lods
imul
cmp
lods
imul
jg
jp
jg
xchg
insb
mov
ds
decb
imul
dec
sbb
adc
bound
lahf
jl
movsl
test
push
sub
movsl
xchg
mov
push
or
mov
enter
push
jne
daa
add
aaa
daa
bound
inc
xchg
call
jl
stos
aad
pop
mov
jb
icebp
xchg
mov
xor
sub
push
sbb
ljmp
sub
aaa
dec
jle
fsub
ljmp
mov
pop
mov
lods
mov
xor
mov
xchg
out
mov
fistps
les
xor
sub
adc
iret
mov
mov
fadds
out
xchg
add
sahf
mov
test
in
xorl
sub
or
fsubl
push
cwtl
sbb
les
xchg
sbb
into
mov
or
add
inc
xchg
inc
inc
cwtl
subb
push
pop
push
nop
push
ja
push
pushl
es
jb
sbb
add
scas
pop
cmpsl
lods
cs
aaa
push
xor
icebp
lahf
aas
push
cs
movsl
xchg
jg
xchg
cltd
mov
pop
xor
xchg
add
hlt
int3
sub
adc
xor
cmc
inc
fidivl
jp
shrl
push
xor
xchg
scas
push
jl
pop
into
push
dec
movsb
mov
aad
sub
hlt
bound
je
mov
stos
ret
cmp
hlt
mov
and
lret
pop
jb
jns
adc
rcrl
push
add
mov
sub
ficoml
mov
stos
aas
sub
adc
dec
aam
pop
pop
orl
dec
mov
std
adc
cltd
lret
sub
hlt
fs
jle
pop
stos
fsubrs
cs
arpl
test
push
pop
push
enter
or
mov
enter
je
or
lahf
inc
dec
stos
pop
leave
jnp
push
mov
sbb
loope
cmc
ljmp
dec
mov
cmpsl
xadd
and
int
and
cmp
push
sub
sahf
push
lahf
cmp
push
iret
cltd
enter
pusha
mov
push
jl
insb
ljmp
push
cmp
adc
xorl
mov
jmp
inc
ret
mov
mov
sbb
lods
call
sbb
int
xchg
xor
roll
es
sbb
adc
lods
add
mov
out
imul
mov
or
or
push
stos
sbb
xchg
cli
lcall
cwtl
xchg
hlt
xchg
or
je
scas
aad
repz
dec
lods
iret
bound
xor
fcomps
not
xchg
in
xchg
ffree
pusha
mov
ss
mov
cmpsl
push
jmp
dec
sbb
lahf
clc
iret
idivb
gs
js
lret
test
ja
mov
add
push
xchg
bound
xor
insl
pop
das
sub
add
and
rcr
fcompl
push
mov
add
pop
ficoml
sub
xlat
pop
sbb
jb
lahf
idivb
nop
sub
rcrb
inc
int3
icebp
push
xor
or
mov
imul
xchg
sub
jbe
add
or
dec
stos
arpl
xor
sub
out
dec
mov
repnz
roll
mov
pop
pop
sbb
imul
sbb
lods
xor
int3
push
pop
fdivl
push
push
adcl
fwait
test
mov
and
jle
pop
data16
lea
jnp
mov
addl
nop
jecxz
ja
in
sub
in
nop
cs
mov
lods
inc
fimuls
ret
adc
jne
shll
mov
inc
and
rcrb
xor
mov
jae
and
jge
out
insb
ja
inc
loopne
cmpsl
adc
rcrb
mov
fs
mov
ficoms
push
loopne
cmp
das
sti
lret
js
js
fmull
dec
popa
inc
lret
push
and
loop
xchg
mov
cs
inc
nop
and
sub
sub
sbb
rcrl
outsb
and
add
ljmp
out
ljmp
mov
jle
push
in
sub
sbbb
jmp
cmc
push
aam
sahf
push
mov
fcompl
mov
out
xor
aad
lods
cmpsb
xlat
and
adc
push
mov
cmp
sbb
mov
es
lods
or
test
adc
out
test
and
mov
cmp
out
xchg
sarl
jmp
test
jo
jae
icebp
sub
sbb
hlt
dec
xor
adc
leave
pop
scas
adc
adc
mov
jno
int
and
inc
mov
out
test
push
imul
or
pop
pusha
xchg
fisubl
ret
inc
into
divb
dec
dec
push
into
in
add
add
pop
jmp
inc
dec
dec
fmull
xor
sbb
sti
push
loop
aas
push
push
cwtl
rcr
mov
adc
push
and
rclb
das
clc
jge
test
add
mov
lahf
sbb
out
inc
xor
out
xor
out
ret
shlb
faddl
adc
inc
daa
pop
lahf
shrl
sub
ret
adc
mov
sahf
les
into
subl
jl
mov
adc
call
jnp
pusha
and
jae
daa
testl
movl
aaa
dec
cltd
mov
sub
pop
pop
mov
insl
rorb
mov
xchg
xchg
mov
xchg
in
je
sub
mov
int3
nop
inc
xchg
or
in
out
addr16
sub
add
cmp
out
gs
movsl
cmp
icebp
push
add
shrl
mov
mov
loop
or
test
ret
rclb
sub
dec
imul
pop
psrld
add
jnp
xor
and
in
in
les
mov
enter
xchg
and
inc
loope
cli
add
pushf
mov
sub
mov
and
pop
lret
add
cmpsb
jecxz
push
push
call
push
mov
repnz
jg
ds
mov
jge
iret
incl
out
sti
push
pop
inc
pop
fcoms
xchg
inc
jo
shll
movsb
loop
jecxz
mov
stos
jl
lods
imul
xchg
or
loope
mov
mov
in
cmp
dec
add
push
xor
daa
sub
test
cmp
out
lret
mov
sbb
das
mov
jno
fnstsw
notl
lret
push
out
or
notl
and
inc
lret
insb
mov
dec
pop
stos
jb
jg
mov
out
inc
ds
les
inc
pop
or
cmpsl
pop
jb
test
xchg
cmc
push
xchg
push
imul
mov
test
fildll
mov
divb
xor
sub
insb
add
inc
xor
mov
test
sahf
repz
and
inc
decl
leave
roll
cwtl
test
push
pusha
mov
push
shrb
fwait
sub
mov
sahf
xor
sub
ss
or
shlb
xlat
shrb
pop
shr
cmp
pop
mov
xor
pop
jg
clc
push
and
popf
pop
pushf
pop
stos
subb
rcrb
push
pop
sub
mov
mov
out
inc
shrb
ljmp
cmovnp
jo
xchg
sbb
adc
and
adc
aaa
mov
pop
xor
dec
xchg
popf
or
cltd
lds
push
or
jnp
pusha
pop
mov
movsb
pop
dec
pop
daa
xchg
mov
push
dec
mov
push
mov
mov
ja
aam
cmp
movsb
fldcw
icebp
test
test
call
idiv
arpl
ja
cli
daa
pop
shlb
sti
rolb
jg
sti
jb
xor
out
inc
scas
sarl
lahf
mov
push
lret
setne
add
lods
jns
cmp
shrl
push
cmp
enter
mov
mov
xor
mov
or
lods
cmp
aas
sar
ljmp
xchg
cmpb
push
jle
pop
mov
je
cmpsb
mov
xor
pop
jge
dec
xchg
add
in
ss
lea
mov
mov
lret
mov
pop
aam
push
sub
and
xchg
inc
push
fidivrl
ds
lea
ret
adc
int3
outsl
fwait
or
mov
ss
aas
cmc
jle
cltd
jl
mov
out
cmp
sahf
xor
xchg
pusha
mov
das
enter
pop
pop
push
or
cmc
cmc
aad
dec
xor
adc
cmc
mov
push
outsl
icebp
sub
sbb
and
inc
inc
xchg
xchg
insl
xlat
xchg
pop
xchg
repnz
stc
roll
clc
nop
cld
cmp
sbbb
addr16
add
outsb
or
loopne
mov
fdiv
mov
iret
inc
push
xor
pop
add
xchg
or
enter
loope
adcb
cmp
pop
sbbb
cmc
rolb
leave
adc
pop
or
idivl
or
hlt
repz
shlb
mov
xor
mov
inc
mov
call
fcoml
rol
dec
mov
ljmp
popa
inc
and
inc
cli
into
sub
lret
sarb
movsl
lret
and
xchg
int
cltd
push
fwait
xchg
push
dec
dec
xchg
ss
xchg
xor
sub
fmull
cmp
lea
imul
jecxz
in
arpl
adc
shll
popa
pop
dec
into
clc
imul
push
je
lods
shr
cmpsb
dec
fiaddl
xor
pop
dec
mov
scas
mov
and
cli
jle
or
lret
push
das
cmpps
es
pop
mov
imul
push
adc
decl
lahf
xchg
mov
cltd
sub
adc
mov
and
mov
dec
inc
cmpsl
in
push
bnd
fnsave
or
cwtl
ds
test
jl
xor
shrb
lods
scas
jnp
pop
and
cmp
add
push
icebp
or
inc
into
outsl
xor
push
sbb
loope
xor
and
test
push
outsb
jnp
mov
pop
add
mov
lcall
pop
xor
pop
aam
cmp
xor
movsb
mov
ret
sti
js
push
aad
rcll
mov
jmp
sbb
js
push
fwait
xchg
sub
pop
js
add
pop
sbb
mov
mov
cltd
fidivl
inc
hlt
pushf
xchg
cmp
xchg
xor
mov
cs
mov
pop
sub
push
jb
sub
std
cltd
adc
xchg
xchg
stos
push
sub
int
stos
xchg
cmp
out
xchg
rol
shl
or
xchg
mov
lods
push
mov
mov
in
pop
test
jge
andl
mov
rcrl
fs
pusha
sub
dec
xchg
add
cwtl
data16
aam
adc
syscall
pop
or
mov
push
js
and
add
out
mov
test
fdivrl
in
and
push
push
dec
mov
or
mov
xor
jle
mov
mov
push
inc
dec
push
and
push
ds
int3
pop
pop
mov
jle
mov
add
xchg
jbe
lcall
jnp
lret
mov
shll
sub
pop
in
mov
mov
push
aam
jmp
pop
inc
adc
stc
mov
jp
shl
mov
and
xor
notb
xchg
lret
xlat
call
sarb
sbb
inc
jnp
es
push
cld
mull
jbe
pop
call
mov
push
scas
outsl
add
dec
xor
xchg
loope
in
imul
addl
push
xchg
mov
fwait
es
ljmp
ljmp
cmp
adc
test
sbb
test
in
jle
sub
sub
jg
jecxz,pn
aaa
xor
test
or
dec
sahf
mov
ss
lcall
in
test
adc
cmp
ficomps
pusha
sarl
rcll
xlat
lret
addr16
or
mov
dec
cmp
adc
int3
lcall
mov
int3
inc
test
hlt
cltd
aad
inc
faddl
mov
std
leave
inc
shl
jae
xchg
mov
vmulsd
out
xor
addr16
sahf
lahf
mov
jmp
push
mov
mov
les
xchg
cmp
inc
mov
mov
cwtl
cs
sahf
mov
int
and
jb
rolb
ret
jg
mov
mov
cmpsl
cs
xor
mov
pop
xor
push
les
jo
imul
sbbl
push
sbb
shrb
mov
xor
xorl
xlat
xchg
stos
dec
mov
sbb
pusha
dec
and
loopne
mov
mov
outsl
adc
adc
inc
aad
mov
cmp
sbb
inc
icebp
jno
mov
pusha
in
sbb
or
scas
cwtl
mov
aam
cmp
push
adc
cmp
jecxz
cmp
jle
jle
jle
mov
jecxz
fs
mov
adc
cmp
insl
lock
lahf
movsl
outsl
je
cmp
fistps
in
frndint
sub
push
into
jge
aaa
into
sbbb
jbe
pop
inc
xchg
idiv
int3
mov
xchg
repnz
dec
jae
and
insb
test
push
jae
mov
xlat
lcall
aam
lahf
jle
push
push
mov
inc
mov
in
rorb
negl
lret
mov
fwait
pushf
repnz
cmp
pop
or
lret
mov
mov
loope
push
xchg
ficomps
push
pop
jg
outsl
mov
sub
push
fsubl
mov
rcrl
mov
mov
jge
lods
lods
mov
ljmp
mov
jmp
and
in
pop
xchg
arpl
xchg
mov
jne
inc
pushf
and
cmp
and
pop
xchg
mov
mov
push
sbb
out
mov
mov
or
insb
test
daa
fnstcw
mov
or
shrl
pop
mov
out
shr
loope
pop
insl
repnz
cmc
lret
push
adc
sub
push
add
jp
mov
lds
dec
mov
add
pshufw
sbb
out
inc
xor
pop
out
in
in
sar
adc
add
xchg
cmpsb
jb
pop
int
hlt
ror
ds
push
insb
aas
mov
insb
pushf
pop
icebp
add
xchg
mov
add
mov
cmp
imul
pop
inc
or
lds
out
or
xor
and
fwait
push
shl
dec
add
cmp
fsubrl
add
fwait
lods
or
dec
popf
loope
fsubrp
xchg
mov
stos
cmp
push
ss
imul
inc
xor
add
xchg
stos
insl
mov
add
dec
push
fucomi
xor
filds
out
in
and
mov
out
or
dec
jge
popa
aad
xchg
lock
nop
sahf
adc
mov
or
dec
imul
daa
cmpsb
mov
jle
aas
jae
inc
push
dec
jge
mov
jl
repnz
inc
pushf
dec
push
cli
or
movsb
and
lds
iret
mull
mov
imul
mov
stos
xchg
fs
lods
sarl
out
dec
dec
cwtl
ret
push
xchg
aam
imul
js
fistps
das
and
arpl
cmp
outsb
stos
int
aad
push
fimuls
push
jo
lods
lods
pop
xchg
push
pop
pop
int3
loop
out
icebp
sbb
jne
cmpsl
scas
jb
sbb
sbb
dec
insl
mov
push
lahf
jb
int
movsb
jo
pop
pop
ss
and
dec
cmp
loop
icebp
add
dec
idivl
inc
jb
pop
sahf
mov
insl
pop
das
xchg
jp
push
inc
lods
push
push
cmpsl
loopne
jp
xchg
add
nop
push
std
jno
dec
stc
dec
aas
jns
push
jge
int
shrl
scas
jg
lret
push
push
jl
inc
add
add
xchg
scas
shll
sbb
xor
fucom
push
inc
es
xchg
push
std
insb
mov
mov
aas
xchg
mov
mov
pop
adc
sarl
flds
adc
inc
lret
in
mov
sub
dec
jno
flds
pop
clc
push
stos
or
cmpsb
imul
xorb
mov
les
dec
in
lods
add
in
scas
jl
cli
lcall
int
rcrl
add
sbbl
mov
dec
out
test
cmp
dec
lods
outsl
mov
cmp
pop
inc
xor
insb
fnstenv
adcl
and
push
ret
mov
icebp
test
lea
cmp
lds
or
hlt
in
mov
sub
test
popf
mov
inc
and
cmp
jne
sbb
lcall
js
in
lods
dec
xchg
cmp
ja
add
add
dec
push
into
and
or
not
dec
sbb
xor
andl
and
les
clc
or
pop
stos
into
in
inc
fstl
cmp
lods
je
mov
cltd
loop
es
dec
dec
bnd
inc
push
cli
sti
negb
jno
sub
into
stos
scas
movsl
mov
fcmovbe
push
mov
sbb
adc
jecxz
pop
into
sub
push
xorb
fiadds
rcrb
mov
idivl
mov
xchg
icebp
or
or
ss
cli
mov
dec
fldt
lret
mov
repnz
push
stc
nop
inc
pop
jge
cs
xor
pop
mov
ss
push
stc
call
pusha
stc
hlt
scas
mov
cwtl
imul
cmc
dec
ljmp
enter
in
mov
mov
dec
or
call
jge
dec
aas
popa
cs
movsl
or
aam
aaa
sti
pop
pop
and
lret
add
push
lds
nop
push
dec
out
out
lret
lea
les
inc
sbb
jmp
sti
add
cmp
mov
not
add
pop
dec
inc
and
movsb
les
jb
cmp
cmpsb
pop
fists
in
add
adc
shr
adc
lret
push
les
ret
mov
adc
push
cmpsb
in
and
rolb
xchg
sub
cmpb
xchg
test
push
les
mov
push
dec
lcall
sub
adc
mov
cmp
imul
shlb
addb
test
aas
jns
inc
cld
dec
cltd
jmp
pushf
pop
arpl
sbb
or
arpl
in
push
add
mov
shlb
mov
or
int3
out
dec
push
adc
dec
push
call
add
inc
xchg
pop
arpl
in
xlat
add
xor
stos
loope
cmpsl
sub
scas
pop
pop
adc
cmc
push
xchg
popf
les
mov
into
sbb
lahf
decl
inc
ror
pop
jae
shlb
mov
inc
rclb
adc
data16
int3
mov
jb
adc
jle
jae
int
test
sbb
pop
xchg
jns
jbe
out
ja
sar
jl
fwait
jnp
push
mov
and
pushf
loop
call
lods
push
push
mov
add
adc
mov
inc
int3
mov
fwait
aas
xor
pop
sbb
dec
jmp
pop
test
cmpb
ret
sbb
mov
dec
mov
loope
out
mov
sub
xchg
mov
or
popl
push
repz
xchg
daa
adc
and
in
stc
mov
cld
jno
repnz
mov
push
mov
outsb
push
inc
jl
or
pop
mov
inc
jl
cmp
mov
or
inc
xchg
inc
cmp
pushf
sub
pop
jns
and
sahf
std
fs
js
into
xchg
insl
adc
add
arpl
leave
in
insl
fdivl
cltd
push
jmp
push
push
loopne
nop
mov
mov
inc
mov
movsl
cld
sbb
sbb
xor
jbe
insb
push
or
test
push
pushf
push
xchg
out
gs
and
sub
adcl
mov
mov
ret
adc
push
xor
test
sahf
bound
out
push
push
inc
dec
sti
cmp
jecxz
dec
mov
sbb
lahf
pusha
out
outsl
daa
shll
bound
adc
inc
ret
in
mov
mov
mov
jmp
lret
in
movb
adc
mov
arpl
adc
xor
sbb
fdiv
fadds
test
mov
lock
adc
push
decb
inc
mov
shr
pop
pop
push
repnz
push
int3
pop
inc
call
daa
or
ljmp
inc
into
xchg
ficompl
mov
and
adc
jle
cmp
shll
into
stos
fld
mov
mov
cmc
loopne
xchg
test
jecxz
negl
push
push
and
add
mov
push
mov
sub
dec
fwait
add
fistl
and
lods
mov
or
inc
adc
into
or
popa
fcmove
mov
bound
xchg
mov
ljmp
negb
mov
adc
mov
fstpl
mov
inc
pop
push
lret
outsb
jae
adc
stos
sbb
fs
xor
adc
in
addr16
mov
mov
mov
test
out
shrb
arpl
lods
adc
inc
inc
inc
fwait
lds
fisubrl
out
jl
inc
lds
popa
push
int
xchg
cmp
xor
jp
fdivr
dec
roll
mov
inc
dec
ds
int
push
and
in
movsl
bound
lock
scas
xor
inc
std
insl
loopne
xchg
cmpsl
idivl
into
jmp
push
arpl
mov
jae
push
mov
mov
mov
sub
dec
sub
cmp
push
and
icebp
pop
call
outsb
fwait
js
and
test
cmp
out
xor
jecxz
inc
dec
stos
mov
popa
push
insl
fnstcw
jl
scas
adc
mov
sahf
mulb
bound
out
movsl
faddl
inc
das
movsl
pop
cli
push
dec
cmp
cmp
mov
adc
xchg
add
leave
push
pop
roll
fiaddl
xor
adc
fstl
test
push
lods
mov
sbb
repnz
das
cmpsb
dec
fs
lcall
add
xchg
aam
out
das
loop
cmp
lcall
xlat
pop
push
jle
jg
fisubrl
sub
or
scas
xchg
fmuls
or
sub
fsubrl
rcl
out
in
insl
adc
test
xor
cmp
sbb
xchg
xor
cld
inc
pop
mov
jle
test
and
jb
insl
cmp
push
js
mov
adc
sahf
xchg
or
addl
ja
jg
jmp
mov
xchg
aam
js
or
and
xchg
adc
clc
and
repz
mov
ljmp
popw
xor
push
push
jae
mov
sbb
or
jo
loopne
dec
sbb
arpl
shrl
dec
mov
xor
cmp
pop
jg
mov
and
add
push
icebp
rorl
cld
pop
mov
std
js
movsb
dec
xchg
sbb
fsubrl
popf
or
jae
iret
fists
scas
adc
xor
cmp
mov
lods
lock
push
data16
in
xor
sbb
jl
pop
pop
outsb
or
push
fsubrs
cmp
mov
lods
cwtl
addb
add
nop
mov
xor
xchg
sub
push
outsb
lret
xchg
xchg
mov
ja
orb
and
repnz
mov
xchg
xor
ja
pushf
or
jbe
cwtl
and
idivl
adc
pop
xchg
sub
or
popw
rol
push
testl
cs
dec
int
lahf
pop
jne,pn
mov
popa
es
push
pop
adc
jle
mov
mov
dec
mov
hlt
add
pop
out
and
fwait
aaa
in
mov
ds
lret
les
push
or
and
add
jmp
cli
mov
or
imul
xchg
in
ss
pop
push
mov
add
xlat
mov
es
xor
jg
add
and
dec
lock
mov
add
and
cmp
in
push
or
lret
loopne
lret
fs
lods
mov
mov
loop
pop
loopne
adcl
mov
lods
push
pop
mov
hlt
dec
popf
es
adc
sbb
es
cmp
push
les
addl
lea
cmpl
xor
sbb
repz
testb
cmp
adc
lret
mov
sahf
hlt
sarl
into
xchg
add
fisttpll
and
clc
and
notl
arpl
xlat
stos
add
ljmp
repnz
pop
lcall
js
adc
aaa
jns
mov
add
add
movsl
inc
fisttpll
sahf
fisubl
outsb
shrb
xchg
cmp
pop
mov
mov
sub
xor
and
leave
outsl
inc
xor
fimull
testb
xor
adc
mov
and
jne
cmp
pop
mov
cmp
and
mov
repz
xchg
or
and
push
push
aad
in
add
lahf
xchg
movsb
cmp
jl
adc
repz
push
outsb
xchg
pop
fisttpll
xchg
inc
cli
adc
jecxz
insl
dec
push
movsl
inc
pop
scas
mov
push
js
push
enter
insl
cmp
xor
sarl
outsb
insl
and
pusha
pop
pop
pop
push
fistl
mov
call
xchg
cmp
fs
lret
pop
mov
lahf
jmp
cmpsb
jecxz
loopne
jmp
js
and
sub
test
dec
or
push
mov
dec
mov
pop
arpl
dec
dec
adc
xchg
shlb
test
inc
mov
add
mov
ss
imul
js
or
sarb
jno
mov
sti
pop
dec
jg
ret
add
mov
fsubr
push
inc
mov
loope
add
dec
pop
nop
jp
cmpsl
sub
mov
in
push
mov
mov
fxch
mov
mov
jp
xor
mov
int3
fisttps
mov
lahf
fadds
push
cmp
mov
ds
aam
dec
fstpt
or
iret
xor
jle
loop
scas
or
push
push
lds
sub
aaa
mov
cmp
mov
mov
push
inc
test
pop
push
out
or
xor
dec
icebp
mov
mov
or
and
xchg
push
outsl
mov
mov
pop
and
mov
popf
movsb
enter
daa
mov
inc
push
jmp
shlb
or
pushf
adc
fs
loope
pusha
xor
or
fnsave
mov
xor
shl
arpl
mov
shll
ret
mov
jmp
in
push
add
xchg
leave
xchg
dec
pusha
jns
sub
stos
xor
aaa
aam
mov
adc
jp
repz
jmp
mov
sub
jmp
cmp
push
test
fwait
les
xorl
lcall
and
inc
mov
and
loopne
mov
sub
inc
icebp
push
jno
icebp
dec
xor
push
or
xchg
sbb
data16
mov
xchg
or
daa
add
mov
test
insl
inc
ds
push
xor
adc
mov
push
fistl
int
inc
or
jl
pop
stos
aam
out
sub
insb
inc
sub
xchg
les
sub
cwtl
push
iret
mov
mov
adc
jno
sbb
arpl
dec
ficomps
out
mov
adc
inc
enter
cmp
xlat
arpl
scas
loope
cmp
pop
fstl
dec
adc
add
mov
pop
inc
xorb
daa
cltd
lock
pop
addb
popa
xchg
xor
cmp
arpl
adc
or
push
adc
sti
roll
lcall
xchg
pop
in
js
add
ret
add
out
loop
popf
add
sbb
pop
and
xor
mov
sti
inc
push
movsb
inc
ss
push
mov
and
pushf
in
repnz
jp
out
adc
mov
dec
test
int
mov
fimull
test
out
pop
orb
pusha
outsl
std
sarl
leave
add
test
pop
scas
out
xchg
sbb
adc
cmpsb
lret
cli
dec
mov
add
out
lea
cs
lock
aam
sub
das
notb
xor
jp
fisubl
jns
xchg
stos
push
addr16
xchg
and
xlat
cmpsb
pop
clc
mov
jne
jmp
lahf
aas
in
and
test
mov
cld
out
rcll
gs
ljmp
test
sbb
or
fnstenv
inc
jns
jo
sub
pop
xor
xor
mov
es
sbb
adc
divb
lods
std
fsts
aaa
or
dec
mov
push
sbb
movzwl
pushf
lods
sahf
scas
inc
lcall
in
cs
xchg
dec
dec
pop
sbb
inc
adc
roll
arpl
sbb
outsl
pop
out
daa
mov
inc
in
xchg
clc
mov
scas
hlt
push
or
jmp
nop
mov
enter
icebp
fsubrs
iret
mov
sbb
jg
cwtl
pop
jne
sbbl
add
xchg
mov
test
aam
sub
in
cmp
sub
aas
fsubs
sub
sti
push
jo
xchg
cld
lods
into
cltd
es
adc
les
mov
push
jns
xor
pop
loop
add
xchg
outsb
mov
insl
add
add
mov
add
add
adc
fstpt
xchg
inc
mov
lds
pop
cmp
push
aas
addr16
lcall
xchg
fsubrs
mov
mov
jl
mov
pop
xchg
repnz
sbb
mov
je
into
or
dec
ljmp
ljmp
mov
dec
cmp
scas
es
cltd
push
addb
jg
nopl
mov
mov
dec
cs
fwait
call
cmp
jl
stos
inc
leave
fiaddl
mov
dec
negb
push
int3
in
dec
pop
xchg
dec
fistpl
cwtl
push
and
mov
in
xchg
push
fstpl
sub
xchg
push
mov
jge
outsl
push
dec
sub
popf
pop
mov
xchg
mov
stos
sbb
scas
out
add
xor
cmp
repnz
popf
jg
lock
pop
push
fwait
mov
push
mov
xchg
mov
fisttpl
dec
incb
add
mov
ja
xchg
cmp
das
push
push
sub
popa
sbb
test
in
or
sbbl
das
mov
ret
daa
movb
mov
pop
jbe
aad
je
hlt
xchg
inc
mov
jle
test
in
std
cld
adc
sub
push
dec
hlt
setg
pop
xor
enter
mov
cld
or
fiaddl
pop
adc
add
add
dec
mov
mov
xor
je
cmp
pop
push
adc
lods
dec
or
mov
adc
xchg
sub
cs
dec
in
ss
add
inc
sub
addr16
pop
mov
lret
mov
das
popa
jnp
mov
mov
mov
dec
sbb
imul
cmp
je
mov
bound
pop
mov
shlb
mov
xchg
call
shll
loope
int
jne
mov
aas
rcll
pop
jb
adc
mov
pop
les
insl
lret
xor
in
outsl
jb
pop
mov
clc
js
pop
mov
loope
mov
sub
adc
cmp
xchg
mov
mov
mov
and
ja
repnz
mov
xchg
fmulp
dec
inc
cmp
jmp
test
movsb
push
dec
rorb
ljmp
ret
aas
imul
js
mov
jno
sbb
mov
pop
rclb
add
pop
lea
inc
pop
push
dec
into
adc
out
sahf
es
or
dec
mov
xchg
inc
sbb
mov
xorl
mov
test
lret
cli
test
lock
sub
int3
mov
stos
xor
in
pop
test
mov
cli
push
inc
xor
cmp
cmp
sbb
sub
pop
ret
adc
push
jbe
scas
mov
js
mov
and
sub
inc
aam
subb
pop
mov
add
sbb
adc
jo
jno
xlat
popa
xchg
mov
fiadds
cmp
fistpl
ja
xchg
xor
xchg
rclb
pushf
jb
jae
xor
or
mov
aam
push
pop
repnz
or
fcmovnbe
call
mov
aad
ja
pop
ret
add
nop
call
test
adc
mov
inc
in
sub
adc
mov
es
xlat
cmp
mov
ja
and
add
fdivrl
mov
aaa
roll
mov
shl
push
jmp
pop
adc
inc
jmp
push
fildll
pop
mov
sar
pop
or
roll
xchg
add
stos
pusha
and
push
jmp
and
bound
into
int3
inc
iret
push
sub
jle
mov
mov
popa
dec
gs
jg
dec
mov
mov
imul
push
stos
and
adc
filds
pop
sbb
mov
xor
and
mov
scas
in
xchg
in
sbb
inc
mov
inc
inc
jae
shlb
pop
outsb
jg
into
int3
sbb
aam
dec
pop
inc
setae
loopne
jg
out
call
in
insb
xchg
int
fistl
adc
in
into
test
push
xlat
testb
inc
mov
das
pop
mov
jo
je
das
loope
loope
mov
lret
nop
call
fs
or
adc
xchg
movsl
std
outsl
es
testb
or
add
mov
sbb
jge
pushl
jb
fs
rcrl
addr16
fdivl
and
xchg
jl
sub
mov
fs
xchg
adc
js
mov
sub
mov
or
jne
jmp
fmuls
and
push
mov
enter
stos
rcrb
lret
cltd
dec
sahf
xchg
gs
insb
sbb
dec
jle
mov
pop
adc
pop
xlat
test
and
add
pusha
push
or
xchg
out
movsl
jmp
mov
xlat
mov
mov
xchg
dec
int3
pop
mov
mov
sbb
stos
add
rcll
mov
add
ss
repnz
inc
out
std
fdivrl
ret
sub
sub
sub
xchg
or
into
push
or
shrl
push
fwait
repnz
leave
mov
jnp
push
in
or
fnstsw
aaa
pop
sarb
jns
sbb
dec
push
push
mov
or
jno
mov
fsubr
adc
mov
das
or
and
inc
ret
jnp
and
cmp
dec
inc
or
cmp
add
mov
cmpsb
cltd
pop
imul
pop
cmp
filds
jns
push
out
or
inc
popf
and
push
add
dec
lret
jecxz
mov
les
in
xlat
fcmove
shrl
aas
cmc
adc
mov
xor
or
int3
jl
and
fs
mov
stos
test
pop
testb
popf
mov
pushf
adc
mov
int
stos
gs
cmp
or
scas
rorl
push
lret
or
mov
push
outsl
add
fs
cli
xor
jecxz
movsl
cmp
rorb
push
push
mov
scas
jg
adcb
dec
inc
pop
sbb
dec
push
dec
jmp
and
addr16
movsl
stos
pop
jg
sahf
aaa
cmp
sbb
jbe
or
mov
outsb
shlb
add
pop
or
sub
lea
push
into
pop
mov
xor
or
out
hlt
inc
mov
fisubs
mov
mov
add
outsb
test
cmp
lods
lahf
sbb
inc
mov
orl
jp
push
test
sub
jo
push
sbb
ret
cmpsl
pop
movsb
fimuls
add
and
pop
iret
dec
sub
cmpsl
push
aad
in
insl
ss
shlb
lret
push
xchg
xchg
mov
lods
lea
fadd
out
mov
cld
jecxz
movsl
test
pop
sti
cmp
mov
lret
dec
fs
xor
insl
ficoms
iret
pop
pop
and
incl
adc
add
sub
leave
mov
jns
xchg
mov
arpl
xchg
add
jne
mov
xchg
hlt
pushf
outsb
sbb
fmulp
outsl
adc
popa
ds
call
loope
not
es
cs
pop
adc
cltd
pop
std
inc
ret
cmp
cwtl
test
and
int3
loop
sbb
sub
loope
sub
mov
xlat
push
xor
out
fwait
sub
xchg
jnp
inc
mov
cmp
mov
lret
cs
fucomp
rorl
inc
sub
and
mov
fwait
push
loope
cmp
mov
xchg
aad
rorl
pop
int
into
shll
push
arpl
cltd
adc
cwtl
loop
and
lods
adc
jns
fisttps
cltd
mov
and
mov
stc
int
sbb
and
in
into
pop
xchg
or
loopne
and
lret
cmpsl
mov
scas
ljmp
push
gs
hlt
xchg
outsb
clc
add
cmp
xor
bound
xchg
xchg
nop
pop
or
in
rclb
lea
sub
in
stos
xchg
dec
iret
and
cli
mov
add
sub
sbb
aas
xor
bound
dec
cmp
xor
aad
scas
and
shll
pop
ret
adc
test
pop
push
dec
ja
add
ret
adc
add
fildl
mov
je
jnp
dec
in
xchg
adc
fiaddl
jmp
jge
into
or
insl
cld
int3
cmpsb
ja
pop
repnz
push
sub
aam
insb
add
cmc
ss
stos
shrl
psadbw
xchg
dec
jecxz
push
gs
mov
out
xchg
fnclex
sub
sub
mov
mov
pop
cmp
pop
cwtl
jmp
daa
xlat
mov
test
push
in
push
and
mov
jne
pop
mov
cmpsb
mov
fcoms
je
es
pusha
mov
mov
dec
push
out
mov
adc
out
xchg
sub
cs
jnp
inc
add
inc
jo
dec
fldt
pushf
mov
mov
add
xor
jp
jecxz
in
mov
dec
inc
lock
dec
xor
ja
mov
mov
xchg
push
in
rorl
push
mov
adc
lods
or
dec
push
pop
push
or
lock
lahf
push
dec
xchg
adc
dec
or
cmc
dec
loop
leave
xor
nop
jl
xchg
xchg
lock
bound
ds
cs
cmpsl
dec
mov
cmp
jae
mov
ret
cmp
xor
mov
sub
jne
fisubl
bnd
cld
push
and
adc
xchg
loop
xchg
shll
lock
scas
in
xchg
fistpll
pusha
ljmp
inc
adc
cmp
dec
bound
cmc
out
xchg
jne
imul
pushl
mov
inc
xchg
mov
cli
stos
stos
mov
dec
cmp
jo
int3
jp
sbb
pop
lods
or
mov
fwait
and
add
out
call
fucomip
push
add
mov
sub
pop
fs
sub
sar
fcoms
add
xor
aam
mov
mov
adc
xchg
jb
ljmp
fs
adc
xchg
jmp
adc
mov
pop
sbb
adc
js
xor
mov
jne
pop
mov
add
dec
fistpl
scas
je
fsubl
xor
movsb
mov
add
or
lods
and
shlb
sbb
or
stos
shr
jns
mov
sbb
xorl
sub
aad
enter
mov
pop
cmp
lock
jg
and
test
add
es
sbb
push
jns
enter
mov
push
push
and
xchg
push
ret
or
push
fidivrl
sbb
stos
repz
xchg
dec
in
cltd
xchg
or
in
insb
rcr
add
loopne
mov
mov
fsubrp
fadd
mov
pop
lcall
fwait
sub
and
scas
jns
xlat
mov
imul
cmc
jmp
cs
lods
cs
rcrb
clc
mov
mov
add
gs
sbb
cmpsl
mov
rcrb
loop
jp
add
scas
sti
mov
cmp
stos
inc
push
orps
push
add
out
inc
test
pop
out
ds
mov
clc
sbb
shlb
sbb
js
incl
cs
and
insl
adc
ficomps
xchg
jae
clc
adc
in
mov
imul
mov
add
in
xor
and
movl
hlt
mov
xor
mov
add
daa
sbb
sub
inc
into
inc
ljmp
xorl
mov
call
add
popa
movl
mov
jl
lods
cmp
adc
pop
sub
ja
cmpsl
ss
xlat
stos
aad
pop
cwtl
cwtl
xor
mov
pop
xor
bound
loop
or
in
xor
push
cmp
mov
ss
add
pop
movl
cmpsl
xchg
cmc
jb
adc
push
and
cltd
arpl
mov
push
adc
or
xorb
ljmp
xchg
ss
stos
outsb
mov
push
mov
add
mov
scas
out
add
xor
rorb
mov
mov
xor
daa
nop
add
lret
mov
sbb
lea
sub
push
xor
lret
xor
ljmp
add
push
sti
mov
dec
inc
mov
xchg
push
jl
xor
mov
fisubrl
jb
mov
or
in
xor
xor
push
dec
or
cli
outsl
mov
call
adcb
iret
xchg
fs
femms
in
xchg
add
adc
jbe
outsl
inc
cmp
lds
pop
adc
mov
push
sti
mov
std
xchg
mov
pop
mov
ja
les
mov
mov
jno
sub
add
sahf
sub
loop
push
pop
xchg
fimull
inc
iret
mov
ds
mov
and
sub
jg
repz
fnstcw
cmp
dec
xchg
repz
lcall
mov
ds
sub
aas
push
daa
mov
out
pop
mov
lea
leave
pop
fidivrl
adc
adc
push
inc
test
mov
