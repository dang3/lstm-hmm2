push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
ror
inc
add
push
and
mov
movl
movl
movb
roll
push
mov
pop
enter
mov
arpl
add
dec
and
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
add
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
add
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
mov
mov
push
call
test
je
push
lea
mov
call
push
call
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
add
cmpl
jne
cmpl
push
jne
mov
push
push
mov
push
push
call
test
js
mov
lea
call
lea
call
mov
pop
pop
pop
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
call
pushl
mov
pushl
push
pushl
mov
call
test
js
mov
mov
xor
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
test
mov
je
movb
mov
push
call
mov
lea
call
mov
test
je
mov
push
call
mov
test
mov
pop
pop
jne
mov
lea
call
mov
test
je
push
call
xor
ret
mov
mov
cmp
je
test
je
cmpl
je
pushl
push
call
test
pop
pop
jne
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
cmpl
jne
xor
pop
pop
pop
ret
mov
test
je
pushl
mov
call
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
not
je
jmp
lea
test
jne
cmp
push
push
jae
cmp
jae
test
pop
pop
je
nop
movzbl
xor
and
shr
xor
add
sub
jne
not
pop
ret
mov
shr
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
add
xor
add
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
add
xor
add
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
xor
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
sub
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
jne
jmp
mov
shr
lea
xor
add
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
jmp
add
loop
add
add
call
mov
roll
out
add
test
jmp
int3
int3
sub
push
mov
test
push
mov
push
mov
je
mov
push
mov
call
add
mov
lea
xor
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
mov
push
mov
push
mov
push
push
mov
call
mov
mov
add
mov
lea
call
mov
pop
pop
pop
add
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
mov
pushl
call
push
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
test
mov
push
mov
push
mov
push
mov
movl
je
test
je
test
je
cmpl
mov
mov
je
movl
movl
lea
push
mov
push
push
push
push
mov
movl
call
test
js
xor
cmp
mov
jne
mov
cmp
mov
je
testb
jne
add
mov
mov
lea
push
push
call
test
js
cmpl
mov
jne
mov
mov
mov
push
push
call
test
js
mov
push
mov
mov
call
test
js
xor
mov
mov
mov
cmp
je
testb
jne
mov
mov
cmp
je
testb
je
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
push
lea
push
call
add
lea
push
push
call
mov
test
jne
test
jne
mov
cmp
je
testb
jne
push
lea
mov
call
mov
lea
push
lea
call
add
test
mov
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
mov
mov
mov
mov
lea
push
mov
push
movl
movl
call
test
je
movb
testb
je
mov
test
jne
test
jne
cmpb
jne
push
lea
movl
call
mov
mov
lea
push
push
mov
call
test
mov
js
mov
test
je
cmpl
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
mov
mov
movl
je
movzbl
mov
mov
push
push
mov
call
mov
mov
mov
mov
push
lea
push
mov
lea
push
push
push
call
test
mov
js
cmpl
je
mov
test
je
mov
cmpw
je
xor
mov
push
mov
lea
movl
call
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
push
push
call
lea
call
test
je
mov
mov
mov
push
push
call
lea
call
mov
mov
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
push
mov
roll
mov
mov
mov
add
mov
mov
mov
lea
lea
mov
cmp
je
mov
mov
sub
cmp
push
jne
push
push
call
add
test
jne
mov
mov
cmp
je
mov
cmp
je
mov
push
push
sub
sub
push
mov
push
mov
mov
call
test
je
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
or
add
jo
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
cmp
je
mov
push
mov
add
mov
mov
mov
mov
lea
mov
mov
call
test
je
mov
mov
cmp
mov
push
jne
push
push
call
add
test
je
addl
jmp
mov
mov
call
test
je
pop
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
add
add
mov
mov
lea
lea
call
test
je
mov
mov
mov
mov
mov
pop
mov
mov
pop
add
ret
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
cmp
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
push
push
mov
fcoml
mov
fnstsw
test
je
fcompl
fnstsw
test
je
push
mov
test
jne
push
call
add
test
je
fldl
fstpl
fldl
fstpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
add
pop
pop
pop
ret
fstp
mov
push
movl
call
add
pop
pop
ret
xor
jmp
push
mov
push
lea
push
pushl
mov
call
test
je
mov
mov
mov
xor
inc
pop
pop
ret
push
mov
sub
push
mov
mov
push
mov
mov
call
cmp
je
xor
pop
pop
leave
ret
push
pushl
mov
pushl
call
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
test
push
push
je
lea
mov
test
jne
pop
pop
pop
lea
pop
pop
ret
test
je
sar
sub
mov
je
mov
test
je
mov
push
call
cmp
jne
cmpl
jne
cmpl
jne
add
cmpl
je
mov
mov
and
test
mov
je
addl
mov
test
je
mov
mov
mov
test
je
pop
mov
pop
pop
pop
pop
ret
mov
sub
je
mov
jmp
movl
mov
mov
push
mov
call
pop
pop
pop
xor
pop
pop
ret
lea
or
jmp
cmpl
je
mov
call
test
je
movl
jmp
push
push
mov
mov
call
add
add
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
lea
call
lea
call
testb
movl
je
push
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
test
je
mov
mov
xor
cmpl
movl
mov
movl
je
mov
lea
push
lea
push
mov
mov
push
mov
call
mov
mov
mov
test
mov
je
mov
lea
mov
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
or
add
mov
mov
xor
mov
test
jns
mov
mov
test
jne
test
jne
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
push
call
xor
test
je
mov
orl
jmp
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
testl
jne
mov
lea
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
add
lea
push
push
call
mov
test
jne
test
jne
mov
mov
mov
mov
mov
lea
call
mov
test
jne
test
je
mov
push
call
mov
add
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
push
mov
call
cmp
jne
mov
mov
call
test
jne
cmp
jne
mov
lea
push
lea
push
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
call
mov
test
js
testb
jne
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
je
mov
push
call
add
mov
test
js
mov
mov
mov
mov
lea
mov
call
jmp
mov
add
call
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
mov
cmp
mov
je
cmp
jg
mov
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
cmp
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
call
mov
push
mov
call
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
jne
addl
jmp
mov
mov
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
jmp
push
mov
andl
push
lea
mov
test
movl
jne
lea
call
mov
call
testb
je
push
call
pop
pop
mov
pop
ret
push
mov
push
push
mov
cmp
je
mov
mov
lea
mov
mov
mov
leave
ret
push
mov
mov
sub
push
xor
test
je
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
call
push
mov
lea
mov
call
mov
cmp
mov
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
add
mov
call
mov
push
lea
call
mov
lea
push
push
call
lea
call
lea
call
cmp
je
cmp
je
mov
cmp
je
pushl
mov
call
cmp
je
mov
mov
call
mov
mov
mov
call
cmp
jne
call
mov
lea
call
lea
call
pop
lea
call
lea
call
pop
mov
pop
leave
ret
mov
cmp
je
jmp
add
int3
int3
int3
push
mov
and
push
push
mov
push
push
mov
nop
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
jne
cmpw
je
push
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movw
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
cmpw
je
cmp
jne
cmpw
je
cmp
jne
cmpw
jne
mov
push
mov
call
cmp
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
pop
pop
pop
mov
pop
ret
mov
push
push
push
push
push
push
mov
call
jmp
lea
mov
cmp
lea
je
jmp
mov
orl
mov
call
jmp
mov
push
mov
call
jmp
mov
push
push
push
call
jmp
push
mov
push
cmpw
jne
mov
test
je
mov
push
call
mov
test
mov
je
mov
mov
push
pushl
push
push
call
lea
call
xor
leave
ret
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
push
push
mov
test
je
mov
push
call
mov
mov
mov
leave
ret
mov
andl
test
je
lea
push
push
push
add
push
call
and
je
andl
test
je
andl
pushl
lea
call
mov
andl
lea
mov
call
mov
test
je
jmp
sub
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
cmpl
je
mov
test
mov
jne
test
jne
lea
push
push
call
lea
mov
mov
mov
mov
lea
lea
xor
push
lea
sar
push
mov
movl
movl
mov
mov
mov
call
mov
mov
push
push
push
call
add
cmp
mov
je
mov
mov
mov
push
call
mov
mov
mov
push
lea
push
push
call
test
lea
js
call
mov
test
jne
test
jne
mov
movl
xor
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
lea
push
push
movl
call
add
test
je
jmp
lea
mov
mov
cmp
jne
call
mov
lea
push
push
call
add
test
jne
pop
pop
ret
int3
int3
int3
int3
int3
push
xor
cmp
push
push
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
call
mov
call
test
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
jne
mov
mov
mov
lea
push
mov
call
mov
push
lea
call
pop
mov
mov
pop
mov
pop
ret
mov
mov
mov
call
mov
jmp
push
mov
sub
cmpl
je
mov
andl
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
lea
call
mov
mov
mov
leave
ret
mov
test
je
mov
mov
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
lea
test
push
jge
xor
pop
pop
pop
pop
add
ret
mov
mov
mov
lea
xor
mov
mov
mov
lea
mov
mov
push
lea
mov
add
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
push
lea
call
pop
pop
pop
xor
pop
add
ret
mov
ret
movzwl
push
lea
mov
test
je
pop
ret
push
mov
and
sub
mov
andl
andl
andl
andl
lea
push
mov
call
mov
lea
call
test
jne
mov
call
call
test
je
xor
inc
mov
pop
ret
int3
int3
int3
cmpl
push
mov
push
push
mov
jne
cmp
je
xor
cmpl
jne
cmp
je
xor
test
jne
test
jne
cmpl
je
mov
cmpl
je
pop
pop
pop
ret
mov
mov
movl
call
cmpb
jne
test
je
mov
mov
add
cmp
je
cmpl
jne
mov
call
pop
pop
pop
ret
mov
jmp
mov
call
mov
call
pop
pop
pop
ret
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
ret
mov
dec
test
jle
cmpw
je
xor
inc
ret
int3
int3
sub
push
mov
mov
test
je
mov
mov
push
push
push
xor
call
cmp
je
lea
push
push
lea
mov
call
mov
lea
lea
push
push
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
pop
je
lea
mov
mov
mov
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
je
cmp
je
cmp
jne
cmp
jne
cmp
je
call
cmp
je
mov
push
mov
lea
mov
call
mov
lea
mov
mov
push
push
mov
call
mov
push
mov
call
lea
call
lea
call
lea
call
xor
pop
pop
pop
add
ret
lea
push
lea
movl
movl
movl
call
mov
mov
push
push
call
add
cmp
je
mov
cmp
mov
jne
xor
mov
jmp
xor
jmp
mov
mov
jmp
push
mov
push
mov
lea
push
lea
push
pushl
movl
call
mov
mov
and
neg
sbb
not
and
leave
ret
andl
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
lea
mov
mov
call
add
sub
jns
mov
push
push
lea
push
push
call
cmp
jl
mov
mov
call
test
je
test
je
test
je
test
je
lea
lea
lea
mov
mov
movl
jmp
lea
addl
addl
mov
mov
mov
mov
mov
mov
add
cmp
mov
je
cmpl
jne
call
mov
and
mov
mov
shl
shr
lea
lea
or
mov
mov
mov
add
cmp
movl
mov
je
cmpl
jne
lea
call
mov
shr
lea
mov
and
mov
shl
or
mov
mov
add
lea
cmp
je
cmpl
jne
lea
call
mov
shr
lea
mov
and
mov
shl
lea
or
call
subl
jne
push
push
push
lea
push
call
mov
pop
pop
pop
pop
add
ret
cmpl
jne
movl
movl
jmp
cmpl
jne
movl
movl
jmp
cmpl
jne
movl
movl
jmp
int3
int3
int3
int3
sub
push
mov
test
je
push
mov
movl
mov
cmp
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmpb
jne
mov
test
je
push
mov
lea
movl
call
mov
test
je
mov
mov
mov
push
call
lea
call
cmpl
je
xor
pop
pop
pop
add
ret
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
je
mov
cmpb
je
lea
call
test
je
mov
mov
add
push
push
push
call
pop
pop
pop
add
ret
mov
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
jne
push
push
lea
call
xor
add
cmp
je
mov
movl
mov
lea
cmp
movl
movl
movl
mov
mov
je
mov
mov
push
call
test
mov
je
mov
mov
push
call
mov
test
je
xor
call
add
or
mov
mov
mov
push
mov
call
lea
call
pop
lea
jmp
add
jmp
push
mov
sub
push
mov
mov
test
je
testb
je
push
push
xor
push
lea
mov
call
lea
push
mov
lea
call
test
pop
js
pushl
mov
lea
mov
mov
call
mov
cmp
je
mov
lea
push
push
call
test
jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
mov
adc
sahf
pop
adc
mov
inc
add
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
mov
inc
add
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
and
call
mov
add
addb
mov
fadds
add
movsb
sbbl
hlt
shl
add
jle
lock
mov
mov
jo
aam
add
add
rolb
mov
add
jae
add
std
jp
out
add
out
imul
push
push
push
push
push
lea
push
lea
push
push
call
add
jnp
fmuls
imul
add
add
jmp
jp
push
cmpsb
push
mov
je
imul
in
popl
push
push
push
push
push
push
call
xchg
imul
mov
add
jp
fwait
push
add
pop
add
lea
add
sahf
and
jno
cmpsb
std
add
sub
pop
push
push
push
lea
push
push
push
push
call
in
sarl
add
add
ret
add
in
bound
mov
add
add
add
mov
sarl
pushf
add
add
out
push
stos
push
cli
add
push
scas
jo
add
add
addb
les
add
enter
lret
add
xchg
sub
pop
push
push
push
push
push
push
push
push
push
push
call
add
add
addr16
mov
add
sarl
mov
add
movsl
test
mulb
add
add
jo
arpl
pop
imul
push
add
add
popf
jl
test
sahf
mov
in
add
pusha
call
add
cmpsb
sub
pop
push
call
push
push
push
push
push
push
push
push
push
push
call
fwait
add
add
add
sar
add
lret
fisttpl
xchg
add
addr16
mov
pop
imulb
add
push
in
jne
loope
add
jmp
mov
cltd
mov
roll
cwtl
add
add
loop
popf
arpl
push
cld
rol
jb
aam
in
fcomps
add
jl
dec
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
mov
add
push
add
fadds
add
mov
pop
imul
add
add
add
flds
imul
mov
add
test
xchg
pop
loop
add
mov
add
fsubp
mov
pop
add
add
add
addl
movsl
jnp
add
fstpl
call
add
sub
pop
call
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
pop
add
add
out
mov
pusha
icebp
mov
out
add
push
pop
mov
add
addr16
mov
xchg
nop
add
sbb
add
cmc
add
add
add
add
testl
pusha
pop
add
push
fildl
add
add
mov
add
jo
hlt
push
sub
pop
jmp
push
push
push
call
pushf
lea
add
push
pop
add
hlt
scas
stos
mov
sti
mov
xchg
pushf
pop
lcall
add
cld
add
add
fwait
mov
flds
test
add
add
add
push
lea
push
push
lea
push
call
add
xchg
mov
mov
jns
gs
add
add
add
jle
popf
pop
mov
add
flds
add
add
mov
filds
add
push
add
pop
add
mov
loope
add
add
loop
in
in
lock
mov
mov
push
push
call
add
add
ja
insb
add
movsl
js
add
add
xchg
add
jb
test
add
add
push
push
push
push
push
call
xchg
mov
add
int
add
add
add
std
cmpsb
movsb
add
xchg
lods
je
add
neg
lock
rclb
js
in
add
in
ret
mov
add
add
pop
xchg
add
add
add
add
std
lcall
lcall
ret
add
add
add
push
lea
push
push
push
call
add
push
incb
mov
out
add
push
fdivrl
add
push
loope
mov
jl
add
incb
les
add
notb
add
lock
mov
push
push
push
push
push
lea
push
call
in
add
jns
rolb
jno
fiadds
add
add
xchg
xchg
add
add
lods
jecxz
jmp
fwait
mov
sub
pop
xor
push
push
lea
push
push
push
push
call
add
data16
mov
in
add
movsl
add
push
fwait
insb
add
fldl
add
add
sarl
cmc
add
mov
roll
jno
pop
fdivs
ficoms
test
idivb
add
mov
mov
xchg
add
mov
imul
in
in
call
add
add
push
sahf
lods
push
dec
push
xor
add
shl
sub
sub
add
sub
rol
xor
pop
shl
pop
push
push
call
xchg
lock
cli
ficompl
xchg
jge
add
jns
cli
lret
add
mov
cltd
fld
in
add
add
add
add
in
add
add
jecxz
in
clc
pop
pushl
push
lea
push
lea
push
lea
push
push
push
push
call
xchg
jb
add
fadds
add
xor
cmpsl
push
xchg
xlat
add
mov
cmc
add
add
mov
add
jno
add
mov
cltd
add
jbe
pop
add
xchg
add
mov
sub
pop
call
push
push
lea
push
call
out
fsubrs
mov
add
mov
add
in
add
aad
pusha
cltd
add
scas
fadds
into
add
pop
test
add
add
addl
in
hlt
lcall
inc
lock
lea
push
lea
push
push
push
push
lea
push
push
call
into
add
aam
add
iret
add
add
enter
sar
lods
mov
push
std
jecxz
push
ja
add
mov
xchg
int3
repnz
add
in
xchg
mov
out
test
jo
leave
add
lods
les
add
mov
add
add
lods
add
imul
movl
push
push
push
push
push
lea
push
call
add
repnz
xchg
int3
roll
outsl
add
cltd
add
cmpsb
aad
add
les
add
add
cwtl
int3
jns
mov
cltd
mov
pop
in
int3
pop
cmpsl
addl
add
add
ljmp
pop
lea
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
loop
loope
lcall
mov
cmpsb
hlt
add
stos
add
add
sti
add
add
add
jo
add
fucomp
ffree
jbe
in
lahf
xchg
add
add
out
fwait
mov
add
add
add
add
add
add
push
push
push
push
push
lea
push
call
aam
add
nop
add
sti
add
pop
add
xchg
test
frstor
push
fstl
xchg
add
fimuls
jne
mov
xchg
out
mov
add
push
lods
add
shlb
stc
xchg
pop
add
mov
add
add
pop
lock
add
add
ret
call
push
lea
push
push
lea
push
call
xchg
add
iret
add
jecxz
mov
add
push
add
jno
mov
pop
out
out
fs
add
xlat
fldl
add
cli
fcmovbe
xchg
test
in
lock
pushl
push
push
push
push
call
add
add
jne
enter
xlat
add
mov
add
add
xchg
add
sbb
add
lds
cmpsb
mov
xchg
xlat
add
push
pushf
add
mov
add
mov
in
mov
testb
popf
ret
in
mov
repnz
lock
add
push
call
hlt
in
add
hlt
jecxz
add
jbe
add
cmpsl
add
sbbl
add
insb
fildl
push
add
movsl
loope
add
add
mov
push
testb
pusha
enter
lahf
icebp
mov
pop
add
add
add
hlt
add
sub
pop
pushl
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
ljmp
add
inc
add
mov
jb
add
mov
add
xchg
jnp
mov
add
in
xchg
add
add
add
movl
add
xchg
add
add
mov
pop
add
sarb
pushl
push
lea
push
push
push
push
lea
push
push
push
push
call
cli
testl
jb
add
in
cwtl
add
clc
add
add
add
arpl
add
add
pop
cmp
add
inc
mov
push
shr
sub
add
ror
push
sub
add
add
sub
xor
shr
shr
shl
pop
lea
inc
ror
pop
push
push
call
call
add
roll
add
jp
aad
add
xchg
lahf
pop
clc
lods
add
mov
add
push
lcall
lock
push
lea
push
call
add
add
lds
add
stos
shlb
add
lret
mov
add
xchg
mov
popa
sahf
xchg
outsl
jmp
je
add
mov
int3
pop
add
add
mov
add
icebp
add
jge
sarb
in
clc
lcall
inc
push
push
sub
push
or
not
add
shl
inc
sub
xor
pop
rol
pop
push
push
push
lea
push
lea
push
push
push
push
call
scas
add
bound
lods
add
lcall
add
push
jp
add
cmc
add
pop
mov
pop
clc
icebp
pop
lret
jb
add
add
jp
clc
std
add
cwtl
xchg
add
add
jae
rolb
jge
addr16
stos
mull
add
mov
push
push
push
push
push
lea
push
push
push
push
call
add
lcall
push
in
in
jno
push
cld
mov
ljmp
loopne
movsl
ljmp
clc
add
sti
pop
cltd
add
pop
in
mov
scas
mov
mov
add
in
fcompl
add
rclb
jns
push
push
push
call
push
add
add
add
jmp
add
jns
add
pop
add
add
add
test
add
add
in
lock
mov
push
push
push
lea
push
call
mov
cmc
add
mov
add
loopne
add
lods
add
add
cmpsb
mov
jnp
pushf
jle
push
add
push
addr16
add
add
sub
pop
push
push
push
push
lea
push
push
push
push
push
call
jb
add
stos
int
in
movl
aad
movb
iret
cmpsb
test
mov
add
cli
mov
jle
push
push
add
add
nop
int3
rolb
ljmp
mov
add
add
add
add
add
loopne
lcall
push
push
push
push
push
call
mov
mov
aam
shl
jae
add
repnz
std
jp
out
rcl
mov
add
add
push
mov
add
add
mov
add
mov
add
add
addl
hlt
add
push
push
push
lea
push
push
push
push
push
call
jb
hlt
mov
popl
jbe
mov
add
jnp
add
mov
test
add
mov
insb
add
lods
add
int
pop
rolb
pop
add
push
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
add
push
add
aam
cli
lret
add
mov
lret
std
loop
jae
mov
pop
add
fildl
add
not
lock
xchg
scas
xchg
jae
add
aam
je
add
mov
popl
cmpsl
mov
xorb
lock
pop
add
push
push
lea
push
lea
push
push
push
lea
push
push
call
pop
add
ljmp
lea
iret
pop
jne
in
add
add
mov
pop
jmp
in
popf
add
mov
add
add
lcall
xor
mov
lea
push
lea
push
call
mov
out
fadd
add
popa
xchg
add
xchg
add
add
add
ja
insb
pop
stos
fisttpl
ficoms
hlt
pop
add
push
push
lea
push
lea
push
push
push
push
call
out
add
movsb
mov
add
jno
mov
add
mov
add
addb
add
add
int
add
add
add
add
loop
repnz
mov
les
rcl
in
lret
xchg
add
movsb
sub
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
push
call
outsl
mov
add
arpl
add
jmp
negb
loope
addl
in
push
stos
lea
fcomps
inc
or
mov
push
push
lea
push
push
push
push
push
call
push
add
add
add
out
je
in
imul
add
addb
jle
add
aam
scas
mov
pop
add
push
lea
push
lea
push
lea
push
call
aam
add
test
ljmp
sti
lret
add
add
jo
hlt
lock
stos
pop
jecxz
add
mov
xchg
mov
mov
push
cli
add
sub
pop
pop
push
push
push
push
push
push
call
in
mov
add
xchg
add
add
scas
add
pop
jle
mov
add
movb
in
add
add
jecxz
jecxz
add
add
jp
in
outsl
mov
ret
fiaddl
dec
add
cmp
or
repz
push
lea
push
push
call
xchg
push
xchg
cli
ja
in
add
add
call
jne
leave
push
mov
imul
add
mov
ror
add
add
lcall
or
push
push
push
lea
push
push
push
call
jl
pusha
pop
repnz
add
lea
data16
lea
add
add
add
add
mov
in
call
add
push
push
lea
push
push
push
push
push
push
call
repnz
arpl
fcomps
pop
add
add
int3
add
add
int
mov
mov
jbe
add
push
std
int3
mov
add
add
jge
fcoml
jge
add
add
lcall
push
lea
push
push
call
frstor
rcrb
add
mov
rcl
mov
add
roll
add
push
and
pop
add
push
add
in
add
xchg
add
add
sub
pop
mov
push
push
lea
push
push
call
ret
xchg
add
jne
int3
cmpsb
jno
xchg
add
cmc
add
add
movl
add
add
add
div
xchg
push
mov
xchg
enter
add
add
bound
lcall
add
push
push
call
in
test
rcr
add
xchg
jbe
aam
add
add
lods
cmpsl
add
pusha
in
add
stc
mov
add
bound
xchg
add
add
add
sbb
jmp
add
add
add
out
jbe
add
mov
stos
lret
add
addr16
mov
loop
mov
lcall
les
push
push
push
push
push
push
lea
push
push
call
fcmovb
lcall
push
push
add
add
loopne
out
add
add
add
pop
add
aad
add
cmpsl
testb
imul
add
mov
xchg
pop
add
test
add
mov
test
add
add
jbe
sub
pop
sub
push
lea
push
lea
push
push
push
call
loop
add
push
fs
jecxz
xchg
scas
pop
push
std
pushfw
add
add
push
add
lds
ficomps
add
add
outsl
popf
out
mov
xchg
pop
add
add
lcall
rep
push
push
call
mov
mov
add
add
fnstcw
ja
add
loopne
mov
add
inc
test
mov
mov
add
add
add
enter
mov
popa
testb
lcall
mov
push
push
push
lea
push
push
call
lods
add
into
lahf
add
cwtl
ficoms
addb
mov
jns
nop
add
mov
repnz
xchg
xlat
cld
add
jo
lods
sub
pop
add
add
push
push
call
add
add
add
add
cmpsb
add
je
rcll
add
testb
test
cld
add
jl
add
clc
pop
add
push
push
push
lea
push
push
push
push
call
pop
add
gs
xchg
add
xchg
add
gs
stc
je
loopne
add
outsl
jl
pushf
mov
push
mov
mov
add
insb
loop
add
cwtl
clc
popf
ljmp
pop
cli
imul
add
add
xchg
fs
arpl
add
sub
pop
mov
xor
push
lea
push
push
push
push
push
push
push
lea
push
call
push
push
ja
mov
add
hlt
mov
add
in
pop
add
jne
call
gs
mov
add
push
and
repnz
into
pop
inc
pop
mov
push
push
push
call
loopne
mov
push
add
jmp
add
movl
add
add
ljmp
add
add
mov
les
stos
add
cwtl
in
out
popl
fiaddl
push
sub
pop
xor
push
lea
push
push
lea
push
call
js
add
jae
jno
test
add
add
jne
loop
add
out
add
stos
add
add
add
add
aad
stc
add
add
add
les
add
push
push
lea
push
push
call
add
add
pusha
add
add
cmpsl
mov
cli
popa
add
push
lods
iret
dec
xchg
cli
filds
ljmp
add
add
add
push
add
add
into
in
xorb
add
add
scas
mov
call
in
lock
add
add
push
lea
add
not
pop
mov
push
push
rol
push
sub
add
inc
sub
add
pop
not
sub
lea
pop
push
shr
sub
pop
pushl
push
lea
push
push
call
jb
jge
cltd
ljmp
xchg
push
imul
add
add
add
mov
loop
cld
add
pop
add
add
scas
stc
add
add
mov
add
clc
xchg
add
rolb
test
push
push
push
push
push
push
push
call
mov
push
add
mov
sahf
idiv
outsl
mov
mov
push
jmp
add
mov
add
mov
loopne
lcall
add
aaa
xchg
add
and
imul
xchg
push
and
add
ror
lea
add
sub
inc
pop
shr
pop
push
push
push
push
push
call
mov
mov
add
data16
add
add
mov
add
add
add
add
in
add
sub
pop
push
push
dec
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
insb
mov
fcompl
xchg
push
lods
add
mov
mov
pop
stos
cmc
out
clc
add
clc
add
sarl
cwtl
jl
add
lret
ja
mov
add
rolb
add
push
push
in
sub
pop
call
mov
push
add
add
pop
push
push
rol
pop
push
mov
push
lea
shl
pop
add
push
lea
push
push
push
call
pop
add
jnp
add
mov
filds
add
mov
pusha
add
testl
data16
add
mov
push
add
pop
add
add
test
clc
push
lods
add
add
add
add
outsl
mov
add
add
pushf
out
sub
pop
add
push
push
push
call
arpl
testb
add
mov
add
pop
add
repnz
add
test
idivl
add
sub
pop
add
mov
push
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
fs
testb
rol
add
lret
push
pop
mov
out
mov
test
jb
mov
mov
mov
clc
mov
mov
add
add
lahf
mov
stos
mov
add
ror
repnz
add
add
shlb
add
fcomps
xor
push
push
push
lea
push
lea
push
push
call
in
test
test
xchg
add
add
add
cmpb
add
ljmp
fsubs
ret
mov
cwtl
add
add
add
jl
lcall
add
lods
sub
pop
add
push
push
lea
push
call
add
add
scas
jnp
xchg
movsl
test
mov
pop
popl
jb
fadd
cli
je
jbe
cmpsl
add
stos
scas
add
add
xchg
add
in
mov
mov
add
add
xchg
add
fdivrl
push
jno
enter
xlat
add
add
xchg
add
add
lcall
jne
push
xor
inc
inc
sub
pop
push
push
sub
dec
shr
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
cli
add
add
lods
add
jb
rolb
add
add
mov
xchg
add
add
mov
fisttpl
add
in
push
cli
add
sahf
add
add
fcomps
add
push
push
push
push
lea
push
push
push
lea
push
call
cli
in
xchg
add
cli
arpl
add
stos
add
mov
fs
add
jnp
clc
scas
and
add
add
add
loopne
xchg
jb
int
add
add
add
in
loopne
lcall
les
dec
pop
add
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
push
cltd
std
fiadds
lods
xchg
push
lods
add
mov
sarb
add
out
add
add
outsl
add
lea
add
add
stos
out
add
or
mov
in
into
lea
enter
add
add
add
add
mov
loopne
pop
push
pop
mov
xor
push
shl
shr
ror
shl
pop
rep
mov
xor
push
push
lea
push
lea
push
call
add
repnz
add
push
pop
add
pushf
add
pop
ja
jge
add
mov
pusha
in
cwtl
add
add
mov
add
jne
xchg
add
mov
add
add
sti
pop
lret
add
lcall
sbb
add
add
xchg
add
add
push
add
scas
sub
pop
or
je
mov
push
push
push
lea
push
push
lea
push
push
call
repnz
aam
divl
fstpl
pop
add
test
add
add
mov
lea
fwait
add
pop
stc
add
std
loopne
pusha
cld
loopne
jns
add
add
add
cltd
sub
pop
xor
push
lea
push
push
push
push
call
fdiv
outsl
test
add
lahf
shll
add
sahf
add
cwtl
std
test
pusha
test
mov
add
fwait
add
push
add
add
add
idivb
jnp
popa
add
stc
movsb
mov
add
out
add
js
jae
add
xchg
add
add
push
lea
push
push
push
push
push
push
push
call
jmp
ljmp
stos
cltd
jb
add
add
mov
mov
popa
pop
enter
loope
add
negl
lcall
push
sbb
mov
add
add
pop
add
push
push
call
out
add
in
stos
jno
jecxz
andl
add
add
jo
add
push
lret
mov
enter
mov
loope
pop
push
pop
pop
push
call
add
add
add
out
mov
sub
pop
add
push
not
inc
pop
push
push
dec
shl
add
pop
mov
push
push
lea
push
push
push
push
call
jecxz
add
mov
add
add
repnz
stos
jp
je
add
stc
icebp
add
ret
movl
lods
addr16
ljmp
les
leave
jecxz
add
push
fs
test
jge
gs
lret
add
notl
in
lcall
add
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
jns
xchg
add
add
movsb
add
pop
fldl
add
push
add
add
js
iret
add
icebp
push
mov
add
clc
loop
movsb
add
mov
push
add
hlt
out
insb
pop
push
mov
mov
popf
mov
sub
pop
add
push
rol
pop
add
push
sub
pop
pop
push
dec
pop
rep
push
lea
push
push
push
push
push
push
push
push
lea
push
call
je
js
mov
cmpsl
roll
movsl
add
add
add
subb
cltd
add
mov
mov
add
roll
add
mov
jbe
add
call
add
arpl
lcall
dec
sub
mov
dec
shl
pop
or
je
mov
push
pop
add
add
push
xor
pop
rep
push
rol
add
xor
pop
pop
push
push
xor
add
lea
shl
push
or
inc
add
sub
add
sub
add
pop
not
pop
push
xor
pop
pop
push
push
push
push
push
call
xlat
push
cld
mov
into
out
add
add
add
pop
add
hlt
add
add
repnz
add
mov
add
add
add
add
fcoms
push
add
xchg
stos
xchg
fiaddl
in
in
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
add
push
add
jecxz
xchg
imul
int3
add
add
add
gs
add
js
jne
add
add
add
push
int3
repnz
mov
add
add
mov
popa
stos
add
out
lea
lcall
insl
hlt
mov
push
lea
push
push
push
push
push
call
aam
add
rcr
jmp
add
pop
mov
add
mov
jp
pusha
add
lahf
in
js
mov
movsb
add
nop
jge
in
sti
sub
pop
jmp
push
xor
pop
push
mov
push
sub
shr
rol
lea
pop
add
push
push
push
lea
push
push
push
push
call
mov
int
mov
sahf
add
xchg
shl
add
stos
mov
jmp
add
loope
out
out
scas
popa
hlt
jne
mov
iret
add
add
mov
fdecstp
add
add
lret
faddl
add
add
lret
add
push
jge
add
add
add
leave
push
cmc
mov
add
sub
pop
push
push
push
lea
push
push
push
push
call
jae
jno
jae
add
call
push
add
xchg
add
je
add
mov
jno
ja
icebp
stc
outsl
mov
add
jns
add
lods
add
add
lret
cmpb
cwtl
call
jmp
aad
pop
jae
add
icebp
push
add
imul
jo
in
call
push
push
not
lea
pop
push
push
lea
push
push
push
call
pop
add
lahf
cli
nop
jmp
cltd
xchg
xchg
mov
add
fisubrs
add
add
pop
push
add
add
mov
iret
add
add
popf
movb
add
into
add
push
mov
add
lcall
push
pop
mov
pop
push
pop
pop
push
push
push
push
push
call
out
icebp
add
js
add
add
jae
add
mov
add
fxam
add
mov
mov
fildl
out
jo
add
mov
std
add
stos
push
push
add
mov
int3
add
add
sub
pop
pop
push
not
sub
xor
pop
pop
leave
push
pop
ret
push
push
lea
push
push
push
lea
push
push
push
push
push
call
mov
add
add
arpl
add
in
mov
add
add
add
add
pushf
js
aam
leave
out
sub
pop
mov
push
lea
push
push
push
push
push
push
call
pop
add
add
sbbb
xchg
faddl
rolb
jbe
mov
cmc
in
add
data16
les
jne
data16
add
add
rcr
int3
mov
add
jecxz
xchg
add
scas
roll
add
mov
cwtl
add
fdivrl
in
add
push
push
push
push
lea
push
call
add
add
add
add
jbe
incb
iret
add
jp
call
mov
add
movsb
add
enter
add
stc
icebp
add
add
add
push
push
sub
lea
dec
pop
push
push
rol
pop
movl
push
lea
push
lea
push
push
lea
push
push
call
jmp
ljmp
in
pop
insb
jbe
jmp
mov
pop
mov
add
lcall
add
mov
out
xchg
mov
in
call
addl
push
push
push
push
lea
push
call
outsl
hlt
mov
add
add
add
push
add
leave
cli
add
cld
add
sbbl
out
add
add
scas
mov
rorb
adc
sub
sub
dec
shl
pop
mov
push
add
add
add
pop
pop
push
push
push
call
imul
loop
xchg
incb
add
add
sti
insb
mov
mov
jle
ret
into
add
add
sub
pop
pop
pop
push
shr
lea
lea
pop
pop
push
push
push
call
add
add
movsb
loope
clc
add
mov
insb
add
add
add
test
in
hlt
lcall
push
dec
sub
add
pop
ret
push
add
sub
pop
push
push
lea
push
lea
push
lea
push
push
push
call
sahf
add
add
pop
pushf
js
add
sti
incb
add
loope
fcmovnb
add
add
push
add
in
add
jns
add
loop
aad
jmp
in
call
push
lea
push
push
push
push
push
call
push
add
lret
flds
nop
add
add
stc
jo
add
imul
loop
mov
add
lea
jns
in
in
add
push
push
push
push
lea
push
push
call
mov
mov
add
cli
add
add
fstl
iret
fadds
add
add
jbe
lds
popa
gs
add
mov
movsb
mov
add
iret
cli
ror
mov
ljmp
add
add
movsl
iret
hlt
insb
add
loopne
add
add
add
lcall
push
push
push
lea
push
push
push
push
push
push
push
push
call
in
fidivl
ja
faddl
stc
pusha
xchg
jb
push
loop
add
clc
icebp
add
lret
in
rcrl
out
cmpsb
add
mov
rolb
jp
fildl
add
fsubl
add
sub
pop
push
push
push
push
push
push
lea
push
push
call
cld
jmp
mov
arpl
push
xchg
add
add
jmp
jp
jp
add
fsubrs
in
add
jp
add
add
movb
pop
testl
push
push
push
push
push
push
call
lds
jecxz
add
pop
mov
xlat
popa
enter
lahf
add
xchg
cwtl
pop
std
push
add
jb
add
add
add
pop
add
outsl
mov
pop
in
add
mov
mov
jp
negb
push
mov
add
lcall
inc
or
push
pop
push
call
push
pop
mov
push
pop
pushl
push
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
jnp
addb
jmp
add
add
add
add
out
lea
add
add
add
mov
xchg
add
add
add
push
add
xchg
mov
ljmp
les
add
add
add
add
add
loop
add
jmp
jmp
testb
js
sub
pop
push
push
ror
pop
push
push
add
pop
call
cmpl
jne
push
shr
pop
pop
push
push
push
push
push
push
call
add
int3
add
add
lcall
rcrl
addb
int
flds
xchg
add
out
xchg
add
add
add
push
add
cltd
add
imul
out
sub
pop
pop
push
shr
pop
pop
pop
push
push
push
push
push
push
lea
push
push
call
add
add
push
mov
pop
filds
test
add
xlat
outsl
push
xchg
iret
js
add
push
lds
test
fadds
add
add
add
cmpsb
scas
pushf
add
add
lcall
push
push
lea
push
push
push
call
mov
add
add
test
add
add
lods
add
mov
add
nop
je
add
cmpsl
add
mov
sub
pop
ret
push
not
pop
push
mov
push
lea
push
push
push
call
cli
mov
add
cmpsl
movsl
cwtl
add
add
add
add
add
push
into
mov
mov
xchg
mov
add
add
negl
rolb
cld
push
lea
lea
dec
pop
push
push
push
push
push
push
push
push
push
push
push
push
call
jge
imul
add
ret
pushf
mov
movsl
add
imull
arpl
add
jbe
test
add
add
addr16
in
fcomps
push
lea
push
push
push
call
loopne
add
jl
add
mov
add
roll
fiadds
mov
sbbb
add
cltd
cmpsl
add
addb
push
gs
cmc
add
mov
mov
loopne
add
add
je
sub
pop
push
push
push
push
lea
push
push
push
push
push
call
testb
lods
mov
xchg
sti
add
stos
add
mov
add
rcrb
xchg
add
iret
add
fistl
hlt
iret
add
mov
lods
pop
add
add
jne
je
fldl
lahf
add
out
xchg
mov
add
add
xchg
fwait
lcall
jne
incb
add
sub
pop
movl
push
push
lea
push
push
call
ret
jo
mov
add
mov
add
stos
add
xchg
popf
add
add
pop
add
add
add
add
mov
add
add
add
add
adcb
out
add
rolb
lcall
add
negb
inc
idiv
call
rol
lret
push
call
push
push
lea
push
call
lcall
add
ljmp
mov
add
add
add
leave
jge
add
pop
ret
mov
mov
mov
iret
mov
rol
ret
add
in
add
lcall
insl
cld
add
test
pop
pop
push
lea
push
push
push
push
push
push
call
add
pushf
add
mov
add
cwtl
add
cld
add
addr16
jl
add
ret
shr
les
add
in
in
lcall
push
ror
shl
ror
rol
pop
pop
push
shl
rol
not
pop
pop
push
rol
pop
leave
push
pop
ret
push
push
push
push
push
push
push
push
lea
push
call
add
add
out
mov
mov
add
icebp
jno
mov
xchg
add
fneni(8087
mov
imul
bound
add
add
call
push
add
pop
call
push
push
lea
push
lea
push
push
push
push
call
mov
stos
add
insb
add
shl
add
out
add
int3
xchg
outsl
add
pop
add
add
icebp
add
add
add
add
out
add
add
loope
xchg
jmp
test
add
lret
repnz
add
add
out
add
add
xchg
je
mov
add
in
add
push
sub
pop
push
push
push
push
push
push
call
je
bound
add
add
stos
add
add
lods
pusha
mov
xchg
cltd
add
add
test
add
jno
mov
add
mov
frstor
add
mov
pop
out
shl
push
lock
lcall
push
push
push
rol
push
and
add
rol
shl
shr
sub
dec
inc
pop
sub
dec
pop
push
not
sub
pop
pushl
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
test
xchg
mov
add
add
add
add
pop
add
outsl
lock
add
add
add
jb
in
jnp
sub
pop
call
push
push
push
call
lods
add
add
add
add
movsl
add
add
stos
pushf
bound
xchg
ljmp
add
test
jno
nop
add
add
add
add
popf
add
ljmp
add
shrb
xorb
add
not
add
ror
push
or
inc
add
rol
sub
sub
sub
rol
lea
pop
inc
not
pop
push
push
push
push
call
add
add
data16
add
lds
jl
add
mov
add
add
add
push
mov
add
cmpsl
jecxz
fisubs
sub
pop
pushl
push
push
lea
push
push
push
push
push
push
call
add
fldl
add
hlt
out
mov
jp
add
add
xlat
jecxz
call
cltd
test
mov
xlat
push
sahf
stos
std
xchg
int3
addr16
mov
add
lcall
push
add
push
push
call
icebp
sub
add
pusha
jmp
insb
mov
lret
add
jge
add
add
jnp
add
add
mov
roll
xlat
add
in
clc
lcall
rorb
xchg
push
push
push
call
xlat
add
push
add
lds
add
xchg
mov
clc
push
jge
stc
push
jp
add
shl
add
add
xchg
mov
cli
xchg
mov
pop
lea
sub
push
push
push
call
add
mov
add
add
add
jp
in
test
hlt
add
mov
call
add
add
jne
xchg
in
mov
ret
add
add
gs
add
add
jge
iret
imul
add
fcoms
popf
int
enter
leave
add
pop
add
push
outsl
add
add
add
call
gs
in
nop
rol
xor
pop
add
push
push
lea
push
push
push
push
push
push
call
add
add
filds
add
stos
xchg
sahf
hlt
add
cli
aad
pop
lea
add
cmc
xchg
out
in
loopne
rolb
test
fstpt
add
add
push
mov
out
add
push
add
add
add
cltd
mov
add
add
inc
cld
push
rol
lea
pop
mov
add
push
shl
xor
dec
add
pop
add
push
push
push
push
push
call
jle
ja
add
loope
sarb
mov
jno
add
add
add
add
cli
testb
ja
test
fcmovnbe
add
add
imul
add
jecxz
add
add
pop
mov
jecxz
lret
faddl
add
icebp
fwait
add
in
lcall
inc
add
add
push
dec
lea
pop
cmp
jne
cmp
jne
push
sub
xor
sub
ror
pop
mov
push
push
call
add
jmp
add
add
outsl
jnp
lahf
mov
add
pop
loopne
clc
add
fdivrs
add
add
leave
fiadds
clc
mov
jb
jge
js
add
xchg
add
add
sub
pop
movl
jmp
push
not
sub
shr
dec
pop
mov
push
not
rol
ror
pop
mov
push
rol
ror
pop
sub
jne
push
sub
inc
lea
pop
mov
push
push
push
lea
push
push
lea
push
call
out
add
add
lods
mov
cmc
pusha
addl
add
cmpsl
xchg
add
push
out
add
in
int
push
scas
lods
fcoms
in
pop
roll
shl
test
mov
sti
mov
lds
fadds
add
mov
in
call
add
add
add
add
push
lea
push
push
push
push
push
push
push
push
call
add
js
rcr
fmul
add
mov
sarb
in
mov
xchg
jno
jb
jp
jge
stos
add
add
add
cwtl
mov
popa
add
out
add
scas
lods
mov
pop
mov
mov
push
add
add
sub
pop
cmp
jne
push
add
pop
mov
push
inc
lea
inc
pop
movl
push
dec
ror
pop
jmp
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
xchg
add
aam
jae
stos
jbe
add
add
mov
arpl
mov
jne
faddl
add
push
add
add
add
scas
popl
add
data16
lret
loope
push
add
ja
jmp
add
jge
movsl
lea
xlat
add
add
xchg
arpl
imul
lcall
inc
cld
cmpw
jne
push
not
lea
not
pop
mov
push
rol
rol
pop
movl
jmp
push
not
shr
pop
pushl
pop
push
dec
add
shr
shr
pop
mov
push
shl
ror
pop
mov
push
sub
pop
mov
push
push
not
push
sub
add
shl
shr
sub
inc
pop
sub
pop
push
push
push
push
push
push
lea
push
call
out
push
add
add
shr
pop
add
add
enter
popf
add
add
js
flds
push
add
iret
jns
add
mov
add
in
in
push
push
add
pop
call
cmpl
je
push
push
sub
add
sub
push
and
add
add
not
sub
shr
sub
xor
lea
pop
inc
pop
push
dec
xor
shr
dec
pop
push
push
push
push
push
push
push
call
mov
add
jmp
add
xchg
add
add
add
shr
testl
into
jb
shlb
in
call
call
push
sub
not
add
add
pop
cmpl
je
push
push
inc
add
add
push
or
not
add
xor
lea
ror
add
sub
rol
pop
ror
dec
rol
pop
push
xor
inc
sub
pop
push
call
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
outsl
add
add
cwtl
add
scas
lcall
movsb
xor
add
mov
add
lea
add
mov
add
fwait
xchg
add
add
add
mov
fwait
lds
mov
loope
pop
xchg
filds
add
cmp
add
int3
je
push
push
shl
add
sub
ror
push
or
not
add
dec
inc
sub
lea
pop
sub
sub
pop
push
pop
push
push
not
rol
add
xor
pop
call
cmpl
je
push
push
sub
add
rol
not
push
push
pop
add
shr
rol
inc
xor
sub
inc
sub
pop
add
pop
push
push
lea
push
push
push
push
call
add
add
add
xchg
push
stos
add
mov
pop
jl
ror
push
add
add
cmpsb
mov
add
out
add
add
std
cli
mov
add
sbb
popl
push
add
add
add
add
add
add
enter
movsb
add
mov
jle
divl
lcall
push
rol
sub
sub
not
pop
call
push
push
push
call
add
add
add
add
add
add
add
int
cmpsl
jbe
add
ja
int3
rcll
stos
add
add
add
movsl
outsl
imul
iret
add
add
jecxz
xorl
xor
ret
test
stos
mov
pushf
push
sub
add
not
push
xor
add
rol
sub
shl
pop
not
pop
push
lea
push
push
push
push
push
push
lea
push
call
lods
cmpsb
push
lock
jae
add
add
filds
pop
add
mov
in
in
xchg
cwtl
pop
into
jne
add
add
push
movl
loopne
lcall
push
push
push
push
call
add
fcoml
push
mov
push
add
cmpsb
push
add
adc
sti
cli
mov
push
add
insb
mov
nop
sarl
in
lock
lcall
sub
add
push
xor
not
pop
cmpl
je
push
push
shr
push
xor
add
add
shl
sub
shl
pop
sub
pop
push
shl
ror
dec
add
pop
push
push
inc
lea
xor
pop
call
push
inc
rol
rol
pop
cmpl
je
push
push
lea
inc
rol
push
push
pop
add
shr
sub
shl
sub
lea
pop
ror
shl
lea
dec
pop
push
dec
pop
push
push
push
push
push
call
jmp
lods
les
xchg
add
add
in
lret
mov
js
add
add
pop
add
add
frstor
int3
sar
add
add
add
ljmp
lock
call
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
movb
pushf
out
add
lock
add
jne
xchg
imul
pop
add
lret
add
push
mov
add
push
add
out
test
add
add
add
je
sub
pop
cmpl
je
push
push
rol
push
xor
add
add
not
shl
sub
dec
dec
dec
add
pop
sub
sub
inc
pop
push
push
push
lea
push
push
call
test
add
add
jne
cltd
add
test
add
lods
xchg
cwtl
out
sarb
loop
lock
sahf
in
add
add
add
popf
data16
jno
aad
scas
test
shlb
in
in
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
push
call
rcrl
add
movsb
add
loop
mov
jmp
stos
idivl
ja
jl
out
add
push
add
add
rcl
movsl
jo
negl
pop
add
cld
fldl2e
cmpsl
testl
pop
xorb
mov
stos
mov
add
fdivr
lcall
mov
xor
ret
test
add
add
lahf
vrcpss
jecxz
rol
shr
sub
push
push
pop
add
dec
sub
dec
xor
sub
dec
sub
shl
pop
xor
pop
push
add
pop
push
push
push
call
roll
mov
add
push
scas
shl
cmpsl
add
fsubrl
jle
add
mov
push
out
testl
iret
add
add
jno
add
jo
call
call
jp
cltd
add
arpl
bound
add
out
call
mov
mov
sub
pop
call
push
push
push
push
push
call
fwait
add
jp
std
js
jno
jns
mov
push
enter
jnp
insb
shlb
add
iret
xchg
lahf
jno
popa
into
add
push
jl
add
jge
stos
mov
in
mov
cmp
test
add
add
xor
not
lea
push
sub
add
add
rol
not
rol
sub
shr
pop
lea
pop
push
lea
push
push
push
call
pop
cli
lret
push
push
pop
movsl
test
add
add
add
ret
in
rolb
mov
push
add
jmp
add
clc
add
xchg
add
add
sub
pop
push
call
push
lea
push
push
call
loope
xchg
in
add
jmp
loop
add
lret
addl
add
std
push
add
popa
scas
add
add
mov
test
outsl
std
jp
in
hlt
lcall
js
xor
ret
test
add
dec
stc
ja
shr
not
push
push
pop
add
add
rol
sub
xor
not
pop
inc
not
pop
push
push
push
push
push
push
lea
push
push
push
call
iret
out
push
hlt
cwtl
add
add
xchg
mov
call
lods
xchg
mov
lahf
popf
add
add
lret
add
add
cld
add
fwait
rcrb
cli
pop
mov
in
in
add
popa
add
lcall
call
push
inc
pop
cmpl
je
push
push
add
add
push
or
inc
add
dec
add
shr
rol
sub
inc
not
pop
lea
shl
dec
pop
push
push
push
push
lea
push
push
push
call
out
add
pop
add
loope
into
push
popa
add
enter
add
mov
aam
int3
les
add
add
pop
mov
jecxz
add
test
add
cmp
xlat
mov
in
in
lcall
push
push
push
push
push
lea
push
push
lea
push
call
add
imul
addl
cmc
mov
ret
pop
push
add
add
add
fs
popl
mov
add
add
aam
int3
sti
imul
add
add
rolb
fwait
imul
loopne
lcall
shrl
add
push
push
push
push
push
push
push
push
call
add
jno
js
ljmp
loope
add
in
xlat
jo
add
pushf
add
ljmp
testb
mov
push
add
add
add
loop
testb
stos
sti
lahf
add
jmp
std
jle
out
pop
add
add
stos
add
lcall
js
xor
pop
ret
iret
add
add
xchg
or
push
call
add
add
add
add
popl
popf
imul
lods
add
add
jmp
add
add
add
mov
loop
mov
pop
lods
add
addb
mov
loope
roll
jge
add
add
add
cmpb
add
add
add
lcall
add
add
add
ja
push
lea
push
push
push
call
jle
cmpl
add
jmp
add
hlt
addr16
add
leave
add
in
loopne
lcall
addb
add
rclb
push
push
push
push
lea
push
push
push
call
lret
test
add
add
xchg
lds
data16
push
add
repnz
pop
mov
scas
add
mov
add
cli
les
push
mov
add
add
add
arpl
pop
add
sti
fsts
movsb
fwait
add
scas
jp
les
in
add
add
add
out
test
in
fdivr
lcall
push
xor
rol
pop
pop
push
sub
not
pop
pop
push
shr
dec
shr
pop
pop
leave
push
rol
sub
shr
pop
ret
push
add
ror
pop
push
mov
push
push
push
push
call
jl
mov
jne
fiaddl
sti
pop
jae
add
fcomip
add
add
cltd
add
call
add
les
lcall
in
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
int
stc
data16
out
jmp
add
lods
add
stos
addl
jae
pop
add
add
add
pop
add
add
xchg
add
aam
cltd
add
pop
hlt
jnp
xchg
add
lods
mov
add
pop
out
sub
pop
cmpl
jne
push
push
add
push
xor
add
not
sub
shl
not
pop
rol
sub
ror
pop
push
shr
pop
pushl
push
rol
not
pop
call
push
push
push
push
push
lea
push
push
push
push
push
call
add
ror
add
jns
out
add
insb
add
leave
jnp
bound
push
add
add
xchg
add
jns
jp
add
add
mov
je
add
add
jae
sarb
xchg
lods
mov
clc
add
jns
test
fcmovnb
add
add
in
fdivr
lcall
shr
prefetchnta
add
shrb
adc
push
push
push
call
gs
xchg
mov
ficoms
movsl
pop
add
add
lret
in
add
add
mov
fwait
push
rcr
in
leave
jbe
lret
mov
fildl
add
add
fildl
into
repnz
add
ror
mov
add
popa
call
lods
cwtl
mov
sub
pop
cmpl
jne
push
xor
dec
pop
mov
push
push
push
push
push
push
push
push
call
add
lds
add
cli
add
in
jmp
jne
sbb
jb
lods
movsb
add
add
insb
jb
scas
sub
pop
call
ret
push
not
xor
add
pop
jmp
cmpl
jne
push
push
not
push
or
not
add
not
not
xor
sub
rol
pop
rol
inc
pop
push
push
call
add
out
leave
add
jl
push
pop
xchg
popf
mov
xchg
add
lcall
pusha
filds
add
add
testl
add
pushf
xchg
mov
repnz
iret
add
in
outsl
movsl
add
jmp
xchg
ja
sub
pop
pushl
call
push
push
push
push
push
push
call
push
xchg
roll
fiaddl
je
add
hlt
xchg
add
push
add
roll
addr16
jmp
sahf
std
mov
jp
add
jns
out
push
rolb
mov
xlat
flds
add
add
jmp
mov
add
mov
lods
add
sti
pop
add
lcall
add
rclb
incb
sti
pop
jmp
push
not
ror
pop
cmpl
je
push
lea
push
push
push
lea
push
push
push
call
loope
popa
lahf
mov
add
imul
jp
movsb
add
stos
jl
icebp
test
fwait
add
add
cli
fcoml
add
mov
cwtl
add
jns
add
mov
mov
mov
jbe
fildl
pop
neg
add
pop
cmpl
jne
push
rol
dec
inc
shl
pop
mov
push
push
push
lea
push
call
mov
jnp
jmp
mov
movsb
jge
pop
add
bound
data16
lods
into
mov
lods
jecxz
test
add
test
add
in
cmc
add
add
add
mov
mov
movsb
add
add
into
insb
add
jecxz
sti
in
lahf
add
in
lock
lcall
or
add
push
push
shl
inc
pop
call
push
push
add
rol
ror
not
push
and
add
not
sub
pop
not
pop
push
add
add
shr
xor
pop
pushl
push
push
push
push
push
push
push
lea
push
call
add
sti
pusha
imul
mov
add
fmul
mov
flds
add
pusha
add
iret
out
stos
in
sub
pop
call
push
shr
lea
inc
pop
call
push
push
add
ror
push
sub
add
shr
sub
dec
shr
xor
xor
pop
not
shr
dec
pop
push
push
call
roll
pop
add
pop
filds
fimuls
mov
add
add
jl
add
add
add
stc
cmpsl
add
roll
add
add
pop
sti
subb
jno
add
in
clc
pop
pushl
push
shl
pop
call
push
push
push
push
push
call
ficoml
add
add
imul
jnp
add
mov
xchg
add
mov
cmpsl
add
add
add
mov
add
cwtl
into
add
cwtl
popa
mov
mov
in
add
jecxz
add
jnp
xchg
add
sub
pop
call
push
push
add
add
dec
push
or
not
add
sub
sub
rol
add
pop
dec
rol
inc
pop
push
sub
shr
pop
pushl
call
push
lea
push
push
push
push
push
push
push
call
add
into
popf
add
stos
add
stc
rolb
add
je
fldl
jae
add
xchg
add
fwait
add
add
xchg
aam
scas
xchg
add
add
subl
stc
std
add
lea
cmc
add
int
add
mov
add
jb
xlat
mov
jnp
data16
jo
fcomps
loopne
lcall
shrb
daa
push
dec
push
shl
rol
push
and
add
sub
sub
lea
lea
pop
sub
pop
push
lea
push
push
lea
push
push
push
push
call
iret
add
mov
in
lea
add
lods
add
add
add
add
add
add
bound
jge
pushf
les
out
test
lods
iret
xchg
add
insb
mov
iret
iret
iret
in
lock
roll
jne
push
add
dec
dec
pop
call
push
add
shl
add
lea
pop
call
push
push
sub
rol
shl
push
or
inc
add
inc
sub
sub
shl
sub
pop
sub
ror
pop
push
push
lea
push
push
lea
push
push
call
push
repnz
jmp
jecxz
add
cwtl
gs
fistpll
add
jp
cmpl
out
std
in
in
call
pushl
call
push
push
push
push
call
jae
add
out
mov
add
add
add
add
mov
decb
fldl
in
add
repnz
fsin
add
fstl
cli
add
addb
aam
iret
into
cld
add
les
divl
xchg
add
mov
mov
add
add
shrb
push
mov
ffree
loope
not
push
or
inc
add
lea
add
sub
shl
lea
sub
add
pop
add
lea
xor
pop
push
shr
dec
sub
pop
pushl
push
push
call
mov
push
add
pop
add
add
addb
cltd
icebp
pop
add
popf
stos
mov
jp
sub
pop
call
push
push
lea
push
call
in
push
out
mov
push
std
add
xchg
add
loop
add
push
in
movsl
hlt
add
push
add
push
mov
aad
nop
lret
cwtl
add
lret
sub
pop
call
push
push
add
shr
inc
add
push
and
add
lea
xor
xor
sub
sub
pop
pop
push
rol
pop
pushl
push
push
lea
push
push
push
lea
push
push
push
call
add
add
popa
movsl
xchg
into
pusha
add
add
jo
add
add
push
add
xchg
jle
mov
leave
jge
fildl
xchg
rolb
ffree
pop
sub
pop
call
push
sub
rol
shl
pop
call
push
push
lea
push
or
inc
add
inc
dec
add
add
sub
add
rol
add
sub
pop
lea
pop
push
sub
rol
pop
pushl
push
push
push
push
lea
push
push
lea
push
push
call
add
add
xchg
aad
add
pop
add
add
cltd
add
loopne
movsb
fadds
add
add
add
lods
add
add
add
add
sub
pop
call
push
push
push
push
lea
push
push
push
push
push
push
call
xchg
pop
add
les
fwait
xchg
pop
push
jbe
ljmp
stc
add
add
add
popa
add
cltd
add
jecxz
add
add
lcall
shrb
xchg
into
or
or
or
inc
add
sub
sub
pop
sub
sub
add
add
pop
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
xchg
add
jns
push
add
lcall
pop
xchg
bound
add
rclb
add
call
mov
add
xchg
xchg
xlat
add
mov
ret
mov
in
add
clc
jb
add
shl
in
add
jne
push
push
push
lea
push
lea
push
lea
push
push
call
pop
leave
roll
mov
add
pop
pop
cmpsb
int3
mov
xchg
add
loopne
pop
add
imul
roll
into
add
stos
movsl
xchg
rolb
add
add
add
add
mov
jmp
jmp
lcall
mov
add
push
lea
push
push
lea
push
lea
push
call
in
fstl
cmpsb
add
push
shl
mov
mov
cmpsl
or
mov
aam
in
xchg
faddl
add
add
bound
xchg
add
add
fwait
rorb
arpl
test
add
ficomps
mov
pop
call
push
push
push
sub
add
dec
sub
dec
add
pop
sub
pop
push
push
push
push
push
lea
push
push
push
call
add
add
push
mov
add
add
sti
add
add
andl
add
xchg
add
mov
xchg
in
leave
xchg
add
test
lcall
jne
call
push
xor
dec
pop
lea
push
add
add
pop
push
push
rol
add
pop
call
push
push
sub
add
push
or
not
add
lea
shr
sub
dec
rol
inc
sub
pop
not
add
not
pop
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
fiadds
mov
rolb
stos
add
std
add
add
add
pop
cwtl
data16
add
add
add
mov
add
clc
add
add
add
cmpsb
add
fwait
add
out
add
add
test
outsl
pushf
sub
pop
pushl
call
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
out
fiadds
mov
add
test
sahf
mov
lret
sahf
cmpsb
add
add
add
sti
add
add
add
add
mov
add
cmpsl
sub
pop
call
push
push
xor
dec
push
sub
add
not
xor
rol
sub
sub
add
dec
xor
pop
inc
add
add
pop
push
push
push
push
lea
push
push
push
push
call
add
loope
filds
cld
add
add
mov
add
add
add
xchg
iret
test
loopne
pushl
push
push
push
push
lea
push
push
push
call
aad
xlat
add
mov
lret
jnp
shrb
mov
jne
hlt
fdivr
mov
add
insb
add
add
mov
mov
mov
add
add
sti
xchg
aam
add
pop
add
iret
add
int
add
mov
ret
imul
push
lcall
pop
sbb
add
icebp
sub
xor
pop
call
push
push
add
push
xor
add
shr
sub
dec
sub
sub
pop
dec
add
not
xor
pop
push
dec
dec
pop
pushl
call
push
sub
add
shr
rol
pop
call
push
push
add
lea
not
push
xor
add
lea
not
sub
sub
rol
pop
sub
shr
inc
pop
push
push
push
lea
push
push
lea
push
lea
push
push
call
mov
add
add
mov
gs
add
add
in
add
add
xchg
mov
in
loopne
pushl
push
lea
xor
pop
call
push
push
xor
ror
add
ror
push
push
pop
add
add
add
sub
ror
pop
sub
pop
push
push
not
shl
push
and
add
xor
sub
sub
pop
rol
pop
push
add
dec
pop
call
pop
push
lea
push
push
push
lea
push
call
int
add
scas
sti
lods
mov
add
add
add
scas
add
in
jno
add
jno
ret
add
add
xchg
add
add
loope
js
mov
add
add
add
movl
jne
push
shl
pop
call
push
push
push
push
push
push
lea
push
push
call
ja
clc
add
add
jae
jne
lahf
add
fwait
hlt
xlat
add
fld
jae
scas
jnp
sar
lcall
lret
mov
addl
in
loopne
mov
push
push
push
push
push
lea
push
push
push
push
push
call
add
add
cld
push
add
xchg
add
jns
xchg
movsb
in
add
add
add
js
jmp
add
add
addr16
fwait
mov
sub
pop
int
lea
push
push
shr
push
push
pop
add
shl
shl
sub
sub
rol
add
sub
pop
not
pop
push
push
call
testb
lods
lods
mov
push
fldenv
int3
mov
mov
and
push
jle
int
add
aam
lock
xchg
mov
xchg
add
mov
into
add
mov
clc
lcall
jne
push
dec
lea
xor
pop
call
push
push
lea
push
call
add
iret
mov
mov
icebp
add
jecxz
popa
faddl
add
std
add
outsl
add
scas
fildl
std
fldl
outsl
add
mov
jecxz
add
jmp
add
add
add
push
add
loop
xchg
add
lcall
shrb
fdiv
push
push
sub
push
xor
add
sub
shl
dec
sub
dec
sub
pop
ror
pop
push
rol
pop
pushl
push
dec
pop
call
push
ror
shr
shr
pop
call
push
push
push
push
push
lea
push
push
call
mov
gs
pushf
fs
popl
add
repnz
add
mov
add
in
mov
add
add
add
add
mov
rolb
test
fisubrs
in
in
mov
lea
push
push
add
xor
push
or
not
add
lea
sub
sub
sub
sub
pop
add
add
pop
push
rol
sub
pop
pushl
push
lea
inc
not
pop
call
lea
push
lea
push
push
call
mov
add
jno
add
ret
add
lea
xchg
fcomip
mov
les
xchg
add
mov
add
ljmp
lcall
push
push
push
push
call
je
pop
jne
fcmovu
add
mov
add
out
cmc
add
add
mov
add
add
add
insb
add
shlb
pop
mov
addr16
add
clc
add
les
mov
push
xchg
push
add
cli
test
add
stc
add
push
lds
sub
pop
push
push
push
sub
not
pop
pushl
push
push
shl
add
shl
shl
push
push
pop
add
sub
not
sub
dec
shr
pop
ror
sub
sub
rol
pop
push
xor
sub
pop
push
call
push
push
sub
lea
add
add
push
and
add
ror
shr
add
sub
sub
pop
dec
not
pop
push
shr
dec
pop
pushl
push
push
push
push
call
add
fsubrl
jmp
jo
pop
leave
add
pop
add
add
add
aam
mov
add
add
add
mov
jno
add
add
testl
imul
push
ror
pop
push
call
push
push
shr
ror
push
or
not
add
lea
dec
ror
sub
xor
sub
add
rol
pop
sub
dec
sub
pop
push
ror
dec
pop
pushl
push
push
push
push
push
call
jae
lret
jae
xchg
mov
add
mov
jmp
xorb
mov
std
mov
add
movl
aam
add
add
pusha
add
push
mov
movsl
add
xchg
add
sti
xchg
add
filds
lcall
mov
shl
xor
pop
call
push
push
lea
push
push
lea
push
push
push
call
add
add
xchg
into
jl
push
add
out
add
ljmp
mov
add
add
lods
push
ret
lahf
fwait
add
out
jge
add
mov
add
mov
add
pop
pushl
push
push
push
lea
push
push
call
push
add
push
lods
scas
clc
insb
jae
add
add
jmp
add
fcomi
add
add
add
jnp
sub
pop
mov
push
shr
pop
jmp
push
push
not
dec
push
or
inc
add
add
sub
not
shr
pop
shl
shl
sub
pop
push
push
call
add
add
fisubs
add
lahf
add
add
fwait
lcall
jge
out
iret
add
push
add
add
jns
jmp
shrl
mov
clc
pop
pushl
call
push
push
call
pusha
add
pop
add
aad
add
xchg
add
gs
add
stos
add
pop
add
add
mov
add
mov
jecxz
rcr
add
popf
movsb
lods
add
pushf
cwtl
imul
mov
repnz
mov
add
test
shll
lcall
add
iret
pop
call
push
push
shl
inc
shl
push
sub
add
sub
sub
not
lea
sub
lea
add
shr
pop
rol
shr
dec
pop
push
push
lea
push
push
lea
push
call
add
aam
les
mov
cmpsl
cld
jl
add
mov
hlt
add
ficoms
mov
ret
mov
add
nop
push
fisubrs
add
mov
jae
fidivs
lret
add
into
add
add
addr16
out
lret
divl
add
cwtl
int
cmpb
pop
pushl
push
sub
pop
call
push
not
lea
pop
push
call
push
push
push
lea
push
call
add
add
loop
add
shl
add
pop
mov
shr
cmpsl
addl
cltd
lods
ja
test
fdiv
ret
mov
sahf
pop
mov
enter
pop
add
mov
mov
fnstsw
mov
int
enter
into
add
fcoml
in
lock
lcall
push
add
shr
ror
rol
pop
add
push
ror
pop
pop
pop
push
push
push
call
add
add
push
add
add
loope
add
jns
add
push
cmpsl
add
pop
cmc
add
fadds
fs
add
add
add
in
cltd
pop
test
lcall
push
sub
pop
xor
inc
push
rol
shr
ror
pop
ret
leave
push
push
push
push
lea
push
call
cltd
arpl
int
lret
xlat
add
add
push
add
add
add
add
test
add
add
enter
sahf
add
add
add
add
add
hlt
pusha
ficomps
add
lret
add
jecxz
sub
pop
ret
push
add
xor
add
pop
push
push
shl
sub
pop
mov
push
lea
push
push
push
call
add
add
xchg
add
ret
fsubs
lock
add
add
ja
loopne
movsb
and
out
add
lock
sub
gs
add
add
in
sub
pop
cmpl
jne
push
add
add
not
pop
mov
jmp
push
lea
push
push
push
push
push
call
add
xchg
push
xlat
pop
push
out
into
pop
add
add
jbe
cld
mov
stc
shl
jle
pusha
add
lea
in
out
add
lcall
inc
or
loopne
push
inc
lea
pop
xor
xor
push
shr
ror
pop
add
xor
push
push
push
call
lock
pop
test
add
add
sti
add
mov
add
movsb
shll
add
add
mov
aad
add
adcb
add
pushf
add
test
pop
dec
push
not
shl
inc
shl
pop
sub
push
add
inc
add
xor
pop
jmp
push
ror
pop
sub
pushl
push
sub
add
rol
add
pop
pop
sub
push
push
call
jl
add
add
add
ret
mov
add
add
lea
icebp
add
jno
ljmp
add
pop
scas
les
add
clc
aam
mov
add
hlt
fcoml
imul
jmp
xchg
add
stc
add
addl
je
les
lcall
cmp
insb
call
sub
rol
ror
pop
mov
push
lea
push
push
push
lea
push
push
push
push
push
push
call
add
mov
mov
lret
jno
shrb
std
add
mov
sbb
in
testb
mov
arpl
add
test
push
add
add
cli
mov
add
mov
add
mov
mov
add
mov
dec
cmp
jmp
push
sbb
push
push
push
lea
push
call
clc
add
data16
add
add
add
add
ret
cli
push
add
mov
add
xchg
pop
add
jmp
lret
test
add
pop
sub
pop
mov
shr
push
shl
add
pop
add
push
pop
sub
push
push
push
push
push
call
xchg
pop
add
add
mov
add
add
fsts
outsl
cwtl
addr16
testl
push
push
popf
add
ret
add
jno
out
fcom
fdivs
add
lret
in
pop
pushl
push
push
push
call
mov
add
fcomps
int
add
add
xlat
xlat
cli
add
add
addl
add
add
add
jne
cld
scas
leave
mov
add
add
fwait
add
rolb
add
cli
add
hlt
imul
shrb
add
pop
sub
pop
pop
shr
push
push
call
add
add
add
mov
lds
add
mov
add
les
add
rol
imulb
add
lcall
and
push
rol
inc
xor
shr
pop
sub
push
add
sub
pop
cmp
jne
leave
push
push
push
call
in
pop
add
cmpsl
addl
add
pop
add
hlt
movsb
add
add
gs
test
add
add
fwait
sub
pop
ret
push
shr
pop
push
push
push
push
push
push
push
call
pusha
add
add
jne
add
xchg
add
pop
rcrb
js
lds
add
mov
leave
mov
divl
pushf
jmp
add
add
stos
cmc
push
mov
cmc
mov
call
cld
push
push
push
push
push
call
add
stos
test
push
add
int
loope
mov
add
arpl
mov
add
xchg
je
add
pusha
pop
fcmovnb
sub
pop
push
push
push
push
call
add
jecxz
add
scas
enter
lods
pop
out
add
enter
repnz
add
addb
add
xchg
add
jle
add
mov
out
mov
int3
hlt
lret
addl
add
xlat
mov
pop
add
mov
jp
add
add
loop
sub
pop
push
push
push
push
lea
push
push
push
push
call
jae
add
mov
add
push
add
test
jle
add
loopne
add
mov
jo
add
in
lcall
push
sub
add
sub
dec
pop
push
push
inc
add
pop
mov
push
sub
add
pop
lea
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
cmpsb
add
add
je
cmpsb
lret
leave
add
addr16
shll
add
nop
add
mov
iret
rol
cld
push
test
add
add
add
push
add
enter
cmpsl
mov
decb
in
fdivr
lcall
ljmp
cltd
pop
sbb
lea
push
push
push
lea
push
push
push
push
call
test
insb
lret
add
imul
add
cmpsl
data16
add
add
into
add
jl
mov
xchg
lahf
add
mov
lcall
ljmp
daa
pop
cmp
add
pop
add
add
jl
pushf
fadd
xchg
add
std
push
add
pop
rorl
sahf
cmc
add
add
scas
mov
enter
add
out
iret
add
pop
jmp
lock
mov
push
jno
add
fwait
addb
add
pushf
lea
push
push
lea
push
push
push
push
push
call
popf
pusha
add
add
add
insb
cli
lea
push
je
jbe
push
popa
add
add
mov
ljmp
add
jns
roll
xchg
add
hlt
add
pop
jae
std
push
xchg
mov
xchg
add
xchg
pop
mov
lds
sub
pop
add
mov
push
push
lea
push
push
push
call
icebp
clc
bound
pop
mov
loopne
add
jmp
add
add
insb
out
xchg
add
jnp
add
mov
push
add
add
add
add
cmc
mov
add
clc
mov
add
add
fwait
add
add
add
add
sub
pop
add
push
push
push
push
push
push
push
lea
push
call
hlt
add
add
lock
pop
popf
push
mov
testl
add
add
add
cmpsl
add
add
add
cli
out
add
shl
pop
mov
push
mov
jo
frstor
jecxz
filds
xchg
js
lods
int3
js
sti
insb
mov
sub
pop
xor
push
shr
pop
mov
and
push
ror
xor
add
pop
rol
rol
push
dec
xor
pop
xor
push
ror
pop
inc
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
xorb
add
add
enter
loopne
test
iret
add
jmp
iret
aam
xchg
jecxz
add
add
add
cld
add
push
add
arpl
add
leave
jne
add
ja
mov
add
xchg
add
add
push
jne
add
add
in
fcomps
cmp
jne
push
push
push
push
push
call
add
out
add
out
jne
popf
loope
mov
add
fstl
test
out
roll
addb
fdivr
data16
je
test
pusha
add
add
in
add
add
imul
lahf
pop
xchg
push
in
lcall
inc
pop
ss
cmp
je
push
lea
push
call
jb
pop
xchg
add
add
add
mov
fiaddl
add
add
add
ret
loop
jp
add
add
sub
pop
add
push
add
xor
pop
cmpl
jne
push
shl
sub
add
pop
xor
push
sub
inc
sub
pop
pop
push
inc
xor
add
not
pop
pop
push
push
lea
push
lea
push
call
add
into
mov
pop
xchg
add
xchg
xchg
mov
add
enter
add
mov
add
aad
mov
gs
pushf
add
lock
pop
push
dec
shl
sub
pop
pop
pop
push
shl
sub
pop
leave
push
push
push
push
lea
push
push
push
push
push
call
mov
je
add
imul
add
add
mov
mov
add
test
cltd
add
add
std
add
popa
pop
add
or
push
dec
sub
pop
mov
push
push
push
call
push
in
add
rcr
ficoml
lods
xabort
js
mov
addb
mov
lahf
leave
movl
aam
xchg
shr
mov
imul
mov
xchg
jno
cmpb
mov
add
add
in
hlt
lcall
push
or
lea
pop
push
push
rol
xor
lea
sub
pop
mull
push
add
pop
pop
push
lea
push
push
push
push
push
lea
push
push
call
add
add
lods
pop
add
add
xchg
add
add
imul
xlat
in
lret
test
lret
addb
add
add
std
add
shll
in
bound
lret
add
ljmp
filds
lcall
pop
ret
push
push
push
push
lea
push
push
lea
push
push
push
push
call
mov
add
roll
ror
addr16
ljmp
mov
push
mov
data16
test
add
add
enter
je
jp
add
addr16
add
mov
pop
mov
add
add
add
sub
pop
push
call
push
inc
pop
xor
pop
push
push
push
lea
push
push
lea
push
push
lea
push
call
repnz
stc
add
rcrb
xchg
cld
add
xchg
lock
add
jl
add
add
add
add
shll
add
mov
jno
add
pop
rcr
pop
stc
mov
add
popf
jnp
add
data16
lock
add
sub
pop
pop
push
dec
shl
add
pop
pop
push
lea
push
push
lea
push
call
fsubr
rolb
add
add
add
add
add
add
jns
add
add
jecxz
scas
add
xchg
loop
mov
add
arpl
add
add
test
add
add
add
fs
std
add
lcall
push
lea
push
call
add
add
add
add
in
add
add
xchg
in
xchg
add
in
movsb
add
add
int
out
mulb
mov
xchg
add
imul
add
lcall
push
dec
not
add
pop
leave
push
ror
add
pop
ret
push
push
add
rol
add
pop
mov
add
push
lea
dec
pop
push
push
push
push
push
lea
push
call
mov
mov
add
xchg
loop
stos
add
push
lahf
pop
mov
fcomps
lods
add
arpl
mov
clc
jnp
mov
add
imul
mov
out
add
add
je
in
in
pop
push
push
push
push
push
push
push
push
push
push
call
add
std
add
shll
add
add
add
pop
add
push
testl
lahf
popl
lcall
push
push
shl
pop
mov
push
add
sub
pop
push
push
push
push
push
push
push
call
shr
xchg
lret
add
add
add
scas
add
push
fidivs
imul
add
add
gs
add
lea
out
add
call
inc
push
push
call
mov
std
popa
imul
add
vhaddps
add
mov
add
movsb
mov
jecxz
std
lods
bound
mov
jo
lds
in
int
cmpsb
add
add
add
lods
insb
xchg
scas
add
add
add
cmpsl
in
mov
data16
add
sahf
repnz
add
in
lock
lcall
push
cmp
ljmp
push
pop
pop
mov
push
lea
push
lea
push
call
add
xchg
add
add
add
mov
push
mov
stos
bound
pop
shr
add
push
lea
add
not
pop
mov
push
shr
not
not
shl
pop
add
push
lea
push
lea
push
push
push
push
call
icebp
mov
xlat
aad
add
add
add
movb
push
add
add
add
add
add
rolb
movsb
stc
add
loope
mov
jae
xchg
mov
add
testl
add
jge
add
mov
rcr
add
lods
push
add
lcall
jae
push
not
shl
pop
popl
push
push
push
push
push
push
lea
push
lea
push
call
cmpsb
pop
jl
out
popf
jmp
mov
add
scas
add
add
movsl
mov
mov
popl
add
add
test
sub
pop
mov
push
push
push
push
push
push
call
fldl
cwtl
fsubr
add
pop
add
cmpb
push
pop
hlt
add
add
xchg
popf
out
add
jb
add
test
movl
add
add
not
sub
pop
add
push
inc
pop
xor
push
add
sub
pop
lea
push
not
pop
mov
push
push
push
push
call
hlt
add
add
lret
jp
add
add
mov
add
lods
add
out
xchg
pop
test
add
add
hlt
add
in
jae
sub
pop
add
push
push
call
ja
add
gs
jmp
add
iret
push
icebp
mov
xlat
add
add
data16
add
add
add
icebp
imul
add
in
add
loop
push
mov
sarl
jno
lods
add
xor
push
push
lea
push
push
call
int
add
mov
pop
add
xchg
lds
outsl
lds
pop
loop
cmpsl
aad
add
add
pop
add
mov
add
in
ja
loop
shlb
jne
test
jb
add
sub
pop
rol
push
pop
nop
nop
push
push
push
lea
push
push
push
push
call
leave
clc
cwtl
gs
add
add
mov
mov
push
mov
add
jns
add
add
imul
enter
mov
add
fs
mov
lcall
add
fwait
adc
push
push
lea
push
call
add
push
add
divl
ja
add
jae
mov
add
roll
add
add
add
add
push
push
aam
repnz
ljmp
cltd
add
out
add
cli
fldl
iret
add
xchg
jle
fmul
add
into
std
cmpsb
add
gs
add
sub
pop
nop
push
sub
dec
pop
inc
nop
push
add
lea
add
pop
nop
push
push
push
push
push
push
push
push
call
ljmp
add
cmpsl
jo
xchg
add
scas
add
addl
mov
stc
insb
xchg
aam
jns
add
addr16
add
gs
pop
cmpb
jne
add
push
push
lea
push
call
xchg
add
add
add
add
stos
add
pushf
push
lods
gs
scas
mov
les
add
add
js
fadds
push
xchg
add
ja
ret
mov
insb
add
in
hlt
pop
nop
nop
push
push
call
add
outsl
add
cmc
popf
add
std
in
push
in
mov
rolb
into
add
add
add
aam
xchg
push
cld
clc
addb
lahf
add
mov
push
out
mov
aam
pushfw
mov
into
add
out
add
add
std
in
in
in
clc
pop
cmp
je
push
lea
push
push
push
push
push
call
jo
xchg
add
repnz
loop
fwait
push
in
lds
out
jmp
scas
jecxz
xchg
cli
shlb
mov
add
or
ja
movsl
mov
enter
enter
loopne
add
movsb
lahf
add
push
popf
std
stos
hlt
jp
add
mov
call
nop
push
shl
dec
pop
nop
push
sub
pop
inc
nop
push
push
push
lea
push
push
push
push
push
push
push
call
mov
xchg
add
mov
add
add
add
out
add
bound
add
add
in
loope
mov
add
cmpsl
add
fs
xchg
lcall
push
sub
dec
dec
pop
cmp
jb
push
lea
push
push
call
sahf
stos
push
jo
int
add
add
add
lahf
add
leave
repnz
add
xchg
add
leave
add
lods
push
add
add
add
push
fwait
pop
bound
hlt
pop
xor
push
inc
dec
sub
shr
pop
jmp
mov
push
push
push
push
push
push
lea
push
call
mov
sar
push
sbb
out
add
add
pop
xlat
add
add
xchg
lret
add
popf
add
sbb
add
add
popf
jp
add
enter
add
addl
test
add
add
fiaddl
add
add
rorl
mov
jb
push
push
push
push
lea
push
call
rcr
mov
add
add
int3
nop
jb
add
xchg
rolb
push
mov
add
mov
push
push
int3
add
popa
add
imul
add
jp
sub
pop
mov
add
push
xor
xor
add
xor
pop
mov
push
sub
ror
pop
xor
xor
push
push
call
je
add
add
sahf
insb
fnstsw
add
cmpsl
mov
mov
xchg
add
fsubs
mov
add
jns
add
jnp
xchg
icebp
add
mov
mov
lret
add
add
cmpsb
leave
imul
add
lea
add
push
movsb
sub
pop
shl
push
shl
pop
xor
push
add
rol
pop
shl
push
push
lea
push
push
push
push
push
call
add
add
pop
rcrl
add
call
add
mov
add
cltd
icebp
add
je
add
mov
lds
lea
mov
mov
add
add
jae
in
xchg
jle
add
mov
lock
out
add
xchg
add
sub
pop
xor
shl
push
dec
pop
xor
mov
push
push
call
add
sahf
mov
in
fistl
add
push
fldcw
jae
add
add
xchg
add
lcall
inc
hlt
pop
push
not
dec
dec
pop
pop
push
inc
xor
dec
shl
pop
pop
pop
push
push
push
call
add
jl
pusha
popa
add
add
cmc
scas
add
addb
add
add
jp
ljmp
add
xlat
rolb
testb
lea
push
push
push
push
push
push
lea
push
call
add
add
cmpsb
fstpt
jmp
add
add
jmp
repnz
lahf
pop
add
add
loopne
sbbb
add
mov
add
pop
mov
add
add
jno
loopne
mov
add
cld
fidivrs
xchg
add
add
jae
add
in
loopne
ret
push
dec
xor
not
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
pushf
mov
movsb
add
add
mov
faddl
xchg
pop
add
add
add
aam
jbe
cli
aad
mov
sub
pop
mov
push
push
sub
dec
shl
pop
push
push
push
ror
pop
push
mov
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
mov
clc
push
push
add
push
add
jnp
roll
enter
add
add
movsl
add
add
insb
add
hlt
ja
add
add
add
add
add
add
addl
mov
jle
div
add
faddl
loopne
in
mov
lcall
adc
rcrl
or
xor
gs
lea
push
lea
push
lea
push
push
call
ja
add
add
mov
shll
add
les
mov
loope
mov
imul
push
mov
loopne
add
out
cmc
fisubl
add
leave
add
pop
mov
add
add
add
add
add
jmp
add
mov
sub
pop
test
je
push
lea
push
lea
push
push
call
jae
fwait
pop
add
pusha
mov
fidivl
rolb
add
popl
mov
jne
pop
je
clc
add
add
add
int
add
add
add
add
add
add
lcall
jno
test
je
push
push
push
call
fiadds
jno
std
add
repnz
cmpsl
add
pop
testb
add
add
push
add
testl
mov
xlat
mov
imul
add
add
mov
pop
mov
push
inc
rol
add
pop
mov
mov
push
rol
pop
inc
push
add
pop
cmp
je
test
je
push
push
push
push
call
add
call
mov
repnz
jae
pusha
imull
add
lret
mov
filds
les
add
add
insb
jp
add
add
add
pop
mov
push
add
shl
sub
pop
inc
push
push
lea
push
lea
push
push
push
call
cmc
mov
jmp
icebp
scas
xchg
stos
add
out
add
add
mov
addr16
cli
add
add
stos
add
add
hlt
mov
mov
fwait
add
push
mov
mov
add
add
clc
into
add
push
fldl
push
fwait
add
roll
mov
pushf
movsb
add
add
in
call
test
add
add
inc
out
cmc
pop
test
jne
push
sub
pop
xor
push
sub
add
pop
pop
push
lea
push
call
andb
add
cld
add
add
lcall
jae
add
mov
add
push
fcomps
add
add
jo
in
fcmovnu
xlat
ja
add
add
mov
sti
push
jecxz
add
imul
pop
push
push
push
lea
push
call
fcomps
add
lock
int
mov
add
add
add
push
shlb
add
leave
mov
add
aad
add
add
push
add
test
push
push
push
lea
push
lea
push
push
push
push
call
leave
movl
xchg
add
out
lods
sahf
fiaddl
in
add
jecxz
popl
mov
int
movsb
rcrl
lock
push
add
add
loopne
lcall
push
add
pop
leave
push
lea
push
lea
push
push
push
push
push
push
push
call
popf
fcoml
add
add
push
add
jbe
movsl
pop
xchg
add
idivb
nop
mov
add
fdivr
imul
add
add
mov
ja
mov
js
add
fwait
add
pushf
xchg
mov
ljmp
in
fdivr
lcall
or
push
push
push
push
push
push
push
lea
push
call
add
scas
add
cwtl
jp
add
fildl
lahf
jbe
scas
out
mov
cld
mov
loope
loop
add
push
add
test
add
jbe
in
mov
push
add
incb
xchg
rolb
lahf
add
add
lods
add
add
pushf
test
jle
add
xchg
add
add
cmc
sub
pop
mov
push
push
push
lea
push
push
push
push
push
push
call
pop
add
push
add
add
test
add
add
pop
add
aad
mov
add
cwtl
add
jmp
add
int
popa
leave
cmpsb
add
sub
pop
inc
push
ror
pop
cmp
jne
push
push
push
push
push
push
call
add
xchg
xchg
add
add
mov
pop
cltd
mov
mov
add
jns
enter
add
add
lret
add
add
popf
add
add
add
add
add
mov
xchg
out
stos
add
fsubs
sub
pop
lea
push
push
push
call
pop
sti
loope
mov
addb
nop
add
ficompl
jp
jbe
add
movsl
incb
movb
mov
lock
test
jmp
cwtl
add
push
push
add
add
mov
add
add
outsl
add
in
hlt
pop
mov
push
shl
dec
pop
test
je
mov
push
inc
pop
add
cmp
jne
push
push
push
call
add
jbe
add
mov
add
add
enter
addl
test
shll
fldl
testl
je
push
push
push
push
push
push
push
push
push
call
add
push
stos
xchg
fwait
test
je
add
add
jp
add
jno
add
push
add
mov
mov
jmp
cmc
out
sahf
xchg
jp
add
add
xchg
add
add
xchg
addb
pop
mov
push
ror
sub
pop
add
push
push
call
pop
add
add
add
mov
add
jmp
test
cwtl
out
xchg
add
mov
push
in
clc
pop
cmp
je
jmp
push
sub
pop
xor
push
lea
push
lea
push
push
push
call
add
sti
enter
xchg
std
mov
movsl
add
add
aad
rol
call
add
scas
sarb
cmpsl
add
in
bound
loop
fiadds
mov
movsb
fadds
imul
add
movl
add
movl
add
pop
pop
push
dec
add
pop
pop
push
lea
push
push
push
push
push
push
call
mov
jmp
mov
add
add
jno
add
mov
in
mov
in
mov
jecxz
pushf
jge
arpl
xchg
add
push
imul
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
leave
add
push
add
xchg
jo
arpl
sarl
mov
add
pop
ja
popf
add
in
loop
aad
outsl
leave
add
add
mov
out
lock
mull
mov
push
not
sub
pop
ret
push
xor
not
pop
lea
push
xor
inc
sub
pop
pop
push
push
call
push
add
ffreep
out
int3
test
mov
mov
add
add
rcrb
push
mov
mov
add
pop
call
jecxz
fsubl
add
add
add
jge
sarl
ret
enter
add
cld
add
icebp
out
mov
add
add
add
mov
add
clc
pop
pop
pop
push
push
push
push
call
add
testb
add
add
mov
add
roll
mov
gs
add
add
pop
hlt
add
add
mov
shlb
add
pop
int
add
fisubrl
mov
add
add
add
xchg
flds
add
push
add
lock
lcall
push
push
push
lea
push
push
push
lea
push
push
call
cld
add
add
pop
add
add
add
into
aad
loope
mov
push
add
mov
jmp
add
add
in
xlat
jno
add
fisttpl
js
cltd
mov
add
add
cltd
add
add
js
sub
pop
leave
push
dec
pop
ret
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
mov
add
filds
pop
iret
pop
add
negl
add
add
lret
push
ljmp
mov
push
pop
pop
pop
push
push
push
push
push
call
mov
add
fdivp
add
add
add
add
push
in
mov
push
cltd
insb
add
in
in
lcall
push
lea
push
lea
push
lea
push
call
add
lods
clc
lret
enter
add
mov
mov
mov
enter
push
scas
add
cli
jo
imul
popa
movsb
filds
rcl
add
mov
fstl
pop
add
add
push
in
lock
pop
leave
push
sub
add
pop
ret
cmp
leave
mov
inc
lret
mov
into
mov
ror
mov
mov
lret
add
mov
xchg
lret
or
icebp
dec
enter
add
loopne
fwait
jge
jp
jg
cmpsl
push
push
pop
xchg
rolb
js
ficoml
lret
pop
mov
jno
xchg
mov
jnp
jp
add
inc
leave
inc
adc
out
sbb
in
inc
push
adc
stos
push
lea
xchg
xchg
loop
mov
mov
jge
aaa
fnstsw
arpl
mov
add
insb
and
mov
xchg
hlt
mov
lods
das
sbb
into
push
and
xorb
lcall
mov
bound
aam
outsb
inc
addr16
cmpsb
in
andb
inc
lea
or
push
push
loope
ret
inc
add
mov
sbbl
mov
daa
adc
mov
lods
in
divl
mov
pop
inc
fdivp
mov
mov
jp
out
fdivl
add
inc
push
and
push
data16
push
enter
push
sub
push
stos
dec
ret
push
scas
outsl
movl
std
adc
pop
add
out
sahf
xor
pop
jg
repz
mov
cmpl
xchg
xchg
into
enter
insl
pusha
out
icebp
pop
pop
stc
push
movsb
dec
mov
popf
test
dec
stc
popf
mov
jmp
lahf
jb
sbb
sbb
cmp
mov
sbb
and
lcall
outsl
and
jb
push
pusha
mov
ja
imul
sub
add
std
hlt
adc
adc
pop
notl
mov
sbb
imull
push
out
insl
lds
jo
mov
ficompl
sbb
std
nop
sub
cwtl
fldenv
cmpl
sarl
adc
insl
fistpll
sub
push
mov
leave
roll
xchg
addr16
pop
jle
dec
and
jp
insb
and
jecxz
xchg
lcall
jo
dec
sub
inc
push
popf
mov
out
cld
adc
pushf
aam
or
jns
clc
sub
enter
ret
popa
loop
ret
pop
cmp
jmp
adc
rorb
xchg
imul
dec
mov
in
ret
xor
stos
movsb
push
push
popf
jne
cs
cmc
cmp
orl
push
aad
js
insl
lods
imul
lods
pop
dec
jo
add
pushf
shlb
jno
inc
es
clc
or
jle
cmp
jmp
add
aas
add
or
subl
cltd
or
jae
mov
and
pusha
das
lcall
pop
ss
inc
dec
jne
push
dec
loop
ljmp
pushf
fstpt
cmpsl
adc
imul
cld
mov
inc
cmpsb
cmpsl
lret
xchg
insb
or
push
dec
mov
outsb
dec
aas
adc
mov
ss
inc
mov
inc
mov
cwtl
mov
into
xlat
insb
dec
in
stc
and
xchg
pop
cmp
out
inc
in
insb
inc
dec
mov
adc
pop
scas
jns
aas
lahf
fwait
rcr
into
repz
mov
sbb
adc
sub
push
or
cmp
pusha
and
add
or
out
xorl
push
fldcw
mov
pushf
idivb
add
and
push
in
scas
sub
xlat
adc
std
into
adc
jns
mov
insb
jle
jge
inc
mov
aaa
ret
nop
or
rcr
es
cmc
mov
jb
xor
imul
sub
mov
mov
xchg
into
push
pop
test
ret
aas
or
in
mov
aas
nop
sub
dec
push
nop
cltd
cmpsl
fcoml
aam
movsl
push
or
outsb
pushl
mov
mov
add
addb
out
rcrl
lock
sbb
push
xchg
adc
arpl
pop
xchg
dec
sbbl
inc
cs
sbb
cmovp
popw
sub
add
sub
pop
repnz
sbb
ja
xor
fs
push
scas
adc
mov
jmp
sahf
dec
xchg
cltd
fistpl
mov
or
in
test
adc
shl
roll
cli
sub
movsl
adc
iret
xchg
lret
push
xor
add
imul
inc
adc
fcmovnu
sbb
xlat
test
test
mov
dec
sub
shrb
nop
cmc
js
adc
movb
lods
je
jb
xchg
jbe
adc
dec
adc
cmp
loope
adcb
mov
in
ret
repnz
xchg
bound
stos
iret
orb
jg
dec
xor
imul
jecxz
gs
scas
cwtl
sarl
xchg
and
inc
in
aam
mov
rcll
adc
add
sub
loopne
sbb
adc
movsl
je
notl
jl
cmp
out
dec
xor
mov
sub
inc
fcmovne
add
scas
push
sbb
insb
or
adc
into
push
sub
xorb
cmpsb
inc
jg
lret
shlb
mov
xchg
nop
ljmp
cmp
sub
xor
add
jno
fucomip
adcl
jbe
fwait
out
call
adc
pusha
or
popa
divl
xor
mov
push
push
push
xchg
into
out
mov
divb
push
mov
sbbl
xchg
fdivrl
lds
sbb
push
dec
lret
lock
movsb
fnstsw
mov
inc
xor
jp
sbb
and
jnp
xchg
std
pop
mov
push
data16
mov
sbb
push
adc
imul
in
adc
xlat
sbb
mov
xor
es
or
sub
testb
jbe
dec
scas
adc
add
loopne
push
jp
pop
pushf
out
test
push
jp
ficoms
xor
sahf
int
lcall
scas
pop
pop
es
adc
leave
inc
test
out
fadds
stc
and
push
aaa
jne
mov
jle
inc
and
test
cmpsb
or
push
fnstenv
outsl
cld
adc
xor
in
or
inc
pop
or
call
dec
sub
dec
movsl
adc
js
push
shrl
lret
addr16
sarb
popa
nop
out
adc
imul
xchg
jg
mov
cld
inc
sbb
or
sbb
dec
jge
movl
mov
mov
lods
add
cltd
out
jp
mov
push
out
add
sub
sbb
fld
popa
xchg
fists
dec
jmp
xlat
mov
push
std
outsb
push
cltd
aaa
outsl
inc
inc
sub
mov
hlt
inc
dec
sbb
test
dec
js
add
dec
and
xor
scas
xor
sbb
shlb
idiv
add
jmp
jne
mov
or
outsb
sbb
xchg
sahf
fadd
pop
sbb
loope
or
cmp
push
sarb
mov
mov
fisttpl
mov
xor
outsl
addb
popa
sahf
xchg
mov
enter
cld
rorl
inc
push
fwait
adc
andb
into
lahf
xchg
xchg
std
rol
in
lds
mov
dec
outsl
xchg
xchg
fnsave
pop
sbb
pop
mov
cs
push
mov
int3
cmp
sbb
sub
sbb
je
dec
adc
dec
in
add
fildl
mov
or
cmp
outsb
push
adc
subl
or
push
or
pop
repz
mov
sbb
jg
mov
jnp
stc
clc
dec
xchg
cs
das
jge
cmc
lahf
stos
cs
push
movsb
fcomps
adc
test
in
test
xor
scas
in
fcoml
mov
push
or
leave
and
sbb
cmpl
bound
lds
xor
dec
imul
stos
mov
je
js
jb
lcall
inc
jae
inc
repz
xchg
clc
jne
imul
testb
cmp
out
mov
cmp
mov
mov
das
sub
cmpsl
xor
loop
mov
mov
sahf
out
mov
jno
daa
pop
cmp
fiaddl
fiadds
mov
sub
ljmp
js
nop
mov
cmp
cmc
xchg
std
mov
xor
ss
jmp
inc
mov
test
sbb
fmul
push
push
pop
stc
pop
icebp
aam
dec
pop
movsb
ds
lahf
xor
and
repnz
and
jb
cmp
xchg
fstl
lock
inc
pop
popf
cld
int
clc
shll
scas
add
aaa
and
fildll
fdivs
add
and
inc
or
ljmp
lods
jmp
jle
xchg
adc
arpl
mov
pop
lods
cmp
ja
mov
testl
iret
mov
cs
dec
in
lahf
jge
cmp
sbb
push
fwait
lds
xlat
jns
push
pop
test
jmp
push
xor
sub
jg
ja
push
mov
fwait
hlt
std
cs
add
xchg
cmp
movsl
arpl
cwtl
imul
and
hlt
shrb
jns
push
lods
push
adc
pop
mov
ljmp
dec
imul
movsb
out
fisttpll
data16
paddb
lods
fdivrs
insl
sbb
adc
inc
je
flds
jae
jmp
pop
movb
sarb
cmp
popa
jge
sub
push
mov
push
jnp
pop
push
pop
push
xor
mov
cmpsl
es
rol
clc
mull
popf
pop
test
lods
xor
xlat
sub
xchg
ja
xchg
xchg
aaa
sbb
hlt
in
test
out
icebp
xchg
insl
pop
bound
jp
xchg
sbb
stc
fimull
dec
loopne
inc
cmp
rolb
dec
jp
ret
jle
arpl
cmpsb
shrb
negl
push
scas
lds
dec
and
mov
fcoms
test
pop
mov
inc
pop
pop
mov
rcrl
jns
push
mov
out
mov
out
inc
cmpsl
jge
not
mov
mov
and
jge
mov
movsl
and
test
inc
shl
cltd
cltd
jno
sbb
sub
int
loope
push
xlat
xor
int3
cli
xorl
jl
es
int3
das
add
or
and
es
push
aam
lods
inc
lods
scas
insb
mov
push
stc
lcall
add
cmp
mov
imul
fistpll
aaa
cmp
scas
ja
gs
pushf
imul
mov
add
cmp
mov
ljmp
fisubs
mov
pop
lret
dec
and
mov
mov
in
scas
and
imul
cltd
in
dec
mov
iret
into
mov
adc
test
arpl
mov
mov
xor
lock
push
mov
and
xor
xchg
les
pushf
pop
test
mov
out
outsb
and
cs
push
push
test
mov
cmp
sbb
sub
mov
roll
addr16
and
in
pusha
es
fistl
test
out
dec
pop
sbb
xchg
cwtl
push
pop
add
outsl
jae
jge
or
js
negl
jbe
xorl
lret
jp
jnp
ja
fdivrl
dec
lods
xchg
xor
add
scas
push
mov
out
ret
push
mov
fs
adc
mov
test
push
adc
or
jg
mov
fisttps
clc
mov
cwtl
cs
lret
cmp
xor
cmp
pop
xor
es
or
rclb
mov
cmp
sbb
mov
sub
fstpt
iret
aad
lods
xlat
push
push
dec
cpuid
sub
adc
mov
das
imull
inc
icebp
jge
outsb
cmpsl
sub
sub
insb
fwait
mov
mov
xor
jbe
shlb
enter
mov
pop
out
mov
lods
std
xor
or
or
mov
mov
lods
push
in
aad
pop
dec
mov
or
or
xor
test
into
jns
mov
fidivl
mov
mov
or
ret
fstpt
mov
push
dec
movsl
test
lds
push
xor
aam
rcrb
dec
mov
jns
and
mov
pop
sahf
xor
mov
inc
icebp
jbe
ss
mov
arpl
xor
roll
sbb
cld
push
in
mov
in
repz
push
push
and
pop
sar
fldenv
sbb
mov
in
mov
in
sahf
pop
mov
sahf
cltd
sarb
xchg
cmp
nop
pop
xchg
push
mov
jae
fwait
sbb
out
adc
rcr
dec
orl
lods
sbb
xchg
insl
push
jb
mov
jle
out
cmp
sub
mov
shll
push
sub
and
in
inc
or
stc
call
dec
jg
mov
cmpsl
jnp
or
subb
loope
in
insl
inc
xchg
cltd
int
pushf
jae
dec
repz
cmp
xchg
add
lea
xor
dec
push
sbb
or
mov
rclb
cmp
push
mov
and
rep
xchg
mov
xchg
int
xchg
pop
push
ret
nop
add
or
orb
inc
hlt
dec
pusha
icebp
cmpl
ja
leave
lahf
sub
cwtl
and
imul
lcall
fwait
dec
fwait
insb
adc
mov
cmp
cmpsl
mov
adc
popa
push
push
jnp
lds
jl
and
mov
notl
and
push
mov
aad
shr
fwait
adc
sub
inc
adc
mov
sbb
adc
mov
or
icebp
aaa
mov
std
cmc
adc
in
fdivrp
sub
mul
adcb
jl
add
ret
shll
adc
jecxz
add
add
xchg
adc
out
aaa
int
push
xchg
push
data16
xchg
pop
iret
jecxz
sti
and
and
mov
movsb
pop
sbb
into
test
push
dec
decb
mov
and
inc
and
int3
loopne
push
sub
xchg
or
adc
sbb
mov
dec
push
in
mov
or
adcb
out
mov
filds
jmp
xchg
insb
dec
dec
xchg
movsb
mov
div
or
xchg
dec
icebp
call
and
pop
mov
js
out
sbb
clc
jmp
pushf
neg
and
arpl
leave
test
jns
cmpsl
jae
push
sub
dec
fmuls
cmc
pop
sti
out
sbbl
mov
jb
jmp
ja
dec
out
xor
push
imul
ficompl
lds
sahf
xor
mov
cmp
sub
cli
pusha
sub
insb
imul
dec
fists
xchg
les
aad
mov
in
jmp
pop
cmp
iretw
push
dec
adc
int
add
sbb
call
inc
mov
cmp
mov
jmp
adc
repnz
xor
arpl
mov
ret
sub
cmp
adc
cli
mov
jge
lret
rorl
nop
int
daa
cmpsl
mov
lock
iret
lea
outsl
in
popa
dec
xchg
xlat
cmp
adc
in
and
add
jle
pusha
pop
es
push
daa
out
movsl
add
aaa
scas
xchg
mov
insl
adc
es
cltd
jmp
pop
fmuls
jo
lock
add
aam
mov
pop
mov
pop
or
sub
es
cmp
aam
lret
mov
mov
xchg
sbb
xchg
cmc
ret
adc
sbb
mov
test
bound
movsl
dec
push
int
xor
cs
xor
sbb
int3
in
sti
xor
push
jg
insl
les
stos
sbb
mov
jb
scas
inc
lahf
mov
rcrl
cmp
fistl
scas
nop
lea
push
addr16
jl
in
xor
lods
mov
lds
das
jp
mov
cs
fmull
mov
test
stos
outsl
repnz
aam
mov
outsb
ja
out
mov
stos
aad
pop
add
dec
and
push
sub
test
out
ret
mov
fstps
out
xchg
push
mov
ss
test
insl
mov
mov
pop
sti
hlt
es
es
sbb
xchg
sub
mov
sub
test
ljmp
andl
stos
hlt
jb
mov
jmp
inc
test
fmull
fbld
mov
adc
out
xchg
sbb
cli
cmp
pop
subl
fmuls
shrb
fincstp
xor
sub
mov
aad
xor
sbb
push
arpl
inc
mov
in
inc
adc
sbbl
sbb
jmp
push
ror
xor
xchg
sub
mov
mov
push
adc
add
fists
mov
mov
add
in
js
mov
jae
fwait
inc
add
fs
xor
push
shl
push
rcrl
cmpb
mulb
aas
pop
clc
insb
shll
cmp
jg
xchg
xchg
jno
std
ljmp
mov
outsl
bound
movsb
and
push
pushf
popa
ret
mov
jnp
jg
jnp
mov
inc
mov
xor
xor
std
jae
push
mov
in
lods
movsl
pop
mov
xchg
int3
jecxz
in
pop
nop
fistps
sub
cmp
add
inc
js
mov
mov
cmp
push
mov
rclb
sub
stos
or
cld
mov
loop
sbb
push
adc
adcl
push
and
cmp
cmp
sbb
inc
nop
dec
pop
rcrb
jecxz
rcll
dec
inc
or
stc
je
sub
mov
lcall
jns
jmp
cmp
pop
test
sbb
in
inc
xchg
mov
sub
enter
loop
xchg
iret
pop
and
inc
jecxz
call
jp
bound
mov
sbb
sbb
mov
nop
outsb
mov
cmpsl
xlat
sar
gs
leave
mov
shll
test
jecxz
enter
cmp
mov
into
mov
fs
push
adc
mov
rorb
std
and
vxorpd
adc
das
mov
fucomip
push
fwait
mov
imul
adc
adc
jecxz
ret
les
dec
inc
mov
push
into
cmp
fisubs
pop
imul
inc
jns
cmp
lds
out
push
pusha
lods
pop
xor
repz
xchg
aas
jnp
mov
in
les
roll
fwait
or
jo
fildl
or
jne
popf
jbe
fimuls
mov
frstor
cmp
lar
push
fldenv
out
into
stos
vsubsd
and
sub
mov
sti
adc
and
push
inc
pop
and
pop
lock
pop
addl
sub
out
jl
mov
jbe
add
nop
lret
stc
inc
out
cmpsb
xor
dec
shll
xor
cmpb
loop
mov
jae
push
sub
fnstenv
or
mov
into
lock
scas
xchg
sahf
sbb
stos
loope
push
jmp
push
add
cwtl
arpl
out
xor
push
sbb
dec
sub
sub
sahf
push
xchg
push
push
jp
xchg
pop
loopne
movsl
xor
lds
mov
les
sarl
xchg
cmc
inc
je
sub
jae
jno
ret
rsqrtps
ljmp
mov
mov
adc
mov
push
push
shll
or
sub
enter
adc
mov
jb
outsl
mov
gs
popf
sti
sbb
inc
aad
je
imul
and
outsl
frstor
jne
shlb
fwait
sahf
xchg
add
xor
sub
mov
jmp
and
pop
and
jge
mov
outsb
dec
ds
je
rorl
pop
xchg
insb
jne
aad
fsubrs
inc
out
dec
addr16
call
lahf
sub
add
inc
gs
call
cwtl
push
ds
test
cmpsl
fyl2xp1
push
addr16
clc
jmp
pusha
hlt
cltd
jne
mov
xchg
shlb
dec
imul
inc
add
add
inc
push
mov
fcoms
inc
das
pop
out
outsb
mov
dec
mov
inc
loope
aaa
or
lret
lock
icebp
or
cmp
dec
jnp
fcmovbe
in
pusha
lcall
dec
xchg
movsb
sub
sbb
dec
mov
jp
arpl
loope
adc
mov
jle
add
cmp
pop
pop
jb
sbb
into
mov
mov
fnstenv
rcr
sub
stos
iret
dec
in
mov
pop
popf
jg
pop
cltd
mov
loopne
imul
dec
mov
in
inc
sub
pop
cmpsl
mov
lock
inc
pop
mov
dec
and
jnp
mov
mov
mov
jo
jnp
pop
out
int
mov
push
aad
push
stc
sub
lcall
lret
mov
mov
mov
adc
xlat
insb
cmp
and
xchg
push
dec
xchg
push
xchg
mov
pop
cli
sbb
ja
inc
inc
mov
iret
test
in
leave
into
pop
repnz
mov
mov
adc
cmp
inc
dec
ret
push
std
add
push
mov
stos
insb
cltd
stos
jmp
rcll
inc
mov
pop
adc
mulb
out
out
mov
inc
cmpsb
mov
jg
dec
inc
jne
adc
mov
cmp
xor
lcall
cld
jmp
fisttpl
push
sbb
adc
push
popa
sub
inc
std
lods
adc
cli
and
bound
mov
mov
add
lcall
cli
into
inc
cmp
cmp
sbb
sub
dec
mov
sbb
dec
dec
lods
sbb
and
cmc
mov
sti
lahf
shll
xor
gs
loop,pn
sub
pop
xchg
hlt
adc
fcomps
sbb
mov
loopne
dec
or
mov
jns
stos
test
ja
pop
sub
mov
cltd
test
mov
ret
or
fiaddl
mov
stos
imul
aas
ffree
xlat
pushw
push
jae
mov
ja
inc
pop
aam
or
rcrb
sti
cmpsb
cmp
movsb
xlat
insl
jp
jo
inc
popa
insb
cld
mov
push
adc
ret
icebp
icebp
dec
jl
push
pop
push
and
lock
stc
dec
sar
in
sbb
loop
or
mov
jle
or
ja
out
xchg
jg
test
xlat
jae
jb
inc
and
enter
leave
stos
fcoms
fidivs
cmpsl
sbb
cld
cmp
data16
cli
mov
jne
xchg
pop
jo
js
shll
add
jle
inc
fildll
in
es
dec
mov
loope
adc
cmc
lock
add
jle
pop
ljmp
in
pop
and
test
repnz
popa
jp
call
notb
incl
mov
ret
jmp
mov
mov
movsb
push
das
pop
arpl
or
scas
jae
push
cmc
ljmp
mov
fadds
pop
mov
lods
jns
call
shl
outsl
popa
and
paddb
push
addr16
mov
dec
sahf
out
mov
mov
stos
fsub
mov
ficompl
fnstenv
push
cltd
mov
scas
ja
lret
out
int3
dec
sbb
sbb
mov
lds
mov
xchg
pop
mov
dec
pop
add
add
outsb
adcl
mov
inc
push
push
pop
ret
and
xchg
iret
sbb
nop
mov
sbbl
cmp
adc
int
sti
pop
scas
pop
testl
pop
sub
arpl
mov
mov
int3
insl
dec
repz
jle
addr16
xor
aad
inc
jg
mov
mov
sbb
xchg
stos
push
test
sub
cwtl
and
mov
outsb
imul
dec
mov
fs
fisubrs
and
movsb
adc
push
lock
jp
pop
push
jns
je
inc
add
dec
mov
mov
sub
adc
push
push
js
and
repz
inc
mov
pop
or
xor
fsubrl
dec
repz
mov
bound
mov
stc
or
je
addr16
push
outsb
jge
lock
pmullw
xor
sbb
aas
push
test
daa
add
mov
add
pop
cmp
data16
adc
rclb
sti
jmp
adc
mov
dec
ret
adc
inc
fstpt
jmp
je
push
arpl
pop
pop
pop
mov
arpl
in
in
sti
loopne
jl
mov
mov
jg
gs
inc
sub
fdivs
int
mov
or
int3
pop
push
out
repz
push
into
cmp
movsb
jp
sub
or
and
repz
sbbb
dec
pop
and
adc
hlt
xor
push
pop
inc
cltd
jbe
jl
xor
in
add
push
add
pop
xchg
push
lahf
cmpsb
outsb
add
or
test
xchg
jecxz
cmp
mov
pushf
or
jbe
cltd
insb
bound
dec
cli
int
sbb
ror
cmp
lock
cli
ja
stc
clc
xchg
lret
test
xor
lods
iret
jbe
dec
fstpt
into
fstpl
and
pop
jl
orl
and
je
sbb
sub
popa
shlb
test
or
adc
jno
inc
push
mov
je
inc
mov
gs
ss
push
xchg
pop
aad
nop
push
ja
call
mov
into
rcrb
je
mov
sub
sti
jge
scas
and
add
cmp
sub
loopne
scas
xchg
add
ror
cmp
adc
or
ret
stos
or
adc
cmc
pop
shrb
mov
cmp
or
or
mov
aam
loop
pop
adc
cmpsb
mov
xchg
loope
loope
sbb
inc
fildll
cmc
push
mov
les
push
dec
cmp
sub
push
add
or
test
add
xorb
xchg
push
pop
movlps
ds
faddl
inc
dec
das
jno
xchg
mov
scas
pop
enter
or
test
push
aas
jl
shrb
fs
mov
mov
scas
ret
xor
adc
fs
or
sbb
inc
mov
rolb
cmp
jmp
fwait
xchg
sub
lods
in
xchg
cmp
mov
push
sub
or
sbb
jb
outsl
mov
dec
mov
push
xchg
and
in
and
inc
dec
xchg
inc
sub
popf
je
dec
jbe
icebp
jmp
cli
test
push
lret
insb
stos
jns
das
mov
mov
out
fs
xor
aad
inc
jbe
sub
divl
adc
cs
pop
adc
sbb
mov
xor
xchg
sbb
lods
dec
scas
inc
addb
mov
push
in
mov
mov
mov
jno
lahf
mov
aaa
scas
jge
js
xor
dec
push
insb
out
imul
cmc
dec
pop
xchg
push
stos
push
sub
xor
repz
cld
outsb
scas
push
or
sub
cs
out
dec
outsb
jo
mov
fisubs
cmpsl
sub
int3
ret
subb
cmp
ret
pop
or
imulb
jbe
nop
scas
roll
lds
jno
lcall
rcrl
or
cmp
mov
arpl
jb
jne
sub
mov
jmp
mov
bound
mov
push
fcomp
in
ret
lea
clc
movq
imul
mov
add
sub
iret
in
push
out
ffree
shrl
jge
cmp
or
or
xor
xchg
fidivs
sbb
fidivs
cmp
repz
jle
into
repnz
cwtl
ds
loopne
mov
jae
push
lds
cmp
inc
in
and
testl
out
dec
xchg
mov
dec
cs
movsl
push
in
movsb
fldcw
jecxz
loop
lahf
repnz
dec
sbbl
xor
jae
in
pusha
out
mov
mov
add
mov
jae
jns
lea
sbb
rcrl
jp
shll
rorl
xor
daa
add
xchg
imul
xchg
lods
fs
xor
pop
adc
das
cmp
jae
dec
xchg
mov
cltd
adc
sub
rcl
loope
cmpb
mov
sub
add
in
add
andl
xchg
or
ljmp
fwait
jp
out
add
sarb
push
popf
roll
das
stc
fcompl
and
loope
call
lcall
jbe
pop
idiv
pop
aaa
ret
mov
cmc
xor
outsb
adc
add
lret
pop
mov
adc
lret
xchg
adc
push
arpl
push
jge
popf
aas
loope
pusha
jnp
outsb
adc
stc
popa
fdiv
add
aad
sbb
sti
rcrl
in
popf
sbb
lret
lcall
mov
sub
fidivrs
std
push
lods
cltd
int
test
lods
mov
pop
aaa
mov
and
sbb
cmp
aad
cld
ja
push
popa
loop
cwtl
sahf
fcomi
fsubs
push
add
out
inc
or
fbstp
ret
mov
xor
das
add
xchg
push
adc
cltd
jb
clc
in
adc
dec
sub
jnp
inc
shll
addl
dec
sbb
jnp
xor
arpl
mov
stos
insl
mov
sti
or
adc
aaa
test
inc
aad
adcb
xchg
cltd
lea
out
xchg
jp
sbb
dec
lock
popf
and
aam
shlb
sti
mov
and
adcb
xor
clc
xorb
pop
mov
add
repnz
aas
xchg
aam
or
pushf
mov
das
inc
dec
inc
popa
icebp
xorb
and
jecxz
imul
sahf
xor
aas
cmp
mov
mov
pop
cmp
cs
pushl
add
push
bound
leave
into
mov
cmp
enterw
inc
sub
inc
xor
pusha
iret
fistps
roll
inc
mov
out
mov
mov
cmp
in
aaa
jmp
and
leave
push
xchg
pusha
jbe
push
inc
sbb
cmpsl
mov
out
cmp
aam
ja
xchg
push
test
mov
stos
sbb
jg
fnstcw
out
insb
call
bound
inc
test
mov
ret
scas
sti
es
lahf
ftst
xchg
pusha
pop
sub
lock
les
mov
enter
lock
jo
push
mov
or
cmp
fld1
dec
mov
add
jmp
test
mov
xor
mov
hlt
sti
sbb
mov
mov
sub
insl
push
in
pop
lret
lret
movq
scas
push
pop
cmpsb
jnp
inc
mov
or
and
xor
test
dec
outsl
cmc
and
cld
aaa
push
push
or
mov
aas
daa
mov
dec
add
adc
adc
and
adc
aam
jp
loopne,pn
xchg
push
mov
add
pop
dec
call
jns
shrl
pop
sbb
icebp
test
xor
cli
cs
fwait
sub
data16
and
iret
adc
pop
loopne
mov
xchg
arpl
add
out
aad
shrl
inc
cmc
fcom
inc
loop
add
mov
sbb
sub
inc
int3
xor
fildl
xor
iret
adc
jg
or
cmp
and
ss
mov
cmp
pop
into
daa
fiaddl
je
into
mov
or
mov
in
dec
clc
mov
fwait
mov
mov
jb
sbb
cmpsl
or
mov
jmp
arpl
ficoml
lock
mov
or
dec
cmpsb
and
clc
push
xor
stos
cwtl
mov
jge
jnp
adc
jno
das
cli
xor
bound
sbb
jmp
push
dec
cld
mov
and
jo
push
sub
sbb
lret
lea
and
xor
test
mov
jbe
dec
mov
or
test
jnp
repnz
dec
mov
jbe
addb
cmp
sub
lds
dec
sbb
test
adc
arpl
dec
daa
or
pop
repz
push
pop
jno
shll
add
mov
push
xor
xorb
inc
dec
or
lret
repnz
mov
loope
mov
or
add
xchg
sbb
cwtl
mov
mov
dec
in
xchg
les
lret
jecxz
xor
or
push
sub
jnp
lds
inc
lcall
ret
bound
push
or
sbb
mov
fimuls
xor
lds
mov
repnz
xlat
les
jle
test
nop
inc
mov
fcoml
dec
xchg
rorl
addl
ret
pop
popf
push
push
jl
pop
mov
or
andb
repnz
loop
inc
mov
dec
pusha
cmp
stos
je
sub
imulb
sub
pop
lock
std
in
mov
jmp
ror
push
xor
xchg
lcall
test
nop
jl
shrb
mov
fsts
repnz
cmp
pop
dec
push
scas
lods
jns
mov
pop
add
inc
aaa
dec
std
and
mov
xchg
mov
mov
mov
stos
cmp
loope
dec
aaa
sbb
sahf
dec
xchg
rcll
or
rclb
stos
mov
jmp
push
mov
mov
mov
pop
imul
or
cmp
cmp
movsb
fisttps
out
add
nop
icebp
adc
mov
cmp
sbb
jbe
sbb
inc
sahf
jne
pmuludq
les
sub
dec
aad
rorb
insl
shlb
stc
add
lea
pop
addb
ljmp
add
pop
dec
xor
jl
xor
sub
mov
mov
add
jmp
cli
lret
ret
sti
push
mov
mov
push
lods
inc
pop
sub
add
insb
sub
pop
sahf
mov
mov
sub
xchg
shlb
das
jl
push
fbld
lahf
xor
enter
jl
inc
or
cwtl
std
insl
adc
imul
fbld
xor
cltd
cmp
test
arpl
xor
insl
aam
rcrl
in
cmc
sub
or
jmp
adc
insl
sub
push
pop
jp
cmp
xchg
filds
inc
jo
movsb
mov
or
inc
inc
stos
xchg
imul
sbb
ret
daa
add
cmc
pop
and
cmc
cmp
cmp
cltd
ret
pop
mov
sbb
xor
mov
pushl
arpl
xchg
fbstp
cwtl
mov
outsb
sub
aam
outsb
xor
xor
push
inc
rcr
lea
push
jle
mov
cli
add
push
dec
movsl
cmpsb
pop
xor
sbb
mov
pop
shll
xor
push
cmp
dec
inc
pop
adcb
in
int
xchg
inc
loopne
movswl
inc
xor
stos
lods
mov
bound
andb
jp
push
jbe
pop
inc
arpl
xchg
and
pop
and
xchg
sbb
fs
push
cltd
xchg
mov
inc
shlb
in
fwait
lret
inc
or
nop
mov
pop
dec
inc
insb
mov
rorl
leave
xchg
lcall
mov
mov
push
je
push
dec
push
js
cltd
testl
dec
add
adc
push
add
pop
cli
sbb
ficompl
and
adc
jl
gs
aam
ficoms
cmc
mov
sti
aad
aam
push
xchg
add
jns
jmp
out
sub
cli
ljmp
push
inc
jl
stos
sbb
dec
or
in
push
les
scas
jl
jmp
xchg
inc
xchg
mov
out
and
mov
add
aas
hlt
jo
into
loope
les
pop
test
and
xchg
cld
ljmp
int3
adc
in
mov
mov
adc
sysexit
and
movsb
cmpsb
pop
shrb
xchg
inc
inc
aam
push
adc
data16
xchg
pop
fldenv
fldenv
hlt
mov
pop
mov
jbe
fidivrs
add
fmuls
or
push
mov
push
sbb
fsub
movsl
inc
hlt
stos
rorb
pop
fwait
jae
daa
jo
jecxz
pop
repnz
lret
xchg
mov
sarl
jmp
imull
xchg
scas
push
xchg
and
xchg
sub
push
in
jo
add
lods
adc
pop
mov
insb
sbbb
pop
ljmp
ljmp
push
push
sub
sbb
push
shlb
adc
mov
and
pop
jle
dec
pop
sbb
xchg
add
sbb
pop
fcmovnb
loop
movsl
xchg
repz
scas
xchg
shll
lock
mov
mov
add
cltd
mov
pop
inc
inc
pop
lods
and
xor
add
adc
shrb
adcb
out
xlat
push
push
adc
rclb
mov
loopne
mov
push
xchg
inc
add
ljmp
inc
cmp
das
cmp
stc
rclb
mov
jmp
test
dec
or
test
outsb
sbb
cltd
mov
in
add
push
xorb
pop
ficomps
rclb
sub
mov
or
push
das
mov
push
testl
push
out
out
cmpsb
add
scas
mov
push
pop
lods
ret
pop
adc
or
ficoml
in
dec
pop
dec
aas
xor
xor
stos
push
inc
dec
dec
jle
sbb
or
mov
mov
cmp
mov
push
xor
into
movsl
dec
mov
addl
in
arpl
test
mov
jmp
or
les
or
dec
xor
orl
cmp
xor
xor
sti
mov
leave
addb
adc
imul
out
mov
sub
xor
xchg
jae
lahf
mov
xor
push
and
faddl
fs
mov
mov
sbb
aas
push
ds
cmp
cld
ss
mov
lcall
stc
mov
ljmp
rorb
sbb
jno
incl
adc
sti
ffreep
addr16
lea
xchg
movsl
aad
or
outsl
call
jbe
xor
cmp
fcoml
push
xchg
and
jbe
ljmp
loope
ja
loop
and
xor
and
data16
enter
mov
stc
outsb
insl
jp
mov
aad
shll
lods
lret
mov
cmp
xchg
sbb
movb
jg
jmp
cmp
or
sbb
icebp
outsl
lahf
pop
fldcw
sahf
das
stos
pop
mov
movl
adc
jnp
shl
sbb
pusha
adc
idivb
in
inc
adcl
divl
and
push
or
test
adc
ret
stos
lahf
decb
push
scas
dec
cmp
lock
rorb
fidivl
aaa
mov
loop
bound
mov
cmp
or
leave
outsl
jl
pcmpeqd
repnz
xchg
dec
and
test
inc
lock
mov
fists
push
movsl
pop
cli
out
dec
push
jle
sahf
stos
enter
inc
daa
mov
pop
or
adc
cwtl
cmp
inc
pop
sbb
sti
sti
jmp
adc
cmp
xor
inc
xchg
mov
das
fsubs
popf
xchg
ljmp
xor
pop
test
shrl
mov
inc
in
xor
in
or
js
cmpsb
movsb
mov
out
and
push
and
and
dec
repz
mov
sub
push
clc
sbb
mul
sub
mov
mov
movsl
lods
outsb
rcrb
mov
stos
xor
jbe
in
shlb
jmp
orl
out
pop
cmpsb
adc
shrb
cmp
add
insb
scas
jne
test
sbb
xor
cmp
pop
push
inc
or
cwtl
movsb
enter
jns
sarb
cmp
lds
add
pop
dec
lea
test
fiaddl
addr16
and
aad
and
fstp
push
das
sbb
pop
mov
test
jns
jbe
inc
dec
fnstenv
inc
add
js
pop
insl
fs
cli
add
sub
repnz
mov
stos
je
data16
nop
and
xor
push
rcll
xor
mov
mov
and
sar
pop
xchg
adc
xchg
pushf
ret
int3
mov
xchg
cwtl
test
cmp
inc
and
sahf
bound
lahf
push
xor
fwait
push
scas
sbb
sbb
or
stos
add
lret
xchg
pop
js
les
test
fldcw
and
cmpsb
fwait
sbb
int3
push
test
pop
fadd
push
and
mov
xor
xchg
cmp
push
bound
gs
insb
lds
inc
test
add
je
mov
mov
and
adc
test
cmp
daa
pop
clc
jg
imul
sub
push
scas
mov
mov
and
pop
fnsave
jnp
jns
mull
lods
in
push
adc
jo
jbe
dec
or
xchg
push
jnp
dec
outsb
outsb
inc
jno
sarb
sahf
sub
mov
cwtl
mov
cmp
ret
and
inc
fsubrl
lret
lea
enter
pop
cmp
mov
push
mov
fsub
pop
push
mov
jge
pop
inc
imul
push
imul
jmp
test
clc
jns
jp
lods
fwait
sbb
xchg
sbbb
stos
leave
daa
stc
sbb
test
jae
loope
shll
xchg
push
mov
cmc
fistps
outsb
xor
movsb
dec
mov
leave
and
inc
cltd
mov
repnz
inc
adc
push
xor
decl
call
mov
mov
aad
lods
push
hlt
push
xor
andl
mov
outsl
roll
push
scas
add
sub
cmp
out
mov
mov
dec
int3
adc
ss
or
lahf
sub
push
enter
loope
mov
push
incl
in
mov
jae
cmp
jle
or
mov
sbb
or
insl
dec
sbb
jns
int3
adc
inc
popf
rorl
sub
rorb
and
adc
mov
jmp
add
pop
xchg
mov
jle
lods
pop
xor
movsb
pop
dec
push
int3
sbbb
jnp
mov
sbb
inc
push
jne
sbb
scas
sub
dec
jno
sbbl
sbb
sti
jno
sbb
ljmp
and
fiadds
pop
and
aas
iret
pop
adc
pop
cmp
xchg
sbb
and
push
popa
lret
adc
leave
xchg
mov
xchg
scas
pop
sbbl
push
clc
push
stos
mov
dec
dec
add
or
inc
fwait
cmp
sbb
fpatan
enter
pop
nop
and
movsb
mov
fistpl
add
les
dec
mov
add
cmp
outsb
jge
xor
imul
push
test
add
stos
shr
insb
stc
ror
out
fs
push
cmc
cmp
repz
lods
sbb
leave
jle
cld
pop
pop
pop
xor
xor
push
js
pop
jns
leave
out
or
jno
cmovnp
ds
pop
cmp
insl
cltd
test
ss
emms
xchg
xor
mov
pop
add
movsb
pop
adc
outsb
stos
add
mov
xchg
sti
and
add
mov
rclb
test
outsl
das
push
sbb
sub
test
lret
mov
gs
mov
push
test
xchg
xchg
mov
mov
out
inc
pop
jge
fwait
mov
repnz
mov
pop
aas
xor
loopne
fcoms
loopne
fistpl
repz
dec
or
fwait
jge
or
stos
cltd
sub
cmp
fcomps
sbbb
xchg
xor
push
movsb
pop
push
leave
mov
adc
rorl
rolb
pop
and
insb
and
test
movsl
in
adc
pop
xchg
shr
out
repz
jb
xchg
aas
push
sahf
pushf
pop
nop
push
leave
xchg
and
inc
aas
cmp
das
sarl
nop
js
xorb
or
aam
jb
and
rorl
lock
xor
push
orl
xor
dec
js
mov
packsswb
push
or
out
cld
mov
adc
push
or
pop
outsb
outsl
adc
out
dec
lahf
mov
push
pop
pushf
pop
mov
lds
jno
aaa
xor
test
outsl
sbb
dec
std
daa
xorb
sahf
in
bound
sahf
fisttps
sbb
pop
pusha
sub
sti
mov
pop
cmc
inc
in
jo,pn
sarl
or
popf
ret
repz
movb
xchg
inc
sub
xor
push
fs
addb
inc
cmpb
repnz
in
or
mov
fcmove
dec
jecxz
add
out
fsubs
fisubrl
mov
mov
xor
inc
lcall
mov
leave
push
cmp
mov
out
ja
pop
fbld
test
fwait
jb
xor
loopne
es
lcall
outsl
int3
or
xchg
and
mov
mov
outsb
lock
inc
fildll
xor
jl
test
ljmp
mov
inc
and
lds
mov
insb
jae
call
rclb
mov
or
sub
movl
fwait
cli
andl
jecxz
xchg
call
enter
xor
andl
sub
push
lock
aaa
scas
jns
push
lea
push
add
push
adc
dec
jle
pop
popf
pop
fst
aad
repz
xchg
aas
or
mov
or
pop
out
mov
int
inc
dec
clc
mov
dec
outsl
cmpsb
cmpsl
int3
nop
cmp
xchg
mov
cli
in
or
xchg
pushf
dec
int
js
or
inc
push
xor
cmpsb
stos
mov
not
add
xchg
pop
push
test
cmp
pop
push
sub
push
xor
push
pop
pushf
push
cwtl
dec
and
push
xor
shrb
jo
bound
mov
adcb
leave
stos
mov
jg
dec
mov
sbb
in
lds
adc
xor
push
push
in
ret
inc
push
push
test
cwtl
stc
stc
and
sbb
dec
lcall
push
xorl
pop
dec
pushf
inc
and
dec
mov
push
nop
push
js
insl
xchg
loopne
sub
inc
inc
jp
push
sbb
repz
dec
mov
or
lahf
ret
mov
xchg
push
mov
or
jae
xchg
inc
mov
or
push
pop
and
jmp
mov
subb
fs
and
pop
sti
adc
add
mov
add
sti
movsb
aas
xchg
out
mov
filds
jo
and
fdecstp
and
cs
dec
mov
mov
xchg
mov
testb
inc
jno
je
rclb
fildll
movsb
sbb
push
fists
push
gs
xor
sbb
and
push
sub
xchg
test
bound
xor
pop
imul
ja
pop
sbb
sbb
ret
ficompl
fwait
sysret
push
push
lea
adc
scas
xchg
cmp
movsb
cli
fdivrl
adc
add
push
std
push
enter
jnp
push
jmp
mov
inc
cmc
inc
push
pop
inc
lock
cmovno
sub
cmp
mov
xor
das
jecxz
lret
or
mov
pop
jge
jae
mov
insb
and
add
in
push
add
mov
movsb
ret
sbb
jns
jo
fld1
cmp
or
testb
shrl
push
push
mov
ljmp
aaa
movsl
pop
push
or
ror
out
cmp
adc
xor
into
push
sbb
lret
push
lahf
into
jne
mov
faddl
pushf
mov
je
in
xlat
aas
icebp
push
outsb
xor
into
lods
add
rclb
add
loope
xchg
into
mov
inc
pop
dec
in
pop
icebp
fisubrl
jns
iret
mov
mov
pop
cmpsl
cld
push
mov
sub
sbb
push
mov
jbe
cmpsb
arpl
lret
and
dec
and
popf
and
mov
cmp
xchg
cmpsb
and
jb
mul
stos
ljmp
jo
cmp
stc
pop
dec
xchg
sbbl
adc
adc
ret
mov
stos
fmul
mov
repnz
sub
mov
in
rorb
and
push
movsb
push
out
pop
dec
int3
mov
mov
mov
pop
push
add
out
inc
sub
jp
int3
pop
dec
cmp
in
and
pop
testb
outsl
adc
test
lock
add
pusha
stc
repnz
inc
icebp
leave
adc
std
dec
stos
data16
sbb
cmc
fistps
dec
add
push
lret
enter
mov
test
int
add
lahf
and
xchg
mov
sbb
jle
ja
jnp
in
jecxz
cmpsl
sbb
aad
jmp
pusha
outsb
add
mov
jecxz
test
push
pop
xor
pop
sbb
jmp
sbb
ds
mov
jne
inc
mov
aam
je
test
xchg
bound
mov
pop
lock
push
jbe
inc
mov
int3
xor
outsb
xor
adc
shll
pusha
aam
adc
add
in
mov
push
sub
cmpl
push
push
jmp
idiv
insb
and
incl
mov
ret
mov
sbb
or
mov
or
mov
ja
adc
pushf
jecxz
fucomp
mov
add
insl
push
mov
inc
out
inc
out
ret
int
enter
jae
call
in
add
stos
shrl
mov
mov
aas
ret
sbb
jae
shll
xor
push
sahf
cld
fisubl
in
jl
xor
add
cmpsl
iret
pop
xor
sbb
xchg
loopne
dec
sahf
dec
fwait
pusha
adc
mov
lcall
or
cmpsb
lahf
push
cwtl
mov
scas
xchg
icebp
inc
sbb
xchg
xchg
cltd
jnp
adc
push
push
push
mov
out
gs
movsb
xchg
push
jb
ret
jge
ficompl
cmp
push
pusha
test
mov
lea
jmp
jecxz
and
iret
leave
dec
cmp
rclb
test
movsb
or
sub
xchg
ss
pop
push
push
test
adc
jge
sbb
ret
mov
movsb
xchg
dec
bound
jo
adc
mov
rorl
test
cltd
insb
mov
xchg
or
cmpsl
rclb
ja
dec
push
mov
and
or
cld
fisubrs
rol
scas
pop
mov
inc
insl
enter
movsl
xor
sub
pop
mov
lret
push
and
cmpb
jl
std
jne
aad
aad
adc
and
adc
dec
mov
xor
jecxz
int
or
bound
mov
mov
cmp
in
pop
sbb
mov
sub
rcrl
jnp
dec
or
repnz
inc
pusha
lds
addr16
into
ss
sbb
sbb
xchg
cmp
out
push
test
xchg
mov
push
into
pop
pop
xchg
pusha
mov
cmpl
mov
insl
xchg
clc
ds
xchg
imul
addr16
push
fcomps
fidivs
push
dec
test
push
add
lcall
pop
or
or
or
stos
or
jg
push
push
fidivrs
and
dec
jmp
mov
push
mov
popa
dec
rclb
push
std
dec
jg
pop
popf
mov
enter
mov
add
sbb
pop
sub
iret
xlat
movl
mov
jecxz
fcom
lds
xchg
mov
inc
mov
adc
fdivr
adcl
lcall
repnz
mov
xor
jecxz
insl
jle
xor
pusha
fstl
out
xor
enter
in
xorb
mov
pop
jnp
xchg
call
int3
scas
push
or
or
xchg
pop
inc
mov
xchg
bound
dec
cld
mov
cs
xor
sbbl
mov
jmp
cmpsl
add
push
sbb
out
out
insb
add
or
mov
sub
push
sahf
pushf
das
push
popa
sti
pop
push
aaa
jmp
andb
jne
or
gs
jl
push
fcmovnb
mov
push
jle
aam
lret
inc
push
mov
mov
arpl
out
sahf
mov
jmp
sbb
int
loopne
xlat
pop
lods
out
rcll
jmp
cltd
push
movsb
fisttpl
test
xor
sbb
xchg
inc
mov
enter
jno
out
fcoml
push
lahf
popf
add
mov
cmp
inc
or
push
shrb
fcmovnu
mov
je
and
push
in
imul
aaa
push
pop
pushf
int
outsl
sbb
pop
xchg
add
mov
cmp
jge
dec
mov
pop
stc
cmp
jb
add
pushf
out
mov
fsubr
pop
lods
sub
inc
sarl
shrl
and
ljmp
testl
jno
ret
dec
aaa
and
add
fs
popl
notb
test
mov
hlt
aaa
adc
orl
mov
xor
push
xchg
andb
insb
adc
sub
or
stc
cltd
sbb
loope
pop
std
push
lea
pop
jne
je
sub
dec
mov
rcrb
xlat
sub
cmp
jge
push
iret
inc
addr16
sbb
jns
aaa
xor
mov
cmpsl
mov
mov
movsl
push
sub
pop
adc
dec
sub
dec
scas
and
mov
xlat
xchg
xchg
pop
shll
add
rorl
ret
push
subb
insb
stos
loope
jns
push
inc
mov
cld
pop
pop
jb
push
stos
dec
lds
add
pop
gs
clc
hlt
xchg
sbb
insl
fisubrs
push
sbb
subb
dec
dec
jbe
stos
test
dec
call
fisttpl
lods
repnz
popa
mov
in
pop
pop
idivb
push
mov
sub
mov
pop
notl
cltd
cmpsb
xchg
sbb
insl
shl
hlt
mov
xchg
or
pop
dec
pop
jne
add
fdivrl
push
add
cmp
sarl
into
pop
mov
fcmovne
add
scas
scas
xchg
idiv
pushf
cli
xor
ret
stos
outsb
cmp
out
in
cwtl
hlt
ljmp
out
das
push
test
inc
sbb
ljmp
pop
or
mov
loopne
adc
stc
and
gs
jae
push
dec
fildl
or
adc
push
divl
lock
aaa
mov
adc
add
inc
jno
mov
xchg
mov
fldpi
jne
jp
cmpsl
mov
push
or
inc
xchg
loopne
pop
arpl
pushf
and
rolb
popf
mov
pop
jae
outsl
xor
xchg
das
jp
repnz
or
mov
push
bound
mov
gs
xorl
stos
das
dec
adc
popa
mov
push
xor
nop
jmp
push
popf
enter
pop
pop
and
je
mov
dec
inc
cmp
sub
xor
sub
mov
dec
subl
adc
xchg
addr16
nop
pop
scas
add
cmpsl
mov
dec
roll
pusha
mov
mov
inc
xchg
mov
sub
loopne
aad
xchg
enter
fsubs
imul
bound
fiaddl
xchg
add
mov
dec
sub
fnstcw
imul
pusha
or
nop
clc
ret
shll
and
push
mov
inc
sub
ljmp
mov
push
push
mov
shlb
xchg
push
int3
xor
pusha
ljmp
lock
fsubrs
add
pop
dec
outsl
jmp
push
cltd
and
cmp
scas
mov
mov
test
je
mov
aam
mov
push
mov
cmp
add
cwtl
and
and
xor
xchg
cmpsb
dec
lea
inc
arpl
pop
xor
cmp
std
pusha
daa
lods
push
mov
xchg
test
test
popf
lds
clc
adc
lcall
cld
xchg
int
mov
cltd
push
xor
std
xchg
xor
test
or
lea
mov
out
rclb
xlat
scas
inc
shrb
jg
das
std
pop
push
or
outsl
mov
or
sub
fcmovne
add
rcll
jl
addb
sub
dec
outsl
test
cmp
mov
in
inc
cmpsl
inc
pop
and
cmp
mov
popa
cld
cwtl
rorl
cmp
sub
pop
movsb
jb
dec
clc
or
inc
lret
adc
jns
cli
lock
fisubl
xchg
popa
push
jnp
popf
inc
cmp
xchg
cmp
xchg
add
out
clc
test
mul
sub
stc
stos
push
cmp
inc
xchg
mov
cltd
add
hlt
cmpb
jns
and
inc
cmpb
mov
cmp
dec
idivb
pop
repz
pop
inc
ss
and
shlb
int
sub
fadd
aaa
imul
icebp
test
sbb
adc
outsb
aad
cli
jle
out
xchg
inc
xor
push
cltd
xchg
jmp
pop
cmp
pop
cs
mov
lret
push
dec
mov
pop
mov
mov
lods
sub
xchg
inc
psllw
inc
repz
inc
dec
lea
sbb
push
insl
inc
or
cmp
and
mov
add
and
push
inc
shlb
mov
xor
dec
inc
push
scas
outsl
jg
outsl
ret
cmp
add
mov
push
and
out
arpl
lods
xorb
extrq
jns
inc
cld
pop
add
jmp
xchg
or
jmp
cmp
movsl
mov
jge
xor
jle
mov
roll
mov
cmc
pushf
les
pop
imul
or
fsubrs
fucomi
lods
push
in
push
push
jge
scas
xor
and
shrb
stos
insb
or
ret
loope
sbb
out
gs
push
dec
les
mov
mov
sahf
adc
jnp
jno
push
test
jg
movl
add
mov
jo
inc
shll
add
call
and
stc
popf
scas
push
cmc
mov
std
mov
mov
jnp
je
push
adc
aad
lods
movsl
out
les
sub
lahf
dec
scas
mov
imul
mov
sub
and
lcall
ret
xchg
lcall
aaa
enter
rorb
xchg
mov
stos
in
pop
outsb
push
mov
inc
push
and
or
je
or
jmp
fsubrs
or
mov
jns
jecxz
lret
push
popf
orl
push
ds
cmp
cmp
shlb
lret
ret
in
ficoml
repnz
das
mov
cmp
sahf
sbb
pop
dec
add
arpl
push
cwtl
and
test
jnp
std
in
movb
mov
cmpsl
xchg
and
fxtract
xchg
sbb
and
adc
in
rorb
inc
fsubl
mov
sti
add
fcmovnb
aam
enter
mov
adc
sbb
aas
pop
push
xchg
add
int3
pop
daa
mov
or
fsts
aam
ret
jae
fiaddl
cwtl
cmpsb
negl
cld
xor
push
or
imul
xlat
xchg
push
jno
fwait
std
jl
jge
lahf
gs
mov
ret
fst
mov
pop
jl
xchg
sub
sbb
xchg
stos
sub
les
ss
inc
dec
lret
arpl
repnz
jmp
dec
or
dec
cmp
in
dec
jecxz
fs
andl
in
ss
in
rolb
push
xchg
out
enter
insb
ja
dec
sbb
aad
jmp
test
aaa
adc
xchg
adc
mov
adc
aam
out
loope
inc
cwtl
inc
jl
test
mov
rolb
mov
xchg
incl
dec
test
das
mov
xchg
sub
xor
and
adc
and
push
ljmp
cmp
hlt
inc
test
fwait
loop
add
sub
adc
ret
test
mov
dec
loope
inc
ss
mov
loope
into
mov
idivl
call
sbb
jecxz
data16
test
push
jmp
mov
popf
mov
add
inc
clc
ret
fisttps
mov
insb
stos
pop
xchg
arpl
or
je
adc
or
roll
and
imul
sbb
adc
xchg
jne
lret
outsl
jb
scas
ds
out
cmp
pop
sub
scas
adc
fstpl
clc
mov
aaa
and
push
or
pmaxsw
das
loopne
movsb
sub
pop
iret
insl
fs
sub
mov
xor
pop
imul
je
sti
daa
lods
inc
das
pop
test
test
mov
pop
xchg
idivl
xor
xchg
inc
in
ficomps
mov
test
fsubrs
or
jno
rcrb
stc
mov
aam
stc
lahf
pop
cmp
ljmp
sar
aam
push
movsl
push
cmp
push
pop
adc
ror
ror
pusha
xchg
jl
aaa
js
je
movsb
push
xor
sbb
or
lcall
or
daa
sub
sub
push
cmova
shrb
out
shrl
notb
inc
cltd
and
jno
rcrl
test
mov
push
les
inc
push
pop
jmp
jb
scas
sarb
or
jbe
ret
add
inc
inc
int
mov
out
lahf
dec
sub
mov
pop
imul
mov
addr16
in
jge
cwtl
out
xor
mov
int
mov
xchg
iret
mov
stc
jg
repnz
testb
mov
test
push
clc
rol
ret
pop
std
lahf
sti
xchg
pop
push
ror
aam
hlt
hlt
cmp
jno
ss
imul
xchg
mov
scas
cmc
insb
out
fnstenv
cld
mov
cmpsl
or
outsb
int
xchg
jg
and
dec
arpl
push
push
jl
inc
mov
cld
out
xor
lock
dec
dec
lret
and
lret
mov
jae
inc
lret
inc
sahf
ret
imull
fwait
iret
inc
pop
ss
mov
cmc
pusha
loope
sbb
push
cs
mov
int3
push
stc
insl
in
cmpsb
lods
xchg
dec
pop
push
sub
sub
push
and
fs
cli
es
vmwrite
add
popa
adc
lcall
sbb
sbb
sbb
cmp
adc
inc
and
dec
dec
test
jl
cmp
push
insl
aas
mov
mov
cwtl
jae
testl
lret
jp
out
mov
mov
inc
and
sbb
push
xchg
jmp
mov
adc
sbb
fstl
xchg
imul
mov
aaa
adc
pop
pop
inc
sbb
xchg
mov
add
jnp
data16
mov
mov
clc
aad
fnstsw
pop
or
ror
adc
xchg
dec
adc
adc
lods
fcoml
sub
int3
lret
out
xchg
int
stos
cmpsl
lcall
sub
jge
mov
es
xchg
mov
adc
neg
xchg
mov
sti
xor
adc
adc
addr16
je
and
inc
pop
xor
and
jecxz
mov
mov
cld
ret
fidivs
sti
imul
cltd
popa
sbb
sbb
fsubrs
jo
mov
xchg
push
test
in
and
insl
fisttps
ss
dec
hlt
aas
xchg
shrb
out
push
fistpl
jno
lea
adc
mov
and
xchg
jle
fcmovb
xlat
scas
dec
push
add
mov
lea
mov
jns
mov
dec
cmpsl
je
mov
add
jle
sbb
push
test
jae
les
mov
lods
push
mov
adc
mov
mov
pop
push
pop
dec
jle
mov
fdivs
sti
xor
mov
xor
cmp
psubusb
mov
push
or
inc
push
and
scas
cld
out
adc
adc
ret
mov
or
and
incl
jb
adc
pushf
data16
cmp
and
adc
cmp
mov
fistpll
or
mov
aad
imull
out
xchg
movsb
xchg
xchg
pushf
fisttpll
xchg
fiadds
int
lods
popf
shrb
notl
jbe
sub
push
dec
push
cmpsl
push
insb
scas
into
fxch
cmp
xor
mov
adc
mov
std
jbe
test
xchg
dec
arpl
ja,pt
mulb
mov
push
aad
xor
add
pop
addr16
mov
pop
shlb
cmp
iret
push
lds
in
aaa
and
push
mul
adc
inc
add
mov
int3
xchg
hlt
call
pop
push
iret
mov
mov
pop
ja
stos
xchg
mov
push
scas
lds
int3
notl
pushf
divl
out
dec
pop
mov
mov
cmp
push
shll
dec
and
add
mov
xor
jle
ja
aaa
xchg
fwait
mov
movsl
insl
aam
push
je
test
cltd
gs
or
mov
out
pop
pushf
push
xchg
jmp
in
test
jp
mov
and
ds
push
mov
gs
and
mov
cmpsb
mov
mov
cmpb
jno
mov
dec
loopne
xchg
xor
mov
testl
ret
or
loop
fidivs
scas
sbb
movsl
data16
dec
lret
ret
mov
adc
cmp
jge
inc
movsb
xor
data16
jb
out
outsb
stc
push
sti
pop
pusha
call
xchg
dec
fucomip
xor
jg
or
dec
imul
fstps
fdivrl
mov
push
adc
xor
imul
mov
cmpsb
je
push
xchg
test
sbb
cmpsl
jge
jbe
in
sbb
daa
push
add
push
pop
gs
hlt
insb
sub
pop
and
js
sbb
push
fldenv
sbb
xchg
add
mov
mov
pminsw
xor
lret
mov
lods
test
aaa
test
mov
loop
sarb
sub
ret
movsl
jmp
adc
addr16
jnp
cmpb
loopne
sub
or
mov
xchg
mov
jns
into
aam
mov
and
test
rorl
add
cld
aas
dec
or
cwtl
std
mov
xchg
aas
mov
pop
cwtl
lahf
lea
insl
pop
mov
xor
fstpl
cmpsb
mov
imul
ss
pop
pop
in
test
hlt
push
push
out
cli
das
inc
pusha
andb
arpl
push
dec
pop
inc
sub
inc
mov
push
mulb
int
pop
inc
dec
jno
xor
or
sub
xchg
daa
mov
xor
jno
xor
pop
cmpsl
or
or
mov
push
xchg
jp
in
cmpsb
cltd
pop
test
outsb
into
jne
test
sti
xchg
mov
int
mov
jns
sbb
rcll
mov
fs
test
sarb
mov
shlb
addr16
push
and
push
data16
ds
lds
mov
mov
pop
loopne
inc
shll
jmp
mov
pushf
push
cmpsb
add
fdivp
adc
fstp
jns
mov
push
aaa
cli
xchg
pop
cmp
in
pop
pop
cmp
dec
xlat
imul
pop
mov
dec
sbb
popf
mov
mov
out
push
xchg
addr16
repz
dec
rol
pop
lret
push
inc
adc
sub
xchg
xchg
sbb
lock
les
outsl
inc
pop
jno
cmp
cmp
lods
mov
xchg
sbb
lea
aad
lods
or
cmpsl
and
dec
fs
ss
adc
pop
xchg
push
dec
pop
imul
jle
adc
inc
sub
cmp
dec
xchg
je
cmp
jecxz
lret
xchg
cmp
ss
push
mov
pop
or
mov
add
xorb
adc
lea
pop
xlat
fwait
outsl
push
into
inc
les
and
push
adc
test
dec
inc
and
int3
int3
popf
xchg
mov
cmc
test
imul
mov
mov
push
xor
xor
xchg
add
sub
push
ljmp
pop
dec
mov
jbe,pn
dec
orb
jp
mul
insl
add
lret
sub
into
arpl
dec
rorb
in
lods
xchg
lods
mov
test
stos
and
decl
testl
add
divl
jmp
xchg
mov
bound
xchg
push
pop
mov
sbb
frstor
ficompl
inc
and
and
mov
add
scas
xchg
inc
mov
cmpsl
mov
aas
cwtl
sbbb
popf
clc
inc
or
xor
inc
or
fs
ds
ficoms
jae
pushf
ljmp
test
mov
out
cmp
sbb
es
mov
insb
xchg
inc
cs
mov
jno
lahf
js
xchg
lret
into
sbb
stos
and
cmp
fistl
jo
add
add
or
stos
in
xor
sub
jns
shrb
mov
test
sahf
add
and
pop
stos
leave
mov
pusha
cmc
popf
es
jle
repnz
ss
push
les
push
scas
push
push
jl
in
leave
mov
mov
popa
inc
loope
sti
xor
xchg
mov
es
adc
cwtl
push
pop
or
ret
mov
les
rcrl
push
movsl
pop
cmp
sub
fchs
mov
pop
add
add
xor
loop
add
fildll
nop
mov
mov
push
inc
jmp
in
sbb
sub
jno
jno
inc
push
xor
add
repnz
xor
and
xorl
pop
scas
rcr
stos
ss
std
arpl
jnp
jp
repz
out
add
cs
outsb
sti
jmp
add
popw
pop
mov
sub
fisubrs
pushf
in
inc
ret
out
pop
call
jl
mov
in
jmp
cs
sbb
cld
into
dec
inc
mov
hlt
out
ds
imul
mov
push
mov
add
jg
fucomip
mov
popf
cmpsl
fsubrs
fxch
lods
cmpsb
notl
fdiv
xor
shrb
repnz
ret
lret
jmp
xchg
sbb
mov
jo
push
repnz
inc
xchg
mov
daa
stc
pop
insl
orb
shlb
inc
test
jp
inc
xchg
jbe
cmovne
mov
inc
cmovle
out
icebp
rcrl
lods
dec
or
fwait
call
and
aaa
xchg
in
jo
outsb
mov
das
test
pop
pop
jo
dec
repnz
mov
jae
sub
sbb
int3
loope
fbstp
dec
cmp
sub
pop
insl
es
adc
xlat
push
push
imul
test
ret
xor
addb
mov
sbb
inc
xchg
cmovns
out
loop
ret
sub
out
fnstenv
and
movsl
add
cmp
ss
mov
or
fucom
ror
icebp
and
add
xor
movsb
jg
insb
outsl
xchg
stos
hlt
test
cmp
loop
nop
and
pop
bnd
pop
addr16
movsl
shlb
sahf
and
nop
dec
mov
mov
push
fadd
add
push
add
jae
and
xor
push
loope
cld
jo
push
sbbb
ret
sbb
xchg
test
inc
or
into
pop
push
inc
cmc
push
in
xorl
lods
sub
jne
icebp
arpl
int
ja
push
fldcw
jno
test
jno
xor
jno
outsl
inc
adc
cld
idivb
jnp
add
sub
pop
nop
test
pop
cwtl
test
cmp
or
pop
in
mov
cmc
inc
dec
dec
cmp
int3
adc
jmp
push
adc
adc
adc
jae
aam
push
call
xor
cmp
loopne
outsl
dec
sub
fs
arpl
pushl
arpl
test
mov
push
cwtl
enter
gs
xor
sub
sub
adc
jmp
subb
push
shll
adc
outsl
sbb
push
push
std
adc
lret
xchg
stc
js
and
dec
jp
add
cwtl
dec
mov
dec
inc
mov
sarl
cmp
enter
add
dec
adcb
sub
mov
stc
daa
nop
push
nop
add
gs
and
mov
xor
push
out
mov
add
movsb
mov
shll
lahf
adc
fsubl
jg
dec
or
or
inc
test
mov
jno
test
mov
add
addl
sbb
pusha
xchg
sbbl
test
dec
sbb
clc
jmp
andl
hlt
insb
test
fimuls
push
xor
pop
sti
mov
shll
push
push
lods
phsubsw
imul
xchg
lcall
xor
pushf
mov
xchg
dec
cmp
sbb
jge
into
lahf
stos
xchg
insl
filds
lcall
shl
out
pop
addr16
cmp
es
xchg
jmp
inc
lds
sub
cmp
mov
pop
add
mov
cmp
insb
ss
jecxz
cwtl
scas
sub
mov
pushf
adc
inc
sbb
cmc
fs
push
es
jbe
push
daa
jl
data16
cmp
sub
xchg
adc
aas
or
aas
je
dec
pop
cmp
out
mov
daa
in
cmp
loope
cld
insl
outsl
stos
sub
test
dec
test
mov
dec
and
lods
and
inc
fldenv
mov
clc
push
inc
sar
popf
repnz
ja
mov
and
bound
mov
icebp
out
lret
repnz
clc
inc
xlat
xor
cmpsb
fxch
lock
mov
int3
test
pop
int
push
jg
inc
sbb
pop
xor
std
sti
fidivs
ret
jo
popa
fwait
push
int3
add
mov
in
icebp
js
into
out
adc
sbb
out
mov
dec
out
push
repz
mov
jmp
sub
cmp
mov
arpl
push
xchg
scas
ljmp
mov
aas
and
and
rclb
pop
cmp
pop
inc
jne
mov
xor
mov
jmp
lods
mov
xchg
scas
loope
cld
cli
jp
mov
xchg
mov
addl
bound
sbb
insl
enter
pop
jmp
adc
add
pop
add
test
inc
aas
mov
arpl
xor
xlat
add
inc
cmp
mov
add
xor
mov
es
out
fs
cltd
dec
mov
or
or
pop
push
pop
insb
xlat
hlt
stos
in
and
inc
mov
jnp
cmp
add
cmp
cmpb
pop
nop
lret
mov
inc
xlat
mov
mov
addl
lret
xor
jecxz
ljmp
sbb
adc
fwait
daa
xor
add
and
into
push
cld
loope
stos
dec
pop
cmpsb
push
or
ja
mov
leave
jo
rorb
jne
mov
fistl
dec
mov
mov
fdivs
and
iret
ds
orl
arpl
loopne
or
addr16
dec
pop
outsb
xorb
test
out
add
cs
add
xchg
test
pop
mov
mov
cmp
inc
jle
sbb
jno
mov
xchg
push
add
xchg
cli
int
xor
push
xchg
aam
xor
adc
neg
inc
pop
es
xchg
ret
xorb
xchg
push
push
mov
je
mov
test
lret
sbb
mov
movsl
dec
xor
xor
repnz
lahf
and
jnp
incl
lods
and
dec
imul
arpl
sarl
push
inc
adc
or
iret
loopne
mov
xchg
push
test
mov
repz
ret
xchg
sbb
cmpsl
push
or
shl
mov
mov
mov
mov
stos
mov
add
dec
inc
xchg
lods
fmulp
inc
aam
repz
cmpl
out
xchg
clc
int3
jp
jmp
out
inc
call
sti
mov
pusha
sbb
pop
insb
sbb
and
ja
rorl
xchg
mov
enter
cltd
stos
rcrl
mov
mov
lods
pop
rcl
cmp
dec
dec
fistps
xor
mov
push
cmp
push
in
sub
gs
imul
shlb
mov
xor
adc
movsl
ds
mov
jns
adc
in
and
lcall
jnp
lret
xchg
push
je
loope
movsl
or
mov
icebp
jmp
mov
stos
aaa
scas
pop
ss
aas
stos
andb
push
mov
and
add
enter
adc
imul
es
popa
and
sub
out
mov
xor
cmpl
dec
mov
add
std
insl
dec
mov
test
ret
cmp
cld
push
pop
in
pop
into
sbb
test
pop
pop
cmpsl
xor
out
cmp
cmp
dec
insl
leave
leave
or
lahf
push
mov
dec
or
push
hlt
aaa
pop
sbb
push
rol
out
mov
mov
sbb
nop
xor
or
push
ljmp
in
sbb
mov
fcoml
jno
sub
outsb
xchg
adc
mov
xchg
sub
idivb
inc
int3
sar
mov
ret
or
out
cmp
ljmp
ljmp
in
insb
ret
adcb
mov
or
sbb
dec
pop
int3
sbb
mov
lret
adc
adc
and
out
jl
in
js
jo
out
xor
adc
cmpsb
or
dec
inc
jno
adc
shrb
jg
shrl
loopne
jge
jae
arpl
jae
ljmp
xchg
jmp
aad
mov
mov
test
movsb
jge
mov
and
hlt
cmp
ljmp
mov
insb
subb
loope
push
subb
pop
sub
subl
sub
xor
data16
pusha
out
inc
std
gs
int
jae
jo
dec
or
daa
aad
add
std
ds
ss
add
test
xor
add
das
scas
or
and
movups
in
adc
ror
push
add
clc
mov
and
inc
ljmp
pop
addr16
jo
daa
lds
fcoml
aaa
sbb
jns
mov
sbb
stc
inc
popa
lds
pop
js
jl
xor
addr16
cmpsl
ret
dec
mov
and
stos
jp
into
pop
js
sbbb
sub
cmpsb
or
gs
pop
xchg
cmp
sbb
imul
add
push
aaa
mov
jno
jmp
clc
xor
xor
fbld
xor
sub
scas
jo
inc
scas
cwtl
daa
aaa
icebp
mov
popa
lret
jno
xchg
enter
xor
mov
xchg
outsl
cltd
inc
pop
or
test
imul
popa
fists
or
cmp
popf
mov
xor
inc
inc
iret
add
jno
xchg
shr
adc
lock
inc
sub
lcall
popf
or
sbb
xchg
fildll
sti
sbb
push
sub
in
or
mov
pop
stos
jb
inc
cld
jmp
shr
sub
xor
push
wbinvd
std
mov
mov
xchg
pop
mov
cwtl
aam
ret
pop
push
popa
jae
fwait
or
loopne
scas
cwtl
cmpsb
add
cmp
lods
inc
movsl
inc
jmp
push
fwait
dec
or
adc
sbb
into
cli
test
stos
repnz
cmp
sti
xchg
xor
enter
int
aaa
pop
out
stos
lret
or
jo
mov
dec
cld
fadd
cmp
xchg
test
in
xchg
shr
lods
test
push
xchg
enter
mov
sub
jmp
shl
outsb
xor
pushf
daa
add
popa
mov
xchg
imul
pop
mov
ljmp
dec
lods
je
mov
into
ja
imul
sbb
outsl
sub
sar
mov
icebp
sbb
or
les
pop
and
lock
movsl
fs
lcall
scas
inc
test
gs
fisttps
jns
cli
cs
jecxz
mov
cs
inc
cwtl
inc
mov
inc
loop
in
cmp
pop
stos
das
in
adc
jle
rorb
aam
sub
jp
cmp
adc
jmp
push
xor
repz
clc
fidivl
rorb
inc
sti
rcrb
push
inc
pop
dec
mov
sti
notb
into
in
lcall
test
xorl
outsl
xorl
lcall
lcall
int3
fcomps
xor
push
scas
insl
lcall
add
movsl
rorl
rcl
pop
gs
and
push
les
sub
mov
fnstenv
sbb
xchg
ret
cli
movsb
arpl
lods
push
jne
scas
mov
dec
mov
repnz
pop
adc
daa
pushf
xchg
pop
test
jnp
addr16
ficoms
or
cmp
xor
pushf
movsb
xor
push
sub
xor
jo
mov
out
int
leave
in
cmc
imul
fistps
subl
and
loopne
sbb
dec
imul
add
mov
and
fiaddl
sub
loope
lods
cmp
lea
push
inc
addb
cmc
adc
insb
jno
insl
bound
cmpsl
cmp
leave
xchg
jbe
lret
inc
sub
int
adcb
outsb
mov
and
adc
das
popf
jg
adcl
sub
scas
mov
jge
xlat
mov
es
clc
scas
cmp
mov
fimull
out
sarl
in
pop
aas
adc
movsb
ljmp
pusha
fiaddl
pusha
xchg
sub
jo
inc
testb
out
not
add
xor
div
test
pop
mov
xchg
sbb
and
orb
adc
add
xchg
loope
dec
xchg
in
mov
cli
cli
xchg
repnz
jnp
and
daa
loope
xor
mov
out
ret
ss
mov
mov
and
iret
add
jecxz
and
mov
jb
das
jle
dec
lret
mov
push
outsb
push
jns
and
repnz
add
mov
dec
adc
and
mov
ds
stos
rcrb
es
aaa
cmc
dec
sub
inc
jae
or
inc
aas
fs
xchg
add
xchg
lock
rcrb
insl
test
push
leave
pop
sub
and
arpl
into
mov
mov
or
out
sub
and
lods
push
int
push
imul
jge
jo
mov
outsl
test
in
inc
push
cli
in
enter
mov
cmpsl
xchg
in
ljmp
scas
sub
imul
xchg
cmp
sub
jl
imul
add
xchg
push
int3
push
icebp
xchg
test
out
ja
stc
cmpsl
sub
push
push
inc
xchg
jle
jge
push
test
cmpsb
sti
pop
rcll
outsl
adc
xchg
rcr
and
xchg
test
test
cs
sbb
mov
sub
femms
xlat
jbe
push
adc
out
lahf
jecxz
shlb
and
pop
loop
mov
xor
mov
xor
cltd
test
xor
push
repnz
fsubrl
mov
lods
rolb
push
dec
or
pop
fidivs
hlt
xchg
idivb
xchg
adc
ss
adc
cltd
in
sbb
rolb
and
popf
xchg
sar
lea
int
idivb
test
mov
push
addr16
jae
int3
cs
movsb
jns
add
push
pop
xlat
sbb
jg
pop
xchg
adc
ja
mov
or
xchg
dec
xchg
cmpsb
idivl
mov
mov
les
aad
add
leave
or
scas
push
adc
jmp
pop
loop
and
add
pop
and
and
or
ds
ret
jnp
jmp
xchg
jb,pt
cmpsl
divb
mov
hlt
movsl
jl
and
mov
scas
insb
jecxz
in
jnp
in
mov
leave
out
and
aam
pop
or
jp
sbb
flds
mov
jg
mov
add
out
les
dec
gs
push
into
dec
mov
in
xchg
adc
xor
xor
cmp
lcall
inc
stc
sub
enter
cmpsb
and
lret
xchg
addr16
mov
popa
imul
push
stos
cwtl
inc
xor
add
ret
cmp
mov
pop
inc
push
add
es
sub
loop
pop
add
daa
fisubrl
pop
mov
and
mov
faddl
mov
lret
adcb
and
dec
scas
push
cs
pushf
lahf
pusha
dec
xor
aam
push
mov
fstps
imul
test
out
shll
shll
adc
testl
and
push
cs
xor
fwait
xchg
cmpb
and
loope
pop
inc
test
shll
cmp
xor
jl
leave
adc
lea
aaa
adc
inc
and
test
adc
mov
ja
dec
mov
sbbl
mov
xchg
or
xor
mov
sarl
pop
cmp
scas
call
push
std
xchg
jecxz
mov
mov
popf
cmp
cmp
int
loop
hlt
push
sbb
mov
mov
jnp
cmp
pop
dec
addr16
jmp
jnp
jae
bound
mov
stc
mov
bound
jb
pop
cld
imul
or
jno
fisttps
ljmp
popf
mov
push
xlat
fdivl
aam
in
adc
fdivr
pop
mov
adc
cmp
sahf
add
pop
mov
push
pop
adc
notl
cmp
lock
and
xchg
test
aaa
cmpsl
mov
jnp
addb
jle
mov
out
jmp
mov
test
pop
sbb
jg
xchg
loope
ds
pop
sti
mov
jnp
cmp
aaa
shlb
repnz
add
cli
push
jecxz
xchg
inc
push
bound
adc
subb
xor
or
sub
dec
pop
sbb
je
das
xchg
callw
in
mov
cmp
push
xlat
cmp
mov
xchg
sub
popf
mov
dec
mov
scas
divl
mov
mov
cmp
frstor
lcall
aas
aam
insb
dec
fbstp
pop
in
fldenv
enter
jne
daa
adc
insl
inc
pop
push
add
fistpll
rcrl
ja
loope
hlt
in
insl
or
inc
mov
xchg
dec
sti
dec
mov
stos
hlt
add
or
sbb
push
lret
test
cltd
sbb
push
test
outsb
icebp
and
daa
imul
add
or
mov
xchg
push
push
fmull
xchg
mov
xor
push
push
mov
lret
mov
shr
xchg
push
pop
cmp
pusha
in
mov
out
ss
sahf
and
dec
pop
leave
cmc
daa
add
std
pop
push
add
leave
dec
sbb
sbb
jmp
jno
sti
jae
lods
divl
stos
ljmp
pop
fs
xor
cltd
fcomps
or
or
repz
scas
adc
pop
or
jp
xchg
or
cltd
or
mov
pop
cli
adc
adc
fimuls
adc
stos
pop
push
fs
shlb
outsb
cwtl
inc
inc
add
dec
ljmp
mov
sbb
and
aas
test
mov
into
adc
mov
add
push
mov
pushf
push
cmp
rorl
push
les
push
into
mov
mov
sar
test
insb
mov
and
mov
or
xchg
stc
mov
jmp
js
xchg
push
dec
stos
mov
mov
flds
sub
test
in
fcompl
insb
pop
pop
fisttpl
popf
fcmove
jecxz
shll
add
and
inc
testb
fiadds
pop
adc
insl
xchg
clc
sub
leave
jbe
inc
mov
test
in
jle
scas
lahf
mov
pop
add
sub
loopne
mov
test
bound
push
movq
jo
inc
testb
jl
pop
test
ss
mov
push
mov
testl
or
xor
repnz
mov
aam
xchg
clc
bound
sahf
push
pushf
adc
pop
lcall
mov
push
push
or
lret
push
push
sbb
je
lret
aad
push
addr16
andl
aas
push
test
inc
sarb
jo
mov
jb
mov
adc
sti
pushf
add
clc
jmp
sahf
xor
and
mov
pushf
push
add
aad
loop
ljmp
iret
push
test
fmuls
movsl
xchg
cmpsl
daa
ficoml
inc
aas
push
adc
arpl
cmpl
and
ds
ficomps
xchg
lods
dec
jne
ret
test
inc
jae
ds
inc
imul
xchg
jmp
scas
les
in
jl
in
sub
sar
add
repz
dec
xor
jmp
cmpsl
xchg
or
jmp
fdivrs
rolb
sbb
jb
mov
sbb
sbb
rcrb
xchg
outsl
sub
popl
int
dec
sub
cwtl
xchg
dec
test
out
leave
leave
insl
add
fnstsw
icebp
fidivrl
sbb
adc
mov
idivl
mov
in
decl
inc
das
dec
fwait
int3
loopne
cmp
xchg
mov
sub
stos
add
xor
ss
inc
lods
xor
or
jecxz
subl
dec
iret
cld
das
movsl
jb
aas
repz
adc
pop
jb
mov
mov
xor
daa
jns
sti
inc
repz
scas
ds
push
lcall
call
and
repnz
push
lcall
cmp
jnp
pop
mov
xchg
mov
shrl
cmp
push
outsl
cld
movsb
jge
pop
jo
mov
fwait
cmpsb
pop
sbb
dec
cmp
cmp
dec
mov
nop
jg
mov
sbb
inc
nop
test
xlat
fimull
inc
addr16
jg
ds
dec
aas
cmp
rolb
adc
lds
mov
lret
movsl
inc
imul
sub
and
jbe
adc
pop
mov
scas
jo
cmpsl
stos
stos
int
adc
and
mov
inc
adc
ret
push
outsb
dec
lret
add
mov
pop
inc
ss
adc
xchg
mov
sub
fucom
fstpt
adc
pop
loopne
dec
add
and
lock
fisubl
lods
outsl
aas
xor
js
push
adc
push
fs
outsb
push
and
pop
shll
cli
gs
push
in
fidivrl
cmp
sub
shrb
popa
adc
cmp
arpl
inc
xor
and
add
dec
push
call
lock
jbe
dec
sub
and
notl
pop
and
add
test
push
insb
mov
mov
or
repz
mov
sar
xlat
xor
js
mov
inc
pop
js
pop
inc
pop
call
jg
jg
gs
imul
adc
push
add
loopne
or
testl
lea
jp,pn
mov
jp
out
mov
fwait
ljmp
xchg
xchg
pusha
xchg
fs
daa
xchg
sub
jbe
cmp
fcomip
add
sub
test
fwait
or
mov
mov
push
ret
shrb
inc
cmp
jae
cmp
out
jae
loop
lock
fsubl
adcb
lea
xor
adc
xchg
clc
or
or
xor
imul
dec
cmc
dec
xor
sbb
movsl
adcb
outsl
or
ss
adc
ret
sbb
rorl
sub
out
test
jb
jl
xchg
call
xchg
sub
sbb
dec
jmp
shr
mov
sub
aad
pop
push
xor
or
movsl
neg
dec
adc
push
dec
sbbl
dec
mov
pushf
inc
out
dec
inc
call
cmp
scas
mov
pop
popa
movsl
stc
lock
or
scas
adc
xchg
test
mov
nop
stos
popa
sti
mov
pop
or
test
sahf
adc
call
sbb
in
std
stc
push
addr16
mov
sahf
xchg
dec
les
xor
cmc
rcll
mov
rolb
sbb
mov
cmp
orl
mov
xchg
push
mov
mov
aaa
pop
pop
lods
pop
in
or
sbb
xor
mov
cli
push
mov
xchg
insl
jo
divl
xchg
sbbl
iret
test
in
or
jo
cltd
cmp
stos
adc
jp
ret
fbld
hlt
push
xchg
pop
lea
pop
mov
in
dec
mov
xor
push
sub
nop
test
jnp
repz
xchg
loopne
call
jns
jno
jae
pop
dec
and
mov
fs
insl
jbe
les
jae
lds
jmp
push
ret
push
js
add
popf
adcb
or
ds
xor
les
jg
xchg
mov
cs
mov
in
clc
cmpsl
mov
xor
sbb
fldenv
bound
cli
dec
ljmp
incl
mov
dec
call
xor
mov
data16
rorl
add
aas
adc
dec
xchg
mov
leave
dec
cli
addr16
mov
push
pop
or
mov
sub
inc
in
mov
scas
mov
stc
pop
pop
addl
xor
xchg
pop
lock
mov
jp
push
inc
fistl
out
into
in
cld
or
outsb
lahf
lahf
mov
test
dec
out
nop
iret
fcomp
iret
shrl
repz
addl
push
test
push
ret
mov
imul
sbbb
lds
pop
das
in
lds
loope
mov
push
push
iret
sbb
inc
or
inc
fisubrl
je
dec
pusha
xor
lret
mov
dec
sarb
mov
pushf
imul
iret
pop
js
mov
adc
dec
jno
outsl
ret
and
xor
xchg
push
cmc
lcall
ret
mov
pop
jle
add
pop
jnp
dec
pop
movsl
leave
sub
aaa
pop
add
dec
clc
cmp
jge
xchg
xor
repnz
lcall
mov
sbb
cmp
mov
imul
out
cld
mov
mov
ret
ja
or
and
inc
repnz
sub
jmp
imul
mov
scas
popf
jns
out
pop
call
movsl
call
pop
add
hlt
xor
jne
fwait
push
push
popf
inc
pop
loope
psubd
filds
mov
orb
sub
lock
jecxz
pop
rorb
add
cmp
in
out
lods
arpl
xchg
adcl
mul
mov
sub
movsl
jo
mov
or
cmp
out
lock
or
xchg
xor
xor
push
mov
int
lret
arpl
push
shlb
call
inc
test
push
jo
mov
je
jge
dec
into
mov
mov
lods
lret
xor
sbb
jg
lods
jbe
dec
or
mov
enter
mov
nop
imul
mov
inc
push
lock
mov
into
pop
stos
lock
add
mov
add
outsl
movsl
lods
les
cmp
scas
ficoms
inc
in
add
aaa
push
pop
mov
mov
dec
push
jg
mov
dec
xchg
dec
sub
inc
mov
mov
test
sub
mov
push
xchg
negb
aas
scas
mov
sti
aaa
out
negb
pushf
inc
sub
xchg
mov
adc
and
andb
fstl
out
xchg
cmp
sbb
sub
cmp
jle
incl
adc
lea
fs
push
and
and
ret
clc
cld
je
adc
jl
sbb
dec
sub
push
setns
mov
out
pop
xchg
xor
pop
into
ja
mov
outsb
jmp
insb
pop
or
aad
adc
jle
fmuls
jb
xchg
adc
lods
mov
mov
test
sbb
aaa
out
test
jmp
ret
xcrypt-ctr
cmpsl
fiaddl
cs
jp
cmp
xchg
lret
shr
ds
sbb
push
cmp
adcb
xor
sub
sbb
xchg
loope
fldenv
incb
in
xchg
lods
das
cwtl
or
and
leave
jle
jnp
inc
cmpb
stos
loop
in
push
out
cmpsl
mov
add
dec
inc
jnp
roll
mov
icebp
add
cli
xchg
mov
inc
and
mov
les
and
jns
test
in
mov
push
pop
fs
lcall
push
sub
daa
xor
sbb
mov
mov
mov
add
mov
or
mov
int
xor
cmp
mov
fsubrs
cli
in
push
sub
push
in
mov
sub
leave
popf
mov
xor
push
je
adc
in
xor
cwtl
out
enter
pop
push
shll
std
or
cli
fdivl
mov
repnz
adc
mov
fistpll
loope
mov
je
es
mov
mov
xchg
out
push
sbb
hlt
xor
cmp
aas
cs
repz
pop
cmp
imul
and
xchg
lock
xor
push
aaa
arpl
lock
pop
repz
fs
or
pop
daa
xor
push
push
movsl
orb
mov
mov
fsubl
rorb
fwait
ja
mov
call
xchg
push
push
daa
dec
adc
inc
stos
shlb
xchg
into
sbb
or
xor
fxam
push
sub
push
sbb
popf
pop
pop
jae
insl
mov
mov
pop
outsb
psubusw
test
cmp
adc
gs
dec
push
inc
into
jns
sbb
lahf
mov
ffree
jno
jae
cs
test
mov
inc
fcmovnu
inc
sbb
mov
cmpsb
cwtl
je
mov
pop
push
ds
flds
loopne
dec
sbb
pop
sbb
xchg
popf
gs
push
and
mov
or
call
fmuls
repz
pop
hlt
cmpsl
fsubrl
sbbl
xchg
cwtl
sti
add
adc
movsl
or
outsl
jae
test
or
xchg
lods
or
mov
outsl
pop
pop
jmp
testl
std
adc
mov
aad
js
mov
mov
jl
xor
pcmpeqw
dec
stos
xor
push
loope
dec
push
in
and
push
in
fisubrs
ja
jne
jle
push
fwait
jmp
ss
cli
inc
testl
xlat
shll
lock
dec
rorl
loope
popf
das
push
out
mov
mov
fldl
adc
inc
or
push
inc
pop
inc
rcrl
and
lods
jno
adc
popf
push
movsb
fmulp
add
es
jmp
fdiv
jae
sub
or
or
lcall
sub
scas
imul
mov
mov
sub
jmp
pop
sub
fiadds
lret
xor
mov
or
out
jb
push
sahf
cmc
sbb
das
or
out
sbb
shrl
in
push
dec
lods
out
int3
pop
sub
fiadds
int
mov
sbb
js
jle
push
stc
jg
js
xor
movsb
mov
mov
jmp
push
cmp
es
pop
and
sarb
out
popa
add
xchg
subb
xchg
jl
out
cwtl
jno
push
cmpb
test
lods
rcrb
loop
addl
fisubl
mov
adc
insl
nop
jmp
xor
or
xor
push
mov
sbb
mov
mov
mov
xor
xor
inc
rorb
mov
mov
das
out
leave
sub
in
or
mov
rorl
mov
sbb
push
push
aad
std
dec
mov
scas
sub
xlat
jo
mov
push
pop
bound
into
sbb
aad
pop
jnp
imul
cmp
dec
or
jl
rclb
pop
call
push
pop
sbb
ret
mov
cwtl
jb
int
ljmp
divb
mov
push
in
and
xor
xchg
mov
das
mov
jg
fsub
dec
pusha
out
push
insl
sub
iret
cmc
add
aad
cld
push
or
mov
outsl
dec
pop
fidivrl
leave
dec
out
sub
push
mov
sbb
out
mov
stos
rolb
push
mov
lds
xor
ss
psrlw
add
inc
movsb
push
xchg
out
mov
mov
iret
aas
arpl
js
mull
movsb
stc
cld
or
adc
mov
int
push
negb
jbe
mov
dec
repz
mov
xorl
xchg
jno
sti
pop
push
inc
in
and
xchg
out
js
aaa
or
rcrb
cmc
iret
adc
dec
in
daa
imul
js
or
push
ret
js
test
or
fmulp
notb
mov
mov
add
cmp
lret
mov
fnsave
test
push
pop
lret
pop
push
fistpll
lods
add
into
fists
int
inc
jmp
mov
adc
xchg
subb
sbb
inc
xor
push
mov
test
adc
loopne
roll
lods
sub
or
mov
cmp
ret
les
jmp
addr16
lret
stos
mov
repz
into
pop
push
dec
pop
testl
pushf
rorb
inc
lods
push
mov
addl
cmp
mov
sti
push
fs
daa
lahf
xor
mov
and
pop
pop
ljmp
dec
or
mov
ds
sub
mov
xchg
fdivrs
mov
gs
popa
or
loope
inc
add
ficoms
dec
adc
and
cmp
dec
lcall
xchg
orb
test
adc
sbb
sbb
sub
dec
ror
xchg
out
insl
scas
mov
fnsave
roll
dec
cmp
sbb
mov
adc
ss
divb
xchg
test
std
repnz
lock
xchg
scas
ss
imul
push
jmp
fldenv
loopne
xchg
mov
je
xchg
jno
push
es
loopne
add
jb
mov
mov
test
arpl
scas
test
leave
cmpsb
adc
mov
lahf
scas
push
mov
ror
lahf
jg
ror
jnp
add
push
fcomp
pop
cli
pop
int
ljmp
fiadds
jb
push
adc
lock
insb
jae
pop
xorb
leave
scas
aad
push
sub
jne
cmc
movsl
push
movsl
scas
push
jmp
insl
dec
movsl
or
pop
mov
mov
sbb
add
popf
push
xchg
add
sub
pop
jge
push
lods
ret
movsl
movsb
jno
dec
dec
mov
aas
int
es
inc
push
aad
les
sbb
loopne
jbe
xor
shll
lock
inc
dec
cmpsl
mov
mov
sbb
pop
ret
jmp
sub
in
pop
or
js
fcoms
jae
rcr
movsl
mov
out
std
pop
jge
or
sub
xor
imul
sbbb
adc
dec
scas
pushf
pop
jno
loope
jae
jb
add
mov
jl
fcomps
sbb
sub
rclb
mov
sbb
or
and
clc
jecxz
das
out
inc
outsl
sarl
inc
cltd
js
fcomi
imul
test
int
das
ret
cmp
aaa
mov
sub
xchg
test
lahf
mov
add
add
jnp
out
out
pushf
mov
sti
insb
das
dec
fbld
jb
scas
and
les
test
fsts
ret
stos
out
scas
jl
adc
cmp
out
sahf
lods
fistps
shl
mov
and
insl
cld
fmuls
push
xchg
pop
jb
iret
dec
xchg
xor
xor
mov
xor
nop
call
or
and
jmp
scas
fmull
pop
jl
insb
ljmp
pop
inc
xor
pop
inc
mov
add
or
push
enter
jo
jle
cmp
mov
inc
sar
inc
sub
test
xchg
jp
je
add
mov
outsl
jecxz
mov
int
inc
mov
sub
fdivrl
cmp
leave
lret
jns
xlat
pop
push
xchg
sub
scas
js
repnz
test
popf
sbb
cli
xchg
clc
lret
and
stos
pop
xchg
das
push
or
xchg
call
sub
lcall
mov
or
sub
jae
lret
clc
fsub
cwtl
fst
push
mov
pop
cmp
inc
cmp
jl
jle
outsb
pop
aad
pop
adc
lock
imul
jbe
cwtl
call
shrb
inc
adc
nop
daa
xor
je
rcr
das
popa
mov
int
cmp
jecxz
inc
push
mov
jne
dec
cmp
shr
add
push
mov
les
pop
sbb
xchg
shr
lds
push
mov
sub
loope
jmp
and
je
rcl
popa
jbe
cmp
loopne
pop
dec
div
inc
push
fisubrs
mov
fiadds
js
int
lcall
mov
shll
pop
fwait
test
mov
dec
out
push
loopne
pop
bound
push
subb
xchg
cli
xor
lret
cmp
loopne
icebp
loope
test
pop
xchg
sbb
imul
loopne
rorl
lahf
jle
push
push
dec
pop
push
lret
mov
adc
mov
mov
and
xchg
jne
xlat
jecxz
dec
jo
jne
and
lret
add
scas
adc
jmp
sub
outsl
xor
cmc
pop
loop
lds
sbb
xchg
dec
pop
stc
dec
cmp
sbb
add
mov
inc
in
and
cmp
mov
mov
cmc
add
and
add
mov
ljmp
std
int
push
hlt
mov
mov
cmc
or
inc
and
in
pop
mov
mov
nop
cli
clc
enter
jnp
xlat
mov
adc
into
mov
cmpl
or
movsl
rol
sbb
out
sti
std
sbb
jb
sahf
dec
sub
xchg
push
inc
in
nop
in
dec
int
mov
xor
call
inc
inc
clc
xchg
dec
cmp
mov
inc
addl
in
and
in
lahf
pop
popf
daa
out
push
mov
negl
stc
pop
dec
testb
dec
je
repz
je
sub
and
push
loope
jae
popa
xor
ret
fsubrl
lret
push
mov
jg
div
adc
and
std
sbb
xchg
pushf
dec
les
and
jge
adc
lods
pop
mov
test
pusha
pop
negb
pop
push
pop
add
ret
movl
dec
add
mov
xor
aam
mov
inc
outsl
addr16
mov
loop
jnp
out
cmp
iret
push
push
mov
sbb
into
rcll
mov
les
add
das
rol
inc
cmpsl
andb
arpl
add
mov
pop
xor
jg
cmp
sbb
mov
pushf
cmp
adc
outsl
add
imulb
loop
adc
adc
add
pop
jne
dec
mov
repnz
mov
xor
pop
lods
das
and
push
dec
mov
xor
inc
jge
sbb
lret
in
outsl
bound
leave
pop
sbb
out
sub
cli
pushf
loopne
jne
out
out
mov
mov
xchg
push
pusha
cmp
cwtl
ljmp
insb
hlt
push
data16
ret
in
out
cs
add
push
lods
adc
xchg
or
jne
les
adc
movsl
into
call
add
mov
std
out
or
imul
dec
mov
add
inc
mov
adc
xchg
pop
sbb
mov
ret
insl
push
aam
dec
push
xchg
add
pop
dec
cwtl
cs
icebp
add
mov
and
push
mov
std
mov
pop
movsb
inc
mov
shl
lcall
aaa
int3
insl
loop
push
pushf
sbb
push
pop
cmp
bound
jle
addr16
sub
in
mov
js
andb
inc
or
sub
outsb
shlb
jo
outsl
aad
push
xor
ds
fadds
bound
fbld
movsb
pop
pop
sbb
cs
pop
pop
adc
cld
loop
jae
imull
mov
sub
cs
add
jle
int
das
mov
xlat
pop
test
jmp
mov
cmpsl
inc
popf
fcoms
sbb
roll
aaa
mov
sbb
dec
pusha
test
add
push
jbe
sbb
mov
sbb
lea
pop
xchg
int3
push
cmc
adc
mov
lds
test
xchg
scas
repnz
imul
lahf
mov
cmpsb
cmp
pop
out
mov
inc
cmp
xchg
xchg
pop
shlb
ret
sti
push
arpl
inc
or
pop
scas
out
add
lahf
loopne
fimuls
addl
add
pop
ror
mov
xlat
cmp
lock
test
ljmp
add
int3
pop
jle
orb
jmp
aaa
fmul
jmp
ss
sub
adc
mov
shlb
loope
movsl
inc
adc
mul
movsb
cltd
mov
push
inc
adc
or
jle
inc
and
push
lods
shrl
jne
pop
mov
ds
mov
push
aad
sub
push
pop
cmp
xchg
test
int3
leave
adc
pop
lret
not
xchg
or
pop
roll
imul
dec
add
or
insb
push
push
mov
jecxz
xor
addr16
jg
cwtl
filds
mov
dec
mov
jbe
or
dec
or
out
les
jg
test
mov
and
sub
inc
jns
or
cmp
call
cmp
push
adc
je
outsb
subl
xchg
jb
mov
xchg
sbb
pop
pmuludq
test
bound
lea
jecxz
lea
mov
in
cli
xor
ja
pop
inc
fs
push
push
cmp
repnz
push
cmp
add
out
flds
jns
add
mov
sub
jbe
push
testb
pop
dec
sbb
aaa
pop
push
and
lds
fwait
sbb
ja
cmp
mov
push
mov
xor
push
ficoms
pop
xchg
mov
mov
cmpsb
fldt
cld
push
mov
mov
faddl
fadds
push
or
test
mov
fnsave
test
sub
ljmp
jg
nop
stc
dec
iret
pop
leave
inc
or
int3
icebp
push
sub
pop
clc
mov
cmp
ljmp
xchg
ds
dec
pop
ret
dec
leave
and
mov
sti
rcl
or
fisttpll
icebp
jecxz
enter
or
jmp
pop
loopne
testl
imul
dec
fidivs
in
outsb
int
mov
roll
daa
xor
shl
out
mov
sti
or
lock
bound
repz
fistl
sbb
push
pop
sub
test
ja
popf
adc
add
cmpb
insl
push
adc
push
jnp
mov
or
and
jbe
xchg
push
rcll
mov
mov
inc
mov
jae
dec
ret
mov
mov
cmpsl
jle
xchg
ja
jge
xchg
test
cmc
stos
lret
adc
subb
pop
aaa
jl
adc
dec
jo
call
jl
imul
push
ljmp
fisttpll
mov
sbb
fwait
sub
nop
in
lret
ret
fst
or
pop
lock
test
jb
jmp
inc
shrb
push
in
arpl
daa
das
mov
das
push
incl
mull
loopne
fisttpl
in
icebp
sub
and
or
mov
int
or
ja
xchg
push
leave
fnop
loop
mov
sub
ret
inc
pop
mov
mov
cmp
fwait
push
out
in
or
adc
jbe
and
push
or
outsl
mov
sbb
rcrb
call
das
dec
inc
mov
test
fiadds
cmp
stos
cmp
or
and
out
and
cmc
xor
in
xor
jae
push
and
dec
ljmp
pop
adc
push
test
mov
lret
jo
in
call
push
jbe
adc
mov
mov
mov
sbb
mov
hlt
inc
setbe
and
out
cmp
push
push
aaa
js
mov
mov
ss
loop
cmp
mov
jns
push
xchg
mov
mov
mov
lods
js
xor
mov
adcl
popf
jbe
test
adc
add
and
movsb
push
sub
je
mov
adc
std
mov
test
mov
rol
cli
mov
mov
insl
sbb
inc
rclb
push
lret
and
cwtl
mov
xor
lret
fcmovbe
jmp
mov
and
mov
add
add
jge
ficompl
pop
lods
xor
push
out
pop
lods
fcoms
clc
mov
fistl
mov
xchg
test
loope
cld
test
mov
add
or
int3
sub
cmp
push
or
xchg
sub
cld
loope
lock
jge
xchg
pusha
and
or
jne
xchg
data16
cld
sub
negl
inc
add
push
jmp
out
sahf
rcll
sbb
mov
xchg
push
mov
lea
cmp
adc
xor
push
int3
mov
call
imul
adc
es
push
sub
sbbb
mov
pop
and
mov
call
jmp
and
idivb
dec
jbe
pop
mov
pop
inc
mov
jmp
fldenv
int3
movsb
jmp
cmp
movsl
xor
pop
cs
shlb
xor
inc
mul
divps
jno
push
out
push
jb
hlt
imul
pushf
mov
popa
pop
dec
sbb
notl
addl
dec
or
arpl
push
dec
subb
xchg
dec
cmp
ret
jp
jmp
in
cmp
sbb
mov
lods
mov
mov
js
negb
jl
push
pop
dec
imul
jp
sbb
push
xchg
mov
pop
ss
xchg
lret
pop
jb
xchg
inc
mov
jmp
push
mov
xchg
and
sahf
add
inc
and
orl
stc
leave
aad
pop
sub
push
ja
pop
les
ja
call
inc
outsl
mov
mov
jne
add
out
test
in
push
inc
aas
std
jl
stos
or
cmpsb
xor
jecxz
hlt
nop
xor
or
jmp
fs
pop
addr16
sti
adc
cmpsb
hlt
daa
scas
out
mov
add
push
rorl
add
movsl
movsb
bound
fcompl
or
mov
enter
pop
shld
cmp
mov
imul
adc
imul
push
mov
xchg
and
mov
pusha
xchg
jge
jp,pn
push
test
mov
sbb
fidivrl
into
or
adc
push
jmp
mov
mov
call
fidivs
jl
dec
mov
fsubs
roll
and
jnp
inc
and
and
mov
inc
and
xchg
outsl
jmp
adc
cmpsl
ja
lcall
mov
pop
int
test
fnsave
push
out
push
imul
xlat
mov
loopne
shll
jnp
jb
cmpsl
jp
scas
js
movsb
dec
dec
jl
ret
icebp
clc
hlt
push
inc
jnp
and
push
dec
and
dec
sbb
sti
fisubrl
in
mov
leave
xchg
add
adc
into
adc
dec
xor
push
sub
mov
push
aad
es
jl
dec
lods
bound
inc
fidivs
mov
cmc
or
sub
cmp
nop
out
jno
hlt
lock
pushf
jns
mov
and
test
cmpsb
push
sti
mov
addr16
push
adc
in
inc
mov
es
xchg
ret
ja
mov
xor
cld
out
pusha
lods
sti
add
int3
in
popf
xchg
mov
cmp
xchg
ja
aaa
push
adc
dec
xor
or
test
xchg
xor
cli
inc
repnz
in
pop
and
jp
lea
sub
mov
scas
mov
gs
push
push
loope
mov
mov
sbb
adc
pop
lret
and
or
push
pop
xchg
mov
add
pop
orb
aad
aas
ss
xchg
mov
push
xchg
nop
das
mov
loopne
insb
fsubrp
sti
lods
push
mov
pop
int
test
jbe
clc
and
hlt
pop
cs
and
in
pop
xor
lcall
cld
mov
xor
in
jbe
popa
jg
pop
and
jno
or
push
mov
pop
adc
rclb
push
push
dec
jnp
push
mov
pop
ljmp
pusha
out
test
dec
test
stos
inc
sub
lock
lds
stc
decb
sbb
or
xor
push
rcrb
call
out
loopne
lds
popa
cmpl
mov
mov
repz
cmp
int
dec
iret
aad
xchg
out
mov
push
push
xchg
fcoms
out
adc
incb
shl
popa
adc
lret
les
xor
push
out
out
stos
fsts
add
adc
in
jb
test
rcll
orl
sub
xor
out
nop
loope
push
xlat
addr16
xor
aad
mov
xchg
jg
dec
cld
pop
inc
mov
insb
xor
repnz
xchg
shlb
dec
cmc
push
mov
jecxz
push
out
jge,pt
sub
test
lahf
push
and
lds
and
icebp
inc
ja
sbb
inc
fildl
popa
jg
jno
loopne
mov
sub
cmpsb
pop
int
aaa
in
push
iret
dec
bound
cld
inc
dec
cmp
imul
insb
rol
jnp
test
sbb
add
es
cmpsl
fs
lock
inc
outsb
cmp
ss
dec
frstor
divl
insl
mov
icebp
pop
stc
std
pop
xchg
ss
xchg
mov
ja
icebp
mov
mov
sbb
loopne
jns
lret
inc
xorb
das
sbb
mov
push
out
add
mov
lods
imul
sti
inc
jo
jle
mov
or
jnp
push
cmp
je
mov
mov
dec
jnp
imul
mov
mov
mov
in
xor
or
or
pop
cld
xchg
push
and
push
sarb
imul
rcll
xlat
cmp
xor
mov
ljmp
or
ljmp
inc
pusha
movsb
fstpt
int3
mov
jb
arpl
cmp
aam
mov
std
out
cmp
test
and
jl
lahf
and
jae
jge
pop
cmpb
xchg
jnp
int3
xchg
jp
and
clc
jle
sub
in
cwtl
xchg
sti
in
add
je
aad
cmpl
xor
icebp
mov
push
xor
add
rcrl
mov
sub
stos
xchg
xchg
mov
ja
xor
dec
or
shlb
sbb
and
divps
add
inc
mov
pop
add
sahf
adc
rcrb
repz
fiaddl
and
jmp
addb
mov
mov
sbb
icebp
mov
ficompl
mov
inc
push
dec
mov
jp
fnsetpm(287
loope
jbe
leave
push
cmc
sti
pop
popa
scas
loopne
sbb
sbb
pop
faddl
sub
nop
inc
dec
mov
mulb
jo
mov
add
add
mov
ret
les
call
std
jns
dec
or
iret
or
adc
sbbb
jns
leave
aas
jle
push
inc
sarb
data16
cli
inc
or
xor
arpl
scas
xchg
xor
lods
aam
mov
pusha
imul
jne
in
push
loopne
test
divl
and
mov
sbb
cli
xor
iret
jecxz
xchg
jbe
not
popf
inc
mov
ret
xlat
fsubrl
cmp
imul
rcll
fsubl
faddl
call
dec
lea
int
leave
test
fwait
mov
and
cmp
adc
fildl
outsl
sub
call
aaa
cmpsb
out
or
dec
and
imul
repnz
lret
stc
outsb
pop
xchg
adc
pop
jns
stos
pop
aas
xchg
es
or
xor
dec
mov
pop
xchg
cwtl
jge
repnz
or
xchg
dec
sbb
es
jae
lret
inc
inc
pop
out
rcl
jmp
jns
aaa
addr16
insb
clc
xchg
test
cmp
imull
adc
xchg
int
push
shlb
fidivl
stos
mov
stc
jg
popf
or
ret
ret
out
daa
iret
fcoms
xchg
xor
inc
adc
cltd
sbb
mov
popa
or
jae
dec
jecxz
xchg
xchg
lret
mov
lahf
inc
aas
addr16
push
sub
jmp
popf
push
mov
cld
sub
mov
test
int
and
sub
xchg
and
faddp
push
xchg
jae
jmp
nop
jns
fcoms
fsincos
dec
mov
int3
lret
mov
mov
mov
push
lahf
inc
inc
push
aaa
sbbb
out
dec
sub
adc
cmp
cmpsl
loope
add
add
push
mov
jecxz
mov
xlat
out
fimuls
push
pop
bound
into
xchg
pop
adc
aam
das
cmp
sahf
jno
inc
sahf
ficomps
or
sar
sub
stc
mov
jl
sbbl
add
rorl
in
push
lcall
dec
adc
xorl
lret
add
mov
lock
ds
inc
pop
jle
fdiv
ret
lock
or
push
mov
test
adc
sbb
jne
mov
popf
enter
int
leave
push
dec
sar
push
pop
aaa
dec
out
mov
test
scas
pop
dec
mov
cwtl
mov
aad
mov
lds
mov
sbb
fidivs
mov
or
lds
nop
push
shrl
pusha
lret
cmp
sub
add
cli
pop
call
insl
sbb
xor
or
das
add
add
push
jl
out
mov
ds
cs
dec
push
mov
aas
adc
dec
jge
xor
bound
das
jmp
xchg
icebp
iret
push
ljmp
imul
insb
cmc
inc
addr16
inc
rcl
and
andl
push
lcall
roll
pop
aaa
pop
aam
xchg
mov
lret
xor
mov
xchg
jb
or
or
aaa
jmp
popa
enter
jmp
or
ret
xor
les
lret
test
xchg
leave
add
aam
das
jo
insl
xchg
jmp
cltd
outsl
popa
mov
pop
mov
mov
test
push
inc
pop
loopne
xlat
add
push
negl
mov
lods
sbb
push
mov
pop
jbe
in
scas
nop
sarl
mov
push
xor
cmp
sti
cmp
into
scas
add
sub
dec
lahf
cmpb
xchg
nop
scas
movsl
aad
lods
lcall
addr16
sbb
arpl
fucomp
sub
cmp
or
jle
insb
dec
lcall
pop
dec
inc
mov
push
cmp
lret
addr16
sub
int
mulb
inc
pop
shll
stos
add
jb
pop
lea
out
add
cmp
les
mov
jne
ds
mov
mov
cmpsl
mov
icebp
sbb
jae
push
cmp
sub
mov
or
loope
and
popf
xor
mov
cmpl
inc
mov
scas
or
sub
popa
sbb
jecxz
les
outsl
xchg
inc
into
cld
mul
loop
loope
in
fs
lea
maskmovq
mull
aas
adc
insb
push
or
inc
pop
mov
jnp
aam
mov
orb
stos
sbb
xchg
push
dec
mov
mov
and
pop
add
rcrb
pop
loopne
adc
rorb
push
xor
leave
pop
or
jae
adc
repz
in
lods
daa
out
push
and
lret
fstpl
ja
movsb
pushf
cmp
push
cltd
add
mov
subps
sbb
and
repnz
xchg
mov
dec
xchg
mov
out
mov
xchg
rorb
mov
jo
repnz
push
lret
cmp
fstpt
filds
loopne
xchg
or
inc
fcmovu
cmp
mov
xor
xor
mulb
lret
fnstsw
inc
loope
cmpsb
mov
xchg
jne
push
sahf
mov
sbb
mov
addr16
mov
mov
inc
jg
je
out
in
mov
pusha
popa
pushf
add
out
dec
int
jbe
lret
mov
fsubrl
daa
roll
mov
int3
jmp
mov
mov
adc
roll
mov
mov
inc
mov
jns
pop
dec
cmpsl
imul
cmp
loop
jbe
jo
push
int3
shll
mov
pop
repz
mov
inc
dec
or
inc
mov
sti
shl
data16
pop
push
pushl
lret
iret
jl
mov
imul
lods
in
jle
rclb
test
mov
inc
lds
shl
loopne
jne
xchg
pop
dec
fisubs
pop
xchg
dec
add
out
push
jno
and
push
add
jnp
jmp
popf
mov
mov
dec
add
jmp
add
in
mov
mov
test
mov
sbb
mov
pushf
rorb
push
mov
adc
aam
mov
xlat
pusha
stc
fwait
push
scas
cmp
cld
pop
adc
movsb
xchg
aas
cmp
xor
aam
sahf
movsl
gs
fnstsw
inc
cmc
std
repnz
cmp
mov
sbb
lds
loope
xchg
sbb
mov
mov
or
pop
jns
and
aad
and
int
mov
jno
xchg
cmpsl
push
mov
sbb
in
flds
cld
dec
cmp
mov
imul
pusha
dec
sbb
or
sti
shlb
pop
cmpsb
mov
and
push
notb
rclb
mov
js
mov
mov
gs
into
pop
inc
lock
das
andb
int
xchg
sbb
fimull
les
push
dec
pop
add
add
sarb
out
mov
sbb
mov
scas
cmp
mov
add
push
lea
fcoml
sub
add
jb
pop
clc
mov
filds
fidivl
pop
fst
shr
out
cmp
jle
insl
xor
stos
outsb
ljmp
xorl
or
fwait
inc
pop
iret
push
lahf
push
or
inc
stos
jb
pop
cli
loop
popf
lret
jmp
ret
sti
test
lahf
pop
stc
dec
cmpb
xor
jp
loopne
pop
outsl
add
popa
adc
lods
mov
loop
adc
mov
lret
mov
cwtl
sbb
sub
inc
sbb
mov
subl
push
dec
xchg
lock
insl
sbb
inc
mov
cmp
ss
sbb
mov
jo
jbe
push
mov
cs
mov
and
push
xor
push
dec
mov
pop
sub
in
je
inc
dec
dec
fwait
dec
mov
and
mov
sub
faddl
out
js
mov
sbbl
push
popf
enter
dec
push
divl
mov
push
daa
inc
push
inc
push
mov
sub
call
mov
scas
loopne
gs
orl
in
out
popa
in
and
retw
mov
add
mov
inc
lods
scas
outsb
sar
out
ds
sbb
negl
mov
decl
adc
xor
jecxz
pop
xor
lret
enter
or
hlt
jnp
cmp
mov
sbb
aad
fs
and
mov
adc
and
pop
roll
bound
jnp
and
je
in
push
cwtl
push
outsl
pop
add
and
popa
jo
ret
mov
pop
cmp
mov
pop
smsw
mov
out
repnz
js
sahf
cmpsl
loope
filds
jae
mov
adc
inc
lret
lcall
xchg
movl
xchg
sbb
fadds
in
xchg
mov
and
out
loope
lret
adc
orl
mov
movsb
repz
fldcw
jne
stc
insl
jbe
scas
stc
inc
movsl
sub
cltd
cmpsb
popa
or
dec
jle
mov
mov
lock
lea
mov
das
cmpsl
sub
mov
mov
repz
inc
mov
test
and
cld
mov
insl
sbbl
xchg
loopne
cli
loope
add
push
addr16
push
xchg
mov
xchg
jle
fisubs
stos
inc
sahf
scas
push
lock
push
pusha
dec
push
push
call
and
add
pop
sub
imul
cmp
dec
mov
mov
mov
jo
sub
inc
xchg
or
mov
out
sahf
inc
cmp
mov
jae
push
mov
mov
mov
add
lea
adc
jecxz
repnz
iret
or
add
add
xlat
ret
arpl
mov
outsl
inc
orb
lret
sarl
jbe
push
cmp
push
std
test
adc
pop
sbb
test
mov
fisttps
mov
xchg
dec
mov
cmc
add
test
sti
jne
mov
ficoml
push
cmp
adc
inc
push
sarl
outsb
test
dec
xchg
jecxz
xchg
bound
jo
fdivrs
sbb
jmp
mov
and
mov
sbb
popl
pop
sub
xlat
loope
push
pop
aad
mov
xchg
and
jp
aas
lcall
fisubrs
sahf
or
mov
in
loopne
movsl
dec
in
lods
add
push
sahf
pop
inc
push
pop
enter
ja
inc
xchg
pop
leave
in
cli
bound
cmc
hlt
ret
xchg
fnstcw
outsb
lret
mov
fstpt
mov
fstps
fsubr
or
push
dec
data16
lds
sub
adc
cmp
mov
aad
in
lahf
lods
nop
cmpsb
in
out
push
cmp
les
inc
outsb
sub
mov
leave
add
mov
fbld
fisttpl
out
mov
shl
pop
cmpsb
lods
inc
cltd
pop
push
jno
cmpb
cmp
insb
loop
push
cmp
or
les
xchg
sbb
push
mov
xchg
jecxz
jmp
adc
repz
and
xor
mov
pop
xchg
je
sahf
mov
and
inc
add
test
or
dec
insl
shrb
push
sahf
pusha
imul
mov
mov
repnz
stos
rorl
pusha
mov
xor
hlt
jno
rorb
test
mov
mov
lds
xchg
adc
cmpsl
adc
xchg
imull
cld
arpl
inc
test
adc
xchg
mov
adc
sbb
mov
addb
cmc
je
push
xor
lods
lret
mov
xchg
inc
out
push
jnp
fidivl
sub
sub
xlat
jne
mov
addr16
jmp
je
mov
ljmp
pop
jns
cwtl
int
xchg
lods
test
xlat
testb
and
fwait
in
aaa
stc
in
out
push
stc
js
ja
scas
fcmovnb
mov
or
out
dec
dec
cs
enter
mov
hlt
sub
lock
cltd
gs
in
pminub
pusha
inc
cmpsl
cmp
mov
sub
or
hlt
and
adc
pushf
push
js
jl
xor
cmp
idiv
push
jo
pop
dec
sahf
push
xor
out
fsts
test
mov
add
lret
cwtl
mov
dec
int
roll
jbe
es
lret
xor
sub
lds
rolb
xchg
push
xchg
les
fnstsw
jmp
ret
cmp
push
sub
jp
pusha
xlat
clc
xor
mov
repz
pusha
mov
and
jmp
xor
dec
iret
adc
push
stc
test
cmp
out
pop
mov
pop
aam
xorb
add
iret
es
jne
mov
or
jno
adc
or
jnp
repnz
mov
and
add
repz
cmova
scas
das
xor
or
dec
xchg
mov
push
and
pop
stos
add
inc
jae
mov
clc
fcompl
insb
lods
jns
jl
cmp
nop
lcall
fyl2x
in
stc
pop
cmpsb
adc
aam
sbb
addb
fimull
inc
stos
enter
out
out
xchg
cli
push
sub
out
cmpsl
or
lcall
dec
dec
or
arpl
mov
cmpsb
stos
mov
cmp
adc
adc
sbb
aad
sbbl
xchg
and
push
rcll
pop
xchg
mov
into
lret
xorb
out
adc
jns
cs
dec
ret
aaa
mov
xchg
jb
popf
lret
xor
out
leave
cmp
loope
push
xchg
mov
icebp
mov
mov
jl
inc
out
jg
shrb
into
pop
and
aam
xor
adc
frstor
cmp
ret
sti
push
push
push
lea
or
test
popa
xchg
mov
add
lea
push
movsl
mov
push
ss
dec
rcr
aad
cmp
cli
dec
sub
sub
daa
sbb
lods
jno
insb
cmpsl
jbe
lret
das
mov
int
jbe
push
test
es
out
stos
daa
daa
adc
movsb
jecxz
push
sub
mov
fisttps
dec
add
vmwrite
push
jp
push
sub
dec
dec
xchg
or
mov
lock
nop
cmp
push
adc
xchg
arpl
inc
lods
addr16
lds
xchg
push
mov
add
cmp
hlt
push
mov
call
jbe
lock
hlt
push
push
sub
sbb
in
popa
outsb
jge
rol
mov
je
inc
pop
inc
jge
cmpsl
adc
stos
sub
lea
imul
loope
sub
sub
stos
jns
sarb
inc
adcl
xorb
je
xor
ss
and
jg
std
repz
fs
dec
cs
push
mov
fildl
sbb
pop
or
outsb
xor
lds
ficoms
inc
mov
sub
lea
int3
add
test
bound
mov
test
stos
xchg
out
stos
xchg
cmpsb
or
ja
dec
cmp
ret
add
aam
and
sbb
popf
rol
popf
cwtl
or
xchg
inc
jl
filds
sub
inc
popf
push
outsl
iret
sahf
jp
ss
scas
adc
cmp
xchg
sub
mov
pop
mov
test
rcrl
xchg
outsb
mov
mov
cli
cmp
sub
push
jnp
fidivl
fistps
jae
imul
inc
jns
pop
mov
sbb
imul
xlat
int
mov
test
or
loope
cmpsb
int
lahf
xchg
push
cmp
popa
cwtl
repnz
shr
push
mov
hlt
add
sub
pushf
leave
clc
sub
lret
or
jnp
imul
cmpsl
and
je
pop
repnz
fstpt
jae
iret
cmp
sti
loope
popa
mov
jl
mov
push
lret
lcall
ds
dec
into
dec
mov
lret
push
xchg
mov
mov
xchg
push
cmp
lcall
stc
test
cmp
into
add
bnd
xor
lret
mov
outsl
jb
adc
scas
xchg
stos
aam
enter
dec
push
xor
inc
lods
or
aas
out
mov
push
cli
xchg
and
xchg
sbb
hlt
mov
mov
dec
in
ds
pop
mov
push
iret
in
or
ja
mov
sub
dec
xchg
sbb
jl
out
repz
inc
cli
js
test
jmp
pop
and
cmp
sarb
sar
inc
int3
pop
xor
mov
sahf
and
in
bound
jbe
pop
mov
stos
add
push
inc
sub
mov
hlt
xchg
sub
sahf
or
cwtl
dec
jnp
mov
cmpsb
popa
lds
mov
stos
add
repnz
mov
pop
lds
popa
xlat
sbb
stos
pop
xchg
push
xchg
mov
add
rsm
stos
sti
mov
sbb
stos
add
cmp
inc
loop
aam
mov
and
cmpsl
loop
fs
and
jo
jae
fmuls
and
push
pop
shrb
pusha
popf
mov
mov
add
lcall
jnp
lret
sub
push
insb
rolb
pop
push
call
mov
popa
int
mov
jmp
addb
sub
mov
movsb
jecxz
pop
mov
cmp
push
imul
mov
xchg
and
add
inc
push
shlb
jle
pop
sub
dec
stos
inc
sub
or
dec
and
mov
sbbb
jmp
push
push
dec
mov
les
jecxz
xor
sti
lds
cmp
mov
ss
pop
shl
xchg
add
mov
out
mov
mov
je
push
repnz
test
jns
lret
hlt
mov
push
mov
pop
mov
dec
andl
loope
cs
inc
bsf
pushl
mov
add
push
push
je
leave
out
adc
fcomps
repnz
jmp
popw
xchg
aam
into
and
pop
iret
lock
repz
adc
jne
lods
pop
jmp
ret
outsl
ss
stc
aad
or
or
jmp
in
mov
and
adc
cmp
xchg
dec
popa
inc
mov
add
xchg
les
cltd
fisubs
movsl
inc
push
cli
push
sbb
jb
add
mov
je
mov
sarl
dec
aam
jmp
std
mov
test
addr16
or
adc
cltd
xchg
or
add
stos
and
into
hlt
aad
push
xor
dec
inc
push
gs
adc
scas
xor
sbb
push
das
mov
push
ret
mov
jb
xchg
or
pop
pop
or
lods
or
arpl
in
scas
cmpsb
sub
mov
xor
cmp
adc
dec
lods
sub
pop
lcall
mov
mov
add
pop
and
mov
addr16
jecxz
sub
jne
loop
fsubs
imul
lds
push
in
push
pop
sbb
dec
movsb
lret
mov
popf
sub
data16
mov
arpl
aaa
mov
aad
xor
sbb
std
and
xlat
pop
cli
scas
in
cli
and
jp
xchg
sub
aad
cwtl
shll
js
shlb
fcmovnb
push
mov
jp
and
iret
or
jae
mov
addr16
pop
fbstp
push
icebp
in
stos
push
repnz
dec
loop
sbbb
sub
jge
or
or
cmp
fiaddl
mov
loopne
push
insl
pop
loopne
test
ljmp
jp
lods
or
mov
pop
fiaddl
and
out
mov
sub
in
call
dec
jecxz
out
hlt
cld
xchg
xchg
mov
pop
subl
scas
xchg
test
inc
adc
cs
movsb
dec
mov
shl
stos
mov
jnp
jno
xchg
stos
int3
icebp
xor
jmp
ds
dec
leave
adc
jge
add
out
pop
cmp
ja
sti
stos
imul
lcall
jns
xor
lea
icebp
or
iret
pop
pop
and
or
push
ljmp
scas
je
push
ja
and
lods
add
les
mull
push
pop
ret
enter
fldt
sbb
imulb
jnp
test
inc
fldt
cmpsb
cmp
inc
xchg
icebp
icebp
and
nop
mov
cmp
jne
fxch
imul
jmp
mov
and
ss
dec
xchg
adcl
insb
out
inc
popl
in
jne
mov
adc
imul
int3
xchg
add
or
in
cmp
inc
leave
jge
daa
dec
and
mov
pop
aaa
add
jae
add
cwtl
pop
or
div
mov
xor
movb
mov
dec
sbb
stos
ret
imull
xor
loope
mov
pop
mov
adc
ja
les
jns
inc
jne
push
aaa
pop
bnd
jmp
push
lods
adc
pushf
mov
insb
sbb
loop
stc
add
sbb
mov
into
in
jbe
xor
xchg
jmp
push
mov
push
dec
cmp
adc
aam
loope
test
mov
pop
arpl
add
imul
into
sbb
movsl
cmp
in
arpl
outsl
xchg
outsb
add
jno
std
mov
outsb
data16
lock
xchg
cli
mov
ss
sbb
stos
sbb
lds
cmc
ds
aaa
loope
mov
jb
sbb
sub
roll
pop
push
xchg
mov
arpl
mov
lds
inc
out
jecxz
cmovl
jle
aaa
pop
pop
adc
pop
js
movsb
adc
mov
add
jmp
out
xchg
jo
mov
fwait
loop
ljmp
aaa
cmc
jg
jge
dec
fstp
sahf
pop
in
xor
and
jnp
lcall
mov
lahf
movsb
push
jge
cltd
ror
jb
pop
stos
loope,pn
mov
cwtl
add
xor
inc
sbb
das
movsb
mov
cmp
test
daa
out
rcrl
push
mov
ss
sub
mov
xor
fnsave
leave
mov
cmp
and
add
pushf
mov
jecxz
dec
and
or
cmpsb
int3
sbb
stc
pop
xor
mov
pop
aad
sbb
inc
sub
mov
jne
cld
imul
pop
xlat
cmp
sub
xor
push
call
lahf
cltd
dec
xlat
mov
sbb
push
pop
sub
shll
mov
mov
jge
xor
cmp
mov
ljmp
in
xor
out
loope
xchg
std
ret
add
les
fs
jle
addl
js
pop
scas
pop
dec
xchg
int3
stos
scas
ret
pop
insl
aaa
push
push
pop
jmp
ljmp
mov
aas
rclb
xor
lods
xchg
and
test
mov
cmp
dec
mov
dec
xor
mov
ja
imul
add
aaa
xor
or
les
pop
fnstcw
stos
add
cltd
jae
dec
mov
adc
gs
shrl
gs
mov
lret
sbb
test
or
lds
les
imul
xor
push
stos
xchg
jg
or
push
add
int3
mov
dec
push
dec
mov
xor
ret
movsl
loope
int
jnp
xchg
inc
mov
stos
jnp
inc
sti
mov
jg,pn
or
fsubl
xor
loope
gs
push
outsl
inc
rol
fdivs
push
ss
scas
push
push
ss
scas
mov
or
test
fidivrl
fisubs
loop
mov
sarl
xchg
test
imul
and
insl
daa
mov
lock
lock
add
pop
addr16
scas
pushf
cli
dec
insl
lods
nop
lods
mov
xchg
adc
mov
repz
and
mov
fsin
mov
sbb
mov
add
andb
sub
ss
shrl
xor
cmp
test
sbb
jle
mov
aam
popf
mov
insb
lods
lcall
dec
mov
dec
js
sbb
mov
out
mov
insl
aaa
cmp
sbb
fwait
jns
nop
add
inc
fwait
and
repz
rolw
inc
inc
into
mov
pop
cmpsb
jne
insb
dec
nop
out
mov
xchg
lahf
fwait
ds
cmp
cwtl
in
push
or
sbb
lret
pop
scas
xorb
repnz
jp
out
out
movsb
out
xchg
xchg
clc
mov
inc
push
mov
xchg
in
lret
push
and
aad
push
incl
push
mov
ss
cmp
mov
adc
jg
or
into
jbe
mov
fdivrs
adc
pop
fwait
nop
inc
cmp
or
ficomps
mov
xchg
push
ja
xor
fcoms
or
out
adc
mov
push
popa
inc
test
jg
icebp
mov
jmp
cwtd
or
adc
lret
bound
lahf
fidivl
push
inc
push
dec
in
jle
leave
ljmp
inc
pop
pop
add
dec
dec
scas
pop
daa
pop
xor
add
subb
pop
sti
adc
mov
xor
and
subl
lret
jecxz
inc
lea
mov
loop
or
negl
bnd
sbb
lods
sub
cmpsl
dec
jg
dec
fwait
pop
pop
sbb
imul
mov
adc
ja
xchg
pop
mov
sub
dec
mov
dec
pop
in
mov
push
add
incb
movsb
stc
xor
rolb
cmp
pop
outsb
add
xchg
mov
mov
mov
mov
sub
sub
scas
xchg
lock
cltd
daa
out
fs
dec
fidivrs
mov
xchg
movsl
lods
outsb
adc
js
cs
sbb
lcall
out
cltd
popf
pushf
loopne
mov
in
mov
xlat
mov
mov
jns
sbb
mov
sbb
pop
call
jge
dec
cmpsb
mov
mov
mov
or
sbb
cwtl
push
xor
jg
fsubr
and
jo
clc
add
int3
roll
cmp
pushl
int
jbe
int3
and
popf
mov
addl
inc
push
jo
pusha
test
jae
mov
dec
push
scas
cmpsl
push
aad
fisubl
ds
push
jmp
mov
stos
out
fs
inc
jbe
popf
mov
leave
push
dec
sarl
xor
pop
out
push
sahf
int3
mov
mov
rcrb
inc
dec
ss
adc
lock
push
adc
mov
pop
jp
out
xor
sahf
or
into
frstor
jbe
loope
loope
and
jle
sti
aas
out
push
add
sub
faddp
out
mov
adcb
in
stos
push
sarb
je
in
pusha
mov
adc
pop
call
shlb
mov
ret
dec
jmp
ljmp
pop
pop
js
inc
shll
gs
add
cli
lahf
fiadds
mov
xor
shlb
xor
cmp
adc
stos
mov
sbb
popa
xor
mov
test
adc
push
sub
cs
inc
mov
jge
ljmp
insb
push
mov
ret
sub
xchg
pop
addl
push
mov
pop
lret
push
fidivl
jl
pop
pop
sbb
fcmovne
shll
pop
fistpll
xor
js
scas
pop
les
sbb
ret
movsb
pop
fsubrl
in
xor
xchg
add
inc
jl
jecxz
mov
xchg
dec
fbstp
in
aas
cli
push
test
push
hlt
adc
clc
lea
lods
call
iret
dec
lahf
add
or
push
sub
pop
sbb
in
insl
dec
gs
add
mov
aam
mov
outsb
sbb
jge
jle
test
aam
bound
sbb
mov
out
fsubp
stc
sbb
jbe
icebp
sub
out
mov
jbe
subl
xor
nop
adc
mov
shlb
sub
and
shll
add
sbb
rcrb
cwtl
jle
inc
dec
sub
mov
pop
cmp
xchg
lcall
jo
bound
sub
in
ficoml
inc
cli
push
psubsw
cwtl
jb
jmp
add
xor
aam
hlt
pop
mov
shll
add
pop
repz
sub
and
mov
scas
sub
add
cwtl
sti
subb
mov
lods
ja
in
dec
sbb
pushf
cmp
cmp
sub
xchg
mov
ss
mov
mov
inc
pop
dec
or
or
aam
cmp
bound
popf
push
push
test
adcl
movsl
jns
pop
lret
pop
fsubr
jns
sahf
add
out
and
push
inc
bound
sub
xchg
aaa
pop
in
push
fistl
das
inc
adc
pop
insl
or
subb
and
add
rcrb
adc
push
out
push
jle
test
sub
push
sub
movsb
push
adc
lods
stos
push
push
shlb
test
das
add
mov
ds
js
mov
popa
mov
sbb
ficompl
push
add
and
dec
les
test
cmpsl
fsubl
mov
or
mov
mov
cmpsb
in
cmpsl
int
lret
lret
insb
sarl
jno
sarb
insl
jnp
pop
adc
push
mov
lods
push
les
pop
daa
lods
pop
add
into
out
jb
or
rorl
mov
rclb
mov
inc
stos
fcomps
jle
mov
mov
ds
add
gs
add
inc
jp
out
addl
push
mov
xchg
dec
pop
sbb
pop
mov
cltd
int3
ljmp
mov
pop
inc
leave
sbb
addr16
jb
lods
insb
pushf
es
xor
imulb
add
push
dec
xchg
loope
xchg
add
inc
bound
xor
lods
movsl
sbb
push
add
mov
lret
xlat
dec
push
xor
addr16
xchg
pop
in
stc
fnsave
gs
dec
call
bound
cmp
xor
stos
push
stos
push
jns
jne
mov
test
ret
or
mov
and
push
mov
or
adc
lahf
cmpsb
pop
shrl
insl
call
push
pushf
and
cmp
jmp
ja
push
int
xlat
fisttps
mov
sub
aaa
jmp
xor
aaa
push
jmp
jns
adc
cmp
lds
pushf
mov
rcr
sti
push
fsubrl
lcall
jecxz
test
hlt
sti
test
inc
cmp
and
xor
or
sub
pop
int
popa
jns
fiadds
icebp
inc
ja,pn
xchg
clc
fwait
and
and
push
dec
out
ret
scas
or
jmp
dec
shl
nop
pop
popf
mov
outsl
idiv
cmp
insb
sub
pusha
xchg
pop
in
or
add
mov
push
xchg
xor
outsb
or
sub
dec
or
ljmp
cmp
js
popa
data16
jae
push
mov
push
rcrl
sbb
aam
cmp
mov
cmc
jg
insb
aaa
lods
arpl
jbe
add
cmpsb
push
scas
xor
iret
cmpsb
pop
iret
push
jp
pop
pop
add
loopne
loope
inc
pop
faddl
andb
dec
cmp
cmc
mov
fbstp
lods
jg
movsl
mov
fstpt
and
pop
nop
pop
push
or
xor
push
push
int3
popa
add
sub
sahf
mov
sbb
scas
stos
push
jle
add
call
xchg
and
in
sub
xor
addr16
out
mov
mov
stc
fsubs
mov
int
adc
bsr
test
mov
rorl
loop
inc
sub
jecxz
mov
adc
mov
push
inc
dec
mov
test
xchg
mov
or
cmc
mov
out
rcll
xor
movsl
xlat
aad
adc
inc
fistpl
sbb
inc
mov
pusha
mov
push
mov
cwtl
xchg
xchg
cli
movsl
xor
mov
cwtl
jno
out
and
sar
and
dec
push
xchg
cmc
cld
mov
lods
push
xlat
loop
out
inc
mov
or
int3
movsl
mov
repnz
or
lock
lret
pop
dec
lret
jo
gs
mov
rcr
ret
adcb
adc
or
xchg
fwait
jmp
nop
add
add
ljmp
xchg
aam
testb
fldt
lods
jae
jno
test
mov
inc
push
fistl
jecxz
hlt
xchg
and
lret
and
add
shlb
sarb
sub
shlb
xorb
lock
lahf
sbb
dec
adc
fwait
dec
loopne
jae
or
ret
test
xchg
test
push
arpl
push
and
insl
les
xor
psadbw
mov
fildl
shrl
das
leave
mov
cmp
inc
lahf
jle
lahf
fiaddl
cmp
gs
sbb
mov
fwait
aas
es
lea
jge
aam
and
cld
aaa
stos
sbb
aaa
push
inc
jnp
scas
stc
mov
mov
lods
push
insb
jae
mov
xchg
jne
push
jne
les
cmpsb
fwait
jno
pop
inc
daa
inc
cs
xchg
push
arpl
mov
scas
cmp
jae
mov
mov
xchg
dec
in
out
dec
inc
movsl
sub
add
mov
push
andl
es
popf
mov
or
js
mov
sbb
xchg
sub
mull
dec
sbb
aaa
cmp
xor
sbb
fs
cmpsl
push
xchg
lret
ret
bndstx
pop
xchg
jmp
mov
scas
test
testl
mov
sbb
mov
ss
sbb
adc
cmc
repnz
fstpl
scas
dec
sub
cltd
jle
mov
aaa
lahf
xchg
pop
push
dec
inc
call
jb
pop
jg
pop
or
mov
push
cld
cmp
fildl
push
fsubs
int3
adc
in
leave
rcr
dec
lahf
movsb
xchg
outsb
mov
lcall
mov
hlt
push
or
mov
test
sub
jmp
ret
lods
clc
push
orl
xchg
mov
fmull
jns
sbb
cmc
push
push
popf
pop
add
sbb
outsl
xchg
mov
and
sub
outsb
ret
pop
shll
dec
xchg
popf
push
fcoml
inc
push
clc
mov
in
fists
std
scas
push
jle
add
mov
jbe
cmp
jae
pop
push
pop
lret
mov
test
push
mov
bound
fwait
stos
or
pop
xor
movsl
push
sub
adc
div
rcll
call
fsts
adc
popa
shlb
pop
pop
repz
inc
adc
add
xlat
pop
out
outsl
out
aam
sbb
cli
jne
sub
xlat
cmp
cmp
lret
pop
jp
pop
push
or
jle
mov
cwtl
cld
mov
nop
dec
dec
jl
jnp
mov
adc
test
enter
fcompl
jbe,pn
test
repnz
jne
jbe
mov
dec
lcall
xchg
mov
push
shl
jns
decb
add
cmp
mov
fadd
mov
insl
add
cmp
cmpsl
lds
jae
pop
fucomi
lret
inc
fisttps
and
fs
jae
jne
and
add
ljmp
test
add
xchg
mov
into
dec
sub
aaa
stos
btc
outsb
pop
sub
pop
xlat
mov
fmull
pop
sbb
sbb
aas
pop
jl
out
xor
shlb
add
and
test
jo
aad
scas
push
sub
mov
imul
movl
xor
mov
icebp
mov
sbb
or
pop
insb
je
jp
icebp
sbb
jp
or
and
mov
jbe
adc
pop
sub
or
push
aas
sbb
imul
mov
jo
jb,pt
xor
js
int3
inc
mov
pop
inc
mov
push
jl
stos
les
sbb
pushf
shlw
hlt
mov
in
push
push
mov
test
sub
pop
mov
mov
out
ret
jne
psubw
iret
inc
sub
jae
mov
mov
jae
cmpsb
mov
xchg
jbe
mov
imul
jo
mov
inc
and
xchg
les
and
mov
ret
xchg
pop
daa
cmpsl
movsb
pusha
test
push
xchg
into
aas
pop
xchg
cmp
sbb
inc
inc
mov
jp
mov
xor
jns
push
dec
lock
test
mov
addl
insb
add
dec
mov
inc
daa
cmp
ljmp
in
mov
add
sti
insb
cmp
mov
adc
jnp
int3
jp
jle
cmpsl
adc
mov
dec
mov
push
fdivs
arpl
xchg
insl
lods
insb
fstp
rcr
mov
es
jnp
xchg
loope
dec
outsl
dec
pusha
pop
sub
jle
int
mov
gs
push
ss
jne
cwtl
cmpl
xor
mov
add
pop
xor
pop
mov
stos
orb
xchg
jnp,pn
int
daa
adc
xor
pop
push
aas
jge
inc
mov
sbb
xchg
out
cwtl
cmpsb
inc
negl
icebp
sub
dec
aad
loopne
inc
outsb
cwtl
leave
xchg
push
jns
adc
adc
sbb
sbb
orb
cmp
mov
movl
pop
or
jno
adc
mov
lods
cmp
rorl
or
sub
sub
hlt
mov
mov
jbe
ret
inc
aad
xchg
jbe
push
fwait
pop
sti
fwait
inc
xor
push
aas
mov
ljmp
shr
or
clc
movsl
mov
push
pop
push
dec
sahf
adc
jb
push
stos
call
in
fsubrl
dec
js
mov
xchg
mov
hlt
jl
ret
dec
jmp
jns
pop
stos
insl
cmp
fistl
cs
dec
or
jge
repnz
push
push
push
cltd
fldl
pop
enter
push
repz
in
jge
cmpsb
outsl
lds
sbb
jns
pop
sub
cmc
jecxz
sbb
das
push
outsl
mov
mov
xchg
aas
je
pop
add
cmpsb
pop
mov
dec
dec
mov
push
mov
pop
scas
cli
dec
loopne
in
enter
addr16
out
pop
repnz
xor
leave
inc
cmp
sub
outsl
pop
rcll
mov
in
imul
push
jmp
add
sub
popf
inc
test
fcmovne
out
mov
das
mov
aad
dec
les
mov
enter
adc
fsubrs
pop
mov
mov
in
sbb
lods
pop
or
imul
stos
repnz
imul
sub
pop
arpl
or
mov
pop
add
scas
pop
mov
sub
dec
pushf
imul
jno
jno
pop
inc
lods
lret
sub
cmp
ss
les
loope
cmp
add
jnp
push
ret
fs
mov
sbb
inc
pop
bound
pop
ljmp
xchg
aam
cltd
cli
mov
dec
js
xor
cmpl
insb
pop
insl
jp
mov
mov
mov
sbbl
int3
in
lea
call
inc
mov
cmpb
mov
sbb
push
idiv
lods
gs
mov
pop
jecxz
in
jmp
mov
or
aas
mov
movaps
in
in
mov
or
mov
cmc
arpl
mov
or
fwait
push
cwtl
pusha
jae
cwtl
mov
pusha
add
sbb
add
cmp
ds
dec
lods
jp
xchg
bound
dec
loopne
lret
add
pop
xchg
jbe
push
xor
cwtl
or
mov
adc
aam
adc
stos
rcrb
and
xchg
ljmp
pop
adc
xor
ret
sbbb
fdivrl
fcomps
pop
in
mov
mov
or
pop
mov
mov
jp
add
cld
jmp
sbb
push
stos
jb
test
sbb
and
or
imul
cmpsb
fs
push
out
xor
cmc
pop
adc
xchg
pop
les
sub
mov
fwait
pushf
movsl
xchg
fisttpl
xchg
dec
mov
ret
in
int3
xchg
and
xchg
adc
inc
test
in
aas
pop
mov
mov
js
rorl
or
lret
stos
sub
fiadds
and
or
sub
xor
ja
fwait
cmp
cmpsl
xchg
bound
mov
jmp
dec
pushl
mov
sub
jmp
mov
shlb
pop
movsl
jl
rorl
shlb
or
sbb
or
out
add
mov
mov
imul
inc
mov
lahf
inc
and
lods
lret
test
mov
push
test
xor
cmp
fistpl
mov
mov
arpl
xor
lea
xchg
outsl
and
push
pop
adc
clc
cli
faddl
es
sar
cmpb
push
xor
adc
sti
jbe
xchg
adc
dec
ja
pusha
fldl
stos
and
ds
mov
sbb
ds
inc
mov
pop
jns
mov
dec
lahf
cmp
stos
sub
mov
in
sbb
sahf
lret
fdivl
cmpb
jbe
and
dec
add
and
enter
cmpl
inc
ret
iret
mov
mov
sbb
sub
xchg
faddl
dec
add
xchg
mov
sbb
test
fdivs
outsl
scas
popf
fs
sub
lods
sahf
imul
testb
lcall
jp
mov
out
dec
dec
into
sbb
and
aad
repz
ss
inc
mov
jbe
push
in
xchg
lods
cmp
push
and
pop
xchg
pusha
les
cmp
std
pop
fs
fbld
cmp
ret
addr16
lret
sarl
nop
fucompp
sub
pop
clc
sub
dec
enter
out
sbb
jle
inc
dec
lea
mov
loop
jo
ds
inc
adc
icebp
mov
sahf
in
push
mov
popa
mov
fnsave
adc
leave
gs
ljmp
sti
out
and
addr16
adc
fistpll
incb
sub
and
ret
cmpsl
mov
subl
adc
jg
cld
jge
sbbl
ljmp
jg
jp
repnz
sub
mov
cmovge
push
mov
fwait
iret
lods
lcall
push
std
pop
pop
sahf
xor
lret
pop
insl
aad
out
pop
and
in
push
jmp
and
mov
mov
pusha
mov
hlt
pop
push
sti
mov
mov
xor
and
sub
push
test
cltd
mov
ds
pushf
insl
push
lods
in
fisubrs
mov
push
push
lods
and
jns
or
mov
outsl
cltd
push
push
subl
jle
mov
cwtl
testb
lock
adc
enter
int
stc
fwait
adc
and
adcl
js
shrl
dec
mov
mov
inc
mov
and
dec
dec
jno
adc
jne
push
sub
call
ret
adc
filds
add
jnp
fs
pop
inc
test
test
sub
movsb
orb
dec
sub
inc
jmp
in
jo
mov
jle
cmp
dec
and
mov
fstpl
mov
adc
pusha
jg
mov
dec
nop
push
ret
sbb
inc
jmp
icebp
sti
xchg
enter
cs
add
lahf
lret
mov
add
je
dec
sbb
int
movsl
inc
nop
ficoml
sbb
xchg
das
cmp
and
push
mull
jp
sarl
and
jno
push
mov
push
jne
cmp
sahf
cwtl
aam
test
cmp
lods
shrb
xchg
mov
adc
pop
and
add
jae
dec
mov
jmp
stos
shl
mov
sub
xchg
idivb
cs
inc
adc
mov
push
jbe
sub
sbb
ret
fdivr
mov
cld
lret
adc
lret
pusha
fsts
cmpsl
push
jl
push
dec
stos
sub
aam
aaa
adc
jne
and
adc
in
ss
and
jae
cmp
dec
sbb
mov
movsb
jnp
or
rcrb
or
inc
icebp
stos
jl
inc
adc
stos
sub
pop
lret
in
scas
mov
sarb
stc
lods
jb
lahf
mov
xchg
sub
push
rorb
cmp
xchg
mov
cmp
adc
adc
inc
cmp
test
push
out
test
repz
pop
pop
mov
push
cld
sub
popl
push
lds
in
loop
cmp
push
pop
sbb
test
in
jnp
clc
repz
inc
pop
pop
outsl
push
mov
sbb
push
xor
mov
add
cmp
lods
add
clc
lock
or
push
repnz
xchg
iret
push
out
xchg
lods
inc
add
xor
sub
orl
loopne
adc
js
push
fidivl
arpl
jg
imul
movsl
shll
iret
push
and
insl
in
mov
sarb
mov
lcall
sub
test
arpl
mov
arpl
gs
dec
mov
push
nop
jno
addr16
inc
mov
push
rcrl
mov
jp
dec
sub
stc
es
lret
inc
mov
rorl
sbb
int
aam
aaa
xor
mov
gs
mov
ret
jmp
xor
int3
cli
xchg
ds
stc
iret
movsl
mov
mov
or
call
aam
sti
cwtl
fisttps
push
ds
into
stc
cmpsl
jmp
inc
pop
mov
in
jns
and
sub
mov
pop
mov
mov
hlt
push
mov
fiadds
jmp
lret
mov
test
leave
mov
and
aad
sahf
repnz
pop
cs
jmp
sbb
add
test
scas
imul
jp
scas
jecxz
xor
gs
or
adc
stos
shrl
ror
jns
cli
ret
repnz
inc
into
imul
xchg
mulb
fwait
pop
movsl
fmuls
adc
or
and
shll
fsubrs
xchg
jg
rcr
dec
std
xchg
jl
ss
dec
jbe
sbb
xor
xchg
outsl
rorl
or
lahf
xor
inc
lea
sub
cmpsl
or
les
xorb
lods
fidivl
cmp
fs
movsb
sbb
xchg
jge
inc
aaa
loopne
addr16
mov
vmread
aaa
add
mov
push
mov
ja
je
js
and
lret
inc
dec
cmp
push
scas
popa
cltd
cwtl
sbb
adc
mov
rcrb
jno
dec
scas
sbb
out
or
in
push
inc
xchg
sbb
mov
bound
lds
shll
mov
add
xor
shll
loop
mov
or
mov
sahf
add
sbb
or
lret
xor
and
out
mov
enter
push
leave
fdivr
fsubs
sbb
adc
int3
add
add
cmpsb
add
jnp
out
xor
sbb
enter
ret
adc
idiv
lock
gs
loop
xor
lret
mov
jbe
fwait
fwait
pop
mov
enter
imul
push
jge
pop
or
in
push
mov
dec
ja
out
orl
xor
stos
add
imul
clc
imul
insl
jle
xchg
xchg
out
jnp
jge
pop
xor
fwait
and
sub
xchg
fwait
mov
push
fists
lock
sbb
mov
xlat
jo
test
sub
out
fcomps
test
pop
subl
adc
or
mov
pop
push
xchg
std
icebp
add
jo
jge
mov
test
add
cli
loopne
mov
loope
into
pop
pop
and
push
push
cmp
mov
push
pop
dec
dec
int
sub
mov
popf
lock
pop
mov
mov
and
add
jne
roll
and
mov
mov
xlat
pop
xchg
dec
or
lahf
mov
into
xchg
aad
pop
ss
lahf
adc
xchg
sub
fcoml
clc
mov
jo
adc
addr16
add
mov
in
fisttpl
jecxz
jno
cmp
dec
inc
popa
out
inc
pop
fcomip
or
in
cmp
inc
mov
push
lods
mov
aaa
loop
enter
test
mov
icebp
mov
push
je
pop
xor
push
jbe
ljmp
int3
scas
jecxz
aam
roll
push
add
push
int
jmp
repnz
mov
adc
mov
inc
lds
mov
dec
adc
adc
cmpsb
aad
pcmpgtd
mov
daa
int
cs
into
push
push
inc
adc
cmp
jle
lock
or
insb
dec
push
das
xor
icebp
dec
addr16
pop
call
call
inc
sub
mov
stos
jl,pt
and
data16
sub
jge
xor
hlt
cwtl
sbb
xor
cltd
cli
fisttpl
mov
xchg
mov
scas
call
pushf
xor
repz
cmp
add
pop
inc
dec
std
aas
jo
adc
shrl
rol
scas
xchg
stos
push
repnz
pop
dec
lock
test
jo
push
and
sub
cmovle
int
xor
sahf
adc
sub
dec
mov
xor
xchg
mov
dec
insl
mov
in
ret
jmp
mov
das
mov
scas
in
xchg
cmpsl
xor
mov
cmpsl
je
adc
pop
xchg
movsl
sbb
push
or
mov
cmpsb
cwtl
flds
add
sub
jl
or
sti
cld
jb
into
sbb
push
in
dec
ds
inc
test
dec
dec
and
xlat
sti
mov
stos
pop
jp
sub
adc
popf
loopne
idivl
lcall
mov
js
je
adc
dec
outsl
int
stc
cmp
inc
adc
stos
jecxz
jns
push
stos
add
xchg
cmp
outsb
inc
sub
add
or
pop
mov
mov
pop
cmp
mov
mov
mov
out
xchg
mov
jg
enter
stos
lds
mov
sub
mov
jmp
push
f2xm1
mov
jmp
cld
pop
ds
stc
popa
push
mov
pusha
lret
mov
sub
loope
pop
jl
ret
mov
ret
xchg
dec
jno
cmp
mov
jg
inc
fcoml
scas
out
mov
and
jno
mov
mov
fildll
cmpsb
ret
push
jl
out
sbb
pusha
jle
fs
dec
repnz
jle
fcmovnu
jnp
cmpsb
outsl
or
outsb
sbb
jmp
into
xor
lods
mov
push
mov
outsl
dec
popa
sub
jecxz
jg
cmp
xor
out
mov
pop
mov
imul
fisubrl
mov
xchg
push
jae
imul
dec
test
aaa
aad
jo
xlat
inc
testb
push
fwait
stos
push
cmp
fcomp
movsl
sub
xchg
sub
test
pop
sub
jns
mov
inc
cwtl
push
ljmp
xchg
push
mov
faddp
shrl
inc
xor
fcomip
lea
add
inc
mov
mov
mov
mov
xchg
mov
xchg
lret
test
push
aas
inc
and
int3
fistpl
scas
sbb
das
hlt
ss
pop
mov
jb
and
jecxz
fsubrl
mov
sarl
jecxz
cwtl
mov
fidivs
mov
out
stc
pminub
xor
rorl
jbe
leave
and
cmp
add
adc
inc
movsb
mov
pop
push
and
aam
mov
fmuls
insb
fwait
jnp
lahf
movsl
mov
aas
sub
cwtl
insb
pop
push
cmp
push
jns
jbe
fwait
xor
mov
adc
or
jp
cmp
in
pop
fidivs
inc
xchg
and
stos
in
mov
adc
pop
mov
xlat
insl
mov
inc
outsb
adc
sahf
js
jl
loope
mov
ficoml
push
cs
sbb
lea
add
bnd
out
arpl
in
pop
aaa
mov
outsb
pop
mov
or
decb
mov
dec
pop
call
xchg
or
fbld
inc
dec
inc
fistps
adc
nop
pop
jmp
pop
jmp
cld
add
fdivrs
sti
je
popa
pop
mov
add
sub
rcll
xchg
rcr
imul
xchg
or
loop
pop
push
add
fnstsw
int
fbld
mov
jp
pushf
inc
add
negl
cmp
cmp
mov
cld
movsl
jb
movsl
aas
mov
ret
ret
pop
pop
cmp
clc
enter
adc
pop
aam
xor
push
fdiv
xlat
inc
fisubrs
sub
pop
jae
sbb
aaa
push
fadds
cmp
push
stos
pop
pop
jbe
add
mov
jp
popf
in
xor
pop
out
push
dec
daa
test
ret
adc
cmp
push
out
pop
mov
test
jbe
sbb
pop
pop
cmp
pop
out
and
lock
jmp
sbb
mov
inc
dec
out
fldenv
sub
lods
xchg
cmc
mov
mov
aas
push
jae
jmp
fsubrp
cmova
mov
inc
out
mov
jno
sbb
fwait
xor
adcb
pop
push
adc
cwtl
xchg
mov
pop
ljmp
xchg
cmpsl
jecxz
mov
xor
aam
mov
loop
sub
sbb
or
in
enter
sbb
sbb
mov
scas
inc
cmpl
mov
mov
inc
icebp
test
mov
add
lret
cmpsb
mov
cmpb
lods
scas
xor
pop
or
lods
loop
icebp
xchg
std
dec
lret
xchg
shrb
lds
xor
adc
mov
cwtl
mov
adc
cli
sti
mov
pop
imul
rcll
popa
std
ret
mov
in
add
stos
or
add
das
outsb
aam
pushl
clts
fldl
push
sbb
and
shr
or
jl
enter
pop
mov
ret
arpl
sub
sahf
xorl
ds
popf
les
rol
testb
xlat
ss
sbb
xchg
iret
mov
stc
insl
insl
pop
iret
inc
shrl
xchg
adc
mov
rclb
pop
lret
insl
sti
lahf
insb
insb
hlt
inc
push
pop
in
mov
ss
popf
push
mov
mov
stos
dec
fcomps
outsb
sahf
inc
lods
testl
push
adc
cltd
lret
out
ljmp
push
pop
aad
imul
or
loope
ja
adc
fwait
movsb
test
and
mov
daa
cpuid
sub
mov
push
jp
into
mov
mov
in
xchg
jbe
fsts
sbb
imul
mov
inc
xchg
aas
inc
adc
lds
jno
stc
xchg
xor
mov
cmp
je
pop
mov
icebp
xor
dec
xchg
es
xchg
fwait
std
int
cli
outsb
cmp
sbb
inc
jbe
sbb
aas
push
pop
popa
psrad
mov
mov
mov
inc
cmp
out
dec
and
out
jg
js
aas
adc
imul
nop
cmp
fsts
mov
iret
subb
and
test
aad
jg
push
mov
add
pusha
mov
inc
dec
jle
xchg
lea
sbb
pop
cs
mov
or
cmpsl
test
inc
movsl
mov
mov
test
rorl
mov
int3
lock
testl
cmc
test
jge
jmp
dec
decl
lds
lds
icebp
inc
xor
inc
or
pushf
std
mov
subb
fimull
add
test
or
dec
pop
ja
add
adc
rcr
orps
inc
jae
jp
or
jle
lcall
imul
mov
test
pop
scas
xchg
insb
adc
idivb
push
out
lahf
cmp
sub
out
mov
mov
mov
pop
pop
js
xchg
and
push
popf
cli
jecxz
jg
je
push
xor
fildl
jmp
jae
ret
xor
fldcw
sbbb
sub
pop
mov
sbb
repz
and
xor
jns
cld
notb
or
ficoml
es
out
out
fstpt
loop
mov
dec
rol
imul
mov
sahf
fwait
mov
inc
mov
ret
dec
jno
adc
xchg
pop
dec
insl
push
and
mov
jnp
div
ja
andb
jae
mov
lock
ss
out
mov
adc
sti
push
inc
dec
sahf
add
push
stc
data16
mov
scas
lods
push
sbb
pop
inc
fdivr
dec
mov
sub
or
push
xchg
sub
sahf
jae
mov
sti
imul
dec
add
pop
in
mov
jno
cmp
std
aad
and
add
mov
sub
jmp
dec
ljmp
and
sbb
aaa
repz
mov
sbb
aam
loopne
jb
mov
push
imul
cmpsb
or
je
pop
xchg
ret
ljmp
call
sub
sarl
mov
add
dec
jl
iret
inc
adc
imul
pop
mov
pop
lret
xchg
add
fstpt
in
mov
xlat
jmp
push
sbb
outsb
adc
adc
or
in
es
cmpl
add
ss
es
jns
pop
mov
sub
subb
incb
daa
in
fs
enter
repz
mov
jg
gs
mov
fcomp
in
add
dec
les
adc
iret
into
aaa
insl
mov
andb
and
insl
sarl
lea
cli
std
sbbb
sbb
sbb
lahf
mov
jmp
cmpsl
sub
pop
pop
cmc
add
mov
push
jns
movsl
sub
das
push
retw
pusha
aaa
aas
adc
leave
jae
mov
push
ds
movsl
pop
and
out
and
mov
xor
sbb
call
rol
ljmp
and
dec
mov
sbbl
xorb
sbb
pushf
scas
std
add
stc
hlt
lcall
push
sub
stos
add
push
in
loopne
rcrb
mov
fmulp
xor
xor
mov
inc
sbb
lock
iret
stos
arpl
mov
or
jbe
sarl
mov
push
shrb
or
rorl
add
insl
loope
jmp
or
movsl
or
xor
push
js
cmp
fnstsw
mov
adc
push
and
add
mov
je
jo
push
hlt
std
in
lret
rorb
pop
xorl
add
loope
mov
aas
mov
jmp
rorb
lods
aam
xchg
mov
jecxz
mov
loop
incb
or
push
xor
xorl
xbegin
dec
mov
rcll
sbb
pop
mov
cmp
scas
mov
and
sar
testb
outsb
xchg
orb
pusha
xor
loope
jl
mov
ficomps
aam
loopne
test
sbb
inc
in
xor
push
inc
xchg
mov
imul
mov
sbbl
arpl
or
jp
out
adc
int3
in
cmp
push
icebp
sarl
jmp
int3
rol
mov
notl
ljmp
aas
mov
xchg
out
jge
pop
out
pop
sbbl
lret
lcall
cmp
shll
test
adc
sar
push
lods
pop
subl
aad
and
cli
aam
or
out
cwtl
and
inc
je
mov
rcrb
mov
test
into
xor
pop
cmp
lea
icebp
stc
cmpsb
sub
xchg
push
jge
sbbb
push
add
cli
mov
add
inc
shll
enter
mov
mov
jg
jle
mov
and
push
xlat
sti
xchg
orb
fs
fnstcw
imulb
inc
cmp
cmp
and
shl
mov
outsb
pop
and
stos
inc
lahf
pop
cmp
dec
daa
or
test
in
cld
lock
xor
cmp
jae
pop
out
mov
jecxz
stc
mov
fnstcw
daa
into
pop
fs
dec
out
pop
add
push
ret
insb
mov
fs
inc
in
sub
sbb
sbbb
mov
subb
test
mov
lods
mov
pop
or
dec
out
jo
aaa
add
ret
xor
xor
cmp
jge
push
out
jno
xchg
ja
test
pop
sarb
xlat
adc
dec
mov
jnp
mov
js
inc
mov
je
xor
mov
fwait
lret
cli
pop
dec
and
mov
push
sub
xchg
fcomps
negb
daa
mov
fwait
xor
add
cmp
xor
dec
mov
rorl
push
rorl
sbb
int3
in
xchg
jl
jecxz
pop
ffree
push
fucomi
jno
lock
mov
or
and
xor
or
test
das
sub
cmpsl
cmp
icebp
sub
jecxz
int3
aam
push
push
shr
pop
imul
push
mov
lret
cltd
call
mov
pop
call
adc
repnz
lods
out
lods
push
dec
mov
aam
in
mov
jp
ret
jns
jg
pop
sbb
mov
push
mov
inc
leave
sub
xchg
stos
adc
lods
into
roll
xchg
es
add
ljmp
add
pop
xlat
sub
out
cs
in
jmp
ljmp
mov
cltd
cmp
mov
mov
add
clc
dec
in
xor
add
mov
lods
cmp
lcall
mov
sbb
and
pop
stos
mov
into
xchg
and
push
mov
insl
daa
je
mov
das
xchg
adc
cli
out
xor
sbb
push
sub
imul
aam
and
in
pusha
loope
ljmp
popa
pushf
add
out
pop
mov
leave
lds
mov
cwtl
fwait
dec
lods
or
or
mov
into
add
push
cmovle
cli
sub
nop
adc
sub
in
jge
mov
or
cltd
cwtl
test
inc
pop
ret
sub
jmp
in
sub
add
std
in
adc
push
or
scas
mov
mov
cltd
pusha
adc
dec
adc
inc
lcall
fcmove
and
std
mov
mov
ret
out
xchg
out
xor
test
fmuls
into
mov
mov
outsb
leave
enter
cmp
jno
jp
lahf
mov
cwtl
adc
shll
test
push
addb
mov
push
mov
pop
xor
stos
loope
mov
pop
movsb
jecxz
xchg
dec
lods
cmc
rorb
and
cmp
out
sub
loopne
repnz
ror
inc
push
fdivl
std
andl
lcall
test
xchg
ss
xchg
jne
test
sbbb
loope
add
loopne
repnz
mov
lret
fistpll
scas
dec
movsb
and
pop
fdivrl
jbe
mov
std
dec
addr16
and
and
dec
mov
xchg
dec
addr16
stc
fsubl
call
mov
sub
jecxz
pop
rol
mov
mov
sbb
pop
or
in
cli
sub
sbb
mov
pop
inc
and
inc
fs
pop
popf
jg
xchg
xchg
lret
adc
jmp
in
in
mov
lret
push
pop
vmptrst
sarl
mov
subl
jl
das
movsb
jl
and
insl
xlat
xor
fstl
sub
enter
push
aaa
rolb
and
test
xor
loope
sbb
outsl
xor
nop
pop
jg
test
lods
jo
push
aam
xchg
or
dec
cmp
pusha
nop
stos
ss
or
cmp
or
ljmp
inc
jns
ficoms
pushf
movsb
cltd
and
icebp
pushf
or
and
xor
mov
dec
outsb
call
mov
in
inc
push
es
mov
test
push
lahf
sbb
push
sbb
sub
cmp
mov
pop
iret
das
add
std
adcl
cmp
jl
mov
clc
fstp
jbe
mov
int
dec
aaa
dec
loope
sti
sub
outsb
or
sti
mov
insl
jb
ss
test
lods
add
adc
sub
rorb
jne
rcll
xor
stos
mov
mov
cwtl
cmp
adc
and
test
cwtl
mov
cmp
jae
stos
fwait
lods
pop
std
push
iret
xor
inc
aam
xchg
or
sub
pop
push
pop
or
sub
xor
pop
sbb
loopne
mov
cmp
jmp
cmp
lret
in
pop
cmpsb
lods
bound
push
inc
mov
xchg
cld
jg
xchg
repz
adc
repz
sbbb
sub
scas
lcall
in
fiadds
ret
pop
inc
xor
iret
insl
xchg
mov
jae
stos
pop
leave
pop
mov
movsb
in
rorb
xchg
or
insl
test
int3
or
in
fidivrl
push
push
jno
dec
and
lods
jns
bound
or
or
hlt
mov
pop
in
xor
mov
inc
mov
push
fstpt
out
lahf
aaa
ja
inc
xchg
shl
aas
adc
mov
lea
cmpsl
sbb
rcrb
inc
loopne
test
orl
icebp
add
popf
xor
fwait
or
mov
pop
dec
fcoms
sbb
xor
bound
adc
xor
in
cwtl
out
and
sub
dec
inc
aam
shlb
loope
popf
aaa
xor
push
dec
xor
adc
repz
jnp
in
jecxz
icebp
int3
test
iret
or
sets
xlat
xlat
insb
add
jmp
inc
enter
add
clc
cs
cmp
outsl
hlt
jp
mov
cli
incb
cmp
mov
scas
xor
jo
or
jns
enter
shll
add
pop
ljmp
push
and
repnz
sbb
cmp
cmpsb
lods
dec
cmc
adc
imul
repz
push
mov
insb
pop
jb
cmpsb
rolb
mov
sub
mov
in
pop
jne
cmp
pop
jbe
outsb
jp
scas
stos
lahf
arpl
sbb
loope
lods
sti
xor
je
xchg
inc
cmc
xor
pushf
roll
inc
mov
repz
js
jae
cmpsl
xchg
mov
pop
and
aad
lds
mov
xchg
mov
jmp
xor
push
clc
es
and
shr
xor
ret
je
fs
sbb
inc
mov
loop
in
in
fdivp
stc
xor
cmp
dec
jmp
adc
cltd
lret
push
xlat
daa
sbb
xchg
addr16
inc
inc
cmpsl
cmp
xchg
inc
xchg
push
mov
adc
pop
cmc
jbe
fwait
gs
cmpsl
pop
fwait
xchg
mov
inc
scas
jl
shl
bound
mov
cs
int3
lret
fistps
inc
sbb
pop
jbe
lds
int
xchg
and
clc
rorb
mov
test
pop
mov
xchg
leave
jo
xchg
rcrl
fisttps
lock
push
jbe
test
ret
pusha
sub
push
xor
jnp
and
sub
daa
mov
add
mov
sti
jno
dec
adc
inc
add
call
imul
and
mov
loopne
add
cmpsl
and
jl
js
rcrb
enter
pop
je
outsb
mov
mov
and
loop
nop
cmp
arpl
lods
add
add
rcrl
cmp
jne
cli
nop
jnp
popf
enter
adc
fldt
jae
pushf
stos
and
add
or
loope
adc
shlb
sbb
mov
adc
add
pop
xchg
jnp
inc
dec
inc
mov
out
icebp
push
xchg
sub
cs
ret
ja
loop
push
lcall
sarb
call
push
stos
ret
adc
pushf
insl
test
pop
pop
dec
outsl
leave
mov
jns
fildll
ds
dec
jecxz
jl
scas
jle
mov
mov
dec
lcall
dec
pop
mov
sub
push
lret
leave
add
int
sbb
xor
adc
add
fistl
cmp
aas
inc
push
mov
outsb
mov
rorl
jle
leave
lods
rcl
cmp
pushf
cmp
mov
inc
pop
add
cmp
cmpsb
int3
mov
dec
insl
xor
mov
out
cmpsb
sub
scas
xchg
inc
dec
leave
sahf
fcmovnbe
dec
xchg
insb
test
mov
xchg
call
push
push
sarb
jmp
testl
ja
into
imul
nop
loopne
sbb
sbb
mov
stos
popa
and
xor
divb
and
cs
scas
adcb
push
mov
push
fcom
setns
jge
sbbb
add
and
fwait
pop
push
add
ss
cmpsb
notl
shll
sub
adc
sahf
mov
addr16
and
nop
mov
cmpsl
pop
xor
imull
and
jnp
shr
fisubl
in
lock
pop
mov
cmpsb
fdivrp
fs
adc
mov
mov
in
dec
cmp
adc
clc
cmpsb
out
xor
dec
or
pop
stc
mov
and
leave
aam
je
in
jg
sbb
xor
push
jg
out
movsl
cmp
jge
xor
inc
xlat
sub
les
roll
stc
in
jg
sub
cmp
fs
and
pop
sbb
lahf
jae
xlat
into
fwait
xor
xchg
dec
into
lea
dec
lods
mov
push
jl
push
fucom
pop
mov
sbb
scas
mov
inc
ret
jg
push
inc
iret
pushf
fmul
cmp
insb
pop
pop
out
add
mov
pop
and
sti
sub
cwtl
push
aaa
inc
cmp
gs
mov
call
jbe
dec
push
in
cmp
lahf
xor
outsb
xchg
mov
in
pop
push
push
inc
ss
clc
lcall
mov
sub
sbb
mov
add
push
pop
ss
ds
stc
data16
in
aad
pop
int3
mov
out
xor
lds
cmp
inc
sub
xchg
mov
lcall
sub
aam
xchg
mov
jno
call
mov
inc
and
sub
test
xchg
mov
lahf
dec
imul
xchg
in
xchg
test
addr16
jne
adc
jmp
inc
pusha
mov
rcrl
cmp
lcall
sub
and
jle
addl
mov
xor
xchg
ret
fstpt
pop
inc
mov
mov
lods
cld
xchg
cmp
jb
ja
aad
jbe
dec
push
sarb
in
fs
stos
dec
jge
push
xor
add
dec
jg
aaa
or
jb
jne
and
out
test
jmp
jmp
sub
lcall
pop
pop
dec
and
insb
ret
or
iret
fcmovnbe
lret
push
mov
add
lock
lds
in
xorb
push
outsb
push
fistps
mov
testl
ret
dec
dec
sub
cli
fwait
push
and
jecxz
es
jmp
pop
xor
sub
xor
xchg
leave
sub
out
dec
or
les
xchg
int
lods
mov
nop
mov
fisubl
loope
gs
leave
shr
sub
push
test
fists
inc
xchg
rcll
dec
xchg
sub
daa
mov
cmp
jne
cmp
rorl
and
cmpsl
push
movsb
sahf
nop
cmp
mov
mov
mov
push
lret
sub
pop
or
out
aas
and
mulb
push
or
or
pop
hlt
cmp
jl
xchg
or
push
add
imul
add
cmpsl
sti
push
lea
movsl
xchg
test
jns
insl
ljmp
adc
and
or
orl
daa
daa
enter
out
jne
rcll
jge
xor
ret
mov
jb
pop
xchg
stos
cwtl
adc
xchg
out
push
adc
test
jge
pop
outsl
push
ret
pop
pop
test
popa
ja
or
jno
imul
xchg
out
xchg
sbb
push
jg
daa
inc
lret
mov
stc
dec
test
mov
push
ret
scas
int3
or
mov
xchg
test
mov
shlb
xchg
adc
fildll
mov
or
mov
and
and
lods
lret
int
daa
and
or
cwtl
xchg
cmpsb
sub
cli
mov
cmp
pop
lcall
in
pop
sbb
pop
repz
and
push
imul
xor
xchg
push
sub
rolb
jne
gs
xor
push
or
insb
adc
xchg
aas
fwait
out
insb
xchg
xchg
push
or
add
mov
adc
adc
mov
pushf
call
add
and
mov
lds
xor
adc
aam
adc
js
xor
inc
aaa
lods
add
mov
lods
cmpsb
mov
dec
xchg
pop
push
xorl
xor
xchg
fsubrl
ficoms
xchg
jnp
sbb
movsb
scas
dec
cld
pop
inc
xor
dec
test
pop
negl
add
add
pxor
inc
dec
shlb
jbe
nop
lods
xchg
cmp
add
inc
sbb
out
repnz
out
xlat
jcxz
dec
mov
sub
cmp
cmp
add
sub
xor
lret
fistl
inc
mov
xor
xor
push
mov
popf
jle
loope
mov
pop
xchg
sub
inc
mov
das
mov
adc
mov
lods
out
cmpb
repnz
pop
add
lods
lods
mov
scas
lock
rol
leave
insb
stc
pusha
repz
and
jae
call
add
xlat
mov
lret
mov
push
imul
dec
rcl
aad
sub
jns
enter
aaa
or
and
nop
push
mov
int
jecxz
inc
and
xor
lods
std
stos
push
push
mov
ds
adcb
xchg
jb
inc
repz
and
sahf
add
popa
mov
fnstcw
cld
push
pop
orb
call
loopne
mov
outsb
lea
add
cltd
mov
lret
loop
lret
ret
sti
push
popf
xor
sub
cmp
or
push
cmpsl
stos
sbb
test
inc
pop
and
jbe
stc
mov
jnp
insl
inc
stc
pop
mov
lret
jle
cld
movsl
out
test
jecxz
popf
mov
pop
movsl
cmc
sahf
pusha
lret
dec
and
mov
cli
ljmp
sbb
pop
xchg
popa
pop
movsl
or
aaa
cmp
repz
stos
sbb
push
cmpsb
pop
pop
mov
inc
je
ret
sbb
out
push
fs
loop
mov
dec
popf
fs
in
sbb
push
push
cmp
jne
fldt
mov
xchg
dec
dec
inc
adc
mov
sub
mull
mov
pop
sub
pop
int3
dec
cltd
movsb
push
mov
jl
add
or
sub
out
push
add
inc
data16
aas
insb
xor
and
or
aam
add
icebp
lods
mov
sahf
popf
je
lock
mov
stos
les
int3
push
fldl
fldcw
or
int3
loopne
pusha
loopw
sbb
fisttpll
inc
mov
jle
imulb
xchg
xor
and
pop
adc
sub
jl
xor
xor
mov
jle
je
imul
inc
cmp
xchg
xor
repz
or
ss
sub
and
lds
jle
stos
jne
sbb
movsl
push
mov
imul
pushf
ds
xor
cmpl
lock
xor
fistps
xchg
test
or
std
jno
jmp
call
fs
ret
sahf
pop
fstpt
jp
mov
sbb
cmc
or
dec
fs
loope
lret
in
ret
sahf
aam
mov
cld
xchg
dec
mov
inc
push
pop
cli
loopne
or
inc
and
stos
out
ds
in
icebp
pop
mov
or
xchg
xchg
in
jle
pop
es
icebp
sbb
enter
push
scas
mov
xchg
lret
jecxz
sbb
jo
mov
sbb
in
mov
push
mov
dec
xchg
jo
sti
dec
mov
shll
xor
mov
fsubr
xchg
add
mov
xchg
pop
aaa
mov
insb
adc
cmp
sti
mov
repz
or
jl
add
and
add
mov
imul
out
cmp
add
mov
clc
dec
sub
xor
sbb
inc
pop
repz
andl
sub
push
and
jne
movsl
xchg
subb
icebp
arpl
push
frstor
leave
gs
insl
ds
jb
adcb
fwait
ret
jle
jle
push
cld
dec
insb
push
aas
nop
adc
push
pushf
mov
mov
mov
dec
push
mov
testl
outsl
jae
jle
popa
daa
push
push
ret
ljmp
nop
and
mov
addr16
mov
jg
js
or
xchg
sub
pop
add
mov
dec
hlt
rol
xlat
popl
out
jb
int3
mov
mov
sub
and
xchg
adc
and
jae
mov
sbb
gs
mov
pop
xchg
jmp
push
stos
pop
mov
imul
pminsw
loope
cld
xor
lahf
or
es
das
or
jge
adc
jecxz
xlat
rclb
pop
insl
sti
mov
adc
jae
mov
es
mov
push
mov
sub
pop
loopne
lea
dec
mov
mov
pushf
xchg
xor
daa
orl
or
sub
imul
sub
mov
inc
and
or
jns
xor
loope
mov
or
ljmp
pop
sbb
nop
add
mov
jb
jo
mov
mov
bound
and
sub
lods
inc
leave
in
and
icebp
xor
lahf
loopne
push
inc
and
call
lea
daa
fstl
jb
pop
pop
addl
popf
out
mov
mov
xor
repnz
cmp
hlt
lock
sub
call
ror
cmc
rol
inc
cmpsl
adc
stos
movsb
int3
dec
shl
movsb
scas
or
test
enter
arpl
push
pop
clc
lods
mov
leave
outsb
test
loope
mov
jge
ror
xor
stos
rolb
inc
scas
mov
pop
and
scas
fisubrl
lock
or
movsl
push
ficomps
xchg
rclb
sub
xchg
and
das
xlat
mov
mov
pop
mov
jle
add
pushf
xor
lea
sti
mov
xor
int
dec
lahf
bound
mov
jmp
xchg
jmp
push
ds
jg
sbb
push
lds
lods
jbe
mov
dec
inc
test
inc
fbstp
std
dec
lahf
fwait
adcb
add
and
and
scas
scas
cmp
inc
rclb
daa
xor
imul
mov
xchg
notl
sub
dec
in
mov
cmpsb
je
jo
sub
test
leave
pop
dec
add
sub
cli
pop
out
jmp
sbb
xorb
pushw
sahf
push
jl
adc
imul
adc
cli
les
jge
aam
add
push
and
lcall
movsl
push
cmp
subb
sub
or
xchg
mov
mov
adc
inc
sub
lea
icebp
cmpsl
mov
jg
fxch
jns
adc
dec
aas
frstor
dec
ljmp
or
inc
je
cs
loope
dec
cmpl
sti
dec
sbb
sub
lods
loop
in
jno
sti
dec
iret
mov
faddl
loopne
jl
ja
loop
cwtl
pop
xlat
cmpsb
inc
sbbb
pop
and
jb
mov
push
inc
inc
ja
and
pop
stos
hlt
je,pt
or
mov
cmp
in
inc
xchg
or
pop
xchg
xchg
insb
insl
sbb
sbb
int3
sti
xor
jo
dec
rorb
adc
push
and
ret
mov
and
aam
std
fidivrs
stos
push
xor
rclb
jne
mov
aad
cmpsl
cmpsb
and
or
push
or
push
imul
pop
jl
lods
outsb
cmc
adc
fisttpl
jle
into
addr16
jo,pn
mov
out
in
sub
aam
add
scas
pop
aam
les
lret
outsb
xchg
add
mov
aad
lds
movl
push
imul
inc
sub
xchg
cmp
dec
adc
push
push
repz
aas
call
movsl
xchg
xchg
push
push
scas
dec
sbb
rcll
sbb
and
aaa
xor
aam
out
aam
cmpsl
fwait
icebp
cmc
test
stos
pop
rolb
sbb
ljmp
dec
and
mov
xor
movl
mov
cmc
dec
lods
inc
in
mov
and
or
ret
cmp
cmpsl
adc
and
fists
int3
xchg
pop
mov
push
xor
mov
and
int
pop
in
lret
stos
mov
lahf
push
hlt
cmpsl
sbb
adc
xor
jecxz
sub
test
das
fwait
dec
adc
fsincos
jle
mov
adc
fdivl
mov
xchg
aas
testb
lret
mov
gs
subb
push
or
adc
cmp
into
inc
lods
push
adc
add
aad
xchg
xchg
cmp
test
push
mov
movsl
add
scas
cmp
push
movsb
mov
push
push
daa
pop
pop
mov
and
hlt
in
or
shlb
aam
inc
jmp
in
and
push
cld
movsl
fisttpll
pop
or
and
loop
sbb
decl
shrb
cs
in
xor
or
pop
sub
add
jns
outsb
pop
pusha
sub
add
out
inc
cmc
jp
lret
les
in
insl
xchg
jmp
bound
mov
sub
sub
sbb
mov
jg
clc
cmpxchg
out
shlb
lds
or
mov
daa
repnz
jle
push
repnz
pop
out
jmp
add
rolb
mov
dec
lds
jmp
add
fldt
lods
cmc
or
pop
inc
sti
inc
dec
inc
sti
inc
add
mov
push
fsub
xchg
fisttpll
pop
cmp
fmull
aaa
ror
loop
jp
inc
sub
mov
int3
js
fnsave
mov
push
fmul
aaa
hlt
das
cmp
jno
push
and
jno
popf
inc
mov
xor
adc
push
movsb
add
xchg
test
sti
aam
adc
icebp
and
add
pop
push
test
icebp
push
jge
mov
popf
xor
jle
xchg
mov
jmp
and
ret
cmp
daa
das
adc
imul
and
stos
ja
pop
mov
push
cltd
scas
pushf
sbb
mov
sbb
xchg
inc
ds
test
cmc
push
or
push
sbb
test
inc
divb
jp
push
add
imul
mov
jnp
js
aas
inc
into
cmp
push
jb
push
aad
mov
rcll
sbb
mov
mov
cmp
clc
stos
xor
xor
das
adc
gs
iret
sub
and
mov
and
sbb
loop
inc
add
xchg
mull
xchg
sti
xchg
call
mov
sbb
sub
mov
adc
mov
mov
xlat
xor
sub
popf
inc
xchg
loopne
arpl
xchg
mov
fisttpll
lea
fwait
sti
ret
cmp
push
gs
gs
mov
ret
out
xchg
mov
xlat
push
jmp
fstps
lds
or
lea
sub
cmovns
call
sahf
xchg
dec
adc
dec
fcomps
dec
sub
jnp
clc
sub
cmp
test
xchg
dec
pusha
sub
pop
scas
stc
xorb
adc
sbb
filds
jmp
pop
adc
sbb
lret
jnp
mov
adc
cmc
or
fsts
add
or
rcr
dec
mov
pop
xor
out
aaa
push
mov
xchg
mov
cmp
xchg
outsl
fimuls
pop
sbb
and
adc
add
arpl
lahf
addr16
cmpsl
cmpsl
jl
jmpw
and
orl
cmp
mov
int3
sub
inc
pop
outsl
mov
inc
lahf
popa
sbb
add
roll
cwtl
inc
aam
dec
out
lret
fcmove
jbe
shl
sub
pushf
fisubs
push
ljmp
pop
insb
jnp
loop
mov
test
or
cs
fdivrp
lods
lret
or
mov
pushf
daa
les
pusha
outsb
mov
daa
pop
rcl
addl
aas
dec
int3
sub
pop
adc
xchg
popf
insl
xor
dec
std
pop
roll
push
daa
subb
shr
out
dec
push
dec
out
cmp
inc
mov
call
leave
sbb
test
rolb
xchg
gs
xchg
mov
mov
in
push
int3
popa
inc
dec
in
stos
mov
pop
lahf
jmp
dec
or
cs
or
shlb
cmc
lds
popf
nop
cmpsl
test
adc
call
xchg
xor
pop
aad
jmp
xchg
leave
lock
pop
mov
cmp
rcl
xorl
icebp
cmpsb
jno
repnz
dec
dec
das
iret
push
pop
repz
mov
dec
insl
pop
sbb
inc
movsl
xor
js
lcall
push
outsl
or
sub
xchg
dec
xchg
or
pushf
ljmp
jmp
in
add
mov
stc
xlat
lahf
repnz
fdivr
dec
add
jo
in
sti
xchg
xchg
or
insl
andb
add
dec
add
pop
mov
addl
inc
test
xchg
fs
adc
addr16
mov
cs
vmwrite
pop
popa
sbb
shr
push
sarb
add
xchg
sti
daa
cwtl
cmpsb
out
add
lcall
rcrb
in
push
mov
lods
in
js
dec
lcall
fld
mov
mov
ljmp
push
jl
jb
inc
das
or
jmp
movsb
js
mov
int
orb
mov
gs
pop
call
mov
push
test
movsl
adcb
test
fdivrs
daa
push
shl
addb
xlat
ror
aam
enter
sub
repz
enter
nop
in
das
jle
mov
aam
cmp
cwtl
mov
fdivl
das
je
mov
ds
aad
sbb
cmp
inc
and
jnp
popf
mov
pop
push
add
xchg
sti
pop
sub
jmp
cld
cltd
stos
jno
mov
outsb
adc
loope
loopne
mov
pop
mul
xor
xor
pop
pop
addr16
sub
enter
dec
mov
jecxz
sahf
mov
popa
mov
inc
adc
xor
mov
sub
adcb
fidivrl
sub
shl
flds
push
sub
xchg
pop
andb
xor
pop
jl
imul
jp
in
pop
mov
lcall
push
ss
sub
inc
outsb
popf
daa
xchg
push
mov
dec
stos
pop
cwtl
push
pop
andb
int
push
popa
pop
fistpll
test
inc
scas
push
inc
push
cmp
push
cmpsb
les
shll
sbb
outsl
xchg
movsb
pop
adc
mov
in
mov
pop
sub
int3
fistpl
jge
adc
in
inc
inc
cmp
adc
daa
dec
adc
fcmove
jbe
jns
xor
scas
mov
dec
dec
fwait
pop
imul
mov
mov
xchg
cmp
cmp
pop
pop
and
sbb
iret
xor
add
insl
sbb
std
sbb
out
xchg
cs
mov
mov
es
and
loopne
ss
dec
fstps
or
lret
inc
and
mov
push
mov
cmp
es
repz
stc
insl
pop
or
xlat
mov
sub
gs
fildll
mov
in
icebp
and
sub
movsl
mov
dec
xorl
push
incl
ret
sub
cld
xlat
jle
mov
dec
into
popf
das
or
and
enter
adc
mov
or
cld
dec
add
daa
test
mov
mov
add
rcrb
sti
mov
push
push
xor
dec
mov
cmp
hlt
mov
es
clc
sub
jo
push
aad
jle
ffreep
int3
cmc
xor
cmpsl
sub
jp
adc
imul
mov
cltd
sub
adc
rclb
setbe
jge
negb
fstl
lahf
mov
jge
aas
popa
negb
inc
sub
and
sub
xchg
rclb
es
pop
or
lods
int3
xor
and
lock
pop
aam
into
into
pop
fisubs
add
cmp
test
sbb
enter
push
aas
add
xchg
jl
out
mov
shll
xchg
pop
ret
insb
xchg
fwait
push
popa
adc
mov
dec
push
xlat
mov
scas
ficoms
lcall
dec
sti
roll
pop
pushf
test
and
popf
fs
bound
dec
adc
pop
pushf
jno
cmp
xchg
xchg
scas
movsl
sbb
lods
ret
cs
dec
sar
jne
xchg
xlat
dec
leave
aam
leave
adc
or
jb
jle
sub
adc
stc
aaa
mov
ljmp
pushf
and
sbb
mov
cli
inc
loop
mov
mov
and
popf
pop
mov
rcrb
imul
nop
stos
or
sbb
and
fimull
fxtract
loopne
cs
clc
xchg
cli
push
inc
loop
or
call
fcmovnu
pop
xchg
mov
sbb
clc
iret
int
jl
push
cmc
push
pop
adc
mov
sub
xchg
mov
jbe
ja
dec
mov
arpl
mov
xor
and
pop
stos
xchg
sbb
test
xor
mov
lret
push
cli
pop
xor
or
outsl
je
hlt
sbb
sub
or
cmc
xchg
cmpl
pop
jecxz
inc
je
and
xchg
ret
push
or
in
push
dec
cs
out
sahf
lcall
roll
out
add
pop
mov
mov
xchg
add
out
cltd
scas
cld
push
cmc
mov
sti
out
shr
stc
add
mov
ret
mov
and
sti
cmp
xor
adc
out
xor
or
mov
stos
lods
jmp
fs
push
cmpsl
dec
mov
lds
loop
rcll
scas
xchg
push
test
xor
add
cltd
es
mov
cwtl
lods
adc
popa
fbstp
mov
jo
jns
cs
iret
iret
add
mov
cs
push
jne
mov
roll
jne
enter
lds
adc
jl
loopne
jo
ljmp
les
filds
fldcw
sahf
or
outsl
mov
insb
mov
enter
lret
inc
icebp
mov
rcl
jmp
pop
ret
sbb
sbb
jl
mov
fists
and
popa
sbb
pop
cmc
mov
cmp
outsl
lahf
fdivrl
adc
stos
fs
popa
stos
jp
repnz
cld
lds
sarb
mov
stos
xchg
lahf
xorl
in
out
sub
xor
ss
mov
leave
or
dec
inc
in
mov
aaa
movsb
sub
mov
insl
scas
cmpsl
inc
mov
fisttpl
andb
mov
out
test
mov
enter
jge
adc
hlt
jmp
outsb
shrb
cld
shrd
push
pop
adc
jl
enter
mov
sbb
mov
ss
adc
sub
push
jb
dec
loop
aas
adc
cmp
out
sub
mul
mov
xor
repz
das
sbb
outsl
jb
mov
adc
lods
jae
adc
push
mov
aam
int
mov
int3
mov
jo
shrb
mov
or
xlat
popa
sbb
pusha
xor
mov
and
punpckldq
iret
add
push
icebp
sub
mov
std
mov
sub
lds
inc
cmp
push
stc
xlat
lods
sbb
inc
jnp
fdivr
mov
js
cmpb
dec
mov
jg
adcl
pop
out
clc
insl
cmp
push
addl
movsb
jmp
cmpsb
push
adc
cmc
ja
lods
xchg
outsb
inc
jp
ret
jmp
scas
push
aas
je
fucomi
inc
mov
ret
dec
fstl
xchg
fcoml
mov
ljmp
cltd
jae
popa
movsb
mov
je
ret
or
mov
leave
mov
jge
mov
nop
std
test
jmp
inc
arpl
sbb
push
fnstsw
add
pop
leave
mov
jge
xor
nop
cs
mov
mov
imul
xchg
push
lret
jne
out
mov
das
ljmp
mov
ljmp
dec
jne
test
cmc
mov
pop
mov
ret
add
push
xchg
ds
add
adc
or
mov
push
xchg
mov
dec
fld
fsubr
mov
imul
enter
loop
out
out
lret
xchg
sbb
imul
xchg
push
pop
fstl
mov
adc
jno
xchg
dec
aam
cmp
push
fsubl
out
xchg
cmc
mov
adc
xor
stc
pop
mov
mov
loope
ja
and
pop
stos
xchg
xchg
pop
es
mov
in
xchg
lods
jmp
push
mov
jno
ret
sub
inc
imulb
imul
cmp
lods
mov
dec
lcall
cmp
lcall
mov
dec
aam
inc
jo
sbb
push
sbb
inc
pop
xlat
and
mov
addr16
inc
jmp
or
push
mov
popf
jne
push
mov
dec
dec
push
lock
jle
cltd
icebp
push
insl
push
jecxz
and
dec
pop
mov
repz
movsl
test
inc
insl
add
insl
pop
hlt
cmpl
sub
mov
inc
xor
ret
inc
inc
cmp
stc
fsubrs
pop
sbb
lret
dec
dec
add
insb
lahf
pop
pop
jl
fdivrl
test
out
ret
mov
out
cld
dec
push
out
rclb
or
inc
inc
in
and
sbb
int
cmp
xorl
sub
or
cmp
das
push
cmp
dec
das
rcrb
push
dec
repz
insb
leave
loop
nop
push
cmpsb
loop
test
mov
test
add
rorl
adc
jmp
js
sarl
and
lahf
dec
stos
hlt
pop
outsb
push
jo
xlat
xchg
push
adc
inc
sub
adc
or
stos
mov
push
mov
adc
push
ljmp
bound
and
xchg
pop
cmp
sbb
pop
in
movsb
cmpsl
test
fwait
lods
fiaddl
jl
lahf
mov
fwait
and
js
test
dec
enter
mov
ret
test
std
ja
dec
inc
cmp
in
and
mov
sbb
das
add
inc
jne
push
mov
mov
je
mov
into
les
ja
fdivrs
fs
mov
inc
pop
xor
sub
inc
in
fldcw
mov
and
add
in
loopne
mov
sbb
pusha
jbe
and
mov
adc
int
inc
mov
sub
cmp
int3
aam
cmpb
lea
imul
mov
mov
rcr
pop
bound
fisubl
add
testb
mov
xor
push
mov
push
or
repz
rolb
xchg
cld
xor
mov
push
jo
mov
in
sbb
daa
lret
sbb
mov
mov
pop
fs
xor
popa
sub
pop
fldl
push
insb
mov
movsl
insb
xchg
outsb
or
js
cmp
scas
mov
mov
nop
outsb
xor
push
lods
mov
xlat
mov
adc
dec
sbb
inc
xchg
add
xor
stos
inc
push
mov
adcl
movsb
gs
adc
addr16
jmp
cmp
mov
in
rcll
pop
ss
js
adc
lock
or
inc
pop
into
movsb
fnstenv
push
popf
or
scas
xor
shlb
inc
fstl
in
cltd
jecxz
dec
jge
xor
sub
mov
mov
nop
loop
add
add
setnp
sub
push
aas
jno
sub
cmp
sbb
pusha
addl
out
je
dec
xchg
add
inc
fs
sahf
push
js
jg
push
push
lret
pop
mov
mov
stos
aaa
xor
cwtl
je
xchg
ror
or
aaa
and
pop
repnz
push
sarb
mov
dec
mov
inc
lock
inc
popf
or
repz
and
hlt
call
call
shll
inc
pop
mov
adc
mov
dec
push
js
sub
test
jecxz
aam
gs
push
insl
push
out
inc
dec
mov
mov
and
leave
sti
in
jbe
popa
pop
add
xchg
call
rolb
or
pop
cmp
xor
fdiv
jmp
loop
adc
mov
mov
cmp
dec
push
clc
js
and
mov
cs
test
add
push
push
clc
or
sbb
mov
js
js
sub
mov
fwait
xchg
clc
lea
cli
cmc
test
xchg
ret
ret
push
int
call
test
adc
loop
and
into
insl
scas
fisubl
adc
fisubrs
sub
push
mov
mov
fisubrl
jge
mov
das
push
dec
lock
loope
push
or
push
push
cmp
push
jp
lahf
and
out
and
out
push
xchg
lods
fildl
jecxz
push
xlat
rcll
add
gs
or
sbb
out
cli
dec
add
mov
jge
xor
jle
xchg
mov
mov
sub
dec
test
xchg
push
js
repz
loopne
sarb
cwtl
lret
imul
lret
jle
add
push
push
xchg
popf
out
into
sbb
pop
dec
mov
push
pop
jbe
cmp
idiv
test
sbb
cmp
jo
jl
xor
or
jl
rcrb
aaa
pop
xchg
aam
dec
xchg
inc
xchg
into
xlat
mov
call
mov
das
jae
sahf
jns
mov
jecxz,pn
lods
xchg
push
inc
xlat
sub
pop
movsl
cmp
sti
inc
xor
popa
lods
xlat
mov
jo
cwtl
and
mov
aad
inc
outsb
push
jle
cmp
mov
mov
mov
pop
repnz
mov
lret
test
aam
pop
lcall
adc
js
xorb
jl
fistpl
add
ret
ja
or
pop
cs
loopne
stos
call
out
inc
push
or
fidivrl
push
mov
pusha
nop
sub
jg
mov
cld
cli
dec
xor
mov
dec
cmp
and
push
push
lock
out
push
and
add
mov
push
add
test
pop
cltd
insb
hlt
xchg
dec
xchg
push
fwait
xlat
and
xor
and
scas
push
cmp
int
js
pop
cmp
das
jecxz
jo
fs
sub
stos
mov
test
or
sbb
mov
sti
mov
or
push
fsubr
popf
cmp
loope
xchg
int
shll
pop
cs
sbb
movsl
pop
mov
xor
xchg
sub
pop
jmp
or
repz
cmp
test
and
data16
dec
push
xchg
fcompl
pop
cmp
jns
arpl
xor
sbb
mov
add
rolb
mov
stos
stos
nop
sbb
popf
subl
or
mov
and
out
enter
fs
scas
enter
mov
ss
aas
push
and
pop
pop
nop
ret
rclb
push
lea
xor
push
add
or
ja
cmp
push
testl
jae
rcr
mov
sub
mov
sbb
imulb
mov
sbb
fbld
notb
ja
cmp
pusha
xchg
mov
nop
xchg
push
ds
mov
sarl
mov
mov
jecxz
jns
shll
mov
mov
aad
test
xchg
mov
mull
loop
imul
inc
mov
sbb
decb
sub
jmp
adc
mov
xor
sbb
lret
push
rorl
dec
jl
dec
lret
cmp
push
adc
ljmp
dec
lods
insb
jnp
cmp
stos
sahf
mov
xchg
fadd
out
mov
xchg
cltd
sub
sbb
pop
sbb
enter
or
int
cmpsl
or
xchg
mov
cmp
dec
jmp
mov
inc
addr16
pop
repz
outsb
cmpsl
push
and
in
or
sub
add
mov
sub
aam
jnp
aas
inc
jl
sbb
mov
fists
xor
cmc
adc
into
mov
mov
jo
and
call
lahf
xchg
xchg
dec
push
or
test
mov
fsubrl
mov
scas
jg
hlt
cli
imul
shl
adcl
in
ss
sti
xchg
shl
fucomi
call
add
dec
mov
jg
fisttpll
jno
pop
test
and
mov
dec
add
paddd
or
dec
loop
jae
mov
mov
push
inc
cmpsb
je
test
dec
out
repz
into
xchg
out
inc
pop
cmp
and
mov
lahf
in
xchg
leave
xchg
out
fdivr
je
hlt
outsl
jne
lock
test
ret
cwtl
mov
fiaddl
mov
push
mov
dec
aas
pusha
push
iret
les
fistps
sub
shlb
out
fisttpll
sub
mov
mov
push
fimull
shll
lds
lret
testb
mov
repz
stos
jle
mov
ret
pop
push
jno
pop
mov
mov
mov
das
mov
and
jno
lds
push
sub
jnp
cld
fs
mov
in
mov
push
inc
jns
sbb
jno
popf
cmp
jmp
push
out
andl
testl
shlb
dec
pop
flds
scas
rorb
sub
and
pop
repz
lret
add
dec
and
mov
push
ficomps
inc
movsb
mov
das
int
lret
cmp
and
into
sub
fwait
mov
popf
stos
fildl
not
pusha
mov
sbb
iret
cmp
out
faddl
movsl
xchg
pop
sbb
dec
xor
pop
inc
jle
xor
imul
jl
sub
imul
jns
daa
fisttpl
leave
lods
pop
leave
popa
daa
sbb
xchg
add
dec
imul
dec
ds
ss
push
aam
dec
xor
jns
stos
mov
lods
in
pop
sbb
in
add
add
sbbb
push
push
adc
repz
mov
mov
jne
xchg
cld
fwait
xchg
insl
inc
jecxz
adc
jmp
pop
jb
sahf
push
dec
imul
add
in
sbb
jp
dec
cmp
mov
mov
xlat
dec
sbb
and
add
push
inc
fsubl
push
shl
mov
push
not
mov
nop
inc
add
inc
add
nop
ja
sub
shrb
pop
fists
push
insl
push
sbb
fsubrl
fstl
enter
push
cmp
add
jns
push
mov
inc
mov
and
mov
movsb
sub
sbbb
jne
arpl
enter
shl
cmpl
ljmp
movsb
xchg
mov
hlt
mov
sahf
xor
xchg
adc
lock
dec
fdivr
lods
pop
xor
stos
cmp
psubq
mov
jmp
ret
pop
imul
xchg
lret
shll
push
bound
mov
adc
cwtd
popl
jge
negb
or
xchg
cmp
stos
adc
xor
mov
shlb
sub
test
push
add
aaa
sbb
mov
shll
xor
xchg
jb
mov
ss
mov
ja
rolb
mov
arpl
sbb
mov
xor
lods
pop
rcl
fsubl
or
popa
lret
push
inc
push
repnz
lods
js
xchg
jge,pn
js
lock
cmp
cmp
jmp
fisubrs
xchg
fldt
pop
std
daa
test
xor
test
sti
and
push
into
lock
ljmp
out
sub
add
inc
cmpsl
push
pop
bound
hlt
push
jecxz
scas
aam
sahf
ret
lods
mov
lcall
int
add
and
stos
ljmp
pop
scas
inc
add
adc
iret
jbe
jg
push
jae
inc
sbb
pusha
pop
dec
or
adc
aas
pusha
sub
xchg
scas
sbb
lods
xor
xor
inc
adc
adc
inc
and
jb
into
push
add
ret
pushf
push
cltd
iret
fsin
push
push
insl
loopne
jne
xchg
lcall
fimull
pop
jno
clc
mov
inc
imul
cmpsl
mov
push
push
sub
ret
in
dec
rcrl
mov
cmp
inc
lock
dec
std
pop
insb
faddl
inc
or
ss
into
or
fdivrs
dec
or
mov
in
and
dec
cmovae
mov
shlb
and
in
mov
pop
adc
lret
cld
ds
inc
stos
nop
inc
inc
stc
in
add
gs
iret
inc
mov
jp
jns
mov
cmp
fnstenv
out
popf
inc
sub
nop
stos
repz
sbb
pop
and
inc
mov
and
xchg
mov
pusha
and
xor
cmp
sub
add
nop
mov
fnstsw
sbb
pop
sub
mov
mov
ds
and
cmc
mov
clc
leave
imul
jle
sub
mov
rcrb
push
pop
stc
ss
lcall
inc
add
std
mov
dec
out
pop
xchg
cmovo
jb
lret
or
cmpsb
sub
and
hlt
out
or
les
sbb
aas
bound
inc
sahf
leave
movsb
lods
jmp
sub
cmp
into
das
or
insl
stos
jns
add
mov
pop
mov
add
sbb
jns
jecxz
out
xchg
popf
cli
mov
and
sub
sbb
sti
xchg
repnz
insb
xor
inc
in
push
aaa
push
cmp
dec
sub
in
js
inc
dec
mov
dec
into
fs
outsb
add
pop
pop
mov
ljmp
inc
stos
stos
cmc
mov
xchg
aaa
test
jp
mull
gs
std
sbb
mov
into
cmp
cs
xchg
mov
movsb
and
or
fdivr
mov
in
or
stos
ret
mov
xchg
pusha
ja
dec
inc
fbld
outsl
aam
lret
pop
aas
pop
dec
iret
jle
sbb
outsb
mov
out
mov
add
das
ss
mov
pop
jo
dec
mov
in
gs
push
movsl
sub
cmc
repz
roll
shr
mov
daa
adc
lret
push
mov
jle
cli
mov
jbe
fstpt
or
or
jmp
lret
mov
mov
fwait
sub
hlt
mov
inc
into
sub
jb
iret
add
jo
mov
cwtl
and
jg
mov
insb
sub
data16
lea
cltd
cmpsl
mov
out
push
sub
mov
fwait
nop
scas
into
scas
cs
add
movsb
mov
std
fnstsw
ror
daa
fidivl
inc
dec
dec
daa
popf
fxtract
dec
mov
mov
shlb
xchg
arpl
and
add
xor
xchg
dec
sbb
jg
dec
push
movl
iret
clc
fldenv
pop
or
and
mov
mov
gs
std
mov
test
sti
pop
cmpl
adc
inc
test
push
ja
call
fdivp
adc
mov
fwait
call
in
xor
bnd
jb
pop
cli
jbe
mov
cmpsl
lcall
and
pusha
daa
cld
sub
subl
pushf
ja
xchg
lret
cmpsb
push
inc
add
push
test
loope
arpl
cmp
in
dec
dec
jae
adc
rcrl
jp
inc
orl
lahf
dec
mov
mov
mov
clc
cmc
jno
cli
push
arpl
outsb
fs
lea
cli
pop
jb
cmpsb
cltd
es
add
test
mov
xor
sub
data16
lahf
and
jge
push
je
cmp
xchg
repz
stos
inc
xor
mov
xchg
push
ss
jae
hlt
xor
test
xor
jle
loopne
mov
xor
fiadds
das
xchg
cwtl
stos
and
repz
movsb
mov
jb
cmp
fidivs
mov
mov
mov
mov
cmpsb
sub
test
push
jo
scas
cmpsl
imul
leave
jecxz
mov
clc
sub
mov
movsl
mov
mov
xor
loop
jl
push
cld
mov
jmp
mov
cwtl
test
adc
and
mov
call
mov
push
xor
push
fidivrs
sar
or
aad
fmul
jp
or
add
cmp
dec
xor
outsb
add
jae
repnz
ret
add
ds
les
lea
ret
ds
lret
jno
push
movsl
fwait
pop
mov
aas
dec
je
dec
inc
fistpll
pusha
xlat
or
add
int
out
add
mov
inc
fsubrp
sahf
mov
mov
rolb
mov
jg
mov
into
push
shll
inc
and
rol
sbb
and
dec
data16
mov
jge
push
cld
lea
pop
jge
subl
xchg
pop
inc
lret
pop
or
ja
mov
push
fcompl
in
jl
xchg
cmp
push
je
or
sar
dec
data16
ljmp
pop
mov
mov
add
lret
test
ret
and
lock
xchg
jno
xor
xchg
daa
fwait
jmp
into
adc
stc
cmp
or
addr16
jne
popl
lock
mov
js
aam
add
cmp
push
lcall
mov
add
leave
or
or
ret
neg
or
mov
lahf
mov
repnz
dec
clc
inc
pop
les
inc
xor
inc
ds
sbb
mov
lahf
and
adc
je
in
jmp
cmp
push
pop
sub
cmpl
inc
xor
push
mov
mov
fadds
cmp
cmpsb
aad
mov
insl
add
scas
fildl
sbbb
add
jae
mov
inc
push
lea
aaa
inc
mov
pop
cwtl
std
xchg
xlat
add
jle
mov
add
pop
negb
push
daa
cmpsl
adc
lods
or
cmp
loop
pop
xchg
mov
loopne
mov
cld
xor
lahf
inc
in
fcomip
push
test
dec
adc
imul
xchg
clc
pushf
test
push
or
lret
test
and
out
je
push
test
inc
in
fs
sbb
and
out
xlat
mov
dec
loope
das
orb
daa
gs
mov
mov
ret
cmp
xchg
js
orb
pop
mov
pop
jns
aam
pop
pop
inc
icebp
pop
inc
vandps
xor
std
push
into
rcll
cmpsl
mov
das
dec
xor
add
push
inc
pop
pop
adc
aaa
movsb
sbb
imul
aam
lods
and
push
xchg
xor
mov
lock
pop
mov
sbb
adc
inc
cmpsb
sub
pop
xchg
mov
jae
iret
push
mov
xchg
mov
out
int3
xchg
jae
sbb
into
gs
fwait
xorb
out
cmpl
rol
fs
cmp
mov
data16
xchg
and
mov
mov
arpl
dec
test
rorl
std
loope
adc
adc
out
loopw
es
std
fnstenv
out
repnz
add
or
shrl
cwtl
test
xchg
xor
mov
repnz
push
and
dec
jl
cwtl
in
push
mov
mov
fldt
push
test
gs
into
mov
xor
mov
jnp
rol
mulb
jns
xchg
lea
xor
inc
insl
inc
jge
out
divb
jmp
jbe
pop
dec
xor
or
or
inc
or
sub
std
movl
xchg
ss
sub
adc
mov
inc
lahf
jns
loope
push
dec
pop
lcall
cli
rolb
cmpsl
jno
xchg
int
dec
pusha
mov
dec
dec
testb
pop
mov
fs
outsl
add
divb
mov
movsb
xor
or
das
jne
mov
and
adc
adc
and
jl
addb
sbb
inc
lcall
sbb
cmp
nop
mov
loopne
mov
add
into
nop
rcr
xchg
sbb
fdivrs
pusha
test
neg
popf
add
push
sub
xchg
mov
mov
scas
cmp
jbe
xor
stos
movsl
add
add
and
mov
cmpsb
std
inc
inc
mov
aas
add
sub
stos
popl
mov
testb
imul
inc
jg
adc
mov
lods
daa
ds
sbb
mov
jno
ljmp
cmp
fldz
xor
inc
les
inc
dec
xor
arpl
xchg
cmpsb
fwait
dec
inc
dec
jb
jo
pop
notb
lret
xchg
mov
sbb
pusha
xchg
sbb
ret
lock
jb
in
mov
push
les
int
adc
rcrl
out
test
mov
jns
sbb
dec
imul
pop
ficoms
add
pushl
adc
sahf
repnz
leave
jge
mov
data16
xchg
xchg
jg
dec
mov
test
jl
sub
lahf
mov
outsl
and
ret
call
mov
or
inc
divl
and
mov
ret
les
cmp
inc
sbb
outsb
pop
lea
dec
cmp
and
xor
test
cmpsb
repnz
inc
sbb
aaa
add
xor
nop
movsb
inc
loope
add
lock
mov
cmpsb
jmp
addr16
rcrl
icebp
jnp
pop
sbbb
lock
cmp
inc
add
sbb
xor
fisubs
das
pop
mov
add
push
movsb
rclb
mov
rcll
rcrb
test
and
push
inc
cmpsl
or
pushl
xor
in
jno
out
sub
jge
jmp
push
loopne
aam
cmp
insl
mov
add
shll
xchg
fs
dec
mov
stc
jge
ret
jle
push
pop
popf
sub
iret
adc
jge
sub
sarb
cmc
je
and
sub
push
dec
push
adc
sbb
dec
add
xchg
sti
adc
ror
xchg
or
fisttpll
out
jmp
mov
pop
dec
mov
mov
jae
cmp
cmp
jno
leave
leave
inc
inc
jl
cmp
jne
clc
sub
and
fnsave
lea
jge
stc
repz
adc
mov
scas
add
or
xchg
stos
lahf
rclb
inc
bound
sahf
adc
inc
shll
pop
popa
mov
dec
add
xchg
push
outsb
cmp
addl
adc
mov
das
stc
ja
mov
mov
sbb
cmp
add
pop
mov
imul
iret
out
pushf
inc
pop
rcr
es
mov
stc
nop
dec
mov
mov
pushf
adc
jle
pop
sarb
pop
je
out
enter
mov
fs
dec
or
outsl
scas
push
xchg
bound
push
cmp
hlt
inc
iret
inc
sbb
jp
icebp
daa
shll
push
out
enter
ret
inc
cmp
lahf
mov
fcoms
sbb
dec
sbbb
popf
sbb
inc
lret
cltd
pop
xor
sub
xchg
sbb
mov
ds
sbb
sti
jecxz
or
add
pop
jnp
mov
stc
dec
add
sub
mov
mov
add
xor
xchg
out
add
inc
xchg
je
and
add
test
mov
popf
gs
nop
test
icebp
int
into
imull
sbbb
cli
xchg
mov
in
cs
pusha
test
movsb
dec
cltd
adc
jno
scas
push
pop
or
inc
mov
fnstsw
jb
pop
inc
or
sub
inc
sub
cltd
push
mov
in
xlat
mov
into
mov
inc
gs
push
pushf
push
fimull
xor
cmc
jmp
mov
inc
and
lock
lret
mov
xchg
orl
shlb
jbe
xchg
movsb
scas
fsubp
mov
pop
nop
ret
and
cld
pop
cmp
add
fldenv
neg
lret
pop
adc
lods
sub
test
jmp
mov
in
push
jle
dec
shlb
dec
ds
mov
mov
into
pop
sbb
push
and
dec
pop
add
lcall
lcall
jmp
int3
adcb
inc
pop
test
push
frstor
cmpsb
jmp
mov
outsb
add
jge
adc
sub
jbe
push
and
jb
test
and
and
imul
push
dec
xor
insl
jecxz
dec
mov
movsl
jp
das
iret
loopne
fcompl
jg
mov
jmp
test
pop
sub
int
cli
pop
adc
and
xchg
add
in
aad
inc
cmc
pop
push
gs
cwtl
aam
fnsetpm(287
pop
rolb
daa
rcll
fwait
in
mov
flds
xlat
outsb
enter
xchg
and
mov
outsb
mov
inc
add
dec
inc
pop
hlt
jae
dec
adc
aaa
xor
xchg
sti
in
lcall
and
leave
inc
shll
sub
push
cmpsl
jge
xchg
fstps
mov
inc
test
jmp
mov
subl
insb
stos
jge
xchg
jge
mov
add
dec
rorl
aas
cli
decl
cmpsl
adc
shll
rcrb
xchg
cltd
loope
jecxz
pop
xchg
pop
imul
pop
ss
pusha
mov
xchg
xor
scas
loope
pusha
fnstcw
outsl
ljmp
stos
cmp
inc
push
lea
xchg
into
cli
sahf
in
ret
mov
jecxz
jne
ror
pop
sbb
sub
leave
out
xchg
push
arpl
pop
gs
dec
cltd
stos
xchg
xor
popa
std
test
push
and
pop
arpl
pop
xchg
icebp
jg
and
iret
inc
ja
fistl
mov
push
test
push
shr
rcrl
add
inc
xor
std
loopne
inc
lret
lods
dec
scas
push
repnz
push
outsb
pop
xchg
loopne
stos
cli
jns
and
xchg
aaa
seta
test
cwtl
test
cltd
std
aam
adc
aaa
jb
xor
dec
lahf
insb
jp
je
dec
shrb
lcall
mov
mov
dec
lea
shl
lahf
add
cmp
mov
movsl
loop
mov
jns
mov
mov
or
mov
orb
and
hlt
and
pusha
pop
test
or
mov
out
jge
inc
das
enter
inc
sub
arpl
pop
sbb
in
push
dec
sbb
pop
mov
loopne
pop
and
mov
sub
fwait
sub
push
xchg
sti
dec
push
in
mov
test
movsb
adc
stc
xchg
jp
cmpsl
dec
notb
lcall
adcb
jo
inc
xor
out
lret
in
push
lfs
jb
inc
sahf
cwtl
jmp
sub
jecxz
xchg
movsb
loope
mov
jle
mov
aam
mov
pop
add
pop
mov
cld
fcmovu
cmp
push
sarl
push
xlat
repnz
push
adc
mov
inc
mov
xor
sbb
cmp
stos
push
mov
mov
ljmp
pop
in
adc
test
cmp
pop
push
in
sub
gs
and
adc
push
cmp
aaa
jle
pop
mov
iret
xchg
inc
sarb
ss
xchg
ret
inc
cltd
imul
test
jbe
push
or
inc
ja
test
ljmp
or
idivl
jg
clc
mov
xchg
jb
dec
xor
mov
sbb
sbb
call
movsb
sbb
add
jnp
lret
js
mov
frstor
mov
push
sar
adc
xor
lahf
dec
ret
insb
adc
inc
mov
pop
jmp
xchg
scas
inc
fcoms
enter
mov
mov
push
orb
imul
jae
ljmp
mov
ret
add
fadd
insb
lahf
or
jae
mov
sbb
add
mov
cli
jl
lahf
and
pusha
addr16
mov
add
sahf
inc
out
sti
enter
add
or
das
inc
inc
cmp
insb
push
jp
mov
pusha
inc
dec
pop
jge
stc
mov
xor
dec
stc
and
sti
daa
add
sbb
pushf
aas
std
jl
std
daa
xor
fsubrl
inc
mov
test
sbb
mov
sbb
lods
add
jae
xor
lahf
ljmp
inc
adcb
sub
das
mov
mov
ds
aad
adc
fidivrs
std
out
aad
lahf
adc
mov
dec
pop
inc
je
sbb
in
pop
cltd
pusha
mov
ss
rcl
xchg
loop
mov
stos
repnz
mov
mov
clc
xor
bound
test
dec
jbe
fs
movsb
lcall
lret
sub
call
push
into
sbb
pop
mov
testl
mov
ror
arpl
inc
sub
pushf
mov
aad
ret
fcom
add
daa
dec
jbe
mov
roll
adc
lahf
outsb
jb
sbb
xchg
je
push
mov
stc
mov
pop
mov
pop
mov
pop
dec
mov
popa
shlb
cmp
das
aam
add
or
mov
lahf
fcomps
sbb
outsl
xchg
ret
pusha
xor
xorb
push
xchg
ljmp
mov
bound
mov
push
in
fadds
movsb
leave
and
loop
cmp
out
out
fdivl
xor
push
mov
stos
pop
inc
mov
jo
jg
xchg
dec
insb
xor
ret
hlt
cmpsb
push
addl
mov
adc
push
xchg
out
or
fstpt
xchg
push
or
and
jg
xor
xchg
mov
into
faddl
add
pop
cld
loope
mov
push
pop
mov
std
mov
mov
jecxz
adc
in
aam
mov
mov
cmc
push
mov
shll
jge
lock
js
icebp
push
insb
test
je
fs
jmp
and
pushf
enter
pusha
dec
lock
mov
mov
xor
xor
cwtl
enterw
sub
mov
sti
sub
cmc
or
cmpsb
inc
xchg
sub
pusha
clc
sub
in
xor
xchg
jae
sarl
ret
or
jne
into
and
xor
out
fildl
sub
not
mov
sbb
jne
mov
adc
mov
sbb
or
repnz
cmc
jns
loopne
cmp
fcoms
out
xor
add
mov
pop
jns
pushf
or
sti
mov
xchg
inc
hlt
mov
mov
ljmp
or
and
js
sub
in
imul
dec
mov
das
arpl
cmp
xchg
into
and
jne
dec
ds
dec
sbb
clc
outsl
xor
subl
popf
jne
loopne
daa
lods
sti
jae
rcrb
aas
xchg
and
jge
hlt
adc
leave
mov
pop
push
loop
or
lahf
mov
imul
xlat
ficoml
pop
in
idivl
xchg
or
loopne
fcompl
sti
mov
dec
push
xor
dec
stos
add
sub
sbb
xchg
es
bound
jl
fsubrs
enter
dec
push
sahf
mov
adc
pcmpgtd
or
fdivs
popf
cli
jbe
je
out
scas
ja
pop
hlt
adc
mov
pop
xchg
mov
imul
mov
dec
mov
les
test
sbb
daa
dec
sub
outsb
cmpsl
repz
stos
pop
add
insb
js
imul
mov
add
pop
out
dec
push
mov
leave
push
in
movsb
fistps
sbbb
enter
push
ds
orl
loopne
jg
mov
pop
ds
jno
dec
xchg
pop
icebp
popf
enter
jg
js
sub
pop
pop
cmp
aam
mov
push
xor
addr16
and
dec
xor
loope
inc
pushl
adc
clc
mov
dec
mov
add
aam
test
adc
mov
xchg
pushf
cmpsl
cmp
fisubl
xchg
sub
popf
push
in
sub
inc
ret
negl
fwait
lock
bound
lods
stos
inc
movsb
mov
xor
fcoml
stos
dec
jmp
fs
divl
jno
leave
dec
dec
inc
and
mov
orl
xlat
ljmp
inc
enter
paddb
lea
sub
or
sarl
push
or
jae
testb
lods
lds
add
std
dec
or
jmp
test
outsb
or
xchg
in
mov
adc
sub
xor
aas
add
aad
imul
mov
jle
xchg
pop
adc
xchg
or
fmull
push
adc
adc
ds
xchg
push
cmc
cmp
sub
inc
add
mov
mov
pushf
xor
cmp
divb
shll
dec
rol
push
and
mov
and
sub
jbe
test
inc
std
xchg
mov
jne
ficomps
daa
add
js
dec
mov
pop
movl
mov
and
adc
repz
jnp
xchg
jb
mov
jbe
mov
mulb
out
adc
add
add
pop
dec
mov
mov
loopne
in
add
clc
mov
sbb
stc
or
xchg
or
push
daa
cmp
iret
rcll
testl
lret
add
mov
pop
mov
dec
sbb
mov
out
in
ss
xor
stos
ret
int3
fadds
fistpll
into
scas
mov
loope
and
and
mov
add
fbld
fisubs
push
clc
jb
nop
lods
xor
popf
adc
sub
mov
and
mov
xor
pop
or
xor
xor
push
out
cmpsl
add
imul
repnz
jno
push
jne
push
repz
aas
addl
cld
rorb
mov
push
popa
iret
and
out
push
jle
cs
sbb
dec
sbb
xchg
fwait
je
sub
jle
sub
add
pop
sbb
push
imul
and
lods
stos
add
pop
jmp
jnp
fstpl
cmp
jge
push
xchg
jecxz
mov
ret
cmp
inc
pop
imul
hlt
gs
rcrl
retw
sbb
test
xorb
adc
add
lds
pop
xchg
stos
jae
adc
mov
in
push
sub
enter
in
jo
and
arpl
enter
push
mov
sub
xor
pusha
mov
push
insl
std
mov
adc
jp
ljmp
in
sbb
bound
in
dec
dec
cwtl
and
add
scas
xor
popa
aam
cwtl
int
dec
mov
mov
pop
mov
stos
xchg
mov
loope
into
cmp
xor
dec
hlt
aas
fyl2xp1
xorb
push
add
jo
out
mov
sub
mov
cli
getsec
dec
ficompl
mov
jae
xchg
or
shll
sbb
cmpsb
push
mov
dec
sbb
fwait
leave
push
pop
or
pop
jbe
adc
arpl
sub
test
jg
int
inc
in
or
notl
push
jp
filds
shlb
sbb
pop
insl
sbb
push
mov
mov
xchg
cmp
sbb
ffree
or
into
xchg
lahf
outsl
repnz
dec
pop
adc
loopne
add
pop
aad
mov
insb
jnp
dec
and
nop
push
or
pop
shl
pop
pop
ss
js
xor
je
sbb
inc
push
and
lods
test
fistpll
les
fwait
fs
or
pop
fcmovne
jno
leave
lcall
jmp
push
cmc
stos
mov
lret
dec
ss
test
sbb
das
daa
xchg
in
outsl
je
jge
xchg
jne
dec
aad
mov
jb
jp
insl
clc
iret
jb
lret
std
ficoms
cmp
clc
jg
adc
sub
sahf
mov
jne
push
mov
cwtl
ja
pop
in
into
scas
adc
xchg
jnp
mov
dec
cwtl
rsm
fmuls
push
lds
mov
jge
jp
cmpl
out
add
jge
orb
into
ja
sti
or
clc
mov
mov
stos
pop
js
divb
sahf
sbb
jp
es
mov
sahf
negb
cmp
inc
andb
stc
sbb
pop
xchg
push
xchg
push
fisubrl
add
dec
push
movsl
xor
repnz
hlt
pop
nop
mov
out
pop
or
mov
sbb
dec
fsubl
pop
cli
or
pusha
push
cmp
xchg
inc
pushf
jne
mov
sbb
sub
test
mov
or
pop
jge
jbe
aam
mov
ds
je
out
mov
pop
adcb
push
cmp
push
pop
xor
jb
test
jp
sbb
shll
or
pop
inc
adc
andl
dec
sbb
jl
adc
and
inc
into
sbb
push
mov
shrb
std
out
xor
mov
sarb
and
mov
aad
fs
repnz
cmp
sti
loope
out
lds
xchg
nop
jbe
add
jge
and
push
mov
iret
and
mov
das
leave
fwait
out
and
dec
bound
push
das
ds
fnop
mov
mov
out
addr16
mov
pop
cmp
hlt
add
jns
int3
shll
jl
daa
dec
aad
cmp
mov
roll
cmp
movsl
jne
push
out
mov
mov
inc
xchg
ja
xor
loop
xchg
jbe
xchg
mov
sub
or
cltd
ss
pop
push
leave
daa
ret
cmp
aad
fbstp
sbb
xchg
mov
addl
pop
jbe
in
add
insb
mov
adc
dec
xchg
mov
pop
cmp
shlb
jbe
push
inc
in
inc
test
popa
jmp
popa
mov
mov
dec
or
mov
cld
inc
outsl
adc
ret
and
mov
ds
ss
lret
ret
sahf
sarb
jnp
push
shl
mov
ja
std
cli
or
andb
js
mov
xor
inc
scas
dec
push
lret
sbb
sub
pop
fimull
call
es
push
mov
pop
xor
cwtl
dec
dec
lock
pop
fistl
xchg
sti
in
in
aas
testb
jg
ret
filds
sbb
shlb
and
je
sub
scas
stos
fdivrl
dec
mov
adc
mov
shll
lds
jle
mov
mov
icebp
cmp
fwait
rcrl
mov
inc
loop
xchg
mov
jge
sahf
or
rcrl
mov
xchg
or
ja
cmp
jl
outsb
add
add
mulb
minps
mov
cs
xchg
pushf
push
adc
jnp
jbe
popl
in
call
lods
lcall
enter
cmp
fwait
dec
xor
mov
pop
lods
add
lret
aam
jne
insl
sbb
hlt
mov
stos
ljmp
in
mov
jno
cmp
mov
inc
adc
int3
mov
popa
or
fsubl
jmp
shlb
rolb
cwtl
in
jge
push
rol
push
mov
orb
push
fwait
add
popa
cmp
mov
or
jo
incb
or
enter
std
sbb
sti
decb
clc
push
rcrl
int
sub
add
ja
mov
lcall
cmp
dec
mov
insl
popf
shll
inc
mov
push
mov
mov
cld
mov
and
je
sub
shlb
sbb
roll
pusha
xchg
push
adcl
adc
or
sub
push
mov
lahf
sub
push
scas
lds
xchg
lock
fiadds
popa
sub
lahf
mov
loop
shll
aam
xchg
pop
insl
ss
in
icebp
dec
jne
movsb
xchg
cmpsl
mov
pop
lret
rcrl
daa
int3
mov
mov
shlb
dec
mov
and
out
inc
xchg
dec
push
jmp
das
xor
nop
and
pop
cmpsl
or
mov
fldenv
sbb
add
mov
jns
das
bound
loopne
pop
rcrl
test
and
mov
inc
or
cmp
hlt
mov
push
icebp
pop
add
push
mov
into
scas
cmc
adc
inc
scas
sub
inc
inc
scas
push
int3
push
sub
xor
sbb
adc
or
cmc
or
cmp
add
push
cmc
call
mov
push
cmp
sbb
sub
fists
lods
in
sbb
lcall
test
mov
mov
mov
popf
xchg
pusha
jae
fiaddl
sbb
cmp
mov
cmpsl
out
xor
pop
push
int3
ljmp
call
mov
inc
andl
jnp
movsl
cli
popf
stos
cld
adcl
sbb
outsl
in
imul
mov
add
xor
in
mov
sahf
nop
jle
das
cmpsb
arpl
pop
inc
inc
in
lds
adc
or
push
les
and
inc
mov
push
pop
lahf
out
repz
xchg
ret
push
cmovp
in
mov
lock
add
or
add
aam
out
sbb
mov
and
dec
push
pop
pop
lret
pusha
bnd
mov
jns
xor
push
lret
lret
cmp
out
adc
mov
inc
bound
mov
movsb
cmp
ljmp
sub
jecxz
fidivl
fildll
fdivrl
stc
cmp
and
es
lret
mov
jecxz
dec
jge
jmp
insb
insb
inc
pop
fcoml
sbb
sti
sbb
shll
pop
jge
xchg
mov
adc
rol
xchg
adc
adc
xor
enter
test
out
adc
and
jb
jae
adc
push
add
outsl
mov
mov
mov
xor
mov
rorl
jb
movsb
incl
xchg
dec
hlt
push
es
xor
hlt
ja
insb
outsb
popf
dec
mov
je
push
xchg
adc
ds
lret
mov
xchg
dec
movsb
mov
ret
leave
push
adc
mov
fdivrp
xchg
inc
loope
insl
push
popl
popa
mov
stc
push
lret
cmpsl
leave
movsl
fwait
jnp
jno
test
mov
pop
or
inc
out
or
pop
jecxz
pop
out
mov
sbb
pusha
inc
cltd
aad
pop
movsb
popa
loope
insb
xor
stc
int3
jnp
sbb
scas
push
lea
out
pop
mov
std
adc
adcb
ja
jle
pop
pop
push
incb
cli
subb
aam
pushf
out
aas
and
sar
sub
leave
lahf
popf
test
adc
and
js
iret
rolb
dec
and
ficoml
xchg
je
mov
lahf
addr16
or
push
mov
or
js
xchg
repz
and
addr16
out
add
insl
adc
push
sahf
repnz
inc
mov
jmp
mov
ds
addr16
lds
and
and
fcom
icebp
mov
mov
or
cli
nop
rolb
sbb
ljmp
ret
mov
mov
cmp
and
xor
or
sbb
pop
vpcomub
mov
call
push
sti
xor
and
push
jp
add
mov
pop
add
adc
push
push
fcmovbe
out
adc
push
paddb
fld
xor
pusha
insl
inc
xchg
in
lock
test
mov
push
cmp
mov
sub
and
push
adc
outsb
inc
fnstsw
dec
and
sub
or
out
cmc
cmp
sbb
andl
sub
rorb
enter
ret
pop
inc
inc
mov
enter
int3
movsb
or
repnz
or
insb
fwait
push
jae
pop
push
iret
xor
and
xor
mov
xlat
neg
mov
popa
xchg
in
inc
mov
push
inc
sbbb
xchg
lahf
orb
push
sub
insb
cmp
jl
push
iret
aas
mov
aam
lahf
out
jo
xchg
xchg
push
dec
add
dec
jne,pn
outsl
pop
mov
sub
mov
mov
sub
fisubs
or
shll
or
push
cmpb
int
jecxz
in
ja
push
mov
mov
pop
push
push
jae
jl
pop
stos
add
jp
pop
mov
sub
adc
xlat
add
ljmp
sahf
inc
sub
sub
into
pop
ret
inc
and
xchg
lea
mov
sub
setbe
lock
cli
sti
or
push
mov
fmull
sub
loopne
cmpsb
ficoml
cld
sub
pop
mov
lahf
out
in
mov
xor
cli
sti
and
fldl
into
fbld
and
dec
cmp
scas
stc
inc
xchg
js
jl
cmp
pop
xchg
lods
repnz
push
lock
mov
fsubs
mov
pop
fmuls
out
push
xor
sub
jns
jae
icebp
pop
out
loope
xlat
loop
add
data16
mov
add
cmp
cs
inc
dec
and
adc
push
dec
fs
loope
and
repz
dec
mov
stos
aaa
dec
out
rcll
cwtl
subl
fildll
cmpsb
mov
out
dec
adc
mov
sbb
loopne
mov
jbe
push
pop
sbb
jl
push
xor
stc
pop
cmp
or
das
cld
dec
cmpsb
cmp
cmc
sub
pushf
imul
dec
xchg
cmp
pop
fmuls
mov
cli
out
inc
sti
xchg
cmp
push
inc
mov
or
leave
cmp
divb
mov
adc
sarl
push
and
out
push
int
xorb
add
fs
pop
in
imul
test
subl
jmp
or
outsl
add
jmp
iret
stc
dec
add
inc
jbe
dec
push
jbe
lret
push
xchg
sbb
cwtl
push
dec
mov
ja
pop
xor
ficompl
movsb
inc
xchg
je
cmpsl
add
fimuls
sbb
mov
aaa
mov
mov
sub
and
int
push
sbb
add
pop
push
test
fldl
mov
jnp
mov
push
sub
cmpsl
shrb
inc
dec
dec
xchg
jle
sub
adc
sub
dec
xor
mov
cmp
cmpsl
lcall
ljmp
std
add
pop
cli
mov
clc
pop
sarl
jae
push
test
sbb
sbbb
cmp
insl
mov
or
xchg
cmp
push
arpl
cs
xor
push
push
test
call
sbbb
push
jg
pop
xchg
dec
adc
jb
mov
cltd
push
dec
aam
and
test
pop
mov
enter
lods
inc
addr16
adc
popf
js
stc
jo
hlt
fsubrs
lret
jmp
lret
sbb
push
inc
loope
cli
cmpsb
mov
imul
mov
in
scas
arpl
cmp
imul
push
jecxz
and
int3
outsl
call
sbb
fdivr
cmp
mov
jbe
rorl
hlt
insb
lock
imul
test
xchg
sub
jno
xchg
pop
or
outsb
mov
dec
pop
dec
mov
out
mov
cmp
lock
push
hlt
fs
repnz
aaa
pop
mov
jbe
out
popa
adc
mov
mov
or
inc
push
cmpsl
jle
cmp
mov
adc
sub
push
test
in
outsb
push
add
sbb
or
mov
cltd
daa
mov
ret
cmc
adc
lds
xchg
lea
scas
cmp
push
clc
mov
pusha
jo
mov
push
enter
dec
outsb
mov
cmpsb
inc
fiadds
dec
imul
notb
sbb
fdivl
inc
jnp
out
mov
adc
test
cwtl
js
pop
add
pop
mov
push
xlat
add
cs
lcall
das
sub
xor
mov
mov
add
mov
pop
sub
mov
lods
nop
cs
or
enter
cmc
fwait
cli
popf
jl
fidivrs
or
gs
das
jmp
xchg
mov
aas
or
xchg
jl
or
mov
imul
repz
sarl
shlb
repnz
jle
inc
jmp
test
jecxz
mov
sub
xlat
or
cmpsl
sbbb
jle
add
dec
insb
or
pop
dec
les
fdiv
int
cld
aam
imul
sbb
pop
xchg
fcomps
dec
aaa
dec
push
cmpsb
enter
mov
jns
cld
sbb
ss
out
roll
lods
and
out
insb
xor
das
pop
or
jno
dec
pop
jno
add
mov
jnp
data16
mov
pop
pop
fidivs
or
mov
jmp
jp
add
mov
das
aam
bound
add
cwtl
cmp
inc
rcll
adc
cmp
and
mov
mov
int3
call
inc
mov
scas
arpl
leave
and
lea
sub
push
xor
or
sbb
aam
jecxz
stos
sbb
and
js
jo
inc
dec
dec
sbb
xchg
adc
inc
das
xor
pop
fidivrs
mov
push
push
cmpsl
mov
mov
stc
lea
ret
add
sti
ret
push
mov
fwait
test
stos
pop
andb
or
xor
ret
mov
insl
mov
mov
dec
adc
nop
adc
jl
or
push
or
push
cltd
xor
and
sbb
mov
test
and
push
inc
scas
sub
movsb
sub
mov
push
jp
push
jp
push
hlt
xor
mov
pop
sbb
mov
pop
mov
mov
fcmovnbe
aaa
in
mov
es
or
dec
adc
lods
adc
fs
sahf
sbb
dec
lods
inc
jl
mov
ljmp
inc
mov
sub
xor
xor
shrl
lret
or
or
ss
mov
jecxz
add
push
fwait
push
lock
lret
xchg
enter
lahf
test
and
movsl
mov
lahf
scas
nop
jp
sub
jbe
les
into
ffreep
fadds
xchg
imul
insl
pushf
movb
mov
cmpsb
clc
jb
divl
xor
and
lret
jnp
loope
stos
cmpb
xor
sub
es
xor
lret
mov
stos
xchg
fisubl
pop
push
ficomps
push
gs
cmp
xor
out
cmp
pop
js
aam
aam
mov
int3
cltd
sbbl
xor
push
into
dec
rclb
ljmp
push
pop
idiv
lea
es
stos
andb
sub
add
xor
inc
cmpsl
mov
pop
sub
push
adc
stc
sbb
pushf
lea
dec
xchg
enter
jle
jl
sub
mov
sub
and
jo
push
sbb
shl
movl
mov
or
ds
add
and
cmpsb
test
std
xor
in
addr16
cmp
out
xchg
dec
pop
or
cmpsl
mov
or
int3
shll
movsb
xor
sbb
jno
es
out
cmc
rolb
sbb
pushf
adc
push
lret
mov
or
iret
and
fists
xchg
adc
push
out
cmpsl
imul
pop
mov
pop
mov
loop
mov
pop
jnp
adc
xor
fistl
jns
add
bound
and
mov
mov
aad
sbb
push
pop
inc
cld
mov
inc
leave
dec
repz
jg
push
xlat
sahf
into
push
push
call
popf
or
inc
aas
xor
and
ret
or
in
push
imul
mov
add
test
in
bound
nop
mov
mov
leave
mov
int3
cmp
push
cli
aaa
movsb
or
mul
mov
fiadds
and
sub
fdivl
cmc
or
add
dec
loop
inc
sahf
cmp
fldenv
jnp
pop
xchg
lods
add
call
popf
mov
es
stos
cmc
js
orl
pop
test
sub
gs
ja
push
arpl
mov
arpl
cmp
sbb
lahf
sub
mov
clc
jne
test
and
in
adc
sub
dec
out
imul
jbe
mov
aas
mov
scas
xchg
and
jp
popa
test
pop
adc
sti
fldenv
push
fidivrs
in
incb
mov
inc
pop
mov
and
pusha
mov
outsl
pop
aas
and
mov
stos
sub
arpl
adc
or
mov
pop
inc
jl
dec
hlt
movsb
icebp
mov
push
mov
mov
lcall
cmp
jns
sbb
add
jg
pop
pop
lock
and
push
lods
mov
mov
sti
sbb
jle
ret
js,pt
xor
xchg
dec
sbb
push
into
mov
xchg
hlt
xchg
out
aaa
lds
shrb
inc
loop
jmp
or
aam
fldl
cmp
inc
js
cli
and
xor
hlt
inc
and
sub
cmp
xlat
std
adc
pop
out
dec
pop
vmread
xor
mov
mov
stos
in
dec
mov
push
or
fisttpll
cld
imul
push
dec
cmp
stos
xchg
add
popf
mov
push
leave
push
xchg
dec
adc
outsb
sbb
rcll
xchg
push
push
pop
lock
jne
dec
testl
push
pop
push
jns
mov
lods
insl
pusha
subl
lahf
pop
add
push
jp
in
mov
loop
mov
inc
jg
test
iret
mov
pop
xor
cs
fs
dec
inc
sbb
mov
mov
hlt
adc
fildll
xchg
jmp
outsl
loope
mov
mov
xor
dec
mov
push
dec
imul
gs
fiadds
jns
neg
sbb
insb
std
xorl
and
adc
adc
adc
dec
cmp
in
sti
push
and
sub
outsb
inc
jae
fwait
cltd
orl
popf
mov
pushf
cltd
popl
data16
and
mov
subb
push
scas
cmc
jp
fs
test
lcall
aaa
ss
lret
cmp
div
clc
push
lods
movsb
mov
out
insl
mov
fucompp
push
adc
mov
adc
jnp
mov
test
mov
jne
hlt
in
dec
cmp
dec
pop
pop
es
addr16
push
push
cmpsl
mov
test
inc
and
jae
xchg
hlt
idivl
insb
adc
inc
jb
xchg
pop
mov
mov
ds
stos
std
js
fbld
int
mov
jb
inc
xchg
jmp
cmp
fbstp
push
cwtl
into
xor
out
or
mov
loope
pusha
xor
stos
and
jp
inc
xor
fstps
in
fidivrs
lret
or
lods
dec
fsubrs
jbe
and
or
insb
inc
push
ret
push
pop
cmp
and
addr16
je
jae
inc
cmp
jecxz
add
dec
jl
sahf
push
ftst
fnsave
mov
push
loopne
ret
push
sub
int3
lea
sbb
mov
aaa
jl
push
aas
sub
lock
shl
mov
decb
inc
mov
sarb
cmc
movsb
jb
and
int
ret
and
outsl
jl
arpl
inc
push
xchg
lods
gs
sbb
fidivs
or
loope
mov
mov
cmc
dec
sbb
push
cmpsl
or
ficoml
fsubr
movsb
mov
iret
scas
or
inc
ret
addr16
xchg
nop
test
loopne
xor
inc
inc
pop
fidivrl
and
cmp
mov
subb
xchg
adc
cs
sbb
mov
jle
fwait
cmp
rclb
sbb
mov
push
and
inc
inc
mov
or
mov
adc
loope
in
pop
or
scas
sub
jae
or
pop
mov
mov
xor
sub
dec
xor
fcomps
mov
xor
mov
fidivl
cli
or
loop
add
inc
aaa
jmp
mul
scas
sub
ss
cli
xor
push
popf
filds
lahf
xchg
stos
ss
roll
xchg
push
inc
call
pop
mov
sahf
jae
dec
mov
ret
push
push
pop
or
sub
push
xchg
pop
jns
adc
mov
fmull
adc
mov
mov
mov
fisttpll
dec
pusha
fildl
imul
jb
cld
push
flds
adc
or
stos
in
mov
pop
push
adc
push
xchg
add
sbb
ret
cmp
sbb
push
idivl
push
pop
fs
mov
jp
add
sub
ret
xor
loopne,pn
mov
mov
dec
and
mov
mov
dec
pop
push
lea
mov
das
ss
mov
push
xor
xor
dec
xchg
mov
cmp
pop
adc
lcall
std
outsb
xor
scas
adc
pop
loop
inc
negb
leave
xchg
int
pop
into
enter
dec
out
mov
mov
xchg
xor
mov
loope
cltd
insl
ja
aad
icebp
mov
int
add
sti
cmp
fsubrp
stc
xchg
push
mov
xchg
cmc
lret
mov
pop
pop
adcl
fsin
fwait
and
xchg
lds
cmp
cli
pop
popa
xor
imul
push
jo
fisttpl
mov
xchg
test
int3
popf
lea
mov
in
out
int3
push
jo
adc
addb
mov
loop
lods
cs
sub
jb
scas
push
ficoms
aam
pop
push
int
test
mov
add
cmp
lcall
dec
aaa
cmp
lds
mov
push
push
mov
test
cwtl
cmpsb
dec
enter
pop
js
inc
cmp
lret
into
lcall
nop
movsb
pop
dec
outsl
xchg
or
xchg
jae
lret
adc
sbb
sub
out
xchg
inc
and
out
dec
cld
push
cld
inc
popl
test
sub
sub
add
sub
mov
xchg
push
loopne
jnp
sbb
ss
mov
lods
jo
nop
push
cmpsb
xchg
xor
inc
fcompl
jns
call
mov
xor
jns
shlb
scas
popf
jb
xchg
adc
sbbl
mov
mov
test
arpl
add
pop
pop
mov
filds
xchg
jo
fsubp
push
gs
mov
xchg
sub
daa
add
pushf
shlb
xor
jg
clc
je
adc
pop
inc
fidivrl
lret
int3
adc
mov
mov
in
movsb
call
sub
or
fisttpll
mov
lret
es
hlt
leave
stos
mov
stos
sti
xchg
push
mov
rcrl
imul
out
mov
repz
jnp
into
ror
dec
int
mov
minps
push
push
sub
push
pop
or
ss
je
daa
xchg
loop
insl
adc
sbb
fldl2t
imul
mov
mov
xlat
imul
fnstcw
jno
daa
in
popa
outsb
mov
dec
cmc
mov
imul
clc
pop
popa
jecxz
popf
push
ds
inc
xlat
mov
cmp
getsec
add
push
lds
add
mov
xlat
cltd
and
push
aam
jle
xchg
xchg
mov
out
pop
push
xchg
mov
push
sbb
push
js
aad
inc
xor
jmp
push
in
push
insb
lcall
jae
mov
push
and
pop
sbbb
mov
xchg
das
rcrl
sub
fs
push
dec
lahf
lret
arpl
sub
push
popf
aas
mov
jp
pop
cmp
lahf
xchg
in
sub
mov
je
jmp
push
or
pop
push
inc
rcl
out
cltd
xchg
mov
int3
push
inc
clc
aas
add
mov
fmul
pop
ja
cmpsl
mov
sarl
in
xor
test
mov
aam
lcall
lods
jle
mov
xchg
mov
dec
popa
fldcw
jp
rcl
scas
xchg
mov
and
adc
add
sbb
test
mov
fldcw
push
test
cld
aad
xchg
jb
mov
mov
inc
mov
mov
cmpb
pop
inc
mov
stos
ficompl
ret
mov
das
mov
int
in
pop
into
cwtl
mov
cmc
push
push
sbbl
sbb
pop
push
dec
cmc
insb
outsl
sbb
fldl
mov
data16
cmp
popf
pop
inc
dec
sti
imul
in
cmp
mov
inc
mov
in
scas
adc
fisttps
inc
rolb
cmp
pop
push
pop
pop
rorb
outsl
push
out
push
add
mov
in
in
cmp
setns
fwait
test
inc
pop
mov
pop
jle
pop
mov
sub
push
xor
cmc
inc
mov
daa
push
or
leave
icebp
lods
call
leave
inc
adc
sahf
xchg
jo
shr
loopne
sbb
iret
cltd
mov
mov
in
jmp
mov
insl
inc
jno
jge
aas
add
lods
cmp
imul
push
dec
loopne
outsl
add
bound
repnz
mov
ja
sub
or
mov
and
mov
arpl
push
je
push
stos
test
or
rolb
stos
mov
mulb
push
xchg
sahf
sbb
xchg
or
pop
sub
or
and
mulb
out
dec
sub
mov
ret
adc
adc
mov
imul
or
push
sbb
push
mov
aaa
fistl
orl
xchg
mov
ja
int
xor
ds
psrad
outsl
xor
adc
data16
pop
cmp
push
xchg
lcall
ficoms
mov
mov
sub
xor
lcall
adc
in
std
outsb
sbb
insl
clc
xchg
in
test
dec
xchg
sbb
xchg
lahf
cmc
clc
sbbb
pop
jle
jle
pop
ret
inc
dec
cmp
idivl
in
mov
xor
jbe
pop
popf
add
fucomip
test
scas
mov
leave
xor
nop
in
mov
xchg
push
int
dec
imul
mov
cltd
push
andb
lods
or
mov
cmove
jnp
add
test
repz
mov
push
clc
pusha
jnp
out
mov
adc
jmp
xchg
jecxz
jbe
add
ss
cmp
std
fs
gs
jno
sub
imull
sbb
fidivl
cmpsb
out
or
inc
lods
test
outsl
cmp
sbb
gs
call
inc
cmp
outsl
xor
mov
fs
rorb
aam
dec
pop
pop
or
and
inc
jecxz
dec
mov
fstpl
test
daa
aaa
gs
pop
out
loop
or
cmp
lcall
inc
sbb
aaa
loop
popf
adc
jge
dec
mov
fs
xor
shrl
xor
adc
addr16
push
jb
sti
dec
pop
into
test
in
adc
lret
rolb
lret
jl
pop
sub
xchg
pop
jb
lahf
rcll
nop
add
inc
mov
std
cmc
sub
jns
and
dec
out
and
sbb
scas
pop
inc
movsb
push
add
or
xchg
add
scas
jns
lcall
push
out
gs
sbb
mov
jb
lods
pusha
mov
push
movsl
mov
stos
mov
in
out
imul
les
sarb
jl
mov
mov
sarl
push
js
and
inc
and
sahf
xlat
fildll
add
movsl
sbb
movsl
push
pop
sub
aas
lock
lods
subb
shld
mov
sub
pusha
xchg
sahf
inc
jne
add
pop
xchg
sti
ret
inc
js
mov
add
xlat
daa
adc
addr16
xor
xchg
jecxz
insb
test
int
mov
jnp
cmp
xchg
fidivl
inc
call
xor
fs
ja
push
ja
subb
push
fs
cmp
xchg
bnd
imul
cld
andl
mov
dec
pop
sub
std
test
imul
in
xor
lahf
jmp
sarb
sbb
cli
or
adc
imulb
xor
mov
jnp
pop
lret
int3
ds
jae
lods
sbb
sbb
xor
cmpsl
repnz
call
push
inc
sbb
xchg
fdivr
mov
push
pusha
xor
sub
js
push
xchg
cwtl
aad
pop
jl
adc
test
xor
xor
loopne
jge
jo
sbb
xchg
pushl
jb
das
sbb
nop
push
adc
lock
test
addr16
add
les
hlt
mov
cmp
insb
xor
mov
pop
out
ret
icebp
mov
nop
push
leave
aad
and
testb
xor
xor
pop
cld
clc
test
gs
sbb
imul
bndstx
out
xchg
pop
dec
ds
jg
data16
ja
jne
in
sbb
lods
gs
inc
push
pushf
jle
mov
daa
cmpsb
stos
ret
dec
add
xor
mov
leave
dec
jnp
add
fwait
stc
pop
jnp
js
xor
in
xchg
mov
jno
loopne
dec
inc
mov
out
in
shl
cmp
dec
popf
js
mov
push
frstor
ret
shl
outsl
ficoml
sbb
outsb
insb
xor
stos
loope
scas
cmpsb
cli
fimull
xor
inc
push
mov
outsl
cmpl
xchg
pop
sbb
pop
push
push
adc
filds
fildl
fnstcw
mov
mov
xchg
rcll
popf
gs
stos
push
dec
mov
das
mov
mov
adc
in
lods
sub
js,pt
fisubl
stos
inc
and
xor
jl
bound
stc
add
mov
jno
push
mov
pop
cmp
jno
pop
jg
das
testb
jo
mov
push
and
test
sbb
rclb
push
xchg
subl
hlt
cmp
xchg
aam
push
out
sbb
xchg
ljmp
fildll
adc
sti
xchg
dec
xchg
data16
repz
dec
fimuls
mov
loope
dec
mov
out
pusha
sub
outsl
push
inc
or
sub
movsl
in
dec
jp
out
inc
mov
cwtl
add
in
xor
or
orl
lahf
ret
adc
jns
scas
dec
fmuls
sub
push
xchg
inc
jmp
jg
stos
call
xor
xor
cmc
aam
outsl
pop
lret
call
sbb
mov
mov
pop
je
mov
sub
movsl
cwtl
add
scas
push
jnp
mov
sub
cmp
cli
xor
push
xchg
sahf
cli
fwait
dec
add
mov
mov
subb
shrb
xchg
dec
fcomps
sub
call
test
xchg
imul
add
frstor
push
iret
shlb
cmpsl
mov
pop
negl
pop
inc
push
and
push
dec
cmp
xchg
loope
pop
mov
fnstcw
mov
push
fisubs
leave
jecxz
xchg
jns
hlt
outsb
scas
cld
pop
mov
pop
hlt
stos
add
scas
pop
hlt
popa
lea
mul
fmuls
inc
mov
lock
xchg
add
int
stc
insb
loopne
stc
mov
pusha
in
hlt
jmp
cmp
shll
pushf
fwait
cmovs
sbb
and
rorb
scas
fisubl
leave
sti
iret
repz
cmp
mov
in
adc
testb
pop
inc
imul
or
cmp
pop
sti
mov
shlb
lea
sarb
aam
and
adc
pop
inc
cmp
jno
dec
cmp
inc
flds
sub
pushf
mov
out
and
loopne
dec
movsl
adc
lret
repz
call
jecxz
subl
push
ret
cs
stc
cmp
jecxz
shll
filds
dec
pop
mov
mov
aam
cmpsl
call
sub
lahf
or
cld
adc
lcall
jle
in
mov
cltd
or
inc
adc
sub
and
cmpsb
sbb
and
fsubs
inc
rcl
push
jno
cmp
mov
mov
mov
sub
ljmp
add
fmull
sub
outsb
jnp
in
jbe
repnz
mov
cmpsl
mov
idiv
in
sub
sti
jb
jns
in
fs
mov
ss
icebp
xor
push
xchg
fsts
pop
inc
adc
push
fstps
dec
aam
sbb
aaa
add
daa
push
outsb
add
mov
stc
cmpsb
cmp
jne
adc
inc
jmp
push
sbb
add
add
or
push
daa
push
iret
mov
inc
mov
mov
and
cmpl
xor
dec
adc
test
pop
dec
push
xchg
nop
adc
push
lret
pop
inc
mov
imul
jmp
mov
push
add
or
cmp
inc
lret
mov
xchg
out
adcb
pushl
clc
xor
or
push
pusha
or
adc
das
faddl
ret
push
xor
dec
inc
lock
das
inc
test
les
pop
push
cs
notb
enter
lock
cwtl
xchg
mov
sub
mov
dec
xor
push
cmpl
fwait
dec
dec
out
jle
cmpsl
ss
sahf
mov
and
xchg
push
test
cmp
sti
push
inc
ja
inc
sub
das
pop
test
arpl
fsts
out
loopne
scas
fwait
shr
cmp
movsl
bound
pop
insl
or
test
mov
push
xchg
loopne
xor
cmp
sub
adc
es
ss
xchg
adc
push
pop
and
push
sti
fldln2
mov
add
das
add
fwait
mov
jg
mov
pusha
mov
inc
je
lret
negl
scas
divl
incb
sub
mov
shlb
xchg
sbb
or
lret
out
popa
push
mov
dec
aad
xor
pop
loop
sbb
in
dec
and
cmp
sbb
clc
mov
fidivs
fsubp
add
cli
and
ljmp
push
inc
popf
es
add
xchg
test
dec
nop
xchg
adc
das
nop
test
mov
mov
std
insb
sbb
adcb
mov
and
pushf
cmp
mov
adc
mov
loop
and
loop
hlt
ljmp
bound
rorb
in
mov
es
xchg
aas
and
outsl
mov
lods
in
das
pop
xor
es
sbb
in
push
fbstp
inc
mov
add
cmp
push
iret
or
jbe
push
cmp
adc
imulb
add
imul
push
sub
push
negb
in
sahf
into
decl
inc
push
jns
popf
repnz
xchg
mov
push
jo
in
cmp
mov
cmp
pop
int
xlat
xchg
ss
or
fwait
imul
cmp
lock
jle
mov
outsl
popa
mulb
push
mov
inc
pop
xor
adc
jp
adc
in
and
out
sbbl
mov
mov
ror
lods
add
xor
add
jg
inc
shll
hlt
aad
sbb
add
in
jno
call
sahf
mov
ds
adc
push
mov
lret
push
mov
je
rcl
mov
hlt
sub
mov
insl
xor
mov
push
ret
test
shlb
popa
mov
js
xchg
jp
les
sti
cmpsl
sub
adc
pop
pop
lea
aad
cmpsb
movsb
add
dec
xchg
and
dec
lret
push
and
xor
jecxz
cld
xchg
jo,pt
lock
add
xor
insl
or
adc
daa
ljmp
adc
pop
sub
dec
xchg
push
in
xor
ja
scas
gs
inc
shrb
and
xor
ret
aad
mov
out
in
enter
divl
jl
mov
sub
ret
iret
rol
mov
popa
jmp
or
outsb
clc
push
push
imul
add
or
mov
cmp
jl
ss
mov
xchg
mov
pusha
mov
imul
sub
or
mov
outsl
int
scas
fdivrl
lock
jno
clc
inc
lds
pusha
call
jnp
stos
add
out
adc
movsl
xchg
iret
add
cs
sub
pop
iret
fdivrs
out
inc
jo
and
scas
rolb
sub
daa
or
or
pop
sbb
dec
jg
sahf
filds
test
fdivs
movsl
in
int3
scas
lock
adc
jg
rcll
daa
movb
push
adc
push
adc
cmpsb
cmp
rcr
scas
or
cld
mov
inc
iret
lret
in
cltd
cld
add
or
mov
xchg
test
fwait
mov
shrd
mov
aas
push
mov
sub
inc
lea
fidivrs
xchg
sbb
movb
gs
outsl
inc
divb
ficompl
sub
mov
mov
test
loop
mov
jno
scas
scas
mov
push
push
cld
xor
lods
xchg
xor
lods
jae
or
pop
lods
xchg
mov
clc
hlt
movsl
xlat
out
pop
rclb
inc
lret
rep
cmp
and
lods
repnz
std
ss
add
rol
fcoms
and
dec
jne
mov
lcall
mov
loop
inc
push
inc
xchg
inc
mov
add
or
clc
pop
xor
dec
out
imul
jno
pop
pop
dec
and
and
sarl
sub
arpl
mov
in
sbb
xchg
ret
hlt
mov
in
mov
enter
sbb
push
mov
dec
inc
sub
xchg
pop
jge
call
push
push
adc
pop
xchg
hlt
lods
jecxz
addr16
test
mov
xor
out
out
cmovns
sbb
sti
pop
test
mov
rcl
int3
or
mov
test
lcall
adc
cmp
cwtl
loopne
movsl
sbb
aam
jecxz
xor
inc
into
imul
pop
addl
cltd
mov
pop
jne
mov
mov
hlt
mov
stos
jae
add
dec
push
mov
in
cmp
imul
mov
pop
aas
push
outsl
jecxz
push
mov
jle
lahf
push
add
ljmp
or
mov
xor
mov
mov
mov
sbb
rcrb
cmpsl
mov
lock
adc
aaa
inc
out
out
pop
fsub
pop
les
sub
subl
xor
in
pop
xchg
sub
push
fldt
push
dec
in
pop
hlt
mov
lds
jae
repnz
inc
adc
sub
cwtl
icebp
add
mov
lods
dec
jmp
add
mov
sub
das
mov
bound
or
sbb
dec
push
jl
pop
sahf
popa
or
iret
cwtl
xor
mov
arpl
ja
aaa
and
aad
and
xchg
shrl
lahf
cmp
dec
xchg
cmpsl
sbb
pusha
movsb
shll
ljmp
push
pop
xchg
jg
or
mov
and
mov
arpl
enter
mov
mov
pop
or
imul
xchg
sub
leave
push
sbb
adc
pop
loop
outsl
inc
ds
mov
out
test
dec
cmpsl
fsubs
in
mov
mov
mov
sub
sub
jbe
or
xor
sbbl
and
mov
test
cmp
add
pop
fwait
sub
sbb
ja
or
pop
fsubl
or
adc
lods
xor
int
jno
or
fs
add
sub
and
mov
inc
icebp
testl
or
pushl
sbb
sbbl
xchg
xor
sub
lods
push
dec
mov
xor
andps
mov
aad
or
daa
xor
inc
inc
faddl
adc
push
clc
mov
xchg
adc
popf
das
or
dec
clc
adc
cmp
and
mov
pop
adc
push
mov
inc
js
push
xchg
lock
dec
lock
jne
xor
inc
pop
inc
mov
xorl
fbld
lods
push
aas
js
in
xchg
xchg
push
and
insl
or
push
push
mov
sbb
sub
in
dec
ret
notl
in
jmp
insb
lcall
popf
push
fldcw
sti
pop
test
dec
pushf
xchg
lds
adc
icebp
adc
fistps
xor
lea
ret
xchg
mov
jle
imul
in
xchg
cltd
leave
inc
dec
xor
lods
movsl
dec
repnz
out
aaa
dec
pop
fs
insl
jne
inc
and
popf
xor
lods
aaa
dec
pop
imul
das
jp
inc
pop
outsl
xor
int3
pop
in
xchg
sub
mov
xlat
orb
mov
movsl
sub
adc
sub
ljmp
sub
in
cmpb
movsl
mov
pop
imul
xchg
int3
popf
cmpsb
pop
xchg
sahf
jno
mov
lods
jnp
stc
cmpsb
mov
imul
add
dec
xchg
xorl
sub
add
cmpb
sbb
cmp
pushf
bound
jl
ffree
lret
std
xor
xlat
sub
push
bound
shlb
xor
lahf
push
adc
pusha
fisubrl
push
sub
sbb
std
xor
in
adc
lcall
test
xchg
push
cmp
push
adc
push
add
leave
mov
out
insb
pop
repz
scas
cmc
flds
sbb
and
push
dec
mov
mov
leave
inc
sbb
int
jge
push
nop
cmp
ss
cli
inc
sub
dec
inc
filds
xchg
push
insb
add
mov
movsb
and
icebp
loope
popa
xor
adcb
mov
dec
inc
pop
jle
sub
xchg
fnstsw
and
cs
loopne
cmp
push
cs
mov
cmpsb
mov
test
movsb
jmp
ss
dec
mov
jp
cmp
fs
mov
mov
dec
jmp
pop
cmp
stos
fldl2e
les
mov
loopne
or
xchg
cltd
jecxz
push
sti
lret
pop
imul
fbld
xchg
lret
mov
outsl
xchg
movsb
dec
push
stos
push
hlt
and
lahf
ret
xor
jnp
pop
or
jle
out
pop
push
in
int3
or
mov
and
jns
dec
xchg
pop
jns
gs
ret
or
ljmp
xor
mov
adc
ljmp
popf
and
call
mov
add
les
outsl
adc
lods
loopne
mov
mov
ss
nop
mov
lea
fdivl
jns
jle
pop
xchg
dec
mov
lahf
loopne
lods
xchg
push
jae
and
ror
je
dec
mov
int3
into
icebp
mov
into
aam
aaa
lea
lock
and
jae
scas
add
js
out
cmpsl
pop
ret
and
and
out
pop
pop
loopne
test
mov
sub
ret
mov
or
cmp
stos
insb
pop
ljmp
and
pop
shlb
test
xchg
push
or
lock
jns
pop
lds
inc
or
mov
pushf
lret
mov
inc
add
sub
fstps
fistpl
loop
sub
sbb
gs
pop
imul
ja
ret
and
xchg
xchg
popf
scas
cmp
aaa
das
add
cmp
ss
xlat
mov
or
cmpsl
fidivs
cmc
add
ljmp
push
jg
in
fmul
jp
rcl
dec
cmp
push
jo
mov
shll
mov
inc
loop
rcr
out
cmp
mov
add
jne
fdivrl
mov
stos
xor
jne
loop
sbb
out
jecxz
inc
pop
mov
cmp
insl
out
lods
les
xchg
add
jae
loope
push
test
inc
push
sub
or
int3
dec
leave
mov
inc
call
or
dec
pop
mov
cltd
je
cmp
inc
push
fisubl
cli
in
jo
call
push
pop
and
inc
add
test
in
andl
lahf
repnz
or
xchg
mov
dec
inc
lea
pop
loope
lock
stos
mov
int
fisttps
out
push
xchg
roll
cmp
cwtl
stc
jecxz
jg
sub
pusha
xor
in
mov
fs
xchg
gs
mov
mov
sbb
mov
repz
mov
mov
pop
xchg
cli
mov
add
into
mov
outsl
push
cld
inc
xchg
data16
aad
sub
test
andb
sbb
jecxz
pop
aad
sbb
and
and
inc
mov
add
movsb
cltd
xor
repnz
inc
fistps
xor
jle
out
or
xchg
add
std
shld
push
iret
adc
dec
out
cmpsl
cmp
movb
int
add
test
loop
repnz
or
pop
lods
xchg
movsb
mov
mov
mov
icebp
popa
xor
push
or
cmp
mov
and
mov
and
cwtl
push
lret
push
fcmove
aas
lods
xlat
cwtl
int
mov
jb
cmp
sbb
lods
jo
cltd
xor
imul
jg
cmp
cmpsb
xchg
sbb
adc
fidivrs
movsb
into
lret
stos
stos
or
aam
outsb
mov
out
lret
jg
push
dec
dec
je
cmpsb
ja
mov
push
jge
pop
mov
push
gs
imul
fildll
sbb
add
bound
fmulp
lea
jmp
icebp
mov
or
into
ja
idivl
mov
pop
stos
push
es
pop
repz
aam
movsb
lods
adc
loop
repnz
sub
outsb
push
std
xor
or
xlat
jg
outsb
dec
push
sbb
pop
dec
cld
xor
adc
stc
mov
sbbb
or
mov
and
rolb
stos
mov
pop
out
dec
push
sbb
hlt
push
cltd
adc
push
cmc
sbb
and
ja
dec
adc
pop
jmp
mov
mov
inc
fwait
adc
cld
xchg
push
stc
call
insl
mov
mov
pop
fnsave
not
repz
movsb
mov
push
pop
aas
sahf
shll
lods
sub
addr16
pop
aaa
pop
push
mov
test
sbb
orb
xchg
es
pusha
sub
and
jne
cmpsl
lea
dec
xchg
mov
or
pop
mov
add
jne
xor
mov
jnp
testl
inc
popf
fiadds
test
mov
mov
and
push
cmp
cmp
cs
xlat
mov
test
jle
push
push
fs
orl
and
mov
cltd
xlat
insl
enter
jecxz
pop
ljmp
pop
jbe
jo
jg
faddl
popa
jecxz
arpl
movsb
cmp
dec
add
xchg
rcrb
ja
mov
popa
fimull
rcrl
adc
dec
subl
sbbb
cltd
jl
push
adc
adc
adc
je
xchg
addr16
fs
fisubrl
mov
loope
and
bound
jl
out
lds
imul
cmpsb
aam
shll
xchg
jnp
xor
test
xchg
push
xchg
jecxz
mov
sti
or
or
ss
ret
ljmp
ret
jae
push
jne
adc
xchg
scas
cmp
push
push
lea
mov
xchg
jg
fstl
out
sub
cmp
jbe
lods
mov
and
xor
or
nop
repnz
mov
jmp
outsb
fbstp
or
cmc
pusha
pop
fdivrl
adc
mov
push
xchg
xchg
cltd
call
jo
rorl
jb
mov
sti
add
add
int
ja
and
xchg
daa
lods
dec
jl
shll
sbb
loope
std
xor
pop
mov
daa
aad
pop
xchg
add
insl
pop
adc
adc
scas
je
sbb
icebp
lret
adc
cli
test
mov
fldcw
jb
sbb
xor
or
sub
loopne
in
sbb
xor
inc
sbb
pop
jmp
cmp
cmp
lods
outsl
in
mov
insb
inc
in
mov
add
adc
jno
psubq
inc
xchg
cltd
rclb
xchg
mov
push
mov
pop
shrb
das
fistl
pop
cmp
or
cltd
jnp
pop
add
mov
xor
cwtl
mov
push
lock
inc
cmp
push
add
cmp
pusha
push
cld
sbb
cmp
mov
lods
xchg
add
fisubrs
mov
push
in
xor
add
leave
je
stos
mov
and
pop
loopne
mov
iret
addr16
jne
fwait
pop
adc
pop
leave
loope
ffreep
lret
cmp
dec
mov
inc
dec
mov
ljmp
les
or
cli
inc
inc
clc
iret
std
xor
inc
mov
jae
mov
lcall
jbe
repnz
mov
cmp
pop
jmp
popf
mov
inc
dec
xchg
xor
inc
mov
add
sbbl
in
insl
xor
add
les
aas
pop
mov
sbb
mov
mul
jb
scas
aaa
mov
aas
movsb
mov
mov
cli
push
daa
fdivl
clc
mov
fsubp
ror
push
out
loope
mov
dec
and
loop
jmp
lea
jmp
les
sbb
mov
sub
fs
mov
mov
hlt
sbb
dec
hlt
sbb
hlt
push
mov
add
test
leave
jno
outsl
adc
imul
dec
pop
jmp
loopne
mov
ficomps
icebp
push
hlt
xchg
lds
or
std
dec
fsubs
sub
in
pop
gs
mov
movsb
or
and
rclb
xor
fsubl
ret
cld
shr
and
xor
jecxz
enter
push
ret
sub
stos
adc
fmuls
mov
mov
push
cs
imul
arpl
icebp
push
mov
xchg
xchg
fcoml
test
push
mov
icebp
xchg
in
stos
jb
xchg
test
xor
mov
adc
jne
popa
inc
push
xor
icebp
and
test
sub
scas
mov
insb
and
adc
daa
in
dec
xor
xchg
shrl
jne
add
lret
and
loopne
fucomi
and
cmp
in
add
ss
aaa
mov
sbb
mov
cmpl
and
mov
clc
pop
imul
push
scas
cmp
pop
cli
test
test
out
mov
cmp
es
fcompl
aad
xor
jle
mov
sub
in
movsl
data16
adc
cli
mov
sar
imul
cmc
shlb
mov
stc
lea
roll
cmpsl
aad
jne
ret
cmp
mov
nop
mov
into
push
sub
adc
inc
mov
ss
add
pushf
cmpsl
iret
hlt
add
test
adc
std
xor
adc
jp
leave
ret
fdivrl
lahf
orl
cmp
jnp
and
bnd
sub
int
sbb
fidivrs
loope
aaa
lret
xchg
push
sbb
outsl
xor
mov
mov
ret
mov
and
add
and
pop
mov
outsl
stc
and
int
sub
out
push
pop
imulb
dec
fs
jmp
dec
xchg
imul
dec
dec
shll
pop
add
jb
aaa
maxps
sahf
into
fnstsw
std
pop
cmp
jg
movsl
sbb
pop
xor
or
jmp
cwtl
sub
incb
xlat
leave
jbe
loopne
xchg
mov
jge,pt
add
sub
aam
mov
dec
dec
add
iret
cld
andl
leave
dec
or
bound
int3
inc
repz
aam
push
into
add
popf
jbe
movsb
push
enter
cmp
pusha
jecxz
sub
leave
jle
orb
fisubl
inc
lock
scas
popa
pop
js
and
daa
jb
scas
sbb
enter
xlat
push
stos
mov
mov
xchg
repnz
xor
out
jb
inc
sbb
cli
inc
clc
icebp
mov
dec
xor
mov
and
push
add
sbb
cmp
cmpsb
pop
mov
jo
and
je
push
adcb
cmp
xchg
push
mov
mov
adc
and
not
push
and
add
out
les
pop
stc
ret
cmp
push
push
add
pop
dec
icebp
sub
aam
out
ret
sbb
int3
pop
sbb
jns
and
leave
imul
xchg
jge
sti
pop
fcoms
xchg
pop
push
jmp
pop
xor
dec
add
pop
in
adc
inc
incl
lock
repnz
fwait
loope
jecxz
jno
xor
xlat
movsb
cmc
sub
mov
dec
pusha
pop
shr
stos
mov
fdivl
bound
add
into
jle
std
fisubl
cltd
dec
mov
in
shlb
stos
mov
sbb
cmp
out
jo
mov
mov
xchg
mov
andb
lods
shrb
cltd
arpl
jge
adc
cmp
insl
lds
xchg
xor
test
insb
inc
inc
repnz
pop
out
sbb
in
jge
sub
cmpsl
iret
sbb
push
inc
and
insb
inc
add
cli
xchg
inc
mov
in
fcoms
in
and
sub
sbbl
and
into
repnz
cli
jne
push
jle
sub
pushf
loopne
mov
cld
sbb
cmpsl
or
sub
mov
stc
pop
clc
push
mov
fld
mov
push
sub
ret
push
jb
inc
insl
pop
pop
sbb
cmc
leave
xchg
pop
and
popa
test
jnp
fwait
dec
jae
add
push
leave
shrl
add
mov
stc
popf
mov
mov
das
push
xlat
push
lret
xchg
nop
and
mov
sub
rclb
pop
or
and
addb
xchg
mov
enter
pop
into
lret
pop
scas
and
mov
leave
ficomps
sbbl
repnz
int
popf
lods
mov
int
add
dec
cmc
cmpsl
mov
inc
push
xor
pop
movsb
mov
push
pop
imul
push
pop
test
ja
lcall
shl
inc
mov
cmpsb
aam
sti
cmp
mov
gs
sbb
and
sub
pop
pop
dec
int3
outsl
mov
mov
push
inc
jns
jmp
aas
les
repz
cmp
fstl
fisubl
push
jne
stc
fs
xchg
in
cld
sbbb
cwtl
mov
outsb
insb
xlat
sbb
mov
jne
repnz
insb
mov
leave
xlat
cmpsl
pop
push
fsubrl
lcall
push
xchg
mov
ljmp
xchg
xchg
dec
dec
addr16
into
pusha
cltd
mov
mov
lret
icebp
xlat
inc
les
cmp
lret
mov
xchg
movb
cmpsb
outsl
sbb
push
push
dec
addr16
stos
mov
fisubl
adc
push
push
xchg
insb
sub
lods
int3
sti
icebp
pop
int
scas
fsubr
stc
dec
stos
lds
out
scas
xor
popa
xor
jp
pusha
iret
adc
jnp
arpl
sti
cmc
or
mov
push
xlat
mov
xchg
pop
test
neg
sbb
and
fsubs
sbbl
sar
fistl
pop
faddp
dec
sbb
in
and
mov
jno
lods
mov
mov
mov
repnz
pop
mov
mov
mov
mov
cli
sbb
pop
hlt
jb
fdivl
in
mov
int3
in
je
xchg
or
pushf
imul
inc
xchg
and
dec
add
mov
scas
repz
and
sub
sahf
mov
lds
fnsetpm(287
test
lea
adc
insb
or
mov
mov
xchg
es
fwait
jle
pop
mov
das
stos
lea
pop
imul
adc
je
fwait
lret
or
or
jmp
in
int
aaa
insb
arpl
mov
add
inc
xlat
arpl
cld
dec
sub
movsb
js
cmpsb
aam
and
xor
push
dec
es
dec
je
or
lods
xchg
fptan
or
cwtl
movsl
inc
sub
lds
inc
lcall
stos
jnp
pop
sub
dec
mov
addr16
jne
xor
pushf
lcall
shl
or
or
out
and
adc
add
cmp
dec
cmovp
daa
adc
xchg
fsubrl
cwtl
cmp
movsb
je
lock
scas
xor
xchg
inc
outsl
pop
in
fdivrl
out
popf
pop
pop
xor
add
stos
sbb
in
lcall
jne
dec
jbe
mov
imul
inc
cmpsb
pop
fisubrl
mov
xlat
mov
mov
adc
cwtl
inc
fldl
and
ss
lea
inc
mov
xor
push
test
push
sbb
mov
mov
sub
or
mov
rorb
fisttpl
in
lods
jmp
pop
fdivrl
cmp
es
orb
xor
popa
cld
sti
or
repz
ds
into
sub
push
faddl
in
or
push
clc
pusha
test
cmc
jge
div
les
pusha
dec
sbb
rcrb
dec
jnp
and
push
pop
ret
movsl
cmpsl
stos
add
sbb
cmc
gs
mov
mov
sbb
movl
loop
movsb
out
pop
pushw
subb
ficompl
pop
rcr
cmpsl
pop
movsl
jg
pop
loop
cltd
fisubs
inc
sbb
fdivp
pop
xor
fs
stos
lock
xor
nop
jmp
xchg
push
andb
enter
fisubrl
xorl
mov
sub
or
sahf
fisubl
jecxz
sub
mov
movsb
push
movsb
push
pop
dec
adcb
xchg
loopne
jecxz
add
push
dec
xor
jge
mov
stc
mov
push
js
sbb
or
push
mov
and
sub
lods
into
stc
das
fstpl
sbb
xchg
insb
mov
clc
cmp
cmpsl
xchg
sub
scas
into
jnp
dec
cltd
ret
push
lods
fiaddl
outsl
out
pop
inc
movsl
lea
scas
sub
sub
loopne
xor
pop
mov
xor
rcl
sub
mov
imul
push
or
push
dec
loopne
cmp
mov
test
mov
cli
adc
mov
push
push
cmpsl
icebp
cmc
jno
add
xchg
cmp
loop
lcall
stos
in
insb
dec
inc
pop
in
outsl
jge
push
sbb
cmp
push
sub
test
imul
lea
gs
xchg
jg
cli
std
into
repz
cwtl
cmc
lret
pusha
mov
lock
or
sbb
imul
aaa
imul
inc
adc
aad
or
mov
call
pop
ja
xorb
mov
mov
mov
pop
stos
push
lock
divb
add
sbb
js
and
push
loopne
cmpsl
mov
add
stos
ljmp
jnp
push
xlat
mov
add
inc
jns
jnp
das
pop
test
fildll
lcall
lret
cmpb
inc
mov
stc
pop
fdivr
dec
mov
inc
imul
cwtl
in
xlat
rcrb
in
stos
adc
insb
mov
cmpb
aam
dec
mov
ret
mov
out
dec
push
lods
cmpsl
daa
push
lahf
sbbl
les
adc
push
xchg
mov
and
lock
out
dec
les
les
mov
and
lds
pop
push
and
mov
pop
push
out
dec
in
fistl
out
imul
inc
mov
push
adc
adc
or
lret
lahf
outsb
sarl
lods
ret
sbb
arpl
mov
je
gs
bound
dec
outsl
aad
ficoms
mov
xchg
out
iret
mov
js
mov
xor
mov
addr16
mov
scas
cmp
mov
pop
leave
adc
pop
jo
test
cli
pusha
out
lods
jae
pop
pop
cmp
mov
leave
dec
mov
cli
mov
lock
mov
and
xor
cmp
or
out
cmp
and
adc
les
sarb
mov
cmp
pop
add
test
mov
nop
push
hlt
add
scas
je
add
xor
pop
repz
sub
mov
sub
add
mov
hlt
loope
xchg
inc
sub
fs
pop
out
in
push
call
out
adc
in
jl
sbb
shlb
in
imul
hlt
push
sub
cmpsl
jecxz
push
pop
dec
cwtl
push
add
add
dec
iret
xchg
push
out
pushf
push
out
or
cmp
mov
jns
sub
fsubrs
movb
fistl
je
push
adc
movsl
xlat
andb
add
sbb
push
jecxz
xor
int3
inc
sbb
dec
and
xchg
out
and
xchg
sbb
pop
hlt
xor
xchg
fldenv
call
jmp
mov
mov
ja
push
sub
pop
sub
add
pop
jbe
pcmpgtd
mov
xor
ds
mov
lahf
pop
roll
in
jae
out
pushf
cmpsb
inc
jmp
or
cmp
fbstp
fistpll
xchg
imul
imul
subb
inc
adcb
jnp
cmp
mov
cli
sahf
sub
push
hlt
mov
pop
xchg
push
push
pop
cmpsl
cltd
out
outsb
push
ja
adc
pop
lahf
dec
or
sub
pop
outsl
mov
lret
jl
js
pusha
xor
push
pop
cld
inc
pop
pop
add
jmp
dec
push
fldl
and
sbb
sbb
jb
inc
mov
jno
daa
or
fldcw
out
fnsave
ss
dec
add
arpl
ss
cltd
dec
cmp
mov
fsubp
push
push
pop
movsl
bound
mov
jb
mov
or
loopnew
fildll
loopne
arpl
imul
or
loopne
lds
sbb
jae
push
xor
mov
in
ja
leave
fcompl
sub
xchg
cld
stos
mov
cmp
leave
test
je
sbb
nop
or
xchg
je
inc
fnstenv
adc
les
mov
jmp
data16
adc
pusha
jnp
shl
dec
dec
addr16
dec
sub
cmc
cmc
fisttps
out
xchg
stos
pop
insl
imul
push
xor
sbb
xor
mov
ds
clc
lea
stos
mov
scas
std
scas
shl
or
sub
push
cmc
test
xchg
xorl
dec
dec
add
movsb
add
mov
xchg
push
out
in
jmp
ror
mov
and
lock
mov
jae
push
sub
lods
stc
or
jno
scas
xor
adc
pop
inc
nop
inc
int
cmp
dec
pop
je
jg,pt
pushf
fldl
adc
rorl
enter
lret
and
enter
fsubs
loopne
xor
pop
or
adc
mov
mov
outsb
shrl
dec
xchg
mov
in
test
fildl
add
xor
add
or
and
xor
daa
add
and
cmp
incb
ret
mov
dec
xchg
xchg
adc
mov
ficompl
and
or
stos
je
or
mov
and
jmp
clc
addr16
xchg
lret
pop
add
dec
orl
cmp
cmpsl
test
lods
popf
xchg
inc
pop
lcall
ja
mov
xchg
cmc
mov
mov
sub
lea
dec
pop
fistpl
sbbl
jecxz
movsl
cmp
sarb
jns
and
outsb
in
aam
lret
push
push
xorl
pusha
mov
bound
inc
push
inc
xchg
pop
cmc
ret
sub
shll
test
jnp
cmp
xor
imul
ja
lahf
pop
fwait
scas
imul
mov
in
and
ss
xchg
mov
add
sbb
sub
loopne
mov
insl
push
push
outsb
repnz
cmp
roll
stc
test
insb
inc
sub
ret
loopne
inc
dec
pop
sub
push
into
xor
mov
xchg
icebp
stos
lds
pop
add
aam
incb
mov
lds
cmp
add
mov
sbb
cmp
jo
sahf
fimull
adc
mov
xor
stc
and
in
jg
add
repz
fisubs
sti
orl
push
cmc
movsl
cli
or
pop
and
enter
and
pop
add
int3
stc
lods
and
sub
adc
dec
and
xchg
shlb
or
rolb
push
xor
insb
fnsave
sti
mov
shll
popa
mov
and
cmp
jp
or
sti
outsb
dec
xchg
jp
push
and
dec
hlt
mov
sti
cwtl
les
scas
adc
lds
test
ret
inc
cltd
nop
push
mov
stc
dec
das
cwtl
imul
test
jecxz
fldl2t
shll
xor
repnz
push
xor
mov
fs
imul
outsb
testb
mov
sub
fcmovnbe
sbb
icebp
int
dec
mov
push
cld
xchg
xlat
pop
lds
mov
mov
inc
xor
fsts
xor
mov
sub
dec
jae
xchg
xor
mov
dec
mov
cmpsl
por
popa
sub
cs
xchg
cld
shlb
imul
mov
inc
mov
dec
xor
fwait
cmpsl
cmc
jl
fdivrs
imul
ds
rcll
and
sbb
int3
inc
aaa
dec
cmp
jns
lahf
and
mov
daa
hlt
aad
loope
stos
out
mov
dec
loopne
dec
cwtl
cmpsb
lds
pop
xchg
push
add
add
xchg
das
aaa
pop
sbbl
lods
cld
call
test
arpl
je
movsl
icebp
jb
leave
pop
xor
dec
lret
iret
lds
cmpsb
mov
mov
mov
pop
cmp
das
stc
inc
lods
pop
mov
jae
sbb
dec
inc
dec
cmc
adc
add
add
lret
imul
iret
lret
xchg
xadd
scas
push
aad
xchg
cmc
idiv
into
jo,pt
mov
jp
mov
push
jns
dec
inc
xor
lahf
loope,pt
mov
mov
mov
stos
or
xor
push
lock
adc
push
sbb
dec
divl
sbbl
mov
popf
lods
call
push
fistpl
notb
gs
lods
jle
xor
dec
dec
fidivrl
dec
jp
and
jl
pop
pop
pop
jl
outsb
repz
repnz
jbe
jge
or
add
iret
and
imul
cwtl
ficompl
fiaddl
dec
jo
and
push
and
pushf
scas
mov
push
fdivs
lea
cmc
adc
and
fwait
pop
push
mov
fidivrl
or
lcall
sbb
push
popf
outsb
xchg
bound
pop
divb
lds
cmc
or
sub
or
dec
outsl
inc
stos
or
pop
push
dec
fsubrl
mov
cmp
pop
xor
pop
cmp
cltd
int3
mov
inc
and
addr16
out
push
loopne
adc
inc
rolb
insb
hlt
xchg
fwait
adc
cmpsl
fdivrl
cmp
xchg
pop
pop
andl
test
and
push
cli
pop
fistl
push
insl
sub
jg
popa
enter
mov
hlt
rorl
das
jge
adc
std
negb
shr
dec
push
lret
hlt
das
aas
mov
sbbl
test
xchg
mov
ja
jmp
sub
jge
and
adc
mov
sbb
int
sbb
mov
fstp
xchg
jb
mov
idivb
push
repnz
shrl
cmp
cmp
mov
fsubrs
sbb
jp
cmpsl
cmp
pop
lods
in
inc
inc
loopne
mov
mov
dec
loope
in
add
outsb
mov
mov
sarb
and
mov
aaa
inc
mov
pop
in
repnz
inc
add
mov
dec
movsl
je
and
cmp
fidivl
in
mov
fidivs
jns
pop
fistpll
push
popa
push
mull
adc
data16
adcl
popa
imul
iret
sub
mov
movsb
filds
popf
mov
xchg
and
movsl
cmp
dec
std
jbe
notb
inc
icebp
cmp
push
aaa
repnz
ljmp
mov
dec
out
int3
push
inc
and
loope
and
push
call
aam
mov
lret
mov
mov
pop
jmp
push
out
mov
loopne
insl
mov
gs
xor
cmpb
mov
mov
mov
mov
shl
pop
jp
mov
insl
rcll
adcb
ret
in
mov
js
shr
jbe
dec
adc
and
mov
dec
lcall
call
adc
lock
decl
bound
xor
insb
jle
fstpl
add
fcomip
pop
jg
jge
mov
es
gs
shr
and
adc
xchg
inc
fmuls
fnsave
rorl
out
jge
add
pop
roll
mov
fildl
adc
pop
sub
jb
mov
push
or
test
mull
cmp
repz
outsb
push
dec
fnstsw
push
push
push
lret
xor
adcb
orl
rcr
adc
sbb
push
test
jno
rcrb
ret
adc
xor
adc
das
dec
xor
adcl
or
xchg
or
arpl
scas
outsb
xchg
dec
stos
les
int
push
lret
mov
inc
sbb
mov
lahf
cli
inc
xchg
add
jno
insl
out
xor
push
xchg
mov
out
scas
add
inc
sbb
sbb
ds
or
clc
faddp
mov
add
and
aad
sbb
into
xchg
repz
xchg
push
insb
jns
or
out
decl
sbb
jns
data16
out
fbstp
pusha
lock
mov
out
sahf
bound
lret
fwait
push
mov
pop
pop
cmp
loopne
inc
mov
dec
into
into
and
pop
dec
push
xor
test
push
mov
rcll
xchg
cmc
orb
cmpsl
mov
and
lahf
popf
jmp
add
int
push
insl
push
or
int3
inc
call
push
popf
sbb
add
test
push
cmp
fwait
mov
dec
mov
mov
enter
ja
fsubl
cmpsb
jo
sbb
sub
or
sub
aad
mov
xchg
ja
inc
loopne
pop
dec
imul
dec
mov
lock
inc
mov
cmp
popa
sub
sub
into
mov
arpl
sub
mov
or
cmp
filds
sahf
dec
sbb
mov
xchg
lds
sub
mov
mov
fnsave
out
hlt
sub
daa
push
xor
ds
and
adcb
in
pop
lea
sbb
je
sti
push
mov
addr16
mov
xchg
ds
test
lds
fstpl
fiadds
sub
mov
sarl
fisttpll
imul
pop
xchg
jle
call
inc
mov
inc
xchg
adc
mov
mov
test
mov
mov
or
lcall
bound
test
loopne
je
nop
jae
sbb
ljmp
scas
push
ud2
mov
xor
mov
sbb
mov
shll
cmpsl
sbb
lret
mov
popa
hlt
jle
push
or
in
testl
push
jg
dec
repnz
push
pop
mov
push
push
cmp
and
and
ds
inc
sbb
cmp
push
cmp
inc
cmp
aad
pop
bound
push
jb
cli
hlt
jne
cmc
mov
std
scas
dec
stos
sub
mov
lret
adc
sahf
repz
scas
sbb
ss
or
icebp
cmp
xor
mov
cmpsb
fldt
inc
pop
leave
jbe
out
ja
les
outsb
dec
xor
add
push
xor
insl
clc
push
imul
sbbb
dec
fstp
das
jmp
fs
sub
fwait
repz
xchg
int3
inc
or
in
mov
mov
adc
mov
dec
jne
sub
mov
mov
int
imul
or
or
push
jnp
clc
xacquire
push
or
movsb
adc
mov
adc
mov
dec
sub
inc
adc
cmp
rcll
adc
adc
ljmp
mov
cmpsl
movsb
adc
dec
pop
out
xchg
clc
movsb
cmpsb
sbb
xchg
test
stos
xor
or
arpl
out
mov
xorb
adc
and
pop
aaa
repz
push
pop
bnd
sbb
add
push
jb
fdiv
sahf
stos
dec
loope
and
dec
mov
pop
aas
sbbb
stos
cmp
jb
repnz
cmpsb
jg
sub
sti
int3
dec
jo
xorb
ljmp
pop
jmp
cmpsl
jbe
insl
mov
jns
les
cmp
lds
repz
push
lock
or
jnp
mov
iret
xor
ficoms
sbb
and
mov
jg
ljmp
jmp
inc
out
lret
call
inc
sti
loopne
pop
mov
ret
add
mov
adc
pop
xor
jo
cmp
push
pop
fdivrs
xor
jmp
jmp
sub
js
out
jge
mov
push
pop
call
je
xor
test
in
stos
mov
jmp
and
insb
mov
dec
mov
fldt
xor
mov
adc
push
sar
test
xchg
ret
sub
or
cld
push
in
pop
jl
out
dec
push
movsb
pop
or
mov
mov
dec
mov
or
push
repnz
sbb
ret
lcall
add
jmp
cmp
clc
icebp
push
cmpb
or
loopne
test
adc
cmpsb
nop
add
nop
dec
adc
fldl
jl
sbb
movsb
call
push
mov
mov
dec
mov
roll
jne
mov
add
xor
pop
or
stos
in
shrl
push
imul
mov
mov
push
gs
cmp
mov
sub
pop
add
push
xchg
sub
xorl
mov
std
in
adc
or
add
pop
inc
xor
fbld
mov
mov
in
movsb
roll
adc
test
lea
mov
cld
aas
jp
and
xchg
decb
call
mov
dec
sub
push
and
fiaddl
cltd
ljmp
js
xor
jl
inc
jae
lods
mov
movsl
mov
jmp
stc
movsl
push
sarb
sbb
les
scas
push
pop
inc
pop
leave
xor
loope
sbb
or
xorl
cwtl
ds
or
mov
gs
cli
int3
cmp
cwtl
leave
mov
das
pop
or
or
ljmp
sub
fmulp
jne
xchg
enter
inc
test
pop
sub
imul
dec
test
out
push
cs
pop
dec
mov
jo
test
xor
xlat
sbb
popa
jge
dec
inc
bnd
subb
subl
addl
imulb
mov
sub
jbe
cltd
jg
loopne
cmc
mov
inc
xor
or
jo
iret
lret
test
xor
fidivl
pop
cvtdq2ps
push
adc
scas
xrelease
jp
shrb
push
inc
push
out
cmp
pop
lods
and
push
ror
lock
sub
popa
inc
sbb
pop
les
popf
add
movsl
cld
mov
std
iret
enter
and
shll
or
mov
rol
push
popf
test
outsl
in
mov
insb
insb
loop
pop
mov
push
fiadds
jle
iret
sub
packssdw
cli
jb
sti
cmc
out
or
nop
imul
dec
lret
inc
mov
in
movsl
push
test
int3
repnz
aas
inc
sub
mov
popa
inc
aas
push
aam
sub
lods
jbe
jmp
xchg
pop
fiadds
push
cwtl
or
sbb
jo
inc
sbb
mov
inc
jg
enter
inc
sbb
fldl
and
sub
pop
and
jecxz
test
mov
push
insl
jecxz
in
stos
in
out
inc
in
imul
fisubrs
movsb
mov
pop
xchg
push
outsl
gs
and
dec
or
jg
or
test
or
test
push
scas
clc
movsl
sti
out
inc
xchg
jp
daa
adc
cmpsl
jne
pop
shrb
lcall
add
cltd
pop
adc
adc
lock
cmp
cmp
push
hlt
sti
pop
lods
int3
lret
or
adc
dec
icebp
adc
inc
ljmp
dec
fistpll
or
cmc
lods
shrl
inc
out
leave
dec
call
ljmp
sub
aaa
adc
adc
fs
cmpsl
jae
in
filds
lods
pusha
add
mov
add
xor
popa
je
jb
dec
dec
cmp
xchg
sahf
dec
rcll
out
xorl
cld
inc
push
pop
enter
mov
popf
std
push
enter
jno
sub
sahf
stos
aas
movsb
pop
ret
popf
cmp
cmp
push
push
pop
pushf
or
lea
inc
cs
mov
aas
mov
ja
jns
cmp
xchg
pop
aam
iret
pop
int3
int
inc
adc
mov
pop
and
push
cmpsb
dec
adc
pushf
repz
adc
xor
in
jns
jmp
pop
mov
shlb
pop
cs
sub
sarb
cmp
cmp
and
sahf
faddp
imul
inc
xchg
mov
leave
inc
xlat
iret
fs
std
xchg
add
cs
dec
adc
xchg
pop
neg
rorl
shll
push
mov
mov
xor
cwtd
xchg
js
fidivl
adc
cmp
stc
jb
ss
xchg
bound
inc
movsb
xchg
repnz
icebp
lods
je
aam
sub
lods
push
jnp
pop
sub
repnz
pop
jp
mov
mov
xor
push
data16
sub
divb
inc
jae
enter
lods
sub
fcoms
scas
popf
sub
inc
add
jp
rolb
push
cmp
sub
call
out
mov
push
std
sub
das
je
ljmp
inc
or
xor
jg
mov
xchg
outsb
pop
or
jmp
ret
xchg
pop
sahf
mov
cmc
ja
addr16
sbb
lret
push
jne
inc
adc
and
in
pop
je
fisubs
scas
stos
call
rclb
out
pop
add
ds
sbb
lret
out
xor
push
aas
cmp
shll
mov
mov
xchg
xchg
dec
ljmp
in
push
push
test
and
int
cmp
push
mov
add
outsb
jne
xchg
aam
arpl
inc
int
sbb
jb
lock
mov
or
mov
inc
push
mov
mov
nop
inc
inc
into
pop
or
cmpsb
stc
dec
push
rcrl
orb
xchg
push
push
ljmp
xchg
lods
push
loopne
fldl
in
inc
into
pop
mov
test
sub
add
sub
lcall
rclb
pop
or
mov
sarb
dec
lods
lds
lods
fistl
mov
adc
cwtl
or
arpl
add
sahf
push
test
mov
dec
mov
addr16
cs
dec
or
popa
cmp
jb
dec
je
lahf
lcall
stos
imul
arpl
adc
pop
sbb
int
test
dec
cmp
mov
xchg
mov
nop
rcll
cmp
insb
dec
and
sub
popa
cld
cmc
daa
lods
and
sbb
fs
or
shrb
or
fcmovu
cmp
das
faddp
xlat
test
sahf
mov
fdivrp
lcall
jnp
loope
aad
mov
jnp
sbb
pop
ljmp
test
imul
inc
leave
mov
push
lret
jmp
and
dec
lret
loop
add
cmpsl
xchg
inc
loop
js
js
mov
daa
mov
push
mov
sub
scas
add
je
push
or
cs
movsl
iret
jle
sbb
sub
lcall
bound
jmp
sahf
mov
int3
sbb
in
inc
mov
scas
push
movsb
cld
pop
cmc
add
mov
lods
mov
pushf
aaa
lcall
subl
sbb
and
mov
push
fldl
mov
jno
popa
and
xchg
leave
xchg
pop
and
in
inc
mov
xchg
hlt
cmc
aas
sbb
or
mov
pop
mov
mov
lock
ljmp
cwtd
fmuls
inc
cmp
pushf
aas
xchg
dec
adc
and
and
xor
aas
addl
test
shld
repz
push
push
and
pop
aad
lret
push
sbb
adc
int3
xchg
sarl
rcr
ret
inc
lock
andb
icebp
les
sahf
or
lods
pop
mov
fstps
outsb
cmp
pop
or
loopne
fsubp
cmp
mov
ljmp
cmc
bnd
adc
jae
es
sbb
jnp
jecxz
mov
cmpsb
push
jne
and
mov
xchg
or
inc
lahf
mov
pop
adc
add
inc
push
push
loopne
add
xor
mov
sbb
iret
sub
js
pop
std
std
dec
and
pop
repz
jl
inc
push
push
outsb
lcall
push
int3
aas
xchg
rorb
out
stos
ret
imul
adcb
dec
mov
notb
in
and
mov
mov
pop
mov
das
bound
pusha
ror
and
jle
adc
cmc
pop
inc
jne
das
push
fisubs
add
cmpsb
mov
pop
dec
repz
repnz
dec
orb
lock
movsb
push
js
pop
sub
ret
jmp
mov
test
rclb
push
cmpsb
adc
xor
push
add
add
bound
cmp
sbb
clc
fwait
push
dec
mov
xor
dec
insl
xchg
imul
inc
fstpl
es
pop
adc
or
ret
mov
mov
jo
xchg
jb
adc
adc
fwait
outsb
mov
sbb
inc
sarb
jo
mov
mov
enter
or
popl
jg
and
mov
dec
mov
call
orb
sbb
mov
lcall
icebp
frstor
ja
xchg
jnp
inc
test
mov
xchg
inc
iret
into
push
cltd
push
cmp
fsubr
xchg
jp
sbb
loop
in
cmp
in
xor
or
cmpsl
xchg
cmc
insl
inc
testl
sbb
negl
repnz
in
or
hlt
xchg
fs
xor
into
sbb
hlt
call
push
or
orb
inc
mov
or
push
fwait
mov
movsl
mov
daa
pop
stos
lods
dec
xchg
mov
hlt
xor
inc
aam
push
out
mov
repz
lea
sub
inc
inc
cld
sbb
gs
cmp
inc
daa
inc
lock
insl
mov
fidivl
mov
mov
les
movb
sbb
jle
mov
das
add
xchg
stc
dec
stos
adc
pop
loop
loop
jns
daa
cltd
push
cmpsb
fwait
mov
add
aam
sub
ret
push
jb
jg
frstor
sub
orb
mov
adc
sahf
push
jae
inc
stos
cltd
mov
sub
jb
jl
decl
ss
cmp
or
int
add
arpl
aam
loopne
mov
test
testl
movsb
add
xor
mov
movsl
lds
ss
pop
dec
and
in
ds
or
jb
aam
dec
fidivl
pop
mov
push
sub
or
int3
push
mov
mov
shll
jl
adc
and
xor
jge
adc
movsl
aam
add
andl
xchg
lret
fcoms
jbe
sub
stc
andl
mov
stos
ret
sahf
rolb
ret
pop
lock
dec
lcall
lea
mov
dec
adc
movsb
aas
pop
or
xchg
xorb
xchg
cmpsl
decb
imul
int
fwait
cmp
inc
push
lcall
mov
or
dec
bound
xchg
insb
mov
and
insl
jo
shr
loop
aad
ficoms
test
popf
call
arpl
stos
lret
popf
roll
loopne
xor
int3
dec
jno
js
cmp
stos
addr16
sub
testb
xchg
icebp
test
xchg
test
or
icebp
imul
outsl
outsb
dec
sbb
ja
in
in
pop
lret
in
popa
mov
movsb
mov
xchg
xor
push
and
mov
pop
xchg
inc
movsl
mov
scas
mov
sub
aas
scas
pushf
out
sub
dec
hlt
movsb
insb
mov
in
lods
ljmp
call
mov
pop
sti
movsl
mov
sub
dec
icebp
insb
call
mov
inc
add
sarb
fwait
es
imull
adc
test
pushf
ja
xchg
cli
scas
cwtl
pop
add
mov
lock
mov
push
mov
lcall
imul
or
sub
in
push
out
mov
fnsave
stc
pusha
pop
xor
xor
mov
pop
in
aaa
pop
push
xor
inc
mov
jecxz
pop
inc
arpl
mov
push
cmp
rcrb
test
jecxz
outsb
xor
xchg
push
imul
ret
jnp,pn
jo
adc
pop
dec
jb
hlt
add
jns
clc
mov
xor
icebp
std
jp
nop
shlb
sub
stc
jbe
cmp
fwait
pop
jge
in
mov
add
lods
cmp
inc
leave
pop
lock
sti
enter
push
or
cmp
fxch
mov
mov
mov
out
pop
pop
or
lock
xchg
fdivs
push
nop
add
add
mov
inc
fidivrs
mov
adc
xchg
jmp
sbb
cld
negl
outsb
mov
mov
sub
jo
lret
iret
dec
jae
movsl
mov
das
stos
mov
dec
pushf
lret
push
das
or
jo
sbbl
mov
jge
sub
imul
fnsave
add
and
inc
std
and
shl
popa
pushf
imul
inc
cltd
jl
adc
imul
sbb
shl
ret
sbbl
sbb
fists
cwtl
repnz
popa
dec
jno
lds
push
lahf
and
lahf
imul
mov
dec
push
dec
mov
jge
outsl
cmp
inc
and
xor
cld
xor
nop
into
mov
iret
push
cmp
divl
lret
ret
incl
aad
xor
sbb
or
xor
pop
adc
pop
shrb
or
mov
push
or
loope
push
or
inc
cmp
nop
outsl
pusha
pop
jns
pop
xor
ret
xor
std
sti
scas
int3
push
shll
add
add
mov
bound
nop
icebp
xchg
cmp
sbb
jbe
xor
jne
icebp
push
dec
sub
mov
loopne
mov
mov
push
cs
jmp
adc
dec
fstps
inc
pop
fdivrl
or
push
sahf
and
sbb
push
sub
adc
dec
cmpsb
adc
leave
cwtl
out
sub
adc
int3
dec
pop
pop
sbb
and
push
lods
imul
adc
add
lds
dec
fistpll
popa
call
lea
loope
pop
pop
pop
inc
jae
and
jne
add
mov
lods
sub
add
inc
xchg
adc
jge
imul
out
movsb
testb
or
mov
xor
fwait
add
push
mov
movsb
repnz
mov
movsl
pop
lods
mull
jl
inc
fwait
dec
sub
push
pop
pop
in
jl
popa
fldcw
adc
gs
test
push
inc
xchg
clc
jmp
gs
outsl
jns
xor
rcll
inc
push
pop
push
cmp
flds
pusha
rorl
sub
pusha
adc
jl
jge
jb
pop
push
jno
iret
adc
pop
push
shll
xchg
movsb
in
xor
xchg
pop
sub
mov
dec
repnz
scas
dec
sub
pop
pop
mov
xchg
mov
cmpsb
pop
xchg
sarl
sub
inc
dec
ret
ret
sbb
push
ja
in
sti
cmp
dec
xchg
ss
adc
mov
cmp
out
into
adc
aas
outsl
fs
inc
popa
mov
or
mov
xchg
pop
sub
and
iret
jmp
outsb
pop
add
or
adcb
or
fdivrl
jmp
and
lret
cmp
xchg
mov
clc
inc
shrl
pop
mov
test
adc
pop
clc
pusha
mov
add
inc
mov
jmp
lcall
adc
xor
jae
pop
jbe
pusha
mov
lods
inc
sbb
mov
test
dec
popf
lret
nop
shll
jg
jmp
push
pop
imul
mov
or
cmp
inc
add
pop
sbb
mov
mov
jne
xor
fildll
loope
dec
add
mov
nop
dec
inc
mov
push
out
scas
imul
nop
cmpsb
xor
dec
rol
and
dec
sbb
ficompl
and
dec
xchg
or
jnp
sbb
scas
lahf
sub
sub
push
iret
or
inc
xchg
and
jg
push
int3
pop
lods
pop
std
movsb
dec
call
int3
push
rorb
gs
lock
not
movsb
xchg
lods
ds
js
pushf
inc
scas
jno
test
mov
shlb
add
sbb
aaa
mov
outsl
data16
lcall
fs
orb
sub
lea
dec
mov
sbb
vunpckhps
rorb
sbb
mov
sbb
sub
xchg
jne
addr16
jns
mov
or
inc
push
xor
dec
imul
mov
je
cmp
or
inc
xlat
cmp
push
mov
lock
aad
jb
jg
jno
xchg
dec
cmp
xchg
loopne
jns
mov
add
cmp
in
divb
mov
sbb
lret
adc
sahf
aam
jne
scas
sbb
gs
insb
xor
add
ljmp
dec
add
add
sub
xor
adc
imul
push
lcall
call
push
push
rcrl
mov
fst
nop
stos
sbb
fiadds
sbbb
or
dec
push
lret
es
add
aas
pop
mov
fwait
xchg
clc
cmp
test
test
jge
add
fildll
arpl
icebp
sub
xor
and
sub
cmp
das
sti
jns
and
jmp
push
cmpsl
xchg
sub
lods
mov
or
aam
inc
push
movsl
jmp
jl
je
inc
xchg
adc
icebp
mulb
bound
xchg
jno
test
data16
shlb
pushf
sbb
enter
pop
pop
xchg
sub
push
add
add
adc
cmp
cmpsb
and
pop
sub
jnp
jb
fwait
jae
cli
fidivrs
sbb
xsaveopt
sbb
loope
cld
inc
dec
rorl
mov
lcall
cmp
jo
dec
pop
jecxz
nop
imul
mov
jae
jbe
dec
xchg
ss
cmp
inc
scas
sbb
out
inc
inc
inc
mov
ljmp
ror
jno
ds
and
mov
adc
xchg
call
out
out
std
adc
pop
hlt
hlt
sti
push
fistl
mov
mov
call
loopne
sub
in
outsb
inc
mov
data16
addr16
sbb
cmp
out
sbb
sbb
or
pop
movsl
fmuls
fdivrl
mov
gs
inc
loope
pop
icebp
jbe
push
in
loopne
cs
pop
jg
push
cmpsb
add
jns
sbb
loope
and
imul
sahf
pop
aad
aad
mov
fs
fsubrl
aaa
sbb
cmpsl
mov
out
test
xchg
aas
adcb
or
fstenv
pop
and
xor
mov
cmc
frstor
pop
aas
cmp
pop
cmp
pop
arpl
mov
cmpl
pop
xor
lods
mov
xor
jbe
dec
sbb
mov
mov
jp
loop
subb
mov
mov
pop
enter
lcall
mov
mov
add
pop
cmp
and
dec
cmp
div
imul
push
push
xchg
aas
push
jmp
std
or
sbb
int3
ljmp
pop
mov
sub
and
js
lcall
cmp
repz
loopne
pop
out
mov
adc
xlat
cmpsl
mov
adc
jne
add
ja
cmp
and
shr
lret
aam
pop
in
mov
repnz
fsubp
aaa
xchg
imull
mov
jp
mov
and
orl
js
adc
push
sbb
sbb
out
scas
lcall
das
ljmp
xchg
mov
cli
sub
fisubl
add
lahf
fdivrp
fisubrs
inc
push
add
imul
push
repnz
mov
xchg
and
mov
movsb
xor
push
inc
and
pop
inc
jb
push
fucomi
xchg
stos
xchg
ret
add
mov
mov
call
pop
sbb
aas
test
mov
mov
push
mov
leave
dec
outsl
pusha
out
je
add
push
xchg
fisttpll
les
pop
dec
or
outsb
cmpsb
pop
popa
cmp
mov
and
insb
test
add
sahf
sbbb
or
gs
pop
mov
test
and
mov
mov
xchg
inc
test
mov
mov
add
mov
add
and
dec
adc
aas
xor
sub
push
pop
dec
sub
jb
jns
xchg
cmp
and
shlb
cmc
rorb
sbb
mov
push
inc
ljmp
add
shl
shll
jg
mov
in
pop
add
ss
adc
fadds
jo
dec
mov
sub
scas
add
int3
dec
hlt
xchg
cld
das
inc
fdivrs
inc
dec
xchg
cli
dec
sub
test
sub
daa
rorb
sbb
in
out
and
and
adc
jle
andl
cwtl
iret
sti
in
xchg
pusha
popf
sub
cmc
ja
pop
fcoms
xchg
xor
pusha
insb
loope
jmp
fidivrl
dec
loop
xor
pop
push
add
dec
pop
sahf
dec
lea
pushf
pop
stos
jge
lds
push
inc
and
mov
xchg
pusha
loopne
ss
jmp
cmc
aaa
into
dec
jl
cmp
add
mov
imul
sti
ficompl
lcall
pushf
das
pop
xlat
pop
push
xor
lock
jne
cmp
mov
data16
jecxz
sub
dec
xor
xchg
es
or
push
scas
push
shlb
mov
mov
sbb
jg
push
mov
jecxz
sbb
inc
push
out
aas
mov
ret
mov
mov
inc
lds
dec
push
ja
rorb
dec
test
mov
pop
mov
cmp
jne
xlat
pushf
or
jl
sub
pop
add
sub
mov
ret
xchg
push
dec
mov
cwtl
pop
push
add
cmp
jmp
add
mov
dec
out
add
mov
jo
insb
xchg
or
rol
std
enter
aaa
push
and
push
scas
add
cli
test
aas
mov
addl
push
ss
sub
int
mov
repnz
test
aad
jle
loop
fimuls
ret
lahf
jge
fdivl
call
in
xchg
ret
sar
addr16
in
out
mov
loop
push
push
or
jae
lock
cmp
mov
in
jecxz
popf
lods
cmp
fmul
sbb
dec
inc
lcall
cld
cld
js
int3
adcb
cltd
lret
cmp
inc
outsb
aas
leave
in
sub
xchg
call
dec
jns
stos
addr16
movsb
jbe
xor
adc
sahf
push
mov
mov
sahf
pop
inc
mov
int
add
cmc
outsb
repnz
sahf
xor
pop
sahf
xorb
mov
add
cltd
pusha
push
iret
xor
aas
scas
sahf
ret
test
sbb
js
jae
sub
inc
push
and
sub
lcall
cmp
int3
mov
mov
std
cltd
movq
cmpsb
add
cmp
cmpsl
mov
xchg
add
pop
dec
cli
xor
sti
sbb
dec
shlb
mov
inc
xchg
mov
dec
test
push
jbe
sbb
pop
mov
mov
dec
mov
test
sbb
jno
dec
xor
ljmp
mov
stos
or
adc
adc
or
dec
pop
les
adcl
dec
aad
mov
daa
pop
sub
lods
jb
cmpsl
in
push
push
stos
mov
mov
push
sub
xor
xchg
mov
movsl
cs
push
out
nop
cmp
sub
dec
mov
rolb
int3
mov
dec
jne
popf
sti
xor
lea
lods
sub
mov
js
scas
jmp
mov
mov
adc
addb
in
flds
push
mov
sub
sub
bound
cltd
ja
pushl
mov
jmp
adc
fiadds
jno
lea
iret
popa
dec
int
xor
std
xchg
sbb
mov
popa
shr
sbb
pop
adc
pop
js
pop
cwtl
inc
sub
or
cwtl
mov
xchg
lds
shll
jl
je
dec
lods
jo
xchg
pop
pop
and
mov
xor
scas
fs
inc
lock
push
sub
outsb
inc
testb
sub
add
or
inc
sbb
mul
pop
popf
icebp
push
call
pcmpgtb
xlat
cmpl
mov
inc
adc
xor
imul
jge
mov
push
std
mov
dec
and
into
mov
cwtl
fsub
jg
aam
cmp
cmp
pop
fnstenv
call
ljmp
mov
mov
in
gs
jne
outsb
aam
shll
pusha
lods
or
inc
push
and
rcll
jg
jg
notb
jp
scas
enter
cmp
sub
and
sub
rolb
xor
mov
sbb
ds
xchg
enter
cli
mov
jbe
and
outsb
iret
insb
xor
mov
outsl
adc
decb
xlat
mov
hlt
adc
test
mov
push
jbe
jns
pusha
pop
pushf
mov
inc
sub
push
mov
sbb
bound
mov
mov
xchg
addr16
push
mov
push
adc
je
sahf
add
sub
xor
cmp
fs
in
cmpsb
dec
sbb
pop
mov
out
xlat
sbb
outsl
xlat
push
mov
mov
sub
inc
inc
mov
cmpsl
mov
xchg
insl
push
fsubs
in
enter
xlat
sbb
adc
push
or
lock
pop
and
mov
movsb
loope
out
add
sub
cmp
cmp
jmp
xchg
rcrl
push
popa
loopne
mov
cmp
rorl
inc
sti
sub
push
add
popa
test
mov
pop
in
dec
mov
cvttps2pi
repnz
ds
pusha
inc
cld
icebp
jp
jno,pn
test
xchg
xchg
shl
jae
xor
testb
insb
shlb
andl
mov
sub
push
jbe
movsl
push
and
arpl
dec
xchg
maskmovq
testl
mov
movsl
nop
mov
xchg
mov
repz
sub
mov
xchg
popa
fldcw
cmp
jo
test
into
es
lret
fcmovnb
sar
jmp
pop
gs
xchg
and
pop
mov
or
decl
fucomip
rolb
cmp
pop
loope
cmp
add
jae
test
or
sbb
packsswb
push
cmp
imul
decl
js
cli
ret
xchg
xchg
pop
cli
imul
jae
jb
mov
or
cwtl
cmpsb
push
sbb
outsb
sbb
imul
fstl
pop
mov
push
pop
dec
daa
lahf
mov
sbb
mov
jg
fdivrs
lods
pop
fmul
lods
inc
call
inc
inc
fldt
push
inc
xlat
test
loop
pop
mov
jae
xchg
lret
and
js
xchg
hlt
inc
outsb
enter
xor
cli
mov
int
push
sbb
jnp
lds
lds
data16
call
cmp
js
repz
dec
dec
mov
lcall
xor
inc
push
jns
jne,pn
daa
lods
shll
jle
mov
leave
or
mov
mov
push
xlat
xchg
inc
leave
mov
sub
xor
pushf
shl
xchg
mov
mov
cld
push
jae
mov
push
fnstcw
test
in
sbb
and
cs
out
repnz
and
jp
aas
out
push
or
push
sti
pop
push
sbb
mov
xchg
ljmp
decl
test
sbb
call
and
sti
jb
aam
adc
fcoml
cld
and
out
mov
aas
popa
add
inc
movsl
jp
aad
lock
push
ret
inc
jecxz
dec
int3
mov
aaa
clc
sub
dec
jecxz
fucomp
repz
adc
test
test
sbb
lods
addr16
cmpl
ljmp
mov
dec
divl
rcr
ficoms
ret
mov
pop
cmp
push
call
nop
shll
mov
lahf
ds
push
mov
aam
adc
jle
sub
xchg
dec
out
pushf
or
mov
hlt
sbb
pop
mov
jne
push
mov
xchg
movsl
mov
jb
insb
shl
dec
sbb
mov
mov
cs
aad
push
pop
shl
push
mov
sbb
lret
or
fldlg2
mov
adc
mov
sub
ljmp
mov
aam
mov
pop
pop
pop
jp
sub
push
scas
lcall
je,pt
inc
in
fdivp
cmp
sbb
pop
pop
add
stc
cli
ret
in
dec
jl
in
hlt
rorb
mov
push
adc
and
sbb
into
and
mov
sbb
jae
xor
xor
xchg
dec
fsubl
int3
push
iret
iret
jno
addb
aas
lcall
insb
lret
scas
fisubrl
jmp
or
xchg
scas
jg
sub
or
pusha
lret
jb
arpl
rcll
add
lret
cld
pusha
add
nop
negl
outsl
sbb
ret
out
add
xchg
xchg
call
lods
mov
push
and
fwait
pop
xchg
mov
rcl
adc
push
data16
xchg
sti
xlat
inc
sub
fnstenv
mov
cmp
lahf
xchg
fdivr
test
pop
pushf
fistps
sbb
xor
xor
mov
int
scas
sub
mov
icebp
mov
sbb
mov
adc
or
add
loopne
lahf
pop
xorb
mov
mov
lahf
clc
hlt
pushf
gs
jnp
mov
nopl
pop
adc
adc
lods
scas
inc
or
xor
stos
mov
mov
scas
int
or
jge
fists
push
xor
into
pop
sub
icebp
mov
or
mov
fisttpll
xchg
inc
repz
pop
pop
mov
ret
test
jo
out
and
dec
push
out
pop
cwtl
call
adc
add
leave
ret
int3
push
push
stos
add
je
cmp
sarl
flds
cmp
adc
aam
adc
pop
hlt
mov
sbb
mov
out
movsb
mov
flds
mov
pop
fs
jge
jb
adc
lret
pop
adc
mov
addr16
mov
lahf
mov
lcall
test
shll
pop
mov
pop
js
add
push
clc
xor
test
mov
imul
addr16
adc
stos
xor
pop
cmpsl
imul
adc
arpl
ret
idivl
in
fldt
dec
cmp
sti
fst
sub
mov
or
decb
pushl
iret
pop
push
jno
add
inc
jbe
loop
and
in
sbb
dec
test
rol
stc
inc
scas
ret
push
daa
aad
inc
aaa
and
fcmovnbe
push
push
imulb
mov
adc
hlt
dec
xor
nop
jbe
repnz
jle
addb
and
mov
push
lret
idiv
pushf
dec
loopne
mov
xor
movsl
daa
leave
and
stos
out
addr16
ret
mov
in
loopne
xchg
jl
xchg
xor
cmp
and
ret
sbb
ja
loope
mov
fildl
push
sbb
jbe
jge
movsb
sub
mov
mov
xchg
fwait
mov
fwait
inc
test
ret
push
and
sbb
mov
hlt
lret
mov
rclb
lahf
jno
scas
add
and
dec
mov
lahf
sti
or
fucomi
out
pop
fmulp
and
lret
fxch
dec
xor
push
mov
sbb
xchg
shll
sub
xlat
mov
stos
rorb
mov
sub
jae
sahf
inc
je
adc
dec
das
int3
xchg
stc
xchg
roll
mov
jecxz
sub
int
pop
loope
imul
sbb
xorl
sbb
adc
push
insb
mov
scas
push
xchg
loop
vmptrld
pusha
insl
dec
sub
repz
dec
lcall
mov
stos
jl
mov
testb
shl
cmp
dec
fs
movsl
fldenv
rcll
jmp
ljmp
les
xor
push
mov
std
in
inc
add
push
fucomi
xor
and
and
and
fdivp
mov
and
push
repnz
data16
pop
mov
push
sbb
sbb
fisubrl
fisubrs
inc
xchg
pop
imul
ret
mov
jne
cmp
gs
ret
dec
inc
ret
add
outsl
add
call
in
in
in
and
fcmovu
int
cmpsb
neg
or
add
out
aad
clc
push
mull
pop
mov
dec
ds
or
and
iret
scas
add
add
mov
jl
pop
inc
fnsave
pop
shrb
jne
jno
loop
insb
xor
outsb
sbb
lock
ss
shll
clc
lahf
or
pop
mov
xor
mov
stc
jnp
test
mov
es
dec
fstpt
daa
insl
sub
and
std
mov
jg
dec
mov
aaa
pop
xchg
popa
xchg
clc
pop
cmp
jp
lret
inc
xor
jne
mov
inc
rcll
adc
repz
dec
adc
icebp
fs
or
fisubs
mov
and
shll
loopne
mov
mov
or
cmc
aad
lahf
cmp
push
sub
push
jb
mov
int
dec
lds
xchg
add
repz
xor
loope
push
and
or
sbb
jne
loop
pop
sbb
push
out
out
popa
cmp
out
stc
mov
push
icebp
hlt
sbb
iret
xchg
jns
into
jns
and
orl
mov
negb
xor
jne
dec
fdivp
jno
mov
imul
inc
pushf
jmp
adc
push
aaa
dec
jecxz
pusha
pushf
cmp
and
jecxz
pop
jge
rol
jecxz
aaa
and
or
mov
ror
dec
sub
scas
lret
fadds
cmpsb
cli
repz
lods
pop
and
sbb
aam
xchg
test
push
cmp
pop
nop
jge
stos
cmp
pop
dec
mov
push
cmp
shrl
lods
je
dec
test
adc
inc
adc
and
mov
dec
inc
aam
sbb
fadd
out
fists
pop
andl
push
stos
mov
cltd
lret
sub
lret
xor
push
jecxz
jnp
xor
iret
fbstp
push
inc
scas
ret
mov
cmp
mov
imul
out
lret
aas
mov
ficomps
jmp
gs
push
sub
add
stos
ret
out
xchg
int3
repnz
jb
adc
adc
icebp
shll
in
sbb
in
ss
xchg
jl
mov
xor
mov
and
adc
loope
adc
popa
jno
leave
mov
divb
lret
into
mov
dec
shrl
lret
in
inc
pop
sub
lret
insl
mov
stos
cwtl
mov
or
lods
mov
aad
fadds
sbb
jmp
idivl
movsb
dec
inc
jne
add
mov
adc
inc
lock
sub
mov
out
xchg
sbb
scas
aad
sbb
in
mov
gs
jno
in
fstps
dec
pop
lret
jb
scas
jns
pop
pusha
jg
inc
test
xchg
fsts
sub
dec
into
sub
jo
push
push
pop
mov
inc
clc
sti
xchg
adc
bound
add
and
lods
pop
jp
mov
aas
inc
int
adc
pop
mov
cmp
push
aas
jno
in
ljmp
pop
mov
cmc
xlat
sahf
repz
ds
test
bound
sbb
xchg
ss
cmp
int
adc
xchg
rol
popf
push
jno
xchg
and
jns
mov
add
mov
mov
xchg
mov
ret
add
add
push
push
mov
data16
int3
cld
jl
or
sahf
jo
sbb
pop
repz
push
add
sbb
aaa
nop
jne
jnp
out
out
push
cwtl
shlb
adcl
sbb
in
cmpsb
add
movsb
cmp
test
ficomps
pop
bound
in
dec
movsl
lret
shll
mov
test
rcrl
cltd
adc
loopne
jae
sbb
or
pop
lahf
repz
loope
lea
outsl
and
gs
gs
pop
fsubrs
fiadds
inc
and
xor
push
cmp
mov
mov
inc
int3
mov
or
insb
out
shlb
or
aam
in
mov
or
ja
xchg
push
or
inc
add
jno
arpl
pop
or
push
jne
mov
int
lock
mov
shll
pusha
adc
sbb
push
mov
pop
pop
pop
gs
mov
jge
sbb
add
in
ret
das
int
lods
xchg
and
sub
imul
movsb
in
fidivrl
or
lock
pop
lret
cmp
lret
addr16
insl
jne
cmp
mov
inc
cmp
jge
cltd
sti
subb
out
mov
sar
imul
adc
inc
xor
mov
dec
push
lret
fimuls
sahf
jl
adc
pop
push
std
sbb
pusha
nop
add
mov
xlat
mov
in
repnz
dec
jmp
inc
mov
mov
in
xor
pop
enter
hlt
fnstenv
sarl
sarl
int
adc
jno
adc
insl
gs
jno
pushf
cmp
or
adc
add
xor
arpl
cld
mov
aas
lds
cmc
cmp
xor
mov
aas
cltd
stc
imul
subb
push
data16
sahf
sbb
xchg
cld
pop
and
push
add
push
les
push
dec
cmp
mov
sbb
js
out
stc
sub
bound
adc
push
sub
push
mov
fwait
inc
add
jo
or
cmp
inc
xchg
pop
add
sub
imul
je
push
add
inc
push
sub
mov
lds
rolb
add
test
cmp
inc
lret
iret
mov
int
aas
neg
cmp
leave
in
push
lea
lock
pop
sub
dec
std
push
pop
loope
enter
jbe
dec
in
inc
lahf
pop
dec
mov
cmpsb
ds
mov
mov
insb
mov
repz
mov
push
ja
mov
jae
xchg
dec
or
cmp
mov
and
pop
lock
inc
bound
cmp
pop
push
loope
not
push
mov
fimuls
mov
movsl
sahf
jmp
aam
sbb
adc
aad
jmp
out
ss
push
sub
jnp
popa
pop
push
sub
mov
test
pop
jge
aad
sbb
test
jp
test
adc
js
xchg
sbb
lcall
aam
inc
pop
mov
inc
fwait
in
xchg
sbb
ret
stc
mov
clc
insb
inc
testl
in
cmp
jmp
push
push
aad
inc
stc
xor
inc
shl
clc
vmaxps
jp
popa
sub
in
loopne
mov
popf
or
lods
clc
call
shlb
fwait
fs
sub
ja
and
imull
push
arpl
push
stc
dec
pop
xchg
shlb
pop
cmc
or
pop
sub
adc
sbb
mov
scas
mov
lock
gs
sbbb
mov
sbb
fsubrl
fcoml
enter
push
pop
hlt
pusha
jmp
shl
mov
cmp
dec
jno
dec
push
mov
enter
jg
xor
pop
fndisi(8087
sbb
add
test
xor
test
lret
push
or
scas
aam
cmc
add
jbe
cmp
jecxz
and
out
lock
imul
scas
sub
sub
cmpsl
mov
cmp
xchg
sti
pop
cmp
arpl
or
jl
sbb
sarb
clc
dec
mov
iret
jne
outsb
les
out
jp
jg
loopne
lcall
lods
push
lods
pushf
lret
data16
into
ds
mov
cmp
pushf
mov
imul
insb
push
xor
stos
stos
dec
mov
push
jae
cmpsb
jmp
out
clc
sbb
pusha
sbb
dec
leave
jecxz
mov
pushf
jecxz
push
jle
mov
out
imul
inc
jmp
orl
lods
dec
pop
dec
aaa
out
mov
and
pop
lret
or
pop
in
cmpl
push
movsl
mov
mov
pop
cmpsb
and
inc
mov
stc
roll
sbb
dec
cmp
jns
das
mov
jle
stc
mov
jg
fwait
cwtl
leave
push
dec
clc
add
jae
add
out
mov
sub
add
insl
sub
pop
mov
pop
ljmp
sarl
je
lods
mov
fisubrs
ljmp
mov
push
enter
movsl
stc
cwtl
mov
lahf
lret
xchg
les
das
gs
outsb
cwtl
sbb
add
js
and
fmul
movsb
inc
pop
stc
or
dec
loope
out
mov
jo
out
cld
lds
inc
pop
push
dec
lea
roll
mov
mov
sbb
jne
pop
or
test
xchg
stos
test
hlt
sbb
jo
ja
cmp
add
divb
lock
xchg
pop
xchg
notb
jb
out
les
pop
mov
and
adc
ljmp
pop
fsubs
or
mov
lret
xchg
jne
push
popf
mov
icebp
inc
aam
pop
or
in
or
or
xchg
stos
pop
nop
icebp
cmpsb
mov
xor
vmovaps
test
cmp
cmp
pop
test
push
pop
fsubrl
fmull
arpl
lds
cmp
and
xlat
xor
xchg
lret
xorl
stos
or
cmp
fdiv
rcrl
pushf
push
adc
loope
xlat
leave
outsl
sbb
sub
add
stos
xor
int
in
mov
int3
leave
pop
sti
adc
imul
xor
cmpsb
insl
adc
iret
push
add
movsl
cwtl
rol
inc
sub
scas
push
js
inc
jp
insl
jnp
std
sar
push
inc
pusha
iret
jno
test
jl
sbb
popa
mov
mov
inc
push
fcmovne
repnz
adc
repz
add
sahf
mov
roll
xchg
test
bound
xchg
push
flds
push
out
xor
jne
xchg
xor
mov
inc
mov
or
sahf
in
mov
lahf
mov
sub
sbb
push
and
push
ds
jae
in
mov
ljmp
rcrb
dec
movsl
call
in
sbb
insl
fisubrs
fimull
jnp
and
and
addr16
xor
pop
pop
add
scas
cmpsl
subl
ljmp
les
dec
movsb
les
pop
push
xchg
cmp
outsl
mov
iret
push
cli
or
cwtl
nop
and
jmp
or
fimull
push
sbbl
inc
in
iret
testb
rcr
movsb
ds
lahf
lret
fwait
sub
into
aam
fsub
mov
cltd
adc
add
xor
testb
jge
add
cmpsb
jno
aad
fmuls
adc
lds
rorb
cld
push
pop
das
test
cmp
add
cltd
add
fidivs
divl
or
jg
leave
pop
mov
lcall
pop
shrl
dec
orl
orb
and
push
adc
scas
pop
sub
pop
rorl
pop
jno
or
mov
fistps
les
jnp
add
enter
cltd
arpl
and
test
fiadds
jge
fdivrl
cmp
dec
jns
movsl
out
cmp
mov
lock
mov
arpl
add
les
add
ja
dec
ja
sub
sbb
sar
or
jge
scas
jl
or
jns
jne
pop
sub
hlt
divl
pusha
xor
jg
stc
popa
inc
leave
or
mov
ret
out
and
sub
jbe
mov
pop
test
aam
push
push
push
pop
push
sub
jne
mov
xor
pop
lcall
imul
and
add
xchg
std
stos
imul
xor
xor
pop
sbb
in
sbb
inc
lahf
jne
dec
push
std
cli
add
lret
cmpsl
mov
mov
test
xor
adc
aaa
mov
inc
xchg
xor
pop
clc
xor
xchg
add
dec
loope
repz
inc
inc
sbb
push
cmp
imul
scas
dec
mov
lret
sahf
jecxz
int3
rcrb
mov
and
xchg
push
das
push
adc
sahf
les
mov
rorl
incb
pushf
push
fs
nop
pushf
mov
jb
xchg
test
pop
push
dec
or
rep
clc
pop
repnz
jmp
or
push
daa
lock
add
nop
jbe
sbb
and
mov
js
inc
pop
mov
mov
outsl
xor
inc
loopne
lcall
pop
pop
push
sahf
arpl
cltd
xchg
push
push
scas
neg
mov
jnp
out
pop
dec
jae
iret
les
pop
jle
out
test
fildll
xchg
ret
int3
pop
outsl
cli
mov
lret
mov
movsb
pop
subl
xchg
adc
xlat
cld
jmp
scas
addl
test
loop
in
fsubl
jns
mov
pusha
or
fisttps
popf
sbb
sarl
add
jns
jecxz
xchg
xlat
push
sub
and
or
push
into
add
insb
mov
testl
popf
pop
push
pusha
hlt
cmp
xchg
fidivl
aas
add
pop
xchg
imul
pop
mov
pop
pop
test
lret
fmull
mov
sub
add
ds
xchg
pop
push
popa
arpl
cli
bound
call
mov
xchg
push
dec
popf
les
adc
scas
call
sbb
fidivl
push
aad
sub
pop
push
loope
lret
lock
arpl
test
xchg
into
jns
shrl
inc
pop
jns
adc
add
pop
adc
pop
add
cmp
dec
cli
cmpsl
and
call
sub
sub
push
scas
cmp
leave
jae
push
mov
fmul
or
cmc
inc
lahf
add
xchg
xorb
out
sbb
aaa
mov
lcall
xor
jo
out
dec
nop
add
mov
inc
ret
pop
pop
pop
popf
in
sti
sahf
sbb
mov
and
cmp
sahf
call
dec
call
imul
pop
stos
sbb
cmp
or
out
or
mov
es
pop
dec
jns
fnstsw
ja
inc
dec
xchg
outsb
cmc
sbb
mov
imul
xor
insl
pop
pop
lahf
and
push
pop
rcll
hlt
bound
hlt
mov
cmp
push
imul
xor
in
js
fnstenv
push
mov
repz
lcall
dec
fnstcw
rcl
jmp
dec
mov
mov
and
pop
adc
in
xchg
inc
sbb
push
mov
cli
adc
inc
fcmovu
pop
out
sbb
jb
sbb
xchg
push
movsb
mov
fcompl
mov
movsb
mov
jecxz
mov
mov
pop
popf
jp
pop
sti
lret
pusha
and
xor
or
mov
dec
sub
loop
xchg
mov
and
xchg
cmp
lods
add
xchg
cmp
lods
repz
leave
aad
test
out
mov
mov
out
push
jne
cmp
adc
jg
jne
pop
sti
stos
and
mov
pop
mov
cmp
dec
cs
mov
dec
jne
pop
jo
out
ret
cmpsl
sbb
sahf
mov
jp
add
sub
repnz
ror
out
ret
jge
xchg
dec
xchg
mov
push
hlt
pop
mov
cld
jg
mov
int3
add
push
push
rcl
push
sbbb
leave
sub
and
mov
out
inc
mov
ficompl
mov
dec
vcmpps
or
xchg
xchg
mov
cmp
sbb
mov
outsl
stos
sarb
sbb
mov
into
or
inc
add
insb
mov
sbb
fwait
xchg
cmpl
shrb
mov
lods
daa
push
push
mov
mov
xchg
pop
mov
xchg
mov
in
scas
int
aas
sub
arpl
xchg
xchg
cmp
push
icebp
addr16
popf
mov
add
cmpsl
sub
jbe
in
in
ret
push
lcall
rorb
xchg
pop
mull
fcoms
mov
sub
ret
inc
jp
daa
add
and
cwtl
push
push
mov
inc
sub
hlt
pop
adc
dec
lcall
idivl
push
or
jl
gs
mov
adc
sbb
mov
xchg
imulb
jecxz
arpl
xchg
push
enter
xchg
mov
enter
mov
pop
mov
cld
int3
and
push
orl
add
mov
insl
adc
lods
std
nop
or
and
in
mov
fwait
imul
inc
push
jle
inc
outsl
repnz
jae
or
int3
mov
inc
leave
sub
lea
add
decb
jb
push
jbe
sbb
pop
xor
sbb
sub
adc
shll
jl
pop
cmp
xchg
xchg
xchg
aaa
or
xchg
jae
cmpxchg
cs
mov
jecxz
jb
cmc
add
mov
out
sahf
insb
addr16
adc
or
pop
repnz
xchg
ljmp
or
pop
jecxz
les
or
dec
push
push
cli
rcrb
test
adc
push
mov
jo
insb
mov
jo
xchg
mov
mov
jmp
xlat
cmp
gs
aaa
shrb
xchg
mov
lock
mov
cmp
in
pop
es
or
sbb
pop
inc
int3
aaa
xor
mov
xor
sbb
mov
mov
movsl
hlt
pop
arpl
and
push
cltd
xor
cltd
fwait
xchg
cmc
lret
loopne
xor
mov
xor
lcall
xchg
cld
cmp
lcall
push
fstps
psllq
pop
mov
pop
push
cmpsl
inc
insb
and
sub
mov
loope
and
cltd
testb
inc
and
frstor
mov
arpl
sar
pop
lock
push
je
jp
aam
imul
nop
push
call
push
test
mov
jns
inc
push
testl
fcmovnbe
in
inc
xor
mov
dec
push
test
sub
jecxz
cmp
gs
out
mov
sub
inc
test
mov
jle
shrl
data16
xchg
out
dec
or
xlat
pushf
in
in
movl
push
mov
fsubrs
pop
jnp
push
cmp
pop
mov
sbb
add
add
je
ja
nop
movsl
popf
xor
test
jecxz
int
insl
insl
mov
repz
adcl
jb
dec
clc
pop
stos
and
je
mov
xor
sbb
js
mov
mov
addr16
int
xor
cs
mov
cld
sbb
insb
test
outsb
insb
sbb
sbb
stc
or
pop
mov
mov
scas
dec
ljmp
xchg
mov
in
insb
test
xchg
xor
push
mov
inc
out
sub
push
add
pop
jmp
lret
inc
xor
int3
outsl
cltd
jae
jle
aad
jb
push
dec
jp
jp
mov
lahf
xchg
pushf
das
xor
shlb
xor
rcr
call
pop
push
cli
mov
les
lcall
stos
sti
outsl
jb
push
xor
mov
dec
xchg
bound
clc
movb
pop
sub
or
cli
fcmove
lret
decb
orl
mov
loopne
cwtl
dec
cmp
inc
jmp
mov
pusha
ljmp
into
les
ficomps
in
sub
pushf
mov
push
fildll
out
adc
icebp
in
xlat
mov
jp
imul
jns
fstpt
cmpsl
xchg
fld
out
push
shrl
sub
pop
int
mov
arpl
push
cmc
cmpsl
movsb
rcl
mov
inc
dec
push
imul
icebp
pop
xor
fildll
sub
xor
push
dec
or
jnp
out
adc
js
push
bound
mov
lret
jge
stos
hlt
mov
sti
pop
jb
stos
mov
arpl
and
adc
and
dec
add
jnp
xlat
sahf
push
ret
and
addb
enter
sbb
jae
cmp
push
lcall
sub
adc
jb
mov
loop
and
xchg
push
daa
enter
mov
stos
pushf
mov
jne
outsl
jp
jg
push
sub
dec
mov
add
and
or
sbb
stc
inc
imul
adc
sbb
pop
xchg
lret
sub
jge
cmpsb
imul
mov
mov
xchg
rcr
int
cmpsb
jns
jmp
pushl
fucomi
lods
add
fs
push
cld
mov
pop
out
mov
dec
stos
lods
inc
test
and
nop
add
or
add
test
and
and
test
mov
pop
jmp
inc
fisubl
mov
mov
lret
add
jmp
inc
stos
jmp
setg
daa
mov
fwait
sbbl
jp
pop
dec
adc
pushf
ret
dec
fsubrp
rcrb
inc
add
mov
xor
sub
cmp
lock
nop
cmpsl
dec
fisttps
dec
xchg
fsubrl
pop
jmp
int3
mov
dec
in
pop
or
cmc
imul
sub
pop
aaa
push
xchg
jns
mov
imul
jno
mov
mov
pushf
repz
stc
adc
sbb
popa
mov
es
xchg
hlt
sbb
xor
popa
add
add
pushl
fisttpl
sub
pop
int
inc
lret
pop
adc
jle
fstpl
outsb
pusha
sbb
xchg
inc
add
jno
lret
adc
mov
mov
ret
repz
mov
shlb
add
mov
aam
stos
mov
hlt
call
push
jmp
dec
xorl
or
jp
ror
sub
mov
cli
testl
ss
adc
loop
clc
call
pop
cmpsb
push
incb
lahf
jp
cmp
int
inc
fmull
cmpsb
iret
ja
mov
std
loop
push
aas
pop
mov
and
xlat
pop
xchg
jge
adc
faddl
mov
or
jbe
or
jg
cmp
xor
push
int3
xchg
mov
and
mov
sbb
sbb
ja
imul
insb
mov
popa
sbb
sub
sub
cmpsl
ret
and
mov
lds
jp
dec
adc
fsubr
testl
ss
jo
pop
jge
push
and
pop
mov
push
sub
clc
adc
jle
sbb
sub
insl
js
sbb
mov
pop
sub
shll
jns
pop
fistpl
cmp
and
cmp
pop
push
push
stos
jle
insb
or
jp
adc
pop
or
and
xchg
daa
aad
das
mov
xlat
add
and
mov
arpl
addr16
rcl
xchg
leave
je
idivl
push
aaa
push
lcall
push
cld
add
sbb
xor
xlat
int3
cmp
shrl
mov
push
and
inc
aam
popf
mov
jle
or
pop
cmp
sbb
push
cmpsl
dec
xor
pusha
outsl
push
mov
fldenv
dec
dec
sahf
bound
pop
inc
loopne
cwtl
xchg
jae
ss
gs
push
xor
push
xchg
xor
jbe
into
loopne
pop
push
cs
lods
out
scas
adc
ret
sar
fdivs
bswap
icebp
adc
fwait
jb
add
sbb
pop
sti
ficomps
or
daa
arpl
daa
dec
inc
popf
ficoml
in
xchg
jne
ffreep
fs
or
out
mov
xchg
cmp
cmp
push
rolb
mov
xchg
sbb
rolb
and
sahf
pop
setns
add
fwait
repz
pusha
lret
add
and
add
repnz
lret
mov
loopne
enter
mov
mov
in
sub
ja
fbstp
mov
imul
inc
addr16
icebp
out
stc
push
stos
push
push
xchg
repz
mov
mov
in
push
shll
in
cmp
dec
pop
ret
xchg
push
or
cld
jbe
add
pop
js
fmuls
addl
andb
das
imul
dec
mov
mov
mov
sbb
arpl
sub
jo
dec
cwtl
sub
sahf
leave
xlat
jnp
dec
fsub
leave
xchg
mov
mov
mov
xor
dec
mov
hlt
mov
fucomip
daa
jo
push
xor
xor
fs
sub
ss
in
rorl
call
mov
mov
and
test
in
xor
rcrb
stos
dec
stos
shlb
add
out
mov
mov
add
mov
imul
or
jge
movsl
push
faddp
aas
jne
cli
dec
mov
xor
mov
sub
ficoms
shr
mov
lret
fisubrl
aad
xchg
mov
xchg
popa
das
mov
mov
inc
jo
imul
icebp
push
sbb
and
dec
es
clc
xor
add
fdiv
movsb
xchg
iret
repnz
xchg
jnp
cli
xor
mov
mov
fimuls
addb
push
mov
iret
and
test
leave
pop
sbb
xchg
xor
mulb
sbb
in
jb
lea
mov
lea
pop
lret
add
cmpsb
fadds
dec
dec
jge
sarb
mov
or
sbb
mov
movsl
lret
xlat
mov
jle
mov
jmp
add
and
and
jbe
and
add
lret
xor
out
inc
sbb
and
jp
shlb
mov
sub
movsb
mov
jmp
add
adc
jp
mov
jecxz
sub
pop
push
in
shlb
mov
movsl
mov
cld
pop
add
pop
repnz
lahf
add
or
lret
mov
loop
enter
or
ljmp
loopne
xor
cld
test
int
std
lret
lds
xor
test
mov
arpl
push
push
jo
mov
insl
adcb
push
jmp
int3
xchg
pop
jno
mov
pop
xchg
push
pop
data16
and
movsb
push
sbb
adc
and
or
or
popw
lea
dec
setne
xchg
push
inc
sahf
sbb
rorb
roll
or
adc
mov
fstl
daa
addr16
xor
adc
xchg
jp
outsb
mov
xor
or
sti
sub
xorl
dec
push
aaa
jg
adc
adc
push
pushl
adc
pop
adc
add
shlb
cmp
sub
mov
shrb
sub
fwait
lods
push
add
pop
xorl
pop
mov
pop
and
mov
sub
sbb
xchg
cmp
in
xor
sahf
lea
sbb
cli
push
or
lcall
jb
or
lret
mov
mov
xlat
jae
xlat
movsbl
or
out
inc
and
imul
jo,pn
fs
adcb
test
icebp
fists
stos
jl
leave
jp
inc
cmc
jb
dec
xchg
pop
jle
std
cwtl
sbb
xor
cmp
pop
les
sbbl
inc
cmp
ret
jge
mov
shll
aas
loopne
mov
aad
jle
sbb
loope
adc
jnp
add
pop
sarl
in
xor
mov
inc
pushf
xor
in
xchg
daa
mov
sub
xchg
mov
push
fsts
add
insb
xchg
lcall
pop
inc
lea
push
lret
xor
jp
sbb
bound
or
pop
dec
insb
shl
int
iret
sbb
dec
mov
cli
ret
xchg
ja
mov
in
jmp
dec
pop
das
sub
in
les
scas
arpl
insl
iret
sbbb
sub
push
jnp
mov
popf
and
icebp
cmp
lods
aad
test
enter
xor
xchg
sub
sub
mov
in
jns
andl
outsl
fs
and
or
push
mov
sbb
or
icebp
addr16
iret
ret
imul
fdivrs
cmp
jns
mov
stos
out
les
mov
push
sbb
outsb
xor
int
mov
push
push
mov
in
pop
rcl
leave
mov
bound
add
and
sub
cmp
xchg
mov
lock
push
push
mov
out
inc
iret
mov
cmp
stos
inc
dec
pushf
fs
dec
sbb
ret
dec
pusha
cmpsb
hlt
push
imul
imul
and
dec
and
sub
stos
cmp
adc
and
pop
repz
adc
jbe
jl
push
repnz
insb
loop
sarl
popa
add
mov
int3
inc
push
int
movsb
cwtl
fnstsw
ror
aas
js
repnz
inc
rclb
das
jp
loop
inc
mov
enter
xor
in
cmp
scas
fbld
stos
jp
sbb
fiadds
repz
aad
push
pop
call
lret
push
cmp
sti
in
loop
add
jae
lock
insl
aad
fs
xorb
xor
and
out
xlat
pop
imul
push
adc
sub
ds
bswap
jne
push
sti
inc
iret
aam
pop
aam
push
lret
or
or
cs
imul
insl
sub
in
and
aad
pop
adc
leave
xchg
dec
test
out
das
push
mov
insb
cmpsb
rclb
add
cld
lock
cwtl
mov
push
dec
xchg
lock
aas
test
cmpsl
xor
pop
pushf
pushl
inc
call
xchg
dec
iret
and
jae
xor
mov
leave
jmp
jmp
dec
dec
sub
mov
and
and
roll
pop
dec
fidivrl
add
flds
mov
dec
cmp
into
daa
sbb
jl
mov
mov
leave
fdivr
fs
sar
scas
orl
inc
sub
jge
jecxz
jle
add
push
jp
xchg
push
dec
mov
inc
xchg
ret
mov
jb
sub
xchg
push
sub
std
or
jae
inc
xchg
inc
cmpsl
jne
hlt
dec
dec
in
icebp
loope
ds
sub
ss
push
xor
and
cmp
and
cmp
dec
pop
mov
fwait
add
pop
in
xchg
stos
sub
xchg
xchg
aam
push
push
jecxz
js
sbb
cli
xlat
loopne
idivb
arpl
push
mov
xchg
jecxz
ret
or
push
sub
mov
pop
fcoms
loop
adc
stc
add
lahf
push
arpl
xlat
cmpsb
mov
jge
outsb
pop
xchg
add
jge
sbb
out
leave
fwait
outsl
clc
push
cmpsb
ret
xchg
xchg
test
jne
outsl
andl
out
push
stos
js
stc
sbbl
xchg
xor
or
jb
inc
gs
cld
gs
dec
call
mov
or
and
mov
sahf
in
jns
sbb
nop
xor
push
push
loope
and
sbb
jge
loope
ficoml
mov
dec
sbb
dec
jb
push
mov
stc
dec
sahf
aam
inc
fsubl
in
pop
into
rcll
inc
jmp
xor
out
imul
lret
stos
mov
xor
push
lcall
shlb
arpl
mov
sbb
or
xchg
mov
xor
sub
xor
popf
sub
sbb
add
and
leave
jb
out
in
jnp
jp
sti
mov
sbb
iret
js
cmc
test
test
push
xchg
mov
cmp
data16
je
in
sbb
pop
dec
mov
pop
sub
jmp
or
fisttpl
sub
lods
mov
mov
cmp
outsb
aaa
movsl
cmp
scas
roll
cmp
dec
hlt
aas
xor
xor
inc
icebp
ret
jbe
and
je
jp
push
jge
sti
clc
xor
xor
std
das
mov
mov
jo
pop
pusha
fnstcw
push
xchg
lahf
mov
ljmp
out
push
enter
inc
rorb
ds
mov
push
mov
xchg
inc
adc
fisttpll
fistps
lods
jge
jmp
mov
ss
jne
mov
pop
jmp
in
adc
sbbl
inc
xchg
imul
fcoms
stc
icebp
orb
lahf
pop
xor
inc
out
and
repnz
addr16
movsl
jbe
inc
cli
mov
add
mov
jecxz
sbb
mov
fnstcw
xlat
lods
jbe
mov
add
imul
pop
clc
lcall
dec
mov
lods
popf
dec
shr
ds
jle
loope
outsb
and
push
mov
sbb
mov
aad
lcall
push
dec
fs
mov
insb
mov
mov
aaa
jb
mov
sub
or
divl
stos
test
lret
jge
pushf
sub
xchg
add
fs
popf
gs
dec
arpl
aaa
loop
pusha
les
mov
jne
loopne
lods
out
xchg
jae
mov
gs
inc
sbbl
and
ds
ss
cld
sub
jne
rolb
dec
xor
jp
xchg
pop
mov
push
add
je
fmull
mov
cmp
fildll
pop
add
dec
xchg
outsb
jmp
cmc
cltd
adc
aaa
inc
xor
or
lcall
daa
adc
out
mov
leave
ret
push
lock
cmp
scas
mov
pop
mov
push
mov
scas
pop
aam
in
mov
add
mov
jecxz
iret
std
lds
or
cmp
add
lahf
pop
mov
and
mov
xchg
cmp
pop
imul
movsl
and
push
aaa
cltd
dec
aas
pop
push
dec
push
inc
mov
push
imul
outsb
fyl2xp1
push
push
iret
lret
pusha
ficoms
repnz
test
or
out
outsl
sub
call
insl
cmpsb
adc
pop
fwait
push
add
es
icebp
pop
data16
loop
dec
push
mov
imul
jno
fldenv
je
std
push
loope
loop
pop
jne
lret
xchg
xor
out
fnstenv
or
push
jp
sub
push
imul
jge
int3
test
pusha
sbb
in
jnp
out
jecxz
push
push
jecxz
mov
jmp
ja
mov
lcall
mov
es
add
subl
test
cwtl
push
and
gs
xchg
add
dec
inc
cmp
das
cmp
scas
test
into
and
mov
sub
nop
scas
adc
pop
lret
sbb
sbb
push
dec
lcall
dec
jecxz
fcmovne
adc
xor
loopne
adc
lahf
xchg
outsl
and
adc
pop
cmp
cmp
push
hlt
add
loopne
push
in
idivb
xchg
dec
sbb
hlt
hlt
ds
dec
out
aaa
jo
mov
jns
xor
mov
mov
fcompl
sbb
scas
mov
imul
out
xchg
loope
push
xor
dec
out
jecxz
imul
ds
mov
and
cmpsl
shr
xchg
dec
std
sahf
imulb
out
fisttps
loope
jmp
jmp
sbb
sbb
and
ja
lods
insl
arpl
inc
test
xchg
xlat
adc
jecxz
test
cmpsl
stc
les
cli
push
mov
fs
or
sub
cmc
adc
mov
mov
lcall
jns
pop
mov
or
test
xlat
jo
daa
ret
fbld
cmp
sbbb
into
dec
pop
and
cmp
call
mov
pop
sub
dec
into
les
fcoms
jmp
inc
or
push
push
sub
pop
incb
sarl
call
add
cmc
cmc
push
inc
inc
cmpsl
fucomp
lret
xchg
jmp
xor
adc
shlb
cmc
in
xor
inc
ror
int
ds
xor
push
mov
mov
popf
xor
sub
push
insl
das
out
inc
jnp
int3
dec
test
aas
dec
divb
xlat
or
lret
imul
mov
inc
mov
cmc
les
sub
int3
mov
imul
ja
xor
jb
nop
mov
ret
mulb
in
pop
jne
lea
xor
push
repz
sbb
xor
std
xor
arpl
lds
sbb
and
xor
jmp
std
sbb
pop
pusha
pop
sub
add
clc
adc
fiadds
movsb
dec
sub
sub
and
sbb
repz
xlat
mov
push
cltd
xchg
or
add
mov
pop
jl
inc
pop
xchg
cli
xchg
push
pop
ja
pop
push
dec
dec
inc
adc
xchg
ror
push
call
xchg
dec
clc
loopne
mov
pushf
xchg
pop
xorb
sub
call
xchg
lods
les
fadds
fisubl
loope
daa
movsl
rorb
cmpsl
mov
in
xor
adc
divl
ret
cli
negl
dec
jmp
or
push
add
inc
inc
or
sar
fstl
lods
or
cwtl
leave
pop
cld
push
lods
adc
sbb
inc
sub
fstpt
jl
lods
jl
in
jnp
adc
mov
jae
or
and
das
inc
cmp
push
adc
loopne
and
outsl
jl
lcall
adc
push
pop
pop
outsb
sub
rcr
stos
shll
test
std
xor
mov
lods
fnstcw
or
loop
sub
pop
push
cs
push
pop
xor
mov
inc
inc
iret
lds
clc
and
test
pop
inc
mov
sub
inc
mov
fcoml
add
sbb
std
push
xchg
add
xchg
into
sahf
data16
js
test
adc
in
fwait
mov
inc
inc
adc
fidivs
gs
dec
and
pop
mov
cli
xchg
test
mov
ljmp
rcll
add
hlt
adc
ss
mov
push
pop
xchg
mov
mov
cmp
add
mov
aas
and
sbb
daa
mov
stos
add
adc
jg
xchg
mov
push
loop
imul
adc
dec
or
rcrb
cmp
popf
or
dec
xchg
cltd
into
mov
iret
pop
mov
repz
movsb
icebp
jl
rcll
inc
leave
sbb
push
imulb
push
aad
lods
or
cmc
mov
and
in
and
xlat
sub
add
imul
push
and
xor
mov
aad
cmp
bound
jbe
pop
cli
setg
out
sahf
jns
fimuls
in
xlat
add
xchg
mov
or
int3
imul
sbb
lret
and
loop
cmpsl
test
or
lods
vaddpd
jns
shrl
pop
push
mov
loopne
mov
scas
push
mov
push
adc
cmp
ja
mov
cmp
aas
arpl
rolb
sub
and
insl
outsl
divb
sub
mov
push
aas
jecxz
pop
jg
pop
sti
cld
dec
rcl
lret
mov
pop
cmp
mov
and
rcr
pop
adc
out
push
jmp
and
sbb
dec
cmc
outsb
jecxz
lahf
or
ret
int3
xchg
iret
push
or
and
lock
cmp
xor
fimuls
sti
or
xor
cmpsb
fbld
mov
mov
scas
jns
frstor
popf
aad
push
stc
icebp
imul
xchg
aas
test
mov
scas
jge
btc
stos
xor
cmp
rorl
lret
scas
push
mov
aam
lret
call
test
icebp
cmp
sub
mov
out
cli
xchg
sbb
or
sbb
xlat
cmp
mov
fnstcw
inc
jl
test
sahf
lret
xchg
int3
jne
nop
dec
mov
fldcw
sub
mov
cmp
sub
xchg
lock
jbe
inc
bound
fstpt
outsb
shrb
frstor
shll
mov
push
inc
or
sbb
jno
or
add
testb
pop
jbe
mov
aad
or
mov
dec
or
pop
pop
mov
into
out
or
test
pushf
stos
repz
dec
in
push
lret
xchg
add
movsl
lret
push
jo
and
xor
in
push
jp
hlt
xchg
inc
pop
pop
or
stc
push
mov
lret
and
jae
xchg
push
popa
das
mov
into
pop
call
pop
ds
or
popf
push
mov
movsl
sbb
lcall
push
test
jne
sti
rolb
lea
scas
jo
cmp
data16
daa
out
jg
adcb
dec
mov
mov
fmull
push
aaa
rolb
mov
test
xchg
cltd
pop
popf
rcrb
mov
popa
push
bound
push
out
out
std
and
jp
aaa
lds
xor
pushf
imul
sbb
lret
mov
jmp
inc
xor
jnp
mov
jge
data16
cmp
push
nop
in
pop
add
out
push
push
sub
mov
mov
mov
mov
jmp
mov
adc
push
popf
sbb
pop
lret
push
mov
cmp
add
pop
push
ss
int
dec
push
or
loop
leave
fsub
pushf
outsb
cmp
inc
or
cltd
jl
or
je
lds
mov
leave
push
call
into
aaa
mov
or
nop
sbb
add
cwtl
xor
mov
add
mov
aad
insl
xor
xor
js
insl
ds
adc
or
ja
dec
sub
inc
inc
or
sbb
push
pop
cmc
pop
pusha
dec
pop
add
pop
repnz
insb
pop
jl
jno
pop
fwait
test
lahf
pop
insb
sub
inc
mov
cmc
js
mov
insb
mov
sub
jns
adcb
cmp
gs
std
lret
cmpsb
movsl
std
fxch
push
or
push
scas
sahf
xor
cmc
sbb
add
loope
idiv
fsts
add
xor
rol
mov
pop
imull
loope
js
lahf
dec
ror
cmp
add
xor
cmp
cmp
gs
test
std
sbb
add
mov
aam
les
mov
push
shlb
das
mov
rol
jp
add
xorl
xchg
cs
pop
or
stos
push
xor
test
and
int3
leave
jecxz
stos
cmc
sbb
lret
xchg
mov
mov
push
cs
xor
lods
pop
test
outsl
xor
call
jnp
nop
test
add
and
test
lods
xorb
add
in
jge
sbb
aam
push
xor
cmpsb
mov
push
js
mov
out
mov
or
dec
dec
xchg
hlt
arpl
fcmovnu
lea
mov
mov
mov
xlat
into
and
iret
clc
sub
add
cmp
push
or
jno
leave
jb
sti
vucomiss
jg
sub
jae
dec
xor
inc
test
inc
add
push
loope
fcom
adcl
cmp
fwait
xchg
pop
test
mov
pop
jo
jg
sbb
lcall
and
jl
mov
push
sub
rcrb
jb
push
in
repz
push
xor
push
loopne
cs
push
and
jg
test
faddl
push
mov
push
arpl
je
movsb
sub
inc
pop
out
test
xchg
shl
insb
lock
push
in
repz
and
pop
ret
daa
mov
cmp
shlb
inc
lcall
fiaddl
lret
mov
adc
adc
fwait
mov
sbbl
mov
jmp
xchg
insl
divb
mov
in
cli
cmc
fbld
fwait
mov
insl
hlt
stos
mov
xor
int
in
jl
cltd
jne
pop
mov
adc
cmp
gs
aas
fcoms
ja
bound
sbb
mov
jb
lahf
enter
addr16
inc
lods
inc
and
popa
subl
mov
in
cmp
cltd
pmaxub
sahf
out
fstpl
fs
sub
push
jmp
cmp
enter
push
arpl
jo
jp
out
and
adc
adc
out
inc
sub
xchg
sub
or
popa
pextrw
mov
or
dec
push
push
xor
or
xchg
adcl
out
imul
test
lcall
pop
into
loope
mov
inc
insb
stos
lods
add
and
mov
or
loop
inc
dec
loopne
scas
inc
push
pop
shl
enter
jno
data16
into
inc
ljmp
es
fwait
pop
in
ficomps
push
arpl
lret
and
jo
lock
daa
icebp
loope
into
dec
outsl
shl
inc
cmpsl
xchg
std
out
dec
stc
pandn
popf
jns
mov
xchg
xlat
out
sub
ja
dec
push
xlat
cmp
lret
add
cwtl
pop
aad
lahf
mov
cmc
pop
je
push
iret
push
inc
cmpsl
push
xlat
gs
jns
inc
in
fstpl
xchg
lahf
mov
cli
fmuls
sub
pop
pop
fidivrl
inc
mov
movsl
adc
xor
inc
xchg
je
mov
xchg
mov
pop
fildl
xchg
xchg
inc
mulb
shll
dec
or
bound
push
insb
push
push
mov
jo
aaa
out
pop
into
outsl
enter
daa
add
pop
or
push
insl
pop
repnz
mov
fidivrs
jnp
adc
lret
cmp
xchg
push
iret
inc
and
imul
and
jbe
imul
jbe
aam
imul
out
or
fists
mov
in
inc
mov
push
xchg
insb
mov
xchg
and
mov
or
movsl
ds
and
gs
fbstp
in
cs
xchg
vmaxps
inc
add
pop
inc
aaa
or
adc
es
into
or
imul
pop
std
mov
cmp
jae
imul
mov
sar
jmp
sbb
stos
gs
jge
inc
int
and
dec
subl
rorl
psubq
inc
cmp
sbbl
jge
and
ja
push
dec
pop
mov
jg
gs
or
stos
pop
test
ret
and
mov
pusha
mov
ret
push
in
scas
lods
ljmp
jb
xor
bound
faddp
xchg
xchg
pusha
movsb
int
outsl
outsb
push
dec
jb
xchg
ror
inc
lods
jne
pop
or
inc
sbb
ljmp
lcall
mov
pop
sti
je
repnz
roll
cmc
or
xchg
sbb
xchg
cmp
shlb
cmpsl
les
fs
hlt
add
sub
sahf
mov
sarb
ret
mov
sahf
mov
aas
gs
mov
bound
jg
cwtl
xchg
fcoms
cmpsb
and
pop
loope
jle
mov
pop
cwtl
mov
mov
cmc
test
or
xchg
jge
push
idivb
fstpl
jbe
es
or
hlt
pop
mov
sbb
inc
sub
xlat
add
ret
cltd
dec
xchg
adc
cmp
inc
jno
in
in
dec
dec
es
inc
mov
jle
cmpsb
push
cmpsl
sbb
inc
mov
add
out
shlb
iret
and
push
fcoml
xchg
or
inc
sbbl
mov
xor
push
addl
test
jno
add
xchg
jnp
loope
cmpsl
adc
cmp
fdivrl
add
rcl
out
adc
jno
mov
mov
mov
sbb
adc
jmp
adc
andb
sahf
push
xchg
jo
or
jb
sti
cli
pop
aam
mov
pop
iret
lcall
sub
mov
mov
insb
add
faddl
pop
cld
pop
sub
cmp
fwait
xor
out
sub
xor
fsub
adc
es
add
out
gs
add
sbb
lods
int3
imul
pop
adc
sti
div
icebp
adc
ror
sbbl
aas
or
daa
or
jmp
mov
sbb
sbbb
subl
mov
mov
cmp
iret
pop
xchg
jl
push
inc
push
inc
mov
in
scas
ja
mov
addr16
jno
mov
mov
inc
adcb
fs
rcrb
pop
xchg
test
jl
in
sbb
ret
scas
and
and
xor
and
pop
icebp
or
and
pop
sub
fcmovb
je
jmp
imul
mov
or
aaa
sub
pop
pop
sbb
add
add
adc
lods
cmc
cmp
in
jle
mov
mov
or
jp
or
pop
loopne
inc
clc
push
sub
push
xor
push
and
testb
loop
cmp
mov
or
fs
pop
dec
sub
jb
mov
sahf
aas
roll
test
sub
mov
cmp
shll
daa
nop
or
adc
add
cmp
dec
sbb
mov
lcall
mov
sub
xchg
lret
xchg
js
mov
lds
shlb
scas
cltd
out
rol
add
mov
divl
data16
lahf
mov
movsb
inc
lock
sub
or
ss
cli
sbb
cmc
das
repnz
aad
add
mov
dec
ss
out
lods
stos
lahf
loope
scas
fucom
or
push
dec
aad
je
pop
sub
adc
mov
and
es
enter
dec
jle
aad
jne
pop
jle
dec
mov
xor
jbe
mov
loope
xchg
rcr
addr16
out
popf
imul
xor
or
pop
in
xchg
sub
cmc
adc
jb
mov
lahf
fidivl
add
mov
add
je
push
sbb
mov
jno
int3
loope
dec
inc
xchg
scas
fs
rcl
or
addb
jo
rolb
pop
sub
cwtl
mov
les
cli
pusha
cmpsb
inc
cwtl
mov
jmp
sub
or
sti
push
push
mov
les
call
sub
sbb
jae
mov
das
push
jg
pop
cmpsb
sbb
into
xor
jp
sub
xchg
out
add
mov
lods
lds
mov
xchg
xchg
adc
subb
das
fmull
clc
fmuls
cmpsb
outsb
dec
push
mov
push
shl
mov
lea
mov
adc
fstpt
jle
movsl
mov
mov
fdivl
xchg
dec
xor
or
rcrl
movsl
add
mov
popf
stos
jg
daa
jne
rcl
minps
imul
push
pop
out
push
sbb
fcoml
add
xor
cmp
std
cmpsb
movsl
popf
push
popf
dec
adc
mov
xchg
hlt
pushf
cmpsl
rorb
cmpsb
popf
fistl
push
sarl
int
cwtl
mov
pushf
dec
push
mov
xchg
icebp
inc
mov
push
and
mov
jge
mov
dec
adc
add
inc
and
mov
dec
outsb
mov
xchg
into
mov
int3
arpl
shl
out
test
movsb
bnd
into
xchg
add
or
push
and
and
lock
adc
and
xchg
push
xchg
dec
inc
push
inc
jp
pushf
mov
pop
and
pop
das
test
out
test
sahf
hlt
loope
mov
popa
je
pop
pop
aas
jmp
data16
and
and
mov
push
je
adc
clc
push
loopne
out
loope
inc
outsl
pop
lret
jl
lahf
sbb
mov
call
pop
and
lcall
push
and
shlb
inc
add
das
or
cli
imul
je
mov
mov
gs
adc
jmp
add
cmp
ss
sti
scas
cmpsb
xchg
jno
jle
and
cmpsb
addr16
mov
mov
sbb
aaa
mov
jo
or
addb
nop
jecxz
adc
or
js
lret
mov
dec
jne
lret
and
outsl
pop
mov
ficoml
cmp
in
pushf
call
mov
sti
inc
mov
outsb
enter
xchg
les
test
in
loop
mov
stc
mov
pop
pop
xor
les
ja
xchg
push
outsl
arpl
pop
add
je
outsb
cmc
movdqu
ja
test
in
iret
mov
fadd
inc
insl
gs
add
sub
and
aaa
js
rcll
xor
sbb
int3
push
add
sbb
xorl
pushf
cmp
mov
or
pop
lods
mov
lods
sbb
int3
sub
pop
std
pop
xor
outsb
cmc
test
xchg
sbb
push
rcr
repz
ret
add
sbb
add
stc
clc
pop
test
std
mov
jle
pop
cld
xchg
subb
ror
faddl
mov
in
popa
fnstsw
sbb
lods
lea
or
fcomps
fistpl
ret
fcom
cmp
out
xor
bound
push
jns
jle
loop
xchg
int3
test
push
adc
mov
and
fs
fcompl
jmp
scas
fistpll
sbb
push
push
out
xchg
dec
test
fimull
push
sahf
out
mov
mov
mov
push
or
lret
jg
mov
mov
andl
dec
sub
sub
jno
mov
cwtl
mov
jbe
sti
xor
pop
xor
and
sbb
mov
icebp
xlat
adc
cmp
or
dec
mov
sbb
movb
adc
pop
fwait
stos
push
push
in
pop
inc
dec
xor
popa
adc
out
inc
cmc
clc
sub
mov
repnz
and
cwtl
fsubr
inc
add
jecxz
adc
push
les
mov
je
xchg
inc
jecxz
sbb
stc
push
fildll
inc
mov
xchg
xchg
push
or
in
hlt
test
shlb
ret
pop
xchg
jb
cwtl
pop
mov
inc
sub
popa
outsl
aam
scas
dec
fs
lods
pusha
int3
jmp
repz
or
in
dec
in
dec
aas
mov
fisttpll
cli
jmp
push
std
mov
inc
fbstp
mov
add
sub
jecxz
mov
test
in
adc
push
pop
mov
test
mov
pop
notb
push
inc
inc
mov
insl
inc
pop
mov
inc
add
stos
jo
popa
aaa
in
shrb
mov
xchg
movsb
lcall
imull
test
rorb
jg
inc
std
pop
iret
shlb
and
jle
test
push
js
sub
mov
and
outsb
cmc
pop
in
in
aas
xor
inc
jl
in
jmp
stc
mov
mov
and
fscale
add
jo
xor
stc
jle
loop
pop
inc
movsl
ret
mov
mov
push
sbbl
imul
movsl
mov
add
shrl
push
xchg
into
ret
mov
sbb
pop
xor
les
sbb
push
and
dec
test
adc
jnp
mov
call
mov
xchg
or
in
rorl
jo
and
mov
pop
test
lods
cltd
mov
aas
test
clc
xchg
lock
daa
call
rcrb
pop
xchg
jno
repz
ret
movsb
mov
movsb
pop
sub
nop
pop
inc
lea
adc
pusha
cli
jbe
jbe
mov
movsb
stos
pop
jmp
add
shll
push
or
lahf
dec
icebp
inc
insb
lahf
test
enter
subb
cmp
pop
bound
cld
sub
nop
out
stc
aad
mov
pop
shr
hlt
sub
inc
lahf
out
jecxz
into
ja
push
das
and
or
int
mov
pop
mov
xor
daa
aaa
xor
nop
das
xor
push
movsl
or
pop
icebp
push
xor
scas
addr16
pop
jecxz
mov
sub
fwait
cmp
add
mov
mov
lods
jle
mov
sub
and
push
mov
sbb
sar
imul
ja
push
fnstenv
xchg
loope
pop
js
xchg
pushf
dec
sub
add
negb
push
fwait
jns
dec
mov
jne,pn
jbe
stc
fstl
test
fdiv
fyl2x
addr16
inc
jp
and
push
adc
pmulhw
arpl
testl
push
add
cmc
dec
lea
mov
jae
mov
pushf
or
lret
push
jge
mov
or
into
sub
test
sbb
dec
or
in
sarl
cmc
jle
into
push
sbb
cltd
push
dec
jo
jne
aad
cwtl
test
cmp
lcall
cmc
fwait
pop
test
dec
or
int3
mov
sbb
push
lea
add
jg
into
ret
loop
scas
mov
movsb
sub
pop
add
dec
lods
ja
les
popf
push
sbb
jbe
rorl
jbe
les
jl
scas
cltd
push
xchg
mov
lahf
adc
cs
inc
loop
sub
gs
dec
sub
call
insl
adc
sbb
cmc
pop
popa
into
push
nop
and
sbb
repz
xchg
and
cltd
adc
mov
cmpsb
dec
pushf
arpl
pop
iret
imul
jl
push
push
or
xchg
imul
insl
jnp
ret
mov
in
pop
in
inc
adc
jle
or
jns
mov
cli
sbb
pop
shl
divl
ret
loope
outsb
push
xor
push
sub
rolb
rclb
cmp
jecxz
pop
xchg
jno
clc
xor
dec
add
in
cmp
test
jp
xchg
bound
mov
mov
test
cmp
pop
lret
lods
sub
cmp
and
pop
stc
lret
mov
out
add
pop
pop
dec
imul
insl
dec
test
adc
ret
movsb
mov
ljmp
cli
dec
xchg
out
insb
popa
push
popa
sbb
ret
mov
test
jle
repnz
addr16
sub
leave
les
mov
sub
psraw
stos
sub
push
lret
fisubs
mov
push
ret
mov
sub
lahf
lahf
xlat
or
movsl
sub
push
jno
scas
lret
dec
mov
sub
mov
mov
fisubl
fwait
addb
pop
cltd
repz
mov
mov
stc
push
xchg
outsb
out
std
in
sub
jns
loop
inc
aas
ljmp
jno
rcll
and
in
fmulp
adc
adc
movsl
xor
mov
jg
inc
xchg
icebp
fsin
shrb
jb
inc
js
pushf
fistps
adc
mov
push
push
pop
mov
mov
add
or
jmp
sbb
loope
and
test
fisubs
jle
add
push
push
out
incl
fbld
insl
xchg
xlat
lods
out
inc
int3
mov
int3
orl
inc
jmp
inc
mov
mov
inc
int
push
fsub
mov
lea
push
xchg
bound
inc
dec
sbb
test
inc
test
inc
dec
shlb
xchg
xor
push
in
lcall
fmulp
outsb
call
imul
jno
mov
cmp
stos
dec
jne
xchg
sahf
lret
cltd
push
stc
addr16
pop
cs
inc
arpl
pushf
pop
lcall
push
adc
jnp
pop
test
push
adc
shrl
imul
cmp
mov
jg
js
adcb
mov
cmpsl
mov
lea
ja
sbb
jp
xchg
js
fbld
inc
out
das
push
add
mov
mov
and
pop
test
dec
into
jecxz
mov
xor
mov
pop
push
aas
fidivl
and
insl
pop
jnp
cs
imul
xchg
inc
jne
cmp
popl
mov
lds
adc
sub
sbb
or
fldl
push
xor
inc
ljmp
push
pop
jp
push
imulb
int
inc
repnz
repz
repnz
xchg
push
scas
jmp
jo
adc
int
lret
xchg
movzbl
push
lret
mov
xlat
repz
fiaddl
nop
add
jmp
lcall
push
lock
xchg
cmpsl
dec
or
push
movsb
cmp
lahf
lods
dec
in
sahf
sub
sub
sbb
push
lds
jnp
adc
pop
add
test
cs
push
pop
test
aam
rolb
popa
jmp
aas
lea
dec
mov
sti
push
pop
cmp
fcomp
adc
and
fldz
push
pop
clc
xor
repnz
inc
sub
or
ss
incb
xlat
dec
pop
popf
lods
data16
es
mov
lods
lret
pop
mov
je
mov
test
xor
adc
and
xchg
jbe
stos
pop
ss
insb
mov
mov
jl
fmuls
hlt
pop
inc
jbe
sbb
bound
jecxz
iret
jb
js
repnz
imul
add
sub
mov
mov
pushf
pusha
sbb
xchg
pop
pushf
mov
push
inc
sbb
or
mov
jecxz
popf
test
lods
push
dec
test
lods
sub
mov
inc
push
mov
jle
nop
xchg
cmp
stc
or
and
sub
dec
aas
push
hlt
fwait
jmp
pusha
fcomps
movsl
push
ret
stos
scas
jo
jmp
test
push
cmc
lcall
shrl
mov
les
lock
cmp
repz
or
xchg
iret
adc
sub
mov
shl
mov
ljmp
in
cmp
xlat
loop,pt
mov
cmpsb
pop
adc
out
adc
int
jge
mov
mov
je
pop
and
adc
repnz
test
popf
push
call
cwtl
test
nop
cltd
mov
adc
xorb
dec
pop
ret
lret
pop
rcl
ficoml
inc
lret
xor
lahf
xchg
and
insb
test
fbstp
cmp
push
mov
mov
das
sbb
incb
aam
jb
cmc
je
pop
pop
xchg
mov
mov
dec
push
ljmp
mov
aas
mov
sub
sbb
add
mov
imul
mov
data16
dec
stos
lret
jns
mov
jle
mov
lret
or
mov
aaa
xor
fcomps
mov
jnp
lods
lret
xchg
mov
mov
in
aaa
xor
orl
mov
or
stos
repz
sub
add
pop
adc
cmc
scas
in
cmp
rclb
insl
or
mov
add
cmp
hlt
daa
lahf
jmp
inc
jl
mov
rcrl
in
push
and
mov
ds
mov
sub
jno
mov
insb
xor
cmc
loopne
ror
and
jle
cmp
out
out
jp
sbb
jg
in
and
stc
lret
out
pushf
popa
pushf
popl
outsl
aam
mov
mov
push
or
aad
inc
push
movsl
cmp
mov
fiaddl
popf
insl
jl
sbb
gs
xchg
add
les
cs
test
mov
aaa
pop
int3
mov
add
dec
add
pop
xchg
lret
inc
or
xor
out
fimull
sahf
insb
cmpl
cwtl
mov
or
sub
cmp
dec
xchg
fimull
mov
es
xchg
lea
inc
xchg
lret
outsl
pop
adc
es
fdivrs
movsb
icebp
pop
shrl
arpl
clc
adc
pop
inc
xor
adc
outsb
inc
loopne
fdivrp
cmpsl
fldenv
aad
sub
dec
jbe
scas
les
mov
bound
hlt
sahf
addl
scas
jb
nop
or
gs
mov
add
cmpsl
in
movsb
push
cmp
in
mov
jns
imul
jmp
mov
lds
out
ss
push
or
das
addl
dec
stc
jns
flds
xor
movsl
vsubpd
ret
gs
push
adc
push
test
pop
es
enter
mov
add
repz
sbb
or
mov
ffreep
mov
add
or
sub
data16
dec
arpl
sbb
sbb
ja
repz
and
and
push
mov
aam
loop
pop
loope
and
sub
mov
test
aad
inc
outsl
inc
inc
adc
test
or
js
push
cld
test
sub
cmp
mov
inc
pop
insb
jmp
jae
sub
popf
mov
test
mov
cmc
sahf
call
xor
int
fcomps
push
jl
add
or
add
orb
add
inc
and
rcr
sahf
stos
jae
aaa
and
popa
notb
jle
ja
mov
xor
mov
sbb
push
pop
jecxz
pushf
jmp
sti
jecxz
or
sbb
cmc
jns
arpl
mov
je
stos
leave
or
iret
lcall
jp
inc
sti
es
mov
repz
adc
test
sbb
or
push
lret
dec
lods
ret
dec
sbb
cltd
or
rolb
pop
inc
imul
jns
and
scas
aaa
js
out
ret
out
insl
push
loop
push
fs
jb
into
clc
cmp
out
push
loopne
mov
in
mov
stc
push
inc
or
mov
fdivl
fs
and
aaa
mov
mov
dec
mov
or
cmp
add
jo
adcl
test
hlt
shl
daa
pop
scas
sbb
lea
out
xor
stos
pushw
jmp
push
and
gs
mov
push
adc
add
dec
stc
movsl
lret
dec
push
mov
add
jne
int3
out
cmp
sub
ret
stos
jl
arpl
pop
mov
cli
cwtl
mov
push
push
xor
jp
pop
scas
sti
add
daa
lret
push
dec
shl
gs
jmp
and
int3
mov
pop
scas
mov
sti
xlat
jo
femms
aas
and
enter
push
inc
mov
lret
xor
mov
sbb
push
imul
test
push
arpl
and
cmpsb
loope
cmp
xchg
xor
cmp
xchg
push
xchg
in
fbld
ja
mov
dec
xchg
in
push
xchg
stc
test
daa
ret
cltd
pop
testb
pop
jecxz
push
fwait
out
adc
lcall
xlat
pop
sub
repz
push
mov
add
or
std
mov
dec
ljmp
and
mov
loop
in
out
enter
inc
sbb
sub
ss
and
ret
loope
sub
lret
xor
adc
mov
and
inc
push
dec
jne
arpl
jmp
jg
cltd
mov
in
lock
repnz
pop
pop
sbb
xor
cmp
inc
xchg
adc
sarb
negl
inc
xor
fsub
cltd
xor
jne
inc
hlt
imul
outsb
ljmp
adc
pushf
mov
mov
sub
lret
dec
push
int
inc
cwtl
ret
shrl
push
xor
inc
pushf
sbbb
mov
icebp
je
dec
test
loop
stc
jnp
sbb
xlat
jbe
xchg
xchg
xchg
sbb
aam
sbb
mov
jb
inc
sub
dec
xchg
aad
and
int3
pusha
pop
add
adc
push
repz
call
sti
mov
xor
xchg
dec
adc
sub
cs
inc
lret
mov
fmuls
fcom
lea
mov
ds
pop
cmpsl
fisttps
inc
sbb
adc
fidivrl
out
inc
push
fcom
jno
sarb
test
mov
xchg
xlat
push
dec
sbb
stc
cld
popa
out
mov
test
cmp
jo
push
cmpb
jnp
fstp
mov
out
inc
bound
in
jle
test
test
int3
testl
push
cld
mov
jmp
xor
mov
cmpsl
push
fidivs
mov
jb
mov
xlat
shrl
mov
loop
fidivs
ficomps
dec
dec
je
cmp
pushf
punpckhwd
or
out
aam
jno
lret
inc
jbe
sbb
aaa
je
std
ljmp
lcall
nop
dec
shl
int
lcall
outsl
xlat
sarb
pushl
mov
dec
sbb
ret
pop
pop
mov
roll
icebp
jge
xchg
and
xor
xor
mov
mov
dec
test
ficompl
jbe
int
rclb
in
add
aam
rcr
mov
mov
cmp
dec
cmp
hlt
sbb
add
mov
sbbb
xor
aas
mov
gs
outsb
lods
push
cli
add
ret
das
mov
movsl
into
mov
push
ds
xchg
fcompl
and
cld
sub
out
push
insb
sbb
xchg
jbe
jg
daa
je
out
dec
adc
orl
ss
inc
adc
addr16
cmpsb
pop
fiadds
sbb
imul
jno
xchg
xchg
dec
cwtl
scas
jle
sub
jp
js
lods
xor
aas
sbb
adc
mov
jb
scas
inc
cmp
adc
adc
adc
fcoml
mov
div
and
inc
jne
gs
mov
sub
shlb
adc
xchg
and
push
or
leave
insb
or
jb
scas
and
sub
xor
sub
shl
push
mov
cs
ret
loop
inc
lret
cmc
mov
push
out
enter
aam
add
mov
out
fcmovnu
daa
cmp
pop
test
add
pop
leave
mov
arpl
sbb
pop
ja
cmp
mov
fimuls
jbe
add
into
inc
jp
push
outsl
inc
mov
add
in
rcr
stc
lds
je
or
jecxz
sbbb
outsb
std
add
cmp
adc
in
dec
pushf
jp
ja
mov
fidivs
mov
add
ja
or
cwtl
push
jmp
cmpsb
test
xor
fcompl
xor
xchg
adc
pop
cld
add
xor
shrb
push
je
cmc
arpl
jg
dec
push
hlt
ljmp
lea
ret
inc
adc
or
popl
and
sub
cltd
stos
push
pop
ss
push
cs
cwtl
ret
jno
cs
pusha
mov
or
call
jp
mov
lret
pop
lods
outsb
cltd
mov
out
mov
dec
xchg
mov
jl,pn
inc
enter
pop
pop
in
andnps
out
add
lock
and
jmp
mov
fldenv
ljmp
clc
sarb
dec
ret
flds
mov
jecxz
add
mov
push
push
pop
or
mov
sub
jmp
sub
mov
xchg
stos
sti
outsb
repnz
data16
mov
xchg
and
push
add
lcall
je
adc
cld
out
sub
lock
movsl
out
ja
xor
mov
lods
aaa
add
add
jle
cmp
jns
out
decl
mov
pop
iret
test
int3
mov
add
push
cmpsl
xor
pop
popa
ljmp
rcll
sbb
jns
lods
cvtps2pi
xor
filds
mov
push
dec
add
cmp
aam
fldt
ss
daa
mov
pop
loop
notb
push
adc
in
jno
cmp
dec
dec
cmpsb
fisubrs
outsl
ret
in
loope
std
push
push
dec
mov
shl
lcall
jle
xor
enter
mov
sbb
mov
dec
push
test
es
and
pusha
mov
sbb
clc
xchg
jno
sub
cltd
shl
stos
clc
mov
lret
fsubl
mov
adc
cmp
jno
sbb
and
cmc
pop
jae
mov
shll
popf
loop
or
shl
mov
xor
fucom
not
push
mov
and
fimuls
push
adc
push
jae
jne
aas
pop
dec
mov
shlb
mov
out
daa
or
lret
xchg
add
insb
shll
xor
imul
and
push
mov
sahf
pop
xchg
cmpsb
shll
xor
in
xor
loopne
int3
inc
cmpsl
pop
aaa
push
adc
dec
pop
and
lret
pop
fdivl
sbb
jo
jno
and
sub
sub
cmp
mov
add
and
push
out
je
sub
xlat
out
sti
cmc
loop
inc
xchg
lcall
push
std
lods
shlb
mov
cmp
aad
sub
inc
ret
pop
inc
push
jmp
push
cwtl
cltd
or
push
sbb
fldenv
push
push
ja
hlt
or
scas
mov
mov
stos
lret
cwtl
lret
shl
rcrl
adc
cmp
jo
jmp
test
movsl
into
clc
mov
int3
inc
pop
ss
clc
lock
dec
xor
and
scas
sub
fwait
cmpsb
rcl
aad
inc
xchg
adc
mov
jl
mov
adc
or
jno
popa
mov
dec
cwtl
repz
clc
pop
lods
pusha
cwtl
adc
scas
ret
pushf
in
int
xchg
cltd
dec
cmp
cmp
push
mov
xor
dec
leave
loopne
mov
lods
cmc
and
dec
imul
or
or
movsl
leave
ficomps
push
push
das
insb
daa
data16
xor
mov
pop
cli
dec
xlat
jae,pt
test
shr
data16
jae
test
popa
xlat
cwtl
iret
inc
xchg
xchg
imul
aaa
mov
clc
mov
fsubs
cmpl
sub
pop
xchg
mov
cs
mov
mov
fwait
das
cli
pop
roll
adc
inc
dec
into
lods
test
sbb
dec
lock
lcall
xchg
out
sbb
cld
mov
xor
push
loope
loope
std
mulb
dec
ja
in
xor
inc
pusha
lret
addr16
mov
and
mov
jo
cmp
insl
dec
push
fmuls
mov
add
je
das
jp
out
stc
adc
cltd
inc
mov
pusha
aas
sub
mov
mov
sub
jg
in
lds
push
mov
mov
test
sbb
or
mov
dec
or
pop
les
xchg
or
pop
sbb
imul
pop
and
shlb
add
mov
imul
push
and
les
arpl
jno
out
pop
cwtl
push
aaa
fcmove
push
cmp
out
pop
jmp
mov
push
movsb
mov
popf
mov
mov
pop
pusha
aam
pusha
fdivr
sti
test
or
and
ds
cwtl
in
jmp
cmp
mov
fnstcw
cmp
lods
loope
aam
lret
pop
sbb
dec
lret
sub
outsb
pop
stc
xchg
out
std
xlat
mov
pop
inc
js
jg
adc
jge
sub
mov
xor
xor
jae
push
add
repz
into
dec
fstpl
test
dec
test
call
and
ret
movsb
pop
mov
inc
loop
rol
out
cmc
jno
jbe
pop
mov
out
fmuls
adc
ja
adc
dec
dec
frstor
pop
lret
cltd
ja
daa
mov
add
idivb
jmp
scas
push
xlat
cmp
xor
mov
int3
cwtl
scas
jl
lea
jecxz
nop
add
xlat
cmp
outsb
setl
or
fiadds
adc
cmpsl
xchg
jnp
xlat
popa
inc
movsb
mov
add
mov
lahf
fcmovne
mov
sub
dec
fdivr
push
call
adc
lods
aas
xchg
fs
popa
jae
xor
cmp
mov
mov
dec
jp
jo
cwtl
mov
fists
cmpsb
outsl
dec
sub
sahf
cmp
fistps
lea
sarb
inc
xor
ljmp
pop
ja
mov
icebp
out
icebp
or
loop
or
cmc
inc
int
fs
ja
scas
std
dec
enter
fcmovu
sbb
and
xchg
dec
mov
mov
shl
scas
scas
loopne
ds
imul
outsl
xor
nop
lds
dec
std
inc
xchg
lahf
pop
jnp
in
adc
data16
pop
lcall
lock
sbb
mov
lea
aam
cmp
mov
push
cmc
mov
fisttpll
pop
push
addr16
xchg
gs
movsl
add
cs
es
std
inc
fstpt
push
stc
gs
fdivr
outsb
mov
int3
pop
js
loope
mov
push
jbe
mov
movsb
jnp
es
xor
std
out
xor
out
push
sti
movsl
or
inc
jb
pop
xlat
jecxz
rcrl
mov
cmp
add
pop
dec
repz
repnz
sub
dec
test
add
add
jno
add
lock
push
std
jo
lock
lret
or
push
mov
js
mov
mov
push
pop
adc
scas
cli
imul
sbb
lods
mov
mov
fwait
push
mov
xchg
cs
lods
jno
ja
je
jmp
lret
mov
loope
shl
xor
and
lods
add
cmc
xor
icebp
dec
adc
pop
pop
jge
jno
push
push
jmp
loope
scas
jg
mov
loopne
push
mov
or
xor
rcr
lahf
mov
push
ds
icebp
lods
jbe
jb
pop
pop
nop
jbe
call
lahf
mov
mov
and
cmc
popf
je
pop
mov
out
dec
inc
cwtl
gs
push
xchg
pop
lods
jge
test
cmp
xchg
sahf
pop
js
mov
xchg
sbbl
fucomip
inc
pop
push
imul
mov
pop
cwtl
and
std
xchg
xchg
push
add
mov
jecxz
stos
cltd
cmc
add
call
adc
pop
jns
xor
dec
stos
xchg
aad
pop
stc
sub
stc
or
dec
inc
xchg
inc
adc
shrl
jne
xorb
adc
inc
in
fstl
or
xchg
sub
arpl
adc
loope
mov
jmp
pop
or
mov
stos
lds
mov
nop
xchg
push
dec
movsb
rorl
icebp
cli
xchg
mov
xor
addl
or
sbb
cltd
cs
lock
sbb
jle
push
inc
daa
in
insb
bound
jbe
rcrb
add
ja
insl
in
sti
pop
mov
leave
test
fcmovnbe
dec
pusha
mov
fstpl
add
add
xchg
cmp
mov
out
fnop
jge
push
call
mov
jo
sub
repnz
divl
xlat
mov
adc
or
or
shll
es
dec
mov
dec
xor
sub
adc
mov
xor
andb
testl
jecxz
mov
jecxz
ss
jnp
add
cwtl
xchg
cmpsl
sarl
in
sbb
mov
test
popa
das
cmp
pop
cwtl
jge
push
mov
loope
lahf
or
mov
cmpsl
lods
jle
push
loopne
ds
jmp
jg
mov
je
sbb
test
jp
or
dec
xchg
pushf
mov
jnp
pop
sub
call
add
outsb
xchg
out
jne
pop
add
fnstsw
xlat
push
repnz
lds
or
rcrb
mov
das
fldt
fiaddl
mov
fcom
dec
cmc
fsubrl
adc
inc
mov
repz
shlb
gs
fnstsw
push
xor
int
and
add
push
in
notrack
cs
jo
repz
lret
add
mov
add
pusha
in
pop
cltd
push
outsb
test
cmp
enter
add
punpckldq
jle
imul
insb
fadd
inc
fldcw
pop
addr16
iret
mov
es
sbb
gs
xchg
fmulp
cmp
jecxz
mov
loope
loopne
push
mov
out
jge
enter
repz
imul
and
call
insl
or
or
pop
outsb
es
das
lock
in
sub
mov
into
cltd
lret
add
xchg
inc
sbb
sub
je
lcall
mov
fdivrl
iret
mov
push
xchg
adc
fcomps
push
clc
and
loope,pt
jns
fnstsw
cmpsl
push
into
pushf
sbb
in
rol
sahf
and
xchg
daa
flds
inc
pushf
mov
sahf
ffree
cmp
das
hlt
mov
mov
subb
sub
xchg
cmc
xchg
or
into
fwait
pop
dec
sbb
cli
pushf
adc
push
insb
sub
fiadds
adc
outsl
hlt
sbb
lahf
sbb
stos
mov
xchg
dec
lret
xlat
fcmovne
or
sub
and
std
push
repnz
cmp
enter
imul
pop
lea
sahf
pop
roll
movsb
test
inc
mov
repz
jb
sahf
adc
les
jo
sub
movsb
loopne
xor
stos
pop
push
fwait
js
rcrl
jge
inc
xchg
cmc
mov
in
loope
jmp
mov
mov
cmpl
js
mov
jno
cld
jns
ss
xchg
shl
ds
sbb
mov
aas
inc
inc
ljmp
add
js
lods
push
pop
push
cmp
pushf
decb
xchg
scas
shrl
push
pusha
dec
mov
pusha
cmpsb
scas
pop
loopne
add
clc
sbb
and
stos
addr16
popf
les
fcoml
bound
repnz
push
mov
das
out
mov
sti
cmp
int
push
dec
xor
sahf
addb
mov
fs
test
test
xchg
imul
push
sub
inc
or
fwait
mov
add
ret
xchg
push
jb
adc
stc
sahf
mov
or
aam
mov
and
mov
lahf
int3
sti
lahf
mov
fbstp
cli
in
rolb
in
adc
nop
negl
push
jae
mulb
fs
nop
adc
cltd
std
adc
add
in
in
and
fildl
jbe
xor
add
and
daa
out
add
sbb
outsl
jmp
inc
mov
pop
adcb
loop
xchg
arpl
adc
loope
jp
and
sbb
xchg
xchg
cmc
aad
test
sbb
mov
cmp
aam
mov
ljmp
xor
ret
mov
lods
pop
shlb
xchg
mov
jp
xchg
enter
mulb
push
xchg
xor
sbb
pop
sub
push
push
push
mov
sbb
pop
lock
loopne
or
push
cwtl
data16
in
dec
cltd
sub
stos
inc
add
xchg
mov
testl
inc
jae
mov
jge
nop/reserved
inc
ja
xchg
dec
dec
push
popa
icebp
stos
ja
inc
or
jp
cmp
mov
jno
and
fcmovnbe
cs
push
mov
dec
sarb
stos
fdivs
mov
jge
mov
cmp
cmp
sub
imul
adc
or
push
adc
scas
mov
xchg
rol
mov
jge
out
adcl
mov
fisubrl
pusha
addb
add
add
stc
jle
cmpsb
push
and
js
scas
loop
sub
sbb
cltd
mov
aas
fcomip
mov
clc
adc
cmpsl
fsubrl
mov
imul
in
add
or
inc
scas
std
push
loopne
mov
fiadds
mov
pop
adc
gs
sub
in
repz
xchg
cwtl
fistpll
dec
cld
pop
enter
sbb
cmp
aas
aaa
and
sti
test
xor
mov
ret
or
xor
loope
xor
adc
adc
jns
in
xor
cmpsl
jbe
xor
mov
testl
fcomps
xlat
sub
push
adc
or
mov
jae
push
test
pop
jle
movsb
out
add
xor
or
rolb
add
pop
push
rcrl
pushf
mov
mov
fisttpll
cmpsl
jns
stc
add
add
pop
jl
test
test
sub
xor
or
arpl
outsl
pop
ret
mov
mov
lods
stos
aas
jg
test
pop
xlat
popf
loop
sbb
inc
rolb
xor
enter
clc
fmull
mov
pop
dec
pop
outsb
test
outsl
mov
js
and
outsl
fnstsw
add
xor
pop
rclb
mov
mov
jmp
inc
and
xorb
and
cs
inc
fsts
lods
imul
mov
andl
cwtl
mov
mov
daa
xchg
adc
call
jb
data16
imul
and
call
call
bound
pop
sub
jecxz
push
inc
pop
inc
mov
sub
push
lods
cvtpi2ps
ret
fnsave
rcrb
dec
data16
ljmp
clc
push
fidivl
inc
mov
push
data16
xor
sub
sbb
mov
inc
mov
push
cwtl
cwtl
rolb
add
daa
movsb
mov
rol
loope
xlat
xchg
orl
xchg
test
mov
in
sbb
adc
add
mov
mov
dec
add
mov
aad
mov
push
test
cli
pop
sbb
mov
and
pop
push
ss
sti
ja
jg
cltd
ficoml
lds
cli
mov
in
cwtl
push
sbb
mov
xchg
das
shl
shl
cmc
pop
not
push
inc
push
hlt
inc
loopne
mov
push
stc
ss
lcall
mov
bound
dec
fisubrs
jb
or
daa
cmpl
fmuls
out
mov
movsl
add
and
rorb
mov
mov
mov
adc
dec
ss
push
and
fildll
lds
in
rcrl
sbb
mov
push
jge
jl
das
lds
ret
arpl
and
mov
jns
jb
out
jecxz
xchg
jns
aad
push
add
ror
ret
pusha
push
popa
imul
sbb
imul
inc
cmc
sub
and
repz
and
sbb
mov
push
cmp
ja
in
ret
js
xchg
js
sbb
mov
test
js
fists
push
in
mov
mov
dec
mov
imul
nopl
jmp
mov
repz
xchg
ss
cmp
stc
mov
mov
aaa
roll
jbe
xor
leave
pushf
add
jb
fsub
push
loopne
jo
sbb
sbb
xchg
aas
fstpl
js
imul
icebp
jbe
mov
xor
xchg
fstpl
aas
int
mov
sahf
pop
xchg
loope
lds
fs
adc
cmp
pop
mov
cmp
iret
or
in
and
inc
lret
lret
psubusb
cltd
js
in
mov
push
push
push
sbbb
rclb
out
cmp
daa
inc
cmpsl
push
leave
fsubs
jnp
fs
sub
dec
test
stos
push
adc
in
sbb
leave
sti
ficomps
jle
loopne
cld
push
and
dec
jg
mov
mov
nop
xor
cmc
and
scas
test
cmp
fdivl
mov
or
sti
test
lds
pop
push
add
pop
fst
pop
cld
fs
leave
data16
jge
out
pop
outsl
into
addr16
jae
mov
pop
pop
jb
push
decb
out
mov
adc
dec
push
arpl
stos
dec
cmp
loopne
sti
sahf
mov
into
push
xchg
xor
cmovp
repz
test
je
jne
shlb
jge
leave
enter
pop
testl
sbb
cwtl
in
shlb
loope
jp
out
pop
fadd
jl
sbb
or
testb
xor
mov
push
pop
lods
mov
cmp
sub
dec
push
or
inc
add
add
inc
imul
scas
mov
daa
jb
pop
xchg
push
pop
and
mov
loop
jecxz
push
add
mov
cmp
loop
stos
rolb
push
push
pop
ja
adc
push
fs
loope
sbb
and
addr16
lock
pop
in
push
scas
mov
jno
lahf
push
and
int3
xchg
sbb
into
xchg
call
pushf
xchg
repnz
les
dec
in
movsb
and
mov
int3
out
push
jae
jp
rorl
cmpl
xchg
xor
adc
andb
dec
inc
xlat
sbb
dec
out
ja
push
outsl
and
int
add
jge
push
xlat
mov
cli
shll
out
and
mov
lods
adc
add
xchg
addb
cmp
inc
call
repz
lea
test
ret
pop
inc
and
pop
ret
inc
push
loopne
inc
clc
ret
ss
jno
jl
dec
push
push
incl
aad
fistl
sub
inc
mov
pop
gs
fisttpll
mov
sub
daa
inc
xchg
cmp
or
jno
outsl
sub
pushf
js
jl
subb
or
test
fwait
mov
shl
sub
stos
mov
jno
pop
sub
pop
fildll
out
and
sbb
arpl
jmp
inc
mov
xchg
bound
cmpsb
pop
cwtl
and
jge
lcall
test
cwtl
aaa
aad
mov
out
daa
jbe
pop
jge
mov
pop
xchg
jbe
jbe
jge
leave
jmp
ret
and
lods
xchg
fidivl
add
jnp
pop
mov
das
xchg
ljmp
sahf
push
mov
add
adc
sbb
and
ss
fcompl
lds
adc
sahf
pop
jns
lods
insl
cmp
into
jno
adc
push
sub
dec
out
and
popf
dec
mov
adc
fdivp
mov
inc
add
adc
pop
stos
lock
or
inc
mov
inc
adc
mov
and
and
jp
les
hlt
outsl
mov
and
xchg
rol
call
fistpll
and
mov
fwait
cld
lcall
mov
push
loopne,pn
pop
aad
pop
add
lods
insb
mov
lret
mov
xchg
loope
pop
in
mov
js
clc
cmp
inc
and
jmp
enter
add
jno
shl
cmp
jmp
cmp
pop
mov
loopne
cmpsb
jno
push
xor
cmp
xchg
movsl
lods
jl
test
arpl
rcrl
push
icebp
or
dec
outsl
jmp
xor
lahf
ljmp
mov
fucomp
adc
inc
mov
scas
outsl
stc
lret
lahf
mov
pusha
jnp
and
and
xor
pushf
push
mov
in
dec
in
push
das
test
ljmp
loopne
aam
push
into
ljmp
lahf
fcoml
mov
xor
xchg
dec
mov
or
int3
sub
pop
mov
sbb
push
xchg
cmc
bound
inc
hlt
mov
gs
cmp
fiaddl
cmp
lret
xchg
int
sub
pop
add
out
jno
mov
outsl
pop
mov
dec
push
adc
mov
push
jmp
cmp
and
js
sbb
out
repnz
insb
subl
mov
enter
out
imul
cmp
mov
or
sbb
mov
pop
fstps
daa
and
add
xchg
sti
sbb
or
call
sub
enter
aas
ror
xor
loopne
mov
pop
ret
stc
clc
cmp
mov
js
cmp
fsubl
xchg
cmp
push
pcmpgtw
movsl
cmpsb
shrl
sub
adc
mov
cmp
idivl
shl
inc
mov
outsl
popf
pop
movaps
sub
inc
inc
sbb
jne
lahf
call
lods
inc
mov
stc
rcrl
and
pop
adc
jnp
dec
inc
add
jl
push
lahf
outsl
lcall
and
cltd
jg
popf
mov
stc
dec
xchg
mov
out
mov
push
mov
aas
and
pop
cmp
cmpsb
sahf
cmp
sbb
mov
cmp
push
sub
inc
xor
or
ret
sub
aas
push
jl
out
insb
pop
mov
insl
mov
mov
push
jp
xor
imul
or
popa
ja
add
fs
inc
rol
imull
movb
cmp
jl
movsb
sbb
arpl
push
std
in
and
mov
addr16
stos
in
pusha
push
test
mov
std
add
test
add
mov
js
sbb
push
cwtl
std
cmp
shlb
ret
cmpsl
jno
jno
jl
lods
sahf
pop
movsl
test
mov
push
test
cmp
add
test
out
and
lret
or
mov
and
aaa
aas
mov
pusha
jl
cmp
jecxz
ja
inc
adc
inc
sbb
sub
jecxz
fs
push
jg
sbb
push
mov
dec
or
xor
das
rorl
adc
or
xor
dec
cwtl
cmpsl
divl
jb
cltd
lret
dec
sbb
scas
sbbb
cmpsb
pop
sub
or
pop
aaa
xchg
sub
lcall
cmp
imul
or
xchg
ja
cmp
iret
orl
mov
insl
push
ja
and
lret
ljmp
xorl
xchg
cmp
push
repz
push
adc
fcoml
fs
pop
lret
leave
lea
mov
jg
jne
pop
pushf
jge
cld
rcll
adc
jno
cs
mov
inc
add
scas
push
adc
ja
inc
pop
imul
out
aaa
dec
adc
xchg
stc
mov
into
fbld
fcompl
mov
fwait
add
xor
lahf
cltd
mov
jle
rorl
push
push
out
jns
rclb
push
imul
aaa
cmc
sbb
jge
and
xchg
lea
mov
sub
aaa
fs
mov
je
cmp
imulb
inc
mov
pop
sbb
cmp
cmpsb
jns
push
int
xchg
loop
into
jp
adc
aad
push
sbb
popf
mov
outsl
push
aam
push
mov
aas
sarl
push
adc
mov
xor
mov
xchg
in
mov
and
jle
add
push
lahf
ljmp
xor
jle
push
mov
sbb
lret
jae
xor
sub
cld
inc
insl
push
test
sbb
jg
rolb
loopne
push
sub
push
fidivs
mov
loop
xchg
sub
jle
ljmp
mov
lret
xor
cwtl
aad
incl
idivl
fsts
mov
rorb
sub
and
xor
shll
lds
lds
leave
popa
pop
inc
gs
fiadds
adc
aad
cmpsl
mov
dec
cmp
xchg
push
xchg
pusha
ja
fildll
fld
inc
es
nop
aaa
xchg
mov
push
repnz
jg
adc
sub
add
daa
cld
test
orb
adc
sbb
in
out
stos
test
cmpsb
xchg
xor
rcrl
sahf
lods
mov
jl
and
jecxz
in
sti
xor
pop
pcmpeqd
out
repz
rcl
cmp
das
cmp
pop
divl
ja
lea
cs
sbb
cmp
orb
jno
mov
fldlg2
lods
and
jmp
adc
mov
jnp
lock
pop
icebp
add
lock
or
push
stos
lock
or
stos
cltd
fidivs
dec
mov
mov
xchg
cmpl
xchg
push
push
xor
sub
or
jb
cltd
scas
stos
aaa
mov
push
add
out
inc
in
jmp
andl
or
sbb
stc
loopne
dec
xchg
or
or
in
js
pop
in
aad
jne
shr
jp
test
xchg
sti
fildll
cmp
mov
leave
data16
adc
shlb
sbb
adc
cltd
sub
loopne
fnstcw
fldcw
in
xor
mov
std
out
sbb
pop
aad
adc
sub
xchg
aaa
xor
mov
test
mov
adcb
dec
jne
shrb
dec
push
fs
inc
test
pop
add
dec
test
mov
push
mov
cmp
cli
int
fiadds
mov
mov
aad
call
mov
cmp
mov
push
sub
cmp
daa
test
imul
fdivrs
pusha
pop
imul
or
fisttpll
out
shrl
fadds
pushf
fiadds
cmp
xor
rolb
out
cmp
fistl
popa
cmp
scas
mov
adc
cmpsl
push
jg
hlt
xor
mov
mov
rcr
imul
mov
movsb
xchg
imulb
int3
or
mov
aas
hlt
dec
push
adc
xchg
aaa
ret
pop
xor
popf
fucomi
sub
pop
cli
xchg
dec
add
int
lods
mov
dec
pop
and
arpl
jns
push
ljmp
xor
dec
xor
adc
pop
out
push
pusha
out
mov
mov
lret
mov
pop
lea
and
mov
mov
mov
jno
dec
imul
jmp
mov
out
popf
xchg
icebp
xor
loopne
mov
aas
mov
je
hlt
mov
xor
push
pop
dec
sub
pop
sub
call
cwtl
jno
dec
icebp
mov
mov
pop
sbb
test
pop
ret
lahf
xchg
ljmp
sub
xor
popa
mov
adcb
lahf
pusha
ss
xor
mov
xor
js
jo
cmp
inc
mov
test
pushf
fwait
and
adc
test
stos
inc
cwtl
xchg
insb
jle
sub
clc
jecxz
imul
pop
xchg
lea
repz
mov
push
add
jge
xchg
repz
inc
jecxz
push
xlat
xchg
fistps
rcll
lods
div
ret
ret
popf
sahf
pop
fmul
xor
adc
inc
jg
mov
nop
mov
sahf
out
out
mov
mov
inc
test
push
in
cmpsl
add
gs
dec
daa
cmp
and
pop
sbb
repz
inc
gs
sub
shlb
orl
dec
push
adc
es
mov
fdivs
cltd
xchg
dec
pop
ret
mov
cmp
sbb
pop
mov
je
jecxz
push
push
push
and
xchg
icebp
dec
add
sbb
mov
pop
orl
loopne
incl
cmpsb
mov
cwtl
cwtd
add
mov
pop
xor
sbb
ret
fdivs
add
cmpsb
pushf
sub
dec
dec
cltd
outsl
jo
enter
subb
cmp
iret
jle
neg
cmp
in
push
jp
insb
xchg
mov
loop
add
in
cwtl
in
aad
add
int
lock
push
gs
pop
mov
mov
xadd
movsb
sbb
sti
inc
jmp
xchg
out
dec
xor
out
shl
loop
stos
push
dec
sub
mov
xchg
sub
push
mov
stos
sub
out
xorl
cltd
inc
subl
pop
popa
mov
inc
mov
inc
push
dec
in
pop
cmp
push
pop
push
push
cmp
sub
xchg
add
scas
pop
cmp
xlat
mov
adc
jae
cmc
cltd
jb
cwtl
in
pop
and
int
sbb
xor
jo
fstps
mov
add
cmpsl
mul
mov
mov
add
jecxz
ret
addr16
icebp
outsl
add
mov
mov
pushw
in
std
jecxz
push
dec
movl
fucomip
out
jo
enter
jns
or
jl
mov
lcall
out
sub
xlat
fildll
int3
je
mov
xchg
movsl
mov
ss
xor
arpl
pop
fisttps
lahf
jbe
dec
jle
arpl
clc
repz
adc
into
push
or
stos
aas
and
aas
jmp
xor
jmp
imul
xor
xor
dec
incb
push
adc
stos
stos
orb
add
in
jmp
or
aaa
cmp
shrl
inc
icebp
je
mov
jne
fbld
mov
pop
sub
enter
ficompl
cwtl
pop
adc
or
out
cmp
hlt
mov
xchg
cmp
jnp
and
or
and
xor
insb
lods
lcall
inc
sub
mov
mov
arpl
adc
in
xchg
lret
test
dec
sahf
pop
shll
dec
jg
jmp
mov
dec
into
add
jmp
xor
scas
fcoms
imul
std
das
in
pop
mov
pusha
daa
into
jae
inc
push
std
mov
mov
in
fadds
cs
xchg
lea
movsb
push
leave
outsb
push
lahf
fisubl
xchg
mov
pop
sbb
cmovns
sub
mov
lods
and
enter
rcrl
cmpsl
lods
in
jno
arpl
test
dec
push
gs
push
and
add
cld
mov
in
pushf
roll
jecxz
mov
jno
cld
scas
dec
in
cs
js
insb
cltd
xor
std
dec
outsl
jb
mov
and
popf
sbb
sbb
adc
xor
or
test
sub
outsb
es
xor
loope
mov
loopne
mov
xchg
stos
scas
mov
int
clc
mov
sbb
scas
in
push
or
outsb
push
and
cwtl
and
sub
xor
lret
icebp
scas
xor
add
inc
mov
testl
ljmp
loop
scas
imul
sarb
orb
push
loop
mov
cwtl
push
icebp
test
pop
inc
add
iret
in
std
mov
xchg
push
addr16
mov
leave
cld
cmpsb
fistl
sbb
xchg
cmpsl
mov
cmp
mov
cmp
lret
sub
add
ljmp
jecxz
mov
xchg
imul
out
sti
adc
or
out
aad
cmpsl
sbb
mov
jne
push
cmpsb
shr
mov
iret
cmc
lcall
mov
xor
ret
pop
jge
sti
mov
outsl
mov
inc
and
xchg
jge
leave
movsl
roll
js
arpl
fs
bound
pop
or
fadds
or
scas
mov
scas
jmp
fyl2xp1
pop
inc
fsubr
faddp
aas
dec
inc
bound
push
add
and
cmp
add
mov
rol
jp
inc
mov
sub
out
push
dec
mov
dec
or
popf
adc
movsl
lret
and
push
rorb
arpl
push
sbb
lods
dec
cltd
lock
pop
loop
push
jg
fstl
aas
scas
lock
jnp
mov
xchg
aad
ljmp
add
pandn
sub
jmp
ljmp
loope
ret
sub
inc
addb
jg
das
mov
xor
movsl
pop
pop
sti
mov
rclb
fsubrs
cli
jbe
loopne
or
mov
sbb
sbbb
loope
xor
inc
lsl
in
sub
dec
push
das
xchg
pop
push
fstpl
mov
cli
push
mov
or
loop
jns
repz
outsb
rcrl
insb
dec
lea
adc
idivl
rorl
pop
std
or
cmpsl
fistpl
sub
dec
test
sub
or
nop
ficompl
maskmovq
testl
sub
cltd
pop
shl
push
mov
xor
sti
add
push
or
nop
lock
mov
movsw
jae
inc
pop
lds
or
adc
leave
cmp
mov
pop
inc
call
xor
or
dec
notb
inc
orl
inc
outsb
xchg
jbe
xchg
inc
dec
push
in
adc
pushf
or
pusha
mov
es
dec
fs
mov
loop
cld
cltd
pop
push
push
cmpl
sbb
stos
and
and
adc
jbe
stos
pop
in
push
ja
scas
fcomi
sbb
mov
popf
cmp
mov
push
shlb
stc
cmp
sub
or
xsha1
cmpsb
dec
and
add
sbb
lds
add
mov
mov
cmp
daa
sub
jns
lcall
sahf
pop
xor
sbb
stos
mov
repnz
sub
pop
jg
xchg
mov
es
fs
test
ja
sahf
sbb
mov
pop
rcl
addr16
inc
ljmp
ja
int
jbe
xlat
or
inc
push
pop
ret
pop
and
adc
movsl
out
jg
insb
push
mov
xchg
and
rorl
or
lret
aaa
xchg
mov
mov
inc
lret
cs
pop
jmp
add
cmp
lods
inc
loope
cmc
stc
rcrl
jecxz
leave
push
mov
mov
in
lret
mov
xchg
xor
add
aam
and
dec
adc
xlat
lahf
leave
addr16
cs
cld
sub
cmp
aas
pop
xchg
sub
or
push
cwtl
test
inc
bound
mov
aad
stos
push
mov
loope
pop
fsub
mov
cmp
cmc
std
add
jmp
push
inc
fdecstp
sbb
scas
inc
dec
xchg
xchg
cmp
adc
add
out
incb
and
lods
mov
pop
imul
shl
aas
jbe
push
ja
jmp
outsb
mov
leave
add
shlb
andb
push
or
fisubrl
mov
pop
pushf
in
push
aad
mov
pushf
imul
bound
xchg
arpl
lock
sbb
nop
pop
sbb
aas
ss
mov
je
xlat
int
cli
xchg
cli
mov
cwtl
xchg
loope
and
mov
inc
or
sub
mov
mov
mov
retw
cmp
sub
add
lret
push
fistl
je
lods
fcmovb
push
in
add
sub
mov
das
dec
adc
repnz
xchg
fimull
push
xchg
out
jp
mov
test
mov
pop
in
mov
jae
xbegin
mov
add
mov
sub
fisubs
push
or
push
mov
rcll
test
sub
xor
add
cmp
jge
out
jnp
xor
int
in
xor
sbb
mov
or
pop
out
sbb
aad
adc
xor
std
jle
sub
mov
dec
insb
in
xor
daa
push
push
cld
xor
das
mov
push
mov
mov
pop
push
mov
dec
cltd
inc
pop
sub
bound
fs
sbb
inc
cld
loope
cmp
fs
push
call
loope
pop
int3
movsl
dec
aaa
pop
add
mov
or
jmp
xor
in
sbb
mov
inc
adc
sbb
sbb
mov
adc
ss
pop
mov
in
in
cltd
push
mov
mov
mov
push
stos
pop
in
push
ret
sbb
mov
sbb
jae
fidivrl
bound
xor
and
cs
int3
stos
inc
xor
imul
and
cmp
xlat
in
roll
insl
add
shlb
nop
ret
dec
mov
sub
int3
adc
jbe
out
sub
les
dec
inc
mov
and
adc
leave
cmp
mov
rcrb
cmp
mov
notb
das
cwtl
shll
push
pusha
push
sahf
push
xor
inc
push
js
popa
pop
sbb
sub
mov
lock
or
test
push
jo
aas
lods
int
popf
jge
mov
jmp
pop
subb
cwtl
fcomps
test
mov
push
sti
mov
scas
in
inc
mov
aaa
xlat
push
sbb
inc
xchg
xor
andb
adc
jb
movsb
mov
insl
and
mov
pusha
adc
and
mov
cmp
mov
inc
pop
incl
icebp
and
dec
jl
pop
js
mov
xchg
movsl
pop
mov
push
roll
add
or
ret
out
arpl
lret
std
cs
jg
mulb
push
jge
movsl
sub
push
or
sbb
dec
or
adc
cli
les
int
stos
aas
sub
imul
int3
mov
roll
adc
adc
cmpsb
subb
data16
push
mov
or
xor
sbbl
xchg
call
addb
or
sbb
stos
pop
xor
les
cmp
cmp
and
lods
ret
or
add
test
lret
call
js
sbb
jnp
inc
jecxz
insb
clc
push
pop
push
sub
jno
adc
lds
or
cmp
cmpsb
movsb
xchg
leave
xor
xchg
and
jg
outsl
mov
repz
ss
dec
cmp
shll
add
lret
mov
and
sub
mov
and
cmp
loope
push
or
jle
loopne
daa
bound
inc
pop
xchg
stc
xchg
inc
sub
fidivl
daa
mov
add
mov
mov
inc
jg
mov
add
push
and
repz
loop
push
adc
inc
inc
xor
shl
xlat
out
xlat
jbe
dec
jae
adc
cmp
xor
jl
aam
sbb
repz
test
mov
shlb
add
or
insb
rolb
orl
xor
xor
test
mov
repz
cli
ja
fdiv
into
outsl
out
stos
sbbl
cld
push
frstor
pop
add
pop
mov
out
lds
xorb
test
lock
jl
daa
std
in
ljmp
popw
pop
das
mov
into
jp
jo
sbbb
xchg
jns
outsb
outsl
mov
lock
icebp
dec
ljmp
or
cmp
movsl
daa
test
loop
outsb
stc
jne
xchg
sahf
je
mov
gs
int
inc
adc
push
mov
scas
or
std
adc
hlt
jecxz
mov
push
int
cmpsb
loope
rorl
adc
clc
inc
out
outsb
xchg
sub
sub
repnz
test
push
into
or
pop
jmp
cld
std
sub
sarl
pop
push
test
in
popf
ret
mov
mov
jo
pop
aam
sub
xor
inc
daa
push
sub
test
mov
pushf
push
add
popa
popa
in
out
mov
data16
mov
mov
shrb
outsl
sub
lods
out
insl
sub
sbb
test
lcall
xchg
inc
xchg
add
repz
movsb
outsl
bnd
cmp
ret
test
mov
dec
cmpl
outsl
push
stos
add
lahf
jmp
repz
adc
xchg
and
and
pop
push
pop
dec
mov
mov
or
shlb
lods
mov
aas
cmpl
push
cmp
cld
pop
loop
mov
outsl
lods
push
movsb
cmp
popa
adc
dec
mov
das
mov
lret
cmp
fnsave
pop
cmp
jmp
popl
mov
inc
mov
inc
into
jl
pop
js
mov
or
rcrb
cmp
push
vcvtss2sd
scas
sub
push
jge
jae
cmp
dec
fcom
adc
xchg
push
dec
popf
and
jns
lret
adc
mov
fwait
iret
cmp
loop
int
mov
das
mov
or
cmp
stc
jecxz
aaa
push
push
repnz
jae
clc
pusha
mov
lea
je
hlt
cmpb
cmpb
iret
int
xor
jae
clc
test
out
shl
xchg
cmp
int
mov
jge
movsl
scas
insb
xchg
or
pop
xchg
xlat
testl
movsb
push
pop
mov
fs
outsb
ret
mov
mov
xchg
aaa
jge
nop
lret
and
pop
int3
sub
mov
lea
int
dec
xor
inc
add
out
lods
lock
cmpsb
cmp
scas
outsb
push
mov
mov
add
and
aad
inc
add
fs
cmp
fmul
add
inc
pop
lret
or
mov
add
cmp
das
leave
fwait
dec
sahf
cmp
test
inc
mov
sbb
test
mov
xchg
push
mov
into
adc
mov
cwtl
pop
daa
cmp
cmp
xchg
jle
sub
jne
ds
jle
lods
sbb
or
mov
sub
sub
fsubs
clc
shll
mov
fistl
push
cld
mov
gs
cmpsb
pop
or
scas
xor
into
cmp
stos
pop
jns
mov
ret
inc
xorl
push
mov
jmp
sub
sbb
pop
push
cmp
out
xchg
aaa
dec
repz
push
ljmp
out
ret
jl
jnp
sbb
and
loop
lahf
sub
push
jb
adc
mov
inc
jae
mov
cmp
cmp
cmp
mov
jae
xchg
add
lods
out
stc
movsl
or
rorb
gs
popf
pop
mov
pop
outsb
sbb
push
das
rclb
and
jge
aaa
js
push
jg
push
mov
outsb
jl
outsl
cmc
test
adc
push
ss
sbb
pmuludq
insl
sub
add
inc
mov
lret
cmp
imul
and
inc
in
and
fstpl
jb
pop
pop
sbb
lods
sub
xchg
fucomi
mov
imul
jb
cmp
sti
push
lret
test
mov
nop
popf
shl
xor
add
mov
call
pusha
or
cmp
mov
xor
rcll
sbb
cli
xor
adc
push
addr16
ds
add
pop
test
mov
lcall
lea
and
movsl
dec
and
ljmp
in
mov
pop
test
ja
jmp
jne
cmpsb
xchg
push
aaa
push
jno
dec
xor
push
cs
xchg
outsl
sub
pushf
imul
ret
gs
adc
mov
mov
jb
pop
std
add
xchg
adc
les
add
push
dec
jo
jecxz
jl
push
ljmp
andl
add
xchg
or
rclb
sarl
add
adc
das
mov
das
cld
jne
decl
fs
pop
pop
cwtl
insb
add
and
or
mov
daa
loop
mov
cmp
fildl
add
test
sbb
imul
movsb
cmp
add
mov
jmp
push
dec
sub
push
mov
adc
pushf
dec
rsqrtps
or
divb
rclb
ja
cli
sahf
out
push
xlat
push
jno
add
and
sub
shlb
into
mov
push
dec
aaa
roll
xchg
stos
es
add
out
lcall
test
push
orl
stc
out
sahf
call
loopne
hlt
iret
inc
cmpsb
or
cmp
enter
fimull
aad
cmp
add
xor
scas
out
aas
adc
jle
cmp
out
inc
pusha
repnz
jno
in
sets
nop
jge
pop
sub
ja
mov
negb
mov
adc
les
loop
sub
add
cld
xorb
je
fnstenv
stos
test
in
add
sbb
adc
jne
mov
fisubrs
inc
xchg
dec
test
cmp
nop
divb
out
movsb
xchg
mov
jbe
outsb
mov
cmp
cmpsl
sub
mov
xchg
cmpsb
xor
pop
mov
xchg
inc
insb
shll
jecxz
xchg
mov
pop
jmp
fstl
dec
dec
or
and
rorl
jnp
loop
subps
inc
cwtl
lock
test
jle
cltd
and
clc
dec
jmp
ja
add
cmpsb
shrb
push
jmp
sarb
sti
mov
inc
mov
ficoms
mov
pusha
push
add
adc
leave
cli
dec
out
mov
push
mov
sbb
dec
scas
test
or
test
in
test
rcrl
cwtl
inc
lcall
ret
add
loop
lods
xlat
dec
rorl
stos
outsb
inc
or
adc
stc
je
stc
adc
or
cmpsb
in
fimuls
fstpl
or
mov
adc
imul
sbb
aaa
jle
cmp
mov
inc
pop
or
out
sub
push
sub
adc
call
jne
lret
xchg
mov
mov
scas
lea
sub
add
push
push
mov
ss
int3
inc
test
adc
daa
bound
mov
out
jle
ljmp
mov
sbb
sarl
fdivrs
mov
or
mov
push
jp
xor
pusha
add
sbb
aas
push
test
adc
loop
xchg
pop
sti
test
adc
int
les
stos
add
out
les
jbe
or
lcall
dec
add
lahf
mov
repnz
repnz
and
xchg
xchg
push
xor
daa
dec
in
push
lea
mov
cs
mov
xchg
or
rol
outsl
cmp
jmp
and
ficomps
and
imul
stc
mov
push
in
into
outsb
cmp
adc
inc
sub
inc
cmp
and
popa
pop
movsl
test
out
adc
ret
jmp
setnp
mov
jno
add
xchg
and
ret
insb
dec
fsubrp
test
mov
lcall
push
push
into
jo
pop
jg
repnz
mov
cwtl
out
mov
mov
cli
or
jge
ret
mov
das
mov
aas
mov
cmc
mov
out
lahf
cmp
in
sub
pop
push
xchg
out
cmp
mov
lods
sbb
and
inc
mov
mov
aam
push
inc
loopne
js
mov
xor
jp
add
cltd
cld
cmp
cmp
mov
dec
mov
inc
pop
cmp
repnz
adc
cmpsl
test
test
test
and
cmp
mov
out
cmp
mov
add
cmp
mov
imul
rcrb
or
lahf
push
into
popf
xor
mov
lret
scas
jb
xor
push
adc
pop
xchg
inc
cs
push
add
and
movsb
clc
xor
or
mov
jns
or
sbb
out
mov
pop
jne
sahf
xchg
xor
sub
jo
daa
int
bound
cmp
das
xlat
out
cmp
sbb
incl
rcrl
or
cltd
stc
and
fdivrp
dec
and
pushf
or
stos
xchg
push
arpl
push
jbe
pop
xchg
sbb
sahf
lods
lahf
nop
and
adc
pop
mov
test
and
nop
mov
out
in
add
imul
ret
loop
fwait
lret
push
dec
mov
sub
sahf
ret
mov
iret
shrb
mov
imul
loopne
lock
or
sub
push
inc
aaa
enter
inc
jmp
xchg
pop
jle
ljmp
xchg
mov
outsb
jno
xchg
adc
and
popa
pop
jmp
sahf
sbb
push
clc
push
les
movsl
xor
mov
je
sbbb
mov
mov
lret
pop
test
cmc
insb
mov
int
cld
outsl
rcl
mov
sbb
lods
jno
out
gs
out
sbb
repz
or
inc
mov
aas
stos
outsb
push
xchg
nop
mov
sarl
push
gs
xor
dec
xchg
pushf
dec
inc
pop
mov
insb
pop
popf
xchg
ja
adc
hlt
jb
cmpsb
sti
bound
fmul
shlb
jbe
and
pop
mov
int
xor
mov
cld
aam
inc
pusha
iret
inc
out
push
dec
sub
xor
sbb
test
inc
fmuls
push
lock
mov
xacquire
xchg
sahf
stos
mov
jecxz
sbb
sbb
in
mov
fmul
dec
mov
ljmp
cmp
xlat
in
int3
sub
xor
add
or
dec
mov
out
out
or
xchg
mov
lea
lock
movsl
rolb
sti
sbb
xchg
and
movsb
add
adc
outsb
lcall
inc
inc
lock
in
inc
loop
or
fmuls
aas
aaa
sbb
jg
mov
sub
pop
or
addb
mov
sub
bound
push
test
sub
test
and
in
dec
fisttpll
add
clc
add
sbb
lea
mov
jp
gs
jp
xchg
cmp
movsl
mov
xchg
test
shrl
jg
iret
repz
jmp
inc
cld
jmp
nop
daa
aad
outsl
mov
dec
jp
xor
out
call
fwait
xchg
xchg
mov
pop
cmp
xor
mov
cmpsl
clc
mov
outsb
and
xchg
jmp
pop
jns
pop
pusha
add
in
mov
sahf
loop
imul
mov
testb
test
popa
mov
add
das
repnz
jnp
aas
push
hlt
repnz
dec
cmp
jmp
cmp
outsb
jmp
test
aaa
push
xchg
pusha
int
iret
dec
stc
sbb
sti
lcall
jmp
mov
bound
jg
pop
fnsave
aas
ds
dec
lcall
jne
fneni(8087
mov
rcll
adc
or
loope
mov
pop
xchg
arpl
cmp
jle
dec
addr16
push
push
and
pop
dec
adc
adc
je
stos
push
xchg
ret
inc
or
packssdw
xchg
sbb
sub
hlt
or
mov
inc
negl
lea
in
sbb
in
inc
mov
test
int
bnd
add
sbb
es
mov
push
mov
nop
cwtl
cmp
pop
dec
xor
repz
lea
aas
mul
stos
adc
in
sbb
add
in
adc
movsl
dec
push
divb
lock
aam
lods
jo
xor
sub
push
jb
out
jnp
push
or
aad
sub
xchg
popf
xor
inc
sarl
mov
and
xor
fstl
add
xchg
cld
es
sbb
sahf
mov
adcl
xchg
and
mov
aam
aas
imul
lret
or
xor
and
sub
or
mov
adc
mov
sbb
cmp
cwtl
fsubrs
aad
add
add
xchg
flds
test
out
outsl
push
mov
pusha
ljmp
xor
ret
test
mov
pop
adc
sub
std
cmp
stc
pushf
inc
lds
lret
dec
adc
shrb
cmp
ret
cmc
cli
inc
fsubr
insb
xor
insb
test
lods
popa
loope
or
test
nop
cwtl
dec
mov
mov
xchg
cs
sbb
lahf
jle
insl
decb
pop
push
and
jmp
inc
pop
mov
in
pop
loope
sysret
cmp
cmpl
scas
or
mov
cmp
inc
or
inc
mov
std
add
or
mov
cmp
out
fnstsw
imul
lret
fwait
je
stos
out
or
adc
pop
pop
sbbl
sub
aaa
lods
out
cmpsb
mov
dec
lahf
fstpl
and
add
xchg
fwait
sbb
mov
cmp
int3
xchg
es
into
pop
andb
fsubrp
inc
je
lods
es
sti
js
lods
mov
jae
popf
push
iret
mov
popa
dec
sub
cmp
repnz
or
pop
jecxz
and
sbb
or
loopne
out
sub
mov
inc
mov
jmp
stos
shll
push
and
ret
out
or
add
sbb
mov
pop
addr16
jge
das
xchg
add
lock
push
insb
pop
movsb
pop
jp
sub
sub
adc
popf
in
pop
out
sbb
or
sbb
cmc
lea
fbld
adcl
out
test
movsb
jmp
mov
adc
in
icebp
popa
mov
int3
pop
mov
push
jl
and
shl
xor
repnz
xchg
and
pop
mov
gs
mov
daa
sub
lret
sub
pop
lods
add
lahf
lock
or
mov
jmp
sub
int
shr
test
stc
cmp
clc
xor
and
jp
in
outsb
push
add
adc
mov
jnp
mov
sahf
add
mov
mov
inc
loope
inc
push
xor
repnz
and
mov
outsb
xchg
or
mov
scas
ret
jmp
pop
jp
clc
jo
or
stc
jb
inc
leave
mov
sbb
leave
repz
push
ds
adc
test
jne
outsl
dec
cwtl
sbb
pop
mov
ret
cmpsb
stc
sub
jp
xchg
lahf
fimull
or
js
push
mov
lods
into
aam
sbb
or
ret
sub
imul
mov
stc
mov
mov
mov
loope
jmp
testl
jne
sub
xchg
in
ljmp
sbb
hlt
repz
mov
popa
ret
nop
mov
std
add
or
adcl
or
mov
mov
adc
cmp
into
sbb
ret
das
lcall
cmpb
cmc
addr16
or
add
or
inc
jb
adc
add
stos
sub
pop
mov
or
mov
cmc
sub
jnp
hlt
mov
xchg
aaa
and
mov
insl
stos
pop
and
dec
fsubl
cmp
outsb
xor
ucomiss
cmp
rcl
inc
repz
and
jns
jl
popa
mov
sarb
xchg
es
sbb
add
xor
js
shrb
jne
adc
push
or
popa
enter
popf
in
pop
lods
fldcw
sahf
xor
shlb
mov
call
mov
jp
jns
rcll
shrb
ret
lods
bound
jecxz
sub
cld
ljmp
sbb
dec
sub
lds
movl
js
xchg
sub
fisttps
ret
pop
inc
sub
gs
lods
pop
jmp
push
push
jecxz
lcall
ljmp
cmc
imul
mov
fcmovnb
fsubl
iret
cmp
jae
inc
jge
data16
aaa
jecxz
jmp
sti
lahf
sub
outsb
push
mov
dec
pop
jo
mov
mov
pop
cld
inc
mov
imul
psrlq
mov
ret
sti
divb
jge
sub
call
and
jl
dec
jle
inc
mov
ss
push
or
inc
popl
xchg
inc
push
cltd
in
adc
sub
notl
jbe
xor
add
mov
pop
ja
xor
daa
aad
movsb
and
xor
xchg
mov
xor
pop
ljmp
fsubrs
cwtl
pushf
mov
push
sti
das
inc
sub
enter
fs
sbb
outsl
dec
sbb
mov
stos
out
out
mov
ret
inc
sub
pop
jne
add
xchg
les
sti
ret
add
lret
clc
jmp
xchg
sub
dec
xchg
leave
movsb
adc
bound
push
mov
cmp
lea
test
push
mov
push
xchg
imul
mov
rolb
jb
push
into
mov
test
jne
cmp
mov
adc
into
or
jns
fistl
ljmp
leave
mov
out
insl
adc
scas
out
or
fs
jmp
ret
dec
pop
clc
stc
les
negl
mov
xlat
inc
aas
stc
push
adc
pop
push
in
rorl
push
mov
into
mov
adc
test
popa
stc
jno
xchg
dec
mov
in
in
out
xchg
cmpsb
sbb
rolb
ljmp
sbb
adc
in
daa
mov
xchg
xor
sub
mov
mov
mov
lret
add
inc
andb
dec
mov
je
mov
push
lret
pop
push
int
mov
mov
loope
shll
mov
mov
mov
jle
sub
xor
imul
pop
js
cs
jle
dec
mov
add
cltd
sbb
mov
sub
sahf
jno
push
jl
ljmp
xchg
es
icebp
mov
mov
sti
bound
aaa
shl
jnp
daa
jbe
sub
out
addr16
pop
dec
pop
mov
adc
cs
jmp
and
xor
out
cmpsl
mov
dec
add
push
mov
xchg
mov
pop
mov
pop
inc
cmp
rcr
xchg
pusha
add
dec
arpl
ror
jnp
jge
mov
pop
inc
mull
sub
repz
ljmp
cmp
mov
add
add
adc
dec
inc
push
call
push
add
sbb
push
ja
fucomip
cltd
mov
cmp
xchg
add
nop
dec
mov
sbb
adc
shll
lods
sub
adc
jecxz
fiadds
sub
or
mov
mov
ret
fnsave
fldl
lds
mov
rclb
sub
bound
sub
inc
filds
xorl
std
icebp
pop
adc
divl
movsb
popf
lret
imul
cli
imulb
into
or
pop
inc
push
jp
adcb
test
mov
xchg
cmp
lock
js
cmp
sub
cld
aam
ljmp
jae
or
jmp
add
push
cmp
push
inc
lret
nop
mov
imul
sbb
mov
out
repz
xor
or
mov
movsb
pop
mov
and
into
outsl
orl
jecxz
xchg
sub
mov
cmp
or
cmp
mov
cwtl
in
add
adc
fdivrl
add
orl
mov
aad
sub
and
pop
rcll
dec
inc
cmp
xchg
rsm
out
and
movsl
int3
pop
insl
or
mov
movsb
jne
cmpsb
push
dec
sub
sub
inc
shlb
leave
nop
push
insb
sub
movsb
ret
or
dec
rorl
insl
push
push
je
scas
rol
iret
adcb
insb
jecxz
imul
stos
sbb
in
insl
xor
sti
movsl
xchg
mov
pushf
mov
aad
pop
insl
das
int3
pop
fbld
fdivs
jae
scas
aas
pop
xchg
subb
mov
pop
xorw
fld
mov
je
push
sbb
shr
sarl
in
push
mov
jmp
std
in
add
lret
outsl
cmp
xchg
out
notl
xor
or
xor
push
push
fistl
les
jbe
adc
lahf
sbb
dec
and
sbbl
jne
jge
jne
out
imul
mov
test
adc
popa
cwtl
fsub
loopne
loope
sub
in
shll
and
xchg
xchg
outsl
mov
mov
push
leave
fwait
stos
ret
neg
mov
lahf
daa
std
mov
rcrl
fs
pushf
xchg
leave
jns
es
inc
push
daa
mov
call
adcl
xchg
sub
movsl
pop
push
xor
and
movsb
int3
mov
mov
lret
add
ss
pop
gs
sbb
jle
in
mov
ja
ret
push
jne
xchg
push
leave
sbb
lret
push
xor
test
data16
mov
add
daa
es
incl
cmpsl
xchg
jnp
xchg
mov
mov
in
dec
subl
scas
sbbl
mov
dec
cmpb
sub
fldl
mov
aas
aaa
add
pop
aas
inc
cmc
loope
dec
fisttpl
lcall
cmp
sbb
stos
jecxz
aas
xlat
mov
dec
dec
adc
insb
inc
test
fsubs
pop
mov
mov
inc
dec
lret
cmp
xchg
icebp
test
addr16
add
stos
aas
hlt
sbbb
stos
mov
ss
jae
inc
push
aaa
mov
push
xchg
and
xchg
ficoml
movb
mov
fcoml
sub
mov
push
mov
std
inc
xchg
imull
out
mov
rolb
sub
cs
aas
mov
repz
hlt
xor
in
test
fidivl
jge
fbld
push
inc
cld
mov
sub
inc
dec
icebp
aaa
jnp
in
lds
inc
xlat
jmp
xchg
mov
cs
pop
xchg
xor
out
xchg
and
adc
or
inc
jle
sti
add
or
mov
push
push
mov
rol
adc
cltd
xchg
dec
push
xchg
cmp
or
sbb
stos
dec
sbbl
pop
mov
mov
cmp
ljmp
lock
and
arpl
pop
gs
adc
icebp
test
rcrb
idivb
sub
cmpsl
ljmp
cli
push
add
push
fs
xor
test
fbstp
cwtl
ficompl
ds
jle
inc
dec
shrl
push
jp
js
pusha
and
ds
fcoml
jl
sub
mov
sbbb
or
das
nop
dec
jg
je
test
and
cltd
sub
mov
jb
cmp
xchg
and
sbb
or
aad
hlt
sub
sub
stos
jno
aas
jecxz
lods
sbbb
pop
sub
mov
xchg
popf
mov
mov
scas
sub
adc
xchg
loop
push
inc
xor
add
shl
pop
nop
add
jp
mov
shrb
cmp
or
sub
jp
mov
in
je
aas
sbb
mov
out
push
pop
in
popf
xlat
idivl
and
test
lret
jnp
test
dec
sbb
outsl
push
in
add
std
je
fsubrl
loopne
mov
imul
cwtl
jne
xor
jns
pop
js
push
jp
xchg
or
push
insb
push
push
sub
bound
and
and
popl
fneni(8087
ds
and
sbb
popa
rcrb
and
pop
dec
inc
addl
dec
inc
je
sub
call
ss
lock
pop
push
adc
repnz
mov
daa
imul
icebp
lahf
ret
inc
ret
lcall
repnz
sbb
cwtl
mov
sbb
es
aas
mov
inc
ss
outsl
xchg
mov
sahf
push
xchg
cmc
or
popf
aad
lret
sahf
jp
pusha
and
sbb
sbb
outsl
popa
inc
jg
jbe
hlt
pop
cs
stos
jg
push
loopne
das
icebp
iret
push
jae
adc
cmp
cmp
pop
fstp
popf
inc
adc
and
inc
and
mov
xor
fs
aaa
cs
cmp
int
loopne
xor
mov
daa
pop
enter
imul
lock
mov
jmp
jg
cmp
jle
sub
data16
jmp
cmp
test
fs
test
cmc
add
mov
and
cli
cmp
insl
aad
adc
push
mov
cwtl
arpl
insb
into
inc
xchg
in
hlt
daa
call
xchg
jg
js
sub
imul
and
mov
sbb
mov
mov
add
cmc
push
sbb
push
inc
outsb
std
push
int
sbb
or
test
ftst
inc
cmp
fnop
sub
dec
ja
inc
mov
xchg
dec
in
pop
arpl
mov
inc
cmp
add
call
dec
lret
push
and
and
mov
fsubrl
mov
notl
jg
stos
rcr
cwtl
pop
cs
insb
lahf
mov
into
arpl
mov
or
fcmove
in
loope
scas
pop
add
cmp
xchg
popf
sub
push
xor
shll
scas
aad
or
xor
test
lock
stos
push
cmp
or
pop
icebp
mov
adc
repnz
std
push
and
mov
cli
jb
mov
sbb
cmp
fwait
in
ljmp
lret
int3
add
and
fs
incl
mov
mov
cmpb
insl
test
dec
cmpsb
push
cli
pop
sbb
push
repz
loope
nop
adc
loope
xchg
mov
aad
rcl
in
test
sbb
jle
mov
outsb
mov
pop
jmp
rcrl
sub
gs
push
mov
stos
xchg
xor
int3
mov
and
and
aas
xor
cli
jbe
inc
imul
push
sarb
test
insb
daa
mov
push
enter
ficompl
dec
pop
outsl
out
inc
cmp
lahf
cmpsl
insl
call
fiadds
jns
in
test
push
movsb
call
sahf
mov
xor
adc
xor
int3
sbb
adc
ds
cmp
lret
pop
adc
and
pop
add
jno
adc
pop
and
lods
adc
flds
push
inc
inc
push
fcmovnb
sub
pop
mov
das
sub
out
cmpsb
xchg
inc
jne
pop
jns
push
sub
cmp
pop
mov
idivb
xor
sub
fcompl
lock
push
xor
mov
in
push
js
mov
ljmp
popa
xor
repz
adc
nop
movb
pop
mov
dec
imul
hlt
mov
jne
and
cltd
mov
icebp
mov
sbb
xlat
push
xlat
fcoml
in
stos
jns
xor
loop
mov
ror
int3
mov
push
out
sbb
jp
adc
or
cmpsl
dec
push
sbb
fidivrs
and
sub
or
adc
mov
sti
popf
cmpsb
jge
in
jecxz
pop
add
insb
xchg
leave
lahf
sub
push
orl
add
mov
sahf
mov
rolb
mov
inc
sbb
lahf
sarl
in
xchg
adc
lds
mov
mov
pop
icebp
outsb
sbb
test
insl
pop
push
js
xchg
cmp
sahf
mov
scas
icebp
pushf
stos
pop
inc
addr16
xlat
push
cmp
mov
push
dec
inc
repnz
sub
orb
dec
xchg
cmp
test
fildll
in
mov
imul
add
mov
icebp
outsw
push
test
adc
mov
sbb
jge
mov
pop
or
fwait
pop
stc
push
test
gs
inc
out
jmp
pushl
inc
xlat
sub
xchg
scas
les
icebp
pop
test
es
insl
mov
sqrtps
dec
inc
scas
adc
aas
enter
sbb
or
cld
xor
pop
or
xchg
mov
xor
jns
mov
ret
insl
push
push
xchg
repnz
mov
push
cmpsl
cli
xchg
decl
rcrl
aaa
mov
push
and
and
sbb
pop
fcomp
add
xchg
les
jmp
dec
imull
inc
push
and
cmpsl
mov
mov
cli
loopne
adc
test
push
jmp
mov
in
jo
sub
cltd
xor
lcall
test
daa
mov
cmc
sbb
push
or
testb
xchg
aaa
mov
adc
push
or
fcoml
or
add
jle
out
scas
pop
push
mov
mov
mov
add
dec
fists
or
fwait
lcall
cmpsb
stc
jns
push
hlt
addb
adc
dec
xchg
xchg
fwait
inc
stos
mov
or
cld
jbe
push
test
in
pop
sbb
mov
mov
lds
pusha
ret
fmuls
xor
dec
lcall
inc
mov
fldl
in
xchg
loopne
and
jge
mov
push
push
in
popa
std
cmp
adc
or
mov
insb
imul
sbb
gs
mov
xchg
adc
rclb
jo
mov
decl
xlat
addr16
lahf
mov
mov
cmp
jecxz
cmp
aad
cmp
sbb
stc
push
enter
adc
xorb
fiaddl
addb
sbb
lret
mull
jmp
push
repnz
mov
add
cmp
jb
adc
ret
mov
negl
stos
leave
int
cmc
out
mov
add
test
fbld
daa
fisubl
jo
aam
and
pop
test
bound
mull
mov
mov
call
sub
lret
jbe
xor
dec
loope
out
jns
xchg
outsb
in
add
jmp
cmp
inc
pop
adc
andb
mov
mov
dec
push
pop
push
test
in
les
je
popf
out
and
ficoml
adc
mov
xchg
dec
mov
repz
pop
and
insb
bound
cs
ret
jmp
xor
xor
mov
in
lahf
cmp
xor
imul
sbb
test
mov
pusha
xchg
mov
stc
pop
adcl
arpl
shlb
lcall
add
orw
sbb
and
sbb
aas
cmp
cmpsb
inc
loope
push
push
mov
inc
shrl
rcr
sbb
notb
push
jo
adc
call
xchg
test
jne
es
lahf
add
xchg
mov
push
test
pop
lahf
nop
insb
mov
mov
add
enter
add
imul
mov
sbb
ret
stos
or
imul
iret
pusha
andl
mov
mov
sbb
or
mov
inc
aam
or
decl
mov
in
cmp
pop
push
push
fs
adc
mov
cmpsl
mov
repnz
xor
test
les
and
push
fwait
add
jmp
popf
bound
pop
lds
cmp
stc
mov
push
xor
insl
add
sbb
aad
mov
test
inc
and
xor
jmp
ss
jl
push
hlt
sub
cs
xchg
clc
je
or
mov
cmpsb
fidivrs
inc
cmp
call
jbe
lea
sub
mov
adc
pop
xor
ljmp
jge
pop
lods
cs
push
cmpsb
or
jmp
mov
mov
sub
cli
loop
dec
js
push
inc
jecxz
fwait
add
or
jno
test
lds
xor
loop
jecxz
ljmp
leave
inc
jnp
pop
ds
cwtl
pushf
fsubrl
adc
cltd
daa
dec
pop
push
pop
pop
cmc
add
and
stc
sub
iret
data16
jo
xchg
pop
mul
jp,pt
push
dec
test
dec
or
dec
dec
imul
mov
frndint
mov
jns
popf
inc
push
sub
push
imul
pop
in
mov
fdivrs
xor
sbb
cmpsb
sub
sti
mov
jmp
cmp
mov
cmp
dec
daa
or
outsb
mov
hlt
notl
repz
scas
mov
and
outsl
data16
mov
sub
pushf
ja
fst
add
xlat
jmp
xchg
shll
out
aaa
jnp
push
jg
mov
jae
out
xchg
int3
jbe
iret
mov
xchg
push
xchg
lock
inc
xlat
aam
xor
push
sub
push
jns
insb
dec
and
pop
rcrb
shrl
jnp
bound
idivl
rcrl
dec
outsl
pop
clc
jbe
jns
mov
adc
dec
and
ret
repnz
popf
and
add
xchg
and
or
dec
cltd
xchg
hlt
shrb
clc
test
mov
out
les
call
mov
sub
jno
inc
xor
xor
push
xor
aam
sub
or
cmpsb
jmp
push
stos
mov
cmp
fistps
xchg
and
outsl
jl
pop
andl
andl
je
xchg
and
dec
call
mov
mov
or
mov
push
test
mov
sbb
mov
fs
adc
jmp
add
insl
outsl
mov
mov
rorb
and
mov
jmp
inc
jmp
xchg
pop
dec
popa
fstl
or
jno
xchg
mov
fmul
cld
aaa
or
sbb
xor
and
inc
mov
lcall
push
adc
push
mov
popa
sub
int
xlat
into
repnz
mov
aad
pop
imul
mov
fstpl
sbb
jecxz
pop
clc
cs
add
inc
movsb
ret
push
push
dec
in
and
dec
jns
and
pop
mov
mov
xchg
mov
jecxz
lea
ret
je
shr
repz
scas
mov
jno
pop
inc
shr
cmp
xchg
out
inc
xor
pop
negb
dec
arpl
orl
mov
test
xchg
push
out
hlt
add
mov
cmpsl
dec
or
jmp
hlt
cmp
sbb
xchg
jg
jns
lods
pop
andb
shl
adc
stos
jbe
arpl
pushl
mov
dec
pop
testl
stos
mov
jmp
test
inc
loopne
pop
flds
and
subl
loope
pop
dec
imul
lcall
imul
out
xchg
arpl
jnp
push
rcr
lret
insb
dec
call
dec
dec
xor
sahf
rcrl
sbb
xchg
in
lret
int3
notb
mov
outsl
mov
sbb
xor
std
aas
movsl
and
bound
lock
insl
leave
mov
xor
adc
pop
mov
lea
call
and
lahf
out
pop
es
popa
movsl
mov
jmp
mov
ret
pusha
lods
fdivl
push
xchg
mov
push
lods
cli
popf
cmp
dec
or
or
mov
adc
lods
mov
jg
fcoms
ljmp
cmpsb
sbb
or
xor
js
arpl
and
pop
sbb
mov
jno
jg
decb
xchg
and
loope
int
inc
fisubs
js
push
pop
pop
adc
cwtl
inc
xor
pop
jbe
inc
cmpxchg
call
aad
add
dec
cmp
push
pusha
into
sbb
cmp
dec
xor
in
dec
adc
imul
sbb
and
mov
dec
push
push
icebp
jmp
cmpsb
pop
sbb
dec
int
sarb
repz
mov
loopne
dec
mov
jnp
cmc
mov
pop
mov
adc
xchg
sub
scas
mov
jb
pop
jge
fucompp
add
ljmp
add
fimuls
xchg
mov
sbb
scas
or
xor
fsubl
sbb
xor
pop
das
into
adcl
cmp
mov
int3
push
int
stos
push
sbb
mov
ficomps
jno
sbb
mov
cmpsb
outsl
cmp
or
sbb
push
push
sti
cmp
pop
ffree
loop
sahf
mov
adc
xchg
es
shll
cmp
or
or
mov
iret
mov
xor
sbb
cmp
shrb
xchg
in
mov
fld
cmc
xor
pop
and
ds
stc
xchg
push
out
insb
aad
pop
sahf
ljmp
addb
or
jb
push
ja
or
test
jo
dec
pop
inc
mov
sti
repnz
mov
mov
add
ja
mov
and
mov
lds
mov
push
shl
mov
inc
enter
sahf
fwait
add
mov
adc
addr16
dec
fldenv
iret
add
mov
mov
mov
rcl
addr16
in
mov
fwait
negb
xchg
stos
sti
xchg
adc
xchg
mov
ret
imul
fadds
mov
jo
insl
test
icebp
arpl
and
adc
lock
aam
jno
push
dec
jbe
sti
rclb
cmp
out
fists
loop
sti
push
outsb
mov
je
adc
xchg
mov
lea
popa
aam
inc
inc
pop
lret
xchg
stc
xchg
div
adc
cs
ret
mov
mov
enter
push
mov
ds
rorl
rcrb
dec
sub
fistl
stos
mov
mov
add
mov
inc
dec
cmpsb
jp
mov
push
movsb
sti
push
aas
icebp
ds
sahf
cmpsb
icebp
cmpsl
ds
xchg
mov
adc
imul
push
lret
stc
aad
cmpl
adc
lock
cld
inc
mov
lcall
inc
pop
sub
pop
pushf
or
scas
jne
sub
cs
je
fistpl
icebp
add
push
lods
outsb
adc
dec
pop
push
cmp
mov
push
repnz
inc
cmp
and
mov
or
mov
cmpsb
in
lods
lcall
out
scas
in
pusha
xchg
pop
jle
lcall
or
iret
mov
inc
sub
lret
and
lcall
insl
cmp
negl
insl
nop
repz
iret
push
cwtl
dec
je
inc
push
ficompl
icebp
dec
scas
fisubrs
mov
popa
mov
push
mov
sbb
xchg
out
je
leave
dec
test
cmp
push
movsl
jo
push
mov
xchg
int3
cs
push
inc
mov
pop
shlb
sbb
rclb
cld
insb
mov
mov
sbb
add
xlat
test
shl
pop
iret
sub
fwait
popf
jmp
jno
sbb
insl
lds
mov
std
cltd
cli
xchg
add
adc
mov
xchg
pop
rcr
cwtl
pop
cmc
aas
scas
mov
repz
fiaddl
stos
aaa
aas
scas
pop
fwait
jne
arpl
mov
inc
test
or
cmp
sub
mov
sbb
push
adc
sahf
xchg
cmp
add
inc
xor
pushf
repnz
jae
fwait
lods
dec
into
add
mov
mov
adc
lea
push
pop
stos
sbb
mov
test
sbb
sub
mov
xchg
or
lcall
mov
rcrl
shrb
stos
je
lret
mov
lahf
orb
pop
mov
jnp
mov
mov
repz
cmpsl
push
jae
xchg
movsb
dec
sbb
jle
dec
mov
mov
clc
jg
scas
js
leave
pop
push
push
cmc
xchg
dec
loop
mov
push
test
or
mov
push
sahf
mov
popa
cwtl
or
std
or
mov
test
mov
xchg
cmpsl
lret
xchg
or
cmp
in
daa
add
adc
cmpsl
faddl
jge
or
sub
icebp
jo
mov
push
jle
stos
mov
aaa
xchg
push
sbb
lahf
loop
cmpsb
or
jno
xchg
jne
pop
rol
test
loopne
shll
dec
mov
outsb
push
js
xor
and
out
loop
pop
push
imul
push
mov
testl
and
push
inc
int
test
inc
mov
fsubr
fstps
aam
mov
push
or
or
xchg
loopne
add
or
cmp
xchg
outsb
imul
fidivs
cli
icebp
mov
idiv
xchg
cmp
push
dec
pop
fbstp
jmp
xor
outsb
push
push
div
stc
adc
mov
out
inc
push
cmp
insb
test
arpl
movl
pusha
cmp
movsl
repz
loop
out
adc
xchg
adcl
subl
lret
sub
cs
dec
inc
faddl
mov
into
loopne
mov
add
lcall
mov
lods
test
scas
frstor
xor
and
push
mov
xchg
mov
dec
loopne
jg
pushl
arpl
fcompl
adc
fisttps
dec
stos
pop
or
mov
add
out
ret
out
stos
dec
fnstcw
push
outsb
sarb
stos
mov
push
xor
sub
sbb
cld
sbb
sbb
xchg
xor
repz
scas
out
dec
popf
test
xor
push
sbbl
adc
push
ds
cmp
ljmp
xchg
dec
aam
xchg
push
lds
into
test
mov
repz
and
push
bt
push
push
out
jl
dec
repz
lahf
adc
in
add
sarb
push
inc
jno
mov
cmp
fsubrl
sub
push
and
and
ud2
add
pop
dec
or
push
mov
flds
das
ja
sbbl
sub
int3
inc
sub
aas
jp
push
dec
pop
or
fsubrl
and
movsl
sub
cmp
xor
mov
push
push
mov
sbb
mov
adcl
cs
xor
sbb
lods
in
inc
sub
cs
test
popa
push
pop
jne
inc
mov
xor
je
add
decb
dec
mov
aad
pop
sti
inc
enter
loopne
mov
jg
ret
das
adcb
mov
pop
mov
es
arpl
dec
or
jecxz
inc
in
ret
pop
xor
xchg
xchg
ret
imul
mov
jnp
fldcw
sub
adc
imul
sbb
cld
ret
or
fnstsw
aaa
jnp
test
divl
in
test
ret
lea
imul
leave
xor
push
or
sub
fbstp
add
jle
lods
mov
incw
addr16
adc
sbb
inc
popl
cmpl
fcom
aad
pandn
cli
push
xor
inc
shlb
jno
scas
xor
mov
mov
cwtl
fcoms
push
add
test
pusha
sbb
daa
test
and
jmp
sub
dec
test
or
adc
hlt
jae,pn
jge
sub
stc
pushl
jle
jno
es
shll
call
test
aas
leave
pop
cmpsb
cmp
push
mov
or
stos
test
or
scas
sub
xchg
mov
je
add
outsb
pop
clc
jns
adc
outsb
xchg
dec
ret
xor
mov
leave
ret
mov
cmc
sub
xor
add
inc
repnz
sub
and
ficoml
fwait
shrb
out
sbb
mov
xchg
dec
cs
out
inc
lods
adc
add
test
sbbl
int3
xor
inc
hlt
pop
push
daa
bound
ret
dec
jmp
dec
xor
out
dec
lods
mov
adc
pop
push
inc
sbb
add
push
push
push
mov
icebp
xchg
add
jb
sub
push
stc
cmp
pop
push
xchg
insl
mov
rolb
add
jecxz
aam
pusha
jo
adc
pusha
or
lret
fdiv
jo
mov
add
or
in
cmp
and
pop
out
jl
roll
adc
or
mov
testb
dec
xchg
sbb
adc
mov
adc
gs
insl
pop
add
fisubrs
imul
push
into
push
lret
and
push
sub
dec
and
fisubrs
hlt
rcl
sub
outsb
sub
add
loopne
lock
push
subb
inc
test
cmp
xlat
loopne
and
and
jns
sbb
fs
mov
imul
or
inc
mov
xchg
dec
xchg
sub
add
pop
es
cmp
push
mul
fistpll
stc
enter
jo
or
hlt
push
cmp
xor
cmpsl
movsb
xor
mov
stc
sbb
lahf
ss
outsl
bound
inc
mov
add
es
push
and
sub
ficoms
dec
sbb
dec
ret
outsb
dec
cmpsb
nop
std
aam
adc
dec
popfw
push
dec
leave
iret
mov
mov
xchg
mov
call
mov
adc
idivb
fs
call
mov
out
mov
int
push
or
fcoml
fcmovne
mov
pop
xor
arpl
mov
lcall
jns,pn
in
lret
mov
and
mov
xchg
jo
int
stc
push
cmpsl
pushf
daa
pop
mov
mov
lret
clc
dec
out
call
dec
loope
jle
or
into
inc
mov
loopne
das
outsb
push
dec
bound
sbb
in
iret
ret
outsb
std
jecxz
xchg
inc
es
je
out
iret
aad
jecxz
or
mov
sub
jbe
inc
arpl
push
icebp
mov
jmp
pop
popa
ret
add
jmp
sti
push
rclb
or
dec
cld
loopne
push
dec
and
push
push
adc
jae
aad
test
jnp
inc
call
mov
popa
je
pop
push
jno
jo
stc
mov
push
stos
adc
inc
pop
mov
lods
addr16
add
and
std
mov
icebp
sub
pop
and
cmpb
rcrb
repz
scas
lret
popf
xchg
inc
loopne
xchg
js
insb
cwtl
xor
aaa
test
cld
mov
cmpsb
lods
ljmp
shrl
sbb
mov
int3
test
fildl
and
mov
adc
and
sar
nop
fsubrl
push
ret
push
rcl
arpl
mov
mov
insl
int3
or
pop
pop
arpl
and
imul
mov
xor
int3
clc
pop
jae
lods
rcl
mov
mov
add
loop
ljmp
addr16
mov
cltd
dec
xchg
mov
insb
pop
sbb
shrb
mov
ljmp
jmp
pop
aas
and
add
jp
mov
dec
xchg
fisubs
and
jno
sbbl
in
data16
fimull
xchg
inc
es
inc
pop
or
mov
rcl
dec
push
cmpsb
and
xchg
and
mov
mov
mov
testb
aas
dec
imul
imul
addr16
cmp
mov
lods
inc
daa
ja
mov
shl
flds
pop
mov
into
gs
or
pop
imul
cmp
jg
pusha
out
ja
sbb
insb
out
popa
in
adc
mov
out
repz
add
outsb
jnp
mov
fisubrl
ljmp
test
xlat
push
das
adc
stos
lret
adc
add
repz
pop
sub
add
sub
enter
adc
add
add
test
setl
imul
rcll
repnz
stos
daa
push
xor
sbb
divb
std
jb
pop
push
lret
dec
push
inc
push
cmp
les
cmp
scas
roll
popa
xchg
xchg
sub
mov
adc
pop
cmc
push
push
pop
or
adc
mulb
add
sub
lods
lock
lret
sbb
daa
xchg
outsl
fmul
scas
pop
outsl
xor
icebp
adcl
jge
pop
sub
or
xchg
lock
fistl
mov
cmpsb
xchg
sahf
ret
stc
fmuls
jnp
pextrw
jo
fisubl
dec
xchg
shrb
pop
dec
pop
dec
push
pushf
push
pop
xor
jle
inc
add
xchg
dec
xor
out
mov
test
incl
sbb
cmp
jmp
sub
pop
imul
les
addb
xchg
sbb
adc
inc
add
mov
mov
mov
scas
imul
jno
shlb
cmp
sbb
xor
xchg
xchg
imul
into
stc
in
mov
sub
vorpd
jb
out
mov
mov
jecxz
or
rol
inc
aas
lahf
ficoml
cmp
stos
cmp
adc
imul
jge
xor
sub
push
xor
sbb
inc
into
fidivl
cs
add
cmp
imul
cmp
mov
pushf
lret
xor
nop
notb
jecxz
cmp
xchg
inc
and
and
in
push
mov
xchg
cld
adc
mov
inc
out
movsb
hlt
cmp
jmp
dec
cs
and
imul
jbe
adc
ds
xor
shlb
divb
int
xor
mov
idivb
pop
cmove
push
out
ljmp
jmp
cli
out
fs
cmp
imull
or
cmp
cmp
sub
mov
jnp
mov
fisubrl
push
jns
movsl
outsl
into
and
or
fstps
pop
stc
lea
cli
xor
clc
cmp
roll
lcall
adc
xchg
out
push
sub
out
push
lods
mov
push
setg
push
add
sub
cltd
inc
dec
movsb
nop
push
sbb
lea
add
add
pop
fs
int
mov
jb
mov
add
loop
cmp
stc
jp
add
stos
adc
int3
mov
dec
push
add
add
sub
inc
aam
popa
int
fdivrs
mov
inc
sbb
in
nop
mov
lahf
cmp
aas
bound
hlt
jp
push
push
mov
jp
mov
repnz
rclb
loopne
pop
xor
inc
inc
int3
sub
pop
aaa
mov
pop
inc
js
jbe
push
mov
ret
clc
sbb
arpl
in
lea
aaa
adc
push
addr16
testb
jle
dec
cmp
mov
stos
in
cmp
ret
jecxz
dec
addr16
jmp
mov
mov
jge
add
push
push
xor
test
scas
cmp
loope
and
call
fwait
lea
lock
div
add
fnstenv
inc
pushf
mov
sub
sub
or
fsubs
sub
enter
into
ja
sbb
out
inc
jbe
mov
mov
xor
fcomps
out
cmp
imul
mov
adc
add
mov
mov
mov
mov
mov
xchg
sahf
cmp
mov
cli
cwtl
or
inc
les
add
add
sti
leave
add
xor
xchg
mov
inc
push
int3
sub
mov
jmp
or
lds
fwait
test
push
jl
jecxz
test
flds
dec
fisttpll
xor
ja
stos
or
sbb
aas
push
push
push
scas
loopne
mov
test
sub
adc
sub
cmp
addr16
mov
pop
pop
cmp
xor
pusha
lods
xor
incl
popa
push
pop
lods
cmp
lret
gs
lea
mov
int
fistpll
pushf
orb
inc
js
sbb
out
jne
or
mov
push
push
cmp
lcall
or
cld
dec
test
sbb
sbbl
leave
jle
sbb
popa
push
rcll
int3
test
cli
jmp
and
sub
xor
popl
jne
adc
ud2
sbb
jge
xchg
and
sub
cmp
inc
pop
clc
push
mov
pop
cmpl
stos
aad
jp
cmp
cld
mov
lods
jne
out
adc
inc
cmp
ret
adc
cmp
dec
add
adcl
dec
sbb
out
into
popf
pop
jg
cwtl
push
adc
fwait
scas
scas
clc
gs
fistps
cli
xchg
mov
sbb
stc
inc
and
popf
cmp
mov
jae
or
add
push
sbb
push
and
movsb
scas
bnd
mov
mov
sbb
jae
dec
jo
adc
test
and
jo
aad
xchg
int3
sbb
sub
ja
jmp
add
ficomps
add
cmpsl
iret
sbb
pop
jo
ret
mov
fsubrl
xor
xchg
movsb
pushf
mov
push
jb
xchg
lods
aam
xchg
nop
dec
imul
popf
push
out
cwtl
pop
mov
cmc
iret
inc
mov
lret
loope
mov
out
mov
mov
leave
xor
in
test
outsb
test
fcmovnu
fs
shll
sarl
arpl
jg
jno
addr16
push
and
inc
popf
inc
loop
sbb
aad
cwtl
testb
pop
aas
fcomi
mov
addr16
mov
jns
rolb
shll
and
pop
add
push
int3
xorl
xchg
sbb
push
xchg
pop
cmp
movsb
xlat
xchg
or
movsb
sub
inc
sub
fucom
sub
int3
and
inc
jbe
mov
dec
rcrl
std
data16
insl
xlat
mov
push
lea
mov
mov
loope
dec
shrl
add
xchg
jmp
or
std
enter
fwait
push
test
into
mov
sub
mov
and
stos
shll
sub
push
or
mov
fisubs
mov
outsl
sbb
test
push
and
mov
inc
aad
loop
jg
and
or
sub
cmp
xor
aad
mov
stos
pop
jmp
fcoml
xchg
inc
or
push
mov
mov
pop
xchg
jno
inc
scas
mov
icebp
xchg
sub
inc
xchg
jge
out
vpunpcklqdq
or
jg
sub
jp
cmpsb
cs
arpl
mov
rorl
ds
push
xor
test
pop
roll
mov
adc
cwtl
inc
lcall
test
dec
repnz
insb
movsb
xchg
stos
push
xchg
hlt
sub
xchg
into
mov
sbb
je
ds
jmp
push
push
mov
jbe
and
mov
stc
shrl
push
xchg
inc
and
push
dec
mov
hlt
lahf
jmp
jno
test
in
xlat
leave
push
or
cs
icebp
mov
rclb
icebp
and
push
xchg
sarb
pop
xchg
std
enter
adc
pcmpeqb
cmp
test
adc
dec
test
ret
lods
xor
mov
jae
push
and
imul
outsb
inc
addl
lock
push
push
aam
fs
jp
mov
lret
es
adc
ss
clc
leave
stos
jbe
xchg
mov
in
clc
jp
and
jns
push
dec
dec
leave
shl
xchg
in
and
xchg
inc
mov
xchg
hlt
inc
push
ja
lock
cltd
mov
test
repnz
lret
decb
push
out
mov
sahf
push
cmpsl
xor
dec
add
gs
lods
cmc
dec
xor
fsubl
cltd
xlat
repnz
insb
movsb
mov
sub
test
aaa
inc
aad
ret
pop
dec
ret
mov
pushf
nop
xor
scas
ret
mov
xor
test
adc
inc
ljmp
push
xor
andb
push
sti
je
movsl
sbbl
sbb
sub
push
sub
inc
roll
inc
xchg
sub
cmp
dec
add
dec
or
ljmp
jge
inc
int3
and
movsb
stos
sbb
push
mov
and
pop
xchg
in
mov
xchg
adc
and
rolb
mov
clc
mov
jb
out
movsb
and
sbb
mov
rorb
push
or
mov
loopne
dec
jle
mov
leave
ss
push
xchg
data16
jecxz
jg
in
or
sbb
sub
std
daa
repnz
lds
xchg
or
mov
pop
stos
inc
movsl
xchg
pushl
in
outsl
add
hlt
fimuls
adc
bound
or
int
shll
popf
cmp
imull
lret
mov
cli
insb
adc
dec
dec
nop
xchg
add
jnp
jge
lret
cwtl
out
das
fdivp
sbb
sarb
mov
dec
add
cmp
mov
sbb
enter
pop
imul
scas
test
sahf
sbb
push
xlat
mov
jl
and
scas
dec
inc
pushf
test
stos
dec
int3
sub
or
ljmp
cs
jp
sbb
stc
std
or
in
outsb
sahf
bndldx
aad
int
jns
mov
pop
addb
sub
aaa
push
out
mov
xchg
dec
daa
dec
in
push
push
cmp
mov
insl
arpl
mov
xor
pop
or
aaa
inc
adc
out
dec
sbb
push
movsl
cmc
inc
sub
aam
push
fisubl
addr16
mov
jne
ljmp
pop
scas
push
xlat
or
jne
push
ret
stc
xor
inc
inc
cmp
or
sbb
pop
sbb
filds
shll
xchg
push
je
xor
inc
cltd
daa
dec
sahf
adc
test
sbb
xchg
mov
pop
mov
stc
mov
pushf
int
inc
sub
adc
ss
gs
fdivrl
mov
jb
jnp
xchg
cmp
jmp
clc
xor
pop
push
sub
pusha
push
cmc
dec
mov
mov
repz
subb
or
add
lods
insl
mulb
shr
adc
pop
inc
or
and
test
pusha
sahf
idiv
push
rorl
adc
xchg
jno
pop
jbe
int
clc
pop
ret
xchg
andb
ret
fisubl
xor
test
mov
xorl
mov
or
push
imul
imul
aaa
js
xchg
test
es
fs
scas
dec
es
and
sub
es
out
loopne
test
pop
cmpb
add
movsl
pop
mov
dec
push
or
stc
push
jge
dec
sahf
push
stos
cwtl
sbb
les
and
sbb
jae
imul
push
mov
es
aaa
inc
aad
push
pop
jle
aaa
push
outsb
pop
xlat
cld
dec
out
test
imull
xor
mov
in
sub
and
call
ret
movsl
mov
inc
sahf
sub
pop
test
lret
jbe
test
pop
pusha
bound
stos
insb
jecxz
mov
loopne
and
int3
xor
ljmp
cli
cmpl
push
lret
or
pop
sbb
and
rcrl
std
js
movsb
arpl
adc
add
fwait
sub
push
or
xchg
stos
adc
jecxz
dec
and
jne
loopne
sub
dec
jns
stc
rorb
aam
cmp
adc
sub
out
jl
sbb
daa
mov
jg
xchg
cmp
pop
push
cmp
sub
into
std
mulb
mov
out
sbb
imul
cmpsl
or
push
and
in
dec
aas
pop
mov
add
lret
lahf
or
xlat
lahf
int3
or
fmuls
sub
mov
repz
inc
out
mov
adc
sbb
mov
pop
iret
movb
fldl2e
lahf
outsb
lret
mov
mov
inc
hlt
pop
cmp
push
xor
stos
out
xchg
loopne
mov
bound
mov
fwait
push
mov
xor
loope
rclb
and
loop
cltd
enter
jl
stos
add
mov
and
inc
ds
dec
adc
inc
das
mov
add
int3
imul
into
or
test
addb
xor
xchg
xlat
loop
shll
push
mov
enter
test
fnstsw
dec
movd
xchg
sub
movsb
in
mov
out
adc
and
bound
sbb
dec
imul
pop
test
sbb
add
stc
mov
or
push
pop
clc
inc
mov
sarl
mov
test
enter
sub
aaa
sub
mov
rcrb
fcompl
inc
movsb
dec
sbb
outsb
mov
sar
and
movsl
popf
mov
xchg
lds
push
ja
scas
add
xor
nop
jno
xchg
aad
cmp
push
push
movsl
aam
inc
mov
nop
loopne
insl
jne
cmp
sbb
dec
inc
xchg
hlt
dec
fimull
mov
mov
scas
inc
js
call
stos
int3
add
adc
leave
stc
loopne
mov
fcom
jecxz
mov
add
scas
add
jp
sbb
lock
inc
or
imul
sbb
testb
call
mov
sbb
jmp
xchg
imul
bound
insl
les
dec
cltd
insb
sub
stos
ljmp
dec
cmp
stc
arpl
ret
sub
jmp
xlat
push
pop
imul
aaa
mov
pop
scas
mov
sbb
loope
xor
popa
push
add
add
in
pop
push
push
stc
jmp
push
push
pop
sbb
pop
and
in
jae
in
cs
mov
jo
inc
repz
iret
fwait
mov
repz
pop
stos
fwait
push
js
mov
cmp
xchg
sub
not
adc
push
stos
addl
push
fdiv
hlt
movsl
subl
fisttpl
shlb
repz
lock
xor
push
mov
mov
xchg
js
cli
mov
xchg
popf
vorps
lea
sahf
lcall
sahf
sarl
mov
scas
lods
sbb
dec
inc
ret
cmp
nop
pop
inc
mov
incb
mov
mov
and
sub
mov
lahf
test
lods
out
inc
inc
push
jp
cmp
and
stos
xor
jno
loop
cs
dec
mov
sbb
das
or
add
and
jne
jns
stc
aad
or
popa
sbb
mov
lods
addb
or
mov
fsubrl
mov
popf
loop
out
pop
nop
imul
loop
add
es
jg
fisttpll
ja
daa
mov
pop
in
pop
or
mov
xor
push
sbb
call
loop
insl
jno
mov
lods
or
inc
jle
aas
test
push
sub
lds
addl
in
fimull
sub
out
push
mov
leave
adc
push
aad
fcompl
inc
shl
into
pop
in
lock
inc
cmp
lock
inc
mov
call
inc
mov
out
inc
repz
push
pop
sti
xchg
push
adc
enter
xchg
out
ret
outsl
add
cmp
cmp
sub
and
pop
bound
ss
lcall
xchg
pop
adc
jb
mov
sbbb
scas
cmp
aaa
xor
jge
inc
add
fisttpl
idiv
pushf
mov
sub
sbb
rclb
js
stos
ds
jmp
cmp
xchg
orl
pop
cmp
shll
icebp
or
mov
cmp
dec
pop
or
or
xchg
dec
fwait
jp
fwait
nop
ret
mov
pop
cli
leave
dec
decb
aas
pop
movsb
orb
push
add
mov
out
movsl
push
shrb
xchg
insl
fwait
loop
sbb
jb
aas
inc
test
fcoms
xchg
or
cli
adc
jle
clc
dec
sarb
sti
and
negl
pop
pop
das
push
jp
insl
bound
fwait
adc
mov
decb
aaa
inc
xor
jo
sbb
xchg
idivb
mov
loopne
je
cmp
dec
cwtl
and
std
mov
cwtl
lods
jb
jno
dec
and
jmp
and
lret
dec
mov
push
popf
dec
fisubrs
movsl
jnp
mov
mov
lea
fsub
mov
cmp
es
fildll
out
scas
or
mov
xor
sbb
mov
pop
adc
jne
sub
mov
and
sti
pop
arpl
sub
sti
xor
or
lahf
mov
add
push
mov
dec
outsb
push
cmp
cli
add
mov
fnstcw
andl
rorb
jo
sahf
cld
lret
fcmovnbe
mov
inc
cs
jge
adc
mov
cmc
mov
cltd
xchg
jge
rolb
rcr
inc
cmp
sub
mov
cmpsb
and
and
das
jnp
lahf
or
pop
loop
sbb
loope
in
pop
adc
lea
cwtl
xor
cmp
cltd
ljmp
pop
pop
aas
or
jo
aad
repz
lret
ret
push
and
fnsave
pop
cmp
aaa
insb
or
xlat
pop
lea
into
or
jno
flds
mov
adc
inc
xchg
pop
add
test
or
out
jbe
lcall
xor
ljmp
cld
in
push
mov
sbb
dec
fistps
scas
clc
adc
mov
js
or
mov
mov
adc
mov
les
mov
aad
xor
outsl
xchg
add
adc
sti
fisttps
mov
or
mov
icebp
or
mov
fisubl
movsl
mov
cmp
stos
push
fdivp
rcr
outsl
dec
cmc
dec
mov
cmp
aas
and
jg
jmp
roll
das
movsl
mov
add
pop
mov
xchg
xlat
mov
lret
sbb
es
imul
push
push
lods
cmpsl
xchg
xchg
pop
aaa
pop
jl
ret
sub
cmp
jmp
jne
outsb
jle
adc
outsb
out
pop
push
leave
cmpsl
fidivrs
or
mov
xlat
xchg
jns
sub
andl
jle
aad
js
pop
dec
adc
xchg
scas
filds
xlat
jecxz
xor
subb
push
in
mov
je
loop
ja
cmc
shlb
sbb
jbe
xchg
mov
sub
jo
aad
int
mov
mov
sub
jo
xlat
mov
and
gs
cmp
inc
mov
sub
mov
imul
sbb
cmp
fsubrs
cli
and
out
mov
cmc
daa
ret
xchg
adc
fmuls
pop
jb
adc
add
mov
lods
and
cwtl
sti
mov
aaa
hlt
pop
and
cmpsl
mov
sarl
xor
and
jb
or
sti
sahf
lcall
shll
push
dec
sub
cmc
mov
lret
repz
test
jmp
pop
sub
mov
pop
mov
mov
cld
mov
sub
js
out
div
rcrl
push
rcll
mov
pushf
push
and
fsubl
fistpl
or
or
cld
scas
mov
dec
in
mov
leave
or
and
pop
add
or
sub
sahf
jae
aam
jmp
jne
sub
jo
jp
lret
inc
or
lods
mov
sbb
xchg
cld
aam
fbld
inc
cmpsl
adcl
test
bound
and
push
mov
out
mov
xchg
inc
cmp
cmp
jns
aas
insb
in
xor
sub
cmp
cmp
mov
xchg
iret
ljmp
imul
out
nop
mov
fsub
aas
nop
add
leave
push
in
in
bound
mov
and
and
pushf
filds
xor
movsl
das
movsb
fldt
inc
imul
movsb
popf
add
cmp
movsb
push
in
inc
mov
loope
ljmp
imul
ds
mov
add
outsl
sbb
pop
mov
ss
mov
mov
pusha
andl
insb
cs
dec
or
iret
daa
loope
stos
xchg
cmc
fsubs
xlat
push
in
xchg
out
ljmp
push
mov
jmp
mov
inc
push
das
repz
and
mulps
out
shrl
cld
mov
push
dec
mov
data16
js
cmp
mov
adc
stos
cmp
inc
xchg
subb
fildl
xor
insl
inc
inc
aaa
js
rcr
dec
dec
ja
mov
mov
dec
add
pop
std
mov
mov
in
pop
push
xchg
ds
and
in
fcomp
pop
lea
add
shll
mov
aas
jmp
stos
mov
fsubrs
pop
insl
pusha
lcall
or
jo
loopne
outsb
fimuls
icebp
leave
lods
cli
jns
xchg
mov
jecxz
insl
lss
lahf
sbb
push
iret
sarb
push
std
adc
leave
mov
push
and
mov
loop
lret
cltd
and
fcomps
cwtl
push
incl
pop
fcoms
sub
stos
push
cmp
inc
pop
adc
mov
lret
mov
adc
sbb
push
cmp
test
and
pop
push
fidivrl
dec
cmp
js
xor
je
aaa
inc
mov
fs
lods
lds
jns
mov
rcrb
insl
rol
mov
mov
dec
adc
xchg
adcb
mov
mov
lds
xchg
pusha
add
push
lahf
and
pop
data16
test
mov
stos
movsl
ret
loop
in
pushf
cmpsl
pop
les
xor
jge
or
mov
mov
mulb
fadd
pop
fcompl
insb
xor
jg
push
gs
cmp
jne
fwait
adc
mov
rcl
cmp
call
xor
repz
int3
rcll
jmp
jl
inc
daa
out
shlb
push
icebp
jne
inc
fcmovbe
imul
cmp
dec
xor
sub
nop
idiv
ja
mov
dec
loope
lret
idiv
icebp
sub
pop
sbb
sub
lods
and
lods
push
testb
rolb
out
lods
and
push
stos
fwait
aad
cmp
jne
or
mov
decb
mov
sbb
nop
xor
inc
push
out
pop
inc
inc
repz
ret
or
or
fistps
inc
movsb
mov
lods
xor
mov
jecxz
push
subl
stos
cmp
fcomps
dec
stc
mov
sub
movsb
aaa
lock
sub
je
insb
aaa
mov
or
sub
aam
in
sub
imulb
sbb
cwtl
aaa
das
xor
hlt
mov
pop
lock
and
sbb
cmpb
test
cld
or
sbb
arpl
add
inc
sbb
fwait
mov
push
mov
int
push
aas
cmp
xlat
inc
or
cld
xchg
jne
adc
fmull
inc
stos
sub
cltd
rcrl
rep
adc
fidivrl
add
lcall
dec
pop
add
xchg
add
xchg
scas
push
movsl
mov
arpl
jnp
cmp
scas
mov
frstor
divl
cmp
test
mov
mov
aaa
adcw
sahf
mov
cmpl
xchg
sub
rorb
das
clc
xchg
loope
cmpsl
sub
jb
ss
adc
scas
testl
cmp
sub
dec
imul
jne
loope
inc
and
stos
outsb
popf
imul
cmpsb
push
push
popf
fs
lods
or
mov
add
iret
cmp
adc
dec
out
adc
loope
xlat
push
movsl
cmpsl
loope
icebp
movsb
loope
mov
dec
sub
mov
xchg
sub
pop
inc
dec
insb
mov
push
xchg
shr
cmp
xor
inc
xchg
sbb
sub
subb
mov
inc
mov
jmp
inc
xchg
or
and
sub
sub
cli
jecxz
sub
data16
stos
scas
dec
jae
popf
sub
aaa
out
or
mov
orl
outsl
and
repnz
and
pop
adc
lea
push
insb
cmp
or
xlat
movsb
repz
dec
adc
pop
and
fisttpll
jo
xchg
test
loope
push
xor
icebp
pop
test
add
dec
lea
fildl
xor
scas
int
xor
icebp
lods
aaa
test
jmp
jae
mov
xor
stos
sbb
ds
jp
repz
xor
cmpsb
movsb
fs
lret
mov
aad
jle
int3
cmp
cmpsb
dec
push
insl
dec
jne
inc
std
mov
sbb
ret
cmp
mov
pop
adc
lea
ficoms
aas
test
rclb
les
adc
out
notb
push
pushf
mov
test
jmp
mov
test
aas
aam
xchg
push
aaa
dec
add
in
add
dec
dec
mov
sbb
dec
outsl
das
add
in
jns
jne
cwtl
jp
dec
dec
mov
push
lahf
stos
inc
add
incb
push
ljmp
sub
jmp
xchg
jmp
jp
xchg
sub
and
or
out
or
add
dec
fdivs
in
leave
xchg
mov
push
sbb
in
dec
pusha
imul
dec
movsb
jecxz
jp
sbb
in
scas
xchg
xchg
pop
jmp
and
lods
imul
add
push
inc
inc
xor
jg
mov
sbb
inc
stos
cwtl
inc
das
dec
jl
adc
in
or
mov
mov
outsb
mov
fst
mov
pop
xor
cwtl
mov
fwait
xchg
test
mov
mov
jl
arpl
lret
xor
mov
test
rolb
xchg
dec
push
cmc
pop
pop
and
mov
cs
lods
rcll
stos
arpl
adc
or
icebp
add
xor
mov
pop
aas
jge
mov
negb
adc
jle
test
mov
loop
hlt
je
lea
addr16
jmp
fdiv
inc
aad
mov
jno
subb
lcall
sbb
sbb
and
cmovns
pop
dec
pop
cli
mov
pop
in
xor
leave
xchg
int3
mov
dec
inc
aam
lahf
dec
lods
ja
sbb
mov
insb
lods
jmp
xchg
adcl
xor
mov
daa
sub
xor
test
sahf
or
movsl
int3
jbe
pop
xchg
xor
mov
es
push
stos
add
icebp
stc
push
das
subb
pop
push
jbe
xorl
popa
out
xchg
inc
fcomp
push
outsb
pop
sbb
imul
cwtl
add
arpl
lahf
inc
mov
and
loopne
mov
adcb
mov
or
shl
out
push
mov
repnz
sbbl
stc
mov
jecxz
test
or
test
jno
imul
push
js
and
adc
mov
out
loopne
dec
data16
iret
test
lods
rcrb
inc
stos
adc
jnp
push
in
mov
cmp
ljmp
iret
ret
insl
mov
iret
out
jbe
iret
clc
jmp
push
mov
cmc
mov
xchg
jle
ljmp
test
adc
sbb
mov
sub
aaa
stos
test
mov
xor
cli
pop
lods
scas
jnp
mov
inc
pop
insb
vmwrite
jae
fs
fldenv
nop
cmp
sbb
rcrb
adc
mov
add
out
mov
mov
std
xchg
pop
stc
push
mov
das
fnstenv
pop
daa
jno
mov
imul
addr16
and
mov
popf
inc
or
popf
cmpl
dec
mov
dec
sub
je
sub
mov
sbb
jne
testl
sarb
std
cmp
jnp
ja
cmpsb
aaa
outsl
je
sub
lea
cmp
or
rorb
lret
push
fadd
lahf
outsl
mov
sub
dec
cld
mov
outsl
dec
dec
lock
jle
lcall
mov
mov
mov
cmp
scas
movsl
dec
pop
pop
and
test
fcomps
push
jmp
xchg
jle
fmuls
lea
xchg
int3
or
das
lret
ret
or
cmp
inc
repz
xchg
sti
inc
bound
lahf
fisubs
jbe
insl
lcall
push
or
imul
mov
into
imul
or
ljmp
cmp
xor
neg
insl
std
lcall
addr16
xor
cwtl
movb
cltd
imul
add
adc
jnp
fcoms
dec
lea
cwtl
shrl
cwtl
xchg
sbbl
scas
jno
pop
push
mov
jge
stc
push
pop
das
subb
or
out
mov
outsl
cmpsb
mov
jnp
imul
xchg
mov
jb
ror
fcmovu
jg
sub
xchg
and
inc
test
dec
jmp
sub
lea
sti
icebp
dec
out
pop
jge
je
hlt
sysret
aam
call
jecxz
mov
mov
or
jbe
lea
outsb
jne
stos
pop
add
ss
call
out
rcrb
pop
out
test
mov
mov
mov
loope
out
repz
pop
xchg
in
push
push
add
lea
aam
test
dec
lcall
and
adc
or
hlt
pop
jb
mov
jmp
out
cltd
sbbl
cmp
enter
mov
cli
inc
dec
push
sbb
mov
hlt
negb
lcall
push
xor
aam
mov
jg
lock
iret
in
cmp
jmp
in
adcl
add
lahf
mov
das
adc
push
leave
jle
int
sub
adc
call
mov
or
cmpl
mov
xor
out
ja
cmp
aad
mov
push
xor
jge
pop
and
cmpsl
push
test
std
lods
int
sub
adc
movsb
out
call
xchg
pushf
out
add
adc
push
orb
dec
out
adc
xor
dec
add
aaa
rcll
fld
scas
test
push
mov
int
mov
sub
fcoms
fsts
xchg
mov
imul
jecxz
addr16
cmc
aaa
cld
es
lock
mov
pop
cwtl
mov
sub
dec
pop
or
pop
clc
int
adc
aam
lahf
lds
mov
jae
cmp
xor
rorb
xor
lods
push
clc
and
fwait
inc
gs
inc
pop
dec
cwtl
roll
sbb
xchg
shr
hlt
lret
out
shlb
out
lahf
push
sbb
pop
push
dec
leave
add
clc
lret
sub
fbld
push
fucom
push
cs
lods
push
mov
push
daa
xlat
out
ljmp
inc
or
xchg
andb
sub
lods
ja
popa
jecxz
inc
fsubrs
and
loop
xchg
stc
pop
aam
sub
loope
jmp
jl
cmp
fnstsw
out
in
adc
push
clc
pop
sbb
dec
and
inc
mov
push
jp
sbb
test
xor
xchg
jmp
push
test
sub
dec
pop
mov
fs
and
xor
pop
test
jp
xchg
mov
and
rorl
leave
iret
and
mov
insb
jg
leave
movsb
movsb
ljmp
mov
add
fcompl
stos
pop
out
fs
push
fisubs
add
sbb
pop
pop
scas
pusha
xor
inc
xchg
jp
pop
sbb
xor
iret
call
test
inc
sbb
loopne
jp
xlat
inc
fwait
mov
add
iret
lahf
xchg
inc
lods
or
outsl
sub
adc
sub
std
pop
cld
add
push
in
enter
jp
lods
ficoms
xchg
xor
jle
imul
add
jl
xor
fidivrl
stc
dec
movsb
sub
cmp
popa
jp
and
pop
movsl
inc
mov
cmp
pop
into
addb
icebp
or
cmpsl
and
repz
add
push
cli
je
sbb
cs
mov
xchg
jae
ret
ljmp
add
cmp
xchg
or
cltd
sub
mov
push
mov
gs
cs
xchg
iret
stc
adc
mov
mov
inc
sub
aas
xchg
sub
jo
fwait
push
and
ljmp
pop
rcrb
in
cs
xchg
mov
and
mov
mov
cmc
stos
xor
out
frstor
or
movsb
dec
pusha
jecxz
aaa
mov
and
es
pop
xchg
mov
fadd
aad
imul
loopne
sub
pop
lods
popf
inc
mov
cld
sbb
add
rcl
jge
dec
add
mov
sub
mov
aam
pusha
sub
out
lret
std
lds
push
pop
out
loopne
std
std
adc
mov
stos
aad
aaa
pop
sbb
ret
adc
lods
fdivp
leave
mov
std
jmp
adc
xchg
shrb
xchg
fisttps
in
mov
lret
xchg
mov
mov
mov
jle
xor
xor
movnti
orb
outsb
inc
dec
pop
mov
xor
sti
mov
mov
sub
push
add
popf
lret
sbb
and
mov
push
scas
push
cmc
lret
clc
lahf
mov
inc
or
pop
add
push
stc
es
test
push
call
ret
out
js
dec
mov
mov
scas
dec
push
mov
cmp
rclb
rolb
ret
imul
mov
scas
inc
hlt
js
mov
in
addl
push
jne
popa
jp
fsubl
daa
popa
insb
inc
stos
gs
jle
ds
rcrb
push
add
subb
lods
mov
sahf
add
jmp
xor
lcall
cli
add
sbb
mov
leave
mov
adc
mov
jmp
inc
insb
and
arpl
lods
shrb
sub
ret
add
out
xor
js
xorl
inc
rorl
sub
inc
xchg
push
mov
push
lret
enter
pop
pop
ret
cmp
lods
scas
push
lcall
int3
pop
aam
mov
decb
js
int
xor
sbb
movsb
movsl
adc
sub
les
rcr
js
xlat
js
inc
xlat
mov
loopne
mov
ds
xor
imul
push
or
xor
xor
mov
imull
test
shl
out
sahf
lock
scas
in
and
icebp
lcall
adc
jo
stos
sub
insb
in
lahf
push
stc
sub
stos
xchg
cmpsl
iret
sbb
data16
js
int3
and
cli
lret
mov
cmp
mov
dec
mov
push
icebp
inc
aas
test
insl
adc
jnp
add
jb
test
cli
dec
push
in
sbb
addr16
in
mov
push
mov
mov
xor
adc
jnp
adc
mov
leave
xor
cli
xor
in
stos
shll
push
dec
sub
dec
repz
out
inc
xchg
imul
and
xchg
xlat
and
aas
jmp
sub
or
int
mov
test
jnp
cmp
cwtl
push
movsl
jbe
inc
pop
insl
enter
mov
mov
and
movsl
or
add
jg
fildll
xchg
subb
push
test
out
sbb
dec
mov
lock
in
andl
cmc
push
and
adc
adc
divl
jae
xchg
mov
pushw
fldl
and
mov
inc
xor
test
lock
aam
xchg
ficoms
jl
int3
repz
gs
ret
adc
dec
pop
and
sti
inc
xchg
imul
lods
int3
cmp
je
add
stos
outsb
lods
xlat
push
lret
adc
jae
push
pop
mov
pop
inc
jp
xchg
lcall
mov
daa
push
xacquire
or
lods
or
cltd
xor
test
imul
mov
pop
arpl
and
dec
bound
jns
xchg
inc
cli
mov
aad
cmp
fwait
add
xor
arpl
hlt
sbb
iret
test
clc
lea
rclb
cmpb
add
push
popf
testb
jnp
xchg
cmp
orb
ljmp
mov
sub
test
cmp
push
ret
bnd
cmp
mov
ss
leave
les
jnp
in
scas
test
adc
inc
add
nop
andb
cli
xchg
lret
xchg
in
cld
xor
inc
sbb
leave
or
aas
lret
dec
mov
adc
lods
xchg
xor
push
in
lahf
add
xchg
int
loop
aam
push
or
stos
divl
pop
pop
and
mov
stos
into
add
bswap
mov
out
lea
out
push
push
outsb
or
fisubs
popf
in
sti
popf
xchg
push
lea
out
and
movsl
add
sahf
add
cli
xor
jmp
pop
xor
ret
jmp
pop
mov
lret
xchg
pop
mov
cmp
mov
xchg
sub
clc
lods
ret
movsl
push
movsl
adcl
lahf
lcall
mov
xorl
enter
sub
mov
xchg
icebp
daa
hlt
jae
xor
sub
stos
jno
outsb
pusha
popa
cmpsl
loope
les
and
xor
jb
std
push
jo
cwtl
cmpsl
xor
test
lock
lahf
or
mov
mov
je
mov
aaa
jp
je
jae
xchg
test
test
sahf
dec
adc
push
sub
lds
lods
cltd
movsb
xor
aad
pop
cld
rcrl
insb
or
or
xchg
and
and
lahf
scas
out
xchg
and
push
in
mov
cmp
lock
insb
sbb
sahf
test
nop
cmp
push
pop
and
push
insb
xchg
inc
or
lds
add
dec
fistps
je
mov
push
or
shr
sbb
jo
xchg
mov
sahf
mov
xor
bnd
enter
iret
shl
or
inc
shl
mov
sbb
fs
add
fisubs
xchg
insb
sahf
fs
mov
fadd
shll
jb
outsb
xor
les
inc
aaa
loop
arpl
jno
aas
xor
ss
aad
fisttpl
inc
and
out
mov
mov
jno
sahf
dec
add
es
jo
or
cmpsb
nop
or
nop
push
repz
xchg
add
cmpl
xor
xchg
cmpsl
sub
fnstenv
jmp
decb
add
jno
mov
repz
xchg
outsb
stos
iret
add
cmp
js
pop
push
les
push
fcmovnb
test
xchg
clc
sbb
les
sub
fstps
mov
or
mov
clc
dec
xor
outsb
inc
sub
xor
sbb
jle
repnz
aam
and
mov
add
adc
xor
mov
mov
ret
add
jg
xchg
push
popl
outsl
add
lds
sti
jo
xor
aam
pop
dec
scas
stos
popa
das
dec
stc
mov
push
out
int3
lret
gs
add
pop
lods
add
fwait
loopne
mov
into
or
dec
xchg
sbbb
push
and
call
xlat
stos
or
dec
je
push
sahf
cwtl
mov
test
inc
lods
sbb
mov
or
lods
enter
jne
mov
jno
xlat
fldenv
sahf
add
imul
mov
jae
cmp
and
push
clc
addb
xor
mov
scas
jnp
mov
pop
pop
sub
pop
sub
mov
xor
pop
add
pop
mov
mov
jne
negl
das
xchg
cmp
add
ja
in
jno
and
jg
jo
sbb
add
push
movsl
add
lcall
ss
cmpb
scas
lock
push
fwait
pop
sub
rcrl
inc
jb
push
popf
or
cli
jle
ret
pop
call
popa
mov
fwait
dec
add
dec
in
dec
es
flds
outsb
push
cmp
cmp
fildl
aas
lahf
gs
add
repz
pop
in
push
mov
push
ja
xchg
pop
mov
mov
sti
imull
push
nop
loopne
fists
ret
les
or
jae
stos
inc
sbb
popa
mov
add
ret
imul
inc
fildll
push
or
dec
adc
jne
loopne
and
hlt
cwtl
dec
loope
xchg
imul
test
cmpsl
mov
daa
jns
cmp
add
fisubrs
inc
mov
mov
insb
inc
mov
imul
or
mov
or
pop
aad
or
mov
test
fs
xchg
jge
loopne
es
test
pminub
push
mov
cwtl
loopne
shlb
lods
orb
pop
mov
add
lock
movsl
scas
dec
lock
pop
fucomip
jge
xor
test
adc
iret
fbstp
aas
cs
sub
cltd
jae
popf
shl
adc
cld
add
add
and
xor
gs
fldln2
pop
xchg
xchg
inc
js
adc
xchg
mov
push
in
pop
mov
rdtsc
sub
sub
xchg
mov
lahf
std
ja
jl
adc
push
push
movq
les
inc
sub
notl
out
push
inc
aas
fisubrs
fs
aad
xchg
dec
lods
mov
and
gs
jbe
and
mov
lods
popf
push
outsb
xor
test
cmp
push
push
add
cmp
pushl
addr16
nop
enter
out
xchg
js
in
out
popf
sbb
fs
or
jnp
inc
popf
stc
icebp
mov
cmp
mov
mov
aas
loopne
pop
faddp
push
xor
imul
lcall
lret
clc
leave
out
cmp
addr16
sbb
aam
cs
test
test
mov
push
mov
and
sahf
mov
jg
pop
lahf
loopne
xlat
pop
sub
fnsave
jno
pop
lahf
and
xchg
in
xrelease
mov
aad
sti
sbb
cli
adc
mov
int
adc
push
xor
dec
out
xorl
push
push
cmpsl
pop
inc
movsl
dec
xor
push
rolb
and
sub
sbb
inc
or
sbb
push
sub
fnstenv
inc
push
and
pop
pop
cmpsl
lahf
xor
scas
test
out
mov
faddl
jo
js
push
scas
ficoml
push
cmpsl
jl
rclb
aad
fnstcw
imul
or
lcall
or
incb
mov
out
insl
cmp
mov
mov
movsb
sub
pop
add
mov
mov
xor
pop
adc
mov
dec
add
xchg
inc
dec
aaa
mov
addr16
scas
push
mov
jo
clc
lret
cmp
pushf
mov
push
addb
adc
mov
adc
or
lahf
dec
jle
fildl
mov
addr16
cld
push
ficompl
pop
cli
in
bound
out
cmp
inc
in
add
xor
pop
or
add
fldenv
or
and
stos
mov
and
xor
cs
sarb
sub
nop
hlt
push
add
jno
push
in
pushf
sahf
int3
sub
add
push
adc
ret
sarb
mov
mov
xlat
inc
push
in
push
dec
pop
cli
adc
mov
outsb
divl
push
cmp
pop
add
jno
imul
push
mov
xlat
and
movsb
loopne
pop
cld
push
aad
das
stos
mov
and
pushf
movsb
xchg
jle
mov
popa
fstl
fisubrl
xor
jl
fdivl
adc
sbb
sahf
ror
hlt
mov
idivb
fcomps
add
mov
stos
out
xor
inc
sbbl
push
mov
push
idivb
ds
lahf
xchg
addl
cmp
and
sarl
jbe
or
or
mov
lea
sarl
je
dec
fdiv
int
in
rclb
movsl
mov
dec
lcall
cwtl
cld
mov
out
jle
lret
pop
adc
mov
movsl
bound
pop
inc
daa
loope
lret
mov
arpl
push
add
push
lahf
and
adcb
mov
cmp
repnz
jmp
or
sbb
and
sbb
mov
add
cmpsb
mov
cmp
dec
mov
cmovo
imul
ds
mov
popf
push
in
into
ss
shll
mov
jbe
sarb
xor
out
xchg
movsl
lea
pop
scas
roll
lret
add
daa
pop
or
mov
add
xor
testb
mov
lock
xor
mov
cmp
in
in
mov
mov
std
fwait
inc
pushaw
push
icebp
stos
repnz
popf
arpl
inc
jmp
dec
pop
jne
and
and
mov
fs
scas
movsl
inc
mov
push
mov
inc
nop
xchg
lcall
cmp
pop
lahf
clc
add
jno
shll
jns
cmpb
test
test
rclb
push
cltd
mov
mov
xchg
les
cmp
sub
jns
xor
in
jmp
adc
cmp
mov
push
out
add
popf
aas
jnp
mov
cltd
cmp
push
pushf
aad
pop
lret
loop
jae,pn
in
mov
rorb
fnsave
fwait
repnz
leave
gs
sub
decl
movsl
out
out
push
push
rcrl
std
sti
sub
mov
pop
sub
imul
and
testb
mov
fnstsw
daa
jns
cmpsl
into
repnz
xor
cmp
mov
jno
cs
and
das
jg
addr16
dec
mov
xor
orb
stos
cmpl
pop
mov
add
jmp
out
lods
jg
jno
or
insb
xor
mov
dec
pop
lret
hlt
adc
mov
inc
int
pop
inc
sub
orl
mov
jne
negb
int3
sbb
mov
imul
mov
scas
or
sub
dec
mulb
dec
mov
cmp
dec
push
add
out
dec
aas
adc
inc
out
cmp
add
movsb
rorl
mov
add
push
adc
insl
dec
lcall
aad
sub
dec
movsb
cmp
adc
imul
xlat
test
mov
imul
stos
mov
push
xor
fcomps
stos
out
add
leave
pop
in
sub
dec
sub
pusha
pop
fdivrp
dec
sti
and
mov
insl
xchg
out
xchg
push
aaa
repnz
int3
dec
xor
out
in
adc
adc
imul
mov
loop
push
cmpsb
or
push
orb
sbb
inc
jnp
push
mov
pop
pop
je
xchg
sub
sti
jno
cmc
push
ret
jns
inc
mov
lret
add
into
pop
mov
pop
add
jbe
fwait
ret
inc
sub
inc
scas
push
pop
dec
rcl
dec
hlt
jg
insl
lods
jne
push
sub
enter
mov
call
adc
xor
es
pop
sahf
mov
push
iret
lods
imul
int
je
xchg
add
mov
push
ret
jb
cmp
sbb
enter
aaa
and
into
cmp
enter
jns
cs
pop
cltd
dec
jns
inc
dec
pop
and
jb
and
bound
xchg
sbb
sub
stc
decb
and
fsubr
mov
sbb
pop
sbb
ja
sub
out
sti
cmpb
push
lcall
dec
xchg
pop
insb
xor
pop
push
fcos
xorl
lea
hlt
xchg
xchg
inc
push
fdivl
ds
and
mov
call
pop
clc
into
cmp
dec
cmpsl
cwtl
sti
rcrb
fimuls
gs
cmp
std
sti
outsl
scas
add
or
xchg
jmp
pusha
inc
out
pop
sub
sbb
adc
push
push
leave
xchg
dec
xor
cltd
mov
or
ror
push
stos
data16
icebp
mov
mov
mov
mov
test
mov
adc
stos
ds
dec
mov
pop
or
leave
cli
lcall
jp
push
mov
mov
mov
nop
and
pushf
xor
and
ljmp
sbb
pop
pop
mov
insl
ret
mov
lods
add
adc
and
adc
pop
out
sbb
mov
rcr
popf
push
cmc
mov
mov
or
dec
into
mov
shlb
xchg
movzwl
and
or
nop
sbb
adc
inc
jge
ja
jns
sti
sbb
outsl
jno
rcrb
dec
xor
outsb
lock
in
daa
xor
imul
je
jecxz
mov
sub
or
push
loopne
test
cmp
add
test
stc
fwait
inc
lahf
push
sub
ret
dec
xlat
cwtl
add
in
in
insb
lds
cs
es
je
flds
sbb
mov
lock
ds
push
scas
mov
cmp
ret
aam
sahf
xor
pusha
std
push
cmc
push
in
fucom
mov
in
inc
in
push
xchg
xchg
lds
gs
lcall
loope
test
imul
and
imul
push
data16
mov
std
add
nop
dec
add
into
or
imul
mov
fucomi
adc
mov
or
mov
loop
lea
arpl
dec
lahf
mov
jno
inc
ja
xchg
sub
sub
popf
stos
push
push
inc
pop
or
mov
lcall
pop
pop
aam
xchg
mov
pop
or
outsl
xchg
cli
fcoml
test
mov
sub
les
int3
or
out
or
sbb
add
pop
imull
xor
push
in
shlb
sbb
gs
scas
jne
push
sbb
iret
lods
or
cmp
xchg
test
rcl
sti
js
sbb
das
lds
add
imul
scas
fsubl
push
fbstp
sahf
cmp
mov
imul
rorl
scas
mov
sub
in
mov
sbb
jnp
jbe
sub
lret
xchg
into
es
push
mov
es
xchg
movsl
mov
pop
rorb
mov
xchg
cmp
gs
sbb
mov
std
sub
je
rcll
shl
test
rolb
jbe
or
jns
mov
mov
lds
stos
mov
cmc
neg
insb
loopw
mov
jbe
insl
or
xchg
clc
mov
xchg
repz
mov
push
adc
shll
imul
sub
test
add
pop
xchg
cltd
dec
cmp
mov
cmp
cmpsb
sub
sbb
scas
das
mov
orb
nop
fdivrl
shlb
lods
and
sbb
cmp
lock
icebp
aam
xor
or
cmp
in
call
test
outsb
xor
lock
cmp
push
test
dec
decb
sub
or
cltd
and
rolb
dec
popa
rcr
mov
and
jnp
mov
lea
ret
mov
rcll
sbb
adc
iret
xchg
add
js
popa
mov
mov
cmp
cmp
arpl
sbb
aas
fisttps
fldt
mov
lret
hlt
inc
and
pop
and
pop
fs
and
out
sahf
mov
insb
lret
cltd
sub
test
movsb
xchg
mov
mov
stos
imul
rcl
hlt
push
ja
mov
mov
and
push
push
cmp
popf
movb
test
push
pop
js
sahf
fadd
das
xchg
subb
mov
jbe
sbbb
xchg
and
sub
or
aam
mov
ds
es
push
lods
and
pop
mov
sub
js
inc
movsb
push
out
push
mov
mov
test
testb
push
das
inc
mov
pop
pop
pop
and
mov
outsl
cmp
divl
adc
xchg
inc
ja
shrb
cmp
lock
cmp
add
jle
test
jne
scas
push
or
in
stos
and
faddp
mul
mov
adc
dec
sbb
data16
out
jl
sub
mov
add
xlat
dec
enter
test
roll
aam
inc
pop
fbstp
push
loop
out
dec
loope
es
mov
enter
mov
test
pop
jbe
rorl
cmp
sub
jne
gs
inc
sbb
das
rorb
je
xlat
mov
imul
lea
popa
mov
mov
pop
in
jns
mov
in
cmp
into
iret
in
or
jnp
add
sbb
cmp
sbb
repnz
cmc
pusha
jo
call
push
xchg
pop
loope
clc
mov
or
popf
mov
cltd
ret
shrl
cs
cli
mov
fmul
js
jnp
jbe
mov
dec
adc
leave
ljmp
mov
int
shrb
popa
pushf
mov
hlt
push
xchg
fisttps
iret
loope
das
fwait
add
mov
xor
subl
cmp
xlat
ss
ja
jmp
cmc
jg
mov
imulb
push
push
jmp
mov
movsb
jns
aam
aad
jl
mov
mov
ret
pop
test
sub
mov
lahf
pop
test
stos
sbb
lods
add
nop
sbb
dec
into
into
mov
mov
and
push
adc
jb
sub
or
jno
gs
addr16
std
ret
int3
dec
test
xor
mov
pinsrw
in
adc
xchg
out
outsl
push
mov
stc
mov
add
sub
mov
scas
f2xm1
push
fsub
pop
mov
popf
pop
fs
cmpsb
pop
add
adc
xchg
cmc
jne
xchg
test
inc
adc
out
dec
mov
mov
lcall
mov
into
jl
xor
lods
das
push
shrb
loop
pop
repnz
adc
ljmp
movsl
cli
xchg
fldt
add
pop
lahf
ljmp
mov
outsl
or
ljmp
pusha
and
hlt
mul
xchg
push
mov
add
or
push
pop
int
mov
fwait
mov
xchg
lret
ret
sti
lahf
mov
jae
pop
enter
cmp
dec
jp
das
rorl
xor
dec
adc
and
out
adc
js
push
dec
call
imul
cwtl
mov
dec
xchg
inc
push
jo
jnp
jg
sub
mov
or
push
xchg
sub
inc
int
neg
xor
xchg
sub
lock
add
ret
mov
punpckhwd
rep
jle
dec
fwait
stos
cmp
fiadds
negl
daa
icebp
mov
xor
sub
sarl
mov
mov
and
lcall
aam
xor
mov
and
push
loop
repnz
shll
adc
dec
subl
mov
and
push
or
dec
push
leave
loopne
cmp
jecxz
into
test
cltd
movsb
mov
cmp
fsubl
xchg
mov
dec
pop
in
loopne
in
cmc
roll
jo
ja
push
stos
pop
iret
jne
push
lcall
add
mov
inc
mov
cs
addl
cmpsb
xchg
xor
cld
fildll
cmp
nop
int3
jge
mov
rcll
and
or
std
dec
cmp
cld
int
ds
fsubp
or
fisttpl
adc
inc
aam
xchg
int3
je
aaa
rolb
stc
rclb
repz
mov
leave
aam
jg,pt
pop
mov
ljmp
mov
inc
loopne
mov
and
xchg
icebp
mov
inc
sbb
pop
mov
pushf
push
test
dec
xor
jns
lret
aas
mov
ret
aas
push
pop
test
xor
dec
int
sbb
daa
xor
xchg
dec
pusha
xchg
flds
xchg
es
out
int
arpl
gs
inc
inc
pop
inc
lret
jmp
js
dec
aad
xor
loop
mov
stc
cli
jo
cld
xor
js
jecxz
popf
pop
ficoml
sbb
arpl
cpuid
jl
int3
subl
mov
add
mov
in
dec
sub
js
inc
jmp
das
and
cmp
loopne
imul
sub
aad
jo
sarl
jle
or
js
add
or
scas
insl
sti
lret
or
cmp
pcmpgtb
add
pop
int
stos
mov
ljmp
sub
mov
dec
js
les
pusha
loope
xchg
jb
pop
sbb
mov
push
pusha
push
add
out
imul
mov
push
pusha
sub
sbb
aam
leave
adc
mov
sbb
xor
aad
mov
xor
mov
xor
pop
push
pop
popa
fisttps
mov
aad
iret
insb
adc
scas
stos
andl
loopne
sbb
addr16
dec
push
xor
push
fisttpl
js
sti
adc
notb
xchg
ja
mov
and
sub
addr16
daa
jle
mov
jg
inc
push
mov
mov
mov
cmp
cmp
mov
dec
sbb
ret
inc
push
cmpsb
cmp
jo
jmp
ret
popa
mov
aaa
sbb
xor
jbe
xor
ret
loop
stos
mov
loop
jecxz
sbb
lea
aam
mov
pop
ljmp
into
repz
loope
insl
ja
imul
adc
fisubrs
cmp
xor
push
loopne
jae
addr16
movsb
pop
scas
xlat
call
sbb
dec
adc
lock
sub
xor
cli
adc
out
ljmp
cli
inc
push
stc
mov
inc
cmp
inc
fdivl
stos
test
xchg
cmp
push
jmp
das
or
or
mov
lods
mov
push
sub
adc
push
fdivrl
insl
fldt
mov
or
rol
imul
fnstenv
mov
subb
out
cmp
cwtl
push
cmp
fcoml
popf
push
ficoml
xor
je
xchg
mov
lcall
xchg
fsubr
mov
imul
fildll
and
lods
out
insl
mov
and
and
in
pop
xor
mov
lcall
inc
xor
out
out
push
or
inc
out
aad
rorb
sub
inc
xchg
aam
popl
rcrb
out
ja
push
js
mov
mov
mov
xchg
jmp
xchg
and
addr16
enter
dec
pop
cli
int3
fidivs
jae
jecxz
sub
sbbl
dec
adc
inc
adc
lahf
xchg
cmpsb
mov
insb
pop
sahf
sub
subb
push
adc
sbb
pop
sbbb
jp
pop
jmp
xor
dec
pusha
cmp
rorb
adc
outsl
pop
in
cld
cmc
mov
test
push
xorb
push
and
jmp
or
mov
ret
call
fwait
inc
outsb
ret
outsb
jmp
js
loope
mov
gs
mov
aas
and
lods
push
repnz
xor
jg
mov
fistps
js
cli
add
adc
imul
jp
jmp
sub
repz
sub
cmp
inc
jo
rclb
repz
jle
pop
test
push
inc
faddl
fstp
icebp
cmc
lahf
sub
adc
roll
jns
stc
xor
jecxz
xchg
add
sbb
cmp
bound
imul
or
dec
mov
shll
out
dec
xchg
mov
push
xchg
cmpsl
test
inc
push
sub
mov
add
push
xor
cmp
sub
call
aad
hlt
adc
sbb
fisubs
cmp
inc
in
aaa
jae
iret
mov
jns
or
fldenv
add
cmp
xchg
jmp
inc
bound
loop
pop
jnp
int3
lahf
xchg
xchg
hlt
mov
ret
pop
and
xor
mov
or
dec
jecxz
mov
pop
sbb
xor
or
xchg
and
mov
pop
dec
daa
jae
push
adc
daa
lret
push
hlt
iret
aad
lret
jl
xchg
cmp
mov
ss
sub
shlb
sarb
add
sub
inc
stc
adc
jno
or
inc
sbb
jns
enter
mov
cmp
ss
fildll
mov
int
or
lea
pop
lret
sbb
lret
inc
adc
adc
inc
loopne
inc
inc
push
lret
int3
adc
mov
out
mov
incl
mov
cmp
adc
data16
pushf
sbb
push
outsb
mov
dec
mov
xorb
cmp
mov
add
mov
dec
jl
negb
pop
push
in
flds
xor
test
aas
jge
std
js
jg
icebp
lock
adc
mov
push
stos
lcall
mov
push
cmc
addr16
add
push
xor
cmc
xlat
dec
cltd
js
pop
cmp
or
in
dec
rcr
roll
xor
push
iret
xlat
pop
ss
lcall
daa
push
cs
lret
lods
popf
int
cmp
xchg
ss
out
inc
loop
js
dec
push
dec
xchg
sub
ret
dec
cmpsb
mov
cmpsl
lcall
add
xor
pop
enter
das
push
xchg
ja
in
xlat
xor
roll
in
mov
ret
leave
aam
jne
les
subl
mov
mov
pusha
inc
jmp
xchg
mov
inc
pop
in
dec
xchg
ljmp
jae
iret
loopne,pn
repnz
movsl
push
xchg
jmp
rol
sbb
mov
roll
pop
or
call
or
cmp
adc
orb
jbe
add
push
mov
aam
dec
scas
pop
sarl
enter
or
lods
pop
mov
xchg
out
inc
mov
iret
gs
lock
daa
xor
mov
sub
add
mov
sub
mov
addb
pop
cmpsl
rcl
xor
popa
rclb
stc
xchg
jo
pop
out
or
push
mov
ja
and
push
mov
mov
jns
inc
sarb
dec
ja
sbbl
fidivs
xor
push
push
mov
mov
bound
xchg
cwtl
sub
mov
jecxz
sbb
sub
aaa
cltd
pop
mov
addb
jge
pop
jmp
imul
pop
jbe
add
dec
jecxz
in
stos
mov
inc
inc
add
sahf
xchg
leave
cmpsl
cli
dec
lret
adc
add
and
or
lock
jmp
sub
test
mov
fmull
in
loop
leave
clc
mov
dec
adc
pop
xor
cwtl
adc
xchg
inc
test
ret
mov
pop
loope
inc
add
push
jns
movsl
cmp
mov
cmpsb
sub
xlat
fstpt
jecxz
outsb
push
lret
lret
pusha
lcall
mov
dec
jmp
dec
cmp
jl
out
inc
lea
mov
ret
cmc
enter
xor
push
clc
mull
movsb
lods
stos
nop
xor
jo
ret
cmp
fistpll
mov
mov
jo
pop
scas
fucomip
pop
lea
icebp
std
fdivrp
enter
pushf
sti
lods
and
jg
add
sub
mov
ret
rolb
cmpsl
mov
outsb
dec
push
sbb
mov
xchg
hlt
cs
scas
fldl
sub
and
push
mov
test
sbb
xchg
cld
into
inc
aas
fdiv
xchg
movsl
ds
mov
fcoml
mov
stc
arpl
and
cld
lret
loop
push
inc
in
inc
push
ret
cmp
pop
inc
scas
jp
sub
popf
enter
imul
test
cmpsb
dec
jno
data16
lahf
pop
lret
enter
mov
movsl
jbe
clc
imul
pop
in
adc
imul
in
addr16
pop
push
int
iret
in
fwait
outsl
pushf
pop
xchg
fs
xlat
lds
sub
mov
or
nop
inc
cmp
or
jle
les
cmpl
jmp
cs
nop
dec
mov
pop
dec
add
dec
push
mov
inc
mov
cmpsb
and
mov
clc
loope
lret
sub
push
sti
stos
andb
arpl
mov
arpl
adc
mov
lods
mov
in
repz
aam
int3
rolb
jge
push
popa
jno
mov
jno
adc
adc
sbb
fldcw
lea
repz
cmpsb
xchg
sbb
mov
pop
add
xor
sbb
xchg
or
mov
dec
mov
add
dec
loop
mov
pop
lret
bound
lret
jg
xlat
or
push
popa
jle
mov
xchg
mov
shlb
loope
sbb
out
les
jo
jle
out
push
cmc
divb
mov
dec
aaa
mov
or
push
ror
lds
inc
lods
clc
jne
dec
stc
sub
ficompl
sbb
xchg
mov
cli
out
mov
imul
addr16
add
mov
shlb
sbb
out
inc
lods
subl
fldl
sub
push
or
mov
ljmp
push
pop
xchg
dec
sbb
mov
out
cmp
sub
cwtl
mov
cwtl
les
sub
scas
pop
mov
out
xchg
xchg
cwtl
je
in
pusha
lods
xorl
sub
pop
sub
in
scas
xchg
mov
mov
test
or
xor
mov
jbe
iret
jns
xchg
inc
xor
test
std
pushf
popf
cltd
or
lret
xchg
ret
sti
xor
xor
cmp
mov
add
repz
fidivs
pop
inc
fwait
add
cmc
xchg
pop
daa
cmp
stos
pop
imul
add
out
mov
ljmp
adc
sub
sub
push
les
xor
addr16
push
icebp
fmuls
adc
mov
es
adc
test
test
mov
fldt
or
popl
shrl
int3
add
fisttpll
jno
cmpb
outsl
repnz
rorb
or
push
cld
repz
adc
push
clc
xchg
aas
dec
ds
sti
int
aam
pop
je
cld
dec
loope
test
in
jle
jb
icebp
addb
imul
loope
cli
xor
jl
mov
xchg
mov
pushf
pop
xchg
xchg
sub
mov
or
into
sub
mov
fisubrs
push
dec
pusha
dec
and
fyl2x
mov
insl
xor
movsl
or
mov
pop
mov
int3
fstl
rorb
adc
mov
mov
incl
fwait
pop
aas
or
and
scas
inc
fcoml
cli
inc
lret
cli
mov
lods
jecxz
arpl
fwait
hlt
xlat
cmc
inc
shlb
in
shlb
mov
sbb
add
mov
ret
or
leave
cwtl
bound
and
test
mov
add
mov
add
mov
dec
stos
mov
mov
jae
int3
pop
test
insb
enter
popa
ret
stos
aas
lahf
ret
data16
pushf
inc
mov
aam
imul
sbb
leave
data16
xchg
mov
pop
push
pslld
rcl
sub
out
cli
clc
shlb
insl
addr16
dec
adc
lods
or
int
and
cmp
mov
call
rcrl
hlt
xchg
je
das
sbb
aaa
mov
dec
jg
js
out
jo
add
pop
and
mov
divl
loop
dec
fst
in
mov
cltd
dec
push
pop
out
jmp
add
jecxz
mov
add
fsubrs
xor
mov
sub
push
push
push
movsb
bound
sbb
pop
inc
xchg
iret
push
inc
xor
adc
insl
daa
mov
cmc
rcrl
in
shrl
stos
dec
cmp
enter
xor
cmp
sahf
les
push
test
dec
mov
add
in
cmpsb
cli
shll
pop
rcrb
sbb
mov
sarl
or
and
adc
sbb
in
xchg
insl
mov
sbb
scas
ljmp
stc
lock
outsb
cmpxchg
push
add
loop
inc
out
les
mov
rorb
mov
outsl
xchg
hlt
push
sbb
mov
fiaddl
test
mov
shlb
fs
cli
sti
shrb
jg
xchg
stos
arpl
and
fidivrl
mov
int
ds
add
pop
lods
ret
popa
mov
mov
leave
into
adc
iret
mov
pop
inc
pop
out
rcll
in
nop
divb
sti
xor
in
arpl
pop
sub
js
dec
cmpsb
push
insl
xchg
and
mov
dec
jmp
pushf
xchg
shl
fwait
xlat
pop
sub
mov
and
sti
aas
test
cmp
shrl
movsb
cmc
xor
mov
jg
push
sbb
loope
jmp
cltd
pop
pop
xchg
std
fadd
push
rorl
xchg
jge
jno
inc
pushf
push
ljmp
fsubrl
es
insb
jb
xchg
sub
pop
js
movsl
testb
cmpsl
popf
mov
and
xchg
leave
ret
jb
cmp
mull
adc
xchg
dec
lds
les
dec
je
loop
movsl
xchg
cmpsb
lcall
sarb
push
test
push
xchg
bsf
cli
inc
sbb
or
adc
xchg
pusha
popa
and
mov
lods
jb
enter
insl
push
icebp
xor
add
sbb
arpl
push
dec
mov
mov
push
add
inc
jne
js
imul
jl
xlat
cltd
mov
xchg
jnp
scas
jmp
jmp
cmc
mov
jg
and
aad
wrmsr
in
hlt
out
rorl
lods
xor
ret
jg
jp
gs
push
add
aas
push
test
jp
fmull
hlt
fsubp
idivb
addr16
dec
add
leave
sbb
test
shl
in
enter
cmc
mov
loop
sbb
rorl
xor
xchg
cmp
test
jae
mov
mov
push
sub
dec
int
adc
insl
cmpsl
xchg
lret
lcall
mov
jmp
lahf
and
lods
js
mov
jno
xlat
dec
xchg
mov
aas
mov
rcr
inc
cltd
xor
mov
xchg
push
xchg
push
push
push
xchg
adc
idivl
rcrb
fidivrs
dec
mov
dec
inc
div
das
pop
mov
mov
subl
pop
sub
adc
xchg
test
cwtl
test
loopne
pop
mov
and
xor
fmull
pusha
cmpsl
add
push
push
out
mov
inc
xchg
cmpsl
pop
and
pushf
lods
rorl
mov
push
push
std
cmc
ss
push
push
mov
cmp
mov
xchg
dec
test
push
xchg
adc
cs
call
out
xor
popf
scas
adc
mov
jle
inc
rcrb
mov
addl
adc
fs
inc
sbb
and
push
aam
cmc
pop
das
xchg
or
in
lahf
add
pop
adc
xchg
shlb
sub
jl
pop
ljmp
mov
test
dec
imul
lea
es
xchg
cmpsl
or
pushf
mov
mov
mov
xchg
ret
adc
push
cmp
leave
jne
hlt
movsb
sarb
rclb
xchg
inc
das
cmc
mov
test
add
out
sbb
sbb
daa
sub
pop
cmpsl
mov
jne
hlt
enter
push
mov
in
or
add
adc
mov
mov
mov
xchg
jge
ficoml
inc
push
mov
pop
add
fldl2e
xchg
mov
mov
or
sub
call
mov
decl
test
mov
jnp
cmp
dec
xchg
mov
dec
into
shrl
out
outsb
cmp
lret
mov
fwait
test
cmp
or
rcll
ret
lret
ss
and
cwtl
pusha
rcll
mov
sarl
xlat
lea
mov
in
loopne
frstpm(287
pop
cmc
xor
inc
cmp
fwait
xor
jmp
mov
mov
cmp
push
jmp
cmp
mov
xchg
add
sbb
sbb
fisubs
inc
mov
inc
lahf
int3
ficoml
addr16
fnsetpm(287
orb
mov
push
sbb
out
mov
enter
mov
imul
imul
mov
inc
icebp
cli
repnz
add
out
out
ficomps
dec
xchg
cmpsb
and
jne
lock
fldlg2
push
lret
stc
lcall
pop
mov
xchg
clc
aas
std
pushl
jecxz
daa
aas
or
and
clc
dec
lock
fsubp
data16
xchg
xor
sar
lahf
jmp
xchg
psrlq
in
and
and
je
fildl
pop
or
leave
jge
xor
pop
jno
ljmp
imul
aad
aas
mov
scas
cltd
inc
jmp
push
out
addb
data16
lods
insb
xchg
dec
xchg
sti
call
sahf
add
or
pop
and
lahf
int3
dec
cmpsb
sbb
negl
int
and
sub
lret
xor
jmp
imul
repnz
xchg
pop
cltd
es
or
dec
pop
loope
in
outsb
push
cli
in
cmpsb
pop
and
ljmp
pop
or
mov
mov
xchg
push
popa
es
pop
movsl
mov
sbb
das
arpl
adc
jnp
pushf
je
lods
mov
inc
xchg
aad
push
adc
fsubl
add
jmp
test
pop
push
int
ret
int
les
mov
repnz
push
das
add
pop
daa
mov
mov
daa
inc
sahf
stos
mov
adc
cli
filds
mov
jae
repz
dec
movsb
jo
inc
add
pushf
mov
push
inc
repz
fsubl
mov
pop
clc
sub
xchg
xchg
mov
loop
test
cmc
jns
mov
add
push
add
test
jle
mov
cs
jne
inc
ret
jnp
adc
call
sbb
jg
fisubs
fidivs
sub
out
inc
or
adc
addl
jmp
test
cmp
inc
cli
cmp
clc
cmpsb
pusha
enter
jns
rolb
jge
mov
add
stos
push
test
std
into
into
xchg
dec
incl
jne
ljmp
clc
xchg
or
push
fists
add
xchg
xchg
lock
imulb
dec
jecxz
adc
sbb
push
cmpl
xor
pop
or
pushf
out
mov
mov
sub
imul
mov
pop
movsb
pop
dec
cmp
mov
cmp
repz
leave
ficompl
out
lahf
aad
or
push
push
mov
insl
and
xor
push
cwtl
jae
ja
or
jge
xor
jg,pt
lahf
outsl
adc
ss
popa
or
jp
das
mov
jge
scas
or
movsb
out
push
repz
ljmp
jno
mov
inc
push
ss
sbb
mov
mov
in
jns
pop
jns
stos
pop
push
jmp
and
mov
and
ret
test
movsb
mov
pop
and
jbe
es
mov
jb
add
adc
aad
fs
mov
movsl
inc
mov
out
and
test
inc
gs
popf
pusha
and
push
lock
ret
movl
push
or
cmp
or
push
cld
xchg
dec
xlat
jecxz
add
bnd
sti
fiaddl
out
lahf
daa
pop
sarb
inc
xchg
outsl
mov
jb
push
xor
push
loope
dec
decb
xor
mov
xchg
andl
bound
inc
mov
sub
pop
mov
sub
and
cli
sbb
jecxz
leave
sbb
js
push
iret
test
mov
mov
jmp
cmp
inc
fnstsw
ficompl
push
mov
sbb
out
mov
cmp
scas
ror
push
sbb
add
mov
test
or
mov
add
popa
push
xor
sbb
cmp
outsb
in
push
dec
clc
ljmp
jae
or
sub
rolb
dec
mov
jns
cmp
mov
jno
dec
sub
inc
fisttpl
jb
jne
insb
xor
jns
jge
fistpl
lods
xor
jmp
testl
shrb
out
scas
iret
mov
dec
adc
pusha
in
sbbl
repz
cmp
inc
mov
test
mov
xchg
jo
and
adc
sahf
mov
push
adc
in
mov
xchg
mov
rcr
loopne
icebp
add
arpl
idivl
mov
dec
and
xor
mov
lods
test
xlat
inc
adc
cmp
pop
cmp
aas
insb
dec
jb
ret
push
lods
sbb
pop
icebp
xlat
mov
jge
xchg
push
add
cli
dec
fisubl
fldt
adc
inc
and
xchg
mov
sbb
lret
lea
dec
xor
and
out
add
arpl
int3
add
jg
call
pop
mov
sbb
or
loop
xchg
add
xchg
push
arpl
and
dec
sar
sahf
popa
add
andb
clc
xor
int3
out
sbb
clc
scas
adc
inc
imul
ror
pop
mov
xchg
xchg
pop
or
dec
arpl
push
sbb
and
jne
pop
addl
cli
scas
adc
sub
push
xor
dec
pop
out
fisubrs
les
daa
stos
jbe
dec
mov
push
and
imul
mov
fbstp
in
arpl
sbb
cld
stc
mov
mov
cmp
pop
dec
and
xor
mov
mov
lock
sbb
jg
aam
pop
out
mov
inc
mov
pop
or
shll
xchg
and
loop
out
scas
out
or
add
shl
mov
inc
pusha
loopne
setge
out
sub
bound
pop
or
or
add
cmpb
push
mov
popa
add
pop
aad
sbb
ja
xor
loope
xchg
sarb
inc
add
mov
adc
xchg
pop
ret
das
daa
js
testb
cmpsl
jmp
aad
jne
mov
cmc
push
mov
and
xor
mov
and
lret
loopne
or
adc
mov
bnd
jns
and
push
sti
pushf
mov
enter
xorb
cli
pop
jp
out
push
dec
dec
push
out
mov
jge
mov
jne
cmp
sbb
xchg
push
and
rclb
cs
jl
fprem1
or
fcoms
mov
stos
hlt
test
lahf
es
push
mov
dec
xchg
mov
inc
or
adc
cwtl
bound
fmul
dec
test
sbb
and
ljmp
mov
sub
idiv
aas
mov
pop
pop
nop
cli
mov
cli
sbb
sarl
mov
adc
fsubs
ljmp
cmpsl
push
cmpsb
ja
fwait
jnp
mov
push
jle
adc
dec
xor
or
ja
jmp
aas
rol
jp
adc
jmp
loopne
aad
aaa
jl
int3
pop
js
or
pop
adc
push
mov
sbb
sbb
cmpsl
add
mov
ficomps
aad
jg
or
cs
jecxz
sti
cli
dec
jp
push
fcomps
dec
jnp
sbb
mov
cs
add
or
pusha
sbb
shlb
dec
jb
insl
cmpsl
add
pop
sbb
sbb
das
stos
jns
frstor
cltd
test
lds
repz
mov
sahf
ret
test
lahf
mov
std
mov
jmp
add
cli
js
imul
andb
adc
dec
scas
xor
mov
sahf
xchg
sub
pusha
add
into
mov
adc
enter
inc
jp
jle
push
xor
jo
pop
fdiv
cmpsb
lcall
imul
cmp
cmpsb
cmpsb
push
add
jnp
nop
sbb
xor
sub
push
fmul
sbb
sub
scas
mov
mov
adc
push
mov
push
movsb
add
xlat
cmp
mov
cli
and
pop
sbb
in
sbb
pushf
xor
mov
sub
inc
fwait
xchg
cmpsb
cs
jo
in
push
sub
xor
dec
lds
sbb
mov
sub
shll
shll
in
cmp
or
and
mov
repnz
out
xchg
dec
fnstenv
popf
pop
pop
arpl
gs
add
repnz
mov
xor
xchg
xchg
mov
lahf
pop
enter
lea
xchg
leave
shrl
lret
mov
dec
leave
rorb
and
and
or
mov
mov
pusha
add
cltd
lock
repz
fldcw
jge
dec
into
les
out
push
movsb
stc
scas
ljmp
mov
mov
pop
mov
ds
push
adc
in
pop
push
mov
jns
jl
dec
lret
loope
cmp
xchg
adc
lret
add
lods
sbb
sub
dec
sahf
fisttps
pop
add
cmpsb
or
ds
and
enter
stc
bound
or
mov
ret
scas
push
adc
cwtl
repnz
xor
push
in
cmpsl
lods
das
dec
test
mov
xchg
in
cmp
push
inc
inc
icebp
add
lcall
dec
fildl
lret
xchg
enter
jle
add
and
icebp
sbb
push
and
jg
pop
push
and
push
lret
imul
sub
push
mov
mov
cli
xor
mov
jmp
pop
jbe
jmp
adc
mov
outsl
and
call
aaa
idivl
rorl
xchg
sti
and
dec
call
in
xchg
mov
dec
cs
ljmp
sub
pop
punpckhdq
cli
cli
adc
popf
nop
mov
movsb
push
mov
shrb
xchg
call
dec
push
push
fnstenv
add
sahf
sbb
sub
xchg
cmc
dec
push
mov
sarl
push
jmp
jmp
mov
cmpb
or
jmp
out
add
xchg
popf
jo
xchg
xchg
or
push
mov
les
xorl
add
or
test
xor
dec
test
jo
push
outsl
rcr
bound
cmp
sahf
stc
xchg
adc
mov
incb
xchg
leave
mov
add
fidivrl
and
ja
xor
mov
cmpsl
ja
jle
je
pop
pop
scas
scas
mov
das
scas
rcrl
inc
hlt
push
inc
mov
in
mov
push
adc
out
loop
adc
dec
stos
push
test
les
pusha
aas
aad
inc
add
popa
mov
addb
seto
lret
pop
xchg
pop
mov
pop
and
xchg
push
aad
aam
icebp
mov
jl
test
rcrl
iret
and
outsb
mov
pop
jns
fbstp
inc
xchg
stos
add
aas
mov
pusha
popa
aam
icebp
or
and
push
push
aaa
xor
push
repnz
test
and
mov
imul
cmc
mov
cli
push
adc
or
adc
inc
jne
push
pop
cmp
sbb
popf
sub
ja
cltd
mov
clc
fs
dec
xor
iret
mov
cmp
ljmp
xor
add
sub
stos
incl
mov
lret
outsl
arpl
in
or
out
fsubs
sbb
dec
sbb
push
mov
jno
retw
loopne
push
lcall
in
xor
dec
bound
mov
push
leave
js
in
fstps
daa
push
jb
adc
popf
ja
test
mov
jb
xor
xor
cli
push
and
cmp
imul
cld
push
cmp
dec
cmp
jg
jmp
push
outsb
loope
sbb
jns
mov
js
das
jecxz
in
xor
inc
in
ss
mov
xchg
xor
add
add
jg
fsub
outsb
mov
pop
aam
push
jp
int
mov
jl
sbb
or
icebp
sahf
adc
fcmovne
xor
mov
pop
jg
dec
sub
test
cmc
sbb
shl
sub
rcll
cli
int3
movsb
push
and
sub
scas
rclb
push
stos
sbb
rorl
mov
mov
and
data16
ljmp
and
adc
push
subl
push
out
int
mov
imul
fs
inc
lahf
mulb
xchg
mov
pop
ljmp
outsw
cmp
outsl
xor
imul
mov
mov
loopne
dec
push
std
xchg
icebp
out
sbb
ss
inc
stc
ror
jmp
sbb
gs
mov
lds
pop
fsubs
or
out
icebp
pusha
add
mov
test
mov
outsb
ljmp
mov
jle
xor
inc
push
outsb
cltd
dec
sbb
in
rcrl
outsb
je
or
xchg
pusha
push
in
pop
std
jge
cwtl
lods
outsb
and
pushf
jno
mov
enter
adc
adc
mov
jne
out
pushf
mov
sub
stos
sbb
clc
orb
aaa
insl
push
inc
mov
cli
add
repnz
cmp
fisubs
jno
int
push
lret
sub
sub
lock
inc
pushf
push
outsl
mov
scas
mov
sbb
or
ret
mov
push
nop
xchg
sub
aad
lahf
test
test
xchg
sbb
sub
or
and
sti
addr16
adc
sub
mov
mov
xlat
cmp
mov
jns
fs
push
loopne
push
inc
rorl
icebp
cmp
lret
cld
mov
iret
adc
mov
sbb
ret
into
fmuls
adc
ret
mull
mov
or
lods
mov
and
jnp
into
iret
std
movsb
jge
mov
sahf
loope
enter
ja
outsb
push
lret
pop
or
arpl
test
or
lock
popa
push
lahf
cmp
incl
mov
clc
mov
push
adc
xlat
les
lods
mov
ficomps
pop
mov
pop
mov
xchg
iret
mov
push
aad
mov
ss
pop
insb
adc
mov
sahf
mov
add
notb
adc
fildll
xor
adc
cs
lret
push
sbb
out
imul
jecxz
inc
push
sbb
xchg
sti
mov
js
and
mov
pop
sbb
add
lea
xchg
xlat
inc
push
cmp
pop
mov
int
cmp
or
jg
daa
xchg
cmpsl
mov
imul
lcall
ds
adcb
mov
cli
sbb
lods
movzbl
and
jnp
fs
insl
push
add
xchg
sbb
pop
pop
insb
ud1
pop
test
cwtl
mov
iret
xor
and
imul
inc
aaa
cmp
lock
nopl
scas
rcll
popa
popa
push
movsl
inc
into
add
xchg
movl
pop
mov
mov
adc
cli
pop
notl
sbb
fiaddl
not
in
ja
vpaddb
lret
addr16
jae
or
fwait
pop
xchg
adc
cmp
xor
cmc
mov
int3
ljmp
stos
ret
dec
in
sub
xor
fnstcw
aam
scas
lcall
fdivl
push
test
push
call
mov
dec
loop
mov
cmp
cmp
dec
sbb
fwait
enter
in
mov
xor
xor
inc
stos
mov
hlt
push
ficompl
flds
mov
sbb
mov
loopne
adc
mov
mov
movsl
and
xchg
ret
inc
jns
mov
ret
add
ret
fsubrp
xchg
cmp
sbb
pop
dec
movups
add
rep
sub
fs
bound
ja
adc
in
fnstsw
leave
pop
push
imul
push
ret
shll
loopne
inc
insb
mov
lods
aas
sbb
mov
inc
cmp
hlt
pop
or
pop
lods
push
arpl
sbb
notl
pop
add
es
int
pop
xor
iret
jge
mov
push
mov
nop
mov
insl
movlps
cmp
scas
mov
out
push
jo
roll
lds
dec
mov
push
dec
jae
sub
stc
sub
je
adc
inc
mov
sbb
bswap
int3
mov
dec
pushf
data16
cmpsb
mov
push
push
mov
push
xor
dec
xchg
pop
push
loope
dec
mov
stc
push
mov
aas
push
aas
testb
inc
xor
imul
outsb
push
sldt
dec
out
rcll
mov
jb
incl
imul
cmpsb
xchg
imul
mov
nop
js
add
data16
dec
and
adc
push
jl
xchg
dec
add
xchg
ds
adc
mov
call
xchg
mov
mov
mov
ficomps
cmc
ficompl
mov
dec
cmp
or
mov
in
inc
jne
insl
mov
stos
jge
popf
inc
imul
jo
mov
add
cli
jl
pop
mov
cmp
into
and
out
dec
add
adc
or
icebp
and
sbb
aaa
cmpsl
rolb
int3
push
stos
push
mov
xchg
inc
mov
fdivrs
push
loopne
jp
scas
or
sub
popa
xor
loopne
es
arpl
xchg
or
dec
pop
push
xor
rclb
es
jecxz
mov
xor
xchg
mov
cmp
mov
jo
sti
test
js
stos
mov
sbb
sub
sahf
or
or
fs
jp
div
js
jge
shrb
xchg
mov
popa
mov
js
xor
push
inc
mov
icebp
adc
xchg
daa
fdiv
imul
dec
xchg
or
inc
mov
mov
icebp
addb
push
int3
das
push
push
pop
push
jle
dec
xchg
jecxz
popa
mov
and
and
sahf
sub
and
sub
aad
dec
xor
std
dec
in
mov
inc
adc
shl
add
lods
gs
ljmp
mov
adc
xor
fcoms
insl
jo
ret
inc
cmp
popf
and
stos
jge
jnp
or
popf
call
scas
push
inc
pop
inc
mov
jge
inc
add
std
mov
and
enter
mov
jmp
inc
adc
insb
ljmp
pop
push
adc
cmpsl
cwtl
cs
push
push
adc
dec
outsb
and
and
stos
out
mov
adc
insb
sti
pop
jp
pop
adc
outsb
sbb
fwait
jecxz
andl
xchg
imul
pop
hlt
add
addb
lock
idivb
cmp
imul
jl
jp
test
scas
mov
lret
cmp
js
leave
pop
sahf
pop
push
sub
xor
push
mov
les
pushf
dec
aaa
ljmp
aad
pop
dec
push
mov
push
sub
jle
movsb
adcb
iret
sbb
xor
push
jp
hlt
out
push
push
sub
scas
adc
cmp
mov
jbe
js
ret
lret
xchg
dec
adc
scas
jbe
gs
dec
mov
mov
hlt
xor
lahf
movsl
and
inc
and
inc
cmp
dec
xchg
xchg
pop
lods
pop
lea
fwait
in
mov
pop
cmp
ret
dec
vmulps
repz
adc
fldl
mov
hlt
ret
push
test
lret
jmp
xchg
imul
jmp
jns
lcall
xchg
mov
and
insb
pop
dec
xorb
jo
mov
push
push
js
lods
sub
sbb
jne
cmp
lret
fldl
mov
inc
sbb
push
sub
jo
pop
icebp
add
hlt
es
push
insb
in
jle
fs
inc
mov
pop
pop
in
int
iret
cmp
scas
pop
fs
push
shlb
pop
jno
add
enter
cwtl
scas
imul
adc
jg
inc
adc
repnz
into
xlat
mov
cmp
xchg
dec
loopne
pushf
iret
rolb
sub
gs
and
lcall
add
jp
out
pushf
jmp
sti
rcl
dec
and
push
sub
ret
clc
cs
jne
jns
push
jmp
sahf
ds
test
or
lods
mov
jne
in
shl
mov
scas
mov
jo
and
leave
dec
cli
ss
inc
inc
push
jns
repnz
mov
ret
lahf
mov
sti
jecxz
xorb
inc
jne
inc
and
mov
dec
addl
shll
jmp
lea
jl
sahf
test
gs
push
jmp
aas
xor
xchg
lds
cld
pop
or
jnp
cmpsl
outsl
mov
scas
mov
in
inc
sbb
hlt
or
mov
cmp
xor
mov
mov
push
mov
pop
pop
outsl
daa
lcall
jb
inc
test
push
out
sti
xor
jg
mov
inc
mov
push
mov
imul
xor
xor
les
ss
incb
popf
ret
pop
jmp
out
adc
imul
inc
pop
imul
loop
lcall
mov
in
mov
fsubl
fwait
dec
loop
jo
sub
das
ja
mov
mov
push
inc
cmp
mov
sbb
rcl
mov
int3
push
mov
mov
adc
popa
testb
jbe
jle
jp
aas
sti
dec
mov
or
inc
std
test
daa
mov
xchg
add
add
add
mov
or
pop
jecxz
and
cmpsb
jle
sbb
jge
jns
inc
push
lret
fstpl
inc
fbstp
mov
adc
loopne
test
or
mov
mov
push
jge
sahf
outsb
xor
sbb
sbb
leave
xchg
inc
jle
test
sahf
xchg
popf
dec
xorl
sbb
mov
pop
test
push
movsl
vmovntpd
xchg
sub
sbb
test
icebp
or
loope
inc
jb
rcll
iret
adc
fwait
pop
sub
pushf
inc
pop
scas
adc
or
out
pop
push
stc
lock
fwait
leave
test
xchg
mov
es
scas
int
inc
push
push
xchg
mov
or
fnstsw
leave
xchg
ljmp
and
mov
rclb
flds
repnz
cmp
in
nop
fists
fs
dec
data16
sub
push
out
and
ret
mov
dec
cltd
sbbb
or
jb
movsbl
sub
sub
mov
sub
outsl
fidivl
cwtl
dec
in
bound
xchg
aad
and
sub
and
in
cltd
ja
fmull
jno
mov
sbb
sub
mov
hlt
and
pop
jbe
roll
add
repz
stc
adc
mov
in
mov
mov
push
xor
and
xor
jmp
xchg
aas
mov
imull
bound
inc
loope
lret
pop
sti
inc
inc
cmp
aad
je
add
push
push
mov
adc
inc
xchg
dec
inc
cmp
les
mov
mov
mov
nop
ljmp
mov
leave
jle
push
sub
add
movsl
xchg
pushf
lock
or
sahf
popf
cmp
ds
mov
mov
out
into
push
idivb
jmp
adc
loop
sbbb
cli
adc
sbb
scas
repnz
ja
in
cli
les
xor
adcb
add
adc
adc
fistl
add
mov
cld
and
sbb
jb
js
inc
fldl
push
pop
cmp
pop
xor
repnz
arpl
dec
sub
subl
mov
cmp
pop
sbb
mov
cmc
pop
pop
inc
sbb
push
dec
out
sbb
jl
pop
int
sub
push
inc
mov
mov
cmp
es
mov
out
or
xor
out
pop
data16
and
lret
adc
sbb
push
fadds
cmp
pop
adc
adc
and
mov
loopne
push
imul
lcall
sbb
xor
pop
cmp
mov
add
test
jns
js
add
or
cli
xor
xchg
sub
mov
pop
cmp
rcrl
icebp
xchg
adc
lea
sub
add
mov
leave
sbb
dec
ja
test
insl
dec
stos
pop
jns
int3
or
out
test
fistpl
ja
lcall
into
add
mov
cmp
cmpsb
outsl
mov
sbb
das
cmp
fwait
aam
loope
adc
jge
sahf
inc
pop
adc
shl
pop
int3
jmp
cmp
mov
in
sysret
lods
sarb
sub
in
mulb
push
mov
dec
fmulp
add
insb
dec
das
cmc
fcompl
outsl
jb
ds
scas
adc
and
ja
iret
mov
aaa
idivb
xchg
test
cltd
sahf
cmp
jae
daa
lea
in
hlt
pop
aas
xor
lahf
repz
into
mov
stos
repz
lcall
adc
in
pop
lods
cmp
scas
sub
sub
cmp
cmp
mov
andb
inc
push
mov
lds
loopne
dec
mov
mov
out
sbb
repz
mov
jle
loope
jmp
lcall
jae
lock
scas
iret
sahf
xor
xchg
pushf
fildl
or
ficoml
fsubrs
cltd
rorb
jno
test
mov
ds
orl
js
cmp
test
mov
iret
xchg
test
jbe
pop
or
push
mov
ds
sbb
fs
mov
loope
in
daa
in
dec
jle
push
stos
jmp
mov
add
mov
vmaxss
insl
hlt
in
mov
sub
fs
shll
jg
ss
scas
fcmovnbe
fbstp
fisttpl
fcomip
fcmovbe
ret
imul
add
and
cmp
ljmp
ficompl
add
imul
fsubrl
cwtl
and
mov
adcl
pop
scas
call
lds
ja
cmp
adc
push
fisubl
xor
sbb
add
sbb
in
xchg
inc
fwait
lret
scas
sub
pop
dec
xchg
mov
cmp
dec
sar
fstpl
mov
push
insb
nop
cli
push
pusha
jmp
mov
jb
dec
gs
lret
xor
out
mov
or
inc
push
mov
fmul
pop
lods
mov
jecxz
fstpt
in
mov
mov
lods
mov
xchg
or
aam
pop
fs
xlat
repz
aad
push
mov
add
scas
pushf
fisubrl
test
stc
pop
or
fs
rcrb
hlt
daa
out
lea
mov
notl
cmp
cld
btc
mov
or
lock
mov
mov
ret
orb
sub
movsb
mov
xor
out
popf
adcb
pop
cmp
mov
ss
inc
adc
outsl
lods
dec
lods
lods
dec
add
add
mov
sahf
lcall
fs
js
adc
int
jg
mov
sti
lods
or
dec
ja
outsb
nop
test
jecxz
xchg
dec
adc
xchg
cmp
fisttpl
push
jns
add
add
in
inc
push
pop
adc
movsl
sub
mov
jnp
and
bound
sbb
shll
pop
stos
imul
rcr
xchg
test
data16
push
fs
mov
icebp
into
xchg
inc
xchg
xchg
and
inc
and
mov
call
sbb
jns
enter
push
sti
sub
imul
push
rolb
in
cmp
scas
aas
andb
stos
stc
cmc
es
jne
or
dec
leave
lahf
aas
push
inc
hlt
fstpl
sti
into
sbbb
jae
call
mov
scas
mull
fcomip
and
or
sub
ja
aaa
mov
xchg
and
ss
in
dec
data16
cmp
adc
addr16
test
push
xor
xlat
and
fcompl
shll
cmp
cwtl
subb
lret
popw
cs
hlt
mov
pop
xor
fistpl
out
jg
call
loope
int
sti
test
push
mov
mov
cmovge
mov
loopne
aaa
test
je
inc
pop
or
add
fists
cltd
ret
mov
jg
adc
pop
xor
sub
sub
mov
rclb
lahf
aas
jle
rolb
in
mov
ljmp
cmpsb
dec
fnstcw
mov
aam
pop
jle
loop
xchg
add
xchg
and
dec
sbb
inc
bnd
sub
icebp
xor
es
push
xor
