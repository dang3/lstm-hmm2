sbb
add
mov
xchg
movsl
test
fnstcw
cmp
xchg
mov
cmp
xchg
jns
sbb
cmpsl
inc
jne
das
test
mov
test
pusha
and
mov
cmp
call
inc
cmp
clc
dec
out
js
xchg
cwtl
cmp
lea
mov
or
pop
int
daa
icebp
xchg
xor
cmc
or
inc
lds
pushf
mov
sbb
sahf
mov
jbe
dec
jmp
loop
roll
pop
into
mov
push
rcll
test
scas
outsl
cmpsb
stos
sub
sub
fs
es
lds
es
xchg
fcomi
imul
lds
mov
in
scas
lea
fisubl
int
jnp
stc
mov
or
test
inc
fidivs
jbe
push
nop
fcoms
pop
jbe
push
stos
cmpsl
sub
aad
sbb
imul
aaa
hlt
ds
jns
pop
jle
xlat
jl
loop
dec
and
clc
or
adc
aaa
dec
jle
test
jno
cwtl
shrb
sbb
inc
jmp
add
adc
jg
loop
setae
leave
scas
mov
add
lcall
lahf
pop
adc
fiadds
push
xchg
stos
jg
mov
aad
mov
jmp
or
idivb
aam
inc
ja
fcompl
dec
int
add
and
or
and
cltd
rep
sub
adc
ret
cmpsb
dec
cmp
test
roll
mov
xlat
mov
jno
jmp
dec
mov
sbbb
repnz
icebp
or
out
dec
push
rcrb
rorl
out
push
xchg
testb
sub
mov
sbb
jno
inc
pushw
imul
popa
push
rcl
xor
sub
testb
mov
or
sbb
stos
subb
mov
aam
outsb
xchg
lods
je
out
loop
push
out
sbb
cs
xor
mov
fwait
and
or
adc
add
adc
mov
push
xor
sub
cmp
cmc
outsb
sarl
imul
aam
jne
mov
adc
add
mov
enter
fisubs
xchg
repz
testb
js
jno
cli
jg
dec
dec
mov
sbb
xlat
push
or
mov
jbe
fnstenv
mov
push
jmp
inc
ds
ljmp
jnp
pop
rcr
adc
adc
incl
data16
mov
int
mov
out
jo
dec
add
push
out
imul
enter
fs
ret
xchg
push
fstpl
mov
push
inc
or
push
mov
or
pop
notl
pop
mov
int
push
clc
xchg
aas
mov
movsb
je
movsb
testb
cltd
in
mov
out
cwtl
clc
in
jecxz
add
xchg
sbb
push
push
test
mov
ret
insb
imul
adc
and
push
mov
pop
stos
sub
addl
ficomps
sub
lods
cmp
pop
bound
in
je
arpl
movsb
xlat
out
lock
mov
and
imul
insb
pop
or
in
and
inc
cmovbe
orl
les
cli
repnz
dec
and
repnz
or
lahf
xor
mov
mov
test
dec
xor
in
jb
add
pop
popf
rcll
jl
gs
fidivs
jl
inc
mov
scas
leave
adc
push
insb
xchg
pusha
push
mov
sub
cs
mov
jae
xchg
cmpsl
xor
data16
jge
and
aam
lcall
stos
repnz
push
scas
lock
ja
in
fwait
jne
sub
sahf
test
mov
fisubrs
jl
pushf
cwtl
or
fcoml
mov
pop
jne
loopne
fistpll
jg
inc
push
fimull
xor
test
mov
sub
mov
lods
jmp
mov
xchg
mov
int
mov
lods
pop
mov
mov
push
sub
ret
inc
mov
loopne
mov
leave
xchg
jge
orl
push
dec
jp
imul
inc
pop
fmul
filds
gs
cwtl
lea
sub
daa
loopne
cwtl
mov
test
leave
es
adc
cmp
adc
leave
mov
cwtl
pop
lds
scas
adc
icebp
ret
jge
add
in
add
test
and
lcall
pop
push
xchg
fwait
cs
mov
and
xchg
and
or
iret
ja
dec
ljmp
ficoms
mov
js
adc
sbb
push
js
orl
sbb
cld
jns
subb
into
cs
into
ss
js
subb
cmpsl
nop
outsl
sbb
sub
cwtl
jle
pop
pslld
aaa
ds
jno
jmp
mov
adc
movsb
push
popf
jl
or
or
hlt
lods
sbb
int3
aam
xor
xor
xor
and
sbb
and
push
inc
and
in
xchg
rcl
xor
lock
sub
adc
xchg
cwtl
shll
in
mov
pusha
dec
xor
into
jp
sbb
jle
push
loop
mov
and
mov
push
cmc
shll
out
into
push
outsb
cmpsb
insl
or
xchg
push
ja
out
xor
adc
dec
mov
je
data16
ret
inc
jnp
ficoml
cmp
and
adc
dec
push
xor
and
fidivl
movsb
cmp
ljmp
lea
add
inc
ljmp
pusha
add
push
das
psrad
repnz
inc
icebp
dec
into
repz
cmc
dec
jle
push
sbb
out
sbb
mov
movsl
jnp
adc
in
or
adcl
or
jno
add
shlb
or
pusha
adc
mov
xchg
scas
cmp
int3
loopne
jecxz
and
gs
mov
mov
fcom
cld
xchg
orl
rolb
and
scas
mov
inc
jns
lds
in
das
addr16
adc
stos
xor
mov
adc
mov
sub
stos
xchg
push
es
out
fwait
cld
lods
add
mov
mov
and
fwait
xor
gs
out
hlt
adcl
icebp
adc
scas
dec
sub
pop
int3
xchg
fs
out
into
push
jecxz
lcall
shrl
sub
jge
adc
cmp
jg
add
dec
push
and
sub
popa
dec
mov
xchg
mov
xlat
repz
dec
testb
lret
or
out
pop
ljmp
fldcw
xchg
fstl
xor
mov
jbe
stos
cmpsb
sahf
sub
jge
popw
push
pop
test
and
ret
enter
cmp
aam
test
sbb
add
or
mov
inc
repnz
inc
mov
aam
cwtl
sbb
icebp
leave
sbb
shll
pop
pusha
das
fnstsw
dec
and
movb
dec
xor
and
pop
push
jb
add
xchg
les
and
jg
push
push
cmpsb
mov
push
sbb
into
xchg
out
sti
or
mov
iret
xchg
mov
sbbl
clc
sub
xchg
movsb
and
mov
pop
mov
add
pop
fcoml
and
xchg
loopne
pop
and
mov
adcl
ja
sub
mov
shlb
ret
das
in
push
ja
subb
shl
add
mov
divb
dec
push
xchg
cmpsl
and
mov
cmp
fmull
fsubl
mov
sub
mov
xlat
scas
xchg
jp
cmp
enter
mov
xor
dec
aas
stc
int
jl
pushf
dec
xor
out
jne
push
sti
mov
lods
hlt
adc
mov
jno
adc
ret
in
add
push
test
lods
jmp
add
sub
outsl
scas
lods
lret
mov
lds
int
push
inc
jns
xor
jl
pop
jne
inc
lods
in
cli
ret
fisttps
adc
xchg
mov
cltd
data16
outsb
popf
jne
or
enter
test
and
filds
lahf
loop
sbb
lea
push
mov
mov
rcrb
subb
add
mov
adc
mov
mov
jne
and
mov
adcb
mov
sbb
aaa
xchg
bnd
rdmsr
popa
subb
or
cmp
lods
cmp
loop
cmp
iret
sub
pusha
jb
adc
xchg
xor
push
aam
xchg
sub
pusha
xchg
cli
cld
pop
add
pushf
stos
pop
pop
jl
loop
push
push
aam
mov
scas
std
adc
lock
sbb
in
aaa
jge
int
add
aad
jl
pop
lods
jmp
fs
xor
inc
and
in
mov
iret
xor
pop
xor
xchg
clc
inc
aaa
xor
ljmp
xor
inc
pop
les
add
sar
popa
cli
ficomps
push
ss
cmp
jp
mov
test
jns
insb
xor
dec
ljmp
jecxz
ja
cwtl
push
ja
or
xchg
das
jnp
testb
mov
dec
jmp
js
push
ss
rcrb
jecxz
and
sub
adc
std
inc
cs
daa
xchg
mov
push
sahf
mov
outsb
push
mov
dec
or
out
movsl
enter
imul
cmp
jb
test
push
and
xchg
lods
dec
inc
pop
inc
sub
pop
out
mov
sub
mov
mov
push
ljmp
loopne
or
lods
xor
sti
sbb
seto
and
or
das
test
or
mov
rorb
int
mov
pop
add
jb
dec
sbb
mov
std
into
xor
jno
iret
mov
int3
pop
inc
cld
aas
imul
orl
push
out
mov
rolb
in
jge
mov
push
push
rcr
mov
jp
aad
inc
or
dec
push
sub
rclb
adc
cmc
push
dec
dec
lock
sti
cmp
push
xchg
fists
push
sbbb
pop
sbb
ror
sahf
dec
les
sub
add
mov
fsubrl
push
dec
pop
jecxz
rcll
ds
repz
adc
push
fdivr
scas
xor
stos
lea
lea
mov
sete
and
movsl
sub
xchg
imul
xchg
fs
ds
or
enter
mov
nop
jg
js
sub
ficomps
bound
pop
sbb
addr16
or
pop
lock
sub
movsl
dec
jl
or
iret
fsubs
out
bnd
mov
sub
push
sbb
add
jg
xchg
insl
test
cs
mov
shl
jbe
push
mov
cwtl
or
dec
inc
test
rolb
popf
mov
gs
dec
les
fiaddl
mov
mov
outsb
dec
mov
aas
sub
jmp
dec
vpshlb
cmp
sarb
int3
je
outsb
call
mov
sbb
mov
or
loopne
jnp
test
rcr
imul
push
aam
pop
js
xor
mov
cld
cli
xchg
sbb
sub
pop
enter
js
es
sar
pop
shlb
cmp
cmp
mov
mov
cli
adc
push
int3
in
mov
push
movsb
in
leave
leave
inc
xchg
insl
cld
add
jecxz
je
fcmovne
cmc
push
cmp
ss
fmuls
enter
inc
push
dec
and
int
xchg
test
dec
mov
mov
lret
rorb
jo
push
and
add
or
data16
mov
xchg
in
jbe
fmuls
lret
add
addl
xchg
or
push
adc
divb
mov
cli
push
fwait
xchg
and
adc
outsb
inc
ficoml
dec
aad
orb
jbe
insb
mov
aad
pop
sbb
fwait
test
xor
out
imul
pop
cld
jge
aad
mov
cli
outsl
sbb
sbb
mov
xchg
aad
jl
mov
outsb
pop
test
pop
ficomps
test
cmpl
adc
mul
subl
test
pop
inc
or
cmp
hlt
in
data16
enter
mov
jmp
push
loope
ret
fidivrs
repnz
dec
insl
in
xchg
sbb
mov
loop
adc
scas
int
or
inc
popa
push
into
sub
enter
cmpsb
hlt
out
jle
lea
pop
int
out
arpl
jno
out
add
xor
and
add
xchg
daa
and
sub
ja
mov
inc
xor
pop
jge
cmp
int
push
push
pop
incl
loope
push
xchg
ret
xor
in
sbb
leave
int3
lcall
iret
jne
inc
mov
sbb
inc
jge
movzbl
outsl
mov
je
and
in
in
ficoms
or
pop
push
sarl
xor
mov
loop
mov
xor
call
push
outsl
cmp
out
push
jp
mov
add
jne
add
pop
das
loop
popa
xor
lahf
aad
andb
xchg
mov
xchg
mov
cmpsb
adc
jno
cs
inc
pop
adc
les
add
test
xchg
nop
push
mov
add
out
es
push
or
je
dec
push
into
out
popa
push
loopne
mov
inc
setae
push
mov
add
jecxz
xorb
add
or
loope
dec
sbb
or
mov
push
lahf
mov
jbe
xchg
mov
add
icebp
sarb
mov
add
fidivs
out
arpl
inc
sbb
xor
lcall
ficoml
inc
mov
rorl
jns
outsb
es
dec
xor
incl
aas
sbb
add
insl
push
xor
ss
arpl
and
popa
in
imul
mov
mov
push
mov
xchg
xor
sbb
movsl
pop
xor
fidivrl
jbe
sub
cmpsl
test
jmp
xchg
dec
lahf
aaa
movsb
xchg
pop
pop
mov
jl
ficomps
mov
xor
ljmp
pop
aad
xor
rorl
or
mov
cli
icebp
mov
mov
repnz
js
fstpl
mov
sbb
ret
sti
xchg
loopne
lock
mov
pusha
sbb
cmp
je
sub
popf
adc
lock
pop
fimuls
cmp
sbb
in
and
subl
fs
ja
pop
sbb
movsl
sub
scas
push
cld
pop
out
fwait
rcrl
rolb
inc
test
sti
loope
daa
adc
mov
js
mov
push
aam
xchg
adc
xchg
jge
mov
mov
jbe
mov
dec
cmpsl
cmc
push
lock
in
fildll
cltd
adc
stos
loopne
inc
fdivr
je
pop
pusha
adc
scas
or
leave
cmp
add
outsb
gs
shrb
add
xchg
dec
mov
inc
mov
lds
aaa
cld
mov
sbb
push
sub
push
fdivl
sub
lods
jae
inc
mov
loope
rcll
inc
in
mov
inc
clc
loope
ret
fidivrs
mov
mov
lcall
adc
movups
inc
arpl
adc
fidivl
out
dec
sub
outsl
jp
in
ret
dec
stos
lods
pop
orl
xor
hlt
icebp
dec
fidivs
pop
mov
imul
outsb
sbb
push
lea
mov
add
ret
cli
jl
sbb
pushf
mov
mov
sbb
or
mov
mov
jne
std
jle
xor
cwtl
int3
xor
sbb
or
mov
ja
loop
jb
adcb
xchg
sbb
jle
pop
loopne
pop
dec
clc
ds
pushf
loop
bound
lods
mov
ljmp
jmp
xor
pop
mov
imul
sub
repz
mov
and
push
arpl
adcl
loopne
xchg
and
jnp
clc
mov
pop
unpckhps
mov
pop
arpl
pop
jbe
sub
xlat
push
mov
ljmp
subl
mov
inc
fistps
push
je
inc
mov
jne
dec
fstpt
xor
mov
pop
push
pusha
push
sahf
sub
xchg
movsl
xchg
jb
jle
jae
add
cwtl
js
cmp
xor
jmp
sahf
outsb
and
push
push
dec
and
icebp
xlat
inc
push
mov
je
fnsave
xlat
xchg
arpl
inc
sbb
cmp
add
sub
call
lret
jne
jb
stc
jle
lcall
clc
push
pusha
sbb
adc
mov
ret
mov
rclb
xor
ja
mov
push
fidivs
sub
mov
pop
mov
push
aam
cmp
and
cmp
pop
cmc
insl
and
dec
roll
mov
xor
dec
das
cltd
sub
mov
arpl
push
popa
adc
dec
sbb
push
ret
imul
aas
sbb
push
scas
lret
test
cltd
and
lret
cmp
or
push
in
sbb
mov
mov
iret
call
xor
cmp
inc
and
lcall
inc
sub
cltd
xor
in
imul
into
test
dec
lcall
push
jg
sbb
jp
xchg
repz
sbb
mov
outsb
xchg
enter
popf
sub
xchg
jbe,pt
test
imul
cs
mov
pop
sub
inc
dec
andl
dec
sets
xchg
mov
sub
jecxz
push
jmp
cwtl
cld
sbb
xchg
les
fsubr
shll
icebp
and
and
bound
fsubrl
gs
ror
clc
mov
out
test
aaa
cwtl
rcll
inc
dec
pop
and
jl
dec
cmp
into
mov
imul
sbb
call
cmpsl
lock
mov
jb
pop
daa
fcomip
inc
jae
sbb
test
arpl
repnz
leave
sbb
inc
rcll
in
sahf
jl
ret
xorl
xchg
sbb
dec
in
dec
cmpsl
sbb
add
repz
icebp
mov
hlt
scas
cmp
test
pop
xchg
mov
shll
add
adcl
inc
call
add
ror
cmp
daa
add
mov
dec
clc
cmp
xchg
add
dec
rcl
cmp
inc
pop
push
fmuls
dec
and
pop
sub
das
cmpsb
rolb
push
gs
fidivrl
imul
repz
fisubrs
aam
inc
pop
mov
add
jge
outsl
in
out
jne
mov
or
stc
gs
and
pusha
jae
mov
int
adc
shlb
or
pop
sub
mov
lock
mov
insb
popf
pusha
out
inc
nop
sub
imul
aaa
push
adc
sahf
ret
or
sub
aad
subb
dec
and
fsubp
adc
arpl
mov
xor
nopl
test
xor
fsubrl
cwtl
insb
mov
jno
leave
sbb
pop
ljmp
gs
repnz
or
adc
cmp
jle
mov
cltd
sbb
inc
cwtl
xor
push
push
int
pop
mov
fnstcw
out
out
dec
pop
pop
in
ret
je
xchg
movsb
pop
mov
cmp
divb
lods
cmp
fldenv
mov
mov
jns
or
mov
and
pop
xchg
pop
dec
loopne
inc
ret
jno
add
mov
add
fwait
into
fwait
push
add
sbb
dec
inc
call
cmp
dec
cli
sbb
daa
and
enter
xor
divb
or
lods
lahf
dec
lahf
sti
js
inc
lea
out
stos
pusha
sub
dec
push
lcall
mov
cmp
adc
js
xchg
push
insb
xlat
scas
clc
cmp
inc
mov
outsb
sub
sbb
lds
pop
jmp
jle
xchg
push
outsb
cmpsl
mov
lock
push
sbb
mov
mov
clc
pop
stos
or
adc
in
ss
and
dec
xlat
add
aaa
xor
xlat
xor
lea
test
test
add
ds
bound
jnp
xchg
push
mov
movsb
loop
add
sbb
or
insl
xchg
push
pop
jg
mov
jecxz
les
cmpsb
shl
push
inc
xchg
and
fldenv
inc
fisttps
add
push
popa
jmp
inc
outsb
movsb
fcoms
dec
inc
movsl
pop
sub
cs
jl
jbe
je
mov
popl
cli
sbb
mov
int3
test
mov
je
insb
cltd
inc
pop
pop
outsb
lock
ja
sub
rcl
out
in
push
lret
push
xchg
xchg
mov
into
jg
aam
push
dec
jge
outsb
std
push
pop
push
aas
xor
jno
sub
xor
out
pop
mov
dec
and
cmpsb
or
loop
inc
xor
mov
je
mov
xor
decb
jae,pt
mov
pop
push
push
movsl
pop
inc
subl
sub
push
jl
push
loope
push
xor
xchg
test
movsb
ret
pop
add
in
xchg
jg
inc
and
cmp
lret
xchg
pop
aas
xchg
std
mov
insl
inc
lcall
out
cmp
lea
xchg
lods
adc
add
movsl
xor
movsb
lods
mov
add
push
outsl
sub
lods
jle
into
xchg
or
mov
mov
mov
mov
test
sbb
xor
ss
movl
or
aas
loopne
xchg
mov
push
popf
cltd
popa
add
nop
dec
push
faddl
in
rcll
sub
add
cs
sub
jns
stc
pop
cmc
ret
insb
sbbb
mov
ret
or
scas
or
scas
lock
mov
jno
aaa
add
push
mov
aad
cwtl
outsb
jae
jne
mov
hlt
sbb
mov
xchg
bound
negb
mov
push
xor
xlat
scas
lea
mov
pop
into
data16
cmp
add
test
frstor
mov
lods
int3
int
loope
jle
negl
test
push
mov
or
and
icebp
and
roll
pushf
ret
jp
js
hlt
std
mov
jb
js
test
push
out
dec
sub
cmp
call
and
lahf
icebp
ret
xchg
adc
std
cltd
aad
pop
aad
int
or
sbb
mov
dec
imull
cld
addr16
cld
ror
imul
jbe
mov
popf
out
inc
addr16
inc
movsl
out
in
mov
mov
add
insl
inc
dec
push
and
loope
sbb
rorl
push
fs
data16
fnstsw
ret
inc
pop
roll
jmp
add
sbb
sub
cwtl
ljmp
loopne
repz
fsubs
aad
pop
in
rcll
dec
fimull
jns
jecxz
inc
imul
jl
test
mov
adc
mov
imul
cmp
push
and
loop
leave
in
imull
std
sbb
dec
mov
repnz
pop
adc
addr16
in
idivb
dec
mov
sub
lcall
test
fwait
xor
movsb
stos
dec
mov
mov
dec
cmp
xor
xchg
aad
mov
push
icebp
gs
jmp
aad
cli
and
sbb
sub
mov
iret
insb
jl
inc
sbb
jno
out
popf
adc
je
inc
sbb
mov
mov
pop
loop
fisubs
mov
adc
inc
int3
sbb
shll
xchg
add
sahf
cmp
test
sub
dec
test
jae
or
into
adc
testb
mov
inc
xor
sub
add
sbb
cmpl
sub
mov
rorl
lretw
movsb
cmp
inc
lahf
ret
xor
lea
stos
mov
or
mov
shr
outsb
mov
adc
dec
aam
mov
xor
mov
cmp
lods
test
push
ret
lea
shlb
add
imul
xlat
pop
mov
xor
scas
jmp
dec
inc
mov
mov
popf
xchg
or
cs
pop
jmp
data16
fs
cmpsb
cmp
ret
daa
gs
ljmp
cs
mov
aam
test
mov
arpl
movsb
adc
cmp
xor
fidivs
ja
inc
and
push
shl
into
repz
jns
mov
mov
mov
or
inc
lea
shll
in
sub
add
mov
cmovp
adc
xchg
jb
test
xchg
lods
aaa
aas
cmp
mov
sti
mov
dec
lahf
and
pop
xchg
jge
aaa
adc
lret
cwtl
sub
or
loope
push
cmp
jmp
lahf
ljmp
lock
mov
outsb
test
xchg
push
call
xor
mov
push
ret
sub
fnstsw
xchg
pop
enter
sub
adcl
ds
fcomps
addl
out
xchg
inc
mov
movsb
cmp
shl
push
adc
xorl
imul
lods
ret
fisubrs
int
pop
hlt
inc
jle
adc
mov
ficoms
push
xor
cld
setge
xchg
cmp
xor
mov
std
mov
ret
repnz
hlt
push
pop
and
cwtl
popf
cwtl
sahf
dec
adc
add
iret
cmp
repnz
dec
inc
lret
cltd
outsb
sub
cwtl
fwait
and
out
cmp
iret
adc
shlb
fimull
xchg
cltd
pop
pop
lret
inc
call
and
mov
in
push
mov
rcrb
jbe
jnp
stos
pop
xor
mov
dec
pop
and
les
fsubl
aam
mov
fucom
jne
rol
cmp
mov
jns
and
push
setb
imul
in
xchg
jg
ja
popa
jnp
dec
jecxz
call
inc
int
mov
pop
hlt
pop
sarl
sub
imull
test
xor
mov
cmpxchg
sbb
cwtl
sub
dec
jb
mov
lret
dec
sbb
cmp
arpl
daa
sbb
in
jne
mov
mov
pop
out
push
adc
and
out
push
cli
adc
adc
int3
iret
fistl
ret
ljmp
add
sub
clc
lods
sbb
mov
jb
pop
pop
mov
lahf
xor
pusha
mov
jno
mov
rcrb
idivl
filds
jb
xor
cmp
rorb
dec
mov
pop
out
repnz
add
pop
sub
jl
js
je
xor
test
mov
pusha
pop
lret
jo
push
dec
invd
iret
lock
push
mov
cmpsl
pushf
icebp
insl
and
push
dec
mov
dec
insb
add
test
aad
dec
jae
insl
xchg
fsubl
test
ret
inc
idiv
adc
rcrb
test
stc
cmp
add
ss
add
xor
jb
inc
test
fcmovnu
movsl
int
test
xor
imul
adc
cltd
rolb
hlt
or
in
mov
dec
cmp
into
jbe,pt
repnz
cltd
pushf
jbe
lods
xor
mov
jg
jnp
inc
push
xor
jb
jnp
movsb
push
lcall
clc
push
mov
jmp
inc
push
add
sub
rol
aaa
call
shl
adc
fldcw
adc
ficomps
push
loope
cli
std
inc
sbb
std
pusha
mov
push
std
dec
fnsave
popl
outsb
pop
mov
jecxz
ss
mov
or
rolb
inc
repnz
cltd
pop
xchg
shl
movsb
xchg
loopne
test
loop
xchg
imulb
es
mov
cmp
inc
sub
cmp
cmc
cltd
adc
mov
and
shlb
gs
dec
jb
mov
and
jns
in
mov
cld
lods
adc
fwait
outsb
das
cs
movsb
je
pushf
subb
xchg
decl
xchg
push
adc
or
rorl
inc
shlb
ss
arpl
repz
iret
frstor
inc
das
jnp,pt
cmp
pop
sbb
repnz
es
sbb
and
and
adc
fnstenv
and
fidivrl
clc
inc
fadds
bound
xlat
pop
mov
jb
xchg
mov
fs
mov
add
mov
icebp
mov
sbb
and
jae
xor
scas
shlb
ja
mov
lds
mov
mov
mov
cmp
inc
fwait
pop
and
clc
add
mov
and
cs
mov
and
push
lret
sbb
push
rcr
push
popa
cld
out
mov
cmp
lock
jae
daa
fsubrs
fcmovnb
mov
mov
pop
add
push
sbb
adc
imul
mov
ret
movsl
sbbl
inc
cmp
inc
mov
idivb
add
add
cmp
fcoms
int3
lods
cmp
sbb
test
ret
sbb
mov
jp
ljmp
or
ss
scas
cmp
xchg
adc
adc
jnp
shrb
ret
mov
push
or
lret
push
loop
addr16
and
xchg
ss
xchg
stc
gs
fidivrs
lods
or
daa
xchg
cmp
jg
insl
cmp
ret
sub
sbb
mov
aas
lahf
sub
cwtl
push
sub
arpl
mov
roll
movsl
xchg
lret
adc
lods
sbb
pop
and
or
imul
ss
xlat
mov
popf
or
cmp
or
lahf
in
movsl
bound
lds
arpl
xchg
jmp
sbb
fdivrl
icebp
lds
and
es
inc
dec
adc
jmp
pop
movsb
push
fs
call
dec
mov
stc
pop
mov
mov
sti
xor
inc
jae
dec
cmp
sti
in
push
test
mov
inc
mov
ds
adc
mov
inc
or
fs
cmp
aam
sbb
int3
rorb
push
sub
cmp
fmul
mov
mov
shrl
sbb
in
dec
mov
inc
pusha
pop
pop
int
lea
inc
hlt
mov
push
xor
mov
jno
call
fwait
sbb
xchg
inc
mov
test
inc
jecxz
mov
lahf
insl
cmp
adc
jg
inc
cmpsb
fbld
jmp
lds
xor
loopne
out
fld
cli
movsl
ja
jle
sbb
es
sbb
out
sub
test
out
mov
in
jbe
sbb
pop
and
jg
and
push
pop
jo
in
pop
cld
push
movsb
mov
xor
add
imul
jns
sub
and
pop
insl
jge
mov
clc
enter
inc
call
stc
pop
lds
inc
pop
xor
mov
sbbl
pop
push
fsts
popa
push
xchg
push
ret
pop
or
push
cmp
sahf
dec
out
sub
pop
addr16
into
sub
xor
aas
pop
mov
dec
or
or
jmp
repz
loopne
xor
nop
push
je
lret
aas
cld
fsubrp
ds
push
cmc
icebp
test
pop
ret
sbbl
xor
icebp
inc
aaa
sbb
inc
jns
fsubr
out
not
mov
jo
mov
lret
sti
add
cwtl
xchg
enter
mov
cld
stos
xchg
cmpl
sub
ja
std
iret
nop
pop
or
dec
adc
jns
int
call
dec
dec
dec
ljmp
fistpl
shrb
inc
insl
shll
lods
mov
adc
mov
ret
fcmovbe
push
repz
adc
mov
ljmp
xchg
mov
xor
cmp
cltd
sar
push
or
int3
lcall
cltd
jp
imul
jmp
into
lret
xchg
sub
jecxz
xchg
xchg
sub
push
popf
sbb
xlat
push
out
mov
ret
pusha
xorl
cmp
sbb
mov
cmp
sub
jne
testb
popf
cmp
and
push
or
lods
mov
in
scas
scas
test
mov
inc
bound
scas
or
movsb
jne
xor
mov
xchg
push
paddusw
fmuls
lods
cmpsl
adc
divb
js
dec
pop
add
insl
mov
shlb
mov
sub
cmp
imul
mov
icebp
cli
mov
ret
cmp
dec
and
sbb
fldenv
mov
loopne
loopne
inc
imul
lods
add
mov
pop
cltd
ja
adc
xchg
jle
shll
popf
out
int3
or
loope
add
cmpsl
test
mov
push
and
sub
movsb
jl
fbstp
adc
lret
jge
popf
push
ja
inc
and
les
or
pop
mov
xchg
shll
pop
push
mov
sbb
adc
out
call
shrb
jmp
mov
xor
and
sbb
lods
lock
cmp
popl
repz
repz
mov
adc
sub
push
add
push
nop
add
add
das
or
out
movsl
jae,pn
cmp
mov
hlt
aad
ret
lahf
xor
sub
lods
aaa
movsl
and
insb
inc
and
aaa
pop
jp
jns
int3
pop
shrl
fwait
js
jle
in
loop
mov
movsb
cmc
stc
mov
inc
dec
bound
imul
jb
fcompl
push
and
fs
mov
int3
ljmp
call
jbe
jecxz
negb
inc
fnstenv
outsb
mov
cmp
les
lret
ja
bound
add
lcall
xor
adc
popa
sti
popa
sub
popf
mov
and
repz
mov
mov
jns
insb
hlt
cmpsl
inc
lret
xchg
jmp
aas
fs
jmp
adc
pushf
std
addr16
in
mov
pop
push
or
fmull
mov
in
mov
dec
cwtl
pop
xchg
push
pusha
pop
lcall
push
mov
mov
or
cld
fidivs
int3
sub
push
xor
jge
push
repnz
or
sbb
dec
pusha
jno
leave
dec
jl
dec
loope
dec
and
add
aam
and
bound
mov
cmp
push
test
adc
popa
out
in
movsb
sbb
loopne
xor
mov
and
or
mov
movsl
cwtl
add
inc
enter
and
mov
pop
out
test
das
cltd
outsl
inc
inc
sbb
cmpsb
mov
or
mov
shrb
aam
repnz
inc
xchg
cmp
sbb
jle
dec
aaa
pop
xchg
in
lds
stos
mov
cmp
push
and
xchg
mov
inc
or
push
sbb
mov
xlat
xor
bound
lock
mov
cmp
pop
arpl
sub
push
vfrczss
or
push
stos
pop
pusha
mov
sbb
sti
mov
inc
inc
jge
adc
adc
mov
hlt
imul
ds
xor
pusha
cmp
xchg
push
into
xor
outsl
push
fidivrs
xlat
roll
dec
test
lret
cmpsl
ss
aad
mov
pop
stos
out
dec
fimuls
in
popa
pop
loop
scas
sub
jge
cmp
pop
outsl
pop
cmp
enter
outsl
xchg
imul
push
mov
xor
addb
je
fidivrl
pop
inc
outsb
insl
inc
mov
mov
in
add
sbb
xor
shll
mov
mov
cld
dec
jae
lea
xchg
mov
pop
push
push
scas
lock
addr16
repnz
lods
sbb
iret
or
or
lock
jb
cmpsl
rol
test
test
js
add
arpl
jg
imul
fstl
sub
in
loopne
xchg
lock
hlt
cmpsl
mov
pushf
push
mov
sub
lret
loopne
jbe
cmp
fsub
jno
xchg
mov
stc
sbb
std
mov
xor
and
mov
xchg
mov
adc
cmp
popa
cmp
cmp
adc
xor
cmp
and
fs
xchg
aad
insl
adc
sbbb
divb
cmp
push
icebp
pop
push
or
mov
jle
rcll
adc
cmp
clc
mov
mov
pusha
ret
shl
lds
cmp
je
adc
adc
dec
dec
and
stc
cli
fsubrs
or
mov
rcrb
insl
sub
mov
mov
test
push
pop
dec
xor
int3
sub
shl
push
outsb
mov
mov
cmpb
jle
cmc
and
and
mov
jle
mov
sub
or
iret
add
nop
lcall
popw
fildll
pop
bound
mov
jg
sub
push
aas
push
fistpl
cld
inc
mov
fists
nop
jmp
mov
jae
fiaddl
rol
sub
mov
bt
sbb
add
fstpt
or
pop
xchg
in
outsb
adc
pop
shrl
pop
mov
cmp
mov
hlt
mov
test
cmpb
int3
leave
enter
pop
pop
lods
xchg
cmp
arpl
rorl
shr
dec
fwait
call
inc
adc
push
pop
cs
mov
divl
in
adc
sub
daa
outsl
popa
cmp
jnp
leave
adc
imul
dec
mov
cli
fiaddl
jo
xchg
jg
adc
aam
xchg
testb
inc
lea
lods
popa
das
outsl
push
push
sub
add
shr
mov
rcll
fcoms
xlat
rol
and
adc
xchg
hlt
lahf
inc
push
pop
test
cmpsl
stos
sbb
test
faddl
sbb
fs
cmp
in
in
ffreep
in
push
imul
xchg
cs
ljmp
out
jl
jge
insb
adc
cmp
mov
imul
stos
lods
fst
imul
xchg
mov
pop
inc
or
test
shl
in
jle
push
xchg
and
fstl
inc
mov
add
mov
xchg
dec
mov
sub
pop
pop
jg
je
outsl
test
fmuls
popa
incb
rcll
push
cli
in
pop
add
cmp
test
mov
xlat
out
adc
loop
subl
xchg
push
bound
int3
testb
jle
fcmovu
les
dec
aam
adc
fildll
pop
jge,pt
xchg
pop
bswap
sub
rorb
lods
movsb
cmp
sbb
in
jns
mov
cld
dec
ss
arpl
xchg
xor
mov
int3
mov
mov
push
repz
add
inc
out
aas
insl
inc
fdivrl
adc
xchg
and
nop
stos
gs
dec
inc
adc
xor
mov
sti
add
les
fisttpl
xor
data16
adc
mov
fs
mov
xor
add
sub
inc
xor
and
add
js
fs
mov
lcall
iret
and
xchg
into
cmp
or
push
push
mov
ficompl
ret
nop
das
cmp
scas
mov
lods
inc
ljmp
adc
and
decb
movsb
pusha
sti
pop
icebp
sbb
mov
mov
mov
daa
pop
inc
jl
aam
push
stos
jns
xor
mov
ret
mov
dec
mov
cmp
cld
push
into
lahf
and
inc
pop
lea
gs
push
fnstsw
ret
jbe
jmp
inc
jno
or
mov
sahf
sbb
in
mov
imul
iret
push
jbe
push
push
lods
push
xchg
cmp
add
pop
push
fs
sbb
iret
into
jnp
mov
jb
frstor
xor
ficompl
push
xchg
aas
loop
repnz
xor
mov
dec
inc
lahf
push
push
imul
jge
xlat
ja
imul
fsub
mov
dec
xchg
jecxz
roll
loope
sbb
mov
and
enter
sbb
jecxz
jecxz
xchg
sbb
jp
cmpsl
mov
and
js
call
mov
bound
add
sahf
cwtl
push
das
insb
leave
lea
or
adc
dec
adc
ljmp
stos
mov
cmc
inc
inc
ret
sahf
xchg
bound
test
sarb
inc
mov
pop
test
xor
data16
push
pop
dec
mov
jmp
imul
mov
imul
push
mov
cmc
and
in
xor
adc
sbb
mov
ljmp
sarl
cwtl
stc
sahf
jns
or
adc
xchg
sbb
sub
push
inc
xchg
or
sbb
jnp
xlat
mov
jge
stos
cmp
sub
mov
add
xchg
jle
lret
and
setle
xor
ficompl
add
xchg
sub
xor
fucom
mov
jne
pop
pop
push
into
inc
dec
faddl
pop
out
add
xchg
mov
jle
xor
jnp
pushf
icebp
stc
push
pop
stos
out
inc
sbb
mov
jae
and
cmpsl
mov
xor
popf
sbb
mov
loopne
pop
xchg
ds
dec
mov
or
or
cwtl
pop
shr
dec
rorl
jae
out
mov
lock
ret
out
lods
inc
ret
int
scas
mov
js
push
xchg
cmp
lock
jecxz
cmp
inc
add
stc
pop
xchg
xchg
mov
lock
mov
movsb
and
mov
mov
mul
or
mov
adc
ret
xchg
outsb
stc
push
xor
out
sub
jbe
jp
addl
mov
ljmp
inc
jae
cmpsb
negl
je
outsb
mov
push
scas
jns
shrb
mov
movl
vfnmsub213ps
repnz
mov
jo
or
fadds
nop
out
in
aas
adc
psllq
inc
stos
mov
fs
sub
lcall
test
mov
enter
sbb
test
mov
jnp
jnp
dec
inc
pop
jb
sti
sahf
test
jle
pop
push
js
push
popa
jae
addr16
xchg
dec
mov
sub
xchg
inc
and
xchg
jno
jle
mov
fwait
jo
icebp
imul
out
dec
das
fstl
out
fwait
cmp
movsb
add
ret
push
sbb
inc
xchg
jecxz
out
sbb
addr16
outsb
imul
pop
add
inc
push
pop
mov
es
sarb
repz
mov
ljmp
mov
nop
push
std
das
dec
pusha
jno
aam
cld
pop
add
rorb
xor
push
dec
jl
or
jle
popf
adc
imul
repnz
or
pop
xchg
in
enter
sub
xlat
and
cmc
adc
hlt
ficoml
sbb
pop
and
xchg
inc
mov
shrl
mov
cmp
out
xchg
idivb
cltd
push
test
jge,pt
jp
mov
push
sub
pushl
jb
jb
js
aad
jnp
scas
nop
xor
cmovl
add
into
enter
mov
xchg
jp
daa
rcll
stos
arpl
lret
sub
leave
mov
mov
dec
arpl
xor
mov
sub
add
mov
std
pop
push
movsl
les
imul
dec
jge
in
adc
aam
mov
sbb
sbb
inc
or
sub
in
cmp
push
lret
mov
data16
out
adc
jmp
loopne
xorl
and
ret
or
mov
pop
cld
aam
mov
inc
ljmp
and
out
mov
pop
xor
mov
jp
xor
push
loop
bound
jae
and
pop
pop
pop
jns
shrb
mov
inc
adc
jne
inc
pop
cmp
pop
daa
adc
mov
repz
cmp
push
fisubrs
mov
xor
ljmp
test
frstor
aas
loopne
adc
pop
dec
fcoml
inc
rorb
sub
push
loope
out
dec
push
fs
sarl
outsb
cmpb
push
ret
or
dec
stos
inc
mov
lods
dec
jae
xlat
push
mov
stc
xchg
push
push
mov
xchg
xchg
cmc
sub
mov
xlat
je
cmpsl
nop
das
mov
out
test
icebp
jge
cld
push
mov
add
xchg
push
xchg
xchg
xlat
xchg
es
jb
outsb
and
mov
aaa
ss
jno
lods
stos
adc
xor
cmp
iret
mov
cwtl
stos
dec
lods
jge
das
popa
adc
cmc
les
inc
push
push
andl
call
mov
lret
push
xor
test
arpl
pop
jle
icebp
popf
fmuls
mov
icebp
cmpsl
xor
lods
add
sbb
jecxz
adcl
jns
ficomps
xchg
sub
in
push
pusha
cld
cld
sub
mov
xor
jns
and
in
lods
mov
pop
mov
fsub
or
shr
sub
xchg
imul
mov
gs
in
push
mov
sbb
sbb
push
xlat
test
popa
and
stos
cmp
inc
enter
out
in
sub
add
xchg
idivb
je
pop
insb
xor
cmp
add
popa
sbb
push
ja
push
dec
and
push
daa
jle
sbb
pop
imul
stc
mov
adc
pop
scas
pop
sbbb
xchg
mov
jl
push
mov
ja
fdiv
or
stos
ret
icebp
mov
push
and
aam
movsb
hlt
rcrl
decl
xchg
mov
popa
inc
pop
xor
pop
int
loop
jmp
arpl
mov
insb
or
hlt
loop
shr
mov
add
sub
test
xchg
mov
pop
fistpll
dec
xor
loope
push
sbb
xchg
sarb
pop
fmuls
stos
adc
adc
push
pop
add
aad
or
btr
stc
and
movsl
and
int3
pop
push
cmp
bound
stos
xchg
inc
int
mov
or
sbb
stos
aaa
push
loopne
push
clc
add
clc
nop
insb
mov
cmp
loop
aam
mov
xor
push
movsb
jmp
cld
cmpsl
stos
hlt
aaa
cld
es
test
add
or
gs
cmc
sub
ds
out
mov
xor
push
jae
inc
pop
sti
or
imul
jns
test
jne
stos
loope
fstl
mov
mov
addr16
jle
in
cmpb
dec
inc
into
fcoms
stc
or
jno
mov
loopne
xor
adc
insb
je
inc
add
mov
push
push
push
rorb
dec
lret
sbb
mov
outsb
das
cmp
lret
xchg
out
test
add
repnz
push
jnp
xchg
sbb
mov
cmp
adc
sbb
sbb
js
push
xchg
sub
cmp
in
sub
insb
das
sar
loopne
jecxz
or
and
xchg
mov
or
in
lret
pop
and
ds
in
add
stc
push
mov
loopne
stos
push
dec
xchg
cmp
mov
das
roll
les
sbb
sub
shl
in
fwait
adc
sahf
or
or
fs
mov
cmpsb
in
sti
push
mov
push
stc
sub
into
ret
pushf
cli
xor
inc
in
xchg
and
shlb
shll
and
aam
xchg
pop
test
fisttps
inc
call
daa
sbb
clc
jl
xorb
push
cmp
push
fwait
cmp
in
xchg
stos
and
iret
pop
sbb
push
sub
push
add
pop
jle
addl
out
lret
sbb
popf
push
lock
sub
movsb
mov
push
movsb
inc
sti
lahf
aas
jecxz
rorb
pop
into
jmp
adc
aam
xor
sbbb
dec
popa
std
sbb
lcall
cmp
sub
jmp
js
sbb
mov
out
mov
into
pop
cmp
add
mov
fsubrl
cmc
pop
icebp
inc
xchg
add
lea
lcall
cltd
jns
jae
push
loopne
jp
dec
cmp
push
test
inc
lods
push
test
in
mov
xor
pop
sub
ss
jecxz
cmc
cwtl
inc
cmp
adc
sub
cld
xchg
sbb
add
int3
sbb
cs
cwtl
adc
sbb
xor
adcb
ja
leave
add
stos
shl
or
shl
dec
cltd
push
shl
mov
cmp
mov
sub
and
xchg
sbb
std
dec
cli
mov
mov
cmpsb
cltd
std
cmp
or
cmp
dec
dec
iret
repnz
sbb
lret
outsb
mov
inc
lods
xchg
jo
fsubrl
cmp
mov
cwtl
dec
shll
or
inc
cmp
rol
loopne
daa
aas
mov
scas
sbb
push
fldt
iret
pop
mov
pushf
gs
push
fldcw
sub
movsb
fucom
testb
jecxz
repz
mov
xchg
das
outsl
xchg
add
dec
in
imul
add
and
movsb
rcrl
lahf
and
pop
ss
mov
int3
popa
dec
push
lods
inc
cld
mov
add
nop
xor
jns
leave
insl
iret
lret
or
mov
fs
fnop
hlt
jnp
setns
xchg
enter
dec
mov
sbb
sti
add
mov
aad
orl
xchg
popa
mov
sbb
pop
repz
mov
mov
xchg
lds
scas
ficomps
xor
and
pop
cmp
push
wbinvd
movsl
push
jecxz
loop
shll
lds
jnp
push
fnstsw
or
push
push
xlat
ds
imul
daa
adc
adc
test
ja
popa
leave
aam
cmp
pop
outsb
inc
sbb
stos
dec
icebp
add
enter
mov
arpl
js
mov
pop
sbbl
cmovb
cmp
push
lcall
mov
scas
inc
leave
jmp
xor
lds
jnp
jno
sub
and
or
pop
mov
popf
popa
mov
pop
cli
jo
mov
dec
xchg
subb
divl
lcall
pop
insl
sub
fcoml
sbb
xorl
ds
int3
and
sbb
xchg
xor
push
pop
in
gs
push
xor
mov
mov
lods
mov
shll
fcomps
xor
stos
ret
repnz
xchg
cli
mov
lret
jge
movntps
inc
ret
jg
stc
push
cmpsl
mov
push
arpl
sti
flds
bound
popa
mov
xlat
pcmpeqb
inc
ja
inc
xor
pop
into
mov
outsb
pop
loop
and
in
movsl
les
push
ljmp
push
jle
pop
mov
jmp
iret
bound
ss
lahf
add
and
hlt
sbb
inc
cmpsl
les
pop
pop
stc
push
out
ds
add
mov
xchg
or
jge
xchg
mov
iret
rcrl
fcoms
cmc
xor
insl
test
lret
mov
outsb
jle
inc
or
and
xchg
outsb
pop
add
jne
pop
and
mov
pop
fwait
mov
lds
cmp
movsl
mul
stc
push
ffree
mov
add
out
sub
lea
jmp
addr16
sbb
das
dec
inc
and
ficomps
pop
outsl
in
jle
dec
shll
mov
into
rorl
ja
mov
jns
dec
lock
lret
inc
dec
push
mov
mov
repz
lret
xor
clc
rcll
jns
or
popf
out
push
insl
sahf
pop
pop
xor
xorb
push
xchg
call
pop
xchg
or
xor
fstp
ds
and
sub
sub
push
xor
insb
mov
nop
pop
mov
or
mov
cmp
push
push
cmp
push
sub
and
insl
and
push
xchg
nop
or
inc
xlat
inc
loopne
loopne
and
loop
xlat
out
inc
scas
xlat
mov
test
add
mov
test
sbb
mov
lock
in
lds
scas
jbe
mov
xor
movsb
cld
incl
icebp
add
xchg
stos
jp
dec
cs
push
addl
cli
movsb
xorl
lcall
test
or
add
inc
stos
xor
ret
xorl
inc
popa
mov
push
mov
shlb
fmull
mov
cmp
sbb
in
ret
xor
adc
xchg
push
movsl
pop
push
cmp
js
inc
popf
ret
sbb
xor
inc
sub
mov
cmp
pop
mov
shrb
cli
clc
stc
sbb
mov
jmp
cltd
stc
xor
cmpsl
in
and
cmpsl
add
and
in
and
jecxz
mov
rolb
xchg
mov
clc
mov
push
inc
aaa
lret
adc
es
push
adc
push
mov
outsb
int
pop
loopne
adc
sbb
setle
je
xor
mulb
outsb
dec
mov
shrb
dec
insb
icebp
mov
call
and
push
into
daa
enter
aaa
insb
dec
xchg
outsl
into
mov
ret
sub
addr16
fsubs
test
xchg
inc
test
xor
ljmp
pusha
xor
inc
pop
mov
xchg
adc
in
or
iret
dec
ss
movsb
rep
call
add
mov
xor
push
mov
xchg
mov
enter
xchg
fsubrs
cmp
jmp
test
negl
xlat
xor
mov
and
cmp
xchg
shl
lcall
xchg
pop
mov
out
rcrb
popa
out
cmp
das
out
mov
repnz
cli
cwtl
jl
ljmp
dec
sub
and
das
pop
adc
mov
push
ret
jns
cltd
aad
in
mov
jnp
jae
lock
sub
or
cli
adc
sarb
pop
bswap
imul
pop
imul
test
inc
loopne
dec
push
in
adc
imul
out
jbe
fcmovnb
xor
dec
or
fisttpl
cwtl
xor
jg
fs
mov
xchg
test
pop
rol
mov
adc
and
andb
jecxz
push
arpl
fmull
add
outsb
shll
inc
adc
pop
iret
inc
xor
stos
cmc
out
or
xchg
dec
mov
lcall
int
sbb
jp
stos
movsl
dec
or
movsb
lea
mov
adc
scas
fs
mov
out
xchg
cmp
add
mov
xor
pushf
out
or
ds
lods
add
loope
jge
xchg
ret
mov
or
add
popa
pop
out
jae
or
cmp
inc
pop
push
jno
mov
clc
push
test
adc
insb
popf
cmp
add
stc
xchg
lds
pusha
and
je
in
sarb
sbb
in
es
lods
in
cltd
jo
mov
test
nop
inc
xor
fs
dec
sahf
mov
xchg
push
lea
mov
pop
lock
fdivs
jnp
lret
or
push
push
fadds
jbe
xorb
mov
sbb
cmp
sbb
mov
xor
adc
cmpsl
xlat
imul
xor
xchg
rcll
push
cld
dec
mov
scas
movl
cmp
scas
test
ljmp
aad
mov
xchg
pop
ss
sbb
pop
adc
jb
jne
clc
or
rcr
dec
sti
mov
and
xchg
lods
adc
adc
js
mov
in
xchg
jl
jmp
pushf
xor
cmp
and
outsb
adc
dec
popf
adc
fistpll
loop
insb
inc
mov
xchg
push
xor
mov
push
bound
out
and
dec
ljmp
or
lret
dec
or
push
outsl
mov
gs
out
aaa
hlt
mov
out
mov
jnp
lret
addr16
stc
adc
aam
jbe
ljmp
cmp
xor
cmp
xchg
insl
rcrl
push
inc
inc
add
lret
pusha
push
jnp
jl
pop
lds
inc
lea
mov
dec
xor
sahf
push
xchg
stc
xchg
cmpsl
mov
dec
cltd
std
lods
sbb
imul
fists
sbb
inc
or
pop
mov
repz
imulb
pop
lahf
js
ret
ret
mov
cmp
scas
dec
mov
lret
cs
nop
dec
in
outsb
mov
lods
outsb
js
cltd
or
popf
or
sub
pop
pop
adc
inc
xchg
adc
xchg
cmpb
bound
pop
cmp
test
pop
xor
ja
sub
dec
jmp
jae
ret
sbb
pop
aam
or
iret
dec
push
xchg
dec
enter
sahf
xor
arpl
filds
jno
mov
pushf
pop
in
xchg
or
add
sub
sub
and
jbe
in
fstps
xor
shrb
jb
lret
pop
xchg
sub
shll
and
xchg
inc
sti
sub
iret
dec
mov
mov
mov
stc
or
jecxz
push
dec
jns
pop
jg
push
jge
and
out
add
mov
lret
aam
add
js
shrb
mov
sbb
cs
inc
jo
pop
mov
movsl
pop
jno
push
imulb
pop
cld
popa
mov
fisubs
jmp
push
movlps
sbb
std
xlat
cmp
push
ffree
mov
lret
in
fwait
call
mov
adc
sub
sub
fstpl
outsb
rol
push
ljmp
dec
fwait
adc
inc
shll
lahf
cmp
cli
fsub
push
push
popa
xchg
ror
xor
pop
mov
xchg
jl
sub
inc
sub
out
incb
lock
cmp
shll
scas
out
mov
xchg
cld
sbb
addb
pusha
push
mov
sub
mov
jecxz
movsb
add
pushf
adc
lods
inc
lods
push
ret
pop
clc
cltd
mov
mov
insl
bound
popf
cli
mov
push
jns
jb
mov
jns
cmp
add
cs
push
in
push
pop
jnp
mov
xor
cmp
sarl
or
dec
ret
fidivrl
or
jmp
mov
insl
loop
sub
out
pop
push
test
int
movsl
mov
shll
inc
or
inc
out
xor
cld
adc
dec
adcl
and
inc
add
jnp
les
out
test
in
adc
scas
movsl
lcall
and
jle
scas
mov
jge
or
sbb
lea
pop
mov
sub
iret
inc
add
shlb
pop
in
jp
pop
or
dec
je
aam
shrl
test
jge
mov
xchg
dec
xchg
sub
mov
pop
sbb
mov
and
jne
loopne
add
ds
pop
pop
add
xor
jb
add
sarl
mov
and
push
xorb
not
xor
inc
test
push
jne
test
int
cli
cmp
adc
sub
call
repz
and
lea
fildll
fsubs
iret
arpl
insb
mov
jns
mov
or
xor
jl
sti
aad
addr16
bound
push
pop
loope
cmp
mov
into
and
add
sbb
pop
fsts
push
loopne
jp
daa
inc
pop
das
cmp
mov
pop
jns
dec
test
js
adc
out
pop
and
inc
test
push
push
cmp
test
shlb
ss
sub
aaa
in
test
ss
jbe
gs
mov
fbld
pop
and
out
in
test
sub
or
popa
mov
sbb
fistl
cmp
cltd
and
cmp
mov
pop
jmp
cmpsl
pop
mov
jno
pop
mov
jl
lret
aam
scas
mov
lea
std
je
shlb
fidivrs
pop
mov
push
mov
mov
aam
xor
out
cmp
dec
in
cltd
sbb
fsubl
test
jmp
ret
inc
pop
outsl
pop
sar
pop
lret
gs
cmp
cmp
or
lds
push
xchg
xor
adc
adc
cmpl
push
scas
lcall
fstp
pop
xor
not
popf
cmp
mov
and
addr16
adc
jecxz
lcall
push
dec
outsl
mov
popa
or
ret
xor
cmp
cmp
xchg
add
pop
sbb
mov
movl
fbstp
lcall
inc
mov
outsl
pop
lds
sub
push
add
push
mov
xchg
xchg
test
xor
push
sub
cmpl
or
dec
in
jns
in
inc
das
addl
push
or
pop
xlat
sti
in
out
mul
and
pop
mov
dec
test
es
jo
jecxz
stos
ds
fnstcw
outsl
les
sbb
pop
sbb
sbb
xor
gs
sub
pop
fisttpl
pop
repnz
dec
adc
mov
cwtl
cmp
push
mov
and
pop
mov
sahf
aas
jbe
sbb
inc
outsl
push
push
adc
mov
xchg
jp
scas
mov
cmpsl
fcmovne
pop
or
movsl
pop
int
aaa
xchg
jle
add
imulb
xor
cmp
push
loope
scas
cmp
or
pushf
cmpsb
mov
flds
out
icebp
push
push
cmc
adc
fsubrl
push
stos
rolb
xchg
adc
adc
mov
js
add
and
cmp
stc
ljmp
mov
jae
ret
add
out
and
outsb
gs
jg
sti
inc
xor
inc
daa
int3
pop
outsl
mov
sbb
pop
rcll
pop
inc
into
mov
or
sub
or
in
out
sahf
cmp
daa
test
pushf
pop
fidivs
inc
icebp
sbb
addr16
xor
fs
cmp
jno
mov
push
loopne
mov
ss
inc
push
pop
pushl
fidivrs
mov
xchg
aam
xchg
xchg
lret
std
addl
fimuls
loope
ret
fwait
call
ja
mov
mov
cmp
inc
sub
dec
lea
pop
incl
sub
movsl
mov
imul
cmpsb
and
and
sar
cmpsl
test
fs
cmp
pusha
mov
in
push
xor
out
aaa
cmp
mov
aad
and
add
lds
sbb
mov
outsl
pop
aas
jmp
push
mov
mov
leave
or
cmp
fisubl
aas
dec
inc
arpl
repz
sti
jb
sub
call
dec
imulb
cwtl
mov
pusha
mov
mov
jae
cmp
cmpsl
shr
xchg
sbb
je
je
jns
cs
pop
sub
movsl
push
call
data16
inc
jp
push
adcl
cmc
loope
jo
add
in
popf
mov
and
xchg
ss
pop
int
adc
cwtl
jo
or
imul
mov
mov
fwait
in
and
out
jmp
push
xlat
add
sbb
push
popa
jbe
test
cmp
aam
sbb
sub
push
aad
nop
aas
test
mov
or
decl
add
cmp
in
rcl
push
stos
pop
int
rclb
aaa
fsubr
add
sarl
insl
mov
andl
jae
loope
pop
insl
inc
jle
pusha
cmp
gs
aam
shlb
cld
icebp
je
in
aad
in
add
xchg
sbb
mov
mov
in
loopne
push
jno
ficoml
and
and
mov
add
pushf
dec
and
pop
add
mov
or
dec
mov
out
sub
mov
push
fmuls
jns
neg
fstps
jp
push
addr16
or
iret
ret
imul
xchg
mov
les
popa
into
sub
ja
sub
int
or
ret
pop
js
xchg
pop
mov
or
fcomps
clc
imul
outsb
iret
cmp
dec
cmpsl
pop
pop
mov
xor
add
xor
sbb
dec
xor
inc
fcomp
and
push
into
xor
std
push
mov
enter
fsubl
frstor
mov
fwait
ljmp
cmp
mov
and
push
inc
mov
js
jmp
add
xchg
and
clc
push
insb
aas
fwait
int3
sub
int3
push
push
pop
hlt
or
js
jg
test
cmc
push
mov
push
stos
pop
add
mov
mov
pop
jns
pop
rclb
clc
add
push
test
out
cmp
mov
mov
mov
or
dec
cmp
pop
jb
in
jmp
ret
stos
icebp
sub
mov
imul
dec
xlat
bound
xchg
pop
testb
and
mov
mov
pop
dec
out
sti
mov
pop
pop
fwait
sub
xor
pop
in
sbb
bound
iret
ljmp
jp
cmp
roll
mov
or
je
outsl
sub
je
jns
sub
xchg
fcoms
mov
jae
mov
test
sti
xchg
jle
out
into
aad
or
mov
movsb
cli
in
sub
push
adc
test
inc
addr16
pop
sub
fsubp
gs
or
rcll
mov
inc
stc
cmp
movsw
mov
fs
fsubl
push
xor
sbb
push
push
aaa
sbb
and
imul
imul
add
sahf
loope
xchg
out
lahf
mov
mov
xchg
xchg
lds
pop
ret
cmp
xchg
pop
xor
mov
add
ret
add
in
das
jns
repz
sar
fisttpl
scas
jecxz
fisubrl
imul
xor
xchg
jns
xchg
pushf
arpl
mov
aas
out
push
pop
xchg
add
sbb
dec
dec
jno
xchg
xor
xchg
and
xor
je
in
in
aas
xchg
xor
jo
dec
ret
xor
adc
ljmp
repz
fstl
fst
cmp
xchg
add
paddw
and
push
movsb
inc
jmp
adc
adc
xchg
pop
insl
mov
xor
std
push
mov
pushl
ljmp
dec
inc
sbb
aam
imul
cli
in
out
jmp
pop
int
pop
loop
sbb
push
or
jb
adc
cmp
lea
fmuls
pusha
pop
dec
mov
je
mov
mov
push
sub
jg
push
fwait
adc
in
mov
jmp
cwtl
int
cli
icebp
lret
enter
xchg
fld
cwtl
dec
loop
mov
in
mulb
push
mov
xchg
xchg
lret
fldl
push
push
mov
or
and
mov
jecxz
cmp
dec
mov
das
mov
daa
xor
sbb
clc
je
mov
into
mov
enter
xlat
fst
in
lds
xor
mov
lcall
int3
jmp
mov
xchg
jns
push
movsl
mov
push
pop
sbb
pop
sbb
sub
repz
jbe
push
dec
rcr
jbe
ja
adc
rclb
notb
mov
mov
cmp
mov
lcall
pushf
pop
push
scas
push
je
out
fstps
pop
aas
sub
dec
pop
add
mov
out
idiv
xchg
xchg
outsl
movsb
sbb
jg
cmp
or
xor
rorl
out
pop
cmc
or
bound
jle
and
das
test
mov
or
fistl
cmp
lods
lcall
daa
sbb
inc
sbb
cmpsb
outsb
data16
inc
sbb
mov
leave
aam
and
inc
inc
stos
mov
rcr
sub
ret
ja
mov
push
fnstcw
xchg
mov
scas
xorl
lcall
stos
push
roll
adc
push
repz
mov
push
mov
pushf
loopne
jmp
lock
lret
data16
popf
lock
lods
mov
insl
sbb
and
mov
inc
xchg
push
dec
cmp
and
mov
test
dec
mov
and
inc
addr16
mov
stc
nop
push
mov
inc
popf
xor
jge
sub
cmp
out
lods
nop
daa
ja
ret
out
sbb
jl
sub
inc
adc
cwtl
cli
into
dec
sub
pop
pop
jb
outsl
xor
jge
sar
hlt
ljmp
out
jg
ret
mov
dec
xor
mov
xchg
pop
test
fwait
mov
cmp
xchg
cmpl
cmpsb
jle
aaa
ds
mov
jbe
mov
dec
mov
fcmovnu
inc
sbbl
inc
xchg
cmp
call
jae
inc
fimull
jmp
jp
xchg
sbb
pop
mov
jge
mov
pop
mov
andb
jnp
fdivrs
jb
js
push
cmp
cmp
lcall
or
popa
xor
xchg
mov
xor
into
dec
fistpl
aam
stc
js
and
inc
ss
imul
add
sub
cmp
and
add
xor
popa
cli
cmp
pop
xor
push
dec
test
mov
imul
aad
push
in
fnstcw
ret
repnz
cld
fstpl
dec
imul
inc
fdivrs
push
mov
or
lret
inc
negb
jno
in
gs
int3
shr
adc
pop
roll
fisttps
pop
and
popa
out
daa
push
or
push
or
push
aas
sbb
mov
push
outsl
inc
incl
aaa
mov
jp,pt
cltd
or
xor
lods
xchg
or
sbb
inc
xor
xor
negb
add
xchg
push
rorb
repnz
call
pop
bound
fldt
bound
and
arpl
mov
mov
loopne
mov
pop
pop
ja
dec
test
jge
mov
rclb
adc
push
dec
cmpsl
mov
push
xor
and
test
int3
mov
imull
xor
outsb
add
xchg
push
mov
jae
lea
push
push
aad
inc
shll
mov
adc
push
xchg
mov
xchg
sub
dec
xchg
mov
pop
sbb
xchg
ljmp
movsl
fld
add
jmp
fucomip
fucomp
icebp
addr16
cli
mov
jns
pop
push
notb
jnp
xchg
cld
pop
and
mov
fsubrl
icebp
and
shll
aam
push
cmpsl
lds
pop
inc
inc
xchg
jbe
lret
push
or
and
xchg
stos
lret
and
out
lds
add
xlat
jge
sbb
aad
lea
push
ret
mov
push
xor
adc
outsb
dec
sub
pusha
inc
cmp
mov
jle
sbb
loopne
mov
jecxz
mov
jle
mov
shll
sbb
lcall
push
ret
add
pusha
subl
aas
push
fwait
xor
sbb
lods
dec
sub
mov
or
loopne
dec
mov
or
imul
stos
jno
dec
jl
xchg
xor
pop
pop
xchg
bound
sub
sti
loope
xchg
pop
inc
or
test
aas
sbb
popf
fbld
or
cmc
pushf
imul
push
repnz
cs
xchg
bound
or
popa
sbb
mov
push
dec
xor
mov
push
adc
inc
sbbb
sti
rorl
and
adc
sti
scas
mov
mov
and
sub
stc
xchg
js
mul
addl
scas
mov
repz
addl
test
cmp
popf
cmp
push
test
andl
mov
mov
jle
dec
stos
fistps
xor
cmp
and
push
cmp
test
cmpb
cwtl
lods
idiv
lods
jg
pop
push
mov
adc
movsb
inc
or
aam
idivl
cmp
dec
lret
jns
leave
pop
insl
xor
jns
or
add
cmpsl
icebp
scas
sub
stc
add
sbb
fnstenv
inc
cmp
pop
rorb
jbe
shll
push
mov
and
mov
ss
movsl
sahf
ret
push
sbb
popf
jge
loopne
adc
xchg
sarb
jo
jns
cmc
inc
imul
test
flds
and
adcb
aad
push
mov
xchg
adc
insl
sub
mov
sbb
jl
mov
jle
outsl
clc
mov
ja
icebp
jge
cld
aam
bound
aad
dec
movsl
or
insl
pop
lcall
stos
out
lea
lret
bound
repnz
inc
adc
pop
adc
push
inc
xor
cwtl
inc
aaa
lods
mov
std
cmpsl
lret
call
jg
gs
xor
jp
movsl
not
repz
pop
and
mov
not
mov
ss
jb
sub
pop
aam
lret
mov
jle
push
test
dec
xabort
xlat
adc
cmp
jmp
dec
sahf
hlt
fwait
test
int3
les
pushf
into
loope
fiaddl
mov
push
bound
lret
push
loopne
cmp
ja
outsl
cltd
insl
xor
mov
ret
rcl
out
dec
sahf
xor
mov
add
xchg
sbb
dec
adc
roll
and
fdivrs
mov
fs
add
scas
shll
movaps
adc
mov
mov
xchg
push
icebp
dec
or
pop
shrl
xor
enter
jno
in
jmp
aaa
adc
add
ret
adc
mov
nop
pop
bound
das
imull
stos
inc
gs
and
push
and
dec
pop
lret
lcall
mov
outsb
add
mov
cmp
stc
cmp
push
jbe
add
cmp
inc
daa
bswap
fnstcw
rcrl
mov
sbb
mov
jl
adc
iret
jae
pop
mov
bound
mov
insl
enter
jmp
es
pop
test
xchg
addl
insb
xchg
mov
movsl
daa
in
dec
mov
fs
outsb
test
xchg
inc
dec
rcrb
xor
repz
nop
push
push
sbb
daa
test
popl
leave
add
mov
pusha
ds
das
int
fistpl
push
lock
jge
sbb
lret
push
dec
dec
mov
pop
xlat
repz
jmp
dec
ret
sbb
ret
test
mov
test
push
or
and
jae
xchg
xchg
movsl
fucomip
jne
mov
test
les
add
rolb
lods
xor
leave
lea
sub
fdivl
lret
cli
jecxz
and
sub
cmp
cmp
arpl
lock
fisttps
std
mov
out
push
adc
inc
aaa
in
imulb
xchg
jge
mov
mov
dec
sub
mov
loope
jb
and
push
aaa
ds
mov
in
push
or
push
xor
movsb
mov
push
rcr
mov
icebp
test
stos
mov
inc
lock
pop
loop
push
jl
mov
add
cmpsb
inc
scas
cs
sbb
mov
vpaddsb
push
scas
mov
in
flds
call
sti
push
cmp
test
fidivs
fnsave
movsl
jbe
mov
mov
mov
shl
int3
sbb
add
aad
loopne
sbb
daa
push
movsb
les
mov
push
adc
rclb
dec
pop
xchg
inc
bound
loope
add
std
pop
stos
xchg
shll
aad
movsb
mov
inc
dec
fldenv
push
adc
je
xchg
cli
stos
std
cmp
or
in
fcompl
cmc
mov
je
add
ficoms
in
push
inc
jp
insl
jno
cld
mov
mov
inc
mov
arpl
stc
repnz
xor
and
push
cmp
mov
mov
mov
push
mov
outsl
mov
add
pop
xchg
cwtl
popf
mov
mov
jbe
mov
daa
and
ret
mov
inc
mov
sub
cli
out
inc
stos
push
mov
jno
cmpsb
aam
xlat
jns
imul
movsb
mov
mov
and
leave
lods
xor
push
insb
insb
mov
xchg
jecxz
aas
test
test
fistpll
loop
mov
icebp
pop
lcall
push
inc
pop
in
popa
test
pop
jg
pop
mov
dec
sub
stos
jns
aas
mov
inc
sub
call
lret
cmp
jmp
and
cs
outsl
into
adc
scas
scas
pop
loop
stos
pop
or
cmpsb
bound
mov
xchg
addb
imul
push
pop
insl
hlt
cli
loop
sub
in
xor
jno
insb
push
jb
arpl
bound
jb
sahf
mov
xlat
pop
mov
sub
adc
mov
ret
test
loop
int
in
xchg
and
stos
rol
or
gs
inc
imul
cmp
and
out
lods
xchg
andb
cmp
push
test
stos
xor
stos
insl
add
jmp
and
inc
mov
shll
sahf
or
pop
xchg
stos
and
add
xchg
fimull
data16
fbstp
popf
pop
inc
int3
pushl
sub
sub
mov
out
mov
fwait
mov
dec
push
add
mov
jno
adc
test
stos
decb
pop
jl
jmp
cmp
sub
or
jae
test
xchg
aas
adc
decb
andl
jecxz
aaa
dec
xchg
jmp
or
cmpsb
mov
sti
test
icebp
mov
andb
sbb
jge
xchg
inc
xchg
fidivrs
dec
dec
mov
pop
jl
jne
rcll
lret
mov
in
cmp
jne
popf
addr16
cld
or
gs
mov
sbb
lock
sbbb
xor
sub
mov
jns
fsub
rclb
loop
mov
sub
scas
ljmp
push
push
inc
add
dec
push
xchg
adc
pop
mov
add
or
notb
jnp
lods
push
iret
or
sub
aas
push
leave
stc
enter
not
shll
inc
sub
xchg
stc
lret
add
or
imul
cmp
add
add
push
jg
push
add
cmc
pop
and
fwait
and
pop
rclb
push
ficoml
push
roll
insb
ss
mov
mov
add
xchg
loop
pusha
push
adc
add
out
xchg
jo
mov
nop
stos
fiadds
fsts
les
shrb
lock
aas
mov
mov
fadd
rcrl
outsl
mov
cmp
xchg
mov
push
pop
xor
mov
adc
jg
pop
mov
cmp
sbb
ret
cwtl
jmp
mov
shrl
lcall
dec
stos
mov
out
and
pop
cld
mov
mov
inc
loop
or
testb
cmp
insb
lods
popa
out
xchg
test
xchg
jno
mov
mov
inc
mov
jo
sub
mov
jecxz
or
pop
and
imul
popf
inc
out
das
sub
or
imul
mov
jmp
xor
sub
cmpsl
cmc
cmp
adc
cmpsb
adc
push
mov
and
jo
cmpsl
outsb
jg
pop
fwait
jo
les
dec
out
icebp
inc
jb
fidivl
subl
ja
shrl
or
jb
mov
pop
xchg
andb
push
cli
jmp
push
out
mov
or
rcr
xor
insl
sbbl
and
sbb
dec
fisubs
cmpsb
xchg
xchg
jbe
adc
jns
fcompl
ucomiss
faddp
aad
cwtl
mov
ficoms
icebp
xchg
leave
push
cmpsl
femms
fiadds
adc
inc
sub
sbb
test
dec
fsts
or
jmp
push
es
stos
cwtl
pop
mov
and
lock
mov
xchg
mov
push
mul
enter
mulb
mov
repz
add
insb
js
int3
aam
mov
daa
shr
sub
int3
sbb
mov
xchg
imul
jl
lock
out
outsb
fisubl
icebp
aam
call
mov
movsb
sub
or
sub
push
fcompl
mov
or
or
fldz
jb
lret
test
clc
add
pop
pop
pop
push
adc
or
ret
dec
add
adc
jb
gs
xorl
fimuls
mov
ror
mov
jmp
add
fisubl
ss
aam
je
fdivs
sbb
push
ss
repz
mov
dec
ja
mov
mov
pop
sub
or
inc
pop
xchg
pop
in
or
or
or
or
scas
shlb
push
mov
xchg
popf
adc
setne
xchg
lds
mov
fstpt
xchg
sub
push
shll
push
dec
xor
push
fwait
push
call
push
decl
cli
xor
repz
cmpsb
lock
sbb
jle
imul
bound
sbb
mov
loope
cmp
cwtl
fmulp
lds
fs
test
push
push
addr16
out
xlat
outsb
out
movsl
cmpsl
and
lahf
xor
inc
adcb
ss
mov
pusha
ror
fucomp
mov
fistpl
pop
mov
mov
and
xchg
mov
rorb
daa
addr16
cmpsl
aaa
jg
xchg
in
dec
dec
sub
or
jp
mov
insb
or
inc
mov
lret
add
push
lds
test
and
sub
and
pusha
mov
cld
int3
pop
dec
mov
iret
cs
sbb
jle
lea
push
loope
pusha
jle
sub
xchg
pop
or
sbb
mov
jmp
sbb
mov
lret
cmp
sbb
add
mov
mov
scas
add
jecxz
inc
or
pop
das
cld
sahf
sbb
or
in
pop
mov
inc
lret
fidivs
add
jbe
pop
xchg
mov
mov
stos
pusha
adc
ljmp
xchg
arpl
xor
jp
jmp
negb
lret
jbe
bound
cltd
ror
imul
aas
adc
add
les
imul
icebp
pop
sar
mov
daa
pop
adc
jmp
loop
test
fs
adc
and
push
lcall
cmp
loope
ja
pop
dec
orb
stos
push
iret
pop
hlt
andl
cltd
jbe
lahf
lea
jo
sar
pop
jecxz
aaa
or
and
gs
inc
imul
add
cltd
adc
stc
inc
iret
sbb
aaa
inc
dec
mov
inc
arpl
daa
xchg
sub
lret
in
mov
and
dec
xor
push
jmp
sbb
xorb
mov
inc
loope
orb
mov
orl
fsubl
jmp
sbb
mov
outsl
rcr
push
psadbw
fwait
pop
ret
insl
mov
icebp
sbb
adc
xor
jno
dec
sub
jae
cmpsl
mov
mov
push
icebp
mov
int3
cwtl
gs
mov
xor
rclb
pop
jnp
std
lock
pop
div
sti
movsl
hlt
inc
lods
dec
mov
dec
mov
ljmp
out
test
pop
dec
or
dec
test
inc
sbb
roll
and
and
mov
aad
je
adcb
imulb
jne
fs
jp
nop
add
aad
cmc
mov
je
mov
cmp
test
pop
aas
cmp
sbb
push
sbb
push
hlt
xchg
insb
cmpb
in
pop
jp
mov
icebp
sahf
movsb
jno
popa
ja
mov
xchg
or
jmp
ret
and
fsts
mov
cmp
xchg
cmc
cltd
jl
addr16
cmp
jl
pop
bound
lock
popf
cmp
xor
mov
repz
xchg
mov
xchg
xor
mov
jle
in
push
cli
fsubrl
add
cmc
leave
push
push
xor
inc
out
push
push
pop
lahf
jbe
inc
xchg
pop
scas
push
push
push
sbb
push
sub
mov
lea
enter
mov
mov
jmp
js
into
xor
adc
outsl
js
sbb
int
mov
adc
lods
mov
inc
sbb
jo
xor
adc
in
mov
loopne
push
nop
test
fcmovbe
pop
mov
in
ds
cmp
or
mov
sub
mov
iret
ret
ds
adc
inc
sahf
add
lret
gs
mov
iret
sti
ret
sti
outsb
test
xor
insl
icebp
inc
adcb
arpl
ret
loop
pop
sti
pop
movsb
scas
fcoml
jl
cld
scas
jmp
lds
inc
cmp
xor
enter
test
mov
icebp
cmp
jl
into
loope
decl
dec
loopne
sarb
mov
ja
push
adc
iret
xchg
es
jno
sbb
mov
mov
outsb
mov
pop
lods
jmp
clc
jb
sbb
addr16
push
push
mov
jmp
cld
aaa
mov
sbb
inc
or
inc
mov
lds
gs
cmp
fstpt
sbb
add
add
nop
scas
push
ss
xorl
sbb
aas
das
notb
xor
stc
pop
sar
sti
pop
xchg
fisttps
adcb
xchg
aaa
lcall
adc
aaa
xchg
inc
cmpsl
out
push
xor
and
dec
shlb
daa
lret
popf
sub
pop
cmpsl
gs
adc
ja
jg
sbbl
mov
mov
mov
mov
dec
cmp
sbb
pop
stc
ss
fwait
inc
adc
jne
cmpsb
jbe
inc
dec
sbb
enter
jbe
in
jg
lahf
incl
mov
and
add
ret
ret
mov
mov
sub
jmp
add
loopne
mov
loop
fs
ret
cs
sarb
pop
xchg
addr16
mov
call
sub
test
xor
test
mov
inc
popf
mov
mov
mov
jl
pop
dec
ret
cltd
inc
adc
mov
lret
cmp
cmp
jg
cmp
push
repz
add
loop
add
cld
enter
xchg
sbb
scas
mov
dec
xor
leave
je
in
add
sarb
fmuls
add
add
mov
into
fscale
mov
sub
shll
pop
cmpsb
mov
cmp
in
cmpsb
xchg
push
leave
roll
sbb
or
jb
psubsb
mov
rorl
cmp
or
or
push
insb
push
adc
loop
mov
adc
mov
movsl
jne
movsb
fmul
mov
push
add
adc
cmp
xchg
and
inc
push
scas
das
popa
cmp
cmp
add
xchg
outsl
bound
xchg
dec
cmp
sub
fcoml
cld
jmp
popf
int3
mov
add
mov
inc
dec
test
fsubrp
or
andb
fisubrs
lcall
jp
call
jno
test
dec
dec
dec
mov
cld
lcall
fwait
inc
push
adc
or
filds
stos
dec
mov
aas
insb
inc
add
enter
sub
push
adcl
adc
dec
jne
lcall
xor
fcmovu
push
sar
pop
dec
in
mov
arpl
test
xor
in
xchg
das
out
fwait
roll
jno
aam
aas
cmp
test
jle
movhps
mov
or
test
fcmovb
push
roll
inc
into
jb
push
mov
cli
roll
arpl
loopne
jge
jns
adc
test
push
in
push
cltd
enter
in
inc
push
jae
add
jge
ljmp
xor
dec
sbb
pusha
xchg
mov
sbb
jne
add
pusha
xor
int
ret
leave
push
scas
movsl
xor
xchg
clc
xchg
inc
lcall
mov
mov
arpl
jmp
inc
push
or
idivl
jne
mov
mov
repnz
ret
mov
dec
scas
mov
and
jg
lcall
shll
movsb
rcll
and
iret
lcall
es
aas
add
inc
shl
jmp
xchg
ret
jg
jp
int
jge
push
or
xor
adc
mov
jge
or
mov
xor
add
imul
js
dec
jmp
mov
negb
add
jle
jmp
pusha
int
sub
jb
je
pop
mov
dec
jmp
or
sub
scas
mov
jnp
movsl
add
int
xchg
adc
or
jecxz
into
roll
ljmp
and
jmp
jp
mov
adc
cwtl
mov
cmpsb
xor
xchg
lods
aaa
aaa
data16
xchg
mov
sub
loopne
push
xchg
xor
orb
jno
in
data16
sahf
add
ret
iret
dec
xchg
cltd
mov
sbb
cs
movsl
hlt
push
pop
push
sub
sar
insl
xor
int
mov
xchg
stos
jmp
cmpsl
xor
push
dec
call
movb
cmpsl
lcall
ror
pop
xchg
xchg
les
lea
enter
mov
daa
mov
jae
push
push
dec
hlt
notl
sbb
fmul
inc
adc
xchg
xor
push
pop
dec
std
lret
push
mov
xor
fimull
pop
pop
outsb
jecxz
push
xchg
popf
repz
push
or
ret
bswap
lahf
fwait
cmpsl
fisttpl
xor
dec
add
xchg
pop
ret
adc
push
xchg
popf
add
ds
fincstp
inc
jl
std
or
pop
sbbb
ss
scas
push
nop
adc
rorl
xchg
rcrl
aas
adc
cmpsb
out
cmpsb
and
adc
push
popa
dec
sbb
pop
pop
stos
add
lods
sbb
xor
pop
xor
pop
nop
scas
ds
filds
decl
popa
xchg
adc
jne
aam
cltd
lock
xchg
in
push
clc
sbb
xlat
cwtl
ror
fcompl
call
incb
mov
dec
and
sbbb
fisttpll
xchg
xorb
add
data16
into
push
fsubrs
mov
scas
inc
xchg
xor
cmp
out
in
jns
fcomps
pop
nop
xor
dec
mov
fiaddl
scas
push
in
stos
int
or
jnp
mov
cmp
paddsw
test
in
testb
mov
dec
mov
cmp
clc
sbb
cmp
cmpsl
leave
sub
mov
jno
jg
jns
xlat
jecxz
xor
stc
leave
jb
dec
sub
out
lods
sub
pop
mov
insl
xor
outsb
adc
push
xchg
cmc
fstpt
jne
xchg
popa
rclb
es
sub
cmp
cmp
aas
nop
cmpsb
imul
jnp
repnz
mov
jp
cmp
shll
jo
les
call
cmp
jge
ret
lds
imul
out
add
push
xor
xlat
hlt
mov
inc
pop
cmp
mov
mov
leave
mov
cli
mov
std
jbe
inc
popl
ljmp
mov
movsl
add
adcl
sbb
aad
mov
sub
mov
pop
cwtl
dec
cmp
outsb
add
fcoms
fimull
pop
add
adc
test
sbb
nop
insb
or
orb
mov
mov
js
test
cmp
rol
aad
sbb
xorl
mov
add
push
clc
cmp
dec
ret
jle
mov
push
dec
test
jnp
negl
std
in
fbstp
mov
dec
hlt
push
stos
mov
cld
xchg
cmp
adc
lods
lret
and
push
es
mov
aad
and
scas
xchg
insb
into
jo
mov
insb
or
fimuls
adc
jge
inc
sub
les
cltd
cmp
jge
xor
lea
sub
push
sbb
mov
sbb
pop
jb
sti
int3
in
fistpl
pop
divl
int
or
pop
scas
lods
bound
adc
negb
pusha
in
jl
xor
imul
das
mov
test
test
cld
fwait
jns
push
mov
inc
push
xchg
cmp
add
add
cs
shll
inc
ja
xchg
rclb
leave
clc
xor
jo
xchg
in
jne
pop
mov
xor
xlat
gs
mov
repz
imul
clc
icebp
mov
pop
mov
mov
jle
repz
jg
movsl
adc
out
inc
shlb
pushw
dec
xor
mov
in
dec
aad
daa
test
loopne
inc
imul
cmpsb
mov
xchg
mov
out
pop
cmp
nop
or
arpl
push
push
cmpsb
inc
ret
leave
sbb
pop
add
dec
cmp
inc
jae
sub
addl
ja
pop
or
add
push
outsl
cltd
and
mov
or
lret
jae
cwtl
add
dec
insb
adc
mov
sbb
inc
aaa
sbb
cmp
pop
jg
adc
imul
or
addr16
pop
sti
sbb
insl
test
pop
push
inc
ret
out
xchg
mov
sbb
sub
aas
insb
add
dec
mov
and
and
jecxz
enter
xor
inc
std
add
add
sub
xchg
ret
cli
or
js
xchg
std
arpl
loope
aam
pop
mov
mov
aas
mov
cmovge
and
mov
outsb
sbb
cmp
fsubr
rcll
sub
scas
and
jle
lahf
inc
stc
add
ss
imul
dec
lock
pop
jnp
aas
out
imul
mov
loopne
mov
fistps
push
or
mov
sahf
in
mov
cmp
scas
in
pop
cmpl
add
xchg
addr16
xor
sbb
xchg
cmpsb
push
iret
shll
std
cwtl
push
sahf
sarl
dec
movsb
lahf
shl
lret
and
adc
inc
xor
xor
cwtl
mov
stc
shl
sti
clc
shr
jno
mov
test
mov
std
add
std
in
xorb
sub
lock
inc
xchg
hlt
das
cli
and
and
adc
jge
or
pop
scas
sbb
pop
fadd
mov
mov
mov
stc
jg
push
int3
push
daa
icebp
push
insl
mov
fadds
int3
jl
inc
jmp
cmp
adc
fisttpll
add
ljmp
bound
mov
popa
mov
xor
mov
xchg
cld
addl
dec
iret
add
mov
arpl
xchg
pop
into
pop
rolb
jmp
ja
adc
in
inc
jmp
fisubrs
nop
pop
mov
mov
cmp
jmp
ja
out
iret
in
pop
mov
jo
test
lock
pop
pop
cmp
inc
repnz
call
test
enter
mov
data16
sub
cltd
mov
inc
pusha
je
xorb
pop
aaa
aam
das
jmp
and
xchg
mov
pop
notl
pop
push
jns
insl
rcl
xchg
sub
outsb
lcall
mov
inc
stos
sti
and
enter
push
jns
and
push
sub
pop
push
movsl
mov
int3
iret
cmc
out
add
test
cltd
jge
or
lret
jl
jl
pop
test
popa
or
orl
sub
or
mov
addr16
dec
xorb
jns
dec
pop
out
sbb
xchg
cmp
aam
sti
mov
divb
mov
les
jg
or
mov
mov
idivb
lods
sti
daa
cld
sbb
add
pop
mov
inc
mov
jo
dec
nop
enter
mov
adcb
rcll
inc
out
sbb
out
xlat
imul
inc
lea
add
push
nopl
push
outsl
pop
xchg
jp
jns
dec
fnstsw
arpl
in
idivb
lcall
mov
cmp
adc
std
outsl
int3
imul
ffree
inc
push
mov
sbb
or
add
leave
pusha
cwtl
ds
lcall
pop
setnp
je
sbbb
dec
push
lcall
mov
sbb
dec
mov
add
inc
sahf
lods
or
jl
test
sub
pop
sbb
rorb
test
jbe
jno
test
hlt
shlb
movsl
xchg
fidivl
rol
sub
icebp
mov
adc
sub
cli
enter
dec
call
das
pushf
andl
xor
push
mov
out
push
pop
lods
jecxz
sub
adc
lods
fdivl
mov
cmpsl
ret
inc
xchg
sbb
pop
sahf
rcr
cli
arpl
sub
icebp
in
lds
xchg
push
test
xchg
mov
mov
sbbb
adc
sbb
lock
call
cwtl
rol
pop
xor
popa
popf
loope
iret
mov
subb
loope
call
push
pop
testl
nop
cmp
repnz
dec
and
xchg
arpl
lods
frstor
push
in
sub
adc
push
jns
cltd
ret
aas
adc
xchg
lock
in
push
pop
aam
shl
lret
aad
fistpll
pop
mov
jp
mov
jns
dec
and
test
push
popf
add
outsb
ret
xor
out
xchg
lea
xor
ret
rorl
stc
jne
outsb
push
out
and
pop
pop
jns
in
sarl
pop
push
fstp
test
divb
or
imul
scas
idivl
jl
jecxz
pusha
add
mov
or
adc
movsl
in
pop
xchg
stc
pop
ret
sub
mov
addb
push
shlb
adc
or
xchg
aam
mov
mov
push
js
xor
mov
and
pop
mov
or
cmp
push
inc
push
jb
push
sahf
addr16
jp
xchg
push
in
adc
test
and
add
imul
lds
add
add
and
fcomp
jnp
sbb
and
pop
jp
mov
imul
push
shll
fisttps
jns
data16
in
xchg
inc
loop
pop
jecxz
xor
jecxz
call
out
push
adc
ds
test
pop
sub
xchg
shrb
rorl
rcrb
outsl
outsb
or
mov
mov
add
sbb
xorb
call
xchg
test
js
xchg
arpl
push
xor
cmp
ret
int
add
pop
and
pop
bound
pop
clc
push
pop
jle
mov
jno
fisubl
mov
loopne
cld
jno
pop
imul
push
repz
cmp
cld
mov
push
mov
ja
xor
push
inc
jbe
lret
lret
xchg
and
addr16
lret
or
loop
xchg
dec
push
fdivs
sub
cli
fs
dec
mov
adcb
sub
hlt
mov
mov
outsb
sbb
xchg
or
test
mov
loope
xchg
enter
xchg
xor
insb
mov
inc
insb
mov
and
push
repz
and
and
ficomps
fwait
add
fstpt
call
mov
xchg
jb
lahf
cmpsl
xorl
xor
lock
push
sub
test
dec
sub
popa
and
sub
push
push
scas
ficomps
js
jmp
adc
test
xor
imul
push
sbb
popa
mov
mov
mov
loope
ss
outsl
test
sbb
cmp
shlb
sarb
adc
push
inc
into
jg
sahf
cltd
stos
andl
lea
xor
dec
lds
es
mov
bound
sbb
sub
pop
inc
inc
xchg
adc
cmp
pop
pop
push
fs
inc
mov
jns
jnp
icebp
cli
fmul
add
dec
cltd
scas
fdivs
arpl
push
xchg
fildl
jge
cmpsb
mov
pop
andl
loopne
xchg
mov
push
sub
xchg
bound
or
xlat
ret
loop
dec
loop
inc
pop
ficomps
adc
mov
lods
or
xchg
rcll
cli
adc
addr16
add
outsb
test
sbb
call
mov
inc
call
repz
jle
jle
sbb
xorb
je
stos
int3
mov
mov
ds
push
ss
pop
aad
shll
and
enter
push
sahf
in
clc
pop
lods
or
leave
adc
mov
xchg
sub
stos
outsl
cs
in
adc
sbb
xor
hlt
fisubrs
adc
jle
out
mov
sbb
dec
test
outsb
cmpl
mov
xor
mov
xor
sub
repz
lds
fimull
mov
cmp
or
adc
xchg
lret
add
imul
mov
sahf
cs
push
lahf
add
icebp
lods
sbb
lea
shrl
add
or
mov
push
pusha
mov
mov
pop
jns
jae
mov
stos
sub
or
dec
dec
idivb
sbb
xor
pop
nop
outsl
iret
aas
xor
int3
clc
shl
ja
fldcw
sub
ficoml
pop
jecxz
shrb
inc
or
stos
test
mov
pop
ficomps
dec
push
push
xor
xlat
fidivrl
mov
out
movsl
jae
pop
lret
and
cmp
scas
jne
cmp
pushf
pop
mov
inc
mov
and
sahf
inc
cld
inc
xor
push
or
fdivs
pop
outsb
xchg
das
lock
in
and
lcall
cmc
rcll
jb
jo
mov
addb
mov
nop
mov
fmuls
clc
mov
lds
pusha
xchg
mov
sub
rolb
push
aam
jl
das
cmp
and
jecxz
sbb
fcoms
int3
sub
push
push
adc
mov
sub
fnstsw
mov
mov
cmp
jl
mov
inc
jne
mul
fmulp
in
cwtl
in
xor
cmpl
xchg
mov
insl
daa
sahf
dec
cmc
insl
adc
jmp
or
fldcw
test
adc
pop
outsb
scas
adc
pusha
fadds
xor
jecxz
mov
push
leave
ret
jp
js
push
jb
clc
cmpl
loopne
imul
rcr
xchg
ret
loope
daa
sbbl
add
mov
fsts
jmp
repz
stc
or
dec
aaa
sbbb
mov
fisttpl
fisttpll
outsb
fistl
imul
cld
or
xchg
pop
xchg
sub
movsb
push
mov
add
rcl
mov
lret
xchg
lods
xchg
jge
ja
push
hlt
leave
cs
lea
push
inc
test
mov
out
pop
inc
sbb
insl
xor
inc
sub
dec
xor
xchg
in
mov
ljmp
mov
cltd
enter
push
test
push
mov
popa
push
cwtl
addb
pop
mov
mov
in
enter
and
mov
mov
loopne
jo
xlat
mov
int
stc
shll
scas
fidivrl
or
fidivrs
fidivrl
into
call
and
fcmove
pop
sbb
sbb
cld
add
sbb
scas
cltd
push
inc
or
jge
daa
lea
jp
movl
addr16
push
iret
and
pop
popa
and
std
cmp
aam
stos
lcall
mov
push
push
jb
or
sbb
int
fs
cltd
mov
ret
mov
add
fbld
in
int
or
pop
xchg
pop
jnp
add
out
jmp
jecxz
fwait
or
mov
push
mov
hlt
lret
aaa
ret
pop
jecxz
mov
push
and
add
popa
push
xchg
enter
cmp
fwait
sub
fwait
cltd
das
loop
or
fsubl
adc
xchg
mov
test
in
out
mov
inc
pop
add
rcr
xchg
aam
mov
outsl
sub
roll
or
xchg
cmp
subb
scas
int3
push
in
pop
add
pop
dec
jb
repnz
and
pusha
mov
cmp
dec
inc
jge
push
scas
sbb
xchg
adc
test
rorl
fcoml
lods
mov
arpl
mov
dec
inc
lahf
orl
jnp
xorb
and
jbe
adc
add
cs
fcmovnu
push
push
fdivs
xchg
pop
fwait
inc
xchg
dec
cmpsl
movsb
movsl
inc
data16
dec
inc
mov
movsl
mov
sub
jbe
outsb
bound
mov
adc
rcll
insb
push
inc
or
loopne
lods
add
mov
repz
inc
ret
lret
mov
push
loop
and
xchg
pop
pop
push
out
mov
cld
cltd
jmp
push
mov
stos
shlb
dec
decl
xchg
push
inc
mov
outsl
xchg
into
int3
popa
and
lea
jb
ja
or
sub
lods
ja
fdivrs
sahf
add
cmpsb
sub
inc
cmpsb
sbb
cmp
cmpsb
jae
jns
adc
data16
lock
dec
loope
or
add
adc
xchg
out
ret
mov
mov
mov
fcompl
aam
push
adc
int
das
in
leavew
pop
cmp
fdivrs
sbb
outsb
lret
rcrb
call
test
mov
js
movb
add
stos
mov
mov
add
or
pushl
mov
adc
push
std
mov
add
xor
xchg
sti
aaa
pop
int
push
xchg
adc
mov
in
lock
out
adc
push
mov
lahf
lret
idivl
or
insb
aas
out
pushf
cmp
cli
pop
ja
in
out
fst
adc
jnp
fdiv
push
aaa
inc
jnp
adc
pushf
xchg
loope
roll
popa
push
cmp
or
sub
jmp
cwtl
adc
xor
enter
aam
mov
sub
push
loopne
cmc
clc
xchg
rcrb
dec
adc
jne
sbb
mov
xchg
push
test
push
xchg
jl
sub
imul
xor
pop
movsl
jmp
xor
cs
orl
fs
pop
mov
int
mov
cltd
es
dec
xchg
jns
dec
jno
cmpsb
push
aaa
decl
push
dec
lahf
addb
jge
pop
es
push
scas
jl
aas
cmp
jae
mov
fcoml
or
fnstcw
ss
cltd
sub
inc
ss
test
xor
hlt
push
mov
inc
mov
pop
jnp
pop
aam
stos
and
ja
nopl
leave
mov
cmpb
inc
lea
jmp
cmpsl
jo
out
sbb
rcrb
test
daa
and
outsl
mov
pop
jp
imul
imul
xor
arpl
pop
dec
fwait
add
sub
lret
cmp
lahf
push
cmp
cmovb
push
jp
sub
add
lcall
shll
stos
jno
aaa
pop
jae
loop
aam
fcmovnu
clc
mov
xchg
xor
repnz
pop
jmp
ret
adc
outsl
add
and
les
les
mov
jns
sbb
test
scas
dec
sub
fnstenv
jbe
mov
test
sub
push
call
pop
clc
mov
mov
jge
fs
loope
out
out
fdivl
mov
jno
in
dec
xor
dec
icebp
push
or
aaa
mov
dec
stc
stos
addl
mov
xchg
stc
sub
push
pop
jg
pop
jb
das
jge
lret
shrb
mov
into
les
mov
pop
xchg
dec
pushf
push
insb
fsubrs
pop
rcrl
subl
int3
pop
mov
pop
adc
loop
ss
mov
adc
jne
aaa
out
fwait
rcll
ss
xchg
sub
das
test
adc
mov
lret
adcl
scas
das
xchg
addr16
bound
scas
xor
push
mov
cmp
lahf
ljmp
dec
or
xchg
or
jnp
orl
insb
jg
or
jae
stos
pop
add
sbb
or
imul
sub
sbb
cmp
shrl
or
stos
jnp
popa
mov
xor
xchg
addr16
mov
cmp
or
xlat
lcall
insl
or
xor
ja
xchg
lcall
jg
es
jbe
test
lock
xchg
roll
fimull
out
outsl
sbb
inc
jmp
repnz
iret
ss
xchg
dec
js
pop
push
pushf
mov
lret
hlt
daa
cmpl
push
pop
jne
mov
neg
cmp
ret
xor
daa
nop
inc
xchg
imul
pop
inc
scas
aas
bound
nop
repnz
iret
push
mov
pusha
dec
pop
push
out
call
test
sbb
rorb
dec
inc
cs
adc
sti
cwtl
aad
dec
rcll
insb
cli
leave
sbbl
int3
mov
shrl
mov
outsb
push
and
clc
mov
mov
adc
pusha
ret
lods
mov
mov
xchg
mov
or
inc
ret
addb
bound
mov
add
pop
jo
imul
and
push
int
movsb
xchg
xor
cli
jae
insl
jae
jmp
mov
notl
daa
push
jbe
jno
scas
push
adc
xor
jle
shrb
dec
xor
or
jle
pop
push
inc
call
sub
sub
or
or
test
in
sbb
rorb
outsb
imul
pusha
adc
sub
lods
xchg
out
iret
outsl
loop
or
lea
pop
mov
int
out
dec
das
cmp
mov
cld
lahf
sahf
out
pop
pop
insb
movsl
inc
pop
lret
pop
push
divl
bound
pusha
sbb
outsl
jg
fxch
ja
and
xchg
cmc
pop
ljmp
test
push
les
xor
cwtl
ds
les
pop
jecxz
add
push
adc
pop
cmp
or
icebp
iret
test
or
mov
push
outsl
insl
inc
push
push
mov
xchg
pop
xchg
testb
das
mov
add
fiaddl
popf
repnz
dec
iret
ret
mov
gs
xor
das
xor
test
push
mov
jg
mov
sub
jae
mov
jno
pop
mov
movsl
jns
push
dec
mov
loopne
cmpsl
lret
jp
int
jge
and
loope
jg
xlat
sub
lcall
sbb
mov
mov
ret
out
push
lret
mov
xchg
mov
int3
jg
push
fstps
lds
test
gs
push
mov
lahf
sbb
or
lahf
jns
ret
orb
aad
inc
add
shlb
xchg
imul
sahf
daa
xor
push
loop
lock
push
lahf
or
mov
push
push
or
and
pop
lcall
mov
insb
loop
and
adc
test
add
cmp
data16
cmpsl
mov
inc
mov
jo
xchg
adc
ja
xchg
xchg
sub
mov
mov
in
xor
lods
rcrb
mov
in
pop
mov
test
push
out
xchg
inc
cs
aam
pop
out
loopne
inc
cmpsb
lea
inc
dec
jns
loopne
push
repz
xchg
or
xlat
test
xor
scas
push
or
les
shrb
or
lock
stc
pop
popf
mov
xor
iret
xor
jno
je
mov
jo
xchg
mov
shlb
mov
inc
outsl
push
cmpsb
sub
push
mov
les
andl
sbb
inc
imul
les
jge
and
cs
mov
sbb
push
pushl
mov
dec
idivb
mov
pop
push
xor
arpl
ret
rcl
mov
jp
xchg
adcl
aaa
fs
push
fiaddl
mov
dec
ds
cmp
jp
pop
mov
fnsave
call
stos
push
mov
adc
rorl
xchg
add
rclb
addr16
sbb
je
xor
roll
mov
sub
lds
adc
arpl
mov
adc
dec
cmp
hlt
daa
cmp
hlt
mov
inc
loope
pusha
dec
sbb
lods
mov
pop
ret
ret
pushf
sub
push
xchg
sub
fldcw
lea
adc
and
ret
pop
out
xchg
xchg
lcall
in
jbe
fdivr
push
fwait
hlt
in
scas
lcall
xor
cmpsb
rol
mov
lret
aaa
fiadds
jmp
mov
mov
scas
mov
inc
mov
cmp
lcall
rclb
jbe
and
jno
pop
mov
mov
jg
xor
xchg
fs
or
mov
sarl
fcom
adc
int
adc
je
cmp
test
mov
jg
les
daa
mov
lret
adc
aas
inc
aam
and
mov
test
stos
push
push
sti
cmp
test
sub
ret
or
cmp
testl
sub
repz
mov
jl
imul
addr16
cmp
imul
ja
movsb
inc
and
icebp
lods
and
push
cmp
data16
andb
mov
dec
mov
in
jo
test
sub
jl
imul
inc
push
repnz
xchg
push
mov
cmpsl
xchg
push
xor
add
xlat
js
sbbl
mov
repz
cmpsb
dec
jle
mov
gs
jmp
outsb
jle
mov
xchg
jns
add
dec
enter
inc
loop
inc
popf
fbld
cmp
adc
adcl
ljmp
mov
gs
call
mov
test
adc
out
adc
test
gs
test
int3
pop
add
cmp
jne
push
cld
mov
push
xor
xchg
movsb
push
bound
ret
mov
mov
test
das
rcll
push
leave
dec
inc
xchg
mov
cmpsb
xchg
push
jle
pop
cs
jg
stc
mov
xor
fbld
int
push
aad
cld
cmp
adc
push
sub
mov
cmc
xlat
shrl
and
das
ja
add
rcll
adc
push
and
push
sti
fcomi
xor
or
or
ja
and
xchg
cmpsw
jae
insb
or
shlb
icebp
add
and
cmc
jl
add
xor
out
pop
jns
dec
cmp
mov
mov
dec
mov
jp
xchg
cmpsb
mov
xchg
jae
jl
outsb
lcall
lds
mov
and
mov
movsb
mov
out
pushf
fists
aam
movsl
popa
ret
aaa
imul
in
roll
add
out
mov
pushf
aam
push
out
jp
js
mov
add
add
jmp
aad
push
jge
dec
lret
jmp
cmpsb
adc
rcl
mov
mov
nop
shlb
xor
mov
mov
pop
cmp
sbbb
push
pop
inc
sarl
or
popf
pop
sbb
lret
sbbl
ret
ror
iret
loop
mov
imul
stos
and
test
xor
je
mov
xchg
negb
mov
repz
jp
aaa
mov
adc
clc
sbb
icebp
bnd
xchg
lods
cmc
push
add
mov
xor
hlt
lahf
mov
cmp
mov
mov
jbe
daa
jg,pt
cltd
insl
cmp
jbe
das
jle
es
or
loop
test
jg
and
pop
pop
and
fwait
out
xlat
fisttpl
scas
adc
inc
lods
ret
mov
out
shrl
addl
in
ja
sub
enter
or
mov
adc
sub
fsubl
cmp
in
ss
jp
pop
test
push
mov
jg
mov
mov
cmpsb
loop
sub
gs
fcomi
in
aad
add
mov
cmp
inc
jecxz
jo
push
sbb
jge
mov
rorb
std
imul
mov
inc
and
and
xchg
fldenv
addr16
push
push
movsl
push
lahf
or
push
fistl
cmpsl
mov
jno
xor
lahf
jns
fwait
adc
cld
cld
jne
xchg
mov
test
mov
repnz
xchg
push
dec
dec
rclb
adc
push
or
sub
cltd
xchg
pop
popa
xchg
mov
inc
fdivrl
out
mov
dec
add
jg
stos
inc
test
sbb
or
mov
in
repz
into
mov
mov
loope
mov
jo
in
pop
fstpt
lods
sbb
jp
jbe
xchg
mov
nop
pusha
sbb
sub
inc
outsl
sbb
xchg
mov
ja
test
je
int3
loop
inc
leave
test
lcall
ret
inc
cmp
cld
add
mov
lahf
pop
std
mov
or
popf
inc
mov
sub
push
and
xchg
je
cmp
cmp
jg
add
inc
inc
repz
cwtl
cli
mov
test
dec
fists
pop
inc
fdiv
loopne
in
and
sbb
clc
sub
popf
or
mov
in
in
packsswb
mov
fisubrl
pusha
pop
gs
jo
xor
fwait
or
adc
das
jmp
pop
jl
and
adc
cmp
adc
jl
scas
dec
push
test
in
aam
xchg
fnstsw
inc
jo,pt
sbb
dec
xchg
pop
dec
fstpl
iret
adc
ljmp
sbb
in
ja
jo
sbb
in
add
push
xlat
lret
cmp
sbb
int
cmp
insl
xorl
mov
arpl
mov
mov
or
aas
jmp
daa
mov
or
shll
jne
mov
int3
adc
xlat
in
out
push
and
inc
pop
adc
push
cmp
mov
stos
sub
or
jbe
rolb
ljmp
sub
addr16
ss
roll
inc
hlt
mov
inc
dec
daa
mov
ljmp
xor
in
fldenv
arpl
movb
xor
mov
clc
ss
imul
clc
xchg
pop
das
dec
mov
xor
cmp
jne
mov
mov
shlb
mov
xor
add
or
mov
pop
aas
or
or
lret
jecxz
sarl
cmc
xchg
and
loopne
jl
movsb
popf
loop
jp
push
push
jecxz
mov
mov
outsl
pop
push
pop
orb
push
dec
lods
pop
outsb
test
mov
orl
push
lret
push
and
xchg
or
fidivrs
cmp
mov
sub
sub
cmpsb
mov
lcall
lea
jne
call
or
out
inc
mov
notl
jecxz
loop
cld
dec
mov
sub
shl
inc
popf
xor
push
int3
mov
negb
cmp
push
dec
xor
movsl
rcrl
jle
popa
push
jae
mov
sbbl
lods
sbb
int
cmp
jp
cmp
or
inc
cmp
repnz
out
ds
inc
push
sub
js
clc
mov
out
movsb
inc
das
pop
repnz
cltd
testl
pop
shlb
leave
int3
add
mov
pop
inc
mov
test
ds
pop
xchg
xor
fisubrs
sarl
inc
cmp
adcb
data16
imul
add
xchg
push
mov
adc
mov
fwait
mov
sarb
mov
shll
into
or
adc
stos
ss
pop
paddusw
cmp
jae
push
cmp
ljmp
xor
pop
in
add
les
xor
test
jae
inc
xor
mov
sbb
fnstsw
insl
std
jne
daa
mov
movsb
mov
test
inc
bound
inc
adc
les
into
mov
push
add
notl
aas
test
clc
mov
in
jmp
lcall
push
lock
cmc
cmp
mov
jle
pusha
icebp
push
ds
lret
mov
mov
stc
sub
inc
inc
sub
repz
mov
dec
inc
fdivl
push
fmull
xorb
outsb
ds
out
add
jle
repnz
or
andl
jmp
cmpsb
xlat
dec
repnz
in
arpl
xor
outsb
sub
ss
imul
add
mov
in
mov
cmp
lcall
add
ficomps
aad
repz
lcall
cmp
mov
xlat
jl
push
int3
nop
lret
jae
dec
adc
xor
cmp
test
fs
xchg
mov
stos
test
les
fcmovbe
or
test
iret
push
mov
mov
call
pop
setl
inc
ja
mov
jnp
negl
mov
jne
pop
add
add
leave
lods
push
roll
and
sbb
aad
push
loope
test
xchg
movsb
jbe
ds
push
test
sub
cmp
pop
add
push
nop
jbe
imul
popa
sbb
rcr
jno
in
fldl
sbb
jae
sarl
outsl
cld
sti
in
mov
stc
xchg
jg
xor
dec
push
mov
cs
int
jmp
add
adc
sbb
stos
pop
js
push
pop
out
addb
inc
iret
push
sbb
imul
lock
popa
lea
or
lahf
sbb
and
xor
jg
jne
push
shll
push
push
stos
loopne
out
or
jl
fcmovnu
fcmovnbe
mov
orl
jo
adc
hlt
adc
mov
mov
arpl
cmc
mov
divl
push
fdiv
lahf
jmp
addl
nop
hlt
or
jg
addr16
mov
jns
and
jo
push
movsb
adc
loop
int
mov
dec
lahf
mov
adc
orl
xor
mov
cwtl
or
hlt
js
jle
and
xchg
loopne
addb
inc
dec
cld
mov
xor
mov
pop
and
adc
lods
push
xor
cmp
loopne
clc
jno
mov
jl
mov
js
lcall
or
fwait
push
cwtl
dec
nop
mov
adc
bound
call
insb
xor
push
lods
mov
test
adcb
sub
pushl
or
add
mov
sub
push
mull
fwait
aad
notb
es
fcmovnbe
sub
mov
jnp
aas
jle
add
xchg
dec
leave
jg
xchg
pop
or
sub
jnp
pop
iret
push
je
xor
add
pop
xchg
imul
hlt
push
stc
outsb
pop
int
fstpt
pop
imul
add
jmp
cltd
mov
arpl
bound
add
daa
insb
pop
push
sub
push
cmpsl
out
or
xor
mov
dec
push
pop
cmp
in
and
out
mov
mov
ljmp
pushf
flds
mov
sarl
aas
lds
in
adc
pop
xor
pop
ljmp
aad
repz
adc
dec
jmp
ficompl
sbb
dec
adc
cmp
addr16
mov
fistps
sub
lds
ret
cld
cs
sbb
xor
dec
cmc
cmp
in
in
dec
pop
mov
repnz
and
mov
inc
and
push
aad
outsl
popf
cmp
pushf
dec
xor
in
cltd
jge
mov
addl
push
fiaddl
dec
gs
and
ljmp
loopne
mov
push
fcompl
sbb
jnp
adc
imul
cld
mov
cmpsb
aad
cltd
rol
push
loop
adc
jmp
jp
aas
icebp
mov
adc
sub
xchg
jge
push
fisubrl
or
loope
xor
pop
bound
imul
xchg
mov
or
ss
nop
dec
popa
xchg
adc
push
inc
subl
fldl
sub
mov
out
lock
aam
jg
imul
push
mov
add
dec
sbb
mov
adc
ss
dec
cmp
imul
cltd
jns
cltd
imul
sbb
mov
sbb
inc
dec
and
outsb
or
fsubl
daa
std
push
frstor
movsb
push
out
es
insl
pusha
pop
and
jae
adc
sbb
in
andb
call
in
int
inc
cmp
iret
adc
push
rorb
push
lock
mov
rclb
push
jb
pop
shll
pop
fwait
mov
stos
mov
jmp
xor
and
in
pop
xchg
mov
aad
jmp
mov
push
mov
ret
adc
sub
pop
mov
push
add
lds
xchg
dec
mov
cmpsl
jno
push
and
push
ljmp
pop
push
jle
loopne
fsubrl
addr16
mov
lea
jmp
pusha
push
pop
jne
add
repz
mov
ja
movsl
movb
inc
pushl
into
aas
mov
mov
xchg
mov
and
fsts
push
loopne
and
icebp
mov
mov
add
dec
cmp
fstl
push
rolb
fcoms
lods
clc
stos
xor
test
popf
fldcw
adc
adcl
lods
std
add
mov
mov
mov
filds
jno
add
mov
adc
shll
cmp
cmp
jnp
lar
jnp
jae
inc
sbb
jo
lods
and
ficoml
mov
inc
push
lcall
xchg
in
mov
xchg
outsb
popa
inc
mov
sahf
mov
sub
mov
scas
fwait
movsb
mov
xor
lret
push
loop
bound
dec
fsubl
dec
rorl
loopne
insl
jnp
mov
in
cmc
cltd
fcompl
mov
decl
mov
pop
pop
movsl
repz
pop
fcmovnu
in
shll
pushf
cmp
dec
std
and
jg
orl
repz
shrb
cmp
adc
push
dec
push
pop
inc
pushf
cmp
or
js
add
ss
data16
adc
mov
pushw
jb
in
jge
adc
xor
mov
inc
jo
gs
in
or
sub
es
aad
pop
jecxz
mov
scas
cltd
inc
jnp
add
shlb
sub
data16
mov
pop
xchg
xor
fs
inc
call
mov
jmp
pop
clc
sub
cld
xchg
jae
subl
jecxz
mov
sub
notl
adc
adc
pop
mov
pop
mov
push
sub
loopne
push
xor
addr16
sbb
sub
aad
pop
fnstcw
lds
push
or
aas
add
arpl
jmp
cli
xchg
test
flds
jae
dec
cmp
adc
xor
lcall
loopne
out
sub
pop
in
mov
outsb
lea
test
dec
xchg
fstps
aam
xor
mov
inc
out
movsl
push
cli
cmp
adc
lock
in
dec
xor
cld
movsb
stos
fdivrs
je
test
fdivrs
push
fs
nop
nop
dec
sbb
pop
enter
into
lret
out
jbe
pop
andb
pop
inc
idivb
js
mov
xor
mov
sar
xor
jecxz
mov
mov
jecxz
mov
je
outsb
dec
popa
pop
rorb
aad
xchg
jae
lret
inc
popa
lret
or
dec
aad
fcoms
cmp
mov
lret
loopne
cmp
rorl
mov
ds
js
sbb
lods
jb
rolb
lahf
inc
or
fcmovnu
daa
iret
pusha
xchg
nop
mov
call
ss
popf
clc
jb
in
sub
leave
outsl
lock
mov
pop
mov
fdivs
test
dec
mov
out
mov
sti
mov
and
out
mov
ret
cmc
or
fchs
std
enter
push
mov
popa
es
lods
xor
sbb
xchg
lret
outsb
loopne
jge
into
mov
fcompl
dec
scas
into
sbbb
shlb
jmp
inc
repz
xchg
adc
jb
pusha
dec
and
pop
and
xor
cmp
sbb
lods
push
leave
daa
scas
leave
roll
shrb
scas
jmp
lahf
add
mov
insb
jge
fnstenv
inc
or
jno
sub
insl
scas
cld
cmp
cmpsb
lods
xlat
movl
cmp
out
mov
out
shrb
fbstp
rcrb
out
push
scas
daa
fcomps
jl
push
and
or
adc
xchg
mov
js
loop
and
mov
test
fisubrs
jo
jo
cmp
push
pop
or
inc
cmp
add
push
pop
cmp
xchg
pop
roll
jp
fwait
push
mov
jb
xchg
adc
cs
inc
imul
xchg
pop
rorl
repz
pop
pop
xchg
arpl
xchg
add
mov
in
aaa
push
sub
mov
cmc
and
ja
mov
test
hlt
push
shrl
mov
xor
inc
or
aas
pop
ja
sub
cs
stos
adc
cmp
or
lods
icebp
in
ss
pop
push
xchg
sbb
mov
iret
imul
fmuls
push
ljmp
mov
push
stos
sbb
xor
xchg
sete
aas
sbb
ja
add
mov
aam
loope
jge
test
dec
test
mov
ror
cmp
cli
loope
mov
leave
movsb
inc
dec
lds
insl
mov
xor
add
imul
arpl
lret
xchg
sbb
dec
push
cmp
push
cmpb
pop
and
dec
xor
mov
mov
lods
jnp
mov
sbb
jb
xorb
icebp
pop
jns
incl
fidivrs
cmpsl
adc
jp
cltd
xchg
data16
repnz
pop
push
in
inc
mov
iret
rcr
push
mov
jmp
sarl
insb
in
or
inc
add
sub
mov
lret
or
sarb
cmpb
or
adcl
jmp
push
orl
sahf
mov
jge
push
mov
lahf
je
pop
fistl
push
jecxz
sar
jecxz
push
adc
fldt
pop
push
jne
mov
push
xchg
loope
ffreep
sub
loopne
and
call
les
movl
cmpsl
hlt
test
mov
in
icebp
inc
mov
sub
xchg
mov
mov
jmp
dec
out
mov
ds
mov
pop
jecxz
mov
insl
out
jmp
lock
fwait
mov
xchg
push
dec
xchg
inc
movsb
es
fiaddl
outsb
jae
je
cmpsb
jmp
movsl
pop
adc
fistpl
add
ret
jns
push
inc
jns
lahf
stc
and
cltd
or
jecxz
je
ret
cmp
popf
push
imul
out
or
cmp
pop
jecxz
lods
push
jnp
push
pop
ficoml
jmp
push
pop
ljmp
mov
in
xchg
xor
mov
mov
or
adc
adc
addr16
cmp
movsl
adc
adc
fidivrl
iret
mov
ret
sbb
pop
cmp
mov
push
mov
insb
jle
push
jmp
adc
or
add
aad
sub
cmc
add
in
inc
xchg
dec
xor
inc
push
push
add
lock
mov
inc
sbb
neg
insb
pop
pop
fnsave
and
fwait
sbb
movsb
call
mov
jmp
lods
imul
repz
sbb
cmp
lods
dec
push
dec
test
test
rorb
mov
cmc
sti
adc
mov
ljmp
outsb
fcmove
push
imul
ja
fnstenv
jbe
and
pop
push
mov
pop
xlat
mov
sub
mov
or
and
xchg
sarb
pushf
xchg
popa
pop
lds
sub
xchg
test
xchg
cmpsl
addl
fcomps
imulb
aam
ret
xchg
mov
push
lret
xor
xchg
or
add
imul
cmpsb
inc
xor
lcall
sbbb
dec
and
lock
mov
rolb
or
or
inc
jle
or
xchg
push
aaa
imul
rcll
jmp
push
fs
sti
inc
jmp
or
insb
in
push
cmc
scas
jne
repnz
adc
pop
mov
mov
addr16
faddl
in
icebp
pop
inc
cmc
in
stos
mov
js
push
scas
inc
and
mov
lcall
and
jg
adc
inc
cmpsb
dec
cmpsb
jae
bound
pop
pop
filds
pop
jle
mov
aaa
cld
dec
adc
add
sbb
xchg
dec
xlat
xor
lret
jne
pushf
pop
adc
imul
cmp
mov
ss
xorb
mov
adc
pop
dec
aaa
out
ljmp
mov
xor
xor
or
push
mov
push
jb
enter
sub
mov
stos
fs
xchg
stos
xor
adc
das
mov
test
repnz
iret
cmp
clc
cmpb
loope
rclb
pop
or
xchg
filds
and
cmp
inc
mov
je
pop
in
jbe
sbb
sub
orl
xchg
shl
push
push
lahf
je
ficompl
shlb
stos
mov
mov
lret
mov
aam
clc
inc
mov
push
insb
in
adcb
in
mov
or
shlb
cmp
jo
das
dec
sbb
nop
ss
inc
ds
divb
dec
imul
popf
scas
push
cwtl
add
sbb
aam
nop
mov
sub
cs
cwtl
or
inc
lods
sub
xchg
push
xor
pop
pop
inc
push
arpl
icebp
cmp
or
jle
and
jmp
pushf
mov
and
js
cltd
xor
inc
xor
stos
push
inc
aam
push
clc
loope
dec
and
shl
xlat
jg
stos
mov
dec
mov
pop
sbb
push
ss
jmp
cmp
push
dec
sti
inc
adc
push
ds
daa
xor
jmp
ret
js
sub
dec
adc
les
xor
fxch
stos
popf
ret
bound
scas
add
leave
int
notl
xchg
clc
xchg
imull
push
aad
mov
or
pop
mov
and
push
daa
mov
orps
or
xor
outsb
mov
jl
int
push
or
xor
jo
adc
xchg
pop
adc
xorb
sbb
and
cli
test
fcmovnbe
mov
addr16
adcl
sbb
xchg
push
mov
out
movsl
movsl
aam
mov
jno
mov
push
cli
xchg
daa
cmpsl
test
xor
fstpt
iret
out
push
pop
iret
and
dec
dec
imul
and
outsl
pop
shl
repz
xor
mov
call
imul
or
je
aas
add
aas
mov
cltd
mov
dec
ljmp
xlat
and
aam
and
mov
add
and
repnz
xchg
jns
xor
adc
inc
mov
xor
ljmp
jne
mov
xor
xor
mov
nop
cmc
std
mov
rcll
push
jecxz
cmp
dec
lret
xchg
xor
enter
sub
mov
es
rcl
mov
repnz
xor
shll
stc
push
pop
stc
movsl
xor
cs
mov
lret
scas
and
jae
scas
movsb
xorb
cmpsl
push
popf
pop
std
sub
lcall
xchg
fiaddl
fildl
xchg
lods
and
mov
pop
push
xchg
iret
jne
mov
scas
jnp
rorl
filds
out
mov
xor
pushl
in
je
ret
add
mov
lcall
rcrb
push
mov
mov
stos
shll
jecxz
xchg
aaa
mov
adc
adcl
xor
or
inc
aam
incb
xlat
or
add
loopne
mov
cli
fnstsw
test
sti
enter
xor
xchg
daa
shlb
and
xchg
in
dec
je
mov
jg
add
decb
jnp
pushf
negb
pop
orb
sar
lea
lret
js
jmp
cmp
mov
in
push
call
ja
or
fistl
push
fistps
insl
dec
mov
push
ja
cmp
mov
cmc
pop
lcall
cmp
hlt
pop
adc
aas
push
jle
mov
je
jge
jle
push
add
mov
push
clc
arpl
sahf
and
xor
enter
out
jns
pop
xchg
fcomps
push
fstp
mov
add
imulb
or
aad
sub
add
mov
ja
inc
cltd
and
pop
popa
popa
mov
lods
jb
and
repnz
lret
xor
lcall
pop
mov
mov
and
xor
inc
push
movsb
pop
daa
sub
fbld
fsubl
shrb
cmpsl
push
xchg
xorb
mov
lods
sub
sahf
sbbb
or
inc
xor
sub
inc
xchg
dec
rcr
mov
andl
xchg
pop
in
inc
lods
sahf
mov
inc
mov
mov
and
lods
cld
aas
lds
cli
push
jl
rcl
and
lock
xor
stos
ljmp
push
es
mulb
ret
mov
bound
inc
jl
push
dec
mov
ljmp
mov
flds
cmp
mov
pop
pop
lret
lods
pop
push
push
out
jnp
popa
rorb
mov
imul
cmp
mov
ret
and
pop
jecxz
xchg
dec
mov
add
insb
rcrb
sbbl
push
in
movsl
outsl
lods
push
clc
and
into
sbb
sbb
cli
mov
sbb
add
push
pop
pushf
or
pop
mov
bound
adc
lock
jge
imul
push
pusha
movsb
popa
pop
jecxz
cmp
lea
shlb
jbe
dec
popa
aas
data16
sbb
movsl
sub
cld
add
and
mov
aas
and
call
xor
sub
hlt
cmp
pop
push
mov
ja
sbbb
dec
cmp
sti
imul
inc
sahf
and
fdivs
rorb
jp
add
inc
pop
enter
lods
adc
pusha
and
jge
aam
push
adc
pop
jp
pop
aas
pop
cmp
popf
xchg
jb
lock
add
leave
addr16
rorl
inc
hlt
xchg
insl
jecxz
sbb
nop
movsl
push
lds
dec
xchg
arpl
pop
sub
pop
push
adc
jg
cltd
add
bound
ljmp
dec
jnp
push
pop
and
sub
mov
dec
jmp
lcall
iret
jns
mov
pop
lahf
lcall
js
cli
jae
lods
std
sbb
rcl
popa
ret
dec
ret
pop
sub
xchg
mov
jns
push
push
or
cld
or
mov
leave
sbb
mov
lahf
add
sub
push
lcall
push
and
add
jg
stos
aad
lea
inc
push
mov
mov
and
int3
sti
jmp
stc
xchg
sub
jae
mov
mov
push
in
aas
cmp
outsl
test
jp
loopne
hlt
inc
inc
movsb
outsl
mov
ficomps
xchg
cmpsb
dec
mov
fcmove
cwtl
clc
adc
push
add
aad
ja
cli
out
add
jle
jne
mov
sbb
lods
jns,pn
popa
jae
xor
xchg
push
push
popf
xchg
xor
shrb
inc
shl
test
dec
cmp
sti
addr16
mov
cmc
jns
lods
push
xor
pop
jp
jp
jb
pop
lods
mov
cmp
sarb
repz
rcll
pop
gs
ret
ret
push
jae
sbb
adc
jp
int
mov
and
add
xchg
inc
lret
xchg
mov
pop
mov
cmpsl
ret
adc
je
add
cmp
push
into
orb
sub
jae
jp
mov
push
call
jne
dec
jns
inc
in
mov
jns
sbb
scas
pop
add
inc
subb
test
lea
jecxz
fmuls
lahf
pop
call
and
adc
sub
xor
ljmp
lea
je
mov
push
xchg
test
sub
inc
imul
leave
fs
cmpsl
in
roll
jmp
outsl
dec
fwait
mov
les
push
push
fadd
inc
sbb
int3
sbb
daa
or
imul
xor
and
leave
jle
sbbb
stc
loop
lds
sahf
cltd
and
aaa
pop
or
pop
sub
push
std
xor
cmpsl
lahf
repz
rdpmc
test
repz
dec
and
pop
popw
inc
and
mov
lods
in
les
scas
sub
or
arpl
push
xchg
mov
nop
stos
mov
inc
jmp
mov
cld
mov
stos
out
es
test
fisttpl
adc
ret
jbe
sahf
inc
adc
mov
inc
ljmp
decl
adc
stos
pop
or
and
imul
idivb
inc
xor
leave
into
sbb
push
aam
dec
mov
push
movsb
xchg
idiv
jl
lods
xor
xor
repnz
stos
mov
in
jo
cmc
mov
cmpb
or
mov
mov
lods
adc
add
fs
sbb
cmp
out
mov
jge
or
fs
outsl
pop
pop
mov
mov
fsubs
fdivp
or
cmp
loope
movsl
jnp
xchg
pusha
or
insb
call
and
mov
jg
xchg
jne
mov
stos
inc
and
push
dec
adc
or
inc
cld
inc
bound
lahf
push
push
add
mov
mov
cltd
lock
cmp
or
imul
bound
mov
fmul
xlat
or
data16
mov
iret
pop
dec
repz
dec
cld
int3
leave
dec
xor
sbb
and
adc
imul
cmc
aam
sarb
clc
pusha
push
testb
jns
mov
xor
cmpsb
mov
lods
pop
cmp
or
pop
dec
sub
push
sub
aas
or
jb
enter
aad
test
das
ret
or
cli
jbe
add
shll
lods
scas
add
xchg
test
call
xchg
push
std
rorl
mov
mov
aaa
cmc
fdivs
sbb
cmp
xor
inc
into
lahf
addr16
xbegin
call
push
mov
push
das
jns
xchg
jg
and
mov
je
in
fcomip
xor
scas
jge
dec
test
xor
shlb
loopne,pt
imul
insb
ja
xchg
xchg
jle
dec
pushf
inc
cmc
sti
aas
inc
mov
add
fldcw
dec
xor
imul
sbb
fiadds
pusha
jp
ss
lret
adc
aam
sub
xchg
nop
stos
repz
jg
jae
stos
out
push
popa
cmc
jns
mov
test
cs
addr16
arpl
mov
or
mov
testb
repnz
sub
enter
loopne
mov
adc
sbb
mov
and
aaa
mov
mov
mov
leave
jl
inc
sub
stc
sti
jno
decb
or
add
pusha
xchg
cmp
sbb
fisttpl
imul
push
inc
dec
je
sahf
sub
clc
popf
lds
jns
jge
bnd
cld
icebp
rolb
push
sbb
mov
jg
test
stos
pop
fwait
add
clc
inc
inc
outsb
loop
aad
mov
push
pop
sbb
cltd
gs
mov
int
inc
imul
push
mov
and
testl
push
and
sbb
rcl
add
jle
and
xchg
ficoml
sbb
fwait
stos
pop
xchg
sarl
jp
xchg
push
shll
ds
push
lret
inc
cmp
sbb
push
mov
add
lret
mov
pop
mov
cltd
fisubrs
imul
add
jno
lods
pop
xor
cltd
pop
sti
mov
popa
jae
push
scas
imul
rclb
add
cmp
push
sub
sbb
add
mov
stc
adc
test
popa
repnz
sar
mov
sbb
inc
xor
mov
inc
dec
sub
stos
imul
jg
jne
cmc
jg
clc
in
add
push
rcrl
add
cltd
inc
aas
and
pusha
cmc
lds
cltd
movsb
dec
or
mov
and
cltd
cmpsb
adc
aad
movsl
clc
aam
or
aad
into
mov
push
outsb
mull
pop
test
cmpsl
xchg
in
jmp
js
dec
mov
pop
push
sar
negb
inc
jnp
mov
mov
jge
iret
mov
or
push
mov
in
add
mov
aaa
and
and
daa
pop
jmp
pop
data16
and
filds
dec
and
je
leave
in
push
lcall
daa
mov
mov
in
sahf
lahf
and
adc
jmp
movsl
out
push
mov
aaa
and
cmp
in
stos
shrl
sbb
aaa
xor
and
je
inc
mov
inc
adc
into
pusha
pop
pop
mov
test
dec
lock
andl
sub
jp
jae
pop
push
aad
xor
push
sub
dec
dec
cmp
xchg
loopne
cmc
out
cmp
and
and
xchg
cmc
js
insb
loope
jp
lock
mov
lretw
mov
sar
push
enter
cld
repz
xchg
scas
sub
mov
jne
int
iret
xor
aaa
xchg
out
push
daa
fiadds
das
mov
xchg
jg
and
mov
js
clc
inc
mov
std
inc
lret
inc
loope
push
mov
mov
mov
lret
pop
and
scas
xchg
push
fbld
and
jecxz
jo
popf
sbb
sahf
repnz
das
jae
sbb
aas
dec
sub
ja
rorb
dec
clc
dec
fs
mov
lds
adc
aad
mov
inc
xchg
iret
pop
movsl
xlat
mov
mov
cmp
or
loope
mov
add
stos
shlb
jmp
std
loop
pushf
loope
inc
add
dec
aas
sub
sub
pop
fs
pop
stc
pop
imul
out
mov
cmp
xchg
rclb
movsl
stos
and
adc
push
inc
loop
test
and
out
dec
mov
popa
scas
adc
or
cmpsb
xchg
mov
jp
and
add
mov
mov
jne
and
in
lret
inc
das
rclb
sahf
pop
inc
jo
shlb
sub
js
jge
aam
movb
push
push
and
pop
push
call
mov
leave
mov
xchg
insb
xchg
mov
pop
sbb
jnp
aam
jp
and
mov
fidivrl
andl
cmp
pop
bound
shr
inc
into
and
adc
movl
cmc
dec
dec
stos
stos
ljmp
dec
lock
mov
cmp
lock
xlat
add
jo
ljmp
mov
add
movsl
cltd
ficomps
rolb
jl
clc
stos
loopne
je
jb
pop
inc
inc
xchg
jns
add
rclb
cwtl
loopne
mov
fisubs
icebp
imul
jg
inc
mov
add
and
pop
push
push
imul
jg
mov
sar
cmp
jg
push
sti
out
into
adc
stos
xor
inc
cld
int3
mov
or
inc
lds
push
sub
or
lcall
pop
xchg
cmp
mov
outsl
pop
orl
push
mull
mov
jle
adc
scas
in
xor
and
inc
shl
icebp
push
cmpb
ljmp
and
loop
repz
test
int3
xlat
pop
daa
push
fstpt
icebp
out
or
lret
fmull
test
pop
pop
jl
adc
and
andb
fdivrl
fidivl
sub
xchg
orl
jne
scas
into
lret
call
stos
mov
pop
mov
mov
or
adc
cld
sub
fmuls
arpl
add
adc
inc
addr16
pop
fldenv
arpl
icebp
cs
lret
mov
push
add
fwait
xchg
lea
or
pop
fistl
adc
loop
iret
imul
add
hlt
sub
pop
xchg
insb
push
loopne
mov
cmpsb
jge
cli
sbb
fwait
sub
popa
fwait
daa
pop
xchg
scas
test
xchg
xchg
out
out
test
cli
and
fsubrs
leave
xor
xor
imul
cmpb
push
and
inc
aam
jp
dec
fsubl
movsb
add
sub
not
insl
mov
cli
sub
movl
dec
jb
jp
rcl
sub
push
jno
dec
pop
shlb
xor
push
lahf
loope
jp
jae
rol
xor
or
push
xor
aad
jne
arpl
push
aas
std
mov
test
fists
sbb
loop
cmpsl
inc
xor
mov
fistps
shl
into
push
inc
xor
sub
leave
push
cmc
das
imul
sbb
inc
mov
lret
test
jle
dec
cmpsb
movsl
or
icebp
imul
mov
fcom
popf
adc
insl
adc
mov
leave
mov
popa
xchg
xor
sub
int3
lds
movl
push
and
pop
stc
pusha
nop
into
int
push
inc
cmc
ja
xor
jnp
int
push
stos
pop
movb
aas
in
or
imul
mov
cmp
xor
mov
popa
mov
or
jno
pushf
mull
sub
add
aaa
xor
ds
test
mov
test
xorb
call
notb
push
and
or
mulb
aam
cli
jp
mov
fistpl
add
inc
mov
mov
pop
inc
sahf
mov
add
mov
sahf
lcall
dec
mov
xchg
adc
es
lret
push
into
popa
inc
out
xchg
testl
inc
mov
pop
xor
imul
or
inc
testb
loopne
add
ss
jecxz
cld
mov
adc
sub
adc
daa
ror
xchg
sbb
gs
clc
movsl
fs
rclb
test
les
add
pop
xchg
jb
pop
stos
sar
sbb
dec
sbb
and
aam
in
loopne
int3
imull
jbe
es
test
xor
mov
push
rclb
shlb
mov
cmpsl
xor
pop
fs
xor
pop
xor
xor
stc
pop
out
iret
cltd
push
out
sub
jbe
bound
jnp
out
xlat
leave
xchg
in
insb
pop
mov
cmp
sbb
sub
jecxz
je
sub
cs
scas
mov
cmp
sbb
shr
adc
nop
out
stos
callw
xchg
ss
cmp
popf
push
xchg
sub
sub
sub
fistps
lcall
cs
lods
jg
or
mov
inc
push
mov
push
mov
dec
add
int
jns
enter
inc
mov
mov
jno
flds
pop
sahf
stos
xchg
in
mov
stos
and
push
cmp
arpl
and
inc
daa
lahf
ficompl
xchg
outsb
fs
sarb
push
mov
mov
fisubrs
in
test
mov
int3
push
cmp
jle
or
pop
dec
loopne
cmp
mov
test
mov
lods
jb
cmc
pop
cmp
jno
and
movsl
mov
rol
std
test
mov
xchg
xchg
lock
and
fs
shll
test
addl
loopne
stc
call
xchg
adc
mov
rcr
and
mov
pop
cld
xor
into
mov
test
test
clc
sub
xchg
repnz
in
xchg
pmullw
jg
jge
shl
orb
add
out
cmp
push
outsl
xor
jbe
inc
lahf
ss
jb
js
add
xchg
ljmp
sbb
jo
shr
pop
xor
gs
inc
loope
sbb
out
and
fstps
outsb
bound
movl
jo
xchg
and
imul
int3
adc
pop
lods
bound
xchg
insb
or
pop
xchg
cmp
add
jb
mov
push
xchg
mov
sub
lahf
push
dec
jne
add
sbb
xchg
xor
iret
push
and
jo
push
inc
push
sbb
rolb
jo
shr
sbb
mov
mov
add
pop
inc
pop
aas
cmp
ljmp
sahf
popf
cltd
dec
pop
push
mov
sub
into
cmp
rcrl
sti
loop
add
outsb
dec
fsts
sti
sarl
stos
in
cmp
pop
pop
jmp
and
xchg
das
iret
jne
sub
push
pushf
xchg
mov
sub
out
bound
sbb
adc
add
or
sbb
fwait
cmp
inc
fsubs
mov
pop
sub
push
push
push
out
fnsave
shlb
mov
fnstenv
push
jecxz
lods
enter
jmp
inc
push
pusha
add
pop
fisttpll
insb
sbb
lcall
and
out
xor
mov
jg
jecxz
jno
popl
test
add
xchg
pop
jge
in
jnp
and
lret
rorl
cmpsl
mov
rorb
ret
shrl
jnp
pop
xchg
sub
dec
rcll
adc
shll
ror
pop
lcall
mov
xchg
cli
fistl
jb
xchg
mov
sub
sub
and
xor
xchg
hlt
test
test
jecxz
xchg
sub
or
or
pop
pop
sub
mov
sarl
mov
add
ret
dec
loopne
int3
lea
lret
fildll
andl
add
pop
in
aas
cmp
cwtl
js
adcb
fistps
int3
cwtl
into
mov
outsl
out
jb
sbb
test
and
jo
and
sub
jp
mov
in
cmc
data16
call
jbe
cld
loopne
lock
push
adc
push
sub
movsl
bound
push
lock
push
std
sbb
insl
std
cld
lret
xor
dec
mov
repnz
divb
test
jg
fildl
repz
aad
jbe
or
loopne
scas
sbb
int
pop
xor
pop
lea
fdivrl
add
push
mov
or
enter
leave
leave
inc
jae
cmp
dec
mov
push
sbb
shrl
xor
dec
jle
mov
xchg
mov
mov
and
out
mov
shlb
xchg
xchg
adc
js
mov
cmp
addb
sbb
test
call
xlat
xchg
fisubs
mov
test
jae
lock
pop
mov
mov
xchg
cmp
jne
cmpsb
pop
lahf
loopne
mov
imul
xchg
cmp
movsb
and
xchg
movsb
mov
popa
call
out
sbb
test
stos
test
bound
lret
out
pop
sub
xchg
aas
out
jne
fnsave
in
xor
fiadds
xor
mov
lret
movsb
out
xor
mov
dec
arpl
jg
ss
fwait
jae
out
stos
imul
clc
sbb
movl
and
jo
addl
das
jg
cmp
push
jno
adc
int3
imul
cmp
sbb
out
pop
xchg
mov
inc
mov
iret
dec
xor
jle
scas
pop
out
subb
cmp
in
mov
and
fs
mov
jae
xchg
mov
mov
popa
outsl
xchg
adc
mov
imul
cwtl
cmp
and
pop
xor
inc
jno
test
fsubrs
inc
sbb
stc
pop
mov
push
mov
push
outsl
decl
mov
shrl
incb
cmp
xor
lock
movsl
insl
push
and
jmp
pop
mov
jnp
pop
out
roll
out
out
int3
mov
push
adc
pop
cmpsb
mov
and
ret
add
das
loope
mov
les
pop
xor
mov
daa
daa
xchg
xchg
test
and
in
jmp
inc
pop
push
xor
or
cs
pushf
xchg
gs
stos
in
daa
jle
jmp
cmpxchg
mov
pop
jns
xor
stc
inc
cmp
adc
or
xor
adc
ljmp
sub
fstpt
mov
repz
mov
and
push
das
sub
imul
push
xor
fwait
jnp
jne
push
inc
into
inc
out
adc
mov
inc
mov
cmp
sub
add
jae
push
mov
cltd
nop
pop
lret
jo
ret
push
stos
inc
fiadds
mov
popa
loope
aas
std
inc
adc
into
mov
mov
loope
insb
and
je
inc
in
mov
sbb
in
notb
gs
sub
sub
cmpsb
cmc
mov
inc
sbb
mov
cmp
sbbb
dec
dec
ds
push
push
add
or
loop
mov
test
pop
sub
mov
leave
fucomip
mov
sub
pop
xchg
jmp
ja
jno
cmpsl
push
and
outsl
out
and
icebp
and
push
into
repz
mov
jl
sub
leave
lds
lea
or
pop
js
cwtl
fnsave
popf
pop
dec
add
adc
ja
mov
rcrl
mov
insb
pop
jns
pop
xchg
insl
mov
sahf
pusha
ret
mov
or
xor
test
fdivrs
cmp
mov
decl
pushf
in
xchg
xor
dec
in
mov
pusha
jae
iret
mov
gs
inc
enter
outsl
jb
call
adc
in
or
in
cmp
adc
and
je
enter
jl
xchg
stos
icebp
sub
add
or
test
pcmpeqw
sbb
rol
push
sti
in
dec
ret
xchg
dec
sub
aaa
or
inc
shlb
lea
and
cmpsl
addr16
xor
rolb
jb
pop
addr16
lds
mov
xor
xchg
sub
out
lahf
cmp
push
int3
jb
dec
adc
jae
or
sbb
and
std
inc
or
dec
adc
out
push
daa
xor
push
sti
data16
cld
adc
sbb
in
xor
sub
cmp
cmp
repnz
sbb
and
sti
dec
cwtl
cmp
push
das
cmp
pusha
pop
jle
call
fsubs
cli
inc
pop
lahf
jbe
xchg
clc
sub
add
pop
mov
adc
ret
add
shlb
jp
jnp
mov
mov
ds
jo
cli
lahf
fcoml
mov
add
jb
je
jmp
sbb
mov
mov
mov
cmp
ret
dec
adc
push
rolb
out
xchg
mov
cli
mov
cmpsl
insb
enter
loopne
data16
bound
roll
shrb
loop
or
imul
add
pop
lods
adcl
je
add
insb
xchg
xlat
jnp
movsb
repz
xchg
lret
es
push
mov
loope
fsubrp
fsubl
clc
cld
jle
jbe
mov
fwait
icebp
das
mov
sub
inc
push
mov
push
sbb
cmp
fwait
adc
sti
xchg
cwtl
cmp
cmp
cmp
or
push
movsl
mov
xchg
pop
adc
enter
lock
add
jo
mov
cmp
mov
sahf
ret
xchg
repz
fcompl
pusha
test
cmp
xor
cmp
out
scas
fldl2t
inc
jl
arpl
xor
and
xchg
cmpb
out
mov
popa
das
and
mov
adc
repnz
dec
jg
pop
xchg
dec
mov
jmp
sbb
xor
push
mov
cltd
aam
jmp
fs
xchg
das
and
jns
xor
jo
jmp
xchg
add
ds
cli
mov
xchg
sbb
mov
fdivs
pop
stc
push
ret
sub
adcl
and
ret
dec
sbb
and
jle
xchg
shlb
cmp
rclb
enter
insl
xor
mov
nop
pop
dec
pushf
cmp
iret
std
jp
pop
bound
xor
ret
sub
data16
divb
jecxz
test
sbb
inc
shrl
xchg
xchg
pop
jbe
inc
and
sub
xchg
jecxz
pop
add
sbb
loopne
cmp
mov
push
sarb
sub
jmp
mov
test
and
rorb
sbb
inc
adc
pop
and
sbb
imul
sub
cmp
outsb
in
push
dec
shrl
push
fcmovbe
and
repnz
and
jle
or
mov
lret
loop
cmc
or
aad
insl
pusha
push
and
dec
pop
sub
inc
adc
ja
or
mov
lods
iret
cld
ljmp
ret
lea
rolb
pop
mov
int3
fsubl
sarb
inc
dec
push
jb
push
jo
loopne
xor
je
jae
adc
xchg
mov
les
mov
repnz
clc
stos
push
xor
and
jmp
aad
xor
ljmp
lcall
popl
test
adc
xor
adc
and
ss
adc
scas
in
mov
push
loopne
inc
das
mov
nop
pop
movsb
pop
mov
shlb
ficomps
add
pop
stos
enter
lcall
or
push
jle
rcrb
jecxz
xor
leave
iret
mov
repnz
and
mov
imul
mov
dec
push
lea
jl
int
jecxz
in
adc
xor
bswap
mov
xchg
cld
in
cmpsl
aam
pushf
and
in
fnstsw
adc
mov
mov
cmp
push
iret
lret
mov
cli
repz
leave
pushf
push
loop
mov
in
push
mov
inc
adc
dec
mov
xchg
xor
jle
xchg
mov
inc
gs
stc
rorl
je
sbb
pop
mov
js
inc
cmpsl
inc
or
xchg
jne
jbe
roll
xchg
dec
inc
bound
nop
adc
or
push
add
inc
outsl
jp
std
mov
pop
inc
jnp
xor
pop
inc
hlt
movsl
or
xchg
fldenv
or
dec
lds
jno
or
jmp
adc
cmp
out
xor
shrb
and
popa
pop
loopne
inc
cmpsl
adc
pop
sub
cmpsb
pop
andl
cmp
adc
rcrl
cwtl
adc
jo
movsl
jae
pop
jmp
push
shll
pop
addr16
jecxz
cmp
mov
jmp
mov
cmp
sbbb
mov
sub
cwtl
movsb
je
call
lods
mov
js
jne
mov
mov
sbb
sbb
inc
cwtl
je
movsl
mov
std
aam
decb
dec
and
jbe
imul
daa
addr16
lods
pop
arpl
push
out
pushf
add
jl
loopne
mov
and
jno
mov
out
lock
pop
fwait
mov
movl
adc
insb
inc
out
sti
push
ds
mov
pop
fld1
stos
xchg
jle
rclb
arpl
aas
cs
pop
sbbl
xchg
shll
aas
sbb
popa
push
aad
fs
inc
mov
pop
adc
movsl
call
icebp
cwtl
popf
mov
xchg
dec
imul
add
cmpb
xchg
mov
sub
les
fsubl
leave
out
test
mov
in
mov
jo
ss
cmpsl
jns
and
imul
pop
popa
outsb
out
adc
mov
jae
aad
pop
pop
sub
bound
popw
sar
adc
daa
pop
call
andl
movsb
icebp
lock
sbb
jmp
add
sbb
lods
jns
out
imul
dec
xchg
frstor
add
leave
sub
jns
jle
repz
call
cmp
getsec
inc
out
and
sub
popa
lea
lcall
inc
fsubrs
dec
adc
sbb
push
pop
es
dec
cmp
test
adc
scas
lahf
inc
fildll
gs
pusha
mov
jp
inc
nop
shlb
mov
pop
in
mov
jns
jle
xchg
test
sbb
dec
inc
jge
push
mov
test
loopne
push
clc
fs
test
out
cmovnp
lods
and
mov
std
stos
cld
fldt
shlb
mov
fisubrs
cmp
pop
pusha
inc
shl
mov
push
mov
dec
ja
jo
or
int
std
shll
mov
stc
ss
movsb
loop
add
add
mov
rolb
aad
xlat
lcall
xor
adc
nop
shll
xlat
mov
ljmp
jo
daa
bound
ret
cwtl
cld
or
add
and
push
push
nop
add
repnz
mov
pop
lcall
add
ja
xor
adc
mov
mov
mov
es
rol
call
pushf
add
enter
sub
jbe
add
flds
ficoms
mov
mov
out
fistl
adc
mov
add
pop
into
pop
jmp
std
adc
pop
sub
add
and
ss
dec
adcl
lock
pop
pop
mov
roll
lds
mov
push
mov
dec
aaa
lods
mov
leave
or
push
cmp
leave
enter
leave
jg
call
leave
cltd
xchg
jnp
or
xchg
push
pop
mov
push
sbb
inc
push
and
lahf
aaa
mov
inc
enter
aas
sub
jnp
jno
push
jbe
xor
ja
loop
iret
inc
jl
xchg
mov
cmp
setg
sti
icebp
adc
push
jbe
dec
mov
jns
jle
and
pop
mov
sub
int3
addr16
adc
enter
xchg
repz
dec
pop
and
lods
out
pop
cld
push
sub
and
enter
pop
repnz
xchg
in
call
movsl
mov
sti
and
or
sti
lret
leave
popf
mov
xchg
cmpsb
cmpsl
lds
pop
jo
in
mov
dec
mov
test
pusha
outsb
ljmp
sub
inc
lock
xchg
mov
das
scas
jge
in
pop
js
ficomps
mov
repz
fcmovnbe
add
jp
jb
cmpsb
jl
add
and
sub
dec
cmc
push
push
rorl
outsb
ss
jle
jle
aam
imul
and
outsb
mov
adc
mov
adc
sbb
repnz
pop
imul
test
jnp
out
adcl
dec
inc
ja
xor
cli
jg
ljmp
lock
mov
fisubrl
jl
jmp
cli
aad
test
add
push
faddl
cli
cli
dec
cmp
mov
jno
insb
pop
repnz
mov
mov
stos
fs
loop
cmpsb
pop
sub
enter
push
stc
or
stos
cmp
shrl
fldt
jbe
mov
int
negb
jl
enter
fcompl
mov
dec
push
sub
aas
push
rcrb
mov
fnstcw
arpl
push
faddl
jl
bound
push
lcall
xor
in
sbbb
jl
loope
sahf
push
insl
mov
mov
lods
or
stc
jmp
xchg
adc
cmc
les
xchg
mov
add
call
mov
push
push
xor
mov
and
or
push
insl
jno
ds
adc
lahf
push
xchg
mov
ds
xor
pop
xchg
arpl
jbe
enter
adc
xorl
cmc
push
pop
add
jmp
inc
sub
push
and
and
pop
mov
xlat
sbb
iret
les
mov
daa
cmp
xor
icebp
je
cs
jle
rclb
out
lods
dec
add
enter
sub
xor
cld
cld
imul
in
push
je
push
into
lret
insl
pop
jbe
ret
jns
inc
dec
mov
fwait
movsl
push
push
test
test
scas
lods
xor
mov
xchg
cltd
push
iret
dec
xchg
inc
jns
mov
or
mov
cmp
pop
pop
mov
ret
mov
cmpsl
cmpsl
enter
insb
xchg
leave
push
dec
push
sub
inc
fsubl
xor
xchg
test
sub
inc
or
cmp
fwait
mov
push
iret
rorb
sub
jae
jl
push
test
dec
add
pop
jge
adc
and
or
pop
cmc
push
aaa
stos
xchg
push
lock
aad
cmc
repnz
mov
in
pop
lods
xchg
pop
je
cwtl
adc
into
mov
scas
add
sub
sub
lea
jle
add
leave
mov
repz
clc
and
ret
cmpsl
sbb
stc
xchg
data16
into
ror
adc
js
aaa
sbb
pop
xchg
adc
add
ljmp
xchg
pop
pop
pop
filds
mov
xchg
dec
ficompl
ja
adc
xor
adc
add
nop
fdiv
popa
xchg
adc
dec
add
sbb
lock
mov
cli
push
mov
mov
inc
lock
imul
test
neg
dec
add
addr16
jg
inc
mov
das
fiadds
push
mov
adc
out
popa
arpl
cmp
or
daa
jb
aaa
dec
test
loope
loope
pop
sub
sbbb
out
sub
loopne
cmc
and
mov
xor
push
in
popl
jo
cmp
add
sbb
jno
ret
mov
addr16
sbb
pop
sbb
sbb
jge
das
enter
repz
sub
cmp
movsb
push
or
dec
scas
xorl
and
cmp
inc
push
sub
mov
inc
hlt
fmuls
or
sub
sbb
inc
gs
sub
jae
dec
dec
pop
mov
mov
js
leave
ss
sbb
jg
cmp
push
add
sub
lods
pop
sbb
fidivrs
mov
popa
test
pop
mov
push
xor
popa
push
jb
mov
jecxz
aad
mov
fiaddl
adc
pusha
outsl
and
xor
loop
pop
and
bound
lea
scas
push
xchg
and
icebp
mov
push
test
sub
icebp
mov
inc
pop
scas
add
pop
das
scas
stc
push
ds
pop
sbb
xchg
repnz
popa
test
sbb
add
sbb
fisttps
cmp
sub
cmc
and
jle
dec
sbb
scas
out
addb
pop
out
mov
sarl
lret
fnsave
jno
mov
xchg
and
lds
xchg
rclb
lahf
popf
push
pop
inc
jp
fbld
shll
push
popa
xchg
jo
sbbl
sub
push
and
push
mov
and
mov
jb
or
adc
add
add
cmpsb
mov
cmp
inc
mov
jg
icebp
cs
jecxz
jns
lock
dec
adc
outsb
mov
inc
adc
fs
inc
inc
and
xor
mov
push
adc
mov
hlt
mov
fsubr
xchg
and
xchg
bound
sarl
and
mov
sbb
mov
sub
xlat
jmp
xor
cmp
int3
sti
stos
idivl
push
ss
cmpsb
sbb
repnz
xchg
sub
pop
lcall
xchg
cmpsl
and
les
jp
mov
sub
cmp
and
xor
add
lea
jns
and
inc
into
push
stc
out
lret
fdivl
cltd
sbb
out
pop
mov
test
xchg
fidivrl
ljmp
aas
lret
insl
lds
add
push
sbb
mov
icebp
jecxz
pop
daa
mov
pop
shl
stc
xchg
insl
push
and
push
add
adc
pop
mov
stos
ja
mov
jecxz
lret
jmp
fs
xchg
inc
xabort
mov
or
mov
out
cmc
fwait
sahf
roll
and
out
jnp
fcoml
xchg
lret
jns
cmp
js
sbb
xor
movsl
push
addr16
pop
pop
and
jp
fimuls
mov
fildll
nop
jo
or
cmp
repnz
arpl
lock
cmp
mov
iret
inc
cli
sbb
loop
sbb
mov
sub
out
cs
or
cmp
mov
dec
jle
pop
std
ja
mov
xlat
cmc
movsl
pop
cmp
pusha
xchg
or
pop
subl
icebp
pop
fsubrs
pop
clc
mov
push
or
ret
jp
push
daa
xchg
xor
pop
jle
push
mov
stos
aas
jg
inc
or
inc
adc
mov
pop
test
negb
into
lods
in
add
sbb
cmp
je
lock
pop
shl
push
int
xor
sbb
mov
push
clc
xchg
xchg
jg
loop
shl
lahf
xor
dec
or
xchg
sbb
icebp
inc
std
lods
mov
mov
push
scas
cs
sbb
int3
xchg
adc
or
xchg
xchg
loope
jno
push
inc
jle
and
mov
out
repz
pop
xchg
cmpsl
gs
pusha
test
jno
sbb
or
ljmp
dec
push
scas
fstl
out
sbb
add
faddl
dec
ret
jp
mov
enter
in
pop
into
cmpsb
cmc
aad
sbb
adc
je
sub
clc
sbb
test
mov
daa
ljmp
pop
pushf
jne
sbbb
inc
inc
ja
push
jae
daa
cltd
sub
xor
fstps
add
xlat
loope
ret
clc
into
jb
inc
sub
imul
jno
call
sahf
test
pop
pusha
cmp
cmp
push
cwtl
mov
scas
xorb
add
dec
jmp
scas
andb
pop
aam
add
dec
cmpsb
out
arpl
sbb
shll
cmp
aad
sub
xchg
mov
into
divb
mov
iret
jo
inc
cmp
jmp
mov
lock
inc
push
xchg
mov
hlt
jle
sahf
xlat
and
aas
push
mov
push
sub
cmp
dec
lods
cmp
and
lahf
enter
cld
dec
sbbb
mov
pop
jb
xor
and
mov
insl
xchg
movsb
cmpsl
pop
mov
sbb
pop
js
mov
sahf
pop
xlat
and
js
sub
je
imul
mov
sbbb
fs
das
adc
popa
mov
lock
cmp
jmp
rcrb
aaa
cmp
iret
xor
insb
test
lahf
push
sub
or
pop
and
adc
push
sbb
fmul
adcl
imul
imul
mov
or
add
in
into
mov
lret
leave
testb
jecxz
lret
rcll
jg
mov
mov
mov
setl
cmpsl
and
mov
sbb
mov
lods
ljmp
out
push
mov
adc
movsl
test
sbb
jnp
or
xchg
ds
inc
jl
mov
pop
cmc
ficoms
test
mov
rolb
addb
cmp
mov
jle
out
pop
js
and
jg
xchg
xchg
sbb
test
and
or
pop
add
pop
pop
inc
adc
adcl
push
test
adc
adc
cwtl
jecxz
jp
xchg
push
lcall
lret
pop
nop
or
cld
lcall
cmp
mov
pop
mov
inc
jl
arpl
inc
add
and
test
xor
jmp
jbe
adc
cmpsb
mov
bound
js
mov
adc
and
dec
test
clc
push
adc
sbb
in
fdivs
xchg
and
adc
pop
or
sub
iret
sub
enter
cmp
call
sub
or
rcrb
mov
orb
cli
stc
aas
lds
insb
std
mov
jne
add
aaa
test
test
push
pop
jmp
cmc
inc
loopne
jl
pusha
or
shl
push
gs
pop
andb
xor
call
inc
loop
fnstcw
dec
sub
inc
sbb
pop
adcl
or
xchg
fisubrl
fldenv
xlat
es
mov
les
adc
mov
or
push
test
mov
fdivp
xor
out
sub
add
sti
mov
dec
sub
in
pop
popf
stc
loop
test
test
or
repz
jl
daa
adc
or
test
push
inc
jmp
fbld
or
mov
cmp
mov
pop
lock
popa
cmp
sub
pushf
mov
pop
jle
jns
xor
mov
add
or
inc
inc
mov
stos
mov
lods
push
and
test
cmc
pop
lret
aas
lahf
test
xchg
push
int
and
mov
ret
mov
es
cmp
and
ds
sbb
xchg
and
cs
ljmp
or
in
sbb
fbld
push
xlat
test
jmp
cmp
mov
shr
and
jb
jbe
enter
pcmpeqw
movsl
dec
pop
addb
sbb
xchg
xchg
lods
push
setbe
test
and
jbe
out
jne
ficomps
mov
loop
push
push
xor
xor
adc
shr
mov
cmp
push
cmpsl
cltd
les
je
ret
add
inc
xor
xchg
xor
clc
jns
mov
xor
pop
mov
add
inc
lret
adc
xchg
dec
jmp
fsubs
push
dec
bound
mov
jp
mov
mov
push
dec
insb
mov
mov
ss
push
aas
call
or
icebp
jns
xor
xor
cli
or
add
jns
repnz
push
inc
loope
xchg
pusha
mov
jo
insl
ss
in
or
jne
or
dec
aam
push
adc
push
imul
pop
xchg
fimull
enter
sbb
sbb
fdivrs
pop
cmpsb
jnp
lea
pushl
pushf
pop
xchg
mov
xor
mov
in
pusha
inc
sbbl
lds
imul
add
andb
cld
imul
mov
out
push
xchg
mov
test
sbb
ret
mov
add
and
push
cmp
mov
push
aas
or
adc
adc
pop
and
push
sbb
adc
add
or
shr
les
js
adc
push
add
mov
cmp
pusha
push
jb
daa
sbbb
mov
mov
daa
out
add
outsb
inc
push
and
lods
stos
sti
faddl
jecxz
push
mov
in
sahf
data16
mov
adc
mov
mov
and
lcall
das
lret
jecxz
cli
outsl
cmp
mov
arpl
arpl
pop
adc
popa
gs
pop
jb
mov
ja
sarb
mov
aas
mov
test
cmp
push
mov
jnp
push
mov
test
mov
jbe
inc
push
mov
sar
mov
fcmovne
lahf
test
sub
dec
mov
jecxz
idivl
xor
cwtl
sub
add
cmpb
fisubl
popa
icebp
jnp
std
adc
lretw
test
out
and
mov
xchg
ds
leave
out
outsl
popa
into
call
scas
jbe
cmp
push
xchg
cwtl
mov
test
sub
push
cmc
pop
pusha
xchg
mov
out
push
mov
pop
ret
push
mov
std
aaa
aad
mov
movsb
or
jge
push
lcall
scas
add
stos
pushl
inc
mov
pop
test
sbb
push
mov
xor
fcompl
push
insl
mov
mov
adc
movsl
adc
je
mov
pop
mov
mov
fcoms
or
pusha
sahf
mov
fst
das
or
mov
mov
mov
dec
pop
mov
test
stos
xchg
mov
test
adc
icebp
sbb
inc
rcll
jne
or
push
cmc
cs
lret
fdivrp
push
mov
sub
lret
push
pop
out
mov
push
mov
inc
cmc
adc
mov
add
pop
outsb
cwtl
push
test
xchg
icebp
push
int
mov
xor
hlt
push
sbb
mov
mov
sarl
js
lret
xor
icebp
mov
and
xor
lea
aam
call
arpl
dec
mov
addr16
and
loopne
movsl
or
add
sbb
lret
lret
testl
push
sahf
iret
mov
adc
adc
jp
xchg
inc
dec
sub
insb
stos
cmp
test
lret
cwtl
loopne
mov
leave
sti
cmp
pop
imul
push
pushw
inc
and
inc
adc
jae
clc
pop
stos
sbb
mov
pop
call
sub
vmovlps
jb
or
addr16
adc
int
rcrb
add
fistpl
enter
fists
add
jecxz
sbb
in
mov
out
sbb
loop
mov
vpackssdw
sbb
push
add
in
in
popa
sahf
sub
test
cltd
shlb
into
jp
dec
shlb
jmp
sbb
test
call
jae
lods
into
cld
in
mov
stc
inc
pop
test
pop
cmp
xor
stos
mov
pusha
leave
push
lods
pop
inc
sbb
adc
xchg
pop
or
mov
pop
cltd
clc
dec
mov
dec
push
or
test
ds
into
fdivrl
xchg
clc
xor
xor
gs
xchg
xchg
loope
jns
adc
loop
and
jl
adc
cmp
lahf
fstl
test
imul
das
xlat
mov
insl
mov
sub
cmp
mov
dec
aas
adc
ret
jnp
cmp
imul
fwait
ret
scas
imul
inc
push
mov
nop
jecxz
dec
pop
push
ret
mov
sbb
push
pop
xor
iret
mov
add
divb
xchg
cmp
adc
sti
jo
insl
jg
mov
mov
lods
out
inc
push
cmp
movsb
scas
insl
sub
mov
pop
cs
dec
mov
xchg
nop
in
adc
loop
lahf
sub
cwtl
mov
out
outsb
sub
inc
pminsw
fnstcw
dec
repnz
cs
and
sti
mov
pop
mov
xor
movsl
fsubrs
add
jo
cmp
clc
pusha
and
mov
and
sbb
dec
xchg
je
iret
loope
and
ret
mov
fsts
dec
mov
aad
mov
clc
push
sbb
cmp
test
leave
aaa
jecxz
outsl
cs
dec
jns
shll
xorl
inc
lea
dec
icebp
and
js
jecxz
jecxz
sbb
arpl
mov
insb
cmpsl
movsl
push
xor
adc
mov
dec
scas
aas
cmp
add
cmp
lret
mov
bound
aad
jg
repnz
xchg
inc
enter
sbb
pop
add
mov
in
icebp
adc
pop
andl
aad
cmp
lahf
pop
lahf
pop
inc
fidivrl
mov
sbb
fyl2xp1
loope
push
or
data16
test
lock
sbb
pushf
lea
inc
repnz
mov
js
andl
or
mov
fsubl
pop
rcrl
inc
cmc
xchg
push
dec
fdiv
xor
repz
add
jbe
cltd
enter
fwait
daa
adc
test
push
in
sub
and
xor
gs
dec
das
dec
cmpl
jnp
sbb
sub
cld
aam
shlb
lahf
add
or
out
sti
int
sbbl
dec
xchg
shll
cmp
in
cli
push
sbbl
icebp
fisubl
and
sub
ret
xchg
mov
mov
xchg
pop
jne
sbb
and
push
ss
je
push
cmpsl
repnz
sub
inc
mov
int
ror
in
push
out
xchg
sti
ja
out
ret
clc
nop
sub
pop
jo
cwtl
xchg
flds
and
aaa
jp
or
movsb
test
push
mov
inc
cmp
dec
xchg
mov
fiaddl
jp
cmp
xchg
dec
into
jo
mov
dec
icebp
mov
lret
jmp
inc
and
arpl
ljmp
repz
xchg
cmpsl
out
push
iret
or
jae
cmc
cli
lcall
fwait
mov
add
js
cmpsl
jns
xor
cmp
jmp
jl
add
pusha
into
xor
repz
or
cmp
cmpsb
dec
scas
add
jg
or
xchg
adc
and
mov
in
es
push
push
decb
jne
inc
and
adc
pop
icebp
lcall
mov
mov
mov
jno
jg
mov
int3
mov
andl
jecxz
prefetch
mov
and
add
lahf
and
lret
aaa
sub
bound
stos
nop
mov
lea
sub
movsb
imul
xchg
pop
outsl
jae
pop
dec
push
lcall
add
sub
mov
popf
sahf
icebp
int
adc
jne
add
inc
les
and
pushf
sub
inc
jge
cli
popf
inc
cmc
xor
pop
leave
pop
ret
outsl
xchg
cld
outsb
decl
dec
dec
pusha
fcom
out
sub
and
fwait
and
aad
outsl
std
xchg
movsb
mov
stc
loope
inc
or
ja
and
dec
jge
cmpb
sub
in
sahf
clc
mov
out
test
ja
jmp
stos
xchg
lret
cmpsl
loopne
imul
aas
jb
fwait
pop
rorl
xchg
cltd
adc
cs
cmp
popf
cmp
lods
adc
ret
mov
lcall
mov
pop
sub
loop
cmp
push
clc
mov
mov
xchg
int3
jo
test
nop
mov
inc
or
inc
insl
stos
mov
imul
pop
mov
loope
hlt
pop
push
fstps
inc
pop
inc
xor
lods
imul
movsb
or
out
mov
outsl
jno
jbe
ljmp
mov
fs
and
test
xchg
movl
bound
pop
cmp
lods
fdivrs
fmuls
xor
in
fs
inc
mov
ret
sub
dec
fs
jbe
xchg
lock
or
mov
push
cmp
clc
push
xor
jle
nop
and
aam
out
push
sbb
in
inc
hlt
pop
cmp
rolb
sti
pop
sub
mov
push
jns
pusha
dec
xor
shlb
int3
insb
sub
ret
pop
stos
dec
or
insb
fxrstor
pop
daa
push
lods
lds
mov
in
loope
xchg
in
or
jne
push
lret
leave
sbb
sbb
pop
fimull
dec
jne
cli
subb
push
push
aad
fildl
icebp
cld
cmp
dec
inc
push
arpl
stc
jbe
xor
clc
lret
cmpsl
mov
scas
push
xor
pop
push
dec
mulb
je
or
popa
cmp
in
cmp
xchg
outsl
outsb
int3
fs
or
addl
ja
sbb
pop
in
xlat
test
dec
pop
testl
int
sbb
pop
adc
gs
leave
leave
outsl
fsubrl
mov
in
jge
inc
aas
js
ret
cs
pop
pop
sub
bound
fs
xor
mov
shrb
test
adc
cld
addb
scas
xchg
pop
movsb
jl
xchg
fldt
xchg
adc
adc
dec
cmp
stos
ljmp
sahf
decb
lock
data16
mov
mov
jge
mov
adc
in
jns
dec
and
pushf
or
xlat
fistpl
dec
sbb
push
xor
jne
movsl
call
loop
mull
dec
fwait
lds
je
cmpsb
test
sub
adc
dec
repz
leave
fldcw
pop
push
mov
push
jg
mov
sub
push
imul
push
adc
xor
arpl
mov
je
jge
xchg
inc
cmpsb
push
int
cmp
aad
cmp
jo
arpl
jbe
add
mov
dec
les
out
add
subl
adc
pop
movsb
xchg
mov
movsl
vpunpckhdq
xchg
mov
xor
ja
fisubs
mov
lret
ror
add
roll
push
jae
mov
pushf
inc
outsl
sub
loop
xlat
push
adc
and
ljmp
mov
ljmp
add
cmc
inc
adc
mov
xchg
sub
push
jp
push
je
je
lcall
and
cmpsl
lret
push
mov
xor
fwait
xchg
xchg
bound
sbb
xchg
xchg
pop
push
lretw
sub
lock
push
mov
mov
push
andb
xchg
ja
adcb
mov
xor
mov
xchg
loop
or
push
imul
cmp
stos
fidivl
lea
jmp
popf
or
adc
shrl
mov
pop
jns
addb
pop
mov
inc
addr16
mov
mov
xor
lea
lahf
fcomps
inc
or
dec
dec
jae
cmpsb
or
fbstp
inc
mov
sub
or
push
adc
je
fstpl
inc
pop
inc
out
xlat
cmp
leave
aaa
rolb
out
divb
xchg
or
lea
or
xor
dec
sub
push
and
push
mov
emms
sti
xlat
sub
or
shrl
rcrl
les
setae
shrl
or
mov
nop
loope
test
ret
jno
fwait
dec
push
fsubrl
icebp
dec
xchg
xchg
and
xor
xchg
dec
mov
push
cmpsb
ss
pop
out
dec
or
stos
out
pop
addl
aaa
mov
js
int
pop
adc
xor
shrb
stos
les
adc
repnz
pushf
jge
push
mov
push
aad
pop
fwait
sbb
push
dec
gs
shll
and
or
js
sbb
je
and
or
arpl
jnp
movsb
mov
mov
scas
mov
jno
add
popa
iret
adc
add
xor
push
push
jp
roll
mov
shl
lret
inc
push
movsb
sub
adc
pusha
aas
popl
xor
adc
cld
xor
and
repnz
push
adc
pop
mov
or
and
out
lret
inc
pop
push
jge
push
cmc
es
aad
xchg
mov
sarb
in
mov
sub
inc
jb
jbe
add
idiv
push
adcb
sti
leave
mov
ja
icebp
sbb
adc
scas
popa
mov
ljmp
mov
lods
xchg
pop
stos
es
push
cwtl
in
add
xchg
cmpsl
lea
mov
enter
aad
mov
popf
lret
int
aaa
cwtl
hlt
scas
mov
mov
push
mov
mov
or
mov
sub
inc
mov
stos
xchg
pop
subb
jl
test
js
pusha
mov
gs
dec
sarl
pop
jecxz
fsubp
out
shll
stc
std
int3
les
stos
aam
cmp
out
arpl
inc
fsubrl
in
mov
mov
scas
frstor
dec
jg
pop
xor
sbb
sarb
mov
xor
faddl
cmp
xlat
add
mov
cmp
icebp
mov
lcall
add
mov
cmc
pop
leave
mov
mov
lcall
jns
xchg
jnp
repnz
push
sbb
imul
scas
lea
jp
jo
sbb
gs
andl
mov
clc
jo
jae
xor
mov
pop
pop
fs
mov
mov
cmc
scas
xor
in
jo
mov
inc
jp
add
mov
cli
mov
adc
mov
pop
outsl
popf
loopne
xor
jg
aas
leave
inc
cmp
jb
sysexit
add
ret
ss
inc
cmpsl
sub
popf
movb
sbb
lret
xchg
push
sub
jle
ret
or
mov
sbb
lcall
ds
cmp
clc
mov
int
jg
push
mov
gs
sub
and
leave
iret
bound
xor
mov
or
cmpsl
mov
cmpsl
cmp
hlt
and
icebp
sbb
imul
lret
ss
adc
lcall
or
insl
arpl
mov
aas
jns
lcall
in
shlb
jo
in
stos
pop
push
sub
pop
stc
movsl
rcrw
adcb
addr16
xchg
pop
jno
sbb
imul
cmp
fwait
mov
jecxz
pop
fiadds
push
mov
ljmp
push
int3
add
jg
clc
inc
xchg
or
xlat
mov
cmp
out
ret
movsl
xor
test
lret
adc
repz
jg
pusha
fadds
sbb
mov
decb
jo
push
mov
inc
jbe
adc
ljmp
push
pop
lods
jne
test
jae
lret
rcrl
lret
divb
sbb
push
xchg
aad
ret
nop
lea
in
cli
pop
bound
pop
in
aas
incb
cmp
or
scas
ds
into
clc
mov
dec
adc
gs
icebp
scas
jge
adc
lret
ret
mov
pop
ror
add
xchg
stos
jp
or
push
mov
cmp
xchg
inc
push
outsb
push
lcall
xor
cmp
jo
pop
js
inc
les
subb
leave
mov
popfw
and
cltd
cmp
fwait
insl
bound
je
mov
lret
jmp
xor
ss
adc
or
sbb
clc
or
outsl
std
in
push
shr
mov
mov
cmpsl
aaa
mov
pusha
jecxz
mov
aas
xchg
loop
xchg
rcr
mov
push
lret
pop
cmp
lods
subl
xchg
add
roll
cmp
ret
enter
in
hlt
fnstenv
mov
leave
mov
jne
cli
out
loope
cmpsb
lcall
sub
xacquire
scas
add
sbb
pop
xchg
int
push
imul
loopne
jl
cmpb
cld
sbb
and
data16
mov
stc
sbb
xor
scas
les
stos
fadds
inc
icebp
jb
xor
mov
scas
push
lret
lock
das
jae
mov
sbb
jg
jb
test
and
mov
cmp
imull
je
and
arpl
inc
adc
movsl
scas
cmc
pushw
xor
cmpsl
pushf
xor
loop
xchg
inc
jmp
cld
mov
popa
add
or
insl
cmpl
fdivp
popa
xchg
sarl
imulb
iret
sahf
or
mov
inc
dec
adc
mov
push
aas
test
jmp
std
fs
xor
jl
pop
jmp
and
imul
mov
mov
repnz
mov
out
lods
cmpsl
inc
push
xchg
repz
data16
sbbl
pop
int
inc
push
pop
jge
bnd
xchg
push
xchg
loop
xchg
in
je
rcll
daa
pop
push
or
dec
mov
stc
imul
xor
aaa
dec
jle
in
mov
cmpsb
mov
roll
add
stos
pop
mov
adc
sahf
bound
pop
sar
mov
dec
mov
scas
bound
inc
call
test
inc
mov
ror
test
mov
test
dec
pop
mov
sbb
mov
sub
sbb
test
jo
sbb
jg
sahf
ljmp
xchg
fs
arpl
lahf
xchg
jo
jne
inc
lret
mov
test
test
lret
fadd
inc
adc
cmp
inc
hlt
pop
push
aas
xchg
push
lods
stos
xchg
aam
test
mov
fwait
cmp
repz
add
imul
mov
sbb
sub
mov
in
mov
jbe
dec
xor
dec
in
mov
or
int3
insl
icebp
int3
xchg
in
push
mov
stos
cmp
call
xchg
je
and
pop
neg
mov
std
arpl
cmp
cmp
divb
inc
add
mov
movsl
arpl
sub
fs
dec
test
fnstenv
cmp
mov
xor
ret
or
imul
mov
mov
pop
scas
dec
or
enter
lods
imul
jbe
cmpsl
lret
add
push
mov
mov
or
outsl
mov
in
add
outsb
adc
ret
into
movsl
movsb
dec
out
adc
movsl
sub
sub
fldcw
fmulp
jecxz
ja
sarb
rolb
jo
in
inc
into
ret
scas
jp
add
inc
pop
pop
out
test
fldenv
push
mov
xchg
popf
shll
ss
cmp
push
push
mov
mov
mov
sub
dec
inc
stc
dec
adc
lcall
push
push
lret
mov
aaa
push
mov
dec
fiaddl
rorb
rcl
cltd
ja
or
push
push
mov
scas
outsl
dec
sub
and
dec
jle
xchg
sbb
sbb
in
mov
dec
addr16
imul
mov
das
or
int
mov
repnz
stos
push
lcall
sbb
int
inc
jbe
cmp
push
pop
add
jns
mov
insl
push
dec
ror
or
inc
leave
ret
int3
les
lret
test
pop
sub
jb
and
bound
jns
push
jnp
push
mov
xor
cld
rcll
aas
dec
adc
cmp
jns
jno
xor
push
jae
insb
mov
mov
xchg
test
jmp
enter
shrb
mov
adc
lahf
in
lock
cmp
movsl
mov
in
pop
or
outsl
xchg
js
xor
leave
inc
imul
pop
push
pop
aas
push
testb
movsl
sub
rclb
test
push
loope
imul
popf
lock
push
pushf
xchg
sbb
ljmp
ret
sub
bound
pop
adc
les
mov
les
jae
mov
add
mov
ficompl
xchg
xchg
dec
aaa
add
sbb
and
cmpsb
loop
in
lahf
inc
inc
fidivrs
jg
addb
fisubrl
rorl
pop
pop
dec
inc
mov
pop
aam
mov
aaa
cmp
shll
and
imul
adc
movsb
test
pop
cwtl
int3
xchg
push
mov
test
jb
adc
sbb
inc
xor
mov
sbbl
inc
lret
and
sti
lods
test
shl
cld
les
jg
mov
cmp
loope
or
cmpsl
aas
subl
sub
in
paddq
or
mov
mov
into
push
cli
and
add
pop
cltd
clc
scas
cs
xor
pop
xor
or
in
fistpl
push
bound
in
jp
ljmp
je
sub
xor
add
mov
leave
mov
out
cli
mov
xchg
mov
add
stc
lods
push
jmp
outsl
scas
test
sti
neg
mov
pop
mov
inc
and
sub
lock
lock
test
dec
sahf
pop
popl
repz
and
mov
inc
sbb
loopne
roll
mov
mov
data16
stos
sub
mov
mov
sbb
lods
xorb
jae
icebp
dec
or
ret
xor
adc
mov
push
cmp
rcr
sarb
inc
insl
push
mov
lds
inc
cmp
jg
in
jecxz
scas
jge
or
into
popf
and
test
loop
jmp
inc
enter
xchg
idivl
jl
or
arpl
and
out
sub
je
hlt
push
mov
mov
stos
gs
cmp
stos
and
lret
movsl
insb
push
popf
sahf
xorb
xor
loop
outsl
imul
xor
jecxz
or
ljmp
pop
push
xor
test
sbb
fldl
call
pop
test
xchg
dec
stos
jge
sbb
pop
sbb
dec
pusha
movsb
inc
mov
pusha
jmp
xor
sahf
das
imul
rolb
lods
jmp
jge
lods
pop
mov
dec
jno
mov
scas
fsubrp
lods
or
stc
mov
addr16
lock
aaa
leave
imul
rclb
je
dec
sbb
stos
insl
jnp
push
xlat
adc
repz
xchg
into
arpl
mov
movsb
scas
test
mov
sbb
cmp
js
xchg
dec
mov
dec
cld
xor
push
xor
lret
outsl
push
xchg
test
sarl
cmp
adc
es
aas
bound
pop
push
sub
pop
jae
stos
push
add
push
cmp
cli
pusha
fdivrl
push
mull
inc
mov
sub
xchg
imul
push
push
arpl
aad
data16
add
mov
push
mov
in
dec
sub
in
cmp
xor
mov
out
loopne
jg
inc
jno
fnstcw
loop
movb
clc
loope
mov
mov
lods
pop
scas
loope
call
mov
rorb
pop
pop
rorl
jecxz
pusha
push
out
cmp
popf
cmpsb
movsb
imul
cli
mov
xor
xor
dec
ljmp
rcll
loopne
inc
in
jno
in
insb
jmp
mov
movsb
stc
and
and
sub
fwait
mov
add
xchg
push
pop
fcmove
push
lret
push
sub
andl
jecxz
add
inc
xor
inc
rcl
das
test
hlt
push
inc
inc
xchg
pop
repnz
mov
dec
arpl
test
push
pop
push
cmc
lds
push
push
push
jo
push
mov
add
cmc
testl
es
adc
adcl
in
lcall
xchg
insl
cmpsb
mov
fldenv
sbb
pop
sub
xchg
pop
push
dec
fadds
clc
xchg
push
mov
bound
xchg
sub
fmuls
mov
gs
cmp
int
xchg
mov
clc
jbe
inc
mov
aad
mov
mov
dec
test
out
loop
mov
cmp
roll
xchg
push
inc
lea
or
sarb
or
mov
xchg
fsubrp
or
sbb
jg
pop
test
outsl
movsl
icebp
fsub
fsubrs
out
call
mov
xchg
or
mov
hlt
cmp
mov
js
push
fimuls
sub
sbb
notl
jp
orb
sub
mov
mov
sbb
fdivrs
xor
inc
ds
fistl
and
and
xor
fs
lret
pop
sbbb
pop
jb
aad
cwtl
jecxz
adc
std
mov
mov
enter
mov
push
popa
notb
mov
mov
insl
cmp
test
mov
and
dec
cmp
push
ficompl
sbb
gs
test
loopne
repnz
int3
sub
mov
fisubl
popf
dec
mov
loope
sbb
jae
cmpsl
out
sbbb
jo
cmp
xor
stos
and
mov
cmp
push
sarl
wbinvd
pushf
xlat
and
stos
pusha
add
add
es
test
mov
fwait
ja
mov
repz
cmp
dec
popa
mov
xchg
push
push
dec
movq
xchg
push
inc
inc
pusha
ret
out
inc
sbb
xchg
or
jno
pop
push
leave
and
add
mov
cmp
mov
leave
adc
or
cmpb
cld
pusha
rorl
insl
push
mov
xor
dec
push
lds
adc
clc
mov
shrb
pusha
test
mov
dec
clc
mov
mov
idiv
add
lea
lods
or
and
out
xchg
cs
cmp
insb
outsb
xor
jbe
inc
jge
ret
fmull
jbe
insb
lahf
push
mov
add
mov
mov
mov
and
fwait
jecxz
and
out
pop
sbbb
dec
dec
and
negb
dec
mulb
and
inc
push
add
leave
jl
sub
cmpb
lds
sbb
data16
push
inc
mov
jp
cmpsl
mov
cmp
inc
jnp
mov
jge
or
adc
xchg
sbb
iret
je
out
insl
les
and
cmpsb
scas
clc
ja
iret
into
xor
cs
push
imul
repz
call
xchg
test
mov
and
int
xchg
pushf
push
mov
pop
lcall
fwait
sub
xchg
mov
push
push
stos
mov
testb
jmp
aad
lahf
mov
add
inc
mov
add
and
pop
lret
mov
test
inc
sbb
mov
push
ret
inc
lds
push
repnz
mov
dec
mov
mov
icebp
aam
mov
inc
pop
sub
loope
dec
mov
jnp
xchg
in
pushf
lock
push
movsl
dec
addr16
ret
shll
hlt
repnz
xchg
stos
sbb
pop
cmp
dec
lds
lret
push
inc
sub
or
stos
popf
loop
leave
imul
xor
cmp
sub
pop
mov
rcll
mov
xchg
int
cli
test
lea
in
mov
jmp
or
sahf
hlt
mov
imull
add
icebp
push
push
adc
in
jecxz
mov
pop
sbb
div
pusha
push
xor
sti
cli
bound
pop
mov
js
or
lock
lock
lcall
aaa
mov
mov
mov
addl
loope
ss
mov
aaa
jns
imull
jno
cwtl
aaa
xchg
mov
sti
mov
cmp
sbb
xchg
rcr
cld
imul
into
test
mov
mov
mov
inc
and
imul
jbe
push
pop
aam
in
jbe
inc
cmp
and
repz
iret
sbb
arpl
xchg
imul
sbb
dec
adc
push
imul
dec
push
lods
loopne
ret
xchg
mul
dec
dec
mov
mov
pop
mov
int
cld
icebp
jecxz
daa
stc
and
sub
jae
jb
outsl
inc
or
scas
or
push
mov
js
xor
mov
sbbb
pop
cltd
repnz
fimull
out
enter
pop
xor
xor
outsb
jns
sub
insb
loopne
stc
test
pushf
sarl
mov
xor
cmp
fsubr
test
imul
cmpsl
jmp
and
int3
fs
push
stos
std
sar
adcb
mov
rorl
ficomps
pushf
lock
or
enter
pop
pop
xchg
int
loopne
push
je
push
cmp
sub
sub
adc
mov
test
sbbl
mov
and
stos
cltd
imul
cmpsl
mov
shlb
add
add
xchg
jecxz
push
xor
fldenv
xor
outsb
loop
sahf
cs
insl
int3
jno
mov
mov
add
xchg
les
mov
push
jp
mov
shll
fucomi
ja
shlb
fnstsw
lret
fs
test
pop
mov
jno
pop
test
das
jg
cwtl
mov
rorl
sarl
jne
lcall
lret
cmp
xchg
push
xor
imul
subl
jne
push
stc
or
faddl
mov
stos
pop
jp
pusha
adc
fs
cmp
clc
jbe
cmp
loop
push
sbb
cmp
stos
cmp
iret
pop
push
cmp
mov
ss
scas
mov
mov
xor
jnp
loop
fists
adc
or
dec
js
das
push
ja
bound
push
sbb
push
mov
out
jns
enter
push
lret
hlt
out
fidivl
inc
and
testb
cmp
adc
xchg
sahf
or
adc
in
pop
in
in
or
dec
add
mov
jno
sbb
insb
or
pop
jno
cld
lock
jno
jnp
mov
jbe
sub
dec
cmc
push
loopne
call
xchg
mov
psubb
jmp
xchg
pop
push
ds
mov
sbb
lea
inc
pop
dec
outsl
xor
out
jmp
fbstp
repz
adc
frstor
jb
add
cmpsl
sbb
mov
xchg
pop
inc
lret
fcmovu
pop
push
jecxz
add
lret
lret
popf
mov
aaa
push
mov
or
sbb
aam
in
aaa
mov
adc
dec
cmc
adc
dec
addl
mov
je
in
jb
mov
test
fwait
jae,pt
xchg
push
enter
and
fninit
ret
sarl
cld
mov
xchg
out
sti
dec
xlat
insl
lods
xor
cmpsl
cld
adc
rcrl
out
adc
out
scas
std
aas
ror
lcall
and
jns
pop
js
sbb
mov
push
xchg
push
dec
pop
mov
inc
es
ljmp
add
das
push
insb
pop
jne
jbe
pop
cld
push
xor
and
push
cmp
sbb
jp
jb
mov
scas
jmp
divl
xchg
std
mov
bound
pop
xchg
jecxz
dec
test
mov
cmp
mov
mov
sbb
out
jae
xchg
mov
or
and
and
into
jle
push
pop
pop
jmp
add
push
mov
adc
out
mov
lods
arpl
and
dec
mov
leave
mov
ja
mov
or
or
faddl
dec
xchg
adc
cmp
add
jno
negl
add
pusha
inc
inc
aad
xchg
pop
incb
pushf
pop
sub
add
pusha
mov
cmc
fdivr
xor
jb
ljmp
push
hlt
ret
and
lods
cmp
mov
movsl
es
mov
fisttps
movb
jle
pusha
mov
mov
adc
cmp
mov
mov
or
mov
nop
clc
daa
dec
sti
ds
xchg
into
aam
std
sub
mov
pop
data16
dec
mull
roll
rol
sbb
jns
scas
xorl
mov
fistps
jge
and
in
pop
lret
es
fdivrs
es
sahf
or
imul
loopne
xor
insb
mov
iret
dec
mov
je
or
cltd
into
sub
or
jnp
lea
enter
rcrb
push
cmpb
push
inc
lret
out
std
pop
das
popa
cmp
imul
cmp
add
inc
add
sub
pop
sahf
push
pop
dec
ret
imull
dec
test
inc
xchg
sub
shr
addr16
mov
xchg
jmp
popa
xchg
pop
or
pop
inc
aas
mov
arpl
mov
cli
aam
mov
lods
jo
adc
adc
jns
aad
xor
int3
test
adc
subb
outsb
mov
stos
jg
mov
faddl
fwait
mov
in
or
lea
insl
cltd
add
adc
shlb
mov
fs
mov
stc
test
xor
and
sbb
outsl
mov
push
rcr
pop
jmp
sub
sbb
clc
pop
add
and
lods
mov
shlb
cltd
mov
cmpsb
xchg
stos
dec
orl
lea
test
xchg
lcall
in
fs
sahf
mov
out
push
inc
addr16
and
sbb
out
jo
or
movsb
pop
js
mov
gs
cmp
out
and
in
sbb
es
and
xor
das
xchg
mov
xchg
jmp
popa
call
imul
ja
mov
mov
xor
lods
or
addr16
loope
dec
lds
adc
xlat
cmp
mov
mov
call
jae
mov
loope
sarl
pusha
popa
dec
test
lock
movsb
mov
ficompl
notb
jae
jg
cltd
dec
movsb
cltd
xorb
pop
adc
xchg
fdivr
jg
push
ds
repz
je
fildll
out
mov
cmp
pushf
mov
ja
nop
cmpsb
push
jge
decb
sub
xchg
subl
outsb
sub
les
pop
xchg
cmp
xchg
cmp
rorb
test
iret
fstpt
aam
nop
into
push
sbbb
das
ja
clc
cmpb
xor
sahf
push
push
sbb
inc
xchg
fsubl
shl
mov
mov
push
cmp
mov
ja
or
push
pop
das
push
push
jle
fldenv
loope
mov
push
ds
push
cmpsl
sub
xor
pop
jno
std
dec
push
add
out
maskmovq
popf
jle
popa
out
out
cli
adc
jp
aas
fistps
popf
mov
jge
push
sti
pusha
push
pop
cmc
jp
pop
and
stos
xor
inc
sub
les
out
mov
xchg
xchg
add
mov
cmp
lcall
jmp
jge
aaa
aaa
adc
cld
sti
dec
pop
dec
jo
push
in
jle
mov
mov
int3
gs
test
or
loopne
lods
sbb
add
or
push
mov
mov
fidivl
fs
mov
ljmp
mov
or
add
jl
and
ret
lahf
in
out
loopne
xchg
std
pop
xor
jg
icebp
and
stos
jae
notl
out
xor
movsb
dec
xchg
or
sti
pop
add
sub
inc
xor
pop
es
pop
imul
les
ss
stos
inc
insl
int
adc
mov
push
pop
aaa
fcompl
ret
add
stos
les
sbbl
sub
jge
popf
push
pextrw
imul
adc
dec
and
jbe
shlb
shll
sahf
adcl
push
push
daa
lret
jae
repnz
or
cltd
sahf
push
xchg
jg
push
iret
xor
scas
in
or
push
jg
sub
dec
and
adc
sbb
mov
addr16
add
mov
rcl
lea
imul
jmp
ljmp
lahf
adc
in
cmp
lcall
int
cmp
mov
mov
and
in
fstpt
xchg
jno
add
rcr
imul
scas
cmp
sbb
cltd
inc
sbb
sbb
sbb
pop
push
decl
pusha
clc
pop
add
push
test
outsl
ss
cmp
stos
xchg
fsubl
stos
mov
jg
stos
pop
shll
lea
fstpl
test
cmp
mov
jmp
jmp
xchg
mov
push
push
mov
fistps
xchg
xchg
or
and
int
pop
nop
into
xchg
out
inc
cmpb
mov
daa
sarl
rcll
cld
jg
push
inc
mov
lock
pushf
je
jg
fs
test
lahf
js
lock
inc
repnz
mov
js
aaa
pop
adc
xchg
sub
insl
ss
arpl
shll
mov
movsb
in
inc
dec
add
repnz
inc
lret
sahf
and
addb
pop
movl
hlt
xchg
xchg
pop
out
push
lods
cmp
sub
insl
mov
cmpsl
mov
or
out
and
xchg
fs
outsb
std
add
shll
pop
push
jle
or
mov
jno
adcb
xchg
or
stc
sbb
push
subb
fucomi
js
pop
addr16
xchg
mov
pop
or
cmp
dec
and
xchg
xchg
or
dec
lods
stc
pop
cmp
xchg
add
lahf
loop
push
lret
loope
mov
push
movsb
das
jb
je
cmpsl
xchg
or
addr16
pop
inc
xchg
push
and
pop
std
and
rclb
xor
jo
mov
inc
and
or
push
cmp
cmp
out
fisttps
outsb
inc
adc
scas
rolb
es
jge
add
mov
lcall
adc
cmp
lock
adc
adc
hlt
jecxz
jg
adc
or
mov
mov
dec
jle
rclb
dec
inc
and
pop
sub
pop
sti
mov
stos
push
sub
jmp
aaa
aad
mov
push
je
sahf
loope
and
push
pop
push
lds
je
imul
cmpsb
dec
mov
inc
inc
loopne
stos
lret
adc
ja
fsubr
std
repz
push
jo
out
and
leave
sub
inc
push
movsb
mov
cwtl
test
mov
test
mov
cmc
scas
cmpsl
inc
or
sar
push
cltd
or
mov
out
pop
scas
jne
mov
clc
push
loop
insl
sbb
pop
in
mov
jb
into
xchg
gs
lds
adc
pop
out
lods
shlb
lahf
xor
mov
inc
cmp
xor
leave
adc
cmp
dec
dec
add
cwtl
lahf
out
outsb
inc
sub
jae
roll
in
sti
inc
std
dec
xor
gs
xchg
and
or
fldcw
push
and
fldt
or
aas
jecxz
adc
push
push
add
jge
les
mov
and
cli
pop
fwait
sahf
lret
insb
adc
ss
mov
mov
data16
xor
xor
shlb
stos
xchg
imul
pusha
scas
adc
insl
les
push
mov
add
iret
and
lock
gs
mov
ret
cwtl
sbb
lret
adc
lret
jp
cld
leave
inc
pushf
or
pusha
aas
dec
pop
mov
pop
and
not
imull
data16
xor
jecxz
rcr
cmp
or
lahf
cmp
outsl
stc
out
adc
lods
sub
xor
push
js
or
or
sbb
mov
or
shll
mov
fistl
jge
sub
mov
mov
and
xor
adc
cmp
jmp
xchg
sbb
in
fwait
jno
xor
push
mov
pop
pop
xor
add
les
cmp
adc
pop
dec
rcrl
adc
ljmp
cltd
lahf
inc
pop
pusha
dec
imul
test
sbb
mov
sbb
xor
imulb
lret
pop
into
stos
lret
cmp
ds
fwait
mov
addr16
neg
xchg
test
daa
test
and
mov
cmpb
mov
jmp
jns
push
xor
xlat
sarl
mov
cmp
shrb
jg
icebp
cltd
dec
scas
xor
rorb
push
out
cmp
sbbb
fsubs
adc
cmp
dec
jecxz
push
in
pop
jnp
mov
ret
and
mov
and
pop
into
sti
xorl
inc
xchg
pusha
pop
adc
jns
into
mov
fstl
flds
data16
inc
or
scas
inc
loop
push
insb
dec
mov
jg
or
insb
push
jg
mov
cli
and
int3
mov
and
push
sbb
sbb
adc
jmp
test
jle
mov
mov
cmp
or
jne
sbbb
cmp
mov
imul
cli
xorb
jb
test
lret
in
jmp
push
push
shll
out
int
jno
sti
sbb
dec
cmp
test
lea
inc
push
sub
ja
xlat
adc
mov
gs
and
mov
fadd
cli
mov
or
fistps
or
stc
in
je
adc
loope
imul
sbb
or
stos
popf
je
add
add
pop
jge
mov
mov
xchg
or
clc
out
scas
jle
push
pop
jp
cltd
xchg
mov
inc
sbb
jnp
mov
mov
or
jo
add
std
jns
cmc
vpcmov
sahf
icebp
jb
mov
sti
sub
dec
aaa
adc
and
mov
cmp
inc
popa
xlat
fdivrs
fcmove
cld
out
dec
jae
mov
bound
je
cmp
adc
loop
pop
pop
shll
stc
ja
push
or
imul
push
xor
sub
movsl
loope
dec
xlat
imul
outsl
sub
sahf
push
out
pop
inc
fcmovnb
hlt
push
das
or
add
out
xlat
push
leave
or
out
xor
sbb
lret
lcall
hlt
addb
stos
sub
fcmovnbe
push
lods
or
stos
aas
and
nop
cwtl
jge
arpl
jne
jg
mov
cld
jmp
sub
movsb
popf
cmovbe
xchg
cmp
pushf
dec
test
inc
gs
jnp,pt
adc
lret
sar
push
insb
sbb
add
je
pop
and
addl
or
pusha
nop
ljmp
negb
fsubs
adc
cmpsl
jo
sub
in
inc
inc
stos
mov
clc
adc
pop
ds
aam
sti
cmpsb
pop
andb
lret
push
cmp
sub
lahf
xchg
cmp
cs
mov
test
mov
cmpsb
cltd
inc
or
jb
std
mov
mov
scas
or
xor
mov
xchg
jo
cmp
push
pop
inc
xor
test
pop
mov
js
jle
imul
mov
pop
adc
lds
das
fnsave
ficoms
stos
inc
mov
out
fcompl
pop
dec
and
int3
pop
mov
and
cmp
mov
arpl
sub
pcmpgtd
adc
dec
cmp
stos
pusha
push
mov
shrl
rcrb
call
pushf
sub
arpl
cmp
xor
loopne
xchg
cmp
xlat
mov
test
push
cmp
mov
in
jb
jns
push
cmp
xchg
fstp
in
jo
push
cmp
push
scas
sub
push
dec
sub
dec
sub
lods
cmpsb
push
inc
fcoms
cmp
scas
fs
mov
shll
push
jno
test
mov
xor
shll
lock
adc
cmp
pop
loopne
outsl
sub
pop
jnp
adc
fbld
adc
rcr
adc
cmpsb
push
lret
adc
adc
jo
in
orl
lret
push
push
inc
repz
ljmp
mov
clc
scas
scas
in
dec
mov
cmpsb
scas
lock
dec
fsts
cmpsb
cmpsb
imul
jbe
fstpt
mov
test
pop
jno
sbb
rcrb
sub
mov
ja
out
cmp
cmpsb
mov
adc
dec
mov
jb
loopne
clc
xlat
push
dec
mov
pop
cmp
inc
mov
cmp
popa
jne
movsl
xchg
or
pop
mov
rclb
scas
outsb
push
adc
pop
xchg
and
lahf
stc
push
xchg
lahf
mov
jp
scas
iret
cwtl
arpl
into
cmp
sub
cld
inc
popa
jmp
lret
cmp
pop
mov
push
mov
je
enter
mov
mov
outsl
xchg
mov
lods
add
mov
testl
cmp
jl
xchg
arpl
mov
test
push
add
in
and
shll
jae
divb
jae
pop
pop
lahf
inc
loopne
in
inc
sbb
ret
adc
jbe
mov
add
inc
and
out
fnstcw
ja
xchg
data16
das
mov
mov
clc
loopne
test
adc
test
xchg
inc
add
add
sbb
xor
cs
inc
popf
inc
fld
faddl
jp
add
sbb
xchg
sub
pop
jno
lret
cmp
pop
test
test
push
imul
test
push
pop
pop
cmp
lock
mov
repz
adc
and
pop
test
jo
rcr
in
mov
xchg
negl
rcl
jb
jbe
mov
sbb
cld
arpl
or
out
jbe
cmpsb
cmp
mov
sahf
adc
fcoms
lea
test
or
pop
mulb
or
push
or
fisttpl
dec
adc
adc
adc
dec
or
adc
in
adc
jp
jp
arpl
pushl
push
mov
pushf
pop
nop
cld
jb
repz
sub
std
icebp
and
test
sub
ret
mov
cs
cmp
sub
sub
cmpsl
cld
and
and
mov
outsl
arpl
pushf
sbb
pushf
push
jl
dec
ret
dec
lods
lret
push
stc
xor
cmc
in
lahf
push
dec
std
in
sub
mov
sub
loope
mov
imul
and
jns
mov
xchg
add
sbb
adc
loop
and
mov
and
adc
test
push
rcrb
jne
lods
icebp
jmp
xchg
cmpsl
add
xchg
inc
iret
dec
repnz
mov
xor
jne
mov
stc
ret
mov
into
mov
cmp
dec
xor
test
mov
out
jae
jle
movsb
pop
clc
jle
add
aaa
addr16
negb
mov
outsl
mov
or
mov
xchg
mov
cltd
or
xor
sub
jl
or
popf
mov
dec
orb
das
fimull
pop
shrl
stc
mov
sub
jb
es
and
inc
stos
cmp
clc
or
movsb
cmp
jo
jmp
lahf
jae
push
cld
push
in
dec
ffree
adc
je
jle
fdiv
mov
mov
sub
adc
jbe
adc
dec
push
sub
fisttps
iret
into
xchg
xchg
pushf
mov
outsb
aad
cmp
movl
out
arpl
and
inc
push
inc
bound
push
pop
pushf
pusha
out
jle
jp
pop
push
xor
jae
repnz
rorl
adc
jp
and
call
call
ret
aas
xchg
sbb
pop
pop
add
xchg
sbb
test
adc
je
sbb
dec
test
xchg
pop
adc
mov
sub
stos
jbe
pop
jbe
in
inc
fnstsw
sbb
inc
push
aad
add
int
lds
xchg
mov
inc
mov
and
jle,pt
rol
pop
push
ds
fsts
cmpsb
jmp
xchg
add
cmc
insl
cmp
shll
mov
sbb
sub
sbb
stos
cmpsl
repnz
movsl
sbb
mov
test
rcll
pop
in
int3
inc
xchg
mov
das
popa
test
ss
ret
add
dec
mov
jnp
sbb
sbb
sbb
frstor
les
dec
fsub
cmp
push
mov
jl
push
cwtl
lods
imul
sub
push
pusha
stos
mov
test
pushf
and
sub
inc
mov
inc
fimuls
inc
mov
imul
inc
arpl
mov
mov
std
mov
je
ss
jmp
and
push
sahf
mov
loop
mov
inc
adc
xlat
shlb
and
imul
sar
inc
in
xor
cmc
fists
sbb
popa
lcall
pushf
lea
bound
push
cmpsl
cmp
das
sbb
notl
add
fsubl
pop
add
movsb
fists
add
sub
imul
cmp
xor
flds
je
ret
loopew
popf
lods
dec
or
arpl
adc
sub
int
adc
jb
fs
xor
jg
aas
add
mov
cmc
mov
mov
pop
inc
and
ja
push
sarb
in
add
scas
and
sub
mov
roll
cmp
out
sahf
cmp
pop
add
out
imul
stos
push
sbb
insb
xlat
pop
mov
fsubs
pop
or
xchg
xchg
xchg
shlb
push
popf
cmp
les
dec
add
push
aam
cmc
aas
mov
pop
fsubr
fisttps
cmp
addr16
pop
scas
or
outsl
lea
dec
fidivrl
out
lock
js
inc
fs
rcll
lock
enter
int3
lcall
xchg
subb
imul
sub
fcoms
lcall
js
not
jb
lods
das
or
jmp
jae
bound
nop
fmuls
movsl
cmp
clc
sbb
xchg
movsb
adc
push
mov
pushf
mov
xor
out
cmp
adc
jmp
shrb
sub
mov
ljmp
jne
cld
cmc
in
pop
into
jb
fwait
ds
mov
mov
mov
sub
sub
sub
loop
push
sahf
jmpw
adc
out
xlat
xchg
xor
jbe
xchg
sub
pop
pop
mov
lods
push
push
push
xchg
arpl
inc
rolb
mov
lea
dec
fcmovb
sarl
jne
bound
lods
xchg
fcoms
fmul
xlat
imul
ret
adc
fsubl
ja
pop
out
rcr
cmp
push
lea
loope
inc
jmp
ret
pop
xchg
data16
pop
xor
and
push
or
lcall
jae
negl
nop
mov
mov
clc
clc
fwait
cmpsb
mov
ja
push
xchg
pop
rorb
push
fnsave
mov
pop
aam
out
inc
push
mov
sarl
push
push
cmpsb
push
dec
and
push
mov
mov
scas
xor
js
cmpl
sub
cmp
xorl
jle
gs
lds
test
push
and
xlat
cmp
and
ss
int3
sub
mov
jb
push
add
test
lea
dec
bound
adc
push
ret
aad
aaa
push
and
cmp
aam
fcomi
test
and
test
fsubl
mov
popf
stc
xor
idivb
in
sbb
push
nop
inc
mov
mov
fcmovnb
add
enter
mov
ret
jle
nop
mov
ss
je
mov
mov
lods
movb
adcb
or
push
dec
insb
cld
loope
cmp
push
mov
add
mov
fwait
and
xchg
mov
test
stos
push
movsl
and
lods
adcb
out
arpl
call
xor
int
out
xor
mov
jo
mov
sbb
cwtl
call
cmpsl
jg
cmpsb
dec
jl
dec
into
cwtl
dec
test
inc
sbbb
push
xchg
jno
dec
dec
push
das
movl
or
inc
es
mov
mov
adc
shll
pusha
cmp
inc
mov
xor
jnp
lret
pop
cmc
adc
mov
push
or
orb
out
cmp
xlat
or
mov
push
push
pop
xor
in
fcompl
pop
pop
scas
movsb
xchg
orb
lock
es
cmp
jns
aad
lds
fbstp
lahf
rcll
mov
mov
jl
sbb
outsb
in
jecxz
sub
inc
cs
or
pop
out
adcb
pop
hlt
in
cmp
xor
push
aaa
fcomi
pop
jne
pop
fsts
fs
fwait
jp
mov
jbe
inc
mov
mov
fwait
dec
and
mov
test
jmp
xchg
outsl
pop
cmpsl
scas
jl
push
jbe
mov
in
mov
jae
in
lods
pop
jno
push
sub
xchg
inc
cmpsb
leave
sub
xor
add
dec
lret
jg
test
mov
shll
jge
scas
jmp
lods
inc
mov
push
mov
orl
mov
lret
adc
std
jo
popf
xchg
into
enter
sbb
andb
ss
mov
dec
es
jbe
gs
dec
mov
fs
ljmp
insl
ds
push
ljmp
js
mov
pop
and
mov
mov
test
mov
jo
push
inc
pop
inc
xchg
xchg
out
mov
mov
aam
scas
dec
sub
pop
push
das
cltd
adc
push
repz
jo
lret
pop
sbb
cli
mov
push
push
imul
outsl
mov
cmp
notl
and
xor
push
and
cmp
push
jg
xor
int
movsb
fldt
dec
mov
jb
into
jb
xlat
jnp
mov
adc
sbb
dec
add
xor
pop
adc
push
dec
push
cmpb
bound
mov
jg
fwait
adc
pop
add
jge
pop
cltd
mov
xchg
inc
aas
xchg
out
xor
in
jp
movsl
mov
jg
cmc
add
jnp
hlt
lret
mov
cs
and
push
and
mov
dec
pop
nop
stos
mov
iret
dec
movsl
lea
lcall
sub
ljmp
arpl
push
int
jecxz
mov
push
jo
mov
subb
loope
and
sbbl
and
in
jns
push
fs
les
in
sub
pop
push
outsb
jg
xchg
mov
enter
outsb
sbb
je
subl
inc
push
mov
call
mov
cltd
imulb
inc
sub
out
inc
fisttpl
cmp
mov
mov
les
pop
xor
int3
inc
addr16
test
jae
iret
das
xor
out
imul
cmp
mov
pop
xchg
pop
push
movsb
xchg
sti
lock
and
push
ds
mov
xor
or
test
xor
les
cli
ss
std
out
inc
test
shll
js
stos
and
rcrl
inc
cmp
jp
xchg
stc
in
aad
das
jno
mov
mov
sahf
cmp
jae
mov
lds
xlat
jge
pop
sub
adc
jbe
xchg
scas
mov
enter
mov
cld
or
sub
xchg
xchg
les
jp
adc
loopne
pusha
pop
push
cmpsb
dec
outsb
sub
test
dec
mov
popf
cs
xor
stos
lahf
aam
into
inc
std
ret
lret
fidivrs
inc
mov
cmp
js
pop
sar
repz
cmp
xor
mov
mov
xchg
scas
fwait
pop
fcmovnbe
stos
sbb
push
push
push
mul
sbb
faddl
inc
jmp
pop
push
ret
pop
push
or
jno
aam
adc
mov
or
jecxz
pop
pop
cwtl
lret
push
sub
mov
inc
in
push
pop
lea
ficoml
movsl
andb
xor
sub
adc
ret
xchg
push
add
arpl
add
inc
je
hlt
std
cmp
push
stc
or
test
mov
mov
dec
aas
lock
sti
add
cmpsl
sub
or
push
push
xor
sbbl
xchg
jne
jne
jo
in
rorb
imul
insl
into
or
inc
add
jo
jae
jg
fidivl
cli
sbb
jno
or
sbb
stos
jg
leave
add
sar
les
out
popf
jg
push
dec
sub
lea
dec
aaa
xchg
out
adc
mov
lahf
add
cmp
and
sbb
or
cmpsb
std
jo
mov
cmp
mov
mov
scas
xchg
ds
xchg
icebp
out
dec
std
ret
imul
fcmovb
push
imul
dec
mov
inc
mov
mov
and
scas
ret
aam
inc
jb
aaa
mov
test
mov
jb
adc
adc
sbb
in
lea
in
adc
and
out
push
and
inc
dec
or
cmp
in
hlt
ret
icebp
mov
lods
subb
loope
dec
inc
adc
fidivl
mov
adc
mov
push
mov
pop
push
dec
and
push
adc
xor
pushf
div
cld
and
cld
int
dec
dec
sbb
out
push
repz
loope
jae
pop
lahf
sbb
mov
js
lds
aas
lds
out
in
pop
xchg
xchg
jle
mov
jo
adc
sub
dec
fst
add
jne
test
sub
push
popa
mov
xchg
faddl
in
pop
push
gs
mov
sub
loope
pop
lret
mov
aas
xor
incb
mov
and
fists
div
pushf
addr16
fnstenv
ljmp
sub
sbb
cmp
sti
cmp
or
sbb
and
dec
push
enter
sub
stc
xchg
sub
mov
fldl
sti
fimuls
adc
mov
mov
aas
mov
sahf
gs
cli
cmp
nop
rclb
movq
ss
filds
push
push
mov
enter
ret
push
push
dec
popa
dec
push
and
outsl
or
rcll
test
daa
lods
pushw
mov
mov
aaa
lret
das
stc
mov
leave
mov
jg
mov
aam
jmp
lret
and
iret
fwait
xor
stos
bound
jo
or
sbb
lods
xchg
push
repnz
inc
dec
xchg
push
dec
cmp
mov
cmp
loop
or
or
mov
adc
jno
pop
pusha
xor
xchg
repnz
xor
inc
mov
push
pushl
push
iret
insl
pop
or
xchg
cmp
and
mov
loopne
dec
addl
out
imul
rorb
movsl
xchg
pop
adc
mov
push
sbb
and
aad
aas
pop
ljmp
sub
int
pop
insl
push
sub
mov
ljmp
push
push
pusha
movsb
xchg
pop
fildll
inc
mov
add
sbb
cmp
mov
jo
pop
inc
jmp
push
and
jl
insb
in
jae
pop
fsubl
jne
and
cmpsb
pusha
xchg
adc
cmc
mov
outsl
mov
xchg
leave
dec
mov
addl
xchg
jecxz
mov
aaa
mov
mov
and
sti
sbb
xor
repnz
test
mov
jp
or
xchg
dec
orl
xchg
and
pop
jle
adc
jns
dec
fcoms
push
fmull
daa
cmp
xor
test
movl
mov
pop
and
xor
or
movsl
scas
sub
sub
addr16
and
or
imul
clc
push
push
fwait
mov
push
ficoml
hlt
mov
mov
sarl
pop
xor
call
sbb
xor
sub
dec
jle
dec
scas
push
cmc
ja
adc
xor
sub
and
push
xchg
pop
cmp
out
jno
cmp
add
sbb
adcl
rorl
movsl
adc
movsb
xor
add
movsl
mov
mov
push
pushf
insb
sbb
ret
jne
add
add
cmp
aam
pop
movsb
cmp
loope
jg
insb
xchg
adc
out
sub
mov
push
mov
pop
add
lock
cwtl
lret
bound
xchg
sbb
test
push
gs
xchg
inc
lret
inc
and
jae
dec
jns
out
js
sbb
xchg
clc
nop
push
nop
mov
test
push
scas
xor
jns
xlat
and
dec
lcall
cltd
add
repnz
pop
mov
std
clc
mov
arpl
int
clc
dec
pop
sarl
dec
in
mov
neg
lret
popf
ds
loopne
mov
mov
nop
jae,pn
clc
add
lea
inc
mov
mov
sub
add
nop
insl
std
mov
cmpsl
inc
mov
xor
cmc
xor
dec
cmp
icebp
minps
pop
jo
push
mov
arpl
xchg
cld
in
punpckhdq
test
sbb
inc
mov
notl
mov
lret
sub
xchg
movsl
add
shlb
int3
or
sub
inc
adc
imul
arpl
roll
or
dec
mov
add
or
in
or
pop
xchg
sbb
mov
fimuls
stc
push
add
mov
fistpll
add
sub
push
aad
mov
mov
lcall
cmpb
dec
or
popa
and
cmp
inc
xor
pop
jmp
lods
out
mov
pop
dec
inc
pop
or
adc
pop
adc
sbb
out
mov
cltd
push
dec
into
icebp
or
push
mov
pop
cwtl
mov
pop
jle
xchg
movsb
inc
insl
and
push
cltd
mov
inc
mov
dec
push
imul
pushf
jno
popa
pushf
sbb
mov
sbb
push
out
inc
mov
into
sub
pop
pop
stos
fisttpl
mov
adc
inc
dec
mov
jg
or
dec
ret
leave
dec
stc
test
xor
cwtl
in
xlat
push
in
adc
mov
inc
mov
fiadds
fisubrs
dec
scas
es
aam
lods
sbb
out
sub
xchg
jecxz
dec
add
movsb
xor
fwait
call
pop
divl
inc
jns
xchg
xchg
or
xchg
ja
push
adc
hlt
fsubrl
fs
scas
mov
fstl
repnz
outsb
leave
push
mov
fdivrs
enter
dec
dec
or
jo
insl
shlb
push
inc
test
shl
int
or
or
xchg
xor
ret
cwtl
lock
lahf
movsb
xchg
sub
mov
sbb
xchg
push
stos
mov
pop
bound
jmp
lcall
pop
inc
popa
movsb
push
push
jb
push
xor
xchg
out
sbb
cmp
push
mov
push
mov
jo
pop
hlt
jns
ret
and
cmp
je
popf
jno
mov
cmp
imul
push
sbb
add
or
popf
xchg
xor
pop
pop
nop
mov
mov
enter
pushf
fbstp
sahf
dec
scas
jb
pop
mov
shll
jb
test
in
stc
mov
inc
in
cmc
cmc
pop
pop
pop
jle
mov
sar
std
pop
push
push
divb
and
and
cmp
push
mov
mov
xchg
jle
rcll
dec
jl,pn
nop
pop
add
jnp
test
addr16
lds
mov
daa
inc
int3
pop
mov
mov
push
lret
daa
pop
mov
xor
adcl
mov
addl
pop
incl
xchg
push
jae
jns
mov
inc
cmp
pop
sgdtl
outsb
and
dec
dec
imul
xlat
arpl
pop
inc
sahf
mov
and
fisubrs
test
nop
das
call
mov
outsl
inc
andb
das
pop
loop
aad
mov
jo
fistl
jl
pop
xchg
jg
mov
push
and
divl
and
mov
dec
scas
mov
enter
ficompl
add
jg
call
jecxz
mov
sbb
pop
inc
loope
pop
mov
pushl
inc
ret
adc
xor
adc
out
inc
mov
scas
mov
or
dec
jns
imul
out
out
std
cmp
test
scas
jge
movsb
pop
lds
ret
pop
daa
mov
jp
jl
push
leave
add
mov
int
int
adc
mov
pushf
inc
mov
bound
pop
dec
pop
jecxz
jnp
aaa
cli
lea
mov
inc
into
sbb
adc
push
pop
pop
jl
push
add
sarb
push
add
jno
ret
mov
mov
imul
fcomp
adc
aam
mov
or
fstpt
in
adcl
in
or
sub
imul
push
mov
test
int
enclu
daa
push
test
jp
int
repz
clc
dec
cmpsb
nop
ss
xor
leave
jo
xchg
ret
add
mov
in
imul
mov
stos
mov
mov
pushf
jae
jle
int3
inc
fsubrl
jbe
divps
dec
loopne
pop
jae
aad
and
paddd
negb
andl
add
mov
stos
outsl
xchg
cmp
shlb
test
stos
mov
cmp
jne
mov
ss
inc
ds
dec
dec
inc
mov
sub
lea
movsl
out
hlt
clc
sub
add
xor
cli
xchg
adc
add
roll
sub
ja
test
mov
dec
inc
push
aas
sbb
mov
in
cs
test
decl
xor
fiadds
insl
sub
aaa
sub
out
mov
fiadds
pop
fst
test
outsl
loop
xor
cltd
and
lds
pop
mov
xor
test
mov
rcrb
add
lcall
rcrl
movl
xor
sbb
push
sub
je
loop
push
or
and
cmp
cmpsb
jb
or
or
and
dec
push
mov
inc
dec
sub
adc
aad
mov
and
inc
sbb
testb
stos
cmp
push
lret
xor
push
jno
loopne
push
add
push
cmp
sbb
adc
jb
dec
mov
inc
push
sub
cmpsb
pop
dec
icebp
out
xchg
adc
jbe
dec
fsubrl
out
push
fs
test
pop
or
loopne
dec
clc
into
ljmp
adc
outsb
stc
mov
inc
sub
or
daa
or
jae
lock
fwait
pop
loope
lret
jnp
xchg
cmp
inc
lea
test
cld
cs
les
lds
mov
imul
mov
dec
or
sbbl
sarb
push
xchg
pop
lahf
notb
jmp
ss
inc
and
mov
jmp
mov
cwtl
push
add
popf
dec
mov
outsb
pop
or
mov
sub
push
inc
out
cs
push
and
shll
jl
cli
mov
lock
imul
jns
cmc
outsb
test
push
mov
push
gs
cmc
repnz
xor
push
sbb
push
in
aam
repnz
mov
mov
mov
andl
xchg
cmp
out
subl
out
in
test
fisubl
sub
loop
aas
lods
sbb
loopne
mov
dec
jge
cli
adc
push
inc
loop
std
mov
push
pop
push
js
pushaw
cmp
mov
fimuls
or
mov
ret
dec
in
jp
inc
mov
outsb
fsubr
adc
stos
jecxz
cmpsl
movsb
icebp
addr16
adcb
add
pop
cld
dec
std
outsl
xchg
ljmp
xchg
sahf
pop
iret
roll
push
xlat
negl
xor
inc
sub
add
lock
adc
incb
dec
push
jno
push
cmc
arpl
push
and
dec
mov
adc
pop
iret
fistl
and
ss
hlt
cltd
pop
ljmp
dec
enter
or
scas
push
sub
xchg
pop
jle
fistps
mov
call
cmc
icebp
das
aam
cmp
out
cmpw
js
call
pop
rolb
gs
pushf
jbe
loopne
jae
cld
pop
sbbb
lock
xchg
aad
into
jnp
ror
pop
int3
outsb
or
repnz
jb
jae
ror
or
pop
dec
js
mov
call
jnp
xchg
push
mov
icebp
repnz
fs
mov
jnp
mov
dec
ficompl
mov
xchg
jl
fwait
sbb
dec
rcr
jp
imul
adc
or
jae
push
add
scas
cli
lret
jge
or
cmpsb
ljmp
lcall
push
test
adc
and
sahf
mov
popa
fs
pop
roll
mov
sub
pop
popa
pop
fstpt
jge
push
into
pop
cld
jne
les
mov
cli
push
fwait
xchg
sbb
flds
push
es
cltd
pcmpgtb
enter
test
lock
pop
cmp
sbb
jl
jg
pop
dec
ds
insb
sub
sbb
rolb
jg
enter
insb
scas
jae
add
aam
inc
stos
add
inc
push
xchg
js
test
inc
stos
aas
leave
imul
cli
sub
aas
pop
testl
jg
fisubl
fistl
lock
xchg
adc
jp
dec
xor
pushf
push
clc
data16
or
js
das
adc
and
xchg
add
aas
sarl
sbb
enter
stos
pop
jmp
in
pop
sub
xchg
cwtl
in
mov
test
sub
xor
jo
test
std
push
mov
push
push
je
scas
inc
xchg
xor
jle
loope
filds
pop
pop
enter
inc
cmp
js
mov
out
mov
bound
arpl
aad
dec
sbb
add
and
xor
popa
xor
js
dec
and
sbb
pop
mov
rep
bt
rcr
dec
mov
jmp
scas
cltd
sahf
pushf
dec
test
sbb
orb
arpl
stos
mov
nop
push
mov
gs
mov
fsubrl
lret
sub
test
pop
roll
pop
add
mov
dec
rorb
jo
movsb
dec
cmpsl
aam
push
fs
lret
and
dec
stos
mov
fidivs
pop
jbe
push
jbe
popa
mov
xor
shrl
xor
popa
inc
inc
cmp
mov
pop
xlat
mov
and
cltd
inc
sub
pop
cmp
or
xchg
add
jmp
ret
add
pop
shlb
out
jno
dec
lahf
inc
cs
psubd
dec
fwait
in
gs
aaa
movsb
xlat
mov
rcr
inc
sbb
push
rcl
into
add
jge
insb
jno
adc
cmp
mov
in
scas
hlt
in
cld
push
sbb
rcrb
mov
ret
push
mov
nop
mov
fistps
mov
stos
stos
and
pushf
fistps
cmpsb
mov
mov
and
or
jb
and
jecxz
dec
movsl
sub
setg
movsl
test
push
xchg
popf
sub
mov
or
loope
mov
out
mov
ss
push
mov
out
stc
mov
and
or
pop
sbb
xor
adc
xchg
stos
mov
insb
in
mov
stc
pop
mov
push
xchg
movsl
je
fndisi(8087
xor
in
fst
jle
inc
sahf
imul
outsb
cwtl
insb
and
jecxz
mov
pop
jno
pushf
call
pop
lahf
lock
jne
and
test
xor
lods
inc
cmp
ja
add
cmp
int3
lahf
cmpsl
ljmp
dec
sahf
aas
gs
inc
repz
jmp
adc
mov
fisubs
mov
pop
push
dec
adc
jo
xor
sub
test
jmp
imul
mov
leave
inc
and
cmpsl
lods
clc
ja
ds
movsb
ss
aam
push
iret
or
jae
pop
sbb
loopne
in
adc
mov
xchg
cmp
xchg
push
mov
lods
sbb
cmp
push
test
in
into
in
sub
cmp
shlb
ds
in
xchg
sub
dec
movsb
and
fldenv
shr
aam
jecxz
mov
mov
dec
sub
stos
push
movsb
shll
pop
inc
out
xchg
cmp
and
xchg
add
jb
dec
pop
xor
jp
fnstsw
pop
cli
testb
out
flds
xchg
push
inc
add
pop
push
push
in
mov
stos
jmp
addr16
inc
sub
sbb
xchg
cmp
mov
mov
sub
jmp
push
sti
mov
jmp
mov
ret
sti
cld
outsl
push
pop
fstps
popf
add
and
adc
das
pop
adc
push
outsb
adc
jge
outsl
and
jp
arpl
loope
adc
sub
subb
inc
mov
arpl
xchg
push
in
insb
lock
scas
add
mov
pop
test
xchg
and
cmp
or
adc
mov
inc
xor
push
mov
or
cmpsl
std
jo
icebp
adc
cltd
dec
call
or
sub
xor
inc
ds
ret
add
adc
adc
push
addl
test
ljmp
sti
cmp
and
mov
movsb
lds
lock
clc
jp
add
sbbl
mov
aad
shll
lcall
mov
add
jecxz
xchg
subl
xchg
repnz
cmp
jno
mov
sub
negb
pop
pushf
xchg
cs
bndcn
fs
shr
hlt
push
and
add
mov
or
xchg
xchg
xchg
mov
out
sbb
sbb
inc
jl
icebp
fcmovbe
call
inc
pop
addr16
push
jae
add
subl
in
pop
mov
rcrb
sarl
mov
ja
cmp
nop
ficompl
add
cli
and
push
enter
inc
sbb
in
pop
xchg
movsl
test
and
or
inc
jne
adc
lcall
ret
and
jle
ret
push
scas
push
dec
xor
stos
dec
add
sub
dec
jecxz
mov
jge
mov
cmpl
pop
mov
int
dec
pop
outsl
mov
fwait
push
pop
inc
pusha
push
or
pushf
int3
sbb
pop
and
out
cmc
cmp
push
ficoml
out
jnp
negb
or
jmp
mov
fwait
mov
ss
cld
ss
aas
xor
jae
lahf
dec
lret
adc
insl
xchg
lret
mov
in
lret
fistps
dec
imul
xchg
imul
xchg
jnp
loope
jecxz
mov
sbb
xchg
jl
xor
or
fsubrs
out
xlat
cmp
ljmp
outsl
inc
popa
sbb
sbb
sbb
ds
mov
hlt
push
cld
mov
filds
mov
dec
cmpsl
gs
or
push
ja
sbb
js
test
sbbb
pusha
arpl
add
sbbl
xchg
jo
cmp
xor
inc
popf
xchg
test
mov
pop
adc
loopne
fmuls
cmp
shr
loop
sub
xor
push
clc
fistl
xchg
es
pushf
or
shrl
out
pop
inc
sub
arpl
andl
mov
add
enter
xchg
imul
cmpsb
xchg
cmpsl
push
movsl
xor
xchg
stos
jne
xchg
push
fisubrs
push
jnp
sbb
xor
test
xchg
out
repnz
hlt
or
mov
dec
push
mov
incb
mov
cltd
push
in
mov
mov
push
dec
data16
clc
gs
sbb
shll
scas
push
aad
mov
pop
sub
push
or
pop
lret
subb
push
iret
cmp
cmc
pop
lcall
inc
pusha
and
xor
dec
or
pusha
out
and
lods
xlat
pop
mov
xor
sub
sahf
cmp
enter
cmp
scas
mov
psrlw
cmp
bound
clc
idivb
rolb
pop
jb
int
or
jo
sub
orl
sub
rclb
pop
loop
cltd
sarb
xlat
mov
add
jb
xchg
cld
pop
mov
sbb
and
ficoms
adc
call
push
push
lret
jp
je
and
lods
fbstp
mov
mov
addr16
in
inc
jmp
adc
xor
adc
xlat
pop
outsb
insl
test
mov
and
jg
cmp
imul
ret
sub
leave
out
aaa
mov
xor
sub
and
mov
push
into
xchg
or
mov
add
adc
inc
mov
insl
into
sahf
push
adc
add
add
stc
pushf
enter
mov
cwtl
ret
aas
mov
adcb
out
push
pop
adc
inc
jae
out
imul
lret
incl
jns
or
cmp
mov
repnz
sub
rolb
sbb
or
xchg
inc
xchg
push
leave
jecxz
daa
or
popa
pop
sbb
pop
and
std
cmp
movsb
jae
push
in
pop
iret
or
sub
sbb
inc
cli
xchg
andl
mov
jmp
sub
jmp
sub
and
mov
sub
pop
jns
dec
int
sub
jp
inc
mov
sbb
sub
sbb
dec
adc
xor
fwait
mov
cmp
test
testl
dec
xchg
jecxz
stos
dec
out
adc
sti
pop
lret
pop
push
add
shlb
mov
out
clc
mov
xchg
outsb
daa
pop
lcall
cmpb
scas
cmc
in
idivl
dec
adc
call
dec
and
mov
lods
call
jns
adc
inc
test
add
xchg
mov
enter
clc
hlt
or
push
andb
arpl
nop
pause
dec
xchg
or
sub
ss
and
jae
push
gs
movsl
mov
xchg
cmpsl
pop
sub
adc
in
mov
and
push
sbb
adc
nop
js
pop
shlb
cmp
jmp
lods
fmull
xchg
in
addr16
push
mov
xor
and
in
imul
mov
mov
ret
push
sbb
dec
push
and
loope
test
shl
dec
xor
mov
std
out
enter
pop
bound
and
cmp
pop
faddl
jmp
call
xchg
mov
cli
lods
jg
mov
int3
mov
mov
xorb
lcall
fbld
ljmp
popa
xor
or
dec
push
fisttpll
ss
in
sbb
mov
inc
ljmp
insb
add
psubd
cli
rclb
or
ljmp
ret
iret
shlb
pop
inc
mov
cmp
call
std
test
push
xchg
shlb
push
xchg
mov
insb
jne
mov
into
dec
repnz
lret
adc
aaa
adc
jbe
xor
ljmp
mov
cmpsb
lds
scas
xor
jmp
sbbb
mov
movl
clc
pop
jns
mov
add
inc
popf
bound
jb
out
data16
pop
and
mov
cmp
jae
xchg
or
xchg
pop
adc
test
sbb
lods
xchg
xor
sahf
dec
nop
dec
cmpsl
cli
jno
cmpsl
gs
int
and
jo
fimull
jae
cmc
cs
sti
push
mov
pop
xchg
and
lret
enter
xor
jge
mov
nop
shlb
pop
sbb
fs
jecxz
push
mov
out
inc
cmp
idivb
xchg
shl
mov
jo
and
out
int3
jnp
in
popa
xor
mov
adc
scas
clc
xchg
scas
pop
mov
cmp
dec
xchg
jo
pop
add
les
pop
add
pop
fisubs
bound
adc
pushf
jg
push
mov
and
icebp
lods
idiv
inc
cltd
arpl
add
mov
dec
cmp
mov
ss
push
movsb
shll
out
mov
cmp
mov
andl
and
jmp
cld
stos
push
scas
dec
scas
mov
call
dec
sbb
icebp
dec
or
dec
aam
int
lock
aaa
jl
adc
jno
lds
rcrl
out
hlt
cmp
subl
fbstp
mov
test
je
mov
mov
mov
loop
sub
std
repz
cmp
jp
inc
ret
cmp
cmp
pop
mov
and
pop
add
rorb
pop
jl
adc
xchg
lods
out
mov
mov
movsl
mov
jp
arpl
add
or
cld
jg
movb
add
push
pop
lea
xchg
out
ss
push
xchg
pop
cmp
hlt
ja
inc
mov
mov
scas
imul
sub
aas
fadd
cmp
leave
add
add
and
xchg
xlat
push
dec
std
inc
sbb
cmp
aaa
mov
and
js
lret
int3
and
ss
xor
lods
sbb
xor
cltd
sub
jae
jl
adc
js
inc
mov
dec
dec
dec
mov
loopne
mov
inc
inc
test
jl
sbb
inc
out
cmp
mov
sahf
cmp
inc
icebp
frstor
jns
fcom
mov
hlt
or
shl
xchg
jle
pop
mov
jbe
xlat
ja
popf
stos
daa
sbb
dec
out
outsl
fdivs
in
cltd
sub
imull
cmp
pusha
fs
pop
dec
scas
fstl
sahf
cli
push
dec
pop
adc
into
out
add
outsl
addr16
push
pushf
enter
les
int
adc
or
pop
or
xchg
pop
pusha
insl
mov
cli
or
aaa
dec
les
sahf
and
mov
adc
ljmp
enter
xchg
jbe
daa
xor
adc
mov
clc
inc
stos
outsb
dec
push
sub
mov
mov
pop
mov
jne
cmp
je
shll
jp
xor
in
clc
dec
adc
iret
mov
and
test
mov
sbb
sbb
mov
mov
jmp
cs
dec
imul
mov
or
out
xor
fcmovne
pop
xor
repnz
popf
sbb
add
or
pop
lret
sahf
push
sbbl
mov
sbb
dec
push
stos
mov
int3
lods
cmpl
push
dec
add
xor
cmpsl
dec
dec
inc
iret
mov
xchg
sub
loope
es
inc
insl
aad
inc
aam
push
les
mov
xor
cltd
addl
popf
mov
xchg
or
and
and
in
jle
mov
test
sahf
das
pop
mov
mov
cmp
aas
or
xor
dec
inc
rolb
jbe
or
repz
icebp
jg
sti
sbb
lahf
hlt
movsl
daa
popa
es
mov
inc
test
test
aaa
cmpsl
push
popf
insb
loope
sub
mov
in
ret
vrcpss
cmpsb
xor
and
loop
movsl
in
nop
mov
add
sub
nop
push
lea
cltd
add
jo
ret
mov
cmc
hlt
fwait
rclb
clc
sub
or
int
or
insl
sahf
hlt
lock
xchg
sbb
sub
sub
inc
inc
rolb
sbb
inc
xchg
or
pop
insb
bound
rcrb
clc
inc
aad
pop
mov
aad
fidivs
cmp
jmp
add
sahf
or
inc
lods
outsb
aas
mov
cli
inc
and
and
add
out
mov
lock
loopne
xor
jecxz
xchg
jne
into
jno
int3
add
jge
and
mov
push
cmp
mov
bound
cmp
pop
popf
xchg
pop
in
add
or
jmp
pop
dec
scas
imul
arpl
arpl
push
pop
loopne
cmc
stos
push
lahf
loope
bound
aaa
cld
mov
movsb
lods
outsl
cmp
imul
cmp
or
jl
cmp
mov
in
imul
pop
mov
int
adc
fildll
mov
pop
jle
push
imulb
pop
int
dec
in
push
data16
mov
scas
xchg
js
cli
jbe,pn
adc
add
sub
aam
xor
test
sub
in
popf
bound
notb
jl
leave
pop
test
mov
xor
shl
cmp
add
push
pop
xlat
push
into
jno
hlt
or
fimuls
test
or
mov
out
cmpl
stos
jge
call
imul
xor
aaa
mulb
sub
loope
fs
and
xchg
jne
and
jge
jno
stc
sbb
scas
cmpsb
andb
jo
lret
push
or
mov
adc
shr
mov
cmp
into
cmpsl
mov
loope
mov
stos
sub
adc
ret
mov
fsubrl
dec
pop
pop
inc
adc
add
mov
sub
lods
push
push
pop
mov
mov
lods
cwtl
leave
frstor
sub
push
imul
shrb
pop
call
lret
mov
inc
cmp
push
insb
add
jo
sti
fdivr
fildll
test
fisubs
popf
psubsw
push
outsl
not
dec
lds
sbb
push
adc
gs
xor
sub
adc
pop
adc
jae
mov
xchg
xor
sahf
mov
push
stos
mov
aam
dec
out
pop
setb
in
aas
pop
mov
testl
xlat
adc
jl
or
cmp
sbb
add
lret
sub
inc
js
insl
loope
ss
cmp
lods
movsl
inc
jns
test
std
xor
mov
roll
mov
push
add
imul
jle
push
testl
dec
std
and
push
repnz
das
add
mov
add
add
repz
cmp
dec
lret
push
add
lret
rclb
cmpsl
pop
or
adc
mov
out
es
arpl
sbb
fstpt
mov
push
push
inc
mov
repnz
xchg
pusha
xchg
test
ja
aas
popa
push
sbb
bound
push
outsb
adc
lods
cmc
add
mov
mull
jl
loopne
ret
mov
in
pop
aad
or
mov
popf
xorl
push
popf
pushf
and
add
sbb
push
cli
pop
pop
inc
push
dec
and
fdivrs
subb
shll
mov
push
outsl
adc
adc
add
sub
inc
and
or
push
lea
adc
out
mov
or
scas
pop
jmp
jns
add
cltd
jp
cmp
scas
or
fsubl
shll
call
jb
or
loop
adc
cmpsl
adc
mov
and
scas
lcall
adc
out
shr
jp
lock
push
jae
jge
and
dec
jae
xchg
xor
fistl
js
ss
cmpsb
shrl
repnz
sti
pop
dec
je
add
adcl
add
push
xchg
popf
aad
fldl
jecxz
sti
jge
bound
in
pop
fcomip
and
shl
adc
jae
cmp
inc
fiadds
fdivr
sub
jg,pn
jnp
scas
mov
and
pop
mov
andb
cmp
sarb
cwtl
shlb
and
inc
pop
aaa
icebp
insb
lds
add
enter
mov
sub
xchg
sbb
ja
xor
mov
ret
shl
mov
scas
sub
mov
add
lret
out
bound
pushf
sub
lahf
mov
mov
imul
lods
and
pop
xchg
and
xchg
pop
int
mov
jmp
loope
push
rcl
dec
je
sarl
mov
incl
movsb
jp
xchg
mov
inc
test
add
pop
testb
outsl
dec
mov
add
add
and
and
std
dec
xchg
rcrl
stc
popf
int
xchg
jno
inc
shlb
jl
inc
dec
scas
mov
sub
mov
movsl
dec
mov
add
dec
xlat
and
mov
add
sbb
push
ret
sub
jmp
jge
sub
repz
insl
jge
addr16
mov
stc
pop
adc
shll
add
mov
jns
jp
mov
repnz
inc
rolb
fists
daa
lcall
mov
ja
mov
adc
icebp
mov
out
into
jp
pop
pop
js
out
ds
outsb
ret
fisubrs
mov
push
das
sbb
adc
loope
loope
push
jb
mov
insb
mov
scas
data16
jae
sti
xorb
add
pop
jmp
sbb
dec
ret
mov
mov
or
hlt
inc
jmp
dec
iret
xor
lcall
mov
or
sbb
inc
fdivs
cmp
jae
test
stc
pushf
cmp
and
sub
mov
pop
adc
int3
dec
loopne
mov
out
fwait
mov
pop
jne
cmp
out
pusha
jnp
or
loop
or
add
clc
and
adc
xor
out
out
push
stos
xlat
mov
mov
sub
xor
sbb
fdivl
or
mov
scas
inc
in
rclb
mov
and
adc
out
stos
dec
int
inc
and
xchg
orb
out
fdivp
enter
jno
xchg
push
jl
shll
mov
clc
frstor
fists
out
imull
sarl
out
ror
das
add
sub
divb
mov
js
add
loop
sbb
or
jbe
xlat
dec
xchg
dec
jno
jns
iret
and
insl
jmp
iret
repz
pop
sarb
push
adc
repz
es
fbstp
xor
lcall
add
push
push
nop
adc
push
in
es
jb
mov
inc
dec
xchg
mov
or
jle
ds
jae
add
ja
adc
or
cli
mov
adc
shll
jp
pop
dec
lods
mov
test
adc
xchg
cmp
pusha
loope
pushf
dec
sub
push
fwait
cmp
idivl
push
inc
adc
or
fldenv
in
add
popa
and
in
iret
stc
cmp
xchg
and
push
cmp
or
idivb
add
pop
sub
add
mov
inc
mov
dec
and
adc
inc
out
fstpt
xchg
scas
dec
and
push
adc
rcll
add
imul
adc
cltd
loope
fwait
dec
jg
sub
inc
jne
and
rclb
jmp
fldenv
loopne
pop
and
dec
fdivl
cmpl
jbe
pop
lods
sbb
mov
add
dec
adc
sub
mov
and
movl
mov
and
xchg
pop
fiadds
inc
nop
mov
test
jae
cmp
lret
pusha
cwtl
mov
loope
loopne
mov
pop
mov
cmc
push
lahf
ss
das
mov
das
cmpsb
ja
dec
jo
cmpsb
and
cwtl
jge
and
push
inc
mov
mov
aad
lret
xchg
sahf
pusha
int
or
ret
iret
adc
into
or
jp
loopne
dec
aam
mov
cmp
mov
lret
add
test
lcall
in
cmp
mov
pop
popf
xchg
xlat
xor
movsb
dec
xor
xlat
addr16
into
mov
and
mov
arpl
cmp
lcall
jns
xchg
jo
adc
mov
cmpsb
test
xchg
adc
in
shl
pop
dec
mov
in
jmp
sub
rclb
aad
fwait
mov
filds
pop
scas
push
mov
cmpb
hlt
inc
and
add
iret
mov
cmpsb
mov
jbe
sbb
jbe
js
inc
adc
add
cmovg
jmp
jns
scas
movsl
cwtl
inc
mov
cld
pushf
mov
sub
jno
repnz
xor
dec
jg
or
sbbl
loopne
inc
mov
jge
into
add
xchg
lea
dec
iret
repz
arpl
cmp
inc
lret
lcall
cmc
out
or
mov
fucomp
inc
mov
sub
imull
sarl
xchg
xchg
fcomp
cltd
call
test
fnsave
ds
fwait
pop
mov
roll
add
pop
repz
sub
adc
mov
xchg
xchg
notl
mov
push
dec
fdivrs
push
fildl
addr16
lcall
mov
add
adc
xor
mov
jns
pop
jmp
dec
xchg
test
lret
shrb
or
fildl
popf
xchg
ret
cmp
inc
xchg
add
in
test
stos
movsb
dec
imul
adc
repnz
or
daa
adc
loope
inc
or
inc
mov
cltd
and
fadds
and
rol
xor
mov
outsb
pop
cmpsl
movsl
jbe
bound
in
fcmovnu
lahf
fadds
ja
xchg
add
jp
xchg
push
and
inc
pop
mov
daa
push
rolb
sarb
adc
negb
nop
inc
pop
push
and
inc
sbbb
inc
push
pop
mov
xchg
jmp
andl
sti
hlt
cmc
push
das
mov
insl
sbb
mov
aas
pop
or
testb
mov
sub
andl
ja
aaa
int
fnstenv
lods
inc
pop
add
divl
lds
mov
call
push
lret
ja,pn
mov
lahf
push
xchg
fldl
insb
sbb
mov
mov
xor
push
inc
add
stc
fdivl
cwtl
mov
mov
les
cmp
xor
push
sti
xor
inc
mov
pop
rcrb
stos
sbb
lahf
and
jbe
inc
jno
or
bound
sbbl
jmp
xchg
add
lahf
popa
push
loop
xor
or
rcll
xchg
js
or
test
pop
shlb
imul
push
mov
jle
inc
pop
iret
or
aaa
pop
xchg
cmpsl
incb
ss
or
pop
arpl
roll
jp
ret
stos
or
or
pusha
push
aad
fldenv
lahf
xor
insb
iret
xchg
or
sbb
loope
dec
cmp
pop
or
adc
xchg
pop
scas
sbb
call
xchg
jne
adc
int3
pop
fucomp
mov
mov
inc
mov
jg
cmp
outsb
jae
movl
adc
mov
scas
inc
outsb
or
cmp
mov
mov
js
lret
pop
jo
mov
test
mov
icebp
xchg
lods
outsb
out
aas
in
mov
arpl
int
push
out
adc
add
jecxz
xchg
sub
add
inc
in
or
in
insl
sbb
rclb
rcrb
jns
or
sbb
ss
or
data16
adc
movsl
push
shlb
into
ss
pop
push
dec
cli
fst
mov
mov
cs
stos
adcb
xchg
inc
popf
test
dec
clc
add
insl
cmp
lods
out
xor
scas
inc
xor
cmp
or
cmp
stos
shrl
stos
xor
repz
daa
pop
push
push
aas
cli
jbe
add
inc
cmp
inc
xchg
dec
add
addr16
cmpsb
insl
lods
movsl
stc
lods
shl
lock
push
cmp
ja
sub
add
orb
outsb
sbb
jbe
pop
popa
pop
aad
cmp
mov
mov
loope
pop
jge
xchg
lcall
out
into
mov
xchg
dec
or
cld
int
xor
lret
mov
jno
dec
and
outsb
ljmp
paddusw
ror
sbb
call
out
mov
and
iret
pop
lds
repz
out
xchg
dec
inc
or
xchg
addb
dec
fs
xor
adc
xor
test
sahf
pop
popf
pop
or
jne
sbb
data16
jbe
inc
or
and
xor
mov
andl
out
pusha
mov
aas
adc
ret
adc
lret
sti
mov
push
adc
cmp
push
loope
add
das
jns
adc
cs
repz
mov
stc
mov
xor
sbb
scas
jae
xchg
pop
hlt
cltd
jno
jmp
sub
movsb
outsl
fnstcw
jne
jecxz
lcall
lret
sub
push
std
into
adc
lret
pop
loopne
jnp
adc
mov
testl
out
dec
fisubl
pop
and
adc
fwait
jmp
out
movsl
sub
cmp
and
shrb
pop
pop
divb
sbb
and
out
or
ja
sbb
sbb
sub
sub
ret
mov
and
xor
cmp
lret
loope
ficoms
mov
dec
push
idivl
add
movsb
cmpsb
neg
sbb
jmp
repnz
inc
or
insb
cmp
pop
jmp
jg
data16
or
outsb
jmp
scas
fidivl
les
sub
add
and
xor
aad
test
or
push
sbb
xchg
repnz
jne
data16
lret
mov
mov
ss
dec
je
mov
les
fcoml
test
mov
pop
jns
ret
out
movsb
fimuls
sub
enter
xchg
popa
dec
inc
dec
fbstp
ja
cmove
push
xchg
negl
and
icebp
test
hlt
jae
and
inc
fisttpl
push
faddl
and
outsb
sbb
out
scas
ret
xor
not
push
push
in
pop
push
xor
cmp
push
sub
ljmp
dec
in
push
sbb
imul
mov
xchg
rclb
fisttps
jb
inc
mov
nop
xchg
add
inc
jmp
sub
das
insb
in
in
and
dec
cli
xchg
mov
xchg
fnstenv
in
adc
in
sahf
adc
and
xor
out
add
clc
test
mov
pop
sbb
outsl
clc
aad
jle
inc
sarb
cmp
pop
lea
push
xchg
cmp
rorl
out
pop
and
lds
dec
and
lcall
push
cmp
pop
or
mov
frstor
fdivs
xchg
lcall
jns
cli
or
mov
idivb
in
mov
mov
inc
movsb
je
jns
loopne
cld
stc
xor
int
mov
sub
or
das
pop
jnp
pop
les
out
mov
dec
cmp
jb
ret
cmp
mov
dec
jmp
into
repnz
mov
hlt
xchg
cmpsb
adc
push
stos
popf
dec
repnz
fs
scas
push
add
mov
stos
shr
into
jnp
pop
xor
movsl
xlat
xor
sub
test
sbb
fcoms
pop
jb
push
adc
jecxz
and
adc
cld
cs
push
andb
and
jle
cmpl
pop
cs
lds
push
in
stos
jecxz
pop
movsb
add
push
jp
fmulp
mov
jp
pop
push
ror
xor
aas
fcompl
mov
repz
dec
jmp
mov
adcl
and
add
inc
mov
dec
clc
add
mov
mov
in
and
pop
xor
xchg
jae
fld
ret
or
dec
inc
or
out
adc
in
xor
incb
pop
mov
xor
adc
imul
and
mov
mov
dec
loop
push
int3
repnz
xor
sti
lods
imul
popf
push
popa
test
mov
cmpsl
jg
negb
pusha
mov
cmc
push
scas
xchg
lcall
mov
int
out
xor
dec
jae
cmp
adc
push
mov
data16
jne
or
mov
outsb
aad
add
sbb
dec
mov
mov
repnz
insl
insl
xchg
rorl
inc
mov
xor
xor
shufps
mov
sub
cmc
mov
shlb
jno
mov
fnstcw
pop
insb
add
cmp
mov
mov
and
testl
jno
lds
push
idiv
les
adc
scas
mov
cmc
sbb
das
dec
cmp
aaa
xor
insb
iret
mov
cmp
sbb
xor
fldt
mov
fnsave
std
jne
and
push
icebp
sub
insb
gs
pusha
push
lds
mov
fstps
dec
pusha
pop
in
jae
jb
test
fadd
mov
cmp
stos
enter
cld
sti
jno
jnp
sbb
cwtl
lods
movsl
adc
lds
lods
or
dec
mov
clc
lret
inc
add
jl
cwtl
outsl
xor
leave
jmp
add
sub
push
xchg
xchg
and
cwtl
stos
sbb
clc
cmp
jb
adc
out
lds
adc
ljmp
cmp
aas
jb
pop
mov
push
shr
pusha
mov
jl
push
pop
push
iret
imul
pop
inc
arpl
addr16
test
je
xchg
fistl
aaa
xchg
stos
add
xchg
xchg
mov
arpl
aaa
mov
sbb
add
sub
cli
jecxz
xchg
lds
popf
xorb
les
dec
push
jo
sti
cmpsl
out
mov
jp
aas
es
push
out
or
jl
dec
ficoml
sub
cmpsb
sub
and
xchg
xchg
mov
or
scas
sti
jnp
push
inc
je
cld
push
data16
mov
cmpsb
or
ss
out
out
mov
fsubr
mov
pusha
in
pusha
dec
pop
lahf
xchg
pushl
nop
xchg
and
sub
push
fsub
mov
fildll
out
imul
enter
xor
and
inc
mov
dec
cmc
mov
cld
into
and
jnp
or
mov
gs
nop
and
cmp
imulb
adc
scas
ror
pop
lret
and
ja
les
int
pop
adc
sub
ja
jne
and
in
cmpsb
inc
push
pop
push
and
sub
fnstcw
mov
inc
in
in
push
jns
or
or
insl
mov
jecxz
cmc
addb
lock
push
stos
pop
or
mov
jge
sbb
sub
or
mov
ror
lahf
pop
or
mov
loop
repnz
mov
rolb
inc
daa
inc
out
ja
shll
cmp
inc
std
pop
fcmove
lods
aaa
jp
mov
int
stos
cwtl
push
cmp
jl
cmp
rcl
call
cmp
inc
lods
inc
sbb
jg
shrl
adc
sbb
add
jp
ss
addr16
int
js
mov
mov
rcl
add
mov
pop
inc
outsb
out
fsubr
xchg
sbb
loop
mov
loopne
xchg
sub
das
push
dec
into
call
dec
je
jle
jge
ds
dec
loopne
jge
cmc
sub
add
sarl
sbb
aaa
xchg
mov
add
adc
out
push
xrelease
out
dec
adc
jge
mov
push
or
popl
mov
jecxz
shl
pop
and
shlb
sahf
int
sbb
testb
push
aaa
movsb
cld
mov
repz
push
lret
dec
jmp
mov
cli
test
or
insb
jne
xor
mov
dec
repz
add
mov
out
xchg
lcall
into
fcomp
and
ja
sahf
mov
xor
or
adc
movsb
inc
jnp
jmp
insb
cli
aas
mov
push
jb
stos
dec
fnstenv
lea
xor
or
mov
sub
sti
push
out
in
bound
cli
and
mov
out
cli
add
iret
pop
insb
push
daa
jbe
and
pop
and
movsl
mov
pop
out
fwait
adc
jp
stos
sub
pushf
loope
cmp
leave
xchg
mov
push
cmp
lock
add
lock
mov
xor
xchg
ret
and
mov
push
arpl
push
mov
xor
mov
mov
stos
inc
inc
fcomi
jecxz
je
jae
xor
insb
ds
mov
into
pop
outsb
pop
jnp
adc
loop
pop
not
xchg
inc
sbb
sbb
movb
lret
lods
in
mov
std
stc
roll
lods
mov
push
popf
jmp
xor
lods
fcmovnb
addl
jp
xor
in
sbb
xor
rcrl
cmp
jl
dec
fisttps
cs
xchg
xchg
movsb
or
les
sub
pushf
and
ret
and
push
fs
jns
push
bound
in
ds
and
jne
aas
jp
jbe
mov
dec
jo
daa
jl
lcall
mov
or
jb
jnp
pop
sub
pop
gs
xchg
jle
mov
fsubl
add
out
pop
fsts
lret
mov
push
in
mov
adc
push
je
jne
fisttps
pusha
test
pop
inc
fisttpll
xchg
pusha
aas
mov
mov
cmp
or
cli
mov
es
add
cli
pop
dec
jno
outsl
insl
adc
into
aas
sub
sbb
pop
cmc
push
and
xchg
dec
mov
lock
out
and
and
xor
sub
aaa
jle
or
pop
popa
mov
in
scas
rcr
adc
xchg
int
mov
mov
ret
or
dec
xor
jl
inc
mov
mov
and
out
aam
mov
cmp
adc
int3
out
jmp
add
push
adc
jnp
jns
mov
bound
mov
mov
or
in
sbb
and
sahf
sbb
movb
cmp
mov
daa
mov
cld
shrb
and
push
fisttpl
cli
mov
in
andb
adc
fcompl
shrb
stos
push
mov
mov
test
mov
popf
jg
dec
xchg
out
mov
jnp
fldl
dec
push
daa
addb
jecxz
ljmp
push
imul
mov
or
jns
or
lret
push
or
push
push
xchg
xchg
push
xor
stos
popa
dec
sbb
shrb
inc
add
jmp
lahf
int
pause
inc
jle
jmp
push
mov
call
pop
push
sub
andl
cmc
daa
sarb
jne
sub
or
popf
test
dec
icebp
pop
or
or
jecxz
imul
inc
add
ds
or
lea
inc
jae
lods
std
or
cmp
add
pushf
lods
es
ret
mov
inc
xchg
insl
dec
test
jno
xchg
test
jl
in
adc
out
and
pop
add
add
stc
sub
cmp
cmp
in
jp
mov
push
sub
mov
xor
jmp
push
jne
movb
jo
aad
insb
xchg
cmp
lcall
cmp
sti
and
imul
leave
add
or
lods
fiaddl
repz
or
and
or
enter
lahf
ret
mov
lcall
lds
and
jmp
mov
sti
lea
ss
push
dec
cmpb
dec
jns
out
test
adc
cmp
addb
sbb
es
lock
lret
ljmp
sahf
pushf
and
popf
jnp
cmp
pop
jp
or
fistpl
pop
jns
cmp
movsb
sahf
mov
jmp
cwtl
stos
xchg
xlat
inc
dec
sbb
stc
cmpsb
dec
icebp
inc
shl
movsl
jb
sar
push
xorl
out
mov
sub
loop
mov
repnz
push
mov
cmp
xchg
add
test
aaa
insl
out
and
jne
jmp
stc
xor
adc
cwtl
iret
bnd
mov
pop
std
sub
dec
and
mov
inc
pop
mov
push
add
rorb
pop
push
add
sub
mov
jnp
mov
adc
cmp
ret
pop
push
bound
shrl
jl
rcll
push
test
cltd
add
loop
jl
ret
pusha
mov
inc
imul
xchg
mov
mov
pop
add
adc
es
sbb
insl
mov
jo
imul
fs
dec
loop
pop
add
and
dec
addr16
adc
inc
aaa
das
lcall
add
lds
daa
notl
adc
fstp
pop
xchg
jb
inc
mov
divb
out
nop
dec
cmc
dec
rcll
hlt
mov
xchg
mov
daa
push
jp
sub
mov
jle
sbb
mov
ret
xor
mov
jo
jo
nop
insl
daa
xchg
mov
repnz
xchg
cmp
test
lds
push
cmc
cmp
test
testl
mov
sub
mov
rorb
sbbl
sbb
or
push
sub
jle
loop
fstp
or
jge
add
push
xor
iret
mov
sub
or
mov
adc
in
leave
dec
in
call
lret
xor
stc
mov
push
fbstp
mov
sub
mov
test
pop
mov
adc
cmp
push
or
in
mov
or
repz
sahf
add
mov
cmp
nop
add
imul
jle
push
int
push
ja
xchg
mov
mov
aam
test
mov
cltd
xchg
adc
cmc
std
and
and
int3
stc
jbe
std
mov
pop
lods
loopne
xor
mov
mov
jmp
and
into
popf
enter
test
mov
scas
int
lret
and
mov
xor
xor
sub
xchg
mov
push
or
aas
xchg
pop
push
pop
shll
mov
and
add
jno
sahf
movsl
inc
push
icebp
or
loope
ret
mov
aam
jnp
sub
push
aad
dec
pop
rcrb
scas
pop
inc
xchg
dec
cltd
faddl
loope
mov
pop
xchg
js
outsb
leave
sub
xor
mov
rolb
out
jae
shll
dec
jl
mov
cmc
pop
adc
test
sub
lcall
pushf
cmp
clc
js
ret
mov
adc
popf
ss
stc
pop
xor
dec
mov
in
add
sbb
sbb
test
pop
xchg
outsb
mov
fs
jnp
fcompl
paddd
pop
addb
push
and
leave
stos
adc
push
add
jecxz
fmuls
push
mov
lcall
loop
dec
mov
test
cwtl
fs
int3
inc
mov
and
cmp
or
pop
xchg
inc
shrl
adc
aas
sbb
jl,pt
lahf
lds
pop
jb
inc
xchg
gs
cmpsl
mull
jge
mov
push
sub
xlat
mov
cmpl
test
inc
mov
ret
dec
adc
sti
dec
stos
cmpsl
inc
cwtl
nop
cwtl
sbb
add
sub
push
into
in
push
push
out
ss
imulb
jo
iret
pushf
in
stos
out
pushf
push
sub
or
sti
es
xor
in
lcall
sub
mov
lods
mov
jle
jae
daa
cmp
add
mov
mov
xor
dec
adc
vandps
and
jns
imul
add
es
lret
push
mov
push
jge
ja
mov
sub
pop
inc
mov
nop
rcrb
adc
hlt
push
inc
inc
jae
mov
sahf
push
and
lahf
xchg
push
inc
and
jb
mov
and
push
mov
xchg
or
mov
adc
push
push
xlat
push
aas
fimull
adc
dec
sbb
mov
or
adc
add
lds
in
es
dec
or
jno
mov
imul
xor
mov
icebp
lods
pushf
unpckhps
scas
mov
fstl
int
out
dec
xor
test
stos
fldl
mov
inc
ljmp
sub
popf
hlt
imul
neg
adc
jb
dec
cmp
push
enter
jae
std
sahf
jge
sbb
jecxz
shr
je
lcall
xor
cli
pop
ret
add
cmp
add
mov
ror
sub
and
lcall
sbb
mov
fstl
sbb
sbb
insb
or
flds
fbld
pop
ret
stc
es
mov
mov
xchg
xor
dec
hlt
adc
les
add
scas
xchg
outsb
pop
or
add
inc
loopne
rcll
sub
adc
pop
jl
inc
lock
jae
jg
int
pop
and
push
mov
outsb
push
out
jl
insb
inc
mov
xor
aam
cltd
or
mov
imul
lret
mov
in
xor
out
xor
call
loop
out
aad
push
repnz
pop
je
cmc
std
adc
jecxz
js
pop
int3
fstl
test
std
mov
pop
jl
cltd
mov
stos
test
dec
jecxz
sub
out
jecxz
mov
fsubrl
inc
xchg
xchg
out
or
and
push
lds
hlt
ljmp
imull
jnp
sub
aas
in
sbb
push
mov
mov
jo
push
loop
push
hlt
fimuls
stc
xchg
loopne
mov
dec
aaa
js
push
mov
jne
in
cs
test
filds
std
hlt
js
fstp
fs
jge
or
pop
push
sti
inc
cwtl
shll
jo
xchg
in
cmp
add
in
sub
inc
cmp
inc
and
pop
mov
dec
push
popf
insb
inc
jp
adc
or
adc
sbb
lods
xchg
aam
cwtl
and
enter
incb
mov
xchg
or
mov
outsl
push
scas
lret
inc
and
pop
in
outsb
out
sub
loope
dec
jnp
cs
cmp
cmpsb
lds
cmp
sarl
fwait
daa
lea
in
mov
lods
cltd
mov
jno
fstl
cmc
clc
fwait
lahf
inc
out
and
jg
mov
mov
dec
cmpsb
cmc
sbb
ds
sbb
imul
adc
pop
push
mov
enter
cmp
cs
test
or
cmpsb
cmpsb
loop
fdivs
inc
mov
or
jecxz
aas
jecxz
ds
clc
lret
jmp
mov
test
imul
jno
test
fiaddl
ficomps
sub
push
lods
dec
movsb
mov
rolb
ret
cmp
inc
jmp
mov
movsl
lea
popa
les
jge
push
mov
inc
shr
inc
pushf
push
mov
call
push
das
movsb
aaa
out
xor
push
je
jbe
rcll
mov
xchg
sbb
loope
mov
out
push
sar
mov
rclb
mov
jns
rclb
fwait
aas
popa
pushf
cmp
shlb
das
push
sbb
adc
fnstsw
je
lcall
cmpsl
sbb
insl
int3
or
mov
movl
sub
dec
dec
stos
ss
aaa
xor
mov
repz
xchg
push
cld
lahf
jmp
inc
lods
push
pushf
inc
loopne
aas
sub
sub
mov
fisubl
out
loop
jne
movl
in
and
bound
and
push
jo
jg
xor
and
dec
cmpl
in
mov
mov
cmp
add
mov
out
dec
sub
pusha
adc
xlat
sub
lret
inc
jmp
ds
das
inc
dec
mov
sub
rep
inc
dec
jbe
or
cmp
ret
or
das
test
gs
sbb
xchg
adc
cmp
add
cltd
add
enter
je
rcr
sub
repnz
leave
mov
and
fimuls
fbstp
popf
push
addr16
pop
sub
sbbb
shrb
dec
pop
out
pop
sti
jmp
jg
shrl
xor
enter
xorb
stos
mov
sbb
and
xchg
add
or
rorb
sbb
js
and
xchg
xchg
shl
push
cmpl
enter
pop
and
outsl
add
lds
fwait
ret
ljmp
jp
cmp
sub
in
fisubrl
popf
int
hlt
jns
je
add
dec
dec
pop
mov
adc
or
in
mov
aas
mov
js
push
stos
and
and
pop
mov
mov
icebp
sub
dec
sub
mov
pop
mov
push
stos
and
dec
mov
xchg
push
jo
sarb
sub
fidivrl
scas
lea
cmp
or
cmp
fstpl
adc
mov
push
dec
nop
jle
mulb
sub
mov
outsl
mov
or
adc
ret
das
adc
loop
in
lcall
xchg
inc
pusha
jb
shl
nop
adc
sub
push
lcall
in
xchg
aad
mov
xor
sbb
cmp
addr16
mov
and
js
jge
cld
sti
cmp
sbb
ja
or
adc
repnz
in
leave
sub
sbb
cmp
das
mov
stos
call
mov
xlat
lret
pop
in
pop
mov
mov
out
add
cmp
push
cwtl
pop
jne
test
pop
and
into
inc
in
fisttps
test
xor
subb
pop
daa
xchg
inc
clc
adc
repnz
dec
into
jbe
out
ret
mov
icebp
inc
xor
jne
leave
push
mov
inc
in
iret
lahf
dec
test
mov
outsl
jb
stc
pop
xor
pop
dec
mov
test
shll
mov
sbb
jns
fsubrs
insl
scas
repnz
dec
scas
ret
hlt
jle
adc
push
cli
pushf
cmpsb
or
xchg
mov
pop
dec
push
xchg
popa
out
xor
stos
or
cmp
mov
arpl
mov
std
and
dec
lcall
rorb
inc
testb
loopne
cmc
dec
or
cmp
mov
jns
scas
hlt
inc
mov
insl
mov
mov
movsb
ja
aas
cs
jb
repz
xchg
loopne
dec
and
popf
addr16
call
xor
cmp
into
in
ss
insl
jae
inc
pop
cmp
cmp
bound
popf
imul
lods
sub
repz
mov
sub
push
test
xor
push
jo
xchg
mov
mov
mov
and
cmp
push
outsl
decl
mov
add
push
pop
inc
dec
ds
ja
push
gs
lods
fs
mov
sbb
jb
cmpsl
push
and
in
adc
sbb
cmc
outsb
sbb
cmpsl
adc
inc
xchg
push
popf
mov
or
loope
cld
push
push
pop
faddl
push
dec
mov
mov
fnsave
adcb
aaa
push
ret
mov
js
jbe
jp
negl
jb
adc
mov
mov
and
subl
rolb
xor
ss
cmc
cmp
mov
pushf
cmp
add
xor
push
subb
lods
xchg
or
push
cwtl
jno
mov
fidivrl
cltd
add
fs
lret
push
and
stos
push
jmp
adc
call
ret
push
pop
fdivrs
mov
outsb
gs
and
out
adc
xchg
jno
scas
outsb
aam
and
add
fimuls
cmp
mov
mov
inc
outsb
cwtl
fcoml
or
arpl
fcompl
sbb
adc
mov
cwtl
xchg
push
test
push
imul
popa
mov
outsb
ficoml
es
mov
loop
push
pop
call
fisubl
jae
cli
les
fidivrl
js
leave
cmp
pop
inc
mov
enter
imul
xor
push
mov
add
shrl
pop
pop
hlt
inc
xor
scas
push
jl
xor
mov
pop
cli
push
pop
outsl
lret
int
adc
mov
adc
les
adc
sub
mov
scas
push
pop
lcall
mov
dec
push
xchg
aas
push
mov
ror
inc
lahf
cmp
mov
and
lods
scas
lods
xlat
or
inc
mov
fs
or
add
lods
cli
dec
push
adc
fwait
add
mov
adc
jmp
pop
rcl
or
loop
add
xchg
xchg
sub
adc
test
loope
leave
ror
scas
in
test
and
dec
pop
inc
nop
pop
jle
inc
mov
xor
movsb
shr
mov
cli
daa
repnz
add
lods
sub
scas
lds
rclb
mov
push
frstor
sbb
adc
scas
mov
jmp
nop
sub
jge
test
test
or
mov
xchg
mov
das
aad
jle
push
dec
outsl
mov
mov
pusha
inc
call
mov
out
jae
dec
ljmp
push
int
mov
sub
jb
jmp
outsl
sbb
mov
xchg
push
mov
xor
dec
and
leave
idivl
inc
mov
fcmove
sahf
inc
scas
shl
xor
sbb
xchg
sub
cld
sti
push
jae
shl
mov
and
pop
sbb
cmpsb
pop
negb
lret
inc
jmp
loope
mov
sub
pop
xchg
in
sub
iret
mov
inc
push
data16
push
mov
jge
int
jecxz
sahf
cmp
push
shll
add
pop
push
movsb
push
push
fimull
fstl
subl
cltd
fdivr
or
pusha
adc
sbb
ljmp
adc
jne
outsl
fidivl
ffree
insl
add
and
call
jecxz
mov
orb
mov
aas
push
pop
insb
ljmp
push
mov
ffree
and
fimuls
negb
aas
and
fwait
int3
push
sub
jne
std
sbb
fxch
lods
ss
addb
negl
push
xor
or
pop
mov
in
shrb
imul
and
das
adc
adc
loop
dec
aam
xchg
xchg
jnp
adc
xchg
cltd
cmp
inc
add
inc
and
jae
pop
sbb
hlt
adc
aaa
div
sbb
cmp
jns
xchg
stc
nop
xchg
xor
sahf
ja
sub
stos
call
add
xchg
mov
gs
dec
dec
loopne
mov
xchg
decl
int
sbb
xor
dec
jg
mov
or
mov
push
cltd
popa
test
jbe
nop
push
xchg
into
push
xlat
test
and
in
dec
loop
jle
pushf
stos
stos
test
push
mov
fstpt
push
ficoml
cmpsb
add
outsl
fsubrs
repnz
lods
gs
fwait
in
repz
cli
add
and
mov
imul
dec
je
push
sbb
inc
fprem
jnp
sbb
or
sarb
cmp
andl
jecxz
clc
jle
xor
popa
inc
aam
cmp
pop
int
pop
imulb
dec
ret
clc
mov
dec
js
aam
lret
fwait
ror
ds
fldl
inc
push
loopne
add
test
push
or
sub
stos
and
pop
mov
lock
sub
subb
scas
jae
mov
test
in
push
mov
pop
test
sahf
sbb
loopne
divb
cmc
ficompl
xchg
hlt
outsl
icebp
cmp
test
movsl
push
xlat
rolb
jmp
in
or
push
hlt
xchg
fwait
mov
pop
jb
dec
addb
sub
notl
shr
cmp
insl
adc
daa
mov
mov
inc
xor
shl
pop
push
in
imul
jge
fists
stos
in
mov
jae
outsl
enter
cs
imul
pop
mov
inc
and
mov
and
mov
xlat
push
adc
or
dec
hlt
push
insb
sbb
sbb
lret
pusha
aam
and
pop
dec
jl
int
mov
add
lcall
push
call
jg
cmp
stos
lock
ljmp
jecxz
cs
sub
ficoms
pop
and
pop
inc
push
insl
mov
sbb
jbe
popf
sub
out
or
imul
sahf
sahf
stc
popa
dec
push
ljmp
scas
jne
mov
dec
mov
lock
jge
adc
pushf
sbb
std
aaa
adc
inc
cmp
sarb
push
pop
and
jl
je
std
in
fcmove
mov
adc
mov
cmp
jecxz
out
inc
idivb
fimull
in
aaa
data16
adc
rorb
cmp
jbe,pn
popa
roll
cmpsl
imul
add
and
mov
into
in
add
and
in
sbb
inc
jbe
dec
mov
or
mov
or
stc
dec
push
fs
push
inc
cmp
mov
js
inc
xchg
mov
loopne
repnz
insb
add
and
mul
sbb
pop
inc
and
xchg
pop
je
fdivp
and
cmp
shl
xchg
pusha
adc
sub
mov
xchg
cmp
jle
jbe
pinsrw
gs
sti
dec
loop
test
ror
pop
jae
push
mov
inc
data16
stc
push
scas
or
std
cmp
sbb
js
pushf
adc
xor
inc
sarb
loop
call
test
decb
cmp
cs
push
jge
in
mov
inc
enter
adc
sub
movsb
mov
or
aas
js
jb
dec
inc
sti
mov
shll
push
sbb
and
aam
mov
mov
hlt
jae
fdivs
icebp
rorb
aam
inc
cmovo
push
jo
cmc
push
sbb
or
add
jl
jle
mov
gs
pop
into
das
cmp
js
or
push
cmpsl
inc
inc
bound
mov
sbb
andl
mov
xchg
test
or
push
les
add
cwtl
rcrl
subb
xor
mov
mov
addr16
nop
jns
xor
xor
sti
lods
fstpl
xchg
mov
arpl
fnstcw
xlat
pop
adc
out
fcoml
orb
outsl
cmc
arpl
sbb
ljmp
jl
aam
push
jecxz
jmp
cmp
mov
call
pop
popa
shrl
and
sbb
neg
push
test
cmp
clc
popf
js
cmp
stc
mov
jns
push
test
repnz
jbe
aaa
out
add
xchg
pop
and
jmp
xchg
fistl
cmp
lret
cmpsb
mov
jge
add
push
xchg
mov
imul
aad
ljmp
cli
sub
repnz
or
lcall
jg
enter
or
mov
jle
int3
stc
out
add
daa
outsb
into
sbb
rorb
cs
inc
and
xchg
in
nop
outsb
popf
insb
xchg
mov
push
jo
mov
rorl
sub
hlt
rorl
jns
std
or
jge
sahf
adc
in
sar
je
ror
mov
or
stos
and
frstor
gs
mov
bound
call
cmp
in
movl
out
mov
or
je
outsb
cld
fneni(8087
rcrl
enter
dec
popfw
xlat
pop
shlb
js
jl
xchg
push
lds
scas
sbb
cmpsl
dec
outsl
movsl
push
pop
jp
pop
and
mov
pop
leave
in
mov
pop
push
popa
int3
push
push
cwtl
int
std
je
in
cld
add
filds
and
pop
in
cmp
cld
pop
xchg
aaa
iret
clc
lods
insb
inc
inc
fldl
std
int3
jmp
pop
cld
call
andb
test
cld
lret
xchg
adc
dec
insl
and
dec
and
mov
and
pop
and
outsl
mov
aam
pushf
popa
mov
scas
adc
stc
fsubrs
add
int
repz
or
adc
mov
xchg
sub
ss
xor
sbb
mov
mov
inc
sbb
xorb
sti
aaa
sti
repnz
leave
fwait
cs
aad
scas
shll
les
mov
ret
or
xchg
lods
xchg
cmp
mov
xchg
cmp
or
leave
sbb
add
mov
clc
loope
rorw
xchg
add
notrack
orb
and
push
sub
dec
ret
sub
shrb
in
es
inc
sub
inc
adc
sub
push
xchg
mov
frstor
cmpsl
add
sbb
insb
jle
outsl
pop
mov
out
scas
mov
mov
test
cmp
mov
insb
sub
pop
test
std
adc
sub
cmp
dec
or
add
cld
pop
xchg
push
mov
cld
push
pop
jp
xchg
mov
sbb
jne
popa
outsb
pop
mov
outsb
push
bound
mov
or
test
jg
in
in
jmp
jbe
insb
fisubrl
loope
dec
ja
adc
inc
dec
jmp
arpl
in
cmp
hlt
mov
pop
rol
xchg
pop
jb
sub
sahf
ss
out
fwait
in
mov
int
int3
or
pusha
and
xchg
out
xor
ficomps
stos
inc
ficomps
cmp
repz
pop
fimull
and
push
jb
insb
add
dec
mov
mov
aam
cmp
mov
inc
loope
adc
push
push
sub
mov
sub
jb
icebp
xchg
test
pop
jl
ss
movsl
or
add
sbb
aam
mov
inc
std
or
and
and
sub
jbe
lret
or
movswl
push
rorl
sahf
mov
aam
mov
stos
js
mov
jb
or
fnsave
or
pop
adc
neg
mov
add
je
mov
dec
mov
data16
out
data16
sbb
stc
pushf
jno
xchg
mov
jl
mov
xchg
adcb
push
loope,pt
xchg
mov
fs
mov
mov
mov
jns
stos
scas
cmpl
pop
push
in
add
push
insl
add
hlt
loopne
test
cmp
call
jmp
fstl
stos
test
pop
cltd
leave
in
dec
adc
sub
in
rorb
pusha
sub
sub
sbb
mov
inc
inc
add
shlb
fdivr
xchg
xchg
fxch
sbb
add
adc
pop
mov
lcall
dec
mov
stos
sub
cli
cmpsb
call
sbb
or
xchg
xlat
dec
or
rorl
cmp
mov
pop
scas
clc
iret
push
cs
adc
pop
insb
push
js
hlt
cmp
push
mov
cmp
aaa
nop
mov
pusha
jecxz
jo
ja
or
inc
add
lods
adc
sbb
pop
cwtl
jle
mov
pusha
imul
les
repz
das
mov
push
mov
aad
pop
adc
jb
jecxz
dec
out
cmpsl
inc
in
sub
sarb
mov
sbb
jmp
ss
push
xor
jle
sbb
or
and
push
imul
outsl
pop
mov
sbb
hlt
loope
in
ret
mov
out
loopne
in
call
jp
push
cmp
ljmp
adc
adc
push
add
push
test
das
in
cmp
or
xchg
addr16
push
mov
int3
je
jg
sbb
lahf
push
jle
xchg
push
adc
scas
data16
inc
pop
jle
pop
std
dec
sbb
jge
ficompl
pop
adc
dec
xlat
add
mov
test
add
xchg
and
cmp
cmpsl
push
sub
ljmp
mov
lahf
mov
mov
pop
or
mov
fidivrl
jae
ret
adc
adc
cli
or
mov
in
hlt
xchg
cli
addr16
roll
add
clc
daa
jle
rcrl
mov
mov
ds
mov
inc
mov
stc
jo
pop
mov
adc
or
xchg
adc
adc
aam
test
fs
ret
inc
repz
and
ljmp
jle
fidivrl
repz
lret
aam
lahf
jmp
xchg
lea
lret
out
pop
jnp
xor
add
dec
pusha
mov
ficomps
lods
push
aam
jo
fcmovnbe
fs
shl
negl
mov
dec
mov
cli
mov
lock
mov
xor
insb
xor
clc
test
pop
inc
pop
test
push
je
sbb
adc
push
es
aad
dec
mov
push
fsubrp
adc
and
cmp
or
movsb
dec
jp
jl
stc
ljmp
push
ret
cmp
inc
or
addb
mov
jae
xchg
mov
xchg
xchg
outsl
push
cmp
sub
mov
add
test
mov
repz
jmp
and
sbb
lods
mov
imul
pop
mov
push
xchg
push
pop
mov
and
sahf
inc
xchg
xchg
fmul
leave
out
and
leave
shl
es
ljmp
cmc
mov
imul
in
ss
loope
and
xchg
jae
fbstp
push
xor
rcrl
repnz
mov
mov
inc
inc
fwait
and
and
call
pop
mov
xchg
xor
adc
fiaddl
aas
mov
or
ljmp
xchg
xchg
mov
sub
icebp
mov
jb
add
fidivrl
popa
test
jbe
stos
add
test
add
movsl
outsl
lock
mov
jmp
or
push
loopne
mov
jno
fidivrl
cmpsl
loop
pop
dec
or
outsl
ret
fsub
int3
into
pop
mov
cmp
mov
inc
pushf
push
repnz
lret
out
mov
or
lods
ret
out
ret
pop
inc
inc
pop
shrl
cli
ja
jne
adc
loope
sub
inc
sub
shl
jmp
and
add
pushf
jge
add
sti
and
dec
inc
dec
decl
jl
loope
ljmp
loope
xor
scas
movsl
mov
xchg
dec
arpl
out
cmp
scas
ljmp
repz
enter
xor
mov
push
je
mov
scas
xlat
mov
cmc
jl
adc
lds
sub
dec
push
sbbl
xor
or
add
sbb
jmp
or
movsl
int
lea
mov
add
or
push
xchg
les
sbb
cmp
ja
subl
call
push
popa
sbb
imul
jmp
leave
jae
dec
mov
sbb
add
and
testb
cmc
xchg
pop
popa
gs
jnp
rclb
scas
add
fucomi
loop
add
movsb
movsl
xor
cmp
popa
iret
push
xchg
cmp
and
add
push
push
and
in
or
fwait
dec
and
pop
arpl
les
mov
std
mov
add
aad
lods
xlat
jno
inc
enter
push
mov
dec
lret
fstpl
mov
std
push
pushf
and
addr16
dec
sub
or
mov
addr16
mov
lahf
mov
xor
sub
sbb
and
and
mov
shll
loope
roll
and
cmpb
lcall
mov
sbb
out
or
sbb
push
ds
and
xor
add
xchg
icebp
sbb
mov
std
cmp
cwtl
jae
lds
out
inc
add
xor
sti
mov
dec
cld
rorb
test
lcall
andb
fwait
lcall
cmp
movsl
jp
push
loope
jne
adc
mov
stc
dec
sub
fisubs
mov
push
mov
movsb
jmp
cs
sbb
xor
add
dec
ffree
ja
jns
cmp
pop
movsb
mov
mov
pop
xchg
sub
jge
ljmp
fstpt
xchg
aam
into
out
inc
cmp
push
in
jecxz
xchg
mov
fwait
test
mov
adc
lea
loop
pop
dec
push
cmp
sub
bnd
gs
fisubrs
aaa
inc
in
dec
fists
movsb
int
dec
inc
sti
scas
jmp
mov
lahf
in
jmp
movsl
dec
clc
lds
les
and
cltd
xchg
insl
int3
adc
xor
push
push
sub
mov
xchg
mov
jo
or
int
xchg
xor
jae
les
outsl
sarl
pop
bound
or
jmp
mov
sbb
jno
xor
test
mov
or
cmpsb
and
mov
test
xchg
sbb
jecxz
inc
gs
fdivrs
dec
popa
xchg
test
inc
cmp
sarb
lret
xor
sbb
cmpsl
pop
jp
lea
das
push
repz
sbb
xchg
xor
mov
dec
lret
xor
adc
ds
dec
cmpb
iret
mov
xor
sbb
aaa
sub
xchg
pop
sub
mov
xchg
nop
adc
mov
stos
jp
stc
push
loop
lahf
dec
js
fmuls
and
cmp
inc
mov
fwait
mov
mull
mov
aam
sub
test
fisubrs
sub
cmp
jno
xchg
xchg
mov
pop
fneni(8087
mov
cltd
sub
add
sub
test
pop
xchg
fcmove
outsb
jge
outsl
fstpl
push
andl
dec
aaa
jne
dec
out
enter
daa
imul
mov
loope
and
adc
es
adc
stc
or
and
inc
cwtl
mov
ss
pop
lea
pop
loope
scas
jmp
sub
sbb
lcall
mov
push
stos
adc
int
mov
cli
push
or
stc
cmp
loope
mov
dec
xor
mov
jo
add
cmp
jo
ret
arpl
dec
mov
in
femms
shrb
fsubs
xchg
and
adc
je
stos
lods
xor
adc
push
insl
ja
std
sub
mov
test
mov
mov
les
lods
out
push
dec
cwtl
cli
movsl
xchg
jecxz
iret
add
aaa
stos
xchg
or
lock
dec
scas
int
mov
je
paddd
jae
pop
cmp
movsb
jne
add
rcrb
ljmp
xorb
sub
mov
inc
js
out
push
hlt
cmp
nop
incb
pop
cmp
pop
loope
repz
lahf
xchg
clc
mov
es
pop
movsb
fisubrl
aaa
xor
jb
mov
jg
pop
sbb
or
cmp
or
jle
pop
mov
fimull
add
adc
jb
push
sbb
push
mov
jbe
adc
dec
sub
adc
jb
cld
lret
mov
imul
mov
test
and
add
inc
xor
pop
push
fsts
push
mov
xchg
cli
mov
cmp
lret
mov
mov
dec
test
repnz
mov
test
mov
bound
cmpsb
xchg
rclb
lcall
pushf
mov
insb
adc
sarb
xchg
enter
dec
stos
xor
push
daa
cmp
sub
lea
in
mov
bound
int3
dec
mov
aad
test
push
addr16
fildl
jno
inc
pop
adc
push
pop
pop
pushf
inc
stc
jl
pop
mov
call
clc
cltd
inc
jmp
gs
lret
inc
sarl
adc
and
inc
mov
pushf
mov
jmp
cmp
jb
outsl
shll
push
pop
mov
dec
lret
xchg
negl
cmpsb
aam
mov
xchg
fsubrs
push
outsb
pop
push
test
add
loop
cltd
pushf
jmp
frstor
enter
push
cmp
je
call
imul
lret
xchg
push
movsb
mov
loopne
mov
lret
or
mov
pop
sbb
js
or
loop
subl
fldcw
pop
mov
jns
into
outsl
in
pop
cmpsb
aaa
mov
or
fadds
add
cmp
sbb
ret
push
loop
cld
data16
jp
and
int3
pushf
cltd
cmp
adc
mov
sbb
push
gs
das
es
push
hlt
mov
insb
lods
sahf
popf
loopne
enter
pop
adc
push
or
ret
fdecstp
imull
dec
jae
outsb
push
icebp
push
aad
xor
icebp
mov
test
out
pop
xchg
adc
lret
scas
lock
outsl
gs
out
adc
scas
or
cmp
rep
and
mov
imul
dec
jbe
jb
int
addl
movsb
pop
std
repnz
decl
jg
rep
fxrstor
dec
mov
inc
in
add
out
lea
scas
mov
movsb
cmp
jo
pushf
jno
rcrb
mov
imul
inc
xor
push
clc
adc
cmp
mov
mov
fmuls
fwait
mov
dec
jg
shlb
mov
adc
mov
aaa
ret
fstps
mov
call
inc
call
jmp
or
sub
push
lods
imul
sbb
pop
dec
lods
clc
hlt
push
aad
or
xchg
js
dec
jbe
sbb
sbb
adc
sbb
xchg
ja
mov
xor
std
imul
rclb
sub
outsl
js
addr16
rcrb
js
repnz
jno
test
pop
subl
lret
popf
jns
hlt
mov
mov
mov
mov
ret
mov
cmp
xor
xor
test
push
pop
movsl
test
stos
sub
xor
insb
inc
sub
sbb
inc
xorl
sub
sub
lods
mov
mov
jno
mov
lods
or
mov
fsub
cwtl
sbb
je
push
sub
idivl
in
lock
aam
pop
into
lcall
mov
mov
fidivs
cld
adc
int3
jmp
pusha
das
xor
pushl
sub
cmp
pusha
pop
push
adc
xor
lahf
or
jb
out
cld
lea
sahf
in
out
icebp
xchg
mov
jnp
push
push
es
sub
dec
lock
adc
sub
xchg
xchg
ljmp
mov
sti
mov
xor
and
addl
mov
push
inc
das
jg
cmpsb
pop
jo
inc
mov
inc
fcomp
sbb
xchg
sbb
stos
sarb
shl
mov
outsb
sbb
addr16
push
cmp
imull
jb
fwait
sbb
mov
push
lcall
in
jle
gs
push
lret
xchg
and
add
aaa
ja
mov
movsb
outsl
xchg
xor
cmpsl
push
jp
jnp
das
adc
out
mov
ja
jp
dec
enter
cmpb
pop
ror
popf
enter
ret
in
stos
mov
fimuls
in
testb
leave
mov
gs
jecxz
or
fwait
push
mov
sti
jne
dec
loop
neg
sub
andl
xchg
and
ret
inc
hlt
in
push
sub
adc
les
movsl
mov
or
lahf
add
mov
loopne
xor
mov
sarl
cmp
inc
dec
xor
test
into
mov
xchg
fisttps
jmp
cltd
jmp
cwtl
xchg
jg
arpl
mov
and
or
xor
inc
mov
cli
mov
push
push
jle
iret
ret
cltd
sub
and
pop
mov
xor
cmp
and
int3
cli
xchg
out
div
lcall
sub
insb
ja
aaa
jge
xchg
scas
mov
cmpsb
adc
cmp
scas
out
xchg
lcall
mov
movb
dec
mov
ss
dec
or
pop
mov
sbb
adc
pop
fldl
sbb
mov
pop
add
gs
inc
jge
out
cmp
cltd
fsub
fisubl
ret
add
pushf
or
jl
sbb
lods
fimull
mov
stc
xchg
sbb
stos
sub
jg
cwtl
int
stos
call
mov
pop
movsl
dec
mov
mov
call
shlb
fcoml
cld
dec
lods
jno
cmp
inc
xor
mov
dec
pop
mov
push
jnp
and
mov
mov
and
mov
mov
pop
fsts
lea
inc
add
sti
mov
xchg
or
jg
jge
mov
hlt
cld
sbb
pushf
mov
lcall
pop
xor
mov
mov
fwait
sub
push
cmp
sarl
imul
sbb
and
mov
xchg
aas
jmp
mov
clc
cmp
cmp
popf
jbe
or
mov
ja
mov
test
out
mov
push
mov
adc
repz
dec
cmpsb
mov
mov
fwait
dec
scas
adc
jno
mov
dec
int3
xor
test
add
adc
enter
mov
dec
push
cmp
or
mov
fldt
pushf
adc
leave
lcallw
add
scas
jno
and
adc
xchg
cmp
out
xchg
jno
or
cltd
mov
adc
sub
sarl
subb
jmp
pop
repnz
outsl
push
push
clc
jb
ret
bndstx
add
mov
nop
out
cs
lods
fmulp
mov
inc
push
adc
add
scas
rorb
int
int
in
mov
xchg
mov
cli
sbb
pop
xchg
roll
pop
mov
xchg
cmp
mov
add
dec
mov
enter
sbb
adcb
jne
and
fldenv
cs
pop
testb
inc
jns
sbb
sbb
cmpsl
ss
inc
mov
ror
test
xchg
jo
ds
inc
sbb
cli
hlt
sbb
loopne
push
jns
jno
fiadds
ljmp
mov
sub
mov
xchg
int3
sahf
repnz
xchg
std
sarb
push
ret
adc
push
xlat
add
pop
mov
push
lods
lock
or
les
sahf
xchg
in
and
cmpsl
and
push
cmp
push
fdivr
mov
add
add
sub
and
lcall
push
dec
std
aas
imul
call
aaa
add
adc
clc
arpl
jne
out
cmp
mov
dec
or
jno
es
push
int
outsb
push
dec
ljmp
mov
inc
jno
push
push
mov
ljmp
es
test
and
mov
sub
insl
jnp
sbb
mov
xchg
inc
adc
and
arpl
mov
mov
xor
push
mov
stos
adc
adc
xchg
fstps
mov
in
repz
ret
mov
out
sub
dec
lea
sbb
leave
pushf
std
pop
jmp
test
aaa
adc
inc
mov
xchg
flds
in
inc
xor
add
mov
or
sub
int
out
add
outsb
loopne,pn
test
jp
or
mov
loope
xchg
inc
stc
adc
orb
popw
xchg
insb
lcall
adc
imul
jo
jne
dec
inc
adc
ja
xor
fistpll
ds
je
fnsave
lea
pop
mov
out
mov
xchg
andl
inc
pop
popl
ljmp
xlat
dec
mov
jne
inc
sub
adc
gs
mov
cli
and
sbb
les
loope
mov
cmp
push
xchg
mov
mov
jo
sar
loopne
sbb
movsl
aam
mov
ljmp
add
push
hlt
andb
cmpsb
jae
adc
in
jnp
jae
pop
xchg
or
lds
popa
shl
ja
push
dec
pcmpgtb
fildl
hlt
jo
inc
cmp
jo
dec
mov
cmpsl
cmc
push
fisttpll
addr16
imul
xchg
sbb
ljmp
or
pusha
scas
push
mov
sbb
das
in
stos
jo
jecxz
inc
push
push
dec
jns
adc
test
adc
inc
dec
push
or
sub
int
mov
pop
push
outsb
test
out
jno
fdivrl
out
inc
add
xor
sbb
pop
aad
jbe
nop
adc
loopne
mov
es
cltd
and
mov
sub
leave
jns
dec
sub
cli
lds
adc
dec
insl
jb
jecxz
aas
inc
mov
add
sarb
cmp
xor
and
popf
push
xor
ja
mov
lcall
je
and
adc
mov
sbb
mov
and
pusha
pushf
call
std
pop
les
out
pop
out
not
pop
xor
out
inc
sbb
sahf
jbe
jge
push
scas
sub
push
aad
loop
cld
jp
lods
lock
cs
mov
aas
mov
jg
pop
mov
mov
mov
or
cmpsl
or
push
mov
jge
xchg
push
ss
mov
adc
fimull
dec
pop
fwait
push
xchg
adc
sahf
add
in
pop
sub
lcall
xchg
mov
ret
aas
iret
mov
inc
sub
add
adc
dec
mov
lret
add
pop
pop
inc
mov
scas
std
dec
into
sbb
fcoml
out
fadds
pop
inc
push
cmp
adc
aaa
shlb
aaa
add
adc
loop
rcll
pushf
fwait
icebp
enter
in
xchg
xchg
xor
jmp
subb
jmp
dec
dec
pop
push
pushl
sub
or
sub
in
adc
pop
jmp
pop
mov
jmp
movsb
out
movlps
out
xchg
hlt
lret
mov
pop
push
dec
fdivp
ja
mov
add
pop
enter
inc
clc
imulb
stos
pop
cs
sub
inc
dec
add
push
lret
mov
je
out
cmp
ljmp
movhps
dec
cmp
cmpsb
adc
mov
fld
sbbb
nop
aaa
out
imul
adc
cmp
je
loopne
mov
xchg
daa
hlt
dec
rolb
dec
int3
cmp
jnp
movsl
mov
sbb
clc
in
pop
xchg
test
int
cmpsl
ret
xchg
mov
lods
mov
sbb
cmc
mov
jle
daa
and
push
jbe
dec
pop
mov
mov
cwtl
xor
sbb
mov
jg
sti
arpl
pop
mov
repz
sar
mov
out
test
mov
lea
sub
and
xor
and
daa
aam
sbb
hlt
xchg
popf
add
js
mov
loop
adc
jge
add
jge
jne
insl
sbbb
pusha
push
dec
jae
cmp
pop
cwtl
or
cmp
cld
cs
push
mov
inc
arpl
pop
lret
xchg
fiadds
mov
cmp
loop
cmpb
mov
mov
jae
xlat
mov
and
pop
lret
cmp
ja
mov
lods
cmc
xor
jge
shrl
xchg
xorb
lea
loop
inc
into
scas
jne
cld
into
hlt
outsl
in
mov
enter
push
out
xor
scas
cmp
shrl
adc
fiaddl
sbb
aam
inc
cmpsl
enter
add
loopne
lods
mov
cmpsb
and
cmp
iret
inc
stos
or
mov
out
inc
jg
in
outsl
and
clc
mov
pop
or
ret
js
cli
pop
imul
push
shll
cmp
fwait
jae
mov
mov
cmp
sub
push
xor
aam
repnz
xchg
in
out
or
sbb
jne
adc
cmp
sub
xchg
mov
mov
mov
jbe
iret
dec
or
xchg
rcrb
jmp
cli
add
sbbl
jae
push
daa
push
loope
sbb
in
rclb
out
ret
or
or
fisubrs
xor
sub
ja
mov
and
cs
sub
scas
adc
push
xlat
xor
xchg
repnz
mov
movsl
and
sbb
lods
insl
arpl
sub
inc
js
cltd
filds
add
sub
or
xchg
cs
add
pop
dec
insb
cld
dec
pushf
xchg
out
dec
inc
mov
adc
jp
std
push
iret
jo
push
push
sbb
or
xchg
sahf
lahf
add
fcmovne
bound
sub
xor
mov
dec
cmp
daa
mov
pop
xor
loope
jmp
out
push
outsl
add
and
push
fildl
fisubrl
push
pushf
daa
popa
fistpll
in
mov
cmc
jl
mov
or
sub
pop
inc
sub
inc
hlt
sbb
sbb
loopne
xor
loopne
outsl
sbb
push
mov
adc
add
xor
mov
inc
les
out
sahf
pop
add
lock
mov
and
gs
or
ficoml
scas
outsl
and
pop
sbb
push
cmc
push
add
sbb
repnz
lods
test
bound
js
test
ds
fmull
clc
xchg
mov
mov
rolb
jbe
mov
jo
out
pushf
imul
mov
imul
and
sbb
add
adc
rolb
inc
jo
outsb
mov
fnstcw
arpl
and
sahf
sbb
fdivrl
lds
dec
cwtl
add
lods
push
addr16
fsts
push
fidivs
push
imul
test
inc
das
jle
mov
push
pop
sbb
lea
cmp
neg
push
repz
or
lcall
mov
mov
daa
ficoml
inc
iret
data16
sbb
je
mov
xor
mov
cltd
sbb
fucomp
adc
loop
jecxz
push
shrb
jmp
sbb
add
xchg
pop
test
lock
in
fisubrs
scas
jne
subb
jg
into
sti
cmp
out
movsl
adc
or
movsl
roll
test
jnp
sbb
and
mov
cmc
sub
mov
out
mov
pusha
scas
lods
jo
fisttps
lret
leave
cmc
repz
and
xor
inc
adc
and
rolb
js
bound
lea
fucom
push
jl,pt
ret
xchg
negl
scas
jl
call
int
int
call
jbe
insb
mov
daa
cli
mov
adc
sub
sbb
mov
pop
addb
add
js
dec
call
xor
jbe
cwtl
lods
inc
pop
es
lods
ja
lock
jge
pop
bound
adc
jbe
mov
lret
hlt
mov
mov
fnstcw
sbb
sub
pop
pop
dec
adc
jmp
cld
sets
dec
gs
push
push
mov
bound
mov
jne
xlat
mov
xor
and
push
jae
js
pop
je
scas
arpl
xchg
add
jo
pop
xchg
cmp
mov
xor
sti
sbb
int3
inc
cld
popf
pop
pushf
subl
out
fisubs
cltd
push
dec
sbb
std
addb
jmp
pop
mov
mov
cmp
stos
lods
gs
mov
xlat
cmp
ret
mov
dec
iret
jl
lods
stos
jmp
push
or
iret
xchg
push
adc
test
hlt
cli
dec
fmulp
xchg
push
dec
sub
outsb
imul
and
mov
push
push
inc
sub
fisubl
lods
add
inc
das
mov
mov
stos
outsl
lret
ss
popa
test
ds
decl
sbb
scas
movsb
hlt
movsb
dec
add
sub
push
xchg
lea
mov
mov
les
xor
in
mov
repnz
daa
ret
inc
cmp
imul
adc
pop
cmc
xor
add
mov
xchg
inc
mov
xorb
cmpsb
mov
mov
out
fidivl
push
inc
xchg
cmpsb
fstl
das
inc
out
mov
shlb
pusha
stos
pop
lret
ds
push
xor
or
sub
int
jae
mov
out
popa
or
out
and
ja
mov
mov
sti
push
fs
push
fcmove
xchg
pop
mov
ds
pusha
aam
xor
mov
dec
test
pop
iret
jmp
pushf
mov
fdivrl
cmp
adc
pop
shrl
inc
xchg
cwtl
sub
inc
jmp
jae
jns
mov
xchg
fs
aam
mov
xchg
stc
pop
outsl
cmp
notl
cmp
in
dec
fs
mov
mov
int3
cli
push
sti
fs
loop
cltd
aam
ljmp
cltd
icebp
popf
sub
repnz
adc
ficompl
ja
xor
cmp
jnp
mov
loop
dec
mov
ret
jb
sbb
jecxz
xor
mov
mov
mov
push
jb
test
pop
ret
pop
je
sbbl
jns
and
fs
imul
pusha
push
xorl
or
subb
cmp
aad
pop
adc
push
cmp
test
movsb
hlt
test
jp
lcall
xorb
imul
loopne
dec
jle
dec
aad
test
fs
add
inc
sahf
lret
inc
sarb
stos
pushw
mov
lds
pop
repz
and
sub
outsl
data16
movsl
lret
or
push
fdivl
jge
je
bound
mov
cmp
outsl
rolb
add
call
jecxz
scas
call
cmp
ljmp
sub
push
mov
xchg
adc
movsl
cmp
je
cmp
insb
jg
ret
xchg
cli
outsb
jb
and
pop
push
dec
cmp
cmpb
and
push
adc
dec
clc
mov
pop
xor
popf
jbe
or
lds
inc
iret
clc
fwait
push
jmp
mov
or
ret
outsb
call
test
js
rclb
sarb
fnstenv
fistps
lods
shl
mov
or
push
dec
out
fsts
mov
adc
insb
stos
mov
pop
mov
jle
fidivs
xor
mov
mov
pop
jb
sub
xchg
xor
sbb
pop
push
lds
fistpll
shll
pop
cmp
push
jmp
aad
push
sbb
ja
cmp
lock
xchg
xchg
pop
fsubl
inc
sub
faddl
push
mov
adc
xchg
mov
out
stos
les
jno
dec
iret
jecxz
test
jne
aas
test
out
in
sti
jo
stos
push
add
lahf
enter
lea
in
jp
aaa
and
jecxz
xchg
in
loopne
xchg
jle
dec
and
jnp
dec
dec
popa
out
in
imul
mov
in
and
inc
cmp
inc
lock
push
xor
ret
or
jns
rolb
div
das
aas
mov
add
jge
lds
stos
orb
mov
jge
xchg
xor
or
inc
xor
lcall
roll
std
adc
jecxz
jp
adc
push
lcall
mov
stc
adc
jecxz
push
xchg
push
xchg
lea
int3
das
jne
xchg
mov
cltd
mov
jg
lods
ja
loope
dec
jo
les
das
dec
jle
mov
mov
xchg
sub
add
fimuls
pop
mov
outsb
cs
popa
sahf
jo
push
and
jge
add
mov
addl
lea
inc
sti
adc
ja
sahf
mov
ljmp
scas
xchg
sub
cmp
rorl
push
pop
xor
or
add
cmpsl
shl
sbb
shlb
pop
mov
das
fcomps
fidivrl
adc
adc
mov
xor
cmp
jno
popa
out
sub
and
icebp
dec
xor
inc
xor
xchg
push
jp
sbb
add
sub
negb
in
or
jno
cmc
popa
sbb
ss
fsubrs
xor
ja
push
pushf
dec
sbb
arpl
js
cmc
dec
add
pop
std
or
das
xor
in
icebp
sub
sub
mulb
pop
jmp
movsb
std
stos
out
dec
xchg
frstor
into
xor
test
jg
jno
imul
mov
pop
insb
fnstenv
cmp
jp
xor
mov
das
mov
xchg
dec
xchg
push
adc
xlat
mov
inc
ror
or
add
or
cmc
subb
sbb
sub
sub
xchg
loopne
ret
loope
jg
mov
xchg
or
mov
jmp
pushf
dec
sub
ficomps
std
mov
call
push
adc
fstps
or
dec
fcoms
fists
es
call
leave
sbb
imul
xchg
test
lods
aas
pop
pop
mov
hlt
inc
ja
into
cmp
push
jbe
jmp
xor
stos
popa
jnp
outsl
cmpsb
jno
mov
add
ljmp
hlt
lcall
and
xor
pop
mov
and
cmp
cld
mov
fisubl
popa
mov
ljmp
ljmp
or
mov
andl
in
popf
push
addr16
xor
xor
push
hlt
sti
mov
mov
jl
mov
lods
xchg
sub
fisttpll
outsb
inc
js
jbe
inc
push
xor
in
pop
xchg
fidivs
dec
xlat
lahf
dec
jecxz
enter
xlat
mov
dec
icebp
xchg
pop
rcll
std
shl
pushf
push
pop
cs
hlt
xchg
jl
das
lea
imul
mov
jle
aaa
cmp
dec
xchg
lods
int3
sbb
inc
jae
cmp
mov
fdivrp
sbb
xor
inc
cmc
loope
xchg
mov
adc
cmp
pop
or
xor
inc
in
in
add
xor
inc
push
mov
orb
and
aaa
push
lret
add
mov
xchg
xor
stos
cs
xor
pop
sarl
sarb
push
mov
in
mov
xor
jp
jecxz
nop
mov
cmp
ret
inc
xchg
dec
sub
cmp
clc
inc
push
pop
xor
fs
hlt
lahf
pop
gs
xchg
sbb
stos
roll
test
inc
mov
pop
jnp
negl
push
mov
les
lods
lcall
jge
data16
jg
shl
cmp
in
jge
adcb
jnp
stc
sub
mov
or
nop
stos
mov
sub
das
push
adc
fcoms
testl
sarl
ss
roll
and
jle
mov
or
xor
mov
jmp
clc
adc
test
stos
xor
out
clc
mov
dec
out
push
pop
imul
dec
movsb
dec
jg
icebp
inc
call
inc
dec
cwtl
xchg
push
sbb
repz
or
scas
repnz
inc
cwtl
sbb
iret
mov
pop
js
pop
loope
fwait
into
inc
js
inc
mov
xchg
ror
jno
push
xor
iret
add
mov
jg
push
in
mov
fsubr
pop
adc
xor
mov
adc
mov
mov
jno
cwtl
fidivrl
cmp
cmp
push
popf
into
stos
or
outsl
outsl
ret
cmpsl
push
ja
lret
fsubs
lea
add
cmpsl
sub
loope
clc
jbe
push
push
mov
dec
add
add
push
pusha
pop
repnz
insl
xor
mov
or
pop
sbb
fxch
cmpsl
fs
xor
subl
notb
push
or
out
adc
jg
loopne
xor
or
or
cmpsl
and
or
fnstsw
cltd
mov
mov
cmp
call
mov
jo
push
add
or
push
aam
enter
push
popa
shrb
mov
addr16
lock
xchg
leave
stc
sbb
nop
mov
xchg
shll
int3
jae
popa
or
ds
jns
inc
cmp
nop
mov
leave
adc
adc
or
fwait
loopne
pop
inc
in
daa
xchg
lds
dec
pop
add
xchg
lcall
loope
int3
xor
add
out
jl
mov
dec
mov
ss
cmp
out
push
mov
add
and
test
push
lock
rolb
mov
inc
sahf
dec
sbb
jle
adc
ret
sub
daa
ret
daa
add
out
adc
aad
outsb
jge
jns
enter
sub
mov
adc
adc
cmc
lcall
scas
cmp
fwait
xor
mov
enter
sub
fstps
mul
add
pushf
mov
pop
sbb
cmp
cli
adc
cmpsl
in
and
mov
lea
call
js
das
test
cmp
sub
xor
ss
xor
sub
mulb
mov
shr
and
cli
cmp
dec
mov
repz
nop
icebp
dec
jo
mov
nop
mov
ljmp
dec
jl
push
and
push
inc
fldt
adcb
nop
cltd
mov
ja
roll
not
add
fistpl
pop
inc
sbb
jno
or
mov
lcall
imul
je
repnz
adcl
lret
adc
mov
jl
jns
test
dec
out
push
and
bound
pushf
scas
icebp
push
pop
call
lods
push
mov
incb
out
pusha
push
pusha
dec
je
push
cmp
addr16
and
ljmp
mov
in
pop
add
xor
sub
lahf
and
ja
pop
mov
sub
pop
mov
dec
inc
dec
jne
aad
mov
mov
mov
cld
call
fisubrs
es
pop
jnp
stos
add
nop
dec
mov
jno
mov
cmp
mov
xor
cmp
jg
fwait
stos
push
jns
call
outsb
lret
ss
repnz
test
ffreep
jmp
push
lret
add
out
clc
or
std
outsb
cmp
lock
jp,pt
filds
bound
repnz
xor
mov
in
dec
mov
fistpl
adc
stc
sub
cmp
push
cmp
dec
inc
jmp
pop
icebp
lret
and
xorl
lret
or
test
xchg
xlat
lods
xchg
sarb
xor
xchg
iret
cmpsl
je
mov
stos
jnp
sbb
lcall
jl
and
ja
and
ret
pop
scas
cmc
or
subl
je
jne
xor
dec
adc
jge
and
ret
mov
mov
or
mov
int3
inc
xchg
loopne
popf
inc
mov
jecxz
mov
mov
pop
cmp
lahf
and
push
lds
out
fisttps
mov
cs
in
aas
es
fsubs
bnd
push
movsb
loope
jb
mov
fcmovu
outsb
inc
cmp
jmp
lea
in
dec
mov
stos
lock
and
cmp
in
or
mov
sbb
shr
jbe
out
gs
push
aam
cld
dec
xor
pop
in
arpl
sahf
sub
inc
jne
fs
mov
inc
stos
call
hlt
pop
mov
pop
mov
sub
das
out
xchg
in
cld
jo,pt
inc
push
insb
adc
inc
inc
adc
cwtl
adc
stos
test
inc
and
pusha
sbbl
les
sbbb
out
into
fnstcw
popa
pop
shll
shrl
cmc
jns
mov
pop
pusha
push
cmp
aaa
jge
ljmp
cmp
sbb
or
and
adc
ret
cmp
cs
fs
or
into
movsl
inc
shr
data16
lods
sub
push
sbb
fcom
aad
dec
in
lret
mov
in
xchg
push
pop
sbb
iret
inc
cmp
mov
sub
ljmp
stos
add
ret
in
push
addb
adc
and
adc
add
fistpl
push
xchg
jmp
outsl
dec
popf
nop
and
cmp
inc
xorl
jle
stos
leave
sub
inc
xchg
or
inc
stos
or
xchg
pop
loop
or
test
mov
jns
subl
lods
shlb
lea
push
dec
jg
lret
decb
push
sbb
insb
or
and
lds
pop
xor
hlt
jb
pop
jle
int
jbe
pop
imul
xor
and
sub
out
xchg
std
int3
jge
cwtl
push
pop
push
out
stos
adc
sub
jno
sbb
aaa
push
sbb
jmp
push
xor
cmpl
add
jmp
cmpsb
ret
mov
into
outsl
cmp
sbb
rorl
je
lret
pop
mov
and
stc
inc
adc
cmp
scas
add
push
ret
ja
add
fstpt
jmp
jecxz
and
lds
add
pop
adcb
inc
scas
rcl
sahf
out
jnp
cmpsl
jl
mov
add
push
push
mov
push
mov
ljmp
outsb
imul
inc
sar
aas
pop
loop
out
ss
into
fsubp
daa
mov
jae
push
negb
rcll
scas
and
or
roll
test
fs
xor
jg
popa
setp
mov
cmp
xchg
stos
daa
cld
cmpsl
or
mov
mov
push
jno
ret
and
call
rorl
xorl
stos
mov
fdivrl
daa
inc
nop
mov
es
ret
push
dec
jbe
fdivs
xchg
call
jae
sbbl
adc
and
sub
out
shll
arpl
inc
fwait
pop
movsb
mov
lea
hlt
rclb
xchg
jno
cwtl
push
add
in
cmp
aaa
xchg
adc
add
push
scas
push
jl
adc
icebp
cmpsl
push
adc
jb
cmpsl
mov
ret
cli
mov
mov
ss
jl
jns
sahf
lods
jge
pusha
xchg
outsl
movsl
mov
mov
cs
xor
fnsave
mov
stos
push
loop
inc
int3
fildl
mov
adc
cs
pop
mov
test
sbb
push
pop
lods
sti
add
insl
rorb
xchg
enter
add
lock
xor
imul
mov
in
sub
push
mov
xor
jo
pop
jg
aam
int
iret
add
and
sti
imul
fadds
cmp
test
sti
jp
cmp
scas
cmpl
push
aas
cld
xorl
insl
jl
mov
or
pop
cmp
dec
fsubp
mov
dec
mov
rolb
xchg
mov
stos
xchg
push
leave
imul
mov
imul
clc
mov
jmp
shlb
out
or
std
sbb
sub
push
fcoml
mov
cltd
mov
push
or
hlt
xchg
or
mov
push
mov
push
sbb
cld
les
sub
jg
fcoms
mov
cld
addr16
xlat
ret
lcall
or
inc
pop
pop
adc
inc
mov
mov
lret
pop
mov
push
mov
xor
out
jp
popa
pop
jae
testb
leave
imul
sub
scas
mov
out
rcll
fstpt
out
jmp
mov
outsl
ja
in
dec
adc
loope
orb
xlat
iret
flds
push
sub
testl
jmp
adcl
push
jecxz
fdivrl
es
stos
outsl
out
xchg
mov
dec
psubusb
pop
add
faddl
or
inc
pop
orb
mov
jae
or
mov
lods
inc
cli
mov
add
and
icebp
pop
dec
out
int3
mov
or
fisttpl
mov
jle
fdivl
adc
sbb
mov
ret
lret
xor
addr16
test
pop
out
dec
push
fisubrl
sub
movsb
adc
fwait
jle
sti
scas
push
push
sub
push
loope
xor
add
adc
fucom
lret
or
ljmp
jge
push
rolb
mov
mov
cmp
mov
xchg
shlb
loopne
hlt
fldt
inc
dec
sbb
test
pushl
sbb
push
jae
jcxz
xor
addl
mov
fwait
jle
xchg
fldenv
sbb
xor
ljmp
orl
movl
or
fmul
cmp
ret
or
int3
inc
sub
sar
jecxz
xor
mov
jne
jl
or
push
daa
fidivl
iret
sti
mov
xor
mov
xchg
cmp
xchg
and
or
cli
sarl
mov
stos
lea
mov
leavew
inc
test
test
ret
imul
rclb
xor
ret
subl
xchg
and
das
loope
in
lea
nop
ja
ret
mov
mov
incl
inc
mov
std
lods
negb
jmp
mov
add
pushf
std
jmp
or
ror
sub
ja
sti
xor
lods
sub
add
aam
aaa
es
lret
scas
insb
inc
cmp
add
fiadds
lods
loop
shl
adc
pop
scas
addr16
or
in
dec
not
rclb
movsb
pop
insb
adc
pop
xor
sbb
pop
cmp
xor
outsb
sbb
fnstcw
jb
stos
mov
pop
out
mov
js
cltd
ud1
mov
sti
fwait
out
scas
mov
xlat
int3
cld
sbbl
in
test
scas
or
pop
xchg
pop
mov
and
clc
mov
adc
sti
lods
adc
mulb
je
push
mov
inc
and
icebp
jae
popa
adcl
in
xchg
inc
fucom
push
xchg
dec
xchg
lret
mov
icebp
dec
sub
test
or
xchg
push
popf
lds
in
std
jnp
into
into
insl
lds
ljmp
fsubl
fistpl
push
dec
out
out
xchg
pushf
stos
fistps
scas
cmp
sbb
jb
inc
xchg
lret
push
xlat
popa
fs
pop
xchg
movsb
int
dec
hlt
mov
xor
push
adc
jle
daa
xor
pushf
cmp
xchg
loopne
push
movsl
xchg
in
push
test
cs
popl
fs
dec
xchg
int
or
mov
push
ds
sbbl
pop
inc
xchg
int3
and
mov
push
cmpsb
aas
imul
enter
je
xchg
or
dec
sub
inc
xchg
xchg
push
movsb
xchg
aaa
outsl
aas
out
xor
insb
fldt
pop
ss
dec
ss
shrl
xchg
push
cmp
push
xchg
mov
inc
cld
arpl
dec
pop
sbb
sbbl
xor
fisubs
cmc
sbb
sub
sbb
mov
les
sahf
xchg
pop
mov
scas
jle
pop
aaa
or
subb
in
and
icebp
clc
mov
les
clc
pop
lcall
rol
adc
dec
jle
mov
in
movsl
mov
lcall
mov
insl
jns
xchg
add
gs
jp
adc
cwtl
insb
push
add
mov
pop
mov
jmp
mov
cli
sbb
hlt
lds
add
in
inc
pop
pop
adc
test
into
add
push
lcall
and
mov
mov
stos
jmp
jb
and
xchg
in
add
xchg
pop
pop
push
and
idivb
sti
rolb
mov
mov
or
outsb
adc
xchg
arpl
jecxz
mov
and
jmp
out
xor
shlb
xchg
jle
cmp
xchg
imul
cld
orb
xchg
lds
mov
lock
jge,pn
pmaxub
sub
jno
inc
stos
cmp
or
loopne
mov
push
cmp
fsubrp
fdivl
paddsw
jns
mov
xlat
in
nop
sbb
adc
mov
outsl
mov
mov
pop
push
adc
mov
loop
shll
sub
pusha
push
fmull
cmp
sub
call
stc
sti
lea
cmp
cmp
fs
sub
mov
push
inc
and
sub
ss
iret
ljmp
aam
je
mov
ss
out
ljmp
push
outsb
es
pop
loope
loopne
add
lock
out
mov
call
pop
dec
andb
pop
je
xlat
ss
rcr
seto
addr16
stos
sbb
popa
pop
or
leave
pop
xor
xor
xchg
out
push
xchg
in
sub
sbb
xor
sub
int
mov
aam
adc
mov
jle
mov
inc
sbb
mov
dec
orl
add
test
pop
imul
icebp
mov
push
mov
clc
ja
mov
insb
in
mov
mov
fcoms
sbb
cwtl
and
pop
dec
sti
cmp
aas
adc
or
ret
pop
sbb
lock
les
in
ss
and
xor
sbb
cmp
bound
insl
xchg
cmpsb
push
inc
push
aam
jno
push
or
xchg
ss
fidivrs
das
jmp
movsl
xchg
int3
imul
rclb
addb
rorb
mov
mov
push
out
jns
sahf
sbb
lahf
and
add
dec
jmp
pop
xor
sarl
push
sbb
mov
or
dec
inc
or
dec
jns
out
aad
mov
rcrl
fstps
fsubrp
enter
adc
jl
adc
in
jb
pop
xchg
js
push
or
push
aas
push
lcall
inc
and
add
push
adc
dec
mov
push
enter
enter
psllw
pushf
jnp
scas
loopne
lcall
jbe
or
pop
lods
js
aas
imul
mov
adc
add
test
push
jmp
fyl2x
shll
ds
mov
and
lods
sub
je
mov
loope
or
stos
mov
adc
jno
mov
ds
mov
jno
shlb
mov
jecxz
add
repz
push
add
xor
repz
stc
jecxz
and
mov
jle
popf
inc
xchg
mov
das
pusha
shrl
sbb
in
inc
arpl
fisttpll
mov
mov
out
and
cli
clc
mov
ss
rcll
push
gs
ja
add
xchg
lahf
cwtl
or
rorb
add
push
cs
sub
sub
mov
outsb
xor
ret
cli
mov
jnp
add
xchg
mov
bnd
jbe
and
dec
addr16
fsubp
fildll
divl
jg
mov
add
mov
cwtl
jne
jnp
repnz
add
xchg
aam
sub
mov
xchg
adc
loop
rolb
das
mov
push
mov
fadd
lds
loope
frstor
testl
cli
jo
gs
and
aam
mov
inc
mov
cs
and
cmp
add
lcall
mov
sarb
in
sub
pop
sti
jno
push
push
xchg
cmp
cwtl
jnp
stos
or
pop
sahf
push
cli
or
popa
mov
xchg
sub
in
sbb
add
sub
dec
fdivrl
push
cwtl
xchg
imul
les
pop
bound
sub
cmp
cs
mov
mov
popa
adc
lods
dec
scas
sti
dec
fmull
stc
mov
mov
xor
push
loope
mov
notb
inc
nop
xchg
add
adc
loopne
sub
in
or
icebp
dec
lret
lds
sub
or
ja
sti
mov
sbb
pop
add
dec
inc
jno
loop
mov
push
lock
push
adc
cwtl
adc
push
lock
and
xor
jae
xchg
mov
sbb
and
shrb
andl
shl
lock
orb
dec
pop
xchg
hlt
push
sub
and
sahf
out
shlb
mov
mov
stc
daa
scas
bound
push
shll
insl
lods
cld
inc
sbb
inc
xchg
int
in
repnz
dec
call
adc
push
add
mov
pop
jae
xchg
out
test
lods
and
inc
sbb
jge
mov
dec
dec
test
lret
cmpsb
mov
sub
inc
neg
jmp
cs
lea
xchg
pop
cmp
lods
pop
fwait
in
ss
cmp
cmp
push
stos
sbb
xchg
jmp
pop
sub
xchg
jb
cmp
iret
push
ljmp
sub
push
xchg
pop
mov
xor
fildl
and
xchg
ret
fldt
or
mov
out
jae
cmc
mov
jmp
imul
call
fldl
lcall
int
insb
sbb
push
jmp
orb
cwtl
mov
adc
push
jo
insb
inc
outsl
sub
xor
cli
sbb
mov
mov
xor
imul
dec
fucom
jp
sbb
xor
mov
inc
pop
fcoms
xor
aaa
xchg
ja
inc
test
mov
jb
repz
mov
mov
push
dec
cs
and
fimull
ret
adc
mov
bound
mov
push
mov
aaa
out
cmc
push
out
in
out
inc
shll
jo
lods
popf
leave
arpl
mov
sub
add
clc
hlt
shrb
cmp
fimuls
stos
fmuls
dec
adc
sub
pusha
push
jp
jmp
enter
movsb
loopne
repz
and
add
or
fsubrl
shlb
xchg
inc
xor
aam
jmp
push
enter
sub
push
stc
sahf
jo
lock
xchg
inc
pcmpgtd
rcll
jg
push
lods
xchg
mov
jle
cmp
xorl
lret
cld
test
push
dec
subl
cld
adc
jb
jl
sbb
xchg
ljmp
xchg
in
das
fnstenv
or
insl
jp
sarl
adc
pop
out
and
xchg
fadds
mull
cmovl
mov
push
add
aas
xchg
push
sub
pop
int
cmpsl
adc
mov
push
cmpb
mov
cmpb
jp
push
fmuls
pop
imul
arpl
stc
bound
jo
dec
aaa
test
lret
sbb
jl
or
jne
mov
and
xor
xchg
popl
dec
sti
xchg
sbb
lock
test
lea
ficoms
xor
mov
loop
cmp
sbb
add
add
movsl
repnz
imul
pop
xchg
adc
mov
inc
jbe
xchg
or
push
fistpll
adc
and
push
ret
pop
outsb
push
adc
sub
loopne
jnp
xor
je
cmp
sub
cltd
pop
mov
sti
aad
mov
push
cli
jp
out
pop
lret
mov
push
adc
cmp
and
mov
fwait
and
jnp
push
inc
ljmp
mov
inc
jnp
fldcw
or
stos
dec
popf
or
mov
out
cmpsb
test
sbb
mov
ret
gs
setnp
sahf
lret
fmuls
and
not
sub
pop
into
add
bound
aaa
outsb
loop
mov
xor
mov
out
fistpl
xlat
sub
xor
insl
mov
popa
jnp
mov
mulb
jns
aaa
add
insb
sbb
mov
cmp
sub
mov
xchg
shr
iret
pop
mov
pop
in
dec
data16
pop
pop
dec
xor
daa
xor
dec
aad
ret
aam
mov
mov
xchg
mov
add
add
jl
xchg
push
nop
push
push
aam
psrad
push
mov
or
ja
push
mov
int3
xchg
repnz
ljmp
xor
pop
pop
aaa
mov
inc
add
loop
notb
jae
aam
add
mov
sbb
pop
insb
xor
daa
push
or
mov
lods
add
sub
adc
xchg
push
pop
mov
pop
in
dec
mov
mov
jecxz
out
jbe
loope
and
std
sub
mov
sbb
xbegin
and
adc
push
scas
xor
or
xor
in
lods
lea
outsb
cmovs
dec
int3
pusha
fcmovnu
dec
push
shr
xchg
xchg
dec
aaa
jo
and
fs
inc
mov
stos
mov
int3
add
mov
mov
and
int
push
fbld
jecxz
aaa
stc
les
bnd
fcmovne
lahf
dec
mov
mov
mov
aam
cmpsb
inc
stc
frstor
lret
stos
les
add
mov
cld
addl
jle
lcall
scas
cwtl
cmp
or
jmp
dec
sbb
adc
out
fildll
cmpsl
jne
imul
jns
sbb
mov
xor
mov
scas
int3
jns
inc
push
in
pushf
sub
push
imul
jno
jl
cmp
movsl
inc
xchg
enter
leave
and
mov
sbb
hlt
sub
out
mov
jb
xchg
dec
addr16
push
push
sbbb
fnstenv
shrb
pusha
fisubrs
xchg
pusha
out
cmp
jnp
scas
push
inc
push
and
icebp
and
lds
fcoml
call
sub
sbb
jmp
lahf
add
mov
incl
arpl
jb
pop
in
inc
push
pop
out
mov
loopne
adc
or
jb
cmp
daa
fimull
ud0
scas
inc
cmp
in
inc
mulb
sbb
cmpsl
lret
cmpsl
cs
imul
mov
dec
xchg
xchg
data16
sbb
aas
xor
andnps
aas
push
sbb
jge
clc
jge
dec
lahf
sbb
shl
lods
pop
mov
popf
inc
scas
and
push
ja
jnp
aaa
ss
mov
xor
out
cmc
lods
in
pop
dec
icebp
push
xchg
mov
mov
push
push
jle
sub
xor
nop
dec
push
pop
loopne
xor
into
ret
mov
mov
scas
sbb
fidivs
sbbl
mov
xor
inc
and
xchg
sub
jnp
fwait
mov
push
adc
jbe
xchg
mov
jl
cmp
fiadds
jmp
jnp
bound
test
sub
and
int3
cli
cmp
leave
imull
and
clc
push
jge
sub
cmpsb
mov
mov
xchg
dec
or
mov
nop
jne
add
push
aad
xchg
faddl
movsl
mov
fcoml
or
dec
xor
fistpll
or
cli
xchg
int3
jns
outsl
sub
or
shr
push
xchg
out
stos
popa
aad
xor
popl
mov
mov
std
testb
daa
rcl
adc
stc
out
clc
mov
adc
hlt
icebp
xchg
sbb
and
or
in
dec
fidivl
cmpsl
repnz
call
mov
mov
aaa
add
xor
xor
sbb
add
mov
mov
test
mov
push
add
jle
movsl
out
icebp
mov
cwtl
roll
mov
sti
push
inc
sub
cmp
xchg
int
mov
cmpsb
jbe
movsb
mov
test
out
and
add
push
add
adc
icebp
arpl
jg
aaa
es
fwait
out
or
inc
aaa
negb
clc
ljmp
addr16
xchg
dec
icebp
xor
lods
add
inc
sub
jecxz
push
pusha
cmp
mov
sbb
pop
ret
mov
mov
xlat
jp
loop
sar
jecxz
addr16
jbe
fimuls
xor
sub
test
inc
and
insl
test
sub
push
pop
aam
sbb
rorl
in
mov
cltd
fidivl
in
jno
int
xorb
push
inc
pop
fcmovbe
cmp
or
inc
mov
sahf
push
loopne
jge
add
push
inc
sbb
lcall
pushf
aam
mov
int3
push
insb
cmp
sbb
adc
mov
adc
adc
jae
inc
sub
adc
std
dec
ds
add
mov
test
fists
or
pop
in
fistpl
add
cs
or
jl
stos
rcll
stos
xchg
mov
insb
cwtl
cmpsl
sbb
sbb
jns
inc
sbb
xor
dec
jecxz
outsb
aam
xorb
dec
divl
mov
sti
cmp
jne
sbb
stc
xchg
out
xor
sahf
ret
mov
popa
test
ret
jp
nop
xchg
imul
xor
rorb
bound
fwait
dec
add
jb
les
ds
mov
pop
fmuls
sub
mov
dec
push
stos
jnp
nop
enter
add
push
fwait
mov
test
ret
iret
stc
lret
pop
sub
mov
loope
js
add
ret
fcmovnb
jp
out
out
out
pop
ss
fistpll
adc
sbb
xchg
cmp
push
cmpsb
sar
push
int3
xchg
mov
add
inc
push
arpl
push
or
jle
imulb
mov
cmp
or
or
scas
push
cmpsl
push
les
fbld
push
xchg
int
or
in
push
adc
mov
inc
ss
xchg
shl
orl
test
rcrl
push
mov
cld
dec
test
adc
and
pop
jp
pusha
cmp
sub
xor
inc
mov
rcr
and
dec
iret
pop
jne
addr16
mov
jge
cli
enter
add
loope
pop
mov
jo
dec
or
add
push
jns
ficoms
adc
scas
mov
dec
cmp
xor
cmpb
pop
iret
arpl
repnz
ja
ljmp
mov
filds
mov
outsl
inc
repz
test
cmp
xchg
pop
imul
call
lods
ljmp
repz
rorb
cli
sub
xor
inc
add
push
and
adc
lea
push
outsl
dec
in
mov
mov
push
xor
mov
in
sub
mov
cmp
add
dec
mov
push
fwait
int
repz
push
clc
push
insb
int3
addr16
jo
or
cltd
dec
sub
pop
cmp
xchg
add
lock
cmc
mov
divb
cmc
mov
stc
pop
in
push
stos
push
cld
push
xchg
push
mov
inc
mov
nop
shlb
aas
cs
xlat
xor
sbb
and
mov
out
ret
imul
add
pop
pmulhw
int3
inc
xchg
add
xor
arpl
negl
into
imul
sahf
pop
jnp
fdivr
sbb
fcomi
insl
push
mov
call
ret
dec
shrb
pushf
leave
stc
fimull
add
das
test
es
cmp
mov
dec
fwait
cmp
add
sub
add
iret
fyl2xp1
mov
out
push
cmpsb
add
movsb
xor
cltd
mov
loopne
xorb
icebp
xchg
fldenv
mov
mov
inc
mov
cmp
xchg
flds
jo
and
jge
jle
ror
movsb
xchg
lods
scas
dec
inc
bound
dec
stc
rol
dec
mov
nop
mov
insb
dec
or
cmpsb
clc
mov
sbb
add
insb
jmp
pop
push
cltd
data16
mov
pop
inc
out
or
adc
jae
sbb
icebp
sahf
scas
mov
push
data16
add
aad
adc
sbb
mov
cwtl
lret
inc
mov
or
dec
fcoml
icebp
mov
aad
xchg
jb
insb
fdivl
and
scas
leave
rclb
out
inc
scas
icebp
pop
scas
pop
stos
adc
cwtl
mov
addl
popf
push
out
fdivrl
jb
ds
call
ja
cmp
ds
xabort
iret
dec
stc
sbb
lds
scas
imul
rolb
popf
cmp
pop
int
repnz
push
cmc
inc
out
out
jae
call
out
je
mov
add
aad
fwait
enter
cmp
xor
popf
mov
aaa
pusha
mov
sahf
xchg
incl
stos
cmc
cmp
jnp
dec
stos
out
mov
das
mov
mov
daa
dec
jbe
mov
aas
je
jb
mov
jne
dec
pop
or
addr16
icebp
inc
sahf
add
cmp
sahf
mov
xchg
fdiv
fwait
push
inc
das
pop
addl
and
xor
lods
adc
inc
mov
mov
lock
push
iret
lret
sub
adc
xchg
notb
cmp
lret
adc
shlb
xchg
dec
movb
fildll
aad
or
jg
mov
aad
adc
lret
cmp
outsl
cld
cs
das
aas
xor
cltd
push
ja
adc
lods
int3
push
sub
cmpsb
jae
inc
dec
int3
mov
xor
mov
jge
push
jmp
sub
mulb
xlat
and
fdivrp
sub
add
ljmp
inc
mov
gs
pop
ljmp
jo
out
in
ficoms
adcl
sub
add
ret
sub
and
push
xor
jo
loopne
test
cmp
xor
xchg
and
in
lea
rorb
testl
mov
pop
dec
leave
jl
fldt
jecxz
pop
mov
aas
lret
jne
push
sahf
add
loope
adc
jg
les
fisttps
rcrb
add
idivb
in
mov
mov
pop
xchg
ret
mov
push
cs
mov
push
stos
fsubrs
mov
pop
leave
fadds
mov
jae
std
jae
xchg
insl
adc
sub
mov
mov
outsl
inc
pop
idivb
sbb
mov
sbb
imul
loopne
xor
repnz
cmp
faddl
test
dec
pop
inc
sub
movb
bound
sub
cmp
mov
fsub
or
cmp
pop
icebp
imul
ja
pop
fnstcw
pusha
xchg
and
hlt
push
aad
xchg
add
pop
inc
jge
lods
lods
pop
cmp
ja
fnstenv
mov
push
cltd
add
cmpsl
popa
jo
out
or
test
aad
and
cmpsl
cmp
mov
lea
adc
push
sub
dec
cmp
mov
mov
cli
pop
ret
scas
push
data16
or
mov
gs
lds
sub
xchg
test
stos
xor
rorl
std
fidivrs
std
inc
sbb
cmp
mov
imul
dec
sarl
jns
or
lahf
iret
mov
xchg
push
ret
add
in
or
cmp
jns
fistl
into
test
ss
mov
xor
mov
lahf
pop
xchg
and
cmp
cmp
mov
push
cmpsl
inc
imul
or
sahf
push
std
inc
sarb
cmp
mov
xchg
pop
repz
or
jp
icebp
out
js
aad
fdiv
insb
mov
inc
cmpsl
fs
lds
pop
jmp
shll
rorb
negl
shl
aas
push
add
dec
inc
xchg
rolb
push
jno
pop
push
lahf
jae
or
outsb
cmpsb
mov
jl
in
dec
mov
sbb
dec
sub
pop
jne
notb
pop
lods
out
xchg
push
into
lcall
lods
incb
in
je
fwait
shlb
jmp
mov
fbld
inc
cmp
mov
es
mov
shrl
add
pop
mov
or
shrl
sub
mov
outsl
loop
jns
jmp
sub
addl
push
mov
jb
fcoms
stos
or
or
fmul
jge
jmp
dec
cwtl
loope
and
jge
pushf
sbb
push
mov
add
xor
mov
clc
lahf
negb
fisttpll
scas
arpl
pop
xor
icebp
adc
icebp
adc
fs
dec
push
sub
push
pop
pop
pop
sub
or
xor
and
lret
dec
push
aad
cmp
ljmp
sub
cmpb
dec
mov
cs
mov
lret
mov
push
outsb
repnz
inc
popf
mov
mov
enter
out
mov
inc
mov
pop
addr16
mov
inc
mov
mov
aaa
fmuls
jge
dec
fs
insb
lcall
push
test
lret
clc
imul
dec
push
jp
aad
add
mov
scas
mov
xchg
sarb
cmp
in
fdivs
xchg
imull
and
push
scas
push
jb
inc
in
sti
in
jbe
data16
loopne
adc
mov
or
jle
push
sahf
cmp
push
xchg
test
ja
lds
jl
outsl
outsl
icebp
lcall
inc
or
jb
daa
repnz
and
mov
adc
testl
mov
dec
out
add
inc
test
movsl
xchg
mov
jne
xchg
pop
xchg
or
movl
push
push
popa
adcl
push
mov
dec
push
mov
movsl
pushf
sbb
add
push
fstl
pusha
sbb
cmp
mov
lahf
sbb
cmpsl
int
xor
or
adc
sbb
xchg
shll
daa
rcll
leave
mov
test
cmp
jbe
xchg
inc
push
jp
sbb
into
xchg
inc
sarb
test
mov
jae
xchg
or
xchg
loopne
push
dec
gs
xchg
in
and
lret
nop
push
pop
xor
aas
xchg
sbb
or
add
jl
inc
mov
pop
jge
cmc
lea
scas
and
ljmp
mov
fidivs
js
sbb
push
mov
call
insl
outsl
fists
push
jbe
or
packssdw
inc
inc
ljmp
cmpsb
xor
dec
leave
scas
pop
fisubrl
or
pop
pop
xor
mov
fdiv
aas
xchg
hlt
popa
cmp
xchg
int
lods
sbb
sub
rorl
jg
aaa
sbb
pushf
fstl
push
ret
out
mov
xchg
inc
mov
or
in
sbb
ficomps
es
or
bndldx
push
xor
lcall
mov
lret
aaa
fwait
jp
leave
scas
icebp
ss
xor
aaa
das
inc
sbb
push
mov
fs
mov
mov
cltd
sbb
or
clc
pop
sbb
lret
sar
push
popf
mov
sbb
dec
push
cmc
jle
hlt
jbe
mov
imul
adc
mov
in
cli
lahf
cmp
pop
jge
outsl
mov
jle
sbb
cmp
fsts
lock
loope
hlt
sub
test
and
loope
pop
inc
enter
aas
xchg
jb
mov
or
jp
ret
insl
rclb
jmp
fisttpl
ds
mov
aaa
sbb
iret
xchg
movsl
xlat
rol
mov
test
xchg
fst
stos
mov
jae
call
inc
mov
pop
or
test
sbb
and
cmp
mov
inc
lcall
mov
inc
cmp
stos
arpl
fnsave
sub
cltd
cwtl
std
pop
mov
pop
bt
and
push
add
iret
mov
push
jnp
out
addr16
sbb
jb
xchg
sbb
aam
dec
call
notb
jbe
push
neg
lcall
or
xor
sub
enter
ret
cmp
les
push
pop
pop
cmp
aam
mov
add
lock
roll
jno
int
fmulp
dec
push
orl
adc
mov
dec
test
scas
dec
cmp
xor
in
inc
xchg
jmp
dec
int3
push
lcall
jne
or
adc
xchg
popa
cmp
jbe
mov
cltd
lods
sti
daa
adc
dec
cmpsb
adc
adc
int3
jmp
jo
sub
in
cli
cmp
push
jmp
int
push
mov
shll
xor
lods
fsts
arpl
movsl
je
imul
push
pop
mov
test
xor
jae
dec
addr16
ljmp
push
xor
lods
adc
mov
rorb
pop
push
or
ret
mov
adc
jge
push
btr
fsubrs
cmp
inc
sahf
mov
mov
xchg
push
arpl
inc
es
movhps
xchg
les
loop
adc
shlb
in
and
jne
stc
cmp
mov
sbb
mov
xchg
std
cmp
fwait
xchg
test
jne
les
push
xchg
aas
gs
movsb
xor
mov
sub
insb
js
xchg
pop
pop
xor
aad
or
or
loopne
or
cwtl
and
add
cld
jne
nop
mov
or
xchg
out
js
stos
shl
divl
push
fistpll
sub
inc
out
push
aam
mov
inc
fldl
xchg
jno
std
in
cld
add
sub
sbb
aam
cmpsl
flds
add
or
gs
fwait
adc
push
push
cld
outsl
dec
rcrl
or
adc
ret
in
mov
cmpsl
push
push
out
mov
call
jno
leave
dec
out
out
sub
std
out
add
aam
mov
fs
subl
jnp
jbe
and
jg
cmpl
outsl
pop
xchg
ljmp
xor
mov
xor
shl
enter
pop
xchg
sbb
cltd
loopne
cltd
ja
jb
sarb
jbe
sbb
sbb
inc
pop
fprem
aas
fsubs
imul
and
ja
sub
xor
inc
jl
push
pop
mov
incl
pop
push
pop
push
rol
sbb
ret
cltd
out
mov
xor
addl
mov
jo
sbb
adc
jne
inc
sub
jmp
xchg
stc
xor
mov
adc
dec
gs
xchg
sbb
push
xchg
arpl
push
add
lods
mov
dec
mov
cmc
test
sbb
cmp
mov
cmp
shlb
addr16
lock
rcrb
adc
lahf
xchg
pop
decl
aas
loopne
mov
mov
std
call
or
push
mov
xchg
mov
pop
sub
lret
inc
shl
lock
xor
pop
sbb
mov
icebp
enter
outsb
dec
pop
mov
popa
pop
xchg
addb
ss
fbstp
lock
mov
out
sub
cmp
ficoml
mov
or
cmp
adc
int
fnsave
mov
push
sahf
dec
out
xor
sub
xchg
push
jb
popf
jle
dec
cltd
add
int3
sbb
test
push
loop
adc
or
icebp
pop
std
data16
mov
out
cmpsb
mov
stos
scas
test
test
iret
mov
cld
ret
sbb
movsb
xchg
mov
add
jp
lods
inc
and
jg
jge
push
aam
cmp
mov
add
mov
cmp
push
mov
addr16
and
bound
pop
jne
xor
push
mov
xchg
out
sti
in
insb
negb
inc
dec
insb
mov
fcom
jcxz
sti
outsl
test
or
in
sarb
push
clc
mov
add
sub
call
mov
mov
roll
lahf
and
xchg
jge
adc
mov
es
inc
add
pop
sub
arpl
daa
and
call
iret
pop
addr16
inc
jae
push
push
xchg
push
repnz
mov
jo
add
mov
add
in
xlat
add
pop
and
shrl
arpl
jecxz
ficoml
sub
xchg
jge
aad
sub
out
fcmovu
mov
mov
out
mov
mov
loopne
jo
bound
lahf
mov
mov
or
into
and
adc
icebp
in
xor
xlat
cmp
push
les
dec
mov
add
shl
push
nop
cli
xor
jbe
in
inc
lods
mov
adc
sub
addr16
dec
adcl
pusha
push
push
ret
and
outsl
dec
cmp
mov
xchg
fdivl
adc
in
jb
testl
xchg
cli
fwait
xchg
sbb
sub
lahf
pop
pushw
inc
mov
mov
push
movsl
and
fnsave
enter
sbb
imul
xor
lock
mov
in
xor
push
push
or
sub
dec
shrl
stc
sub
mov
and
test
add
push
inc
loop
jmp
dec
jae
or
push
jge
fwait
cmc
pusha
mov
cmp
insl
in
mov
loopne
pop
in
cmpsb
ds
add
stc
shlb
loopne
and
arpl
and
aam
add
pop
mov
sti
xchg
popa
scas
push
dec
add
dec
and
addr16
stc
sahf
shlb
pop
cmp
call
enter
fstpt
xor
and
mov
lahf
in
inc
andl
lods
xchg
xchg
cmp
dec
cmpsb
dec
and
lods
insl
mov
push
dec
jne
jl
sbb
xchg
test
lods
lock
int3
push
lret
sub
int
cltd
fisttps
addb
xlat
mov
daa
pop
cmpsb
shl
mov
bound
pop
dec
scas
out
and
test
rorl
repz
mov
dec
jl
jb
outsl
in
inc
movsb
std
pop
fstpt
inc
dec
sub
inc
sub
lods
jmp
xor
scas
cwtl
dec
sub
daa
ljmp
fcompl
xor
mov
mov
pop
push
arpl
cltd
rorb
lock
fwait
adc
aas
push
jae
jne
test
loope
or
or
push
lret
aam
mov
mov
push
nop
mov
and
clc
cmp
lret
and
mov
inc
xor
ret
pop
or
dec
push
fsubl
movl
cmpsb
xchg
icebp
cmpsl
movsb
pushf
mov
push
dec
loope
push
jbe
das
mov
ja
mov
sti
jae
jl
jb
jge
xchg
inc
xor
mov
sub
roll
mov
mov
lret
movsl
leave
mov
xlat
fildll
lret
cmp
or
out
nop
xor
inc
imul
inc
adc
pop
sbb
or
loope
mov
xchg
lods
imul
das
mov
insl
add
add
fwait
sbb
in
add
sub
sbb
decl
scas
inc
loop
push
jge
and
mov
mov
test
xchg
cmp
leave
xor
out
sahf
repz
cwtl
test
and
dec
out
insb
pop
fnstsw
jecxz
inc
loope
jne
in
shr
cld
insl
mov
lods
lods
nop
dec
pop
scas
fwait
push
ja
out
lcall
or
stos
push
enter
scas
xor
adc
fisubrl
xor
sub
outsl
jbe
mov
push
pop
adc
sbb
out
repz
ror
sub
not
adc
hlt
je
pop
sbb
push
xchg
retw
cmpsb
pop
jno
sub
lods
sub
shl
jmp
icebp
call
cmp
test
lcall
test
sbb
xchg
das
aam
outsl
sti
stos
and
cld
out
sub
enter
sbb
jae
stos
loopw
lahf
mov
lds
negl
negb
dec
sbb
inc
xchg
les
loop
xor
sub
mov
pop
sarl
bound
stc
xchg
push
fwait
jae
push
dec
and
stc
adc
pop
jge
push
and
xor
mov
rcrl
fstpl
lret
pop
adc
scas
out
rcr
dec
cltd
std
pop
jae,pt
loopne
and
shlb
jno
lret
inc
xlat
dec
lahf
xchg
xlat
pop
push
adc
inc
lret
imul
xchg
jmp
xor
out
fwait
mov
dec
xor
dec
xchg
mov
dec
div
dec
push
mov
sarb
adc
int3
in
stc
jo
mov
repnz
loopne
insb
incb
sub
adc
jae
test
fdivrs
push
xchg
test
jbe
cmp
outsl
in
inc
dec
stc
jnp
sbb
lods
jle
lcall
shll
aaa
popa
into
orb
mov
enter
add
pop
lcall
jno
sub
call
pop
adc
or
fcompl
xchg
rol
adc
int
cli
mov
mov
cmp
sub
data16
inc
or
xor
xchg
adc
adc
cmp
mov
das
aam
mov
imul
mov
daa
scas
dec
cmp
es
fld
test
mov
int3
add
jg
outsl
inc
inc
cmp
bound
push
mov
stc
jns
xchg
imul
add
inc
in
mov
mov
cmpsl
and
out
fadd
jbe
cmp
sar
andl
bound
imul
lcall
idivb
hlt
dec
xor
mov
pop
adc
inc
pop
adc
fistpl
repz
sbb
xor
shlb
mov
es
int
push
addl
leave
ds
inc
dec
xchg
ret
int
test
dec
jmp
je
repz
pop
mov
mov
dec
insb
divb
inc
pop
inc
and
and
sti
fmulp
lods
xor
aaa
dec
popa
or
jmp
insb
mov
cmp
outsl
jg
in
xlat
test
icebp
stc
jg
add
iret
push
inc
lahf
xor
repnz
xlat
push
inc
pop
sbb
jmp
sub
dec
ficomps
xchg
fsubl
xchg
movsl
out
scas
cmc
or
pop
dec
cmp
mov
mov
test
lea
into
fidivrl
in
push
icebp
iret
repnz
shll
sub
jb
and
mov
cmp
mov
mov
test
add
call
daa
sub
sub
dec
dec
xorl
sbb
test
out
push
dec
add
shll
xchg
mov
xchg
xor
adc
xor
les
xchg
pop
inc
ss
lods
stc
lret
lcall
ret
adc
icebp
jnp
jnp
lods
push
arpl
test
mov
pop
ss
test
test
cli
int
mov
mov
rorl
pushf
cmp
pop
ror
fcomps
inc
or
cmp
out
into
mov
hlt
mov
fdivrs
jns
push
mov
test
movsl
mov
es
cmc
ds
sub
dec
int
jo
stc
dec
add
xchg
add
addr16
sub
nop
shrb
repnz
sub
ret
leave
clc
mov
xor
ret
fbstp
fwait
lret
push
and
pop
ds
stos
pop
add
popf
push
aam
decb
or
jb
pop
scas
loopne
in
fiaddl
test
mov
pop
cmp
inc
aas
daa
outsl
mov
aam
mov
add
ss
push
xchg
push
fst
inc
add
int3
lret
fwait
cltd
vfrczpd
mov
shll
dec
cmpb
pop
bound
push
xchg
or
hlt
roll
xchg
jmp
inc
enter
negl
cmp
outsl
fadd
push
loop
mov
inc
mov
cmovge
mov
popa
jmp
add
adc
aad
and
sub
adc
inc
xor
pop
ljmp
stos
or
rcr
mov
xchg
mov
subb
scas
les
mov
and
test
into
xchg
add
jno
mov
sbb
out
mov
in
mov
scas
imul
pop
inc
stc
or
lret
out
or
loopne
out
mov
mov
mov
sub
out
es
sub
pop
push
iret
rcrl
mov
out
dec
pop
pop
dec
jbe
jge
in
sub
inc
push
push
xchg
imul
into
sub
mov
iret
out
sub
das
out
push
cmp
push
in
sahf
stos
add
dec
movsb
xchg
and
push
mov
adc
and
cwtl
inc
ret
std
jmp
adc
nop
cmpsb
insb
or
decl
imul
dec
mov
mov
push
leave
imul
por
lods
mov
pop
xchg
xor
cmp
mov
xchg
inc
arpl
adc
ljmp
fwait
and
mov
xor
loopne
xor
jmp
addr16
adc
dec
repz
loope
mov
aaa
andb
inc
mov
ret
das
iret
in
xor
es
out
cmp
sbb
aas
rclb
js
sub
xchg
lahf
mov
jae
xorb
sub
rcll
mov
es
and
addl
ret
mov
repz
mov
addr16
sub
push
and
imul
js
push
cmc
lret
dec
xor
enter
pop
nop
outsb
outsb
leave
je,pn
dec
loop
add
lods
out
mov
lods
out
insb
sti
push
ja
jno
add
push
cld
jle
fsubs
add
rclb
xor
cmp
mov
and
xchg
stos
jge
repnz
subb
cli
pusha
cltd
mov
dec
and
fstpl
cli
fdivp
sub
mov
hlt
cltd
cmp
and
cmpsb
adc
push
add
inc
xor
mov
imul
jmp
ljmp
push
push
lock
and
test
das
inc
jl,pt
pop
lcall
and
data16
sub
add
jge
xchg
push
clc
jae
dec
int3
and
loopne
xchg
push
addl
jbe
xor
jb
push
xchg
ja
cli
mov
shlb
fists
out
out
outsl
mov
mov
xchg
scas
inc
add
fsubs
or
frstpm(287
dec
mov
and
je
cmpsb
jns
sbb
add
fisttpll
mov
lods
pop
icebp
push
xor
mov
cmp
mov
fdivrl
enter
es
test
mov
dec
cmpl
xor
mov
and
addr16
imul
movsl
cmp
dec
inc
ret
xor
push
lods
adc
data16
ja
loop
ljmp
sbb
movsb
mov
test
gs
mov
sbb
push
sbb
lea
pop
pop
jae
fs
aas
push
inc
sbbl
cltd
sub
and
push
fcomps
adc
pop
inc
or
lock
mov
pusha
lret
jl
imul
enter
outsl
popa
mov
fdivrl
aad
dec
aad
outsb
loopne
loop
psrlq
jbe
cmp
push
sbb
in
cmpsl
outsl
lret
arpl
push
div
jne
lds
or
xchg
insl
js
adc
push
inc
inc
pop
scas
cmp
imul
adc
pop
loopne
xor
test
fwait
sbb
mov
mov
jmp
fstpt
add
adc
sbb
xor
push
mov
sbb
shr
dec
rcrb
loope
fcmovnb
and
jno
push
notl
push
stc
popa
mov
push
movsb
jo
pusha
xchg
fadds
sbb
out
adc
mov
xlat
lock
or
xor
jb
and
pop
adc
jle
lds
push
aad
icebp
std
xchg
jae
adc
aad
adc
jno
fldl
sub
mov
mov
test
les
pop
xchg
xor
push
push
mov
lea
push
push
xchg
gs
leave
into
mov
stos
cmp
push
pushf
push
insb
pop
mov
js
and
cmp
push
lds
sahf
shr
loop
adc
in
or
and
out
xor
push
and
mov
sbb
out
imul
fcmovne
mov
outsl
xor
inc
pop
jp
adc
movl
sbb
fstpl
push
mov
aam
nop
sbb
in
shrb
movsl
sbb
call
dec
mov
xchg
es
neg
fimuls
fldenv
xchg
aam
pop
fdiv
cmp
push
out
lods
push
mov
jnp
pop
inc
and
test
out
lds
addr16
fcomip
add
repnz
jecxz
jl
loop
jnp
push
mov
mov
or
mov
test
scas
pop
mov
push
mov
lret
push
add
ret
sbb
add
push
adc
push
sub
xchg
push
into
aam
mov
fwait
and
xchg
sbb
inc
and
adc
popa
aad
dec
ss
push
subb
mov
mov
xchg
loope
fwait
ret
xlat
or
mov
jno
add
pop
and
mov
stos
je
inc
push
inc
icebp
push
rcrl
stos
subl
lret
movsl
pop
adc
inc
mov
fwait
rclb
cmp
cmp
fldt
sub
dec
dec
loopne
mov
lds
repz
jp
xor
mov
shrl
dec
fistps
jle
movsb
hlt
repz
stc
fsubrs
mov
sbb
js
xchg
mov
dec
ret
shll
push
test
xor
inc
loopne
int3
jp
xor
cmp
daa
mov
xchg
jno
lock
ret
icebp
jl
mov
xchg
sub
icebp
ficomps
sbb
enter
fidivl
xor
push
mov
daa
pop
enter
mov
pop
lret
or
xchg
mov
lret
jecxz
stos
daa
test
push
in
and
stos
out
push
sub
mov
hlt
push
in
rcrb
fsubr
je
mov
and
push
jbe
jl
or
cmp
aad
or
fdivl
data16
xor
mov
je
mov
leave
dec
xchg
add
pop
cmpb
sub
loopne
cli
cld
jbe
and
aas
xchg
and
inc
lods
and
mov
xchg
cltd
hlt
fs
jmp
cli
mov
sbb
ljmp
sub
sti
cltd
les
int3
cltd
out
or
pop
dec
cmp
lock
imul
push
mov
jecxz
repnz
cmp
sub
mov
rol
sti
push
int
add
mov
mov
jo
aas
sbb
insb
mov
jb
pop
or
in
push
iret
xchg
jns
in
xchg
aad
aas
loopne
rcrb
insl
xchg
ds
int
xor
sbb
es
add
sub
jmp
nop
adc
dec
repz
ret
insl
and
rcrl
mov
mov
in
sbb
mov
sahf
sbb
add
adc
sbb
push
shl
sbb
jno
mov
xorl
push
xchg
sbb
loopne
dec
sbb
lahf
stc
add
inc
sbb
jle
fiadds
or
xor
repz
fwait
inc
mov
insb
hlt
inc
das
repnz
pusha
fcomps
jns
daa
dec
mov
mov
call
xor
mov
jo
out
inc
ss
dec
mov
mov
outsl
daa
lods
fcomi
out
jbe
pop
mov
clc
dec
movsl
add
adc
mov
cwtl
aas
mov
ljmp
in
sbb
cmp
sahf
jmp
push
ret
lods
mov
test
std
or
aad
inc
js
or
scas
sbb
pop
sbb
stos
inc
fildl
mov
repnz
push
and
cltd
jae
mov
stos
inc
mov
xchg
xchg
mov
aaa
jmp
cmp
fisttpl
and
pop
push
fsubrs
in
push
imul
test
mov
mov
cmp
inc
je
sub
mov
inc
sub
mov
pushf
push
xor
push
lods
mov
mov
fptan
fisttpll
cmp
pop
xchg
test
adcb
cltd
lea
lahf
rorl
xlat
lock
lock
cs
inc
aad
jge
cmpsb
and
push
repz
push
xorb
cmpsb
mov
or
sar
roll
in
les
inc
add
pop
mov
or
in
insl
pusha
rcr
pop
outsl
aad
aas
imul
hlt
jmp
adc
jbe
mov
and
push
adc
movsb
jae
or
push
lea
or
push
aam
fnstcw
cs
xor
stos
cmp
adc
lods
push
pop
inc
in
lds
add
push
xor
fists
out
sti
sbb
lret
jbe
mov
xchg
adcb
push
shl
adc
inc
out
fisubs
popa
not
repz
mov
in
xchg
push
outsl
add
sbb
xor
stos
fs
vpsubd
xlat
or
rcrl
rcrb
xchg
into
jecxz
sbb
pop
ret
insl
aam
aas
lret
sbb
mov
dec
pop
pop
mov
and
sbb
pusha
xchg
int3
jecxz
daa
bound
scas
xchg
xchg
push
xchg
add
stc
xor
mov
pop
lahf
aam
es
push
dec
lret
mov
mov
adc
add
xchg
xor
fisttpll
cmp
add
cmpsl
xchg
sti
minps
jmp
xor
mov
pop
leave
xor
mov
sti
and
pop
push
pop
and
mov
cmp
arpl
jno
rorl
lds
addl
mov
jbe
sbb
xchg
xchg
or
orb
or
shlb
lret
sbb
adc
dec
push
jnp
mov
loopne
mov
and
add
or
rdpmc
repz
cmc
or
mov
out
sahf
jmp
push
mov
and
icebp
lahf
cmp
fwait
push
push
sbb
cmp
es
sub
adc
in
es
pusha
fbstp
inc
mov
out
out
lcall
ss
pop
push
add
pop
insb
and
outsb
out
mov
add
adc
pop
test
pop
pusha
sarb
ds
adc
dec
jmp
push
pushf
ja
or
enter
aad
xchg
mov
or
sub
xchg
push
add
or
mov
push
pop
cli
mov
data16
inc
jo
hlt
sbb
cmp
adc
push
lahf
int
cmpxchg
in
jo
jmp
inc
adc
in
pop
push
orl
in
jmp
or
imul
pushf
mov
add
stc
xchg
popa
in
pop
adc
mov
inc
jecxz
dec
sub
sbb
shl
lcall
or
and
xchg
das
fistl
sbb
je
out
dec
ret
dec
sarl
xchg
stos
mov
sub
ljmp
mov
nop
inc
lods
lods
dec
pop
mov
int
addr16
mov
pop
ds
sbb
shl
ja
dec
fisttpl
pop
incb
stos
inc
push
dec
nop
xchg
pop
js
scas
mov
in
dec
mov
dec
sbb
push
sub
test
jecxz
or
gs
adc
sub
out
sbb
nop
lods
ret
push
fbld
mov
cmp
mov
inc
xor
popa
xchg
lret
adc
dec
fwait
andl
dec
out
shlb
cwtl
pop
cltd
ret
incb
xlat
arpl
arpl
push
add
inc
pop
int3
ja
mov
mov
sahf
stos
xchg
iret
push
nop
pop
dec
adc
sti
repnz
mov
sti
in
cmpsb
out
push
int3
into
out
cld
adc
shl
mov
pop
imul
cli
sub
adc
xchg
push
push
pop
sahf
enter
adc
outsb
fucomi
je
insl
xor
xchg
test
and
mov
or
sub
dec
lods
jnp
cmp
test
ret
fsub
cld
sbb
lret
mov
lret
stos
jp
xchg
int
lret
mov
or
icebp
ror
orl
ja
test
je
daa
aaa
imul
pop
mov
xorl
out
pop
into
and
pop
add
addb
xchg
and
andb
nop
mov
inc
cmp
sub
inc
scas
add
int
sub
aas
fnstenv
push
xor
push
or
clc
push
lods
push
xor
shlb
rcrb
jne
mov
adc
cld
pop
push
adc
dec
push
push
dec
shlb
outsb
sbb
rorl
je
add
add
clc
push
mov
in
mov
mov
mov
inc
adc
out
bound
push
in
mov
bound
sbb
call
jmp
jno,pt
in
int3
loope
or
pushf
cmc
pop
push
inc
ror
push
aad
pop
jl
lret
push
and
insb
push
jns,pt
enter
test
adc
jmp
cmc
xchg
jno
jns
xchg
pop
pop
push
push
push
shll
lret
jl
insl
adcl
push
mov
insl
cmc
sbbl
jbe
push
std
cli
int
and
lret
sahf
hlt
mov
js
push
mov
dec
inc
test
jo
mov
dec
pop
fcoml
push
mov
adc
inc
cmp
xchg
and
add
inc
mov
in
or
pushf
add
inc
add
mov
enter
pop
movsl
inc
dec
rorl
loop
sub
cld
cmp
cmp
cmp
fscale
fs
mov
call
mov
ret
cmp
mulb
gs
jp
sarb
dec
pop
mov
push
in
outsl
sbb
jnp
enter
aaa
xor
call
bound
mov
pop
and
stos
mov
aaa
sub
mov
jle
xchg
pushf
cmpsb
adc
insb
cmp
mov
aam
xor
sub
xlat
call
test
xchg
xchg
mov
mov
mov
ret
rcrb
ja
aad
movsb
dec
xlat
cmp
push
lea
push
mov
sub
das
xlat
push
aad
dec
loop
add
inc
xor
lcall
lods
and
popa
xchg
sbb
mov
sbb
xor
mov
das
psrlw
addb
pop
insl
sub
push
cmp
mov
insb
mov
cmp
add
fs
out
imul
flds
vmwrite
dec
push
inc
mov
mov
push
mov
repnz
push
mov
or
js
jbe
lods
jp
test
and
int3
fists
cwtl
jmp
icebp
push
sub
push
fs
xchg
sbb
lret
mov
dec
sbb
mov
outsl
adc
test
insb
xor
aad
into
inc
rorb
dec
cld
jo
dec
push
int
movsb
mov
insb
hlt
iret
mov
test
dec
dec
std
js
ss
incl
shrl
addr16
leave
inc
in
push
jb
sbb
inc
or
stc
push
xchg
idivb
mov
cmpsl
cltd
cli
jmp
ret
sbb
rorl
popf
cmp
mov
shl
push
out
out
push
inc
fstpt
and
faddl
std
xorl
popf
xchg
xchg
sarb
ret
jmp
xchg
cmpsl
lods
cmp
fnstsw
cmc
xorb
lahf
cmp
push
adc
and
aad
sbb
xlat
mov
test
mov
pop
xor
movsl
das
in
std
sub
xchg
std
and
jle
fstpt
mov
dec
jmp
jmp
mov
add
out
iret
popf
cli
mov
pop
bound
stos
rorl
imul
aas
or
xchg
lea
sbb
xlat
pop
fldcw
and
int3
out
call
movsb
jge
fwait
xchg
add
loopne
cli
aam
cmp
jnp
loopne
cmpl
insl
cmp
dec
inc
fstl
aaa
inc
fwait
mov
push
jmp
outsl
rcl
aaa
ds
jp
mov
daa
mov
stc
sbb
bound
or
dec
pusha
repz
in
stos
or
popf
fcoms
mov
sbbl
sbb
push
out
pop
mov
push
shlb
fs
sbb
pushf
roll
cmp
pop
into
outsb
xchg
mov
nop
pushf
scas
or
pop
pop
push
sets
ficoml
out
arpl
sbbb
adc
sub
dec
push
ret
push
jae
sti
mov
out
and
push
sbb
mov
jp
and
jle
fs
mov
out
mov
xor
push
jle
xor
xchg
ret
lcall
fs
cmpsl
jmp
clc
xor
in
mov
sbb
ds
dec
adc
xchg
xor
and
cwtl
mov
cltd
pop
fcmovu
ret
orb
out
adc
scas
stc
mov
cltd
xor
inc
mov
mov
add
loope
cmp
xchg
popf
add
mov
jecxz
sbb
jns
pop
mov
loope
test
cwtl
leave
outsb
enter
ss
es
jo
dec
loop
movl
fwait
arpl
call
cmpsb
notl
out
cmp
scas
or
push
sbb
mov
mov
xchg
test
sahf
pop
lock
gs
cs
insl
cwtl
loopne
movl
loop
jmp
inc
in
in
sub
mov
inc
jne
test
xchg
xchg
sub
ds
loope
outsb
sub
mov
lods
outsl
pop
dec
imul
pop
cmp
popa
jno
bound
dec
jp
cmpl
xor
mov
fstpl
mov
xor
lds
test
insl
sahf
aad
cmp
scas
inc
pop
xchg
sub
out
push
cmp
xchg
mov
lods
cmp
andb
or
jp
xchg
or
loop
pop
test
lea
adc
pop
mov
shrb
fs
add
sbb
mov
loope
push
outsb
lret
push
inc
lods
andb
push
jge
mov
mov
sub
or
mov
push
push
or
xchg
or
lock
fidivl
dec
cmp
push
test
and
cmpsb
fistps
xchg
movsl
ds
fldcw
jg
sub
and
pop
add
mov
or
and
fdivs
mov
adc
ss
aad
xchg
push
cmpsb
sbb
mov
gs
xor
aas
mov
jo
mov
data16
pop
call
ja
or
femms
dec
mov
add
sahf
arpl
push
or
ret
xchg
adc
pop
cltd
movsb
jmp
jne
xchg
outsl
lret
daa
xor
loopne
add
mov
xchg
jle
movsl
push
loope
fsubs
ljmp
imul
gs
cmpsb
jmp
loopne
cmp
cltd
ret
stos
dec
jl
jae
scas
inc
cmc
pop
fwait
leave
adc
xchg
inc
stos
mov
movsl
mov
lods
pop
sahf
inc
xchg
ds
pop
lahf
cld
jne
cmpsl
js
push
dec
aad
xor
add
jne
jmp
sub
lahf
das
rcrb
fcmovb
sbb
or
jne
pop
xor
or
fidivrl
add
movsl
dec
jne
shlb
and
je
in
popf
negl
out
and
or
cltd
loope
outsl
sub
mov
and
and
mov
and
xchg
fwait
fs
mov
rcr
cmc
push
sbb
in
into
push
ds
xor
mov
es
and
or
pop
push
cmp
ljmp
aad
cld
jns
cli
stos
fs
xchg
cld
sbb
pop
rcl
ljmpw
cwtl
pop
sbb
add
mov
push
out
in
add
mov
rcrb
jns
cmpsl
stos
xchg
fnstsw
xor
int3
cmc
mov
cltd
xchg
jne
inc
sbb
gs
repz
jae
inc
jge
pop
jg
cmc
cmpsb
push
ljmp
leave
cmp
inc
in
mov
popa
jo
cmp
cmp
mov
inc
mov
push
or
js
repnz
mov
cld
mov
lcall
mov
lock
or
shr
outsb
jg
inc
mov
jle
inc
lea
xor
mov
les
mov
mov
push
push
imul
pop
fs
jg
mov
into
mov
dec
push
sub
test
into
fwait
push
push
pop
gs
inc
pop
inc
sbb
fsubrl
add
jmp
push
push
jnp
outsb
push
rorb
data16
ficoml
or
jl
add
int3
icebp
fsubl
jg
xchg
mov
add
fidivrs
mov
leave
stos
jl
pop
lods
or
xchg
mov
scas
xorb
mov
add
ret
pop
lds
cli
xchg
or
add
pop
mov
fwait
leave
push
inc
ss
jne
enter
dec
jns
out
pop
icebp
popf
ja
ffreep
xchg
and
enter
lret
jnp
add
push
icebp
mov
sbb
in
enter
add
cmp
sbb
xchg
enter
jl
mov
dec
mov
ss
and
out
xor
xchg
and
adc
dec
and
add
jo
mov
insb
bound
arpl
push
into
imul
jne
mov
or
jns
mov
lods
lret
fimuls
mov
adc
loopne
xor
adc
aaa
mov
add
dec
iret
stos
aas
pop
push
xchg
call
adc
icebp
fs
nop
pop
and
lret
nop
pop
cltd
fsubl
leave
and
push
inc
mov
lock
fisttpl
push
enter
std
mov
enter
or
inc
inc
scas
repz
test
mov
or
scas
pop
add
in
adc
xchg
repz
ret
insl
mov
jno
shlb
add
xor
sub
push
sub
cmpsb
repnz
mov
mov
popf
icebp
mov
pusha
jp,pt
cmpsb
sub
adc
or
popa
xchg
mov
loopne
fcmovu
jno
add
and
mov
test
gs
outsl
test
aam
dec
popa
cmp
mov
xchg
pop
jne
loope
dec
xor
jbe
in
outsb
adc
inc
jecxz
push
and
push
leave
mov
iret
into
add
inc
incl
cmp
in
push
test
xor
cmpsb
sub
lods
xor
aam
adc
rclb
sbb
subl
push
fs
arpl
jo
push
cs
cmp
scas
repz
xchg
cli
dec
xchg
cmp
xchg
xchg
add
ret
sbb
mov
cmc
or
mov
cmovae
jb
jns
sub
adcb
inc
adc
in
inc
movsl
notb
xchg
sub
setno
xchg
inc
mov
mov
stos
xor
push
sub
cld
sbb
mov
ja
dec
push
cmpsl
insl
xchg
scas
and
sarl
int3
jne
mov
mov
mov
div
fldenv
mov
inc
stos
add
mov
loope
jae
lcall
or
stc
sub
lret
mov
jne
adcb
xlat
or
mov
lcall
mov
scas
mov
popf
rcrl
jge
cld
and
andl
jg
xor
repz
cld
jns
das
sbb
es
cmpsl
loopne
clc
cmp
push
sbb
loop
in
mov
pusha
xor
mov
sbb
aaa
dec
mov
xchg
loope
mov
pop
fwait
dec
mov
xor
movsb
adc
mov
lock
jg
add
and
test
cmp
pop
xchg
lock
mov
fsts
data16
ja
mov
sub
pusha
mov
sarl
in
pusha
stos
push
nop
dec
cli
adc
push
ror
pop
jns
add
adc
lds
test
push
dec
pop
int3
pop
dec
push
jnp
pop
lret
js
pushf
orb
fidivrs
or
mov
push
test
dec
fs
mov
dec
adc
mov
push
sub
mov
pushf
push
arpl
mov
lret
stos
xchg
xor
push
cltd
jb
adc
jl
pop
jl
adc
je
cmp
push
pusha
xchg
rol
iret
ljmp
mov
out
in
dec
xor
cwtl
xchg
xor
jno
stos
add
push
or
lea
sub
push
and
jle
or
jecxz
das
jb
fistpll
loope
daa
mov
push
aad
leave
add
mov
adc
cwtl
mov
ss
xor
pop
jecxz
in
dec
fmull
mov
xor
imulb
and
pop
mov
leave
in
xor
mov
sbbb
add
pop
in
adc
push
je
loopne
sub
nop
sbb
push
lock
leave
fadd
mov
scas
iret
pop
inc
pop
inc
rorl
jne
sti
das
mov
outsl
push
cmp
push
jb
sbb
imul
xchg
sbb
jno
xor
ret
dec
nop
xor
fiaddl
fldl
jne
adc
xor
sti
pop
arpl
in
pop
jl
aaa
movsb
std
inc
xchg
add
jo
out
inc
push
sub
fwait
dec
pop
scas
jne
clc
sbb
dec
or
jmp
or
pop
insl
jnp
jmp
jo
dec
repz
test
cmp
xor
mov
jl
push
inc
les
adc
xlat
xchg
push
jns
fisubs
mov
out
and
push
add
adc
mov
jl
xchg
out
aad
inc
adc
pop
xor
movsb
arpl
sbb
movsl
clc
add
dec
jmp
xor
test
mov
int
cltd
aaa
fmuls
test
xor
sbb
cmpsb
dec
movsb
xchg
add
out
jmp
dec
inc
repnz
rolb
sarb
sti
movq
jns
pop
pop
sub
or
lahf
lods
lock
and
lcall
fs
push
jno
jg
dec
dec
sbb
pop
mov
mov
insl
popa
or
adc
mov
mov
iret
adc
fdivrl
call
push
sub
add
pop
push
movsb
fwait
iret
in
sbb
mov
mov
adc
jge
add
test
jmp
test
sti
out
xchg
and
push
pop
out
mov
push
outsb
and
mov
mov
pop
mov
cmp
jmp
test
lret
push
mov
xchg
adc
jmp
add
xor
shl
lret
xchg
and
adc
xor
push
adc
in
inc
arpl
jns
ds
mov
cmp
cmp
xchg
in
inc
lret
loop
jnp
mov
into
and
push
mov
mov
xchg
sbb
ja
xor
ret
push
sub
adc
les
das
rcll
popa
fdivrs
pop
fisttpl
adc
shlb
mov
aaa
addr16
add
in
loope
cmp
adc
shl
mov
jne
add
xchg
mov
idivl
mov
mov
ds
dec
inc
push
outsb
jbe
adc
mov
jmp
out
sub
lea
and
push
and
xchg
stc
aam
or
cmc
stos
pop
xchg
inc
push
jg
push
add
lcall
fucomi
lods
mov
loope
in
subb
subb
dec
dec
mov
movsl
decl
insl
dec
xchg
xor
addl
std
pop
adc
xchg
sub
cmp
jge
out
neg
std
enter
enter
mov
pop
add
push
mov
aas
mov
and
dec
insl
gs
cmp
aam
in
in
mov
mov
mov
call
mov
mov
and
and
dec
mov
pop
ret
jg
dec
sbbl
fildll
call
inc
dec
adcb
test
add
mov
sbb
cmp
in
xchg
xor
sbb
aaa
mov
lock
mov
push
cmp
jb
imul
scas
ds
daa
rcrb
pop
pop
xchg
mov
mov
dec
jno
jg
cmpb
mov
addr16
pop
push
nop
movsb
mov
add
pop
insb
xor
fwait
aas
rorb
push
push
dec
pusha
stos
mov
jecxz
cmp
push
mov
sarb
and
and
rorb
cltd
out
enter
jp
in
sub
mov
sahf
rolb
mov
int3
popf
and
repnz
jnp
pushf
push
dec
repz
mov
les
ljmp
pop
xchg
inc
sub
js
or
jns
push
and
add
mov
addr16
dec
push
jl
jecxz
dec
adc
push
mov
repnz
xchg
iret
sub
adc
scas
add
push
mov
pop
out
stos
pop
loop
mov
scas
out
mov
xor
ret
fidivs
inc
gs
inc
and
dec
aam
lds
negb
or
iret
lret
jecxz
add
jo
and
mov
stos
add
mov
movsb
mov
or
pop
es
mov
clc
sbb
sub
in
test
sbb
adc
pushf
stc
fisubrl
fsts
and
sahf
outsb
fstl
inc
inc
pop
push
mov
lods
inc
fisubs
sub
test
mov
iret
mov
dec
call
fistps
ret
mov
sbb
flds
outsb
xor
mov
movsb
mov
xchg
lds
int3
xor
cmp
test
into
mov
push
or
in
icebp
jo
lds
ja
cld
push
inc
mov
call
mov
jns
cmp
add
or
lcall
cmpsl
xor
inc
incb
stos
loopne
dec
rcl
pop
add
aas
insb
and
sbb
jno
repnz
daa
push
nop
cmp
repz
fs
xor
mov
test
jp
adc
adc
stos
mov
add
outsl
adc
lret
call
cmc
bound
pushf
dec
dec
adc
shl
pop
mov
pop
pop
mov
push
jmp
or
data16
pop
jns
addr16
or
pop
mov
mov
aam
mov
outsl
sar
fnstenv
in
cli
add
imul
inc
inc
or
in
pop
pop
mov
pop
loop
fwait
sub
jmp
out
xchg
or
inc
adc
or
or
push
inc
cmp
je
mov
and
inc
sub
fildl
or
orl
movsl
mov
push
and
js
cmc
dec
dec
aas
iret
pop
push
sahf
inc
sti
pop
imul
push
xor
adc
add
mov
pop
sub
xchg
int
imul
fbstp
mov
inc
lods
or
push
mov
clc
outsl
or
gs
jle
xchg
xlat
scas
movsb
or
insb
arpl
push
jl
andl
push
add
pop
pop
aas
gs
les
mov
js
mov
sub
call
and
test
cmpsl
mov
nop
daa
fwait
outsl
mov
rol
mov
aad
jne
mov
es
addr16
jb
pop
push
cmp
jno
mov
fistps
adc
dec
push
int
cmp
cltd
sbb
or
mov
cmpsb
cmpxchg
jo
fsubl
mov
lock
sti
lcall
aaa
shlb
mov
jbe
es
lock
fwait
icebp
adc
loop
and
cmpsl
lahf
sbb
stos
insl
cmpl
test
repz
dec
xchg
gs
add
jo
fisubrl
call
or
dec
fdiv
pusha
adc
cmp
mov
call
shlb
orb
jnp
shll
clc
sub
std
ljmp
insb
mull
inc
dec
sti
jle
pop
jae
adc
and
test
mov
pop
inc
dec
pop
add
xchg
stos
xchg
mov
adc
jmp
je
lcall
je
pop
xchg
jbe
jne
shrl
mov
lahf
and
call
mov
rol
pop
sub
nop
addr16
xor
in
cwtl
fs
cmp
mov
mov
xchg
jb
das
popf
testl
mov
popa
lea
cltd
test
jp
stos
sub
lds
ss
stos
cld
sti
xor
pop
sti
pop
or
push
and
xchg
leave
int3
xlat
mov
mov
pusha
mov
dec
pop
mov
mov
cld
jle
ret
dec
daa
hlt
mov
movsl
sti
add
sub
in
test
add
inc
or
xchg
jne
stos
mov
cld
mov
dec
and
and
shll
dec
dec
or
insb
xchg
pusha
push
ss
cmp
insb
push
enter
pushf
popa
sbbb
mov
or
xor
pop
or
pop
icebp
dec
rep
fdivrl
stos
es
cmp
and
cmpsl
cmpsb
scas
add
or
dec
fmuls
cmpsl
lods
xchg
adc
mov
mov
scas
fwait
mov
fnsave
inc
cmpsb
add
aaa
ss
pop
loope
pop
inc
mov
sbb
movsl
cmpsl
mov
xchg
inc
scas
fnstcw
lcall
fildl
int3
mov
dec
dec
xchg
test
negl
push
or
jo
mov
mov
test
xchg
daa
repz
sti
call
leave
mov
jmp
xor
aaa
sub
aad
movsl
in
and
aas
add
push
add
ret
and
push
ja
push
popa
jns
and
daa
jbe
fcompl
pop
push
or
js
sbb
adc
adc
andl
and
sbb
aad
aad
mov
pop
mov
mov
jmp
dec
push
cltd
and
add
stos
or
inc
adc
xchg
subl
xchg
dec
stc
sbb
loope
ret
mov
fmull
lcall
mov
lret
aaa
sarl
adc
jns
enter
mulb
and
pop
outsl
push
push
xchg
int3
inc
stc
mov
sbb
cld
vpshaq
dec
pusha
aad
dec
jmp
sbbl
mov
mov
push
sbb
inc
jg
cmp
add
sbb
and
pop
add
xchg
xchg
test
jmp
int3
sub
outsb
idivl
pop
xchg
mov
faddp
ja
mov
push
call
aam
sub
movsb
scas
adc
xchg
and
out
jb
adc
cwtl
out
test
sar
push
push
xor
divl
subl
out
inc
iret
pop
jo
cld
and
mov
out
mov
add
loop
out
mov
outsb
rcrl
sbb
push
gs
pushf
dec
inc
cmp
sbb
nop
andl
ret
je
jp
repz
inc
in
repnz
ret
xchg
sub
rcr
call
idivl
leave
jecxz
pop
push
cmp
xchg
jp
ret
push
pop
inc
rdmsr
jp
inc
add
imul
sbb
sbb
jmp
pop
fscale
hlt
jp
push
mov
cltd
scas
imull
jg
jno
xchg
addr16
ret
loop
in
cmp
pop
lret
scas
push
iret
sub
and
mov
test
pop
into
cmovb
cmc
cmp
mov
mov
mov
fsubrs
clc
xor
mov
sub
add
mov
int
int3
lret
dec
icebp
sarl
pop
mov
adc
out
adc
or
xchg
in
imul
pop
bound
mov
push
stc
cltd
lret
out
in
cmpsl
call
jbe
std
push
xor
in
mov
mov
jo
popf
inc
mov
mov
fwait
stc
jmp
sub
xchg
dec
addr16
cmpsl
cmp
and
cmpsl
sbb
repz
lods
rorl
jno
push
loopne
movsl
int3
call
ljmp
sti
in
sub
cs
add
push
cmp
cmp
and
xorb
xchg
xchg
iret
pop
pop
popf
and
pop
in
rcll
xchg
adc
sbbb
sub
pusha
push
rcl
loope
shll
dec
mov
sbb
jne
and
sbb
fistpl
les
test
push
or
mov
add
or
cld
or
xor
sub
adc
jbe
push
es
cmpsb
sbb
jae
jns
and
movsl
hlt
xor
pop
fwait
ss
lret
pop
mov
lcall
cmp
mov
ja
push
pop
fwait
mov
cs
mov
xor
cmp
std
filds
out
popl
push
push
sub
cmpsl
fbld
dec
push
jne
sahf
cld
mov
lods
xchg
lds
sbb
rclb
sub
push
pop
cmc
adc
pop
mov
cltd
into
cmp
nop
pop
inc
jno
dec
fdivs
jno
mov
mov
sbb
cmp
cld
jle
rcrb
sbb
std
aas
jnp
mov
arpl
jns
or
or
hlt
and
xrelease
leave
je
aas
outsl
sbb
in
fwait
into
rol
and
fisubrl
add
pop
and
sti
jecxz
inc
dec
mov
shlb
lahf
loopne
jns
jmp
cwtl
std
test
jae
push
into
jne
push
jmp
int
dec
arpl
cmp
inc
and
xlat
jae
arpl
cmp
std
mov
popa
add
test
aaa
mov
into
jbe
jl
dec
call
jne
clc
repz
insl
mov
in
cmp
pop
xchg
cmp
shll
cmpsb
mov
pushf
shrl
add
adc
and
lret
fbstp
mov
popf
jns
xchg
and
pushf
or
jno
adc
test
fldl
add
push
sub
jo
or
aam
lahf
mov
mov
rcr
jb
cmc
lods
lahf
ljmp
xor
push
cwtl
cld
mov
mov
add
popf
cmp
es
cld
sub
or
and
xchg
pop
in
sub
rcrb
cltd
cmp
imul
add
cmpsb
add
adc
add
ficoml
xchg
pop
sbb
dec
sahf
cmp
cmp
xchg
adc
bound
inc
pop
cmp
icebp
std
mov
lcall
sti
gs
sbb
push
push
call
push
outsb
scas
push
xchg
xor
add
and
sbb
mov
pop
outsl
lds
xor
mov
add
mov
mov
ss
push
enter
and
push
jge
dec
ja
pop
sti
xor
sbb
notl
insl
lock
push
fnstcw
xchg
pop
xchg
loopne
cwtl
repnz
sbb
adcb
dec
loopne
adc
push
xorb
stos
into
sub
cld
mov
mov
icebp
cli
aad
adc
fwait
jmp
cwtl
push
call
cltd
pop
and
push
test
pop
xchg
std
daa
dec
sbb
movl
push
and
cmp
out
cli
js
fmuls
out
imul
cmp
pop
stc
xchg
sahf
lcall
jle
ljmp
inc
push
popa
lcall
mov
dec
rol
je
mov
addr16
xchg
rcll
mov
aad
outsl
mov
fstp
xchg
or
xchg
adc
add
cli
or
aam
outsb
jl
cs
repz
movsl
fisttpl
pop
test
mov
in
sarb
mov
test
push
loop
xor
jl
xchg
jle
inc
out
movsl
aad
add
add
cs
sub
push
popf
inc
xchg
int
data16
arpl
ret
dec
adc
jnp
imul
ljmp
lretw
xchg
pushf
inc
test
xchg
mov
and
push
push
out
jno
push
push
pop
mov
push
in
ret
js
xor
mov
and
mov
mov
aad
mov
popf
push
xor
bound
test
jecxz
xchg
cmp
clc
add
dec
sub
xchg
lds
push
out
out
xor
movsb
rcrl
or
loopne
sub
sbb
arpl
subb
mov
mov
rclb
sbb
int3
sub
mov
xor
in
jecxz
xchg
inc
les
jo
adc
fcoml
je
pop
test
pop
popf
test
fisubrs
shl
sti
cmp
sub
inc
or
xchg
jge
mov
sbb
repz
sub
and
push
push
push
sti
inc
sahf
pushf
xor
sbb
xchg
int3
pop
pop
mov
test
push
jne
dec
mov
stc
adc
loop
test
adc
mull
out
sub
xchg
mov
jl
add
push
and
xor
ficomps
mov
scas
call
idiv
push
pop
lret
sahf
pop
int3
insl
ja
mov
sub
jp
pop
int
mov
jns
mov
dec
pop
add
outsl
icebp
xor
mov
sbbl
mov
inc
pop
into
and
cli
hlt
dec
lods
dec
inc
call
push
rorb
mov
xor
cmpsl
jge
sub
push
loop
cmp
dec
xchg
inc
push
inc
jae
or
cli
sbb
and
sub
add
xchg
dec
test
inc
pop
js
jne
mov
ja
push
idiv
mov
movsl
cmp
pop
pop
jae
cwtl
ffree
pusha
mov
inc
pop
sarl
orl
sbb
out
std
cs
sbb
sub
mov
xchg
mov
mov
mov
mov
mov
fldcw
lret
jnp
xor
sbb
sarb
js
jecxz
iret
xchg
jl
push
ret
sub
int
das
js
push
jge
sti
mov
test
std
sbb
sub
add
cs
mov
leave
add
adc
and
mov
test
mov
orb
jb
bnd
out
jg
imul
sbb
and
sbb
lock
xchg
jbe
lcall
rcll
xchg
popf
xchg
xchg
mov
cli
xchg
lods
insb
rol
xchg
sbb
rep
mov
push
jae
testb
push
xchg
mov
in
xchg
pop
and
out
fisubrs
mov
mov
pop
addl
mov
push
cmp
aad
int3
or
xor
pusha
or
gs
fidivrl
mov
enter
inc
mov
insl
inc
or
xlat
fbld
ljmp
int
int
push
iret
sub
jns
and
inc
fisubrs
mov
jg
adc
xchg
adc
popf
sub
mov
lahf
stos
call
push
stos
shl
lret
lods
outsl
es
jg
data16
in
sbb
jle
int
jg
movsbw
stos
ljmp
or
and
pop
inc
int3
mov
push
sbbb
in
lea
mov
or
push
jle
or
pop
fdivrs
add
loope
sbb
stos
adc
lods
imul
push
mov
aad
mov
jl
ret
mov
xchg
cld
xor
mov
arpl
test
inc
inc
sbb
push
push
pop
push
adc
add
cmp
int
pop
int
jg
lds
mov
aad
aaa
push
lret
xor
cmp
pop
mov
xor
hlt
stos
xor
shrb
in
sbb
add
lods
or
cmpl
movsb
rorl
mov
pop
sub
jle
out
mov
ret
scas
push
or
dec
add
add
mov
iret
pop
jp
rcl
fwait
dec
notb
cli
rcll
sub
out
xor
lods
or
addb
test
popf
or
inc
jmp
ficoms
or
out
inc
cltd
iret
insl
sbbl
mov
ljmp
sbbl
rorb
aad
inc
xchg
cmp
sbb
sarl
add
xorl
mov
xchg
cmpsl
mov
jae
xchg
decb
lock
dec
int
insb
or
bound
xchg
pop
in
jle
imull
inc
xchg
js
push
pop
adcb
dec
pmaxsw
xchg
aam
loop
pushf
sub
jl
mov
jns
and
sbb
movsb
pusha
jb
aaa
fstpt
lea
mov
pop
jno
jg
push
dec
in
inc
mov
int
out
int
sub
add
fists
cmpsl
jp
repnz
test
mov
xor
rol
push
sub
sub
dec
dec
jnp
adc
lock
rorb
jb
shlb
jecxz
addr16
push
push
sbb
mov
xor
jge
mov
ficoms
dec
pop
mov
js
test
sub
fcom
ficompl
loop
xor
mov
mov
mov
add
push
xorb
xchg
sub
in
mov
mov
pop
lock
cltd
ret
mov
int3
add
jae
outsl
lock
xchg
pop
or
mov
ret
addb
int
loop
lea
popa
iret
dec
mov
fcomps
inc
jae
add
shlb
andl
pop
loopne
xor
xchg
sar
std
push
jmp
test
cli
scas
out
jae
and
push
jecxz
dec
mov
popa
outsb
jge
repz
jo
popf
mov
sub
sbb
xor
pop
nop
daa
int
icebp
dec
seta
stc
mov
push
std
fcompl
mov
push
gs
leave
dec
insl
in
inc
movsl
fsts
sar
jb
cli
jecxz
mov
inc
or
jnp
mov
xchg
pusha
popf
and
fcomip
xor
adc
lods
scas
mov
cmp
add
fisubs
adc
cmp
sbb
mov
mull
or
xchg
sahf
and
jg
lret
mov
mov
mov
cmp
jbe
cwtl
sti
mov
int3
out
popa
add
or
cltd
shr
xchg
ss
addr16
icebp
mov
test
cmp
xchg
inc
xlat
jl
xchg
rcll
xchg
fildl
stos
clc
xchg
push
xchg
xchg
fmuls
insb
adc
jg
push
leave
or
mov
rorb
movsb
call
repnz
push
in
fiadds
xchg
jle
push
pop
mov
mov
sub
jnp
stc
in
cmp
dec
jb
mov
lahf
int3
push
out
mov
jmp
ljmp
repz
outsb
mov
outsb
fisubl
lock
repz
test
sbb
inc
mov
push
jecxz
dec
stos
push
jb
pop
push
rcrb
pop
pop
and
xchg
dec
std
xchg
mov
shrl
mov
cmp
pop
clc
repz
adc
ret
cs
ja
lds
cmp
enter
iret
loop
pop
jbe
mov
and
dec
mov
push
insl
xchg
mov
and
mov
inc
jp
mov
fdivl
lcall
imul
insl
out
icebp
sahf
push
sarl
sub
popa
jns
fwait
cmp
push
js
ljmp
or
mov
mov
mov
aaa
inc
pop
push
inc
push
cmp
test
in
cmp
jo
in
pop
fistpl
jnp
fmuls
and
push
or
fbstp
scas
aas
int3
inc
adc
mov
cs
nop
pushf
mov
push
sbb
movsb
hlt
testb
xchg
cld
dec
jg
dec
dec
pop
mov
cmp
ror
jns
sub
pop
aas
jbe
push
les
xor
imul
rolb
movsb
jnp
mov
dec
add
inc
pop
int3
mov
sbb
movsb
cmp
pop
icebp
jb
out
aaa
xchg
push
xor
scas
repz
jne
xchg
pop
push
add
pop
cld
aad
lock
sub
mov
int
push
popl
out
cmp
push
jo
sub
mov
push
hlt
add
out
inc
sbb
mov
pop
adc
cmp
test
or
hlt
sbb
jae
movlps
inc
fcos
test
icebp
mov
imul
lock
push
and
mov
or
jnp
jmp
xchg
mov
lcall
mov
scas
test
or
mov
push
jecxz
xchg
repnz
shlb
cwtl
cltd
pop
fldt
pop
mov
scas
cmp
pushf
repz
mov
in
ss
mov
arpl
lret
xor
ret
sbb
cmp
jno
and
ss
push
cmp
adc
add
dec
aaa
into
xchg
hlt
ja
or
mov
das
xor
pop
test
das
xchg
pop
jl
push
pushf
mov
cwtl
pop
sub
fisubl
xor
push
leave
or
dec
in
xor
push
mov
jno
mov
pop
ret
shlb
lcall
daa
xchg
stos
add
jmp
add
push
dec
out
mov
push
ret
jg
nop
movsl
push
data16
dec
int
insb
jmp
pushl
add
sub
out
mov
and
adc
rorl
jbe
lret
add
clc
imul
dec
push
xor
jmp
out
sbb
clc
inc
es
jle
js
fsubl
xchg
inc
jbe
fs
cmc
fists
dec
loop
mov
stos
popa
fistpl
mov
xlat
test
in
cmp
xorl
mov
insl
or
jbe
or
jne
mov
insb
add
adc
sbb
jae
adc
hlt
ret
cmp
das
jg
mov
rorl
inc
js
and
pop
push
fnstsw
sub
pushf
pusha
and
and
test
in
test
push
pop
and
sub
mov
or
lock
sbb
aaa
push
subb
daa
call
cltd
mov
stc
sbb
and
dec
add
fsubs
push
repnz
jb
enter
insl
jb
push
jle
mov
sub
enter
and
push
xor
mov
shrl
lods
push
or
jl
ds
inc
clc
push
repz
int
cli
jne
or
mov
rorb
add
andl
cwtl
fnstsw
ret
xor
notb
scas
xchg
sbb
addr16
and
pop
or
sti
mov
lahf
popf
cmc
mov
mov
sub
xor
divl
and
mov
mov
cld
pop
out
xor
rcrb
lret
clc
lret
pop
lcall
movsb
outsb
pusha
inc
int
in
lret
push
cmp
movsl
gs
sbb
imul
mov
out
cmc
cli
xor
mov
jecxz
xchg
jmp
hlt
nop
aaa
roll
mov
add
xchg
add
mov
popa
pop
xor
cmpsl
sbb
mov
icebp
out
push
mov
gs
mov
inc
jns
push
inc
dec
out
mov
aas
sarb
pop
into
stc
es
and
dec
cltd
stc
xchg
adc
sbb
add
aaa
je
push
std
mov
loope
pop
push
xor
imul
fiadds
sbb
std
sub
lret
jmp
orb
xor
je
clc
ficompl
cli
rcrb
xor
inc
pop
mov
push
lea
add
lock
mov
dec
cli
cmp
jl
ja
out
xlat
lcall
gs
test
stos
and
adc
mov
iret
sti
dec
add
lahf
pop
test
sub
dec
inc
dec
scas
push
jb
dec
cmpsl
jbe
fdiv
cltd
scas
adc
arpl
scas
jb
or
in
shlb
and
mov
shll
lret
popa
lahf
out
insb
jg
mov
push
xchg
sub
pop
xor
je
mulb
shlb
stc
rorl
jne
in
cmp
xchg
jecxz
lds
dec
cwtl
or
xor
and
fidivrl
jg
stc
mov
subb
in
popf
mov
repz
mov
jg
stos
mov
xchg
fldcw
sbb
sub
mov
mov
add
adc
mov
inc
lret
test
ljmp
sbb
sbb
stos
push
nop
pop
aas
mov
ja
push
pop
or
dec
inc
xchg
div
pop
dec
mov
aas
repnz
sub
or
pop
push
sub
mov
xlat
stc
test
insb
out
subb
into
cmpsb
lret
xchg
mov
mov
pop
pop
jmp
xchg
jl
mov
movsb
xchg
or
cmp
mov
imul
inc
mov
fadd
and
call
sbb
clc
mov
cmpsb
sub
xchg
into
mov
dec
adc
test
cwtl
xor
les
dec
xlat
ss
cmp
mov
aaa
test
mov
adc
pop
and
in
stc
mov
cmp
pop
sub
fxch
pop
xchg
pop
addr16
loopne
cmp
imul
jecxz
pop
jns
adc
inc
xor
iret
les
mov
xchg
in
rcrb
or
pushl
jmp
mov
ds
pushf
and
std
clc
addl
mov
inc
insb
mov
int
cmpsb
lock
xor
rcrl
or
out
pop
and
xor
mov
int3
jno
out
in
xchg
mov
xorb
scas
push
bound
fnstsw
popl
pop
cmp
cld
mov
xor
xor
adc
mov
lret
jnp
push
out
out
lods
sbb
mov
fiadds
popf
mov
push
outsl
leave
pop
jl
xchg
das
sub
push
popl
test
cmp
xchg
or
leave
mov
rcll
push
ret
xor
aaa
sub
or
das
sub
adc
mov
leave
adc
loopne
sbb
push
sbb
xchg
push
xchg
in
cwtl
jg
jno
sbb
jbe
mov
mov
xor
pop
fists
xchg
pop
arpl
adc
mov
filds
int3
mov
pop
lock
mov
aaa
les
sti
mov
mov
mov
subl
sbb
and
hlt
aaa
sbb
and
je
xor
push
xor
sub
push
adc
mov
xchg
sbb
mov
jae
clc
jecxz
lahf
movsb
jle
jle
cmp
mov
fcmovnb
sbb
lods
jmp
mov
add
dec
cmp
cmpsb
dec
xchg
push
cwtl
lock
or
popa
xor
jbe
dec
cs
imul
cltd
sbb
sbb
int3
xchg
jae
test
lea
and
das
std
sbb
mov
loope
fidivl
adc
mov
xor
loop
jns
punpckhbw
into
scas
testl
jb
xor
inc
xor
fidivrs
push
repz
inc
in
sub
addr16
push
test
xchg
outsb
ret
mov
add
lods
jle
lret
push
cmpsl
push
xchg
jnp
je
sbb
adc
jns
or
jmp
jmp
push
leave
xor
icebp
xchg
jnp
clc
cmp
dec
lret
sub
nop
fwait
push
mov
subl
rcl
mov
in
fstpl
pop
fwait
lods
pop
test
pop
pop
cmp
lcall
subb
mov
pop
in
incb
cld
test
cmp
js
or
jno
rorl
or
cld
call
cli
push
xor
cmp
stc
cmp
gs
int
push
loopne
sub
add
outsl
rcrb
mov
xor
mov
stc
jbe
outsb
xor
cli
inc
xchg
adc
add
inc
and
into
or
dec
or
loopne
inc
add
pop
push
push
andb
aad
pop
pop
lock
xor
xchg
or
stc
ja
sbb
loopne
dec
sbbl
cmp
stos
adc
inc
jg
ds
pop
cmpsl
adcb
sub
iret
in
xchg
pop
adc
sub
frstor
pop
pop
jl
mov
jno
sbb
inc
ficoml
push
mov
fwait
jge
push
ja
pop
push
xchg
push
fistpl
push
jp
push
in
fwait
fwait
sub
in
inc
cmpsb
adc
push
mov
adc
fdivrs
ljmp
loope
pop
and
push
jecxz
push
sbb
shl
mov
mov
shl
or
outsb
nop
ljmp
mov
test
add
ss
movsb
xor
test
jmp
mov
ja
in
jnp
mov
xchg
sub
mov
cmc
nop
ds
push
mov
sahf
add
test
divb
jmp
pusha
sbb
dec
adc
jmp
jb
cmp
scas
addr16
gs
rcll
or
lret
mov
push
pop
aaa
icebp
and
in
inc
call
ljmp
push
jb
pop
inc
dec
jle
popf
stc
aad
jno
push
test
test
scas
jp
cmp
push
and
leave
add
add
push
dec
mov
popf
cwtl
and
push
mov
or
roll
and
inc
shll
xchg
sub
rorb
movsl
aam
pop
leave
hlt
sahf
outsb
scas
cmp
and
push
jbe
rcll
pop
outsl
mov
inc
jb
stc
mov
dec
pop
mov
and
pop
jl
pusha
push
jb
pop
je
adcl
sub
push
aad
cmp
ljmp
xchg
adc
mov
rcr
insb
or
xchg
call
jl
xchg
mov
cmpsb
lods
int
je
xlat
pop
xchg
int3
stos
sar
fdivrl
mov
push
mov
sub
mov
mov
scas
sahf
js
pop
imul
adc
sbb
push
xlat
xlat
out
push
shlb
jecxz
imul
mov
movsb
xchg
mov
scas
sub
scas
hlt
pop
inc
fiadds
divl
int
lods
out
pop
xor
or
xor
js
or
movsl
in
jl
and
mov
mov
mov
add
pop
lret
insl
push
loope
cs
mov
mov
loope
or
clc
push
mov
jne
in
mov
jg
mov
jne
xchg
roll
or
inc
cld
in
mov
stos
or
mov
and
movsl
punpcklwd
mov
loop
cld
enter
add
aad
xor
xchg
fwait
pop
ret
les
sbb
femms
stos
mov
test
cmpsb
or
out
jge
fs
out
jmp
rcrl
mov
and
pop
adc
jns
je
mov
roll
icebp
pop
inc
jnp
jecxz
mov
lcall
push
or
rorb
fstpl
lea
cmpsb
lahf
aas
nop
popf
divb
add
mov
inc
or
sahf
dec
in
mov
repz
xchg
or
sbb
add
repz
pop
adc
icebp
push
mov
lahf
test
xchg
push
sbb
gs
add
sbb
cmc
lcall
inc
and
and
sbb
jbe
dec
in
test
fwait
shrb
sub
lods
xor
jb
cltd
shll
lahf
mov
xchg
dec
xor
jb
fwait
mov
andb
iret
iret
inc
faddl
test
fnsave
std
scas
idivb
dec
pusha
mov
ja
sbb
mov
and
out
ffreep
xlat
cmp
sub
mov
mov
je
adc
test
sbb
lahf
clc
jbe
cwtl
push
push
dec
repnz
das
outsl
xchg
pop
xchg
dec
rcrl
dec
bound
mov
je
xchg
push
lods
and
xor
mov
jbe
mov
mov
mov
jecxz
stc
in
add
aaa
pushf
xor
dec
mov
cli
lcall
pop
aad
pop
iret
and
sbbb
cwtl
sbb
dec
inc
repz
inc
push
and
pop
andl
pop
gs
cmpsl
push
pop
ds
outsl
push
or
dec
jbe
jb
ret
push
xor
xchg
mov
jb
dec
in
sub
sti
push
leave
cmp
mov
mov
xor
lret
inc
into
sbb
outsb
xchg
cmpsl
mov
hlt
push
gs
arpl
mov
mov
call
std
mov
lahf
jb
mov
and
hlt
cmpsl
and
cltd
push
loop
xor
mov
shlb
insb
push
out
lahf
testl
call
mov
mov
nop
push
pop
out
dec
rcrb
rcrl
xchg
bound
jnp
out
lahf
add
mov
xlat
addr16
jno
pop
out
mov
frstor
fsub
mov
stos
in
scas
xchg
sub
andl
les
jnp
lods
mov
ja
mov
pusha
mov
inc
ficoml
mov
and
mov
pop
mov
add
push
pop
rclb
pop
stos
inc
mov
not
stos
ret
xor
xchg
adc
cltd
out
cmp
add
or
mov
push
loope
cmpsl
pop
test
jnp
pop
out
mov
clc
in
mov
mov
test
lret
jmp
dec
jae
ds
imul
fstpl
fcoms
sbb
add
dec
repnz
notb
in
bound
xchg
test
scas
lea
pop
adcl
movsl
add
sbb
ds
lea
pop
loopne
pop
ljmp
pushl
adc
stc
inc
subl
fsubrs
fmull
movsb
and
mov
int
lods
aaa
mov
decl
insl
loopne
xor
mov
push
cmc
xchg
imul
addr16
movsb
dec
push
insl
jb
int3
arpl
sub
test
rcr
and
outsb
popa
data16
adc
ret
inc
dec
ljmp
dec
mov
ljmp
data16
popl
push
fwait
mov
and
and
out
jb
pusha
dec
mov
ret
iret
pushf
push
mov
and
enter
sti
xor
xchg
mov
mov
dec
sbb
jl
xchg
divl
arpl
lods
sub
cli
popa
cmp
cmp
mov
adc
mov
cmp
or
push
js
fidivl
lret
cmp
cmp
psubb
cmp
test
out
test
xor
or
inc
mul
or
xchg
movsl
in
sbb
jae
dec
and
hlt
into
xchg
cmpsl
mov
mov
fidivrs
fsubr
into
ret
mov
xchg
rclb
cmpsb
loope
out
mov
sbb
loop
or
testb
and
ror
mov
iret
mov
and
ja
test
pop
jge
sub
in
in
jnp
fcmovne
leave
jg
jno
push
pushf
adc
inc
dec
iret
das
lods
enter
fs
cltd
ret
icebp
stc
mov
push
jmp
dec
js
outsl
or
icebp
pop
xchg
push
cmp
pop
dec
adc
xor
lods
mov
mov
add
add
adc
hlt
repnz
and
fwait
xchg
or
sbb
mov
imul
lds
pop
insl
arpl
inc
jecxz
sub
icebp
out
or
xor
sti
sti
jle
outsb
cmp
fs
pop
adc
scas
out
movsb
jle
cli
daa
enter
fcoml
test
mov
arpl
push
jns
xchg
insl
pop
ds
cmc
and
imul
add
cltd
repnz
inc
cmc
enter
aas
sub
xor
lds
xor
test
sbb
and
push
jmp
jb
jg
cwtl
sub
jp
lret
inc
outsl
pop
lea
add
loop
loop
movsb
cmc
xor
fwait
shll
ss
mov
jg
in
and
mov
mov
mov
stos
mov
mov
jo
mov
jae
push
mov
jecxz
pushf
stos
scas
test
jg
sbbb
int3
mull
pop
pminsw
mov
shrb
push
clc
xchg
insb
arpl
movsl
cmp
or
fwait
cld
in
lods
nop
and
sub
in
ss
inc
or
push
push
jae
sbb
xchg
scas
into
lods
mov
dec
fadd
sub
cmp
scas
xchg
jno
mov
push
adc
insb
jo
push
ds
test
pushf
xchg
pop
int3
sti
pop
int
cmc
std
push
dec
loop
pop
xchg
imul
push
and
shrb
jbe
testl
push
cmp
test
ljmp
pop
cmp
cmp
mov
popa
add
mov
jp
fadds
and
stc
mov
jecxz
cli
inc
lock
jp
out
shl
sub
loope
inc
adc
sub
push
xor
jecxz
sub
push
or
jbe
xor
jle
lock
sahf
pusha
or
sub
adc
scas
inc
add
sub
in
jno
frstor
pop
fildl
adcl
adc
ds
mov
add
mov
xlat
mov
stos
lock
jp
lcall
loopne
adc
not
movsb
sub
popf
pop
inc
pop
cld
inc
icebp
jmp
cs
adc
pop
popa
leave
xor
mov
cmp
sub
push
xchg
xor
lds
outsw
jno
or
lahf
rcll
jl
ret
stc
sbb
dec
jne
sub
pusha
or
enter
xor
sbb
repz
sub
jne
enter
adc
ror
adc
add
dec
cmpsl
pop
imul
inc
xchg
iret
popa
stos
pop
cmpsb
movsb
jmp
mov
out
fs
mov
inc
call
lret
or
out
cwtl
mov
jne
mov
test
mov
add
aas
sub
neg
movsb
adc
push
cmp
jg
mov
mov
push
push
fwait
enter
sbbl
jbe
xor
lods
movsb
cmpsl
jge
fsubs
roll
aas
lods
mov
sahf
pop
mov
addl
dec
rorb
inc
cmp
fst
add
and
mov
xor
mov
sub
sub
jmp
loopne
mov
mov
test
enter
cmp
in
imul
in
loop
xchg
je
jnp
xchg
test
sub
into
shrb
repz
es
inc
jg
shr
pop
arpl
mov
sbb
push
ret
mov
aam
xchg
loop
test
inc
push
mov
stos
cmp
xchg
mov
xchg
arpl
in
cmp
lahf
imul
loopne
imul
adcl
stos
inc
outsb
sahf
pop
fldt
add
lods
xor
fwait
xchg
push
push
inc
rcrb
cli
push
movsb
inc
dec
inc
ljmp
sub
inc
xor
cmc
jl
pop
pop
rep
cli
rorl
cld
in
mov
mov
test
mov
into
pop
mov
in
pop
push
insl
mov
repz
shlb
mov
data16
jae
xor
insl
icebp
mov
hlt
aas
mov
scas
stos
xor
jp
lret
test
mov
sbb
mov
push
mov
mov
push
sub
insb
cwtl
aam
sub
mov
outsl
sbb
cmp
lahf
enter
push
adc
clc
pop
jmp
repz
test
xchg
xchg
push
xchg
loop
push
in
rclb
out
stos
mov
adc
stc
rcll
xchg
cmp
pop
stc
xlat
mov
cld
jne
xlat
push
adcb
nop
and
xor
in
jo
sub
pop
add
inc
xlat
pop
cmp
adc
push
and
loope
xor
outsl
adc
and
jle
and
call
sub
jno
jo
out
push
jge
or
xchg
add
bnd
sbb
fdivrp
out
jl
inc
sub
push
and
data16
scas
or
dec
imul
sbb
or
into
sub
int
mov
cli
mov
xchg
lret
jnp
sub
insl
inc
mov
xchg
dec
call
adc
add
movsl
notl
mov
add
mov
jmp
jge
add
mov
clc
jmp
mov
xor
dec
jecxz
ret
push
out
movsb
bound
movsl
or
test
dec
bound
adc
xchg
shl
into
dec
lahf
or
ss
inc
fwait
popf
bound
psubw
scas
pop
dec
jnp
pop
push
dec
inc
sbb
mov
int3
dec
data16
scas
in
sbb
jns
es
lcall
cmpsl
ds
insb
pop
adc
push
cmp
sub
cmpsb
icebp
cmp
push
jno
fs
lret
adc
mov
or
xchg
pop
cld
jmp
sbb
and
dec
cltd
je
inc
shlb
sahf
xchg
xchg
loop
sbb
loope
inc
hlt
pop
or
icebp
insb
or
push
or
addr16
and
push
sbb
test
mov
push
or
xor
ror
imull
les
dec
or
or
cltd
nop
inc
notl
inc
test
jl
or
xor
ficoms
sbb
inc
repnz
sbb
push
push
push
rolb
or
jle
mov
add
gs
test
inc
outsl
cmpsl
out
inc
pop
and
pop
lea
in
testb
jp
aam
dec
in
movsb
mov
sarl
inc
shrl
push
loopne
sarl
jle
imul
xchg
jo
dec
jg
fwait
cwtl
inc
mov
out
enter
add
jp
inc
rcll
or
enter
mov
loop
mov
push
outsl
popa
mov
addb
movsl
bound
pop
or
fsubr
inc
stc
mov
push
jmp
jo
inc
sbb
cmp
xlat
cli
mov
dec
inc
stos
fcoms
std
ss
pop
sbbl
xchg
xor
mov
push
rcrb
cli
mov
inc
fdivl
mov
pop
enter
cltd
mov
and
hlt
xchg
sahf
push
fisubrl
cli
xor
and
dec
xor
jns
stos
aas
stos
mov
or
pop
mov
mov
jmp
xor
xor
or
push
push
push
ja
inc
jnp
sbb
or
sbb
mov
gs
aaa
aaa
fxch
test
mov
bswap
std
jb
pushfw
into
push
mov
and
mov
mov
insl
fsubrl
rorl
and
shll
add
cli
es
mov
and
xchg
mov
ficompl
sarl
loopne
mov
sub
dec
add
ljmp
stc
jp
cs
xchg
sbb
xchg
mov
aaa
sbb
add
lods
je
fwait
mov
loope
imul
add
cmpsl
adc
push
and
icebp
or
and
lret
jg
xor
out
adc
hlt
fs
lret
mov
scas
or
jge
sahf
fs
dec
sahf
mov
jmp
aas
mov
scas
mov
arpl
and
mov
rcll
inc
imul
dec
sti
es
ljmp
and
dec
mov
mov
shrb
test
fildl
mov
push
jecxz
sub
ds
mov
mov
shlb
mov
les
sub
into
push
nop
or
xor
push
fildl
std
fadds
or
mov
in
cmp
in
loopne
int3
es
fs
sbb
push
pop
lods
inc
inc
xor
jmp
jno
lea
jno
dec
loop
adc
mov
mov
xor
jne
cmp
std
ss
inc
xor
sbb
push
adc
inc
ret
mov
dec
mov
pop
out
mull
xchg
in
cmp
jb
or
shll
lea
add
mov
mov
shlb
xor
sub
jg
icebp
cltd
or
push
mov
gs
push
mov
xlat
int3
lods
sub
ja
xor
push
popf
lds
dec
imul
xchg
cmp
cltd
xor
in
scas
arpl
sub
out
and
push
xchg
push
stos
xor
dec
push
jp
mov
repz
loopne
inc
aad
lock
insb
dec
pop
or
addl
mov
mov
nop
mov
jnp
in
fildll
outsb
xchg
cmp
jns
mov
jnp
push
push
sbb
jle,pn
inc
sbb
andl
std
out
mov
jns
dec
pop
test
jg
dec
rol
sub
test
idiv
std
js
adc
inc
pop
or
call
lret
lods
sub
adc
repz
mov
popa
xchg
xchg
sub
ljmp
mov
adc
stc
incb
jns
gs
jecxz
ret
mov
fisubrs
sbb
cmp
out
jge
jmp
pop
loope,pt
mov
dec
mov
push
jmp
jns
or
xor
sub
lods
sub
push
loopne
out
mov
and
movsl
jecxz
fs
sarb
inc
push
xchg
mov
pop
cli
loopne
cli
orl
fcomp
pushf
fisubl
rorb
inc
jp
sbb
in
enter
xchg
jae
mov
pop
scas
adc
jb
cld
xor
jns
ljmp
loop
pop
out
mov
dec
jg
mov
daa
cmp
cmp
sbb
fisubl
enter
push
roll
jae
xchg
xchg
inc
mov
movsb
cmp
add
lret
sbb
xchg
sbb
push
jns
fwait
inc
frstor
mov
pop
pop
pop
into
cwtl
mov
imul
push
dec
adcl
aaa
jl
xchg
dec
dec
sbb
pop
and
icebp
xchg
cmp
stos
adc
repnz
dec
scas
xor
sbb
mov
or
add
addr16
push
in
jae
push
call
stc
popf
mov
jbe
xchg
push
repz
inc
adc
sbb
mov
out
xchg
xchg
and
jnp
xchg
push
pushf
push
leave
rcl
stos
jo
cmpsb
mov
push
jae
lahf
scas
mov
repz
ljmp
sub
out
mov
imul
jne
ret
fimuls
mov
jno
mov
dec
test
fisttpl
addb
ljmp
jge
cmp
test
in
jmp
xchg
fwait
xor
xchg
lds
jg
inc
fs
ss
pop
inc
adc
add
and
popa
jl
sahf
xchg
jb
popa
xchg
pop
xchg
xor
aas
ds
sbb
and
aas
repz
loopne
push
pop
sbb
rcrl
shlb
stos
sub
inc
sti
les
cmpsl
sarb
es
push
into
jmp
fistpl
out
int3
cmp
pop
pop
repnz
aam
pcmpeqw
pusha
sub
xchg
dec
add
insl
sbb
adc
in
mov
inc
out
cmp
cwtl
fsts
lret
dec
sbb
stos
into
fbld
movsb
clc
pusha
int3
cmpsl
xorb
movsb
add
push
jno
into
les
fadd
std
jecxz
test
push
mov
cmc
sbb
lods
movsb
pop
test
pop
movsb
mov
and
or
or
sbb
xchg
xchg
arpl
or
popf
mov
repz
inc
scas
inc
dec
movsb
sbb
sbb
jecxz
mov
jg
es
lahf
cmpl
mov
add
ljmp
xor
shll
sub
or
adc
sbb
mov
andl
outsb
pop
imulb
mov
imul
loopne
out
mov
imul
inc
pusha
out
cmp
test
sub
mov
jp
mov
lret
sarl
sub
fs
jo
push
loope
ja
mov
into
jo
mov
aam
pop
pop
push
subb
inc
inc
mov
pop
mov
mov
inc
push
xor
or
mov
ja
int3
loop
push
xor
xchg
or
sbb
sub
mov
mov
push
mov
aaa
and
lods
aaa
mov
push
xor
push
push
push
mov
jg
testb
loope
sub
mov
arpl
xchg
lahf
lea
out
into
loopne
pop
sub
mov
sarl
mov
mov
aaa
dec
sbb
lahf
std
lcall
cmp
in
cld
pop
aas
push
push
out
xor
lret
ret
mov
fnsave
cmp
call
dec
cmpsb
or
enter
lods
pop
out
mov
nop
xor
mov
jae
adc
addb
xchg
xor
pop
movsl
out
hlt
in
dec
push
lods
les
push
fstpl
ret
xor
xchg
mov
push
inc
ljmp
fistps
out
movsl
aad
sbb
lock
mov
ficoms
pop
fsubrl
dec
cmpsl
mov
hlt
andl
imul
pop
mov
pop
fcomi
jge
mov
mov
and
adc
jae
dec
mov
push
cmc
test
outsb
sahf
cld
cli
pop
lods
pop
push
cltd
sbb
jno
inc
dec
lret
andl
sbbb
mov
orl
pop
push
leave
int3
in
aad
clc
ficomps
mov
enter
sahf
ret
lret
fdivp
xchg
icebp
jmp
push
pop
jns
xchg
pop
mov
lea
jecxz
loopne
jl
adc
aas
in
dec
xchg
inc
sub
pushf
lret
insl
sbb
sbb
cmp
cmpsl
add
adc
repz
xchg
scas
mov
mov
clc
mov
sub
xor
push
cmp
shr
test
pop
xor
cmp
enter
pop
imul
cs
es
jmp
or
fsubrs
add
push
push
fimuls
outsl
ds
jae
push
push
scas
or
or
scas
scas
mov
mov
cltd
movsb
nopl
xorl
jb
fmuls
mov
out
bnd
pop
mov
cwtl
dec
xor
push
call
cmp
or
xor
sbb
mov
and
and
adc
sub
test
mov
stc
aad
out
outsl
ljmp
adc
cmp
inc
mov
pop
xchg
mov
mov
cmc
ficoml
sbb
xchg
fwait
in
in
movsl
xchg
xchg
add
inc
in
mov
adc
fadds
and
jp
fcomip
jne
sbb
mov
int
pop
add
mov
lret
add
jnp
loop
dec
insl
dec
cmc
xor
ret
push
jnp
or
arpl
je
sub
divl
addr16
fidivrl
shrl
je
jl
lahf
int3
cmp
cltd
jb
je
jmp
adc
inc
mov
hlt
ds
clc
mov
outsb
jl
fstp
jb
cs
and
push
add
or
jno
fisttpl
pop
inc
dec
fnstsw
push
arpl
sbb
cmp
test
das
cwtl
sbb
mov
and
popa
pop
andb
pop
mov
pop
ss
add
jns
push
xchg
scas
adc
lds
pop
add
lret
inc
sbb
mov
pop
inc
out
addr16
movsl
cmpsb
cltd
test
mov
fs
dec
cmp
sub
fdivrs
stc
ficomps
dec
xlat
xor
or
into
jae
sub
mov
mov
xor
ds
sahf
inc
dec
and
add
inc
mov
stos
mov
xlat
test
pop
cwtl
clc
jo
je
lcall
and
cmp
les
push
push
jmp
mov
icebp
scas
movsl
ficoms
or
pop
push
stc
mov
ret
or
lret
sub
sub
shll
cmpsl
push
aad
ret
pop
loopne
aaa
xlat
out
or
mov
les
cmp
sti
js
mov
mov
popa
clc
or
gs
dec
cmp
push
add
dec
cld
xor
frstor
js
pop
cmp
mov
icebp
fcoms
or
xchg
xor
ja
pop
adc
aad
cmp
adc
addr16
dec
sub
mov
rcrb
and
sti
hlt
jp
mov
ret
inc
ret
mov
orb
mov
stos
inc
push
lret
jecxz
in
and
mov
and
or
mov
adc
sub
and
pop
dec
into
pop
and
sbb
push
xchg
jno
push
mov
mov
mov
pop
loop
dec
mov
cmpsl
fisttpl
xchg
sbb
sub
inc
xor
sti
xor
es
lods
or
call
or
lcall
xchg
ja
inc
ds
fyl2x
or
lods
idiv
pop
mov
lret
insl
scas
jbe
out
lea
xor
loop
dec
mov
nop
ss
dec
leave
loopne
imul
mov
lret
jecxz
xchg
xchg
imul
nopl
rcll
shlb
and
jnp
or
mov
jno
jmp
and
icebp
jp
jnp
je
andl
adc
pushf
nopl
popa
xchg
fistl
shll
xchg
outsb
mov
roll
cltd
loope
repnz
insl
ss
sub
push
nop
pop
push
and
xchg
jecxz
jmp
subb
imul
mov
push
ficoms
mov
fisubl
fiadds
mov
jbe
pop
adc
shlb
scas
lret
sub
lahf
mov
xorb
inc
lret
int3
test
stc
call
add
jmp
xchg
outsb
cmp
and
xchg
pop
call
mov
movsb
mov
mov
sub
or
or
push
sti
and
out
hlt
push
jg
bound
inc
popf
fsub
push
imul
mov
dec
sti
adc
and
xlat
pop
insb
inc
cmp
push
mov
cltd
cli
fcomip
js
loope
and
aad
jecxz
sub
adc
sbb
ret
mov
in
jbe
and
leave
dec
inc
sbb
jae
cmp
push
test
aam
jnp
push
adc
leave
push
loope
mov
ja
in
stos
aad
or
xorb
adc
pop
sbb
fs
arpl
sub
push
cmc
xchg
int
ds
and
mov
add
addr16
sbb
pop
add
out
jno
adc
movsl
lcall
into
sti
mov
adc
loopne
leave
xor
and
dec
jbe
int3
xor
daa
dec
xchg
ja
jmp
imul
push
je
mov
enter
jge
scas
das
ret
jl
daa
or
int
in
jb
push
enter
out
adc
aam
mov
push
push
add
inc
dec
test
jecxz
sub
mov
xchg
mov
and
rcr
mov
lock
in
mov
jmp
cltd
adc
out
dec
cmp
testb
das
scas
push
loope
fcomps
pusha
and
or
mov
adc
cmc
push
sub
push
outsb
jnp
fldl
cmpsl
sbb
ljmp
outsl
test
pmulhuw
inc
dec
mov
bound
int3
loope
test
and
jne
add
sub
cmpsb
jbe
cwtl
push
imul
fwait
sbb
insb
sahf
fdivp
scas
ds
lcall
int3
xadd
push
dec
cmp
out
mov
icebp
push
xchg
int3
dec
in
push
xchg
pop
xchg
sbb
stos
push
jno
mov
adc
pop
insb
stos
cli
fsubl
addr16
xchg
cmpsb
dec
dec
cmp
dec
imul
popf
testl
loop
jno
enter
std
pop
hlt
mov
jle
jb
out
mov
ds
push
mov
inc
mov
sub
mov
jp
sbb
xor
mov
in
ret
and
aas
lahf
int
mov
out
pop
sub
imul
movsb
mov
inc
rorl
pop
inc
jo
inc
cmpsl
cmp
sarb
dec
jmp
cmp
ss
cmpb
mov
lret
jbe
push
xchg
imul
push
xchg
xchg
adc
cmp
leave
data16
shlb
xchg
cli
jecxz
jb
xchg
lret
cld
pushf
xchg
js
ds
aam
mov
dec
adc
enter
lcall
jle
push
xlat
add
mov
adc
dec
mov
mov
pop
dec
inc
lods
push
add
pop
out
in
fcomp
test
fnstcw
fildl
cmp
mov
mov
fidivs
popa
sbb
cmp
mov
adc
dec
test
mov
sub
cmc
dec
ljmp
gs
inc
jge
or
fdivl
mov
insb
fisubrl
xor
popa
pop
int
pushf
ljmp
arpl
pop
sbb
inc
mov
mov
inc
fcoms
push
xor
xlat
sub
adc
fcompl
pop
lds
cmp
adc
add
push
push
and
test
pop
cmp
xchg
int
mov
pop
mov
repz
adc
push
dec
ljmp
sub
push
jecxz
bound
stc
inc
sbb
gs
jle
aaa
hlt
test
xchg
shrl
sbb
xchg
mov
popf
pop
mov
std
pop
pop
stc
mull
xchg
xor
fidivrl
sub
movsl
sub
jle
decl
hlt
andb
es
mov
or
loope
leave
out
addr16
dec
es
lods
sub
sub
inc
dec
inc
in
aam
ret
nop
mov
mov
fcmove
aad
mov
and
dec
cmp
gs
xchg
insl
imul
in
in
lret
cli
add
adc
and
pop
mov
hlt
in
cmp
ds
dec
inc
mov
push
jge
stc
fwait
negb
in
stos
aam
xor
ljmp
shlb
mov
rorb
ss
std
push
outsb
es
inc
sar
push
sbb
repnz
jbe
cmp
add
sub
jnp
inc
out
bound
xchg
xor
push
mov
xchg
pop
dec
sub
ja
out
xchg
ret
and
push
cld
add
movsl
mov
lcall
das
arpl
pop
jo
xchg
dec
sahf
imul
push
and
arpl
jecxz
adc
hlt
dec
jl
push
daa
or
inc
xor
pusha
lea
clc
dec
cmp
adcb
xorl
lret
adc
shl
test
jle
xchg
jbe
sub
repnz
dec
push
mov
mov
xchg
data16
xchg
push
jle
iret
jecxz
jno
sbb
mov
dec
stos
mov
sbb
movl
inc
rcll
cmc
out
adc
fsubl
in
jno
xchg
mov
aad
xchg
xchg
test
xor
jmp
test
xchg
ss
pop
shlb
mov
enter
es
mov
mov
fcoms
bound
ds
mov
sbb
fistl
cli
jle
jge
xchg
imul
xor
mov
ja
sub
nop
dec
imul
cmp
sahf
fsin
ret
jg
push
rorb
xchg
std
out
adc
mov
mov
popf
aaa
cs
mov
arpl
outsl
fwait
adc
ficompl
loop
cwtl
dec
int
dec
mov
shlw
mov
lahf
ja
outsb
movsb
test
sbb
jns
std
add
sbb
mov
mov
xor
imul
hlt
fwait
daa
dec
mov
pop
pushf
mov
or
jne
aas
iret
xchg
mov
xchg
lret
insb
popa
lock
mov
lock
rolb
fmuls
xchg
sub
js
lods
test
xchg
flds
fidivl
inc
xchg
insb
fsubs
aas
ds
or
lds
into
lcall
adc
movsl
mov
add
repz
sbb
fdivrp
adc
test
repnz
mov
mov
push
push
mov
xor
dec
lods
clc
fidivl
mov
fmulp
shrb
lcall
dec
pop
xchg
ljmp
and
cs
int
xchg
aam
mov
lock
dec
mov
insb
xor
ja
xchg
cwtl
mov
add
cli
insl
inc
sbb
loop
add
cltd
out
fmuls
cmp
stc
jmp
sarb
imul
pop
cmpl
mov
fcomp
shlb
enter
sbb
cltd
lods
sub
sub
mov
imul
in
pop
or
jmp
xlat
out
loop
jle
fwait
pop
sub
mov
push
divb
pop
daa
int
mov
push
mov
mov
pop
xor
cmp
in
stc
push
out
jbe
lcall
pop
imul
pop
mov
jno
jecxz
sti
inc
mov
stc
lret
push
push
xchg
in
add
enter
lcall
ror
fists
mov
inc
sub
dec
lock
inc
cmp
ja
aam
fwait
dec
xchg
mov
xchg
xchg
adc
rcrb
sbb
jp
mov
push
fisubl
mov
shrb
mov
push
jg
dec
mov
mov
xor
cli
sub
xlat
arpl
add
push
fwait
mov
out
mov
sbb
push
cmpsb
jns
pop
and
ret
sahf
scas
inc
fcomp
xchg
xchg
inc
shll
mov
sbbl
repnz
mov
test
and
addl
movsl
aad
lea
cli
pop
push
std
add
out
and
rorb
ljmp
loope
out
data16
push
mov
cmpsb
jns
decb
pop
jae
test
mov
mov
dec
add
jb
imul
mov
mov
icebp
mov
test
fsubl
shr
pop
mov
push
es
int
icebp
sbb
jns
mov
push
inc
lahf
hlt
or
push
pop
outsl
and
fnstsw
pop
jno
push
push
mov
imul
cwtl
insb
fcoms
sbb
into
lcall
loop
nopl
fwait
test
cwtl
mov
push
inc
fs
xchg
dec
fbstp
repnz
es
and
pop
inc
push
cmp
shl
xor
repnz
outsl
int3
mov
in
jecxz
fwait
addr16
mov
jmp
xchg
gs
and
stc
inc
add
fdivs
xor
pop
out
sub
cmc
mov
inc
xchg
xchg
push
jno
shrl
mov
cs
mov
inc
push
das
cmc
sbb
jmp
mov
shll
rcll
xorl
jo
ret
js
cwtl
dec
jb
cld
mov
xchg
out
add
mov
cmp
sbbl
iret
int
mov
and
jae
lcall
jp
pop
or
shlb
outsb
fldenv
cli
mov
pushf
in
and
loopne
jge
sti
fistpll
js
jns
gs
sub
jne
or
cmp
rcrl
outsl
bound
in
mov
mov
aam
adc
scas
sub
rolb
les
adc
leave
and
daa
outsb
ret
movsb
aas
insl
inc
jge
cmp
into
add
dec
xlat
or
shl
jmp
lea
inc
imulb
fsts
out
mov
ja
cmp
test
adc
sbb
mov
pop
cwtl
orl
mov
push
and
pop
jl
and
add
mov
rcrl
clc
cmp
loop
dec
out
ss
roll
aam
jge
lock
imul
ret
shrl
add
cmp
fwait
js
orl
and
jae
clc
mov
push
inc
cmp
cmp
mov
ljmp
jle
jg
sbb
mov
add
lock
lods
mov
sub
push
mov
mov
xor
and
out
xchg
test
mov
push
jb
fmull
int3
xchg
sbbb
clc
insl
lcall
xor
jbe
jne
rol
xchg
dec
xor
sbb
push
loope
inc
ljmp
incb
adc
push
jne
mov
dec
and
inc
aad
test
rclb
sbb
jne
xchg
or
iret
fldcw
mov
push
cltd
mov
mov
jecxz
stos
mov
fsubr
push
xchg
mov
out
push
mov
cmpsl
pusha
negl
or
inc
pushf
sbb
mov
jecxz
sbb
ss
jb
nop
cmpsl
out
adc
mov
dec
nop
mov
das
rcl
push
dec
lds
jg
mov
mov
ret
xor
es
divb
sbb
int
ret
mov
mov
repz
mov
inc
fimuls
sar
stos
test
and
inc
inc
int
push
ret
icebp
mov
push
dec
xchg
mov
mov
imul
imul
adcb
mov
mov
hlt
scas
shlb
das
mov
out
xor
adc
mov
inc
mov
jnp
insl
push
repnz
imul
lret
push
pushl
xchg
inc
mov
dec
aas
lahf
push
in
pop
mov
lahf
mov
fiadds
fstpt
cld
xor
mov
and
imul
les
xchg
xchg
mov
lds
inc
fmuls
xlat
and
jne
push
sbb
push
inc
adc
sub
jnp
inc
aas
fiaddl
dec
push
test
pop
pushf
pop
push
in
xchg
mov
shrl
dec
divl
sbbb
aam
mov
loop
repz
xchg
stos
into
out
enter
loope
iret
pop
loopne
push
loope
movhpd
cmp
ljmp
repnz
push
mov
sub
sti
pop
mov
sub
aad
xchg
mov
ja
or
stos
cmc
mov
leave
or
pop
shl
test
ficoml
jnp
dec
push
roll
jo
cltd
scas
sbbb
mov
adc
sarb
test
sub
and
jne
mov
addb
nop
ret
imull
pusha
xor
push
lds
lds
sbb
cmp
fistl
js
rorl
in
cld
xchg
dec
xor
mov
adc
ds
stos
scas
jl
pop
xchg
cmc
sub
cli
push
xor
xor
push
cwtl
dec
or
dec
adc
mov
pop
in
cmpsl
xchg
xchg
mov
pop
cmc
pusha
and
out
mov
or
addr16
mov
dec
xchg
jp
xor
cmc
int
mov
sarl
lock
jmp
jp
js
mov
xchg
jg
push
xchg
dec
jl
ja
mov
or
pop
pop
cli
clc
jne
clc
ja
inc
jo
pop
push
loop
xor
adc
enter
ficompl
mov
adc
scas
addr16
outsb
mov
jl
jl
jb
outsb
lahf
repz
push
ljmp
and
dec
mov
aaa
and
cmp
sub
loope
out
dec
fwait
xor
sahf
xchg
or
inc
sub
pop
mov
fists
dec
popa
js
jnp
lea
sbb
lahf
fdiv
pop
das
xchg
push
add
add
pushf
mov
int
jbe
pop
daa
icebp
rcrl
cmp
or
mov
xlat
dec
sbb
jo
lret
mov
adc
data16
dec
sti
je
rol
cmpsl
stos
fnsave
mov
orl
push
aaa
in
popl
jns
adcl
arpl
in
dec
or
sub
icebp
pusha
or
ficompl
xlat
or
jo
jne
or
or
cmp
aas
push
mov
incb
and
lds
jp
or
pop
pop
cs
nop
jae
inc
imul
inc
fldenv
std
cs
jne
scas
push
lods
mov
enter
idivl
stos
rcll
lds
pop
push
sub
nop
lcall
push
pop
and
pop
scas
aas
stos
sub
hlt
or
sbb
and
scas
loop
pop
mov
dec
sub
push
pop
cmp
mov
and
mov
dec
imul
and
push
lea
add
clc
and
sbb
adc
push
insl
and
sar
pop
cs
push
out
cmp
push
mov
and
xor
sbb
mov
test
aam
jl
add
int3
out
xchg
test
sar
in
icebp
sahf
jne
ret
push
movsb
in
sbb
add
mov
mov
mov
ljmp
in
adc
es
mov
xchg
cwtl
std
mov
xchg
int3
popf
push
xor
cltd
aad
pop
inc
insl
ja
scas
sub
pop
push
popa
shll
lcall
pop
mov
jne
pop
or
inc
pusha
hlt
scas
aad
push
or
dec
repnz
add
mov
dec
mov
inc
sub
jns
push
rcr
jo
out
xchg
gs
xchg
inc
dec
mov
push
pop
mov
fsubrl
mov
lcall
inc
and
sti
and
push
sbb
hlt
hlt
mov
ljmp
rolb
hlt
popf
xor
fstpl
cmc
xchg
icebp
xchg
ficompl
pop
inc
les
es
loope
pop
out
test
pop
out
cmp
ds
sub
sbbb
idivl
adc
pop
movsl
imul
stc
loope
inc
insl
testl
mov
mov
sbbb
sub
test
outsl
mov
sbb
and
dec
pop
mov
mov
bound
mov
push
cmp
sbb
cld
push
leave
and
dec
sub
shll
pop
jns
mov
divl
dec
mov
repz
neg
outsl
mov
push
push
lret
data16
xor
xchg
lods
mov
cltd
pop
jl
jg
or
mov
aad
dec
xor
mov
jge
ds
mov
mov
mov
rcr
jnp
push
push
xchg
pop
lret
clc
ret
cs
mov
xchg
push
lock
mov
loopne
loop
pop
pop
cmp
addr16
mov
ljmp
cld
js
add
arpl
imul
call
gs
and
lcall
lret
mov
add
and
mov
pushf
mov
mov
sbb
mov
sub
and
xchg
dec
imull
sbb
mov
push
stos
xchg
xchg
jecxz
movsb
jle
add
outsl
mov
xchg
dec
movsl
sub
xchg
lea
mov
data16
nop
clc
lcall
sarl
je
xor
clc
add
into
loopne
mov
jne
insl
sbb
push
xchg
test
mov
mov
jge
test
sti
pop
push
xor
or
push
jge
jns
xlat
add
into
jmp
aam
mov
in
das
add
add
mov
call
mov
xor
jl
and
ret
mov
lock
mov
repz
cmp
dec
or
dec
mov
cmp
in
lret
mov
mov
dec
dec
std
sbb
and
lcall
mov
mov
xchg
imul
les
bound
xor
sub
xchg
adc
cli
stos
pusha
hlt
xor
push
mov
in
cmpsl
das
lcall
inc
lock
icebp
xor
pusha
xor
mov
push
je
pop
and
loope
sub
inc
in
cmp
jbe
push
inc
data16
test
adc
mov
iret
cmpsl
into
movsl
mov
xor
push
xor
or
int
pop
pop
adc
dec
mov
enter
ja
daa
xchg
test
or
adc
push
adc
pop
jnp
push
add
nop
roll
fstps
add
add
outsb
or
les
sub
popf
movsb
pop
test
mov
aam
inc
mov
je
mov
call
pop
js
xchg
xor
xor
pop
popf
cltd
bound
adc
mov
jle
inc
xor
cwtl
push
cmp
ss
fidivs
out
mov
jbe
push
inc
sti
mov
mov
cltd
mov
loop
xchg
xor
lahf
sbbb
mov
mov
mov
out
jg
sbb
adc
out
and
idivb
test
jecxz
pop
imul
jo
and
jp
inc
xchg
and
xchg
fwait
lock
fwait
jno,pt
js
cmp
mov
mov
test
data16
mov
jae
arpl
divb
cmpsl
push
cmpsb
in
mov
mov
aam
pop
pop
sbb
sti
leave
jg
jecxz
fsubp
fidivl
les
inc
dec
es
cmp
jnp
sbb
mov
cmp
pushf
xchg
dec
adc
out
in
cmp
aam
stos
mov
fstpt
out
mov
and
jbe
lods
mov
push
aas
mov
fcoml
movsl
int
dec
pop
dec
fstpl
mov
and
loope
mov
or
or
das
clc
mov
inc
pop
jb
ret
and
xchg
iret
int
fucomi
pop
dec
push
out
cmp
push
push
dec
cmp
push
lods
pop
bound
jecxz
les
push
add
adc
negb
or
enter
adc
xor
imulb
push
imul
test
sti
ss
mov
dec
mov
pop
std
test
lods
leave
xchg
sbb
nop
nop
adc
push
xor
cmp
add
insl
mov
mov
mov
sahf
fidivrl
in
push
cmp
std
orb
xor
jl
ss
ficomps
mov
loope
imul
test
mov
adc
dec
scas
jmp
push
lcall
cmp
inc
jecxz
mov
sbb
pop
xchg
cli
inc
add
out
cmp
cld
ds
push
test
gs
pop
in
jecxz
adc
inc
push
and
pop
lds
xor
rclb
aaa
in
ja
nop
roll
je
jae
shlb
aam
mov
enter
xchg
xor
in
inc
pop
xor
mov
repnz
mov
adc
mov
movsb
fsubrl
jb
jne
inc
lods
pushf
mov
push
lods
pop
sti
mov
jo
push
pop
loope
mov
pop
or
xchg
test
sub
mov
cmp
gs
push
xchg
mov
or
jg
pop
addb
scas
mov
jmp
jecxz
dec
inc
mov
sub
add
test
xchg
pop
jp
mov
dec
mov
clc
mov
jp
mov
dec
test
sbb
add
sub
out
xchg
inc
in
das
ds
loope
jge
or
mov
mov
dec
cmp
sti
test
and
sbb
adc
in
cmp
or
sahf
push
mov
sar
int
and
fldl
jno
js
stos
pop
and
push
or
lret
xor
shrb
mov
inc
rorb
lret
sub
lock
pop
arpl
rorb
xor
add
inc
add
mov
push
add
loopne
icebp
sbb
je
add
iret
lcall
test
sar
or
and
dec
insb
cld
cmp
lds
and
pop
jns
aad
hlt
repz
pop
jg
cmc
out
lcall
and
dec
mov
push
sbb
add
sub
jl
scas
lods
outsb
jo
shlb
inc
loopne
aad
xor
jle
inc
mov
daa
push
les
add
pop
mov
in
pop
fwait
nop
push
fdiv
jg
scas
loope
cli
sub
pop
mov
xor
or
push
aad
adc
mov
mov
push
or
mov
mov
aaa
scas
and
loopne
push
loop
scas
in
sahf
adc
lret
leave
out
lock
inc
sbb
sbb
cmp
pop
loopne
cld
lock
mov
mov
into
ds
mov
inc
popa
and
mov
and
xchg
cld
mov
rol
int
jl
mov
testl
push
mov
push
mov
int3
mov
add
mov
or
sub
mov
sbb
or
call
jno
dec
cwtl
movsl
adc
jns
jbe
xchg
jecxz
lea
adc
mov
ja
in
pop
cmp
test
mov
fs
adc
nop
push
test
pop
adc
popa
scas
leave
jp
mov
pop
dec
jb
xchg
jae
push
imul
jne
push
mov
and
loopne
jo
loope
in
xchg
sub
outsl
inc
jne
shld
sbb
mov
int3
daa
notl
hlt
insl
and
call
rcrl
jb
enter
sbb
in
aaa
jbe
aas
add
mov
hlt
mov
or
ljmp
pop
mov
sbbb
ljmp
fs
inc
shr
sub
fldl
sbb
aaa
jne
xor
pop
int
mov
rep
inc
cmp
or
jns
jae
sbb
dec
mov
out
nop
setno
cmp
mov
movsb
dec
inc
jns
scas
popa
pushl
add
mov
mov
sahf
pop
inc
xor
mov
clc
pop
xchg
adc
std
xchg
mov
std
inc
pushf
and
pop
cltd
js
loop
rclb
xchg
adc
add
imul
jbe
dec
mov
add
call
xorb
roll
in
cltd
push
mov
lock
jbe
rcrl
xchg
cmp
push
pop
cmc
jge
sbb
out
and
xorb
push
cmp
push
jbe
mov
dec
test
sbb
jmp
notl
push
stc
mov
sub
sub
pop
jae
jp
sub
sbb
stos
ret
fmuls
push
bound
push
adc
mov
shrl
jl
mov
adc
mov
or
leave
ljmp
xchg
lock
jle
sbb
scas
cmp
in
xorb
int3
outsl
cmpsb
dec
jle
mov
pop
sbb
cmpsb
mov
cmp
int3
leave
daa
movsb
sub
jae
int
pop
hlt
and
mov
dec
ljmp
movsl
push
insl
dec
cltd
repz
ja
or
sbb
adc
add
movsb
mov
sti
mov
dec
andl
and
insb
imul
fisubs
jl
push
mov
xchg
js
gs
xchg
sbb
out
data16
jo
aaa
imul
sti
jno
xor
and
mov
xchg
addb
xchg
or
adc
pop
sarb
aam
mov
repnz
cltd
int
fidivl
cmp
mov
scas
sub
fidivrl
ljmp
aas
pop
loop
in
inc
jmp
pop
and
pop
pop
outsl
icebp
das
inc
adc
fidivrs
jp
leave
hlt
pop
imul
xchg
dec
push
pop
lahf
or
out
loopne
jmp
fdivrl
push
and
lea
fucomp
cmpsl
fs
cld
cli
adc
mov
push
fildl
sbb
fwait
test
mov
pop
add
pop
daa
aad
xor
xchg
push
or
and
and
sub
loope
jl
mov
jmp
xchg
cmp
hlt
in
sub
sub
out
inc
shll
dec
pop
xchg
bound
cmpsl
and
push
dec
mov
push
adc
daa
mov
sub
sub
jnp
scas
ljmp
loopne
push
cld
xchg
pop
lea
xchg
pop
mov
test
leave
fbstp
sbb
jo
in
out
dec
arpl
bound
shl
out
cmp
adc
xor
jns
idivb
sbb
mov
push
ret
jecxz
lahf
cmp
or
sbb
addl
xor
repz
loopne
movsb
movsb
xor
in
repnz
movsb
add
ror
push
call
mov
lahf
or
mov
and
jmp
cmp
xor
mov
or
mov
and
cmc
in
sub
xlat
in
iret
xor
mov
mull
xchg
out
jmp
pop
pop
add
test
shrl
sub
sahf
stos
jge
lret
adc
adc
push
out
in
mov
pop
fdiv
pop
mov
mov
ss
scas
add
mov
jnp
pop
xchg
rep
jo
xchg
divb
lahf
push
imull
jmp
ror
aam
addr16
lds
xchg
pop
and
clc
ficoms
fcompl
or
mov
fnstenv
cltd
and
pop
fdiv
jb
rol
fisubs
inc
push
test
call
mov
jae
stos
mov
pop
mov
xchg
and
pop
les
pusha
shrb
stos
fimull
pop
push
loope
add
clc
lds
xor
in
clc
xchg
ljmp
jmp
pop
xchg
sub
lret
stos
pop
add
ja
enter
test
jno
fdivs
aaa
loope
xlat
pusha
jns
adc
jmp
sub
xor
pop
or
adc
and
fildll
les
xchg
pop
repnz
test
push
ret
loopne
lock
inc
imul
divl
add
inc
jns
dec
mov
fwait
add
sub
jl
int3
insb
push
lods
pop
jo
mov
cli
mov
icebp
inc
insl
lahf
dec
arpl
mov
ja
xchg
aad
or
sbb
pop
inc
mov
mov
jle
jnp
mov
pushf
xchg
inc
push
mov
cmp
inc
js
and
or
bound
popa
scas
fmul
and
xchg
retw
mov
loop
inc
in
sbb
jno
mov
arpl
shrb
cli
fidivs
sbb
jmp
aaa
mov
mov
stos
popf
roll
or
fsubs
fucom
iret
mov
add
loopne
decl
rclb
ljmp
stos
adc
cmp
xor
mov
into
loop
in
in
or
push
lret
shll
jl
mov
xor
stos
adc
stc
cmc
xchg
hlt
xchg
and
mov
sub
sub
cmp
dec
pop
mov
adc
ss
and
and
and
adc
xor
cmp
add
sbb
sub
mov
cltd
pop
test
mov
in
jp
sbb
mov
fildl
jo
or
mov
sub
cwtl
sbb
jne
mov
cmc
or
loop
aam
fnstcw
and
int
cwtl
push
lea
lds
sbb
les
popl
xor
xchg
clc
ljmp
loopne
mov
int
xor
dec
outsb
std
rcll
xchg
test
mov
mov
sahf
xchg
mov
dec
xchg
xchg
add
lret
lock
or
mov
jecxz
xor
lods
xor
aad
ret
dec
nop
lock
pop
sbb
aam
xorb
xor
outsl
fldenv
pop
test
jnp
outsb
xor
dec
adc
mov
cld
ja
stos
insb
into
pop
sti
lahf
mov
mov
lcall
movsb
dec
xchg
push
push
shll
mov
shll
push
lods
jmp
aad
inc
adc
push
out
or
jp
add
sub
jmp
sbb
push
nop
dec
pop
outsb
adc
addl
int3
sbb
adc
add
mov
xor
enter
lret
cmpsb
imul
mov
jle
imul
dec
scas
add
dec
aas
call
in
push
lods
push
dec
test
mov
xchg
push
dec
addb
mov
addr16
in
mov
jno
fisubrs
push
or
sahf
or
popf
incb
pop
mov
test
xchg
arpl
popf
out
es
ret
pop
jns
inc
inc
test
int3
xor
inc
fdivrl
add
pop
inc
xchg
jne
lret
jne
movsl
mov
in
aad
outsw
and
cmpsb
sub
sarl
xorl
int3
test
cmp
push
add
and
sti
xor
hlt
inc
movsb
and
mov
push
xor
xor
sbb
orl
nop
outsb
lret
mov
rorl
sahf
pushf
lods
mov
out
arpl
and
xchg
adc
xchg
fdiv
mov
bound
jg
aas
inc
inc
loop
sbb
jb
cmc
add
xchg
aas
popa
or
or
in
loope
dec
jmp
lcall
enter
cmpsl
mov
pop
jns
jnp
xchg
ss
das
xchg
or
push
push
push
mov
daa
rol
inc
in
mov
sub
cmpsl
fmull
push
popa
rcr
into
jae
push
popa
jl
decl
lahf
push
jg
sub
ret
out
cmpsb
clc
shlb
pusha
jmp
push
scas
cwtl
xor
jnp
neg
jge
jnp
or
mov
and
jg
adc
inc
dec
popf
lahf
mov
pop
std
add
mov
stos
inc
mov
test
pop
xchg
pop
mov
sahf
push
adc
mov
loopne
aas
cmp
jl
and
inc
jmp
xor
faddl
sub
sub
gs
mov
inc
mov
sbb
loop
test
fsubr
mov
aad
adc
mov
cmpsb
aas
scas
das
arpl
subb
xchg
sub
cmpb
ja
or
jnp
inc
outsb
and
imull
or
sub
and
cmp
xchg
test
icebp
and
or
mov
push
out
push
movsl
ljmp
adc
xor
adc
xchg
int3
and
shrl
and
sbb
sbbb
jg
sbb
lret
jns
sbbl
insb
adc
push
cmpsl
adcb
js
mov
add
cld
sbb
sahf
push
mov
sbb
test
jne
adc
addl
repz
imul
jmp
mov
xor
popa
pop
jp
insl
pop
dec
xor
int
cltd
dec
mov
adc
outsl
in
out
inc
pop
shlb
mov
push
add
mov
aam
and
pop
shlb
or
test
popf
ret
or
cmp
jmp
pop
and
push
in
mov
cmc
roll
lret
xchg
in
in
xchg
inc
mov
mov
dec
into
sbb
lea
adcl
cmp
mov
lret
cs
push
jns
pop
out
jp
pop
in
adc
jle
push
or
stc
outsb
cmp
and
outsb
dec
in
add
sub
or
ljmp
shlb
mov
add
mov
and
dec
ret
ret
push
sub
or
mov
dec
iret
enter
jecxz
xor
popl
mov
lret
mov
dec
mov
outsl
xor
in
test
xchg
gs
aad
jb
jmp
cmpb
aad
sti
in
cmp
adc
mov
inc
fistl
or
dec
mov
aaa
pop
aad
mov
sbb
dec
push
pop
mov
call
cmp
lods
push
jl
pusha
bound
sub
outsl
jns
rcrl
out
pop
jb
sub
nop
aas
cmp
shll
inc
mov
fdivr
shrb
outsb
fidivs
inc
jno
jecxz
sub
jecxz
inc
add
les
outsl
push
inc
cs
or
loop
push
sahf
dec
jo
pminub
mov
sti
or
out
es
jge
jl
pop
push
ss
icebp
add
mov
adc
mov
push
in
fistps
adc
stos
inc
fistl
xchg
push
mov
xchg
aaa
addb
aam
mov
pop
dec
inc
repnz
fisubs
dec
outsl
pop
fists
pop
dec
rcrb
jg
push
fldlg2
stos
sub
adc
roll
mov
cmc
ljmp
cwtl
cmc
sub
add
pop
ret
mov
lods
adc
xlat
rcrb
mov
jecxz
sbb
lret
in
cld
gs
ror
iret
mov
inc
ja
mov
repz
mov
cwtl
sti
cs
testl
cmp
dec
mov
cmp
mov
lea
leave
adc
xor
xor
adc
test
xchg
and
mov
pusha
jae
pop
jb
pop
fisttps
mov
sub
pop
mov
imulb
lds
sbb
andnps
lcall
ret
inc
insb
inc
jb
scas
sarl
imul
lock
xchg
sti
fidivrs
enter
add
xlat
int
insl
repnz
xchg
lret
ds
std
jno
and
add
adc
mov
jp
sub
test
inc
mov
and
into
nop
iret
rcll
ja
pop
mov
repz
pusha
jno
fistpll
push
cltd
pop
dec
add
add
scas
pop
adc
push
lods
add
cmp
mov
inc
imul
cmpsl
outsl
mov
inc
mov
inc
adc
mov
or
add
dec
pop
out
fs
cmp
outsl
jae
mov
bnd
std
mov
xor
sbb
inc
es
mov
movsb
pop
hlt
decl
shll
jmp
int
mov
jbe
xor
ss
sub
sub
cltd
test
jp
loope
scas
pusha
cmp
loope
scas
push
pop
cwtl
lds
cs
xor
xor
lahf
enter
bound
loopne
jg
sub
dec
fiadds
cmp
mov
or
add
xor
push
or
push
lret
adc
sbb
xchg
aad
enter
bound
lret
adc
xor
aam
cmpsw
inc
push
cmpsb
stc
shrb
lcall
outsb
mov
adc
mov
out
sub
cmp
das
cmp
jbe
xlat
popa
inc
push
stos
clc
or
sbb
mov
pop
mov
cmpsb
test
and
aam
sbb
je
inc
xchg
arpl
imul
iret
mov
jns
incb
cli
pop
dec
inc
aaa
fidivrl
mov
cmp
gs
cwtl
loop
mov
pushf
jl
repnz
filds
sub
inc
dec
jno
sub
test
or
push
inc
scas
sbb
subb
push
out
add
fcompl
jp
jge
inc
push
inc
jle
push
aaa
in
fdivr
sbb
cwtl
pop
and
lcall
ja
and
or
mov
cmp
sbb
sti
inc
or
jge
sbb
faddl
xor
sbb
add
call
dec
sub
pusha
dec
pop
iret
cmp
or
je
popa
mov
aam
into
out
and
mov
jge
std
je
int3
and
in
pop
in
add
xchg
and
scas
jle
outsl
mov
and
ja
jg
dec
rolb
lret
popf
shl
ret
cmpsl
xor
jb
sti
je
jle
bswap
push
stos
xchg
cmp
lods
repz
push
ret
jae
bound
pop
testl
stos
mov
test
test
js
mov
push
jnp
and
outsb
xchg
je
jecxz
stc
cltd
rcr
add
xchg
cwtl
or
adc
or
data16
std
or
fisubl
mov
add
mov
xchg
movsl
push
xchg
fstl
mov
aam
int3
adc
dec
popf
aaa
inc
inc
push
shlb
cmpsb
hlt
repnz
and
lds
pop
mov
js
mov
insb
dec
xchg
lock
sub
dec
push
call
mov
loope
les
mov
push
sahf
fwait
inc
lret
int3
stos
fcmovne
dec
idivl
pop
push
mov
imul
jge
or
ljmp
and
push
push
mov
xor
nop
mov
jmp
std
and
adc
xor
mov
cmp
sbb
inc
mov
xchg
cmp
inc
adc
mov
icebp
dec
ret
mov
adcb
test
and
mov
xor
push
jp
aad
inc
out
out
int
pop
inc
xchg
cltd
and
les
pop
inc
cltd
inc
sbb
push
adc
push
inc
and
ja
movsl
btr
jb
std
inc
cmp
lcall
jmp
xchg
movsb
call
sti
fidivl
xchg
sti
std
cmpsb
push
cmpsl
add
mov
jne
leave
sbb
gs
out
lcall
lcall
orb
leave
fsts
mov
ljmp
test
sub
inc
stc
mov
mov
sbbb
loopne
mov
pop
sub
lcall
dec
mov
loope
cmpsl
loopne
fisubs
sbb
mov
out
jno
and
repz
mov
nop
pop
xchg
test
data16
push
arpl
adc
addr16
lcall
xorl
inc
and
mov
mov
repnz
out
inc
sbb
in
jne
push
cmpsl
mov
cmp
mov
dec
mov
cltd
popa
push
repnz
sub
sbb
jbe
inc
pop
clc
shlb
bound
repnz
adcl
dec
ret
gs
out
mov
sbb
or
incb
inc
fsubrs
xor
and
rorb
jae
stos
adc
push
mov
gs
or
sbb
pop
jbe
sub
mov
or
or
pop
mov
jle
cs
fldt
inc
scas
jg
adc
leave
mov
subl
cld
mov
sbb
dec
pop
push
sub
mov
fcomi
into
test
sbb
aas
mov
inc
test
fdivl
daa
adc
xor
xorb
out
sbb
pushf
xchg
bound
lods
mov
push
sub
inc
xor
push
ret
mov
mov
fisttpl
inc
mov
aaa
and
dec
lds
xorl
push
shr
or
aas
adc
jmp
cmp
cmpsl
sub
fstpl
stc
mov
sub
ret
and
fwait
test
aas
adcl
or
fwait
lahf
ja
add
call
out
dec
sahf
add
and
shl
xorl
xchg
or
std
sbb
mov
insb
cmp
test
aaa
dec
jmp
push
testl
int
icebp
xor
add
cmpsl
mov
or
imul
mov
std
fmull
enter
fsubs
xchg
sbb
jno
and
mov
std
ds
cmc
pop
std
push
mov
nop
mov
sub
inc
push
scas
out
stos
sub
push
in
imul
fistpl
adc
clc
mov
test
jmp
fwait
sti
rorb
mov
adc
mov
or
js
cmpsl
outsb
sbb
adc
test
inc
shll
es
sti
xchg
add
jo
lcall
xlat
jns
outsb
mov
pop
sbb
arpl
mov
daa
jecxz
in
stc
ja
fisubl
lds
sahf
out
icebp
jb
mov
push
repz
mov
js
xchg
pop
les
adc
pop
mov
dec
add
dec
jne
int3
xchg
push
loope
je
fdivrs
dec
sbb
xchg
sbb
sbb
pusha
fwait
mov
int
pop
mov
test
loopne
in
shlb
out
sub
leave
ljmp
int3
lret
in
inc
pop
int3
mov
jns
in
push
in
fldcw
sub
xchg
sub
and
xchg
les
xchg
outsl
pop
xor
inc
fimuls
sbb
mul
test
movsb
mov
outsl
movsl
cmp
sbb
rorb
inc
xor
rcrb
and
ljmp
adc
sub
out
cmpsl
ljmp
out
mov
es
adc
mov
ret
pusha
outsb
or
xchg
test
adc
sbb
xchg
daa
push
sahf
lock
jns
mov
idiv
xor
cmp
jl
pusha
lods
mov
fdivrs
dec
lcall
lea
sbb
mov
ficompl
xor
or
xor
scas
and
dec
daa
pop
jp
fidivs
shrb
sarl
incl
and
jb
test
ja
fs
push
dec
addb
mov
push
mov
cmpsl
jp
outsb
lret
dec
stos
fstps
mov
adc
mov
test
movsb
add
add
es
jns
sbb
imulb
mov
sub
les
dec
cltd
ret
add
stos
pop
stos
dec
inc
xchg
jmp
pop
mov
fs
sbb
cmpsb
xchg
mov
jge
push
mov
mov
call
ja
pop
aad
sbb
adc
add
fs
pop
jmp
clc
ret
and
rcrl
rcrl
lret
xchg
in
imul
pushf
testl
pop
popa
incb
movsb
imul
or
and
pop
lea
cmp
in
loop
ret
fucomip
or
into
fld
add
dec
mov
addr16
jno
idivb
adc
mov
jae
lock
aam
push
movsb
das
fmulp
add
fisubrs
xchg
rorb
arpl
andl
mov
loope
cwtl
je
mulb
sbb
daa
icebp
cs
ljmp
sub
add
xchg
cmp
and
pop
inc
xchg
mov
lcall
lds
push
pop
icebp
sbb
cmp
fstl
and
jo
lds
mov
data16
aas
or
popf
mov
push
fstp
lcall
mov
cmpsb
xor
ret
rorl
add
out
pop
and
mov
cmpsl
dec
xchg
sbb
mov
sub
enter
aaa
cwtl
stc
ljmp
pop
fcomps
mov
cmpsl
pop
inc
test
adc
rcll
scas
and
cmpsb
movb
add
lock
sbb
push
lret
ret
sbb
dec
movsl
jge
cltd
sub
je
sub
mov
adc
das
andb
mov
cmp
cmp
pop
pop
inc
scas
mov
in
xchg
pop
into
or
add
and
add
adc
or
sub
repnz
pop
sub
lea
mov
inc
rcrl
stos
bound
out
scas
sahf
push
xchg
addr16
mov
push
insl
int3
cmp
pop
subb
outsl
xor
add
ret
test
xor
sbb
iret
int3
push
cmp
inc
negb
int
mov
dec
inc
cld
fimull
roll
es
push
faddp
jg
xchg
pop
pop
xor
jb
mov
mov
xor
add
add
shrl
popf
fstpl
adc
inc
and
mov
das
aaa
and
ret
fsts
stos
jp
cmp
push
cs
jbe
ja
fisubs
push
cmpsl
bnd
jne
in
add
jge
rclb
inc
push
loop
shrl
pop
mov
gs
jno,pt
loopne
loop
mov
call
jp
or
fcompl
aaa
loop
in
mov
dec
ret
shll
mov
push
inc
subl
fbstp
mov
push
movsl
sub
or
orl
push
pop
fwait
cmc
add
cltd
adc
lods
popa
in
scas
inc
or
xchg
xchg
add
adc
jae
inc
adc
adc
ret
movsb
sbb
jl
addr16
call
dec
jle
ret
stc
movsl
sub
in
mov
or
fnsave
xchg
fildl
inc
lret
jb
test
xor
push
subl
stos
ja
and
mov
lock
jno
ds
xor
fcomip
shll
loope
xor
shrb
ds
or
mov
cs
stc
gs
scas
mov
mov
test
mov
enter
mov
and
aas
cmpsb
or
or
or
fstl
hlt
inc
hlt
repnz
aam
jbe
push
mov
jl
jnp
sub
into
or
insb
pop
inc
popa
test
pop
mov
adc
push
repnz
sbbl
pop
xlat
faddl
push
pop
push
mov
xchg
lahf
call
xor
mov
xchg
int3
mov
cli
adc
mov
and
inc
addr16
mov
cwtl
mov
inc
sbb
sti
jg
int
or
xchg
mov
sbb
dec
adc
loop
jp
les
popa
fstps
pop
and
fwait
dec
push
push
popf
or
pop
lretw
jb
jl
mov
pop
mov
jle
scas
sub
xor
or
out
pop
mov
mov
adc
xor
pushf
mov
movsb
in
loopne
movsb
addr16
sub
push
mov
cmp
mov
aas
jecxz
nop
pop
xor
pop
push
enter
jecxz
es
dec
hlt
dec
rcll
das
loope
int
in
dec
lock
xchg
pop
addr16
popa
insb
imul
dec
mov
lods
push
mov
fiaddl
shrd
in
ficompl
xchg
mov
pusha
div
out
jg
pop
cmp
xchg
cmp
lea
pop
inc
jae
mov
rcrl
mov
les
xchg
aad
incb
add
cmpsl
or
stc
or
mov
int3
leave
sub
xchg
stos
pushf
add
mov
pop
stos
lock
in
adc
mov
mov
sbb
xchg
push
dec
adc
xchg
cwtl
mov
add
jnp
or
push
xor
jge
jne
adc
call
mov
cmp
fsubl
jle
pop
jp
mov
loope
sarb
fbld
lods
rorl
sbb
inc
insl
xchg
jmp
int
sti
inc
mov
test
jge
jp
dec
dec
dec
bound
or
movsb
adc
int3
inc
pop
mov
cmp
xor
aas
jl,pt
in
sahf
mov
scas
mov
stc
mov
mov
or
push
sub
push
fiadds
jg
jns
xchg
in
out
xor
push
add
add
jle
loop
mov
jp
inc
mov
daa
mov
mov
sar
jl
push
lock
ret
ret
fcomps
sbb
or
loopne
jns
out
fdivp
cwtl
mov
fstpt
pop
adc
mov
push
add
xor
sub
in
pushf
test
lock
pop
sti
loope
std
sub
jb
loope
pop
push
sub
or
inc
notl
or
jp
push
repnz
pop
cmp
test
cmp
and
loop
sbb
sbb
and
push
pop
inc
mov
fadds
sbb
push
jb
les
dec
mov
out
jbe
mov
cli
mov
popf
divl
test
fldenv
lods
aaa
or
std
movsl
lods
mov
imul
aaa
xchg
sarl
fildl
fsubrl
sub
xor
call
out
and
xchg
sbb
jmp
fbstp
jge
push
movsb
movb
lcall
inc
cmp
xchg
mov
inc
and
push
or
jmp
sbb
mov
jo
sbb
push
mov
jns
mov
nop
shll
xchg
test
ja
mov
aad
fwait
das
divb
mov
xchg
xchg
push
enter
mov
pop
das
adc
jecxz
inc
xor
std
push
sbb
sub
andl
pop
pop
cs
xlat
inc
pop
or
aas
lret
add
inc
add
adc
ret
mov
jo,pt
imul
cmpsl
jp
push
jl
ljmp
mov
xchg
cmp
loopne
cwtl
fdivl
sbb
mov
outsl
xchg
in
cmp
hlt
popa
xchg
and
mov
cltd
mov
clc
loopne
call
outsb
daa
sub
jmp
shl
add
cld
inc
stos
add
dec
sub
xchg
je
sbb
sahf
insb
adc
adc
mov
inc
sub
jno
cld
cmc
fucomip
dec
aas
es
outsl
stc
mov
mov
or
dec
sahf
or
sub
cmp
pop
push
inc
and
iret
scas
ret
test
test
mov
inc
gs
xor
roll
adc
scas
lods
push
mov
rcl
test
int3
adc
push
ud1
and
repz
or
fbld
ret
out
sbb
in
pop
sub
and
cmpsb
add
insl
rcll
xor
xchg
xor
cli
pop
jno
jb
pop
loope
inc
gs
ds
ficomps
add
mov
lret
cmc
lahf
out
mov
sub
mov
daa
xor
cmpsb
push
scas
xchg
imul
mov
sbb
adc
hlt
clc
push
je
mov
fildll
mov
insb
clc
clc
in
in
into
imul
jbe
fs
or
outsl
call
rcr
out
loopne
idiv
push
scas
pop
test
xor
inc
movb
inc
lods
out
inc
lods
test
cld
xchg
scas
loopne
test
push
stc
lds
dec
and
ljmp
arpl
leave
add
aaa
sbb
cmp
daa
call
iret
cmp
dec
hlt
stos
mov
fwait
imul
mov
gs
cwtl
cmc
fprem1
jb
mov
fisubrs
xor
cmp
dec
lods
scas
icebp
aaa
dec
mov
int
dec
out
cmpb
xor
clc
cmc
out
test
dec
xchg
insl
imul
pop
out
pinsrw
sbb
aam
mov
pop
enter
shll
bnd
popa
sub
rcll
sarb
adc
sub
pop
out
call
sbb
pop
xchg
lods
icebp
in
scas
aad
pop
fs
fiadds
xor
sub
cs
rorb
in
mov
in
fwait
arpl
call
dec
add
lock
mov
out
adc
les
push
sbb
enter
loop
sarb
bound
sbb
xchg
pop
cli
stos
cmp
cltd
inc
or
adc
arpl
insb
and
and
xor
enter
clc
movsl
dec
sahf
iret
or
cmpsb
pop
mov
jnp
loopne
out
jmp
mov
testb
stc
xchg
daa
cwtl
push
aam
push
add
cmp
and
pop
incl
arpl
push
dec
or
inc
cmp
dec
inc
sub
xchg
xchg
adc
orl
pusha
jecxz
mov
rcrb
push
or
pop
mov
sahf
mov
stos
bound
push
and
push
inc
mov
jl
insl
inc
movsb
bound
xlat
push
int
flds
adc
or
shlb
sbbl
mov
ljmp
pop
fsubrs
pop
repnz
int3
stc
xor
pop
andb
popf
imul
mov
jle
sub
mov
iret
loopne
mov
sbb
in
sbb
lods
rorb
push
fsubs
aam
cwtl
movsl
sub
cli
or
das
lahf
cmp
lds
mov
xchg
mov
inc
icebp
inc
ss
mov
xchg
adc
mov
mov
pushf
sub
lods
jb
mov
xlat
rclb
sbb
pop
aad
js
mov
mov
daa
imul
mov
xchg
and
mov
jle
push
xchg
aad
int3
jmp
add
xchg
and
int3
dec
mov
mov
adc
cld
or
push
outsl
or
in
imul
ror
pop
leave
loop
xor
push
fsubr
sbb
dec
shlb
mov
insb
xchg
sbb
pop
and
push
ffreep
cmp
into
sbb
or
cld
ja
jae
adc
lret
mov
push
dec
pop
or
xor
push
aas
cli
pop
lahf
ljmp
lcall
imul
test
cli
jmp
stos
in
and
pop
mov
inc
mov
orl
jae
loopne
into
aaa
popf
nop
and
xor
pop
cmpl
and
jns
cmc
addr16
inc
ds
movsb
ret
ds
sbb
rcrb
ljmp
cmpsl
cmp
and
mov
mov
xor
call
inc
xchg
nop
hlt
stos
dec
push
sti
xor
outsl
mov
lock
negl
mov
rclb
rclb
add
nop
push
popf
movsl
ss
xchg
shlb
push
adc
mov
push
movsb
cmp
std
arpl
flds
or
cmp
push
negl
jmp
subb
sub
fsubl
jnp
movzbl
push
dec
jp
inc
iret
ja
xchg
jecxz
sbb
mov
fcomip
loop
ljmp
push
addr16
push
adc
jo
in
add
pop
cmp
adc
xchg
sub
imul
mov
jnp
decb
jno
outsb
movsl
inc
mov
inc
adc
js
aaa
mov
sub
pop
xchg
lahf
movsb
inc
divl
pop
dec
mov
jno
shrl
or
pushf
dec
xchg
mov
imul
push
leave
mov
repz
mov
mov
xchg
cmpb
sbbb
lahf
mov
test
pop
paddusb
iret
psubd
das
outsl
xchg
mov
cmp
rorb
or
jp
mov
xchg
or
sub
test
stos
int3
aas
inc
in
lcall
stc
dec
or
enter
gs
mov
stos
jge
or
lret
mov
inc
inc
xor
divl
repnz
rclb
sbb
dec
orb
xchg
dec
leave
or
sub
push
mov
cmp
fmull
adc
or
int3
movsb
lods
es
mov
lret
push
insb
xor
lcall
outsb
push
test
pop
enter
lock
divl
loopne
and
push
mov
test
sbb
das
cld
ljmp
outsb
jmp
js
movsb
mov
cmp
push
dec
cmp
xor
daa
jl
call
sub
dec
jno
mov
push
lods
ljmp
cmp
mov
stc
dec
lret
movsb
and
pop
xor
sbb
sbb
add
xchg
pop
jnp
fsub
test
jmp
push
cmp
rorl
push
jbe
jne
mov
pop
push
rorl
mov
dec
sub
sub
sti
or
cwtl
pop
jmp
jg
ficoms
or
cmp
repz
sahf
xchg
pushf
jl
ficomps
fsubrl
shrb
imul
lea
pop
sbb
or
mov
jns
or
and
fmulp
adc
shrb
jae
outsb
rcll
aas
add
roll
sbb
inc
icebp
stos
sub
push
mov
aas
aad
lret
jg
aad
cmp
and
scas
orb
cmp
sahf
mov
sub
stos
dec
pop
lods
sub
lock
push
je
repnz
flds
das
adc
imul
int
dec
negl
imul
xor
add
cmp
stc
addr16
xorl
push
sysret
stos
jge
mov
mov
or
shll
jecxz
scas
xchg
jbe
scas
sbb
gs
lret
push
leave
xchg
stos
jno
push
dec
pop
add
ja
xchg
rcrb
jge
mov
jb
dec
int
xor
negl
cmp
inc
ret
data16
push
test
pop
paddq
je
xchg
dec
mov
xchg
mov
shll
sub
push
mov
shrb
mov
and
xor
inc
sbb
push
and
stos
call
aam
imul
push
scas
hlt
jnp
cmpl
rcl
daa
int
stc
sbb
pushf
push
push
lea
jne
mov
pop
xor
mov
aad
sbb
add
cmp
mov
add
fwait
and
ljmp
scas
xchg
xlat
lcall
pop
jmp
and
jae
pop
imul
jbe
hlt
imul
fcomps
pop
sbb
mov
stc
icebp
les
arpl
dec
xor
fs
sbb
sub
sbb
mov
out
xchg
adc
and
and
mov
scas
sbb
add
fstp
mov
sub
xchg
xor
xchg
sub
pop
gs
daa
mov
cmpb
mov
push
push
cmp
cmp
fstp
cmp
sub
push
jmp
iret
movsb
dec
test
ret
xchg
idiv
jnp
mov
xlat
add
xor
adc
jl
mov
lcall
jle
jl
mov
js
dec
punpckldq
insb
int
je
xor
in
subb
mov
outsl
js
sub
xchg
fisubrs
or
lods
fldcw
cmp
pop
sbb
cld
xchg
cmpsl
sbb
push
adc
popf
sub
iret
pusha
and
std
jmp
paddsb
push
out
das
ret
lock
call
fs
stos
mov
jne
push
mov
sbb
cwtl
adc
outsb
add
xor
sub
ret
lahf
adc
bound
jg
jno
ljmp
sbb
pusha
mov
or
xlat
and
jmp
test
jae
cmpsl
add
loope
pop
pop
cmpsb
outsl
sub
pop
or
mov
add
mov
push
pop
ja
mov
push
mov
xor
sbb
sbb
repnz
push
and
add
mov
xchg
jno
xchg
fnstenv
add
adc
xlat
inc
jae
adc
cmpl
inc
inc
jl
ds
sahf
std
outsl
jbe
push
inc
ja
ds
test
out
dec
cmpsb
push
cmc
out
inc
sbb
dec
and
cmp
int3
xchg
daa
pop
pop
push
aam
mov
lcall
pop
dec
ljmp
test
js
cmpsl
mov
popf
xchg
or
xchg
cmc
lret
shll
inc
shl
jb
xchg
clc
or
les
cmp
bound
jmp
jnp
mov
mov
mov
cmp
test
xor
popf
mov
push
adc
stos
rcl
arpl
push
mov
cmp
jb
bound
cmp
fs
outsl
xchg
fcomip
loopne
add
dec
mov
fidivrl
inc
cwtl
push
ds
in
fisubl
imul
xor
bound
aaa
in
xlat
inc
shrb
jg
push
add
jg
stc
cmp
scas
xor
fstpl
mov
and
hlt
bound
dec
jecxz
std
sub
jmp
dec
iret
cmp
cmpl
jle
pusha
xor
xor
and
inc
lret
sbb
mov
inc
xchg
test
out
ljmp
push
cwtl
in
enter
daa
das
inc
jecxz
fsubs
in
shlb
sahf
js
sub
cs
jmp
sub
mov
aam
xor
xor
repnz
lcall
jnp
fstps
adc
int
test
push
idiv
sub
sub
loope
sti
xor
sub
jg
test
dec
frstor
test
pop
add
cs
stos
scas
pop
sub
dec
mov
sbb
lock
xlat
mov
jo
jmp
and
outsb
mov
lret
mov
sub
sub
shlb
xor
xor
repnz
in
sahf
fldt
js
sbb
push
mov
add
add
jnp
cwtl
nop
jne
imul
mov
or
inc
add
mov
mov
inc
lcall
mov
and
shll
aas
cmp
xor
ljmp
pop
push
jae
push
xorl
loope
sbb
popf
push
js
inc
repz
popa
mov
jmp
test
fsubs
cmp
aas
test
jne
stc
inc
jg
add
inc
inc
testl
dec
jne
test
inc
test
icebp
sub
adc
sbb
mov
imul
in
and
stos
mov
xchg
daa
data16
cmp
xchg
mov
pop
fidivrl
sub
xchg
jg
xor
sbb
xor
xchg
add
out
cmc
cmp
pop
popf
in
jmp
insb
mov
stc
lcall
sbb
stc
sbb
in
cmc
pushf
daa
pusha
imul
pop
cmp
or
lods
xor
test
arpl
push
push
add
jecxz
jo
aam
lock
inc
or
dec
in
jns
ret
sub
jg
xor
outsl
pushf
sub
lret
movsb
sub
das
nop
cmp
cmpsl
inc
lods
cwtl
mov
outsb
out
lea
mov
fdivs
or
jle
push
sbb
jnp
and
sti
push
jp
mov
cld
dec
mov
jl
mov
cmp
push
lods
loopne
fld
push
and
push
inc
scas
scas
jge
mov
aas
xchg
ss
outsl
jmp
add
dec
jno
push
je
test
xchg
lret
fcmovu
cmp
adc
ret
pop
dec
lahf
dec
mov
or
gs
arpl
mov
push
out
xchg
jg
loopne
pop
imul
ja
sbb
jb
mov
int
inc
js
adc
mov
cmp
xor
dec
xlat
cmp
loope
add
push
out
inc
sbb
test
jno
cmp
add
ds
mov
mov
dec
movsl
sub
pop
test
ror
out
loop
gs
lret
movsb
lahf
cmp
movswl
hlt
mov
je
aam
rol
xchg
ret
es
jle
imul
hlt
gs
mov
inc
xor
cmp
bswap
es
pop
ja
inc
mov
std
loopne
add
xor
stos
mov
ret
inc
addr16
cmp
test
mov
dec
addr16
sub
mov
outsb
sbb
into
dec
shlb
cli
xchg
cmp
incb
jo
ss
push
push
or
or
xor
pop
dec
mov
cli
pop
mov
and
jmp
test
push
jns
aas
adc
mov
push
sub
pop
add
push
les
ds
dec
jecxz
push
ss
outsb
addr16
cmp
push
lret
into
jl
jb
pop
loope
gs
lcall
icebp
or
pop
jnp
jmp
xchg
inc
inc
sbb
xchg
insl
fimuls
add
ja
test
xchg
arpl
dec
mov
enter
cmp
in
add
fs
cmpsl
push
or
fsubp
dec
aaa
aaa
in
pop
xchg
lret
outsb
push
push
shll
loop
jno
outsl
fimull
and
clc
mov
cs
icebp
push
xor
adc
stc
mov
jecxz
sbb
popa
adc
sbb
pop
lods
mov
add
cwtl
data16
and
lea
fildl
add
mov
popa
fsts
or
mov
jo
ret
dec
xor
fcmove
or
and
pop
jae
inc
rcrb
fs
xchg
or
lea
dec
je
sbb
cmpb
pop
mov
out
mov
pop
and
imulb
adc
mov
movsb
xlat
aaa
movsl
or
push
cmpl
jno
mov
push
or
pop
jnp
cwtl
cwtl
out
adc
inc
xor
xchg
test
xchg
sub
sahf
push
jecxz
push
dec
or
adc
jmp
mov
out
das
lahf
mov
add
cmpsb
xor
das
or
xchg
mov
repnz
hlt
mov
pushf
push
nop
sub
sbb
mov
dec
and
sub
sar
addl
cmp
int
negb
mov
sub
inc
adc
nop
inc
xchg
aaa
and
jo
in
ljmp
adc
pop
fdivl
add
mov
xor
sbb
dec
jnp
mov
call
cs
movsb
out
imul
lea
repnz
in
sub
push
add
adc
not
mov
loopne
daa
insl
mov
jge
inc
orl
cmp
leave
add
nop
push
jle
mov
adc
xchg
pop
js
enter
inc
repz
sbb
push
ret
lock
cmp
add
cs
jp
pop
je
shr
push
cmp
rorb
imul
iret
xlat
test
xor
sub
sub
pop
jg
lds
cld
outsl
xor
pop
ss
dec
and
ljmp
xlat
cmpsl
xor
mov
jmp
inc
sbb
movq
aam
mov
sub
test
jne
add
sbb
mov
sbb
pop
not
shlb
lcall
loopne
push
mov
push
fwait
inc
lret
fisubrs
fs
add
jle
div
mov
lret
sub
in
mov
jnp
movsb
or
inc
push
lcall
lret
or
jl
cmpsb
inc
jmp
sahf
dec
sub
clc
or
and
sbbl
and
faddp
mov
out
jle
dec
cmpsb
sbb
outsb
pop
test
popa
adc
mov
adc
adc
sbb
xchg
add
sub
cs
inc
fsubrl
jbe
out
pop
inc
jmp
mov
pop
pop
sub
xlat
mov
or
mov
jo
jne
popf
movsb
inc
fmull
sbb
into
je
out
mov
andb
mov
cmc
sbb
outsb
ljmp
lods
loop
inc
addl
arpl
outsb
jns
jne
xor
mov
into
les
test
lods
xor
lahf
or
dec
imul
mov
push
mov
mov
adc
out
imul
out
gs
inc
or
cmc
sbb
dec
mov
ljmp
les
or
mov
adc
out
loope
cld
jl
sarb
jmp
lods
jg
fs
xor
nop
lahf
arpl
negb
imul
or
mov
adc
jae
imulb
clc
add
jmp
fs
lret
enter
les
stc
xchg
jo
stos
test
jnp
sub
rcr
aam
cwtl
xchg
iret
out
pcmpgtb
add
cmp
arpl
es
and
repnz
movsl
push
imul
int
out
arpl
adc
add
outsb
js
mov
lds
pop
ds
or
mov
imul
and
imul
adc
pmaxub
mov
or
js
adc
std
jle
xchg
push
adc
mov
add
in
out
popf
inc
xchg
ret
aas
mov
mov
mov
pop
out
xor
or
in
cmp
jbe
cmpsl
arpl
cli
pop
add
fcmove
mov
std
cli
out
sub
je
jbe
or
adc
mov
in
cmp
xchg
rorb
cltd
adc
outsl
cmp
mov
add
incl
popf
push
push
xor
pusha
imul
xor
in
or
mov
push
outsl
dec
dec
jp
and
fistpl
or
mov
cmp
sub
pop
bound
test
out
dec
dec
test
jo
adc
rorl
iret
aaa
fcompl
and
or
dec
fidivs
mov
dec
adc
fs
orl
cltd
lret
fadd
nop
add
jae
or
cmp
dec
ss
mov
push
pushl
push
cld
test
adc
jnp
adc
add
fidivrl
cmp
mov
sahf
stc
mov
sub
inc
dec
repz
insb
push
cmc
add
cltd
fs
xor
inc
dec
jo
insl
dec
pop
jmp
push
sahf
cmpsb
xor
xchg
std
gs
imul
cli
out
nop
pusha
push
insb
es
pop
or
mov
jmp
cwtl
cmp
mov
add
loop
jbe
test
cwtl
vmaxpd
jae
cwtl
arpl
mov
mov
jb
nop
sbb
or
sub
mov
mov
push
pop
jo
push
push
cmovge
mov
sahf
push
scas
pop
pop
repz
xchg
pop
push
fmulp
jmp
and
mov
sti
pop
imul
mov
out
popf
filds
push
or
or
lea
add
scas
imul
out
fwait
cs
ljmp
xor
pop
adc
mov
push
cmp
out
out
inc
in
xchg
aam
pop
das
test
lcall
push
pop
adc
pop
cmp
or
or
mov
xor
mov
push
pop
lahf
ret
icebp
mov
sub
mov
dec
lods
push
adcb
xchg
adc
mov
fildll
sbb
popf
leave
fs
mov
scas
js
mov
pop
dec
sub
pop
jbe
cmpsl
dec
mov
adc
and
xor
out
dec
pop
jae
sub
mov
repnz
movsl
movsb
dec
mov
inc
mov
sub
sbb
sbb
pop
cltd
jnp
push
xor
xor
lods
jne
popa
pushf
das
mov
push
stos
mov
add
cmp
cmpsl
pop
inc
loopne
cltd
addr16
call
ret
lret
adc
lock
xor
ret
lahf
loope
sub
or
pop
dec
gs
daa
fsubrl
lock
dec
out
jne
sbb
mov
repz
loopne
jge
out
mov
out
mov
mov
inc
ss
movsl
aaa
mov
aad
jb
lds
or
fcomps
pusha
ja
jno
pop
sbb
cmp
inc
aaa
inc
aad
adc
mov
addr16
push
mov
xor
lock
adc
cmp
mov
cmp
mov
mov
pop
pop
mov
jp
jns
sub
xchg
jno
ja
inc
mov
inc
and
xchg
clc
aam
loope
sbb
orl
shll
mov
adc
jb
std
das
cltd
clc
cli
fidivl
outsl
imul
sub
rcr
ret
push
std
inc
mov
scas
ljmp
repnz
imul
nop
and
sbb
xchg
fwait
jb
fldenv
mov
push
insl
int3
cmpsb
xor
push
mov
adc
jbe
jge
xchg
push
mov
push
cmc
mov
stos
cmp
inc
je
mov
das
test
in
cmpsb
stos
cmp
xor
sbb
mov
adc
dec
jo
stc
push
cmp
dec
push
insl
mov
scas
cld
pop
dec
daa
outsl
xchg
inc
push
bound
mov
repz
push
push
stos
imul
add
sbb
mov
lret
stos
sbb
mov
dec
arpl
pop
gs
or
pop
sub
mov
mov
lret
sub
pushf
mov
in
sub
mov
fisubrl
stos
mov
pop
fistps
ficomps
xchg
jl
fidivrl
add
fcomi
stc
inc
adc
std
ss
push
aas
clc
push
daa
out
or
pop
fnsave
fadd
out
add
push
aam
mov
push
dec
mov
outsb
mov
mov
ss
and
arpl
aad
cmp
jnp
out
popf
out
mov
popa
push
mov
dec
pop
subl
jne
arpl
movsl
and
mov
repnz
xor
sbb
jae
pop
inc
pushf
roll
dec
add
sub
mov
scas
fnstcw
cli
pop
mov
leave
inc
shl
and
pop
mov
out
lcall
fwait
or
subb
ror
inc
sub
cmp
jne
pop
data16
fistpl
nop
mov
loop
dec
subb
mov
int3
mov
xchg
push
std
inc
dec
push
popf
ret
xor
fnstsw
cmp
sub
movsb
dec
xchg
mov
jmp
pop
sarb
cwtl
mov
int
xchg
dec
pop
mov
pushf
andl
es
jmp
dec
lret
lahf
test
inc
push
int
loopne
jle
push
mov
or
cmp
sub
sub
inc
jecxz
test
das
add
sub
xchg
inc
clc
stos
jecxz
scas
clc
dec
insb
outsb
ds
jle
pop
cmp
cwtl
and
cmpsb
in
jb
imul
cmp
mov
adc
mov
push
out
js
movb
xor
out
sbb
fs
inc
mov
pop
and
mov
mov
cltd
out
dec
xor
adc
jne
repz
push
cld
pop
inc
out
cltd
mov
lds
mov
adc
loopne
imul
ret
adc
cmp
idivl
shr
dec
popa
frstor
jge
add
or
push
xor
cmp
loope
jae
pop
jp
imul
add
xor
mov
fsubl
sbb
subl
dec
repz
imul
rolb
sub
sub
cmp
or
push
push
cs
pop
xorb
xchg
lret
xchg
in
push
jnp
xchg
sub
cltd
cmp
xchg
mov
mov
mov
rolb
mov
push
mov
sbb
imul
dec
negl
test
syscall
inc
bound
pop
es
pusha
test
mov
mov
sbb
jp
loope
scas
fdivs
out
sub
int3
and
ds
mov
arpl
or
push
stos
aad
sbb
enter
add
jo
inc
es
xchg
or
arpl
popf
insb
mov
popf
mov
mov
sub
mov
mov
test
push
shl
adc
stos
stos
add
mov
pop
add
test
leave
fadd
movsl
push
add
stos
jl
scas
and
das
in
mov
hlt
pop
mov
outsb
xor
in
mov
sbb
mov
sub
cmp
xor
movsl
loop
or
and
sub
int
iret
int
xor
cmp
pop
scas
adcl
sub
ja
loopne
inc
fprem
out
xchg
call
ljmp
sub
shrl
adc
out
shll
inc
repnz
pop
mov
outsb
sub
mov
jbe
mov
mov
pop
mov
and
or
daa
or
sub
scas
jbe
mov
fsubrs
dec
xor
add
and
adc
sbb
lret
sti
pop
mov
push
icebp
lds
ret
cli
adc
mov
mov
popa
test
aas
mov
fwait
lahf
push
xchg
fwait
adc
jmp
cmp
cmp
sbb
xchg
fs
mov
push
aam
out
das
lcall
cmpb
cmp
rcrb
jg
push
decl
lret
sbb
fldl
xor
lcall
sub
xor
sbb
pop
imul
add
stos
cmpb
dec
loop
in
ficompl
mov
cmpsl
in
sbb
aas
arpl
les
jns
xchg
jbe
idiv
lods
push
data16
adc
dec
jo
jg
xor
jbe
mov
xchg
or
lea
lds
cwtl
adc
ret
lcall
fs
cmp
add
imul
lahf
mov
lret
add
out
icebp
dec
xchg
arpl
pop
pop
push
jno
push
fdivl
pushf
sub
es
sti
out
hlt
in
sub
outsl
movsb
je
mov
xchg
sub
test
sub
mov
test
mov
xor
mov
imul
jns
lea
js
jecxz
int3
and
lahf
ret
mov
imul
pusha
lods
dec
imul
inc
xchg
pop
push
idivb
pusha
shr
jp
decl
aam
add
inc
sbb
or
data16
shr
mov
and
bnd
inc
imul
mov
jmp
jae
arpl
arpl
or
testb
fstp
sarl
xchg
or
mov
mov
push
in
or
rclb
ret
jbe
mov
sbb
pop
stc
sbb
popa
call
loope
flds
mov
adc
xchg
or
hlt
outsb
push
andl
xor
cmp
jp
mov
add
or
sbbl
or
imul
mov
lret
add
xchg
inc
mov
mov
movsb
xor
js
je
push
or
xor
and
lods
pop
shlb
cld
xor
inc
xlat
xor
int
ds
sbb
test
mov
stc
add
das
push
mov
lods
loope
jge
sub
call
int3
add
pop
cli
rclb
mov
mov
arpl
sub
roll
sbb
fwait
mov
pop
jecxz
xchg
add
mov
fs
jle
pop
xchg
loop
inc
xchg
mov
hlt
cmp
or
push
mov
mov
fwait
pushf
sub
loope
inc
cmp
cwtl
push
outsl
add
push
push
inc
cwtl
mov
xchg
push
mov
sbb
out
dec
rcrb
jecxz
push
imul
dec
dec
push
push
clc
mov
jno
sti
push
ljmp
pop
or
inc
pop
mov
and
jmp
popf
insl
gs
ret
push
cli
push
dec
lods
sbb
int
jle
fistpll
jnp
movsb
inc
xchg
fnstcw
mov
or
cli
pop
ljmp
xchg
sub
scas
pop
mov
lret
fwait
daa
in
outsb
cltd
popa
sub
jae
cmp
mov
outsb
xchg
push
jmp
mov
rolb
aas
mov
dec
push
mov
ja
sub
jg
es
sti
mov
stos
push
in
dec
push
pop
add
lods
sbb
and
fwait
add
add
push
cmpsl
lock
mov
lahf
hlt
xchg
sbb
add
cltd
insb
orb
dec
cwtl
push
testb
mov
sub
insl
xor
or
fwait
lods
cld
cmpsb
sub
std
cmpsb
sub
push
adcb
arpl
lods
jp
popa
ja
xor
sbb
xchg
out
dec
addr16
lods
sbb
mov
cltd
mov
inc
hlt
sbb
out
sbb
jno
or
movsb
pop
jns
and
out
fisubl
mov
adc
push
sahf
insl
daa
int3
pop
or
lret
jge
inc
sahf
iret
lds
inc
push
mov
dec
mov
sub
cmc
mov
add
push
xor
movsl
lods
xchg
cmp
out
push
xchg
in
pushf
ficoms
mov
push
test
or
repnz
pop
nop
outsb
add
roll
cmp
cmp
into
mov
inc
jl
push
ljmp
push
xor
inc
out
int3
mov
jnp
xor
fcmovbe
and
lcall
jnp
xor
cmp
adc
mov
ds
lcall
cli
sbb
add
add
in
loop
adc
inc
jae
or
mov
loopne
cmp
dec
and
mov
mov
rcrl
outsl
push
std
out
sub
loope
push
xor
xchg
xor
popa
and
inc
jmp
shl
fsts
cltd
test
push
jbe
adc
xor
fdivr
adc
sbbb
testl
and
dec
inc
mov
repnz
shlb
or
fsubr
mov
and
inc
xor
clc
lds
out
mov
jg
jmp
ficoml
xorl
xchg
add
push
inc
sub
adc
clc
dec
xorl
rol
dec
mov
ret
adc
mov
sub
sub
scas
loopne
cli
push
fistl
sti
dec
or
aaa
and
pusha
push
mov
iret
adc
arpl
adc
leave
adc
enter
sbb
cmpsl
mov
js
dec
in
fsubp
les
pushf
cmp
xor
rcr
sub
out
fisttpl
xorl
in
loop
push
cmp
add
in
push
lods
mov
cmc
mov
rorb
out
repnz
int
mov
vshufps
fiadds
call
daa
jns
xor
sbb
mov
insl
sub
mov
insb
movsl
pop
scas
fdivl
popf
mov
fidivrs
and
aaa
mov
push
shll
fsubrs
mov
cmc
cmc
lcall
icebp
add
lods
mov
dec
dec
shlb
lea
push
shlb
adc
xchg
test
ss
mov
dec
pop
xchg
fbstp
and
aaa
ljmp
adc
mov
mov
in
or
and
cmp
into
mov
scas
lea
dec
dec
add
clc
cmp
shrb
or
jmp
cli
xchg
ja
or
sub
xorl
lods
dec
movsb
sbb
js
je
push
mov
pop
loopne
das
in
jbe
int
fcom
btr
pop
push
ja
int3
and
jmp
dec
aas
inc
cmp
stc
mov
mov
add
push
jle
sarl
inc
dec
fsubrp
cltd
stc
jae
iret
push
jo
sub
addr16
out
lret
imul
movsl
sub
mov
jbe
mov
arpl
sbbl
xlat
xchg
aam
cmp
iret
test
fwait
sti
mov
es
cmp
sbb
jl
pop
bnd
test
iret
cmc
aad
mov
outsb
popf
cli
cltd
and
lea
cmp
sub
stos
lock
mov
mov
jmp
mov
es
fisttpll
adc
shl
ret
cli
cwtl
enter
cmpsb
ss
pop
jge
jne
jle
or
jmp
out
scas
negb
ds
xor
cmp
dec
adc
jbe
mov
mulb
mov
sub
sub
in
sbb
and
jecxz
fs
dec
cmpsl
pop
mov
mov
lcall
mov
mov
frstor
add
pusha
ret
jo
outsb
mov
add
rcll
test
jno
add
pop
pop
or
jle
std
pop
cmp
lcall
insb
dec
ljmp
xchg
push
divb
sbb
mov
cmp
and
push
mov
je
jno
cli
inc
sub
rcl
pop
into
dec
pop
stc
dec
addr16
cld
adc
pusha
jl
xor
movsb
scas
cmp
into
ret
xchg
loop
fldl
mov
add
out
cmp
ret
ja
shll
pop
push
leave
push
lret
jmp
jbe
pop
jecxz
push
aad
pop
push
mov
loopne
mov
out
arpl
mov
sbb
add
test
mov
and
xlat
mov
flds
js
mov
sti
mov
push
out
stos
mov
or
rcrb
xchg
pop
cld
inc
addr16
push
mov
sarl
adcb
xorb
or
xchg
lret
popa
or
add
push
mov
sbb
and
pop
or
int
out
daa
inc
or
adc
les
pop
adcl
and
push
iret
test
pusha
fsub
out
sti
scas
cmp
sbb
nop
notl
inc
or
jns
mov
mov
sub
stos
pop
xor
jnp
and
stos
cld
shr
rolb
rep
jo
pop
sbb
add
cmpsb
stos
xor
imul
fwait
xlat
pop
mov
sahf
gs
js
addr16
xchg
push
cli
xchg
test
outsl
out
push
jb
mov
sub
sub
mov
and
sbb
inc
add
pop
push
jb
cli
push
adc
mov
and
or
not
add
and
sbb
sub
xchg
stc
or
ret
pop
loope,pn
jae
sarl
insl
daa
cwtl
lret
pop
clc
pop
sbb
pop
lcall
lcall
or
push
dec
pop
mov
test
sub
sbb
ljmp
push
lods
call
dec
leave
mov
lahf
push
mov
mov
popa
bound
repnz
loope
adc
and
xor
sub
jns
jp
fnstcw
nop
cmpsl
mov
push
mov
pop
jb
shlb
mov
gs
xchg
inc
sbb
sub
mov
pushf
mov
lret
xchg
shl
mov
shlb
mov
jmp
shrl
dec
fstl
cmp
aaa
push
cmp
ficomps
inc
iret
test
or
xchg
popl
stos
jo
lret
hlt
jne
cmp
dec
xor
aas
xchg
fcomps
jae
cs
fnstsw
scas
jl
jns
and
xchg
sbb
sbb
clc
sti
mov
out
dec
daa
call
push
es
sbb
dec
sti
pop
fmull
mov
std
popa
stc
xor
mov
das
outsl
out
mov
aas
out
inc
fldl
imul
mov
icebp
decb
stos
mov
scas
mov
cmpb
cmp
dec
mov
push
push
nop
or
mov
mov
mov
sbb
sub
mov
sub
jmp
or
mov
jg
lock
cmp
sub
lahf
dec
shlb
int3
mov
stos
ret
adc
mov
pop
gs
out
adc
jae
psraw
sbb
es
lret
pusha
adc
xor
jno
or
mov
clc
add
pop
lods
out
ja
pop
imul
scas
mov
movsl
subl
jb
or
jo
fisttps
sub
or
icebp
dec
inc
arpl
jge
push
add
cmpsb
mov
push
add
jmp
test
sbb
mov
div
jle
adc
mov
or
sbb
pop
out
mov
mov
adc
sti
xchg
repz
and
and
sub
mov
jmp
lret
adc
scas
pop
jl
xor
and
adc
popf
push
aas
mov
shl
push
sarb
jne
adc
push
bound
in
cmc
les
and
jne
out
pusha
mov
mov
aaa
push
insb
mov
push
adc
das
mov
sbb
or
divl
in
lock
jbe
pop
aad
jo
or
adc
jb
mov
outsb
dec
cmp
ret
dec
out
es
jns
loop
test
push
xor
sahf
bswap
push
cmp
mov
mov
cmp
sub
jae
adc
mov
aam
xor
dec
movsb
pop
jmp
jg
repnz
cmpl
cld
rcrl
inc
in
outsl
and
sub
xchg
mov
lock
mov
pop
inc
js
rcrb
mov
push
add
in
repnz
out
lret
arpl
jle
jnp
cmp
mov
gs
mov
lods
mov
inc
subl
test
in
pop
shrl
fildl
ret
xchg
mov
ret
xchg
add
jbe
mov
mov
js
push
mov
imul
pop
mov
ja
pushf
mov
mov
stc
notb
sbb
push
fwait
add
sub
nop
fwait
jb
mov
aam
or
mov
loope
push
mov
adc
mov
mov
pop
mov
xor
sahf
rol
or
scas
fwait
push
cmp
jnp
je
cmp
mov
sahf
push
push
cmc
pop
sub
adc
push
xchg
mov
adc
rolb
pop
inc
inc
mov
bnd
test
cmp
in
mov
pop
xchg
cmp
add
inc
pop
cmc
out
xlat
mov
out
ljmp
outsb
into
out
mov
movb
mov
dec
jns
cli
movsb
dec
and
roll
in
or
dec
in
cmp
dec
arpl
add
fdivrs
call
sbb
fstl
popa
pop
xchg
mov
pushl
xchg
cmpsl
pushf
xchg
imul
add
inc
dec
stos
jne
aas
loop
imul
add
cmpsb
inc
push
clc
movsl
mul
ret
sbb
lock
pop
test
pop
into
add
cmp
movsl
sahf
add
and
fimuls
scas
adc
mov
jnp
test
push
pop
push
out
inc
mov
fwait
lds
mov
out
inc
dec
dec
push
sbb
push
inc
mov
aad
popa
pop
push
inc
daa
por
pop
mov
in
incl
lahf
push
insb
add
fcoms
mov
push
inc
leave
pop
test
jecxz
and
jae
jle
jle
jno
clc
movl
or
sub
aaa
lcall
sqrtps
daa
aad
mov
testb
out
lcall
jbe
inc
jae
mov
inc
bound
and
lock
decb
aad
xor
mov
inc
and
leave
mov
lahf
jbe
int3
sbb
aam
mov
push
push
mov
push
es
mov
fiaddl
lahf
xchg
xchg
fdivrl
sbb
cs
je
dec
cmpsl
fwait
push
xchg
mov
ret
bound
pusha
in
mov
jl
cltd
imul
ds
cmp
or
out
data16
lock
mov
xchg
xchg
xor
jb
inc
and
aaa
cmpsb
and
iret
movl
es
sbbl
sbb
nop
outsb
sub
scas
xor
or
subb
bound
or
je
jl
adc
addb
sub
mov
fwait
xchg
and
lods
ds
std
inc
lea
mov
inc
cmp
push
push
and
stc
ret
and
cmp
or
dec
das
addl
mov
jmp
sub
adc
or
jb
mov
fadds
loopne
js
out
int3
aam
jge
add
fisttpll
xchg
call
cmp
or
ror
test
stos
pop
fdivrs
outsb
cmp
mov
adc
push
int3
dec
pop
jno
mov
into
rorl
jge
cmc
popa
xchg
push
lret
loop
pop
xchg
gs
xlat
adc
xchg
mov
xor
xchg
and
les
cmp
scas
rcr
sbb
push
cmp
push
ljmp
add
mov
push
ret
push
adcl
dec
call
sbb
or
imul
mov
cltd
jmp
out
fdivl
fidivrs
mov
lods
push
jb
test
sub
daa
imull
addr16
ljmp
pusha
xchg
cmpsb
xor
jmp
xor
nop
dec
notb
gs
add
lret
test
pop
scas
mov
mov
pop
lea
pop
ret
or
push
push
dec
adc
cmp
add
loopne
inc
xchg
sub
sub
cmp
mov
divl
or
les
sbb
xchg
iret
fmull
mov
int3
fisttpl
insb
xor
xchg
cmp
popa
xor
mov
jle
leave
xor
sbb
jae
jecxz
popa
mov
mov
or
mov
ljmp
xor
mov
fs
add
loop
mov
xchg
jmp
adc
add
call
xchg
ror
inc
mov
aas
outsl
cld
jl
add
sbb
sbb
mov
out
dec
add
or
sub
pop
mov
rcrl
and
push
sarb
das
sub
add
scas
int3
call
xchg
dec
jmp
loope
loopne
push
fists
enter
leave
out
xchg
mov
jae
dec
data16
jbe
inc
sbb
inc
leave
pop
push
aad
jb
xchg
aam
push
sbb
push
sbb
stc
sbb
fst
cmp
into
cmp
mov
sbb
pusha
mov
stos
fwait
xlat
sub
sbb
aaa
lret
xor
iret
inc
cltd
pop
mov
mov
pusha
ror
fxam
mov
cmp
scas
and
mov
sub
pop
dec
dec
adcl
add
aad
xchg
cmp
ret
shrl
fildl
adc
inc
scas
ds
mov
push
and
cmp
mov
or
and
sub
mov
outsb
jmp
pop
cmp
and
out
jb
out
jl
into
mov
fstp
fwait
aad
jg
dec
je
int
cmp
pop
das
push
je
xlat
rcrb
scas
cmp
es
xchg
popf
test
xchg
pop
sub
inc
ja
pop
xchg
lods
mov
add
test
mov
rcll
shlb
add
mov
inc
call
stos
dec
inc
in
arpl
repz
fsubl
xchg
nop
mov
inc
jp
lahf
sub
jmp
aas
iret
insl
fstpl
sbb
ret
inc
add
out
adcb
jnp
xchg
je
aad
xchg
adc
jmp
outsl
mov
xlat
mov
mov
inc
push
mov
ja
bound
inc
scas
sbb
dec
jae
jne
loope
imul
je
inc
push
inc
sub
mov
dec
add
jecxz
cwtl
sbb
insl
jne
sbb
jnp
js
flds
in
inc
sti
push
mov
shlb
mov
adc
lods
and
sbb
dec
ret
insb
out
sub
repz
cli
mov
inc
lcall
in
cmc
mov
negl
mov
adc
xchg
cmpsb
and
scas
pushf
adc
inc
repz
push
lret
mov
mov
push
subl
push
jp
and
adc
push
in
in
adcl
addr16
nop
or
cmp
dec
scas
cld
adc
inc
arpl
rcll
mov
addl
adc
imul
mov
cwtl
into
lds
mov
pop
pop
mov
or
rcrb
rorl
inc
les
subb
mov
sbb
int3
jae
mov
mov
les
andb
int
cmc
push
xchg
int
call
or
and
outsb
lea
cmp
mov
sub
hlt
or
fldt
jne
lock
outsl
test
xor
inc
jle
sarb
add
add
jns
dec
push
pop
and
and
mov
stos
fs
movsb
cmp
mov
sub
ds
mov
out
lods
imul
jl
sub
mov
and
ret
jl
shlb
inc
mov
mov
std
and
fmull
push
fmull
fsubr
test
pop
jb
push
adc
xchg
inc
sub
xor
in
cs
movsb
pop
or
aam
cmp
mov
add
xchg
xsaveopt
cmpl
xor
xchg
out
cmpsb
lret
cmp
popf
xchg
hlt
scas
xor
mov
pushf
mov
pop
loop
inc
lcall
shlb
rcrb
out
xchg
rolb
movsl
and
stos
dec
push
mov
test
sbb
bound
out
fstps
push
test
inc
or
nop
mov
enter
adc
sbb
adcb
and
and
movsl
push
push
pop
adc
mov
les
adc
scas
hlt
iret
ja
pusha
sub
sub
pop
dec
mov
aad
clc
movsb
pop
jno
xor
cmp
daa
test
cld
xor
jne
mul
mov
shr
mov
or
sahf
lea
into
retw
imul
addr16
das
cmp
cmp
stc
mov
add
push
cs
pop
stc
call
xor
adc
cld
mov
and
es
inc
js
popa
and
lret
and
arpl
sbb
sbb
and
sub
in
pop
aam
lods
jnp
pop
movsl
xor
cmpb
pop
mov
lret
adc
pop
mov
getsec
cmp
inc
pop
or
push
adc
cmp
lcall
sub
jnp
xor
sbb
jnp
pop
jp
shll
inc
pop
xor
sbb
pusha
xchg
sbb
lret
fs
adc
lret
xlat
sub
outsb
pusha
xchg
popf
in
lods
jg
xchg
fs
xor
out
pop
xchg
aas
std
mov
inc
push
int
and
pop
mov
outsb
adc
fwait
xor
jno
push
pop
aam
xlat
div
sarl
xchg
dec
subl
iret
sub
jl
outsb
dec
lcall
ja
es
ficomps
int
in
mov
pop
cmc
int
jbe
cld
jmp
mov
xchg
lock
lcall
fcmovu
inc
in
jbe
insl
mov
repz
arpl
inc
movsb
es
mov
cmpsb
dec
ljmp
jae
decb
sbb
or
dec
add
lea
add
inc
shrl
ret
cmp
dec
xchg
xor
pop
gs
push
arpl
arpl
jg
call
cmp
push
jmp
dec
xor
enter
loope
jecxz
push
xor
mov
fldcw
jno
ret
xchg
mov
cmc
adc
mov
xor
xor
push
push
xchg
daa
xchg
mov
in
xchg
mov
mov
iret
cli
mov
cmp
dec
mov
sub
shrb
leave
inc
or
sbb
inc
aam
mov
pop
fcomps
sahf
call
shlb
lods
pop
pop
and
idivl
leave
dec
std
aaa
scas
mov
xchg
shlb
cwtl
add
fiadds
jbe
fbstp
rolb
aad
xacquire
mov
rorl
jl
fs
xchg
jp
loope
sahf
pop
test
into
rcr
pushf
imul
sub
sbb
dec
aas
test
xor
aam
jl
loopne
ja
push
push
int
or
mov
outsb
dec
sbb
stc
or
jno
inc
jecxz
outsb
fbld
mov
inc
ficomps
mov
sub
mov
dec
mov
cld
in
mov
movsb
sbb
es
sub
push
nop
inc
fucomip
and
cmp
jo
xor
mov
shll
sub
pusha
lea
movsl
push
push
jmp
in
sub
pop
outsb
imul
out
push
imul
sbb
mov
movsl
or
aad
leave
sbb
inc
ljmp
push
jno
lahf
jno
shll
xchg
orb
insb
shrb
and
ret
in
or
pop
inc
dec
pop
jns
loopne
dec
decl
push
xchg
outsl
hlt
pop
xor
and
xchg
shlb
bound
push
pop
in
std
jge
inc
mov
outsl
nop
inc
add
loop
ficoms
or
jp
cltd
jmp
idivl
loop
repnz
adc
in
sub
insb
enter
ja
scas
loop
push
sub
mov
cmp
sub
xor
mov
push
hlt
mov
cmpsl
out
sub
pop
xor
inc
outsb
cli
in
mov
adc
and
imull
stc
scas
push
cmp
iret
xor
push
fst
iret
inc
maskmovq
idivl
sub
fisttpll
ret
mov
test
cmp
loop
jge
gs
push
mov
pop
push
mov
dec
in
pop
cmpsb
lock
popf
xchg
mov
icebp
arpl
xchg
in
int
xor
out
jge
xchg
pop
inc
add
inc
jp
rcrl
mov
push
add
or
add
dec
loope
jo
mov
aas
fldcw
mov
sbb
imul
xor
push
mov
ds
add
clc
test
ljmp
dec
notl
pop
adc
and
mov
loope
pop
ds
adc
adc
stos
js
stos
lods
sti
loope
pop
adc
cmpsl
sbbb
dec
mov
add
pop
cmp
insb
pop
test
xchg
sbb
ficompl
mov
pusha
lret
push
daa
in
xchg
jle
je
mov
xor
fyl2x
decl
dec
cmpsb
xchg
std
testl
mov
pop
or
decl
adc
jno
pop
outsb
pushf
mov
push
dec
lea
lret
imul
movsl
mov
sbb
jge
mov
mov
jle
cmp
imul
dec
inc
pusha
mov
rcrb
mov
mov
cmp
mov
mov
out
adc
xchg
push
jle
push
push
or
or
cmpsl
rcrl
jp
jae
cmp
lret
loopne
scas
cmpb
ret
add
xor
fcomps
xchg
es
cld
mov
and
notb
jo
out
and
loopne
insl
imul
rcll
jno
and
inc
imul
out
mov
movsl
out
mov
mov
rorl
outsb
xchg
js
shl
jg
xchg
jp
add
push
rcr
stos
dec
aad
mov
popa
nop
mov
dec
xchg
add
outsl
add
or
dec
bt
jp
mov
push
push
je
mov
pusha
jecxz
mov
pop
mov
cltd
push
and
cmc
or
sub
in
xchg
xor
pop
mov
mov
out
xchg
shrb
shll
sub
in
test
nop
inc
fdivs
inc
mov
inc
fst
sub
pop
jecxz
cmpsl
test
xlat
lcall
xchg
fbld
inc
cmp
push
mov
in
or
andl
inc
sub
add
into
mov
jbe
icebp
pop
mov
jle
adc
mov
push
test
jno
jl
hlt
in
icebp
ss
addb
xchg
mov
fcoms
push
stos
daa
pusha
adc
mov
lret
jno
xchg
mov
dec
ret
mov
iret
mov
pushf
or
jl
push
shll
stc
add
stc
fists
sub
lret
mov
mov
mov
and
lds
push
sbb
nop
repz
add
jbe
push
cmp
cmc
mov
dec
pop
enter
jle
and
sti
add
stos
sti
ftst
cmpsl
outsb
scas
stc
pusha
cmpsb
dec
test
daa
movsb
cmc
mov
or
jecxz
in
push
out
inc
mov
push
cld
js
add
cld
sub
in
fadd
js
cwtl
and
loopne
fimull
bound
out
cmp
mov
ja
shll
mov
ja
mov
pushl
push
dec
xchg
mov
int
sub
aas
pop
jae
xchg
sub
mov
movsb
icebp
outsl
mov
sub
daa
repz
bound
cmp
ds
or
push
jp
jae
or
pop
adc
xchg
xchg
daa
arpl
jecxz
je
jg
out
fbstp
mov
mov
cmp
fstps
sub
mov
sbb
test
or
enter
add
jbe
lret
fildll
mov
sub
mov
inc
mov
and
xchg
adc
fstl
push
push
push
in
jg
cwtl
aam
xchg
sahf
insl
adc
movsb
xchg
stos
mov
into
pop
xchg
bound
cmp
insl
insl
push
mov
int3
xchg
nop
nop
pop
out
pop
shrb
int3
int3
mov
rolb
idivl
push
je
sub
cmpsl
pop
sub
sub
iret
adc
pop
sbbb
sub
add
and
jl
xor
mov
sbb
das
pop
shl
adc
pop
xor
lea
push
sub
adc
push
das
enter
xchg
andps
or
ja
mov
int3
dec
cmp
lcall
push
dec
adc
sarb
xor
cmp
xor
mov
and
mov
add
sbb
sub
out
subl
sub
ficompl
jg
mov
aad
in
mov
scas
adc
ds
vmovupd
or
movsb
test
aad
cltd
and
repz
test
dec
push
add
jb
popa
jne
in
stos
push
xchg
shll
out
arpl
adc
daa
or
push
xor
pusha
ja
inc
clc
or
ss
mov
lret
imul
jmp
mov
pop
sub
aam
lret
addr16
fcoms
xor
mov
idivl
imull
clc
cltd
jmp
mov
in
rcll
pop
pushf
pop
mov
inc
je
outsb
jg
out
ss
push
repz
push
iret
cmp
lret
cmp
jbe
gs
in
popf
fists
push
add
je
mov
add
iret
scas
pop
cmc
dec
movsl
mov
or
pop
jmp
in
insb
sub
cli
shlb
fisttpl
xchg
pop
daa
and
ja
sbb
in
pop
and
pop
add
jbe
mov
call
out
leave
sub
mov
sahf
outsb
jae
inc
mov
jg
sub
out
ficoms
enter
pop
insl
ss
mov
dec
sub
inc
out
mov
mov
xchg
shrl
or
fldcw
pushf
jp
faddl
daa
insb
xor
aaa
repz
imul
and
cwtl
cwtl
dec
adc
adc
lret
test
test
or
sbb
jmp
jg
lahf
rolb
and
fldcw
jecxz
shrl
lock
les
inc
mov
inc
icebp
ds
into
mov
ret
repnz
lret
pmaxub
lods
push
je
pop
and
popf
sti
push
pop
jbe
and
mov
call
jnp
add
out
lcall
dec
lea
in
jmp
and
lods
add
stos
notl
or
scas
fldenv
or
xlat
lods
inc
cmp
rol
aam
xchg
shr
ret
scas
pop
in
aas
xchg
or
scas
or
sbb
out
push
nop
cmpsl
lcall
fadds
rcll
or
js
cmp
mov
sub
mov
stc
mov
cld
sahf
mov
arpl
stos
mov
lods
imul
jbe
push
das
das
fcoms
mov
push
cmp
add
push
mov
xor
stos
adc
inc
icebp
jge
ds
or
out
mov
cmovo
ja
sub
scas
mov
shll
or
mov
dec
pop
push
jmp
or
xor
mov
inc
shll
add
not
cmc
sbb
gs
and
aad
mov
nop
mov
in
arpl
dec
mov
push
scas
jecxz
pop
sub
stos
cltd
repz
xor
xchg
push
ljmp
rorl
arpl
mov
sub
add
push
jb
aaa
add
leave
mov
xchg
repz
stc
or
add
int3
sahf
rcrb
xchg
sbb
adc
push
add
cli
mov
lcall
mov
jb
mov
nop
mov
movsb
mov
or
std
test
pop
iret
aas
gs
loope
mov
mov
cmpb
mov
xlat
mov
mov
jne
movsb
aaa
jp
cmp
inc
lret
dec
xor
mov
or
psrlw
dec
fsubl
out
fstp
jae
pop
jno
pop
lds
repnz
in
xchg
es
mov
movsb
xor
in
fdivs
push
les
or
bound
ret
mov
shrl
lods
adc
in
xchg
jl
mov
neg
mov
push
xchg
xor
int3
or
outsb
add
js
add
inc
adc
add
clc
mov
js
leave
rolb
incb
imul
call
aaa
popf
sarb
xor
adc
lcall
aaa
in
and
data16
outsb
sarb
imul
push
in
mov
test
mov
push
lods
sti
mov
mov
data16
dec
and
mov
movsl
push
add
add
mov
popl
out
scas
rcrb
ljmp
cmp
jb
mov
or
jp
addl
inc
ret
inc
divl
and
cltd
pop
mov
jl
testb
mov
in
cmpsl
pop
adc
sbb
adc
mov
ficoms
cld
and
shlb
xor
jg
jmp
sub
pop
xchg
jg
or
pop
dec
or
or
clc
push
mov
mov
rol
inc
jbe
sbb
adcl
cmp
push
aam
pxor
fisubs
enter
mov
jecxz
fistpl
hlt
ficompl
jb
notl
push
jmp
icebp
repz
mov
daa
lods
mov
pop
inc
jbe
add
push
mov
outsl
mov
fidivl
adc
xor
ds
aam
ret
test
test
mov
pop
ja
sub
out
aas
and
cmpsl
adc
jnp
push
fs
lret
jns
mov
ret
pop
js
dec
xchg
push
pusha
jmp
repz
pop
or
pusha
xchg
cmp
mov
jmp
push
std
pop
orb
aaa
jo
pop
lods
mov
aad
mov
pop
xchg
imul
mov
es
sbb
sub
adc
leave
in
cmp
sub
pop
cwtl
lds
ja
pop
add
xor
adc
jne
dec
inc
or
sbb
loope
cmp
and
or
test
out
fdivp
and
sbb
dec
stos
jbe
xchg
aaa
out
in
and
push
sub
sbb
fwait
xchg
std
insb
sahf
mov
push
push
mov
bound
in
xlat
cmc
lods
cmp
inc
clc
mov
and
add
jne
sub
sbb
cmp
jg
clc
xchg
and
pop
iret
jno
or
dec
fldl
jecxz
pop
in
adc
pop
mov
xchg
aam
inc
xor
scas
ret
jle
cmp
in
mov
stos
and
test
add
lock
xchg
outsl
xor
inc
xchg
lcall
pop
test
inc
enter
mov
jns
stos
jae
and
and
aaa
ljmp
repz
lcall
test
out
xchg
sub
xor
mov
jo
fst
and
out
dec
aas
hlt
push
dec
jo
divl
lahf
push
movsb
out
aam
sbbb
push
add
sub
or
add
xchg
lods
xchg
wrmsr
movsl
add
in
lods
leave
inc
sbb
xchg
dec
addr16
xor
fsubrs
loopne
call
inc
rolb
jge
fidivl
das
std
jl
sub
dec
xchg
adc
cmpb
pop
xchg
mov
movsl
and
mov
sub
lcall
mov
lods
or
orb
mov
sbb
mov
insl
dec
sbb
sahf
sub
int
pop
inc
lods
arpl
add
inc
mov
pop
mov
mov
dec
icebp
push
fimuls
mov
test
ret
cmp
es
adc
adc
ljmp
icebp
xchg
adc
mov
add
in
shlb
test
popl
imul
jae
fwait
lret
or
call
jle
stos
fnstsw
mov
jmp
mov
push
iret
or
aam
lods
and
jp
ret
mov
push
insb
or
orb
inc
cld
sbb
dec
sbb
jo
gs
mov
popf
xchg
lret
mov
mov
pop
aaa
in
cld
ret
add
insb
fstpt
dec
pop
jp
imul
jo
or
cmpl
push
mov
gs
sub
rolb
inc
mov
sub
dec
data16
pop
add
mov
pusha
stos
sub
out
cmc
ret
mov
lds
mov
mov
xchg
jnp,pt
es
jg
xchg
jnp
loop
xchg
jnp
imulb
xchg
int
push
push
imul
sub
subb
int
test
mov
push
jb
push
call
xchg
aad
dec
in
mov
arpl
test
jb
fcoml
stc
ds
gs
je
loopne
dec
xchg
or
pushf
and
sub
in
test
adc
arpl
lcall
push
jbe
mov
mov
sti
push
mov
xchg
rcrb
test
sbb
repz
dec
decl
inc
ror
dec
sbb
lock
outsl
ror
mov
mul
cwtl
pushf
loope
in
cmp
inc
fidivrl
test
cmp
iret
sbb
and
push
mov
rcll
dec
sbb
push
inc
xchg
js
int3
lcall
stos
lds
inc
rcrb
and
pushaw
ja
cmp
std
inc
jmp
push
inc
lret
dec
adcb
mov
jbe
sbb
push
fsubs
clc
pop
js
xor
xchg
xchg
or
les
lods
pop
inc
mov
mov
pop
cmpsb
cltd
pop
jae
adc
ret
push
imul
hlt
push
fisubrl
das
bound
push
lahf
cvttps2pi
xchg
pushl
pop
data16
dec
negl
mov
sbb
dec
std
ljmp
sub
xchg
push
icebp
mov
mov
stos
inc
add
cmp
jl
jle
sub
fsubrl
divl
or
stos
adcl
inc
iret
mov
popf
jle
inc
repz
dec
pop
lods
mov
sbb
cmp
outsb
fwait
ds
leave
mov
shll
xor
jnp
adc
inc
sub
in
pop
mov
loope
cld
int3
xor
add
aad
das
inc
pop
xor
push
sbb
fs
jge
push
sbb
pop
push
pop
xor
orb
or
rclb
addb
roll
mov
enter
jle
jge
push
std
lds
xor
lret
jae
arpl
add
and
pop
jns
pop
cli
stos
cwtl
adc
add
cmp
js
ficomps
mov
movsb
jae
clc
mov
mov
cmpl
out
add
xlat
push
mov
push
and
sbb
fstl
push
and
pushf
or
sahf
or
push
cmpl
ljmp
mov
lret
xchg
stos
adc
roll
sbb
pop
xchg
int
les
movsl
adc
jmp
lds
mov
mov
xchg
cmc
mov
xor
aam
and
cmp
sbb
lret
or
sub
cmp
sbb
mov
fnstsw
ss
mov
mov
rcr
inc
out
sub
mov
punpckhbw
outsb
std
dec
sbb
xor
or
pop
cmp
mov
dec
inc
adc
xor
cli
jmp
aas
cmc
repz
pop
mov
xor
xchg
out
loope
ficompl
mull
dec
mov
fwait
nop
push
mov
push
push
dec
push
fidivl
aaa
pop
loopne
int
cmp
fdivrs
add
push
xchg
into
jg
dec
iret
sarb
inc
jecxz
jno
inc
scas
into
xor
scas
fsubp
push
scas
push
cmp
cmpsl
lds
inc
push
xorl
sub
mov
mov
sub
sub
add
bound
pop
mov
lods
adc
shlb
movsbl
add
rcrl
cmc
dec
mov
sub
lods
mov
shrb
xchg
addr16
xchg
xor
sub
jo
cmpsl
in
in
lock
and
int
cmp
sub
fisttpl
or
add
ss
xchg
jnp
das
pop
cld
aad
ss
dec
clc
pop
sbb
or
std
loopne
dec
std
mov
cmp
inc
push
mov
adc
cmp
dec
push
sbbl
add
sbb
jo
notl
fisttps
test
push
and
sarl
sub
push
inc
sub
js
cmp
cwtl
xor
popf
jnp
sti
and
imul
insb
int
xlat
mov
jnp
insl
js
adc
mov
fidivs
mov
pop
loope
rcll
dec
js
movsl
iret
loope
test
iret
aad
and
mov
cwtl
ret
daa
lods
xor
out
inc
les
cmp
sub
loopne
loopew
jmp
fisttpll
dec
fptan
or
xor
pop
inc
pop
mov
sub
push
cmp
insb
and
jb
fwait
aas
mov
jo
mov
les
ja
xor
push
push
cmpsl
ja
push
mov
lods
jp
mov
lea
push
and
add
testb
inc
jno
or
xor
dec
pop
inc
pop
fcmovnb
sbb
jle
sbb
add
outsl
xchg
dec
hlt
test
and
pop
mov
xchg
mov
hlt
sti
testl
sbb
int
lret
movsb
fsubs
sahf
insl
push
sahf
mov
push
pop
xor
inc
push
andl
jmp
inc
enter
fcmovbe
or
cmpsb
cld
out
cwtl
xor
int3
sarb
inc
push
mov
nop
mov
inc
xchg
sbb
push
inc
jge
lods
lds
test
mov
mov
inc
mov
dec
mov
mov
fldcw
testl
pusha
mov
fnstenv
adc
pushf
repnz
push
or
cmp
jo
filds
pop
jmp
dec
adc
push
lds
hlt
add
gs
dec
test
leave
sbb
movl
mov
call
inc
fldt
mov
mov
push
bound
and
nop
xlat
add
sub
fs
jo
mov
cmpsl
nop
push
push
je
ret
xchg
rcr
fimuls
je
xor
out
mov
adc
fld
xor
or
sbb
ret
mov
ljmp
stmxcsr
shrb
pop
and
mov
ret
dec
push
mov
xor
push
mov
mov
icebp
cmpsb
jns
cmp
pop
and
jae
cli
lcall
pop
xor
or
fdivl
lret
mov
test
in
inc
and
inc
in
enter
xchg
lcall
sbb
aaa
lret
pop
ja
sub
popf
dec
clc
sbb
xchg
out
xchg
pop
push
fwait
jmp
sbb
stos
jo
cli
std
push
or
or
xchg
inc
lock
icebp
sbb
xchg
push
jge
lret
inc
aad
add
and
jp
xchg
clc
das
inc
es
sti
cmp
mov
xor
lods
inc
cmp
in
sub
push
dec
mov
imul
decl
add
xchg
icebp
mov
insb
sbb
xbegin
rorb
fwait
popf
adc
pop
jg
and
sbbb
or
mov
ljmp
inc
cmc
inc
push
mov
cmp
xchg
sbb
jl
test
outsb
in
mov
cmp
xlat
leave
out
and
fcmovb
push
rolb
or
fwait
mov
les
imul
ss
fstp
xchg
cs
xor
mov
pop
jle
scas
and
jle
and
sbb
sub
aaa
pop
mov
push
pop
push
subl
cmpsl
mov
jecxz
lock
sub
cmp
out
mov
fists
jno
inc
jl
aaa
mov
lret
jo
dec
ret
dec
cs
fbld
mov
maskmovq
mulb
dec
ficoms
push
jg
add
pusha
ret
nop
dec
sar
in
sahf
std
in
fbstp
ja
adc
lods
out
repnz
and
xchg
and
stos
rcrl
jmp
lret
or
sub
dec
popf
pop
orl
cmp
repnz
pop
push
dec
lea
cmp
fmuls
pop
mov
jmp
push
or
mov
mov
pop
lret
addr16
dec
fwait
dec
ss
adc
jae
sbb
xor
inc
push
stc
and
sub
lds
mov
jl
aas
pop
cmc
in
inc
add
jo
xor
aad
cli
jae
iret
jns
enter
lods
sub
mov
pop
mov
push
or
nop
jp
imul
orl
scas
call
mov
jl
lcall
add
and
leave
jo
mov
xchg
mov
dec
cli
sub
inc
outsb
inc
adc
sub
repz
insl
inc
jno
pusha
lods
shll
cmp
int3
mov
cwtl
out
dec
inc
inc
push
out
fnstsw
xchg
mov
aad
iret
cmc
mov
rcll
dec
clc
add
fwait
adc
fidivs
mov
loop
rcll
push
fldenv
stc
pop
add
popa
out
call
adc
imul
aaa
jle
push
adc
sub
mov
out
lods
hlt
xchg
flds
fs
sbb
fcompl
scas
ret
sub
or
cmpsb
push
test
sbb
in
mov
ss
repz
or
push
adc
mov
jns
sbb
jns
fdiv
mov
adc
add
mov
das
sub
lock
sub
movsl
std
stos
sub
push
push
dec
mov
push
jae
nop
sahf
stos
fnsave
add
mov
adc
sub
jae
aas
aas
aaa
adc
popf
inc
ds
or
mov
enter
jle
fucomp
mov
adc
sub
out
jnp
inc
leave
mov
sbb
jmp
sbb
push
shll
xor
pop
cli
loopne
jae
cmp
cli
nop
pusha
and
jp
inc
jmp
cmpsb
push
loop
dec
lock
imul
xchg
pushf
imul
sbb
xor
push
int3
test
cmp
dec
pop
add
sti
cmp
mov
mov
loop
add
iret
push
arpl
scas
sub
mov
imul
lea
std
incl
sub
and
mov
xchg
and
push
xchg
nop
arpl
nop
push
mov
cwtl
gs
jle
notb
push
mov
sub
scas
and
scas
leave
sti
adc
test
jbe
outsl
adc
pop
mov
test
cwtl
mov
add
repz
cmp
sbb
xor
mov
fwait
jmp
xchg
jns
arpl
or
and
frstor
push
cmp
mov
popa
pop
sbb
xchg
and
xchg
sub
lods
lret
adc
cs
add
pop
cmp
jge
dec
lcall
cmpb
shlb
jmp
ret
jp
mov
push
fcom
jnp
out
or
mov
clc
jmp
adc
jnp
push
cmpb
repz
mov
lea
in
sti
jns
jne
pop
mov
out
sub
cld
sub
mov
inc
test
pushf
sbb
bnd
push
mov
test
leave
or
dec
test
out
xor
pop
aaa
xor
loope
div
jnp
fwait
xchg
call
push
jns
aad
inc
outsb
loop
adc
movsb
addr16
mov
inc
icebp
and
mov
push
dec
sbb
nop
js
shlb
cmc
adc
int
mov
lea
jno
pop
adc
cmc
mov
xor
push
pushf
inc
idiv
cmp
and
roll
push
add
fmull
adc
lea
cltd
xor
ljmp
cmp
push
jno
jmp
mov
fwait
and
lods
faddl
sbb
jae
lods
sub
bound
sub
sub
pop
jmp
adcl
dec
sar
cwtl
pop
sbb
jnp
adc
mov
jecxz
mov
sub
xchg
jg
fbstp
sub
cmp
and
sarl
cmp
push
stos
les
fsubrl
aam
adcb
cmp
inc
sub
les
mov
lds
xor
sahf
xor
or
xchg
imul
xchg
sahf
add
lds
sbb
jg
add
xlat
add
jb
push
push
sub
ss
sbb
or
and
in
stos
cmpl
arpl
aad
outsb
xor
xchg
in
lahf
fwait
enter
sahf
mov
sub
dec
imul
shl
mov
mov
fdivrl
cmp
fcompl
pop
aas
test
xchg
mov
push
xchg
pop
movsb
push
outsl
dec
inc
mov
jp
out
movsb
les
lahf
negl
rcl
mov
xchg
pop
in
jg
cwtl
icebp
into
and
mov
in
inc
mov
icebp
add
push
lds
xor
out
cmpl
jo
aaa
push
cmpsl
adc
mov
filds
ja
cmp
mov
pop
out
xchg
push
movsb
xchg
push
lds
mov
sub
movsb
push
pop
fdivl
mov
jg
rcrb
jl
je
inc
xor
and
xchg
dec
fcmove
inc
cmp
jg
push
xor
lret
repnz
and
incl
stc
mov
iret
inc
push
fiaddl
insl
test
or
dec
jmp
xchg
ficoml
out
pop
enter
mov
fstpt
push
and
sbb
cmovp
push
ss
fdivs
jbe
dec
mov
addl
sbb
test
out
lock
dec
cmp
inc
shl
inc
and
xchg
jns
rcrl
push
lds
es
out
jg
push
mov
sub
lods
stos
dec
lcall
inc
cld
and
push
popa
pop
das
mov
or
in
arpl
mov
loopne
ss
cmpsl
ds
or
pusha
adc
sbb
fisttps
shl
sbb
xchg
std
lea
fwait
pop
scas
mov
inc
test
mov
adc
stos
dec
sub
mov
ret
dec
lret
mov
das
mov
sbb
pop
repnz
dec
loop
dec
dec
cmpsb
cmp
jns
es
pop
pop
lock
sub
and
or
lahf
ss
xchg
and
fiaddl
inc
fst
xchg
flds
or
cmpsb
ficoms
decl
sbb
inc
popf
sub
cmc
mov
mov
out
in
imul
decb
pop
dec
xor
push
jmp
addr16
sar
sbb
es
push
cs
lcall
mov
in
jnp
push
pop
roll
insl
fcmovu
std
mov
sub
ficoml
sti
shrl
push
ficoml
mov
mov
mov
sub
inc
int3
xchg
sbb
cmp
test
rclb
imul
mov
mov
inc
movsl
sub
adc
sbb
inc
ror
sahf
inc
fstpl
cmp
sub
mov
cmp
jnp
add
jl
shl
jmp
inc
push
js
mov
mov
aas
dec
shll
jge
test
mov
adcl
fbstp
imul
sub
es
cmp
sbb
fmull
pusha
mov
push
stos
dec
mov
fwait
sub
cs
push
mov
pop
xchg
mov
mov
pop
push
cwtl
pop
xor
fnstenv
hlt
jnp
add
or
dec
fimull
sub
inc
add
pop
test
lcall
inc
pop
and
addr16
xor
xor
pusha
daa
xor
js
or
loop
xor
mov
insb
scas
push
mov
jmp
ficompl
shr
add
sbb
pop
bound
cmp
lods
ljmp
jb
push
mov
aaa
inc
jnp
lret
sbb
cmc
aas
outsb
lock
insl
lahf
sub
arpl
pushf
inc
cmp
scas
icebp
jle
cmp
repnz
in
shlb
shrb
pop
pop
dec
les
dec
adc
and
roll
cmovbe
cmc
in
add
fwait
push
jno
negb
mov
call
js
dec
shlb
xor
adc
bnd
xor
pop
pop
mov
addr16
or
cmp
js
cwtl
jmp
stc
jb
sub
in
xchg
rcrb
and
sub
lea
movsl
repnz
aas
jl
icebp
cmp
xor
push
inc
mov
jns
mov
pop
jne
sbbb
out
cwtl
inc
bound
sbb
adc
pop
ret
scas
add
inc
sub
fs
call
cmpsb
dec
push
inc
scas
lods
stc
pop
imul
mov
jbe
es
fmul
and
inc
pusha
fists
fbld
cmpsl
cli
push
cmp
leave
lret
and
cli
mov
jns
add
clc
mov
pop
popf
fs
cwtl
out
mov
jg
dec
sub
jne
filds
adc
fwait
into
sub
bound
popf
idivl
jne
hlt
dec
out
mov
jp
bound
xchg
sbb
ret
xchg
ss
loope
add
xor
stos
jle
pop
ds
loopne
or
inc
ja,pt
roll
adc
push
mov
xor
stc
leave
adc
xorl
inc
loop
sub
cmp
fiaddl
ljmp
and
push
sarl
jne
dec
dec
mov
pusha
inc
sub
pushf
pusha
orb
push
push
inc
jecxz
xchg
pop
lods
mov
test
adc
mov
sub
pop
pop
push
mov
xor
pop
lcall
arpl
in
shr
cmpxchg
in
jnp
dec
je
jnp
pop
xlat
sbb
aaa
inc
fwait
std
jg
jmp
add
and
imul
aad
add
cmp
inc
inc
dec
std
roll
imul
add
loop
int
lock
jb
loop
hlt
dec
push
call
les
mov
push
pop
mov
ficompl
push
pop
and
andl
mov
push
jae
ja
shl
or
jb
push
sub
jb
in
mov
movsl
adc
inc
cmp
pop
mov
xchg
mov
add
rorl
mov
ret
popa
sbb
jl
mov
lods
push
xchg
mov
or
test
or
ret
push
or
insl
aas
cwtl
inc
ds
fmull
adc
sbb
xor
std
fsts
out
mov
mov
xchg
fists
insl
xchg
das
or
push
push
mov
adc
hlt
and
dec
mov
mov
iret
clc
dec
or
jl
mov
js,pt
adc
cwtl
inc
and
rol
xchg
or
or
add
daa
sub
aaa
stos
enter
movsl
pushf
mov
nop
dec
int
mov
pop
mov
dec
ficompl
hlt
imul
sbb
mov
mov
movsb
xchg
iret
stc
out
mov
pop
pusha
jl
arpl
fwait
inc
xchg
cmp
ds
or
sahf
pusha
xchg
cmpsl
pop
pop
sbb
sbb
shll
aam
cmpsb
cmp
adc
or
cmp
or
out
jo
lret
lock
scas
sbb
movb
mov
ret
sbb
jp
dec
lods
out
xorb
add
mov
add
jmp
sahf
mov
adc
stc
notb
cld
dec
jle
negl
pop
shr
stc
fisttps
sub
pop
fadd
mov
mov
dec
pop
xchg
lahf
inc
test
add
aas
outsl
lea
sub
sub
lods
adc
sbb
int3
in
pop
push
cmp
fs
xor
call
cld
movsl
push
pop
mov
sub
mov
int
and
dec
adc
xor
dec
mov
in
loope
adc
sbb
pop
cmp
push
cwtl
pushf
mov
push
jp
push
pushf
fndisi(8087
add
mov
shll
adc
rclb
mov
mov
lods
insb
aas
mov
test
shl
sahf
sbb
sarl
int
push
dec
push
call
cltd
push
nop
aad
cltd
lcall
mov
dec
mov
push
mov
sub
out
lahf
jbe
scas
mov
xor
sahf
fwait
push
jle
mov
addr16
or
aas
out
mov
xor
lcall
ljmp
repz
xchg
iret
jl
mov
addb
adc
xor
mov
fmul
xor
insl
push
fsubs
xchg
xor
pop
mov
pusha
fiadds
push
arpl
jno
cmc
les
cs
add
or
cmp
outsb
or
xchg
rcll
lret
fcoms
push
mov
mov
ds
add
mov
cmp
lea
pop
or
xchg
inc
ds
sbb
push
mov
push
push
xor
mov
or
xchg
push
add
sbb
in
fadd
iret
inc
orl
sbb
test
je
pop
mov
cmpsb
cmpsl
ret
and
pushw
in
movsb
outsl
cmp
xor
pop
pop
cli
mov
sbb
cltd
push
ror
pushl
xor
stos
dec
and
fstpl
enter
sub
lret
push
iret
pop
dec
add
scas
mov
ret
sti
jp
jge
sub
fbld
cld
out
out
xchg
inc
jg
sbb
sbb
movsb
or
and
xchg
sub
cmp
mov
jnp
lea
repnz
sbb
gs
sbb
lods
popa
sub
mov
push
mov
lcall
xchg
mov
jge
cmp
xorl
adcl
xchg
aas
xchg
popa
stos
lahf
daa
sub
ss
fs
inc
push
movsl
sti
pop
aas
jae
pop
push
and
test
add
add
test
and
test
and
dec
xchg
fcoms
int
or
repz
aaa
push
bound
push
lods
push
cmp
lds
sub
or
lret
insb
inc
stos
pop
jle
cli
test
test
cmp
or
inc
push
imul
test
push
mov
xor
push
xchg
lock
filds
push
jecxz
cld
sbb
push
std
sub
pushf
push
insb
movsb
mov
sub
aad
pop
idivl
or
fwait
lret
pop
fldl
jge
mov
mov
and
lods
movsl
xchg
xchg
push
cwtl
mov
jle
sbb
jmp
fiaddl
fs
aam
inc
add
pop
sub
xchg
push
and
mov
cmp
mov
dec
mov
jecxz
xchg
push
jbe
add
lods
xchg
mov
enter
add
lahf
repz
dec
bound
or
loopne
dec
sbb
imul
or
loope
add
and
stc
sti
popf
fld
xchg
push
sarl
and
mov
rcr
jecxz
jle
inc
icebp
cld
lds
xor
add
pushf
in
das
mov
mov
imul
xlat
sti
pop
and
cld
and
mov
pop
mov
shrb
addr16
lock
cmp
addr16
orb
jge
dec
push
pusha
cmp
ja,pn
mov
inc
icebp
fldenv
pop
sub
inc
imul
repnz
stc
in
hlt
imul
mov
addb
ret
repz
xor
cwtl
pop
mov
stos
addb
push
repnz
mov
ja
cmp
cmp
cmp
push
lock
sub
pop
push
pop
push
sbb
or
js
push
gs
cmp
es
outsl
push
out
sub
mov
mov
rcrl
xchg
subb
sub
jmp
ljmp
ja
jecxz
mov
ja
orl
test
push
aaa
cmc
xor
sub
xor
out
xor
pop
sub
psllw
lcall
or
push
rolb
stos
jbe
mov
or
jnp
sub
mov
xchg
sti
addr16
pop
imul
fbld
mov
inc
int
and
shll
cmp
fmul
insl
imul
jg
pmulhw
xor
popl
scas
sub
sub
dec
xor
and
divl
enter
inc
inc
mov
cwtl
dec
mov
daa
sub
adc
dec
pop
jecxz
dec
fs
je
add
imul
out
mov
mov
sbb
aam
or
cmp
stos
pusha
sahf
test
jne
jno
push
or
sbb
xor
jmp
fsubs
mov
std
stos
je
add
add
mov
nop
or
xchg
out
ret
jge
lock
ret
out
idiv
clc
dec
inc
in
add
sti
sub
add
cmp
cli
fidivrl
shll
popa
ret
or
clc
mov
sub
or
sbb
push
push
arpl
cmp
push
jbe
enterw
test
add
imul
insb
test
das
aam
xor
mov
mov
loope
js
lods
xor
jecxz
bound
cmp
adc
push
sarl
sarl
pop
cmc
cmp
sbb
pop
jl
addr16
sub
ds
clc
pop
pop
mov
in
cmpsl
test
mov
pop
cs
nop
adc
div
je
sbb
les
stc
ss
pushf
jns
inc
mov
mov
cmp
xlat
cwtl
sbb
inc
stos
enter
jl
cs
popa
jecxz
das
sub
xchg
and
xchg
inc
in
rcrl
fidivl
ds
push
or
jg
xchg
cmp
pop
push
hlt
or
arpl
or
adc
pop
jmp
jp
adc
adc
sbb
dec
and
hlt
fiadds
adc
rcl
mov
add
xor
aad
mov
repz
shl
dec
psrlq
dec
inc
sub
stos
dec
inc
xor
inc
test
pop
daa
shrl
inc
pop
cmc
leave
mov
push
sti
das
gs
imul
in
and
in
pop
mov
xor
xor
sub
xchg
inc
cmp
xchg
ret
mov
pop
sbb
adc
push
movsl
push
out
mov
jne
xchg
xchg
imull
sub
adc
ret
in
hlt
or
lcall
and
mov
popf
rcll
xchg
sbb
push
or
mov
test
push
rorb
out
inc
and
cs
fsub
in
and
pusha
mov
inc
cli
and
sbb
add
add
ret
fwait
in
test
loopne
push
dec
cmpl
scas
sub
out
mov
bound
xchg
or
ljmp
fldcw
dec
mov
push
add
fildl
mov
adc
lds
int
fisubs
testb
inc
jmp
arpl
mov
pop
mov
pop
mov
mov
stc
std
and
lock
aad
test
leave
gs
jle
mov
xor
repz
movsl
cmc
loop
jmp
sub
mov
lahf
in
or
lcall
adc
mov
in
pusha
lret
movsl
pushf
xorl
ret
xchg
test
mov
mov
inc
cmp
cmp
pop
repz
rcr
or
jmp
pop
xrstors
push
xchg
aad
push
pushf
jmp
push
or
fdivs
dec
cmp
sub
xchg
dec
sub
rcl
sbb
arpl
xor
adc
sub
sbb
mov
nop
lods
or
pop
push
ret
iret
adc
outsb
loopne
sub
xchg
push
add
cld
xor
push
mov
mov
push
jl
bound
sti
xchg
jnp
inc
ds
pusha
nop
daa
cld
loop
icebp
fstpt
mov
xchg
ret
gs
loope
ljmp
sub
mov
pushf
pop
add
sub
jae
xchg
or
loop
loopne
add
jg
movsl
jg
jb
sbb
in
mov
test
jne
lods
jne
xchg
stc
repz
or
pushl
cmp
inc
loope
test
dec
xchg
xchg
mov
add
lcall
test
aas
xor
inc
mov
mov
xchg
sub
pop
jb
fs
jb
cmp
dec
nop
mov
je
insb
call
insb
and
mov
notl
lds
dec
push
jge
cwtl
and
pop
mov
add
sub
in
add
rcl
dec
or
repnz
shll
mov
push
fldcw
sar
adc
out
or
sar
xchg
xchg
sub
out
sbb
mov
or
jne
popf
xchg
inc
insl
out
subl
aad
daa
ds
jae
and
push
mov
stos
cld
out
hlt
jns
dec
jne
leave
mov
xor
xor
test
pop
jns
shl
adc
stc
insl
loop
lret
test
push
mov
jae
jge
cmpsl
mov
loop
cmp
jns
ror
gs
outsb
xchg
inc
or
cmp
xor
dec
shlb
cmp
add
lea
cmp
in
cmpsl
mov
jns
xchg
cli
cmc
push
pop
xchg
push
and
rorl
in
rcrl
popa
xchg
out
pop
mov
push
lea
aas
stos
mov
es
or
testl
adc
xlat
inc
pop
int
and
push
mov
addr16
test
fnstcw
ljmp
in
pop
lea
pop
lods
push
aad
sbb
dec
pop
fisttpl
sbb
push
or
gs
pop
jge
enter
xor
pop
dec
xchg
mov
adc
xchg
and
cs
mov
sub
inc
jg
pop
push
clc
mov
mov
xchg
aam
or
pushf
cmc
test
jno
inc
push
mov
adc
xor
popa
add
jl
jnp
add
insl
sub
jg
inc
int3
cld
das
shl
inc
jb
rcr
push
or
jns
mov
xor
clc
add
push
insl
mov
ljmp
xchg
icebp
pop
jno
popf
sbb
mov
push
jno
pop
ss
adc
xor
push
gs
sbb
adc
cmp
cltd
rcrl
sbb
mov
or
mov
push
mov
flds
test
push
cltd
or
mov
cmp
lods
call
or
in
cmp
into
and
lods
sbb
inc
sbb
outsl
daa
popf
sub
push
bnd
in
cmp
dec
inc
push
or
or
cmp
add
bound
add
leave
xchg
inc
mov
rorb
in
mov
lods
hlt
jnp
pusha
cs
arpl
lret
cmp
jle
out
repz
ret
scas
mov
cmp
xchg
jne
mov
int
mov
mov
xor
push
xor
jo
jb
cmp
xor
jl
xchg
pop
jl
bound
jae
in
fs
cltd
inc
push
mov
dec
jns
cmpsl
call
mov
cmpsb
pop
push
cmpsb
push
mov
cld
ret
inc
cmpsl
jnp
pushf
mov
enter
xlat
sub
inc
pop
jmp
xchg
mov
add
icebp
sbb
jg
mov
push
dec
pop
into
je
fwait
adc
ljmp
and
nop
jno
cmc
incb
mov
mov
sar
and
imul
mov
mov
rclb
imul
shlb
push
and
clc
or
ficompl
dec
in
lds
clc
jo
mov
jne
jmp
loop
xor
push
sbb
in
icebp
iret
aas
jge
leave
xchg
sub
lods
fstpl
inc
bnd
hlt
xor
inc
popa
scas
aam
movsb
xor
int3
push
ret
movsl
push
pop
fistpl
pop
into
lret
xor
in
out
sbb
add
add
hlt
add
cmpsl
or
add
inc
orb
popf
xchg
hlt
xor
sbb
mov
mov
lret
mov
dec
out
jl
outsb
xor
mov
outsl
ljmp
dec
es
mov
jno
test
mov
jge
out
mov
rorb
in
stc
adc
inc
jo
or
shr
jbe
int3
jg
cmp
adc
adc
sbb
dec
lods
xor
and
cltd
dec
lret
dec
and
movsb
pop
dec
adc
mov
rclb
mov
fsubrl
fisubrs
mov
mov
std
orl
inc
mov
in
outsb
inc
out
mov
imul
prefetchw
inc
mov
or
dec
inc
sub
stos
cwtl
add
jp
jle
addr16
mov
rolb
dec
les
pushl
sbb
movsb
fidivrl
xchg
cmp
xchg
ss
inc
aaa
mov
stos
sbb
outsb
je
stos
or
xor
mov
pop
mov
cli
enter
insl
cld
int3
xor
pop
dec
movsl
jmp
repnz
loopne
mov
mov
inc
jecxz
ss
fcomi
cld
mov
in
sub
mov
sbb
rcrl
pop
std
mov
das
xor
xchg
xlat
jmp
xor
fists
data16
aam
sbb
aam
pusha
sub
dec
ja
testl
out
cwtl
xlat
pop
mov
mov
ljmp
inc
sbb
das
inc
mov
cmpsl
xor
xor
stos
aas
in
push
mov
in
repz
or
loop
jnp
clc
xor
pop
push
jnp
cmp
lcall
lahf
out
xchg
add
push
outsl
movb
insb
stos
fistps
mov
std
jo
xchg
inc
cmp
ss
or
jmp
push
imulb
mov
aad
push
push
pop
pop
shl
lahf
je
add
mov
sub
ss
and
outsl
lret
jns
gs
cli
cmc
repz
sarl
mov
xchg
ret
or
sti
pop
dec
data16
stc
push
pop
adc
dec
and
add
mov
imul
icebp
jb
rorl
adc
mov
xor
scas
je
jne
cmpsl
pop
cltd
sbb
fbstp
jo
call
and
aaa
push
add
or
or
or
pushf
or
mov
gs
push
push
jnp,pt
adc
bound
jl
dec
or
sbb
sbb
fbstp
pop
pop
ljmp
fisubrs
push
sti
in
mov
popa
loopne
daa
repz
insb
scas
lret
jb
sub
in
fwait
dec
vpmacssdd
xchg
push
dec
mov
xchg
mov
and
pop
jnp
xor
and
popa
data16
je
sbb
add
inc
sbb
fld
arpl
int3
or
inc
arpl
shll
cltd
or
push
fdiv
into
fidivl
fwait
jns
mov
pop
xchg
cmp
mov
jmp
inc
lods
jl
sbb
movsb
sub
cmp
mov
adc
data16
sub
mov
jne
fwait
mov
push
stc
rclb
inc
inc
adc
inc
stos
lret
mov
cwtl
arpl
sbb
fisttps
leave
mov
adc
movsl
rcrb
hlt
out
jle
sub
adc
scas
and
sbb
sub
movb
loopne
nop
sbb
mov
mov
daa
pop
pusha
aas
sbb
or
sbb
xor
sbb
and
mov
aad
jmp
mov
stos
mov
lahf
mov
cmp
sub
push
push
mov
sbb
pop
popa
adc
mov
rorb
sub
cmpsb
scas
adc
lock
test
jne
xchg
sub
jle
sub
je
pusha
arpl
adc
inc
push
pop
gs
mov
sbb
lcall
repnz
ss
shrl
ss
dec
dec
lret
adc
mov
or
jge
jp
and
xor
idivl
push
jecxz
rcr
ret
pop
adc
imul
push
sarb
push
hlt
lods
dec
loopne
mov
stos
xor
les
shl
and
cmp
mov
push
push
rolb
cli
xor
cmpsl
sub
pushf
pop
movsl
fwait
mov
add
cmp
aas
loop
fnstcw
push
gs
stos
imul
leave
mov
scas
in
inc
lret
std
mov
adc
cmc
fidivs
lret
fstl
inc
pop
xchg
lods
adcl
mov
and
jmp
out
cmpsl
arpl
in
cmpsl
repnz
push
inc
xor
and
mov
test
xchg
add
rorl
sbb
xor
cmp
dec
pop
leavew
lods
mov
call
sti
mov
in
xchg
arpl
dec
fidivl
fwait
mov
dec
push
into
mov
xor
js
mov
mov
dec
sbb
mul
xchg
fwait
cli
inc
adc
loope
mov
sub
enter
and
sbb
sbb
into
or
movsl
and
int
push
out
xchg
add
xor
pop
inc
or
repnz
and
xor
sbb
push
std
leave
mov
jno
sub
sarb
pop
jne
push
adc
popf
test
jmp
sub
cltd
mov
sbb
push
mov
push
cmp
cmp
pushf
cmc
outsl
fisttps
push
fsub
outsb
mov
push
lret
inc
jb
loopne
outsl
enter
js
clc
sub
sub
das
adc
aas
loope
lcall
jp
arpl
sbb
inc
test
mov
adcl
jae
mov
jo
xchg
bnd
add
adcb
mov
lods
or
fnstenv
es
mov
xchg
mov
xorb
cs
pop
lret
lret
jmp
mov
fimull
fistl
out
push
stos
sahf
nop
push
pop
mov
cld
cmpsl
pop
cwtl
adc
jmp
dec
shrb
mov
add
scas
mov
xor
sub
das
aam
push
sbb
mov
add
mov
int
clc
add
push
jl
pop
adc
ds
mov
pop
je
push
aad
push
sbb
insl
int3
aad
add
cld
popa
mov
mov
cld
mov
leave
sbb
pop
icebp
orl
ja
pop
or
sub
loop
das
pop
pop
lahf
mov
mov
hlt
mov
in
xor
je
fs
test
mov
int3
in
push
jmp
idivl
imull
in
jmp
insl
in
mov
mov
fadds
std
adc
mov
mov
mov
dec
iret
lock
mov
sub
pop
cli
push
sub
sub
or
aas
imul
jp
cmp
mov
into
imul
xor
mov
jbe
ja
mov
fldt
movswl
mov
xor
leave
xchg
sub
xchg
incl
pop
les
push
filds
or
inc
rcr
cwtl
cmp
insb
cmc
xlat
mov
int
xchg
mov
jnp
outsb
xchg
sti
push
loope
jne
xchg
push
stos
jp
xchg
rcrb
inc
test
lock
popa
lret
aaa
push
frstor
dec
dec
punpckhbw
arpl
addr16
leave
aam
sbb
pop
mov
je
adc
cs
nop
idiv
lods
pushf
mov
xchg
sub
mov
inc
ss
ds
pop
cltd
mov
scas
cmpsb
or
or
mov
mov
mov
sbb
push
sub
sub
cltd
jecxz
fnstenv
sbb
ja
imul
stos
mov
fwait
dec
js
jo
sub
cmp
add
adc
mov
xchg
jno
pop
sbb
jnp
ret
ljmp
push
xor
xlat
cmp
aad
sub
mov
test
xchg
gs
and
mov
cmp
sbb
and
xor
or
addr16
pop
stos
mov
add
ret
stc
add
fwait
test
or
les
fs
inc
lock
jle
sub
add
mov
pop
shlb
jle
push
call
out
mov
pop
sub
fldt
xor
push
adc
dec
outsl
into
push
xor
mov
push
xchg
sti
pop
mov
test
cmpsl
bound
push
inc
mov
in
xor
sbb
ret
inc
mov
mov
enter
andl
ss
dec
clc
xchg
popa
in
hlt
punpckldq
jmp
out
mov
or
and
pop
pusha
sar
mov
adc
and
pushf
or
push
insb
lret
cmpsl
dec
pop
mov
mov
add
xchg
cmp
push
push
jecxz
or
les
push
mov
pop
jge
mov
into
or
enter
mov
xor
dec
xchg
lret
adc
xchg
pop
movsl
xchg
pop
mov
push
int3
pop
in
in
xchg
sbb
fnsave
test
leave
leave
add
xchg
sbb
mov
add
enter
pop
in
mov
lahf
jg
pop
mov
bound
sbb
sbb
xor
cmpsl
das
orb
xor
mov
rorl
adc
mov
xor
pop
out
pop
inc
sbb
xor
loope
mov
inc
mov
sbb
std
fdivrl
es
outsb
imul
fsubrs
out
dec
or
adc
sub
shlb
loope
sbb
or
xlat
cld
aam
rclb
pop
lods
lods
leave
push
inc
addb
sub
adc
cmp
sbb
push
sub
mov
xchg
cmc
xchg
mov
add
test
mov
or
dec
dec
sub
adc
je
cmp
rcll
jbe
lret
movsb
xlat
sub
add
mov
in
push
cmpsb
push
xchg
in
fsub
in
push
sbb
push
inc
inc
push
jmp
or
ljmp
dec
pop
add
add
icebp
clc
xchg
cmpsb
pop
mov
xor
rclb
test
pop
jno
orl
jae
or
in
out
sbb
jno
mov
mov
subl
adc
popa
sbbb
out
fisttpl
xchg
adc
sahf
stc
enter
adc
sahf
loop
lahf
pop
dec
or
pop
adc
cmp
jb
cmc
clc
test
adc
pop
outsl
pop
outsb
pusha
aad
fwait
sbb
pop
push
js
adc
out
dec
es
fnstcw
stos
mov
data16
cmp
stc
pop
jp
ret
nop
in
aas
xor
xlat
fimull
imul
push
push
gs
dec
js
push
xor
pushf
mov
mov
imul
dec
cltd
mov
imul
ss
mov
fisubrs
loop
cmp
inc
negl
fnsave
add
dec
and
or
movsl
or
sub
push
pop
pop
fiadds
push
sub
insb
outsl
insl
pop
lock
or
push
mov
mov
cmc
mov
dec
testl
insb
adc
je
jmp
mov
push
iret
mov
ljmp
addr16
test
mov
mov
jge
xchg
pop
jns
or
push
aad
add
mov
add
add
or
pop
imul
in
shlb
xchg
cmpsl
jg
enter
cs
arpl
or
or
out
ljmp
lahf
aas
mov
add
stos
cmpsl
mov
xor
call
and
add
into
inc
lret
fistps
mov
sub
iret
dec
or
cmc
and
out
test
cs
push
lods
cmpsb
stc
sti
into
sbb
or
xchg
add
lret
mov
sbb
mov
scas
mov
and
dec
inc
or
daa
adc
xchg
ret
mov
aad
into
fsubl
mov
pusha
jecxz
and
jmp
jae
imul
inc
stc
add
cwtl
ljmp
pop
xor
popa
push
push
jne
stc
lahf
add
dec
jns
clc
lea
adc
mov
xor
scas
cmp
ret
out
fsubp
xorl
inc
push
jmp
in
adc
push
cmpsl
ljmp
jae
push
loop
jl
test
push
out
mov
jbe
xchg
mov
sarl
pop
scas
daa
in
jp
ja
sarl
dec
jns
lds
loopne
and
insb
lods
js
mov
adc
add
dec
roll
jbe
xor
daa
adc
sub
jp
rcrb
mov
lahf
lock
outsb
sbb
jns
mov
jb
or
and
sub
push
dec
rol
orb
int
mov
pop
repz
pop
mov
es
push
mov
xor
jecxz
cmp
mov
lahf
and
in
or
icebp
bound
shrb
das
xchg
adc
ds
jnp
xchg
pop
fwait
cwtl
jp
lds
mov
mov
std
and
mov
pusha
aas
xor
nop
outsb
test
push
fucomip
mov
frstor
inc
xor
addr16
push
mov
pop
mov
rcrb
addb
cs
mov
adc
push
int3
mov
int3
inc
call
insl
add
cmp
jmp
sub
push
enter
sbb
in
sub
outsl
inc
jecxz
mov
and
les
xchg
pop
ret
jns
mov
sbb
into
nop
sar
pop
mov
stos
pusha
nop
lds
jbe
ljmp
jge
xchg
ss
std
test
shll
dec
fiadds
xchg
shrl
sbb
loopne
jnp
add
pop
and
dec
cmpsl
and
rcl
and
xchg
push
lods
test
xchg
lret
xchg
cmp
mov
addr16
stos
or
jns
stc
add
sbb
cs
outsl
mov
pop
addr16
mov
out
gs
mov
enter
cmp
and
inc
scas
lret
shl
jne
cmp
iret
in
in
push
movsl
jmp
jo
cmpsl
add
xchg
mov
sub
outsl
lods
jmp
mov
lods
iret
fdivs
cmpsl
cmp
movsl
pop
sub
add
test
mov
cli
ret
mov
dec
fsubrp
out
push
adc
jmp
mov
mov
adc
mov
fldenv
mov
icebp
ffree
or
aad
mulb
outsb
imul
and
mov
sbb
and
into
dec
xchg
ffree
or
cwtl
cmp
mov
sub
imul
int3
ds
jbe
out
fs
or
xor
and
std
push
neg
test
or
and
adc
jge
outsl
add
and
mov
enter
mov
lods
mov
xor
movsl
fdivrp
enter
in
cltd
subb
push
jecxz
or
aaa
push
test
filds
jns
daa
lock
fwait
add
jmp
mov
mov
xchg
ds
push
push
leave
mov
es
push
adc
xor
jmp
mull
or
jo
sub
push
jno
sub
stos
popf
fisubrs
add
add
shr
jl
dec
mov
push
rclb
inc
adc
mov
ds
dec
das
or
push
add
bound
and
pop
mov
xor
ja
out
xchg
testb
addr16
adc
in
shrl
cwtl
jge
adc
pop
scas
xchg
gs
sub
add
jo
push
mov
out
sbb
jl
test
test
mov
ror
fs
inc
leave
cmc
mov
cmovge
imul
scas
mov
cmp
test
sbb
inc
dec
hlt
aad
mov
mov
xor
jno
movsl
in
jle
mov
test
adc
or
mov
xchg
cli
pop
mov
or
icebp
call
loope
shll
dec
xchg
mov
loop
pushf
rcrb
mov
push
sub
mov
scas
lock
and
rorl
mov
cmc
mov
and
leave
cmp
sub
dec
mov
cmpsl
in
test
jbe
repnz
enter
nop
sub
push
mov
stc
cli
aaa
pop
mov
inc
cli
imull
testb
les
je
push
scas
lods
in
xchg
adc
or
movsb
movsb
mov
repz
push
clc
mov
sbb
sub
mov
std
xor
loope
mov
and
sub
add
cli
lods
outsb
and
xchg
call
sbb
popf
or
cmp
dec
test
push
lret
fstpl
iret
aas
sub
inc
push
jbe
loop,pn
mov
xchg
xchg
aas
inc
loopne
aas
dec
lods
sub
xor
and
int
push
data16
fs
sub
and
mov
push
add
icebp
mov
add
jbe
xor
pmuludq
jne
and
sub
push
movsl
clc
adc
test
sbb
sbb
ljmp
lea
insl
sbb
inc
aad
cmp
pop
sub
fsave
fidivl
sti
ds
call
dec
sahf
loope
out
insl
xchg
jno
cs
mov
sbb
mov
cmp
stos
lds
cltd
arpl
inc
stc
xor
inc
sub
mov
mov
mov
pop
fmulp
jb
js
dec
sub
lret
out
sbb
jmp
xchg
roll
jg
or
mov
lret
fwait
ss
int
mov
hlt
cmp
jle
xchg
mov
test
rol
stos
fdivr
stos
dec
push
pop
xor
movsb
pop
jle
stc
jae
leave
lods
push
sbb
mov
cmc
ficoml
dec
es
out
repz
pop
dec
push
xchg
pop
xchg
fldcw
pop
mov
dec
addb
cmp
pop
inc
shll
xchg
aam
das
mov
cmpsb
dec
in
int3
sbb
cmp
mov
sti
xchg
loopne
popf
in
adc
jnp,pt
add
cs
or
and
inc
enter
test
mov
lahf
or
loop
rorb
adc
popa
dec
pop
lret
cmp
pop
xor
je
jp
dec
vphsubbw
mov
xlat
dec
sub
push
loop
lea
into
push
aas
or
inc
jbe
je
loope,pn
mov
shl
int3
cmp
dec
out
mov
adc
pop
sub
shl
mov
sbb
jmp
mov
mov
aam
sbb
push
add
or
imul
mov
xor
imulb
cwtl
xor
out
cld
mov
push
push
nop
notb
call
sub
mov
mov
mov
ljmp
jg
mov
aas
mov
inc
sub
lcall
in
shlb
enter
js
fcom
fldl
jo
or
mov
and
rolb
stos
pop
and
push
mov
pop
pop
inc
gs
insl
js
sahf
cmp
popa
push
mov
loop
inc
dec
and
mov
repnz
xor
rcrl
lret
test
das
fnsetpm(287
xchg
jg
push
mov
out
and
lods
mov
cld
jae
inc
call
xor
sbb
inc
call
and
es
jae
fwait
ret
and
sbb
das
fisubs
loop
jle
adc
xor
out
jmp
jnp
and
push
jmp
or
mov
and
mov
xchg
mov
pop
pusha
jae
jns
sbb
or
dec
xchg
adc
cmc
popf
jbe
inc
sbbb
aad
popf
pop
cmp
mov
cmc
jecxz
xor
ds
mov
mov
je
cmp
inc
mov
dec
cmp
inc
scas
push
insl
sbb
xor
outsl
jo
jnp
lahf
stos
sti
dec
mov
cmp
add
and
xchg
or
xchg
daa
shrl
dec
xchg
stos
bound
aas
jne
cmpsb
xchg
aad
lret
xor
shll
test
mov
aad
add
mov
cmp
inc
mov
cmp
loop
inc
inc
popw
lea
sub
hlt
jne
sub
and
add
imul
hlt
lea
cld
aam
jb
cld
loop
jl
dec
das
push
lcall
push
scas
inc
stos
mov
xor
xor
pop
add
adc
dec
loopne
and
dec
sub
out
add
xor
jo
push
sbbl
in
lods
mov
mov
mov
jnp
aad
mov
test
xor
sahf
setnp
inc
in
lock
pop
pcmpeqb
cmp
out
mov
test
pop
jg
notb
xchg
sbb
loop
xchg
pop
out
xchg
out
nop
cmp
sbb
int
shlb
mov
pop
xor
xchg
int
dec
pop
aad
leave
mov
fldt
dec
xor
ret
leave
cs
out
aas
mov
pop
jg
imul
adc
imul
in
mov
lret
push
adc
adc
das
out
in
jbe
lahf
imul
out
pushf
or
push
roll
mov
add
mov
dec
out
lods
sti
dec
cmpsb
pop
pop
push
pop
insb
mov
je
xchg
loop
mov
inc
cli
test
mov
and
push
fdivrp
cmp
mov
push
or
push
jne
loopne
ds
gs
xchg
mov
mov
xchg
jmp
inc
mov
cs
xchg
shr
in
fcmovnbe
out
mov
fsubrs
popf
fidivrs
jno
xchg
lret
push
adcl
jbe
cmp
pusha
scas
mov
inc
lret
sbb
pop
imull
mov
imull
jge
cmc
inc
mov
ficoml
shr
cli
es
mov
sti
les
sub
stos
sbb
repz
jecxz
sub
or
bound
stos
inc
cmpsl
mov
xlat
push
scas
dec
cmp
cmpsl
push
cmp
mov
hlt
aad
repz
pop
mov
fidivs
mov
das
or
add
shll
mov
dec
out
sub
cmpsl
aas
cwtl
fcomp
and
lret
mov
push
je
add
pusha
lcall
inc
jae
pop
mov
cmp
data16
clc
inc
mov
cmp
stos
pop
arpl
mov
mov
ds
push
dec
dec
imul
scas
outsl
icebp
jo
cwtl
or
xlat
leave
dec
push
jb
cld
mov
mov
into
inc
adc
dec
lahf
inc
add
and
push
add
les
into
arpl
outsb
jbe
inc
jbe
pushf
push
or
mov
push
fmull
scas
sbb
mov
aad
in
scas
lea
lcall
jmp
push
xchg
test
outsl
filds
stos
xor
iret
and
hlt
mov
dec
adc
mov
jl
or
ucomiss
xor
pop
dec
lret
mov
insb
in
pop
mov
ja
in
ret
dec
fldcw
outsl
js
adc
push
mov
scas
or
push
and
addl
mov
call
roll
mov
add
stos
dec
ret
movsl
insl
dec
movsl
adc
or
push
mov
mov
cwtl
sub
inc
arpl
lahf
jle
popa
out
xchg
imul
icebp
rcrl
jmp
das
pop
xor
push
lahf
enter
pusha
xchg
je
add
or
and
in
scas
shr
cmpsb
add
das
xchg
shlb
cmp
cmp
sub
fldt
adc
popf
cmp
add
adc
aad
xchg
cmp
and
mov
and
test
arpl
push
lock
mov
out
sub
mov
fisttpll
aas
jnp
cmc
adc
dec
fmuls
test
cli
fiadds
push
loope
and
and
leave
sub
fsubrl
and
leave
adcb
fcmovnu
xchg
push
aam
mov
je
mov
and
mov
fists
mov
mov
fisubrs
mov
dec
out
inc
ja
or
pop
and
aas
dec
daa
and
js
stos
loopne
sbb
adc
cwtl
cld
es
bound
les
mov
inc
sbb
rorl
jb
or
mov
les
jmp
dec
inc
data16
leave
dec
scas
xor
fcoms
ds
add
gs
xor
lods
cmp
lret
mov
hlt
test
pusha
aaa
cmp
jge
lods
lahf
mov
jl
mov
pop
add
mov
enter
jns
push
or
test
loope
xchg
xchg
js
lds
push
jae
inc
cmp
test
jmp
jg
add
cmp
xchg
fs
imul
jbe
dec
add
pushf
lods
push
xchg
and
ficompl
inc
icebp
mov
cmp
mov
dec
push
rclb
in
mov
xor
in
js
hlt
adc
shll
pop
mov
mov
adc
movb
pop
aas
in
rcrb
outsl
iret
loope
scas
cltd
add
inc
imul
mov
or
cmp
fs
rcll
cmp
pop
jle
ljmp
fwait
jge
stos
stos
mov
inc
ljmp
mov
enter
and
fwait
xor
leave
dec
test
push
aaa
push
add
orl
andl
les
or
pop
cmp
call
cli
in
rol
push
sahf
sahf
xor
mov
push
mov
or
lea
aaa
mov
xchg
fsubrp
pop
push
adc
in
mov
stc
std
rclb
out
pushf
rcll
jns
add
push
jno
mov
cmpsb
ljmp
adc
aad
xor
add
fnstcw
mov
fidivs
addr16
je
mov
sbb
stos
sti
sub
mov
jnp
sbb
xor
mov
xchg
les
pop
std
loope
insl
inc
pop
mov
push
rcrl
push
ret
js
push
inc
inc
ret
sahf
mov
les
xor
int3
arpl
inc
cmp
pop
movsl
mov
rorl
ret
jp
in
mov
adc
stos
movsl
or
dec
in
push
inc
dec
ljmp
push
cmp
sarb
jg
in
pushf
int3
scas
sbb
ja
xor
xor
mov
or
lds
fcomip
pushf
sub
cmpsb
add
mov
jns
sub
jecxz
push
xchg
inc
jp
pop
popa
ja
sbb
out
add
cwtl
clc
rcr
imulb
push
fdiv
insl
mov
sbb
clc
or
pop
xlat
fcoms
cwtl
inc
inc
pusha
iret
sub
outsl
out
popa
rcll
sbb
sub
pop
js
xchg
jge
lret
rol
lret
test
movsl
lods
hlt
adc
inc
loope
mov
je
ret
mov
inc
das
icebp
iret
pop
add
sub
adc
adc
hlt
shlb
es
and
dec
cli
sbb
into
push
cmp
cmp
cmp
or
jle
jnp
jo
and
dec
xchg
frstor
fildl
inc
pop
xchg
sysexit
xor
mov
pop
xor
dec
adc
and
pop
lds
aaa
popa
cltd
or
cli
push
es
lock
je
mov
push
bnd
mov
xchg
or
inc
inc
jmp
insl
scas
pop
cmpsl
jecxz
jno
pusha
clc
cmp
mov
push
scas
subb
sbb
roll
dec
sbb
in
sub
inc
bound
mov
jbe
jge
cltd
mov
pop
inc
mov
dec
xor
enter
aad
and
sbb
sbb
xor
lods
mov
test
jg
lahf
stc
lret
orl
int3
popa
jg
inc
mov
int
xlat
out
js
and
lods
cmp
push
dec
push
pop
stc
out
add
add
push
inc
or
lea
mov
mov
loope
sbb
leave
dec
push
ds
in
mov
add
and
lods
or
cmpsl
js
push
das
int3
das
mov
xchg
xlat
je
loopne
sub
repnz
cmpb
dec
pop
xchg
mov
inc
shll
gs
cmpsl
xchg
clc
mov
leave
and
push
add
call
aam
icebp
jl
or
jae
jo
adc
sahf
es
pop
pop
mov
xchg
jl
daa
scas
shlb
rcl
jle
add
ret
adc
adc
inc
xchg
jno
push
pop
leave
mov
jae
xlat
cwtl
ss
das
dec
pop
sbbl
lea
ficoml
pop
jo
movsb
xlat
push
pop
sub
jbe
loop
imul
xchg
push
adc
jbe
push
push
outsb
insl
mov
andb
jmp
push
dec
push
xor
mov
and
test
mov
ret
push
cmpl
pushf
or
add
outsl
mov
fst
shr
in
push
stc
dec
std
cltd
mov
dec
pop
cwtl
xchg
cs
push
jmp
mov
icebp
loope
sbb
ljmp
sub
pop
repz
les
stos
mov
and
movsb
pusha
ret
in
or
icebp
lcall
jns
fsubrs
and
pushf
push
adc
in
mov
pop
cld
xor
cld
push
push
rcl
mov
je
jo
subb
sbb
movsb
cmp
mov
adc
dec
push
mov
mov
lods
pop
jb
or
pop
out
mov
hlt
rol
inc
ds
sahf
js
lds
int3
cmc
test
push
lcall
mov
add
sub
sahf
adc
mov
loope
jbe
dec
xor
out
popa
repz
pop
cmp
push
scas
or
xor
rol
call
gs
jbe
push
cltd
iret
clc
lret
shl
mov
fidivrl
out
mov
dec
cs
subl
mov
sbb
jae
xchg
cmp
jns
shrb
mov
lahf
xor
sarl
and
shrl
mov
data16
test
orl
cmp
int
cmp
mov
push
and
xor
push
cmc
and
dec
in
mov
in
sub
scas
dec
int
lcall
mov
or
add
jecxz
loope
repz
sub
or
sub
scas
cmp
stos
lds
cmp
inc
lock
mov
push
imulb
push
push
jge
cmpl
out
lds
or
cmpsb
and
sbb
adc
jb
scas
push
pop
and
out
xchg
lock
jle
icebp
push
adc
cmp
or
lods
cmp
fiaddl
add
in
push
addr16
sahf
pop
mov
mov
push
mov
mov
mov
push
sub
pop
sub
icebp
lds
shl
scas
xchg
or
orl
xor
outsb
icebp
movsl
lods
daa
or
negl
outsb
jns
insb
xor
cltd
cli
xor
cmpsl
cmp
inc
inc
or
sarl
les
adc
dec
add
cmp
ja
test
xchg
fcom
cmp
cmp
jge
icebp
lret
mov
outsl
sub
repnz
xchg
dec
sub
dec
popf
or
leave
ja
adc
aam
jae
test
and
rolb
push
xchg
fsubrl
xchg
mov
sub
out
jae
push
xor
xor
xchg
mov
mov
push
bound
in
pop
xor
mov
lahf
xor
inc
jmp
cli
mov
adc
cmc
out
lcall
push
adc
jno
scas
push
sub
ret
cmc
push
mov
mov
or
out
call
leave
aad
lock
xchg
jns
push
scas
sbb
addl
ja
jmp
xlat
sub
jnp
add
test
add
cmp
outsl
mov
inc
jecxz
lods
pop
sbb
push
in
sbbb
fs
int3
jne
icebp
sbb
hlt
or
aas
bsr
jb
dec
jns
enter
and
test
les
cli
pop
xchg
mov
lea
out
push
inc
pop
cs
and
add
sbb
sub
add
push
push
xchg
clc
nop
xorl
out
mov
sub
fwait
lds
add
adc
pop
aas
mov
cs
xor
inc
or
push
mov
push
ror
pushf
imul
out
xor
popf
jae
int3
cmpsl
loope
mov
out
mov
xor
test
repnz
dec
mov
jbe
ret
cltd
lods
xor
aaa
dec
xorb
and
aaa
inc
xor
sub
icebp
lahf
fmulp
jge
pop
out
inc
mov
and
push
cmpsl
lret
cwtl
icebp
imul
jmp
stc
ret
pop
leave
xchg
out
jmp
or
fs
gs
dec
jb
rorb
cmp
xor
shrb
std
cmp
iret
xchg
jecxz
mov
in
adc
aam
cltd
cld
and
mov
push
mov
adc
xchg
add
stos
shll
test
push
test
in
mov
xchg
inc
faddl
loopne
mov
in
jge
mov
lds
jnp
int3
mov
test
lcall
xchg
aas
pop
stc
push
mov
adc
xchg
sbbb
lock
lcall
imul
test
subb
mov
jge
mov
or
in
fdivrs
fdivrs
cmpsl
push
cmpsb
cmp
ret
push
sub
aam
sub
mov
mov
push
mov
mov
adc
mov
jbe
into
jno
imul
and
mov
pop
enter
or
addr16
jo
sarb
imul
scas
sbb
std
das
xor
fcmovne
cmp
nop
cmp
pop
je
call
mov
sbb
dec
xor
jbe
jmp
xchg
fwait
xor
divl
sub
pop
movsb
idivl
sahf
aad
lahf
int3
or
push
out
nop
in
xchg
add
add
popf
dec
outsl
repz
sbb
in
pop
adc
adc
xchg
fisubl
gs
pop
mov
mov
add
pop
push
jae
push
add
popa
add
mov
dec
fucomp
xor
push
jl
mov
xor
ret
loop
sub
iret
jae
xacquire
inc
mov
icebp
popf
mov
jp
fisttpl
popf
ret
enter
jle
mov
or
out
fwait
inc
ljmp
mov
mov
lcall
sahf
cmpsl
xchg
mov
fnstcw
fwait
imul
sbb
aaa
sbbb
dec
lea
or
in
test
loop
loop
xchg
or
test
jb
dec
jbe
lahf
adc
push
aaa
mov
not
pop
sub
sub
sahf
out
sub
mov
dec
movl
data16
decl
inc
ds
aad
mov
ret
js
pop
dec
lods
xchg
ds
inc
jge
fidivrl
popf
test
jnp
add
push
leave
pop
jne
or
loope
into
rcll
jbe
fldt
test
fldpi
dec
out
mov
sub
dec
movsb
popf
and
cltd
ffree
jno
cmp
out
rolb
data16
inc
ret
mov
jmp
rclb
lods
aaa
mov
test
in
xchg
leave
gs
mov
call
and
sub
sub
sub
ds
sbb
xor
loop
mov
add
lret
jp
bound
mov
lcall
stos
xchg
clc
lret
int
pop
push
sbb
push
push
test
lds
push
mov
leave
xchg
cmp
aad
jno
xor
pushf
add
lcall
xor
xor
fstp
xchg
lret
mov
lahf
movsb
ljmp
jge
adc
and
test
or
aas
xchg
sahf
mov
cld
lock
jecxz
fcomip
xor
mov
test
sub
and
cmpl
daa
in
scas
les
xlat
jns,pt
xor
ret
sub
cpuid
adc
adc
mov
and
push
bound
fildll
or
adc
or
add
stos
mov
mov
int3
sub
cmpsl
inc
test
pop
loope
iret
jge
inc
imul
js
push
cltd
cwtl
fwait
imul
pop
mov
les
scas
mov
fcmovu
js
sub
cmp
mov
sbbb
popa
pop
in
loope
movsl
mov
data16
rolb
and
sub
call
cmp
inc
pop
adc
je
stos
test
clc
stc
jno
jmp
dec
les
lret
sahf
in
inc
xchg
sub
ss
jb
out
stos
addl
sub
jo
imul
imul
lret
sti
bound
push
stos
and
bswap
fisttpl
fwait
iret
pop
aam
dec
iret
cmp
in
xchg
push
or
cwtl
icebp
out
jg
xor
mov
popa
sbb
adc
pop
or
jne
lods
icebp
mov
inc
xchg
in
mov
ror
add
xchg
or
and
cmp
std
daa
mov
cmp
push
xor
out
pusha
sti
ret
divl
ljmp
cmp
aaa
push
rcrb
cmp
lods
imul
outsl
lea
test
mov
bound
and
cs
les
mov
lahf
push
andb
lods
and
aad
jle
in
mov
movsb
andl
xchg
jb
push
test
mov
testb
insb
jns
pop
imul
ja
nop
lret
inc
hlt
je
jae
fstl
push
dec
mov
cli
sbb
icebp
mov
mov
xor
sti
int
inc
scas
mov
push
out
lcall
je
add
xchg
leave
out
adc
stc
cmp
mov
push
loope
es
and
push
jg
mov
pop
cs
push
test
cmpsb
mov
xchg
xor
push
js
lock
push
lret
imul
roll
dec
xor
or
mov
js
sub
addr16
fsts
mov
and
mov
mov
add
jae
sbb
sbb
daa
hlt
inc
lcall
cltd
fimull
xor
mov
scas
fs
push
icebp
int
out
in
repz
or
mov
cmp
sub
out
pop
cld
xchg
scas
sti
dec
and
jge
xor
push
in
stos
jge
out
mov
sub
sbb
and
cltd
in
sbb
aas
test
inc
jge
cmp
int3
add
dec
mov
aam
rcrl
popf
xor
jb,pt
inc
push
push
lcall
jne
sub
mov
dec
fimull
ljmp
mov
or
cmpsl
dec
clc
xchg
clc
out
and
lea
mov
mov
pop
mov
dec
jnp
outsl
repnz
add
lret
shll
adc
dec
and
cmp
stc
sub
pop
cli
mov
and
xlat
aad
fcoml
cltd
push
scas
push
mov
adc
xchg
mov
xor
pop
fisttps
mov
push
inc
lods
aas
nop
cmpsb
jb
rclb
push
cmp
fadds
and
test
in
fdivrs
add
fwait
xor
dec
lods
inc
sbb
add
mov
rcl
inc
ret
cmp
push
clc
pop
leave
inc
aas
adc
daa
push
mov
adcb
cmp
pop
mov
add
push
sub
jecxz
pop
cmpsl
xchg
jae
in
sub
repz
out
mov
mov
xor
pushf
jle
jecxz
out
sub
mov
test
in
cld
cli
or
pop
mov
test
hlt
imul
ljmp
xchg
mov
movsl
mov
mov
call
fbstp
push
mov
push
aam
pop
cmpsl
addr16
dec
mov
dec
jg
adc
rclb
out
insl
sbb
push
and
rclb
xor
pop
push
pcmpeqd
add
add
fmulp
test
orb
jp
scas
cmp
jb
add
in
jl
fld
xor
push
inc
test
cmc
inc
or
dec
cltd
in
jecxz
sub
mov
push
mov
inc
sbb
jo
xchg
gs
cltd
jl
cmpsb
gs
pop
push
icebp
fadds
lea
shlb
jmp
stc
cmpsl
dec
test
rorl
dec
xchg
ds
mov
lcall
sub
test
mov
mov
xor
outsl
or
sbb
mov
mov
dec
inc
push
imulb
gs
loope
loopne
test
xor
mov
fidivrl
loopne
cmp
xor
push
rcll
dec
clc
xlat
sub
pushf
lcall
stos
aad
ds
shr
push
imul
jnp
jp
outsl
stc
pop
outsb
push
xlat
lods
jnp
mov
iret
loopne
out
insb
ss
stos
sbb
xor
lock
xchg
fwait
ljmp
fstpl
test
xor
std
add
add
push
push
pop
adc
jp
fwait
mov
xor
adc
ret
cmpsl
push
insl
test
lea
mov
nop
movsl
popf
out
loope
stc
inc
mov
clc
inc
xchg
sbbl
cmp
std
mov
jo
aad
jae
repnz
adc
cmp
or
mov
or
xor
jp
rcll
inc
lea
jne
xchg
dec
icebp
adcl
dec
lods
sub
sub
xor
scas
lock
test
in
cltd
mov
int3
mov
cltd
add
js
imull
in
push
and
mov
lock
imul
jno
mov
mov
jno
mov
mov
xor
xor
dec
maxps
cmp
sbb
sbb
int3
or
cltd
gs
into
push
inc
push
je
jns
sti
clc
pop
adcl
cwtl
and
gs
inc
add
add
dec
shl
in
sub
addr16
test
push
scas
test
nop
lahf
ss
jge
cmp
mov
cmp
fwait
std
orl
jp
in
inc
cs
repnz
mov
pop
dec
or
lea
mov
inc
push
jo
push
mov
movl
mov
stos
dec
ficompl
fs
dec
cs
pop
push
repnz
xor
mov
xchg
jno
pop
mov
inc
ltr
and
xchg
movsl
lock
mov
mov
icebp
xor
std
inc
push
jle
nop
insl
ret
subl
subl
lock
cmp
dec
fwait
jp
dec
dec
and
aaa
ja
inc
stos
nop
sub
xchg
pop
sbb
movsl
push
add
adc
pop
imul
pop
inc
loope
add
lea
jle
scas
ret
gs
outsb
jl
int
lock
movsl
push
shrb
outsl
mov
int3
mov
mov
test
mov
xor
push
int
pop
jne
jecxz
dec
add
addl
cmp
add
out
pop
xchg
ret
jns
adc
push
mov
adc
addb
push
adc
js
xchg
inc
cmp
dec
ss
jg
aaa
add
fwait
imul
ret
cli
push
xchg
inc
xchg
sbb
add
arpl
xchg
xlat
mov
hlt
push
sti
pop
and
pop
cmpsl
mov
and
leave
scas
jne
insb
ljmp
cmp
lods
mov
xchg
xor
cmp
mov
add
mov
push
mov
lods
sub
jne
ss
cld
and
imul
add
push
out
leave
out
lret
inc
jmp
xor
orl
sub
loop
shrl
scas
adc
inc
lret
jl
xchg
or
xchg
pop
sahf
xchg
xchg
jl
mov
fidivl
test
adc
iret
outsb
dec
jmp
movsb
mov
cmp
leave
fsts
loop
hlt
mov
cmp
xor
outsl
cmp
push
push
int
lea
cmp
sub
xchg
jge
sbb
jns
movsl
add
gs
inc
sub
pop
adc
jg
pushf
testb
popf
andl
inc
xor
mov
jae
das
lahf
mov
call
inc
fldl
cpuid
push
movsb
adc
pop
repnz
cs
mov
sbb
push
ret
movsb
in
nop
or
or
xchg
mov
mov
lret
aas
stos
ret
sti
outsb
enter
insb
dec
mov
stos
mov
jne
idivb
sar
leave
pop
or
ds
subl
in
mov
cmpl
sahf
enter
icebp
mov
aaa
sbb
sub
int
test
fs
test
movsl
in
dec
ret
push
jbe
ja
push
pop
sub
jnp
mov
aad
hlt
inc
gs
aaa
jbe
sbb
or
sti
sbb
mov
push
es
pop
or
es
xchg
pop
mov
pushf
inc
rorl
jg
cmp
aaa
push
gs
or
cmp
mov
cwtl
inc
mov
js
push
mov
rcrb
test
push
jns
mov
jp
fwait
in
leave
cmc
xchg
fmul
push
je
shlb
mov
fbld
imul
rolb
je
in
push
sbb
clc
xor
stos
adc
adc
js
subl
stos
jne
inc
fstl
xlat
adc
sbb
mov
repz
pop
andl
xchg
add
sub
xor
jnp
leave
dec
ret
lods
bound
scas
mov
fldl
and
pop
adc
mov
add
cmp
jne
negl
arpl
jnp
xor
pop
jmp
mov
dec
lods
push
fiadds
test
jno
inc
shlb
test
and
stos
sub
or
jno
mov
pop
subb
test
dec
xor
mov
or
fidivrl
pop
push
adc
jl
ds
mov
push
sub
leave
call
adc
jo
mov
lock
leave
xchg
std
stc
aam
sahf
test
sbbb
sub
mov
insb
mov
lock
mov
scas
mov
jle
stos
jl
sbb
pop
flds
stos
sbbb
fsts
stos
adc
jno
rcrb
shlb
inc
inc
aad
in
xor
mov
andl
mov
call
fisttpll
push
bndldx
or
jb
int
stos
mov
mov
iret
dec
std
rclb
push
sbb
or
test
inc
and
imul
orl
lret
and
ja
pop
xor
stos
jb
into
rcll
push
enter
es
mov
std
push
push
mov
bound
jo
mov
or
and
push
add
in
adc
jb
cmp
lret
push
decl
sbb
mov
addb
ret
inc
iret
scas
mov
pusha
cmp
pop
je
inc
lds
jle
xor
xchg
andl
push
mov
arpl
jo
stos
cmp
cmp
and
lahf
xchg
or
and
cld
in
mov
dec
mov
shl
push
imul
lcall
jge
adc
scas
pop
push
mov
sub
leave
outsl
imul
pushf
aam
in
xchg
movsb
in
bound
cmp
or
xchg
ficompl
xor
int
lods
lahf
bound
loopne
aaa
rclb
jle
cmc
sti
mov
fiadds
aad
dec
lds
xchg
shll
xchg
pop
mov
jle
mov
and
add
popf
pop
imul
imul
stos
pop
sbb
lret
xchg
add
nop
xchg
mov
mov
lods
movsl
lahf
rorb
hlt
cmp
movsl
test
pusha
mov
xchg
in
mov
add
aam
shrb
xor
xor
lds
loopne
mov
sarb
jnp
leave
mov
mov
std
in
or
sbb
imul
xlat
nop
sahf
cli
or
sbb
xchg
pusha
pop
xor
cmc
js
xchg
dec
movsl
jecxz
hlt
push
cmp
lret
stos
add
mov
inc
fwait
adc
addr16
push
mov
pop
inc
sbb
jmp
sub
xchg
add
int3
xchg
fbstp
negb
jbe
mov
loop
loop
dec
loope
lahf
sbb
std
mov
jl
fbld
push
es
cmp
push
or
movsl
pop
cmp
or
xchg
repnz
sbb
ror
js
xchg
test
push
or
sti
add
fs
loop
jle
pop
mov
mov
xor
inc
jmp
xlat
xor
btr
in
test
enter
loopne
sarl
in
mov
xlat
dec
push
daa
dec
pop
out
lds
pop
or
clc
lea
cmpsl
adc
insl
mov
jbe
movsl
jmp
bnd
lcall
xchg
test
cmp
cmc
sub
inc
into
insb
cmp
mov
out
or
hlt
iret
scas
test
imul
jp
fildl
xchg
jl
fisubl
push
shrl
pop
rcll
mov
fldl2t
push
data16
outsl
data16
dec
ss
aam
sbbb
in
aam
bnd
sub
mov
and
pushf
mov
test
insb
inc
enter
jae
outsb
cmp
jl
outsb
pop
adc
movsb
inc
pop
int3
cmc
cmp
xor
jne
pop
icebp
cs
sbb
sbb
mov
scas
xor
loopne
xchg
in
sbb
mov
add
xchg
into
push
or
rcll
push
ds
xchg
add
sub
ret
add
push
cmpsl
cmpsb
mov
fistpll
jmp
sbb
pop
repz
fisubrl
cld
aas
call
mov
push
jb
jle
rorl
outsl
cltd
sub
xor
jns
std
cmpsb
arpl
sbb
out
lock
ljmp
lods
test
adc
test
popa
dec
or
not
jnp
mov
lock
lea
enter
lea
sub
sti
test
mov
roll
xor
mov
popf
out
nop
hlt
mov
adc
xchg
imul
out
push
daa
or
push
sahf
pushf
out
mov
cmp
ror
outsb
xor
enter
scas
lods
adc
cmp
sub
int3
lcall
loopne
fisttpl
jae
fidivrl
movsb
dec
dec
pop
aad
mov
cmp
and
adc
mov
lds
mov
aas
cmpl
jns
das
movsl
popa
int
rcrb
sub
mov
aas
out
mov
mov
mov
mov
dec
dec
xor
loope
sahf
push
mov
ficomps
outsl
xor
pop
dec
cmp
lock
cld
test
pop
add
push
xchg
out
adc
cmp
inc
jge
cmpsb
insl
xor
pusha
pop
adc
pop
mov
test
jmp
repz
dec
push
int
ja
xchg
jmp
fcmovne
ror
pop
cld
dec
leave
mov
xor
or
push
mov
push
rclb
push
dec
mov
sub
repz
ljmp
mov
dec
dec
cltd
add
xchg
ret
outsl
jge
rol
scas
test
xor
mov
mov
pop
ret
sbb
lock
int
pop
xchg
adc
cmp
mov
push
loopne
xchg
das
jb
rcll
fistl
xchg
and
imul
add
icebp
or
pop
scas
push
sub
mov
lcall
jp
sub
push
add
cmp
daa
out
mov
xchg
clc
std
push
comiss
jle
data16
in
outsl
data16
lret
loop
inc
adc
movsb
pop
adc
pop
sarl
dec
cltd
mov
or
or
sub
mov
ret
mov
movsb
mov
jns
mov
imul
add
loopne
scas
cld
push
dec
xchg
hlt
arpl
in
mov
jge
adc
popa
jb
les
lock
repnz
lret
and
data16
das
in
je
inc
mov
jle
pushf
xchg
outsb
leave
popf
imul
pusha
adc
fimuls
cs
cwtl
pusha
push
sbb
in
mov
insl
in
push
mov
push
push
xchg
cmp
popf
jbe
fst
mov
and
pop
xor
test
mov
into
ljmp
xchg
cmpsb
sub
popf
mov
es
cmp
cmp
mov
sub
inc
aaa
jmp
xor
cmp
sbb
jnp
push
pop
push
pop
mov
rcl
int3
sbb
mov
xor
jle
push
xor
cmp
call
mov
mov
fs
cs
loopne
cmp
out
je
clc
xchg
xchg
xchg
and
leave
push
movsl
inc
jmp
sub
insb
movb
xchg
push
jnp
ficoms
ds
push
or
sbb
dec
xor
mov
in
gs
fdivs
inc
insl
pop
rcrb
cmp
inc
mov
jmp
sbb
mov
mov
adc
in
hlt
xor
outsl
push
mov
sub
pop
andb
mov
in
int3
adc
ja
inc
fsubrp
sbb
out
outsl
arpl
xchg
inc
push
scas
lock
push
cmpl
and
iret
in
add
clc
std
xor
jne
fdivl
and
repnz
xchg
stc
jae
mov
mov
cwtl
lds
out
cmp
mov
adc
sbb
mov
in
pop
fsubl
inc
xchg
fdivs
jecxz
push
out
cmp
adc
inc
or
fistl
arpl
pop
cmp
inc
cwtl
les
inc
add
stos
jp
mov
ja
shr
push
and
je
xchg
call
sti
shrb
xchg
js
cli
enter
stos
push
lea
push
pop
push
pop
xor
inc
pushl
xor
je
push
mov
lea
lea
stos
clc
jp
int
mov
pop
sub
add
jbe
mov
mov
roll
fwait
mov
xchg
and
mov
cmp
ret
jmp
dec
dec
rorl
mov
xchg
pushf
std
scas
leave
mov
enter
mov
xchg
ljmp
dec
inc
adc
dec
xlat
int
push
mov
fstl
insb
push
int3
stos
out
xchg
adc
imul
or
mov
in
gs
jle
inc
jg
inc
mov
pop
mov
andb
xchg
adc
or
test
shrl
jg
mov
ficoml
mov
insl
sub
stos
xor
aam
jmp
sbb
and
cmc
inc
jp
mov
inc
sbb
std
fs
adc
adc
inc
std
je
out
daa
sub
inc
mov
adcl
xlat
jp
fmull
cmp
out
add
scas
mov
push
pushf
pop
and
cmp
lret
push
adc
movsb
lods
dec
mov
cmpsb
push
dec
notb
cmp
xchg
or
jle
cld
xor
addr16
mov
cmpsb
dec
in
mov
loop
les
iret
xorl
jo
gs
push
adcl
in
mov
mov
jg
xchg
lret
inc
call
pusha
cli
mov
shlb
popf
lods
or
mov
shl
push
jmpw
mov
sbb
sbb
mov
pop
daa
mov
mov
cmp
sarl
pop
xorb
repz
mov
inc
dec
xlat
mov
cmc
fistps
sub
arpl
in
xor
jle
test
mov
push
xor
loope
rcrl
mov
pop
and
fisttpl
pop
jb
pushf
hlt
xlat
scas
push
leave
inc
sub
leave
lea
clc
add
jne,pt
push
rorl
pusha
jecxz
es
adc
dec
clc
clc
jbe
push
fwait
test
pop
stos
xor
jno
xchg
push
sub
idivb
lea
cmp
mov
lahf
psrlq
cmp
dec
dec
data16
inc
aas
cwtl
inc
inc
pop
rolb
sub
ret
outsb
and
movsl
popa
adc
repz
popa
repz
repnz
push
out
pop
jmp
sarb
or
jecxz
das
out
fcoms
cmpsl
xor
clc
stos
xlat
lea
ret
xor
xor
cmp
adc
pop
jg
or
cmp
shl
jecxz
ja
daa
cs
and
or
leave
rcll
xor
jo
movsb
rcr
xchg
add
mov
jo
add
sub
movsb
sahf
iret
daa
ds
jno
sbb
lods
test
dec
mov
loope
push
sbb
mov
mov
xor
inc
dec
jmp
lea
out
inc
notl
xchg
lock
mov
jge
adc
pushf
lods
cmp
cmp
add
je
ljmp
adc
mov
stos
movsb
adc
rcrl
inc
lcall
leave
fnstenv
xor
lods
cmc
mov
cmp
aas
stos
xchg
pushf
out
and
push
xlat
lret
enter
cmp
or
pop
pusha
loopne
pop
enter
arpl
int3
fdivp
iret
fisubl
dec
cmp
pop
cmp
mov
fdiv
dec
sub
jne
hlt
sbb
xchg
outsl
ds
jl
pop
repnz
cmpsl
lock
ret
sbb
mov
popf
cmp
aaa
inc
outsb
fadds
fisubrs
jle
jp
pop
sysret
xchg
push
or
push
shll
mov
ret
add
shll
push
xchg
fadd
pop
cltd
mov
jnp
xchg
inc
mov
aas
pop
inc
adc
jnp
jne
loopne
xchg
rolb
mov
push
es
test
mov
aaa
mov
jbe
push
movsl
loop
mov
idivl
cmp
hlt
out
scas
lea
jle
mov
into
mov
sahf
mov
fs
pop
popa
push
shl
cltd
jp
lahf
or
inc
imul
arpl
inc
mov
push
mov
sbb
mov
and
jle
hlt
jb
std
xchg
cwtl
insb
jbe
shll
xor
cltd
sub
jg
aam
jge
fsub
jecxz
push
dec
add
loopne
imull
rolb
stos
xor
or
das
inc
sti
push
adc
out
and
xor
mov
les
dec
mov
cwtl
bound
movsb
dec
out
jnp
daa
push
inc
les
das
xchg
adc
lcall
faddl
call
xchg
inc
cmc
movsl
jno
addr16
fists
adc
cmp
addl
lods
lea
sbb
and
cmp
mov
adc
mov
enter
fisttpl
lret
mov
mov
fs
test
xor
fcmovne
adc
insb
mov
pop
scas
sahf
mov
mov
pop
ror
dec
dec
das
or
loopne
insb
jb
cs
jb
or
mov
mov
idiv
icebp
lret
dec
jo
dec
imul
movsb
xchg
jb
adc
lods
jge
scas
pop
add
sbb
mov
mov
dec
sub
inc
xchg
or
cs
cld
mov
adc
sub
rcll
les
sbb
ret
popf
fldenv
rorb
lods
xchg
mov
push
or
bound
cmp
cltd
fs
out
adc
cltd
mov
mov
jg
subl
aaa
je
test
push
bnd
pop
outsl
fstpl
dec
lods
rorl
cmp
enter
mov
xor
fsubr
sbb
mov
sub
cs
cmp
mov
fstpt
loop
aad
stos
idivb
sub
cmpb
dec
jbe
dec
rdmsr
xor
xchg
mov
mov
jnp
jge
or
rcrl
jnp
and
xchg
pop
mov
add
push
insl
or
jns
rcrl
movsl
lret
xor
icebp
clc
dec
xor
inc
xchg
arpl
adc
mov
sbb
xchg
sub
push
mov
pop
outsl
das
lret
xchg
cmp
push
into
scas
mov
loop
xchg
jno
jecxz
sub
stos
rorl
stos
or
xchg
pop
cmp
stos
pusha
and
mov
adc
stos
dec
jl
mov
neg
jbe
jge
fiaddl
push
clc
icebp
icebp
out
outsl
es
adc
icebp
lahf
popa
loope
xlat
add
insb
lods
inc
xor
sub
and
add
leave
dec
dec
aaa
jl
divl
scas
sbb
jnp
and
cld
xchg
nop
cld
mov
mov
daa
addr16
sub
ds
inc
dec
lods
add
arpl
xor
fiadds
or
mov
test
es
mov
add
push
std
jnp
push
and
jns
adc
sbb
fs
data16
add
xlat
loop
ja
add
mov
fdiv
or
stos
in
push
sbb
hlt
cmp
stc
idivb
repnz
sub
orb
dec
lea
sahf
mov
sahf
js
add
arpl
je
push
fnstcw
frstor
add
add
adc
jno
xlat
bound
loopne
jp
push
addr16
push
loopne
ret
mov
shlb
out
adc
xlat
imul
jnp
xlat
pop
or
test
scas
rorl
cltd
push
mov
dec
ret
ficompl
jo
push
pop
mov
sbb
dec
xor
mov
or
pop
movsl
clc
lock
mov
mov
dec
imul
test
mov
scas
jns
mov
push
sbb
imul
dec
jg
push
push
mov
negl
mov
imul
dec
nop
jmp
lahf
push
in
es
inc
xor
push
and
mov
adc
jge
adc
call
mov
cmp
push
pop
jne
scas
mov
mov
push
push
cmpsl
dec
pushf
push
or
std
lahf
pop
sbb
cld
mov
pop
pop
pop
je
sbb
das
hlt
loop
pop
pop
aam
imul
jno
mov
out
outsl
mov
or
ss
popf
aaa
rorl
lahf
xlat
sub
push
or
sbb
push
lcall
sub
push
push
mov
enter
outsl
mov
sub
cltd
xlat
adc
rcr
test
int
mov
pop
add
mov
jl
sti
shll
imull
leave
jbe
cmp
jmp
int
cld
jl
xlat
out
arpl
adc
clc
cmc
cwtl
dec
das
push
xor
mov
out
in
add
dec
jae
cwtl
sarb
inc
pop
mov
jns
nop
les
pushf
fdivr
mov
aaa
dec
scas
inc
lcall
outsb
and
lods
xchg
pop
xor
cmpsl
fistpl
mov
cltd
aam
xchg
and
sahf
insb
dec
add
jne
push
stc
into
es
pushf
fnstcw
mov
shrb
push
movsb
sub
repz
call
or
out
adc
add
xor
mov
sub
push
out
adc
add
inc
cmp
adc
cmpsb
adc
xchg
fildl
into
jmp
or
mov
movsb
adc
repnz
pop
dec
movsb
in
shll
lock
xor
pop
mov
jae
mov
sub
pop
addr16
lods
xchg
fcomip
jmp
out
jmp
sub
dec
or
xor
add
rolb
or
jae
sub
dec
cmp
or
out
arpl
outsl
lds
stc
push
dec
sub
or
insl
sbb
jle
out
sbb
push
dec
aaa
cmp
adc
mov
cmc
pop
je
call
pushf
push
add
xchg
arpl
in
bnd
shll
scas
pusha
adc
cmp
pop
lcall
test
cmpl
mov
outsb
in
jnp
jg
sbb
inc
add
call
test
aas
mov
iret
pop
mov
push
and
jle
loop
mov
push
jmp
fidivs
or
mov
insb
pop
and
lcall
cld
ljmp
sahf
mov
add
jo
ljmp
popf
push
pop
pop
inc
lret
sub
sti
stos
and
fstl
fdiv
repz
mov
aas
push
ret
push
and
mov
mov
leave
jg
pushf
sub
cmp
xor
mov
pop
mov
nop
sub
in
sub
or
fildl
and
test
jge
pop
fcoml
sbb
fnstcw
ljmp
pop
sar
repnz
das
sub
out
and
xchg
inc
push
movsl
jmp
pop
ss
fnsave
test
sar
rorl
mov
sub
adc
rorb
xlat
ret
pop
imul
aaa
lds
jae
jp
std
leave
cmc
cmp
cmp
jae
sahf
out
mov
addb
icebp
jmp
jne
jmp
jge
arpl
loop
ss
sub
mov
icebp
cmp
cmp
test
les
dec
shrb
stc
scas
fmull
movsl
imul
fnop
addl
push
mov
out
mov
xchg
push
inc
fcomip
inc
cmc
ret
fists
sub
or
push
int
mov
add
repnz
or
ljmp
jg
xchg
test
and
cwtl
push
xor
in
popf
mov
shlb
mov
xchg
or
shrl
jmp
je
and
mov
loop
add
mov
ret
xlat
push
push
xor
in
or
xchg
fsts
fsts
mov
xor
int3
mov
xchg
mov
fidivrl
inc
orb
stos
xchg
xchg
push
stos
xor
test
pop
add
lods
xor
loopne
dec
adc
lahf
out
lods
adc
mov
popa
popa
sub
push
and
xor
and
call
movsb
xchg
push
adc
push
in
test
in
pop
dec
enterw
les
mov
pop
and
pop
ja
and
cmp
jo
jecxz
sysexit
pusha
stc
hlt
dec
vpmacssdqh
pushf
xor
jno
jae
jne
enter
aas
cmpsl
in
or
jmp
sub
mov
push
cltd
pop
mov
cmp
mov
jns
negl
jb
push
add
lgs
jbe
add
lds
aaa
and
sub
xchg
xlat
mov
jl
loopne
rorl
xchg
je
and
push
in
sbb
lods
popa
mov
faddl
xchg
inc
cmp
out
and
cmp
and
adc
xchg
mov
bnd
jne
addr16
sahf
shll
xor
mov
dec
mov
xchg
pop
xchg
jb
xor
push
mov
lcall
ds
xor
fbld
scas
push
mov
sub
pop
bnd
and
push
in
ds
and
pushf
in
and
sub
pushf
pop
enter
dec
and
jo
ss
cmc
insl
loop
adc
jne
out
bnd
mov
nop
loop
rcr
jns
jnp
jne
pop
xchg
in
es
imul
cmp
loopne
arpl
and
and
lret
lretw
pop
popf
outsb
insl
or
push
ss
test
push
pop
stos
scas
lods
mov
push
xlat
scas
sbb
test
or
sub
push
xchg
aas
mov
inc
lds
ss
or
test
pop
adc
jno
repnz
das
and
mov
int
nop
cmpsl
inc
or
stos
jl
inc
es
flds
lret
cmp
mov
fs
les
iret
dec
sub
adc
xchg
in
sbb
movsb
xor
cmc
rol
test
fs
mov
add
inc
sar
repnz
jmp
xchg
mov
cmp
cmp
jle
movsl
push
pop
or
xchg
cmp
out
or
xchg
rcll
xor
fisubrs
imul
mov
std
movsb
pop
add
out
or
or
lock
cmpsl
adc
cld
das
je
sbb
incb
enter
mov
sub
cmp
aaa
mov
out
cmp
sbb
mov
into
lret
cmp
xchg
push
scas
mov
push
addr16
xchg
mov
sbb
lock
insb
jmp
sar
movsb
jg
push
outsl
and
addr16
push
adc
adc
adc
sbb
dec
fs
nop
xchg
bound
mov
aad
ds
xor
push
jp
ret
nop
es
rcrb
ljmp
stos
aad
into
add
clc
mov
add
nop
push
icebp
pop
cltd
in
out
icebp
scas
shrb
cmc
inc
sbb
jmp
or
xlat
mov
push
inc
dec
decl
inc
cmpl
mov
adc
xor
mov
mov
dec
mov
mov
push
dec
loope
jmp
pushf
jns
xor
xchg
cmp
lcall
fs
push
rclb
push
repnz
cmpsb
adc
mov
vunpcklps
nop
scas
mov
movsb
stos
test
dec
mov
pmullw
loop
add
in
pop
daa
dec
push
pop
jo
pavgb
faddl
ss
ds
movsl
and
outsb
jns
jg
aaa
js
inc
iret
pop
inc
sub
xor
mov
cmp
stos
movsb
mov
outsb
mov
fldenv
jle
ret
popa
xchg
jp
lahf
scas
pop
sub
lcall
mov
mov
rol
jmp
dec
sub
cld
test
icebp
movsb
adc
and
xor
inc
cwtl
jle
fcoms
inc
fldcw
adc
pop
cmp
mov
out
out
push
cmpsl
cmp
call
lods
inc
jge
addr16
cwtl
adc
clc
icebp
cmp
ss
cmp
cmp
and
loopne
test
jle
ljmp
xchg
mov
or
add
outsb
lods
xorl
xchg
or
inc
mov
popa
test
out
or
enter
mov
mov
movsl
shlb
adcl
sti
xchg
adc
jnp
repz
dec
int3
xor
insl
mov
pusha
jecxz
dec
xchg
fwait
rolb
mov
xor
and
outsl
movsl
bound
fsin
xor
into
or
push
out
icebp
xor
lock
lret
jno
cwtl
loop
and
sub
mov
inc
dec
enter
sub
jl
add
insl
leave
out
or
push
add
jg
jecxz
imul
out
mov
push
mov
ja
pop
dec
ror
imul
test
mov
sbb
mov
into
outsb
sub
inc
out
xchg
sbb
andl
push
fs
jo
mov
je
fsubrs
push
jo
add
inc
loope
xchg
and
lcall
nop
push
xchg
cmp
sbb
aam
or
data16
cli
sahf
dec
ficoms
insl
sbb
je
outsl
inc
or
leave
popa
or
aas
inc
ja
add
addr16
loopne
push
loopne
ret
jge
and
or
sub
jle
push
sub
in
sbb
sbb
mov
push
mov
scas
lea
cmp
cwtl
fnsave
lock
xlat
add
mov
mov
xor
fidivl
mov
cmovbe
lds
pop
rorb
in
add
bound
sbbl
insl
jecxz
rol
fstl
cmp
mov
pop
pushw
jno
cbtw
outsb
push
mov
sbb
jle
push
mov
sbb
out
andl
in
iret
xor
xlat
stc
sarl
cmp
jle
xchg
fsubrs
pop
mov
popf
jno
in
std
shlb
mov
imul
pop
pop
push
fistpll
mov
ljmp
lahf
xchg
sbb
inc
movsb
sbb
repnz
aas
adc
cmp
aas
imul
dec
iret
jp
push
lret
popa
push
cmp
das
sbb
xchg
repnz
adc
jle
and
xchg
es
jne
xchg
inc
bound
pop
mov
in
test
add
call
out
aad
out
inc
dec
pop
or
jmp
adc
mov
cmpsl
push
jbe
mov
jle
inc
sar
cld
mov
cwtl
dec
ljmp
jo
inc
jb
repnz
daa
ja
jmp
inc
push
dec
loop
inc
pusha
iret
test
mov
mov
and
xor
notb
dec
add
repnz
das
fs
and
adc
cmp
pop
pop
lret
and
sub
mov
cs
cmpsb
aam
jge
mov
or
dec
sub
sub
bound
add
xchg
add
or
movsl
or
cmp
jmp
int
out
adc
add
shlb
repz
push
rolb
mov
cwtl
hlt
je
jle
adc
pop
push
push
sub
pop
add
push
pop
popf
je
cmc
mov
jae
mov
jo
in
aas
push
push
pop
lds
in
mov
push
fcmovb
push
fwait
add
mov
adc
push
out
mov
xor
dec
lret
or
xchg
add
push
call
xchg
imull
push
pop
or
lahf
aaa
jge
cmp
mov
or
in
mov
jmp
test
ret
mov
ret
jle
lods
out
in
or
rolb
mov
cmp
cmp
pop
dec
jge
xor
popa
mov
adc
inc
inc
and
cmp
pop
gs
outsb
sahf
sub
dec
int3
xor
pop
aas
mov
sbb
das
in
pop
xchg
mov
js
xchg
stos
and
int
sbb
jg
lahf
inc
mov
aaa
mov
inc
and
jle
mov
in
push
cld
mov
lahf
adc
mov
pop
jmp
test
push
jmp
lea
nop
pop
pushf
mov
popf
ljmp
mov
mov
mov
clc
or
cmp
dec
or
std
loopne
inc
out
cltd
push
test
push
leave
test
test
dec
shll
push
sub
js
les
adc
xorb
cwtl
jmp
mov
enter
aad
test
pop
xor
nop
add
mov
hlt
test
leave
ret
enter
mov
out
mov
or
test
add
lods
jae
cld
pusha
sub
hlt
fdivrs
popa
push
sub
push
pop
xor
mov
int3
pop
sub
pavgb
leave
cltd
popf
imul
sbb
push
or
sub
cli
jg
cmp
movsb
dec
rcr
je
insb
cs
repnz
dec
mov
jbe
xchg
int3
aaa
adc
pop
ficoms
rorl
ja
negb
int3
adc
dec
or
push
adc
cltd
xor
push
sub
cmpb
fcomip
mov
jno
cmpb
roll
scas
inc
sub
adc
inc
sub
jp
fidivl
adc
shr
pop
repz
sbb
hlt
add
popl
xchg
in
andl
push
es
js
sbb
bound
loopne
lcall
sti
pushf
fcmovb
xorb
mov
jg
mov
daa
push
pop
idivb
mov
push
add
insl
shrb
aam
shlb
pop
rcl
out
aaa
pop
pop
test
enter
hlt
xlat
mov
iret
arpl
or
das
rcrl
inc
into
adc
mov
in
stos
enter
lds
fwait
pop
sub
mov
jmp
lods
push
aad
andl
inc
jecxz
stos
sub
fndisi(8087
mov
push
scas
cs
nop
adc
sub
inc
ret
adc
pop
jns
hlt
sub
jno
mov
test
sbb
fildll
das
sbb
mov
xchg
insb
fildll
mov
mov
push
jp
xchg
test
pop
jb
cmp
jne
jae
mov
pop
push
loop
push
add
mov
dec
xor
jle
fxch
sbb
inc
scas
lods
jge
nop
test
mov
scas
or
sub
sub
mov
add
outsl
pop
pop
dec
mov
push
sub
adc
xchg
sub
in
loopne
insb
js
jb
pop
dec
xchg
add
push
test
jo
jo
sti
push
pusha
aaa
mov
mov
sub
das
cmp
cmpsb
int3
imul
adc
inc
das
mov
cs
mov
cmp
pop
pop
or
and
cmc
jmp
jnp
sub
iret
cmp
movsb
cmp
in
adc
adc
fxch
and
mov
inc
push
mov
push
lahf
xchg
pop
lods
inc
adc
push
insb
mov
ret
mov
mov
adc
inc
out
cmp
sub
push
nop
imul
sti
psrld
stc
cmp
inc
add
dec
lret
lret
pop
icebp
subb
aad
movsl
jecxz
enter
scas
cli
xor
scas
addr16
lods
jo
push
decl
out
mov
lret
push
jns
dec
adc
cmc
push
ljmp
fildl
adc
fldl
mov
push
loope
daa
ror
into
in
xlat
sbb
jb
rorb
push
inc
cltd
sbb
push
and
rorl
pop
push
aad
dec
in
xchg
and
fcom
add
test
leave
sub
or
insl
mov
push
mov
std
mov
pushf
mov
cs
inc
cmp
cld
mov
sti
pop
or
sub
adc
into
or
in
mov
lcall
repz
mov
mov
filds
ja
out
jmp
pop
mov
pop
pop
adc
cmp
addl
mov
xor
push
pop
ds
dec
sub
inc
rcrl
and
sub
pop
push
xlat
shlb
cmc
push
lahf
mov
add
scas
repnz
push
pop
pop
hlt
loopne
and
stos
xor
aad
jb
dec
jae
mov
mov
inc
sub
outsl
jnp
ss
or
adc
test
and
pop
out
pop
movsb
sbb
jno
ret
inc
hlt
outsl
pop
cmp
call
mov
sti
push
in
push
imul
jo
daa
mov
mov
mov
sub
out
ds
fistl
pushf
and
jo
out
dec
mov
clc
cli
dec
pop
leave
push
mov
jp
pop
cmc
push
daa
hlt
mov
lahf
dec
fnstenv
rcr
mov
outsl
and
aam
cld
and
mov
aam
sbb
addl
movsl
fs
in
in
iret
das
rolb
ficomps
sbb
mov
mov
stc
out
mov
cmp
mov
mov
inc
or
pop
lret
mov
mov
cld
shr
push
or
test
ds
add
sub
popa
imul
adc
sbb
fs
xor
xor
or
insb
ret
cmpsb
jg
fildll
add
mov
clc
ficompl
pop
adcl
insb
cmp
incl
pop
inc
dec
jbe
int3
dec
sub
inc
push
jbe
je
addr16
mov
loop
xor
mov
sub
enter
mov
and
xor
cmpsb
insl
stc
xor
cmp
mov
jecxz
dec
mov
pop
inc
cmp
or
data16
cmp
xchg
ficoms
fsubrl
fnstenv
jno
daa
mov
dec
inc
sub
push
xchg
enter
fcomps
push
subl
sbb
xor
push
outsb
sub
mov
and
mov
ret
mov
arpl
cld
mov
jmp
xor
push
ret
adc
xchg
bound
ret
jne
sbb
cmp
in
out
jl
syscall
cmpsb
pop
scas
les
xor
shrb
and
psraw
mov
mov
mov
xor
clc
mov
lret
dec
push
jne
inc
je
jno
cmpsb
push
lahf
xchg
jne
aad
cs
fisttpll
out
cmpsb
xor
sbb
dec
movsl
xlat
push
cmpl
push
jmp
or
outsb
sbb
fldcw
insl
cltd
inc
dec
test
or
inc
push
dec
push
inc
hlt
adc
scas
dec
or
mov
pop
sbb
jmp
loopne
ljmp
jae
fisubl
sub
ret
cmp
xor
mov
xchg
cltd
mov
bound
push
jg
and
js
lahf
gs
mov
adc
test
jnp
sbb
movsb
lea
mov
lock
mov
push
sbb
add
int3
lahf
jb
pop
or
aam
addr16
arpl
xor
adc
xchg
ret
and
jo
jnp
inc
or
int
cmp
in
push
enter
mov
popf
stos
jnp
cmp
imul
push
test
cli
sbbl
mov
fimuls
sbb
call
aad
and
ljmp
lret
adc
nop
mov
shlb
in
mov
adc
mov
popa
pop
push
and
lret
push
loop
movsb
subl
lret
outsb
test
mov
cmp
testl
lods
fcmovbe
ret
mov
ja
mov
call
test
jno
push
test
push
pop
cmp
lret
dec
mov
or
mov
shrl
imul
cmp
dec
out
cltd
mov
cltd
fs
sbb
mov
js
xchg
mov
in
fadd
mov
loope
sarb
dec
ds
pop
outsw
in
add
out
and
lahf
inc
pusha
movsl
dec
pop
inc
mov
fistl
aaa
xchg
aam
jle
adcl
cmp
inc
js
sahf
xchg
aam
push
or
js
adc
jle
sbb
rcrl
je
outsl
lret
pop
add
xchg
sub
fdivp
dec
adc
mov
repnz
test
inc
mov
shl
fstps
sbb
push
push
lret
xchg
inc
inc
or
nop
add
mov
out
push
int
jnp
insb
loopne
and
pop
sbb
inc
and
and
pop
or
movlps
push
movsb
lcall
xchg
pop
subl
ror
xchg
dec
inc
jnp
jno
inc
jg
adc
pushf
test
cmpsl
dec
xchg
test
test
add
xchg
adc
push
sub
inc
test
lea
xchg
mov
xor
stos
rcrl
pop
arpl
push
mov
cmpsb
add
or
fisubrl
in
sbb
popf
mov
xor
or
sub
stos
mov
std
mov
add
clc
adc
repz
or
xchg
sub
rorb
or
pop
js
into
or
xchg
loopne
xchg
mov
cli
imul
rcll
jecxz
pop
popa
push
ja
add
movsl
out
imul
jmp
cmp
fdivs
add
aad
adc
sbb
fadds
sbb
shl
lds
test
rcrl
lret
push
daa
das
jno
test
cwtl
jecxz
out
jae
into
sub
aam
sbb
inc
xor
dec
loop
sub
ds
stos
jb
inc
ljmp
cld
lods
xchg
mov
nop
adcl
xchg
push
es
ss
movsb
popa
push
aaa
ss
pop
dec
fwait
out
cli
in
ret
sarb
pop
mov
sti
xor
add
push
dec
adc
ja
lret
add
negb
and
cld
mov
sub
or
push
lcall
popa
daa
je
inc
sbb
jmp
cmp
loop
dec
mov
sbb
shlb
push
adc
stos
ljmp
dec
jne
rorl
mov
dec
ret
jno
cli
movsb
fldt
push
sarb
and
mov
sarb
push
mov
mov
mov
mov
iret
jecxz
cmp
xor
xchg
inc
lds
in
lods
dec
cmpb
loopne
cli
xor
mov
scas
xchg
rolb
rolb
or
sub
xor
dec
sub
sti
push
dec
sbb
or
mov
cmp
cmp
push
jnp
insl
sub
in
sbb
xchg
jl
scas
scas
add
push
fldl
or
into
xor
mov
add
cmpsl
xorl
data16
adc
xchg
push
mov
cmp
push
sbb
lahf
or
movsl
sbb
aas
add
dec
push
fs
fisttpl
mov
cmp
int3
xchg
bt
and
adc
xchg
mov
in
or
dec
push
jle
mov
jge,pt
adc
jo
inc
into
inc
and
aas
ret
and
roll
loop
call
mov
mov
jbe
rorl
outsb
outsb
imull
push
in
dec
sub
jo
jl
scas
inc
fmuls
mov
cmp
sub
insl
test
mov
dec
cmp
sbb
shrb
jbe
xchg
inc
clc
xchg
rcrl
cmp
mov
jmp
jno
mov
repnz
mov
xor
into
or
xor
test
int3
lret
fisubl
inc
mov
inc
adc
mov
in
cltd
pusha
pop
mov
jno
pop
and
mov
pop
sub
cli
mov
jp
add
roll
sbb
lock
and
fidivs
inc
loopne
out
or
sub
cmp
lock
adc
aad
stc
pop
xorl
inc
inc
gs
sbb
add
aam
mov
and
cmp
mov
mov
lret
inc
mov
or
xor
add
arpl
mov
push
int3
orl
negl
mov
js
push
push
mov
nop
jge
mov
xchg
incb
ffree
dec
or
daa
dec
filds
loope
lds
inc
rolb
add
xor
mov
cli
jnp
push
cmp
mov
jmp
adc
jb
or
or
outsb
dec
test
in
xlat
add
or
dec
dec
neg
es
shll
adc
movsl
fwait
jp,pt
lds
mov
into
sub
xlat
insl
push
push
daa
loopne
icebp
jb
cmpl
pop
int3
sbb
jge
xor
mov
aam
or
adc
rclb
lea
pop
jb
dec
lret
dec
nop
pop
inc
dec
and
int
inc
dec
mov
add
mov
mov
shl
inc
rol
xchg
xchg
push
mov
xchg
dec
dec
mov
jno
les
mov
sbb
sub
mov
mov
adc
pop
test
test
rcll
mov
lcall
inc
fisttpll
enter
sbb
sub
or
xchg
sub
jae
cmc
enter
cmc
lea
cmpsl
es
je
push
cwtl
mov
in
sub
js
sti
aam
sarb
loop
pop
xchg
popf
cmp
and
xor
and
sub
outsb
imul
jno
push
and
js
ljmp
ljmp
mov
mov
popf
scas
outsb
pop
mov
ds
mov
scas
fs
jb
adc
cli
mov
js
mov
lds
pop
adc
add
stos
xor
adc
test
lods
adc
pushf
fdiv
ss
ss
test
stc
dec
repnz
jo
push
pop
out
xchg
sub
out
sub
popf
mov
push
mov
pop
sub
mov
jne
scas
push
jo,pn
cmp
sub
insl
jae
negb
jae
inc
mov
mov
outsb
sbb
insb
push
decl
mov
and
ss
fistpll
cmp
inc
sub
lret
addr16
add
mov
scas
xor
fld
pop
in
sub
dec
mov
in
scas
push
test
push
cs
das
mov
js
pop
enter
into
cmp
mov
in
mov
cs
mov
mov
nop
or
mov
loopne
loope
les
xor
push
mov
jmp
cmp
add
enter
dec
push
ljmp
int
push
xchg
inc
lea
les
xor
mov
notl
pop
popf
and
lds
dec
jmp
dec
sub
out
cli
add
jnp
mov
xor
pop
sub
mov
test
mov
loop
xchg
dec
daa
inc
xor
gs
dec
scas
jne
sarl
xchg
lods
dec
into
repz
call
inc
ret
mov
cmpsb
mov
adc
out
out
pop
add
inc
pop
xor
mov
push
dec
shlb
add
ja
cwtl
pop
pop
mov
out
fwait
inc
aas
sub
pop
mov
xchg
es
or
jns
adc
mov
lret
outsl
mov
jp
lods
jo
ss
sbb
mov
arpl
cwtl
sbb
test
xchg
xchg
sbb
add
add
fcomps
xchg
inc
mov
dec
inc
jl
xor
jp
imul
leave
sti
in
imul
lret
jno
cld
xchg
cmc
lods
int
add
stos
scas
cmpsl
mov
lea
aaa
rcr
mov
lock
xor
sub
mov
sbb
jae
ret
mov
shll
or
imull
add
mov
mov
mov
loopne,pt
dec
mov
dec
cmp
data16
repz
jb
xor
push
mov
jge
fs
scas
or
xlat
sahf
popa
jp
addb
ror
sbb
stos
jecxz
mov
bswap
or
pop
mov
or
sub
movsl
xor
aaa
jnp
iret
sbb
pop
cmc
jnp
ds
pop
lock
addr16
idiv
mov
out
sti
outsl
aas
fstp
aas
fwait
or
shl
jno
mov
stos
jns
ret
cmc
js
fmuls
xor
lea
xlat
push
sub
stos
repz
pushf
ljmp
sub
iret
adc
out
inc
mov
push
mov
jle
stos
dec
leave
jle
dec
push
aaa
push
cs
jmp
stc
jecxz
outsb
xchg
cmp
pushf
cli
pop
xor
pop
pushf
sbb
out
push
in
mov
mov
clc
jmp
arpl
push
inc
dec
dec
dec
sub
lcall
pop
dec
inc
addl
repz
mov
cs
cmp
push
jns
aaa
leave
in
push
fldcw
in
ds
sti
pop
pop
dec
or
push
ja
push
xchg
push
inc
in
sti
jmp
cmp
sub
xchg
xchg
punpckhwd
xchg
lcall
sub
idivl
and
test
cmp
ss
ljmp
aam
mov
sti
jge
scas
lcall
add
bnd
dec
popa
out
std
inc
test
jno
pusha
stc
into
std
adc
or
jp
movsl
in
mov
pop
adc
js
adcl
mov
and
jo
jl
test
in
push
mov
add
pop
cmc
int3
sbbb
pop
push
push
adcl
and
ss
in
mov
and
mov
mov
stc
lret
and
or
push
hlt
pop
fldt
insl
insb
call
pop
rorl
aaa
mov
es
cwtl
sti
iret
imul
jb
sub
mov
pop
inc
or
sbb
clc
les
push
ljmp
insb
test
dec
mov
jne
sbbb
inc
ret
or
pop
pop
and
insb
outsb
insb
fdivs
aaa
ret
int3
cmpsb
test
aad
into
or
cli
pop
xchg
mov
sub
sahf
inc
jns
enter
inc
mov
sbb
sbb
stos
arpl
xchg
xor
adc
xor
cmpb
inc
dec
jg
mov
cltd
jnp
or
xchg
repz
mov
int3
out
sbb
loopne
adc
sub
cwtl
pop
sbb
push
lret
fisubrs
pushl
jb
mov
out
xorl
push
cwtl
dec
jl
sahf
adcl
fnsave
push
cmp
mov
dec
push
or
std
test
fidivrs
xchg
push
mov
scas
inc
movsb
adc
jmp
pop
pop
push
imul
mov
into
enter
negl
fs
insl
and
sbb
enter
out
and
in
adc
or
mov
ficomps
xor
sub
lahf
mov
and
insl
mov
fmuls
orb
sub
cmp
data16
aaa
test
rclb
xor
data16
lret
xor
ret
inc
push
adc
sub
rorl
or
sahf
dec
bound
adc
clc
movsl
cmp
push
push
leave
pop
lea
adc
mov
sub
cmp
imul
sarl
fsub
loope
imul
push
in
inc
lods
pop
enter
mov
outsl
pop
or
dec
push
cs
sbbb
inc
xchg
or
js
frstor
mov
mov
adc
loopne
test
inc
mov
jle
dec
mov
cltd
mov
pop
mov
movsl
or
imul
pop
stc
mov
lcall
xchg
jo
cmp
adcl
int3
cmp
and
ja
bound
imul
xchg
sbb
xchg
lea
loopne
mov
leave
pop
jmp
scas
ss
addr16
stos
loop
loop
out
mov
ret
cmp
gs
sbb
or
rcrb
push
clc
enter
xchg
imul
mov
dec
xchg
push
cmp
and
inc
in
and
lds
sahf
xchg
loope
lock
add
lods
push
outsl
sub
pop
inc
mulb
fs
mov
lahf
test
adc
xorb
out
inc
lret
jmp
pop
add
sub
gs
in
sbb
scas
jnp
cmpb
lret
xchg
xchg
pusha
or
movsb
aaa
cmp
aas
inc
mov
mov
xor
inc
rcrl
cli
or
push
sub
cltd
in
bound
ss
testl
inc
scas
imul
pop
cs
movsb
jp
jbe
mov
jp
or
outsb
add
cli
xchg
arpl
xor
mov
mov
jmp
mov
out
sti
mov
loopne
xor
sub
repz
mov
cwtl
sub
xchg
xor
mov
push
subl
movsl
stos
arpl
jle
or
stos
out
mov
stc
or
lret
mov
adc
call
push
push
add
fldenv
lcall
pop
or
sub
adc
xchg
nop
int
cwtl
mov
sahf
add
imull
mov
mov
mov
testl
adc
inc
sub
popf
dec
adc
adc
or
xor
loope
mov
xlat
lods
imul
sub
dec
mov
cmp
add
adc
fs
lock
adc
pop
dec
out
cwtl
cmp
push
mov
push
into
push
sti
call
add
mov
enter
shll
pop
fmulp
inc
cmp
adc
mov
fwait
outsl
lahf
or
add
dec
lea
loopne
jg
jo
das
or
shll
xchg
dec
les
dec
mov
cltd
iret
scas
imul
mov
comiss
jp
cli
jae
and
adc
sub
mov
xlat
ja
jb
cltd
es
mov
shll
fcom
xchg
loop
inc
xchg
pop
cmp
test
mov
lock
mov
out
data16
mov
adc
xlat
sbb
stos
icebp
or
push
jo
int
cvtpi2ps
ds
xchg
sbb
les
rol
dec
and
or
pushf
push
test
mov
xor
mov
bound
dec
add
icebp
in
pop
jge
sub
or
jmp
pop
xchg
lret
in
popf
lahf
jmp
jle
es
out
lret
jge
pop
push
adc
popa
in
mov
lods
lock
jne
ret
mov
test
adc
fwait
pop
jns
inc
loopne
faddl
fs
mov
adc
jge
stos
mov
jle
out
xchg
lea
mov
or
push
inc
ss
fs
adc
jl
leave
aas
mov
sbb
adc
aas
adc
clc
push
mov
das
push
mov
cld
out
add
into
sub
and
xor
push
sub
adcl
xchg
mov
xor
adc
push
sub
xor
sbb
push
cmp
pushf
data16
cltd
ja
cmovne
sbb
addl
xchg
and
mov
out
fnstsw
sarb
inc
sub
std
adc
sbb
bnd
push
mov
mov
and
shrl
mov
adc
mov
inc
mov
lock
je
cs
imul
mov
dec
stos
into
das
mov
or
movsl
lock
mov
leave
xchg
mov
push
les
cld
cmp
or
jmp
and
out
pop
jbe
sub
outsb
pusha
push
sbb
stc
mov
adcb
scas
pop
addr16
mov
mov
xchg
pop
xchg
mov
mov
sahf
je,pn
fdiv
push
pop
xchg
mov
mov
inc
jmp
jnp
int3
es
xlat
xchg
jae
movsl
ror
xchg
fdivrs
into
pop
xor
mov
mov
dec
shll
jne
pop
push
in
cvtdq2ps
test
mov
jno
imul
lahf
inc
or
cld
stos
in
dec
inc
imul
add
mov
jnp
cmp
xlat
lods
mov
dec
inc
idivb
mov
cmp
sub
shr
dec
sti
arpl
enter
dec
mov
cmp
out
mov
jae
add
xchg
jecxz
insl
cmp
lahf
cmpsl
jae
pop
add
dec
mov
xchg
xor
aad
sbb
inc
sub
cld
mov
push
outsl
ja
mov
dec
arpl
fldt
push
sub
imul
loopne
out
push
and
shll
rcrl
inc
ljmp
dec
mov
sti
sub
add
or
add
arpl
dec
repnz
push
dec
mov
sub
xor
mov
hlt
mov
adc
divl
adc
jns
and
fdivrs
rcr
dec
outsl
test
sub
enter
mov
call
lea
cli
cmpsl
cltd
mov
mov
imul
add
aaa
lret
push
mov
fs
jo
sub
das
scas
lahf
je
loop
sub
xor
cld
pop
testl
jge
mov
into
in
xchg
shlb
stc
hlt
sbb
jns
call
push
daa
rorl
iret
jbe
mov
push
push
dec
adc
lods
mov
push
repnz
jg
sbb
addr16
push
sbb
sub
rcrl
ret
mov
jnp
loop
fnstenv
pop
sbb
push
cmc
mov
out
lea
pop
sti
in
dec
sub
fadd
sub
xor
cld
jecxz
in
pop
adc
cmpsb
fbld
jno
or
xor
movsl
mov
out
push
shl
add
out
xor
insl
cmp
call
inc
shrb
add
sbb
insb
cltd
in
popa
xor
notb
iret
and
cld
and
push
mov
ljmp
inc
and
add
push
cmp
add
push
mov
xchg
mov
movsb
sbb
pop
or
mov
pop
pop
pop
jnp
fcmovne
lret
xor
inc
sub
test
mov
rcrl
imul
pop
stc
mov
leave
and
add
xor
fcmovbe
mov
mov
fwait
addr16
daa
dec
out
test
adc
jns
sub
cld
add
pop
sbb
sbb
cwtl
and
repnz
and
in
sub
int
sti
inc
scas
sub
out
xchg
fwait
sarb
nop
pop
lods
pop
imul
orl
dec
jecxz
add
movsb
aas
in
idivl
jecxz
test
aas
mov
nop
sti
inc
jnp
dec
or
inc
xchg
enter
lret
out
push
cwtl
xchg
test
adc
and
rorb
ja
mov
jle
pop
jae
and
insl
push
add
ljmp
aas
fstpt
imul
mov
lea
sbb
and
push
rcll
or
test
repz
cwtl
leave
push
ja
or
popa
stos
mov
scas
jecxz
mov
dec
adc
lret
mov
iret
repz
push
pop
ret
inc
add
in
or
inc
ds
mov
insb
test
inc
sbb
jns
or
push
mov
popa
push
out
faddl
aaa
or
mov
pushf
mov
jns
pop
xchg
inc
mov
jno
inc
or
pop
enter
cmp
repnz
pop
mov
shrl
pop
cwtl
fsubrl
mov
sbb
jl
push
mov
mov
pop
adc
fnstcw
sub
sub
les
jp
jl
imul
dec
mov
adc
aaa
jge
sbb
sbb
mov
sbb
jle
cwtl
test
dec
dec
mov
sub
add
mov
push
xchg
js
sti
mov
add
inc
mov
std
adc
lods
pop
ret
es
xchg
xchg
and
inc
add
iret
push
jge
and
push
xchg
roll
cld
mov
jmp
addr16
add
push
aas
lods
push
sahf
test
icebp
dec
mov
cs
test
pop
idivl
jb
jge
pop
hlt
mov
dec
xor
es
jl
enter
sub
aam
popa
int
add
mov
sub
shll
jbe
pushf
adc
daa
fs
mov
inc
cmc
sub
sbb
xchg
rcll
push
out
movsb
out
mov
and
pop
and
dec
or
pop
aaa
sub
loopne
shll
mov
xor
jmp
jg
mov
out
in
cmpl
mov
sbb
inc
mov
sbb
sbb
adc
sub
loope
outsl
mov
fsubrp
inc
lock
divb
cmp
mov
lret
dec
pop
dec
jb
add
addr16
adc
jbe
jg
js
dec
lcall
sbb
cmp
jmp
shlb
pop
jno
xor
jp
jae
movsl
mov
and
repz
lods
xchg
inc
mov
enter
mov
call
addr16
pop
jns
fcoml
vpsubsw
dec
adc
inc
daa
jmp
outsb
jo
daa
out
mov
push
sub
lret
xor
pop
sub
mov
rcrl
call
push
push
sub
dec
in
mov
jge
mov
out
popf
lret
lcall
into
inc
shrb
jmp
mov
ss
es
cld
sub
data16
sbb
xchg
lcall
or
pop
dec
lcall
xchg
incl
mov
lret
inc
ja
lods
add
xchg
adc
pop
add
pop
or
sbb
mov
test
out
xchg
push
stos
dec
xor
mov
adc
pop
adc
gs
sbb
scas
test
pop
add
pushf
xor
into
pop
call
clc
in
movsl
ja
orb
cmpsb
jg
and
mov
movsl
das
sbb
mov
lds
sti
sbb
push
dec
loop
out
imul
out
push
mov
mov
add
dec
sbb
and
push
addr16
scas
push
inc
or
test
push
pop
js
test
jecxz
add
test
addl
adc
stos
push
stos
lcall
jno
xchg
fisubrl
out
mov
sbb
push
jmp
stos
sub
fucomp
xorb
mov
cmp
cmpsl
and
stos
imul
lea
out
es
dec
jne
lcall
dec
out
mov
outsb
fisttps
and
pop
sahf
or
test
adc
lahf
out
jle
cmp
les
cld
adc
stos
not
mov
aad
es
xor
rcl
insb
imul
mov
mov
add
arpl
adc
shr
inc
xchg
pop
lds
xor
nop
add
push
insb
mov
call
push
and
in
or
loop
out
inc
inc
jmp
mov
sets
mov
xchg
scas
fwait
rol
xchg
lods
or
shr
clc
adc
cvtpi2ps
add
aad
mov
jle
pop
and
cmp
jae
and
icebp
mov
mov
jl
sbb
sub
push
daa
test
and
iret
aad
adc
ja
int
or
lahf
push
jecxz
pop
cli
cld
mov
test
and
leave
rcrl
insb
inc
fdivrl
and
mov
jle
xchg
ror
cmp
push
pushf
push
mov
push
jno
cmp
dec
cltd
inc
dec
cmp
imul
outsb
xchg
movsl
xchg
das
sbb
pop
ret
fs
sub
out
sub
jne
jae
xchg
adcl
jp
sub
xor
ss
pop
stos
lods
arpl
mov
pusha
sbb
pop
push
pop
push
inc
repnz
or
cltd
xchg
fistl
and
inc
mov
pminsw
subl
dec
dec
leave
jb
popf
push
test
sub
mov
xchg
adc
aad
adc
push
xlat
mov
pop
insl
inc
push
jg
pextrw
jle
mov
xchg
imul
add
dec
sbb
xlat
sti
hlt
fwait
push
jb
test
inc
mov
inc
je
and
mov
jmp
xchg
mov
inc
mov
add
mov
mov
lahf
test
adc
or
int
mov
and
jae
je
lret
jae
call
lds
lods
mov
fimuls
dec
xlat
addl
lahf
xor
orl
mov
dec
or
scas
in
movsb
ss
sub
adc
sbb
xchg
mov
inc
repz
je
dec
subl
mov
imul
pusha
scas
jecxz
test
in
xor
ljmp
mov
dec
in
mov
xor
mov
shl
in
sti
out
and
or
les
mov
push
pop
in
pop
xchg
test
sbb
in
insb
mov
repz
adc
or
cwtl
mov
inc
sbb
icebp
daa
ss
inc
mov
inc
push
repz
lahf
push
aam
mov
xchg
dec
pushf
lods
lods
pop
shl
sub
xchg
clc
bound
xchg
leave
mov
xor
sbb
mov
je
jge
mov
pusha
pop
rcl
or
mov
add
adc
mov
xchg
xchg
mov
scas
inc
addl
pop
inc
xor
xor
std
das
sbb
or
js
xor
pop
mov
push
out
cmp
lret
lods
pop
fstpt
stc
popa
les
ret
pop
dec
shlb
imul
sbb
push
rorl
cmp
inc
iret
iret
mull
and
mov
mov
icebp
xchg
enter
xor
jge
movsl
loop
mov
inc
xchg
adc
enter
icebp
xchg
loope
cmpsl
or
jno
jno
shl
pop
pop
shlb
add
sbb
sbb
sub
mov
bnd
jle
pop
in
jl
xchg
mov
dec
mov
gs
xchg
mov
lods
sbb
jg
in
lcall
ret
push
repz
xchg
xchg
aam
repz
out
xchg
cmp
popf
lods
push
popf
jle
popf
fiadds
mov
fsts
lea
popf
loope
adc
jb
loop
pop
insb
and
mov
jp
lahf
xchg
mov
ljmp
push
inc
xor
cmp
adc
jl
cli
and
xor
mov
pop
mov
mov
inc
inc
add
or
or
pusha
call
stc
and
fdivs
xchg
jns
sub
clc
mov
test
stos
jbe
mov
or
das
mov
cmp
xchg
subl
adc
jne
sahf
test
mov
jecxz
and
push
iret
ret
or
xchg
pop
insb
sub
out
cmp
popa
mov
pop
push
outsb
sbb
push
adc
movsl
outsl
cwtl
jmp
test
jmp
cltd
test
sbb
jnp
cmpsb
xchg
aas
sti
ret
dec
popa
xor
add
jmp
sub
jno
addr16
hlt
and
sarl
int
xorl
push
mov
sbb
in
insl
mov
jg
and
cltd
movsb
hlt
pop
xor
insb
add
mov
dec
sbb
repnz
mov
ja
int
fidivl
adc
pop
inc
insl
mov
cmp
or
out
push
and
pop
or
stos
rep
dec
shlb
xor
sub
mov
jnp
and
xor
dec
inc
pop
test
mov
cmp
aad
mov
and
mov
rdpmc
dec
repnz
dec
out
adc
mov
cmp
sbb
cmpsl
push
jg
subl
pop
ret
sarl
repz
fidivs
fwait
into
fmul
add
cmp
or
movb
push
addl
ljmp
idivb
in
dec
sub
cmp
daa
xorb
fwait
int
lods
cmp
cmp
mov
sbb
dec
cmp
lds
jbe
arpl
fsubl
pushf
lds
imul
push
and
jecxz
aaa
fmull
dec
pop
mov
enter
nop
out
aas
push
mov
pop
or
fdivl
pop
cs
mov
sti
cs
cmpsw
std
cs
dec
rcll
jp
cli
ljmp
fs
test
sbb
ds
jnp
and
add
sti
enter
sti
or
out
pushl
cmp
dec
sti
cmp
aaa
repz
lahf
fdivrs
lea
mov
sbb
lret
mov
push
inc
enter
xchg
push
xlat
sub
cmp
mov
dec
stos
push
xlat
neg
cmc
cmp
fisttpll
roll
jae
push
inc
data16
ret
subb
addl
jb
push
mov
mov
sahf
clc
daa
outsb
andb
mov
into
daa
jns
mov
and
test
ficoms
aam
call
or
rorb
xchg
add
cmpsl
test
fisttps
loop
imul
das
and
sbb
fiadds
sub
xchg
fcompl
push
ljmp
dec
in
hlt
push
pop
fisubs
xchg
sub
mov
insb
mov
mov
shl
pop
xchg
jb
stos
movsl
pop
push
and
cmp
loop
out
aas
sbb
mov
mov
int3
xchg
stos
mov
dec
scas
andb
xlat
xor
cli
cmp
in
push
lahf
mov
sbb
xchg
call
aad
pushf
pushl
aaa
jg
push
ret
jmp
in
jecxz
into
fs
inc
std
aam
cmpsb
cmp
jae
cwtl
addr16
es
imul
es
xor
out
std
repnz
push
scas
dec
mov
test
out
inc
push
cld
out
or
jmp
mov
sub
lahf
testb
and
shlb
repnz
loop
and
movsl
fisubs
test
mov
dec
outsb
push
movsl
jl
movsb
cmp
ret
ret
out
ss
or
sbb
ret
adc
mov
mov
and
dec
inc
ficoms
pop
jp
sbb
adc
dec
mov
xlat
sub
pop
es
fimuls
cltd
sbb
add
sub
fldt
add
sbb
dec
pcmpeqb
jnp
mov
inc
fisubrl
or
dec
push
mov
das
insb
fstpt
xchg
fbstp
cwtl
ds
inc
arpl
mov
fsubs
jbe
xchg
dec
in
or
gs
sbbb
add
stos
movl
in
push
popf
lahf
mov
mov
mov
jecxz
or
inc
outsb
mov
jg
sub
loope
push
xor
test
mov
ss
add
pop
clc
dec
or
fstp
jl
leave
cmc
and
mov
out
add
out
add
repz
mov
jbe
outsl
sub
in
outsb
popa
outsl
dec
adc
dec
fisubrl
or
inc
add
test
fsts
mov
dec
sub
ss
add
cmp
jno
pop
xchg
dec
push
sub
sarb
pusha
imulb
xchg
test
lods
mov
mov
lea
pop
pop
imul
mov
fmull
sub
stos
in
lcall
sbb
into
mov
andb
and
xchg
out
pop
fdiv
insb
out
mulb
sbb
pop
cmp
mov
mov
lret
push
and
stos
insl
mov
inc
xchg
mov
sub
rol
in
inc
xchg
cli
mov
test
add
fistpl
sbb
mov
lock
sbb
nop
and
mov
in
or
int
push
xchg
testl
cli
fs
inc
mov
jno
lds
mov
sahf
pusha
aaa
add
into
mov
jp
pop
xor
daa
imul
sub
test
lea
cltd
ss
data16
sbb
add
inc
xchg
jae
mov
movsb
lock
shl
mov
xchg
clc
jg
push
inc
cld
jp
add
lods
bound
call
mov
add
leave
inc
call
lods
stos
test
add
sub
push
jbe
xor
mov
mov
scas
dec
imul
push
aam
sub
lock
mov
mov
mov
jne
icebp
push
push
jle
icebp
testb
cmp
jg
dec
lock
enter
mov
lods
lret
lret
inc
xchg
mov
add
es
test
testb
push
sub
sbb
inc
cld
shl
shlb
or
mov
inc
insb
jae
shrl
inc
sbb
clc
pop
out
js
icebp
jae
mov
mov
fiaddl
into
sub
mov
mov
pop
std
cld
xorb
fmul
cmp
sub
and
jnp
into
mov
es
sub
and
lock
jo
pusha
xor
sub
aam
mov
repz
mov
test
ds
pop
ja
mov
xchg
fdivs
jmp
stc
sahf
icebp
ret
lods
fwait
add
out
or
out
cmp
adc
iret
test
movsl
mov
fistl
cmp
pop
fwait
insb
xor
scas
popa
add
cmp
pop
mov
pop
xchg
mov
test
cmpsl
xchg
lret
mov
xor
cmp
in
mov
int
mov
push
push
jnp
jecxz
shll
sbb
pop
aam
cmp
aam
inc
bound
sub
push
ss
inc
or
js
push
jno
mov
mov
adc
cmp
notl
or
mov
mov
loop
fucomp
mov
add
mov
imul
pop
aas
cmpsb
iret
lods
dec
mov
or
jo
hlt
adc
dec
int
fsts
adc
inc
cmp
and
cli
jae
inc
jb
adc
repz
or
test
popa
mov
fcmovbe
stc
inc
cmpsl
adc
mov
mov
and
mov
xchg
sbb
sbb
repz
loop
nop
xchg
psllw
and
xor
test
call
and
push
lcall
inc
adc
jbe
inc
loop
or
pop
outsb
mov
lds
out
into
cmp
test
cmp
fisttpl
xor
test
ret
test
push
push
adc
scas
ss
and
push
or
aam
pop
cmp
jg
addr16
cli
mov
pop
sub
movsb
gs
nop
out
mulb
jbe
push
pop
imulb
sub
ljmp
shll
xchg
xchg
mov
or
into
push
dec
in
sub
cmp
adc
pop
xor
or
lret
mov
test
xor
movsl
ficomps
mov
jo
push
push
adc
lea
cmp
aas
stos
dec
outsl
lock
xchg
inc
ss
gs
popa
and
or
bswap
rorb
jnp
pop
push
sti
ljmp
mov
push
pop
pop
adc
inc
xlat
sbb
inc
rolb
in
cmp
call
fwait
xor
cs
or
push
jle
or
mov
lock
imul
add
clc
fs
sti
out
fsubrl
call
pop
je
sbb
lods
sbb
or
iret
loope
sub
filds
mov
mov
jbe
xchg
push
pop
ljmp
call
jecxz
push
enter
adc
scas
hlt
hlt
mov
lret
mov
ret
incl
xchg
push
out
push
paddusb
add
adc
push
jbe
push
je
jecxz
imul
dec
js
out
fstps
aad
push
adc
push
sbb
test
enter
or
mov
insb
outsl
nop
xor
std
mov
aaa
jp
icebp
sub
push
add
aam
insl
jg
dec
pop
notl
out
icebp
pop
clc
xchg
loope
repnz
jns
mov
mov
shrb
das
pop
out
xor
lods
jmp
add
mov
into
xchg
mov
into
mov
stos
dec
push
xchg
in
out
and
dec
or
push
jmp
mov
mov
rorb
cmpsl
test
cmpsl
pop
adc
xor
in
pop
ret
or
lret
mov
addr16
jno
fisubrs
int3
pushf
sbb
into
test
push
jbe
xchg
pushf
push
aam
cmpsl
fs
sub
repnz
cli
mov
jp
add
mov
repz
cmp
jg
dec
mov
mov
mov
jne
mov
or
jnp
cmc
fldcw
add
push
icebp
jp
fs
divl
jl
adc
add
rorb
arpl
sbb
mov
mov
xchg
and
out
rol
scas
and
cltd
scas
xor
or
adc
fwait
xor
shl
outsb
es
cmpsl
scas
subl
lret
movsb
add
and
notb
lret
mov
popf
flds
push
push
push
inc
mov
mov
adc
or
int3
les
les
pop
pushf
push
mov
push
addb
dec
das
dec
cmp
mov
inc
or
stos
cmc
repnz
iret
arpl
in
push
mov
xchg
and
mov
dec
leave
lret
enter
push
cmp
shll
xor
aas
cmp
xor
rcll
leave
xor
dec
ja
mov
stos
stos
sub
bound
sbb
fmulp
lods
mov
mov
outsl
bnd
cli
sbb
pop
lea
stos
outsl
test
mov
push
mov
mov
jae
mov
add
hlt
add
add
stos
out
in
jnp
pop
adcl
lds
sub
cmp
imul
sub
ja
vpaddsb
outsl
sbb
adc
sahf
jp
mov
inc
inc
pop
scas
xchg
loopne
sbb
fucom
and
mov
mov
rcrl
ljmp
fadd
mov
mov
mov
cmpsl
push
mov
cld
jae
push
jns
ss
sub
stos
pop
xor
subb
lods
xlat
cmp
dec
and
push
ds
sbb
adc
sub
fldt
stc
ljmp
roll
jmp
and
jns
push
aad
outsb
xor
pop
cmpb
repz
das
add
and
dec
cmp
rorb
push
dec
sbbb
cmpl
xchg
movq
je
cwtl
jmp
add
dec
dec
loop
xor
sub
push
sbb
or
jge
or
jns
pop
mov
xor
push
lock
in
jno
lds
sub
xchg
sbbb
addr16
sub
and
push
ret
aam
and
adc
cmpsl
sub
testb
enter
notl
push
pop
dec
mov
jo
out
lret
xor
push
repz
out
sbb
into
cmpsb
lret
clc
mov
arpl
sub
sbb
pop
mov
fnstcw
sbb
ds
or
int3
popa
setae
xchg
add
ficoml
jnp
ss
nop
or
or
insl
pusha
les
stos
mov
rcll
aas
xor
dec
push
cmp
daa
outsl
pusha
mov
add
lcall
std
movsl
out
inc
es
movsl
mov
cltd
mov
shlb
mov
and
add
in
addr16
loopne
jb
flds
push
mov
push
lea
adc
jge
jmp
or
fs
pop
ja
adc
dec
into
inc
mov
rorb
dec
in
fcompl
sti
add
bound
jns
mov
cld
or
mov
in
rcll
cld
sbbb
add
dec
loop
out
dec
je
test
insb
sti
imul
mov
cmp
or
or
mov
add
nop
lret
mov
fldl
dec
push
jb
fists
movsl
adc
sub
movsb
stos
dec
gs
jns
into
mov
jb
lods
xor
pusha
test
lahf
adc
adc
out
dec
pop
add
decl
fnclex
jmp
add
sahf
pop
sub
ljmp
and
xchg
out
jge
xor
pop
insb
cmpsl
sbb
push
and
es
xor
xchg
dec
sbb
mov
shlb
lcall
in
repz
mov
pop
mov
jb
mov
hlt
mov
mov
and
sti
call
dec
dec
or
dec
mov
popf
mov
subl
xorb
fcoml
lcall
loopne
sub
and
in
mov
adc
sbb
xchg
xchg
push
loop
xchg
push
cltd
imul
fwait
rcrb
pop
pop
mov
or
xchg
sub
xor
das
ss
es
clc
das
cmpl
fbld
xchg
sbb
mov
cmp
add
mov
iret
pushf
es
mov
out
faddl
fisubrs
adc
inc
mov
imul
dec
bound
sbbb
push
fwait
mov
jae
mov
in
aad
cltd
arpl
sahf
lahf
addr16
and
insl
sahf
mov
pop
ret
scas
repnz
jno
data16
jno
xchg
icebp
dec
test
loop
lcall
les
jp
lods
pop
jnp
jle
cmp
std
dec
or
fstpl
ror
inc
lds
fistpl
fdiv
or
push
les
pop
inc
add
jge
in
mov
sub
jae
insl
push
outsl
icebp
inc
int
add
jnp
movsb
sub
pop
loope
jp
adc
neg
push
add
push
sbb
test
stc
push
jecxz
sbb
aas
adc
inc
add
in
dec
idivl
outsl
ljmp
lock
push
push
in
sub
and
cmpsb
push
xchg
push
xchg
test
ret
jno
or
push
jmp
adcb
adc
lret
sbb
mov
adc
call
pop
jl
sbb
fsts
push
notl
and
loope
test
fcmovb
les
aaa
popa
jb
shlb
repz
dec
in
ss
rol
pop
sub
test
sub
jg
push
push
sub
imul
mov
dec
mov
lret
in
and
pop
push
xor
cltd
adc
sbb
sub
lods
rcll
jns
test
push
inc
inc
xchg
pop
mov
scas
ja
push
stc
popa
pop
lahf
add
and
xchg
adc
push
jl
movsl
lods
sbb
cli
sub
enter
repnz
xchg
data16
push
adc
mov
addr16
rcll
push
or
dec
jge
pop
mov
cmp
rorb
dec
adc
hlt
mov
mov
mov
sbb
push
mov
jno
add
int3
shrl
jle
inc
arpl
lret
out
jbe
mov
xchg
mov
adc
push
xor
xor
mov
inc
sub
lds
subl
nop
and
bound
cmpsl
into
cmp
dec
pop
pop
test
ss
fildl
leave
sub
int
mov
and
movsl
add
jno
mov
and
mov
test
xchg
xor
or
or
xlat
cmc
orl
stc
ds
bound
es
cmc
fld
lods
nop
xlat
lods
xchg
mov
push
loop
scas
das
in
in
or
sub
xorb
daa
add
xchg
test
mov
inc
adcb
jno
mov
cli
xor
loope
inc
lods
or
mov
push
inc
add
clc
xchg
dec
sbb
cmp
repz
jg
fistl
cld
push
bound
push
mov
add
mov
ffreep
jp
jg
push
cmc
lea
add
xchg
lock
add
inc
cld
outsb
jns
cld
xor
push
sahf
sahf
fbstp
xchg
sti
pop
xor
push
repnz
data16
jl
add
add
inc
mov
lret
inc
adc
sub
mov
fidivs
inc
and
int
stc
xlat
mov
mov
cmc
push
xor
pop
out
nop
jmp
test
sti
rcrb
cmc
cld
scas
orl
lock
sub
push
mov
je
xor
incb
mov
or
sbb
mov
pop
sbb
andb
ja
mov
dec
pushf
adc
inc
rol
pop
test
sub
or
sub
mov
sub
data16
mov
pushw
cmp
lahf
aam
lods
mov
inc
inc
jmp
cmpsl
cmc
adc
test
and
inc
sbb
insb
and
or
mov
cmp
outsb
shll
dec
push
dec
dec
insb
shrl
adc
icebp
pusha
pop
inc
test
xor
movsl
fsqrt
mov
mov
jl
sbb
mov
hlt
stc
dec
rorl
mov
lea
xor
mov
or
sahf
add
nopl
lret
mov
push
xchg
lahf
push
imul
push
filds
xchg
xor
push
jmp
sub
cmp
popa
mov
call
lea
mov
jg
bound
scas
test
repz
cli
popa
jge
aam
mov
dec
xchg
popf
lcall
lret
pop
xor
ret
fxch
jl
in
jmp
or
jp
insl
jno
jl
lret
cmp
or
clc
sub
sbb
sbbl
ret
int3
shrl
nop
notb
hlt
adc
stos
jne
in
cltd
jle
push
xchg
mov
mov
lahf
and
pushf
movb
ljmp
mov
aas
outsl
lahf
xor
xchg
add
sti
les
pop
xchg
lds
cli
fcmovbe
add
test
insb
testb
and
adc
test
packuswb
dec
into
jne
stos
or
mull
sub
mov
repz
inc
imul
mov
imul
cmc
shrl
lahf
pushf
jae
and
add
xor
repnz
jg
fbstp
outsl
lods
push
cwtl
popa
xchg
xchg
mov
test
test
test
scas
leave
inc
enter
and
and
insb
arpl
in
dec
inc
pusha
fcoml
lahf
incb
adc
or
cwtl
lock
adc
adc
out
add
into
mov
jecxz
jae
push
cwtl
and
pop
pop
mov
push
adcl
lea
mov
adc
sub
sub
mov
sbb
pushf
ss
fsubs
dec
lds
in
sub
push
mov
fadds
xor
mov
mov
and
cs
and
inc
imul
scas
add
push
mov
xchg
add
sbb
lahf
mov
stc
js
daa
and
faddl
push
inc
mov
jmp
xor
cmp
pop
lahf
push
or
ss
xor
lahf
cltd
fdivrs
jmp
mov
fs
xor
mov
shll
mov
push
loopne
mov
out
arpl
iret
xlat
adc
pop
mov
xchg
xchg
lahf
insb
sbb
fcmovne
int3
cld
loopne
daa
shlb
and
insl
adc
pop
pop
out
stc
and
push
out
inc
sti
mov
mov
sbb
addl
shr
aad
jmp
adc
mov
in
in
je
in
jp
mov
push
lret
push
or
popf
insb
xchg
in
or
push
test
fildll
mov
aaa
sbb
xchg
aaa
pop
xchg
add
nop
mov
jg
aas
insb
and
cmp
loop
inc
sbb
dec
scas
aas
jns
fisttps
and
mov
adc
andl
add
js
ror
sahf
pop
mov
std
xor
daa
mov
push
imul
rcrl
sub
in
dec
loope
dec
push
jle
mov
shrb
je
xchg
and
xchg
mov
or
pop
lcall
fildll
dec
aaa
fistl
in
xlat
jg
mov
call
insb
sti
mov
pop
pmaxub
mov
je
in
shll
arpl
cwtl
jmp
lret
or
mov
addl
sbb
mov
movsb
push
lret
sub
imul
dec
lret
ja
mov
mov
les
jbe
jne
pop
push
jl
gs
in
fsubs
pop
dec
stos
and
cli
mov
test
aam
mov
push
cltd
inc
nop
push
aam
imul
seta
in
cli
adc
or
adcb
or
jp
push
stos
test
lret
rcrb
jae
and
jg
cli
call
push
outsl
mov
pop
test
push
pop
imul
in
push
mov
sbb
sub
add
mov
ljmp
jnp
adc
jb
vphaddbq
aas
cmpsl
mov
aas
lcall
lret
and
push
lret
loope
lret
rclb
push
roll
dec
jae
in
dec
xchg
xor
addr16
mov
pop
push
or
lret
dec
push
hlt
cmpsl
inc
js
les
enter
or
jae
mov
dec
not
hlt
cld
cmc
dec
stc
rcrb
sbb
lods
movsb
pop
jne
test
xchg
inc
lahf
jns
test
mov
xor
and
jle
sub
cli
push
cmp
dec
push
add
subb
push
mov
ljmp
ss
cmp
out
xchg
ss
divb
inc
fisttps
in
cld
mov
push
pop
inc
je
hlt
pusha
inc
jns
loopne
jl
out
movsb
lds
mov
lahf
push
push
leave
dec
cmp
mov
repz
adc
outsb
sub
imul
mov
xchg
call
lahf
outsl
sub
mov
mov
out
scas
repz
lock
pop
jg
daa
mov
insb
test
cpuid
in
pop
cmp
adc
lcall
roll
int
push
and
jae
cmp
jb
or
out
xlat
xor
xor
int
pop
popa
pop
movsb
mov
mov
sbb
adc
mov
leave
rcrb
test
popl
loope
loop
pop
test
cmpsl
xchg
jle
jecxz
int3
jne
adc
or
bound
enter
mov
xchg
pusha
xchg
mov
stc
cmp
jno
je
sbb
push
jo
mov
push
or
mov
add
and
push
dec
adc
add
and
std
xchg
ret
push
adc
sti
inc
jge
incl
xchg
xchg
add
inc
in
adc
xor
dec
and
adc
lea
mov
mov
pusha
or
not
add
lcall
in
lret
inc
pop
add
jo
xchg
push
fildl
cmp
and
dec
in
cwtl
sub
shlb
jg
pop
sbb
jl
and
inc
dec
repnz
xchg
adc
and
rcll
push
fstps
cmpsl
jmp
ss
stc
lds
mov
xchg
add
ret
push
or
mov
repnz
es
mov
add
pop
lret
testb
pop
or
adc
dec
stc
aam
lds
pop
pop
mov
or
into
lahf
jge
adc
gs
push
xchg
adc
jae
clc
in
cmp
popa
fs
lds
movsb
movsl
inc
int3
dec
adc
daa
sub
popl
fldenv
pusha
mov
loop
das
inc
pop
sbb
sub
ficompl
mov
fnsave
insl
fs
enter
inc
mov
in
divb
mov
ja
cwtl
and
mov
or
pushf
test
loopne
cmpsl
pop
add
pop
pop
je
lret
xor
cmp
and
sub
and
push
jl
xor
or
dec
push
dec
push
mov
push
pop
scas
fucomip
or
xlat
ljmp
pop
pop
mov
xlat
mov
jae
adc
ret
imul
out
push
push
sti
xchg
into
adc
shrb
push
dec
mov
mov
test
enter
add
xchg
dec
mov
bound
cmp
jl
sub
lods
rcrl
jbe
call
xchg
lock
in
mov
scas
push
mov
jnp
popa
push
add
cmp
add
int3
adc
push
iret
jmp
jne
fimull
and
sbb
fidivrs
cmp
jbe
cmp
mov
stos
lret
data16
mov
cli
shrb
movsl
das
movsb
inc
ss
sahf
jno
mov
inc
sarl
out
test
sub
ja
push
rorb
daa
imul
out
sub
fldenv
add
movsl
js
sbb
lahf
mov
jbe
mov
inc
dec
mov
arpl
cltd
shrb
jbe
out
mov
aas
clc
xchg
sarl
push
sysexit
cs
test
fisubs
ficomps
mov
cmp
js
mov
and
mov
clc
in
xor
lea
lahf
push
fmulp
bound
mov
xchg
jns
inc
sbb
xchg
js
inc
pop
push
mov
cwtl
push
into
pop
imul
cmp
fst
das
fs
in
cld
in
mov
jp
movsb
xor
mov
icebp
or
push
sub
ja
jbe
and
andb
sub
xorl
stos
mov
inc
xchg
das
movups
dec
das
sub
pusha
movsl
cmp
xchg
data16
aas
bound
sub
enter
cld
sub
sbb
cmp
add
sbb
test
cmc
mov
mov
into
in
cmc
push
out
fistl
test
iret
add
and
dec
cmpsb
dec
cmp
shl
movl
inc
dec
inc
sti
add
call
fsubs
cwtl
data16
js
cmp
xchg
idivb
iret
outsb
mov
aad
lret
cld
int
inc
pop
cltd
pop
or
loope
pushl
xor
into
outsb
out
pop
cli
add
jno
xchg
frstor
loope
mov
loop
or
insl
add
bound
xchg
repnz
sbb
outsb
movsl
pop
and
loope
dec
inc
insb
cmp
inc
repnz
out
aam
mov
sub
jecxz
movb
xchg
cmp
or
fstps
dec
test
jl
repnz
fucomp
inc
lock
adc
movb
test
popf
jns
add
sti
dec
daa
xlat
xor
dec
mov
ljmp
lcall
insb
dec
or
jl
movsb
xchg
ret
pop
out
dec
mov
cmpl
mov
repz
pop
rcrb
out
and
in
lret
clc
mov
or
movsl
cltd
in
adc
in
add
outsb
sub
cmpsl
push
or
in
stos
or
aad
fbld
push
mov
cmc
imul
clc
pop
cmp
insl
imul
mov
movsl
test
out
sahf
jne
aam
push
cmpsl
cmp
xchg
add
mov
hlt
mov
or
pop
adc
sbb
xchg
in
cmc
push
daa
les
ror
xchg
cmp
lods
push
xchg
out
loop
enter
pop
xchg
outsb
iret
xor
cmpsb
scas
or
leave
lds
lahf
nop
test
stos
popf
jmp
mov
pop
pop
ret
cwtl
mov
adc
lock
aas
sub
outsl
and
add
rcrl
shlb
jae
fistpll
pushf
mov
and
je
frstor
lret
mov
adc
jge
cmp
call
pop
movsb
and
push
fidivrl
hlt
add
xor
popf
cmp
jnp
ja
fwait
stos
cmc
mov
sub
mov
add
xchg
cmp
popa
xor
add
incl
jo
mov
outsl
lret
jne
add
outsl
sub
jo
push
mov
shlb
clc
adc
add
enter
popa
out
dec
mov
add
cmp
gs
xchg
mov
dec
inc
mov
stc
fs
cmp
cld
dec
adc
daa
push
negb
gs
adc
pushf
int3
pushf
jae
pop
stos
push
aad
add
repnz
push
test
push
pushf
sub
aad
push
leave
and
push
sbb
cmp
les
xor
ljmp
jecxz
sarb
sarl
pop
inc
and
adc
aas
popf
add
daa
shrb
push
imul
mov
out
fwait
and
js
out
dec
jno
daa
cmpsb
lcall
and
mov
push
out
sub
cmpsb
add
adc
pop
dec
repnz
mov
jecxz
lds
sarl
mov
lock
leave
leave
imul
cmpsb
fwait
movsl
sarl
sahf
pop
cli
fwait
shlb
xchg
imul
mov
inc
inc
dec
insb
lahf
fstpl
dec
ja
movsl
movsb
inc
jb
mov
mov
arpl
cmp
xor
jmp
xor
fldt
lea
and
add
or
xor
dec
mulb
mov
adc
jnp
xor
aaa
pop
clc
ss
stc
bound
xchg
ss
aam
bound
cmpb
out
mov
aad
sub
sub
stc
jbe
jne
adc
outsl
out
mov
add
repnz
jo
pop
dec
xor
arpl
cmp
and
enter
in
pusha
mov
sbb
xlat
mov
sbb
dec
or
shl
and
push
iret
insb
sbb
or
mov
popa
popf
mov
mov
les
inc
fbld
mov
jns
jle
std
and
push
and
mov
xor
ficompl
mov
mov
mov
int
dec
or
out
test
adc
xchg
fstl
inc
orb
lds
inc
dec
jmp
mov
lods
incb
ret
stos
sub
cmp
std
jp
test
add
cmp
bnd
imul
cmp
cwtl
push
loope
les
xor
aas
push
addr16
es
scas
imul
xchg
xchg
mov
enter
inc
testb
jo
lahf
sub
push
je
js
mov
icebp
movl
mov
xor
ja
stc
pop
repnz
mov
ret
mov
xor
das
adc
mov
roll
jno
pop
test
sbb
shll
mov
push
out
shrb
xor
in
jp
dec
cmc
test
call
jge
out
mov
pop
add
or
pop
pushf
xchg
sub
add
adc
popf
or
add
insl
jnp
pop
pop
xchg
dec
sub
lret
push
aaa
out
cmpsb
ja
sub
rorl
mov
sbbb
sub
and
leave
ss
cmp
cmp
mov
mov
xor
inc
nop
sub
test
pusha
pop
or
sbb
cmpsl
add
loopne
add
jg
push
mov
mov
xor
mov
sub
lds
movsl
dec
inc
mov
loop
push
add
sub
push
subb
rep
int
pushf
xor
mov
mov
aam
push
mov
aaa
out
jp
cmpsl
ja
imul
mov
push
sub
mov
test
jne
mov
push
repnz
mov
jo
pop
mov
lcall
rorl
shlb
pop
push
pushf
inc
mov
cmp
insb
xchg
and
mov
hlt
pop
gs
nop
insb
mov
pop
lcall
jne
xchg
adc
bnd
test
fbld
inc
adc
jnp
andb
and
mov
outsb
cmp
cmp
jp
cmp
fadd
inc
adc
or
incb
mov
es
fistpll
nop
xchg
mov
inc
jb
cmp
mov
push
clc
jb
pop
aad
dec
das
cmp
fidivrl
fnstsw
jg
test
pusha
add
std
xchg
out
fsubrs
jecxz
call
negb
inc
pop
repnz
cmp
mov
sbb
xor
cmpsb
ret
aad
dec
cs
shlb
and
imul
cmp
stc
scas
push
popa
movsl
pop
ljmp
imul
sbb
call
sbb
xor
dec
push
mov
ja
int
imul
cmpsl
stos
sub
inc
mov
aas
xor
jmp
ss
lcall
out
out
mov
xchg
jmp
push
call
hlt
stc
xor
lods
loope
adc
jo
xchg
in
sets
cmpsl
mov
add
xchg
jle
mov
adc
mov
dec
push
out
outsl
lea
mov
arpl
jae
roll
rolb
lahf
push
and
pop
das
cmp
fwait
or
testb
xor
xchg
sti
xchg
inc
xor
sub
mov
pushf
mov
xor
sub
scas
push
arpl
mov
inc
stos
gs
xchg
adcb
mov
fidivrs
js
je
out
mov
fwait
jo
inc
adc
pop
js
add
dec
idivb
sbb
lret
out
and
or
adc
cmp
decb
jnp
sti
mov
shlb
repz
add
fisubl
ret
js
pushf
or
cmp
in
into
repz
dec
insb
adc
sub
mov
sub
andb
jl
pushf
incl
xor
call
test
mov
adc
mov
data16
pop
loope
sub
cmp
push
and
cmp
cmpsb
subl
in
leave
push
test
push
jno
iret
adc
hlt
pop
pop
mov
or
pop
and
pop
mov
aaa
cmc
adc
test
fildl
scas
inc
aaa
cmp
mov
ljmp
jmp
jg
pop
jnp
cmp
aam
mov
xchg
sbb
out
push
jnp
mov
shll
in
mov
jmp
mov
cltd
rcrl
sti
je
add
cmp
inc
mov
jnp
mov
rcrb
movsl
shl
fadd
xor
lock
clc
mov
cmp
sbb
inc
or
add
dec
mov
cmp
pop
ja
cs
sti
pop
lock
xor
bound
sbb
xor
jo
and
aad
add
mov
sti
jne
adc
fcmovu
decb
or
loop
mov
add
sarl
ja
push
lahf
push
xor
inc
nop
arpl
leave
xor
imul
insb
inc
outsb
jecxz
aam
idiv
imul
test
xchg
sarl
push
xchg
lret
arpl
ds
inc
push
sub
jle
mov
ljmp
xchg
inc
cmpsl
scas
aaa
negl
roll
dec
imul
and
xchg
push
lods
sub
xor
mov
jp
and
push
adc
adc
mov
stos
jle
jbe
fcom
mul
sarb
mov
stos
fsubl
and
dec
cmp
or
adc
jmp
push
jns
ja
mov
mov
pop
icebp
add
fisttps
pop
or
enter
cmp
xor
in
mov
lods
repz
xchg
out
fdivr
addr16
iret
lods
dec
les
idivl
call
xchg
testl
mov
add
jg
movsb
orb
sub
out
out
push
xor
push
push
xchg
addr16
imull
mov
adc
xchg
xchg
sbb
xchg
scas
aam
lods
cwtl
mov
pop
jnp
mov
mov
or
dec
mov
sar
cltd
push
cli
add
and
fwait
loop
andb
dec
dec
sbb
inc
push
pop
ljmp
cmp
jmp
sti
movl
cltd
xor
or
push
pop
xor
push
xchg
shll
and
sub
aas
fsubrl
mov
in
movsl
xchg
xor
push
scas
and
cmp
mov
in
clc
pop
ja
aam
push
pop
dec
xchg
gs
sbb
test
out
stos
data16
mov
pushf
fs
out
sub
movb
pop
sbb
xchg
inc
lds
movsl
mov
mov
mov
dec
pusha
daa
push
inc
popf
loope
in
enter
inc
cmp
dec
loopne
pop
add
lret
sbb
mov
sbb
add
mov
inc
xor
xorb
pop
pop
repnz
adc
mov
push
xchg
jecxz
adcb
xchg
mov
ret
iret
icebp
gs
int
icebp
cmpsl
mov
shrl
stos
push
mov
daa
xchg
xlat
add
dec
pushl
int3
sub
aam
lret
insb
push
jns
fsubrl
leave
in
jl
pop
and
jle
push
push
icebp
cmp
repnz
clc
movsl
fs
xchg
lds
sahf
jae
ja
clc
sub
aam
ljmp
sub
ret
push
jnp
lea
in
jo
popa
fmull
andb
pop
test
movsb
sbb
sub
mov
pop
loop
dec
hlt
loopne
sbb
or
adc
push
xchg
dec
sub
jecxz
int
cmc
mov
repnz
cli
sub
fnstsw
cmp
aam
cli
nop
in
xorl
push
das
stos
addr16
je
repnz
pop
cmp
xor
jno
push
push
mov
sbb
out
das
cmp
movsl
dec
lds
mov
adc
xchg
jo
cmp
sub
mov
ja
and
pop
fisubs
fmull
push
test
lret
flds
rorb
icebp
out
sti
xor
das
scas
add
dec
popf
inc
rcll
ljmp
es
ja
popf
xorl
mov
xchg
in
mov
or
xor
inc
stos
das
xchg
add
mov
adc
adc
mov
nop
popf
fsts
xchg
popf
cltd
xorl
pop
jo,pt
aad
lahf
fidivrl
das
dec
and
ja
jp
pop
and
addr16
lds
push
dec
daa
xor
push
push
mov
and
cwtl
sbb
fsubs
and
dec
mov
pop
mov
jge
mov
insb
filds
pushf
cmp
and
adc
mov
mov
mov
addr16
push
mov
lret
idivl
add
push
and
cmp
lret
data16
dec
outsb
cwtl
adc
out
fistps
ret
mov
popa
lcall
inc
mov
clc
std
adc
or
fwait
lret
cs
push
adc
ds
hlt
pop
jmp
in
inc
pop
test
mov
mov
sub
hlt
add
dec
sub
xorl
sub
or
pop
xchg
jge
push
fimuls
push
test
or
cmp
pop
cmp
dec
dec
sti
xchg
xlat
ss
pop
das
shufps
xor
mulb
adc
adc
push
xor
ss
in
lret
shlb
jl
test
loopne
fildll
fldenv
adcl
jp
sub
loopne
dec
fldt
ficomps
popf
test
sbb
add
mov
push
ja
inc
xchg
call
mov
sbb
shlb
ljmp
data16
push
js
lahf
aaa
mov
dec
push
dec
data16
and
dec
mov
push
xor
arpl
stos
out
enter
imul
pop
cmp
lahf
jb
gs
jae
pop
sub
pop
loope
rol
sub
out
pop
pop
mov
jg
pop
xor
push
addr16
out
cmp
cvtpi2ps
movsb
push
push
sub
mov
imul
int3
cltd
sbb
scas
addr16
mov
xchg
lds
or
bound
fnstcw
jae
and
mov
jecxz
repnz
add
and
mov
add
dec
mov
clc
mov
enter
repz
inc
mov
mov
mov
imulb
movsb
mov
xchg
decb
mov
inc
fildll
inc
and
push
enter
ljmp
xchg
out
and
push
nop
sub
jbe
jmp
mov
inc
xchg
push
fsub
dec
movsl
mov
bound
xchg
lea
ret
sbb
movsl
cmpsb
ss
int3
sar
jne
in
mov
add
jp
mov
fiaddl
aaa
jmp
outsl
inc
push
repnz
mov
xchg
cltd
int
pop
xchg
int
add
push
js
in
shlb
fs
cmc
xchg
scas
mov
dec
pusha
ss
mov
test
inc
fst
enter
in
pop
cmpsb
fistpl
inc
fs
mov
pop
push
in
cwtl
movsl
push
xor
insb
xchg
cmpl
les
pop
dec
es
xorb
sub
xchg
pop
adc
inc
ror
add
js
push
mov
jae
mov
lret
sbb
mov
mov
or
or
rcrb
or
xor
mov
adc
jns
lds
out
insl
ja
dec
add
outsb
rorl
mov
fisttps
pushf
nop
aad
adc
outsl
out
cmp
fstpl
loopne
xor
fnsave
or
xchg
cltd
mov
lds
push
pop
lods
cmpsb
sub
cld
mov
mov
mov
inc
dec
cmp
ja
mov
mov
and
sub
std
pop
xor
and
sti
add
dec
inc
xor
int3
testl
ja
push
mov
stos
jbe
push
and
sub
popa
aas
in
fiaddl
test
pop
xor
push
outsl
popa
pop
push
in
arpl
cmp
test
mov
adc
pop
xchg
arpl
dec
cmp
je
jg
jbe
and
fs
into
push
aas
mov
imul
fs
loopne
int
insl
loope
xchg
pop
nop
and
shl
idiv
mov
int3
and
sbb
out
jo
clc
fstpl
jne
and
mov
mov
aaa
in
dec
and
sbb
neg
inc
mov
mov
xchg
popa
shl
or
fimuls
pop
sbb
sub
popa
pop
sbb
rorb
xchg
popa
nop
push
lods
jno
or
pop
jne
mov
fbld
andb
pusha
adc
and
orl
mov
lahf
imul
and
cmpsb
cmc
mov
aaa
xor
mov
cs
pop
outsb
and
jno
mov
jl
inc
orl
push
movsb
mov
add
mov
xchg
fdivl
mov
repnz
outsb
clc
mov
sbb
inc
scas
sbb
and
xlat
loopne
lret
mov
data16
pop
aad
xlat
push
adc
xor
push
xor
inc
mov
inc
mov
das
fidivrs
pop
mov
sahf
xor
mov
xchg
orb
sets
leave
rorl
add
push
aaa
sub
cmp
fmuls
sbb
add
xchg
sub
into
test
ja
dec
mov
mov
iret
mov
jl
jb
add
mov
mov
iret
push
frstpm(287
lret
push
pop
popa
cmp
test
and
pop
test
xchg
jne
mov
add
in
int3
pop
in
jbe
push
notl
dec
outsl
aaa
sbb
and
fs
jl
cmp
test
push
sbb
imul
xor
addl
fdivrs
inc
nop
repz
xor
or
cmpsb
test
jbe
icebp
mov
jmp
icebp
inc
cmp
xlat
pushf
xor
and
and
push
sahf
lods
pop
imul
icebp
inc
lret
and
add
sbb
cmpsl
xchg
sbb
mov
add
push
pushf
cmp
sub
pop
mov
push
mov
pop
jno
scas
pop
pop
aad
adc
dec
popa
jp
das
out
jns
pop
and
inc
test
cmpsb
das
lret
adc
cmc
out
movsl
adc
ret
mov
add
push
mov
int3
push
orb
mov
sbb
jge,pt
cmpsb
das
sti
mov
fsubl
adc
in
adc
dec
mov
push
and
rorb
data16
pop
das
mov
inc
push
adc
jne
xchg
fwait
mov
jns
ljmp
aas
in
dec
jnp
cmpsb
outsl
xor
push
mov
pop
lahf
cli
xor
inc
icebp
fsubl
out
stc
inc
pop
push
stos
inc
js
popf
gs
rclb
ret
shl
shl
mov
iret
xchg
inc
and
inc
push
cmp
ret
les
loopne
push
dec
add
or
clc
pop
fs
imul
sbb
fs
mov
inc
xor
sbb
ds
ret
inc
test
push
iret
add
sbb
mov
cmp
adc
pop
loop
cli
adc
arpl
xor
fwait
jb
dec
add
rcrb
sbb
jg
xchg
movsb
mov
pop
imul
out
arpl
ret
out
addr16
mov
mov
sub
push
out
jae
lods
add
cmp
mov
insb
push
imul
outsl
sub
movsl
inc
sti
daa
stos
push
xor
xor
testl
inc
nop
mov
mov
nop
sbbl
adcl
fcmove
cmp
mov
pop
and
into
inc
jb
sub
sti
add
push
lock
cmp
push
lds
adc
dec
cmc
imulb
dec
aas
sti
cwtl
cmpsb
xlat
into
aas
jecxz
push
jle
gs
xor
mov
mov
push
jbe
dec
jl
dec
mov
jle
mov
ja
push
xlat
pop
adc
imul
cli
jle
or
dec
ret
nop
or
movsl
add
xchg
imul
mov
inc
psrlq
lock
cmp
cli
movsl
dec
jo
push
jb
aaa
shll
pop
in
lahf
mov
pop
pop
shrb
dec
push
jmp
push
push
push
xor
adc
pop
sub
dec
in
cmp
jbe
call
insb
mov
mov
push
js
imul
xor
in
or
mov
dec
cmp
xor
pop
jecxz
fdivl
cmp
aaa
imul
or
dec
mov
mov
fstl
int3
cs
repnz
cmpsb
xchg
mov
mov
rorl
loope
lret
dec
sbb
or
clc
dec
xor
inc
aaa
xchg
das
cmp
fmul
mov
adc
int
popa
test
xchg
outsl
outsl
call
scas
and
push
imul
psrlw
lods
jne
mov
stos
cmp
xor
imull
mov
shl
or
stc
enter
xor
jo
nop
sti
jnp
lea
sti
mov
mov
daa
and
scas
mov
lret
in
jl
mov
and
jns
repz
push
stos
fwait
lcall
sub
loopne
popf
dec
bound
mov
nop
nop
mov
mov
mov
outsl
xchg
mov
idivl
pop
mov
dec
lret
sub
add
in
inc
in
and
insl
push
mov
mov
pop
int3
into
push
lret
leave
ret
dec
dec
push
dec
pushf
xor
push
aad
loopne
xchg
xor
std
in
jo
adc
mov
push
adc
mov
das
dec
cmc
rcrb
test
push
sub
aaa
push
lcall
cltd
pop
fsubrs
sub
push
sbb
adc
ret
mov
in
ror
mov
negb
mull
pop
mov
fcomps
mov
adc
rol
shll
xchg
inc
push
adc
push
add
and
adcb
sarb
xchg
or
aas
mov
roll
push
jecxz
shlb
push
je
mov
popf
or
call
int
add
outsl
outsl
adc
jmp
aaa
mov
jge
mov
or
push
cltd
out
xor
dec
dec
xlat
stos
popl
adc
push
outsl
jl
cmp
sahf
fwait
sub
mov
fxch
jge
sbb
xchg
mov
outsb
enter
jb
sbb
in
insb
push
movsl
lds
sbb
and
sarl
loop
mov
ds
pop
call
add
popf
mov
shrl
sub
sub
pop
sbb
dec
std
cmp
lret
mov
mov
xchg
mov
xchg
jmp
mov
cmpb
inc
sahf
faddp
pop
lock
decb
repz
cmp
cld
js
jno
pusha
dec
add
fnstcw
jecxz
int3
lret
mov
sbb
ss
push
add
daa
adc
mov
in
xchg
cmp
or
cmp
adc
inc
push
aas
test
scas
scas
and
bnd
int
pop
insb
inc
dec
adcl
mov
gs
push
mov
xchg
out
aam
test
pop
xchg
sub
dec
aaa
jb
push
adc
inc
or
pushf
sarb
and
adc
shll
dec
lret
test
jp
xor
cmpsb
fdivr
out
xor
nop
mov
mov
push
loopne
sbb
ret
rcrb
dec
dec
push
call
mov
xor
int
jmp
adc
bound
sahf
addr16
out
mov
fnsave
int
sahf
in
push
or
jmp
mov
jecxz
mov
add
jbe
movsb
inc
sbb
bound
fdivrp
orb
pushf
imul
cwtl
inc
fs
repnz
mov
pop
daa
rclb
adc
fistpl
das
or
xchg
fdivrs
pop
pop
orl
test
into
mov
xorl
jne
inc
arpl
lods
or
cmp
sti
and
add
nop
adc
lcall
jp
add
xchg
outsl
out
lcall
sbb
roll
outsb
das
lcall
loopne
xchg
pop
neg
cld
add
mov
outsl
jmp
cmp
hlt
sub
jp
ja
or
push
sbb
js
bound
push
jecxz
in
ss
cmp
lods
or
cmp
fidivl
cmp
push
sub
cmpsl
add
push
das
pop
test
lahf
add
and
sbb
lea
and
inc
les
sub
inc
popa
rclb
xchg
pop
mov
inc
mov
xor
in
sbb
mov
cmpsb
adc
pop
lcall
or
pop
js
xchg
xor
pop
or
insb
xchg
jo
daa
test
in
adc
cmc
leave
inc
and
mov
aam
jl
les
push
cmc
cli
js
mov
mov
dec
leave
nop
inc
add
aaa
call
orl
jno
nop
mov
mov
cmp
and
add
outsl
adc
add
data16
mov
push
ret
icebp
repnz
inc
push
pop
inc
cmp
mov
sub
into
les
inc
cmp
push
pop
sbb
int3
or
or
mov
loope
rclb
cld
rol
incb
ljmp
pushf
scas
sarl
cmp
mov
xor
push
loope
lods
xchg
cmp
xor
pop
dec
dec
sub
mov
xchg
or
dec
dec
sub
cmpsb
int
xorl
sti
mulb
mov
mov
lahf
push
cmpsb
repz
adc
mov
gs
cli
mov
xor
inc
lcall
mov
sahf
push
xor
mov
sbb
aad
and
ja
or
frstor
lcall
push
jmp
push
sahf
rcll
adc
ljmp
mov
mov
jns
mov
cwtl
sbb
sbb
and
out
dec
jle
rolb
call
cmp
dec
addr16
mov
in
in
inc
cmp
pushf
push
mov
outsb
loop
pop
fbstp
pop
sbb
and
cmpsl
lret
push
xchg
in
lret
in
inc
xlat
pop
int3
leave
out
call
inc
mov
cmpsb
mov
pop
cmp
iret
movsb
push
xor
dec
lock
orb
jp
ret
ss
fldenv
mov
jmp
push
mov
jae
leave
cltd
add
and
sahf
sbb
loope
cwtl
call
pop
aad
jne
shrl
add
add
inc
push
push
mov
addr16
xchg
jns
in
mov
ret
push
pop
mov
jge
test
daa
push
mov
sbb
jp
imul
adc
iret
jnp
dec
popa
fwait
mov
and
add
xchg
fs
aam
std
push
or
lahf
add
lret
movsl
xor
leave
imul
cmp
jnp
test
add
out
mov
add
sbb
mov
jnp
jne
subl
es
pop
inc
outsl
and
aaa
pop
add
test
and
fwait
icebp
mov
jns
mov
out
jg
push
addb
jmp
xchg
adc
dec
pop
push
loope
jno
mov
jae
testb
mov
hlt
inc
nop
es
jecxz
je
cmp
icebp
iret
push
aaa
jecxz
pusha
dec
mov
jg
mov
mov
loope
push
rcr
loope
cwtl
cld
sbb
sub
sahf
and
add
out
adc
out
and
cld
mov
and
jno
call
sbb
jp
cltd
cmpsb
mov
pop
sti
mov
movsl
and
adc
mov
jno
cmp
lret
dec
add
inc
pop
test
mov
or
or
enter
jnp
pop
push
dec
cld
adc
xor
xor
push
sbb
push
dec
popa
fcomip
xchg
xchg
xor
dec
sbb
stc
fs
subb
ret
cwtl
icebp
fcoms
std
aad
and
sbb
cmpsb
xlat
and
cmp
ret
pushf
loop
mov
cli
xchg
and
ja
jle
sbb
mov
mov
mov
es
ficoms
adc
adc
loope
mov
sbb
arpl
sub
push
inc
into
dec
dec
or
xchg
negb
or
pusha
add
sbb
fsubrl
add
insl
call
test
movsb
and
push
sub
xor
fistl
out
mov
mov
ret
out
sbb
stc
pop
xchg
sbb
outsb
loope
sbb
inc
sub
and
int
fadd
icebp
mov
mov
cltd
jns
ficoml
mov
xorb
mov
inc
fwait
add
mov
aaa
or
pop
scas
call
call
ljmp
iret
fistl
sub
out
es
inc
push
scas
leave
clc
cmp
jnp
jle
fwait
push
jl
addr16
rorl
addl
out
add
or
mov
scas
mov
out
je
outsb
add
loope
arpl
and
or
sub
xor
mov
pushf
scas
mov
test
sbb
aas
mov
gs
mov
jge
push
lea
jmp
shll
fdivrs
lea
and
sti
sbb
testl
mov
push
and
mov
mov
ljmp
pop
ffree
in
lea
xchg
sub
into
pop
dec
fldl
imul
xchg
jg
jmp
js
push
push
roll
iret
push
xchg
jl
sub
jb
mov
sub
push
mov
lcall
push
fstps
sub
push
or
or
push
cmp
and
inc
push
push
fs
lahf
and
outsl
into
jecxz
cmpsb
pop
add
shlb
or
enter
in
imul
push
mov
call
cmpps
stos
sbb
repz
mov
popa
dec
push
add
mov
pushf
inc
xchg
xchg
aas
xchg
push
ds
stc
jo
sub
insb
test
arpl
adc
aaa
pop
andb
int
les
sbb
mov
jg
jnp
or
in
lret
outsl
mov
fisubrl
lahf
pop
sbb
les
and
popf
test
ret
clc
movsl
jb
mov
cmp
out
push
das
inc
insl
xchg
cmp
inc
mov
aam
dec
mov
repz
cmp
and
lea
clc
pop
test
dec
shrb
mov
add
rcrl
mov
dec
cmp
es
dec
jg
jno
cld
movsb
add
movsb
xchg
lret
jae
shrl
sbb
addr16
pusha
xchg
xlat
adc
pop
das
aam
outsl
stos
mov
inc
pop
pop
shl
call
cmp
cli
stos
pavgb
lock
cmpsb
ja
xchg
xor
cmpsl
daa
sub
jae
ja
iret
push
out
cmp
push
in
jle,pn
pop
or
les
pop
mov
subb
inc
out
add
iret
cmpsl
and
push
or
pop
sub
xchg
ds
mov
ds
call
mov
and
mov
insl
cltd
aas
aaa
xchg
adc
inc
cmp
mov
xchg
out
jg
add
pop
cmp
pop
popf
ja
fildll
xlat
outsl
jnp
cmc
adc
insb
mov
lea
mov
mov
add
xchg
push
cmp
out
out
scas
in
test
add
cmp
inc
push
incl
rol
aaa
ds
cmp
inc
shrl
mov
xchg
ja
icebp
push
pop
inc
pushf
mov
mov
int
push
sarb
inc
mov
iret
mov
and
mov
or
sahf
out
shl
scas
inc
ja
shrl
mov
pop
cmp
popf
mov
shr
pop
mov
and
js
mov
sub
mov
mov
adc
pop
mov
dec
mov
clc
dec
icebp
jnp
stos
adc
stos
jp
inc
pop
lret
pop
jnp
mov
addl
cmp
mov
pop
push
das
das
fldt
push
jmp
fmuls
mov
out
imul
mov
adc
push
inc
and
jle
mov
mov
xor
jmp
mov
cmpb
cs
pop
mov
in
sub
mov
inc
jns
inc
stos
lret
das
push
push
pop
mov
adc
pop
in
lods
mov
xchg
xlat
push
popf
sub
icebp
xchg
dec
fwait
imul
fstpt
int
adc
xchg
sbb
pop
jno
mov
inc
push
mov
rcrb
arpl
inc
in
aaa
icebp
dec
fs
adc
sarb
adc
jo
add
mov
dec
aaa
sub
lret
mov
loope
std
addr16
bound
add
dec
sub
enter
dec
pop
rorl
rcll
xchg
out
inc
fisubl
dec
xor
icebp
dec
xchg
cli
aad
inc
push
and
shlb
mov
pop
ficompl
lret
xor
add
test
inc
or
lock
push
mov
inc
cwtl
mov
dec
pop
xchg
ret
dec
push
sbb
scas
mov
push
inc
fidivrl
dec
inc
pop
std
int
loop
repz
cmp
lock
inc
fwait
enter
test
add
mov
cmc
cmp
fmull
fisubrl
xor
in
les
cmp
adc
lcall
sti
dec
dec
es
mov
xchg
xor
test
sub
into
fwait
jg
xor
mov
and
or
aam
push
jg
popa
cmp
xor
icebp
xchg
pusha
inc
out
cmpsl
add
lods
mov
push
mov
jmp
pushf
xor
jno
pop
repz
clc
adc
pop
test
xchg
mov
test
lds
sub
je
pop
mov
sub
adc
movsb
sub
add
push
mov
inc
ret
cmc
mov
sub
inc
sbb
arpl
inc
mov
xor
out
or
sub
shl
movsb
in
adc
mov
mov
call
sbbb
pop
add
push
sbb
xchg
popl
jle
adc
pop
lret
dec
xor
cmp
or
pop
xchg
xor
lods
ja
subb
jnp
test
sub
sahf
mov
sahf
mov
push
mov
aas
pop
sub
outsb
fwait
pusha
adc
jmp
pop
mov
or
stc
fldln2
push
ljmp
stc
cmpb
jns
rcrb
mov
xlat
sbb
sti
sbbl
or
aam
in
push
mov
ret
sub
shrb
lods
insb
sub
or
popf
mov
movsl
cld
fwait
mov
push
lretw
cli
clc
mov
arpl
cmpsb
xchg
mov
xor
imul
popa
cmpsb
and
xor
fisttps
mov
cmpsl
adc
je
jnp
test
inc
sbb
test
rcll
jg
inc
jo
adc
rcrl
or
ja
pop
in
insl
add
push
xor
jb
dec
xchg
imul
data16
dec
mov
jge
adc
xchg
dec
imul
out
ror
xchg
int
jge
mov
movsb
sub
push
out
cmpsl
sbb
enter
sub
push
mov
xchg
fxam
leave
andl
xchg
xorb
push
xor
lahf
cmp
stc
addl
hlt
mov
xchg
dec
mov
outsb
stos
and
out
repz
adc
out
cmc
push
daa
arpl
and
pop
clc
rolb
xchg
and
add
stc
jge
or
xlat
hlt
lods
movsb
push
push
push
pop
or
mov
inc
pushf
insl
mov
pusha
push
fs
jmp
adc
mov
in
pop
iret
push
xor
and
in
jae
fdivs
inc
mov
pop
sub
jp
scas
xchg
add
mov
arpl
lods
int
rolb
xchg
mov
push
popf
andb
or
stos
cmpl
gs
xchg
nop
add
into
fiaddl
sbb
imul
cmp
int
mov
sbb
and
mov
lds
and
push
and
or
and
cmp
fs
lcall
sarl
inc
scas
addr16
xchg
xor
cmp
cmpsb
pushw
repz
mov
or
arpl
and
int3
outsl
dec
aaa
shlb
mov
sbb
xor
jo
into
and
mov
xchg
dec
dec
test
je
xlat
shlb
sub
push
outsl
fildl
testl
ljmp
adc
xor
mov
or
push
xor
or
cmp
push
fwait
hlt
inc
push
imul
mov
lock
add
sbb
push
aad
jnp
and
push
sbb
les
sbb
cmp
mov
cld
leave
stos
xor
cmpsl
loopne
aad
cmp
mov
int3
mov
ss
mov
jns
jl
test
mov
pop
test
push
jns
lahf
inc
out
das
lods
sub
testl
popf
inc
aam
ret
aas
fbld
xchg
mov
fildll
pop
mov
loopne
push
out
test
outsb
or
lea
mov
adcb
adc
inc
dec
arpl
jl
ret
cmp
mov
movsb
dec
ja
inc
ja
test
xlat
pop
cmp
fdivrs
call
sbb
or
lods
adc
adc
and
sbb
cld
sbbb
jp
mov
call
scas
mov
out
sbb
push
stos
xchg
xor
push
fmull
mov
dec
push
vsubps
int3
push
cwtl
jp
mov
sub
icebp
sbb
rcrl
popa
add
and
add
cmpsl
mov
mov
out
cwtl
jne
or
sub
mov
stos
loopne
xchg
adc
xchg
mov
cmp
sub
push
cmc
aaa
shr
subb
jae
in
mov
divb
outsb
icebp
add
movsb
aad
jle
inc
btcl
scas
sarb
ss
mov
jmp
push
and
fadd
xchg
sub
xor
icebp
shrl
fcmove
test
add
fwait
add
pusha
adc
iret
repnz
jb
add
jb
insl
scas
xchg
sbb
xlat
mul
data16
enter
xor
mov
das
imul
out
sbb
cmpsb
popf
aas
xchg
push
leave
jo
cs
stos
lods
xchg
cwtl
imul
js
pusha
jle
or
cmp
insb
andb
fsts
jp
pop
xchg
mov
orb
int3
hlt
mov
mov
inc
xor
or
jl
jge
ficomps
dec
outsb
outsl
xor
push
add
jae
out
imul
inc
mov
lahf
rorl
and
jle
adc
jg
mov
sbb
rcl
in
or
cmc
xchg
sub
insb
push
mov
xchg
push
xlat
cltd
cmp
fwait
mov
in
dec
xchg
loopne
dec
orl
and
mov
inc
fs
sbb
mov
andl
es
fidivs
test
imul
sbb
insb
fucom
xchg
xchg
stos
push
mov
inc
sbb
push
cmp
adc
in
inc
sub
nop
sbb
rcl
iret
imul
and
push
push
mov
cmp
sub
pop
test
fildll
ja
roll
ja
in
rolb
mov
xchg
ja
imul
xor
inc
dec
pop
shlb
sub
pop
sub
mov
push
pop
into
das
hlt
sbb
push
or
int3
or
cmpsl
stc
popf
or
inc
bound
xchg
and
sbb
xor
inc
lods
and
popa
add
jg
rorb
mov
loopne
adc
cmp
shlb
jge
movsb
and
jb
sbb
pop
adc
push
into
xchg
dec
xchg
sub
adc
jg
cmp
sub
inc
aad
jmp
bound
aam
ret
mov
ficoms
cwtl
or
sarl
lret
add
mov
adc
pusha
inc
xor
pushf
or
shll
and
fsubs
dec
dec
pop
and
xor
push
fsubrl
aad
adc
insl
xlat
adc
scas
push
mov
movsb
push
xchg
lock
ljmp
push
push
add
jmp
sub
lock
cmp
mov
jmp
mov
cmp
imull
clc
add
lds
mov
add
or
pop
push
stos
jno
push
push
or
pop
cli
push
ret
push
mov
and
or
inc
xor
movb
and
inc
push
dec
pop
adc
xchg
or
push
cmp
inc
lods
push
leave
mov
push
sub
mov
lds
aad
and
sbb
sub
outsl
xor
mov
cld
or
loopne
inc
mov
flds
test
jns
leave
and
nop
adc
sub
out
jecxz
enter
dec
cmpsl
adc
xchg
xor
xchg
repz
repnz
lods
or
movsl
jns
mov
xor
cmp
sbb
sub
fstps
les
or
sbb
mov
mov
mov
inc
inc
and
loop
cmp
mov
push
cmp
out
cmpl
or
add
enter
jns
pop
movsb
jns
fs
fildll
in
js
jae
lret
mov
and
and
arpl
es
cmpsb
jns
push
bound
data16
and
scas
daa
cltd
xchg
and
mov
pushf
insl
daa
out
mov
cmp
cmp
scas
mov
dec
mov
es
fwait
in
jmp
inc
in
xchg
jg
sub
ljmp
mov
xor
xor
mov
cmovge
and
leave
mov
xor
lret
dec
lahf
inc
and
movsl
push
data16
fcmovu
adc
lea
mov
cmpl
sbb
stos
lock
xchg
loop
aad
push
jnp
int
sarb
ds
out
dec
repnz
aas
pop
in
shlb
add
push
mov
dec
cmpsb
dec
shl
fisubs
in
adc
bound
pop
jmp
mov
insl
mov
int3
jp
imul
inc
jbe
bound
dec
hlt
mov
and
arpl
je
movsb
sbb
mov
fcoms
sub
jbe
push
orb
in
adc
fs
add
push
inc
push
pop
fsubr
outsb
mov
cltd
cltd
clc
jne
dec
cmp
xchg
cmpsb
jo
push
addr16
xor
mov
or
addr16
lret
add
jbe
adc
stos
xchg
cltd
push
sti
pushf
inc
cmc
dec
pop
pop
pop
aam
pop
gs
rorb
xor
sti
into
sbb
or
cmp
insb
and
xchg
lea
adc
mov
repz
cltd
mov
mov
and
das
sub
xchg
cmpl
adc
aad
int
jae
mov
pop
sahf
outsl
push
js
cltd
mov
mov
fnstenv
out
fmuls
in
jbe
pop
or
ficoms
xchg
add
push
jns
in
cmp
jbe
int3
sbb
test
es
dec
mov
incl
adc
jp
xchg
sbb
fbld
jnp
rcr
fldenv
filds
cmp
mov
mov
into
fnsave
arpl
xchg
iret
jo
and
xchg
and
fucomp
mov
mov
stos
popa
jo
inc
fidivl
pop
pop
jp
stc
aaa
push
mov
xor
adc
cli
or
mov
mov
cmc
lcall
pushf
dec
add
mov
adc
int
rdmsr
mov
mov
std
movb
fstps
fmuls
sbb
fdiv
jae
pop
xchg
jl
or
jns
bound
and
fstl
stos
in
adc
sbb
mov
add
rorb
sbb
sbb
sub
loopne
bsf
and
in
mov
lret
pusha
ficoms
push
dec
hlt
jmp
loop
arpl
mov
fldt
add
cmp
push
fists
loopne
clc
fdivrp
adc
addr16
and
jno
bound
fimull
test
loope
lret
mov
je
ret
push
in
mull
pop
daa
push
xchg
popf
push
int3
cltd
outsb
lods
dec
sbb
and
xchg
pop
sbbl
xor
push
dec
inc
mov
insb
repnz
sub
dec
clc
rcrl
call
jmp
hlt
mov
jae
add
rcrl
inc
mov
shrb
sub
fimull
and
adc
in
fld
leave
inc
and
cmp
mov
dec
nop
add
push
repz
loop
repz
call
xchg
xor
sub
xchg
int
dec
in
xor
pop
mov
jbe
sbb
xchg
sub
lock
push
xchg
mov
cli
outsl
mov
insb
aaa
dec
push
insl
jno
pushw
mov
pop
push
aam
lret
insb
add
pcmpeqw
imul
sub
cltd
and
add
or
fisttpll
mov
sbb
js
je
lock
mov
and
pop
in
scas
andl
jns
cmpsl
movsb
repnz
push
icebp
insb
dec
into
pop
adc
stos
rolb
cmp
mov
ret
sbb
shl
inc
xor
jns
mov
dec
scas
rolb
mov
push
or
stos
unpckhps
inc
out
jle
insb
addr16
icebp
push
mov
add
sti
mov
inc
cld
cmp
and
xor
in
testl
jmp
jne
negl
mov
in
aad
add
inc
xor
inc
push
mov
lret
out
pop
fistl
pop
and
dec
test
mov
pop
push
ja
je
jo
push
lcall
lret
lcall
jne
popf
loope
hlt
xchg
sbbb
xor
sbb
clc
loopne
lds
cmp
aaa
sbb
jb
push
mov
mov
xor
imul
push
cs
cltd
repnz
fsubrs
ljmp
sbb
scas
out
insb
add
xor
test
test
idivl
test
mov
xchg
cmc
ret
out
mov
mov
push
mov
and
lds
push
call
jp
movsb
xchg
fwait
cmc
sbb
inc
cltd
mov
mov
xlat
ss
sub
movsl
int3
lods
pusha
xor
jo
pop
sub
lahf
sub
enter
sysenter
scas
or
mov
rcrb
dec
inc
icebp
ret
call
add
push
dec
mov
jb
mov
cmp
push
and
movsb
lea
xchg
lock
xor
sbb
dec
mulb
mov
cs
xor
mov
fcom
inc
shlb
mov
aam
out
add
push
inc
cld
mov
pushf
mov
lds
push
or
addr16
pop
jns
fmuls
or
jecxz
xchg
je
icebp
or
mov
push
filds
dec
addr16
sbb
cmp
xor
mov
loope
and
in
repz
aam
jmp
in
testl
or
dec
rol
fcomps
adc
dec
pushf
sbb
jmp
or
adc
gs
mov
and
jae
jecxz
jnp
adc
shr
ljmp
out
mov
lret
fimuls
test
loope
adc
lea
sbb
inc
arpl
xchg
sbb
adc
lahf
push
lret
mov
jbe
pop
mov
int3
cmp
out
nop
mov
popf
push
xor
dec
mull
jg
data16
icebp
cmp
enter
dec
jle
and
jmp
xor
rcr
cmp
cmp
pop
mov
shrl
out
inc
js
push
rolb
pop
ja
xorb
aam
sahf
pop
and
pop
mov
sbb
or
test
aaa
adc
loope
rcr
and
cmp
stc
cltd
xchg
xchg
cs
lret
adc
xchg
pusha
sub
jecxz
inc
inc
push
jmp
dec
sub
lods
pop
insb
lods
insb
insb
pop
jo
and
std
jns
push
icebp
rcr
push
fsubr
push
jmp
pop
mull
jl
outsl
jg
mov
cs
subl
aas
dec
lret
or
aaa
inc
sub
xchg
pushf
rolb
mov
fmull
dec
outsl
and
loope
xor
les
xchg
icebp
les
mov
fidivrs
mull
inc
leave
fsub
jno
xchg
and
pushf
adc
adc
cmp
xor
imul
adc
adc
xchg
ret
cmp
idivb
rorb
pop
repz
pushw
cs
mov
lahf
xchg
add
push
into
sub
movsl
js
and
lods
and
sti
xorl
lock
test
rcr
lock
pop
out
lods
xor
insb
rorl
fsubrl
jne
mov
push
push
repz
rclb
lret
jmp
and
adc
aaa
jns
data16
push
outsb
or
ficoms
pavgw
sub
push
mov
push
jle
adc
mov
dec
jae
notb
pop
pop
loopne
sub
pusha
xchg
and
push
decl
fwait
pushf
xchg
cmp
and
sbb
and
inc
or
xchg
scas
hlt
pop
pop
repnz
enter
pop
xor
cmp
bound
dec
popf
int
lds
xchg
fwait
sbbl
and
cmp
mov
inc
movsb
inc
pop
sahf
cli
ja
jb
rolb
adc
dec
xchg
and
outsb
jb
inc
cmc
mov
fnsave
dec
mov
add
orb
repz
xor
and
aaa
sub
or
into
jg
sti
jl
hlt
xor
pop
inc
pop
inc
sub
int
inc
xchg
in
lods
push
pushf
pop
dec
aaa
les
jge
mov
jo
addr16
pop
mulb
cmp
fs
or
or
int
inc
xor
aad
inc
mov
sbbb
ja,pn
or
stos
outsl
jle
pop
shlb
mov
pop
xor
mov
add
cmpsb
pop
loopne
dec
inc
lahf
sbb
dec
int3
or
mov
mov
push
sub
dec
popf
sub
pop
pop
out
push
pop
int3
popa
or
and
cmp
pop
test
orl
repnz
lock
int
sub
outsl
mov
mov
push
sub
xchg
mov
lret
iret
cmp
cmp
test
pop
es
mov
lods
popf
fucomp
jecxz
lock
pop
pushf
jne
ret
cmp
sub
push
or
lahf
cld
xchg
dec
fs
je
iret
pop
cmp
push
or
mov
data16
addr16
test
dec
in
test
inc
arpl
adc
mov
dec
cmp
testb
out
dec
scas
jle
cli
adc
xor
out
and
sub
sti
push
add
stos
jmp
imul
and
scas
push
xor
or
xor
push
jnp
cs
loope
inc
or
ljmp
jg
jl
lret
pop
cmp
inc
mov
mul
sti
add
adc
ror
mov
cltd
jg
cld
pusha
or
out
mov
scas
sahf
sbb
test
std
push
sarl
sbb
repz
scas
lock
mov
das
xchg
out
push
cmp
aaa
cmp
inc
iret
test
mov
xchg
inc
mov
push
push
mov
push
push
je
outsb
notb
lock
fidivrs
daa
stos
ljmp
subb
ja
enter
push
cmpsl
dec
mov
je
fildl
jmp
ret
add
sahf
cmpsb
push
cli
sar
mov
pop
cwtl
outsl
xor
inc
mov
in
dec
inc
fnstsw
dec
add
cmp
fwait
movsb
dec
inc
or
icebp
lods
add
mov
jnp
push
dec
loope
imull
out
pusha
insb
ret
shl
mov
aas
cmp
or
repnz
adc
mov
push
and
push
rcrl
int
out
stc
lods
jne
lea
jl
sub
imul
stos
jb
add
xchg
mov
sbb
sarb
adc
loope
or
call
loope
fwait
pop
sub
mov
sarl
mov
add
mov
or
mov
push
imul
mov
push
mov
stos
mov
sub
xlat
movsb
pop
dec
sbb
mov
sub
in
pop
imul
faddl
add
push
bnd
cmp
test
adc
inc
enter
mov
adc
das
pop
lods
fistpll
stos
mov
test
cmp
cltd
mov
outsb
mov
adc
push
push
lret
into
sbb
stos
cwtl
pop
jecxz
int
repz
shrl
xchg
or
pop
mov
mov
mov
cmp
pop
fwait
xlat
mov
jle
inc
xchg
jg
add
aaa
call
xchg
mov
cmp
cmp
pop
rclb
jb
outsb
std
mov
cwtl
mov
enter
xchg
arpl
push
pop
ja
cli
mov
mov
mov
rcll
dec
insb
xchg
jmp
dec
lods
xchg
pusha
cmpsl
arpl
iret
add
jl
popw
jns
push
sub
and
jbe
sub
les
xor
bound
jecxz
divb
cli
xchg
xor
push
pop
scas
jns
adc
out
daa
pop
adcb
inc
dec
add
push
imul
lahf
add
shlb
aam
iret
fsts
hlt
lret
add
sbb
into
cld
pop
push
aad
sti
sbb
in
mov
fdivs
jle
in
adc
pop
mov
movb
movsb
mov
xchg
xchg
push
sub
pop
ds
andl
sarl
add
rep
pop
pop
adc
dec
rcrb
out
mov
loopne
lods
xchg
in
jmp
lds
daa
xor
inc
repz
stc
jmp
std
out
lret
imul
out
cmp
fs
mov
add
comiss
test
cmp
jnp
mov
ss
jmp
pop
mov
scas
add
or
mov
test
daa
and
mov
push
xchg
cmpsb
xchg
dec
mov
jns
and
xchg
ss
jno
pushf
or
jne
cmpl
push
leave
fucomp
add
es
cld
pop
stc
mov
rcrb
fcompl
jmp
hlt
push
cmp
push
mov
out
jl
jbe
ficoms
pusha
add
inc
mul
dec
sub
mov
adc
aad
mov
insb
std
hlt
jge
fcomps
push
or
daa
inc
dec
loope
sub
rcrb
mov
xchg
and
repnz
push
iret
in
sarl
adc
or
inc
dec
add
sbbb
cltd
scas
int3
popf
or
cltd
jmp
or
or
sub
cltd
jl
dec
mov
dec
or
push
nop
das
out
push
jle
adc
subl
ror
repnz
dec
push
stc
mov
dec
nop
sbb
arpl
into
mov
cmp
insb
test
fldt
sahf
xchg
push
ds
imul
inc
imul
aaa
int
dec
mov
int3
sub
shll
dec
shr
popf
mov
lock
dec
fstpt
in
mov
imul
mov
jmp
mov
stos
clc
mov
jl
mov
dec
inc
push
stc
js
push
pop
mov
or
sub
aad
stos
pop
pop
dec
sbb
dec
jmp
insb
out
pop
aam
sub
cltd
dec
stos
stc
das
xchg
mov
shr
int3
mov
push
jecxz
inc
loope
bound
sub
cmp
xor
xchg
out
adc
sbb
mov
mov
sysenter
xor
popf
lret
imul
cltd
inc
pop
mov
test
rcrl
aaa
mov
out
push
inc
orl
popf
pop
loope
popa
adc
enter
out
or
sbb
or
cwtl
sbb
aaa
pop
mov
ljmp
fcoms
rcrb
das
ds
dec
jmp
cwtl
sub
mov
mov
pop
mov
stos
das
mov
lods
bound
les
in
adc
jo
jmp
cmpsl
pop
pop
pop
jmp
test
inc
fsubl
cs
pushf
stc
add
xchg
icebp
or
outsb
ja
mov
mov
push
imul
aam
cs
popa
lock
xchg
incb
sahf
sub
and
lahf
jb
mov
lds
mov
aaa
inc
out
ret
jae
int
arpl
lock
imul
sbb
add
pop
hlt
stc
movsb
jmp
and
or
mov
je
mov
loope
sbb
xlat
xor
cmpsb
mov
out
inc
das
into
cmp
movsb
cmp
test
lds
aas
mov
lods
lret
inc
leave
sets
or
jle
jb
in
push
or
testl
test
add
jnp
and
add
int3
pop
push
push
jle
dec
fisubs
arpl
xchg
adc
arpl
cmp
add
and
mov
jp
jge
sbb
andl
xorb
sub
sbb
dec
or
loop
outsl
subb
enter
and
push
fidivl
adc
mov
gs
pop
fwait
loop
outsl
ss
mov
pop
adc
push
pushl
popf
mov
add
nop
add
outsb
in
add
mov
ljmp
or
stos
movsl
test
sti
sbb
je
mov
add
mov
nop
mov
xor
fimull
mov
xlat
test
and
cs
ret
fldl
mulb
push
jg
cmpsl
pushf
iret
mov
mov
mov
notl
inc
and
xor
pop
dec
pushf
push
dec
dec
out
xor
mov
ret
clc
lahf
cmpsl
lahf
mov
jl
pop
cld
es
iret
arpl
mov
movsb
dec
sbb
insl
push
repnz
adc
push
sub
fldt
pop
loope
lock
ss
jae
mov
ret
mov
xchg
inc
jne
out
gs
sbb
ret
adc
and
outsb
ja
mov
ja
jle
lea
in
lods
fisubl
dec
test
pop
lea
pop
sbb
jno
sbb
loopne
lock
mov
fldl
xor
in
jb
dec
call
jl
mov
mov
sbb
dec
inc
ds
mov
mov
inc
cli
rcrb
cmova
outsb
fisubs
pushl
jge
mov
inc
xchg
aad
cs
dec
mov
jns
push
aaa
xchg
pop
jo
push
out
insb
xlat
test
xchg
mov
idiv
out
fcomps
data16
push
outsb
xchg
fcomps
mov
mov
jae
pop
inc
cmp
sti
mov
add
xor
insb
xor
cmc
scas
mov
test
adc
jne
popf
adc
fisttps
movntps
or
imul
insl
xchg
cmpsl
sti
fldcw
cmp
pushf
cmp
mov
ret
gs
mov
jns
nop
aaa
jnp
mov
loopne
adc
xchg
aaa
scas
lcall
sbb
fcmovnbe
rcll
into
jnp
das
repnz
out
or
lock
jmp
mov
dec
bnd
rcrb
sub
repnz
call
lods
test
xchg
push
xchg
das
into
pop
outsl
scas
cltd
call
loope
test
mov
pop
or
ja
out
add
adc
loopne
and
dec
or
adc
sbbl
cwtl
sarl
mov
push
mov
mov
sub
xchg
loop
fidivl
sbb
or
cmpsb
sub
jmp
sbb
mov
and
je
sub
cmpsl
sub
repnz
ds
cmp
stos
sbb
cmc
fcoms
les
pop
fstpl
fadds
bound
push
into
jb
dec
mov
mov
mov
push
sbb
and
jo
jle
imul
mov
inc
jmp
add
sbb
cmp
popa
and
inc
push
shl
sub
adc
fs
push
dec
lds
inc
jge
sbb
in
xor
scas
dec
lock
pop
and
jnp
mov
daa
cmp
push
lea
mov
out
or
aaa
inc
lcall
out
sahf
imul
dec
aas
fisttpll
adc
mov
push
lret
fisttpl
mov
insl
dec
push
bnd
out
adc
out
inc
xchg
inc
dec
int3
inc
subb
mov
imul
hlt
mov
xor
jecxz
subl
orb
xchg
xchg
bound
leave
fiaddl
mov
cld
and
stos
mov
ret
pop
xchg
xchg
int3
mov
out
xor
lcall
test
repnz
into
and
mov
jb
push
mov
xor
sti
addr16
mov
xchg
ret
xlat
push
jecxz
xor
jns
push
bound
cmp
jnp
cs
int
dec
loop
fnstsw
hlt
mov
ljmp
xor
mov
lds
xchg
jg
fwait
push
dec
push
and
ret
or
sub
outsl
add
ror
imul
xor
fmuls
mov
fcoml
pop
pop
pop
ja
pop
jle
out
xchg
mov
jle
push
int
or
fnstenv
push
lret
mov
jae
xchg
jo
jbe
jp
sub
test
pop
xchg
shl
rclb
cmp
jns
iret
xchg
push
jne
pushf
pop
out
xor
mov
popa
cli
out
pop
mov
jle
scas
cmc
inc
mov
mov
mov
jae
xchg
jo
sbb
stc
lods
xchg
and
js
inc
xchg
adc
jge
in
dec
jl
dec
mov
push
adc
or
jne
test
mov
daa
adc
mov
rcrb
push
inc
andb
sub
adc
ret
les
inc
adc
xchg
mov
or
pop
movsb
mov
mov
xlat
jo
stc
dec
ja
sbb
xchg
aam
or
je
aad
addb
add
sub
adc
sub
jae
and
or
xor
bound
cmpsb
dec
pop
ret
add
mov
cmc
cwtl
xchg
mov
shlb
cli
dec
daa
jne
and
aad
dec
icebp
loop
sbb
pop
jg
cltd
bound
mov
testb
mov
xor
dec
aam
sbb
xchg
dec
scas
in
mov
daa
jae
fmull
loop
push
cmpsb
je
and
cmc
into
add
popl
mov
sub
lcall
dec
aaa
mov
loopne
adc
adc
aas
lahf
cmp
outsb
lahf
into
mov
mov
or
hlt
inc
and
push
mov
push
insb
or
add
enter
ret
xchg
js
mov
jecxz
sub
dec
adc
sbb
jb
loop
fildll
rcl
mov
xchg
xchg
mov
sbb
iret
lcall
ja
hlt
sbb
out
fucomip
push
mov
push
add
mov
push
xchg
inc
push
add
repz
cmp
push
addr16
lret
mov
lahf
stc
pop
and
ret
shl
cmp
xor
pop
test
dec
push
dec
imul
mov
leave
addr16
add
ret
lahf
imul
scas
daa
dec
out
add
pop
ljmp
push
fs
push
xor
sahf
shrb
cld
gs
xchg
pop
mov
mov
insb
inc
inc
xchg
stos
lcall
mov
ljmp
cld
add
xchg
pushf
leave
pop
jns
pop
push
mov
mov
mov
xor
cmp
mov
cmpl
sbb
rcrb
repz
mov
enter
pop
dec
mov
mov
push
addr16
mov
mov
cmp
rorb
and
in
ss
loopne
sbb
add
push
sub
outsl
push
push
xor
jb
lcall
inc
nop
arpl
insb
lods
inc
mov
mov
aad
or
dec
push
inc
repz
mov
xchg
lock
mov
in
jo
mov
icebp
aam
pop
les
lods
xor
das
push
stos
jae
int
movsl
inc
mov
dec
insb
add
mov
loope
jo
push
cld
cmpsl
arpl
xchg
mov
mov
or
xorb
xchg
stc
xchg
xor
xchg
gs
mov
jnp
xlat
inc
fisubl
mov
mov
insb
adc
push
add
push
pop
repnz
mov
in
sbb
dec
fisubs
out
cmp
push
add
adc
adc
pop
adc
and
inc
xchg
int3
lahf
dec
lods
push
out
mov
pusha
and
in
jmp
mov
push
xor
jne
cmp
movsl
fsubl
stos
dec
popa
pop
lds
jle
add
data16
jecxz
dec
clc
add
sub
addb
js
pop
push
or
or
enter
sbb
dec
fdivl
or
icebp
cmpsb
cwtl
mov
add
pop
xor
iret
xor
dec
xlat
shr
cwtl
lds
fists
js
sbb
xchg
push
scas
xchg
sbb
adc
jg
in
imul
rol
fnstcw
ret
test
push
and
popa
pop
nop
pop
mov
jmp
sub
out
leave
lods
cli
push
push
inc
adc
jne
out
rclb
popa
cltd
or
enter
pop
adc
lods
sbb
or
mov
test
and
dec
rcll
jp
xor
in
jb
cld
push
jle
scas
or
js
nop
sub
test
pop
int3
rolb
hlt
inc
pop
ljmp
xchg
sub
stc
loopne
mov
xchg
test
xchg
aam
xchg
pop
jo
inc
xchg
sar
lock
test
push
out
rcrl
inc
pop
mov
inc
popa
stc
idivb
jecxz
stos
pop
js
outsb
pop
ds
push
push
sbb
je
out
and
ljmp
shl
mov
insb
data16
loopne
movb
jecxz
orb
cmp
dec
movsl
mov
push
and
inc
arpl
xlat
lods
loope
out
mov
stos
pop
inc
jnp
push
xchg
push
pop
mov
sub
subl
les
sbb
inc
in
aad
movsl
ffreep
cli
add
push
mov
sub
xor
inc
sub
mov
mov
lds
sbb
push
xor
iret
pop
mov
adc
int3
mov
cmpsb
pop
je
test
jns
int3
je
mov
xchg
cmpsb
inc
pusha
mov
dec
gs
mov
inc
lea
arpl
fs
daa
add
sti
inc
pop
in
jae
daa
cli
loopne
push
sub
dec
or
lcall
jns
xor
xchg
pop
and
fsts
xchg
mov
mov
arpl
aam
sbb
int
xchg
xchg
jae
loop
dec
imul
mov
add
adc
les
mov
daa
pusha
xor
sahf
lods
in
mov
hlt
popf
xorb
aad
add
cld
xor
clc
daa
popa
xchg
sub
scas
popf
scas
dec
jge
dec
sbb
jmp
fsin
cmp
aam
lods
mov
pop
das
lret
icebp
push
inc
sbb
cmc
rclb
bound
jecxz
leave
jl
fcompl
sub
mov
add
mov
mov
add
hlt
fnstsw
or
or
pavgb
scas
cltd
or
rcll
hlt
lods
cld
add
lcall
xchg
subb
add
in
xchg
jecxz
subb
sub
jl
dec
pop
mov
push
mov
or
cwtl
push
add
cmp
repz
push
shrb
rorl
lcall
jl
movsl
mov
inc
aam
lret
jp
or
push
leave
movsl
sbb
sahf
push
leave
jl
test
jg
add
cwtl
cmp
rcll
dec
in
cltd
mov
loope
adc
popa
js
bound
ffreep
xchg
hlt
test
adc
pop
or
outsl
adc
in
jge
sbb
scas
nop
cli
mov
pusha
ljmp
movb
pop
mov
les
daa
sbb
adc
lcall
aad
int3
stc
xor
xor
test
call
cmp
cmp
repnz
lret
push
jmp
bound
rcll
adc
jl
xor
push
mov
push
sub
push
shrb
dec
xchg
cmp
adc
cmpb
adc
in
shlb
lds
sbb
jne
test
mov
inc
mov
sahf
pushf
movsb
add
loope
xchg
outsb
xor
movsl
loopne
mov
add
inc
loope
ret
cmp
daa
xor
and
xor
addr16
inc
testl
pop
mov
testl
das
add
mov
popa
fwait
and
mov
pop
jns
hlt
scas
out
shl
mov
jae
mov
pop
xor
xchg
xor
dec
cmp
jno
adc
imul
insl
lea
add
or
lret
pusha
pop
add
inc
loope
dec
out
xor
inc
in
xchg
push
test
movsb
pop
and
xchg
popf
daa
inc
repz
into
and
or
bound
imul
push
mov
cwtl
add
dec
sbb
insl
outsb
jnp
adc
rclb
aaa
das
scas
jecxz
fwait
jnp
into
fstl
mov
fs
push
sbb
dec
sbb
push
jecxz
cmpsb
jnp
fists
push
incb
or
mov
ss
lods
sub
mov
adc
add
or
inc
or
inc
fldcw
data16
jbe
xchg
aas
mov
andl
orl
lods
call
sbb
or
or
pop
nop
stos
xor
pop
pushf
fldl
loope
out
mov
xchg
dec
lea
pop
sti
adc
rorb
outsb
xchg
hlt
imul
ret
cmpsb
adc
add
fs
sbb
jl
js
fchs
dec
fwait
sbb
add
xor
add
push
xor
jns
imul
es
call
inc
ret
adc
adc
jnp
dec
pop
add
stos
mov
sti
cwtl
in
jno
or
mov
shlb
sub
rcrb
aaa
xchg
mov
pop
pop
fadd
mov
push
sbbb
dec
addb
pop
xor
push
shll
movsl
in
mov
jno
daa
lcall
xchg
test
push
aam
push
fsubl
mov
pop
cmp
ljmp
push
fdivrs
and
icebp
or
lcall
jmp
mov
dec
pop
out
push
adc
out
mov
jle
popa
popf
aad
scas
xchg
enter
pop
test
das
int
scas
hlt
mov
imul
mov
int
shl
jle
mov
jnp
add
into
cmp
inc
enter
arpl
bound
push
cmp
test
sti
and
lods
push
cmp
loop
into
mov
imul
mov
cmp
add
andl
add
mov
mov
stc
nop
sar
cli
pop
call
je
pop
sub
ds
mov
mov
add
test
push
jns
jb
in
dec
dec
push
mov
mov
jns
push
jecxz
mov
xor
test
push
pop
dec
jae
ret
test
cpuid
inc
xchg
dec
or
rclb
mov
xor
push
imul
cmpsb
int
jb
adc
jle
pop
test
data16
inc
outsl
and
xlat
cld
hlt
jb
jne
adc
pop
out
loop
out
or
inc
xchg
repz
adc
jecxz
add
ret
loopne
inc
and
aam
cmp
js
cmpsb
mov
out
mov
adc
pop
lret
mov
sbb
sub
or
stos
or
xchg
cltd
sbb
add
cmp
test
sbb
cmp
cmc
clc
cli
xchg
loopne
push
xchg
stc
push
ljmp
scas
mov
push
xchg
jns,pt
arpl
pop
bnd
and
jno
dec
pushf
inc
and
xchg
dec
arpl
jecxz
stos
ja
bound
lods
mov
in
mov
outsb
mov
lods
jl
xchg
push
dec
adc
inc
xchg
push
jp
insl
and
mov
jle
cmc
cmpl
loopne
xchg
and
cwtl
mov
test
inc
lods
mov
shll
call
leave
xchg
cmp
cmpsl
lret
or
scas
shlb
dec
shr
lods
add
ja
popf
popa
outsb
mov
daa
jae
pop
mov
ljmp
mov
xor
sbb
add
outsb
jae
rclb
xchg
push
lahf
jl
mov
scas
jl
jae
jl
in
cmpsl
sahf
xchg
sub
pop
fdivl
shlb
jle
inc
iret
mov
adc
rorb
popf
jg
pop
mov
cwtl
fistl
push
shll
dec
call
mov
in
push
fst
pusha
xchg
jo
movsb
cmpl
fdiv
sbb
sbb
push
xor
and
mov
call
jp
push
mov
shlb
sbb
sbb
push
into
and
mov
sub
cs
pop
dec
dec
pop
mov
xor
jo
ljmp
iret
fwait
mul
cs
and
fisttpll
in
iret
loope
add
xchg
dec
inc
jae
cmpsb
adc
sbb
cmpsl
insb
sbb
sahf
xor
jge
stos
pop
sti
mov
sub
dec
movsb
shl
pop
cmp
hlt
lock
js
stos
clc
icebp
mov
fisttpl
roll
das
sti
mov
pop
push
rorb
clc
pop
adc
orb
in
and
pop
or
popa
outsl
into
adc
aas
jnp
aaa
icebp
inc
ljmp
pusha
leave
stos
in
xor
ja
mov
mov
or
fdivl
or
cltd
push
push
cmp
das
pop
jp
jns
mov
mov
nop
mov
stos
loopne
jl
jbe
push
dec
add
push
push
pop
imul
fs
dec
cmpsl
add
mov
sub
pusha
pop
sub
mov
out
adc
cmp
fsts
jb
fs
inc
xchg
jl
test
aas
sbb
jmp
cli
inc
adc
in
ds
test
shll
cmpsb
fadd
pop
in
fisubrl
sbb
mov
aas
cwtl
subb
push
xor
rcrb
repnz
xchg
mov
in
mov
arpl
mov
mov
inc
pop
or
sub
dec
dec
decl
or
ds
cltd
test
fs
add
sbb
or
jnp
sbb
adc
add
and
push
jle
push
mov
in
xchg
arpl
dec
push
pop
sbb
or
es
in
jno
data16
loope
negl
dec
das
fcoml
jl
pop
add
cmp
fs
pop
cmp
xchg
cwtl
rcll
out
fnsave
sbb
popa
subl
iret
adc
repz
lods
addr16
push
dec
lahf
xchg
pop
inc
xor
cmp
ja
dec
cs
dec
mov
push
das
lea
dec
repnz
in
cmc
mov
pushf
rcrb
ja
xor
xor
outsb
cld
fdivp
imul
xchg
loop
pop
sub
jmp
fucomip
xlat
mov
shl
push
inc
or
sub
mov
sub
jo
xchg
mov
out
dec
jb
push
les
inc
lret
ret
adc
addb
movsl
mov
mov
add
clc
pop
cmp
jl
mov
jne
pusha
es
fdivrl
fbld
jb
cmp
lock
mov
jne
add
subl
in
mov
xchg
cmpsb
fsubrl
jl
fisubrl
sub
mov
sub
xchg
and
shl
lcall
push
subl
add
ja
inc
mov
jne
cmpsl
and
outsl
jge
fs
push
inc
arpl
das
aas
movsb
loope
mul
or
adc
dec
lea
sub
jmp
pusha
je
cmp
adc
imul
imul
faddl
jnp
insb
ljmp
and
and
fcoms
jge
push
sbb
pop
xchg
inc
stos
xlat
inc
xchg
addb
mov
sahf
out
sub
pop
jae
movsl
imul
inc
dec
push
mov
push
jnp
cmp
lcall
adc
fistpll
sti
add
ja
lcall
test
xchg
outsb
sahf
and
hlt
nop
mull
call
pop
jns
sub
subl
push
insb
popf
mov
fdivrs
pusha
aad
mov
sub
ret
cltd
pop
xchg
lods
mov
add
sbb
xor
fsubl
and
scas
ds
cld
inc
sub
xchg
pusha
push
out
inc
mov
lret
stos
pop
jne
or
incb
dec
inc
mov
shlb
out
test
icebp
jmp
dec
adc
push
in
test
lods
mov
repz
sub
inc
lret
stos
hlt
inc
shrb
mov
shrl
or
icebp
cmp
cmpsl
and
sub
dec
lock
popa
rorb
dec
fistl
cmpsb
data16
nop
push
pop
lahf
popf
out
mov
enter
add
bnd
fptan
cmp
push
test
cltd
adc
aaa
dec
sub
out
icebp
add
mov
jno
add
push
orl
push
clc
cmc
dec
xor
pop
jne
adc
out
pop
insb
ret
mov
or
imul
jae
jne
das
orl
imul
push
xchg
js
mov
mov
ret
rorl
push
scas
cmp
pushf
lds
xchg
test
aam
push
decl
mov
divb
push
arpl
clc
arpl
int3
std
call
lret
aad
movsb
sbb
or
adc
sbb
sbb
or
inc
sub
ds
pop
xchg
outsl
xor
mov
das
pop
push
pop
push
leave
xor
cmp
mov
mov
orl
push
jo
aas
jne
mov
shll
arpl
cwtl
mov
push
fidivrs
inc
call
fnstsw
ds
enter
repz
and
fildll
sbb
mov
sub
xlat
sahf
lods
shrl
mov
gs
pushf
pop
fwait
bound
mov
and
lods
and
cmp
fdivr
and
sti
add
in
and
or
pop
dec
insb
push
ljmp
mov
adc
xchg
add
loopne
sub
adc
dec
sub
sbbl
push
out
test
loop
ds
xor
add
iret
stos
jmp
repnz
aas
jns
jp
jge
xchg
std
pop
adc
dec
pop
in
scas
aam
cmpsl
aaa
insl
aas
bound
xchg
xchg
call
out
add
enter
xchg
sub
cld
lret
rorl
in
sub
inc
jp
push
cmpsb
hlt
jge
inc
dec
arpl
fwait
mov
stc
jb
mov
pop
pop
outsb
push
rcrb
xor
ret
ja
cld
xchg
mov
lret
ror
jp
jbe
andb
test
outsl
and
mov
int3
or
aas
pop
ja
inc
inc
and
clc
mov
nop
imul
or
jno
inc
les
xor
sub
bound
iret
dec
jmp
aam
pushf
push
jge
fsubl
mov
mov
nop
push
sahf
mov
imul
stos
testl
jp
aas
inc
inc
out
cmc
mov
je
ret
out
les
push
iret
lds
imul
push
jle
rclb
push
sbb
push
or
cli
fisubrs
inc
mov
int3
pop
cmpb
mov
pop
inc
push
cmpsb
inc
cmp
add
inc
and
mov
mov
add
enter
push
inc
sub
jle
push
xchg
out
out
aaa
push
in
mov
sahf
or
sub
mov
and
add
pop
sub
testb
dec
sub
in
dec
push
lods
mul
pop
jle
enter
out
push
push
je
data16
data16
push
mov
sahf
or
cmp
mov
sbb
adc
shrl
sub
and
gs
push
xchg
aad
add
jnp
cmpsb
movsl
test
and
mov
lock
sub
cs
popf
dec
cmpsl
scas
andb
or
push
vunpckhps
in
es
cmpsb
and
cmpsb
jle
adc
jmp
mov
mov
xchg
push
xor
out
jl
add
repnz
or
mov
rcl
repnz
mov
outsl
mov
xor
imul
ss
push
xor
lock
and
push
sbb
cmp
and
loop
cmpl
push
add
fcomip
cmpl
es
dec
mov
mov
test
mov
and
jo
inc
sbb
sub
dec
fsubl
cmp
xchg
mov
xchg
out
test
push
js
adc
pop
fwait
imull
into
fistps
inc
xor
xorb
pusha
sbb
fwait
aaa
notb
scas
jle
ret
xchg
jns
test
sbb
pop
or
aad
xor
xchg
out
lahf
shll
push
adc
mov
or
push
add
adc
mov
mov
pop
and
in
jne
xchg
mov
xorb
adc
cmpsb
ret
lret
mov
lahf
mov
cmpsl
pop
rcr
push
decb
cmpsb
repnz
add
je
xchg
lea
inc
stos
int
aaa
pop
sub
addr16
inc
adc
rclb
stc
lock
cltd
pop
rorb
dec
mov
out
dec
jne
mov
gs
xlat
xor
ljmp
pop
cwtl
jle
xchg
not
pop
mov
imul
incl
insl
in
out
aas
adc
subb
xor
dec
ror
and
call
cmpsb
mov
and
mov
scas
jae
xchg
inc
inc
je
add
lods
push
movsl
mov
xchg
repnz
mov
dec
inc
mov
mov
jle
push
insb
mov
xor
out
jno
stos
dec
add
lret
mov
pop
jne
data16
pop
es
or
or
and
xchg
mov
pop
popl
sbb
lahf
add
movsb
cli
jmp
jg
sarb
adc
or
push
insl
adc
sub
das
mov
shll
cs
xchg
iret
mov
hlt
fs
xorb
xchg
adc
adc
pop
and
pop
and
inc
inc
inc
mov
mov
aad
movsl
jns
adc
imul
cmp
orl
loopne
leave
inc
add
mov
or
in
jbe
mov
mov
les
les
lret
fidivl
dec
imul
pop
cli
ret
or
movsb
push
mov
sub
cs
dec
pushf
add
or
and
mov
sbbl
cmpsl
mov
xchg
sub
int
mov
jge
pop
and
dec
loop
mov
aas
sub
jo
add
or
rclb
shrb
cmpsb
sti
loop
mov
je
je
movsl
ds
add
lea
ljmp
mov
add
add
jmp
roll
cmpsb
inc
clc
jle
pop
cwtl
fnstsw
icebp
ljmp
pop
in
push
loope
and
fwait
jle
jp
push
lret
push
ret
sti
rclb
or
cmp
jl
daa
fcoms
test
adc
ret
pop
inc
out
pop
subl
and
inc
sbb
xchg
jge
rcr
xchg
jp
add
sbb
clc
and
mov
out
mov
aas
fsincos
clc
mov
call
aas
aaa
int3
jnp
movsl
fs
mov
stos
add
fsts
jge
ss
nop
ret
xchg
into
push
lret
mov
sahf
movsb
sub
ja
lds
adc
divb
enter
xor
dec
fldl
xchg
pop
inc
mov
pop
fistpll
test
dec
ljmp
ja
sbb
aam
ja
aas
shll
fisubrs
pusha
fsubl
inc
test
dec
imul
pushf
mov
mov
fstps
dec
sahf
popa
lock
mov
aam
data16
jg
xchg
mov
fstpt
imul
idivb
mov
dec
aas
push
sub
cmp
mov
add
push
in
loopne
inc
jb
mov
repz
adc
jg
push
and
jle
xchg
dec
nop
pushf
ds
imul
push
ret
sti
test
mov
cmp
outsl
test
add
mov
cmp
pushf
out
lods
lds
jg
jne
mov
inc
lcall
xchg
rcll
outsb
xchg
movsb
shlb
outsl
push
pop
inc
inc
lods
adc
mov
mov
xor
pop
scas
lock
lods
sub
add
out
dec
add
nop
pusha
adc
rorb
pop
pop
push
sbb
jnp
push
movsl
shlb
mov
test
lret
mov
test
iret
daa
into
popf
xchg
mov
stc
inc
mov
push
sub
jge
dec
ret
out
or
insl
pop
pop
dec
inc
xchg
outsl
pop
les
mov
push
aas
fisubrs
jnp
icebp
push
adc
rcl
mov
dec
add
aas
aam
xchg
or
inc
clc
xchg
std
pop
and
ffreep
loop
or
fisttpl
out
pushf
dec
movb
jl
repz
mov
inc
inc
adc
out
dec
dec
ss
xchg
stos
adc
lahf
orl
scas
lret
xor
lock
ret
push
or
inc
mov
cmpsl
clc
pop
add
xchg
fwait
imul
rolb
int3
push
scas
aam
mov
into
addr16
roll
xchg
pop
sbb
dec
jb
cltd
cmp
fmulp
cltd
push
andb
outsl
xor
es
clc
inc
test
mov
or
or
jo
mov
out
xor
dec
push
fdivrs
das
mov
xor
imul
jae
xor
adc
mov
pop
imul
add
push
les
arpl
out
or
push
pop
bound
xor
lock
adc
cmovbe
pmulhw
cwtl
scas
pop
out
jle
addb
cwtl
outsl
push
push
or
cmp
adc
add
je
je
mov
jge
negb
out
sub
sahf
push
stos
jbe
pop
xchg
sub
jns
pusha
xlat
push
js
jle
adc
das
out
outsb
lret
sahf
add
hlt
stc
push
and
lahf
push
push
inc
xchg
adcl
aam
in
xchg
dec
aas
rorb
inc
cltd
iret
dec
xchg
insl
mov
sbb
cld
dec
sbb
inc
jmp
xchg
incl
push
jecxz
stc
inc
sub
and
jp
xor
mov
adc
or
in
insl
ret
or
outsb
pop
or
add
fnstsw
sbb
movsb
mov
jb
sbbb
dec
daa
push
mov
frstor
add
add
or
mov
inc
sbb
pop
out
xchg
inc
push
idivb
insl
sub
test
mov
ljmp
push
jge
jle
aas
repz
push
adc
test
xor
bound
pop
push
and
xor
repz
jl
fists
mov
lcall
orl
mov
sub
out
stos
lods
sti
fbstp
stc
fildl
scas
es
push
cmpsl
ret
fwait
cli
sti
call
and
xlat
ss
or
loop
xlat
xor
pop
bound
mov
mov
js
stos
movsb
test
mov
cmp
push
cmp
add
clc
push
fidivl
lahf
imul
inc
sub
adc
out
mov
xchg
pop
add
js
not
scas
pop
and
orl
jae
loop
inc
jne
nop
pop
inc
cld
cmpsb
int3
movsb
sub
into
lock
sub
aad
lahf
jns
fdiv
sti
cmp
jne
jle
cmc
xchg
xchg
fs
xchg
xor
push
cmp
ds
in
push
push
inc
pop
das
inc
pop
scas
pop
hlt
outsb
dec
pop
test
call
sarb
push
in
mov
fs
pop
es
movsb
or
les
mov
jle
mov
aad
adc
inc
nop
pop
dec
aaa
aam
insb
arpl
push
cli
mov
hlt
je
mov
decl
scas
out
and
cmpsl
xchg
lods
or
pop
int
xor
xchg
sub
bound
pushf
sbbl
mov
pop
sarl
lea
sbb
sbb
out
ja
inc
scas
cmpsb
jmp
mov
pop
xor
and
bound
clc
ljmp
cld
loop
sub
jbe
dec
jecxz
rcrl
lds
adc
pop
je
xchg
mov
vmread
sub
ja
dec
or
inc
aas
mov
adc
mov
int
inc
xchg
scas
sbb
ret
cmp
cmp
cli
lock
stos
lock
sbb
std
push
les
imul
xor
int3
xorl
mov
lahf
dec
enter
adc
clc
mov
xchg
mov
mov
adc
mov
fcoms
push
leave
inc
cmp
ljmp
xchg
shrl
pop
push
mov
int
xor
cmp
adc
jo
sbb
cld
jecxz
out
clc
ds
jg
sbb
pop
repnz
pop
cmp
xchg
sub
pushf
in
push
test
xor
jle
aad
jno
call
int
out
imul
mov
sub
out
stc
jecxz
ret
xchg
dec
jnp
daa
ret
jnp
sbb
testl
loope
ljmp
mov
add
xor
and
adc
loope
mov
arpl
lret
fadds
loopne
jmp
scas
or
dec
pop
sub
xchg
xor
nop
outsl
gs
mov
inc
pop
lea
das
push
fsubrl
inc
fstp
ror
mov
loope
jo
clc
push
adc
jae
lret
inc
dec
fbstp
lcall
sti
adc
dec
or
push
dec
lahf
xchg
sub
xor
fildl
outsl
sahf
mov
in
je
jnp
les
fs
mov
mov
inc
and
popa
cmp
dec
xchg
adc
xlat
or
jmp
jbe
push
lock
es
cli
dec
sbb
mov
pop
push
out
mov
fdivrs
and
sbb
popfw
xor
das
pop
ret
aaa
mov
lock
leavew
jb
lea
pop
cmp
lea
inc
ficoml
adcb
les
mov
dec
inc
add
sbb
mov
aam
xchg
add
flds
or
add
popf
push
iret
pusha
mov
pop
or
out
aad
or
arpl
imul
pop
push
fadds
jl
dec
rcll
popf
jmp
push
std
pop
mov
sub
mov
mov
cltd
lahf
inc
test
adc
mov
inc
pop
ror
adc
bound
fldenv
mov
and
psubsb
lods
iret
cmpsb
mov
push
add
fwait
push
dec
adc
push
lret
add
mov
pusha
sbb
sbb
mov
scas
out
cmpsl
pop
hlt
or
and
cmp
xchg
mov
and
idivl
pop
cmp
mov
into
clc
or
movsb
jno
cmp
lret
pop
lock
jmp
mov
or
jb
out
ror
jge
rcl
pop
adc
jne
aaa
mov
in
jmp
or
adc
dec
mov
pop
sbbb
push
xor
cmc
pop
xor
fidivl
insl
test
cmpsb
jne
and
fs
clc
xor
dec
add
jae
repz
inc
add
jp
js
cmp
dec
jne
out
pop
in
xchg
cld
xchg
inc
lcall
ss
xchg
fisttps
fdivl
bound
into
das
ds
aaa
les
int3
jmp
adc
cmp
inc
leave
ret
test
jl
or
mov
aaa
mov
fbstp
lods
push
push
hlt
mov
mov
xor
in
idiv
rorb
popf
in
jecxz
fwait
sbb
sub
sarl
xchg
ret
mov
push
pop
repz
clc
into
mov
xchg
cltd
enter
cmp
nop
xor
xor
int
int
add
cmpb
loope
fsubl
inc
xlat
sahf
fs
mov
dec
scas
add
inc
hlt
mov
out
and
cmpsl
inc
add
mov
pop
fsts
fs
sbb
lret
gs
xor
lea
pop
sbb
push
or
out
and
outsl
mov
push
shl
sbb
cmp
lret
mov
inc
pop
sub
les
pop
aas
pusha
mov
insb
stos
add
cmc
xchg
push
dec
sub
test
and
lret
pop
test
pop
test
cmpsb
mov
sub
fsubp
outsl
leave
in
jl
outsl
inc
sbb
or
push
jecxz
xchg
xlat
sub
sub
outsb
pusha
dec
xlat
adc
cmp
cwtl
je
addps
sbb
cmp
out
js
adc
imulb
mov
push
test
stos
insl
outsb
aam
mov
aad
mul
jb
or
xor
adc
mov
jb
or
jb
pop
mov
xchg
addr16
popa
sarb
std
sahf
inc
sbb
jp
hlt
ret
push
adc
jns
mulb
lret
jl
mov
pop
and
xchg
lea
xor
iret
dec
cld
mov
xor
inc
push
sbb
xor
mov
xchg
jg
leave
jp
jne
xchg
jg
and
jmp
and
push
pop
inc
lret
mov
lret
or
outsl
stos
insb
jp
fcoml
xchg
jbe
jnp
add
xchg
or
cmp
xchg
mov
arpl
loope
sbb
popf
mov
icebp
lea
mov
add
nop
push
divb
sub
out
add
mov
lahf
push
nop
xchg
and
xchg
sbb
mov
mov
pop
mov
in
rclb
dec
mov
fs
and
add
mov
cmpsl
xchg
sbb
adc
and
fistps
in
scas
pop
insl
mov
repnz
orb
outsb
jne
es
pop
pop
rol
cmp
arpl
clc
xchg
mov
and
push
jg
aam
outsb
or
gs
push
ret
loop
cwtl
repz
dec
bndstx
hlt
into
mov
int
imul
fs
push
movsb
or
adc
push
call
inc
fwait
mov
push
mov
jnp
sub
mov
dec
jo
lods
loop
mov
xor
and
xor
pop
or
in
jae
dec
mov
inc
adc
scas
pop
sbb
add
fistpll
fwait
data16
fistpl
sub
fwait
rolb
fsubl
inc
mov
repnz
outsb
xlat
dec
stc
movsl
xchg
xor
mov
or
call
mov
movsl
shlb
inc
xor
leave
cmc
std
jbe
bound
ja
add
movsb
or
fcomps
dec
or
adc
adc
pop
sub
and
mov
jae
xorb
repnz
outsb
mov
or
mov
add
mov
dec
pop
clc
out
lods
lea
xchg
int3
pusha
and
mov
dec
popa
icebp
mov
imul
inc
aaa
cli
pop
rcrl
jl
or
shll
ret
mov
inc
push
fisttpl
adc
cltd
mov
jp
fldenv
outsb
pusha
das
adc
or
das
lea
ds
mov
in
ljmp
jnp
pop
inc
out
push
pop
xchg
es
lods
aad
sub
stos
mov
sti
ja
dec
mov
push
jne
adc
out
stos
popf
ret
push
call
jl
push
int3
xchg
aam
mov
aas
inc
inc
jns
xor
jno
push
jp
mov
sub
dec
sub
pop
mov
cmpb
ljmp
call
sub
icebp
rclb
jno
outsb
push
shll
mov
ret
jb
fnstcw
or
xlat
int3
nop
adc
subb
mov
cwtl
insb
jae
fidivrs
push
inc
push
rolb
mov
addr16
dec
loopne
mov
push
loopne
fsubs
push
xor
cltd
out
push
dec
inc
and
sub
adc
lods
xor
loop
jbe
sbb
test
xor
loop
pop
dec
js
hlt
nop
stos
jnp
into
push
jbe
xor
add
test
jl
mov
jg
dec
add
movsl
testb
fucom
adc
add
stos
sbb
cmp
xchg
cwtl
add
test
mov
dec
add
xchg
and
xlat
bound
add
pop
scas
cld
daa
mov
ds
lret
pop
cli
push
push
or
ja
add
out
andb
inc
jp
iret
loopne
xlat
cmp
clc
dec
rcr
icebp
mov
fcmovnb
xchg
into
or
popf
cs
call
mov
mov
mov
test
push
loopne
xor
sbb
or
sub
ds
add
adc
cli
xor
mov
call
mov
adc
sbb
pushf
outsl
push
cmp
dec
cmp
xchg
push
push
dec
jge
push
sti
mov
mov
or
jg
cs
rcl
mov
movsb
fldcw
and
xchg
ret
push
rcrb
mov
jno
add
rorb
loop
cmp
jbe
inc
cmp
inc
lcall
pop
lahf
xchg
or
cmc
fsubrl
leave
push
or
mov
scas
inc
jmp
mov
pop
call
mov
lret
pushf
scas
aas
je
xchg
hlt
jne
outsb
jg
pop
test
addr16
lods
jb
mov
lods
pop
mov
int
add
push
lds
mov
popf
pushf
push
and
in
dec
loop
ss
cs
imul
inc
xor
test
daa
jge
add
and
xor
jmp
mov
rcrb
dec
int
stc
lock
jns
sbb
enter
andb
lret
mov
adc
inc
cli
cmc
mov
insl
sahf
pop
xor
pop
aas
dec
shrl
xchg
xor
shlb
inc
pop
sbb
adc
adc
out
adc
push
or
fmull
inc
lret
rclb
xchg
jg
fistpll
sahf
inc
mov
mov
mov
imull
fcom
fmuls
dec
or
jg
push
or
sub
scas
add
out
arpl
pop
addb
push
les
fistl
in
clc
scas
mov
repnz
ljmp
or
jl
in
xor
aad
xchg
mov
pop
and
lahf
stos
daa
mov
xor
test
xchg
adc
loop
pop
mov
mov
clc
lret
sbb
out
std
pop
push
dec
jmp
lea
pop
out
sub
mov
fstps
das
jg
xchg
mov
sbb
int3
test
dec
lret
push
dec
mov
dec
dec
pop
outsb
inc
xor
xor
cmp
lea
add
arpl
test
mov
sub
xor
je
add
sahf
scas
mov
xchg
call
jnp
adc
pop
negb
add
out
sub
aam
fnstcw
pcmpeqd
adc
cmp
enter
push
mov
insl
sar
movsb
sahf
into
sahf
xlat
mov
cmc
mov
pop
lods
jns
xor
aaa
stos
push
scas
js
mov
clc
mov
pop
jno
scas
pop
insb
cmp
sahf
jb
mov
mov
push
cmp
adc
push
sahf
aas
cld
std
cmp
inc
shrb
or
aas
jo
cs
pop
inc
xchg
in
ror
sbb
sub
mov
mov
lea
shrl
stos
fcom
jl
cli
lds
jno
addb
add
ficomps
stos
mov
xor
insl
pushf
mov
ljmp
cs
sub
test
loope
ret
sbb
aaa
outsb
insl
into
inc
jge
xchg
sbb
movswl
movsb
shr
js
lcall
ret
sbb
xchg
in
loop
jge
int
mov
std
push
int
adc
cli
into
push
jl
mov
sub
fimull
mov
mov
add
cld
testb
lea
cmp
pushf
fsubs
ret
ficompl
es
push
fistpl
mov
or
enter
sbb
out
inc
scas
cmp
pop
mov
js
dec
or
aas
xchg
jo
adc
sub
fwait
popf
cmova
mov
int3
out
xor
jne
adc
pop
pusha
mov
imul
out
addr16
add
add
pusha
pop
in
cli
sbb
lock
fmull
adc
mov
repz
mov
out
clc
insb
dec
insb
arpl
stc
pop
push
hlt
xchg
lods
mov
pop
or
xor
mov
sub
inc
stc
fimuls
xlat
jnp
int3
jg
xor
dec
adc
cli
rorb
push
push
lret
jp
sub
pop
mov
mov
cmpsb
dec
arpl
inc
mov
and
jne
js
mov
cltd
stos
xchg
nop
and
mov
fs
test
loope
push
sub
cmc
sarb
add
iret
sub
push
fs
mov
adc
into
popf
jnp
into
mov
sti
fsubs
lods
inc
jno
daa
adc
int
jg
mov
out
xor
fwait
addb
mov
cli
push
pop
ja
jle
sarl
add
cmp
cmp
aad
pop
push
cmovle
pop
mov
adc
xchg
add
add
adc
pop
jno
inc
jae
sbb
adc
lret
dec
xchg
xchg
js
into
mov
pop
rol
xchg
int3
push
sahf
fidivl
pop
movsb
inc
sub
or
pop
fadds
outsb
mov
cmp
in
push
adc
ds
enter
loop
repnz
xor
lock
push
dec
pop
mov
cmp
push
push
and
cmp
push
stos
stos
cmp
test
dec
ret
mov
movsl
mov
cmpl
adc
enter
aaa
xor
pop
pop
pop
movsl
jecxz
mov
mov
stc
leave
int3
dec
xchg
xor
mov
movsb
push
xchg
dec
leave
repz
push
jbe
add
add
push
test
sub
cmpsl
les
inc
stos
mov
ds
test
sahf
fldln2
jg
je
mov
jne
loopne
sub
mov
dec
sub
fwait
sub
clc
push
jp
nop
iret
mov
lahf
fstpt
inc
minps
fistpll
mov
lods
push
out
mov
add
pushf
out
arpl
mov
fbstp
jnp
cltd
jne
jg
inc
int3
xchg
mov
jl
cmp
out
push
pop
inc
in
xchg
ja
push
sbb
mov
insl
mov
js
or
test
push
leave
scas
mov
jg
mov
jl
xchg
imul
jne
pop
pop
jae
hlt
fldpi
ljmp
mov
jb
test
fmull
rolb
sbb
push
mov
mov
mov
sub
orl
lods
mov
add
in
pop
sbb
jae
negb
sbb
mov
jecxz
js
imul
in
pop
nop
fs
sarb
in
mov
arpl
add
adc
pushf
pusha
andb
cli
mov
or
dec
add
adc
push
push
xchg
data16
mov
lret
nop
xor
into
jge
mov
movsl
mov
iret
out
ss
cmp
imul
test
pop
cmp
jg
jnp
mov
cltd
mov
ljmp
jge
nop
aaa
jne
lahf
ret
loop
dec
scas
neg
pop
add
or
adc
rsqrtps
fincstp
add
in
iret
adc
ret
nop
mov
push
loop
je
insl
xor
pop
outsl
mov
inc
popa
dec
clc
jae
adc
sbb
xor
push
push
ss
push
test
gs
mov
push
cmp
jp
adc
addr16
orb
sarb
in
mov
jmp
mov
test
jns
bound
pop
sub
pop
in
push
and
xlat
mull
dec
pusha
and
xchg
popa
push
inc
fwait
shll
push
loope
sbb
jmp
data16
sub
or
mov
lods
shrb
loop
call
test
bound
jecxz
xor
lods
into
jb
mov
sub
push
jb
mov
mov
push
aas
popl
jo
mov
mov
pop
pop
jb
rclb
fidivs
ja
out
aad
xchg
loop
xchg
jmp
and
fwait
aad
ret
mov
sub
enter
cmp
cmp
or
dec
fdivrp
es
inc
xlat
inc
jae
call
aas
lahf
and
cmp
dec
pop
jns
pop
jae
add
aaa
std
and
xchg
clc
mov
mov
adc
inc
cs
jb
jnp
sti
int
add
add
add
mov
out
lds
jmp
jmp
cwtl
jg
shlb
push
fwait
mov
test
jmp
and
lds
xor
outsl
sbb
pushf
adc
test
dec
mov
and
mov
mov
arpl
adc
icebp
je
fldcw
mov
je,pn
xor
xchg
and
jmp
fidivrl
divl
mov
mov
or
and
jno
stos
add
adc
pop
stos
fadds
loope
jge
in
mov
jbe
test
aaa
cs
and
or
pop
jge
push
out
push
notb
cmp
fnstenv
test
flds
imul
mov
mov
clc
into
jmp
xchg
out
sbb
and
roll
sub
push
cwtl
das
adc
adc
fsts
dec
jae
std
rcl
push
cmp
cmp
nop
sub
and
jno
adc
or
sub
or
add
push
xchg
xchg
jbe
sbb
leave
pop
hlt
repz
mov
dec
jb
push
dec
mov
fisubrl
push
or
and
mov
adc
and
sub
add
dec
cmp
xchg
jne
loope
add
cmpsb
pop
push
or
jp
sbb
fisttpl
repz
mov
out
push
ds
aaa
ja
in
xchg
fwait
enter
jne
and
daa
fisubrs
je
or
xchg
fildll
sub
fisttpll
stos
mov
in
aas
or
popf
xchg
aam
pop
sbb
test
jecxz
fmuls
in
std
pmaddwd
fsubs
icebp
filds
fidivs
sub
test
inc
add
sbb
or
or
stos
xchg
mov
popf
push
push
inc
ficomps
mov
aam
cs
inc
dec
mov
ja
add
idiv
mul
pop
mov
add
jmp
fs
xchg
xor
sub
add
dec
repnz
add
inc
call
dec
xchg
std
hlt
xchg
movsb
push
pop
mov
stos
mov
mov
inc
insl
jg
adc
push
or
shl
cmp
loope
cmp
rcll
or
scas
xchg
dec
add
sub
mov
inc
out
sbb
jns
gs
and
cmpsb
mov
addr16
mov
or
fidivrl
lea
dec
out
push
mulb
inc
addr16
push
cmp
mov
stc
insb
push
cltd
pop
mov
mov
jp
in
iret
push
mov
stc
cmp
shll
jp
enter
les
shll
jl
test
into
pop
jae
mov
push
out
cmp
dec
pusha
xor
cmpl
xchg
mov
popf
insb
fcmovnbe
mov
sbb
pop
sub
dec
push
xchg
push
in
inc
xchg
xrelease
scas
xchg
jp
sbb
in
xor
in
xor
fmulp
mov
xor
inc
jle
dec
jmp
xlat
cmp
sbb
lods
nop
aas
sbb
imul
mov
push
das
mov
sti
out
ss
cmc
daa
cmp
inc
ret
lods
sbb
ret
aad
lods
jno
jge
pushf
cs
push
adc
jge
adc
fwait
cmc
dec
push
jns
sbb
je
aad
mov
and
pusha
jg
or
dec
mov
or
push
repnz
cwtl
fwait
dec
andl
lock
and
xchg
sbbb
cmp
enter
pop
das
mov
pop
aad
movsl
push
add
mov
enter
and
cld
mov
movsb
xor
adc
cmp
xchg
shrl
xchg
mov
inc
push
std
js
arpl
inc
jns
dec
dec
cli
call
int
test
jge
jns
cmpsb
mov
lret
add
sarb
movsl
lods
fldcw
or
dec
adcl
mov
xchg
loopne
push
stos
test
cld
add
mov
sub
lods
inc
mov
ss
push
push
or
mov
iret
ja
add
adc
jb
bound
leave
enter
xor
jae
stos
fldcw
jnp
jne
inc
jp
popa
or
push
push
pop
stos
rcr
cld
pop
mov
lret
xchg
pop
mov
mov
cmp
jle
ljmp
mov
mov
stc
adc
xchg
mov
pusha
add
mov
fistpl
mov
push
xlat
addb
out
daa
ds
movsb
dec
pusha
insl
scas
loop
aas
mov
mov
pushl
les
daa
mov
sbb
fs
mov
push
and
dec
loop
daa
add
out
shrl
cmp
add
xchg
cwtl
inc
add
inc
add
adc
lret
js
xor
test
pop
lahf
jae
jl
mov
pushf
cmp
add
loopne
xchg
stc
std
jo
fistpll
scas
popf
push
cmp
mov
hlt
nop
bound
xor
rolb
outsl
ds
inc
xchg
xchg
into
insb
outsb
test
jbe
nop
push
lgs
dec
sub
inc
mov
gs
push
mov
add
xor
test
dec
into
push
int3
ja
and
out
pop
or
and
adc
sbb
cmp
push
add
xor
xor
fildll
dec
mov
sarb
sbb
int
enter
mov
and
rcrl
lret
es
notb
xchg
lahf
mov
xchg
test
add
shlb
int
sbb
sti
cmp
lea
cmp
jb
jo
cs
lea
int3
xchg
scas
xor
push
out
sarb
lods
sbb
cmp
xor
adc
jno
or
popf
sti
sti
or
lahf
jp
pop
data16
adc
ret
out
inc
std
mov
imul
add
inc
push
outsl
leave
or
movsl
lret
pop
push
mov
inc
mov
das
push
fdivrl
mov
or
mov
xchg
push
mov
jae
inc
imul
out
mull
inc
jno
mov
les
push
pop
push
in
or
subl
xor
mov
add
lock
icebp
lea
push
jne
fistpll
je
mov
repnz
cs
aad
mov
fisubs
imul
pop
decl
sub
out
inc
jns
enter
cmp
jnp
jle
and
repnz
ficomps
pop
push
out
out
mov
pop
gs
mov
adc
pop
sahf
vmovshdup
lcall
dec
fcomip
cmp
ljmp
stos
lock
lea
pop
imul
ljmp
cmc
mov
jae
sbb
push
pop
push
and
fnstsw
pop
and
mov
imul
jmp
cmp
ss
mov
inc
jns
out
pop
sub
in
sub
xchg
enter
sbb
mov
jge
jecxz
mov
rcl
cmp
in
and
push
add
out
jmp
loop
adc
dec
add
outsl
ds
jmp
or
dec
mov
in
cld
jno
int3
js
ja
inc
mov
mov
xlat
or
push
rorl
push
aas
loop
int
les
xchg
jle
int
inc
mov
sub
fistpll
arpl
pop
mov
inc
jbe
push
fimuls
add
dec
enter
loop
movsb
push
mov
dec
sub
inc
call
add
js
adc
cmpsb
pop
xor
xor
popf
stos
jbe
fiadds
cmpsb
xchg
aad
xchg
or
dec
lea
aas
int3
inc
or
test
mov
loop
push
mov
mov
mov
dec
mov
mov
pushf
into
pop
arpl
stc
sub
stos
or
or
int
sub
fsubl
stos
pop
clc
test
or
cs
mov
jns
dec
add
aam
xor
shrb
jle
or
lods
out
jns
xchg
call
imull
cmp
scas
jbe
adc
sbb
repz
subb
std
add
mov
push
push
push
orb
and
js
repz
mov
jno
and
in
add
mov
lock
paddusb
adc
mov
xchg
pop
push
xor
loopne
test
xor
negb
or
xchg
into
inc
imull
fs
push
ret
stos
dec
scas
ficompl
popa
int3
and
sbb
in
cs
pop
add
mov
push
sbb
mov
adc
cmp
jmp
add
mov
cmpsb
dec
insl
cwtl
in
enter
fsubs
xorps
adc
and
xchg
lods
es
pop
clc
lretw
inc
sbb
adc
cmp
shr
repnz
sub
scas
in
nop
jnp
int3
lock
adc
push
rcrl
movsl
addr16
sahf
and
mov
negl
mov
dec
mov
stos
out
sahf
in
aad
pusha
push
lret
xor
jae
jbe
repnz
daa
jns
dec
emms
lcall
pusha
lret
add
addl
out
adc
clc
stos
inc
xchg
dec
adc
outsb
push
imul
xchg
or
std
lods
cli
xor
mov
inc
add
jmp
andb
xchg
insl
test
cmpsl
sub
ljmp
lahf
or
adc
push
sahf
loop
push
push
cmpsl
mov
add
stos
push
jp
es
jb
outsb
xlat
sti
test
dec
in
popl
bound
lock
xchg
mov
sbb
dec
fdiv
std
nop
je
xor
push
cmpl
xchg
jmp
cmp
into
arpl
sub
je
loop
shlb
inc
into
jl
in
clc
es
in
push
aaa
test
or
xlat
mov
rcr
xor
mov
leave
in
add
faddl
lret
ss
jg
xor
pop
iret
pop
iret
or
jae
sahf
push
popa
push
or
nop
cltd
stc
sbb
add
xor
ret
jge
jecxz
adc
jp
ds
pop
xor
testl
pop
cmp
sbb
lret
into
pop
cmpsw
sbb
pop
pop
aam
jle
inc
int
lcall
fs
in
ret
es
push
imul
mov
ret
xor
jb
ljmp
jno
in
inc
loopne
adc
das
sbbl
and
or
cmp
stos
daa
lahf
adc
sbb
enter
fsub
jmp
into
sbb
cld
mov
mov
adc
xor
jns
dec
pop
into
mov
sbb
xor
add
sub
aam
fs
mov
pop
shr
mov
sbb
xor
fistpl
pop
repz
dec
cltd
mov
dec
push
push
dec
mov
or
popa
mov
sbb
loop
jno
fs
pop
sbb
xlat
cltd
addr16
scas
sub
test
movsl
lret
pop
xor
dec
adc
adc
and
and
inc
cld
or
test
adc
sbb
sub
jp
add
imul
es
sub
sub
or
adc
adc
ret
push
inc
cmp
iret
cli
ja
fidivs
shlb
dec
mov
and
dec
push
jbe
sub
xor
mov
inc
ljmp
jg
rcl
repnz
jmp
testb
or
adc
inc
out
inc
push
fbstp
xor
and
sbb
clc
ds
cmpsb
xchg
shl
or
add
sbb
sub
ret
pop
stos
and
mov
sbb
or
fiadds
jmp
bound
inc
push
jne
add
mov
push
jae
daa
std
sub
ror
out
mov
lods
push
cmp
pop
scas
daa
sbb
repz
inc
mov
rclb
insb
gs
and
inc
mov
dec
out
call
add
fcmovne
mov
push
push
and
dec
sbb
out
xchg
adc
lea
sbb
jo
push
mov
adc
lret
adc
in
cli
cmpsl
jp
pop
scas
adc
jmp
dec
mov
dec
stos
fimull
insb
mov
imul
mov
lret
outsl
ljmp
push
sub
mov
dec
rcrb
arpl
popf
data16
jge
jmp
push
leave
aaa
inc
inc
shll
inc
mov
mov
lods
jl
pop
push
pop
and
cld
or
adc
mov
jnp
xchg
jae
and
daa
ja
jmp
push
pop
das
inc
stos
mov
sbb
insl
push
lret
xor
dec
add
pushf
push
es
sarl
jo
add
sbb
loope
push
test
ret
mov
outsl
pop
sub
add
mov
fisubrl
stos
inc
jecxz
aaa
lock
sbb
adc
cmp
pop
inc
mov
in
sub
push
jl
add
push
pop
xchg
pushf
cs
sub
push
outsb
pushf
aas
pop
mov
pop
dec
orl
stos
inc
jno
aam
mov
ja
popa
adcl
aas
ss
icebp
test
aas
iret
fcoml
jecxz
or
in
in
cmp
mov
mov
inc
jns
sub
jl
adcl
jge
or
mov
sbbb
dec
aam
push
xchg
mov
xorb
xor
adc
je
lods
inc
cmc
aas
inc
testb
and
and
into
adc
jmp
sub
in
ret
std
xchg
xor
hlt
nop
pop
pop
sub
in
dec
xor
add
xor
dec
jge
or
pop
pop
inc
lods
out
sbb
and
sbb
inc
xor
and
js
std
mov
pop
leave
lahf
xor
pusha
scas
out
stos
dec
dec
inc
cmp
mov
jecxz
ret
loope
nop
fnstcw
jns
test
mov
pushf
add
lods
mov
jb
lcall
loop
pop
out
xchg
or
jno
mov
inc
stos
cmp
cmpsl
outsl
adc
inc
mov
inc
or
mov
ret
mov
mov
pop
lods
xor
mov
notb
sbb
jb
daa
add
cmp
cmp
cmpsb
in
mov
fstl
icebp
movsb
movsb
rorl
sbb
inc
dec
pop
mov
and
rcrl
mov
cmp
push
or
jb
sahf
scas
or
sbb
int
sbb
push
xor
mov
lret
xor
jno
and
jg
outsl
repnz
sbb
scas
hlt
in
ficoms
xor
clc
sub
mov
dec
jb
addl
sbb
xchg
dec
push
mov
pushf
mov
nop
mov
test
sub
fisubrs
sbb
jmp
repz
cwtl
xor
mov
mov
lcall
popa
imul
iret
or
xor
add
out
mov
jbe
xchg
push
mov
mov
xchg
lods
add
mov
sbb
inc
mov
jmp
pop
mov
fisttpl
outsl
test
jp
sbb
orb
rcrl
gs
mov
jno
std
pop
and
push
or
cs
add
out
outsb
test
add
add
dec
jno
clc
jge
jle
inc
mov
pop
inc
mov
xchg
fstpt
dec
cs
mov
cmp
dec
test
dec
jle
xchg
roll
inc
bound
mov
jl
sub
cmpsb
jle
loop
pop
rsm
push
vsqrtpd
cld
pushf
or
call
out
int3
das
jg
push
jo
xor
xorb
push
jns
mov
jg
pop
push
outsb
insl
ss
pushf
popf
out
jnp
fcom
int3
xor
aam
jge
insb
fiadds
mov
dec
pop
movsl
inc
mov
sbb
xchg
das
cs
loopne
add
cmp
or
inc
rolb
jl
add
mov
insl
cltd
jp
icebp
mov
test
iret
jmp
insb
xchg
outsb
les
leave
cmp
mov
pop
mulb
in
ja
mov
lds
xor
data16
mov
lea
pop
push
cmp
dec
adc
call
dec
cs
lods
test
xor
sub
out
dec
cmc
fsubl
rorl
lods
push
or
mov
adc
cwtl
and
int3
test
add
push
cmpsl
test
test
sbb
pop
hlt
out
mov
or
dec
xor
xchg
fldt
push
or
in
mov
jne
mov
push
mov
popf
cwtl
gs
sbb
jbe
xchg
or
aam
push
aad
add
repz
adc
dec
adc
and
cmp
nop
jnp
add
pop
arpl
je
lea
pop
pop
sub
add
xchg
fs
mov
and
adc
and
popf
in
mov
repz
xchg
in
pushf
pop
xchg
or
icebp
hlt
adc
adc
jne
jle
or
jmp
sbb
cmp
hlt
ljmp
adc
or
sbb
rclb
ret
jecxz
sbb
fcmovnu
xchg
addr16
negl
pop
loop
push
movsl
mov
outsl
and
movsb
push
and
and
jle
outsb
push
shrb
cli
sub
vmaxsd
mov
push
xor
mov
rorb
pop
xor
mov
outsb
rcr
push
out
inc
popf
lods
mov
pusha
cwtl
scas
inc
repz
test
xchg
mov
stos
or
adc
pop
testl
or
sbb
in
mov
inc
pop
imul
iret
cltd
lahf
dec
sbb
orl
ret
jmp
testb
pop
out
aad
jmp
push
cmc
sub
mov
cmpsb
sbb
mov
xchg
sbb
sub
popf
push
mov
into
dec
out
orl
ds
push
outsl
cwtl
xor
repnz
jge
pop
or
cmc
xor
pushf
mov
xor
fstpt
dec
inc
jno
mov
sbbl
popf
jmp
addr16
daa
dec
push
fdivs
adc
decl
adc
mov
dec
cltd
insb
push
fwait
push
mulb
mov
or
sub
sbbb
jbe
gs
xchg
add
mov
xchg
aas
ja
cmpsb
or
dec
add
icebp
mov
loopne
adc
xchg
repnz
mov
push
rclb
enter
or
mov
adc
decl
sbb
jno
ret
sub
jb
repz
rcrl
data16
mov
cmc
ja
aas
lcall
or
out
ds
jne
cli
push
je
inc
dec
sub
bound
bound
and
fsubr
lahf
nop
cmp
fsubrp
in
data16
and
xchg
int3
add
rclb
jb
jnp
and
xor
clc
cmpsl
xchg
lods
aad
cmp
fstpt
pushf
push
pop
movsl
sbb
mov
int3
out
aas
push
lcall
mov
aaa
fnsave
shl
push
lret
popf
xor
das
xor
nop
or
setge
outsb
cmpsb
push
or
dec
jns
adc
inc
pop
in
mov
push
xchg
fdivrl
in
pop
or
pop
clc
jb
pop
in
scas
jge
les
push
lcall
mov
call
popa
hlt
cmp
dec
outsl
scas
imul
repz
dec
xchg
and
andb
inc
pushf
pop
mov
addr16
aaa
repz
pop
xor
addr16
cmp
test
shrl
lea
loope
mov
or
fwait
inc
cmp
pop
or
test
cmp
sub
popf
cs
cmc
lods
mov
or
mov
fldt
adc
mov
les
repnz
or
sbb
or
loop
lock
mov
addl
or
sbbl
sbb
xor
xor
nop
subl
dec
pop
fs
mov
push
and
push
sti
mov
xchg
xchg
stc
xor
push
cmpsl
jg
pop
gs
rcr
test
les
lret
cmc
jnp
dec
in
je
mov
push
cld
pop
xor
adc
cmp
inc
popf
incb
cli
int3
es
lds
call
jg
jae
std
sbb
std
and
jb
addb
and
push
push
or
subb
sarb
push
insl
mov
arpl
sbb
lea
sub
add
fidivs
xorb
cmp
mov
popl
lahf
ja
dec
sti
cmp
call
dec
arpl
test
jmp
ficompl
leave
push
lahf
xlat
add
xchg
subb
ljmp
sti
idivb
mov
or
lock
in
xor
dec
dec
es
movsl
push
push
in
insl
sub
jecxz
pop
sub
ds
add
ljmp
loopne
nop
pop
mov
pop
push
daa
pusha
adc
ret
mov
jne
mov
in
cmpsl
mov
add
call
mov
loope
add
push
xlat
xchg
roll
jmp
mov
testb
jg
not
mov
cld
fstpt
cmpsb
jbe
pop
sbb
add
or
mov
pop
jecxz
movsl
cmpsb
push
fcoms
call
xchg
push
stos
arpl
mov
lcall
xor
leave
xchg
pop
cmp
fcomps
mov
xor
imul
ret
xchg
dec
sahf
xchg
loop
mov
mov
inc
inc
xchg
mov
mov
push
mov
mov
and
xor
push
push
cmp
popa
xchg
add
aas
push
sbb
scas
inc
popf
dec
aam
ret
leave
icebp
jle
arpl
mov
xlat
xchg
mov
xor
ss
out
push
out
in
cmpsl
sti
adc
adc
lds
rcr
sub
mov
pushf
sahf
pop
adc
push
adc
mov
push
mov
sar
cmp
loopne
mov
fadds
or
jmp
sbb
pop
xor
sub
hlt
and
pop
enter
fwait
arpl
mov
jecxz
jnp
pop
jl
jo
mov
test
mov
adc
pop
fdivs
gs
test
mul
lds
pop
jns
inc
inc
push
mov
test
data16
lahf
out
cmp
pop
fistpl
jle
mov
cltd
cmp
insl
shrb
pop
mov
filds
dec
inc
out
out
js
daa
and
add
cmp
shll
mov
sbb
lods
aaa
call
add
sbb
xor
xor
adc
jbe
jecxz
sahf
cmp
insl
mov
outsb
jp
mov
int3
fnsave
imul
inc
xor
int3
xor
adc
lret
jecxz
imul
movsl
ljmp
fnsave
imul
adc
je
jecxz
cmc
cld
out
mov
mov
xor
in
mov
cmp
mov
sbb
jg
jmp
mov
daa
xchg
and
and
call
in
pushf
gs
insb
inc
aad
cmpsl
and
outsb
stos
icebp
and
shlb
xchg
mov
cmp
mov
mov
push
int
xchg
insl
cmpsl
repnz
mov
sub
dec
stc
sub
and
xor
std
mov
insl
xor
jbe,pn
nop
cmp
in
aaa
pop
add
cltd
adc
add
test
or
mov
jae
mov
iret
call
call
mov
in
inc
addl
enter
imul
sbb
stos
fnstenv
xchg
outsl
jp
lcall
mov
dec
repz
mov
jmp
in
fs
lcall
push
mov
fsub
fdivl
jmp
sub
inc
dec
stc
push
movsl
ret
bound
mov
and
ss
std
pop
les
inc
movsl
mov
sbb
in
or
ficomps
add
scas
outsl
dec
lcall
cmc
fcomi
jne
xlat
or
shlb
mov
cmp
roll
push
jo
mov
stos
dec
push
divl
dec
push
je
mov
mov
lea
ret
fstp
dec
mov
push
pop
inc
outsl
sbb
jecxz
dec
call
decl
shlb
inc
pop
cltd
jo
outsb
sub
leave
ja
lea
outsb
push
clc
test
push
sub
inc
inc
int
in
mov
mov
je
or
js
lods
and
aas
stc
hlt
and
push
inc
imul
jecxz
test
ss
ds
movsl
pushf
lcall
inc
iret
out
lahf
jnp
fsubs
sarb
mov
mov
cli
shll
les
mov
sti
int
adc
out
mov
jg
inc
jge
or
mov
cmp
mov
rcl
pop
sbb
cmp
scas
xchg
sarb
sub
pop
pop
outsl
mov
and
inc
mov
fsubrs
mov
xor
xchg
out
mov
cmpsb
dec
mov
fbstp
or
mov
sub
mov
lahf
data16
adc
rolb
xchg
stos
out
test
mov
loop
add
or
sub
js
popa
sub
inc
clc
push
add
cmp
sbb
xchg
adc
jge
mov
sbb
jp
jns
sbb
loop
stos
cltd
and
jo
inc
test
fstpt
pop
jl
stc
push
mov
mov
mov
xchg
inc
roll
push
enter
sub
jmp
repz
cmpsl
std
push
xchg
incb
ret
xor
repnz
sbb
sbb
cmpl
and
in
bound
imul
or
sbb
push
outsl
pop
push
mov
and
and
xlat
dec
add
inc
pushf
add
test
gs
sti
aad
pop
cmp
pop
std
lret
sub
ds
inc
arpl
imul
and
xchg
jl
mov
out
sti
sbb
pop
out
fidivl
test
shlb
adc
pop
pop
push
jbe
xchg
daa
sub
addr16
or
outsl
sbb
mov
ds
sbb
mov
in
lock
ss
dec
sub
mov
mov
and
push
xchg
repnz
mov
rorb
aas
and
mov
sub
pop
enter
mov
add
jge
xchg
mov
mov
inc
mov
incl
pop
or
xchg
inc
jecxz
mov
dec
popf
out
mov
adc
xchg
or
enter
push
mov
test
cwtl
or
fs
mov
xlat
test
bound
lcall
dec
sarb
fistpll
adc
popf
jns
fadd
mov
mov
mov
mov
dec
aam
mov
jmp
xchg
fcomps
ljmp
xchg
or
enter
mov
sub
in
add
jl
sub
clc
and
pop
sbb
fistl
lods
dec
daa
adc
lds
push
dec
cld
inc
mov
iret
outsl
mov
lcall
cwtl
test
sub
xor
arpl
inc
leave
pop
andb
int3
out
inc
cmp
push
loope
pop
cmp
mov
ret
inc
mov
je
jle
sbb
cmp
cltd
scas
mov
out
je
pop
push
xorb
in
test
gs
lods
sbb
lods
icebp
scas
out
out
imul
test
test
icebp
mov
or
cmp
repnz
clc
test
mov
sub
ss
stos
subl
add
aaa
int
mov
pop
ds
cmp
xor
icebp
jo
mov
lcall
fdiv
xchg
cmp
push
jg
or
scas
into
into
jo
mov
xchg
imul
fs
sub
cli
rorb
rclb
pushf
or
pop
sti
push
mov
scas
pop
push
jns
xor
cmp
xchg
mov
dec
add
cmp
or
and
adc
pop
dec
clc
pop
sbb
xchg
or
lcall
insl
dec
dec
jle
ficomps
out
mov
xchg
insb
cmpsl
sub
xchg
jne
sub
movsl
ret
push
testb
cli
mov
or
loopne
xchg
testl
sbb
leave
test
in
arpl
stos
xchg
pushf
mov
out
and
xor
icebp
inc
outsl
sub
pop
mov
add
push
mov
lret
lea
mov
sbb
sbb
cltd
sarl
ljmp
scas
or
sub
push
jge
mov
lock
stos
mov
aas
or
arpl
out
test
cmp
xchg
outsl
inc
and
jp
mov
movsb
roll
mov
adc
xchg
outsb
mov
movsl
xor
or
mov
lea
push
add
scas
out
cli
cs
call
inc
out
adc
sbb
push
sarb
pop
lahf
xchg
mov
shrl
dec
mov
les
pop
insb
cmp
push
ljmp
lcall
js
mov
pop
xchg
jae
arpl
hlt
mov
xchg
xchg
dec
sahf
mov
cmpsb
or
leave
iret
cltd
add
and
mov
jge
test
pop
nop
mov
fmul
jmp
mov
lods
cmp
fnstsw
sub
ret
das
adc
rcrl
pop
popa
xchg
pop
add
fcomps
jno
mov
mov
jg
aad
push
repnz
inc
ljmp
mov
arpl
sub
aam
dec
sbb
xor
fwait
or
push
fnsave
pushf
arpl
mov
fwait
mov
out
xor
rclb
nop
or
cs
xor
and
loopne
adc
les
xorb
sub
cmc
and
mov
outsl
scas
jmp
jg
call
lcall
xchg
push
pop
cltd
ficoms
test
int
xchg
loopne
mov
movsb
push
xlat
addr16
daa
jae
fnstcw
repnz
xchg
sbb
dec
fs
mov
aaa
pushf
iret
sub
ja
insb
mov
rolb
iret
das
ss
mov
call
stos
nop
sti
ss
mov
cld
sub
mov
mov
cs
pop
shl
popf
repz
jle
cli
xchg
xchg
and
fcom
scas
addr16
mov
subl
sub
icebp
out
movsl
lea
jl
sbb
mov
idiv
xor
mov
adc
lea
inc
xlat
pop
lcall
mov
roll
into
imul
push
jp
xchg
xor
movsl
imul
out
cld
ficoms
push
dec
xor
pop
sarl
push
xchg
fnstenv
mov
lcall
push
or
pop
mov
fistpll
push
pop
push
sbb
out
and
dec
nop
sbb
das
loopne
dec
or
sub
inc
or
movsb
les
jb
out
movsl
fs
jb
or
xor
push
int
test
in
jmp
in
test
dec
fmull
cltd
cmp
xor
jne
ret
hlt
jmp
pop
lret
lds
pop
dec
dec
arpl
jmp
sbb
lods
or
icebp
mov
dec
push
daa
sub
aam
or
mov
xchg
cmp
push
popf
xchg
roll
inc
repnz
sbb
or
scas
imul
es
inc
icebp
call
mov
fisttpl
mov
jmp
stos
lods
xchg
into
cli
mov
sbb
ljmp
mov
mov
lods
roll
inc
xchg
jge
repnz
hlt
loope
into
aas
sub
push
aaa
xchg
mov
inc
enter
dec
ja
or
lods
pusha
or
add
and
mov
add
and
push
and
movsb
sbb
xor
push
mov
pushf
mov
idiv
js
lods
mov
xchg
rolb
loopne
in
pushf
lahf
inc
dec
jecxz
dec
std
dec
push
dec
or
sti
mov
orb
rorl
cli
or
sbb
xor
cld
adc
into
adc
jmp
fs
sbb
loop
xor
inc
cmpb
dec
shll
inc
dec
inc
sub
cmp
push
lcall
or
xchg
or
add
and
hlt
aaa
add
loopne
repnz
icebp
pop
and
jmp
mov
jb
fs
xor
aas
mov
or
loope
scas
cld
fsubl
pop
inc
and
xor
imul
xchg
in
add
adc
sti
pop
pop
sub
shll
fcoml
push
xor
in
subl
decl
xchg
test
mov
xchg
dec
popf
jbe
lcall
andb
test
mov
insb
push
movsb
dec
jge
mov
jl
cmpsl
cmp
rol
mov
jmp
shll
out
pop
stos
movsl
iret
sbb
lret
mov
mov
and
lea
sbb
cli
mov
aaa
fdivl
shl
ret
adc
sub
stos
mov
das
and
push
jl
das
adc
dec
ret
stc
add
xor
sub
aad
sub
pop
and
adc
mov
push
inc
xor
pop
add
js
push
sbb
int
test
add
adc
pop
push
mov
or
mov
call
loop
pop
sub
cmp
lods
or
out
lods
shrl
roll
xchg
mov
pop
pop
cmpsb
xor
mov
inc
outsl
mov
jae
and
xor
js
xchg
les
mov
pop
lret
mov
adc
mov
nop
dec
inc
lock
sahf
cld
xchg
aaa
cmc
xor
jno
dec
and
xor
adcb
movb
add
lea
and
movsb
loope
mov
dec
sub
jns
xor
ret
adc
js
sbb
push
xor
mov
lods
ret
mov
mov
jecxz
mov
test
add
insl
ret
mov
stc
mov
jg
pop
sub
in
lods
adc
pop
loop
cmp
sub
push
pop
jno
jp
sub
pop
popa
xchg
ja
push
fidivs
jmp
xor
leave
mov
or
fstp
push
test
loop
mov
mov
lea
and
sub
add
push
or
ss
daa
pop
inc
pop
push
ds
inc
mov
in
jnp
or
outsl
push
or
insl
mov
adc
test
adc
xorl
jae
cmc
inc
mov
mov
sub
jne
pop
andb
icebp
arpl
fwait
insl
xchg
js
ljmp
repz
jns
cmc
xchg
mov
xchg
lret
sbb
lret
dec
sub
xor
xchg
lea
iret
hlt
shl
mov
dec
in
mov
fcomps
mov
jbe
sub
xor
cmc
add
or
ljmp
scas
fmuls
fsub
adc
ljmp
dec
add
adc
cmp
jno
mov
lods
fdiv
into
jne
test
sysret
sub
xor
mov
push
rclb
bound
popa
in
inc
push
in
fmull
push
pop
cmp
iret
inc
xchg
sahf
insb
inc
lds
pop
lea
stos
mov
dec
sub
push
shll
inc
cmp
jge
aaa
xchg
out
decb
scas
pop
imul
pushl
fstpt
jge
nop
mov
or
loope
pushf
bound
and
pop
xor
sub
aad
mov
icebp
ja
xchg
or
pop
dec
or
pop
sbb
pushf
jle
mov
and
jne
lods
adc
push
push
sti
jmp
loope
mov
cwtl
xchg
and
add
xor
aam
fcmovne
fnstsw
cmp
jmp
dec
xchg
ret
mov
adc
fdivs
xchg
pop
pop
push
pop
xor
adc
stc
aaa
das
jle
call
cmc
int
mov
mov
jnp
cmp
cltd
and
adc
lods
lock
lret
jle
fwait
insl
test
add
adc
sbb
dec
mov
addr16
pop
sub
and
icebp
mov
sahf
stc
add
mov
call
xchg
jnp
cmp
sub
sbb
or
xor
nop
mov
xor
scas
pop
or
imull
out
inc
sub
pop
or
or
je
add
insl
and
mov
lods
nop
jp
fwait
loop
xchg
cmovle
mov
or
pushf
lret
dec
and
add
mov
fildl
pop
ds
int
adc
inc
pop
insb
icebp
fcmovnu
addr16
in
ret
add
gs
test
cmpsb
mov
xor
or
dec
daa
jl
loopne
stos
xchg
in
jmp
sub
mov
mov
dec
rclb
xor
push
lea
sahf
dec
xchg
jb
repnz
jb
jle
bound
ret
push
mov
imul
xchg
cmpsb
popf
aad
inc
and
adc
push
nop
sbb
sbb
pop
inc
loopne
xchg
cwtl
sub
ret
inc
sar
xchg
out
lcall
int3
into
lods
mov
push
mov
loop
mov
inc
mov
mov
push
fstpt
xor
repz
mov
sarw
cmp
test
test
xlat
push
inc
iret
mov
cmp
sbb
sbb
test
aaa
cwtl
xor
jbe
sarb
xor
lahf
rcr
movsl
jecxz,pn
es
sbb
jbe
aam
xor
fiadds
sbb
es
push
and
into
pop
sub
movsl
adc
xchg
rorl
cmp
aas
xchg
pop
jne
mov
outsl
or
xchg
clc
jno
cmp
push
inc
pop
sbb
cwtl
fwait
out
push
mov
sbb
mov
xor
sbb
lods
insl
xchg
mov
into
adc
adc
jge
inc
pop
cmp
mov
pop
add
mov
rcll
mov
scas
movlps
push
popa
inc
cmp
pop
mov
lods
jg
mov
push
in
sbb
std
adc
inc
add
mov
das
dec
cwtl
int3
sbb
mov
hlt
rcl
xchg
imul
xchg
add
andb
mov
jb
mov
lds
pushf
stc
pop
out
mov
nop
movsb
adc
rolb
pop
or
into
mov
jmp
insl
or
cmp
push
lds
je
dec
sbb
cmp
jnp
pushf
outsl
ror
test
sbb
stos
fs
lock
sbb
add
cmp
push
mov
sbb
or
inc
sub
push
jg
xor
or
or
xor
xor
addr16
ljmp
xchg
xlat
out
sub
dec
mov
sbb
in
xor
int
test
inc
stc
js
imul
add
leave
and
xchg
imul
and
aam
inc
pop
out
dec
pop
pop
xchg
scas
mov
sbb
add
pop
pop
sbb
xchg
dec
pushf
sbb
orl
inc
rolb
add
pop
out
shll
pop
pusha
aam
aam
sti
sub
sub
repz
cmpsb
and
push
hlt
pop
rorl
popf
push
sbb
or
loop
aas
lock
mov
adc
stos
xchg
lea
cmp
inc
pop
adc
arpl
dec
fnstsw
mov
andl
stos
test
jle
mov
push
pop
shl
fldenv
jecxz
int
xchg
arpl
push
jne
xchg
sbb
cmp
out
subb
imul
lock
lahf
lahf
rcll
push
daa
popa
fwait
and
jecxz
xor
sahf
adc
or
fdivrp
xchg
rcr
enter
xor
sbb
addr16
xchg
and
rclb
xchg
mov
jg
dec
les
mov
adcb
es
out
sbb
mov
scas
lods
pop
das
lds
das
adc
ljmp
sub
xor
stc
lods
sub
add
xor
dec
add
icebp
jb
add
aam
jp
cmp
mov
mov
jg
xchg
inc
mov
xor
rcrb
jno
or
pop
mov
sbb
test
pushl
dec
in
mov
cmp
ret
lea
mov
aad
hlt
sbb
into
sbb
pop
test
ja
lcall
jnp
frstor
mov
dec
push
stos
fnstcw
mov
inc
pushf
in
ficompl
or
jne
sti
loopne
loope
mov
mov
aam
push
fwait
fwait
jns
dec
scas
pop
iret
cmc
mov
insl
fsubl
dec
jne
aas
mov
xchg
jno
jbe
popa
sub
push
push
outsl
ret
or
push
adc
cmp
push
movsl
dec
adc
adc
fsubrs
xchg
pop
in
xchg
xchg
cmc
dec
insl
aam
cwtl
jmp
adc
and
hlt
push
sbbb
imul
inc
aas
push
lea
leave
inc
push
fwait
mov
loope
mov
adc
pop
or
lret
jb
fs
mov
mov
scas
or
mov
bnd
orl
mov
cmp
enter
fcomps
and
bound
and
daa
pusha
dec
loop
push
call
mov
jnp
popf
push
mov
lods
shlb
jle
and
cs
js
add
insl
fsubp
push
cmp
lods
jmp
ficoms
pop
inc
fnstsw
movsb
cld
and
lea
adc
inc
push
inc
inc
push
lret
cmp
fists
repz
push
loop
mov
mov
jg
lock
push
sbb
mov
jg
dec
pusha
aas
aaa
dec
inc
dec
sub
mov
fcmovb
ret
pop
std
fnsave
push
dec
js
into
dec
aam
clc
jo
jmp
jmp
xchg
jg
sbb
es
add
jo
mov
aad
test
xchg
arpl
pop
adc
dec
inc
into
jg
jg,pt
call
loope
xchg
xchg
adc
cld
inc
push
or
aam
add
jge
add
push
mov
mov
xor
push
fcoms
icebp
aam
scas
ljmp
test
std
cmpsb
xchg
mov
js
cltd
push
xchg
cmp
dec
js
addr16
fidivrs
sub
mov
cmp
push
mov
addr16
cltd
adc
stos
div
or
sbb
mov
and
inc
int
mov
mov
add
and
rclb
in
mov
xchg
and
es
inc
mov
sarb
jns
insl
leave
fcmovbe
push
mov
sub
cmp
inc
mov
pop
outsl
fsub
movsl
xor
aas
outsl
je
mov
inc
pushf
or
es
pop
mov
mov
push
outsb
sbb
mov
sbb
xor
rclb
rorl
push
mov
jmp
scas
lahf
stc
jns
mov
pop
push
insl
pop
mov
xchg
sub
cmp
addr16
ss
push
repnz
lcall
rcrb
sbb
divl
push
mov
sti
repz
xchg
push
push
mov
cltd
push
lahf
rcrl
dec
xchg
das
sub
addr16
rcll
cmpb
xor
add
jl
cmp
adc
dec
push
call
cmpl
sub
stos
neg
lods
lret
mov
inc
adc
cmp
push
es
les
dec
fnsave
lret
jg
aam
xor
test
cmp
xchg
shrb
jp
mov
cmp
pop
push
mov
sti
lods
cmp
je
addr16
dec
lods
jl
or
or
ret
popa
push
lret
xor
cmpsb
pop
aam
cltd
or
loopne
push
sub
das
dec
fnstsw
xchg
add
cmp
mov
inc
sub
cmp
arpl
jmp
mov
fucomp
cwtl
stc
mov
and
mov
pop
jb
sub
hlt
push
lock
push
jb
xorb
out
ja
jno
inc
mov
shll
stos
ret
int
or
mov
ficoms
sbb
inc
mov
aam
push
and
mov
push
push
jle
sti
aad
pop
outsb
fidivs
cmp
fcomps
push
popf
adc
mov
lods
fbld
pop
mov
in
dec
pop
pop
call
mov
mov
push
mov
fs
sub
mulb
fdivp
dec
mov
cmp
push
in
das
aad
cmp
lock
mov
popf
jo
adc
cli
mov
sub
inc
xchg
cwtl
clc
sbb
jb
xchg
mov
jl
sarb
sub
mov
jo
aaa
outsb
fbld
sub
jnp
jmp
fcmovnu
gs
test
lret
inc
out
stc
pop
jne
adc
sub
out
dec
and
xchg
jge
push
xchg
lcall
or
clc
pop
pop
dec
xchg
mov
clc
movsb
push
stos
or
loop
fidivrl
daa
frstor
sub
aam
mov
push
mov
pop
inc
loopne
mov
sbb
dec
mov
mov
mov
adc
cmp
mov
jno
sbb
pop
lock
mov
sub
sub
inc
aaa
jg
add
cmc
test
scas
in
insl
inc
mov
ds
bound
lahf
cltd
dec
jns
lahf
push
lret
xor
fucomp
dec
ror
xchg
cwtl
stc
cmpsl
cmpl
add
mov
pop
pushf
pushf
adc
cmp
jno
mov
xchg
lcall
cmp
repz
out
in
insl
lcall
outsb
std
adc
setns
pop
mov
data16
jno
dec
addr16
xchg
adc
jnp
out
cld
lds
push
shl
jmp
add
outsl
sarb
adcl
loopne
mov
jg
in
sub
imul
bound
in
loope
fistps
mov
inc
cmp
fcmovne
jge
test
mov
shl
push
mov
dec
jb
and
inc
test
mov
lcall
jle
repnz
jle
or
sbb
jl
std
push
sarl
imull
xchg
adc
aad
in
repz
into
pushf
fwait
or
leave
xchg
pop
addr16
scas
outsl
arpl
cmpsl
jg
xchg
lcall
faddl
sub
fldenv
adc
pop
push
test
push
in
adc
jns
sarl
xlat
ret
into
lea
xor
addr16
sub
push
mov
mov
push
mov
xor
mull
adc
imul
push
lods
popf
xor
cltd
mov
cmpsl
fstpl
xchg
push
sbb
dec
sbb
cld
cli
loop
push
xor
jge
mov
lea
push
jae
cli
xchg
scas
add
mov
add
or
es
adc
push
outsb
or
xchg
jb
test
cmp
xchg
pop
xlat
dec
fisubs
ud0
jo
mov
leave
pop
aam
sbb
das
jecxz
sbb
jbe
and
int3
inc
or
cmpsl
shll
dec
dec
mov
xor
dec
in
popf
push
inc
movsl
ljmp
lret
add
inc
scas
lods
xor
dec
sbb
outsb
sbb
and
jl
sbb
subb
dec
cmpb
scas
xchg
push
add
jle
or
mov
adc
adc
in
mov
test
fimull
mov
mov
enter
std
mov
dec
push
in
mov
cmpsl
mov
inc
jmp
pop
inc
sbb
or
inc
xlat
jns
fwait
mov
ss
inc
cmp
sbb
cmp
and
leave
sarb
xor
orl
das
pusha
mov
cs
ja
mov
cmp
jg
bound
xor
orb
out
stos
fldt
pop
mov
mov
loopne
mov
scas
cltd
cmp
cmpsb
inc
hlt
cltd
iret
cld
inc
jle
mov
cs
pop
les
adcb
popf
js
je
dec
fnstenv
aam
clc
mov
mov
inc
rorl
mov
add
or
std
aas
xchg
inc
pop
aad
flds
mov
cmp
test
push
pop
push
dec
mov
call
jb
into
mov
sbb
in
sbb
jp
and
imul
mov
adc
mov
mov
xor
pushf
rorl
add
cmpsl
dec
push
pushf
xchg
stc
xlat
inc
push
or
stos
mov
push
mov
mov
fiadds
push
and
clc
filds
orl
xchg
mov
xchg
es
and
inc
dec
xchg
mov
mov
clc
pop
out
dec
mov
fs
inc
mov
push
pop
xchg
pop
test
mov
fnstenv
mov
pop
bound
in
mov
adc
and
nop
cltd
loopne
xorl
jb
fdivrl
arpl
leave
pop
test
cld
sub
stc
std
mov
cwtl
jmp
test
jns
outsl
pop
xor
dec
mov
je
sbb
lds
push
aam
daa
inc
or
in
mov
in
stc
sub
pop
mov
adc
add
fimull
sbb
xor
or
movsb
test
insl
icebp
xor
movsl
jbe
stc
sbb
or
push
jmp
popa
pop
insb
nop
cld
cltd
shr
movsl
or
fsubs
mov
sub
push
push
popf
pop
mov
jno
or
aas
lret
xor
subb
inc
mov
xor
out
cld
icebp
sbb
mov
mov
xchg
subl
mov
js
jns
inc
push
out
in
ja
jbe
stos
add
decl
sahf
inc
sbb
pop
dec
fstl
addr16
mov
mov
pop
in
adc
xchg
and
push
in
jne
push
and
fisubs
cli
or
add
test
pop
sbb
leave
mov
loopne
sbb
sbb
mov
inc
jl
pop
aaa
sbbb
mov
fldl
out
les
sbb
ss
and
jp
sti
cmp
and
shll
mov
in
pop
pop
xor
mov
push
xchg
test
jle
lds
sbb
mov
arpl
addr16
aad
dec
subb
or
leave
in
and
add
dec
and
ss
repnz
mov
in
mov
fcoml
insb
imul
pop
stc
mov
fwait
decl
or
stos
inc
cmp
push
test
and
lods
mov
add
std
adcl
popa
mov
xor
xchg
dec
mov
lret
in
mov
push
out
jnp
ss
insb
adc
add
jp
inc
inc
call
xchg
dec
popf
sub
sbb
or
jbe
xchg
cmp
lock
mov
mov
and
and
pop
adc
data16
arpl
lahf
pop
fsub
jb
add
jbe
sbb
adc
aam
das
inc
and
enter
pop
aas
xor
and
out
pop
mov
cwtl
or
xorb
clc
jg
stc
xchg
shr
pop
push
xor
in
jl
add
or
jl
mov
cli
shrb
sbb
sbb
or
xchg
ss
mov
scas
xor
lods
daa
divb
movsl
jecxz
cmc
jge
leave
imul
push
and
inc
fbld
stos
mov
cmp
ret
shl
out
lock
push
or
jne
mov
push
add
mov
xchg
mov
sbbl
outsb
cli
clc
cmp
cli
sti
sahf
lret
lret
or
andb
mov
jge
jbe
sarb
mov
xchg
fimuls
add
pop
push
push
and
sub
cmpsl
adc
leave
testl
gs
cmpsl
inc
pusha
pushf
scas
xchg
nop
popa
push
push
cmpsl
push
cs
xchg
adc
ror
bound
lds
lea
jno
xchg
pop
shrb
pushf
lock
loope
push
loop
gs
fildl
ss
adc
push
inc
jne
pushf
xor
push
dec
ljmp
mov
aaa
dec
cmp
int3
fistps
das
stos
fwait
push
fsub
aam
aaa
inc
xor
mov
ja
mov
loop
stos
mov
dec
adc
mov
outsl
inc
mov
push
mov
sub
leave
or
cs
lock
dec
or
adc
pop
cmp
mov
rol
mov
loop
pushfw
inc
cld
add
fdiv
jge
or
dec
push
hlt
cmp
adc
jl
dec
inc
mov
push
or
mov
add
leave
pop
xor
and
xchg
jae
popa
or
pusha
es
sub
dec
sub
shr
repz
xor
or
mov
and
sbb
out
stc
movsb
sub
jb
int3
les
imul
cld
and
aaa
out
pushf
fsub
data16
pop
pop
adc
cmp
inc
mov
ljmp
sbb
std
movsl
xchg
inc
repz
pop
add
lods
sub
into
jbe
test
rcll
mov
cmp
loop
cmpl
and
sub
mov
jbe
adc
cmp
sbb
cmp
imul
pushf
cld
fwait
mov
jl
ja
xor
lcall
mov
lea
les
out
sub
stc
push
shlb
adc
cwtl
out
ja
sbb
js
or
push
sub
movsl
inc
pop
inc
and
popf
push
mov
sbb
movsl
lds
mov
mov
mov
cmp
push
lds
inc
int3
mov
mov
xor
loopne
inc
xchg
mov
and
std
sub
push
fnstcw
imul
punpckhwd
or
push
inc
xchg
stos
ficomps
dec
and
mov
xor
mov
loopne
mov
cmp
add
testb
cmp
lahf
mov
cmp
cmp
and
xchg
cmpsl
leave
jecxz
xchg
popf
cmpsb
jns
push
xor
mov
mov
fsubrl
lock
mov
mov
push
mov
std
xchg
pop
pop
int3
outsb
imul
inc
dec
mov
shrb
cmpsb
dec
call
movsl
mov
test
into
xchg
pop
jl
dec
faddp
lahf
xor
clc
imul
sub
mov
mov
jb
dec
hlt
bound
leave
popa
outsl
and
pop
inc
mov
xchg
mov
outsb
mov
rol
fwait
movsl
int
jmp
pop
push
lds
aaa
pop
dec
enter
cld
stos
test
mov
mov
dec
js
and
inc
jge,pn
xchg
jp
mov
lret
out
add
in
sbb
in
push
shrb
pop
push
xor
mov
adc
repnz
scas
add
pop
shl
mov
in
ja
mov
negl
fcomps
fbld
jp
adc
jge
mov
stos
jnp
insl
cmpl
fwait
and
fisttpll
icebp
push
and
push
ja
je
or
divl
scas
decl
or
jns
and
inc
cld
jp
stos
repnz
push
out
dec
pop
stc
pop
mov
movsl
es
hlt
push
lods
stos
mov
enter
movsl
int
push
and
adcb
loope
jb
cltd
loopne
adc
dec
push
test
xchg
lock
adc
mov
mov
xor
pop
jno
mov
outsb
jecxz
in
cld
xor
repnz
and
mov
pop
stos
les
inc
bound
or
push
add
xor
or
jp
and
push
adc
jmp
out
adc
notl
mov
gs
loopne
sub
inc
pop
scas
lods
out
ror
xchg
inc
cmp
mov
loop
fstpl
mov
lcall
mov
mov
gs
jge
andl
push
or
mov
sub
es
stos
jg
dec
mov
sti
xor
sbb
dec
mov
pop
add
addr16
fnstenv
pop
ljmp
movsb
sub
js
sbb
inc
push
and
in
outsl
mov
dec
fs
push
mov
xor
jecxz
push
or
jae
sub
push
jge
mov
jl
mov
add
mov
les
inc
fsubl
test
add
rcr
xchg
pop
sahf
jnp
push
push
cmp
push
lret
out
and
insl
aad
and
ret
out
jmp
sti
jae
cli
and
jnp
or
inc
divb
mov
test
mov
int
and
mov
and
push
dec
push
aad
fdivrs
jo
pop
pop
cmp
mov
mov
cmp
mov
xchg
imul
jle
test
sub
xor
mov
jp
imul
mov
inc
mov
das
shlb
not
push
inc
jns
adc
jns
mov
sbb
push
std
mov
rorb
sub
idivl
mov
ss
sbb
mov
andb
aam
hlt
vandnps
cltd
xchg
jnp
pushf
and
lret
or
in
and
or
sbb
outsl
xchg
mov
adc
fnsave
or
inc
fcmovnb
bound
add
cmpsl
lods
lcall
das
inc
adc
mov
outsl
and
nop
push
add
aaa
push
fadds
lcall
ds
dec
mov
or
mov
shl
nop
push
pop
add
in
xor
xor
mov
pop
mov
inc
idiv
in
ljmp
lahf
add
insb
dec
xchg
dec
and
fiaddl
jne
in
inc
out
int3
xor
imul
lahf
pop
into
push
rolb
mov
es
das
inc
xor
inc
sub
data16
cmpsl
into
jl
scas
pop
pop
out
jle
daa
stos
xor
sbb
mov
mov
jne
xchg
cmp
in
or
mov
xchg
pop
shl
adc
inc
addr16
adc
repnz
mov
div
cltd
cli
push
fsincos
in
cwtl
in
adc
cwtl
out
pop
push
adc
ds
cs
in
adc
in
dec
int3
daa
mov
and
lock
in
sarb
aad
arpl
sub
sahf
xchg
cld
push
sbb
shll
outsl
jmp
add
dec
int3
sbb
lods
addr16
daa
and
outsb
jmp
ret
push
sbb
stc
jg
mov
add
mov
xor
pop
xor
pushl
and
mov
mov
ds
inc
mov
mov
push
sbb
dec
pop
adc
mov
fsubs
jmp
jno
test
fisubs
mov
iret
sbb
xor
sbb
mov
aaa
sti
in
mov
insb
inc
mov
xchg
cmp
fadds
mov
fnclex
adc
jo
cmp
imulb
sbb
sub
mov
lea
mov
sub
sahf
out
cmp
sti
pop
mov
bound
mov
in
sbb
inc
rorb
loope
dec
xlat
call
sub
cmp
ja
add
mov
mov
jb
pop
call
xor
cmp
xlat
mov
pop
add
mov
and
mov
add
clc
sbb
fs
jge
pop
test
shrl
cltd
inc
mov
jl
sahf
cmp
mov
sub
jnp
push
insl
mov
cmpsl
jns
or
push
jae
je
andb
or
fdivr
jo
fbld
mov
iret
lret
stc
or
push
mov
xor
addr16
sbb
xor
jecxz,pt
movsl
loopne
adc
jg
mov
xchg
stos
xchg
movsb
pop
popf
xchg
push
pop
mov
mov
les
stc
imul
cmpsl
cmp
dec
pop
push
jle
jne
arpl
add
mov
aad
mov
xor
sti
rcll
jg
adc
iret
xchg
fisubrs
test
mov
nop
call
lods
into
out
nop
push
loope
push
dec
jl
mov
cmp
jbe
stos
lret
lods
xor
mov
lds
jb
cmpsl
mov
aas
adcb
and
call
jae
xor
lods
mov
and
jnp
cltd
aaa
xchg
add
ja
loopne
out
cmp
lret
pop
lods
sub
mov
dec
fwait
dec
mov
jo
fsub
clc
add
add
out
fcmovnu
gs
dec
sti
cld
loop
jbe
jno
mov
jno
xor
mov
xchg
mov
aas
jb
dec
fistps
mov
cwtl
xchg
push
popf
mov
fiaddl
scas
repz
movsl
jge
inc
mov
in
aaa
mov
sbb
xor
shr
sbb
mov
jmp
cld
jo
fwait
in
imul
dec
shrb
adc
es
imul
lret
js
movsl
adc
test
pop
push
and
add
mov
push
mov
add
test
sti
mov
dec
and
dec
in
imul
mov
frstor
jp
cld
addr16
in
cmpsl
mov
aam
lods
or
dec
xor
sub
test
hlt
jb
mov
xor
jns
inc
jg
sbb
shll
sti
push
xchg
out
dec
pusha
ret
mov
sub
les
movsl
movsl
dec
loopne
or
mov
addb
mov
and
add
and
stc
das
push
pusha
lods
mov
lea
es
jb
dec
mov
call
lods
in
add
in
outsb
mov
push
int3
fdivl
xor
movsb
fstpl
adc
inc
adc
mov
jns
jmp
push
or
xor
int
add
xor
movsl
mov
jge
lahf
sbb
pop
outsl
fstps
and
push
arpl
pop
dec
push
push
insb
ja
mov
shll
stc
rcrl
repz
cmp
pop
inc
dec
xor
pop
push
loopne
xor
xchg
inc
mov
xor
cmp
cmp
push
sahf
lds
rcr
roll
push
jnp
mov
sub
jmp
add
ffree
shll
pop
cmc
xchg
gs
arpl
enter
pop
dec
rcrb
pop
cli
sbb
cwtl
out
jno
inc
sub
lahf
mov
lock
sub
xor
aaa
xor
sub
xchg
mov
dec
jmp
push
out
inc
or
rol
fdivrl
dec
enter
bound
and
fwait
daa
cmp
inc
aad
xor
xor
lods
add
cld
icebp
out
push
pop
sti
xchg
xchg
or
pop
fdivr
enter
outsl
inc
movsb
call
cmp
fsubrl
mov
rol
in
aaa
add
fs
and
add
add
addr16
stos
in
lock
jg
pop
cmp
xchg
jecxz
stc
in
bound
imul
pusha
cmp
pushf
cmp
out
inc
daa
mov
cltd
mov
fsub
insb
cmpsl
adc
mov
sub
cmpsl
inc
fidivs
cmc
xor
cmpsl
dec
jae
jnp
jbe
mov
lret
cmp
imul
xor
or
add
jg
adc
hlt
movb
xor
mov
jns
repnz
addr16
negl
mov
jne
xor
stos
cld
and
lahf
daa
nop
mov
inc
jmp
ds
jno
or
inc
mov
enter
leave
mov
push
mov
push
dec
jg
clc
jl
scas
lods
aas
aaa
xchg
outsb
nop
imul
shrb
push
dec
mov
out
sarb
jmp
gs
xor
dec
push
imul
addl
test
lahf
mov
add
cs
inc
xchg
xor
fwait
inc
fsub
dec
daa
xchg
dec
cmpl
cmp
clc
and
lds
adc
movsl
movsb
cmp
or
mov
inc
arpl
add
dec
andb
mov
sahf
rcl
pop
inc
push
jno
dec
lea
or
xor
xchg
pop
mov
xchg
mov
cmp
dec
std
shlb
dec
movsl
mov
subl
and
int
dec
jne
repz
xor
leave
adc
in
in
lods
mov
mov
lods
bound
cmpsl
xchg
in
data16
jbe
fdivrs
sbb
push
sbb
gs
stc
or
inc
sbb
jae
movsl
push
aad
mov
dec
sbb
out
lods
xchg
jge
sarl
push
fwait
xchg
jae
push
mov
inc
popa
push
les
push
out
outsb
jnp
call
xchg
clc
dec
nop
jno
shl
push
mov
pop
nop
es
pop
out
inc
jle
xor
sub
fildll
pop
mov
mov
xorl
filds
mov
add
pop
aam
cmp
dec
push
mov
cmp
cmp
lods
cmp
adc
int
mov
fsts
and
push
and
ret
add
rcrb
lretw
lods
repz
jp
lea
shl
mov
stos
inc
or
repz
pop
shrb
nop
js
and
cmpsl
aad
mov
pusha
test
dec
mov
jecxz
or
or
rcrl
push
popa
mov
jl
mov
and
xchg
push
adc
pop
movsl
adc
cli
sub
push
cmc
insl
loop
mov
dec
jne
fs
sbb
jo
nop
lds
imul
stos
push
jb
mov
stc
xchg
jb
mov
push
mov
test
dec
icebp
dec
aas
ja
rcrb
push
inc
sbb
fwait
cs
movsb
stc
jl
sub
mulb
push
addr16
inc
cmp
ret
add
js
push
mov
xor
aam
mov
and
fcomps
and
cmp
and
insb
lock
sbb
push
shl
cmpsb
out
rcl
mov
jecxz
faddl
sub
cmc
pop
mov
mov
gs
xor
iret
out
insb
or
push
jmp
or
and
sbb
idivl
inc
decl
vmovlpd
pop
ss
sub
xchg
ret
push
data16
jno
mov
dec
sti
cmc
jno
cmpsb
mov
sbb
or
or
lret
pop
inc
mov
xor
ljmp
and
inc
cmpsl
daa
xchg
pop
xchg
inc
add
mov
nop
fdivrl
gs
inc
jl
sbbb
hlt
xchg
pop
loop
inc
pop
into
mov
inc
or
cld
sub
stos
cmp
cmp
mov
xchg
dec
push
mov
push
push
mov
neg
and
test
pusha
arpl
hlt
inc
mov
mov
pop
adc
imul
add
sbb
lea
stos
clc
faddp
or
insb
sub
xchg
add
lcall
xchg
loope
add
addr16
fnstsw
enter
sub
xor
mov
sub
repnz
mov
mov
jge
fwait
idiv
leave
pop
repnz
test
or
daa
lret
xchg
cli
movsb
push
aas
enter
sub
mov
outsl
mov
fucom
outsb
mov
inc
add
add
lcall
inc
inc
andl
xor
inc
pop
mov
inc
xchg
frstor
int
mov
dec
hlt
jle
ret
sbb
mov
adcb
in
inc
xor
adc
add
loopne
push
push
mov
xor
fiadds
mov
cmpsl
push
das
cmp
mov
lahf
push
mov
cmp
adc
aam
push
dec
add
xchg
pop
aaa
or
outsl
mov
or
sahf
jnp
je
mov
in
push
or
subb
adc
ret
jl
out
pop
inc
pop
fwait
pop
sub
arpl
js
xchg
mov
pop
push
push
jns
mov
or
cmp
in
mov
das
ret
stos
xchg
xchg
jo
cwtl
mov
and
loopne
push
insl
or
mov
fwait
addb
dec
cli
push
inc
lcall
inc
sub
pop
jae
cmp
pop
adc
imul
jp
lods
jge
inc
push
cmpsl
xor
js
ret
int3
ds
and
or
cs
push
adc
mov
popf
bound
cld
sbb
lods
sbb
jns
ds
mov
shlb
push
shl
push
and
adc
clc
dec
cltd
das
popa
movsb
out
xchg
mov
aad
inc
test
test
xchg
add
repz
rolb
or
mov
fimuls
ss
cld
in
xor
mov
cmpsb
cwtl
xor
dec
movsl
rolb
xchg
stc
cmp
fmuls
pop
lahf
and
mov
add
pushf
adc
or
mov
pop
mov
jl
mov
cli
mov
inc
repnz
xor
lods
cmp
push
add
dec
push
mov
ficompl
pop
sub
outsb
les
push
in
insl
popf
icebp
xor
mov
leave
pushf
cwtl
fldpi
ret
push
add
rolb
test
dec
cld
ds
mov
xchg
insb
ljmp
cltd
jecxz
ss
xchg
sarb
sbb
ljmp
jmp
push
jo
sub
or
shl
xchg
mov
data16
jmp
jo
rcrb
movsl
push
or
adc
div
outsb
dec
mov
enter
test
mov
mov
push
addr16
fwait
mov
cmpsb
test
jp
movsl
sub
ss
orb
bound
loop
pop
cld
mov
xlat
data16
or
nop
cld
add
add
push
cmp
repz
jno
push
imul
lret
rclb
cmp
xor
cli
xchg
adc
lods
xchg
repnz
into
movsb
xchg
cmpsb
in
lret
sbb
mov
test
mov
xor
mov
pop
lds
xchg
mov
dec
movsl
push
lret
sub
out
fimull
cmp
pop
sbb
sub
in
dec
outsl
add
scas
or
leave
stc
dec
std
and
fildll
lcall
xchg
push
adc
lcall
adc
ffreep
addr16
cmpsb
jbe
gs
add
sub
test
lcall
cwtl
and
xchg
push
or
in
mov
popa
adc
and
cltd
or
es
jge
jle
xchg
pushl
mull
xchg
ret
notb
pusha
or
mov
arpl
cmp
ret
mov
arpl
sub
sbb
test
mov
push
ljmp
mov
sub
in
adc
repz
rcrb
fiadds
pop
fcoms
pop
add
pop
in
xor
mov
push
mov
negb
nop
sub
repnz
add
inc
sbb
icebp
pop
mov
hlt
push
inc
icebp
lahf
or
pop
jne
mov
divl
xchg
jg
imul
fistpl
inc
dec
push
push
sbb
andb
fisubl
cmp
clc
scas
push
cmp
cmp
mov
adc
mov
mulb
cwtl
ffree
mov
mov
xchg
mov
cmp
fiaddl
out
sbb
iret
or
hlt
push
outsl
rcrb
fsub
sbb
stos
dec
jns
adc
adc
imul
sbb
push
xchg
iret
daa
dec
add
std
or
test
lods
jg
mov
or
push
js
inc
dec
fs
out
xor
xor
mov
arpl
pop
sarb
pop
sbb
ja
aas
arpl
sub
mov
push
sbb
push
int3
or
push
push
out
cltd
mov
jae
push
add
mov
or
pop
pop
clc
push
push
inc
lods
pop
shlb
jbe
je
test
pop
outsl
jbe
xchg
or
sti
ja
mov
push
test
mov
cmp
push
dec
cmp
stos
cmp
movsb
push
repnz
sbb
push
pop
inc
mov
and
xchg
lret
cmpsl
loopne
and
stos
mov
int3
int
pop
insb
cli
out
add
mov
mov
cmp
cmc
mov
sub
mov
pop
lock
jmp
dec
into
ret
fldenv
subl
std
dec
mov
scas
lahf
mov
mov
mov
inc
popa
xchg
setl
mov
dec
jp
stos
js
push
cmp
and
stos
add
inc
sub
imul
jmp
cmp
pusha
fcoml
mov
add
push
xor
dec
popa
lock
loopne
fdivr
fwait
add
lret
orl
lret
dec
and
shll
cmpl
adcl
jge
sub
lods
adc
shrl
into
jns
mov
shr
dec
jo
call
or
inc
jmp
cli
fsubl
jle
pop
inc
xchg
test
mov
and
aad
arpl
movsl
outsl
pop
loopne
pop
ret
jbe
je
cmovp
into
mov
adc
xor
inc
pop
test
aad
mov
scas
cmpsb
jge
jle
mov
push
ljmp
fists
addr16
or
sbb
mov
loope
test
outsl
lock
aas
add
xchg
adcb
insl
cmpsl
fidivrs
mov
push
cltd
fwait
lahf
std
mov
jle
xor
jae
call
fimull
icebp
inc
jmp
sub
jo
xchg
popf
shl
xor
jecxz,pt
bound
add
addr16
or
repz
out
fsubrl
inc
or
adc
jnp
cs
cmp
call
daa
dec
data16
das
in
aad
lret
xchg
fwait
mov
js
or
mov
cmpsl
lds
fcoms
cmpsb
sbb
xchg
imul
xchg
cmp
adc
sub
aas
aaa
inc
clc
clc
scas
xor
adc
adc
pop
decl
aad
stc
xor
test
repnz
dec
jl
jae
add
mov
mov
and
fmulp
xor
or
pop
into
ja
dec
data16
jne
in
adc
cmp
fwait
jb
xchg
sub
adc
insb
mov
nop
sub
shrb
or
push
sbbb
cmpsl
inc
sbb
add
adc
or
pop
in
push
jl
cmp
xor
or
nop
scas
or
ret
cmp
or
in
mov
mov
jns
repnz
insl
inc
nop
jl
mov
es
fildl
ljmp
jl
mov
data16
and
fidivl
stos
into
mov
inc
and
mov
jns
mov
add
outsl
xchg
cmc
icebp
push
ljmp
std
mov
or
jecxz
lods
std
xor
cltd
pushl
inc
ljmp
mov
adc
clc
sub
mov
mov
inc
xchg
and
ds
pop
fcomip
jle
js
or
lcall
cltd
sub
mov
sub
xchg
test
addr16
js
dec
xchg
inc
std
lcall
mov
cmp
dec
shrl
add
and
and
ficompl
or
arpl
lret
mov
imul
push
xor
shl
sbb
das
call
sub
adc
push
adc
addr16
xchg
dec
scas
pop
ficomps
sbb
mov
xchg
add
push
out
adc
in
ret
cmp
test
cmpb
mov
nop
jo
jns
lods
sbb
inc
lods
cltd
das
pop
mov
pusha
negl
je
icebp
push
and
mov
pop
and
sahf
cld
iret
nop
pop
sti
jecxz
xchg
dec
pop
pop
addr16
insb
leave
negb
add
mov
dec
pop
test
mov
mov
jae
insb
test
pop
stc
inc
xchg
addr16
pop
andl
ret
dec
lock
push
scas
pop
outsl
fisubrl
or
rclb
aas
hlt
xor
lods
xor
aaa
les
xchg
in
fsubl
mov
rcll
faddl
cmp
pop
movsb
dec
jmp
mov
inc
and
fidivrs
rcl
loop
addr16
xchg
or
xor
lock
xchg
pop
loopne
fsubrs
jae
jge
cmp
sbb
dec
loop
push
lea
loope
push
add
sarb
sahf
data16
jb
std
push
add
cmp
jmp
pop
pop
xchg
adc
jo
jno
cmp
sub
outsl
out
add
push
lret
mov
jl
jnp
pop
xchg
cltd
mov
outsb
loope
mov
popa
jns
fstp
inc
cwtl
clc
in
sbb
cmpsl
js
std
sbb
xor
test
jb
and
out
mov
xor
dec
sti
xchg
cltd
ds
mov
aam
test
xor
push
push
out
xchg
pushf
insl
lahf
lods
outsl
jmp
popa
cmp
dec
xchg
and
xchg
mov
lods
mov
stc
ljmp
popf
pop
add
rcrl
lock
in
cmp
pop
or
testb
stos
fsubrs
add
mov
sahf
pop
incb
cmc
stos
sub
jnp
loopne
pop
out
mov
xor
and
add
adc
pop
aam
xcrypt-ofb
cmpsl
bound
or
push
shrb
dec
repnz
sub
incb
aas
lret
out
inc
push
xchg
fidivrl
inc
pop
pop
inc
jnp
and
imul
and
loopne
aas
hlt
adc
cs
out
out
out
cmpsb
push
pop
test
fnstcw
mov
decb
hlt
fisubs
movsb
xchg
push
fs
aad
xor
mov
nop
movsb
nop
outsb
inc
mov
nop
int
sub
mov
jecxz
enter
notb
inc
mov
inc
cwtl
pop
in
les
sub
or
cmp
enter
je
fnsave
scas
cmpsb
pushf
mov
in
movsl
imulb
arpl
xchg
mov
mov
add
scas
mov
rolb
xchg
pop
shll
out
jmp
push
push
dec
pop
insl
mov
xchg
adc
pop
push
fldln2
fistpl
mov
xchg
jmp
ret
mov
xchg
roll
dec
inc
nop
loope
gs
fdivrl
outsl
fcoms
xrstor
ds
hlt
xchg
stc
sub
mov
in
push
pushf
repnz
ja
fwait
pop
aaa
call
jle
cmc
mov
sbb
push
sbb
popa
test
and
sub
je
cld
dec
mov
pop
pop
or
or
xchg
pop
mov
xor
xchg
hlt
dec
in
xchg
cmpsb
xchg
ss
pop
aaa
icebp
das
arpl
fimuls
mov
ss
jge
in
or
aaa
mov
arpl
mov
mov
push
nop
mov
insb
adc
popa
mov
mov
xchg
fistpl
add
or
cmp
mov
nop
fcoml
cmpl
fsubs
sbb
push
repz
daa
sub
xor
ds
movsl
dec
push
lretw
and
pop
push
dec
pop
jae
or
insl
std
sbb
jmp
lods
hlt
adc
les
mov
dec
ss
test
xor
jb
cmp
repz
add
in
pop
or
sti
fnstsw
sbbl
fstl
lret
push
idivb
mov
sbb
xchg
add
xor
or
mov
test
rcrl
adc
arpl
and
dec
xor
icebp
xchg
lahf
pop
mov
insb
push
mov
xchg
xchg
sbb
dec
or
addr16
lret
xor
fldz
addr16
lock
in
mov
cmc
xchg
cltd
cmpb
movsb
xor
inc
shlb
mov
sub
sbb
jo
cmpsb
xor
push
movsb
imul
fidivrs
xlat
xor
jae
and
and
call
mov
sbb
inc
and
inc
fcomip
in
push
inc
mov
lds
fldt
sub
faddp
pushf
push
cmp
aam
or
out
cmp
je
push
or
aaa
and
adc
iret
mov
leave
and
dec
mov
outsl
sbb
mov
aas
shlb
in
daa
jmp
pop
mov
scas
cmpb
inc
das
xor
xchg
adc
cmp
inc
pop
les
fstps
leave
enter
and
sahf
nop
jg
sbb
push
and
mov
cltd
jb
pop
mov
out
stc
and
iret
cwtl
mov
mov
sbb
popf
lock
in
rcrb
adc
imul
adc
jae
sti
testl
jmp
es
mov
push
outsl
fcomps
std
sub
clc
mov
ret
dec
pop
movsl
mov
mov
xor
mov
sbb
ss
adc
or
les
and
add
nop
loope
mov
fnstsw
mov
int3
mov
jo
mov
mov
test
enter
pop
pop
movsl
imul
rolb
sub
add
lods
jno
scas
mov
jne
or
or
movsl
cltd
popa
cmpl
vmwrite
mov
movsb
out
and
in
int
pop
jns
loope
push
shrb
je
lea
mov
pop
cmp
adc
sbb
mov
test
cwtl
mov
mov
mov
pop
es
mov
fdivrp
pop
xchg
in
jo
es
push
sbb
inc
repz
bound
in
and
jb
push
incb
popf
push
jno
mov
into
movsl
jmp
loope
cmp
rcll
scas
mov
xor
mov
mov
mov
lods
add
icebp
xchg
and
mov
dec
dec
add
xor
int3
or
and
into
das
int3
pop
movsl
push
dec
mov
jmp
test
sarl
cmp
out
adc
cmp
stos
lods
add
jge
xchg
insl
or
les
xor
mov
sbb
push
sub
push
dec
adcb
adc
dec
jp
and
jnp
xchg
xor
mov
mov
sbb
push
dec
dec
mov
lret
fcmovnb
idivb
insl
fcompl
mov
xor
or
cmp
add
jp
mov
loopne
add
outsb
and
fsubl
lret
inc
jne
js
mov
and
push
insb
mov
jecxz
in
push
popa
jecxz
mov
inc
push
adc
pop
adc
pop
xchg
divb
or
add
aad
cltd
adc
icebp
ss
and
mov
gs
std
lds
mov
mov
mov
movsl
insb
call
ds
or
mov
xorl
idivl
cmpsb
adc
orb
xchg
lcall
xchg
cs
mov
ja
inc
in
rclb
mov
mov
adc
lahf
js
mov
addr16
out
mov
inc
and
out
push
test
adc
and
out
stc
sub
in
insl
xor
aaa
pop
repz
or
loope
push
sub
pop
xor
aam
xlat
xor
bound
mov
das
fmuls
xor
push
xor
mov
call
fisubl
fisubrl
adc
and
inc
push
fimull
jo
out
in
xchg
sub
mov
fisttpl
test
movsl
movsl
sti
lahf
les
aad
sub
cmc
cltd
push
out
mov
jg
xchg
pop
out
es
add
jp
pop
std
jmp
stos
dec
test
pop
inc
in
push
xchg
loope
push
jbe
in
adc
dec
into
lock
push
ds
push
add
dec
mov
bound
sbb
iret
fdivrs
push
mov
jns
mov
rol
movsb
xor
cmp
adc
call
dec
outsl
lods
out
test
bound
ja
inc
lock
dec
not
outsb
mull
push
test
stc
mov
sub
push
enter
cmp
sbb
popf
fsubrs
and
mov
dec
bound
xchg
adc
aas
xchg
mov
fwait
jne
cwtl
mov
jo
mov
cs
cltd
data16
stos
pop
add
lock
sub
movsb
stos
pop
daa
aad
jb
mov
idivl
sub
xor
lahf
dec
orl
xchg
int
arpl
psrlq
pop
add
loope
cmc
lods
sbb
jb
jp
push
in
jno
xchg
mov
jnp
shl
rcrl
jmp
xchg
jne
push
sbb
cmp
fcmovnbe
pop
cld
fidivrs
inc
ds
and
xchg
fs
and
testb
ljmp
fucomi
js
lods
mov
add
add
sub
loopne
or
ljmp
inc
mov
dec
insb
sbb
add
es
je
pop
xor
adc
adc
push
cmp
fwait
ja
jmp
sti
in
loope
pop
aad
repz
mov
pop
xacquire
repz
xchg
cmpsl
jp
adc
inc
in
sbb
xchg
sub
dec
mov
mov
lods
push
cmp
sbb
addl
xor
sbb
sub
adc
jnp
ja
add
dec
push
pop
out
loop
push
cmpl
or
in
push
stc
xor
or
pop
cmp
sbb
xlat
orb
test
jmp
cli
mov
dec
mov
jge
xor
popa
lock
das
leave
dec
enter
add
dec
dec
out
dec
enter
stos
mov
dec
orb
rolb
movsl
roll
icebp
adc
icebp
korw
dec
mov
xchg
lods
sub
mov
aas
es
scas
or
ficomps
ret
lcall
loop
and
push
mov
movsl
push
ret
dec
and
sbb
pop
jmp
imul
cli
pop
push
mov
sub
cmp
sub
loopne
ja
mov
pop
mov
push
pop
push
mov
insl
ja
jl
xchg
popa
cs
cmc
and
xchg
es
push
popf
pushl
shrl
xor
inc
orb
xor
sahf
sbb
sbb
xchg
and
xlat
sub
sbb
mov
in
mov
sbb
push
mov
sub
leave
push
sbb
mov
sub
cmp
scas
inc
cld
mov
lret
mov
sub
xchg
push
mov
jp
push
push
lea
lds
pop
cmc
repz
cmpsb
adc
jnp
jns
clc
sbbb
out
pop
xchg
rorb
pushl
loopne
in
add
out
ljmp
adc
int
inc
mov
mov
out
xchg
push
mov
repnz
roll
or
and
daa
pop
or
fwait
jb
xor
mov
movsl
pusha
jle
pop
pop
xchg
filds
jg
sbb
pop
add
dec
jne
jg
cmp
sbb
adc
push
sbb
mov
pop
adc
adc
add
jge
push
push
cmc
and
mov
mov
scas
mov
sbb
adc
sbb
outsb
aaa
fldl
addr16
loopne
jg
shll
cmpsb
in
inc
sub
cs
test
sub
add
bound
lods
aad
js
add
insl
dec
std
out
into
dec
or
adc
cmp
jl
imul
fs
xor
pop
jle
add
xor
jge
xor
pop
cs
jae
loope
cmpsb
loope
inc
stos
scas
lods
lods
and
orl
pop
mov
mov
mov
xlat
inc
xchg
cmp
sub
sbb
ja
mov
ja
or
xchg
jl
cmp
sub
mov
or
dec
adc
add
dec
cltd
shr
stc
mov
clc
pop
push
movsl
push
lret
in
adc
shlb
push
mov
xor
icebp
stos
xor
in
add
ja
mov
add
mov
jns
mov
jmp
sahf
testl
cmp
jg
inc
xlat
testb
adc
xor
insl
xlat
mov
xor
add
xchg
ret
add
mov
movsb
nop
xor
adc
int3
sahf
sub
mov
les
andl
popf
into
add
xchg
test
jb
aas
daa
bound
loope
or
jmp
xor
jne
adc
and
outsl
and
sub
bound
sbb
add
clc
iret
repz
or
shlb
push
jmp
cmp
imul
ror
push
loope
stos
stos
cmc
push
xchg
ret
dec
fnsave
stos
fbstp
lea
or
stos
loope
mov
sahf
inc
rorb
xor
mov
popa
jb
mov
add
mov
adc
or
or
loope
bound
outsb
les
addr16
and
rcr
mov
and
pop
shlb
enter
add
test
mov
fcompl
testb
sub
aam
xchg
ss
scas
jg
in
cwtl
aaa
fxch
les
push
sbb
cmp
inc
add
hlt
mov
fildl
cmp
xlat
imul
sbb
lcall
or
jmp
out
aaa
cmp
test
jecxz
xor
jmp
fucomi
mov
rol
mov
cmpsl
addr16
outsl
jbe
jg
and
sub
je
cld
movsb
stos
jnp
mov
repnz
push
out
int3
les
mov
data16
cmp
jge
push
mov
xchg
js
mov
cltd
fs
imul
fbstp
mov
stos
out
gs
mov
insl
xor
add
add
pop
fsubrs
jg
jo
adc
sbb
pop
jbe
nop
divb
lods
dec
jne
sub
movsl
xchg
sbbl
dec
xlat
aaa
rol
cltd
mov
inc
jge
outsl
in
scas
cmpsl
psubb
scas
adc
sbb
jns
push
cmp
ret
or
jecxz
push
dec
loop
xor
dec
cmpsl
pusha
mov
fldcw
hlt
shlb
lret
or
hlt
hlt
and
pusha
push
imul
add
fiaddl
mov
es
and
adc
mov
stos
dec
mov
mov
fists
pop
imul
jae
out
mov
xchg
mov
shrb
push
insb
jno
arpl
scas
lret
push
mov
push
clc
test
sarb
aam
cwtl
jmp
test
sbb
js
aaa
mov
clc
adc
int3
mov
shl
xor
shrl
fcmovnu
cmpsb
mov
cwtl
mov
sbb
ret
sub
cli
lds
cmc
and
insl
jge
fldenv
cmp
clc
xchg
sbb
adc
jo
jns
xchg
shr
cmp
test
leave
xchg
dec
dec
inc
pop
pushf
sbb
scas
arpl
je
inc
sub
sub
pop
out
call
lcall
nop
call
dec
popa
xchg
mov
sbb
adc
in
dec
imul
mov
jmp
fmull
fldcw
movsb
sub
cwtl
sbb
mov
aam
bound
sti
pop
ret
and
mov
test
pop
xor
sbb
mov
mov
sbb
mov
sbb
sub
aaa
xchg
aaa
repz
push
xor
sarb
dec
outsb
inc
xchg
and
dec
jl
sahf
sub
in
data16
daa
mov
lds
cld
lret
xor
jg
dec
jg
cmp
outsb
ja
add
xchg
dec
stos
fdiv
std
cwtl
mov
inc
push
cltd
andl
subl
mov
sti
fiadds
icebp
movsb
iret
inc
xchg
jmp
test
lret
lret
divb
mov
ja
cmp
int
jecxz
loopne
push
jmp
and
sbb
cmp
test
mov
idivl
xchg
sub
test
and
je
add
jbe
push
repnz
mov
mov
push
fildll
mov
xor
shr
sbb
cli
and
lret
fucomip
dec
sti
jbe
daa
adc
cmp
iret
das
jnp
stc
test
enter
mov
xchg
in
mov
sbb
shll
jp
pop
mov
rcrl
leave
xchg
nop
jmp
lea
mov
stos
cmpsl
sbb
mov
arpl
mov
jmp
xor
xorb
aas
cli
xor
sub
out
jmp
or
jmp
rcrl
roll
cmp
sbb
fidivrs
dec
cmp
jnp
mov
mov
adc
push
stos
push
mov
call
jge
xchg
fs
out
mov
xchg
mov
pop
decb
and
push
sub
xchg
daa
and
test
into
fdivl
push
repnz
push
mov
add
fwait
inc
sub
addb
and
xchg
xchg
sahf
dec
sub
push
add
imul
xchg
loopne
xchg
xchg
fs
addl
lods
push
ds
add
inc
mov
cltd
test
in
push
dec
repz
and
out
jno
cmp
in
jnp
push
pop
adc
xchg
pusha
xor
sahf
leave
or
cs
cltd
test
es
jae
das
mov
inc
nop
ds
xor
test
pop
push
icebp
int3
inc
xchg
lret
and
mov
dec
shrb
adc
int
add
cvtdq2ps
or
loopne
testb
test
ljmp
xchg
sarl
and
cmp
js
jmp
scas
outsb
ljmp
pushf
sub
jno
outsl
cmc
push
std
xchg
test
ret
loope
mov
imul
pop
add
outsb
gs
xchg
mov
push
jo
sahf
sbb
lds
into
dec
or
push
push
les
inc
fldcw
jo
in
lock
pop
sub
mov
mov
shlb
imul
dec
ret
mov
cmpsb
mov
push
xchg
mov
lea
dec
mov
push
lea
icebp
mov
dec
lret
mov
mov
xchg
fwait
scas
ja
push
push
push
gs
hlt
test
jg
cmp
xchg
dec
into
loope
adc
fimull
add
aam
out
and
mov
mov
lcall
dec
popf
jle
and
jnp
xor
cld
mov
movsl
popf
rcll
mov
xchg
push
or
add
cmpsl
cmpsb
cmpsb
dec
movsl
xor
rcrb
add
pop
movsb
xor
sub
lcall
dec
sti
addl
xor
jge
je
mov
push
lods
mov
push
mov
and
sub
mov
jae
mov
lods
mov
push
cmp
xlat
popa
pop
cmp
mov
rorb
lret
jno
jmp
and
mov
ja
das
pop
mov
mov
lods
adc
lds
pop
pop
pop
xor
movsl
inc
xor
jge
pop
lahf
neg
js
jl
jbe
push
addl
lahf
mov
cmc
bound
or
add
or
push
jbe
mov
les
cmpsl
lcall
pop
aaa
test
and
je
inc
xchg
imul
cs
pop
sbb
repz
sbb
mov
push
neg
in
pop
in
shrl
jge
and
dec
negb
hlt
popa
ds
inc
popf
cmpl
lret
movsl
push
dec
push
dec
mov
out
xchg
cmp
add
aaa
notl
popf
jge
xor
fidivs
or
pop
outsl
popa
mov
xchg
inc
faddl
inc
sahf
ss
xor
inc
scas
xchg
mov
mov
lock
jns
pop
add
mov
aam
je
stos
lcall
dec
inc
mov
sub
adc
mov
mov
shl
or
in
scas
or
rorl
popf
xchg
leave
insl
mov
xchg
xchg
lock
mov
sub
sbb
add
jbe
sbb
pop
adc
js
subl
push
je
imul
cmp
fwait
lcall
pop
aad
mov
stc
mov
jo
cli
mov
jb
popa
stc
and
mov
xchg
push
lea
inc
out
adc
fs
push
lahf
rclb
sarb
nop
lret
data16
xchg
aad
bound
js
js
test
mov
jecxz
dec
cmp
test
sti
dec
adc
xor
pop
out
sbb
push
cmp
push
hlt
sub
jmp
sbb
ret
jno
sbb
lds
or
jg
gs
jbe
jno
out
cwtl
inc
cmpsl
xor
sub
mov
cmp
fisubl
push
sbb
push
test
or
roll
scas
xor
daa
aas
lock
outsl
pop
xchg
out
mov
and
xchg
fcmovnb
pop
xchg
push
pop
push
ja
fisttps
mov
xchg
gs
dec
fst
xor
push
clc
xchg
jne
ret
mov
mov
notl
cli
push
push
xchg
fidivs
xchg
jne
cmpsl
test
cwtl
mov
lret
sub
aaa
test
cmp
lock
xor
dec
cmp
sbb
add
inc
es
fildl
rep
fistpll
sub
mov
aaa
cwtl
and
shlb
fnstenv
push
stc
and
cmp
dec
push
mov
pop
movsl
cld
xchg
xor
and
iret
xor
stc
dec
xchg
cmp
ficomps
pop
push
repz
sbb
stos
subb
fisubrl
mov
sub
adc
push
ja
or
inc
stos
jnp
gs
in
movsb
repnz
jp
mov
mov
lahf
xchg
and
adc
jle
mov
mov
lods
add
test
movsl
imul
in
add
sub
dec
push
loop
xor
fcoms
loop
lods
jge
jo
jp
push
xor
mov
fxch
xchg
in
ja
jp
mov
test
andl
sub
mov
jne
in
lret
jmp
pop
push
adc
xor
lds
inc
add
xor
mov
fnstsw
shl
and
test
mov
iret
mov
mov
cmp
rep
add
xchg
pusha
xorb
inc
push
gs
add
add
inc
push
add
roll
fwait
repz
movsl
icebp
lock
dec
and
inc
imul
mov
push
add
xor
loop
daa
and
cs
das
hlt
cmpsb
ret
jecxz
lods
test
insb
mov
nop
std
mov
xchg
dec
sub
mov
mov
and
mov
stos
inc
add
pop
xor
push
cmp
xchg
jl
cmp
decl
jp
sahf
cmp
rolb
add
ljmp
sub
and
dec
cmp
hlt
lea
lods
lods
iret
pop
iret
lret
push
xor
adc
mov
fildll
adc
int
mov
leave
push
loopne
inc
movsl
outsl
lods
and
sub
adc
sbb
lods
sahf
scas
or
or
test
lcall
decb
scas
fimuls
jmp
push
fldenv
in
sbb
mov
ds
shrl
mov
fidivs
hlt
addr16
mov
cmp
mov
sahf
ret
add
shlb
pop
pop
pop
jns
sub
add
cli
and
shlb
push
sbb
and
movsl
and
fimuls
jp
and
and
xchg
fwait
mov
pop
faddp
mov
pop
pop
bound
cmpsb
push
pop
int3
int3
test
test
jmp
fnsave
jle
jmp
icebp
aaa
or
negl
mov
andb
add
or
push
fsubrl
mov
loope
push
stos
push
jbe
daa
xlat
ret
test
and
xlat
repnz
loope
push
lea
sbb
jp
test
or
mov
and
adc
pop
lcall
arpl
mov
rorb
ss
stos
fnstcw
xor
mov
mov
push
pop
arpl
inc
scas
jo
add
out
jmp
xlat
imul
and
cmp
and
sbb
xchg
adc
nop
mov
dec
sbb
mov
int3
cmpsl
sar
mov
push
nop
aas
daa
cmpsl
xorl
adc
xlat
mov
data16
ret
push
inc
mov
test
mov
cltd
push
out
push
or
test
sbb
stc
ret
popa
repnz
int3
ja
inc
xlat
mov
cs
mov
jae
xor
push
or
imul
mov
sbb
arpl
dec
jns
or
cmpsb
adc
push
push
mov
xor
and
ja
loope
lds
jp
sbb
fs
mov
jmp
aaa
xorl
jmp
inc
jbe
xchg
inc
xor
shl
cmp
push
lea
mov
clc
das
add
mov
icebp
push
push
arpl
sbb
sahf
std
outsl
andb
icebp
in
out
dec
ret
or
jno
lcall
mov
sub
or
sarb
dec
imul
sub
es
add
lea
stos
idivb
push
repnz
pop
dec
inc
jmp
inc
add
fisubl
shl
lods
inc
jnp
mov
nop
dec
mov
cmp
xchg
bound
mov
xchg
push
and
test
scas
cmpsl
mov
mov
repz
adcl
or
mov
lods
mov
push
and
pand
enter
leave
jno
addr16
xlat
jmp
add
mov
sbbl
sbb
or
cld
dec
hlt
cld
int
jo
add
add
sub
pushf
mov
xor
inc
fwait
sti
add
mov
cmc
mov
loop
pop
mov
inc
outsb
adc
lret
pop
xor
in
loop
lods
ja
shlb
sub
insl
add
pop
lods
hlt
lea
xchg
outsb
jae
test
push
mov
mov
test
loope
in
mov
sub
outsl
cs
sub
add
dec
sub
test
jbe
rolb
fsubrs
int
lret
test
push
add
lea
push
dec
shlb
rolb
adc
mov
repnz
icebp
dec
adc
and
mov
out
call
push
push
add
inc
jns
mov
jle
js
ja
idiv
xchg
push
fbld
inc
pop
sbb
and
jae
mov
pop
je
add
jno
xchg
movsb
cmpsb
cmc
jge
dec
mov
hlt
mov
fisttps
or
outsl
inc
push
xor
mov
pop
jecxz
popa
incl
sub
push
addr16
es
das
add
cmpsl
test
mov
fs
dec
jle
hlt
stos
stos
xor
rorl
lret
iret
and
xchg
jle
push
dec
mov
jecxz
adc
out
fiadds
add
jge
inc
movb
xchg
jns
in
xchg
jne
push
scas
sarb
mov
std
mov
lret
lret
in
jmp
daa
sub
pop
aaa
testb
loop
cmc
cltd
xchg
int3
mov
ror
pop
sbb
and
loop
sub
mov
xchg
cmp
mov
mov
sub
jg
divb
adc
mov
jl
sbb
ljmp
lods
jmp
sbb
ss
cli
jle
lods
outsb
jg
adc
push
xchg
test
movsl
lret
xchg
cmpsb
enter
xor
pop
clc
aas
sbb
adc
notl
ljmp
hlt
sub
or
add
lock
inc
mov
dec
bound
push
xor
icebp
ljmp
nop
mov
jnp
insb
dec
sbbl
mov
lret
adc
add
mov
cmc
je
adc
inc
subb
mov
stos
cli
andl
lods
pop
mov
push
cmp
sbb
pop
cmc
imul
sti
test
movsl
push
flds
lret
and
es
cmp
mov
int3
pushf
imul
daa
iret
xchg
jno
movsl
lea
leave
cli
stos
sbb
mov
xor
jmp
loop
mov
movsb
outsl
mov
jne
iret
xor
sti
inc
mov
hlt
and
outsl
pop
mov
dec
jg
int3
mov
jo
inc
and
lock
mov
aam
push
movsl
push
cmp
pop
pop
mov
incb
sbb
sub
xchg
xchg
jno
xor
lss
adc
mov
pop
pop
pop
pop
cmp
jg
stos
jg
pop
divl
mov
mov
shlb
sub
fs
mov
and
orl
pand
stc
pop
add
jl
mov
loop
cwtl
fwait
cmp
fwait
je
ss
lcall
and
lahf
insl
mov
int3
int3
ljmp
repnz
mov
sub
push
fisttpll
insl
or
mov
push
or
filds
sub
xor
hlt
jo
arpl
lret
icebp
adc
inc
mov
in
imul
lods
jle
push
cmp
orb
dec
daa
subl
mov
jg
inc
mov
fnsave
sbb
mov
mov
cmp
lods
mov
dec
into
xchg
sub
lahf
pop
xor
mov
or
cmp
out
and
loopne
push
sahf
sbb
sub
ret
iret
mov
sti
xor
cwtl
mov
clc
scas
jg
push
mov
loop
rorl
inc
fsubs
cltd
mov
xor
scas
in
inc
inc
mov
cmc
test
or
dec
scas
sbbl
ja
inc
pop
shrl
sub
xchg
dec
inc
sub
push
mov
sbb
jle
jne
mov
fimuls
cmp
icebp
push
dec
sub
dec
mov
xchg
push
loopne
lcall
pop
push
xchg
andl
inc
les
leave
jle
or
cs
mov
mov
and
loope
dec
dec
adc
movsb
std
or
dec
lret
mov
add
mov
cmpsl
sub
pop
pop
jnp
add
mov
lods
or
lods
pop
jnp
pop
ret
scas
dec
js
jecxz
subl
pop
sbb
xor
mov
je
sbb
adc
pushf
mov
stos
inc
mov
scas
arpl
sbb
and
int3
cmp
subb
subb
aaa
rorl
leave
jg
adc
das
push
jbe
pop
std
mov
in
hlt
or
push
inc
cmp
xchg
cwtd
pusha
les
dec
cmp
add
and
sbb
or
inc
addr16
cmpsl
repnz
out
inc
push
std
or
xchg
lods
jne
orl
xchg
dec
notl
xor
sub
test
sbbb
out
lcall
xor
jo
out
jmp
aad
cmp
hlt
push
aas
jmp
sbb
add
imul
dec
sub
push
shlb
pop
sub
dec
fcoml
cli
mov
xchg
lods
jle
and
in
xchg
cmp
out
andb
or
fbstp
aad
ret
push
loopne
and
xlat
mov
xchg
mov
adc
iret
loop
js
mov
imul
int3
testb
cltd
sbb
outsb
mov
jo
add
enter
mov
call
fcomp
add
dec
mov
int
xlat
push
and
or
xchg
inc
pop
push
adc
mov
testb
loopne
dec
mov
and
sub
fimull
nop
and
pop
vmovhps
fldt
xchg
xchg
xor
sahf
test
stos
lods
push
mov
inc
or
lahf
xor
leave
xchg
stos
sub
xchg
dec
imul
mov
and
push
mov
dec
dec
fcomps
ja
sbb
push
sbb
mov
mov
aaa
out
push
repnz
xchg
mov
add
mov
sub
push
mov
mov
incl
sbb
ljmp
movsl
dec
or
and
outsb
iret
icebp
or
or
out
jge
clc
mov
lret
pop
inc
mov
enter
cmpb
lret
or
loope
out
dec
inc
adc
jmp
xchg
data16
jae
fwait
in
push
or
adc
push
inc
cli
iret
ljmp
dec
dec
in
pop
les
mov
cwtl
call
jmp
push
mov
and
in
fistl
shrl
in
mov
shlb
mov
loop,pn
ret
out
test
std
cmovns
mov
dec
adcb
cld
dec
xor
or
push
inc
mov
jge
rorl
lahf
ja
pop
js
or
fst
fwait
cmp
dec
sbb
aad
lods
cwtl
xlat
pusha
dec
loopne
or
adc
fistpl
out
popa
mov
add
mov
rsm
arpl
mov
and
popf
cmp
cmp
shrb
push
xor
sarb
xor
push
mov
testb
pop
subl
pop
roll
sub
add
das
dec
repnz
int3
test
inc
jecxz
push
out
daa
sbb
adc
es
push
insb
push
inc
adcb
repz
into
popf
mov
sbb
cmpsb
fidivs
test
jno
sti
sub
pop
sahf
jmp
inc
fsubrs
xchg
jge
mov
cmpsl
mov
add
imul
aas
fdivrl
ljmp
add
sahf
xchg
inc
and
ja
push
cld
mov
fcoms
jmp
decl
loopne
push
sarl
cltd
icebp
imulb
and
and
adc
mov
and
xchg
sbb
cmp
jb
cmp
gs
ja
or
les
out
aaa
cmp
inc
pop
dec
pop
andl
inc
inc
sbb
cmpsl
xchg
test
jp
cmp
cmp
mov
xlat
jecxz
aaa
repnz
xor
insb
xchg
cmpsb
popa
loopne
adc
in
addl
repz
add
lods
insl
out
and
cs
sub
xchg
sbb
cmp
push
dec
inc
mov
jo
ret
or
adc
adc
cwtl
sahf
lds
scas
jl
cmpsl
inc
sahf
sub
mov
scas
mov
jp
pop
roll
inc
jb
sub
stos
sbb
in
xchg
or
inc
js
out
ja
call
orb
push
mov
mov
mov
fcmovnu
dec
in
js
pop
shrl
es
pop
in
cltd
sub
enter
cmp
sbb
movsb
adc
or
pop
add
js
fldenv
add
mov
add
push
mov
test
or
pop
loop
fstpt
inc
imul
cmp
cmp
add
or
rorb
mov
lcall
cmpsb
xchg
ljmp
adc
cli
jmp
inc
leave
cwtl
mov
imul
outsl
fstl
ret
push
pop
daa
shrb
or
adc
lahf
mov
cmp
cmp
mov
bound
mov
pop
les
mov
xlat
insl
movsb
pop
pop
cmc
mov
push
cli
popa
xchg
lock
sub
sti
dec
jnp
mov
jbe
leave
or
fwait
enter
fwait
test
xacquire
xchg
lcall
jo
or
test
fldt
pop
or
stc
add
mov
mov
pusha
xor
adc
push
xchg
mov
arpl
add
inc
dec
add
cmpsl
mov
sub
ret
push
jo
xchg
in
sub
add
fdivl
lcall
jbe
add
leave
popa
push
js
add
cwtl
loopne
scas
xor
dec
leave
fwait
repnz
faddl
xchg
cmp
icebp
jno
cmp
jmp
cltd
adc
mov
shll
and
sub
cwtl
push
or
pop
repnz
loop
jmp
enter
das
shrb
push
cld
popa
xchg
adc
cltd
adc
fisttpll
sub
repnz
arpl
in
arpl
mov
inc
sti
mov
sbb
rol
jnp
cmp
rorb
sbb
or
repnz
pop
pop
enter
dec
imul
jne
pminsw
fwait
icebp
cwtl
xchg
xor
sti
xor
sbb
dec
mov
cld
jbe
mov
push
test
dec
xor
mov
adc
xor
les
pop
pop
pop
int3
add
in
or
xlat
decb
cmp
movsl
or
shr
ficompl
ljmp
jge
pop
data16
in
out
insb
sub
negb
jne
add
lret
xchg
mov
mov
int
bound
push
leave
adc
imul
out
sarb
outsl
xchg
es
lods
loopne
clc
bound
mov
fwait
outsl
cli
jg
mov
xchg
pop
sub
mov
jl
aad
mulb
add
out
repz
mov
xchg
dec
inc
bound
add
xchg
jo
mov
xor
pushf
bound
xlat
int3
popf
mov
movsl
inc
lods
sub
xchg
daa
ficoml
ja
and
cmp
repnz
popa
les
pop
cmp
in
test
es
xchg
popf
mov
or
xlat
faddl
xchg
cs
push
sahf
out
frstor
mov
jb
and
ror
sbb
ds
cwtl
xor
pop
dec
xchg
pusha
push
fnstenv
sbb
mov
sub
pop
stc
enter
fcoms
jl
push
or
das
pop
aas
jmp
mov
jmp
mov
jbe
sbb
popf
cmp
fwait
or
lock
fwait
push
dec
jne
mov
cmpl
add
jp
cli
fs
insl
xchg
xor
mov
gs
cmc
ds
xchg
aad
mov
cmp
fisubl
pop
cli
or
xchg
hlt
pop
adc
xor
dec
push
out
mov
jle
jl
mov
xor
rcrl
dec
pop
fwait
js
cmp
cmp
mov
jp
outsb
xchg
mov
dec
cmp
mov
loope
xor
inc
dec
clc
adc
mov
sub
add
mov
mov
inc
add
mov
or
mov
xchg
fstl
dec
add
pop
pop
cmpsl
jecxz
repz
adcw
mov
scas
cmp
sbb
loop
mov
sbb
test
std
les
scas
dec
in
xor
loope
xor
push
movsb
adc
scas
push
daa
imul
xor
mov
inc
repz
xor
adc
les
xor
std
add
fcmovnu
xchg
shrl
add
sbb
xor
xchg
pop
jl
xor
cld
or
icebp
sub
imul
stc
adc
pop
flds
cmp
or
or
adc
sub
ret
pushf
and
jo
cli
add
cmp
test
inc
dec
jecxz
adc
xchg
out
imul
test
inc
stos
clc
mov
or
cmpsb
cmp
sbb
and
in
call
xorl
into
cmp
cmpsl
cltd
mov
or
xor
fists
pop
adc
xchg
push
push
nop
mov
imul
scas
cwtl
imul
inc
je
rorl
or
jp
nop
cmp
sub
inc
mov
xchg
mov
xchg
aam
arpl
in
push
andl
add
sub
mov
div
pushf
mul
push
mov
mov
pop
pop
or
in
mov
or
outsl
sub
and
std
sub
insl
ja
mov
mov
hlt
and
mov
cmpsl
xor
adc
jle
cwtl
jl
xchg
sbb
sti
adc
inc
pop
loope
add
jae
pop
inc
pop
xchg
fs
sub
ss
mov
cs
cld
jecxz
mov
mov
div
insb
ljmp
int
in
jno
cmp
pop
push
cmp
mov
sbb
es
sub
ja
xchg
sub
mov
daa
push
inc
stos
adc
pop
ficomps
sahf
inc
loopne
jge
aad
ret
adc
push
bound
outsl
dec
push
shr
push
xor
and
cmp
fs
orb
addb
imull
daa
jmp
mov
stos
test
out
mov
test
inc
ficoml
sub
ficompl
iret
popa
push
in
cmp
ret
sub
scas
sbb
mov
shll
mov
fistps
sub
movaps
pop
mov
scas
in
mov
ljmp
and
jbe
push
hlt
adcl
pusha
mov
mov
or
bound
test
int
fstpl
jae
pop
xlat
pop
cmpsb
ljmp
testl
dec
sub
mov
ja
cmp
sbb
and
push
mov
sub
xor
mov
sub
daa
iret
sub
aaa
or
and
mov
or
sub
outsb
adc
xchg
jnp
stos
ljmp
and
mov
sbb
sub
and
adc
daa
jns
iret
daa
mov
clc
or
arpl
fdivl
pop
xlat
cmpsl
repnz
xchg
in
ljmp
ss
jl
xchg
or
or
test
or
sub
xchg
xchg
mov
dec
data16
popf
jnp,pt
lret
xchg
fcmove
daa
call
out
sti
jl
or
das
mov
arpl
jo
dec
push
sarl
jne
dec
pop
inc
xor
aad
sti
cs
in
mov
mov
jo
pop
out
in
sbb
cmp
jmpw
push
loope
popf
sub
test
cmp
push
pop
push
jns
xor
xlat
and
xor
dec
lock
mov
sahf
fnsave
aad
xor
rcr
test
int3
sbb
cwtl
cmpsl
jns
nop
jmp
and
popa
fisttpl
mov
popf
enter
or
loope
shlb
lret
sahf
push
add
outsl
outsb
movsb
sahf
repnz
out
aam
jl
mov
fcoms
stos
inc
xchg
pop
jmp
pop
adc
sub
or
gs
pop
add
shll
mov
arpl
mulb
int
sub
mov
and
cmpsl
fs
loopne
dec
lds
mov
push
pop
scas
xlat
pusha
push
jno
cmp
jno
test
pop
fmuls
orl
test
mulb
push
cmp
sub
movsl
stos
fiaddl
and
push
pop
xchg
mov
dec
ret
cmpl
test
mov
mov
pop
jns,pn
inc
mov
add
mov
insb
pop
add
std
scas
jae
mov
in
mov
ss
mov
sbb
movsl
roll
daa
add
cmp
sub
insl
sub
mov
out
jl
cmp
jb
push
dec
out
in
cli
shrl
push
cli
sub
sbb
and
add
fimuls
fadds
lods
xchg
push
xchg
aad
repz
cwtl
outsb
fwait
xlat
sub
inc
sbb
xchg
and
xchg
add
sub
pop
lods
enter
mov
cmpb
ss
xchg
cmpsb
inc
bound
mov
mov
cmp
imulb
pop
test
shrb
rolb
addr16
and
jns
jae
in
mov
lods
fistl
mov
movsb
dec
testb
outsl
push
hlt
ja
or
out
dec
sbb
sub
outsb
imul
jne
cmp
inc
cmp
movsl
xchg
pop
jae
in
pop
jno
push
mov
insl
int3
mov
mov
ljmp
pop
add
test
fwait
mov
mov
lcall
lods
mov
shr
outsb
mov
rorb
lds
mov
push
popa
mov
inc
inc
arpl
test
xchg
negb
cmp
addb
popf
adc
push
inc
cld
xchg
fldenv
loop
mov
dec
push
movsl
mov
mov
jp
push
mov
dec
int
repz
imul
mov
nop
jmp
es
loope
pop
call
jae
jle
mov
cmp
and
and
xor
mov
sub
sbb
imul
repnz
punpckldq
add
jbe
arpl
jge
fstpt
xor
nop
jno
out
xlat
sub
mov
jle
fmulp
call
push
or
inc
stc
jl
imul
sahf
lret
hlt
mov
xchg
mov
inc
push
jb
adc
insl
jmp
jp
pop
xor
mov
sahf
incl
mov
cmpb
notb
add
xor
xchg
add
js
cmpsl
mov
je
sbb
add
sbb
dec
arpl
mov
mov
jle
cwtl
adc
imul
add
sub
xchg
divb
shll
movsb
into
sbb
imul
inc
out
lret
testb
pop
fsubrs
jge
mov
stos
jns
out
push
popf
out
inc
pop
mov
je
clc
idiv
cwtl
faddl
pop
inc
pop
syscall
imul
or
mov
and
outsl
sbb
sub
dec
leave
adc
and
inc
orb
add
dec
mov
lcall
push
lods
mov
mov
mov
cmpsl
fnstcw
movsl
mov
out
stc
out
dec
dec
nop
inc
inc
das
clc
aas
sub
fcom
movsl
imul
xchg
sbb
into
lahf
rorl
or
mov
and
mov
pop
not
inc
pop
inc
mov
outsb
fidivrl
pop
ss
adc
mov
jo
cmpb
pop
cmp
xchg
sbb
repnz
xor
in
sbb
enter
adc
imul
push
icebp
jge
test
ret
ljmp
rcrl
xchg
out
and
jl
and
dec
sar
ret
aam
push
les
roll
pusha
xor
cltd
jl
imul
xor
fisubs
xor
cmpsb
push
lret
aaa
fwait
scas
lea
sti
push
dec
add
fdivs
sub
lret
pop
jge
cwtl
shll
jns
push
pop
cmp
fsubrs
loopne
jns
adc
fadds
adc
loop
jno
test
leave
mov
mov
lods
movsb
cli
cmp
push
xchg
mov
cmp
mov
imul
ss
adc
ds
xchg
pop
mov
mov
xchg
sahf
movsb
xchg
incb
arpl
adc
imul
adc
std
and
mov
jp
add
mov
sbb
xlat
cltd
sbb
xchg
clc
nop
nop
in
decb
jnp
sbb
cmp
cwtl
lock
sub
mov
clc
insb
push
testl
test
mov
mov
call
out
add
pop
jg
jg
cltd
icebp
js
adc
das
inc
js
fmul
xor
dec
mov
sbb
pop
daa
mov
cmp
pusha
add
inc
shll
and
insb
pop
cwtl
testl
dec
repz
in
xchg
icebp
jae
fldcw
jle
fisubrs
mov
fildl
lods
movsl
mov
jecxz
mov
sbb
and
test
inc
jo
jo
push
dec
out
ret
scas
sahf
dec
mov
or
lret
inc
add
mov
cmpsl
jmp
mov
pusha
jns
mov
dec
pop
adc
adc
xchg
sub
mov
test
cld
int3
mov
xchg
cmp
xor
dec
cmp
cmpsl
push
cltd
fmulp
lcall
sbb
dec
jmp
into
mov
xchg
fsubs
in
shrl
out
aad
imul
jns
jne
xchg
mov
xor
js,pt
add
clc
movsl
jg
stos
aaa
scas
int3
sahf
and
jns
ret
sub
sbb
inc
out
aam
scas
inc
inc
mov
mov
add
pop
inc
inc
inc
push
and
sub
push
or
mov
fwait
out
and
jno
cmp
arpl
clc
test
in
push
jb
stc
mov
cli
out
jno
xor
dec
and
xlat
jae
mov
shl
pop
jmp
mov
fs
pop
lahf
xor
fsubr
das
sub
push
jge
jl
and
sub
sub
inc
xorl
inc
outsl
lock
in
insl
jp
flds
mov
das
and
rcrb
xchg
sarl
add
movsb
inc
sbb
repz
xchg
push
xchg
fadds
lea
ret
jmp
cli
mov
out
mov
fildl
repz
xchg
xor
in
mov
pop
fndisi(8087
fistps
or
sbb
pop
icebp
inc
xor
mov
sub
dec
enter
cmp
repz
out
outsb
outsb
mov
add
cmpsl
sub
dec
test
sub
cmp
add
cld
out
xchg
in
mov
or
xchg
xor
adc
pop
testb
mov
stos
jg
sbb
inc
xchg
sbb
jle
mov
ljmp
iret
mov
in
or
inc
cmp
test
adcl
fildll
lods
daa
push
arpl
mov
fnsave
jg
jns
cmc
test
sbb
fwait
int
xchg
push
or
icebp
cwtl
jl
fiadds
repnz
aam
out
icebp
popf
ljmp
mov
sbb
test
jnp
insb
outsb
fcmovu
add
mov
xchg
pop
pop
mov
inc
and
gs
movsb
and
outsb
sbb
lcall
subl
and
jecxz
xchg
push
jno
and
cmp
inc
ss
jle
shlb
inc
jns
sbb
xchg
mov
lahf
das
and
lock
adc
and
cmpl
add
xor
fnstsw
add
adc
pusha
cmpsb
inc
fnstsw
hlt
into
dec
cwtl
xor
adc
push
andl
repnz
and
mov
lock
lcall
outsb
mov
mov
clc
push
jp
sub
mov
mov
cli
rcl
rcr
mov
cmpsl
xchg
mov
and
addr16
incb
push
xchg
data16
int
lods
lret
jp
lods
test
sbb
and
adc
nop
dec
fwait
jp
inc
fisttpl
mov
inc
mov
fildl
negb
inc
subl
xchg
aam
ljmp
lods
inc
pop
adc
mov
push
pop
mov
mov
mov
fiaddl
loope
pop
insb
insb
int
fsubp
fidivrl
fidivs
jns
cmpsl
xchg
sub
pusha
lahf
loopne
lcall
inc
push
loope
hlt
mov
dec
sbb
or
insl
mov
jmp
daa
or
jge
dec
push
pop
ljmp
sarb
div
popf
jno
inc
lret
jp
xor
and
dec
pop
pushl
lods
imul
aas
into
mov
test
cltd
adc
jne
ja
inc
test
fstl
xchg
and
mov
and
cmp
jb
nop
push
xor
subl
pop
jmp
jge
pop
and
sub
or
popf
test
data16
mov
jl
pop
xchg
cli
xchg
aas
insl
jns
mov
js,pt
dec
push
push
jl
outsb
dec
xor
out
mov
sbb
sub
loop
push
xchg
and
es
cmp
push
stc
leave
mov
fiadds
add
pop
dec
jno
std
mov
jno
mov
add
mov
mov
frstor
ror
and
cmc
sub
sub
pusha
es
jl
inc
notb
xchg
pop
fisubl
sbb
rol
in
or
push
pop
lret
jno
jecxz,pt
jl
jl
int
inc
into
inc
je
cmp
int3
xor
or
shlb
lods
dec
addr16
xchg
fcoms
out
dec
inc
cmp
dec
add
push
shll
adc
pop
mov
arpl
in
adc
lret
sbb
fnstcw
and
push
gs
jne
ss
subb
aam
lds
test
sub
pop
les
popaw
aam
scas
pop
jne
fucomp
jp
cmpsb
sbb
mov
mov
inc
xor
test
not
or
pop
inc
mov
ja
cmpl
popa
sahf
or
jl
lods
shrl
flds
inc
clc
fabs
adc
popa
cmpsb
icebp
add
mov
xor
fldl
xchg
getsec
cmpsb
xor
lahf
inc
cmovae
fwait
pandn
jb
pop
mov
inc
rclb
or
push
fs
clc
rclb
repz
lahf
orb
test
jo
fisttps
incl
je
cmp
xchg
sub
push
jg
movsb
nop
jecxz
out
ficomps
jno
daa
push
sbb
fsubrp
sub
mov
lock
mov
loope
ret
pop
and
mov
push
leave
cmpsb
jo
add
test
inc
movsl
xor
sbb
dec
mov
cld
cmpsl
shll
mov
les
push
out
sbb
aad
push
or
mov
or
push
sub
cmp
jno
cmp
loop
arpl
ret
jae
test
push
xor
dec
push
ss
insb
ds
dec
sbb
add
cld
in
jecxz
push
inc
xchg
cltd
icebp
and
cmp
sub
nop
je
xor
les
sbb
pop
mov
addr16
scas
mov
adc
mov
mov
sbb
cmc
cld
in
insb
and
cmp
dec
pusha
popa
or
push
fcoml
sub
mov
sbb
les
bound
xchg
hlt
jne
jns
repz
dec
sbb
mov
or
std
pop
int
mov
das
jmp
add
adc
push
dec
test
push
dec
adc
lahf
outsb
xor
movsb
or
cmp
mov
mov
xchg
and
add
or
imul
aas
and
js
and
ret
add
pop
imul
mov
imul
jecxz
adc
jecxz
mov
gs
jo
mov
push
add
sub
inc
pusha
cltd
pop
push
cli
adc
cwtl
and
jo
dec
sbb
popf
or
xchg
or
jecxz
cmp
inc
mov
xor
sahf
inc
data16
push
push
dec
fxch
sbb
lahf
into
shlb
pop
cli
pusha
jmp
into
sar
cmp
mov
add
std
les
lret
xor
pop
pop
inc
cmc
loop
cmp
push
sub
jne
sti
add
jl
adc
pop
nop
push
scas
xchg
sbb
lea
jb
lcall
push
fisttpll
sub
mov
mov
mov
cs
sub
mov
mov
pop
mov
dec
mov
cmp
cltd
mov
mov
mov
shrl
ret
mov
aaa
stos
push
xor
aas
fsubl
mov
lods
in
imul
push
icebp
cmovns
sub
aas
imul
pop
and
mov
lcall
scas
shlb
fbstp
out
movsl
pushf
jns
xlat
call
xor
shl
or
add
es
out
jne
cmp
gs
rolb
push
jno
js
lods
and
in
shll
push
xor
out
lds
add
aas
mov
jnp
cmp
gs
mov
dec
or
cmp
dec
inc
lret
xchg
sbb
pop
sbb
aas
jb
push
rcl
jnp
and
lea
mov
sarl
dec
nop
sub
ret
push
fcmovnbe
inc
jnp
fists
xchg
xchg
or
cltd
cmp
jl
cmp
xlat
into
test
fwait
lcall
jp
jo
or
dec
loop
jle
fidivrs
sar
int
fildll
insb
dec
jns
mov
hlt
int
inc
mov
shrb
ja
fs
out
mov
fs
xor
std
fcmovu
adc
and
push
addr16
outsb
add
mov
idivb
pop
ret
cmp
cli
sbb
inc
ret
mov
jnp
jl
or
push
push
jecxz
movsb
xchg
fisubs
push
mov
or
sti
or
or
jo
in
push
sbb
or
cmp
inc
cld
scas
mov
inc
push
fisubrl
xchg
jnp
sbb
repnz
into
int
in
pop
adc
outsb
clc
fs
adc
mov
rclb
mulb
loop
push
push
jae
cmpsb
or
ret
dec
and
scas
cli
push
aaa
lret
stos
mov
imul
sub
ss
mov
ds
cmp
jae
fs
jecxz
xchg
jno
test
cmp
dec
inc
lock
subb
sti
jae,pn
test
mov
stc
cwtl
fcom
inc
mov
xchg
test
add
pushf
mov
pop
aam
add
scas
loope
cld
xor
loope
outsb
rolb
dec
pop
inc
add
pop
aam
lock
repz
scas
in
mov
clc
xor
push
hlt
les
sub
jg
xchg
stos
data16
out
fistl
add
adc
sahf
xchg
repnz
jne
push
sub
dec
jns
popf
jg
push
loop
repnz
cmp
xor
orb
in
sub
gs
popf
fildl
loope
inc
nop
cmp
nop
adc
lds
cli
loope
xor
lret
loop
push
add
popf
cld
les
inc
ror
stc
pop
outsb
push
and
sbb
mov
jl
mov
or
or
std
mull
jge
das
cmp
pusha
ficompl
jg
es
lods
and
jb
notb
test
xchg
bound
dec
shll
out
rcr
stos
insl
addl
sub
hlt
iret
dec
fwait
pop
jmp
popf
push
xchg
sarb
or
and
add
push
dec
xchg
inc
addb
xchg
and
add
mov
sbb
push
outsl
lret
mov
outsl
outsb
ja
cmp
hlt
jae
mov
sub
sti
mov
scas
shrb
jne
mov
mov
ja
lock
js
into
cmp
out
push
and
imul
dec
sbb
sub
in
mov
mov
in
cmpsb
inc
loopne
dec
mov
ljmp
filds
repnz
jns
daa
insl
loop
xchg
insl
lods
xor
pop
pop
sbb
mov
call
sbb
push
or
inc
mov
adc
inc
pop
jnp
xchg
insb
adc
insb
popa
jns
xchg
rcr
repz
sub
aam
pop
pusha
pop
inc
jge
aam
dec
clc
push
sahf
fisttpll
mov
aad
bound
sbb
push
jmp
ds
push
loopne
out
mov
mov
xchg
sar
cmp
aad
mov
xchg
stc
xchg
jp
imul
and
mov
int
or
xchg
fiadds
clc
repnz
mov
aas
sti
xor
movsb
or
dec
iret
or
and
int
inc
lea
aas
dec
insl
fs
mov
xchg
fcomp
insb
inc
inc
dec
mov
mov
and
jecxz
rcl
stos
sub
lcall
jg
iret
pop
cmp
addr16
dec
orb
add
inc
scas
mov
in
stos
cmp
adc
sar
push
pop
push
and
sub
pop
cld
ja
ret
cwtl
mov
xchg
push
cmp
popf
mov
sub
xchg
repz
aam
rcll
aad
inc
cmp
mov
lcall
sbb
bound
push
cwtl
jns
in
loopne
data16
adc
and
ja
jne
scas
pop
pop
adc
out
and
pop
push
fdivrs
push
aam
popf
cli
nop
cmp
mov
nop
aaa
aaa
aam
sbb
in
nop
mov
into
mov
and
xor
rcrl
movsb
outsl
outsl
jp
repz
sbb
call
jb
fld1
push
dec
icebp
jae
mov
and
xor
sahf
cmpsb
jns
jo
pop
or
push
push
ja
inc
push
nop
push
arpl
dec
lods
mov
movsb
sysret
adcl
and
push
dec
aaa
cmp
inc
cli
push
lret
ret
jmp
and
test
lahf
daa
pop
mov
cltd
jno
in
adcb
xor
lock
mov
mov
xchg
popa
xchg
imull
pop
sahf
call
repz
pop
cmp
xor
mov
fwait
std
or
push
cmp
and
inc
and
pop
shlb
cli
inc
cmpb
icebp
xor
cld
fisttpll
push
ficomps
add
or
xor
mov
les
adc
jl
xor
xchg
sub
sahf
idivb
sub
inc
fldl
xor
ja
std
test
fs
pusha
lods
fcompl
dec
jne
jle
inc
lahf
int
push
imul
push
mov
cs
andl
daa
mov
cmc
pop
jnp
imul
decl
add
push
xchg
sarb
imul
cltd
test
mov
adc
push
and
ljmp
mov
ss
or
in
sbb
fs
mov
icebp
repz
add
or
int3
xor
fcos
mov
imul
xchg
push
fcompl
xor
int3
sbb
icebp
and
lods
lock
xor
xchg
cmp
test
loop
mov
mov
push
jmp
outsl
insl
xor
int3
sub
out
lods
pusha
test
lds
icebp
mov
mov
push
adcb
mov
xlat
sbb
mov
fstpt
sub
pop
cmp
mov
lods
push
adc
out
xchg
push
out
sbb
xchg
enter
cmp
xor
adc
mov
sti
jb
jle
adc
pop
sub
sbb
mov
test
out
xor
push
gs
lea
add
jbe
test
repz
mov
call
cli
dec
add
push
fcoms
imul
addr16
rorl
popf
pop
xchg
push
mov
xchg
xchg
and
dec
lds
pop
push
call
push
pushf
or
in
xchg
push
mov
push
in
pop
lahf
or
mov
mov
bound
bound
aam
pop
repz
dec
xchg
cld
fisubrl
pop
xor
test
jmp
cmp
mov
xorb
inc
imul
addr16
mov
pop
or
cmp
imul
arpl
push
outsl
ja
mov
or
enter
push
addr16
movsb
pop
adc
ret
dec
std
mulb
dec
test
outsb
jae
cld
imul
enter
xchg
xchg
cltd
push
scas
std
fldenv
and
mov
lock
inc
xchg
movl
icebp
test
push
add
loop
cmpsl
dec
push
push
and
stos
jno
sub
leave
push
pop
in
pop
mov
pushf
test
or
data16
pop
xorb
js
jns
jg
mov
leave
insl
jnp
dec
insb
mov
sbb
movsl
push
imul
in
mov
pusha
mov
push
cwtl
fcmovnb
and
dec
fdivrl
stos
sub
pop
mov
movsl
call
sub
pop
pop
rorb
mov
mov
push
mov
inc
push
in
adc
test
fs
xchg
popaw
pop
stos
pop
inc
divl
popa
lods
push
fwait
jg
push
arpl
insl
mov
push
sbb
aaa
or
arpl
stos
incl
inc
pop
imul
mov
pop
mov
lea
outsb
stc
pop
mov
sub
push
xor
cmp
or
imul
dec
jle
or
int
mov
mov
repz
je
insb
pop
aad
xor
out
inc
lcall
sbb
pop
mov
inc
jle,pt
pushf
insb
xor
cmpsb
sti
in
mov
ret
inc
in
or
pop
pop
add
jl
push
cmp
xor
imul
and
cs
sub
jo
sub
pop
lea
aaa
jmp
in
into
cmp
sbb
mov
xchg
xor
mov
mov
cmpl
inc
daa
sbb
xchg
lcall
mov
xchg
movsb
cwtl
xor
cs
jo
ret
xchg
adc
mov
jl
outsb
sti
mov
test
ret
cmc
into
cli
mov
pushf
leave
jp
or
cmovs
int3
push
lea
cmp
and
in
gs
fadds
push
mov
test
jg
cmp
push
mov
cmp
loope
xor
cli
and
dec
into
sbb
push
fstpl
mov
addr16
das
and
test
out
xor
xchg
mov
jmp
sub
or
leave
mov
daa
movsl
mov
aas
addl
out
leave
cmp
inc
scas
je
outsb
push
inc
dec
in
out
shlb
sti
sbb
test
sub
jno
in
pop
sub
movsb
testb
or
stos
or
cmpsl
sub
pop
pop
mov
mov
loope
and
lock
xchg
ret
mov
fdivrl
push
popa
jl
hlt
jbe
push
scas
mov
push
dec
test
add
cmp
jne
out
jl
cmp
push
add
out
clc
adc
and
test
mov
call
lret
or
cmp
scas
sub
push
pop
imul
int
repnz
mov
mov
lahf
xchg
mov
inc
lret
test
add
std
xchg
cmp
dec
out
cmp
iret
xor
pop
ret
fisubl
mov
call
stos
inc
add
adc
orl
outsl
pop
aam
sub
sbb
js
sub
mov
dec
adc
jl
cmp
adc
xor
sub
clc
mov
out
jne
icebp
lea
loopne,pn
mov
mov
or
add
fwait
sub
or
fisttps
mov
mov
push
aaa
inc
inc
mov
stos
sbb
fs
test
je
push
mov
adcl
cmpl
rcrb
jp
pop
cmp
xchg
mov
in
xchg
cmp
aaa
in
sbb
push
rcrl
cmp
adc
les
jnp
cmpsl
mov
hlt
xlat
frstor
pusha
sub
mov
lock
or
mov
and
icebp
push
fcmovu
pusha
mov
mov
loopne
addr16
push
xor
xchg
fwait
cmpsb
sub
push
push
pop
mov
jae
or
aaa
insl
xor
or
inc
insl
fsubl
vmaxpd
sbbl
xchg
loop
lods
inc
addr16
xchg
nop
shr
dec
mov
call
dec
sub
sarb
ja
xchg
arpl
cmp
and
inc
lods
xchg
sbb
push
rcl
mov
bound
fmuls
into
icebp
mov
aad
notl
outsl
outsl
add
iret
cwtl
push
das
lock
insb
stc
into
leave
dec
xchg
ss
xchg
adc
cmp
and
or
out
jecxz
inc
and
loope
pop
orb
cmpl
std
sbb
fmul
xor
dec
iret
sahf
subb
xorl
jbe
lds
pop
xor
fnstcw
adc
test
jb
push
lds
sbb
or
cmp
pop
addr16
cli
sub
xor
into
cwtl
negl
mov
insb
or
sub
sbb
jmp
dec
lods
inc
jg
stos
fnsave
es
mov
mov
int3
adc
dec
sub
sbb
test
jl
movb
popf
aam
lret
mov
bound
stos
add
mov
jne
pop
aad
repnz
inc
push
adc
pop
shll
mov
int3
mov
xchg
aaa
xor
pop
jmp
aad
lock
jb
mov
loopne
daa
adc
test
mov
mov
lods
aas
mov
mov
adc
pop
push
inc
jmp
xchg
pop
push
jo
pushf
ret
filds
ret
jns
or
popf
jmp
lods
cmc
dec
mov
lea
ja
or
add
jno
jmp
jp
int
inc
mov
insl
pop
lcall
cmc
ljmp
dec
adc
push
cmc
mov
lcall
test
scas
sub
jns
xor
in
adc
pop
das
bound
sbb
xchg
into
fidivrs
fidivl
lcall
nop
test
shrb
imul
in
gs
fsubs
inc
lods
add
leave
mov
loop
pushf
lahf
push
pop
je
xchg
filds
cmpsl
lret
scas
and
mov
movb
push
into
enter
push
in
jbe
pop
mov
pop
cmp
ja
adc
test
adc
ljmp
in
pop
testb
xchg
pop
cld
add
bound
pop
inc
push
or
push
inc
stc
xchg
sahf
push
inc
shll
aam
jae
push
ss
fldenv
jge
adc
pop
cmp
stos
jnp
outsb
sbb
xchg
or
xchg
and
stc
seta
std
sbb
sti
divb
add
fisubrl
jo
fldt
xchg
dec
addr16
or
sub
xchg
add
mov
int3
dec
lods
or
movsb
loope
cmp
lods
in
out
aaa
mov
push
mov
fwait
in
cmp
outsb
popa
or
jg
cmp
sbb
ljmp
rclb
ja
sbb
push
insb
cmc
fildll
arpl
ljmp
pop
cmp
dec
je
xor
inc
aas
xor
movsl
movsl
push
push
clc
out
mov
dec
jns
jecxz
mov
lods
push
fcomp
cmp
pop
pop
cwtl
cmp
ljmp
lods
mov
adc
iret
mov
cmovno
dec
add
js
pop
xor
mov
ljmp
mov
dec
in
lock
adc
mov
in
movsl
adcl
lods
fwait
cmp
bound
divb
aas
daa
in
cwtl
mov
sbb
pop
stos
pop
sbb
lcall
jno
xor
loope
mov
popf
ret
sub
nop
or
lds
andb
and
sarb
addr16
cmp
icebp
scas
mov
add
mov
sub
fs
adc
pop
jb
pop
sti
pop
xchg
mov
stos
add
fiaddl
jecxz
push
out
xchg
sub
sub
dec
mov
ja
inc
mov
movb
xchg
cmp
cs
mov
outsb
sub
lcall
jno
cmp
jns
pop
je
xchg
dec
into
jns
movsl
xor
jge
mov
xchg
dec
ljmp
into
mov
imul
jnp
sbb
jmp
cmp
cmp
clc
sbb
enter
fsubs
in
or
rol
popa
shll
xor
inc
jnp
and
stos
adc
ds
inc
jmp
jp
adc
xor
sahf
pop
je
lock
inc
add
fists
xchg
dec
les
cmp
sbb
xchg
xchg
das
and
pop
sub
cmp
jle
stos
icebp
dec
cs
add
mov
fdivl
push
add
sbb
das
insl
sahf
adc
stos
subl
std
bound
mov
js
cmp
mov
cli
xchg
icebp
mov
das
cld
data16
enter
pop
jge
pop
loope
dec
out
xchg
leave
xor
ret
popa
cmp
add
sub
jmp
jno
adc
and
mov
and
out
xorb
mov
into
rolb
movsl
sub
dec
inc
pop
push
mov
push
mov
dec
pop
addr16
icebp
push
bound
add
adc
add
cmp
pop
fldcw
jbe
sar
cmp
jo
add
ss
cli
mov
cmc
mov
out
loope
sub
jecxz
mov
xor
cmp
icebp
push
ficomps
jae
dec
adcl
sbb
dec
mov
lahf
rcrl
mov
int
out
addr16
inc
fstp
pop
leave
xchg
mov
cmp
jle
cmc
idivl
repz
adc
jecxz
sbb
cld
mov
mov
outsl
popf
sbb
sub
mov
inc
pop
jo
in
das
test
jae
int3
mov
mov
je
or
jg
outsl
movsb
xorl
in
or
lock
stc
inc
cmp
push
fistpl
jl
push
mov
or
xchg
cmp
idivl
add
fbstp
dec
mov
or
out
in
jb
mov
push
jo
xchg
subb
ret
ret
rclb
inc
xchg
cmp
fcmovnu
call
or
lret
dec
mov
shrl
and
mov
outsl
cmp
mov
fcoms
xor
mov
dec
nop
push
fnstcw
rorl
and
add
cmp
cld
insb
jno
in
popf
and
sbb
lds
xchg
add
sub
mov
jl
fsubrp
fstps
cmc
push
sub
push
hlt
push
jno
push
mov
mov
ret
push
push
test
movsl
dec
jecxz
in
repz
adcl
daa
mov
mov
sbb
push
faddl
ret
sarb
mov
pop
imul
popf
mov
movsl
stos
xchg
mov
cs
decb
cmpsl
cltd
fs
pop
stc
pop
nop
outsb
push
mov
std
ljmp
sub
and
das
inc
sti
call
add
mov
icebp
scas
cli
xlat
leave
jb
xchg
sub
sub
cmp
sbb
push
mov
push
jns
lcall
in
mov
mov
shlb
fiaddl
daa
fldt
subb
xchg
xchg
in
pop
or
std
xchg
out
aad
xor
push
out
stos
xor
push
mov
sub
lods
fcomi
loope
mov
fstpt
stos
mov
add
scas
fiadds
iret
jecxz
xchg
lock
fadds
dec
and
nop
test
mov
push
shlb
out
test
and
push
popa
popa
or
loopne
fisubrl
xor
test
or
push
lock
cmp
pop
adc
ror
xchg
popl
xchg
shlb
xchg
test
fists
or
inc
and
dec
sbb
sbb
lds
clc
scas
mov
jl
test
mov
jnp
popf
fs
nop
jmp
mov
out
jg
xchg
aas
mov
pop
add
dec
es
aam
pop
enter
movsb
aas
cmp
mov
or
push
lods
xchg
mov
pop
fsts
int
clc
int
scas
in
and
shlb
cmp
sbb
mov
pop
push
js
mov
ljmp
cmpsb
or
into
in
divps
repz
mov
mov
jno
outsl
std
adc
mov
int3
sub
in
scas
fcompl
aaa
mov
pop
mov
cmc
sahf
iret
adc
fucomi
fisttps
lods
clc
cmpsb
repnz
insl
andb
sbb
out
push
mov
int3
lock
jbe
iret
xlat
aad
jle
cld
inc
lcall
data16
pop
jnp
add
xor
dec
into
scas
mov
or
jge
outsb
and
lret
mov
mov
dec
in
add
rcrl
and
mov
xor
mov
sbb
cld
and
ret
mov
in
mov
sub
xorl
js
icebp
or
les
movsl
jbe,pn
mov
add
cmp
mov
xchg
leave
shlb
shll
fimuls
pop
push
lahf
sbb
ja
mov
dec
and
mov
push
cmp
incl
jb
mov
test
pusha
popa
test
stos
and
xlat
inc
nop
add
add
cmc
mov
inc
push
add
jns
sahf
xchg
lcall
test
dec
adc
inc
inc
aaa
lret
or
dec
mov
jg
outsl
sub
mov
push
adc
adc
ja
add
inc
mov
xor
enter
adc
arpl
lock
adc
int3
out
inc
insl
das
inc
in
test
cmc
int
sbb
ss
in
in
adc
dec
push
sahf
jo
imulb
xchg
test
imul
sub
in
or
lret
cmp
mov
cli
sbb
call
mov
movsb
jo
fwait
imul
cmp
popf
lods
jns
mov
jae
in
adc
pop
dec
xchg
pushf
pop
push
mov
pushl
cmp
gs
adcb
stc
ja
push
sub
add
jno
mov
fiaddl
std
xor
mov
xchg
inc
aas
fldenv
arpl
shlb
lea
mov
lcall
fadds
jne
dec
mov
mov
insl
aaa
mov
sub
fisttpl
fistpll
pop
and
ja
sti
xchg
jns
dec
sub
cmp
adc
mov
test
mov
cmpsb
or
ljmp
cmc
mov
xlat
pop
adc
adc
mov
pop
outsl
push
aam
mov
or
in
mov
xchg
jae
adc
add
insb
imul
out
inc
imul
xor
subb
mov
adc
bound
xchg
outsb
push
dec
jg
loop
dec
scas
adcb
xor
cs
xor
sub
call
in
aas
fsubr
mov
pushf
push
xlat
xorl
aad
push
or
scas
cld
leave
data16
adc
mov
movl
test
in
iret
cs
test
addr16
inc
pop
pop
mov
ficoms
mov
inc
fsubrs
mov
rol
les
or
push
mov
and
popa
add
cmp
push
into
idivl
gs
out
cli
popf
aas
mov
cmp
sarl
push
lret
mov
cld
lret
jae
xor
icebp
das
outsb
fdivl
in
sub
lock
aam
and
adc
loop
cmp
pusha
fs
push
out
negl
daa
ljmp
in
push
cmp
jge
cwtl
fmuls
cmp
jbe
test
mul
je
cmp
dec
arpl
ret
mov
xchg
mov
sub
xchg
pop
stc
mov
mov
cmp
fldenv
mov
xor
lea
or
pusha
sub
lea
jg
shlb
xchg
push
in
lods
inc
ljmp
inc
fs
xor
cmc
xchg
or
idivl
aas
mov
and
lret
push
dec
cltd
arpl
imulb
inc
fnsave
pop
divl
cmp
sub
ret
out
jecxz
xchg
call
xchg
imul
into
ja
mov
pop
sub
stos
adc
cmp
clc
inc
jle
pop
jno
pop
bound
push
pop
fcmove
lods
std
scas
lea
lret
sti
xor
or
cmpb
cmp
push
push
mov
lods
setbe
and
popa
in
and
jnp
push
test
mov
shlb
and
gs
add
test
push
rcll
push
shll
xorl
mov
sub
add
mov
add
in
or
jge
adc
adc
int3
les
not
mov
push
fs
cwtl
adc
adc
jb
inc
mov
mov
mov
mov
loop
mov
fldl
lea
mov
cmp
mov
mov
test
adc
push
in
test
jmp
and
and
adcb
inc
xchg
rol
test
mov
out
inc
sbb
pusha
jno
rcll
inc
mov
subl
mov
les
and
pop
out
lock
sub
hlt
aad
mov
xchg
or
ds
int
fcoml
adc
cmp
sbb
pop
xchg
mov
cli
in
xchg
aam
cmp
int3
or
je
push
add
aaa
cmp
cmp
jmp
adc
psubb
imul
in
nop
inc
xor
xor
lahf
push
int
lock
pop
outsl
ficoms
jbe
mov
pop
outsb
in
cmp
mov
call
stc
push
scas
jle
sub
ja
pushf
sbb
mov
pop
lods
out
loope
or
push
fistps
xchg
mov
sbb
int3
lods
subl
mov
leave
pop
dec
xchg
imul
sub
adc
fwait
mov
mov
shll
pop
xchg
dec
jb
test
xchg
push
dec
xor
or
pop
outsb
test
xor
sub
lock
xchg
jo
jge
lcall
std
inc
pop
push
xchg
push
arpl
das
inc
add
pushf
jo
jge
stc
cltd
icebp
jmp
enter
jmp
or
shlb
and
je
inc
jbe
je
xchg
adc
movsb
jbe
push
pusha
adc
cmpsl
xchg
jle
outsl
lods
pop
lock
out
outsb
add
pop
fistps
ds
loop
adc
hlt
ljmp
lods
aam
inc
dec
ja
jb
jo
pop
adcb
stos
mov
mov
das
mov
ret
dec
fidivl
jecxz
std
jl
xchg
call
sbb
movsl
mov
aas
popa
mov
or
mov
xor
mull
out
mov
cmpsb
ljmp
pop
or
inc
cmc
je
hlt
or
scas
push
in
int
gs
stc
mov
dec
mov
lret
leave
mov
pop
pop
icebp
or
jge
fldenv
mov
cmpsl
imul
dec
insl
sbb
les
outsl
cli
add
or
mov
shrb
mov
xchg
xor
loopne
lods
lret
xchg
pop
jl
addr16
pop
iret
jge
jb
sbb
push
out
xchg
in
xchg
movsb
cmp
movsl
jnp
jo
xchg
cli
cmp
push
jb
xchg
xchg
xor
aas
lea
jnp
stc
pop
cmp
into
inc
ja
lret
jns
jae
push
xchg
ret
daa
dec
mov
pop
data16
movsl
mov
mov
xor
pop
dec
mov
sbb
jecxz
sbb
pop
push
cli
leave
dec
sbb
xlat
sbb
sbb
hlt
add
lock
inc
aam
pop
dec
std
cmp
leave
inc
nop
sahf
cmp
mov
push
dec
aad
push
lock
sub
dec
ret
mov
pop
test
mov
aad
push
or
aad
add
xor
out
jbe
mov
lcall
sub
cmp
mov
add
push
arpl
xor
cli
loopne
jo
fcompl
test
mov
pusha
addb
cltd
mov
jo
and
lds
adc
mov
add
or
loop
jns
rdpmc
and
les
lods
loope
push
mov
xor
test
das
dec
mov
loopne
push
add
int
cmp
jns
adc
cmp
shrb
iret
jo
fbld
das
rcrb
shr
hlt
mov
sbb
rcrb
push
mov
xor
dec
imul
push
gs
inc
push
aad
lret
mov
js
dec
jne
pusha
and
mov
and
mov
dec
fcmovu
mov
enter
pop
lods
sub
mov
push
mov
or
jno
and
test
mov
rclb
jo
jo
mov
inc
in
popa
cmpsl
pop
test
mov
mov
out
mov
pushl
in
jmp
outsl
std
dec
inc
cli
and
mov
cmp
pusha
cmp
lea
fdivs
dec
aam
cmpl
int
int3
dec
imul
adc
mov
in
lahf
icebp
jne
xor
pop
pop
or
fadds
push
test
aam
sbb
and
shll
and
repnz
shr
loop
out
cwtl
cltd
or
push
hlt
mov
pop
leave
testb
cmp
cli
rorb
xchg
cmpsl
ds
ja
popf
sbb
call
and
and
pop
and
pop
or
stos
dec
loopne
push
fisttpl
dec
pushf
popa
in
fdivrs
cwtl
inc
xor
adc
xor
les
mov
fcos
ficomps
or
and
or
loop
sbb
arpl
jl
cld
adc
sbb
in
sahf
pop
xchg
push
mov
imul
xor
adc
in
mov
lds
jp
test
nop
xchg
pop
jle
cltd
popa
push
gs
adc
out
xchg
idiv
add
add
xchg
lea
cwtl
les
push
adc
mov
and
xchg
nop
xchg
add
mov
minps
xlat
jno
sub
or
sti
in
andb
icebp
mov
in
xor
mov
js
fmull
push
cmp
aad
add
loop
inc
mov
lods
adc
sbb
and
sub
jmp
loope
add
loop
test
jo
jecxz
fwait
mov
js
push
adc
inc
insb
mov
fsubs
icebp
sbb
mov
dec
jns
jo
inc
jbe
in
bound
add
lcall
sub
mov
push
gs
cmc
sub
sarb
out
and
xlat
mov
enter
and
shl
addr16
pop
cmp
inc
fcoml
lcall
inc
sbb
xor
jnp
mov
cltd
pushf
bound
mov
fcmovnbe
repz
mov
pop
aam
and
imul
lcall
fdiv
fsub
jbe
out
pusha
adc
cwtl
dec
call
add
or
lea
shlb
pop
sbb
outsb
je
clc
inc
pop
mov
jmp
les
mov
lods
dec
loope,pt
repz
mov
pusha
pop
movsb
adc
scas
testl
rorl
adc
lret
fimuls
mov
stos
jp
insb
or
scas
js
add
xor
adc
sbbb
lea
jno
xchg
das
xchg
inc
mov
fnstcw
or
cmp
lods
mov
jl
and
inc
scas
fwait
pushf
pop
lock
push
imul
orl
test
sub
dec
icebp
fidivrs
psubw
pop
into
mov
sub
out
mov
dec
xchg
cmpb
push
sbb
outsb
inc
daa
loope
lea
push
subps
or
dec
loopne
inc
inc
dec
or
jmp
std
pop
insb
inc
adc
int3
mul
adc
ds
mov
mov
xchg
sarb
fcmove
mov
xchg
lahf
enter
aaa
das
and
je
lods
or
cmpb
mov
pop
and
out
or
lods
stc
sub
pusha
aam
cmp
data16
jg
stc
jl
in
aas
pmaxsw
jo
pop
push
mov
cmp
test
adc
jp
mov
push
loopne
inc
not
adc
inc
adc
pop
sbb
divl
mov
fists
push
push
addl
cltd
adc
cmp
pop
sub
sbb
scas
sub
xchg
mov
push
cmp
pusha
xor
popf
sbb
cmp
mov
int3
testl
mov
fstl
and
pusha
in
aam
rol
sub
push
repnz
fdivs
ss
outsl
repz
inc
cmp
sub
fmulp
jg
xor
or
jno
sahf
xor
dec
sbb
fisttpl
cmp
sbb
mov
push
mov
inc
test
or
pop
cltd
loopne
sbb
js
xor
pop
mov
jnp
push
into
scas
ss
vpmullw
out
test
imul
test
jp
shl
int3
aas
mov
adc
dec
inc
ds
push
adc
inc
lea
out
push
push
jge
xchg
and
inc
jmp
ljmp
or
sti
cmp
sti
xadd
jbe
addr16
addl
cltd
adc
mov
in
aas
sub
imul
stos
xor
mov
orl
std
test
add
jge
test
repz
loopne
sarb
mov
sbb
adc
xchg
call
dec
int
xchg
push
pop
inc
jae
sub
sbb
ss
fimull
xor
loope
cmp
inc
add
scas
pusha
popf
jae
pop
jp
stos
sub
sbbb
mov
mov
sbb
jmp
icebp
repz
and
data16
or
cmpsl
fwait
cmp
arpl
test
mov
cmovns
sbb
pop
mov
enter
mov
in
mov
push
inc
adc
jecxz
or
add
iret
pop
scas
filds
andb
inc
xor
cli
fcomip
shlb
or
push
sarb
rolb
insl
dec
jecxz
cmpl
rorb
ficomps
adc
cmpl
pop
sub
mov
dec
shll
ret
ret
push
xchg
mov
mov
add
push
jle
outsb
push
dec
enter
push
scas
dec
shl
and
xchg
leave
in
call
rcl
xchg
xchg
hlt
or
xchg
je
lods
and
push
mov
jmp
repz
rcr
fldenv
in
lcall
insb
push
cs
xor
dec
sbb
movsb
sahf
call
es
pop
mov
int
out
sub
adc
pop
jo
xor
popa
loop
loope
mov
mov
adc
lea
mov
inc
and
xor
xchg
lret
push
sub
cmp
dec
inc
es
mov
lods
add
pop
sub
inc
loopne
popa
push
lret
xlat
xchg
enter
call
jg,pn
ss
stos
cmp
rcr
jmp
stos
jno
inc
mov
mov
push
in
mov
add
les
stos
sub
dec
rcr
cmpsl
imul
or
mov
add
fstpt
test
ret
and
test
pop
sub
dec
gs
add
mov
test
les
shll
loop
shlb
xchg
jbe
fists
or
imul
xor
dec
dec
push
stos
dec
hlt
in
insl
es
dec
push
fwait
ret
dec
lock
rcl
rcrb
std
dec
fbstp
cmpsl
cmp
and
daa
ljmp
ds
jns
push
jg
lea
insb
orb
scas
mov
pop
or
xchg
push
jle
or
loopne
sbb
push
add
cmp
xor
fidivrs
div
loop
dec
loopne
sub
push
jno
int
ficomps
xor
insb
push
add
and
call
in
lret
insl
arpl
outsb
and
imul
fs
shr
cmpsb
imul
adc
and
add
mov
mov
lods
scas
push
xorl
cltd
push
push
push
in
adc
nop
pop
ficompl
and
dec
clc
pushf
ret
dec
jmp
into
push
xorl
sbb
loop
push
jne
mov
mov
cmpsl
adc
cwtl
or
add
jo
bound
movsl
jmp
loop
mov
test
sbb
clts
addr16
sbb
sub
sbb
xchg
fidivl
dec
stos
ss
movsl
sbb
push
das
sbb
mov
lea
leave
imul
lahf
inc
imull
add
out
cli
xor
dec
pop
sub
adcb
xlat
jp
enter
pop
and
fcomps
and
fsts
sub
mov
add
adc
pop
imul
xor
sar
loopne
mov
adc
cmp
filds
push
outsb
lret
xor
mov
outsb
sbb
stos
adc
cmp
ss
and
fs
inc
fmull
ljmp
in
repnz
loopne
xchg
mov
mov
andl
outsb
das
xchg
push
sub
nop
dec
sbb
repz
dec
mov
incl
mov
add
cmp
stos
xchg
lea
inc
ret
int3
sub
pop
pop
decb
es
cmp
popf
mov
push
out
or
icebp
cmp
inc
test
lret
mov
icebp
insb
mov
sub
sub
rcr
clc
jp
mov
push
sti
mov
sub
mov
fidivrs
ret
sub
shl
lods
ljmp
add
push
mov
push
and
out
xchg
xor
jle
in
stos
pop
lea
mov
xchg
push
test
movsl
xor
into
mov
inc
fsubrs
rep
push
mov
arpl
mov
mov
loop
popa
cwtl
and
jae
inc
sbb
adc
movsb
mov
and
pop
movsb
enter
loopne
xchg
xor
icebp
dec
push
int
ljmp
ja
ss
insl
shrb
inc
and
test
into
test
sbb
xchg
fisubl
insl
sbb
mov
dec
hlt
ds
ss
rclb
mov
fisubl
es
insl
leave
sbb
mov
iret
outsb
push
fsubrp
outsl
pop
mov
or
xchg
and
aam
dec
mov
mov
inc
inc
roll
jmp
or
ss
dec
xchg
dec
or
fists
inc
sti
fidivrs
mov
inc
push
enter
std
jmp
push
jl
cmpsb
ds
xchg
jns
mov
mov
jmp
or
jp
xchg
or
mov
ljmp
cmp
hlt
stos
test
outsl
nop
sbb
xchg
aam
or
lock
in
dec
shll
jmp
es
dec
cmp
vpsubusw
pop
loop
leave
mov
push
xor
mov
jb
jmp
cmpsl
es
jno
lcallw
push
pop
loopne
cwtl
inc
aam
lods
xor
enter
xor
mov
stos
add
lds
mov
or
and
fidivrl
mov
hlt
sub
xor
xor
dec
inc
jnp
into
dec
call
push
jg
ret
xor
out
jp
dec
mov
jne
jnp
dec
add
test
fmull
inc
hlt
std
xor
jo
xor
int
add
mov
push
inc
imull
inc
loopne
cmp
mov
iret
inc
dec
ficoms
int3
inc
or
in
in
test
in
jg
fimuls
ljmp
add
fsubrl
scas
ljmp
mov
pop
fnsave
and
push
test
stc
fcompl
push
movsb
cmp
or
pop
inc
ja
repz
lret
lea
mov
dec
fildll
test
push
dec
sbb
push
pop
sub
pop
pop
dec
cmp
test
lahf
sub
sub
cmp
jns
add
xchg
stos
ss
std
mov
add
jmp
cmp
pop
sarl
jl
cmpsl
fnstenv
jmp
and
push
mov
js
enter
addb
adc
mov
cmp
xchg
mov
mov
clc
fsubs
int3
imul
add
outsl
adc
loope
repz
mov
lret
lea
cmc
orl
jne
pop
outsb
ret
ljmp
je
pop
hlt
dec
inc
bound
cmp
push
mov
loopne
sub
rcr
out
mov
je
xchg
cmpsb
jg
sahf
sti
repnz
jmp
cld
test
ret
jae
jg
fxch
lods
push
scas
mov
fwait
insb
jae
push
orb
adc
ror
repnz
push
sahf
movsl
add
and
ja
lcall
mov
mov
inc
xlat
int
mov
sbb
call
rcll
mov
sub
repz
pop
int
cltd
ret
out
add
xor
jo
xor
cmp
sbb
jns
sbb
jnp
dec
lds
sbb
movl
sub
jmp
or
adc
std
test
aad
and
inc
adc
aaa
adc
pop
test
adc
push
dec
xchg
push
and
rcr
subb
into
adc
je
scas
je
mov
pop
mov
aam
pusha
imul
movsl
dec
mov
ljmp
nop
xorl
sysexit
inc
in
mov
ljmp
lahf
jno
sbb
sti
in
xor
lret
ror
je
aad
ret
in
inc
aaa
jg
sub
int
leave
jle
dec
or
push
inc
pop
popa
jnp
sbb
jns
das
push
cmp
pusha
ja
sub
cltd
ja
fsub
ds
das
sbb
cmc
negl
call
or
in
jmp
add
out
aas
adc
enter
ljmp
fwait
adc
and
sahf
bound
repnz
rorl
xor
out
sti
add
repz
in
push
push
cmp
cmp
pop
loope
adc
aaa
xor
sarb
add
dec
mov
loop
add
xor
add
add
aas
mov
dec
cltd
icebp
push
sti
sub
sbb
fstpl
cmp
cmpb
adc
sub
outsl
test
cmp
neg
pop
lock
xor
and
and
and
mov
sarb
mov
lock
loop
les
shrl
add
jl
dec
dec
inc
and
das
pop
std
inc
sub
imul
jnp
insb
pop
jg
adc
xchg
mov
adc
xchg
jmp
stc
movsb
adc
leave
xchg
ret
sarl
icebp
out
frstor
lcall
cli
popf
loopne
add
inc
jmp
cs
or
movsb
mov
addb
and
cmp
scas
mov
pop
add
xchg
jo
mov
add
lds
push
adc
sahf
add
add
push
cmp
into
test
daa
stc
xchg
fists
sbb
add
testb
in
adc
out
mov
pusha
sti
sbb
xor
cs
xchg
cmpsl
jp
cli
cmp
jg
scas
or
enter
stc
stc
xorl
mov
push
cmp
jnp
pop
adc
rcll
and
jg
pop
std
dec
in
les
xchg
sbb
jge
push
loopne
xchg
pop
add
lods
ret
dec
mov
int3
in
sbb
sub
mov
xchg
mov
mov
jae,pn
sti
mov
mov
jb
pop
ja
fsin
popa
pop
or
or
jo
jo
sbb
lret
test
mov
fwait
push
push
push
bound
stc
mov
les
out
xor
out
xor
or
xor
jo
addr16
mov
push
shll
fldt
ljmp
stos
bound
inc
xor
xchg
ret
or
ret
int
es
mov
xor
mov
pop
lea
push
ret
dec
mov
dec
sarb
shrl
es
mov
push
push
andb
shrb
sahf
mov
addr16
rorl
ss
mov
jp
cmp
inc
push
xchg
cmpsl
aas
adc
cmp
mov
outsl
adc
jecxz
xlat
stos
fiaddl
add
mov
dec
lock
and
les
xor
clc
push
sub
ss
call
shll
mov
call
int
leave
outsb
jne
mov
push
inc
mov
add
or
jo
sub
or
popf
ja
in
popf
or
inc
push
sti
xor
lcall
cmp
fldcw
push
push
sbb
add
repnz
xchg
add
outsl
add
out
dec
call
inc
jecxz
push
xlat
andl
fcmovnu
xlat
ret
gs
aaa
in
sti
mov
push
orb
lahf
cmc
out
mov
xchg
or
rcll
subl
outsl
push
mov
pop
stos
ss
mov
sub
mov
inc
add
or
jns
add
jle
sub
movsb
xchg
insb
lret
stos
xor
out
mov
cmp
in
int3
test
aam
inc
lods
dec
push
add
loop
pop
stos
cmpsl
cmp
in
orl
scas
mov
inc
jae
sbb
data16
add
mov
inc
jb
scas
scas
pop
repnz
lahf
in
sbb
popa
movl
jae
lcall
orb
dec
in
pushf
mov
rorl
lret
mov
fdivs
xchg
inc
cmpsb
sar
clc
sbb
fildl
pop
xchg
inc
lods
xor
in
pop
push
clc
push
jl
data16
or
add
add
mov
out
mov
push
lea
lret
mov
sti
cmp
pop
cmp
xchg
in
ljmp
or
andl
add
mov
adc
jnp
jmp
cmpsl
cmp
sbb
fistps
inc
xor
and
jbe
jae
aaa
mov
stc
out
test
jbe
repz
pop
sbbl
and
push
pop
cmpsb
jb
scas
ret
xor
cmp
sbb
sbb
shrl
lahf
loop
sbb
pushf
xchg
or
jo
js
mov
mov
cmp
stos
sbb
aam
mov
or
jl
inc
mov
je
lahf
test
mov
in
repnz
sahf
popa
aas
shl
pop
push
imul
out
jbe
das
daa
inc
add
sahf
dec
ljmp
lret
push
xchg
movmskps
xchg
xor
mov
add
test
rcrl
sbbl
or
ret
insl
cwtl
out
mov
shlb
mov
fldcw
cmpsl
mov
cli
enter
dec
push
jo
xchg
sub
fs
add
stos
test
xchg
push
hlt
sbb
fcoml
mov
push
icebp
pop
xchg
fidivrl
icebp
movsl
xchg
or
sub
fldcw
or
mov
lods
out
xchg
add
mov
fidivl
mov
in
inc
out
push
fiaddl
hlt
imul
xchg
and
mov
ds
jo
mov
enter
fisubrl
in
je
stc
jmp
xor
adc
aaa
lods
faddl
cmp
insl
jmp
xorl
in
cmpsl
sbb
movsb
xchg
notl
sub
or
mov
test
add
insl
jnp
jo
movsb
mov
inc
pop
les
mov
mov
and
pop
test
sub
std
or
push
push
scas
test
fdivs
mov
jne
or
sbb
mov
add
mov
rcr
xor
xchg
cltd
inc
cmp
jnp
cld
inc
test
jne
pop
test
call
pop
sahf
test
mov
lds
in
or
pop
out
mov
test
rcl
add
bswap
or
mov
pop
and
into
or
add
arpl
mov
jno
pop
add
scas
shrb
dec
inc
mov
inc
popf
sarb
mov
mov
test
inc
push
xchg
cs
mov
nop
jl
jecxz
push
data16
push
mov
and
mov
pop
enter
mov
mov
jl
outsl
repz
dec
outsl
addr16
lods
mov
iret
test
lahf
dec
lcall
and
nop
fsubs
int
mov
rclb
pop
fwait
inc
fcompl
dec
add
cwtl
add
rclb
push
sub
sti
stc
and
testl
inc
rcrb
pop
mov
cld
dec
test
sbb
pause
inc
int3
fwait
dec
xchg
stos
clc
cli
sub
sub
andl
cmp
jmp
mov
test
mov
cld
or
cmp
push
sbb
cli
mov
ljmp
mov
sbb
stc
test
jp
outsl
bound
mov
push
lock
inc
dec
push
push
pop
mov
dec
inc
inc
mov
mov
scas
ret
sub
mov
dec
icebp
dec
je
in
dec
lods
jmp
mov
stos
push
icebp
xor
cmpb
and
test
mov
mov
jbe
dec
outsb
xchg
lret
mov
or
and
loopne
iret
lret
adc
dec
enter
add
lahf
ret
lcall
cmpsl
adcb
xchg
icebp
in
sub
dec
lret
insl
test
xchg
in
addr16
cmp
cwtl
dec
jb
jns
inc
mov
and
sbb
daa
pop
push
xor
sbb
pushf
fsubs
and
add
add
or
mov
inc
subl
inc
shlb
mov
xchg
loop
cli
mov
inc
sbb
int
mul
lahf
and
shl
mov
mov
sub
dec
cmpsb
pop
sub
sbb
inc
jl
xchg
mov
dec
mov
in
ja
ljmp
sbb
lods
jo
pusha
mov
fidivl
or
std
xchg
xor
shl
inc
mov
lods
enter
sar
cltd
rclb
fstps
and
fistpl
cmpsb
pop
xor
mov
das
mov
aad
or
dec
imul
aam
pusha
fs
les
fisubs
fcompl
test
sub
js
add
mov
mov
add
or
out
lock
or
push
pusha
pop
inc
xchg
dec
cmp
push
mov
lcall
or
jne
add
pop
add
int3
inc
xchg
xor
push
adcl
or
xchg
jge
dec
mov
and
and
push
cwtl
dec
js
daa
cmpsb
int
mov
push
insl
setno
dec
cmp
jo
add
and
ds
lahf
pop
or
sbb
pop
mov
sarl
and
bound
cmp
add
test
mov
ds
in
pop
inc
mov
mov
std
mov
dec
jmp
mov
dec
test
jae
cmp
mov
jmp
cmpsl
imul
adc
rcrl
push
lret
push
jmp
adc
inc
jp
jo
pop
lea
sbb
repz
xor
lods
insl
xor
xor
push
dec
andb
dec
outsl
dec
inc
adc
mov
mov
pop
jnp
daa
out
mov
push
int3
dec
aad
sarl
pusha
add
pop
out
xchg
les
in
dec
imul
xlat
into
xchg
mov
fstps
cmp
les
subb
dec
vaddsubps
jbe
sub
and
jle
cmp
inc
rolb
call
out
data16
cmp
or
push
and
sub
jae
mov
icebp
outsb
fs
rorl
leave
ljmp
cld
fs
push
es
inc
fmul
add
cbtw
pop
xorb
xchg
aaa
aas
or
mov
shll
mov
sbb
and
lcall
jmp
rcll
push
ds
mov
mov
pusha
jo
jle
xor
icebp
xor
lret
aas
jnp
adc
jp
sbb
adc
cmp
mov
sub
push
pop
repnz
gs
add
cmp
xchg
hlt
push
xchg
stc
lods
lea
xchg
xchg
leave
shl
outsb
jb
out
jmp
jg
scas
xchg
jne
int
xchg
mov
mov
jl
add
aam
fiadds
cmp
out
xchg
or
jg
jbe
jg
jmp
dec
incb
cmp
sub
leave
sti
ljmp
mov
je
insl
je
and
or
sbb
arpl
faddp
dec
mov
out
xlat
pop
int
or
lods
scas
push
cmpsl
stos
xor
mov
sub
aaa
jge
dec
scas
add
aam
add
xor
xchg
mov
pop
pop
das
push
mov
push
int3
mov
arpl
loopne
jo
sub
shl
ret
push
mov
pop
addr16
jg
dec
push
fimuls
lods
repz
and
mov
adc
fldenv
xchg
jae
add
mov
xchg
in
push
adc
pop
xchg
mov
daa
ja
cwtl
cld
add
adcl
lea
xchg
mov
and
pop
mov
lahf
add
push
loop
xchg
test
out
inc
ja
sub
push
sahf
and
mul
popf
xchg
sub
aad
or
cmp
ret
shlb
push
add
xchg
repnz
and
ficompl
pusha
mov
icebp
lret
add
fsubl
and
xchg
jo
andb
lock
fcompl
das
inc
mov
dec
je
fwait
in
test
scas
xor
xchg
pop
push
xor
jno
adc
mov
mov
pop
mov
sahf
mov
push
sbb
dec
movb
dec
fstpl
push
clc
xlat
daa
movsl
lea
add
pop
pop
lods
mov
xor
out
xor
dec
gs
push
inc
rsm
enter
in
add
lcall
inc
inc
movsl
push
mov
or
xchg
mov
jb
fstpl
xchg
jns
aad
sbb
mov
mov
in
jo
jb
aam
test
add
dec
xor
out
arpl
sub
bound
mov
fnstcw
icebp
mov
xor
leave
jl
jae
xorb
insb
xlat
and
out
xor
cmp
cli
mov
mov
scas
pop
sub
in
mov
in
cs
xor
idiv
test
sub
pop
mov
inc
lahf
cmpsb
xorl
mov
dec
call
cwtl
enter
mov
push
mov
sbb
shll
or
pop
mov
dec
bswap
xchg
cmpsl
cmp
call
xor
mov
data16
xchg
call
or
and
das
aaa
xor
int
iret
aas
ds
cmp
jnp
jl
adc
add
imul
adc
popf
sub
adc
lods
cmp
add
xchg
jl
std
or
in
sbb
jmp
aam
rcr
ds
ss
push
mov
ficomps
sbb
aam
dec
or
loope
jmp
cmc
xlat
xor
movsl
sub
enter
dec
and
iret
pusha
inc
shrb
jmp
xchg
or
xor
fstp
xchg
mov
adc
mov
movsl
repz
lcall
arpl
mov
in
fcos
fabs
test
push
pop
fsub
sub
adc
inc
rcll
jg
sub
in
adc
stos
test
sub
pop
stos
insl
xchg
mov
adc
adc
dec
in
hlt
shlb
cld
cbtw
data16
ja
aaa
outsb
je
std
repz
jg
lds
push
js
outsb
xlat
gs
sub
pop
mov
xor
lea
jbe
sbb
jns
sahf
div
inc
push
leave
ja
sbb
sti
stos
loop
jmp
es
pop
pushf
fwait
ret
test
or
inc
add
ficomps
push
leave
mov
filds
ret
xor
mov
or
jns
dec
rorl
call
cmp
or
loope
and
cmp
arpl
fimull
sti
or
iret
cmp
dec
mov
sbb
and
pushf
scas
mov
xor
jb
cmp
pusha
cmpsl
push
lods
scas
jo
push
jg
add
cmp
mov
sub
cmpl
sbb
mov
scas
mov
mulb
es
test
pushf
out
sub
push
mov
arpl
jnp
std
ja
mulb
mov
insb
pop
pop
adc
je
push
sbb
leave
dec
push
test
cmp
pop
aas
daa
insl
adc
or
mov
repz
inc
and
push
fadds
pop
xorb
sti
pop
jae
xchg
stos
cmpsb
mov
scas
out
aam
fdivs
inc
or
inc
ja
mov
fcomi
test
adc
clc
mov
xchg
fwait
xchg
push
je
movsl
dec
mov
dec
cltd
hlt
mov
nop
jns
mov
jl
adc
sarl
add
jp
pop
andb
xchg
loopne
movsb
repnz
stos
inc
pop
sub
mov
add
cmp
subb
fistps
int3
push
in
repnz
xlat
push
aas
sar
orl
push
cwtl
jp
adc
ss
call
in
mov
movd
push
pop
sbb
fsubrp
sub
push
and
bound
adc
loope
rorb
mov
mov
hlt
loop
outsl
test
mov
shufps
dec
insl
das
mov
pop
rcr
and
xor
sahf
pop
pop
xchg
jbe
jo
cltd
mov
adc
sbbl
pop
test
mov
mov
je
icebp
ja
loope
stc
or
jne
fsin
lcall
scas
ret
and
push
xchg
in
into
aas
shl
lcall
jle
nop
popf
fwait
xchg
fimull
mov
adc
stc
xor
mov
ret
mov
mov
mov
jne
es
neg
pop
pop
test
jb
outsb
mov
out
jns
or
inc
out
stos
inc
mov
pop
cs
aam
xor
inc
dec
in
inc
sbb
int
das
popf
mulb
inc
adc
pop
dec
cmpsl
fidivrl
mov
pushf
aaa
cmp
cmp
mov
lods
jne
lcall
lret
or
jnp
push
cwtl
test
aad
xor
pushf
cli
ljmp
xchg
scas
shl
add
fstps
insl
mov
into
and
jbe
jp
pop
pop
cmc
jge
rcl
jnp
sbb
subb
stos
mov
xor
jmp
mov
mov
stos
xchg
push
repz
xorb
pop
lret
jne
jle
adc
fstl
push
rolb
mov
bndldx
mov
mov
adc
out
nop
cmp
or
mov
orl
adc
enter
leave
dec
test
mov
aad
xchg
or
leave
out
ljmp
shl
test
sub
sbb
push
add
shrb
cmp
adc
and
outsl
xchg
jne
scas
iret
push
jns
fldcw
mov
dec
dec
xlat
adc
stc
mov
fs
ljmp
jmp
sarb
vmovss
popa
mov
xorl
cld
inc
push
sbb
jno
jo
in
push
add
sub
sub
or
int
sub
scas
enter
mov
mov
pop
stos
cmp
stos
adc
adc
xorb
push
xor
sbb
addr16
mov
cwtl
repz
cli
popf
repz
in
sub
mov
inc
sbb
sbb
scas
mov
lret
jecxz
adc
mov
daa
sbb
icebp
sti
or
dec
call
out
repz
pop
lret
cld
sub
das
mov
jno
cmp
repnz
lods
lods
jbe
lahf
popa
inc
mov
xchg
sub
sti
or
shrl
int
cmp
cmp
sbb
in
into
cmovns
mov
jo
cli
loop
arpl
std
inc
push
loopne
or
jb
push
xchg
int
add
ds
out
cmp
jo
shll
lock
addr16
add
inc
jecxz
and
mov
mov
add
xor
sub
jecxz
sub
adc
fxch
pushf
mov
lret
lods
or
jb
jbe
test
jl
mov
push
outsb
fucomp
cmc
adc
repnz
dec
xor
xor
inc
test
lea
jl
pop
les
xor
xchg
push
xchg
je
pop
cld
jno
jne
xchg
inc
test
aam
int
add
add
or
xor
add
fimuls
cmp
hlt
pushf
data16
pop
aaa
jecxz
stos
lock
mov
popa
pop
or
cmp
mov
pop
shl
jle
in
push
push
repnz
mov
hlt
pop
daa
xchg
fidivrs
cmp
inc
stos
test
out
jmp
inc
jo
mov
cld
pop
sti
add
lahf
sarb
es
sub
sbb
lods
cmp
stos
or
mov
inc
and
mov
mov
sbb
sbb
out
fmul
cmp
in
lods
mov
push
fwait
pop
lds
jg
pop
out
sub
pop
mov
addr16
iret
je
and
movsl
cmp
xchg
popa
sbbl
or
outsb
pop
mov
sub
add
test
in
cmp
fwait
jle
dec
aam
rclb
loope
mov
inc
bound
jno
cwtl
mov
jge
pop
inc
leave
fwait
inc
imul
xchg
jge
jle
lea
jmp
mov
xor
clc
pop
movsb
or
inc
adc
dec
and
sub
xlat
dec
xchg
fwait
push
jge
mov
rolb
loopne
icebp
out
inc
shlb
jp
pop
mov
lret
incl
out
xchg
cmp
inc
mov
mov
popa
movsb
dec
mov
or
xchg
xor
lret
inc
jno
fsub
sub
in
cld
pop
adc
sbb
dec
dec
lods
cmpsb
add
fidivrs
adc
sub
inc
and
icebp
loopne
stc
fmuls
xchg
je
data16
pop
mov
mov
sbb
in
pop
cmp
test
shlb
int
rorb
std
mov
sub
and
push
clc
sbb
jns
ficomps
mov
xchg
add
jns
dec
xchg
daa
out
into
jns
xor
mov
mov
lods
lods
lret
dec
xor
out
ret
xor
imul
pop
jl
cmp
insb
or
push
push
lret
jns
leave
sahf
and
dec
cld
and
out
imul
dec
cmp
mov
loop
dec
stos
daa
adc
jp
push
xchg
fidivrl
sbb
and
enter
popf
jno
out
mov
or
push
and
loope
outsb
adc
jle
add
mov
or
jb
sti
push
jl
cld
dec
mov
cmc
dec
movsb
dec
scas
mov
push
jb
mov
addr16
jo
mov
xor
lahf
mov
jns
push
mov
fs
or
xor
cmp
xor
or
mov
out
imul
clc
xchg
loop
fisttps
pop
fisubs
fs
shrb
cwtl
lea
int3
xchg
cld
and
in
sub
cmpb
stos
xchg
sub
lea
pop
push
and
lahf
mov
outsl
cmpsl
ja
test
cmp
in
or
shrb
mov
in
cmp
sbb
pusha
pop
xchg
pushf
cwtl
movb
notb
push
mov
scas
jecxz
push
leave
cli
push
ds
push
or
enter
push
cmpsl
les
fcomps
inc
xchg
sbb
out
fsub
mov
push
jg
stos
sarb
lock
xchg
add
jo
pushf
adc
inc
stos
pop
mov
idiv
aas
es
inc
push
mov
movsl
shll
call
shlb
pop
cmp
jne
mov
dec
sbb
int3
xor
loop
mov
adc
ret
cwtl
or
loopne
ret
mov
imul
xor
jmp
mov
dec
adc
jne
insl
xor
ss
arpl
das
test
sti
sub
lea
cs
pop
adc
fcos
loopne
jbe
mov
das
out
test
or
in
int3
ds
cmpsb
cwtl
test
fidivrs
and
insb
test
ja
mov
xor
into
xchg
arpl
out
cmp
rcr
pushf
jg
jnp
push
mov
fidivl
pop
mov
push
xchg
out
cmp
mov
sub
ljmp
mov
jg
bound
fwait
mov
adc
in
or
lock
fucom
jo
mov
jno
xchg
xchg
cld
inc
scas
xor
xchg
or
mov
lret
pop
or
gs
sub
mov
mov
add
or
jecxz
out
sub
fwait
mov
hlt
mov
loopne
jmp
or
mov
data16
frstor
pop
lret
mov
jle
lret
mov
pop
push
fisttpl
leave
and
lds
popf
push
repnz
fsubl
ret
push
cmc
dec
mov
scas
and
hlt
dec
pop
xchg
xchg
hlt
and
pop
sbb
clc
js
inc
pop
or
add
push
lods
movsl
ja
lahf
xor
out
pop
stos
sbb
movsl
inc
xchg
xchg
inc
sbb
mov
adc
mov
jmp
adc
pop
mov
popf
sub
jo
rorl
hlt
mov
cmp
xlat
in
outsl
xor
lret
cmp
loope
shrb
pop
pop
sbb
inc
imul
aaa
inc
mov
push
adcl
loope
or
dec
enter
xchg
jg
mov
cmp
push
sub
sahf
pop
cmc
cs
push
fwait
mov
cmp
push
push
pop
or
jmp
cmp
mov
scas
pop
ljmp
jo
or
rorl
mov
xchg
push
stos
test
mov
inc
ljmp
aad
xor
sub
or
mov
or
rorb
cli
notl
jmp
and
sub
daa
mov
inc
pop
ja
mov
int3
aas
xor
mov
and
shrl
shll
or
shrl
stos
int3
movl
aas
in
pushf
and
ja
add
or
test
xchg
and
or
test
inc
jo
push
ljmp
inc
push
js
scas
or
std
stos
or
cmp
jo
cld
ret
lock
testb
or
dec
jmp
mov
imul
and
je
mov
dec
cld
or
mov
outsb
pop
push
sbb
pusha
jno
aad
dec
sbb
adc
cmp
or
movb
rclb
push
cmc
xchg
icebp
popa
xchg
aad
js
fs
or
cmp
mov
arpl
bound
xchg
jle
cmpsl
js
dec
cmp
movsl
xchg
xor
mov
insl
lahf
inc
push
aas
mov
push
enter
dec
int
bound
pusha
pusha
mov
aad
mov
jmp
pusha
rcrb
push
dec
fsubs
arpl
or
int3
pop
mov
mov
imulb
jbe
and
and
mov
xor
mov
push
loopne
or
push
sarb
daa
and
call
xchg
pop
pop
test
pop
fists
into
fs
inc
dec
addr16
roll
jmp
pop
inc
adc
sub
xchg
xchg
cmp
sub
adc
pop
enter
fxch
sbb
shlb
push
ss
out
out
mov
ja
cmp
cmp
mov
adc
mov
fdivl
xlat
lds
mov
cmp
push
lock
cmp
mov
test
adc
add
inc
mov
lret
or
pusha
inc
and
loopne
rorb
push
xor
jae
mov
push
cmp
adc
adc
andl
pushf
dec
out
mov
xchg
sbb
mov
cmpsl
dec
sbb
mov
repnz
cmp
addr16
out
pop
test
sub
inc
push
daa
fistpl
rorl
push
and
ret
loope
dec
scas
push
sub
into
pop
add
xchg
sub
push
maxps
imul
push
and
xor
nop
dec
sub
xchg
scas
add
fs
mov
pop
cs
loope
dec
xlat
push
cmp
stos
fistps
xor
insb
or
mov
push
cmp
and
cmp
loopne
pop
orb
outsb
imul
pop
jecxz
sub
mov
jmp
push
bound
xchg
cmp
ret
outsl
sbb
es
iret
mov
jne
shll
fdivrs
data16
sti
jg
ss
xchg
test
sub
cs
fistps
mul
and
push
fiaddl
fs
jp
xchg
push
jae
xor
xchg
fucomp
repz
push
cmpsb
arpl
xchg
cmc
pushf
xchg
or
in
jle
dec
mov
or
inc
stos
mov
dec
pop
popa
mov
js
sbb
scas
lods
jp
sbb
das
inc
bound
mov
loop
jle
aam
and
cmpsb
adc
mov
and
rolb
jmp
jg
and
adc
xor
push
je
sub
out
jae
inc
and
jecxz
jl
loope
ss
mov
ljmp
or
inc
ret
push
mov
mov
fisubrs
and
mov
rorl
xor
pop
sub
jne
sub
pop
data16
dec
jmp
jbe
sahf
in
jl
xlat
adc
inc
jmp
loopne
jl
out
test
jne
std
clc
sub
and
inc
outsl
mov
roll
sahf
mov
mov
leave
jne
sbb
js
lret
push
popa
cmp
into
mov
into
or
movsl
loope
mov
mov
jg
pop
and
repz
int
aaa
int3
push
or
jo
jne
adc
mov
mov
inc
xlat
xor
dec
jnp
daa
sbb
and
fidivl
xor
psubq
les
dec
cmp
into
fstl
xor
sbb
adc
and
add
adc
mov
in
push
stc
stos
and
xor
cmp
aas
pop
dec
or
xor
mov
pop
mov
rclb
cmpb
test
push
imul
sbb
faddl
adc
pop
popa
sarb
jmp
ret
sbb
lcall
xor
xchg
test
mov
xchg
xchg
int
sahf
push
push
and
fistl
cltd
shl
and
sub
int3
push
pop
xchg
jb
out
push
jmp
dec
lods
jo
inc
and
mov
mov
or
xlat
inc
cmpsl
inc
or
cmpsb
outsl
movsl
es
mov
add
mov
dec
rorb
xchg
sub
ja
cld
repnz
in
push
xor
or
xchg
nop
fldcw
mov
mov
rorl
push
ficoml
mov
fwait
and
add
or
jno
sbb
stc
dec
cltd
sbb
stc
loopne
cmp
cld
mov
lret
cmp
xchg
xor
daa
cwtl
mov
lds
enter
mov
loope
ret
ficomps
inc
div
sub
cmpsl
cwtl
cmc
dec
hlt
sti
ja
inc
popa
lods
inc
outsl
pop
fistpl
cltd
jbe
dec
repz
ss
mov
push
adc
sub
leave
loope
or
dec
jb
mov
jnp
out
sub
mov
adc
mov
jp
mov
lods
imul
pop
dec
dec
nop
cld
jmp
sbb
adc
sub
sahf
sahf
cwtl
dec
or
nop
neg
sbb
shl
mov
pop
mov
and
imul
xlat
stos
ret
rcl
mov
ja
js
inc
xchg
jno
jne
mov
inc
pop
mov
sbb
add
stos
or
test
mov
std
mov
imul
sbb
and
ljmp
add
lahf
in
test
dec
sub
fidivs
adc
cmpsl
stos
lahf
aas
mov
adc
xor
mov
cwtl
mov
xor
lahf
js
sbb
dec
pop
sbb
cmc
jle
insl
fwait
sub
aaa
pushf
movsb
ss
sub
sub
aam
pop
ret
pusha
sbb
adc
xchg
push
dec
sub
add
xlat
and
in
add
mov
push
aam
icebp
in
aam
jge
or
adc
lret
fwait
push
mov
loope
idiv
pop
sbb
loop
pop
into
imul
popa
cmpsb
adc
subl
push
stos
jns
sub
jle
les
mov
push
pop
decb
xchg
adc
mov
rorb
push
inc
repnz
sub
cmpsb
push
pop
ficomps
mov
fstps
stc
outsb
jmp
es
mov
pop
cmp
xchg
xchg
lret
and
jae
pusha
or
inc
jae
push
and
fucomip
lea
in
adc
lret
xor
mov
cli
mov
mov
ds
enter
inc
out
rcll
fsubrl
xlat
or
fcoms
add
int
adc
enter
cmp
sbb
xchg
mov
stc
mov
sti
dec
and
mov
or
das
add
mov
cld
mov
xchg
lock
stos
loope
cmp
or
add
xorl
loop
fcomps
sub
jns
fidivl
or
dec
mov
roll
cmpsb
loope
adc
xor
push
movb
jmp
out
jmp
popa
fdivl
fstl
lds
lcall
push
testl
call
mov
addr16
outsl
stc
int3
mov
hlt
jno
aaa
insb
mov
lahf
and
inc
cld
leave
in
mov
pop
aad
dec
rorb
cmp
mov
out
and
orb
inc
sbb
stos
and
push
test
push
push
jb
jge
jmp
lret
sbb
insb
pop
ljmp
aaa
jb
lock
out
lods
insb
fwait
adc
in
mov
push
enter
fstps
insb
pop
loope
jg
idivb
fmull
add
icebp
lret
bound
iret
jl
mov
stc
pop
push
or
sbb
imul
jge
dec
or
jno
add
fisubrl
ret
sub
xchg
pop
jl
adc
jns
push
push
popa
xchg
push
mov
dec
outsb
clc
rorl
cmp
sub
out
push
stos
jnp
push
and
jno
jnp
lahf
xchg
in
and
stos
mov
test
nop
jb
fs
popa
cmp
sub
fdivrl
cmp
arpl
mov
aaa
je
stos
ljmp
dec
out
mov
lock
dec
pop
xchg
cld
cmpb
shll
imul
mov
test
xor
repz
xor
ret
push
scas
mov
mov
mov
and
pop
or
jmp
movsb
push
lret
dec
cmpsl
xor
or
imulb
scas
or
movsl
cmp
add
cld
xchg
sbbl
inc
fstps
hlt
jae
rol
ficoms
add
mov
addr16
rclb
mov
jbe
mov
jbe
inc
jns
das
cli
mov
and
sahf
inc
add
fbld
push
scas
jmp
push
jbe
inc
jge
data16
in
idivb
cmp
cltd
adc
jbe
adc
ljmp
rcrb
sub
clc
sarl
or
mov
cmp
int3
dec
out
push
dec
leave
imul
testl
test
data16
sahf
add
sub
xchg
push
xchg
push
seto
sti
hlt
ds
dec
xchg
push
sbbb
mov
fisttpl
jo
shlb
aas
mov
pop
inc
add
scas
jg
clc
xor
lcall
jmp
mov
jmp
dec
or
push
inc
das
call
mov
outsl
xlat
cmp
cmpsl
pop
add
push
int3
pop
outsb
dec
ljmp
mov
mov
pop
repnz
push
inc
add
inc
repnz
mov
popf
push
andb
cmp
xorb
jmp
pushf
in
or
loop
arpl
orl
fwait
push
mov
shrl
das
outsl
jb
arpl
push
add
xor
push
xchg
inc
mov
inc
test
testb
leave
bound
enter
jne
or
addb
mov
sar
scas
int
dec
cmc
xor
mov
sbb
add
dec
mov
bound
or
aad
pop
test
mov
cmp
je
insb
pop
mov
push
ds
in
sbb
push
lods
icebp
or
and
in
jno
cmpb
mulb
and
dec
and
cmp
sub
aaa
jg
lds
fisubl
jnp
push
push
jno
xor
adc
fidivrl
jb
in
sbb
dec
add
fwait
sbb
push
mov
sbb
xchg
gs
cmp
lods
cld
fimuls
fs
dec
cld
and
dec
ljmp
mov
add
xchg
movsb
inc
xchg
xchg
pop
xchg
scas
sbb
out
xor
pop
cltd
sub
mov
sub
inc
mov
or
lahf
pop
adc
xchg
hlt
xchg
jae
pusha
add
push
adc
imul
int3
pop
sbb
jle
sbbb
ljmp
jp
jge
cmp
psrld
fldt
push
movsl
ret
pop
aas
addr16
cltd
aas
movb
addr16
jnp
xchg
lahf
dec
repz
cmp
jp
pop
rcr
movsl
call
sbb
sbb
incl
out
pop
pusha
jl
dec
xor
gs
ljmp
decl
xchg
fimuls
data16
imul
xchg
jp
les
out
ret
jb
mov
loopne
movsb
push
ja
loopne
sbb
ljmp
jae
test
mov
mov
sbb
fimuls
sahf
and
mov
cmp
mov
mov
sbb
mov
jns
cmp
jno
fwait
sub
jo
es
sahf
xor
in
adc
push
dec
mov
mov
cmp
inc
and
idivl
outsb
xlat
je
xor
daa
sub
push
loope
dec
cltd
sti
pop
gs
out
sub
and
mov
lahf
icebp
inc
xor
mov
jge
mov
pop
into
insl
cmp
lock
ja
testl
pop
jbe
cmpsl
icebp
out
or
aaa
mov
lods
nop
pop
cmp
xchg
call
jp
addr16
mov
add
iret
dec
popf
rcll
jge
mov
repz
dec
test
dec
cmpsl
cmp
and
dec
xchg
and
inc
pushf
add
mov
dec
dec
es
jge
sbb
ss
fsubrs
hlt
xchg
and
push
inc
lea
insl
and
inc
repnz
outsl
divps
out
dec
add
xchg
cmp
and
test
mov
dec
sbb
sbb
lods
loope
mov
or
mov
cs
push
cmp
push
mov
mov
addr16
xchg
jecxz
cmpsl
xchg
push
jb
xchg
cmc
addb
push
inc
cmp
add
in
test
or
shr
faddl
jns
aaa
sub
lret
sbb
lret
pop
jbe
sbb
jnp
jmp
push
xchg
pop
add
cli
aam
and
lret
xor
pop
rorl
xchg
and
inc
rorl
xor
push
hlt
out
push
pop
arpl
dec
pop
cmpsl
jnp
rclb
or
xor
jecxz
loopne
sub
out
subb
loop
sbb
xor
mov
mov
mov
cmp
jns
pop
jbe
sbb
push
pop
mov
sbb
jnp
xor
mov
hlt
lret
out
jo
and
out
mov
mov
push
or
out
xchg
es
shll
das
ror
adc
fwait
popf
leave
add
outsl
pop
ljmp
cmpsb
jns
aad
mov
jae
cmp
mov
lcall
ficompl
pop
pushf
imul
mov
sub
inc
scas
ljmp
dec
inc
out
mov
stos
xchg
jnp
stos
jns
sub
cs
xor
dec
int
or
negb
mov
data16
jno
lcall
aad
fcmovbe
xor
push
push
mov
push
xchg
das
pop
mov
add
adc
adc
popa
push
fildll
cmp
sub
push
outsl
ds
xchg
xor
test
mov
sub
pop
jo
rolb
cwtl
lea
test
loopne
add
aaa
or
push
xchg
pop
mov
add
fwait
lds
mov
cmp
adc
dec
scas
fcompl
inc
ret
sahf
loope
and
arpl
adcl
dec
cmp
adc
pop
loop
adc
add
sti
int
dec
test
ret
add
rcll
out
cmp
add
cmpsl
xchg
push
mov
je
stos
add
mov
or
xor
jbe
fstpl
cmp
jl
push
cmp
sysret
xchg
cmp
cwtl
xchg
add
mov
cmp
mov
mov
and
adc
rcrl
ljmp
mov
xchg
pop
xor
scas
mov
pop
cmpsb
sub
sub
sub
push
repnz
xor
sub
or
shrl
dec
enter
and
aad
jne
adc
mov
movsl
xchg
vpcmov
jae
xor
jbe
shrb
push
mov
mov
mov
lock
roll
pop
cmc
inc
lods
add
inc
mov
fcomps
mov
decb
and
fadd
sbb
clc
xchg
shlb
aaa
js
sbb
cmp
aas
pusha
insl
dec
jae
inc
mov
push
push
adc
loope
stos
fs
sahf
pop
orl
push
ja
inc
ret
push
mov
cmp
jg
je
pop
psadbw
mov
pop
cmp
mov
mov
pop
cmp
fdivp
sar
iret
test
cmovbe
das
mov
jbe
xor
or
xchg
repnz
jns
rcr
sti
push
lret
pop
bound
popf
inc
or
inc
jge
push
pushf
add
sub
and
jle
jmp
cwtl
and
dec
jb
push
scas
les
lret
fisttps
sub
pop
inc
pop
mov
mov
mov
mov
dec
mov
xor
into
scas
mov
std
jge
out
cli
popa
rcr
or
insl
jno
imul
push
out
in
js
cmp
inc
inc
inc
leave
aaa
push
dec
or
jecxz
lahf
loop
insb
mov
fwait
xor
cmp
and
fsubp
and
in
and
add
xchg
aaa
dec
pushf
xor
cmp
mov
xchg
cld
mov
paddsb
out
mov
fs
jbe
test
stos
rclb
xchg
test
jae
ljmp
arpl
divl
jbe
cmp
or
int
not
jge
or
cmp
cwtl
cmp
xchg
jb
mov
lods
ficompl
outsb
push
mov
dec
push
les
add
jo
ret
rcrb
mov
inc
lock
sub
fisttpl
dec
leave
mov
out
cld
inc
daa
out
xchg
push
sbb
inc
addl
lds
mov
iret
xchg
test
jns
int3
in
pop
or
shrl
inc
dec
adc
enter
call
shll
insb
sahf
jnp
lret
sub
jl
sbb
push
mov
xor
mov
cltd
jbe
nop
aas
xchg
imul
and
xor
into
inc
popf
xor
pop
push
jl
pop
jle
and
cltd
js
int3
in
je
jmp
mov
jl
push
add
arpl
dec
in
into
cmp
push
push
adc
adc
hlt
mov
add
insb
pop
ds
push
out
and
imul
cmp
cmp
jbe
and
stos
into
insl
push
out
and
rclb
inc
mov
adc
or
mov
or
push
ret
stc
std
std
xchg
fucomp
jbe
mov
loopne
nop
shlb
sbb
std
imul
sarb
lods
daa
dec
mov
add
ret
xchg
fsubl
shrb
dec
and
aas
ret
inc
cld
mov
subl
mov
enter
pushf
call
lds
scas
and
testb
xor
inc
cmp
movsl
mov
fs
push
mov
loopne
xor
movsl
stos
mov
mov
cmpl
sub
fsubrl
or
push
cli
add
mov
movsl
rorb
pop
out
xchg
dec
mov
in
mov
cltd
mov
adc
inc
gs
adc
out
sbb
aas
fdivp
test
sbb
fstpl
xor
outsl
ss
or
adc
mov
cmpsb
popf
mov
sub
ss
or
stos
divl
and
shlb
xchg
adc
std
mov
imul
push
sub
xor
out
push
inc
sbb
nopl
lods
pop
mov
inc
in
inc
in
pop
loopne
and
mov
jl
ss
sahf
xchg
scas
les
icebp
xchg
cmpsb
movsl
sub
dec
movsl
mov
lods
loopne
mov
mov
dec
iret
into
push
jbe
lds
push
arpl
inc
pop
push
lds
out
loop
out
mov
fwait
daa
lods
imul
xchg
sbb
ja
or
jge
inc
push
adc
pop
gs
cmc
roll
jge
mov
jge
test
push
ljmp
cmc
daa
dec
mov
outsb
inc
jbe
or
sub
movsb
jmp
jae
dec
inc
mov
jecxz
cmp
ret
jae
pop
sahf
mov
push
mov
les
in
mov
push
mov
roll
int3
mov
mov
out
out
popf
das
mov
pop
sbbl
or
lret
inc
test
lea
fidivs
xchg
sbb
jb
adc
mov
enter
aad
push
dec
jmp
push
insb
jp
pop
repnz
leave
xchg
mov
movsb
aas
flds
fcompl
test
pop
fisubs
fs
and
les
pusha
adc
int3
stos
cwtl
add
dec
test
cwtl
notl
mov
cs
push
mov
xchg
jg
daa
jle
neg
cmp
gs
xor
dec
push
shll
and
lret
cmp
mov
popa
xor
scas
push
fsubs
add
std
sbb
push
and
movb
addl
sar
mov
cmp
mov
xchg
push
adc
jb
test
popa
test
xlat
xchg
outsl
nop
and
out
in
push
dec
bound
loope
lcall
das
adc
lea
push
sti
inc
jle
notb
mov
push
or
and
cmpsb
loope
lock
das
adc
jg
xlat
pushf
xor
cmc
mov
sbb
push
faddl
adc
dec
xor
sub
imulb
shlb
sbb
sbb
jp
mov
stc
or
ret
or
mov
mov
test
xor
mov
test
test
mov
pushf
sbb
add
loop
or
mov
scas
jno
pop
mov
inc
mov
outsl
mov
push
cmp
xor
xor
mov
mov
test
aam
adc
stos
pushl
ljmp
movsb
mov
lahf
push
les
sbb
cmp
cmp
add
push
into
or
mov
or
repz
in
cmp
xor
mov
push
cmp
mov
xchg
or
ficoml
mov
mov
clc
mov
pop
pop
icebp
xor
pop
mov
push
cmp
fs
xchg
in
je
inc
fldenv
xor
lods
mov
ret
iret
icebp
out
mov
pop
cmpsb
pop
lret
fwait
pusha
das
addr16
mov
inc
cmpsb
jne
cmp
js
push
in
pop
mov
pop
dec
adc
sub
xlat
add
cmc
inc
xor
adc
mov
mov
mov
scas
cmp
jo
jecxz
aad
and
jp
decb
mov
dec
xor
aaa
fsubr
pop
jbe
out
shlb
mov
inc
lahf
mov
repz
aam
mov
icebp
mov
loop
sbb
pop
loope
dec
lock
or
mov
and
mov
jns
xor
lods
pop
cltd
inc
jl
lret
imul
adc
sbb
in
mov
roll
mov
sbb
lret
dec
repz
in
int3
xor
jp
xchg
push
stc
shll
aam
pop
lret
lcall
ret
int3
pop
test
sub
orl
bound
sub
jge
mov
xchg
out
cmp
and
stc
sar
xor
rolb
popa
mov
gs
jno
cld
aaa
cmp
sub
hlt
leave
pop
rcrb
cmp
imul
clc
jns
aam
push
sbb
or
leave
add
das
xchg
pusha
mov
test
int3
cmp
xor
push
ror
cmp
inc
gs
mov
adc
mov
clc
nop
sbb
pusha
and
ljmp
cmp
dec
jnp
mov
addr16
shlb
cmpsb
cmp
ret
adc
push
mov
jne
ljmp
cs
add
dec
repnz
adc
xlat
dec
push
enter
pop
cs
outsl
out
mov
pushf
xor
enter
mov
repz
sbb
lea
out
hlt
push
flds
mov
iret
sub
roll
lock
enter
mov
insb
dec
inc
dec
jns
sbb
mov
lret
mov
xlat
das
ret
lahf
scas
pop
mov
inc
jl
fisttpll
mov
addr16
inc
mov
sub
jp
pop
insb
and
and
jo
shr
xor
jmp
movsb
dec
or
daa
jno
lods
and
fists
xchg
xor
aad
rorl
and
std
inc
mov
mov
das
lock
stos
mov
xchg
mov
xchg
bound
in
js
lcall
imul
nop
add
stc
cmp
push
push
jae
das
xlat
out
repnz
pop
mov
and
inc
and
pop
shrb
imul
jl
movsb
movsl
addr16
push
or
jg
pusha
jbe
mov
lock
test
shlb
repnz
adc
mov
dec
sub
iret
inc
push
iret
xor
mov
inc
cmp
andl
jecxz
add
imul
fisubrl
aaa
xlat
repz
rclb
add
mov
jecxz
mov
daa
xor
mov
aas
gs
inc
in
inc
push
gs
mov
jecxz
mov
jge
mov
adcl
lock
jae
lock
dec
push
cs
in
fcomps
shll
inc
sbb
xchg
dec
mov
sub
int
in
scas
push
in
cmc
or
adc
xor
div
out
loope
test
into
push
test
mov
push
mov
mov
inc
push
mov
insb
data16
int3
mov
dec
cmc
repnz
pop
ss
mov
add
mov
nop
mov
mov
xor
cwtl
cmpsl
int
xchg
pop
ljmp
mov
loope
or
in
dec
pop
inc
fisubs
gs
cmp
mov
scas
rcll
out
iret
je
cmc
iret
cmp
mov
mov
cld
push
mov
out
fwait
sbb
aam
push
push
sub
test
daa
scas
imul
xchg
scas
sub
jecxz
mov
xchg
pop
adc
add
jmp
sub
roll
cs
imul
das
ljmp
jnp
pop
cmp
das
mov
pop
call
mov
adc
mov
cmp
xlat
mov
add
addr16
pop
xchg
mov
test
mov
call
mov
push
cld
mov
inc
shlb
or
les
pushf
insl
mov
pop
inc
or
jl
push
pop
pop
xchg
cmp
adcb
fdivs
cmp
arpl
add
fldt
push
gs
es
xchg
lds
out
imul
push
pop
das
lds
or
and
mov
mov
xor
loope
adc
push
ror
imul
ret
adc
test
xchg
xchg
push
jae
shrb
mov
data16
inc
mov
lods
pusha
sbb
cmp
jg
daa
inc
hlt
xor
cmp
cmp
add
inc
and
sub
lds
or
and
pop
jo
or
push
pop
repnz
dec
ja
and
jmp
scas
sub
cmp
adc
cmpsb
jmp
dec
rorb
pop
je
fcomps
sub
test
scas
lock
xchg
loopne
lea
repnz
shr
jo
jae
rorb
pop
push
mov
out
cltd
adc
popa
push
iret
nop
or
inc
pop
movsb
xchg
out
mov
adc
loop
mov
sbb
adc
mov
aas
sub
cmc
add
ss
xchg
and
sub
in
jb
jbe
xor
xchg
outsb
jns
cmp
mov
adc
repnz
popa
cmp
cld
ds
mov
push
xor
loopne
jns
mov
lret
xchg
outsb
rcrb
pop
fimull
adc
loope
xorl
inc
aam
xor
stos
sub
ror
cmp
mov
cli
pop
pop
add
pop
shlb
pop
push
fwait
notl
sbb
sbb
sbb
dec
mov
movsl
sbb
jg
xchg
mov
ljmp
or
mov
std
push
sbb
sub
cmp
test
mov
pop
pop
out
push
dec
sti
and
xchg
ljmp
cmpsl
cld
lods
in
sub
sti
push
jo
xchg
pop
jg
mov
in
xacquire
push
ret
ds
cli
std
test
adc
fstpl
inc
push
cmp
sub
into
add
jne
mov
es
jmp
or
and
aad
push
addr16
lea
mov
push
sub
das
mov
sbb
dec
jb
cli
mov
pop
push
cli
xlat
sbb
push
or
mov
mov
inc
mov
push
pop
jg
movsb
jp
fmul
push
incb
in
cmpsb
jmp
inc
or
out
push
mov
mov
lret
inc
push
inc
mov
rorb
mov
xor
lahf
fsts
decl
fstp
pushf
dec
pop
aas
pushf
sbb
inc
out
insl
mov
aas
add
cmp
pop
cmc
add
cmpsl
push
repz
int
aad
mov
xor
dec
adc
inc
clc
stos
xchg
aad
cmpsb
in
sbb
xchg
mov
out
pop
mov
sbb
adc
or
mov
lahf
scas
mov
mov
adc
push
add
ret
arpl
jne
push
cmpsb
outsl
cmp
int
fnstsw
dec
dec
orl
ljmp
mov
sti
ja
adc
je
cltd
hlt
fs
sbb
out
testl
xor
aad
inc
int
out
hlt
push
pushf
scas
mov
rorb
dec
popa
jno
cmp
pop
adc
stc
inc
cmp
dec
fnstcw
cmp
icebp
pop
pop
mov
and
shlb
pop
fiaddl
mov
loope
inc
imul
fs
imul
lods
sbb
lds
cmc
or
pushf
iret
pop
jns
and
jmp
cwtl
push
test
ret
repz
lds
mov
imul
adc
popf
adc
pop
sbb
adc
mov
jmp
xchg
cmpsl
mov
xor
pop
loopne
pushf
push
jg
inc
stos
stos
xor
icebp
pusha
add
inc
mov
mov
push
inc
inc
inc
ja
mov
mov
mov
je
out
and
cli
or
out
cmp
test
and
sbb
outsb
xchg
add
mov
dec
sti
lahf
fwait
nop
adc
bound
rcll
sarb
push
gs
aas
push
aam
idivl
sbb
rcll
push
inc
fwait
test
pop
sbb
test
xchg
idivb
cmp
or
push
pop
jns
jge
add
ror
lods
inc
jne
cmp
fstl
leave
fadd
out
lock
imulb
lcall
stc
mov
movsl
mov
cmp
mov
add
mov
imul
mov
jmp
mov
stos
daa
ds
xorb
cmp
shlb
mov
ljmp
pusha
mov
test
ds
mov
dec
out
mov
into
les
data16
cmp
das
inc
ficoms
pop
cmp
lock
jge
jmp
adc
fsubr
sti
arpl
fwait
ret
dec
js
pop
je
xchg
xor
leave
mov
push
dec
pop
repnz
lods
xchg
mov
push
xchg
stos
imul
clc
je
aas
cmp
mov
aam
addb
add
lret
adc
and
pop
push
dec
inc
push
popa
movsl
rcr
dec
aad
repnz
sbb
xlat
jo
and
arpl
mov
push
insb
mov
jecxz
add
dec
or
out
daa
lock
scas
push
pop
xchg
xchg
adc
lods
sub
lods
loopne
int
sarb
hlt
jnp
es
cmp
jbe
hlt
add
add
push
repnz
pop
or
and
push
push
fbld
push
add
mov
xor
testb
ss
pop
into
cmp
scas
out
fwait
cmp
xchg
lahf
cmc
test
mov
sbb
movsb
data16
pushf
cmc
mov
mov
clc
iret
shl
cmp
xor
sbb
mov
mov
ret
sbb
movsl
sbb
jne
sub
xchg
push
and
jb
sbb
jbe
lea
cwtl
adc
xchg
xor
fwait
sti
cmp
mov
je
lret
ljmp
fistl
xchg
xchg
in
insb
lock
xchg
sahf
adc
dec
ret
flds
jns
sub
loopne
addr16
hlt
pusha
xor
or
testl
sti
out
test
stos
mov
psrld
sub
sbb
pop
repnz
rclb
xchg
es
enter
xor
mov
dec
mov
inc
lret
jp
ret
roll
dec
sbb
cmp
xchg
loop
scas
ds
cmp
push
mov
pop
xlat
fbld
shll
cmp
fdivrl
fcompl
and
cwtl
mov
mov
adc
inc
xor
jge
pop
adc
push
xchg
cmp
adc
aas
sub
mov
cmp
adc
adc
dec
push
in
sub
enter
ret
out
sub
or
jae
outsb
fs
sbb
lods
stos
aaa
movb
push
add
cli
add
mov
add
stc
mov
mov
int
pop
divl
xor
sahf
or
rolb
ja
inc
or
jmp
pop
imul
jmp
outsl
mov
lret
cmpb
push
clc
sub
mov
loop
fwait
inc
in
push
sub
or
jp
outsl
or
and
rolb
pop
clc
pop
or
pop
ds
lods
mov
xchg
mov
enter
mov
outsb
mov
lahf
and
out
orl
lahf
jl
dec
imul
push
rcr
push
fidivrl
or
jp
dec
insl
lret
push
and
add
jmp
push
mul
cmp
or
aas
jne
cmpsl
sub
ror
mov
jne
xchg
int
mov
std
xchg
insl
dec
popf
shlb
test
add
xchg
jae
xchg
jp
push
insb
pop
xchg
cmp
adc
add
cs
std
shr
dec
or
sub
loopne
movl
cld
icebp
mov
addb
roll
cmp
faddp
inc
mov
ja
lret
in
repnz
add
adc
dec
mov
jecxz
notl
imul
popf
push
and
add
xchg
stos
sahf
repnz
or
lahf
std
mov
xchg
sbb
stos
stos
lods
xchg
and
adc
pop
fwait
sub
cmpsl
ret
cmp
and
or
xor
fs
adcb
and
jle
inc
lea
push
and
mov
fidivs
adc
sahf
xor
cmpsl
sub
or
cli
test
add
inc
icebp
xchg
int3
lret
pop
dec
in
jge
es
or
and
stos
sub
sbb
dec
push
dec
cmp
stos
mov
add
std
push
psubsw
ret
aam
dec
aaa
das
jns
adc
fdiv
arpl
push
and
sbb
outsb
les
bound
and
sbb
outsb
push
jns
rcrl
xchg
cwtl
push
mov
lahf
jp
xor
inc
jb
ficomps
push
dec
cwtl
lahf
adc
inc
push
pop
out
lea
mov
fdivrp
adc
stc
in
sti
cmpsl
dec
or
int3
shll
dec
pop
fwait
mov
xorl
mov
and
repz
iret
scas
lods
rclb
repnz
repnz
or
inc
mov
imul
shll
imul
dec
or
cmc
popa
mov
jbe
pop
orl
push
push
cmpsb
outsl
jmp
cld
xchg
adc
fldenv
bound
mov
dec
shll
or
cmp
jmp
ljmp
pop
and
mov
aad
mov
xchg
je
pop
pushf
into
sub
jl
mov
lret
out
test
add
enter
je
fwait
sbb
movsl
das
jecxz
sub
xchg
pop
xchg
ja
imul
xchg
leave
ds
nop
pop
xchg
sub
outsb
inc
js
xchg
aad
addb
and
jmp
xor
loopne
test
sub
xor
adc
ja
gs
push
test
or
test
pop
rolb
jo
insl
inc
rep
fiaddl
int3
into
inc
add
pop
push
outsb
sbb
push
mov
arpl
cmp
fwait
stc
adc
push
fisttps
aad
jnp
cld
les
xor
inc
stos
pop
stos
daa
mov
jg
sbb
call
inc
scas
decl
fldcw
shlb
addr16
test
pop
fs
repnz
and
cmp
cmp
das
mov
sub
fcoms
jo
sti
stos
xchg
fwait
js
mov
sarb
aaa
in
sub
jmp
cmpsb
xor
test
fs
or
mov
insb
pop
loopne
mov
mov
cli
mov
popa
ds
fcomps
rorl
xchg
jnp
out
loop
mov
pop
push
scas
adc
movsl
inc
xchg
xchg
adc
enter
mov
fwait
mov
scas
jmp
mov
sbb
cmpsl
out
mov
pop
inc
jg
xchg
push
call
xor
or
aaa
out
pop
jmp
jmp
pop
shlb
and
js
or
adc
lds
and
push
into
push
data16
xchg
mov
mov
popa
fwait
dec
mov
fidivrs
fistps
sub
push
xor
lods
fisttpl
sahf
mov
add
pushf
aam
sti
mov
sarb
jmp
shrl
mov
lahf
pandn
loope
push
das
add
stc
jg
leave
inc
inc
jg
push
sbb
sub
pop
sbb
hlt
test
xor
jmp
pop
cmp
inc
clc
jns
or
or
xlat
and
add
inc
jbe
movsl
sti
or
add
call
pop
out
xchg
add
sub
mov
xor
or
jp
dec
jmp
mov
inc
inc
ss
aad
push
aas
xadd
sahf
ja
sub
je
push
stos
xchg
and
cmp
nop
mov
mov
jg
jb
int
lret
int3
mov
jp
stos
bound
call
mov
add
jp
mov
lock
or
or
add
dec
jnp
lret
push
out
cwtl
push
pop
jmp
lods
imul
popl
ss
and
cltd
dec
bound
std
xchg
pop
lret
or
or
or
sbb
xlat
out
or
aaa
ret
lcall
mov
iret
pop
cmp
add
push
loope
and
cmp
xchg
xchg
leave
repnz
lahf
cmp
xchg
movsl
xchg
mov
lahf
xchg
push
bnd
xor
jecxz
out
xchg
fistpl
sub
dec
cmpsb
xlat
cwtl
xlat
enter
mov
xlat
fs
js
stos
sbb
cmp
xchg
out
mov
ret
aad
inc
fs
in
outsl
inc
cld
adc
or
mov
and
out
les
ja
daa
adc
dec
mov
pop
push
lods
aas
jge
enter
js
xchg
push
inc
mov
xchg
insb
imul
mov
push
int3
insl
and
jo
cmp
inc
lret
loop
icebp
icebp
insb
xor
push
and
jbe
inc
inc
jno
loope
push
sti
rolb
into
mov
xor
hlt
sbb
xchg
fcomp
loop
es
xor
filds
test
fwait
inc
mov
push
lcall
mov
push
cld
dec
adc
pop
xchg
xor
lret
arpl
leave
push
mov
sbb
mov
adc
out
xor
or
lock
pop
aad
daa
jg
scas
lret
or
and
movsb
cs
fists
inc
mov
push
dec
jg
push
cwtl
sub
int
mov
je
mov
in
mov
xor
cmp
dec
out
aas
stos
adc
insl
les
sub
adc
push
rorl
dec
mov
iret
nop
dec
adc
mov
pop
test
fisttpl
push
mov
je,pt
jne
ret
xchg
call
test
ret
fsubl
adc
les
mov
xorb
mov
push
pop
daa
testb
aaa
in
dec
dec
fnstsw
pop
xchg
inc
orb
jmp
adc
outsb
cmpsb
pusha
cmp
sbb
or
hlt
inc
and
aam
sbb
xor
cmpsb
jae
pop
or
dec
cmc
mov
inc
sbbb
ret
mov
shrb
push
mov
mov
shrb
pop
or
and
xor
pop
clc
adc
mov
cmp
jnp
adc
fwait
pop
inc
fnstenv
mov
pop
push
shll
popa
fwait
add
mov
xlat
in
push
push
movl
mov
cmpsb
xor
mov
loop
push
inc
fmul
sti
push
push
aaa
xchg
xor
clc
fs
in
mov
stos
mov
nop
lods
inc
stos
cld
outsl
jb
movb
ds
pop
jge
inc
or
test
sub
xchg
push
mov
js
mov
inc
bound
sbbl
adc
push
jmp
jno
and
cmp
mov
push
dec
test
outsb
pmaddwd
test
lret
cmp
pop
bound
mov
int
cli
bnd
fidivrs
test
add
arpl
popf
sti
lret
mul
sub
add
aaa
daa
push
add
shr
jae
lea
daa
sbb
pop
adc
mov
and
jns
std
jg
icebp
stos
aam
in
add
mov
std
xor
fisubs
xchg
iret
dec
or
mov
sbb
and
inc
xor
add
ljmp
imul
movsb
xlat
cmp
repz
and
mov
mov
fidivl
shll
lods
loope
cmp
in
repz
push
daa
mov
pop
push
movhps
ss
js
xchg
jp
repz
jmp
scas
and
and
das
ret
das
or
xor
jo
in
out
dec
or
subl
ja
iret
push
xchg
jg
and
aas
mov
shlb
pop
and
data16
pop
add
int3
pop
das
es
cmp
ret
and
and
sahf
adc
pop
push
xor
xchg
insl
sub
popf
xor
imul
xor
adc
jg
stc
cmp
or
loop
in
sbb
orl
ret
mov
pop
enter
jae
or
andl
es
movb
in
ss
lock
dec
aam
iret
movsl
repnz
shll
lds
aas
daa
pushf
mov
push
je
mov
hlt
ficomps
test
xchg
sub
call
call
in
mov
xchg
sub
jns
mov
xchg
push
bound
jbe
pop
lock
sbb
sti
pushf
fcmovnu
sub
adc
pushf
mov
xor
fsubs
leave
fnstenv
pop
test
int3
enter
pop
xor
dec
aad
call
popf
cwtl
cmp
xchg
mov
mov
inc
addl
and
jb
addr16
enter
nop
xchg
in
popf
mov
aam
outsl
shll
and
inc
inc
add
or
xchg
sbb
jge
incb
ja
idivb
xor
add
adc
mov
js
das
xchg
jo
and
inc
dec
pop
xor
mov
inc
add
or
lcall
push
sbb
stos
icebp
jl
aam
call
out
repz
jne
mov
pop
pop
imul
mov
lods
test
xchg
mov
cmp
lret
clc
insb
scas
cmp
shll
pop
cmp
icebp
push
xchg
pop
shll
dec
jo
xor
xchg
ret
dec
gs
repnz
inc
jbe
arpl
sbb
xchg
call
xlat
sub
fwait
pushf
xchg
mov
mov
inc
cmp
leave
jb
imul
pop
es
les
pop
cmp
add
lcall
cmp
jecxz
dec
int
pushf
mov
ja
out
push
xor
pusha
loop
lock
insl
sbbl
inc
pop
lret
mov
call
mov
mov
ffreep
add
add
xchg
pop
cmpb
xchg
mov
fiadds
xchg
mov
inc
shll
fists
incl
mov
inc
mov
ret
adc
stos
mov
mulb
push
mov
sar
pop
repz
daa
cltd
nop
cwtl
mov
insl
pop
dec
xchg
test
shll
xchg
push
rorl
hlt
clc
pop
xchg
push
inc
mov
fdivr
sub
mov
insl
ja
cmp
fwait
popf
aas
jmp
les
inc
js
cmc
or
push
add
roll
aam
adc
or
repz
mov
aaa
and
adc
in
xchg
shrb
js
push
sbb
leave
add
arpl
push
pop
adc
test
pop
push
popf
div
add
push
mov
jle
jbe
ret
daa
push
add
mov
cmp
xchg
mov
add
inc
dec
scas
xchg
xor
out
mov
aad
xor
xchg
out
fisttpll
fisubl
int3
imul
push
jae
rolb
push
adc
xlat
mov
sbbl
test
idiv
ficompl
cld
xchg
mov
push
loope
aad
or
mov
lea
sbb
test
jg
hlt
or
mov
imul
adc
aad
jnp
movsl
into
cmp
mov
cmp
cwtl
ds
popa
mov
test
xor
fcompp
or
arpl
jmp
mov
popa
jns
mov
cs
adc
xchg
out
arpl
insl
repnz
jne
sub
bound
shlb
add
jae
pusha
sbb
sub
cmp
or
ljmp
push
adc
mov
push
push
dec
shll
fsubrl
in
sub
mov
subb
ds
xor
fisttpll
jecxz
arpl
daa
adc
leave
xor
and
push
jno
adc
cwtl
into
xor
add
or
cmp
push
ljmp
testb
push
dec
push
imul
mov
pop
inc
or
stos
rol
aam
cmp
rol
stos
sbb
pop
mov
aad
inc
sbb
frstor
incb
fnstenv
aam
cmc
scas
cltd
push
xor
add
and
or
test
xor
leave
stos
dec
pop
adcl
cmpsl
pop
imul
jle
mov
dec
push
sbb
ss
xchg
push
sub
inc
imul
mov
add
ss
cli
rorb
divl
xchg
loope
mov
popf
in
dec
mov
jge
pop
inc
add
lret
shll
pop
xchg
mov
arpl
jns
out
loop
insb
mov
mov
inc
mov
mov
cmp
adc
jg
test
mov
or
dec
xchg
ljmp
dec
movsl
xchg
icebp
adc
lds
and
sbb
and
movsl
sahf
mov
dec
mov
adc
mov
ljmp
fnstenv
cwtl
ret
leave
cmp
aad
rclb
gs
cmpsb
ja
inc
jbe
std
mov
jecxz
pop
nop
in
pop
xor
xor
xor
mov
push
cltd
jmp
xorl
pop
clc
insb
adc
adc
loope
std
push
jp
std
mov
in
iret
sbb
lock
clc
lods
and
mov
test
jl
cmp
sbb
ljmp
xlat
ds
jno
xor
mov
call
mov
das
dec
pop
mov
cmp
sub
movsb
insb
dec
pop
inc
jg
inc
and
stos
pop
scas
xor
adc
push
negb
in
stos
inc
xor
cltd
and
add
xor
mov
mov
clc
pop
out
jne
leave
in
movsb
imul
mov
and
decb
and
mov
xor
xchg
pop
mov
mov
shlb
push
fst
imul
mov
cmp
in
add
and
pop
lret
inc
mov
pop
xor
add
inc
cmp
push
lods
mov
popa
mov
mov
push
mov
pop
mov
mov
lods
rcrl
adc
add
jecxz
out
push
out
jecxz
ds
jmp
aam
adc
cmp
jno
push
fsubrp
aas
xchg
std
push
test
jge
adc
cli
std
jl
pusha
inc
ljmp
lds
repnz
xchg
outsb
test
adc
les
scas
adc
jns
cmp
pushl
nop
rcll
mov
inc
mov
mov
sbb
sub
stos
mov
leave
mov
mov
ror
sub
mov
jg
lock
ss
mov
ret
inc
jne
or
push
mov
outsb
or
mov
fldenv
inc
addl
xor
imul
mull
sbb
scas
jbe
sub
sub
ljmp
mov
push
inc
push
loop
cmp
or
cmc
mov
call
dec
popf
or
cmp
sbb
mov
scas
push
fcomps
int3
xchg
hlt
sar
cld
lds
mov
sbb
xlat
fs
icebp
and
aam
ror
jnp
imul
pop
mov
adc
jne
jnp
je
div
movsl
fsts
mov
mov
xor
sub
inc
xorb
fcoml
out
enter
loopne
insl
adc
pop
pop
popf
shr
xchg
xlat
ds
pop
bound
ss
cmp
cmp
js
or
sub
in
mov
mov
sbb
dec
cltd
inc
cmpsl
stos
mov
mov
aam
adc
cmp
pop
jle
xor
dec
jne
mov
jl
sbb
dec
mov
fiaddl
daa
cmp
and
and
fdivrs
or
sbb
in
addl
lock
ds
pop
imul
cmp
jne
adc
adc
xor
test
scas
xchg
push
loop
xchg
or
into
adc
or
adc
ret
ds
fildl
adc
sbb
icebp
pop
cmp
push
xchg
lahf
xchg
test
jmp
cmp
ficoml
cmp
out
sub
insl
pop
shll
mov
scas
mov
lds
lds
pop
sbbl
and
and
frstor
jle
cmpsb
cmc
pop
shll
into
negb
fidivrl
inc
dec
imul
fists
inc
xor
jecxz
pop
cmpsb
add
lea
andl
sbbl
pop
out
and
xchg
lods
push
mov
xor
lahf
icebp
repz
scas
outsb
jl
and
js
push
lods
cmp
mov
dec
dec
push
rcrb
jnp
xchg
movb
dec
testl
push
inc
jb
insl
adc
lock
dec
shll
iret
add
call
loope
inc
and
aaa
pop
and
sti
adc
jo
mov
scas
mov
aam
cli
add
ljmp
movb
xchg
fsubl
arpl
fisttpl
jae
or
movsb
sahf
test
test
sbb
mov
cmp
cwtl
je
jg
sub
pop
mov
dec
lods
aas
xor
sub
loope
mov
xchg
cld
fidivrs
lret
fiaddl
sahf
rcll
jmp
mov
mov
mov
jns
mov
sbb
jno
negl
dec
addl
sbb
and
mov
adc
mov
adc
and
int3
leave
cmp
xchg
mov
cmp
sbb
xor
fdivrp
jae
movq
mov
jmp
loope
mov
jmp
mov
mull
es
je
sahf
fcoml
test
lcall
or
out
ja
call
hlt
jmp
xlat
callw
fsub
adc
outsl
xchg
bound
mov
popa
push
in
mov
adc
mov
xor
std
imul
pop
pusha
or
xchg
or
mov
pop
add
pusha
mov
icebp
mov
in
loop
mov
pop
bsf
fwait
jecxz
addr16
mov
outsl
inc
cmpsl
outsb
xorl
push
push
push
repz
push
and
and
mov
sbb
mov
and
imul
inc
and
jecxz
stos
jl
fisubrl
cwtl
mov
xchg
mov
mov
push
mov
inc
inc
clc
and
sbb
rcrl
in
insl
imul
filds
pop
mov
xchg
or
push
inc
lods
outsl
cmp
sbb
add
xchg
repz
push
xor
out
sub
outsl
and
mov
fstps
mov
loope
push
mov
sti
sbb
test
add
bound
aas
jg
fs
cmpsl
jg
ret
or
inc
or
mov
mov
jmp
call
int3
cli
cmc
popa
shrl
ret
ds
fwait
imul
movsl
jecxz
stc
sbb
cs
jg
push
add
lods
lods
push
movsb
pop
pop
xor
out
jns
pushf
ja
stos
mull
cmp
sbb
and
stos
and
dec
sub
xchg
push
out
out
add
cmp
push
cmpsb
insl
cmp
in
jge
int
mov
pop
push
xor
and
jg
fwait
xchg
and
xorb
outsl
adc
je
dec
dec
inc
sub
movsl
cli
jae
loope
fsubrs
and
and
js
jecxz
ljmp
push
data16
xchg
in
push
stc
dec
test
or
pop
into
pop
test
bound
pop
jno
lea
iret
cld
mov
mov
xchg
mov
lods
insb
adc
jnp
sbb
cmp
pop
mov
and
test
test
jns
mov
ss
jbe
jbe
sub
in
pop
jge
jb
mov
pop
cmp
mov
mov
mov
js
cmp
xchg
into
lods
rcl
lods
lods
out
das
sbb
test
mov
cmp
dec
rclb
pop
push
mov
andl
or
int3
in
int
sub
xchg
iret
dec
ljmp
push
jmp
cmpsl
movsb
into
pop
or
jle
or
jnp
or
int3
ljmp
cld
ljmp
mov
cmp
mov
mov
out
cmp
icebp
loopne
jmp
lret
push
out
dec
xchg
movsl
jnp
movsl
and
test
adc
cmpsb
aas
mov
mov
xor
inc
icebp
inc
jo
in
cmp
lods
outsl
cmp
sbb
dec
lods
fisubrl
push
jnp
cmc
mov
test
pop
rep
cmp
push
sbb
ret
test
add
jno
testb
sub
pop
xor
xor
orl
ds
pusha
data16
dec
push
sub
repnz
test
sub
or
dec
sarl
out
cltd
xchg
pop
and
aaa
sbb
add
inc
add
cmp
daa
repz
enter
push
pop
mov
dec
popf
out
addr16
hlt
sbb
pop
imul
mov
mov
test
and
nop
out
dec
int3
cld
jmp
jo
xchg
hlt
dec
jae
cli
stc
loope
pop
or
dec
stc
sarl
sub
push
gs
jo
push
xchg
sub
push
xchg
adc
push
push
pop
test
sbb
pop
shl
call
push
sar
sti
add
mov
popa
es
xor
xchg
cld
push
mov
jmp
sbb
imul
mov
jb
lods
aad
mov
push
xor
adc
dec
jnp
pushf
jecxz
jl
mov
lahf
and
shll
setno
or
fbstp
mov
and
push
sub
ffree
jge
cmp
adc
stos
inc
repz
xchg
xchg
repz
jg
or
mov
nop
addr16
popa
ss
popa
or
mov
mov
pop
cs
cmp
mov
cmp
mov
pop
in
dec
rsqrtps
lcall
dec
sbb
sub
push
movsb
pop
lock
mov
dec
or
cmpsb
push
in
dec
mov
mov
pusha
outsb
daa
cmp
mov
dec
movsl
xchg
shrl
push
and
hlt
inc
stos
sbb
je
inc
sbb
stos
mov
lret
dec
sub
lds
sub
xor
inc
rcll
sbb
or
and
repz
push
mov
loop
mov
xchg
xlat
lds
movsl
dec
shrl
inc
jne
pushf
movsl
enter
push
xor
js
movlhps
loope
stos
pop
mov
and
xor
cwtl
out
adc
xor
mov
lcall
adcb
cmp
push
mov
inc
xchg
imul
add
int
push
popf
filds
lret
out
repz
cmp
jecxz
and
sbb
lds
cli
mov
or
insb
mov
stos
test
cmp
and
add
pop
and
dec
inc
mov
in
sbb
mov
fldl
jp
jl
pop
jecxz
adc
push
jb
bound
fbstp
out
push
lods
push
add
mov
mov
ror
mov
sub
out
push
fcmovnbe
mov
add
xchg
out
stos
pop
sub
adc
inc
sbb
push
cs
sub
or
xlat
jp
sbb
jno
loope
ljmp
scas
xchg
push
movsb
decl
mov
int
pshufw
mov
icebp
push
stos
xor
inc
inc
add
int3
repz
scas
push
lds
sbb
mov
sbbb
ljmp
insb
pusha
pop
stos
data16
sbb
mov
out
or
lret
rcll
std
jle
js
and
mov
jo
jmp
pop
sbb
pop
mov
pop
xchg
and
sbb
gs
ss
pop
bound
xor
insl
in
xchg
mov
inc
add
roll
mov
mov
popf
clc
inc
mov
stc
mov
movsl
in
dec
movsl
xchg
jmp
and
enter
xchg
adc
mov
dec
or
xor
inc
fs
mov
stos
inc
stc
xor
xchg
data16
jb
inc
pop
out
sub
movsb
hlt
dec
sbb
sub
roll
ljmp
mov
fbstp
ret
pop
addl
dec
adc
out
nop
int3
push
cmpsb
lret
pop
xchg
mov
icebp
jmp
addl
push
shrb
es
stc
enter
lods
ss
in
les
sub
jg
in
jp
or
int3
aad
fadd
and
pop
xor
popf
fidivrs
es
loop
jge
cld
mov
iret
lock
xor
jp
push
data16
in
push
cwtl
in
imul
jb
mov
movsl
sahf
repz
lahf
insb
sahf
pop
lods
sbb
loop
sbb
jmp
enter
sbb
daa
filds
cmpsl
jecxz
negl
push
cs
movsb
pop
cmp
imul
cmc
data16
sub
and
test
or
js
mov
enter
or
lods
xchg
das
mov
pop
push
pop
insb
icebp
sub
push
vpacksswb
je
inc
sbb
test
shlb
dec
clc
movb
scas
std
cmp
inc
sar
sbb
outsl
add
insl
pop
aaa
xlat
mov
cmp
xor
inc
dec
dec
pushf
jecxz
xchg
scas
jecxz
imul
or
imul
and
push
sbb
sbb
lods
shll
lret
dec
push
lret
enter
insb
out
or
mov
inc
dec
pop
sbb
sub
addr16
push
jno
jne
push
adc
scas
loope
sub
mov
fldcw
test
inc
lock
xlat
cmpsl
mov
xchg
fists
push
push
lock
div
notl
push
dec
es
call
push
scas
jbe
fsubrl
loopne
movb
rorb
xchg
sbb
out
out
dec
and
repnz
inc
jo
aam
mov
lods
loope
arpl
and
sub
popf
int3
jne
fstpt
shll
sub
dec
push
sti
sbb
push
xor
pop
jecxz
jmp
lods
lock
lock
mov
push
push
sub
fs
mov
incl
sbb
jb
push
cmpsb
pusha
or
xor
lock
fstl
jns
xor
js
xor
push
lret
mov
push
cmp
idivl
paddsw
lret
push
aam
rclb
jge
shll
inc
dec
add
or
add
and
jbe
add
pop
jbe
scas
adc
xlat
std
push
ljmp
xchg
lods
adc
jge
hlt
push
leave
pcmpgtd
mov
push
lea
mov
xor
shll
push
inc
push
mov
enter
add
out
push
cli
cwtl
in
jb
test
lret
and
or
shrl
sbb
jo
fstpt
pop
xor
xor
pop
test
mov
push
hlt
iret
or
bound
jno
sarb
dec
fisttps
lcall
out
sub
cltd
mov
or
pushf
movsl
inc
lock
cmp
jo
or
add
daa
xchg
mov
out
dec
push
fldl
test
daa
mov
mov
popf
test
dec
into
loopne
push
scas
xlat
sub
cmp
xor
dec
or
movsl
in
dec
inc
pop
ret
fs
cmp
mov
scas
loopne
mov
int
out
jb
xchg
das
out
int3
mov
in
clc
jp
hlt
and
sub
mov
inc
adc
fldenv
stos
xchg
cli
inc
idivb
insb
add
ficomps
lock
das
dec
std
faddl
in
scas
dec
push
add
mov
pop
loopne
test
fwait
in
xor
mov
outsl
mov
push
xchg
cld
or
insb
xlat
into
sub
enter
xchg
lret
sbb
int3
mov
aaa
gs
js
sbb
lcall
cwtl
sub
adc
mov
test
loopne
mov
in
xor
and
js
nop
mov
and
mov
xchg
loopne
fyl2xp1
divb
mov
ljmp
adc
mov
mov
add
iret
cmp
sub
xchg
mov
dec
fnsave
push
adc
adc
fmuls
imul
jl
inc
sub
shrb
jecxz
insb
repnz
enter
stc
mov
xchg
lcall
insl
movsb
push
adc
jl
scas
xchg
jecxz
test
push
xchg
mov
jge
mov
add
ds
xlat
int
inc
push
cmp
sbb
and
fsubrs
insb
test
or
or
adc
ja
loop
mov
ret
stos
fwait
mov
in
xor
ficoms
pop
data16
pop
enter
adc
into
loop
rclb
or
and
adc
jp
jp,pn
scas
jl
cltd
data16
ficomps
mov
jo
dec
add
pusha
pushf
dec
lds
dec
dec
mov
pop
fistps
mov
in
js
or
and
mov
pop
mov
cmp
fsubrs
cmp
or
icebp
repnz
mov
cmp
pop
dec
cmpsb
ja
jbe
fwait
and
cld
fdivl
sarb
pusha
dec
mov
cmp
mov
mov
lods
or
les
lea
pop
mov
icebp
sub
sub
lock
cmp
jae
lahf
sub
rolb
aaa
dec
ret
lcall
cmp
cmc
insl
andb
fisubl
das
mov
incb
aad
or
stos
in
adc
inc
add
mov
or
test
test
push
sbb
lea
jg
inc
xchg
lret
es
jbe
fdivrl
xchg
fstps
insl
jecxz
pop
mov
mov
push
and
pop
bound
jp
cmp
jecxz
inc
subl
test
push
xchg
xchg
pop
rcll
mov
xor
stos
and
hlt
cmpsb
jne
call
jns
loopne
push
sti
cmc
adc
sub
shrb
adc
sbb
mov
outsl
ret
adc
jo
iret
xchg
push
pushl
push
aad
repnz
adc
fiadds
jnp
cmc
xchg
pop
in
ljmp
mov
lock
fs
mov
outsl
enter
inc
mov
pop
mov
jecxz
fcoms
frstor
nop
push
int
addb
adc
dec
push
jecxz
call
hlt
into
mov
and
loope
loope
cld
test
adc
sahf
imul
add
popa
jnp
aam
adc
iret
gs
mov
mov
sbb
inc
push
dec
lea
ljmp
popf
add
push
and
jne
fs
data16
imulb
adc
pop
dec
sub
loop
daa
insb
pop
mov
pop
cld
add
jp
dec
xor
ja
mov
imul
mov
adc
ljmp
add
adc
popa
repnz
or
cmpsl
mov
adc
jg
sbb
aam
mov
add
mov
xchg
fcmove
adc
push
mov
ret
push
pop
adc
mov
push
cmp
inc
pop
sub
xchg
lock
jle
add
fwait
idivb
fdivr
scas
inc
insl
sbb
dec
dec
lret
imul
mov
daa
lods
insl
loopne
pop
jl
lock
sbb
stos
repz
sbb
lock
fisubrs
leave
pop
push
mov
inc
fistpl
add
fdiv
js
pop
mov
ret
ss
pop
popa
mov
aam
pop
aas
cmp
mov
filds
int3
sbb
mov
jne
cs
aam
adc
pusha
xor
outsl
jg
jmp
pop
mov
jp
in
loopne
jns
shlb
cmp
clc
negl
mov
xchg
fdivrl
add
xchg
icebp
sahf
aam
popf
xchg
push
outsb
loopne
insl
std
nop
inc
jle
lret
cmp
dec
iret
dec
push
divl
inc
cs
andl
js
lahf
mov
stc
shrl
dec
cmp
xchg
lds
push
cmp
fdivrs
add
and
adc
lods
div
dec
mov
push
mov
mov
pop
mov
sti
mov
lcall
and
in
xchg
shll
inc
cld
pushf
outsb
pop
xchg
fwait
insb
mov
jle
push
mov
outsl
neg
icebp
fidivrl
push
hlt
into
mov
pop
xchg
sbb
dec
cmpsl
lock
ss
std
cmpsl
add
fmull
jg
mov
in
jbe
cmp
dec
add
sbb
loopne
stos
mov
and
pusha
mov
sbb
jb
dec
mov
adc
pop
fcmovbe
xor
pop
adc
jnp
arpl
lods
xor
jmp
lea
mov
ds
stc
test
ret
leave
jg
pop
jecxz
push
adc
jp
push
scas
lahf
lcall
xchg
pop
mov
gs
sbb
adc
mov
enter
or
addr16
add
or
or
sarb
cmp
adc
fistpll
sub
sarl
fcmovnb
sub
inc
mov
sub
push
sub
cmp
xor
addb
ror
into
sarl
stos
sub
push
repnz
add
mov
sbb
out
in
push
mov
and
lds
mov
inc
leave
leave
orb
cmpsl
push
adc
cmpsb
cmpsb
ja
sub
cwtl
divb
dec
subb
out
add
jbe
or
lock
sbb
sub
shl
mov
inc
fnstenv
xchg
inc
leave
inc
pop
xchg
lods
inc
push
hlt
sti
das
mov
inc
fimull
jmp
dec
dec
mov
outsb
sub
dec
mov
bound
cld
mov
xor
hlt
or
dec
into
push
pop
sub
loope
lea
pop
shr
stos
pop
popa
push
pop
mov
fldenv
dec
fcmovb
cmp
jle
stc
adc
pop
imul
mov
mov
int3
mov
push
jae
or
lret
push
mov
addr16
arpl
jb
loope
ret
mov
jp
insl
push
stc
scas
xchg
sti
mov
push
jo
leave
xor
test
inc
and
or
xchg
inc
aaa
cmc
mov
adc
mov
decl
xor
loop
xchg
xor
add
pop
dec
pop
ja
iret
push
jle
mov
xor
into
mov
mov
cmpsl
adc
cmpsb
push
repnz
sti
add
mov
jmp
cmp
addr16
cmp
std
jl
flds
int
loop
adc
sahf
in
lods
sub
cmp
shlb
insl
mov
rcll
fwait
test
and
pop
mov
fstpl
jns
push
sbbb
ret
xor
jmp
xlat
daa
mov
inc
data16
xchg
cli
imul
inc
lods
sbb
lcall
pop
push
fiaddl
in
or
mov
or
sbb
std
cwtl
cmp
add
add
jmp
adc
scas
vpshld
cmpsl
aam
mov
or
xchg
cli
cwtl
jnp
fistl
addr16
push
mov
pop
shl
dec
push
sbb
sbb
jecxz
fwait
or
loop
in
aaa
push
jmp
shrb
jo
xchg
or
sysret
mov
add
in
dec
fcmovnu
dec
sete
cmp
in
or
lcall
in
rorl
xchg
push
sbb
loop
cs
test
jne
out
lahf
aas
push
setne
dec
lcall
push
adc
xor
mov
das
das
in
add
popa
mov
stos
and
sub
and
gs
shr
adc
add
xor
inc
push
sti
and
imul
sbb
fisttps
jns
mov
in
xor
or
add
and
xchg
xor
in
aaa
ret
mov
out
pop
pop
jbe
enter
popf
and
and
jle
mov
jl
mov
sti
rolb
xchg
es
jnp
pop
lock
cmp
and
stc
pop
inc
lret
and
icebp
gs
outsb
and
dec
or
daa
mov
sbb
cltd
repnz
rcrl
push
or
repnz
push
int3
in
xor
and
mov
nop
sub
xor
xor
int
push
int
les
sbb
je
jl
and
mov
decb
pop
lret
jl
scas
jo
xor
inc
sbb
lds
lea
push
dec
xor
ja
in
mov
push
jl
cmpsl
popf
pop
out
das
aad
in
adc
adc
das
dec
jmp
cmpsb
fisttpl
fldt
out
das
lock
pop
sub
push
jnp
into
push
sub
cmp
and
data16
cmpsl
fbld
aas
clc
stos
ljmp
shrl
cmp
lea
xor
in
insl
pop
rolb
testl
stc
movb
and
jbe
jg
roll
push
cmp
cmpsl
je
jno
sbb
insl
outsb
lods
mov
iret
pop
sub
test
imul
clc
sahf
js
ljmp
int3
lahf
mov
add
sti
push
fwait
out
pop
ss
push
lods
xor
mov
pop
lds
mov
mov
scas
mov
popf
mov
adc
test
jbe
mov
pop
dec
ret
adc
add
push
lods
and
pop
adc
mov
loop
mov
or
push
test
mov
xchg
stos
pop
dec
test
test
fcomip
or
mov
loop
dec
rol
loope
in
xchg
and
es
push
mov
xor
or
and
mov
cmp
sti
popa
jmp
inc
push
hlt
fidivs
out
iret
push
data16
mov
rcrl
iret
scas
rolb
and
ljmp
and
sub
test
or
ficomps
and
push
pushf
es
mov
lahf
fsubrs
lds
jge
dec
cmpb
mov
pop
je
repz
mov
jne
adc
push
cvtsi2sdl
sbb
xor
jg,pt
pop
std
mov
mov
cmpsb
sub
mov
add
pop
push
push
lds
cmp
xor
adc
sbbb
xchg
add
cmp
sarl
fisubrl
aam
dec
dec
xor
fnstcw
xchg
adc
pop
stc
adc
or
push
add
and
faddp
jl
or
xchg
je
mov
js
arpl
jb
adc
pop
or
jg
dec
das
jecxz
in
test
dec
das
dec
xchg
adc
arpl
pop
arpl
mov
mov
adc
mov
call
lcall
cwtl
lock
std
stos
iret
push
gs
bound
std
pop
sbb
cmp
hlt
dec
movups
mov
push
inc
js
dec
insl
test
js
roll
pusha
leave
dec
imul
loop
test
and
jl
and
pushf
aam
sti
rolb
das
int
push
mov
xchg
add
jle
movsb
push
in
sub
or
cmpsb
scas
out
adc
sub
mov
xchg
imul
xor
jg
jle
pop
sbb
into
enter
mov
inc
sub
mov
mov
xor
xor
push
sarl
push
push
cwtl
loopne
or
rorl
pop
imul
push
out
adc
mov
iret
shlb
mov
in
daa
out
enter
sbbl
loop
mov
or
push
mov
jne
fistpl
aam
enter
lods
orb
notl
mov
mov
pop
out
jae
sub
mov
xchg
or
dec
aad
rclb
fsubrp
lea
and
mov
mov
sub
and
and
fstpt
insl
divb
sub
xchg
and
jb
lret
mov
push
jae
addl
mov
movsl
push
shrl
shlb
lcall
imul
inc
mov
xor
popf
sub
sub
mov
mov
add
sbb
pop
and
jns
lcall
xor
push
pop
sarl
sti
lock
xchg
imul
sbb
or
repz
add
mov
shr
cltd
or
jle
test
jno
mov
pop
imul
aad
leave
push
lds
lret
in
pop
jb
xchg
dec
mov
xchg
test
int3
xchg
cmp
std
mov
loop
cmp
jbe
test
outsb
out
sbb
test
xor
js
cmpsl
movsl
push
mov
xchg
rcr
mov
jo
scas
les
ret
bound
arpl
and
loopne
out
mov
ret
jbe
mov
stos
fnstsw
jb
sub
or
mov
push
in
fisttps
fcmove
repnz
movsl
ds
mov
dec
cmp
bound
scas
adc
es
int3
imul
xchg
or
shrb
aas
popf
xchg
mov
or
repnz
rolb
xlat
xchg
pop
fnsave
mov
cmpsb
scas
sub
mov
fdivs
cmc
adc
dec
repz
or
adc
lods
and
jae
pop
test
jo
call
fstps
pop
push
xchg
aad
cmp
es
push
mov
scas
jmp
push
rcrb
push
jae
cld
add
hlt
cmp
ds
testb
bound
add
jbe
lret
jae
fucomp
xchg
push
mov
repz
out
pop
dec
mov
sti
or
jmp
out
sub
repnz
inc
loope
pop
and
and
dec
lahf
sbb
roll
faddl
arpl
lret
ret
cld
pop
fwait
inc
mov
push
stos
arpl
pusha
sub
and
iret
ds
push
stc
push
jnp
push
dec
pop
xor
int3
dec
jae
mov
xchg
dec
arpl
pop
std
fdivr
jle
bound
pop
filds
ret
xor
divl
and
or
sbb
inc
scas
adc
pop
xchg
adc
inc
cmp
les
push
in
pop
cmp
add
adc
jbe
hlt
add
mov
mov
sub
rolb
call
je
sarb
je
sub
sbb
jns
hlt
fwait
ja
rcr
aas
sti
mov
or
pop
adc
lcall
loopne
xor
pop
adc
ja
or
jo
push
shl
mov
shlb
inc
mov
out
xor
repz
fmulp
sub
mov
push
insb
push
aas
lock
xlat
sahf
mov
pop
je
sahf
imul
insb
push
test
mov
repnz
sarb
push
popf
xlat
fsubrp
jne
push
cli
pop
xor
subl
jmp
mov
inc
outsb
fwait
mov
mov
lahf
dec
jmp
mov
stos
push
mov
data16
add
xor
inc
push
jp
dec
jb
sbb
jp
es
movsl
fcmovu
aas
add
inc
lahf
cmp
cmpl
pop
imul
arpl
xchg
stos
leave
inc
and
mov
call
mov
test
push
sub
and
push
int
sbb
add
aad
scas
sbb
fisttpll
add
rorl
shlb
repnz
add
rcll
std
push
xchg
decl
xchg
stos
out
and
in
inc
jae
sbb
dec
ficompl
ss
ret
jmp
enter
sbb
cwtl
popf
jmp
iret
push
sub
mov
cmpb
mov
in
xor
inc
cmp
jmp
mov
pop
add
pop
out
fidivrl
fs
sub
lea
stc
cmpsl
sbbb
jbe
jb
daa
cmp
push
lods
fidivrs
stos
and
scas
cmp
out
add
add
adc
push
mov
fadd
cmpsb
mov
ret
in
mov
mov
xor
popf
xchg
scas
push
and
outsb
ljmp
sbb
jmp
pop
aaa
cmp
je
call
out
rcrl
nop
xor
lock
aam
stc
jo
jo
jmp
loope
movsl
call
push
lret
fists
test
outsb
inc
aaa
push
stos
pop
sub
mov
out
lcall
scas
pop
cmp
inc
push
fstpt
mov
mov
into
sbbb
add
xor
adc
imul
and
clc
mov
or
out
outsl
or
nop
mulb
mov
push
cli
ret
cs
dec
or
bound
rcr
in
jg
jae
stc
leave
iret
ds
push
sbb
inc
loope
test
adc
pop
xchg
in
movsl
add
in
ret
push
push
sub
push
mov
ret
or
dec
jge
in
cli
jle
push
xor
aad
lods
pop
mov
sub
xchg
sub
dec
push
aam
and
xor
jecxz
sbb
cmp
idivb
mov
jo
lahf
xchg
enter
sbb
sbb
in
jge
mov
jmp
dec
and
hlt
adc
cmp
imul
cmp
xchg
outsl
sarb
mov
test
pop
popa
arpl
gs
leave
mov
xor
cltd
inc
imul
adc
add
fs
inc
sbb
mov
fiadds
or
xlat
dec
lahf
mov
pop
ja
aas
push
lcall
pop
int3
ds
int3
add
fdiv
sub
sub
shlb
mov
mov
ret
adc
pop
xchg
mov
mov
xchg
cli
sahf
xor
test
pop
sub
lret
dec
lret
mov
mov
std
scas
pop
mov
sub
xchg
loope
fisubs
sub
stc
scas
pop
mov
sbb
sarb
add
jns
daa
aad
jp
lret
movsl
jl
and
icebp
or
pop
rorl
test
sub
sub
cmp
jge
ret
stos
cmp
jae
mov
hlt
or
lods
insl
aam
out
fisubrl
jmp
cmpsl
mov
jecxz
adc
js
jbe
inc
inc
mov
es
shlb
notl
ret
pop
repz
bound
in
pusha
mov
mov
mov
sti
pop
int
sbb
imul
bound
jo
xor
or
lods
jno
sbb
jg
shll
adc
sub
and
xor
sub
cwtl
sahf
lods
cmc
mov
out
sbb
adc
in
mov
daa
cmp
mov
out
xchg
push
lcall
xchg
ss
test
cli
loopne
stos
push
sbb
add
mov
repnz
movsl
lock
lcall
nop
add
xor
les
push
jne
cld
test
in
movsl
inc
mov
pop
iret
mov
sbb
dec
mov
test
push
dec
pop
inc
fstpl
notl
cmp
lret
and
mov
push
and
jle
scas
enter
icebp
scas
mov
ret
es
xchg
cmp
sbb
sti
loopne
out
mov
xor
repz
out
lret
fsqrt
lock
mov
out
push
icebp
mov
push
jnp
pop
insl
add
cmp
fdivs
add
fcomps
ret
push
lds
jnp
jg
adc
inc
xchg
stos
mov
ljmp
cmc
mov
jns
aad
imul
push
mov
loop
loopne
sar
stos
lcall
cmp
mov
jne
fistps
xchg
pop
sbb
jne
fadds
lock
jg
inc
addb
sub
call
loopne
mov
push
and
cmp
adc
xor
les
mov
in
inc
stos
sbb
cmovno
lahf
test
lds
roll
xor
adc
cs
mov
mov
mov
les
cmp
lcall
mov
popf
mov
adc
mov
out
xchg
dec
push
dec
mov
outsl
mov
xchg
mov
jne
xor
xor
sub
mov
jo
sbb
sahf
lret
push
and
cld
cmp
add
dec
cmp
inc
pop
add
mov
scas
sahf
ret
sarl
xor
cmpsl
insl
push
pop
mov
cmpl
pop
xchg
push
sti
cmc
push
jg
mov
dec
subl
or
ja
inc
or
dec
sbb
xor
lcall
sbb
xchg
fnstcw
fmul
cli
insb
mov
sub
repnz
pop
pop
cmp
cmp
mov
cltd
mov
popa
sbb
inc
sbb
cmp
fwait
push
mov
xchg
push
sti
xchg
cmp
out
xor
fs
sti
jo
pop
mov
inc
xchg
insl
xor
xchg
loopne
mov
dec
push
jnp
jno
loope
sub
fldl
xlat
mov
fbstp
repz
xchg
clc
pop
pop
sub
leave
push
das
jo
mov
lods
pop
scas
imul
or
xchg
es
jecxz
mov
mov
nop
cmp
mov
lea
decl
test
nop
das
rorl
dec
fnstenv
pusha
imul
pop
sub
lcall
aad
int
dec
cmp
xchg
sub
cmp
jge
rcl
jne
fdiv
jl
mov
pop
lahf
add
aas
jge
or
xchg
push
cmp
mov
mov
mov
aad
shrb
jmp
cmpl
xor
enter
ret
sbb
inc
add
bound
es
loopne
pop
pop
fcomip
push
sub
rep
push
add
stc
jne
push
enter
int
cli
ja
mov
loop
stos
mov
mov
scas
icebp
femms
push
fildll
ret
mov
push
out
std
push
repz
int3
arpl
inc
push
xchg
xor
jno
cmp
mov
scas
jbe
xchg
cmp
stos
hlt
or
or
stc
pop
lods
aaa
orb
ds
insl
hlt
stos
lock
cmp
xor
movsl
addr16
insb
cmpsl
mov
add
pusha
push
aas
or
cmp
pop
or
jecxz
adc
mov
mov
lcall
sub
sti
mov
daa
out
data16
and
jmp
out
data16
pop
lcall
mov
clc
jp
xchg
stos
imul
pop
dec
lcall
andb
pusha
cmpb
shufps
repz
int3
sub
out
sbbb
jmp
mov
ror
inc
faddl
imul
lcall
push
js
divl
inc
xchg
xchg
movsl
mov
pop
xor
adc
ret
pushf
pop
outsl
shrl
pop
sbb
je
mov
cltd
shl
jno
add
arpl
mov
imul
adc
xchg
outsl
pop
mov
jge
xchg
push
aaa
push
fwait
sub
les
sub
adc
insl
outsl
sti
push
arpl
test
jae
pop
dec
je
jg
dec
sub
xor
lret
push
push
aad
mov
xchg
push
adc
push
mov
div
loop
push
inc
mov
add
xor
dec
aad
imul
imulb
pop
outsl
icebp
adc
dec
daa
xchg
in
mov
ja
test
imul
cmpsl
insl
inc
jbe
in
loope
pop
inc
pop
mov
ljmp
fbstp
dec
in
xor
xor
pop
popa
xchg
mov
adc
rorb
data16
sahf
mov
mov
cmp
add
int
xchg
cwtl
pop
cld
shlb
aaa
cmp
jno
push
push
lahf
dec
sub
add
mov
push
cwtl
sbb
push
fbstp
pop
push
repz
mov
mov
mov
sub
leave
mov
testb
pop
ja
mov
adc
jl
iret
mov
push
loopne
cmp
popa
jge
mov
int
scas
push
sbb
decb
xlat
pushf
dec
pop
xor
hlt
andb
sub
loop
outsl
jmp
mov
leave
test
bound
fsubl
xchg
push
mov
outsl
test
or
bound
cwtl
mov
adc
inc
mov
in
mov
daa
mov
insl
out
aas
sub
iret
lret
inc
adc
fucomip
push
rorb
out
test
ja
sbb
in
loopne
push
inc
fs
or
or
dec
mov
pop
je
lds
nop
mov
pop
fadds
rclb
jp
add
dec
pop
mov
mov
ret
mov
add
mov
in
stos
cmp
aas
mov
loopne
sti
jmp
hlt
jecxz
and
xchg
sub
mov
ja
push
ja
or
mov
scas
loope
or
out
cmc
lret
rclb
mov
sbb
in
rcr
imul
int3
sbb
aas
cwtl
movsb
jge
daa
mov
push
out
cmp
xchg
lock
lock
stc
pop
test
push
shl
lcall
xchg
pop
inc
arpl
movsb
or
out
scas
adcb
inc
les
dec
std
call
test
push
repnz
xchg
fsub
fldenv
mov
pop
and
stos
xchg
xchg
adcb
xchg
popa
lahf
int
fistpll
xchg
xorb
clc
jg
rcrl
enter
dec
xchg
and
mov
iret
lahf
cmp
or
icebp
lret
sbb
adcb
stos
daa
pop
mov
xchg
cmpsb
mov
sub
mov
stc
in
je
inc
mov
mov
sub
jle
cltd
loope
mov
add
adc
jmp
mov
and
movsl
dec
jecxz
pop
ss
push
int3
sub
data16
sbbb
jb
jnp
dec
ret
add
jmp
mov
and
lock
jmp
and
mov
dec
outsl
movb
mov
jb
pusha
ret
mov
sbb
movsb
mov
cltd
or
lds
aas
pop
pop
sbb
mov
rorl
jl
hlt
test
pmuludq
fistpll
xlat
pop
pop
mov
test
pop
pop
outsb
mov
arpl
add
hlt
dec
lods
fidivrs
cmpsb
ficomps
pop
aaa
js
in
ja
scas
sbb
sbb
ljmp
adc
addr16
mov
cmp
mov
test
cmpsb
lahf
bound
insb
cmp
mov
jb
mov
cmp
pop
lret
cmp
jle
in
addb
addr16
xor
hlt
jecxz
cmpl
out
gs
sbb
popa
push
movsb
sti
shlb
shlb
fdivs
loop
jg
add
cltd
bound
or
ja
arpl
add
mov
bound
or
mov
xchg
jmp
xor
test
jnp
in
xor
and
sbb
scas
cmpsb
aad
adc
addr16
movsb
mov
or
mov
push
sub
or
sub
inc
pop
mov
aad
lods
and
iret
inc
mov
mov
sarl
xor
pusha
cmpsb
xor
repz
divl
leave
outsl
cmpsb
mov
mov
insb
jne
arpl
mov
or
frstor
loope
adc
loop
imul
xor
inc
ja
leave
xchg
pop
push
push
jno
dec
sti
jmp
aad
xor
or
stc
mull
cmp
xchg
jbe
out
adc
es
mov
jne
mov
out
clc
cmpsb
cmp
mov
cltd
and
cmpsl
push
cmp
dec
mov
enter
dec
and
jecxz
popa
inc
pop
shll
dec
mov
in
push
dec
sar
test
sbb
pop
insb
mov
jle
add
fisubs
cmp
pop
ret
inc
icebp
test
insl
das
loop
dec
jns
add
scas
push
push
mov
and
fdivrs
je
nop
push
ficoms
cmp
aam
movsl
out
orb
pop
enter
daa
les
rclb
outsb
xchg
and
sahf
data16
push
std
cs
in
and
jae
and
jo
push
jne
icebp
push
mov
push
xor
pusha
adc
adc
adc
dec
dec
mov
jmp
daa
lods
ds
push
shrl
and
lods
jne
testl
sbb
mov
and
xchg
jmp
lcall
addr16
xchg
loop
sbb
arpl
outsb
jno
lods
push
adc
fdiv
xchg
lds
insb
and
ret
fcomps
lret
mov
jl
ja
dec
adc
pop
xchg
arpl
and
cmp
xchg
lret
sbb
mov
push
fbld
addl
sahf
pop
repz
lret
mov
or
dec
mov
aad
sarl
aam
jmp
mov
sbb
xor
outsb
or
sub
adc
inc
sbb
cwtl
lret
inc
push
xacquire
punpckldq
clc
sub
pop
imul
push
pop
mov
repnz
jne
fldlg2
mov
jo
push
mov
inc
loop
lahf
pop
adc
test
popa
sbb
es
jmp
cmc
mov
lock
or
mov
cltd
pushf
pop
daa
push
lods
popa
push
movsl
cmp
xchg
stos
sub
ljmp
push
int3
dec
push
loop
outsl
jno
sub
xchg
jmp
pop
and
ret
pop
dec
and
cli
test
insl
popa
dec
pop
mov
je
inc
mulb
bound
repnz
loop
pusha
mov
ret
add
xchg
pop
sub
aas
or
jg
mov
stos
sub
xor
jecxz
dec
add
inc
popa
std
rol
divl
or
mov
sub
iret
mov
iret
adc
shll
mov
mov
jge
add
xor
push
loopne
aas
and
call
jp
push
arpl
clc
loopne
ret
push
rcrb
stc
lds
popa
mov
dec
loopne
mov
test
bound
mov
out
jle
js
jne
es
dec
jle,pn
cmp
mov
jp
aam
sbb
lds
pop
nop
pop
out
cmc
lea
cmp
add
adcl
in
fbstp
movsb
icebp
cmp
mov
xchg
pop
das
sti
sub
cmp
inc
rcll
adc
mov
push
jge
out
dec
fwait
xchg
inc
xchg
stos
cltd
pop
icebp
xor
lods
sti
mov
pop
xlat
rcrl
xchg
mov
ja
loopne
sarb
xor
xor
xchg
fwait
mov
xor
cmp
jmp
std
adc
xchg
push
mov
out
or
cmp
aam
jl
cli
stos
clc
jecxz
jno,pn
sbb
xchg
adc
lret
mov
jae
cmp
mov
cmp
cmp
int
outsl
lods
cs
data16
and
jl
aad
cltd
pop
or
push
out
push
lahf
sbb
lock
jl
mov
div
sub
call
aas
out
in
out
ret
jno
adc
mov
arpl
into
jle
arpl
arpl
xor
fwait
lods
fwait
sarb
cwtl
rcll
mov
mov
xchg
cmc
stos
mov
sbb
adc
popl
test
dec
xorl
mov
cltd
adc
add
mov
sbb
add
aam
xor
inc
mov
xlat
mov
dec
xchg
xor
cwtl
ljmp
out
and
cli
std
push
inc
repz
std
mov
sub
loopne
fdivs
sbb
mov
loop
cwtl
xlat
stos
aaa
jge
jno
adc
dec
call
test
pop
dec
and
rorb
mov
aas
mov
inc
and
pop
push
xor
jp
cmp
ss
hlt
xchg
gs
inc
cmpsl
orb
int
enter
sbb
repz
inc
push
push
mov
icebp
and
xor
mov
call
loopne
push
xchg
popl
jge
pop
jle
xor
outsb
add
jo
push
setl
pop
roll
enter
pop
xchg
sub
rolb
or
inc
fdiv
xchg
inc
mov
icebp
int
xchg
jne,pn
insb
pop
pop
scas
lods
into
mov
xchg
lahf
pop
xor
sub
xchg
ret
outsb
lds
lock
inc
mov
xchg
arpl
cmpl
lret
cmp
inc
push
cmp
out
bnd
jg
lods
stos
pop
inc
mov
loope
pop
outsl
sub
jp
dec
xchg
call
aam
int3
sub
insb
in
mov
std
addl
lea
imul
out
aas
int3
cmp
mov
popf
loop
pop
dec
rorl
faddl
test
aaa
ss
sub
outsl
mov
clc
movl
adc
data16
fcompl
jmp
push
lret
fcoms
cld
ja
xchg
stc
out
mov
or
icebp
addr16
out
sbb
shrl
lods
and
xor
inc
test
adc
nop
sub
dec
nop
dec
inc
mov
pop
jb
cld
lahf
cmc
pop
cmp
insb
cltd
sarl
sbbb
scas
out
mov
mov
pop
lcall
fnstenv
xor
sbb
pop
inc
mov
xchg
pop
test
or
mov
cmp
movsb
push
add
add
jp
ja
test
sub
cmp
jno
mov
mov
leave
adc
movsb
adc
or
fildll
cmp
push
inc
push
aad
push
aas
push
test
pusha
cmp
and
fnsave
mov
in
sar
je
movsl
adc
addr16
lahf
mov
mov
int
stos
cmp
aam
mov
call
push
cmc
sbbl
ljmp
negl
int3
or
cs
test
jo
popf
push
push
std
jp
sub
fs
loope
mov
xchg
push
mov
arpl
mov
loopne
xchg
mov
mov
dec
or
ds
xadd
fnstsw
sbb
mov
insb
adc
fwait
adc
pop
aam
cmpsb
jecxz
mov
inc
inc
and
pushf
aam
rcll
in
push
imul
add
push
jne
stc
shlb
ljmp
inc
push
or
sub
cmp
repnz
cld
dec
pop
fldenv
adc
xorl
cs
sbb
xor
or
imul
sbb
xor
cmpl
push
dec
mov
sub
ret
faddl
add
and
or
into
add
mov
adc
xor
mov
inc
cli
hlt
pop
mov
faddp
shll
movsl
loopne
jnp
adc
das
or
push
or
stos
xor
xor
jle
jnp
inc
stc
adcl
aad
mov
adc
mov
or
shll
lds
fisubrl
mov
push
mov
cmpsl
adc
negb
push
stc
mov
loop
pusha
lcall
pop
outsl
lds
outsb
mov
cmp
gs
adc
mov
adc
adc
daa
inc
jmp
xchg
mov
sbb
xor
xchg
adc
sbb
in
cmp
std
push
loopne
jecxz
movswl
std
or
mov
inc
shl
sti
push
or
mov
daa
adc
push
push
ret
insl
lock
in
lret
pop
and
stos
fnstsw
pop
fdivrl
mov
fs
adc
std
lods
xchg
xchg
mov
ss
mov
cmp
push
adc
popf
mov
mov
cmp
add
and
and
pop
mov
pop
std
das
sub
mov
imul
push
mov
sub
mov
cmc
sahf
sub
lahf
sahf
clc
sbbb
ss
sarb
adc
mov
sub
cmp
and
arpl
mov
sarl
dec
cld
push
mov
hlt
or
mov
push
daa
or
mov
mov
out
mov
mov
push
adc
jecxz
cmp
sub
sbbl
mov
adc
or
push
lods
fiaddl
jp
mov
mov
xor
sbb
pop
mov
mov
and
xchg
push
xor
movsb
pop
jb
inc
lret
pop
sbb
and
push
xor
jo
ret
imul
jp
sub
pop
bound
mov
int
adc
dec
push
pop
add
mov
arpl
in
adc
jp
dec
pop
fs
push
jns
or
repnz
aam
adc
aaa
out
pop
loopne
push
or
mov
mov
ds
jp
xchg
aaa
adc
add
pop
push
cltd
push
inc
pop
jns
inc
mov
lret
rolb
mov
testb
out
jae
pop
in
and
es
addr16
ret
pop
sub
repnz
jl
test
xchg
rorl
fs
call
push
push
aad
movsb
mov
rcl
mov
jle
mov
dec
push
movl
dec
enter
push
fdivl
sub
testl
adc
push
ja
clc
scas
ficompl
lea
push
xorb
ss
mov
call
clc
sbb
aaa
in
imul
xchg
mov
mov
arpl
not
leave
inc
or
cmp
addr16
mov
xchg
hlt
outsb
push
xor
mov
clc
dec
sub
mov
mov
popf
inc
aas
addr16
pop
push
or
or
push
sub
bound
ficoml
and
mov
imul
inc
popf
into
jge
pop
imul
mov
mov
dec
pop
bound
inc
shll
lret
push
jp
int3
mov
fst
mov
adc
in
scas
mov
movsb
lret
fldt
inc
mov
mov
sub
mov
lahf
pop
out
lods
shlb
aad
cmp
jns
mov
stos
test
mov
mov
sbb
outsb
pop
aas
mov
push
hlt
jp
ja
jnp
or
cmp
jl
adc
add
xchg
cmp
loopne
push
pop
cmp
jge
dec
cmp
stos
test
mov
test
and
scas
mov
iret
out
adc
inc
adc
stos
mov
xchg
xor
mov
ss
out
inc
cmp
rorb
test
mov
outsb
mov
jns
call
mov
dec
cmp
inc
scas
movsl
jns
pop
add
inc
xlat
loopne
call
lds
xchg
lods
incb
mov
pusha
mov
jecxz,pn
das
cltd
mov
or
sub
adc
scas
jo
insb
push
push
jmp
xor
arpl
aaa
cmpsl
clc
out
insl
aam
lods
pop
mov
add
xchg
push
icebp
xchg
mov
xor
cmp
xchg
movsb
lods
out
sbb
test
push
jbe
cmp
cmp
pop
cmp
arpl
mov
hlt
pop
aaa
pop
ficompl
in
scas
iret
and
inc
inc
icebp
pop
mov
sbb
pushf
movsl
iret
fisttpll
add
sarl
dec
xchg
mov
jge
xlat
push
ret
mov
jnp
jne
pop
lahf
cwtl
mov
jno
call
inc
lea
jg
jne
sbb
jb
mov
and
inc
xor
pop
mov
mov
or
mov
push
fstpl
push
loop
daa
cmpb
loopne
loopne
cltd
jno
and
cmp
sub
push
loope
add
fwait
pop
cmp
in
sbb
mov
movsb
inc
fwait
sub
dec
rorl
ljmp
mov
pop
enter
push
mov
adc
sbbb
subb
jo
pop
jecxz
jae
orb
xlat
pop
bound
xchg
xchg
pop
lcall
ds
pop
iret
sahf
or
fcmovne
int
fistpl
cmpsl
jnp
clc
push
notb
icebp
lahf
call
mov
cmp
jle
push
sbb
and
mov
fdivs
repnz
clc
icebp
pop
xchg
jo
xor
mov
stos
cmpl
cs
cmp
out
push
mov
mov
popa
es
inc
daa
mov
aam
ret
mov
inc
xchg
loop
pop
cmp
cmp
repnz
xlat
in
cmp
and
mov
rcrb
enter
jne
sbb
pop
push
scas
add
pusha
jge
ss
data16
adc
xchg
push
sub
call
sub
rorb
pop
push
adc
inc
inc
in
mov
arpl
ss
inc
add
imul
testl
cmp
mov
pushl
adc
cwtl
mov
cmpb
ja
outsl
cmp
lock
lods
cmc
out
mov
add
xchg
inc
ret
lds
ror
xchg
pop
andl
lahf
jg
sbb
or
xchg
jle
dec
repz
in
enter
pop
jo
insl
push
mov
aad
cli
xor
dec
adc
adc
add
push
xchg
mov
inc
add
je
scas
lret
stos
add
push
test
xor
insb
sarb
bound
stc
push
popf
mov
pop
and
sbb
jne
adc
clc
out
int3
push
inc
push
mov
call
or
stos
dec
mov
xor
fimuls
mov
push
jl
pop
mov
pop
mov
movsb
mov
xlat
jnp
sbb
fnop
fwait
xor
push
repnz
sub
mov
shrl
xchg
xor
lahf
stc
mov
imul
in
mov
mov
js
icebp
xor
adcl
mov
rclb
aaa
out
fsts
push
xchg
xchg
enter
repz
adc
pop
dec
scas
cmp
insb
movsb
jle
jae
clc
dec
stc
cmp
test
das
sbb
pop
test
das
jno
sbb
pop
sub
repnz
add
xchg
out
jns
int3
test
add
xor
data16
or
scas
xchg
pusha
sub
fistl
out
adc
gs
lret
test
adc
and
dec
sti
ss
loop
mov
pusha
inc
cli
push
jne
leave
je
mov
pop
das
add
ret
push
sub
lcall
jmp
nop
nop
cmp
jg
insl
aaa
mov
adc
jg
mov
dec
enter
sub
aas
add
ljmp
movsb
xlat
les
pop
fiadds
mov
sub
lds
sti
mov
sbb
jae
int3
push
scas
mov
clc
sbb
ret
sub
xchg
icebp
dec
mov
aas
and
out
cmc
mov
xchg
arpl
inc
inc
cmp
movsb
es
or
adc
sub
pop
call
test
and
loopne
call
aas
dec
cmp
call
cli
mov
push
mov
jmp
lret
add
out
push
fdivs
sub
inc
cmp
mov
adc
sbb
icebp
out
jl
outsb
out
cwtl
nop
cmp
push
les
push
jecxz
mov
fistl
shl
scas
test
bts
sbb
in
int
jne
or
mov
add
inc
fsubrs
cwtl
sub
daa
cli
mov
test
push
imul
push
adc
lds
je
in
loop
jo
or
sbb
test
mov
inc
cmc
sbb
pop
mov
inc
enter
scas
shl
dec
outsl
or
dec
test
js
inc
mov
imul
ljmp
sub
or
mov
addb
and
mov
lahf
pop
loopne
sarl
cmpsb
mov
sbb
rorl
fsubrs
xlat
clc
cmp
sbb
xchg
or
in
mov
sub
cmp
mov
je
movsb
xchg
outsl
outsl
popa
inc
in
jmp
pop
cmp
push
lret
cmc
mov
cmp
add
or
movsl
negl
push
xor
mov
ret
sub
or
push
scas
mov
sbbl
shrl
in
mov
lds
mov
ja
in
jmp
pop
enter
bound
and
mov
cld
dec
add
add
pusha
or
sub
clc
jmp
mov
clc
icebp
mov
jle
pop
js
sub
jle
ds
push
insb
cmpb
mov
push
xchg
mov
xchg
add
sub
dec
or
lods
js
pop
cmp
mov
int3
stc
test
mov
pop
jbe
dec
pushf
pushf
outsl
imul
inc
push
push
incl
ret
or
sbb
dec
cwtl
pop
xorb
ds
push
or
cmp
fadds
cmc
hlt
out
scas
mov
jnp
xchg
cs
sub
add
or
dec
fcoms
out
sar
and
mov
int
inc
xchg
sub
imul
xchg
pop
loope
or
sbb
cmp
sar
popf
cmp
sbbl
shr
mov
das
add
daa
js
mov
xor
xlat
jns
or
mov
outsl
push
sbb
or
movsl
test
pop
adc
cltd
jge
aam
clc
sbb
mov
sub
call
lret
sbb
adc
stc
call
data16
xchg
mov
int
mov
cmp
insl
fbstp
or
mov
adc
and
sub
mov
stos
sub
arpl
adc
daa
das
arpl
pop
ret
mov
icebp
ss
mulps
cmp
stos
cmp
jl
mov
adc
insl
xor
mov
sbb
data16
in
jle
cmp
icebp
push
data16
jbe
sub
jae
inc
jne
das
sub
sarb
movsb
or
subb
inc
push
mov
dec
xor
push
call
in
insb
or
jecxz
call
adc
int
cltd
shrl
mov
mov
xor
or
je
jo
sbb
shll
add
insb
cmp
aam
mov
sub
mov
dec
movsl
mov
jne
call
fs
xorl
incl
pop
xor
pop
fisubs
ficompl
popa
lcall
xorb
cld
cmp
mov
repz
jns
pop
imul
pop
ret
add
xor
mov
out
fisubl
mov
sub
inc
stos
pop
out
mov
or
notl
add
jns
jge
and
cld
sahf
mov
outsb
xor
mov
in
mov
push
inc
or
mov
add
fwait
adc
add
xchg
fnstenv
jno
enter
out
xor
pop
ret
sub
fcompl
call
movsb
in
bound
add
jbe
mov
jecxz
cmp
jp
sub
cmp
xchg
shrb
imul
and
xlat
sti
pop
push
mov
xor
jo
scas
sbb
cmp
es
add
sub
cmp
stc
sub
lret
ret
jge
cmp
fnstenv
inc
adc
push
loop
fiadds
stos
adcl
cmp
mov
ret
pop
push
jmp
pushf
leave
push
mov
cmpsb
fisubrl
push
push
cwtl
dec
xchg
lahf
mov
push
inc
pusha
pop
sbb
mov
dec
ja
mov
push
jecxz
jo
jb
hlt
icebp
dec
in
cmpb
imul
sbb
mov
inc
xor
out
dec
pop
or
mov
lea
dec
push
js
cmp
jmp
mov
outsb
and
mov
sub
cmp
jecxz
divb
cmp
cmp
int3
pop
or
addr16
faddp
in
inc
sbb
add
mov
pop
push
push
and
rolb
scas
test
xor
lock
popa
pop
in
pop
inc
xchg
daa
xchg
rolb
jno
inc
lea
add
add
pop
lods
outsl
test
hlt
fisttpll
xor
push
push
divb
jl
mov
outsb
enter
test
jge
jle
aas
pop
dec
lret
inc
das
fs
rorb
insl
mov
dec
cli
xor
lods
or
loopne
push
lret
jecxz
aam
fsubl
nop
in
shl
jnp
arpl
prefetcht2
sahf
sub
popa
dec
jbe
stos
dec
pop
sbb
sahf
push
pop
notb
sub
xchg
xlat
mov
add
inc
out
dec
arpl
cltd
aaa
inc
push
inc
pop
jmp
iret
push
mov
push
xchg
stc
mov
cmp
inc
mov
push
jmp
pop
mov
add
add
or
sub
frstpm(287
or
xchg
flds
dec
mov
loop
fs
mov
jb
cmpsl
pop
outsl
xchg
sarb
daa
mov
sbbl
cmpsb
or
shrb
push
xor
ficomps
scas
out
lods
jg
xor
sbb
mov
xchg
sub
outsb
aad
cmpsb
lret
jmp
adc
push
push
imul
mov
or
scas
adc
stc
addr16
xor
je
pop
adc
xchg
pop
data16
hlt
xchg
sbb
sub
dec
jae
sub
adcl
push
sub
adc
repnz
fbstp
inc
sbb
and
jle
jl
or
icebp
xchg
jle
sbb
pop
jo
mov
inc
inc
or
inc
test
in
push
pop
mov
scas
enter
add
mov
xchg
jns
add
push
repz
xchg
cmc
addr16
adc
pop
xor
xchg
mov
inc
jmp
dec
push
orb
pop
inc
cli
add
mov
sub
enter
sub
fsubs
lds
test
push
add
add
sub
and
int
mov
mov
mov
sub
in
xchg
and
movsb
push
in
sti
lea
loope
pop
dec
xlat
scas
fs
into
mov
daa
out
aad
mov
mov
iret
jo
jae
sbb
push
push
loop
mov
shl
aas
sub
in
xor
add
ret
pop
test
repnz
inc
ret
fcoms
hlt
push
out
and
fstl
cltd
inc
std
imul
gs
or
mov
repnz
in
jno
mov
inc
outsl
faddp
fcmove
bnd
xchg
pop
out
pop
push
xlat
mov
sarl
fsts
cmp
cmc
scas
sub
ds
insb
sbb
nop
or
addl
scas
ret
cwtl
outsb
push
lahf
testb
rcll
call
cmp
cmp
sbb
cmp
inc
jnp
xchg
std
and
es
sbb
sti
jb
xor
repz
mov
lret
adc
into
inc
jmp
add
lret
jo
pop
sub
mov
jmp
daa
call
pop
add
cmp
pop
test
icebp
sub
and
xchg
push
es
leave
jg
xor
add
negb
pop
insb
jns
adc
scas
jp
cltd
mov
push
and
jp
adc
imul
fisubrl
icebp
push
cmpsl
adc
jnp
adc
mov
xor
xchg
push
adc
dec
rorl
loope
daa
nop
pop
mov
dec
jg
cmp
fists
mov
inc
popf
mov
jns
pop
loop
and
add
mov
out
push
pushf
cmp
pop
push
lods
and
mov
push
lahf
std
test
mov
mov
stc
xor
incb
mov
add
cmp
movsb
sub
pop
cld
and
pop
pop
dec
xor
popf
and
jp
addr16
mov
aas
aam
icebp
push
xchg
into
mov
jle
iret
sbb
mov
bnd
push
and
add
daa
pop
out
repz
sbb
sbbb
daa
cmp
rcrb
leave
movsl
xchg
mov
test
mov
je
movsb
add
lret
sub
sub
aad
sub
xor
cltd
mov
push
mov
mov
sub
add
pop
roll
or
lret
jle
ss
cmpsb
hlt
push
xorl
les
arpl
cmp
arpl
mov
inc
xor
cmp
cwtl
xchg
ljmp
iret
push
mov
out
fimull
adc
aas
lea
dec
or
test
xchg
mull
pop
pop
mov
and
inc
test
sbb
xchg
pop
in
iret
in
pop
inc
test
adc
add
sti
std
jge
or
loope
test
mov
idivb
or
xchg
lret
mov
cwtl
loop
jl
xor
fildl
insl
adc
sbb
mov
arpl
mov
xchg
loopne
ror
rcrb
cmc
or
ret
xchg
jge
cli
or
and
mov
sub
adc
cmpsl
ret
gs
sub
push
mov
adc
push
sbb
subl
sub
insb
mov
adc
cli
add
std
addr16
fbld
pop
push
xchg
pushf
cmp
out
ljmp
inc
sbb
stos
shr
push
push
lret
scas
pop
xchg
sub
cmp
hlt
hlt
pop
xchg
cld
scas
cmp
push
inc
mov
stos
adc
or
xchg
std
loope
lret
push
mov
inc
jae
push
icebp
cltd
push
mov
icebp
aas
sub
jne
cmp
fucomip
sub
hlt
inc
xchg
ret
lcall
out
pop
adc
pop
imulb
xchg
xchg
cmp
dec
shrb
lods
dec
xchg
enter
inc
and
xchg
rolb
adc
movsb
xor
xchg
pusha
dec
scas
sbb
cld
cmp
pop
call
aas
add
lock
inc
ljmp
gs
mov
cmc
call
push
and
xor
and
mov
popf
mov
mov
mov
pop
lret
ret
inc
icebp
aaa
push
lea
aad
lock
pop
push
dec
out
addr16
pop
inc
lock
clc
sbb
fstps
les
ret
xchg
test
lret
sub
fdivp
and
add
adc
push
aam
out
test
cmc
imul
adc
aad
lret
into
int
cld
cmp
notl
mov
inc
push
dec
dec
out
adcl
gs
sti
into
test
out
cmp
mov
mov
dec
mov
or
ret
sub
mov
cmp
jnp
adc
pushf
fs
in
out
cmp
or
js
aas
pop
add
sub
fdivr
jnp
or
jmp
inc
jecxz
stos
sub
ljmp
pusha
jae,pn
mov
xchg
push
jns
inc
movsb
or
rolb
ja
jg
in
push
mov
add
and
and
ss
jnp
out
jo
add
testb
mov
lcall
ret
mov
push
inc
add
pop
ss
mov
jnp
inc
adc
fmuls
add
mov
in
aas
popf
pop
icebp
int
or
cwtl
push
cwtl
adc
lods
sub
mov
sbb
jno
cld
cli
inc
or
das
sub
jbe
cmp
pop
test
jecxz
push
clc
push
test
inc
test
jae
push
pusha
fisubrs
xor
jbe
jmp
lea
nop
clc
rorl
dec
les
pop
mov
sub
lods
pushf
js
or
imul
arpl
push
or
mov
inc
cmp
lret
add
xchg
dec
ljmp
mov
fbstp
push
sbb
lods
push
ret
mov
xchg
push
jns
mov
andl
cmp
jg
call
mov
sbb
mov
adc
outsb
out
fdivl
jns
mov
out
and
dec
sarb
push
ja
aam
lea
xor
loope
inc
cmpsb
out
add
sub
push
fidivl
pop
or
pop
jg
int3
icebp
sub
imul
sbb
pop
add
pop
je
sti
test
packsswb
push
sbb
jl
ds
stc
sar
push
sbb
inc
inc
rorl
rorb
cmp
ficoms
das
out
into
fadds
sub
or
and
jmp
ret
cs
dec
ret
fldenv
test
sub
add
sarl
dec
push
movsb
stc
je
lcall
cmpsb
ds
cmp
mov
mov
clc
bound
pop
push
add
sub
cmc
add
and
cmpsl
mov
imul
lods
inc
push
in
sahf
cmp
mov
sbb
push
std
stos
mov
mov
mov
fcomps
mov
adc
mov
jmp
cmp
loope
pusha
aas
lock
mov
andl
cmpsl
cwtl
ljmp
setne
jno
aad
push
mov
fdivrl
push
cmpsl
adc
enter
je
cmc
stc
enter
xchg
ss
and
xchg
xchg
dec
cmp
shlb
or
and
subb
mov
xorb
xchg
ficomps
mov
mov
sbb
aam
or
cmp
ret
hlt
lods
mov
pop
mov
pop
aad
xlat
insl
test
cmpsb
in
hlt
je
sub
loope
pop
lds
popa
lea
popf
pop
mov
pop
in
jbe
jg
cmc
out
dec
aam
shlb
inc
cmp
and
repz
adc
mov
push
pop
inc
sti
push
xlat
or
ret
aam
test
test
sub
lret
cmpsb
mov
dec
ljmp
mulb
xchg
jmp
movsl
sahf
sbb
push
and
xchg
xchg
int3
test
sbb
daa
es
adc
lret
pop
cmp
stos
cli
lock
or
bound
or
sbb
and
jbe
jecxz
scas
sbb
scas
or
adc
rcl
and
into
mov
mov
xchg
cs
mov
fcompl
jmp
subb
cmp
xorb
iret
push
out
les
dec
mov
jae
pop
push
jl
rorb
popa
jne
dec
cmp
push
add
jns
and
xchg
mov
enter
fsubl
je
loopne
pop
mov
out
mov
leave
push
adc
sub
or
cwtl
and
popf
pop
out
inc
cmc
sbb
xor
pop
ret
out
jb
fs
mov
mov
and
fdivp
imul
test
adc
rol
icebp
ss
adc
gs
cmp
popf
sbb
pop
adc
and
jns
jnp
lods
out
scas
imul
dec
mov
ret
adc
jl
push
inc
addl
sahf
popf
loope
bound
or
stos
mov
bnd
stos
xlat
sbb
mov
imul
pop
mov
pop
and
xchg
loopne
in
push
in
xor
dec
and
les
add
mov
dec
lahf
jmp
rorb
mov
xchg
jne
in
cmp
jns
sbb
in
out
flds
cwtl
bound
out
jnp
push
repnz
rclb
pop
push
aaa
xor
jg
mov
bnd
sub
stos
xor
and
fimull
push
enter
lcall
addr16
push
arpl
popa
inc
icebp
into
in
pusha
adc
cmp
sti
push
loope
xor
jle
push
push
call
pop
or
fstp
daa
sbb
jg
cmp
sbb
iret
ficompl
cmp
sbb
jp
push
inc
insl
je,pn
shr
jae
cld
jle
mov
and
sub
xchg
adc
xchg
mov
add
add
std
sub
ja
rclb
mov
jl
repz
cmp
sub
iret
mov
cltd
pushf
rorl
lods
fsubrp
dec
repz
jg
pop
aaa
adc
xor
rcrb
insb
inc
imul
jp
add
into
fldenv
stc
fcoml
xchg
mov
and
ja
fsts
mov
and
pop
dec
push
sbb
add
rorl
xor
cli
pop
je
fistpll
lock
sub
inc
xchg
mov
adc
shlb
and
sub
insb
adcb
js
mov
mov
imul
ljmp
cmp
outsb
aaa
push
shlb
adc
out
insl
les
or
sub
in
cli
in
jp
push
lahf
jne
push
mov
jge
bound
pop
mov
lahf
and
pop
or
loop
xchg
jo
push
jle
mov
sbb
repz
cmpsl
jae
adc
pop
inc
mov
dec
test
mov
andb
clc
lret
xchg
inc
lods
cmp
test
mov
scas
and
adc
stos
bound
pop
inc
int3
fiadds
cli
shlb
lret
sti
pop
xor
xor
movsb
cmc
xchg
das
and
in
hlt
cmc
mov
sbb
push
adc
or
cld
ret
hlt
push
or
mov
sbbb
out
es
adc
sub
push
xchg
fistps
sub
push
jmp
pop
cwtl
mov
jns
in
or
cmp
push
or
fwait
or
test
fdivr
sbb
lds
bound
jno
je
repnz
repz
push
das
cmp
push
rcll
and
add
psllw
pop
dec
scas
lcall
in
add
sbb
jbe
mov
dec
imull
cwtl
jmp
xchg
mov
adc
jmp
sbb
or
roll
fidivrl
jg
mov
aas
dec
aad
enter
xchg
xor
inc
in
aas
dec
mov
cltd
or
adc
ficoms
jp
repnz
jmp
mov
in
das
insb
mov
pop
sub
xor
mov
sbbb
idivl
add
fyl2xp1
mov
pop
lcall
sub
sub
mov
xor
push
out
out
fs
mov
xor
pop
push
xchg
cwtl
mov
push
mov
dec
stos
repnz
sbb
mov
cmp
in
mov
sub
cmp
rcll
aam
les
sahf
push
idivb
fcompl
loopne
xchg
fdivp
jno
loope
out
mov
lea
js
mov
lahf
leave
mov
lahf
testl
jecxz
cwtl
lods
clc
mov
fisttpll
and
fistl
xor
or
jg
cmpsl
mov
gs
fs
shr
jmp
nop
scas
es
jge
xor
in
dec
sub
xor
xchg
jnp
int3
movsb
roll
outsl
xor
addl
or
add
mov
jae
stos
addr16
lret
aad
jae
cwtl
in
jns
cmp
sbb
xor
fstpt
ds
jge
loope
addr16
nop
inc
cmp
jns
inc
push
push
cmovnp
add
sahf
daa
pop
imul
fdiv
mov
jbe
add
pop
mov
sub
jno
push
fiadds
jae
stc
fistl
stos
ds
ds
lahf
sub
sub
das
adc
xacquire
xor
call
test
jle
loope
call
mov
push
push
insb
or
push
xchg
xor
mov
and
mov
clc
enter
jae
rcl
pop
sbbl
outsb
pop
xchg
sbb
mov
fsubp
bound
mov
lret
mov
pop
arpl
int
xchg
jle
aad
je
ja
psrld
cmovg
std
pop
das
sbb
insl
adc
iret
mov
cmpsl
rcrl
gs
mov
ja
enter
sarb
int
stos
fnstsw
stos
repnz
push
cmc
movsl
loopne
sub
and
fmuls
insb
insl
faddl
movsl
js
pop
repz
fsubrl
xor
cs
stc
xor
jecxz
inc
js
aam
push
xor
mov
xchg
push
clc
jns
add
mov
fs
sub
sar
lods
scas
cmp
or
adc
int
repz
inc
movsb
in
sarb
iret
lret
test
jle
and
daa
es
cmp
insb
std
call
cmpsb
movsl
jge
lcall
scas
ds
adc
testb
imul
stos
mov
leave
mov
xor
fsin
mov
lods
je
out
inc
and
xor
or
pop
sti
out
sub
fildl
or
lods
loopne,pn
lcall
fwait
mov
adc
xor
in
sub
mov
jl
mov
or
out
icebp
mov
std
movsl
or
lret
les
xor
int3
mov
mov
pop
test
mov
and
mov
jno
mov
popa
mov
hlt
stos
push
pop
ret
mov
aam
jbe
push
xchg
pop
adc
cld
inc
and
xor
cmp
or
xchg
daa
push
xchg
mov
mov
daa
push
ja
jns,pn
fwait
xor
daa
jbe
repz
int
sub
into
pop
push
cwtl
rclb
xchg
inc
jno
std
pop
mov
jl
sbb
adc
jmp
mov
dec
lock
pop
lods
imul
adc
lock
loopne
lret
dec
push
in
push
sbb
inc
repnz
into
hlt
mov
xchg
cs
jnp
mov
addr16
mov
ret
repz
add
ds
lea
mov
mov
insl
stc
pop
addr16
gs
mov
pusha
imul
push
roll
int3
push
sub
xchg
mov
and
jb
and
pop
aas
lods
push
dec
scas
pop
clc
mov
pop
test
dec
sbb
test
repz
pop
and
adc
lea
cpuid
xor
movsb
cmp
lcall
and
aad
inc
or
nop
out
mov
mov
lea
in
cmpsb
idiv
pop
lret
pop
jle
jp
cld
push
hlt
sub
shl
sub
lods
mov
jb
test
mov
test
adc
sub
push
mov
push
inc
xchg
aaa
fdivs
outsl
inc
sub
popf
inc
mov
shrb
xor
and
dec
mov
jle
movsl
push
xor
pop
arpl
xor
shll
pop
xor
sub
lds
fimuls
xchg
mov
sbbb
jbe
mov
jmp
arpl
xchg
out
jle
xchg
aaa
pop
lds
jne
js
xor
cmc
mov
jae
jge
call
pop
cmp
and
cltd
dec
rcll
push
inc
inc
test
sahf
hlt
xor
push
xor
imul
dec
xchg
pop
fmull
pop
and
mov
js
pop
or
xchg
jnp
mov
add
mov
add
mov
lcall
and
mov
jbe
and
sbb
ret
mov
push
insb
rolb
dec
mov
call
sbb
pop
add
sbb
inc
or
inc
mov
jae
out
mov
fildll
inc
pop
test
add
sbb
xchg
sbb
adc
mov
and
xchg
mov
es
sahf
cmpsl
loope
rcll
pop
mov
test
cmp
test
cmpsl
clc
jge
cmp
jg
clc
or
inc
test
dec
in
bound
add
lret
mov
pop
jmp
push
imul
inc
mov
filds
sbbb
jl
fildl
push
cmp
cmp
les
xchg
mov
addl
sar
fwait
iret
mov
movsb
push
cmp
daa
mov
jae
clc
push
or
pop
out
mov
stos
sub
aam
adcl
pushf
lock
pop
jbe
or
movsl
xchg
int3
mov
sub
inc
and
mov
arpl
jno
loopne
idiv
jle
cmpsb
mov
add
mov
or
push
ljmp
jle
fmull
idivb
xor
sbb
inc
xchg
mov
inc
aaa
inc
sbb
andl
sub
subl
jmp
enter
cmp
xor
enter
fbstp
mov
test
inc
cld
push
sub
mov
adc
int
orl
repz
roll
cs
jge
jl
adc
mov
pusha
sbb
hlt
outsl
mov
xor
mov
sbb
aaa
mov
xlat
negb
mov
mov
cli
inc
xchg
shlb
sti
add
fwait
int
into
test
push
lods
mov
sbbb
int
push
dec
jb
sbb
cmp
cwtl
cmp
rcrb
sub
fcomp
repnz
xchg
in
je
jns
cli
push
cmp
mov
xor
push
push
or
or
into
mov
mov
sar
mov
or
fs
popf
insb
pop
push
outsl
jle
repnz
add
and
xor
pushf
aas
mov
fistpl
dec
cli
pusha
sbb
add
sbb
fisttpl
adc
fidivrs
jge
js
dec
fwait
or
nop
out
rcrl
pusha
sub
bnd
cwtl
insb
push
add
call
out
jg
dec
out
cmp
jo
into
sub
adcb
es
jl
mov
popf
mov
shlb
sbb
xlat
jno
in
sub
push
shrl
xchg
test
cwtl
xchg
lock
pop
pop
sbb
shll
dec
rorl
test
jecxz
data16
fmull
mov
push
and
shrl
popf
fidivrl
jns
in
outsl
fisubl
pusha
xor
movsl
pop
dec
cwtl
popf
ffreep
mov
pop
pop
dec
cmp
hlt
cmpsb
mov
inc
sub
pop
in
neg
dec
test
xor
imul
xchg
std
std
jge
and
push
mov
popf
mov
cmp
into
ja
clc
or
dec
out
in
jl
mov
sbb
cmpsl
and
push
mov
pop
roll
popf
out
aam
jo
mulb
push
dec
xchg
ss
outsb
test
and
dec
inc
sub
sub
jp
mov
lods
aad
jae
xlat
inc
xlat
rclb
cmpsl
pmulhuw
add
sub
mov
xchg
hlt
int3
xor
mov
xor
mov
push
or
xchg
pop
xor
dec
js
lret
mov
push
int
shll
jne
sti
inc
pushf
jmp
idivl
daa
fldt
nop
and
adc
cmp
int
mov
test
inc
scas
jae
imul
and
cmovo
mov
dec
sub
stos
sub
sub
scas
lcall
adc
add
lea
mov
test
pop
dec
mov
out
dec
jecxz
lret
lcall
fimull
sub
mov
movsl
mov
or
dec
mov
jg
lret
jle
fdivrp
imul
cmp
mov
test
add
sbb
aam
rclb
sbbb
loop
adc
mov
push
jae
insb
dec
ret
test
pop
ljmp
pushf
sub
jmp
push
mov
cld
gs
sub
adc
push
cmpsl
into
xchg
cmp
lea
xlat
imul
mov
push
call
adc
cmp
movsb
inc
jg
push
pop
data16
mov
jnp
dec
popl
mov
inc
inc
ret
faddl
push
out
testl
sbb
xor
push
lcall
fwait
dec
je
jl
mov
cs
mov
aaa
jne
cmpsl
sti
mov
mov
dec
mov
adc
ss
aam
cmp
push
test
jl
push
stc
and
mov
test
cmp
es
insl
xchg
push
cmp
xlat
cltd
push
inc
in
test
add
es
rol
dec
mov
add
mov
mov
ja
int
addr16
pop
loopne
push
mov
cld
shll
jns
add
cmp
cld
pop
out
shll
loope
or
sub
pop
pop
ja
push
jge
jno
pop
xor
shlb
xor
adc
sbb
dec
and
lahf
icebp
inc
scas
cmp
jge
xor
mov
sbb
lahf
xor
pop
dec
rcrl
push
adc
pop
jnp
enter
shlb
or
mov
and
push
imul
jp
xchg
cmp
xor
cs
pop
mov
cmp
cs
mov
gs
jmp
neg
cmpsb
sub
daa
jns
std
stos
mov
ret
icebp
fimuls
sub
sub
add
fwait
xor
inc
repnz
sub
mov
lgs
jb
hlt
xor
push
ret
ds
loope
jnp
jne
mov
dec
mov
fcompl
and
xor
or
scas
add
scas
push
inc
cmp
pop
cmp
add
mov
fwait
sbb
add
adc
fs
sbb
mov
fistpll
push
lea
and
scas
out
out
lock
std
and
ret
inc
mov
sbb
xchg
jmp
mov
popa
mov
mov
xor
jp
fadds
fdivrl
leave
ss
inc
dec
cmp
outsl
mov
inc
cmp
fstpt
mov
loope
mov
clc
ret
rol
inc
inc
and
sbb
or
lods
xor
push
jb
mov
mov
jbe
sti
andl
movsb
das
aad
movsb
es
dec
rolb
fcoml
pushf
xchg
add
sti
inc
xchg
cpuid
lock
sub
sbb
adc
mov
xchg
dec
adc
lahf
or
sub
or
dec
sbb
add
subb
jne
sbb
test
fs
fwait
ret
mov
int3
outsl
cmpb
sub
scas
in
icebp
rcll
push
outsl
jns
mov
jo
xorb
or
mov
iret
or
cld
xchg
int3
lock
xor
mov
test
xchg
dec
popa
movsb
ror
xor
hlt
mov
cmc
push
mov
in
lahf
add
fisttps
jl
pushl
push
inc
fldcw
cmc
push
cld
cmpsb
or
in
adc
push
cld
insb
jbe
outsl
pop
mov
loope
mov
sub
mov
dec
sub
sub
notl
inc
fbld
xchg
in
iret
mov
and
mov
jl
incb
adc
xchg
sub
jnp
sub
push
popa
xchg
dec
mov
movsl
pushf
jle
ret
mov
jmp
xadd
lret
jb
xchg
stos
xor
fwait
mov
ds
adc
faddp
roll
mov
aas
call
or
dec
inc
jo
fdivl
push
jmp
jnp
jnp
loope
das
jecxz
loope
imul
dec
icebp
mov
pop
xchg
mov
push
pop
and
mov
in
shlb
inc
pop
rclb
fidivrs
jnp
cmpsl
fcompl
dec
push
cmp
aaa
shrl
mov
sub
sbb
cli
bound
movsb
test
push
mov
jge
xchg
out
pmulhuw
fcmovu
xor
mov
test
jae
sbb
and
aaa
shlb
inc
xchg
mov
pop
xor
push
push
out
mov
or
push
dec
cld
push
jmp
andl
mov
jnp
leave
sbb
push
push
and
push
pop
dec
push
rorl
testb
xor
add
xchg
jae
dec
mov
aas
inc
fimuls
mov
and
xchg
mov
and
mov
aad
cli
sbb
jb
clc
pop
mov
cmp
andl
dec
inc
in
mov
mov
bt
dec
xchg
popa
jmp
stos
xchg
pop
ja
and
sbb
sbb
adc
mov
data16
outsb
imul
mov
mov
out
xorb
inc
adc
sub
bound
jns
fsubrp
add
aam
xchg
outsl
jmp
fsubs
je
sub
sbb
cld
and
inc
ljmp
inc
and
movsl
dec
lcall
push
add
add
outsl
decb
cmp
test
jle
mov
lret
in
push
xlat
jno
and
pop
adc
add
mov
pop
insl
sbb
pop
shrb
fadds
mov
xlat
mov
jb
fisubrl
ja
xor
cli
push
dec
mov
add
pop
dec
das
sub
cmp
addb
es
sbb
rcll
jp
fisubrl
ljmp
orl
jmp
inc
ljmp
outsl
sbb
lahf
aam
inc
pop
bound
cmp
mov
gs
push
add
cmp
inc
sub
xor
sbb
cmpsb
vmovntpd
pop
lea
and
leave
movsb
inc
dec
jns
mov
popl
jle
xchg
cmc
adc
fbstp
fwait
inc
cmp
xchg
pushf
cmpsb
je
mov
jns
in
jbe
scas
sarl
dec
jo
enter
and
lahf
jo
push
es
hlt
xchg
adc
and
pop
fdivp
loop
aad
and
pusha
inc
pop
fisubl
aas
cmpsb
cwtl
jno
push
pop
aad
sbb
lcall
xchg
or
loop
aas
mov
sub
push
push
roll
mov
test
int3
repnz
in
es
mov
mulb
nopl
or
fnstenv
mov
sbb
adc
es
outsb
out
dec
sti
xchg
jecxz
push
stos
add
jb
cmp
sbb
aaa
arpl
mov
js
xor
mov
neg
fidivrl
pop
adc
push
add
add
fldt
add
xchg
cmp
inc
mov
push
mov
fists
test
inc
jg
push
or
mov
inc
mov
inc
xor
test
fbld
and
popa
mov
test
pop
sub
decl
mov
push
pushf
and
push
xor
jbe
xlat
or
js
or
pushf
test
inc
lret
mov
add
dec
add
adc
push
imul
popf
rorb
xchg
subl
cmp
pop
sti
cmp
movsl
mov
mov
in
es
xor
xchg
push
cli
or
add
test
mov
mov
mov
dec
je
pop
pop
nop
rol
popa
jecxz
inc
dec
dec
rcrb
cwtl
lods
or
lahf
movsb
sub
andb
jbe
fucomip
xor
dec
int3
jno
push
mov
cmp
stc
mov
hlt
fcoml
notl
or
into
push
inc
fwait
jo
fldenv
lea
push
jae
clc
or
pop
sarb
ss
xor
mov
adc
lods
adc
mov
stc
ror
sbb
fsts
sub
push
fdivrp
sub
mov
mov
adc
lret
dec
cld
pop
cwtl
lcall
sub
mov
adc
aaa
jmp
push
inc
xor
jae
fmull
jg
xor
or
pop
sub
inc
and
mov
daa
lods
iret
mov
mov
sbb
sub
sub
dec
or
inc
mov
aam
or
clc
jo
push
aam
push
jecxz
and
push
mov
insb
pop
pop
adc
push
mov
or
mov
and
mov
mov
jns
jmp
ds
cltd
pushf
bound
mov
add
fnstenv
push
or
stc
xor
clc
stos
loop
mov
ret
imul
into
jmp
xchg
sbb
adc
es
pushf
sub
sub
repnz
call
xor
fcom
lea
movsb
out
out
leave
mov
cltd
imul
lds
add
inc
push
stos
jbe
push
dec
test
int3
insl
mov
ja
push
loope
pop
fst
in
in
mov
cs
loopne
push
or
or
xchg
or
push
or
push
xchg
or
mov
lods
fnstcw
test
mov
sub
call
test
xor
xchg
out
ja
xchg
loopne
or
push
aas
inc
mov
jo
pop
in
scas
jge
pop
jb
sub
ljmp
clc
cltd
mov
pop
aam
aad
imul
enter
imul
movsb
push
jb
xchg
and
mov
ss
add
je
xlat
sbb
jecxz
icebp
aaa
xor
xor
or
and
mov
lods
dec
jge
ret
pop
popf
test
fsts
ret
or
adc
sub
mov
mov
fmul
lss
mov
sbb
dec
test
push
xor
mov
shlb
test
inc
call
sub
sbb
inc
push
ret
cltd
xchg
mov
or
js
dec
mov
xchg
xchg
sub
mov
or
pusha
arpl
or
and
mul
mov
fldenv
sbb
addr16
push
inc
js
fs
mov
mov
aam
jns
xchg
adc
inc
xorl
pop
faddl
xchg
sbb
cmpsl
mov
push
mov
loope
add
jge
popfw
and
ss
sarl
sahf
jbe
push
mov
out
outsb
mov
or
inc
imul
jb
movsb
xor
addb
stc
pop
add
test
insb
pop
push
sbb
adc
lock
xor
std
fstps
test
int
shll
test
lds
and
xor
or
popa
or
std
mov
std
sub
dec
cmp
mov
add
sub
loop
bound
push
lret
je
add
sar
cmp
xor
cmp
out
pop
and
inc
and
jmp
movsb
cmp
mov
sbbb
arpl
xor
sub
cmp
das
xor
push
lret
jb
ficomps
or
or
cwtl
outsb
sub
fidivs
push
mov
fmul
jl
mov
lahf
movsl
mov
add
insl
arpl
jmp
data16
outsl
mov
add
rcrl
je,pt
popf
movsb
daa
mov
mov
loope
lods
inc
lahf
jne
push
pop
push
jbe
stos
pop
fimull
jno
lods
popa
or
mov
or
inc
aam
mov
or
aam
cltd
lret
fbstp
iret
or
or
add
pop
fisubrl
cwtl
popf
pop
pusha
cmp
pop
iret
or
pop
loope
xor
das
pop
sahf
cmp
mov
sbb
mov
loopne
decb
jae
mov
mov
adc
or
sub
xchg
adc
push
sub
inc
mov
jbe
and
dec
lds
nop
sub
outsl
pop
inc
push
outsl
in
sub
pop
jmp
int3
xchg
mov
and
into
inc
adc
and
jno
mov
cmp
fidivl
ja
mov
outsl
loopne
push
scas
inc
and
cmp
repnz
pop
pop
cmp
jo
pop
xchg
adc
fsubrs
popaw
cmpsb
hlt
xor
xor
pop
enter
imul
dec
jno
mov
rcr
test
arpl
adc
nop
jmp
adc
push
xor
push
scas
sbb
add
not
sahf
jecxz
scas
daa
imul
repz
enter
mov
cld
cwtl
xchg
outsb
dec
cmp
inc
xor
stos
push
out
xchg
dec
aad
sbb
cmpsl
mov
dec
dec
dec
and
in
shlb
dec
or
movsb
pop
iret
add
ljmp
gs
add
xor
inc
test
xchg
xchg
mov
xchg
call
sub
mov
lcall
add
loope
adc
jae,pn
or
pop
mov
test
inc
mov
cltd
cld
add
and
aaa
std
push
pop
testl
or
sbb
scas
scas
sub
scas
outsb
leave
cmpsb
lcall
aad
pop
and
repz
aad
clc
mov
xor
and
pop
loopne
cmp
out
repz
adc
popa
mov
fwait
jp
cmp
shlb
dec
push
mov
jmp
jecxz
pop
and
mov
push
inc
inc
int3
scas
inc
sbb
sbb
fstl
mov
mov
test
sub
jbe
mov
xor
inc
pop
pop
cs
and
aaa
lahf
inc
cmp
jmp
dec
sti
pop
rcrl
lret
test
repz
xchg
sti
testl
sbbb
inc
ret
lods
orb
mov
aas
push
outsl
sub
jns
fs
fwait
emms
sti
cmp
adc
cld
add
pop
arpl
aad
adc
mov
inc
inc
mov
clc
push
ds
add
stos
std
lods
cltd
ss
mov
into
ret
sub
das
or
rcll
rcl
mov
fdiv
lahf
and
cld
inc
mov
xor
xchg
insb
ss
push
ljmp
xchg
imul
push
hlt
add
mov
sbb
push
data16
sarl
js
je
inc
or
gs
xchg
mov
ljmp
mov
dec
xor
add
jbe
sbb
sub
xchg
ds
je
dec
add
sbb
lahf
or
aas
arpl
fwait
adc
sub
enter
adcl
xor
rcll
pop
xor
ljmp
ret
and
cmpsb
aaa
cmp
cmpsl
lret
mov
clc
mov
and
push
mov
je
dec
xor
clc
jo
xchg
test
lahf
leave
out
fcompl
decl
test
ffreep
inc
movsl
iret
gs
sbb
xchg
ja
mov
inc
cltd
or
out
adc
inc
mov
xchg
ds
gs
out
leave
sub
pusha
mov
add
idivb
pop
rclb
cld
fidivs
mov
lret
jmp
adcb
inc
cmc
xchg
pusha
or
add
adc
or
jbe
cs
cmp
or
movsl
cmpsl
je
repz
adc
das
mov
pop
stc
and
call
lock
and
cmp
nop
pop
mov
ficoml
mov
jmp
out
or
movsb
ljmp
rorb
popa
das
adc
leave
or
mov
push
lret
gs
das
idivw
pop
mov
in
insb
ljmp
jo
bound
cld
psubsw
and
out
jecxz
test
pop
jle
or
fsubrs
fwait
call
xlat
notb
jg
push
pop
jae
stos
push
icebp
jno
pop
or
fwait
xchg
xchg
push
cmp
mov
add
imull
and
in
or
xor
outsl
pusha
jnp
push
jge
and
lods
hlt
negl
jp
fisubl
sarl
shl
mov
fs
ds
pusha
decb
data16
sbb
inc
imul
push
mov
xchg
mov
sub
shlb
aad
or
nop
push
test
mov
mov
dec
stos
mov
push
jge
mov
mov
ljmp
out
ja
mul
dec
or
mov
pop
jae
push
or
stc
add
or
cltd
pop
enter
cmp
push
mov
shlb
enter
adc
xchg
fstpl
push
adc
out
stc
sub
out
sub
jb
out
xor
pusha
ret
leave
mov
pop
lods
fstpl
or
out
test
lcall
xor
rorl
inc
fs
push
nop
jp
roll
out
clc
js
stos
jge
add
xor
lds
ljmp
sub
std
test
mov
lods
cmp
xor
stos
add
leave
mov
fidivrl
push
and
insl
mov
and
push
mov
push
ret
jecxz
jmp
xchg
cmp
test
or
hlt
inc
push
ret
inc
mov
addl
das
mov
negl
test
cwtl
cmpsb
sub
cwtl
sti
jnp
test
ret
loopne
or
imul
cli
dec
imull
test
xor
cmp
cmc
ja
mov
sbb
mov
sbb
popa
imul
dec
inc
addr16
sbbl
stos
mov
out
inc
mov
fs
shlb
jo
sub
and
neg
jle
fs
es
cmp
lea
mov
aad
cmp
or
xor
inc
xlat
mov
vmovlps
xchg
lds
js
orb
jae
fnsave
sti
xchg
gs
pop
pop
dec
and
test
or
mov
mov
je
jmp
movsb
xchg
sub
dec
sub
js
in
jecxz
xchg
jns
add
divl
addl
mov
add
sub
push
ret
add
mov
xchg
test
es
adc
add
pop
mov
pop
sub
div
xchg
ret
jl
in
into
aas
xlat
decl
sbb
xor
adc
push
pop
mov
jge
jg
cmpsl
mov
repnz
daa
mov
mov
jnp
in
sbb
pop
iret
xor
lret
pop
xchg
std
cmc
and
xlat
sbb
lret
hlt
push
cltd
outsl
xor
int3
mov
cwtl
adc
nop
jle
or
clc
fsts
jg
jo
inc
mov
push
ret
cli
fcoml
and
xor
sbb
and
push
stc
push
aas
cmp
push
push
cmpsl
mov
gs
inc
cmp
ljmp
push
pop
add
mov
loop
inc
sub
loop
cld
xchg
or
add
loope
int3
ror
mov
xchg
int
push
xlat
subb
push
push
adc
adc
inc
xchg
shrb
jae
subl
mov
jle
into
push
icebp
sbb
push
out
stos
test
movsb
mov
orb
movsl
lahf
adc
paddusb
jae
inc
out
arpl
jp
pop
inc
popa
sbb
fldenv
ljmp
cmp
das
sbb
rcll
xlat
outsl
adc
dec
repz
imul
movsb
imul
push
scas
mov
ja
mov
mov
dec
ljmp
and
mov
pop
xchg
cmp
imul
sbb
ret
jne
xor
shrl
adc
sub
std
sub
pop
push
and
jg
popf
cmp
dec
dec
mov
stos
icebp
push
push
insl
inc
insb
sbb
dec
aas
nop
pop
or
ret
mov
xor
mov
adc
lret
inc
fmul
adc
jae
pop
cs
or
test
out
outsl
fdivl
nop
cmpsl
sub
cmp
push
push
fisubs
out
call
mov
cmp
pop
loop
push
push
push
scas
ficoml
sub
mov
sarl
push
rcr
inc
in
dec
pushf
fs
das
std
push
nop
repnz
ret
mov
sub
or
outsb
int3
stos
mov
inc
mov
add
cmp
pusha
add
pop
imulb
out
xor
ljmp
in
jns
std
sbb
adc
jmp
xchg
sarb
test
andb
sub
lcall
bound
hlt
mov
sbb
ja
mov
push
push
aad
add
xchg
add
leave
lea
push
gs
stos
push
xor
push
sahf
inc
aam
sub
dec
int3
fadds
aad
dec
push
shll
sub
andb
jg
seta
scas
div
jmp
add
in
mov
push
jae
int
xchg
popl
sbb
aam
and
xchg
xlat
jo
cld
mov
call
and
mov
push
cmc
pop
sub
sbb
push
scas
sti
cmpsb
je
mov
icebp
ficompl
pop
mov
push
xchg
ja
cmp
jmp
push
push
mov
lods
sbb
aaa
dec
xor
sub
sub
aas
and
jo
out
pop
adc
dec
lods
outsl
mov
push
sub
jl
jle
bound
andl
jg
dec
jb
outsb
out
jl
adc
imulb
sub
add
or
pop
push
rclb
xchg
icebp
in
xchg
insb
adc
cwtl
shr
dec
test
adc
cmp
cmpsb
mov
xor
cmp
push
add
fmuls
adc
xor
push
mov
cmpsl
iret
mov
dec
push
sbb
lods
xchg
inc
test
and
pop
mov
and
dec
stos
xor
fwait
cmpsl
push
mov
orl
loopne
loope
js
inc
enter
test
cmp
sub
seto
mov
push
and
pushf
inc
filds
lret
cmpsl
outsb
mov
inc
lcall
jmp
mov
mov
adc
cwtl
mov
sbbb
dec
in
in
xchg
pop
cmp
and
rcll
popa
jns
fistpll
sub
lea
enter
shlb
mov
cwtl
or
ds
shrl
imul
or
arpl
lret
loop
lea
hlt
into
pusha
rorl
xor
mov
ss
mov
mov
cmp
push
or
and
out
lret
xchg
push
imul
test
fldt
test
push
cmp
fnstcw
and
jmp
lret
push
cli
leave
sahf
adc
adc
dec
loope,pt
andl
sub
pushf
inc
call
sub
push
and
cs
sub
xchg
or
in
loope
jne
das
repz
js
bound
xchg
mov
sbb
cmpb
xchg
movsl
outsl
cmp
adc
mov
dec
sahf
movsb
mov
push
inc
cmovge
sbb
and
outsl
jo
mov
test
cwtl
lret
les
inc
outsl
enter
insb
mov
jl
scas
add
xsha1
cmpsb
dec
or
mov
stc
dec
rolb
sbb
les
mov
stos
sub
push
hlt
pop
xlat
aas
dec
adc
inc
mov
aas
mov
hlt
xor
test
sbb
dec
cmc
push
or
jae
sub
push
jmp
push
aad
shrl
inc
into
cmp
jmp
ds
pop
inc
add
cmp
cmp
jle
sbb
inc
mov
js
popa
aam
inc
jge
mov
sbb
lock
add
scas
je
pop
lret
int
aaa
push
in
pop
ss
xchg
mov
xchg
jp
shr
enter
sub
icebp
adc
shlb
fwait
repnz
push
xchg
jb
cmp
pop
push
sub
mov
lock
dec
sbb
and
in
pop
xchg
pop
cmp
in
test
mov
div
pop
or
out
test
xchg
jg
push
ds
jno
cli
xchg
test
mov
jnp
mov
dec
aam
out
leave
jae
xor
clc
xlat
adc
mov
xchg
ds
cmp
lods
pop
or
xor
fwait
fs
lahf
sbb
iret
xchg
and
xchg
test
xchg
movsl
cmp
rorb
rorl
stos
mov
xor
je
jnp
or
push
hlt
jge
cmp
sbb
sarl
jp
adc
mov
mov
sub
mov
inc
repz
testb
xlat
adc
into
xchg
shlb
push
cmp
pop
push
xchg
sub
and
pop
ja
or
cmp
out
mov
inc
jp
fsubrp
xor
arpl
inc
rcll
fwait
inc
add
push
rcl
bound
mov
xor
xor
in
cmp
mov
sbb
or
mov
iret
adc
fwait
push
dec
lock
mov
cmp
push
and
mov
pop
nop
push
movsl
lods
add
push
push
insb
dec
rorl
sti
daa
out
je
loope
mov
fwait
cmp
lods
repnz
pop
nop
push
lods
xchg
adc
out
mov
cld
mov
xchg
dec
fbstp
jmp
sub
frstor
xlat
mov
faddl
jno
dec
test
insb
pop
add
bound
xor
adc
mov
aaa
and
ja
pop
mov
or
lods
adc
fsub
shrl
sbb
repz
xchg
adc
cwtl
adcl
rol
stc
mov
mov
or
xlat
dec
daa
pop
or
inc
dec
shlb
mov
lret
cmp
xchg
push
out
or
or
cli
rcr
cltd
mov
in
fwait
lods
jb
cltd
pop
cmp
mov
out
aam
xchg
dec
add
mov
fwait
sub
mov
test
xchg
and
jle
jg
mov
neg
dec
lods
mov
out
mov
push
aaa
cmc
inc
shll
aas
xor
and
nop
stos
popa
mov
imul
repnz
lahf
test
lods
leave
mov
mov
push
out
lods
xor
xor
mov
cmp
cmpsb
ds
adc
adc
fidivs
or
pop
xchg
inc
fcomi
pop
xorb
jae
or
std
push
jmp
push
push
cmpsb
inc
out
add
sbb
outsb
cwtl
scas
inc
dec
mov
xor
add
sub
xchg
out
scas
ja
jne
lahf
aad
mov
imul
dec
ss
push
xor
loopne
mov
lods
out
lea
les
sbb
cmp
sub
outsb
fisubrs
sub
push
lahf
aaa
adc
dec
xor
mov
jecxz
clc
repnz
hlt
out
cmp
outsl
fistpll
and
mov
faddl
arpl
into
xchg
sbb
or
mov
dec
xchg
dec
xchg
or
mov
mov
daa
jp
jbe
cmp
inc
imul
test
cwtl
and
push
pop
cld
repz
mov
fldt
cmp
fwait
les
sahf
and
sbb
sub
fs
jge
gs
adc
inc
mov
lods
adc
push
push
dec
jae
push
and
sbb
and
mov
and
ret
mov
mov
sbb
out
mov
pop
aaa
stos
push
movsb
je
mov
mov
loope
stos
arpl
lods
mov
jg
stos
xchg
jmp
lret
jg
and
sub
mov
inc
adcb
ss
mov
push
sahf
sarb
xor
cmpsl
shrl
xchg
addr16
pop
push
aaa
gs
mov
xor
sub
lea
sub
add
mov
insb
rorb
out
mov
xchg
xchg
sub
repz
fidivrs
jae
pop
in
xor
cmp
cmpsl
cmp
movsb
add
rorb
dec
mov
sbb
sarl
test
cwtl
cld
xchg
push
pop
loopne
cs
add
add
loop
push
xchg
xchg
lock
mov
mov
dec
push
push
fisttpl
iret
cmp
push
or
das
je
int3
jl
mov
es
int3
mov
inc
and
push
xor
xor
push
hlt
es
and
pop
enter
dec
push
add
jbe
jge
pushf
fmuls
add
shll
mov
popl
cmpsb
mov
loop
dec
mov
fistl
ja
pushf
sub
ret
outsb
sbb
data16
rcr
pop
cli
lea
xor
test
inc
daa
ret
ret
mov
add
scas
add
out
stos
rcrb
add
push
inc
fs
loop
jnp
mov
mov
sbb
andb
sbb
mov
push
lcall
or
push
lods
inc
clc
xor
push
and
xchg
pop
gs
in
and
jbe
movsb
aam
mov
movsl
aas
ficoms
pop
sbb
das
xor
and
or
pop
inc
ss
aad
pop
fidivrs
fdivp
xchg
in
pop
int
mov
jle
xchg
jl
inc
lds
mov
cmc
ss
arpl
mov
push
scas
int
jge
mov
clc
test
mov
test
xor
lret
sbb
je
leave
pop
les
adc
mov
mov
enter
aaa
add
icebp
jl
test
inc
mov
mov
jp
cli
inc
dec
sub
xor
mov
push
push
hlt
jnp
loopne
sbb
hlt
ror
fldenv
leave
les
mov
jge
aad
cmpsb
fstpl
cs
lret
movsb
mov
outsb
mov
shll
icebp
leave
jae
call
and
sbb
and
out
movsl
push
push
or
dec
hlt
mov
stos
inc
mov
ss
cwtl
pop
das
mov
das
aam
pop
pop
dec
sub
cmpsl
sbb
ud1
pop
popa
or
mov
lret
lret
ret
cmpsb
push
push
and
das
sbb
lods
mov
nop
mov
aam
jp
clc
xchg
lahf
mov
inc
jmp
and
ss
sub
pop
das
dec
jge
sti
pusha
dec
insl
or
sbb
push
shll
iret
sbb
mov
xchg
mov
popa
sbb
test
movsb
mov
cltd
fiaddl
iret
cmp
lds
adc
lahf
mov
sar
dec
xor
je
rorb
fcmovnb
add
push
lea
adc
mov
xchg
in
sahf
fdivs
loopne
out
stc
lret
and
push
mov
addb
leave
addr16
inc
and
mov
adc
jno
xchg
pushf
insl
not
std
or
mov
adc
dec
int3
mov
or
movsb
lret
mov
sbb
rclb
dec
cmp
repz
adc
jnp
sbb
or
lods
xchg
jp,pt
push
inc
insl
fildl
or
or
push
push
mov
in
inc
push
pop
jnp
mov
adc
fsubr
mov
repz
pushf
movsb
sub
xor
fistpll
movsl
scas
xchg
gs
or
loopne
es
inc
cmpsl
and
nop
sub
outsb
xor
push
idivl
push
sub
mov
xchg
push
test
test
fs
jo
stos
icebp
cmc
test
or
int
sbb
in
daa
jbe
adc
jge
jp
adc
shl
cmp
cmc
pop
or
mov
insl
loope
sbb
insb
fisttpll
lahf
lods
jp
mov
adc
out
xlat
jo
jbe
xchg
jmp
leave
jecxz
jge
adc
dec
movups
cld
out
pop
orl
jmp
add
cmp
adc
mov
xor
arpl
or
sbb
imul
jge
pop
mov
stc
fiaddl
cld
cltd
inc
in
xchg
cltd
je
push
pop
lods
imul
mov
shlb
sub
enter
aas
xchg
pop
add
pop
subl
cltd
mov
dec
xor
fs
xchg
test
lods
xor
pusha
xchg
stos
jp
addr16
cmpsb
mov
inc
dec
repz
repz
mov
pop
push
insb
inc
mov
ret
icebp
pop
or
stos
scas
fidivrs
addr16
mov
sub
sbb
and
push
dec
or
popf
inc
pop
pop
popa
pop
imul
es
cmp
cmp
sahf
stos
out
push
lahf
cmp
mov
push
xchg
lcall
out
insb
cli
mov
jo
ret
ss
xor
aas
data16
jp
jle
inc
hlt
stos
scas
sub
mov
arpl
push
imulb
mov
push
cwtl
xor
jle
nop
sbb
mov
jle
xchg
or
jae
jmp
insl
cwtl
mov
mov
ljmp
orb
pop
inc
fistpll
or
add
sbb
dec
xor
adc
aas
cli
adc
sar
mov
lock
pop
lcall
sub
cmp
arpl
inc
or
in
mov
movb
lret
lahf
sbb
enter
pop
sub
sarl
std
cwtl
insl
fsubp
stos
dec
mov
into
pop
add
lods
into
mov
and
sti
pop
inc
lcall
jmp
sbb
cmpsb
jbe
lret
mov
movsl
adc
into
add
xchg
or
and
push
jnp
les
adc
ja
xchg
jg
dec
fstpt
cmp
mov
pop
push
mov
shrl
xchg
scas
lock
add
int3
sbb
movsl
inc
js
adc
xchg
push
hlt
adc
mov
xchg
jle
add
mov
mov
aad
mov
pusha
ss
cli
jae
mov
outsl
sahf
xlat
icebp
ja
pop
lods
ror
add
in
or
movsb
lret
sub
das
sbb
loop
push
dec
and
movsb
xchg
sub
std
push
flds
in
ss
lret
fucomip
cltd
xchg
into
adc
xor
cmp
push
adc
xor
jge
jecxz
pop
aaa
push
insl
mov
cwtl
cwtl
insl
imul
inc
dec
xor
shl
jb
sbb
cmpsb
lea
xor
xlat
push
jp
and
cmp
shrl
push
ljmp
lea
adc
sbb
push
mov
popa
int
adcb
out
jle
das
xor
pop
addr16
int
bound
or
movsl
jp
out
insl
jmp
shr
mov
iret
addr16
mov
les
mov
in
xchg
incb
jl
or
jns
ja
pop
sbb
lods
cmpsb
sbb
das
cmp
data16
fdivs
test
and
xchg
push
insl
ret
in
or
mulb
loopne
insl
ficoml
mov
xorl
inc
mov
rorb
sbb
aaa
push
dec
mov
cmpsl
ret
inc
cmpsl
mov
xor
xchg
add
sbb
xchg
cmp
pop
sti
je
jne
arpl
mov
pop
stc
xchg
pop
daa
mov
pop
mov
pop
lret
test
mov
push
jnp
popl
cld
sahf
and
lods
add
dec
push
shlb
iret
fldcw
mov
jns
fs
fildl
jnp
loope
pop
push
je
movsl
mov
fcom
dec
mov
ret
movsb
xlat
xchg
lock
add
push
mov
aaa
cld
xor
fcmovnu
mov
icebp
dec
js
cmpsl
lret
adc
xor
je
es
sub
jnp,pn
xor
je
fs
icebp
imul
cld
clc
jne
cltd
sbb
adc
push
jl
pop
fcmovb
in
jae
mov
fdivl
sti
dec
sbb
repnz
mov
enter
sbb
repnz
jb
xchg
popf
and
fcoms
hlt
add
mov
mov
ds
sbb
sub
cmp
dec
mov
xorl
xchg
out
add
out
jg
aas
cld
sub
movsl
lods
push
and
cmp
mov
ret
stos
loop
das
out
xchg
push
fsubrs
hlt
repnz
xchg
shl
pop
cmp
and
mov
ss
dec
mov
sub
xchg
push
jbe
mov
divb
hlt
aas
iret
leave
vcvttps2dq
push
pop
sahf
jno
cli
pop
dec
jg
cwtl
cltd
mov
mov
in
or
mov
js
test
adc
mov
filds
test
add
and
clc
addr16
push
xor
jnp
push
test
outsl
fs
pop
and
jno
xor
popf
mov
jge
jmp
lods
inc
hlt
xor
test
sbb
xchg
std
mov
loop
sbb
inc
or
iret
mov
cmp
dec
dec
jnp
inc
sbb
xlat
out
addr16
cltd
push
jmp
movsl
cmc
rcll
scas
fwait
xor
and
sbb
add
daa
outsl
mov
sbb
dec
lcall
sbb
je
test
test
cmp
icebp
into
lret
test
icebp
repnz
scas
mov
das
insl
popa
ret
jno
cli
cwtl
bound
mov
dec
dec
into
stos
in
or
jg
mov
jbe
and
mov
fsubrs
in
adc
mov
call
in
mov
cmpsl
xor
sbb
mov
add
add
ret
push
jo
mov
sbb
pop
push
inc
add
aas
lock
push
stos
les
xchg
sbb
in
js
testb
iret
dec
add
mov
sbb
pop
fistl
inc
push
bswap
inc
push
sbb
push
pop
dec
lds
js
jo
jmp
mov
loopne
cmp
ljmp
sbb
and
xor
cmp
push
daa
out
inc
xchg
fs
or
mov
and
add
cmp
mov
rorl
cmp
negb
mov
mov
aaa
out
rcl
out
arpl
jecxz
rorb
xor
lret
imul
imul
testb
and
daa
cmp
stos
push
and
pop
iret
cs
aaa
aaa
push
rcr
repz
push
sub
lret
addr16
bound
movsb
jg
sti
adc
out
xchg
cmp
mov
pop
pop
test
int3
sbb
xchg
loope
sahf
out
adc
mov
add
xchg
in
pusha
mov
jp
pop
jo
pop
shll
mov
jb
aaa
hlt
in
mov
fstps
sbb
push
push
and
stos
nop
jno
scas
adc
lcall
orb
fnstsw
subl
pop
pop
add
loop
or
mov
outsl
adc
shl
xchg
scas
jecxz
add
rclb
icebp
loopne
cmp
nop
daa
xchg
out
pop
mov
xchg
xchg
shll
add
clc
lods
gs
imul
sub
pop
arpl
add
inc
sbb
adc
out
jmp
pop
ja
mov
inc
fcom
mov
lock
pop
mov
cmp
pop
mov
dec
das
aas
adc
dec
ja
jae
fwait
pop
popf
pop
xor
push
popf
inc
push
fcomps
inc
jne
or
ds
sti
push
ds
sbb
test
adc
jno
mov
pusha
inc
sub
pop
pop
and
sub
mov
lret
push
cvtps2pd
fstl
out
repnz
faddl
add
pop
mov
dec
in
mov
lea
sti
add
mov
test
mov
cld
aas
sub
out
and
inc
ficompl
lds
in
cmpsb
shll
mov
dec
lock
clc
xchg
fwait
scas
mov
pop
jae
out
push
jl
enter
fisttpll
mov
xchg
in
pop
mov
movsl
push
mov
cmp
add
cmp
push
sbb
les
insb
outsl
pop
in
jmp
daa
out
out
out
sbb
imul
jl
mov
adc
sbb
dec
or
ret
addl
test
aad
into
mov
xor
xchg
outsl
outsl
lcall
jne
sub
adc
shrl
mov
lds
and
cmp
xchg
pop
xor
pop
and
addb
mov
and
and
mov
ds
stc
pop
xchg
filds
sti
ljmp
outsb
vpmulhuw
in
rcll
lock
arpl
pop
fldl
nop
cld
nop
in
pushf
dec
sub
push
push
jg
movswl
push
rolb
mov
mov
xchg
jl
leave
leave
ret
in
jnp
scas
outsl
cmpl
or
inc
push
sub
repz
sahf
mov
jmp
and
jnp
inc
mov
aas
stos
mov
sbb
in
mov
dec
scas
je
jle
xchg
mov
sbb
fisubrl
jge
fisubrl
xor
bound
flds
test
sbb
outsb
sub
inc
jne
cmp
inc
push
in
pushf
js,pn
leave
loopne
fldt
mov
shr
mov
movl
addr16
icebp
ss
sti
xor
mov
mov
imul
inc
int3
mov
out
cmp
fisubrs
test
mov
xchg
or
lret
fnstenv
inc
lea
sub
out
ret
gs
fstpl
jecxz
test
cmpl
jo
sub
les
cld
inc
sub
mov
mov
jmp
out
test
rorl
push
repz
pusha
cltd
push
cmp
adcl
mov
popf
sub
lods
mov
dec
rorb
testb
mov
rorb
sub
mov
pop
or
push
sub
cmp
inc
popa
add
cmpsb
iret
jbe
scas
cmpsb
out
enter
xchg
pushf
movups
loop
mov
fldl
lcall
mov
addl
add
sahf
cld
xor
in
loopne
add
orb
fmul
inc
sti
push
push
jnp
push
out
pop
pop
addl
sub
sub
rcl
mov
aas
inc
add
or
sahf
jo
inc
sub
xchg
and
mov
push
fistl
mov
ret
and
cmp
repz
int
out
imulb
fisubrs
js
mov
movsb
fbstp
jg
or
jg
mov
lock
adc
leave
test
jns
push
lcall
bound
xor
cmpsl
insl
in
mov
repnz
or
cld
xchg
dec
xor
xor
pushf
movsb
out
hlt
cld
sbb
adc
dec
push
mov
mov
dec
sbb
dec
mov
mov
xchg
adc
sub
xor
sti
fstpl
mov
cs
add
pop
adc
pop
bound
shrb
aam
std
cmp
cmp
je
incl
add
xchg
inc
dec
pusha
xchg
in
lahf
movsb
mov
loopne
bnd
repnz
or
sahf
lea
push
or
lret
or
push
xor
sub
pop
loopne
mov
and
adc
imul
popf
mov
insb
inc
adc
ljmp
adc
fucom
push
clc
push
pushl
pop
andb
and
dec
out
mov
mov
inc
xchg
fistps
pusha
aam
dec
xor
dec
test
ret
popa
sbb
and
add
jge
push
lds
mov
lret
arpl
pop
fwait
pop
and
push
jle
dec
or
ljmp
mov
dec
mov
add
and
cmp
cli
in
lods
loope
mov
jb
leave
push
inc
ja
adc
or
inc
loopne
aad
ss
dec
jmp
fmull
xor
clc
icebp
shlb
int3
bnd
cmp
outsl
inc
and
data16
jl
mov
add
mov
mov
imul
inc
into
push
sbbl
scas
test
xchg
cmp
sbb
jb
inc
shll
and
cmpsb
mov
lahf
lret
int
jp
sub
nop
sub
adcw
mov
dec
lahf
imul
cli
ja
int3
in
lret
je
mov
dec
loop
mov
out
xor
sbb
lcall
push
pop
fwait
or
adc
cmc
lret
lods
sti
repz
and
pop
push
sti
cwtl
dec
add
mov
pop
jl
leave
movsl
mov
orb
add
insb
mov
roll
lds
and
mov
xlat
cmp
pop
xor
out
mov
lret
lret
ret
fsubr
mov
pop
push
mov
sub
in
mov
mov
dec
add
mov
or
xor
sub
aaa
sub
or
and
mov
mov
sub
xor
sar
xchg
hlt
vcvtps2pd
sbb
stc
test
inc
jmp
je
dec
out
or
mov
rcrb
pop
sbb
jg
lods
push
sub
inc
lock
jno
cld
xchg
jb
sbbl
mov
or
lds
xchg
movsb
daa
dec
inc
les
add
mov
int
insb
inc
icebp
mov
aam
ret
push
sahf
gs
push
aas
stc
div
orl
test
jo
ljmp
inc
mov
push
cmp
or
rolb
dec
int
out
or
jp
inc
cmpb
sub
out
sub
loop
in
adc
enter
sti
loopne
pop
mov
imul
dec
dec
ret
stos
test
shrl
or
mov
dec
out
pop
lock
pop
xchg
xchg
lods
push
cmp
jnp
test
loop
mov
sbb
or
or
pusha
loope
cwtl
mov
outsl
mov
add
dec
or
and
sbb
jae
daa
xor
mov
ret
cs
add
add
mov
fistpl
or
inc
xchg
bound
jno
sbb
daa
xchg
pop
mov
outsb
imul
xor
aam
dec
roll
sub
or
out
popf
pop
aas
xchg
mov
outsb
outsl
cmc
push
mov
xor
adc
test
add
popf
cld
call
out
int
jne
sub
dec
es
xor
lock
je
mov
stos
xor
cltd
sbb
outsb
insb
mov
iret
ret
iret
mov
aas
or
movsl
sbb
jecxz
inc
adc
cmc
xchg
sub
cmp
push
lock
and
sti
and
repnz
lahf
idivl
mov
xchg
mov
into
or
inc
xor
cmp
shrb
or
sar
or
push
test
sub
adc
cmp
xor
insl
push
jg
xchg
xchg
sahf
sub
jnp
or
pop
iret
inc
into
cmpsb
cmp
gs
jne
out
xor
daa
dec
popl
xorb
ret
push
subb
and
cmp
mov
jno
push
xchg
jmp
decl
fimuls
rcrb
lcall
jnp
es
mull
sbb
or
jmp
aas
icebp
xchg
test
xor
or
adc
dec
xchg
lock
add
pop
jo
add
out
fs
testl
adc
shlb
in
pop
mov
cmp
mov
inc
xlat
mov
leave
shlb
clc
ss
rorb
inc
push
and
fwait
dec
dec
fsubrs
or
mov
das
jb
popf
pop
pop
push
cmp
push
int3
inc
pop
es
add
movsl
push
xorl
ds
xchg
add
or
cmp
and
push
movsl
sbb
mov
mov
add
xlat
aas
adc
jbe
lret
adc
and
dec
or
dec
rcll
sbbl
rorb
cmp
out
in
iret
cmp
das
or
ljmp
lahf
pop
dec
xlat
jge
jne
push
imul
sub
divl
xchg
scas
xlat
push
cmc
xor
insl
lds
imul
rcrb
das
nop
jmp
cmp
fisubl
sub
fstl
in
add
fdivr
lahf
std
mov
sbb
sbb
mov
cmc
ficoms
jge
daa
push
cmp
mov
shll
insl
and
cmp
fcmovnu
adc
or
dec
idivl
test
sub
lea
dec
adc
loope
out
sub
add
aaa
jle
nop
scas
sbb
mov
push
mov
or
xor
and
cli
jbe
fisttpl
xchg
mov
xchg
dec
fsubs
jbe
pop
inc
pop
bound
xorb
dec
jo
int3
adc
faddl
mov
jg
inc
nop
lret
xor
xor
add
std
dec
push
mov
stc
outsb
std
ret
adc
fwait
xor
fimull
imul
dec
test
jg
filds
aaa
dec
push
in
sbb
push
aaa
dec
mov
idivb
or
aam
pop
leave
push
add
dec
xor
jne
jb
lret
mov
test
adc
sub
dec
push
jb
test
imul
mov
jecxz
and
xor
das
cmc
lock
or
adc
inc
mov
repnz
lods
aaa
fwait
and
cmp
fcoml
xchg
add
xorl
and
ja
shl
shr
jp
jecxz,pn
xchg
push
cwtl
fsub
mov
call
jmp
loope
pop
sti
ss
sbb
and
leave
imulb
sbb
aam
imul
jnp
sti
cld
popa
push
jg
insl
shrl
loopne
and
push
pop
mov
jnp
sti
xchg
sbb
in
cli
mov
repnz
clc
cmp
add
adc
call
xchg
flds
shll
inc
dec
lds
pop
add
rsqrtps
in
mov
mov
inc
push
mov
fistps
pop
inc
subb
cld
loopne
pusha
and
adc
cld
fisttps
adc
je
sti
loop
add
inc
or
in
outsl
out
ret
push
lret
aad
clc
fsts
insl
clc
jmp
pop
mov
inc
scas
push
in
or
inc
xchg
mov
into
adc
push
add
adc
cwtl
fidivrl
mov
add
xchg
scas
inc
mov
addr16
dec
in
test
sub
xchg
fprem1
lods
xchg
sbb
cmc
js
ret
clc
pop
les
outsl
in
xchg
xor
test
mov
push
adc
fisubrs
sub
int
out
rcrb
push
insb
push
imul
sub
ficoml
stos
mov
jo
xor
push
dec
lds
mov
xor
imul
test
jae
sbb
jb
pushf
or
mov
xor
daa
or
pop
jmp
push
push
push
xor
mov
adc
or
lea
rorb
loope
pop
or
loop
lea
mov
das
cli
in
in
push
dec
jnp
xchg
arpl
and
ret
ret
lret
std
aaa
lods
outsl
shll
push
nop
jge
aad
fisubl
xor
imul
add
mov
lods
mov
lea
or
pop
xor
xlat
call
loope
into
add
or
test
and
aaa
xlat
stos
jne
aad
jno
ret
fisttpl
out
cmp
fistps
mov
mov
inc
int
xorb
int3
jo
mov
sbb
lods
adc
mov
pop
adc
imul
xchg
pop
repnz
cmpsb
icebp
das
pop
cwtl
jo
jmp
stos
inc
out
push
lods
xor
mov
fnsave
mov
out
aaa
ds
jb
cs
xchg
lea
mov
mov
div
cmp
lods
or
jno
mov
xor
stos
inc
xorb
push
out
pop
and
fnsave
stc
jae
dec
and
adc
cmp
mov
adc
mov
jle
jne
mov
clc
jmp
jg
push
loop
in
movsb
clc
or
mov
outsb
daa
push
mov
icebp
xor
push
pop
mov
hlt
sbb
pop
push
dec
jp
gs
pop
pop
loop
enter
std
fs
mov
iret
repnz
repz
mov
je
adc
sahf
xor
inc
and
shlb
or
lea
sbb
lcall
loop
lods
cmp
add
cmp
lret
jle
mov
jmp
and
fucomp
inc
push
rclb
idivl
incl
enter
adc
push
jnp
jmp
pop
push
fwait
cmpsl
addl
loope
or
and
aaa
jmp
cmp
adc
leave
mov
push
repz
xchg
mov
into
or
mov
push
nop
cld
imul
data16
jno
push
dec
sbb
jp
adc
and
push
imul
push
fidivs
gs
jl
mov
enter
cltd
sub
and
mov
push
enter
xchg
adc
js
loopne
or
enter
sbb
mov
jle
mov
sbb
and
js
xchg
sub
xlat
aad
ret
test
push
push
test
jg
cmp
inc
int3
test
cld
call
mov
adc
sti
and
mov
dec
js
lret
stc
incb
data16
pop
ret
jge
cld
les
insb
mov
pop
nop
out
mov
xchg
mov
mov
gs
test
inc
and
rol
add
bound
loope
rol
xchg
dec
scas
sub
fcompl
icebp
and
sbbb
in
push
pop
xchg
xchg
adc
cmp
push
pusha
fucomp
arpl
cmp
push
popf
out
cmp
jp
adc
add
imul
mov
lret
mov
fs
jb
ret
fsubrp
push
sbb
std
add
dec
add
dec
add
add
rolb
shll
dec
test
inc
test
cli
out
inc
stos
in
mov
clc
repz
xchg
ss
cmp
rclb
adc
test
inc
mov
push
jge
sub
jnp
cmp
push
insb
add
ljmp
xchg
mov
inc
add
andb
andl
pop
push
divb
leave
lret
push
lds
mov
test
sub
push
lcall
pop
and
add
dec
xor
xor
test
sub
sbb
lret
inc
int3
out
jne
and
cmpb
jmp
ljmp
in
pop
jle
inc
repz
shlb
sbb
inc
stos
cltd
jns
push
loopne
in
sub
cmp
outsl
fiadds
mov
mulb
push
pop
pop
push
inc
test
mov
frstor
test
xchg
dec
add
lret
test
jge
mov
or
cmpsb
dec
lret
mov
mov
pop
push
push
adc
out
rol
sti
or
fsubr
shlb
adc
adc
sub
rorb
mov
cmp
cmp
in
insb
cs
pusha
int3
inc
lock
xor
in
lahf
stos
sub
dec
insl
adc
divl
and
inc
mov
pusha
ret
jmp
out
ret
jge
mov
movsl
jae
jo
xchg
ljmp
jl
aad
rcr
mulb
push
dec
arpl
mov
mov
fldcw
xchg
in
jl
in
mov
cmpb
pop
movsb
ret
imulb
sub
imul
mov
push
xor
pop
iret
mov
and
mov
push
pusha
inc
loope
ss
and
lahf
pusha
not
pop
inc
adc
sub
into
shlb
xor
das
push
ja
dec
andl
and
mov
xor
popa
imull
jl
jp
inc
cltd
or
in
sub
sub
ja
mov
sub
pop
push
andl
scas
mov
pushf
xchg
cmp
xchg
rcr
xchg
jecxz
les
mov
js
lods
fiadds
jne
lods
inc
push
repz
jb
and
xor
das
imul
data16
sbb
adc
mov
out
int
popa
fcomps
notb
rolb
test
aaa
jp
js
adc
imulb
scas
sbb
ss
int3
or
or
lods
mov
add
ds
sbb
lods
mov
popa
sbb
cld
stos
inc
adc
mov
sub
loope
repz
rorb
push
add
adc
int3
dec
dec
aad
scas
repnz
xor
fstps
inc
mov
cs
xor
mov
insb
div
fstpt
jne
imul
fcmovnbe
jmp
mov
adc
mov
fcomi
dec
jle
cmp
popf
mov
out
jns
mov
mulb
int
test
and
fimull
addr16
push
jne
fdiv
andb
leave
in
jmp
cwtl
xchg
ret
or
jnp
loope
pop
mov
jb
rclb
enter
or
pusha
pop
mov
inc
ja
and
test
fnstcw
inc
mov
jno
mov
xchg
xor
pusha
cld
jnp,pt
out
and
pop
jno
pop
push
sbb
xor
sub
andb
lods
faddl
push
dec
lahf
or
jno
imul
add
lock
cli
sahf
and
out
rolb
jecxz
fwait
adc
out
into
cld
xor
dec
orb
stc
outsb
cmp
xor
push
jno
xor
fnstsw
outsl
pop
call
adc
hlt
mov
inc
jecxz
out
in
sti
lret
outsl
ds
xor
sub
jmp
dec
pop
enter
out
call
mov
lret
por
and
mov
mov
rorw
shl
push
cmp
jae
arpl
sub
test
test
xchg
xor
add
add
inc
addr16
es
jecxz
insl
cmp
and
pop
aas
rcrl
fbstp
adc
mov
adc
pop
aad
fxch
js
iret
sbb
dec
cli
inc
jg
scas
js
mov
cltd
movb
sarl
adc
in
xor
icebp
add
jbe
mov
adc
push
xor
jbe
rcl
ss
ror
cmpsb
fdivrs
pop
or
ss
mov
test
loop
adc
popf
or
insb
mov
push
das
sbb
movsl
mov
mov
push
mov
mov
iret
adc
das
hlt
xchg
xchg
imul
cmc
aad
inc
xorb
fidivs
stos
repz
or
add
mov
mov
pop
add
and
xor
xchg
cmpsb
lret
in
jnp
scas
test
pop
sti
ror
ljmp
test
pop
call
push
mov
movsl
cmpsl
fwait
arpl
xchg
xchg
jno
push
filds
popf
jns
dec
cmp
xchg
loop
rcrl
popa
jl
jb
ljmp
sub
adc
fcmovnb
mov
out
dec
out
je
lret
mov
notb
inc
cmp
push
dec
addb
mov
jno
ret
mov
sbb
fisubl
adc
mov
sbb
pop
pusha
inc
pusha
test
pop
fdivl
jecxz
sub
in
je
xlat
nop
out
jmp
fwait
push
or
and
dec
pop
je
sub
mov
inc
xchg
sbb
mov
js
or
mov
sub
shl
add
scas
pop
in
in
fsts
daa
stc
jnp
push
int3
sbbl
mov
fs
push
loop
jno
xchg
loope
daa
dec
dec
mov
sub
fmull
push
inc
out
xchg
sar
mov
dec
cmp
mov
xor
xor
and
ss
cmc
pop
outsb
mov
les
subb
push
aad
pop
data16
add
xor
xchg
sub
sub
inc
loop
cmp
lret
sub
out
sarl
fdivs
push
cmp
fs
decl
repz
cmp
outsl
insl
loop
flds
inc
mov
and
push
pop
dec
mov
es
cmp
mov
cmp
lods
fadd
jnp
aaa
shl
inc
loopne
sub
stos
pop
pushf
movsl
sar
sub
or
pop
stc
sub
push
inc
add
add
xchg
push
ja
lahf
lods
add
test
test
xor
mov
in
ret
mov
sbb
pop
in
push
sbb
sbb
jmp
stc
nop
rep
pop
mov
xchg
pushf
pop
in
sub
aad
cmpsl
jmp
mov
sbb
hlt
or
adc
mov
fs
rorl
test
dec
push
add
mov
rcl
sarb
dec
push
push
sub
inc
ret
pop
or
test
and
aaa
xchg
setl
push
jne
ss
repnz
fistpll
pop
jp
pop
fdivs
add
iret
pop
xchg
push
out
inc
dec
enter
or
xchg
mov
outsb
sbb
in
xchg
sti
test
rcrl
pop
cmp
pop
adc
les
jae
lret
mov
adc
add
addr16
mov
push
pop
sub
mov
and
xor
xchg
iret
jae
in
clc
fs
cmpsb
incl
mov
push
dec
into
arpl
int3
add
cli
negl
outsb
andb
imul
add
pop
movsb
cmpsl
insl
cwtl
mov
jle
jge
or
xchg
clc
arpl
std
add
xorl
rcrb
pop
push
cltd
or
pop
stos
or
sub
inc
test
aad
add
pop
mov
pop
xor
mov
mov
inc
xchg
test
mov
gs
orb
ret
in
xchg
jno
cmp
sbb
ret
push
repnz
lds
cs
stc
mov
sub
aam
js
inc
sbb
xchg
mov
mov
mov
dec
xor
and
xor
aaa
cltd
sub
pop
sub
adc
jbe
add
cmpsl
fildl
mov
repnz
mov
push
push
push
dec
push
test
cwtl
roll
mov
adc
call
xchg
popa
aad
mov
jo
xor
pop
sbb
out
dec
inc
insl
add
stos
pop
add
xchg
cmc
dec
lret
sub
mov
push
fildl
hlt
ljmp
push
std
jb
push
xchg
andb
and
js
fbstp
add
cmc
test
sub
push
and
pushf
push
sti
add
mov
jecxz
add
aam
push
out
xchg
pushf
inc
lahf
dec
jp
mov
push
mov
pop
sub
js
pop
mov
hlt
ret
adc
fwait
mov
add
arpl
lret
div
fldenv
cmp
ficompl
testl
cmp
xor
lahf
jno
in
adc
lods
in
mov
add
dec
inc
outsl
xchg
mov
mov
pusha
popf
adc
xor
mov
adc
les
insb
sub
sbb
ljmp
push
or
adc
scas
add
roll
mov
inc
and
mov
jo
mov
sarl
dec
dec
xchg
shl
sti
call
test
sti
and
imul
dec
stos
mov
push
or
out
out
ret
sub
cld
cmp
daa
out
aam
add
pop
sarl
jb
orb
jp
jmp
pop
popa
push
adc
stos
xor
or
fwait
orl
rorl
in
cmp
cmp
loope
inc
movb
flds
addl
adc
pop
sti
push
cmp
scas
arpl
cld
outsb
xlat
push
sub
pop
xchg
pop
pop
mov
mov
sub
fwait
xor
or
or
or
pop
mov
dec
sub
sbb
aaa
cmp
mov
aaa
popa
int3
imulb
into
mov
test
adc
adc
fisttpl
or
sbb
sahf
into
mov
dec
push
cmpsl
loopne
andb
cmp
and
push
push
fwait
sub
aam
xor
sbb
mov
xchg
cs
mov
and
adcl
inc
stc
in
mov
fwait
add
std
out
mov
sbb
aas
push
mov
out
sbb
cmpsb
cmc
jae
dec
repz
jno
pshufw
mov
fisubrl
sbb
hlt
mov
pop
iret
push
bound
pop
jmp
sti
and
or
ss
mov
push
jbe
dec
push
pop
cli
push
adc
in
jge
scas
xor
xor
mov
jno
fs
sti
inc
mov
and
xchg
fdivrl
nop
xor
dec
enter
cmp
mov
dec
test
lahf
and
sbb
mulb
scas
imul
fadd
xchg
and
incb
aaa
inc
mov
xchg
xchg
loope
add
clc
popa
hlt
fs
jle
cmp
mov
ror
add
ret
cmpsb
xchg
sub
arpl
rcrl
rcrb
add
xchg
mov
push
jmp
push
xchg
sbb
popa
dec
into
push
sub
out
xchg
leave
aam
xchg
inc
mov
xchg
pop
cmpsl
mov
adc
xchg
inc
roll
pop
xchg
jecxz
inc
sbb
js
mov
test
sahf
xchg
mov
push
push
push
mov
jmp
lret
push
repz
sarb
sub
pop
inc
mov
sbb
mov
stos
xlat
fcoms
imul
rcll
ja
popf
pop
jae
lret
cmp
pusha
sahf
aad
sub
outsl
stos
dec
in
daa
mov
xchg
jbe
jmp
jle
push
les
mov
rclb
xor
mov
sbb
fmuls
outsl
adc
pop
icebp
push
cltd
lds
mov
mov
adc
add
iret
jge
push
sbb
or
imul
out
and
rcr
nop
aad
jg
jl
nop
rorl
fldl
in
fsubs
sbb
icebp
repz
mov
sub
jle
sub
and
dec
arpl
pop
lods
je
push
jb
and
sbb
push
popf
bound
jl
pop
mov
xchg
addr16
push
fmull
adc
pop
sbb
push
enter
lock
jns
insl
shlb
xor
js
cwtl
xor
xor
rcl
cs
or
jno
imulb
repnz
cmp
push
push
mov
aam
dec
cmc
xor
push
and
xor
add
fidivrs
cmp
inc
and
ficoml
lods
push
outsl
ds
ja
jl
loope
xchg
aaa
sar
int
ja
xchg
pop
shlb
mov
ret
addps
loop
out
out
repnz
les
bound
push
jb
cltd
testb
or
cmp
cs
fildll
push
js
arpl
call
fimull
cmp
into
dec
push
iret
cmpl
mov
sub
jp
mov
subl
popa
jecxz
inc
cmp
cmp
popa
push
push
jmp
out
cmp
cmp
stos
push
data16
mov
ss
jns
sub
arpl
gs
popa
and
pop
inc
call
imul
jbe
xchg
mov
scas
xor
inc
aad
ret
fbstp
dec
and
push
pop
pop
dec
push
jnp
mov
and
hlt
sub
out
jmp
testl
icebp
pop
jg
sar
cmpsl
push
cmpsl
inc
push
jmp
mov
inc
mov
leave
mov
cmp
repz
sbb
xchg
into
jo
pop
mov
xchg
scas
scas
fimuls
mov
jle
mov
repnz
cs
out
or
int
jnp
mov
jno
fisttpl
xchg
cmp
loop
mov
in
push
shl
xor
push
inc
iret
pusha
mov
pushl
cmp
scas
xchg
jecxz
arpl
inc
pop
mov
inc
out
and
xchg
jecxz
in
push
sar
lret
mov
add
les
das
push
daa
push
fcomps
cwtl
shrb
pop
lea
xchg
fxtract
cwtl
adc
xchg
aad
in
xchg
cmp
stos
xor
enter
das
xor
jae
mov
add
repnz
inc
pop
xor
js
pop
movl
sub
sbb
mov
fistpll
mov
mov
inc
rclb
daa
jle
add
sub
cmc
pop
jae
pop
dec
lock
loopne
test
xchg
dec
in
std
loope
orl
pop
mov
std
aas
mov
lock
xchg
gs
xor
mov
fcmovu
pop
subl
das
pop
xor
cmp
cmpsl
popa
aaa
jnp
fidivrl
nop
cmp
xor
cli
sti
cli
xchg
add
jmp
inc
sub
push
inc
shr
xor
lret
aad
lea
pop
push
and
pop
inc
xor
movsl
call
gs
cmp
aam
int3
or
inc
inc
pop
clc
inc
popf
or
ds
mov
flds
fs
dec
mov
arpl
lea
jbe
movsb
fcomi
lcall
out
push
adc
mov
xchg
scas
mov
xor
int3
inc
shl
pop
push
xchg
movsl
mov
xor
xchg
int
or
ret
pop
mov
push
lahf
add
mov
rcr
icebp
xor
or
ss
or
mov
loopne
adc
loope
lret
shll
inc
jno
ss
out
adc
lahf
lock
pop
inc
push
jne
lock
cmpb
mov
or
jb
aaa
and
clc
adc
and
xor
testl
js
test
xor
sub
sbb
fmul
mov
imul
aad
mov
push
stos
movsl
fisubrl
call
jl
je
jle
inc
jae
cmp
and
decb
aam
aas
jo
repnz
or
icebp
dec
sbb
int
outsb
lods
or
jns
ret
movl
and
cwtl
cmpsl
insb
adc
fstps
sbb
or
jo
xchg
test
je
ret
add
nop
cmpsb
push
frstor
ret
fcmovne
cli
pop
movsl
jecxz
sub
rclb
mov
add
aam
xor
in
or
jecxz
mov
fildl
push
data16
mov
dec
push
out
add
and
xchg
jnp
mov
xchg
cmp
push
sub
adc
pop
mov
in
push
mov
cmp
and
adcb
bnd
daa
sbb
daa
xor
sbb
inc
mov
pop
or
mov
shll
fwait
or
out
iret
xchg
dec
repnz
adc
mov
mov
xlat
into
or
sub
out
lea
xchg
stos
mov
cmp
shl
lea
cli
dec
arpl
icebp
fadd
pop
ja
push
xorb
ljmp
sub
or
cld
shlb
ret
cld
push
push
xchg
adcl
or
sbb
mov
mull
fcomip
fbld
dec
sub
mov
pop
outsl
adc
adc
adc
jae
add
popa
push
xor
sbb
lock
pop
sbbb
repz
pop
rcll
sub
jnp
mov
mov
add
jno
into
xlat
sub
ret
xor
cwtl
adc
shll
scas
leave
in
lea
xor
mov
pop
popa
loope
mov
lds
cmpsl
mov
add
stos
iret
testb
push
mov
call
push
rolb
mov
mov
push
pop
xor
outsl
leave
fnstenv
pop
ret
aad
stos
and
xchg
push
rcl
arpl
aam
fs
mov
loopne
jno
in
cmp
rol
rcrb
fdiv
add
cli
sub
mov
inc
icebp
pop
cmp
out
sub
daa
jno
lahf
jne
inc
jmp
cmp
sarl
add
enter
sub
out
mov
shrl
scas
inc
pop
movsb
mov
sarb
nop
xor
pop
stos
sub
xchg
push
movsb
cmpsb
negl
jecxz
xchg
jg
loope
adc
cmovns
enter
xorb
xchg
addr16
inc
inc
adcl
xchg
lahf
inc
and
inc
xlat
push
xor
add
xchg
jp
inc
je
adc
pop
stos
insb
mov
inc
imul
lods
xchg
mov
pop
outsb
mul
pop
cmp
xor
idivl
adc
lods
push
icebp
loopne
ffreep
inc
je
mov
shl
mov
xchg
es
dec
pop
js
movsl
mov
out
cmp
mov
mov
jne
std
faddl
bound
imulb
dec
ret
in
cmc
lds
add
mov
pop
decl
mov
sbb
jo
cli
sarl
jo
xor
and
aaa
repnz
popa
adc
push
dec
jp
lcall
popa
pushf
xor
popa
jg
pop
mov
mov
mov
cs
or
adc
addr16
pop
rcrb
lock
iret
les
mov
into
hlt
in
dec
rorl
jno
adc
xlat
test
or
stos
call
xchg
out
imul
add
test
jg
mov
das
dec
mov
or
enter
sarl
in
sbb
and
push
aaa
push
mov
lret
mov
pop
dec
sbb
int
fldt
jbe
orl
fistpll
mov
cmp
in
test
sarl
adc
jmp
pop
mov
aaa
test
or
push
dec
and
jge
add
outsl
cli
pop
mov
aam
jp
cmp
sub
mov
sub
lods
loop
sub
mov
and
push
daa
mov
and
adc
pop
mov
cmp
dec
ja
hlt
adc
or
jle
mov
or
dec
mov
xchg
xor
hlt
addr16
dec
push
in
lock
out
or
scas
cld
subb
shl
xchg
aam
jne
cmpsb
adc
sub
imul
sbb
mov
test
stos
inc
scas
pop
ss
mov
sbb
pop
inc
fst
mov
imul
outsl
loop
push
xchg
dec
sti
pusha
add
sbb
xchg
push
loope
xor
or
mov
dec
pop
loopne
push
jb
jl
pop
test
xorb
jecxz
into
jmp
sbb
mov
sahf
inc
jp
cmpsb
loopne
xchg
jmp
dec
adcl
jl
or
and
push
fnstcw
cld
xor
cld
gs
xlat
inc
or
sub
push
lret
mov
aad
call
cs
pop
sub
icebp
mov
or
outsl
insb
mov
lea
add
repnz
movsl
imul
ret
subb
pop
mov
or
inc
sub
xlat
mov
pushf
int3
xorb
mov
and
inc
pop
cmp
daa
mov
jmp
and
mov
es
xor
mov
push
xor
adc
sar
mov
pop
fcoml
mov
xchg
jl
sub
cmpsb
push
mov
adc
movsb
xorb
aam
shrl
xor
push
mov
rolb
sub
ljmp
push
push
cwtl
lock
inc
data16
std
inc
fstps
adc
pop
jo
add
pop
push
ss
xor
cld
popa
add
mov
sahf
xchg
dec
mov
cmp
jle
das
and
inc
inc
and
jns
xor
enter
in
lea
push
mov
jmp
stc
or
push
xchg
or
adc
hlt
imul
clc
fsubrp
jecxz
xor
shll
pusha
test
push
pop
test
das
or
inc
sbb
xchg
aaa
adc
sbb
add
ret
cmpsl
loopne
mov
lret
movsl
inc
jo
lods
aad
ret
cli
pop
sub
xchg
dec
jmp
mov
add
imul
cs
ret
pop
popf
or
fdivrl
das
push
leave
jne
movsb
test
push
out
mov
lods
sub
shll
addr16
jl
out
pop
movsb
pop
cmp
mov
aad
cld
push
mov
add
popf
dec
adc
pop
ljmp
mov
lret
dec
inc
leavew
or
xor
inc
test
xchg
iret
mov
lods
mov
movsb
daa
pop
jae
mov
pop
push
push
mov
mov
mov
ret
fstl
stos
jle
outsb
aam
dec
shl
fs
nop
faddl
mov
and
sub
int
stc
out
sub
js
inc
or
cmp
xor
test
adc
jmp
or
out
lods
movsl
add
ficomps
clc
ss
inc
stos
cmp
stc
outsl
jge
sti
xchg
or
cli
or
std
add
and
push
jl
sub
out
sub
icebp
mov
lcall
jp
mov
sub
push
mov
cmp
ja
push
ret
ret
add
jae
js
mov
sub
pop
xor
lea
dec
mov
jno
cli
adc
int3
inc
cmp
out
mov
gs
pop
push
out
lock
bound
fists
mov
xchg
in
sub
push
cmovbe
fsubr
popa
mov
and
cmp
jo
sbbl
xchg
jns
cs
sbb
loope
pop
jmp
arpl
adc
shl
mov
dec
mov
mov
call
dec
jge
mov
scas
xchg
inc
jno
fimull
pusha
or
rcll
mov
mov
sbb
pop
out
jae
test
ret
push
sub
int
jg
xchg
inc
aad
mov
sti
sbb
or
push
fbstp
repnz
dec
rorb
sub
sub
rcl
push
push
cmc
mov
mov
je
sub
ja
imul
dec
es
xchg
pop
and
dec
inc
sbb
mov
aam
pusha
mov
test
rcl
ljmp
cmp
inc
outsl
ja
in
adc
test
or
mov
call
out
aaa
adc
int3
clc
rorb
fists
adc
or
add
mov
loope
xchg
loopne
add
xor
xor
sub
adc
mov
imul
fwait
or
cltd
out
inc
inc
and
fucomip
mov
imul
cmpsl
mov
add
add
or
stos
mov
pop
xchg
xchg
scas
add
lcall
imul
adc
mov
push
fidivl
or
clc
adc
dec
jae
mov
adc
adc
jno
or
aad
aaa
adc
xchg
leave
stc
pop
sub
and
stos
insb
je
cmpsb
pop
bound
sahf
stos
pop
sub
cmpsl
imul
jbe
inc
vpunpckldq
mov
mov
adc
lea
movsb
cmc
xor
lds
sub
lock
mov
hlt
adc
data16
sti
lods
adc
jbe
insl
dec
or
ret
pop
cli
ja
pop
mov
cmp
sarb
xlat
lcall
imul
rcr
pusha
in
int3
sub
adc
pop
mov
mov
jle
clc
adc
rorb
dec
jbe
adc
sbb
adc
pop
lea
testl
out
cmpsb
or
lods
cld
jo
ret
mov
lds
mov
push
push
xchg
cmp
add
gs
scas
sub
adc
movsb
push
outsb
cmpsl
jp
in
in
ret
pop
paddsb
mov
dec
or
cmc
pushf
push
fadd
pop
cmp
pop
jb
push
mov
xor
mov
add
jecxz
cmp
and
push
xchg
jns
and
dec
adc
rcll
pop
popf
bound
iret
sub
xor
test
lods
ja
mov
nop
aaa
inc
js
lods
xchg
mov
xchg
xchg
or
loop
imul
jns
lods
mov
pop
xlat
cmpsb
test
adc
jb
jle
loop
mov
mov
sahf
mulb
jbe
dec
dec
and
pop
inc
stc
inc
shlb
hlt
mov
mov
jle
jo
xor
sub
int3
cmp
imull
cs
push
inc
inc
in
pushf
jne
mov
lcall
mov
aam
fwait
movsl
loope
add
jno
mov
lcall
fisubl
addl
xor
jmp
ljmp
enter
cmpsl
shlb
xchg
sarb
loope
xchg
out
scas
mov
inc
iret
out
jp
iret
orl
add
xchg
cmp
and
xor
aad
cmp
js
xor
add
or
and
cmp
mov
jl
rcll
sbb
ret
xchg
stos
pop
sti
fimuls
mov
popa
stos
fdivl
orb
pop
cld
push
sub
cmp
push
hlt
rclb
scas
daa
jb
jge
jo
testb
and
icebp
repnz
imul
js
xchg
and
dec
shrl
enter
fnstcw
test
shll
jo
cmpsl
and
ds
addb
inc
popf
mov
jns
lock
pushf
cmc
mov
iret
test
cmp
dec
cltd
in
stos
je
pop
cmp
adc
xchg
mov
ljmp
out
add
mul
std
jge
ss
pop
adc
movl
enter
lock
jbe
jno
clc
fwait
xchg
cld
cld
fdivl
icebp
fsubs
cmpsb
jbe
cltd
lds
sub
insl
aaa
pop
mov
addr16
ss
movsb
nop
mov
cmp
sahf
xchg
push
mov
ret
call
out
std
and
testl
jne
bound
push
movsb
sub
cmp
pusha
dec
push
xchg
xchg
xchg
orb
jo
xchg
lahf
cmp
sub
cmpsl
cld
inc
cli
daa
mov
andb
xor
cmp
dec
enter
test
mov
sbb
out
add
mov
mov
cmp
xchg
mov
mov
jge
xor
pop
jnp
adc
inc
test
dec
mov
pusha
and
mov
test
dec
mov
aas
push
in
in
pushf
dec
add
add
out
in
and
in
iret
notl
popf
dec
push
pop
mov
mov
inc
cwtl
jmp
nop
add
pop
fs
dec
lods
aam
and
iret
xchg
out
adc
pop
or
aad
add
je
ja
pop
repnz
cmp
sub
or
dec
cmc
mov
pop
mov
cmpsb
mov
cmp
push
cmc
cli
push
decl
cmpsb
xor
gs
pop
dec
out
cmp
leave
addr16
popf
jae
cmp
add
out
pop
scas
cltd
ret
jbe
mov
movsb
pusha
xchg
inc
cltd
stos
int
mov
lds
js
xor
xchg
shlb
jl
or
cs
pop
in
inc
push
fsubrl
jp
test
jmp
cwtl
test
gs
mov
scas
mov
jl,pt
sbb
push
cmp
adc
pop
shlb
daa
or
pop
js
xchg
sub
xchg
aaa
jno
call
in
loopne
add
add
jecxz
sbb
xor
lock
out
adcb
xor
mov
lahf
cli
ja
mov
movsl
jge
sbb
out
pusha
xchg
imul
pop
int
dec
leave
insb
into
out
add
lea
sub
cmpsl
adc
inc
xchg
xchg
js
out
in
shlb
fistpl
xchg
hlt
lock
data16
sbb
jbe
data16
dec
fdivrl
push
dec
add
gs
adc
adc
jae
imull
out
mov
insl
shlb
lds
lods
and
cmp
in
mov
clc
add
dec
out
xchg
dec
addr16
cwtl
mov
pop
test
jg
in
mov
dec
les
xlat
mov
dec
mov
mov
fistpl
pusha
pop
sub
shl
cmc
decl
sbb
mov
add
or
cmpb
cs
xchg
enter
lods
cli
or
inc
ds
and
inc
cwtl
jecxz
inc
jecxz
mov
inc
xor
cmp
xchg
ffree
test
mov
sub
xor
dec
adc
dec
mov
jmp
loope
imul
cld
cmp
mov
lret
inc
imul
cmp
sub
inc
cmp
icebp
sub
and
xchg
lret
test
push
adc
ja
add
mov
stos
jg
sbb
jl
push
cld
testl
push
mov
cld
pop
push
ret
popf
lret
rcll
inc
push
stos
imul
push
dec
mov
pusha
adc
data16
adc
push
inc
pop
out
mov
ficompl
out
mov
out
cmpsb
sti
jae
add
sbb
ret
xor
call
std
popf
insl
xor
dec
popa
jl
test
jmp
ja
pusha
push
sub
mov
xor
pop
out
cs
dec
sbb
cmp
xor
pushf
rolb
dec
mov
jg
aam
arpl
sub
nop
or
popf
std
push
mov
adc
xchg
mov
movl
cmp
jmp
adc
or
call
loopne
int
sub
lods
in
push
push
ss
or
inc
lea
dec
mov
test
ss
cwtl
jae
sahf
xchg
inc
dec
cmpsb
sar
xor
mov
int
pop
iret
lea
imul
cmp
sbb
into
push
pop
mov
aam
pop
sbb
cmpsl
fists
ds
bound
adc
test
in
in
jb
push
inc
pushl
mov
movsb
or
iret
sub
mov
xchg
adc
loope
jle
inc
push
lods
add
sub
xor
repz
xchg
dec
xor
mov
outsl
mov
jl
popf
mov
mov
sbb
stc
stos
push
xchg
dec
popf
cmp
arpl
xchg
negl
inc
mov
sub
rolb
mov
std
xorl
fs
add
adc
fistpl
sbb
inc
mov
mov
xchg
push
jmp
cmp
and
cmp
fwait
jmp
sti
and
fcmovb
xor
or
push
mov
jmp
int3
push
jmp
cmp
stos
out
xor
mov
gs
scas
ljmp
iret
dec
and
fcomps
fisubrs
mov
push
pusha
daa
cwtl
cmpsb
faddl
testb
push
pop
mov
dec
out
repz
dec
fisubl
xchg
or
popf
pop
aaa
loop
call
or
push
push
rcrl
loopne
or
jns
ret
enter
add
pop
cmp
lret
ret
dec
pop
nop
jb
inc
fcoms
inc
test
fsubr
notl
sahf
pop
cmpsb
popf
jg
and
scas
in
mov
stos
jbe
pop
jecxz
ja
iret
fistpl
xor
xchg
push
imul
sbb
jne
test
inc
sbb
adc
mov
je
iret
jle
jbe
jmp
cli
dec
ror
outsb
fiaddl
addb
mov
cmc
lock
or
mov
push
dec
inc
jmp
xchg
add
pop
int
mov
mov
lock
std
repz
js
mov
mov
mov
rcrl
and
in
clc
cmp
insb
lods
cmp
icebp
test
das
cltd
xchg
jl
adc
xor
rorb
ljmp
movb
dec
jae
lods
pushl
and
pop
pop
rorb
xchg
hlt
xchg
and
mov
xchg
inc
mov
push
mov
nop
and
cmp
push
test
inc
xchg
sub
sub
mov
movsl
lock
icebp
push
and
rcrl
xchg
fimuls
xchg
fldt
cmp
aas
bound
cmpsl
jb
sub
sahf
or
dec
aas
pop
outsb
xor
popa
lea
push
push
imul
stos
adc
mov
bound
mov
fdivrl
in
fcoms
aam
daa
shrb
mov
aas
adc
mov
mov
or
das
push
pop
add
xchg
call
mov
in
dec
mov
into
sub
push
mov
xor
fcmovb
push
and
mov
adc
scas
cld
aad
push
inc
aas
push
push
and
out
xorb
and
pop
adc
arpl
and
stc
push
ljmp
loope
insl
aas
pop
jae
push
mov
mov
mov
rcrb
fsubrp
pop
fmuls
pop
popf
push
jle
rolb
lock
or
cs
mov
movsl
leave
sbb
push
repz
in
stos
cmpl
dec
xchg
stc
mov
or
icebp
shr
data16
sbb
faddl
xor
enter
jecxz
stos
addr16
jne
bound
lds
sub
jbe
jnp
or
pushf
in
mov
cmp
divb
and
jbe
xchg
inc
pop
jne
add
sahf
adc
dec
adc
mov
loope
daa
lock
fsubr
mov
jo
enter
xlat
dec
test
add
ljmp
frstor
dec
jp
int3
mov
les
cmp
repnz
xchg
ret
aam
cmc
shl
hlt
add
imul
fistpll
out
js
fsub
jge
mov
das
int
add
xchg
icebp
push
movsb
sbb
and
clc
sbb
lret
sub
insb
push
xlat
ljmp
pusha
push
lods
fisubs
pusha
mov
mov
in
addr16
das
or
ret
dec
or
div
pusha
sub
into
jmp
adc
xchg
leave
xchg
sbb
or
pusha
inc
and
std
fistl
and
std
xor
push
test
mul
inc
test
push
sub
in
nop
fdivrp
mov
mov
sbb
inc
xor
pop
inc
dec
sahf
jp
sbb
ja
jle
xchg
mov
dec
inc
xchg
or
jle
mov
mov
repz
pop
mov
push
jae
nop
pop
add
int
daa
dec
dec
stos
sub
pusha
daa
insb
mov
xchg
lcall
xor
les
lock
inc
jne
cld
mov
sbb
loope
inc
fs
rolb
outsb
sub
aad
add
bound
ret
loop
hlt
sub
xor
mov
cmc
fistps
sub
mov
sbb
lods
add
push
pop
sbb
or
sub
movsb
lods
int
shrl
in
xchg
mov
mov
mov
pusha
fs
dec
fldt
jae
shrb
pop
testb
ret
inc
and
lea
push
sbb
repz
jns
divb
xchg
pop
jnp
xor
pop
xor
in
dec
insb
and
xchg
insb
dec
std
ret
imull
sbb
xchg
popf
test
push
add
mov
lahf
popf
jmp
mov
ljmp
lret
jno
call
hlt
lea
mov
out
loope
andl
adc
call
aas
sub
sbb
out
es
sahf
dec
stc
cmpsb
cmpl
sti
or
scas
stc
fsubrl
mov
xchg
mov
dec
cmc
repnz
cwtl
ljmp
out
das
sti
jecxz
in
push
or
xchg
xchg
dec
cmp
mov
movsb
cmp
movsl
push
fucomip
ss
add
push
jno
xchg
push
pop
xor
or
adc
stc
gs
addr16
es
dec
add
sbb
cmpsb
in
lea
outsl
pop
shlb
sub
inc
fmuls
hlt
sarl
push
ja
sbb
lahf
jne
jbe
outsl
mov
mov
call
add
insb
xor
adc
inc
out
ljmp
jns
push
or
mov
aad
pop
mov
test
clc
xchg
js
jge
sub
lcall
pop
jne
addr16
dec
sahf
xchg
jp
mov
jo
sbbb
clc
icebp
out
in
jl
push
cli
jl
push
xor
add
je
pop
loopne
add
jecxz
push
xlat
les
cmpsb
sub
inc
sbb
xlat
pop
sbb
jl
loope
push
inc
or
out
subb
mov
push
inc
dec
nop
sub
shrb
mov
fcompl
daa
mov
lret
inc
xor
test
leave
add
aad
js
js
dec
popf
stos
xchg
xchg
lds
das
testl
inc
addb
cmp
sub
mov
sub
outsl
in
inc
stos
xchg
lods
fcmovnb
sub
neg
hlt
xchg
int
sbb
xor
out
scas
or
negl
sahf
or
insl
in
add
outsb
iret
js
cwtl
adc
data16
enter
jb
inc
lcall
sbb
add
aam
fldenv
xchg
mov
fldt
push
mov
mov
adc
sarb
andl
daa
xchg
fwait
pop
nop
xor
cmpsb
imul
addr16
addr16
lcall
lock
hlt
cmpsb
loop
mov
inc
add
int3
stos
add
push
jg
and
mov
push
push
or
sub
add
sti
pmulhw
add
xlat
in
movsb
dec
sub
mov
fimull
pop
push
mov
scas
dec
sarb
push
das
cmp
int3
das
push
scas
mov
sub
cmp
dec
sub
push
aad
fstl
jne
mov
loop
lods
dec
xchg
mov
jnp
adcl
dec
mov
xchg
divl
mov
out
pop
fucomp
rcrl
add
je
mov
dec
mov
sbb
mov
jae
cmc
dec
adc
pop
inc
push
push
adc
mov
mov
sbbl
mov
in
lcall
loope
pop
mov
cltd
and
push
pop
mov
test
mov
add
adc
lds
rcr
or
hlt
cmp
repz
mov
mov
jbe
out
dec
ja
out
dec
jp
mov
cmp
mov
es
jle
push
orb
mov
cld
push
movsb
jmp
pop
mov
inc
push
xor
xor
rol
mov
pop
mov
insl
adc
inc
and
push
lods
mov
dec
sub
xor
dec
sbbb
movsl
bswap
gs
mov
scas
popa
dec
imul
pop
jb
xor
es
stos
mov
mov
sub
pop
test
out
jae
imul
sbb
jnp
xor
movlps
mov
scas
push
mov
add
pop
dec
icebp
cmc
aad
loop
mov
shrb
arpl
je
jnp
dec
push
loop
sub
jg
enter
or
loope
jge
scas
std
int
imul
mov
jnp
inc
addr16
iret
pop
lods
adc
xor
jae
mov
cmpsl
ret
xchg
rol
ret
dec
cmpsb
popf
or
cmpsb
call
les
clc
popf
xchg
jmp
sarb
cmp
pop
mov
pusha
pop
xor
bswap
mov
adcl
arpl
cmp
pop
mov
insl
jae
into
movsl
push
inc
push
inc
int
cmp
jo
cmc
out
jb
adc
add
xchg
push
scas
insl
add
mov
jnp
jb
je
cmp
mov
inc
add
cld
xchg
leave
mov
cmp
pop
cmpsl
push
lahf
add
sbb
ss
xchg
ss
test
incb
push
jp
in
mov
js
mov
lret
fucom
in
insl
mov
sub
aas
shll
add
imul
push
fwait
sbb
nop
imul
push
stos
notl
inc
mov
xor
mov
sti
stos
push
pop
push
inc
jmp
jb
in
dec
rorl
add
scas
xor
arpl
fs
mov
stos
inc
mov
mov
lods
xchg
hlt
push
xor
fs
sub
fwait
loope
dec
cmp
gs
imul
iret
insl
adc
addr16
jo
push
push
sbb
mov
pop
loope
mov
addr16
js
ret
xlat
out
cli
xor
xor
loope
cmpsl
and
mov
nop
in
shll
xor
jp
icebp
enter
xchg
rolb
shrl
jg
sahf
push
mov
push
enter
into
sbb
bound
es
pushf
sahf
in
jle
xor
adc
pop
popf
jno
xchg
push
mov
jb
mov
inc
and
sbb
lock
cmp
pop
dec
leave
add
or
ljmp
and
lahf
adcl
test
mov
into
sti
inc
sub
add
and
push
cmpsb
xchg
xor
test
fmull
push
addr16
mov
mov
movsl
xor
test
push
loopne
vsqrtps
jge
aam
es
sub
and
out
mov
ds
pop
filds
je
dec
mov
sbb
jae
mov
pop
jbe
dec
scas
in
xchg
adc
jle
jecxz
adc
rcll
data16
roll
cmc
mov
mov
psubsw
jle
lahf
or
out
outsb
shlb
or
pop
jnp
loop
fistps
stc
xchg
push
vmovntdq
popf
clc
arpl
push
fdiv
pop
scas
cld
addr16
mov
cmp
dec
inc
dec
test
jl
lods
clc
mov
insl
divb
jno
xchg
add
lret
mov
lret
pop
aaa
dec
pop
imulb
stc
sub
jge
cmp
and
lcall
cmp
adc
mov
in
push
mov
fstl
daa
jge
mov
popa
adc
and
lret
mov
dec
lods
jecxz
test
mov
jl
pop
mov
mov
data16
adc
and
jns
or
dec
or
into
mov
lret
mov
push
add
and
mov
outsl
push
fimull
pop
faddl
push
inc
and
je
dec
push
shrb
dec
sbb
into
pop
cmp
fists
xor
xchg
aaa
pop
sbb
jle
pusha
out
inc
iret
mov
push
sbb
push
mov
mov
mov
pop
inc
mov
cmp
aaa
dec
fs
sub
hlt
mov
xchg
jge
jbe
jns
cld
fsubrp
push
mov
cmp
push
mov
adc
cmp
jge
add
or
sti
adc
clc
ds
out
inc
inc
cltd
xchg
pushf
adc
popa
xchg
arpl
aaa
xchg
dec
jne
xchg
xor
leave
xor
test
push
xchg
xchg
loop
cmpsl
scas
adc
pop
pop
mov
aaa
out
cmp
imul
jbe
daa
lock
xchg
test
xor
dec
ja
addr16
inc
jnp
scas
jecxz
loope
mov
inc
pushf
pusha
sub
arpl
or
xlat
dec
mov
cli
jno
cmpsb
mov
xor
scas
jecxz
fldenv
dec
aaa
outsb
dec
in
adc
mulb
mov
adc
cmp
scas
jle
sbb
addr16
out
das
lds
enter
test
cmp
add
imul
pop
sbb
pop
ret
xchg
stos
test
push
stos
mov
movsb
addr16
mov
pop
mov
fwait
into
push
mov
xchg
lods
mov
lahf
inc
jns
mov
rolb
repnz
xorb
andl
int
inc
adc
jle
daa
cmp
dec
push
push
stos
ds
imul
adc
push
sbb
adc
es
adc
fsubl
sti
cmp
lcall
dec
cmpsl
in
jl
out
shl
xor
arpl
lahf
insl
stos
mov
jmp
bound
jmp
mov
rclb
shl
mov
popf
into
push
add
iret
in
fsub
sub
jg
addl
xor
out
sub
pop
and
xchg
and
hlt
sbb
or
leave
lea
cs
push
pop
mov
mov
push
mov
add
aas
mov
and
idivb
arpl
push
or
mov
int
mov
sti
aad
test
inc
mov
or
data16
xor
cmp
adc
xchg
pop
adc
add
ds
lods
popa
cli
dec
in
xlat
out
xor
inc
sbb
and
cld
shl
fldcw
lahf
jl
dec
inc
hlt
push
test
bound
add
int
out
fsubl
cli
movsl
rclb
in
repnz
sub
xchg
pop
cmp
add
mov
cmpsl
add
push
jg
fildll
mov
pop
jnp
idiv
cmp
ret
xor
mov
mov
sbb
xchg
pushaw
jo
jnp
inc
fwait
insl
rorl
inc
aas
mov
inc
xchg
cmc
icebp
jo
ret
and
dec
xchg
pop
cmp
stos
dec
bound
ret
outsl
jge
lcall
aaa
push
in
lret
mov
sub
xor
dec
out
inc
hlt
or
or
test
mov
mov
cmpsb
xlat
pop
mov
add
or
mov
pop
js
lods
aam
imul
mov
outsb
nop
mov
adc
int
xor
mov
push
pusha
mov
stos
mov
sbb
push
imul
add
in
negb
sub
test
xchg
xchg
div
cmp
xchg
rorl
addb
icebp
jl
fdivrl
cs
sbb
std
xlat
adc
test
icebp
pop
test
mov
fbstp
repz
jmp
jae
cmp
ficompl
shr
gs
loope
or
les
clc
pusha
cmpsl
int
add
in
mov
sbb
mov
cs
shll
push
fwait
xchg
pop
and
ljmp
cmpb
sub
inc
lret
jne
sub
sbb
lcall
andl
adc
movsb
ljmp
fnstsw
cmpsb
cmp
sbb
pop
test
pop
xchg
push
lahf
push
jno
mov
int
jns
pop
dec
inc
cmp
push
mov
aaa
dec
packssdw
and
mov
test
push
inc
fmul
nop
scas
bound
push
stc
push
cltd
jg
mov
dec
dec
fcompl
jge
out
lcall
loop
xchg
lock
pop
sti
jp
in
popa
repz
pop
add
add
mov
rolb
rcrb
dec
mov
mov
or
addr16
add
shr
test
aas
mov
add
lds
push
mov
cmpsl
and
es
pushf
cmp
add
int3
adc
push
dec
xchg
std
add
sbb
mov
test
xchg
div
sub
xchg
push
and
jbe
sbb
adc
leave
push
outsl
shlb
mov
fdivl
scas
xor
jns
clc
fdivrl
test
popa
fucom
cltd
lock
push
add
ret
call
idivb
xchg
mov
xchg
pop
frstor
jno
in
xchg
add
pop
es
adc
push
hlt
xchg
xor
ret
mov
jae
cmp
decb
fstpl
rclb
fcmovnu
insb
jno
imul
rclb
ffreep
jno
in
cmp
push
popa
rorb
test
mov
cmp
pop
inc
out
rorl
jo
outsb
pusha
push
bound
adc
jnp
xchg
jbe
push
cmc
pop
mov
push
scas
mov
popa
mov
dec
xor
daa
pop
lock
mov
scas
mov
mov
jecxz
sbb
and
cld
ret
mov
or
sub
test
cmp
inc
inc
repz
add
jecxz
movhps
scas
jecxz
inc
adc
pop
test
mov
xor
rcrb
add
push
imul
xchg
xor
sub
notb
sbb
adc
fcompl
xor
je
jae
sbb
test
push
mov
loopne
mov
sbb
ss
pop
lds
inc
in
mov
add
into
xchg
dec
aaa
and
pusha
mov
call
aas
je
daa
aam
pop
mov
dec
into
ret
mov
push
repz
hlt
pusha
mov
ljmp
add
jnp
xchg
mov
push
jbe
mov
fwait
sbb
fisttpll
push
mov
test
push
rcrl
lock
push
cmpsb
ss
xchg
mov
sub
xchg
lods
jbe
clc
les
xchg
addr16
xor
pushf
mov
in
or
and
pop
std
pop
xor
lcall
lock
mov
add
into
iret
sub
pop
andl
insb
mov
mov
jno
sub
in
cmp
xchg
xor
pop
fmul
insb
cmp
add
enter
les
mov
iret
das
arpl
shrb
push
xor
xchg
aaa
scas
jb
out
mov
outsl
pop
pop
imulb
pop
sbb
adc
enter
inc
pop
ret
fisubl
mov
mov
sub
adc
add
enter
sarl
sbb
add
mov
enter
pop
cmp
push
filds
hlt
in
lods
lcall
jnp
aad
mov
xchg
pop
xchg
movb
outsb
sub
dec
adc
or
sub
xchg
adc
adc
jb
push
lcall
fsubp
mull
jge
cmpsl
add
xchg
je
gs
scas
or
lods
sbb
mov
popf
pop
add
lret
sub
inc
cmp
in
test
sub
sub
inc
repz
out
adc
xchg
mov
lret
pushf
and
in
adc
dec
outsl
mov
push
and
aas
xchg
push
nop
and
mov
stos
fcomi
push
mov
pop
xor
leave
outsb
mov
mov
pop
cmpsl
jno
xor
pop
lock
jnp
rcrl
loopne
sbb
repnz
or
pop
mov
fcoms
fsubp
lods
jne
adc
out
popa
mov
hlt
ja
test
in
inc
mov
leave
pushf
sbb
cltd
incb
test
jnp
cmp
push
jbe
daa
daa
fsubrl
enter
adc
test
es
jae
adc
in
leave
cmp
xchg
shl
and
iret
xor
aad
aaa
adc
sti
shl
xlat
dec
fs
lock
movsb
mov
mov
fdivs
popf
or
inc
mov
int3
mov
nop
jns
pop
cli
lds
xor
fistps
push
int
sbb
mov
push
push
jno
ficompl
xor
and
add
adc
out
xchg
sub
and
sbb
mov
dec
and
movsb
lret
pop
fldenv
daa
add
pop
pop
jmp
xor
fsts
push
push
sbb
xchg
push
clc
push
outsl
cmp
add
imul
cmp
ja
dec
adc
rcrb
cmpsl
leave
jb
add
pop
xor
repz
xchg
sti
repz
xlat
sbb
pop
and
xchg
sub
insl
lds
mov
sbb
adc
mov
push
xor
inc
sub
inc
mul
pop
cmp
sub
lret
gs
pop
push
lahf
jecxz
ja
inc
mov
outsb
loop
xchg
imul
das
inc
je
fisttpll
xchg
jnp
repz
mov
cltd
ljmp
icebp
dec
scas
xor
cs
xchg
fnsave
dec
rcrl
scas
xor
push
out
int
lock
cmp
inc
xchg
rcl
loopne
xchg
test
and
in
aam
pop
shll
cmc
inc
jmp
pop
repz
add
and
sahf
std
add
leave
addb
scas
pop
adc
fmuls
adc
fs
add
push
ja
mov
in
adc
mov
sub
xchg
movsl
push
pop
sub
xchg
inc
jbe
and
pop
xor
cmp
movsl
add
xor
add
loope
les
pop
push
shr
lahf
pop
adc
push
inc
jo
loopne
push
inc
fcompl
mov
loopne
ret
popf
xor
dec
stos
xchg
jne
jo
add
xchg
dec
into
scas
and
outsl
jno
divb
fcoml
jge
cs
inc
pop
fnstsw
mov
hlt
and
test
loopne
es
loop
sbb
or
jmp
xor
xlat
pop
in
loopne
pop
je
adc
fwait
js
cmp
add
ja
adc
sbb
cmpsl
fldenv
sets
ret
fdivrs
mov
scas
sarb
orl
inc
sbb
inc
stos
xchg
sub
mov
pop
dec
sbb
icebp
mov
fldenv
sbb
adc
fistl
xor
push
shr
pushf
xor
out
insl
pop
push
and
and
and
lahf
inc
arpl
sahf
mov
aad
sbb
out
clc
xor
mov
dec
fisubrl
filds
sbb
fsubs
inc
jp
push
mov
std
call
ss
fadd
lods
pop
loopne
jl
lcall
pop
jne
push
stos
negb
cmp
or
adc
jae
pop
int
rclb
cmp
cli
enter
ret
pop
hlt
sbb
and
imul
movsl
ljmp
dec
loop
pop
xchg
fcmovne
js
sbb
arpl
add
je
or
outsb
outsb
test
cs
inc
movsl
adc
and
bound
push
jl
ja
xchg
rorl
mull
jne
adc
andb
sub
sub
mov
add
test
out
xchg
jmp
pop
xor
pop
sti
adc
sub
xchg
outsl
xor
popf
push
into
int3
je
push
scas
mov
cmp
push
inc
xor
movsl
xchg
or
inc
test
sbb
nop
cltd
mov
cmp
scas
and
add
aas
inc
adc
adc
cmpsb
sbb
xor
push
roll
pushf
std
jle
inc
loopne
xchg
jns
icebp
int3
shlb
cmc
iret
lret
enter
lcall
add
dec
add
test
out
shll
mov
popf
lods
lret
nop
hlt
inc
sub
cs
imull
pop
xor
loop
and
cltd
xor
push
inc
push
pop
int
addr16
fnstcw
mov
fucomp
sahf
gs
pusha
cld
iret
das
std
adc
popa
push
mov
leave
mov
fidivl
add
sub
ret
cmp
mov
mov
in
inc
push
sub
add
lds
push
aad
fistps
hlt
cld
xor
shlb
lock
dec
imul
dec
das
adc
divb
aas
sbb
jmp
xchg
test
repz
ret
negb
push
loopne
jecxz
inc
and
sbb
inc
mov
mov
xor
fistl
clc
faddl
mov
frstor
mov
push
dec
in
sbb
repz
adc
scas
mov
and
sahf
push
rolb
xlat
fwait
in
subb
xchg
mov
sub
mov
test
dec
dec
xchg
popl
mov
sbb
daa
hlt
inc
ficoms
aam
fwait
loop
or
xchg
xchg
mov
pop
push
mov
stos
mov
inc
lea
cwtl
xchg
mov
mov
dec
arpl
cld
dec
or
clc
inc
ret
loope
or
or
and
or
jl
jbe
sbb
das
xchg
pushf
and
fnstsw
sbb
xorl
aam
xlat
out
cmp
sarl
movsl
das
arpl
idivw
popf
orb
pop
and
inc
push
je
test
sbb
sbb
mov
rorl
cmc
addr16
fwait
sbb
pusha
mov
or
mov
ds
jecxz
rclb
add
test
lods
pop
inc
sbb
xchg
jo
jb
mov
push
lcall
ljmp
push
ja
in
jb
in
cli
and
pop
inc
adc
addr16
and
mov
xor
shrb
xor
pop
int3
cmp
rclb
insb
ret
sbb
gs
lret
xchg
cmp
rcrb
push
xor
imul
jmp
mov
mov
movsl
jmp
rcrb
outsl
mov
imul
test
xchg
sbb
xchg
out
enter
shlb
mov
jmp
fldcw
ljmp
lods
xorl
inc
fsub
fnstcw
inc
fmul
inc
pop
movb
push
cmp
or
data16
sub
std
sbb
jnp
lods
sbb
test
or
mov
add
mov
in
lods
dec
mov
sbb
pop
test
adc
fwait
cli
jp
aad
shll
scas
xor
ret
pop
fs
stos
push
pop
jle
push
test
aad
pushf
sarb
imul
repnz
aaa
fildll
stos
xor
icebp
pop
jb
xor
cmp
and
dec
fnsave
test
pushf
cmpsb
rolb
outsb
cmc
scas
repz
test
js
cmp
aaa
lock
xchg
adc
aam
arpl
popf
gs
out
int3
xor
sub
in
mov
fnstsw
add
arpl
int
jb
xlat
add
and
test
sub
push
xlat
fidivs
xor
xchg
in
mov
enter
dec
loope
int
cld
sbb
push
cmpsb
hlt
sti
jno
test
repz
dec
adc
subl
sbb
pop
pop
cmpsb
push
in
mov
movsb
sub
or
pop
inc
jmp
sahf
add
icebp
adc
mov
and
cmp
jns
enter
jecxz
ljmp
icebp
pop
fs
sbb
enter
scas
xor
fistpll
xchg
lahf
adc
lea
into
mov
inc
cmp
pop
push
dec
mov
repz
inc
pop
mov
add
mov
sbb
js
sarl
clc
pop
jl
arpl
xchg
in
mov
or
inc
dec
adc
in
add
loop
jecxz
ss
dec
push
dec
mov
mov
adc
xchg
nop
sub
imul
out
or
arpl
dec
insl
popa
mull
inc
push
jl
mov
ljmp
mov
pop
cmp
into
and
xor
sbbl
pop
fiadds
inc
mov
xchg
sbb
dec
rcrl
stos
fisttpl
adc
xor
popa
dec
xor
adc
lret
dec
and
push
pop
iret
inc
cmp
insl
jecxz
ds
outsl
mov
imul
sub
movsl
inc
add
test
jmp
into
cmpsl
dec
push
push
cmp
jnp
pop
and
arpl
je
push
je
push
inc
cmp
outsb
push
xor
sub
arpl
cmp
adc
inc
test
sbb
test
shrl
int3
lock
push
mov
sub
push
add
scas
cmpsb
add
clc
shlb
test
mov
mov
pushf
out
popa
rcrl
jo
fidivrs
jle
pop
inc
jecxz
xor
pop
mov
add
pop
scas
popa
add
push
cmc
ret
mov
shl
mov
movsl
outsb
fs
or
jecxz
cwtl
dec
cmp
and
dec
mov
call
leave
dec
outsl
and
orb
stos
jb
or
mov
fwait
sub
bound
ds
out
mov
push
push
inc
jns
getsec
jo
sbb
sbb
pusha
out
fidivrl
mov
xorb
xchg
push
repnz
addr16
pop
andb
push
aam
inc
push
add
mov
insl
cmpsb
test
outsb
sbb
aam
mov
pop
xchg
pop
test
sub
lahf
mov
fstpl
mov
jb
push
sbb
cli
sbb
ret
jo
ds
jnp
lret
jo
fldl
sbbl
pop
add
nop
in
clc
fidivl
cmp
jo
add
inc
cmp
push
or
cmc
and
ficompl
push
or
adc
mov
popa
and
fldt
stos
les
sbb
push
push
mov
sbb
sub
clc
popf
out
negl
pop
enter
lods
rolb
mull
push
add
testb
in
hlt
int
or
xchg
mov
and
push
decb
lea
inc
iret
cwtl
cli
stos
sub
call
aam
fdivrs
mov
xor
andb
outsb
test
jb
adc
fiadds
mov
test
xor
cltd
outsl
dec
stos
or
loop
push
xor
fldlg2
inc
xchg
adc
loop
inc
dec
fnstenv
inc
mov
jo
repnz
or
mov
jle
mov
xlat
jns
jmp
fcomps
daa
and
movb
push
imul
test
jne
lret
sub
jle
fwait
pop
std
and
push
mov
jb
lret
sub
lock
or
les
lods
add
inc
lods
push
outsl
int
mov
cmc
sub
daa
push
rcl
data16
mov
fidivs
adc
loop
in
in
aas
inc
cli
pusha
xchg
mov
push
lret
cmp
rorb
addb
push
jl
bound
shlb
into
push
adc
xchg
arpl
mov
sub
xchg
xchg
inc
jecxz
jl
test
cmp
addl
test
ror
push
lods
sbbl
push
xor
jb
js
outsb
popf
cmp
or
dec
xchg
adcb
xchg
lea
lods
leave
dec
push
scas
pusha
int
imul
inc
sub
sahf
lds
or
in
out
mov
and
or
add
push
xchg
nop
outsl
or
aam
xchg
outsb
shll
in
movsl
inc
sarl
subl
pop
ret
rorb
sbb
cmp
outsb
shlb
inc
and
push
add
fistps
dec
mov
pop
dec
mov
adc
pop
es
jl
fcompl
xlat
jb
ja
ljmp
cmp
inc
cmc
sub
in
push
in
inc
cli
stos
jb
fisubrl
sub
pop
push
xor
push
pop
in
dec
cmp
into
bound
sub
jmp
filds
or
jge
xchg
xchg
in
cmp
inc
ret
into
ret
das
jns
dec
fmul
mov
sahf
push
icebp
pop
jp
xchg
loopne
jle
push
loopne
ja
mov
pop
popa
movsl
or
adc
mov
or
inc
int
inc
cmpsl
or
dec
mov
popa
and
mov
sahf
cmp
cmpl
or
in
lods
jns
or
cmp
and
jo
xchg
mov
dec
mov
pop
cmpb
insb
movsb
cmp
xchg
add
aas
stc
cmp
xor
pop
data16
add
les
or
push
call
inc
pop
push
jl
mov
lret
xchg
cmp
clc
xor
pop
cmp
mov
cmp
cmpsb
adc
mov
fildl
adc
shll
gs
mov
add
das
xlat
es
in
or
lret
push
add
jmp
inc
push
mov
aas
jae
xor
aam
mov
push
mov
or
icebp
aaa
jge
out
sub
jl
nop
popf
imul
rcll
fsubrs
cmpsl
inc
lods
fs
xor
jb
fadds
sbb
add
mov
pop
mov
clc
pop
into
xchg
cwtl
loop
push
jae
lahf
out
loop
int
add
mov
lods
pop
pop
pop
push
dec
stos
xchg
data16
or
adc
outsl
mov
push
jne
gs
out
adcb
sbb
xor
pop
mov
inc
xchg
xor
dec
iret
bound
aad
lods
xchg
and
xchg
lds
pop
out
jmp
scas
cli
add
hlt
dec
sbb
stos
xlat
cwtl
lahf
inc
into
add
cld
sub
mov
cmp
fldenv
mov
xchg
repnz
add
lds
pop
mov
fidivrs
xchg
in
xchg
jl
in
jg
repnz
mov
jmp
mov
xchg
decl
les
mov
mov
call
mov
cmpsb
mov
in
sub
xchg
and
mov
xor
out
das
inc
and
xlat
shrb
sti
dec
inc
adc
sub
dec
add
or
dec
lret
xchg
sbb
mov
cmp
into
jecxz
adc
nop
in
out
and
les
shr
es
ja
pop
insb
lret
les
leave
outsl
outsb
xchg
inc
jmp
pop
xlat
push
aad
inc
sub
mov
push
mov
mov
xlat
mov
outsl
ja
mov
sub
mov
push
push
dec
cmp
popa
jge
mov
and
xor
ljmp
fistl
xchg
nop
cmp
xchg
pop
adc
scas
das
cmp
dec
sti
mov
push
dec
mov
mov
outsl
incl
mov
cmp
push
fsubrl
mov
inc
orl
rcll
out
out
mov
sbb
movb
mov
nop
scas
filds
loop
les
xchg
jbe
mov
jb
inc
ficoms
pop
cmpsb
mov
lahf
push
lret
xor
inc
sub
testl
mov
mov
popf
xorl
or
nop
jns
repnz
repnz
fwait
push
das
and
pop
push
ss
addr16
call
stos
pop
or
mov
jno
jp
mov
test
add
hlt
dec
sbb
inc
dec
rcl
adc
cmp
jnp
jecxz
ds
add
out
pop
adc
pop
xor
pop
push
js
repz
leave
dec
fldcw
add
xchg
push
xor
mov
flds
subl
mov
jmp
das
notb
push
add
fldl
frstor
adc
aad
add
or
insl
push
xlat
cmpsl
scas
lds
xchg
fnstcw
push
mov
test
jno
sub
adc
mov
jb
nop
push
push
xor
sub
jns
fcmovnb
adc
sub
cmpsb
enter
sub
pusha
hlt
push
shrb
push
jg
cwtl
pushf
cmp
lcall
and
rcrb
lahf
inc
xlat
xor
jle
xor
mov
jl
shlb
adc
inc
ficomps
lret
shlb
jae
adc
leavew
fsubs
and
xchg
fcom
adc
int3
xchg
or
imul
mov
push
das
mov
arpl
xor
dec
sbb
push
bound
or
scas
test
push
test
or
pop
jae
pushfw
inc
xchg
sub
mov
xor
and
sub
adc
sbb
adc
jne
loope
mov
popf
sarl
fnstenv
inc
stos
xor
popf
lret
pop
jbe
sbb
imulb
movsl
lods
xlat
in
in
mov
repz
gs
in
pop
add
push
xchg
mov
ljmp
pop
das
push
dec
sarl
and
int
push
add
mov
daa
repnz
arpl
add
into
sti
xchg
das
adc
sub
jle
icebp
pop
arpl
mov
insb
jge
push
std
popf
sbb
sysenter
or
ljmp
push
clc
subb
hlt
dec
aas
jno
into
js
fcmovnbe
or
sbb
popf
imul
adc
mov
pop
lret
dec
ljmp
pop
pop
jp
push
movsl
movb
pop
add
or
sbb
mov
mov
and
jno
xchg
mov
inc
xor
shll
dec
mov
pop
fs
into
sub
lds
pop
add
adc
xlat
adc
cltd
sti
and
fiaddl
add
mov
aad
lock
mov
leave
data16
aam
pop
adc
or
jb
repz
xchg
call
jae
mov
xor
lds
ret
into
adc
sbb
in
rorl
repnz
sbb
mov
cmp
mov
popa
fnstsw
xorl
lret
repnz
dec
xlat
out
pushf
bound
addr16
jno
aaa
test
push
or
fisubrl
pop
mov
sub
outsl
adc
adc
test
test
push
das
negl
jbe
lods
cli
movsb
sbb
lea
rclb
push
push
or
das
dec
push
add
jecxz
pop
cltd
pop
mov
das
test
adc
jle
push
push
mov
jg
xor
rcrl
cmpsl
and
push
cmc
cld
fimull
imul
mov
mov
push
jg
lods
push
enter
pop
mov
mov
cld
cmp
sbb
hlt
jg
add
fisubs
adc
fcmovnb
inc
push
jne
out
cmp
call
mov
mov
xchg
pop
sub
aas
cmp
test
add
loope
pop
mov
dec
dec
pop
stos
call
loop
cmp
cmp
cltd
pop
pop
xor
and
gs
inc
repz
sub
lea
test
fists
cmp
inc
pop
pop
inc
ss
cmc
mov
mov
pop
gs
push
jno
nop
daa
dec
int
mov
push
subl
sbb
cmpsl
xchg
out
adc
aam
test
sub
aaa
nop
jl
mov
cmp
ret
dec
cmp
dec
jl
daa
pusha
cmp
pop
lahf
dec
pop
sub
push
sbb
cmpsl
mov
daa
jecxz
xor
jl
pop
ja
jg
xor
fadds
popf
loopw
mov
dec
aas
cmova
jne
lock
push
lods
inc
loop
in
sahf
mov
mov
shl
add
mov
std
das
jmp
aad
sub
cld
imul
movsb
enter
dec
shr
mov
fnstsw
pop
shl
out
cmpsb
testl
mov
adc
out
cli
pop
sarl
es
data16
repz
aaa
popf
imul
inc
arpl
xor
sub
push
push
xchg
imul
iret
and
push
xchg
pushf
sbb
pop
arpl
xor
xchg
ret
or
mov
cltd
inc
fcoml
cmpsl
xchg
cmpsl
mov
mov
mov
and
pop
jnp
pop
sbb
dec
cmpxchg
cs
mov
in
and
mov
sbb
inc
out
sub
lods
ljmp
push
mov
jnp
clc
jnp
sub
test
xor
lea
jo
inc
or
cmc
cmpsb
cmp
lods
fwait
and
jl
or
pop
scas
scas
test
jecxz
sub
clc
dec
jg
scas
pop
fldenv
dec
push
aam
pop
aam
push
jbe
push
aas
es
insl
lock
push
jmp
rdmsr
outsb
fsubrl
jo
mov
pushf
jnp
arpl
add
fsubrp
pusha
ja
adc
dec
pop
subl
mov
xorb
mov
pop
pop
test
push
rcl
fs
mov
js
xor
ret
in
out
cmp
repz
add
jns
testl
loop
lock
addr16
push
inc
cli
dec
jg
jl
lock
adcl
pop
and
decb
mov
cltd
dec
adcl
sti
lahf
ficoms
mov
ja
push
sti
xor
cmp
mov
sbb
jp
movsl
mov
inc
mov
mov
rolb
loopne
mov
pop
xchg
andb
cmp
aad
xchg
les
sahf
and
add
inc
sub
cmpsl
cwtl
sub
les
andb
push
xor
xor
jl
loopne
ret
sbb
in
sbb
stos
inc
gs
int
mov
cmp
fsubrs
xor
pop
movsl
mov
mov
xchg
jge
dec
in
les
fyl2x
ret
int3
aaa
add
xchg
dec
sub
sub
jge
lock
scas
jl
push
push
dec
test
insb
ret
adc
filds
int3
mov
lods
mov
push
jnp
addr16
nop
lock
test
sub
mov
adc
pusha
fdecstp
dec
cwtl
pop
cmpsl
dec
fsubrl
mov
outsb
mov
jp
inc
jbe
mov
popa
mov
mov
pop
mov
push
dec
mov
in
sti
jo
mov
addr16
je
lock
xor
fisubs
adc
movsb
inc
add
push
loop
fucompp
or
mov
cmp
mov
pop
aaa
pop
repz
cld
imulb
fisubrl
push
or
jmp
cmc
add
jl
ficoml
jbe
add
iret
jmp
cmpsb
and
ljmp
out
adc
imul
out
imul
arpl
std
pop
jle
cmp
or
fdivl
sbb
or
push
lret
xchg
mov
xchg
imul
shll
cmp
daa
adc
mov
xchg
shl
lods
in
add
cmp
jno
sahf
xchg
push
xor
pop
testb
dec
jae
pushf
cmp
pop
pop
fiadds
andb
and
aaa
xlat
dec
out
sub
iret
rolb
inc
add
jnp
fdivrs
and
insb
dec
pop
movsb
pop
push
lcall
sub
mov
xor
push
xor
inc
or
lret
jg
pop
inc
dec
lahf
mov
loop
mov
testl
fdivrp
hlt
adc
and
xor
fadds
mov
mov
loopne
data16
mov
sbb
ljmp
xlat
adc
mov
scas
sbb
ds
jle
sub
fidivrs
test
bound
call
int
add
sbb
mov
pop
push
mov
lock
in
mov
bound
mov
out
lods
jno
xlat
mov
add
and
mov
and
sbb
jo
movsl
imul
pop
lret
xchg
mov
pop
jnp
xchg
ret
and
aam
out
xchg
add
jmp
cmp
dec
je
pusha
push
cltd
daa
cmp
fstl
mov
add
lcall
pop
out
and
push
add
push
push
cld
shll
sbb
aam
mov
out
xor
daa
idivl
pop
das
ljmp
xor
std
jge
mov
xchg
repnz
in
add
pop
test
dec
mov
mov
rcll
lods
lret
xchg
jb
bound
adc
jbe
jle
or
out
lcall
xchg
pop
jo
dec
ja
mov
mov
and
mov
popa
mov
push
pop
clc
and
in
sti
bound
mov
test
arpl
or
loope
adc
fdiv
call
xor
mov
outsb
lahf
pusha
scas
fs
dec
insl
iret
in
cmpsl
call
subl
bound
xor
jne
ljmp
dec
xchg
and
xchg
and
ljmp
pop
loop
mov
or
mov
lret
xchg
sbb
les
dec
pop
ljmp
pop
pop
inc
pop
iret
sbb
and
jmp
arpl
xchg
fld
xchg
loopne
cmp
push
popa
fnstsw
lock
jge
xor
cld
adc
outsb
jnp
fdivrp
pop
ljmp
adc
jo
in
or
xor
cld
jbe
cmp
push
lret
inc
mov
mov
ret
push
dec
bound
cmpsb
inc
and
push
or
xor
out
mov
shll
and
fcomp
ror
dec
xlat
or
mov
inc
aas
add
dec
mov
pop
adc
mov
sbb
sbb
sub
pop
mov
in
faddl
and
mov
pop
xor
cmpsb
pusha
fldcw
cmp
stos
rep
clc
dec
mov
in
sub
sub
adc
loope
or
dec
fwait
sarb
gs
loopne
aad
in
mov
addl
jl
pop
sbb
mov
into
inc
xor
in
mov
js
push
adc
sub
jae
jae
inc
repnz
fists
leave
je
mov
adc
cmpsb
push
mulb
or
stos
in
repz
rcll
push
mov
cld
jge
sti
shlb
jl
push
sub
cli
sbb
fcmovnb
lds
leave
bound
pop
arpl
and
mov
movb
das
xlat
adc
cmpsl
mov
out
es
jns
daa
push
jae
adc
es
fisubrs
data16
rcrl
shl
hlt
fwait
rcrb
lods
aad
xchg
imulb
jmp
out
rorl
jge
data16
mov
jecxz
mov
jg
jo
sbb
jecxz
push
push
fs
push
mov
pop
mov
dec
jl
and
incl
xor
lcall
fmul
popf
lods
xchg
push
inc
cmp
lds
xor
fwait
jne
mov
jo
pusha
in
and
mov
mov
jnp
test
fwait
mov
push
ja
jmp
sbb
testl
test
repz
ret
shl
push
and
mov
xchg
jecxz
dec
imul
push
push
nop
insl
and
movsb
or
rclb
or
lcall
sbbl
jne
cmc
jae
mov
add
aas
test
jl
test
sbb
mov
fsub
and
jecxz
push
fcomi
clc
leave
adc
lock
xchg
test
add
rep
mov
lcall
adc
aaa
mov
jnp
xchg
int3
sub
jae
or
dec
stos
xor
stos
push
ljmp
pop
xchg
inc
push
mov
outsb
stos
and
jns
sbb
adc
push
cmp
sub
pop
es
iret
ja
add
inc
lret
sti
je
cld
lret
jo
add
ret
leave
mov
inc
mov
pop
lret
mov
jl
movsb
rcrb
push
loopne
mov
add
xor
or
or
mov
test
fiaddl
mov
mov
pop
clc
jo
testl
mov
push
sbb
aaa
sbb
dec
test
test
stos
mov
fstpl
imul
cmp
pop
iret
stos
fs
outsl
push
jno
cmp
mov
push
xor
popf
jl
ret
aad
test
shl
xchg
das
mov
ja
jmp
shlb
mov
je
fisttps
jle
movsl
scas
cmp
jb
push
jg
xchg
jno
into
subl
jecxz
popf
out
hlt
movsl
mov
push
inc
or
pop
sub
out
sbb
push
movsb
and
add
sub
aaa
inc
or
test
inc
mov
jnp
sub
dec
shll
pushf
jmp
out
test
jno
mov
dec
dec
sub
xor
popa
and
sbb
test
mov
aad
int
repnz
int3
push
adc
pushf
test
mov
jge
repnz
dec
push
iret
stc
out
incl
movsb
xor
icebp
sub
test
scas
scas
jle
jo
sbb
jle
stos
push
jmp
mov
movsb
loop
outsl
daa
mov
pop
pop
les
sub
adc
dec
ds
out
aas
cli
popa
sahf
mov
cmpsl
hlt
cli
mov
out
or
int
lahf
into
dec
pushf
movsb
xor
or
ljmp
std
xor
inc
loopne
push
xchg
movsl
mov
mov
and
xor
mov
xchg
and
leave
push
lahf
into
push
adc
jmp
add
outsb
inc
popf
inc
fisubl
pusha
fdivs
adc
add
xor
ss
in
fldcw
ret
jno
sub
or
adc
adcl
push
push
stos
mov
dec
movlps
jp
cmp
in
sahf
gs
or
js
stos
or
mov
and
push
test
mov
and
fwait
mov
out
cmp
mov
push
jno
movsb
sbb
adc
idivb
cmp
dec
inc
pop
data16
imul
inc
js
pop
imul
sbb
mov
loope
ja
dec
inc
cmp
jbe
adc
cmpsl
dec
and
and
negb
mov
adc
inc
fwait
inc
pop
jle
mov
sarb
mov
jl
jmp
jmp
mov
test
xchg
mov
adc
fisubrl
pop
lret
in
mov
psadbw
mov
int3
std
mov
add
sub
dec
scas
jbe
pop
push
xor
movsl
xchg
jns
cmp
insl
loop
or
shl
pop
std
fisubl
lret
mov
pop
scas
jns
pop
jne
xchg
arpl
lds
lock
dec
notl
sbb
xor
xlat
cs
push
dec
mov
mov
insl
dec
loop
mov
imul
pop
shl
rolb
mov
mov
mov
push
push
cltd
enter
sub
mov
and
xor
in
push
nop
jbe
lahf
add
aam
repnz
dec
cld
jl
xor
sbb
pop
mov
loop
sbb
jns
cmp
jecxz
jae
add
push
push
xchg
cmp
lcall
aaa
ja
lret
or
sahf
mov
iret
push
pushf
daa
cmpsb
out
push
fucomi
lea
mov
mov
mov
or
dec
sbb
pop
mov
jb
xor
movsb
mov
addr16
push
aad
push
dec
sbb
idivl
push
dec
xor
insl
xlat
mov
cmc
pop
and
pop
in
mov
clc
mov
idiv
mov
mov
sub
add
int
movsl
out
sub
outsb
fidivrs
mov
sti
ficompl
orb
mov
mov
mov
mov
insl
adcl
std
mov
roll
add
jl
jb
jmp
inc
lods
test
mov
test
les
cmp
jle
cli
insl
jecxz
lret
imul
daa
inc
mov
mov
push
or
cli
std
xchg
adcb
shll
popa
push
adc
xchg
mov
adc
sbb
mov
aaa
xchg
cmc
jb
mov
push
push
lret
xchg
pop
mov
or
jmp
and
cmp
mov
xchg
lahf
test
dec
xor
cmp
adc
sub
ja
in
fsubs
cwtl
add
pushf
cmp
pop
xchg
pop
int3
cmp
hlt
lret
outsb
sub
dec
lods
fcompl
inc
ljmp
dec
in
movsb
dec
cmp
cld
lods
scas
sbbb
in
cld
adc
lea
xor
adcb
pmulhuw
jp
dec
pop
lret
cs
mov
lds
cmc
fistps
stos
shll
in
cwtl
pusha
and
test
dec
ljmp
xor
stc
test
jbe
cmpsb
inc
inc
xor
call
loope
inc
jp
mov
mov
ljmp
mov
out
sbb
xchg
aas
fdivrl
pop
push
xorl
movsl
rcr
cltd
and
icebp
mov
andb
xchg
call
movsb
pop
dec
dec
mov
out
movl
stc
mov
imul
pop
dec
out
cltd
jle
pop
lahf
dec
dec
sahf
sub
shl
dec
cs
loope
sbb
data16
and
add
scas
jp
sbb
fdiv
lea
jecxz
add
xchg
gs
push
xor
mov
insl
cwtl
lods
pop
jl
fsubr
arpl
movsl
mov
mov
cli
lret
sahf
out
scas
adc
insb
mov
ja
dec
pop
aad
out
insb
xor
iret
pop
hlt
and
xor
shrl
out
mov
aas
pop
mov
insl
cli
sub
arpl
cltd
repnz
jb
push
in
lods
push
add
mov
dec
sbb
pop
or
mov
jae
aaa
jae
shlb
lret
in
mov
enter
jge
rolb
xchg
test
fisubrs
outsl
pop
fisubs
xor
ret
out
mov
dec
idivl
push
sbb
fbld
shll
mov
int3
sub
cmp
lahf
lods
addr16
negl
inc
dec
xchg
jle
sbb
pop
incb
mov
sbbb
clc
xor
jo
push
into
mov
xor
dec
pop
cmpb
out
scas
dec
jle
jg
out
adc
shl
pop
jp
xor
add
outsl
loop
mov
cmp
outsb
je
rclb
adc
cmp
js
pop
inc
fsubl
sub
pop
pop
dec
cmpsb
and
pop
adc
decl
fstpl
test
xchg
mov
or
cmpsb
push
hlt
inc
push
test
sub
in
out
stos
pop
mov
cmp
inc
int
cmp
xor
and
pop
push
and
push
or
and
dec
push
jle
ss
mov
xchg
push
inc
pop
loop
cs
xor
adc
xchg
cmp
test
test
add
xor
push
push
add
dec
js
dec
add
rorb
adc
or
in
lahf
imul
xchg
mov
xchg
outsl
movsb
or
jg
cmp
push
lcall
lock
outsl
inc
add
cmp
repnz
lret
lret
and
mov
outsl
sbb
sbb
and
jb
imul
dec
dec
pop
adcb
xor
inc
loop
insl
pop
xor
dec
out
cltd
test
cmp
sbb
out
jns
subl
scas
mov
mov
repz
scas
fsubl
mov
jb
dec
mov
dec
xor
popa
mov
stos
loopne
into
mov
fs
or
pop
xchg
sub
mov
pop
bndldx
rolb
mov
rclb
jge
mov
lcall
or
mov
cmc
mov
das
test
sbb
mov
insl
out
mov
mov
inc
scas
data16
jle
add
push
int3
test
push
pop
loop
andb
mov
sbb
sbb
cs
mov
out
push
push
mov
fiadds
ficoml
xacquire
bound
cmpb
pop
repz
or
in
inc
xchg
movsb
les
daa
clc
daa
adc
mov
adc
cs
jno
mov
cmp
push
lods
icebp
cmc
pop
pop
xchg
adc
roll
les
cltd
or
je
int
daa
xor
mov
mov
daa
aaa
and
insb
pop
rcr
or
xchg
mov
into
mov
mov
push
hlt
mov
pop
push
dec
push
or
cld
xchg
int
aam
je
mov
in
jge
mov
and
mov
cmp
in
sbb
bound
sarl
movsb
imul
xchg
xchg
cwtl
fldt
jmp
xor
outsl
jbe
and
clc
loope
xchg
std
fmull
and
pusha
fdivp
stos
les
inc
cmc
dec
inc
shrl
jmp
dec
mov
data16
sbb
dec
je
dec
fs
xor
jne
insb
data16
dec
xchg
sub
clc
mov
mov
mov
jae
xlat
inc
cli
out
insb
in
rolb
mov
rcr
mov
and
sbb
pop
push
repz
add
mov
in
aas
sub
pop
xor
jb
sub
mov
loope
mov
ja
dec
shlb
fwait
sub
call
loope
aaa
out
push
add
mov
xchg
push
pop
int
mov
lock
push
jp
enter
daa
loope
xchg
or
push
test
cmp
xchg
test
leave
fwait
or
insl
cmp
mov
sub
sbb
xchg
pusha
cmp
lods
jge
jg
push
repnz
mov
mov
cmpsb
movsl
mov
pop
loopne
inc
mov
loope
inc
int
cmp
sub
rorl
lock
xchg
jp
mov
adc
inc
dec
loop
into
inc
gs
push
jecxz
xchg
xchg
mov
sub
mov
jl
or
cli
xchg
fmuls
outsl
pop
ret
xchg
jo
test
inc
in
dec
xlat
testb
sbb
dec
dec
int
dec
jmp
jp
cmpsb
push
jb
inc
jno
cmp
mov
pop
push
push
add
cmc
xchg
movsl
mov
xchg
lret
test
dec
rclb
jns
sub
fs
jae
sbb
add
sub
mov
imul
sti
add
fistpl
inc
sub
test
or
lret
mov
fsts
jmp
leave
in
imul
pop
push
xor
aaa
mov
out
add
cmp
outsl
add
push
cltd
mov
clc
imul
xchg
cmp
fdivl
jo
mov
mov
in
inc
dec
mov
jne
loop
stos
pop
mov
aad
int3
mov
aas
lea
jmp
sbb
das
adc
dec
movsl
xchg
push
int
aaa
shrl
pop
xchg
hlt
nop
cltd
push
out
daa
les
sbb
cmpsl
or
push
das
adc
repnz
mov
push
xor
adc
addl
aam
out
rcrl
lods
dec
mov
loopne
fwait
jg
cmp
adc
or
fists
mov
push
ret
dec
pop
imul
inc
clc
test
test
xor
pop
sub
stos
daa
jnp
aas
pop
ret
lods
sbb
into
pop
shrl
insb
jecxz
inc
shrb
ljmp
push
sbb
push
push
iret
push
pop
mov
nopl
push
xchg
sub
cld
shlb
fldl
mov
push
jb
push
fs
sbb
and
inc
push
and
pop
jp
adc
repz
and
out
incl
fs
or
icebp
enter
pop
shl
xor
jp
mov
and
lods
shr
or
mov
dec
rcll
adc
daa
cmp
sti
fidivs
and
sub
mov
loope
mov
test
ret
mov
fisubl
add
or
mov
fxtract
xchg
or
gs
iret
push
add
xchg
mov
fists
insl
mov
mov
enter
sbb
dec
push
push
ficoms
je
mov
pop
sahf
mov
lods
sbb
or
fbld
scas
xor
repnz
xor
mov
test
sub
cmp
je
cmc
mov
sbb
and
and
push
or
xchg
adc
pop
outsb
xor
xor
dec
enter
sbb
xchg
pop
aaa
imul
pop
add
idivb
xor
insb
mov
or
pushf
nop
mov
cmp
mov
jmp
lea
cmp
xchg
pop
lods
arpl
scas
pxor
mov
enter
xor
jge
fimuls
mov
cmc
and
push
les
dec
add
leave
mov
ret
fstpt
jbe
ret
pop
mov
cmpsl
movsl
cmc
mov
push
jmp
pop
outsl
fwait
push
dec
mov
xchg
out
cli
out
out
subb
add
sbb
rclb
mov
dec
cmpsb
mov
xchg
dec
or
in
jae
loop
ljmp
cmp
and
push
mov
int3
cli
mov
rclb
push
das
jecxz
jl
mov
data16
and
mov
scas
xor
imul
mov
pop
mov
pop
mov
sbb
pushf
shr
pop
arpl
mov
fnsave
mov
pop
es
inc
scas
inc
repnz
pushf
pop
and
mov
icebp
mov
mov
cmpsl
push
sub
pop
sbb
arpl
insb
pop
xchg
cmp
add
cmp
mov
dec
inc
xchg
inc
push
or
jmp
lea
push
xchg
pop
scas
xchg
fs
pop
cmp
add
push
ret
inc
stos
int3
xchg
inc
push
push
inc
shrl
push
jo
push
clc
cwtl
dec
sbb
mov
fisubrl
mov
sub
inc
repz
mov
stos
lret
add
dec
sub
out
lock
pop
scas
fisubs
cmp
mov
mov
out
repz
sub
mov
or
mov
mov
shr
mov
rcr
xchg
xor
and
xchg
out
in
pushw
sbb
xchg
lahf
add
mov
and
xchg
jbe
or
in
jns,pn
rcl
ret
dec
cmc
fcom
jp
push
stc
out
into
or
loop
in
mov
pop
pop
repnz
jecxz
sbb
sbbl
jns
mov
addl
cmpsl
mov
sub
les
roll
pop
sub
mov
or
iret
mov
pop
out
jno
jl
sub
movsw
dec
aam
cmp
cli
cli
jne
jle
mov
popf
bound
call
daa
mov
or
xchg
and
and
repz
inc
and
mov
cs
sbb
int3
cmp
mov
jbe
or
out
js
movsl
cmp
cmp
aas
shlb
or
adc
cmp
jb
cmp
push
ss
push
ficoms
push
sar
or
test
bound
inc
dec
outsl
sbb
cld
inc
sbb
jp
sbb
std
mov
pushl
nop
test
inc
movsb
leave
sub
push
int
popa
cmp
push
call
jmp
ljmp
scas
xchg
inc
outsb
mov
mov
mov
inc
repnz
sbb
addl
es
lcall
in
push
insl
lretw
cwtl
sub
adc
push
test
or
xchg
lds
inc
cmp
pop
pushw
scas
ret
fsubr
adcb
shr
lret
pushf
pop
leave
test
mov
xchg
imul
mov
scas
jp
xchg
jbe
jl
leave
leave
xlat
xor
jnp
inc
lods
sub
mov
stos
push
pusha
in
loope
dec
mov
pop
cmp
or
sbb
jnp
jmp
push
mull
jnp
daa
ss
push
lods
cmp
fldcw
mull
repz
pop
cmp
out
out
in
mov
in
bound
dec
sti
sar
popl
jae
ret
cltd
dec
cld
mov
gs
xchg
push
push
and
fsubrs
fistps
leave
or
pop
mov
sub
push
shrl
mov
and
cmp
mov
pop
cmp
outsl
jge
inc
jl
adc
movsl
outsb
jge
cli
fwait
pop
push
outsl
push
inc
add
test
sub
pop
imul
fs
xchg
xor
insb
adc
outsl
xchg
and
aad
jne
daa
repz
mov
leave
movsl
mov
sbb
out
outsl
stos
push
mov
dec
movsl
jg
push
push
loop
inc
adc
mulb
mov
dec
loop
inc
pop
test
data16
movsb
test
or
leave
add
adc
in
cmp
lods
xchg
popf
sbb
mov
mov
cmp
aad
mov
mov
sbb
out
mov
pop
rorb
lods
movsl
inc
jnp
jl
ds
les
mov
cmpsl
nop
sub
jne
sub
shll
fs
addl
es
addl
jmp
push
mov
stc
int3
je
mov
xor
aaa
sub
daa
adc
stos
repz
xor
inc
outsb
pop
ja
sub
test
ja
push
pop
xchg
mov
cwtl
push
and
mov
test
sahf
mov
inc
push
push
sar
and
in
nop
jmp
mov
lret
mov
rcrl
std
out
lcall
jae
push
iret
xor
add
aad
test
fnstsw
sub
adcl
mov
xchg
sub
inc
jmp
sbb
mov
jbe
fldl
jne
nop
push
ds
mov
testl
push
les
stos
cltd
dec
dec
lods
ss
dec
inc
and
lea
sti
jne
ljmp
aas
jmp
dec
sub
rorb
mov
lahf
mov
sbb
mov
jb
adc
mov
sub
push
lret
mov
push
sbb
fisubrl
ficoms
lea
and
xlat
sti
arpl
outsb
cmc
mov
bound
jae
shl
xorl
xchg
sbb
lock
xor
sub
fwait
sub
add
aad
stos
mov
fiaddl
lahf
xchg
push
test
insl
xor
popf
mov
jp
dec
stos
iret
inc
push
cmp
out
loope
push
icebp
mov
xor
xor
push
pop
cmpsb
mov
mov
lea
cs
bnd
mov
mov
sub
fscale
add
push
test
xchg
mov
je
cli
xchg
or
dec
je
pushf
push
loop
scas
clc
adc
dec
mov
je
pop
xor
ds
stos
pop
je
adc
jo
push
sbbl
pushw
dec
enter
pop
or
xchg
adc
comiss
sub
jmp
mov
cmp
xchg
push
hlt
js
pop
pop
imul
xor
jp
cmc
mov
sub
stos
lods
ret
mov
push
xor
mov
pop
adc
sbb
cmc
or
test
sahf
mov
pop
jo
cmp
mov
jnp
mov
push
lock
sbbl
lcall
jbe
iret
push
dec
lock
mov
sbb
ja
mov
cmp
push
icebp
das
push
xchg
movsl
adc
sub
pop
in
jmp
ja
je
cwtl
int3
cmpl
ret
mov
jg
push
xchg
mov
dec
cmc
enter
xor
in
xchg
pop
shr
lock
popa
add
cli
lods
test
or
adc
cmp
or
popa
push
pusha
andl
mov
mov
icebp
cwtl
fs
push
cwtl
ds
xchg
cmp
clc
xor
mov
jae
fists
jl
sbb
ret
jnp
push
mov
cwtl
test
leave
push
lds
fisubrl
fidivrl
jg
imul
insb
adc
xchg
mov
fwait
bound
shll
ror
mov
push
pop
pop
cmp
test
or
inc
fsubrl
xor
xor
leave
scas
fwait
adc
push
xchg
sbb
outsb
cmp
cmp
movsl
or
stos
ret
sub
ljmp
lods
sbb
imul
enter
jmp
and
popa
je
mov
pop
mov
daa
dec
pop
cld
and
in
in
push
insl
pushf
pop
mov
stos
add
call
pop
xor
nop
xor
xchg
rcrb
jg
jl
mov
outsl
fwait
mov
pop
in
and
add
ret
repnz
dec
inc
adc
shrl
pop
jno
popf
roll
jg
pop
add
and
sarl
das
sbb
out
jb
cmp
outsb
and
dec
push
daa
rorb
cmp
jnp
shrb
popf
out
leave
stos
xchg
mov
std
testl
jg
adc
adc
arpl
loop
mov
fwait
jp
dec
add
push
test
jmp
mov
sbb
push
xchg
cltd
mov
jns
jne
je
call
cwtl
jge
inc
jno
mov
add
int
xchg
out
popf
adc
inc
int
lods
xchg
stc
mov
orl
out
jp
mov
outsl
xlat
insl
insl
sub
jecxz
mov
mov
inc
popa
mov
fsubl
dec
shl
push
cmpsb
repnz
xlat
gs
enter
jmp
sub
inc
out
adc
nop
and
js
sbb
rorb
or
dec
fld
test
or
test
pusha
or
fwait
mov
stos
adc
push
ror
xor
insl
divl
movsl
popf
push
cs
push
lret
or
sbb
dec
fldl
jmp
test
mov
dec
mov
inc
fs
and
leave
std
scas
xchg
jecxz
fwait
jnp
stc
xchg
mov
xchg
or
add
mov
push
arpl
adc
les
xor
sub
scas
imul
stos
add
mov
bound
test
clc
cmpsl
push
add
ds
or
sbb
xor
dec
aam
and
mov
loopne
pop
movsl
mov
jae
aas
sbb
mov
mov
mov
xchg
lock
popf
xorl
es
push
addr16
jb
mov
arpl
jnp
aad
jmp
xor
jp
icebp
mov
je
pop
sub
aad
xchg
push
je
mov
call
pop
cmp
or
pop
xor
idiv
repz
sti
xor
jae
adc
sbb
out
xchg
add
out
cs
repz
ljmp
push
shll
jb
sub
mov
mov
pushl
sbb
mov
mov
jg
jo
dec
and
mov
jno
ret
loopne
lock
lods
in
xchg
lock
into
in
daa
loopne
leave
outsl
dec
inc
lea
mov
sti
pop
jle
xchg
mov
pop
jmp
jnp
mov
not
frstor
and
in
mov
lret
and
sbb
sbb
xchg
jno
jmp
inc
mov
cwtl
jno
aas
int
sarl
lret
jecxz
dec
push
rcll
cmpsb
fs
popa
lret
xchg
xor
dec
loop
ds
jge
insb
fistpl
jmp
lds
test
inc
aaa
mov
popa
fnstcw
jge
sbbl
cmp
inc
push
call
mov
cmpsb
and
and
call
mov
in
dec
sti
adc
mov
mov
rcrl
std
mov
ret
int3
cmp
cmp
adc
loopne
fiaddl
sarb
inc
pop
andl
xchg
fists
shrl
cmp
subl
je
sbb
pop
mov
jle
jg
inc
dec
add
pop
fcmovnb
in
pop
jl
pop
xchg
ss
out
pop
sub
repnz
jl
sahf
pop
inc
cld
mov
jl
bound
jecxz
out
int3
sub
or
mov
imul
cli
out
repz
sub
add
int3
cmp
inc
test
out
inc
inc
lret
pop
or
push
sub
pop
dec
flds
daa
dec
xchg
dec
rcll
adc
lahf
lock
and
xchg
inc
or
add
mov
popf
xchg
sub
addr16
inc
dec
outsl
mov
mov
mov
test
mov
push
push
mov
out
inc
push
mov
mov
test
test
mov
fisubl
aaa
mov
push
mov
xor
or
push
adc
sbb
ds
lahf
sti
mov
pop
loopne
mov
cmp
out
push
push
mov
popf
mov
inc
or
xchg
pop
mov
push
mov
push
xor
dec
adc
outsb
jmp
test
sbb
cmpsl
daa
in
dec
cmp
mov
jg
ret
loope
pop
adc
jmp
lea
cs
mov
mov
or
arpl
sbb
xor
push
test
mov
or
in
sbb
adc
adc
int3
ret
and
pusha
and
int
je
pop
pushf
xchg
aas
inc
jmp
jge
mov
cld
and
push
mov
xchg
xor
inc
cwtl
insb
mov
ds
imul
mov
test
inc
or
sahf
fwait
lock
sbb
dec
dec
aas
mov
into
or
out
cmpsb
cld
mov
shld
sbb
add
xor
test
add
fwait
inc
xchg
xor
mov
jo
mov
pop
pop
dec
cld
in
mov
cmp
cmpsb
mov
mov
sub
or
lds
push
gs
arpl
pop
scas
pop
testl
mov
jo
repz
pop
cmp
subl
mov
dec
adc
fsub
mov
mov
ds
insb
lods
test
sub
and
xchg
stos
xchg
rorb
mull
ret
and
jmp
pop
aad
xchg
pop
sarb
lret
add
pop
jmp
sarl
ja
mov
jmp
or
jge
mov
cmpl
or
ja
xchg
test
shll
sub
add
in
pushf
inc
adc
dec
fisttpll
dec
jge
negb
mov
or
stc
int
pop
and
jb
lods
es
cmp
cmp
and
imul
loope
das
ret
sbb
add
bound
sbb
and
outsb
inc
mov
loop
int3
jbe
sarb
inc
push
out
add
and
push
sbb
addr16
xchg
fisttpll
lods
cmp
sbb
xchg
mov
adc
and
scas
ss
lret
dec
mov
std
out
pop
ror
nop
sub
inc
mov
stc
dec
rorb
add
js
cld
les
addr16
clc
pop
xchg
call
mov
or
scas
cli
and
jo
sub
jg
push
scas
xor
fldl
cwtl
xchg
daa
fucomi
mov
dec
notb
dec
test
aad
pop
divl
adc
flds
xchg
jecxz
xchg
pop
out
adc
adc
scas
repz
push
inc
nop
inc
xchg
sub
sqrtps
jp
cs
and
jo
mov
sub
xor
es
mov
insl
das
cmpsl
mov
ret
add
les
inc
mov
test
pop
repz
cmpsb
pop
fwait
mov
in
mov
mov
or
fistpll
cwtl
fnsave
fstl
rcrb
popf
loopne
push
loopne
insl
xchg
repnz
xor
jnp
push
repz
jb
stc
add
sbb
sti
inc
mov
pop
and
xor
int
cmp
nop
mov
jp
sbb
push
loopne
or
dec
sub
and
xchg
mov
cmpsb
push
sub
int
int
cmc
push
sub
jmp
xchg
mov
mov
fsubrs
aaa
std
iret
je
or
inc
mov
sbb
je
mov
push
or
cmp
out
or
or
and
addr16
dec
jns
call
xlat
inc
lcall
arpl
push
flds
jnp
rcl
push
mov
dec
adc
pop
imul
xorl
adc
or
jg
xchg
inc
aaa
leave
xchg
popf
push
loopne
or
repz
outsl
ja
nop
pop
dec
sub
lret
or
or
cmp
mov
push
and
mov
or
imul
sub
jmp
out
sub
jmp
ret
jb
adc
lret
mov
test
sahf
jae
fstl
popf
cmp
cltd
xchg
js
cmp
mov
sbbb
mov
das
rcll
inc
sub
sbb
fcompl
mov
adc
stos
dec
and
add
pop
divb
cli
sbb
movsb
dec
aad
adc
icebp
stmxcsr
dec
lahf
neg
sbb
stc
ss
imul
mov
stc
ljmp
repz
mov
shll
xchg
mov
mov
jecxz
neg
scas
or
pop
jp
and
xor
pop
mov
repz
push
nop
aad
or
lods
das
mov
push
xor
mov
pop
add
aas
and
cmpsl
dec
insl
push
cs
adc
imul
inc
add
push
icebp
fdiv
and
cwtl
jo
imul
and
fmul
stos
mov
and
xchg
clc
mov
adcl
sbb
push
sub
arpl
fcoml
fcoml
sbb
fsubl
xchg
jae
movsb
push
into
and
rclb
ds
sahf
push
inc
imul
cmp
mov
test
jmp
and
mov
cli
sub
addr16
idivl
lds
lcall
stc
lods
inc
pop
pop
into
mov
out
sbb
mov
mov
icebp
mov
ror
cmp
and
cwtl
mov
mov
xor
scas
pop
in
pop
xchg
negb
dec
dec
jle
xchg
arpl
sub
add
sti
sbb
push
pop
sbb
pop
inc
and
mov
imul
or
rcrb
jmp
xchg
mov
out
push
mov
lds
ss
mov
mov
call
jl
xchg
and
test
shll
scas
mov
dec
movsb
push
in
icebp
inc
mov
jae
aas
rcrl
pop
ss
mov
stos
stc
adc
add
dec
fdivrs
pushf
out
dec
push
cwtl
xlat
int3
add
cmp
nop
sbb
adc
xor
std
push
out
mov
iret
clc
enter
jae
pop
lret
push
shl
inc
jg
pop
in
mov
adc
pop
jle
int3
cmp
jg
add
in
scas
out
les
pop
out
repz
mov
mov
sti
cmpl
test
sub
mov
sub
cmp
dec
jg
je
xchg
cmpsb
push
xchg
push
dec
push
pop
xchg
push
imul
mov
mov
int3
and
out
jno
sbb
and
out
xchg
imul
div
sbb
push
addr16
xchg
jge
sub
sub
xlat
push
fs
dec
fwait
pop
xchg
loope
pop
out
inc
adc
xchg
ss
jbe
fisubs
xchg
and
into
bound
mov
packssdw
orb
mov
fs
int
add
or
or
xchg
sbb
into
in
dec
loope
push
mov
jb
popa
dec
mov
pop
popf
ret
jno
sub
call
pop
shll
mov
dec
dec
inc
jmp
negb
fisttpl
cmpsb
sbb
and
jmp
sbb
test
aam
and
inc
and
div
jecxz
lea
mov
shl
jmp
icebp
insl
xor
cmp
aad
cmpsb
inc
daa
fidivrl
xchg
aam
xchg
dec
das
fldenv
sahf
rorl
jb
mov
lods
test
insb
and
jo
adc
sub
cld
adc
xchg
or
or
sbb
arpl
aad
dec
push
sahf
sub
dec
push
iret
mov
jge
ret
jge
pop
cmpsl
aas
sbb
dec
xor
rep
inc
xchg
aam
jne,pn
out
adc
and
dec
jne
mov
ret
outsb
repnz
jg
mov
mov
call
pop
mov
mov
es
nop
mov
push
popf
push
push
xchg
cmp
sti
testl
add
ja
lret
adc
leave
cmpsb
pop
cmp
mov
mov
daa
outsl
and
inc
sarl
cmpl
cmp
pop
jge
mov
out
loopne
jnp
ljmp
cmp
sbb
repnz
mov
ficompl
ss
push
xor
cmpsb
nop
pop
push
fisttpll
mov
gs
adc
sub
arpl
mov
inc
xor
push
repnz
aam
mov
jecxz
testb
jbe
loop
aam
adc
ds
mov
stc
pop
shr
repz
cld
es
data16
push
pop
daa
adc
daa
out
adc
ret
mov
jnp
xorb
cltd
add
lock
xor
es
add
jl
lds
mov
insb
sti
lcall
sbb
sti
xor
mov
inc
out
jmp
mov
inc
cld
lret
xor
inc
adc
loop
aas
inc
cltd
sub
jne
sbb
clc
add
xchg
cmc
daa
jg
and
mov
call
ficoml
neg
pop
int3
test
in
in
add
sbb
psubusw
sbb
outsl
stc
push
mov
hlt
cmpsl
cmp
xlat
fs
popf
mov
push
test
adc
inc
cwtl
in
mov
dec
popa
sbb
test
in
xor
add
cmp
jbe
xor
sub
in
mov
add
daa
outsl
idivb
push
ljmp
jg
dec
sbb
clc
mov
inc
fimull
inc
int3
sbb
ss
and
jp
lcall
lcall
dec
xchg
lahf
inc
mov
mov
pop
and
repz
das
push
fs
cmp
sti
jne
ja
cmp
fnstenv
lcall
xor
inc
mov
sbb
lcall
push
sub
stos
dec
or
dec
mov
xchg
pop
pop
mov
pop
or
push
dec
clc
jmp
add
ret
add
test
dec
pop
push
es
mov
cmc
andb
adc
mov
lret
sub
pop
cli
dec
add
in
xor
mov
icebp
pop
push
push
adc
lret
fnstcw
push
ss
jne
xor
sub
cs
je
ret
rcrl
or
xor
shll
jge
mov
mov
rol
out
arpl
shlb
in
pop
clc
and
lret
das
pop
test
ficomps
out
jecxz
lahf
loope
mov
pop
add
icebp
add
xchg
jae
dec
xchg
push
jne
push
int3
pop
xor
mov
shll
pusha
adc
inc
mov
mov
mov
fstpt
push
imul
loop
ret
popa
adc
and
lret
movsl
hlt
inc
or
sahf
fmuls
lods
in
daa
sar
push
xchg
in
jnp
mov
and
xchg
stos
test
pop
pop
adc
mov
sub
lahf
fidivrl
cmc
mov
pop
in
xchg
push
outsl
std
adc
scas
insl
stos
sbbl
sub
xchg
push
nop
ja
mov
and
mov
addb
popf
push
pop
push
arpl
pop
lret
das
cli
jns
cltd
or
cmp
mov
sbb
dec
test
iret
xor
mov
ret
add
shrl
pop
push
and
mov
sub
sub
push
hlt
scas
adc
add
aad
rclb
cmp
lret
movsb
movsb
xchg
mov
push
inc
or
in
inc
cmpb
aaa
jecxz
add
out
das
xchg
outsb
jne
stc
push
dec
sub
rcrb
adc
mov
pop
push
in
pop
pop
jg
sbb
andl
dec
xorl
aas
sar
ss
dec
sub
outsl
ljmp
cli
jb
sbb
test
xchg
jb
pop
xor
lods
flds
jbe
lahf
xor
mov
xor
ret
mov
pop
inc
scas
xchg
adcl
mov
sti
repz
cmp
clc
imul
arpl
sbb
xchg
ds
test
mov
pop
xchg
sbb
addr16
ljmp
add
sahf
mov
insb
cmpsb
cmovge
mov
adc
mov
sub
and
inc
aaa
imul
scas
icebp
int
out
pop
rol
hlt
sti
mov
int
mov
ljmp
enter
pushf
add
cmp
bound
cmpps
pop
mov
push
adc
mov
ds
mov
jp
sub
jo
std
outsl
and
into
and
lea
andb
jmp
lods
insl
test
fimuls
sub
dec
mov
int
inc
xor
xchg
sub
mov
popf
stos
or
xchg
aam
jnp
mov
icebp
pop
lcall
hlt
mov
and
mov
jg
clc
ds
jnp
andb
or
stc
out
lock
mov
pop
or
ficoms
xchg
les
outsb
xor
adc
pop
xchg
scas
into
push
loopne
dec
or
add
mov
pop
hlt
lret
out
cmp
mov
dec
ja
xor
cmp
std
xor
mov
mov
lock
shlb
and
mov
and
imul
xlat
lret
push
push
mov
andb
push
sti
and
jae
popa
push
int
jp
pop
cmc
cmp
adc
push
call
mov
push
push
xchg
sbb
mov
ss
sarl
sti
and
mov
daa
mov
jle
mov
dec
push
aam
es
push
mov
jmp
inc
push
lcall
sbb
adc
insb
lock
adc
mov
mov
adc
in
mov
jg
aaa
inc
fstpt
insb
or
mov
aam
push
pop
mov
aad
cld
jae
xchg
sub
rcl
push
mov
mov
jecxz
imul
sub
dec
scas
mov
inc
pop
hlt
xchg
fwait
cwtl
pop
stc
aad
xchg
push
aad
ret
fisttpl
enter
test
pop
push
or
mov
add
cmc
int3
and
jmp
movsb
mov
dec
pop
out
sub
and
and
dec
scas
inc
dec
xor
or
xchg
bound
cmp
call
dec
ficoml
fldcw
out
lods
mov
test
outsl
subl
or
push
fidivrl
jbe
adc
dec
clc
push
incb
mov
sbbl
dec
cmp
out
mov
and
aaa
cmp
jb
iret
jl
pop
icebp
aas
push
push
gs
cmc
pusha
cmp
inc
mov
out
into
sarb
cmp
test
fstpl
sub
sbb
inc
enter
jp
sbb
nop
mov
push
mov
cmp
test
xchg
jmp
mov
jge
mov
sub
sub
in
mov
call
pusha
push
adc
inc
xor
cmpsl
jnp
and
xchg
and
and
dec
mov
or
pop
pop
push
into
inc
cmpsl
lea
fisttps
loopne
push
xor
jbe
inc
mov
push
repz
fistps
int
xchg
jecxz
out
add
dec
add
loopne
cmp
loopne
xchg
iret
outsb
sub
cmp
mov
arpl
fdiv
outsb
faddp
ret
mov
add
fldenv
mov
xor
std
ss
cmp
xor
inc
xor
push
xlat
js
jnp
mov
or
inc
inc
push
or
inc
mov
xchg
ja
aam
cltd
pusha
out
mov
fwait
add
and
add
out
dec
fsqrt
test
hlt
out
out
pop
mov
lcall
sbb
jmp
cmp
push
mov
loop
mov
scas
aad
subb
dec
xchg
leave
push
or
xchg
pop
xchg
push
sahf
aam
lods
pop
and
push
int3
mov
mov
dec
ficompl
mov
loop
jae
jmp
addr16
inc
pop
or
insb
outsl
insl
lea
ret
push
pop
push
lret
enter
repnz
andl
jl
aas
mov
stos
gs
pop
lock
daa
enter
paddq
mov
mov
xchg
xor
push
cmp
notb
jge
push
and
adc
mov
inc
repz
sbb
sub
fidivs
fisttpl
push
out
decb
stc
mov
out
out
cmp
lods
insl
hlt
mov
add
daa
es
test
es
pushf
dec
inc
push
in
pushf
repz
insb
stos
mov
sbb
cmpsl
adc
xchg
mov
sbb
inc
push
out
sbbl
loope
mov
inc
mov
leave
jo
and
in
cmp
pop
dec
shr
mov
cmc
clc
out
and
jbe
fisttps
pop
leave
cmp
inc
or
xlat
xchg
mov
test
rcrb
pop
loopne
or
in
leave
mov
pop
dec
rcrb
out
and
ss
xlat
mov
and
fwait
push
and
daa
sbb
xchg
xchg
push
or
fsubs
push
hlt
rcl
push
movsl
sub
adc
push
push
push
pop
fldl
cwtl
test
scas
test
xchg
imul
icebp
imul
push
dec
mov
mov
fisubs
mov
push
adc
ret
mov
add
lret
push
sbb
add
pop
mov
sbb
dec
cli
outsl
adc
in
dec
xor
iret
xchg
cmp
pop
or
sbb
cli
inc
jb
pusha
pop
rorb
mov
orb
adc
addr16
mov
mov
push
idivb
mov
pop
sahf
push
dec
dec
aas
cmp
jmp
mov
lea
sub
add
in
mov
scas
pop
fsubl
push
xlat
cmp
push
or
loope
mov
and
dec
sub
mov
outsb
jns
mov
call
ret
stc
sbb
cwtl
cltd
out
shrl
xor
jmp
nop
mov
mov
int
outsb
cmpsb
test
pop
cltd
inc
or
cmp
mov
add
mov
mov
inc
jecxz
loope
fdivl
loop
gs
xchg
ljmp
pop
or
mov
push
mov
stos
fwait
dec
pop
push
and
mov
jle
cli
mov
imul
clc
and
call
cli
mov
lds
lret
outsl
and
or
data16
sub
rol
inc
pushf
filds
pop
or
jmp
jg
call
and
xor
lds
arpl
dec
in
xchg
jmp
adc
fdiv
or
dec
pop
jp
daa
stc
daa
pop
arpl
frstor
adc
and
stc
cltd
xchg
mov
sub
repnz
push
clc
jno
lcall
add
into
cmp
mov
inc
loope
xchg
xor
lret
jmp
xchg
ds
inc
push
lahf
int
add
add
insl
adc
or
mov
jle
dec
adc
stos
cs
sub
mov
out
mov
lret
jns
jns
gs
push
or
imul
seta
loope
mov
or
sbb
sbb
cld
scas
mov
into
das
dec
mov
out
das
cmpsb
ret
aas
popf
mov
xor
test
and
adc
mov
mov
jecxz
mulb
in
mov
jbe
lret
fistl
repnz
mov
lcall
decb
in
mov
xchg
cmc
ret
sub
stos
mov
lods
sbb
lahf
cli
cwtl
iret
in
mov
xor
jg
inc
inc
sti
sub
cmp
mov
pushfw
adc
cmp
js
and
add
sbb
fcomp
inc
out
repz
xor
bound
mov
xchg
test
aaa
sub
mov
inc
cwtl
insl
pop
int
inc
sub
sbb
jnp
pushf
lret
ss
in
jge
xor
sbb
insb
pusha
sub
xchg
push
ja
or
lea
sbb
ret
scas
dec
cwtl
in
pop
in
mov
cmp
outsb
jns
call
and
insb
jp
ror
addb
inc
push
cmp
lods
sahf
pop
arpl
or
xor
inc
imul
cltd
sti
mov
sub
mov
mov
lret
mov
dec
out
dec
addr16
mov
mov
and
pop
xchg
dec
jnp
sbb
xchg
aas
mov
xchg
sbb
inc
inc
sbb
in
add
inc
sub
arpl
aaa
decl
mov
mov
inc
inc
and
mov
adc
push
test
pushf
js
test
addr16
in
jb
popa
push
fbld
or
fists
mov
lods
lock
push
fbld
movhps
mov
iret
les
xchg
daa
popa
repz
push
dec
in
lret
ja
jbe
mov
mov
bswap
dec
mov
mov
and
cmpsl
sbb
sub
jecxz
icebp
sbb
int3
mov
inc
pushf
popa
xor
call
pop
pop
js
insl
pop
mov
int
jecxz
out
test
and
retw
test
cmp
ret
jb
ficomps
sbb
or
je
incl
fwait
lods
add
push
adc
int3
dec
mov
and
cli
icebp
adc
rol
inc
mov
in
pop
test
xor
pusha
jb
adc
xchg
popa
push
and
push
xorl
dec
in
pusha
sub
shrl
cwtl
inc
out
int
sbb
jo
fwait
arpl
push
xlat
xchg
or
test
xchg
int
sub
out
sub
jbe
lea
inc
mov
add
arpl
mov
cmp
push
insl
fldl
cmp
testl
leave
mov
inc
shll
stos
scas
sub
enter
js
push
pop
sbb
mov
xor
mov
in
prefetch
push
lds
jnp
out
test
sub
fstps
stos
fistps
movsl
inc
push
xchg
dec
push
xlat
lcall
mov
mov
jo
dec
dec
sbb
das
cmc
imul
pop
mov
outsl
ret
out
inc
fdivrs
gs
push
ret
adc
mov
jp
add
push
dec
loope
sub
gs
inc
dec
hlt
xor
faddl
push
loop
jge
pop
xchg
mov
push
stos
ljmp
rcrl
stos
jmp
cs
jecxz
mov
lcall
call
jl
aas
outsb
sub
movsl
push
inc
ret
je
jo
jl
rorb
daa
int3
pop
std
add
mov
adc
pop
mov
pop
shrb
repz
int3
jno
jmp
xchg
pop
icebp
orl
nop
cmpsb
xchg
test
in
shlb
sarb
sub
mov
mov
daa
cmp
shll
fists
aas
mov
stos
mov
adc
aad
mov
aam
cmc
add
nop
mov
xor
inc
daa
scas
push
sar
insb
testb
ljmp
cmp
sub
jmp
or
and
and
xchg
xor
cli
lods
push
and
data16
and
jp
sub
mov
out
popf
mov
jns
xchg
popa
fistpl
push
sbb
aam
xchg
and
push
out
clc
pop
divb
add
dec
sub
cmp
lods
mov
enter
aas
std
xor
ret
mov
je
and
mov
inc
inc
rcrl
pusha
rolb
jge
ja
xor
push
push
push
jle
xor
call
dec
std
lods
inc
adc
jb
xor
push
outsb
std
sub
jmp
pop
in
sbb
or
mov
cli
shrb
aam
jl
ret
jnp
lods
addb
xchg
decl
push
mov
rcrb
xchg
daa
jl
jnp
pop
loopne
xor
cld
xchg
loopne
enter
test
outsl
xlat
mov
adc
push
mov
arpl
cmpsl
fucomi
xchg
or
fs
test
push
cmc
mov
and
xchg
jecxz
dec
cld
je
push
loopne
mov
jp
inc
lock
adc
fdiv
add
jecxz
rcrb
int3
jl
stc
mov
call
sbb
sub
ljmp
jo
and
in
fildll
imul
xchg
jp
fwait
mov
insb
inc
fiadds
adc
push
xor
rcrl
es
xchg
pop
mov
lds
add
adc
filds
mov
mov
js
dec
push
fwait
in
lret
dec
jno
ret
jmp
sar
enter
and
sub
pop
fisubl
filds
insb
push
xor
outsl
mov
lds
repnz
mov
es
cmp
sub
add
jb
shr
jle
sub
faddl
mul
sahf
inc
filds
clc
ljmp
icebp
sub
push
xchg
addr16
subl
repz
cmpsl
lahf
sbb
push
repz
jl
cmp
xor
jge
mov
clc
out
pop
call
mov
iret
clc
ret
scas
out
scas
add
popa
pusha
jnp
aas
sbb
hlt
movsb
mov
mov
and
cmp
sbb
test
ficoms
xor
add
sbb
dec
push
pusha
push
xchg
int
jb
stc
jb
or
jne
mov
test
push
mov
testb
mov
dec
rclb
call
aas
negb
inc
popa
adc
and
mov
int3
xchg
xchg
lret
ret
inc
imul
mov
xchg
test
mov
pop
repnz
or
imul
fstpl
dec
cmp
jno
jnp
andb
popf
mov
push
sub
push
mov
mov
adcb
and
rcrb
pusha
lods
or
xlat
aam
xor
jns
sub
xor
cmpsb
jmp
in
xor
mov
fisubl
cmp
fnstenv
lahf
fs
mov
and
test
xor
fcmovbe
sbb
inc
sti
jp
pop
xor
pop
rcr
ret
push
imull
and
clc
inc
bound
lock
add
add
and
sbb
add
mov
fidivrs
add
cwtl
pop
mov
mov
loopne
andl
mov
or
push
sbb
or
inc
aam
cmp
mov
subl
repz
sub
mov
in
xchg
dec
or
push
push
jne
xchg
sub
mov
mov
push
notb
std
ret
or
or
jl
outsl
xchg
jne
jle
mov
jge
pop
in
push
cmpsl
mov
dec
and
fnsave
jno
out
rcll
call
sbb
jmp
sbb
sub
dec
pop
jne
pop
mov
mov
sub
push
lods
out
mov
dec
lahf
addl
popf
push
pop
mov
fsubl
cmpsl
and
add
mov
repz
pusha
and
out
push
ret
pop
add
ss
fcmovb
or
out
loope
ds
fcomip
aaa
inc
xchg
push
sbb
loop
or
lret
mov
mov
mov
pop
repnz
push
jbe
sbb
fs
popa
sub
sahf
cmc
pop
leave
lret
das
sub
cmpsl
xor
jmp
and
jle
mov
dec
outsl
mov
xor
mov
cmp
jl
int
or
addr16
movsl
inc
imul
ret
icebp
mov
lods
andb
jb
in
out
fdivrp
xor
js
repnz
push
push
mov
loop
xchg
movsl
mov
int3
xchg
sub
cli
movl
inc
adc
test
mov
or
popa
lods
dec
dec
sub
std
xchg
sub
mov
lcall
xchg
mov
jmp
hlt
mov
mov
xchg
dec
ja
push
push
js
add
xor
dec
mov
rorb
add
loope
pop
or
in
cltd
inc
call
lods
cli
movsb
push
add
lret
insb
dec
popf
add
stos
cmp
decb
ret
filds
daa
sbb
dec
xchg
add
pop
fildl
jle
or
xchg
cmpl
jb,pn
test
popa
xchg
push
mov
fucom
testb
adc
add
jmp
jle
xchg
or
mov
jno
cmp
dec
fimull
fadds
fimull
and
in
int
sbb
leave
cmp
cmp
cmp
jecxz
pusha
and
xor
inc
sub
stos
add
dec
or
shll
pop
in
movsb
xchg
mov
mov
push
mov
stos
mov
mov
enter
cli
pop
cmp
sbb
clts
push
sahf
jns
jno
pop
and
popf
push
mov
mov
stos
imul
pusha
clc
loope
push
clc
sub
cmp
add
fstpt
push
in
lds
cmp
pushf
insb
mov
lock
add
inc
inc
outsl
jnp
sbb
or
gs
inc
add
outsb
sbb
push
dec
aaa
xchg
sarb
cmpl
jno
loopne
ret
ficomps
mov
bound
sti
sub
inc
ss
jno
xor
push
inc
aam
mov
lret
ffree
pop
cmpsb
sub
xlat
cmp
lock
sbb
out
pusha
sub
jae
addr16
mov
mulb
mov
pusha
inc
repz
cmpsl
aam
sub
dec
iret
mov
test
inc
rclb
jns
inc
faddl
aaa
in
push
pop
mov
dec
dec
je
in
cmp
das
xchg
stos
push
lret
inc
rorl
into
push
push
sti
js
into
adc
ret
adc
jo
jecxz
jge
lods
push
mov
push
xchg
addb
mov
and
insb
enter
leave
pop
or
dec
jbe
pop
push
xchg
xorb
and
fisttps
insb
hlt
in
lahf
js
cld
sbb
lret
hlt
popa
sub
dec
mov
fcoml
inc
pop
ds
inc
pop
int
mov
movsb
cmp
pop
ljmp
mov
test
and
sub
xlat
test
dec
fisubs
xor
cmove
mov
cmp
push
pop
jne
out
add
je
fisubrl
ss
inc
xor
stc
shrl
mov
pop
adc
and
dec
mov
push
in
dec
inc
arpl
shrl
leave
xbegin
cmp
pop
sahf
mov
pop
iret
pop
pop
test
cmpsl
xlat
jns
dec
jmp
out
aaa
sti
popa
mov
call
and
mov
ja
ja
xchg
inc
sub
or
dec
xor
scas
sub
mov
and
push
orl
xlat
pop
lods
jns
aas
pop
cld
stc
xchg
popa
sbb
cld
xchg
nop
inc
push
push
adc
movsb
xor
pop
stc
mov
cmc
gs
push
ss
sbb
xchg
retw
bound
subl
cmp
fldt
scas
pop
jb
sub
movsb
aas
cmpsl
decb
push
pusha
sahf
jg,pt
imul
cmp
push
pushf
sub
xchg
xchg
pop
movsl
and
add
rcl
sbb
pop
gs
fucomi
cmc
pop
pop
and
into
aas
and
fistps
push
loope
scas
jo
mov
cmpsl
and
inc
ja
xchg
rclb
ss
fs
mov
aas
fnstcw
push
test
sub
pop
push
jae
jg
aad
add
mov
inc
jnp
fnsave
scas
cmp
fistl
outsb
loopne
das
aad
loop
sarl
call
and
jg
sub
popf
movsl
adc
pop
push
test
and
sti
insb
lds
cmc
sbb
pop
push
outsb
lret
push
cmpsl
movsb
aas
add
mov
imulb
lods
aad
dec
pop
mov
jne
sbb
jmp
pusha
mov
xchg
jb
in
jno
repz
pop
jns
adc
cltd
test
cmpsl
ds
lock
rcr
sbb
stc
mov
and
xlat
stc
add
push
mov
xor
add
cmp
sub
push
decl
enter
cmp
mov
inc
ret
daa
gs
xchg
shrb
out
in
int3
dec
sti
mov
mov
mov
lret
jne
int
in
loop
dec
pop
leave
dec
in
mov
lods
cmp
cmpsl
loop
fnstsw
or
out
sahf
cmp
and
mov
and
cwtl
lret
fstl
adcl
sbb
inc
scas
xchg
aas
out
push
cmp
ret
push
loop
inc
add
in
out
out
rcr
or
stos
mov
cli
ds
cltd
sbb
or
jg
cmp
in
jmp
xchg
test
sbb
fstps
movsb
mov
jecxz
pusha
or
lahf
xor
shlb
pop
pop
xor
movsb
push
sub
sub
movsb
lods
lds
sti
jo
mov
aaa
push
stc
shrb
adc
push
jp
cmpsb
cwtl
xchg
mov
clc
mov
mov
inc
scas
jecxz
es
fiaddl
cmp
add
clc
sub
rclb
push
test
jo
lods
sub
or
imul
in
push
mov
cs
aad
mov
inc
pop
in
jecxz
push
dec
pop
jp
push
cmp
fisubrs
stos
repz
rol
stc
loopne
jp
add
xor
jecxz
int
push
xchg
xchg
js
sbb
test
enter
lcall
fs
sbb
iret
jb
xor
xchg
pop
std
notb
adc
sbb
jl
sysret
lds
cmp
loopne,pn
sahf
addl
hlt
rcrb
jg
and
mov
pushl
push
stos
inc
and
fwait
xchg
lret
bound
notb
cmp
insw
mov
mov
jmp
dec
inc
sub
jg
imul
add
add
mov
cmp
mov
mul
cmpsb
subl
sahf
mov
fstps
inc
addl
mov
es
mov
rorb
fdiv
add
lock
sar
mov
xor
adc
xchg
movsl
gs
xor
mov
push
xor
sbb
push
mov
inc
mov
arpl
dec
movsl
lret
or
adc
out
sbb
mov
dec
sarl
cltd
sti
xor
mov
cmp
dec
cmpsb
push
roll
inc
into
scas
inc
out
inc
sbb
push
mov
and
and
jp
sub
or
xlat
mov
das
test
jne
pop
test
popa
or
dec
inc
lds
push
mov
mov
mov
test
ja
rcr
mov
xlat
sub
test
mov
pushf
adc
jne
mov
addb
dec
inc
stos
push
cmpsb
push
cmp
mov
testb
inc
movsl
sbb
sub
mov
arpl
in
fwait
ja
stc
fdivl
jno
imull
aas
loop
out
cwtl
lret
and
hlt
insb
add
orb
jno
cld
repz
icebp
mov
xor
lret
ljmp
lds
jne
mov
hlt
mov
stos
inc
shr
stc
dec
dec
mov
divl
scas
adc
sbbl
or
pop
cmpsb
adc
rol
dec
xchg
xor
jbe
cld
mulb
inc
inc
jmp
popa
sarb
into
push
jmp
aaa
test
test
add
xchg
aam
in
lret
aas
ret
test
mov
lock
jo
add
pop
cmc
imul
sub
mov
mov
add
cwtl
add
in
ret
test
mov
sbb
popa
pop
pusha
xor
push
push
push
add
stos
jl
rolb
loop
ss
movsb
mov
jg
add
loopne
mov
jle
pop
nop
clc
ficoml
inc
xor
mov
scas
std
in
stos
sub
fwait
hlt
in
push
push
sti
adc
mov
sbb
cltd
adc
test
pop
scas
call
cmp
roll
push
aad
stos
es
adcl
bound
ficomps
rcrb
es
icebp
mov
in
xor
or
xchg
stos
lcall
mov
addr16
mov
mov
mov
mov
or
jbe
jecxz
or
dec
mov
dec
sbb
mov
xor
fnstsw
es
or
adc
adc
cmp
andb
jo
cmpsb
and
inc
fwait
pop
pop
aad
sbb
pushl
roll
ret
dec
xor
loop
popa
int3
adc
mov
out
lcall
xor
push
inc
out
pop
hlt
push
dec
sahf
aam
jmp
sbbb
aas
cli
enter
jbe
loop
xchg
pop
test
or
sbb
in
pop
push
push
xorl
push
idiv
lea
stc
test
stc
insl
dec
lcall
rcl
cmp
popf
ljmp
lahf
cmp
cltd
push
push
and
push
fstl
mov
xor
jbe
push
out
test
fldcw
cmpsb
rorb
test
sbb
scas
stc
push
dec
xchg
fildll
stos
inc
inc
loopne
inc
and
ja
adc
in
sub
inc
arpl
mov
fdivl
loope
mov
add
call
push
mov
sub
fs
inc
adc
mov
lods
sub
xchg
fwait
test
popf
push
daa
push
pop
xor
xchg
sarl
sbb
mov
mov
inc
xchg
jp
push
sti
inc
dec
mov
stc
sub
mov
adc
dec
addb
push
sbb
cs
into
loope
adcl
sub
adc
mov
in
fwait
xor
fwait
sbb
sbb
dec
or
jns
jo
adc
sub
add
adc
pop
repz
lods
or
movsl
xchg
lock
add
push
xchg
cmp
jbe
xor
insb
jae
lods
popf
or
mov
rclb
dec
dec
fwait
lahf
mov
cltd
mov
out
cmpsb
iret
sub
push
scas
insb
std
dec
cmc
in
add
and
sub
arpl
es
push
lods
push
dec
lahf
cmp
sbb
gs
xchg
popf
push
aad
and
in
mov
cmp
iret
pop
das
clc
jge
pop
jo
ret
outsl
popf
pop
aas
pusha
lret
in
push
lds
adc
push
cmpsb
mov
jo
fnstcw
test
cmp
push
mov
xchg
insb
add
aaa
popa
push
fwait
jmp
aas
inc
jp
enter
js
mov
jle
and
test
sahf
std
fs
cmp
push
in
sub
jno
mov
aad
jb
mull
pop
sbb
insl
pushf
subl
movsb
pmaxsw
and
push
inc
leave
in
sbb
out
xor
loopne
cmpsl
ds
clc
push
pusha
in
push
mov
js
dec
and
dec
push
pop
dec
mulb
pop
insl
mov
jnp
xlat
push
dec
push
out
sub
icebp
jmp
jae
decb
fldl
lret
adc
push
stos
fistps
mov
push
cwtl
and
addl
dec
jne
arpl
pop
pop
inc
stc
sti
es
cld
jecxz
push
sub
test
lret
test
jb
dec
call
mov
cmpb
jg
cmp
in
aad
dec
mov
and
das
lds
xor
addr16
dec
aaa
jne
sti
push
stc
xor
xchg
popf
call
fsts
mov
inc
jecxz
xchg
pop
and
idivl
clc
or
push
loope
mov
lret
fdivp
pushl
or
sub
imul
push
enter
push
adc
scas
imul
pop
enter
sbb
cwtl
sbb
shrb
jmp
mov
out
jl
mov
ja
mov
addr16
xor
sub
mov
pop
pop
out
xchg
sbb
in
loope
inc
rorb
popa
mov
imul
push
or
and
pusha
leave
jnp
sahf
icebp
and
js
insl
or
lcall
test
lds
inc
nop
pop
lock
daa
stos
fsubrs
mov
call
mov
ja
pop
xchg
pop
xchg
stos
inc
push
xchg
mov
call
push
xchg
mov
inc
xchg
cmp
lahf
xor
scas
addr16
mov
jg
call
repnz
nop
fmuls
fidivrs
add
js
outsl
imul
or
fdivl
lods
sbbl
xchg
fxam
cmpl
call
lcall
push
data16
out
into
push
inc
movsl
lods
cmp
fistl
mov
inc
adc
mov
push
dec
das
imul
out
inc
test
pop
cmc
mov
add
daa
mov
push
pop
lahf
xchg
addr16
sub
sahf
mov
mov
insl
lret
inc
pop
addr16
cmc
lret
es
and
jl
dec
mov
addl
and
rorl
mov
xor
mov
test
mov
push
test
imul
push
pop
scas
ja
inc
mov
sub
inc
stos
scas
aaa
sbb
bound
cmp
in
aas
add
sub
mov
sbb
mov
push
push
and
cmp
imul
and
mov
insb
or
scas
sub
iret
adc
mov
sub
mov
sub
xchg
call
and
rorl
mov
movsb
jmp
xchg
dec
fbstp
jmp
push
repnz
lods
hlt
test
popf
pop
lcall
pushf
call
push
loopne
dec
inc
xor
cltd
sub
pop
xchg
bound
loop
and
mov
fadd
lds
stos
xchg
jge
mov
xchg
icebp
rcll
cmp
jne
mov
sarl
mov
dec
int
arpl
sbb
jge
mov
clc
push
jbe
add
sub
js
lret
dec
sbb
jnp
cs
jns
hlt
mov
shll
ljmp
pop
lret
inc
push
xor
add
gs
das
lret
out
jg
decl
push
aam
inc
inc
lret
mov
mov
jns
push
int
push
mov
lret
outsl
mov
push
out
mov
xor
dec
xor
or
cltd
push
push
popa
loope
lods
mov
mov
adc
mov
leave
push
movl
jmp
add
inc
adc
mov
mov
xchg
out
fdivrp
mov
push
xlat
inc
cmc
push
pop
and
xchg
fwait
pop
xchg
decb
negl
and
movsb
fwait
aad
push
mov
add
jecxz
xchg
xor
or
add
push
ja
outsb
mov
mov
jbe
bound
mov
xchg
into
xor
insb
jns
xchg
aas
jg
adc
dec
dec
cmp
mov
xchg
xchg
aaa
fisubrl
cmp
cmp
fimuls
inc
pop
stos
stos
fsubrl
shrl
inc
mov
pop
pop
je,pn
or
jne
push
adc
lock
mov
fs
dec
cmp
adc
sub
stc
movsl
out
and
fcmovnu
inc
gs
inc
in
jl
fisttpll
jb
outsl
out
push
lods
loopne
push
je
xor
stc
sbb
stos
add
push
stc
inc
loop
jg
sub
mov
stos
data16
rolb
mov
in
mov
cwtl
sahf
dec
test
mov
or
or
jo
stc
mov
push
xlat
sub
movl
out
inc
sbb
mov
pushf
mov
jnp
cmp
lret
lock
test
push
mov
jecxz
pop
lret
mov
dec
xlat
outsl
or
imul
aam
or
xorb
ret
leave
stos
dec
push
mov
ljmp
sarl
xchg
test
pop
push
jno
arpl
push
nop
hlt
ljmp
xor
inc
fs
xlat
lods
jns
movsl
xchg
idivb
nop
jg
outsl
in
jl
shrb
mov
mov
xchg
addr16
cmp
leave
ret
rcpps
lahf
push
push
jle
push
xchg
push
testb
fmuls
and
adc
in
or
aaa
rorl
xchg
ret
xor
pop
hlt
jecxz
pop
pushl
jge
pop
jge
test
dec
cmpsl
jecxz
xchg
mov
fmull
addr16
or
jo
daa
lods
mov
popa
mov
pusha
and
fisttps
lahf
lds
pop
sarl
push
rolb
data16
adc
inc
mov
sbb
shr
jns
mov
sub
fwait
push
popa
jb
pop
inc
lahf
in
lea
lods
dec
pop
jno
movsl
adcl
insb
xor
stc
pushf
fnsave
xchg
mov
cld
pop
and
bound
jp
stos
aam
lock
pop
das
cwtl
jle
mov
mov
and
dec
and
sbb
enter
push
stc
pop
pusha
jp
pop
add
aas
into
push
aad
xchg
xor
ljmp
enter
jae
ret
ss
push
adc
sub
lahf
jmp
inc
arpl
das
sub
dec
and
aas
fimull
mov
shl
sbb
lods
in
rol
inc
fwait
xchg
push
iret
and
sti
inc
cwtl
shr
data16
and
cmp
insb
pop
pop
lret
xchg
push
dec
in
arpl
push
fsubs
loopne
stc
mov
sbb
fistpl
fwait
fwait
xor
lock
rolb
ret
and
test
imul
rcrl
push
jno
ret
lret
push
pop
pop
inc
les
pusha
jp
cmpsl
xor
inc
xchg
mov
rclb
cmp
fwait
aas
jae
cld
mov
xor
lods
xor
lods
dec
fsubl
scas
cli
adc
cmpsl
jo
loope
mov
dec
cmp
ret
cmpsb
xchg
adcl
pop
and
nop
pusha
sbb
iret
pushf
push
mov
dec
adc
dec
rcr
sbbb
mov
add
icebp
dec
or
ffreep
test
push
rclb
sbb
pop
insl
push
push
xchg
out
repz
in
adc
adc
pushf
shll
pusha
inc
nop
jp
das
jo
dec
iret
inc
outsb
add
mov
add
fucomp
sub
movsb
nop
jmp
out
pop
xchg
dec
icebp
insl
xchg
adc
jecxz
shll
mov
loope
ja
cmp
push
ds
push
outsl
imul
and
fwait
stos
jp
cmp
popa
repnz
cmpsl
xor
loop
mov
jae
or
xchg
or
add
mov
dec
sbb
cmp
out
push
imul
repnz
cmp
push
test
xchg
jl
subb
aaa
adc
adc
lock
fsubrs
push
push
sbb
xchg
add
inc
adc
mov
cs
outsb
mov
loopne
fsubrl
fldt
shll
cmp
mov
je
or
fcomps
fwait
mov
outsb
imulb
shrb
cltd
imul
fmull
enter
stos
pop
xchg
lods
sbb
rolb
ds
sbb
fldenv
dec
inc
daa
lods
out
and
mov
outsl
adc
cmp
loop
repz
icebp
in
iret
lods
fstpt
mov
aas
add
ficompl
out
jl
cmp
loopne
pop
and
std
mov
cwtl
xchg
outsl
testb
cmpsb
pop
mov
fcoms
arpl
mov
cmp
imul
js
ja
pop
sub
popa
aad
or
mov
mov
test
inc
push
cmp
pusha
test
leave
xchg
jbe
push
inc
xor
movsb
xor
idivl
mov
adc
mov
je
mov
xor
jo
test
sbb
adc
lahf
adc
fwait
arpl
out
xor
mov
icebp
mov
aaa
mov
inc
dec
ds
test
sub
cmp
addb
out
into
repnz
cmpsb
out
sub
pop
out
inc
and
push
dec
pop
and
dec
fcom
cltd
ret
inc
inc
leave
adc
cmp
cmp
sub
enter
mov
sub
into
inc
dec
andb
pop
adc
or
sbb
or
lds
loop
mov
mov
mov
mov
lret
in
mov
iret
sbb
sbb
test
jmp
stc
pop
nop
shr
filds
pop
sbb
mov
add
sbb
andb
jns
adc
mov
mov
ss
dec
xchg
lds
test
aad
cmpl
test
mov
push
or
xchg
rcll
adc
cltd
and
sti
dec
aas
pushf
inc
add
adc
fisttpll
daa
mov
push
in
push
and
scas
push
inc
dec
cmp
jns
pop
jns
push
add
lock
dec
outsl
into
shlb
adc
dec
lret
or
fnstsw
inc
fsubs
xchg
cmp
mov
and
push
popw
dec
cmp
xchg
mov
and
insb
sub
aaa
and
adc
jo
lods
inc
xor
ficoml
les
xchg
std
int3
add
and
pop
sub
push
pop
je
mov
pusha
jnp
int
jne
and
xchg
loope
push
and
outsl
mov
sarb
cwtl
hlt
add
fld
add
int
imul
mov
idivl
mov
clc
add
adc
xor
xor
xchg
lods
xlat
pop
shlb
je
and
les
in
lea
fstp
vpsubb
lods
mov
xchg
xor
aas
pop
push
fisttpl
rcrb
test
int3
jecxz
dec
fs
dec
lea
push
push
pop
shll
xchg
outsl
sub
jecxz
inc
pop
les
fisubrl
push
jbe
mov
das
movsb
movsb
cli
imul
out
insb
std
out
pusha
ja
mov
fwait
out
scas
es
mov
adc
fldenv
in
push
or
in
enter
jp
lret
cltd
xchg
scas
sub
mov
dec
adc
fwait
mov
xchg
nop
out
sahf
gs
subb
pop
jne
push
pop
flds
std
dec
jns
inc
dec
push
jbe
xchg
shll
clc
dec
pop
cltd
fistps
andb
loope
in
cmp
pop
scas
inc
xchg
cmpsb
dec
jmp
or
popl
mov
pop
aaa
xchg
test
aam
push
jae
jl
ret
xchg
mov
jmp
mov
xchg
ss
cs
inc
add
inc
sbb
mov
or
dec
or
add
inc
int
jl
push
jge
or
mov
out
lcall
repz
je
xor
mov
or
mov
or
pop
dec
xchg
gs
adc
add
mov
cs
ja
xchg
mov
int
dec
cmpsl
cld
mov
cmpsb
add
movzbl
pop
mov
push
lahf
dec
arpl
fcmovnu
cmpsb
xchg
mov
add
or
push
shll
aaa
lahf
cmp
bound
fld
mov
imull
orl
aam
pop
or
mov
test
shlb
arpl
or
lahf
rep
and
or
or
shrb
mov
xchg
push
xorl
dec
mov
mov
xchg
cwtl
inc
cmp
dec
jge
call
call
jo
call
daa
sub
push
or
push
rorb
xchg
mov
pop
mov
in
pop
leave
cmp
cli
add
push
adc
mov
sbb
cmp
push
jle
mov
mov
mov
sbb
xor
push
mov
addl
inc
mov
xor
rcll
popa
push
and
add
inc
and
popa
loope
fs
pop
call
scas
fs
out
movsl
fcomps
inc
ja
cmp
xchg
icebp
sti
mov
mov
cmp
adc
sub
fxam
movsl
sub
push
add
shl
mov
mov
pop
lods
add
inc
sub
sahf
inc
loopne
repnz
mov
jb
sbb
inc
les
cs
mov
and
aas
cmc
inc
cmp
pmulhw
push
xlat
in
lahf
into
mov
xorb
mov
inc
and
insl
outsb
imulb
out
test
out
mov
push
ds
pop
fmuls
into
push
mov
movsb
pop
adc
shl
or
push
cmp
sbb
adc
imul
cmp
dec
sarb
stos
repnz
inc
adc
sbbb
and
add
add
adc
or
mov
int3
mov
adc
xor
out
cli
aam
mov
jmp
cmp
test
cmp
insb
cli
push
jae
jp
mov
mov
xor
adc
cld
js
jnp
out
sbb
out
aad
xchg
push
loop
adc
sbbb
inc
sbb
and
push
fsubrs
push
pop
or
sti
mov
flds
rolb
aas
mov
add
jns
jmp
pop
mov
push
or
loopne
ss
test
jbe
fstpl
mov
xor
mov
jl
sbb
mov
cltd
js
lock
xchg
bound
mov
mov
adc
arpl
sub
jo
movsl
or
add
in
daa
fbstp
call
insl
add
inc
lahf
mov
insb
aam
out
push
mov
fucomp
fildll
insb
push
aam
pop
lret
jns
push
and
js
inc
mov
scas
scas
jmp
push
pop
out
jns
inc
cmc
pop
push
jno
sub
pop
adc
data16
fwait
cltd
xor
insb
mov
lcall
pop
sti
cmpsb
mov
cmp
scas
pop
data16
outsb
dec
int
push
xor
mov
jle
jnp
cmpsb
jae
sub
out
jg
add
int
cltd
mov
sbb
pop
mov
pusha
in
jo
pushf
xchg
cmp
loope
arpl
sarb
int
inc
outsl
outsl
test
sub
sbb
orb
pop
xor
data16
jne
lret
loope
cmpsl
push
sub
xor
and
push
data16
xchg
xor
pop
in
pushf
fadd
lods
xor
and
gs
insb
fmull
jbe
orl
cmp
cltd
adc
sub
jle
pop
insl
lret
fimuls
repnz
mov
push
pop
add
mov
add
dec
xor
mov
cli
loop
out
mov
inc
jge
mov
adc
je
push
pop
call
adc
or
lret
push
cltd
dec
or
sahf
mov
notb
cmp
pop
xor
add
or
jne
xor
jne
jle
or
into
shrl
dec
in
scas
out
test
or
int
jle
adc
mov
and
fimuls
push
add
das
pop
cmp
jne
lcall
cmp
and
fstpt
mov
lds
pop
inc
cmp
ret
adc
cmpb
mov
sub
test
test
adc
add
add
and
add
ret
jbe
das
pop
mov
jo
xlat
inc
scas
popa
xchg
or
std
inc
in
sbb
sub
lcall
in
ret
dec
fcoml
hlt
rcrb
cwtl
loopne
cmpsb
mov
jo
popa
aaa
xchg
push
in
cltd
push
mov
les
cmp
inc
xchg
adc
cs
sub
inc
loop
xor
pop
lea
add
cmp
rolb
repz
sbb
mov
fiaddl
push
push
pushf
je
jp
dec
jp
lock
rcll
lds
dec
fsubrs
test
into
movsl
out
std
pop
inc
int3
mov
xchg
fmul
mov
add
add
jne
rcll
pop
inc
imul
mov
mov
and
push
int
les
mov
or
das
lret
sbb
icebp
test
dec
sub
jmp
push
adc
sbb
ja
cmp
roll
hlt
or
mov
dec
adc
or
insb
inc
mov
pop
dec
inc
and
mov
and
pop
sub
xor
test
sbb
and
xor
fwait
mov
cmc
cmp
std
dec
or
mov
sbb
sub
dec
sbb
scas
imul
mov
pushf
andl
fcompl
in
mov
dec
js
or
sti
push
pop
add
shll
add
inc
rcrl
imul
xor
sub
in
jo
repnz
cli
pop
cmc
into
dec
push
shlb
cmp
inc
movsl
xchg
add
pop
fs
mov
repz
aaa
lret
cs
aaa
js
lods
lahf
and
jmp
sbbb
int3
cmpsl
or
aam
and
les
or
jle
xchg
test
clc
add
mov
popf
hlt
or
add
dec
test
std
pop
ror
lret
aas
fs
fstps
adc
insl
fdivs
loop
or
inc
push
xor
out
sbb
add
mov
jmp
and
inc
add
loope
or
sbb
test
movsb
cmp
cwtl
mov
xchg
lods
test
pushf
mov
outsl
push
sub
push
enter
jno
fcoml
test
cwtl
sub
inc
mov
rcr
jecxz
xchg
push
and
es
divl
jo
pusha
mov
and
test
int
adc
addb
fidivs
ds
mov
jo
mov
iret
rcl
xlat
mov
jbe
sbb
lds
sub
xor
add
in
pop
jo
mov
test
mov
repnz
xor
dec
popa
pop
mov
orb
mov
dec
bound
mov
dec
fldt
out
add
ficoms
fwait
in
sbb
fisttpl
fmul
cmp
xchg
fistpll
lcall
mov
jae
ret
out
xor
shll
inc
imul
out
hlt
and
add
jl
rep
push
pop
or
jg
iret
sub
sbbb
mov
push
jl
in
push
adc
std
movsl
loopne
lods
jmp
daa
je
add
int3
aas
jns
inc
adc
mov
mov
sar
push
popa
aad
sbb
and
dec
pop
jae
ljmp
pusha
ja
xor
jecxz
out
dec
adc
mov
and
cmp
push
mov
and
dec
int
rcr
cmp
jmp
lcall
stos
and
hlt
daa
test
fucompp
aas
mov
or
push
and
imul
push
xor
or
daa
pop
ret
inc
jmp
jge
les
out
lods
scas
loopne
push
les
adc
arpl
sbb
into
int
push
iret
in
stos
loopne
jns
loopne
pushf
add
dec
cmp
mov
add
fldenv
xlat
sbb
pop
push
and
adc
popf
jbe
sbb
lret
jns
movsb
inc
xchg
mov
adc
cld
jecxz
jmp
shrl
fwait
mov
xchg
inc
jle
mov
xchg
inc
stos
orb
sbb
divl
nop
pop
sti
cmpsb
mov
mov
popa
das
ds
mov
push
enter
xor
inc
mov
hlt
fnstsw
movl
rcrb
mov
dec
pop
hlt
rol
jg
mov
pop
mov
js
jge
cmp
out
test
cmp
arpl
popf
cmp
jge
jns
push
sbb
popf
test
cpuid
dec
push
lea
jle
aad
mov
pop
gs
jnp
out
mov
ja
pop
push
cwtl
mov
add
call
adc
mov
sbb
jb
mov
push
push
sub
dec
rcrb
jg
jl
fistl
pop
xor
xor
fucom
inc
aaa
mov
aas
dec
out
cmp
dec
outsb
das
mov
lea
dec
subb
mov
mov
add
mov
rol
jbe
mov
xchg
cmp
push
sarb
sbb
sub
inc
rol
mov
cli
mov
push
pushf
xchg
mov
adcb
in
xor
pop
cwtl
js
movd
aaa
xchg
fucomp
adc
lret
movsl
or
imul
ja
pop
hlt
psubusw
xor
hlt
mov
pop
pusha
add
hlt
pop
and
dec
sub
movsb
test
mov
nop
in
in
xlat
fiaddl
mov
in
dec
mov
fs
out
mov
xchg
out
lods
pop
xor
loopne
test
bt
stos
mov
dec
or
leave
mov
push
leave
xor
lods
cmp
cwtl
dec
inc
test
bound
or
sarl
loop
xor
mov
push
bound
mov
mov
jo
jbe
pop
add
and
stos
leave
add
cmp
pop
xchg
pop
add
mov
insl
jecxz
stos
incb
jmp
push
fsubrp
les
shll
cmp
bound
mov
popa
or
mov
pop
push
xor
mov
push
imul
lods
pop
aam
add
out
adc
cmp
xchg
aas
mov
cltd
pushf
pop
call
push
jl
in
pop
leave
cmpb
into
cld
xchg
mov
push
mov
xchg
insl
aad
stc
jne
mov
inc
mov
addr16
push
leave
pop
xchg
dec
or
sub
sbb
clc
pop
dec
xor
nop
inc
dec
inc
enter
push
ljmp
jg
std
aam
xor
add
mov
sbb
rcrb
or
std
fisubs
adc
movsl
shlb
push
fisubrl
sbb
mov
xor
jb
cmp
adc
or
aam
popl
repnz
inc
test
inc
call
imul
je
pop
bound
setge
sbb
xor
mov
dec
sub
pop
stos
ret
push
xlat
mov
fsubr
and
sahf
es
icebp
sbb
jge
ret
in
mov
jns
outsl
push
xchg
add
jg
clc
sbb
cmpsb
lahf
push
add
enter
jmp
pop
sbbl
test
fsubrs
repz
les
scas
test
out
add
lcall
cmp
ret
je
les
icebp
dec
xor
in
imul
pop
pop
in
pop
imul
or
push
loope
fbstp
mov
imul
cmp
lods
das
test
mov
mov
dec
sub
pop
bnd
fsubs
inc
negl
inc
push
inc
push
orl
test
jno
int3
outsl
adc
aad
and
lods
les
lret
jle
mov
nop
dec
lds
xor
cmp
inc
adc
mov
stos
adc
sbb
mov
sbb
pushf
or
lahf
imul
das
dec
mov
jb
sub
jbe
mov
cwtl
loopne
ret
add
lret
cmp
sahf
ficoms
subb
roll
shlb
add
arpl
cmpsb
cmp
shl
mov
in
out
outsl
incb
inc
ror
add
cmpb
jns
fs
and
sarl
enter
pop
push
and
jne
mov
xor
dec
hlt
enter
mov
push
int3
inc
js
outsb
push
cltd
or
mov
xchg
filds
nop
mov
mov
xorw
jbe
lods
xchg
test
cwtl
sbb
pop
mov
mov
jne
jae
jns
inc
hlt
inc
mov
cmp
jg
mov
cmpsl
fsubr
lret
repnz
sub
ds
xchg
jne
imul
into
or
in
or
push
dec
cmpl
mov
mov
fstl
rolb
outsb
ret
sbb
xor
jb
andl
andps
inc
pop
stos
sbb
sbbb
jno
fsubl
int
mov
pop
lea
mov
inc
imul
adc
sti
and
xchg
sub
mov
dec
mov
or
in
data16
jo
int
out
push
inc
fistpll
rol
dec
jns
lods
fs
xchg
xor
std
xor
in
jge
int3
jle
es
cmp
loopne
fstpl
ret
call
xorl
fbstp
stc
andb
xchg
js
adc
pushf
cwtl
mov
xchg
xchg
add
mov
xchg
and
cmp
popf
inc
daa
jns
out
add
jae
into
addr16
sarb
cmpsb
lahf
ljmp
lock
add
cld
inc
sbb
push
xchg
add
cs
xor
inc
push
arpl
or
lret
pop
in
sbb
sbb
sub
jecxz
lds
push
cmpsb
test
jg
or
and
clc
in
pop
xor
cmp
or
cmp
je
test
mov
lock
inc
jb
xchg
mov
rol
mov
or
adc
pop
mov
adc
xor
fwait
test
xlat
rcrb
enter
arpl
jae
or
and
int
rcrl
stos
cs
xor
es
movsb
adc
insb
fs
bound
jns
xor
cmp
jmp
pop
cmp
sub
adc
es
jmp
int
sbb
cltd
aaa
mov
arpl
dec
add
jmp
into
in
xchg
mov
scas
jmp
fsubrs
inc
out
xchg
mov
test
sbb
pop
test
xchg
call
jge
bound
rol
stos
rcl
and
pop
nopl
fisttps
xor
mov
and
cmc
out
jg
xlat
pop
ret
ja
or
lea
pop
push
inc
movsl
ret
fimuls
flds
insl
fwait
in
xchg
mov
imul
jae
dec
adc
ja
fstpt
pop
push
dec
push
and
jp
arpl
mov
sahf
push
mov
push
push
mov
xor
mov
pop
sbb
scas
cmp
push
mov
sti
pop
push
dec
out
mov
int
dec
inc
pop
int3
aaa
xchg
push
push
inc
cwtl
das
stc
xor
dec
loopne
addr16
xchg
cmp
mov
nop
jp
add
cli
test
jb
adc
push
cmc
cmpsb
in
cmp
out
jp
pop
out
in
clc
mov
pop
jge
adc
push
les
sarb
sbb
xlat
cld
sbb
inc
pop
pop
cmp
cmpl
mov
and
and
out
loope
jecxz
stos
insl
adc
out
adc
and
je
rcl
push
in
xchg
in
es
ljmp
shlb
adc
jmp
movsb
test
add
into
jl
ds
mov
xor
dec
sub
in
arpl
push
cld
jmp
insl
mov
cli
rcl
nop
pop
lea
cwtl
xchg
jbe
popf
mov
fcompl
jns
and
subb
inc
cmpsb
xor
mov
in
cwtl
cmpsl
xchg
mov
or
shl
popa
and
fsubs
dec
cmpb
sbb
push
mov
cmp
sub
lea
xor
inc
enter
dec
inc
jo,pn
les
and
dec
fbstp
xchg
mov
imul
jecxz
hlt
jp
loope
call
mov
fidivl
mov
scas
xchg
push
push
jo
into
stos
add
mov
mov
fmuls
inc
call
icebp
mov
push
sub
test
sub
sti
stc
mov
mov
mov
push
dec
inc
sti
mov
xchg
je
xor
pop
jne,pn
sahf
mov
jg
pop
push
enter
push
into
adc
mov
sub
fsubrs
xchg
adc
fiadds
sarl
fbstp
mov
std
imul
sbb
test
xor
dec
repnz
and
imul
jmp
lcall
pop
cmp
test
jnp
xor
pop
pop
jbe
inc
mov
and
sbb
and
je
loope
les
fdivrs
shrb
mov
in
imul
idiv
sahf
push
jnp
sarb
lock
aam
pop
scas
loope
addr16
pop
cmp
lret
cld
mov
dec
iret
push
jmp
lahf
push
in
pop
mov
lret
arpl
mov
mov
pusha
mov
xchg
xchg
mov
xchg
lods
scas
pop
adc
xor
icebp
stc
test
adc
imul
xchg
test
sbb
fisubs
xchg
xlat
inc
fsubr
or
and
or
out
gs
mov
out
xor
lret
fs
mov
test
inc
lock
das
pop
int3
and
push
mov
imul
push
test
stos
cmpsb
fxtract
push
and
mov
mov
inc
jecxz
push
mov
mov
fisubrl
in
pop
xor
jnp
pusha
test
hlt
arpl
or
ss
jb
dec
mov
mov
fs
and
rcr
decb
out
lds
bswap
jg
xchg
mov
dec
sbb
in
hlt
mov
ret
addl
add
sub
test
adc
call
push
jbe
mov
cs
adc
xchg
insb
push
rolb
rorb
test
in
mov
xor
inc
or
inc
push
cltd
fstpl
inc
gs
dec
and
and
sub
pop
dec
xlat
mov
mov
es
stos
cmp
dec
fstps
lea
xchg
xor
jg
dec
addr16
in
pop
fwait
mov
cmpsb
testb
or
dec
jge
mov
sub
sub
scas
mov
and
idiv
rolb
add
xchg
fnsave
add
sub
add
je
icebp
sysexit
add
pop
jo
mov
pop
inc
mov
push
dec
cltd
stos
dec
xchg
mov
out
lock
movsb
pop
mov
dec
mov
push
fisttps
xchg
scas
pushf
inc
out
jo
xchg
mov
and
jbe
dec
push
xchg
js
sub
adc
cmpb
fwait
cmp
pushf
and
in
insb
xchg
daa
dec
pop
cmp
xlat
inc
adc
adcl
mov
test
sub
sub
loope
or
arpl
push
out
sbb
dec
mov
cwtl
scas
and
jne
idiv
pop
inc
icebp
cmp
lret
stos
jecxz
pop
adc
jbe
and
pop
ret
lods
jo
arpl
and
repnz
shlb
mov
pop
mov
push
filds
dec
imul
sbb
clc
inc
sub
pop
sahf
push
cld
je
std
pop
mov
rcll
hlt
fistpl
loopne
or
mov
mov
out
mov
out
push
mov
jg
xchg
das
int
rcrl
das
push
jecxz
rorl
mov
mov
cmpsb
out
dec
idiv
or
loope
ret
and
mov
push
dec
add
mov
mov
movsb
add
mov
outsb
push
adc
std
rcrb
idiv
mov
xor
test
pop
out
stc
mov
add
push
mov
mov
adc
inc
lods
pop
dec
jle
or
mov
jmp
into
adc
xor
hlt
inc
jl
andl
sbb
in
adcl
ljmp
jp
or
sbbl
mov
pcmpgtw
aas
fistpl
test
mull
dec
lcall
in
cmpsb
fwait
mov
mov
lds
xorl
inc
bound
jg
aaa
inc
xor
cwtl
dec
jbe
data16
ss
test
cwtl
push
clc
mov
mov
cmp
sub
sbb
rorl
jmp
inc
hlt
adc
stc
adc
ret
jb
loope
sub
in
xor
pop
sbbb
inc
jl
shl
add
enter
inc
lods
xchg
stc
adc
inc
mov
mov
lods
scas
xchg
mov
mov
xor
mov
add
sbb
jns
inc
icebp
testl
pinsrw
adc
mov
add
or
data16
sti
loope
dec
stos
js
jne
outsb
loope
imul
das
push
mov
mov
xchg
cmpsl
cltd
sub
pop
jecxz
xchg
daa
inc
adc
xor
add
mov
nop
or
ss
mov
into
rol
pop
push
stc
and
cmp
dec
jae
daa
js
mov
mov
pop
mov
enter
lods
loope,pt
cmpsl
icebp
test
test
imul
addl
outsb
xor
fnstsw
sub
lods
in
out
mov
daa
adc
mov
pop
or
jae
test
push
jl
dec
psubusb
sahf
aaa
cmp
push
mov
and
push
lods
mov
xor
mov
mov
test
call
xchg
je
cltd
leave
xchg
je
mov
mov
adc
add
pushf
mov
add
add
dec
outsb
pop
mov
mov
cwtl
xchg
not
mov
ret
sahf
gs
scas
stos
fdivl
cs
scas
mov
cli
jge
divb
push
ficompl
cli
test
ret
dec
mov
add
dec
cmp
in
push
fmulp
mov
dec
xor
pop
sarb
xchg
inc
push
clc
sub
cmp
pop
out
mov
sbb
xor
in
xor
dec
inc
xchg
xorl
pop
lret
nop
lahf
xchg
mov
and
mov
inc
lea
push
inc
sbb
aam
js
fdivrl
nop
push
aad
push
js
lea
adc
incl
xchg
dec
pushf
call
and
sub
rclb
add
pop
sti
test
ret
cwtl
xchg
mov
ss
jbe
cmpsl
ja
insb
xor
sar
lods
mov
inc
dec
rolb
xor
movsl
cmp
inc
mov
and
add
inc
xchg
inc
dec
sbb
mov
jae
fstpt
mov
jp
popa
and
aaa
jle
mov
adc
jle
pop
and
lea
xorl
push
or
sub
xor
cld
mov
aad
and
scas
les
mov
or
pop
cltd
aaa
sub
shl
shll
cwtl
jb
mov
dec
cmpsl
dec
adc
adc
mov
add
lods
sub
cmpsb
unpcklps
and
push
into
mov
fistpll
movsb
xor
nop
stos
sbb
stc
cmpsl
out
mov
push
repz
js
data16
cmp
fdivrs
push
pop
sub
push
lock
adc
push
mov
xor
nop
or
push
inc
or
jnp
inc
mov
cmpb
shrl
aas
sbb
push
push
push
and
lock
push
out
dec
aam
mov
scas
out
push
cwtl
jno
dec
inc
cmp
cltd
xor
test
loope
jo
cmp
add
sbb
std
inc
or
scas
jo
stos
clc
jmp
sbb
jp
adc
xor
ja
cmp
pop
push
mov
bound
lea
xor
loopne
push
out
add
adc
data16
push
cltd
pop
int3
sub
dec
pop
pushf
dec
ret
ret
insb
sbb
aas
mov
or
jae
inc
lods
test
hlt
lods
jne
repnz
xor
aas
xchg
xchg
mov
push
pop
inc
leave
xor
fstpt
push
sbb
mov
xchg
or
rcll
mov
mov
ds
imul
mov
testb
or
and
cmp
and
push
add
aas
repnz
lahf
inc
loope
pop
stos
sbb
in
mov
pop
push
jo
xchg
pop
leave
andl
cmp
mov
into
jno
je
jb
sbb
jne
inc
jmp
xchg
cltd
sub
xor
mov
lahf
std
sbb
fwait
clc
aaa
imul
or
mov
ja
xor
jo
shlb
out
mov
dec
hlt
adc
inc
test
pop
mov
pop
mov
jge
std
push
loop
cmp
ret
jg
xlat
addr16
push
ret
pop
cmp
sbb
jns
dec
test
lret
fsubrs
add
push
jae
push
imul
lea
xchg
xor
jo
in
stos
stos
xchg
cmp
sti
pop
jno
and
or
xlat
sbb
hlt
dec
test
mov
jmp
mov
inc
push
rcl
add
or
inc
add
mov
daa
xor
dec
pop
stos
adcb
test
sbb
pop
inc
jmp
rolb
push
shlb
pop
pop
sub
cmp
push
xor
dec
ljmp
mov
movsb
inc
add
jae
push
and
mov
add
rorl
lahf
mov
dec
addl
loope
insb
and
sbb
and
outsb
push
or
mov
pushf
jno
dec
fisttps
mov
shll
push
xchg
push
or
sub
and
outsb
mov
out
xorl
cmp
pushf
mov
dec
and
inc
add
dec
mov
dec
add
xchg
das
and
loope
mov
insb
scas
pusha
mov
xchg
icebp
imul
xor
xchg
and
push
mov
sub
in
rorl
mov
rclb
cs
fs
mov
and
dec
jmp
sub
jecxz
icebp
jl
xchg
jmp
daa
xchg
shrl
mov
push
stc
clc
lods
add
ret
xlat
cmp
bound
jns
push
sub
jne
push
cltd
movsl
xchg
dec
mov
dec
add
fsubp
xchg
mov
lret
adc
dec
mov
dec
rcrl
out
jmp
imul
cmp
test
test
jmp
mov
jl
inc
ss
push
lcall
fistpll
dec
out
add
test
xchg
adc
cmp
sub
inc
adc
in
lret
ficoml
lret
daa
mov
cld
inc
and
push
lret
mov
insl
or
push
push
stc
jo
mov
movsl
and
mov
ja
add
cmp
and
xchg
add
jbe
loope
jl
lods
hlt
daa
jne
mov
nop
enter
test
sbb
mov
push
sti
xchg
xor
loop
and
pop
sub
jl
stc
dec
add
hlt
mov
int
cmp
dec
stc
mov
cmp
outsb
js
add
pop
aas
lock
stos
wbinvd
sbb
sub
fstl
shr
shll
lcall
int3
add
adc
inc
adc
pushf
mov
mov
jbe
sbb
pop
fldl
lret
rcrb
out
frstor
shll
mov
push
mov
cmp
in
adcl
outsb
sub
imul
stc
cmp
cmp
dec
sbb
cltd
jmp
cld
loope
int
int3
push
fstps
lock
or
rorb
mov
imul
fldl
flds
or
fcos
lock
std
ljmp
in
mov
sbb
cmp
jae
push
dec
cwtl
cltd
out
insl
es
sub
sub
jmp
sbb
fiadds
xchg
jnp
inc
icebp
inc
and
stc
add
lods
dec
in
push
loopne
pusha
jne
stc
idivl
jno
data16
push
pop
por
fiadds
les
or
mov
xor
sti
jno
cmc
idiv
xchg
fs
cltd
mov
jle
aam
mov
or
lcall
mov
jbe
les
mov
outsl
sbb
aaa
push
ja
in
xchg
pushf
push
pop
shl
adc
mov
ret
js
nop
bound
insl
sub
dec
test
clc
dec
cmp
jns
fcoms
out
or
pop
aaa
push
adc
jo
pop
insl
movsb
dec
sub
andl
sbb
stos
jae
pushf
fcompl
hlt
fstpt
roll
fistl
and
jnp
xchg
dec
lret
mov
call
adc
insl
pop
inc
sbb
loopne
les
jno
xchg
enter
inc
lahf
cmp
pop
adc
mov
or
sub
xor
leave
sub
iret
hlt
adc
arpl
into
mov
imull
in
repnz
add
das
les
loope
bound
lock
mov
cmc
dec
cmp
sbb
xor
movsl
jl
xchg
push
jle
fisttpl
arpl
sbb
std
jmp
arpl
aas
mov
lods
add
or
popa
sbb
out
add
or
scas
lahf
imul
cmp
outsl
rclb
cli
mov
lds
mov
pushf
and
sarl
mov
negl
adc
push
jecxz
sbb
negb
add
mov
mov
cmpsl
inc
cmp
push
sbb
lahf
sbb
sahf
xor
aam
push
outsl
in
stos
jmp
xchg
xorb
adc
bound
pop
shll
pop
push
cmpsb
out
test
sbb
mov
and
or
shrb
push
adc
xor
inc
cmpsl
dec
inc
popf
mov
xchg
psrld
pop
jl
std
or
sub
out
inc
push
push
xchg
rol
dec
mov
sbb
test
xchg
test
iret
ret
sbb
mov
gs
pop
jg
fistpl
xchg
mov
xor
push
popa
adc
addr16
test
test
out
adc
cmp
xchg
sahf
testb
aam
fisttpl
ret
pop
sbb
in
movsb
sti
or
jno
mov
lock
dec
ds
stos
in
mov
out
test
push
lcall
jmp
test
int3
cld
push
inc
xchg
loopne
adcl
out
in
inc
mov
jecxz
cmp
pushl
cmp
dec
xchg
es
xor
sbb
hlt
inc
rol
loopne
dec
cwtl
enter
sarb
adc
pop
push
pusha
push
push
in
jp
dec
leave
aad
loop
out
pop
or
call
pop
repnz
data16
ss
adc
inc
mov
dec
mov
cld
xor
xchg
jb
aaa
out
or
jbe
jno
cs
fisttpll
push
psrlq
fisubs
push
add
xchg
xor
fwait
das
jne
lahf
pop
jp
and
mov
pusha
in
sub
add
aad
dec
and
inc
int3
shrb
jg
or
outsb
insb
pop
adc
xor
sbb
dec
pop
pop
sub
vunpcklps
addr16
and
scas
ret
cmp
sub
and
pop
add
loop
fistpll
js
cmp
insb
fbld
lcall
cli
sbb
cmc
icebp
push
push
push
push
dec
cmp
into
shlb
and
icebp
fcompp
add
in
or
stc
inc
inc
sbb
mov
push
int3
add
enter
stos
iret
aas
outsb
mov
fwait
and
xor
cmp
ret
push
mov
aaa
cmc
js
push
push
cmp
push
clc
sub
pop
jmp
insl
push
dec
iret
pop
imul
add
out
mov
mov
add
dec
cwtl
push
dec
jae
pop
cmpsl
lcall
xor
sar
mov
push
jne
ret
rorl
jmp
ja
xor
mov
scas
scas
notb
sbb
jl
int
mov
cmp
out
jp
xchg
into
pusha
sbb
jmp
mov
adc
and
push
adc
or
inc
xlat
hlt
dec
push
inc
lds
and
psllw
int3
mov
cmpsl
cs
repz
xor
cli
xchg
xchg
rolb
push
lds
rcrl
ja
mov
repnz
cmpsl
lock
or
push
fdivr
mov
push
cmp
xchg
xor
lods
sub
mov
call
lea
xchg
inc
xlat
xor
dec
mov
std
mov
dec
fnstenv
cmp
mov
je
cmp
test
or
iret
mov
bswap
in
out
jg
jecxz
mov
mov
nop
leave
divb
gs
shrl
jge
inc
pop
or
out
cmp
inc
mov
aaa
sbbb
cmp
mov
inc
and
or
inc
ret
sbb
test
les
sbb
shr
sbb
or
sbb
mov
sbb
mov
lock
je
add
enter
xor
xlat
mov
arpl
pop
in
mov
cmp
scas
out
insb
xor
sub
clc
push
shl
iret
lret
jl
or
and
mov
scas
jae
mov
pop
xchg
nop
xchg
out
cmpl
sub
popf
pop
xor
ja
jns
mov
lret
insl
decb
insb
mov
aas
fmuls
inc
mov
inc
cmp
or
mov
pop
lcallw
fildl
and
scas
push
ficompl
insb
cmp
aad
adc
scas
and
inc
add
icebp
lds
mov
fsubr
les
or
fiadds
imul
xchg
cli
aam
xchg
out
mov
adc
les
add
mov
add
push
test
mov
jns
hlt
fldt
xor
daa
idiv
jne
jecxz
aas
and
iret
mov
shll
or
mov
xchg
xorb
mov
mov
xchg
mov
dec
sub
loop
pop
lcall
xor
jae
mov
in
loope
das
sbb
inc
push
repnz
sub
cli
mov
sbb
in
mov
push
mov
in
inc
and
shrb
push
xchg
psubusw
fwait
mov
pop
test
jge
sti
mov
xchg
mov
jecxz
sbb
xlat
movl
jl
cltd
push
xchg
or
and
jecxz
loope
in
push
gs
inc
in
mov
jno
les
and
in
stos
pop
cmpsl
lahf
in
mov
cmp
cwtl
outsb
out
sub
xlat
stos
sbb
xchg
outsl
mov
ljmp
pushf
jne
push
add
or
ljmp
movsb
mov
std
js
pop
xchg
setge
or
xor
jns
jge
clc
ficomps
shll
push
stos
inc
lcall
sahf
pop
fwait
fidivl
xchg
cmp
mov
jge
sub
sub
push
clc
outsb
ljmp
leave
add
imul
sub
or
lcall
xor
cmpsb
inc
mov
movsl
push
test
iret
and
mov
pop
rol
pushf
xor
inc
xchg
shll
pop
add
sbb
daa
cvtpi2ps
mov
test
mov
out
push
pop
pop
rol
pop
repnz
xchg
cmp
jge
scas
shll
jge
cs
fdiv
or
pop
sub
lcall
test
test
out
outsl
mov
push
in
push
mov
xchg
mov
dec
loopne
data16
and
ljmp
mov
out
in
xchg
push
sub
dec
lock
ror
sub
or
or
or
inc
inc
fmulp
js
jnp
mov
and
cs
lcall
and
sbb
clc
dec
daa
pop
jl
and
sbb
push
xchg
mov
popf
push
jae
lods
scas
fwait
out
iret
mov
and
push
out
or
popa
out
jbe
inc
lret
mov
outsl
mov
adc
jg
setno
sbb
leave
imul
pop
enter
add
jge
jle
sub
mov
outsb
pop
ds
cwtl
xchg
xor
fidivrs
repnz
mov
jne
and
xchg
inc
adc
addr16
inc
out
xchg
in
sub
mulb
jg
jecxz
imul
xchg
subl
sbb
add
or
add
push
out
fidivrl
lea
test
mov
dec
add
aaa
arpl
mov
add
mov
pop
and
imul
add
call
outsb
mov
leave
mov
pop
mov
sti
ret
hlt
fwait
inc
pop
sbb
jbe
clc
adc
and
sbb
leave
test
inc
popa
xchg
div
in
dec
stc
dec
adc
and
adc
xor
testl
mov
mov
sbb
addr16
push
loope
xor
mov
insl
dec
mov
in
pop
mov
aad
pop
clc
bnd
fucom
cmp
leave
add
inc
cmpsl
mov
aas
fdivrp
add
and
js
pop
sub
and
int3
adc
test
sub
xchg
adc
sbbb
daa
mov
aaa
lcall
mov
mov
cmp
dec
sbb
int
mov
std
add
enter
cmpsb
dec
js
stos
push
xor
sub
mov
movsb
dec
sub
pop
std
mov
das
sbb
sbbl
gs
lcall
les
sahf
add
pop
mov
inc
insb
cmp
mov
and
fildl
ret
mov
jmp
mov
aad
pop
out
jno
aam
add
mov
mov
push
inc
in
dec
adc
xor
out
les
sbb
push
jbe
cmp
adc
xchg
sti
pop
mov
dec
mov
cwtl
in
decb
iret
push
in
cmp
add
rcrb
mov
clc
push
pop
repnz
jg
mov
push
sbb
mov
sarl
rcrb
mov
insb
out
rclb
into
inc
push
in
enter
imul
mov
stos
cmpsb
aaa
pop
push
daa
push
mov
mov
xchg
jle
ficompl
pop
lcall
jne
int
and
push
in
mov
xor
adc
xor
push
push
dec
data16
movsl
dec
sub
xor
adc
pop
mov
ficompl
outsb
adc
out
add
xor
outsl
push
adcl
imul
add
adc
xchg
push
push
in
push
icebp
data16
cmc
loope
fstp
aad
stos
jp
insl
dec
xchg
movsl
add
push
push
push
cmp
rcr
pop
pop
ds
mov
orl
jl
push
jge
xchg
fs
gs
fcomp
test
test
out
sbb
inc
loope
fcoms
push
push
pop
ret
cmp
xor
ret
jb
cltd
mov
sti
ret
sbb
cmp
sbb
es
shr
not
aas
ret
les
lret
lds
lods
add
std
ficoml
mov
mov
sbb
aam
gs
pop
cs
into
lret
aad
sub
push
sbb
jne
inc
jne
mov
daa
mov
cmpsb
sbb
jge
fcoml
jg
sbb
dec
jge
pop
dec
xor
data16
mov
inc
push
pop
push
sti
pop
and
addr16
mov
iret
jle
pop
fstpt
pop
lahf
rolb
iret
paddusb
and
mov
pop
out
cmp
test
imul
dec
stos
movsl
mov
scas
call
adc
aam
mov
pop
loopne
mov
fsubs
test
ret
add
xor
cld
sbb
les
xchg
dec
cwtl
out
xor
dec
call
in
cmpsl
stos
clc
lret
sbb
push
or
outsb
push
xor
pop
rcr
sub
fstpl
inc
xchg
mov
fadds
andb
push
cmpb
negl
add
mov
test
pop
xchg
das
pop
dec
mov
xor
cs
push
lock
mov
call
dec
in
sarb
rclb
adc
arpl
xor
adc
push
mov
ret
and
inc
in
arpl
mov
lods
incb
or
xlat
das
dec
mull
lods
ljmp
mulb
sub
or
lock
scas
jl
pop
xchg
ja
inc
jmp
jl
xchg
daa
mov
les
cmc
in
jb
or
enter
stos
js
stos
and
sub
jmp
mov
ret
mov
pushf
inc
cld
js
in
imul
arpl
dec
cltd
xchg
mov
fsubl
ficoms
push
mov
lods
sbb
sahf
jb
push
lcall
pop
das
cmpsb
cltd
sub
push
insl
loopne
test
stos
shlb
sar
mov
add
inc
fildl
mov
dec
push
ljmp
mov
mov
push
inc
add
lret
leave
dec
jecxz
inc
out
add
dec
jmp
xor
mov
pusha
sub
cmp
xor
and
cmp
iret
and
adc
mov
call
xchg
sbb
out
ja
mov
lret
insl
jne
fcmovnbe
gs
je
mov
pusha
mov
outsb
adc
popa
scas
ja
stc
cmp
mov
fstpl
in
cmc
cmpsb
fs
jae
or
sbb
adc
jmp
mov
icebp
push
sbb
add
pop
sbb
push
push
dec
shlb
add
sub
mov
mov
sub
nop
jmp
cmpsl
sbb
int
insb
mov
std
lock
add
jl
movsb
mov
cli
adc
add
jge
mov
movsl
and
add
or
cmp
and
pop
mov
mov
xchg
and
mov
and
jg,pn
lds
pop
inc
sahf
in
jg
clc
or
out
je
ds
lcall
add
xchg
mov
cmpsb
pop
mov
repz
jecxz
stos
mov
mov
shll
jmp
shrb
adc
adc
sub
sbb
stos
xchg
sub
ja
fwait
je
sub
inc
test
push
aas
dec
jnp
mov
ret
jns
xchg
les
add
push
pushf
shrl
cmpsb
jb
push
nop
add
and
fnstsw
mov
hlt
popf
xor
lret
clc
xor
enter
jb
push
les
pop
fistl
push
xorl
movsl
mov
sbb
outsl
cmp
fstpl
sbb
jns
ss
pop
dec
sub
ret
imul
fldt
fstl
fdecstp
xchg
mov
inc
out
in
mov
push
loope
mov
push
out
pop
push
sbb
icebp
adc
repnz
es
sbb
xchg
sub
push
arpl
addr16
in
cwtl
cltd
gs
ljmp
xor
js
nop
testl
mov
mov
fcmovb
popa
and
data16
jp
fisubrs
loop
xchg
xor
pop
mov
je
jecxz
pop
dec
sbb
pop
orl
mov
sub
cltd
jl
into
cmp
test
lret
push
inc
test
push
mov
aas
push
or
lret
rolb
cmp
and
mov
daa
mov
jae
sub
inc
roll
inc
mov
stc
push
shll
lahf
sub
mov
push
lds
loope
scas
jg
mulb
clc
test
pop
aam
ret
mov
loop
out
sbb
xlat
pop
xchg
jae
jbe
jecxz
faddl
aaa
mov
int3
fbstp
aam
and
loope
sahf
xorl
cmpsb
scas
data16
das
mov
push
outsl
iret
xorb
jl
or
cmc
bound
or
adc
add
stos
pop
or
cld
lods
inc
cmp
push
inc
lcall
adc
mov
jecxz
stc
nop
stos
out
add
jb
add
pop
mov
cmp
mov
sub
enter
jmp
adc
lret
inc
xchg
arpl
sbbb
mov
jb
loopne
int
sbbl
jnp
mov
and
loope
mov
or
push
scas
test
cmc
sbb
and
and
sbb
es
jg
mov
xchg
xor
jns
mov
aad
jecxz
mov
pop
jmp
aaa
les
out
rclb
lods
into
jl
in
insb
ret
test
mov
or
jb
jns
sti
cli
cmp
pop
idivb
xor
mov
push
pop
jg
out
ret
adc
test
inc
xchg
outsl
les
loop
popa
lea
mov
mov
imul
ret
sub
ss
in
out
mov
stos
scas
scas
shl
cltd
stos
push
inc
adc
fs
add
mov
insl
lcall
pusha
xchg
mov
adc
mov
lahf
shlb
gs
shll
lods
daa
mov
imul
popf
gs
inc
xchg
jae
dec
push
cmc
test
fs
jp
sbb
sub
push
pop
and
lahf
sub
xor
addr16
add
pop
sub
xchg
mov
push
jno
mov
cmpsb
pop
mov
aas
push
sub
jmp
int
jmp
in
mov
jmp
sub
pop
add
jp
mulb
popf
ds
insb
dec
push
cmc
into
xchg
jge
jb
pop
mov
mov
mov
sti
push
xchg
lret
idiv
jl
sub
mov
insl
dec
cs
jge
adc
dec
out
into
cmp
jle
rcl
mulb
sbb
andb
push
lods
jmp
stos
jmp
icebp
test
lods
adc
xchg
fisubrl
adc
imul
push
orb
test
sub
jb
or
mov
shll
rorl
ret
inc
adc
xchg
mov
xchg
test
cmp
mov
jge
mov
test
jnp
adc
popa
cmp
jle
fdivrl
cmp
imulb
add
loope
xchg
jmp
in
arpl
sarl
cltd
add
insl
test
cwtl
jg
sbb
sub
pop
outsb
push
insb
cld
and
xchg
jp
cmpsb
push
sahf
inc
dec
popa
pop
cmp
sbb
cmp
shlb
sub
mov
dec
ror
shlb
lcall
mov
fidivrs
test
dec
xor
shrl
xorb
lds
mov
inc
fisttps
divl
in
pop
inc
adc
cld
lods
xchg
lods
cltd
mov
mov
jmp
and
adcl
jb
dec
outsb
andl
ret
stos
sub
ds
adc
jns
flds
push
inc
into
aam
movsb
aam
ja
mov
into
pop
mov
arpl
inc
mov
inc
aam
sbb
dec
nop
push
jnp
pop
cmpsb
test
push
test
clc
or
add
mov
xchg
insl
jge
pop
into
and
cmpl
mov
jp
pop
xchg
adc
or
aas
in
loopne
inc
ljmp
cmpsb
xchg
shlb
push
movsl
jns
xor
push
push
test
xor
cs
or
ret
outsb
jns
rcll
mov
jns
test
mov
stc
nop
movsl
call
je
xchg
mov
push
mov
push
inc
fwait
push
lret
daa
pusha
dec
pop
sub
fwait
or
lds
jne
rol
pop
jmp
shll
sub
test
xchg
xchg
lea
xor
jnp
pop
mov
mov
mov
and
xor
pop
mov
int3
jp
jbe
mov
lds
cmpsb
xlat
sbb
mov
cmp
lahf
call
mov
sub
inc
call
insb
inc
cmp
or
dec
nop
iret
add
aas
ds
jns
filds
jnp
leave
in
and
shrb
rolb
sub
pop
adc
ss
push
lds
push
cmp
aaa
sub
adc
mov
inc
inc
mov
lods
mov
nop
js
addb
loopne
shlb
mov
xchg
mov
in
mov
xchg
xchg
scas
jnp
rcrb
jecxz
fcmovbe
xchg
call
inc
aas
sbb
insl
sbb
popl
movsb
bound
xor
adc
adc
enter
mov
add
fadd
jp
xchg
jmp
xchg
sub
popa
push
add
fisubl
ret
sbb
push
mov
lock
dec
add
ljmp
sub
mov
insl
and
or
aad
call
repnz
cwtl
inc
cmp
lret
and
fisubl
call
xchg
idivl
fmul
mov
mov
add
call
fcmovu
or
je
jb
pop
pop
gs
jb
imul
imul
jl
fs
adc
test
push
sbbb
inc
rcrl
les
into
push
stos
mov
mov
loope
mov
pusha
sub
sti
jg
rolb
lds
mov
cli
xor
lods
xchg
xor
mov
outsl
inc
add
ffreep
push
push
jmp
or
ljmp
cmp
cmp
mov
cmpsl
xor
push
adc
sub
rcl
loope
lea
or
mov
push
call
inc
inc
mov
mov
call
sub
fwait
leave
sbb
xchg
movsl
ds
pushf
imul
rcrb
outsl
and
jno
testb
pop
lods
xchg
add
in
insl
inc
fildl
test
inc
dec
divl
in
andb
mov
fwait
xchg
sahf
jmp
pop
mov
dec
in
mov
sbb
es
aad
cwtl
sahf
test
jnp
cld
mov
ljmp
out
jae
jmp
mov
loopne
rcr
test
hlt
aad
mov
push
clc
sbb
xchg
jne
dec
mov
jmp
mov
mov
sbb
jne
push
test
xchg
dec
pop
call
popf
loop
mov
data16
sbb
jo
fcoml
dec
xor
xorl
test
mov
push
mov
int
push
cmp
xor
stc
xchg
repz
ljmp
and
dec
xchg
mov
lods
jae
jg
dec
mov
xor
cli
fwait
decl
out
repnz
xor
gs
dec
mov
out
sahf
sbb
dec
and
adc
stos
dec
xchg
in
inc
sub
mov
fisttpl
jnp
xchg
add
pop
aad
in
push
out
mov
fisttps
shrl
scas
mov
cmp
lods
imul
push
data16
adc
sub
fxch
js
adc
push
dec
pop
jg
push
adc
sub
or
pop
inc
sbb
sub
dec
sbbb
gs
bound
lret
rcrl
out
fucomp
int3
imul
rcll
jb
hlt
test
pusha
sahf
pop
sahf
xchg
mov
pop
mov
mov
das
in
aas
sub
pop
rcl
cld
sub
out
test
dec
xor
and
test
outsb
shll
repnz
sub
cmpsl
cmp
mov
push
sti
jbe
or
orb
outsl
mov
test
inc
int3
call
pop
jle
int
dec
fisttpl
aas
neg
rclb
xchg
mov
mov
sub
xchg
fisubrl
mov
xor
jge
add
lods
jne
jo
xchg
insl
and
jae
gs
adc
notl
mov
mov
add
sub
xchg
or
inc
push
sahf
in
jnp
jp
subb
mull
push
inc
pop
push
sbb
or
in
and
mov
sub
mov
mov
inc
sti
push
push
gs
or
xorb
into
xchg
sub
cwtl
pop
or
mov
daa
pop
lret
mov
adc
push
mov
aaa
aam
push
jo
daa
iret
inc
lret
dec
loope
xchg
or
xchg
fcomps
sub
xchg
or
pop
dec
jp
ja
ret
add
mov
sub
arpl
movsb
sub
scas
lea
cld
add
push
adc
pop
jg
cs
repnz
dec
dec
xchg
mov
cmpsl
lahf
xchg
stos
xchg
orl
mov
mov
in
jo
int3
or
cmpb
sub
pop
arpl
jb
fsubl
sbb
cs
sub
stos
sub
or
loopne
sbb
rcrb
mov
jo
pop
mov
mov
inc
pop
int
in
pop
add
popf
cmp
mov
sub
pushf
pop
xorb
inc
add
jmp
mull
ss
cld
sbb
mov
leave
adc
aam
out
ret
mov
in
xchg
scas
sbb
loope
mov
test
and
rolb
xchg
mov
in
or
movsb
orb
inc
push
cs
xor
cmp
mov
mov
cmc
jno
xchg
sub
or
mov
mov
xchg
mov
insl
xor
repnz
ret
shlb
arpl
pop
xorb
sub
add
std
add
mov
repnz
mov
iret
pop
loope
xor
pushf
or
or
scas
xchg
enter
jns
and
je
sti
jg
jae
mov
mov
imul
fisubrl
fcmove
loop
iret
data16
mov
pop
jnp
xchg
inc
and
push
adc
jno
insl
fistps
xchg
jle
inc
pop
roll
mov
test
cmp
outsb
mov
adc
sub
decb
xor
inc
sysenter
jge
sahf
sahf
jno
andl
adc
inc
mov
sbb
xchg
imul
inc
xor
jmp
sbb
sub
enter
hlt
scas
jp
mov
movsb
cli
std
aaa
bound
pusha
test
fprem1
pop
jl
inc
sti
mov
pop
cltd
ds
pop
xchg
push
imul
shlb
xor
jbe
push
lcall
aad
add
std
std
in
and
inc
lea
lods
aas
sbb
mov
out
sti
je
cmp
mov
std
jno
xor
daa
hlt
dec
jnp
call
sbb
mov
push
and
int
sbb
fnstenv
sub
arpl
and
jo
das
das
and
aad
cltd
gs
cmp
loop,pt
or
es
mov
dec
imul
pop
or
add
iret
add
pop
or
std
add
jnp
pop
jne
lock
push
xlat
in
scas
rorb
xchg
jo
out
adc
xor
lods
idivb
mov
decl
pop
inc
pop
or
dec
add
test
dec
int3
push
rorb
mov
lods
xorl
js
dec
nop
and
loopne
sbb
xchg
cmp
insb
aaa
xor
mov
mov
xchg
cmp
cmp
test
out
dec
stos
notl
add
cmpsl
mov
push
test
clc
or
cmp
fsubrs
jb
cmp
into
std
int
sbbl
inc
lret
xchg
sbb
and
mov
pushl
and
jo
cmp
movsl
jnp
adc
adc
mov
mov
jo
xor
sbb
push
mov
mov
fdivl
pop
nop
cmp
push
jge
stos
dec
sub
push
rorb
lret
out
dec
push
out
pop
pusha
test
repz
sub
loope
fsubs
aad
dec
xor
inc
loope
popf
sbb
and
scas
cmc
jg
subb
cmp
sub
mov
push
mov
fwait
xor
mov
repnz
push
fidivrs
lock
faddp
add
xor
mov
les
fs
pop
stos
inc
cmp
fists
xor
sub
rcrl
add
in
push
or
into
adc
or
test
pusha
cmp
test
ja
leave
lock
ret
push
xor
adc
jl
adc
lea
push
or
mov
jne
adc
stos
lcall
xchg
das
aaa
stos
sahf
clc
mov
mov
mov
jne
cs
lods
imul
fiaddl
mov
mov
pop
fmul
fstpt
inc
in
push
int
sub
cld
jne
addr16
test
jno
aaa
add
mov
add
jl
aad
lea
bound
pop
or
inc
and
inc
test
add
push
push
shlb
mov
mov
xchg
xor
pop
and
push
cmp
stc
inc
dec
or
mov
push
out
dec
jg
repnz
sub
mov
add
nop
fistps
adc
sahf
loopne
js
mov
xchg
leave
add
movsb
add
notb
sbb
movsb
lret
aam
and
sub
outsl
xor
or
jno
cmp
out
loopne
push
mov
push
push
mov
xor
push
int3
cmp
sarb
je
pop
xchg
movb
cmp
jbe
inc
or
lea
scas
inc
jp
scas
hlt
xor
lret
cmp
jnp
xsave
pusha
dec
push
test
xor
pop
add
cmc
lock
outsb
loopne
hlt
mov
mov
push
sbb
sbb
dec
or
call
into
out
push
iret
sbb
add
rorl
inc
cwtl
arpl
push
data16
cmp
shl
jbe
push
ss
hlt
mov
jnp
mov
jmp
subl
mov
cltd
in
stc
cmp
mov
or
or
xor
ljmp
inc
push
jl
and
mov
das
out
push
push
xchg
and
sbb
jle
mov
and
cwtl
sub
dec
mov
mov
popa
add
cmpsb
jne
clc
mov
push
mov
mov
dec
add
ljmp
loopne
sub
dec
mov
call
xchg
xchg
imul
enter
mov
pop
popf
mov
and
repz
pop
fldenv
es
lds
push
imul
mov
sbb
dec
mov
lods
cmp
jle
lret
sbb
push
and
xor
ljmp
dec
loopne
or
imul
iret
cmp
pop
and
sbb
and
mov
xchg
dec
aad
xchg
push
idiv
pop
pop
cwtl
inc
icebp
sub
mov
xchg
xchg
push
stc
or
mov
jo
adc
gs
imul
push
lcall
pop
dec
lods
ret
mov
pop
jo
addl
mov
inc
sub
mov
jae
mov
loope
mov
sti
pop
inc
dec
lds
cmpsb
adc
shlb
loope
sbb
xchg
inc
je
cmp
notb
push
rcll
pop
xor
sbb
lahf
and
es
shlb
gs
scas
aaa
jmp
jae
ja
outsb
loop
call
js
ret
testb
dec
xor
clc
daa
mov
daa
test
fidivl
roll
pop
out
mov
pop
jne
lcall
jno
lret
fs
xor
dec
mov
decb
ret
inc
mov
stc
out
mov
daa
cmp
pop
clc
mov
inc
push
repnz
and
jle
pusha
movsb
pop
mov
imulb
rcrl
and
shlb
dec
test
and
bound
call
mov
add
and
arpl
push
into
dec
pushf
mov
fnstsw
loopne
test
push
add
subl
outsb
lods
adc
sahf
popa
sub
pop
add
out
fwait
push
push
or
movsb
dec
stos
rcll
neg
adc
pop
pop
scas
adc
push
scas
adc
pop
push
in
xchg
jnp
adc
ja
fisubs
pusha
mov
in
jecxz
cmp
sahf
imull
movsl
cltd
xchg
xchg
push
mov
mov
or
mov
fdivr
jae
aas
jns
int
mov
hlt
in
int
or
mov
cmp
aad
sahf
lds
inc
test
insl
movsb
cmp
cmpsb
pop
out
and
pop
add
cmpb
int
int3
sti
inc
and
addb
push
push
aad
stos
jl
popf
jb,pt
dec
mov
sti
les
std
push
les
and
mov
negl
push
icebp
pop
sub
or
or
pusha
rorl
xor
cltd
push
popf
testb
loope
push
aad
fidivrl
jmp
push
aam
out
cmp
ficoms
js
test
mov
pop
jb
mov
cmc
and
push
pop
push
add
cmpsl
jp
outsl
mov
push
cmp
push
xor
int
inc
insb
aad
dec
ror
imul
push
lahf
xor
mov
mov
ss
test
bound
lods
out
stc
mov
push
jmp
xchg
fiaddl
int
mov
push
arpl
add
movsb
pusha
push
es
aam
ljmp
into
sbb
stos
mov
test
dec
lds
or
movsl
fldcw
popf
shrb
push
fsubrs
in
add
out
sub
xchg
or
push
sbb
push
mov
jb
pop
scas
fisubrl
add
mov
bound
mov
fs
push
xchg
push
lock
repz
out
or
lds
mov
jne
mov
in
jle
cs
ror
bound
sub
fmuls
push
icebp
out
sub
inc
push
negb
ljmp
push
arpl
sub
stos
mov
iret
push
sti
sub
pop
out
and
lods
sbb
sbb
mov
push
pop
lret
fbstp
lock
adc
mov
and
stc
lret
cli
ljmp
int3
ret
aad
cli
popf
mov
testl
shll
mov
out
test
inc
lcall
subb
push
insl
jae
int3
jne
mov
test
lods
test
push
shlb
mov
jns
adcb
dec
jae
jmp
loope
mov
fidivrs
orb
mov
in
sbb
or
pop
test
mov
lahf
sub
clc
test
sbb
pushf
mov
mov
rol
push
xchg
out
scas
jp
jmp
andl
in
or
or
cli
pop
sub
adc
sbb
jnp
mov
and
or
fmuls
sbb
adc
adc
punpckhdq
jbe
add
push
outsl
adc
sbb
es
into
in
imull
jmp
test
loop
cs
jae
mov
sub
cmp
xorl
testb
mov
cmp
or
cmp
inc
cs
xor
mov
xor
es
xor
or
sub
inc
or
mov
fwait
leave
push
lods
ss
adc
mov
mov
hlt
xchg
mov
jne
ljmp
and
jg
cmp
push
int3
sub
out
in
dec
loop
pusha
fwait
pop
push
mov
adc
dec
inc
inc
pop
popf
cmpsl
xchg
in
adc
mov
add
lods
ret
bound
fnsave
or
das
jno
ret
fcomps
xchg
out
test
es
add
xor
rcrb
xchg
sbb
jge
add
dec
jnp
sar
pop
shll
inc
and
mov
mov
or
mov
mov
clc
mov
push
out
and
inc
push
pop
dec
jp
push
cli
pop
fsts
jg
out
sarl
mov
shl
xchg
movsb
or
mov
lret
mov
jno
cld
pop
cmpsb
filds
mov
aas
xchg
cltd
in
int
stos
add
xlat
pop
hlt
fbstp
adcb
les
add
orl
pop
xchg
mov
sbb
cmp
jns
aam
sets
xor
insb
subb
dec
sbb
mov
push
push
pusha
pop
cmpsl
sti
push
pop
cmpsb
sbb
repz
xchg
fadds
mov
add
pop
inc
clc
in
jmp
and
inc
sub
fisttpl
add
push
shr
xor
sbb
push
or
push
push
push
jb
mov
hlt
out
fwait
xchg
mov
addr16
lods
ret
das
xor
mov
dec
pop
cmpl
mov
mov
scas
mov
fnstcw
cmp
mov
into
xor
adc
fs
jbe
bound
test
std
arpl
insb
inc
lahf
cmp
stos
push
sbb
inc
cwtl
sub
nop
adc
test
jae
jnp
sti
inc
nop
cmp
xchg
jg
daa
pop
shlb
push
pop
cmp
xchg
aam
cmp
das
xchg
ss
iret
adc
stos
jbe
inc
repz
bt
push
subb
mov
mov
scas
cmp
addr16
jae
hlt
inc
push
xor
pushl
dec
pop
or
mov
adc
pop
cmp
insb
push
jge
and
movsb
and
imul
js
ja
xor
enter
xor
aas
ja
out
movsl
cltd
jmp
jle
xor
fiadds
mov
and
aaa
sub
xor
jo
add
rcll
clc
or
push
mov
outsl
and
push
pop
jb
inc
sbb
cmpsb
cmpsb
push
xchg
repz
add
mov
xor
add
test
mov
cmp
add
out
bound
fsts
or
sub
push
cmp
test
insl
scas
mov
mov
push
les
cmp
call
call
stos
clc
pop
mov
mov
jmp
daa
cs
jmp
into
jo
jp
test
sub
xorl
add
fwait
push
fidivs
jne
shrb
mov
cmp
xchg
sbb
push
sbb
in
cld
mov
shl
add
add
push
push
mov
fwait
mov
mov
xchg
loope
adc
iret
jp
aaa
sbb
mov
rcl
push
jb
div
mov
xor
or
ds
adc
data16
xchg
or
add
out
mov
cmc
cmp
cwtl
cmc
pop
xor
xchg
dec
repnz
pushf
cltd
sbb
pop
mov
call
push
ss
mov
in
or
mov
pop
dec
sahf
mov
nop
fnstcw
clc
sub
cs
inc
mov
cmp
push
sub
jl
xorb
lds
js
xchg
fwait
cli
sbb
sub
dec
jg
fcmovnb
mov
mov
cmp
cli
fsub
pop
jne
lahf
movsl
or
add
sarl
lret
push
adc
hlt
xor
mov
aam
mov
shll
test
stos
mov
push
sahf
mov
mov
push
leave
pop
mov
loop
sub
pop
imul
lret
daa
out
or
mov
dec
inc
cmpb
les
jo
into
adc
rdtsc
out
repz
out
bound
sbb
call
mov
test
shrl
das
sub
out
xchg
xchg
or
in
test
add
dec
into
jne
push
mov
movsl
inc
jo
adc
push
movsl
pusha
add
inc
call
sub
cwtl
xor
iret
and
jge
leave
jecxz
push
lret
int3
jae
or
inc
mov
cs
inc
or
xchg
dec
iret
lds
lcall
rclb
daa
cltd
mov
stos
cld
sub
and
xor
pushf
mov
sub
jns
ds
leave
lea
add
je
mov
fmulp
cmp
pop
pop
fldl
mov
mov
jbe
push
jmpw
in
lds
in
and
rcl
aaa
daa
jbe
and
aad
sub
test
mov
fcoms
rcl
jo
leave
std
inc
mov
mov
ffreep
stos
insl
hlt
inc
cmp
in
popa
mov
aad
jno
std
push
pop
pop
mov
andl
mov
dec
rsqrtps
lods
xchg
inc
sbb
mov
fnstenv
adc
xor
pushl
xlat
gs
clc
dec
mov
es
imul
mov
jne
push
inc
xchg
gs
out
sbb
sbb
adc
jns
adc
negl
sbb
popf
lret
mov
xchg
fcoms
cmpsl
in
add
sub
xor
idivb
popf
and
xor
lahf
jl
cmp
cwtl
adc
out
mov
decb
inc
adc
mov
mov
adc
sbb
sub
mov
adc
pop
pop
mov
fadds
nop
test
insl
out
call
fadd
and
mov
sub
ss
and
repnz
sbb
movsl
addr16
lret
pop
sbb
mul
dec
xchg
xchg
in
iret
and
jl
mov
fbld
sahf
lods
ret
test
push
add
les
jbe
xchg
and
cmp
jle
push
pop
bound
sub
fldenv
inc
add
adc
in
pop
jle
loop
push
into
xchg
aad
sub
xchg
movsl
aam
int3
and
jae
jl
xchg
xor
xor
xor
adc
stc
xor
or
push
cwtl
xchg
adc
in
xchg
fs
sbb
mov
pop
sub
mov
sub
push
ss
cmp
incb
mov
inc
movsb
adc
mov
mov
les
jle
xor
data16
mov
arpl
cmp
xchg
sti
lcall
jnp
addr16
inc
inc
sahf
mov
pop
xchg
loop
cmp
inc
arpl
cld
test
add
mov
or
lods
push
sub
pop
outsb
lahf
insb
inc
push
int
daa
fsubrs
sbb
mov
sub
or
xchg
imul
dec
cmpsb
mov
insl
fnsave
pop
or
pusha
rorl
sbb
pushf
clc
cmp
orb
lahf
xchg
stc
xchg
xchg
dec
repnz
cltd
mov
sub
cld
push
js
in
push
into
stc
aaa
mov
subb
xor
cmp
ret
repz
cmp
fcomip
cwtl
xor
sub
add
testb
lret
fistps
inc
int3
imul
lcall
addb
jmp
lods
mov
dec
xchg
jg
xor
adc
jno
sbb
sahf
mov
iret
xchg
mov
mov
push
adc
xchg
and
xor
mov
mov
lds
mov
pop
mov
add
push
movsl
dec
ljmp
mov
push
mov
sub
xor
in
int
push
dec
or
dec
aaa
rclb
jbe
loopne
or
inc
lods
out
mov
dec
int
movsl
cwtl
int
flds
jecxz
lds
add
nop
cs
push
or
je
push
sbb
mov
xor
jae
push
stos
jle
sub
xor
or
sti
xchg
aaa
dec
add
js
add
aaa
add
inc
ds
inc
addr16
mov
sbb
jmp
mov
pop
cmc
jno
sbb
insb
shl
sub
or
add
ficoml
pop
movb
hlt
jmp
mov
clc
sub
inc
stos
sub
xchg
dec
in
pop
mov
cwtl
in
cwtl
jle
pushf
pop
test
xor
jb
and
xchg
inc
jge
scas
lret
ds
mov
loop
push
stos
leave
pop
xchg
shlb
push
or
shll
sub
jne
or
rcr
nop
dec
jno
xor
lret
or
popf
insb
test
movsl
add
shrl
clc
vmovq
ret
lea
pop
dec
lcall
xchg
xor
push
lods
lock
or
cmc
and
inc
lcall
and
js
xor
dec
sti
roll
ja
sbb
hlt
fmull
and
xor
xor
test
hlt
lcall
pop
popa
insb
aad
fs
push
or
clc
aas
loop
test
clc
inc
pop
adc
mov
and
mov
mov
repnz
sbb
sub
mov
adc
gs
loope
das
inc
rcll
jnp
ds
and
mov
icebp
ljmp
jo
cli
sarb
lcall
jne
push
mov
test
mov
aas
scas
ljmp
movsb
mov
aad
andl
dec
mov
and
mov
mull
cmp
mov
add
sahf
xchg
jle
scas
push
scas
movl
fdivl
pop
or
int3
mov
push
in
popa
imul
add
pop
aaa
sbb
mov
lcall
jecxz
and
aaa
in
lea
lahf
sahf
rcr
sbb
sub
fisttps
or
fs
cmp
mov
jmp
les
push
mov
lods
xor
xsha256
cmpsb
push
aad
dec
fs
or
popf
test
pusha
inc
cmp
popf
popa
ret
xor
jmp
in
or
sub
and
lock
inc
test
push
enter
mov
mov
imul
fiadds
lods
int3
andb
mov
repnz
push
jecxz
loopne
mov
popf
inc
mov
arpl
jno
jmp
mov
mov
gs
ret
and
out
and
pop
fisubs
loope
jo
ljmp
fmuls
js
push
push
stc
rclb
mov
loopne
lahf
stos
ret
pusha
shr
out
jno
pop
sub
scas
dec
xchg
jle
xor
test
orb
dec
mov
sbb
aam
rcl
dec
pop
and
xchg
loope
xorb
out
and
xchg
mov
sarb
mov
stc
ror
inc
inc
jecxz
or
lret
vmovmskps
or
cwtl
or
mov
leave
test
popf
dec
sub
in
int3
cmp
cmp
lds
inc
pop
bound
adc
jne
mov
mov
mulb
test
rorl
xor
dec
ud0
xchg
xchg
mov
mov
cld
pop
xor
in
arpl
mov
pop
imul
lods
pop
inc
xchg
stos
dec
bound
shlb
or
pop
out
stos
int3
aaa
in
lcall
std
mov
fcmovbe
cld
jg
jne
inc
xor
mov
mov
into
decl
mov
cld
jge
shr
jo
popf
decl
inc
mov
mov
outsl
xor
adc
jp
sbb
xchg
sub
xor
out
ss
xor
inc
jno
sahf
stos
xor
stc
shll
or
lcall
and
sub
lods
bound
push
xchg
sbb
dec
loop
xchg
push
dec
cld
imul
dec
xor
lds
ja
pop
fnstenv
repz
adc
ss
sarb
lds
call
mov
jecxz
push
sar
xchg
xor
movsb
mov
rcrb
lcall
jg
andb
insl
ds
bound
loope
inc
mov
fdivrs
mov
adc
push
cmp
jnp
lcall
lcall
push
pusha
or
rcr
xor
jmp
fisubs
xchg
adc
mov
and
out
jmp
enter
push
cmpsl
test
xor
xor
popl
test
inc
test
adc
mov
mov
mov
pop
jnp
repnz
jg
pop
cmpsb
sub
sbb
int3
movsb
mov
inc
stos
fsubl
jnp
dec
das
rorb
mull
jp
pop
aaa
nop
out
ret
xchg
and
hlt
push
mov
in
or
insb
sub
stos
in
push
jecxz
icebp
and
push
stc
mov
push
pop
mov
stos
dec
andb
sbb
jns
lds
sbb
loope
pop
sbb
jle
dec
lret
xor
adc
push
stos
xor
repnz
lods
imul
lahf
push
test
outsb
inc
aam
lret
mov
test
rcrb
and
daa
adc
push
cmpb
mov
out
out
fldenv
sbb
xor
cmpsb
cmpb
push
sbb
cltd
call
mov
hlt
outsl
sub
xchg
stos
outsl
mov
cmpsl
pop
jne
pop
mov
pop
sub
push
dec
fwait
mov
pop
sub
lret
js
jecxz
aam
mov
lahf
jno
xchg
xor
lcall
cli
xchg
cld
cs
ret
rep
mov
push
adc
je
popa
das
data16
shll
pusha
mov
mov
mov
jge
js
pushf
aas
fiadds
mov
subb
enter
sub
xchg
pop
loop
cltd
in
adc
pop
loopne
fsubrl
mov
fimuls
shl
pop
and
je
imul
adc
push
push
lds
add
jo
scas
aaa
add
cld
nop
mov
pop
sbb
lods
push
sbb
ret
pusha
mov
and
sarb
push
neg
or
xchg
aaa
mov
xchg
pop
jg
mov
jg
pop
adc
sbb
jns
ja
pop
ret
sub
movsl
sbb
or
push
or
out
ja
add
pop
or
orl
cmp
xchg
xchg
inc
aaa
ret
jmp
nop
sub
push
and
icebp
pop
cmp
divl
in
arpl
pusha
scas
lcall
and
mov
xor
lcall
or
cmp
pop
fcomp
adc
mov
sbb
fidivs
loopne
lds
mov
hlt
inc
loope
add
sti
pop
out
fcom
pop
inc
sbb
cmpsl
fdiv
mov
mov
test
aas
push
mov
sti
les
mov
or
pop
xlat
ss
jle
inc
les
shrl
mov
and
jp
dec
lods
fptan
inc
mov
add
lahf
inc
test
fisubs
or
es
and
loope
mov
adc
dec
mov
dec
aas
imul
mov
mov
out
xchg
iret
call
pop
hlt
mov
or
pop
jno
repnz
ljmp
fidivrs
sbb
xlat
div
adc
sub
imul
and
lds
pop
data16
movsb
or
push
js
jns
xchg
push
mov
mov
mov
sbb
ret
jne
pop
test
mov
out
push
insl
and
dec
enter
scas
pop
mov
xchg
sbb
cli
and
jnp
insb
mov
ja
dec
frstor
pop
icebp
out
jb
jmp
mov
insl
stos
imul
lret
add
les
movsb
aam
in
lds
adc
leave
cmp
ss
fwait
subl
jne
lcall
movsl
jo
cmpsl
adc
push
mov
jns
in
mov
dec
or
icebp
mov
fwait
sarl
orl
fsts
scas
dec
sub
xchg
inc
add
xor
xchg
aas
filds
mov
dec
lahf
and
mov
jbe
xlat
push
test
mov
pop
sub
hlt
push
push
loope
add
mov
mov
dec
jp
push
ja
in
fwait
mov
jge
sahf
in
xlat
ret
xlat
mov
test
xchg
sbb
in
mov
bound
xor
xchg
sahf
jmp
cmp
push
xor
popa
or
repnz
fwait
aad
cld
daa
dec
dec
fmuls
dec
inc
js
pop
add
and
lods
add
call
dec
push
dec
push
cmpsl
lods
jecxz
mov
das
ficoml
cmc
jmp
inc
mov
jno
das
rolb
jns
push
shll
ret
in
fcmovbe
in
and
push
xchg
inc
and
jmp
and
sub
pop
lret
repz
sub
cmp
mov
lods
mov
jg
rcrl
add
xchg
add
les
dec
xlat
orb
dec
lcall
daa
sub
testl
fcmovnbe
sub
inc
mov
mov
xor
inc
sbb
mov
cmp
add
cmpb
js
push
add
jbe
push
aaa
into
arpl
imul
fldenv
lods
popf
dec
sbbb
or
jnp
lcall
fcmovnbe
mov
aas
or
dec
jecxz
or
test
inc
into
sub
in
xor
imul
jl
dec
jb
mov
mov
sbb
pop
outsb
push
stos
push
cmp
inc
jg
sbb
pop
data16
movsl
ja
roll
fcoml
out
sub
cmc
mov
dec
dec
and
call
dec
mov
aas
jbe
je
mov
and
aaa
jo
icebp
and
call
aad
mov
out
repnz
add
and
inc
fistl
and
test
push
pop
cmp
mov
adc
inc
xor
shr
jne
fwait
push
mov
xor
mov
rcrl
test
xor
loope
mov
dec
mov
pop
out
lahf
lahf
sbb
aaa
jl
mov
lahf
fmull
jmp
jle
stos
mov
cld
jp
pop
cwtl
push
mov
cmp
cmp
jne
add
outsb
lret
aam
or
dec
fwait
popf
int
xor
sbb
push
idivl
cmp
cltd
outsb
jmp
cmp
and
iret
jmp
divb
in
mov
mov
sub
push
insl
std
stos
sub
pusha
bound
xchg
into
ja
test
pop
xchg
lahf
fistps
sbb
subb
dec
sar
cmpsl
inc
and
das
aaa
daa
xor
inc
cmp
imulb
repz
outsl
jne
pop
xchg
push
xchg
pop
pop
xor
fcoms
xor
mov
rorl
fstpt
or
lods
add
inc
mov
lcall
sub
cmp
insb
xor
ljmp
sub
xchg
and
sub
cmpsb
aas
repnz
pop
fsubrs
mov
jo
dec
shr
and
repz
cmp
dec
sub
dec
xchg
arpl
out
pop
sbb
fildll
aaa
mov
sub
aas
mov
stos
mov
lods
rcrl
pop
and
or
jae
xchg
lods
lahf
sahf
push
xor
or
dec
jo
dec
into
lcall
lods
pop
sbb
add
jns
ret
inc
dec
ds
jae
add
push
mov
jbe
dec
sbb
cmpsl
aad
scas
pop
pop
push
aas
fnstenv
rcrl
mov
hlt
push
sbb
subl
std
xor
call
push
dec
fnstenv
sbbl
mov
das
out
mov
push
sbbl
inc
sub
or
ja
scas
inc
jge
jbe
cld
mov
mov
fsubrs
dec
push
aam
out
xchg
xor
pop
adc
ret
mov
mov
jge
mov
cmpsl
inc
dec
cmc
loopne
inc
inc
cld
cltd
lock
inc
inc
sub
out
aad
pop
inc
push
lods
scas
pop
or
add
ja
mov
push
imull
shl
inc
mov
pop
jge
pop
adc
pop
fisttpll
mov
mov
xchg
mov
incb
ja
lock
jns
jne
xor
dec
adc
test
shll
sbb
cwtl
adc
sub
roll
xor
cmpsl
push
or
pop
insb
adcl
lods
pop
xorb
xor
and
mov
ret
lahf
mov
repz
dec
test
jl
out
movsb
dec
sbb
loope
popa
loopne
fwait
pop
gs
xchg
cs
movsb
scas
shll
adc
inc
iret
or
aam
sbb
std
pop
jo
imul
data16
shl
inc
push
and
out
fcoms
cmpsl
popa
sbb
outsl
lods
or
adc
cld
inc
push
mov
mov
loop
pop
add
call
stc
inc
jg
ljmp
sub
xchg
cmp
mov
push
imul
and
jne
pop
ret
adc
mov
pushf
push
gs
cmp
xchg
outsb
mov
xchg
mov
andl
pop
je
push
inc
push
fiaddl
add
mov
incb
adcb
xchg
mov
push
aaa
rol
pop
push
xor
ficompl
popf
ja
ds
pop
ret
aad
repz
les
int3
inc
repz
or
rcll
xor
inc
fidivs
inc
xor
or
daa
fucomip
rclb
jge
outsl
cmpsb
arpl
inc
dec
lret
jo
adc
ret
or
repnz
mov
cltd
outsl
add
or
adc
aas
xchg
cmp
pusha
push
stos
ljmp
xchg
test
push
rcr
mov
fildll
dec
or
jb
push
cltd
jne
sti
or
out
inc
mov
into
cmc
mov
adc
loop
ljmp
mov
push
fs
sub
mov
repnz
or
fcmovu
sub
jp
sti
dec
pop
pusha
mov
mov
shrl
scas
stc
test
out
push
sahf
sbb
push
insb
lret
xchg
adc
test
push
push
inc
inc
fs
jbe
xchg
push
sub
frstor
aam
pushf
inc
dec
mov
jp
fiaddl
adc
inc
outsb
lea
push
adc
mov
xor
in
lcall
sti
cwtl
mov
mov
jge
out
mov
fistpll
in
sbb
and
and
iret
or
repz
shrl
cmpsb
dec
xor
test
xor
cld
aam
push
insb
arpl
pop
mov
aad
sbb
cmp
iret
ljmp
int
mov
xchg
sbb
sub
loopne
jmp
fsts
mov
fdivl
js
xchg
cltd
or
adc
mov
call
lret
repnz
imul
push
push
in
pop
loopne
mov
xchg
ss
mov
and
mov
jb
mov
jnp
lcall
cs
mov
inc
int3
xor
inc
fxch
and
movb
mov
fimull
inc
test
rol
arpl
call
in
pop
clc
jb
cmp
fwait
mov
aad
fwait
mov
arpl
arpl
test
addr16
aaa
enter
cld
rcl
jo
push
sti
mov
cmp
out
sti
or
add
pop
dec
jne
mov
cld
inc
mov
scas
shll
mov
push
loop
cmpsl
sub
or
jg
call
sbb
jo
pusha
jp
ss
rclb
dec
adc
cmp
cmpsb
add
adc
mov
mov
mov
adc
cmc
jmp
mov
data16
repz
pop
rcrl
add
aam
pop
adc
dec
mov
sbb
jne
imulb
xchg
mov
sbbb
mov
inc
jmp
popf
mov
xchg
cmp
shrl
cmp
lahf
mov
popf
inc
sbb
icebp
fcomi
or
rorb
lods
or
subb
jmp
sub
push
add
dec
addl
loope
std
dec
outsl
add
movsl
sahf
xlat
inc
mov
sub
mov
subl
adc
popf
pop
cwtl
leave
in
push
or
push
repnz
add
cwtl
pop
mov
movsb
imul
mov
fs
arpl
mov
xor
sbb
hlt
ds
clc
sub
fidivrs
pushf
je
pop
aam
or
xchg
cmp
fstl
arpl
xor
std
idiv
xor
stos
xorb
pop
sarl
fldl2e
clc
jo
xchg
lods
sti
add
xchg
adc
aas
test
add
lahf
sub
sub
jge
jns
arpl
mov
push
outsb
pop
jae
aad
int3
imulb
adc
gs
sub
stc
testb
push
add
mov
repz
imul
jmp
lret
pop
pop
fistpll
xchg
lods
fdivr
xchg
repz
sub
popf
cwtl
jno
mov
add
jge
xchg
test
mov
fbstp
xchg
shll
sahf
cmp
jle
cmp
mov
dec
mov
push
pop
neg
lds
sub
inc
mov
outsl
pop
gs
addr16
add
or
pushf
ss
sub
in
rcrb
mov
popa
push
inc
out
movsl
call
ret
mov
out
adc
mov
jb
je
fistpl
mov
xor
scas
call
or
dec
mov
icebp
jnp
sub
jmp
fadd
and
in
push
xchg
adc
inc
push
lahf
inc
cmpsl
and
mov
pop
sub
xchg
or
pop
test
fstl
outsl
mov
mov
pop
vphsubwd
or
push
mov
mov
pop
mulb
fimuls
cmpsb
cld
insl
jnp
mov
adc
es
call
adc
add
sub
xchg
lods
and
cmp
xor
hlt
push
popa
fsubrs
testl
fwait
push
ja
dec
scas
ror
sub
jl
nop
imul
add
push
int3
pop
mov
mov
out
inc
xchg
sbb
push
arpl
adc
pop
or
gs
xlat
insb
and
rol
jg
or
stos
jbe
inc
xor
mov
fs
dec
mov
sbb
jl
into
xor
lods
inc
out
les
nop
cmp
sbb
adc
sbb
dec
xchg
cmp
test
lea
nop
std
jbe
cmp
mov
dec
adc
jb
fmul
cltd
jb
sbb
enter
jmp
ss
sbb
add
cmp
xor
lret
fdivrl
cli
xchg
insb
mov
enter
sub
sahf
adc
clc
adc
in
inc
mov
leave
cwtl
sub
sub
jl
adc
cmpl
xor
cmc
jmp
adc
sarb
or
dec
dec
rcl
xchg
cmpl
sub
rdpmc
cmp
mov
lret
cld
mov
dec
jge
mov
negb
xchg
jne
dec
es
fcos
nop
cld
pop
pop
sar
or
mov
aas
sub
pushf
iret
cmp
cmp
leave
jp
loop
inc
dec
ja
jo
stos
adc
mov
dec
repnz
sbb
mov
stc
test
dec
xlat
fimull
jge
aaa
mov
adc
jg
xchg
mov
aaa
dec
cli
mov
push
mov
inc
sbb
pusha
push
out
stos
mov
iret
mov
aaa
and
push
sbb
mov
shll
jae
adc
sbb
or
out
repnz
dec
stc
inc
inc
xchg
xchg
je
filds
movsl
stos
sar
iret
dec
cmc
nop
cmp
and
mov
cli
mov
xor
arpl
and
das
push
inc
jnp
xchg
das
iret
xor
xchg
or
je
sbb
jg
mov
dec
pop
pop
mov
dec
mov
jmp
mov
fsubs
and
clc
scas
pushf
imul
jl
jmp
pusha
movsb
cmp
fstpt
mov
mov
decl
inc
add
inc
cld
xchg
jg
xor
mov
scas
push
dec
inc
sub
push
sub
jg
nop
notb
je
movsb
sub
bnd
jae
inc
adcb
mov
inc
xchg
arpl
xchg
mov
dec
dec
int3
xchg
in
pop
mov
adc
repz
mov
into
sub
push
xchg
out
leave
sub
ret
daa
cld
mov
mov
xchg
mov
out
neg
and
jl
jo
mov
and
add
cltd
lea
pop
cmp
sub
mov
sub
in
mov
or
push
lahf
push
ds
dec
fisubs
in
jae
and
fldcw
pop
pop
fnstcw
fwait
xchg
jp
aam
loopne
repnz
aam
sub
dec
lret
sbbb
push
jo
js
loopne
cmp
daa
into
clc
pushf
lods
push
bound
lods
movsb
scas
clc
popf
int
sbb
push
cmp
in
std
fisubrl
test
sbb
mov
and
or
outsl
pop
clc
test
cld
mov
or
adc
and
or
rcr
cld
fidivrs
lock
subb
out
jne
or
dec
and
call
sub
addr16
jmp
inc
out
sbb
outsb
mov
gs
add
inc
es
les
out
ljmp
into
cmpsl
inc
pop
jp
inc
orb
adc
out
cmp
adc
mov
out
xchg
lret
insl
cld
adc
sbb
mov
insb
mov
push
sbb
fistps
push
pop
insb
incl
jne
mov
imul
cmp
push
mov
or
or
test
cmp
out
aas
iret
iret
mov
les
fnstcw
outsl
lret
into
adc
lock
incb
in
paddsw
cli
in
pop
and
int3
or
xor
fcomi
cmp
sub
fldt
cmp
stc
shr
js
pusha
push
and
cli
aas
add
sarb
inc
mov
push
sub
push
loopne
and
xchg
lret
and
sarl
dec
jle
jge
cmc
xchg
aad
jge
je
imul
lock
cmp
rolb
pop
add
test
mov
das
inc
cmpsw
add
mov
fs
pop
mov
add
cmp
pop
fldl
mov
jge
hlt
inc
jae
ja
insl
out
leave
cmp
jge
call
pop
sbb
out
mov
cs
sbb
mov
ffree
fidivrs
jbe
stc
bound
daa
sbb
ficomps
std
xor
sbb
sbb
mov
sbbl
xor
jmp
aas
loopne
shlb
sub
mov
sahf
lods
inc
test
into
pop
aaa
and
test
je
xchg
pop
jo
jae
adc
lahf
and
adc
mov
leave
dec
xchg
cmp
inc
add
movsb
movsb
rolb
mov
jp
std
cld
jg
js
and
mov
iret
pop
add
xchg
and
xchg
cmp
pop
sub
imul
dec
into
shl
adc
xor
inc
jne,pt
cmpsb
dec
mov
push
movsb
push
in
dec
sub
sti
cltd
xchg
cli
lods
lcall
mov
dec
adc
push
sbb
and
push
push
add
dec
dec
lret
inc
int3
sub
daa
jnp
cmp
js
ss
jge
mov
mov
pop
cmc
xor
pop
dec
mov
lahf
pop
mov
cmp
mov
mov
cmc
xchg
sbb
int3
imul
inc
mov
imul
adcl
mov
adc
dec
rorl
and
xchg
sub
pop
cmp
js
dec
data16
and
sub
adc
clc
adc
jnp
jbe
ljmp
adc
adc
mov
pop
scas
adc
cltd
or
push
lods
popf
addl
xchg
mov
cmp
lret
mov
xor
nop
out
mov
xchg
out
test
jp
add
xchg
sub
lret
movsl
push
lock
push
sub
mov
inc
and
js
push
lret
rcrb
mov
mov
in
or
movsl
int3
gs
lret
fidivl
pop
data16
out
or
inc
and
popf
mov
mov
xor
aam
and
jb
mov
and
dec
iret
dec
pop
test
enterw
or
mov
inc
xchg
imul
sub
mov
jo
lock
or
jecxz
lret
es
inc
lahf
nop
mov
mov
int3
iret
test
mov
imul
mov
inc
loopne
push
mov
inc
push
mov
lahf
nop
out
jle
ffree
iret
in
imul
add
jnp
jle
or
xchg
pop
mov
and
push
jnp
mov
mov
mov
cmc
sbb
xor
jmp
push
sub
jp
loopne
xchg
imul
mov
icebp
in
imul
push
scas
and
mov
jle
sbb
sbb
adcl
add
lods
scas
pop
imul
call
jmp
cmp
int
ljmp
mov
sub
lret
xor
ret
lahf
test
push
sti
lahf
adc
sarl
mov
inc
add
cld
out
jbe
ret
lret
cli
out
icebp
xchg
xchg
mov
sub
or
mov
into
add
cmc
data16
roll
mov
add
loopne
or
fstl
xchg
fdivl
ljmp
or
mov
enter
bswap
dec
inc
mov
push
fs
scas
mov
aaa
into
pop
xchg
mov
shlb
xorb
mov
cmp
inc
rcpps
push
scas
ss
mov
push
and
xchg
outsl
ds
jo
add
inc
jmp
pop
out
adc
inc
push
jmp
stos
divb
xchg
lods
jle
mov
mov
aad
pop
jne
and
inc
adc
cmp
insb
cwtl
rcrl
ret
mov
dec
scas
movsb
jg
imul
cwtl
and
push
leave
jecxz
jecxz
test
mov
add
adc
inc
add
cmp
cmp
and
dec
dec
ljmp
mov
jns
fldl
into
inc
pop
out
lret
mov
dec
daa
cltd
sub
imul
loop
aas
in
das
add
test
xchg
sbb
lret
mov
cmp
adc
xor
orb
iret
pop
pop
in
test
rclb
pmuludq
ljmp
out
xlat
sbb
mov
rol
jbe
in
push
stos
sub
inc
data16
pop
pop
xor
insl
call
mov
enter
loop
divl
sbbl
lods
or
push
shrb
fdivrs
cmc
pop
out
outsl
aam
aam
push
push
lods
pop
jb
pop
cmp
cmp
jno
out
or
not
mov
sarl
andb
stos
adc
ja
jmp
ss
sub
inc
enter
xor
mov
scas
and
mov
ljmp
push
xor
arpl
mov
mov
in
lahf
scas
lds
rcrl
jne
jbe
or
adc
sub
daa
push
pushf
mov
setl
flds
pusha
loope
mov
enter
stos
shlb
mov
int
add
xor
lcall
punpckhwd
adc
aaa
jb
push
dec
xchg
lock
in
sub
outsb
sbbb
sub
or
or
loopne
repz
push
call
lock
sub
loope
sbb
xchg
out
and
push
inc
fisttpll
push
xchg
mov
addr16
push
shll
stos
pop
fcomps
mov
inc
daa
sbb
add
outsl
ss
inc
pop
scas
clc
movsb
out
idivl
testl
pop
cmp
cld
ret
cmp
and
popf
jg
pop
jb
out
aam
lods
daa
popa
jno
loope
into
imulb
pop
mov
cmp
lods
inc
stos
push
imul
out
xchg
cmpsl
iret
and
push
mov
jp
out
mov
aas
mov
add
or
mov
sub
lret
lods
pop
xor
test
xchg
xchg
xor
mov
lods
ret
mov
cmc
xchg
or
out
arpl
dec
lahf
xlat
leave
or
pop
jmp
mov
or
ret
cmp
je
inc
test
dec
and
fisttps
xchg
enter
mov
test
adc
rorb
cmp
xchg
sti
push
dec
fmulp
mov
fwait
sarb
xor
xchg
push
rolb
adc
jae
and
lock
je
je
jb
or
ret
movsl
xchg
inc
in
sti
adc
jb
xchg
jmp
repnz
insl
mov
and
and
je
xorl
dec
mov
jl
push
ja
test
mov
cmp
pushf
decl
dec
stc
and
rorl
mov
cmpsl
imul
xchg
leavew
add
subb
pop
or
nop
push
rol
dec
mov
scas
inc
pop
jle
fwait
inc
sub
pop
xchg
sbb
xchg
xor
inc
adc
dec
mov
push
jmp
cmpsb
pop
and
or
dec
jp
and
jae
les
les
mov
xchg
cltd
inc
and
adc
fcomip
inc
into
scas
sbb
in
loop
sub
mov
ja
lods
enter
xchg
jbe
dec
jnp
clc
cwtl
das
mov
xchg
jbe
jo
add
daa
xchg
xchg
sarl
cmp
sbb
fcmovnu
cmp
stc
fcmovu
out
outsb
pushf
aas
rolb
aaa
addb
sub
lds
shlb
add
sub
mov
xor
dec
dec
mov
adc
mov
push
lods
out
shlb
dec
test
cmpsl
ret
cwtl
mov
pop
cltd
bound
xchg
fs
mov
icebp
adc
mov
fadds
and
das
pop
sub
mov
pop
lret
cmpsl
push
ja
int3
test
push
loope
ret
push
packuswb
push
mov
push
or
fidivrl
sub
popa
adc
imul
test
or
pushf
std
ljmp
repnz
jecxz
insb
mov
inc
fildll
xchg
add
mov
jne
int3
or
mov
sbb
dec
ja
in
ja
xor
cmp
aam
movsb
mov
and
jno
xor
popf
fwait
popf
test
aaa
adc
imul
inc
aas
dec
dec
push
add
das
pushf
add
mov
and
pop
xor
dec
or
jmp
xor
dec
lock
adc
dec
insb
mov
in
in
add
movsb
inc
ja
fmulp
and
add
xchg
fisttpl
or
fwait
jl
xor
rcll
lods
negl
and
sub
cmp
xor
fs
add
jg
fs
jae
xchg
xchg
push
add
aad
inc
mov
je
push
xchg
xchg
mov
mov
jb
xor
sbb
cmpsb
add
xor
jmp
out
pop
jmp
jbe
push
adc
loopne
imul
mov
jne
push
mov
imul
outsb
in
inc
sub
call
add
mov
add
mov
jnp
cld
jl
jno
enter
outsl
sbb
sbb
in
xor
adc
scas
mov
xor
rclb
repnz
pop
out
push
cmp
aad
iret
fisttpl
or
adc
inc
outsb
push
cmpsl
int
add
cmpsl
mov
xlat
shlb
push
les
xor
dec
mov
les
lret
mov
mov
add
test
and
in
jnp
xchg
dec
hlt
mov
mov
test
bound
mov
roll
add
sbb
jne
jns
imul
shrl
jmp
xchg
les
addr16
into
pop
clc
adc
push
and
mov
sbb
and
aam
xchg
loopne
test
jl
movsl
cmc
fmuls
xchg
sub
sub
es
inc
scas
mov
cmc
mov
xchg
jp
xor
mov
and
into
pop
adc
outsl
sbb
popf
nop
lock
sahf
ja
push
cs
test
pushf
push
pusha
leave
add
inc
push
jno
incl
mov
xchg
pop
test
test
int3
sub
sbb
and
and
aaa
pop
ret
xlat
iret
push
lock
leave
or
mov
nop
sub
repz
cmp
fwait
lea
out
arpl
xor
out
xchg
into
call
sti
fistpl
cs
mov
jle
fsubrl
sbb
lahf
sub
sub
shll
xor
pop
repnz
decb
popa
int3
fbstp
lea
push
scas
insb
sub
call
adc
out
or
sub
imulb
stos
inc
into
out
cmpsb
fwait
arpl
mov
lock
das
mov
cmpsl
mov
out
ret
movsl
inc
imul
or
cli
sub
cmp
int3
pop
pop
push
adc
jno
outsb
divl
pop
pop
sbb
lock
ja
ss
xor
sbb
pop
inc
sarb
pushf
push
inc
fisubrl
ljmp
mov
or
loop
aaa
loopnew
mov
push
cs
adc
jmp
imul
rolb
stc
and
out
dec
daa
sub
mov
lock
std
arpl
mov
clc
jge
ljmp
imul
scas
pop
sbb
sub
test
mov
mov
ret
push
mov
push
sub
rorl
xor
sub
imulb
xor
mov
out
pop
ja
test
aad
stos
dec
ss
std
pop
mov
enter
fwait
pop
cmp
sub
mov
xor
fnstcw
or
dec
flds
dec
sub
jmp
xor
imul
push
pushf
sub
and
loop
ds
bound
or
rcl
dec
jbe
aad
mov
insb
aam
dec
adc
sub
insl
xchg
mov
add
scas
mov
es
mov
inc
xchg
cmp
push
sbb
mov
jecxz
jne
ds
and
in
es
and
in
nop
rcr
shrl
je
jge
insb
fldcw
cwtl
lods
xlat
out
adc
cmp
jnp
data16
push
and
hlt
jge
insb
hlt
imul
mov
and
mov
clc
adc
lcall
xor
scas
shlb
loop
outsb
jp
shl
add
jo
dec
into
pop
pop
stos
dec
add
adc
xchg
sbb
scas
stos
mov
add
or
adc
fidivl
mov
push
ss
notl
sbb
dec
and
or
rcl
cmp
xchg
mov
xor
sbb
jmp
js
sub
push
pop
shlb
pop
data16
mov
or
cld
aas
cmpsb
aad
clc
fwait
mov
jge
mov
loopne
mov
bound
popf
add
hlt
mov
add
sbb
jecxz
sbb
je
pop
add
xchg
xchg
arpl
mov
cmp
mov
mov
mov
mov
pop
push
lea
or
mov
jge
movsb
dec
fsts
mov
rcll
lret
arpl
inc
insb
les
add
in
addl
movups
jg
leave
mov
test
or
ss
cmp
fcmovb
adc
dec
orl
rcr
ret
push
int
adc
jg
gs
arpl
mov
je
inc
loopne
iret
icebp
mov
push
jmp
test
ljmp
inc
mov
cli
ja
rcll
push
push
lret
test
inc
mov
push
roll
movsb
xor
sbb
dec
add
arpl
lods
mov
icebp
push
inc
aam
push
mov
xor
in
jmp
inc
mov
std
mov
push
jl
cmc
sti
adc
insb
jge
loope
ds
stc
ljmp
mov
mov
or
jno
dec
int3
dec
mov
cmpsb
jbe
sbb
mov
inc
dec
in
and
testl
enter
test
xor
jbe
mov
ja
jg
lods
ja
jnp
mov
mov
fbld
fwait
xchg
std
in
add
outsb
mov
sbb
push
inc
push
cwtl
mov
out
lcall
mov
xlat
pop
scas
xor
xor
pushl
jns
pop
dec
lret
push
jbe
add
mov
scas
out
xor
stc
imul
xchg
popf
movsl
lret
push
xchg
xchg
ljmpw
mov
mov
xor
in
mov
xchg
cmp
rol
mov
dec
mov
cmp
jne
das
orl
or
push
xor
dec
jge
stos
pop
mov
or
into
pusha
mov
sub
inc
or
push
out
sbb
sub
in
jnp
sbb
and
cmpl
clc
and
lret
adc
mov
xchg
mov
add
leave
mov
lret
dec
outsb
rcrb
std
ljmp
xchg
mov
pop
dec
add
std
out
fsubrs
jl
out
dec
and
je
and
mov
imul
jns
dec
mov
jbe
fs
out
sti
icebp
shlb
adc
stos
ror
jne
lock
sti
fisttps
add
add
loopne
adc
in
leave
pop
mov
cld
sub
adc
ds
shl
sbb
push
pop
mov
xchg
add
adc
in
xorb
xlat
dec
xlat
bound
ret
rcr
out
lds
hlt
scas
cltd
add
enter
xchg
addr16
jmp
adcb
mulps
stos
stos
mov
daa
outsl
mov
push
adc
and
mov
xor
push
push
test
imul
imul
or
mov
lretw
jb
loop
dec
ljmp
and
stos
push
jno
int3
es
fs
sbb
rclb
lret
in
mov
pop
sti
xchg
lret
lret
mov
inc
pushf
xor
mov
sti
addr16
or
lock
shll
lods
sbb
and
xchg
jae
test
dec
ret
or
adc
dec
into
push
scas
sbb
push
addb
jne
sahf
std
jo
push
ret
dec
insb
clc
into
xor
test
sbb
xor
jmp
ja
push
mov
cmc
testb
inc
sbb
xchg
adc
fs
add
xchg
shrl
and
idivb
clc
mov
cld
mov
xor
fsubs
or
nop
cmp
push
mov
popa
mov
leave
loopne
repz
movsl
mov
add
ret
scas
in
xor
or
push
sub
fisubs
xchg
iret
sbb
fwait
or
fmuls
in
add
mov
testb
ret
stos
push
jb
sbb
cmpsb
test
ficomps
jle
lcall
movsb
mov
xchg
in
xor
je
dec
jl
mov
fists
lods
mov
testl
inc
cmp
inc
adc
adc
sub
daa
hlt
sub
dec
xchg
pop
cs
lret
mov
sbbb
push
shll
push
inc
mov
mov
ss
ja
movsb
arpl
or
mov
movsl
outsb
adc
hlt
mov
push
jnp
popa
mov
mov
xchg
mov
rorl
js
rol
ret
push
sbb
jp
sub
and
in
inc
cmp
mov
andl
ljmp
cli
jae
mov
add
scas
lods
inc
xor
inc
add
insb
test
orb
push
pop
cmp
pop
arpl
hlt
mov
xor
test
fisubrs
pop
mov
sub
inc
add
cmpsl
add
in
ror
push
sahf
addl
out
leave
mov
mov
inc
sbb
int3
xchg
push
or
or
mov
fldcw
cmp
sub
jecxz
ss
lods
scas
gs
es
and
cwtl
ret
mov
adc
xchg
sarl
iret
jo
xor
in
test
or
xor
movsb
aad
xor
ss
adc
out
jp
cmp
enter
movsl
dec
mov
push
nop
je
shrb
ss
enter
psubsb
cmp
arpl
call
ud0
cwtl
mov
pop
mov
repnz
data16
jl
sbb
push
or
faddp
mov
sub
dec
jb
mov
test
sub
xor
fidivl
lret
es
lret
push
test
or
fwait
lea
jmp
inc
gs
dec
loop
inc
repnz
nop
xchg
shlb
pcmpeqw
mov
jl
mov
addb
push
mov
adcl
cmpb
pop
mov
sub
jbe
mov
arpl
sub
and
test
and
mov
fcoml
jle
les
pushf
lods
shll
mov
pop
out
popa
cmp
push
mov
fmull
out
out
push
and
cld
cmpsb
lahf
mov
lret
push
mov
jg
dec
add
mov
or
add
cmp
sub
das
jbe
sbb
mov
cli
ficoml
jno
call
jbe
mov
jae
jg
push
pop
pop
popa
out
fs
cs
int
push
in
mov
xchg
inc
cmp
or
inc
popa
repz
enter
mov
call
push
mov
in
push
push
test
popf
test
xor
sti
cpuid
push
cmp
mov
rcll
mov
das
test
leave
xorl
and
mov
adc
add
aad
ja
dec
mov
in
sti
mov
lods
mov
inc
jo
adc
inc
out
ljmp
inc
in
repz
jb
lds
scas
push
mov
lds
aam
mov
int3
and
cmc
lret
push
cwtl
jno
mov
xchg
mov
push
sbb
rclb
dec
mov
das
cmp
xorl
outsb
xor
pop
sub
xchg
sub
fstp
shrl
pop
popa
std
and
xorb
xor
push
fistl
cmpl
and
lds
pop
rorl
or
popl
mov
push
xchg
fnstcw
das
mov
jo
push
adc
notb
ror
into
xchg
and
sub
mov
hlt
test
push
adc
sub
sbb
mov
mul
ds
mov
mov
test
add
shlb
lea
dec
push
sub
xor
repnz
dec
or
stos
subl
icebp
inc
loope
jmp
pop
or
ds
or
xor
adc
cmpb
cmpb
jbe
xorl
mov
push
xchg
mov
sub
imul
lock
cmc
test
std
xorb
rorl
add
data16
loopne
ret
in
jbe
jp
je
jle
jb
jnp
in
push
aam
xor
jns
shrl
inc
jno
mov
xor
and
or
out
dec
cmp
leave
dec
scas
adc
jle
mov
andl
xchg
aas
aaa
xor
aas
xchg
stos
arpl
pop
test
adc
jae
outsb
pmaxsw
movsl
add
scas
ljmp
movsb
mov
inc
aas
mov
and
flds
sub
add
enter
or
gs
fstps
mov
mov
or
sub
pusha
in
shlb
ror
cwtl
and
pop
test
push
arpl
lahf
mov
xor
mov
popa
shrb
pop
ds
test
insl
mov
push
pop
xor
mov
enter
mov
lahf
adc
xchg
jae
jbe
xchg
mov
ret
mov
ljmp
fimull
cmp
je
mov
cmp
push
adc
adc
mov
add
xorb
ret
test
lahf
inc
push
add
test
test
test
mov
sbb
lods
fwait
add
xlat
shl
and
out
or
cmpl
xchg
loop
dec
pop
gs
push
lahf
pop
cmpsl
fwait
adc
paddusw
scas
cmpsb
push
test
mov
pop
fcmovnu
or
pop
cli
cld
jp
push
insb
pop
cmpl
pusha
adc
xchg
ss
out
inc
jnp
scas
repz
ljmp
jg
ret
adc
xchg
in
xchg
call
mov
mov
ds
sub
xchg
data16
xlat
repz
leave
inc
dec
call
in
mov
ss
fisttps
pop
xor
pusha
adc
cmp
imul
inc
xor
add
insl
shl
add
or
jo
repnz
bound
jmp
add
pop
push
lahf
inc
inc
inc
jno
sarb
lcall
pop
xchg
inc
xor
xchg
movsb
mov
or
rclb
push
lret
xchg
or
add
or
repnz
bound
fmuls
sub
and
add
lahf
mov
sub
pop
jecxz
repnz
js
push
adc
jecxz
lds
cmp
je
jae,pn
push
xor
fcoms
mov
data16
sub
js
mov
jb
pop
jge
dec
sbbl
cmp
enter
and
cld
xchg
sbb
jge
dec
xlat
or
pop
xor
jg
int3
add
in
enter
out
jecxz
push
jne
arpl
mov
mov
mov
fwait
sub
ds
dec
fdivs
sahf
rcr
sti
cmp
inc
push
jne
xor
cld
mov
fdivl
pop
ror
fnstsw
adc
lods
cmpsl
in
inc
jb
push
test
loope
adc
lock
pop
mov
pop
mov
shr
lods
fstpl
xchg
test
pop
jp
enter
scas
sub
mov
xor
fiaddl
enter
adc
jb
int3
sbb
sbb
inc
pusha
cli
es
lods
mov
push
out
sub
pop
in
adc
and
test
dec
xchg
je
mov
cmp
push
lods
mov
out
sbb
jmp
and
sbb
inc
jnp
jle
fisubrl
rclb
xlat
ljmp
adc
push
push
test
out
add
pusha
fiadds
push
mov
mov
icebp
ror
imul
jle
pop
push
mov
xchg
repz
or
cli
ljmp
addr16
imul
fldcw
sbb
pop
das
dec
ja
incb
repz
pop
xlat
dec
sub
jo
rcll
add
mov
sub
mov
lret
popa
mov
adc
dec
mov
sbb
insb
dec
push
dec
cmp
adcb
sbb
lea
sub
xchg
push
iret
hlt
cld
loop
mov
scas
xchg
xorl
mov
lds
hlt
add
push
cld
jge
js
pop
bound
push
lret
cli
pop
mov
loop
neg
dec
in
push
pop
stc
rorb
xor
lret
mov
out
subb
xchg
pop
lret
stc
negl
and
and
push
jb
scas
adcb
xchg
pop
gs
push
mov
pop
cs
sub
pop
aam
rorl
dec
push
sub
lahf
mov
loopne
jnp
shrl
data16
add
xchg
mov
orl
imul
gs
aaa
jne
sti
rolb
cmp
xor
add
pop
stos
jecxz
test
cmp
mov
xchg
loopne
and
iret
mov
outsb
push
das
mov
mov
ret
imul
imul
push
sub
xchg
xchg
or
mov
daa
lods
ss
mov
or
repnz
mov
sub
shr
frstor
sub
test
pusha
in
push
imul
cmp
and
jb
mov
aam
push
cmp
or
ret
jg
sub
add
xchg
cmp
shrl
jo
test
pop
jne
mov
jmp
sbb
sub
mov
sub
push
cmp
testl
push
jmp
dec
adc
test
cmc
fmuls
inc
rorl
dec
jmp
sub
test
pop
or
test
jb
jae
jnp
subl
pop
loop
cmp
or
xlat
dec
or
or
and
jmp
or
xor
or
xchg
pop
xchg
ss
lcall
pop
pop
leave
sbb
mov
jno
movsl
call
addr16
insl
xchg
stos
lods
jno
jl
hlt
adc
cmpsb
in
pop
andl
ret
or
xchg
lods
out
negb
dec
xor
cmp
jns
pop
test
push
or
xchg
and
push
sbbb
push
mov
add
jge
jl
daa
sub
push
mov
jge
and
out
out
or
sub
movsb
jnp
hlt
pop
xor
stc
mov
popf
add
push
jb
fdivl
add
lea
pusha
jmp
xor
out
sbb
mov
xor
int
dec
and
xchg
mov
test
sbb
sbb
imul
pop
lret
mov
outsl
aaa
sub
insl
xchg
push
cmpsl
je
lret
mov
jecxz
cmpsb
hlt
mov
fs
push
xchg
add
std
jg
jecxz
mov
aas
cmpsl
lods
adc
mov
sub
imul
jnp
imull
push
out
aas
mulb
lahf
es
lods
sub
xor
cwtl
sbb
test
aaa
lahf
pop
fisubrs
fstl
andb
ljmp
sbb
mov
jecxz
lea
enter
sbb
stc
pop
and
test
push
sbbl
adc
lret
jae
test
add
lea
fisttpll
lret
jns
pop
fidivrs
xchg
daa
cmc
js
inc
mov
je
int3
pop
mov
rcrl
lahf
or
add
and
jb
int
and
int
xchg
ljmp
lods
or
lods
or
int
stc
add
adc
xor
push
leave
and
jae
std
inc
or
dec
cld
iret
mov
dec
shll
adc
lds
lahf
adc
or
icebp
shrl
sub
int3
ss
jbe
push
adc
fbld
leave
push
jl
push
pop
mov
cmc
fldcw
or
addr16
mov
movsl
sbb
push
int3
pop
mov
sub
or
sbb
mov
lods
push
int
out
mov
dec
mov
repnz
cmp
fimuls
loope
pop
cli
stos
mov
repz
idivb
clc
mov
je
shlb
adc
jne
lcall
rclb
cmp
inc
cmp
cmp
push
dec
stos
iret
lods
mov
mov
push
push
ja
xor
addr16
dec
je
mov
inc
push
jnp
dec
push
push
push
jae
push
inc
or
jle
mov
push
mov
sbb
dec
inc
in
mov
or
stos
lds
xor
int3
imul
sub
pop
int
dec
mov
cs
imul
dec
aam
aaa
pop
pop
cs
jb
xorb
imul
sub
std
mov
sub
in
cli
and
xchg
into
test
and
data16
jne,pn
xor
jmp
dec
jnp
mov
pop
repnz
push
sub
jp
jo
push
and
dec
lds
push
aaa
into
mov
testl
push
mov
cmp
xchg
icebp
xor
or
pop
pop
adc
in
movsl
test
dec
dec
outsb
stos
inc
jl
cmp
gs
js
push
dec
inc
test
add
jo
cmp
cmp
arpl
jg
add
in
jns
dec
cli
orb
xchg
jno
sbb
mov
rolb
or
sbb
enter
cwtl
cld
mov
fdivp
mov
std
test
and
mov
sbb
lret
and
ja
mov
js
or
jl
fiadds
sub
mov
ret
push
xchg
ss
mov
int
sub
xchg
xchg
jl
adc
fsubrs
add
adc
pop
aam
outsb
lds
mov
sub
rclb
shrl
fmulp
stc
push
pushf
add
std
stc
adc
orl
push
or
sbb
inc
adcl
aam
or
push
dec
in
dec
mov
pop
stc
push
sub
push
xor
mov
adc
jne
addr16
xchg
repz
jl
sub
adc
insl
shrb
add
cmp
pop
daa
mov
and
adc
push
jnp
mov
push
jae
mov
lcall
das
icebp
push
lds
push
in
loope
jns
add
fdiv
mov
mov
pop
jns
xor
int
mov
and
mov
aad
pop
pop
sbb
xchg
adc
int3
push
movsb
mov
les
sub
add
arpl
adc
rcll
pop
pop
mov
xor
scas
je
dec
add
insb
cmp
jmp
lcall
xor
loop
aaa
mov
or
stos
mov
sarl
xchg
sarb
pusha
push
sub
mov
aas
sub
test
pop
int3
push
test
fdivl
cmpsl
idivb
mov
ret
into
jp
push
cmpsl
dec
pop
jmp
or
cmp
adc
adc
repnz
xlat
out
jle
xor
sub
iret
pop
inc
aaa
dec
cmp
add
mov
sarb
mov
cli
sbb
sub
fisubrs
mov
lods
nop
es
mov
movsl
mov
je
mov
and
mov
add
mov
jae
push
ret
movb
mov
es
adc
and
daa
push
mov
xlat
push
xchg
jg
clc
in
ret
sbb
and
repz
mov
mov
fisttpl
ficompl
fsubl
mov
inc
cmp
jae
sbb
movsb
js
fcoml
nop
mov
test
icebp
int3
adc
jo
push
dec
clc
mov
rcr
push
loop
push
in
push
icebp
je
pop
stos
jae
sbb
inc
call
pop
mov
pop
sub
mov
xchg
or
repz
lahf
jno
sahf
pusha
pop
and
adc
push
sarb
jno
imul
mov
and
push
jg
mov
push
stos
xchg
xor
shrl
and
sub
mov
and
pop
add
cmp
stc
push
cmpsl
js
or
pop
cmpsl
call
into
lea
sbb
dec
and
mov
repnz
pop
push
fnstsw
out
and
mov
mov
aaa
sbb
cli
lea
add
sti
int
outsb
repz
stos
aad
push
push
xor
js
cwtl
inc
insl
cmp
dec
xchg
clc
mov
fisubrl
test
gs
sub
xor
jl
pop
fisubl
aaa
xchg
xlat
xchg
dec
mov
ret
nop
in
leave
or
and
ret
mov
pop
in
cltd
ficomps
xor
adc
insl
dec
and
push
in
adc
aas
in
push
mov
mov
lods
mov
adc
mov
mov
pop
add
sbb
cs
cld
iret
xchg
mov
fidivs
xchg
fwait
sbb
iret
adc
xchg
xchg
mov
sub
mov
inc
xchg
addb
jmp
push
je
xor
pop
imulb
fcomp
xchg
ficoml
dec
and
in
push
pop
push
mov
adc
jae
xor
xchg
mov
jnp
in
xor
fildll
mov
lds
or
sti
cmp
jge
fimuls
inc
adc
dec
dec
or
aaa
lods
cwtl
ss
scas
ljmp
repz
xchg
pop
leave
ds
jecxz
mov
cmp
xor
clc
fwait
pusha
mov
dec
jg
xorl
mov
pop
cs
push
xchg
mov
lock
call
fsub
mov
or
fmuls
cmp
push
in
mov
fdivs
dec
test
pop
sbb
push
cwtl
jle
mov
in
inc
or
sbb
dec
push
xor
das
fisubs
loope
mov
out
xor
mov
lret
sub
pusha
shrb
test
mov
mov
data16
outsb
pop
das
adc
cld
xor
push
mov
sub
xor
inc
jne
arpl
and
ljmp
ret
cli
repnz
or
fs
push
mov
shrb
mov
in
xchg
inc
pop
jbe
sbb
dec
mov
sub
xlat
mov
repz
ficoms
fcompl
out
insl
sub
std
cli
fsubs
into
dec
push
ljmp
and
cmp
dec
je
sub
vrsqrtps
and
mov
hlt
loop
std
and
add
pop
ss
jle
popf
or
fwait
add
jbe
pop
mov
lcall
sbb
stc
inc
push
insl
aam
xor
orb
ss
jns
ljmp
pop
imul
out
pop
mov
cmp
sub
cmp
xchg
fstps
je
add
sbb
or
cmp
popa
pop
in
mull
push
cmc
js
dec
in
ret
test
push
or
mov
sbb
inc
gs
and
fcoms
jb
jns
and
stos
pop
push
xor
daa
in
sub
xchg
or
xor
push
or
lods
pop
pop
icebp
jae
add
cmp
fdivl
xchg
sbb
and
inc
jmp
adc
inc
pop
sbb
jb
scas
les
mov
mov
bnd
addr16
push
daa
push
adc
rolb
test
js
adc
pop
push
out
xchg
loop
jp
cld
aad
pusha
xor
call
lock
cmp
rolb
aad
sahf
fwait
loopne
cld
adc
sti
adc
imul
cmp
sahf
aad
add
cmpsb
ficoml
sub
xchg
rclb
and
mov
fnstenv
imul
inc
pop
mov
enter
dec
test
xchg
stos
movsl
and
fdivrp
data16
fsubrs
loop
inc
inc
mov
lods
push
sti
loope
lret
dec
ds
mov
mov
pop
mov
jnp
sbb
fwait
jmp
outsl
mov
iret
jmp
and
pop
cli
sbbl
adc
and
mov
cmp
ror
fildl
ja
add
mov
pop
repz
sbb
sub
adc
jnp
xor
outsl
jmp
xchg
pop
mov
cmp
jecxz
mov
fidivrl
push
dec
push
in
sti
dec
stos
jle
mov
insb
jge
jl
lcall
mov
dec
mov
or
fbstp
xor
or
sub
mov
int
sub
fisttpl
scas
sahf
adc
mov
mov
loope
push
cmp
xor
sbb
cmpsl
xchg
xchg
loop
sbb
xchg
sub
add
rcll
addr16
adc
outsb
js
cltd
aad
mov
push
inc
insl
movsb
mov
mov
lds
mov
in
fsub
sbb
adcb
add
int
push
test
outsl
loope
test
xor
sub
out
pop
jmp
mov
sub
bound
mov
pusha
jae
ja
rorl
push
sub
cmpsl
inc
cmp
cmp
and
sbb
aaa
dec
fsubrp
mov
insb
scas
mov
mov
push
ret
imul
sub
inc
inc
mov
iret
movsb
push
inc
or
or
arpl
cmp
leave
int
mov
jle
cltd
scas
call
mov
cmpsb
pop
sub
or
xor
in
lds
ja
mov
fcoml
imul
cld
xchg
inc
pop
jne
cmp
inc
xor
icebp
into
mov
push
enter
dec
mov
xchg
add
jl,pn
mov
jnp
adc
xchg
mov
adc
mov
push
ja
cmpsl
sub
leave
mov
sub
fnstenv
iret
mov
sub
insl
cmp
cmp
pop
lcall
mov
or
out
add
ds
mov
xorl
xor
je
cmpsl
scas
rcrb
or
push
pop
jl
repnz
and
xorl
dec
or
dec
rcrb
gs
mov
mov
adc
iret
pushf
out
dec
pop
inc
pop
jno
fisubs
xchg
insb
std
xor
sbb
cltd
mov
or
mov
clc
mov
sbb
fmulp
fsubrl
mov
test
stc
pop
popf
jle
rolb
push
jnp
mov
mov
inc
pop
test
cmp
mov
pushf
daa
mov
cmp
lea
dec
cmp
out
jae
fsubrs
movsb
pop
dec
lds
mull
aad
subl
dec
xlat
and
shrb
jl
mov
mov
inc
dec
repz
movsb
sub
mov
adc
pop
push
inc
sbb
mov
jge
pop
push
fucomi
xchg
lahf
mov
sar
adc
mov
adc
fwait
cltd
les
push
shl
aaa
sub
mov
test
test
jecxz
icebp
fbstp
repnz
jae
cli
sbb
cltd
mov
ficoms
fidivl
hlt
subb
xchg
loopne
rcll
ljmp
push
fisubs
dec
cmp
add
or
pusha
mov
pop
xchg
aaa
sbb
lret
fsubrs
pop
daa
push
pop
or
lods
fsubrs
ljmp
enter
push
lahf
mov
in
add
mov
shr
insb
cmc
xor
hlt
gs
rolb
movsl
dec
arpl
xor
lret
icebp
adc
cmp
cmpsb
aas
xchg
push
and
push
adc
test
push
bound
fisubs
inc
bound
and
into
dec
dec
ja
xor
mov
outsl
lret
xchg
stc
jo
std
repnz
aaa
pop
inc
shl
dec
loope
xchg
inc
int
dec
cmp
addr16
mov
js
jg
lods
imul
inc
shr
fisttpll
arpl
lret
sub
in
xor
cld
sbb
mov
dec
mov
dec
pop
jg
dec
mov
inc
xor
rcll
sub
incl
ja
cmp
cmp
sub
inc
dec
psubw
mov
notb
fistl
mov
cmc
sahf
mov
xchg
aaa
je
sub
out
inc
mov
not
sarl
and
mov
lret
aaa
cmp
bound
shll
in
sub
or
test
notb
jmp
rep
adc
cmp
mov
movsl
shlb
popf
xchg
push
sti
pushf
inc
addl
mov
movsb
leave
fsub
ret
in
int3
inc
lret
push
inc
xlat
pop
scas
mov
mov
mov
int
fimuls
rclb
pop
shl
push
pop
pusha
cltd
pop
insb
rcrl
adc
push
mov
test
orl
stos
movsl
mov
xlat
ret
out
fldcw
test
or
loopne
lcall
les
andb
fwait
mov
lea
repnz
imul
out
sub
cmpsl
out
icebp
mov
add
or
xchg
in
dec
in
daa
pop
push
push
pop
mov
xlat
sub
das
mov
movsb
pop
sbb
or
mull
pop
test
dec
sub
aaa
fists
mov
pop
out
fldenv
xor
mov
cmp
test
je
pop
mov
push
pop
xchg
addr16
mov
push
pop
dec
xchg
xor
cmpsb
call
cltd
xor
stc
in
mov
xor
mov
cltd
fldenv
das
inc
xchg
sti
pusha
and
movsl
div
lock
ss
or
xchg
jnp
and
mov
cmp
jnp
loop
fstp
pushf
rorb
test
pusha
mov
aaa
rcrb
pop
bound
clc
lret
xchg
test
mov
add
pop
push
jecxz
insb
les
sarb
mov
cmp
and
push
push
adc
xchg
fwait
inc
je
or
aad
pusha
jno
inc
sbb
idivb
imul
ret
pop
cs
scas
insb
push
push
iret
test
pop
in
das
sbb
inc
popf
mov
jge
fdivr
cmp
adc
pushl
rcl
jmp
push
sarb
dec
mov
mov
inc
rorl
xchg
cmp
add
in
or
sbb
imul
int3
mov
inc
dec
ss
gs
push
data16
push
int
cmc
ret
jne
jp
sbb
pop
and
shlb
push
dec
mov
xchg
jno
loop
insb
ss
jmp
nop
jg
mov
in
push
mov
rorl
mov
lock
mov
addr16
lods
mov
adcb
ljmp
scas
es
cmpsb
jnp
or
xor
mov
movsl
sbb
divl
mov
mov
inc
enter
sub
sub
add
xor
in
pop
fwait
mov
mov
mov
loope
loop
cmpsl
mov
sbb
dec
mov
adc
ds
xchg
push
mov
dec
pop
adc
ret
lret
push
imul
aaa
icebp
std
dec
and
fidivrs
jbe
gs
je
loopne
pop
fisubrs
sub
enter
sub
xor
inc
outsl
mov
movsl
int
jne
jne
push
sbb
loopne
mov
mov
enter
push
insb
je
movsb
movsl
sbb
adc
or
jbe
pop
mov
int3
xor
xchg
int
mov
sbb
adc
leave
shrl
xchg
repnz
sahf
mov
mov
lods
mov
jg
jg
jge
inc
loopne
mov
imul
add
pusha
mov
cmpsl
mov
rcr
insl
fistl
push
lods
cmpsl
aam
pop
dec
xchg
aad
dec
into
ljmp
stos
xor
inc
cltd
and
mov
or
push
jle
mov
xor
in
loop
out
call
pop
and
push
fadd
in
mov
inc
xchg
xor
and
ret
out
jp
add
in
sbb
pop
shll
loop
orl
push
pop
xchg
lea
mov
mov
fwait
std
mov
in
dec
out
xchg
into
sbb
addr16
imulb
pop
jae
out
rorb
lret
inc
pop
and
pop
cmp
cld
sub
mov
push
sbb
mov
jns
or
inc
lret
and
out
fcoms
push
popf
inc
leave
xchg
icebp
fildl
push
xchg
fwait
idiv
inc
mov
jmp
mov
push
int3
js
or
fdivs
xor
jns
inc
ror
sub
negl
and
lret
out
mov
stos
insl
mov
jmp
add
adc
jp
lret
pop
pop
xchg
mov
dec
insb
sahf
test
add
pop
ja,pt
fs
mov
clc
jb
ja
repz
or
mov
cld
or
rolb
and
jno
lods
dec
and
cmpl
test
pop
mov
mov
iret
mov
pop
push
js
lret
das
jp
cmpsb
mov
dec
cltd
fwait
inc
dec
lret
lds
mov
jnp
mov
movsl
inc
leave
pop
cmc
into
jno
idivl
xchg
je
lcall
push
cli
mov
lock
xchg
mov
pop
orb
shl
inc
mov
insb
mov
out
sub
mov
or
std
sub
cmp
xchg
xchg
outsb
adc
inc
test
movsl
imull
lahf
loopne
lret
mov
and
sbb
aaa
mov
inc
sub
into
cmpsl
add
in
test
sti
fwait
or
dec
mov
push
in
inc
mov
shrl
icebp
neg
jle
xor
inc
pop
mov
push
push
aam
dec
mov
lods
xor
pop
cmp
in
and
fnstenv
nop
and
sub
push
sbb
cmc
add
sarb
fdivr
ja
xchg
pop
xor
je
mov
imul
loope
aad
pop
cld
adc
lret
addr16
frstor
or
lods
int3
popf
xlat
sahf
dec
inc
divb
mov
in
add
and
xor
cmp
cmp
mov
cwtl
sbb
ret
test
lods
cmpsl
sahf
lret
push
mov
call
push
repnz
ret
es
sub
jmp
xor
test
ljmp
or
xchg
orl
das
mov
xor
gs
lea
or
and
out
popa
push
int3
pop
add
sbb
push
sub
jae
iret
test
inc
fstl
add
xchg
xchg
jb
scas
pushf
fstpl
inc
pusha
jns
popf
mov
cmpb
sub
xchg
flds
subb
loope
xchg
lahf
push
pop
push
lea
jecxz
adc
repz
mov
cli
push
nop
and
mov
inc
dec
sub
jg
out
adc
inc
mov
into
mov
dec
mov
pop
insb
cld
outsb
inc
ja
sub
push
pop
xchg
push
lret
test
testb
mov
scas
mov
pop
out
dec
lcall
aas
icebp
movsl
xor
adc
inc
dec
mov
push
pop
mov
pop
jle
push
mov
cli
cmp
lea
xor
sbb
loop
cmp
xchg
mov
outsb
xchg
fwait
pop
jle
sub
mov
fldl
pushf
mov
jecxz
jg
lret
mov
arpl
faddp
lret
clc
push
dec
or
or
lea
std
ret
adc
test
iret
mov
leave
ds
in
orl
popa
jg
movsb
pushf
lock
lcall
cmp
roll
mov
xchg
inc
les
mov
mov
in
mov
sub
xchg
dec
dec
adc
repnz
lods
jno
ret
pop
cmp
xor
push
pop
xor
xor
and
inc
ret
pop
or
movsl
mov
cmp
push
jno
cmpsb
fnstcw
sub
arpl
faddl
xchg
sub
lahf
lcall
or
add
push
xchg
adc
xor
pop
jmp
or
scas
mov
mov
mov
dec
movsl
lahf
in
test
shl
sbb
xchg
pushf
fsubl
fs
jne
sbb
jecxz
sub
aam
stc
or
mov
inc
sahf
push
fisttpll
lods
jb
out
scas
jb
arpl
sti
push
cmp
jmp
cmp
dec
push
fsub
push
mov
nop
jae
adc
lds
or
cmpb
xor
adc
sbb
mov
xchg
mov
xchg
or
es
inc
aas
mov
jle
xlat
mov
stc
pop
sbb
clc
movsl
sub
sub
fldl
movsb
fisttpl
fiadds
sbb
fxtract
fistpll
or
sub
xchg
mov
pop
xchg
dec
rolb
clc
sbb
mov
in
mov
addr16
rolb
pop
mov
mov
mov
cmpsb
xchg
sub
xchg
negb
mov
or
sbb
mov
fcmovb
sub
inc
mov
adc
sbb
and
ficomps
iret
and
mov
xchg
int
mov
and
sub
cmp
xor
push
faddl
jnp
rcrb
addl
call
in
mov
pop
inc
push
mov
jge
jae
andb
jne
arpl
jle
add
daa
mov
movsb
repnz
mov
cmpsl
cmc
in
shl
xor
ja
mov
cmp
rcl
jne
push
mov
add
in
and
pop
mov
int3
inc
sbb
cmp
in
fwait
xor
mov
shl
rclb
xor
push
inc
mov
movsb
insb
movsb
pop
adc
aad
mov
mov
roll
scas
xor
stos
mov
outsb
pop
push
jmp
add
cmp
stos
in
jg
push
or
jns
mov
jle
les
dec
dec
and
xchg
xlat
cwtl
leave
aas
fwait
inc
push
ja
and
iret
imul
sub
adc
aas
ja
add
fcomip
lret
nop
es
mov
cwtl
dec
mov
and
mov
lock
mov
loop
testb
int3
popf
enter
push
push
rcl
data16
dec
shrl
adc
sbb
mov
into
adc
push
xor
xor
loope
and
fstpt
adc
lea
add
clc
out
js
jle
fnstsw
mov
ds
jae
mov
fs
cmp
mov
addl
pop
pop
pop
mov
mov
sub
cmpsl
push
das
cmp
jmp
jge
and
mov
add
lea
jg
push
sub
jns
jge
sub
xchg
fstl
lahf
push
scas
test
sbb
push
adc
imul
inc
pop
pop
adc
pop
inc
push
cwtl
add
test
lahf
loope
je
or
mov
mov
in
xor
ja
fcompl
xchg
adc
adc
imul
and
dec
cwtl
in
pop
ljmp
cmpsb
fistps
pop
xlat
sbb
add
sti
lock
xor
mov
mov
sbb
and
cmc
and
vmovups
stos
xor
and
ljmp
dec
fs
subl
or
cmpsb
jb
sbb
mov
and
aam
jmp
movsl
test
or
stos
xor
test
lods
xor
jmp
outsb
sbb
into
sahf
push
jno
ljmp
jl
loope
push
test
mov
outsl
mov
inc
loope
dec
popa
jb
rcrl
or
and
xchg
push
and
fldl
ds
stos
repz
sbb
ds
mov
lds
mov
xchg
push
adc
hlt
divb
jb
mov
fdivl
ds
fwait
xor
leave
stos
and
mov
cmp
movsl
ss
out
iret
cs
stc
lret
mov
shll
mov
jge
add
push
xor
int3
pushf
xor
loopne
sub
adc
cmp
jecxz
arpl
push
iret
outsb
jge
arpl
fstp
push
outsb
out
pop
xchg
ds
jae
xchg
push
icebp
mov
pop
aam
xchg
sahf
in
js
jne
ds
mov
sub
ds
sbb
es
or
jg
cld
test
or
out
sbb
or
sbb
dec
jns
add
mov
stc
cwtl
ja
in
je
ss
xchg
sub
jae
cwtl
cmp
mov
cli
rorl
jbe
data16
test
jns
pop
fs
or
add
push
mov
mov
sub
mov
push
or
mov
dec
mov
fsts
cld
pushf
adc
pop
imul
inc
inc
imul
inc
cli
sbb
pop
and
leave
imul
jmp
lods
stc
and
add
stos
pop
std
mov
jmp
mov
ret
cmp
imul
inc
fisttpll
pop
or
pop
jo
jp
mov
repnz
cmp
xlat
fiaddl
test
xor
push
test
rorl
xor
arpl
mov
cmp
cmpsb
mov
test
scas
add
cmpsl
mov
cs
add
shl
les
stos
rcll
pop
jb
adc
sarl
sbbb
push
jge
lock
jns
and
cmp
xor
xor
addr16
imul
push
fcmovu
shrl
cltd
fcoms
loop
mov
inc
pushf
sbb
movsb
repnz
int
add
lock
and
jnp
mov
popf
hlt
or
dec
mov
inc
mov
ret
out
add
adc
or
shlb
insb
jmp
out
sbb
jns
or
add
mov
lahf
fwait
add
mov
xchg
dec
inc
add
sti
jg
mov
adc
sbb
jmp
sarl
icebp
xchg
gs
rep
stos
jbe
pop
in
jl
sbb
rorb
jnp
add
cmp
pavgb
xchg
je
stos
sbb
adc
jecxz
cmp
xchg
ljmp
dec
mov
fwait
js
mov
test
xchg
fnsave
pop
pop
mov
dec
cli
mov
addr16
es
cli
mov
jbe
das
mov
out
out
bound
adc
cmp
dec
xchg
dec
or
inc
shll
cmpsb
pop
fstpl
rolb
jb
je
ljmp
adc
adc
fstl
mov
ljmp
addr16
adc
xchg
es
test
outsl
in
popa
push
ljmp
and
xor
add
pop
loope
int
fcmovbe
lahf
mov
movsl
or
dec
sub
pushl
std
scas
xorl
mov
stos
sbb
mov
mov
lahf
pop
mov
stos
fildl
fcmovbe
dec
ss
add
adc
sbb
adc
daa
es
mov
mov
xchg
lcall
ficoml
addr16
daa
inc
test
dec
ja
xchg
stos
inc
jns
jo
jg
pop
and
pandn
js
sar
dec
push
and
pop
mov
adc
dec
add
xchg
xlat
xchg
loop
bound
and
stos
insl
cmpsb
fisttpl
inc
shlb
push
sub
cmp
icebp
and
mov
or
xor
or
dec
imul
jge
adc
std
mov
add
mov
pop
bound
into
xor
adc
and
xchg
mov
jne,pt
sub
ss
xchg
divl
js
inc
ret
aad
imul
or
add
sub
mov
sbb
fstps
inc
in
sbb
sub
sbb
call
mov
xchg
subps
bound
sbb
out
mov
outsb
jg
xor
xchg
mov
push
and
and
xchg
mov
cmp
jp
lock
cltd
inc
fisubrs
aaa
je
loop
adc
ds
mov
mov
mov
scas
repnz
pop
leave
fwait
adc
mulb
pop
arpl
popf
push
fdivrs
jmp
xchg
sub
xor
mov
or
sbb
lahf
inc
push
inc
outsb
lock
cmp
push
dec
outsl
jns
push
xor
scas
jp
and
mov
out
mov
daa
sub
shll
xchg
lret
adc
mov
cmpl
sbb
fistpll
xchg
xor
add
insl
and
in
push
hlt
pop
inc
imul
jb
fnstsw
fbstp
test
jl
adc
sub
lods
jb
push
lds
dec
insl
idivb
sahf
rclb
mov
cmp
sahf
sbb
rolb
lret
cmpl
xor
or
movsb
aas
adc
mov
dec
sbb
mov
stos
lcall
push
mov
dec
mov
incl
pusha
and
jae
lret
push
push
bound
mov
jae
pusha
mov
movsl
daa
xchg
clc
sub
mov
or
pop
xchg
xchg
stos
dec
add
add
stos
mov
sub
sbb
adc
cltd
cld
and
pop
cs
cmp
fs
or
lcall
or
nop
jnp
bound
fdivs
rolb
xchg
mov
in
mov
hlt
xor
cwtl
jnp
mov
sti
int3
cli
imul
lcall
outsl
fisubl
js
fidivs
inc
inc
push
mov
arpl
mov
inc
mov
xor
adc
ja
push
sbb
iret
jecxz,pt
cmp
pop
lcall
icebp
sahf
clc
aad
cmpsb
xchg
or
sbbl
stc
push
and
pop
dec
dec
pop
xor
xor
jnp
xlat
sbb
repz
lahf
cmp
adc
out
mov
shr
sub
jmp
leave
mov
in
sub
mov
icebp
add
outsb
or
sti
xor
mov
and
dec
dec
jae
pop
mov
fdivl
cmc
adc
dec
mov
push
jo
imul
insl
mov
aas
shr
xchg
int
and
inc
adc
adc
dec
jb
xor
insl
inc
rol
sbb
pop
mov
or
xchg
push
push
popf
in
jecxz
divb
dec
push
pop
pop
cltd
aas
and
sub
hlt
push
fs
or
test
sbb
cmp
sub
sbb
xorl
cmp
sub
xor
mov
popf
jo
mov
ret
fisubl
push
addb
lods
jp
jne
cli
pushl
imul
cmpsl
imul
adc
push
jl
push
add
or
xor
aas
in
enter
mov
push
pop
xchg
mov
int
mov
push
sub
sub
jne
pop
mov
dec
andb
rorl
lret
pop
xor
jns
adc
pop
gs
push
fucom
ror
sbbb
test
fwait
mov
testb
mov
into
lret
inc
or
jmp
out
push
lock
xchg
mov
inc
out
test
lret
push
push
push
test
movsl
js
je
inc
in
mov
mov
fidivrl
dec
scas
daa
orb
cmp
lret
dec
fidivrl
cmp
push
xor
mov
push
lahf
or
adcl
cld
daa
push
or
sbbl
push
daa
adc
aam
sbb
mov
or
xchg
daa
fnstsw
cltd
imul
jecxz
nop
pop
mov
inc
bts
xchg
push
jae
lret
xchg
cmpsb
sub
mov
mov
push
mov
shll
test
insl
dec
mov
adc
mov
ret
jnp
test
ja
andl
icebp
inc
scas
scas
dec
aam
or
push
cli
lcall
insl
popa
xchg
out
or
push
sbb
or
dec
repnz
adc
inc
xchg
icebp
xchg
xor
xchg
mov
aad
sub
test
cs
pop
repnz
dec
push
xor
dec
xor
or
or
lahf
mov
lahf
clc
mov
mov
addb
push
push
cmp
cltd
cmp
xor
hlt
jno
adc
jo
add
cmp
aaa
inc
cs
bound
int
dec
shl
movsl
std
jg
decb
test
sti
call
push
lods
mov
std
mov
pop
je
jae
jmp
xor
bound
jg
add
mov
in
xchg
mov
mov
das
lock
es
pop
inc
pushf
aas
les
sub
test
in
leave
icebp
std
arpl
cltd
xchg
leave
push
stc
or
fbstp
push
movsl
jns
aaa
loope
jb
std
cli
mov
rorl
arpl
inc
cmp
test
ret
xor
dec
stos
les
push
add
shlb
or
mov
loopne
pop
ljmp
xchg
jmp
jnp
add
jl
loope
pushf
xchg
xor
cmp
mov
xchg
loopne
repz
lods
cld
mov
dec
mov
xor
jbe
rcll
jmp
push
nop
ds
hlt
xor
in
jo
adc
ja
icebp
sub
clc
pop
push
inc
mov
into
clc
pop
scas
test
inc
imul
or
shlb
mov
mov
jg
jle
test
dec
lds
and
iret
jp
sbb
adc
xchg
fwait
pusha
xchg
loope
ja
mov
repnz
lods
pop
mov
pop
jae
and
xchg
iret
iret
rcll
sub
sti
mov
dec
lret
sub
dec
jmp
test
dec
adc
mov
inc
sub
mov
je
loopne
pop
loop
popf
add
sbb
pop
sub
icebp
in
xchg
mov
dec
pop
add
ljmp
jecxz
xor
mov
aas
and
enter
push
rclb
aam
jle
fisttpll
xor
ret
mov
mov
aas
and
pop
leave
ficomps
daa
mov
and
lret
xlat
adc
jp
mov
lods
cmp
xor
jp
ja
sub
cmp
push
mov
test
mov
adc
add
arpl
rclb
adc
scas
pop
lcall
lods
iret
leave
mov
inc
mov
add
repnz
pop
addr16
jg
sbb
jecxz
shlb
dec
push
dec
popf
int3
in
and
xchg
xchg
aas
movsl
int3
push
das
fiaddl
loope
jo
sbb
scas
mov
shll
dec
orb
fidivrs
repnz
lock
inc
and
fcom
out
sbb
mov
push
and
mov
inc
jno
movsb
imul
mov
jl
pop
dec
sub
mov
lods
dec
pop
fcomip
xchg
mov
leave
lret
xor
cwtl
push
xchg
pop
out
loope
xchg
stos
out
jo
pop
jae
xor
cwtl
mov
out
daa
jns
mov
stc
adc
mov
rorl
pop
adc
pushf
or
call
push
sbb
ja
cmp
mov
dec
and
neg
xchg
dec
and
mov
inc
push
sbb
daa
mov
mov
gs
dec
in
xchg
int3
clc
xor
jb
lock
pop
jge
cmpl
push
xor
jbe
nop
cltd
cwtl
not
lds
aas
nop
outsl
adc
test
js
scas
mov
add
bound
xor
mov
dec
lcall
push
pop
jne
sti
stc
mov
inc
xchg
inc
jnp
dec
jl
je
sbb
and
mov
cmp
inc
adc
ljmpw
test
lods
fnstcw
mov
or
lret
data16
sub
jecxz
imul
mov
mov
ja
sbb
in
jle
pop
fsubrl
shlb
mov
shlb
les
mov
mov
push
mov
adc
add
push
test
dec
test
or
loop
in
and
nop
outsb
decb
leave
sub
sbb
xor
int
test
out
ds
fisubl
std
inc
mov
rcll
jl
mov
test
in
mov
mov
push
lds
adc
aaa
jno
mov
les
inc
xor
cmp
cmpb
pop
jp
enter
push
jne
jp
cmp
lret
aam
push
adc
push
pop
int3
push
stc
cmpsb
icebp
scas
in
pop
fisubrs
in
gs
add
popa
adc
add
fbld
out
sbb
lahf
cmp
xchg
and
call
lret
js
ficomps
or
pop
aas
imul
pop
lret
lock
adc
sarl
cmp
mov
scas
andb
add
out
or
stos
cld
adc
mov
call
pop
aad
cmp
sbb
repz
mulb
sbb
and
pop
and
dec
int
push
xor
cmp
and
sub
testb
mov
add
and
push
mov
fistl
stos
and
mov
xor
stos
xchg
jl
xchg
xchg
fcoms
sub
into
push
mov
mov
pop
arpl
pop
enter
and
mov
cmp
sub
leave
stc
sbb
dec
mov
or
std
arpl
aad
orl
pop
inc
pop
fcmovb
stos
nop
imul
mov
pop
and
scas
stc
sbb
push
aam
aad
stos
push
inc
mov
inc
aam
fisubrs
lahf
xchg
sbb
mov
xchg
stc
scas
cmpsl
enter
lahf
mov
push
aad
shr
mov
or
xor
xor
mov
mov
pop
dec
inc
sahf
or
mov
pop
sbb
nop
cli
xchg
pop
inc
test
pop
notl
adc
mov
mov
xrelease
fcompl
mov
push
shrl
daa
in
insb
jle
gs
xchg
mov
test
and
mov
mov
jns
xchg
ret
cmp
cmp
ficomps
jae
sbb
or
pop
fmull
inc
adc
scas
jle
fcompl
fmull
pop
in
push
sub
jle
stos
push
mov
movsb
insl
sbb
jmp
out
nop
and
xchg
iret
std
mov
xchg
adc
push
push
fadds
adc
or
int3
pop
xor
push
cld
adc
cmc
or
ds
push
dec
inc
mov
leave
dec
call
movsb
in
cmp
mov
shlb
faddl
add
cmp
faddp
aas
dec
xor
movsb
xlat
movsl
loop
pop
sarl
pop
mov
paddusw
xchg
push
pop
mov
cmp
insl
mov
cmpsb
bound
addr16
push
insl
fmul
gs
fiaddl
divb
out
xchg
inc
jbe
cmc
xchg
insl
stos
xor
pop
adc
mov
cmp
iret
lods
js
mov
mov
loop
adc
inc
lahf
adc
ja
mov
jae
imul
and
cs
and
jg
out
lods
into
cmp
sbb
cmp
jnp
ljmp
js
loopne
cmp
pop
cs
jno
xor
ja
mov
filds
inc
cli
mov
mov
int3
cli
add
pop
mov
cmpb
sbb
jp
inc
dec
fsubrl
sub
outsb
pop
push
in
scas
jecxz
mov
aas
out
push
cwtl
rorb
jno
jae
icebp
cmp
test
sbb
lea
test
dec
jno
mov
and
loop
mov
insb
lcall
je
arpl
repz
mov
lahf
push
rorl
sbb
xchg
adc
push
mov
cmpsl
mov
push
push
hlt
fsubrs
test
cmpsb
rcrb
sbb
sti
push
popf
add
test
mov
inc
jmp
mull
mov
push
mov
push
mov
imul
adc
mov
lret
nop
outsl
jecxz
or
xor
nop
xlat
xor
sub
adc
mov
xchg
push
mov
cmpsb
fnstcw
sbb
out
inc
mov
outsl
xchg
xchg
mov
cmpsb
daa
fwait
push
push
cltd
sub
adc
mov
out
insl
daa
sbb
lds
outsb
aas
inc
sbb
jb
imul
ret
ret
pop
or
jl
stos
mov
dec
sbb
sti
jmp
mov
push
lret
sub
dec
not
jae
movsb
mov
mov
xchg
xlat
xor
push
sub
cli
jne
sbb
push
testl
xor
xchg
cmp
push
mov
cs
sbb
stos
adc
lock
jp
fwait
mov
aaa
add
sbb
jb
stos
mov
and
mov
xchg
hlt
daa
cli
ja
std
adc
aaa
mov
into
mov
lock
aam
clc
dec
push
adc
fstps
fxch
pop
je
mov
adc
sbbl
sub
or
add
or
dec
jmp
sbb
addr16
in
mov
test
jge
sbb
cmp
outsb
and
lods
xor
cmpsl
je
jne
push
out
xchg
mov
pusha
push
and
mov
orl
call
fidivs
mov
pop
jns
jl
cmpl
xor
add
lods
stos
mov
int3
push
cwtl
sub
sbb
addr16
cmp
mov
xlat
shll
mov
or
insb
pop
fiaddl
and
int
ffreep
ljmp
adc
pop
dec
mov
movsb
movsb
mov
dec
mov
orl
frstor
ds
or
stos
sub
xchg
lcall
ljmp
inc
add
push
out
scas
popf
out
clc
ja
sbb
mov
xor
jle
stc
inc
mov
cmp
sub
add
mov
mov
mov
xchg
scas
out
je
sub
jo
jns
lods
rclb
jmp
stc
bound
mov
stos
in
mov
rcr
xchg
jne
es
mov
sub
sub
nop
pop
jecxz
je
nop
mov
movsb
fsubs
add
aaa
add
in
mov
pop
movsb
push
clc
fcomps
shll
and
ds
rcrb
bound
adc
jge
adc
inc
jecxz
push
outsb
and
jmp
test
dec
data16
mov
pop
dec
pop
scas
push
bound
mov
push
rorb
push
sub
xor
imul
cld
jmp
xchg
xor
popf
insb
add
inc
or
xor
mov
rcrl
lcall
pop
adc
ds
xchg
lret
xchg
icebp
test
pop
xor
rcrl
adc
imul
mov
cmp
fwait
sbb
dec
jmp
push
jno
and
mov
call
xor
pop
clc
jnp
mov
cmp
lret
ret
cmpw
cmp
pop
and
cmp
clc
repz
insb
or
mov
fisubs
out
push
add
pop
jnp
cmc
push
jns
or
add
xorb
add
mov
add
jecxz
insb
xor
or
pop
or
and
mov
int3
jg
pop
push
hlt
loope
push
inc
cmp
in
test
scas
into
mov
jae
ljmp
pop
in
xchg
mov
orl
inc
negb
push
sub
jnp
orl
pusha
xchg
ljmp
cmp
dec
push
aam
mov
lahf
push
scas
out
dec
jp
in
cmp
add
jae
inc
in
faddl
cmp
daa
xor
aam
jecxz
fcoms
dec
sbb
adc
loop
mov
stc
ret
fmulp
mov
adc
dec
lds
shlb
int3
data16
test
pop
sub
jecxz
in
lods
sub
xor
mov
movsb
adc
xchg
fs
fdivl
aaa
adc
dec
jae
push
add
lret
rorb
or
or
popf
aaa
out
pop
fldcw
and
loop
push
mov
inc
ret
jo
pop
adcb
insb
cmc
or
dec
xchg
mov
aam
sub
push
data16
into
sbb
data16
pop
test
sub
hlt
xor
and
jmp
fildll
inc
call
add
jle
mov
or
rolb
inc
mov
mov
push
int
or
sbb
push
inc
or
neg
mov
inc
pop
aas
jge
cmp
and
arpl
add
mov
adc
xor
mov
lret
pop
add
mov
push
mov
cmp
adc
xchg
dec
addr16
mov
cmc
shl
xchg
mov
insb
aas
dec
cmc
pop
lahf
aaa
mov
cmp
mov
mov
inc
mov
mov
cs
sub
movsl
push
test
pop
cmp
inc
xor
push
idivl
add
push
sbb
push
mov
lods
out
stos
mov
mov
test
mov
xchg
es
jbe
dec
xor
pop
xlat
repnz
jno
jle
test
loope
or
in
cltd
cmp
ret
sahf
push
and
movaps
and
clc
ror
mov
jg
inc
int3
pusha
fidivrs
jecxz
sub
btl
xor
xor
orb
fdivl
ret
mov
sbb
jne
push
daa
and
pop
neg
ret
xchg
xlat
jae
nop
push
movsb
mov
loopne
cwtl
ficompl
adcl
sbb
xor
cmp
idivl
int3
popf
push
adc
ljmp
adc
dec
add
adc
or
push
popa
aas
sahf
dec
hlt
mov
jo
loop
mov
lods
scas
inc
je
fisubl
and
or
dec
outsb
rcrb
mov
mov
pop
sbb
mov
push
pop
add
lcall
das
mov
mov
arpl
add
mov
push
dec
mov
in
repnz
adc
dec
add
cli
sub
rolb
jns
push
and
mov
pop
mov
cs
push
mov
cld
sbb
leave
or
dec
test
pop
sbb
adc
ja
sar
into
xor
enter
stc
scas
cmc
inc
pop
popf
sbb
mov
fdivl
cmpsb
stos
and
push
jo
push
adcb
leave
insl
and
xchg
mov
cwtl
scas
sub
mov
sti
sub
mov
movsb
pop
mov
adcb
xchg
add
sahf
shrl
mov
fcompl
dec
shlb
shl
sti
jecxz
ja
sub
jnp
xor
out
arpl
lds
fisubl
dec
jge
aam
shrl
inc
adc
in
mov
pusha
and
loopne
inc
adc
outsl
or
sub
mull
push
jle
dec
sbb
push
mov
jo
pop
and
roll
dec
call
adc
mov
xchg
cmp
mov
mov
dec
fimull
and
inc
pop
addr16
xchg
jb
pop
adc
sahf
outsb
leave
cmp
or
dec
or
les
mov
jne
pop
cld
push
sub
test
or
push
inc
mov
rol
mov
pop
xor
out
popa
andl
mov
push
or
jg
push
outsl
stos
dec
fcomps
and
xlat
imul
inc
and
xor
push
push
out
lds
xchg
jg
icebp
jo
mov
jmp
mov
jb
push
loope
pop
push
jp
ret
stc
jg
clc
mov
ret
ja
test
xchg
shll
pop
out
rorb
sbb
adc
or
sub
or
and
add
and
push
jno
jno
adc
cmp
imulb
ja
insb
pushf
outsb
mov
lretw
cmp
andl
and
pop
add
in
scas
mov
sbb
xchg
push
xor
sub
xor
lret
shrb
push
popa
and
fidivl
cmpsb
mov
les
lahf
popf
sub
ret
clc
ss
mov
sahf
popf
mov
into
lcall
jg
and
dec
or
frstor
mov
pop
stos
outsl
fisubs
push
push
addl
xor
cmc
insb
popf
call
jge
imul
lock
push
fldenv
imul
shll
push
sarl
adc
jb
cmp
ja
push
jmp
mov
mov
pushl
test
lret
pop
ficoms
and
mov
cwtl
dec
lea
in
lds
fldt
or
in
inc
popf
push
sbb
sub
sub
out
pop
xor
cmp
aad
icebp
add
mov
inc
rolb
cmp
aas
push
pop
cs
push
sub
pushf
test
inc
rcl
push
in
cmp
pop
xor
cmp
ljmp
jmp
jge
sub
mov
into
sbb
lods
ja
jg
das
ret
pop
mov
fcmovne
pop
fst
push
pop
insl
hlt
inc
fdivs
iret
movsl
js
and
push
sbb
pop
xchg
cmpb
xchg
inc
push
ja
push
jne
out
test
pop
dec
lret
gs
jmp
mov
lods
sbb
imul
jg
mov
addr16
outsl
xor
and
xchg
sub
xor
xorb
daa
nop
call
f2xm1
ret
xchg
jle
testl
xchg
gs
mov
jl
or
mov
out
add
xchg
adc
push
repnz
fwait
mov
lret
ja
xor
or
dec
and
divl
out
pop
push
jg
js
jno
mov
or
and
sub
adc
inc
sub
leave
ret
and
test
and
js
and
cmp
stc
incb
ret
fs
jg
jge
out
lret
leave
test
je
shll
cmp
jecxz
mov
fcompl
ret
xlat
dec
lea
cmp
aaa
dec
push
imul
sbb
adc
inc
adc
jp
lret
cmp
pop
mov
mov
cmp
mov
sub
adc
scas
push
stc
repnz
outsl
popa
idivl
rcr
mov
xchg
mov
outsb
xchg
loope
adc
jne
sbb
fstps
loope
lret
fcom
rorl
inc
imul
movl
stc
je
xchg
or
and
std
pop
popa
mov
jle
and
je
adc
repz
add
mov
mov
hlt
xor
add
cmp
jne
or
mov
and
fbld
test
push
pop
mov
into
cmpb
adc
lahf
pusha
pop
out
or
bound
inc
pop
mov
das
xchg
pop
mov
movsl
bound
push
fistps
jg
mov
mov
cmc
repz
xor
xchg
sbb
insb
jne
out
inc
ds
stos
lods
cli
mov
mov
dec
xchg
jb
arpl
mov
adc
cmp
mov
jb
das
jge
pop
imul
pop
xchg
arpl
dec
xchg
cmp
popa
lds
fisubrl
das
popa
mov
pop
jle
dec
mov
add
mov
arpl
dec
loop
adc
xor
popa
or
jp
xchg
js
jne
movsb
mov
test
lods
aas
loopne
into
flds
ficomps
das
sub
shll
xchg
jmp
add
xchg
cltd
pop
dec
inc
movsb
cli
add
roll
fisttps
pop
rcr
rcrl
out
hlt
or
mov
adc
xor
xor
add
push
or
adc
xor
cmp
movsb
dec
loope
or
jg
shl
xor
out
xchg
sbb
inc
mov
push
push
rolb
or
shrl
rcr
or
pusha
add
popa
clc
mov
insl
sbb
cltd
xchg
add
mov
sub
or
cwtl
leave
or
pop
lods
pop
sahf
xchg
repnz
pop
mov
sub
jo
jecxz
jne
mov
dec
dec
mov
cmpsl
push
lret
lods
jge
dec
adc
push
pop
push
pop
ja
cmpsl
test
std
push
mov
fistpl
lahf
inc
adc
xchg
cmp
adc
popf
pmaxsw
les
sahf
aad
xor
cld
je
inc
cs
jne
cld
enter
adc
cmpsb
daa
fwait
ss
test
sbb
dec
daa
lahf
adc
sbb
lods
and
mov
push
loopne
ljmp
inc
jecxz
int
adc
jnp
sbb
addr16
cmp
call
inc
nop
jl
inc
push
or
loopne
fdivl
outsl
pushf
arpl
jo
push
bound
xchg
xchg
push
inc
sub
xor
ret
scas
aas
mov
sbb
adc
cmp
sbb
xchg
mov
mov
sub
sub
adc
std
cmp
lock
icebp
mov
testl
sub
test
or
add
lret
cmpsl
cmc
mov
adc
mov
hlt
pop
adcb
cmp
bound
xchg
xor
test
loope
or
mov
movsl
and
push
lahf
cli
or
xchg
bound
or
iret
jae
mov
lea
mov
and
adc
jge
out
fcomps
mov
ret
movb
sbbb
pop
iret
nop
ret
test
pop
sbb
mov
push
push
rorb
test
xor
gs
dec
cmp
dec
daa
gs
jecxz
es
jne
sbb
sbb
xchg
pop
sti
push
stos
inc
rcr
movsl
imul
shrl
lods
xchg
scas
lfs
addr16
popf
lret
divl
xor
ss
cmp
jnp
push
inc
pop
adc
or
div
fistpll
pusha
mov
mov
jne
daa
lock
jbe
xor
and
out
and
in
insb
add
sbb
sarl
stos
mov
ret
xor
pop
fsubs
add
std
data16
push
push
push
lods
outsb
fwait
mov
add
xchg
mov
mov
rcrb
lods
xchg
pop
jns
mov
add
into
mov
stos
sti
in
pusha
push
and
adc
inc
jnp
fidivrl
lods
add
adc
std
popa
push
fucomip
js
push
hlt
shrb
add
in
push
insb
notl
inc
sub
std
ja
mov
pop
lret
xchg
xor
rorl
out
dec
movsb
neg
xor
xchg
push
mov
lock
insl
dec
cmc
mov
incl
mov
testb
inc
jge
cmp
fidivs
adc
call
jns
cli
out
push
mov
repnz
push
cmp
push
out
addr16
inc
sub
cmp
pop
out
ja
decb
inc
stos
shlb
std
xchg
ret
mov
cld
mov
loop
lret
cmpb
cmp
xlat
enter
push
cmpsl
add
jmp
jl
add
pop
dec
jo
dec
notb
in
push
jle
inc
test
aaa
leave
loopne
fdivs
xor
aam
jnp
andl
push
push
dec
imull
ffree
push
rcrl
sub
cmpsb
and
dec
jmp
jbe
push
shlb
cs
add
mov
int
pop
jo
dec
outsb
inc
jbe
xchg
test
add
fildll
outsb
out
jp
mov
cmp
cmp
cld
xchg
adc
mov
pop
int3
inc
push
xchg
adc
mov
das
stos
dec
into
xchg
ljmp
jle
call
js
xchg
pop
lret
out
pop
xchg
shrb
mov
push
cmp
jne
inc
jns
pop
jae
mov
dec
pusha
xor
push
or
pop
or
popa
add
xor
pop
cmpsl
das
push
sub
mov
repnz
fdivr
jp
rol
mov
into
pop
addr16
adc
sub
call
adc
int3
je
sar
mov
repz
mov
jmp
fbld
add
mov
cli
mov
jns
adc
sbb
cmp
adc
push
stos
mov
dec
imul
stc
icebp
sub
pop
inc
frstor
add
mov
ret
ror
imul
movsl
dec
mov
or
test
xchg
cmp
xchg
jbe
vpcmpeqd
sar
lock
jnp
loopne
add
jns
adc
rcrb
out
aas
test
lret
inc
repnz
push
push
outsb
loope
push
push
mov
xor
inc
sub
jo
pop
xchg
movl
lods
mov
cmc
out
mov
addr16
insl
movsb
and
lds
mov
mov
xorb
in
or
xchg
jg
cmp
data16
movsl
les
and
nop
cmp
pop
in
sbb
and
inc
mov
stos
imul
push
aam
out
fsubl
jecxz
jmp
outsb
das
out
push
sbbl
das
push
xor
cld
xchg
test
xor
arpl
dec
and
call
out
in
fdivrs
push
aad
pop
iret
into
call
push
push
incb
push
jns
mov
lret
dec
or
mov
sbb
mov
add
xor
mov
leave
pop
mov
mov
mov
fdivrl
mov
mov
lods
jno
inc
mov
mov
inc
bound
scas
scas
mov
dec
sub
pop
xchg
repz
nop
lret
lret
sbb
out
sub
cmp
cld
push
inc
filds
xchg
adc
mov
call
sbb
push
into
xchg
ss
xchg
mov
cmp
pop
mov
test
scas
sbb
xor
pushf
frstor
aaa
pop
pushf
jmp
mov
std
pusha
mov
xchg
mov
xchg
pop
xchg
xor
stos
cmpsl
mov
sbb
mov
adc
aaa
lret
jo
test
sahf
or
pop
dec
loopne
rol
test
icebp
sarl
test
js
adc
aas
cmpsl
call
xor
scas
sahf
mov
pop
push
les
unpcklps
test
enter
shrl
jnp
es
inc
pop
in
push
ret
push
add
or
and
cmpsl
xor
xor
and
decl
mov
cmp
int
mov
cmp
and
negl
push
mov
in
mov
cmp
dec
jne
push
push
fsubr
cmp
xchg
out
jo
mov
mov
aad
mov
mov
xlat
out
lret
xor
gs
popf
mov
jo
cmp
xchg
fisubrs
sahf
bnd
dec
arpl
and
daa
sbb
mov
fwait
repnz
sub
jno
dec
push
mov
inc
les
and
outsb
push
push
loopne
inc
sub
and
rcll
and
mov
add
rol
scas
sbb
jo
or
cmc
out
test
imul
cmpsb
jl
rcrl
sbb
shr
jns
lea
ljmp
imul
lods
fists
jno
xchg
in
fildl
movsb
ret
js
frstor
dec
outsb
mov
scas
add
cmpsb
push
and
mov
or
xchg
aaa
add
pusha
out
test
icebp
mov
xchg
push
mov
xor
adc
cmp
mov
sbb
or
mov
adc
popf
loopne
out
xor
jne
add
mov
or
fiadds
add
in
mov
fisubs
sub
or
inc
das
pop
push
adc
clc
mov
scas
push
cmp
ds
popf
icebp
xchg
cli
add
lret
movl
sub
and
and
jns
scas
inc
dec
add
stos
std
push
push
dec
xchg
lahf
pop
mov
xor
aam
xchg
inc
sub
pop
sbb
dec
fldenv
daa
popa
cwtl
sbb
mov
int3
pop
imul
or
fdivs
cltd
mov
test
sti
mov
mov
inc
add
pop
fiadds
push
xor
sub
daa
xchg
outsl
adc
mov
mov
lea
and
cmp
call
ss
stos
test
int3
mov
inc
or
dec
aad
xor
push
mov
rcrb
nop
fildl
pushf
xchg
sti
xor
sub
pop
cmpsl
mov
jnp
push
pop
cmpsb
pop
mov
mov
dec
outsl
addr16
daa
xchg
mul
icebp
popa
xchg
cmp
sbb
shl
fists
fistpl
cmpsb
xchg
out
xchg
xchg
js
push
insb
push
inc
mov
aam
ljmp
adc
mov
shr
aas
mov
cmp
jno
or
mov
lock
mov
jae
cmp
pop
imul
xchg
popf
inc
fisubrs
icebp
pop
pop
stos
mov
inc
gs
dec
stos
mov
pop
push
repz
xlat
xchg
das
add
mov
jp
xchg
pop
xchg
fcmovnb
mov
js
inc
or
inc
lret
sub
pop
test
mov
mov
test
push
in
adc
push
sbb
jne
cld
mov
nop
mov
adc
jl
xchg
push
adc
imul
mov
xor
nop
mov
pop
adc
pop
jge
lock
ja
jmp
push
jp
inc
adc
xchg
cmpsl
and
clc
loop
int
or
test
outsb
add
lret
and
lock
lahf
cs
push
mov
ss
and
aas
pusha
xchg
xchg
je
sbb
es
mov
sub
mov
sub
mov
sbb
add
mov
test
mov
xchg
sbb
stos
xchg
int
inc
aad
jae
cmp
insl
and
inc
stos
push
int
mov
mov
lret
sub
mov
sub
cmp
das
jns
inc
pop
imul
mov
push
subl
fistpl
repz
xor
mulb
jno
mov
adc
jnp
arpl
pop
out
ja
out
or
mov
dec
loop
popa
inc
sub
ds
add
jg
movsl
dec
stos
mov
sti
jmp
fdivl
dec
shrl
sbb
in
arpl
loopne
cs
sti
sbb
xorl
nop
xor
aad
xchg
jns
lock
xor
lods
je
xchg
mov
ja
inc
dec
loopne
lea
shl
ds
pop
cmp
lea
jo
int3
mov
lods
fsub
fwait
sub
sti
pop
or
das
outsb
pop
push
scas
hlt
fisubl
cmc
lods
jae
dec
adc
or
xlat
sbb
mov
sbb
xchg
int3
push
xchg
das
mov
insb
cmp
push
lock
cmpsl
ss
nop
xlat
in
or
or
lahf
push
xchg
cmp
dec
pop
jo
pop
and
and
mov
iret
shll
aas
sbb
nop
aam
sub
enter
je
out
sub
and
add
pusha
enter
pop
pop
inc
push
xchg
mov
gs
pop
test
jl
mov
inc
lods
and
sbb
mov
inc
xlat
scas
mov
les
mov
fwait
popa
mov
cwtl
cmp
and
xorb
dec
fmul
jge
inc
cmc
xchg
mov
push
pop
sub
and
cld
jb
into
incl
xchg
inc
repnz
cmp
lea
jge
mov
sub
sub
pop
cmpl
mov
mov
leave
dec
cli
insb
leave
and
jmp
clc
mov
push
outsl
xchg
test
cwtl
dec
push
sub
jno
add
mov
subl
mov
popf
sbbb
inc
int3
cs
loope
cmc
inc
jne
in
lret
jns
pop
ret
aam
stc
dec
xchg
pop
cld
clc
dec
dec
inc
xchg
lods
or
xchg
xchg
jl
es
popa
pushf
shlb
mov
cmp
cmpsl
push
adc
stos
clc
sti
cwtl
loope
pop
push
mov
lea
dec
sbb
hlt
outsb
mov
movzbl
jo
lahf
xchg
sarb
and
jbe
insl
mov
popf
mov
push
xchg
mov
flds
cmp
mov
mov
sti
hlt
mov
or
jp
and
mov
pop
pushf
xlat
cmc
cltd
shrb
xor
lds
jb
popa
cmp
lret
xor
or
in
and
inc
xchg
test
scas
mov
mov
jo
push
leave
fildll
lock
sbb
test
xlat
adc
cmp
or
jno
lods
add
andl
ds
mov
jbe
adc
mov
inc
test
push
loopne
pop
lret
push
mov
jp,pt
insb
push
dec
add
adc
xor
or
xor
les
ds
ret
test
loop
jae
push
imul
imul
out
inc
mov
stos
push
mov
inc
in
stos
cmp
fstpl
rclb
xchg
push
call
andb
pop
push
mov
leave
jmp
jb
imul
dec
mov
mov
movsl
aas
push
enter
inc
xlat
mov
pop
push
scas
push
mov
inc
movl
repnz
insl
movsl
adc
inc
in
fsubs
insl
cmp
mov
repnz
lock
pop
dec
mov
add
and
cmpl
xchg
mov
xchg
int
lea
push
leave
ja
cmp
mov
xchg
cld
in
jmp
or
cmp
aam
shr
dec
dec
loop
imul
xchg
jge
adc
push
sub
lods
and
jo
mov
adc
in
xchg
stos
sbb
insl
push
jge
mov
pop
mov
sbb
in
inc
test
in
sbb
xchg
sub
std
cmp
sbb
stos
jns
dec
clc
aas
out
ds
sbb
push
out
ds
add
dec
xchg
fnstsw
jo
ret
push
test
lock
jns
stos
sub
xor
or
add
inc
imul
gs
mov
fists
shlb
xchg
cmp
sbb
jae
rol
test
xchg
sbb
je
pop
xchg
add
xchg
dec
fisubrs
xlat
mov
add
add
mov
jge
shlb
mov
cs
xlat
js
mov
dec
jg
cwtl
adc
aad
outsb
sbb
notb
daa
xchg
pop
jns
or
cmp
test
nop
into
lods
mov
bound
xchg
push
and
mov
int
outsl
out
mov
out
pop
hlt
jbe
push
cmp
push
adc
stos
xor
inc
jo
mov
dec
call
xlat
frstor
or
into
je
dec
push
cmp
push
dec
pushf
pavgw
add
xchg
sub
rcll
aad
add
out
mov
dec
mov
js
inc
bound
mov
int3
push
in
repz
repz
or
xchg
outsb
mov
mov
int
push
jno
and
add
out
fildll
scas
push
hlt
xor
lods
cs
fimuls
and
xorl
jno
inc
sar
testl
inc
scas
pop
add
xchg
mov
cmpsb
jg
ss
cwtl
jae
cmp
test
mov
xchg
and
daa
xchg
ss
inc
jp
ja
push
aas
push
clc
sub
mov
push
cmpsl
cmp
mov
ss
sti
pusha
xorl
mov
dec
mov
cmp
cld
lret
int
inc
mov
dec
mov
lds
dec
repnz
fcoml
or
movsb
inc
and
bound
ret
ficompl
pusha
inc
inc
mov
xor
xlat
and
sahf
stos
addb
stc
insl
dec
mov
popa
ss
lahf
inc
sub
movsb
cmp
lock
pusha
sub
xorb
or
dec
push
jb
xchg
stos
mov
xchg
daa
mov
xor
out
idivl
in
push
mov
imul
mov
inc
dec
jnp
xchg
stos
pop
sarb
adc
stc
lods
test
push
pop
sub
imul
and
adc
jae
or
fisubrl
adc
dec
jno
mov
popf
icebp
das
push
xor
shrl
add
or
mov
aaa
in
jle
mov
stos
outsl
setae
and
loop
mov
adc
jae
jmp
nop
add
testb
icebp
nop
outsb
lods
dec
sub
lea
adc
mov
mov
hlt
aad
icebp
cld
stc
xchg
les
mov
push
ljmp
mov
dec
int
repnz
jle
lea
jl
lcall
bound
mov
jmp
fisttpll
pop
cli
dec
pop
mov
inc
aad
repnz
ljmp
push
lock
icebp
cmpsb
and
mov
fisttps
loope
xchg
adc
adc
or
in
mov
imul
sub
xlat
add
dec
mov
sbb
mov
dec
bnd
mov
pop
enter
test
das
push
push
xchg
xor
aas
leave
notb
aas
sub
into
pop
push
rcr
outsb
repnz
push
pop
dec
daa
mov
mov
pop
scas
or
cwtl
clc
mov
xor
jbe
sbb
clc
xchg
lea
fs
pushf
imul
xchg
es
add
int3
push
inc
scas
inc
xchg
clc
or
mov
shrb
sub
dec
hlt
add
mov
push
icebp
loop
jecxz
rorb
inc
sbb
xor
pop
inc
inc
lea
sahf
stc
into
push
cmc
in
shrb
adc
fs
js
adc
scas
ljmp
test
es
ret
xchg
pushf
rcr
jbe
loopne
insl
or
leave
push
rolb
mov
aad
mov
mov
and
push
push
and
test
sub
adc
ja
adc
push
push
fldt
push
adc
jo
stc
push
or
js
jge
shrb
cltd
mov
mov
push
jmp
test
mov
jle
popa
cmc
dec
pop
or
cmp
cmpsl
add
sub
imul
dec
aas
insl
out
cs
xchg
fimull
dec
mov
xchg
xchg
dec
xchg
adc
mov
xorb
and
adcl
add
lea
or
icebp
enter
add
icebp
jns
push
aas
out
xor
negl
test
sbb
and
xchg
jmp
jno
pop
loopne
xchg
jmp
mull
scas
dec
call
inc
arpl
in
and
ja
push
and
out
mov
dec
or
sub
lret
lret
mov
fldt
pop
mov
loope
repz
ljmp
imull
fadds
jl
insb
dec
pop
stc
fisubrl
xchg
ffreep
mov
stc
dec
ds
adc
or
movsl
inc
loop
push
lcall
push
pop
adc
loopne
ret
mov
xor
push
icebp
jge
ja
or
mov
adc
out
push
fcompl
xor
lcall
imul
cmp
ja
fsubl
aaa
jl
xchg
repz
jmp
inc
push
or
pop
add
cld
sbb
aaa
pop
fldenv
and
fwait
mov
fdiv
enter
aaa
jne
ds
int
daa
inc
xlat
cld
in
pop
cmpsl
push
flds
or
pop
and
out
jg
push
lcall
in
cmpsl
xor
jl
push
les
jae
pop
inc
lods
aas
cmpl
and
cmp
adc
fwait
mov
jno
mov
adc
pop
mov
es
popa
adc
jb
and
mov
cmp
mov
cmp
add
int3
jno
or
cli
fidivrl
loope
mov
incl
std
sub
push
cld
aas
mov
mov
push
inc
jmp
push
mov
pop
mov
mov
push
mov
pop
mov
das
xor
cwtl
adc
jbe
dec
jp
xchg
fldl
arpl
or
adc
sarl
jne
xchg
mov
dec
pop
cmp
in
jge
inc
jo
pop
mov
addr16
jnp
repz
ret
jge
jae
push
mov
and
xchg
inc
sbb
add
cli
in
test
adc
enter
test
clc
iret
lds
push
push
insb
arpl
std
cmc
mov
ljmp
add
loopne
cmp
daa
add
adcl
jmp
lods
adc
push
out
movsb
push
out
sarl
and
insb
cmp
push
add
out
lock
pop
sbb
dec
or
push
dec
rcll
mov
jb
aam
push
sub
test
mov
outsb
jno
mov
and
sbb
cmp
push
adc
jns
shl
mov
and
cmp
jmp
push
outsb
sbb
mov
and
das
mov
clc
lods
mov
movsl
dec
sbb
mov
arpl
push
push
push
xor
jle
adc
test
dec
in
xchg
pop
sar
dec
inc
in
adc
lods
adc
or
push
sbb
out
or
loope
pop
cmc
cmp
mov
loop
aaa
fnstcw
cwtl
sarb
sub
jb
mov
sbb
sub
sti
out
adc
inc
or
lods
xor
out
mov
mov
imul
out
push
adc
icebp
fmull
fsubr
pop
adc
cltd
rcrb
js
js
std
sahf
pop
or
in
clc
data16
push
mov
repz
popf
sub
in
stos
stc
cmp
pop
xchg
sub
test
cmc
orb
mov
jl
or
bound
repz
cld
xor
cmp
lods
imul
adc
jmp
stos
adc
or
inc
andb
push
jp
lds
push
gs
lahf
inc
xor
ja
filds
jae
imul
mov
negb
mov
cmp
shlb
in
push
mov
or
je
cmc
clc
mov
cmp
dec
imul
loope
cmpb
jb
dec
inc
rorb
sub
sub
popf
aam
add
adc
dec
and
mov
popa
daa
imul
pop
shrl
iret
jg
xchg
shlb
shll
adc
mov
jp
or
mov
xor
lods
jnp
dec
pop
and
sbb
sbb
cmp
sub
dec
jg
push
dec
cli
iret
sbb
and
test
in
daa
fistps
push
mov
mov
mov
int
nop
cmpsw
mov
cs
and
sahf
add
cmc
sbb
push
sub
sbb
mov
sub
cmc
ds
stc
or
mov
sbb
mov
test
ret
pop
cld
ja
and
out
jl
push
push
movsl
lahf
test
adc
cltd
ja
in
mov
add
inc
test
gs
push
fcoms
mov
or
outsl
mov
xchg
dec
inc
outsb
mov
sbb
or
inc
cmc
aas
push
icebp
call
hlt
outsl
xor
inc
fcompl
inc
pop
xor
sbb
sbb
mov
aad
lret
xor
sbb
push
cmp
cltd
mov
add
xchg
push
mov
dec
das
mov
cmp
movntq
addr16
xchg
sbb
sbb
nop
adc
xchg
push
push
out
or
negl
ret
jp
iret
in
outsb
xor
cltd
ja
sbb
lods
jb
add
mov
lea
cmp
lds
pushf
divl
outsl
cmpsb
xlat
lock
sbb
pop
fwait
jae
mov
push
lods
inc
leave
outsl
cmpsb
aas
xchg
mov
jne
jecxz
gs
push
mov
sub
mov
xchg
mov
jmp
cmc
loopne
es
fdivr
popa
inc
lods
sbb
loop
mov
mov
and
mov
adc
add
std
pop
loope
pop
xchg
icebp
repz
rcrl
cwtl
stos
out
je
iret
mov
fs
jnp
inc
addl
aas
test
and
sub
xlat
notb
add
xor
adc
or
xorl
inc
lret
mov
lahf
mov
xchg
mov
dec
mov
or
or
test
add
pusha
push
aam
test
mov
adc
loopne
not
adc
lahf
adc
dec
enter
jmp
cmpsb
xchg
jge
in
test
push
test
jmp
adc
loop
sub
or
repz
fisubs
and
add
adc
hlt
xor
in
lret
push
push
push
xor
ljmp
push
push
je
mov
bound
push
jge
pushf
adc
jnp
sub
sub
into
out
lods
sbb
mov
mov
test
ret
aas
mov
int
mov
icebp
loopne
jmp
dec
sub
mov
ss
dec
cwtl
push
shll
add
lea
pop
pop
jb
js
js
or
sbb
nop
imul
mov
ljmp
mov
cmp
jb
inc
mov
pushf
outsl
aad
and
push
cmp
insl
jo
cmp
pop
aad
sbb
ror
and
roll
push
movsl
add
movsl
aaa
push
add
movsl
sub
out
fdivs
sahf
jnp
mov
mov
fimull
shl
xchg
xor
outsb
dec
xchg
jne
add
mov
cmp
xchg
aad
cmp
mov
mov
jl
dec
fmuls
sti
test
pop
in
or
add
adc
shrl
xor
mov
imul
mov
cmp
and
push
dec
dec
in
shll
scas
push
cs
mov
mov
xor
inc
pop
enter
add
aas
xchg
inc
and
popa
jno
inc
pusha
insl
cmpsb
add
sbb
jne
xor
mov
xor
mov
sbb
jge
cli
pop
loop
jmp
cli
mov
cmp
int3
jmp
vcvttpd2dqy
push
mov
into
rclb
fwait
test
sub
jmp
inc
das
orb
cmp
xor
adc
in
inc
repnz
jp
ret
jle
gs
in
xor
mov
jne
insl
jnp
add
inc
pop
mov
xlat
arpl
mov
cmp
inc
jmp
sub
pop
rorl
gs
jbe
mov
leave
push
push
sarl
fdivr
gs
loopne
sti
sub
inc
inc
adcl
pop
cmpsl
mov
mov
mov
mov
xor
mov
rorb
adc
arpl
pop
les
add
in
or
pusha
sahf
incl
jns
cmp
rep
and
add
lds
ljmp
or
add
jnp
push
mov
flds
adc
mov
gs
mov
cmc
lea
mov
sub
jle
dec
test
pop
mov
lret
sub
out
inc
push
je
clc
push
int
sarl
cmp
inc
movsl
repz
fucom
cltd
fldcw
mov
jmp
imul
and
xor
adc
pop
or
es
cltd
pop
movsl
push
lock
imul
jne
in
mov
dec
inc
pop
int
add
addr16
sub
test
test
or
scas
aas
sub
mov
mov
xchg
mov
dec
out
xchg
pop
jl
movsl
test
sarl
in
xor
mov
adc
xchg
xchg
aam
es
and
push
add
out
call
push
dec
mov
cmp
rcr
pop
jg
in
xchg
cmp
sbb
pop
pop
fs
test
push
pop
leave
fistl
jo
test
aas
jmp
mov
push
adc
push
jmp
mov
shll
pusha
jnp
mov
cmp
xlat
cmp
jmp
push
xchg
push
push
in
popf
inc
leave
jns
mov
mov
cli
xchg
push
and
or
adcl
out
cli
mov
push
fs
cmp
xor
sbbl
push
push
movsl
stos
notl
in
lcall
pop
xchg
sbb
pop
jle
test
imul
jecxz
scas
lret
or
mov
lods
jecxz
inc
subb
sar
dec
outsl
add
cmpsb
cmp
push
dec
out
add
lock
push
popa
mov
inc
inc
outsb
sub
pop
mov
dec
loop
repz
and
or
scas
cld
daa
lea
insb
clc
aam
push
add
mov
sbb
jl
inc
sub
adcl
inc
scas
fwait
cmp
es
push
sub
imul
and
test
shrb
push
data16
jnp
out
fdiv
mov
pop
mov
out
test
std
cmp
popa
xchg
jge
repnz
adc
adc
pop
fisttps
test
adc
loopne
in
arpl
lahf
cmp
mov
rorl
sub
sbb
adc
add
cmp
cmpsb
f2xm1
and
adc
xor
ds
inc
dec
fwait
lahf
rorb
sub
pop
inc
repz
stc
lods
sbb
frstor
add
push
add
and
jb
and
fistl
mov
scas
mov
xchg
leave
and
in
orb
stos
sbb
lret
fildll
cmpsl
and
xor
mov
and
mov
test
push
ja
ljmp
xchg
sarl
sub
mov
shr
ds
aaa
iret
add
and
outsl
test
xchg
int
dec
inc
mov
rorb
outsl
roll
dec
or
lods
xchg
into
mov
test
push
ja
mov
jl
je
or
push
mov
or
jp
cli
mov
stos
shll
lds
cmp
call
cltd
insb
sbb
into
testb
cmp
bound
jb
in
push
xor
push
sar
enter
adc
cmpsb
mov
int3
dec
insb
add
jg
cmp
in
xchg
add
imul
andl
mov
popf
pop
stc
addb
test
lahf
cld
scas
loopne
jle
shl
sub
pop
jg
test
in
xchg
push
mov
or
push
bound
pop
jp
and
scas
out
adc
mov
cs
lock
in
jns
mov
fistl
popa
adc
popa
aas
xchg
xor
nop
mov
or
hlt
cltd
xor
popf
sub
or
jecxz
push
into
mov
push
xlat
scas
mov
lea
sub
test
cmp
scas
imulb
xor
mov
sub
mov
cs
loope
mov
pop
xor
je
fdivrl
addr16
jns
rorl
imul
mov
cmp
sbb
and
sbb
in
popa
popa
sbb
es
jle
sti
rcll
mov
mov
fsubrl
cmpb
stc
int
xor
in
pop
sbb
cmpsl
mov
movsl
cltd
daa
xchg
inc
or
movsb
in
dec
aas
pop
cmc
mov
stc
out
js
mov
nop
int
stos
out
ljmp
iret
fistpl
int3
ret
or
pushf
inc
test
inc
fnstcw
ss
push
xchg
sub
aaa
mov
and
xchg
xor
sbb
out
cmp
inc
xchg
int
add
loopne
and
pusha
mov
mov
lock
dec
dec
cmp
adc
adc
mov
fdiv
lock
lahf
nop
xchg
push
jmp
lods
mov
dec
inc
xchg
mov
and
cmp
xchg
sbb
push
in
lahf
pop
ja
out
mov
push
mov
xchg
cmpsl
jp
or
insb
mov
xor
gs
jo
fwait
dec
shrb
sar
out
inc
push
stc
add
and
inc
cwtl
dec
jp
xchg
addr16
das
and
cltd
adc
or
mov
mov
pop
ljmp
imul
jbe
push
mov
cmc
sbb
jns
inc
clc
imul
je
clc
jo
xchg
int
aas
sbb
pusha
rolb
sti
mov
aaa
adc
xchg
popf
stos
clc
adc
jae
pop
cmp
pop
out
fiadds
loope
pop
push
pop
loop
xchg
fsts
xor
mov
or
mov
or
add
push
inc
cli
sbb
pop
lds
or
imulb
mov
mov
cmp
jmp
outsb
pop
jle
popa
and
pushf
pop
cltd
sub
imul
pop
xor
pop
shrl
jmp
bnd
movsl
ret
and
sbb
nop
pop
or
jmp
xor
icebp
jp
lea
mov
shl
jp
push
sahf
adc
sbb
inc
inc
and
adc
lret
in
clc
inc
inc
mov
outsl
test
inc
push
add
dec
push
imull
invd
inc
jp
jl
out
cmpb
dec
mov
aas
and
jg
dec
pushf
in
xor
jge
dec
dec
test
test
adc
xor
es
sbb
push
enter
mov
rolb
repz
mov
cmp
lods
js
or
xchg
ret
sbb
fisttpll
je
fnstsw
and
std
imul
sub
jb
in
add
cwtl
add
inc
xchg
jge
js
mov
add
rcll
push
xor
sbb
cmp
mov
mov
mov
ret
jo
pop
and
je
mov
cmp
imul
js
clc
int3
xchg
jae
push
mov
jmp
mov
int
pusha
ss
test
stos
repz
jmp
popa
add
leave
fiaddl
inc
mov
ja
lret
lcall
xor
arpl
fistpll
inc
adc
jno
cmp
out
cmp
lea
sbb
cmpsb
lcall
scas
push
in
mov
and
dec
loopne
lret
fsts
mov
xchg
add
xchg
sarb
xchg
loop
aaa
fbld
out
mull
push
mov
mov
mov
lret
shll
mov
sbb
add
push
rcll
dec
cld
xor
add
movsb
ds
icebp
rcrl
pop
pop
insb
jecxz
pop
divb
sahf
scas
out
arpl
push
sarb
xchg
and
pop
data16
mov
arpl
mov
lret
addb
addps
xchg
fcomip
push
mov
adc
je
mov
fcomi
sub
or
jge
adc
aad
hlt
cmpsb
pop
dec
dec
jg
mov
mov
jg
add
vdivps
xchg
gs
sub
repz
out
repnz
daa
cmpxchg
test
vmovd
mov
jne
push
xchg
loop
cld
sub
nop
cld
cmp
test
push
sub
hlt
inc
adc
push
or
push
adc
in
in
cmp
xchg
xchg
push
sar
inc
inc
test
and
stos
xlat
xchg
insb
ss
or
sti
fs
lahf
pop
mov
mov
or
jecxz
out
sbb
dec
pushf
xor
mov
dec
fxam
jp
cmp
sbb
ds
ret
cmp
popa
and
gs
xlat
repz
jns
mov
cmc
mov
cmp
jle
mov
fisubs
cld
imul
test
xchg
and
dec
mov
movsb
stc
subb
dec
inc
cli
fs
popa
and
jae
outsl
add
outsb
sbb
mov
shll
inc
cmpsl
movsl
mov
mov
cmc
sar
call
push
pop
jbe
ljmp
daa
push
xor
inc
jne
js
push
mov
in
dec
or
jae
out
jle
sahf
mov
push
pushl
jg
jae
aad
mov
and
lahf
mov
test
xor
test
in
clc
add
push
pop
scas
fsubrl
mov
rolb
pop
mov
ss
dec
xor
das
mov
mov
inc
and
test
jge
add
sub
jle
js
fisttpl
ljmp
jl
imul
mov
ffreep
lods
cmc
add
mov
cmp
sub
push
mov
mov
je
cmp
scas
pop
out
mov
pop
in
aaa
in
sti
into
ret
inc
dec
mov
or
or
out
mov
pop
lcall
scas
push
sbb
ja
push
ss
jecxz
fsts
loope
ror
pop
stos
cmp
mov
mov
sbb
test
add
outsb
pop
xchg
sub
pop
inc
call
cmpsb
call
lret
pusha
xor
push
and
icebp
fdivrl
xchg
out
push
pop
inc
sub
cmp
push
lods
push
ljmp
pop
cmc
sbb
xchg
addr16
push
sarl
dec
fmuls
sahf
out
insl
pop
pusha
es
lahf
jbe
and
push
xor
jne
mov
lret
lock
add
add
pop
or
in
jmp
mov
xor
pop
jnp
lret
push
xor
sahf
in
add
xchg
mov
pop
inc
mov
out
or
mov
mov
cli
mov
mov
out
sbb
in
dec
repz
mov
ja
idiv
xchg
stos
mov
add
pop
mov
xchg
jmp
fistpll
mov
push
dec
in
int3
vcvtss2si
hlt
scas
ja
xor
data16
repnz
fisubrs
insl
mov
dec
pop
jae
pop
pop
std
add
mov
mov
frstor
mov
jb
mov
inc
add
cmp
pop
ds
push
xor
push
iret
test
and
test
movsl
lods
pop
shll
je
adc
jne
push
dec
jb
test
xor
push
xor
dec
movsb
push
int
xor
in
lret
jmp
xchg
add
and
inc
jg
add
jecxz
rorb
or
fs
pop
mov
and
mov
push
inc
jo
mov
das
jno
sbb
fldl
scas
dec
faddl
sub
xchg
push
jg
xor
mov
mov
loopne
jmp
orl
dec
icebp
je
push
or
clc
pop
mov
push
enter
enter
arpl
movsl
mov
daa
pop
repz
mov
dec
push
mov
inc
or
adc
pushf
pop
xorb
sub
in
sub
mov
cmpsb
stos
in
dec
jmp
es
stos
int
adc
fs
je
out
mov
sub
dec
test
gs
jge
adc
sub
dec
xorl
insl
test
and
dec
lds
imul
mov
outsb
ljmp
dec
arpl
imul
clc
mov
sahf
add
repz
mov
jge
or
repnz
insl
sub
cld
ja
ss
je
lret
lea
mov
je
mov
xor
clc
pushf
and
mov
jge
out
outsb
daa
pop
mov
pushf
call
dec
cmp
lret
inc
ret
or
push
xor
jo
sub
rcr
mov
or
fyl2x
cs
stc
or
dec
xchg
addr16
outsl
push
push
adc
lock
push
xchg
enter
sub
add
or
pop
or
mov
mov
repnz
leave
push
loope
mov
push
pop
sbb
and
dec
ljmp
jg
jl
dec
sub
push
out
push
mov
pop
cmp
sbb
pop
or
outsb
cwtl
decb
testb
stos
mov
ljmp
push
lds
scas
push
or
test
dec
pop
fwait
gs
lret
xor
aam
data16
call
mov
and
xchg
xchg
mov
cmp
xchg
cmp
xchg
or
mov
mov
in
loop
loop
xor
adc
rcll
pop
in
loop
inc
bnd
into
bound
ret
mov
xor
or
adc
mov
loope
js
xchg
xchg
fsubs
pusha
ja
mov
test
stos
xor
test
out
push
cs
pop
icebp
hlt
test
in
in
push
lods
inc
test
sub
sub
xchg
lea
sub
xchg
and
scas
dec
xor
mov
pushf
pushf
mov
lret
add
cmpsl
comiss
mov
sbb
in
orb
mov
cmp
ds
dec
xor
cmpsl
das
fldenv
dec
das
enter
xchg
pop
and
xchg
inc
rol
jno
ja
dec
orb
test
add
push
mov
adc
std
jno
iret
sti
adc
mov
inc
lcall
ljmp
xor
ret
out
hlt
sub
dec
push
inc
pop
push
ja
push
clc
ficompl
shlb
mov
push
jmp
idivb
pop
js
mov
xor
les
js
in
movsb
out
pusha
ja
es
rdmsr
sbb
cmc
mov
mov
cmp
mov
fs
rcll
mov
aaa
into
dec
mov
pop
and
jle
clc
lret
fwait
pop
mov
fistpll
aam
stc
out
iret
daa
movl
push
and
push
lret
inc
sbb
add
bound
stos
jecxz
inc
adcl
dec
push
inc
xchg
lods
arpl
cli
insb
loop
cmp
fstl
adc
ja
ret
icebp
imul
loopne
fnsave
movsl
and
cwtl
mov
dec
cmp
dec
mov
inc
outsl
inc
and
add
add
push
inc
or
jmp
mov
pop
jmp
ljmp
inc
push
adc
fucompp
dec
lret
fists
jno
push
pop
mov
pop
jae
dec
pop
jae
outsb
pop
inc
movlps
cli
push
xchg
es
faddp
dec
mov
pop
outsb
mov
aam
loope
fwait
test
fimull
xor
sbb
jb
cmc
jge
pop
pop
inc
sbb
adc
rcll
ljmp
ret
push
addb
outsb
lret
lret
mov
xbegin
in
inc
adc
loopne
push
push
add
fistpll
cmp
aad
jne
push
pop
jl
xor
fwait
pop
or
aaa
out
icebp
pop
mov
mov
sbb
or
jnp
lcall
test
add
dec
ficomps
pop
int3
daa
dec
cmpsl
popa
jo
call
sub
lock
in
cmpsw
pop
das
rclb
push
cli
xlat
adc
add
ljmp
idivl
add
mov
dec
adc
jb
cmpsb
cltd
jb
enter
addb
jmp
aaa
mov
cmp
and
pop
jg
add
jp
inc
sub
addr16
mov
stc
jge
inc
inc
inc
adc
jbe
fbstp
fistps
mov
mov
xchg
into
push
out
adc
and
test
in
aam
pop
sub
fbstp
adc
or
xchg
dec
sub
fisubrl
out
loopne
jb
jne
add
vpcmpgtw
push
pop
int
fsts
or
mov
mov
mov
pop
sti
sbb
mov
pop
push
mov
popa
mov
sti
adc
test
xchg
mov
pop
xor
adc
mov
fcompl
mov
sbb
push
cmp
jl
jo
xor
jecxz
mov
enter
leave
mov
xor
out
stc
shlb
adc
add
std
xchg
inc
jae
pop
mov
fimull
sbb
in
jge
xor
xor
clc
lea
aam
xchg
dec
jbe
push
test
fs
fs
cmpsl
fisubs
adc
lret
pop
mov
orl
and
fists
mov
push
out
popf
pop
sti
push
push
jl
pop
xchg
jo
std
xor
mov
xchg
ljmp
outsb
out
lds
adc
dec
andl
push
mov
sar
testb
cld
dec
jle
nop
lock
pusha
jle
sbb
add
mov
es
mov
pop
xchg
sub
push
and
fcom
or
inc
jo
hlt
aas
shr
adc
jle
cli
adc
and
test
pop
cltd
fcompl
or
mov
add
lahf
stos
lods
mov
mov
sbb
jo
sbb
jb
sub
daa
imul
cmp
aas
data16
add
ror
jbe
mov
movsb
adc
add
sbb
xchg
or
xor
inc
mov
insb
jecxz
mov
cmp
sbb
stos
jp
add
int
dec
repz
andb
daa
sbb
pop
mov
sbb
xchg
les
push
inc
push
xor
xchg
add
cmc
jge
stos
in
mov
sarl
dec
vandnpd
mov
lahf
shrb
push
sbb
mov
and
mov
inc
insb
mov
loopne
rcr
sub
mov
das
sbb
mov
or
stos
sti
mov
or
rol
xor
fwait
adc
int3
repz
xchg
cmp
test
fists
fiaddl
push
xor
mov
js
mov
sub
gs
popa
lcall
icebp
mov
in
cmp
int
xor
aas
mov
aaa
aam
enter
and
fcmovne
popf
icebp
pusha
sbbb
dec
mov
xchg
and
inc
test
fs
push
mov
je
inc
pop
mov
insl
int
and
push
icebp
outsl
dec
gs
lods
movsb
or
sysexit
push
test
popf
or
bnd
test
repz
jg
inc
aad
mov
rcr
stos
dec
icebp
mov
add
pop
or
out
jno
xchg
adc
dec
outsb
outsb
adc
push
dec
out
xchg
adc
jno
xchg
xor
fimull
cmp
repnz
fwait
cmp
cmc
sub
imul
rorl
push
jb
xor
mov
mov
push
adc
int
in
or
shll
inc
out
inc
cmpsb
mov
and
frstor
pop
sub
das
push
xor
sbb
mov
pop
jb
adc
pop
jnp
nop
movsb
dec
xor
out
les
cltd
icebp
sub
bound
out
test
ret
pop
ret
mov
mov
cmpsb
pop
push
add
pop
sbb
adcb
lcall
pop
sar
test
bound
add
add
pop
lret
imul
les
push
test
scas
push
mov
das
dec
into
sub
movl
inc
xor
or
xchg
mov
into
sbb
adc
pusha
lock
adc
push
subb
shl
add
mov
in
add
pop
sbb
jle
jbe
or
or
and
cwtl
xor
push
xchg
sub
mov
and
repnz
lret
fwait
mov
sub
inc
out
jecxz
jae
out
fisubrs
mov
dec
sahf
cmc
les
repz
testl
jno
cmp
jbe
add
stos
aam
push
jmp
cmp
int
jb
nop
or
shrb
cltd
in
adc
adc
lods
ret
gs
dec
sbb
lock
repz
sub
test
out
pop
pop
ljmp
and
mov
fsubl
dec
mov
and
xchg
sub
addr16
shr
ret
mov
xor
add
cli
cmp
shl
mov
pop
adc
js
mov
repz
mov
dec
sbb
mov
leave
clc
push
ret
jge
jbe
movsl
mov
xor
out
roll
iret
sbb
or
ljmp
cmp
push
and
and
orb
cmp
aam
jmp
pop
add
aam
cmp
add
sahf
aaa
sbb
je
divb
adc
mov
mov
xchg
jle
adc
in
push
inc
xor
es
adc
or
dec
and
loop
out
adc
xchg
sbb
pop
jae
push
aad
aad
fs
mov
shll
jns
mov
dec
jne
mov
mov
gs
inc
arpl
push
mov
ret
in
lcall
pushw
lods
ljmp
xchg
or
sbb
cmpsb
and
inc
mov
sub
push
mov
cltd
stc
insb
push
pop
notl
in
outsl
rclb
inc
and
popf
stc
mov
inc
cltd
pop
out
cmp
cmp
fs
std
jl
test
pop
mov
mov
lods
and
jo
fistpl
es
sahf
fbstp
push
inc
mov
shrb
ror
packssdw
arpl
ret
mov
cmpsb
stc
shlb
sbb
ret
fdivrs
adc
mov
jo
pushf
je
mov
pop
shll
fwait
mov
cmp
fwait
stos
shrl
sbb
adc
dec
xor
lods
test
int
push
cmc
xor
repz
xchg
jmp
fisttpl
jge
mov
ret
xchg
sbb
or
pop
test
xchg
or
dec
push
mov
xor
sti
mov
sti
cwtl
jl
inc
hlt
and
pop
inc
jg
cmp
cli
cld
push
xor
inc
push
test
lods
xchg
or
xor
push
adc
movsb
dec
mov
cmc
push
sbb
inc
out
test
cmp
xor
jmp
add
sbb
mov
ficomps
jo
lea
shl
test
xor
aas
inc
sahf
cmpsl
data16
in
mov
rolb
data16
cmpl
nop
ret
xchg
daa
fwait
sub
pop
in
das
cli
xchg
xor
hlt
inc
data16
ja
mov
and
std
cli
cmpsb
mov
dec
pop
data16
lcall
orl
xchg
sub
push
hlt
ss
shlb
cmpsl
mov
mull
jmp
in
sbb
cmp
push
sub
ret
dec
jge
flds
cmp
push
mov
stos
mov
sub
dec
icebp
cmp
dec
stos
mov
lods
jno
or
add
test
dec
pop
in
jmp
fildl
mov
sbb
rcrl
mov
xchg
xchg
cwtl
and
or
mov
pop
dec
jns
repz
jle
mov
jb
shlb
or
rcll
or
or
das
cmpsb
or
jne
pop
jle
push
shrl
fnstcw
push
shrl
or
or
clc
test
mov
shlb
cmp
fildll
popf
shll
andb
mov
sarl
jnp
lret
jno
mov
mov
sbb
push
loope
add
sbb
fists
mov
mov
jg
cwtl
push
call
mov
ret
sbb
lods
push
sub
mov
stc
mov
call
dec
lods
insb
sbb
add
loop
push
cmp
pusha
andb
daa
jp
lods
add
ret
xchg
mov
sahf
leave
sub
mov
push
dec
in
aad
mov
stos
mov
sub
push
push
jg
or
inc
cli
lahf
mov
out
ds
sti
aas
xchg
loop
rcll
insb
cmp
int3
ja
fs
mov
lret
push
not
mov
ja
pop
shll
loop
lahf
inc
or
push
testl
call
xorl
jmp
xorb
aaa
and
dec
push
or
lcall
xchg
push
fdivl
or
dec
ds
sub
arpl
hlt
sbb
in
lock
cwtl
pop
daa
pushf
aas
out
xchg
movl
inc
inc
add
pusha
or
add
inc
adc
xor
sbb
call
imul
adc
lods
mov
push
into
adc
shlb
jl
movb
xorl
in
or
push
adcl
das
and
imul
push
push
xor
mov
xor
dec
and
inc
jle
lret
lret
add
sub
icebp
jb
pop
sbb
sar
shr
das
pusha
imul
outsl
sub
jg
je
cmp
clc
fld
mov
dec
sahf
inc
push
push
aaa
insb
inc
mov
dec
adc
inc
jbe
jo
jp
jb
push
mov
orl
lock
outsb
inc
push
pop
lods
dec
addl
ret
jnp
in
fucomp
repnz
shlb
scas
loop
xchg
and
add
es
mov
adc
jge
xor
and
dec
mov
push
loope
mov
lods
roll
repnz
xor
mov
sub
lods
in
orl
mov
xchg
push
ffree
jmp
addr16
xchg
js
or
in
ret
aad
push
xchg
into
fnsave
cmp
test
std
out
sarb
push
inc
nop
cs
fidivl
cld
xor
jecxz
cmpsl
clc
aad
sahf
mov
mov
lock
dec
sub
xchg
add
loopne
arpl
sbb
mov
jno
out
jno
add
pop
jno
sub
dec
mov
or
mov
push
or
mov
lret
hlt
scas
pop
add
push
push
cwtl
mov
cmp
lret
mov
cli
sbb
and
pushf
out
ret
mov
inc
jns
add
xchg
pop
ljmp
sub
pop
addr16
xor
lret
int3
inc
cmpsb
sub
out
mov
mov
aad
push
lret
movsl
jae
adc
in
sbb
mov
jb
add
notl
repnz
xor
sbb
sti
mov
mov
insl
or
mov
data16
ljmp
xchg
cld
mov
or
lea
aam
xchg
mov
adc
fisttpll
out
inc
arpl
push
popf
int
jecxz
outsb
imul
shl
sub
inc
sti
movsl
add
aaa
dec
sbb
lahf
mov
mov
aam
xorb
sbb
sbb
arpl
ljmp
inc
xchg
in
outsl
and
mov
push
arpl
pop
inc
inc
data16
jmp
add
xlat
test
dec
dec
aas
ret
fnsave
adc
jmp
inc
jl
push
sahf
xchg
std
jmp
out
push
xlat
in
mov
rclb
outsb
sbb
pop
push
jo
sub
sbb
aas
push
int
shlb
jne
and
imul
adc
push
add
push
fsts
mov
in
out
lret
jnp
xor
xchg
mov
fimuls
int
imul
pop
in
pop
add
fbstp
stos
cltd
mov
push
lret
nop
imul
repnz
inc
sub
sti
out
sbb
jl
add
fs
movsb
push
sub
jp
leave
icebp
jns
lret
cmp
mov
sbb
or
outsb
aas
pop
cmpb
stc
sub
aas
imul
cmp
sub
std
pop
inc
xchg
mov
adc
mov
jecxz
cmp
cmp
pop
cmpsb
dec
in
cwtl
add
jb
in
mov
aas
rolb
mov
inc
cwtl
ret
inc
adc
dec
gs
aad
movsl
cltd
push
xchg
out
xchg
cmpsl
sub
cs
and
cmp
ljmp
sub
push
iret
lret
jecxz
out
shlb
or
fmulp
push
cmc
fxch
addr16
mov
and
xchg
xlat
fstp
repnz
lods
sbb
outsl
popf
mov
xchg
dec
xchg
mov
gs
sub
shrb
jno
fwait
je
iret
lret
dec
mov
dec
addr16
rcrb
add
dec
jp
repnz
mov
scas
pop
add
mov
cli
sbb
out
sub
inc
in
pop
xor
and
mov
shl
lcall
imul
out
jnp
aas
or
or
insb
shrl
popl
lret
sti
sub
mov
loop
std
or
loopne
insb
mov
lds
pusha
mov
add
fwait
out
enter
mov
and
subl
push
jno
mov
lods
adc
pop
jl
lea
jle
jns
rcr
ret
les
pop
pop
xchg
iret
push
jg
pop
lret
aam
pusha
pop
and
pop
fxch
in
rcl
cmp
repnz
stos
test
scas
xchg
dec
adc
lods
lahf
test
lea
xchg
cltd
test
inc
dec
dec
pop
dec
pop
xchg
rcl
fmull
jnp
jg
pop
cmp
bound
lahf
jo
push
lret
filds
test
jmp
aad
mov
and
test
in
insb
jne
ss
loopne
sbb
jo
xor
push
xchg
add
xchg
ret
fmull
insb
into
enter
xchg
aaa
inc
mov
addr16
pop
fiadds
filds
scas
xor
inc
push
insl
mov
mov
pop
lods
jmp
add
pop
aad
loop
cmp
xlat
sub
mov
stos
push
sub
sbbl
out
testl
and
outsb
mov
mov
pop
xchg
ljmp
ret
out
xchg
bound
inc
scas
jb
cltd
lods
sbb
jb
add
pusha
outsb
adc
or
adc
mov
rcrb
dec
fidivs
lods
enter
ret
pushf
pop
jmp
ljmp
pop
std
lds
mov
adc
andw
leave
sub
push
incl
lock
jl
xor
xor
aad
add
fisubs
jb
bound
pusha
or
int
imul
sahf
mov
sub
fbstp
and
jo
adc
push
and
rorl
fldcw
adc
xchg
outsb
dec
jp
cmp
mov
xchg
dec
add
cmp
insl
xor
xchg
xchg
sub
xor
cmpsb
frstor
fisttpll
test
and
mov
add
jg
pop
cmp
add
xchg
xorb
jno
xor
adc
lret
pop
adc
shlb
popf
movsl
mov
xor
rclb
pop
and
inc
fdivrl
sti
push
push
mov
cmpsl
fdivrl
pop
xchg
push
ss
jns
icebp
jle
insb
dec
icebp
push
fwait
lahf
repnz
jle
cmpsl
add
subb
icebp
shrb
lods
sar
and
jecxz
xchg
inc
imul
nop
popf
adc
adcb
adc
mov
into
add
daa
adc
rcrb
pop
fmuls
xchg
rcl
out
mov
hlt
xor
adc
push
pop
xor
push
je
mov
dec
lods
cmp
hlt
cltd
jp
dec
sbb
add
adc
cmp
jae
or
jne
fdivp
add
pop
imul
fptan
cmp
push
test
and
hlt
mov
adc
es
ficoml
andl
fcmovbe
dec
bound
sub
sbb
push
ret
test
out
pushf
mov
sbb
fsubs
in
cltd
leave
sbbl
or
lahf
adc
test
push
xlat
jnp
fsubr
pop
cmpsl
mov
cwtl
or
push
frstor
out
fdivrs
aaa
call
ret
into
mov
mov
jnp
adc
jp
outsl
mov
sbb
rclb
stos
sahf
inc
pop
mov
mov
dec
mov
xor
fldl
dec
out
add
push
sub
jmp
cmp
mov
jg
enter
pop
int3
push
fidivrl
push
or
repnz
jo
jbe
call
push
jne
pop
sbb
clc
lds
xchg
pop
ret
pop
inc
inc
fimull
mov
pop
ret
inc
ret
aad
cmp
cld
jl
push
xchg
xor
loop
mov
dec
out
test
pop
push
mov
jbe
sub
fimull
dec
dec
aad
inc
mov
outsl
clc
pop
es
lea
nop
xchg
adc
jns
mov
add
adc
sbb
les
mov
cmp
pop
scas
mov
mov
sbb
dec
cmp
mov
push
xor
movsb
xchg
es
adc
sub
pusha
or
xor
push
fwait
stos
push
xchg
mov
loop
enter
divb
fwait
pop
jnp
shrl
cmpsb
push
push
nop
add
cs
jb
sbb
fwait
sub
int
cli
cltd
test
jb
add
subl
inc
xor
enter
dec
xor
inc
jp
push
loope
cmc
ljmp
leave
pop
adc
lods
add
fs
imul
pop
imul
in
mov
mov
cwtl
imul
jecxz
or
push
notb
andb
ret
mov
sarb
push
sahf
push
adc
popa
xorl
int
jmp
jp
xchg
cmp
lock
scas
sub
and
test
in
rcl
mov
sub
push
jae
js
int3
sub
and
movsl
jns
jg
and
int
or
out
pop
nop
shll
mov
mov
shlb
fistps
sbb
or
adc
stc
mov
xchg
pop
popa
or
or
sti
aad
cmp
adc
push
ljmp
mulb
ds
jnp
sub
sbb
js
out
inc
fldt
fsub
pop
add
in
cwtl
mov
loopne
lcall
push
push
hlt
in
aam
inc
rorb
rorl
js
xchg
lds
xor
jnp
imul
mov
sahf
shrl
jne
jecxz
jb
popf
outsb
add
push
dec
arpl
inc
add
mov
cmp
ss
nop
aaa
ss
inc
gs
mov
mov
mov
inc
pushf
cld
cmp
outsl
pop
imul
xchg
cltd
sar
xor
add
or
xchg
sbb
in
stos
push
add
inc
jbe
jle
scas
inc
icebp
inc
das
scas
pop
arpl
arpl
loop
decl
cs
cld
inc
arpl
mov
es
dec
lretw
inc
push
lock
insb
je
sub
pop
pop
jno
and
sbb
dec
fwait
add
pop
stos
jecxz
vorps
lret
shll
xchg
imul
mov
jno
sub
mov
jge
xchg
push
bound
or
push
stc
out
add
popf
jle
push
cmp
fstl
aaa
jbe
xchg
sub
pop
push
add
daa
mov
pop
pop
arpl
stos
mov
sbbl
mov
roll
jl
daa
dec
and
sub
clc
cli
sbb
loope
xor
cmp
cltd
mov
xor
mov
pop
cmp
inc
mov
push
jno
fstps
scas
in
ret
cmc
push
mov
jbe
sbb
cmpsl
xchg
mov
mov
push
mov
inc
pop
nop
xor
and
jge
fistpll
jb
push
ret
pop
out
les
xorl
push
arpl
mov
daa
push
and
fstpl
push
xor
and
mov
outsb
mov
fcomi
cmpsl
mov
pop
xlat
mov
jno
pop
mov
popa
inc
loope
xor
andb
adc
fstpt
les
jo
mov
fdivrp
jne
loop
icebp
lcall
cltd
movsb
into
xor
loopne
xchg
testb
fcomi
inc
ja
cmc
jl
pop
pop
hlt
mov
mov
sub
push
dec
sub
insl
shll
xor
stos
pusha
xlat
sub
cmp
jo
xlat
cli
cmp
subl
dec
xchg
xor
movsb
sarl
inc
jo
or
les
jle
insl
fdivs
movsl
nop
sti
and
dec
jecxz
aaa
xor
sahf
clc
sbb
mov
out
jae
pop
inc
pop
rol
stc
push
mov
pop
ds
jle
fisttpl
or
stos
jp
aam
inc
imul
gs
fs
xchg
or
imul
into
jg
aas
sbb
popa
mov
mov
pusha
fldl
cmp
fcmovnb
and
fstpl
mov
in
je
loopne
add
in
cmpsl
loop
pop
aam
jmp
sti
pop
jg
mov
mov
inc
pop
add
repz
adcb
push
xchg
xor
dec
push
jge
ljmp
fadd
lock
jae
mov
fs
loopne
stos
lret
sbb
add
es
mov
fs
out
cmp
jmp
jl
rcl
js
cwtl
add
adc
jo
xor
arpl
lret
leave
repz
loopne
aaa
add
std
rcrl
imul
jne
je
cltd
loop
ljmp
mov
adc
cltd
mov
out
fnsave
pcmpgtd
sbb
fmuls
stos
jnp
sti
aas
sub
fiaddl
dec
in
cmp
inc
and
mov
adc
mov
jecxz
andl
or
stos
std
fisttpll
movsl
jle
or
jne
sarl
cld
pop
add
jno
cltd
mov
jne
movsl
jbe
sbb
mov
stos
and
js
cli
add
imul
adc
push
or
sub
mov
add
sbb
test
cltd
enter
enter
ffree
mov
mov
add
cltd
imul
or
ss
sub
inc
and
inc
push
andl
sarb
shl
in
lds
movsl
lret
shrl
in
sub
in
bound
cli
ret
push
lcall
mov
out
jno
inc
mov
je
and
inc
aas
ja
pop
push
icebp
or
dec
sbb
sbb
mov
loop
pusha
das
pop
fldenvs
imul
ljmp
cltd
mov
mov
inc
dec
pop
cmpsb
sub
cmp
sub
das
ret
sbb
push
pop
int
cmp
cmp
dec
loop
mov
lahf
stc
int
mov
pusha
adc
jl
addr16
sti
pop
test
sbb
cmp
repnz
sub
insb
push
mov
aaa
sbb
inc
dec
push
pop
jmp
cwtl
xchg
addb
adc
in
and
mov
std
push
fcmovne
repz
add
sahf
sarb
out
adc
gs
int3
inc
iret
pop
sub
fsin
imul
jmp
dec
mov
push
movsl
test
or
inc
and
sbb
adc
push
ja
lahf
leave
xchg
mov
and
and
test
inc
in
loope
mov
sti
out
es
push
rcl
add
hlt
fs
mov
pusha
dec
pop
scas
mov
or
out
popf
jge
js
and
lret
mulb
sbbl
adc
push
clc
pop
ret
and
es
jge
popa
lret
cmpb
xor
or
xchg
sbb
inc
movsl
inc
mov
daa
push
mov
jmp
ret
mov
shll
sub
push
cli
cmp
jo
daa
cmp
xchg
cmp
loope
mov
mov
push
inc
fldcw
mov
in
and
mov
sub
iret
cli
dec
aad
sub
shrl
data16
dec
xor
mov
xchg
pop
ficoml
clc
xor
ljmp
xchg
cs
movsl
insb
dec
psadbw
cwtl
add
sbb
and
or
repz
xchg
aaa
adc
nop
jp
cltd
ss
xor
mov
data16
inc
dec
dec
or
adc
push
daa
cld
inc
push
adc
call
loopne
xchg
pop
sbb
aam
sub
js
fcoms
and
xchg
inc
inc
cmp
fdiv
xor
xor
cmp
mov
cmp
dec
jp
repz
cld
hlt
mov
add
loop
rcrl
pop
movsl
mov
mov
das
pop
fcomps
mov
sbb
push
and
int
lahf
inc
fbld
push
sbb
sbb
ss
lret
addl
fstp
setno
in
jo
push
addr16
sbb
mov
lea
push
leave
and
sti
shl
insl
xor
scas
aaa
pop
lret
mov
subb
cld
adc
imul
push
popa
daa
inc
mov
and
push
push
mov
xchg
movsl
jp
xchg
and
pop
bound
mov
cwtl
repz
std
insl
lds
inc
imul
mov
in
dec
mov
dec
jp
xchg
dec
pop
cwtl
sub
mov
inc
ja
stos
in
mov
aaa
mov
icebp
sbb
aam
sbb
and
add
test
ljmp
out
lret
mov
sbb
ja
push
xchg
mov
xchg
push
mov
pusha
dec
imul
sbb
sbb
sub
xchg
lods
cmpsl
cltd
push
sbb
fsubrl
cmpsb
ret
fidivl
insb
push
jo
jbe
jb
fldl
jb
int3
out
jecxz
mov
faddp
sub
sub
sahf
jge
mov
repz
mov
jae
xlat
int
and
cli
cmpl
jp
dec
xchg
insl
leave
ds
adc
jnp
popf
fists
push
je
mov
mov
cmp
adc
cmpsb
and
imulb
jmp
popa
fwait
inc
imul
stc
mov
bound
imul
sub
loope
pop
out
adc
adc
cmp
lock
and
idivl
imul
mov
sbbl
jae
mov
dec
mov
pop
add
nop
and
cmc
pop
movsb
mov
mov
in
xchg
inc
xchg
out
sbb
pop
adc
and
push
call
gs
sub
out
mov
arpl
mov
pop
or
pusha
js
inc
lods
or
mov
sub
repz
add
addr16
sub
movsl
pop
scas
dec
incb
dec
hlt
lods
out
pop
jp
int
into
test
push
aaa
mov
cmp
or
outsb
cmp
dec
add
mov
cmp
imul
pop
stos
loop
mov
ficoms
add
cmp
dec
idivb
jnp
mov
inc
and
out
test
cmp
fucomip
sub
jno
cmp
in
pop
shll
leave
loopne
xor
push
add
push
mov
loope
fs
sub
cmp
pop
sarl
fstps
pop
cmp
xchg
cmp
sbb
pop
lods
mov
imul
sbb
js
jns
mov
mov
arpl
jecxz
loope
outsl
adc
push
ror
mov
xchg
sti
sub
cltd
ja
stos
mov
jp
sbb
xchg
cmpsl
aaa
loope
mov
pop
mov
adc
out
dec
mov
cmp
in
in
orl
mov
jns
repz
sub
popf
xchg
push
mov
rcrl
test
cmpsb
mov
pop
sub
add
add
xor
jo
sbb
in
and
ja
mov
jmp
dec
iret
test
xor
leave
fwait
pop
push
out
mov
neg
daa
outsb
sbb
xchg
push
lcall
cmp
or
movsl
pop
loop
fstpl
ja
dec
or
out
rorb
push
xchg
dec
lahf
push
adc
stos
fidivrs
add
xlat
jle
sti
sahf
dec
mov
mov
adc
add
jmp
clc
mov
int3
lahf
adcl
imul
sahf
ja
adc
pop
mov
adc
and
addr16
cmp
out
lahf
stc
icebp
out
inc
jp
xchg
fidivl
dec
cvtpi2ps
sub
mov
pop
lods
in
int
js
cmpsl
jae
inc
mov
aas
lods
cs
adc
movsb
bound
ficomps
add
sub
push
dec
push
test
aam
iret
xor
mov
or
call
mov
ror
hlt
jle
push
pop
and
add
lods
cmp
jg
jns
out
lahf
jns
push
fstpl
or
xchg
or
xchg
test
jns
xor
out
xor
nop
pop
sub
push
or
repnz
push
cwtl
add
xor
xchg
cmp
add
pop
bound
leave
jle
das
dec
ljmp
and
addl
pop
jb
fisubs
jmp
ret
and
push
rorl
call
cmp
ss
in
push
cltd
in
pop
into
shlb
pop
pushf
dec
pop
out
loop
push
repnz
lods
cmp
jl
lea
xlat
daa
mov
jp
push
mov
nop
mov
leave
mov
push
imul
or
add
xchg
ss
add
enter
into
fbstp
loop
push
inc
fildl
mov
fistl
xchg
je
mov
jne
push
adc
in
lahf
xor
leave
mov
xchg
dec
imul
lods
in
xchg
inc
dec
inc
cmp
cmc
xor
sbb
orb
fcmovb
jnp
addr16
xor
andb
cmpsb
mov
pop
shr
pushf
ljmp
shr
inc
push
xchg
int3
pop
jns
inc
in
lea
sbb
in
add
repnz
jnp
dec
loopne
pushf
lcall
add
jbe
add
mov
jl
jae
mov
and
dec
jge
cmp
cmpsl
or
pop
mov
ret
daa
dec
push
das
dec
push
int3
mov
pop
das
or
and
jl
or
push
push
jle
xchg
sub
push
js
call
cmp
cmp
lcall
out
jle
mov
jecxz
jnp
dec
cmp
or
sahf
test
cmp
add
fwait
int
es
cmp
aam
pshufw
outsb
adcl
pop
pushf
mov
inc
mov
push
and
sahf
xchg
xlat
push
rcll
test
adc
pop
lret
pop
movsb
popf
add
cmpb
cmp
hlt
lods
dec
jne
pop
out
push
into
sti
or
sbb
inc
mov
xchg
repz
gs
push
lret
into
sbb
stos
mov
rcrl
mov
mov
dec
test
sub
and
dec
loope
or
cmp
push
repnz
mov
cmp
test
out
mov
xor
push
sub
leave
dec
out
mov
repnz
rcll
into
movsb
push
pop
fisttps
jl
dec
rorl
or
jp
rcrl
jg
add
cli
push
ljmp
inc
push
or
jg
rcr
loop
adc
orl
dec
fsubp
push
daa
adc
popaw
dec
or
cmc
dec
xor
out
loope
xor
fwait
movsb
sub
sub
sbb
adc
add
mov
out
jecxz,pt
mov
pop
dec
push
sarb
cmp
mov
and
sbb
cmp
inc
adc
mov
inc
or
jns
in
cli
push
scas
xor
sar
pop
push
dec
push
scas
xchg
push
loop
xchg
jp
popa
call
addb
cwtl
xor
mov
pop
test
out
inc
mov
mov
push
cmp
mov
pop
sti
cli
stc
js
fbld
aad
push
idiv
shlb
mov
xchg
insl
inc
outsl
fnstcw
add
mov
lret
aam
outsl
cmp
push
xchg
adc
fbstp
sub
cli
xor
jmp
cwtl
add
pop
mov
bound
ja
icebp
and
es
popa
add
pop
test
sbb
mov
fidivrl
or
xor
push
adc
add
fistpll
jecxz
and
push
mov
lahf
sub
mov
xchg
fadd
sbb
das
pop
imul
ret
mov
cwtl
mov
jns
fcoml
inc
sti
pushl
push
pop
insb
cmp
inc
or
scas
push
arpl
inc
shrb
hlt
mov
sbb
jbe
xchg
shlb
cld
mov
lahf
jnp
cli
sbb
pop
or
loop
push
pop
or
ret
xchg
cltd
call
aas
dec
sti
ljmp
xor
out
in
inc
cmp
rorb
lds
sbb
loope
push
cs
inc
mov
sbb
pop
sub
fwait
cmc
out
push
std
in
shrb
enter
jo
add
pop
lret
push
add
dec
mov
mov
cwtl
mov
cld
adc
test
sub
stos
pop
in
repz
lahf
sub
and
xor
imul
test
repz
pop
mov
cmpsl
push
pushf
shl
enter
cmp
cmp
mov
jl
shrl
movsb
push
imul
dec
out
lds
dec
xchg
pusha
out
scas
add
es
mov
repnz
dec
daa
cmpl
fdivl
mov
popa
inc
pop
xor
pop
xlat
pop
int
bound
jo
cli
pop
jae
ss
or
push
cwtl
jnp
inc
movsl
sahf
rolb
arpl
cmpsb
fcmovb
call
pop
insb
adc
cltd
test
out
sub
add
je
adc
push
sar
ret
iret
movsb
sbb
mov
push
inc
and
xchg
test
pop
dec
mov
cmc
cmp
pop
jno
popf
jo
pop
loop
sbb
hlt
cltd
sahf
mov
dec
fidivs
sub
cltd
ret
pop
shll
adc
dec
mov
add
inc
sbb
xchg
inc
sbb
mov
stos
stos
cmp
adc
mov
ret
gs
pop
dec
mov
loopne
jo
fadds
push
jo
cwtl
es
fisttpll
movsb
lods
lret
cli
cmp
jnp
in
or
inc
int
addr16
inc
adc
or
and
movsl
or
xchg
mov
aaa
inc
stos
addr16
push
ret
inc
movsl
int3
pop
addr16
andl
in
push
or
mov
xchg
and
mov
mov
shrl
cmp
xor
inc
inc
bound
dec
outsb
and
dec
jae
xchg
movsl
jae
xchg
clc
xchg
aaa
out
mov
pop
push
nop
cltd
std
mov
fiaddl
paddsw
sub
stos
or
mov
pop
hlt
stos
sbb
xor
les
xchg
lcall
data16
shr
into
rol
cmc
call
es
rcrb
or
push
push
sbb
int
fdivrs
clc
out
in
fcmovnu
mov
or
cwtl
cs
mov
cmp
jns
fistpll
pop
mov
pop
in
movsb
test
jnp
or
sbb
adc
sbbb
or
mov
and
popf
insb
and
push
loop
int
xchg
xorb
xor
pop
mov
jb
imul
mov
arpl
cmpb
stc
push
fcmovnb
jge
fstpl
push
cmp
fistpll
xor
sbb
decl
andb
popf
push
mov
mov
pushf
xchg
test
jmp
cwtl
jns
or
loopne
nop
fbld
pushf
outsb
clc
repnz
sub
and
mov
sti
xchg
icebp
push
lahf
cwtl
rcrb
mov
lcall
in
jl
gs
in
mov
sub
stc
xchg
test
and
sarl
inc
jg
test
inc
xor
arpl
or
addb
mov
xorb
sbb
lcall
ljmp
jg
fistl
xor
jno
jp
pop
xor
push
cs
scas
sub
mov
lods
xor
rclb
xchg
cmp
or
mov
jge
movsb
pop
mov
ljmp
dec
int
sbb
jle
pushf
dec
pop
sbbl
push
ds
dec
mov
jge
xor
inc
cmpsb
shrl
cmpsl
inc
mov
pusha
aaa
aad
aad
jne
aas
push
pop
xor
dec
shlb
fwait
cltd
lock
nop
mov
sub
adc
je
mov
sbb
inc
sbb
inc
fidivrs
jae
jnp
repz
pop
push
or
or
sub
rorb
ret
and
call
bound
jbe
pushf
jecxz
gs
cmc
mov
jno
insb
sub
data16
inc
fistpll
lret
orl
icebp
sbb
je
pop
es
out
cmp
mov
push
xchg
rcl
daa
fld
sbb
sahf
inc
adc
nop
sub
lret
sar
inc
cs
fisttps
mov
jp
push
or
movsb
jecxz
or
pop
iret
xor
mov
je
lret
mov
lret
aaa
sbb
mov
and
mov
cmc
push
shll
ds
pop
stos
jmp
mov
push
and
cmp
xchg
mov
mov
pop
sbb
cmp
fldl
cmpb
pop
push
je
repz
dec
and
arpl
in
xchg
mov
pop
test
shll
in
in
cmpsb
push
sbb
test
out
pmulhw
mov
or
out
jnp
xchg
and
xchg
insb
mov
nop
sub
mov
leave
cmpsl
push
shlb
xor
fdivrl
icebp
stos
xor
imul
jle
jae
xchg
arpl
fistps
jl
das
cmp
mov
pop
xchg
daa
jecxz
jmp
jo
enter
pop
idivl
jae
insl
push
add
jbe
lcall
test
das
xor
pop
bound
mov
cmpsl
adc
cmp
mov
imul
pop
or
jns
imulb
rol
rcrl
fs
pop
pop
mov
xchg
lock
shrl
or
out
test
imul
repnz
fwait
mov
jmp
or
pop
lcall
lret
movsl
ds
insb
fsts
pop
int
data16
add
test
jmp
pushf
xchg
inc
push
xchg
imul
cmp
out
scas
pop
push
xchg
imul
or
nop
push
insl
pop
ficompl
loopne
mov
fxch
mov
cmp
call
lret
add
inc
fisttps
lea
push
das
xchg
jb
adcl
repnz
push
lea
jle
loopne
xor
inc
loop
gs
lods
iret
dec
fcmovnb
mov
sti
daa
lea
movsl
mov
push
bound
inc
sbb
ret
repz
stc
jb
adc
testb
sub
inc
into
into
and
loop
sub
sarl
lcall
jno
loop
xor
jge
mov
jae
mov
rolb
dec
sbb
push
mov
xor
pop
popf
mov
push
and
sti
js
mov
clc
adc
stos
jnp
jle
xor
sub
sti
dec
push
dec
sbb
cli
or
xor
leave
xchg
icebp
negb
or
popf
xchg
lret
sbb
inc
jg
add
sbb
dec
mov
imul
jle
add
inc
cwtl
xchg
add
xchg
mov
negl
push
jge
out
sbb
sbb
xchg
mov
sub
cmp
jle
mov
sub
test
adc
cmp
xor
stc
fldt
ficompl
xchg
inc
xor
mov
call
ljmp
xlat
sbb
push
insl
sbb
jle
mov
cwtl
add
and
roll
cmp
mov
adc
lds
das
enter
jl
mov
in
call
dec
push
hlt
mov
add
and
jne
mov
ja
jg
mov
daa
test
cmp
loop
or
mov
addb
xor
lea
das
mov
lods
and
shrl
in
or
mov
rorl
sahf
imul
adc
jl
and
scas
dec
in
fadds
pop
add
jp
enter
adc
sti
push
xchg
cmpsl
add
push
dec
lods
hlt
ss
dec
shll
lds
cmp
or
push
pop
xchg
inc
jnp
lock
das
add
xchg
rcrb
cld
fidivl
loopne
push
gs
and
adc
test
xchg
mov
notb
cmpsb
test
add
pushf
adc
stc
rcr
jnp
or
mov
inc
mov
clc
jne
lea
leave
rcl
inc
add
in
cmp
cs
bound
inc
inc
mov
cmp
mov
stos
test
inc
lcall
mov
or
pop
xchg
scas
js
sub
and
xchg
nop
jbe
adc
xchg
pop
inc
iret
jecxz
dec
mov
jns
dec
loope
stos
pop
icebp
mov
into
adc
ja
jp
jmp
or
shl
pop
nop
cmc
fmul
sub
mov
sbb
das
adc
mov
xchg
clc
popf
mov
out
push
pop
stos
fdivrl
xchg
enter
cwtl
into
mov
xlat
xchg
cmp
lods
jmp
sub
nop
outsl
aad
mov
xchg
or
addl
xor
push
es
xchg
je
fnstenv
mov
setle
inc
jae
mov
shrb
repnz
xchg
inc
movsb
lret
sbb
clc
shll
mov
ret
rorb
stos
jge
rol
and
into
jno
jnp
aam
lret
pusha
mov
and
ficoms
push
or
fists
xchg
inc
pop
mov
out
inc
jge
dec
mov
xor
fs
pushf
jne
cld
idivl
test
mov
pop
mov
xor
mov
cmp
sub
push
push
pop
pop
cld
add
sbb
mov
add
out
in
dec
stos
mov
aam
xchg
mov
in
cmp
out
cmp
les
push
es
hlt
out
cmp
sub
sahf
leave
jns
and
mov
mov
inc
mov
mov
in
push
incl
mov
and
adc
xor
shl
and
xchg
aam
ljmp
xchg
inc
hlt
push
call
mov
insb
add
inc
in
icebp
nop
test
mov
je
movsb
mov
scas
aaa
fildl
adc
xlat
mov
sbb
ret
sub
add
fdiv
cmp
jns
sbb
mov
sub
mov
xlat
cli
movb
loope
xor
jae
shlb
test
pop
imull
mov
jo
fstpl
cmp
xor
cmp
and
pusha
push
std
sub
outsl
lcall
popa
shl
mov
insb
test
lret
jp
sar
repnz
sbb
or
push
out
xchg
cwtl
lods
out
arpl
or
js
jae
cmpb
fs
sub
sarb
sar
jmp
hlt
test
pop
addl
inc
gs
das
pushf
dec
and
mov
lret
xlat
pop
ret
jo
jns
xchg
cmp
sahf
jo
jnp
loopne
add
out
push
push
cmpsb
jnp
mov
repz
mov
shrb
sbb
in
xor
mov
icebp
jle
loopne
test
push
or
jmp
subb
sahf
test
lret
hlt
sub
jb
sbb
cmp
add
popf
movsl
fidivrl
pop
jns
mov
clc
xchg
pushf
imul
inc
aam
xor
stc
push
mov
cmc
lods
sbb
cs
enter
rcrb
jecxz
lods
adc
loop
movl
adc
pop
jo
cmpsl
or
mov
mov
fisubrl
icebp
cmp
jno
in
out
push
outsb
fcoml
push
sub
int
pusha
sbb
out
fwait
mov
lcall
ret
jnp
cwtl
xchg
inc
shlb
and
pop
ds
fnstenv
popf
icebp
sbbl
inc
jnp
jno
inc
push
int
lret
and
mov
push
shlb
or
cld
mov
out
test
mov
and
setl
mov
cmp
mov
imul
cld
int
stos
add
addr16
aas
mov
mov
nop
daa
push
or
xchg
fnsave
dec
stos
xchg
jno
lahf
xor
lea
mov
xlat
cmpsb
pop
inc
add
mov
mov
lods
jbe
clc
inc
sbb
movsl
js
cmp
data16
sub
arpl
lea
aaa
cmpsl
pop
mov
jl
mov
pop
js
and
nop
push
pop
cmp
stos
and
loop
jbe
in
push
mov
and
loope
mov
ret
jo
and
cmp
adc
or
lods
test
mov
movsl
ljmp
in
je
xchg
sahf
outsl
inc
push
stc
xchg
xor
mov
and
jp
xchg
mov
fsubrl
les
dec
jmp
inc
mov
mov
iret
cmpsl
jno
cwtl
push
or
or
ss
mov
insb
or
mov
aas
in
pop
std
in
orl
popa
out
sbb
lahf
or
jl
stos
jg
fimull
shlb
es
movsb
dec
push
adc
cmpsl
fwait
sub
and
fisubl
adc
das
bound
and
cmp
pushf
addr16
pop
and
fcompl
ret
fldt
adc
insb
stc
ret
jecxz
rcrl
and
test
adc
jp
int
out
mov
or
inc
or
mov
inc
or
test
ljmp
lds
cli
sbb
das
dec
push
add
sub
cltd
dec
stos
lods
enter
ljmp
into
jge
gs
fdivs
cwtl
dec
sub
icebp
mov
pop
rcll
xchg
test
cmpsl
xor
cmp
leave
movsl
decl
push
push
mov
test
outsb
mov
loop
jmp
adc
addr16
roll
or
hlt
xor
insb
inc
out
iret
mov
andl
xchg
call
mov
push
int
test
and
or
push
bound
ljmp
iret
out
xor
sbb
mov
arpl
mov
mov
push
push
xchg
xor
mov
hlt
mov
mov
mov
mov
movsb
pop
loopne
dec
gs
pop
loope
aaa
pop
add
rcll
ret
repz
inc
or
ja
or
fstl
jb
sbb
cmp
add
mov
adc
and
fstpl
lahf
xor
inc
out
call
insb
cmpsb
inc
test
push
pop
leave
lcall
in
pop
loop
rolb
push
inc
imul
inc
jmp
jno
or
sbb
cmpl
lcall
fs
daa
into
cmp
xor
pop
dec
movsl
jnp
ret
call
daa
cs
xor
cld
adc
fmull
adc
sahf
pop
add
std
mov
daa
xor
xchg
xchg
push
and
sub
std
sbb
xchg
mov
notb
scas
cld
cs
aaa
mov
cli
fs
mov
lock
std
out
loop
mov
and
lret
jmp
sub
hlt
out
enter
testb
mov
sarb
add
jno
xchg
jge
xchg
add
popl
mov
adc
xchg
cmp
je
popa
ja
dec
mov
add
sbb
aaa
cwtl
out
jmp
ljmp
repnz
mov
imul
in
lea
aas
add
in
xchg
add
or
lcall
push
inc
add
aad
test
into
ret
push
sub
xorb
loopne
cmc
adc
adc
cmp
in
lds
sbb
mov
shlb
test
lds
or
adc
xor
loop
loope
jle
push
and
mov
popa
and
dec
add
sub
jbe
pushf
aas
add
std
aas
clc
hlt
pop
cmp
loope
lods
fisubs
pop
cmp
push
loope
sub
xlat
insb
dec
ja
dec
fstpl
adc
xor
je
dec
rcrb
jb
pop
inc
in
or
test
pop
js
xor
enter
adc
test
pop
and
orb
or
ja
outsl
inc
xchg
or
and
jbe
popf
movsl
dec
inc
mov
and
ss
cmp
in
pop
mov
lea
xor
xor
mov
iret
jle
add
scas
jp
stc
add
insl
sbbb
sbb
in
cmpsb
jle
cs
dec
mov
mov
pop
mov
or
mov
jbe
and
lahf
ljmp
ljmp
pop
or
jnp
fwait
push
out
add
adc
rclb
jbe
or
insb
mov
scas
xor
add
aam
ret
adc
sbb
dec
call
ds
jmp
cmp
ds
mov
and
aam
icebp
push
and
dec
mov
sahf
xor
and
push
bound
jo
or
jb
inc
mov
push
mov
lahf
nop
adc
mov
fildll
dec
sub
std
jb
xlat
ss
std
ds
repz
sti
adc
lret
or
dec
ficoms
xchg
aaa
pop
orl
fs
pop
xor
dec
fucomp
push
out
pop
clc
es
cmpsb
mov
jbe
lcall
cmp
call
pushf
into
movsl
jecxz
sbb
jle
mov
jp
insb
stos
pop
xlat
dec
jno
jne
sbb
cmp
call
mov
mov
das
aad
roll
mov
dec
mov
xor
call
out
fcomps
xor
je
inc
mov
cli
inc
pop
push
imul
aad
out
xor
sahf
jmp
outsl
call
dec
dec
dec
pop
data16
std
adc
loop
pop
mov
mov
xor
fs
inc
fidivrl
rorl
lods
cmpsl
loopne
jp
inc
enter
lret
pop
push
fld
cmp
pop
sub
jle
mov
dec
pushf
inc
inc
loop
xlat
dec
cmp
cmp
xor
pushf
repz
inc
mov
std
psrad
adc
mov
jle
fisttpll
pushf
lcall
xchg
into
push
aad
test
in
mov
stos
inc
or
xchg
mov
jns
jecxz
push
shlb
adc
sbb
imul
push
out
sub
xchg
test
mov
cld
jne
push
sbb
sbb
les
pop
call
mov
adc
pushf
push
icebp
dec
dec
out
cli
pop
int3
xchg
xchg
lock
cmp
push
mov
loop
xor
mov
pop
mov
xlat
les
sub
sub
lods
jge
add
iret
mov
scas
jno
pop
mov
pushf
mov
test
mov
hlt
push
or
fisttps
outsl
mov
jl
arpl
ss
aad
mov
adc
das
in
jmp
lods
movsb
jae
push
rclb
ds
pusha
in
adc
sbb
inc
mov
or
cmp
xor
loope
mov
xor
cmpsl
mov
push
sarb
mov
mov
or
notb
push
xor
test
cmp
ss
mov
xlat
sub
jbe
fs
jmp
cmp
mov
enter
stos
mov
inc
mov
cltd
es
or
icebp
or
mov
xorb
sbb
cmp
js
cmp
sbb
jg
lods
mov
pop
cmp
call
les
cmp
orb
outsb
stos
cs
aam
xlat
sub
cmp
inc
leave
sbb
or
fisubl
push
ret
sub
mov
js
outsl
add
xchg
adc
test
pop
push
shrl
and
pop
test
fsts
pop
aas
cmpsb
lds
push
out
xor
mov
jb
jbe
mov
lds
add
cmp
mov
ret
jne
xlat
xor
add
cmp
mov
dec
sbb
hlt
pop
jp
fs
mov
xor
pop
jge
push
mov
stos
lret
daa
dec
mov
orl
subb
cmpsl
scas
popl
dec
sub
push
addl
sbbb
add
add
aas
add
les
insl
sub
mov
jb
sbb
push
aam
imul
lcall
lea
xchg
cmp
idivl
jmp
testl
subb
pop
insl
cmpb
xor
dec
inc
test
jne
cltd
lret
mov
int
lcall
test
aaa
xchg
sti
sbb
mov
icebp
mov
mov
xor
lea
sbb
adc
es
ljmp
mov
pushf
stos
nop
adc
xchg
bound
fcmovne
dec
adc
mov
jne
jg
sub
std
fs
pushl
mov
or
and
lods
cwtd
in
clc
int
shl
sub
es
filds
stos
jecxz
xor
adc
sbb
loopne
or
xchg
mov
repz
xchg
mov
movsl
icebp
mov
bound
mov
dec
cltd
sub
pop
aam
test
addr16
repnz
push
shlb
xlat
cmp
mov
call
pop
xor
pop
xchg
inc
into
lahf
adc
xchg
mov
pop
xor
movsl
int
addr16
repnz
popa
pusha
inc
and
mov
and
outsl
push
aas
xlat
les
inc
adc
inc
dec
pop
inc
cmp
test
adc
mov
shrb
cmpsb
inc
fstpl
fwait
insb
jge
ja
push
data16
pop
adc
mov
mov
popf
and
out
xor
mov
mov
orl
mov
jne
adc
mov
lock
mov
movsb
jb
sbb
lcall
clc
outsb
cmpsb
jl
test
rol
ficoms
adcb
xor
push
lahf
pop
sti
xor
dec
ret
inc
xchg
and
push
fadd
push
or
lret
dec
pop
arpl
movswl
push
dec
iret
iret
xchg
hlt
inc
pop
mov
jg
mov
add
push
dec
dec
les
xor
data16
lret
jmp
scas
arpl
movsl
pushf
mov
push
jae
sarb
xchg
jne
pop
xor
and
js
sbb
fbld
sahf
mov
push
jmp
int3
adc
fildl
lds
insb
sarb
inc
dec
adc
jns
in
mov
push
and
jp
mov
mov
bound
ret
dec
adc
lds
fwait
in
das
mov
adc
mov
sub
lret
mov
jmp
enter
mov
add
loope
xchg
in
loop
jbe
scas
xchg
cmp
das
cmpsb
iret
mov
jnp
add
repnz
or
aaa
cmpsb
loop
pop
sahf
out
mov
cmpsb
mov
bound
inc
push
sub
pop
je
dec
sub
cmp
into
lock
pop
mov
lods
push
les
test
dec
ljmp
outsb
loopne
inc
mov
fwait
repz
cmp
and
and
jmp
rolb
cmp
push
pop
and
mov
or
jg
and
mov
add
xchg
scas
xchg
lcall
pop
fwait
shll
movsb
push
cmpsb
xor
bound
xchg
dec
out
dec
and
into
out
filds
mov
push
icebp
mov
int
jp
pop
mov
mov
sar
inc
in
fdivr
sub
dec
cld
pop
cmp
andb
push
mov
jae
int3
mov
and
scas
push
test
jnp
and
stos
imul
mov
das
sbb
sub
cli
sbb
insl
pusha
fsubl
push
mov
mov
jno
or
mov
mov
and
pusha
sub
ret
add
mov
das
orb
les
cli
test
aad
jge
mov
cwtl
and
test
repnz
popa
aaa
mov
fcomps
sbb
mov
mov
pop
mov
push
jo
cmpsl
jne
sub
mov
xor
inc
fndisi(8087
or
jns
sarb
dec
pushf
lods
fs
add
loopne
xor
test
adc
in
jle
jmp
aad
sbb
subl
dec
ret
shrl
std
aam
sub
dec
lret
xor
mov
in
mov
jmp
push
or
fcomps
mull
mov
int3
jbe
push
pop
pop
add
lds
lods
mov
mov
xchg
add
scas
leave
rclb
sub
pop
jp
xor
sub
testb
pop
scas
xchg
sbb
fdivp
arpl
cs
out
dec
and
mov
enter
in
xchg
push
mov
sub
xor
in
scas
repnz
pop
xchg
cld
icebp
inc
sti
je
cmpsl
into
gs
cmc
sti
stc
cmpsb
out
cmpsl
sbb
iret
jns
pop
and
pop
flds
popa
cli
out
dec
popa
loop
je
call
fs
dec
leave
in
xor
cmp
xchg
xchg
pop
out
jb
push
shll
push
mov
push
ret
mov
and
cmpl
lods
fidivl
adc
dec
xchg
push
dec
test
mov
cmp
cmp
jb
popf
rcrl
mov
xor
loopne
out
mov
insb
les
add
cwtl
in
sbb
mov
pusha
push
addr16
test
jmp
push
pusha
pop
scas
sbbb
repz
dec
cmp
inc
jno
mov
push
push
nop
lcall
adc
xor
or
mov
dec
and
popa
xor
push
imul
dec
jmp
mov
or
mov
mov
test
clc
and
int
aaa
or
and
sub
rclb
mov
adc
je
mov
bound
mov
xchg
inc
hlt
mov
lods
dec
adcb
jecxz
lcall
xchg
sahf
and
sub
mov
adc
lahf
xchg
pop
popf
add
push
cs
femms
push
adc
sti
repz
mov
jge
xchg
cmp
std
xchg
push
stc
jne
lahf
push
lods
cmp
jne
inc
addl
xor
outsl
or
pop
outsl
lcall
mov
pop
inc
call
lret
roll
xchg
imul
push
and
fnsave
xchg
xor
cmp
mov
xchg
fucomi
jae
lret
push
cltd
xchg
mov
sub
sub
hlt
leave
dec
stc
mov
inc
sub
push
lds
xchg
pushf
repz
cmp
add
cs
aam
sub
cmpsb
sub
mov
and
pop
sbbl
inc
xchg
pop
inc
int
xor
nop
pop
push
mov
sub
and
mov
mov
inc
test
aaa
adc
xor
stos
xchg
cwtl
icebp
arpl
js
inc
add
lods
push
jecxz
mov
push
mov
adc
rolb
pop
mov
pop
adc
popa
daa
cltd
orl
aas
je
jae
shll
dec
and
mov
pop
iret
pop
jmp
xor
jge
fnstsw
add
lea
mov
add
fisubrl
xchg
push
and
fbld
fldt
adc
aam
add
inc
adc
jmp
sti
aaa
mov
out
inc
and
push
push
cld
adc
lcall
out
sub
pop
popa
jp
mov
in
aad
mov
mov
push
sbb
loop
mov
scas
xor
mov
in
cs
into
outsl
loope,pn
adc
stos
nop
cmp
jg
lea
xor
fs
lea
js
jo
or
sub
out
and
cs
daa
stos
outsl
pop
cld
sbb
in
lock
out
sbbl
mov
mov
push
sbb
xor
jae
cmp
xor
out
inc
inc
xchg
push
icebp
and
repz
lock
inc
pop
or
jp
gs
mov
cmp
adc
mov
pop
out
cmp
cmp
js
cmc
fsubrs
lret
xor
mov
dec
jmp
repnz
lock
xchg
lea
das
stc
shlb
push
negb
stos
roll
pop
or
pop
shl
mov
sbb
leave
cltd
jne
les
pop
mov
mov
cmp
adc
mov
mov
fwait
or
or
lret
rorb
push
sub
sub
fnstsw
mov
or
sub
into
cmp
adc
jmp
stc
or
rorb
xor
sbb
cld
sub
gs
add
push
movsb
cmp
dec
dec
cmpl
sbb
lret
sbb
mov
adc
xchg
adc
pop
or
sbb
adc
dec
pop
or
push
out
push
adc
incb
pop
adcl
inc
pop
into
push
cmp
pop
and
pop
and
adc
cltd
bound
dec
push
mov
scas
fmull
dec
out
pop
loopne
cltd
gs
adc
lcall
ljmp
lods
je
inc
cs
and
add
mov
and
iret
cmp
movsb
repz
lahf
loop
and
enter
mov
push
xchg
loope
icebp
lret
jle
bound
pop
out
iret
add
mov
cmc
pusha
mov
out
std
sub
addr16
hlt
ds
test
in
mov
imul
mov
roll
add
loope
push
popa
push
pop
mov
sbb
or
lahf
push
mov
movsl
aam
bswap
rcr
and
imul
push
inc
xor
sbb
sub
fdivl
push
int3
ret
mov
mov
cmpsb
jb
xchg
push
aad
pop
fstpl
adc
add
sbb
xchg
xor
cmpsb
push
adc
js
movsl
pop
xlat
sarb
push
sti
nop
lgs
lods
dec
cmpsb
inc
mov
xchg
pop
cmp
sahf
mov
sbbb
enter
pop
in
xchg
imul
jecxz
xor
add
aad
mov
fldenv
clc
repnz
mov
inc
pop
cwtl
lea
mov
xor
arpl
push
xchg
dec
xchg
pushf
mov
aaa
addb
mov
pop
mov
pop
mov
jl
sti
faddl
scas
sarl
cltd
mov
js
xor
or
loop
add
mov
add
cltd
inc
sub
dec
mov
int
jg
jecxz
jnp
stos
dec
dec
inc
mov
leave
cmp
scas
jns
jp
push
cwtl
sub
cmp
mov
test
packssdw
inc
push
jg
sub
push
int3
adc
push
cs
in
lret
imul
push
rorl
popf
push
push
jp
fwait
push
add
mov
cmc
ljmp
or
ja
iret
or
movsl
out
mov
dec
rorl
or
add
loopne
nop
mov
xor
inc
sysret
jmp
jmp
add
xchg
jo
and
jbe
mov
jne
mov
imul
hlt
push
mov
push
fmuls
adcl
push
pop
mov
repnz
daa
xorb
sbb
push
insl
cmc
arpl
inc
fcmovne
cmp
xchg
iret
outsb
xchg
mov
leave
outsb
pop
inc
add
mov
or
das
sbb
test
jge
popa
stos
pop
je
xchg
sub
jg
xor
test
int3
out
dec
adc
pop
mov
insb
mov
push
jp
push
mov
add
inc
mov
das
sub
rcrb
xor
movsl
xchg
or
or
aas
cld
dec
repz
jge
mov
int3
inc
pop
jge
xor
mov
jne
add
push
inc
pusha
dec
enter
popf
bswap
lea
jmp
test
rcll
fwait
xor
dec
push
pushl
lea
dec
mov
pop
and
cmp
jge
cmpsl
push
imul
mov
adc
test
and
cmp
mov
xchg
cmp
add
mov
or
dec
sub
aas
pop
push
push
lock
jle
xor
fcomps
xor
xlat
ret
cwtl
jbe
jmp
adc
mov
mov
iret
lcallw
and
xor
or
shrb
cltd
dec
jp
gs
dec
push
movsl
pop
scas
outsl
ss
sbb
dec
cmpsb
stc
push
ficoml
or
xor
aas
sti
lods
movsb
pop
repnz
jb
ret
cltd
testb
in
sub
mov
mov
adc
push
jno
aam
dec
mov
outsl
movsb
jno
arpl
flds
adc
add
lea
in
jle
mov
sub
sub
jmp
out
xchg
add
jle
imull
test
nop
mov
sbb
ret
adc
or
aam
cmpsb
cmpb
stos
int
dec
sbb
or
push
cmp
pop
xor
in
adc
out
mov
xor
jns
js
pop
call
ret
xor
je
adc
mov
mov
pop
stos
xor
aad
sbb
xchg
clc
into
mov
pop
jbe
cmpsb
or
enter
cli
in
test
icebp
lahf
push
jb
dec
fwait
mov
or
push
and
xor
xchg
xor
in
and
push
pop
js
cld
pop
cmp
adc
mov
and
clc
fiaddl
jecxz
lods
js
int3
mov
pop
out
adc
fwait
ret
mov
in
loop
je
in
jae
pop
push
adc
shlb
inc
sbb
cmp
jb
jmp
add
orb
adc
ret
adc
insl
shrb
inc
enter
ss
inc
jb
popa
punpcklwd
inc
imul
ficoms
sarb
push
jns
sbb
inc
bound
sbb
xchg
push
mov
push
or
push
push
pusha
adc
dec
pop
ja
fwait
imul
mov
push
add
push
xchg
dec
or
mov
adc
int
or
jnp
inc
outsb
sub
add
mov
cmp
push
mov
repz
sbb
inc
fdivs
int3
pop
mov
out
mov
ss
xor
pop
fnstcw
xor
dec
mov
addr16
pcmpgtd
test
jecxz
jnp
popa
sbb
int3
insb
std
shl
sbb
ficomps
xchg
dec
ret
pcmpgtd
pusha
pop
xchg
jo
lret
adc
in
jmp
sub
push
and
mov
jp
add
std
push
ljmp
inc
mov
outsl
add
dec
pop
add
iret
pop
sub
add
shl
mov
xchg
push
pusha
cmc
push
lret
popa
sti
xchg
cltd
aas
push
xchg
mov
or
adc
shl
fisubs
cmp
pushf
cmp
aas
fimull
add
cmp
sbb
std
aad
loop
ljmp
cmpb
mov
call
sub
in
popa
stc
ljmp
jl
push
jmp
loop
insl
popf
cmp
inc
jg
mov
mov
cmovo
or
repz
in
repnz
aaa
xchg
sub
xor
or
cwtl
push
aas
jae
orb
pushf
pushf
test
xlat
jbe
cmp
cmp
mov
mov
jb
leave
enter
outsl
jl
test
jecxz
ja
insl
and
sahf
fcmove
jmp
mov
aas
jl
insl
clc
xchg
mov
jg
stos
test
lock
sbb
xchg
or
test
or
imul
push
into
mov
aaa
les
stos
repz
xchg
pushf
jg
sub
sub
out
jg
add
shll
add
sub
sbb
shrl
addr16
fsts
iret
sub
cwtl
out
arpl
std
decb
xor
and
mov
jl
pop
or
xor
cmp
aam
or
dec
adc
aas
and
sub
inc
push
sub
lahf
lea
in
lret
movsb
mov
jmp
dec
je,pn
mov
sub
adc
sbb
sbbb
mov
stc
add
aas
shlb
xor
xor
repnz
and
call
sbb
xlat
les
inc
test
gs
cltd
mov
cs
andl
or
pop
je
in
xchg
jne
xor
into
pop
or
popa
push
out
dec
pop
sbbb
adc
xchg
out
jns
stc
add
sbb
pop
jnp
dec
in
mov
mov
das
push
stos
nop
cmpl
push
adc
sbb
enter
bound
dec
int3
mov
push
repnz
lds
jmp
jmp
jne
fnsave
test
inc
push
loope
pop
fnsave
jp
adc
pop
jnp
jne
ljmp
add
aas
out
testl
rolb
add
push
dec
jno
cwtl
mov
fdiv
pop
outsb
dec
sub
movsl
outsl
sbb
test
sbb
repz
int3
mov
push
notb
cltd
add
mov
xor
jg
mov
jecxz
mov
add
inc
pop
fstpl
clc
pop
stos
inc
pop
ffreep
jo
jge
rcr
ja
sub
lock
das
outsl
das
popf
mov
iret
fcmovb
call
push
rolb
nop
adc
scas
cs
daa
ds
cs
sub
jns
jo
sbb
popf
aas
jl
xchg
or
in
push
cld
ds
es
movsl
xor
dec
inc
stos
pop
cmp
pop
mov
jmp
dec
fs
adc
cmp
pop
xchg
andb
push
jge
negb
or
lods
xchg
jge
adc
inc
mov
dec
xchg
sti
lahf
jge
les
or
mov
pop
adc
jg
arpl
lret
mov
fadds
div
inc
sbb
jl
and
jne
addl
insl
push
push
or
pushf
jmp
cmpb
out
and
and
fs
in
bound
je
jl
inc
sbb
jge,pt
loopne
imul
mov
cmp
mov
es
jnp
adc
pusha
inc
inc
aad
je
xchg
fwait
push
arpl
fdivr
sbb
push
ret
insl
push
xchg
sbb
add
sub
gs
jns
sbb
aas
mov
insl
scas
xor
imul
mov
std
xlat
jp
cmc
lods
loop
mov
sbb
std
lahf
mov
inc
fdivl
mov
ds
mov
push
jmp
jecxz
sub
cwtl
rolb
jo
or
push
test
test
ljmp
sub
mov
mov
mov
scas
dec
hlt
hlt
shlb
mov
push
out
daa
daa
inc
mov
mov
in
xchg
int
mov
adc
and
jns
popa
and
dec
ss
xor
inc
je
sub
into
decl
dec
fs
shlb
push
addl
add
inc
or
jecxz
fdivrl
aad
mov
inc
into
jg
imul
call
cmp
cmpsl
aam
out
call
int3
xchg
xchg
fwait
sbb
add
insl
fidivrs
scas
sbb
pop
sub
push
xchg
int3
mov
mov
gs
xor
inc
xor
cmpsb
cmpsl
lods
ja
lret
pop
xchg
fistps
mov
movsl
jmp
fstl
jge
stos
insb
rcll
call
call
and
mov
repnz
add
push
sbb
fsubs
jne
mov
jne
aaa
sbb
push
xor
test
insl
push
into
or
je
cmpsl
pop
jge
jmp
jae
pop
xchg
aam
xor
xchg
hlt
pop
je
sub
mov
or
rcl
add
pop
das
roll
xchg
mov
rol
repnz
jo
push
and
push
icebp
aas
sub
xor
mov
subl
lds
imul
cmp
adc
pop
lret
push
cltd
pop
pop
imul
popa
add
lea
dec
xchg
inc
int
out
sub
test
xlat
in
pusha
roll
repz
out
add
mov
push
nop
mov
ss
jae
cmpsb
add
cwtl
sti
push
jb
enter
fdivs
and
mov
notb
daa
mov
stos
adc
inc
cmpsb
stc
mov
xorb
adc
or
into
rep
jno
dec
xchg
in
jge
pop
xchg
mov
clc
push
pop
sbb
and
sub
outsb
cltd
loop
push
ss
nop
mov
jp
das
push
push
jmp
sbb
mov
cltd
pop
or
mov
fbld
jge
mov
cld
ret
in
add
je
sahf
in
push
mov
add
scas
pop
push
andb
adc
rorl
mov
popf
mov
lods
inc
xor
clc
ss
jne
roll
push
mov
jno
mov
mov
lock
sub
nop
lods
les
cmp
sub
add
fisubrs
aam
jle
mov
movsb
dec
xchg
and
cmp
fs
out
daa
xchg
call
mov
fstp
push
pushf
pop
xor
jp
inc
jo
cs
push
mov
pop
mov
add
jbe
sbb
mov
in
inc
sbbb
stos
repz
in
mov
jp
aaa
leave
dec
inc
int3
inc
jl
out
add
add
jmp
pop
cmp
or
es
jne
rorl
sub
fwait
add
in
gs
popa
in
cmp
loope
iret
fcomp
push
mov
fistpll
ja
addr16
test
lds
popf
mov
push
cs
lahf
ljmp
jbe
xchg
insb
jg
stc
outsl
stos
fwait
jns
outsl
lods
cltd
cmp
sbb
out
lea
mov
lea
xchg
sub
sub
cmp
push
cli
lods
inc
movb
not
hlt
aam
cmc
push
mov
mov
sbb
stos
lods
xchg
and
mov
rcrl
fs
mov
arpl
mov
insb
out
pushf
inc
std
fstl
cmp
sub
enter
aaa
insb
dec
nop
movsl
cmp
mov
jne
int3
jae
push
mov
sub
cli
inc
in
mov
jno
testl
das
xchg
push
and
lds
fsubs
nop
jae
xchg
aam
imul
xchg
mov
and
pop
jmp
jae
sahf
cmpsb
pop
enter
pop
mov
shrb
test
push
xchg
adc
jnp
push
push
daa
inc
push
pop
repz
add
xchg
sbb
shlb
push
sbb
pop
push
shrl
fisubrs
das
les
mov
jge
movl
inc
cmpsb
adc
push
dec
ret
aaa
lock
lea
es
sub
nop
filds
sar
popa
aad
jne
or
in
pushf
pop
mov
and
mov
pop
dec
sub
jle
inc
mov
jg
push
adc
mov
xor
lret
orb
mov
insb
lods
idivb
mov
dec
mov
fnstcw
mov
in
and
mov
jno
jg
fwait
push
out
add
pushf
lahf
leave
in
cmpsb
imul
push
adc
dec
add
pusha
mov
add
jns
and
jb
lea
test
fstl
insb
in
jnp
sbb
inc
push
into
leave
mov
out
out
aam
icebp
pusha
loop,pn
arpl
fadd
enter
mov
or
lock
repz
scas
sub
jecxz
mov
inc
jo
mov
aad
ret
push
mov
dec
test
mov
and
aam
push
mov
sub
daa
xchg
ja
mov
inc
xor
rolb
push
push
in
dec
sub
dec
and
sbb
xchg
add
mov
loope
or
xor
and
cmpsb
inc
adc
inc
in
rdpmc
imul
jge
dec
adc
aas
jmp
push
sahf
xchg
ljmp
pop
jl
mov
icebp
es
cmp
daa
or
shl
xor
mov
icebp
movsl
mov
sarb
jl
scas
jb
daa
inc
icebp
adc
incl
xor
lods
push
adc
xor
stos
push
dec
sbb
add
xor
jg
mov
push
sbb
mul
mov
loope
ret
mov
or
mov
jg
jl
ret
sar
and
ljmp
cmp
xchg
xchg
imul
add
test
fld
enter
adc
adc
bound
adc
inc
xchg
loop
mov
stos
call
pop
xchg
inc
in
push
cmp
jbe
push
aaa
daa
in
punpckhwd
adc
fstpl
push
cmp
arpl
loop
faddl
mov
push
xchg
mov
push
pop
lods
in
ret
mov
popf
sub
popf
mov
test
sub
fs
jno
xchg
mov
and
iret
mov
xlat
js
and
sbbb
sarl
cltd
push
push
clc
inc
push
inc
movsl
stos
hlt
push
sbb
inc
out
xchg
popa
push
mov
dec
add
adc
and
pop
mov
xor
jl
add
outsb
loope
mov
mov
aaa
fmul
jno
out
hlt
fs
xor
cmpsl
insb
mov
ret
adc
shl
xchg
adc
nop
test
icebp
dec
jnp
rorb
lea
pusha
shrb
inc
jno
movsl
pop
arpl
test
aam
jmp
scas
pop
rorl
adc
in
pushf
xor
cmpsb
push
adc
das
push
and
xlat
inc
jns
std
inc
xchg
mov
push
popa
lea
jp
jge
jp
cmp
je
jne
sbb
pushf
xchg
xchg
jnp
sbb
mov
add
dec
xchg
sbb
fistpll
lahf
push
sahf
gs
movsl
nop
push
push
lret
sub
dec
in
inc
jno
int3
sbb
nop
sub
or
mov
push
push
xchg
xor
cmp
incl
or
push
and
inc
jg
rolb
orb
insb
inc
mov
push
mov
xor
ret
push
out
pop
jae
pop
enter
aam
test
sti
das
mov
sarb
iret
add
add
xor
call
in
dec
push
jl
fcoml
and
cmp
ljmp
aad
and
fldl
loopne
test
ja
push
cmpsl
stos
movsl
push
push
xchg
adc
movsl
mov
xorl
cmp
stos
xchg
sub
call
lea
xchg
dec
sbb
popa
dec
in
addl
ficomps
or
js
addr16
push
or
push
sub
mov
mov
pop
jp
mov
imull
bound
xchg
and
es
jbe
sub
or
inc
iret
shl
fidivrl
stos
and
sbb
jns
js
xor
push
pop
movsl
jp
lock
pop
sbb
sub
test
dec
fists
fbld
mov
dec
mov
aaa
aam
repnz
add
cmpsb
fildll
jo
xchg
fstpl
outsl
insb
push
ja
fcomip
sub
cmc
dec
leave
repz
mulb
jae
xor
mov
push
add
push
dec
in
rcrb
insl
int3
das
addb
or
pop
lods
adc
mov
sti
inc
jno
fildl
in
pusha
loope
push
test
mov
sahf
pop
ja
jno
stos
adc
outsb
orl
fdiv
jne
xor
in
repnz
cs
dec
cltd
ljmp
out
inc
adc
and
and
ja
sbb
push
popf
fnstcw
push
mov
sub
clc
ficoml
push
jae
addr16
jge
pushf
dec
pop
pop
jecxz
and
or
and
dec
mov
mov
cmp
mov
mov
xchg
in
fimull
push
inc
cmp
sub
pop
rcrb
xchg
cmp
xchg
or
jnp
xchg
hlt
pop
repnz
rorb
fwait
and
fdivs
xor
mov
pop
jno
outsb
lcall
mull
fwait
ss
mov
inc
or
scas
push
add
mov
and
inc
inc
pop
adc
inc
sbb
xor
mov
adc
mov
cmp
push
adc
ja
out
movsl
es
jle
test
sbb
das
dec
mov
dec
in
mov
lods
xchg
push
ficompl
mov
push
das
bound
ja
orb
push
in
out
cld
and
fnsave
mov
xchg
mov
xchg
outsl
rclb
sub
rcl
movsb
fisubrs
test
lcall
cmp
push
addr16
dec
dec
push
and
adc
in
es
aad
cmp
mov
or
pop
add
mov
dec
cld
aad
pop
outsl
jle
mov
pop
add
cli
ds
jl
stos
push
scas
cwtl
std
dec
add
enter
stos
dec
insb
in
cmp
sbb
xchg
mov
pop
out
add
cltd
lds
jbe
aad
sub
insb
insl
repz
sbbl
in
jp
pop
loope
lret
sbb
fwait
or
pusha
mov
and
adc
aad
push
pop
lret
stos
loop
pop
add
cmp
sub
mov
cmpsl
mov
jmp
fldt
pop
cld
jle
push
imul
aam
clc
pop
sub
inc
in
outsb
insl
push
das
lahf
loop
stos
testl
cmpsl
cs
cmc
xchg
adc
dec
out
push
roll
data16
push
imul
pop
fisubrl
bound
out
shrl
pop
sub
loope
test
pop
pop
idiv
loop
xor
push
cmpsb
xor
xor
cmpsl
xchg
push
das
and
nop
dec
scas
popf
daa
pusha
stc
iret
xchg
inc
aaa
mov
mov
xor
rorl
mov
push
or
in
inc
push
fmull
jg
test
sub
xchg
stos
push
cmp
sbb
addb
stos
xor
movsb
xchg
cmp
inc
and
leave
fistpl
hlt
daa
jecxz
sti
lcall
fwait
data16
push
jne
aaa
stc
sbb
xchg
pop
jl
adc
push
out
aad
mov
mov
xlat
mov
cmp
adc
insl
add
shrl
fists
sub
inc
dec
cmp
push
xor
addr16
popa
push
mov
shl
add
mov
push
xchg
mov
gs
mov
sbb
bnd
and
and
movsl
imul
das
jnp
fwait
and
pop
rolb
sbb
ja
xor
imul
leave
lock
mov
rcrl
lds
cltd
fmul
icebp
outsb
call
ja
cmp
cmp
xchg
mov
cmp
cmp
std
push
fidivs
push
divb
in
lods
inc
je
repz
lds
fadds
pop
adc
lret
cmp
jl
cmp
aad
sbb
enter
mov
bound
pop
adc
jge
and
inc
mov
mov
cmp
idivl
lock
test
lcall
jecxz
add
mov
clc
jno
add
fcoms
push
sub
ret
add
or
sbb
ja
es
testb
dec
cmp
insb
mov
mov
nop
xor
push
or
mov
and
jne
pop
mov
xor
adc
sub
pop
movb
jnp
mov
jne
push
mov
leave
jecxz
es
repz
push
jle
and
outsl
inc
pop
sub
imul
aam
out
xchg
mov
mov
xor
jmp
notb
fwait
push
loop
in
adc
sbb
ficompl
fildl
imul
pushf
fbstp
movsb
dec
mov
and
sub
fs
and
std
addr16
push
xor
incl
mov
int
ljmp
xchg
xchg
xchg
sbb
push
or
aaa
out
sub
push
pushf
out
xor
jbe
xor
inc
cmp
pop
arpl
in
dec
aam
sub
enter
cwtl
imul
cmp
and
stos
dec
pop
mov
sti
sbb
leave
aad
push
or
sahf
lret
jp
call
adc
pop
xchg
xor
inc
mov
inc
dec
adc
cmp
ja
pop
int3
jno
scas
popa
jns
stos
loopne
mov
jne
push
xchg
cmp
aaa
dec
icebp
mov
movsl
out
and
mov
sub
aad
enter
flds
loop
jae
lret
and
lods
xor
fcompl
pop
push
insb
pop
jmp
jg
sbb
adc
movsl
adc
or
sbbb
fwait
adc
pop
or
push
or
pop
imul
cmp
fcomi
pushf
ret
imul
movsl
add
xlat
test
jge
dec
aad
imul
sbb
icebp
negb
out
outsl
push
push
mov
xchg
sbb
bound
lahf
lea
cmp
fwait
adc
sbb
xchg
out
sbb
add
pop
or
sti
loop
lcall
adc
and
out
ror
aad
mov
ret
mov
mov
sbb
xchg
sbb
mov
xchg
das
or
mov
or
lock
adc
jmp
sub
cli
into
insb
testl
pminub
or
xchg
iret
push
push
ret
dec
out
xor
add
push
push
insl
paddsw
dec
xchg
jmp
repz
fisttpll
int
inc
test
push
push
test
clc
stc
stc
jne
sub
ljmp
inc
push
int
inc
pop
push
inc
xor
cs
xchg
adc
jne
movsb
clc
and
push
aaa
xlat
push
add
test
movl
cld
nop
lret
jp
addl
mov
or
jmp
jmp
test
mov
rcll
xchg
fnstenv
ljmp
adc
jne
lods
shll
loop
push
scas
inc
xor
mov
pop
push
stos
addb
sub
mov
jae
jb
mov
sub
mov
mov
dec
mov
pusha
dec
jge
ret
roll
inc
and
insl
cmpb
adc
jmp
mov
xchg
jge
out
jle
mov
sub
jle
adc
into
sub
sbb
fstpt
add
pop
fcoml
test
xor
jo
cmp
shll
mov
pop
lods
xchg
pop
pop
xor
push
inc
std
mov
xor
addr16
aaa
psubsw
fs
pop
add
jle
inc
mov
sahf
sub
lods
out
insl
mov
inc
icebp
jne
inc
mov
jns
scas
out
add
andb
cmpsb
fstpt
jl
mov
je
iret
mov
adcb
sbb
jg
pop
pop
sbb
dec
inc
mov
or
imul
stos
cwtl
xchg
jns
cmp
dec
movsb
sub
push
push
jl
movq
fs
and
ret
iret
push
cmp
outsb
out
sahf
push
inc
jns
fsubl
gs
out
rclb
mov
stc
addr16
jne
ficoms
jns
inc
das
ja
sahf
cli
scas
fmul
inc
add
and
add
leave
dec
lock
pop
pop
je
negb
push
or
aad
scas
and
fstpt
sbb
clc
ficoms
jge
jae
and
or
adc
ds
adc
out
repnz
aas
stc
mov
pushf
dec
data16
popa
inc
in
mov
push
test
sti
ljmp
cmp
xor
insl
loope
push
rcrb
pop
xchg
insb
add
dec
mov
popf
push
add
fadds
mov
gs
jns
out
mov
std
mov
cmp
data16
js
dec
neg
into
lods
jns
mov
gs
push
inc
stc
in
dec
jne
lcall
lahf
ret
sbb
ret
fmull
or
jge
sub
mov
cmpsl
inc
adc
in
sub
mov
sbb
mov
xchg
adc
jge
jecxz
shll
in
hlt
adc
fstpt
sub
rcll
ljmp
into
dec
ret
cmpsb
adc
push
mov
jo
inc
inc
xchg
stos
insb
sub
push
cmc
dec
je
sahf
outsb
or
mov
lahf
gs
xor
push
and
lret
sub
inc
xchg
xchg
xor
or
push
push
cmp
or
aaa
iret
int3
mov
or
jb
mov
mov
or
movsb
test
cmp
insl
xchg
test
cmp
lds
sbb
das
mov
lcall
aaa
ja
jno
js
js
and
push
mov
adc
mov
xchg
xor
xchg
sbbl
mov
inc
dec
sarb
icebp
add
cmp
add
adc
jge
mov
adc
popa
fcom
mov
aam
and
push
fisttpll
popa
loopne
mov
cmp
in
xor
shll
fdivrs
rcrl
inc
mov
jge
stos
mov
pop
push
xchg
aad
repnz
and
mov
xchg
lods
xchg
insl
ja
stos
inc
ret
test
xchg
jp
mov
loopne
mov
ja
xchg
sub
sarl
jnp
or
out
xchg
lahf
lea
dec
add
mov
jge
jmp
jle
mov
pop
xlat
mov
add
scas
shlb
daa
mov
aas
mov
rorl
pop
mov
push
fcmovnu
jb
sub
out
fdivrl
lods
push
mov
sub
mov
or
mov
dec
jle
dec
sub
push
fidivrs
cltd
stos
into
mov
or
pop
lcall
and
out
pop
sahf
icebp
outsl
pop
add
mov
enter
xor
hlt
sub
stc
pop
sbb
sub
test
jns
or
dec
mov
out
stos
popf
push
xor
loope
loope
pop
pop
jle
ret
sbbl
les
test
mov
pop
outsb
mov
cmp
and
shll
mov
or
xor
mov
jnp
push
stos
or
enter
cmpsl
stos
pop
mov
inc
xchg
inc
xchg
sub
cld
repnz
adc
mov
inc
je
jae
aam
fwait
cmp
stos
xchg
rclb
jmp
inc
dec
fdiv
add
sbb
cs
clc
jno
jb
mov
sbb
sub
sub
cmpsb
test
or
mov
gs
mov
std
ret
xor
push
ljmp
repnz
cmp
out
sbb
dec
adc
xchg
idivl
adc
shrl
ja
loopne
mov
push
iret
arpl
mov
push
test
lods
adc
dec
dec
sub
inc
mov
in
std
gs
mov
stos
adc
iret
mov
jecxz
insb
cltd
add
sub
fnstenv
xchg
and
stos
jmp
repz
out
dec
sbb
popf
sbb
mov
fwait
jmp
pop
or
rcrb
arpl
cmp
add
in
outsl
push
rcll
jp
xor
insl
cmpb
cmp
mov
hlt
cmc
dec
mov
jns
push
xchg
dec
aaa
jmp
jns
lock
leave
xor
lock
add
bnd
or
cli
jo
test
push
lahf
idiv
sbb
mov
cmp
jl
mov
mov
mov
pop
inc
push
xor
inc
fildl
lds
nop
dec
push
adc
cmp
inc
loop,pt
push
dec
ja
push
jp
fildll
sti
pop
pop
das
in
xor
stos
add
dec
scas
dec
push
jl
jmp
outsl
mov
in
jp
pop
push
mov
xchg
es
fimull
sbb
mov
lea
dec
push
lcall
std
dec
repnz
data16
daa
xor
movsl
sarb
loope
out
psllq
mov
jecxz
xchg
add
arpl
call
jo
inc
fdivrs
xchg
scas
push
add
ret
call
rcr
es
jl
mov
jge
mov
pop
pop
adc
repnz
leave
add
out
cmp
ret
cmpsb
cmc
scas
jne
lea
out
mov
arpl
icebp
sub
roll
loopne
sub
jne
outsl
cmp
outsb
xor
in
adc
mov
mov
mov
jb
repz
mov
pop
hlt
push
or
insl
xor
jnp
scas
or
inc
adc
loopne
inc
out
nop
orl
orb
inc
xchg
mov
sub
sbb
push
or
or
sti
pop
push
add
pop
and
pop
lods
mov
adc
andb
in
int3
push
inc
xchg
rdmsr
mov
mov
inc
ret
fsubs
mov
icebp
fidivs
fiaddl
scas
test
cli
loope
in
fstpl
shrl
hlt
clc
lods
inc
mov
dec
pop
fmull
in
aam
test
pop
pop
mov
scas
repz
aas
sbb
push
or
sbbl
inc
ds
scas
lock
or
and
push
repnz
cmp
mov
cmp
fsub
andl
xor
jp
xchg
dec
xor
lods
in
ret
sbb
test
adc
les
jno
jge
xchg
jl
loope
jb
shr
inc
dec
imulb
inc
popf
pop
cmc
and
mov
mov
mov
loopne
cld
pop
and
adc
sub
jae
push
add
xchg
jo
arpl
jns
and
stc
jne
arpl
xchg
cmpsb
ljmp
rcr
fcompl
daa
pop
sti
inc
aam
push
jae
push
into
xor
movsb
push
push
xchg
add
add
mov
add
test
and
jo
and
loopne
stc
push
out
ja
push
xchg
mov
aad
dec
jecxz
aas
mov
jmp
test
mov
dec
cmc
adc
push
repz
out
andl
loopne
push
cmp
jo
popf
inc
jecxz
lret
pop
sbb
pop
cmp
lahf
mov
and
aad
in
jno
mov
pop
inc
pop
scas
cld
inc
adc
nop
adc
xchg
inc
mov
movsl
std
and
insb
pop
mov
aad
or
push
fcmovbe
sbb
fnsave
fwait
mov
fcoms
inc
fwait
jbe
test
and
sub
data16
int3
cmpsb
mov
fwait
jnp
and
xor
and
push
jmp
adc
sub
mov
lods
orb
imul
push
les
or
mov
rcr
sub
imul
lret
pop
and
jnp
xchg
pop
inc
loop
scas
insl
aas
movsl
mov
inc
inc
insb
movsl
imul
lret
cmp
imul
jge
lods
jp
rcrb
jnp
pop
mov
gs
loope
push
pushl
push
and
and
mov
and
sahf
out
xor
xchg
push
frstor
loopne
xorb
shrl
dec
test
sbb
jns
xchg
in
je
dec
or
pusha
rclb
cli
pop
push
sbb
pop
into
xor
sbbl
daa
sbb
movsb
or
pop
test
push
inc
test
gs
xor
cld
test
daa
hlt
pop
js
fwait
mov
test
jae
mov
out
out
andb
mov
cwtl
inc
addb
dec
pop
fcmovnbe
mov
xor
lret
cmpsb
push
sarl
es
inc
cmc
push
sub
sahf
and
xor
adc
outsb
mov
add
icebp
jne
mov
inc
mov
inc
mov
cs
decl
push
jb
movsl
popf
loope
jbe
xchg
push
pop
lcall
pop
or
adc
cmp
add
mov
sub
lods
jae
in
jae
imul
cmp
pop
sbb
sti
or
mov
fcoms
cmpsl
push
int
cmpsb
rorl
scas
xor
mov
data16
sahf
mov
loope
adc
lods
xor
xchg
stc
movsl
scas
pop
lea
fwait
push
sbb
nop
ja
or
js
xchg
cli
lods
xchg
loopne
sbb
bound
shrb
shr
jecxz
jnp
aas
icebp
xor
cmpsb
sti
call
das
jg
subb
subb
and
mov
lods
popf
in
insb
lds
push
push
xchg
outsl
xor
das
aad
and
mov
outsb
cmp
xchg
sahf
popa
ljmp
arpl
lahf
lds
stos
btc
jl
cmp
jnp
jg
inc
cmp
mov
xchg
pushf
nop
outsb
xor
inc
ja
pop
std
push
or
sbb
mov
ret
push
enter
sub
hlt
sub
sub
xchg
xchg
xchg
ret
pop
test
and
pop
mov
pop
inc
js
daa
cwtl
mov
dec
hlt
hlt
pop
inc
bound
pop
idiv
pop
sbb
adc
std
ljmp
gs
popa
sub
out
xchg
or
push
and
ja
xchg
aad
add
add
mov
std
xor
loope
cmpl
jns
mov
pop
add
sub
outsl
rcll
push
xchg
aaa
cmp
pop
push
out
das
call
jns
xchg
inc
pushf
aam
sub
sbb
std
sub
jno
aad
mov
stc
xor
mov
fsubp
add
pop
gs
and
mov
dec
fmulp
daa
std
cmpsl
mov
push
les
ret
and
loop
add
pusha
ret
dec
fldt
and
sbb
cmpsl
xchg
shl
push
fidivl
jl
js
ds
sbb
and
ret
pop
ds
lods
push
movsl
orb
cmc
lret
pushf
jl
cmp
scas
fidivrl
xor
adc
mov
test
movsb
bound
nop
sub
add
enter
out
mov
jg
push
mov
add
or
mov
push
cmp
jl
ljmp
in
ljmp
cli
nop
and
enter
mov
gs
mov
test
sti
dec
jns
cmpsb
in
fmull
std
dec
in
jmp
shll
add
add
mov
andl
shrl
pop
data16
mov
inc
imul
and
rclb
and
xor
ret
xor
or
inc
dec
fs
mov
inc
lds
mov
mov
xchg
in
mov
mov
outsl
test
ja
pop
dec
cmpb
pop
out
inc
xor
pop
push
jle
cwtl
stos
xor
data16
and
cmc
adc
cmp
arpl
dec
xchg
pop
adc
jp
pause
pusha
jmp
std
popl
fwait
popa
adc
jo
scas
sbb
call
sbb
add
mov
ss
lea
sbb
ljmp
xchg
das
adc
cwtl
enter
add
iret
pop
jno
jno
addr16
lcall
sti
mov
call
sti
cltd
shll
push
pop
mov
pop
cli
jecxz
rcr
lret
out
adc
mov
add
mulb
jmp
iret
lods
bound
adc
dec
rcrb
pop
mov
shrl
js
dec
ret
pushf
jge
xchg
cld
push
sbb
fdivl
push
insl
mov
mov
pop
loope
and
mov
xlat
sarl
cltd
and
out
mov
test
mov
and
lock
mov
fwait
and
xor
jecxz
ret
push
mov
jmp
bound
inc
divl
jnp
pop
mov
cmp
sarb
push
mov
leave
sbb
ljmp
jle
test
sub
or
mov
xchg
lret
jno
test
ja
inc
mov
push
mov
jge
inc
subl
loopne
fisttps
nop
pop
movsl
push
ret
leave
test
out
jle
add
xchg
sub
sbb
andb
lds
push
dec
or
cmpsl
ljmp
sbb
push
inc
and
int
sub
cmp
cmovl
mov
clc
negl
cltd
add
cmp
cmp
icebp
scas
jecxz
nop
aad
into
sub
movsb
jo
push
hlt
shrb
sub
js
pop
or
mov
dec
cmpsl
inc
iret
loope
or
or
dec
inc
popa
pop
mov
loope
push
icebp
cmpsl
mov
xor
adc
fisubl
cwtl
push
lock
jae
cmc
rorl
pop
jg
mov
sbb
push
adc
sar
int
mov
outsl
sub
xchg
inc
and
or
or
fidivrs
inc
push
mov
and
aad
push
out
test
aad
fidivs
sbb
push
sbb
mov
scas
data16
filds
sub
imul
sbb
xchg
mov
call
std
out
jge
out
in
movsb
sbb
cmp
dec
mov
test
fstl
pushf
sub
mov
sub
adc
scas
push
cmpsl
inc
rolb
fwait
push
aaa
call
sub
stos
addr16
aad
ret
ret
aad
sbb
shl
adc
push
fs
lods
lock
pop
mov
popf
add
scas
mov
push
mov
mov
movsl
cmpsb
push
mov
ficomps
imul
lcall
into
idivb
mov
jae
pop
push
fistl
push
mov
loope
ds
jnp
or
mov
or
lods
add
xor
mov
adc
or
test
adc
rolb
push
or
mov
sub
popa
mov
inc
fistpll
xor
dec
mov
inc
mov
jmp
mov
aad
arpl
xor
rol
mov
mov
jae
push
cld
dec
lds
xor
mov
mov
mov
int
je
mov
lahf
mov
bndldx
rorb
xchg
xchg
fldenv
fidivl
movsb
sub
sub
mov
mov
enter
jne
mov
adc
mov
pop
add
in
cmp
int
jnp
es
pop
cmp
mov
insl
inc
mov
xchg
inc
cmp
or
mov
adc
pop
and
adc
out
inc
test
leave
add
inc
inc
fsubr
sbb
popf
push
xor
idiv
popf
jno
icebp
xchg
mov
add
inc
shrl
mov
inc
repz
dec
ficoms
pop
adc
and
das
inc
mov
mov
push
in
enter
or
out
scas
outsl
loope
xchg
lods
fbstp
je,pn
fimull
sbb
mov
jmp
lock
rcrl
mov
jno
movsb
push
mov
fcmovne
push
jge
inc
cld
xchg
lds
jo
jnp
pop
sahf
scas
xchg
push
adc
roll
push
popf
and
dec
fsubl
push
cld
xchg
cld
mov
mov
jl
ret
mov
leave
call
lret
inc
loope
pop
push
in
cwtl
xchg
popa
cmp
xchg
xor
add
dec
xor
gs
and
movl
lds
push
inc
les
std
test
scas
mov
mov
loop
scas
xchg
dec
scas
mov
adc
or
mov
mov
in
mov
loop
ds
movb
cs
out
hlt
or
adc
mov
hlt
mov
idivl
addl
adc
call
inc
aas
cwtl
jne
ficompl
ror
mov
lods
imul
mov
pop
mov
push
or
in
fldln2
xor
or
sub
mov
push
xchg
mov
out
and
mov
cmp
aaa
inc
pushf
insb
test
cmp
pop
sbb
dec
fucomip
cli
and
sbb
jmp
xchg
and
jb
inc
xor
xchg
roll
lret
push
out
out
out
add
add
pop
adc
mov
mov
filds
cmp
cmp
and
add
pop
inc
gs
inc
pop
jbe
pop
mov
out
sbb
pop
jg
sub
push
ljmp
clc
in
mov
mov
lret
addr16
mov
dec
fldcw
dec
orl
in
push
cmp
aam
mov
test
sub
lock
enter
adc
adc
popf
imul
lea
sbb
repnz
imul
mov
fisttpll
lods
sbb
les
in
xchg
xor
sahf
sbb
inc
xchg
pop
add
test
into
or
push
in
insb
or
cmpsb
add
push
call
ja
dec
xor
cwtl
pop
mov
sbb
les
inc
jne
pop
stos
or
std
cmp
dec
push
fwait
xchg
adc
mov
add
dec
push
dec
dec
test
push
in
pop
loopne
scas
mov
bound
pop
fistpll
and
dec
push
mov
scas
xlat
sbb
xor
cmp
sub
cmpsl
jo
ljmp
add
and
jle
stos
sbb
je
mov
mov
or
mov
or
popa
mov
aaa
mov
enter
push
and
xor
je
lret
xor
repnz
mov
aas
fdivs
cmp
cmp
or
pop
out
push
mov
jle
push
add
inc
sar
mov
xlat
and
imul
repnz
adc
test
push
or
sub
scas
loop
mov
cmp
and
pop
push
popa
sbb
mov
lea
popa
sbb
das
subl
sbb
js
jl
sti
mov
mov
lret
cld
mov
loop
cmpsb
flds
cmp
mov
negb
mov
ljmp
sti
mov
jle
xchg
cwtl
xlat
xor
and
notl
cmpb
xchg
jmp
call
xchg
lock
pop
aas
add
in
aad
and
mov
mov
pop
add
jmp
and
mov
mov
push
push
xor
les
and
xchg
aam
lods
sarb
pushf
xor
pushf
mov
jb
cs
sti
mov
jno
mov
cmp
adc
mov
cmp
push
cmp
mov
leave
aas
scas
add
outsb
outsb
pop
in
pop
loope
addb
xchg
xor
aad
push
adc
fwait
xor
push
bound
fiaddl
sub
mul
cwtl
pusha
and
cld
in
lods
movl
scas
mov
pop
ret
cld
inc
stc
pop
sub
movsl
ss
pop
jl,pn
jnp
stc
mov
xor
push
ret
xchg
out
es
data16
and
mov
adc
push
outsl
dec
push
pushf
lret
into
data16
shlb
mov
notb
adc
lret
jmp
jo
jne
cli
lret
adc
add
mov
cwtl
xchg
aad
pop
sarb
in
vmovaps
mov
imul
pushf
fwait
adc
cmp
pop
pop
dec
dec
mov
and
aam
add
adc
lea
subb
pop
sar
push
in
aaa
mov
sub
pop
daa
out
mov
in
adc
pop
mov
push
insb
pushl
and
mov
xchg
push
adc
in
cmp
mov
xchg
test
lret
test
dec
sbb
nop
cmp
aad
lahf
add
mov
ret
jmp
mov
adc
xor
lret
movsb
out
jo
dec
dec
fadds
mov
insb
enter
arpl
mov
pop
jmp
push
test
xchg
in
add
loop
xchg
pop
aad
dec
dec
mov
xchg
lds
cmp
xlat
push
push
fidivrl
aas
shll
cmpsl
jmp
push
sbb
decl
decl
cmp
into
mov
pop
jp
lods
sub
into
adc
pop
mov
mov
jmp
fimull
jo
push
aaa
cli
pop
xor
in
je
add
inc
mov
fsubl
pop
sub
jecxz
push
outsl
repnz
inc
nop
add
jecxz
lcall
shll
out
mov
gs
fisubrl
aas
sbb
int3
push
xor
or
testl
enter
pop
sbb
fimull
push
sbb
movl
xlat
mov
pop
mov
jbe
lea
cmp
stos
push
jp
add
fsubr
testb
xchg
scas
test
jle
add
daa
mov
das
test
mov
mov
xor
push
test
in
cmp
sti
dec
stos
mov
cmc
sti
and
clc
repnz
and
sub
dec
pushf
ret
movsl
scas
rep
test
movsb
int
inc
xlat
fs
inc
out
sbbb
fildl
pusha
imul
lods
mov
pop
xchg
fldenv
mov
lret
pop
add
out
jne
mov
push
sub
cmp
in
add
add
mov
icebp
sbb
push
repz
mov
sub
test
cltd
icebp
inc
inc
pop
cmp
es
mov
mov
dec
xchg
cmp
sbb
shrb
das
and
outsb
dec
mov
cltd
in
push
mov
sub
jo
pop
jns
sub
mov
sub
out
and
outsl
pushf
stc
outsb
cmp
loop
xchg
ds
xchg
jb
vphsubwd
lret
shlb
and
mov
out
inc
xchg
inc
jge
jo
adc
push
jne
es
pusha
mov
sub
lea
xchg
inc
pop
hlt
push
or
cltd
mov
outsb
roll
setge
daa
push
or
and
push
mov
mov
xor
sbb
add
jns
dec
ds
dec
adc
dec
insb
int3
lahf
and
out
imull
aam
arpl
and
jne
dec
mov
subl
jnp
pop
sub
mov
imul
and
int3
pop
adc
pop
es
pop
in
xchg
std
jo
aas
loop
or
push
mov
inc
jb
popa
fbld
cwtl
mov
add
adc
add
insb
cmpsb
mov
mov
shlb
cmp
adc
mov
mov
stos
jns
pop
jp
cltd
inc
jnp
sahf
mov
mov
rorl
sbb
out
mov
outsb
cmp
adc
adc
xchg
add
mov
xor
mov
mov
bound
int3
add
lcall
xchg
push
inc
aad
cld
fdivrl
dec
lock
stos
xchg
out
jae
in
jg
pushf
dec
adc
mov
incl
shl
push
dec
outsb
mov
mov
mov
add
add
mov
sub
push
xchg
cmpsb
add
cmp
jns
mov
pop
jnp
fmuls
sahf
xchg
in
dec
inc
adc
mov
cmpsb
pop
fstpl
sub
sub
test
dec
push
xor
jne
popf
cmpsl
sub
cs
pushf
mov
push
jns
int3
xor
pop
sti
xor
fists
loope
loope
leave
out
cmc
inc
sarl
mov
data16
jnp
pop
imul
mov
ret
into
lret
push
out
pop
stc
outsb
out
or
pop
push
push
pop
mov
scas
inc
jne
arpl
int
iret
jb
pop
iret
dec
mov
mov
outsl
stos
add
sub
pop
sbb
mov
neg
sbb
test
out
mov
mov
mov
mov
es
js
aad
in
lea
xchg
out
add
inc
push
mov
or
sarl
data16
pop
jno
fdivl
adc
es
xchg
xchg
mov
aaa
inc
or
rcr
xor
sub
dec
fstpl
pop
test
sbb
sbbl
rclb
jb
inc
lret
in
and
jge
pop
pop
icebp
icebp
das
and
je
roll
adc
pop
int3
mov
out
stos
daa
shrb
imul
lods
clc
ret
pop
push
or
rorl
add
stc
pop
incb
jmp
sbb
lcall
and
outsb
xor
pop
outsb
stos
fstpl
jle
rclb
jg
add
aas
test
fdiv
mov
jge
mov
jp
lods
cmp
mov
dec
cmpsl
es
ret
and
aad
jbe
aam
and
repz
jle
rorb
test
adc
jno
push
cmp
fsts
loop
cmpsl
pop
lret
xchg
add
incb
outsb
stos
pop
jnp
xor
cmp
xor
adc
call
dec
mov
cmpl
sbb
movsb
sarb
or
xchg
in
jle
jnp
sbb
or
nop
out
xchg
pop
adc
data16
gs
dec
and
cmp
lods
lea
cmp
in
cwtl
lret
cmpsl
lret
sbb
movsb
cmpsb
int
mov
shll
cmp
and
mov
lods
in
mov
aas
outsl
inc
jb
outsb
pop
jg
push
jb
push
xchg
adc
cmp
pop
bound
and
and
inc
mov
push
dec
call
jnp
cs
insl
sti
xchg
dec
add
insl
sbbl
aam
stc
dec
inc
jp
leave
testb
popa
push
lods
sbb
jecxz
std
imul
lret
test
popf
pop
pop
xchg
jno
sbb
add
clc
jge
lret
aad
test
sub
fwait
xor
inc
mulb
fwait
das
arpl
sbb
lods
enter
add
xchg
jno
push
xor
mov
aad
pop
int3
lock
pop
adc
jl
mov
and
test
add
call
int
and
adc
mov
js
sbb
lcall
add
add
or
arpl
push
cmpsb
gs
roll
adc
cs
and
mov
paddq
jmp
ja
repnz
mov
dec
dec
bound
inc
js
jne
or
fcompl
and
lret
mov
lcall
dec
cmpsl
add
inc
std
inc
test
inc
pushf
int
filds
inc
pop
push
sarb
pop
mov
mov
mov
xor
negb
inc
push
jg
jmp
or
add
jmp
jae
ljmp
sub
mov
sbb
pop
xchg
add
or
sahf
pop
xchg
cmpsb
push
pop
int3
push
sub
cs
daa
jo
cmp
in
scas
mov
inc
cmp
inc
inc
mov
xchg
lea
mov
call
mov
aam
test
std
xor
xchg
mov
in
jle
or
sub
scas
mov
dec
mov
gs
arpl
daa
push
test
jecxz
adc
dec
jno
sahf
lock
pushf
mov
xlat
push
mov
and
lock
lahf
sub
cmpsb
aas
in
mov
cmp
push
mov
test
aas
nop
or
pop
iret
mov
inc
jno
lcall
mov
jmp
xchg
push
dec
in
mov
adc
fxch
nop
lock
jge
stc
or
lret
imul
aas
ja
data16
mov
mov
lods
popa
sbb
lea
inc
sahf
mov
and
push
xchg
test
mov
cmpsb
scas
push
imul
sbbb
adc
fwait
jbe
ret
mov
enter
mov
inc
xor
and
inc
imul
and
pop
xor
arpl
adc
sbb
push
shl
jbe
inc
push
loop
icebp
adc
pop
pop
fs
sub
sub
pop
xlat
sub
stc
sub
cmp
or
sub
pop
adc
test
sub
sub
js
sarb
xlat
loop
mov
mov
pop
leave
sub
addr16
mov
popa
mov
rorb
call
xchg
sti
mov
aas
fistl
adc
or
iret
push
mov
jae
shl
jne
mov
std
fwait
daa
mov
push
sbb
lock
andb
xchg
rorb
mov
leave
pusha
pop
push
outsl
loopne
ja
imul
pop
add
and
mov
in
dec
dec
pop
in
mov
mov
outsb
roll
sub
std
push
and
sub
out
jl
cmp
xchg
jae
jle
cmp
enter
fs
imul
adc
rcr
dec
outsb
add
add
imul
adc
cltd
add
fildll
out
jnp
mov
cld
xchg
dec
into
cmp
mov
mov
cmp
cltd
clc
test
popf
mov
out
icebp
in
jns
cmp
outsb
mov
or
in
jmp
imul
inc
or
push
mov
add
push
xor
xchg
cmpsb
ret
mov
mov
ljmp
or
jnp
out
xchg
out
fwait
or
icebp
or
dec
jle
das
mov
lds
cmp
and
jmp
mov
out
mov
cld
add
jnp
jp
cli
push
push
loopne
leave
movsl
add
mov
out
addb
push
cmp
rcr
fdivrl
and
push
adc
cmp
dec
jmp
cwtl
xchg
cmp
mov
popa
dec
cwtl
jno
dec
xchg
into
jae
cmc
imul
mov
pushf
mov
in
ret
mov
gs
mov
stc
movsl
sarl
add
mov
inc
mov
dec
mov
jmp
cmp
clc
bound
xchg
adc
loopne
jns
test
pop
stc
jns
cli
mov
xor
cwtl
xlat
inc
pop
js
cmp
loopne
cmpl
add
jge
mov
fidivs
and
ret
pusha
xchg
sub
push
adcl
loopne
cltd
es
std
stos
mov
in
nop
adc
int
lds
mov
sbb
xchg
add
xchg
fstpl
das
repz
jne
adcb
cmp
pushf
add
lahf
imull
or
add
xor
loope,pt
cli
notb
es
loope
adc
cwtl
jge
popa
xor
xchg
mov
xor
sbb
jno
neg
inc
xchg
or
mov
or
pop
jne
ja
jb
push
cmp
cld
push
dec
adc
inc
aas
in
pushf
or
xchg
sbb
jae
ds
nopl
push
ret
imul
mov
in
ss
cld
lahf
outsl
push
fdivrl
adc
mov
xchg
cs
pushf
or
xor
jb
icebp
cmpsb
mov
cmp
cmp
dec
fildll
xor
lcall
pop
mov
dec
dec
xchg
sub
stos
mov
xchg
inc
mov
lea
bound
imul
clc
dec
xchg
shll
cmp
insb
mov
dec
push
ret
mov
mov
fsqrt
inc
insl
test
inc
dec
mov
jns
xor
testl
ja
aaa
stos
lahf
jns
sbb
jae
loop
mov
aaa
jo
mov
cmp
sbb
mov
in
cmp
popf
mov
cmp
fdivl
mov
and
adc
xchg
and
pop
lcall
adc
sub
sahf
mov
or
outsl
mov
mov
pop
in
dec
pop
ret
ss
lcall
out
cwtl
or
push
adc
xor
aaa
incb
mov
cmp
mov
lods
jle
das
divl
jp
fisubs
xlat
push
pop
mov
pop
xchg
sti
xchg
xchg
pop
js
ret
jmp
or
dec
mov
dec
repnz
in
imul
mov
mov
clc
fdivs
sbb
adc
fisubl
sub
stos
xor
cmp
ds
cli
insb
xchg
or
jp
lds
and
ret
outsb
stc
outsb
push
sbb
orl
aad
jge
pop
add
and
fucom
add
dec
xchg
push
sbb
leave
stc
mov
stc
out
mov
lret
dec
mov
lds
daa
pop
sbbb
aad
xchg
fstl
loop
mov
sub
add
insb
pop
mov
pop
sub
stos
cmp
bound
lea
in
cmpsl
bound
push
push
popf
movsb
jg
gs
pop
je
out
test
xor
aas
dec
fmul
add
cmp
sbb
add
test
rorb
and
cmp
mov
push
in
imulb
adcl
and
loopne
push
push
aad
subl
xchg
cmp
jb
mov
or
popa
lock
out
cli
pop
mov
mov
pop
fists
loope
shr
xorl
lods
or
push
mov
les
inc
lret
cmp
xchg
xor
fs
add
mov
cmc
dec
aam
and
pop
or
in
outsl
cli
out
mov
pop
and
fidivrs
or
and
sub
scas
loop
mov
sbb
movsl
inc
loopne
xchg
cwtl
fcomi
cld
mov
jle
popf
sbb
ret
mov
ss
lahf
pop
fs
data16
lea
xchg
and
dec
lahf
mov
fwait
es
dec
stos
fimull
push
push
inc
mul
mov
cmpsl
aas
dec
push
inc
mov
inc
ret
and
jne
adc
ds
add
stc
add
dec
stc
in
lahf
insb
cs
cwtl
lds
iret
lods
pop
fdivrs
or
test
jge
fcoms
mov
jl
pop
fwait
in
push
js
pop
ds
jo
mov
inc
out
scas
mov
lea
js
nop
cmp
mov
push
mov
movsl
lds
mov
cmp
movsb
inc
sti
lods
push
pop
pop
push
sbb
or
cmpsl
andb
mov
jmp
push
jns
stos
faddp
movsl
or
aas
jmp
popa
pop
xor
inc
sbb
sub
jne
mov
cmp
cli
mov
fisttpl
imul
xchg
mov
inc
jnp
sub
lock
ret
imul
sub
loope
sti
shlb
jae
xor
test
or
push
jnp
adc
xor
pusha
je
loopne
lahf
fdivrs
cs
popf
add
insl
inc
aaa
pushf
call
sub
cmp
or
movsb
das
aad
out
rcrb
jo
lds
xor
test
lock
pop
jo
outsl
movsl
jecxz
mov
das
pop
pop
sbb
cwtl
add
dec
icebp
jge
out
lock
inc
ljmp
imul
xchg
mov
fiadds
lods
or
mov
pusha
lret
dec
and
icebp
add
cmp
icebp
je
call
pop
push
mov
cmp
jecxz
mov
or
push
xchg
fdivr
dec
push
std
inc
pushf
mov
xchg
mov
cmp
sub
adc
adc
jmp
aam
xchg
xchg
sbb
out
out
dec
or
dec
shrb
ret
or
cmp
enter
xor
mov
pusha
out
popf
mov
add
imul
fisubs
fldenv
mov
pop
xor
stos
and
mov
ret
xorb
and
mov
xchg
or
jmp
or
es
leave
and
cltd
ret
mov
push
cld
and
shrl
pop
jecxz
jmp
repz
xchg
into
cmpsb
bound
rorb
in
or
mov
add
das
mov
dec
cmp
mov
outsl
jg
or
daa
ret
add
in
adc
inc
jle
inc
sub
sub
sub
int
push
ret
and
xlat
sbb
push
add
cmpsl
push
sub
enter
pop
scas
mov
scas
mov
iret
sub
fldt
orl
and
xor
cmp
enter
cmp
mov
movsl
sarb
cwtl
sub
test
mov
xchg
push
data16
and
les
mov
xchg
mov
push
out
cs
sbb
and
sub
and
push
pop
cmp
xchg
lcall
add
andl
out
aad
dec
mov
arpl
repz
ds
sahf
dec
popa
jb
add
scas
into
jp
mov
xor
lods
shr
jecxz
out
movsb
loopne
les
mov
sub
pusha
dec
hlt
pop
jecxz
mov
fcmovnu
cld
ljmp
cmp
lcall
jo
cwtl
mov
jl
pop
mov
out
xor
adc
dec
or
jns
inc
xchg
sub
cmp
pop
std
insl
dec
icebp
gs
scas
inc
xchg
hlt
mov
push
add
popa
inc
int3
rorl
sub
outsl
inc
hlt
cmpsb
dec
popf
cmp
jns
inc
ret
movsb
lcall
jnp
pop
stc
and
pop
push
xchg
in
add
lock
pop
out
dec
cld
les
cmp
pushf
dec
lret
lret
and
inc
dec
and
cltd
xor
mov
movsb
fldt
aaa
sbb
mov
iret
jg
mov
dec
sti
leave
xchg
push
dec
icebp
popa
test
fdivrs
pop
inc
imul
xor
sub
test
cmc
xchg
or
mov
mov
fwait
sbb
adc
cmp
or
jecxz
rcrb
scas
jnp
fstl
in
dec
imul
pop
stos
repnz
aad
sbb
js
jg
out
push
lea
in
call
pop
test
mov
mov
sarl
add
addb
ffreep
xchg
adc
and
divb
rcll
mov
and
out
push
cmp
gs
std
ljmp
hlt
popa
adc
add
add
sub
push
mov
jbe
inc
into
sbb
scas
lret
cmp
hlt
sarb
mov
addps
jmp
je
outsl
jge
add
out
fwait
xor
dec
pop
scas
repnz
dec
out
sub
fbld
adc
fsub
es
sub
pop
xchg
aad
jp
mov
rcll
adc
decb
test
mov
pop
add
ss
leave
sti
test
sahf
adc
dec
or
ficoml
xchg
mov
jae
daa
inc
pusha
enter
lret
pusha
mov
xchg
jbe
jns
stos
push
xchg
rorl
ret
xlat
mov
loop
rol
sbb
sbb
and
repz
lock
mov
shl
rolb
fdivl
sbb
push
xlat
xor
add
shrb
dec
pop
inc
fucomp
xchg
nopl
arpl
mull
push
cld
push
cmpsb
sbb
pop
lcall
add
mov
mov
hlt
jl
push
and
mov
into
sbb
push
daa
jbe
mov
push
cli
push
aaa
lret
jno
xor
jbe
xor
mov
pushf
push
clc
xor
xchg
out
adc
or
sti
inc
mov
add
stos
xor
and
sahf
mov
imul
dec
jl
divb
dec
es
inc
push
or
in
cmp
cmpsl
pop
dec
idivb
inc
mov
and
fisubl
pop
enter
push
movsb
push
add
xor
std
mov
jg
mov
fistpl
mov
ja
sbb
pop
mov
lret
movsb
imul
xchg
loopne
cmpsl
mov
dec
imul
lds
xchg
xchg
subb
push
repnz
test
test
cmp
jmp
pop
cmp
jl
scas
stos
out
mov
in
push
scas
gs
pop
push
xor
mov
sub
daa
in
daa
push
and
bound
sbb
inc
js
xlat
out
das
lods
imul
xor
daa
shrl
outsb
inc
mov
addr16
or
xchg
test
xor
cmp
fcomps
push
pop
mov
or
dec
leave
mov
enter
sub
call
push
pop
sbb
inc
mov
push
add
cmc
mov
push
and
jmp
shrl
mov
clc
fmuls
push
iret
and
jno
sbbb
push
pop
push
in
jae
xchg
jecxz
sahf
mov
lods
add
adc
jmp
cmpl
dec
nop
imul
sub
out
push
gs
or
cs
aas
sbb
xor
pop
roll
push
fnstsw
xchg
pop
push
push
jmp
pop
mov
or
pusha
push
or
pushf
addb
popa
sbb
inc
mov
inc
test
in
test
lea
mov
cmp
pop
jecxz
into
ja
sub
jle
push
cmp
mov
jp
fists
push
lds
fcmovb
decb
and
adc
or
inc
fcoml
jp
jae
xor
push
imul
movsb
or
push
jg
and
rcrb
jp
fmull
or
and
sub
adc
add
insb
cmpsl
movsl
gs
xchg
pop
xchg
cwtl
test
mov
rcll
add
stos
xor
xlat
push
cli
movsb
shrl
mov
das
pop
adc
push
icebp
jnp
lret
mov
in
inc
mov
cmp
lret
stc
fdivs
xchg
cmpsl
inc
xlat
movl
add
mov
add
dec
shr
jae
imul
or
sbb
imul
shrl
or
sar
inc
add
hlt
adc
es
mov
adc
push
movsb
dec
inc
mov
jl
mov
pop
ja
rclb
push
loop
xchg
popf
add
sub
jne
fisubl
or
faddl
push
popa
popa
pop
inc
adc
or
stos
aad
jmp
mov
cmpsb
inc
push
sbb
fucom
xchg
ds
add
push
jo
lock
dec
xchg
gs
dec
cs
cmp
cs
inc
pushf
shlb
cmp
shlb
jno
fstpl
cwtl
or
ficompl
sub
test
sti
lret
rolb
cmp
lods
repz
into
lock
test
repz
movsl
add
leave
pushf
add
aad
movsl
jnp
mov
pop
pop
stos
fsubl
arpl
icebp
cmp
mov
lods
mov
cltd
push
jle
addb
int3
outsl
or
jo
jo
pop
mov
pop
or
mov
jne
andl
vmovups
data16
xchg
cmp
cmpsb
imul
add
push
es
andb
inc
js
cmp
mov
push
div
cmp
add
add
repnz
mov
sub
xorb
pop
lahf
mov
push
sub
add
or
xor
mov
push
cld
mov
sub
add
dec
cmp
push
sti
cwtl
push
jbe
into
aam
sbb
fxch
cmpsl
cmp
pop
push
arpl
insl
jns
das
jmp
cmpsl
adc
mov
in
add
mov
add
jno
dec
jp
mov
mov
addr16
and
or
mov
test
ss
in
jmp
outsb
pusha
inc
in
xchg
pop
pop
jne
aad
mov
jg
ficomps
shrb
jmp
fmul
out
lods
or
jp
test
jns
mov
xor
lret
std
add
jne
pop
inc
push
nop
aad
fisubrl
gs
jl
xchg
sbb
sbb
jo
sbb
mov
gs
fimull
sub
scas
lahf
frstor
imul
aaa
dec
lock
fs
mov
jno
cmp
stos
sub
and
leave
sahf
insb
mov
ds
loopne
aaa
in
sub
into
loope
out
test
mov
mov
in
sbb
add
mov
aas
enter
xchg
cmp
add
xor
stos
inc
mov
sbb
pop
adc
mov
dec
and
push
dec
xor
mov
mov
ret
cmp
addb
sbb
push
mov
dec
adc
hlt
cmp
cmpsb
jnp
aad
mov
test
xchg
outsl
cmp
cltd
leave
in
lods
sbb
ds
fbstp
js
outsb
xchg
call
xor
clc
in
adc
loopne
inc
lcall
pop
fisttpll
mov
aad
sbb
loop
aad
mov
xor
pop
sub
es
mov
mov
ja
mov
mov
sbb
mov
lret
das
xor
mov
mov
jmp
jl
adc
into
or
sahf
and
lcall
jge
sub
mov
cmc
mov
fmull
ficompl
ret
push
mov
fisttps
xor
or
mov
bound
pop
les
cwtl
push
jns
orb
int
add
jl
sbb
sub
in
call
push
sbb
push
xchg
scas
sub
xchg
cmp
cltd
int3
mov
les
and
adcb
ljmp
stos
push
cltd
push
mov
icebp
jge
lcall
adc
and
jg
scas
push
xor
or
imull
sbb
pop
xor
fcoms
add
cmp
push
pop
test
cmp
push
sti
sub
in
mov
adc
rolb
pushw
sbb
add
fistps
and
pop
and
stc
out
in
out
dec
hlt
sti
std
dec
aad
in
and
push
cmp
sub
test
popf
sbb
sbb
push
push
push
leave
xor
mov
mov
std
call
pushf
pop
stos
cmc
clc
movsb
lods
mov
mov
dec
das
push
jmp
jp
mov
xor
xlat
add
push
out
addb
js
fcomip
dec
mov
inc
sbb
xor
fdivl
in
gs
mov
lret
inc
dec
mov
imul
in
push
push
loope
xchg
cmc
cmp
mov
rclb
add
pop
popf
adc
push
xor
add
jg
insb
jbe
rdpmc
xchg
repnz
jb
xchg
ljmp
popf
mov
ret
xchg
cwtl
sub
cmpsb
mov
sbb
mov
or
push
jl
inc
sub
fnstsw
cmpsb
in
test
push
cmp
fnstsw
movsb
xor
in
sub
lret
sbb
in
ja
test
iret
and
cmp
mov
pop
imul
xchg
loopne
push
lock
inc
arpl
push
ret
or
test
or
dec
gs
add
jne
jecxz
xchg
movsb
sub
int3
repnz
or
jmp
add
sub
insl
int3
mov
push
gs
sub
mov
cltd
cmp
jmp
xor
pushf
sub
scas
sbb
jno
sti
js
ja
mov
cmpl
or
push
mov
jo
xor
mov
call
sbb
jae
subl
cltd
pop
test
mov
out
dec
inc
cmpsb
outsb
gs
xor
mov
hlt
sub
mov
stos
mov
push
and
pop
in
xchg
ret
movsb
add
repnz
stos
adc
fisubs
add
jnp
sub
call
pop
div
stos
imul
jge
jb
add
pop
sbb
les
mov
hlt
stc
lock
in
xor
sbb
stos
pop
iret
test
mov
adcb
sub
testl
inc
mov
cs
dec
fisubrs
sahf
cwtl
and
push
xor
and
loopne
push
fisttpll
cmp
xor
test
xlat
int
mov
stos
sti
push
adc
push
popa
loopne
push
dec
cltd
and
push
inc
inc
push
add
clc
pushf
imull
xchg
mov
push
push
test
jg
xor
movsb
in
loope
lret
ds
cmp
push
imul
divb
dec
loope
decl
jb
xor
fisubs
xchg
sub
sti
lods
rcl
mov
pop
jbe
outsl
int3
xchg
cmpsl
enter
ret
imul
insb
jl
push
pop
sub
jp
jmp
push
cmp
xchg
aad
je
scas
add
sbb
cmpb
cwtl
fistps
jg
out
sbb
mov
imul
into
cmp
divl
mov
cltd
pop
xchg
imul
xchg
push
dec
mov
push
mov
and
sub
arpl
add
enter
mov
adc
js
ret
stos
lods
jmp
stos
rcll
push
mov
sbb
push
fs
mov
nop
shll
aam
out
nop
scas
dec
ss
push
adc
jp
push
test
push
repnz
das
jecxz
out
iret
xor
lcall
push
iret
ljmp
xor
xchg
repz
pushf
lahf
push
repz
sbb
inc
test
cmp
rorl
test
aad
cltd
out
jno
sub
mov
jle
rcl
fs
daa
movb
xchg
aaa
mov
or
iret
push
pop
arpl
data16
lods
xchg
dec
jb
daa
adcl
fsub
in
scas
pop
gs
adc
loopne
icebp
sbb
rcr
jo
push
les
addr16
cli
cmpsl
and
sub
push
dec
adc
add
cs
lods
loope
fsincos
fldt
push
aas
outsl
mov
fisubl
ret
stos
cmp
add
inc
xor
fs
xor
imulb
lods
push
dec
loope
fstl
into
push
ds
jnp
mov
mov
sbb
cmp
or
insb
enter
aam
xorl
cwtl
lock
mov
xchg
in
xchg
call
popa
cli
jle
lods
and
jb
pushf
movsl
pop
sub
call
repz
push
cmp
push
xor
sbb
pop
inc
xor
cwtl
sbb
xchg
out
mov
and
mulb
or
or
je
sbb
push
lret
int3
pop
or
in
xor
pop
leave
cmp
iret
jbe
ljmp
push
xchg
mov
mov
push
adc
xchg
push
pop
or
leave
shlb
sbb
outsb
mov
add
mov
dec
mov
adc
or
xor
incl
push
mov
iret
test
inc
and
fisttpl
lret
dec
lret
mov
es
and
out
dec
inc
divb
gs
ret
mov
in
imul
std
xor
jb
jle
js
jmp
out
pop
jae
adc
punpckhdq
pop
pop
push
fidivs
sarl
xor
inc
call
jp
repz
int
xchg
insl
fdivrs
fadds
sahf
ffree
mov
leave
std
or
arpl
xchg
test
test
clc
and
xchg
xchg
into
rcll
jmp
scas
lds
outsl
cmc
lods
inc
vpminub
or
push
outsl
cltd
add
mov
sub
xor
movsb
jns
imul
ror
fisttpll
pushf
push
xchg
mov
or
int
xchg
mov
cli
inc
imul
je
ret
ja
and
loopne
sub
add
dec
mov
cmpb
push
idivl
rorb
fwait
cmp
lock
sahf
pop
push
jno
icebp
pop
add
mov
mov
cli
sub
mov
and
ficoms
mov
lret
sub
or
sbb
push
jo
lea
arpl
mov
aad
test
and
jne
sub
ret
sub
in
popf
loopne
xchg
push
rcrl
and
push
stc
jge
hlt
lcall
jecxz
jecxz
jge
lcall
mov
cmp
push
cmp
mov
fdivrs
lcall
imul
add
xor
outsb
mov
daa
shl
jle
xchg
pop
mov
push
sub
in
dec
ja
mov
mov
out
or
popf
inc
xchg
jae
sbb
mov
cmp
push
mov
and
dec
pop
sub
movsb
jge
lods
mov
popa
dec
clc
sahf
mov
pop
add
pop
mov
mov
push
imul
xchg
inc
inc
sti
fbld
jg
je
test
cmp
lock
add
add
rcrb
add
jge
push
idivl
sub
fldenv
popa
sbb
xchg
add
jecxz
xadd
push
mov
rcr
inc
dec
popa
xor
jl
cmp
adc
aam
push
or
leave
inc
jne
cs
lcall
push
push
mov
xchg
cmp
cld
xlat
cmp
jecxz
js
push
add
adc
push
and
imul
pop
shll
or
repnz
sbb
mov
add
cmpsl
std
es
sub
test
or
inc
mov
pushf
dec
mov
lretw
pop
sub
cmp
mov
test
cmp
push
int3
and
add
in
push
inc
ficoml
scas
and
add
mov
mov
clc
std
pusha
clc
mov
pop
sub
cmp
iret
mov
icebp
int
movsb
mov
clc
sub
lock
xor
test
adc
cs
inc
enter
push
sub
call
push
dec
or
sbb
xlat
sub
xorps
adc
and
xchg
xchg
lret
mov
xorb
test
adc
jg
cltd
lods
notl
add
and
cmpsb
push
xchg
xor
dec
pusha
mov
fildl
or
mov
or
std
lcall
icebp
jmp
add
lret
mov
push
adcb
sbb
scas
shrl
sbb
dec
pop
sub
pop
mov
xchg
xchg
pop
or
in
push
movsl
lcall
and
xchg
xlat
rcl
inc
movsl
lret
pop
gs
stos
fcmovnbe
out
pop
sub
outsb
xchg
cmpsl
icebp
xchg
dec
mov
outsl
pusha
jmp
arpl
mov
adc
jge
mov
lret
cmpsb
adc
inc
test
dec
jne
or
out
enter
jp
jecxz
shrl
xor
jb
or
xchg
xchg
popf
push
mov
mov
jle
ds
lret
xchg
call
sbb
pop
push
out
push
outsl
jmp
lret
adc
sub
sub
dec
sahf
push
adc
outsl
jp
out
pop
leave
pop
xchg
and
imul
inc
jge
adc
sub
sub
mov
or
adc
inc
jp
sarb
xlat
insb
cmc
lds
add
data16
outsb
les
cli
fwait
int3
mov
ficoms
loopne
push
adc
cmpsl
negb
ljmp
clc
stc
cmp
call
jmp
call
iret
addr16
vpcomud
jb
mov
loopne
mov
push
pop
stc
pop
fsubs
movsl
cltd
aas
add
sub
mov
and
insl
fimuls
ret
xchg
cmp
enter
mov
xchg
out
ficomps
dec
loope
sub
fs
mov
or
mov
mov
push
jo
inc
inc
insb
xor
adc
mov
clc
ret
or
xchg
ja
out
or
notb
xchg
pop
xchg
test
sub
inc
add
sub
cmp
cmpsb
dec
cmpsl
dec
sbb
arpl
xor
push
jmp
add
mov
sub
fildll
test
lret
sahf
aas
and
add
push
cpuid
mov
pop
bound
std
ds
ret
insb
push
add
pop
movsb
cmc
cmp
leave
rorl
xchg
adcl
rorl
pop
stos
push
mov
cld
wrmsr
jecxz
in
dec
imul
hlt
push
fiaddl
data16
shll
test
adc
inc
rorb
test
les
xlat
dec
fdivr
xor
adc
fucomi
adc
test
sub
push
pop
fistps
hlt
div
and
movsb
pop
jl
cmp
jb
mov
jnp
mov
mov
push
and
dec
test
loopne
das
add
sub
sub
mov
enter
xchg
sbb
mov
fisttps
lcall
rolb
dec
sbb
add
outsl
pop
ret
jge
ror
mov
cmp
shr
aaa
addl
lret
jg
movsb
lock
dec
adc
pop
mov
incl
jnp
mov
lods
ror
pusha
fidivs
jmp
pop
ja
stc
rcrl
lret
adc
loop
fldl
lcall
push
pusha
push
jnp
lock
shlb
cmpsb
mov
cmp
idivl
pushf
fiadds
stos
push
dec
and
xchg
xchg
pop
stos
incb
sub
mov
xchg
aam
add
notb
pop
test
push
add
sbb
arpl
shl
mov
xchg
mov
xlat
jns
adc
xor
js
adc
xchg
jmp
jnp
leave
jg
mov
adc
sahf
fs
in
ret
les
daa
daa
pop
iret
cli
lods
dec
cld
cli
adc
dec
fsubl
and
imul
out
shll
lret
sub
xchg
insl
mov
lahf
shlb
popa
add
jno
fs
add
in
adcl
add
and
pop
outsl
cmp
xchg
repnz
jns
test
fmul
adc
inc
dec
fucompp
jnp
iret
cmp
mov
scas
mov
aaa
xchg
sbb
fcmovnb
mov
lahf
js
cld
dec
fmul
ljmp
sysenter
lcall
mov
aaa
jnp
pop
imul
fimull
or
sub
loop
dec
and
cli
lahf
dec
push
arpl
push
stc
sub
jecxz
and
cmp
xchg
or
pop
lea
aas
mov
iret
in
js
stos
call
and
sub
jns
cs
sbb
and
jb
mov
xchg
xchg
clc
insb
add
sub
jg
inc
sub
lahf
lret
data16
fiaddl
cmp
das
and
fcmovne
sarl
mov
jg
sbb
and
inc
xor
xor
or
pusha
icebp
hlt
sub
mov
lahf
xchg
inc
add
movsb
repz
mov
cld
ljmp
xor
and
xchg
ss
mov
sub
cmp
into
rorb
outsl
je
xchg
add
add
test
xchg
inc
jle
inc
jns
movsl
jecxz
fcompl
sub
subl
xadd
inc
cmp
gs
cli
pop
shll
test
inc
cld
pusha
inc
cwtl
loopne
js
xlat
fnstenv
ret
dec
mov
mov
call
or
mov
ficomps
xchg
and
and
ljmp
rcll
add
stc
mull
in
sub
lods
testl
xchg
call
dec
jb
mov
sbb
push
sub
ja
jmp
dec
loope
movsl
push
mov
leave
or
dec
pushf
sbb
push
hlt
testl
sub
nop
in
xchg
and
imul
lds
fdivrp
stos
ljmp
mov
iret
or
mov
adc
or
mov
fld
adc
jns
and
sub
dec
adc
xchg
xchg
inc
sub
or
xor
jb
lods
cmp
mov
pop
pop
dec
pop
dec
imul
push
stos
mov
push
insb
sbb
adc
sbb
dec
out
mov
mov
cltd
add
ja
fldl
push
push
pop
leave
jmp
adc
stc
cmp
xchg
inc
jo
adc
jb
aam
sub
xchg
ss
cmp
adc
imul
rcrl
bound
sub
xchg
add
push
loope
js
or
jno
insb
dec
rcr
sti
loopne
je
pop
cmp
push
inc
arpl
or
cmp
fwait
out
add
enter
rorl
stc
push
in
cmp
cmp
xor
push
push
fldcw
xor
inc
fldl
into
pop
idivl
cltd
sbb
call
imul
out
idivb
sub
mov
xchg
jb
daa
pushf
mov
loop
mov
ret
jl
or
es
fsubs
inc
lock
cli
es
fsts
fsubs
jl
aaa
dec
mov
ds
je
imul
xchg
test
stos
mov
aaa
pop
ljmp
mov
je
jo
cmp
jle
jp
pop
in
mov
xchg
lds
sti
and
push
test
sub
in
sub
jl
jns
cmp
divl
dec
and
mov
inc
and
ss
xor
xchg
fcompl
cmp
push
hlt
cmpsb
and
xchg
adc
sbb
mov
push
mov
push
scas
jno
divb
aad
xorl
add
gs
je
cmp
jge
insb
push
add
or
pop
cmp
lret
dec
add
dec
xor
mov
adc
test
add
mov
aad
je
cmp
mov
repnz
and
pushf
pop
mov
mov
dec
popa
adc
cmp
xchg
ja
pop
pop
or
mov
add
mov
mov
adc
mov
add
shll
push
popa
ds
cs
gs
je
cmp
mov
stos
jecxz
sbb
mov
mov
arpl
pop
std
das
addr16
cmp
xchg
pusha
mov
adc
enter
daa
sti
dec
repnz
sub
mov
outsb
xor
nop
push
mov
aam
cmp
pop
mov
push
aas
ss
lret
push
xchg
push
dec
mov
sahf
sbb
or
aaa
jmp
push
add
gs
mov
lds
ja
cmpsb
mov
xchg
repz
push
inc
mov
xchg
or
in
mov
xchg
mov
pop
hlt
in
loop
and
jnp
sub
mov
xchg
in
shll
andl
cmp
jne
cmp
scas
add
mov
loopne
and
in
inc
sahf
sub
jge
cmpb
inc
push
bound
xor
data16
das
test
inc
sub
mov
testb
out
pop
mov
incl
xchg
les
nop
int3
xchg
jmp
mov
jp
cmp
dec
aaa
jg
mov
xchg
adcl
sub
cmp
imull
adc
dec
outsl
and
popa
movsl
pop
jnp
popf
mov
popa
scas
dec
jb
sbb
jge
gs
pushf
out
jmp
dec
fimuls
sub
je
cld
mov
mov
into
daa
out
addr16
sarl
and
push
pop
ror
fstpl
test
cwtl
mov
out
jnp
orb
jbe
push
es
repnz
inc
lcall
xchg
mov
mov
xchg
repz
cltd
jbe
mov
popf
int3
push
lret
cwtl
iret
add
jo
popf
jno
push
pushf
mov
loope
xchg
imul
ret
call
imul
adc
std
jl
dec
ds
sub
sbb
push
xor
imulb
fdivs
cmpsl
fsubl
fs
jp
dec
cltd
xchg
iret
dec
rolb
cmp
lret
fmull
dec
add
scas
out
xchg
xchg
cwtl
jmp
repnz
je
mov
movsl
inc
pop
cmpsl
les
adc
repz
push
aad
inc
cmp
outsl
outsb
loope
add
push
pop
stos
stc
mov
stos
ljmp
aas
fstpl
cmp
sahf
pop
xchg
jne
icebp
mov
add
aas
xchg
mov
mov
loope
pop
test
adc
mov
dec
mov
or
dec
inc
mov
mov
pop
sti
sub
pop
cs
mov
fmuls
fcomps
ret
shl
mov
js
lcall
pop
clc
test
jns
jecxz
pop
int3
xchg
jae
jmp
lods
movnti
xchg
push
dec
push
pop
xor
xlat
jl
mov
pop
and
fs
mov
mov
mov
fiadds
icebp
inc
popf
inc
mov
int3
inc
fbstp
add
sub
cli
sbb
pop
or
fs
sbb
stos
nop
stos
push
pop
jecxz
pop
int3
and
and
adc
mov
scas
adc
xor
sbb
scas
adc
orb
mov
mov
loop
xor
dec
iret
xor
mov
sti
mov
ret
or
mov
xor
aaa
mov
add
dec
inc
push
addb
or
inc
mov
push
or
inc
and
and
lock
inc
pop
dec
scas
cltd
cmc
stos
sarb
and
cli
jae
mov
in
pop
jo
mov
jmp
inc
xor
xchg
scas
pop
loop
loop
mov
enter
xchg
push
mov
xlat
xchg
out
mov
add
lret
or
je
test
jmp
call
ds
add
ljmp
popf
jle
add
leave
add
or
pop
inc
pop
dec
mov
or
mov
jp
jnp
xchg
fadd
add
dec
push
add
mov
shl
mov
xor
xchg
push
push
bound
pop
lcall
jno
bound
rcll
loopne
mov
in
push
mov
xchg
cmp
cmp
and
test
iret
add
iret
dec
and
xchg
test
push
dec
xor
mov
repnz
mov
pop
ds
jb
mov
mov
sub
jg
fisttpl
and
jbe
insb
and
aam
ljmp
ds
ljmp
pop
or
call
fsub
scas
add
sbb
inc
jl
mov
lock
mov
jbe
popa
scas
lea
pushf
inc
iret
jno
shlb
gs
loopne
dec
xor
xchg
jne
popa
int
or
lds
jnp
loopne
ljmp
lret
inc
xor
lods
fistpl
dec
mov
xchg
out
out
hlt
sub
cmp
inc
rcl
pop
add
mov
pop
add
fcomps
push
pusha
xchg
mov
xor
lret
lea
pop
adc
inc
lret
cs
xchg
movsb
stc
adcb
or
or
adc
sub
iret
rcrl
push
dec
or
adcl
ret
add
cmpsl
mov
push
fists
ja
add
mov
iret
cmovbe
mov
ds
pop
xchg
bswap
repz
lahf
pop
aaa
shrb
xor
jo
pop
push
add
dec
test
pop
mov
jb
inc
enter
shrl
dec
fwait
mov
xlat
pop
sub
push
nop
and
repz
push
rcl
push
jmp
repz
daa
pusha
pop
xchg
pop
adcb
hlt
sbb
push
pop
mov
xchg
loopne
pusha
adc
mov
push
mov
cmp
xchg
incl
scas
jp
jg
mov
gs
inc
cmp
inc
data16
sub
mov
mov
movsb
xchg
mov
hlt
cmp
lods
pop
ja
jns
or
jg
fcomps
or
jns
mov
call
inc
outsl
add
or
cmc
mov
pop
mov
sub
cltd
insl
in
popa
cmp
jle
and
into
add
jge
push
js
aas
cmpsb
adc
mov
stos
pop
dec
mov
pop
insl
mov
xor
mov
xor
fistpl
add
ds
addr16
je
sbb
or
pusha
sbb
pop
pop
outsb
clc
insb
cli
call
arpl
lcall
push
mov
arpl
cmp
lea
test
shl
lods
pop
outsb
pushf
or
pop
xchg
mov
int
rolb
and
cs
cmp
lods
mov
mov
mov
ljmpw
mov
jne
mov
mov
jno
jle
movsb
cli
cld
lcall
jo
lods
xchg
mov
add
and
test
cltd
scas
pushf
ret
fsubrs
push
pop
std
jg
cmpsb
dec
sub
add
mov
mov
sti
cmpsb
adc
sbb
je
roll
mov
pop
jnp
mov
pop
xlat
mov
repnz
rclb
mov
imul
incl
add
fldcw
shll
in
xchg
mov
div
dec
lea
loope
addb
dec
call
dec
fwait
add
sbb
and
dec
add
leave
inc
push
idivl
sub
repnz
ja
pop
ss
mov
sub
clc
int3
xlat
shl
cmp
xchg
jno
sbb
roll
inc
jae
popf
dec
push
bnd
xchg
test
js
inc
mov
inc
push
fwait
call
mov
scas
mov
rcl
sbb
lock
pop
test
shlb
sbb
and
cltd
push
mov
fwait
bsf
pop
gs
cmp
in
imul
jo
subl
xchg
xchg
mov
sarl
add
fildl
jnp
mov
push
inc
leave
mov
push
sbb
sbb
mov
jmp
testl
jmp
pop
ss
mov
mov
out
jns
lea
div
int
cmpsl
pop
bound
loope
add
mov
imul
bound
pop
and
and
into
sbb
xchg
test
imul
inc
push
mov
xchg
in
stos
aas
arpl
stos
xlat
loop
adc
iret
and
add
sbb
mull
dec
jo
pop
das
iret
dec
push
outsl
push
rcrl
adc
xchg
sbb
inc
add
int
addr16
ja
insb
push
popa
xor
mov
dec
fldt
lgs
pop
inc
in
xchg
lds
lret
rcrl
iret
jge
cmc
cmp
jae
jae
sbb
out
inc
scas
mov
xor
ds
enter
mov
fiaddl
mov
cmpsb
ja
sbb
sub
scas
push
push
mull
lds
xlat
aad
mov
cmp
clc
xor
push
fwait
xor
sahf
mov
lret
adc
iret
mov
xchg
push
dec
stc
pop
push
cli
add
mov
sar
nop
xlat
or
push
js
in
sti
movsb
idivl
stos
mov
ss
sahf
std
aad
xor
mov
xchg
add
dec
dec
faddl
rcl
add
cmp
jmp
sbb
and
in
sbb
mov
dec
aam
imul
and
mov
call
adc
add
xchg
lret
mov
push
aad
sub
aaa
lahf
repnz
mov
sub
lds
mov
stos
cmpsb
jns
xchg
pop
sbb
xchg
ret
mulb
jecxz
or
xchg
imul
xor
cmp
lods
xorb
out
fs
insb
push
arpl
sbb
mov
in
pop
dec
sbb
scas
lods
fcoms
and
ret
cmp
adc
notl
ljmp
clc
ljmp
pop
cltd
xchg
add
ret
xor
lret
lods
pusha
stos
push
jbe
aad
mov
cwtl
int
int
cmpl
mov
cmp
xchg
test
rcrl
adc
out
ljmp
sub
cmp
bound
test
movsb
mov
popa
ret
mov
es
cmp
sub
sahf
mov
xchg
imul
mov
adc
data16
xor
int
lcall
mov
sbb
ror
in
lret
addr16
movb
bswap
test
dec
test
xor
push
mov
stos
dec
lods
cmp
lcall
xor
std
movzwl
js
xor
fidivl
mov
mov
lret
push
cmp
push
mov
mov
in
xlat
mov
leave
add
jo
cli
rcll
dec
and
cmp
sbb
xor
mov
mov
push
loopne
not
scas
shll
sti
cltd
es
sbb
lea
push
mov
sub
call
shll
in
lahf
stos
ret
mov
sub
sbb
je
pop
faddl
outsl
gs
and
inc
and
adc
adc
add
rclb
xor
gs
inc
loopne
mov
push
out
fs
inc
jmp
or
sarb
outsw
or
mov
xor
adc
and
mov
rcrl
imul
out
dec
xor
jge
inc
mov
in
loop
lahf
inc
nop
rcl
outsl
mov
pop
mov
in
out
jns
vunpcklpd
lods
decl
enter
jo
push
dec
pop
push
jae
adc
repnz
lret
xor
cwtl
ret
pop
lea
adc
popf
insl
insb
xchg
mulb
fsubrs
data16
push
lret
fdivrl
pop
mov
add
shll
xor
mov
imul
cmpl
icebp
outsb
inc
jg
and
in
adc
imul
add
imul
add
gs
inc
push
add
mov
lret
mov
outsl
add
mov
div
cmpsl
xor
xor
cmc
cmpsb
imul
adc
cwtl
out
in
sub
nop
insb
fiaddl
pop
stc
aad
lods
mov
or
fstps
leave
popa
pop
push
pop
xor
dec
pop
mov
lcall
mov
dec
xor
sub
mov
fisubs
test
sub
adc
mov
dec
sub
in
mov
repz
mov
rcl
pop
and
mov
cmp
mov
xchg
out
cmp
inc
lcall
cli
dec
and
cmp
push
push
pop
mov
xor
cmp
and
loopne
ret
jnp
and
mov
jnp
cwtl
add
push
pop
cs
mov
jle
jb
push
sbb
leave
cltd
call
sti
sbb
or
shl
out
pop
adc
push
mov
xchg
pop
xor
je
fst
mov
ret
and
mov
adc
inc
dec
jbe
xchg
ljmp
movsb
mov
jb
sub
sbb
pop
ret
adc
test
push
mov
movsb
xchg
mov
xorl
loopne
popf
faddp
sbb
inc
xchg
push
daa
fldenv
enter
fcompl
fstpl
std
push
inc
cwtl
dec
cmpsb
lahf
in
cmp
icebp
lret
inc
inc
pop
cmpsb
sub
into
and
pop
pop
push
imull
xlat
subb
push
pop
int3
outsl
push
jmp
insl
cmpsl
ss
push
lods
popa
in
popa
notb
fimull
lret
lds
test
fwait
xchg
xlat
mov
ss
and
push
loopne
out
dec
inc
dec
jae
icebp
imul
test
test
pop
das
mov
ret
and
adc
xchg
inc
mov
sbb
lods
fs
add
xchg
add
mov
cmp
pop
cmp
and
dec
in
call
subb
test
add
std
popa
jecxz
jl
adc
cmp
mov
xor
or
lds
sub
mov
adc
xor
js
outsl
bound
fsubl
fisttps
pop
sub
dec
push
pop
cmp
stc
out
cld
sbb
mov
jg
add
mov
bound
pop
paddsb
jns
jno
fcompl
aaa
lock
test
out
in
fstpt
fisubl
pop
adc
sti
mov
mov
ds
mov
jb
adc
push
xlat
add
xchg
push
int
inc
inc
mov
shrl
flds
imul
jl
fdivp
push
add
and
and
cmp
loopne
pop
cmpsl
or
nop
and
xchg
lret
pop
jnp
iret
idivb
imull
mov
icebp
sarl
adc
int
insl
jge
popf
push
imul
repz
xchg
fs
lock
mov
push
pop
loope
cmp
mov
push
lods
je
xchg
fsubl
mov
mov
stos
jbe
jmp
push
sbb
bound
jp
iret
imul
pop
sti
aaa
sub
or
out
sub
sbb
out
adc
push
sbb
pop
psubsw
movsb
push
ret
or
loope
aad
fs
jae
inc
xchg
lds
adcb
aaa
add
pop
add
int
ret
adc
in
in
sbb
sbb
hlt
mov
xchg
pop
cmp
test
nop
push
push
aam
jne
sahf
mov
popf
adc
mov
sbb
sbb
jge
out
out
xor
and
dec
dec
in
sti
iret
jnp
aam
mov
ds
adc
arpl
xchg
mov
push
in
pop
mov
xor
dec
lahf
movsb
xor
lock
loopne
xor
daa
in
aam
sbb
stos
xor
mov
out
and
xchg
sarb
ss
mov
loope
xchg
jecxz
xor
push
push
xor
inc
test
fdivrs
rorl
in
cmp
inc
imul
pop
outsl
shrb
xor
dec
push
fwait
jg
in
dec
movsb
ljmp
in
nop
loop
std
js
popf
iret
out
and
jae
mov
lret
int3
sbb
add
sti
mov
ret
sub
sar
test
cmp
std
jl
loop
rcll
fldt
xlat
cmp
not
rorb
iret
push
xlat
iret
fldt
and
xchg
mov
nop
ret
add
push
enter
outsb
dec
cmp
push
dec
push
pop
cltd
mov
mov
push
sbb
sub
and
mov
cltd
arpl
inc
push
aam
add
push
or
shrl
dec
sarb
jb
mov
gs
mov
mov
push
push
mov
dec
mov
mov
popa
xchg
out
int
data16
add
lods
sbb
xchg
and
sub
jo
lahf
pusha
cmp
nop
xchg
mov
test
cmp
jnp
cltd
inc
fidivl
mov
notl
xor
roll
push
into
fistl
andb
dec
xchg
pop
pop
loop
or
jnp
pop
mov
xorb
xchg
mov
mov
xor
out
mov
arpl
jno
cmpsb
add
dec
sub
in
dec
jnp
mov
sub
push
mov
inc
inc
add
insl
pop
notl
xor
dec
cwtl
iret
sub
movsl
mov
pop
adc
xchg
out
cli
jne
jbe
or
imul
add
inc
cmp
aad
fcompl
xchg
pop
sub
dec
fnstenv
push
sbb
mov
add
add
nop
nop
in
es
cmp
jmp
ljmp
js
cmpsl
pop
adc
pushf
iret
lahf
repnz
xor
or
mov
clc
and
lods
ds
aam
clc
cmp
popf
pop
inc
invd
loopne
xchg
mov
cmpsb
in
sti
pop
imul
sbb
push
cmp
lret
lret
das
mov
loope
pop
mov
sub
nop
mov
pop
cwtl
xchg
pushf
sub
mov
pop
lret
cli
mov
js
in
xlat
or
add
add
jno
adc
js
pop
xchg
sub
ds
cs
shlb
push
add
cmp
sub
es
sub
jb
div
dec
aam
push
out
cwtl
fistps
pop
adcb
scas
rorl
or
xchg
lods
ljmp
mov
inc
jg
add
and
pop
xor
add
push
jne
int3
pop
in
in
push
xchg
inc
cmp
sub
ret
sub
push
hlt
into
adc
dec
dec
ljmp
cs
mov
mov
leave
inc
lahf
loopne
andl
loope
shlb
or
mov
adc
testb
repz
push
mov
sbb
add
mov
rol
fcomp
pop
ja
fiaddl
std
add
cmpsl
cld
or
mov
outsl
sbb
add
xchg
test
or
xchg
fwait
mov
incl
shrl
jp
icebp
shll
adc
stos
ficoml
inc
addr16
jge
pop
and
out
push
ljmp
divl
mov
push
jge
cld
in
repz
xor
mov
lahf
imul
loopne
cmp
jnp
imul
cmc
dec
adc
pop
mov
aam
mov
cwtl
sbb
inc
sub
lds
mov
sub
fcoms
in
fidivrl
int3
mov
js
mov
mov
inc
add
sbb
cmp
and
scas
sub
aad
xchg
stos
push
inc
or
pop
dec
push
shll
stos
mov
pushf
cmp
cld
or
mov
add
stc
adc
jno
je
mov
cmpsl
adc
or
sahf
enter
add
sbbb
out
push
jbe
popf
outsb
add
loop
lcall
cmp
in
xor
sub
out
sbb
pop
adc
push
jmp
aad
popa
sbb
sbb
inc
arpl
jb
jle
push
hlt
push
lcall
mov
clc
fdivrl
sub
sbb
in
test
mov
fdivl
ret
cmp
test
mov
sarb
jmp
bound
test
or
orl
push
out
pop
and
repz
fbld
mov
ljmp
xchg
cmpsb
int3
sub
add
insb
push
or
aas
pop
add
js
pop
ror
push
sbb
aaa
or
subl
add
adc
insl
add
addr16
push
sarb
js
dec
xor
pop
test
mov
outsb
jp
or
mov
xor
stos
insl
shll
mov
mov
xsavec
sub
icebp
xchg
pop
jmp
popf
rorl
movsb
inc
cwtl
mov
push
sub
dec
repz
xchg
std
inc
out
push
popa
popf
cwtl
bound
dec
xchg
mov
fwait
rclb
sub
sbb
decl
push
xchg
dec
cmp
in
dec
lret
cmp
inc
es
xor
fs
dec
mov
sahf
push
jecxz
jae
shrb
out
adc
pushf
mov
xor
xor
movb
push
or
push
lock
cmp
sbb
out
jbe
clc
shlb
fdiv
mov
jns
das
ss
xor
ficomps
or
lea
cltd
lock
xchg
add
xchg
adc
outsb
sub
jge,pn
pop
mov
pop
aas
repz
testb
jp
lea
inc
inc
adc
orb
bound
add
lea
dec
insb
daa
inc
loop
fs
aaa
imul
lret
fucomi
pop
aad
dec
and
xchg
fsts
outsl
add
pop
push
call
out
add
cmc
ds
xchg
fisttpl
std
dec
xchg
fcompl
fisttps
mov
sbb
enter
sub
add
outsb
pop
notl
shrb
hlt
xchg
or
bound
icebp
scas
and
cli
mov
or
xchg
xchg
popl
xchg
mov
fwait
push
dec
mov
mov
mov
hlt
sar
dec
cmp
sub
inc
lahf
das
jg
scas
cmp
nop
inc
inc
fimull
jecxz
sbb
orl
sarl
push
lretw
inc
or
ret
frstor
jae
cltd
jmp
pop
ficompl
xor
mov
dec
sub
mov
movb
jns
push
jp
push
gs
push
mov
fnstcw
adc
ss
es
scas
push
cmp
mov
int
mov
arpl
cmp
sub
push
ja
aam
cli
jg
imul
xchg
pop
int
add
cs
arpl
data16
xor
movsb
repnz
jg
fldenv
add
loop
cwtl
iret
aam
dec
xlat
and
sbb
insb
outsb
lock
data16
in
popa
or
sti
jge
into
or
mov
mov
scas
or
nop
lret
jns
addr16
jb
int3
cmp
mov
ds
cmp
aaa
mov
shrl
nop
hlt
js
loope
xor
add
jo
sbb
mov
int
dec
clc
jg
cmpsb
xchg
decb
adc
imul
mov
push
pop
xor
pop
jle
rcll
adc
test
sbb
divb
mov
fidivrl
xor
sbb
inc
xor
aas
ret
inc
test
dec
mov
sbb
data16
hlt
inc
insl
push
cmpsl
jae
lods
xchg
mov
cmp
jl
push
xchg
mov
das
pop
shrl
or
arpl
test
rorl
dec
cmp
inc
pusha
fdivrl
xor
sub
outsl
clc
xor
in
dec
fildll
jb
cwtl
test
mov
sarl
scas
outsl
rcrl
js
xchg
adc
mov
lds
jge
push
push
lret
sub
or
add
in
out
mov
adc
mov
andl
xchg
push
outsl
mov
lret
inc
jno
sbb
xor
cwtl
adcl
xchg
lods
or
pop
mov
arpl
je
je
daa
or
sub
mov
stos
lret
loop
mov
repz
inc
ss
mov
test
cltd
out
push
mov
cmpb
adc
jno
and
daa
xchg
xorb
mov
mov
js
xor
push
dec
add
push
mov
pop
repnz
dec
mov
mov
ret
lods
stos
clc
mov
out
lcall
outsb
add
add
add
ja
loopne
and
add
push
fs
lcall
loopne
xchg
pop
push
stos
or
pop
xchg
mov
mov
outsb
les
inc
pop
pop
aaa
mov
in
les
and
sbb
movsl
popf
push
movsb
stos
cmp
mov
and
pop
fcomps
sbb
inc
push
sbb
and
cmp
iret
jb
dec
mov
adc
stc
inc
out
and
jmp
mov
adcb
out
in
jp
lret
jne
push
xchg
cld
pushf
testb
push
sti
inc
ljmp
cmpb
pop
popa
push
or
pop
pop
xchg
or
adc
or
in
mov
and
fiadds
les
decb
lret
stos
and
mov
aaa
lods
pop
int
in
mov
xchg
xchg
mov
add
cmp
stos
inc
dec
mov
rdmsr
mov
push
test
sub
xor
dec
outsb
test
cli
mov
sbb
insb
dec
lock
or
mov
cmp
pop
call
sahf
loope
test
arpl
mov
adc
cmp
in
int
inc
push
adc
inc
dec
mov
push
mov
sub
pop
imul
cmc
out
jg
mov
pop
dec
mov
mov
mov
xchg
mov
popa
mov
lret
in
stos
xor
mov
xchg
in
call
xorl
gs
mov
xor
and
mov
jmp
int3
dec
and
enter
xor
dec
and
dec
fnstenv
mov
sti
mov
jnp
sub
jmp
jo
mov
cmp
les
ret
sub
lods
es
add
xchg
repnz
js,pt
rorl
test
pop
inc
repz
jbe
bswap
mov
jnp
cmpl
jg
je
int
inc
in
inc
fidivrs
hlt
mov
leave
adc
cmp
cmpsl
and
sbb
push
lret
mov
mov
roll
pop
or
icebp
fiadds
push
scas
push
push
pop
sub
or
and
leave
sbb
lcall
rcrl
cmp
repz
and
adc
mov
push
jo
je
lret
divl
inc
enter
popf
xchg
jb
insl
push
hlt
mov
rolb
icebp
std
ss
verw
cmp
mov
loopne
or
dec
arpl
addr16
cmp
out
repz
sub
js
lahf
inc
sbb
adc
aas
add
cmp
mov
sbb
js
test
arpl
cmp
cmp
inc
xchg
insl
cmp
fbstp
call
dec
sbb
in
adc
dec
dec
xor
repnz
addl
sub
xor
push
jmp
gs
mov
sub
sub
xchg
gs
push
cmp
cmpsb
push
push
js
push
test
in
into
add
lods
es
push
inc
inc
negb
in
ja
dec
es
lods
int3
nop
rorb
xor
cwtl
out
ret
mov
fdivs
or
scas
xorb
push
subb
and
pop
xor
lret
aas
sbbb
or
shr
imul
pop
or
fsubr
xchg
jbe
jmp
pop
jno
mov
xchg
lea
fcmovne
enter
repz
or
dec
xorl
or
dec
lcall
mov
add
jae
outsl
test
sbb
std
es
fidivl
fsub
insl
mov
adc
rcr
add
adc
cltd
hlt
call
jbe
lcall
shlb
add
stos
mov
daa
fsubrs
pop
lds
aam
sub
pop
jmp
dec
adc
daa
cli
inc
movsl
fstpl
ss
and
lcall
sub
out
mov
xchg
lock
push
pop
sub
in
lods
mov
loopne
xor
pop
inc
dec
scas
pop
sbb
xorl
adc
mov
imulb
fmuls
mov
jmp
mov
arpl
xchg
pop
jecxz
lcall
xlat
popf
aas
inc
sub
xorl
loop
pop
rcrl
sbb
pusha
gs
sti
call
shlb
outsb
mov
mov
mov
xchg
sbb
scas
fnstcw
popf
ret
dec
push
lcall
daa
jae
mov
iret
cli
aas
xor
fdivrl
out
int3
ja
pop
cmp
jns
cmc
bound
mov
dec
push
pop
aas
push
or
adc
not
sub
dec
dec
gs
ja
or
xchg
mov
mov
xchg
mov
movsb
mov
pop
pop
lods
pop
in
mov
jns
sub
mov
xor
mov
sbb
pop
mov
scas
mov
fs
push
adc
mov
mov
fadds
test
jbe
adc
andl
xchg
xor
jecxz
repnz
mov
sbb
sbb
pop
or
lcall
test
cmpsl
repnz
and
js
pop
mov
out
or
divb
cld
xor
mov
inc
lods
jle
and
into
cmpsb
and
fildll
test
adc
xor
inc
inc
add
ss
in
adc
fdivr
nop
in
in
mov
dec
xor
fdivs
test
mov
or
or
pop
xor
daa
imul
mov
sbb
and
mov
xchg
aam
and
int3
push
sbb
jp
mov
mov
inc
adc
dec
out
out
stc
add
aaa
mov
jne
mov
lahf
iret
rclb
or
cwtl
loope
imul
lds
loop
mov
sub
jbe
xchg
sbb
imul
adc
sahf
cmpsl
mov
inc
push
mov
fld
cmp
or
xchg
vmread
les
aad
subl
inc
jno
jp
ret
mov
xchg
mov
popf
pop
aam
jg
or
lret
bound
cld
repz
adc
clc
inc
mov
loop
or
pushf
stc
pop
pop
mov
add
rol
outsb
jne
xlat
mov
inc
mov
xor
jb
mov
mov
scas
and
and
mov
mov
inc
sarb
insl
fcom
lods
xchg
mov
mov
sbb
ljmp
ss
ljmp
sbb
or
mov
mov
inc
jle
ret
in
ret
lahf
pop
lahf
insl
fimuls
jl
mov
pop
push
enter
fistps
int
sbbl
mov
dec
lods
sub
push
lcall
mov
in
mov
inc
add
enter
cmp
in
cmp
into
inc
or
scas
or
lret
les
add
sarl
jp
pop
add
xchg
xorl
mov
imul
scas
test
call
mov
inc
outsb
and
sbb
inc
sbbl
mov
cmp
repz
dec
add
push
scas
xchg
movsb
arpl
xor
jmp
dec
std
pusha
mov
test
lea
sub
int3
gs
or
outsl
mov
aas
add
daa
stc
repz
or
jle
cmp
add
lea
rcl
sti
out
insl
pop
mov
es
sbb
mov
pop
subb
mov
leave
ja
test
xor
or
jne
xchg
add
ss
jecxz
roll
sub
sti
dec
test
jge
lret
xor
aad
scas
and
into
dec
sbb
mov
fcoml
cmpsl
movsl
pop
mov
mov
cmp
sarb
lret
pop
jae
jb
jo
sbb
repnz
stos
ss
add
fbstp
inc
ficomps
notl
hlt
popf
sub
or
inc
es
sub
cmp
lret
popf
ljmp
aaa
adc
cmp
pop
cmpsb
mov
arpl
and
mov
into
or
dec
mov
jns
push
inc
and
sub
dec
popa
push
dec
sbb
dec
inc
cli
cld
pushf
push
in
xchg
cwtl
add
xchg
stos
rorl
pop
data16
cwtl
jl
push
sub
adc
scas
xor
in
dec
jecxz
ffreep
addr16
cmp
fldt
cmp
loope
cmp
push
jae
and
dec
jl
adc
dec
fcmovnbe
add
push
fadds
mov
gs
js
fwait
xor
mov
rorb
addr16
add
xchg
addr16
lods
push
mov
xor
loope
dec
mov
or
dec
mov
test
scas
jmp
loope
pop
andl
faddl
push
mov
sub
aas
push
pop
test
imul
sbb
sbb
mov
or
scas
cmp
xchg
inc
fcoml
sbb
movsb
je
loopne
out
pop
shlb
jb
lods
add
pop
fsubp
shrb
cmpsl
cli
mov
sti
stos
mov
fadds
ret
loope,pn
xchg
inc
mov
mov
inc
jl
xor
lret
cmpsb
in
xor
push
add
xchg
imul
cli
mov
adc
fwait
addl
in
mov
dec
in
imul
pop
mov
out
dec
push
xchg
mov
push
pop
cmp
lcall
fcomps
or
in
and
loope,pt
mov
adc
add
xor
pop
lcall
mov
mov
leave
ret
dec
xchg
ljmp
xor
mov
ret
mov
inc
and
fists
rcr
cwtl
data16
pop
lods
cmp
inc
cmpsl
aam
xchg
int
and
or
adc
jae
pop
jno
dec
and
mov
stc
rcrb
repz
push
sub
cmp
mov
inc
pop
mov
jle
shrb
shl
jle
sbb
les
mov
sub
lock
mov
stc
mov
inc
loope
xchg
pop
sbb
lcall
mov
mov
cmp
and
adc
add
cmp
xor
fcmovbe
scas
cmpw
mov
cmp
out
xor
inc
push
test
jmp
sbb
mov
repz
cmpl
gs
adc
cmp
stos
adc
dec
mov
xchg
add
fiaddl
and
jg
ja,pt
mov
and
mov
sub
mov
or
lods
add
push
jbe
stc
cld
jnp
xchg
movsb
pop
pop
ds
out
add
mov
fcomps
js
out
and
sbb
inc
xchg
inc
in
loopne
int
dec
shlb
mov
leave
testb
pop
rolb
and
mov
xchg
xchg
popf
dec
inc
jne
es
jne
ds
mov
pushf
jb
xor
repnz
lret
es
in
cmpsl
in
push
data16
psrlw
nop
inc
xorl
jbe
idivb
push
cmp
loope
xchg
dec
mov
cmp
sub
movsl
mov
int3
loop
jb
xchg
and
dec
cmp
mov
pop
cmpsb
daa
push
push
jbe
outsl
or
call
and
dec
or
insl
enter
enter
sbb
test
push
mov
cld
adc
sbb
sti
pop
jle
inc
cmp
ljmp
adc
mov
loope
fistpl
pop
push
sbb
shrl
xchg
addr16
xchg
in
movsb
mov
int3
xchg
orl
add
add
int3
repz
mov
sub
cmpsb
and
cmp
aam
lods
addr16
push
inc
std
leave
jne
pop
add
or
push
and
inc
jo
dec
adc
cmp
sbb
pop
push
lock
pop
mov
ret
xor
push
jae,pt
jns
addr16
das
es
mov
ja
in
pop
sub
pop
arpl
addr16
lcall
mov
inc
insl
push
arpl
cmp
popf
xor
pop
inc
and
lods
or
stos
jecxz
divb
shr
subl
cmp
gs
dec
dec
dec
cltd
fucomp
loop
push
inc
scas
inc
mov
bnd
mov
inc
jb
into
push
jg
repz
std
xor
cmp
mov
mov
or
and
cmp
inc
jle
shlb
mov
xor
adc
jb
pop
and
lds
shll
adc
adc
cmp
mov
in
rcl
sbb
cmpsb
data16
xor
shufps
push
xlat
lret
jmp
and
imul
int3
dec
mov
mov
fisubrs
inc
or
push
aad
jo
lock
xor
xchg
cmp
mov
adc
lea
mov
fidivrl
adc
fisttpll
inc
sbb
or
mov
or
dec
cwtl
adc
aam
mov
jle
subl
aaa
adc
imul
jns
sub
in
ret
push
leave
dec
adc
and
pop
out
pop
aam
dec
or
test
or
out
fimuls
jnp
xchg
push
iret
adc
hlt
sub
sbb
adc
dec
ss
mov
push
xor
or
out
and
cmp
pop
sub
ds
loope
push
xchg
jne
lcall
adc
push
sub
jo
scas
sbb
mov
sub
lret
cmp
fs
push
mov
ret
inc
fcomip
jecxz
scas
in
shrb
push
cmpsb
das
ret
push
mov
addr16
orl
enter
push
fisubrs
addr16
popa
mov
movsl
outsl
push
insl
push
fdivrs
add
lea
inc
gs
pop
push
movsl
xchg
fidivrs
in
sub
icebp
inc
jns
fadds
pop
pop
add
and
dec
leave
sub
add
push
loop
hlt
pop
aam
filds
dec
int3
dec
jo
adc
dec
out
jmp
adc
mov
in
sub
push
push
shll
aas
fwait
pop
or
movsl
test
lahf
cmp
ds
jbe
hlt
sbb
push
rcll
clc
stc
pop
fistps
add
mov
xchg
or
and
xchg
outsl
jl
and
jbe
and
lret
sub
mov
ljmp
xor
xchg
stos
stos
mov
sbb
bound
pop
add
test
mov
add
push
imul
adc
loopne
inc
mov
fisubs
mov
xchg
pusha
dec
inc
and
lret
repnz
leave
jmp
int3
test
adc
into
je
push
and
repnz
dec
mov
or
or
lods
out
and
lcall
ret
add
int
ljmp
cmc
ficoml
or
xor
std
sub
mov
insl
rcrb
repz
mov
dec
dec
mov
test
adc
imul
adc
dec
rorb
pop
adc
das
and
xchg
xor
adc
clc
imul
pxor
pop
mov
leave
mov
in
and
aam
pop
cld
aad
jb
aam
fcomps
cltd
xlat
lods
fildll
test
inc
in
xchg
push
fwait
pop
les
stc
push
xchg
loopne
cs
adc
in
lret
xchg
loopne
xchg
and
icebp
clc
dec
adc
or
push
dec
rolb
xor
popf
out
cmp
mov
add
xchg
out
lret
mov
arpl
jnp
daa
sbb
insl
dec
add
cs
cltd
jb
call
dec
dec
ja
dec
loope
push
insb
jbe
pop
mov
notb
bound
mov
sbb
pop
push
xchg
std
test
adc
movsb
ret
call
adc
pop
nop
xchg
push
lock
repz
cltd
mov
xchg
lea
mov
and
sbb
dec
fcom
int
in
pop
loop
cmp
jns
roll
lods
adc
sub
inc
lods
mov
cld
push
mov
inc
mov
mov
cmc
fwait
div
cmp
lahf
call
sub
jmp
loopne
dec
fistpl
jle
xor
insl
dec
es
ret
cwtl
and
and
add
fisubrs
and
shll
push
mov
jmp
sbb
pop
jle
jg
leave
ds
aam
jnp
ljmp
dec
cld
test
jne
fsts
cmp
ret
jp
push
sub
mov
adc
push
dec
je
or
pop
inc
sub
jg
push
sbb
jae
mov
clc
or
ljmp
test
sbb
and
bound
fistl
lret
call
rcl
jl
divl
iret
mov
inc
push
rolb
mov
add
jns
add
ljmp
mov
cli
shr
aad
dec
lret
jnp
les
cmovp
sar
popa
push
or
decl
ljmp
mov
aaa
je
dec
sub
xor
shlb
test
inc
fstpl
add
in
mov
sbbl
mov
int3
cwtl
inc
dec
cli
mov
sti
jg
jb
mov
cwtl
fbstp
scas
push
mov
sub
add
in
jmp
cs
sbb
xor
sbb
sub
mov
loope
daa
xlat
xor
sbb
fistps
gs
nop
pop
add
mov
stos
pop
or
mov
sub
and
nop
jl
cmp
les
push
adc
mov
dec
cld
inc
hlt
andl
xorb
sbb
adc
push
std
repz
hlt
ret
shrl
jno
arpl
pop
xchg
jmp
pop
xor
adc
inc
sbb
lahf
jl
out
outsl
mov
lret
test
add
pushf
dec
movsb
mov
mov
je
and
out
pop
xlat
cltd
in
or
subb
js
mov
xor
mov
push
fsubl
into
repz
fimuls
popa
outsb
jg
inc
mov
push
jecxz
cmpl
xor
mov
or
cld
loope
stos
xchg
adc
cmpb
stos
arpl
shlb
addb
xor
sub
xor
repnz
repz
jp
scas
js
sahf
fidivs
fwait
inc
insl
call
push
mov
pop
xchg
dec
mov
data16
aad
aaa
cwtl
pop
inc
in
cmp
andl
shlb
mov
xor
add
lea
lods
and
cld
sbb
fldt
inc
shr
movsb
mulb
rcrb
and
insb
mov
imul
and
cmp
les
sar
push
or
insl
outsb
lahf
leave
dec
mov
pop
out
lods
out
and
dec
or
inc
and
pop
mov
xchg
mov
std
test
andb
test
rcl
notb
dec
xor
pop
inc
mov
inc
add
adcl
xchg
inc
scas
cmc
cmpsb
daa
dec
and
sti
lahf
pop
bound
mov
add
mov
popa
dec
mov
ret
xchg
push
mov
add
pop
dec
repnz
in
dec
mov
inc
pop
in
xor
mov
in
addb
mov
adc
or
xor
jmp
pop
xchg
jecxz
xchg
lret
ja
jg
out
jecxz
arpl
shl
dec
or
adc
ss
orb
mov
loopne
test
mov
shrl
adc
dec
push
dec
xlat
fbld
xor
dec
or
and
loopne
incl
aam
scas
insb
xor
mov
loop
arpl
cmp
sbb
jmp
mov
cmp
jno
movsb
popa
mov
adc
mov
sahf
les
jno
add
loop
outsb
xorl
sbb
imul
test
cmp
adc
jo
xor
pop
in
push
stos
mov
lcall
cmc
xor
jmp
jbe
mov
mov
pop
test
fstps
jns
clc
mov
fsubs
pop
mov
enter
jae
xor
push
repnz
push
ds
int
fimuls
cli
int
lar
xor
out
int
push
arpl
test
sbb
mov
sbb
dec
mov
dec
adc
or
outsl
sbb
lea
pop
out
clc
mov
sbb
jg
mov
xchg
xchg
rorl
add
adc
cwtl
pop
std
imul
lahf
scas
inc
roll
mov
dec
inc
fwait
nop
adc
dec
pop
sbb
movl
ljmp
mov
mov
sub
sahf
pop
or
adc
or
cmp
mov
cmc
jle
shlb
jnp
dec
push
lock
jg
jg
mov
out
and
les
pop
sbb
sbb
in
cmp
push
push
in
cld
xlat
cmp
cltd
adc
inc
jno
orl
xchg
fistl
insl
push
xor
outsb
add
xchg
lock
in
mov
pop
push
or
rorb
rorb
je,pt
push
out
rclb
sahf
rolb
cwtl
push
dec
push
jns
outsb
in
mov
dec
dec
test
sub
pop
mov
dec
std
add
push
pushf
inc
clc
arpl
and
adc
mov
sbb
iret
jge
xchg
rcl
fs
mov
xchg
inc
in
iret
nop
cmp
pop
scas
enter
dec
cmp
push
push
xor
in
mov
leave
inc
adc
lcall
fisttpl
push
pop
test
mov
rorb
mov
repnz
push
mov
push
xchg
out
insb
es
mov
inc
cmp
ljmp
mov
pop
dec
mull
mov
outsb
push
xlat
fldcw
mov
scas
push
xlat
xchg
mov
sbb
dec
xchg
icebp
mov
push
out
shr
and
push
fldl
cmp
and
xor
push
cmp
inc
std
mov
push
cmp
lret
stos
movsl
lods
pop
mov
pop
mov
lods
jbe
inc
stos
dec
mov
sbb
pop
inc
xlat
fcoms
loop
sub
xchg
shrb
or
pop
fimuls
or
and
mov
jp
test
enter
cmp
cmpsb
sbbl
and
or
cmpsb
dec
or
shll
add
jae
rorb
test
or
mov
loopne
icebp
pop
pop
imul
mov
fnstsw
into
inc
stos
mov
pop
jmp
mov
push
pop
shlb
daa
mov
pop
add
and
rcr
stos
mov
out
or
sbb
jnp
aam
fisubs
xchg
lahf
out
xor
push
inc
int3
in
in
inc
mov
cmp
xor
pushl
daa
pop
es
mov
jns
jecxz
test
aad
cltd
lret
imul
les
shll
and
pop
xchg
cmpsl
xchg
outsl
or
sub
punpcklwd
push
dec
out
sbbl
xor
mov
jnp
jnp
mov
xchg
jecxz
mov
push
movl
xchg
sbbl
nop
cmp
xor
cltd
scas
pushf
ja
das
jns
mov
push
inc
mov
fidivrs
out
xorl
rcrb
rolb
cmp
in
js
mov
ss
and
cmc
iret
insb
xor
je
xor
movl
xor
lods
xor
xchg
sahf
aas
inc
lahf
cld
sti
movsl
xchg
pop
test
xchg
mov
or
int
popf
mov
cmp
fnstenv
add
in
or
daa
mov
pushf
mov
add
imul
pop
mov
sub
ret
or
xchg
mov
xchg
push
jno
ret
cmp
imul
in
adc
lock
std
jb
xchg
dec
stos
or
fdivs
iret
cwtl
and
test
subb
rolb
dec
outsl
dec
push
das
inc
sub
sub
lock
mov
sar
and
pop
lock
xchg
lret
mov
inc
icebp
loop
inc
dec
mov
cmpsb
mov
dec
and
cmp
or
xchg
es
dec
scas
add
outsl
bswap
push
lcall
ret
mov
mov
or
cmp
inc
fsubr
in
lret
ror
int3
mov
push
xchg
stos
out
mov
out
lret
test
pop
test
xor
jge
mov
shr
shlb
adc
ret
push
aas
or
rol
in
leave
jo
ss
sub
into
xor
jg
popa
pop
lret
inc
sub
outsb
in
dec
aad
adc
jg
jmp
cs
jmp
jg
pop
cmpsb
shll
or
ret
jbe
cltd
or
add
arpl
outsl
push
mov
scas
or
cld
iret
bound
ja
or
dec
ss
loope
mov
pop
imul
dec
lcall
add
test
push
outsb
cmovo
adcb
faddp
je
mov
mov
sti
mov
push
or
xchg
pminub
into
mov
iret
inc
lock
and
cmp
xor
fcomps
xor
stc
outsl
fwait
std
test
push
rolb
jo
pushl
lahf
xchg
leave
outsl
xchg
jae
pop
out
cmp
scas
push
mov
cs
dec
aad
insb
lods
stos
jae
les
dec
cmp
jecxz
repz
sbb
or
or
test
sub
call
mov
arpl
xor
jmp
hlt
aas
inc
jmp
aam
fsubrs
aam
mov
push
pop
nop
xchg
cs
mov
mov
xor
mov
andl
and
mov
stc
inc
testl
cmp
mov
mov
add
pop
in
add
push
xchg
std
mov
icebp
pushf
lods
clc
push
test
adc
pop
ja
mov
inc
add
in
dec
shrb
ffreep
cmp
addb
into
int
mov
push
aas
lds
stos
cmc
and
inc
in
push
ret
xor
shll
xor
push
inc
mov
sub
mov
lds
daa
lret
lea
movl
xrelease
lds
insb
jae
ds
cwtl
xchg
mov
ja
xchg
sub
loop
xchg
or
pop
push
dec
movsb
arpl
pop
scas
jbe
inc
lret
stos
inc
leave
jge
fimull
pop
repz
pushf
dec
stos
xor
aad
mov
pop
pop
jl
sub
cmp
and
cmp
incl
add
push
mov
mov
or
es
inc
pop
push
sahf
sbbb
sub
shrl
xor
xor
out
cmp
sub
xor
xchg
mov
cmp
lock
lock
out
sub
jno
adc
and
leave
xchg
sarb
insl
push
and
insl
xchg
xchg
mov
sub
in
ffreep
mov
mov
daa
aad
insl
mov
or
xchg
fdivl
ss
inc
mov
sbb
mov
dec
andl
lea
mov
fisttpll
mov
lcall
ljmp
cmp
enter
mov
fsubr
sbb
mov
lds
mov
mov
inc
dec
jns
pop
push
inc
pushf
nop
out
test
es
test
lcall
adc
push
dec
lock
sub
add
push
cmp
aaa
cmpsl
inc
outsl
push
icebp
cmpsl
fstpl
cld
rcrl
add
movsb
outsl
inc
daa
jl
sbb
adcl
mov
aad
add
add
mov
inc
mov
sbb
xor
shll
xor
pop
xor
xor
ror
ja
mov
pop
sub
into
imul
insl
nop
mov
andb
dec
mov
mov
pop
addr16
jae
and
sarl
or
hlt
data16
mov
cmp
adcb
adc
push
fst
shrb
push
jg
pop
jno
xorb
arpl
aas
add
vcvttpd2dqy
push
sbb
inc
lea
lods
xchg
ljmp
push
std
loopne
cmc
stc
hlt
mov
push
mov
or
lods
out
xchg
imul
fsubs
pushf
subl
es
add
xor
outsl
bound
insl
pop
loopne
aam
data16
rcl
stc
inc
std
or
out
or
add
lods
inc
out
push
xor
rorb
aas
and
push
jle
xor
mov
jbe
add
fiaddl
sub
ret
or
adc
lfs
add
daa
or
repz
pop
popa
gs
sahf
pop
or
jecxz
push
je
clc
ljmp
mov
inc
insb
mov
pop
movsb
and
push
push
adc
pusha
mov
and
push
xor
jmp
data16
mov
imul
test
add
push
xchg
sub
call
rcl
and
call
pop
ds
arpl
out
mov
pop
loop
sti
mov
mov
jle
imul
sub
js
ret
data16
gs
into
push
pop
or
cwtl
mov
and
push
and
sbb
hlt
ret
ja
sarb
inc
pop
pop
jbe
arpl
lods
jb
mov
add
movsl
mov
pop
add
adc
or
sub
ds
add
mov
pop
sub
shll
and
and
mov
fcom
pusha
lock
mov
mov
jmp
fmuls
incl
popf
and
dec
mov
cmpb
adc
mov
sti
pop
nop
lods
leave
jg
lds
ja
in
pop
push
or
fs
or
imul
dec
mulb
add
movlps
pop
add
add
adc
push
aas
int
ds
repz
lahf
add
or
cs
sbbb
mov
add
push
cld
push
pop
jbe
sub
push
out
sbb
mov
notb
mov
push
or
setne
jge
ss
sbb
add
pop
mov
mov
fsub
outsb
sub
mull
dec
lock
xchg
gs
das
adc
repnz
jnp
je
jno
push
inc
pop
jmp
hlt
sub
pop
idivl
ljmp
sub
jo
dec
sbb
mov
push
aad
and
jmp
lock
jns
jmp
dec
idivl
insb
and
xorb
and
cmc
lret
push
and
cmp
xchg
inc
and
into
shrb
adc
mov
xchg
pushf
lret
cmp
xor
sub
dec
mov
movsl
cmpsb
xor
test
pushf
scas
sbb
and
rcrb
or
inc
cmp
int3
cmc
sub
testb
sbb
rep
lods
jg
arpl
ja
hlt
into
mov
jp
sub
loopne
mov
call
cmp
add
inc
aad
gs
or
xor
out
inc
loope
pop
cmp
pop
pusha
int3
in
movsb
inc
or
push
loop
or
mov
push
jb
pushf
adc
leave
add
arpl
out
in
lahf
push
xor
scas
and
cli
outsb
lret
movsl
sub
das
jl
fsubrl
jno
mov
sbb
mov
adc
xchg
xor
nop
hlt
sub
popa
inc
mov
mov
ljmp
mov
inc
jno
lahf
cmp
insl
dec
data16
push
or
mov
fildl
mov
out
push
inc
test
push
or
repnz
push
mov
lret
pushf
std
dec
cmp
gs
sub
add
xchg
xchg
shl
push
add
repnz
or
dec
pop
cmp
fistps
dec
mov
pop
in
xchg
xchg
xchg
jnp
sbb
movsb
fmull
daa
out
leave
icebp
lods
jo
sbb
xor
sbb
imul
test
inc
iret
fnsave
std
mov
test
adc
movsb
xor
xor
rcrl
faddl
orl
sbb
pop
test
cwtl
fistl
sbb
push
adc
mov
cmp
movsl
call
add
xchg
pinsrw
sti
push
cmp
xchg
icebp
jmp
xor
test
pop
xchg
mov
inc
inc
jle
add
mov
inc
dec
shl
stos
push
fwait
jg
mov
add
xor
inc
fistps
repz
push
loop
push
sub
sub
stos
or
sub
data16
pop
mov
xor
stos
xchg
loopne
int3
jbe
mov
or
jp,pt
addl
cmpsl
retw
cmpsb
push
adc
mov
out
mov
cltd
stos
push
arpl
out
dec
sbb
mov
mov
movsl
test
pusha
add
inc
inc
iret
adcl
add
sub
mov
jmp
pop
imul
movhps
cmp
jns
pusha
in
add
mov
dec
sub
out
mov
popa
add
mov
push
lret
pop
std
notl
cli
pop
aam
xchg
adc
daa
mov
scas
mov
jle
insb
inc
outsb
and
mov
inc
hlt
xchg
ret
cltd
fwait
out
push
cmp
add
inc
aaa
mov
adc
mov
and
adc
adc
dec
pop
sahf
xchg
push
loop
push
or
jb
int
and
movsb
lds
add
jge
nop
outsb
loop
pop
push
and
sub
nop
cmc
pop
out
outsb
shll
decl
mov
jae
mov
pop
into
ficomps
inc
fdivp
aam
jo
scas
addr16
mov
xchg
aaa
push
push
lret
xchg
gs
push
add
cmp
jp
fstpl
mov
sub
out
mov
xchg
repz
xlat
addr16
ret
lahf
add
adc
pop
out
mov
xor
outsb
aad
mov
cmpsb
cltd
sahf
cmp
stc
dec
mov
inc
sub
arpl
hlt
mov
adc
out
adc
sbb
mov
jp
mov
shlb
fldcw
bound
ljmp
hlt
or
out
sarb
dec
les
mov
xchg
insb
lock
cmp
or
cwtl
xor
mov
mov
mov
sub
xor
jp
rcl
stc
lds
adc
and
adc
pusha
add
fwait
jne
push
cmc
and
xor
fiaddl
ret
ret
cmpsb
or
adc
fidivl
mov
adc
cltd
mov
data16
dec
ljmp
outsl
loop
xor
arpl
mov
adc
leave
inc
fs
pop
jae
mov
jecxz,pt
cmp
fwait
stos
dec
daa
xor
das
pop
lods
scas
test
xchg
scas
xor
movsl
mov
jbe
and
std
sti
sahf
fs
popf
sbb
movsl
ss
test
sub
divl
inc
lcall
popf
add
inc
repnz
icebp
add
xor
int
push
in
fsubr
std
jg
mov
mov
fucom
mov
pop
pop
adc
stos
lods
add
mov
xchg
int
jns
fcomps
icebp
inc
cmpb
cmp
movsl
loope
mov
data16
leave
xlat
push
jae
dec
and
xchg
sbb
lret
or
add
clc
dec
dec
decb
fcoml
shll
push
sub
jl
movl
outsl
das
jbe
mov
roll
add
pop
push
push
xor
adc
dec
dec
push
aas
mov
pop
push
in
leave
in
cltd
xchg
mov
mov
aas
push
sbb
sub
arpl
jo
in
pop
mov
lock
stos
pop
fwait
sbb
andl
cmp
mov
cmovo
lock
orl
inc
adc
sub
iret
in
mov
inc
mov
and
sub
movsl
jp
daa
in
mov
mov
in
arpl
fcoms
ja
mov
int
mov
movsl
rclb
jbe
xor
mov
pop
negl
adc
mov
in
mov
mov
push
mov
incl
icebp
sbbb
les
mov
pop
mov
out
daa
fs
das
adc
mov
js
and
adc
cmp
fs
mov
sub
mov
pop
pop
pop
mov
push
dec
adcl
outsb
jg
insl
push
outsb
lods
ret
pop
sbb
mov
arpl
or
or
and
hlt
dec
cld
dec
jne
data16
sbb
lock
push
imul
cld
push
nop
mov
xor
arpl
in
add
testb
or
sub
dec
stos
in
dec
pop
add
lods
pushf
mov
and
das
inc
stos
inc
data16
aas
cmp
andb
data16
and
lcall
xchg
mov
jge
cmpsl
jns
fwait
jge
lods
insl
popf
dec
push
and
aam
test
bound
mov
xor
sbb
adc
jge
loope
sbb
outsl
pop
fs
sub
iret
and
mov
ljmp
push
mov
leave
sti
fdivl
adc
mov
cmp
lret
inc
and
pop
xchg
into
cmp
lcall
lds
int3
mull
cli
lds
popa
add
imul
imull
imul
pop
fdivp
and
sarl
lods
sub
icebp
adc
pop
decb
cmp
sub
cmp
dec
sti
loop
in
roll
mov
jno
cmpl
aam
cmp
mov
sbb
ja
push
cmpsb
mov
mov
cltd
xchg
mov
pop
adc
lock
out
xchg
xchg
xor
lcall
cmp
jl
push
dec
loope
in
xchg
int3
adc
fiadds
fstpl
adc
mov
imul
push
push
fsub
mov
in
jge
xor
adc
cld
sub
jge
push
outsb
mov
jmp
sahf
mov
cmc
in
dec
data16
or
sarl
out
and
cmpsl
pusha
xor
in
cmpb
add
std
lods
jb
dec
or
xchg
inc
jbe
adc
testl
add
gs
sub
movsbl
xchg
test
hlt
and
sub
lahf
xchg
andl
movsb
sub
lods
xchg
dec
jae
cmpsl
push
popf
sub
and
fdivr
jle
cmpsb
hlt
add
add
pusha
stc
mov
push
sub
call
adc
pop
mov
cmp
add
pushf
sub
jnp
mov
into
mov
sbb
insb
sahf
push
xchg
jge
adc
mov
cltd
pop
popa
mov
cwtl
lds
ljmp
stos
arpl
mov
test
pop
sub
sbb
push
mov
dec
mov
fisttpl
out
jno
xor
fisubl
mov
aas
cmp
dec
aaa
or
in
jge
cmp
in
or
aad
sbb
or
lock
adc
clc
xchg
dec
push
pop
cmp
jg
cld
leave
pop
xor
ret
stos
movsl
inc
ljmp
push
stc
movsb
xchg
jmp
shrl
push
mov
call
loope
mov
subl
add
push
sti
xchg
adc
cltd
divb
iret
dec
fldl
jmp
xor
mov
push
add
xchg
jno
repz
xchg
stc
sub
cwtl
out
aam
sbb
lahf
xor
loop
xor
adc
movsb
jmp
push
mov
imul
fdivs
pop
repz
in
int3
aam
and
ja
faddp
fldcw
and
ds
lods
lods
daa
jno
shll
xor
das
les
jne
dec
mov
push
mul
inc
sar
mov
in
addb
pop
cmpsl
mov
lods
data16
in
push
iret
xor
or
sbb
adc
stc
jle
lret
mov
xor
arpl
cmp
add
inc
insb
mov
cmpl
aad
pop
popa
mov
xchg
xlat
loope
lods
pop
sti
cwtl
mov
jb
js
fadds
imul
and
js
mov
cld
adcb
pusha
mov
cmp
push
dec
stc
mov
jne
out
add
fidivl
mov
sub
rcr
xlat
jg
mov
pop
dec
mov
or
jecxz
lret
mov
add
push
mov
cld
ss
fmuls
aad
addr16
push
stc
sub
vdivpd
cmp
mov
test
sarb
insb
lret
inc
push
and
xchg
or
andl
mov
hlt
lock
jo
ss
xchg
lcall
mov
dec
inc
loop
mov
push
and
les
aas
fnstcw
push
cmp
sub
cmp
shrb
jb
mov
dec
mul
les
bswap
jbe
test
xlat
enter
cmp
js
scas
rcrl
xlat
in
dec
dec
lea
cs
dec
aas
mov
outsb
mov
push
sahf
jno
insb
shll
repz
sub
jo
inc
inc
mov
imul
jnp
js
test
ret
sbb
cli
icebp
xchg
jl
insl
xchg
popa
xchg
ds
sub
rolb
in
test
out
xchg
das
mov
jne
test
mov
push
mov
js
enter
cmp
xchg
flds
lret
int
sbb
sub
xchg
sbb
lcall
sbb
add
cmpsl
mov
test
out
ret
outsl
cmp
pop
jg
je
pop
mov
rorb
mov
in
inc
std
cltd
mov
push
rcrb
sbb
cmp
test
lret
add
fwait
dec
xchg
mov
enter
adc
ds
iret
jl
ja
ljmp
mov
xchg
push
in
pop
in
test
dec
push
mov
xlat
dec
cwtl
ficompl
in
dec
aas
mov
jbe
adc
in
movsb
shl
fistpll
in
xchg
mov
bound
orb
xchg
jo
sub
in
jbe
movsl
test
in
shll
ds
fadd
fisubrl
push
lock
jnp
inc
enter
js
gs
in
jns
xchg
outsb
sbb
mov
mov
push
les
push
add
fsub
cmc
rcr
mov
fs
ljmp
mov
cmovb
hlt
rolb
cs
add
pop
sti
nop
mov
addr16
sbb
sbb
inc
add
inc
shll
cmc
sub
into
inc
ljmp
arpl
xchg
sub
pop
mov
jp
push
mov
aaa
arpl
divb
dec
or
and
pop
jae
mov
test
xor
pop
push
adc
ja
nop
test
pop
stos
mov
popf
test
adc
fistpl
adc
mov
sub
push
in
fists
pop
mov
adc
xchg
fsubr
mov
pop
repz
adc
xor
or
aam
outsb
xor
add
pop
ss
xchg
ss
push
push
incb
mov
ja
push
jecxz
and
and
inc
mov
mov
push
cmp
or
sub
pop
fistps
and
fcoml
dec
lahf
xchg
and
inc
xchg
add
mov
in
sub
test
inc
lahf
xchg
icebp
sub
sub
stos
pop
xchg
sbb
fdivr
xchg
sarb
jp
insb
dec
data16
sahf
mov
jmp
orb
cld
subb
and
sbbl
neg
roll
pop
mov
fs
inc
hlt
outsl
xor
jge
xor
std
adc
ja
xor
sub
and
ret
int
add
test
mov
movsb
xor
xchg
popa
sub
add
mov
test
mov
sti
shll
lcall
add
pop
adc
push
in
mov
xchg
stos
out
ljmp
sub
int3
xchg
xor
in
mov
jne
jmp
add
or
and
cmp
jmp
stos
ret
push
data16
decl
cmp
rcr
nop
inc
jno
ficoms
insb
adc
testl
lret
and
xchg
stos
push
fldt
cmp
cmp
loopne
repnz
shrb
sbb
or
xchg
sbb
cwtl
cmp
mov
in
sub
mov
inc
mov
jnp
mov
jbe
sbb
incl
xor
dec
dec
jno
cwtl
mov
jnp
ss
daa
sub
sbb
roll
sub
mov
les
imul
and
add
xchg
call
or
insb
adc
subl
pop
pop
cs
fistps
loope
pop
das
xchg
xor
ror
stc
shl
fs
mov
or
sbb
pop
mov
fiaddl
int
add
sarl
mov
fmulp
sub
enter
jge
push
xchg
andb
icebp
or
jb
js
and
push
and
in
pop
xchg
adc
inc
xchg
into
test
leave
mov
cmp
jmp
sub
cmp
aas
mov
ljmp
mov
xchg
movsb
adcb
out
ss
add
movsl
pop
dec
flds
adc
pop
dec
leave
push
push
repnz
push
lret
cmp
push
mov
out
scas
jbe
pop
jne
xchg
sub
dec
mov
xchg
sbb
lock
pop
cmpsl
icebp
push
cmp
mov
add
aas
movsb
into
lods
add
fdivp
bound
pop
xchg
cwtl
jae
imul
rep
and
xor
ds
xchg
mov
push
dec
and
push
adc
push
push
fidivrs
xor
dec
cmp
pop
bound
sub
xchg
icebp
nop
mov
pop
jecxz
pop
xlat
int
sub
mov
lods
or
add
pop
in
jae
jo
jne
fidivrl
scas
scas
fwait
scas
mov
or
mov
outsl
test
rorl
cli
pop
and
mov
add
xchg
arpl
xchg
lret
inc
jg
inc
imul
adc
mov
push
loope
test
push
sbb
stc
rcr
xor
jbe
xchg
stos
xchg
push
lret
rdtsc
call
cltd
xchg
add
sarb
mov
clc
sti
test
push
dec
and
push
inc
push
enter
aam
inc
lahf
fisubl
add
xor
movsl
dec
mov
test
rorb
cmpl
sarl
add
jle
ja
in
cli
jg
cmc
adc
ss
push
mov
ret
test
pop
rcrb
cmp
in
xchg
xor
mov
and
mov
pop
call
insl
mov
cmc
sub
lahf
pop
jmp
jg
mov
jp
mov
fnstcw
inc
cld
mov
movsl
mov
mov
add
inc
fisubrs
push
mov
adc
push
xchg
xchg
dec
pop
movsb
stc
loopne
aad
add
mov
mov
roll
and
mov
test
mov
and
test
repnz
jge
add
fwait
push
sub
push
jb
sbb
sub
and
loopne
xchg
cmpsl
ja
mov
mov
fdivs
push
sub
icebp
jbe
adc
pop
bound
ja
scas
popa
adc
out
repz
stc
inc
icebp
sbb
mov
sarl
leave
pop
sub
xchg
out
dec
fimuls
into
cmp
jne
clc
mov
inc
xchg
pop
sub
pushf
cmp
sub
xor
and
ja
call
lret
mov
into
dec
push
aam
lds
jne
das
sub
stc
and
xchg
mov
imul
ljmp
ds
test
movaps
jl
into
aaa
sbb
mov
adc
out
mov
sub
mov
xchg
cmp
jne
add
dec
pop
enter
popa
xlat
sub
outsb
push
pusha
adc
int
adc
outsb
shrl
xor
in
jns
shlb
scas
gs
xor
cs
or
jno
push
adc
in
jne
stc
xchg
jns
xlat
hlt
mov
outsb
cwtl
mov
mov
decl
push
sti
clc
jb
lds
adc
lds
inc
cwtl
inc
stos
insb
cmp
sbb
testb
cmp
add
sbbb
out
sbb
insl
repz
cmc
call
rolb
std
pop
out
adc
dec
xor
call
sti
sbb
fadds
pop
into
mov
xchg
lret
cmp
mov
dec
mov
scas
cltd
cmp
or
shlb
data16
xor
xor
adcl
pop
xor
and
outsl
lods
cmc
fstps
xor
add
fisttpl
cmc
fbld
test
icebp
push
in
sub
inc
jnp
loopne
ja
test
shlb
xor
pop
sbb
jecxz
dec
dec
addr16
mov
jmp
xor
ud1
add
xor
mov
aad
out
push
cld
hlt
imul
loope
lret
std
jecxz
pop
pop
fcomps
addr16
jo
cmp
stos
fwait
aas
xchg
outsb
cmp
sti
cmp
jmp
push
jo
inc
pop
xor
mov
adc
mov
jns
sbb
addr16
pop
fs
xchg
stos
mov
xchg
push
xchg
mov
lea
pop
cmp
stos
or
pop
aad
cmc
sub
xor
addb
or
pusha
mov
push
ret
sub
xor
incb
in
outsl
or
repz
test
push
xchg
negl
repz
fs
inc
mov
push
or
ja
pop
scas
inc
sarl
adc
imul
out
in
test
cmp
mov
mov
imul
in
testl
pop
ret
mov
scas
push
imul
jo
cmp
cmpsl
dec
lods
cmp
jp
cmp
in
fdivrs
pop
add
std
sbb
out
jb
out
and
mov
aaa
jne
clc
pop
sub
and
sbb
mov
jmp
fidivrl
sahf
xchg
push
fimull
roll
dec
dec
pop
cld
sbb
scas
out
lahf
nop
inc
mov
push
pop
add
or
mov
lahf
push
push
inc
in
cwtl
sub
or
mov
mov
arpl
jae
lods
mov
je
inc
cwtl
jmp
stc
sarb
and
sbb
cmp
sbb
ljmp
fcompl
sbb
or
int3
into
insl
mov
xchg
mov
cmovnp
flds
nop
push
sbb
xchg
nop
pop
rolb
cmp
sbb
or
sbb
mov
sbb
sub
and
push
jo
push
hlt
mov
mov
push
jno
lea
push
testb
add
adc
mov
push
push
test
enter
repnz
dec
js
int3
dec
add
jl
mov
pop
les
cli
xor
cltd
jl
jle
xor
pop
or
push
jmp
mov
inc
jno
outsl
pop
xchg
add
test
lds
dec
mov
jg
xlat
push
inc
inc
test
ret
jns
add
mov
sub
scas
std
lock
push
movsl
mov
ret
lods
jo
xchg
iret
push
mov
push
inc
add
mov
jecxz
ja
das
mov
push
jns
iret
cmpl
nop
mov
sbb
lcall
mov
int3
sub
fstpl
adc
ja
mov
imul
add
sbb
add
xchg
push
mov
lods
jge
jbe
andl
pop
int
push
les
rcrl
xlat
fmul
insl
push
in
and
sar
nop
mov
cmpsl
rorl
push
cs
add
ljmp
mov
sbb
int3
xor
loopne
xchg
and
aaa
inc
rcl
inc
cmp
dec
vmread
aas
push
in
hlt
push
jp
xor
inc
mov
pop
ja
xchg
iret
mov
icebp
ja
xor
cld
pop
xor
push
pop
je
pop
int
inc
adc
bound
or
imul
pushf
jb
fnsave
jecxz
mov
jl
mov
flds
cmp
push
inc
sub
ret
jecxz
sbb
fs
inc
mov
je
cltd
dec
mov
cmp
fistpll
imul
stos
push
fadd
jns
add
push
dec
xchg
mov
inc
lahf
rolb
dec
adc
xor
inc
divb
arpl
in
ja
and
arpl
imul
inc
cmp
lds
sbb
push
jno
sbb
pop
sub
lods
adc
dec
and
sbb
insb
pop
mov
xchg
push
arpl
inc
add
popf
aas
movsb
mov
jb
pop
add
aas
int3
xchg
outsw
cmpsl
lret
sub
and
pop
mov
mov
dec
inc
cwtl
cmp
bndldx
lea
ljmp
aam
movsb
sub
sbbb
xchg
xchg
inc
pop
mov
add
inc
negl
frstor
loop
mov
mov
int
hlt
repnz
xchg
rcrl
push
call
in
loopne
jae
mov
push
lock
add
in
call
movsb
test
ljmp
cmp
jg
aad
mov
iret
sub
pop
xor
rolb
lret
loop
adc
arpl
xchg
push
mov
repz
cwtl
js
ret
shlb
xchg
hlt
fisubrs
jp
jnp
dec
loope
jmp
imul
xchg
js
icebp
insb
xor
mov
pop
jl
mov
cmp
pop
jl
mov
and
and
icebp
dec
and
xor
mov
ret
cmp
mov
xor
je
mov
or
rorl
pop
pop
out
pop
and
dec
stos
push
adc
call
push
add
sub
divps
add
outsb
add
std
add
bound
xorl
xchg
out
push
cmpsl
and
xlat
movsb
cmpsb
pop
test
icebp
mov
jl
stos
lret
mov
movsb
add
sar
mov
mov
cwtl
out
push
xor
ret
jl
fwait
les
jle
mov
les
mov
scas
jecxz
cmc
call
xor
bound
je
cld
xor
inc
add
add
jb
jp
or
int3
mov
dec
adc
call
pop
add
mov
sub
inc
xchg
sarb
xchg
jmp
pop
cmc
hlt
adcl
push
fstpl
xlat
pushf
sub
jae
dec
imul
data16
shrb
fs
cli
mov
shrb
jae
mov
or
lret
jnp
mov
sbb
rcrl
js
push
mov
or
mov
xor
sub
sarb
fisttpll
adcb
xchg
je
mov
xchg
cld
sub
pop
out
mov
fdivl
cli
cli
lret
outsl
sub
movsl
and
aam
push
inc
sti
and
scas
andb
xchg
mov
xorb
jge
mov
mov
mov
push
subb
xlat
xchg
out
out
sub
ret
mov
repz
ret
stc
push
jmp
jno
cmp
outsb
test
jecxz
mov
mov
xor
pushf
sbb
adc
mov
les
mov
pop
into
lret
test
xor
xlat
and
jnp
fistps
xor
ret
out
inc
fnsave
xchg
sub
jl
push
test
nop
jmp
dec
cmpsb
cmp
and
jns
pop
push
sub
subl
or
or
sahf
scas
push
jbe
mov
push
mov
adc
add
cmp
icebp
mov
adc
cmp
stos
xor
sarb
and
mov
xor
jae
lea
popf
add
inc
lds
cmpsb
push
js
cltd
mov
cmp
ficoml
jl
insl
movsl
fidivl
fsubp
leave
jp
sub
push
jno
xor
add
jecxz
push
mov
leave
jo
das
and
cwtl
xor
shl
das
pop
push
cli
mov
js
mov
clc
mov
and
mov
loope
aam
jnp
sbb
je
pop
loop
les
pop
jb
ret
push
test
movsl
repz
jmp
mov
pop
js
jno
imulb
push
imul
data16
les
shrb
mov
pop
push
xchg
jl
jnp
pusha
das
jl
fwait
mov
and
jge
sbbl
aam
inc
mov
mov
inc
bound
pop
cwtl
outsw
sbb
lock
and
jae
jecxz
jg
or
jp
cmc
adc
fwait
add
jbe
cmp
sub
mov
jno
mov
test
add
ret
repz
cmp
inc
or
pushw
lds
into
insb
xchg
mov
add
mov
rcl
shll
mov
push
addb
faddl
fmull
push
int3
in
data16
imul
ds
pop
ss
push
mov
fucomi
jg
lods
add
push
in
cmp
xchg
rolb
cli
lcall
stc
push
pop
add
xchg
xor
xor
jecxz
mov
xchg
mov
and
mov
scas
orb
or
xor
mov
movsb
aad
pusha
sub
mov
es
adc
dec
add
inc
xlat
out
jae
push
gs
int
in
pop
push
rcrb
mov
popa
xchg
pop
push
imul
adc
xor
xchg
sbb
shlb
push
and
loope
scas
mov
movsl
sahf
dec
cmp
mov
add
dec
cmpb
lret
insl
lret
cli
jp
mov
inc
jo
adc
out
sbb
fs
rcll
push
ljmp
inc
sbb
std
lods
pop
clc
clc
add
movb
mov
sbb
adcb
sahf
jne
sbb
mov
and
xor
push
loopne
std
rcr
arpl
cmpb
andl
sub
fwait
roll
ret
pop
outsl
cmp
hlt
lret
jbe
fwait
add
mov
aam
outsb
aas
jmp
rclb
fsubrs
data16
jne
pop
xchg
jae
filds
xchg
pushf
add
add
daa
mov
jmp
lcall
sbb
sbb
jno
lods
sub
cmp
int3
add
je
xchg
repnz
jno
or
fstps
scas
mov
cli
lret
mov
mov
test
jmp
and
lods
mov
xchg
fcmovnb
movsb
pop
jns
inc
out
mov
mov
pop
dec
loopne
pushf
ficompl
cmp
decb
jecxz
fstpl
pop
int3
das
insb
not
push
or
enter
mov
jns
popa
das
inc
cli
shlb
cmpsb
fcmove
xchg
scas
hlt
mov
push
jb
cwtl
decl
insl
pop
incl
push
jle
jp
mov
push
clc
bound
shlb
je
inc
sti
repz
xor
mov
insl
lods
lds
cmpsb
icebp
fwait
dec
daa
gs
ss
dec
jo
fstl
mov
mov
mov
add
xchg
jp
or
enter
cltd
bound
cltd
push
and
add
test
inc
and
pop
cli
scas
mov
jo
sbb
push
imul
dec
pop
je
insb
push
cld
sub
je
or
and
aam
xchg
jnp
cmp
push
addl
pop
popa
jb
clc
mov
test
jmp
push
test
sub
lret
mov
in
in
addb
mov
xchg
jmp
ror
xor
inc
sti
adc
xor
arpl
mov
mov
lds
pop
dec
mov
jecxz
lock
leave
pop
push
test
jg
out
or
bound
xchg
ret
mov
lcall
roll
ja
mov
cmp
mov
mov
add
xchg
pop
or
mov
ljmp
xchg
hlt
add
fstl
movq
dec
inc
cmp
cmp
mov
lret
adc
in
ja
leave
pop
mov
aaa
lea
cmp
add
push
push
int3
pop
jbe
fistl
repz
inc
pop
mov
int3
mov
cmp
js
leave
push
sub
ffreep
aam
outsl
pop
lcall
test
pop
pop
cmpsl
out
push
jmp
lcall
ljmp
sbb
je
insl
jo
xchg
cmp
dec
or
mov
arpl
push
pop
dec
stos
mov
fs
daa
cmp
mov
dec
ljmp
pop
icebp
mov
or
lret
popl
loopne
xchg
je
mov
icebp
xor
cmp
ret
ficomps
inc
lahf
lahf
mov
loope
pop
rcrl
push
and
adc
sub
jl
or
loop
lcall
cld
nop
cli
cmp
aad
enter
xchg
push
rcll
js
push
sbb
jo
xlat
and
call
hlt
aas
xchg
cmp
pop
add
fs
fcmovb
aam
lret
es
in
test
adc
insl
lcall
movsl
pop
cmpsb
or
outsb
neg
rcll
xchg
int3
mov
xor
ss
rorl
fiaddl
and
ss
repz
xor
mov
cld
mov
pop
push
scas
shll
mov
arpl
inc
sub
sub
lret
stos
bound
arpl
pop
mov
push
aam
mov
iret
dec
jmp
dec
loop
int
out
lret
jb
pushf
sbb
mov
mov
addl
dec
xchg
outsb
jp
mov
int3
inc
jle
popf
fs
mov
mov
bound
and
lcall
mov
pusha
xchg
sbb
mov
adc
sbb
cmpsb
inc
jmp
cmpsb
add
aam
gs
fs
movsb
test
xchg
mov
mov
inc
cmpsb
pop
cs
sar
xor
imul
push
xor
push
aam
icebp
xor
xlat
insl
add
insb
imul
in
adc
outsb
and
sbb
out
dec
fs
inc
stos
push
mov
and
or
shlb
rorl
aam
outsb
xlat
ds
pop
test
inc
insl
cmp
fbld
pop
cmpsl
add
mov
mov
stos
adc
in
sbb
js
mov
outsb
leave
rcll
ret
sub
popl
cmp
subl
inc
mov
subl
lret
push
lcall
lret
loop
pop
ret
adc
xchg
jl
cmp
pusha
dec
mov
daa
stos
pop
fwait
xchg
mov
aad
enter
jecxz
adcb
mov
lds
jnp
jbe
sahf
repnz
adcb
pop
or
adc
adc
or
out
mov
push
shr
outsl
mov
inc
cmp
ds
cmp
xlat
das
repnz
div
push
or
jns
out
je
adc
fwait
pusha
stos
sahf
xchg
adc
and
mov
push
adc
je
inc
lcall
fsubrs
rorl
xor
jle
outsl
subl
mov
imul
test
fcmovne
ja
out
push
mov
mov
add
pop
and
outsl
mov
pop
fwait
into
lea
mov
in
fwait
scas
shr
clc
add
cld
std
aad
test
push
loope
inc
mov
aas
push
mov
or
jno
repnz
inc
inc
xchg
shrb
push
push
daa
adc
aad
add
adc
mov
test
dec
xlat
fwait
dec
mov
and
in
sub
daa
mov
stos
movsb
dec
and
stos
rorl
xchg
sti
add
push
std
cmpsl
shrb
inc
pusha
loopne
fwait
popa
mov
notl
push
lock
icebp
cli
call
pusha
xor
out
mov
mov
sub
push
inc
imul
loopne
mov
or
jnp
loop
and
cltd
push
adc
fisttpl
inc
imul
jnp
lds
in
stc
jecxz
sub
push
adc
aam
push
inc
jecxz
shlb
add
sbb
jns
je
clc
data16
or
xchg
xchg
xor
jb
fsubs
pextrw
xor
sub
shl
mov
iret
sub
pop
xchg
jae
adc
dec
mov
adc
mov
pop
and
daa
dec
out
mov
inc
cmp
jp
inc
dec
packsswb
add
int
push
pushf
stos
std
pop
mov
jnp
or
sbb
pop
xlat
xchg
and
ret
iret
and
clc
lcall
jl
cmp
adc
jbe
xchg
popa
ret
inc
jle
fistpll
xchg
sbb
bound
leave
mov
and
xchg
mov
clc
jl
jge
pop
cmp
dec
pop
xor
rcll
xchg
shll
inc
mov
ss
mov
lods
mov
shl
adc
lock
aam
push
lahf
sub
sub
lahf
sbb
and
mov
int3
xchg
call
pop
cmp
lahf
fs
adc
scas
sbb
cmc
and
cltd
aam
pop
add
xor
pop
in
sbb
sub
cli
dec
mov
lea
fiaddl
adc
adc
lods
inc
fwait
inc
and
in
inc
jne
xchg
negb
sbb
mov
dec
scas
jmp
or
loope
and
mov
imul
adc
jl
js
call
push
test
mov
loopne
stos
mov
insb
jl
push
hlt
xchg
or
jecxz
inc
rcrl
outsl
push
les
lods
daa
jno
mov
imul
test
xor
shll
xor
cmp
and
add
popf
mov
ss
dec
xchg
shrb
xchg
push
xlat
dec
lahf
jecxz
sub
les
aad
pop
sub
cmpsb
or
aad
scas
push
mov
xchg
lahf
xor
jg
pop
addb
icebp
cli
xchg
inc
fistpl
rolb
mov
jge
shl
dec
inc
mov
or
faddl
jbe
lods
and
adc
aas
jno
out
sti
sbb
je
inc
push
shrb
es
loopne
lds
dec
addr16
andb
sbb
jae
add
int3
xchg
add
jns
push
cmp
lock
lock
fistl
xchg
cmp
cmp
les
pop
pop
das
dec
out
and
xchg
pop
inc
jl,pt
xchg
jle
arpl
jge
sbb
cmp
cwtl
mov
sub
mov
cmp
sub
loope
test
in
mov
cmpsl
or
xchg
jb
in
hlt
aam
push
push
jg
xor
call
adcl
xor
repz
mov
mov
jmp
dec
jae
lds
mov
adc
inc
sub
imul
dec
arpl
fcmovnu
rorb
icebp
or
mov
jl
int3
mov
add
shrb
sarl
jp
notb
pop
test
xchg
and
lret
loope
stos
outsb
mov
mov
sbbl
jo
cmp
jle
lods
adc
push
pop
push
das
inc
lcall
aaa
xchg
mov
dec
js
in
jno
test
cmpsb
push
fidivs
daa
andl
sub
inc
adc
rcrl
adc
sub
push
and
adc
loop
mov
xlat
loopne
imul
cmp
cmpl
movsl
sbb
and
lods
pop
adc
jbe
mov
filds
pop
add
add
adc
cld
mov
cmpsl
out
jnp
arpl
out
xor
push
xchg
popl
fdivrs
movsb
dec
pop
mov
dec
ret
mov
inc
ja
nop
add
loopne
data16
mov
pop
test
loopne
aaa
sub
decb
jbe
mov
stos
xchg
adc
mov
insl
movsb
mov
push
repnz
sub
mov
mov
xchg
pop
into
fistl
test
cmpsl
push
orl
push
packsswb
insl
push
mov
pop
adc
mov
lods
ret
push
adc
inc
ret
push
push
and
mov
pop
adc
sbb
sbb
push
sti
pop
outsl
mov
xor
sub
dec
roll
loope
mov
sarl
xchg
out
dec
jae
jns
or
mov
and
cmp
cltd
xchg
sub
pop
jmp
jg
add
add
and
pop
add
dec
pusha
dec
clc
sbbb
lret
cwtl
mov
and
arpl
cmp
call
mov
mov
sub
sub
mov
xchg
test
cltd
paddq
add
rol
aam
or
add
stc
jb
mov
xor
mov
add
cltd
or
cmp
stc
lret
add
jae
iret
mov
bound
push
aaa
outsb
cmp
shl
push
pop
shlb
push
insb
stc
xchg
mov
call
sbb
push
xlat
mov
popa
ret
xchg
sub
jb
arpl
in
pcmpeqd
xor
fsubr
or
shrb
and
mov
mov
jne
addr16
movsl
bound
adc
arpl
xor
or
test
dec
inc
mov
imul
lcall
or
or
and
and
xchg
and
push
sbb
dec
jmp
lcall
pop
stos
push
insl
enter
xchg
fcomi
dec
test
xchg
fwait
cmpsb
jmp
aad
negb
stos
test
outsl
stos
pop
ds
inc
scas
fwait
pop
fcmovne
int
mov
movb
adc
shrb
lcall
jg
xchg
daa
icebp
je
repz
mov
out
inc
adc
jmp
fdivl
cli
pop
cmpsb
lods
push
xor
les
mov
nop
xchg
adc
lea
mov
jo
roll
jle
popl
stc
pop
call
mulb
into
add
adc
negl
data16
out
pop
std
mov
or
mov
xor
ret
xor
fwait
test
mov
xchg
pop
call
pop
add
mov
stos
cmpsl
pop
imul
dec
dec
mov
lds
mov
repnz
sub
pop
mov
push
adc
fwait
sub
shll
cmp
pop
gs
fcoml
lahf
inc
jg
adc
mov
pop
pop
fcomps
pop
in
inc
adc
int
dec
pop
dec
outsl
pop
testl
push
or
sbb
lahf
xor
and
call
cmpsb
xorl
fcomps
jnp
mov
hlt
aad
clc
insb
lea
les
mov
dec
movsl
lret
bound
or
or
dec
jns
jle
ja
push
jg
inc
mov
sub
in
loop
cmp
jmp
mov
rol
dec
pop
and
aam
ror
jge
cmp
or
xchg
jne
sti
or
mov
lahf
int3
scas
or
mov
rcrb
mov
scas
in
mov
xor
add
jb
inc
dec
jae
inc
add
iret
out
sub
mov
repnz
inc
fs
mov
xor
sub
mov
ss
out
push
aaa
test
push
pusha
mov
dec
dec
rcr
ret
mov
inc
sbb
mov
aad
cmp
filds
in
in
pushf
repz
mov
and
ljmp
mov
stos
xor
pop
dec
adc
push
jo
mov
nop
sbb
or
xor
mov
push
inc
pusha
jns
stos
in
adc
shlb
lret
pusha
sarb
jle
fs
imul
in
and
je
popl
imul
nop
clc
cmpsl
shll
jno
aaa
mov
popf
xchg
mov
imul
daa
xlat
jecxz
dec
mov
cmp
add
cltd
push
lods
pop
pop
fwait
mov
cmpsb
mov
push
jb
inc
fisubl
sub
popa
jno,pt
aad
inc
inc
jbe
nop
fildl
pop
mulb
mov
or
adc
xchg
sbb
lcall
int3
jg
scas
or
fildll
xchg
sub
rcrl
shlb
not
lods
insl
mov
testb
lods
pushf
push
je
push
loopne
dec
nop
out
pop
or
or
ja
jns
cmp
push
dec
or
imul
mov
imul
or
arpl
lock
dec
xlat
mov
hlt
rolb
cmpsb
addr16
subb
jo
xor
cwtl
jmp
push
in
xor
nop
cli
das
inc
pop
outsl
shl
add
pop
xor
dec
aaa
enter
sub
loopne
daa
test
cmpsb
out
imul
and
xchg
push
das
push
xchg
dec
pop
lahf
out
pop
pusha
jnp
aam
jb
and
add
push
xchg
cld
std
xor
and
fsubrs
lods
sub
xor
sub
pop
testb
in
fiaddl
nop
enter
aam
fdivrl
ds
cltd
mov
ret
mov
pop
inc
pusha
js
mov
xorl
pop
xor
imul
cmp
int3
xor
inc
fwait
mov
in
dec
shl
adc
cmc
shll
mov
lcall
out
jecxz
inc
push
out
pusha
xchg
popa
xor
adc
scas
iret
cmp
push
repnz
jb
mov
cmp
fldl
stos
push
xor
test
lcall
int3
and
je
dec
jge
ja
ss
xchg
roll
loope
sahf
jno
sub
shl
ja
xchg
mov
popf
stc
inc
pop
jns
or
imul
xor
movl
js
call
popf
pop
loope
std
rcr
in
xchg
adc
mov
mov
in
stos
sahf
bound
jge
pop
push
push
add
jge
lret
mov
jmp
lods
cmp
hlt
movsb
xchg
push
test
fildll
adc
sub
test
dec
call
stos
lods
xchg
popf
xor
sti
inc
dec
mov
jo
mov
lods
xchg
add
inc
sub
lock
push
jp
inc
imul
mov
data16
jmp
cmp
loop
inc
ds
nop
inc
sbb
or
add
lock
cmc
mov
or
push
scas
adc
jmp
push
dec
mov
xchg
loop
lret
push
mov
popf
out
popf
in
cmp
divl
pop
xchg
mov
push
mov
xor
xchg
stc
int
js
xchg
stc
sahf
inc
cmp
fcmovnu
add
pop
mov
jbe
xchg
mov
inc
bndmov
and
lods
icebp
fwait
divb
add
pop
lea
mov
test
ljmp
mov
adc
sub
sbb
adc
and
inc
into
inc
scas
popa
std
data16
mov
ficoms
push
pop
fsub
and
test
stos
scas
pop
scas
movsb
or
inc
dec
icebp
inc
or
cs
in
dec
dec
je
fwait
mov
or
es
pop
push
dec
es
and
mov
push
sub
jb
dec
hlt
add
or
stc
xor
iret
cmp
filds
sbb
inc
dec
ljmp
push
enter
mov
lea
inc
cmpsb
test
pushf
loopne
jmp
jle
adc
int3
fnsave
jle
sbb
push
mov
popa
push
xor
and
das
icebp
rcr
hlt
test
push
imul
adc
push
mov
push
dec
jp
jne
insl
sub
int
mov
aam
out
pop
cmp
loop
push
rorb
dec
jae
insl
shlb
inc
mov
cmpsl
scas
das
push
xor
lahf
repnz
push
rcr
cwtl
xor
dec
inc
sbb
sub
out
mov
in
mov
shll
mov
dec
jge
mov
xlat
dec
imul
mov
stc
xchg
mov
push
mov
outsb
xchg
xchg
faddl
add
sub
jg
in
in
push
adc
cmc
push
movsl
sub
xchg
pop
lods
ss
clc
je
jmp
jge
sub
push
adc
xorl
lcall
jnp
dec
fprem
xlat
andl
cmp
pop
push
mov
and
data16
xor
insl
ss
pop
add
jae
mov
inc
inc
insl
mov
scas
lret
js
hlt
aad
mov
sub
push
sahf
insb
adc
lods
fistpll
dec
or
aad
jne
xlat
in
popf
push
mov
cmp
sbb
push
xor
ja
jnp
or
sub
imul
fmulp
pop
imul
cmp
lahf
add
mov
cmp
pop
imul
sbbl
dec
mov
fwait
ljmp
hlt
or
xchg
xchg
js
ss
fsubl
and
cmp
jb
adc
adc
ds
mov
cmpsl
xlat
push
in
sub
xor
sbb
cli
xchg
xchg
mov
pushf
imull
imul
xor
push
fldt
xchg
cli
xchg
insb
add
pop
cli
dec
jle
mov
test
out
xor
pop
jge
inc
mov
adc
sbb
mov
lea
leave
push
jns
mov
or
and
adc
daa
insb
pushf
jo
stc
inc
pushl
hlt
inc
loope
dec
nop
xor
dec
fwait
mov
and
push
test
adc
lahf
ret
pushf
gs
inc
mov
mov
adc
add
adcb
shll
inc
ja
in
sbb
hlt
mov
cli
fnsave
fdivs
negb
and
gs
iret
cli
rorl
mov
repz
pusha
leave
jnp
xchg
adc
sub
push
jp
orl
in
inc
data16
cmpl
dec
push
idivl
mov
or
push
jl
mov
cmpsl
push
aam
xchg
inc
sbb
and
roll
mov
inc
stos
lods
dec
xchg
outsb
lea
inc
std
test
das
adc
in
test
nop
jg
mov
add
pop
das
sbb
mov
fisttpll
xchg
and
pop
aas
sub
xchg
ja
js
inc
lock
les
ss
outsb
jno
test
call
xchg
dec
lret
and
imul
mov
data16
repz
shll
xorb
sub
dec
incl
scas
lret
or
cmp
mov
and
pop
cmp
and
mov
negb
test
xchg
add
sbb
ret
les
push
mov
mov
and
inc
inc
jg
inc
push
outsl
cvtps2pi
jo
inc
mov
adc
adc
lds
cli
pop
adc
push
add
das
sub
sub
out
xorb
xor
in
cmc
dec
xchg
lcall
or
sub
xlat
sbb
sti
fdivrs
fucom
daa
and
and
dec
lock
shll
outsb
mov
mov
ja
jno
push
aad
or
xchg
popa
xchg
inc
std
sub
xor
mov
lcall
mov
mov
enter
clc
test
xorb
repnz
mov
sub
push
cld
mov
shl
out
jno
and
imul
pop
mov
iret
outsb
xorb
xor
adc
mov
adc
movsb
push
int3
outsl
les
scas
cmpsb
cmpsl
test
mov
je
adc
pop
arpl
lock
cmp
mov
inc
push
inc
lret
jbe
test
lret
push
iret
push
popa
jmp
xchg
mov
mov
outsl
gs
xor
jp
adc
stos
sub
jge
enter
sti
mov
ss
adc
inc
mov
ljmp
cmp
out
or
imul
into
mov
mov
mov
out
lods
jb
repz
mov
ja
adcb
push
cltd
movsb
insb
sub
stos
inc
dec
xor
in
hlt
mov
mov
xchg
test
jo
xchg
out
rcll
mov
call
test
inc
int3
cli
adc
std
mov
push
mov
lods
test
test
pop
popa
xor
ret
subb
das
std
xor
inc
test
mov
mov
xor
sub
movsb
out
cmp
jno
jge
scas
or
xor
push
sub
lea
scas
xor
push
in
mov
insb
outsl
sbb
mov
sahf
dec
out
lret
pop
mov
inc
ret
movsb
aam
addl
sub
or
cli
rclb
movsb
push
push
pop
inc
inc
adc
mov
or
scas
ja
adc
pop
test
inc
cmpsb
fsubs
jnp
cmp
arpl
lret
inc
push
inc
pop
cs
pop
add
loop
cmpsb
lret
les
dec
pushf
fimuls
sub
in
fstpt
xor
mov
xchg
cwtl
xor
pop
xor
push
cld
jge
xchg
mov
nop
lods
call
popf
dec
pop
mov
xor
or
push
ss
arpl
pushf
add
ja
xor
mov
daa
and
jns
loop
pushf
mov
mov
cmp
popa
sbb
cmpsb
vcmpsd
mov
inc
add
push
xchg
stc
dec
mov
xchg
add
out
inc
rorl
out
fiadds
arpl
fs
and
jae
pop
jae
lret
outsb
into
loopne
aas
push
test
adc
insb
lods
or
popf
mov
fldcw
dec
push
mov
pusha
mov
test
push
aad
lods
adc
sub
and
lahf
ljmp
pop
adc
mov
test
mov
fsubl
clc
pop
jo
popw
push
out
push
dec
insl
add
ss
aas
and
sbb
mov
cmp
jge
pop
inc
insb
push
push
xchg
push
test
pop
push
push
test
cmp
cmpsl
arpl
fs
imul
rolb
sub
mov
xor
xor
or
sbb
and
fidivrl
lds
ret
sbb
popf
add
bound
push
outsb
push
dec
jnp
cmpsl
lret
fwait
sbb
push
stos
imul
inc
inc
leave
jnp
mov
adc
and
movsb
mov
cmp
pop
add
out
pop
xchg
ss
xor
fistpll
add
lret
cmp
les
test
mov
xor
pop
mov
jnp
ljmp
or
mov
or
aad
adc
test
adcb
leavew
lods
mov
pop
test
imul
and
mov
arpl
std
jecxz
xor
pop
jp
into
fcoml
testl
sub
out
xchg
imul
shl
mov
xor
mov
pop
cmp
inc
mov
dec
jno
adc
cwtl
inc
mov
fldl
add
mov
lea
cmp
lcall
add
mov
jae
les
hlt
xchg
fadds
clc
scas
push
mov
fxch
outsl
sti
sahf
dec
jae
pusha
sbb
mov
mov
jmp
enter
push
and
dec
or
cltd
inc
lret
imul
inc
outsb
xchg
int
pusha
dec
sub
xchg
or
in
cmp
testl
lods
std
add
cmpsb
jp
xor
mov
push
mov
in
xchg
xchg
sub
imul
shrb
adc
xchg
faddl
ds
lret
dec
sbb
dec
repz
mov
pusha
in
inc
les
mov
int3
fcomip
into
rclb
cmc
sbb
insl
sbb
mov
or
lahf
lcall
fldt
call
out
jo
pop
lahf
lds
in
in
mov
mov
popa
and
es
pop
sbb
xchg
lret
sbb
sub
jne
lods
flds
adc
aad
sub
sbb
inc
or
pop
cmp
sahf
sub
cmp
xchg
mov
fimull
loop
fsubl
loope
mov
jne
hlt
mov
imul
inc
popf
sbb
stos
adc
addr16
mov
and
cmp
inc
ret
pop
mov
shlb
add
aas
pop
mov
cmp
xchg
dec
dec
jmp
mov
js
loopne
jae
in
cmpsl
jno
outsl
push
test
mov
aaa
jmp
jno
fildll
mov
mov
idivb
sub
inc
aas
xchg
popf
pushf
xchg
inc
cld
push
and
imul
cmp
cwtl
mov
ss
outsb
lods
inc
pop
lret
cmp
push
mov
sarb
jno
dec
mov
sbb
aam
pop
cltd
mov
xchg
jmp
ljmp
lahf
jne
enter
mov
in
jmp
bound
fidivrs
xchg
enter
push
adc
insl
push
cmp
pusha
cltd
das
in
pop
fsubrl
push
xor
dec
ds
std
mov
ds
into
and
pop
lds
add
repnz
jmp
jbe
xchg
stos
inc
pop
fcomps
sti
xchg
shl
push
mov
mov
mov
aas
out
fs
add
dec
mov
push
sbb
invd
shlb
out
test
mov
int
mov
lret
arpl
push
gs
aas
dec
loope
lods
imulb
bound
roll
adc
or
push
sub
xor
lret
or
cld
cmp
push
int
addl
pop
mov
leave
sbb
mov
adc
gs
add
jmp
mov
jbe
std
adc
and
fucomi
cli
xor
jg
ss
xor
add
movsb
jmp
in
outsl
ficomps
movsb
lods
nop
outsb
addr16
fdivrl
dec
sbbl
test
cmp
std
popf
mov
xor
xor
clc
mov
pop
test
mov
push
sbb
shrb
cmp
cmp
xchg
mov
leave
pop
xor
int
orb
popa
fidivrl
mov
lods
mov
jno
push
jo
stc
stc
pop
sahf
mov
push
mov
pop
pop
sbb
dec
jp
lock
jb
sub
pop
fdivrl
aas
rcr
xchg
or
inc
sbb
je
pushf
out
dec
shrl
add
sub
mov
xor
in
orl
lret
scas
xchg
das
les
fnstsw
aaa
icebp
in
cltd
jp
sub
call
pop
es
cmp
je
das
mov
stos
je
ss
loopne
inc
lret
xchg
ret
and
shlb
ds
stos
jbe,pt
push
pushf
cli
mov
and
pop
cmpb
mov
mov
das
lcall
notb
jbe
insb
push
std
pop
fwait
push
std
in
jns
out
push
dec
jnp
jg
or
scas
aas
cmp
out
jmp
sub
ss
mov
mov
or
mov
lods
push
insl
fidivl
stos
xchg
add
adc
pop
frstor
lret
fsub
push
push
jne
xor
push
ja
cld
cmp
scas
inc
addl
fstps
cmp
xor
jl
outsl
inc
arpl
pop
outsb
call
cmp
rorb
cmp
mov
ret
notl
jns
pop
sub
sub
sub
cmc
sub
addr16
movsb
jb
int3
sbb
jl
ljmp
push
mov
and
and
addr16
rclb
inc
adc
ljmp
in
push
int
jecxz
mov
add
pushf
shufps
out
push
adc
es
cmp
mov
mov
add
push
shrl
scas
xchg
dec
push
and
add
mov
pusha
cmpsb
mov
das
jl
sub
jbe
add
xchg
test
test
sub
adc
jnp
test
pushf
sbb
loop
xor
imul
and
insl
orb
inc
into
test
addr16
testl
cmp
dec
mov
mov
loopne
jns
and
mov
cwtl
fwait
pusha
sbb
aam
jbe
fcomi
mov
arpl
nop
hlt
xlat
pushf
ficompl
jo
test
mov
jmp
rcl
inc
dec
sahf
push
in
dec
xor
mov
iret
stos
dec
xchg
xor
lahf
inc
mov
hlt
je
cltd
mov
cmp
ret
repnz
insl
pop
cmpsl
jae
pop
dec
pushf
jmp
xchg
sbb
adc
mov
cmpsl
mov
xchg
dec
mov
ds
mov
inc
jae
xorb
xchg
push
divb
cmc
jmp
mov
shrb
pop
lahf
les
aad
in
mov
jmp
sub
ljmp
sbb
imul
loop
cs
lods
push
sahf
push
nop
enter
or
outsb
ds
mov
inc
fnsave
push
fwait
jae
aas
xlat
and
pop
xchg
test
xor
cmc
or
dec
loopne
inc
jg
xlat
out
mov
cmp
push
lock
out
loop
jo
fstpl
cmpsb
in
clc
add
mov
js
add
popf
xor
lret
imul
insb
sahf
shlb
dec
cs
stos
mulb
sub
sbb
enter
xchg
cmp
aam
shl
dec
adc
pop
or
jne
js
negb
push
xor
loop
dec
push
je
or
jns
jle
add
jno
sahf
lret
sbb
xor
stos
cld
imul
repz
cmp
popa
pop
js
cmpsb
xchg
shlb
into
ja
push
cli
inc
js
push
mov
mov
je
pop
out
lock
fsubr
int
jp
jb
jno
lahf
add
lret
stc
and
pusha
mov
lds
xchg
aaa
rcrb
shlb
clc
add
aaa
push
xchg
repnz
push
fidivrl
popa
sbb
mov
lret
ja
leave
push
adc
fsts
nop
stos
sti
xchg
xor
mov
dec
dec
sub
or
sbb
repz
lods
fcmovnu
aaa
adc
scas
js
mov
pop
icebp
cs
sbbb
mov
ja
mov
iret
outsb
fstpl
add
inc
xor
ja
in
outsl
adcl
sti
mov
divb
fnstsw
mov
dec
sub
and
sub
cmpsb
pop
out
xlat
cwtl
jne
pop
pop
int
cmp
or
xor
test
jecxz
inc
push
xor
jbe
repz
mov
mov
push
adc
sarl
push
jmp
test
and
mov
xchg
pop
loop
mov
push
sti
data16
decl
in
scas
ficoml
cmp
inc
shlb
pop
jmp
loope
in
jle
push
shll
insl
cmp
cmp
cmc
sub
mov
xor
insl
xor
negb
imul
sub
pop
push
addr16
fsubs
mov
outsl
add
push
jecxz
add
das
jno
pusha
leave
adc
xchg
mov
xor
jg
mov
jae
adc
rorl
xchg
fwait
lods
add
cmp
adc
clc
shr
cmc
push
movsb
out
fs
dec
push
ret
rep
add
cmp
add
scas
adc
push
jns
stc
xchg
mov
jae
adc
icebp
cld
xor
sbb
sub
cmp
jecxz
add
push
outsl
outsb
sbb
jne
or
fucomi
repnz
iret
sub
stos
push
aaa
or
loope
pop
xchg
mov
inc
and
test
jg
ja
fldt
push
mov
mov
xchg
pop
mov
inc
jge
push
mov
pop
dec
ret
mov
inc
pop
hlt
mov
jns
shlb
adc
xchg
pop
cmc
xchg
sbb
pusha
mov
lods
aam
jns
addr16
ret
mov
jle
pop
mov
mov
dec
mov
lret
fsubrl
lahf
add
lds
testb
jnp
cmp
outsl
mov
scas
sahf
fdivs
mov
into
xor
enter
xchg
add
pusha
in
mov
andb
das
adc
adc
inc
in
xchg
dec
pushf
inc
icebp
lock
xor
push
pop
dec
jb
push
mov
pop
cmp
testl
jle
jns
int
pop
ss
mov
pop
or
faddp
test
sbb
mov
aaa
fs
cmpsb
ss
xor
vandps
lahf
pop
clc
xchg
pop
fwait
dec
loopne
mov
sub
pop
inc
xchg
adc
rol
pop
out
or
lret
movsl
and
inc
or
jmp
push
loop
jae
fcomip
xchg
push
repz
inc
iret
push
mov
je
sub
loopne
ds
adc
sbb
fidivrl
js
fadds
adc
mov
pop
add
xchg
out
cmp
cmpsl
dec
jns
xlat
shr
mov
das
mov
es
idivb
test
mov
jp
loop
mov
popl
mov
sub
mov
inc
mov
std
mov
insb
jne
mov
push
data16
add
gs
pop
out
jns
jg
add
popa
add
or
lds
inc
inc
jecxz
and
jecxz
mov
jmp
popf
sbb
lea
push
add
mov
stos
je
ds
mov
mov
jb
es
cmp
xor
sbb
insl
repnz
dec
test
pop
imul
outsb
pop
dec
mov
add
jg
imul
je
or
xchg
in
mov
orl
leave
sarb
aas
jl
pop
sub
mov
mov
pop
sbb
mov
jnp
xor
pop
dec
jmp
std
xchg
jbe
sub
fsubrp
incl
sub
push
shrl
pop
jno
cli
adc
aas
mov
adc
xor
mov
es
das
lds
fdivrs
ljmp
ljmp
js
mov
jp
cmpl
sbb
and
icebp
mov
test
cmp
xchg
es
dec
pop
cmp
mov
jle
inc
jg
mov
imul
and
aas
mov
movsl
stc
push
push
or
repnz
inc
mov
movsl
lea
inc
fisubs
arpl
mov
aam
xor
sub
and
and
xchg
popa
inc
xchg
mov
and
add
add
incl
out
mov
imul
push
pusha
and
in
js
rcrb
cmpsb
dec
jmp
xchg
fldcw
sbb
cltd
pop
clc
xor
dec
in
push
inc
push
pop
aas
stc
cmp
jbe
lock
fucom
push
xor
sbb
jb
stc
adc
enter
add
xlat
push
ds
fisubrs
jl
arpl
pop
inc
mov
pusha
jns
pop
mov
jns
mov
jb
icebp
cmpsl
mov
dec
pop
addr16
lock
bound
pop
xor
fadds
mov
lds
jge
cwtl
dec
cld
neg
adc
test
sbb
lods
out
sbb
mov
mov
in
ljmp
or
sbb
adc
decb
ret
xchg
cmp
sub
xchg
mov
cmp
lock
mov
lods
dec
aaa
stc
loope
js
lods
into
mov
jno
addr16
jmp
sub
out
adc
cli
scas
mov
pop
push
push
cmc
ss
pop
and
mov
jmp
sub
push
bound
call
xchg
imul
testb
sub
lea
cwtl
push
sahf
insl
fcoml
imul
stos
xor
test
push
jl
cli
dec
add
xchg
fsubr
push
dec
fbld
or
popa
add
sbb
add
lcall
insb
dec
pop
sub
pop
je
pop
inc
pop
sarl
stos
mov
outsl
shl
fsubs
add
or
scas
mov
pop
data16
fwait
adc
mov
xor
and
popa
test
roll
pusha
mov
mov
outsl
imul
bound
add
xor
outsb
pop
ret
lret
imul
repz
roll
jne
pop
jl
push
scas
cmp
cmp
push
inc
daa
hlt
adc
in
push
imul
adc
adc
cli
mov
mov
adc
xor
daa
fnsave
push
shll
pop
cli
pusha
loop
inc
cmp
xchg
xlat
insb
jne
fisubs
cmp
pushaw
arpl
dec
cmp
addr16
push
inc
pushf
xor
inc
sti
push
aaa
rol
pcmpgtw
add
adc
and
xchg
aad
dec
rcl
out
jns
xor
push
adc
cmp
or
pusha
xchg
and
outsb
jg
add
out
shlw
enter
imul
std
dec
bnd
add
sub
adc
arpl
rcrb
rorb
ror
mov
xor
xor
xchg
add
ret
dec
mov
lock
mov
sbb
orb
shlb
push
xchg
cwtl
cmp
nop
adc
mov
ficomps
jecxz
mov
dec
mov
lock
jmp
mov
test
jle
mov
nop
add
lret
mov
mov
push
inc
leave
pushf
popf
xor
ds
xor
out
dec
mov
int
and
inc
add
jo
add
pop
pop
loopne
popf
das
loopne
scas
prefetchwt1
xor
ja
dec
pop
xchg
mov
stos
add
mov
das
jg
aad
into
xchg
or
out
mov
push
dec
ret
add
lretw
pusha
fstpt
mov
cmp
mov
jo
cmpsb
push
pop
sub
xchg
jo
sbb
fmull
mov
aaa
lods
push
notl
stos
and
xor
idivb
aas
mov
xchg
mov
mov
add
xchg
xchg
test
sub
push
dec
sarb
jmp
dec
insb
xor
and
adc
data16
je
or
add
push
xlat
cmp
nop
ss
dec
cmpsb
lods
ja
xchg
xchg
inc
sub
dec
cmp
jbe
scas
mov
jbe
mov
xchg
sub
je
xor
lods
xor
in
mov
or
mov
jne
cltd
sbb
xor
rcll
pop
loop
xor
inc
mov
mov
addb
push
repz
mov
xor
inc
jno
es
pop
fstl
ret
aas
out
ficomps
dec
ret
lret
add
enter
loop
mov
add
scas
adc
mov
es
pop
mov
sbbb
adc
dec
movsl
adcb
ss
cmp
push
jno
mov
loope
push
cld
xor
std
imul
sar
mov
mov
pop
ja
cltd
sbb
lcall
mov
push
jae
push
sbb
adc
test
movsb
mov
popa
cmp
int
push
pop
fs
loopne
frstor
pusha
mov
loope
cmp
lret
mov
out
pop
repnz
enter
js
fstl
dec
jb
sahf
hlt
andl
jg
pop
sub
sbb
movsl
pop
out
test
daa
dec
and
sbb
mov
test
adc
mov
adc
out
imul
mov
clc
ds
bound
add
inc
jns
xchg
pop
xchg
add
and
sarl
test
or
in
outsl
loop
daa
cmp
int3
mov
pop
cld
mov
push
or
dec
mov
test
add
ret
sbb
aas
fadd
and
xor
outsb
fdivs
pusha
mov
cmp
add
jecxz
in
shr
ret
and
xchg
fwait
jbe
pop
mov
mov
cld
sbb
std
aaa
push
ret
stos
fstp
in
jl
mov
pop
ds
js
push
mov
loop
loopne
jae
mov
or
sub
jmp
insb
ljmp
testl
fimull
lock
add
push
aam
push
pushw
xor
jmp
addb
stos
gs
sbb
or
cltd
insl
or
std
jnp
jle
pop
adc
and
mov
cwtl
pushf
pop
lret
or
add
dec
sub
ljmp
xorb
out
scas
push
lea
dec
inc
jb
fists
pop
mov
sub
cmp
xor
stos
enter
xchg
mov
add
mov
xchg
inc
and
test
divb
lods
xor
in
adc
dec
xchg
mov
mov
xor
imul
imul
mov
jmp
cmp
ljmp
xor
cmp
loope
ficoml
ljmp
pusha
sub
cmp
scas
addl
jo
push
jno
mov
faddl
inc
inc
sbb
xchg
inc
jb
mov
scas
and
imul
call
movsb
mov
dec
adc
mov
add
lahf
andb
dec
mov
movsb
sub
jecxz
iret
pop
mov
jecxz
call
or
and
cmp
dec
sbb
adc
fnstenv
sbbb
add
test
int
ljmp
dec
and
loop
jae
add
inc
and
sub
pop
bound
mov
jmp
push
dec
addps
jp
inc
mov
ret
mov
mov
add
sbb
xor
jno,pt
add
je
inc
mov
xorl
mov
adcb
int3
push
cld
push
je
bound
mov
loop
int
xchg
pop
call
xor
dec
repz
xchg
mov
lock
psrad
imul
jp
xor
mov
fwait
popf
jo
lret
and
add
pushf
lahf
push
pusha
push
mov
test
mov
mov
adc
stos
imul
jbe
aaa
gs
pop
fwait
mov
in
movsl
or
push
xor
sbb
add
and
push
out
dec
push
inc
repnz
or
loope
mov
scas
and
jmp
popa
pop
jns
jno
sbb
jbe
test
ret
or
mov
push
push
lds
and
movsb
inc
arpl
xchg
pushf
xchg
mov
idivl
sbb
dec
ret
gs
mov
pop
dec
repz
stos
cmp
dec
sub
adc
in
sub
inc
jno
mov
aad
mov
cmpsb
push
sbb
lret
inc
mov
out
mov
pop
andl
xor
dec
ja
cli
xor
std
dec
in
dec
aam
sub
aas
iret
and
faddl
dec
mov
jo
push
xorl
dec
ret
inc
clc
mov
icebp
cmpsb
movsb
clc
stos
pop
test
jle
xor
pop
pop
icebp
jb
cmp
add
sti
scas
sbb
sub
cmp
lods
mov
mov
mov
mov
mov
adc
adc
adc
inc
aas
push
and
sti
fstl
jg
pop
or
popa
mov
jns
xchg
push
jo
stos
in
push
scas
loope
shll
loopne
insl
arpl
inc
test
popf
inc
mov
push
pop
ss
addr16
insb
dec
and
mov
aas
add
sbb
cmp
or
test
push
jb
pop
cli
jl
add
cmc
cmc
add
sub
jecxz
ffreep
mov
repz
mov
and
cli
jecxz
mov
dec
inc
cmp
jl
inc
cs
mov
ret
aad
mov
jno
clc
cwtl
ret
scas
cli
push
push
jns
jp
in
pop
jge
stos
push
nop
sub
insl
adc
mov
lds
push
push
jmp
cmc
repz
pop
mov
shrl
test
into
and
fwait
test
inc
scas
mov
cli
cmpsb
into
dec
fnsave
stos
cmc
add
mov
dec
adc
or
push
popa
dec
pop
imul
into
push
jg
iret
loopne
jge
loope
loop
arpl
loope
movb
into
imul
loope
dec
in
addr16
mov
out
nop
test
lods
mov
in
mov
pop
push
mov
fs
push
cmp
adc
xor
jns
xchg
sbb
and
mov
dec
xor
test
adcl
jg
cmp
test
push
loope
adc
jnp
rolb
mov
cmp
les
mov
movsb
or
scas
dec
push
outsl
insl
mov
jbe
xor
loopne
mov
xor
in
outsb
sarl
insb
push
insl
stos
dec
and
stos
jecxz
pop
out
punpcklbw
fists
jmp
insb
arpl
in
iret
pop
gs
scas
popf
std
push
ret
sub
outsb
ds
lret
push
cmp
out
adc
sbb
es
push
pop
jecxz
cmpb
ret
sti
pop
mov
or
or
add
ss
fwait
scas
mov
xchg
popa
and
sbb
push
shll
and
sahf
int3
fcoml
dec
and
xor
aaa
mov
adc
xor
dec
mov
int3
hlt
out
movsl
and
sarb
sbb
mov
pop
xor
lcall
mov
not
push
adcb
mov
push
das
add
push
ja
arpl
sbb
mov
cmp
mov
dec
mov
shlb
std
xchg
in
dec
mov
imulb
adc
dec
jo
xchg
mov
jge
lea
jnp
mov
or
mov
sbb
xor
push
sub
outsl
out
pop
jb
fisubrs
test
push
ds
lods
cmp
dec
sbb
in
andl
push
mov
adc
xlat
mov
xchg
mov
fnstcw
dec
push
jge
sbb
std
dec
scas
push
pop
mov
or
mov
mov
call
scas
mull
test
pop
jno
jnp
out
jge
and
movsl
push
repz
mov
and
mov
aas
push
jl
popf
adc
jecxz
hlt
cld
or
dec
mov
dec
int
cmpl
aaa
jl
loop
mov
lods
xchg
repz
mov
sbb
mov
or
cmp
sub
sub
cld
push
mov
pushf
mov
lret
xchg
cmp
cmp
add
or
scas
sub
cmp
lcall
cmp
pop
jl
or
fstpl
daa
xor
fcomp
push
stos
loope
mov
mov
pop
add
dec
cmpsl
stos
mov
mov
popf
push
mov
xchg
fsubl
imul
lret
cmc
ja
add
pop
daa
sbb
flds
sub
jp
push
push
jge
aam
xor
jne
nop
fdivrl
mov
movsb
cmpsl
jo
insl
sub
xchg
sbb
lcall
fiaddl
js
xor
adc
pop
dec
push
xor
mov
mov
shrl
inc
test
icebp
into
cmp
mov
out
pop
int
lods
lcall
push
inc
push
movsb
sbb
lret
sub
lea
in
lahf
lret
and
jb
jl
cmp
rcrb
adc
pop
jmp
and
lock
push
mov
push
es
mov
rclb
mul
subl
aam
imul
test
inc
insb
arpl
aaa
xchg
fnstenv
or
aam
push
cmp
hlt
rcr
add
jno
ret
or
xor
xchg
mov
adc
cmpsl
imul
xor
adc
pushf
pushf
jae
adc
mov
loopne
insl
dec
clc
and
mov
dec
leave
ds
rorl
repnz
lock
in
mov
stos
xchg
arpl
push
mul
bound
mov
adc
lret
xor
cmp
xor
sbbl
add
icebp
push
cmp
and
ljmp
push
stos
test
mov
loop
add
cwtl
lcall
and
add
xor
mov
sbb
mov
imul
fs
movl
fnstsw
push
push
sbb
out
jo
jecxz
xchg
fnsave
xor
push
add
xorl
mov
jno
mov
adc
jecxz
mov
out
cmp
aad
out
dec
fcomps
xchg
and
ljmp
or
mov
and
or
xlat
jb
mov
mov
sbb
ss
mov
jns
hlt
shl
sbb
mov
jle
pusha
mov
cmp
pop
loopne
sub
and
adc
lock
mov
mov
xchg
xor
ficompl
mov
scas
mov
rcl
imul
aaa
jne
jmp
jge
pop
rcr
hlt
xchg
mov
out
sarb
ret
fnstsw
fyl2x
and
inc
fldl
xchg
mov
inc
lret
xchg
xchg
insl
sub
loopne
push
cwtl
dec
pushf
aad
push
mov
fsubrl
loop
fdivr
push
iret
ljmp
mov
jmp
stc
les
mov
dec
in
mov
fldenv
push
fnstcw
scas
cwtl
and
les
mov
mov
pusha
push
mov
call
mov
inc
incl
adc
jmp
adc
jmp
push
mov
fimuls
stos
loope
sbb
adc
xorl
cmp
outsl
and
or
and
scas
lods
push
jbe
jne
xor
in
ja
adc
sub
mov
jnp
arpl
cmp
dec
sub
js
repnz
add
add
push
lcall
push
adc
lret
inc
icebp
pushl
das
addr16
icebp
aas
jmp
arpl
adc
xchg
rorb
test
ret
cli
lahf
lods
and
hlt
rcrb
enter
jo
stc
fnstsw
das
push
push
lds
xchg
sti
daa
push
dec
mov
jge
inc
cmpsb
lahf
cltd
aas
les
adc
pusha
popa
incl
mov
iret
xchg
pop
add
or
mov
test
mov
pop
aas
adc
out
jl
sub
cs
jl
or
rcr
mov
dec
jecxz
loop
mov
out
sbb
mov
jo
test
mov
pop
in
fldcw
outsb
movsb
cmp
pop
and
pop
dec
xor
fld
sti
cmp
jno
aas
sbb
cmp
push
mov
push
fdivrs
xlat
jns
ret
pop
fiadds
popf
and
cld
jge
bound
xor
xchg
fwait
call
jns,pt
inc
push
or
fwait
addr16
into
sahf
lret
fistps
dec
add
jbe
ror
xor
and
int3
adc
not
xor
mov
data16
lahf
xor
lds
push
mov
sahf
mov
sbb
mov
add
push
and
jo
add
shlb
dec
out
hlt
push
or
pop
inc
dec
lret
mov
dec
and
ret
fs
sub
pop
dec
pop
sbb
mov
stos
sub
push
les
jno
mov
adc
push
test
mov
or
nop
ret
shrb
and
fadd
lret
xor
dec
cld
inc
cmp
and
pop
xchg
and
out
mov
mov
mov
jb
shll
sub
xchg
fiaddl
push
int3
and
xor
jge
mov
lcall
pop
pusha
cmp
push
rcl
dec
mov
cmp
stos
imul
into
outsl
push
out
sbb
mov
fnsave
or
daa
add
push
inc
les
cmpsl
mov
mov
aaa
inc
sbb
scas
es
dec
xor
movsb
and
jge
hlt
push
iret
and
and
mov
jo
mov
xor
and
push
mov
insb
int3
xor
sbb
sbb
adc
cmc
pop
sti
divl
or
fcomp
jg
jnp
mov
jne
sbb
xor
push
push
mov
push
and
ret
xorb
arpl
and
cmp
jns
jo
xlat
loopne
and
xor
scas
movsb
and
jecxz
cmc
stos
ja
out
jo
inc
sub
push
jmp
cmp
test
cltd
push
cmp
pop
clc
mov
scas
testb
sub
lahf
add
mov
loopne
mov
xor
cli
addb
ret
scas
dec
bound
dec
and
icebp
cmp
adc
lea
mov
pop
cmp
lds
xor
fwait
js
cmp
or
sbb
data16
or
and
loopne
xchg
jle
lret
lcall
or
xchg
popa
mov
lahf
popf
andb
jae
out
and
add
icebp
mov
jl
push
ret
sbb
dec
idivl
inc
insb
in
xchg
jbe
mov
icebp
cmpsb
cs
pop
push
cmp
or
test
shlb
push
stc
push
int3
cltd
jle
cs
mov
inc
test
push
es
xor
stc
sti
xor
or
mov
fldcw
jae
push
jae
jae
mov
push
adc
mov
cltd
mov
add
jp
push
test
lret
push
flds
push
shl
test
js
cmc
push
pop
pop
lcall
testb
xchg
rcl
dec
pop
repnz
jno
fs
and
mov
andl
push
add
insl
rcrl
mov
mov
addr16
or
xor
and
test
xor
or
push
enter
jmp
shrl
int3
call
mov
pop
outsl
or
aaa
mov
pop
xor
and
pop
dec
dec
and
add
test
shrl
mov
push
insb
and
inc
inc
sub
xlat
popa
loopne
cmp
ljmp
lcall
jmp
out
roll
mov
shrl
ret
push
inc
jp
or
inc
pop
inc
aas
inc
cmp
xchg
or
popf
push
or
jg
int
xor
pop
popf
pop
push
cmpsl
addr16
pop
lea
inc
repz
stos
lds
ja
and
dec
inc
inc
test
push
mov
out
ss
ds
popa
jle
int3
leave
inc
push
stos
out
xchg
inc
and
ss
test
mov
pop
inc
jg
pop
sub
pop
xor
mov
jns
jle
nop
loop
leave
xlat
jp
cmp
mov
fwait
mov
mov
ret
sbb
rorb
popf
std
add
adc
push
adc
pop
or
push
sar
adc
fs
idivb
sti
push
cltd
jl
dec
loope
adc
sahf
scas
jmp
mov
in
dec
dec
or
xor
jo
sahf
movsb
mov
push
andb
adc
incl
sti
in
add
aam
in
enter
pop
push
jle
sbb
idiv
sahf
cmp
xor
mov
push
divb
leave
in
imul
mov
mov
stos
mov
inc
stos
ficomps
mov
and
aaa
loop
jg
sarb
dec
pop
sbb
dec
mov
mov
shll
pop
test
push
arpl
shrl
bound
test
pop
cmp
inc
dec
repz
iret
push
mov
cmc
rolb
xlat
xor
repz
ret
pop
xchg
mov
fwait
addb
rcr
scas
xchg
xor
das
dec
shrl
test
aad
andb
iret
push
mov
or
adc
push
sar
mov
push
xchg
jle
mov
sbb
inc
call
mov
mov
sbb
lds
dec
fmull
dec
jmp
lods
bound
sub
and
xlat
shlb
movsl
insl
nop
fs
popl
mov
and
scas
inc
leave
test
stc
add
cmp
pop
std
or
std
pop
inc
sbb
mov
cmc
dec
testl
jne
sbb
xor
popf
js
push
xchg
incl
fs
mov
mov
jno
inc
dec
lahf
pop
stc
cmp
sbb
cs
dec
mov
pop
xchg
cmpsl
es
std
vpsrad
in
add
lock
idivb
in
push
mov
cmp
movsl
test
adc
jmp
and
fdiv
cmpsl
js
and
fdivrl
xchg
or
jo
sbbl
inc
push
mov
inc
adc
and
outsl
mov
stc
mov
dec
popa
cmp
pop
aas
jb
xchg
sub
jns
sbb
ss
push
pop
jne
xor
and
int3
andl
loop
fcompl
add
lcall
hlt
lods
add
lock
cmp
or
negb
add
aaa
jmp
ret
mov
and
jmp
push
push
add
cld
and
movsb
inc
adcl
das
push
or
mov
jne
mov
dec
push
mov
or
push
jae
xor
repz
gs
iret
enter
inc
adc
lods
cmp
mov
ds
push
imul
or
pop
fistps
mov
gs
or
sbb
cld
stc
rcrb
inc
shl
adc
pusha
jbe
shrb
add
dec
push
outsb
mov
aaa
and
aad
inc
and
sub
push
subb
sub
cmc
or
add
notl
bswap
mov
lret
fisubl
imul
or
or
icebp
cmpb
mov
pushf
mov
pop
rcrl
scas
into
in
jb
fbld
shlb
add
add
dec
iret
jge
das
rolb
add
fisubl
das
fistl
cld
mov
jg
pop
mov
fwait
dec
fiaddl
repnz
adc
cmp
sub
fisubrs
and
dec
mov
pushf
popa
push
sahf
cmp
cld
lret
adc
pop
cs
test
clc
xchg
or
adc
xor
cmpsl
cmp
les
or
ja
adc
dec
enter
add
push
and
mov
add
aad
mov
xor
mov
adc
pop
out
aaa
mov
loopne
jl,pt
xchg
cmp
cmpsb
mov
ss
inc
in
in
add
sub
cmp
mov
cmp
mov
stc
cmpl
push
push
aaa
inc
arpl
cli
rclb
js
icebp
rorl
cmpsl
enter
inc
jne
lods
pop
sbb
orl
imull
clc
jne
ljmp
pop
pop
dec
push
xor
and
test
stos
jmp
push
scas
arpl
cmc
adc
push
jmp
push
loope
xlat
fldt
mov
es
dec
sub
mov
repz
in
jns
mov
les
sti
int
mov
dec
mov
aaa
add
call
or
dec
or
mov
decb
mov
lods
and
xchg
jecxz
cmp
rcr
sbb
sbb
mov
mov
psubsb
rcrb
cmpsb
jns
push
adc
pop
pop
mov
dec
decl
outsl
xor
and
sub
xlat
dec
lods
and
pop
insl
sbb
fstpt
shrb
adcl
out
stos
test
std
js
sbb
mov
adcl
out
fs
clc
sub
aam
xchg
lock
les
sub
and
fiadds
aam
xchg
jo
ret
mov
popf
ja
int3
xor
bound
stc
lret
stos
das
sbb
cwtl
in
push
testb
mov
inc
addr16
sub
clc
fadds
into
mov
dec
jnp
inc
cwtl
leave
daa
lds
xchg
adc
int3
inc
outsl
in
lahf
dec
pop
rcll
xor
sar
enter
je
mov
cmp
lods
sub
push
xchg
sbb
inc
pop
push
out
sub
inc
and
cld
push
push
adc
mov
xchg
pop
push
sbb
xchg
loopne
push
enter
xor
in
aaa
jno
jnp
cltd
inc
and
mov
mov
jo
insl
sbb
lock
or
push
jns,pn
aad
movsl
xlat
sbb
inc
mov
adc
ja
xchg
std
movsb
mov
and
mov
adc
push
jg
mov
add
stos
cli
lods
movsb
mov
add
std
sub
lock
jae
movb
or
mov
jge
outsl
ret
lret
or
ret
iret
mov
loope
jbe
adc
in
pop
gs
xchg
mov
neg
out
mov
pop
loope
bswap
xchg
or
jp
les
sub
movsl
push
notb
and
in
xchg
in
adc
pop
js
sbb
pop
mov
fwait
test
outsl
aad
xchg
lock
push
sub
movsb
dec
push
mov
or
insl
cmpsb
jnp
dec
sub
push
mov
je
pop
roll
in
fsts
add
and
in
mov
insb
fcompl
repnz
jmp
popa
push
pop
cmp
and
xchg
icebp
mov
dec
pop
call
fdivr
mov
cld
lret
inc
testl
lret
mov
cltd
pop
add
jecxz
fisttpl
imul
push
sub
int
mov
lds
clc
jno
sub
stos
mov
mov
mov
jbe
pop
jno
rcll
stc
push
das
ljmp
add
sbb
cltd
add
inc
jp
jp
lahf
inc
aad
mov
mov
out
and
add
lret
cs
sbb
adc
es
jae
jle
fdivrs
loop
ret
aam
sbb
or
cmp
inc
stos
inc
pusha
cmpsb
dec
sahf
sub
rcrb
pusha
test
sbb
ret
or
scas
aad
push
fsubrl
adc
xchg
lods
addr16
xchg
iret
lock
xlat
jnp
fists
mov
adc
test
in
xor
test
pop
in
and
sub
xor
mov
enter
lret
ljmp
pop
or
sti
imul
or
or
movsl
and
mov
loope
mov
mov
out
and
lods
ret
cmc
lock
mov
cmpl
and
iret
sbb
or
ds
or
jb
fs
je
das
adc
xchg
daa
lret
mov
mov
stos
insb
popf
cmc
xchg
jnp
test
mov
and
mov
mov
push
mov
leave
in
xchg
dec
dec
stos
leave
lods
scas
sbb
or
sub
sahf
mov
xlat
int
int
and
fistpll
subb
fwait
push
insl
stc
decl
ja
and
add
lods
out
inc
xchg
push
jae
nop
stc
or
lahf
fildll
gs
jmp
sbb
cwtl
lods
adc
cmpsl
dec
mov
imul
frndint
jl
sbb
dec
add
jns
push
mov
rcrb
jle
xor
add
mov
jns
adc
jno
sub
pop
mov
jl
out
sub
pop
jne
dec
xorb
dec
mov
add
pop
outsb
inc
call
push
dec
fidivrs
pop
add
icebp
leave
loop
fwait
xchg
in
fcomps
dec
enter
int
orl
inc
in
fnstsw
dec
push
stos
pop
inc
xchg
movsl
xchg
cwtl
je,pt
je
cld
jb
xchg
xor
push
xor
fcmovnb
popf
test
pushf
or
push
mov
inc
cmp
cmp
ja
hlt
adcl
ret
les
call
dec
cvtps2pi
inc
aad
mov
push
cmpsb
xor
inc
mov
in
push
xor
ja
movsl
mov
adc
enter
or
mov
add
push
fs
loope
pop
mov
push
div
jle
add
mov
leave
pop
mov
mov
pop
les
dec
scas
dec
popf
fmull
sarl
xchg
aad
pop
ds
mov
pop
enter
push
lea
inc
inc
sub
push
mov
adc
pop
mov
stc
add
ret
lea
es
and
cmp
fdiv
adc
rorb
pop
repnz
dec
or
sbb
imul
push
jecxz
or
lea
repz
jg
xor
out
repnz
gs
jns
lea
test
cmp
loop
fistpll
std
sbb
xchg
das
dec
add
push
sbb
rorl
xor
insl
out
and
push
mov
out
push
cmpsb
lahf
ret
cld
adc
scas
minps
sbbb
sbbl
or
nop
cld
xchg
movntps
pop
adc
push
jo
lret
aad
sbb
pop
pop
sbb
lret
and
xchg
cwtl
test
aad
mov
pop
ss
addr16
and
mov
inc
xchg
lret
dec
ja
mov
dec
add
sub
enter
fisubs
dec
popf
cs
pop
cld
lock
in
pop
jmp
flds
shrl
sub
fisttps
mov
fbstp
push
rcrb
mov
xor
movb
mov
mov
push
outsl
lahf
xor
pop
xor
stc
jo
jge
mov
sub
xchg
shrb
ljmp
jp
rcrl
mov
into
mov
jmp
jge
cmp
mov
mov
sarb
std
out
and
data16
jne
or
lods
arpl
loopne
out
jl
idivb
dec
push
adc
gs
inc
jle
sbb
lea
fisubl
shlb
cwtl
scas
inc
mov
sbb
adc
in
iret
in
xchg
aaa
xor
test
das
lcall
outsb
aam
notb
xchg
mov
add
mov
push
jns
popf
andb
xor
daa
mov
into
adc
xchg
ror
in
mov
fisttps
pusha
cltd
inc
mov
fwait
jae
mov
lahf
xor
or
aaa
jl
cmp
xor
jno
in
dec
lea
sahf
jae
outsb
sub
inc
pop
shll
jnp
dec
loop
andl
fistpl
lods
and
out
call
jle
jae
shlb
shll
jmp
jae
or
push
xchg
or
mov
mov
or
inc
sub
xchg
mov
or
lahf
clc
stc
mov
cmp
cmp
inc
fsubrl
cmp
sti
sbb
iret
rclb
lock
jnp
test
sub
enter
add
xchg
xchg
pop
gs
ret
mov
iret
pushf
sub
fstl
push
into
movsb
mov
xchg
stos
daa
xchg
arpl
pop
test
xlat
add
stc
cmp
call
or
mov
dec
sub
xlat
mov
mov
mov
push
lock
cwtl
push
jb
and
int
ret
incb
into
mov
pop
jmp
ds
mov
xor
adc
in
pop
jle
sbb
mov
jge
add
pop
mov
aas
jecxz
xchg
mov
fstpl
push
jb
mov
push
stos
test
push
adc
cli
dec
inc
push
pop
push
fidivrs
test
int3
rcrb
adc
pop
cwtl
inc
push
sub
repz
loop
daa
mov
mov
insl
fwait
push
cmp
xor
pop
adc
movsl
and
test
cmp
sub
cmp
jl
pop
insl
push
aam
je
jge
sahf
sub
jbe
std
pop
push
mov
lock
repnz
mov
out
data16
dec
cmc
dec
in
sbb
ret
xchg
cmp
dec
out
sarb
sub
in
mov
xchg
movsb
mov
and
add
mov
jmp
scas
outsb
pop
pop
cltd
iret
inc
mov
mov
lret
inc
out
ficoms
icebp
movhps
iret
push
adc
nop
movsb
mov
iret
andb
mov
lcall
jg
xchg
jle
sbb
pop
mov
lret
push
data16
mov
jb
mov
sbb
aaa
mov
lcall
sbb
push
cmc
or
stos
xor
cwtl
dec
cmp
ja
sub
test
xor
nop
leave
aad
je
jmp
outsl
xchg
sti
popa
inc
loope
loope
pop
hlt
lcall
cmpsl
scas
jmp
inc
cmp
andb
cmc
jno
mov
cmpb
stc
jmp
push
out
hlt
mov
lods
dec
fsubl
test
rorb
mov
subb
push
ret
mov
push
push
jle
and
int3
mov
xchg
pop
jp
lahf
lea
rcr
dec
fcmovb
cmp
sbb
and
or
in
adc
aam
into
femms
mov
xor
dec
popf
inc
scas
xchg
push
sbb
fldl
test
jp
xlat
hlt
cmc
xchg
bnd
dec
xor
dec
jmp
in
dec
add
push
lcall
sub
push
xor
and
inc
jbe
mov
cmpsb
arpl
repnz
mov
xorb
test
and
pop
push
aam
je
jns
pop
div
movsb
jmp
mov
inc
leave
test
test
out
and
lret
ret
sbb
pop
cwtl
xchg
stos
bound
adc
fsubrl
shrb
jb
and
and
popf
mov
mov
dec
cmp
in
jo
imulb
cs
cmp
push
push
xchg
sbb
push
sbb
dec
mov
fisubrl
sub
dec
into
mov
ja
mov
push
and
pop
inc
push
push
out
add
lret
lods
mov
fisubrs
or
and
and
jle
dec
dec
js
test
sub
inc
jl
adc
lods
sbbb
or
or
xorb
xchg
int
cmp
pop
and
setle
out
imul
mov
scas
scas
jnp
mov
out
pop
out
incl
mov
stos
inc
xor
dec
push
jns
in
lahf
in
jp
push
push
cmc
mov
inc
xchg
js
aas
out
int3
lret
fcomi
mov
pop
adcb
pop
fwait
into
loop
icebp
mov
into
mov
aad
mov
sub
xlat
mov
jno
sbb
xchg
les
cs
out
mov
aas
mov
cs
std
or
jbe
int
ret
ja
ror
ljmp
and
sub
inc
aad
imul
sub
mov
rol
movsl
mov
dec
xchg
xlat
stc
pop
aad
dec
sub
lea
fcomps
aas
sub
mov
add
jbe
loop
jno
int3
imul
fstps
data16
inc
out
mov
dec
mov
ss
xchg
mov
xchg
and
dec
adc
or
inc
push
push
call
jmp
and
jb
outsl
cs
dec
dec
mov
insb
into
pop
mov
out
push
and
jns
jbe
or
cmc
test
aad
sarb
mov
sti
add
mov
dec
mov
orl
in
lock
cmp
pop
negb
xchg
pop
pop
int
cmpsb
xorl
pusha
jmp
xchg
ss
adc
adc
mov
in
sbb
xor
mov
or
nop
fnsave
mov
adc
sbb
mov
sarb
std
xor
cli
pop
mov
in
loopne
scas
ljmp
pop
jl
add
xor
lea
or
push
mov
in
mov
imul
add
jp
jbe
fisttpll
ja
pop
jne
mov
imul
repz
inc
out
sbb
adc
sbb
cmp
pusha
and
cltd
enter
insb
into
arpl
fucomip
pusha
leave
and
rcl
je
push
cmp
xor
pop
jns
cmp
add
mov
aam
inc
add
shl
scas
gs
test
iret
or
test
popa
arpl
cmp
negl
sbb
xor
inc
sarb
mov
fdecstp
icebp
mov
dec
enter
std
adc
arpl
sbb
jle
sub
mov
lcall
pop
jmp
ds
orb
or
jg
jbe
in
or
mov
push
aad
incl
rorl
mov
dec
adc
push
xor
hlt
adc
gs
and
adc
cmp
outsb
dec
inc
jae
inc
outsb
push
outsb
loopne
outsb
enter
sahf
mov
mov
out
in
pop
lret
outsl
add
inc
and
push
xchg
in
cmp
or
mov
pop
sbb
hlt
adc
jge
dec
xchg
rcr
pop
sub
mov
negl
inc
popa
pop
mov
sbb
jb
jo
les
repz
adc
xor
fldenv
fidivs
mov
lock
ret
adc
and
mov
mov
dec
mov
jmp
push
in
mov
push
jnp
loopne
int
ds
ffree
loopne
es
dec
xchg
ss
inc
dec
jae
loopne
loop
lea
inc
or
fistpl
outsl
and
and
mov
push
push
movb
jns
cwtl
or
ljmp
jecxz
cmpsb
xchg
jl
xor
sbb
and
stc
addb
xor
push
cmc
into
stos
mov
ds
ja
pop
sbb
out
popa
in
xchg
adc
inc
push
fsts
inc
pop
ltr
or
es
and
or
inc
in
mov
push
sti
insb
imul
nop
push
xor
imul
data16
arpl
loop
cmp
xchg
inc
push
and
test
lret
shrb
int3
pop
jl
jbe
jg
push
dec
shlb
popa
addr16
std
out
lods
sub
loope
xchg
adc
and
mul
xchg
out
jg
and
bts
jp
sbb
xchg
adc
insl
lret
aas
imul
push
mov
inc
inc
mov
lea
fnsave
mulb
iret
jo
movsl
adc
push
mov
sbb
adc
stc
xlat
jmp
add
xor
add
cwtl
pop
es
aas
lods
loop
cmpsl
outsb
add
lods
xor
pop
dec
inc
mov
push
inc
jno
xor
sbb
sub
fs
cli
psubsw
cmc
cs
mov
xchg
push
lret
test
sub
mov
mov
dec
in
pop
dec
lock
loope
fstpt
cwtl
pop
ja
push
sti
shlb
cmp
inc
test
mov
pop
pusha
mov
cs
loop
mov
sarb
hlt
jnp
mov
das
mov
sbb
repz
inc
adc
or
adc
int3
mov
pop
mov
cld
iret
sub
lret
dec
sbb
sub
stos
test
cwtl
push
jns
push
repnz
cltd
or
dec
jecxz
shl
cltd
xchg
mov
inc
and
or
adc
arpl
jne
sbb
cmp
fisubrs
fwait
arpl
inc
inc
cmpsb
inc
xor
jb
test
aas
dec
icebp
jle
push
iret
and
pop
mov
call
inc
cltd
rorb
push
arpl
adc
jae
notb
inc
cltd
adcb
lretw
jb
mov
in
push
jp
add
jns
jb
jbe
mov
dec
mov
adc
xchg
add
shll
mov
divb
jae
jnp
push
iret
ror
stos
jle
add
adc
ret
push
and
enter
mov
cmp
test
jg
pop
xor
jle
cmp
loop
xchg
dec
out
je
lahf
pop
jnp
push
icebp
loopne
mov
inc
and
jb
mov
out
mov
jae
sti
sbb
lock
push
sbb
cmp
es
jmp
data16
leave
rcrb
sbb
or
lret
add
push
mov
mov
divb
imull
shll
mov
push
xchg
jmp
mov
mov
dec
jge
call
cmc
rorl
enter
jne
rcrl
test
dec
sub
mov
add
hlt
push
les
out
and
xchg
dec
enter
dec
xchg
sbbb
mov
shl
mov
loope
mov
into
ret
mov
outsl
sub
xor
repnz
imul
shll
rcrl
test
jno
jno
jns
mov
clc
mov
shlb
jae
or
mov
or
jge
mov
out
jp
jns
out
stos
rcr
pop
mov
cmp
cmp
pusha
xchg
and
fmulp
push
lea
daa
mov
pop
sbb
cld
adc
jge
imul
mov
cmpsb
xor
inc
jo
loop
ja
dec
notb
or
lods
jecxz
inc
iret
std
incb
sub
neg
and
sbb
and
dec
adc
jbe
dec
push
jb
and
rcll
sbb
loope
mov
ds
rcl
push
adc
xor
leave
xchg
insb
xchg
cmp
cmc
ja
in
enter
imul
mov
test
ja
push
and
in
xchg
xor
push
pushf
dec
les
pop
sbb
sub
std
mov
lahf
mov
dec
loopne
add
pop
stos
ja
and
inc
pop
js
pop
mov
adc
aad
or
cli
lods
pushf
dec
inc
mov
or
dec
mov
push
out
mov
sub
xchg
dec
iret
inc
and
out
out
les
push
cwtl
lret
mov
lahf
jl
jns
sbb
sub
xchg
pop
inc
dec
movsb
fdivl
ds
mov
pop
enter
fs
out
iret
imul
xor
add
add
les
lds
jo
jae
daa
imul
mov
int3
xchg
inc
mov
push
cs
cld
cltd
pop
sub
push
push
or
pop
mov
push
pop
es
mov
xor
mov
mov
inc
push
xor
sbb
fwait
sub
jmp
arpl
sbb
insb
mov
mov
push
lds
insb
sub
dec
inc
das
pop
dec
dec
sbb
ret
jno
call
dec
cwtl
add
outsl
sti
inc
add
lock
sub
cmp
out
cmpsl
cmp
arpl
mov
inc
daa
mov
sbb
xor
pusha
push
mov
pop
inc
jmp
pop
jnp
fsubl
clc
cld
imul
orl
sahf
call
leave
imul
and
jp
mov
add
push
mov
sbb
jl
loop
popa
jg
dec
rorb
jns
mov
cmp
sbb
adc
mov
push
sub
stos
insb
push
jmp
jl
inc
das
lcall
jnp
dec
jo
xlat
in
or
add
out
mov
into
add
mov
or
fiaddl
mov
test
cmpsl
jae
pop
mov
daa
daa
js
rclb
push
xlat
xor
dec
mov
in
lods
repnz
push
cmpl
outsb
mov
push
push
mov
pop
test
sbb
sub
nop
jge
orb
jg
push
cmp
xor
jne
out
jecxz
dec
jmp
cltd
mov
push
outsb
in
stc
mov
das
mov
hlt
sub
outsl
dec
fcmovnb
xchg
cli
pop
mov
mov
test
jnp
out
pusha
into
mov
stc
cld
popa
inc
dec
orb
into
adc
js
pop
cmp
insb
push
add
mov
sahf
mov
jl
insl
pop
pushf
pushf
sbb
mov
std
push
inc
enter
adc
inc
lret
sub
jg
fsubrp
je
icebp
dec
mov
shll
push
push
imul
out
add
popf
adcb
mov
loopne
cmp
in
push
pusha
es
jo
int3
xchg
sub
test
add
push
lea
lahf
pop
jbe
jl
sahf
int
lock
fwait
sbb
mov
aad
jns
pusha
movl
and
mov
or
iret
iret
xor
cmp
fsubrl
inc
inc
dec
mov
dec
cmp
aas
inc
stos
mov
xor
pop
lahf
testb
push
test
xchg
out
in
aas
iret
mov
popa
ret
cmc
pushl
gs
sbb
inc
sub
mov
add
push
pop
stos
inc
cmpsl
hlt
inc
pop
and
push
add
cmp
sub
test
sti
xchg
addb
push
std
adc
jb
out
jl
add
or
dec
mov
push
xchg
mov
stos
mov
xor
add
jecxz
add
test
pushf
sub
push
inc
and
dec
or
adc
mov
ss
das
ja
mov
js
jl
sarl
push
aam
or
lock
xlat
addr16
push
in
pmulhuw
add
lahf
jge
inc
sbb
ja
andl
jg
add
adc
lods
ss
lock
dec
divl
je
or
xchg
or
xor
out
test
jp
or
pop
pop
roll
aas
dec
push
or
push
lret
push
cmp
jb
cmp
cmpsl
dec
sub
push
cmp
rcrb
lcall
repz
jmp
adc
filds
inc
mov
xor
dec
cmc
notb
test
mov
das
cwtl
push
mov
pop
test
pop
cmp
jnp
dec
mov
bound
jae
xchg
call
int
lea
stc
xor
inc
shll
fidivrl
push
sti
mov
mov
pop
mov
addr16
enter
mov
jl
mov
out
mov
add
or
add
mov
je
fstp
jb
lods
jecxz
ret
jecxz
pusha
jmp
mov
jbe
xor
into
add
sbb
inc
adc
and
stos
mov
jmp
xor
or
inc
mov
mov
jo
sbb
shrl
and
pop
sbb
pop
push
sbb
jmp
jns
mov
lcall
cmp
pusha
stos
jns
xchg
cmp
leave
dec
in
xor
les
js
push
mov
or
add
movsb
clc
and
and
in
add
mov
sbb
xor
icebp
sarl
addr16
loop
stc
sti
mov
js
mov
pop
cmp
mov
gs
push
mov
lods
sub
dec
or
hlt
fsts
daa
mov
cmp
jg
lret
ret
mov
sub
loope
sbb
into
insl
mov
add
mov
jb
sbb
add
das
cld
sahf
std
cltd
sbb
dec
or
pop
cmpl
lods
subb
mov
mov
dec
cmpsb
or
pop
inc
decb
ljmp
jg
push
out
popa
pop
pop
loope
stos
cmp
or
scas
xor
inc
mov
push
mov
or
scas
mov
sar
lock
xor
subl
aas
dec
lds
das
out
popf
sbb
je
mov
sbb
pop
xchg
std
lea
movsb
outsl
cmp
cmp
adc
mov
insb
in
mov
push
and
shrb
fs
jns
mov
adc
test
adc
stc
mov
pop
xchg
andb
arpl
dec
mov
lret
or
imul
dec
dec
xor
xor
adc
sub
adc
mov
jnp
test
ret
arpl
idivb
mov
xor
mov
xor
sti
les
divb
dec
jg
xchg
cmpb
adc
xchg
inc
scas
mov
push
out
pop
loope
enter
shrl
push
sti
cmp
aaa
sbb
orl
insb
pop
mulb
adc
xchg
adc
decl
js
adc
dec
lea
mov
and
fimuls
sbb
dec
jle
sub
fs
lret
pop
inc
mov
push
cmovl
bound
popf
mov
xor
outsl
mov
pop
ficoml
lds
mov
ljmp
pop
xchg
stc
dec
jp
ret
pop
dec
inc
mov
cmpsb
jne
xchg
and
inc
popf
lcall
sub
jo
shl
mov
test
sahf
push
mov
sbb
cmc
sbb
sbb
mov
ljmp
dec
pop
ficomps
fsubr
push
xor
gs
pop
inc
gs
clc
lods
je
push
fsubl
lahf
or
rorb
push
lock
inc
popa
add
and
ret
clc
loope
sbb
aam
outsb
push
insb
das
icebp
mov
xor
cld
push
js
xor
add
sub
and
xchg
adc
sbb
xchg
or
pop
pop
push
inc
cmpl
sbb
mov
pop
notl
adc
cmp
dec
insb
or
iret
mov
pop
dec
mov
into
dec
dec
mov
shll
lret
or
adc
stos
mov
push
xchg
mov
xchg
mov
xchg
repz
movsb
add
xor
adc
inc
call
subl
les
mov
hlt
repz
xchg
push
mov
mov
test
enter
mov
jnp
testb
std
nop
jnp
mov
movl
push
repnz
and
jo
inc
nop
mov
or
stc
xlat
xchg
push
mov
movsb
cmc
cmp
xchg
repz
mov
mov
lahf
pop
pop
sub
lock
jle
loope
mov
push
add
xor
repz
inc
xchg
mov
push
aam
clc
imul
push
in
out
flds
jo
or
jnp
in
sub
shlb
pop
or
push
cmp
repnz
cltd
or
add
jb
je
sub
pop
push
xor
cli
dec
sub
test
push
ret
mov
or
cs
add
dec
mov
fbld
mov
sbb
pop
push
cli
cltd
dec
mov
loop
jbe
insb
jg
vmaxpd
add
or
mov
cmp
add
jb
add
int
cmp
push
xchg
out
jbe
cmp
fisubs
sbb
testb
adc
pop
inc
xchg
mov
test
cli
sahf
sbb
rcrb
sbb
mov
cli
leave
in
and
and
fdivrl
loopne
ja
mov
xor
mov
imulb
psrlw
jne
addl
out
loopne
or
cs
mov
aas
jb
xchg
in
add
sub
cmp
jmp
in
or
mov
nop
ja
rol
pop
push
sbb
daa
cmp
loope
out
insl
ds
xchg
stc
test
nop
rcrl
es
mov
dec
stos
lds
add
cmpsl
or
je
fs
xor
add
sub
push
aaa
adc
loope
sahf
push
push
xor
pusha
insb
bound
add
movsl
xchg
in
dec
jmp
es
xor
pop
jno
mov
and
ret
inc
sub
mov
loope
jle
flds
adc
adc
mov
lahf
test
dec
push
les
sahf
sbb
outsb
jns
loop
push
sahf
outsl
push
adc
push
test
int
xchg
pop
jg
stc
mov
test
dec
xchg
rcrb
ss
movsb
icebp
clc
and
inc
dec
shrb
ret
out
rcr
mov
ja
push
pop
xchg
cmc
loope
enter
or
fstps
and
stc
sbb
mov
or
push
push
mov
mov
mov
push
ljmp
outsl
xchg
es
ret
and
jnp
aam
xor
mov
test
xor
adc
popa
arpl
jmp
jmp
sbb
xor
xor
lcall
mov
mov
mov
pusha
out
push
gs
xchg
aam
mov
pop
fldl
cmp
in
out
scas
add
iret
imul
fucom
jmp
add
aad
sbb
and
sub
mov
inc
xor
cmp
or
arpl
push
dec
lcall
sbb
js
sti
roll
pop
and
test
addr16
sub
jns
mov
inc
lcall
outsb
insl
hlt
add
mov
lahf
cmp
or
push
cmc
jns
add
ja
les
imul
sub
addr16
mov
sub
xor
mov
adc
roll
cvtps2pi
fsubrs
mov
loopne
inc
fstpt
test
sub
rorl
aas
add
sub
sbb
push
inc
fdiv
repz
push
scas
sbb
sub
sbb
xchg
scas
rclb
iret
std
mov
push
in
cmc
das
mov
mov
int3
out
adc
mov
jle
xor
scas
dec
stos
lahf
xor
push
inc
mov
notl
inc
out
sbb
cmpl
insb
pop
or
imul
call
test
pushf
insb
fwait
lret
andl
cwtl
sbb
std
repz
icebp
ds
popa
mov
cmp
into
add
dec
subb
cli
inc
inc
adc
mov
sbb
mov
mov
jmp
xor
mov
adcl
cmp
and
xor
push
sahf
shrb
sarb
jae
pop
mov
rcr
rclb
mov
inc
xchg
push
or
cpuid
stos
mov
cmp
add
pop
aam
in
mov
or
or
sbb
icebp
adc
sbb
mov
js
add
cli
lsl
pop
stos
sahf
adc
mov
in
adc
cmp
mov
mov
mov
push
or
into
dec
rcrb
call
in
fwait
negl
mov
sub
adc
cwtd
jae
imul
lret
mov
loope
sub
arpl
add
pop
les
mov
push
jg
push
and
mov
pop
mov
sbb
push
inc
sbb
call
dec
xlat
loopne
clc
mov
shlb
fwait
test
mov
mov
pop
in
jmp
adc
addl
push
loope
mov
mov
xor
aad
jne
outsb
pop
into
add
cmp
push
jmp
and
sbb
lret
cli
sub
jne
jp
pushf
pop
mov
cmp
aad
cmp
and
in
mov
movsb
push
push
dec
clc
jne
insl
sub
or
rorl
pop
cmpsb
jle
fcomip
jne
or
cmp
sbb
add
cli
dec
or
push
shrb
mov
jmp
dec
mov
sbb
aam
dec
sub
xchg
xchg
sub
dec
cmp
jae
scas
pusha
test
sub
mov
daa
mov
stos
lods
dec
cmpsl
dec
loopne
or
sub
nop
add
inc
and
pop
xor
rol
fstpl
ja
pop
ljmp
rcll
sub
pop
mov
push
pop
fs
cld
fsubs
pop
sahf
loopne
decl
sub
outsb
repnz
js
stc
cmpsl
shl
push
popa
or
inc
mov
insb
inc
mov
add
enter
js
mov
fistpl
push
negb
testb
lock
repz
mov
and
test
aas
stc
push
and
ds
sti
pop
mov
push
push
mov
inc
jp
and
inc
adc
rorl
fstl
inc
negb
in
cmp
cmp
adc
loope
cli
xor
adc
mov
popl
xlat
iret
mov
rcrb
and
imul
sbb
and
jecxz
mov
aas
mov
or
jae
mov
sub
dec
mov
pop
xor
mov
xor
imul
dec
mulb
jge
rol
mov
and
sub
cs
aaa
in
fwait
xor
arpl
pusha
in
jbe
adc
dec
enter
mov
sti
imul
push
lock
arpl
mov
sbb
stc
push
fwait
xchg
insl
cli
xchg
loop
sbb
imul
movsl
arpl
fldt
mov
imul
xchg
pop
fisubrl
mov
lods
mov
lods
iret
aad
mov
scas
addr16
and
cmp
pop
xchg
repz
push
inc
or
rcr
test
pop
dec
mov
jge
push
das
or
ljmp
pop
ret
fcomps
inc
cmpsb
jl
dec
addb
adc
inc
les
mov
cmc
pop
popf
inc
nop
adc
add
sti
inc
daa
jo
clc
test
inc
mov
push
shr
jb
call
adc
add
sbb
adc
mov
add
dec
cld
inc
test
sahf
or
pop
out
xchg
rcrb
xor
push
adc
iret
and
adc
adc
in
cld
cltd
and
dec
sbb
add
jecxz
movsb
mov
je
dec
lods
insl
jno
cmc
cmp
test
mov
lea
lock
call
enter
adc
sbb
cmc
and
pop
xchg
xor
sbb
sbb
pop
imul
push
xor
cs
in
sti
lret
jecxz
pushf
adc
add
faddp
or
jge
rolb
nop
js
adc
dec
cld
gs
push
test
pop
xchg
add
adc
mov
or
jb
jg
loope
int
sbb
cli
pop
stc
adc
stos
aad
inc
lods
push
loop
movsb
ja
jns
fsubrs
call
stos
jge
mov
mov
cmp
xlat
mov
push
fs
sub
dec
loopne
cli
add
insl
or
loope
arpl
cwtl
aaa
nop
pop
pop
inc
inc
or
cs
fwait
outsl
out
jge
fcomps
cs
mov
mov
test
fwait
mov
std
popf
call
jne
cmp
popf
in
stos
std
push
addr16
dec
add
and
insb
repnz
call
repnz
fcomps
test
mov
add
mov
lock
sti
cwtl
idivl
pop
lret
scas
inc
xor
xchg
fildl
mov
lahf
in
mov
icebp
outsl
mov
jge
push
sbb
or
std
mov
mov
pop
js
mov
adc
inc
outsl
jns
xchg
test
mov
sub
xchg
in
insb
xor
out
add
subb
xchg
arpl
pop
mov
sub
in
mov
jnp
adc
push
mov
jno
push
dec
mov
jl
sbb
cmpsl
cs
dec
lods
ljmp
pop
andl
popa
fwait
stc
ja
das
or
mov
repz
jne
ret
std
das
out
popa
xchg
enter
or
jae
cwtl
imul
fsubrp
mov
xchg
out
loope
mov
cli
or
inc
push
shll
mov
lret
inc
pop
push
push
fmuls
stos
lcall
insb
popf
inc
loope
pusha
negl
sbb
inc
jbe
das
inc
fimull
shl
cltd
mov
adc
xorl
int
fidivs
out
cmc
ss
pop
aam
loop
lods
out
sbb
sbb
arpl
loop
setp
fwait
sbb
icebp
out
not
jp
lcall
inc
loopne
cmp
inc
arpl
test
inc
mov
sub
adc
mov
ja
and
shr
xchg
jle
mov
mov
lock
rcll
movsl
dec
int3
add
cmpsb
fwait
inc
pop
dec
popf
dec
cmpsl
adc
sub
push
lahf
adc
shlb
and
xlat
clc
inc
sarb
sub
repz
inc
jns
push
lods
imul
rclb
dec
cmpb
push
xchg
pop
xorb
push
icebp
pop
sbb
jp
lahf
adc
mov
mov
add
stos
out
in
insb
xchg
pop
push
stc
fwait
and
adc
cmpsb
stos
stc
xor
je
or
mov
mov
pop
aas
inc
or
mov
xchg
test
xor
pop
push
lds
xchg
cmp
ret
fdivp
cmp
stos
mov
xchg
ret
ret
and
enter
lock
add
cmp
fwait
dec
lock
dec
cli
iret
cwtl
pop
or
in
xor
fsubrs
mov
adc
cmp
or
outsl
jp
jmp
fwait
popf
mov
das
lea
or
pop
popa
sbb
xor
call
leave
fcompl
mov
out
xchg
stos
dec
and
jno
jle
enter
cltd
pop
jle
and
mov
inc
pop
pop
jl
repz
mov
insl
xor
push
sub
je
inc
daa
js
xlat
stc
push
push
or
cmpsb
test
pop
cmp
xchg
mov
or
xchg
pop
jb
jle
xlat
dec
mov
cmp
movsl
cmpsl
inc
adcl
inc
and
jg
aam
stos
cld
in
pop
clc
jmp
push
mov
addr16
sbbl
cmc
xchg
jg
int3
loopne
push
add
and
scas
loopne
sub
sbb
gs
xor
and
add
ret
sti
fidivs
leave
cld
mov
or
dec
scas
lahf
loope
fildl
lock
sub
pop
out
mov
dec
adc
or
sub
enter
push
inc
cmp
mov
xchg
adc
inc
daa
out
icebp
pop
das
jl
mov
shrb
dec
mov
mov
and
sbb
mov
enter
jae
sub
xchg
out
jb
jge
and
pop
arpl
js
mov
jecxz
es
mov
lcall
dec
fists
lcall
leave
jl
mov
addr16
mov
push
inc
push
cmp
dec
sub
cli
movsl
push
std
cmpsl
adc
or
mov
inc
lds
gs
xor
add
xchg
adc
outsb
out
push
push
outsl
arpl
push
jbe
inc
lldt
out
mov
inc
sub
iret
cmpsb
out
inc
xchg
or
push
stos
add
pop
push
jmp
dec
push
test
fmul
je
jmp
fmul
les
movsl
mov
push
jns
lahf
add
adc
js
cmc
out
jno
sbb
aaa
xchg
loop
push
hlt
leave
mov
push
sbb
xor
jp
icebp
loope
sahf
icebp
inc
out
roll
popf
dec
call
xchg
cmp
mov
decb
mov
jbe
mov
iret
repz
ss
out
int
out
imul
std
insb
jp
push
and
fwait
popl
lret
fldl
jns
outsb
or
lea
mov
and
mov
jne
pushl
mov
fdivrl
stos
outsb
ljmp
mov
pushf
jg
xor
push
jb
cmp
xchg
and
sbb
cmp
int3
je
cli
in
mov
push
sbb
push
and
sub
pusha
repz
bound
rcr
popf
mov
cmpsb
push
mov
jl
stc
cld
inc
es
hlt
adc
inc
xor
out
in
pusha
pusha
call
cld
cmc
pop
inc
call
aas
xchg
mov
nop
mov
arpl
adc
ror
je
mov
mov
sbb
aam
pop
add
call
add
cmc
addr16
push
repz
or
cmp
sbb
add
mov
jbe
or
fcomps
jle
sub
mov
fidivl
pop
lock
mov
test
and
or
outsl
xor
push
cmpsb
add
movsb
xchg
adc
sub
cld
sub
mov
clc
cld
mov
adc
mov
clc
xchg
and
xor
insl
push
outsl
push
xchg
lret
ret
xor
into
xor
xchg
lret
dec
mov
xchg
push
xor
adc
cmc
mov
sarl
inc
pusha
js
test
mov
sub
sti
cmp
or
xor
add
jge
push
arpl
xchg
mov
jl
and
rorb
mull
sub
int3
pop
dec
mov
sbb
sahf
repnz
lods
mov
jnp
sbb
iret
cmp
and
cmp
xchg
and
les
aad
aam
enter
cmp
mov
push
fisttps
int
push
jl
pop
in
or
push
mov
and
dec
movb
jl
or
ss
xlat
cs
xor
jne
push
les
inc
movsl
bound
push
dec
mov
in
inc
dec
popa
mov
enter
inc
jb
gs
mov
popf
nop
iret
jge
sbb
pop
mov
hlt
mov
mov
leave
mov
push
adc
aas
test
aaa
dec
jp
xchg
adc
or
push
inc
rclb
fisttpll
fwait
sbb
and
lock
inc
mov
adc
ljmp
stos
jo
stos
adc
sarl
mov
icebp
xchg
push
movsl
adc
cmc
cltd
enter
sarb
testl
add
adc
cmp
ds
pmuludq
stos
insb
jns
sahf
dec
jns
daa
push
xlat
je
xchg
lahf
push
lea
cwtl
call
push
jnp
insb
data16
jg
aad
fucomp
dec
mov
adc
adc
imul
shl
pop
pop
cltd
test
sbb
clc
pop
jnp
mov
out
add
rclb
push
pop
cld
lret
mov
sub
xchg
cmpsb
jl
add
add
dec
aad
std
test
nop
or
sub
fsub
nop
popf
mov
movaps
mov
xlat
cmc
sahf
and
pop
jecxz
xlat
lods
in
mov
sub
push
or
mov
add
push
dec
inc
sub
push
mov
and
sbb
arpl
add
inc
sub
and
imul
or
cmpsb
sbb
cmc
in
mov
clc
sbb
sub
pop
sub
ljmp
ret
mov
jo
xor
jnp
cltd
sbbb
push
jne
dec
dec
pusha
leave
iret
or
pop
mov
push
shll
lock
movsb
test
lea
adc
lahf
fcomp
sub
xor
xchg
addr16
sub
inc
add
cmp
push
fistps
insb
jg
sahf
movzbl
jae
pop
adc
in
push
mov
xlat
stos
clc
xchg
mov
and
or
gs
or
inc
iret
xor
inc
popa
rcr
add
jmp
mov
cmp
cmpsl
scas
push
lcall
lcall
cli
test
int3
and
xchg
and
add
xchg
adc
xchg
pop
popa
push
sbb
sub
or
ljmp
push
jl
mov
ja
push
and
jbe
pop
test
pop
push
xorb
cli
push
dec
lods
and
push
push
lea
mov
cs
icebp
dec
and
mov
fmull
jne
add
icebp
mov
fidivl
push
loope
jno
mov
inc
add
pop
popf
push
sub
add
mov
sub
jbe
mov
ja
dec
pusha
xorb
xchg
adc
adc
bnd
lret
jo
jno
lret
mov
sbb
mov
or
out
sbb
mov
and
lds
js
fsub
or
mov
add
xorb
mov
push
lea
sar
mov
adc
xlat
imul
int3
lcall
pushf
xchg
fcoms
cmp
mov
loope
das
int
xchg
sub
mov
test
lret
imul
dec
cmpsb
stos
sar
xor
pop
jmp
in
rcll
or
pop
dec
movsl
adc
cli
dec
inc
push
pop
fcomip
dec
cmpb
pop
xlat
ffree
push
and
std
aaa
sbb
cltd
inc
popf
popf
cwtl
out
xlat
push
pop
sbb
adc
fs
lds
jno
ds
sbb
jge
pop
shll
fs
mov
pop
or
xchg
xchg
out
sub
roll
push
dec
cltd
push
xor
lds
cmpsb
xlat
bswap
pusha
das
int
and
popa
mov
xchg
dec
xchg
nop
sti
jb
dec
loope
mov
push
jmp
or
loopne
ds
push
jle
push
pop
imull
sub
lock
ficomps
push
xchg
push
jbe
cli
add
cmp
js
add
or
or
call
jns
dec
jle
out
adc
jb
or
cmpxchg8b
fcoms
js
sub
sti
jns
outsb
pop
push
popf
xchg
mov
mov
mov
adc
pop
outsl
mov
outsl
or
adcl
test
les
aad
rol
inc
push
mov
scas
stos
jmp
mov
shl
mov
jg
bound
jle
pop
lock
cmpsl
das
mov
lret
sub
into
outsb
adc
or
and
jbe
lret
xor
insl
xchg
mov
mov
cltd
mov
scas
adcl
inc
xchg
sbb
into
cmp
aad
out
adc
cmp
lahf
or
js
mov
cmp
jge
dec
test
jge
out
lods
loope
ljmp
je
push
adc
mov
inc
mov
dec
push
daa
outsl
inc
popa
and
loopne
jo
add
sbb
mov
lret
idivl
test
scas
lea
hlt
xchg
cli
mov
adc
pushf
into
lods
xor
xchg
es
notl
in
lret
and
pushl
outsb
inc
dec
loope
lods
pusha
xor
fmul
insb
pop
sbb
inc
out
xchg
das
hlt
adc
or
xchg
cmp
testl
add
rcl
or
dec
xor
lahf
test
loop
cmp
mov
pop
je
imul
xlat
add
mov
stos
out
jno,pt
and
mov
mov
sub
sti
lods
aad
rcr
xor
add
jmp
divb
xchg
jae
movsb
int
jb
jo
jle
cmpsb
mov
cmpsb
ds
push
lret
ss
ja
lret
mov
push
mov
aaa
sub
lcall
inc
cmp
mov
insl
cwtl
push
scas
add
test
push
cmp
out
and
inc
enter
mov
mov
sarl
xchg
cli
cmp
and
inc
or
dec
jge
push
add
test
xchg
or
push
pop
lahf
pop
xor
push
or
mov
call
push
pop
add
xor
ljmp
cmp
mov
push
das
cmc
inc
push
jo
xchg
xchg
sub
pop
pop
icebp
and
sbb
int3
or
add
jo
lcall
daa
add
ds
repz
push
cli
push
and
lret
xlat
xchg
int3
push
or
in
inc
push
cld
fs
jne
dec
xchg
mov
out
dec
pop
lcall
inc
icebp
jmp
dec
add
dec
ljmp
mov
mov
dec
push
dec
mov
outsl
sub
outsl
dec
xchg
and
fstpt
sbb
jmp
cmp
daa
fwait
pop
cmp
add
test
adc
dec
outsb
or
std
pop
push
pop
mov
in
rcr
flds
ficoml
std
fwait
mov
pop
mov
out
pop
sub
filds
inc
adc
popa
inc
fildll
mov
dec
stc
dec
cmp
adc
pusha
movsb
add
push
subl
lret
push
and
es
popf
int
or
pop
popa
inc
and
fs
imul
adc
and
push
sub
mov
loope
cmp
pop
int3
inc
cli
cwtl
mov
pusha
push
ljmp
xacquire
fsubl
sti
push
xchg
or
mov
mov
dec
lods
xor
inc
inc
imul
mov
arpl
fcmovu
jg
je
cld
fnstcw
mov
jo
push
aad
ja
pop
push
add
xchg
inc
stc
xor
jle
lock
or
mov
jl
jno
loopne
cld
mov
popa
inc
jb
std
mov
ja
scas
in
fildl
xchg
repnz
lcall
jp
cmc
test
or
cmp
dec
jne
pop
mov
ret
push
pushf
jle
sbb
lahf
lea
mov
stos
incl
dec
cmpsb
xchg
push
sbb
fisubrl
add
imul
jp
cmp
pop
dec
adc
jmp
xchg
fcomps
push
imul
mov
enter
and
pop
inc
dec
cli
pop
daa
out
addr16
notb
lret
and
sti
push
mov
sub
jle
push
nop
jecxz
and
out
mov
sbb
insb
push
jp
sub
jl
mov
in
scas
push
sti
inc
repnz
call
icebp
into
jbe
jnp
out
pop
rcl
jbe
js
pop
enter
inc
jae
shrl
scas
fisubrs
mov
aaa
into
loopne
pop
or
jl
cli
sub
sub
mov
add
iret
cmpsb
in
into
jae
rorb
inc
jbe
in
ljmp
insb
bound
xor
fbld
push
push
mov
inc
daa
movsl
push
popf
fdivl
je
fdivrs
repnz
jle
inc
add
dec
bound
adc
cmpsl
adc
out
pop
lods
push
dec
cmpsb
mov
das
ror
ss
cmp
sub
xor
jle
mov
inc
data16
shll
push
lea
or
jmp
clc
mov
in
mov
ss
in
sbb
lcall
mov
popf
xor
mov
sub
pop
or
scas
jne
pop
subb
mov
shrb
mov
jp
adc
or
imul
or
movsl
mov
aaa
jne
dec
jl
xchg
scas
cmp
xor
shlb
sbb
mov
stos
pusha
pop
movsl
xchg
imulb
jae
pushf
fdivl
les
insl
les
into
pop
repnz
mov
fwait
mov
loop
cmc
xor
les
aam
cld
mov
call
add
aam
lods
das
sub
addr16
sbb
push
mov
insl
mov
lods
sahf
test
pushf
xchg
dec
sahf
adc
lahf
jbe
inc
scas
xchg
jnp
lcall
int3
xchg
add
xchg
cmc
or
andb
clc
push
xlat
jl
mov
pop
icebp
ret
imul
and
daa
out
xor
out
and
mov
pop
inc
mov
mov
jo
push
es
xchg
ret
idiv
popa
jp
xchg
inc
imul
mov
or
cwtl
in
add
insb
mov
std
scas
cltd
lret
ss
mov
xcrypt-ofb
cmpsl
outsl
int
add
sub
inc
faddl
pop
ret
sub
xchg
and
inc
in
mov
popf
adc
sub
lret
mov
mov
and
sbb
mov
jns
cmp
into
mov
push
jb
sbb
cmp
mov
inc
iret
ljmp
fcomp
test
fcmovb
inc
push
movsb
enter
ss
push
movsl
fs
add
mov
xchg
aam
pop
pop
ss
xor
mov
dec
rcll
cld
in
fcomip
in
dec
shlb
lods
js
aaa
ret
mov
pop
or
inc
mov
cmpl
or
imul
xchg
int
xor
test
fwait
inc
mov
aam
out
dec
cwtl
push
inc
pop
fisttps
std
ret
sbb
xchg
jp
bound
nop
in
cmp
push
lcall
js
enter
shlb
ljmp
and
xor
mov
sbb
cmp
lea
loope
and
addl
cmp
cmp
xor
sbb
jnp
fsubl
hlt
mov
pop
xchg
bound
push
mov
lea
lcall
dec
lcall
cli
aaa
add
push
test
incb
stc
mov
push
mov
push
stos
vmovntdq
or
leave
and
iret
mov
shl
cs
dec
ret
xor
dec
in
testl
jecxz
push
xchg
daa
xchg
out
mull
dec
xchg
mov
pop
out
testb
pop
scas
mov
push
arpl
add
mov
push
mov
ljmp
xor
adc
pop
cmp
mov
mov
mov
pusha
adc
jle
inc
pop
add
aaa
jbe
pop
inc
jns
pop
dec
mov
sub
sbb
sub
movsb
add
scas
xor
mov
nop
mov
ja
pop
cmp
daa
fwait
mov
test
inc
pop
stos
push
mov
dec
test
repz
cltd
push
aam
fsubrl
pusha
lods
and
and
iret
lods
or
xchg
mov
movsl
fistl
sbb
or
mov
loop
popf
pop
dec
mov
or
cmc
adc
ds
insb
pop
fimull
add
cwtl
mov
push
xor
repnz
xchg
xlat
orb
sbb
mov
arpl
cmp
ja
jns
jno
in
dec
insb
movsb
mov
pushf
shll
inc
insb
push
xchg
xor
bound
call
mov
and
mov
ds
shlb
popf
sub
loop
adc
add
add
sub
inc
out
rclb
sbb
ljmp
insb
or
adc
inc
mov
push
scas
sub
xchg
or
mov
popf
data16
daa
int3
lret
jbe
jne
cwtl
std
xchg
dec
cmpsb
scas
and
adc
fbstp
pop
loope
sbb
std
adc
add
cs
jle
fwait
sub
negl
sahf
inc
data16
ror
mov
pop
push
clc
push
cmpl
rorb
mov
jo
ja
dec
pusha
repz
cs
das
loop
mov
cmpsl
push
mov
ss
icebp
adc
pop
mov
pop
jp
leave
mov
call
cmp
mov
inc
mov
dec
lcall
int3
push
add
sahf
xchg
cli
push
pop
fisttps
xlat
adc
cmp
adc
sub
loopne
xchg
adc
andb
sub
imul
aam
and
not
or
or
cmp
and
cwtl
jmp
and
pop
jp
xchg
mov
adc
sbb
mov
push
scas
cmp
push
dec
out
ret
rcr
jb
sub
xor
subb
das
cmp
arpl
mov
pop
xchg
cltd
sub
sub
ljmp
mov
xor
jno
js
add
dec
arpl
inc
ret
les
aad
sbb
int3
xchg
addl
sbb
push
mov
fimull
mov
addr16
mov
adcb
and
jae
push
out
push
pop
imul
aad
adc
nop
push
cmp
jae
dec
sbb
inc
iret
scas
jo
int3
repz
or
roll
les
dec
xchg
in
iret
outsl
jno
or
pop
dec
pop
push
jns
repnz
incl
repz
cmc
adc
inc
insl
xor
test
pop
cmp
inc
pop
jge
int3
push
xor
lcall
mov
xlat
sahf
push
inc
cmp
or
popa
fimuls
cmp
outsb
rorl
lcall
jmp
cmp
in
push
popa
in
movsl
xchg
stos
mov
xchg
mov
sub
std
pusha
sub
ljmp
push
shrb
shrb
xchg
int
pop
fnsave
adc
scas
xchg
testl
add
cmp
ss
daa
or
jae
and
cmp
ljmp
xor
into
paddusw
fnstenv
out
clc
pop
movsb
inc
sbb
pop
shrl
dec
fnsetpm(287
popa
shrl
cltd
loope
aam
jl
pop
ss
clc
pop
sbbl
outsl
cltd
mov
scas
lret
fists
inc
sub
movsl
xor
xchg
cmp
cwtl
and
ljmp
adc
jno
and
lret
adc
ljmp
fcomip
je
sahf
mov
lret
insb
and
clc
out
cmp
jnp
xchg
test
dec
sahf
scas
outsb
sbb
aaa
cmp
adc
mov
cmpl
cmpsl
cmp
push
ret
daa
inc
adc
sbb
inc
ss
out
ljmp
stc
call
dec
xor
adc
lods
leave
bound
push
mov
inc
jge
add
int
jmp
fnsave
mov
jmp
dec
stos
call
and
int3
jl
and
movsb
shrl
xor
push
mov
jle
movl
cmp
cmp
rol
sbb
and
xor
and
rorb
fisubrl
jecxz
lret
mov
fs
lea
inc
jge
mov
add
aaa
inc
mov
adc
xor
dec
into
push
adc
jne
xlat
mov
jno
pop
shl
into
and
fstl
pop
mov
or
xor
decl
pop
push
imul
cwtl
test
cmp
or
dec
movsb
iret
mov
or
xchg
add
pop
xor
mov
mov
cld
shlb
stc
push
in
stos
push
and
in
pop
in
mov
xchg
dec
das
xchg
push
mov
daa
out
out
jb
jle
cmp
mov
xchg
jp
icebp
xor
test
ret
movsl
test
sub
sub
cli
and
cmpsb
out
lcall
sub
pop
push
bound
out
aam
nop
sub
mov
xor
lds
xchg
in
push
imul
lods
mov
pop
sub
jo
adc
push
rol
sti
icebp
jge
loop
xchg
add
adc
loopne
mov
push
pop
and
pop
in
scas
push
insl
inc
mov
mov
jo
jne
arpl
mov
mov
jl
and
popa
pop
outsl
xchg
rorl
clc
ficompl
fidivrl
pop
inc
leave
xlat
iret
jp
rcrl
push
rclb
mov
stc
or
into
loop
es
ja
mov
ds
push
sarl
mov
cmp
shrb
pop
std
les
repnz
xchg
aaa
lret
andb
adc
mov
cmp
pop
push
scas
mov
fmuls
add
xor
add
inc
xlat
xchg
pop
std
and
cmc
cmp
ficomps
xchg
dec
pop
cltd
bound
mov
fisttpl
xchg
mov
adc
add
add
cmc
mov
mov
lods
pop
insb
dec
sub
jns
das
jbe
call
mov
pop
imul
je
fdivs
pop
bswap
mov
jne
fldl
mov
sub
movsl
inc
jne
adc
mov
jmp
xchg
push
dec
and
ljmp
xchg
jne
daa
cmpsl
cs
shl
pop
cmp
or
xchg
mov
shrb
xorl
incl
stos
iret
shrb
sar
jns
xchg
sbb
sub
sub
adc
in
into
shlb
sbb
lds
shr
pop
pop
je
xchg
cmp
lret
jg
mov
iret
pop
inc
loopne
xchg
cs
lcall
inc
dec
adc
xlat
clc
cmpsl
sub
jg
fbld
adc
mov
les
dec
in
jbe
pop
pop
imull
insb
pop
and
push
sub
pop
cmp
adc
rclb
pop
cmp
mov
sbb
jae
jge
push
mov
xchg
dec
xchg
icebp
jl
shl
cltd
mov
adc
mov
pop
or
inc
vhsubps
pushf
mov
adc
repnz
or
and
jae
pop
jno
imulb
test
lcall
stos
mov
mov
sarb
rorb
sahf
daa
aaa
sbb
mov
sti
aaa
out
add
jns
ss
xchg
add
int3
push
repnz
testl
sbb
fldcw
mov
mov
cmpsb
fcmovb
lods
xchg
add
xor
out
mov
xchg
add
fcomps
pop
sar
mov
xor
movsl
lret
leave
ds
xchg
ret
cli
xor
xchg
jg
inc
in
shl
inc
xchg
pop
push
std
and
add
push
sbb
in
loope
sub
mov
test
hlt
mov
int3
hlt
pop
lret
adc
or
ljmp
in
sbb
cmp
jae
or
xor
loop
loop
mov
stos
mov
scas
xchg
xchg
mov
lods
mov
rolb
jno
xchg
mov
nop
push
cmpsl
push
enter
gs
mov
jmp
add
rol
mov
mov
dec
or
jl
mov
test
out
inc
mov
push
mov
push
loop
pop
xor
cmp
mov
mov
in
std
div
jge
sub
add
cmp
test
push
jb
cmp
ret
lret
add
mov
fwait
push
ja
int3
and
xchg
out
addb
xchg
mov
xchg
and
js
mov
inc
mov
into
mov
mull
dec
mov
aad
mov
loopne
jg
leave
outsb
pop
push
mov
scas
lods
inc
inc
fwait
es
mov
out
outsb
inc
loopne
out
jne
notl
movsb
loopne
iret
or
and
jle
mov
popf
lods
loop
shrl
out
xchg
insl
mov
adc
mov
mov
pop
cmp
movsb
or
int3
pop
xor
mov
popa
sub
and
loopne
in
dec
mov
daa
mov
dec
sbb
imul
movsb
cmpsl
jo
fisubrl
or
out
push
mov
roll
jp
mov
cli
je
pop
dec
push
adc
dec
jnp
mov
push
test
xor
jmp
stos
jl
pop
mov
addl
dec
cmpsb
repz
fisubrl
mov
aam
push
scas
mov
xor
pop
dec
push
cmp
bsf
and
jo
push
lahf
test
mov
add
jo
mov
orl
adc
push
out
and
push
xor
ja
xorl
xchg
pop
adc
mov
mov
cli
scas
pop
pop
mov
notl
mov
mov
in
arpl
bound
jp
adc
sbb
mov
into
jne
into
cmc
cmpsb
into
mov
notl
repz
fdivp
loope
xchg
daa
sub
and
cltd
pop
movsb
xchg
mov
adc
jle
out
xchg
popa
pop
cltd
sbb
jno
popa
jne
or
cld
fmul
cmc
sbb
cmpb
stc
xchg
leave
jmp
repnz
cmpsb
jp
dec
adc
cld
xorb
jp
push
movsl
inc
loope
int
ret
adc
mov
shl
inc
jo
dec
sahf
aam
in
in
push
or
add
stos
push
inc
sub
loope
push
outsb
mov
xchg
fildll
mov
repz
movsl
icebp
hlt
xchg
jno
fucom
inc
push
pop
pushf
ja
sub
cmp
lahf
test
sbb
insl
mov
fbstp
cmc
xchg
or
xchg
cmp
cmc
pop
stos
movsl
loopne
jo
jb
mov
test
js
mov
adc
lcall
and
push
or
or
mov
ja
add
inc
stos
push
daa
jmp
sub
call
out
outsl
fucom
cmp
lds
xor
push
push
or
pop
sub
and
sbb
aas
insb
loope
outsl
mov
xor
aaa
outsl
ljmp
icebp
adc
sub
mov
mov
data16
cwtl
call
xor
cld
pop
push
inc
dec
xchg
aad
or
inc
sarb
sbb
inc
xchg
jo
or
pop
mov
out
daa
ja
add
hlt
ret
out
fstps
sahf
mov
and
sbb
sub
in
jno
mov
dec
sahf
xchg
or
push
lds
cmc
repnz
aaa
arpl
jg
push
cmp
fimull
and
aaa
xor
inc
lret
mov
cmpsl
pop
notb
sub
mov
jo
loop
addr16
and
and
outsl
cs
rcll
clc
in
jbe
push
inc
cmp
mov
mov
mov
out
mov
aam
pop
and
xchg
lods
std
popa
dec
inc
pop
icebp
es
dec
mov
icebp
in
loopne
in
xor
lahf
cld
fcmovnbe
mov
in
stos
dec
jl
mov
cwtl
mov
ljmp
in
mov
add
adc
mov
ret
mov
testl
rcll
xor
pop
sub
into
mov
pushl
inc
ret
mov
fisubs
lock
dec
mov
mov
and
push
loope
aad
pop
stos
mov
mov
adc
inc
cmp
jge
shr
les
inc
and
test
xchg
sbb
add
lret
push
ret
mov
out
or
sti
adc
push
incl
mov
add
push
sub
shlb
fsubl
popf
add
sub
bound
mov
cs
pop
insb
ja
mov
dec
popa
mov
or
add
sahf
in
in
imul
jae
or
xchg
icebp
cmp
dec
js
lret
scas
mov
into
scas
into
mov
and
roll
adc
adc
ljmp
cmc
mov
imul
adc
cmp
movsl
subl
pop
lret
dec
sbb
out
mov
leave
sub
sahf
push
insb
push
loopne
leave
pop
inc
imul
ljmp
test
mov
lock
add
popf
inc
je
insl
push
inc
xor
cmp
shlb
xchg
lds
mov
sub
dec
out
iret
xchg
sbb
sbb
sub
fadds
fdivs
jmp
cld
sub
adc
stos
insl
mov
fcomi
xor
test
push
fidivrl
mov
add
and
sub
sub
push
pop
cli
adc
test
pop
mov
mov
cmpsl
rcrl
lods
jns
dec
test
imul
rcr
push
jp
repz
sahf
test
ja
and
bnd
or
xor
addr16
jle
xchg
aas
cmp
movsl
cmp
dec
push
pop
pop
cmpsb
out
cmp
testb
push
rorl
push
pushf
outsb
int3
aam
mov
cli
push
mov
cwtl
cmp
add
and
je
dec
dec
pop
rorl
push
fcomps
fiadds
add
push
pop
daa
sub
mov
nop
inc
leave
shl
push
fcomi
add
in
mov
data16
ds
add
mov
jp
in
adc
pushf
cmp
inc
mov
push
notb
mov
mov
inc
icebp
mov
sbb
cltd
sbb
mov
xor
pop
push
pop
sub
pop
or
push
pusha
add
inc
aaa
repz
mov
pop
dec
xchg
ret
add
or
enter
in
cmc
pop
iret
movsl
idivb
out
in
or
mov
pop
inc
fwait
xor
pop
sbb
ret
xchg
in
sub
jae
pop
and
ret
fcoml
pop
icebp
mov
out
iret
in
xchg
scas
add
xchg
mov
adc
and
push
fadds
mov
mov
mov
sbb
mov
or
insb
je,pt
xchg
outsl
icebp
pop
jl
adc
outsl
sub
pop
or
imul
scas
push
adc
mov
je
data16
aad
mov
add
addr16
xor
and
cltd
jmp
push
ljmp
out
insl
test
popf
inc
jne
xorl
sub
add
fcmovnu
pusha
js
ljmp
add
jae
mov
shlb
push
mov
cmc
cmp
addl
push
roll
subl
mov
fists
stos
sbb
and
add
dec
xchg
pusha
pop
jno
in
repnz
xchg
push
rclb
jmp
mov
gs
jnp
sbb
outsb
out
lret
faddl
fldenv
popa
in
lret
inc
jae
push
movsl
push
and
adc
sub
pop
xlat
jge
xchg
fdivrs
or
inc
je
out
xchg
push
das
add
cmpsl
dec
mov
or
push
or
jmp
or
scas
lea
sbb
sti
jo
in
repz
jge
int
in
fadd
cli
xchg
in
in
xchg
sbb
pop
shld
cmp
lret
add
inc
dec
inc
call
mov
nop
shll
jb
jo
mov
aad
mov
lret
dec
adc
call
test
stos
std
das
pop
test
jp
mov
aas
imul
inc
inc
insb
pop
je
or
cmpsl
push
mov
dec
call
cli
shll
int
lret
inc
jmp
push
dec
sbb
ret
fbld
cmp
ja
sbb
stos
leave
jmp
inc
loop
out
cmp
int
mov
mov
nop
push
and
adc
mov
ds
and
jno
loope
aas
pop
stos
cmc
cmpb
je
sbb
xchg
push
jmp
mov
or
roll
sbb
xor
ja
aad
repnz
icebp
call
movsb
push
rcll
jne
xchg
adc
fadds
hlt
pushf
jle
push
pop
push
bound
arpl
xchg
shll
addl
push
cmp
push
dec
inc
xchg
arpl
in
push
push
mov
mov
loop
popf
js
xchg
lcall
int3
xchg
aas
mov
data16
ss
sub
xchg
or
test
push
xchg
lock
mov
mov
sub
aas
mov
xlat
mov
fdivl
jl
lods
stc
lock
inc
xchg
inc
fdivrl
in
pop
iret
nop
xchg
out
stc
add
sub
cmp
movl
cmpl
aaa
sbb
outsl
orl
loope
or
fucomi
loope
jae
enter
outsl
aaa
aas
pop
insl
popf
scas
push
inc
pop
xchg
loop
pop
test
jl
and
or
mov
cmp
xchg
fcmovbe
out
xlat
xchg
push
xchg
loopne
mov
mov
daa
cmp
and
mov
imull
cld
pop
mov
dec
fsubr
ja
jne
shlb
jmp
dec
mov
push
mov
xor
push
sbb
or
test
mov
stos
push
scas
pop
jo
decb
xchg
pop
dec
insb
add
or
inc
ja
std
dec
adc
jno
adc
es
lcall
sti
inc
or
cs
daa
inc
je
cmpsb
add
mov
in
jg
mov
xor
dec
jne
mov
fwait
hlt
mov
inc
adc
cli
mov
call
fisttps
je
sbb
add
or
mov
and
imul
movsl
das
mov
inc
pop
imul
adc
lret
mov
call
mov
je
popl
faddl
icebp
or
dec
aaa
shll
dec
mov
add
mov
ror
popa
inc
xor
sbb
lret
gs
lahf
in
pushf
ds
xchg
fimuls
push
mov
call
jo
cmpsb
aaa
popf
dec
adc
insb
test
xchg
hlt
fnstcw
cmp
repnz
daa
xorb
testl
jo
out
xor
add
mov
sub
inc
mov
daa
fmuls
xlat
jg
sub
add
push
push
out
lds
pop
inc
or
mull
mov
hlt
jecxz
fiadds
sub
je
sub
mov
in
js
fildll
jo
push
pushf
xchg
push
jle
inc
xor
loopne
jo
add
xor
sub
enter
sbb
xor
mov
lcall
dec
mov
xor
jecxz
stos
shll
loope
sar
adc
jne
in
mov
dec
push
push
add
xchg
and
imul
mov
sub
mov
inc
insl
dec
and
cmpsl
sub
push
or
xorb
ret
leave
test
mov
out
inc
xor
dec
stos
xchg
jns
pop
daa
pop
mov
xchg
push
pop
iret
in
int3
dec
inc
mov
mov
add
mov
or
jmp
add
outsb
rcl
xchg
lret
jmp
inc
push
cmpsl
arpl
fistpl
add
push
xchg
mov
sub
or
inc
shll
pop
add
add
push
or
sbb
imul
xchg
cmp
add
jbe
cwtl
ret
pop
enter
fisubl
mov
pcmpeqd
jmp
and
out
xor
xor
or
jbe
dec
iret
rcll
lret
pushf
inc
mov
cmp
mov
mov
inc
imul
lds
xor
stos
inc
jne
xchg
jae
pusha
ja
sbb
mov
roll
aad
pop
add
cld
dec
dec
fdivs
ds
xchg
dec
jnp
mov
ficompl
adc
sub
lret
out
jp
jo
hlt
push
jns
dec
jmp
into
push
rcll
sbb
dec
pushf
subb
fsubrs
or
mov
ja
fs
sbbb
clc
es
adc
mov
sub
inc
je
test
sub
int3
scas
sbb
cld
mov
test
stc
movsl
sbb
xor
push
shl
mov
nop
cltd
mov
fnstenv
cmc
fsub
dec
leave
fs
dec
int3
call
mov
pop
psrlq
xor
mov
movsl
pushf
pop
jmp
xchg
mov
jnp
icebp
je
add
or
aas
xchg
cmp
pop
in
jns
repnz
xor
and
repz
sbb
test
cmpb
pop
add
ljmp
mov
ss
dec
xchg
push
gs
mov
jb
cmp
jecxz
push
cltd
sbbb
mov
dec
jecxz
push
jmp
andl
fldl
lock
imul
inc
dec
cs
fwait
mov
mov
jecxz
mull
mov
aas
sbb
pop
pop
jne
push
push
xor
sub
push
or
add
nop
bound
mov
push
movsl
lods
jbe
mov
mov
cmp
ja
roll
xor
push
pop
test
add
sub
or
inc
imul
xor
stos
xchg
push
jle
jle
adc
and
jae
inc
out
mov
inc
bound
push
xchg
jno
lcall
in
out
shl
int
in
cld
aad
adc
fistpll
xchg
xchg
sbb
and
in
aas
add
sbb
push
mov
and
dec
inc
xchg
or
aas
xchg
jns
shr
adc
push
mov
xchg
orb
xor
imul
lcall
shl
bound
fsubrs
xchg
clc
adc
in
jo
cmp
inc
push
out
movsl
xor
jne
push
adc
fnsave
dec
test
mov
ror
xchg
add
outsl
mov
rcrb
gs
icebp
add
dec
mov
jp
imul
rorl
test
and
rorl
ror
sbb
pop
push
cli
movsl
and
jnp
xchg
sbb
xchg
lds
outsb
mov
pop
je
xor
insl
in
popa
mov
mov
inc
and
outsl
fs
lods
and
mov
push
das
ja
rcrb
xchg
or
pushf
mov
or
push
xlat
inc
ljmp
cmp
dec
out
dec
fcomps
mov
and
sub
aad
sbb
mov
xor
aaa
sub
xchg
mov
popa
adc
ljmp
dec
lea
out
mov
je
pop
sub
adc
or
inc
xchg
xlat
ret
test
adc
ja
std
push
sub
dec
out
shl
add
mov
into
dec
es
mov
insb
test
lcall
insl
movsl
arpl
cli
test
mov
fsubs
loopne
mov
int
and
push
inc
out
add
inc
testb
int
adc
push
filds
xor
xchg
sbb
loop
std
mov
loope
add
xor
sub
cmc
and
mov
inc
or
and
xor
cmp
pop
rorl
mov
adcb
outsb
add
aaa
mov
pop
or
add
icebp
daa
jp
sar
xorl
xchg
mov
cmp
popf
sbb
xorl
and
mov
jg
imul
das
sbb
out
data16
in
sub
aas
sub
mov
push
xor
sbb
push
jae
mulps
pop
out
or
mov
jge
push
sbb
aad
dec
push
pop
and
and
mov
out
push
movsl
add
add
xchg
scas
cmp
lahf
sub
mov
test
arpl
sbb
mov
mov
cmp
sbb
or
push
and
or
stos
movsb
jmp
pop
int
js
jbe
pop
les
repnz
inc
enter
jecxz
pop
mov
in
mov
rcrl
js
xchg
push
or
arpl
lea
in
std
jo
lods
xor
xchg
sub
cmp
iret
icebp
inc
inc
popf
in
push
sub
fstpt
ret
lock
mov
cltd
pushf
das
inc
sbb
mov
cmp
dec
jp
pop
dec
or
aad
jg
jae
inc
mov
inc
cmp
outsb
in
adc
jl
mov
es
rcl
mov
jg
dec
inc
icebp
test
jbe
xchg
push
jle
jle
shl
fldl2t
dec
sbbl
rol
jge
inc
cli
clc
loope
idivb
add
repnz
push
xor
xor
ss
sahf
pop
push
je
in
out
mov
fcomp
cmp
test
int3
xchg
shll
popf
dec
dec
dec
xor
and
sarb
push
jge
ss
sarl
pop
or
scas
mov
inc
sub
and
cmp
xor
xchg
int
sbb
addl
pop
push
lods
enter
adcb
jb
ds
fimull
xchg
xor
inc
mov
mov
push
mov
loopne
add
addr16
aam
push
mov
inc
sub
mov
test
add
pop
mov
xor
std
adc
adc
adc
mov
cld
mov
movsb
cli
dec
hlt
sbb
sbb
pop
sub
mov
mov
xor
movsl
push
mov
sub
test
cs
stos
imul
test
fnsave
out
mov
inc
cmpsl
inc
sub
enter
push
pop
pop
scas
out
sub
pop
insb
mov
lret
sub
pop
enter
outsb
ja
xchg
mov
adcb
xor
xchg
or
pop
or
test
out
cmp
sub
loopne
sub
sub
inc
ljmp
je
xor
push
xchg
and
test
push
add
adc
pop
jmp
inc
imul
jns
pop
cld
cwtl
ficomps
xor
mov
test
add
sbb
xor
dec
pushf
or
cmc
xchg
cmp
dec
je
and
cmc
push
push
mov
push
pandn
push
pextrw
mov
stos
ljmp
gs
mov
cmp
pop
andl
int3
in
jp
aad
mov
sub
xchg
mov
test
lock
jmp
call
mov
lods
fbstp
cmp
out
jo
xchg
mov
call
das
lahf
sbb
and
scas
cld
xlat
push
out
mov
ret
les
mov
adc
stc
out
pop
sbb
dec
jge
bound
pop
cs
mov
jg
push
and
call
adc
lea
orb
test
and
into
cmp
cmc
xlat
mov
mov
out
cmp
lock
cmp
push
push
insl
mov
cltd
aad
cmc
movsb
and
es
and
call
clc
dec
out
les
mov
div
jbe
jle
sbb
mov
insb
leave
cmp
aam
lret
cltd
lds
mov
xchg
test
xchg
sub
lds
xor
xor
xor
cmp
repz
push
xchg
xchg
jnp
test
ja
popa
stos
xor
push
jmp
repnz
push
pop
pop
dec
mov
mov
in
decb
ljmp
mov
pop
fmull
in
int3
or
addl
out
mov
push
xchg
jae
cmc
and
ret
out
jl
and
inc
jns
mov
or
sbb
movsb
cmp
inc
sub
shrb
push
out
inc
es
adc
push
mov
shll
xor
cmp
lcall
cltd
sar
push
test
push
pop
fs
mov
scas
mov
out
pop
jnp
enter
add
or
rclb
and
mov
fildll
xor
das
cmpl
mov
sub
xchg
imul
push
mov
loop
pop
xor
pusha
push
mov
test
pushf
ret
inc
push
addl
sub
stos
sbb
popl
and
movsb
mov
xor
push
push
in
mov
push
aaa
orl
mov
cmp
inc
xchg
sbb
stos
xchg
cwtl
mov
mov
adc
jge
in
pop
push
mov
mov
jno
jmp
sub
cld
sub
adc
aam
xor
jne
int
scas
loopne
into
test
call
cmp
xchg
push
mov
outsb
pop
enter
pop
jmp
dec
dec
test
mov
xor
dec
clc
fimuls
push
mov
imul
add
pop
xchg
fwait
mov
cltd
xchg
outsl
roll
out
push
sbb
outsl
das
repnz
popf
lret
sub
jne
adcl
stos
pop
inc
mov
push
iret
sbb
ds
pusha
cmp
mov
sbb
aas
xor
ljmp
add
jbe
movsl
sbb
adc
mov
bound
popf
push
popf
ret
adc
es
sbb
js
shlb
lahf
cltd
jge
div
repz
xor
call
mov
cltd
cld
out
nop
out
xor
add
jg
adc
jle
jp
rorl
pop
arpl
popf
orb
dec
mov
mov
adc
cmp
popf
sub
mov
add
lods
xlat
dec
flds
jl
lods
push
lds
outsl
lods
cmp
adc
dec
dec
lock
cld
lret
negl
jecxz
or
or
mov
pop
mov
push
pop
int3
out
xchg
push
add
add
in
sahf
int3
pushf
push
xorl
test
sbb
lahf
add
out
clc
loop
ficompl
push
fsubs
mov
lds
inc
fbstp
and
lds
aas
rcrl
cmp
mov
add
daa
sahf
push
inc
outsl
sub
and
jne
inc
ljmp
lods
test
mov
cmpsl
sub
dec
shrl
mov
mov
stc
sub
push
add
push
into
cld
and
movsb
and
ret
and
xorl
cmp
mov
mov
rolb
pushf
cmc
test
ss
test
push
inc
add
adcb
ror
nop
mov
lea
mov
enter
xchg
out
lods
xor
push
jb
mov
sbb
add
arpl
jge
je
jae
jo
xchg
mov
mov
and
int3
xor
push
push
clc
push
lret
push
mov
xchg
mov
mov
push
bound
stc
and
adc
popa
sub
push
jno
out
xor
mov
jmp
sbb
xchg
xlat
or
xchg
or
or
fwait
xchg
out
jg
adc
sti
cmc
mov
testb
push
shll
xchg
test
shr
jl
sbb
faddp
in
sbb
insb
imul
repz
in
sbb
aad
sti
ljmp
loop
jmp
xchg
sbb
inc
inc
sub
shlb
rorl
lahf
pop
sub
mov
add
fnstcw
shr
in
cmp
ja
fs
loope
pop
push
push
push
adc
sahf
xchg
outsl
push
sbb
cmpsb
sub
cmp
ret
jge
leave
fildll
add
or
mov
jne
add
clc
in
fwait
sub
jno
pop
lahf
shl
jne
jge
xor
aad
mov
sbb
cwtl
dec
ja
les
push
fcomps
ja
push
std
and
sub
or
mov
pop
or
inc
scas
jne
adc
and
js
push
and
pop
imul
in
xorb
scas
loopne
repnz
mov
dec
out
add
push
scas
lea
test
sub
cmp
call
pop
sbb
pop
popf
test
lret
rcrb
bound
xor
push
out
pop
or
xor
push
cmpsl
add
adc
mov
jno
enter
push
xchg
sbb
xchg
rcl
inc
xchg
push
mulb
in
nop
dec
ss
inc
mov
inc
fwait
aad
or
sub
xorb
mov
int
mov
gs
push
xor
sbb
rol
fnstcw
cwtl
enter
mov
sbb
negb
xor
mov
xor
call
inc
cmp
push
mov
in
xor
out
xchg
push
dec
pop
cmp
and
inc
sar
mov
jne
sbb
mov
mull
cmp
jecxz
lcall
mov
into
das
imul
iret
test
inc
test
sbb
xor
pushf
or
sbb
out
fsubl
mov
dec
data16
jmp
sbb
fsubl
add
jmp
in
mov
cmp
adc
js
loope
shrb
stos
jge
mov
xor
shlb
imull
pushf
push
into
mov
xchg
mov
dec
jae
xchg
les
in
inc
mov
rcll
dec
cmp
push
je
call
mov
daa
cli
inc
stc
dec
add
inc
std
inc
cwtl
mov
outsb
fstl
pop
xor
icebp
sahf
inc
ror
std
sbb
add
inc
popa
pop
rorl
adc
dec
movl
aaa
adc
repz
xchg
insb
inc
or
inc
imul
ja
push
es
sub
pushf
es
std
shrl
nop
cmp
add
push
iret
dec
push
sub
sbb
inc
or
aas
pusha
loop
cmpsl
pop
xchg
push
insl
sbb
aad
in
mov
out
out
inc
inc
xor
mov
popa
aas
xchg
stc
sbb
sub
jbe
or
insb
ja
push
jnp
cmp
loopne
jnp
in
push
xor
and
xor
inc
pop
cmp
jne
inc
xchg
mov
stc
and
lods
mov
ja
dec
jp
xor
pop
pop
xor
fcmovu
loop
das
xor
sbb
mov
out
daa
test
js
xchg
sbbb
test
arpl
fwait
add
cltd
daa
dec
repnz
in
sub
fstl
add
mov
fcmove
mov
or
sbb
mov
cmp
add
jns
fildl
cmp
jge
sub
gs
adc
test
pop
add
inc
movsl
pop
cmp
pusha
dec
ljmp
outsl
inc
mov
sbb
leave
cmp
and
nop
mov
je
adc
lods
push
jle
mov
jne
ficompl
dec
jnp
cmp
sub
sub
int
jnp
loopne
xchg
cld
xchg
out
or
pop
iret
jmp
orl
mov
cmpb
sahf
fwait
sub
sbb
orl
ds
cmp
fnsave
les
lret
jg
pop
jnp
xchg
loop
push
aas
das
or
sbb
mov
dec
or
dec
lret
js
mov
push
insl
test
pop
xchg
jo
js
fistl
sbb
dec
inc
out
mull
daa
fdivrs
push
inc
mov
pop
pushf
push
mov
or
mov
arpl
cmpsl
mov
mov
fnstsw
jns
inc
jmp
scas
jecxz
jp
mov
mov
in
fsubl
int3
movsl
stc
and
stos
xor
ss
enter
or
mov
js
fisttpll
sub
int3
mov
cli
inc
inc
daa
xor
lea
mov
mov
jns
mov
sti
cmp
pop
xadd
jb
rorb
dec
sub
repnz
invd
faddl
dec
cmpsb
inc
inc
rorb
push
cmc
mov
sti
outsb
sub
sbbl
push
sbb
enter
addr16
pop
and
sti
rcll
movsb
hlt
push
xchg
sbb
xchg
cmp
fmuls
push
and
in
mov
jle
or
jnp
aaa
nop
xlat
adc
xchg
test
sbb
cltd
xlat
std
int
in
out
cmc
push
ja
pop
xor
cmpsb
mov
jbe
stc
dec
pushf
daa
int
test
sub
adc
pushf
xchg
mov
add
test
das
sub
mov
insb
fdivr
inc
je
jnp,pt
repnz
loop
notl
mov
jne
rcll
cltd
jmp
lods
push
js
cmp
mov
add
out
pushf
ss
xor
outsb
sbb
cmp
sub
js
test
mov
cltd
shlb
testb
cltd
xchg
fisubrl
push
cs
dec
xchg
cwtl
dec
enter
fldenv
push
mov
xchg
mov
incb
aam
push
dec
rcll
adc
sub
and
xchg
and
rcrb
fs
sti
in
dec
mov
xor
jno
loopne
sbb
pushf
sbbl
mov
fs
shlb
add
dec
push
int3
cmpsb
fdivrs
loope
adc
movsb
loope
adcl
inc
pop
leave
xor
arpl
insl
jb
daa
lret
xor
outsl
inc
sahf
out
leave
inc
ja
notb
inc
jno
mov
or
push
cld
hlt
mov
stc
das
test
inc
andl
push
test
sbb
sbb
test
inc
and
sbb
jo
loope
sahf
mov
xchg
inc
out
std
mov
mov
insb
out
and
lods
bound
inc
test
in
fs
fistpll
add
push
add
bound
arpl
push
in
inc
and
in
lahf
scas
push
dec
xlat
test
cld
scas
frstor
rcrb
push
dec
sti
xor
mov
adc
inc
inc
xor
pop
and
fiaddl
out
fadds
ja
arpl
insl
enter
in
adc
mov
scas
inc
xor
imul
lock
mov
xchg
add
pop
aaa
es
or
pop
rorl
ds
dec
outsb
sub
cmp
test
fwait
repz
push
shll
scas
pop
loop
cmp
jns
cmpb
xor
inc
push
push
std
add
mov
push
ss
add
jb
roll
cmp
mov
lock
fdivrl
jbe
mov
enter
cli
repnz
pusha
les
dec
cltd
xor
dec
lods
mov
add
mov
adc
ret
adc
push
mov
lods
pop
and
sbb
mov
sbb
ret
mov
les
adc
inc
fidivl
pop
sbb
xchg
sbb
inc
nop
andps
cmp
add
es
sub
cmp
arpl
ds
pop
pop
sti
sbb
outsb
mov
lcall
lods
dec
and
and
insl
sahf
idiv
xorb
cli
push
int3
clc
cmp
sti
dec
inc
xchg
mov
mov
addl
sbb
xor
pop
test
push
rorb
xor
leave
shl
es
fwait
push
ljmp
xorb
jl
mov
sbb
or
or
aas
ja
or
test
add
rcl
jl
xor
adc
or
xorl
enter
wbinvd
jnp
cmpsb
out
loopne
add
nop
std
out
movsb
jecxz
inc
insl
imul
test
jns
sti
mov
xchg
dec
test
pop
test
xchg
shll
xchg
adc
and
arpl
dec
flds
rorb
fwait
mov
ret
mov
inc
hlt
jge
xor
mov
aaa
ljmp
mov
mov
jo
not
jns
iret
insb
das
stos
mov
push
push
pushf
or
xchg
jae
mov
shrl
adc
add
outsl
xchg
cli
pop
adc
jl
xor
mov
fstl
xor
and
mov
mov
adc
gs
dec
adc
decb
orl
pop
in
xchg
hlt
xchg
dec
gs
xchg
out
fs
cmpl
pop
push
test
sub
jl
or
push
mov
sbb
sub
sti
jbe
mov
and
inc
mov
push
dec
xchg
jae
cld
outsl
push
push
mov
pusha
mov
jnp
push
jp
sub
cmpsb
ss
fimull
arpl
sbb
bnd
mov
jae
mov
das
jg
loope
insb
sbb
ret
test
test
pop
mov
fisubs
int3
lods
orb
fisttps
jnp
fstpt
mov
fstpt
clc
cwtl
xor
adc
sbbl
gs
test
mov
mov
popl
leave
cmc
fnstcw
not
test
cmp
cmp
ret
add
hlt
add
dec
les
in
inc
aas
or
lcall
ljmp
adc
xor
ss
and
sbb
add
int
adc
js
pop
push
push
sbb
call
int
or
jmp
nop
dec
pop
pop
aad
sbb
mov
arpl
add
jp
push
pop
lea
stc
leave
mov
adc
and
lahf
negl
pushf
sbb
xor
mov
xchg
xchg
sub
cmp
divb
or
fwait
iret
mov
push
bound
pop
ror
repnz
sbb
xchg
adc
xchg
push
sti
inc
clc
and
jmp
lods
xor
movsl
inc
mov
adc
jno
jbe
shrb
push
repnz
xchg
pushf
int3
cmpsb
loope
out
shrl
push
daa
aaa
lahf
add
into
mov
dec
mov
cmp
pop
push
lds
hlt
jnp
push
ds
xlat
jmp
sarb
dec
repnz
out
enter
cmp
icebp
or
jl
mov
fs
in
call
jge
rorb
cmc
cmp
lcall
or
cld
mov
cmc
mov
sahf
ss
jle
cltd
xor
out
in
sub
fsubrs
dec
flds
lahf
sub
ret
jae
loope
scas
inc
mov
out
mov
add
mov
xchg
int3
incl
inc
push
movsl
negl
outsl
xchg
hlt
xor
aad
add
pusha
and
leave
cld
std
adc
jns
sub
or
adc
jp
xor
inc
test
jmp
movsl
xor
pop
mov
pop
out
je
dec
imul
in
pop
adcb
repnz
pushf
push
pop
cltd
push
mov
cmp
or
movsl
push
int
mov
into
lret
xchg
mov
xchg
jne
imul
es
std
sti
fmuls
cli
or
les
popf
mov
fldt
push
sbb
mov
jmp
push
dec
int3
shrb
cmp
sbb
mov
mov
xchg
push
dec
push
inc
ss
popf
hlt
pop
and
mov
in
es
imul
dec
cmp
or
jp
sahf
jbe,pn
jne
gs
out
jl
orl
xchg
mov
add
cmpsl
test
cs
pop
fs
jp
enter
andb
pop
xor
mov
inc
xor
mov
and
dec
pop
in
dec
add
je
leave
stos
push
xchg
ss
repz
in
divl
daa
subb
jb
cld
imul
in
jmp
out
and
lret
cwtl
lds
mov
lock
ret
dec
jecxz
jbe
mov
in
mov
inc
cmp
test
jne
les
nop
xor
es
mov
pop
adc
mov
and
push
jl
mov
shrb
push
push
mov
std
arpl
out
mov
aam
test
into
add
movb
popa
movsl
nop
push
rcll
dec
fdivl
loope
mov
out
int3
in
push
gs
xchg
cmpl
mov
cmp
das
or
lock
pop
mov
sahf
pop
xor
cmp
or
pushf
mov
jle
in
and
xor
mov
xchg
xchg
in
insb
sub
add
in
dec
into
cmp
je
xor
jbe
inc
loop
xchg
xlat
jb
sarl
push
shl
xchg
push
jne
pop
mov
shll
sub
je
xchg
dec
inc
cltd
out
push
fmull
jecxz
fs
sahf
aaa
add
mov
or
cltd
push
in
cmc
or
mov
dec
out
adc
aaa
fdivs
mov
or
das
arpl
pop
push
add
jns
out
addr16
popa
and
jmp
bound
mov
inc
js
add
pop
dec
lods
pushf
sbb
sbb
and
push
mov
jg
sbb
mulb
lahf
cmp
sbb
lods
jg
in
aad
cmp
mov
push
loope
loope
jo
and
or
or
adc
push
or
dec
or
jg
sub
sub
std
call
lret
lret
cltd
inc
cwtl
jno
ss
xchg
xlat
imul
movntps
sub
sbb
cmpsb
adc
mov
lods
icebp
mov
push
mov
rorb
mov
imul
push
scas
jge
stos
sub
popa
adc
push
scas
dec
jnp
je
xlat
sub
pusha
sahf
test
imul
orb
out
or
fsub
mov
mov
pop
cmc
pop
jo
les
outsl
arpl
cs
cli
add
rcrb
push
lods
inc
stos
fidivrl
lret
mov
pop
and
ficompl
out
adc
frstor
fwait
jmp
and
push
sbbl
and
pop
xlat
aaa
icebp
jg
adc
lret
mov
jmp
inc
mov
adc
aaa
push
lods
loopne
or
or
mov
cmp
mov
mov
jmp
icebp
ret
push
in
cmp
push
pop
add
adc
mov
mov
cmpb
dec
cmpsl
fs
idivl
and
jecxz
and
lahf
adc
adc
addb
movsl
shrb
testb
pushf
pop
mov
clc
popf
inc
js
xchg
mov
cmp
push
sub
mov
das
mov
pop
cltd
aad
jno
cwtl
les
jle
lahf
lret
and
imul
jecxz
jl
push
lods
insl
mov
fs
out
ret
divb
sbb
jbe
in
cltd
pusha
movsl
inc
clc
shll
mov
inc
pop
mov
and
js
sub
sarl
lds
push
push
insb
xchg
dec
sahf
dec
divb
subl
ret
sbb
mov
or
int
push
pusha
and
mov
xchg
dec
call
mov
lahf
mov
add
and
test
inc
aad
rclb
repnz
fnstcw
inc
push
and
aam
lcall
ljmp
inc
mov
mov
push
in
pop
jb
dec
sub
cmp
sbb
jb
jg
adc
dec
xor
xchg
movsl
adc
lock
adc
int3
push
inc
and
push
cmpsb
fadds
jne
add
xor
push
push
cmp
std
sub
pop
add
scas
xchg
xor
jp
or
xchg
aas
push
repnz
hlt
mov
cs
mov
addr16
shrl
stos
add
push
stos
pop
xor
jl
push
xchg
mov
adc
mov
push
cmp
mov
jl
dec
ret
jg
shll
and
movb
rcl
jo
ret
scas
pop
mov
jecxz
adc
rcr
mov
sarl
cltd
mov
mov
inc
pop
sahf
mov
mov
sbb
cltd
pop
or
mov
cs
xlat
out
push
aad
cltd
or
les
cmp
lahf
mov
sahf
pop
pop
mov
lock
mov
inc
push
clc
enter
push
xchg
or
fists
inc
inc
sbb
clc
cmp
call
dec
push
push
cmpsb
xor
mov
int
shl
out
jb
test
jle
sbb
lods
call
dec
mov
repnz
data16
ds
cmpsb
sbb
leave
movsb
jmp
iret
test
inc
xrstors
add
shr
lcall
daa
pop
daa
inc
jle
hlt
xchg
and
xor
stc
cs
lods
cmpsl
jb
inc
inc
add
ss
dec
std
adc
jnp
rcll
insl
mov
repz
add
dec
cmp
popa
aam
in
inc
nop
jp
sarb
xchg
mov
mov
pop
jbe
push
enter
jp
mov
cmc
addr16
jne
ds
xchg
es
push
and
sub
mov
jge
mov
xor
and
cli
outsl
fimull
shrb
mov
or
jo
adc
cld
push
push
cwtl
stos
inc
jmp
or
push
add
jecxz
jbe
fbld
adc
test
adcl
outsl
fwait
stos
adc
rol
in
jmp
jle
out
push
inc
mov
push
pop
mov
ljmp
negl
nop
add
push
fwait
adc
int3
not
bound
data16
jmp
in
cli
out
inc
xchg
pop
mov
loope
pusha
loopne
movsb
xchg
rolb
add
ror
lods
repnz
in
xchg
les
loope
pop
mov
lar
rorl
xlat
test
adc
add
mov
lret
out
xchg
lods
js
cmpsl
push
lock
sahf
jmp
adc
dec
sub
xor
push
mov
adc
insl
fwait
das
xchg
divl
dec
in
imul
xor
push
cwtl
xor
add
pop
mov
mov
rcll
mov
or
movsl
cli
in
jmp
and
cli
inc
lahf
rcll
jnp
jg
xor
xorl
xor
ficomps
fucomip
popa
or
xor
cli
cmp
xor
dec
or
push
imul
mov
sahf
gs
js
cmp
lret
xor
cmp
aas
push
adc
mov
shll
add
repnz
fdivrs
pop
mov
fadds
push
stos
scas
sub
jg
add
sub
or
fdivrl
push
jecxz
outsw
push
dec
or
xchg
mov
jne
mov
out
lea
and
mov
jo
push
jecxz
cmp
je
xchg
adc
nop
jecxz
cmp
adc
push
mov
push
jns
ljmp
lock
das
test
adc
add
fdivrp
inc
or
in
mov
scas
mov
cltd
and
stos
loopne
mov
dec
pop
pop
inc
mov
mov
mov
and
ds
jp
mov
mov
movsb
mov
shll
scas
xchg
das
sti
jmp
es
pop
jge
sub
cmp
jb
jmp
cmpsl
inc
add
xchg
insb
fists
mov
xchg
dec
aaa
adc
incb
fucomi
dec
sbb
inc
xchg
mov
repnz
jb
sbb
enter
lods
mov
outsb
sti
sub
push
lret
or
ret
push
xchg
in
add
mov
dec
mov
push
inc
repz
dec
movsb
xchg
sub
mov
adc
xchg
jnp
add
dec
push
jmp
lods
mov
jno
push
cmp
mov
cmp
repz
push
add
sub
into
rcrb
cmp
fsubs
repz
or
dec
xchg
jo
out
xchg
fcomps
add
push
mov
int3
fdivrp
add
int3
add
xor
test
pop
lea
dec
in
jmp
push
adc
add
leave
out
insl
jne
pop
mov
push
js
fldt
dec
iret
xchg
ds
xchg
mov
or
dec
xor
cmpsl
stc
xor
cmp
mov
add
je
mov
and
out
xor
lods
xor
lock
lcall
pop
cmpsl
push
mov
push
jne
inc
into
mov
hlt
mov
cli
mov
mov
jne
xchg
mov
insb
add
jp
adc
cmp
inc
push
fnstcw
push
mov
inc
sbb
push
stos
in
adc
jp
or
inc
rorl
insb
adcl
mov
test
into
outsl
xchg
dec
sub
arpl
movb
lahf
push
jmp
daa
cmp
stos
jnp
loop
mov
mov
fwait
repz
bound
jne
add
xor
idivb
mov
push
test
jnp
mov
pusha
pop
out
pop
jl
sub
mov
mov
jmp
popf
in
adc
mov
and
and
inc
addr16
icebp
clc
adcl
scas
test
jmp
ret
aad
jg
cmp
fistpl
mov
out
pop
xorb
test
pusha
sub
cmpsb
pop
lea
jp
xchg
add
ret
add
subb
daa
movsb
out
push
stos
and
or
cmpsl
fdivrs
push
in
lods
xor
mov
repnz
or
dec
xchg
mov
sub
inc
xor
jns
mov
gs
mov
leave
cpuid
mov
ljmp
and
jae
lock
addr16
pop
push
push
mov
and
sbb
jnp
sub
or
pop
filds
rcrb
push
mov
sbb
or
jl
pushf
data16
xchg
popf
xchg
mov
iret
mov
push
inc
fcompl
je
or
and
mov
adc
repnz
sub
es
test
adc
adc
mov
mov
jle
cmp
xchg
out
sbb
xchg
cs
dec
out
push
leave
mov
dec
cmc
push
xor
repnz
or
int3
jae
pop
sti
imul
cld
loopne
and
lods
push
lods
leave
mov
xchg
mov
mov
sbb
push
in
loope
mov
bnd
je,pn
out
ljmp
fstpl
or
stc
testl
loopne
test
mov
xor
cmp
dec
push
fstpl
jnp
scas
dec
add
and
mov
je
inc
or
push
mov
js
test
sarl
mov
mov
add
aad
or
jp
add
xchg
push
test
sbb
sub
lahf
lahf
xchg
cli
arpl
shrb
es
jecxz
sbb
enter
arpl
add
mov
add
sub
pop
and
in
push
lret
mov
repnz
dec
xlat
movsl
pop
shrb
iret
in
std
or
cmpsb
pop
cmovns
repnz
cs
adc
hlt
inc
pusha
gs
inc
lcall
cltd
push
add
fisubrl
ds
movsb
insl
lods
xor
add
cmp
rcrl
repnz
pop
inc
cli
xchg
fs
jmp
or
in
cld
jecxz
xchg
cwtl
cmc
push
xchg
dec
sub
adc
and
shll
xor
dec
mov
lahf
mov
fnstcw
lea
xor
sub
mov
lret
pop
decl
sti
mov
out
add
push
mov
and
jnp
jnp
pop
popl
or
push
mov
add
lcall
sbb
std
decb
dec
gs
lds
popa
xchg
js
xlat
faddp
xchg
aam
aas
fcomip
inc
lret
mov
es
mov
jl
inc
fdivr
int3
fwait
js
iret
fs
outsl
push
mov
mov
repz
icebp
arpl
pop
push
or
mov
call
loope
out
shl
mov
cmp
mov
pushf
inc
sbb
fdivrs
enter
push
adc
mov
repnz
cltd
fstpl
fdivrs
dec
sub
push
arpl
imul
aam
aaa
xchg
insl
pop
addr16
aad
loopne
pop
sub
mov
xchg
stos
jns
inc
xchg
rolb
xchg
fidivs
scas
sbb
xor
mov
pop
fidivl
call
sub
push
mov
data16
fldenv
outsb
dec
test
test
inc
js
sbb
push
fsubl
call
loope
and
sub
loopne
pushf
outsb
xor
mov
sbbl
sbb
shrb
mov
inc
xchg
push
pusha
jne
jg
push
dec
ret
jg
gs
mov
das
jb
inc
out
inc
add
iret
out
mov
sti
rol
je
jecxz
leave
inc
inc
mov
addr16
mov
push
or
mov
enter
add
nop
dec
cmp
adc
xor
in
adc
mov
test
push
xor
scas
fcmovnb
xchg
or
add
insb
jp
and
lock
mov
add
aad
insb
jne
sarb
push
int3
cmp
push
jae
mov
shrl
xchg
das
rol
mov
mov
loopne
xchg
ja
sbbl
fs
cmovp
inc
push
ja
push
dec
xchg
push
popa
mov
mov
and
mov
test
or
or
add
jmp
adc
mov
movsb
in
testl
ror
mov
dec
clc
pop
pop
cmp
jmp
sbb
inc
out
or
sbb
mov
test
and
dec
jb
pop
aam
addr16
pusha
cmpsl
add
mov
dec
xchg
stos
jp
call
js
sbb
lret
or
xor
mov
xor
stc
sub
imul
mov
mov
shl
ja
sahf
cmpsl
or
xchg
push
jne
mov
fisttpll
xor
imul
sub
int
add
stos
scas
repnz
aas
push
aam
xchg
xchg
fimuls
movsl
xor
jno
adc
and
shrd
cmpl
fistps
mov
sub
inc
dec
hlt
pop
out
pop
and
bound
xchg
cmp
cmpsb
xor
cmc
pop
dec
into
pusha
mov
hlt
dec
in
jnp
mov
adc
test
lahf
adc
mov
xor
je
lds
into
das
mov
mov
test
cmpsl
sbb
push
imul
or
sbb
lcall
test
outsb
xchg
sbb
popf
stos
cli
cmp
jbe
jecxz
cld
mov
movsl
movsb
leave
fs
cld
mov
sbb
ja
jl
aam
shr
outsb
cmpl
inc
rorl
cmp
add
int3
mov
push
popa
insb
data16
adc
push
sbb
sbb
in
shrl
pop
shlb
mov
enter
mov
roll
and
int
and
cmp
out
mov
push
or
shll
je
enter
stos
sub
nopl
jno
shll
lret
add
mov
dec
outsb
cmp
js
es
xor
aaa
adc
ret
test
jp
jle
jb
and
scas
cmc
mov
gs
nop
pushf
dec
scas
and
test
aam
movsl
xchg
sbb
sti
push
push
add
fs
dec
add
stos
xchg
mov
pop
inc
pop
fcmovnb
mull
mov
and
jecxz
bnd
pop
adc
rcll
out
stos
aas
xor
scas
mov
xchg
jp
fwait
sbb
pop
lcall
loope
push
inc
sbb
mov
cmpsb
lods
orl
out
shll
push
test
cwtl
arpl
fs
pop
stc
sbb
imul
sub
aad
arpl
mov
roll
and
sbbb
cmp
mov
cld
popf
add
push
push
push
out
mov
cli
stos
xchg
std
mov
jae
push
xor
es
push
std
jecxz
rorb
scas
les
mov
and
fistpll
add
inc
out
mov
or
test
push
jno
imul
imul
fadds
js
mov
xchg
pop
daa
rcrl
verr
aam
sarb
bound
loopne
bound
shr
adc
data16
xchg
inc
sbb
jecxz
inc
mov
ljmp
fdivs
or
mov
adc
aas
and
loope
lock
pop
mov
lock
mov
aad
call
scas
push
jp
jg
iret
repnz
mov
cwtl
inc
lret
mov
adc
lret
ficomps
int
adc
xor
enter
mov
inc
test
pop
arpl
ljmp
dec
popa
push
mov
mov
popa
aam
and
adc
jp
hlt
cmpsb
mov
mov
and
pop
test
fs
fdivl
pop
inc
loope
sbb
addps
jae
jns
xchg
jns
jo
fildll
lret
cmpl
bound
pop
ret
in
xor
jmp
enter
jge
xchg
shlb
addr16
out
out
pushf
push
xor
push
jmp
mov
pop
inc
sub
mov
push
cmpsl
ret
inc
insl
shl
cltd
fimuls
call
jg
cmc
xor
and
stos
push
daa
outsl
lock
icebp
data16
or
lahf
cmp
cmp
mov
xchg
repnz
hlt
and
data16
jae
mov
mov
add
xchg
mov
inc
fstpt
lods
xchg
xchg
mov
jl
mov
xor
faddl
mov
lahf
sub
or
add
jle
jg
imul
scas
adc
mov
stc
xchg
bound
test
unpcklps
push
orl
lret
mov
pop
jp
cltd
jg
sbbl
mov
ret
cmpsb
mov
frstor
or
jo
rcrb
bound
add
imul
xor
or
fisubl
loope
fdivr
mov
xor
sbb
mov
addr16
sbb
mov
adc
xor
lcall
mov
pop
sbbb
cmpsb
out
and
gs
xchg
sbb
mov
xor
aas
mov
mov
adc
push
mov
sub
cmp
ds
adc
ljmp
jmp
xor
adc
mov
xor
test
add
dec
push
out
movd
and
stos
adc
imul
xchg
jge
push
push
cmpsl
jl
add
loope
jmp
into
xchg
mov
mov
and
xor
fwait
mov
mov
pop
loop
sbb
aaa
mov
js
mov
pop
test
mov
and
sbb
roll
push
idivb
jb
nop
xchg
stos
sbb
xchg
pusha
out
das
lea
and
or
push
ds
jnp
xor
mov
jo
cmpb
or
lock
cltd
mov
sahf
dec
cmc
or
adc
cltd
fcompl
pop
ja
das
push
mov
ljmp
jns
adc
rcrb
adc
out
pop
ja
es
fmuls
or
inc
dec
out
mov
mov
aad
sub
pusha
addr16
ljmp
mov
test
mov
push
pop
xor
fstps
repz
or
bound
cmp
aam
out
scas
test
test
mov
and
movsb
cmp
sahf
lds
dec
xchg
mov
xlat
mov
stc
leave
fucompp
lret
xchg
data16
pop
pop
and
out
nop
and
add
jmp
xchg
push
jg
popa
out
inc
pop
cmpl
mov
push
pop
xchg
fwait
sub
pop
cmp
je
es
xchg
cmp
and
mov
push
das
outsl
out
inc
repnz
lods
cmp
pop
je
push
nop
push
inc
dec
cmp
dec
pop
dec
lds
shr
inc
sub
push
fsubrs
jno
iret
cmp
xchg
sbb
mov
cmp
scas
inc
jge
sub
add
or
push
int3
adc
arpl
mov
lds
jnp
mov
xchg
push
inc
mov
sahf
sub
jl
sbb
inc
fmuls
push
mov
rorb
add
pop
jl
or
jnp
pop
sahf
push
mov
dec
loopne
int3
inc
out
dec
rorb
push
inc
ljmp
xchg
pop
dec
pop
loope
xor
mov
rolb
cmc
sar
xchg
pushl
push
ss
stc
add
push
push
sub
bound
daa
arpl
dec
ret
push
ljmp
push
mov
xchg
add
inc
mov
dec
bound
push
inc
xlat
decl
cmc
cmp
cli
cmp
fucomp
in
pop
push
jmp
xor
test
adc
push
mov
xchg
out
lcall
mov
sub
out
and
mov
dec
out
or
fwait
negl
xchg
inc
lods
daa
jmp
inc
test
add
dec
arpl
mov
clc
idivl
mov
outsl
sti
cltd
sub
pop
cmp
fs
pushf
shrb
pop
imul
xchg
scas
adc
int3
data16
mov
push
cmp
idiv
repnz
cli
popa
mov
andb
jl
xchg
cmpb
adc
and
arpl
xchg
mov
pop
adc
icebp
cmpl
xchg
outsb
dec
xor
xor
adc
adc
adc
sbb
xchg
ljmp
shll
cwtl
push
jmp
push
call
std
leave
jmp
push
imul
push
sub
data16
sub
fimull
pop
ljmp
sbb
jl
xchg
inc
adc
push
js
insb
icebp
movsl
xchg
jmp
inc
ja
imul
adcl
fsubrl
in
jecxz
mov
ss
aaa
roll
inc
lret
call
fsubrs
xor
iret
sub
and
je
xlat
mov
mov
dec
pop
lcall
cmc
pop
sbb
cmp
mov
push
cmp
push
imul
arpl
cmp
mov
sub
xchg
mov
cmp
rcll
mov
fbld
js
mov
aas
inc
jmp
mov
add
mov
mov
pop
sahf
mov
push
jle
dec
dec
cltd
push
mov
mov
std
jo
repnz
pushf
mov
loop
add
add
jecxz
mov
mov
sahf
inc
mov
add
and
or
fisubl
mov
inc
lea
sbb
mov
ret
pop
int
in
out
stos
mov
inc
jg
cmp
cwtl
xor
fs
lds
stos
jle
push
ss
jp
pop
aad
jp
shll
fisttps
add
adcl
sbb
negl
xchg
jo
pop
xor
or
mov
leave
jmp
cs
xor
sub
mov
les
dec
push
lods
mov
rol
jg
and
ja
lds
dec
xor
mov
xchg
mov
outsl
add
push
pop
sub
jo
push
loope
xor
sahf
lods
lret
jne
in
and
mov
lods
stos
mov
lea
cmc
adc
xchg
sbb
jno
inc
jle
pop
pop
xorw
dec
inc
les
push
add
jecxz
xchg
aaa
aaa
mov
in
mov
loope
and
sub
nop
ficoml
adc
and
lods
loope
bnd
inc
add
xor
cmp
lods
gs
popa
dec
lcall
sub
repz
call
mov
xchg
pop
xchg
mov
lret
or
mov
lcall
in
gs
repz
arpl
shl
sahf
xchg
add
stos
rorl
and
dec
sahf
pusha
fdivl
clc
mov
inc
cmp
sti
mov
popl
mov
dec
dec
or
pop
ret
arpl
lret
stos
xor
sbb
or
rcll
push
insb
dec
pop
shrb
xor
iret
test
mov
add
test
mov
leave
orb
jnp
xor
and
xchg
dec
mov
dec
nop
jno
inc
push
or
arpl
push
xor
dec
push
jns
push
and
stc
fs
mov
xor
jnp
jb
pop
leave
int3
arpl
mov
sbb
shl
pop
pushf
mov
push
mov
outsb
outsl
scas
jbe
clc
ret
aam
jno
sti
xchg
in
mov
push
bound
in
inc
adc
cmp
or
or
hlt
cs
or
popf
and
mov
mov
sbb
pop
and
adc
jecxz
scas
iret
dec
jno
and
or
mov
or
imul
xchg
mov
lahf
cmp
or
fmul
out
jne
push
fsubrl
js
in
cmpsb
jmp
push
fnstcw
xor
pop
test
loop
mov
mov
lea
insb
test
ds
inc
sbb
loopne
lahf
cmp
leave
test
mov
gs
dec
push
jp
dec
movsb
inc
repz
ljmp
scas
inc
std
out
loope,pt
push
outsl
lret
xchg
les
in
dec
inc
dec
aaa
add
push
iret
cs
mov
mov
xchg
pop
and
xlat
cmp
cli
push
cwtl
jb
or
jge
dec
fmuls
cwtl
ss
in
imul
int
stos
adc
loope
nop
gs
adc
or
dec
jmp
push
sbb
lret
dec
mov
mov
fnsave
je
inc
inc
lds
mov
repz
aam
or
pop
add
aaa
cmp
ds
scas
jns
cmp
push
mulb
out
inc
sub
fildll
and
sbb
in
lcall
cli
insb
push
cmpsb
and
mov
mov
pop
push
in
jae
ret
test
xchg
jbe
in
and
inc
xor
push
cmpsb
jno
mov
out
push
cmc
gs
cmp
sbb
cld
adc
jno
imul
dec
cmp
aaa
icebp
cmpsl
jns
lcall
push
sarl
push
push
push
dec
cmp
mov
ja
mov
aas
mov
fmull
pop
adc
sbb
rolb
ljmp
jno
ds
sbb
xchg
sbb
outsb
in
sub
fcom
out
inc
js
cwtl
addl
pop
lret
jo
adc
xor
cmp
je
cmp
mov
mov
data16
test
push
or
mov
scas
xor
outsb
pop
adc
ret
mov
xchg
xchg
hlt
adc
insl
add
lds
int
mov
shlb
rcrb
dec
addr16
icebp
fildl
cmp
nop
cltd
lods
xchg
xchg
push
mov
pop
in
xchg
jo
adc
pop
inc
outsl
loop
test
mov
jmp
mov
xchg
mov
push
repz
jg
mov
xchg
ljmp
aaa
std
cmp
aad
data16
gs
mov
rolb
dec
xor
add
xor
enter
sub
lods
out
jo
or
xchg
cmp
lods
cmpsb
fdivrl
xchg
push
cmp
pop
inc
test
lcall
in
sbbb
rcrb
mov
push
mov
dec
jp
pop
fisttpll
lea
in
dec
test
cwtl
pusha
aas
pop
cmp
repz
inc
jp
fsub
mov
cli
xor
inc
imul
xor
insl
push
imul
add
sub
insb
fs
or
xchg
jns
xchg
test
movsl
in
out
testb
mov
xchg
sub
fnsave
mov
repnz
in
cmp
mov
adcb
out
mov
mov
popf
repnz
or
dec
xor
repz
icebp
and
imul
pop
mov
aas
push
test
scas
push
cmc
push
das
mov
shlb
push
or
and
dec
jg
das
xchg
stos
repz
jno
or
xor
outsb
jle
inc
and
jno
clc
sub
cmp
mov
imul
pop
inc
cmp
xchg
faddl
rclb
jb
adc
inc
cmp
js
jmp
call
mov
rcll
mov
cmpl
inc
cmp
cmp
xchg
push
xor
in
lret
sub
pusha
sbb
jle
fsubrl
dec
stos
sbbb
push
push
push
shlb
es
leave
in
mov
movsl
xor
dec
mov
jne
lds
add
cmpsl
mov
sbb
jecxz
ficoml
andl
cltd
rorb
popf
aad
pop
or
popa
push
ljmp
mov
push
mov
out
pop
movsb
sbb
push
sub
roll
or
mov
dec
adc
xlat
cmpsb
sarl
push
mov
dec
das
popa
jne,pt
pusha
push
in
inc
in
insb
jecxz
and
sbb
jecxz
and
cmc
mov
cltd
and
sbb
in
mov
movsl
nop
lods
pusha
pop
icebp
or
push
xchg
in
lock
in
xchg
lret
sub
xchg
sub
add
push
push
ret
xchg
imull
insb
test
in
xor
mov
ss
and
pop
mov
out
mov
add
add
shll
in
dec
aam
mov
inc
xlat
jp
mov
cs
pop
xchg
stc
mov
mov
mov
stc
js
jb
das
jne
xlat
adc
cs
cltd
mov
out
sbb
pop
jle
mov
or
int
jmp
mov
mov
push
imul
repnz
enter
mov
shl
xchg
jp
jle
mov
fisttpl
out
pop
fistl
je
or
mov
std
aam
hlt
xor
jp
xchg
outsl
shr
fsubr
mov
mov
pop
jno
cmpsl
pop
out
rcrl
mov
into
inc
mov
imul
lds
add
adcl
or
cwtl
or
or
cwtl
pop
cmp
scas
and
jno
push
fcomip
mov
arpl
shll
fstpl
popa
int
or
rolb
mov
adc
add
out
inc
xchg
sbb
hlt
sbb
pusha
sbb
mov
pushf
push
mov
ret
and
in
nop
dec
xchg
pusha
sbb
jbe
int
pop
add
dec
jecxz
jge
loope
cltd
lock
and
jno
test
ret
mov
push
xchg
mov
mov
enter
mov
xchg
fsubl
inc
fcmove
xchg
lds
jp
cmp
cmp
das
outsl
push
imulb
cli
popa
mov
jge
aas
clc
mov
jbe
adc
adc
add
insb
ss
jp
pop
out
test
in
fnstsw
lcall
insl
hlt
roll
inc
dec
hlt
shll
inc
test
insb
pop
sbb
sahf
cmpxchg
fbstp
loope
jp
or
pop
and
icebp
sbb
hlt
mov
sarl
push
adc
es
scas
lock
mov
inc
lds
cs
adc
mov
mov
jecxz
out
or
mov
stos
cwtl
pop
push
daa
push
inc
mov
push
xlat
cmpsw
call
lret
push
cmp
mov
jp
js
incb
sub
sbb
mov
pop
ja
or
in
lods
inc
les
push
aaa
push
pop
or
inc
sbb
inc
lret
inc
into
add
mov
fnstenv
aad
and
test
pushf
push
pushf
dec
mov
mov
mov
jnp
loope
icebp
lahf
jp
mov
or
push
scas
gs
adc
push
idivl
in
scas
inc
test
mov
cltd
inc
cltd
aaa
shrb
mov
out
testl
xor
pushf
push
xchg
cli
lds
faddl
mov
adc
scas
xchg
sarb
repnz
in
xor
sahf
lea
add
mov
jo
mov
add
ret
add
xor
xchg
pop
movsb
rorb
pop
sti
pop
pop
xchg
dec
call
test
mov
xchg
inc
or
cwtl
fdivrs
xchg
shr
sub
or
cli
xor
stos
into
ljmp
lods
mov
pop
jnp
and
lea
mov
loope
repz
mov
dec
inc
cli
jne
lahf
out
call
lds
cmpsb
adc
dec
adc
adc
jge
dec
add
inc
inc
hlt
push
and
scas
inc
nop
pop
fisubs
mov
mov
sub
and
or
test
iret
dec
stos
sbbb
out
pop
or
aas
mov
pop
subb
repnz
imul
scas
leave
mov
xchg
mov
xor
dec
xchg
add
orb
push
xchg
pop
mov
out
jmp
rcrl
test
test
adc
lret
imul
jp
push
push
push
lret
rcrl
xor
jne
es
mov
pop
mov
aaa
pop
jo
movsb
scas
and
arpl
xor
push
aam
gs
pushf
mov
fs
push
mov
addr16
les
fadds
push
cmp
mov
inc
test
push
mov
push
scas
loopne
outsl
jge
push
ret
iret
sbb
cmpsb
xor
xchg
insb
aam
js
adc
mov
xor
stos
movsl
pushf
fsubs
mov
adc
or
aam
or
jo
pop
adc
sub
xor
xor
lcall
push
inc
adc
dec
pop
orl
popa
and
in
dec
mov
ror
push
test
xor
adc
pop
pushf
adc
add
out
xchg
push
fistl
sbb
push
mov
xor
scas
dec
add
pop
mov
outsb
mov
mov
adc
jl
daa
popf
mov
out
xchg
int3
insb
sbb
in
and
enter
stos
cmp
cwtl
stc
stc
lods
fldt
divl
xchg
sub
pop
sbb
orl
out
cmp
push
cs
test
push
sub
out
movsl
sti
inc
addb
inc
nop
faddl
ds
add
sbb
fs
pop
mov
lock
xchg
xor
xor
pop
jg
scas
jae
nop
push
pop
dec
inc
pop
enter
adc
test
sti
mov
dec
lds
jb
icebp
int
test
flds
dec
rclb
inc
pop
sbb
xchg
push
loopne
adc
add
xlat
das
mov
xchg
scas
mov
jg
add
repz
cmp
xlat
or
roll
loopne
sahf
push
lods
pop
pushf
into
xchg
daa
cmp
mov
pop
pop
add
sub
jo
int
mov
mov
shll
insl
jno
arpl
clc
out
outsl
imul
pop
lods
bound
test
std
dec
scas
mov
mov
inc
add
xor
adc
jne
mov
sti
adc
lcall
push
mov
sbb
jg
lret
in
xchg
xchg
dec
aas
sbbl
cmp
out
push
icebp
loope
cmp
adc
add
popa
aad
mov
test
mov
xor
xor
imul
mov
jb
test
mov
sbb
mov
xor
stc
sub
lret
sbb
sub
mov
shll
pushf
gs
or
and
jp
jle
push
xchg
mov
adc
cmpsb
orl
and
scas
stos
push
inc
imul
cmp
xchg
push
pop
jmp
xlat
adc
stos
and
jge
and
xchg
sub
adc
push
out
negl
push
sbb
insb
lods
add
cmp
push
or
lret
adc
std
ss
and
lret
cmp
mov
shlb
stos
lock
test
adc
xchg
repz
xchg
out
cmc
shl
xchg
cmpsb
sbb
xor
or
pop
or
xchg
adc
adc
cmp
and
bound
std
lods
mov
notb
outsb
inc
inc
daa
lret
dec
pop
jmp
pop
mov
shrb
mov
loop
rcrb
test
inc
adc
in
ret
xlat
sub
jnp
and
xchg
or
xor
insl
mov
mov
inc
lcall
outsl
or
in
pop
and
inc
and
xlat
addb
mov
enter
cld
sarl
lcall
mov
ljmp
arpl
sar
mov
xchg
test
mov
insl
in
dec
out
jp
mov
mov
shlb
jbe
jo
shr
sti
out
cmp
cwtl
fdivrs
cmp
icebp
xchg
mov
ds
sub
lahf
pop
adc
pushf
or
xchg
mov
inc
push
xchg
cmpsb
jne
pop
lds
cmp
adc
xor
loope
out
xchg
es
pushf
stc
xor
adc
in
insb
add
fldenv
pushf
bound
ret
stos
cmp
and
and
push
xor
xor
jmp
in
movsb
or
decl
adc
loopne
and
sbb
mov
mov
cmc
xor
repnz
fcoms
test
int
xchg
cmp
mov
or
enter
adc
mov
push
pop
adc
scas
and
mov
into
pshufw
pop
outsl
inc
fucom
push
pop
push
push
push
jns
pop
cmp
sbb
xchg
out
imul
out
or
dec
sbb
insb
jne
and
in
jecxz
test
mov
dec
inc
jmp
test
arpl
xchg
pop
je
mov
call
mov
outsb
jecxz
shll
mov
popa
test
inc
stos
imul
mov
push
arpl
daa
push
cmp
js
dec
cmpb
lret
pop
xchg
and
dec
pop
mov
outsl
inc
xchg
dec
scas
imul
xor
pop
add
in
insb
and
test
les
push
xor
mov
dec
sub
cmc
jne
mov
outsl
xor
jnp
cwtl
jge
sub
hlt
js
fmuls
cwtl
dec
jge
xor
fbstp
adc
adc
dec
and
fs
mov
loopne
jbe
cwtl
popf
sbb
sub
push
mov
add
es
fstl
mov
adc
sub
dec
sbb
lahf
jmp
cmpb
jp
jb
pop
xchg
or
dec
cmc
inc
sub
and
icebp
lcall
imul
movsb
arpl
and
push
pushf
adc
pop
pop
cmp
test
les
push
testb
jge
mov
in
or
cli
cli
adc
fdivr
mov
sub
xlat
jbe
sarl
add
add
ret
dec
mov
stos
cli
push
loope
nop
fidivrl
cmpsb
lea
xlat
xor
pop
add
xchg
xor
inc
xor
aas
cmpsb
push
aam
jecxz
push
jecxz
adc
insl
jmp
cs
insb
or
loop
call
push
shlb
cmp
dec
outsl
inc
push
ret
xchg
add
and
ljmp
shlb
mov
mov
pop
adc
lods
enter
sbb
jae
lret
bound
dec
xchg
mov
cmp
inc
sbb
mov
lods
xchg
sbb
lea
inc
mov
in
inc
mov
pop
in
pop
outsl
out
adc
nop
xor
mov
push
or
fxch
loopne
fidivrs
lock
int3
nop
ror
int3
mov
add
iret
jl
out
xchg
jbe
and
aas
mov
js
ds
inc
inc
xchg
lea
mov
stos
inc
xchg
pop
dec
fstl
mov
lahf
mov
and
mov
in
subb
xchg
adc
movsl
push
push
mov
or
pop
or
jl
fwait
xor
orl
push
xchg
xchg
jns
inc
mov
push
adc
cmp
xchg
push
repnz
test
stos
fdiv
jns
add
cs
fisubl
push
test
xor
ljmp
popf
sbb
je
clc
data16
adc
mov
jne
add
decb
icebp
fimull
pop
cld
aas
test
dec
movsl
cli
nop
xor
ret
mov
mov
mov
sbb
xor
add
adcb
mov
xchg
stc
inc
outsl
scas
outsl
mov
xchg
xchg
mov
sahf
mov
adcb
mov
and
imul
ret
enter
into
inc
mov
int
das
arpl
lcall
xchg
pop
data16
add
sub
cltd
mov
or
xchg
ss
pop
js
cmpsb
leave
movsb
lahf
iret
outsl
jmp
insb
mov
sahf
loop
lds
cmp
and
jg
mov
inc
imul
push
mov
xchg
scas
in
cmpsb
adc
add
xchg
lds
xchg
ss
add
adc
popf
mov
aam
push
mov
mov
dec
pop
lods
popa
pop
jne
jo
inc
call
adcb
push
scas
pop
sahf
das
lea
adc
xchg
sbb
mov
and
mov
dec
cmp
sti
dec
mov
sub
mov
lret
xchg
outsl
clc
jg
jnp
sbb
adc
lods
sbbb
popa
sub
push
and
or
sub
in
js
cmpsl
xchg
dec
ds
mov
icebp
fcoms
int
cli
outsb
and
pop
mov
or
or
lds
out
and
sbb
nop
mov
shlb
aad
jae
mov
xchg
outsl
daa
sbb
mov
ret
mov
lahf
cmp
xchg
out
sub
lahf
out
sti
sub
mov
mov
daa
cmpsb
test
in
xchg
dec
sub
inc
je
jle
loop
popa
aaa
jo
xor
fldcw
push
mov
xchg
lret
inc
jbe
dec
gs
add
mov
mov
repnz
or
mov
push
or
sbb
or
cmp
xor
sub
jmp
sbb
inc
pusha
mov
jb
lret
mov
cld
cmp
ja
lea
mov
xchg
xor
push
push
push
xchg
bswap
push
and
nop
arpl
pop
lea
xchg
or
inc
dec
bnd
mov
test
jle
enter
fimuls
outsl
sbb
popa
stos
pusha
not
divl
add
out
jae
cmp
mov
xchg
ds
imul
ret
loope
pop
dec
mov
imul
push
add
dec
dec
dec
fmul
dec
loope
push
mov
imul
sahf
mov
fstpl
cmc
sub
in
pushf
mov
daa
xor
inc
movsl
in
repnz
js
jo
popa
mov
cmp
loop
cmp
loope
sub
cs
xchg
test
fadd
push
inc
sbb
sarb
pop
pop
xchg
xchg
and
cmp
or
push
enter
jle
movsl
inc
repz
nop
stos
cmp
pop
insl
aad
nop
test
aad
inc
mov
jns
cld
aas
push
popf
jecxz
cmp
ret
int3
sub
xchg
test
and
les
mov
pop
xor
rolb
or
jp
pop
mov
cli
pop
out
push
leave
loopne
addr16
pusha
les
lea
ret
mov
popf
sbb
adcb
insb
in
jg
xor
adc
in
jmp
cltd
bound
inc
mov
xorb
dec
out
mov
outsb
pop
cmp
in
push
sti
test
lahf
stos
and
sub
inc
imul
in
repz
xchg
sbb
arpl
mov
xchg
std
dec
cld
and
icebp
sbb
fisubrl
aaa
push
add
hlt
repz
push
mov
fisubs
mov
dec
cmc
mov
fwait
lds
jnp
lret
xor
lcall
sbb
mov
add
lea
dec
stos
or
push
fwait
out
iret
or
lret
dec
cld
popa
add
cmc
mov
add
and
jecxz
data16
push
aad
inc
pop
or
cwtl
cmc
jns
hlt
sti
lahf
cmp
xor
loope
fidivrs
into
aad
mov
cmp
inc
dec
ret
cmp
push
mov
movsl
mov
xor
shll
orb
cmpb
mov
xchg
loopne
lcall
fsts
popf
xor
push
pop
adc
int3
cli
mov
sbb
dec
jp
in
sti
xchg
xor
call
jbe
xchg
fdivr
sub
jbe
adc
out
pop
push
movsb
mov
jl
adcb
inc
xlat
das
test
push
pop
jmp
ret
inc
ds
mov
jg
push
mov
mov
add
jno
xchg
arpl
jmp
jp
insb
mov
dec
cmp
cmc
pop
sub
adc
lahf
mov
push
jo
sub
push
xlat
cltd
lea
data16
aad
xchg
pop
divb
mov
sub
mov
push
les
call
je
rclb
imul
inc
pop
xchg
call
mov
jge
out
xchg
scas
add
adc
out
icebp
mov
adcl
movsl
xchg
scas
jecxz
int3
inc
xor
cmp
call
mov
dec
or
sbb
enter
lock
outsb
out
ret
and
mov
cltd
pop
repnz
aam
loope
or
xlat
insb
pop
cmpsl
inc
stc
jmp
mov
std
int
xor
dec
imul
lods
imul
or
jbe
pop
add
push
fwait
out
mov
mov
pop
into
cmp
aaa
cmp
adc
lock
mov
push
cmpsl
xchg
in
test
mov
in
ret
adc
lcall
push
jns
sub
ljmp
xchg
add
mov
aaa
cmc
lock
movsb
rolb
adc
and
mov
inc
adc
pop
mov
je
pop
and
daa
andl
xlat
mov
mov
gs
pop
movsb
int
ror
or
leave
dec
icebp
sub
sarb
push
mov
and
and
cmpsb
stc
fs
cs
lock
mov
pop
mov
fisttps
push
mov
xchg
mov
dec
add
insl
xchg
int
pop
repz
in
ljmp
aad
clc
push
xchg
ret
sub
popf
xor
daa
push
xchg
lret
aaa
lret
pop
fdivl
xlat
xchg
cmp
inc
xrelease
jnp
rcr
dec
and
dec
clc
jno
push
jo
sbb
stos
cltd
ds
inc
mov
pop
in
sub
jo
jnp
das
cmp
pop
sbb
sbb
pop
scas
push
pusha
cltd
sbb
icebp
stos
inc
pop
jnp
in
inc
aad
xchg
scas
xor
pushf
jbe
loopne
fldt
jmp
hlt
mov
fmull
jg
or
stc
mov
push
mov
gs
in
popf
std
xchg
push
jne
incl
or
jno
push
fildll
mov
xchg
pop
inc
or
push
add
xor
mov
mov
and
inc
jmp
scas
rorl
add
sub
mov
push
xchg
int3
inc
inc
pop
add
cmpsb
jns
sbb
in
or
adc
dec
fisubl
ja
pop
pusha
lret
jbe
imul
nop
and
arpl
mov
les
or
insb
pop
dec
das
fsubr
stos
and
idivb
sub
jbe
jp
xor
mov
movsb
adc
out
or
sbb
xor
in
bound
lock
pop
icebp
fstps
pop
cltd
dec
ljmp
iret
inc
push
addr16
pop
movsl
push
movsb
xor
fldcw
dec
sub
xchg
pop
imul
cmpsl
rol
outsl
cmovo
mov
jle
mov
arpl
xor
ljmp
jnp
rcrl
jns
aam
cld
scas
push
lret
adc
lret
fmuls
and
jns
es
cwtl
pop
sbb
je
add
sbb
sub
aas
jl
sbb
loopne
stos
stos
lret
jns
add
or
aad
dec
rol
adc
mov
imul
scas
lahf
movsb
ret
mov
adcb
mov
lock
call
inc
mov
imul
leave
out
imul
mov
sbb
mov
loopne
enter
push
mov
jno
cmp
pop
push
sarb
mov
mov
mov
les
mov
push
in
out
push
lret
pop
test
mov
pop
jbe
mov
cs
jb
add
les
lock
sbb
adc
dec
or
adc
popa
and
outsl
ljmp
mov
mov
adc
push
enter
add
or
dec
push
cmp
movsb
les
add
inc
adc
dec
in
sbb
arpl
fadd
aam
xchg
cli
mov
dec
xchg
ret
lret
xchg
pop
ss
rorb
xchg
shll
lret
aam
je
mov
push
pop
outsb
xchg
cmpsb
sub
ja
daa
mov
lret
xchg
cld
leave
cli
jge
test
out
cli
mov
rorb
les
icebp
outsb
mov
jecxz
mov
cmp
fidivrl
nop
call
in
cltd
xor
and
mov
leave
outsl
loop
mov
xchg
push
sbb
push
sarl
jns
imul
and
orl
or
ljmp
sbb
pop
jb
add
scas
add
mov
mov
add
insl
cmp
sahf
pop
inc
sub
sahf
loop
mov
pop
pop
dec
pop
jle
adc
jnp
xor
add
mov
mov
out
sti
cs
iret
inc
movsl
mov
shl
inc
sbb
jbe
xchg
ja
inc
mov
jge
fdivrs
or
lock
xchg
cmc
dec
jg
je
cmp
repz
test
gs
dec
inc
arpl
cmp
pop
cmp
or
iret
stos
in
dec
clc
jle
lea
mov
les
sbbl
fwait
repz
ds
mov
xchg
jge,pt
xchg
cmc
jp
das
cs
arpl
loop
ret
jecxz
inc
xor
mov
lock
addl
test
stos
out
sub
inc
push
out
pop
cwtl
sbb
sbb
aad
aad
xchg
test
add
xchg
cmp
mov
xchg
bound
int
cli
mov
xor
lcall
in
test
ret
adc
adc
cmp
pop
sbb
mov
push
push
in
loop
push
sbb
xchg
pusha
cld
enter
out
std
in
cmp
outsb
bound
add
xchg
xor
out
mov
sub
roll
outsb
dec
jne
adc
and
imul
push
mov
fucom
push
gs
aas
xor
dec
and
test
adc
jl
ret
rcrl
ljmp
cmp
dec
add
enter
adc
push
loopne
ljmp
jmp
addl
aad
out
push
jnp
or
sub
lock
fmull
inc
sbb
cmpsl
addr16
mov
sub
cmc
fiaddl
out
cmp
ret
or
xchg
pusha
iret
fistl
pushf
iret
xchg
stos
or
xchg
mov
in
imul
dec
adc
lods
adcb
adc
jbe
sbb
mov
xor
fsubs
xchg
mov
loop
sbb
lds
lret
popa
lret
ljmp
mov
negl
pop
adc
enter
stos
or
hlt
jmp
ljmp
enter
adc
sub
ss
xor
test
call
repz
jl
mov
xchg
jnp
cwtl
into
sbb
iret
pop
mov
test
int
or
sub
rclb
ficompl
ds
ret
gs
pop
jge
pop
push
mov
add
dec
mov
mov
out
and
fs
cmp
sbb
push
pop
loope
pushf
dec
xchg
lret
and
iret
sub
rcl
adc
int3
lods
xchg
pushf
aas
dec
sbb
cwtl
adc
loop
and
mov
jecxz
js
jmp
in
pop
sbb
hlt
mov
aam
or
inc
pop
mov
lock
mov
test
inc
int3
repnz
clc
dec
test
add
cmpsl
dec
dec
mov
mov
dec
mov
in
cmpsb
fidivrs
inc
push
rclw
into
fcoml
mov
dec
out
xchg
jecxz
jl
repz
pushf
insl
int3
cmp
add
push
test
cmp
cmpsb
pusha
or
inc
mov
dec
lods
pop
sbb
leave
ds
xor
adc
push
test
mov
mov
sub
fsubrl
das
gs
pop
xchg
test
ret
jo
inc
mov
aam
std
cmpsl
jmp
das
ja
adc
mov
add
xchg
fisubrs
shrl
or
add
xor
outsb
and
clc
dec
mov
insb
mov
mov
dec
xcrypt-cbc
cmpsl
xchg
loop
sahf
mov
mov
mov
or
jo
and
and
pop
jnp
into
repnz
js
cli
or
ljmp
jno
pop
ljmp
ss
popa
adc
pop
mov
rcrb
inc
mov
sbb
out
adc
or
fnsave
mov
lods
add
dec
cwtl
out
mov
adc
jo
cmp
dec
leave
inc
fsubr
and
sub
xchg
sub
mov
inc
dec
lea
xor
test
push
dec
addr16
shll
dec
popf
int
inc
call
cmc
dec
ret
adcl
leave
xchg
jmp
idivb
arpl
and
shr
jne
push
add
and
adc
lock
rcll
pushf
jo
or
adc
xor
xchg
inc
clc
aam
jecxz
adc
fwait
mov
cld
movsl
popa
fisubrl
test
xor
addr16
mov
jnp
lea
xor
cmp
into
pop
loopne
and
xor
or
rcrb
test
dec
pop
das
ret
xchg
inc
movsb
in
pop
cmc
int
std
xchg
jmp
je
mov
mov
movsb
adc
lcall
xor
repnz
mov
sbb
imull
sbb
out
lret
ja
pop
sbb
mov
inc
aam
out
mov
rcrl
loop
jmp
xorl
jp
sbb
or
aaa
adc
mov
xchg
pop
sub
ret
dec
shrb
icebp
sbb
xchg
ja
or
stos
loopne
jnp
or
and
pushf
push
clc
sbbl
notl
sub
mov
das
adc
outsl
icebp
fisubrs
into
cld
test
sbb
xorl
adc
ja
dec
adc
lret
sbb
ss
mov
hlt
mov
enter
pop
and
and
sub
shrl
scas
inc
ljmp
enter
test
inc
roll
aad
ss
lea
dec
sbb
pop
and
jge
cmp
push
dec
test
out
inc
xchg
in
jno
xchg
adc
insl
mov
fisubl
xchg
shrb
out
test
lret
stos
cld
insl
xchg
js
or
mov
psubsb
cmove
shrl
mov
cmc
mov
mov
cmpl
sub
out
sbb
push
out
dec
shl
or
in
push
cwtl
pop
addl
cld
adc
mov
mov
in
int3
and
fsts
ds
and
jbe
adc
pop
sbb
sbb
mov
add
ret
cmp
aas
or
pop
lret
xchg
jo
nop
or
movsb
pop
push
xlat
dec
ja
mov
ljmp
jmp
cwtl
mov
aad
dec
mov
test
movsb
aam
cmp
fadds
jae
in
sbb
mov
arpl
hlt
out
adc
push
lods
mov
lss
add
jns
cmp
outsb
loope
sub
rclb
cli
dec
aad
inc
pop
sarl
aam
mov
fildll
dec
test
ret
loope
sahf
sub
popa
mov
mov
sub
jg
stos
add
test
das
lds
add
mov
xchg
mov
fcoml
repnz
fcmovne
pop
lret
sbbb
push
shl
jae
mov
cwtl
mov
sarb
and
enter
dec
popf
push
xor
pushl
xchg
sbb
std
scas
cli
dec
mov
pushf
sbb
or
lcall
xor
nop
or
shrb
xlat
stos
mov
mov
cmp
scas
lahf
ljmp
lcall
mov
adc
sub
sbb
fs
call
xor
xor
adc
cld
stc
and
outsl
or
mov
cmp
stos
mov
mov
lods
mov
stos
gs
in
jne
outsl
or
iret
jno
cli
sbb
mov
call
leave
pushf
push
mov
jecxz
imul
repz
add
negl
jne
int
push
add
mov
mov
cli
dec
inc
cmpsb
fsubrl
cwtl
iret
xor
jl
adc
cmc
loop
jbe
cmp
jnp
lret
or
mov
add
mov
sbb
mov
xchg
or
or
jno
xchg
ds
xchg
shr
sub
jae
inc
cmpsl
sub
test
sub
sub
shrb
jg
inc
mov
out
push
test
movb
jnp
push
mov
cmp
sub
rcrb
add
cmp
outsb
rorb
dec
nop
push
adc
aad
lock
int
inc
mov
cltd
lods
sub
shll
sbbb
movsl
daa
test
inc
dec
inc
shrl
push
loope
in
mov
into
mov
xchg
inc
rorb
js
jbe
mov
push
sbbb
pusha
sub
xor
popa
push
dec
pop
inc
mov
daa
leave
pop
rcrl
adc
fstpt
adc
rcrb
std
and
or
dec
out
inc
lds
scas
les
cmp
sub
cmc
pop
mov
add
and
shrb
pusha
jmp
inc
scas
adc
pop
jns
lret
nop
jp
cs
imul
push
jnp
mov
add
fs
dec
pop
cmp
push
sarb
movsl
mov
aad
jo
nop
cmp
imul
test
xlat
lods
or
mov
mov
stc
loopne
icebp
cltd
sub
or
aam
xchg
lods
daa
adc
leave
hlt
cmc
xchg
insl
pop
xor
gs
xorl
out
mov
nop
rcrb
sub
xorb
ret
dec
xchg
js
aam
ja
mov
popa
cmp
cwtl
inc
les
and
shrl
and
enter
push
ret
popa
jp
mull
sbb
andl
push
adc
in
loope
xor
cwtl
sub
jmp
jmp
mov
loopne
jbe
out
mov
lds
loop
and
ljmp
cmpb
push
lock
jecxz
cmp
out
test
cltd
mov
loopne
aaa
repnz
dec
xlat
outsl
idiv
int3
lea
inc
mov
std
add
mov
cmp
lret
fwait
stos
pop
out
in
jge
mov
outsb
subb
cmp
mov
icebp
push
icebp
cmc
pop
sbb
and
aad
jne
add
jne
ja
cmp
jp
movsl
add
lock
sbb
dec
aas
push
mov
or
push
jmp
ficomps
xchg
shrl
sub
dec
and
add
cwtl
inc
movsb
inc
test
cmc
loope
sub
mov
in
adc
scas
imul
jbe
andl
in
outsl
lods
mov
add
or
xor
test
sarl
leave
aam
sub
jns
push
nop
std
sub
xchg
cmpsl
lods
popf
mov
imul
leave
or
andb
xchg
popf
popa
pusha
insl
jae
pushf
xor
xlat
dec
dec
es
repz
inc
cmp
out
dec
sbb
setge
or
ds
xor
fs
jp
adc
iret
add
cld
xlat
mov
orb
add
xor
gs
data16
adc
push
adc
out
into
sti
cmpsb
and
adc
out
insl
ljmp
mov
adc
mov
push
dec
xchg
mov
sbb
movsb
pop
pop
shrb
sub
push
sbb
outsb
pop
push
aaa
cltd
or
pop
test
push
ds
lret
es
sahf
mov
push
in
pop
push
mov
xchg
pop
fists
add
jmp
xchg
aad
je
mov
and
sbb
inc
dec
fs
sub
sub
pop
in
clc
clc
std
sub
incb
pop
pushf
and
lods
pop
jle
fsubrs
adc
out
dec
lret
test
cmp
stos
push
fwait
add
psubq
mov
xor
sahf
mov
xchg
cwtl
dec
cmovnp
inc
xchg
inc
pop
fwait
jbe
aaa
sbb
loope
int
ret
popa
test
cmp
pop
mov
das
or
pushl
jp
shll
repz
fists
push
out
cmp
pop
icebp
push
adc
xlat
add
push
and
xchg
aad
jmp
mov
xor
popa
js
rcrb
ret
lret
shl
push
xchg
imul
lods
stc
imul
fistl
lcall
pop
cwtl
leave
jbe
mov
lret
test
sbb
mov
add
push
push
subl
test
sub
dec
int3
das
sti
or
cmpsb
pusha
in
or
push
lcall
das
jp
test
in
aas
fcoms
jns
mov
push
mov
mov
cmp
dec
jp
imulb
rorl
shrl
cmp
jge
fnstcw
add
jnp
std
adc
add
in
and
stos
imul
fcompl
enter
jae
pop
lret
lds
push
das
xchg
imul
inc
cltd
jbe
mov
jmp
imul
cs
mov
adc
cld
cmp
aas
push
leave
mov
and
adc
movhps
test
cltd
popa
lods
loopne
jg
aaa
test
cmpsb
ficomps
out
jb
loop
sub
sbb
pop
lea
leave
xlat
push
mov
fistpll
xchg
std
fnsave
inc
insl
cmp
iret
or
and
sbb
mov
in
pop
mov
inc
cli
mov
aam
std
mov
aam
push
divb
cmp
dec
fs
cmpsl
inc
cmpsl
fs
add
clc
out
push
inc
incl
imul
push
fdivs
lock
mov
popa
adc
mov
pop
enter
jecxz
pop
lahf
fidivrs
jge
cmpsl
les
mov
ljmp
lods
xor
jns
ljmp
fidivrl
jecxz
shlb
pop
pop
lods
jnp
pop
xor
repz
imul
repnz
scas
inc
mov
cli
mov
out
or
adc
jo
sub
ret
fnstcw
sbb
jg
cli
sub
enter
lods
lods
in
addr16
loope
aaa
fistl
or
jl
inc
test
xchg
jg
cmp
push
ss
out
in
fwait
popf
fcmovb
jg
push
ret
dec
sti
mov
scas
cwtl
add
data16
mov
shr
popf
cli
mov
or
lods
test
dec
fnstenv
pop
test
pop
arpl
into
ror
inc
pop
add
roll
addr16
fs
jl
or
mov
adc
dec
fwait
cmpl
push
add
notl
mov
test
int3
fstpl
in
mov
pop
cmp
and
stos
sub
je
cs
jecxz
xchg
mov
mov
sbb
pop
push
mov
loop
pop
rcrb
mov
ret
jbe
jne
adc
lods
flds
fcmovb
jbe
in
fsubrs
cltd
sahf
in
mov
shll
rdmsr
lret
in
jne
and
adc
xor
lock
push
cmp
mov
mov
push
rcrb
sub
mov
lea
int3
inc
xchg
das
mov
lret
cmp
sbb
sbb
pop
ja
jb
mov
jbe
imul
ret
mov
sbb
xchg
inc
add
or
adc
push
movsb
loope
add
or
sbb
lods
or
andb
jp
pop
mov
dec
push
dec
cmpsl
inc
pop
adc
fadds
mov
mov
inc
xchg
jmp
dec
jne
push
ss
test
sbb
inc
sub
pop
and
imul
popf
jne
ret
or
pop
pop
adc
popa
and
neg
push
ja
outsb
outsb
mov
sub
mov
nop
fwait
cli
popa
mov
add
sub
or
roll
jo
mov
aas
xchg
std
ror
push
dec
mov
loopne
sar
inc
or
and
scas
imul
adc
xlat
adc
push
popf
das
ljmp
in
mov
outsl
rcr
dec
jmp
cltd
pop
add
xchg
icebp
fstl
fldt
popf
pop
je
test
dec
push
mov
adc
lret
push
out
xor
pop
xchg
xchg
dec
int
cld
shll
aaa
lahf
mov
jl
push
jmp
inc
or
sub
stc
lock
es
mov
pop
push
lret
sub
mov
fstpl
push
jnp
das
or
mov
xorb
mov
fdivp
add
mov
inc
fisubl
cmp
hlt
outsb
iret
push
iret
xlat
lcall
sbb
or
pop
push
cmpsb
fs
sahf
leave
imul
cmpsl
push
movsl
jo
inc
aam
mov
arpl
cmpsl
sahf
ss
cmpsl
les
cmp
adc
aaa
pusha
mov
test
js
insl
pop
mov
jns
insb
dec
or
movsb
push
fistps
in
daa
out
daa
in
sti
push
lret
fildll
cmpsb
js
jecxz
cli
je
vpsraw
jno
sub
mov
mov
ss
or
je
mov
sub
xlat
stc
sgdtl
sarl
in
fisubrs
mov
incl
mov
loopne
and
mov
cmc
or
pusha
jbe
pop
outsb
adc
xchg
in
into
push
add
js
and
xor
mulb
add
push
inc
push
sbb
popa
cmp
movntps
adc
or
andl
in
fwait
sub
int
jae
xchg
aas
cmp
push
push
repnz
fs
in
or
mov
adc
int
and
mov
test
xor
stos
cmpsb
pop
fwait
cmp
fisubrs
stc
jecxz
js
mov
hlt
and
mov
cmp
jbe
jae
ss
and
inc
adc
iret
movsl
cs
adc
movsb
xchg
inc
xchg
les
inc
push
fsubr
mov
pop
fildl
ljmp
je
test
roll
cli
lock
movsl
fistps
fstpt
pushf
mov
sub
pop
push
push
mov
sub
movsb
mov
jecxz
je
pop
xchg
mov
sbb
int
sub
mov
sub
dec
jg
mov
xor
or
imul
call
sarl
dec
sahf
xchg
sti
pushf
mov
cmp
aaa
pop
shl
add
xorb
mov
pop
or
lret
imul
push
dec
hlt
jp
inc
xor
or
xchg
pop
and
fdivrs
and
iret
daa
sbb
outsl
pop
push
cmp
or
cmp
fstps
outsb
setp
xchg
push
jge
sub
out
js
adc
adc
pop
js
aaa
mov
mov
bnd
ret
gs
test
sub
js
mov
mov
and
push
pop
or
mov
mov
cmp
neg
adc
in
hlt
stos
lods
outsb
push
or
adc
cmpsb
or
cmp
idivl
lds
cld
lret
and
push
mov
movsb
inc
sub
mov
adc
loop
cmp
xor
cs
push
push
loop
mov
dec
and
and
lret
jg
pop
fnstenv
xchg
dec
dec
cmpsb
fisttpll
ljmp
xor
insl
aam
cltd
daa
push
push
mov
fsts
into
sub
lea
or
dec
jmp
into
push
popf
add
rcrl
mov
sahf
js
pop
sbb
dec
daa
js
loop
mov
lods
sub
jo
adcb
xchg
shr
flds
insb
push
xchg
movsl
mov
mov
movsb
push
and
in
mov
push
scas
mov
lock
lahf
dec
xor
daa
loopne
push
xchg
jp
lahf
std
cmpb
aad
dec
and
lock
cwtl
ja
loope
mov
popa
bound
mov
clc
out
pop
pop
mov
mov
insb
sbb
pop
inc
push
pop
adc
adc
pop
pop
push
mov
out
push
jg
imul
mov
in
and
ret
adc
or
je
fisubl
fstpt
pop
arpl
in
call
imul
cwtl
jae
mov
mov
out
cmp
inc
jno
sbb
aad
fstps
jb
fldenv
test
and
adcl
sub
sti
xchg
push
fldenv
adc
jge
xlat
jge
adc
jmp
cli
pop
xor
scas
pop
mov
inc
push
push
xchg
or
dec
pop
jae
insl
and
inc
rcrl
roll
in
shl
std
outsl
jns
xchg
stos
push
xchg
dec
leave
test
xchg
lods
inc
imul
mov
fldt
push
cmp
outsb
mov
dec
pushf
sub
pusha
sti
shlb
adc
add
inc
lea
sbb
repnz
mov
test
imul
or
dec
jp
aad
sub
adc
loopne
mov
test
sahf
dec
push
jb
push
lret
popa
sub
push
div
ss
adc
cld
cltd
outsl
and
cmp
jg
hlt
aam
add
shlb
iret
bound
pusha
mov
les
add
fnstcw
mov
je
out
jae
out
inc
mov
jns
data16
shr
pop
push
push
scas
sbb
out
jb
lods
idivl
cmp
fisttpl
js
jg
imul
cmc
dec
jl
sbb
fmuls
cwtl
jne
sbb
push
push
sbb
adc
popa
add
xor
pop
cltd
jmp
or
or
js
jl
sbb
sub
das
mov
cmc
push
xchg
test
mov
xor
sti
adc
and
orl
divb
mov
mov
mov
test
ljmp
imul
jg
inc
dec
pop
push
pop
daa
sarl
mov
cmpsl
sub
scas
clc
or
das
ss
call
xchg
dec
lahf
inc
loop
sbb
fs
inc
cmp
lea
repz
call
lret
nop
mov
push
mov
lcall
adc
fidivrl
or
out
xor
cmp
gs
repnz
inc
fwait
cli
push
and
ds
jo
mov
jle
notl
popf
cmc
cmp
xor
mov
movsb
dec
outsb
das
mov
mov
sbb
sahf
push
mov
mov
fs
in
lcall
push
mov
testb
add
sbb
mov
push
and
push
mov
adcb
jo
add
push
rcl
pusha
sbb
push
and
dec
popa
sahf
pushf
mov
sub
fsubrs
jbe
addr16
sub
push
lcall
imul
clc
push
adc
xor
pop
shrl
mov
and
lcall
xor
dec
cmpb
pop
jmp
mov
add
xchg
inc
stos
mov
das
dec
jbe
add
movsl
scas
jecxz
xchg
sbb
ret
call
xchg
adc
clc
xor
lret
sti
jmp
add
arpl
ja
adc
aas
jnp
int
dec
out
lds
inc
mov
leave
or
insb
mov
or
imul
push
adc
push
xlat
pop
cltd
dec
insb
outsb
mov
xchg
xchg
mov
mov
add
cmp
xorl
pop
or
daa
lds
div
lea
push
mov
push
es
fstpt
push
pop
cmp
jecxz
fstpt
in
scas
xchg
cmp
push
jb
push
push
dec
test
and
and
arpl
push
sub
leave
jg
data16
sbb
cmpsl
insb
lods
add
int
cmpsb
jno
lahf
in
pop
mov
icebp
jne
push
in
es
mov
aad
bnd
cmp
cwtl
push
push
cmp
and
imul
inc
aaa
pusha
cmp
inc
inc
push
xor
sbb
push
push
sbb
adc
out
jp
mov
jp
loope
gs
jecxz
pop
dec
mov
lods
je
and
pop
sbb
divb
jb
lds
fs
inc
cli
inc
jno
in
add
dec
pop
shrl
in
icebp
xor
xlat
sbb
jb
jb
and
nop
testb
scas
xor
loop
std
sbb
mov
out
push
and
xlat
aaa
notl
in
push
dec
jl
jnp
adc
loope
dec
int3
jmp
jmp
aas
and
add
sub
in
sub
dec
mov
and
enter
adc
nop
mov
cmp
xor
xchg
pop
ja
imulb
in
out
jecxz
sti
into
fstpt
inc
das
add
xchg
imulb
shll
scas
inc
mov
sarl
pshufw
jecxz
stos
mov
and
jg
cmp
hlt
movsl
jle
orl
dec
pop
sahf
cmp
fistps
push
mov
pop
jbe
lret
push
adc
xchg
in
dec
rcl
xchg
jecxz
sbb
sbb
add
inc
pop
imul
sbb
loopne
cmp
jle
std
sub
mov
and
or
mov
lahf
xchg
cs
sbb
mov
dec
add
pusha
push
iret
movb
mov
dec
loopne
mov
mov
mov
out
xor
rcl
mov
and
mov
cmc
jmp
jle
and
test
inc
mov
test
out
decl
mov
sbb
push
cmp
jmp
lcall
pop
xlat
rolb
mov
test
and
adc
xlat
in
cmc
mov
je
addl
jge
sub
jae
pushf
mov
xor
lret
clc
cmpl
adc
ja
in
fisubrs
pop
les
shr
out
test
sub
cmp
sahf
arpl
sbb
or
lahf
ret
cltd
stc
test
bound
pop
xchg
lret
jno
fcmovu
xor
sub
lods
jge
lea
and
outsb
cmc
call
stos
dec
les
push
cwtl
cmp
int3
inc
add
xchg
rolb
iret
jp
xchg
test
and
jbe
fisubl
enter
outsb
shll
enter
pop
cmc
mov
mov
jmp
mov
inc
sbb
pop
rcr
sub
push
stc
je
lcall
push
adc
shr
and
xchg
loop
pop
jo
xchg
push
xchg
inc
inc
xor
lahf
fs
jg
jb
mov
xchg
push
popa
mov
xchg
lret
sbb
aam
orb
pop
xchg
mov
cmp
push
mov
xor
sub
je
mov
mov
xchg
in
dec
sahf
or
popf
jae
mov
inc
sbb
aam
dec
clc
je
in
mov
jno
clc
jge
inc
test
cmc
pop
test
or
and
pop
aam
xchg
pusha
jmp
mov
push
ljmp
add
cmc
inc
fidivrl
xor
loope
inc
fidivs
aaa
daa
test
dec
sub
sub
gs
cmp
cld
imul
std
pushl
test
cli
ret
adcb
rolb
ja
dec
xor
pushf
je
xor
xchg
adc
and
xchg
jne
int3
jg
sub
push
dec
outsl
mov
xchg
fwait
pop
lods
push
cwtl
les
cmpl
and
popf
arpl
inc
insl
or
mov
call
lret
out
mov
rol
stc
and
xor
int
mov
push
pop
mov
push
les
aam
push
stc
imul
in
add
scas
test
jge
imull
xchg
testl
dec
test
cmpsb
xchg
test
pop
jge
add
and
jp
cs
addl
or
push
jnp
popa
and
loope
mov
push
or
pop
and
repnz
addps
movsl
add
sub
sbb
push
mov
aam
jbe
in
repnz
orl
adc
fistps
repnz
mov
dec
and
ljmp
into
inc
fbld
sbb
aaa
inc
inc
jmp
push
out
lock
inc
mov
xchg
into
sbb
push
cmp
in
call
xchg
ret
out
loope
cmp
lea
cmc
aaa
mov
pop
push
lea
mov
pcmpeqb
repnz
pop
inc
out
push
data16
adc
pushl
sbb
ss
mov
cmp
inc
lods
sub
fcompl
fldt
mov
add
xchg
push
mov
push
add
rorl
push
mov
lock
sbb
mov
ja
jp
inc
mov
mov
pop
sbb
rcll
mov
pushf
lcall
loope
push
mov
rol
pop
pop
inc
cmpl
in
loopne
lret
mov
mov
inc
ja
push
jnp
sti
sub
jge
jl
xor
jbe
sbb
xchg
insl
in
movsl
cmp
ret
sub
in
das
daa
int
cmc
in
mov
xor
insl
leave
mov
lcall
push
jecxz
addr16
inc
loope
in
xlat
arpl
inc
mov
push
dec
dec
push
sti
lahf
jl
into
push
mov
dec
rcl
sub
adc
cwtl
orl
jnp
loope
div
mov
or
nop
cld
inc
incl
insb
pushf
mov
push
cltd
imulb
inc
out
inc
mov
sarb
stc
ret
mov
xor
ldmxcsr
jne
shlb
dec
loopne
mov
pop
repz
dec
cmp
data16
fcmove
stos
cwtl
and
pop
lods
cld
and
cwtl
das
arpl
inc
loope
push
test
push
js
test
cmpsb
sbb
push
mov
xor
out
movsl
sbb
mov
fwait
jmp
mov
xchg
repnz
cwtl
dec
cmp
and
cmpsl
jmp
ss
lea
or
ss
jg
jns
ja
push
fs
pop
push
push
loop
dec
stos
cs
mov
xor
or
pop
test
mov
cs
std
dec
lock
dec
out
outsl
imul
or
or
lods
dec
cld
ds
adc
test
sarb
imul
jl
inc
dec
push
inc
outsb
pop
inc
xor
pop
mov
adc
xchg
mov
cs
xor
loope
pop
rolb
int
cmpsl
mov
and
or
and
loopne
jae
push
std
push
jg
cld
pop
or
push
ret
fistpl
ret
lods
jmp
lret
add
xor
aas
shlb
add
fs
nop
jns
enter
dec
mov
daa
pop
xchg
js
push
push
mov
jne
xor
adc
mov
sti
in
sbbb
andl
fisubl
or
pop
xchg
xor
ljmp
test
insl
daa
mov
mov
stc
pop
repnz
inc
lock
dec
out
jp
push
mov
out
cltd
sbb
pop
sbb
andl
lods
pop
mov
jb
int
cmp
xlat
sub
iret
jecxz
mov
in
inc
inc
jne
arpl
das
sti
xor
add
and
sub
mov
test
orl
rorl
mov
aad
lods
xbegin
arpl
pop
jns
aam
scas
pop
fnstcw
xor
jb
push
add
push
mov
pop
add
fs
rcrl
push
adcb
xlat
or
out
mov
out
or
dec
dec
inc
and
dec
aas
sub
les
into
xchg
stos
add
xchg
out
cltd
mov
cmp
test
sbb
divl
add
std
ret
xchg
rcrl
cmp
jns
ret
icebp
loop
stos
lds
and
adc
or
xor
into
inc
pop
sub
and
mov
pop
bound
xor
mov
fs
ljmp
mov
int3
hlt
dec
fdiv
xor
push
test
push
mov
pop
outsb
fcmovne
outsl
lahf
loope
fwait
cmc
scas
dec
mov
inc
mov
ljmp
mov
xchg
dec
dec
andl
push
jno
movsb
lahf
daa
and
andl
popf
xor
fs
imul
fwait
pop
push
in
and
or
in
sbb
sbb
xchg
xor
xlat
mov
pusha
sbb
cmp
push
mov
push
pop
lret
xchg
gs
xchg
inc
daa
adc
outsb
inc
pop
scas
lcall
or
sub
test
and
ljmp
pop
rorl
fs
mov
test
jmp
aad
jne
cmc
jo
cmp
mov
lahf
and
xchg
fcomps
aaa
mov
push
shll
pop
cld
inc
fwait
imul
mov
jge
jle
mov
stos
or
mov
jg
aad
push
frstor
sub
adc
stos
push
mov
fcoml
fwait
ljmp
add
jnp
and
test
inc
pusha
pop
aas
or
and
jg
outsl
sub
addr16
cmp
in
int
dec
pop
inc
or
mov
sahf
and
mov
arpl
mov
push
out
mov
addb
out
xchg
jbe
push
dec
arpl
nop
adc
and
rorb
lods
mov
jmp
jbe
fstpl
push
subl
cmc
or
push
inc
into
repz
xchg
push
outsb
mov
sti
addr16
push
inc
xchg
inc
adc
outsl
pop
mov
jnp
lcall
shlb
les
gs
ljmp
sub
bound
scas
xchg
lods
inc
in
ficoms
cmp
aaa
push
and
popa
jp
xlat
xor
repz
ja
jl
xchg
mov
sahf
divl
cli
fs
and
inc
loop
add
push
and
lahf
xlat
xor
je
sub
xchg
pop
xchg
scas
roll
or
into
mov
lahf
inc
aad
das
cmp
rolb
pusha
divl
dec
xchg
cmc
iret
sti
fdivrl
mul
sub
iret
addr16
in
cli
or
pushf
out
mov
xor
xor
and
cmpsl
out
or
fwait
ror
sbb
push
in
ds
push
add
arpl
push
out
lcall
mov
push
jbe
jbe
xorl
scas
int
and
mov
mov
jg
stos
test
sbb
jle
les
leave
call
push
shlb
mov
jge
xchg
loopne
call
nop
mov
addl
or
std
test
popf
xor
out
push
or
dec
scas
das
add
cwtl
mov
mov
lods
stos
sub
ds
in
cmp
hlt
sub
sti
iret
insb
fistl
jle
mov
in
lods
cmp
sahf
sbb
jecxz
push
push
rorl
pop
xchg
mov
sbb
lods
gs
push
xchg
push
jno
add
inc
jno
jge
inc
adc
and
xchg
xchg
mov
mov
push
cmp
lods
push
xor
lcall
loopne
leave
in
mulb
pusha
int
xchg
jns
out
movsb
sahf
mov
xor
imul
dec
lea
xor
adc
and
ds
rcrl
sbb
test
dec
xchg
sub
adc
mov
add
inc
or
mov
in
rolb
addr16
sub
xbegin
pop
xlat
mov
clc
cmpsb
push
je
xchg
pop
iret
add
mov
popa
sarb
popf
xchg
cmp
jecxz
in
in
repnz
mov
jle
aam
inc
sbb
add
enter
testl
mov
adc
ljmp
jo
or
mulb
ret
push
and
cmp
or
inc
push
pop
insb
lock
leave
jg
mov
sbb
mov
push
aas
insl
jl
imul
push
adc
push
sbb
popa
cmp
jnp
dec
adc
in
cmpsl
jl
push
xchg
pop
mov
testb
sti
jmp
ret
or
lahf
mov
or
pusha
mov
fsubs
mov
mov
cmp
mov
sub
lods
xchg
outsb
dec
and
movl
add
xor
mov
negl
je
mov
or
sbb
test
das
jae
push
add
sti
xor
call
lea
ldmxcsr
pop
cli
lret
ja
cmc
pop
xorl
cmpsl
cli
mov
adc
mov
iret
push
lds
pop
dec
inc
mov
inc
or
jbe
jbe
loopne
lret
xchg
jb
and
ret
xlat
jmp
push
jg
cmpsb
dec
pop
xchg
jp
iret
sbb
jg
and
sub
jl
pop
dec
jnp
hlt
out
mov
popfw
and
jnp
xor
sub
dec
mov
les
sub
popf
jnp
adc
mov
fidivrs
xor
and
fstpl
cmp
sub
xor
cld
stc
rcll
xchg
testl
jae
or
cli
test
cld
pushf
lods
mov
pop
pop
inc
adc
sbb
in
inc
aad
iret
fwait
aas
mov
scas
push
stos
ret
out
bound
cmpsb
lds
int3
mov
imul
pop
fwait
mov
cli
jae
fnstenv
lcall
inc
ror
pushf
stos
adc
sbb
adc
jmp
es
cmp
stos
and
sti
insl
dec
mov
add
mull
call
mov
testl
enter
stos
aas
ss
pop
int3
push
out
xchg
rol
and
push
and
repz
ljmp
adc
outsb
inc
pop
fistpl
inc
jnp
dec
push
idivl
mov
fbld
pop
push
sbb
sbb
shrl
fdivl
adc
ret
push
arpl
je
mov
pop
lcall
xor
fstps
testl
jae
dec
cltd
jae
xchg
mov
jg
adc
inc
ret
mov
hlt
fisubrs
es
sbb
sbb
cmp
and
stc
push
inc
mov
dec
jge
int
hlt
or
lods
push
jp
cmp
cmp
fmuls
push
push
or
cmp
and
cmp
enter
jecxz
pop
jne
fwait
loope
pop
jae
repnz
mov
out
fwait
push
inc
inc
std
dec
stos
dec
ds
sbb
jae
sti
out
inc
add
pop
jne
lahf
clc
dec
jb
je
and
shll
xlat
addb
cmpl
mov
test
enter
sbb
and
jge
add
pop
or
fidivs
dec
fimull
lret
pop
lret
mov
jmp
xchg
lods
xor
out
mov
imul
cmp
fstps
mov
cmp
mov
int3
mov
and
movsl
pop
mov
lods
push
xchg
jl
add
fisttpll
jo
ljmp
or
fnsave
mov
and
push
mov
rorl
out
cmp
sbbl
enter
push
imul
es
add
adc
mov
dec
adc
out
lret
jp
push
sahf
mov
popf
or
dec
hlt
sub
jecxz
xchg
sbb
jno
shrl
or
adc
stc
add
jne
mov
jns
inc
aas
push
mov
xor
ljmp
cmp
cmpsl
xchg
and
mov
xor
leave
ja
sub
push
add
dec
inc
mov
rol
inc
test
imul
lret
out
or
outsl
pop
insb
cmc
dec
sub
les
and
in
bound
sbb
into
sbb
sbb
jp
cmp
fidivrs
call
cmc
jbe
lret
lods
popf
dec
jmp
ds
jecxz
movb
jmp
or
lock
sub
sub
and
mov
pop
sub
es
int3
xchg
jmp
loope
aas
add
test
mov
mov
xchg
xchg
fisubrs
sbb
clc
add
lret
push
xor
pop
mov
xchg
dec
jns
jecxz
and
repz
cmp
cs
or
call
and
das
sub
ja
ret
mov
call
push
sub
jae
cwtl
out
and
gs
js
jp
jle
loope
out
repnz
adc
lods
sbb
pop
or
cmc
loope
dec
add
fwait
out
mov
xor
lcall
sub
repz
fwait
and
or
mov
xchg
lods
jge
jg,pn
add
in
jbe
lock
xchg
or
add
xchg
push
pop
add
cwtl
inc
mov
repz
or
test
pop
das
adc
mov
xchg
xchg
leave
mov
nop
add
and
shlb
mov
jmp
movsl
cld
adc
cltd
sub
outsb
pop
outsb
rorl
in
lds
sub
imul
xor
lcall
inc
fstpl
inc
push
movsb
xchg
mov
rcl
jno
fidivrl
sbb
push
mov
push
cltd
lock
jl
mov
jmp
xor
addl
inc
sub
or
pop
imul
inc
dec
inc
push
gs
jbe
push
js
mov
sbb
and
mov
mov
lea
repz
sbb
stc
into
xor
lods
mov
ret
in
leave
lea
pop
jle
in
or
fisubl
push
fucom
dec
loopne
fcomps
scas
lret
or
xchg
mov
sarb
leave
leave
out
mov
cmp
sub
sahf
out
in
lret
pushl
jns
call
test
cmp
aas
lods
sarl
adc
inc
xchg
push
dec
mov
cwtl
icebp
aaa
repnz
into
cld
sub
js
mov
je
dec
adc
into
das
xchg
insb
gs
insl
leave
test
sbb
mov
insl
repz
sbb
mov
cmp
mov
out
or
add
je
mov
or
jae
in
or
lock
cmp
pop
das
dec
lea
ljmp
push
stos
out
fsubs
cmp
mov
loope
dec
daa
std
cmp
outsl
pop
mov
inc
jmp
lret
jo
push
rol
add
pushf
leave
lret
sub
ja
loop
out
mov
xchg
cltd
ret
push
mov
jge
xor
out
stos
addb
dec
ja
cli
fistpl
adc
popa
mov
loope
jns
rorl
xor
dec
add
fwait
lcall
push
mov
lock
adc
jne
adc
sbb
inc
scas
clc
cmp
je
adc
jmp
sub
je
inc
fstp
sbb
sub
add
push
xchg
aam
fsubl
js
push
mov
sbb
and
mov
ficoml
jg
std
aaa
sbbl
shll
add
mov
int3
aad
push
mov
js
aad
sarb
cmp
int3
movups
adcb
sbb
mov
vmwrite
push
jge
sbbb
rcrb
jmp
test
mov
std
fcoms
dec
adc
loopne
shr
mov
int3
sbb
testl
adc
aaa
or
sub
sbb
pop
push
scas
hlt
sbb
sbb
movsb
aad
sbb
movl
cmp
lea
mov
ret
xchg
adc
js
sbb
push
popa
pop
dec
pop
dec
jae
and
das
jne
cmp
lea
addr16
aam
test
jbe
and
enter
jbe
gs
lahf
cwtl
xchg
mov
pop
fcompl
sarb
scas
xchg
out
cmpsl
pop
sbb
add
jecxz
dec
mov
xchg
out
insb
dec
jae
ret
mov
dec
test
sub
pop
dec
and
mov
mov
fcoml
popf
ret
fidivrl
clc
lods
imul
adc
ss
lahf
add
pop
xchg
cltd
xchg
xor
xchg
dec
inc
mov
dec
sbb
mov
add
das
cmp
add
inc
movsw
mov
and
shlb
dec
sbb
or
adc
push
loopne
sbb
lret
xchg
push
iret
stos
mov
mov
ficoms
jp
jae
mov
out
or
push
sbb
in
cmpsl
lods
xchg
mov
mov
push
out
pusha
cmc
cli
lods
jno
loop
cmp
adc
cmp
ss
cmp
xchg
pushl
popa
ss
sbbl
inc
into
push
or
mov
test
sub
push
push
mov
add
loop
inc
test
push
jns
fldt
rcr
mov
data16
push
fnstenv
addr16
pop
movsb
push
in
lret
popa
sti
jb
arpl
pop
pop
dec
aam
into
xchg
push
fdivrl
pusha
pmaxub
xlat
ss
mov
dec
sbb
out
in
je
dec
and
jg
das
shl
and
xchg
pop
xchg
test
adc
mov
test
mov
cmp
push
es
orl
add
and
popa
cltd
adc
inc
mov
sbbb
jae
sub
sbb
loope
xchg
ret
push
sub
addb
mov
nop
in
outsb
pusha
test
or
mov
mov
repnz
xchg
cmpsl
cmpsb
mov
inc
mov
cs
cli
pop
ja
cmp
out
add
fdivl
hlt
stos
rorl
inc
lods
or
and
inc
jp
hlt
pop
inc
jnp
mov
test
jns
shll
inc
pop
imul
mov
insb
inc
add
and
inc
call
ret
lret
mov
dec
xor
popa
push
dec
jnp
leave
lock
popf
divb
out
lock
cmp
fxch
movsl
ror
addb
cmpsl
fbld
out
cltd
dec
mov
loop
pushf
jg
jno
scas
add
push
jecxz
fstpl
out
pop
xchg
lds
mov
jmp
cmpsb
aaa
dec
dec
je
sbb
pop
inc
xchg
push
or
jp
sub
push
ja
adc
jmp
stos
adc
addr16
lds
mov
popa
test
paddd
push
adc
lods
sbb
mov
out
ja
aam
mov
adc
pop
out
add
cmp
insl
adc
rclb
inc
sub
sub
jge
xchg
sub
sbb
ja
fiaddl
out
jo
mov
outsl
add
and
inc
mov
fstpl
cmpl
movsb
jnp
add
cmpsl
enter
pop
cmp
xlat
push
std
xor
sub
push
adc
incl
dec
les
inc
add
xor
ret
xchg
loop
add
into
mov
loopne
push
sbb
and
fimull
cld
pusha
cmp
adc
mov
daa
sub
sahf
imul
repz
lock
jo
cld
add
dec
test
loope
push
icebp
jp
sahf
jmp
ret
jae
test
ja
mov
fcmove
xchg
pop
adc
inc
mov
ljmp
aad
fcoml
pop
add
ret
xor
push
lods
sbb
push
adc
sbb
gs
xor
mov
clc
stc
out
loopne
mov
ret
ljmp
std
aaa
sbb
ds
enter
not
in
inc
sbb
ja
adc
adc
adc
syscall
and
sub
jg
jecxz
incl
imul
rol
adc
dec
not
adc
shl
xor
or
rorb
xchg
push
mov
icebp
pop
xchg
mov
add
out
sub
and
adc
lea
ret
loope
push
mov
loop
pop
sbb
jbe
lcall
fistpll
xchg
xchg
xor
mov
pop
mov
js
iret
xor
xorl
cmpsl
jbe
pop
push
push
loope
out
int
inc
pop
cmp
adc
cmp
cmpxchg8b
into
fucom
insb
push
shld
xchg
daa
fdivl
scas
jg
push
loope
lcall
sbb
movnti
jns
mov
mov
adc
mov
fldl
int
sbbb
icebp
add
jmp
outsl
jge
inc
lea
mov
or
jbe
sbbb
pop
push
mov
xchg
sbb
fwait
cmp
incl
shlb
xchg
lret
ret
outsl
outsl
dec
push
jno
popa
std
inc
ret
mov
mov
dec
mov
repnz
adc
sub
outsb
xchg
aas
jns
mov
dec
and
lahf
ljmp
shlb
pusha
xor
xor
and
mov
clc
icebp
out
pop
xor
outsl
sbb
cmp
cmp
enter
adc
pop
mov
mov
cmp
push
mov
lods
int3
pop
adc
mov
ja
dec
mov
cmp
jns
add
ljmp
lcall
jbe
lock
ljmp
gs
inc
push
xchg
cmp
call
mov
mov
xchg
and
addr16
call
push
inc
out
xor
enter
lret
pushf
mov
dec
dec
xchg
in
out
xchg
inc
xor
mov
sbb
pushw
ljmp
decb
xchg
les
inc
test
xlat
or
roll
mov
mov
mov
out
dec
xchg
pop
int3
inc
ja
shrb
pop
adc
sbb
pop
fstpt
xor
imul
and
xor
cmp
cmp
stos
push
stc
rol
cmp
pop
mov
lods
inc
cmp
pop
movsl
dec
aam
cs
fs
adc
std
sub
or
mov
stc
push
xchg
addr16
pop
lret
mov
dec
ret
add
add
sub
and
sarl
cli
aaa
xchg
lock
jge
add
xlat
pop
sbb
fdivrs
clc
cltd
add
fdivr
icebp
xor
cmpsb
xlat
lods
loop
ja
test
ds
sahf
shrl
jecxz
and
es
push
xchg
fldcw
xchg
jmp
push
les
adc
ljmp
addr16
pushf
push
popf
sbbl
je
mov
lea
fcompl
mov
add
lds
ja
add
xlat
bound
inc
rcrb
sbb
pop
inc
lods
xor
mov
xchg
shlb
rol
insl
jns
mov
movsb
xchg
mov
mov
xlat
dec
les
scas
test
in
xchg
pushf
int3
mov
xchg
pop
mov
mov
js
dec
dec
sbb
or
add
xchg
in
cli
ret
imul
ds
mov
push
dec
addps
movsl
loopne
call
mov
ficompl
loop
mov
icebp
lea
mov
xchg
jns
and
adc
pop
adc
paddb
inc
int
movsl
pop
xor
jb
cmc
dec
addb
imul
xlat
cli
movl
and
mov
add
arpl
xor
dec
mov
xor
xchg
cmp
ja
in
mov
movsl
int3
and
adc
movsb
dec
cmc
xor
je
push
mov
nop
pop
jno
ret
pushf
lahf
insb
rcrb
mull
flds
es
xchg
push
add
sub
push
adc
push
cli
movsb
movsb
or
inc
adc
xchg
add
mov
popa
xor
imul
or
test
inc
pop
pop
divl
jno
cmp
fwait
mov
sbb
sbb
xor
add
adc
xchg
in
lock
test
cltd
insb
sub
iret
dec
xorb
js
and
sub
fcmove
sbb
mov
cmpsl
sti
rolb
xchg
sub
mov
rorb
les
loope
xchg
fcomps
add
jne
int
xor
cmp
inc
sub
mov
sbb
mov
push
or
xor
mov
and
sub
out
call
sub
ret
xor
gs
jg
iret
sahf
push
xchg
xor
push
sub
pusha
mulps
shlb
add
sub
sahf
movsb
push
mov
cli
pusha
cmp
or
std
push
or
stos
ss
jae
sbb
out
inc
pushf
sbb
xchg
dec
sub
xor
sbb
push
clc
lahf
add
mov
pop
pop
daa
bound
aam
xchg
jg
mov
or
adc
dec
lock
mov
adc
adc
aam
xchg
pop
mov
pop
into
inc
jmp
mov
and
mov
sub
or
mov
inc
lahf
adc
mov
pop
pop
jle
les
mov
mov
sahf
int
cld
in
inc
dec
fidivrs
mov
mov
pushf
add
pop
dec
lods
mov
mov
jo
pop
mov
mov
add
adc
sub
and
loopne
cmp
xchg
push
pop
test
lods
xchg
stos
pop
inc
bound
pop
outsl
add
aad
loopne
dec
or
fstp
xchg
push
mov
rol
into
movsb
ret
sub
mul
jns
xchg
gs
add
mov
popf
sbb
popa
mov
mov
stos
lods
nop
rorb
pop
cs
out
test
jb
push
inc
or
jp
or
int3
les
loope
mov
xchg
dec
into
mov
test
inc
and
imul
adc
hlt
test
imul
rclb
and
xchg
adcl
shrl
push
leave
pop
out
jmp
or
stc
stc
aad
ret
dec
test
sbb
sub
push
inc
ljmp
sub
xchg
or
adc
lret
xchg
sbb
pushf
stc
mov
testl
inc
push
movsbl
lret
int3
enter
and
xchg
xor
inc
jp
mov
jp
int3
sub
test
sahf
pop
sahf
enter
jns
mov
or
pushf
mov
loope
lret
lock
ret
jbe
ffreep
pop
push
xchg
loopne
mov
mov
loopne
lock
cmp
test
pusha
sbb
in
mov
jmp
or
jge
or
or
call
cmpsl
arpl
sub
hlt
pop
pop
add
sahf
test
test
adc
movsb
pop
mov
xorl
fcmove
lahf
js
es
sbbl
pop
stos
dec
arpl
iret
out
xchg
ret
dec
add
sub
rorl
arpl
push
xor
pusha
or
inc
mov
push
sub
gs
addl
jp
cmpsb
iret
push
repz
fnstsw
das
divb
jo
sbb
push
outsb
jp
inc
hlt
test
fwait
mov
pop
out
dec
lea
lret
stos
mov
push
lea
jle
and
fwait
dec
scas
xchg
dec
cmp
imul
shrb
rcrb
mov
xor
xorl
sub
inc
cmpsb
sbb
sbb
mov
nop
sbb
mov
mov
mov
in
icebp
inc
mov
mov
push
jo
push
mov
xchg
xor
inc
hlt
sarb
cmc
jmp
push
jns
dec
adc
pop
mov
and
mov
insb
ret
add
sbb
jns
xchg
leave
cli
test
xchg
hlt
call
sub
outsl
ficomps
pop
dec
inc
dec
clc
sub
adc
in
aas
cmp
jns
add
inc
pop
negl
pop
dec
adc
mov
imul
ja
pusha
test
out
sbb
test
std
xor
fdivr
stos
std
cwtl
in
jg
lcall
jge
hlt
mov
dec
fcmovu
pop
xor
and
imul
jl
dec
scas
out
enter
xchg
sub
cmpsb
push
jmp
fisubs
sbb
scas
les
mov
jecxz
and
popf
testl
int3
mov
push
push
xchg
lods
push
xor
cs
jne
pop
das
aas
fstpl
jp
pop
cmp
xchg
sub
jo
aaa
mov
mov
cld
mov
inc
scas
inc
cld
lcall
stc
mov
push
cwtl
push
add
sbb
movsb
into
leave
pop
fadds
cmp
aaa
sbb
xlat
pushf
pop
loopne
dec
fcompl
fsubl
int
xor
out
inc
xor
inc
out
lea
adc
pop
cwtl
cmp
mov
jmp
sbb
lods
pop
cmp
xor
cmpsl
std
cmp
orb
sahf
mov
std
andb
xchg
jecxz
xchg
adc
jp
shlb
jnp
outsb
pop
lock
lret
mov
sbb
je
in
lea
test
inc
xchg
out
mov
mov
fwait
aam
push
popa
mov
mov
mov
cli
fwait
enter
test
add
lret
push
orl
iret
push
sub
gs
arpl
and
aaa
mov
push
cmp
pop
mov
and
shlb
push
mov
faddl
add
ds
ljmp
rcr
jecxz
and
xor
jb
fyl2xp1
enter
xchg
cmp
arpl
lock
lds
scas
ja
aad
mov
imul
iret
jle
mov
das
popa
mov
inc
inc
test
cmp
out
or
lds
inc
push
repnz
loop
aaa
lret
sbbb
insl
jmp
cld
jle
adc
mov
leave
dec
cmc
push
mov
dec
inc
iret
jmp
stc
out
jnp
addb
scas
mov
test
xchg
sbb
pushf
int3
push
sahf
popf
jne
pop
sahf
adc
stc
adc
in
frstor
xlat
mov
int
push
fdivr
push
mov
push
dec
inc
sub
out
mov
cs
hlt
ret
xchg
push
inc
or
jg
or
sti
scas
jle
cmp
xor
mov
negb
mov
notl
or
inc
jno
inc
xor
fistpl
js
out
mov
imul
and
sub
leave
mov
mov
sbb
push
shrb
jns
and
clc
pop
imul
out
das
shl
dec
sbb
jns
lods
cld
test
dec
mov
mov
int3
jle
or
fcompp
add
adc
or
stos
mov
pop
lock
and
or
xchg
or
add
pop
jno
inc
xor
in
es
stos
lods
jo
loopne
fisttpl
mov
pop
fildll
es
lahf
lods
aam
dec
fdivr
cmp
mov
mov
mov
cli
test
sub
repnz
gs
je
cpuid
dec
repz
ret
insl
pop
push
and
dec
lea
cs
out
push
addr16
lock
add
sarl
test
mov
mov
fsubp
movsl
lods
cmp
gs
push
and
push
stc
out
fisttpll
xchg
push
je
dec
aaa
shrl
jmp
loop
fcompl
jns
cmp
fadds
mov
pop
clc
or
test
adc
jmp
pop
ffreep
aaa
cmp
pop
mov
out
in
call
sbb
xor
repz
faddl
sbb
pop
and
lcall
fisttpll
sbbl
inc
inc
fsts
mov
popa
rcr
ficoml
std
jl
sbb
pop
inc
push
sub
sub
lods
idivl
jae
clc
cmc
loopne
aas
icebp
fwait
popf
and
push
xlat
mov
fnstenv
mov
inc
scas
ljmp
in
jb
mov
inc
fstpl
cmpb
adc
in
sub
sbb
dec
testb
fisttps
lods
mov
mov
movsl
loope
call
in
sbb
sbb
repz
mov
jmp
dec
arpl
add
nop
sbb
adc
clc
je
or
mov
push
roll
popf
mov
ret
xor
pop
inc
adc
sbb
mov
mov
and
out
adc
lret
jnp
inc
insl
mov
inc
dec
repnz
mov
push
mov
push
gs
mov
cmp
rcr
cltd
mov
outsb
movsb
repz
push
jne
xlat
and
mov
pusha
sub
call
xchg
mov
pop
adc
and
cmc
in
aas
in
mov
andl
inc
cmp
jmp
xchg
xchg
es
inc
cmp
mov
js
mov
int
dec
mov
mov
xor
sub
xor
jmp
xchg
inc
jle
inc
pop
push
insb
push
bound
push
push
int
and
push
pop
negb
loope
pop
lods
sub
movsb
aam
data16
add
mov
lds
fcmovb
xlat
imul
xor
mov
popf
stc
mov
cmp
inc
rclb
fdivrl
dec
adc
jb
push
xchg
xchg
push
test
decl
movsb
cmc
outsb
loopne
lret
iret
xchg
fs
testl
insb
pop
gs
into
ss
xchg
and
scas
into
imul
dec
xor
out
sbbl
idivl
adc
and
sar
mov
inc
push
dec
sbb
inc
mov
mov
and
mov
or
mov
imul
mov
mov
test
mov
push
push
cmpsw
out
pop
insl
cmp
mov
jne
icebp
das
rorl
out
and
push
xor
movsl
out
pop
in
testl
loope
mov
dec
or
lods
ja
push
push
fwait
jno
fwait
test
cltd
test
jb
sbb
cmpl
push
pop
lret
jge
jns
push
lret
rclb
js
scas
pop
mov
notb
aam
jmp
mov
dec
or
std
and
pop
jg
insb
mov
push
jecxz
les
push
icebp
lds
push
mov
pop
pushf
loope
aaa
sub
push
sbb
mov
mov
mov
and
mov
and
rorb
or
add
xchg
scas
cmp
andl
ljmp
xchg
stos
mov
adc
xchg
rol
push
hlt
ljmp
stos
nop
scas
and
jp
out
mov
push
xchg
fnstsw
test
and
inc
push
adc
mov
xor
cltd
sub
mov
pop
inc
shl
movsl
pop
cltd
add
je
shrb
push
rcrl
jo
jbe
aad
jb
mov
push
add
outsl
dec
scas
sub
sarb
sbb
mov
jecxz
mov
xchg
mov
xchg
andb
mov
jne
int
in
adc
stos
aas
jnp
fcmovnb
ds
push
shl
cmp
adc
xchg
cmpsb
stos
inc
fcomps
xor
mov
fs
enter
roll
push
push
mov
inc
popf
test
jno
icebp
add
test
add
popf
stc
ljmp
cmpsl
dec
push
in
imul
push
incl
pop
jnp
xor
ret
and
outsb
mov
mov
or
iret
jo
pop
call
daa
mov
imul
lcall
dec
sbb
lret
or
fstp
or
mov
push
fisubs
inc
scas
mov
mov
push
imul
sbb
out
jbe
leave
push
sub
push
dec
mov
xor
shll
mov
ret
inc
out
roll
mov
push
xchg
mov
call
test
fldenv
push
std
jmp
arpl
out
push
aas
lods
cwtl
cs
pusha
ds
popa
or
cmc
repnz
divl
clc
cmpsb
inc
test
xor
repnz
adc
inc
push
popa
push
mov
mov
imul
jmp
enter
mov
outsl
sub
jno
scas
fnstsw
add
push
mov
or
xchg
cmp
jae
out
ds
in
adc
jge
hlt
call
sub
push
cwtl
sub
and
or
jnp
pop
add
push
das
pop
mov
test
lods
cmp
jnp
pop
xor
outsb
and
push
hlt
pop
or
mov
test
cld
insb
loope
cwtl
jbe
jmp
dec
aas
dec
in
xchg
mov
xor
fdiv
add
cmc
stos
xchg
mov
xor
add
pop
jmp
ret
loopne
add
xchg
out
mov
outsl
lahf
inc
nop
fsubrl
das
push
movl
shll
iret
mov
pop
movsl
pop
test
xchg
lods
pop
cmp
orl
push
cmpb
cmp
cmp
mov
fs
shrl
rorl
cmpsl
adc
xor
or
int
inc
xchg
xor
dec
nop
cmpsb
cmp
cld
mov
pop
sbb
pop
ljmp
test
jne
faddl
add
cmpb
loope
dec
push
mov
scas
add
pop
mov
cmpsl
jg
nop
repnz
enter
lret
fisttps
dec
push
dec
fcmovne
add
not
mov
inc
test
arpl
lds
pop
dec
cmpsb
mov
enter
lods
fwait
or
data16
sti
ja
dec
xchg
mov
loopne
out
xchg
dec
push
sub
call
xor
mov
and
testl
aas
sbb
cmp
dec
rorb
push
rol
dec
lods
in
or
shrl
add
mov
jge
xchg
lea
fsubrl
leave
in
mov
xor
inc
xlat
inc
mov
add
cmp
pop
cmpb
sarb
adc
pop
loope
pop
adc
xlat
xor
out
in
ficomps
sub
filds
sub
loop
sahf
sti
icebp
leave
cmp
inc
rorb
sub
jmp
repnz
push
and
ss
lea
sub
mov
push
xlat
mov
call
xchg
ret
dec
cmp
ret
insl
cmpsl
sub
sub
add
jno
jg
jl
xor
cli
inc
test
sbb
test
js
mov
mov
loopne
incl
ja
dec
pop
adc
leave
repnz
jge
test
int
test
adc
adc
add
adc
sbb
and
jns
jl
add
or
lods
aaa
mov
std
les
pop
js
lods
dec
adc
jns
daa
pushf
loop
mov
popa
mov
loop
fwait
enter
imul
enter
add
mov
lret
imul
add
out
outsl
jb
insl
mov
add
dec
daa
test
outsb
aas
sahf
push
inc
decl
dec
pop
js
sub
mov
pop
lds
dec
ljmp
jmp
test
jp,pn
jl
movsl
jns
inc
scas
ja
jmp
imul
dec
sub
xchg
je
mov
lcall
inc
or
bnd
cmp
movsl
cmovo
pop
push
inc
sub
xor
mov
scas
mov
lds
cmpsl
ss
shlb
adc
cmp
cmpb
leave
cmpsl
mov
fadd
mov
popa
pushf
stos
or
ja
pop
inc
faddl
icebp
mov
fdivl
inc
mov
push
dec
lods
ljmp
xchg
nop
push
xchg
insl
jge
rolb
rorb
mov
add
mov
adc
mov
ds
fisubrl
cmc
icebp
insl
ret
mov
dec
iret
jge
mov
daa
inc
cmp
psrlw
xchg
cmc
loop
sub
sub
fs
pop
mov
aam
inc
adc
mov
inc
leave
and
jo
inc
push
and
into
hlt
in
pavgw
dec
lods
sbb
ficoml
call
add
mov
mov
dec
pop
dec
lea
jecxz
dec
xchg
jb
lea
in
bound
mov
out
xlat
iret
movsb
xchg
out
sub
mov
out
adc
imul
enter
jle
dec
pop
pusha
add
add
fsts
aaa
enter
mov
xchg
xor
fwait
jg
xor
and
test
lods
mov
loope
pushf
out
jae
fs
adc
dec
add
sub
xchg
xchg
out
ss
lcall
lds
jno
cmp
movsl
pop
mov
fwait
adc
xor
out
sbb
or
mov
cmp
adc
mov
mov
mov
into
test
sub
ret
mov
pop
les
lret
jmp
push
dec
push
jne
mov
in
or
shrl
adc
cld
orb
push
xor
push
adc
xor
sub
andb
cmp
mov
lods
lcall
out
lcall
sbb
pushf
adc
pop
icebp
pop
mov
mov
lea
xchg
out
nop
in
ret
pop
pop
mov
nop
lods
inc
rcl
lcall
aad
cmp
in
mov
aas
fsubrs
add
cmp
add
dec
and
sub
jp
insl
or
in
into
sub
fdivrl
fcomps
pop
insl
inc
dec
jle
jae
jno
insb
in
cmp
sub
imull
call
pop
jno
inc
adc
xchg
mov
out
mov
mov
aam
aam
push
dec
shrl
mov
xor
out
jne
push
hlt
mov
mov
inc
inc
mov
cli
adc
jo
out
xor
dec
dec
jb
push
mov
addr16
outsb
add
imul
push
imul
pop
shrl
push
mov
jns
cwtl
pop
outsl
jno
jb
adc
jle
sbb
pop
inc
mov
in
pushf
mov
dec
cmpsl
mov
or
cmpsb
pop
imul
pop
mov
jp
iret
stc
popa
inc
pop
mov
into
mov
ds
aam
je
xchg
into
adc
cmp
subb
sub
into
mov
mov
or
test
xor
jne,pn
cmp
adc
ss
jo
nop
push
mov
pop
mov
mov
xor
xor
je
arpl
and
lods
fsubrs
jmp
cmp
repz
rcrl
cmpsb
aaa
push
sub
cmpsl
cmp
lret
xor
out
jg
xchg
pop
sahf
lret
jae
pop
mov
mov
inc
call
cmp
mov
push
push
loop
push
push
js
mov
sub
jo
xchg
test
js
lock
push
enter
add
cwtl
xchg
scas
pop
test
adc
push
fisttpl
ljmp
in
imul
inc
mov
inc
ljmp
push
mov
pop
or
das
insl
push
dec
test
fistps
mov
dec
mov
scas
inc
rcl
jb
dec
lret
dec
lahf
push
xor
daa
int
cmp
fs
xchg
inc
lret
gs
lahf
push
push
fcompl
loop
ds
inc
mov
mov
inc
push
repz
lahf
out
sbb
inc
js
inc
xchg
xor
xlat
xchg
bound
dec
xchg
xchg
xor
pop
repnz
adc
mov
fcmovnb
js
sub
jecxz
mov
lcall
push
cmpsb
ds
sbb
xchg
mov
leave
loope
into
or
xor
mov
iret
rorl
ja
xor
sub
cli
ljmp
xchg
ds
pop
ret
mov
xchg
fmulp
dec
in
popf
inc
inc
adc
js
inc
shll
xlat
lcall
and
testl
xor
push
enter
leave
cmp
loopne
xor
xor
cmp
jb
out
popf
ret
mov
pop
push
jo
mov
repnz
mov
jb
xlat
ret
jge
lcall
push
mov
addr16
fs
sub
xchg
mov
rolb
jns
mov
clc
fs
mov
mov
repz
insb
sarb
lock
push
dec
lods
cmp
enter
int3
ret
and
jnp
push
js
dec
inc
fs
lods
loop
xor
shr
rcr
in
xor
fiadds
sub
mov
lock
pop
sbb
sbb
cmp
hlt
mov
add
sbb
test
pop
xchg
ret
movsl
or
push
arpl
faddl
cmp
loop
or
or
loopne
movsb
xor
pusha
add
aaa
je
test
notl
push
add
outsl
mov
and
dec
xorl
test
pushf
add
push
pop
and
arpl
ds
fldt
shll
lods
xchg
test
rcrl
push
adc
dec
or
mov
leave
cmp
mov
loop
inc
adc
push
es
pop
movsb
push
out
and
inc
jl
in
sbb
sbb
push
ret
mov
pmuludq
mov
mov
daa
rcl
mov
lcall
ret
cs
cltd
mov
ljmp
cmpsb
stc
and
push
mov
pushf
mov
jb
or
jbe
dec
stos
jecxz
leave
loop
xchg
clc
les
push
dec
pop
dec
call
push
mov
and
inc
int3
or
push
add
out
sub
lods
cwtl
add
add
and
jp
xlat
push
jb
fistpl
popf
inc
lahf
insl
jne
dec
add
xor
dec
jg
pop
jb
shrl
add
ja
stos
mov
int3
movsb
icebp
xchg
lret
int3
sahf
inc
pop
adc
xor
jo
nop
roll
or
mov
cmpb
lods
xor
in
inc
or
cmpps
loopne
gs
adc
lods
push
inc
lods
js
xlat
jg
push
adc
adc
mov
lahf
scas
mov
jecxz
sbb
lea
inc
mov
bound
mov
jl
pop
push
push
in
sbb
xchg
xor
push
inc
xchg
insl
mov
jo
sbb
push
aam
push
jmp
sbb
jmp
int
in
pop
xor
mov
xor
mov
mov
ds
jno
mov
sarb
fnstcw
imul
in
dec
testb
push
mov
outsl
push
cmp
push
sub
push
push
pushl
and
rcrb
ret
nop
push
rorl
stc
adc
sub
fbstp
rcll
cmp
lods
fistl
out
xchg
push
adc
adc
cld
daa
mov
ja
test
jnp
lret
mov
push
pop
mov
and
out
sub
aam
std
push
mov
je
mov
add
inc
sub
mov
shll
cmpsb
pop
mov
xorb
lret
fstp
jne
negb
jno
pop
cmp
jle
jbe
scas
ret
xor
icebp
mov
movsb
jle
into
adc
and
xchg
outsl
ds
popf
inc
cli
mov
cld
je
call
cld
out
mov
cmp
pop
scas
or
fidivs
add
jae
sub
jp
sbb
lea
jno
and
cmp
cmp
and
inc
or
mov
inc
rolb
add
add
ror
dec
test
mov
add
inc
inc
sub
stos
je
bound
iret
cmp
mov
mov
out
pop
mov
test
jge
adc
mov
adc
cmc
xchg
mul
mov
inc
shl
push
cs
adc
repnz
adc
jns
or
or
movsb
popf
cmc
decb
or
fcompl
add
subb
icebp
dec
cwtl
or
mov
test
test
in
popa
mov
push
pop
shlb
xchg
bound
loop
ss
push
pop
stos
xchg
push
inc
jo
pop
push
add
std
or
jecxz
pop
imul
cld
out
stos
xchg
popf
xchg
into
push
dec
rolb
inc
cli
mov
inc
push
mov
ret
dec
xchg
push
cld
pusha
pop
lods
nop
push
sub
nop
cwtl
movsl
cmp
out
out
mov
jnp
cmp
sbb
dec
dec
lcall
mov
test
jl
out
sarl
sbb
loop
sub
mov
es
mov
inc
je
jmp
jmp
inc
stos
out
je
in
cmp
inc
movsb
mov
cmp
insb
dec
mov
ljmp
mov
mov
and
pop
lret
fmull
test
adc
cmpsb
sarl
lds
push
pop
fidivrl
xchg
and
aas
dec
mov
and
fidivrs
pushf
lds
movsb
stos
mov
cwtl
jecxz
pop
and
mov
repz
pop
and
push
ljmp
jmp
in
out
sub
test
xchg
enter
pop
adc
mov
mov
inc
pop
insl
addr16
mov
subb
and
pop
jmp
fidivl
out
cmpsb
push
outsl
popa
dec
mov
aaa
push
pop
test
and
push
decb
shll
lret
rcll
inc
cmc
cmp
leave
test
cmpsb
icebp
push
gs
adc
pushf
dec
and
push
stos
test
test
inc
pop
in
addb
adcl
std
sub
das
fstps
pusha
jg
js
jle
add
pop
inc
adc
lock
pop
lea
movsb
mov
push
sahf
fdivrp
jge
mov
add
mov
shr
fs
movsb
lret
sbbl
lretw
rcrb
xchg
f2xm1
pop
push
idivl
aad
test
mov
out
stc
push
scas
bnd
jns
cmpsl
cltd
sbb
push
sbb
rclb
rolb
jne
jo
shlb
mov
nop
clc
addr16
xchg
pop
lcall
jle
inc
shl
int
pop
xor
inc
mov
stc
enter
inc
and
inc
inc
pop
dec
jmp
outsb
mov
into
push
cwtl
pop
lods
mov
sbb
pop
or
mov
jl
pop
xchg
adc
mov
notb
or
dec
mov
das
cmp
jmp
dec
je
nop
push
jae
push
sti
xor
int3
int
aaa
push
cmpsl
or
fcompl
or
in
push
mov
dec
es
mov
int
dec
sbbl
jns
and
fists
in
movsb
negl
es
and
out
cmpsb
aad
inc
push
mov
inc
ror
subl
sub
lods
lahf
sub
or
adc
xchg
push
lcall
lcall
xor
adc
add
arpl
add
addl
scas
cmp
dec
jp
pop
out
test
std
mov
jb
enter
ret
mov
clc
popa
inc
push
sti
sarb
lods
lret
mov
sbb
sub
sub
in
push
cli
clc
or
sub
push
sub
rclb
jmp
sti
je
pop
daa
cmp
mov
pop
popf
aad
scas
push
dec
inc
xchg
xor
mov
mov
or
jns
push
movsb
push
icebp
xchg
in
jmp
in
sbb
adc
xchg
fwait
xchg
addr16
adc
mov
dec
icebp
or
pusha
push
lret
aas
cmp
jne
pop
shr
mov
lea
ja
cli
sbbl
popa
dec
sub
icebp
push
es
add
mov
sub
adc
cmp
xor
push
mov
stos
add
sbb
aaa
pop
mov
inc
adc
lahf
ret
das
mov
clc
xchg
xlat
lods
sbb
mov
mov
and
call
les
les
xchg
es
lret
repnz
xor
movsb
dec
jo
pop
mov
add
jl
and
or
mov
push
in
adc
in
and
and
and
cmp
data16
pop
push
mov
inc
push
imul
repnz
addr16
pop
xor
imul
pop
mov
je
mov
mov
int
mov
dec
mov
add
push
jne
or
stos
jmp
pcmpeqb
fsubrs
adc
pop
sahf
sbb
push
pop
pop
scas
iret
cli
jle
and
mov
xchg
leave
sub
shll
adc
or
mov
sahf
test
aaa
dec
faddl
sub
hlt
cli
mov
jnp
scas
enter
bound
fdivrs
int
fdiv
lds
pop
testl
movsb
push
hlt
xchg
sbb
sub
loopne
sbb
cmp
lret
aaa
and
pop
gs
and
jg
lahf
mov
jg
in
jne
cmp
sbb
sbb
stos
or
pushf
pop
xor
popa
lds
xchg
or
adc
std
subl
cld
loop
shll
fcoms
lock
fwait
int3
or
push
shlb
push
rclb
mov
sub
jmp
mov
mov
dec
cltd
add
stc
sub
mov
add
xchg
out
dec
cmp
jge
fiaddl
mov
push
sti
popf
mov
or
sub
lock
repnz
cltd
push
and
pop
test
stos
cltd
movsl
ficoml
pusha
dec
stc
das
mov
out
in
lcall
int
mov
jmp
sbb
inc
xlat
out
aaa
mov
push
stc
mov
arpl
add
sbbl
adc
add
cmc
add
xchg
sub
sbb
cmpsb
in
xor
or
add
jge
test
out
stc
lcall
mov
lcall
sti
or
mov
pop
xor
aaa
lahf
jns
adc
push
test
push
cli
mov
xor
and
push
imul
jl
rolb
add
or
mov
test
adc
sub
inc
sbb
fimuls
mov
and
orl
mov
arpl
push
mov
lahf
mov
push
lcall
in
cmp
adc
and
shl
adc
mov
imul
scas
xor
imulb
rorb
clc
xchg
push
daa
xor
add
out
shlb
lcall
adc
xor
lcall
movntq
push
into
add
arpl
fldt
push
mov
lret
inc
mov
xchg
fdivrp
test
hlt
outsl
and
and
mov
mov
push
repnz
mov
mov
mov
nop
popf
dec
jmp
popf
sub
mov
or
or
call
adcl
dec
nop
xchg
lods
jns
inc
js
add
jmp
cmp
mov
inc
inc
hlt
cmpsb
cmp
pop
pop
lret
loop
and
xlat
xor
movsl
and
mov
rcll
push
sbb
or
cmp
in
pushf
xchg
fdivl
aaa
daa
jnp
fidivrs
or
stos
dec
pushf
rol
mov
xchg
mov
push
insb
or
ret
push
aas
in
mov
mov
in
xchg
add
leave
arpl
sbb
add
xor
mov
fsubrl
inc
stos
cs
out
mov
fcoml
jg
add
dec
or
adc
cmp
imul
mov
in
jae
xchg
repnz
and
sub
or
iret
push
lret
nop
aas
test
pop
lahf
mov
aaa
flds
out
mov
insb
add
or
and
mov
fs
test
fmul
and
push
push
fmuls
mov
es
pop
cmp
push
mov
iret
sbb
clc
ficompl
les
inc
push
xor
lock
in
or
cld
jbe
cmp
pusha
add
lcall
add
mov
cmpsb
jge
ds
cmpsl
sub
inc
movsl
jle
lcall
cmp
lods
add
out
dec
jmp
add
int
shrl
inc
xchg
lea
xchg
sbb
fdivrs
sub
ljmp
lahf
sbb
add
dec
ret
sbb
inc
pop
jne
dec
leave
add
test
adc
lods
xchg
cmpsl
and
dec
aas
cmpb
lods
mov
frstor
cmc
pop
pop
call
outsb
lcall
outsl
orb
push
sbb
add
push
mov
arpl
add
push
sub
cmpb
xacquire
jo
in
sahf
mov
add
jg
loopne
out
push
xlat
frstor
ja
rolb
or
mov
dec
sub
inc
cld
jno
in
std
sbb
stos
lahf
jnp
scas
aad
cmp
inc
mov
je
bound
jmp
lret
and
test
fwait
dec
je
mov
pop
mov
stos
adc
mov
sbb
aad
aad
jo
into
and
lods
inc
mov
stos
add
add
and
movsl
pop
enter
iret
mov
pop
dec
add
mov
add
test
sar
push
or
cmp
test
mov
dec
mov
push
add
mov
pushf
or
loop
xchg
into
adc
or
roll
shlb
in
xchg
insl
enter
aad
xor
sarb
sub
and
cmpsb
sbb
inc
sbb
clc
push
cmp
adc
cmp
pop
mov
push
in
je
in
mov
std
adc
xchg
add
mov
cmpb
aad
bound
js
dec
mov
sahf
sahf
jo
je
jns
cmp
push
xorl
jo
mov
xchg
jno
mov
outsl
pushf
stc
scas
call
push
dec
insb
sbb
pop
jns
inc
mov
cmp
mov
rclb
loopne
int3
mov
sub
mov
adc
test
leave
out
inc
mov
les
loop
mov
lods
mov
mov
jne
ret
pop
dec
xlat
mov
xchg
data16
push
cltd
jnp
adcl
aaa
cmpsb
out
mov
stc
popa
mov
in
dec
adc
jo
hlt
push
pusha
mov
push
mov
jmp
arpl
pop
push
fdivr
cmp
jecxz
cmp
cltd
mov
adc
out
es
jle
rcll
push
decl
std
addl
cmp
mov
imul
sub
lock
sbb
xor
aad
mov
arpl
xchg
push
mov
sahf
push
stos
xchg
add
or
rclb
push
stos
ret
popf
xchg
mov
inc
data16
mov
xchg
dec
movsl
test
cmp
mov
or
mov
push
inc
lahf
into
repz
xchg
and
add
mov
div
jnp
add
enter
inc
push
out
fisubrl
pop
sub
cmpl
push
fidivrs
enter
ret
sbb
push
xchg
dec
cmp
fbld
mov
dec
fisttpll
sbb
add
fimull
sbb
cmc
inc
push
inc
ja
or
jg
xchg
adc
mov
ret
shll
pop
notl
inc
xchg
aas
fdiv
test
jo,pt
cltd
push
push
mov
cmpsb
jns
rorl
jmp
sbb
les
sarb
out
mov
dec
pop
sbb
das
daa
movsb
inc
insb
cmp
test
xchg
sub
fsubrs
mov
xor
adc
pop
int
push
pop
scas
pop
insb
loop
cmp
push
fwait
mov
cmp
sbb
jle
cmp
fdivs
xchg
xchg
shlb
mov
addr16
xchg
notl
and
push
arpl
lock
adc
mov
movsb
test
lods
into
pusha
mov
repnz
lods
fsts
ds
or
dec
lret
mov
lcall
jle
add
roll
xchg
mov
pop
and
out
mov
dec
or
rcrl
mov
xor
in
xor
sub
fstl
dec
adc
lret
and
cli
xor
xor
sub
into
ja
and
push
insb
lods
movsb
adc
lods
cmp
sahf
mov
in
es
lods
or
push
imul
pop
sbb
cmpsl
shrl
add
jbe
dec
sub
jnp
ljmp
push
mov
loop
xor
sti
lret
inc
xor
testb
mov
push
sbb
pop
je
or
mov
mov
int3
aam
push
mov
in
jne
or
pop
mov
sbb
bound
ret
xlat
je
add
pop
int
xchg
mov
adc
mov
inc
jno
es
mov
nop
mov
sahf
pop
std
add
jmp
or
test
mov
mov
push
inc
in
ljmp
push
loope
push
inc
ss
movsb
xchg
hlt
or
je
dec
sub
xchg
fwait
pop
xor
pop
dec
mov
cmp
or
push
in
pop
lahf
ds
gs
inc
adc
enter
fldt
inc
dec
push
xchg
inc
and
add
jle
cmc
loope
add
aam
insb
stos
jb
jnp
adc
icebp
add
mov
das
and
in
int
push
mov
sub
rcrl
xor
mov
fucomi
cwtl
movsb
jle
cli
mov
hlt
icebp
in
outsb
jecxz
mov
jbe
lods
into
inc
adc
or
mov
sbb
adc
or
xchg
mov
inc
test
fisttps
mov
subl
outsb
cmpsb
fsubl
and
test
sbb
fwait
adc
add
mov
cmp
notl
xor
and
cmp
aas
cmp
xchg
jl
xor
dec
dec
and
xor
mov
mov
ljmp
push
aad
rorb
pop
lods
js
lret
gs
cmp
inc
lea
or
pop
cmp
jmp
mov
aas
pop
mov
push
xlat
mov
lock
push
les
xchg
jl
sbb
gs
xchg
jl
fucom
push
out
pop
mov
xchg
popf
lock
cmp
mov
xchg
dec
fsubl
dec
xchg
mov
ret
cmp
into
sub
sbb
adc
loop
jnp
cwtl
mov
jae
mov
cmovle
cmpsl
outsl
sbb
push
loop
roll
seta
lds
je
lods
cmp
int3
negl
add
repnz
cld
enter
sar
mov
mov
mov
fdivrl
shrl
push
repnz
inc
add
sub
jb
jmp
sub
dec
int3
sbb
shr
sub
mov
lock
divl
out
decb
je
dec
es
dec
dec
imul
mov
jbe
cltd
xor
arpl
xchg
out
push
cmp
arpl
dec
ret
movsl
je
stc
jbe
mov
fs
decb
cltd
mov
pop
movsl
xchg
mov
aaa
pop
lods
mov
cld
cmc
sbb
jecxz
add
xor
aam
mov
adc
js
dec
sub
in
out
daa
mov
xchg
dec
xor
daa
fnstenv
das
jo
mov
add
cmpsl
push
or
sub
xchg
or
add
mov
adc
ss
outsl
cmp
xchg
in
out
aas
cs
dec
ja
mov
ret
sub
and
mov
xchg
leave
sub
test
rorb
lcall
test
aad
movsl
mov
sub
xor
adc
push
jp
dec
movsl
xchg
mov
and
nop
fsubl
or
push
adc
test
fdivl
adc
push
cmp
fucom
movsb
cwtl
xorl
dec
mov
std
cmc
in
xorl
sub
repnz
iret
xchg
aaa
jg
sub
inc
fsubr
lock
mov
inc
dec
xor
aaa
push
fbstp
pop
je
aam
ficomps
insb
insb
pop
add
movsb
das
fninit
inc
jmp
insl
jge
jns
lahf
stos
jo
mov
sbb
sub
cltd
xor
movsb
dec
cld
cmp
rcrl
inc
jg
in
push
or
lea
stos
test
aad
addr16
xchg
imul
inc
in
idivb
add
cli
outsb
popf
jge
mov
idivb
das
out
xor
jae
inc
push
rcrb
xor
adc
scas
pop
inc
jns
mov
inc
xor
xor
cmp
inc
lcall
add
or
outsl
testb
rol
dec
inc
pushf
adcb
pop
enter
cmpsb
mov
push
mov
or
sub
mov
jne
mov
call
sti
mov
jle
fisubrs
loop
jge
loop
or
lds
jl
pop
gs
sub
sub
test
jno
jb
lods
out
std
mov
dec
ds
int3
faddl
lahf
fsubl
jae
add
push
push
andl
and
mov
nop
and
mov
add
out
sti
pusha
and
sub
push
cmpsl
stos
add
shrl
inc
leave
add
mov
xor
in
cmpb
inc
dec
sbb
xor
clc
inc
stc
std
std
pop
mov
mov
inc
test
push
sahf
mov
lret
lahf
jp
push
ljmp
mov
add
push
mov
push
dec
jge
out
sarb
xor
sub
arpl
pop
rcll
mov
sub
gs
push
rclb
cmpsl
inc
jno
filds
int3
push
inc
cmp
add
sub
shlb
xor
and
inc
fwait
mov
sahf
mov
push
pop
mov
xchg
in
xor
test
xchg
cmp
jo
ret
xor
mov
mov
jo
mov
stos
push
dec
fldl2t
xchg
outsl
ds
enter
xchg
sub
mov
std
jl
jle
divl
ss
cmpsl
lods
jge
lret
imul
stc
lcall
notb
movsl
pop
cmpb
iret
lret
rcrl
mov
loop
loopne
mov
cs
out
ret
or
scas
mov
pushl
mov
lret
add
les
cmp
leave
scas
and
cmc
dec
lock
dec
scas
adc
or
push
push
lret
cli
sub
mov
ret
test
jl
and
std
rclb
fisttpll
pop
push
rcll
jl
test
add
jb
push
pop
push
push
xor
cmp
mov
clc
outsb
xchg
rcrl
out
push
pop
dec
addr16
jnp
out
pop
mov
sbb
pop
dec
pop
and
in
mov
into
in
xchg
xor
ficomps
fcoml
mov
xor
or
pushf
xor
cmp
ret
and
or
incl
inc
aas
add
inc
imul
mov
fwait
ja
subb
repnz
sub
pop
popf
les
stc
mov
pushl
cmp
jle
sub
dec
clc
pop
jo
cli
ss
into
in
or
in
sub
lea
pop
adc
pusha
inc
bound
sbb
xchg
sub
cmpsl
add
shll
mov
xchg
loope
lcall
sbb
es
push
or
adc
aam
scas
mov
out
aam
test
sbb
ljmp
or
cmpsl
call
adc
cli
clc
cmp
pushf
xchg
xor
loop
lock
add
push
cltd
lret
sub
test
jg
mov
data16
sbb
arpl
out
xor
mov
ja
adc
hlt
das
jecxz,pn
aaa
xor
xlat
pop
and
push
sub
cmp
sbb
rolb
fstpl
dec
pusha
xchg
repnz
divb
xor
sbb
and
pusha
sarl
pushf
sub
int
imul
test
sbb
xlat
jge
push
test
ja
mov
stos
subl
mov
mov
add
fidivrs
fimuls
adc
jecxz
or
shll
subl
push
xor
out
out
test
cmp
mov
into
sar
shlb
loope
dec
add
push
insb
mov
ss
ret
pusha
inc
dec
push
rorb
sub
lea
ljmp
in
add
cmp
cld
lret
add
jmp
lahf
add
sbb
or
inc
cmc
mov
mov
outsl
testb
mov
mov
fdivrs
stos
lea
cli
mov
cmp
push
inc
fadd
lret
jecxz
lods
dec
sbb
jae
mov
jnp
xchg
fidivrl
mov
mov
pusha
add
fxtract
stc
mov
aas
or
jmp
repnz
pop
and
negb
iret
addr16
outsb
movsl
mov
jne
and
out
cltd
out
movsb
inc
sbb
xchg
and
mov
inc
pop
dec
fsts
imul
dec
inc
cld
popa
stos
loop
pop
fwait
and
lahf
test
shr
outsl
repz
loop
stos
xor
cs
fsub
insl
mov
xlat
sbb
mov
pop
dec
xchg
xchg
sub
push
rcll
cmp
test
sub
jbe
sbb
sti
and
inc
stc
std
and
cmp
push
push
jmp
mov
xchg
es
lret
mov
mov
icebp
out
pop
cmp
outsl
inc
cmp
adc
pop
imul
jle
into
xor
xor
adc
das
stc
pop
add
or
ds
clc
es
mov
test
and
dec
movsb
scas
push
and
popf
sub
test
mov
sub
cltd
insb
cltd
jmp
popf
jle
mov
hlt
add
mov
lret
inc
test
stc
mov
or
inc
mov
pop
sub
pop
pop
mov
adc
in
fsts
sub
lcall
jecxz
push
fists
fmull
lods
sahf
inc
iret
movsl
cmpsl
fcomps
and
bnd
pop
push
gs
push
jle
decl
mov
and
into
outsl
call
push
movl
ds
hlt
movsl
imul
pop
es
mov
shl
push
mov
cli
or
mov
js
cli
int
cld
divb
jge
ja
mov
dec
dec
negb
or
lock
xor
push
scas
repnz
jmp
loope
cltd
xor
arpl
sbb
jmp
sti
pop
pop
xchg
divb
movsl
mov
inc
pusha
or
rcrl
mov
mul
sub
adc
dec
ss
jo
pop
ds
into
cmpsl
lea
pop
shlb
xor
in
sub
jbe
packuswb
clc
lods
pop
push
lods
jmp
jns
and
mov
das
mov
mov
xchg
xor
pop
fildll
mov
out
mov
jl
jno
movsl
fldt
and
dec
arpl
imul
xchg
lret
push
sub
clc
sub
ds
dec
sbb
inc
fdivl
mov
mov
stc
in
xchg
lock
or
xchg
adcl
pop
loope
cmp
dec
bound
aaa
fidivrs
lcall
ret
mov
dec
push
js
imul
inc
jo
popa
add
mul
dec
dec
pop
pop
push
pop
jo
ljmp
jnp
movsl
outsl
ds
lahf
push
iret
xchg
loop
frstor
add
xor
aaa
dec
sub
sbb
andl
daa
xor
pop
and
lret
roll
popa
out
jbe
adc
pop
arpl
push
or
out
add
aas
add
add
mov
bound
cmpsb
push
lods
ret
fcmovb
dec
jbe
xor
aam
scas
cmp
xchg
data16
sbb
sbb
push
cmpsl
outsl
daa
cmp
or
add
shlb
rcl
rolb
fs
or
in
add
shrl
outsl
inc
inc
xchg
cmp
cmp
test
xor
lea
cmp
jns
pop
cmc
push
andb
xor
shr
daa
sbb
mov
outsb
ljmp
sti
jae
sahf
add
xchg
fcoml
call
inc
mov
sub
test
push
mull
ljmp
ss
xor
inc
cs
lock
mov
and
lret
leave
push
jl
or
xchg
push
and
pop
inc
xchg
sahf
mov
movl
mov
popl
mov
xor
sti
stc
cs
pop
js
loopne
push
loop
sub
sahf
push
ss
mov
pop
insb
cli
push
mov
add
daa
pop
je
mov
shl
sbb
mov
out
cmp
es
xchg
movsl
mov
push
int3
or
leave
mov
sti
inc
outsb
cld
mov
push
xchg
out
xchg
and
das
mov
movsl
fbstp
mov
xor
icebp
mov
pop
mov
or
cmp
inc
inc
out
les
add
push
xchg
ret
xchg
pop
scas
push
mov
fwait
fwait
or
dec
aad
xchg
mov
push
lret
xor
mov
aam
xor
shl
lock
push
lahf
fdivrs
ror
adc
call
sub
add
aam
mov
in
xor
sti
lcall
js
call
aad
das
cwtl
mov
pop
out
in
xchg
and
inc
adc
loop
rcrb
cmp
xor
xchg
mov
stc
mov
aam
add
jecxz
scas
add
das
ss
push
pop
movsl
dec
xchg
movsb
fdivp
loopne
jp
imul
repz
push
pop
xlat
stos
pop
popa
sbb
fldt
lods
aaa
add
filds
sti
shl
ret
add
ja
ds
sub
fisubl
ds
icebp
shrb
dec
mov
jecxz
push
pop
cmp
das
call
sub
xchg
push
lea
ljmp
notb
sub
sub
lds
enter
sbb
mov
pop
inc
pop
inc
ret
and
mov
push
xor
fbld
jmp
imul
jecxz
cmp
mov
cmp
insl
incl
ljmp
in
je
scas
mov
jg
fstl
adc
mov
sbb
mov
pop
enter
dec
test
cltd
in
push
aam
pop
push
sbb
jge
repz
cwtl
mov
std
test
out
lahf
sbb
jmp
cmp
ljmp
aad
test
sub
adcb
mov
outsb
push
mov
add
rcrl
pop
push
fnsave
cmc
lea
cmpsb
xchg
testb
ficoms
sub
dec
addr16
out
insl
into
mov
mov
sbb
inc
mov
mov
cmp
jo
fstpt
and
sbb
fisttps
ret
outsb
imul
dec
lock
push
gs
jbe
mov
fs
in
mov
lcall
cli
push
or
jp
mov
jo
xchg
mov
cld
jl
adc
sub
inc
inc
adc
arpl
mov
movsb
inc
lret
movsl
movntq
imul
pop
daa
addr16
fidivrs
icebp
ficoms
lcall
push
aam
sub
mov
fnstenv
stos
sub
push
dec
in
and
dec
scas
aad
sub
rol
or
fbstp
inc
jne
push
outsl
push
shlb
mov
mov
mov
or
cmpsb
adc
push
fnstsw
dec
adc
or
dec
loope
adc
int
inc
out
lret
jecxz
lods
or
xchg
cwtl
jge
and
loop
or
xchg
push
cmp
jecxz
xor
or
mov
loopne
outsl
push
push
mov
sub
aad
or
jl
ror
leave
mov
pop
roll
sub
cli
pop
mov
test
loope
dec
xchg
pop
xor
test
push
mov
mov
xchg
fimull
aas
in
pop
xchg
xchg
mov
insb
cli
xchg
pop
popa
mov
inc
or
repnz
add
das
inc
push
push
xlat
mov
jp
jecxz
shll
ja
out
push
shlb
sub
dec
lds
or
jns
popf
outsb
or
test
fcoms
leave
jecxz
ja
iret
or
sub
popf
in
push
sbb
cmp
cmc
push
test
xchg
aad
pop
mov
rcr
enter
mov
dec
xchg
cmovge
scas
add
pop
xor
stos
test
fldcw
sahf
adc
jae
sub
cwtl
push
mul
or
inc
add
js
push
or
popa
out
mov
jns
in
loope
fcmovbe
push
mov
and
sbbl
push
xchg
fisttpll
loop
pop
pushf
movsl
mov
je
in
ja
inc
cmp
push
pop
add
xor
push
xor
add
dec
dec
out
nop
imul
cmp
fistl
shl
inc
adc
iret
inc
mov
mov
dec
xor
repz
mov
jp
pusha
gs
mov
mov
aaa
ljmp
cmp
xchg
inc
fwait
andl
hlt
das
cmc
push
xchg
fnstsw
scas
aam
add
in
pop
fstl
clc
push
inc
icebp
sub
xchg
xchg
cmp
lea
movsl
adc
jl
in
loop
and
add
rcrb
sbb
dec
pop
inc
jns
mov
stc
jne
jge
iret
xchg
mov
jbe
mov
xor
cmp
and
popa
in
mov
into
das
adc
or
jb
call
xchg
popf
imul
lods
int
or
insb
out
je
call
xorl
xchg
pop
mov
mov
clc
or
ss
and
mov
jg
jbe
scas
loope
jns
jmp
stos
or
mov
enter
sti
jo
jo,pt
push
iret
std
dec
lret
bound
sbb
inc
jmp
push
lret
push
xlat
xchg
sub
das
mov
movsb
lea
int3
dec
push
cmp
icebp
ja
stos
xor
mov
jno
dec
and
inc
or
mov
or
xlat
xor
mov
and
xor
leave
cwtl
cmpsb
mov
xor
lret
jl
sbb
push
mov
incb
lahf
insl
push
dec
mov
pop
mov
push
dec
cmpl
sbb
push
nop
shll
lret
in
call
and
cmp
sub
adc
movsb
incb
or
jae
and
add
aas
cwtl
outsl
shr
pop
xor
test
cs
insl
pushf
mov
out
jns
cmp
or
mov
lock
insl
xchg
add
pop
xchg
cld
and
sub
mov
lods
cmp
arpl
lds
or
mov
and
cmp
sets
insl
imul
ror
mov
cmp
dec
ret
pusha
cli
ds
mov
jae
mov
add
das
not
pop
out
pop
mov
sub
arpl
loopne
add
pop
in
pusha
push
cmp
lcall
sbb
pop
out
stc
lret
mov
cmc
jecxz
gs
sbb
add
cmp
je
mov
mov
sbb
inc
mov
mov
loopne
sti
cmc
push
cli
notb
lock
dec
xor
testb
aas
ljmp
adc
xorb
lock
xchg
xor
not
std
pop
movsl
ss
mov
cmp
pop
adc
aas
dec
aad
adc
cmc
lea
cwtl
pop
xlat
int
cmpsl
add
mov
xchg
lahf
mov
inc
mov
or
cs
mov
dec
scas
int
cld
iret
inc
sub
jecxz
dec
xchg
dec
ja
ljmp
andb
push
movsl
jno
aam
xchg
loope
adc
loop
mov
rcrl
repz
lret
pop
gs
sub
or
addr16
and
bound
dec
xchg
sub
jl
fistpl
mov
mov
mov
imulb
lock
rcrb
sbbb
jl
dec
add
sbb
rcll
sbb
mov
pusha
les
xor
dec
pop
xor
jb
pop
push
mov
or
jge
fwait
and
jbe
hlt
movsl
ss
inc
in
push
pop
cmc
mov
inc
or
pop
mov
and
data16
aad
dec
or
hlt
dec
xchg
loop
sbb
cld
js
aam
mov
repz
or
sbb
mov
sbb
arpl
cmp
dec
clc
clc
int3
aad
pop
outsb
mov
scas
mov
pop
inc
outsb
js
cmp
shll
sub
inc
adc
sbb
xchg
push
mov
out
sub
mov
or
sahf
ss
bndstx
cmp
and
cmp
push
and
mov
sub
mov
int3
mov
ret
aas
adc
ficomps
repz
insl
fstps
ret
jae
sub
incb
dec
add
pop
roll
and
xor
ds
pop
cli
movsl
scas
jnp
cmpsb
add
jbe
jle
and
pop
out
dec
mov
and
xchg
xor
insl
dec
cmp
mov
cmp
mov
scas
addr16
hlt
test
mov
pop
xor
inc
xlat
mov
cmpsl
mov
inc
in
jmp
pop
pop
pop
js
add
loop
xor
mov
xor
std
mov
subl
repz
xor
push
xor
je
pop
popf
mov
aad
cld
mov
in
mov
mov
jns
outsl
push
push
dec
and
lret
sti
dec
es
jo
movsb
jl
or
fdivrl
lahf
xchg
sbb
lahf
cmp
mov
test
push
xor
pop
jb
les
jae
insl
mov
das
cmpb
lea
aaa
sbb
pusha
jg
mov
addr16
outsl
je
addb
push
sbb
movsb
xor
sub
adc
sti
loop
sub
comiss
call
mov
adc
outsl
adc
nop
in
xor
inc
cmpsl
aaa
pcmpgtd
xor
addr16
int
pop
sub
jbe
xchg
cmp
xor
lret
lods
mov
outsb
jbe
mov
xchg
out
push
jg
mov
or
lret
sbb
inc
push
xor
fsubr
mov
push
imul
mov
push
scas
js
lock
and
mov
lahf
xor
into
lea
mov
call
pushf
int3
cld
or
repz
dec
ljmp
shl
inc
adc
fldl
mov
inc
in
sbb
in
dec
dec
xor
mov
xor
repz
fstpl
dec
ja
insl
dec
test
ds
xor
push
mov
repnz
roll
test
inc
xchg
js
stos
mov
sbb
add
push
mov
in
out
cli
lods
cmp
xchg
out
jno
mov
push
push
push
pop
mov
pop
add
xchg
fwait
sub
mov
andb
cmp
ja
adc
add
pop
clc
lds
push
mov
add
push
insb
cwtl
sub
scas
add
stos
rolb
dec
inc
int
out
not
or
mov
cwtl
push
popl
pop
shll
cwtl
jno
repz
mov
sub
sti
jne
or
cmpsl
mov
adc
imul
mov
and
ja
roll
cmp
and
outsb
fistpll
lods
sbb
xchg
jl
push
or
fstps
in
daa
or
dec
mov
imul
sub
arpl
shlb
pushf
jno
pop
jmp
cmp
fisttpl
dec
adc
dec
xchg
fwait
mov
pusha
out
cmpsl
loope
jnp
std
or
lahf
cmp
popf
rcl
popa
push
pop
std
cwtl
test
xchg
hlt
lahf
daa
mov
fldenv
test
xchg
sbb
ljmp
jne
ljmp
addb
outsl
xchg
fiadds
jo
xchg
ja
ss
das
pop
lods
enter
ds
dec
sub
cmpsb
inc
sub
lcall
ffree
arpl
sub
inc
out
xchg
mov
inc
mov
and
divl
lods
iret
cmp
push
push
outsl
stos
mov
xor
and
cmp
or
arpl
pop
and
cmp
push
fwait
mov
pushf
jle
jg
or
rol
outsl
cmc
mov
aam
adc
loope
push
fstps
and
inc
or
jmp
or
xchg
adc
ljmp
xchg
fwait
lods
push
adc
ficomps
sub
dec
jp
rclb
not
adc
lahf
ds
in
sarb
fcomip
xchg
fsubrl
pop
aam
add
iret
push
fsubrs
push
cmp
jle
or
sbb
push
sub
dec
or
push
cmp
adc
pop
jmp
xchg
jae
dec
loope
xlat
mov
push
rcrl
ss
inc
add
rorb
hlt
mov
mov
xchg
imul
cld
cli
jg
xchg
fnstcw
push
add
or
incl
je
add
sub
bound
stos
pop
unpckhps
dec
sbb
sti
test
fnstenv
and
xlat
int3
aam
sbb
xchg
mov
pusha
neg
int
testl
pop
xorl
jno
insl
aam
into
inc
sbb
out
mov
xchg
pop
pop
std
dec
inc
inc
cs
mov
inc
mov
pop
inc
and
push
test
lods
lea
push
mov
mov
flds
mov
fidivrl
sub
adc
repnz
cltd
stos
xchg
scas
mov
push
dec
push
pop
xchg
in
mov
daa
jle
orl
loope
pushf
cs
lahf
mov
add
add
lretw
push
sarb
bound
jo
rclb
sub
push
sbb
inc
icebp
fsubs
and
add
dec
pusha
negl
dec
jo
scas
ljmp
ljmp
sub
fisttps
inc
push
ret
or
dec
jnp
test
xchg
jae,pn
pusha
outsl
jle
ss
jb
dec
aaa
push
je
mov
xor
mov
mov
xor
mov
inc
ljmp
fwait
les
aad
repz
jo
jns
loopne
insb
imul
subb
inc
pusha
adc
xchg
outsb
mov
and
xchg
into
add
dec
loop
mov
mov
pop
xchg
jne
dec
or
stos
loope
jle
jp
adc
repz
add
fs
push
fistpl
add
add
div
adc
xorl
or
aad
mov
jge
ret
int3
push
jmp
loop
sbb
out
lret
jae
mov
and
mov
pop
hlt
imul
sahf
push
popf
ss
lret
movsb
nop
mov
daa
aaa
mov
xchg
cs
or
cmpsl
push
aaa
push
in
pop
sbb
dec
xchg
addr16
pop
or
sub
mov
in
sub
push
push
aad
and
out
int
inc
mov
ret
int3
xchg
cmp
andl
leave
pop
cwtl
push
sti
stos
aam
add
dec
or
repz
cs
dec
lret
out
test
movsb
or
ret
jg
jp
scas
push
std
lods
xchg
xchg
jbe
xor
pop
pop
lcall
lret
cmp
pushf
xchg
in
xor
aaa
mov
lahf
das
js
xchg
lret
inc
int3
and
ja
icebp
adc
dec
cmpsl
cwtl
insl
cwtl
pop
inc
je
adc
add
or
cwtl
xchg
jbe
popw
sarb
inc
jno
insl
jno
ret
sub
scas
loope
sub
icebp
pop
xchg
xorl
mov
popa
lods
add
mov
cmpsl
call
divl
inc
mov
ret
test
imul
movsb
pop
mov
pop
sti
std
stos
fldenv
lcall
pop
push
arpl
iret
mov
loope
adc
mov
repnz
sbb
add
js
add
jb
push
sub
inc
jmp
stos
cmp
dec
and
mov
jl
shl
xlat
out
inc
fdivl
lahf
and
xchg
fsubs
mov
and
rcrl
pop
lock
cmpsl
int
lds
ret
dec
inc
inc
and
mov
pop
xorb
xchg
cmp
jge
movsl
ret
ljmp
mov
cld
out
inc
mov
psrad
cmp
xor
ret
mov
pop
fwait
stos
xor
pop
mov
mov
stos
fs
lods
mov
imul
stos
in
ret
push
dec
test
and
fisttpll
sub
xchg
cmpsl
test
or
jnp
or
dec
mov
mov
movsl
repnz
add
push
jp
add
rclb
or
repnz
add
jnp
mov
xchg
out
lcall
mov
dec
cmp
mov
pushfw
int
dec
lods
mov
stc
je
pop
jbe
xchg
jle
pop
push
call
lock
and
pop
daa
jno
sub
xlat
cmp
mov
dec
xchg
in
divb
pushf
adc
xchg
xchg
scas
lock
sub
xchg
dec
pop
or
xor
pop
xchg
negb
inc
and
test
cmp
add
repnz
mov
cmc
jl
inc
nop
sahf
pop
scas
push
xor
cltd
sub
cmp
testl
adc
cmpsl
adcl
test
mov
cltd
add
std
sub
sbb
sub
adc
add
rcrb
jg
fisttps
xchg
or
add
mov
repz
imul
lock
lea
in
sbb
data16
lds
adc
das
xor
lock
add
ret
repz
inc
inc
repz
in
xor
jge
sub
and
jge
in
mov
xorl
pop
jp
cmp
jae
lea
mov
js
jo
xchg
popl
adc
arpl
jge
and
fdivl
xchg
mov
insb
add
out
fld
sub
and
lret
push
mov
or
in
mulb
mov
hlt
div
inc
sub
in
jae
das
imull
or
cwtl
add
std
mov
sbb
xchg
xorl
jb
pop
adc
mov
or
stos
mov
pushf
mov
mov
mov
leave
inc
xor
xchg
mov
or
test
and
and
inc
jecxz
mov
inc
cs
mov
jne
xor
into
mov
stos
mov
lock
mov
push
loope
and
mov
jae
dec
inc
iret
dec
dec
je
test
push
push
sbb
les
cmp
std
mov
inc
test
aad
int3
add
sub
gs
fldt
shrl
xchg
test
mov
lds
fstl
jmp
mov
mov
or
rolb
add
jp
movsb
pop
or
sti
lret
push
in
xchg
jbe
mov
in
xor
and
aad
add
fs
push
repnz
lea
fmuls
or
pop
mov
add
sbb
repz
ss
dec
mov
mov
xor
mov
mov
and
mov
dec
jne
jae
xchg
pop
jge
push
cmp
cmpsb
shlb
imul
ljmp
ror
hlt
jp
scas
push
cs
sub
fcoml
ja
push
mov
mov
dec
imul
stc
lock
cmp
jl
mov
mov
ja
in
cmpsl
and
add
pop
mov
daa
sub
push
ret
mov
dec
bound
fildll
mov
pcmpeqw
fildl
test
hlt
lods
mov
div
dec
pop
shrl
xchg
add
mov
add
aaa
test
and
adc
ss
insl
aas
fwait
pop
mov
jg
xor
fiaddl
es
adc
notb
jb
mov
and
xchg
frstor
or
adc
pop
mov
in
pop
shll
scas
xchg
aaa
jecxz
in
fcmovnu
das
repnz
jo
push
and
xor
push
mov
fbstp
jae
sbb
test
inc
jne
mov
mov
shrl
je
repz
das
into
mov
xor
std
jle
add
sub
xchg
xor
sahf
inc
insb
mov
ret
cmpsb
mov
cltd
mov
aad
cmpb
dec
lods
or
enter
cmp
je
ja
add
xchg
jno
pop
xchg
into
mov
add
pop
push
cmp
arpl
dec
mov
xchg
jbe
add
adc
sti
or
add
push
lahf
pop
add
ror
mov
cmp
pop
into
std
sub
xchg
mov
push
sub
xchg
daa
orl
dec
cltd
icebp
adc
xchg
imul
iret
shll
gs
jne
mov
loope
ficomps
daa
das
div
xor
fcomp
inc
pop
jbe
fcmovne
cmp
test
data16
stos
inc
jle
mov
xchg
loopne
iret
inc
pop
xchg
addr16
out
sbb
pop
rclb
push
pop
mov
pop
in
and
sahf
mov
inc
rcrl
xlat
lods
dec
call
mov
pop
or
inc
push
repz
pop
loop
mov
mov
cwtl
roll
mov
pop
push
ds
mov
pop
jns
add
fsts
inc
push
dec
lret
int3
inc
xor
popf
adc
jecxz
sbb
gs
aaa
in
mov
sub
mov
mov
scas
shll
inc
incb
and
aam
shll
gs
lea
cmp
bound
imul
stc
pop
in
data16
daa
jl
adc
lcall
mov
pop
xlat
xor
pusha
std
adc
mov
push
mov
cmpsb
incb
xchg
dec
jb
hlt
push
in
imulb
jle
cmc
shlb
shlb
test
loopne
or
cmpsb
lock
xlat
rcrb
movsl
sbb
mov
iret
in
bswap
enter
pop
jae
push
mov
cmp
ljmp
cld
add
sub
out
cwtl
mov
std
inc
dec
xchg
incl
iret
xor
les
pushf
imul
xor
fcmovb
sbb
lahf
imul
es
cwtl
xchg
hlt
push
and
xor
xchg
mov
je
stc
sub
ljmp
sbb
int
pop
xchg
ds
or
cmp
cmp
pop
and
dec
pop
lret
xchg
xlat
jo
or
insb
repz
add
push
or
data16
les
mov
push
dec
add
movsb
scas
xor
je
and
push
push
test
sub
mov
ja
fdiv
sub
out
dec
ja
inc
sbb
xchg
jp
jg
mov
jo
push
daa
lock
out
or
fldenv
xchg
sub
in
lret
and
pop
pop
mov
push
mov
cltd
scas
lds
mov
lret
push
sbb
aaa
imul
int3
movb
bnd
hlt
je
scas
inc
scas
push
sub
cmp
rcr
pop
ja
jge
out
inc
repz
xchg
dec
push
push
add
pop
es
xor
cmp
stos
dec
rorb
ret
ds
push
mov
fwait
fs
dec
and
lcall
incb
xchg
cmp
shrb
inc
out
lcall
sub
mov
lds
lea
push
sbb
sub
cmp
dec
jmp
inc
sub
mov
imul
cmp
popa
mov
adc
adc
push
ss
in
pop
xchg
je
pop
jne
popf
adc
icebp
or
xlat
push
test
clc
lahf
add
cmpb
cmp
jb
xor
pop
in
imul
hlt
mov
stos
fstpl
push
mov
icebp
lds
mov
mov
divl
imul
cmp
cs
dec
inc
dec
in
das
ret
cmp
outsb
int
mov
fwait
push
inc
fwait
out
sub
lcall
sbb
and
loope
or
mov
movsl
fisubs
aas
inc
sbb
adc
jge
sbb
adc
scas
jo
sub
or
inc
sbb
iret
daa
push
xor
or
fsubl
fidivrs
cld
popa
inc
cmpw
dec
divl
dec
insl
sbb
lods
call
inc
aad
jp
cmp
into
outsb
decb
sub
or
sub
pop
dec
rcrl
jg
mov
les
mov
dec
add
sbb
not
add
adc
ss
inc
or
xchg
xlat
mov
aad
sar
xor
in
cmpl
test
mov
daa
add
xchg
mov
dec
rcl
jge
dec
add
hlt
inc
dec
cmp
or
stos
xor
stos
add
adc
or
mov
mov
xor
dec
addr16
incl
add
and
insb
in
sub
jo
mov
imul
sti
or
cmp
cwtl
sbb
les
daa
cld
cmp
int
nop
pop
loopne
mov
pop
fisubrs
xchg
fwait
sahf
or
pop
test
scas
dec
pusha
ret
mov
aam
test
fcmovb
push
adc
pushf
inc
cmc
push
cmpsb
pusha
pop
out
cmp
add
push
mov
push
jb
add
data16
jo
jmp
pop
cmp
inc
jp
xor
xchg
loop
outsl
insl
add
aas
jne
adc
in
fldcw
mov
fldcw
movb
addr16
call
and
add
ja
cli
or
lods
imul
enter
pop
dec
lret
sbb
cs
and
add
xchg
imul
xor
xchg
nop
jae
sub
jns
adc
sub
scas
ja
scas
pop
ds
mov
lea
bound
xor
std
and
lcall
std
jo
sub
pop
negl
repnz
mov
pop
jae
cltd
cmc
pop
pop
dec
in
fcmovnbe
inc
mov
mov
imul
inc
and
and
gs
cmp
imul
dec
jmp
fnstenv
cmp
xor
pop
imul
icebp
les
mov
dec
outsl
push
lods
sarl
addr16
xor
jb
push
and
mov
dec
or
es
in
ficoml
loopne
jmp
test
push
sahf
lcall
mov
fstpt
add
fwait
push
mov
adc
loopne
loopne
push
jmp
stos
push
mov
inc
rorl
mov
mov
mov
jp
and
jae
pushf
mov
mov
jo
add
xchg
int
adc
mov
fstl
pop
mov
outsl
sbb
xchg
cld
pop
ret
sub
jb
insb
mov
repz
jne
lahf
sub
sbb
mov
repnz
push
jmp
pop
imul
enter
mov
fstps
in
in
cwtl
mov
outsb
scas
cmp
mov
mov
add
cs
loope
pop
jge
ss
aas
or
mov
faddl
mov
leave
sbb
sbb
out
sub
or
js
out
ret
pop
mov
test
cmpsl
xchg
ret
or
mov
outsb
dec
arpl
and
cld
test
fildll
loopne
xor
xor
xlat
fbstp
fisubrl
js
test
repz
mov
test
cmpsb
int3
arpl
inc
xor
fld
sbb
cltd
das
int3
ja
push
add
ja
lahf
insl
sbb
sbb
pushf
pop
test
cltd
rcr
ss
pop
mov
test
hlt
enter
out
daa
loopne
dec
add
leave
fldcw
clc
inc
cmp
jnp
out
out
sub
jecxz
jo
iret
test
pop
fstpl
xchg
and
pop
jg
xor
add
mov
lods
adc
ljmp
arpl
mov
jg
push
cmp
cmp
mov
or
outsl
rorl
push
mov
and
pushf
outsl
mov
inc
sarb
push
or
cmp
jp
fisubrl
lret
cmp
jnp
sahf
jecxz
test
out
cmp
adc
mov
fxch
jmp
fmuls
test
xchg
aad
mov
rcrl
cwtl
pop
test
xor
sub
in
leave
mov
jae
repz
pusha
int
cmpl
popa
dec
push
jnp
addb
fs
lods
jnp
cmp
sbb
jo
imul
and
repz
cli
pushf
clc
or
arpl
mov
jecxz
cltd
push
lods
push
filds
clc
into
mov
jae
cmp
cs
or
imul
test
inc
daa
jbe
sarl
xor
mov
mov
fcom
mov
mov
repz
shl
imulb
mov
rorl
add
aad
adc
mov
stos
jbe
loop
out
fmul
dec
jnp
jo
fstpl
mov
popf
push
sqrtps
scas
shll
mov
sbb
out
arpl
loop
xlat
inc
adc
std
repnz
repz
add
pop
fnstenv
cmp
shll
insl
icebp
mov
jge
mov
mov
nop
pusha
jge
jp
inc
xor
cmc
mov
sbb
fisubl
or
in
mov
inc
in
xchg
cld
xchg
les
sub
sbb
ficoms
in
gs
pop
gs
shll
lods
outsl
xchg
shr
iret
push
mov
jmp
xlat
imul
push
shl
test
mov
mov
xchg
pusha
lcall
push
scas
sub
mov
jge
or
dec
mov
mov
xor
inc
mov
pop
mov
insb
inc
fcompl
mov
inc
add
icebp
ja
aad
cmp
and
inc
leave
adc
jo
push
dec
xor
sub
inc
movsl
xor
mov
cmp
mov
ret
sarl
sub
shrb
js
push
jnp
fsubl
mov
scas
cmp
mov
mov
sbb
mov
clc
lret
in
jno
lods
xor
push
mov
call
fs
das
mov
or
xchg
mov
mov
fdivs
aam
in
adc
lret
ret
add
clc
cmp
fidivrl
jb
imul
push
std
mov
repnz
sub
mov
into
outsb
cwtl
mov
flds
test
aas
ficoml
mov
nop
pop
push
cmp
xchg
int
icebp
fnstsw
fstl
lea
shrb
xor
pusha
inc
leave
movsb
jle
mov
orl
arpl
xchg
adc
pop
lock
cmp
je
cmp
addl
stc
inc
pusha
ret
dec
mov
or
icebp
adc
jge
jge
into
cmp
add
lret
adc
pop
mov
add
pop
jp
sub
cmp
cmpsb
mov
add
loopne
pop
sbb
clc
fildl
sub
push
and
in
setp
dec
sbb
pop
in
mov
enter
shl
mov
fstps
filds
lods
sbb
ficomps
sub
iret
and
js
dec
cmpsl
lea
jo
jecxz
jnp
repnz
dec
sub
cwtl
lods
sbb
xchg
sub
mov
iret
nop
push
xor
pop
cmpsl
xchg
jmp
cs
out
and
cmp
aas
cmc
pop
adc
mov
sub
ljmp
jp
aad
push
filds
pop
push
sub
jle
add
pop
push
and
and
mov
aam
imull
xchg
js
int3
dec
cmp
cmp
sahf
scas
dec
ds
adc
add
inc
ljmp
test
sahf
cmp
imul
andb
push
xchg
popa
mov
push
mov
subl
mov
pop
inc
jns
aad
fsubrs
inc
push
sub
push
mov
test
cli
lea
int
cld
add
dec
fiaddl
push
mov
insb
sub
mov
imulb
sbb
dec
mov
cli
movsb
addr16
in
xor
push
ljmp
or
jecxz
mov
into
ret
lods
or
cmc
inc
int3
shlb
xchg
mov
scas
xor
shll
jo
ficompl
sub
ja
mov
adc
sub
out
xchg
mov
test
inc
js
in
loopne
nop
or
pop
jb
ret
cmp
lret
xor
into
out
or
rclb
lcall
inc
or
icebp
add
xchg
out
aad
mov
jno
addb
push
push
cmp
jmp
pop
jecxz
xchg
hlt
cwtl
jnp
hlt
and
jle
and
push
mov
scas
pop
cmp
sbb
in
mov
xor
mov
add
jbe
dec
lds
loopne
cmpsl
or
stos
int3
js
and
in
aaa
mov
jp
lret
push
lock
jo
shll
jl
mov
bound
mov
sub
mov
pop
cmp
mov
repz
mov
insl
jmp
mov
push
xor
mov
xor
das
mov
cld
add
jbe
push
sub
cmp
dec
and
insl
push
outsl
mov
les
mov
hlt
out
xor
out
inc
inc
dec
fs
in
pushf
dec
pop
pop
subl
into
pop
cmp
xor
add
enter
jle
daa
fs
push
insb
mov
das
sub
sub
lret
pusha
stos
mov
cmc
loop
inc
leave
sbb
jne
aas
out
mov
mov
and
xchg
push
pop
push
sbb
testb
sbb
or
mov
push
sbb
adc
push
pop
test
ss
jp
xor
sbb
sub
inc
adc
and
pop
pop
dec
jmp
add
outsl
stos
or
rolb
fisttps
push
jbe
les
dec
gs
les
push
cmpsb
jb
push
ds
int
popa
lahf
adc
and
iret
mov
mov
sbb
sub
out
icebp
int3
and
add
rcrb
cwtl
dec
gs
xor
cld
daa
out
ja
or
addr16
pushl
push
aam
jo
push
bound
or
dec
xchg
mov
adc
adc
push
xchg
fstps
insb
xor
dec
push
and
in
or
fisubrl
cs
mov
sahf
mov
jne
xor
cmpsb
ds
fs
fsts
push
mov
cld
pop
sub
rolb
jae
jne
push
cmp
pop
push
dec
push
push
push
pop
and
cwtl
adc
xor
push
lahf
jp,pn
adc
mov
lock
in
push
rcrb
sbb
cmpsl
push
pop
xor
push
push
nop
pop
test
mov
fimull
xchg
xor
mov
sub
daa
ljmp
pop
jge
jns
pop
addl
sbb
dec
xchg
xor
xchg
testl
mov
lock
int3
push
dec
and
cwtl
dec
mov
test
sbb
daa
jmp
pop
xor
jo
cld
xor
adc
adc
ss
notb
stos
dec
test
xchg
out
lret
or
mov
jg
int
cmp
cmp
push
out
shl
scas
in
ficoml
lods
dec
mov
addl
or
add
orl
insb
div
addr16
jo
or
rcrl
mov
add
jl
add
orl
jnp
jecxz
iret
mov
aad
fldlg2
and
mov
fdivs
push
sub
sbb
bound
sbb
repz
jmp
repnz
mov
dec
and
sub
inc
cmp
stc
mov
fistpll
ljmp
sti
pop
sti
and
stos
inc
adc
cmp
fwait
pop
push
ds
addr16
jne
inc
push
adc
sbb
adc
movl
cmc
dec
mov
jge
lret
sub
icebp
into
cmp
pop
jb
cli
cmpsb
pop
mov
inc
ds
movsl
aam
jp
lods
shrl
insb
in
push
inc
mov
sbb
mov
pop
push
pushf
adcl
mov
jo
into
mov
imul
cmp
in
popa
insb
andl
cmc
xor
mov
outsb
add
mov
push
nop
cmp
dec
add
or
inc
test
mov
and
lea
or
xchg
mov
inc
int
ficoms
or
push
xchg
or
xchg
test
sub
jp
lods
pusha
jmp
cmpsb
xchg
mov
adc
mov
aaa
xor
out
jno
mov
and
cmp
cli
pushl
bound
jge
outsl
shlb
adc
lret
nop
cli
inc
jl
jmp
mov
push
mov
mov
adc
fwait
push
mov
dec
arpl
cmpsl
insb
test
lret
inc
icebp
dec
pop
xchg
lods
sbb
mov
or
hlt
ficoml
push
cli
ss
enter
ds
popa
mov
adcb
or
cli
es
jg
out
shlb
xchg
pop
and
pop
inc
in
in
insb
sbb
sub
cmp
sbb
sbbl
pushf
cld
imulb
jle
pop
xchg
sub
push
out
and
sbb
mov
sbb
mov
rorl
mul
aad
jg
add
mov
cmp
jecxz
mov
psubsw
jmp
punpcklwd
fwait
leave
adc
lds
popa
mov
xlat
xor
jmp
sarb
mov
cmp
lock
jmp
cmc
mov
mov
dec
scas
sbb
adc
cmp
add
cmp
fs
aaa
adcb
pop
es
push
cmc
aad
insl
sub
movsl
dec
loope
inc
repz
xor
loopne
inc
mov
out
and
dec
aaa
and
adc
lds
cmc
dec
mov
xor
or
jo
sahf
in
cltd
mov
push
xchg
mov
mov
add
dec
push
aas
sbb
loope
xchg
sti
adc
adc
ja
aad
das
fcomp
icebp
jecxz,pt
xchg
xor
ret
je
mov
xor
sahf
call
insl
shlb
jae
jle
cmpsl
cli
adcl
popa
sahf
dec
mov
loop
xorl
cs
adc
and
lea
sub
fldenv
fnstsw
push
add
cli
nop
pusha
ret
jnp
lods
xlat
pusha
xchg
inc
js
lahf
sbb
dec
stc
mov
cli
shrb
outsb
mov
mov
int3
leave
std
push
dec
or
mov
jmp
cmp
faddl
cmp
xchg
mov
dec
js
out
fmull
jo
dec
inc
ret
inc
xor
jnp
repnz
imul
insl
inc
paddsw
das
jge
fwait
shrl
mov
mov
imull
jmp
push
jae
xor
push
test
je
mov
jmp
sti
aad
sahf
or
xor
stos
enter
push
xor
adcl
add
or
jo
xchg
popa
bound
rorl
mov
lahf
in
sub
dec
andl
and
ss
or
or
aam
pop
jb
and
dec
rcrb
into
mov
pop
lahf
lods
loop
rol
in
ja
adc
fwait
xor
adc
mov
xor
repnz
lock
mov
jle
pop
dec
imul
dec
adc
ss
ret
push
mov
scas
jle
cmp
decl
push
push
fs
test
divl
in
sub
ja
gs
into
repz
out
mov
jmp
adcl
jns
pop
and
outsb
pop
sbb
pop
jg
mov
cltd
addr16
rcl
shlb
gs
insb
cmp
stos
push
fnstcw
pop
insb
inc
jnp
dec
xchg
fstps
push
or
push
mov
aas
fwait
ds
into
in
nop
jmp
lds
test
mov
jmp
in
cmc
iret
mov
testb
and
ss
sbb
sub
xlat
dec
aad
test
out
adc
jbe
fs
es
dec
pop
inc
mov
cld
or
xchg
popa
arpl
dec
or
mov
insb
leave
int3
push
adc
lods
jne
pop
xchg
mov
test
cmp
sub
push
outsl
cmp
enter
jns
aam
bound
rcrl
pop
imul
in
ljmp
enter
mov
sub
push
push
and
mov
movsb
mov
push
mov
sub
mov
stc
fs
xchg
inc
mov
fidivl
mov
test
or
jns
xchg
mov
adcl
out
clc
imul
push
xlat
xor
rcll
add
arpl
pop
or
cs
jmp
xor
cli
mov
mov
inc
cld
add
lods
mov
pusha
movsl
jmp
sbb
fs
imul
cmp
aaa
jae
arpl
fwait
lahf
mov
cs
cmc
icebp
inc
mov
inc
jae
adc
xchg
fs
pop
sbb
fisubl
mov
ja
icebp
sub
mov
push
ret
mov
out
add
stos
jg
cs
add
or
faddp
sub
dec
aad
push
mov
out
add
adc
and
add
fnstenv
sub
jb
mov
in
loop
sahf
xor
mov
orl
sbb
mov
dec
sbb
cmp
scas
lea
mov
cwtl
cltd
arpl
mov
jmp
xchg
inc
adc
pop
mov
cmp
xlat
movb
lock
sbb
ss
fwait
xor
pop
adc
into
cmc
mov
dec
into
cmpb
fidivs
and
fmul
mov
jo
fiadds
ljmp
sbb
mov
fadd
and
into
stc
mov
dec
push
test
aas
outsl
cmp
clc
mov
pop
mov
push
shll
outsb
pushf
sbb
jg
push
dec
or
je
pop
push
push
addr16
sbb
icebp
sets
pushf
in
cs
fdivrl
mov
rcrl
sub
movsb
sbb
mov
pop
imul
cmp
cmp
clc
jge
sti
aad
jp
xor
dec
lcall
push
cmpsb
dec
jo
int3
mov
insl
push
sbb
mov
daa
sub
bound
in
xor
push
in
sbbl
aas
mov
mov
bound
mov
call
mov
xchg
adc
int3
bound
sahf
add
or
js
jge
mov
mov
sbb
sbb
bnd
bound
add
je
sbb
clc
xchg
lret
inc
jle
adcl
clc
test
mov
arpl
push
dec
lock
mov
mov
mov
fwait
mov
push
fsub
mov
xor
les
imul
cs
stc
mov
mov
dec
mov
mov
sahf
aaa
pop
ss
dec
inc
movsl
add
into
mov
add
push
data16
add
out
mov
test
sub
inc
out
jo
into
mov
xchg
inc
cmp
sbb
push
add
data16
sbb
or
and
je
xor
mull
sbb
or
and
and
cmp
fildl
lahf
mov
push
xor
and
mov
hlt
push
repz
xor
mov
mov
imul
sub
insl
outsl
mov
sub
mov
mov
mov
mov
jl
inc
aad
out
sub
inc
mov
dec
mov
scas
xor
xchg
push
loop
adc
fisttpl
jno
mov
sub
dec
lods
xchg
inc
les
pop
mov
push
hlt
lods
fdivs
and
sbb
loope
inc
cmpsl
xchg
stc
adc
ss
add
dec
sahf
lahf
ds
shrb
add
in
rol
cs
sarl
xchg
pop
cmpsb
mov
lret
lcall
add
sti
lret
dec
dec
mov
fidivrs
and
les
or
adc
cmp
mov
xchg
pop
jbe
iret
dec
lock
xchg
cmp
sub
loop
add
scas
xor
sbb
xchg
jnp
dec
add
movsl
mov
or
push
xor
jp
add
xor
lds
inc
mov
inc
jecxz
ds
call
and
push
cmp
push
add
std
inc
lods
aad
sbb
cmpsb
pusha
aam
fwait
mov
inc
cwtl
sbb
inc
pop
adc
notl
push
add
fsubs
cmp
rcll
adc
out
pop
inc
or
enter
out
jae
xor
push
in
or
aad
and
or
cmp
jno
outsb
test
pop
or
xchg
mov
dec
fwait
pop
add
xor
jae
mov
dec
xor
subl
inc
or
fcmovb
cmp
out
outsl
ds
fs
ljmp
mov
dec
ss
adcb
xchg
sub
mov
mov
and
mov
mov
sbbb
mov
popl
cltd
test
cs
xlat
adc
xchg
insb
pop
jle
pop
add
outsb
test
aas
addr16
sarl
jmp
hlt
dec
lock
cltd
push
cmp
mov
shl
sti
outsl
or
mov
mov
xlat
andl
mov
sbb
lcall
sbb
call
rcll
jbe
pop
inc
push
and
rcl
stc
outsl
in
add
into
cmp
fs
jo
add
push
cmp
sub
mov
popf
out
or
hlt
popf
xchg
xchg
pop
push
pop
xchg
or
loop
pop
jb
roll
fisttpll
jl
push
mov
pop
jne
dec
sti
mov
mov
int
aam
xchg
call
mov
rolb
xor
cmp
outsl
jecxz
lcall
adc
dec
pop
call
aam
cwtl
mov
and
mov
ds
cli
out
inc
xchg
mov
test
sub
in
je
xor
fucomi
jl
mov
ror
jb
and
ficompl
add
lods
push
adcb
or
xchg
ret
or
jl
lds
cs
cmp
pop
mov
jnp
dec
out
sbb
sbb
jno,pt
out
popa
mov
or
scas
cmpsb
mov
push
push
fiaddl
mov
fwait
jmp
xchg
imul
mov
add
leave
xchg
inc
jb
rcl
pop
ljmp
mov
jp
mov
pop
mov
mov
add
repnz
and
jge
scas
js
cmpsw
shll
lods
insl
imul
mov
inc
pushf
sbb
add
cltd
outsb
xchg
imul
or
cmpsl
cmp
mov
inc
test
movsl
add
jmp
mov
test
mov
mov
lock
xchg
in
in
push
cmc
inc
sti
lret
mov
push
repz
adc
aad
rcl
test
test
inc
jo
dec
lods
mov
sub
into
push
sbb
iret
jl
push
mov
and
call
and
leave
push
lock
in
lock
sub
and
out
adc
or
add
sub
sbb
adc
and
mov
xchg
or
movsb
sahf
mov
stos
push
ds
push
cmp
or
test
pop
sbbb
jg
pop
dec
cltd
loope
jge
cli
decl
inc
repz
sbb
stos
jb
sub
mov
aas
dec
and
mov
fadds
inc
dec
adcl
insl
add
adc
shll
outsl
or
jle
pop
pop
adc
popa
scas
lods
jbe
mov
or
cmpsb
xor
das
cmp
jns
into
lods
xor
adc
jl
or
push
stos
cmpb
enter
cmpsl
les
inc
mov
rorl
and
pop
lahf
neg
push
adc
clc
outsl
inc
mov
add
sub
mov
fcmovne
in
sbb
pop
movsb
cltd
mov
aaa
inc
outsl
add
push
js
outsl
imul
lods
adc
repz
jb
sarl
pop
stos
cmp
inc
jmp
negl
sbb
lret
xchg
jecxz
pushl
call
shll
sbb
push
mov
xchg
cmp
repz
dec
data16
test
stc
data16
xchg
andb
repz
leave
cmp
mov
fwait
mov
mov
inc
push
shl
std
scas
inc
js
movsl
aaa
sub
daa
xor
ds
lcall
insb
cs
popa
mov
sub
dec
imul
in
out
push
cmc
out
sti
arpl
push
repz
loop
xor
add
mov
xchg
sahf
mov
jl
aas
js
jg
xchg
imul
sub
repnz
or
xchg
jnp
jne
adc
add
movsb
mov
mov
adc
mov
cs
roll
pop
xor
sub
dec
daa
mov
pop
scas
fdivrl
int
push
sbb
roll
stos
idivb
fnstenv
rol
jmp
movb
and
lret
fwait
xor
sahf
jbe
jbe
lahf
cld
ja
xor
dec
mov
lcall
mov
leave
mov
decl
adc
clc
rcll
push
mov
xor
or
shrl
jae
adc
push
test
popa
mov
jle
mov
inc
jmp
scas
add
jp
mov
push
stc
jge
orl
rcl
adc
and
out
repz
sub
lahf
movsl
lcall
or
adc
mov
or
sbb
scas
mov
push
mov
sbb
cmp
dec
je
fs
hlt
or
cmp
outsl
sbb
mov
lret
les
or
ret
frstor
ds
mov
into
shll
and
dec
fstpl
pop
xchg
adc
es
jne
sub
clc
mov
xchg
outsb
fldenv
mov
imul
or
xor
arpl
shl
out
dec
cli
add
jecxz
jge
cmp
fistpl
or
outsb
inc
push
aam
fbstp
in
or
inc
sbb
or
cmpsl
aam
cmp
aas
push
adc
dec
sti
lods
mov
pop
jno
fwait
sbb
adc
sub
lcall
cli
sub
pop
lods
push
loopne
xchg
sub
mov
popf
adc
push
dec
mulb
xchg
dec
cmpsb
xor
push
dec
cmp
rorl
nop
pusha
popf
jae
iret
ss
scas
mov
pop
dec
aam
ficoml
mov
lock
and
mov
or
jmp
jo
xor
mov
jg
ja
xor
jp
inc
pushf
das
sub
in
ret
adc
adc
andb
dec
or
enter
in
stos
jne
call
out
cmp
aam
insb
scas
and
jbe
push
sbb
stc
xor
mov
or
mov
inc
push
shll
sub
mov
pop
jle
mov
loop
cmpsl
lock
dec
dec
daa
and
add
or
aaa
fsubl
stos
mov
insl
mov
and
je
aad
inc
xchg
cwtl
xor
leave
sbb
fcom
or
xor
mov
adc
xor
inc
int
outsl
dec
int
stos
pop
leave
push
movsl
push
orb
punpcklwd
pop
int3
lcall
add
fwait
in
incb
push
enter
cmc
adc
cs
xchg
mov
adc
mov
clc
jno
sbb
sub
leave
dec
xor
imul
sub
frstor
dec
xchg
enter
shrl
or
jbe
pop
pop
pop
insl
fisttps
int3
sahf
xlat
pop
je
jb
mov
jp
push
ljmp
cltd
repz
bound
sahf
push
jge
cmp
xor
cmc
test
xchg
xlat
fmul
adc
xchg
les
cld
adc
clc
lea
iret
movsl
mov
mov
dec
jle
lds
insl
cmp
arpl
xchg
jg
scas
cmc
sbb
inc
fs
loopne
mov
push
add
inc
mov
or
shll
sbb
push
push
mov
mov
xchg
inc
push
loope
cmp
inc
inc
int
add
fisttpll
inc
and
ret
scas
cmp
pop
int
cmpsb
fs
lods
das
xor
pop
and
into
and
add
inc
sbb
pushf
ficoms
push
loop
cmp
cmc
add
push
imul
mov
mov
shrl
insl
insb
call
ret
inc
adc
pop
aad
inc
inc
loope
adc
mov
inc
dec
aas
add
sti
rcrl
pop
jbe
lret
adc
lds
cli
fwait
mov
repnz
insb
fstpt
repz
sub
lret
mov
fwait
repnz
inc
fdivrs
xchg
mov
pop
mov
jb
mov
mov
mov
cmp
aam
scas
gs
sahf
dec
outsl
dec
popa
pushf
movsl
into
sub
xor
mov
push
add
movsb
dec
icebp
out
nop
push
mov
imul
xor
xlat
xor
iret
inc
lret
pushf
sbb
jp
jbe
mov
mov
fcomip
out
icebp
fcomi
jo
jo
inc
int3
test
jns
hlt
sbb
loop
jp
in
and
ss
mov
ljmp
push
push
lds
mov
lahf
xchg
dec
adc
adc
int3
or
leave
shl
inc
in
push
jmp
jae
push
lcall
mov
arpl
or
cmp
mov
sbb
add
call
xlat
pop
push
out
or
in
pop
mov
push
cmp
dec
loope
nop
mov
mov
call
stos
test
aad
loope
hlt
jg
or
nop
test
and
inc
jo
repnz
jne
inc
xor
jg
pop
fldt
hlt
fistl
scas
and
and
lahf
loope
sub
jbe
fcmovu
loopne
jg
movb
xchg
movsb
mov
lods
push
adc
and
pop
cmp
fwait
xchg
outsl
ret
dec
mov
jmp
pop
movsb
mov
mov
sub
cmp
and
xor
or
lock
push
pop
cmpb
dec
adc
cld
dec
pop
aam
xor
jnp
aaa
cmp
jno
hlt
addr16
in
pop
ja
and
clc
dec
jb
cmc
cltd
dec
notl
inc
sub
fdivrs
lods
not
sahf
lret
insl
cmp
cmp
pop
push
pop
scas
insb
ja
adc
paddusb
sbb
adc
dec
notb
icebp
and
sbb
lret
aaa
daa
test
fsubrl
sub
je
fsubl
imul
sub
out
rolb
mov
ds
into
les
out
hlt
out
xchg
jmp
mov
jp
rorl
sub
xchg
xor
push
mov
cmp
inc
inc
js
push
test
test
pop
sbb
insl
mov
mov
sub
ja
and
and
dec
sti
xchg
or
mov
cmpsl
int
dec
rcrb
scas
jle
lahf
in
out
xchg
pusha
ret
mov
lcall
jo
jecxz
loope
push
std
lcall
in
je
inc
stos
test
and
mov
sub
mov
sbb
mov
shlb
push
mov
jl
pop
in
cmp
jp
lret
stos
mov
dec
jae
out
aas
push
scas
imul
bndstx
movsl
js
xor
pop
in
mov
mov
cmp
stos
add
stos
icebp
lds
cmp
pop
ss
xchg
mov
xor
dec
jb
scas
pop
incb
stc
fdivr
dec
mov
addr16
sbb
cld
sbb
xchg
sbb
in
mov
cmp
dec
scas
test
leave
or
imul
jns
pop
jp
pop
adc
mov
enter
dec
mov
loopne
cmp
and
insl
mov
xor
xor
xchg
sbb
and
into
push
sbb
push
sub
arpl
adc
jae
sub
stos
xor
jo
xchg
sub
sbb
int3
push
add
addr16
pop
fdivrs
and
jnp
int
push
mov
pusha
cmpsl
movsl
xorl
add
mov
or
lahf
int
test
jmp
mov
dec
jae
loopne
subb
shr
daa
cmpsb
decl
sbbb
push
test
pop
out
and
cltd
movsb
stos
iret
cld
cmpb
jbe
fcoml
jge
push
int3
inc
jmp
mov
sbb
js
dec
std
outsb
pop
dec
cmpsb
mov
cmp
push
jo
inc
sub
aam
sbbb
scas
out
lret
inc
cmp
xchg
scas
xchg
stos
cmp
pop
mov
loopne
sbb
jmp
aas
testb
outsl
push
adc
stc
jmp
xorl
pop
cmpsb
or
adc
mov
call
loopne
add
mov
mov
mov
add
ljmp
mov
aaa
mov
lods
sub
out
pop
fcomps
ljmp
iret
out
arpl
das
daa
add
pop
sahf
movsb
pop
mov
leave
push
xchg
jmp
imul
xlat
jae
add
xor
pusha
sbb
loopne
adcl
xchg
push
in
das
add
fcom
dec
push
xlat
jae
rorb
pop
and
mov
fimull
lods
scas
and
pop
fucomip
in
pop
cmc
cmpsl
sarb
adc
sahf
data16
fisubrl
cmc
int3
jae
je
mov
pop
lock
rorb
ret
xchg
xor
nop
insl
mov
popf
inc
ljmp
insl
fldt
pop
and
lods
leave
imul
mov
das
scas
adc
pop
xor
pop
dec
cmpsl
stc
mov
incl
lods
test
adc
adc
adc
xor
xchg
adc
fistl
pop
adc
imul
xchg
fs
xor
jb
iret
rorl
mov
daa
js
jge
loope
lods
inc
imul
sub
xchg
push
mov
sub
jp
mov
adc
dec
testl
outsb
loop
fdiv
stos
mov
loopne
outsl
inc
cmc
mov
and
daa
cs
jmp
pop
cli
pop
inc
ljmp
push
es
movsl
sub
push
fwait
shlb
pop
in
sbb
jne
push
mov
lret
mov
dec
xor
outsl
mov
mov
cmp
pop
inc
imul
fcomps
addr16
lds
adc
out
mov
stos
or
dec
adc
sub
jne
call
fidivs
cmp
pop
adc
pop
leave
pop
mov
aam
or
sti
loope
push
testl
push
jns
lds
stc
in
push
sarb
fwait
test
test
and
xchg
or
call
adc
push
test
sub
into
mov
sbb
jmp
pop
mov
pop
and
mov
pop
std
sti
sbb
lret
stos
sbb
mov
mov
push
dec
popa
mov
pop
fidivl
mov
test
mov
push
hlt
out
ss
stos
sub
and
mov
int
testb
cmp
xor
rolb
push
test
pop
lahf
push
add
sahf
rol
dec
mov
lds
pop
loop
nop
push
ret
cmp
pop
or
ret
rorb
shl
stos
or
rorl
sub
fisttpl
sub
xchg
dec
mov
cwtl
mov
fdivrl
shrb
out
jecxz
loopne
pop
push
adcb
ficoml
outsl
fisubrs
aaa
xchg
push
loop
inc
mov
or
es
add
je
lret
cs
pop
lcall
outsl
pushf
sahf
cltd
ljmp
scas
movsb
mov
fisttpll
xchg
leave
ret
cli
push
xor
dec
repnz
add
int
into
push
push
jge
jne
out
mov
cltd
add
xor
mov
jecxz
inc
sti
sub
ret
pop
mov
push
cwtl
xor
or
cld
rcrb
or
fsubrs
push
aad
aaa
and
sti
out
movsb
mov
in
xor
xlat
xchg
mov
sbb
pop
movsl
mov
mov
push
pop
sahf
insl
sbb
adc
out
dec
lock
pusha
xchg
imulb
or
lret
mov
sub
adc
lds
data16
push
mov
pop
jp
aad
inc
push
lea
in
xor
out
xlat
mov
mov
xchg
iret
es
in
xchg
push
test
daa
jns
js
out
movsb
lahf
clc
inc
inc
aas
mov
testb
sbb
out
cmp
ljmp
in
add
out
mov
nop
push
pop
outsb
mov
and
mov
sub
xor
mov
fucom
iret
int
loop
std
sub
sub
divl
mov
dec
adc
add
push
and
xor
repnz
adc
xor
int3
push
jl
mov
sub
pushf
in
hlt
push
imul
test
fldt
les
sbb
mov
mov
and
jle
shr
sbb
adcl
pop
xlat
push
movsb
cmp
ret
jo
test
fidivs
sbb
lcall
pop
mov
xchg
push
ja
jg
ja
cltd
mov
and
paddusw
mov
mov
push
ja
cmp
push
popa
and
and
sbb
lret
popa
dec
lock
out
cmp
pop
icebp
dec
or
fadds
pop
mov
in
pop
out
aas
imul
mov
clc
in
les
popf
cmp
adc
ja
es
push
jo
sub
jnp
fcmovnb
into
sub
inc
or
int3
or
and
xchg
lods
mov
sub
lret
adc
xchg
xlat
cmp
leave
inc
into
movsb
jle
aam
sub
fwait
test
pop
icebp
pushf
daa
inc
gs
idivb
push
out
icebp
inc
jns
jno
lar
add
jg
test
cmp
sub
xor
dec
loopne
test
ja
stos
cltd
xor
sbb
jmp
fs
mov
imul
les
jbe
jbe
mov
pop
enter
mov
pop
or
push
dec
int
push
mov
or
add
sub
lahf
xor
inc
add
jns
or
dec
push
adc
bound
shrb
mov
ret
cmp
mov
dec
into
and
je
popf
mov
mov
sub
or
lds
fs
scas
adc
and
xchg
xchg
aaa
out
clc
in
nop
dec
shll
mov
pop
inc
xchg
mov
jnp
xchg
inc
rcll
jne
scas
popa
jl
cmc
aas
xchg
pop
jl
adc
cmpsb
mov
pop
xchg
cs
push
lret
lods
insb
int3
pop
orl
jne
loop
adc
movsl
xchg
lahf
gs
jo
mov
int
lcall
outsl
jb
stc
add
dec
add
mov
mov
cld
test
mull
mov
dec
sahf
sub
jmp
lods
cli
lahf
xchg
or
push
lea
sbb
xchg
adc
jbe
cltd
repz
aad
scas
lock
fisttps
lods
mov
adc
jnp
clc
lret
rclb
mov
dec
xchg
mov
mov
not
sbb
or
pusha
lock
cmovnp
popf
cmp
pusha
fxch
jnp
stos
scas
popl
sub
jbe
pop
mov
movsl
outsl
repz
pop
ret
pushf
mov
cmp
pop
jmp
xorl
clc
adc
adc
sub
xchg
mov
jnp
test
ret
aas
sub
mov
jno
inc
mov
lret
jne
and
xchg
mov
daa
pop
inc
sub
add
push
pusha
push
mov
sbb
pop
pop
dec
fisttpll
neg
cwtl
cmc
mov
jne
fnstenv
xchg
dec
scas
cmp
lcall
shll
push
cmp
mov
in
shl
fstpl
mov
das
xchg
cmp
xchg
xor
push
cmp
add
arpl
xor
mov
mov
mov
mov
xor
and
sahf
pop
sbb
lock
inc
cli
dec
outsb
add
ss
xchg
inc
or
inc
mov
xor
repnz
xor
lahf
sbb
dec
fdivr
mov
shrl
aas
push
sti
out
fcomip
and
fisubrs
aaa
ja
ljmp
xlat
je
xor
scas
sbb
push
enter
aam
out
das
ljmp
and
mov
test
in
jns
push
call
push
xchg
or
das
and
xor
jb
ss
mov
or
and
leave
popw
mov
mov
testb
or
lods
shl
pop
ljmp
cmp
outsb
sub
data16
and
pop
imul
xor
test
push
mov
mov
and
faddp
sbb
push
sarl
aaa
test
xor
mov
dec
jmp
cltd
iret
xor
inc
in
cwtl
ss
adc
adc
mov
add
orl
add
mov
sbb
jg
mov
push
pushf
std
mov
imul
jne
push
add
addr16
dec
xorb
dec
or
loop
stos
dec
pop
outsb
jne
jae
push
xchg
and
xor
div
repnz
cs
mov
dec
outsl
or
jno
xchg
data16
mov
xor
add
mov
xchg
mov
pop
enter
jno
add
fnsave
popa
adc
xchg
les
icebp
mov
inc
sub
fisubrs
sarb
or
cmp
repz
adcb
ret
repz
mov
call
lock
loope
leave
incb
xchg
pop
push
mov
mov
xorb
push
lcall
clc
push
mov
ficoms
sub
lods
dec
ds
ficoml
or
inc
sub
inc
pop
xchg
ds
inc
out
lahf
pop
inc
dec
aam
cli
ljmp
add
fld
inc
inc
push
notrack
dec
into
or
std
in
mov
sbb
add
cmp
outsl
in
dec
pop
cmp
and
sbb
movsl
shll
jge
push
fcoms
cmc
sub
fcmovnbe
xor
daa
repnz
rcll
lahf
and
jne
inc
push
test
roll
jge
sar
addb
xor
int
dec
pusha
fildl
out
adc
cmp
cs
idivb
mov
push
push
and
cmp
push
fdivs
aaa
out
fidivrs
rclb
outsl
add
mov
sub
ljmp
mov
cwtl
fisubl
in
gs
mov
dec
push
adc
dec
mov
in
dec
jo
shl
adc
mov
aad
or
sti
lods
test
in
dec
lahf
pop
mov
push
lret
mov
lahf
test
hlt
das
orl
mov
out
aas
nop
out
mov
in
dec
push
test
daa
or
and
push
out
sarb
jmp
xor
mov
cmp
push
fwait
loope
add
and
ss
sub
and
imul
pop
jmp
pop
and
arpl
idivl
cld
test
sub
sub
xchg
and
mov
loop
shll
ret
mov
mov
push
jmp
mov
dec
push
jecxz
pop
mov
outsl
inc
mov
xchg
push
mov
push
repnz
stos
mov
or
dec
xchg
lret
movsl
fnsave
pop
adc
repnz
adc
fs
cli
sbb
sti
lock
ja
xchg
jae
and
lods
dec
cltd
adc
mov
cmpsl
bound
mov
xchg
ret
mov
cwtl
xor
dec
aad
mov
adc
test
push
lea
movl
jecxz
xchg
inc
mov
mov
xor
pusha
cs
test
lods
maxps
add
xchg
cmp
push
out
push
data16
xor
fadds
xor
dec
cmpsb
call
fwait
inc
outsb
push
imul
jno
cmp
mov
mov
ss
loopne
ds
outsl
pushf
sbb
mov
out
xchg
movsl
nop
dec
popa
adcl
push
insb
lret
dec
int
in
add
inc
mov
mov
fists
inc
js
dec
lds
subl
mov
xorb
mov
sub
mov
pop
fsubrs
cmpsl
inc
movsl
aad
shll
arpl
stos
inc
inc
mov
dec
cld
stos
or
stos
xchg
add
popa
add
test
fmul
je
or
cltd
sbb
jo
xchg
inc
push
arpl
pop
jno
cld
dec
cwtl
int3
xor
std
arpl
ss
cld
and
push
fsubs
ljmp
sub
cli
nop
addb
shlb
js
lea
jg
jmp
add
call
pop
jo
lock
adc
ret
push
mov
or
adc
out
mov
lea
add
clc
pop
pop
push
jae
cld
push
xchg
lahf
repnz
jno
sahf
mov
pop
es
sub
cmp
outsl
aad
cld
jle
mov
mov
mov
mov
xchg
mov
movaps
cmp
das
iret
add
dec
leave
aam
je
incl
inc
fadds
repnz
insb
cltd
mov
aas
xor
mov
shll
lahf
movsb
popf
dec
xchg
mov
or
aam
jae
push
jle
enter
adc
pop
pop
jmp
stc
out
or
lds
in
sbb
insl
pop
cmp
mov
aas
adc
movsl
push
or
bnd
lock
sub
fisubrs
roll
fs
dec
ret
repz
jb
cmp
cmp
mov
xor
and
data16
mov
cmp
hlt
test
mov
mov
scas
cltd
cmpsb
shlb
iret
fisttpl
push
daa
and
mov
pop
mov
xor
push
shl
int3
lret
dec
adc
enter
jmp
jne
add
adc
incl
and
div
aaa
daa
xor
iret
clc
out
pop
mov
mov
icebp
lods
into
inc
fstps
xor
adcl
mov
movsb
xor
xor
sbb
add
lahf
and
xchg
lret
movsl
pop
sbb
jnp
adc
push
or
icebp
cmp
xchg
push
pop
and
lea
repnz
test
iret
gs
adc
and
rorl
pop
ss
jmp
and
das
movsb
mov
fisubrl
xchg
rcll
fildll
sbb
cld
iret
test
loop
mov
cmp
xlat
rcl
push
cwtl
lods
mov
ja
sbb
dec
stc
dec
cmpsb
inc
test
inc
sub
add
movsl
ljmp
jne
adc
fnstcw
imul
call
cmpl
fwait
mov
mov
stc
sub
imul
cmpsl
fnsave
pop
ret
into
fcoml
in
or
fdiv
out
mov
cltd
xchg
jecxz,pt
or
in
jb
sbb
inc
cmp
and
bound
dec
mov
dec
out
fcmovb
orb
les
xchg
xchg
add
cmpsl
imul
adc
in
mov
jb
push
int
cmp
mov
pop
out
xchg
push
sbb
xlat
xor
sti
push
cmp
shll
insl
cmpsl
pop
push
push
xchg
test
inc
jbe
cmpsl
test
inc
jnp
mov
adc
stos
mov
in
imul
push
jg
sbb
into
xor
stos
pop
adc
mov
fiadds
add
lods
add
inc
xor
xchg
mov
adc
idivl
stos
lahf
lcall
and
xchg
or
lret
dec
movsl
fldl
fsubr
test
xor
adc
jnp
dec
or
aaa
sbb
sbb
cmc
insl
jecxz
mov
jns
popa
pusha
add
sub
push
and
rcl
or
mov
sarb
shll
mov
xor
fimull
push
inc
loop
xor
out
fs
clc
aam
fnstenv
mov
cld
mov
jns
ret
jp
mov
fwait
mov
cmp
pusha
mov
add
fbstp
ret
adc
ret
pusha
xor
xor
dec
call
ss
scas
bound
and
jb
push
sub
inc
xor
push
mov
test
or
cmp
lea
mov
cmp
in
or
imul
js
js
les
insl
inc
fildl
dec
into
icebp
jno
add
pusha
test
cmp
mov
push
and
shrl
test
xchg
or
xchg
dec
xorl
ja
mov
aaa
adc
jp
fwait
and
mov
addb
imul
sub
faddl
mov
push
jge
or
ret
pop
lds
xor
push
lahf
cs
or
add
sbbb
push
sub
mov
les
xchg
ds
mov
cltd
fdiv
xchg
jl
jns
stc
inc
or
imul
inc
jge
gs
pop
adc
pop
cs
inc
push
dec
push
fmulp
mov
pop
push
je
inc
imulb
inc
mov
mov
fxam
jb
call
lret
out
mov
inc
mov
and
fstl
and
mov
arpl
ficomps
test
pop
fisttpl
lock
rcrl
inc
or
mov
cmc
popf
flds
and
jge
push
sti
cltd
cltd
and
add
js
mov
nop
mov
inc
push
test
pop
pop
xor
sub
loope
das
pop
pushl
dec
or
jne
bound
enter
icebp
xchg
sbb
and
sbb
and
pop
mov
push
cmpsb
adc
into
rclb
imul
mov
push
mov
outsl
pushf
fs
insl
scas
outsb
int3
cmp
lcall
cmpsw
xchg
mov
popa
in
sub
je
jo
mov
or
inc
lds
lret
mov
pop
mov
in
and
push
push
push
int
mov
add
call
fsubrp
imul
pusha
xor
sti
mov
or
ja
inc
cmp
outsl
enter
add
and
fimull
loopne
mov
fistps
sarb
mov
dec
daa
aaa
pop
xchg
insb
xor
mov
mov
divb
sbbl
adc
sahf
fwait
insb
shrl
in
ss
mov
and
in
clc
mov
xchg
mov
jns
mov
mov
sahf
jp
jecxz
jmp
movsb
aaa
mov
xlat
dec
jmp
insb
test
adc
shl
loope
add
pushf
mov
and
inc
sbb
push
bound
adc
cmp
pop
popa
pop
add
sub
das
sti
pop
in
out
pop
fidivs
or
lahf
cmp
jle
push
xchg
popa
out
shl
movsb
pop
mov
cmp
notl
gs
xchg
xor
ror
shrb
das
adc
imul
and
mov
sbb
dec
pop
popa
hlt
mov
movsb
cmc
adc
pop
pusha
jno
lods
mov
and
sub
shll
adc
fwait
xchg
push
xchg
or
fstpl
mov
ret
rol
lret
xor
inc
mov
mov
in
negb
adc
jecxz
shll
push
imul
sahf
sub
xor
dec
sub
add
fimuls
leave
mul
in
fnsave
mov
gs
xchg
mov
jle
aam
add
dec
lahf
pop
ficoms
movsw
rcrl
pusha
fisubrs
sub
sub
jae
mov
and
cli
ret
rcrb
pop
cmc
mov
aas
jne
dec
push
push
stos
or
fsubs
mov
mov
add
aad
cmpsl
sbb
adc
or
movsl
or
call
cwtl
mov
jne
mov
fwait
lock
movsl
xchg
sahf
notb
jecxz
sbb
lods
in
pushf
hlt
and
aaa
xchg
or
sbb
nop
add
push
je
and
jns
mov
vmovaps
jne
rclb
cmp
mov
push
inc
mov
adc
ret
out
ret
lahf
jnp
jno
push
data16
stos
je
es
push
mov
ja
es
jnp
xor
scas
mov
pop
add
cmp
mov
jmp
jnp
idivl
fbld
inc
lds
jne
inc
lods
sbb
sbb
aad
xchg
insl
fstpt
fs
loopne
and
fwait
cmp
push
sti
mov
jb
xchg
jecxz
into
pusha
jno
aad
lea
ja
xlat
addl
imul
pop
lret
adc
daa
pop
loope
in
lods
std
push
inc
unpckhps
jnp
movsl
test
fidivrl
mulb
push
jae
xchg
sub
jmp
xchg
idivb
jp
hlt
leave
adc
jl
sub
mov
adc
push
inc
xchg
mov
push
and
in
mov
int3
in
mov
mov
cmp
xor
jecxz
shr
lds
sbb
fcomps
xor
pop
xor
out
int
ja
loope
ss
ja
loope
push
je
jno
lahf
stos
in
out
lods
or
icebp
ss
nop
push
mov
xchg
xchg
xlat
pop
mov
jns
mov
cs
adc
in
mov
std
jnp
movsb
sub
dec
inc
sbb
add
pushf
push
pusha
add
clc
aas
jge
rep
ret
mov
and
adcl
sbb
js
and
shl
push
or
cmp
and
xchg
jb
and
or
jp
je
aam
mov
int
mov
jb
push
adc
faddl
push
xchg
xor
or
mov
dec
gs
insl
fwait
inc
aaa
mov
iret
inc
rclb
imul
enter
in
bound
and
xchg
fs
fiaddl
or
aam
xor
adc
test
jmp
xor
cld
dec
cwtl
jb
out
je
bound
sbb
in
add
pop
js
add
and
add
dec
jbe
dec
xor
outsl
jmp
mov
imul
loop
repz
inc
daa
outsb
insb
rorl
push
push
inc
lea
mov
xor
je
mov
pop
nop
shrl
jg
mov
mov
je
dec
add
cmp
lret
int
adc
mov
dec
adc
xor
mov
fimull
sbb
cmp
sub
adc
fdivrs
dec
std
imul
pop
arpl
and
mov
jg
sti
xor
xor
adc
jp
and
mov
lahf
sbb
idivb
cmp
jne
push
dec
xchg
test
mov
mov
repnz
aam
hlt
xchg
or
loop
sti
xor
mov
ljmp
xchg
bound
rorb
xchg
inc
cmp
arpl
mov
int
fildl
call
inc
lret
xchg
adc
mov
lods
fisubrs
testb
aad
jno
fidivl
fisttpl
dec
pop
jl
add
cs
sub
xchg
mov
pop
push
inc
imul
adc
and
stos
cmp
andl
outsb
or
jecxz
lods
pop
sub
lock
and
aas
arpl
cmpsl
ffreep
jp
sbbb
fistpl
push
sub
aam
jp
aam
aad
fidivrs
ret
cmpl
mov
test
fisubs
inc
loopne
and
adc
addl
es
xchg
inc
cltd
pop
sbb
insl
sub
lahf
mov
xchg
pop
push
cli
dec
push
push
or
lea
cwtl
es
xchg
adc
mov
stos
in
stos
add
mov
xchg
lds
cmp
dec
pop
push
sbb
and
pop
inc
jle
sub
inc
orb
jp
int
insb
and
sbb
cmp
bound
lds
dec
jbe
jne
pop
loop
or
ds
add
lods
dec
xchg
mov
inc
or
mov
inc
push
cmc
or
repnz
push
pop
inc
js
lahf
push
inc
sub
cltd
sti
inc
mov
push
mov
in
lods
icebp
mov
inc
adc
aad
hlt
cld
cld
lcall
mov
jnp
mov
arpl
call
add
rclb
outsl
arpl
fldt
push
fwait
xlat
lahf
outsl
add
hlt
fbld
or
cmc
inc
push
movsb
xchg
jmp
sub
push
negl
dec
imul
xor
mov
imul
negb
rorl
mov
mov
test
cwtl
scas
xchg
lea
jle
cmp
lods
inc
add
xor
add
jg
nop
sub
mov
mov
ret
sti
xorb
sti
push
push
fnstenv
flds
lea
and
add
mov
movsl
xor
or
or
dec
cmpsb
dec
mov
add
sbb
xchg
pop
inc
xchg
xor
pop
loopne
or
sbb
cmp
shlb
inc
cmp
cmc
and
lds
dec
inc
cltd
cmpsl
int3
dec
jl
cmpb
ret
ficoml
xor
add
mov
nop
pop
add
and
cmpsl
dec
inc
mov
fsub
sahf
shl
dec
insb
xor
add
add
dec
and
in
mull
adc
mov
and
lret
sub
insb
push
sub
repz
pop
jge
cmp
add
test
mov
fistl
mov
notb
shll
mov
dec
rsqrtps
or
push
ja
and
les
nop
outsl
adc
and
dec
xor
js
inc
fisttps
sub
push
shld
test
scas
repnz
shrb
mov
push
sbb
std
scas
lods
pop
mov
sub
push
or
and
cmp
scas
pop
lcall
xchg
mov
jo
xor
add
jl
inc
xor
subl
addps
pop
outsb
sti
test
push
popf
repz
inc
in
jmp
ds
cmp
jp
push
sub
xchg
xchg
fiadds
arpl
inc
inc
inc
jle
adc
leave
jle
adc
mov
adc
hlt
clc
fisubrl
sbb
or
scas
mov
xchg
fs
lahf
in
cmc
test
pop
test
add
xchg
pop
rcr
push
aam
push
add
mov
testl
add
data16
test
addr16
daa
push
mov
jg
shl
pushf
or
push
pop
jne
fdiv
mov
pop
inc
das
cmp
xchg
mov
popa
xchg
stc
or
mov
cmpsb
jge
adc
or
jmp
sahf
fs
push
pusha
lds
and
lcall
sub
repz
sahf
ss
dec
jne
adc
add
inc
rcr
stos
add
inc
sbb
xlat
cmp
lods
sbb
or
jecxz
movsl
add
push
dec
mov
sub
adc
mov
mov
pop
add
scas
mov
pop
xor
rep
test
jg
cmc
sub
or
jno
test
out
xor
xchg
cmpsb
imul
or
push
call
dec
ja
xor
or
xor
imulb
pop
jg
aam
jbe
popf
jmp
dec
inc
sbb
sahf
std
rcrb
shll
and
mov
inc
and
push
jbe
jns
aam
stos
pop
sbb
and
dec
jae
jl
insl
sbb
xchg
ret
das
inc
or
std
in
sbb
mov
mov
in
mov
ret
rorb
push
sti
es
push
dec
lods
jge
cmp
and
pop
out
cmp
fwait
xor
in
mov
add
inc
adc
mov
cld
mov
jl
out
dec
pop
cs
sbb
add
xchg
push
je
xchg
dec
pop
jae
mov
popf
push
rcrb
mov
push
mov
shlb
movzwl
ficoml
icebp
mov
lods
inc
xlat
insl
data16
sub
inc
push
adc
decl
mov
cmp
push
mov
xor
xchg
mov
aad
push
test
mov
bound
imul
flds
sarb
and
lea
xlat
xor
outsl
bound
inc
mov
call
popf
mov
inc
push
scas
fs
loope
out
lahf
jl
pop
adc
fsubrs
dec
mov
shrd
lret
push
fistl
sub
test
mov
or
push
xchg
xchg
inc
movsl
adc
in
xchg
adc
add
ds
xchg
xor
fidivrl
cltd
imul
popa
les
cmp
hlt
lcall
jl
mov
inc
pop
xchg
push
mov
cwtl
push
dec
pop
adc
in
mov
mov
cmp
rorb
das
xor
and
mov
int
cmp
addr16
and
dec
fs
ja
aaa
enter
in
push
outsl
mov
adc
das
xor
faddl
sbbl
push
xchg
lock
or
or
xor
add
add
stc
xchg
mov
clc
cmpsl
cmp
into
dec
sahf
jmp
popa
out
cmp
pushf
rcrl
rorw
push
jl
lock
lods
ljmp
jo
in
mov
lea
js
push
cmpsb
test
xchg
pop
add
sbb
inc
pop
jmp
xor
sub
sub
sub
push
or
mov
dec
outsl
xchg
mov
aas
mov
or
or
dec
repnz
sbb
push
add
scas
sbb
lret
sti
dec
dec
int3
mov
mov
sbb
cs
stos
fimuls
cmpsl
adc
cmp
sbb
sbb
xor
fbstp
lcall
in
cltd
and
jle
stos
shrl
mov
mov
ficoml
ret
outsb
xchg
lds
test
xor
cltd
addr16
cltd
mov
arpl
jp
adc
ljmp
inc
iret
rclb
aas
pusha
fimull
pop
adc
rorb
dec
enter
jmp
pop
shr
scas
sub
jp
out
push
and
cmpsb
and
jmp
mov
cmp
dec
lcall
mov
in
mov
out
jge
mov
sbb
repz
jnp
inc
xor
fistl
das
mov
decb
std
ret
das
pop
inc
mov
xor
imul
mov
leave
pusha
shrb
xchg
jb
sub
jecxz
fldpi
out
pop
pop
xchg
pushf
and
xchg
or
aad
rcrl
inc
fs
mov
cmp
js
push
pop
inc
hlt
nop
out
xlat
adc
or
imul
lea
jle
loop
dec
in
imul
sub
data16
lret
test
movsb
inc
cmp
out
xchg
sub
and
mov
addr16
xchg
mov
pop
sub
test
xor
fwait
xchg
push
popa
mov
mov
inc
sbb
aaa
std
lea
xchg
sub
xor
cmp
loopne
movsl
inc
inc
push
push
jecxz
in
je
lds
clc
sbb
mov
icebp
inc
pop
dec
jp
fcmovne
std
add
hlt
mov
xor
jno
jle
mov
and
lahf
pop
imul
add
cltd
rcll
clc
lret
jne
add
orl
movsl
movsl
into
inc
int3
push
test
outsb
sbb
pop
fwait
adc
adc
addl
loop
mov
sub
ds
je
roll
decl
or
iret
inc
mov
cld
in
clc
je
push
arpl
scas
pusha
lret
jae
push
les
xchg
clc
xchg
pushf
addr16
leave
sti
nop
jge
aas
leave
mov
movsb
or
xor
fstpt
inc
pusha
test
and
imul
xor
and
rol
fildl
push
out
sbb
pop
mov
xor
hlt
push
mov
inc
sub
sub
je
mov
mov
icebp
sub
aam
dec
mov
sbb
dec
sahf
sbb
xlat
push
sub
test
add
push
fldenv
lods
imul
push
mov
ds
mov
or
cmp
xor
clc
mov
jge
cmp
xor
test
scas
and
mov
xor
mov
cmpsb
ds
mov
insb
sbb
loop
and
stos
mov
out
call
inc
adc
mov
xchg
and
inc
js
aad
in
cli
cmp
rolb
inc
daa
pop
or
cli
std
js
imul
or
clc
bswap
xorps
adcb
xchg
cmc
das
movsl
nop
ds
cmpsb
sbb
inc
clc
add
pop
seta
arpl
enter
xchg
mov
push
mov
out
movsb
lock
xor
sbb
add
out
aaa
and
shlb
std
daa
cwtl
mov
or
mov
fildll
int3
push
sub
fwait
mov
pop
aad
push
inc
jae
mov
sbb
shll
push
and
jmp
fwait
dec
sbb
pop
xchg
mov
inc
into
out
dec
data16
mov
pop
xchg
mov
ror
mov
test
sbbb
mov
mov
daa
inc
mov
pop
dec
stc
sub
rol
and
mov
pop
pop
jecxz
mov
ficomps
xlat
dec
jmp
mov
fsubrs
imul
push
aaa
jle
fnsetpm(287
into
test
or
xchg
clc
mov
mov
or
ja
or
sti
aas
outsb
xchg
mov
xchg
lea
call
xor
sub
and
fcompl
dec
push
add
add
js
push
gs
push
jecxz
in
jecxz
add
aaa
or
fildll
fucomip
out
mov
out
push
mov
cs
xor
jecxz
inc
or
popf
loop
pop
push
xor
mov
lgs
outsb
push
lahf
jae
aas
cmp
inc
xor
and
adc
push
inc
xchg
lcall
add
mov
inc
jb
sbb
inc
pop
mov
je
aas
lret
ficomps
mov
xchg
or
push
cmp
fs
rclb
xchg
xlat
nop
sbb
cs
lahf
pop
xchg
add
cmp
mov
lret
sub
dec
scas
mov
inc
out
pop
push
or
hlt
popa
fmuls
fimull
sbbb
std
mov
lret
xchg
xchg
xor
test
xchg
in
aas
loop
cmpsl
popa
push
pop
jno
sbb
rolb
xorl
jo
jecxz
cs
cli
test
aad
mov
push
pop
in
cwtl
out
cmc
in
dec
xor
addr16
jo
or
lahf
and
rcrl
cmpsb
mov
outsb
ljmp
mov
sarl
push
dec
dec
data16
add
mov
inc
push
hlt
pop
insl
push
aaa
in
fstps
data16
jmp
gs
mov
js
inc
mov
sbb
push
adc
inc
mov
out
out
hlt
jle
mov
div
xor
or
pusha
cwtl
jns
into
das
pop
test
xchg
bound
inc
loope
xchg
adc
enter
or
gs
xchg
push
pop
mov
ja
push
xchg
lods
jmp
mov
roll
push
divl
mov
loop
sub
or
jge
js
inc
mov
push
or
ds
inc
push
out
jae
shlb
js
dec
ret
and
sub
or
sarl
ljmp
in
jg
sbb
pop
cmp
xor
sub
aaa
int3
push
xor
int
pop
cmp
jno
pop
xchg
and
jge
jmp
insb
push
push
in
aad
mov
roll
dec
push
jae
divb
mov
inc
xor
fistpll
jnp
data16
cwtl
mov
jl
stos
sti
sub
shr
push
pop
call
or
fdivl
sbb
and
testb
jne
mov
icebp
dec
sub
leave
loop
sahf
in
fsts
push
xchg
fs
inc
fcoml
mov
scas
into
outsb
sub
imul
cwtl
jae
es
mov
mov
mov
adc
out
push
pop
test
leave
inc
fstl
jl
or
out
bound
in
lods
cmp
stos
int
xchg
cmp
mov
jns
sbb
pop
mov
jmp
icebp
in
daa
jp
in
ljmp
jle
addb
cmc
add
inc
dec
popf
sub
adc
add
mov
movsl
inc
mov
and
inc
insb
dec
pusha
jle
or
xor
mov
xchg
dec
andl
cld
flds
mov
in
or
rcrl
js
insb
or
xor
pop
incb
pop
jmp
dec
jns,pn
adc
sti
jle
sbb
jno
icebp
scas
and
pusha
sub
jns
aaa
insb
pusha
dec
sarl
sahf
jp
lret
mov
pushf
pop
jge
mov
add
clc
test
mov
pop
inc
int3
inc
loop
arpl
test
xchg
int
jecxz
sti
lret
jo
notl
push
jns
inc
insb
jne
push
int3
das
push
inc
adc
mov
out
mov
outsb
jne
dec
sbb
imul
je
lock
xchg
mov
lods
jno
stos
in
cli
sahf
incl
out
add
aas
nop
pop
or
into
test
or
outsl
idivl
std
cmp
cld
push
xchg
push
xchg
sahf
and
cmp
cmp
dec
cmp
mov
clc
add
test
sbb
mov
mov
scas
mov
mov
jl
pop
iret
movsb
loope
ljmp
mov
mov
fisubs
pop
push
xchg
mov
mov
add
pusha
pop
rorb
vpextrw
jmp
xor
jge
pop
insb
mov
pop
mov
sarl
xor
mov
sbb
mov
nop
call
into
rcrl
loope
outsb
cmp
ret
jge
inc
mov
push
jne
sbb
fdivrl
cwtl
pop
push
cld
icebp
scas
popf
jcxz
rcl
gs
movsb
add
bound
xchg
mov
dec
ja
cmp
mov
dec
sbb
mov
insl
inc
jnp
push
fcomip
fs
adcb
jecxz
decb
xor
push
stc
pop
and
sbb
insl
mov
xor
incb
icebp
ljmp
jmp
cwtl
loope
in
adc
ja
std
mov
pop
and
cmp
outsb
cmp
mov
hlt
cmpsb
sub
xchg
xor
mov
aad
inc
shr
pushf
sub
imul
jne
xor
xchg
ds
jae
xlat
leave
mov
mov
cmpsb
in
mov
sub
cmpsl
pop
mov
sysret
jb
sub
out
scas
mov
sarb
and
mov
sbb
in
jnp
xor
sbb
xchg
rcll
sarl
inc
inc
aad
add
push
cli
jne
mov
sbb
shll
dec
das
arpl
xchg
mov
or
stos
inc
push
add
dec
push
xchg
cmc
cwtl
fdivrs
aas
sub
test
mov
addr16
popf
aad
or
mov
leave
cli
mov
fildll
push
jge
out
mov
lret
mov
pop
test
xor
jno
ret
test
xlat
push
inc
lock
dec
pop
shl
mov
lret
jnp
out
int
mov
outsl
cmp
fildl
into
test
pop
push
xchg
dec
ss
jp
cwtl
ror
stc
loop
jb
sbb
loop
jmp
adc
jb
mull
xor
dec
cltd
shll
into
mov
ret
fcomps
mov
mov
lods
mov
sub
cmpsb
xlat
call
andb
sar
aam
mov
sub
fisubl
in
xor
js
stos
js
pop
sbb
fucomip
inc
pop
inc
stc
outsb
sub
mov
out
push
test
mov
ret
adc
outsb
into
pop
sub
stc
lods
add
loop
fcmove
fisubrs
cld
push
mov
jg
dec
cmp
pop
mov
dec
les
xchg
sti
xchg
add
fsts
mov
insl
dec
in
mov
ret
jecxz
mov
movsl
pop
data16
cmp
dec
pop
loope
jnp
lahf
mov
test
pop
xor
and
aam
and
rorb
shl
dec
div
push
push
daa
mov
cmpsb
push
cmp
jnp
std
addr16
mov
ja
fnstcw
repnz
adc
pop
sbb
faddl
js
jmp
add
push
or
jmp
xchg
leave
lods
fisubl
pop
arpl
mov
ret
push
orb
mov
nop
adc
loopne
mov
mov
ja
xor
shrl
sub
orl
push
dec
mov
lahf
or
adc
das
cmpsb
shrl
mov
xor
lret
inc
push
insl
fsubl
xorb
aas
or
inc
aad
dec
xchg
xchg
sbb
mov
int
sarb
lds
xor
loop
hlt
cmpsb
test
jno
xor
data16
xlat
bound
iret
in
mov
sbb
add
ret
call
popf
inc
imul
ret
into
jmp
pop
inc
lret
movsb
sub
mov
adc
mov
aas
pusha
stos
sub
lea
repz
sub
add
das
add
bnd
sti
xor
call
movsb
xchg
mov
ret
sahf
xor
cmp
xchg
mov
std
fs
fs
std
ja
nop
leave
fnstsw
cli
sbb
or
xchg
rorl
or
dec
ljmp
incb
pop
incl
pop
cmpsl
sarl
push
adc
xor
push
cmp
pushf
mov
outsl
out
gs
loopne
sbb
cmp
fs
jbe
cs
xchg
jne
shrb
inc
jg
popa
gs
dec
fs
sub
popf
cmpsb
xchg
leave
jnp
xor
mov
scas
lret
pushf
sti
dec
test
stos
mov
mov
movsl
fldl
xchg
sub
cmp
adc
cli
sbb
fists
in
in
sub
xlat
mov
gs
iret
dec
fimuls
cwtl
cmpsb
inc
push
and
roll
lea
dec
mov
jae
pop
dec
std
jno
and
scas
inc
sbb
insl
daa
adc
inc
xchg
or
jae
and
mov
lret
push
ficoml
pusha
pop
fistpll
push
iret
jno
inc
ja
lock
add
sub
nop
ret
xor
ret
roll
test
or
cmp
sub
sub
or
enter
jne
mov
imul
jp
imul
pop
stos
jns
mov
push
mov
adc
test
lock
push
aaa
or
adc
add
jne
inc
stos
mov
jns
scas
jb
int
call
xlat
sbb
inc
test
push
ja
or
shlb
mov
fldl
popf
pop
scas
das
movsb
jo
xor
xor
jp
jmp
insb
dec
xor
dec
ss
stos
push
lea
js
inc
lret
dec
test
cmpsl
push
mov
cmp
mov
mov
dec
xor
loope
pop
imul
movsb
cmp
test
xchg
adc
ret
ds
pop
or
loopne
cmp
cmp
in
jl
loope
cmpb
lods
pop
stos
pop
lods
out
pop
fwait
adc
xorl
pushl
pop
adc
imul
lock
xchg
int3
xchg
insl
mov
std
fwait
adc
lcall
enter
mov
scas
in
es
add
mov
aaa
push
dec
mov
pop
cltd
sbb
mov
fdivp
pop
into
mov
aas
pusha
push
fwait
cmp
scas
xchg
imul
pop
adc
xlat
mov
in
fldcw
inc
cmpsb
inc
xchg
fldenv
lds
mov
ljmp
xlat
nop
cmpsl
sub
adc
jbe
es
sbb
cmp
and
mov
flds
and
cmp
mov
adc
cmc
ds
hlt
pop
mov
mov
and
cwtl
push
jl
daa
call
dec
in
sub
sbb
sarl
stos
in
or
jns
pop
into
shl
jecxz
add
mov
mov
daa
xchg
adc
push
int3
cltd
mov
inc
imul
icebp
insl
push
pop
jnp
lea
outsl
mov
popf
adc
pop
in
call
mov
pop
repz
push
mov
pusha
faddl
or
inc
sbb
push
pop
fs
dec
repnz
movsb
dec
add
fldcw
rolb
push
shl
jle
call
sbb
fcoms
scas
mov
mov
aas
aas
inc
xchg
xor
jp
jns
movsb
push
sbb
or
leave
cltd
lret
xor
push
stos
lret
int3
cmp
push
aas
add
xchg
xchg
int3
and
mov
enter
in
push
adc
xchg
sub
int
pusha
pop
pop
pop
dec
jl
shlb
inc
aas
xchg
daa
and
and
ss
aam
lcall
or
dec
push
inc
mov
cmc
and
mov
xchg
es
add
test
in
jnp
jg
lods
mov
movups
fidivs
aad
lcall
int
cwtl
mov
push
jns
jnp
sti
jl
ret
aad
pop
xchg
cs
xchg
popf
imull
cs
andl
rorb
sbb
mov
cmc
movsb
or
aad
xor
scas
mov
pop
sbb
cmp
bound
jbe
ret
loopne
cmp
mov
mull
cmpsb
test
xor
movsb
jmp
js
xor
jg
call
or
inc
push
in
adc
add
test
jge
push
push
or
daa
xchg
add
aam
xlat
in
jmp
in
out
loop
sbb
dec
rclb
xchg
arpl
mov
cmpsb
mov
pop
scas
xchg
addr16
xchg
jmp
and
adc
loope
add
scas
push
test
cmp
ss
mov
stos
lahf
idivb
sub
es
lds
xchg
mov
xchg
mov
push
sub
aas
mov
pop
into
sub
das
cmpsb
cmpl
das
fldt
rcrb
ja
leave
inc
into
inc
rcl
xchg
xchg
icebp
cmp
lds
xchg
add
add
ljmp
or
sbb
pop
pop
or
add
cmp
and
sub
pushf
xor
push
fldl
push
push
ss
and
hlt
aaa
sbb
inc
push
stos
push
imul
xor
dec
leave
add
stc
push
bound
mov
fisttps
insl
cmp
jne
mov
sbb
dec
and
clc
xor
xchg
jmp
push
loopne
lahf
int3
pop
xorb
xor
shlb
cwtl
cmp
inc
int
insb
mov
dec
mov
sub
stc
popl
dec
iret
daa
inc
xor
xlat
movsl
std
mulb
rolb
sbb
dec
jmp
inc
and
cli
jmp
pop
xor
cmpsb
add
mov
sti
inc
fwait
xchg
test
mov
inc
arpl
testb
mov
jae
out
decb
imul
les
cmp
call
mov
sub
in
jle
faddl
in
mov
inc
je
and
jmp
adc
icebp
popl
insl
pop
in
hlt
std
jge
mov
aad
js
sub
movsb
ss
mov
jecxz
push
inc
and
rolb
pop
into
mov
xor
push
scas
cld
mov
test
dec
adc
fwait
and
icebp
fistpll
fldcw
js
pop
arpl
mov
jne
inc
xchg
and
mov
psraw
mov
es
daa
sahf
test
mov
insb
xor
outsb
lret
pop
push
jne
mov
sbb
rorl
sti
jo
jne
sbb
fnstenv
daa
je
je
lahf
inc
push
clc
add
jl
movsl
mov
jge
push
outsl
jne
andl
imul
xchg
jl
push
mov
inc
lds
or
or
cltd
sub
cmp
jbe
inc
push
out
movsl
das
out
in
popa
repz
lds
mov
insb
jbe
push
adc
scas
jg
insl
icebp
out
mov
pop
jp
fcmovne
inc
ds
push
lea
out
jmp
aad
xchg
nop
cmp
shll
pop
dec
aad
sub
sbb
or
js
in
inc
pop
push
test
sbbb
mov
pcmpgtb
test
lods
jne
mov
push
push
jle
inc
andl
push
aas
push
pop
clc
cltd
aad
aaa
mov
sarl
lods
jp
jp
in
fldcw
sub
fnstsw
pop
shrl
setb
sbbb
loopne
pop
out
rorl
movb
rcrl
pop
xor
xor
jmp
push
jle
jae
pop
mov
out
fsubp
cmp
push
mov
test
std
daa
shlb
test
push
rol
clc
inc
decb
repnz
fmulp
jne
push
movsl
sbb
stos
arpl
sub
mov
int
stos
fnstsw
mov
pop
adc
pop
fwait
push
push
pop
cmp
testb
push
mulb
orb
mov
lods
mov
xlat
sub
jb
in
aas
add
dec
pop
jle
and
or
fldl
cs
mov
fstpt
sub
call
push
gs
call
je
ficompl
fimuls
adc
mov
rolb
addb
fs
imul
mov
inc
ljmp
jp
dec
xchg
jbe
sub
cld
mov
jae
lcall
cwtl
or
xchg
out
les
cld
pop
mov
xor
cmpsb
and
into
push
out
stos
loop
outsb
sub
in
xor
fidivl
mov
mov
ud1
mov
xchg
out
xchg
ret
jg
int
dec
ljmp
call
fwait
stos
mov
push
sbb
sub
mov
testb
mov
push
out
xchg
xchg
icebp
stc
xchg
or
pop
repz
push
jp
fwait
mov
imul
paddusb
dec
sahf
or
mov
mov
or
fs
adc
fstpl
xchg
out
add
push
mov
mov
fs
jne
mov
jne
mov
push
icebp
popa
add
fsts
mov
scas
inc
adc
push
mov
data16
cmc
enter
pop
js
xchg
mov
or
and
mov
arpl
push
leave
das
pop
sbb
or
jne
ficompl
fcoml
inc
inc
dec
div
cld
lock
fsubrs
pop
inc
lods
sbb
mov
mov
lret
ja
lret
fdivrp
lods
ljmp
loope
into
xor
out
ds
or
je
adc
cld
aas
adc
xlat
std
mov
inc
es
leave
add
mov
adc
push
testb
das
test
push
lea
adc
out
jbe
xchg
push
ljmp
out
std
movl
push
and
mov
popa
imul
test
jle
lds
rolb
xor
lahf
pop
xchg
mov
or
fnstsw
jle
mov
jnp
inc
test
mov
adc
or
aas
mov
mov
sbb
lods
fildll
pop
dec
or
popa
push
pop
sbb
lret
iret
cmp
ficomps
push
mov
lock
imul
jmp
fwait
scas
pushf
xor
xchg
xlat
mov
aad
std
xchg
aas
cmp
lret
outsb
jae
pop
lock
push
adc
inc
testb
add
ja
mov
leave
sub
inc
or
dec
mov
mov
pop
push
sub
xor
push
cmp
lock
sbb
inc
in
rorl
jp
gs
xchg
sub
adc
cmp
or
lcall
push
cmp
testb
sub
jbe
cmp
ret
push
sbb
cmp
push
mov
aaa
inc
pop
pop
cmpsl
shlb
pop
mov
or
fcoms
mov
dec
and
dec
sti
xchg
jl
push
popa
dec
cld
outsl
mov
sbb
repz
add
or
mov
inc
xchg
decb
jmp
sbb
sbb
mov
in
mov
push
mov
mov
or
movsb
jge
mov
or
mov
jl
leave
jge
cli
filds
mov
mov
fsubrs
inc
add
fwait
movsb
test
cmpsl
mov
push
jns
std
lcall
testb
cwtl
imul
lahf
and
movsb
ficomps
stc
lods
mov
cwtl
mov
push
dec
sbb
mov
mov
adc
stc
push
out
je
sub
pop
xchg
movsl
jns
enter
push
scas
fisubl
scas
or
pusha
lea
sub
adc
hlt
in
pop
cmp
jle
sbb
add
jbe
xor
lds
mov
enter
aam
aaa
into
adc
and
addr16
mov
aas
jne
cltd
mov
lods
in
fisttpl
je
mov
sbb
shlb
or
out
mov
sbb
mov
jb
inc
xchg
push
push
imul
or
xor
add
xor
call
enter
fisttpll
in
mov
xor
push
cmp
call
pop
xchg
xlat
add
and
insb
in
ret
push
int3
add
mov
hlt
mov
out
iret
fmuls
int3
test
movsb
or
add
call
push
je
es
ljmp
nop
or
or
and
ret
andl
int
xchg
das
ja
sarb
inc
cltd
data16
cmp
xorb
adc
adc
mov
mov
aas
jb
sub
test
adc
push
mov
pop
push
sti
pop
repnz
pop
mov
stc
insl
or
xor
push
mov
lds
fwait
push
jb
pop
jno
mov
push
cltd
jo
sub
mov
inc
movsl
sbb
es
jb
mov
adc
dec
pusha
mov
mov
ja
das
push
popf
mov
into
cmp
inc
iret
cmc
scas
nop
enter
adc
push
inc
and
xchg
jbe
mov
sub
push
enter
dec
mov
dec
or
cmp
in
out
sub
in
or
in
adc
std
cmp
push
in
push
dec
adc
mov
aas
xchg
ljmp
and
jb
cmc
mov
aas
daa
xchg
lods
cmc
arpl
cmp
pop
or
test
mov
test
pop
aas
adc
and
in
call
lahf
in
sar
cmp
bound
shl
mov
repz
iret
scas
repz
out
pop
cmp
dec
pop
insb
mov
mov
adc
in
out
sahf
cmp
mov
xor
mov
mov
dec
fwait
stos
sbb
popf
push
cmp
sub
hlt
mov
mov
fdivs
mov
negl
cwtl
jle
cmp
xchg
xor
mov
ljmp
sub
ss
add
inc
inc
xchg
mov
jecxz
xor
xor
lahf
lds
pop
mov
xchg
jns
ljmp
xchg
or
mov
gs
cli
rclb
adc
out
lcall
movsl
pop
inc
lahf
sbb
adc
xlat
mov
nop
and
push
sbb
arpl
call
bound
jecxz
bound
push
loopne
dec
or
adc
lret
xor
lea
aaa
hlt
arpl
cmc
cmp
pop
and
lock
jns
push
push
loopne
clc
cmp
add
mov
insb
test
jbe
ret
mov
cmp
push
jmp
adc
and
push
mov
xorl
mov
cmc
in
fwait
test
inc
jmp
je
nop
hlt
xchg
pop
ss
mov
fwait
aas
mov
push
stc
sub
movsb
cmp
imul
imul
pusha
push
insb
or
push
or
aaa
stc
push
out
mov
cmovo
test
icebp
popa
dec
dec
pop
dec
jno
cmpsl
sti
jnp
stos
add
orl
jne
dec
je
gs
cld
sub
aaa
jnp
sub
adc
pop
sbb
dec
xchg
mov
jle
scas
das
insb
add
lahf
insl
cmp
inc
insl
jle
xchg
outsl
dec
dec
jp
shlb
inc
jns
adc
in
cmp
lods
adc
enter
ret
pop
mov
jmp
jo
lock
aas
sti
sbb
fists
test
lret
and
push
fdivrl
dec
jle
rcl
in
and
push
test
inc
clc
bound
push
ja
cltd
repnz
data16
stc
mov
out
sti
in
add
dec
jo
ljmp
dec
pop
push
hlt
leave
sbb
push
in
xchg
inc
cmpsb
jecxz
xor
lods
mov
orl
fidivl
lods
rorl
les
cwtl
in
mov
mov
imul
dec
push
adc
aam
mov
add
jp
nop
sarl
adc
enter
push
ja
fmuls
jmp
test
xchg
shll
dec
mov
cwtl
mov
cld
push
pop
insb
fcompl
xor
enter
mov
or
sbb
mov
std
pop
outsl
hlt
xor
fidivl
sub
test
repz
cmpsl
fdivrl
lret
mov
adc
adc
scas
pop
out
mov
mov
lahf
movsb
mov
cs
and
lods
in
mov
dec
aaa
pop
aas
xchg
push
arpl
icebp
adc
mov
fmuls
cmp
sub
loope
sbb
push
or
fsubl
test
cmp
repz
xor
adc
or
add
xor
mov
xor
stos
mov
cmpsl
or
std
pop
arpl
add
dec
fimuls
add
jnp
push
std
in
sub
cli
mov
fwait
add
das
mov
cwtl
mov
arpl
movsb
mov
clc
in
cld
outsl
sbb
sbb
cmp
xchg
lahf
lods
and
daa
loop
outsb
mov
sti
and
outsb
sbb
mov
in
push
in
dec
pop
push
dec
mov
fstp
enter
inc
add
push
cld
cmp
mov
in
cmp
in
mov
ljmp
add
les
fwait
int3
gs
xchg
je
cltd
sub
insb
pop
or
push
stos
mov
mov
into
lahf
cs
pop
xchg
xchg
cs
inc
movaps
xor
filds
and
dec
sub
mov
jae
add
sbb
enter
xchg
das
sarb
cwtl
adc
enter
xchg
ret
push
xor
push
sbb
sbb
mov
loop
cltd
aam
push
mov
aam
sub
aas
mov
push
add
push
aam
push
lret
xchg
and
flds
aam
popf
jae
xchg
push
loope
lret
add
adc
cmpsl
iret
or
jbe
aad
xchg
pop
out
mov
popa
cs
jbe
fstpt
out
jmp
xor
jbe
add
push
inc
or
dec
jae
ret
int3
inc
xchg
out
xchg
xor
push
in
jle
mov
lahf
ret
mov
dec
mov
out
loope
sub
sbb
sbb
rclb
add
sarb
and
andl
mov
movsb
pop
outsb
sub
xchg
roll
out
push
mov
loope
insb
pop
jg
out
dec
inc
and
xchg
adc
ret
call
push
out
mov
pop
aaa
shll
ss
loope
pop
lahf
add
mov
xchg
dec
out
mov
in
in
rorl
or
daa
lea
dec
in
mov
mov
add
adc
and
aas
pushf
pop
jnp
and
les
sahf
jns
fwait
fwait
loope
push
add
jp
addr16
pop
add
ja
mul
and
or
data16
rcrl
or
push
mov
sub
xchg
clc
rclb
std
mov
inc
lret
dec
scas
js
fwait
mov
or
ljmp
in
cltd
rcrl
roll
ja
mov
lret
xchg
mov
mov
ret
ds
das
nop
mov
arpl
add
xchg
in
adcl
push
notl
jle
aam
mov
into
repz
out
es
imul
fistpll
xor
and
mov
cmp
mov
and
and
fwait
lods
xchg
mov
push
lods
scas
inc
cmp
pop
xchg
ds
lret
setbe
jmp
or
nop
inc
dec
xchg
sbb
add
jb
gs
inc
shlb
jmp
sub
fstpt
sub
imul
fidivrs
inc
push
dec
movsl
mov
xor
adc
lahf
shl
xor
sar
add
jne
lcall
add
adc
dec
pushf
nop
jmp
test
jmp
mov
push
add
pop
iret
mov
xchg
mov
popa
shl
ja
cmp
mov
icebp
nop
cmp
or
inc
in
jbe
ss
out
add
sahf
mov
das
add
adc
movsb
adc
pop
cmp
and
jo
adc
movsb
fdivrl
in
and
out
adc
subl
lock
faddl
inc
testb
stos
xor
dec
shr
dec
filds
push
loopne
xchg
xchg
outsb
addr16
cmp
popa
test
mov
int
xor
inc
or
repnz
enter
mov
rcrb
jb
pop
js
popf
sub
inc
out
lahf
inc
ret
mov
test
mov
push
bound
outsb
pop
jns
fs
inc
sbb
xor
lret
lcall
xlat
lea
mov
cmp
xchg
dec
mov
adc
dec
test
dec
push
jae
add
notl
xchg
aaa
mov
xor
sahf
psubd
jb
les
jp
dec
sbb
cmc
orl
push
push
inc
ret
jge
push
jp
mov
mov
je
adc
outsb
scas
into
mov
cmp
jmp
dec
cmovne
sub
add
dec
lds
inc
xlat
add
mov
test
add
pop
mov
sub
mov
mov
out
cmpb
popf
loop
cmp
jecxz
fsubrl
add
and
aas
out
and
adc
test
add
jo
pop
dec
jl
pusha
mov
les
xor
bound
mov
sahf
fildll
or
in
dec
lds
adc
addr16
pushf
sub
pop
add
mov
xor
mov
mov
cmp
mov
stos
das
jmp
pop
les
mov
addr16
sti
js
pop
daa
andl
stos
divl
mov
in
pop
dec
mov
xlat
into
bound
sahf
and
jne
lcall
test
mov
dec
loope
xchg
or
out
jecxz
movsl
mov
aaa
out
jns
rcr
rol
repnz
iret
dec
negl
jge
push
fdivrl
cmp
test
cs
push
iret
hlt
movsb
and
or
inc
fistpll
pop
cmp
mov
popa
pop
push
out
push
in
mov
mov
xchg
jmp
rolb
lock
inc
frstor
loope
fldcw
imul
scas
insb
enter
lock
xor
out
lahf
outsl
call
shl
inc
jnp
push
pushl
loopne
icebp
ds
sbb
cmp
inc
xchg
pop
rcr
lcall
mov
mov
incb
pop
mov
sbb
lret
mov
pusha
mov
cli
or
in
pop
jmp
adc
dec
pop
cwtl
pop
push
push
loop
movsb
mov
mov
mov
icebp
stc
mov
jb
pop
imul
call
rcll
nop
push
dec
lods
in
jb
jmp
repz
add
cmp
movsb
xchg
push
mov
xchg
cmp
fimull
cmova
aam
mov
addr16
sahf
xchg
rorl
iret
mov
mov
push
hlt
dec
sub
loop
in
js
sbb
xchg
gs
loop
mov
push
push
pop
ljmp
scas
sub
nop
enter
lock
repz
rcr
jecxz
fnstenv
xchg
push
lahf
ljmp
pushf
pop
jecxz
push
dec
adc
jne
filds
mov
rcll
jnp
outsl
sbbb
jb
jle
mov
mov
test
push
int3
jo
cmp
or
dec
sub
sbb
js
fmul
xor
scas
inc
jae
in
repnz
das
ljmp
imul
jle
sub
adc
cmp
movsb
sub
enter
mov
fwait
ja
lcall
loope
or
mov
sub
mov
nop
out
push
inc
jmp
sbb
fildll
push
fdivrl
mov
xor
andb
add
ret
notb
xchg
mov
and
inc
scas
and
adc
dec
push
flds
sbb
lods
cli
shll
mov
pushf
cmovno
dec
mov
mov
gs
jg
mov
cmp
ret
int
adc
data16
jmp
jne
xor
fs
aad
push
lea
rorb
adc
mulb
test
push
int
rclb
mov
cmpb
stos
repnz
cltd
repnz
cmpsb
lea
dec
mov
lock
pop
mov
lock
pop
mov
scas
addb
and
push
add
test
insb
sub
inc
fimuls
in
and
xchg
mov
jae
imulb
jle
jns
mov
mov
xchg
leave
popa
xor
es
cmp
lahf
mulb
mov
or
adc
rcr
mov
mulb
mov
sub
mull
push
pop
cmp
outsb
pop
mov
add
negl
xchg
inc
jnp
pop
ss
inc
cmp
adc
test
daa
loopne
lret
sub
addb
mov
test
sbb
xchg
outsl
enter
sbb
push
xchg
aad
ljmp
in
mov
sbb
adc
cld
aam
inc
and
adc
lret
mov
sbb
xchg
xor
testl
push
fildll
fwait
scas
jecxz
pop
lock
jg
aaa
pop
cltd
cmp
adc
popf
int
adc
pop
pop
pop
add
mov
andl
fistpll
cltd
inc
or
mov
lea
jb
adc
sbbb
hlt
xor
daa
cmpb
mov
jae
imull
lea
sub
sbb
jbe
ret
insl
inc
aaa
or
das
test
sub
jnp
cmpsl
or
outsl
jbe
mov
repz
ret
rcrb
lret
dec
pop
cs
push
jecxz
push
xor
incb
dec
test
mov
mov
mov
incb
mov
xor
lcall
bound
lret
inc
int
fwait
cmc
dec
cli
gs
mov
adc
popf
imulb
dec
jno
mov
dec
adc
mov
in
cld
sub
gs
nop
shrb
cmc
repnz
pop
bound
pop
lret
arpl
aad
pusha
lret
cmp
aaa
dec
or
push
dec
test
xor
call
std
ret
bound
repz
bound
xchg
lahf
rcl
add
cmpsl
mov
lret
mov
rcrl
push
xchg
icebp
mov
xchg
cmp
cmp
sub
mov
out
or
sub
push
mov
mov
or
mov
lret
jmp
push
pop
push
mov
adcb
or
fldenv
mov
cli
repz
add
push
nop
push
mov
sbb
mov
jl
adc
or
scas
imul
clc
adc
pop
imul
std
jns
pop
cmpb
jbe
adc
fstpl
jae
imul
xor
sbb
push
adc
lret
push
sti
sbb
jbe
cmp
sub
mov
mov
pop
mov
lcall
sbb
cmp
dec
std
inc
cwtl
mov
xchg
jg
shll
xor
mov
cmp
pop
out
push
jae
adc
and
push
or
cmpsl
mov
stos
cmp
mov
jmp
push
mov
xor
jae
pop
and
and
push
xchg
mov
pop
pop
push
sub
in
cmp
and
push
or
out
pushf
lea
insl
ja
pop
jl
adc
xor
lahf
add
mov
das
into
scas
cmc
out
in
add
dec
mov
inc
sbb
lret
dec
push
decb
dec
loop
push
es
dec
sti
xor
in
mov
jmp
push
js
adc
test
pop
mov
mov
cmp
jno
mov
jne
popa
adc
push
scas
adc
push
mov
xchg
gs
cmp
jecxz
outsl
lea
mov
mov
roll
div
cmp
adc
push
and
xlat
xor
mov
mov
mov
sti
or
sub
jp
lds
iret
lds
sub
lret
lods
stc
insl
stc
inc
in
xor
dec
daa
out
hlt
out
int
pop
pop
mov
ja
stos
aas
sub
jbe
lds
push
or
std
cwtl
sbb
jecxz
inc
ja
dec
xchg
lods
dec
cmp
mov
out
and
repz
dec
js
and
xor
cmpsl
lock
ret
push
adc
xchg
push
xor
dec
xchg
mov
lods
shr
ljmp
shlb
xchg
jb
jae
sti
mov
psubusb
aas
xchg
push
fwait
and
push
push
dec
loopne
lcall
jne
je
cld
adc
dec
cli
xchg
ret
out
add
push
jae
scas
jmp
mov
rcrl
ss
iret
imul
add
mov
or
jne
int
pushf
jb
scas
test
scas
sub
in
imul
ret
sarb
jns
xchg
lock
lods
cld
insb
and
rcll
push
in
das
cld
movl
out
adc
pop
sbb
cmpsl
outsb
aas
lret
in
pop
hlt
sbb
sbb
jmp
lods
push
sub
jl
adc
out
or
inc
inc
jne
pop
std
dec
testb
ds
cli
cs
outsb
pop
dec
insl
lods
xor
out
fstpl
or
fisubs
cs
xchg
pop
inc
or
push
mov
cwtl
push
insl
jp
rcrl
ljmp
lahf
or
push
lret
push
xchg
pushf
fstp
lock
aad
movsl
xor
ljmp
negb
xchg
imul
loopne
cld
lods
jp
cs
imulb
pop
idivl
jp
jo
and
push
outsl
cmp
or
jmp
setnp
jecxz
leave
mov
fs
lret
jo
mov
dec
daa
cld
jo
pop
fmull
pop
push
mov
leave
insl
dec
pop
hlt
fstl
stos
mov
push
inc
fistpll
xor
xlat
repnz
nop
sar
pop
hlt
int
mov
jecxz
popf
mov
mov
and
adc
mov
std
hlt
and
in
sti
pop
lods
push
test
jno
sti
je
lock
pop
push
mov
rep
lahf
or
test
fdivrs
mov
cmpsb
pop
adc
xor
pop
jne
out
jo
test
mov
nop
int3
sarl
push
ret
test
mov
add
daa
std
jg
popf
inc
rep
repz
shll
pop
aad
in
mov
movl
cs
lret
xchg
shll
jne
arpl
jb
xor
pop
popa
pop
icebp
cmp
cld
xor
ret
sbb
xor
inc
and
dec
or
lea
pop
arpl
xchg
pop
test
push
jno
call
ss
popa
imul
and
push
cmp
jecxz
jne
testl
add
fidivrl
jge
push
ja
stos
cmp
aas
ret
in
cmp
ss
push
or
or
fmulp
lea
inc
xor
mov
sahf
out
mov
rcrb
pop
aas
daa
jge
loope
cmpsl
inc
lret
out
lds
lret
insl
xor
hlt
xchg
add
bound
pop
cmp
lret
adc
sbb
adc
sbb
test
sbb
lods
das
mov
cli
movsb
out
insb
push
in
cmp
roll
roll
pop
ret
mov
out
pop
xchg
addb
adc
sti
sub
mov
aad
cwtl
mulb
sbbb
das
cmpl
mov
rolb
adc
cmc
jge
mov
add
cmp
mov
push
inc
push
outsl
push
es
andb
xchg
int3
std
inc
lret
mov
pop
stc
jecxz
pop
test
xlat
cltd
sbb
mov
xchg
xchg
ret
int
clc
test
outsl
xor
mov
insb
sbb
add
je
xchg
or
push
xchg
gs
mov
pop
hlt
jle
jo
mov
addr16
hlt
pop
cmp
std
aas
sbb
and
cmp
andb
mov
cmpsl
and
add
sub
jno
shll
push
test
jb
mov
loop
adc
out
xchg
pop
pop
inc
pop
test
aas
or
dec
sub
stos
push
jae
dec
mov
ja
enter
in
repz
add
nop
inc
push
mov
popa
dec
por
xor
test
out
loopne
jmp
add
mov
lock
xchg
dec
dec
pop
ret
jbe
pop
pop
cmpsb
push
dec
pusha
lods
addr16
jne
mov
or
xor
xchg
loop
fwait
je
push
and
rcl
xchg
pop
inc
aas
movsl
dec
jo
mov
cmp
adc
testb
lcall
ds
xlat
inc
or
rorl
test
shll
imul
lds
add
or
xchg
jle
stos
ds
shl
jmp
sub
mov
cmp
mov
pop
test
adc
push
cmp
cmc
pop
mov
jle
std
rorl
jp
pop
mov
out
mov
and
bound
mov
pop
leave
cmpsb
imul
xor
shrb
adc
loope
das
pop
repz
pusha
orb
outsl
xor
lahf
dec
mov
repz
cwtl
cmp
jmp
scas
or
pop
dec
daa
adc
shlb
cwtl
xchg
jle
jge
fldt
sahf
leave
les
cli
shrl
sub
rcrl
xchg
xchg
or
cmpsl
inc
mov
mov
push
pop
sub
pop
mov
mov
mov
popf
pop
xor
int3
add
push
lahf
mov
jmp
hlt
xor
mov
out
aas
inc
or
mov
pop
mov
aad
dec
loope
mov
pop
mov
dec
cs
mov
out
mov
push
cwtl
pop
and
and
add
add
into
mov
sub
mov
cmp
inc
inc
push
clc
mov
sub
fidivl
xor
or
test
cmp
rcll
add
sub
pop
pop
je
mov
idiv
fnsave
ds
adc
addl
clc
clc
cmp
xor
push
sbb
jge
mov
sti
shrl
in
into
add
sti
lcall
shrb
mov
orl
mov
aas
mov
sub
and
add
inc
aam
fcoml
andb
cmp
cmp
movsl
jae
cld
shll
pushf
cmp
jmp
pop
xchg
ss
push
jp
into
sub
dec
mov
test
jle
dec
scas
rcrl
fildl
mov
inc
and
cmc
in
mov
stos
jecxz
outsb
ljmp
enter
inc
sub
adc
test
popa
cmp
imul
sub
xchg
and
mov
test
push
fdiv
push
jmp
xrelease
push
pop
or
mov
push
mov
adc
in
sub
xor
push
jle
mov
pop
dec
and
faddl
mov
jae
loopne
sub
or
dec
cwtl
or
fadd
push
mov
jbe
jb
push
sub
ret
mov
or
lret
mov
insl
push
outsl
jmp
inc
andnps
cs
mov
out
aam
inc
sbb
mov
rcrl
flds
faddl
insb
loop
call
pop
mov
adc
dec
jmp
adc
dec
jnp
daa
add
pop
mov
mov
inc
fdivs
jae
dec
push
aas
decb
mov
jp
loopew
lcall
and
icebp
jb
aaa
sub
frstor
and
lods
or
repz
dec
mov
pop
testb
lret
inc
jecxz
jg
inc
repz
ja
daa
cwtl
push
cmp
jbe
into
dec
loope
out
test
arpl
ljmp
in
cmpsl
mov
push
repnz
pop
mov
je
mov
cltd
insl
sar
pop
or
ss
push
pop
jl
sub
jns
pop
jae
sbb
scas
fadds
xlat
cmpsl
lods
call
and
push
dec
sub
insb
and
cmp
dec
pop
jae
cmp
test
pop
inc
pop
jae
xchg
mov
xor
mov
jmp
fisttps
xor
inc
adc
arpl
or
fisttps
mov
jnp
push
call
repz
pop
add
inc
push
jmp
out
stos
lock
cmp
adc
xor
fldz
outsb
lahf
pop
or
fisubrs
push
outsb
icebp
mov
cmp
mov
jge
dec
inc
inc
dec
mov
mov
int
pop
aas
mov
aaa
sbb
add
mov
movsb
pop
cmc
stos
imul
in
jge
outsl
xchg
or
es
ficompl
sub
xor
jmp
sub
icebp
mov
and
jno
mov
mov
test
inc
fwait
xor
lods
cs
add
dec
inc
pop
int3
mov
test
cli
lods
pop
and
daa
dec
lods
xor
or
lods
andl
mov
aam
cmp
mov
cmp
sbbb
sti
sub
cmpsl
jo
push
mov
mov
pop
aad
push
scas
fmul
or
loope
mov
pop
lahf
rolb
mov
jle
mov
inc
sbb
dec
jecxz
mov
scas
sbb
sub
lret
inc
sbb
mov
jne
xchg
sbb
in
and
adc
mov
sub
mov
fnstsw
test
cmc
push
cli
rclb
aas
sbb
add
or
js
mov
cmp
push
lret
mov
stos
jmp
js
or
sbb
pop
sbb
push
mov
and
xchg
pop
push
and
jg
and
fiaddl
cmp
in
mov
cmp
pusha
ret
out
aaa
mov
dec
and
loopne
fsubrs
divb
rcl
in
add
and
sti
mov
movsl
out
into
mov
sahf
pushf
xchg
addb
sbb
out
stc
fldenv
jbe
lret
dec
popa
out
xor
into
mov
push
sbb
sbb
mov
lea
dec
jno
into
lea
inc
lret
sarl
or
in
dec
out
fiaddl
arpl
mov
jp
xlat
in
bound
subb
push
and
loopne
pop
lds
sbb
pop
dec
scas
cltd
push
jo
sbb
pop
pop
loope
mov
cmp
out
or
or
mov
out
rolb
xchg
xchg
adc
into
adc
dec
imul
xchg
mov
pop
subl
sbb
mov
fidivrs
add
inc
test
mov
cmp
test
cmp
push
shl
movsl
push
or
jnp
dec
adc
lret
pusha
loope
mov
or
cmp
les
sbb
cwtl
out
ret
jg
dec
cltd
dec
adc
mov
mov
std
neg
lea
inc
loop
push
xor
rorb
cmp
imul
popa
lret
rorl
test
aaa
ljmp
test
mov
pop
sub
or
dec
sbb
dec
mov
idivl
loop
imul
cli
adc
xor
pop
xor
add
inc
es
jnp
dec
inc
aaa
sbb
adc
dec
call
lea
xor
insl
mov
sub
jno
jno
dec
hlt
and
pop
out
jae
adc
add
jo
mov
jecxz
push
mov
sub
pop
add
add
jnp
sbb
push
inc
mov
std
mov
or
mov
push
add
mov
pop
lea
lret
xor
mov
pop
cld
negl
cmc
inc
iret
popf
pop
dec
pop
pop
sub
or
aam
sbb
adc
inc
xor
push
loopne
addb
scas
ss
in
adc
test
sarb
and
pushf
in
mov
lods
es
xchg
push
cmc
pop
xor
cmp
and
fdivl
stos
jp
fmul
inc
jle
inc
pop
imul
rol
mov
stos
fwait
xchg
push
sub
adc
lcall
test
xor
xchg
cwtl
lea
in
les
test
shlb
nop
in
dec
push
popf
push
lods
pop
sbb
out
mov
fcomps
add
fdivrl
pop
cmp
ror
in
push
xor
mov
test
je
inc
jbe
mov
cmp
test
push
pop
mov
pop
ljmp
cmp
xchg
dec
adc
fistl
or
inc
push
push
cmpl
ror
popa
outsl
jbe
or
mov
xor
ret
pusha
inc
ret
sub
iret
adc
xor
jmp
cld
test
mov
movsb
push
cld
data16
testl
in
mov
xlat
and
cmpsl
or
stc
sub
repz
lret
cmpsl
cmpsb
call
jb
adc
xlat
or
inc
ffreep
xchg
or
fcompl
xor
ficomps
or
mov
sub
outsb
movsb
fwait
push
repnz
into
int3
lock
pop
js
push
mov
cmp
test
rcr
jb
icebp
add
sbb
adc
mov
stos
inc
gs
sub
fs
repnz
sub
std
scas
push
xchg
loop
vpandn
imul
cmpsb
inc
cmpxchg
and
dec
sub
and
cmpsb
xchg
testb
inc
pusha
imul
jmp
add
jecxz
fwait
sub
adc
jp
in
inc
cmp
jno
or
les
int
mov
sbb
adc
xchg
popa
add
jle
imul
jbe
push
adc
ret
mov
lret
stos
in
insb
in
mov
outsb
mov
cmp
pop
jg
push
jmp
dec
mov
inc
aaa
lret
das
lahf
inc
dec
jge
jecxz
mov
je
jo
cmpsb
outsb
mov
jae
sbb
add
pop
ds
je
adc
xor
inc
or
and
cmc
adc
fdivrl
lds
test
or
pop
scas
push
mov
mov
ror
rcll
mov
add
xchg
cli
jl
adcl
inc
repnz
add
rcrl
adc
fisubrs
xor
mov
jo
lcall
arpl
arpl
out
ja
cltd
xor
std
mov
and
aad
dec
arpl
add
jmp
es
ud2
xchg
lock
dec
mov
ja
inc
shlb
or
adc
jg
pop
and
repz
jge
or
inc
jg
push
jmp
mov
arpl
insl
mov
sbb
mov
mov
xchg
or
pop
pop
sub
sub
add
and
or
mov
push
arpl
adc
mov
lods
sub
int3
mov
adc
add
mov
cmpsb
xchg
aaa
sbb
std
movsl
int
xor
fadds
adc
push
scas
add
xor
jl
inc
mov
ja
std
dec
fs
cmpb
xchg
mov
lds
mov
sti
pop
dec
xchg
mov
cmpsl
mov
mov
xor
out
xor
iret
imul
add
arpl
sub
or
mov
mov
push
xchg
xchg
mov
movsl
pop
loop
gs
out
add
mov
shrl
push
ficompl
das
fsubl
jnp
adc
sbb
mov
or
mov
in
data16
mov
mov
out
insb
adc
push
sub
add
orb
push
rcrl
pop
in
and
sub
mov
dec
push
and
insb
rcr
add
icebp
xchg
sti
sub
mov
sbb
push
push
xchg
loop
in
stos
add
stos
addr16
out
add
data16
xchg
cwtl
mov
mov
aad
xor
cmpsl
add
imul
sbb
dec
fidivrs
lods
out
loopne
mov
dec
or
scas
jno
stos
and
mov
insl
scas
and
xor
mov
push
fbstp
jb
inc
ss
in
mov
jle
adc
add
fisttps
adc
fsubl
inc
bound
dec
add
jae
lock
pop
mov
pop
and
into
mov
mov
pop
fstps
popa
out
push
jae
sbb
lret
ds
test
mov
mov
dec
push
inc
fwait
mov
fsqrt
repnz
sbb
dec
loop
xchg
inc
aam
out
leave
call
jecxz
roll
cld
js
or
mov
fsubr
aas
es
arpl
sub
push
clc
lcall
or
lcall
mov
inc
pop
xchg
imul
sar
pop
push
inc
mov
mov
pop
inc
lods
push
frstor
cmp
out
pushf
cli
lock
shlb
jg
iret
loop
jmp
cli
mov
jle
push
xlat
out
lret
adc
push
add
adc
mov
ficompl
inc
iret
jne
jecxz
int
dec
cmp
cmp
je
xchg
arpl
xor
or
xlat
mov
mov
not
xlat
test
pop
mov
rep
dec
and
cld
or
stc
xchg
enter
push
subl
aaa
cltd
out
mov
testb
aam
push
jp
pushf
push
pop
lods
lods
mov
mov
push
and
idivl
loope
lods
sbb
sub
pop
aas
pop
or
ljmp
shlb
insb
xchg
and
add
xor
and
hlt
mov
dec
movsl
mul
sti
xor
inc
movsl
mov
fisubrl
mov
enter
popa
scas
inc
int
inc
movsl
mov
xchg
jecxz
jne
push
sbb
cwtl
add
xchg
add
pop
push
dec
or
loopne
nop
mov
and
add
out
es
adc
push
pop
out
push
cld
popa
push
inc
or
test
sbb
fsts
in
sbb
mov
das
movsb
jb
shlb
mov
add
xchg
test
push
push
mov
mov
and
jp
stc
inc
repz
loopne
mov
out
xor
arpl
adc
movsl
ret
in
imul
mov
inc
push
aad
int3
xor
outsl
cli
js
fists
pop
xor
or
jo
js
inc
cmpsl
cmp
mov
dec
inc
cmp
or
adc
mov
jno
test
push
pop
sti
mov
ds
pop
fimull
dec
cld
pop
and
inc
clc
sbb
inc
stos
lret
sub
fildl
hlt
loopne
or
jae
or
das
cmp
adc
loopne
fldt
movsb
outsl
aaa
ret
lds
sub
lret
xor
mov
xchg
and
loopne
daa
xor
fldcw
int3
or
js
sbb
mov
pop
loope
mov
dec
pop
jl
push
or
sbb
adc
xor
cmp
pop
pop
pop
out
aam
int3
lcall
mov
iret
gs
pop
inc
nop
scas
call
out
pusha
enter
loope
jbe
jl
jp
into
sub
movsb
jbe
inc
fcompl
imul
iret
and
out
rcrb
cmpl
cmp
movsb
sbb
mov
push
or
dec
stos
xor
mov
cs
sub
pop
pusha
outsb
xor
popf
dec
lret
pop
mov
sahf
pop
push
sbb
cld
mov
inc
mov
push
jge
loopne
xor
popa
dec
stos
push
mov
in
and
and
xchg
xor
lret
pop
and
mov
pop
int3
push
mov
cmp
add
shll
jle,pn
sbb
mov
stos
jecxz
fcmovnbe
or
push
inc
dec
xor
mov
jnp
mov
add
mov
add
hlt
add
insl
fidivl
stc
lea
cmp
faddp
and
adc
sub
adc
repnz
fiadds
and
cltd
push
and
fmull
popa
aaa
pop
cs
xchg
enter
mov
mov
sbb
icebp
xor
xor
add
ret
jle
cmpsl
repz
call
xor
scas
call
xchg
rcll
mov
jnp
push
inc
adc
jae
punpcklwd
test
mov
mov
fdivr
lret
add
ds
aaa
cmp
adc
pop
imul
daa
scas
mov
mov
sti
ficompl
ret
out
inc
cmp
pop
divb
sbb
pop
xchg
jle
xchg
and
jbe
mov
xchg
lods
dec
xchg
mov
ss
inc
int3
mov
imul
pop
idivb
imul
cmpsl
in
inc
push
cmc
js
scas
push
jmp
int
sahf
xor
daa
cmpsb
js
aad
xchg
push
mov
jge
stos
cmp
pop
cmpsl
out
nop
call
les
xchg
clc
mov
adc
repz
adc
jecxz
jmp
rcrl
lret
mov
pcmpeqd
inc
mov
xchg
push
movsl
clc
notl
sub
sbb
mov
mov
xchg
mov
jmp
mov
fs
xor
addr16
in
leave
dec
xor
push
sbb
dec
jno
and
push
adc
repnz
adc
mov
pushf
cmpsb
gs
or
mov
inc
cs
mov
iret
sub
cmp
std
xor
test
sbb
xchg
fstpt
mov
lods
jmp
sbb
ficompl
std
stc
cmp
das
rcrl
enter
jnp
xchg
inc
shll
jmp
dec
xchg
sbb
xchg
call
or
mov
outsl
pop
and
in
dec
mov
cltd
adc
mov
pop
sarl
jge
mov
sbb
and
into
add
jge
cmp
or
bound
cld
dec
pushf
ds
fnstsw
rorb
or
loop
cmp
imul
sbb
push
xor
sbb
xchg
in
mov
mov
leave
add
dec
and
loopne
xor
cwtl
inc
movsl
shlb
pop
dec
das
xchg
mov
scas
cmp
add
int3
es
lcall
or
sub
fadd
sub
jnp
xor
cmp
adc
sahf
aam
jmp
push
int
pop
fsubp
jle
cmp
addr16
inc
test
add
idiv
bound
mov
movsl
sub
xorl
mov
mov
leave
push
xor
mov
sbb
adc
int3
lret
pop
push
mov
add
orl
orb
cmpl
pusha
jb
in
pop
xchg
mov
sbb
fildll
leave
or
call
jbe
in
stos
jmp
test
jmp
mov
shr
into
data16
adc
mov
lods
sbb
es
push
pushf
imul
jp
fcoml
jl
dec
gs
fstpl
dec
cmpsl
sbb
inc
nop
pop
add
scas
sub
std
cmp
stc
xor
loopne
or
jle
xor
mov
je
push
sti
movsb
nop
xchg
cmp
sar
sbb
ret
jbe
scas
test
xchg
sub
inc
mov
xor
xchg
js
pop
inc
mov
pop
and
mov
mov
mov
notb
adc
sbb
outsl
dec
clc
mov
mov
adc
shlb
fs
shlb
test
xchg
dec
or
sub
daa
pop
dec
jns
jbe
adc
xor
push
inc
adc
cltd
add
xor
test
outsl
shlb
cmp
inc
sti
and
xor
leave
sbb
stos
pop
cwtl
cmp
clc
jmp
ret
and
cmpsb
sbb
int3
lahf
xlat
sahf
dec
jb
adc
sti
xchg
pop
ja
mov
fldl
and
xchg
test
inc
push
leave
push
dec
xchg
call
cld
je
or
fwait
mov
aad
out
js
pop
repz
int3
es
das
stos
rcr
mov
sub
test
xchg
or
sbb
mov
and
test
scas
sbbb
mov
push
stc
xchg
inc
push
add
mov
into
adc
mov
pushw
imul
inc
rcrb
or
iret
sub
int3
mov
or
pop
fsubp
fisttpl
dec
hlt
jnp
jb
xor
pop
jns
movsb
bound
gs
and
in
jl
repnz
sti
mov
les
andl
and
inc
fsubr
out
gs
aad
popa
fisttps
sub
out
cmpsl
mov
adc
push
in
cmp
adc
mov
lods
mov
mov
cmp
push
insl
push
or
test
out
lea
pop
push
repz
push
add
xchg
jmp
push
stos
in
imul
xor
jg
movsl
and
adc
iret
dec
sti
addr16
rcrb
jecxz
insl
mov
sbb
sbb
add
stos
sub
push
mov
outsb
negl
add
scas
call
dec
inc
in
fnstsw
sahf
scas
cmp
ljmp
cli
in
jno
push
icebp
repz
icebp
into
int
xor
xchg
wrmsr
loopne
rclb
shlb
pop
mov
jo
test
cmp
pop
mov
lahf
ret
add
or
cld
cmp
adc
xchg
popf
cli
ss
push
and
lock
push
pop
sti
xchg
sub
inc
jns
inc
mov
shrl
pop
xchg
and
fcomi
dec
ficoml
stos
movsb
or
test
test
fcompl
push
pop
ljmp
outsb
pusha
cmp
leave
mov
ljmp
sbb
out
stos
cmc
add
xchg
ja
das
movb
bound
out
iret
add
push
and
andb
pop
shrb
mov
and
cwtl
jmp
movsl
psubusw
sbb
stos
loopne
xorb
pusha
shlb
mov
mov
push
jp
sbb
lahf
xor
ret
loope
sbb
in
mov
mov
sbbl
imul
xlat
and
dec
movhps
mov
xor
jmp
pop
fucomp
aam
out
insb
je
and
mov
pop
gs
lea
test
mov
add
mov
xlat
xchg
fdivl
pop
and
jno
pushf
and
test
push
test
adc
and
clc
or
es
sbb
iret
sub
out
test
add
cmp
cmp
rcrb
xor
mov
lods
popa
mov
sub
cmc
xchg
repnz
pusha
inc
and
lcall
test
sub
ja
rorb
test
cmpsb
fmul
mov
dec
jnp
dec
lcall
lret
xchg
inc
lods
pop
and
scas
or
lahf
test
leave
push
push
pop
enter
fiaddl
cmp
adc
or
xchg
jl
mov
add
test
mov
push
in
or
mov
pop
hlt
leavew
adc
mov
xchg
jmp
insb
rorl
fstpl
ret
mov
es
je
rclb
xor
mov
mov
rol
pop
pop
xor
js
add
xor
push
inc
adc
fsub
sub
loopne
mov
je
jne
por
scas
adc
std
addr16
xchg
add
xchg
xor
ljmp
mov
insb
test
adc
test
ljmp
sub
sbb
mov
es
movsl
mov
loope
pusha
mov
jg
stos
adc
fs
ret
rcl
add
or
cli
mov
cmp
inc
in
adc
push
dec
imul
mov
push
add
stos
sub
ret
fstpt
mov
rcrb
push
cmpsb
adc
cmp
sub
jnp
xchg
call
popa
insb
xlat
cmp
pop
rcr
sbb
sbb
mov
sbb
inc
xchg
divb
jl
js
sti
inc
movhps
imull
mov
pop
popa
out
xor
aaa
cmp
dec
push
pusha
mov
call
scas
adc
std
xor
cmc
pop
dec
xchg
aad
adc
insl
mov
outsl
mov
movsl
mov
and
out
cmpsl
gs
push
fdivrl
insb
cmp
pop
and
shll
mov
popf
std
pop
cltd
jecxz
jb
mov
test
ss
jo
pop
mov
jg
inc
rolb
xor
jnp
mov
pushf
sub
faddp
mov
loop
mov
imul
lock
in
out
inc
jecxz
test
out
xor
loop
in
mov
push
push
sbb
cmp
cmpsb
fs
sahf
test
mov
enter
aas
pop
repnz
mov
and
add
stos
sbb
rcrb
repz
int3
psubb
sbb
nop
xor
scas
std
enter
mov
xor
mov
movl
mov
test
xchg
inc
jecxz
xchg
jns
dec
fidivl
sub
xchg
and
stos
out
addr16
sahf
int
in
fisubl
jnp
ss
movsl
adc
testb
push
cmp
ss
push
cmp
clc
loope
mov
cmc
push
or
mov
imul
mov
add
inc
fdivp
lods
push
jecxz
inc
xchg
aas
sahf
js
jg
jg
xchg
fsubp
mov
pop
int3
stos
outsl
inc
xor
dec
fsubrl
js
loopne
cmpb
cmpsl
add
or
jp
in
inc
shll
dec
mov
adc
iret
mov
lds
push
sbb
movsl
or
lods
xor
or
jecxz
xchg
xchg
and
ficomps
xchg
push
fwait
adc
arpl
out
mov
aaa
push
popf
repz
mov
mov
sub
shll
mov
xchg
arpl
or
fcompl
pop
or
negb
sbb
cmp
leave
inc
xchg
lahf
pop
pop
aas
cltd
std
sbb
jg
int
sub
repnz
aad
sbb
pop
jmp
and
mulb
or
xchg
mov
outsl
inc
sbb
jge
scas
jns
lods
subb
adc
and
add
insb
insl
xchg
mov
cmp
lret
add
and
stos
out
jp
pop
popf
daa
cmc
popf
adc
sub
fdivs
movsb
xchg
xchg
inc
rcr
lds
cmc
imul
lahf
lcall
test
scas
mov
dec
leave
mov
xchg
stc
nop
insl
xchg
adc
pop
clc
pop
in
icebp
and
pop
mov
ss
packsswb
insl
sbb
repz
mov
mov
ja
test
xlat
and
pop
cmp
mov
inc
add
dec
out
fsub
push
jp
jge
test
outsl
jae
data16
push
scas
ja
and
mov
or
mov
repz
in
fistpl
push
ret
pop
cmpsb
out
dec
insb
cmp
jns
jl
imul
cs
sbb
negl
fs
jno
stc
push
cmc
fwait
add
sbb
es
call
adc
cld
sub
mov
shrb
adc
add
mov
sub
sbb
fstpl
xor
and
cmc
jb
push
mov
cmp
imul
jge
enter
inc
push
jbe
dec
cmp
jecxz
rcl
fcomip
xchg
fstpt
jl
shl
mov
xor
incl
in
ss
lahf
push
adc
jnp
out
mov
aam
adc
gs
int3
cltd
adc
xrelease
push
or
jmp
cli
xchg
mov
mov
mov
pop
pushf
out
xchg
out
adc
xchg
inc
lret
sub
cmc
inc
mov
push
or
jp
mov
pop
dec
dec
sub
or
xor
dec
es
cmpsb
cmpl
pusha
cmpsl
xlat
push
add
das
ja
sarl
push
fmulp
nop
push
lds
pop
aaa
push
loop
ret
dec
cmpsb
popa
add
and
jns
mov
cmp
jnp
leave
add
pop
int3
xchg
mov
jge
test
mov
mov
fs
lods
or
ss
jb
mov
scas
icebp
f2xm1
std
ficomps
adc
add
and
ret
push
adc
repz
sahf
rclb
xchg
ds
mov
sub
leave
mov
fdivrs
ffreep
aas
loop
lret
mov
jle
adc
xchg
push
push
jecxz
xchg
and
aad
mov
jecxz
push
push
imul
lock
xor
and
jo
mov
xchg
or
jne
loopne
push
sbb
add
jns
mov
insb
inc
or
push
imul
imul
negb
dec
out
mov
aad
adc
push
sub
jo
add
xchg
jbe
sub
add
push
xchg
mov
and
imul
repnz
cmp
cmp
jns
cs
pop
lret
jb
nop
sbb
mov
jle
xor
or
aam
push
mov
cltd
loop
popf
lret
insb
xor
sub
fs
dec
jns
pop
cwtl
inc
into
outsb
popa
and
lcall
fisttpl
jns
mov
xchg
jne
dec
sbb
fstpl
das
lods
dec
adc
cmpsl
jmp
pop
inc
fldenv
fidivrl
leave
mov
testl
imul
push
push
stc
xchg
loop
fimull
in
outsb
inc
jns
ss
dec
jge
push
adc
movsb
loopne
ss
lods
aas
dec
push
fildl
imul
fidivs
add
xor
fldcw
jecxz
rcr
xchg
sub
mov
ficompl
dec
pop
mov
aad
xor
jl
loope
sbb
mov
cli
popf
or
sbb
aad
retw
outsb
jl
pop
outsl
or
pop
lret
pop
inc
cmp
popf
sub
and
cmp
scas
into
sbb
mov
jo
dec
enter
and
inc
addr16
popf
adcl
and
jae
mov
fbstp
adc
outsl
cmp
incb
push
notl
into
jge
inc
loope
lock
jl
stos
xor
push
pop
test
sub
je
testl
mov
clc
mov
inc
adc
call
adc
pop
and
dec
mov
out
sbb
fldl
cwtl
iret
mov
pop
pop
xchg
mov
xlat
jp
lods
jo
lahf
push
scas
movb
or
shll
mov
push
mov
dec
ret
jg
mov
adc
xchg
xor
push
aas
scas
and
add
ret
pop
xlat
jp
enter
push
xor
jne
jp
fs
lret
lock
inc
mov
lods
aam
mov
jmp
and
mov
mov
dec
mov
and
cltd
lahf
cmp
stos
mov
sbb
mov
xchg
cmpsb
pop
fadd
inc
sbb
inc
xchg
cmc
out
mov
push
mov
hlt
iret
jmp
lock
xchg
mov
mov
or
sahf
nop
push
or
test
add
ja
popa
addr16
mov
cmpb
mov
jae
es
cs
xchg
push
fsubr
ss
sbb
lds
sub
adc
popa
lcall
andb
inc
inc
jno
cmp
xchg
inc
mov
test
add
or
vcmppd
test
add
xchg
jmp
in
xor
jmp
adc
push
jge
or
mov
cmp
mov
loope
push
dec
adc
loopne
cmpsl
sub
jp
pop
in
loope
ret
mov
pop
daa
repz
mov
dec
add
loop
mov
in
subl
xor
dec
fstpl
mov
jno
dec
xchg
fnstenv
adcl
into
ret
xor
mov
xor
pop
jmp
arpl
leave
gs
bound
loopne
jo
jns
mov
or
inc
pop
and
out
lahf
pop
in
add
sahf
adc
sbb
jmp
fucomp
jle
std
sub
faddl
int
adc
pop
loope
sti
push
fwait
push
mov
mov
sahf
dec
add
or
mov
arpl
fcompl
jo
mov
mov
xor
call
xor
es
ret
and
les
outsb
jg
clc
and
adcl
lea
scas
mov
mov
dec
std
push
in
stos
add
push
std
popa
pop
dec
and
imul
cltd
dec
and
loopw
bound
test
addr16
stc
jnp
jae
int
mov
arpl
dec
test
cwtl
pop
clc
pop
popa
inc
or
or
xchg
push
mov
icebp
sbb
mov
mov
adc
adc
int3
cmpsb
xor
push
pop
adc
lahf
sbb
xchg
popa
icebp
nop
inc
inc
mov
inc
lods
call
fstl
les
mov
movl
push
push
jg
mov
pop
repz
je
pop
pop
push
and
test
lahf
pushf
bnd
cli
sbb
xchg
stos
out
filds
dec
mov
adc
jge
ror
out
out
rorl
jne
sub
mov
push
dec
cmp
cmpsl
inc
shlb
mov
mov
adc
inc
ss
sbb
dec
cmp
inc
clc
and
mov
adc
pop
mov
dec
subl
data16
fcoms
data16
loope
fcompl
xchg
mov
xor
jne
cmc
sti
push
loopne
loop
mov
lods
shlb
insb
lods
repz
iret
inc
pop
jmp
nop
and
in
jmp
or
cli
fstl
dec
dec
inc
orl
in
xlat
push
in
mov
lock
or
aaa
mov
movsl
mov
push
pusha
jg
popf
ds
pop
sahf
sarb
cmp
adc
aad
or
rorb
push
cmp
push
cmp
aam
add
xchg
sub
inc
jl
sub
dec
mov
imul
mov
cmpsl
adc
aam
call
pop
sub
bound
les
jae
stos
hlt
xchg
int
imul
pusha
jnp
pop
mov
pop
sbb
mov
cltd
leave
and
out
dec
mov
mov
mov
mov
adc
add
pop
ret
fcom
iret
out
insb
or
xacquire
scas
fists
adc
shlb
lods
xchg
ret
fistps
sub
xchg
out
popf
test
adcl
sarl
mov
xchg
cmp
pushf
es
xor
dec
arpl
xor
pop
cmp
mov
cld
cli
and
mov
lds
roll
xchg
ret
xorl
push
mov
cmp
fists
push
jmp
jo
les
mov
cmp
xchg
mov
cmp
jg
and
arpl
dec
pop
pop
inc
adc
sbb
test
xchg
inc
xor
repnz
mov
cmp
testb
and
out
lds
jle
std
jmp
and
and
dec
xor
push
ljmp
sarb
adc
sbb
xchg
jnp
je
pop
mov
mov
adc
pop
sti
sbb
icebp
pushf
imul
inc
fcmove
push
pop
popa
in
sub
outsb
popa
mov
jecxz
xchg
sbb
enter
or
sub
enter
or
aad
repnz
jecxz
jge
mov
mov
daa
sbb
movsl
ret
sub
imull
fcompl
inc
mov
xlat
dec
or
or
jge
cli
movsl
mov
jnp
sub
dec
mov
scas
sub
jo
sub
xchg
jae
and
add
add
mov
xchg
mov
mov
movzwl
sub
dec
mov
push
mov
adc
mov
in
xchg
dec
rcr
or
mov
add
add
repz
roll
pop
pop
out
mov
popa
adc
cltd
xor
cltd
leave
ss
mov
add
push
push
jne
gs
cmp
sbb
shll
jno
and
into
mov
cltd
jmp
push
inc
divb
mov
popf
aam
cld
fildl
das
push
sarl
xor
not
mov
gs
mov
in
and
fld
outsb
aaa
popa
sub
sub
fstpt
jnp
or
ljmp
and
loopne
dec
lea
outsl
jecxz
push
loop
jne
add
sbb
sub
bound
cmp
outsl
jbe
cmpl
lret
push
pop
ss
lods
sbb
ss
loope
dec
ficomps
dec
lcall
fadds
scas
lods
enter
rcll
dec
cs
jle
popa
fcmovne
sub
out
imul
adc
cmp
gs
and
lods
mov
push
push
push
or
lods
mov
pop
lret
test
jne
inc
fisubrs
lods
dec
aam
lods
sar
clc
fdivl
xchg
sub
in
push
outsb
pop
mov
pop
push
sub
mov
jae
andl
and
adc
addr16
mov
sahf
pop
xor
jne
ficoml
fldl
cmc
enter
sbb
fisubs
cli
xlat
jmp
push
in
adc
and
in
sbb
hlt
imul
fadds
inc
sar
or
jp
lods
in
jne
in
and
xor
mov
outsl
jne
and
mov
jb
dec
nop
xchg
cwtl
xchg
lret
int3
aas
xor
or
mov
sti
leave
dec
sub
jl
or
xchg
add
leave
movsl
inc
or
mov
push
push
sub
sbb
aam
add
mov
test
fnstenv
push
cmp
movsb
imul
aaa
shrd
xchg
dec
inc
lahf
popa
push
jmp
cwtl
sub
in
lods
adcb
cmp
cmp
lock
mov
stos
inc
push
dec
xlat
inc
icebp
pop
lock
cmp
and
lea
pop
les
jns
dec
xlat
xchg
xor
xchg
cmc
jno
fstpt
add
fcmove
push
sub
inc
popl
push
cmp
fwait
clc
out
sti
and
and
cmp
int3
push
pop
fisttpl
mov
adc
mov
cltd
mov
js
out
sbb
bnd
mov
push
imul
adc
out
je
mov
push
mov
divb
mov
mov
insb
into
dec
aas
arpl
sub
mov
mov
dec
int3
mov
mov
imul
sbb
dec
out
sbb
es
pushf
dec
rclb
sub
imul
lcall
xchg
mov
sbb
jno
in
sub
jecxz
dec
enter
sti
aaa
in
faddl
mov
jno
push
inc
loope
sbb
pop
cltd
ds
adc
scas
in
les
lds
or
sub
mov
push
ret
je
lds
call
mov
push
gs
xchg
ss
push
and
jae
adc
mov
ljmp
add
dec
cmpsb
aas
cmpsb
dec
push
add
pop
or
adc
movsb
popf
loope
lcall
pop
lods
mov
int
adcb
cmp
push
ss
cmp
xchg
mov
scas
adc
test
or
push
dec
dec
dec
mov
adc
orb
outsl
orb
sbb
ja
popa
mov
aaa
jnp
cmp
pop
pop
fdivrl
mov
jb
movsb
call
mov
mov
mov
mov
lea
out
adc
lahf
cmp
stc
push
in
les
test
jns
adc
xor
cli
dec
inc
jl
insl
adc
pop
mov
adc
adc
add
push
push
cld
pop
mov
adc
lock
repz
inc
call
jnp
inc
sti
lea
test
idiv
aam
mov
sbb
pop
bnd
stos
or
call
mov
fs
push
mov
add
adc
mov
dec
mov
mul
cmc
add
mov
inc
pop
in
cmp
or
sbb
sub
test
jne
loop
mov
sub
insl
inc
or
add
cmp
xor
and
pop
mov
insl
rolb
in
mov
fdivr
cltd
aaa
or
xor
test
lea
push
inc
cmp
inc
adc
cltd
sub
rorb
pop
gs
cmp
push
mov
pop
add
loope
insl
dec
fimuls
es
mov
jmp
dec
andb
sub
mov
fcoms
inc
inc
sbb
stos
mov
cwtl
inc
stos
mov
daa
inc
lahf
jge
gs
xor
aaa
xchg
jo
add
lods
xchg
gs
out
jecxz
stos
cmp
jecxz
scas
pop
aas
cmp
pop
punpckhdq
imul
pop
ja
dec
mov
adc
mov
fadds
mov
ret
pusha
scas
jae
mov
add
push
test
pop
scas
or
dec
cmp
divl
ljmp
and
jmp
xor
jp
mov
ficoms
jne
out
pusha
dec
jne
fstl
das
fidivs
push
cmc
xor
mov
in
mov
push
xorb
ret
pusha
shrb
or
cmp
dec
sub
push
lahf
sarb
test
ret
mov
add
pop
jmp
out
xor
xchg
push
cwtl
inc
mov
or
int
jo
je
rcl
sub
stos
popa
iret
or
imul
pushf
push
jg
les
fistl
fsubl
or
aas
faddl
add
or
or
imul
add
xor
mov
ljmp
inc
push
jp
lock
cmp
jb
in
fsubs
adc
dec
mov
iret
mov
mov
stos
mov
xchg
clc
sbb
adc
push
xchg
in
mov
pop
in
cltd
jb
jae
sbbl
sub
int
xor
xor
push
jmp
mov
xlat
outsl
jmp
mov
test
and
out
out
int3
mov
or
out
pop
movsl
pop
repnz
cs
dec
sub
into
cli
ret
add
mov
mov
jns
aad
dec
or
cmp
adc
loopne
cmp
xor
jno
testl
int
or
jge
mov
pop
mov
sahf
ljmp
cmpsl
dec
xor
xor
pop
push
es
repz
pop
adc
or
int
and
outsb
ds
fstps
add
scas
mov
xor
jge
push
dec
push
push
std
mov
je
cmc
sub
mov
stc
fadds
xor
sbb
and
unpcklps
int
or
les
fwait
test
call
jne
or
adc
sbb
gs
push
push
lods
xchg
cltd
int3
sbb
jecxz
and
aaa
scas
gs
dec
out
les
ds
mov
loope
xchg
notl
test
fistpll
mov
pop
mov
int3
lret
arpl
mov
pusha
arpl
roll
ljmp
inc
xor
push
xlat
jecxz
sub
and
xlat
call
ja
cs
aam
aaa
scas
push
nop
out
adc
and
jge
xchg
push
repz
jne
das
lret
jnp
pop
bound
mov
rclb
insb
pop
jo
jl
inc
jno
lahf
cli
push
sbb
mov
jne
jge
lcall
cld
ficoml
jno
xchg
cmp
icebp
pop
cltd
fistpl
fcom
fwait
ja
pop
xor
leave
sahf
lret
fsts
mov
int3
movb
lret
mov
xchg
and
mov
push
and
and
adc
xor
xchg
out
pop
xchg
dec
jb
popa
pop
ja
loop
jnp
int
in
cmp
jns
scas
shll
mov
fmuls
jecxz
insb
push
outsb
je
mov
xor
cwtd
inc
jb
testl
scas
std
les
inc
xchg
dec
pop
lds
push
push
mov
adc
jo
dec
mov
dec
and
or
cwtl
shrl
gs
aaa
xchg
movsl
jecxz
addr16
mov
add
jno
and
lods
sub
lret
mov
pop
pushf
jp
andl
push
je
xchg
and
dec
mov
arpl
adc
icebp
scas
sbb
addr16
xchg
sbb
pop
enter
push
jo
cmpb
mov
mov
cmc
mov
sub
daa
sub
sahf
push
pop
adc
pop
insb
rcr
fstps
pop
push
in
inc
add
test
jp,pt
mov
sarl
pop
add
fwait
push
divb
int3
mov
repz
xor
adc
add
dec
inc
or
jmp
inc
push
cmp
jecxz
rolb
sbb
cmp
and
leave
ficompl
lret
mov
je
ja
mov
sbb
loope
and
loop
lock
dec
jbe
stc
test
aam
out
and
mov
mov
ficompl
jle
pusha
in
jno
pop
movsb
stc
call
mov
loop
in
or
dec
xor
scas
cmp
jp
sub
rcll
jl
cmpsb
mov
out
mov
fsubl
sub
and
cmp
out
add
and
addr16
outsl
dec
test
mov
jb
sahf
push
cmp
in
sub
sbb
and
repnz
mov
xor
xor
dec
fcoml
inc
fwait
out
mov
pop
ljmp
cmpsl
or
jmp
adc
add
or
mov
cmp
lcall
sti
stos
pop
into
sbb
pop
adc
jne
popa
fiadds
cmp
repz
dec
xor
cmc
fadds
adc
push
pop
add
add
dec
mov
fisubrs
jp
pop
shlb
add
into
fbstp
movsb
dec
repnz
dec
xor
inc
sarl
aam
lret
and
add
mov
mov
or
sbb
mov
and
stc
pop
xchg
fwait
inc
in
lds
push
ficomps
sahf
inc
shll
and
notl
std
lods
jle
dec
inc
jb
sti
aaa
mov
dec
cs
xor
adc
adc
imul
out
jmp
int
in
cltd
push
mov
push
xor
cltd
fsubl
sub
mov
ret
mov
xchg
mov
xchg
jae
insb
add
mov
jne
out
arpl
lahf
outsb
xorl
sar
xor
lcall
jne
mov
or
jno
xor
sbb
xor
cli
adc
or
sbb
imul
pop
mov
into
daa
sahf
xor
dec
xchg
push
pop
or
addr16
add
jmp
inc
out
xor
jo
cmp
aam
loop
dec
and
pop
roll
daa
xchg
testb
jno
stc
ret
rcr
fwait
push
sub
cmp
popf
xor
mov
mov
and
out
jmp
mov
es
inc
push
dec
push
enter
iret
push
test
pop
shrb
sub
stc
ret
into
aas
in
ret
cltd
mov
in
dec
mov
mov
or
sarb
arpl
es
push
xor
int
push
mov
fwait
push
jno
mov
jo
push
iret
or
arpl
dec
sub
dec
movsb
pop
jbe
sbb
out
and
andl
fmull
push
mov
dec
sub
cmpsl
xor
adc
and
fiaddl
ret
pop
leave
adc
loop
fnstenv
jnp
mov
push
jmp
out
out
inc
aas
mov
aas
xor
out
lret
std
mov
or
pop
out
test
mov
and
adc
xor
incb
leave
inc
inc
sub
ljmp
mov
in
xchg
mov
std
add
cli
sub
inc
fwait
vmovdqa
insb
jb
xchg
int3
push
cmp
sub
fidivrl
insl
cmp
add
adc
div
dec
jne
in
out
jbe
xor
and
daa
fcomip
fsubl
int3
xchg
dec
pop
xor
insl
xor
pop
push
adc
or
std
dec
aad
in
in
ja
xchg
cmp
push
or
adc
add
jecxz
and
ficoms
imul
js
cmp
push
in
andl
dec
ret
notb
mov
out
dec
push
adc
mov
clc
int3
loopne,pt
in
lock
cmpsl
or
or
out
fldl2e
dec
lahf
sbb
cli
mov
inc
dec
rorl
out
js
jns
ja
sbb
mov
shl
push
mov
rcrb
mov
add
aam
pop
popa
in
sbb
cmp
into
mov
loope
mov
testl
aad
imul
je
je
xor
sbb
imul
aaa
cld
sub
or
push
xchg
repz
push
fs
mov
push
push
clc
pop
cli
jne
cmp
mov
test
push
std
dec
push
test
into
repnz
cmp
pop
or
jns
insl
push
mov
or
in
mov
test
push
in
xlat
push
lahf
push
or
pop
gs
das
add
mov
outsb
fnstcw
mov
xchg
or
aam
je
sarb
mov
test
es
lea
mov
out
scas
mov
gs
jne
sub
mov
data16
dec
and
sbb
in
sti
stos
and
testb
enter
mov
mov
inc
add
enter
arpl
mov
adc
ja
cmp
das
rolb
push
js
cmp
popf
pop
sbb
mov
sbb
inc
xlat
pop
xchg
push
and
jl
mov
lds
push
inc
add
lods
dec
dec
repnz
mov
sti
mov
and
lock
pop
dec
mov
jmp
mov
push
fidivs
mov
jbe
mov
test
enter
imul
inc
shl
icebp
fmuls
xor
mov
or
jo
jle
insb
pop
cmp
cmp
lcall
cmp
xchg
cld
outsl
adc
mov
adc
jecxz
loope
dec
stos
jp
aaa
pop
xor
ret
push
sub
pusha
pavgw
mov
sub
mov
loopne
lret
add
cmp
jae
jmp
push
mov
dec
fsub
imul
lods
popw
roll
add
imul
enter
inc
imul
cmpl
push
push
cmp
nop
iret
cli
cmc
sub
fwait
mov
mov
inc
sahf
xchg
dec
test
xor
jle
in
or
jge
mov
in
popf
sbb
xchg
stos
jge
or
sarb
ss
push
inc
lcall
cmp
jg
cmpsl
repz
inc
and
mov
add
pop
xor
dec
dec
adc
sbb
sbb
or
jmp
mov
in
call
pusha
pop
mov
jmp
push
shlb
lret
dec
jb
push
and
xchg
shrb
pop
pop
in
xchg
push
mov
pop
sahf
cltd
popf
fnstenv
mov
jnp
icebp
pop
add
ret
es
xchg
xchg
adc
lock
outsl
push
adc
xchg
adc
mov
scas
jecxz
sub
repz
cs
in
sbb
xchg
lret
movsl
jno
add
test
mov
cmp
xchg
mov
aad
adc
dec
jb
fwait
jns
loop
rorl
xlat
scas
dec
jae
cmp
aad
sub
das
iret
mov
push
cmp
test
call
mov
int
repz
xchg
cmc
mov
push
push
mov
cltd
lods
dec
dec
xorl
call
popf
xor
test
out
or
in
insl
jge
clc
inc
mov
or
pop
pop
movsb
xchg
hlt
fstpl
mov
xchg
test
repz
jmp
test
out
add
jne
pushf
sub
movsl
and
jb
push
cld
addr16
add
or
lock
insb
rorl
ss
icebp
popf
aas
inc
and
out
pop
push
dec
xor
nop
test
mov
cli
sti
cld
mov
hlt
push
test
repnz
push
mov
std
ret
push
sub
in
rcll
push
and
rol
inc
push
addr16
mov
and
jle
in
sbb
ljmp
cmp
mov
dec
xchg
jle
mov
nop
mov
orb
xchg
jne
push
inc
testl
pop
cltd
int3
add
test
out
and
jmp
push
imul
xchg
clc
mov
inc
sub
or
adc
cld
jp
imul
cs
xor
cmp
popa
pop
ja
dec
xor
push
int
pop
cmp
pop
jle
call
je
sub
mov
xchg
cs
aaa
inc
fmul
iret
adc
or
dec
dec
sbb
or
pop
or
jge
std
push
xchg
test
cmp
add
xor
jns
mov
add
push
jns
fildll
dec
lods
popf
movsb
lahf
cmp
adc
xor
jbe
xor
in
xor
cmp
rclb
divl
pop
push
shrl
dec
dec
xor
mov
dec
pop
test
test
ret
xchg
ds
mov
stos
mov
mov
push
push
fwait
mov
adc
pop
addr16
in
add
outsl
in
adc
or
jmp
lods
pop
inc
sub
loopne
mov
ret
cld
mov
pop
je
ror
cwtl
imul
dec
out
dec
arpl
repnz
and
xchg
insl
mov
orl
popf
push
mov
or
jnp
in
test
xor
jmp
mov
ret
ss
bound
adc
mov
inc
repnz
and
sbb
push
sub
inc
mov
outsb
popa
or
mov
add
add
add
xorb
dec
xorl
jge
movl
jo
hlt
cmpsb
jae
les
pop
daa
jne
mov
in
fwait
push
sahf
jns
push
mov
cmc
roll
pop
sbb
mov
push
mov
into
ret
xchg
pop
cmp
xor
dec
mov
pop
mov
jno
mov
sbb
xchg
push
pop
into
jnp
data16
repnz
not
jb
sub
in
je
push
aaa
pop
pop
cltd
mov
mov
dec
loope
mov
dec
mov
and
sbb
ret
stc
jl
mov
sbb
test
pushf
dec
mov
icebp
lret
lret
lods
shrb
mov
jo
gs
jmp
cmp
cmpsl
orb
outsl
jnp
mov
inc
push
call
xchg
and
adc
test
push
jo
jno
sbb
mov
pop
cmp
sbb
jge
clc
pop
lods
cld
add
push
scas
outsl
adc
dec
out
adc
aaa
mov
dec
inc
cmp
rcrl
popf
mov
pushf
or
inc
mov
addb
dec
in
mov
std
mov
sarb
dec
cmp
imul
rcrb
pop
shlb
push
jne
addr16
cltd
pop
push
fdivs
dec
inc
out
in
xor
sahf
rorb
adc
test
ja
cmp
push
jo
fildll
pop
repnz
adc
inc
push
imul
adc
in
stc
mov
jne
inc
out
mov
mov
or
cmpsl
cwtl
sbb
lahf
test
lds
aam
pop
hlt
shll
dec
fstpt
push
or
sub
pop
test
xor
sbb
push
mov
dec
dec
adc
fstpl
sbb
or
out
inc
xor
rcrb
pop
cltd
cmp
jns
mov
in
orb
out
je
or
ret
mov
inc
movl
shlb
add
mov
repz
mov
idiv
jle
fildll
cli
fists
dec
int
cmc
mov
jno
adc
hlt
jge
sub
inc
lret
pop
in
inc
sub
mov
sub
pop
pop
insl
aam
sbb
pop
pushf
cmp
xor
sbb
dec
lret
fsts
jno
jns
les
xlat
sbb
fidivrl
roll
cmc
lcall
sbb
cmpb
ret
fstpt
js
fwait
sbb
dec
dec
aas
pop
outsb
jne
and
and
inc
push
inc
push
push
mov
jge
mov
pop
pop
cltd
or
test
adc
dec
mov
orl
inc
hlt
mov
cmp
inc
cwtl
inc
sbb
pop
ret
insl
cwtl
lock
adcb
ja
lds
stc
or
adc
inc
loop
pushf
xor
sbb
clc
jle
cld
ss
sub
inc
jp
inc
scas
inc
or
mov
cmpsl
xchg
test
lahf
xchg
idivb
adc
jnp
xchg
dec
cmp
subl
rcll
push
mov
pop
push
jno
ret
jp
and
gs
inc
je
push
stos
lds
push
and
clc
das
cmp
xchg
mov
jae
out
sahf
xchg
inc
mov
in
dec
out
jmp
push
push
cmp
xchg
cli
inc
fistl
pop
cmp
fistps
pop
ljmp
and
testb
lahf
imul
jmp
movsb
mov
fsubl
mov
sbb
dec
adc
mov
movsl
enter
daa
aad
ljmp
xchg
xor
inc
shrl
dec
mov
dec
mov
stos
bound
test
xlat
mull
enter
dec
jbe
add
aas
loopne
fldl
ficoml
repnz
dec
cs
mov
jno
aas
test
mov
push
ss
sbb
or
lock
and
xchg
faddl
lret
add
xchg
dec
push
mov
push
fldenv
jl
movsb
xchg
ljmp
stc
dec
sub
movsb
add
addr16
mov
dec
fsubl
add
mov
xchg
ja
orb
rcrl
hlt
arpl
test
sti
imul
mov
cmpsb
pushf
out
pop
jae
cmp
lcall
fidivrs
ret
icebp
stos
lcall
and
adc
dec
pop
xchg
push
jl
push
out
aas
into
sbb
xor
ret
push
sbb
jp
js
leave
lahf
xchg
ljmp
inc
inc
lea
dec
mov
push
stc
push
cmpb
push
ds
mov
xchg
jns
or
enter
repnz
xchg
jmp
mov
mov
cmp
push
bound
sub
cs
lea
adc
xor
cmp
es
ja
fsubl
pop
loop
pop
enter
orl
outsb
sub
stos
mov
add
dec
pop
pop
test
cmpsl
inc
inc
xor
mov
out
jae
xchg
mov
adc
and
mov
and
in
outsb
and
clc
adc
dec
popa
repnz
xor
fsubrp
fcmovu
mov
out
rcrl
xchg
sub
test
jnp
jmp
repnz
mov
sbb
fsubr
jecxz
rcr
in
push
dec
into
mov
fs
cmpsb
jo
pop
popa
jo
stos
rclb
sub
mov
mov
push
cltd
lahf
inc
aas
cmpsl
fs
xor
jl
jo
outsl
stos
sbb
icebp
jae
push
push
mov
rcl
cli
pop
jg
data16
jb
fimuls
push
test
rorl
xor
fsubrl
sbb
push
or
std
gs
out
bound
dec
sar
xchg
stos
sarb
mov
xchg
push
and
sbb
xor
iret
mov
inc
add
fwait
insl
les
aam
adc
fisubs
xchg
mov
in
int
test
jge
mov
bswap
rcr
fistpll
out
mov
or
mov
cltd
scas
rcl
mov
test
comiss
cld
or
xchg
cmpsl
dec
xor
das
cmp
xor
das
mov
cmp
aas
cs
push
dec
cmp
jnp
mov
sti
les
xchg
add
cmp
mov
flds
push
fstpt
mov
xor
mov
fdivrl
fs
fbstp
push
add
mov
jge
dec
leave
movsl
xchg
movsl
and
mov
mov
pop
test
cmpsb
pop
enter
lds
sub
mov
push
bound
pop
test
das
loope
stos
xchg
xor
insb
hlt
xchg
jge
lcall
mov
mov
add
cmp
sub
add
mov
mov
pop
xchg
dec
shrl
jb
jns
fisubrs
and
fdivr
pop
mov
cmp
popa
out
mov
fwait
cwtl
pop
xorb
sbb
push
es
xchg
mov
push
cmc
adc
xor
aad
in
dec
cmp
fmuls
repz
mov
push
clc
test
add
xchg
aad
in
ja
mov
test
and
jle
jle
or
sub
push
in
sub
rorl
mov
lret
mov
and
or
sub
in
adc
insb
jg
sbb
test
or
cwtl
addl
addr16
adc
test
add
jns
cmc
push
lods
add
or
jecxz
rorl
xchg
inc
xor
xchg
ret
mov
xchg
add
out
jo
adc
add
shll
into
mov
movsl
pop
adc
push
imul
fistpll
imul
pop
negb
rcrl
jp
addr16
inc
dec
gs
int3
imul
add
cld
inc
aam
and
mov
or
xlat
pop
mov
dec
adc
imul
add
push
cmc
cmp
gs
mov
in
adc
adc
mov
out
mov
xlat
adc
sub
pop
ds
adc
add
aam
sar
pop
jne
cmp
inc
int
ret
stc
xor
push
je
dec
mov
mov
add
subb
mov
repnz
out
jge
push
inc
inc
popl
or
add
andb
and
fucomp
pop
jb
repnz
in
arpl
andb
fildl
pop
inc
fiaddl
jnp
add
aam
in
dec
mov
lcall
adcb
nop
or
inc
and
or
dec
mov
in
loop
loopne
js
popa
and
jmp
fstpt
pop
sub
ja
mov
loopne
xlat
or
mov
bound
adc
mov
dec
or
sti
mov
out
imul
and
fcom
mov
mov
sbbb
faddl
or
add
ja
sub
in
or
pop
lret
adc
int3
inc
sbb
inc
outsl
hlt
std
and
mov
inc
sbb
in
jbe
cmc
pop
cmp
insl
divb
dec
lock
aad
lcall
addl
push
xor
or
enter
mov
jno
and
push
es
mov
adc
lds
fs
lds
lcall
scas
jb
or
xchg
lock
adc
fidivrl
adc
mov
mov
sar
cmpb
sub
leave
cmp
adc
fnstenv
fcoms
fimull
push
sbb
cmp
xchg
out
nop
xor
xlat
jmp
sbb
sub
fnsave
ljmp
mov
and
add
and
cld
movsl
test
inc
and
dec
add
outsl
sbb
cli
jo
shlb
mov
clc
cli
sbb
fucomip
lock
dec
je
loope
sub
mov
mov
dec
adc
and
inc
hlt
sub
cmp
rorb
rorl
mov
out
ret
pop
mov
push
lcall
cmp
imul
push
mov
iret
pusha
enter
push
das
push
mov
mov
push
icebp
and
sbb
mov
push
stos
popl
push
cld
aaa
pop
outsl
lock
test
push
mov
stc
xchg
xor
jmp
int3
mov
pop
push
mov
fucom
push
aad
icebp
mov
out
orb
mov
fstpt
das
adc
mov
push
jg
les
sbb
dec
push
scas
aaa
sub
in
stos
and
sub
dec
inc
es
xchg
mov
insl
out
ss
mov
pop
mov
pushf
dec
sub
jmp
xchg
mov
js
mov
mov
fbstp
es
leave
adc
add
mov
mov
jle
fldcw
xchg
in
push
and
cld
sbb
andl
jnp
insl
in
popf
cltd
push
lahf
xchg
mov
xchg
adc
movsb
pop
mov
fisubl
dec
int3
push
cltd
mov
jmp
fildll
pusha
inc
out
push
mov
cmp
sbbl
mov
or
mov
fisubl
mov
rclb
mov
jg
adc
inc
mov
int3
sbbb
icebp
cli
add
test
shr
and
daa
cmpl
shrl
jmp
adc
mov
add
sbb
test
xchg
jecxz
jmp
aam
sbb
sub
push
xchg
mov
ja
and
insb
inc
mov
hlt
lods
xor
push
sub
cld
xchg
jne
fmuls
cmp
dec
es
out
add
jne
jp
inc
add
sub
jb
test
aad
and
fld1
ss
pop
into
cs
nop
xchg
lret
and
adc
data16
or
mov
xchg
mov
xor
aam
loope
or
mov
out
mov
rcrl
or
or
sbb
ljmp
pop
jnp
jle
popa
inc
sbbl
jp
jns
sbb
xor
dec
inc
sub
pop
mov
into
xor
scas
cmc
out
leave
mov
inc
sbb
sub
enter
fsubs
ret
cmpl
jg
push
insl
out
rcll
fsubrs
test
jge
pop
jecxz
jno
xlat
divl
xor
lods
out
iret
orl
jno
jne
push
jecxz
add
movsb
sub
mov
and
into
sub
lds
push
arpl
je
adc
cmc
or
inc
jp
xor
push
adc
ss
pop
popf
idivb
shlb
and
in
outsl
ret
adc
and
nop
lea
cmp
dec
popf
xor
sahf
je
rcl
mov
inc
scas
pop
jg
pop
add
daa
clc
enter
aas
sub
repnz
inc
mov
daa
sub
pop
and
pop
shlb
sub
aaa
lret
outsb
mov
arpl
mov
nop
mov
ja
test
cwtl
leave
divl
mov
inc
int3
mov
imul
pop
mulb
jnp
pop
imul
jne
cmpsl
out
fs
push
rcl
push
popf
adc
xchg
lret
dec
mov
mull
mov
mov
outsl
pop
mov
inc
daa
push
xchg
xchg
add
lods
pushf
and
insb
mov
jmp
cmp
mov
xchg
pop
rcr
or
cs
ja
leave
outsb
add
sbb
aas
aam
mov
dec
shlb
shrb
add
mov
inc
in
dec
es
int
into
es
cli
lret
dec
jae
push
push
aaa
fmull
test
xlat
lcall
xchg
pusha
and
add
movsl
or
sub
jbe
rol
xor
test
dec
lret
cli
adc
repz
and
mov
mov
or
pop
xlat
addr16
or
xor
mov
es
jns
test
int
scas
jecxz
out
inc
jl
jg
movsl
sti
mov
mov
int
add
mov
lcall
push
jno
push
lahf
mov
jge
or
cmp
ljmp
push
test
leave
dec
dec
jl
and
pusha
imul
add
jb
and
lock
in
xlat
cmp
leave
das
fcoml
dec
mov
adc
in
pop
jmp
xor
aaa
jo
mov
ret
dec
in
mov
push
movsb
or
out
push
inc
push
sub
push
lods
adc
cmp
cmp
mov
lcall
add
sub
xor
xchg
mov
xorl
xchg
ja
in
mov
inc
mov
testb
stos
adc
or
fwait
arpl
dec
xchg
pop
in
in
pop
dec
xchg
movsl
jns
dec
mov
pop
filds
pusha
mov
dec
cmp
inc
pop
sbb
jl
mov
insl
sahf
and
iret
mov
fs
out
xor
pop
movsb
aaa
or
arpl
adc
push
xchg
adc
fs
jno
push
in
std
sbb
add
add
aas
cmp
mov
inc
fstp
dec
lret
popf
pop
sbb
mov
and
fs
mov
jecxz
dec
repz
mov
pop
in
and
inc
and
rcrb
cmp
loope
pop
pop
xlat
lret
push
xchg
inc
add
test
fadd
aaa
push
mov
jmp
imul
sti
or
mov
inc
imul
shr
ja
mov
ja
pop
dec
push
jge
cmc
insb
mov
sbb
lea
mov
push
in
fs
jmp
shr
push
push
cmp
xchg
cmc
pop
xchg
add
mov
push
push
xor
jl
inc
movsb
enter
adc
and
jl
push
fisttpll
jmp
mov
push
paddusb
stc
xchg
inc
data16
fdecstp
pop
enter
push
ret
in
mov
test
dec
mov
setbe
sbb
movsl
adc
lods
cmc
jle
dec
ret
push
xor
stos
fs
mov
cs
add
sbb
pop
push
sub
xchg
mov
xor
jae
fsubrs
pop
lea
lods
lods
push
sbb
rcll
mov
adc
inc
xchg
xor
xchg
push
jecxz
mov
cmp
mov
outsb
xchg
pop
fistpll
sub
jbe
imulb
lock
mov
dec
shlb
push
add
mov
adc
incb
inc
ds
pop
xchg
stos
sub
push
adc
inc
ja
aas
nop
mov
movsb
fwait
xor
jge
pop
push
sub
adc
pop
ja
push
movsl
enter
mov
cmp
popf
mov
mov
rcrb
mulb
adc
fsubrl
jp
mov
xor
jecxz
cmp
sarl
test
ja
ror
xor
lahf
xchg
sbb
pop
or
mov
rol
adc
dec
jb
jl
imul
jmp
bound
or
xor
loopne
xor
fs
mov
inc
repnz
lods
ret
clc
das
xor
jnp
adcl
sub
push
incl
rcl
push
push
hlt
or
and
jge
iret
jns
cmp
push
sar
push
inc
jle
icebp
push
repnz
mov
cmp
jmp
cmp
inc
hlt
aam
sub
push
es
decl
ret
dec
jmp
adc
mov
push
push
mov
adc
sti
inc
and
adc
test
xor
sub
cmp
push
and
or
arpl
stos
ja
pop
div
inc
jmp
pusha
out
cwtl
mov
jecxz
outsl
mov
or
sti
sub
mov
fs
in
cwtl
test
scas
mov
add
sbb
aam
mov
dec
cmp
in
cli
push
loopne
jbe
or
lock
inc
clc
adc
outsb
lods
pop
or
xor
insb
mov
mov
add
sbb
adc
lds
nop
arpl
pop
iret
cmpsl
and
inc
ss
fsub
lods
cmp
cmp
in
inc
mov
aam
pop
addr16
imul
push
xor
int3
jno
aas
and
dec
push
adc
push
jnp
xchg
mov
mov
lods
pop
imull
stos
sub
cmp
aaa
and
and
or
add
pop
sbb
add
xor
pop
xchg
xor
mov
orb
cli
test
aas
ret
push
xor
pop
std
test
lods
ss
in
frstor
add
icebp
sub
daa
cmp
jmp
sub
stos
mov
hlt
les
in
int3
pop
gs
mov
lods
pop
add
mov
mov
ss
lea
aad
shll
rol
ret
fstpl
test
push
ss
dec
out
xlat
lods
daa
jae
mov
icebp
push
mov
sbb
mov
jnp
mov
cs
cmp
or
push
mov
push
xchg
mov
sarb
scas
in
out
or
pop
adc
cmpsl
repnz
gs
ss
push
lds
iret
popf
test
in
cmp
or
fisttps
xchg
stos
fiaddl
mov
daa
jle
add
ja
xchg
orl
inc
imul
or
mov
cmpsb
xor
sti
das
mov
dec
mov
mov
xor
xchg
pop
and
hlt
and
ret
cmp
divb
mov
scas
lcall
inc
sub
je
xchg
jl
movsb
loopne
xor
pusha
cmpsl
jl
je
sub
push
and
mov
fadds
mov
and
test
pop
adc
into
fcoml
addr16
jbe
inc
mov
push
jecxz
xchg
add
mov
hlt
dec
sbb
jnp
dec
dec
fdivrs
mov
mov
adc
daa
jp
gs
in
stos
cmpps
cmp
xor
cli
ds
into
repz
mov
jecxz
inc
or
mov
lret
adc
push
pushf
sbbb
call
xor
aad
imul
ja
and
test
inc
imul
mov
xor
mov
dec
int3
mov
sbb
int3
lods
sar
sahf
mov
xor
ret
int3
and
pop
mov
push
repnz
jbe
sub
cld
fidivrl
adc
pop
mov
movsb
lea
jno
mov
icebp
xchg
out
xchg
mov
mov
jae
sbb
fidivs
scas
xor
xor
movsl
insl
addr16
rorl
insb
mov
and
pop
jle
sub
fnstenv
cli
mov
mov
out
addr16
add
dec
stc
or
leave
jle
xchg
push
and
push
leave
xor
je
xchg
xlat
stos
jecxz
xchg
js
cmp
fisttps
roll
mov
push
cmp
xorb
pop
push
bound
fucomi
and
mov
jmp
shrl
dec
sbb
mov
out
aam
xor
dec
sub
test
and
mov
inc
xor
cld
xchg
adc
bound
insb
jnp
roll
arpl
shrl
cs
outsb
loop
rclb
mov
out
add
lcall
insb
pop
push
mov
push
mov
out
xchg
pop
or
clc
and
xchg
cmpsl
inc
jno
sti
sbb
xor
mov
repnz
fptan
sub
or
sub
enter
std
pop
mov
pop
and
push
adc
jg
loope
fstl
insb
mov
mov
js
sahf
hlt
sahf
xchg
lret
loop
aam
imul
add
sbb
add
pop
mov
fcmovnbe
dec
jecxz
xor
and
lea
je
dec
les
add
cmp
insl
or
ss
cmpsb
push
testl
andb
jle
inc
aas
push
mov
insl
rol
insb
xchg
xor
pop
imul
push
adc
mov
in
xor
out
adc
dec
add
repnz
or
hlt
jo
movsb
mov
pop
stos
push
ss
scas
imul
movsb
push
mov
stos
inc
inc
mov
sub
xlat
sub
push
push
push
mov
cmp
push
repnz
mov
xorl
jbe
rcrl
cmc
push
pop
ret
or
je
addr16
adc
outsl
ror
popf
cmp
or
cmc
outsl
fbstp
pop
enter
mov
xor
mov
push
xorb
cmp
mov
ret
lods
jb
fs
rcrl
in
cmp
ret
les
mov
out
pmulhw
outsb
cmp
mov
mov
cli
push
jnp
adc
test
or
adc
cwtl
mov
fists
add
jg
jp
cmp
sub
adc
mov
sub
lods
and
sbb
push
or
adcl
xchg
mov
movsb
data16
jmp
arpl
or
ret
mov
adc
aad
imul
sbb
cmp
imul
sti
sub
arpl
inc
push
je
pushf
inc
stos
mov
xchg
mov
repnz
mov
sbbb
sub
jns
mov
insl
aam
mov
aaa
mov
scas
movl
in
sbb
jmp
mov
aam
push
test
fcoms
sub
cwtl
mov
inc
dec
movsb
adc
jnp
pusha
out
iret
popa
and
inc
sbb
or
addr16
hlt
cmc
jle
int
int3
clc
pushl
imulb
fadds
push
push
lods
mov
shr
test
fisubl
push
lods
sahf
lret
adc
mov
clc
pop
push
and
pushf
insb
mov
ljmp
int3
fs
mov
loop,pt
sub
fcmovnb
push
mov
mov
adcb
and
push
inc
sbb
fiadds
inc
cmpsl
aas
mov
daa
ror
add
add
int
or
shlb
outsb
leave
xchg
push
add
fwait
out
std
or
hlt
nop
jmp
in
jo
mov
rcr
insb
pop
lret
test
cmp
mov
stc
bound
out
sub
or
add
xchg
fcos
ret
sbb
test
fsubl
dec
fsts
dec
xor
cmpsb
mov
mov
push
push
movsl
cwtl
or
mov
sub
hlt
dec
jp
jg
notl
in
dec
pop
imul
fs
push
movsl
lcall
pop
push
out
xorb
adc
lock
mov
adc
jge
fstl
stos
pop
mov
xor
sub
cld
sbb
inc
pop
xor
sub
ror
jecxz
ds
out
xor
shrl
push
scas
cld
es
push
inc
lahf
mov
jo
sbb
pop
dec
outsb
xor
rcl
ss
clc
add
sub
mov
jnp
and
push
fcompl
lods
repz
sahf
push
or
stos
repz
mov
out
daa
jnp
xchg
push
dec
jmp
fcmove
add
mov
and
mov
sub
aam
xor
sub
lock
aaa
lahf
test
sub
sti
mov
jl
dec
sub
and
roll
push
test
icebp
popf
stos
and
push
mov
lods
or
iret
popa
je
and
cmp
dec
decl
je
pop
mov
fdiv
pop
fisttpl
xchg
imul
aam
sbb
cmp
mov
aaa
or
int3
inc
out
jbe
inc
int3
sub
loopne
imul
lods
mov
push
xor
test
inc
aas
inc
and
and
mov
lods
inc
xor
xor
or
int
ret
and
adc
xor
xor
pop
sub
lret
cmpsb
aas
and
push
stos
in
inc
xchg
lods
les
pop
test
jg
lock
lcall
pop
mov
pop
dec
sbb
imulb
aas
mov
movsl
cmp
and
les
mov
scas
ds
fisubl
add
out
or
js
imul
bound
inc
adc
jge
mov
xchg
arpl
pusha
es
cmpsl
xchg
shl
jb
fidivrs
out
cli
sub
ljmp
xorb
jbe
icebp
xor
mov
jp
xor
mov
in
or
jbe
les
jns
std
std
mov
add
dec
jb
or
mov
sbb
xchg
inc
mov
or
cmp
roll
or
sarl
add
lods
pop
sub
into
xchg
enter
sbb
les
cwtl
jmp
dec
jns
stos
mov
jno
inc
xchg
mov
fldl
adc
stc
adc
jecxz
pop
loop
je
fmul
jle
jl
xchg
jno
popf
xor
add
nop
add
jecxz
adc
mov
push
jl
and
call
lods
stos
out
sarl
mov
jmp
pop
adc
xchg
in
shr
sub
mov
mov
jp
adc
cs
jmp
movsl
out
push
hlt
mov
call
xchg
out
dec
jmp
xor
mov
xor
icebp
sub
popf
sub
jecxz
pop
mov
pop
mov
cli
add
jge
jns
and
adc
das
jecxz
push
xor
sti
sbb
lock
loop
mov
fsts
cmc
adc
add
or
mov
lcall
out
testb
sarl
xchg
aam
jmp
or
andl
push
push
dec
mov
dec
mov
jns
into
shrb
into
fidivl
cwtl
and
push
xchg
sub
push
or
repnz
jecxz
push
and
adc
mov
cmovo
ret
jne
dec
mov
repz
cmpl
in
sbb
xchg
sahf
mov
pop
pop
add
lcall
cmp
sub
imul
orl
push
dec
popa
arpl
fstpt
adcl
and
jle
or
repz
ret
inc
mov
dec
addr16
dec
mov
push
jns
dec
adc
in
outsb
call
gs
adc
out
and
lea
mov
cmp
dec
inc
mov
jbe
int
xchg
popa
mov
or
cmpl
dec
xor
pop
fdivr
ss
jp
inc
cld
add
or
insb
les
out
ds
lea
ds
pushf
add
ljmp
push
add
mov
stos
popf
push
sbb
add
scas
in
mov
mov
sbb
jno
xchg
fucomip
pop
inc
cs
add
xchg
xor
sub
scas
jmp
ljmp
mov
add
xchg
mov
jo
mov
rol
iret
sub
fs
pop
imul
mov
cmp
movsl
pop
imul
cmp
xor
into
iret
lcall
int3
cwtl
and
xchg
xor
leave
jp
lea
mov
sub
adc
popa
sub
fwait
push
jnp
jbe
aas
sbb
stos
gs
in
lret
dec
pop
push
adc
lds
jae
xlat
cmp
sbb
ljmp
jmp
jl
jge
in
loop
and
test
sub
sub
jp
adc
test
sarl
jns
mov
aam
imul
movsb
push
jecxz
push
mov
pop
xchg
out
mov
into
paddsw
push
adc
popa
int3
int3
cmc
pop
xor
xlat
xchg
cmpsl
in
mov
shll
enter
and
xchg
test
testb
mov
popa
repz
pop
iret
xchg
rcrb
xor
lock
lea
inc
fwait
or
sub
push
data16
xor
stc
xor
xor
std
xchg
test
pusha
int3
xor
cli
lock
and
jge
imul
out
add
cmpb
xchg
cltd
cmp
sub
cmp
xlat
sbb
or
adc
aaa
outsl
jmp
mov
push
dec
lods
dec
or
rcll
and
push
mov
push
shrl
inc
pusha
xchg
xchg
pushf
jb
sbb
xor
data16
arpl
xchg
cltd
jb
daa
add
repnz
jle
cmp
xchg
sarl
xchg
inc
rcll
mov
pushf
pop
xchg
lret
aad
ficomps
scas
fcmove
and
int
movsb
xlat
jnp
xlat
repnz
inc
mov
jmp
push
fnstenv
jge
pushf
mov
mov
push
or
mov
in
add
xchg
xor
fsincos
addl
dec
pop
stc
push
cmp
mov
je
push
adc
jb
mov
jge
in
add
mov
push
lods
scas
jge
fidivs
js
roll
inc
fildll
sub
and
stos
lcall
ret
in
movsl
mov
push
ja
bound
dec
test
cmp
mov
subb
xchg
das
stos
aas
pusha
xchg
mov
movntq
scas
daa
out
aaa
gs
lcall
push
movsb
inc
add
rorl
scas
cs
dec
das
int3
fnstcw
filds
scas
je
aas
adc
outsl
cmp
scas
out
add
xlat
shlb
push
in
sbb
pop
xchg
mov
pop
ret
mov
int3
pop
jne
ret
int
lret
cmc
das
mov
rclb
out
sbb
mov
pop
mov
cltd
cmpsl
ret
int3
push
mov
loopne
xchg
das
cmpsb
mov
pop
adc
jae
icebp
ficoms
and
out
cmpsl
push
testl
mov
repz
out
sarl
pop
cmc
pop
sub
mov
cli
div
dec
xchg
jo
fildll
and
jnp
mov
cmpsb
into
movsl
outsl
test
cli
stos
repz
mov
loopne
inc
push
dec
repz
ret
lret
adc
pop
rcl
xchg
jl
cwtl
scas
pop
pop
sub
int
sarb
adc
iret
jge
nop
mov
mov
ss
mov
data16
xor
sarl
or
aam
ja
mov
mov
xor
outsl
pop
adc
adc
insb
mov
push
sahf
xor
lcall
dec
add
mov
sbb
movsb
insb
in
dec
jmp
js
mov
xchg
cmp
movsb
sarl
ss
inc
pminsw
ljmp
sahf
jns
nop
push
push
stc
jbe
push
loop
in
add
jbe
mov
pop
and
test
aad
dec
shl
push
mov
popf
or
fstp
int3
push
xor
scas
mov
fnstcw
cltd
push
mov
aas
mov
gs
mov
mov
ss
inc
inc
add
fs
pop
in
fwait
sub
jg
add
popa
dec
into
mov
jo
xor
pop
inc
mov
or
bound
imul
adc
fwait
inc
mov
xchg
pop
sub
repnz
inc
or
push
add
xor
xchg
push
insl
pop
jp
mov
jmp
or
cmovnp
sub
mov
gs
adc
xchg
jg
sub
ss
std
ja
movsl
jmp
nop
sarl
push
push
shl
repz
xchg
pop
push
ret
mov
xorb
mov
gs
xorb
sahf
aad
jbe
or
ss
pop
inc
das
and
scas
push
mov
arpl
xchg
ja
aaa
push
cld
mov
loop
and
jo
or
ds
lahf
push
adc
int3
or
jmp
nop
or
cmp
aaa
lcall
scas
mov
jecxz
xlat
adc
sbb
in
rorb
mov
jge
ficompl
or
jmp
test
sub
cmp
mov
int
cmp
dec
xor
cmpsb
fidivrl
fcoms
mov
or
enter
mov
push
fwait
adc
cs
in
cmp
jp
sbb
pop
fstps
xchg
sub
mov
jp
add
leave
out
sub
fsubrs
clc
sbb
xlat
mul
insb
push
incb
cmpb
sbb
mov
mov
cmp
mov
mov
sbb
leave
fidivs
ror
dec
into
or
fidivrs
mov
xchg
ret
add
pop
xchg
xlat
lea
lcall
mov
add
cli
lahf
push
imul
enter
mov
mov
les
ret
pop
sub
sti
push
inc
xchg
insl
push
mov
push
int
sbb
xchg
test
inc
pop
shlb
and
ret
in
xchg
addr16
mov
push
stc
pop
mov
push
stc
insb
pop
sbb
jmp
out
enter
add
add
or
mov
cli
xor
cld
xor
lock
xchg
imul
nop
inc
test
or
frstor
repz
mov
mov
cld
daa
out
fsubs
aad
testb
or
push
int
das
testl
push
mov
mov
inc
rcr
ret
xchg
ds
dec
pop
xchg
xor
hlt
jle
fnstsw
sbb
aas
pop
movsb
cmpsl
fs
imul
lahf
fs
pop
adc
jae
add
mov
and
lds
andl
jle
stc
sub
outsl
pop
or
cmp
push
adc
inc
sub
xchg
push
add
add
imul
push
fs
jmp
mov
xor
or
or
sti
lret
dec
mov
jecxz
lock
jmp
stc
cmpsb
pop
pop
clc
adc
das
cmp
pop
out
cmp
mov
lahf
xor
fiadds
iret
fisubrs
and
sbb
jge
add
lock
cmpsb
sub
inc
pop
scas
adc
push
and
loop
mov
fs
or
mov
jb
outsb
pop
cmp
fldenv
inc
jne
insb
adc
shrl
push
and
movl
dec
arpl
jecxz
push
out
das
lods
mov
push
test
hlt
mov
sbb
sub
js
test
pop
repnz
out
jbe
pop
xor
ja
or
cld
fiaddl
dec
insl
or
jmp
repz
ss
stc
loopne
movsb
inc
repnz
mov
scas
mul
js
pop
sub
cli
sbb
xchg
cmp
or
cwtl
add
xchg
out
dec
cmpsl
mov
addr16
inc
push
pop
jge
movsl
mov
lret
arpl
sbb
mov
jl
out
mov
adc
shlb
inc
ljmp
add
and
shrl
sbb
test
inc
in
call
mov
cmp
mov
cmp
mov
cltd
dec
push
mov
pop
movsb
fnstsw
xchg
mov
and
mov
xor
sub
sarl
sbb
mov
out
jg
mov
push
cmp
mov
sub
out
and
iret
or
in
lret
pop
jl
sub
dec
push
or
sbb
push
mov
adc
sarl
ljmp
pop
jo
jae
std
or
movsl
sub
mov
push
inc
lfs
mov
cs
adc
sub
add
insl
jl
xchg
sub
adc
and
mov
xchg
or
sahf
scas
iret
test
push
into
xor
push
cmp
mov
push
jae
mov
xchg
nop
mov
nop
mov
sbb
or
xchg
stos
int3
jg
shr
pop
out
dec
lea
and
xchg
xor
idivl
das
sub
jno
push
and
cs
out
ss
mov
pop
xor
lods
mov
loope
cmp
xor
jno
dec
and
aas
mov
xchg
stos
jnp
jno
outsb
pushf
xor
inc
addl
dec
jae
push
xchg
adc
cmp
popf
cs
mov
sub
sar
inc
shlb
xlat
std
and
cmp
ja
add
sub
aas
mov
mov
push
pop
push
test
clc
or
shl
mov
fmuls
movsl
adc
js
movsb
jb
sahf
cld
stc
mov
xchg
repz
test
std
les
push
nop
push
add
lret
lods
outsb
lret
xlat
mov
push
jl
enter
cmpsl
out
mov
imul
inc
repnz
xchg
and
in
jne
dec
in
loopne
outsl
call
mov
jge
roll
and
mov
mov
sbb
fiaddl
and
jno
jge
jne
sbb
dec
fnsave
sti
jmp
test
subl
filds
int
mov
dec
stos
add
or
andl
repnz
in
lock
mov
loopne
jb
pop
jae
cmpsb
stos
sbb
lret
xchg
fwait
sti
adcb
inc
in
jno
inc
xlat
std
dec
pop
xor
inc
aam
pop
ds
daa
mov
in
xor
add
push
jno
xchg
pop
sub
pop
cmp
mov
outsl
mov
cmpsb
arpl
cltd
or
loop
or
push
fcmove
mov
adc
jecxz
sbb
pop
mov
pop
cmp
fs
call
rolb
adc
or
mov
fldl
mov
or
test
ljmp
loope
mov
fwait
divb
popf
push
jno
sub
arpl
mov
lret
outsb
add
dec
xchg
pop
fistpl
pop
pop
stos
ret
popf
mov
and
flds
aad
rcrl
add
add
les
es
stos
lods
out
inc
or
repnz
mov
push
pushf
nop
and
inc
lahf
js
sbb
fwait
jle
inc
xor
insb
ret
sub
push
xchg
jp
adc
pushf
shrl
inc
icebp
pusha
in
daa
jnp
orb
jne
ret
inc
jle
insl
repz
subb
pusha
push
or
imul
stc
dec
dec
inc
add
test
lcall
pop
rcll
and
imul
popa
cltd
sbb
fwait
mov
push
rcr
add
xchg
mov
cmpsl
hlt
mov
add
repz
jne
mov
fbld
imul
icebp
rcrl
adc
scas
inc
push
push
jp
push
in
les
push
cmp
push
jl
es
pop
mov
outsb
adc
into
dec
sbb
imul
mov
mov
xchg
imul
lds
and
mov
sbb
repz
add
xlat
test
push
mov
scas
cmp
shl
add
or
push
aam
sub
aam
jae
dec
mov
jae
std
add
add
fcomip
jnp
and
clc
jle
mov
ljmp
test
mov
inc
bound
xchg
roll
inc
pop
imul
ljmp
mov
jbe
ror
dec
push
nop
xchg
sbb
jne
mov
sub
mov
mov
push
shrb
scas
sarl
subb
sub
mov
jo
push
pushf
xlat
jo
pop
leave
xor
aaa
xchg
sub
inc
mov
pop
in
sti
loope
sbb
cmpb
cmc
loop
imul
push
push
lock
jp
arpl
ret
inc
bnd
nop
aam
mov
adc
xor
hlt
add
push
push
jge
mov
mov
rcrl
ret
or
push
xlat
orl
and
jno
or
adc
sbb
mov
lret
rol
stos
jno
cs
ficoms
cld
adc
movsb
mov
out
mov
push
aaa
push
into
test
pop
mov
mov
hlt
sarb
out
mov
bound
stos
fwait
sbb
dec
jnp
xchg
fnstsw
xor
inc
jnp
test
push
leave
insb
jl
sub
add
sub
xor
mov
xchg
lds
sbb
out
and
xor
mov
call
add
mov
sti
jg
std
sti
lods
adc
gs
in
ret
cmpsb
pusha
pop
pop
mov
das
subb
shl
mov
popa
pop
sbb
pop
or
data16
cmp
in
or
push
jecxz
adc
push
cmp
and
pop
mov
dec
jbe
cltd
ljmp
add
jg
or
sbb
repz
cs
dec
lahf
shlb
mov
in
fs
sub
je
arpl
xchg
dec
fcomps
mov
mov
call
shrl
fistpll
inc
sbb
je
xlat
imul
fistpll
pop
pop
fsubl
xchg
in
ret
sbb
rclb
mov
pop
pop
popf
scas
sub
dec
dec
pop
add
xor
or
or
fidivrs
fadds
jne
popf
gs
and
inc
inc
cltd
xor
inc
mov
outsl
sub
push
out
dec
jp
pop
mov
pusha
es
jbe
inc
push
fisttpl
pop
out
fists
fbld
loop
int
cmp
dec
data16
lret
lahf
enter
dec
cmp
xor
adcl
dec
and
movsl
dec
fisubl
loopne
in
addr16
cwtl
mov
cmpsl
das
or
out
into
pusha
lcall
je
lock
and
scas
adc
data16
scas
fstpt
cmp
lahf
jp
sbb
cs
in
mov
push
jnp
mov
fstpt
push
stos
in
out
add
jecxz
jle
lds
ljmp
lods
dec
xchg
and
in
dec
stc
push
imul
push
pop
scas
dec
pop
jno
push
fildl
fucomi
mov
notl
jno
dec
iret
xor
inc
int
sarl
ja
sbb
les
jmp
fsubl
notb
sub
mov
movsl
xor
call
out
xchg
xchg
stos
popa
sub
in
and
push
xchg
scas
repz
out
sbb
xchg
add
xor
add
out
imul
pop
testl
jl
jle
xor
sub
call
pop
mov
aad
cmpsl
cli
cmp
popa
xchg
mov
cmp
sbb
push
dec
or
mov
std
push
adcb
dec
sarl
icebp
adcb
dec
jge
test
sbb
hlt
je
lea
cmc
aas
cmp
outsb
out
fcom
ds
jo
cmp
imul
sbb
scas
ds
mov
inc
loope
in
push
fnstenv
cmp
test
jns
jl
lods
es
inc
lret
loopne
adcl
jne
and
jo
stos
leave
lods
movsl
push
pop
data16
ljmp
jge
and
int3
xor
stc
mov
adc
sahf
aad
mov
cltd
imul
insb
jecxz
shl
ljmp
stos
lahf
mov
test
movsb
cltd
jne
clc
scas
xchg
and
cmp
hlt
xor
xchg
pavgw
dec
test
mov
adc
xor
lea
pop
out
dec
sahf
lahf
add
not
push
movsl
mov
jle
stos
sahf
das
mov
cmpsl
sarl
notb
add
jne
jmp
int
arpl
mov
das
mov
adc
pop
test
push
mov
or
add
fwait
lret
sti
jmp
fstpl
adc
xor
xor
fmull
xor
and
fistps
mov
movl
movsb
pusha
xchg
dec
or
fisttps
or
lret
xchg
adcl
clc
push
ret
lock
insb
or
fcmovnbe
mov
jle
jno
mov
stos
push
cmp
cmp
mov
ss
aam
mov
cmp
push
cmp
sub
inc
add
std
cmpsb
pusha
jnp
add
enter
hlt
in
cmpb
push
es
cmp
inc
jns
loop
mov
dec
or
daa
sbb
xchg
in
sub
and
sbbb
inc
mov
lods
adc
xor
cltd
add
scas
xorl
mov
jb
aad
xor
std
push
push
aam
push
hlt
inc
inc
loop
sbb
shrl
or
insb
adc
jmp
xchg
ja
aaa
int3
pushf
pop
sub
push
outsl
mov
out
out
test
dec
sub
mov
add
adc
or
int
xchg
dec
fdivs
lods
fsubl
das
jmp
mulb
pop
les
dec
push
mov
jbe
dec
or
mov
push
dec
pushf
js
pop
js
iret
ds
test
and
jne
cwtl
add
xchg
leave
int3
pushf
popa
repz
out
cmp
popf
test
fcoml
and
fdivrs
dec
clc
rolb
hlt
int
sub
sarl
jae
sti
add
push
js
fdecstp
mov
rcrl
aam
dec
pushl
sbb
lret
es
pop
out
ja
lods
dec
dec
mov
ljmp
mov
ja
lret
inc
shlb
into
or
sub
sbb
mov
mov
pop
andb
adc
ret
sub
mov
scas
push
pop
fcomp
out
loop
dec
jbe
jne
xchg
js
testb
cmp
push
mov
pop
and
sub
out
sahf
bound
gs
inc
mov
loope
js
cmc
mov
fadds
dec
inc
cmc
idivb
cmc
pop
sbb
leave
xchg
mov
add
jmp
std
mov
ja
push
pop
jns
add
dec
inc
cmp
sub
pop
fmull
leave
test
jp
fimull
call
test
and
loope
into
xchg
cld
and
loope
aas
lret
scas
cmp
out
leave
frstpm(287
mov
inc
mov
sbb
rol
loopne
rcrb
sub
adc
outsl
adc
push
jecxz
dec
adc
ds
dec
pop
xor
push
dec
movsb
dec
ljmp
inc
mov
aad
sbbb
mov
or
push
adc
js
movsl
push
int
ds
mov
xchg
movsl
iret
cld
cmp
enter
and
dec
daa
int3
fcom
loope
cmp
sub
adc
lret
jp
testb
pop
outsb
adc
mov
inc
push
xchg
daa
enter
pop
fucomp
pop
dec
and
xor
scas
push
jp
sub
xchg
mov
lea
xor
xchg
dec
cwtl
sub
pop
shll
in
cmp
ds
xor
xchg
ss
pop
stos
aam
popa
jp
pushf
xchg
adc
pop
inc
hlt
sub
mov
dec
jo
mov
push
fists
aad
jo
sub
movsb
rol
out
or
js
pop
and
mov
xor
mov
insl
outsb
inc
lcall
lret
in
push
add
jno
pslld
jnp
roll
in
jae
and
mov
xor
push
fcoml
jno
xchg
pop
ficoml
popa
mov
enter
mov
inc
pop
pushf
push
jge
cmp
fwait
push
stos
push
jp
lcall
push
hlt
divb
inc
pop
add
xchg
pushf
xor
data16
pop
ret
test
in
cmp
int3
aad
push
loopne
outsb
sbb
mov
jns
and
outsb
sti
fs
add
xor
mov
mov
jle
mov
inc
and
ret
xchg
in
sub
scas
icebp
imul
and
aad
aaa
sti
cmpsl
repz
not
and
jge
fmull
inc
mov
cwtl
inc
adc
jbe
gs
cmpsb
add
cmp
lock
xbegin
add
stos
fmuls
cmp
dec
adc
jle
sbb
pop
pop
add
call
mov
or
mov
mov
lea
adc
xchg
mov
sbb
xchg
iret
sub
and
call
test
xchg
test
test
jbe
scas
or
adc
mov
addr16
xchg
sbb
mov
xchg
and
dec
jle
sub
popf
ljmp
shrb
mov
sbb
pop
xor
popf
push
sbb
pop
push
repz
fmull
xchg
dec
push
jg
sbb
add
rcl
and
out
rep
mov
lock
inc
movsl
int3
mov
cmp
jns
push
mov
xchg
das
out
cmp
aad
fnstcw
gs
jno
flds
les
mov
sbb
xor
jns
adc
out
push
dec
mov
and
fistps
mov
addr16
pusha
and
mov
sti
cli
jo
gs
icebp
sbb
or
fbld
shl
les
inc
fcoml
into
push
xchg
arpl
mov
popa
cmc
add
and
cs
test
ret
test
dec
adc
sub
mov
xor
xchg
cmp
mov
scas
mov
nop
adc
movsl
fmull
data16
arpl
fcompl
mov
aad
push
jl
cmpsb
rcrl
mov
push
test
jmp
push
inc
clc
in
xchg
sub
inc
xchg
cmp
cli
push
aam
inc
and
test
mov
std
push
test
rolb
mov
and
push
cmp
std
fidivrs
aam
mov
push
lahf
jg
add
lret
mov
out
jg
xor
sub
and
mov
dec
pop
jno
push
mov
popa
lret
out
pusha
mov
inc
nop
in
das
mov
dec
ja
push
insl
xor
push
add
aad
bound
aam
adc
jb
pushf
sbb
loopne
popf
ret
icebp
cmp
sbb
and
pop
dec
mov
cmp
push
cmp
xor
cmpsl
fsubrp
or
cmp
ret
cmpsl
andl
adc
loope
test
xchg
das
sahf
adc
ljmp
mov
jno
push
sbb
pop
mov
push
cmp
sbb
out
sbb
das
incl
fsubrs
mov
dec
xchg
mov
imul
cmpsl
mov
pop
push
ret
imul
inc
scas
sbb
mov
ds
inc
pop
mov
scas
mov
fsubl
sub
pushf
lcall
or
adc
inc
leave
out
sbb
or
cmp
loope
call
xor
fsubl
decb
addr16
stos
int
push
pop
lea
cmp
xchg
cmp
mov
test
fld
push
pop
fadds
dec
mov
xor
inc
movsl
add
bound
push
jnp
test
je
and
test
insl
loopne
adc
push
add
es
jbe
cs
subb
pop
fnstsw
and
in
in
out
pop
adc
xor
mov
scas
lock
jmp
lret
add
out
arpl
stos
fsubl
sub
xor
rcrb
and
xchg
testb
enter
fisubrl
push
lods
pusha
addb
xchg
adc
xchg
xadd
mov
and
mov
jle
jp
cltd
stos
mov
dec
movsb
in
lret
add
sbb
jge
cld
push
and
stos
mov
or
outsb
aas
idivb
sti
push
loopne
xor
mov
rolb
add
or
mov
fnstenv
pop
cmp
adc
out
push
aaa
stos
adc
les
dec
sub
inc
rcll
out
repz
out
push
add
jnp
loope
aad
stc
pop
scas
out
and
inc
scas
cmp
leave
icebp
lret
fnstenv
addr16
sbb
in
mov
sub
inc
loope
je
popf
pop
enter
in
repnz
and
in
add
xchg
int3
xchg
test
mov
imul
sbb
iret
jl
mov
or
xchg
fistpll
mov
mov
mov
pop
xchg
shrl
inc
or
cmp
adc
cmpsb
xor
add
mov
mov
stc
sbb
and
cmp
mov
pop
cmp
sbb
sbb
xchg
mov
or
adcb
jge
inc
cs
movl
enter
inc
or
inc
fwait
in
sbb
dec
leave
jbe
dec
and
cwtl
adc
aam
js
data16
pop
or
cmp
mov
sbb
js
syscall
mov
adc
cld
mov
jle
sbb
popa
aam
add
sub
mov
mov
inc
jp
push
jle
fcomps
lock
fsts
sbb
jo
cli
cmpsl
mov
cli
pop
jg
xchg
xchg
adc
stos
xchg
fadds
rcl
or
push
dec
push
cmp
xchg
repnz
pusha
mov
repz
mov
leave
aad
fistps
in
out
push
pop
push
ljmp
cmovo
bound
outsl
dec
sbb
dec
dec
int3
adc
jnp
dec
dec
xchg
pop
stos
lods
fstpt
aas
mov
in
int
cmp
jecxz
pop
out
mov
out
inc
and
xchg
lahf
outsl
pop
or
gs
loopne
ror
mul
faddl
xor
lds
in
loope
sbb
dec
rclb
fdivrs
pop
push
insb
xchg
mov
sub
lds
adc
or
leave
jmp
mov
insl
dec
test
int
xchg
enter
jb
rclb
divl
add
or
mov
cltd
push
or
dec
and
ja
clc
xchg
int3
enter
mov
cmp
mov
dec
dec
pop
xchg
mov
fisubrs
fbld
addr16
out
out
cmp
fmull
out
sbb
fdivrl
ficoml
lahf
out
pop
das
cmp
scas
or
mov
dec
leave
adc
sbb
mov
xchg
int
fildll
leave
xchg
sbb
mov
sarl
jg
outsb
inc
add
sbb
xchg
mov
lret
cs
leave
jmp
mov
ret
mov
outsl
scas
cmpsb
nop
mov
movntq
xchg
mov
add
and
jp
ds
shr
lret
sarl
push
cwtl
mov
or
sub
out
sub
push
or
div
lcall
pop
jb
sub
js
mov
and
sub
xchg
fcmovu
lds
shrb
loopne
daa
loop
je
dec
mov
stc
xchg
fst
push
out
in
ljmp
lods
add
and
cwtl
pop
push
dec
sti
add
stc
mov
aam
les
mov
add
sbb
dec
sahf
scas
sbb
or
xchg
dec
cmpsb
fwait
in
std
add
inc
jne
in
pop
inc
pop
and
adc
subb
jb
arpl
movsb
daa
and
inc
cli
notb
mov
jecxz
sub
dec
jnp
dec
hlt
shr
push
sub
mov
push
xchg
aaa
roll
outsb
repz
es
or
je
lahf
xchg
outsl
xchg
das
or
dec
icebp
pop
fstps
dec
sarb
je
cltd
dec
sub
mov
fdivs
push
or
jp
add
pop
daa
mov
push
icebp
movsb
out
and
pop
xor
or
mov
ret
loope
into
stos
cmp
mov
mov
pop
lea
outsl
int
leave
mov
mov
movb
mov
sbbb
cmp
arpl
ds
push
dec
out
jge
pusha
vmovss
adc
mov
into
adc
cli
xor
mov
mov
outsl
mov
or
add
sub
repz
lret
mov
ror
ja
or
daa
ljmp
ja
sub
mov
jge
bound
jbe
les
int3
scas
fwait
jge
rorl
outsb
loope
fisubl
jns
xor
jo
aad
popa
es
sbb
push
and
cli
sarl
inc
aas
popf
outsl
sub
aaa
push
imul
rorl
jbe
fisubrl
call
jb
cmc
or
mov
mov
push
and
lods
mov
aas
adc
scas
jae
jns
mov
xor
fs
or
cmc
cmc
mov
adc
popf
jo
add
cmp
adc
movsb
mov
int3
xor
xchg
push
sbb
push
arpl
sbb
repnz
enter
fcmovu
rorb
xchg
add
jnp
popf
nop
lcall
dec
add
sub
jp
push
jno
jns
cmp
mov
cmp
fcoml
adc
and
sub
mov
xchg
dec
dec
mov
fistps
ljmp
push
shlb
sarl
call
sbb
ret
adc
mov
push
cmp
xor
in
movd
or
dec
popa
inc
xor
sub
stc
pop
fldt
and
jbe
push
lock
dec
leave
inc
pop
mov
jle
jb
jb
mull
jge
pop
jno
jno
sbb
mov
pcmpgtd
mov
je
jo
and
jle
hlt
outsl
sti
dec
hlt
imul
arpl
sbb
aam
pop
adc
push
sbb
aaa
mov
adc
movsb
shl
xchg
addps
cmc
fldt
jg
push
arpl
test
insl
or
mov
mov
push
mov
out
ret
leave
and
mov
pop
and
loope
or
cmp
jne
push
mov
xchg
jg
inc
cli
mov
int3
test
sub
mov
add
cmp
hlt
cmp
enter
and
ja
cmp
add
into
jmp
mov
fcmovnb
add
cmp
and
insl
in
jno
add
cmp
sti
add
push
sbb
je
inc
mov
jno
push
mov
sbb
or
push
adc
push
inc
push
sbb
xor
inc
sub
les
out
ret
cli
loope
pop
cmp
dec
cmpsb
mov
loope
das
sub
lret
mov
scas
shlb
jns
push
and
xor
jl
lds
imul
mov
jp
enter
mov
or
lret
rorl
xor
je
cs
pusha
test
or
adc
or
arpl
iret
cmp
cmc
sub
in
addr16
pusha
mov
and
cld
iret
roll
push
push
xor
addb
test
fwait
aas
aam
xor
mov
popa
sub
or
sti
dec
and
pop
into
in
outsl
iret
bound
xchg
test
pushf
andl
xchg
std
out
mov
push
and
lret
dec
iret
nop
add
ret
fbstp
nop
inc
outsl
lods
add
inc
rol
sbb
call
sub
dec
pop
xlat
rcrl
lods
add
sub
addl
xadd
mov
xor
mov
jo
mov
fcoms
insl
lods
test
add
mov
inc
and
cmpsb
test
mov
mov
sub
xor
movsl
inc
cmc
cmp
testb
mov
add
les
aaa
jmp
mov
sbb
inc
push
icebp
cmc
imul
and
in
or
jmp
push
pop
xchg
jmp
or
std
shll
jle
jp
sub
gs
xor
mov
sub
add
aaa
push
in
add
mov
xor
push
in
fisttpl
xchg
lret
fnstcw
insl
repnz
mulb
jae
repz
xchg
mov
sbb
jb
popa
lock
andb
lods
mov
jge
jl
mov
or
jno
fldl
sub
cmp
inc
scas
mov
adc
cli
and
mov
imul
ss
add
pop
ljmpw
sbb
dec
fmulp
mov
js
adc
iret
mov
pop
sbb
stos
fsts
or
out
mov
test
orl
sbb
inc
cmpl
inc
jns
xchg
es
mov
mov
mov
jmp
pop
int3
adc
push
pop
or
addr16
adc
xor
inc
sub
sub
push
sbb
lret
shr
imulb
les
in
lea
hlt
cmp
mov
jb
outsb
enter
fisubrs
pop
dec
es
scas
or
les
inc
lahf
adc
and
out
or
into
xlat
mov
mov
mov
adc
inc
frstor
cmp
aaa
stos
in
cmp
stc
aas
pop
jns
jge
dec
call
sbb
mov
xor
cmpb
lcall
scas
mov
jecxz
insl
int
xchg
rorl
out
mov
icebp
or
and
mov
insb
je
adc
cmovle
fsubrl
pop
in
cld
test
push
sbb
pop
dec
and
lds
xchg
cmp
into
dec
push
mov
mov
or
insb
rorl
fidivl
dec
loope
shlb
adc
pusha
pop
add
mov
dec
lret
sub
out
repz
bound
add
lock
fcmovb
repz
lret
mov
push
dec
xor
cs
mov
xor
js
push
inc
lret
mov
popa
adc
and
rorb
aas
xchg
adc
push
sahf
pop
int
push
mov
cmp
mov
mov
incb
push
daa
sub
xlat
and
mov
insl
orl
leave
sbb
sbb
insb
ja
test
jg
sti
xor
and
pusha
adcb
in
cli
cmpb
repnz
int
icebp
iret
std
xor
inc
sub
fcom
pop
pop
xor
repz
cs
test
enter
cltd
mov
movsl
bound
mov
adc
and
add
and
mov
ljmp
mov
dec
repnz
push
lods
dec
jns
in
xor
pop
das
out
btc
push
add
fisttpll
nop
dec
js
pop
scas
push
mov
insb
sti
nop
dec
or
adc
fidivs
mov
fcompl
shl
dec
jg
pop
in
jl
push
push
push
xor
lret
lahf
lock
mov
dec
jns
sub
sub
cmpsl
mov
xchg
subl
data16
jo
mov
cmc
fdivs
mov
add
inc
and
in
xchg
loopne
leave
movsb
adc
jmp
dec
int
fisttps
push
popa
js
ror
mov
movsb
in
or
inc
push
mov
sar
or
repnz
adc
pop
test
add
into
fcoml
cmc
xchg
jne
jnp
push
pop
repz
pop
das
cmpsl
mov
nop
add
cltd
xchg
pop
sub
cmp
aam
mov
and
sub
lahf
sahf
arpl
xchg
cmp
loope
adc
clc
push
repnz
in
sti
adc
xor
jno
aad
cmc
jnp
in
test
mov
dec
loop
pop
out
in
jecxz
jns
pop
inc
or
or
imul
aas
shlb
test
andb
das
pop
add
adc
lea
push
mov
push
jbe
mov
mov
jne
mov
test
add
int3
cmpb
repnz
or
filds
xor
or
xor
fsubl
mov
and
mov
mov
stc
mov
push
cmp
cmp
arpl
fwait
rcrb
cltd
add
jbe
ret
or
cs
fisttps
repnz
mov
sbb
adc
sbb
and
mov
mov
lret
sbb
push
lret
nop
and
test
stos
jbe
loope
stos
in
push
cmp
aas
push
pop
inc
cs
dec
sub
cmpsl
fiaddl
aaa
sub
stos
rol
push
xor
arpl
scas
xchg
movsl
shl
shll
inc
mov
sbb
iret
testb
mov
xchg
jae
arpl
mov
jmp
test
mov
jnp
cmp
shlb
rclb
outsb
aam
lea
sub
pop
sub
out
jle
mov
in
ret
shlb
xchg
push
jg
pop
adc
pop
push
cld
cmp
stc
pop
mov
or
inc
aaa
ret
sbb
inc
xchg
enter
add
jp
xchg
mov
xor
or
adc
in
scas
mov
aad
sub
mov
ret
push
push
xchg
sbb
loope
jp
pop
fldl
insb
jp
jmp
pop
pop
mov
arpl
and
out
push
lret
cmpsb
inc
inc
std
jae
pop
sbb
scas
xchg
push
in
jl
js,pt
pop
mov
pop
ficompl
icebp
dec
dec
inc
mov
iret
sub
icebp
fnsave
and
mov
lea
mov
dec
jg
dec
dec
xorl
cmp
lods
nop
dec
ds
lret
xor
lret
cmp
cmpb
popa
pop
test
adcl
xchg
std
xchg
adc
push
es
lods
push
lret
ret
mov
ds
xchg
xor
xchg
lds
push
loope
xchg
sub
sti
mov
clc
mov
lcall
fs
mov
scas
aaa
lret
sub
outsl
sub
inc
test
jl
int
iret
scas
pop
pushf
cmc
xor
mov
dec
pop
inc
dec
push
sarb
mov
mov
jecxz
push
add
mov
inc
sbb
lcall
mov
add
and
fistpl
repz
inc
jne
int
xor
scas
xlat
addl
data16
mov
mov
or
xchg
mov
push
rorb
dec
lods
fdivs
int3
cmpsl
stc
cmp
outsb
add
or
pop
enter
mov
inc
gs
or
js
adc
icebp
hlt
lock
adc
cmp
inc
imul
jbe
or
cmpsl
out
cmp
lods
in
lret
call
mov
into
push
test
adc
push
les
and
shrb
lods
mov
pushf
push
or
pushf
or
mov
rorb
lcall
dec
pop
sbb
dec
ror
mov
sub
pushf
sarl
mov
andl
inc
mov
cmpsl
shrl
sbb
shrl
jns
outsb
mov
cmpsb
loop
mov
stos
dec
outsb
sbb
repnz
xchg
and
cmp
fdiv
aad
adc
movsl
out
rep
ja
aaa
mov
ds
imul
fadds
je
fildll
cmpb
mov
lea
and
in
jo
mov
pushf
mov
push
add
fisubs
rolb
stos
sub
jb
mov
sub
dec
mov
xchg
out
xor
ret
mov
dec
inc
xor
mov
lds
les
imul
jmp
push
out
sub
repz
cld
shrb
in
dec
pop
addr16
sbb
jp
pop
push
pop
andb
mov
es
scas
hlt
push
es
cmp
insl
faddl
jl
imul
xor
mov
cs
lret
test
popa
sub
sarl
cld
push
cmc
test
mov
ret
loopne
add
es
jge
and
sbb
movsl
jl
dec
sub
ror
enter
test
adc
std
push
pop
test
inc
push
mov
jmp
lea
mov
and
ret
xchg
adc
fsubs
ljmp
jne
insl
dec
jg
xchg
inc
push
scas
mov
push
fildl
adc
xchg
pop
jnp
xor
pop
sub
sub
jle
imul
cmp
dec
mov
insl
sub
shll
push
add
iret
push
shlb
testb
sahf
mov
sub
xchg
ret
inc
divb
mull
mov
fiadds
and
pop
cmc
jb
jmp
imul
int3
pop
or
jmp
mov
fs
mov
leave
inc
sbb
mov
or
jge
pop
pop
pop
push
into
push
push
fcompl
ret
outsl
das
dec
test
xchg
inc
test
sahf
sahf
fistpll
js
nop
ljmp
lds
jnp
mov
xchg
push
in
movsb
notb
outsl
xor
push
stos
rcll
and
adc
int3
push
push
jle
xchg
mov
or
inc
pop
roll
pop
dec
cmpsl
int
xchg
mov
popf
ljmp
out
cmp
inc
push
lods
xchg
sbb
ljmp
mov
inc
jnp
call
push
cmp
push
dec
jge
pop
daa
outsl
jnp
fsubp
je
xor
mov
sub
add
inc
push
ja
inc
mov
sbb
lock
adc
pop
scas
lds
jno
mov
dec
mov
iret
rolb
jg
push
add
es
jle
out
fnstcw
push
gs
push
dec
aas
fldenv
pop
xor
iret
loop
bound
xor
mov
out
out
test
mov
mov
out
testl
gs
push
xor
push
lds
dec
les
cmc
pop
mov
cmc
mov
lods
mov
jbe
pushf
fdivrl
push
mov
add
sub
lahf
test
inc
dec
cmpsb
jnp
cmpsb
adc
dec
xor
out
loopne
cmp
add
adc
dec
rolb
aas
sub
mov
and
push
fiaddl
xor
in
adc
jge
loop
sub
pop
or
orl
stc
dec
sub
inc
mov
xchg
jg
fdivr
movsb
dec
mov
imul
fs
test
sbb
adc
mov
xchg
in
and
aas
and
aaa
out
add
les
les
add
lds
pop
fldenv
sub
or
test
mov
xchg
mov
fprem1
leave
jbe
push
mov
jnp
nop
lcall
std
sub
mov
xor
cwtl
adc
int3
xor
pop
mov
scas
dec
jp
je
add
xchg
add
cmp
mov
loop
adc
xor
xchg
jbe
loope
xchg
inc
mov
fisubs
mov
and
mov
js
push
push
mov
imul
sbb
cmp
popf
sub
dec
cmp
es
and
jecxz
mov
outsb
pushf
mov
stos
repnz
sbb
imul
mov
outsb
sbb
in
sub
xor
xor
push
cmp
xchg
ret
mov
testb
stos
pop
fdivrs
aam
rcr
mov
jmp
jge
mov
mov
inc
mov
cmpsl
shr
jns
push
int
je
es
push
out
push
xlat
test
pop
xor
out
and
orl
cltd
insl
or
xor
cmpsl
xchg
insl
test
pop
sbb
jbe
dec
or
dec
lods
sub
adc
iret
mov
pop
dec
pop
sub
dec
aam
lret
lods
mov
xchg
sub
pushf
sbb
jne
xchg
mov
inc
lahf
ja
fistl
arpl
addr16
add
xchg
pop
je
out
push
dec
adcb
push
cmp
orb
lock
fidivrs
adc
call
and
push
sub
aad
mov
pop
fldenv
mov
fsubrl
enter
ret
shl
cmpsl
inc
push
daa
leave
and
popf
lret
pop
inc
push
inc
mov
lock
lock
ret
loope
call
mov
inc
xor
or
jmp
movsl
push
pop
mov
xchg
xor
fs
inc
lret
and
adc
orl
dec
pop
fstpt
cmovg
testl
gs
les
ja
and
ret
push
add
xor
mov
push
fcomps
dec
lds
scas
mov
test
push
mov
cmp
cld
jo
or
and
and
add
cmp
xor
mov
arpl
push
mov
hlt
push
out
xor
inc
mov
lahf
hlt
cmc
and
adc
stos
lods
inc
and
and
add
ret
sbb
inc
stos
xlat
jl
fcmovbe
mov
lods
js
mov
sub
ljmp
add
add
shll
mov
add
add
jno
mov
lock
imul
cmp
xchg
add
jns
scas
mov
cmp
jbe
lret
inc
std
movsl
in
int
cmpsb
sub
mov
push
ja
stos
js
stos
aaa
es
mov
jo
aaa
xor
rorb
mov
dec
iret
adc
cli
imul
inc
and
push
inc
ror
mov
out
mov
aad
cmp
and
test
cmp
movl
aad
mov
filds
and
sbb
in
push
mov
sti
and
mov
nop
out
stos
xor
xchg
xlat
cld
xchg
es
aam
dec
scas
adc
mov
or
jb
inc
cmpsl
je
fcoml
jns
and
andb
mov
xorb
arpl
or
mov
inc
inc
repnz
scas
js
jmp
adc
sahf
jle
lcall
fsubs
fcompl
and
xchg
repz
fnstcw
jnp
fsts
mov
mov
mov
pop
dec
pop
les
dec
lock
push
stos
jl
cmp
xchg
daa
stc
inc
add
xchg
pushl
insl
xchg
scas
inc
cmpsl
cmp
push
out
jge
test
sbb
pop
hlt
mov
mov
icebp
mov
push
ds
shlb
push
movsb
dec
pop
or
aam
outsb
into
xchg
or
test
sbb
rorb
mov
loopne
adc
das
inc
jle
in
or
jo
outsb
sub
inc
pusha
mov
add
outsl
je
xor
xor
jnp
mov
insb
insb
push
mov
stos
jo
andb
loope
dec
cmpl
jl
inc
jl
stos
inc
mov
mov
cmp
inc
dec
push
out
rcl
lcall
jp
xor
sbb
insl
and
lcall
js
lahf
dec
cmp
enter
int3
xor
rclb
pop
mov
push
cmpsl
mov
loopne
test
push
cltd
inc
cmp
adc
ss
sub
dec
mov
adc
inc
ret
ja
into
and
sub
shlb
lahf
lock
jecxz
or
gs
sahf
pop
xor
arpl
testl
pusha
out
xor
dec
mov
test
aas
pusha
in
stc
mov
shll
mov
movsl
or
inc
mov
add
adc
push
push
cld
jae
mov
jle
aad
mov
movsb
ficomps
dec
mov
sbb
adc
xor
lahf
ljmp
dec
ficompl
mov
sub
xlat
repz
mov
shlb
xchg
aad
nop
mov
insl
sub
jge
xlat
scas
ljmp
cs
fadd
xchg
pop
ljmp
cwtl
adc
test
jecxz
mov
jb
sahf
push
pop
xchg
andl
fnsave
sub
mov
cld
adc
push
les
mov
rorb
arpl
sbb
and
fsubrl
cmp
xor
pushf
stc
add
addl
sbbb
push
pop
push
repz
xor
and
sub
test
cli
add
sarl
sub
inc
xlat
enter
and
push
fmull
sbb
xchg
outsl
adc
aam
data16
mov
lret
add
lods
pop
pop
sbb
sbb
pop
pop
and
dec
pushf
jg
lods
dec
dec
test
out
xchg
adcl
test
repnz
mov
adc
cltd
fidivrs
inc
pop
sub
and
call
and
lret
inc
cmc
ss
movsl
mov
jle
pextrw
push
gs
push
mov
das
push
std
xchg
lods
cmc
jecxz
sbb
sub
outsb
jg
xchg
aas
mov
and
in
shr
xlat
xchg
or
sbbl
mov
xchg
mov
sub
data16
je
fidivl
xor
addr16
arpl
sbb
xchg
mov
pushl
das
es
jge
jecxz
enter
sbb
pcmpeqd
popf
sti
ss
sbb
rclb
pop
push
rorl
pop
mov
push
xor
arpl
aas
sub
ljmp
fimuls
int
in
cld
mov
mov
fistpll
pop
mov
into
iret
insb
call
ret
nop
mov
sti
sub
jle
insl
mov
movsb
daa
push
sahf
test
pop
xor
fidivl
xchg
sub
pushf
push
push
inc
cmp
stc
js
xchg
pop
cmp
dec
sub
dec
fidivrs
pusha
mov
push
mov
mov
push
stc
add
adc
sub
lock
push
or
cmpsl
aam
lods
mov
mov
insb
xchg
arpl
dec
dec
repnz
cmp
mov
stc
mov
cmp
mov
add
into
jmp
stos
pop
cmpsl
inc
cmpsb
sbb
cmc
pop
xor
dec
push
roll
mov
add
xchg
jbe
dec
xor
bound
mov
xor
lcall
out
adc
leave
daa
sbb
aaa
addr16
shrl
imul
fstp
and
jns
sahf
into
xchg
xchg
rolb
mov
and
inc
sbb
mov
imul
jle
pop
dec
jae
adc
adc
inc
mov
pop
pop
addb
xor
out
call
cmc
sbb
jge,pn
or
jne
loopnew
mov
pop
fcoml
or
push
pop
jnp
pop
leave
lods
scas
inc
pusha
mov
loope
xor
fistl
int3
fildll
and
mov
fisttps
fidivs
leave
push
and
jo
fstpl
imul
adc
mov
mov
inc
aam
push
push
out
push
mov
stos
sbb
mov
push
clc
jno
or
jg
cld
and
icebp
xchg
and
jg
loop
and
loop
jle
add
testb
and
inc
cmpsb
push
jo
inc
mov
xor
into
mov
cmpsl
pop
jno
mov
inc
movsb
out
xor
lock
push
loopne
add
mov
inc
mov
dec
imulb
mov
movl
adc
addr16
rolb
fwait
push
mov
mov
jno
lret
pop
inc
xchg
pusha
das
loope
push
push
or
inc
and
xor
fbstp
sbb
adc
jp
dec
sbb
int
sbbl
jns
pop
jl
jo
inc
in
cmp
loopne
cmp
xor
rclb
outsl
je
and
push
sbb
pop
in
jae
mov
xchg
repz
int3
out
cmp
lret
fcom
gs
pop
cld
test
inc
pop
subl
sbb
imul
clc
scas
xor
jno
das
nopw
int
arpl
adc
jnp
int3
frstor
fldt
xor
cmp
js
pop
push
dec
and
push
dec
sahf
jg
add
scas
or
mov
inc
cmp
bound
dec
addr16
hlt
pop
addr16
sbb
inc
dec
adc
xor
test
lret
pop
xchg
data16
incb
xchg
jae
jnp
pop
cmpsl
addl
push
fldenv
sahf
imul
cs
movsb
sbb
dec
lahf
pop
movsb
shlb
lret
or
pop
nop
push
mov
mov
add
and
jl
les
or
in
and
loopne
add
test
cmp
out
mov
and
push
push
icebp
int
je
out
into
mov
in
rcrl
sahf
xor
xchg
mov
ss
xchg
sub
pusha
inc
inc
jg
in
rclb
int
dec
rol
adc
inc
and
xchg
or
jmp
mov
fwait
stos
add
jecxz
dec
mov
sbb
pop
popf
cld
pusha
jne
mov
jmp
push
loopne
std
push
adc
push
and
adc
push
imul
adc
mov
repz
pop
icebp
test
add
insl
aam
mov
push
mov
out
inc
jnp
mov
xchg
mov
jmp
cmp
sub
xchg
es
in
push
xor
pop
xchg
ljmp
outsl
mov
test
mov
shll
push
lahf
push
into
loop
leave
aas
sarb
sub
xor
mov
pop
push
fbld
sbb
mov
xchg
into
mov
bound
cmp
lea
and
fdivs
and
icebp
mov
enter
sbb
scas
lret
or
andb
xchg
xor
fwait
mov
outsl
jo
dec
add
ret
dec
es
mov
ret
and
adc
dec
les
lret
xchg
sbb
in
mov
xor
pop
cmc
andl
or
in
outsb
cltd
stos
lods
dec
ds
mov
in
dec
sub
xor
jbe
pop
cmp
mov
or
in
loope
orl
out
fcmovb
xlat
push
mov
mov
test
inc
pop
adc
dec
and
popf
push
or
loope
mov
fidivs
hlt
add
pop
mov
jmp
lret
cmp
xchg
mov
das
xor
int
mov
fstpt
cs
mov
xchg
sbbl
mov
adc
pop
lahf
xchg
sub
movsl
or
pop
jno
inc
or
pop
push
ja
sub
int
lods
push
xor
mov
std
inc
dec
movsb
dec
mov
xchg
cmp
add
jle
jg
adc
out
imul
and
out
stos
push
repnz
lret
mov
pop
les
les
sbbb
xor
adc
in
movsl
orl
imul
ret
repz
fidivs
imul
mov
std
jo
insl
jge
xchg
shrb
call
jle
fisttps
jne
sarl
push
ror
mov
xor
xchg
sti
data16
outsl
std
int3
cmp
xchg
stos
pop
mov
ljmp
push
push
xchg
lahf
fcomps
fisubl
inc
and
pusha
lcall
sbb
add
nop
push
cmc
cmp
cmc
div
push
lahf
and
repnz
mov
pop
inc
dec
decl
jle
out
xor
pop
jge
mov
jp,pt
leave
rorb
das
imul
scas
es
or
mov
push
repnz
inc
sbb
mov
dec
mov
hlt
inc
testb
sbb
sub
aas
inc
inc
adc
mov
add
jl
and
lret
sub
gs
sub
mov
mov
fiaddl
cmc
jmp
repnz
xchg
cmp
or
inc
sbb
inc
in
in
jl
sub
jp
mov
in
add
inc
mov
push
cs
adc
cmp
xor
mov
int
insl
mov
hlt
fcomp
sbb
push
pop
psllq
cmc
sub
cld
cmpsl
pop
jmp
mov
or
sub
sub
or
stc
xchg
sbb
sahf
xchg
xor
or
rorl
add
jo
fcmovnu
stos
push
les
and
jecxz
xchg
xchg
and
popa
adc
div
ljmp
adc
sub
jno
mov
mov
push
fwait
cmpsl
cmc
mov
enter
xor
test
pop
mov
dec
loope
cmpsl
inc
sbb
aaa
sti
jp,pt
mov
mov
ja
mov
ja
mov
or
or
stc
inc
addr16
mov
in
adc
outsb
inc
bound
xchg
or
lock
jmp
sti
stos
aad
addl
pop
sub
outsl
xorb
cld
pop
sti
fcoml
ljmp
test
jae
inc
insl
and
push
inc
cltd
ja
mov
aas
jmp
jbe
inc
in
jns
pop
scas
enter
test
add
int
adc
std
and
pop
add
fadds
or
cltd
bswap
int3
push
cmc
xchg
lods
xor
ds
shl
in
testb
pop
cmp
icebp
loope
push
xor
and
ds
stc
jae
inc
jbe
js
loopne
sahf
test
mov
stc
popa
cmpsl
and
xchg
cmc
or
xor
outsl
clc
ss
iret
popl
sbb
mov
enter
push
enter
xor
icebp
leave
arpl
aas
cmp
pushf
sti
les
push
sbb
or
cwtl
lods
sbb
gs
out
cltd
inc
fwait
call
btr
xor
les
dec
adc
pcmpeqb
xor
mov
sti
push
sub
jmp
mov
dec
jle
mov
inc
addb
lods
pop
fnstsw
mov
mov
shlb
fists
sbb
mov
add
jae
jne
leave
dec
xlat
push
add
data16
add
call
cmp
testb
mov
mov
movsl
xchg
cmp
mov
dec
shrl
dec
push
imul
adc
addl
dec
jae
sbb
addr16
sub
idiv
xchg
sti
repnz
fsubrs
adc
jg
or
scas
lock
notb
in
cmp
or
jo
in
lock
xchg
ss
mov
cwtl
out
and
push
mov
outsb
lahf
adc
mov
mov
mov
push
xchg
xor
sub
push
xor
push
sub
adc
dec
adc
mov
es
nop
cmp
xlat
ds
sbb
pop
cmp
inc
sub
push
sbb
cmpsl
pop
repnz
xor
stc
insb
sub
inc
aad
add
inc
mov
das
dec
add
pop
daa
cld
sub
es
mov
out
test
fmuls
adc
iret
fsubp
int3
int3
mov
add
push
rcrl
push
fcomip
push
lret
add
stos
and
mov
sbb
pop
and
xchg
mov
inc
push
mov
in
es
pop
cmp
cmpsb
jecxz
enter
es
xchg
mov
sub
pop
push
push
adc
mov
or
icebp
jge
insb
scas
insl
or
fists
add
jne
stos
outsl
mov
sub
jle
popa
mov
push
daa
call
dec
sbb
adc
cmp
fwait
sbb
adc
into
dec
lret
pop
fldl2e
mov
addr16
stos
inc
repnz
rcrb
in
pop
ljmp
sahf
sub
aad
pop
pop
xchg
subb
cmpl
add
sbb
pushf
and
sbb
sarb
movd
xor
lret
outsb
sub
adc
insl
xor
xchg
mov
add
or
pop
inc
sbb
dec
or
sub
mov
out
fs
and
test
fdivrl
inc
mov
mov
inc
int
cmp
imul
jmp
add
stos
push
pop
cmc
cmpsl
xchg
jge
push
imul
data16
jne
push
and
pusha
xor
add
shlb
nop
or
jmp
mov
decl
xor
cmc
mov
shlb
scas
outsl
pop
push
adcl
idivb
cmp
add
ret
jb,pt
mov
add
adc
or
pop
test
aam
adc
fisubl
inc
dec
jbe
mov
pushf
ret
sub
lcall
xor
mov
mov
cmp
adc
lret
jge
and
daa
jno
push
fwait
xchg
and
dec
sbb
cmp
call
mov
or
jg
mov
fcoms
xlat
les
pushf
jle
andl
jne
or
in
or
imul
inc
push
aam
notl
lods
dec
dec
outsl
xor
loopne
mov
daa
clc
cld
es
cs
pop
ja
aam
insl
jb
ret
pop
mov
lock
out
sbb
ljmp
scas
adc
inc
in
cmpsb
sbb
test
insb
lcall
ficoms
pop
test
add
popa
lock
sarb
mov
addr16
push
mov
nop
sbbb
jae
dec
lods
xchg
fs
mov
ss
mov
test
sbb
cmp
out
repz
push
push
or
sbb
dec
leave
xchg
sbb
std
mov
dec
xchg
aaa
mov
fidivrl
sub
push
jl
inc
inc
push
cwtl
or
repz
jb
cwtl
imull
inc
mov
clc
add
pshufw
loopne
xor
push
mov
push
add
push
in
stos
test
subb
xor
inc
sub
sub
outsl
or
lret
and
and
add
adc
push
leave
icebp
pop
fwait
scas
mov
or
dec
xchg
dec
pop
jbe
sub
cmp
pop
xchg
leave
add
les
mov
in
xchg
xchg
dec
push
push
cmpsl
insb
test
orl
cmp
dec
jno
test
lret
inc
negb
jg
mov
ss
push
mov
leave
add
pop
adc
fstl
xchg
aaa
imul
push
subl
ljmp
imul
dec
jl
sub
xorb
cmc
mov
insl
xchg
xor
fisubl
jg
shrl
andb
out
jbe
mov
cltd
fs
jge
ljmp
add
stos
cmpsl
add
or
cli
enter
les
dec
in
mov
out
in
daa
push
insb
jo
or
mov
bound
pop
sti
mov
pushf
push
add
jae
movsl
or
pop
mov
mov
ds
cli
sbb
cli
test
test
cmp
push
fnstcw
insl
test
stos
aaa
repz
or
xor
divb
mov
add
xor
cmp
dec
sbb
test
ja
inc
push
dec
push
enter
pop
in
imul
aam
out
lahf
test
mov
jae
clc
mov
jecxz
lods
inc
dec
pop
mov
scas
dec
add
add
insl
shll
mov
xchg
out
xor
in
pop
popa
ret
mov
out
adc
sbbb
lods
cmp
jbe
out
xchg
lods
mov
imul
sti
cltd
xlat
outsb
add
add
pop
std
push
cmp
cld
lea
push
fsubr
adc
filds
roll
or
xchg
mov
mull
int3
test
push
and
mov
dec
mov
pop
mov
cld
lods
cmp
stos
std
and
test
sbb
js
sub
mov
jb
stos
pop
xchg
imul
mov
popa
lods
lahf
call
add
insl
fs
jo
repz
das
scas
leave
inc
dec
add
mov
inc
lock
aaa
add
sbb
sti
push
or
jmp
sub
jb,pt
out
andb
dec
pop
shlb
cld
flds
jmp
adc
dec
int3
mov
les
cmpsl
hlt
mov
mov
test
jecxz
dec
enter
push
jge
enter
test
bswap
cmp
out
pop
lock
enter
insl
sub
pop
out
push
mov
mov
xchg
pushf
or
dec
dec
fisttpll
repz
jae
int
xchg
dec
stos
int3
and
jp
aas
adc
icebp
xchg
pop
mov
jb
xor
or
xor
sbb
cmp
dec
sbb
cld
pop
or
adc
movsl
push
mov
fwait
andb
icebp
ret
aaa
cmp
sbb
dec
push
cmp
cmpsb
sbbb
cwtl
jbe
adc
data16
mov
cmp
adc
sub
in
pop
mov
loop
rcll
cmp
jnp
mov
das
hlt
mov
out
cmpsb
in
sti
fmull
sbb
adc
in
push
popa
pop
aas
insb
loopne
loopne
dec
movsb
bound
jo
inc
daa
push
pop
mov
and
xchg
cmp
nop
pop
aas
loope
jno
leave
loopne
rcrb
pop
jecxz
ss
push
mov
cld
fldln2
outsb
ret
xor
pop
jg
mov
mov
in
or
lock
test
push
sub
adc
in
lea
and
std
lret
mov
aaa
out
ret
mov
pop
mov
ret
xchg
xor
pushf
pop
lcall
adc
bound
notb
mov
add
repz
insb
icebp
mov
or
and
cmp
mov
sbb
and
out
pop
fldt
mov
jbe
cmpsb
pusha
adc
nop
sbb
or
repnz
or
inc
imul
lea
pop
shrb
rcr
les
sti
movsb
push
jecxz
jmp
mov
stc
or
add
cld
inc
arpl
es
push
rclb
in
shll
or
fs
add
stos
add
inc
add
xchg
cld
inc
fmuls
repnz
sahf
lahf
pop
sub
test
imul
addr16
les
inc
jge
cwtl
jecxz
in
inc
andb
jb
sbb
inc
jmp
push
aad
outsb
out
popf
sbb
push
pop
or
rorb
test
xchg
and
xor
popa
dec
or
scas
sbb
jle
sub
loope
jmp
repz
mov
push
out
lods
and
out
fcmovnb
imul
das
jae
jmp
lret
enter
cmp
sbb
mov
add
push
das
push
mov
add
mov
imul
in
push
out
jle
daa
icebp
shll
outsl
xchg
fwait
xor
and
mov
test
jb
xchg
popf
jmp
rcrl
dec
mov
roll
shll
mov
or
fsubr
mov
out
mov
out
hlt
stos
push
dec
lcall
xchg
push
cmc
dec
sahf
cli
push
jp
clc
lods
lds
jle
cld
fwait
repz
lret
pop
xchg
mov
loope
jo
cmp
mov
dec
in
dec
jl
push
es
mov
mov
dec
repz
jge
mov
or
mov
xor
pop
je
push
xchg
cmpsb
popa
fcompl
out
ret
pop
dec
mov
aaa
lods
fs
pop
jne
fcoml
or
dec
icebp
test
addr16
nop
or
and
adc
adc
pop
xor
sub
mov
fs
push
outsb
test
inc
pop
pop
jnp
and
jl
and
inc
outsl
or
iret
repz
jo
lock
pop
mov
mov
cmpsl
je
sub
stos
sub
jge
cmc
cmp
add
xor
xor
out
out
xchg
call
insb
rcr
add
jg
nop
pop
add
pusha
fwait
mov
hlt
push
icebp
jb
mov
es
aad
mov
inc
mov
inc
jae
push
dec
and
mov
sbb
push
movsl
jbe
out
xor
cs
mov
jae
icebp
push
xchg
or
fcomps
mov
jge
xchg
jmp
test
nop
xor
loop
xchg
in
je
mov
adc
inc
cli
test
dec
pop
lds
std
mov
jbe
mov
xchg
scas
mov
mov
pop
pop
adc
ss
pop
add
push
orb
mov
clc
sub
push
cmp
xchg
pop
stc
push
test
sbb
scas
push
jecxz
cmp
add
pusha
divb
or
jl
mov
inc
mov
or
push
jecxz
inc
pop
pop
popf
mov
or
aam
jge
mov
jle
xor
mov
out
jmp
mov
dec
lret
es
xor
test
cmp
add
push
or
push
inc
movsl
xchg
cwtl
adcb
mov
call
rclb
outsb
outsl
aaa
and
sbb
sahf
into
jge
inc
push
sub
sub
mov
add
sbb
mov
push
xchg
xchg
cltd
adc
pop
aaa
ds
fcompl
fistps
and
sahf
stos
xor
jmp
and
adc
mov
pop
add
fdivr
adc
pop
call
xlat
or
cld
sub
push
aam
imul
stos
out
icebp
push
in
arpl
fnstsw
or
sbb
mov
mov
jge
std
negl
jge
sbb
mov
int3
sbb
and
or
push
sub
sbb
pop
iret
cltd
scas
cmp
xor
push
ja
sbb
mov
mov
int3
imul
push
aaa
jmp
lret
cmp
mov
push
jb
insl
and
int3
mov
repnz
ja
gs
cmp
repz
aas
addr16
add
cmp
loop
shll
or
or
add
int3
movsb
mov
xchg
xorb
and
std
les
outsb
xchg
push
icebp
out
pop
sahf
xor
mov
dec
mov
out
test
push
xorb
shll
or
repz
insl
push
jecxz
mov
shl
sub
inc
cmp
fwait
xchg
sub
movsl
addr16
call
popf
jl
js
nop
fiaddl
das
insl
mov
lahf
test
xchg
xchg
add
xchg
imul
test
int
js
mov
jno
add
test
into
lods
and
into
dec
mov
ret
dec
incb
mov
mov
dec
and
jbe
icebp
aad
iret
call
push
dec
and
cmp
subl
mov
mov
dec
push
jno
pop
int3
cwtl
sahf
icebp
cmp
shl
xchg
xchg
push
cmp
sub
into
arpl
xchg
cmp
cs
sbb
and
cmp
add
mov
sbb
push
jns
in
push
pop
sbb
mov
pop
dec
add
add
fcmovu
adc
cmpl
leave
and
push
fisttps
test
inc
adc
orb
es
in
push
and
enter
sahf
bnd
ja
pop
clc
sbb
sub
stos
repnz
fcomip
jae
addb
inc
outsl
mov
cltd
jp
clc
adc
nop
cmc
mov
pop
fidivs
cwtl
cmp
jge
push
pop
or
adc
rcr
adc
icebp
or
mov
nop
sub
jbe
add
aad
scas
inc
dec
mov
add
ret
rorl
jecxz
aas
sub
mov
pushf
xorl
sahf
sbb
mov
fcmovne
scas
xorl
xlat
repnz
adc
or
pop
aam
sub
xchg
xor
sbb
rcrl
lcall
cld
cwtl
scas
mov
mov
cmpsl
or
cmpsb
pushf
sbbl
cmp
xchg
add
cmp
shlb
jecxz
out
ja
out
repnz
es
lret
arpl
insl
sbb
push
out
lret
lods
psubsw
pop
pop
and
jl
out
jle
inc
repz
push
mov
pushf
inc
testl
xlat
cli
idiv
leave
mov
mov
sub
mov
dec
mov
stc
fsubl
rcrb
xchg
jmp
mov
or
gs
mov
and
je
pop
lock
in
imul
pop
dec
enter
pop
fistl
dec
imul
rcrb
jae
icebp
push
inc
aam
mov
in
mov
lret
mov
lods
mov
ss
hlt
jg
in
in
enter
mov
movsl
out
mov
push
sarl
scas
cwtl
mov
daa
loope
add
add
lods
fwait
sbbl
jbe
pop
push
pop
mov
fstpt
idivb
fstpt
pop
xchg
in
daa
rcrb
jge
mov
mov
sub
test
xchg
xchg
call
inc
outsb
stc
push
sbb
xchg
ror
ret
stos
pop
lret
adc
aaa
inc
add
lret
mov
fs
inc
es
pop
adcl
or
jbe
aad
lcall
dec
nop
fcoml
addl
pop
sahf
outsl
jg
sarl
jmp
mov
dec
divl
cmp
aam
les
out
fnsave
sbb
dec
lahf
jb
test
cli
push
jbe
scas
push
andb
icebp
push
sbbb
pop
cmp
in
push
gs
jmp
inc
subl
mov
and
int3
iret
ror
push
rorb
mov
sbb
js
xor
ja
out
aad
pop
pop
jno
outsl
xor
dec
xorl
pop
inc
int3
pop
inc
xchg
call
adc
mov
pop
sbb
repnz
fisttpl
xor
lock
inc
leave
adc
push
mov
jae
sbb
xchg
push
xchg
out
xchg
jle
int3
test
push
lds
adc
int
inc
add
decb
inc
and
out
inc
mov
mov
into
mov
push
fbld
dec
adc
bound
enter
and
pop
ja
xchg
stos
adc
inc
icebp
andb
adc
inc
dec
mov
std
jb
xchg
test
fstpt
inc
jns
stc
xchg
jle
stc
pop
jmp
adc
sbb
xchg
rolb
rorl
lds
das
idiv
inc
arpl
jne
push
push
sbb
stc
mov
test
jmp
mov
andl
sub
outsb
lret
cmp
fs
and
jl
sbb
loop
mov
xor
xchg
mov
pop
mov
andb
test
jns
dec
stos
clc
and
in
xchg
cld
std
leave
shll
inc
xchg
stc
loope
loope
xchg
push
movsl
aam
stc
lds
es
push
cmp
sbb
rolb
cmpsl
dec
inc
lods
mov
clc
mov
js
in
lods
dec
ja
lods
adc
mov
and
or
movsl
mov
xor
add
repz
in
stos
xor
mov
flds
push
lret
xchg
loopne
xchg
adc
cmp
ds
bound
add
inc
xchg
mulb
imul
scas
xchg
dec
and
fwait
stos
mov
dec
es
icebp
ret
les
int3
push
xchg
sub
nop
pop
rcl
sbb
or
sbb
pop
xor
adc
xor
sbb
inc
push
je
jecxz
sbb
xor
mov
cmp
lods
dec
jg
xchg
and
xchg
mov
jecxz
fadd
daa
lods
les
stos
sbb
jae
inc
loop
and
mov
push
into
rorb
add
lcall
push
getsec
add
divb
mov
xor
or
pop
sbbl
flds
mov
jp
mov
xor
out
fisttpl
daa
adc
js
lea
test
jle
push
in
insl
lock
icebp
mov
sbb
inc
xorb
cwtl
mov
sbb
jne
imul
xchg
pop
push
enter
lcall
xchg
daa
std
fistpl
xchg
pop
sbb
jae
cmpb
push
dec
imul
mov
leave
sub
adc
jp
insb
sub
test
icebp
jmp
mov
sbb
popa
xchg
daa
push
adc
fdivrs
sbb
insb
xlat
cs
push
je
add
or
movsb
fdivs
fldcw
mov
jecxz
xchg
cmp
and
fcmovne
mov
sub
sbb
outsb
dec
in
pop
repnz
imul
jp
dec
std
mov
jle
mov
je
test
paddsb
dec
std
or
ja
push
fsubrs
in
inc
dec
mov
clc
cltd
mov
cltd
sub
cmp
xchg
loopne
dec
dec
out
mov
ror
repz
and
and
les
cmpsl
rorl
mov
mov
mov
inc
xor
loop
mov
jns
cmpsl
inc
pop
int
test
movsb
pop
mov
and
ret
daa
add
roll
inc
jnp
into
aas
popf
jecxz
dec
xor
out
out
imul
lcall
push
inc
test
adc
imul
jle
shlb
sub
xchg
jecxz
xchg
sbb
test
dec
call
pushf
rcrl
inc
or
sub
adc
push
or
jl
dec
mov
mov
fimull
test
in
dec
jb
testl
lret
lahf
and
add
jnp
inc
icebp
ss
mov
fs
lock
xchg
lret
xchg
adc
push
je
xor
cmpps
fs
test
dec
data16
cmpb
sub
or
cmp
hlt
mov
fwait
aas
xor
pop
dec
xor
add
loop
fcmovne
dec
shll
loope
mov
mov
and
lock
cli
jno
xchg
rorb
cs
or
cltd
jb
mov
insb
and
mov
push
dec
and
dec
jecxz
insl
fiadds
loop
lods
scas
add
sub
or
jno
push
cld
xorl
mov
mov
jae
insl
mov
lret
sbb
inc
std
out
xlat
or
fbstp
push
imul
icebp
push
testb
push
ss
or
les
ficoml
inc
mov
dec
loope
inc
jg
mov
aam
movsb
mov
xchg
aaa
dec
or
int
mov
sub
cwtl
test
leave
cmp
popf
mov
jl
dec
mov
std
inc
les
xchg
lret
push
adc
dec
fld
or
popf
int3
in
mov
push
fnstsw
inc
mov
xchg
ss
aas
jg
pop
pushf
mov
ja
push
push
adc
test
loopne
mov
arpl
repnz
out
ljmp
adc
and
test
sub
aam
sbb
fidivrl
div
xchg
mov
push
xchg
add
mov
scas
pop
out
aaa
and
xchg
int3
outsl
aad
ret
pushf
fsubl
mov
mov
fwait
movsb
mov
push
jnp
sbb
mov
xor
sbb
fsubl
or
scas
test
sbb
push
jbe
into
call
push
push
mov
and
dec
stc
mov
and
into
mov
enter
push
push
fmul
idivl
int3
sbb
lea
xor
les
lret
push
jnp
jns
cmp
lds
cmp
movsb
fists
das
or
stc
dec
xor
sub
xor
out
jp
jecxz
xorl
sbb
mov
and
incl
loopne
push
lods
adc
and
pop
push
stc
add
xchg
ds
fcmovne
cmpsb
sub
xor
xchg
fmull
push
xor
cltd
push
scas
sbb
aam
jo
push
xchg
cwtl
or
repnz
jge
sub
aas
mov
mov
test
les
in
mov
ds
cmc
daa
and
pop
ja
fildl
aas
lock
mov
sub
and
sbb
mov
sub
mov
ffreep
sti
or
mov
js
pop
das
in
xchg
cs
or
in
inc
mov
cmpsb
add
jl
sub
inc
pusha
push
push
push
mov
call
push
in
iret
dec
scas
repz
push
pop
pop
xor
repz
or
sti
iret
cli
loop
push
inc
or
xor
pushf
int
and
les
dec
lea
push
outsl
jmp
cli
sub
cmp
mov
cs
jp
xor
imul
xchg
dec
xchg
sub
cmc
lret
out
jb
push
insl
in
iret
jno
outsb
gs
outsb
ret
and
mov
and
jne
shl
adc
xchg
movsb
inc
adcl
adc
xchg
add
mov
sub
add
addr16
mov
mov
xchg
lret
mov
addr16
xchg
das
mov
sbb
pop
sub
and
push
cmp
dec
or
xor
mov
aaa
mov
insb
aaa
jne
add
insb
arpl
outsl
xchg
sti
adc
cmp
inc
fsubs
pushf
inc
outsb
xor
sub
cmc
subl
mov
test
xchg
dec
fimuls
int3
mulb
mov
add
xor
inc
cmp
push
jecxz
push
push
je
lahf
jecxz
inc
push
mov
shlb
or
mov
dec
int3
ss
and
and
fwait
inc
fisubrl
in
inc
xor
mov
cmp
lret
sub
xor
push
xchg
fistpll
outsb
cmp
in
sahf
pushl
in
add
fistpl
xchg
jmp
pop
les
insb
sub
ds
aaa
lods
mov
sarb
xchg
rclb
iret
pop
fisubl
cmp
jae
pop
cwtl
push
jne
pop
or
fs
and
mov
mov
lcall
lea
mov
inc
or
cli
icebp
sub
inc
fcompl
dec
add
add
push
sub
fcompl
add
in
push
cmp
mov
inc
xchg
cmpl
inc
pop
and
mov
sub
sahf
cmp
mov
bound
icebp
aaa
rorb
stos
int3
test
cld
jb
das
cmp
lar
push
fwait
les
pop
add
mov
into
pop
mov
cwtl
sub
cwtl
test
push
out
cmp
inc
mov
pop
mov
xchg
dec
dec
subb
mov
xor
and
nop
std
add
adc
ret
cmp
testl
push
scas
or
scas
sbb
loopne
cmp
enter
push
lock
pop
xor
mov
xor
adc
inc
pop
mov
push
sbb
dec
mov
mov
das
rcll
cli
in
and
fs
lahf
mov
movsb
scas
icebp
dec
das
mov
cmp
and
insl
sahf
dec
pushf
cltd
add
sbb
int3
jae
xor
inc
cmp
xchg
adc
xchg
sti
mov
inc
mov
ljmp
testl
inc
inc
jb
dec
in
push
add
sub
test
and
icebp
div
stos
incb
mov
dec
in
leave
shll
jns
out
fucomi
out
sbb
mov
icebp
scas
in
adc
je
fwait
rcrl
mov
jne
lret
lods
lea
fisubl
push
push
shll
call
xchg
adc
ret
iret
aaa
test
inc
orl
inc
adc
scas
fnstsw
push
in
idiv
and
imul
out
fdivs
or
je
xchg
lods
loopne
adc
inc
iret
fidivl
ret
in
in
data16
xchg
lock
mov
sbb
or
xor
mov
sbb
das
cwtl
push
mov
mov
scas
shll
sbb
das
negl
or
jl
loope
mov
imul
frstor
xchg
mov
adc
xchg
das
imul
lcall
sub
lods
push
loop
sub
testl
xor
mov
in
out
push
pop
lea
js
fs
jns
inc
dec
fwait
adc
sti
add
xor
sbb
cmp
js
dec
repnz
push
into
lods
sahf
loopne
and
and
in
das
call
aas
fdivrl
enter
lods
clc
inc
pop
ss
xor
in
mov
js
xchg
or
adc
mov
int3
in
inc
leave
mov
xor
das
sub
sahf
out
or
shrl
out
pop
inc
outsb
in
pop
ja
push
out
fiadds
xchg
dec
sub
jo
jecxz
fsubrs
fstl
sbb
movsl
call
test
push
adc
out
jo
dec
or
dec
mov
test
insl
pop
mov
jne
je
in
xchg
cli
xor
push
dec
mov
push
outsl
mov
out
cmp
push
bound
into
push
into
add
adc
lahf
andb
ds
push
cmc
mov
out
dec
ds
addl
repnz
stos
add
fs
rcrl
sbb
aam
test
mov
add
dec
or
bound
fisttpl
les
pop
jbe
in
inc
pop
sahf
cmp
jl
mov
fcompp
mov
mov
mov
adc
int3
jns
mov
dec
shll
aad
and
xchg
fs
pop
mov
test
and
pop
lea
and
addl
pop
sbb
and
test
gs
jae
cmp
jle
dec
mov
cli
popa
jb
cmp
mov
pop
cltd
clc
lret
xchg
clc
lods
inc
add
jmp
inc
lock
scas
out
pop
addr16
pop
xchg
leave
mov
mov
jae
mov
das
mov
sbb
ror
data16
lods
mov
ja
jne
test
in
mov
jp
outsb
in
test
sbb
push
dec
testb
fs
mov
mov
movsl
int
outsl
mov
pusha
mov
in
xchg
jle
dec
shll
inc
and
gs
adc
ja
cld
insb
cmc
xchg
push
sub
adc
mov
cwtl
sbb
js
std
or
data16
ret
inc
fistpl
jge
sub
jle
shl
jne
push
negb
add
scas
xchg
push
or
data16
pop
add
cmp
xchg
add
sbb
inc
push
fdivrs
movsb
repz
inc
inc
jp
jp
pop
xlat
es
cmp
into
lds
imul
xor
int
lock
lret
mov
in
pushf
lock
jp
int3
mov
loop
xchg
adc
scas
pop
in
sbb
pop
jp
dec
mov
je
jp
subl
pop
inc
xor
not
out
out
xor
xchg
stos
adc
ljmp
outsl
mov
in
xchg
xlat
jae
xor
mov
dec
jp
lds
insb
hlt
dec
shr
mov
movsb
hlt
aad
mov
jbe
add
jbe
outsl
push
dec
add
pop
or
psrlw
lds
add
sbb
xor
test
or
jbe
mov
mov
cmpsl
arpl
jnp
cld
out
insb
xchg
pop
and
sub
sub
pop
dec
xorl
xchg
or
sbb
movsb
orl
fs
xor
cmp
push
cld
jo
jg
xor
mov
xchg
lods
mov
ss
mov
jo
or
out
dec
jnp
cmpsl
andb
in
lret
mov
sub
cmc
dec
popa
sbb
adc
outsl
push
leave
jle
adc
mov
out
outsb
fistps
xchg
cmc
sarb
out
jo
enter
pop
lods
addr16
clc
stos
jno
js
mov
push
data16
jge
push
dec
cmp
adc
loope
xchg
ds
lahf
lea
xor
fiadds
clc
mov
movsl
sbb
xor
fisubl
in
mov
cmp
xchg
out
dec
test
repz
xor
pushf
scas
std
mov
pop
jmp
and
add
out
es
mov
shll
in
test
mov
adc
push
mov
xchg
out
inc
test
adc
or
adc
fwait
roll
xchg
sbb
inc
jo
mov
scas
dec
cmpsb
adc
lret
mov
and
subl
add
mov
testb
xor
sti
lds
pop
call
lcall
push
pop
add
mov
pop
xchg
gs
mov
not
lret
or
pop
xchg
jge
mov
pop
jmp
push
movsb
ret
loopne
out
add
leave
rcrb
xchg
push
mov
pop
or
iret
cmc
ss
loope
sub
insl
jnp
add
and
add
dec
fisubs
mov
imul
xchg
cltd
cmp
mov
mov
movb
sbb
mov
mov
adc
cmp
xchg
fldcw
inc
in
jp
pop
mov
pop
dec
loop
inc
fsubl
cmp
push
xchg
lds
repz
lds
out
sub
aam
enter
mov
clc
xchg
push
push
push
cli
mov
sbb
in
aad
das
lahf
scas
dec
push
jl
stos
lcall
ja
out
ret
in
jbe
push
or
out
aam
xor
psadbw
cmp
in
minps
enter
rcll
int
jbe
adc
outsb
adc
insb
xchg
aas
in
jl
mov
out
sbb
icebp
mov
mov
sub
push
repnz
je
xor
mov
sub
es
lahf
fnsave
mov
fcmovu
cli
negb
pop
xor
leave
xor
or
sub
xor
jns
xchg
cmc
lcall
sbb
and
xchg
stos
insl
les
xchg
sbb
mov
and
xor
pop
test
and
push
call
dec
adc
mov
mov
mov
lods
adc
das
xchg
stc
loopne
jge
dec
inc
jne
fisubrs
in
mov
aad
inc
test
inc
aas
js
dec
inc
test
rcrl
fistpll
ret
cwtl
sbb
mov
and
jne
fimuls
jnp
mov
test
psrlq
cmpsl
ret
outsb
push
pop
loop
jb
sbb
call
lods
dec
lods
lock
sbb
inc
lret
adc
dec
add
pop
xor
ljmp
lock
imul
gs
shrl
clc
pop
insb
and
xchg
cld
dec
out
push
scas
into
cmp
inc
js
inc
rolw
pop
sbb
xchg
jecxz
push
lret
dec
fldcw
icebp
jo
inc
push
je
jl
pushw
mov
cmp
push
sub
mov
aad
in
cwtl
mov
mov
mov
loopnew
pop
aaa
in
inc
mov
divl
test
push
out
mov
icebp
xchg
push
jne
sub
sbb
frstor
dec
or
insb
jo
pop
icebp
inc
movsl
cli
xchg
mov
fwait
in
and
sbb
es
sbb
stos
dec
push
cltd
inc
and
jge
xor
lds
pop
loop
test
ficoms
jns
xor
mov
mov
mov
lahf
gs
sub
sbb
push
push
stos
inc
pop
push
lret
fucomi
xchg
jbe
leave
inc
insl
loope
jns
push
aam
jne
ljmp
inc
adc
cli
and
push
push
or
sbb
enter
fbstp
stos
ficompl
xchg
cmp
out
or
xor
xor
push
cmc
cmpb
sub
sti
jb
pop
cmpsl
push
enter
stos
jno
cmpsl
loopne
jle
dec
mov
dec
mov
mov
outsb
out
cmp
outsl
or
imul
jg
test
or
rcl
inc
lret
push
jmp
cmp
insl
loopne
addr16
fsubl
xchg
pop
jno
mov
push
push
jnp
mov
pop
in
push
imul
cmp
xchg
add
xchg
sbb
sbb
negl
sub
mov
dec
dec
sub
test
sbb
push
or
lsl
inc
mov
mov
loopne
js
aam
sbbb
mov
out
loopne
add
fwait
sbb
scas
jge
push
in
repnz
mov
sbb
rolb
int
or
les
imul
ficompl
loop
sbb
fwait
sbb
sbb
add
fs
imul
xchg
jle
mov
daa
cmc
movsl
insl
repz
addr16
nop
xchg
mov
lods
rolb
or
cltd
jnp
loop
daa
loopne
ss
outsb
mov
popl
mov
cli
test
call
xchg
cmp
ljmp
sbb
ljmp
push
and
xchg
sbb
mov
rcl
jno
jge
push
jbe
movsb
jmp
sub
push
dec
lods
outsl
add
jnp,pn
pop
lcall
rcll
arpl
test
and
aaa
lea
inc
scas
leave
sahf
lcall
add
cmp
dec
test
test
sub
shll
adc
adc
lret
int3
and
sub
push
push
mov
sti
and
push
das
clc
loopne
ljmp
adc
pop
xchg
or
sub
bound
int
mov
cmp
subl
cmc
hlt
es
sub
fimuls
lods
vpmacsdql
aaa
or
mov
aaa
add
jle
adc
mov
mov
push
jle
xchg
mov
insb
xchg
and
in
dec
mov
add
sub
lea
in
leave
mov
orb
cmp
aas
dec
sti
aam
in
mov
stos
push
cmpsl
cmp
sub
cmpsb
icebp
daa
cs
inc
dec
in
adc
xchg
push
shll
mov
or
cmp
es
loop
sbb
outsb
enter
mov
mov
and
dec
into
pop
cmp
cmp
push
aaa
cmc
or
popf
ds
fcmovu
data16
in
insb
xor
push
sub
icebp
test
iret
xlat
and
cmp
cmp
push
mov
ljmp
pop
jne
cwtl
mov
sub
stos
les
mov
cltd
push
pop
lret
and
nop
jae
jl
mov
xor
popa
pop
and
outsl
pop
das
dec
in
fnstenv
push
xlat
adc
mull
add
push
loop
call
xchg
push
addr16
mov
mov
aad
test
fs
mov
fcmovne
push
in
add
add
pop
cmp
mov
std
cmp
dec
addr16
mov
dec
xchg
bound
cwtl
mov
test
push
add
sub
aas
fistpll
dec
inc
rcrb
out
adc
iret
lods
shr
jo
jb
outsb
mov
xchg
in
sbb
sbb
jmp
inc
iret
push
push
cmpsl
inc
cli
adc
in
xchg
sub
stc
add
insb
sbb
mov
fdivrl
mov
test
loope
jne
in
insb
push
mov
push
fs
jo
sbb
jecxz
pop
adc
scas
and
sub
and
sub
shlb
xor
in
add
jb
ret
movsb
ficompl
out
xor
sahf
mov
push
aas
and
cltd
pop
repnz
shll
roll
mov
pop
insb
jbe
aam
mov
add
shrb
imull
fisubl
xchg
stos
sbb
sub
cmp
mov
sbb
cmp
or
mov
mov
aad
sbb
int3
xor
ret
into
loope
or
add
xchg
mov
xor
notl
lea
stc
aam
fsubr
shl
lcall
cmp
cmp
sub
push
in
push
and
lods
cmpsl
jae
jle
push
pop
or
push
lret
and
pop
mov
mov
adc
mov
mov
sub
fisttpl
mov
sbb
nop
cwtl
push
add
test
cmpsb
xor
xchg
mov
push
cmp
dec
ja
inc
adc
into
jbe
cltd
mov
jg
sbb
mov
pop
aad
jle
loope
mov
in
jmp
mov
xor
ret
add
adc
mov
ret
xchg
shlb
push
jmp
jb
xchg
call
or
and
mov
or
mov
loope
or
push
cli
daa
jle
movsb
int
or
pop
jns
mov
cmp
cmpsl
lahf
fisttps
fcmovne
sbb
and
fldt
and
popf
arpl
jmp
arpl
add
sub
fs
or
mov
lea
adc
pusha
sub
jle
hlt
dec
rol
inc
mov
mov
xchg
pop
pushf
sbb
pushf
cltd
xchg
xchg
call
repnz
mov
adc
lcall
cmpsl
je
ja
cmpsl
adc
xchg
pop
mov
test
cli
dec
test
add
in
adc
sub
out
inc
xchg
popf
and
adc
dec
cmp
xchg
mov
mov
nop
loope
insb
inc
in
jae
jmp
and
push
test
rolb
icebp
imul
lods
loopne
or
mov
add
fisubrl
cwtl
aad
stc
int3
xor
lods
mov
inc
inc
je
imul
push
shr
lock
mov
dec
fbstp
popl
movsb
testl
pusha
call
cmpsb
push
dec
or
lret
mov
jns
mov
out
ret
decb
pop
cmpsb
jmp
mov
or
mov
in
lock
in
scas
inc
cs
xchg
arpl
test
xor
pop
xchg
jo
mov
jg
xor
jb
ficompl
dec
iret
out
and
ret
xchg
pop
or
pop
loop
in
inc
stc
xchg
stos
lcall
fcmovnu
cmpsl
lods
in
jle
in
rcll
mov
xchg
add
or
lahf
xchg
cmc
pushf
into
repz
cwtl
add
and
jns
cmpsb
mov
jb
sbb
xchg
dec
cs
aas
stc
sub
aas
push
jae
jp
in
fstl
mov
lea
sub
testb
arpl
in
jmp
dec
stos
test
dec
add
push
dec
sti
movsb
in
ljmp
repz
aad
xchg
fucomi
mov
je
fs
lds
popa
mov
shll
jp
adcl
xchg
pop
cld
ret
dec
iret
push
icebp
sbb
bound
lods
std
sbb
or
push
hlt
loopne
mov
jge
mov
jmp
ret
sbb
cmp
sub
xchg
test
test
pop
pop
sahf
mov
jb
jo
jae
push
cmc
ljmp
mov
addr16
lret
jae
ret
and
xchg
add
and
bound
jae
xchg
sbb
into
jle
mov
xchg
rorl
cmp
loope
push
xchg
movsl
ja
pusha
sbb
xchg
sti
add
xchg
sbb
ret
sub
jb
mov
sub
xchg
sbbl
std
jb
inc
sub
cwtl
in
aaa
xlat
pop
jno
adcl
cmpsb
dec
cmpsb
shll
in
mov
push
fistpl
mov
inc
fildl
xlat
sbb
push
or
mov
xchg
or
out
jno
or
int
inc
aam
xchg
or
out
cwtl
in
testb
das
inc
push
mov
xor
inc
sub
jle
jl
xor
mov
cmpsl
mov
cs
or
imul
loopne
mov
push
je
es
sti
mov
sbb
xchg
out
dec
mov
loope
sbb
and
int3
cmpsb
mov
ret
pop
not
xor
addl
shrb
std
mov
cmpsb
sub
jp
jl
add
jnp
push
ror
std
repz
add
push
lret
or
mov
xchg
repz
jns
xchg
leave
in
push
and
or
in
inc
inc
rorb
push
add
arpl
push
jnp
pop
fbld
xor
std
cmpsb
sbb
cwtl
shr
stc
inc
push
mov
popa
fists
pop
jle
out
int
lock
out
lock
popf
jmp
push
sub
add
jle
and
push
jl
mov
outsl
cmp
lock
mov
jns
rcrl
stos
xchg
push
jmp
lds
mov
push
cmp
imul
movsl
iret
mov
frstor
movsb
test
aam
sbb
xor
call
xchg
inc
icebp
dec
xor
pusha
lret
jle
jg
sbb
in
test
sar
xchg
adc
iret
out
push
shlb
je
mov
outsl
fdivrl
add
mov
xor
mov
test
mov
pop
insl
jge
sbb
fsubrs
mov
or
dec
dec
lds
jge
repz
sbb
popf
jnp
sbb
mov
cmp
in
xorb
jmp
pop
cwtl
xchg
dec
es
popl
aaa
lcall
sbb
cmpsl
mov
inc
pop
data16
in
mov
scas
jae
pusha
clc
int3
dec
xchg
dec
jmp
mov
pusha
mov
sbb
cmp
shl
push
push
xchg
dec
pop
outsl
rorb
push
xor
sbb
mov
dec
js
mov
lcall
lock
pop
pop
pop
mov
aaa
pop
test
cmp
xlat
jge
sub
sahf
sarb
cmpsb
icebp
pop
push
mov
add
popa
adc
xchg
mov
mov
or
scas
lds
loope
shl
daa
jmp
aas
cmpsb
sbb
sbbb
in
ret
fstpt
pop
cmpsb
inc
jge
ds
cmp
push
roll
rcll
mov
sti
sub
jnp
push
sahf
jae
mov
push
out
test
and
add
cli
mov
jb
je
lea
jnp
mov
outsb
inc
mov
add
push
push
or
sub
lods
add
data16
xorb
sub
add
fcmovb
lods
xlat
stc
test
icebp
mov
mov
mov
jmp
in
insb
mov
mov
inc
mov
jl
lea
mov
and
out
or
decb
jmp
mov
sub
and
xorl
adc
shrl
insl
fsts
repz
fisttps
push
and
cs
cmc
cmp
addr16
sbb
mov
or
xor
jo
cli
ds
mov
jmp
push
jns
xchg
andl
jp
sbb
pop
icebp
sbb
aas
sbb
xor
out
dec
cli
dec
fadds
cmp
subl
adc
rcll
pop
shrl
mov
jecxz
js
outsl
add
cmp
fstl
pop
push
mov
lahf
sub
mov
add
jb
mov
rorl
dec
mov
adc
jbe
push
or
or
out
sbb
in
jg
int
dec
cs
das
les
mov
mov
jl
jbe
add
sbb
jg
cli
mov
clc
cmp
and
sahf
ds
pop
push
loope
adc
sub
xchg
mov
rclb
push
jmp
mov
loopne
or
sarb
xchg
xor
hlt
mov
jb
into
clc
jp
adc
out
ljmp
ljmp
xor
jae
stos
push
sbb
cltd
in
cmp
call
arpl
cwtl
mov
popa
aaa
xchg
stos
push
and
push
and
push
push
add
sub
std
leave
inc
int3
and
fsubr
add
fwait
cs
mov
and
pop
xor
xchg
cmpsb
cli
mov
cwtl
adc
cli
cld
stc
push
pop
pop
ljmp
sbb
jae
push
xchg
ret
inc
jno
scas
mov
sbb
fidivl
xlat
dec
orb
xchg
jg
mov
ret
std
xchg
fwait
outsl
push
jge
cmc
ret
rcrl
xchg
add
outsl
scas
pop
jecxz
aam
mov
or
out
mov
rorl
pop
adc
dec
lret
mov
mov
dec
lret
int3
testl
or
jnp
ja
mov
mov
dec
icebp
test
cltd
jg
ficomps
call
mov
adc
jb
cli
jb
add
inc
mov
fdivs
xorb
stos
push
sbb
inc
xchg
jae
stos
push
inc
sbb
push
fsubrl
insl
int3
stos
daa
mov
ror
test
or
and
shll
jnp
pushl
mov
xchg
ret
fwait
pop
fnstenv
enter
jne
outsl
xchg
pop
mov
sub
mov
cmp
push
call
sbb
test
mov
push
scas
jmp
mov
dec
and
lods
dec
mov
imul
jp
inc
aas
testl
out
lcall
lahf
mov
enter
je
pop
inc
and
ja
push
xchg
mov
mov
cmpl
jl
jle
rcrl
dec
pop
lahf
mov
dec
iret
scas
or
dec
or
ja
sbb
mov
mov
push
jae
insl
addr16
pop
stc
ja
sbb
dec
scas
sbb
outsb
pop
dec
or
jmp
xchg
aad
pop
or
and
xchg
mov
sbbl
jle
outsl
xlat
xchg
cmp
addl
test
mov
pop
inc
sub
jae
fdiv
divb
and
cmpl
xorb
rclb
push
inc
dec
shlb
xchg
mov
xchg
or
incl
test
push
popa
mov
adc
push
jns
stc
adc
pop
shl
cltd
mov
lret
popa
push
hlt
lock
xor
push
mov
imul
filds
ss
pop
les
push
cmpsl
pop
addr16
sti
push
dec
jbe
sbb
lods
sub
sbb
out
addr16
shll
sbb
inc
mov
mov
lret
or
push
pop
sbb
ret
iret
in
jp
loop
out
dec
dec
fsubrs
mov
scas
adc
add
test
pop
loop
jp
pop
in
push
jo
ficoml
sbb
mov
loop
mov
push
lcall
sbb
arpl
pop
negb
xchg
int
jecxz
loope
test
jge
imul
int
out
cmc
mov
cmp
xor
call
in
inc
inc
pop
or
mov
enter
cmp
mov
sub
clc
dec
jae
stos
pop
fwait
mov
gs
js
mov
mov
cmp
mov
mov
popa
mov
js
jne
in
orl
xchg
stos
mov
stos
inc
dec
in
xchg
repnz
jp
aad
push
lcall
lret
add
das
and
mov
mov
ret
jecxz
lret
adc
test
cmp
inc
popw
jnp
ret
cmp
inc
add
insb
mov
cli
adc
fists
pop
dec
aam
or
pop
imul
xchg
inc
jno
inc
cmc
mov
outsb
xor
fisubrl
lret
pop
pop
jmp
pop
loop
int
xchg
lock
cli
inc
test
paddusw
push
imul
jg
lcall
aad
mov
or
movsb
jg
out
and
je
cmp
mov
popf
mov
mov
mov
add
subb
and
fdivrs
fdiv
clc
mov
cs
fcoms
pop
xchg
fwait
and
sbb
shll
lahf
jb
dec
mov
fcompl
daa
cltd
es
pushf
or
shl
sub
fisttps
sbb
rcll
shll
xor
lods
jo
push
pop
arpl
sbb
stos
out
in
test
inc
std
ror
pusha
loopne
out
and
xor
sarl
cmp
bound
or
sarl
pusha
sets
rcrb
aam
mov
pop
out
pop
mov
mov
ret
loopne
fwait
ja
test
push
addb
sub
add
clc
fidivrs
ja
cmp
xor
xlat
lods
push
mov
and
loop
pop
outsl
sub
mov
movsl
outsb
aas
jmp
adc
das
shl
rep
lock
or
fwait
into
xchg
jae
lea
push
jno
ljmp
stc
nop
xor
cmp
lcall
adc
mov
jnp
push
fsubrp
loop
lea
ss
push
push
mov
in
or
dec
out
sbb
push
lods
aaa
or
out
xor
in
jns
mov
shr
ja
gs
aad
sbb
add
stc
ret
adc
or
test
xor
mov
add
mov
jle
mov
int
orl
push
xor
xor
fucomp
pop
loope
adc
xor
cmp
addr16
push
push
sbb
mov
ficompl
jp
adc
aad
add
sti
xchg
inc
or
iret
pusha
stc
sub
stc
cmp
pop
cmp
add
mov
xchg
sub
sub
lahf
addl
mov
xchg
aaa
ljmp
pop
fcompl
sbb
jne
out
hlt
arpl
insb
test
rcll
test
mov
sbb
es
jnp
hlt
into
mov
add
test
mov
mov
rclb
push
fidivrs
push
mov
push
mov
or
pop
repnz
jmp
lret
cmp
or
adc
mov
ret
xor
ret
xchg
fnstcw
in
movsl
sbb
cmp
sub
sbb
sbb
pop
jg
and
pop
adc
push
xor
sub
aas
int3
push
xchg
mov
cmp
rcl
cwtl
sbbl
pop
sbb
xor
mov
xchg
jb
lcall
enter
repnz
addr16
adc
mov
call
jne
jne
out
mov
sbb
xchg
mov
xor
mov
push
mov
leave
fldt
mov
cs
mov
and
jecxz
jle
nop
inc
inc
and
mov
nop
mov
packsswb
stos
xchg
mov
sti
add
mov
inc
sbb
mov
xlat
push
inc
pop
loop
out
lods
pop
lret
nop
push
jbe
scas
push
into
bound
lods
pusha
lods
mov
xchg
or
mulb
lcall
adc
and
mov
and
fcompl
lret
movsl
adc
mov
add
es
add
in
sti
jmp
cmp
rorb
imul
mov
mov
xchg
mov
cmp
mov
std
sbb
mov
nop
xchg
cmp
inc
jp
xchg
popa
pop
imul
insl
hlt
and
int3
dec
mov
add
xchg
sbb
cld
mov
pop
jg
rcrl
jle
sbb
add
add
test
adc
pop
pop
rolb
fdiv
push
lcall
les
aad
outsb
aaa
inc
in
out
shl
mov
mov
ds
in
inc
xchg
fsub
lret
add
add
xor
adc
mov
fs
jb
insl
xchg
xchg
dec
loope
lahf
and
mov
and
ja
xchg
faddl
sbb
pop
sub
cmp
inc
call
in
repz
push
stos
cmp
jle
xchg
lahf
testl
aas
or
pushf
mov
jb
cmp
xchg
jmp
roll
fidivl
fcoms
or
jp
arpl
add
and
xchg
sbb
mov
push
add
mov
xchg
mov
xor
lcall
mov
mov
dec
ja
imul
out
add
pop
lods
dec
inc
fcomps
nop
mov
fucom
shrl
lcall
cmpl
mov
nop
xchg
xchg
ss
inc
lret
test
stc
add
mov
aaa
xchg
std
xchg
arpl
dec
shrd
psubsb
gs
or
enter
rorb
pop
sub
sbb
bt
add
pushf
mov
sub
aaa
movsb
xor
enter
cmp
shl
cmp
pop
aaa
mov
ret
stc
ficompl
test
adc
mov
cltd
dec
mov
dec
push
inc
mov
lods
and
aaa
cmpsb
ret
cmp
das
ret
mov
and
jb
lods
dec
stc
and
cmc
dec
scas
dec
pop
xor
je
arpl
das
jae
nop
jb
dec
mov
fnstenv
mov
or
push
sub
mov
cld
cmp
cmpb
pop
in
jb
pop
mov
mov
mov
ss
mov
jnp
sbb
pop
jbe
push
adc
loop
push
mov
ljmp
sbb
popa
mov
cmp
dec
nop
sub
and
mov
sbb
xchg
inc
in
xchg
push
roll
push
ds
rcl
icebp
int
and
adc
outsb
inc
pop
mov
and
insb
pop
divl
and
lret
pop
pop
sbb
lahf
mov
xchg
xchg
test
jb
das
cmp
daa
inc
or
sahf
jbe
sbb
adc
pop
adc
xor
mov
push
mov
mov
ficompl
or
push
cmpsl
mov
sarl
sbb
xor
mov
jg
out
popa
mov
pusha
je
not
add
mov
ljmp
bound
pusha
jg
pop
pop
push
jnp
in
repz
js
and
orl
dec
js
or
mov
adc
fdivrp
mov
mov
push
in
ficomps
pop
hlt
out
in
rorl
lcall
and
mov
test
cltd
not
ret
cmp
sti
xchg
and
negl
sbb
mov
jb
adc
mov
cmp
ficoms
sub
nop
sbb
pop
mov
pop
loope
iret
jmp
icebp
pop
add
arpl
sub
stos
mov
rcrl
mov
pushf
cltd
pop
adc
ljmp
mov
gs
es
or
jmp
sbb
leave
xor
mov
dec
in
pop
push
fldcw
sub
xor
mov
sahf
flds
xchg
inc
jbe
std
xor
sub
pop
xchg
and
cmp
add
inc
mov
int3
or
xchg
sarl
stc
lcall
jmp
fs
mov
das
in
icebp
push
or
pop
aad
ss
dec
sbbl
inc
jb
add
clc
sub
aam
ljmp
sbb
sub
pusha
mov
sahf
stos
lret
frstor
ja
cmpsb
push
inc
pop
aas
leave
ljmp
bswap
movsl
inc
lds
or
loop
inc
xlat
js
pop
mov
mov
dec
bound
cmc
cltd
in
jns
cmp
pop
std
xor
add
jb
aam
aad
push
insl
dec
lea
mov
pusha
or
ret
outsl
and
movsl
jnp
addr16
insl
sbb
cmpsb
or
add
scas
popf
xor
lret
fst
sub
adc
data16
push
iret
dec
inc
mov
mov
sub
mov
adc
sbb
adc
xchg
xor
sti
xchg
movsb
test
adc
xchg
gs
insl
push
ffree
pop
sub
jae
mov
jge
in
add
or
pop
daa
jle
sti
stc
sahf
repz
ljmp
mov
push
test
mov
outsl
adc
shl
adc
mov
mov
dec
shrb
stos
push
or
push
jl
mov
cltd
xor
xor
mov
pop
popa
js
ja
push
call
xchg
in
cmp
adc
test
std
inc
dec
dec
push
sub
or
dec
roll
fcoml
stos
ror
adc
add
aad
push
arpl
jg
inc
mov
and
addl
xor
xchg
pushf
or
cmp
enter
pop
fimull
mov
icebp
dec
sbb
mov
pop
pop
mov
int3
mov
shl
push
fldcw
xor
jp
aad
adc
movsb
pop
and
mov
mov
sbb
int
inc
ljmp
ljmp
pushf
xor
jg
dec
ret
sbb
push
sarl
cmp
fnstcw
test
fs
mov
popa
push
pop
dec
negl
add
pop
jnp
sub
jmp
sbbb
sub
leave
push
cmp
mov
mov
xchg
jnp
std
enter
jbe
xor
mov
xchg
pop
xchg
mov
jns
addl
ds
sarb
popa
fnsave
xor
inc
adcb
fs
cld
mov
mov
add
and
mov
lods
cmp
jb
into
sahf
sti
leave
xor
lods
and
xchg
mov
xlat
mov
sub
rol
test
insb
inc
sarb
movsl
push
mov
je
push
std
movsl
imul
sbbl
cmp
jecxz
cs
pusha
mov
sub
shl
shl
lock
gs
in
mov
mov
iret
and
fidivrl
shl
sub
pop
inc
fcompl
aas
es
jp
test
xchg
cltd
fadds
push
push
stos
in
sub
add
sub
insl
or
loopne
mov
out
inc
jp
pop
cwtl
movsl
jle
shll
dec
dec
pop
jno
add
cmp
add
sbb
sbb
mov
daa
pop
push
out
fcoms
or
mov
out
or
xchg
jo
nopl
mov
test
addr16
jmp
jb
movsl
mov
cmp
push
mov
fcmovne
mov
xchg
ljmp
add
ret
adc
xchg
dec
push
test
mov
mov
xor
mov
inc
addr16
repz
mov
jns
xchg
mov
data16
inc
mov
in
arpl
push
insb
ret
pop
mov
cmpsl
dec
repz
jecxz
mov
sbb
push
add
adcb
fcmovnu
dec
lcall
test
xchg
js
or
adc
pop
lret
mov
jg
mov
inc
in
inc
mov
mov
je
insb
fdivrl
pusha
cmp
test
dec
test
insb
mov
push
inc
mov
inc
adcl
push
sbb
adc
mov
aam
mov
xor
cwtl
push
mov
and
jb
mov
push
mov
inc
mov
sbb
push
xchg
ret
in
mov
cmp
xchg
dec
ja
mov
jle
cli
jmp
sbb
daa
rcl
cmpsl
iret
es
push
scas
xchg
out
arpl
outsl
cmc
inc
sbb
pop
mov
lds
scas
outsb
push
call
mov
jle
pop
xor
js
out
push
popf
jmp
xchg
mov
nop
push
jge
repz
sub
test
mov
sbb
cmp
mov
xchg
dec
cmp
leave
cmpsb
add
adcl
xor
pop
aad
cld
or
jne
arpl
cwtl
out
push
sbb
shl
jo
shll
pushl
aas
jnp
roll
cmp
repz
test
lret
xchg
sbb
add
iret
inc
stos
pusha
sarl
cmp
inc
scas
in
pop
imul
jp
xchg
pop
into
pop
mov
xchg
out
sbb
cmp
mov
inc
inc
leave
sti
pop
pop
mov
imul
ss
add
push
push
mov
inc
inc
pop
or
pop
mov
movsb
dec
ret
test
push
mov
inc
fimull
sub
xchg
and
mov
or
int3
bound
xlat
js
adc
js,pn
addl
xor
inc
shlb
test
inc
test
repnz
lcall
mov
jb
jmp
dec
sbb
mov
and
insb
pop
dec
mov
cmp
xor
mov
sub
fists
pop
out
decl
stc
mov
shr
gs
inc
fs
adc
pop
mov
mov
cs
mov
movsl
xor
lods
sbb
pop
out
inc
loopne
lcall
shll
lds
adc
dec
cli
dec
pop
call
push
push
push
mov
repnz
and
mov
xchg
rolb
arpl
rclb
and
xor
adcb
push
ret
and
add
mov
movsbl
idivl
cmp
call
adc
sub
outsb
scas
push
enter
test
adc
std
mov
mov
loopne
sub
sub
daa
sub
xchg
jb
inc
scas
xor
jb
int
adc
mov
or
jae
orb
push
in
sbb
outsb
cmpsl
inc
dec
in
adc
dec
out
icebp
scas
rorb
aas
mov
dec
sub
lods
cmp
push
outsb
push
xor
mov
add
pop
jae
jp
xor
mov
xor
mov
and
bound
out
in
adc
lcall
or
mov
nop
jns
and
push
and
cli
sub
icebp
push
adc
int3
sahf
jns
dec
push
xlat
dec
cmp
icebp
les
add
or
jae
cltd
jb
adc
sbb
movsl
popl
jmp
mov
lock
jge
xor
xchg
adc
dec
je
xor
cwtl
cmpsw
sbb
loopne
rcll
orb
xor
xor
rolb
xchg
cmc
mov
fistps
xlat
push
sbb
hlt
lods
ds
mov
add
mov
xor
nop
aaa
gs
fnsave
rolb
ja
bound
mov
fwait
add
xchg
out
or
divl
and
addl
cmp
xchg
into
jmp
xor
ss
iret
xchg
push
test
sub
std
cs
hlt
ljmp
imulb
enter
mov
lods
mov
push
inc
pop
or
cwtl
xchg
sub
and
frstor
xor
adc
and
jns
sbb
push
movsl
mov
ret
sub
mov
les
pop
push
pop
shlb
rcrl
jmp
and
sbb
adc
insb
test
hlt
lock
dec
cmp
sarb
stos
dec
insl
rorb
jmp
or
jne
int
cmp
jg
cmp
push
mov
xchg
mov
inc
sub
xor
push
repnz
out
test
cs
lock
outsb
sbb
jbe
add
int
lahf
cmpb
mov
xchg
adc
insl
inc
push
jmp
std
sbb
stos
fsubr
js
rcl
inc
clc
jns
cwtl
lods
push
dec
lret
xor
testl
out
sub
adc
sub
and
mov
xchg
pusha
sub
orl
lods
les
adc
and
push
outsb
mov
sub
stos
cmpb
int
add
or
or
and
scas
jno
add
stos
insb
pop
xor
pushf
leave
ret
push
xor
sub
sub
push
cltd
pop
or
hlt
cli
insl
jl
arpl
ljmp
imulb
inc
mov
cmp
hlt
push
jae
subl
lret
adc
mov
negb
dec
pop
sbb
xor
mov
fstp
js
inc
fdiv
cli
mov
pusha
gs
push
jo
cmp
xor
mov
insl
stc
cmpsb
xchg
ret
jae
mov
mov
jbe
push
shl
lea
mov
pushf
push
cmpsl
std
add
rclb
in
cmc
movsb
inc
ja
fldt
or
test
adc
xchg
bound
fwait
sub
scas
jmp
push
cmp
cmpl
das
ficoml
xchg
scas
inc
mov
cmp
sahf
arpl
push
popa
cmp
out
mov
cmc
push
test
mov
adc
test
push
enter
addl
lods
out
sahf
fisubrl
je
push
xchg
decb
sbb
and
jg
push
pop
in
addr16
inc
inc
ss
mov
xchg
icebp
icebp
xchg
and
enter
inc
mov
data16
daa
daa
test
aad
push
fimull
ficompl
addr16
or
jne
shrl
cmp
sahf
out
fstpl
pop
clc
sbb
push
xor
scas
pop
sub
subb
cmp
in
add
pop
and
outsb
xor
repnz
sarb
sbb
inc
rcl
cltd
inc
inc
fmuls
or
push
leave
js
fsubrl
rcrl
sbb
sarb
jl
mov
fdivl
mov
data16
or
out
stos
mov
push
sub
pop
xchg
mov
fst
xchg
shr
add
inc
inc
popf
mov
imul
mov
xor
aaa
outsl
outsl
mov
adc
mov
jmp
adc
js
dec
cmpsb
repz
xchg
test
outsb
shrb
mov
dec
iret
jb
dec
aad
pusha
inc
jge
sbb
add
imul
push
fnsave
push
jl
daa
sub
js
and
xchg
or
fiadds
fsubrs
mov
jb
sbb
mov
pop
cmp
mov
test
and
or
popa
icebp
xor
jmp
ds
xor
es
adc
lods
add
mov
sub
cs
stos
pop
movsb
dec
and
push
xchg
imul
cmc
bound
rclb
jmp
in
dec
adc
sahf
mov
xchg
xchg
dec
lds
test
mov
in
stc
and
xchg
xchg
xlat
mov
in
sub
mov
fbstp
push
jge
fisubs
in
fs
mov
push
add
jge
and
rcrb
jecxz
adc
push
pushf
iret
push
sbb
ret
jne
inc
ja
sbb
inc
cmp
pushw
sbb
imul
aam
and
and
jno
mov
aam
add
into
divl
push
jg
roll
and
sti
xor
je
xchg
negb
mov
lods
adc
jns
lea
lahf
loop
addr16
or
fwait
cmpsb
andb
cmp
icebp
mov
stc
cmc
loopne
mov
clc
fistpl
mov
fists
hlt
outsb
push
movsl
xor
loop
das
shrb
lcall
bnd
movsl
ret
stos
call
mov
aas
repz
sbb
sub
rorb
les
sti
mov
jl
jne
xchg
mov
enter
jg
mov
sub
or
add
jl
daa
xchg
sub
pop
and
dec
dec
repz
loop
movsl
adc
loope
pop
lcall
mov
mov
loop
xchg
mov
ljmpw
sbb
jbe
add
pop
add
xchg
add
mov
mov
test
add
or
cltd
cmpsb
insl
xor
loop
mov
mov
int3
lock
sub
cli
xchg
loop
add
loop
pushf
pop
mov
push
and
push
repz
pop
add
pop
mov
pop
outsl
fs
mov
out
mov
pop
popl
pop
adc
and
sub
out
hlt
mov
xchg
in
cmp
push
iret
jecxz
or
xchg
sbb
jnp
adc
je
movsl
lret
dec
push
clc
xor
cli
mov
dec
adc
push
in
or
pop
sbb
lea
cltd
mov
pushf
outsb
dec
push
test
js
sub
inc
int3
std
movl
mov
jg
mov
aad
repz
orl
mov
jecxz
jnp
std
jle
mov
rolb
fstl
mov
xor
push
aam
shr
push
xchg
roll
sub
xchg
jecxz
pop
cmc
mov
pusha
stos
sbb
xchg
cmc
cmp
shll
adc
lcall
adc
lcall
add
stc
je
mov
jecxz
pop
sbb
imul
jno
adc
jg
sub
sub
pop
insb
inc
push
or
lods
in
pop
lods
mov
js
mov
push
in
or
push
clc
cmp
es
xlat
and
pop
das
shll
jg
aas
jno
mov
push
sub
ror
movsl
cld
in
xchg
pop
fildl
ret
stos
jne
cwtl
jbe
imul
test
test
lods
sbb
daa
pop
mov
in
cmpl
and
addr16
jns
je
sbb
gs
in
icebp
arpl
mov
pop
lret
sbb
xor
cmp
cltd
mov
pop
mov
push
test
mov
lahf
or
mov
imul
lods
ficompl
xchg
addb
lret
or
shll
movsl
mov
jecxz
or
int3
lods
movsl
sbb
pop
loopne
inc
push
mov
xor
push
mov
jmp
arpl
jmp
arpl
mov
gs
sub
inc
out
sbb
pop
mov
cmpsb
and
cmc
push
xor
sahf
adc
xchg
frstor
fwait
cli
fsubrs
inc
sub
mov
aas
jns
pop
sub
and
and
out
pop
jns
pop
aas
xchg
adc
adc
das
cmpb
nop
add
mov
mov
sub
cld
dec
data16
loope
mov
xor
rorl
push
or
cmp
dec
jg
pushf
out
push
aas
dec
mov
inc
sbb
push
jmp
sub
cmp
xchg
mov
in
loop
out
or
out
rolb
sbb
xchg
mov
lahf
rclb
xor
pop
das
mov
imul
fnstsw
inc
jmp
aad
xor
test
fldl2e
cmp
and
xchg
cli
out
mov
xchg
in
sar
mov
lods
hlt
xor
push
pop
pushf
pop
jge
scas
xchg
mov
fnsave
xchg
xor
out
push
xor
xor
and
adc
sbb
out
push
xchg
cwtl
push
inc
push
or
xor
in
push
out
je
int3
insl
xchg
incb
into
loop
sub
mov
jns
stos
cmp
mov
xor
dec
add
test
pop
adc
mov
dec
sbb
jnp
pushf
adcb
loop
mov
xlat
fnstsw
pop
ror
movsl
test
mov
in
gs
cmp
stos
pop
jbe
cmp
and
jl
aam
xchg
and
sbb
dec
in
jno
pop
lock
cmp
sub
jecxz
push
mov
mov
add
setp
aam
pop
in
add
push
ljmp
outsb
fwait
or
ds
popf
roll
xchg
mov
aam
sbbl
or
enter
and
fcmovu
adc
cld
test
xchg
mov
dec
int
or
inc
imul
cmp
hlt
xchg
fs
pop
lods
sub
xor
fsubr
ds
and
xor
pop
ret
push
bound
ficompl
and
jnp
scas
shll
incb
add
pop
mov
inc
xchg
sub
inc
stos
insl
cs
or
or
xchg
xchg
insl
xchg
push
mov
outsl
pushf
outsb
push
and
mov
dec
cmp
adc
mov
flds
mov
ret
ret
mov
jns
lods
inc
sarb
iret
fadds
dec
push
fsubr
repnz
jae
imul
mov
aas
aaa
bound
mov
jg
mov
ja
shl
mov
mov
adc
mov
shll
repnz
and
test
sbb
sbb
insb
in
bound
shrb
sub
test
fdivs
stos
imulb
dec
pop
xchg
int3
and
cmp
fxch
jno
loopne
outsl
xor
and
outsb
or
test
push
and
adc
lds
lahf
fwait
leave
sub
lds
or
mov
fldpi
idivl
jle
cli
mov
jo
lds
and
dec
ds
ret
sbb
repnz
test
xchg
xchg
mov
xor
xchg
fidivl
lret
pop
xlat
fwait
test
rcll
cmp
sub
pop
cmpb
rcll
mov
push
fldt
or
loop
cmp
and
scas
into
inc
adc
addr16
lret
xor
dec
ss
jge
xor
leave
inc
xchg
leave
push
or
dec
sub
mov
xchg
stos
mov
mov
loopne
pop
push
mov
lods
sbb
xor
adc
dec
mov
ja
xchg
or
sub
mov
adc
cmp
in
xchg
in
adc
push
je
sarl
loopne
sahf
sbb
adc
pop
mov
dec
in
dec
jg
push
mov
jnp
dec
mov
jg
and
push
fstl
mov
sub
jns
jne
add
pop
sbb
mov
cld
aaa
cmp
imul
cmpsb
mov
aaa
leave
jle
xchg
xor
jge
adc
int
pushf
in
xchg
std
pusha
adc
subl
dec
and
out
push
push
sti
mov
push
gs
cmpsb
scas
jns
in
mov
cmp
xchg
pop
lea
subb
out
jge
add
test
dec
neg
xorl
int
or
loope
inc
les
mov
dec
pop
push
dec
movsl
mov
push
lahf
push
pop
cmp
pop
mov
or
pop
imul
jge
or
stc
push
push
xor
loopne
push
xchg
mov
in
bnd
push
stos
ds
push
sub
sub
das
cmpsb
rcl
ja
adc
int
fwait
pushf
ja
mov
movsb
pop
insb
jbe
sub
setge
inc
xchg
popf
push
cwtl
push
lcall
fisubrs
xor
test
loope
mov
sysret
int
out
test
push
loopne
or
sub
pop
outsb
cmpl
fildll
outsb
test
xchg
imul
dec
divl
inc
test
push
pop
loopne
imul
insb
sbb
popf
lahf
lret
pop
jl
lret
insb
push
jno
out
dec
lods
test
or
add
sbb
pop
inc
ds
loopne
and
fwait
or
pop
aam
iret
shll
and
popa
incb
or
adc
dec
mov
popf
fdivrp
ret
sbb
adc
add
add
sahf
jmp
push
pop
lret
jns
xor
sar
imul
push
sbb
lods
and
mov
lret
pop
push
cmp
push
fwait
out
push
mov
push
inc
and
jne
pop
lods
push
mov
xor
xchg
popf
jp
sbb
push
fwait
cmc
and
xchg
insl
cmp
dec
leave
pop
movsl
cmp
sarl
dec
add
jge
ljmp
hlt
mov
imul
in
cmpsl
fwait
dec
fnstsw
xchg
stos
in
aaa
rcrl
sbb
dec
popa
xorl
or
shlb
aas
pop
aas
decb
cmpsl
add
into
pop
mov
dec
mov
aaa
mov
mov
faddl
sarb
xchg
adc
cld
aaa
les
jl
gs
inc
loope
jecxz
cltd
or
out
adc
inc
pop
and
int
dec
les
lods
mov
and
stos
loop
int
test
ja
and
mov
fs
jno
in
cs
and
fildll
call
dec
and
jl
jmp
xor
mov
das
mov
cmpsl
pop
jecxz
cmp
dec
sub
push
ds
arpl
inc
movsl
lret
xlat
cmp
outsl
jne
es
mov
in
jp
aad
fs
out
imul
js
in
xor
mov
mov
pop
insl
cli
mov
notl
fsubs
push
repz
lock
faddp
jge
mov
or
jnp
scas
mov
gs
mov
gs
call
fidivrl
sbb
xlat
mov
ds
imul
cmpb
sbb
sub
jno
loope
pop
shrb
incb
std
imul
sbb
imulb
jg
imul
cwtl
jb
jmp
inc
hlt
cmpl
in
pusha
mov
or
dec
jnp
cmp
pop
ret
mov
popf
mov
pop
mov
push
icebp
inc
xor
jno
adc
add
inc
pusha
dec
icebp
je
enter
adc
pop
or
movsl
pushf
add
icebp
mov
pop
and
xor
call
and
jo
xor
cmp
cmp
les
in
es
xor
pushf
cmp
jb
cmpsb
mov
jns
aaa
or
ds
xor
jo
cmpsl
mov
test
nop
mov
insl
dec
arpl
jmp
cmp
xchg
mov
jb
mov
out
push
xchg
fmull
jns
in
inc
jno
loop
pop
into
jb
sarb
pop
inc
lret
jp
scas
mov
mov
loopne
mov
push
mov
fcmovnu
and
and
leave
aam
aas
in
xchg
and
push
mov
mov
dec
sbb
push
xchg
lods
cmp
std
aas
jne
sahf
mov
and
pusha
xchg
into
cs
cmp
js
cmp
repz
lea
data16
and
lods
pop
movsl
inc
jbe
xor
push
scas
dec
pop
push
ds
or
movsb
cmp
movsl
and
fimull
mov
roll
and
sub
pushl
mov
lods
mov
jbe
dec
sub
in
add
mov
jge
xor
inc
in
loop
push
lret
loopne
sarl
leave
stos
xor
or
push
rclb
and
hlt
stos
xchg
cmp
add
rcrl
test
adc
push
cltd
mov
mov
push
and
jmp
sahf
stos
mov
loopne
clc
adc
insb
jp
pushf
cmpl
push
pop
xchg
xchg
pop
cs
int
jmp
ret
insl
cmp
push
pop
push
imul
add
popf
hlt
fs
mov
sub
push
and
cmpsb
daa
fnstenv
jmp
lods
loope
cld
jmp
repnz
pusha
pop
movsb
xlat
inc
xor
inc
iret
lret
cmpsl
sub
cmp
mov
xor
pusha
dec
shll
clc
notb
jge
popf
pop
jmp
xor
gs
clc
cltd
xor
test
sub
cltd
clc
std
ds
pop
js
movsw
lods
push
stc
decb
in
in
inc
scas
sbb
iret
psubb
sub
mov
mov
jbe
dec
mov
mov
inc
loop
out
enter
mov
repz
ss
add
mov
pop
mov
mov
xor
adc
xchg
mov
jp
insb
pop
sub
loop
test
in
ja
shrl
pop
ds
xor
lods
lahf
lock
dec
sub
pop
out
push
cmp
and
dec
fistps
mov
pop
mov
or
shl
inc
dec
or
in
jo
and
sbb
lock
jns
popf
popa
jmp
mov
aas
adc
cld
dec
mov
mov
andl
fs
cli
std
mov
adc
in
loop
xor
lret
jno
push
xchg
cli
xchg
push
mov
es
adcl
sub
repnz
mov
repnz
and
cmp
into
pop
fwait
and
jmp
out
js
icebp
in
in
inc
adc
les
lcall
push
ret
mov
pusha
push
mov
xchg
lcall
or
test
scas
loopne
lret
add
cmp
ja
rcll
xchg
iret
mulb
dec
cs
xchg
lahf
mov
les
xor
xorl
out
loope
push
hlt
add
inc
adc
adc
popf
add
and
dec
mov
into
stos
test
out
xchg
leave
fsubs
outsb
dec
jmp
push
sub
and
and
sbb
xchg
or
push
movsl
rcll
and
fcomps
sub
push
lahf
adc
pop
sbb
inc
mov
test
add
in
push
xor
lods
and
sbb
cmp
sub
adc
cmpsl
mov
sbb
clc
mov
adc
push
sahf
aas
cmp
jo
xchg
cld
mov
aas
mov
lods
scas
xchg
mov
add
pop
mov
add
push
pushf
xchg
addr16
bound
cld
adc
cmp
jns
iret
sub
inc
push
mov
outsb
push
xlat
enter
mov
pop
xchg
call
negl
insb
faddp
sahf
xlat
fimuls
movsl
ljmp
cmp
mov
adc
pop
mov
sbb
cli
sbb
sub
dec
or
mov
or
outsb
lcall
repnz
ja
shlb
or
push
mov
fstl
adc
sti
lcall
lret
sub
mov
push
sti
lea
fcomip
mov
xor
cli
ficoms
mov
sbb
adc
dec
inc
cmpl
mov
jmp
mov
push
cmp
jae
cmp
fcmove
mov
iret
cmp
and
sbb
or
enter
mov
test
test
pop
jle
rorl
push
cmp
xchg
lret
sbb
call
or
setnp
push
add
sti
xchg
cmp
mov
mov
sbb
mov
rolb
mov
mov
ljmp
push
mov
pop
dec
inc
das
outsl
stos
sub
sbb
mov
fcoml
mov
xchg
pusha
sbb
xor
in
jecxz
push
jnp
stos
and
pusha
je
lods
or
dec
jecxz
push
gs
or
fisttpl
jb
in
mov
pop
push
testb
jecxz
xchg
shlb
mov
jb
push
aam
mov
sahf
icebp
xchg
mov
cmp
mov
sahf
enter
les
cli
jo
add
fisubrs
lret
cmp
in
sub
jg
shrl
pop
xor
daa
xor
fldt
pop
repnz
add
jg
test
mov
test
sti
jne
mov
cmpsb
out
cld
xchg
hlt
jp
push
adc
out
mov
sbb
lods
sti
ret
pop
and
push
mov
test
rolb
xchg
add
pop
adc
xlat
jle
jmp
dec
test
inc
inc
sbb
jne
fidivs
jge
dec
xor
push
push
dec
scas
dec
pop
je
icebp
xchg
int3
movsl
into
inc
mov
sarb
nop
repz
rcrb
mov
mov
mov
adc
mov
cmp
cmc
xor
aad
aad
add
repnz
mov
jle
test
stos
cmp
mov
cltd
or
pop
inc
or
mov
cmpsl
add
fldt
clc
subb
mov
rclb
cmpsb
add
iret
in
loopne
mov
mov
movl
cltd
stos
fistpl
mov
out
ficoml
gs
inc
xchg
pop
rorb
loopne
lcall
push
enter
jl
daa
cmpsl
cmp
push
mov
add
in
and
xchg
sub
mov
lods
and
push
mov
lods
popa
jg
je
inc
loop
out
inc
add
or
pop
xor
js
pop
iret
clc
addr16
xlat
dec
and
mov
mov
out
cli
cld
xchg
xchg
xchg
das
loope
loopne
sub
imul
sti
dec
les
mov
aas
loope
out
test
add
xlat
lret
mov
je
cmp
mov
enter
jne
xor
and
imul
subb
ljmp
out
cld
in
xchg
pop
mov
add
fldenv
jae
mov
lcall
mov
inc
push
mov
les
cmp
xchg
dec
enter
mov
je
adc
gs
mov
push
xchg
jecxz
ror
inc
jnp
cwtl
xchg
repz
sbb
inc
xchg
fcoms
outsl
cld
cli
clc
sti
push
or
push
xchg
xchg
xchg
ja
mov
cmpsl
cwtl
pop
ret
push
inc
mov
add
jge
sbb
jb
into
pop
or
aas
mov
inc
and
arpl
and
cmp
idivb
jbe
dec
movsl
cwtl
sti
faddp
dec
nop
pop
xchg
std
lods
xchg
mov
lds
popa
lods
xor
mov
dec
dec
test
lea
pop
outsl
push
subb
adc
aas
mov
or
xor
ds
xchg
fisttpl
cmp
pop
loopne
push
leave
inc
in
shll
adc
inc
jne
es
mov
rclb
cmp
xchg
mov
movsb
mov
push
jne
push
mov
pushf
clc
or
adcb
xchg
or
imul
jecxz
repz
int3
xor
loope
inc
cmpb
aam
or
push
mov
lahf
sub
pop
clc
xchg
insl
dec
inc
and
pop
xchg
push
lods
aaa
push
iret
mov
mov
mov
or
jp
sub
lcall
sub
xorb
mov
xor
push
pushf
pop
scas
inc
enter
lds
add
and
dec
mov
out
jb
insl
addr16
jb
les
neg
imul
in
aam
mov
jmp
pop
popa
jnp
lcall
xor
cmpsl
or
inc
je
mov
sti
pop
adc
pop
aad
cmpl
sbb
ret
push
sub
clc
cmp
in
and
cltd
push
mov
enter
aas
fsubs
push
f2xm1
xchg
fwait
mov
fdivrp
add
xchg
fidivs
lods
xchg
in
xchg
xchg
jns
inc
mov
cmp
push
stos
dec
in
cli
sbbb
cltd
insb
push
xchg
jnp
pop
hlt
stc
testl
xchg
lret
aad
pop
and
xchg
jp
aaa
enter
xor
cmp
aaa
stc
sub
mov
jb
jl
adc
cmp
lods
sbb
cmp
xor
gs
movsb
dec
dec
jecxz
lcall
loope
and
pop
pusha
cmp
inc
std
test
push
mov
notl
or
int3
mov
scas
cmp
mov
popa
inc
enter
in
pushaw
inc
divl
outsb
sbb
in
add
outsb
push
mov
es
sbbl
filds
mov
ret
xchg
enter
subb
jb
lds
inc
push
add
push
outsb
sub
dec
adc
xor
cld
and
jo
icebp
pop
pusha
gs
movsb
dec
jp
cltd
rolb
pushl
jle
sahf
jmp
filds
cmp
push
rcl
arpl
adc
call
sub
je
loope
mov
mov
xor
sub
lods
push
mov
dec
xchg
mov
mov
or
test
add
jmp
mov
scas
push
jp
sahf
pop
cmp
das
jle
xchg
xor
fstpt
pop
mov
pop
pop
adc
xchg
or
clc
and
jno
inc
pslld
xlat
cmpsl
inc
sub
mov
repz
lods
loop
pushf
out
cmp
mov
gs
xor
and
shlb
inc
jl
sahf
pop
xchg
aad
add
arpl
pop
xchg
mov
xchg
mov
xchg
repz
clc
adc
and
cmp
jno
aas
mov
mov
into
add
mov
push
jecxz
cmp
mov
into
fisttpll
dec
sti
lcall
jnp
repz
xor
shll
jmp
stc
or
sbb
outsl
jmp
ret
data16
arpl
jg
pop
mov
mov
jno
int3
mov
and
sahf
mov
js
xchg
call
dec
mov
mov
out
push
jecxz
lret
mov
clc
int
and
repnz
sub
fistpl
cmpsb
insl
sub
fldcw
data16
repz
jl
cmp
pop
push
add
pop
call
icebp
mov
or
fldt
in
cmpsb
fidivrs
sub
xchg
jl
pop
fisubl
inc
mov
dec
cmp
out
xchg
sbb
inc
jg
loopne
sarl
ss
xchg
test
stos
adc
pop
in
in
rcl
jno
pusha
push
in
shll
and
ret
xchg
mov
mov
ud0
xchg
or
pop
jmp
jg
mov
cmp
lea
dec
or
rcrb
and
mov
mov
ds
xchg
ds
mov
jle,pt
jg
and
in
dec
push
sti
mov
cmpsl
mov
cmp
dec
fwait
inc
lods
stc
inc
out
ds
data16
int
jno
ret
xchg
hlt
cmpsb
aam
test
lds
and
sbb
pop
mov
mov
dec
cltd
andb
int3
das
stos
imul
clc
gs
add
mov
jl
outsl
sub
movsb
mov
mov
loope
sbb
or
movl
lods
adc
fstps
push
push
jb
jl
mov
pop
push
rorl
imul
addr16
test
push
and
lcall
push
fidivrl
out
popf
js
sbb
call
or
xchg
gs
pop
ljmp
negl
aas
imul
dec
out
mov
mov
test
je
movl
ret
inc
sbb
outsl
fucomi
push
inc
cmpsl
imull
push
mov
xor
inc
pop
sub
mov
mov
sub
dec
fwait
das
and
lahf
add
lods
cmp
cmp
in
push
pop
test
push
std
mov
divb
movsb
ds
ror
sub
int3
mov
lahf
jp
les
fisubs
sbb
and
add
xchg
cwtl
dec
leave
pop
add
out
mov
int3
shll
push
mov
outsb
ljmp
lock
cmpl
hlt
ja
adc
cmp
aaa
xchg
jns
mov
popa
or
insl
loopne
iret
cmpsb
lods
jae
add
adc
pop
dec
enter
iret
add
xchg
push
jecxz
rcrb
push
pop
jne
inc
sti
jb
in
mov
xor
mov
call
test
lods
imul
jg
mov
mov
insl
xchg
pop
xor
mov
mov
movsb
fnstcw
lods
or
and
jecxz
adc
insl
lods
gs
add
ret
push
inc
jbe
mov
aas
lock
fistpl
int3
mov
mov
pop
sbb
cmp
mov
jb
repz
jl
sub
jbe
adc
mov
push
cmc
jbe
je
pop
aad
lcall
mov
add
nop
out
cmpsb
aad
xchg
or
xor
in
fucom
mov
fcom
incl
jl
dec
lock
into
adc
lret
pop
jle
stos
or
scas
pop
cld
fisubrl
mov
loop
lds
ficomps
xchg
movsb
aaa
shlb
xchg
call
sub
bnd
or
jg,pn
inc
mov
sub
scas
pop
call
test
cmp
fs
inc
es
scas
lcall
xchg
sti
mov
icebp
sub
imul
jns
or
call
jmp
sahf
leave
aaa
xorb
add
jmp
jb
dec
movb
loopne
xor
ret
fdivs
in
inc
inc
mov
mov
inc
insb
sub
ds
fs
cmp
and
mov
gs
cmp
dec
jns
inc
pop
dec
fistpll
scas
das
jmp
push
repnz
sub
mov
movsl
push
dec
or
call
cwtl
gs
and
fcompl
jecxz
inc
xchg
and
mov
sub
jo
fistl
fcompl
jne
enter
adc
xchg
inc
mov
or
sbb
mov
jae
test
clc
push
es
xchg
push
inc
push
inc
das
xor
mov
stc
cli
test
adc
dec
mov
xor
stc
mov
repz
jno
add
cmp
inc
fisttpll
push
mov
add
mov
fucom
inc
xchg
fwait
lock
repnz
cld
mov
pop
push
sub
jb
hlt
loop
inc
mov
dec
lcall
test
in
jo
popa
call
fcoms
aaa
popf
popl
mov
mov
or
or
add
inc
divb
jle
es
push
stos
fistpl
test
mov
sbb
test
jo
in
sbb
aad
mov
dec
cli
fstp
fwait
cltd
jae
test
aam
pop
sub
aad
lret
loop
les
dec
out
pop
sbb
and
in
xchg
mov
xor
xor
inc
inc
xchg
ret
jle
adc
ljmp
loope
orl
or
pop
shl
dec
shll
cmp
js
xchg
cmc
push
push
lcall
and
je
insl
mov
pop
jp
jbe
mov
decl
sub
jmp
mov
hlt
ljmp
stc
lods
cmpsl
insl
gs
add
or
cmp
in
push
ljmp
mov
sbbl
adc
std
test
psrlw
ret
out
fcoml
jne
out
imul
jg
popa
insb
ljmp
sbb
and
idivl
adcl
xor
add
call
push
pop
jo
mov
pop
outsb
inc
mov
addr16
rcrb
shrl
loop
adc
sbb
or
insl
mov
nop
mov
push
mov
jae
cmc
in
push
xor
test
fisttpl
pop
insb
out
xchg
lods
push
push
add
std
in
icebp
mov
jecxz
push
sbb
inc
testb
sahf
std
xor
dec
fwait
mov
sub
imul
xor
push
or
pop
loopne
les
push
insb
xor
cmp
int
popl
push
xor
fistps
icebp
ljmp
push
gs
into
sbb
mov
inc
sahf
inc
xchg
popf
jl
mov
shrb
clc
out
sbb
ss
jp
or
jg
dec
xor
push
cmp
addr16
movsb
jnp
stos
shrb
fcomps
jae
pop
insl
jecxz
push
popa
movsl
subl
lods
adc
cli
adc
sahf
xchg
push
orb
sbb
cmp
lea
js
pop
mov
out
and
pop
mov
daa
shl
imul
cmpsb
cs
mov
outsl
inc
xor
iret
sub
push
hlt
rcl
pop
add
outsb
push
aas
push
cmpsb
mov
into
in
cmp
into
cmp
pop
add
out
pushf
xchg
cmp
mov
sahf
add
cmpsb
xor
cmp
cmp
int
add
inc
sahf
scas
popa
negl
xchg
xchg
test
shlb
add
jno
add
adc
pop
adc
mov
dec
cmp
or
xor
fcmovnbe
pusha
cltd
jge
mov
add
fsubrs
dec
in
mov
inc
sahf
pop
or
rolb
xchg
adc
or
mov
pop
es
popaw
sub
iret
mov
or
push
test
jne
lahf
xor
dec
imul
cmp
and
scas
or
xlat
decl
in
in
addr16
pop
push
repnz
cmp
test
repnz
popa
ss
dec
pop
sbb
mov
test
lret
xor
or
cmpsb
fsub
xor
jne
dec
pop
mov
leave
mov
add
jge
js
adc
xorl
dec
xlat
xor
in
call
or
bound
movb
adc
imul
mov
fwait
xchg
stos
push
popl
test
cmc
adc
add
jns
hlt
repnz
test
add
sahf
xchg
mov
out
mov
push
notb
add
int3
pushf
fadds
scas
inc
in
xorb
in
jo
pop
out
out
inc
mov
inc
gs
pop
xchg
jbe
inc
mov
lcall
cmpsb
push
in
lret
push
push
adcl
ficoml
decb
fst
or
adc
hlt
test
add
out
sub
xchg
into
jp
push
add
insl
adc
inc
dec
pop
mov
xor
in
inc
mov
cmpsl
cld
lahf
push
mov
jp
pop
xor
sti
fsts
and
mov
in
int3
push
xchg
movsb
push
sub
test
lcall
les
arpl
or
mov
xchg
jmp
pop
sub
sub
sbb
into
dec
sub
xlat
inc
in
scas
add
mov
sbbb
stos
xchg
leave
test
cltd
xor
gs
xlat
mul
pop
cmp
pop
adcb
test
pop
mov
shll
mov
je
cld
mov
inc
xlat
cmp
leave
adc
push
outsl
mov
inc
adc
ljmp
mov
lods
leave
mov
loop
push
xor
outsl
jg
cltd
xchg
dec
xor
js
testb
fmul
shrl
jo
or
or
mov
sbb
pop
pusha
lret
sub
out
aaa
addr16
stos
push
jge
sbb
cmp
and
test
cmp
xor
dec
sub
push
mov
hlt
add
icebp
in
sarb
cmc
cmp
cmpsb
mov
mov
push
inc
outsb
mov
fiaddl
arpl
jno
in
and
inc
mov
cmp
push
cmp
cwtl
push
pop
in
sub
nop
cs
or
xlat
jo
xchg
pusha
cmc
push
addl
inc
jp
test
inc
inc
imul
shll
outsl
lods
sub
fstpl
lds
fsubp
dec
sbb
in
jns
sbb
leave
into
std
adc
add
aas
dec
scas
popa
dec
insl
repz
test
les
pop
push
cmpsl
inc
pop
fcompl
repnz
xchg
ret
cmp
test
lods
in
pop
inc
jle
outsl
pop
movsl
notl
jae
dec
jg
repz
stos
and
icebp
pop
pop
or
push
mov
push
fldenv
mov
mov
mov
stos
mov
and
in
jle
xchg
shll
jmp
dec
xor
sti
cmc
push
je
xchg
rolb
cmpsl
cmpsb
mov
or
mov
or
std
pop
mov
leave
out
sbb
fstpt
pop
sti
xlat
shrl
and
and
push
dec
mov
popa
xor
fs
sub
jo
xor
and
sub
push
cmp
mov
add
mov
sub
jmp
enter
pop
std
mov
and
repnz
mov
popf
sub
xchg
in
pop
lock
cwtl
loopne
imul
push
fdivl
ss
jge
or
adc
sub
jb
inc
cwtl
push
mov
pop
fistps
sbb
popa
mov
ret
dec
cmpsl
adc
push
pause
lcall
scas
cs
lea
mov
fs
mov
pop
sbb
leave
pop
push
fistpl
jae
ja
adc
push
cld
mov
imul
mov
loopne
aas
adc
insb
xorb
dec
out
fldt
cmp
add
xor
in
outsb
repz
inc
testl
fs
call
xchg
or
jo
mov
xor
add
imul
pop
mov
cmpsb
call
arpl
xor
pop
test
das
data16
mov
pop
cwtl
stos
popl
cld
mov
scas
or
mov
lcall
xchg
cmp
pop
into
incl
imul
leave
jmp
sbb
mov
push
xor
push
pushf
push
add
mov
jno
pop
aad
insl
dec
sarl
inc
cld
adc
sub
sarb
or
loope
lods
adc
add
xchg
mov
inc
outsb
mov
roll
or
iret
les
and
stc
int
ds
push
insb
outsb
cmp
mov
cmpsb
jb
int3
cmpsl
sbb
adc
fnstcw
or
dec
xlat
mov
cmpsl
aad
xor
push
push
xor
in
lahf
mov
jae
shll
ds
cmp
fcmovnb
fdivs
or
ja
lock
cli
cmpsb
movsl
shlb
pop
mov
sub
mov
jecxz
cmc
sub
add
xchg
push
lcall
cli
mov
fcomps
dec
and
iret
loope
sahf
mov
lcall
das
adc
imul
dec
cmp
out
bswap
les
ret
stos
xchg
inc
pop
cmp
and
scas
cmp
sbb
stc
popf
jecxz
scas
out
dec
push
test
xor
call
pop
inc
xchg
loope
mov
lret
in
addr16
lahf
sbb
xor
jecxz
lds
int3
xchg
fistpll
jae
push
lahf
divb
bnd
adc
mov
adc
mov
icebp
jno
hlt
inc
xchg
popf
push
ljmp
inc
cmpsb
jne
and
push
push
dec
and
loop
jge
cmp
in
sbb
orl
add
lods
cmp
jl
dec
sbb
filds
cmp
mov
add
fs
ja
pop
mov
lcall
mov
sub
call
mov
cmp
and
std
dec
xchg
mov
xor
cmc
push
mov
jl
dec
mov
sub
fwait
cmp
popf
and
sahf
fwait
out
imul
mov
insb
xchg
or
xlat
mov
push
adc
ret
mov
imul
out
imul
ficomps
and
inc
lcall
xchg
in
jno
lahf
adc
js
or
cmpsl
repnz
mov
lock
and
ja
nop
xor
mov
adc
mov
es
mov
adc
mov
jp
rorl
inc
inc
and
or
lods
aam
push
movsb
in
out
stos
sub
pusha
mov
popf
jbe
cmpsb
adc
cmp
or
cmp
inc
aad
test
loope
jne,pn
sbb
push
xorb
pop
aaa
dec
lock
adc
inc
leave
jns
out
out
in
cld
mov
shl
movsb
inc
inc
jg
jge
xchg
mov
xchg
adcl
add
mov
jmp
xchg
dec
sbb
test
inc
mov
cs
add
inc
fnstenv
fwait
mov
popa
daa
push
adc
dec
jl
adc
xchg
dec
add
pop
call
into
push
popa
ret
mov
mov
or
jne
loopne
xchg
jl
in
mov
jb
shl
adc
mov
cmc
pop
int
movsl
std
add
ffreep
add
cmp
xor
data16
cltd
je
mov
and
iret
pop
pushf
mov
lcall
mov
fldcw
test
cmpsl
xchg
dec
push
ja
fidivrs
out
cmc
push
pop
or
negb
jge
dec
nop
decb
adc
notb
lock
jl
and
inc
ret
cmp
lock
sub
or
mov
out
mov
clc
fs
jmp
xor
jl
movl
pop
xchg
scas
dec
or
xchg
xor
das
push
xor
or
insb
mov
rcrb
daa
mov
clc
lahf
rcll
aad
and
and
mov
cmp
push
inc
roll
shlb
xor
popa
iret
out
sbb
popf
mov
dec
pop
repz
minps
sti
mov
xchg
pop
insb
in
das
cwtl
push
cmp
xchg
in
lods
repz
xchg
fistps
mov
shrb
sub
jbe
cmp
mov
xchg
inc
jae
cmpsl
mov
cmpsl
push
mov
pushf
mov
pop
jg
and
jmp
mov
rclb
enter
cmp
or
push
mov
jae
add
pop
push
jp
leave
cmpsb
xor
jno
pop
adc
lods
xor
jb
cmc
std
pop
push
dec
mov
mov
lds
test
gs
cli
xorb
fsubl
insb
mov
sahf
repz
jge
orl
stc
iret
idivl
mov
lods
or
lahf
shl
adc
cltd
icebp
rclb
fwait
adc
jo
mov
pop
xor
xor
fldl
adc
sbb
and
in
hlt
mov
outsl
lcall
inc
je
insl
hlt
test
mulb
cmp
jge
push
lods
fstps
sub
or
and
sbb
and
jns
arpl
aad
fistpl
and
shrb
mov
aaa
xchg
jp
in
das
outsb
call
mov
mov
and
into
jae
pop
test
or
loope
mov
hlt
das
decb
jge
mov
std
ficomps
jecxz
xchg
mov
fmull
push
nop
aad
ds
jnp
sub
test
outsl
sub
jle
mov
jb
outsl
jae
test
xchg
sbb
sub
push
cmc
fnstenv
cwtl
shld
das
out
xchg
outsb
pop
jnp
mov
and
pop
scas
mov
xchg
push
xor
mov
imul
data16
aad
xchg
arpl
sbb
cmp
fdiv
ret
or
add
or
mov
pop
mov
mov
out
lcall
xchg
sbb
mov
sub
insl
lods
jns
lods
stos
mull
push
lahf
cmp
stc
jmp
pop
lcall
jp
or
mov
ss
push
cmp
rclb
repz
mov
push
lret
add
pushf
rorb
xor
and
cmpsb
jno
stos
jne
sbb
inc
into
std
shll
jae
aam
sbb
enter
pop
push
pop
adc
cmp
add
mov
adc
sbb
test
fisubl
aad
or
sbb
jbe
popf
dec
loopne
and
lea
or
and
mov
leave
inc
imul
jb
jmp
lret
out
or
add
dec
xor
aaa
pop
test
and
popf
pop
sbb
adc
mov
sub
iret
push
rcl
data16
jle
jmp
mov
inc
lock
push
jae
mov
add
sub
inc
test
mov
scas
addl
adc
jle
cmpsb
adc
mov
adc
lds
fsubs
xchg
xchg
ror
mull
mov
pusha
fwait
pop
push
rclb
xlat
pop
inc
xor
scas
clc
das
xchg
mov
ja
push
dec
mov
push
mov
es
scas
cmp
xchg
or
int3
sahf
push
mov
mov
arpl
sub
sbb
test
daa
in
jl
jbe
jp
xorl
lods
lods
mov
xchg
pop
test
inc
jne
push
dec
fwait
out
push
es
push
sbb
mov
adc
cltd
mov
cmp
leave
inc
jo
xchg
xchg
fsincos
xlat
mov
sbb
pop
jp
adc
outsl
aam
pop
das
adc
in
push
and
push
cmp
test
pop
rorl
popa
jnp
mov
in
ja
test
pop
sub
xchg
mov
xor
or
movsl
sarl
jge
push
adc
sub
jb
imul
test
out
in
cltd
popa
mov
icebp
xchg
jno
das
rcrb
test
add
jno
cmp
pop
pop
repnz
mov
ficoms
shrl
in
ja
js
aam
push
icebp
loopne
rcrl
lret
testb
and
and
fcoml
sub
daa
clc
lea
inc
mov
ljmp
cmp
ret
mov
cmpsb
int
imul
pop
or
mov
mov
aaa
cmp
mov
adc
call
and
mov
sahf
lea
hlt
frstor
cli
pop
movsb
cs
xchg
lock
cmp
test
pop
addb
add
inc
shlb
repz
mov
xchg
cmp
mov
into
jg
cmp
mov
jl
sti
pop
fdivrs
in
xchg
mov
lea
or
les
xchg
pop
aas
mov
push
inc
ss
call
cmpsb
jmp
mov
jbe
inc
xchg
mov
mov
aad
jmp
nop
inc
mov
push
push
sub
dec
xor
idivb
cmp
call
out
popa
cmp
clc
fs
aas
into
lahf
test
xchg
cmpsl
std
icebp
lods
es
mov
push
das
cmp
mov
cmp
test
jae
push
cwtl
les
and
pop
pop
xor
and
les
jb
inc
push
dec
lret
sbb
mov
push
jb
testb
iret
adc
cmp
mov
imul
and
dec
xchg
dec
cmc
cs
adc
lea
jo
inc
lods
repnz
jnp
push
mov
adc
stos
mov
mov
and
mov
xorb
push
fbld
outsl
ss
or
jo
sub
popa
adc
sti
cmp
sub
das
stos
hlt
sub
add
cmp
or
mov
push
dec
lret
ja
push
inc
xchg
leave
ljmp
repz
push
jmp
sarl
sub
and
js
mov
fidivs
push
jle
sub
mov
mov
push
and
pop
aad
dec
jne
inc
adc
pop
xor
rclb
loopne
and
add
ds
push
test
add
mov
push
les
inc
pop
xor
cltd
sbb
pop
stc
and
addl
call
fcompl
cwtl
xor
mov
lret
dec
add
dec
insb
sti
mov
xor
inc
movsl
ss
or
cmp
rorb
jns
lds
adc
lret
jp
popw
mov
jno
insb
push
cmp
adc
cmp
stos
cltd
adc
sbb
jl
or
and
aaa
jno
dec
lret
jg
pop
pop
insb
div
rcll
pusha
out
jne
scas
in
dec
fimull
in
and
jmp
in
sub
jecxz
je
mov
inc
adc
ja
fwait
adc
pop
mov
inc
xchg
jp
cmpsb
jl
cmp
pop
movsb
and
add
mov
push
or
add
int3
push
imul
jnp
push
fcompl
ja
jle
mov
xchg
cmp
test
cmp
pop
das
daa
cltd
in
cli
jg
cmp
dec
xor
xlat
xor
jg
mov
add
ret
add
dec
call
jne
sbb
or
mov
xchg
xchg
ret
jg
nop
mov
push
dec
mov
daa
push
push
in
push
cmp
jb
pop
inc
in
jmp
daa
mov
or
xchg
lret
mov
dec
xchg
test
adc
sub
jb
mov
dec
lcall
or
push
cmc
lds
fcoms
and
lds
cmp
push
cld
loopne
adc
ret
std
mov
add
ret
jg
lcall
mov
repz
xchg
aaa
xlat
in
push
bound
xchg
rol
lods
test
repnz
pop
loope
adc
adc
sub
testl
mov
ret
lods
fldenv
cmp
xor
addr16
mov
mov
ffreep
cwtl
push
jb
sub
jb
addl
scas
test
cmp
jnp
sub
in
sbb
pop
icebp
cmp
sbb
repnz
or
ds
repnz
xchg
cmpsl
mov
pop
xchg
mov
xor
inc
sbb
hlt
pop
hlt
and
dec
lds
es
lods
push
pop
mov
add
loop
mov
xchg
mov
jno
mov
call
fucomip
in
nop
imul
jp
and
add
enter
adc
jecxz
les
add
or
xchg
or
and
bound
ds
and
faddl
fstpt
outsb
and
jae
push
aam
int
inc
pop
ja
mov
call
pop
xchg
cmp
insb
jns
dec
sbb
push
fisttps
mov
xchg
dec
adc
cs
aam
and
imul
cmp
inc
inc
xchg
mov
shll
cwtl
sub
adc
sub
ljmp
ss
inc
or
sub
imul
leave
addb
xchg
fs
mov
arpl
imul
add
jl
mov
jg
lret
cld
pop
dec
addr16
inc
or
aad
aaa
adc
add
add
out
lret
std
popf
dec
movsb
negl
sub
jo
int
std
test
adc
scas
cmp
pop
testl
add
adcb
icebp
xor
and
cmp
ret
leave
arpl
fs
xchg
outsb
in
pop
inc
sbb
adc
pop
dec
push
movsl
sbb
iret
sub
mov
movsl
pop
jb
mov
inc
pushf
iret
sub
push
leave
arpl
jnp
or
xlat
sbb
outsb
cmpl
xlat
cmp
inc
lahf
cli
repz
jb
mov
mov
insb
inc
repz
aam
push
mov
jae
mov
pop
stos
and
in
mov
shrb
dec
jno
fdivrl
sub
out
mov
push
or
mov
jl
sub
add
js
cmp
push
in
add
mov
push
scas
test
xchg
fiadds
xchg
mov
add
adc
cmpsl
shll
mov
rcrl
stos
adc
jle
dec
call
bound
adc
push
sub
dec
cmp
xlat
fwait
addr16
add
imul
inc
or
out
mov
in
cmc
test
icebp
imul
add
jmpw
loop
jb
fwait
mov
cmpsl
cmpsl
lcall
dec
mov
mov
aad
addb
sbb
ret
sbb
cmpsb
inc
inc
cmp
inc
fsubrp
or
mov
mov
mov
repnz
test
aam
icebp
cs
lret
sbb
daa
sbb
bswap
gs
xor
push
sarl
xor
add
cltd
cmp
sub
movsb
addr16
xchg
add
xlat
cmp
int3
jp
jge
cmp
mov
ficomps
mov
stos
mov
jae
rcr
add
cmpsb
outsb
xlat
mov
xor
mov
jl
fistpl
dec
gs
push
mov
mov
fimuls
shrb
and
cmpsl
hlt
push
sbbl
mov
sbb
sub
aaa
and
in
mov
push
xchg
notb
add
out
loope
scas
lea
adc
popf
aad
sub
sbb
mov
fwait
or
movsb
and
loope
jbe
pusha
and
dec
xchg
pop
ret
subl
dec
xor
enter
pop
jg
in
pop
xchg
mov
cmp
mov
out
movl
mov
ret
mov
cmp
adc
xchg
movlps
movsb
aad
pop
mov
int
repz
xchg
push
or
mov
mov
sub
xchg
enter
popa
and
xor
stos
inc
xor
loopne
push
loope
dec
pop
lea
stos
cli
sub
jg
or
dec
adc
ja
fcoml
ds
and
and
aad
lods
mov
repz
cli
inc
iret
icebp
out
imul
ljmp
cld
sub
popa
pop
lods
mov
add
or
or
lret
cmp
fildl
xchg
cltd
lret
mov
enter
dec
mov
in
dec
pop
stos
adc
ret
in
and
dec
out
mov
adc
mov
inc
mov
adcl
sub
xor
shrl
sbb
cltd
and
or
sub
insb
fwait
cmp
pop
outsb
mov
cmpsb
ds
jne
test
adc
aas
xor
aam
cmp
pusha
pcmpgtd
bound
test
loop
sbb
out
incl
popa
lods
out
push
adc
mov
mov
mull
cmp
cmp
das
bound
sbb
jbe
js
outsl
adc
test
das
push
leave
fidivrs
xchg
fdivr
orps
adc
fucomp
imul
adc
push
pop
xchg
sub
xor
call
mov
outsl
pop
arpl
xchg
sub
dec
ja
cmp
or
mov
je
sahf
lods
mov
daa
mov
lahf
inc
cmp
pop
pop
xchg
mov
test
cmp
xor
imull
jecxz
xchg
lds
mov
out
mov
loop
dec
xlat
movsl
ljmp
ret
sahf
cld
add
std
xchg
dec
call
xchg
add
jo
arpl
jns
sahf
push
roll
dec
jmp
push
xchg
pop
xor
clc
arpl
les
call
jmp
loop
inc
and
fwait
loope
xor
sbb
and
addb
pop
xchg
push
hlt
mov
test
fmuls
adc
dec
mov
inc
jnp
pop
inc
inc
aad
pop
rclb
sub
test
testb
sbb
mov
inc
stc
movsb
cs
aas
dec
cmp
fistpll
lds
sub
insl
stos
sbb
inc
fwait
jecxz
mov
movsb
and
push
daa
xor
inc
shl
aad
adc
mov
fcoms
into
sysenter
mov
lock
cmc
dec
cltd
inc
nop
lods
hlt
cmp
pop
cmp
xchg
pop
sbb
mov
jl
push
les
and
ds
push
inc
xchg
sahf
or
pop
mov
rorl
mov
int3
inc
cwtl
in
adc
lods
adc
jbe
call
sti
cld
push
add
push
jle
jle
loope
jp
sbb
cli
sbb
lcall
loop
mov
cmp
cmc
ja
movsb
into
xor
push
jecxz
or
sub
dec
daa
mov
dec
mov
push
mov
aas
les
inc
adc
or
enter
inc
mov
jge
scas
xchg
gs
movsl
jo
fiaddl
in
add
dec
sahf
stos
rcll
insb
inc
addl
stos
sub
icebp
inc
enter
jae
popf
das
mov
or
stc
mov
pop
aad
sub
out
lret
aad
fldcw
xlat
cli
int
sub
add
pop
sbb
ss
xchg
incl
and
xchg
fistl
std
inc
lahf
lahf
test
jg
mov
sti
jecxz
in
mov
inc
and
or
jae
sbb
sahf
ret
xor
jbe
jecxz
add
ja
in
in
pop
cld
jne
push
xor
mov
sub
leave
push
xor
lock
or
sbb
xorl
xchg
pop
popf
fwait
jns
popa
gs
xchg
je
sbb
movb
jbe
mov
test
arpl
int
mov
iret
add
data16
cld
out
lds
inc
ljmp
sbb
dec
inc
jmp
gs
lcall
mov
call
out
adc
jo
adc
leave
pop
xchg
xchg
jae
cld
les
xchg
imul
mov
mov
repnz
sbb
mov
push
push
mov
ss
jne
push
into
sub
xor
in
ret
push
cmp
fisubs
jmp
jle
sbb
ja
pop
adc
jp
repz
in
fldl
hlt
test
insl
xor
push
push
jbe
ja
cmpsb
push
sbb
imul
lds
pop
push
pop
sub
push
adc
out
bound
testl
jbe
jne
add
cmpsl
xlat
cmp
push
or
lods
sbb
sarb
mov
dec
arpl
push
mov
mov
or
test
jge
xchg
and
push
outsl
and
aad
xchg
addl
inc
push
jb
add
cli
sub
shrl
sbb
xchg
mov
cmp
jb
and
sbb
dec
push
pushl
or
loope
or
shll
jno
cmp
out
mov
jmp
mov
add
or
popa
jle
or
js
dec
out
outsb
sarb
dec
rol
dec
outsl
cli
outsl
call
push
outsb
pop
sbb
push
pop
pop
inc
xchg
out
cwtl
xchg
dec
mov
mov
dec
into
lret
jb
mov
cmp
fwait
aas
jl
test
scas
movq
xor
xor
repnz
cmpsb
ss
daa
jno
incl
xchg
dec
inc
or
fs
loope
xor
mov
leave
add
cmpsb
outsl
cmpsl
iret
rcl
push
mov
cmp
mov
or
xchg
fcmove
scas
sbb
inc
fists
rcrl
adc
mov
cmp
push
push
jne
lret
jmp
mov
adc
sar
adc
rcrb
fidivrl
push
shrl
int
out
jmp
cmp
pop
movsb
or
xchg
push
jg
jp
sarb
call
test
setge
jecxz
pop
push
push
xchg
mov
mov
mov
test
out
xchg
mov
es
orb
jb
pusha
ds
add
inc
aad
add
mov
or
sbb
push
xchg
aad
sti
dec
mov
xor
cmp
pusha
push
push
jl
sub
mov
mov
loopne
or
in
mov
pop
nop
or
push
ret
nop
cmp
ds
jge
jl
cld
jl
lea
inc
imul
dec
ljmp
sub
mov
dec
loop
add
out
sub
xor
push
mov
loope
cltd
lret
push
push
addr16
daa
movsl
adc
fisttps
sbb
jmp
cmp
shll
loop
push
push
shrb
xchg
jge
mov
cwtl
stc
stos
dec
or
jle
dec
adc
cwtl
testl
mov
jae
std
and
adc
movsl
lahf
xchg
mov
mov
roll
sub
ret
lret
jp
pop
ljmp
lret
sbbb
pushf
jo
frstor
mov
insb
xor
cmpsb
mov
mov
sbb
push
fldcw
mov
enter
sbb
adc
adc
out
mov
adc
mov
in
imul
dec
loope
loopne
push
aas
jle
into
decl
jge
add
insb
sar
popf
and
frstor
iret
mov
fists
adc
out
dec
mov
jp
jge
and
sub
out
popa
repz
sbb
pop
rcrl
xchg
loop
decl
push
sbb
scas
lea
cmp
pop
sub
loopne
das
dec
test
adc
in
cli
outsb
icebp
ret
push
test
mov
mov
mov
pop
dec
ss
jnp
call
or
test
mov
lcall
popa
jmp
out
out
sub
imulb
in
jno
add
push
xchg
adc
imulb
int3
mov
out
mov
mov
mov
ja
pop
mov
lahf
popf
or
cwtl
mov
popa
mov
or
dec
popf
dec
ret
jg
adc
cmp
and
xchg
fnstcw
pusha
jnp
stc
ja
and
adc
mov
pop
and
rcl
cwtl
lock
xchg
pop
hlt
in
xchg
and
push
jno
cmp
mov
repz
popf
scas
data16
insw
dec
nop
bound
test
incl
sub
mov
test
aam
rcrb
cmp
aas
hlt
push
dec
mov
inc
push
mov
lahf
mov
sbb
pop
fmul
js
clc
mov
xor
jnp
inc
push
inc
jecxz
mov
rclb
movsl
jle
push
test
ljmp
mov
popa
out
int3
jne
jl
mov
add
mov
pop
xchg
lds
fldcw
repz
push
das
inc
xchg
cmp
jne
jp
fstp
add
aas
add
push
fisttps
movb
sbb
dec
fdivrl
jae
lods
out
jge
loop
js
int
iret
sahf
sub
or
lods
xor
sub
arpl
fiadds
mov
add
shlb
outsl
aad
pushl
or
push
std
dec
cli
dec
rorb
jb
aas
push
gs
lahf
jbe
outsb
ret
lds
movsl
pop
stos
dec
mov
push
xor
mov
gs
add
test
and
in
add
pop
lods
es
jae
inc
sub
loopne
rol
jp
and
xor
sbb
dec
xchg
shrl
call
cmp
in
jg
or
mov
mov
push
in
addr16
in
xchg
fdivs
sbb
sahf
repz
es
and
cwtl
adc
jmp
fwait
xorl
inc
add
cwtl
js
jnp
mov
ds
xor
pop
mov
xchg
scas
orb
std
int3
xor
sub
das
add
std
pop
cs
jb
lods
mov
cmp
in
inc
mov
lcall
and
mov
loope
pop
jge
out
pusha
jle
push
leave
or
ds
ret
addl
inc
pushf
clc
in
imul
adc
sar
ret
mov
cmp
jge
sbb
fistpll
outsb
mov
xor
outsb
js
xchg
rorl
sbb
scas
cmc
cmp
add
sub
lock
jmp
mov
out
inc
loop
xor
sti
in
ret
xor
sbb
xor
fists
and
mov
test
fcmovne
addl
out
add
sbbl
das
testb
xor
push
pusha
push
int3
push
sbb
int3
push
je
mov
lcall
jne
sar
jo
dec
mov
push
add
cmp
cs
or
mov
mov
mov
dec
sub
in
test
xchg
out
jecxz
dec
xor
call
add
fs
mov
pop
fsubl
add
out
scas
jb
jecxz
idivb
mov
divl
push
and
and
push
or
or
pushf
jg
fcomps
sbb
dec
cmc
add
in
int
xchg
xchg
icebp
jo
xchg
cmp
movsb
add
out
adcb
sbb
shr
sarb
inc
aas
out
sbb
mov
mov
or
pop
xchg
dec
es
xor
shlb
cmp
add
jbe
cmp
clc
add
inc
and
lods
mov
adc
ficoms
aas
pushf
mov
and
mov
shll
popf
mov
lock
orb
and
add
mov
push
cmc
jbe
or
push
lretw
nop
sahf
mov
aas
in
pop
outsl
je
sbb
outsb
dec
jl
cwtl
or
jae
mov
inc
jecxz
inc
negb
pop
pop
out
mov
lret
cmp
inc
sbb
int
jmp
mov
mov
jecxz
push
pop
mov
mov
or
fldcw
mov
sbb
movsl
mov
xor
sub
enter
imul
dec
cmp
pop
frstor
inc
loop
pop
pop
leave
popf
cmp
mov
testl
dec
and
adc
pop
push
jl
test
popa
cmp
out
mov
push
or
stos
in
mov
sub
popa
in
sarl
xor
add
jl
or
gs
aaa
cmp
int
adc
sbb
inc
jl
sbb
xor
inc
mov
adcb
push
insb
lret
pop
push
pop
inc
pop
in
jo
mov
imul
nop
pop
cli
ret
cmp
pushf
shrb
xor
sub
or
mov
ljmp
iret
sbbb
cmp
jo
xor
jbe
add
test
hlt
dec
insl
or
sarl
jo
sub
mov
push
push
mov
pop
add
inc
fistps
inc
dec
in
push
cli
mov
adc
stos
ss
jmp
call
or
pop
jmp
adc
das
aad
sbb
push
xchg
sub
jg
inc
cltd
test
jp
and
cmp
jnp
bnd
add
jge
inc
mov
xchg
mov
repnz
data16
enter
test
lds
sbb
sbb
sbb
mov
mov
lea
ret
sbb
and
fwait
popa
sbb
ret
popl
mov
test
add
push
cmp
xchg
stc
scas
mov
ficoms
popa
call
sbb
inc
lahf
jle
or
in
cmpsb
xchg
mov
stc
insl
jns
and
fs
jmp
lea
add
inc
jo
je
insb
fisubl
adc
or
cmp
shl
shlb
pmaxub
outsb
loop
pop
lock
push
sub
and
jbe
xlat
adc
and
orb
sbbb
icebp
test
enter
push
jl
xchg
pop
mov
sub
lret
or
or
cmp
mov
out
test
in
mov
hlt
push
out
cmc
sahf
sub
pop
test
push
xchg
mov
frstor
cmpsl
xchg
fnstenv
mov
jecxz
outsb
adc
sub
popf
cmp
das
pop
in
inc
add
outsl
int3
adc
cmp
jae
mov
aaa
call
push
popa
add
mov
into
jbe
mov
call
lahf
lahf
les
jp
stc
aam
pop
lea
sarl
cltd
or
push
fcoml
push
cmpsl
dec
dec
xor
scas
dec
cmc
xchg
xchg
xchg
sub
adc
aam
inc
mov
mov
cs
add
jle
test
shll
xchg
loope
mov
out
xchg
add
enter
pop
add
add
mov
inc
aas
in
popa
int
xchg
xchg
std
jmp
test
sbbb
and
dec
xchg
int3
jp
cmp
stos
jge
inc
loop
ja
pushf
cwtl
xor
out
xchg
pop
movsl
in
xchg
jl
cmp
arpl
mov
or
filds
mov
clc
in
dec
jl
jp
mov
ret
xor
mov
sti
outsl
in
repz
sar
pop
in
and
xchg
test
out
pop
mov
outsl
jp
cmc
lods
ret
icebp
dec
shll
rcrb
add
xchg
shl
or
neg
cmp
mov
adc
decb
orb
add
push
rcll
sti
sub
gs
jb
ficompl
xchg
inc
shlb
push
jg
mov
cmc
fsqrt
push
sub
mov
rorl
push
lret
push
daa
pop
in
ds
in
dec
jmp
jae
out
inc
ret
push
xor
jne
jnp
or
call
cmp
icebp
stos
xor
fs
inc
outsb
clc
loope
lcall
cmpb
out
sbb
das
push
mov
mov
jae
pop
int
push
mov
out
repnz
in
subb
pushf
lahf
sbb
pop
xchg
loopne
xlat
dec
gs
or
je
aas
pop
jge
or
xchg
add
lds
fsubrs
test
and
lods
test
mov
int3
xchg
pop
sub
push
xor
jmp
jp
mov
xchg
outsb
jmp
jmp
bound
loope
leave
ret
lret
sti
inc
mov
fdivr
mov
sub
in
sub
dec
mov
pop
div
fdivs
jbe
sub
shll
ret
jo
dec
loope
pop
cld
xchg
imull
jecxz
xchg
or
lock
ds
cmc
ret
les
sbbl
fwait
and
outsb
ljmp
stos
pop
popf
data16
xor
fadd
mov
xchg
sbb
enter
repz
mov
fst
mov
push
repz
icebp
adc
in
imul
fs
aam
jp
icebp
mov
insb
js
call
push
jb
and
test
mov
and
inc
xchg
popf
test
push
mov
pop
nop
je
mov
add
sbb
or
test
fisubrl
outsb
cmpsl
daa
test
fsubl
test
aas
repnz
ja
pop
orb
lret
sti
in
pop
push
repz
jg
xchg
add
mov
fcomip
icebp
test
inc
mov
pop
les
negl
out
sub
fabs
cmp
ljmp
iret
outsb
mov
xchg
sbb
cld
sahf
xchg
leave
xorl
iret
jge
cmpsb
push
scas
stos
sbb
call
push
sbb
inc
shrl
imul
mov
cs
jo
push
sub
rcrl
popf
cld
push
in
out
cmp
sub
loope
clc
fisubl
mov
mov
loop
pop
mov
icebp
mov
and
std
scas
cld
and
insb
xchg
xchg
cmp
mov
rolb
clc
adc
pop
add
xchg
stos
pop
pop
js
mov
inc
push
cmp
imul
push
pop
enter
push
fdivr
pop
mov
sbb
inc
inc
dec
jns
push
sub
pop
xor
insl
add
cmp
or
nop
sbb
cwtl
int
or
in
imulb
dec
sub
lcall
cmp
lock
mov
ret
int
pop
test
movsl
rol
or
shlb
push
fcmovnbe
lahf
mov
shufps
ror
outsl
repz
mov
dec
xor
sahf
push
rorl
stos
sarb
adc
and
mov
pop
adc
stc
loope
jb
sbb
scas
mov
pop
insb
sti
add
jecxz
mov
jle
repz
adc
adc
mov
aam
jl
sub
xchg
mov
cmp
dec
inc
xor
fnsave
push
arpl
dec
sbb
lds
cmp
pop
sub
sub
wbinvd
or
enter
fistpl
push
pop
daa
dec
daa
repnz
push
int3
mov
jnp
add
jnp
or
int3
mov
sub
fwait
pop
sbb
add
mov
push
pop
mov
js
cmpsb
js
loope
mov
insb
add
xchg
jb
xlat
out
mov
dec
jge
rol
shll
jns
mov
scas
insb
sahf
fmul
xor
push
dec
notb
fdivr
cmp
jle
pop
add
cmpsb
xor
mov
insl
pop
fmulp
fsubr
fadds
scas
insb
pop
stos
xlat
inc
loope
adc
push
or
aas
or
leave
lcall
pop
adc
sbb
push
addr16
and
inc
iret
cmpsb
mov
loopne
push
mov
std
sahf
mov
sbb
mov
xchg
sbb
sub
ds
sbb
jmp
push
hlt
cmp
popl
fwait
in
inc
ds
xchg
into
orb
xor
loope
mov
cmp
iret
mov
cmpsl
mov
ja
scas
or
lods
pushf
cmp
cs
push
ret
and
add
inc
ja
imulb
and
pushf
lea
sub
jo
aad
ljmp
hlt
std
jo
stos
mov
movsb
or
mov
pop
andb
push
repz
fs
jle
les
mov
in
test
ret
add
push
sub
jne
rclb
rcr
loope
jnp
inc
mov
cmp
out
sub
jmp
mov
sub
jmp
add
fsubl
ljmp
mov
aaa
xchg
or
mov
pushf
jg
rorl
bound
lahf
jmp
sbb
xchg
push
stc
mov
xchg
fisubrs
fwait
mov
fsub
sbb
hlt
adc
push
int3
dec
in
hlt
push
sbb
imul
in
mov
int3
jp
jns
out
test
sub
fbld
and
sbb
mov
or
xchg
shrb
shrl
mov
aaa
dec
fiadds
pop
shrl
leave
stos
or
xchg
sub
ret
add
out
shll
scas
je
fmuls
adc
cwtl
stos
ret
mov
mov
imul
pop
pop
mov
or
in
push
inc
xchg
imul
jecxz
popf
sub
call
mov
dec
cmp
jle
loopne
outsl
add
cld
mov
xor
sbb
insl
lea
dec
pop
mov
fiaddl
scas
pop
call
cmp
ficomps
mov
xor
jmp
testl
sub
bound
push
cli
shrl
add
call
lret
mov
and
neg
push
lock
ljmp
loope
sbbb
xor
pop
cmp
xor
lret
xchg
sti
fcompl
push
dec
pop
mov
lret
push
in
fildll
ja
filds
mov
mov
inc
cmp
cmpsl
mov
shl
sub
lret
lahf
and
jae
popa
xchg
sbb
cmc
pop
jge
rclb
bound
arpl
or
cmp
mov
mov
pushf
push
or
and
pop
cld
pop
daa
mov
scas
jb
pop
cmpsl
jbe
add
ret
mov
data16
in
icebp
das
add
jbe
sub
dec
aas
insl
xchg
andb
mov
xchg
sub
lea
cmpsb
xchg
xlat
mov
iret
pop
and
lods
xor
inc
mov
jecxz
je
dec
adc
test
add
cmp
inc
add
outsl
mov
es
in
inc
and
push
xor
jb
ret
mov
xchg
mov
xor
lgs
sbb
inc
icebp
aaa
notl
movsl
mov
add
je
out
jbe
dec
inc
mov
pop
es
pushf
push
xchg
cmp
mov
pop
sub
cld
mov
dec
imul
inc
and
out
pop
sbb
or
nop
idivl
sbb
leave
dec
loope
and
inc
cltd
push
popa
loop
leave
es
adc
add
lock
inc
cmpsl
or
add
mov
ss
dec
stos
adc
inc
mov
sub
xor
push
xchg
push
popa
and
or
pop
inc
leave
pop
outsl
std
xchg
icebp
shrl
fdivrl
xchg
inc
sub
fadds
ret
inc
aas
test
add
and
dec
cld
xchg
jmp
cmpsb
incb
jb
stos
lock
lret
or
pop
xchg
add
mov
inc
icebp
mov
lock
xchg
xor
mov
or
pop
mov
cmc
jae
negl
pop
adc
fdivl
addr16
lret
jp
mov
pmuludq
and
mov
test
insl
insb
mov
clc
aad
fwait
mov
mov
dec
addl
push
dec
or
add
mov
lret
push
cmpsb
add
push
cltd
outsb
pop
scas
xchg
cmp
adc
push
sbb
lock
add
push
add
sbb
or
lock
fcmovne
divb
pop
push
dec
imul
xor
mov
addr16
cmc
out
pop
dec
xchg
imul
jp
roll
shll
mov
xchg
in
data16
cs
and
rcrb
daa
fldt
xchg
mov
jge
scas
pop
rorb
mov
inc
adc
fcompl
pop
and
jmp
or
sub
cld
ret
hlt
cmp
mov
mov
fnstenv
imulb
and
jb
sbb
fsubrs
mov
push
enter
inc
hlt
jl
sbb
jmp
fdivs
ljmp
rcl
ret
mov
adc
lret
icebp
dec
sbb
or
pusha
in
push
and
adcl
mov
mov
dec
scas
inc
lds
into
movsl
insb
adc
insl
pop
ret
scas
cld
push
adc
sti
pop
sub
jp
push
leave
fbstp
ret
sbb
lea
cmpsl
dec
add
movsl
jnp
out
loopne
addr16
iret
cmc
jbe
inc
cmc
popa
xchg
push
enter
dec
dec
pushf
lock
jo
mov
gs
insl
out
pop
mov
sub
xchg
icebp
push
pop
pop
inc
cld
out
mov
and
pop
loope
mov
push
repnz
xchg
enter
rorl
jecxz
lea
mov
in
std
fsts
adc
clc
push
jno
mov
push
add
mov
mov
inc
sub
es
es
xchg
inc
das
or
in
das
mov
cmp
or
leave
jge
sbb
jmp
and
jmp
test
jecxz
je
js
pop
jno
add
and
or
sub
inc
mov
jae
jmp
and
out
and
jmp
ja
pop
dec
push
gs
adc
cltd
sbb
sub
cmp
jne
push
into
adc
push
in
sbb
jbe
lods
jb
ja
outsl
les
pushf
mov
xor
pop
xchg
push
lds
xchg
js
outsb
inc
icebp
push
dec
out
in
add
sub
xor
xor
dec
jl
xor
fst
jp
lret
cltd
jb
sub
cmp
cld
test
lcall
loopne
int3
xor
lds
test
sbb
fs
xchg
dec
cmp
cmp
out
test
stc
xor
xlat
mov
jg
std
xor
xor
mov
push
outsl
lock
aaa
hlt
in
adc
cmp
cmp
cmp
pushf
out
add
das
xchg
jbe
rolb
leave
xchg
pop
push
in
pop
mov
int
push
mov
sub
mov
mov
lock
stc
rorl
pop
jne
add
mov
call
icebp
enter
xor
push
dec
lcall
push
sub
xchg
mov
icebp
inc
cmp
mov
mov
mov
ja
sbb
imul
scas
mov
fadds
cmp
jecxz
mov
inc
hlt
nop
mov
push
pop
out
fnstcw
gs
jbe
mov
lret
cmpsb
loop
repz
pop
fcomps
add
and
jne
jbe
in
mov
out
ja
scas
hlt
jnp
sub
pop
pop
shlb
xor
add
movsl
pop
lods
clc
into
dec
or
sbb
sti
jno
xchg
movsb
cmc
push
das
sarl
mov
ljmp
xor
sti
jge
leave
mov
lods
fs
sarb
cmp
and
jb
lds
std
movsl
repz
push
adc
dec
xor
cmp
loopne
cmpsb
jo
or
xor
in
mov
mov
or
lods
dec
imul
bound
pop
sbb
jg
out
idivl
sub
xchg
movsl
or
sub
lret
add
mov
sbb
sbb
out
andl
dec
aam
mov
dec
xchg
adc
inc
mulb
adc
mov
mov
xor
jb
jl
dec
xor
cmpsl
mov
mov
cltd
push
loopne
jmp
ja
mov
sbb
jo
xor
mov
pop
and
mov
rcrb
sbb
imul
dec
stos
sarb
sbb
fnstsw
sub
mov
inc
push
cmp
sar
jmp
push
fwait
dec
xchg
shlb
loope
lds
or
dec
add
fstpt
cmp
stos
push
or
fiadds
rcrb
or
push
in
scas
loop
and
aaa
mov
jne
xchg
mov
pushf
scas
push
lret
shr
push
jge
in
and
js
in
or
lret
pop
jg
fildll
sti
stos
mov
or
adc
sub
jbe
mov
mov
and
mov
jb
lods
xor
fcomps
xchg
xchg
push
les
or
jp
loop
and
inc
icebp
lds
inc
test
pop
xor
adc
lahf
test
mov
xorb
pop
imul
jecxz
xlat
fistl
shrl
xor
ret
movsb
imul
xor
loopne
add
aaa
pop
mov
jo
sbb
inc
mov
adcb
push
adc
cmp
xchg
mov
arpl
sbb
and
es
xchg
dec
adc
ss
adc
and
inc
sbb
scas
mov
add
cld
push
dec
pop
stos
xor
mov
push
adcl
adc
repz
jbe
lea
and
add
cld
mov
push
xchg
outsl
or
in
int3
cs
inc
pop
xor
ret
cmp
popa
mov
xchg
repnz
push
jns
mov
push
js
pop
movsl
shr
icebp
mov
fs
xor
cmpsb
or
int3
js
stos
adc
aad
jno
cmpsb
and
xor
sbb
dec
adc
bound
jo
pop
scas
ret
es
out
repnz
add
out
mov
icebp
xor
or
addl
fstpl
and
lods
rorb
and
dec
mov
sbb
pop
ds
js
cmp
xchg
mov
dec
insl
pushf
cmp
inc
pop
lahf
mov
sti
pop
leave
push
cmpl
leave
ja
shrl
sub
mov
adc
jno
or
jne
popa
fimuls
js
add
ja
or
iret
and
mov
xchg
xor
xor
movsl
cltd
jecxz
cltd
cli
subl
cmpsb
or
sbb
pusha
mov
aaa
lods
ds
iret
lret
and
mov
and
pop
fcomp
inc
push
pop
push
cmpb
cmpl
xorl
pop
sub
push
xor
cmpsb
xor
popa
and
xor
cmpl
cmp
int3
test
dec
nop
push
imul
mov
sub
hlt
and
in
or
dec
inc
sbb
and
aas
test
dec
je
sbb
dec
inc
in
push
pusha
sbb
lret
or
fxch
jecxz
addr16
pop
cmpsl
in
outsb
mov
mov
xlat
fsub
jg
inc
dec
add
stos
addr16
pop
xchg
xchg
dec
imul
sti
lcall
xor
stos
das
cmp
sbb
into
andl
mov
xor
mov
pushf
inc
or
xor
fcomip
xchg
add
mov
data16
mov
or
aam
cmp
popa
cld
out
cmp
insl
pop
out
aaa
scas
sarl
add
sahf
flds
jg
push
cltd
mov
mov
mov
pop
fbld
sub
sbb
outsb
sbb
push
arpl
sbb
sub
add
jnp
mov
ljmp
loope
imul
mov
pop
out
clc
inc
arpl
outsb
mov
test
test
cmp
popa
cmp
and
add
cmp
lock
mov
ficomps
mov
add
cmp
mov
mov
cmp
add
loope
xor
push
movsb
call
inc
add
or
andl
mov
nop
mov
push
mov
movsl
movsb
add
dec
ret
xor
bound
das
icebp
mov
jp
sbb
leave
mov
dec
int3
in
mov
shll
and
test
leave
push
cmp
xor
decl
jle
sti
mov
add
movsb
sub
pop
dec
insb
pop
push
pop
xor
movsl
pop
push
jbe
mov
xor
lret
jmp
push
in
and
mov
push
ss
and
xlat
aad
pop
ror
jne
push
adc
sub
push
push
sbb
mov
mov
jbe
adc
les
push
push
out
scas
cli
xchg
js
sbb
cmp
or
mov
notb
lret
repnz
cli
jb
xor
xor
and
stos
cmp
lret
adc
rcll
cmp
fwait
and
mov
cmp
loop
xchg
push
popf
subb
mov
pushf
xchg
ljmp
pop
push
imul
adc
aam
inc
dec
dec
push
in
and
push
insl
les
mov
adc
push
mov
sub
cwtl
popa
and
and
addl
pusha
push
filds
dec
and
dec
pop
jbe
loop
xchg
mov
push
inc
push
test
out
mov
sbb
fnstenv
sti
cmc
fstcw
out
xchg
in
cmc
push
sahf
sbb
fiadds
call
xchg
int
fldt
jo
jp
mov
xorb
mov
push
xor
cmpb
imulb
gs
add
cmp
call
cmp
fs
jl
insl
aad
add
inc
js
loop
leave
aam
cwtl
movsb
mov
aas
fsub
and
xor
cs
leave
cmp
in
or
add
rorl
test
call
jmp
pop
push
popf
mov
rcrl
xor
sbb
out
enter
mov
jae
lret
outsl
xchg
rcll
iret
add
jns
out
dec
dec
enter
xlat
in
fcomps
test
sarb
push
jnp
mov
pop
xor
pop
dec
and
sbb
sarb
jae
push
push
or
jg
ror
pop
out
mov
out
cwtl
cs
leave
sub
and
adc
sbb
push
jae
cs
repnz
adc
sub
pusha
and
popf
aam
ljmp
sub
imul
jp
add
insl
mov
fwait
xchg
lock
sti
mov
mov
push
lock
int3
sbb
lods
ror
ret
and
adc
adc
mov
mov
ljmp
into
pop
hlt
and
cmp
aaa
push
jnp
dec
or
jne
stc
out
ja
pop
bnd
or
call
xor
push
cmpsb
stos
mov
inc
ret
adc
or
jecxz
push
cmpsb
cltd
orb
hlt
xchg
loope
sub
insb
inc
jp
insl
mov
jle
fwait
jb
outsl
mov
add
fidivrl
xchg
xchg
aaa
cmp
pop
mov
clc
mov
imul
jl
fnstsw
lcall
jbe
iret
mov
popa
je
pop
or
shl
fwait
pop
mov
jnp
jmp
daa
jo
test
push
pop
xchg
inc
data16
jmp
jmp
xor
scas
xchg
aam
mov
pusha
repz
movswl
mov
mov
test
mov
sahf
insl
sub
push
aam
lret
push
dec
push
jl
pop
cwtl
and
or
lods
xor
add
dec
test
adc
mov
repnz
push
push
cld
and
rorl
cmp
add
and
pop
cld
outsb
aad
out
icebp
lds
out
cli
add
or
test
test
rcr
repz
lret
jae
ret
fcoms
xor
push
xchg
imul
pop
enter
hlt
sub
imul
test
imul
adcb
jmp
mov
inc
push
loop
jmp
bound
push
fcom
ljmp
xchg
mov
mov
jge
scas
cltd
or
addb
sub
xchg
and
testl
cmpsb
adc
lret
test
adc
ds
shl
lea
test
jbe
fistpll
fisttps
icebp
push
jns
or
sub
add
lds
enter
pop
cmpsb
and
mov
pop
andl
dec
adc
xor
push
or
mov
rcrb
xor
mov
enter
dec
in
mov
jae
push
and
pop
push
loope
sbb
mov
sub
ds
loopne
data16
movsb
sbb
sar
jecxz
push
push
xlat
out
cltd
push
mov
orl
hlt
lea
es
mov
repz
movsl
xor
dec
pop
ret
rolb
lcall
mov
mov
sub
clc
sbb
sbb
mull
bound
je
add
pushf
mov
inc
aas
pop
adc
mov
push
jo
sbb
sub
xchg
mov
push
rcrl
pusha
xor
popf
push
cld
adc
aaa
jmp
jns
xchg
or
dec
and
xchg
outsl
push
jne
sub
jnp
arpl
roll
xchg
sub
push
js
int3
int3
xchg
jb
pop
adcb
in
flds
movb
inc
push
cli
xor
fistl
and
inc
adc
push
stos
mov
and
data16
or
push
jnp
push
jb
adc
inc
mov
sarb
push
and
pushl
cmp
popl
outsb
xor
mov
dec
jae
and
add
xchg
xchg
or
sbb
div
gs
push
jle
stc
jge
pusha
scas
fildl
pop
cltd
movl
mov
stos
popa
xor
jbe
adc
hlt
inc
jae
mov
pop
pop
shrl
nop
dec
push
mov
out
add
or
movsb
gs
jns
cmp
jno
add
pop
mov
xchg
repnz
fadd
cmpsb
mov
popa
mov
cli
sub
rolb
xor
mov
or
lods
and
adc
xchg
into
js
vmovntpd
inc
aaa
xor
stos
subb
ret
call
jmp
cmpb
js
mov
xchg
mov
jle
pop
pusha
sbb
xor
clc
fs
pop
cmp
adc
jp
mov
lods
popl
pop
cwtl
fnstsw
test
stc
xor
ljmp
inc
adc
and
pop
cwtl
in
cli
imul
mov
ja
stos
push
push
xchg
je
inc
and
mov
movsb
mov
cmp
push
mov
push
out
sahf
int3
rol
xor
mov
add
sbb
stos
rcrl
call
cmp
xor
adc
stos
inc
cld
ljmp
xor
jl
or
xor
stos
xor
aas
pop
xor
shl
jno
addb
pop
mov
and
xchg
mov
stos
les
fldl
cltd
cmp
mov
mov
cmp
and
sti
add
cs
push
loopne
sahf
sbb
and
and
dec
mov
xor
mov
call
jnp
stos
in
or
jmp
and
fistpll
inc
std
inc
mov
jmp
inc
adc
adc
addr16
xchg
dec
daa
mov
mov
push
aas
into
inc
stos
sub
arpl
adc
xor
inc
fnsave
imul
es
lods
loop
mov
std
add
icebp
dec
adc
jge
iret
sub
repz
xchg
call
dec
sub
mov
push
cmp
int
lea
andb
dec
add
dec
xor
into
dec
loop
call
sub
movsl
xchg
jo
xchg
add
pop
popa
shlb
repz
add
inc
fwait
cmpsb
ljmp
sahf
int
inc
add
xlat
xchg
dec
sar
cmpsl
mov
dec
pusha
mov
xchg
imul
xchg
add
in
stos
test
aam
test
aas
jmp
int3
add
add
arpl
ret
mov
mov
mov
jmp
imul
aas
push
mov
data16
jecxz
cs
mov
popf
sub
stc
and
outsb
stc
in
xor
pop
adc
pop
leave
in
test
loop
sub
jns
sbbl
dec
js
les
mov
add
adc
ret
push
mov
das
aam
roll
inc
add
ret
fbstp
mov
xchg
rorl
test
popf
jle
js
and
xchg
inc
pushf
dec
push
test
imul
js
addr16
push
fs
pushf
out
and
test
es
sbb
popa
mov
into
mov
push
test
sbb
popl
imul
clc
call
mov
stos
jno
cmp
sub
mov
enter
pop
movsl
xor
shr
sub
cltd
decl
and
jge
adc
xor
pop
jo
push
lahf
mov
xchg
jl
push
fcomip
pop
mov
jns
mulb
and
int3
adc
xor
nop
inc
outsl
xchg
jge
jnp
jg
jo
jecxz
dec
mov
cmp
js
loopne
xlat
pop
clc
fdivrs
lret
mov
or
call
iret
lods
cmc
jne
sub
orb
push
or
es
sub
mov
adc
in
adc
js
xor
mov
les
jl
in
movsb
mov
mov
jnp
and
inc
aam
int
or
jge
pop
mov
fs
cmc
add
lahf
and
mov
xchg
xchg
repnz
mov
daa
and
jmp
cli
mov
insl
fbld
in
cmp
and
movsl
bound
ds
nop
add
jns
mov
shrl
nop
lods
imulb
push
sub
ja
daa
daa
jle
inc
out
out
clc
mov
pop
js
jne
nop
scas
aaa
insl
xchg
ret
jnp,pn
push
dec
rol
lock
cltd
push
inc
pop
fnstenv
lahf
out
idivb
sub
mov
mull
mov
xchg
xor
jo
fisubrs
in
rcr
fwait
mov
imul
fiaddl
pop
addb
jnp
fstpt
or
pop
jae
or
pop
aas
cmp
enter
xor
movsl
iret
ljmp
aam
movntps
and
in
mov
mov
xor
inc
stos
mov
mov
fs
call
sub
sti
adc
pop
es
cmp
xchg
popf
jg
push
insl
out
or
dec
int3
mov
pop
xor
push
add
dec
shll
xor
mov
repz
js
push
jnp
out
add
xor
push
lds
shrb
mov
pusha
int3
mov
mov
testb
cmp
xor
push
jmp
loopne
mov
mov
pop
aad
mov
inc
sub
repz
push
lcall
scas
and
ret
and
cmpsb
outsb
out
les
fisubl
sub
fsubl
cmc
push
dec
data16
xchg
fadds
adc
ret
cld
xchg
adc
rorb
inc
dec
daa
sbb
mov
shlb
ret
fsubl
pop
faddp
stc
and
xchg
pushf
inc
mov
sahf
mov
push
test
ss
je
leave
xor
sbbb
fiadds
pop
cmpsl
mov
dec
mov
rcrl
or
fnstsw
pop
jge
cli
mov
xorb
jo
cmp
test
mov
push
mov
bound
bound
int
jge
repnz
scas
test
push
mov
cmp
shll
cs
cmpsb
push
scas
lahf
aad
mov
xchg
in
dec
sbb
lret
test
rcrl
in
xor
sbb
test
or
pop
lahf
and
ret
outsl
popf
scas
xchg
sub
div
loop
scas
jge
aaa
or
mov
sub
sbb
addr16
push
sub
mov
cmc
jne
in
xchg
inc
lret
test
into
sbb
rorb
std
jnp
or
xchg
cmpsl
push
lahf
test
and
incb
xchg
cmp
xchg
sub
inc
loopne
shl
es
cmpsl
pop
lret
cmp
in
das
xchg
mov
push
inc
sbb
pop
jge
scas
push
or
cmp
cmp
loop
pop
inc
vpunpcklwd
jae
lea
mov
cltd
inc
mov
divb
lds
xchg
xor
es
js
cltd
sbb
push
out
sbb
loopnew
cwtl
sbb
and
sbb
xor
cmc
adcb
or
je
out
test
cmp
not
ja
in
adc
mov
inc
iret
sub
mov
mov
in
in
xchg
xlat
rorl
push
dec
fs
hlt
add
das
fs
add
ja
mov
lds
xchg
or
xor
dec
popa
adc
jnp
dec
inc
push
sbb
ja
stc
mov
jmp
push
jo
movsb
daa
ret
adc
add
and
roll
ret
and
gs
cmc
daa
cmpsb
sub
cli
xchg
mov
sahf
jbe
and
das
add
xchg
loop
in
cld
aas
push
cwtl
jne
cmc
push
sbb
push
scas
mov
in
cmp
inc
clc
ret
xor
jp
mov
mov
adc
inc
jg
add
cltd
enter
add
add
jle
push
adc
push
lret
sub
stos
adcb
adc
cltd
mov
jo
pop
repnz
push
repnz
jnp
dec
sbb
and
adc
lods
imul
push
ja
inc
mov
push
inc
xor
push
dec
loop
lods
test
in
out
loopw,pn
data16
mov
push
cmp
mov
cmpsl
cmc
addb
fbstp
jae
fs
sub
jnp
clc
fdivr
cld
lcall
sbb
int3
test
jne
push
mov
jmp
xor
out
pop
loopne
les
out
mov
in
ja
pop
test
sub
repnz
sub
das
push
mov
mov
jb
movsl
mov
mov
test
add
movsb
pop
das
mov
sti
fimuls
stc
mov
paddsb
mov
lds
cwtl
or
mov
add
loop
aad
loope
mov
or
xlat
jae
jmp
and
lods
rcr
and
dec
pusha
insb
ljmp
mov
mov
shlb
inc
ja
out
and
mov
call
cmp
les
jns
xchg
addr16
nop
aad
mov
loopne
adc
jnp
sbb
mov
push
mov
add
or
and
inc
dec
imul
xchg
sub
dec
pop
mov
jl
push
repz
push
pop
dec
and
dec
gs
sub
xchg
push
xor
inc
lods
and
sbb
fcomip
pop
xchg
pusha
loopnew
out
mov
loopne
inc
or
mov
rcr
arpl
js
iret
stos
jo
aas
add
les
dec
mov
dec
adc
mov
ret
and
mov
call
mov
aad
push
shl
and
fidivrs
stc
ret
mov
ljmp
cmp
xchg
cmp
adc
dec
aaa
movsb
jo
cmp
scas
int3
adc
sub
mov
xchg
loope
pop
push
pop
mov
push
rolb
clc
pop
mov
pusha
push
je
pop
lods
insb
add
imul
dec
push
xchg
cmc
addr16
jecxz
or
adc
fs
negl
outsl
sbb
pusha
xchg
mov
push
cmp
sub
cwtl
cmp
cltd
or
pop
pop
adc
inc
sbb
popa
jge
and
test
adc
sbb
jmp
cmp
or
addr16
push
mov
ret
idiv
aam
cmpsl
xlat
xor
add
push
inc
mov
iret
clc
clc
daa
sub
les
imul
xchg
cli
icebp
inc
push
lock
arpl
shl
fidivrl
out
adc
pop
dec
xchg
test
fcoms
shll
push
mov
or
mov
clc
add
xor
mov
out
sub
or
gs
jae
in
pop
mov
push
mov
dec
call
push
sahf
psraw
or
inc
mov
sbb
add
sbb
pop
sub
icebp
pop
shrb
pop
lods
jmp
pop
in
push
push
sub
sub
test
inc
xchg
xchg
mull
xor
pop
sub
cmp
addb
and
sub
or
push
mov
daa
and
dec
dec
adc
push
popf
clc
mov
popf
sahf
jno
sub
sub
xchg
pop
inc
or
sub
push
dec
push
imulb
inc
adc
dec
push
xor
dec
xor
divb
mov
push
push
mov
sbb
call
adc
sub
scas
icebp
pop
out
scas
mov
xchg
outsb
adc
pop
aaa
xor
fidivs
fcoml
or
xchg
push
test
fwait
movl
or
dec
dec
cmp
or
out
ja
sbb
xor
lock
jecxz
ret
sbb
fbstp
jg
adc
or
subl
ljmp
sbb
sbb
adc
cwtl
mov
mov
fdivrl
subb
and
pop
xchg
lret
add
adc
and
fcmovu
cmp
in
fcomps
out
mov
xchg
cli
push
mov
jecxz
add
sub
mov
js
push
mov
sbb
pop
nop
pop
jg
cli
testl
lock
mov
repz
inc
mov
or
pop
cmp
sub
dec
fld
and
nop
or
mov
mov
or
in
daa
sbb
loop
aaa
or
adc
pop
fs
adc
insb
xchg
xor
mov
ljmp
pop
mov
imul
push
rcr
shll
inc
fdivrs
xlat
mov
leave
inc
push
push
pop
mov
push
cwtl
nop
arpl
or
dec
aaa
push
cmp
enter
test
les
shll
pop
out
adc
lcall
jns
mov
or
xor
push
fcmovnbe
mov
into
mov
sbb
jbe
clc
ds
arpl
loope
and
gs
xor
push
andl
mov
in
xchg
mov
mov
movsl
xchg
jmp
mov
enter
cltd
fimull
sbb
sbb
sub
test
sbb
adc
mov
jmp
ja
test
cld
mov
repnz
sub
and
pop
and
push
leave
xchg
in
pushf
sbb
loopne
rolb
shrl
data16
inc
lods
push
add
jle
add
jo
cmc
fidivl
gs
pop
cwtl
cs
scas
call
int3
ret
dec
sbb
xor
jg
mov
adc
out
mov
pop
rolb
mov
adc
mov
outsl
xor
mov
int
rclb
dec
outsb
into
sub
nop
mov
pop
ss
lcall
fisttpl
inc
jo
mov
fisttpl
test
sbb
nop
xchg
pop
mov
rorl
lea
xchg
or
sbb
dec
sub
scas
aas
mov
add
adc
fnstsw
mov
xchg
cmp
aad
aas
in
ja
and
cmp
sahf
arpl
mov
add
pop
test
loop
ret
insl
jne
loop
adc
in
test
imul
movsl
fsubl
cld
rorl
or
fs
dec
sub
sbb
xchg
cmp
lods
cmc
push
mov
or
lret
push
ja
cld
mov
inc
bound
pusha
cwtl
fidivs
sbb
mov
cmc
pop
ljmp
xchg
jp
popf
ret
xor
fwait
dec
push
inc
cmp
pop
dec
lahf
mov
cli
and
sbb
mov
xchg
test
je
stc
push
or
inc
add
imul
ja
and
and
mov
aaa
sub
in
cmovs
cmp
xor
or
out
pop
sub
mov
lret
ds
sbb
sub
xlat
xchg
lea
not
mov
repz
nop
xor
insb
scas
pop
xchg
cmp
or
cmpl
jae
scas
sbb
rcl
and
mov
mov
push
insb
fsubp
clc
lcall
scas
mov
out
shl
iret
shrl
inc
maskmovq
notl
dec
hlt
push
adc
xchg
or
xor
outsl
in
mov
sbb
pop
cwtl
dec
push
inc
pcmpeqb
jl
mov
sub
xchg
cmp
cmpsb
in
stos
push
pop
cmp
xchg
enter
daa
pop
and
cmpsl
or
adc
loopne
dec
inc
das
in
std
jb
gs
pop
lret
mov
add
cltd
push
inc
xor
sbb
push
out
cli
cmp
repz
xchg
jge
lock
mov
push
pusha
jmp
inc
dec
aam
loop
clc
and
inc
push
stos
scas
jg
dec
shr
insl
mov
dec
ret
bound
inc
faddl
adcb
jno
pop
mov
test
aad
rcrb
and
mov
mov
fdivp
jecxz
push
cld
pushf
xchg
ljmp
rcr
cmp
jecxz
cld
pushf
or
cmp
cmpsl
js
jbe
frstor
xor
push
hlt
xor
lret
ret
je
inc
mov
dec
cli
cmp
adc
jle
sbb
cltd
adc
cltd
pop
ljmp
mov
je
outsl
push
jno
lea
outsl
or
adc
push
repnz
imul
sbb
dec
in
xchg
jle
mov
mov
adc
pop
dec
mov
inc
push
mov
movsl
data16
jo
fucomp
cmpsb
jno
push
scas
jge
sbb
test
inc
push
or
mov
es
jns
xchg
lret
push
rcrb
scas
xor
ljmp
xchg
clc
mov
mov
test
dec
jmp
cmp
push
xchg
xchg
rorl
add
pop
dec
jno
mov
add
stos
sbb
pop
cmp
aam
clc
aaa
stos
mov
adc
fucomi
pop
pushf
jge
lret
pop
negb
cli
dec
ror
jno
dec
dec
pop
popa
mov
insl
loopne
jne
inc
test
inc
fisubl
repnz
mov
imull
test
repz
inc
or
push
mov
xchg
dec
stos
dec
push
cltd
push
mov
fnsave
nop
test
xchg
jmp
cld
jecxz
pop
les
mov
sti
cmpb
mov
fimuls
xor
xchg
sbb
push
and
add
cmp
jmp
pop
dec
pop
mov
dec
out
outsb
sti
xchg
cwtl
jge
push
push
mov
outsl
pop
je
fisubl
bound
pushf
in
aam
stos
rcrb
sbb
sub
push
lret
ret
mov
add
or
sbb
leave
jmp
xchg
jmp
mov
xchg
int3
pop
mov
mov
call
les
xor
xor
mov
rcr
push
lahf
fmull
lea
add
xchg
jnp
xor
xor
stos
jg
insb
loope
pop
mov
mov
mov
xor
pusha
mov
xchg
dec
sbb
inc
dec
pop
into
dec
pop
pop
mov
sub
pusha
repz
dec
sbb
jle
mov
push
mov
imul
xchg
xchg
mov
out
ret
push
sub
insb
xchg
push
pop
nop
mov
xlat
ret
or
scas
sub
pop
cmp
bound
jp
lahf
jbe
jno
pop
fs
xor
fnsave
jne
in
jmp
dec
xchg
jns
xor
in
js
inc
mov
rcl
inc
xor
xor
arpl
popf
mov
xchg
pusha
fistl
sbb
jno
lods
mov
stc
ja
jb
inc
xchg
dec
repnz
mov
inc
cmp
negl
xchg
cmp
js
jmp
sub
inc
lods
loope
cwtl
sbb
push
loop
add
add
lock
dec
push
inc
sub
movsb
pusha
pop
test
push
and
mov
aam
xchg
push
push
sub
mov
pop
push
mov
xchg
jns
xchg
fbld
vmread
or
out
lock
ja
out
and
ret
inc
jge
aas
mov
xor
mov
dec
decb
add
fildl
aas
fisttps
and
push
imul
jecxz
ja
push
scas
add
mov
stos
in
jl
mov
or
pop
or
pop
push
add
rolb
out
mov
mov
addr16
call
out
pushf
in
arpl
in
mov
sub
jbe
nop
idivl
xor
idiv
adc
push
mov
mov
fildl
sub
stos
jg
das
insb
pop
pop
sub
adc
jo
lret
arpl
mov
aad
jnp
sub
sbb
mov
mov
xchg
js
add
xor
xor
rcr
je
cmp
iret
push
pusha
pop
sub
fnstsw
aam
add
dec
mov
test
test
loopne
pop
test
or
push
mov
sarb
test
loope
or
push
cmp
xor
fdivrs
bound
aad
subb
js
push
jle
std
lret
xchg
mov
jecxz
jmp
mov
xor
adc
inc
and
fs
and
mov
mov
hlt
adc
ret
insb
mov
push
mov
and
stos
test
and
push
mov
mov
and
sbb
add
mov
push
jle
pusha
frstor
jno
pop
mov
xchg
mov
aad
popw
xchg
mov
and
fnstsw
rcl
cmp
loopne
push
jns
cli
mov
and
popa
sub
in
aam
adc
filds
jmp
inc
or
out
call
das
pop
dec
adc
imul
jp
hlt
push
push
push
push
shl
and
inc
pmuludq
mov
lahf
je
push
aad
ja
int3
xor
insl
mov
loopne
ss
adc
mov
into
mov
dec
mov
sub
push
sub
int3
mov
xchg
mov
jecxz
sbb
mov
and
rorb
div
out
imul
lods
mov
lds
xchg
sbb
xchg
pusha
fists
xchg
add
dec
pop
in
jmp
cmpl
inc
icebp
data16
shll
xchg
adc
fdivr
movsb
mov
pop
push
cs
js
dec
add
jle
fcomip
in
aam
scas
ret
mov
sub
add
jl
and
js
push
cmp
mov
std
es
jmp
xlat
pop
pop
jmp
jb
dec
aad
adc
or
jne
push
fs
stos
outsb
cmp
aad
mov
jmp
push
lahf
hlt
rclb
pop
sbbl
sub
sub
sub
mov
jo
ficomps
aad
xor
pop
jmp
loopne
mov
xchg
pop
jmp
cli
addr16
lahf
push
movsl
movsb
mov
mov
in
inc
rclb
dec
sub
movsl
clc
cmp
fwait
aas
lds
lods
mov
insl
pop
cltd
inc
add
push
roll
mov
aaa
out
pop
sahf
into
cld
xor
cmpsb
addr16
in
dec
jle
arpl
lcall
dec
xor
cs
mov
lcall
sub
lds
popf
cwtl
test
enter
and
test
lock
mov
xor
adc
mov
lods
dec
sbb
dec
pop
mov
je
in
add
mov
and
sti
mov
jecxz
add
std
dec
push
mov
sbb
je
cmc
xchg
push
adc
imul
mov
mov
rcr
and
loopne
pop
mov
and
fwait
aas
ja
pusha
and
loope
and
dec
ret
xor
pusha
das
daa
push
sub
cltd
nop
mov
ja
movsb
xchg
mov
test
lahf
ds
inc
ds
popf
pusha
jg
or
cld
hlt
scas
pop
cmp
cmp
jmp
insb
push
jno
data16
jbe
adc
dec
fwait
fs
ds
pop
push
mov
outsl
push
cmp
shll
lods
add
mov
and
xchg
push
sbb
insl
inc
jne
sub
mov
dec
int3
cs
adc
dec
enter
hlt
pusha
cmp
pop
xchg
mov
jmp
adc
add
push
inc
add
in
jmp
jnp
mov
inc
sbb
out
add
mov
out
es
push
ljmp
aas
mov
push
dec
cwtl
and
jne
sub
cmp
arpl
pushf
cmp
fwait
stos
adc
scas
mov
out
xchg
mov
icebp
jmp
mov
inc
pushf
mov
pop
loopne
daa
shlb
cmp
mov
dec
out
mov
adc
out
andl
push
shlb
jl
cmpb
cmp
mov
mov
dec
xor
ds
and
jbe
push
cmp
repz
hlt
daa
mov
mov
lds
cltd
enter
sbb
add
push
jecxz
push
aam
mov
ret
aas
stos
pusha
push
xchg
shr
ret
leave
rclb
jae
imull
adc
dec
mov
mov
sbb
pop
mov
enter
imul
out
sbb
into
dec
sbb
xor
mov
inc
xlat
fsubrs
int3
int
in
fstps
lods
popf
sbb
cmp
imul
lock
call
lea
sub
push
in
fstl
dec
adc
je
inc
pop
mov
mov
out
jmp
lret
daa
rcrb
and
dec
mov
rcrl
test
into
pushf
or
push
jo
inc
jne
push
loop
in
cvtps2pd
pop
out
bound
lcall
add
cmc
sti
inc
mov
sub
xchg
dec
cmpsl
push
dec
pop
mov
stos
lahf
jnp
inc
es
int
in
stos
cmpsb
call
leave
mov
repz
push
mov
repz
xor
insb
aad
mov
mov
into
cmp
adc
shr
push
pop
mov
scas
sbb
jne
pushl
mov
mov
mov
xchg
sbb
pop
inc
les
xlat
inc
insl
imul
adc
ss
lret
aaa
loop
sub
fdivrs
stc
add
jl
jmp
scas
xchg
stos
push
adc
into
and
int3
xchg
scas
fiaddl
jecxz
stos
and
mov
jl
pop
movsl
int3
adc
jecxz
imul
mov
outsl
and
and
jmp
outsl
push
icebp
fs
mov
sahf
in
ja
adc
mov
mov
adc
jmp
lods
aad
fidivrl
jne
jno
jae
shl
movsl
je,pt
jp
lds
out
jp
nop
movsl
clc
shrb
outsb
movsb
jge
rcll
mov
cmp
add
loop
out
subl
test
jmp
mov
cmp
sbb
mov
fwait
sbb
add
or
push
cli
lds
ret
pop
cmc
and
inc
sahf
pop
sbb
cmp
movsb
imul
cmc
pop
push
jecxz
sub
push
mov
lcall
outsb
adc
or
in
data16
sub
shll
cmpsl
pop
jl
mov
sub
adc
and
push
mov
in
mov
pushf
out
push
daa
adc
loope
mov
adc
clc
or
mov
scas
scas
addr16
xchg
xchg
outsl
cwtl
repnz
popa
inc
mov
andl
aad
inc
lcall
mov
call
outsl
lods
jae
insl
stos
sbb
sbb
loop
jge
fisubrs
push
into
xchg
outsb
push
stos
lcall
rorb
fisubrs
in
xor
filds
jns,pn
out
pushf
sar
dec
mov
sbb
and
ljmp
pop
dec
sbb
push
fimuls
bswap
mov
xchg
inc
mov
aad
out
xor
pop
pop
stos
push
rdpmc
in
jae
sbb
jmp
dec
cmpsl
mov
outsl
cwtl
nop
stos
cmp
xchg
sub
pop
mov
xchg
int3
loopne
dec
loope
sub
call
sub
xor
inc
pop
mov
push
div
push
cmpsl
mov
out
mov
xor
cmp
subl
sub
mov
xor
stos
add
bound
or
je
fucomip
scas
daa
add
xor
mov
or
loope
xchg
popa
repnz
cmp
lods
dec
add
hlt
lahf
shlb
mov
ret
push
dec
dec
aas
dec
and
mov
negl
lret
mov
sub
movsb
dec
adc
iret
adc
push
out
mov
ret
enter
mov
sbb
mov
punpckhwd
aam
sub
and
ss
ja
loope
mov
sub
shrb
sub
cmpsb
out
nop
loop
inc
dec
ret
imul
add
add
push
lock
sbb
pop
adc
arpl
fldl
shll
mov
mov
push
fisttpl
negb
adc
push
fadds
push
jle
popa
je
jo
testl
ret
push
sub
shlb
push
mov
inc
nop
dec
xlat
jb
pop
cmp
xor
lea
push
jb
sahf
push
xorb
aam
pop
dec
jle
sub
jnp
out
pop
test
and
or
prefetchnta
in
xchg
pop
rcll
imul
hlt
mov
dec
test
movsl
lods
pop
jecxz
test
aad
sbb
mov
shlb
in
and
jge
stc
lods
faddp
bound
pop
jnp
insb
leave
popf
and
sti
mov
sti
fcomp
or
jo
cmp
leave
repz
inc
inc
mov
movsb
ja
xor
mov
cmp
push
jecxz
leave
nop
cli
and
add
lods
arpl
jno
fdivr
cmp
aad
sub
in
dec
jmp
pop
jo
xchg
adc
mov
test
mov
fistps
push
mov
adc
in
adc
pop
ss
ss
fistps
push
pop
adc
or
fs
outsb
jae
fadd
int
out
mov
addr16
xchg
adc
imul
pop
ret
cmc
hlt
int3
mov
scas
int
and
es
mov
pop
arpl
or
ds
mov
push
cli
loop
push
icebp
in
add
test
push
daa
addr16
int3
out
inc
andb
jle
lods
mov
lods
cltd
adc
lods
mov
enter
lock
movsb
adc
test
rcrb
aad
sahf
lcall
ss
sub
mov
jge
lds
idivl
adc
push
enter
insl
lret
dec
jne
test
inc
pop
fs
mov
das
cmp
xchg
xchg
int3
jae
je
je
sbb
mov
imull
sbb
sub
popa
push
hlt
jae
movsl
scas
outsl
sti
xor
aaa
not
jns
mov
loopne
testb
xchg
push
jg
call
cwtl
lock
cmp
mov
cmp
enter
xor
stos
rclb
lds
inc
mov
mov
xchg
int
jecxz
and
sub
jns
insb
cmpsl
outsb
pusha
mov
out
pop
push
inc
cmpsb
xor
insb
divl
or
nop
les
jp
pushl
and
dec
cmpsb
stc
fsts
insl
push
pop
cmp
xor
mov
cmc
dec
or
subb
push
push
popa
stos
movsb
lods
cmp
jae
pop
test
and
aam
push
inc
xchg
stos
mov
in
sbb
sub
aaa
inc
in
movsl
scas
in
jle
pop
pop
mov
dec
icebp
fstpt
xchg
mov
mov
sar
pop
add
bound
arpl
cli
xor
xor
dec
pop
insl
and
fwait
adc
add
xchg
add
jg
cli
test
mov
push
lods
cmpsb
mov
cld
dec
aaa
mov
dec
out
in
add
in
xor
icebp
sahf
enter
hlt
addr16
cmp
stc
jnp
pop
cmc
add
mov
movd
jg
out
cmp
in
test
clc
mov
ljmp
sarb
mov
pop
lret
bound
subb
push
inc
add
in
pop
dec
add
jns
cld
cltd
lods
sub
test
mov
xchg
inc
daa
inc
mov
add
repz
mov
pop
movsl
rclb
gs
ret
lret
sti
getsec
push
andb
xchg
adc
or
stos
dec
xchg
repnz
fdivp
inc
dec
test
shll
mov
xchg
add
adc
out
ret
test
out
call
add
push
pop
mov
xlat
cmp
out
jnp
mulb
fisubl
std
arpl
imul
addr16
or
out
push
push
jb
fiaddl
sub
ds
pop
mov
pop
mov
ficomps
mov
and
pop
lock
int
xchg
adc
fisubrs
popa
cmp
add
test
dec
lret
js
popf
int
leave
ret
cli
sub
jne
mov
jo
dec
xchg
jo
lock
pushf
push
fisubrs
push
movsb
mov
push
enter
xlat
out
cmpsl
mov
cli
dec
incb
and
cmp
jne
clc
ljmp
pop
sar
mov
lret
arpl
lods
xor
clc
loope
cld
mov
or
xor
ret
or
fwait
mov
xchg
nop
dec
popf
cmc
cmp
push
stos
mov
or
pop
and
pop
mov
jns
or
stos
lock
cli
stos
dec
fiadds
inc
jecxz
adc
or
xor
add
repnz
or
outsl
loop
int
jecxz
add
sbb
push
loop
xchg
inc
push
jbe
stc
jbe
fldl
mov
xor
cmp
add
in
pushf
jnp
je
roll
lods
nop
in
hlt
mov
imul
xchg
rol
push
notl
dec
ss
mov
jle
mov
test
pusha
ficomps
fmuls
pushf
xor
cmpsl
jmp
cmpsb
inc
insb
inc
lock
in
out
cmpsl
adcl
jge
add
push
rorl
or
sbb
cwtl
andb
xchg
aad
add
ss
sbb
aaa
sub
mov
int
adcb
xchg
imul
loopne
popf
jge
pop
mov
popf
clc
cmpsb
sub
xor
lret
or
pop
cmpsb
scas
fists
lret
scas
imul
cmp
sbb
nop
mov
cwtl
popa
jb
stc
pop
lods
stos
pop
clc
fistl
sbb
andl
daa
rcll
jbe
mov
cmpsb
loopne
inc
jmp
cmpsb
jecxz
jle
bnd
bound
mov
push
roll
mov
sub
lahf
imul
mov
leave
cmpsl
inc
adc
and
or
mov
lret
cmp
rcl
ret
lock
push
sbb
or
xor
ret
aad
or
aad
cmpb
pusha
push
jb
mov
into
jne
outsb
sub
pop
out
adc
icebp
int
add
fwait
js,pt
dec
jp
jp
mov
daa
mov
xchg
mov
sbb
push
dec
leave
addr16
les
lock
jo
insl
dec
stc
iret
ljmp
es
mov
dec
push
or
aaa
arpl
or
stc
add
cmc
push
xlat
stos
cmpsl
pop
dec
sar
cmp
test
pop
mov
js
and
int3
shlb
aas
mov
mov
jp
cwtl
enter
outsl
sbb
add
in
and
fbstp
data16
sbb
xchg
enter
jno
xchg
dec
mov
out
fwait
test
lea
into
xchg
fwait
cmp
mov
iret
mov
cltd
jo
loop
shrb
sbb
sub
adc
xchg
aam
mov
mov
pop
hlt
jae
lods
out
jae
add
mov
in
and
push
pop
lret
pmaxub
bnd
sub
pop
mov
shr
sbb
lahf
stos
push
adc
add
fisttpll
outsb
aam
push
pusha
iret
and
mov
mov
fs
push
icebp
clc
pushf
push
data16
cmp
fiadds
inc
mov
sbbb
xor
jge
clc
sub
adc
inc
adc
ficompl
push
leave
out
xchg
divb
pop
repnz
adc
std
mov
out
lods
fisubl
mov
adc
add
mov
adc
inc
loope
sarl
out
sbb
push
fisubs
leave
pop
jecxz
or
fbld
inc
lahf
pop
adc
jl
cmp
ret
and
mov
sbb
stos
jl
inc
aaa
push
lea
sbb
sbb
ja
cmp
movsb
xchg
insb
loope
cmpsl
add
sbb
cltd
scas
jle
pop
cmc
push
les
xchg
mov
dec
sbb
stos
jecxz
aaa
ret
es
ficoms
add
lcall
pop
and
sub
int3
and
icebp
dec
jbe
mov
mov
aad
incb
sbb
pop
push
fadds
sbb
xchg
int
je
add
cld
sbb
fnsave
add
cwtl
addr16
gs
inc
mov
cmp
pop
popf
cmp
cld
cld
int3
inc
jmp
dec
pop
push
adc
stc
or
cmpb
mov
sub
aaa
loope
inc
add
in
sbb
sub
call
popl
arpl
mov
mov
cld
clc
xchg
xor
cmpsb
inc
pop
xchg
int
xlat
and
dec
xchg
test
jge
pop
push
lret
push
xchg
jl
xchg
int
jne
add
mov
fwait
dec
inc
or
sbb
imul
test
jb
std
aad
mov
cmpl
lds
mov
xor
stc
mov
xor
aaa
shll
inc
sub
ror
dec
ljmp
test
loope
insl
imul
pop
fwait
adc
jo
movsl
mov
aad
mov
dec
bound
jbe
lahf
xchg
lea
push
andl
mov
popa
jb
and
push
lock
fwait
push
fistpll
sahf
or
mov
loopne
fwait
orl
rcrb
jns
loop
push
inc
mov
xchg
xchg
xchg
mov
lea
inc
adc
adc
push
mov
pop
or
dec
in
inc
mov
test
xor
push
mov
test
mov
inc
popf
pop
mov
jecxz
mov
cmp
ret
in
movb
cmc
xor
xor
pop
mov
or
jne
out
shlb
aas
inc
dec
leave
xor
add
loop
mov
jo
shrl
out
mov
adc
cmp
push
adc
or
sub
lcall
dec
or
enter
add
shrb
cmp
outsb
aas
xor
jmp
mov
inc
std
imul
or
push
and
mov
out
and
push
cmc
fstpl
add
sarl
pop
movsl
out
cmpsl
or
push
push
int3
adc
cmpsl
mov
mov
std
bound
lock
mov
push
jg
xchg
leave
or
nop
push
fistpl
xchg
test
sub
pop
cs
jmp
or
stos
ljmp
roll
add
mov
into
fs
iret
data16
jle
mov
mov
push
push
lcall
push
pusha
mov
jecxz
stos
mov
decb
push
enter
aad
outsl
fdivs
test
adc
test
mov
test
stos
xchg
stos
push
mov
cli
lods
xchg
insl
stos
int3
sbb
jnp
pop
gs
jo
adc
into
push
adcl
loope
mov
sbb
stc
addr16
mov
add
push
fcoms
jl
cs
xchg
loopne
cmp
mov
in
sbbb
fs
xor
je
or
push
lret
fisubrs
imul
es
push
mov
xor
or
repz
sbb
icebp
aad
sbb
imul
mov
cmp
repz
outsl
sub
adc
xor
cmp
jbe
vmread
out
out
out
or
sub
xor
sub
cmp
scas
dec
outsb
scas
stc
jo
dec
mov
ljmp
sbb
lock
fwait
out
pop
and
fnsave
out
or
mov
gs
pop
pop
icebp
jg
jg
mov
mov
sbb
mov
lods
lret
cmp
inc
sahf
jmp
fimull
sbb
fidivl
filds
inc
pop
out
mov
pop
mov
and
scas
movsl
fisubrl
mov
jg
insb
add
ficompl
mov
push
sbb
int
pop
cli
bound
mov
pop
pop
popf
mov
push
psubd
outsb
mov
lcall
loopne
cld
iret
xchg
or
inc
pushf
test
sub
cmp
lods
xor
repz
xchg
sub
add
test
fs
ds
jb
shlb
adc
pop
mov
test
sub
hlt
mov
testb
and
aas
xchg
cld
cmpsb
test
aad
cmc
pop
jmp
lods
repz
push
inc
jb
dec
outsl
cmpsb
inc
mov
cmp
ja
mov
xchg
les
sub
loop
fxch
fistpll
lcall
loopne
mov
xor
sarb
rcr
xor
push
xchg
inc
jg
out
mov
clc
pop
push
xorb
inc
xor
cs
mov
mov
les
and
sti
jge
mul
ds
and
mov
popa
mov
jbe
xchg
insl
aam
push
pushf
and
xchg
sbb
add
xchg
movsl
testl
push
dec
dec
mov
or
movsl
jb
iret
push
push
xchg
das
rolb
push
out
xor
scas
xchg
jae
sub
cmp
adc
cwtl
adc
js
sbb
jecxz
pop
cmp
mov
bound
add
push
mov
or
mov
push
ljmp
lret
outsl
mov
jbe
push
ret
rclb
push
jbe
test
mov
push
std
fistps
mov
loope
icebp
and
pop
fcompl
fsubrl
imul
pop
sub
dec
sbb
sub
mov
cli
scas
ficomps
push
cld
cwtl
adc
pop
sbb
sub
mov
add
sbb
mov
aas
aaa
xor
inc
aaa
in
out
aas
outsb
gs
xchg
outsl
mov
dec
daa
in
hlt
or
or
inc
fisubl
sbb
sub
outsb
cmp
orl
jg
mov
sbbl
arpl
adcb
pop
xchg
jns
test
imul
lods
sbb
mov
dec
dec
into
in
int
shlb
fldl2t
ret
and
cmp
movsl
lret
pop
mov
and
out
mov
xor
push
enter
fs
fwait
outsl
imul
pop
insl
mov
jne
idivb
xlat
wrmsr
jp
cmp
or
outsb
aad
nop
push
jge
clc
aas
xor
cmp
test
aaa
lret
xchg
and
fnstcw
roll
mov
or
je
ljmp
dec
pop
mov
shlb
or
or
jae
mov
or
mov
jmp
cmpsb
sbb
adc
shl
inc
xchg
loope
and
in
adc
imul
pop
push
and
decb
pop
aam
bnd
mov
and
aam
dec
inc
xor
jo
fisttpll
inc
in
out
cltd
imul
out
fisubl
lret
addr16
cmp
cmp
push
or
jns
push
mov
inc
and
dec
call
pop
mov
imul
popa
dec
jb
push
out
pop
inc
aaa
jecxz
jmp
cmovns
add
push
push
cmc
cli
push
push
nop
dec
dec
cmp
xor
or
dec
rcl
dec
xchg
mov
leave
insb
ja
mov
dec
mov
ret
sub
sub
f2xm1
loopne
outsl
je
mov
fmuls
push
fldlg2
test
out
sub
ret
lock
pop
or
pusha
sarb
fdivrp
mov
or
insb
lcall
arpl
stos
sbb
mov
call
ss
pop
cmp
sahf
outsl
cmc
lret
push
mov
repz
aad
pop
popa
sub
js
push
shl
or
insb
maxps
sub
sbb
inc
jnp
leave
or
xchg
push
daa
mov
je
jno
loop
cmp
jp
xchg
lds
sbb
inc
je
adc
popf
pushl
rcl
cltd
jmp
aaa
cmp
inc
or
jns
jb
hlt
ja
or
or
cmp
insb
ret
repz
std
fisubs
push
xor
sub
push
lar
sbb
jle
das
jb
mov
inc
xor
push
fdivl
pop
jbe
into
inc
bound
movsl
pop
xchg
xlat
dec
in
les
add
out
sarb
pushf
popa
pop
test
out
cmp
sub
testb
and
lods
jo
or
jae
movl
iret
push
pusha
xor
iret
mov
xor
ljmp
mov
mov
fdivrs
outsb
ljmp
aam
leave
inc
loopne
inc
mov
sbb
mov
popa
sbb
fildl
add
pushf
mov
cltd
xchg
scas
jg
leave
icebp
sbb
pop
push
mov
sub
outsb
loope
cld
lods
mov
lods
push
int
sbb
mov
sbb
lret
les
jae
jbe
and
jno
pop
mov
xor
xor
xor
in
lahf
repnz
xchg
jge
lock
mov
jae
dec
dec
cmpsb
movsl
test
adc
out
ret
push
mov
repz
inc
scas
cmp
sbb
fstps
into
pop
movsb
sub
fs
stc
je
dec
jmp
or
setp
add
push
scas
je
push
dec
cmp
test
push
xor
sbb
fmuls
cwtl
dec
push
sbb
pop
add
push
or
pusha
adc
inc
sti
sarl
cmp
add
cmpsl
cmpsl
and
and
repnz
cli
not
mov
out
push
cmpsb
fnstenv
test
mov
cmpl
hlt
bound
push
fistl
xchg
test
inc
ret
add
sub
pop
faddl
aam
cltd
xchg
jns
push
pop
ds
cmp
or
out
pusha
insb
inc
xor
dec
out
daa
das
cmc
pop
xchg
nop
or
out
push
cmpsb
out
add
xchg
incb
hlt
sub
adc
pop
hlt
int3
and
sbb
negl
lret
int
scas
xchg
call
sub
mov
into
push
mov
add
lock
adcl
popf
jb
testb
jg
addb
jge
mov
std
gs
loope
cmp
mov
testb
inc
add
sahf
adc
js
mull
repz
push
out
mov
enter
hlt
bound
cmp
push
and
pop
sbb
jmp
jle
mov
pop
cmc
xorb
jg
push
and
mov
fstpt
jo
xchg
cmp
test
dec
jne
fwait
pop
dec
mov
or
pop
xlat
lods
sbb
call
or
outsb
popf
lods
int
adc
iret
insl
fidivrl
add
daa
jae
and
hlt
sub
in
adc
mov
mov
into
nop
scas
xchg
push
stc
inc
repnz
mov
sahf
mov
lods
shlb
and
mov
fidivl
pop
icebp
mov
push
add
cmc
test
test
xor
cmp
push
mov
jmp
movb
pop
fsubrl
cmp
adc
aas
pop
pop
jecxz
xchg
sbb
dec
loopne
mov
and
pushl
mov
jbe
cmp
test
add
scas
mov
cmp
xor
lds
push
lds
jle
jns
push
or
push
jle
or
xor
adc
in
xor
xor
in
push
rol
dec
jae
sbb
jno
sub
stos
push
int3
or
cmp
inc
jne
in
jbe
inc
mov
cwtl
mov
or
cmpsb
mov
cmp
int3
push
rorb
push
imul
mov
mov
jbe
out
cmp
or
jmp
adc
jo
cmpsb
push
and
dec
clc
dec
push
imul
pop
jne
aam
das
adc
push
and
pop
insl
push
add
sub
subl
aam
add
xor
dec
push
scas
out
in
mov
cmpsl
mov
inc
mov
cmpl
push
sub
in
fcomp
into
imul
cmp
mov
ja
cmpsl
inc
movsb
xchg
inc
jge
cltd
stos
cmp
lods
cmpsb
inc
aam
mov
dec
jp
shlb
adc
icebp
cmp
das
test
dec
adc
scas
ret
icebp
insb
mov
insb
aam
jo
loop
dec
cmpsb
scas
sub
dec
cs
inc
repz
sarb
pop
movsl
jmp
mov
cmp
lods
fisttps
and
faddp
mov
adc
mov
mov
xchg
popf
subl
fmuls
addr16
inc
and
inc
mov
adc
pop
faddl
mov
pop
push
hlt
stc
shll
lods
loope
jmp
test
push
xor
push
test
mov
sbb
ljmp
inc
ljmp
outsb
inc
insb
cmc
insl
push
jl
aad
dec
or
mov
pop
arpl
or
loop
mov
bound
sbb
xor
adc
mov
fwait
lds
xor
stos
insl
int
mov
pop
sub
lcall
fsubrl
push
in
popa
sbb
mov
jl
push
cli
fsubr
pop
mov
dec
push
adc
iret
or
dec
jae
add
std
push
add
nop
stos
popf
fdivl
mov
les
in
sub
andl
xor
pop
and
mov
sbb
enter
jl
mov
jns
pushf
pushf
neg
test
sub
push
nop
add
jbe
xchg
das
pushf
dec
mov
jo
dec
insl
fldcw
das
xchg
pushf
sbb
and
sub
ficomps
insb
push
lret
out
pop
mov
rclb
pop
push
mov
test
mov
je
and
or
jbe
in
sarl
xchg
adc
add
adc
push
mov
inc
xchg
jmp
pop
or
sbb
cltd
fiaddl
xchg
xchg
jo
fdivl
jge
scas
xchg
mov
inc
dec
xchg
mov
push
stos
sub
or
sbb
add
push
or
lret
xor
jae
insb
shrb
aas
jno
fcmovbe
shlb
sbb
rcrl
dec
push
ss
pop
lcall
adc
push
mov
je
jne
enter
nop
add
jns
jmp
rcr
mov
mov
ret
xchg
dec
mull
push
jecxz
push
cmpsb
pop
mov
mov
dec
faddl
lret
and
pop
sub
ljmp
stc
mov
fisubrl
mov
jmp
inc
int3
cmpsl
xchg
je
in
jbe
jbe
ret
pmullw
ja
loop
sub
mov
jno
dec
test
aas
loope
cmp
mov
xchg
sahf
cmp
mov
aad
mov
test
mov
inc
frstor
out
enter
js
push
xor
add
and
aam
xchg
daa
lods
mov
stos
popf
dec
sub
xchg
loopne
out
gs
mov
icebp
shrl
mov
dec
jae
xchg
dec
test
fmuls
or
insl
sub
jp
aam
std
cwtl
in
cmp
cli
dec
in
push
jl
enter
int3
jbe
jnp
adcb
jb
repz
test
xchg
mov
add
inc
or
lods
sub
jb
pushf
xchg
push
icebp
adc
mov
sub
push
mov
sub
fidivrl
out
out
sbb
test
icebp
fucom
adc
cmpb
aam
sub
sub
jno
push
sub
or
cmp
mov
mov
cld
test
cmp
enter
pushf
testl
ss
insl
pop
jp
mov
aaa
and
inc
sarb
lock
in
inc
ljmp
fwait
xchg
jns
dec
push
dec
adc
xlat
inc
jge
cmpsl
pcmpeqd
fisubrs
push
repz
cmp
mov
sub
inc
push
scas
jp
xchg
xor
or
sti
inc
ljmp
xchg
clc
sub
push
cmpsb
cmc
sub
mov
xor
adc
arpl
fsub
push
shr
inc
sub
and
jg
and
cmpsl
lds
xchg
or
in
sub
inc
mov
cmc
jmp
jns
movntps
mov
pop
dec
jmp
mov
sub
ds
rorl
and
add
xchg
pushf
in
xor
adc
dec
pushl
and
inc
fistpll
cmp
push
lret
dec
ficoms
pop
aad
int3
test
addr16
lea
test
add
out
xor
cmp
insl
mov
mov
loope
adc
sub
fs
scas
sbb
dec
inc
test
jne
jo
fisubrl
pop
xor
adc
jns
stos
jecxz
lock
xor
xchg
jne
jge
ret
jne
jge
lcall
inc
xor
scas
add
in
das
sbb
int3
subl
stos
rorb
lret
dec
mov
pushf
inc
repz
jb
pop
mov
add
fs
dec
jle
lds
push
rclb
ja
jg
mov
inc
mov
adc
jle
out
push
outsl
gs
inc
insb
mov
mov
lahf
push
and
insl
or
enter
insl
aam
dec
xor
adc
nop
test
inc
frstor
dec
dec
cmp
and
mov
xchg
xchg
lcall
dec
mov
cmp
mov
pop
cmc
add
cmp
jbe
ljmp
pop
arpl
lret
push
sub
aaa
enter
roll
push
inc
ja
xchg
push
push
and
fs
aaa
dec
mov
test
sub
sarb
mov
dec
lret
jle
negb
xlat
mov
xor
popa
fcmovb
cmp
mov
gs
int3
shlb
or
dec
stos
sub
mov
jp
andl
les
aad
das
cmp
cmp
jle
jp
adc
repz
mov
ret
mov
sti
loop
mov
push
fcmovnb
mov
inc
add
cmpsb
pushw
and
add
or
sbb
fmull
pop
decl
dec
in
popf
ret
and
pop
mov
mov
sarb
jmp
iret
sti
jb
jne
imul
cmpsl
mov
jnp
test
dec
dec
adc
das
movsb
jge
lea
sub
popa
negb
xor
xchg
lea
test
push
sbb
mov
int
cld
lret
mov
das
jno
jnp
daa
fwait
sub
loopne
cld
xchg
and
leave
mov
push
and
mov
filds
push
jge
cmp
push
mov
out
fdivl
sarb
add
out
inc
mov
jb
dec
lcall
push
pop
mov
test
daa
pop
aam
lods
mov
or
cld
xor
popf
leave
into
cmp
cltd
inc
and
sbb
repnz
sbb
lret
popl
enter
sbb
push
movsb
xchg
sub
lods
add
cmpsb
stos
out
adc
divb
cmp
sub
int
loopne
mov
fs
dec
rolb
popa
pop
jp
xor
pop
xor
mov
sub
das
push
mov
std
push
lahf
mov
jae
fs
loop
and
inc
sbb
ret
push
sbbb
shll
movsb
dec
pop
mov
lods
add
xchg
jg
or
push
mov
pop
je
mov
cmp
addr16
sub
sub
xchg
dec
je
xor
aas
or
push
add
dec
cmp
gs
repnz
mov
stc
adc
movsl
mov
dec
out
aad
pop
stos
mov
and
or
jbe
ret
outsl
or
rolb
lock
fildll
or
pusha
and
dec
mov
stos
mov
ficomps
sbb
adc
mov
ret
mov
arpl
xchg
pop
rcrb
dec
jg
push
mov
sahf
mov
and
inc
xor
push
xchg
movsb
push
fisubl
or
sub
add
jb
jb
push
mov
lock
je
sbb
mov
push
xor
ss
mov
fidivrs
sbb
adcl
out
pop
popf
fcoms
cmp
sub
inc
in
js
jo
mov
jl
iret
mov
hlt
jge
fs
adc
test
lret
pop
leave
pop
xchg
xor
sub
rcrb
mov
mov
jle
cld
pop
hlt
sub
imul
repz
pusha
add
out
clc
repz
xchg
adc
shufps
fldenv
es
imul
push
push
push
jg
mov
inc
mov
hlt
mov
sub
xchg
xchg
lods
icebp
mov
das
jno
sub
dec
inc
lret
popa
jno
and
mov
scas
adc
test
gs
push
shrl
stos
xchg
fstpl
inc
inc
sbb
push
ret
mov
adc
mov
loop
ret
ljmp
pop
rclb
mov
lods
ds
popf
push
pop
cmp
or
stos
jp
clts
ret
imul
cmpsl
adc
and
push
imul
jge
fnstcw
jle
cmpsb
xor
shll
push
sub
fadd
and
dec
cli
insb
add
fimuls
xchg
mov
div
dec
cs
add
dec
in
scas
stos
or
dec
inc
or
mov
js
mov
sub
fwait
push
icebp
add
fildll
and
imul
jp
cld
lcall
push
inc
ret
sub
jle
mov
arpl
lret
lahf
lods
xchg
add
and
jns
in
sarl
sbb
loopne
inc
dec
adc
jns
es
sbb
push
ss
xor
mov
sub
push
pop
inc
sbb
adc
pusha
lret
inc
fsubrp
inc
dec
lds
inc
test
xchg
icebp
mov
adc
mov
dec
sub
xor
daa
jae
push
mov
pop
inc
cli
cs
and
jb
cltd
push
repz
pop
test
insb
out
fcmovne
jns
sbb
mov
xchg
inc
jae
out
sti
jg
popa
mov
arpl
push
mov
aas
and
jmp
popa
daa
pop
in
pop
xchg
sbb
dec
xor
pop
push
jnp
das
stos
sub
inc
xor
in
mov
stos
dec
leave
xchg
add
insb
mov
insl
cmp
lock
sbbl
push
cwtl
lds
hlt
lret
or
sbb
xor
rcl
inc
test
cwtl
lahf
push
mov
ds
push
and
js
rcr
hlt
xchg
test
sub
je
and
xchg
fldt
cs
sub
outsl
mov
pushf
mov
adcl
rorb
xchg
pop
adc
je
fstps
orb
aad
in
cs
scas
cwtl
inc
cmp
cmp
fnstenv
jge
sbb
out
mov
and
cwtl
pop
jmp
and
or
lods
inc
pop
add
xchg
lods
test
cmp
adcl
gs
mov
push
roll
repz
jmp
hlt
xorl
cmp
scas
pop
xchg
popf
cmp
notb
fidivs
jno
fld
enter
sub
push
and
sbb
je
imul
aad
xor
gs
pop
dec
scas
lods
lahf
in
xchg
mov
adc
into
mov
pop
mov
scas
cmp
xchg
jl
rcrl
aad
jg
cmc
mov
dec
popf
jecxz
dec
push
add
fs
jecxz,pn
fmull
test
push
fsts
pop
cltd
andb
xor
ss
lods
das
push
rorb
call
xchg
and
jns
jne
data16
pushf
das
inc
jle
mov
push
dec
loope
cltd
mov
fs
enter
out
mov
jmp
sub
cld
mov
push
push
xlat
mov
cmc
lods
jns
inc
ss
scas
sbb
mov
inc
call
lret
lret
and
add
loop
jae
daa
xchg
outsl
sti
jle
ss
push
cmp
test
sub
dec
lock
ja
aad
cmp
popf
add
lods
mov
aaa
mov
lcall
lds
cmp
negb
xchg
dec
jbe
or
lgs
add
outsb
pusha
pop
les
and
lret
cmp
cmp
xor
repz
mov
cld
imul
mov
sub
aam
mov
rol
dec
arpl
hlt
add
xchg
mov
lahf
adc
ljmp
mov
dec
push
fnstcw
mov
hlt
out
xchg
inc
enterw
jecxz
sbb
xor
lret
jmp
or
in
into
loope
lcall
imul
xchg
outsb
jle
int
cmp
inc
dec
adc
sub
test
mov
add
add
cmp
cmp
mov
or
lds
out
pop
orl
push
nopl
rcr
scas
mov
dec
inc
insb
push
rcrb
mov
pushf
inc
cmp
cmp
in
inc
ret
inc
xor
addr16
mov
mov
repz
aas
adc
roll
bnd
pop
lret
repnz
push
inc
mov
inc
jg
jbe
das
pusha
cltd
jmp
stc
andl
fdivr
or
adc
shlb
adc
xchg
fildll
xchg
repnz
adc
xacquire
pop
jnp
bound
ljmp
add
lret
or
cmp
jb
pop
popf
repz
ds
mov
xor
pop
dec
ja
inc
inc
sti
jmp
or
push
dec
fs
xchg
lods
dec
iret
pop
cmp
mov
test
lcall
cmp
and
arpl
std
ror
jge
aas
adcb
fisubrs
clc
mov
je
xor
mov
inc
addr16
sub
mov
movsb
ss
mov
pusha
push
insl
mov
mov
ja
ds
mov
adc
insb
loope
or
mov
sbb
dec
xor
sarb
popf
ja
adcl
mov
frstor
cmp
shrd
movq
popa
jmp
cmp
int
mov
xchg
loopne
in
cmp
sarl
out
or
cmp
pop
aam
mov
ljmp
arpl
mov
sub
push
jne
lock
add
rcl
fmul
cmp
pop
inc
jle
jae
push
jmp
pop
xchg
adc
sub
out
xchg
std
or
mov
add
data16
mov
add
into
jmp
mov
ljmp
sbb
lahf
sbb
nop
cmc
fiadds
push
outsb
leave
mov
push
sbb
cmpsb
push
push
cmp
mov
jbe
adc
loopne
fisubs
das
in
mov
mov
pop
xchg
frstor
pop
hlt
and
iret
and
add
xchg
push
popf
sub
daa
xlat
ljmp
mov
adc
in
sahf
mov
dec
cmp
test
in
outsb
lcall
mov
xor
aad
pop
aaa
xchg
sub
adc
jp
jp
cli
enter
inc
mov
mov
daa
or
sub
push
das
ret
mov
imul
and
out
jp
fstps
inc
mov
popf
test
aam
push
add
xchg
aad
daa
out
or
and
pushf
ds
stos
in
push
fistps
add
cltd
inc
out
inc
rcl
ret
push
push
dec
sub
je
cmp
push
lods
cmp
mov
push
push
xor
sbb
mov
mov
stc
lret
push
adc
jmp
add
dec
adc
sti
mov
outsb
call
mov
jg
adc
pop
into
xchg
ss
mov
scas
popf
push
mov
push
ja
inc
add
sub
loop
cmp
jmp
fbstp
push
push
push
cmp
pop
xor
divl
push
aas
cmp
lods
xchg
shlb
xchg
mov
sub
fisubrl
jb
movsb
and
push
jl
in
jnp
and
mov
cmp
fildl
enter
bound
inc
inc
nop
xor
loope
xchg
xchg
mov
add
cmp
orb
test
push
sbb
and
mov
outsl
in
or
pusha
sti
mov
ret
xchg
fdivrl
cld
aas
push
pop
lock
test
pop
xchg
aas
mov
and
cmpsl
jns
jge
nop
arpl
fiaddl
dec
hlt
mov
pop
test
cwtl
and
add
stos
mov
sbb
inc
sub
jo
outsb
dec
in
cmp
notl
into
sbb
lea
sub
push
xchg
movsb
xor
xchg
pusha
cmp
test
clc
jo
sub
inc
adc
add
and
dec
call
mov
int3
push
jmp
cmp
dec
mov
in
mov
filds
mov
or
cmp
aas
xor
repz
mov
xchg
push
push
imul
mov
orb
ds
dec
and
mov
rclb
imul
int3
ss
lahf
xor
fidivrs
mov
and
push
sbb
lahf
lods
or
repz
mov
cmp
cmp
jmp
std
es
daa
test
gs
shlb
ljmp
and
ja
test
or
and
pop
iret
mov
sti
movb
mov
inc
mov
mov
pop
and
insb
orl
prefetchw
mov
test
sub
xor
aaa
shl
jg
pop
push
or
sub
mov
fimull
in
in
pop
mov
jo
fdivrs
jp
jae
lds
pop
sbbl
inc
les
je
cmp
repz
scas
pop
push
adc
daa
fstps
repnz
movsl
div
mov
hlt
fs
xlat
mov
cwtl
cmpsl
pop
or
mov
sarb
cmp
pop
inc
pop
push
jg
pop
mov
xor
add
sub
mov
sub
lret
xor
sarl
mov
shll
out
mov
rcr
dec
adc
adc
lahf
dec
in
xor
rcl
mov
inc
adc
enter
pop
adc
in
enter
adc
cs
call
xor
mov
and
lahf
pop
cmpsb
dec
ret
adc
aas
fiaddl
or
incb
hlt
push
push
jge
enter
pop
testl
mov
imul
pop
lock
or
loopne
testb
cmp
popa
cmc
xchg
add
mov
test
dec
jle
in
repz
push
ss
inc
cmp
dec
es
mov
add
testl
mov
push
gs
daa
jne
popa
sub
mov
jns
cwtl
add
lret
jns
out
mov
in
idivl
or
mov
gs
push
ret
lret
fldln2
xor
dec
add
xlat
xor
adc
andb
cwtl
mov
adc
test
popa
xor
sub
xchg
lods
and
bound
daa
and
sbb
pop
pop
xor
out
inc
mull
add
and
fdivl
or
adc
xchg
mov
icebp
xor
and
fsubl
dec
cs
and
and
iret
arpl
and
inc
push
cmp
jne
push
inc
sbb
mov
jne
das
bound
mov
popf
sbb
and
mov
fists
std
enter
das
mov
in
es
test
xlat
add
aam
xchg
xlat
stos
ret
xchg
pop
arpl
mov
fisttpll
dec
insl
dec
push
mov
popf
add
outsb
mov
stos
ss
add
sbb
dec
mov
pop
push
mov
jb
or
sahf
int3
in
addb
loope
je
rcll
xor
sti
add
out
sub
es
or
pop
mov
stos
jne
leave
addl
xor
test
adc
fstpl
sbb
test
pop
lds
add
inc
push
mov
sub
repz
adc
mov
cmp
push
adc
xlat
xchg
lret
les
loop
ret
jg
int
inc
sahf
lods
ret
insl
cmp
ja
cli
out
dec
pop
data16
mov
pusha
rcrb
fsubl
cmp
lahf
test
sub
push
adc
mov
jl
xchg
xchg
mov
pop
xchg
leave
dec
loope
clc
cli
cmp
push
adc
pop
mov
xor
push
lcall
jnp
cmp
clc
jb
sbb
mov
shrl
popf
loope
jae
pop
jb
lods
scas
mov
sub
repnz
sbbb
js
pusha
outsb
pop
sub
push
pop
dec
adc
adc
in
mov
xchg
push
lcall
push
sbb
nop
jp,pt
enter
dec
mov
stc
dec
mov
mov
adc
xor
jmpw
stos
lret
scas
cmp
ss
push
adc
dec
ja
ret
add
sbb
or
pusha
xor
push
jge
fsts
in
mov
xor
mov
mov
pop
or
ljmp
sbb
enter
pop
pop
stc
movl
fdivrl
mov
jg
popf
cltd
icebp
dec
mov
mov
xchg
add
xchg
and
sbbl
inc
repnz
jge
push
xchg
mov
scas
sahf
mov
add
mov
lock
adc
sub
jp
scas
rorl
sub
jecxz
xor
movb
dec
or
int
xor
movsb
lea
sahf
xor
jge
jnp
xorb
movsl
lcall
dec
add
sbb
int
repz
mov
sti
pop
lea
inc
and
pop
push
pop
push
lret
stos
daa
fucomi
or
insb
popa
nop
roll
cmpsl
sbb
pop
xor
repz
ret
cmp
sub
ljmp
sahf
pushf
out
mov
jge
loop
fcomip
imul
mov
dec
xor
lods
inc
out
aas
dec
or
mov
mov
repnz
xor
xor
cmp
jae
push
jge
arpl
or
dec
aam
jnp
xchg
add
call
xorb
or
xchg
vmaxss
xor
mov
aam
mov
movsb
and
sbb
jnp
arpl
cmp
icebp
test
xchg
and
outsb
jge
inc
scas
sub
fmuls
lock
sub
jnp
pusha
cwtl
cmpsl
mov
nop
jge
sti
pop
mov
xor
cld
stos
xor
cmp
jns
xlat
lds
int3
fcomip
incb
cmp
clc
insb
jnp
xorl
adc
icebp
jg
andl
iret
fdivrs
pop
xor
subl
mov
jnp
xor
adc
and
mov
or
cmp
add
ljmp
or
jbe
js
ss
bound
mov
repz
enter
push
sahf
jnp
test
push
mov
push
sub
push
xchg
inc
mov
mov
outsl
mov
outsl
pop
fimuls
daa
dec
popa
rorl
xchg
fnsave
and
sti
mov
data16
fiaddl
call
sub
sahf
jl
adc
jp
mov
imul
lock
inc
roll
sub
xchg
jno
gs
mov
jbe
clc
out
sub
push
mov
add
rcll
or
mov
mov
mov
int
dec
lret
daa
cld
cmp
jns
adc
mov
arpl
movsl
sahf
js
das
mov
insb
test
stc
xchg
fcmove
adcb
into
shl
mov
mov
mov
sbb
add
sbb
push
jmp
mov
aad
mov
jne
insl
outsl
in
jae
jae
cld
add
aam
cmp
hlt
mov
ss
lock
movsb
sarl
aas
and
js
lods
loope
push
or
out
inc
sbb
sbb
std
orb
cmc
xor
out
xor
mov
leave
add
push
rcrl
and
lret
popf
push
inc
mov
imul
imul
sbb
and
dec
repnz
rolb
inc
icebp
shrb
das
popa
mov
sub
jb
dec
subl
fldt
imul
lahf
pushf
jmp
popf
loope
testl
adc
or
pop
repnz
cmp
js
dec
mov
in
lret
imulb
loop
aaa
clc
lock
out
add
mov
lds
jge
xor
mov
addr16
fisubrl
into
call
xor
add
notb
stos
jecxz
jne
pop
and
repnz
sub
jle
mov
js
mov
adc
negl
pushl
aad
std
ss
adc
sbb
add
fnstsw
mov
jno
loop
rolb
jmp
push
mov
jb
ja
ret
cmpl
xor
inc
jae
xchg
jg
sbb
das
gs
and
out
dec
popf
ret
mov
mov
mov
add
add
sbb
adc
dec
loopne,pn
inc
xchg
cli
xchg
pop
lock
dec
jmp
or
fucomi
jae
cmc
dec
pop
aaa
sbb
cmp
mov
mov
xor
pop
jp
inc
dec
add
repz
inc
scas
out
xchg
sahf
mov
push
jl
dec
insb
cmp
mov
int3
mov
sbb
jbe
leave
pop
xchg
mov
call
hlt
rorb
rclb
cmpsl
sti
lret
jecxz
pop
imulb
int3
inc
popf
fcomps
or
xchg
push
pop
scas
adc
mov
cmc
lahf
cmp
jl
cli
push
adc
in
sbb
inc
mov
dec
and
mov
jae
cmc
jns
loop
fbld
dec
scas
sti
lahf
pop
pop
mov
push
jp
call
dec
jge
dec
sarl
pop
rorb
daa
pop
or
imul
adc
test
outsb
dec
xor
add
movsb
std
ret
pushf
xchg
sbb
jle
pop
mov
loope
add
jmp
out
std
cmp
addr16
push
inc
lds
dec
jno
cmpsl
add
jb
arpl
je
int3
cmp
sbb
mov
push
popa
int
xchg
pop
aas
push
cmpb
aam
mov
bound
aas
fprem
pop
mov
mov
adc
iret
cmpsl
std
repnz
loopne
pop
mov
popa
loop
fcoml
push
aaa
jo
scas
cltd
enter
mov
inc
xchg
xor
add
ljmp
cmp
xchg
or
jne
xchg
mov
sbbl
rolb
aas
or
mov
adc
jecxz
pop
ds
sub
in
xor
popf
jae
sub
cmc
adc
out
pop
pop
aaa
cmp
adc
popf
push
xchg
into
mov
adc
xor
xchg
dec
lea
mov
fmull
mov
add
shlb
lods
push
bound
push
in
out
enter
ret
test
push
lds
fistps
scas
xchg
lret
in
jb
pop
jmp
jge
bound
lds
paddsw
insl
dec
push
adc
push
data16
popf
cmpb
push
inc
jbe
xchg
add
push
pop
cmpl
call
shl
ss
mov
test
jmp
iret
lods
jmp
je
data16
dec
pop
mov
stc
addr16
jge
sbbl
adc
pusha
sahf
lcall
cs
sub
stc
xor
sbb
leave
pop
jno
lcall
cld
call
fstps
mov
or
pop
xchg
pop
and
push
lret
movsb
test
ret
or
sub
cmp
sahf
sbb
mov
jp
mov
lahf
sub
in
pop
xchg
fs
sub
pop
pusha
mov
pop
mov
pop
bound
inc
lods
add
cmp
mov
xchg
lock
sub
pop
or
std
mov
ss
push
dec
fisubrs
cmc
movsl
inc
push
or
addb
adc
mov
in
vrcpss
push
aas
or
mov
fstpl
mov
jge
ret
adc
pop
jbe
and
int
sti
mov
outsb
xchg
cmp
pop
aad
sbb
mov
inc
or
test
in
into
rclb
mov
jbe
adc
mov
xadd
stc
push
dec
ret
mov
or
mov
popa
cli
pusha
mov
sub
je
pop
mov
mov
sbb
jb
mulb
and
ds
adc
mov
mov
adc
dec
and
cmpsl
insl
sbb
dec
sub
jg
push
adc
clc
ss
inc
jg
aas
lret
pop
add
mov
dec
sbb
fisubs
push
jmp
mov
inc
jecxz
hlt
add
mov
dec
mov
mov
inc
and
and
rcl
shrl
sbb
pop
jns
stc
pop
cmp
jg
roll
jle
dec
loop
sub
jae
shll
idivb
mov
inc
push
ljmp
mov
adc
xchg
lret
adc
xchg
in
pop
mov
movups
inc
test
xor
jg
and
ja
inc
scas
in
scas
imul
rorb
je
fldenv
movsl
xchg
xor
mov
or
cli
push
sbb
fldt
mov
push
xchg
mov
stc
cmpsb
sar
push
pop
call
cld
add
je
or
and
in
cbtw
ficomps
push
ficoms
cmp
test
and
sti
dec
imul
loopne
push
mov
divl
test
scas
lea
push
inc
mov
dec
xchg
jle
stos
jle
xchg
ja
call
insb
mov
cmp
or
mov
sub
mov
pop
repnz
mov
fidivrl
leave
sbb
mov
gs
shrb
pop
inc
arpl
loop
cwtl
and
dec
out
jae
add
sbb
lcall
jno
xor
std
adc
in
fisubrs
inc
pusha
dec
daa
lock
roll
sti
xchg
cmp
movsb
jb
out
mov
sbb
pop
scas
ljmp
inc
mov
cmp
scas
rolb
aam
out
mov
or
movsl
cmp
push
pushf
and
das
fs
push
or
subb
add
jl
fs
or
jnp
sbb
insb
sub
pop
xchg
push
lods
pop
mov
push
cmp
sbb
push
push
movsl
iret
or
push
push
fs
inc
mov
ss
add
xor
sbb
movsb
xchg
fnstsw
adc
adc
inc
add
inc
xchg
dec
push
jmp
add
aad
jb
stc
cs
lea
dec
cmp
push
or
and
or
xchg
daa
lahf
call
daa
sub
mov
call
lret
cmc
jg
cmp
inc
push
push
or
jge
aas
and
nop
fiadds
mov
loop
imul
adc
stos
or
testb
fisubs
add
in
aas
jne
mov
and
mov
jle
pusha
adc
aam
cmp
sbb
and
std
mov
subb
int
and
mov
push
lods
xchg
add
jge
gs
loop
ret
cmc
pop
mov
imul
mov
outsb
sbb
xlat
int
and
dec
dec
aaa
push
out
adc
dec
dec
hlt
hlt
pusha
subb
repnz
push
jge
imull
shlb
rcll
push
les
lods
mov
ljmp
in
gs
lahf
aam
mov
ret
xor
ret
movsb
xchg
lock
fsubr
inc
or
sub
lea
adc
lods
or
inc
lcall
add
mov
mov
mov
and
xor
aam
outsl
fwait
aad
xor
shlb
inc
hlt
push
repz
test
repz
stc
fisubl
mov
scas
mov
xor
mov
xlat
je
test
loope
dec
xor
xchg
stos
dec
inc
mov
mov
add
dec
lea
cmp
mov
daa
in
int
fldt
sahf
pop
pop
mov
testl
int3
add
fisttps
lock
test
out
lock
push
outsl
clc
xor
dec
test
inc
imul
and
mov
mov
pop
jmp
push
push
add
push
std
js
gs
icebp
ret
test
mov
dec
int
imul
test
xor
ljmp
les
lock
pop
push
call
push
jbe
push
sub
es
cmpsl
int
push
pushl
jo
mov
cltd
and
inc
or
jp
cmpsb
outsb
inc
mov
dec
fiadds
mov
in
xchg
stos
jae
xchg
ret
add
add
inc
xchg
aam
cmp
sahf
push
inc
add
popa
cmp
dec
push
dec
fsubrp
jno
cmp
mov
in
mov
in
cmp
add
imull
scas
mov
xor
fistpll
iret
repz
loop
fistl
out
fcoml
mov
cmpsb
adc
fisubl
out
dec
xchg
push
sbb
mov
sbb
aad
add
repnz
cmp
aad
data16
out
jmp
mov
lods
pop
lret
imul
shrl
test
inc
push
sahf
pop
xchg
pop
xor
inc
pop
jbe
pop
xchg
sbb
xchg
loope
dec
lahf
rol
movsl
mov
xchg
cs
inc
jmp
leave
dec
jle
cltd
mov
jecxz
mov
cmp
int3
dec
inc
ficompl
mov
cmpsl
test
push
xchg
mov
xor
jl
pop
repnz
sub
cmp
mov
repnz
dec
mov
cmc
mov
pop
jmp
insb
push
jns
sub
pop
lods
arpl
xchg
jg
mov
fld
push
mov
movsb
jns
outsb
aad
adcb
mov
mov
gs
sti
mov
stos
dec
in
clc
lret
clc
mov
push
xchg
and
xchg
pop
adc
lcall
inc
into
stos
dec
jmp
ds
sarl
leave
xor
mov
xor
inc
nop
dec
lds
inc
aam
mov
jns
mov
sub
add
lret
mov
pop
sbb
and
sub
and
mov
in
pop
adc
sub
mov
and
jns
mov
sub
mov
dec
jnp
push
or
adc
in
nopl
inc
pop
push
xor
ret
sub
adc
cld
cmp
pop
cmpsl
xlat
sub
cmc
in
mov
sub
mov
int
mov
gs
adc
sub
popa
test
movsl
push
ds
sbb
scas
cmp
popf
xor
fs
jp
imul
pushf
test
xor
fidivs
test
rcr
int
bound
pop
stc
movsb
mov
negb
pop
add
jg
test
lock
in
xor
mov
stc
jae
xchg
xlat
fldl
outsl
loop
inc
shrl
cltd
pop
cmp
jb
sub
push
adc
or
clc
xchg
push
push
dec
add
push
adc
sub
jp
jecxz
sbb
outsb
mov
jecxz
aas
dec
and
cmpb
int
repz
push
loop
push
movsb
lea
mov
push
mov
xor
push
add
icebp
cmpsl
imul
iret
mov
sarl
sahf
movsb
mov
fwait
xor
lock
xor
out
sub
xchg
out
sbb
pushf
sub
lea
popa
fistpll
xor
adc
sahf
test
loopne
jl
loop
movsl
inc
inc
popl
jge
or
mov
dec
mov
push
sahf
mov
jns
sbb
cmp
xchg
fnstenv
in
mov
push
scas
mov
mov
ficompl
roll
iret
mov
xchg
mov
cmp
dec
and
sbb
or
dec
jae
push
data16
repz
adc
mov
push
dec
leave
rorl
dec
or
stos
ret
mov
shl
insl
add
jle
les
push
aas
ljmp
and
pusha
hlt
jae
adc
stc
sahf
scas
je
pop
jl
mov
jno
insl
mov
pop
fstps
push
sbb
orb
or
in
jo
lds
xor
mov
adc
adc
sub
shll
sbb
xchg
mov
cmc
add
mov
imull
into
xchg
rcrb
push
xor
inc
aas
lods
std
xor
pop
inc
push
mov
lods
cmc
pop
pop
leave
in
xchg
or
mov
fs
xchg
xchg
inc
gs
mov
adc
js
iret
mov
sub
adc
stos
aas
mov
aad
int
jg
subb
or
rolb
imul
shrl
sbb
cmp
testb
jno
mov
call
jcxz
clc
rclb
outsb
cmp
scas
cmc
inc
cwtl
jbe
mov
hlt
test
push
cmpsb
mov
pop
dec
mull
je
dec
arpl
or
xor
pop
loopne
call
pusha
adc
testb
and
daa
adc
sbb
dec
sbb
enter
mov
add
pop
ja
mov
add
cld
outsl
xchg
mov
lcall
imul
aas
aas
test
movhps
movsb
std
mov
cmp
fistl
roll
mov
fistpll
jbe
fadd
pop
sahf
push
push
xchg
dec
sbb
js
loopne
jns
pop
push
jecxz
mov
mull
mov
jnp
popl
daa
jecxz
movsb
add
cmpsb
loope
or
ds
push
sbbb
repnz
je
cld
mov
int
xchg
imul
xchg
dec
cmp
hlt
fisttpl
mov
out
mov
insb
insl
or
cld
xchg
pop
mov
test
push
ss
mov
fists
mov
jg
in
xchg
sahf
popf
out
aaa
add
cld
inc
jge
test
mov
add
pop
jl
cmpsb
cmpsb
int3
xchg
add
cmp
lahf
push
jp
loop
sub
test
loopne
mov
into
and
mov
inc
mov
loope
adc
cmp
and
loope
enter
jg
mov
cmpsl
cwtl
sub
add
lds
hlt
imul
ror
jl
rcrb
jle
fstpt
int
mov
add
jnp
or
push
in
arpl
dec
and
sti
add
popa
jae
mov
mov
nop
fnsave
inc
negb
jns
mov
int
lret
pop
add
cmpsl
dec
es
mov
mov
and
sti
sti
cmp
push
ret
ret
ja
repnz
mov
jg
jae
sbb
aaa
adc
push
mov
jmp
cmpsb
fnstcw
pusha
cmp
pop
mov
xchg
popa
push
pop
jg
jae
add
shlb
xchg
xchg
or
and
mov
pushf
cmpsb
xor
aad
test
sbb
sub
pop
xchg
xchg
aaa
nop
gs
xchg
dec
mov
fmul
test
jg
hlt
jle
jb
mov
insb
sbb
adc
cmp
stos
xchg
imul
repnz
mov
jl
and
and
sub
push
push
jnp
adc
adc
xchg
mov
insb
ror
mov
ret
jns
ljmp
cmpsl
xor
fwait
mov
scas
jle
notb
cli
mov
imul
fidivl
daa
sub
dec
cs
xchg
aam
rcr
repnz
or
push
mov
aam
cmp
inc
mov
icebp
lods
jge
out
and
sub
call
mov
and
aad
sahf
clc
loop
fbld
mov
inc
and
cld
cli
push
mov
mov
in
std
cld
js
in
ret
xchg
or
pusha
scas
jno
mov
scas
jl
outsl
in
mov
rcll
lret
pop
push
sbbl
hlt
insl
xor
push
sarb
cmpsl
inc
shrl
outsl
in
inc
in
jle
mov
scas
outsl
lret
cmp
mov
push
mov
push
cmpsl
sbb
mov
inc
add
sub
mov
aaa
pop
pop
cmp
and
outsb
and
mov
sbb
stos
push
push
je
lock
lods
and
push
lret
lea
neg
ficompl
pop
stos
push
xchg
sub
mov
push
mov
in
inc
push
out
push
test
push
repnz
stc
ret
mov
scas
cmp
stos
negl
outsl
dec
cmp
clc
scas
aam
cmp
repnz
jno
cld
pop
loop
inc
pop
outsl
mov
adc
movhps
mov
cmp
xor
cwtl
xor
dec
in
leave
dec
aad
adc
adc
pushf
mov
xchg
jnp
and
and
push
push
inc
add
xlat
xchg
sub
aaa
test
push
mov
test
add
cwtl
xlat
pop
mov
adc
leave
mov
in
enter
or
sub
out
and
pop
inc
mov
insb
fbld
and
push
enter
push
stos
ss
fdivrs
mov
pop
icebp
out
sbb
mov
fcmovne
shlb
shrl
pop
lea
push
sbb
scas
hlt
cmpsl
xor
mov
cmp
cmovae
icebp
addr16
aam
pop
call
gs
cmp
mov
ss
xlat
xor
xchg
leave
in
mov
push
sahf
negl
jle
ficoms
lcall
fwait
popf
dec
add
pop
add
outsb
pop
mov
icebp
outsl
ret
mov
jae
in
ja
push
adc
cmp
jge
or
mov
ret
push
push
arpl
imul
insb
push
test
popf
loopne
push
cmpsb
adc
in
popa
and
ljmp
mov
in
shll
pop
stc
jno
addr16
fisttps
mov
std
pop
adc
sarb
inc
cltd
inc
or
mov
jmp
test
mov
clc
clc
cmpsl
loope
insl
add
adc
cld
add
aas
jl
lds
add
cmp
push
call
push
outsl
sti
bound
loope
xor
icebp
cwtl
ja
jge
sbb
and
inc
pop
push
outsb
add
je
sub
pop
jo
or
in
insb
stos
push
sti
dec
data16
insl
cmp
sub
add
jl
cmpl
jbe
pop
insl
in
int
sbb
pop
popf
lock
ds
pop
dec
loop
lods
gs
popf
ds
sub
and
or
pop
and
xor
movl
mov
cmp
mov
sub
lods
movb
icebp
pop
inc
cmc
mov
sarb
orb
mov
sahf
repz
int3
push
push
and
test
push
fsubs
pop
and
mov
jne
push
add
xchg
insb
leave
mov
mov
cmp
xchg
xchg
inc
jecxz
mov
mov
negl
out
push
cmpsl
repnz
mov
dec
push
xor
sti
xchg
mov
sbb
push
in
add
dec
das
add
cltd
xor
pop
sub
sub
adc
clc
in
push
and
out
outsb
mov
pop
incb
pop
pushf
add
dec
dec
cmpsl
fimuls
not
insl
shrl
and
cmp
iret
shll
incb
aas
scas
xchg
mov
aad
in
xor
xchg
outsl
jge
in
mov
mov
inc
xchg
ds
cmp
push
sarb
mov
dec
loope
xlat
jmp
cli
add
into
sub
movsl
add
jb
sub
jmp
mov
sub
out
push
andb
adc
mov
jecxz
lods
mov
or
lods
je
out
jnp
pop
pop
lahf
lcall
out
or
adc
and
shlb
pop
push
push
dec
pop
xor
xchg
cmc
fnstcw
sub
push
xchg
mov
cmp
jns
int
sbb
int3
out
jp
shll
dec
int3
fisubs
js
sub
xchg
lock
mov
and
jle
mull
mov
movsb
mov
fwait
push
aam
pop
roll
xchg
sub
sub
and
daa
xchg
test
test
mov
outsl
repz
mov
mov
pop
mov
shrb
lods
loopne
fildl
dec
fistpl
jecxz
leave
mov
mov
sbb
push
and
xor
cltd
in
das
insl
and
xchg
dec
hlt
dec
or
fwait
popf
lea
testb
or
cmp
sarb
sbb
in
sub
sub
mov
dec
dec
mov
aad
clc
std
test
daa
subb
sar
sbb
pop
mov
jl
mov
mov
xchg
mov
and
ret
in
xchg
cmp
mov
scas
lcall
sahf
dec
insb
clc
fldt
dec
xchg
push
cmp
cmp
push
xor
mov
jl
xor
test
pop
adc
test
mov
call
std
out
cmp
or
data16
jg
and
stos
mov
pop
fldl
mov
iret
adc
mov
cmp
fstl
mov
imul
rol
sub
ror
fidivs
jns
xchg
cmp
out
inc
lods
adc
je
sbb
out
ss
xlat
in
cmp
adc
pop
pop
scas
stos
mov
pop
pop
iret
cmp
pusha
in
sbb
mov
outsb
mov
lret
insb
cmp
xor
sub
lds
xchg
jecxz
mov
adc
repz
pop
nop
push
sub
mov
enter
sub
daa
repz
movsb
and
cmp
xchg
pop
aad
enter
adc
push
std
fsubrs
shr
sub
push
inc
loope
xlat
cmpl
imul
popf
sub
stos
push
jae
ret
mov
xchg
fs
iret
mov
push
xor
dec
pop
sbb
dec
pop
mov
loop
insb
jne
xchg
ret
jle
fsubs
inc
jae
test
lock
dec
je
sub
sub
push
aaa
pop
loop
in
vmread
in
lods
sub
xchg
in
out
test
insl
shl
cmpsl
pop
int
sbb
movsl
mov
push
mov
adc
jle
push
mov
mov
xchg
mov
sbb
mov
cmp
and
sub
inc
stos
xor
mov
cld
or
xchg
inc
in
push
push
inc
fwait
cmp
out
test
test
andb
lea
aas
cwtl
sub
mov
je
add
xchg
adc
dec
cmp
test
popf
test
mov
inc
jmp
std
xchg
lea
fcoml
pop
jmp
out
sbb
pop
insl
mov
in
xchg
nop
aam
testl
test
aam
repnz
sbb
shrl
lret
inc
insl
add
aam
lds
mov
lret
push
scas
hlt
push
inc
jg
cmp
adc
push
pop
in
xchg
pop
mov
pop
pop
lods
pushf
xchg
rclb
mov
or
hlt
scas
dec
mov
bound
push
inc
scas
push
pusha
outsl
in
jae
cltd
xchg
inc
mov
rolb
lret
arpl
int3
xchg
sub
xor
dec
lret
pop
or
ja
add
ja
clc
xlat
jp
inc
js
imul
fcomps
in
xchg
inc
lret
sti
clc
mov
mov
jle
ds
aam
jne
mov
aad
push
iret
aaa
xchg
push
stc
out
in
mov
jnp
aam
cmpsl
call
cmp
push
js
xchg
enter
mov
sahf
lret
push
xchg
xchg
push
push
icebp
sti
xor
pop
into
add
test
sti
sbb
mov
mov
sti
adc
in
fucomip
cmp
arpl
dec
push
mov
mov
sbb
xor
mov
loope
ret
cwtl
and
dec
mov
ret
sub
call
lock
insl
sbbb
popf
and
cli
and
mov
imul
iret
and
push
xlat
test
mov
sbb
sub
adc
xchg
sbb
push
push
lahf
add
fmuls
jp
dec
mulb
xchg
xchg
dec
adc
jns
xchg
ljmp
jne
pop
rcrb
sub
xchg
pop
into
jno
hlt
jmp
lock
fucomi
mov
mov
sub
and
scas
mov
sub
sbb
stc
ss
pop
pop
xchg
adc
jne
adc
scas
lods
mov
adc
push
scas
mov
test
xor
pusha
repnz
shr
and
and
adc
adc
dec
std
push
popa
cmpsb
outsl
dec
inc
test
mov
push
add
pop
mov
mov
push
inc
je
adc
or
mov
xor
mov
popf
cs
fstpt
addr16
fisttps
cltd
cmp
add
ds
aam
push
cmp
pop
mov
adc
mov
mov
add
adc
sub
out
jnp
pop
sbb
cld
call
pop
int3
insl
shlb
or
insl
leave
ret
push
hlt
push
xor
jb
cmp
ret
sbb
fcmovb
jecxz
mov
sub
outsl
sub
xor
pop
mov
sbb
mov
and
mov
fadd
push
sbb
test
jae
cmpsb
or
sub
xor
adc
js
push
pop
iret
sbb
gs
loope
inc
sub
dec
push
jg
or
pop
pop
js
out
ds
sub
fcompl
cmp
xor
dec
hlt
in
ljmp
cmp
xor
pushw
inc
int
and
add
sbb
repnz
punpcklwd
repnz
jae
xorl
outsb
dec
adc
mov
popa
int
hlt
mov
out
movsl
adc
sti
lret
cmp
jmp
mov
push
rcll
scas
inc
fdivl
scas
test
cmp
pop
cld
mov
andl
jecxz
loope
aad
cmp
xchg
jo
mov
addl
rcl
and
sahf
js
mov
inc
scas
pop
and
add
aaa
jae
cmp
rcr
lret
scas
and
pop
add
out
not
adc
or
push
ret
test
cmp
out
dec
adc
shl
lret
mov
jo
pushf
add
scas
mov
jns
xchg
mov
inc
xchg
sub
int
push
pop
sbb
mov
mov
mov
testl
mov
mov
xchg
fdivrl
bsf
out
shl
mov
movsb
xor
neg
pop
mov
and
addb
jns
and
ret
testl
pusha
jmp
xchg
or
in
cmp
or
enter
cmc
fistl
inc
add
imul
and
lret
nop
sbb
sbb
stos
push
adc
xchg
lret
test
mov
stos
jne,pt
loop
sbb
inc
test
sti
movsl
scas
shl
call
lods
xor
push
lret
ss
mov
mov
into
jne
rcrb
and
out
xchg
dec
nop
jb
cli
inc
mov
xlat
cwtl
dec
jmp
pop
mov
push
mov
clc
lret
in
inc
inc
sub
xor
inc
into
mov
test
adc
mov
push
adc
cmp
fnsave
movsb
gs
pop
out
or
popa
out
sbb
and
sub
loope
sub
and
into
sbb
loop
sub
fsubr
jnp
test
cld
fldt
fcomp
lret
lret
jmp
fcom
jbe
push
push
jae
mov
inc
sti
dec
lret
push
cmp
scas
repnz
out
cs
std
repnz
adc
add
fwait
clc
int
enter
lcall
mov
pop
dec
mov
sbb
cli
rolb
push
jbe
movsl
js
dec
cltd
inc
shl
aam
movsb
dec
test
mov
dec
fadds
test
or
sti
xchg
in
out
jnp
adc
bound
es
mov
pop
cwtl
mov
lret
cli
fildl
popf
mov
push
mov
pusha
mov
mov
xor
ss
stos
shll
fwait
pop
pop
bound
insl
test
lods
insl
int
stos
push
sub
jnp
mov
dec
cltd
and
inc
lods
test
pop
cli
xchg
add
js
lods
lock
div
xor
pop
push
cs
iret
push
xchg
push
fldt
fadds
push
pop
inc
bound
xor
fpatan
or
jecxz
cmp
push
push
dec
cli
xor
adc
pop
mul
sub
sub
mov
out
mov
lahf
and
ss
xchg
clc
int3
in
push
jmp
rcrl
inc
shrl
sbb
into
adc
push
arpl
test
shlb
enter
lock
fisubl
loop
mov
mov
add
inc
jmp
push
testb
fiaddl
and
inc
and
pop
xor
push
rorb
mov
data16
push
push
dec
incb
rcrl
sub
sbb
pop
stos
adc
aam
xchg
outsl
adc
sub
pop
inc
pop
data16
aam
xchg
sbb
pop
inc
fcomps
mov
push
mov
popl
xchg
stos
sbb
clc
dec
stos
mov
ja
mov
call
mov
loop
test
jge
leave
rcl
pop
fisttpl
mov
inc
in
mov
xor
push
mov
sbb
mov
jmp
pop
pop
iret
add
and
aaa
ja
leave
or
or
mov
nop
lock
mov
xchg
out
rcrl
test
jne
dec
mov
adc
fsubrl
movsb
xor
repnz
cmp
push
jmp
and
sub
std
dec
sub
fmuls
lods
das
jmp
aad
icebp
push
or
cmc
push
test
gs
mov
dec
rcrl
or
imul
icebp
sub
cmc
call
ret
pop
pop
dec
iret
inc
xchg
or
ljmp
movsl
dec
dec
iret
stc
shlb
pop
outsb
add
shrb
fidivl
add
sbb
or
les
xchg
xchg
aas
cmp
xor
or
or
or
test
addl
fwait
in
cwtl
cmp
mov
mov
pop
aaa
lret
jle
dec
add
pop
mov
mov
dec
enter
insb
add
and
adc
lods
stc
cmc
pop
xchg
sub
fistpll
cwtl
sbb
aaa
mov
mov
das
inc
or
jae
sbb
mov
xchg
pop
mov
fistps
inc
fsub
test
ja
fildl
das
sub
and
out
fbld
fistl
push
dec
sub
jg
jp
adc
pinsrw
xor
cmp
ss
push
and
lret
aam
scas
aaa
arpl
mov
jne
imul
xchg
xchg
sub
cld
mov
pop
imul
cmp
pop
jne
mov
lret
jae
repnz
fistpll
mov
push
shrl
stc
ret
repnz
xchg
jbe
outsl
test
cwtl
add
cmp
lock
adc
sub
mov
lcall
jecxz
daa
mov
adc
fucom
les
pop
xchg
out
pop
sbb
xchg
dec
loope
pop
movsb
inc
cmp
add
lods
inc
daa
in
mov
pop
mov
out
lcall
xchg
cmc
sub
cwtl
push
scas
daa
sahf
dec
inc
mov
sahf
fnstcw
sub
jge
ljmp
arpl
lcall
repnz
fsts
push
add
std
lea
lock
adc
clc
push
mov
jecxz
mov
fwait
add
mov
fisubl
xlat
inc
xlat
sbb
imul
andl
push
and
cmp
xchg
cmc
jns
movsb
call
xchg
mov
add
cmpsb
hlt
mov
jmp
xchg
aam
inc
mov
je
data16
sti
adc
lods
das
ret
mov
xor
ret
rcrl
imul
cld
jae
and
std
outsb
insb
lds
pop
scas
sub
imul
popa
paddw
jo
push
lds
movsb
dec
push
sub
loop
push
pop
shrb
testb
les
loop
mov
xor
rclb
and
jo
pop
xchg
mov
dec
jno
mov
sti
rolb
outsb
push
cmp
dec
jno
pop
dec
cmpsb
fstpl
or
sub
jmp
sbb
or
xor
arpl
mov
pusha
mov
xchg
outsb
sahf
cltd
lds
sub
call
aad
dec
shlb
loop
inc
pop
pop
pop
sub
fwait
jns
jg
xor
mov
xlat
push
pop
pop
jle,pt
je
jle
or
stos
xchg
mov
stc
jge
and
mov
jae
jb
or
aam
xchg
les
jg
scas
cmc
push
add
push
cwtl
stos
dec
fdivs
jnp
inc
and
push
xor
dec
lret
pop
and
add
repnz
pushf
std
mov
dec
mov
push
add
mov
scas
pop
cmp
mov
pop
sub
sub
jae
push
loop
in
cmp
pop
dec
gs
rdtsc
mov
nop
js
lds
push
push
jmp
ds
es
jns
idivl
lret
push
xchg
xchg
xor
roll
jnp
adc
fidivrs
dec
push
outsb
mov
sbb
insl
movsb
repnz
test
push
rorb
sub
mov
test
ss
mov
fisubl
xchg
cmc
xlat
sub
popa
cmp
push
sbb
jne
push
pushf
aam
or
fdivs
jl
scas
jae
and
xlat
sbbb
pop
pop
cli
rcrb
outsl
aam
fistl
push
mov
test
add
push
mov
pop
outsl
lds
enter
jg
jnp
shr
pop
popa
add
sbb
fidivs
push
dec
inc
pop
insb
and
jecxz
cmp
push
daa
sti
or
adcb
xchg
jb
fdivrp
loope
cmpsl
add
test
imul
jg
and
cmp
sbb
bound
ud1
inc
mov
and
adc
mov
fs
pop
lea
jle
int3
jo
scas
dec
in
bound
rorb
xchg
or
xlat
adc
fisttpl
xor
repnz
push
xchg
sbb
mov
mov
dec
lfs
inc
cmpsl
je
daa
xor
sbb
add
xor
fistpl
mov
es
xor
mov
test
jne
dec
js
loop
xchg
jae
jle
jecxz
gs
jbe
leave
leave
push
lock
inc
jae
in
cmc
mov
inc
mov
adc
pop
aas
jp
out
insb
dec
push
lea
dec
arpl
dec
add
pop
andl
scas
iret
push
sub
rcll
les
btr
imul
ljmp
scas
stos
orb
pop
daa
mov
ret
adc
mov
insb
leave
mov
push
inc
loope
dec
sbb
aam
mov
imul
or
mov
adc
cwtl
roll
jbe
fdivs
and
xchg
leave
vxorpd
test
hlt
or
pop
clc
pop
and
sbb
cmp
ja
mov
xor
lock
xchg
adc
and
js
mov
push
cwtl
das
cmp
pop
push
or
cld
stos
lods
lea
mov
mov
jnp
jp
cmp
insb
cli
mov
jo
lock
push
leave
outsl
andl
sub
js
mov
sarl
lcall
dec
xchg
xor
scas
and
inc
mov
pop
ret
shrb
xor
addl
aad
popa
shll
shll
in
addr16
ja
das
mov
xchg
mov
out
fldl2e
pop
xorl
sarb
iret
inc
dec
jmp
push
xchg
xchg
sub
icebp
fisttpll
cmc
sbb
inc
jle
ljmp
pop
mov
jmp
xor
inc
fwait
lods
xchg
fadds
dec
test
xor
jae
ret
mov
fcoml
or
iret
cwtl
mov
jmp
std
inc
gs
fsubl
adc
inc
mov
call
cmp
dec
cmp
in
or
testb
test
xchg
out
and
gs
cld
lcall
mov
std
mov
sub
and
sub
dec
push
imul
rcrl
sbbb
aad
push
push
push
jne
and
sti
dec
icebp
pop
pop
adc
ja
xchg
popf
jg
movsl
out
mov
pop
sar
mov
push
xor
xlat
das
out
push
cwtl
out
dec
mov
add
add
leave
inc
popf
or
addb
mov
call
add
js
jb
lret
add
mov
les
sub
xorb
lret
call
cltd
jecxz
mov
adc
ret
ret
inc
or
mov
repz
jo
stos
fs
xor
inc
ficompl
outsl
mull
dec
in
daa
daa
dec
mov
stos
mov
pop
ja
into
dec
test
push
insb
cmp
adc
mov
xchg
jmp
cmpsl
stos
push
dec
repz
aam
mov
aad
repz
mov
xchg
push
and
xchg
shrl
test
int
jp
mov
fucom
es
or
xchg
sub
dec
pop
scas
mov
mov
mov
pop
dec
or
sbb
and
cmp
or
sar
imul
jnp
or
jp
sbb
pop
or
mov
cmp
fwait
sbb
outsb
jb
xor
arpl
jae
arpl
aas
scas
xor
call
jl
lock
pop
ficoml
out
mov
cmp
mov
bswap
mov
push
xchg
mov
mov
and
jo
pushf
scas
adc
or
pop
int
clc
in
fidivrs
pop
xchg
mov
cltd
or
xchg
jnp
mov
rclb
out
xchg
fmull
sub
push
int
out
xor
sbb
rcr
fsub
inc
push
test
sbbl
adc
jmp
adc
lock
imul
ljmp
shll
pop
int
xchg
push
roll
and
and
jp
xchg
add
jbe
flds
jbe
adc
popa
push
dec
jg
cmp
imulb
dec
sbb
aad
and
outsl
or
sbb
out
xor
leave
mov
stos
inc
xchg
mov
in
xacquire
iret
fldenv
int
lret
sbb
mov
mov
push
sbb
ficomps
xor
xor
cli
dec
cmc
push
dec
sbb
lret
shrd
outsb
std
fcompl
or
jge
mov
mov
adc
pop
xchg
fimuls
cs
adc
mov
inc
lahf
lea
mov
jb
and
xlat
mov
add
in
add
lcall
cltd
dec
mov
and
aam
loop
cmp
out
pop
xchg
jae
mov
pusha
jecxz
ss
ja
jnp
dec
jno
xchg
aaa
or
rclb
push
frstpm(287
bswap
adc
add
iret
addr16
lret
add
or
cmpsb
fsts
sbb
outsl
push
test
scas
or
mov
sbb
add
inc
stos
xlat
out
xchg
adc
mov
add
mov
clc
and
xor
adc
sub
jb
xor
jmp
push
cmp
jp
sbb
push
push
xor
lret
gs
jb
mov
add
push
shll
xchg
lods
lret
iret
jmp
xor
add
adc
mov
add
cmp
sbb
pop
mov
orl
popa
mov
test
out
negb
mov
push
lcall
fisttpl
inc
lods
or
nop
or
xor
xor
add
cmp
or
lods
sub
shrb
or
pop
mov
jecxz
ret
mov
in
xchg
aaa
and
hlt
mov
mull
jae
xor
out
adc
push
sbb
ds
pop
stos
xor
shll
cmpb
jl
inc
jno
sub
int3
rclb
flds
adc
scas
movsb
sahf
or
sti
fsubs
aas
and
jp
subb
jno
scas
jle
sub
nop
je
in
fsts
xor
repnz
push
fsin
pop
lods
ret
mov
insl
mov
in
push
roll
or
pop
fsubrl
leave
repnz
jmp
aaa
cs
mov
mov
push
jmp
xchg
sbb
daa
mov
mov
popa
fiadds
inc
test
test
push
ds
pop
xchg
es
lcall
jns,pn
nop
sbb
mov
insl
cmp
out
test
jo
mov
xchg
cmp
in
icebp
push
inc
pusha
mov
aaa
popa
jno
call
xchg
test
mov
pushf
mov
mov
outsl
sbb
imul
lods
xor
fs
gs
mov
sub
and
jmp
push
add
cmpsl
jnp
sub
in
inc
dec
call
iret
push
repnz
cmp
in
adc
into
pop
cmp
loopne
sub
sub
ror
jne
stos
mov
jmp
mov
in
or
or
bound
call
call
arpl
mov
fwait
add
cmp
adc
jle
dec
fs
fidivs
push
dec
pop
jg
sub
divb
add
insl
or
push
xor
stos
sub
dec
aaa
imul
ficomps
jl
stos
imul
movsb
xor
aaa
push
mov
mov
cmpsl
bnd
scas
or
inc
push
fisttps
rcll
jp
add
cmc
rorb
dec
das
dec
bound
and
pop
inc
repz
sbb
adc
imul
pop
and
arpl
les
data16
fst
and
fisttpl
clc
lret
jle
rcr
out
jecxz
lds
scas
shrl
mov
cmp
mov
stos
das
cwtl
mov
pop
push
add
sub
sbb
scas
pop
call
lcall
incl
fisttpll
jp
ja
fsts
lds
jb
or
pop
sbb
es
inc
push
cld
sub
movsl
and
xchg
jb
and
add
pop
mov
fwait
adc
fxch
movsl
mov
jmp
sub
rolb
jbe
cli
cmpsb
bnd
xchg
mov
scas
movb
push
push
loop
imull
repnz
xchg
xor
add
xlat
or
push
int3
les
jne
dec
pop
popf
xchg
cwtl
xor
xlat
pusha
xchg
mov
and
daa
into
loope
add
adc
cmp
pop
xchg
outsb
cwtl
push
addr16
rclb
mov
jno
inc
les
fwait
clc
out
sub
xchg
jnp
es
out
mov
xor
mov
add
or
popf
add
ljmp
insb
cmp
loop
movsb
xor
mov
push
inc
or
insl
mov
mov
push
mov
inc
push
scas
cltd
pop
lret
cs
stos
movsb
jg
dec
mov
andb
pusha
mov
lret
jg
mov
negb
cmpsl
and
lret
lea
dec
push
testl
pop
lds
fcoml
in
push
imul
stc
cld
adc
mov
bound
mov
test
cmp
paddsb
mov
aam
dec
daa
pop
xchg
icebp
ss
and
js
pop
nop
xchg
adc
fldt
loope
inc
lods
aaa
adc
mov
cli
fucom
adc
jns
cs
fwait
inc
in
cli
xor
popl
sahf
fs
fstps
cmp
insl
sub
daa
loop
fcompl
dec
xlat
mov
dec
ret
icebp
adc
hlt
cltd
jmp
data16
movsb
dec
sub
lret
sub
jecxz
idivb
cmp
iret
and
sub
bound
mov
iret
pop
inc
cld
mov
add
xchg
test
or
dec
int
fsubrs
adc
and
inc
pop
mov
addb
outsb
push
je
and
jnp
fildl
mov
dec
jmp
mov
lock
sbb
mull
pop
push
sbb
test
mov
cmp
je
xchg
dec
in
or
add
data16
in
mov
ret
test
lds
in
inc
and
cmpsb
mov
xor
adc
mov
mov
xchg
dec
loopne
xorb
test
repz
fldt
sbb
and
mov
mov
jl
test
bound
jns
add
insb
daa
movsb
aam
sub
sub
outsl
gs
loopne
int3
sti
pop
lds
rcrl
pop
pop
xchg
dec
mov
sbb
xlat
mov
inc
and
arpl
jl
adc
cltd
les
outsb
xchg
negb
divb
adc
dec
cmp
jb
ss
imul
cmpsb
sub
loope
rol
xor
mov
mov
mov
xor
xor
gs
imul
aas
loope
xor
mov
xorb
xchg
and
mov
fadds
icebp
popf
inc
shl
mov
adc
scas
adc
pusha
sahf
jo
and
outsb
push
insl
mov
out
mov
pop
notb
jno
popa
jge
rcl
sub
ret
out
jb
pop
dec
inc
jmp
imul
in
loope
dec
test
and
out
setne
outsl
cmpsl
outsl
push
idivb
mov
mov
jecxz
lods
roll
inc
dec
fwait
inc
jl
negb
loop
dec
push
jg
mov
fmul
add
sbb
lahf
push
mov
mov
mov
mov
cli
dec
fmuls
repnz
repz
test
or
ficompl
jl
mov
sbb
popf
inc
fcmovne
jecxz
inc
out
stc
mov
sahf
pop
sbb
lds
mov
sub
push
or
repz
decb
mov
sub
dec
sbb
lcall
push
adc
scas
cs
repz
cmpsb
mov
movsb
ds
cmp
test
jl
jno
xchg
mov
or
shr
jp
repnz
push
sti
and
push
adc
popf
pop
xchg
xchg
or
push
xchg
pusha
fcomps
in
out
popa
sbb
jle
xchg
jns
or
mov
jae
ss
and
and
repnz
cmpsl
push
icebp
je
loop
scas
mov
ret
lock
enter
mov
xchg
lock
jecxz
cmp
push
loopne
adc
cmp
pop
sbb
lods
into
lock
ret
inc
pop
jnp
insl
enter
dec
outsb
jp
sbb
out
lret
dec
pop
data16
adc
sub
adc
aas
jle
mov
xchg
icebp
shrb
mov
mov
shlb
push
mov
jno
mov
icebp
int
test
in
push
lds
mov
popf
loope
fidivrl
pusha
gs
lock
xchg
xchg
pop
xchg
and
test
mov
aam
jle
jne
icebp
mov
add
mov
out
lods
cld
mov
mov
sub
bound
jl
mov
subl
popf
mov
mov
arpl
scas
stos
xchg
mov
dec
fsubrs
orl
adc
enter
add
or
jb
jbe
in
scas
push
dec
cmp
or
xor
in
jae
pop
adc
rcl
lds
inc
fxch
dec
add
xor
out
out
xchg
sbb
adc
insb
test
dec
dec
aas
push
in
dec
mov
jns
int3
push
push
or
mull
lcall
fwait
cmp
push
mov
or
sbb
pop
add
test
jb
lods
xor
dec
pop
pop
dec
sub
xchg
pop
adc
mov
shr
shl
call
push
aas
ret
test
or
sub
xor
movsb
pop
add
sub
popa
mov
inc
xor
call
addr16
xor
or
andl
pop
shr
rorl
xchg
cmp
ljmp
movsb
pushf
sbb
lcall
push
dec
popf
int
mov
or
and
movsl
cmp
jns
or
les
pop
mov
pop
in
in
daa
cltd
push
mov
pop
out
push
pusha
lret
add
repnz
jp
sub
push
lcall
hlt
cmc
lret
xchg
sub
aas
ret
and
cmp
push
xchg
and
adc
fimuls
inc
lret
mov
adc
stos
mov
dec
sbb
jp
jbe
mov
adcl
insb
roll
lahf
arpl
mov
or
dec
rcrl
ret
dec
xor
scas
add
dec
in
adc
sahf
jecxz
icebp
inc
inc
mov
cwtl
xchg
xchg
stos
scas
jne
adc
cs
test
shlb
xchg
lods
scas
loope
sbb
lock
mov
and
mov
xor
mov
mov
xchg
stc
mov
adc
sub
and
push
adc
cmp
cwtl
pop
or
cmc
outsb
pop
and
lret
mov
inc
lahf
and
addr16
pop
dec
in
shll
pop
lds
nop
inc
sbb
push
aam
stos
lcall
shrl
ret
dec
mov
sbb
adc
add
add
lds
aad
test
movsb
dec
sbb
in
clc
inc
jns,pt
mov
shrl
mov
inc
push
adcb
lds
mov
push
mov
fwait
xor
add
add
xorb
mov
xchg
xor
jmp
repnz
xor
adc
adc
fdivr
popf
repnz
add
in
and
in
push
push
in
and
cmp
inc
and
xchg
mov
add
sar
jp
icebp
xchg
scas
outsl
sti
pop
test
addr16
mov
mov
mov
inc
xchg
iret
adc
fsubr
or
js
xchg
or
adc
in
jbe
leave
adc
stos
and
cmp
lcall
or
fstl
out
mov
and
or
aaa
xor
adc
cmpsb
addr16
sahf
push
icebp
shll
xchg
fs
dec
imul
pusha
add
push
rclb
adc
mov
or
out
xor
jne
mov
jne
dec
push
push
adc
test
sbb
sbb
adc
cmp
stc
xsaves
dec
mov
lods
repz
fiadds
xchg
repnz
pop
lods
push
jno
sbb
add
loop
mov
pop
and
mov
ja
adc
pop
shll
pop
pop
imul
pop
adc
pop
mov
addr16
sbb
rcrb
cmp
jl
scas
add
clc
outsl
out
push
movsb
fisubrl
jns
ss
xor
sti
and
push
aaa
out
popa
jle
jae
stos
jo
jbe
mov
ret
xchg
outsb
pop
and
xchg
in
int
fldt
jae
aas
push
iret
push
in
ret
add
cltd
punpckhdq
sbb
dec
sbb
jne
sti
xor
jp
leave
movsl
dec
aaa
xchg
pop
mov
sbb
xchg
xchg
lea
in
stc
adc
xor
scas
mov
out
out
xchg
insb
pushf
fsubl
sahf
push
out
jmp
xlat
cmp
mov
test
scas
jae
and
cltd
je
xor
fisubs
xor
fmuls
ljmp
and
xchg
sub
jnp
add
xor
mov
ret
pop
loope
or
fildll
aam
cld
sti
push
mov
cltd
mov
mov
jb
negb
out
jmp
mov
xor
sbb
mov
jae
sbb
mov
js
outsl
jns
enter
ljmp
cmp
jnp
cmpsb
push
mov
push
idivb
lahf
popa
sbb
dec
cmpsl
push
mov
jns
inc
sbb
push
test
inc
sarb
xchg
add
cmp
lods
imul
xor
in
mov
insb
shlb
jg
mov
or
ljmp
out
mov
mov
pop
push
popa
xlat
cmp
mov
jl
cmpsl
jmp
out
lea
das
bound
mov
lods
xchg
imul
inc
mov
dec
push
push
lods
mov
pop
fucomi
mov
les
adc
pop
lods
test
hlt
jne
or
xor
jle
cmp
and
push
and
push
xor
pop
fdivl
cmp
sbb
aam
lods
fucom
push
loope
das
inc
rcr
out
pop
rcrb
stos
push
pop
out
and
std
and
repz
pop
xchg
sub
in
jns
add
cltd
outsl
push
cmp
imul
pop
roll
xorb
into
fninit
and
cmp
imulw
or
sbb
test
pushf
cmp
lcall
pushf
insb
and
imul
jo
popf
test
cmpsb
lret
mov
test
stos
sbb
pop
lods
popf
jne
jo
repz
cmp
mov
mov
cmp
lret
mov
and
adc
data16
daa
rcrb
movsl
in
adc
stos
xlat
je
es
pop
mov
das
pop
lahf
je
hlt
clc
lret
ror
jg
mov
repnz
cs
push
cmp
jo
imul
cld
gs
push
addr16
shlb
and
inc
ret
shl
lahf
lcall
shlb
adc
xchg
pop
adc
xor
and
cmp
dec
cld
insb
mov
lcall
aaa
sbb
xor
mov
push
jns
push
std
xor
loopne
cltd
rorl
pop
movsl
ja
gs
cwtl
inc
push
jno
jne
jle
shll
outsl
fwait
sub
xchg
mov
fs
loope
mov
lea
or
xor
xchg
mov
cmpsb
sub
sub
mov
dec
test
fs
jmp
or
or
pop
jle
aas
xlat
cld
fsubs
scas
imul
push
and
sbb
pop
cs
pushf
sub
es
add
in
and
mov
pop
and
fstpt
mov
sub
loop
pop
mov
mov
mov
nop
jnp
lret
and
pop
bound
in
xor
cltd
clc
xchg
mov
test
lea
mov
ja
pop
xchg
inc
xor
push
icebp
or
push
bound
fistpll
pop
xorb
push
cmp
lods
outsb
push
rcrl
dec
jae
movsl
mov
dec
sub
clc
add
psrad
shrl
clc
hlt
cmp
nop
pop
cld
dec
jno
les
call
scas
outsb
inc
sbb
movsb
jp
cmpsl
add
movsl
sahf
xchg
adc
pop
ret
loopne
mov
sub
mov
mov
out
call
pop
jmp
test
inc
or
arpl
in
mov
mov
jecxz
mov
push
enter
jne
mov
pop
sub
jmp
ds
sub
or
shll
shr
and
mov
mov
push
push
push
fs
aas
mov
push
orb
out
jg
pushf
sti
pop
scas
mov
xchg
divb
movsl
pop
mov
loopne
rclb
push
lret
inc
ret
adcb
xor
inc
nop
push
push
cmp
xor
movl
sbb
xchg
mov
push
das
ret
inc
into
mov
mov
fisttps
dec
popf
push
push
in
sahf
popa
andl
shll
sarb
lods
leave
mov
jge
and
sbb
inc
lods
add
mov
or
mov
xor
mov
jecxz
xchg
mov
test
add
inc
xchg
testb
or
mov
pusha
or
pop
sub
adc
add
repz
adcl
push
iret
pop
mov
repz
ljmp
mov
mov
shlb
and
loop
jbe
fiadds
and
inc
or
sahf
mov
call
mov
xor
aam
mov
iret
lods
cmc
subb
xor
lods
ret
incl
movsl
inc
outsb
movsl
pop
fmuls
mov
adc
pop
jae
inc
rdtsc
xchg
ret
addr16
pop
lock
xorb
add
adc
bound
out
adc
add
xor
adc
xchg
cld
bound
xchg
and
jnp
lret
fidivl
fwait
call
sub
push
pushf
pop
mov
jne
je
xor
push
lods
in
jl
push
hlt
xor
xor
and
jecxz
test
call
mov
mov
imul
mov
inc
out
lods
inc
inc
push
adc
out
inc
mov
call
fisttps
mov
sti
push
inc
add
sub
mov
xor
or
add
stos
pop
inc
hlt
jecxz
in
stos
es
out
es
sbb
dec
jno
dec
mov
shlb
jecxz
cld
pushf
jne
or
repz
sti
xor
test
loope
adc
xchg
test
cmpsb
inc
mov
imul
lret
and
lock
mov
idivb
repnz
frstor
test
aam
and
xchg
xor
inc
fsts
add
add
add
cld
push
mulb
pop
adcb
and
idivl
xchg
movsb
jno
jbe
outsl
shl
pop
nop
insb
lret
lods
iret
mov
adc
ficoml
cld
in
imul
mov
mov
mov
or
pop
mov
pop
arpl
shrl
add
cmp
sahf
loope
or
je
xchg
je
cld
mov
sti
aaa
mov
and
fildll
sbbl
stos
aad
js
or
mov
repz
sub
or
ficoms
in
sbb
dec
pop
in
das
jbe
push
jne
xor
aam
ret
lcall
or
dec
iret
lcall
out
cmp
xchg
add
outsb
mov
adcb
fld
xchg
push
and
dec
js
jno
movsl
jecxz
sahf
call
je
jno
addl
pusha
cmc
inc
inc
call
std
testl
insb
push
loope
fimuls
xchg
cli
sub
mov
jl
sbb
push
and
sub
jno
cmpsl
scas
loope
and
incb
lcall
out
cmpsb
lock
call
movsb
cmp
mov
out
arpl
mov
pop
pop
movsb
xchg
stos
adc
cld
or
lods
loopne
sub
sti
out
outsl
cmp
mov
or
mov
mov
ret
outsb
shll
fxch
dec
push
push
out
sbb
rcrb
test
lret
js
pop
iret
push
push
mov
mov
ret
push
inc
xor
pop
movsb
cmp
mov
cld
sub
or
pop
lods
cwtl
push
icebp
add
test
in
pop
push
aad
mov
aad
idivl
idivl
movsb
daa
repnz
lret
xchg
inc
xorl
sbb
sub
in
andb
jne
mov
sti
or
pop
lock
js
or
cmc
lret
pop
xchg
pop
mov
jle
lret
cmp
or
fildll
rclb
test
decl
imul
lea
call
imul
jno
ret
aaa
push
lods
cmc
cmp
sti
pushf
inc
or
mov
scas
movb
cld
jbe
inc
mov
aas
imul
dec
add
insb
sub
pop
adc
sbb
in
push
cli
subb
mov
fnstsw
outsb
jle
xor
jle
loopne
mov
mov
jg
inc
pop
movsb
sub
dec
dec
cmp
adc
das
clc
or
pop
lock
jmp
inc
out
pushl
mov
sbb
fidivrl
outsb
insl
and
fmull
out
addr16
fs
test
and
mov
push
imul
sti
lds
mov
cli
loope
hlt
inc
jmp
jo
test
inc
iret
cmpsb
mov
cltd
add
mov
inc
xchg
pusha
hlt
repnz
scas
ret
aaa
push
mov
pushf
push
mov
cmp
dec
mov
xchg
sub
cld
jl
inc
out
mov
xchg
test
pop
addr16
sarl
les
insb
add
jno
or
das
push
mov
or
cmp
pop
nop
divps
pushf
and
int
fcmovnbe
int
fnsave
stos
into
pop
cmp
push
insb
add
insb
dec
pop
mov
out
in
xchg
pop
and
call
sbb
push
loop
jmp
push
adc
clc
sbb
out
add
add
loope
outsb
aaa
cmp
mov
inc
outsb
xchg
inc
ret
xchg
jp
call
std
scas
add
jge
and
movsb
dec
mov
push
int
xchg
mov
mov
lcall
adc
leave
and
fstl
cli
lcall
out
adc
out
pop
std
sbb
aad
xchg
mov
mov
pop
sub
inc
aam
mov
hlt
aaa
and
test
jns
sub
aad
inc
loopne
imul
or
sub
into
int
out
bound
je
pop
dec
or
ds
mov
pop
lds
cmp
bound
je
cld
mov
sar
scas
mov
mov
mov
push
popa
xchg
aad
mov
outsb
mov
xor
or
stos
mov
out
sbb
adc
lds
lahf
icebp
lret
iret
jbe
fcomp
mov
sahf
aas
mov
lret
dec
add
into
faddp
mov
fsubs
test
jbe
jl
cmp
shlb
push
stos
out
in
dec
mov
jge
fs
sbb
mov
jno
push
mov
pop
pop
cmp
ljmp
cmpsl
mov
cmp
dec
sti
insb
or
mov
pop
mov
cmpsl
test
add
cmp
pop
sbb
inc
inc
mov
push
sub
jmp
je
lret
mov
sub
ret
js
loopne
pop
dec
stos
mov
lock
dec
pop
in
fwait
dec
ja
into
sbb
popf
mov
pop
or
lds
movsb
cmpsl
pop
sbb
test
xchg
dec
xchg
sti
inc
dec
mov
mov
lods
pop
in
push
push
aas
stos
inc
test
jmp
test
jp
jle
ja
add
lret
jnp
lcall
jb
aad
or
roll
pop
insl
mov
cwtl
inc
mov
jne
mov
jnp
rorb
mov
fistps
xchg
pop
push
call
cmc
xor
sbb
icebp
pop
inc
xor
in
sbb
stos
push
jg
inc
std
sub
push
mov
clc
cwtl
sub
fsubrl
aaa
sbb
and
cmpsl
sahf
int3
movsb
out
cmpsl
xchg
repz
lcall
push
test
shll
push
mov
mov
xchg
mov
jge
xor
ficoms
cmp
mov
addb
xor
pop
sbb
fwait
mov
pop
ficomps
jg
mov
imul
fidivrl
js
fisttpll
push
rcrl
jnp
xchg
mov
aad
incb
in
or
jb
lret
push
jb
negl
mov
js
fnstsw
xchg
test
xchg
rcrb
or
jp
xor
test
fdivrl
jmp
imul
mov
jns
push
pop
jg
fstpl
inc
mov
push
ficoml
sti
fsts
cltd
sarb
and
mov
cltd
jae
push
in
add
push
add
shll
xor
mov
shrl
aad
dec
sahf
mov
fists
sub
cmp
add
incb
mov
add
sub
arpl
filds
sahf
stc
inc
lock
xor
stos
stos
repnz
int
pushw
or
test
mov
pop
test
and
dec
pop
adc
fs
jns
jp
jb
mov
adc
cmpsl
push
xchg
mov
sbb
add
jae
pop
fwait
xchg
sbb
jno
add
mov
inc
pop
xchg
test
push
mov
dec
cli
jg
xor
ret
jg
fisubs
push
inc
push
inc
mov
sub
sub
add
lods
sti
add
cmp
sarl
shlb
ret
fisubl
bound
fwait
sti
mov
iret
sahf
out
stc
mov
xor
jp
ss
rorb
int3
inc
aad
fldt
iret
leave
fs
inc
negb
ficoml
or
idiv
ret
shr
fcmovnu
cmpsl
push
jns
push
hlt
sbb
add
mov
out
and
aam
cmp
mov
inc
sbb
cmpsb
loop
mov
imul
add
ja
test
fucomip
cmp
cli
and
std
mov
loope
jnp
xchg
push
aas
jg
dec
sbb
in
aam
mov
in
mov
out
adc
xchg
mov
inc
inc
pop
push
cld
mov
fistps
imul
cmp
cmp
jne
in
cmpb
jnp
jge
jnp
jl
int
cld
jns
and
test
dec
pop
jmp
dec
jne
idivb
lods
ja
sub
jns
add
xchg
adc
repnz
gs
cmp
ja
sti
dec
jp
sbb
std
and
in
ret
test
xchg
gs
lret
mov
or
dec
fdivrs
dec
cltd
out
mov
and
hlt
insl
add
inc
decb
adc
sbb
in
xor
cmp
push
xchg
jns
pop
aad
cwtl
fiaddl
or
push
xchg
sahf
jp
cmp
daa
inc
popa
add
cmpsl
mov
add
sub
and
adc
pop
lret
mov
sub
ret
xchg
daa
sub
outsl
jle
int3
and
in
out
push
xchg
and
mulb
idivb
add
add
aad
mov
fs
loopne
inc
in
push
jge
inc
add
mov
ljmp
pusha
add
int
ror
in
pushf
or
scas
movsb
mov
roll
shlb
ds
outsl
jmp
pop
notb
or
jb
sbb
jo
add
aam
das
test
fcoml
sub
scas
stos
pop
dec
int3
test
mov
aaa
loopne
or
test
xor
shlb
addl
xor
jge
push
mov
cs
fadd
pop
jb
cmpsl
or
or
aas
imul
sub
inc
cli
or
inc
insl
mov
jb
dec
std
roll
lret
mov
rol
lret
xchg
filds
das
rorl
or
movsb
xchg
push
push
icebp
popa
lods
repnz
dec
sub
fimuls
xchg
cmp
add
sub
jmp
filds
das
xlat
sbbl
sbb
movsb
fisubrl
pop
jl
adc
je
cs
mov
insl
jns
inc
dec
xor
inc
fcmovb
mov
js
jb
test
sbb
sbb
cmpsb
aam
sbb
int
pop
out
xlat
mov
hlt
ljmp
sbb
cwtl
je
push
jo
lds
push
aad
clc
aaa
stc
out
cmpsl
fsubl
pop
cld
adc
cmp
mov
jge
stc
push
jecxz
int3
mov
jle
xor
cmp
mov
clc
inc
sub
xchg
xor
stos
pop
mov
xchg
xor
jle
pushf
cwtl
jo
inc
dec
sub
insl
sbb
sub
or
push
add
lcall
sub
lds
pop
fnstenv
cmpsl
cli
fstpl
jmp
ret
ror
sub
fs
lret
cmp
test
inc
jb
aad
pop
scas
cltd
dec
jge
mov
push
jae
je
imul
dec
out
test
inc
push
sbb
xorb
stos
aam
or
jecxz
das
lahf
test
loop
xchg
adc
out
in
fs
pop
pop
andb
lods
mov
sbb
stos
test
xor
xor
add
outsl
cmp
xor
add
jl
stos
movl
nopl
pusha
nop
jg
add
mov
daa
stos
pop
fsubrs
fstp
push
les
push
jbe
mov
push
nop
mov
sub
sub
je
xor
add
mov
enter
pop
in
in
and
and
rcll
inc
aad
call
das
cmp
push
mov
out
pop
dec
dec
push
mov
negl
inc
pushf
sarb
int
push
into
and
out
insl
dec
cltd
jl
shlb
and
jge
fs
out
jo
lahf
outsb
fwait
inc
or
ret
push
pop
cmp
xor
jno
xchg
mov
ret
in
add
lret
mov
subl
push
mov
cmp
shlb
mov
push
frstor
test
test
sub
sbb
jnp
jle
loope
mov
outsb
add
pop
pop
dec
jmp
push
sbbb
jge
dec
jne
dec
decb
lret
insl
rcll
adc
les
filds
leave
add
dec
mov
shlb
push
std
andl
adc
rorb
add
or
xlat
push
es
imul
cmp
test
lcall
int
xor
movsb
loop
or
aam
jne
jbe
je
sub
pop
arpl
leave
or
outsb
cmpsb
sbb
mov
lock
fdivs
dec
push
dec
sub
xchg
push
std
das
inc
or
movl
jmp
mov
sbb
insl
jo
negb
lahf
inc
dec
sbb
dec
mov
out
add
jne
in
xor
ret
jge
lahf
popf
jb
push
cli
inc
add
push
dec
mov
pop
jns
stos
jne
call
lods
mov
xor
pusha
cmp
xchg
add
jle
inc
cmpsb
fucomi
test
sub
cmp
out
pop
xor
arpl
pushf
jb
add
xor
xchg
es
stc
mov
sub
mov
fsubl
push
and
pusha
int3
xlat
loopne
dec
mov
and
inc
icebp
jg
imul
inc
jo
aas
fidivl
jle
cmc
aam
stos
jge
fmuls
popa
mov
dec
test
xchg
out
or
push
bound
jbe
fwait
adc
clc
inc
lds
jecxz
jge
out
icebp
cmc
popa
mov
mov
inc
add
sahf
push
mov
sub
leave
xor
sbb
mov
cmpb
cmp
sub
outsb
fstl
jge
push
add
xor
aam
insb
mov
mov
movsb
outsl
test
pop
leave
push
ficoml
lods
in
add
insb
pushf
push
rcll
pushf
inc
pop
or
sub
jo
jnp
pop
arpl
lock
adc
mov
xor
sahf
mov
xor
cld
test
jp
roll
inc
addr16
mov
inc
shlb
pop
lahf
xlat
ret
rol
pop
ss
sbb
pop
fildl
test
fs
out
xor
dec
fdivrp
dec
xor
sub
insl
mov
insb
fbstp
cmc
lds
sub
cmp
cmp
scas
mov
stc
fistpl
fisttpl
mov
mov
adc
lahf
aad
mov
xor
adc
mov
out
add
dec
bound
pmulhw
test
cmp
enter
popa
or
jae
loop
xchg
jnp
sbb
or
mov
inc
call
mul
les
out
test
mov
fadd
sbb
lret
sti
mov
mov
pop
mov
negb
insb
or
dec
jbe
dec
ds
sahf
in
pop
popa
out
sti
mov
fwait
xchg
test
mov
xchg
mov
stos
push
push
jl
inc
into
adc
xor
enter
inc
mov
xor
push
xchg
dec
aas
out
movsb
xchg
cmp
pushf
loopne
mov
cltd
out
add
test
shrb
push
mov
lahf
add
mov
add
push
xlat
lea
mov
pushf
fcompl
in
push
inc
jle
cmp
mov
jns
mov
test
lods
mov
aad
cs
xlat
pop
into
and
adc
sub
imul
fs
aas
in
iret
mov
or
cmp
ljmp
addl
int
movb
sbb
nop
stos
mov
test
pop
in
cmp
cmc
mov
cs
pushf
sub
into
loop
adc
xchg
mov
xor
cltd
push
mov
sbb
out
xor
test
addr16
dec
rclb
pop
sahf
in
inc
test
or
cmp
jecxz
jl
loopne
out
cmpsl
xchg
add
push
sbb
lods
popa
fsub
flds
hlt
push
adc
movsl
int3
push
sub
and
push
sbb
repz
not
jb
arpl
imul
mov
int3
mov
dec
daa
cmp
cmpsb
add
dec
gs
push
mov
int3
lock
es
loopne
rcrl
or
or
jecxz
mov
mov
loopne
les
add
pop
xchg
xchg
les
dec
cmp
out
shrl
cmp
popa
mov
inc
fs
cmp
hlt
shll
jp
push
add
clc
sbb
cmp
sbb
cmpsb
icebp
fnstenv
adc
or
xor
mov
xchg
add
std
out
xchg
insl
dec
cmc
inc
fcomps
add
in
loopne
xchg
outsl
addr16
jecxz
dec
push
add
fcmovne
jno
xor
ljmp
test
adc
adc
jle
fadds
pop
cwtl
lret
push
dec
mov
and
or
pop
movsb
push
or
pop
cs
jns
popa
inc
test
sub
mov
mov
data16
mov
pop
iret
stos
cmc
test
mov
negb
mov
and
les
jp
add
mov
imul
call
jl
cli
jb
mov
cmp
mov
mov
test
xor
fsubrl
aaa
jmp
aad
jle
loop
mov
mov
outsb
idiv
rorl
call
fsubrs
xor
sub
pop
hlt
nop
mov
in
mov
test
jg
inc
jnp
rcrl
fistpll
xor
outsb
scas
and
dec
jne
pusha
jae
add
xchg
push
dec
xchg
mov
sbb
mov
leave
cmpsl
add
fs
imul
pop
clc
or
pcmpgtd
cmpsl
cwtl
fnstsw
bswap
xorb
test
xor
jne
out
sbb
rcl
adc
pop
scas
add
fisttpl
outsb
movsl
lock
fisubrs
cmp
lds
pop
xchg
mov
test
icebp
loopne
xchg
dec
bound
cs
loop
jle
xor
pop
inc
and
lret
into
add
mov
cmp
adc
xor
add
into
test
iret
jmp
xor
jge
jp
bound
jno
hlt
cs
dec
hlt
movsb
mov
test
lods
push
fmuls
in
inc
popf
dec
movsl
incb
xor
push
push
rclb
popa
lea
dec
and
add
jge
mov
pop
lea
push
push
cmp
push
add
push
inc
mov
adc
jae
js
loope
xor
add
es
rcr
mov
dec
mov
jbe
mulb
inc
xor
aas
bswap
sbb
sbb
loopne
scas
fdivrs
icebp
adc
fisubs
aad
push
in
cld
mov
sbb
scas
out
cmp
dec
mov
sahf
les
sbb
aaa
sbbl
push
xor
mov
imul
fnstcw
push
lret
insl
cltd
jo
push
out
ficompl
insl
pop
pop
daa
cmpsl
push
mov
inc
sub
repnz
dec
push
cli
xchg
out
adc
and
int
fisubrl
imul
jp
adc
test
push
or
mov
jbe
push
xor
clc
pop
xor
inc
push
xor
sub
addb
hlt
xchg
or
fnsave
test
lret
gs
sbb
pop
push
push
pop
les
push
mov
js
loopne
dec
jne
sub
out
cltd
insb
stos
adc
adc
sbb
rcrb
push
push
hlt
push
enter
ds
mov
outsb
sub
movsb
mov
aaa
test
push
daa
insl
popf
mov
stc
mov
xchg
mov
inc
inc
pop
mov
pop
popf
je
xor
mov
loopne
push
mov
rorb
lods
jnp
cmp
movsb
stos
dec
cwtl
adc
xchg
lock
xlat
aaa
cmp
and
mov
data16
or
jns
mov
mull
jge
mov
ret
mov
xchg
inc
cltd
nop
outsl
cmp
xchg
out
pop
mov
cmp
sti
mov
out
sbb
add
sahf
sub
and
pushf
push
or
std
xchg
mov
fcomip
orl
neg
loope
sbb
mov
sbb
mov
ljmp
cltd
cmpsl
cld
imull
insb
pop
or
cmp
or
push
lea
mov
pop
scas
push
int3
fsubs
cmp
cmp
dec
ds
inc
sbb
mulb
daa
out
push
add
jne
fsubl
and
cltd
mov
lea
dec
ja
mov
iret
fsubl
inc
pushf
sbb
testl
fcoms
mov
cltd
xor
lea
insl
or
outsl
rolb
stos
scas
fsubr
int
and
clc
sub
call
out
or
mov
je
mov
lret
int
arpl
xchg
or
addr16
test
incl
xchg
in
arpl
pop
loopne
jne
sub
cmp
pushf
xor
mov
test
dec
fcoms
loop
adc
in
js
xor
nop
pop
scas
out
inc
sahf
mov
insb
ljmp
jae
sbb
jb
pushf
push
mov
xor
cmp
mov
fnstsw
outsb
pop
enter
in
push
cltd
test
sbb
or
add
scas
cltd
int3
lcall
movsb
adc
jae
aaa
xor
aad
jge
push
andb
jp
fs
jmp
dec
xchg
push
dec
int3
xor
inc
xchg
jp
gs
push
push
lret
xchg
cmp
mov
and
das
test
dec
cmp
lock
daa
das
push
fldenv
inc
dec
negl
or
push
sub
aas
iret
cmpl
mov
or
adc
int
cwtl
jno
std
xchg
scas
fcmovbe
xchg
into
xor
mov
adc
cmp
mov
aaa
dec
loope
and
mov
inc
sub
stc
push
std
ja
faddl
into
sub
mov
adc
sbb
push
into
stos
adc
scas
xchg
in
fwait
subb
btr
jl
cmp
or
in
inc
in
in
jo
push
xor
out
loop
and
dec
inc
fistpll
jecxz
leave
mov
push
cli
jno
out
push
push
pusha
push
jbe
iret
push
and
mov
mov
add
mov
cld
mov
mov
pop
faddp
sbb
rorb
andl
cmp
mov
xor
pusha
shl
pushf
cmpsb
dec
orb
cmpsl
fs
cmp
cmp
js
cli
sbb
inc
hlt
movsl
clc
sub
gs
push
xchg
cmp
popa
test
loope
sbb
sub
inc
mov
sbb
ss
jle
lahf
popf
insb
fdiv
sbb
jg
test
xor
sub
pop
dec
rclb
mov
in
decl
out
repz
push
fnstenv
inc
lods
jo
sbb
shl
mov
movsb
scas
xor
hlt
mov
int
and
jnp
jbe
push
ds
movsl
ja
loop
dec
aas
push
dec
shll
das
out
mov
arpl
or
push
push
jle
inc
stc
scas
outsb
test
frstor
dec
sub
jns
sub
pushf
sub
bnd
mov
stos
or
xchg
out
loopne
xchg
bound
xor
pop
inc
adc
xor
lea
into
and
sarl
mov
and
pop
fs
dec
cmpsb
dec
negl
aaa
push
pop
movsl
xchg
or
jbe
jns
fistl
popf
and
cwtl
cwtl
aaa
adc
into
xchg
sbb
int
add
fcos
decb
cmp
or
stos
xor
insl
ret
popf
sbb
dec
mov
pop
hlt
das
movsl
mov
or
lock
inc
lea
sub
mov
in
popa
cmc
test
and
orb
add
push
out
xor
loope
push
test
ja
out
arpl
jecxz
out
shlb
aaa
pop
push
dec
insb
pop
push
jecxz
add
fidivrl
cmp
lcall
lcall
cs
jnp
pop
jnp
insl
stos
push
jno
lret
xorl
xor
sbbl
movsb
mov
fcoml
lret
stos
xchg
hlt
lods
sub
xor
lea
sub
lcall
xchg
add
and
sub
imul
mov
lcall
movsl
or
mov
push
pop
gs
ret
imul
sbb
or
insb
mov
inc
lahf
push
cli
rorb
and
mov
jno
rol
and
loop
js
mov
xchg
lret
gs
and
pop
push
push
inc
cs
xchg
inc
cmc
pop
xchg
or
xchg
out
or
popf
and
mov
xor
dec
test
mov
xchg
jmp
pop
ret
adc
or
inc
mov
push
inc
fistpll
fmuls
mov
pop
rorb
cwtl
fisttpl
add
cmpsb
cli
sbb
fisubrl
fistps
roll
mov
cmc
ret
fdivl
xor
mov
leave
leave
and
into
test
jg
adc
pusha
dec
cmp
subb
fwait
sbb
push
hlt
es
insl
or
aaa
orb
aad
jb
pop
lret
gs
imull
mov
in
or
aad
nop
xor
les
lea
jge
xor
pop
jnp
pop
jo
test
push
adc
or
rcrl
ja
push
repnz
lds
push
pop
call
sbb
mov
rorb
cmpsb
pop
push
cmc
mov
sbb
xchg
jmp
push
movsb
cltd
push
pop
cwtl
push
adc
push
mov
xchg
clc
subl
in
addr16
jns
xchg
imul
or
cld
repz
stos
outsb
pop
add
iret
adc
and
scas
not
ret
stc
push
or
dec
insb
and
js
lock
xchg
int3
sbb
gs
roll
pop
fsubp
stos
adc
movsl
xchg
sub
dec
mov
iret
xor
out
dec
hlt
mov
mov
lret
scas
add
popf
repnz
inc
in
adc
loop
daa
jl
fisttps
test
scas
jl
push
dec
out
inc
push
jo
insl
loop
aas
loop
les
cs
pop
sbb
lds
daa
cmp
xchg
or
cwtl
and
rorb
iret
pop
int3
dec
loopne,pn
and
dec
add
pop
push
jmp
mov
jmp
mov
inc
in
testb
hlt
mov
sub
test
xchg
jp
into
pushf
mov
inc
popf
aam
les
cmpsb
outsb
movsb
arpl
test
daa
sbb
pushl
dec
inc
loope
push
loop
hlt
cltd
js
xchg
add
lcall
ret
pop
and
xor
mov
aad
aad
lcall
jge
add
icebp
xor
imul
cltd
movsb
cmp
xor
xor
dec
jo
dec
int3
sbb
add
jecxz
es
and
or
inc
dec
popa
das
sub
call
xor
sarb
sbb
test
push
cs
push
add
hlt
sub
pop
xor
cmp
ja
push
and
mov
fstpt
add
test
pop
mov
int
and
add
std
fisubrs
dec
push
inc
add
mov
mov
push
test
inc
or
dec
mov
dec
sub
leave
mov
mov
push
je
pop
fs
add
xchg
adc
cli
test
and
or
rcrb
andl
popf
lret
out
jne
xchg
lea
dec
call
push
aas
arpl
lods
insl
cmpsl
out
mov
jle
mov
lcall
stos
inc
cmp
test
call
dec
mov
loope
mov
jl
pop
xchg
call
ljmp
test
xor
idivl
push
cmp
dec
jle
rorl
test
lea
jnp
sbb
sbb
cltd
add
lcall
and
fcmovne
sbb
cmp
pop
pop
push
inc
dec
jbe
and
out
jbe
mov
adc
xor
push
mov
ror
cmp
xor
imul
scas
out
insb
sub
adc
jae
loopne
mov
push
sub
dec
cmc
lods
addr16
cmp
xor
roll
into
je
std
icebp
repnz
mov
idivb
movsb
jbe
out
lock
or
mov
in
adc
sbb
cmp
dec
insl
add
in
rol
pop
fwait
jl
scas
insl
dec
push
lods
popf
add
es
aaa
pushf
cmp
shll
sahf
sbb
insl
mov
test
rclb
pushf
adc
sub
xchg
sbbl
leave
xor
add
das
je
int3
fst
pop
jmp
jmp
je
mull
jmp
addr16
dec
jge
or
lds
cmp
in
sub
dec
shlb
imul
pop
pop
cmc
daa
cltd
sbb
mov
fwait
stc
and
imul
testl
das
dec
lcall
push
aam
lret
lret
das
test
loop
out
in
xor
bound
adc
ror
stc
aam
repnz
loop
aad
xchg
mov
negl
fisttpl
jle
in
inc
test
and
mov
jb
daa
mov
cmp
xor
mov
addr16
insb
ret
testl
xchg
imul
rcll
lds
iret
xchg
cmp
lods
and
imul
mov
xchg
mov
mov
cwtl
dec
mov
pop
mul
in
add
loop
aam
pop
lcall
xorl
arpl
stos
imul
sub
mov
inc
mov
xchg
insb
adc
dec
cwtl
adc
lcall
fwait
xchg
pushf
sub
mov
xchg
test
insl
pop
push
pop
push
pop
and
movsl
gs
jle
lret
daa
and
sbb
pop
es
cmp
pop
iret
jg
cmp
xor
xchg
out
adc
push
insb
test
or
inc
mov
dec
ror
xor
inc
sti
andb
mov
inc
jo
cmp
mov
sbb
movntps
fimull
push
adcl
pop
es
jg
mov
ljmp
xchg
leave
cmp
xchg
mov
mov
add
mov
inc
arpl
sbbb
xchg
xchg
push
jl
push
clc
jle
push
push
add
dec
xor
repnz
scas
mov
lret
shll
mov
add
or
cmp
push
and
add
je
leave
fsubrp
xchg
sub
iret
mov
imul
mov
rolb
pushf
mov
leave
js
jg
mov
or
sub
push
inc
xchg
or
sub
mov
xchg
mov
xchg
pop
insl
or
stos
pop
mov
ret
add
push
negl
jo
adc
ret
mov
and
test
pop
push
mov
inc
cmpsb
xor
int3
jmp
dec
jmp
xor
adc
lods
push
cs
icebp
popa
mov
xchg
out
add
nop
jmp
xchg
scas
jno
push
leave
pop
iret
ds
xchg
ljmp
daa
mov
add
jmp
sbb
sub
int3
jp
inc
adc
nop
stos
loop
je
js
mov
fisubrl
push
push
mov
push
movsl
push
pop
xor
lds
notb
cmpsb
rclb
adc
dec
and
mov
notl
add
mov
push
scas
icebp
mov
arpl
cmp
jno
aad
sub
loopne
mov
or
dec
lods
cmpsb
jecxz
push
push
xchg
dec
adc
mov
jmp
mov
js
xor
repnz
xlat
mov
imul
add
test
nop
cld
test
pushf
fs
sbb
mov
mov
fnstsw
sub
mov
ret
aam
repnz
inc
adcb
outsl
movsbl
or
xchg
push
xchg
jg
or
sbb
repnz
xchg
cltd
fidivrs
rcr
sbb
sbb
jo
push
pop
mov
push
mov
push
add
stos
push
mov
mov
hlt
ja
insb
cmpsl
jno
mov
add
das
push
call
add
add
lock
int
jb
fstps
pop
test
notb
stos
xor
add
sub
sahf
fsubrs
sbb
dec
pop
push
arpl
adc
aad
mov
int3
pop
aaa
jp
sbb
addb
add
pushl
sti
cs
mov
aaa
lock
scas
xlat
mov
mov
pop
cmpl
sarl
pop
fmuls
xor
jbe
imul
jecxz
call
adc
addr16
push
mov
push
imul
fnsave
movsl
sub
rorl
and
adc
mov
add
out
cmp
pop
push
lahf
je
cld
cmp
mov
jo
mov
insb
xchg
inc
sub
pop
bound
pop
lret
jno
jg
add
mov
dec
inc
push
fwait
mov
mov
fcompl
push
outsb
movsb
pop
or
in
insb
xchg
loope
sbb
cmp
sti
jnp
add
rcrb
test
outsb
inc
repz
sti
or
inc
adc
sbb
lret
jle
jge
imull
dec
mov
push
mov
cwtl
inc
inc
dec
mov
xlat
js,pn
cmp
push
cmc
rcrb
out
mov
dec
xlat
les
xor
rclb
mov
mov
pop
push
cmp
xchg
sbb
cli
test
leave
std
pop
adc
and
xchg
jmp
mov
inc
dec
jecxz
ret
rol
lahf
mull
mov
sbb
mov
xchg
mov
cmp
fbld
push
push
pop
xor
je
sub
fimull
xchg
movsb
sub
adcb
push
lds
das
cmpsl
dec
mov
mov
sbb
hlt
mov
fcmovne
nop
mov
scas
lcall
jge
insb
jecxz
jnp
mov
xor
aam
shrb
arpl
inc
xchg
mov
lods
jo
das
lret
cmp
out
sahf
out
inc
adc
ficoml
or
push
adc
insb
dec
ds
icebp
arpl
jbe
lea
sarl
shll
adc
fidivs
and
bound
mov
je
jg
xchg
int3
jecxz
test
leave
xchg
imul
xchg
repz
lea
jo
xlat
aam
xchg
push
mov
jns
ja
mov
cmp
fisttpl
test
mov
insl
xor
sub
stc
data16
scas
mov
jge
inc
in
mov
mov
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
divb
add
cli
mov
cmc
or
pop
mov
sarl
pop
in
testb
mov
les
jo
add
jg
mov
add
jb
mov
pop
mov
and
cmp
inc
mov
push
and
repnz
icebp
arpl
xor
push
xlat
mov
mov
pop
add
xchg
mov
bound
add
shr
iret
ret
jecxz
mov
cmp
jne
xchg
out
or
adc
aas
dec
fisubs
inc
cld
lahf
nop
js
orl
mov
std
add
cmp
cli
addb
dec
jle
movsb
sbb
jae
jbe
mov
mov
imul
ja
jns
jmp
sub
loope
xchg
fistpll
adc
andb
add
cmp
movsl
pop
lcall
sub
jbe
mov
mov
adcb
add
addr16
aam
add
sub
xor
ljmp
lret
loope
xchg
clc
inc
imul
sbbl
mov
cmc
lret
daa
fisubs
mov
sahf
rcrb
scas
mov
into
push
leave
dec
ja
mov
mov
in
lea
les
push
xchg
rolb
aam
sahf
adc
push
mov
mov
add
jns
push
pop
xor
pusha
addr16
jmp
push
sub
jne
rorb
negl
push
push
pushf
scas
and
mov
subl
int
repz
adc
dec
out
mov
bound
mov
inc
sbb
dec
mov
xchg
inc
ds
adc
xchg
ret
stos
inc
out
imul
cmpsl
mov
pop
lods
negb
mov
pop
adc
cmpsl
or
loopne
xlat
das
mov
xor
repz
call
dec
out
in
dec
dec
xchg
push
jns
and
mov
push
adc
xchg
mov
pop
xchg
push
pop
push
or
pop
adc
xchg
fidivl
dec
stos
popa
or
mov
shr
in
outsl
mov
les
or
pop
popa
xchg
fs
lea
sub
in
sbb
and
sub
jecxz
xor
inc
imul
fimuls
xchg
push
mov
cs
pushl
hlt
cmp
xchg
add
loop
push
fbld
test
inc
aas
mov
cwtl
xchg
cmp
jl
sub
and
flds
pop
xor
jbe
andb
xchg
cltd
push
sbb
add
cmp
cmp
test
mov
lea
stc
mov
xor
das
fildl
add
std
jle
mov
lock
jb,pn
cmp
cwtl
mov
inc
xor
cmp
push
mov
push
test
movsl
xchg
xchg
and
rol
push
lret
out
or
call
ds
imulb
adc
negl
mov
pop
push
testl
mov
pushf
xor
imul
lahf
insl
rcll
xor
cmpsl
dec
and
cmc
outsl
push
pop
loope
cmp
or
inc
cmp
mov
push
inc
xchg
xor
cwtl
inc
imul
mov
and
and
fmull
jns
cmpl
jae
lock
add
fimull
inc
pop
mov
jno
test
pusha
stos
xchg
inc
mov
fstps
daa
out
jne
loopne
inc
push
fisubrs
jno
jge
sbb
xchg
jge
and
fisubrl
jmp
mov
sbb
shrl
sbb
repnz
ficompl
or
adc
sarl
jnp
sbb
push
mov
mov
jecxz
xchg
xchg
aam
lods
jle
outsb
int
lods
arpl
sbb
cmp
cmc
xchg
jno
inc
push
fxch
fimull
movsl
sysexit
ja
lahf
push
int
mov
ficomps
out
pop
enter
pop
cld
mov
or
es
sbb
push
pop
xor
add
call
fcompl
xchg
ud2
jns
inc
push
pop
jo
push
jge
mov
pop
cmp
out
adc
inc
push
rorb
mov
cmp
test
add
jno
jge
mov
jle
dec
push
adc
lods
out
sub
inc
cmp
aad
loopne
or
insl
jle
clc
lcall
cs
jp
xor
mov
movb
sub
add
xchg
push
sub
int3
scas
xchg
fucomip
dec
xchg
rcll
add
adc
xchg
and
mov
add
sub
je
ljmp
mov
mov
inc
pop
mov
adc
cmp
arpl
xlat
dec
pushf
ljmp
mov
dec
push
in
sub
cmpsl
xor
mov
push
fcoml
out
lods
movsb
xchg
dec
movsb
iret
xor
sub
andb
popf
jge
xlat
xor
push
inc
je
push
pop
in
mov
jne
mov
cmc
cmp
dec
mov
xor
mov
test
or
insb
cmc
ja
or
sub
and
loope
mov
in
fiaddl
xchg
jbe
push
mov
in
test
call
jno
mov
test
dec
mov
mov
pop
je
stc
dec
mov
adc
test
pop
pop
mov
adc
adc
or
push
shll
mov
xchg
lock
mov
jnp
fidivrl
lods
clc
cwtl
mov
mov
dec
jle
hlt
xchg
cmc
loope
jge
cmp
mov
mov
aad
xlat
add
lods
mov
dec
adc
ret
pop
pop
ss
inc
cmpsb
test
aas
mov
inc
inc
sbb
movsb
mov
push
pop
das
pop
push
sbb
nop
sbb
jno
push
adc
cld
mov
rcr
mov
sbb
push
mov
out
adc
adc
jmp
xor
lea
mov
aam
lock
jp
lret
inc
sti
xor
jbe
cmpsb
outsl
mov
loop
push
cmpsb
xchg
sahf
fsubrs
xlat
test
xor
jbe
cltd
subl
jae
adc
ret
adc
pushf
sbb
cmp
ret
js
clc
and
fsubrl
sbb
movsb
pop
mov
jmp
out
les
jo
cmp
sub
imul
mov
cmpsl
jo
xlat
mov
pop
in
enter
add
fadd
das
iret
pop
mov
fiadds
aad
enter
inc
aas
mov
hlt
test
les
repnz
xor
add
xchg
das
push
and
es
dec
cwtl
pop
pop
xchg
addl
add
or
fisubrs
es
aad
sub
daa
add
sarl
mov
jbe
leave
mov
cs
popa
loope
scas
mov
jmp
ljmp
fdivrl
pop
and
dec
mov
enter
cli
inc
movsb
sbb
movsl
mov
into
sahf
imul
loop
adc
mov
xchg
nop
insl
sarl
inc
lods
inc
dec
lret
mov
aam
test
test
xchg
push
jno
dec
mov
std
cwtl
repnz
sbb
push
loope
mov
dec
cmpl
je
mov
loopne
dec
sbb
xlat
mov
in
shlb
addr16
into
orb
imul
decb
repnz
mov
mov
out
push
dec
sbb
outsb
fiaddl
repz
aas
lea
dec
lods
inc
inc
jl
loopne
inc
in
dec
cmp
cmpsl
mov
xor
jno
in
push
adc
xchg
outsb
xlat
jge
fldt
push
pop
push
sahf
out
inc
jae
jnp
roll
xor
pop
out
sub
sub
aaa
xchg
sub
dec
call
pop
xchg
and
sbb
xchg
add
push
adc
sti
xlat
es
fwait
sbb
push
cmpsb
mov
xor
enter
mov
sub
mov
cmp
repz
mov
repnz
iret
ret
mov
call
ret
pop
and
ss
pop
mov
lahf
cmp
fs
jno
orl
lret
adc
std
mov
jge
mov
fwait
lods
pop
xchg
adc
sti
jbe
push
push
dec
fsubs
mov
addr16
and
push
push
mov
mov
or
sub
mov
mov
push
add
imul
sub
inc
mov
xchg
or
dec
sbb
jecxz
xchg
xor
in
rclb
popa
push
mov
cmp
adc
aas
mov
outsb
dec
stos
ja
push
inc
pop
es
push
testb
notl
outsb
xor
jno
mov
mov
out
fidivl
lret
imul
fwait
mov
adc
inc
xor
mov
cmpsl
inc
or
insb
insl
out
not
cltd
sarb
or
jp
je
out
test
sub
les
daa
inc
pop
cld
lods
sub
add
add
xchg
add
inc
xchg
movsl
popa
add
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
mov
