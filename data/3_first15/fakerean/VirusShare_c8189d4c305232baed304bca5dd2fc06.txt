mov
rcl
neg
mov
mov
rcl
shrl
mov
xor
xor
cmp
je
jmp
lea
mov
push
push
call
cmp
je
jne
shl
mov
xchg
add
shl
mov
xor
popa
leave
call
jmp
mov
and
mov
mov
xor
mov
xor
rcr
jmp
xor
mov
shr
shr
lea
xor
xor
neg
mov
xor
xchg
xor
xor
lea
mov
call
cmp
jae
call
adc
xor
add
xor
shl
rol
mov
xor
lea
lea
mov
add
mov
xor
cmp
jne
lea
mov
lea
add
lea
xor
xor
mov
mov
xor
lea
lea
decl
jne
cmp
je
jmp
rcl
mov
mov
rcl
xchg
xchg
cmp
jae
lea
mov
ret
mov
mov
mov
cmp
jne
movl
xor
rcr
rol
adc
neg
shr
xchg
add
neg
lea
jmp
xor
adc
not
call
xor
jmp
neg
rcr
not
mov
rcl
neg
xchg
lea
lea
neg
mov
neg
lea
mov
lea
cmp
jne
lea
lea
push
push
pushl
pushl
call
and
neg
ror
xor
xor
lea
mov
xor
cmp
je
jne
xor
not
shl
xor
mov
cmp
jae
push
mov
sub
pusha
mov
xor
rol
and
push
and
mov
xor
add
mov
mov
cmp
jae
xor
neg
mov
rol
rcr
xor
neg
xor
rol
movl
xchg
xor
ror
cmp
jne
xor
push
lea
rcl
xor
xor
rol
mov
adc
add
not
mov
not
popl
ror
cmp
jne
xor
mov
xor
xor
not
cmp
je
mov
not
cmp
jae
and
mov
data16
mov
ficomps
and
lods
mov
mov
pop
in
enter
repz
add
sahf
xchg
inc
stc
push
adc
rclb
aas
repz
imul
inc
mov
inc
mov
enter
inc
cmp
fnstenv
push
pop
out
outsb
jmp
sti
aad
xorb
pop
jmp
sub
xor
popf
repz
ljmp
push
cmp
mov
xlat
int
pop
xlat
mov
push
mov
sub
xor
jmp
inc
fists
loopne
jmp
icebp
or
and
repz
and
mov
push
xchg
cmp
fwait
nop
jbe
pop
xor
push
pop
sub
sbb
jae
mov
orl
sub
hlt
jmp
call
cmp
scas
test
aas
and
pop
mov
test
pusha
adc
add
insb
mov
fldcw
pop
pop
je
aad
test
pop
sbb
cmp
mov
lahf
mov
sbb
sti
pop
jmp
xlat
jp
lods
mov
gs
int3
sti
pop
push
add
xchg
pop
fisttpl
pop
add
nop
loop
mov
pop
pop
xchg
stos
mov
rclb
jo
jecxz
mov
pusha
shr
in
js
hlt
int3
sti
aad
jle
aad
add
hlt
int3
sti
rsqrtps
pop
pop
sahf
outsb
jo
mov
mov
and
popl
hlt
int3
sti
aad
mov
push
jmp
pop
aad
ret
in
jmp
xchg
add
add
scas
jo
fstp
xchg
mov
aas
and
jp
add
or
adc
pop
sbb
fcomps
pop
or
mov
test
push
aas
ljmp
jmp
ss
fs
enter
adc
xchg
sub
dec
mov
fs
sbb
popf
jmp
sbb
xor
dec
jle
mov
out
ds
mov
fabs
jns
mov
out
mov
jle
rorb
bound
or
mov
add
insb
bound
pop
mov
subl
sbb
dec
movb
nopl
lods
in
pop
push
lldt
pop
shl
rolb
xlat
cmp
movsl
loope
popa
std
push
out
lds
out
int
loope
dec
shrl
mov
rorl
inc
xchg
xchg
popf
inc
outsl
mov
xchg
xchg
xchg
popf
test
fs
push
mov
arpl
mov
das
cwtl
jmp
stc
dec
jo
je
push
popf
enter
inc
xchg
xchg
stos
cmp
in
dec
push
add
pop
pusha
jmp
cmp
push
insb
adc
movsl
mov
push
into
jbe
mov
mov
sub
jb
and
lods
adc
push
enter
das
mov
pop
jl
ljmp
bound
shlb
xorl
adc
push
shrb
mov
nop
addr16
insb
out
lcall
out
push
imul
dec
inc
pushf
xchg
sbb
in
mov
jl
jo
test
sbbb
lea
mov
xor
dec
jle
mov
out
ds
cwtl
add
das
fs
mov
jmp
das
out
outsl
sub
in
mov
insb
bound
and
mov
push
popa
or
mov
sub
lea
xor
push
sub
xchg
xchg
popf
xor
nop
out
push
cmp
mov
daa
xchg
popa
bound
xchg
sbb
out
repz
sub
out
xchg
mov
or
mov
xchg
xchg
pop
ds
and
push
popf
push
add
mov
push
rcrb
inc
jecxz
xchg
mov
arpl
mov
xchg
cmp
inc
push
out
or
outsb
bound
xchg
xchg
popf
xchg
add
push
out
imul
fs
mov
sub
xor
jp
lock
outsl
sub
sub
push
inc
add
sub
out
dec
loope
popa
repz
out
jmp
bound
andl
adc
cmp
jmp
mov
and
sub
mov
lods
mov
loope
jb
adc
jmp
dec
imul
cmp
lods
inc
xorb
xchg
aad
jb
fiadds
out
cmp
bound
out
cmp
aaa
fs
leave
cmp
pop
mov
add
fsubr
fisttpll
mov
sbb
add
fistpll
iret
inc
xchg
xchg
jmp
ss
addr16
enter
mov
imul
jae
mov
sub
xor
add
pop
inc
xchg
xchg
cmp
xorl
jmp
addl
insl
pop
or
iret
and
fstps
push
bound
bound
sbb
push
outsl
pop
mov
and
andl
dec
iret
adc
add
push
push
mov
xchg
insl
mov
mov
loope
push
bound
push
xchg
iret
mov
insb
bound
out
jge
insb
bound
outsb
inc
insb
ds
push
push
leave
adc
ss
dec
mov
xchg
int
push
or
xchg
push
bound
cmp
movsl
mov
loope
jmp
mov
sbb
imul
sbb
das
fs
push
arpl
fs
insl
or
bound
loope
outsb
and
bound
movsl
push
imul
push
and
enter
xchg
imul
jmp
outsb
or
mov
or
jl
push
sbb
cmp
push
outsb
add
mov
mov
std
mov
mov
insl
jle
sarb
jne
imul
fcmovu
repnz
ds
into
insl
dec
adc
add
stos
inc
enter
fisttps
stos
popf
mov
cmc
mov
push
ljmp
arpl
inc
xor
pop
mov
gs
insl
pusha
movsb
outsl
pop
sub
movsb
mov
pop
jmp
je
outsb
mov
bound
mov
mov
in
push
pop
lret
and
pop
aas
aad
scas
int
je
adc
jns
stc
das
adc
mov
push
xchg
outsb
dec
and
insb
bound
stc
sub
ss
enter
sbb
fwait
and
mov
pop
cmp
imul
sbb
fcompl
inc
ja
sti
nop
adc
inc
sar
sbb
push
sbb
jle
jle
inc
ja
cmp
sti
sbb
iret
cmp
dec
xchg
or
xor
bound
push
rorb
fs
movsb
clc
jl
daa
out
rorl
pop
or
out
notb
cmp
lods
dec
xor
jns
push
popa
insl
leave
test
pusha
push
leave
sbb
jnp
mov
cs
jl
aad
insl
scas
cld
dec
pop
movsb
adc
arpl
sub
sti
fdivl
pop
dec
ljmp
push
or
or
movsl
roll
outsl
cmp
dec
loopne
adc
fadds
jle
cwtl
dec
faddl
lods
loop
adc
mov
clc
pop
sub
loop
out
scas
movsb
loop
sbb
test
jo
xor
or
loope
xor
jmp
in
cs
and
es
mov
mov
dec
mov
andl
xor
jmp
push
insl
push
mov
arpl
loope
pop
jmp
out
inc
push
icebp
pop
pop
les
sti
dec
stos
popf
mov
movsl
jb
xor
aam
mov
jmp
push
or
insb
mov
pop
orb
loope
out
insb
sbb
stos
xor
xor
movsl
outsl
std
bound
imul
mov
jb
fs
jmp
lahf
movsl
pop
jp
je
sbb
movsl
jmp
push
push
nop
mov
test
sub
xchg
cs
loope
je
cmp
outsb
pusha
sbb
xor
jg
outsl
sarb
fs
insb
test
std
pop
in
leave
imul
loope
pushf
test
cmp
sarl
adc
xor
test
pop
test
shrl
and
mov
and
jg
popa
mov
dec
push
enter
cmpsl
gs
bound
pop
and
cmp
out
repz
add
loopne
in
int
aaa
lcall
cmc
insl
xchg
outsl
sub
mov
dec
pop
cmpsb
mov
jns
push
pop
outsl
xchg
into
out
sbb
sbb
sub
push
jns
push
ss
jb
sub
xchg
lods
push
mov
jecxz
ficoms
ret
xchg
lcall
sbb
mov
in
cmp
mov
popa
mov
fidivl
inc
mov
jle
xor
dec
sub
arpl
mov
ds
movsb
xchg
mov
mov
cmp
xchg
sub
cmp
inc
mov
aam
lahf
and
imul
dec
xchg
imul
inc
rorl
call
subb
push
cmp
cmp
mov
mov
out
pop
jg
sbb
xchg
xor
ss
xchg
cs
pop
outsl
insl
fcmovnb
cmp
mov
sahf
lea
jp
jg
and
pop
repnz
sti
and
push
bound
jmp
sti
addr16
ret
or
out
xor
test
movsl
mov
ds
sbb
xor
add
push
sbb
jge
loop
sub
pop
push
jg
rcll
sub
jbe
inc
mov
jne
in
adc
pushf
mov
incb
mov
mov
xchg
scas
sub
adc
mov
pop
ret
dec
popa
inc
sti
arpl
in
mov
mov
bound
je
cmp
cmp
fwait
stos
int
sti
cmpl
xchg
ljmp
inc
imul
sarb
mov
call
lds
xor
push
xchg
gs
loop
cmp
pop
push
mov
mov
cmp
mov
push
pop
and
fcmovne
out
sbb
xor
das
int
inc
call
push
lds
lea
dec
or
mov
push
or
ret
inc
in
xor
lock
sbb
loope
addr16
pop
push
cs
push
punpcklbw
mov
jp
fwait
sahf
sahf
inc
dec
nop
jno
xlat
add
out
pop
cltd
lock
sahf
mov
fnstsw
and
pop
dec
lods
cmpl
adc
test
or
mov
lahf
addr16
cld
and
lret
stos
inc
jge
adc
cmp
mov
icebp
in
fucomp
push
mov
shr
push
in
out
std
push
mov
fnsave
sbb
push
dec
xchg
repz
shrb
and
add
pop
insl
pushf
jl
insl
cmp
popf
mov
jl
inc
fadds
jle
dec
sbb
and
btc
int3
dec
add
test
les
mov
and
loopne
imul
jl,pn
stc
nop
imul
clc
stos
sti
cmp
xchg
into
cmpsl
xor
sub
mov
mov
popa
imul
aaa
cltd
cmp
mov
sti
fs
mov
bound
rcrl
mov
out
jne
stos
jle
faddl
test
in
cs
jae
xor
pop
stc
sti
xchg
ljmp
jmp
xor
xchg
xchg
mov
dec
sbb
insl
or
cmpsb
out
dec
test
mov
sub
add
ja
das
out
data16
mov
lcall
iret
add
insb
call
fdivr
jg
insb
mov
sub
subb
enter
testl
jp
lods
imul
sbb
outsl
jl
sarb
in
lds
jle
xchg
jl
jle
xchg
jno
cs
mov
mov
js
sub
addr16
std
xor
mov
pop
jo
lods
dec
and
xorl
shll
fisttps
lcall
jns
add
jge
push
test
pusha
sbb
popf
ret
pop
test
pop
add
push
pushf
jae
mov
xchg
jg
and
sub
jg
push
scas
stos
and
cmp
aad
mov
push
mov
je
outsl
loope
push
sub
jo
cwtl
mov
jnp
insb
je
dec
sahf
cltd
fnsave
les
jmp
es
fwait
and
popa
push
push
insl
stos
pusha
jle
inc
jb
pop
push
fucomi
popa
test
mov
push
cwtl
lods
push
arpl
imul
push
shr
mov
pushaw
and
outsb
dec
xor
add
jmp
jmp
rorl
xchg
jg
xchg
mov
imul
mov
bound
ja
cmpsl
dec
pop
in
call
inc
mov
outsl
mov
lods
bound
mov
push
icebp
inc
cs
mov
inc
inc
int3
jne
jge
mov
xor
dec
imul
sub
fs
jnp
sbb
mov
loopne
dec
mov
cmp
popa
int
int3
add
push
xchg
xchg
mov
enter
outsb
push
xor
fadds
push
push
out
inc
and
movsb
add
cld
out
mov
push
cmp
push
loope
mov
popf
sub
adc
pop
js
arpl
addr16
add
xchg
mov
jnp
pushf
adc
fiadds
push
test
mov
sub
or
adc
mov
data16
and
xchg
lahf
stc
fwait
adcb
outsb
sub
sbb
dec
insb
mov
mov
stos
loope
loopne
jnp
jmp
sti
fistpl
jmp
mov
xchg
push
fnstenv
or
sahf
es
addr16
loope
dec
cmp
outsb
ja
xchg
jg
pop
xor
scas
xchg
adc
cli
xor
or
mov
int
mov
push
jbe
inc
jg
or
cmp
adc
mov
mulb
inc
cmp
test
jp
inc
sub
pop
jp
inc
pop
stos
js
gs
sti
cli
in
orb
out
orl
mov
mov
cltd
inc
lock
mov
jo,pt
push
mov
mov
push
dec
xor
popfw
imul
and
jge
loopne
jnp
inc
pop
rorb
adc
cli
pop
and
adc
faddl
mov
xor
imul
and
ret
xor
mov
dec
scas
imul
scas
xor
push
push
fwait
in
add
enter
push
adc
fnsave
aas
dec
mov
pop
fs
lret
orb
add
out
imul
iret
popa
jecxz
gs
icebp
inc
jge
loop
sbb
inc
mov
pop
jb
mov
jne
lahf
lret
xchg
mov
iret
jecxz
popf
or
jno
clc
jns
push
xor
and
dec
mov
out
pop
jp
jecxz
scas
pop
push
jmp
and
cmpsb
mov
scas
popf
dec
lahf
movsl
mov
ja
andl
lock
lods
fsubrl
push
daa
jge
jmp
clc
test
cltd
out
xchg
inc
cmp
lock
iret
imul
mov
xchg
aaa
jo
inc
dec
cmp
xchg
enter
mov
mov
inc
sbb
lret
imul
xchg
and
sti
pop
push
and
ds
or
push
in
push
in
sub
cs
xor
leave
and
mov
in
sbb
inc
cld
outsl
sub
jmp
jmp
mov
dec
es
popf
jecxz,pn
mov
and
insb
daa
sub
addr16
loopne
add
cwtl
sub
sbb
data16
ljmp
cmc
ds
outsl
mov
ja
mov
aas
movsb
add
into
pop
shlb
mov
xchg
dec
inc
jno
lcall
push
aaa
movsl
shr
cli
cmp
stos
pop
and
data16
jp
inc
out
iret
ljmp
jae
adc
cmp
in
jl
test
das
imul
popa
shlb
add
dec
mov
imul
sbb
int3
cmp
fwait
jmp
fldenv
aam
and
jg
sub
hlt
in
xchg
js
push
xchg
dec
js
stc
mov
pop
push
push
es
dec
sbb
inc
cmp
inc
in
mov
mov
sti
sbb
movsb
jnp
icebp
cmp
jb
arpl
inc
xchg
nop
push
push
mov
inc
out
enter
mov
adc
mov
dec
stc
jno
sub
mov
mov
std
inc
std
nop
int
mov
out
push
xor
cmp
xor
insl
xor
pop
icebp
lods
addl
push
out
sbb
mov
jg
outsl
movsl
std
mov
fsubr
cltd
xor
or
jp,pt
dec
out
jae
pop
imul
ror
xor
xor
push
dec
je
jne
jns
popf
test
jae
xchg
cwtl
imul
and
clc
lret
mov
mov
aas
mov
in
cmpl
ss
test
inc
push
rcrl
je
out
ja
push
out
inc
sub
xor
xchg
or
jg
push
movsb
mov
addr16
mov
in
imul
inc
lods
inc
dec
imul
sbb
repnz
mov
lahf
ds
sub
sti
fs
test
int3
test
addl
cmp
inc
sub
xchg
arpl
pop
stc
jmp
jns
fwait
jecxz
dec
inc
outsb
iret
mov
test
inc
repz
cld
sbb
mov
mov
ds
cmp
outsb
jg
push
cltd
dec
sti
icebp
bound
repz
inc
mov
je
scas
scas
mov
cmp
xor
sbbl
icebp
test
inc
or
jo
pop
mov
jnp
and
jne
mov
cltd
xchg
inc
xor
repz
dec
jmp
fs
out
ret
lods
sbb
sbb
sarb
addb
lock
mov
push
sub
shr
cmp
mov
out
jle
leave
pop
in
cli
movsl
cmp
push
jne
sub
arpl
pop
movsb
pop
insl
mov
mov
pop
xor
rsqrtps
cmpl
fdivrs
mov
pop
or
mov
rolb
jg
ljmp
pop
inc
adc
push
xchg
pop
inc
in
jo
lea
fcoml
bound
sbb
int3
hlt
gs
inc
mov
lods
xor
jle
mov
dec
inc
ret
jp
outsl
xchg
out
xchg
jbe
xor
lods
repnz
cltd
movsl
sbb
scas
push
and
ss
daa
dec
std
bound
jmp
test
add
xor
cmp
popf
dec
xor
enter
jge
mov
out
add
mov
inc
and
mov
movsb
sbb
pusha
push
xchg
dec
bound
jno
mov
cli
and
jle
mov
xor
xorl
xlat
mov
lods
jo
loop
outsl
add
sahf
dec
sub
lcall
fwait
shlb
xchg
mov
sbb
push
fwait
adc
mov
iret
in
mov
fsub
sub
mov
sub
js
int
fs
es
int3
mov
dec
mov
push
scas
loopne
and
outsb
push
inc
lret
test
xchg
dec
icebp
adc
mov
orl
jl
dec
xor
add
jbe
sub
orl
jp
push
popf
or
aam
sub
imul
push
jbe
jbe
mov
mov
dec
out
aam
jb
dec
fsubs
test
in
movsl
pop
das
and
sbb
lea
cmp
mov
inc
pop
adc
jecxz
xchg
mov
and
pop
jb
hlt
outsl
adc
xor
jmp
in
mov
jp
sub
dec
or
dec
outsb
outsb
lock
out
jg
leave
bound
mov
sbb
or
fcompl
push
sbb
cld
imul
shl
out
pop
in
inc
movsl
fs
mov
xchg
daa
sub
sub
push
in
outsb
push
ficompl
gs
xchg
adc
sub
loopne
and
out
sub
jb
gs
das
jno
inc
sub
mov
aas
cltd
cmpsl
les
jg
bsr
fwait
rep
incb
pusha
imul
inc
xor
lcall
push
insb
or
pop
cwtl
fs
cmp
add
fdivl
sbb
nop
cli
and
inc
ja
sub
andl
inc
aas
outsb
mov
adc
es
int3
test
cli
inc
fcmovne
cmpsb
fs
pop
pop
lods
add
adc
pop
mov
mov
jl
and
dec
or
dec
pop
mov
and
popf
insb
inc
mov
imul
xorb
push
je
push
or
inc
lret
jbe
dec
je
xor
outsb
mov
xchg
test
dec
mov
jns
sbb
lret
aaa
outsl
mov
mov
sti
sbb
cltd
mov
outsl
repz
repz
jecxz
cli
cmp
adc
push
ja
jle
lea
movsb
pop
test
pop
inc
inc
jecxz
popa
pop
pusha
mov
push
cmc
in
mov
sub
xor
fucomp
fsub
cli
jns
or
sbb
sub
das
mov
xor
insb
sub
push
add
or
jae
pop
mov
pop
sbb
nop
mov
push
inc
add
jbe
ret
clc
cltd
icebp
dec
inc
or
je
cmpsb
inc
cmpb
mov
cltd
sbbb
mov
rcrl
jl
mov
mov
repnz
or
daa
or
aam
aaa
mov
test
sar
mov
mov
pusha
cmpsl
mov
out
jo
arpl
mov
mov
pop
cmp
inc
lock
fs
pop
sub
data16
mov
xor
dec
je
je
sub
cmp
add
mov
push
testl
cmp
insl
hlt
fwait
out
cmpl
mov
push
data16
mov
mov
mov
mov
xchg
daa
cmc
xchg
cmp
inc
into
jno
dec
lcall
lcall
jne
dec
scas
dec
ja
test
test
jle
pop
cs
lods
popa
dec
push
ja,pt
mov
aad
scas
jmp
xor
mov
sbb
popf
mov
gs
mov
mov
mov
leave
adc
jmp
xor
jle
hlt
push
add
mov
jno
outsb
outsb
aaa
je
loop
dec
jo
inc
fistps
nop
rorl
pop
mov
dec
cmp
sbb
aas
pop
dec
enter
cltd
and
and
jmp
inc
push
outsb
rep
nop
xchg
fcoml
arpl
inc
xchg
jne
out
dec
mov
stos
pop
pop
pop
xchg
mov
pop
jmp
insb
fwait
mov
hlt
xor
dec
sub
movsl
incb
dec
insl
sti
inc
sbb
mov
sbb
repnz
jnp
addr16
mov
jb
shlb
mov
push
dec
jecxz
dec
enter
lods
cmp
sub
inc
pop
lock
or
setns
pop
push
sbb
jge
out
data16
js
faddl
lds
jge
mov
adc
cwtl
iret
sbb
jo
inc
or
lds
pop
push
jmp
lods
or
dec
insl
insb
xchg
mov
lahf
bnd
mov
cmp
fs
mov
iret
repz
sub
jg,pn
or
inc
adcb
fldcw
adc
pop
mov
sub
sub
mov
test
jmp
push
nop
or
dec
lret
xchg
arpl
loop
and
data16
out
mov
and
cmpl
mov
xchg
sub
lods
ds
repz
pop
mov
xchg
cmpsb
cltd
lret
in
mov
sub
shll
inc
daa
jecxz
mov
pop
stc
imul
jmp
mov
lea
loop
subb
adc
push
enterw
pop
mov
mov
dec
dec
and
xchg
mov
and
xchg
inc
bound
jns
dec
jle
ss
out
mov
das
push
addr16
inc
sbb
js
push
lods
push
xor
mov
lret
xor
call
add
pusha
jle
dec
scas
insl
cmp
jo
ljmp
add
jne
xchg
add
ja
dec
sbb
das
fcomps
subb
mov
and
dec
dec
mov
inc
insb
ret
xor
add
test
rorl
add
sbb
test
mov
push
insl
add
scas
xchg
adc
insb
loop
jge
aad
mov
rorb
jl
cmp
insb
ljmp
sub
subl
ret
jle
add
xor
xor
leave
jnp
sarl
pop
mov
dec
xchg
lcall
imul
ds
arpl
pop
mov
mov
imul
or
hlt
lahf
jmp
pushf
shll
ljmp
mov
mov
jae
shrl
fisttps
push
imul
lret
jnp
mov
fdivrl
push
inc
test
fwait
adc
cwtl
push
mov
cld
ds
sbb
cltd
push
adc
xor
out
dec
xlat
ss
fwait
mov
scas
dec
inc
stos
out
lods
sub
lcall
enter
cmpl
lock
call
mov
and
divl
push
pop
pop
push
mov
sti
lods
insb
repz
ret
mov
xchg
stos
fs
pop
cmp
or
je
and
xchg
rclb
aas
xchg
push
test
lock
insb
xchg
sbb
lods
ss
pop
sbb
xchg
or
cwtl
push
jmp
mov
lcall
lods
mov
popf
push
pusha
out
or
cmp
push
jae
les
sub
mov
lret
push
xchg
insb
loope
insl
sbb
imul
nop
sub
push
imul
imul
gs
dec
cmp
pop
push
xchg
out
add
jbe
mov
data16
out
test
lock
outsb
aaa
aad
pop
ss
pop
fs
lods
sub
push
cmp
mov
jmp
fisubl
jp
and
shrb
push
test
ret
mov
jmp
jmp
xchg
push
pushf
imul
dec
imul
cmp
incl
add
ds
int
add
cs
or
or
cmp
push
enter
pop
icebp
mov
pop
push
add
or
cltd
mov
adc
pop
stos
aaa
fs
sub
mov
fsubrs
movsb
jg
int
out
cwtl
ja
cmp
lock
out
mov
hlt
leave
fs
mov
jg
in
cld
dec
andnps
inc
cmp
lods
imul
sub
lods
xor
cltd
test
imul
insl
repz
inc
addr16
call
pop
sbb
push
push
mov
imul
jp
dec
mov
pop
pop
gs
jbe
pop
pusha
push
jnp
and
repnz
je
faddp
nop
sbb
xchg
dec
jle
and
stos
sub
insb
jmp
pop
dec
jg
jae
outsl
xchg
adc
in
incl
mov
addr16
jmp
jmp
scas
fimull
out
inc
popf
jecxz
aas
sub
icebp
aaa
inc
adcl
push
ss
mov
push
nop
pop
in
push
jmp
popa
inc
jecxz
dec
xor
xchg
cmpl
loopne
test
pop
mov
hlt
dec
addr16
out
and
test
shl
mov
xchg
dec
in
rcl
decl
test
aam
xchg
daa
daa
movsl
stos
pop
pop
lea
mov
adc
sbb
outsb
pusha
jle
out
mov
sub
scas
add
rcr
scas
lcall
sub
fisubrl
hlt
push
push
sti
out
stos
mov
jne
add
arpl
lods
xor
cmp
sub
loopne
push
mov
sahf
sub
xor
aam
out
add
pop
in
dec
push
push
aam
imul
stos
mov
repnz
xor
jnp
xor
xor
pop
inc
fmull
pushf
sbb
cmp
push
adcl
popa
mov
push
push
mov
fldenv
xor
sub
mov
sub
in
jae
pusha
xchg
pusha
out
jo
sub
mov
inc
cwtl
outsb
mov
fsubr
xor
mov
push
jg
out
xchg
inc
mov
fsubs
mov
lcall
mov
lods
repz
subl
jo
outsl
jge
cmc
fistpll
std
xor
mov
jl
inc
fs
add
jbe
in
mov
xchg
inc
mov
jae
jmp
push
test
sbb
addl
mov
or
fildll
lods
addr16
xor
or
jle
lahf
dec
mov
mov
mov
mov
gs
sub
out
cli
daa
jecxz
mov
daa
cmp
rcll
jns
outsb
or
mov
popf
sbb
test
mov
in
pop
jae
subl
mov
cmp
lret
inc
push
dec
lret
out
cli
ds
jo
mov
add
jecxz
mov
push
pop
sbb
push
leavew
mov
xor
mov
cltd
mov
cmp
fistps
cmc
dec
push
or
ja
ljmp
push
and
daa
mov
sub
ret
out
jge
xor
cmp
in
adc
push
dec
and
xchg
sbb
pusha
fisubs
jnp
ss
subl
repz
divl
and
pop
mov
scas
les
pop
popf
jle
mov
mov
arpl
mov
dec
loopne
and
push
cmp
cmp
aas
cmp
cmp
jmp
adc
dec
rorb
inc
cwtl
jle
mov
add
es
inc
push
mov
or
inc
stc
int3
inc
push
aad
push
int
push
pop
and
out
popa
jb
idivl
lods
iret
pop
inc
aam
outsl
sub
mov
xsaveopt
cmpsb
push
jle
xor
outsl
loopne
fucomi
jne
scas
rcl
sub
dec
je
jp
mov
outsb
test
sbb
es
lea
pop
das
call
xor
pop
cmp
dec
aad
fisttpll
mov
pop
imul
mov
pop
jmp
dec
lods
push
inc
xor
inc
inc
scas
sti
jns
inc
addb
dec
in
push
mov
fsubrl
pop
mov
stos
lods
jnp
dec
push
cmpsl
push
mov
push
scas
mull
xor
jecxz
mov
mov
outsb
push
ds
lcall
jmp
sti
das
sub
mov
mov
jmp
insl
mov
repz
pop
int3
ss
scas
xchg
insl
in
out
jle
and
jecxz
inc
gs
push
inc
pop
cmpb
nop
cld
inc
jnp
xor
inc
movsb
outsl
add
cmp
aas
andl
mov
pop
es
sahf
into
jo
ds
or
push
mov
jmp
cmp
ret
mov
scas
jle
daa
push
stos
sbb
scas
xor
adc
ds
xchg
push
sbb
insl
pop
dec
testl
shll
pop
inc
test
loop
pop
mov
out
sbb
mov
pusha
outsl
out
adc
sub
pop
jbe
arpl
fs
mov
aam
push
jle
mov
ret
jmp
sub
mov
cs
or
std
out
sub
les
adc
and
mov
xchg
ret
imul
sub
jl
adc
inc
cli
cmp
lcall
mov
sarb
jle
repz
iret
mov
xor
and
data16
js
add
jne
or
std
jle
xchg
bound
push
mov
gs
gs
sub
arpl
and
push
xor
dec
mov
dec
subl
sub
push
rorb
in
push
ja
or
rcrl
clc
aaa
cmc
xchg
jg
scas
loop
stos
out
xor
sar
jbe
xorb
jbe
incw
lcall
jecxz
mov
cmp
pop
and
mov
xor
lcall
mov
jo
or
cmp
movsb
xchg
sbb
dec
pushf
push
add
iret
pop
dec
iret
inc
cmp
xor
mov
stos
cmp
cmp
dec
dec
scas
lcall
xchg
jg
adc
shlb
pusha
sbb
jbe
mov
inc
lods
pop
je
inc
push
ljmp
mov
add
and
call
inc
out
push
mov
scas
es
jg
sub
jp
pop
mov
into
mov
inc
shlb
cmp
pop
dec
lret
jle
loope
lret
in
and
push
xchg
mov
les
sub
rcrb
sub
dec
xor
outsb
adc
mov
and
xchg
imul
jb
and
andb
pop
aas
lods
push
sub
push
clc
inc
mov
inc
enter
lods
out
sbb
or
inc
inc
jle
stos
cmp
mov
gs
mov
andb
lret
ret
std
fwait
movd
lods
cmp
inc
in
mov
addr16
jmp
jp
mov
cmp
jp
xchg
inc
outsl
fucomi
out
mov
push
jo
scas
or
loope
mov
inc
jp
or
call
shl
mov
push
cmp
sbb
int
xor
dec
sub
jp
and
lahf
cwtl
sbb
or
sub
jbe
es
jns
and
mov
adc
xchg
dec
cld
inc
lahf
lods
sbb
lcall
sub
xor
movsl
stc
push
outsb
shrb
jecxz
sahf
cmp
xchg
shrb
jae
mov
movsl
mov
cmp
xchg
xor
andb
inc
lods
rolb
push
cs
sub
push
push
inc
fdivrs
dec
mov
mov
insb
or
mov
inc
adc
addr16
cmp
add
jecxz
jge
and
pop
inc
sub
cmp
cwtl
mov
pop
push
orb
subb
leave
pop
mov
outsb
nop
mov
movsb
pop
jno
icebp
pop
adc
pop
jae
adc
loopne
out
jecxz
pop
addr16
dec
mov
dec
ds
mov
jge
sub
jcxz
pop
or
sbb
sub
insb
xor
push
dec
mov
loope
cmp
pop
mov
dec
push
mov
insb
pop
push
orl
sahf
loope
out
mov
loopne
dec
cld
xor
xor
and
jge
mov
jbe
addl
pop
push
nop
adc
mov
sahf
push
inc
pop
pop
jne
arpl
in
sub
mov
nop
push
lods
mov
inc
and
mov
jno
dec
dec
push
pop
jnp
mov
scas
inc
loopne
outsl
sub
mov
or
xchg
ds
rolb
bnd
in
clc
push
and
pop
movsb
xchg
outsl
and
ret
lret
mov
js
and
jbe
xchg
cmp
fwait
xor
push
adc
imul
jmp
dec
or
dec
les
insb
and
test
push
test
cmp
mov
inc
and
add
sbb
mov
mov
iret
jnp
lret
adc
adcb
mov
sub
movlhps
movsb
ss
and
loopne
movsb
test
out
pop
push
sub
sbb
lds
sub
stc
xor
cltd
cwtl
andb
in
in
xchg
xor
in
stc
jle
pop
push
pusha
int
aam
call
xor
in
int3
je
push
push
cmpsb
push
mov
mov
xor
fs
int
jns
iret
mov
pop
mov
movsl
daa
jns
mov
out
adc
dec
pop
aas
std
movsl
aas
out
lds
adc
aaa
insb
sub
mov
js
push
jno
jmp
push
mov
cmp
dec
repz
jg
xchg
mov
mov
mov
adc
sub
jmp
jno
push
es
pop
dec
roll
jne
adc
mov
and
pop
shrb
and
test
jp
xchg
mov
movsl
xchg
bound
mov
decb
test
mov
outsb
addr16
push
push
jmp
xor
int
sbb
aas
cmp
mov
xchg
xchg
stos
cmpsl
jp
insb
je,pt
dec
mov
insb
sub
or
xchg
cs
cmp
mov
jle
xor
inc
dec
and
stos
push
or
or
add
cmp
ret
sbb
jae
xchg
dec
aas
dec
insl
jge
inc
jb
in
push
cwtl
loope
shlb
rcll
mov
mov
repz
lretw
dec
test
xor
or
xor
test
dec
jp
rcrl
movb
inc
mov
push
fmul
subl
push
sub
xchg
sbb
hlt
and
xchg
inc
arpl
add
testb
or
xlat
popf
sbb
std
xchg
out
lcall
sub
lock
repz
xchg
js
and
adc
cmc
jae
inc
es
jmp
inc
jae
mov
adc
popa
je
testb
divl
negl
imull
fldt
jge
fists
mov
ret
push
clc
loop
xor
addr16
test
repnz
push
out
lcall
xchg
repnz
mov
arpl
jcxz
xor
xor
fcoml
push
mov
daa
xchg
xchg
test
insb
fs
mov
jl
push
sbbl
jmp
imul
lret
jle
rcll
aas
push
jle
pop
cmpsl
xor
jmp
or
out
xor
aam
mov
in
data16
leave
insl
inc
popf
test
hlt
push
mov
test
loope
fwait
inc
outsl
lahf
jo
decl
pop
xor
jle
cltd
sbb
cmp
cmp
mov
insb
push
fwait
mov
orb
and
jmpw
sub
out
inc
imul
mov
cmp
jb
test
pop
sub
mov
outsb
fdivr
aad
movsb
and
jnp
fs
dec
mov
arpl
cmpsl
xchg
xor
adc
in
mov
enter
inc
test
mov
arpl
xor
and
cmp
stos
and
js
scas
arpl
test
cmpsb
pop
jge
enter
fwait
sub
inc
jbe
mov
inc
sub
sub
pusha
arpl
loop
lock
scas
test
mov
jbe
dec
fisttps
add
jmp
cld
inc
pusha
jl
xor
jg
cmp
jle
push
je
pusha
mov
dec
cs
xchg
gs
cltd
or
in
push
inc
cvtdq2ps
stos
dec
jne
xchg
adc
lahf
xor
in
mov
out
lods
sub
jl
jno
cmp
and
jle
cmp
data16
jb
ja
std
cmp
incb
sahf
xchg
outsb
ss
sub
inc
out
jp
ljmp
gs
and
cmpb
sbb
loop
clc
jge
rolb
sbb
mov
js
lods
lea
mov
inc
and
cmp
push
sbb
fbld
jne
push
incl
push
push
pop
add
js
insl
cli
test
pusha
mov
fs
test
xchg
inc
mov
jbe
jle
sbb
iret
jp
push
mov
cli
std
in
flds
dec
add
shll
xchg
mov
xchg
mov
cmp
or
xor
lods
push
pushf
pop
push
cmp
jle
mov
pop
xor
xor
cmp
mov
cmp
and
scas
test
add
cmp
or
mov
add
sub
movsl
int
jl
dec
and
andl
and
sbb
aad
or
dec
rcll
mov
fs
jnp
out
in
jle
shlb
dec
push
test
daa
mov
adc
sbb
fucomp
call
nop
pop
outsl
mov
mov
mov
ffreep
sahf
dec
sbb
xchg
je
das
scas
jp
pop
in
ja
fwait
pop
inc
jp
leave
out
dec
addb
movsb
inc
ja
ja
into
add
dec
xchg
scas
fs
jp
fwait
mov
bound
pop
arpl
lcall
adcl
popa
rorb
cmp
mov
push
dec
xchg
or
mov
outsb
insl
mov
repz
inc
imulb
cld
filds
out
shlb
jg
call
xorl
leave
out
cld
icebp
mov
sub
mov
pop
mov
push
add
into
cmp
int
fisubrs
cltd
das
dec
enter
mov
and
lcall
xchg
stc
les
cmp
lds
sbbb
mov
loop
add
imul
push
mov
inc
stc
xchg
mov
xchg
sbb
dec
dec
push
daa
or
dec
test
jmp
jnp
sahf
and
xchg
popf
sub
mov
lock
and
mov
insb
ja
mov
xchg
adc
bound
gs
imul
mov
pop
xchg
popa
or
xchg
cwtl
pop
out
movsb
jnp
dec
aaa
sub
call
in
movsl
jne
push
pushw
hlt
push
push
push
add
xchg
mov
icebp
and
adcl
jmp
lock
push
ljmp
xor
mov
jle
jnp
mov
ljmp
scas
mov
lcall
xor
mov
mov
movsl
fldl
xchg
xor
dec
pop
movsb
loopne
mov
sahf
shrl
in
xchg
cmp
es
cmp
loopne
pop
mov
cmp
xchg
jle
mov
test
jne
mov
imul
ret
into
lea
pop
jmp
popa
outsb
repnz
aas
pushf
lret
pop
insb
addr16
outsl
mov
ds
xchg
arpl
cmp
mov
push
pop
mov
dec
and
adc
add
out
jge
xchg
lds
popf
and
in
xchg
shlb
lods
idivl
loope
mov
dec
lret
les
mov
xchg
pop
lcall
lods
jnp
insb
lds
ss
xchg
xchg
outsb
pop
call
dec
or
int3
xor
lods
or
sbb
cmp
jmp
mov
iret
fwait
out
pop
pop
jecxz
pop
and
dec
cmc
repnz
inc
enter
fsubp
das
outsb
mov
and
sarb
inc
jmp
xchg
sbb
mov
scas
xchg
dec
sbb
scas
jg
xor
sbb
jecxz
cld
mov
cld
addr16
cli
jne
jle
dec
mov
mov
dec
fs
jl
out
cmp
outsb
addr16
adc
shrb
fidivrl
xor
cmp
js
mov
sub
loopne
dec
sarb
outsb
pushf
cmp
cmpsl
sahf
jecxz
mov
dec
fsubrs
xchg
jnp
jle
lret
test
test
cmpsb
or
loop
mov
gs
insl
stc
cmp
xchg
pusha
push
push
xchg
and
ljmp
lea
in
sbb
cmp
pusha
fbstp
aaa
mov
cmp
and
inc
push
and
and
mov
jecxz
subb
xor
pop
cld
push
jne
dec
shlb
and
mov
int3
push
int
and
jbe
jl
arpl
and
aaa
jnp
jno
mov
aam
mov
scas
pop
cmc
in
mov
mov
ret
push
inc
jne
inc
aam
xchg
insl
dec
jmp
xor
das
pop
jo
or
mov
shr
add
inc
or
aam
in
and
rolb
xor
sbb
push
pop
xchg
aaa
jle
add
jle
or
mov
mov
rep
clc
test
jnp
mov
sub
fwait
daa
in
cmp
je
pusha
stc
inc
push
inc
mov
roll
into
insb
mov
js
rorl
addr16
fsubrs
stc
inc
fildll
lcall
jno
or
stc
mov
push
imul
cmp
out
int3
dec
shrl
push
push
xchg
dec
js,pn
pop
add
loopne
xlat
outsl
ret
imul
xchg
cmp
aas
sarb
dec
dec
pusha
mov
rcrl
lods
jle
icebp
cwtl
fs
aam
imul
xchg
inc
xor
jp
ja
pop
pushf
push
call
fmuls
icebp
arpl
mov
mov
lods
sbb
cmpsl
pop
aam
cs
leave
cmp
jp
push
in
sub
fwait
stos
in
pop
dec
push
xor
mov
ds
or
imul
push
pop
jecxz
ds
or
jbe
movl
mov
int
xchg
test
mov
push
repnz
loope
lcall
jge
mov
dec
negb
add
cmp
stos
leave
fdivrl
xor
gs
jbe
cmp
ss
jne
push
fdivrs
je
mov
cld
pop
sub
out
xchg
enter
push
jmp
enter
shll
xchg
mov
push
inc
xchg
xor
fwait
mov
mov
xor
dec
push
in
je
sbb
pop
cmp
stos
sbb
mov
js
cmp
xor
xor
cmpb
pop
cli
jae
stc
movsb
mov
aam
sbb
nop
jbe
pop
loop
dec
adc
int
lahf
dec
mov
jns
jle
pop
fs
movsb
push
pop
xchg
add
jo
or
je
mov
xchg
rclb
xor
sub
cmc
sub
in
lret
xor
stos
stos
lock
sahf
icebp
pushf
dec
cwtl
rcrl
test
in
jl
or
mov
popa
xor
dec
rorl
icebp
jp
test
pop
loopne
imul
xor
push
outsl
jecxz
lods
int
add
sahf
sarb
xor
mov
or
or
adc
sub
mov
sub
jg
int
jnp
fs
jae
shl
std
fstps
imul
mov
cld
cmp
mov
sbb
cmpsb
scas
dec
mov
add
into
lret
push
iret
sarl
lods
or
inc
sub
inc
mov
loope
sub
or
outsb
inc
outsb
sbb
stos
shrl
push
test
mov
insl
lods
sub
enter
ljmp
lcall
pushf
jle
in
fmul
scas
sub
mov
loopne
push
cwtl
sarl
idiv
gs
inc
scas
xor
pop
test
scas
mov
cmc
sbb
xor
pushf
xor
inc
test
mov
jbe
jno
pop
scas
inc
inc
or
pusha
cmp
icebp
call
cmc
push
or
sbb
mov
rep
mov
ficompl
xchg
es
jp
shll
cmc
and
ss
outsb
into
or
ret
adc
mov
xor
xchg
push
mov
sti
pop
push
cmp
mov
dec
into
pop
imul
mov
xor
test
xor
cli
sbb
filds
push
out
ljmp
leave
sti
sbb
rorl
or
loope
sub
sahf
ds
xor
mov
iret
cs
and
dec
pop
repz
dec
pop
popf
jbe
in
cli
jb
jbe
jp
cli
pop
negb
testb
inc
xor
test
aad
subl
mov
lds
xor
push
insb
mov
adc
mov
or
scas
in
and
sti
and
movsl
outsb
rcrb
mov
sbb
or
push
fiaddl
in
pushf
mov
xor
jae
int
jb
js
sbb
lcall
dec
sti
lahf
stos
dec
mov
jle
in
fwait
sahf
nop
std
cltd
jne
mov
iret
mov
mov
dec
mov
pop
mov
test
jbe
in
cli
orl
pop
test
mov
mov
mov
mov
mov
jle
in
mov
jne
mov
mov
dec
stos
repz
movsb
xchg
pop
jbe
mov
lods
sub
movsb
rcrb
push
rolb
flds
sti
fldt
pop
push
xlat
jle
in
fistps
lret
iret
enter
into
loop
sbb
repz
xchg
cmpsb
in
push
out
bound
pushl
jle
out
push
fidivl
cmp
jb
dec
cmp
fucomip
mov
jl
pop
inc
cmp
mov
push
jecxz
push
adc
fsubrs
push
aam
add
push
lret
fimull
bound
push
xor
imul
pop
fcompl
sbb
jne,pt
mov
repnz
sbb
add
mov
loope
mov
ljmp
or
xlat
lock
rcrb
xor
push
loop
clc
add
data16
aas
cmp
cmp
mov
jns
scas
inc
and
xchg
orb
fs
imul
fisubrs
movsb
add
sub
mov
xor
aam
cs
les
xlat
ja
cli
hlt
cmp
jmp
cmp
or
xor
dec
fs
outsb
stc
bound
lds
roll
or
push
sub
das
pop
cmp
into
ret
cmp
into
sbb
shrb
lret
bnd
aam
and
sub
xchg
xorl
and
xor
ficomps
jmp
push
inc
add
push
rcrb
data16
rorl
xor
cmp
lock
xor
in
cmp
repnz
es
ss
cmp
xchg
loope
leave
out
jl
mov
sub
shrb
rorb
adc
and
sub
fidivl
jecxz
push
fmull
sub
adc
adc
and
push
push
les
xor
pop
jg
mov
xchg
out
push
or
jl
inc
inc
outsb
ss
push
ds
sub
or
xor
cmp
fsubl
negb
mov
into
cmpsl
decl
mov
hlt
push
movsb
adc
or
and
or
mov
add
cmp
loope
lock
out
rolb
