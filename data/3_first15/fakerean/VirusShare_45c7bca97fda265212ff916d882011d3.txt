mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
movl
mov
movl
call
or
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
or
or
or
or
and
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
pop
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
and
or
or
or
or
or
or
or
or
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
call
cmp
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
movl
mov
mov
xor
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
pop
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shl
xor
xor
and
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
and
push
xor
mov
call
mov
test
mov
jne
test
je
mov
push
call
add
mov
test
jne
test
je
mov
push
call
add
pop
pop
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
push
mov
push
mov
push
push
push
call
test
js
pop
pop
pop
ret
test
je
lea
push
push
mov
call
test
jns
mov
test
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
mov
movl
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
pop
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
cmp
je
mov
cmp
jne
mov
call
cmp
jne
mov
call
test
jg
mov
call
cmp
jne
mov
call
test
jg
xor
pop
ret
mov
pop
ret
cmp
je
jmp
cmp
jne
mov
call
fmull
push
fstps
flds
fstps
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
push
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
addl
add
cmp
jne
mov
addl
mov
pop
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
jne
mov
test
je
cmpl
je
mov
pop
pop
ret
push
call
add
test
je
movl
movl
movl
mov
test
mov
je
mov
mov
push
call
mov
pop
pop
ret
mov
mov
call
test
je
mov
jmp
xor
jmp
push
mov
mov
call
test
jne
pushl
mov
push
call
xor
pop
ret
push
mov
and
sub
push
push
mov
call
test
jne
and
mov
mov
lea
push
push
call
test
js
mov
test
je
andl
mov
lea
push
push
call
test
js
mov
mov
lea
push
push
call
cmpl
jb
mov
andl
mov
lea
push
push
call
mov
push
call
mov
pop
mov
test
mov
jne
cmp
je
lea
push
push
push
pushl
call
add
test
je
cmpl
jg
pushl
call
push
call
pop
pop
xor
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
mov
test
jne
cmpl
je
push
call
test
je
mov
mov
mov
test
je
cmpl
je
mov
test
jne
pop
mov
pop
ret
call
jmp
push
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
movl
mov
push
xor
mov
mov
push
lea
lea
mov
mov
mov
movl
mov
mov
call
cmp
je
mov
mov
mov
lea
push
push
call
test
mov
js
cmp
je
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
push
lea
mov
lea
push
lea
mov
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
jne
mov
call
lea
mov
mov
call
mov
push
lea
call
lea
push
lea
push
lea
mov
call
test
js
mov
cmp
je
addl
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
jg
cmp
jne
mov
lea
push
mov
push
call
test
mov
js
cmp
je
mov
cmp
je
lea
push
mov
push
mov
mov
mov
push
push
mov
call
cmp
jne
lea
lea
push
push
mov
lea
mov
mov
movl
movl
mov
mov
call
add
push
lea
push
call
mov
test
jne
test
jne
mov
mov
lea
push
mov
push
push
mov
call
cmp
mov
je
mov
push
mov
mov
call
mov
addl
mov
cmp
jge
addl
mov
call
test
jne
cmpl
jge
lea
mov
jmp
call
mov
mov
add
adc
cmp
jg
mov
jl
cmp
jbe
jmp
lea
call
mov
mov
push
push
call
add
lea
call
lea
call
lea
call
test
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
fldl
fstpl
fldl
lea
push
fstpl
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
push
call
mov
add
mov
fmulp
rolb
add
mov
add
add
add
sahf
add
add
ja
add
fcomp
add
add
scas
add
rolb
add
add
fldl
mov
call
in
add
push
push
push
call
mov
mov
js
cmpsl
fldl
add
lret
rclb
mov
add
rcl
xchg
andl
add
add
in
clc
lcall
inc
in
push
push
lea
push
call
jne
ret
add
jnp
push
ret
rclb
add
add
add
js
lcall
add
lods
xchg
roll
xchg
sbbb
add
sub
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
mov
mov
jne
test
test
add
jnp
popa
mov
lret
test
test
pop
xchg
mov
hlt
add
fwait
add
jo
mov
in
fcomps
push
push
push
push
push
lea
push
push
push
push
lea
push
call
sti
imul
out
mov
stos
jnp
jmp
iret
bound
add
sub
pop
push
push
push
push
call
add
outsl
aad
add
in
les
mov
jbe
pop
cmc
mov
add
lahf
add
pop
add
fiaddl
out
add
jbe
add
roll
lcall
pop
add
add
popf
push
push
lea
push
push
push
lea
push
lea
push
call
jmp
add
imul
add
mov
mov
add
pop
add
fildl
scas
add
test
lods
add
loopne
in
add
mov
fiadds
add
lcall
add
push
jle
push
push
push
push
lea
push
lea
push
push
push
push
call
jae
add
mov
add
add
mov
jle
add
add
push
or
xchg
stc
push
lahf
lds
xchg
not
add
mov
rcrb
add
js
hlt
outsl
insb
add
sahf
imul
std
add
sub
pop
call
push
push
push
push
push
push
call
pop
add
scas
add
pop
test
outsl
add
testl
add
call
fwait
add
push
add
mov
test
mov
gs
iret
add
faddl
add
add
xchg
push
jl
add
add
sub
pop
jmp
ret
push
push
push
lea
push
push
push
lea
push
call
pop
mov
add
mov
add
out
in
pop
lahf
add
add
pop
mov
out
add
pop
mov
add
mov
add
in
in
mov
mov
push
push
call
add
add
mov
add
add
add
lods
mov
out
add
jno
jae
cmpsb
add
add
bound
lock
add
mov
add
add
add
add
int
std
add
add
add
add
add
push
push
push
lea
push
push
push
lea
push
push
push
push
call
fiaddl
subl
add
push
add
xchg
fcoml
pushf
mov
xchg
outsl
add
add
jmp
call
add
lahf
bound
pusha
ja
mov
add
shlb
add
add
movsb
pop
add
pop
test
mov
sub
pop
add
mov
xor
push
push
push
and
add
sub
dec
sub
dec
shl
lea
pop
ror
pop
push
lea
push
push
lea
push
call
add
out
add
add
call
add
add
add
add
mov
add
pusha
add
add
mov
push
lahf
push
add
pop
loopne
lods
add
repnz
loope
pushf
add
xchg
lret
push
mov
iret
test
lcall
jne
call
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
leave
movb
add
mov
add
mov
add
lahf
add
add
push
mov
sbbb
push
mull
add
testl
in
mov
xchg
rol
xorl
xchg
jnp
cmpsl
push
sub
pop
mov
push
push
lea
push
lea
push
call
out
in
add
ret
jnp
int
in
push
add
stc
add
mov
add
scas
addr16
push
add
lret
in
lahf
lds
add
add
add
add
mov
add
enter
lcall
inc
call
push
push
push
push
call
add
test
add
in
add
xchg
test
int3
add
add
mov
les
scas
lahf
pop
nop
cwtl
into
xchg
roll
add
sarl
add
mov
mov
xchg
popl
xchg
push
lcall
inc
call
lea
push
call
jle
fistl
sti
jl
mov
pop
leave
jo
add
insb
add
fidivrl
add
enter
add
add
add
jns
insb
ret
gs
popa
int3
jmp
loope
add
jns
add
add
lcall
jne
push
push
lea
push
lea
push
push
push
push
push
push
call
add
outsl
add
mov
add
xchg
jge
pusha
enter
fwait
add
jns
add
add
push
mov
lea
push
push
pop
add
pop
add
pop
mov
add
push
movsl
add
add
add
add
data16
arpl
pusha
incb
jne
push
push
push
push
push
push
push
lea
push
lea
push
push
call
xchg
cmc
mov
rolb
outsl
push
jne
stc
fildl
add
cmpsl
xchg
add
jns
jmp
add
roll
mov
add
mov
leave
cld
mov
mov
outsl
add
jb
stos
add
data16
add
add
fcom
mov
push
notb
sar
jle
in
fcomps
or
add
pushl
push
push
push
push
push
lea
push
push
call
sahf
stc
mov
hlt
add
jmp
jae
add
pop
xchg
int
clc
add
push
mov
add
mov
insb
add
mov
cld
mov
mov
pop
popf
cwtl
in
lea
clc
add
loopne
xchg
jns
sti
add
imul
add
fnsetpm(287
movsb
lcall
jne
call
push
push
add
add
sub
push
and
add
add
shr
dec
sub
pop
ror
shr
pop
push
lea
push
push
call
shll
cli
in
add
add
mov
add
add
fiadds
cmpsl
jecxz
pushf
mov
add
je
add
fs
add
cmpsl
popa
aad
add
cwtl
pop
fisttpll
add
add
pop
out
add
jle
hlt
add
jno
mov
add
hlt
lcall
jne
push
push
push
call
add
add
jmp
sti
add
add
roll
movsb
stc
cmc
mov
sahf
add
add
add
nop
ljmp
hlt
lcall
mov
add
push
push
push
not
add
dec
push
xor
add
sub
xor
inc
sub
pop
add
dec
lea
pop
push
lea
push
push
call
in
lret
add
xchg
ljmp
add
in
aad
add
pop
arpl
addl
mov
add
mov
add
faddl
add
mov
lahf
addl
fs
js
add
lcall
push
push
push
call
pusha
mov
add
xchg
add
pop
ret
add
fnstsw
add
out
push
cmpsb
jecxz
ja
std
into
xchg
add
add
testb
in
hlt
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
mov
add
add
pop
add
mov
in
add
into
add
xchg
add
rcrb
add
iret
popf
lods
add
pop
mov
icebp
push
cli
sub
pop
call
push
push
call
add
add
add
cmpsl
push
mov
test
fidivs
out
les
add
xor
add
add
add
js
add
add
repnz
xorb
xchg
lcall
clc
push
push
push
push
push
push
call
test
test
mov
add
add
push
je
mov
add
jecxz
call
xchg
add
jne
std
pop
xchg
lahf
add
add
loop
add
add
cmpsb
fs
je
add
popa
add
lcall
push
lea
push
push
lea
push
push
call
mov
cmp
movl
add
addl
add
add
sti
mov
sub
jnp
add
movsb
data16
mov
add
xchg
lcall
mov
pop
ret
add
add
xchg
lock
jbe
jp
in
in
lcall
push
push
lea
push
lea
push
lea
push
lea
push
call
add
mov
mov
lea
add
add
add
pusha
add
in
pusha
jns
in
mov
add
fistpll
add
lods
add
sub
pop
mov
push
push
push
push
push
push
push
call
add
les
mov
out
push
add
rolb
test
add
shrl
outsl
lods
jbe
jno
add
sahf
pop
mov
mov
sti
rorb
test
fstpt
loopne
in
aad
add
insb
addb
add
add
mov
xchg
add
cmpsb
mov
pop
in
push
lea
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
jmp
xchg
test
add
add
test
add
test
rorb
pusha
int
lea
mov
pop
mov
pop
call
add
cwtl
jno
add
cwtl
out
xchg
add
pop
add
add
sarl
sub
pop
add
push
push
lea
push
call
jns
jne
lahf
ljmp
add
test
sti
fldcw
mov
add
fiadds
add
mov
hlt
pop
add
push
push
push
push
push
push
push
lea
push
push
call
bound
ljmp
shll
add
add
mov
pop
add
scas
shll
add
add
sahf
add
mov
js
mov
add
add
add
push
add
sub
pop
mov
xor
push
lea
push
push
push
push
lea
push
push
push
call
mov
fstl
shr
fadds
cmpsl
test
add
lret
add
enter
add
add
add
shl
add
add
add
add
push
int3
add
add
ljmp
scas
andl
xchg
mov
add
add
add
pop
add
loopne
add
push
lea
push
push
push
call
add
add
add
addb
jae
mov
cwtl
add
mov
lea
add
add
subl
add
add
in
sbbl
lcall
push
lea
push
push
push
lea
push
push
push
call
rolb
add
lods
add
testl
add
mov
mov
ja
lds
mov
mov
add
add
add
add
add
jle
div
add
lcall
add
push
icebp
addb
ljmp
in
lcall
inc
or
adc
push
push
call
add
add
mov
imul
mov
mov
add
stos
add
flds
ret
add
add
into
out
lods
pusha
add
add
in
sarb
add
add
add
add
in
lcall
mov
movsl
add
add
pop
sub
pop
add
push
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
push
xchg
enter
pusha
in
shl
out
sarb
js
roll
cltd
add
xchg
add
scas
push
mov
mov
lcall
clc
shr
xlat
xchg
add
add
add
sub
pop
pop
push
push
push
call
lods
push
pushf
mov
call
add
jae
add
add
add
add
test
add
rcl
mov
add
rcl
imul
add
add
jl
in
hlt
pop
mov
push
push
push
push
lea
push
call
js
in
hlt
add
loope
test
mov
js
pop
flds
add
stc
add
add
xchg
lods
jp
scas
jae
add
fs
add
jle
add
sbbl
ljmp
fisubs
add
add
mov
test
mov
outsl
sub
pop
xor
push
push
lea
push
call
mov
add
lods
cmpsb
stos
outsl
fwait
int
add
in
add
cld
icebp
insb
cwtl
add
lcall
out
mov
int
lods
mov
add
addr16
sub
pop
add
push
push
lea
push
push
lea
push
push
push
lea
push
call
push
add
insb
add
mov
add
add
addl
mov
aad
mov
mov
ljmp
jno
sub
pop
push
mov
xor
push
push
push
call
fnstenv
cld
add
add
je
cmpb
out
adc
shll
mov
add
mov
add
add
add
add
insb
out
addb
xlat
pusha
push
popf
push
add
pop
sub
push
push
push
push
push
push
push
call
rolb
clc
add
lea
data16
repnz
lock
add
add
scas
add
xchg
int3
add
leave
add
add
in
mov
test
mov
sub
pop
pop
push
lea
push
push
push
lea
push
push
call
jae
add
jmp
add
add
add
lret
enter
insb
xchg
hlt
pushf
add
cmc
testb
add
xor
ljmp
lcall
movsb
pop
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
clc
imul
lds
pop
xchg
stos
ja
xchg
add
mov
pop
pusha
xchg
pop
push
stos
cmpsl
add
jbe
ljmp
jp
data16
add
jb
add
cli
push
data16
add
mov
mov
sub
pop
mov
push
push
push
push
call
clc
fldt
repnz
call
lods
xchg
jno
stos
add
out
add
add
add
add
ficoms
jnp
mov
std
cmc
shll
add
push
add
loopne
jecxz
add
add
jmp
ljmp
add
push
int3
jmp
jl
mov
lcall
pop
in
push
push
push
lea
push
lea
push
lea
push
call
add
in
add
add
sti
insb
add
add
leave
cwtl
aad
cmpsl
add
add
jecxz
cmpsl
mov
add
sub
pop
add
push
push
lea
push
push
call
std
pop
add
pushf
test
jne
shrb
fnsave
in
add
lret
add
fs
testb
popa
xchg
sub
pop
add
push
push
push
lea
push
push
push
push
push
push
push
call
pop
in
add
add
push
pushf
mov
pop
test
shrb
enter
add
add
xchg
add
enter
xlat
clc
add
push
fildl
jge
add
add
inc
and
jno
adc
test
push
lea
push
call
add
add
int3
sti
add
imul
ja
add
mov
add
pop
add
pop
jbe
push
add
pop
divw
mov
mov
add
jle
xchg
push
ljmp
enter
add
imul
in
hlt
lcall
add
push
push
push
call
aad
add
mov
xchg
mov
add
gs
hlt
push
add
add
xorb
incb
imul
clc
movsb
mov
bound
add
lea
lods
enter
add
popf
add
add
out
jp
jne
imul
into
mov
fs
xchg
movsl
test
add
add
lcall
les
push
call
add
cltd
mov
add
xchg
jno
loope
mov
add
jge
mov
pop
add
add
lock
out
roll
jge
xorl
lahf
lods
mov
add
addl
add
add
add
add
xchg
roll
sub
pop
mov
push
push
lea
push
call
mov
outsl
imul
clc
in
out
mov
rolb
mov
popa
in
add
add
jge
les
add
push
push
add
sahf
fs
add
add
pop
ret
roll
les
mov
cltd
add
add
pop
xor
push
push
lea
push
lea
push
push
push
call
mov
roll
rol
jmp
add
shll
bound
add
fcmovb
add
lret
add
sub
pop
add
push
push
push
lea
push
call
mov
xlat
rol
jecxz
add
add
loop
std
add
movsl
xchg
loopne
pop
loope
jnp
add
scas
add
push
test
add
in
xchg
add
add
mov
nop
add
iret
mov
xchg
lcall
add
add
add
in
lock
lcall
dec
sub
adc
xor
ja
sub
push
push
lea
push
call
mov
fbld
add
add
add
jl
push
cmpsb
lods
test
lock
add
icebp
add
mov
mov
mov
add
add
movb
mov
add
addl
add
iret
pusha
insb
add
jmp
sub
pop
add
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
add
pop
xchg
popa
xchg
push
test
out
add
add
add
add
jecxz
sarl
scas
add
add
add
mov
push
xchg
add
xchg
idivb
add
add
add
fucomi
ret
loope
lea
jb
add
pop
call
js
jne
movsl
test
in
fcomps
rcll
pop
mov
lea
push
lea
push
lea
push
push
push
push
lea
push
push
call
push
add
call
push
jmp
add
add
movsl
int
cmc
mov
add
popl
add
out
scas
mov
fcompl
jb
les
add
in
jmp
lcall
add
push
add
fcomp
jmp
mov
add
fsubrs
loop
stos
push
inc
add
ror
push
sub
add
ror
sub
sub
shr
add
pop
shl
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
lret
add
cld
stos
add
fstl
ret
int
lcall
mov
add
lahf
jmp
mov
add
rolb
int3
test
mov
repnz
enter
mov
fwait
xchg
mov
cld
fdivs
pop
pushl
push
rol
not
xor
lea
pop
call
push
push
push
push
lea
push
push
push
push
push
call
add
add
mov
add
mov
lahf
add
loop
xchg
cli
std
stos
testl
add
jb
xorb
add
add
add
add
add
add
out
add
pop
mov
add
in
fcompl
add
or
xor
push
push
pop
add
shr
sub
add
shr
pop
shr
rol
dec
pop
push
inc
pop
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
add
xchg
add
cwtl
add
test
lea
sti
pushf
and
add
pop
aam
jnp
add
add
imul
add
add
in
mov
rcrl
push
add
insb
add
cmc
les
mov
pop
add
movsb
add
add
lcall
add
rclb
pop
mov
push
push
push
lea
push
push
push
push
call
lret
add
call
xchg
xchg
xchg
movsl
test
int3
stos
xlat
pop
add
scas
add
hlt
push
cld
add
xchg
xchg
add
add
push
add
lock
jle
cmc
mov
movb
mov
push
push
add
shr
sub
pop
push
push
rol
inc
shl
pop
mov
add
push
not
rol
pop
add
push
push
push
push
push
push
push
lea
push
lea
push
push
call
std
add
push
add
jl
add
add
jmp
test
add
mov
add
mov
mov
cmpsl
jmp
xorl
fdivr
lcall
ret
inc
inc
add
push
lea
push
push
push
push
push
call
mov
mov
popf
popa
dec
std
mov
add
xchg
clc
cmpsb
add
testb
push
jbe
ret
cmpsb
cld
in
in
mov
add
std
add
rclb
add
pop
shrl
mov
add
int
add
pop
jmp
shrb
add
mov
popl
add
lcall
jae
push
push
lea
push
push
push
push
call
mov
add
add
shl
je
add
add
lret
sub
pop
xor
push
lea
push
push
push
push
push
push
push
push
call
rolb
incb
add
loope
add
icebp
add
scas
add
xchg
roll
push
add
fwait
add
stos
ret
add
rolb
loop
int
xchg
add
add
les
push
push
call
add
fisubrs
add
jle
pop
mov
add
pop
add
jl
mov
add
xlat
xchg
mov
xchg
lock
add
mov
mov
repnz
lods
add
roll
mov
in
add
push
add
lcall
jne
push
push
push
push
push
push
push
push
push
call
add
xchg
add
shll
add
mov
add
aam
mov
xchg
pushf
add
jo
lea
xchg
aam
bound
jbe
add
movb
add
add
add
sar
popl
ljmp
add
add
fcmovne
pop
enter
pop
push
push
lea
push
push
push
push
push
push
push
push
call
mov
add
test
pop
add
cld
cld
popa
stos
test
add
add
add
xchg
leave
filds
arpl
faddl
add
std
add
inc
adc
xor
adc
scas
arpl
push
call
add
fiadds
push
mov
lods
fiaddl
fsts
add
lcall
add
xchg
into
add
add
add
imul
lcall
add
push
push
push
push
lea
push
lea
push
call
lds
push
loope
add
add
push
add
iret
popa
cmpsl
xorb
sti
int3
add
notl
push
fwait
add
je
push
icebp
mov
insb
add
cli
aam
sub
pop
add
push
sub
rol
not
pop
add
pop
push
lea
push
push
lea
push
push
push
call
mov
ret
mov
add
xchg
add
mov
add
lods
pusha
add
js
iret
cmpsl
imul
xchg
add
test
add
ret
add
lcall
mov
popf
add
jnp
iret
imul
dec
and
adc
push
push
lea
push
push
call
mov
add
mov
xchg
add
add
add
push
lret
cwtl
jmp
mov
add
lods
lods
add
shr
add
mov
pop
rep
push
dec
rol
add
sub
pop
mov
push
push
push
call
add
cmpsb
add
add
mov
imul
in
aam
add
lcall
add
mov
iret
mov
in
clc
pop
xor
push
push
call
lods
jp
jno
add
mov
add
rolb
pop
lcall
int
add
stos
loop
add
add
insb
add
add
hlt
add
sub
pop
add
push
push
push
push
push
push
call
mov
add
add
mov
add
add
add
stc
push
add
test
fistpll
push
sahf
add
pop
add
out
add
popa
loope
jle
in
jl
add
add
add
rolb
cmc
roll
add
add
mov
push
xchg
add
add
mov
lcall
leave
je
push
lea
sub
pop
mov
xor
push
lea
push
push
push
call
mov
cwtl
test
add
cwtl
test
in
mov
add
add
add
push
fiaddl
jno
ja
add
add
movl
xchg
mov
add
aam
add
cltd
add
lcall
push
sbb
adc
ret
pop
add
add
push
shl
sub
ror
pop
push
push
sub
lea
pop
mov
push
push
push
lea
push
push
push
lea
push
push
call
ja
add
add
add
insb
add
xchg
add
xchg
push
mov
shlb
repnz
add
imul
lds
add
push
push
push
call
add
pop
mov
movsl
push
ja
andb
jle
add
jmp
mov
jp
repnz
iret
mov
in
add
les
add
add
lahf
mov
mov
add
mov
add
cmc
pushf
roll
pushf
xor
push
mov
in
hlt
pop
add
push
push
call
enter
nop
add
push
outsl
add
add
xchg
xchg
mov
add
mull
pusha
fldenv
add
add
jno
add
mov
add
add
arpl
mov
add
add
enter
mov
ja
loopne
cmpsl
fsub
outsl
add
sub
pop
add
pop
push
lea
push
push
push
push
push
push
call
add
scas
mov
add
add
andl
out
fdivr
add
shl
std
sti
repnz
jmp
loope
aam
mov
leave
jl
add
addr16
xchg
add
add
scas
add
movsl
xchg
add
xchg
repnz
xchg
add
andb
in
in
rep
push
push
lea
push
lea
push
lea
push
lea
push
push
call
in
js
ret
pop
add
bound
push
add
mov
add
add
push
add
lea
rolb
mov
jo
fiadds
call
fiadds
add
imul
stos
lods
add
neg
push
add
jl
add
add
test
mov
clc
add
sub
pop
mov
push
push
lea
push
push
push
lea
push
call
roll
lahf
mov
lea
push
push
add
pop
add
add
add
add
pop
out
jmp
pop
je
notb
js
cwtl
sub
pop
xor
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
add
mov
roll
add
repnz
imul
test
mov
jp
add
pushf
xchg
add
lds
jp
in
fdivr
lcall
les
pop
or
je
push
push
push
push
push
call
jecxz
add
add
fiadds
pop
shll
add
add
add
iret
iret
push
add
mov
add
aam
roll
add
out
mov
cli
push
add
add
lcall
repz
lea
push
push
push
call
mov
jne
add
add
call
mov
add
pusha
xchg
data16
add
xchg
shr
scas
add
pusha
sub
pop
add
add
push
push
lea
push
call
add
jae
add
xchg
add
add
popl
add
jmp
stc
add
lahf
in
pushf
mov
mov
jecxz
add
mov
xchg
test
clc
mov
outsw
lds
mov
add
hlt
fistl
push
add
add
imul
add
mov
hlt
pop
rep
push
shr
pop
pop
push
push
add
add
push
xor
add
sub
sub
sub
pop
add
pop
push
add
rol
inc
pop
pop
push
not
shl
inc
lea
pop
mov
push
lea
push
push
push
push
lea
push
push
push
push
push
call
fcoms
gs
shr
loop
xchg
pop
sti
rolb
mov
ror
ja
add
imul
add
sub
pop
mov
push
lea
ror
not
pop
mov
push
push
lea
push
push
call
add
add
jecxz
fildl
nop
mov
mov
add
add
mov
roll
loope
add
add
fdivp
mov
add
pop
xchg
add
add
add
xchg
push
enter
mov
in
lock
lcall
loopne
push
push
lea
push
push
call
cwtl
mov
cwtl
pop
jmp
add
pop
mov
add
mov
push
add
add
mov
cmpsb
cmpsl
lock
lret
add
addb
add
lahf
push
popa
flds
jp
in
je
push
add
cld
outsl
add
push
push
sub
pop
mov
add
push
lea
push
push
lea
push
push
push
lea
push
push
call
aad
add
add
add
js
mov
aam
roll
xchg
xchg
add
add
add
lds
add
add
roll
add
loop
add
cld
pop
shlb
stc
rclb
in
loopne
lcall
push
push
add
lea
pop
push
push
inc
xor
shl
pop
push
push
lea
push
push
push
push
lea
push
push
call
add
in
add
add
into
pop
jmp
mov
vmulsd
add
add
fdiv
add
add
mov
inc
cld
pop
push
not
not
inc
dec
pop
pop
push
inc
xor
pop
pop
push
shr
rol
pop
pop
push
shr
xor
sub
pop
leave
ret
push
add
pop
push
mov
push
push
push
push
push
push
push
push
lea
push
call
add
mov
mov
add
mov
jae
out
add
adcb
mov
add
ret
pushf
add
int
out
popl
fadds
mov
lret
add
add
outsl
stos
lock
pop
jb
add
nop
push
sub
pop
add
push
push
push
push
push
call
xlat
add
add
les
add
sahf
pop
add
jae
add
ret
fistpl
mov
mov
sahf
add
add
int3
scas
jno
add
add
lcall
push
push
push
push
lea
push
push
push
push
push
push
call
iret
jp
pop
jnp
shrl
mov
jmp
test
add
add
xchg
out
mov
add
arpl
fdivr
stos
pop
stos
jns
out
add
sar
roll
add
stc
les
stos
stos
add
jecxz
add
test
add
jl
in
fcomps
push
push
push
push
push
push
push
push
call
loop
out
mov
test
test
mov
mov
jno
ja
jne
imul
aad
imul
add
mov
add
lcall
push
ror
add
sub
add
pop
push
push
ror
pop
movl
push
lea
push
push
push
push
push
push
lea
push
push
call
mov
mov
pusha
ljmp
add
in
mov
add
loopne
add
add
sub
pop
addl
test
je
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
nop
add
rolb
add
pushf
xlat
lods
test
mov
arpl
mov
pop
cld
js
add
add
lcall
rorl
scas
xchg
lahf
push
jecxz
rcrl
stc
xchg
jo
imul
xchg
cli
pop
add
add
mov
nop
add
js
add
add
sub
pop
mov
push
sub
sub
pop
pop
pop
push
sub
pop
pop
push
lea
push
call
imul
add
xchg
nop
neg
iret
mov
add
add
aad
add
loopne
add
shll
mov
data16
add
mov
jecxz
out
add
add
add
add
add
pop
add
add
add
int3
ljmp
add
clc
pop
pop
push
push
lea
push
push
push
push
push
call
mov
pop
nop
sar
lahf
mov
add
add
arpl
mov
pusha
add
lea
cld
gs
add
in
add
std
add
add
add
mov
test
ja
sub
pop
leave
ret
push
not
pop
push
push
lea
pop
mov
push
shl
lea
shl
pop
add
push
sub
sub
sub
pop
push
push
push
push
push
push
push
push
push
call
add
movsb
in
add
add
je
cli
push
stos
stos
mov
lds
data16
add
add
add
add
add
add
pop
out
cmpsl
cmpsb
add
fldenv
lcall
lcall
push
push
push
push
push
lea
push
push
lea
push
push
call
cmpb
out
add
call
add
aad
xchg
push
pop
scas
icebp
pop
add
mov
scas
add
add
je
in
addb
add
add
jp
add
pop
mov
aam
add
imul
test
add
pop
popa
sub
pop
push
push
shl
pop
push
testl
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
ja
jne
add
test
loop
add
mov
add
mov
add
add
add
add
lods
add
roll
add
mov
add
mov
lea
xchg
data16
lahf
sahf
cltd
addr16
fcmovbe
movsb
add
fcompl
inc
or
push
push
push
lea
push
push
call
add
add
xchg
mov
js
fidivrl
loop
pusha
add
ror
fsincos
add
lods
add
add
lret
jne
add
mov
sti
testl
cmpsl
mov
pop
icebp
flds
lcall
add
scas
push
lea
push
lea
push
push
push
call
mov
push
mov
push
leave
lods
pushf
test
test
imul
add
xchg
add
add
clc
add
mov
push
movsl
add
rol
cmc
add
in
lret
int3
add
xchg
add
mov
hlt
data16
mov
js
add
mov
add
stos
mov
in
in
lcall
adc
lea
push
push
call
add
lret
mov
mov
add
add
xchg
loop
add
add
add
xchg
pop
fiadds
int3
out
mov
in
hlt
pop
mov
push
shl
rol
pop
pushl
push
xor
pop
push
push
shr
rol
add
pop
push
call
push
pop
cmpl
jne
push
push
push
push
push
call
mov
push
add
into
add
fs
add
data16
mov
jecxz
add
in
in
pop
pop
push
xor
xor
rol
pop
pop
push
push
push
push
call
jl
add
jnp
jnp
les
add
cwtl
push
add
sahf
add
mov
pusha
into
cmpsb
cli
fdivrs
jo
mov
add
pop
scas
pop
add
mov
pop
add
mov
ret
add
fadds
add
fwait
leave
mov
addl
fcompl
pop
les
lock
lcall
pop
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
rcrl
jnp
sahf
cmc
movl
mov
loop
add
add
add
push
aam
lret
fiadds
mov
push
add
add
pop
add
add
sub
pop
leave
push
add
add
pop
ret
push
lea
push
lea
push
push
push
push
call
add
pop
hlt
mov
mov
push
add
add
mov
add
add
cmc
bound
out
fsubr
aam
jne
arpl
add
ja
lcall
cmpl
addb
in
in
out
iret
add
xlat
cmpsl
jp
ja
sub
pop
push
mov
push
push
call
pop
add
mov
jns
add
add
add
in
add
fdivr
add
push
jl
add
add
addb
in
clc
pop
add
push
dec
lea
pop
push
push
sub
pop
push
push
push
push
push
push
push
push
push
push
call
std
add
add
test
mov
add
mov
insb
loope
outsl
xlat
pop
mov
lods
mov
lret
mov
add
add
xchg
pushf
add
add
pop
int3
lock
pop
push
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
sti
add
xchg
mov
arpl
add
scas
add
jnp
rcrl
mov
pusha
add
fcomps
inc
cld
or
add
push
push
push
push
push
lea
push
lea
push
push
push
call
add
lret
add
push
iret
add
mov
add
mov
cli
fcmovnu
add
into
add
jle
add
jp
lea
lds
add
rolb
ret
lods
mov
jecxz
int3
add
add
add
subl
in
loopne
call
push
push
push
push
push
push
lea
push
lea
push
call
test
mov
add
add
mov
scas
imul
add
add
add
xchg
add
pushf
popa
add
sub
pop
call
subl
push
push
push
call
cwtl
mov
add
jns
add
mov
add
iret
push
add
repnz
xor
roll
add
push
mov
mov
add
add
mov
cmc
outsl
fidivl
add
pop
add
add
add
std
add
sub
pop
cmpl
jne
push
add
sub
pop
pop
push
sub
not
pop
pop
push
lea
push
call
add
jbe
ret
mov
add
add
add
int
cmpsb
add
fistps
push
add
iret
scas
jne
lret
add
in
clc
pop
pop
push
sub
add
pop
pop
leave
push
push
push
push
call
mov
jecxz
cmc
add
adc
pop
add
addb
lret
add
pusha
gs
addb
add
add
xchg
fcom
add
lock
lcall
push
push
push
push
push
push
push
call
imul
push
add
mov
lret
push
pop
pop
add
add
add
mov
add
aad
add
pusha
sti
add
out
repnz
cmpsl
js
add
add
add
fcmovnb
out
lods
mov
add
je
add
push
mov
add
pop
add
movsl
lret
sub
pop
mov
add
push
push
push
lea
push
push
call
rolb
add
add
xchg
mov
mov
imul
add
add
into
jb
fadds
mov
lods
pusha
data16
lret
add
push
add
sub
pop
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
xchg
add
call
test
jl
popf
add
enter
mov
testb
add
leave
add
mov
add
repnz
add
push
push
push
push
lea
push
call
movsl
add
jb
stos
stos
add
add
add
movsl
add
jecxz
add
loope
fldl
add
add
rcrl
pop
jp
add
add
add
add
add
add
add
cwtl
mov
fwait
jge
add
pop
int3
jge
roll
xchg
sub
pop
push
push
pop
push
push
push
push
push
call
add
add
add
add
push
out
mov
loopne
sahf
add
add
jne
cwtl
add
add
add
testb
xchg
mov
mov
scas
sub
pop
mov
lea
push
lea
push
push
call
mov
jo
lock
add
jmp
mov
addl
mov
mov
imul
iret
out
mov
mov
jge
add
clc
movsl
add
sub
pop
sub
mov
push
push
push
push
call
add
jmp
rcl
mov
icebp
jo
icebp
add
xchg
cli
in
movsl
stos
add
add
add
neg
mov
pushf
cmpsb
cwtl
orb
sub
pop
shr
add
push
push
lea
push
push
push
push
push
push
push
push
call
pop
jp
add
int3
push
aam
add
add
arpl
rcrb
add
push
sti
add
mov
pop
add
jae
pop
jge
jp
bound
std
add
pushf
add
add
lcall
inc
cld
mov
push
lea
push
push
push
lea
push
push
push
call
xchg
test
ror
notl
cmpsl
add
push
mov
add
fcomi
fiaddl
rolb
mov
cmc
jmp
add
cltd
lret
add
gs
add
add
insb
mov
ret
add
add
fwait
mov
call
in
lcall
inc
or
ror
lea
pop
add
mov
push
rol
add
pop
mov
cmp
jne
push
lea
push
push
lea
push
call
notl
hlt
push
push
add
xchg
push
nop
fsubl
add
jne
leave
add
add
pop
out
iret
popa
add
add
aad
addl
cmc
add
add
loopne
mov
mov
lock
lcall
cwtl
fadds
add
jne
push
push
lea
push
lea
push
lea
push
push
call
add
ret
jmp
in
out
add
add
add
cld
pusha
scas
faddl
add
add
add
faddl
xlat
loopne
stc
add
push
add
stc
cld
push
addr16
add
insb
int3
in
add
test
mov
imul
lcall
inc
adc
push
push
push
call
gs
add
test
add
jp
andb
push
mov
add
add
jae
hlt
scas
lock
cmpsl
add
jns
add
jae
scas
addb
push
mov
lock
ja
add
xlat
jge
add
flds
loop
popf
add
icebp
xchg
sub
pop
movl
jmp
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
add
add
les
ret
sar
addb
add
shlb
add
add
add
mov
pop
add
pushf
add
jo
shlb
in
mov
push
xchg
outsl
frstor
push
jecxz
add
in
pop
mov
loopne
sub
pop
mov
push
not
add
pop
mov
sub
jne
push
rol
not
inc
pop
mov
push
sub
add
pop
movl
jmp
push
push
push
push
push
call
add
ja
loope
add
fsubp
add
test
cltd
lcall
shr
shlb
add
mov
pop
mov
fwait
add
lret
add
mov
leave
add
xchg
loopne
add
lcall
inc
cld
push
lea
pop
mov
push
push
push
lea
push
push
push
push
call
add
scas
xlat
mov
lods
add
add
add
jb
add
add
ja
add
sarb
add
into
mov
lea
add
add
add
xchg
sub
pop
cmp
jne
push
sub
pop
mov
movl
push
add
pop
jmp
mov
push
push
push
push
push
push
push
push
call
pop
add
jns
add
add
pop
data16
in
test
mov
add
add
add
in
andb
fwait
les
add
testb
pop
add
sub
pop
cmpw
jne
mov
push
add
sub
add
pop
movl
jmp
push
rol
sub
inc
sub
pop
pushl
push
push
lea
push
push
call
mov
xchg
rolb
add
out
push
sar
add
add
icebp
lret
roll
pop
popa
add
lcall
push
shl
shr
ror
pop
mov
mov
push
lea
not
inc
pop
mov
push
push
rol
push
push
pop
add
add
rol
lea
sub
not
pop
inc
add
pop
push
push
push
push
lea
push
lea
push
push
call
add
add
jge
add
pusha
shl
call
lds
loop
add
add
aam
in
mov
fwait
clc
add
add
add
add
jno
roll
add
lcall
mov
sub
pop
push
call
push
push
push
push
push
push
call
add
popa
pop
movsb
push
mov
fldenv
lahf
bound
add
popa
add
test
testb
icebp
out
cwtl
movsb
fiaddl
ja
aam
add
out
push
jmp
lea
sti
lea
scas
xchg
pusha
js
in
call
int3
fldz
ret
rorb
add
sbb
push
inc
add
push
xor
add
inc
lea
xor
sub
pop
sub
pop
push
add
pop
push
call
push
shl
dec
pop
cmpl
je
push
push
sub
push
xor
add
xor
sub
rol
shl
not
add
pop
lea
sub
pop
push
push
push
push
push
call
add
mov
add
call
loopne
add
add
cmpsl
test
movsl
push
xchg
add
jns
add
add
fiaddl
ljmp
pop
add
push
scas
repnz
pop
push
call
push
push
push
push
push
lea
push
call
in
add
add
add
movsl
fsts
add
add
xchg
in
add
push
sti
lcall
add
ja
sub
pop
cmpl
je
push
push
ror
lea
inc
push
push
pop
add
shl
not
sub
lea
sub
shr
sub
pop
inc
lea
shr
shl
pop
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
add
aam
add
pushf
icebp
ret
test
pop
xchg
lret
add
add
outsl
jge
add
sub
pop
push
push
shr
add
lea
pop
call
cmpl
je
push
push
sub
ror
add
push
and
add
xor
not
sub
add
pop
ror
sub
pop
push
dec
dec
pop
push
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
cmpsb
add
mov
mov
add
outsl
repnz
fwait
add
add
add
fst
add
add
xchg
lret
jnp
add
pop
mov
pop
xchg
out
popa
add
jmp
in
fdivr
lcall
int
add
cmpl
je
push
push
inc
push
or
not
add
rol
add
sub
xor
pop
ror
add
pop
push
push
push
push
push
lea
push
push
push
call
cli
aad
push
jge
push
jo
aam
pop
add
add
cmc
add
add
pop
add
add
jbe
push
fldl
add
cmpsl
xchg
mov
add
push
push
push
push
lea
push
lea
push
push
push
push
call
add
mov
out
mov
add
lds
mov
add
xchg
ljmp
lret
out
pop
scas
cld
add
pop
mov
fwait
push
add
call
test
test
push
fcompl
mov
hlt
cmc
add
mov
fdivr
lcall
int
add
push
push
push
call
scas
lods
add
lret
popf
add
add
add
add
add
mov
add
pop
out
xchg
sarb
sahf
add
add
jge
imul
repnz
add
jno
insb
add
mov
add
add
popf
add
into
add
cmp
or
int3
je
push
push
push
and
add
sub
sub
pop
add
not
xor
pop
push
rol
pop
push
push
sub
pop
call
cmpl
je
push
push
sub
push
or
inc
add
rol
sub
pop
add
dec
inc
pop
push
push
push
lea
push
call
cltd
rolb
add
call
icebp
sar
sahf
add
add
add
add
rcll
fiaddl
mov
add
mov
add
out
int
out
fcoml
fiaddl
push
add
mov
cmc
icebp
add
add
push
shl
sub
xor
add
pop
call
cmpl
je
push
push
push
xor
add
add
ror
inc
add
sub
rol
pop
rol
not
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
ja
add
outsl
jae
imul
insb
sti
hlt
add
rolb
jp
out
mov
add
add
add
mov
fidivs
cmpsl
sub
add
rolb
scas
in
add
jns
call
add
call
push
push
push
push
push
push
push
call
lahf
add
push
mov
add
aad
orb
add
add
add
mov
fldl
int3
fcmovnu
popl
add
add
ficoms
in
add
add
jne
imul
in
in
lcall
cmp
rol
je
push
push
dec
shr
rol
ror
push
and
add
sub
add
shr
sub
shl
sub
sub
pop
inc
dec
dec
pop
push
push
call
fs
xchg
add
addl
add
fisttpll
cmp
add
xchg
les
add
cmc
cmpsb
add
mov
mov
add
xchg
add
in
add
rolb
jo
faddp
add
jl
js
xchg
fldenv
xlat
jge
rcrl
leave
fistpll
nop
push
add
add
sub
pop
push
push
sub
lea
pop
call
push
push
push
lea
push
call
add
push
mov
add
add
stos
add
add
loope
pop
add
xchg
data16
add
fnstcw
test
push
add
mov
pop
jge
mov
std
imul
add
add
add
xchg
imul
sub
pop
cmpl
je
push
push
sub
push
and
add
lea
sub
rol
shl
sub
pop
lea
add
pop
push
push
push
push
lea
push
lea
push
push
call
jl
add
add
mov
add
add
enter
jnp
out
push
movb
fwait
xchg
ja
mov
out
add
cli
int3
add
push
rolb
mov
add
add
stos
add
cmpsb
mov
add
faddl
cmc
sub
pop
push
push
shr
pop
call
cmpl
je
push
push
push
xor
add
sub
sub
not
pop
lea
shr
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
add
push
add
add
add
add
add
jno
pushf
outsl
xchg
xlat
loopne
fwait
push
add
int
add
add
mov
fisubl
addl
faddl
aad
add
jnp
add
add
lds
test
bound
lahf
sub
pop
push
call
push
rol
pop
cmpl
je
push
push
not
lea
push
and
add
sub
not
sub
rol
not
pop
xor
add
pop
push
not
pop
push
call
push
shl
pop
cmpl
jne
mov
push
lea
push
push
push
lea
push
lea
push
call
mov
iret
pop
add
mov
xchg
xchg
nop
mov
nop
add
outsl
fincstp
push
arpl
adc
add
jb
xchg
fiadds
stos
add
movsb
xchg
testb
mov
push
pop
sub
pop
movl
push
push
lea
push
push
push
push
push
push
lea
push
push
call
cltd
out
ljmp
add
sbb
add
jns
cli
mov
add
add
fdivr
lcall
pop
add
add
pop
xor
push
pop
pop
push
inc
rol
pop
pop
push
push
call
push
enter
pop
add
fwait
repnz
add
add
popf
mov
mov
jne
testb
add
add
jmp
add
add
flds
push
lea
push
push
call
test
fildl
insb
add
lret
mov
scas
pop
mov
test
out
add
repnz
mov
add
mov
mov
mov
xchg
fldl
popf
add
xor
add
in
mov
add
out
scas
add
pop
ret
add
lea
imul
push
add
hlt
pop
pop
push
push
push
call
mov
movsb
add
xchg
add
mov
lcall
clc
add
add
jnp
flds
stos
fwait
loopne
test
add
mov
in
hlt
pop
leave
push
push
push
push
call
mov
add
int
add
mov
pop
jmp
pop
js
add
out
push
in
popf
add
into
stos
ffreep
sahf
repnz
repnz
add
aam
outsl
add
mulb
loope
push
sub
pop
ret
push
pop
push
push
lea
push
push
push
push
push
call
std
mov
mov
add
lret
testb
mov
rolb
fwait
popa
pop
add
xchg
jp
lret
mov
jb
scas
lods
fucomip
rcrb
jl
mov
js
in
call
inc
xor
pop
add
push
dec
not
lea
pop
cmpl
jne
push
push
sub
sub
inc
push
or
inc
add
shr
ror
inc
sub
ror
pop
dec
pop
push
lea
dec
pop
pushl
push
pop
call
push
lea
push
lea
push
push
call
bound
nop
add
add
loopne
jge
xchg
push
jb
popa
add
notl
pushf
add
add
scas
add
jle
into
into
add
mov
sub
pop
push
push
dec
shl
pop
call
jmp
push
lea
push
lea
push
lea
push
push
push
call
stos
int3
sahf
push
loope
add
push
push
js
add
les
add
sahf
fsts
add
mov
popa
xchg
iret
addb
add
fdivl
xchg
add
arpl
add
mov
roll
add
sub
pop
cmpl
je
push
rol
add
lea
pop
cmpl
jne
push
ror
pop
mov
push
push
push
push
lea
push
push
push
call
addb
push
add
mov
add
jnp
scas
hlt
add
add
fcoml
fcmove
int
movsb
xchg
jns
call
sub
pop
call
push
lea
push
push
push
lea
push
call
test
push
add
add
add
mov
mov
push
jnp
push
add
add
xchg
add
mov
fcoml
scas
add
fucom
mov
stos
mov
push
mov
mov
pop
add
sti
lcall
lcall
push
push
lea
push
push
push
push
push
call
mov
shl
add
mov
mov
add
popf
test
test
add
add
jb
pushf
push
xchg
mov
stos
add
mov
mov
sub
pop
jmp
push
push
call
add
ror
icebp
fisttps
sahf
add
leave
mov
addr16
test
add
mov
cmc
fiadds
mov
cmpl
jne
push
push
shr
not
sub
sub
push
and
add
lea
shl
sub
lea
sub
sub
not
pop
rol
add
shl
add
pop
push
add
xor
pop
pushl
call
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
les
shlb
stos
mov
stos
add
mov
testb
mov
add
add
add
cmc
add
add
mov
add
xchg
pushf
pop
sub
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
call
jb
out
add
fnstenv
add
add
add
iret
pop
push
testl
xchg
add
out
test
add
rcrl
add
add
jmp
add
add
jne
cmpsl
push
pop
add
in
xlat
sub
pop
call
push
sub
add
sub
shr
pop
jmp
push
push
push
call
add
popf
fnstcw
mov
add
ja
add
test
rolb
lret
add
div
leave
lods
add
add
sar
add
add
add
sub
pop
cmpl
jne
mov
push
push
push
push
push
push
lea
push
call
add
add
push
add
add
add
add
pop
mov
add
pop
incb
ljmp
stos
add
lcall
add
add
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
push
mov
leave
add
enter
mov
add
add
push
mov
jne
push
mov
add
pop
and
mov
movsl
mov
data16
lcall
push
push
not
rol
add
lea
push
and
add
shl
shr
sub
xor
shl
pop
add
dec
add
pop
push
not
shl
pop
pushl
push
push
lea
push
call
cwtl
mov
add
imul
add
add
ljmp
enter
add
add
xchg
ffreep
addb
mov
in
shl
pop
add
lods
add
add
out
add
je
sub
pop
call
call
push
push
dec
inc
add
shr
push
or
not
add
add
sub
lea
add
pop
dec
ror
add
pop
push
shr
dec
xor
pop
pushl
call
push
sub
shl
xor
rol
pop
call
push
push
dec
sub
shl
push
push
pop
add
sub
xor
rol
rol
sub
inc
pop
pop
push
lea
push
push
push
push
push
push
lea
push
push
lea
push
call
add
push
add
push
add
add
add
ja
jns
add
add
hlt
pop
pop
popa
loope
push
add
mov
add
in
cld
call
in
fcomps
jne
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
jecxz
xchg
jo
add
lock
add
add
mov
add
repnz
clc
lcall
pushf
enter
lret
lcall
xchg
mov
negl
inc
add
sub
pop
call
push
add
shr
pop
call
push
push
add
ror
push
xor
add
lea
sub
add
rol
pop
ror
sub
pop
push
push
lea
push
lea
push
call
roll
addl
add
outsl
add
push
cmpsb
subb
add
add
add
add
push
jbe
push
movsb
push
add
add
add
add
arpl
stos
pop
pop
add
mov
pop
imul
jne
je
enter
ja
add
stos
fisubrl
jne
push
ror
pop
call
push
shr
ror
pop
call
push
push
sub
inc
push
or
not
add
xor
sub
rol
lea
shl
inc
pop
ror
pop
push
add
xor
inc
lea
pop
pushl
push
push
push
push
push
push
push
push
call
xchg
shlb
add
add
jbe
mov
data16
mov
mov
xchg
test
jne
mov
add
add
lcall
hlt
add
add
lret
add
xchg
add
pop
add
pop
add
add
add
movl
call
push
lea
pop
call
push
push
dec
sub
add
rol
push
xor
add
shl
sub
lea
inc
pop
sub
pop
push
push
push
call
test
add
out
outsl
add
jmp
add
add
add
add
add
push
lret
add
movsl
add
enter
jns
jge
add
add
pop
scas
add
add
in
add
pushl
push
push
push
push
lea
push
push
lea
push
push
push
call
out
out
jle
mov
mov
add
rclb
int
movsb
fiadds
add
js
pop
xorl
pop
add
add
xchg
fwait
mov
add
testb
cmc
lcall
mov
add
cltd
clc
push
lock
add
mov
xchg
add
sub
pop
call
call
push
push
push
push
pop
add
dec
xor
sub
shl
pop
shr
pop
push
xor
sub
pop
pushl
push
push
push
push
push
push
push
lea
push
call
mov
iret
add
push
jbe
loop
add
iret
add
jl
add
add
add
add
sahf
add
out
insb
add
add
sub
pop
call
call
push
push
add
sub
ror
ror
push
or
inc
add
add
sub
add
pop
inc
rol
xor
add
pop
push
push
lea
push
call
fimull
add
jge
pushf
xacquire
xlat
sub
js
add
mov
ret
rolb
mov
ret
add
add
add
add
add
jne
lock
mov
add
add
add
imul
out
add
add
add
add
mov
in
arpl
pop
add
in
hlt
lcall
jne
call
push
push
lea
push
push
push
push
push
call
js
add
cltd
add
jecxz
add
push
je
push
lea
add
mov
pusha
mov
fldl
insb
cmpsb
push
mov
add
call
mov
cmpsl
add
fidivrl
jno
xchg
roll
mov
mov
jp
mov
add
xorl
pop
add
pop
js
add
sub
pop
call
push
push
lea
push
sub
add
dec
xor
sub
sub
rol
shr
pop
sub
shr
pop
push
dec
rol
shl
pop
pushl
push
dec
dec
pop
call
push
push
push
push
push
push
push
call
shlb
jp
lret
add
loopne
mov
cmpsb
movl
popa
add
lahf
add
loope
mov
mov
add
add
enter
jle
js
add
push
add
sub
pop
call
push
push
add
not
push
or
inc
add
not
shr
sub
sub
inc
sub
pop
not
shr
pop
push
rol
shr
sub
pop
pushl
push
not
pop
call
lea
push
push
push
call
mov
je
jmp
add
js
mov
mov
add
out
add
add
push
add
int3
add
xchg
loop
out
add
add
push
leave
data16
insb
add
push
push
jbe
push
cli
xchg
mov
lcall
call
push
push
add
shl
shl
push
sub
add
rol
add
sub
add
pop
pop
push
add
sub
add
not
pop
pushl
push
push
push
push
push
push
push
push
call
jns
pop
xchg
add
add
repnz
lret
add
jge
add
mov
add
int3
add
add
bound
add
add
rcr
mov
xchg
add
add
add
mov
lds
add
add
outsl
sub
pop
call
push
lea
push
push
push
push
push
push
push
call
cli
jb
add
add
test
movsb
push
mov
scas
add
jns
pop
mov
add
std
sub
pop
call
push
push
sub
push
or
inc
add
shl
sub
sub
shl
shr
pop
shr
pop
push
sub
pop
pushl
call
push
ror
sub
add
pop
call
push
push
shl
sub
shr
push
push
pop
add
lea
xor
rol
sub
shl
rol
pop
shr
shl
inc
add
pop
push
lea
push
push
push
call
add
add
add
push
jmp
push
addb
popf
scas
out
scas
testb
stc
add
jp
int
pop
add
lret
xchg
fadds
add
add
jno
add
add
add
pop
mov
mov
pushl
call
push
inc
pop
call
push
push
ror
push
xor
add
sub
xor
add
sub
xor
add
pop
dec
pop
push
sub
not
lea
pop
pushl
call
push
push
dec
dec
push
or
inc
add
not
xor
not
shr
sub
add
pop
add
shr
xor
pop
push
push
not
shl
sub
shr
push
xor
add
add
sub
inc
xor
sub
pop
inc
lea
dec
pop
push
pop
call
push
push
push
lea
push
call
fwait
push
add
test
add
stos
into
add
add
flds
add
add
pop
add
push
add
mov
in
lock
lcall
push
lea
inc
shl
pop
dec
jne
push
add
pop
call
push
push
dec
sub
inc
push
sub
add
inc
add
inc
sub
add
pop
add
ror
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
call
imul
add
jp
ljmp
push
xlat
pop
add
push
fistps
xorl
add
ficoml
xbegin
lcall
jne
push
push
lea
push
push
lea
push
call
jecxz
add
mov
jge
out
jns
in
add
int3
negl
in
leave
loop
pusha
add
push
add
pop
xchg
add
scas
add
add
add
test
add
push
stos
mov
mov
mov
testb
lock
fwait
sub
pop
call
push
pop
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
add
addr16
test
in
cmpsl
add
add
int
subb
add
in
add
cwtl
cmc
repnz
fdivrs
je
add
push
add
push
add
movsb
leave
in
pop
xchg
arpl
mov
movl
cwtl
rolb
sub
pop
call
push
ror
not
pop
mov
push
push
inc
shl
inc
shr
push
or
not
add
inc
sub
add
pop
xor
sub
pop
push
push
push
push
push
push
push
call
aad
mov
jmp
add
in
add
bound
add
jae
mov
mov
add
add
jecxz
test
in
push
lea
ljmp
add
pushf
pop
mov
cmpsl
xchg
pop
add
mov
loop
sub
pop
pushl
push
lea
pop
call
lea
push
push
push
push
push
push
push
push
lea
push
push
call
add
clc
lock
mov
call
arpl
stc
add
add
mov
add
shlb
mov
in
in
popa
add
lcall
mov
push
sub
pop
push
push
push
push
call
out
mov
xchg
add
int
push
add
roll
jle
pop
shrl
pusha
into
add
push
xchg
faddl
xchg
add
add
mov
pop
mov
mov
mov
mov
subb
sub
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
bound
add
add
faddl
cwtl
mov
add
jae
in
fbld
add
add
add
add
loop
push
sub
pop
push
push
push
push
push
lea
push
call
pushf
aad
jp
jnp
filds
stos
insb
lcall
add
ljmp
add
push
jge
add
add
test
add
jae
add
add
add
cltd
mov
in
pop
call
push
inc
inc
inc
pop
lea
push
push
rol
inc
lea
push
or
not
add
shr
sub
shl
pop
inc
shl
inc
lea
pop
push
xor
pop
pushl
call
push
add
ror
not
pop
push
call
push
push
not
push
xor
add
shl
sub
add
add
sub
pop
sub
sub
not
pop
push
lea
push
push
push
push
call
std
lret
xchg
mov
add
jno
cmc
add
mov
add
imul
add
adcb
mov
fimull
add
push
jns
add
loopne
add
call
clc
movb
add
add
add
fidivs
test
pop
pushl
call
push
push
push
push
push
lea
push
push
push
call
add
adcl
test
test
xchg
xchg
xchg
aam
test
mov
out
addb
add
rcrl
out
popf
push
add
call
add
fcmovb
fildl
loopne
call
mov
push
dec
not
pop
lea
push
push
add
push
push
pop
add
add
sub
lea
sub
pop
sub
pop
push
xor
sub
dec
pop
pushl
call
push
ror
lea
pop
lea
push
sub
sub
shl
inc
pop
push
push
push
lea
push
lea
push
push
push
push
call
jnp
push
add
push
int
xchg
add
xchg
bound
jecxz
fcomi
add
pop
add
out
shlb
jb
movsb
pop
pop
xchg
sahf
jge
push
jno
in
in
lcall
add
cltd
push
push
push
push
call
add
push
iret
pusha
cwtl
scas
movsb
addl
nop
jle
push
ja
add
mov
test
add
xchg
add
add
rolb
jno
out
pop
mov
add
mov
jbe
popa
lods
push
jge
mov
rolb
repnz
add
add
lcall
add
jne
push
push
not
not
push
or
not
add
shl
sub
sub
shr
pop
shl
xor
pop
push
inc
rol
add
pop
push
push
xor
pop
call
push
push
sub
shl
sub
push
or
inc
add
sub
add
inc
sub
rol
sub
add
shr
pop
sub
pop
push
push
push
push
push
push
push
push
push
push
call
mov
add
scas
mov
lahf
pop
xchg
cwtl
jb
testb
push
loopw
add
rcr
in
outsl
mov
scas
push
add
in
sub
ja
cwtl
addl
jnp
add
add
cltd
pop
fsubs
ljmp
ljmp
add
data16
jp
add
sub
pop
pushl
call
push
ror
not
pop
push
call
push
push
not
xor
shr
push
sub
add
rol
shl
sub
lea
add
pop
ror
pop
push
ror
not
ror
pop
pushl
push
shl
xor
shl
lea
pop
call
push
lea
not
add
pop
call
push
push
push
push
call
add
test
add
xchg
jmp
add
iret
test
testb
pop
add
xlat
add
aam
je
loope
popa
add
loop
xchg
jns
mov
gs
mov
in
lock
jmp
push
push
call
popf
je
andb
add
mov
xchg
movsl
in
add
add
lcall
out
add
int
mov
les
clc
aam
add
pop
in
add
add
movsl
arpl
mov
mull
add
xchg
sti
pusha
sub
pop
pushl
push
xor
sub
dec
pop
mov
push
push
push
push
push
push
push
push
push
push
call
arpl
add
pop
aam
flds
sahf
fmuls
int3
rolb
xchg
mov
fwait
add
add
lock
rcrl
frstor
imul
add
xchg
push
jmp
xchg
hlt
mov
cwtl
add
add
add
add
sub
pop
jmp
push
push
sub
lea
push
xor
add
ror
rol
shl
sub
dec
pop
xor
sub
ror
pop
push
lea
push
push
call
ror
add
pop
add
out
imul
hlt
add
imul
pusha
mov
add
pop
add
in
hlt
pop
pushl
push
push
lea
push
push
push
push
call
add
fwait
push
test
add
popl
mov
add
add
fildl
addl
add
mov
cld
sub
pop
call
push
push
call
add
popl
into
scas
xchg
add
add
cli
lods
add
mov
add
out
nop
add
add
add
pop
pop
flds
mov
outsl
out
jge
stc
jl
add
jl
test
ret
mov
js
add
mov
jae
xchg
out
sub
pop
push
call
push
push
add
ror
sub
xor
push
push
pop
add
sub
dec
sub
lea
ror
sub
pop
shr
dec
inc
sub
pop
push
push
push
push
push
lea
push
lea
push
push
call
add
cwtl
add
fldl
mov
iret
lods
popa
add
xchg
add
add
in
iret
jbe
add
cli
add
je
pop
add
pop
cli
fildl
jge
data16
js
add
insb
rcll
nop
std
imul
jne
mov
add
sub
pop
pushl
call
push
dec
dec
pop
push
push
shr
shl
inc
not
pop
call
push
push
push
push
push
call
pop
data16
add
nop
icebp
add
nop
arpl
add
iret
add
mov
add
mov
xchg
mov
gs
roll
loopne
xlat
arpl
add
pop
mov
nop
shlb
arpl
xchg
add
sub
pop
leave
add
push
lea
push
push
push
push
push
push
call
test
add
add
add
add
add
mov
add
bound
xchg
ljmp
add
lret
add
jno
pop
out
push
in
pop
pop
push
add
add
sub
shl
pop
pop
push
xor
pop
xor
inc
push
push
lea
push
push
call
mov
add
add
xchg
add
mov
add
jns
add
add
push
jecxz
mov
add
mov
out
push
in
pop
add
jecxz
add
add
mov
pop
ret
push
add
ror
pop
leave
push
ror
pop
ret
push
push
push
push
lea
push
lea
push
push
push
push
call
std
std
add
mov
cwtl
rolb
add
loope
add
nop
pop
add
nop
sbbb
cmc
push
add
sarb
add
stc
popa
add
fyl2x
pop
add
mov
mov
add
stos
cli
repnz
sahf
imul
sub
pop
push
push
push
call
add
jle
std
test
add
in
mov
mov
add
lahf
repnz
test
add
pop
add
jno
add
add
in
hlt
loopne
movsl
scas
cld
cwtl
add
jno
loop
add
add
add
add
mov
in
clc
lcall
in
push
push
push
push
push
push
push
call
hlt
cwtl
mov
add
add
add
cwtl
add
add
add
rcll
xchg
jne
add
add
loope
int3
lret
fs
add
add
add
rolb
mov
cltd
cmpsb
sub
pop
cmpl
jne
mov
push
inc
rol
pop
jmp
push
lea
push
push
push
push
push
push
push
push
call
add
xlat
add
add
add
je
add
add
fwait
add
mov
add
movsl
add
add
mov
mov
loop
add
add
add
les
add
push
std
sub
pop
mov
push
lea
not
add
lea
pop
and
xor
push
push
push
push
lea
push
lea
push
push
lea
push
call
mov
pop
add
stos
repnz
mov
clc
mov
stos
push
subb
add
aam
add
popf
add
lea
push
add
out
faddl
add
nop
pop
scas
pop
add
leave
mov
fiaddl
add
int
fstpl
xchg
push
add
test
push
neg
adc
push
push
push
lea
push
push
call
pushf
cmpb
xchg
imul
js
pushf
pop
mov
add
out
add
jb
pop
out
mov
add
mov
ret
push
in
test
xchg
mov
add
rcl
add
add
flds
add
movsb
arpl
rolb
dec
call
call
ror
pop
dec
push
lea
push
call
stc
fwait
add
mov
add
add
add
lock
add
pop
add
add
add
add
xchg
ljmp
jnp
in
clc
lcall
jmp
jmp
push
push
lea
push
call
jbe
add
filds
into
push
add
add
in
jle
aad
mov
faddl
add
lret
fisubs
mov
xchg
je
add
addb
cld
xlat
ja
xlat
add
add
sti
add
pop
xchg
add
in
hlt
lcall
add
add
push
not
add
lea
shr
pop
pushl
push
push
push
call
mov
imul
in
cmpl
sar
in
add
mov
mov
addr16
test
xchg
cmc
cli
scas
add
test
add
leave
popl
sub
pop
pop
sub
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
add
mov
testl
xchg
insb
sarl
add
xchg
push
add
cmpsl
add
js
jmp
movsl
cmc
add
add
test
mov
jmp
add
sub
pop
cmp
jne
push
push
lea
push
call
push
add
add
mov
loop
add
add
add
pop
jo
add
xchg
iret
mov
xchg
add
add
mov
mov
add
pop
jnp
add
add
add
add
lcall
enter
push
push
push
call
pop
pushf
xchg
add
lcall
or
out
mov
add
add
fldl
loope
fiadds
lea
pusha
add
mov
add
add
aad
jp
add
xchg
add
fdivrp
pusha
rolb
xchg
mov
add
sub
pop
sub
mov
push
dec
inc
pop
shr
push
push
push
push
lea
push
call
add
pop
sahf
lea
hlt
add
lahf
aam
add
sahf
add
add
loop
jl
lcall
popa
add
add
cmpb
mov
popl
add
jecxz
fucomp
lcall
add
fildl
insb
ljmp
fs
jnp
add
in
in
pop
add
sub
push
push
push
push
lea
push
lea
push
push
call
les
pop
mov
mov
shrb
ror
add
pop
push
cmpsb
add
mov
mov
add
in
mov
pushf
add
add
add
mov
mov
add
out
add
cmpsl
add
mov
fldcw
in
pushl
push
lea
pop
pop
push
lea
push
push
push
push
push
push
lea
push
lea
push
push
call
add
mov
mov
add
je
pusha
pop
clc
add
mov
add
roll
pop
sahf
lea
icebp
add
aad
call
xchg
hlt
repnz
lcall
jmp
pop
mov
cmp
pop
and
push
push
push
push
push
push
push
lea
push
push
call
fwait
mov
arpl
pop
add
subl
lret
lea
push
add
add
lds
lock
push
mov
in
add
hlt
ljmp
mov
mov
insb
lret
stos
movl
push
add
sar
add
sub
pop
sub
push
not
add
pop
cmp
jne
leave
push
push
call
andb
imull
add
add
stos
pop
add
pop
add
xchg
add
add
cmpsl
and
in
clc
pop
ret
push
push
lea
push
push
push
lea
push
call
mov
fldl
add
mov
les
mov
add
rcl
rolb
add
in
aad
add
mov
add
xlat
scas
add
push
iret
pop
mov
les
add
add
add
add
js
lods
add
mov
std
xchg
fisubl
lcall
mov
push
push
call
lret
push
add
shlb
mov
out
add
add
call
add
test
popl
out
push
jae
add
xchg
mov
fldl
test
push
cld
imul
scas
add
mov
in
clc
pop
add
push
push
push
push
lea
push
push
push
lea
push
call
in
push
subb
shl
push
mov
add
add
mov
test
roll
add
lret
fdivs
lcall
push
lea
push
push
lea
push
lea
push
push
push
push
call
aam
add
mov
lock
mov
add
mov
add
jb
imul
add
push
ja
mov
popf
add
rcl
lods
mov
iret
add
mov
add
loopne
push
push
not
shl
pop
push
push
shr
xor
sub
pop
push
push
push
push
lea
push
push
push
push
push
call
add
add
fwait
add
add
test
add
outsl
add
add
testb
mov
add
jne
fst
add
push
ret
add
jo
add
arpl
add
jne
add
addl
insb
clc
mov
add
add
mov
in
loopne
push
push
push
push
push
lea
push
lea
push
call
scas
lock
add
jns
add
add
sahf
mov
pop
insb
xchg
add
add
xchg
fadds
add
xchg
mov
enter
add
mov
xchg
add
fsubrs
nop
cwtl
cli
lret
jno
xchg
arpl
mov
sbb
add
add
ljmp
movsl
xchg
jnp
mov
pop
mov
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
lcall
add
popf
mov
and
jecxz
cmpsl
xchg
add
add
nop
out
pop
jne
call
add
sub
pop
lea
push
rol
shr
shr
sub
pop
sub
push
inc
sub
pop
mov
push
push
push
call
pop
mov
fdivl
pop
mov
add
test
in
mov
cmc
orl
jo
jp
add
add
mov
popf
cltd
test
add
into
add
jnp
int
roll
add
add
add
jmp
xchg
add
lods
add
add
sub
pop
shr
push
push
push
lea
push
call
push
jno
add
scas
imul
mov
add
roll
pusha
cmpsb
add
imul
shll
jno
add
in
lock
add
push
lea
rol
sub
pop
mov
add
push
ror
pop
mov
add
push
sub
inc
not
pop
xor
push
push
push
push
push
push
push
push
push
call
loop
jbe
cltd
mov
out
add
cli
mov
add
addr16
pop
add
add
add
mov
rolb
imul
add
sti
add
lcall
xlat
and
push
push
push
push
lea
push
push
push
push
push
push
call
movsb
pop
add
add
addl
in
movb
loope
xchg
add
cmc
mov
push
mov
add
mov
fdivr
lcall
rolb
sub
pop
rol
push
push
push
lea
push
push
push
push
push
call
add
rcrl
mov
add
mov
mov
add
aad
add
lds
popa
add
addl
mov
jp
add
push
addl
mov
push
sub
pop
xor
push
push
push
call
add
add
add
test
add
add
shrl
clc
shl
jne
pushf
add
add
gs
add
add
add
pop
add
add
add
sub
pop
inc
push
push
push
push
push
push
push
push
push
call
add
loope
push
xchg
pusha
jae
add
push
lret
pusha
mov
loope
fildl
add
xchg
add
xchg
lock
add
and
add
js
leave
ja
adcb
add
add
add
rorl
in
fcompl
cmp
jne
add
push
push
call
pop
add
xchg
add
fs
xchg
mov
add
pop
xchg
add
jmp
lea
xchg
mov
mov
mov
add
cli
add
add
clc
add
lcall
inc
or
test
adc
push
push
lea
push
push
push
push
call
call
pusha
pop
add
mov
mov
mov
arpl
add
loopne
add
add
add
fs
add
mov
lock
add
jb
add
push
addb
add
add
add
jbe
add
push
jp
in
in
lcall
jnp
add
test
std
call
sqrtps
cmp
or
lods
mov
add
fsubrl
mov
mov
cwtl
fs
push
lcall
aam
aam
add
xchg
mov
sub
pop
xor
push
lea
add
ror
pop
pop
push
lea
push
call
mov
rcr
iret
add
mov
mov
mov
add
add
add
mov
jb
icebp
add
jmp
sub
pop
pop
push
not
sub
pop
pop
push
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
rcrl
out
test
add
add
mov
movsl
rorb
pop
in
add
std
test
movsl
add
insb
sti
hlt
out
add
lcall
shl
mov
mov
cli
add
rolb
add
add
add
lcall
pop
push
shl
add
pop
leave
ret
push
rol
rol
shr
sub
pop
mov
push
shr
xor
pop
add
push
push
lea
push
push
push
push
lea
push
call
into
cmpsl
pop
roll
add
jp
add
add
add
add
gs
push
out
je
jbe
rcl
mov
mov
iret
movsl
je
jmp
xlat
sarl
roll
mov
push
pop
out
add
sub
pop
mov
push
push
lea
push
push
lea
push
call
fwait
shll
shl
jns
add
shll
add
mov
add
add
xchg
jno
stos
add
mov
mov
add
jge
add
in
mov
fucomi
pop
sub
pop
push
push
rol
pop
mulb
push
push
call
sti
push
add
xlat
add
add
mov
push
test
rolb
add
test
add
shl
xchg
add
sti
sub
pop
pop
push
push
push
push
call
jecxz
push
add
leave
add
ljmp
push
jmp
shll
pushf
push
into
test
jle
add
add
out
jo
mov
add
call
push
add
pop
push
call
push
push
push
push
push
push
push
push
call
add
add
add
xchg
add
leave
pop
add
arpl
stos
add
je
in
loope
add
mov
sub
pop
xor
pop
push
rol
sub
shr
add
pop
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
add
addb
shrb
add
scas
add
add
jl
pushf
add
add
add
bound
pop
add
lcall
jge
add
add
jne
mov
push
push
push
lea
push
push
push
lea
push
call
loop
xchg
add
pop
add
mov
cmpsb
add
add
add
ja
pop
add
add
mov
add
xchg
out
add
mov
rcrl
push
add
add
push
lea
not
xor
sub
pop
pop
push
push
call
gs
add
aad
mov
sarb
add
cld
imul
add
mov
pop
stos
mov
test
jo
pop
add
add
mov
pop
lret
mov
lret
jae
mov
aad
push
add
std
mov
mov
mov
je
pop
jge
test
lahf
cld
cli
add
add
sub
pop
leave
push
add
pop
ret
push
shr
add
pop
push
push
sub
lea
dec
sub
pop
mov
push
push
lea
push
push
push
push
call
xchg
add
les
add
add
add
add
int
add
add
test
mov
mov
cmc
jb
add
jne
nop
movb
mov
add
nop
test
data16
mov
clc
add
lods
push
jnp
testb
out
cmc
add
mov
loopne
int3
add
add
pop
je
in
call
add
push
lea
push
lea
push
call
add
xchg
cmpsl
add
add
pop
fwait
add
add
add
add
add
add
add
arpl
idivl
jae
add
clc
stc
addb
add
add
add
in
imul
add
int
push
icebp
icebp
data16
add
gs
pop
push
push
push
push
call
popf
add
add
jp
add
add
loopne
push
add
out
scas
out
add
add
jb
mov
lods
out
jnp
add
add
mov
mov
test
imul
mov
faddl
push
out
rcl
add
lcall
push
push
dec
xor
inc
shr
pop
push
push
ror
xor
pop
mov
push
lea
push
push
call
cmpsb
ljmp
out
mov
add
pushf
mov
divl
add
pop
std
pop
add
xlat
mov
test
add
add
mov
call
add
lcall
pop
loope
stc
add
push
add
add
add
fs
mov
aad
gs
out
sub
pop
push
push
push
call
xchg
add
add
addl
in
add
xchg
add
jo
add
xchg
loopne
jecxz
imul
mov
add
icebp
add
add
add
roll
add
jns
sub
push
add
push
add
hlt
add
jb
pop
aad
add
out
pop
pusha
add
add
addr16
sub
pop
pop
push
pop
lea
push
not
shl
lea
pop
sub
mov
push
rol
sub
add
pop
shr
push
push
lea
push
call
add
test
xchg
lods
mov
add
xlat
incb
add
add
cmc
cwtl
add
jne
add
add
add
add
fbstp
data16
mov
call
lcall
fimull
ja
push
push
push
call
jle
add
add
add
cmpsb
add
int
lock
popa
fildl
popa
mov
enter
ret
push
add
fs
add
add
addr16
xchg
lcall
xchg
mov
in
lock
add
push
lea
push
push
call
add
add
add
pushf
lret
add
jne
add
test
add
add
fstp
add
push
hlt
lcall
jae
popl
push
push
push
push
push
call
add
loop
mov
xchg
add
add
push
mov
push
add
add
aad
repnz
test
add
leave
add
lock
scas
add
mov
fildl
int
add
incb
lds
mov
jecxz
sub
pop
mov
push
lea
push
push
push
call
pop
xlat
jb
lea
ret
jns
push
add
cwtl
fcmovnbe
push
jl
int3
loope
rol
add
sti
add
ja
add
lea
add
mov
jge
enter
cmpsb
iret
add
lcall
stc
push
add
ror
dec
inc
pop
xor
push
push
push
push
lea
push
push
push
push
push
call
add
add
add
xchg
cwtl
mov
mov
add
add
add
js
pop
ljmp
pop
scas
add
js
adcl
mov
adc
push
push
push
push
push
push
call
scas
push
out
jecxz
scas
push
add
movl
into
add
fsts
and
add
mov
out
add
add
add
mov
testl
mov
jmp
loop
add
add
add
pop
aad
scas
in
mov
outsl
push
add
add
addb
in
call
mov
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
fcoml
push
jbe
add
add
scas
push
jns
shl
add
out
add
jo
pop
jne
test
loope
fwait
jecxz
add
mov
jo
mov
add
pop
subb
add
push
push
call
test
mov
outsl
jecxz
add
leave
movb
scas
fildl
xchg
add
add
icebp
in
test
insb
mov
stos
add
popa
add
add
lock
add
out
add
arpl
repnz
aam
mov
add
jge
scas
add
pop
xor
push
add
lea
shr
sub
pop
rol
nop
push
sub
ror
pop
nop
push
xor
rol
add
pop
xor
push
lea
push
call
add
add
addr16
incb
int3
jo
imul
imul
add
add
icebp
jo
andl
cmc
rolb
mov
scas
je
je
sub
pop
nop
nop
push
push
call
rcrl
mov
lcall
add
fadds
add
add
add
add
in
jnp
add
xchg
sub
pop
inc
push
push
push
push
call
push
add
mov
add
in
mov
jno
push
jae
add
add
filds
lock
add
push
push
add
enter
movb
fildl
mull
pop
nop
push
shl
rol
pop
nop
push
not
shr
rol
pop
cmpb
jne
push
pop
add
nop
push
dec
pop
nop
cmp
je
push
rol
not
sub
pop
nop
push
push
lea
push
push
push
push
push
call
divl
add
jb
clc
add
jno
add
push
pop
pop
ret
lahf
add
cld
insb
mov
add
add
in
fiaddl
push
mov
add
push
lea
push
lea
push
push
lea
push
push
push
push
call
pop
add
xchg
add
push
mov
add
lret
test
fcomps
test
cmpsb
test
cmpsb
cwtl
aam
add
add
js
xchg
imul
mov
out
test
cli
add
jecxz
int3
lods
push
add
add
add
lcall
push
push
push
push
push
push
push
push
push
push
call
add
cmpb
pop
add
repnz
jns
add
jmp
add
cmc
add
add
data16
add
jbe
add
mov
pop
nop
nop
push
not
pop
cmp
jb
push
lea
add
sub
pop
xor
push
push
push
call
pop
mov
add
add
add
add
add
nop
mov
add
fldt
add
add
pop
add
add
add
add
add
xchg
add
pushf
add
jle
fwait
add
bound
mov
fiaddl
add
jmp
push
push
call
jne
lret
mov
mov
pop
add
add
jno
add
cwtl
add
mov
lea
add
add
add
fistl
add
add
push
add
stos
mov
rolb
add
add
add
add
mov
mov
out
addr16
add
add
clc
lods
rolb
add
lcall
push
and
rcll
ljmp
jb
inc
sbb
xor
add
pop
add
push
inc
pop
mov
push
push
push
lea
push
lea
push
push
push
lea
push
call
mov
pop
push
add
in
add
pop
add
pop
xchg
out
add
pushf
les
jl
add
sub
pop
xor
push
push
lea
push
push
push
lea
push
push
call
add
add
jl
add
outsl
add
jb
outsl
add
test
add
add
add
leave
movl
add
add
add
add
push
sub
pop
xor
push
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
call
movsl
lods
add
in
les
fistpl
mov
add
test
pop
add
add
insb
insb
andl
push
mov
add
xchg
add
into
lock
xchg
jle
add
xchg
add
sub
pop
shl
xor
push
add
sub
inc
pop
shl
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
jp
add
stc
int3
out
into
add
mov
roll
mov
add
add
add
negl
add
add
add
lret
jp
rolb
lock
xchg
loope
mov
push
popf
jns
pop
testl
add
in
add
aad
add
xchg
scas
ljmp
dec
nop
add
mov
push
push
call
imul
xchg
mov
lds
add
ja
add
in
in
cltd
imul
imul
add
faddl
add
add
les
add
filds
add
mov
jbe
xlat
add
add
insb
add
rcll
add
add
add
mov
icebp
mov
ja
call
sub
pop
shl
push
push
call
add
test
lea
shrb
add
call
mov
out
push
aad
jmp
add
add
fsubp
xlat
shll
push
add
add
xlat
add
add
mov
pusha
out
pushf
test
clc
pop
xor
push
inc
lea
pop
mov
push
rol
ror
pop
add
push
push
call
add
push
loopne
add
icebp
loope
push
add
fsubp
arpl
push
add
outsl
add
add
add
ret
leave
push
popl
add
out
lds
in
clc
lcall
pop
push
lea
xor
pop
pop
push
push
push
call
pop
add
add
add
pop
add
jle
movsl
cmpl
pop
rcrl
negl
fwait
lret
loope
mov
jp
xchg
mov
jmp
lcall
leave
push
lea
push
push
push
push
call
add
jb
add
add
arpl
add
add
data16
popa
js
add
add
push
outsl
add
in
add
xlat
add
add
sub
pop
ret
push
push
push
push
push
call
xchg
add
pop
add
add
add
add
enter
add
pop
xchg
add
lds
scas
icebp
xchg
add
mov
mov
hlt
mov
add
lcall
push
push
push
push
push
lea
push
push
call
movsb
add
pop
add
cltd
cmc
jns
mov
scas
add
jo
xorb
add
jge
add
add
fiaddl
add
pusha
add
in
in
mov
push
not
inc
xor
pop
push
push
push
pop
push
push
push
lea
pop
mov
push
push
push
push
push
push
call
add
outsl
add
loop
add
out
add
add
add
xchg
add
cmpsb
add
add
fldenv
repnz
add
stos
pusha
add
loop
repnz
cmc
mov
add
mov
lcall
adc
jmp
inc
rol
pop
mov
push
lea
push
push
push
push
push
call
add
add
nop
stos
add
xchg
fildl
jle
add
add
push
add
lods
bound
jle
add
mov
test
add
test
icebp
roll
add
jns
jmp
test
je
mov
push
add
add
pop
test
je
mov
push
xor
pop
mov
push
push
push
push
call
mov
test
mov
pop
mov
pop
push
scas
movl
pop
add
out
push
mov
add
bound
std
jo
in
lock
mov
push
shr
inc
add
not
pop
inc
cmp
je
push
not
pop
test
je
push
inc
xor
lea
pop
mov
inc
push
push
call
aad
aad
add
add
testb
add
add
faddl
out
add
std
add
add
rcll
and
mov
filds
in
clc
lcall
rorb
test
add
shr
pop
test
jne
push
lea
shr
dec
pop
xor
pop
push
lea
ror
rol
ror
pop
pop
pop
push
sub
xor
pop
pop
push
push
lea
push
push
push
push
lea
push
push
call
push
insb
add
jno
cli
std
add
imul
add
add
add
add
add
repnz
mov
mov
add
nop
mov
add
lods
cmpsb
add
push
fiaddl
xchg
add
add
mov
into
sub
pop
leave
ret
push
shl
shl
xor
shl
pop
mov
push
lea
push
push
push
lea
push
lea
push
call
insb
add
cld
lahf
push
js
mov
add
xchg
add
push
xchg
pop
add
add
add
add
mov
stos
add
add
in
testl
mov
sub
pop
inc
push
lea
sub
shl
ror
pop
cmp
jne
push
push
push
push
push
call
add
xchg
add
mov
add
pop
pop
lods
mov
push
pop
add
pushf
jmp
arpl
lret
add
lcall
jle
mov
push
push
push
push
push
call
add
xchg
repnz
loopne
fadds
add
mov
push
lret
gs
add
add
in
jae
xchg
add
out
scas
add
pop
mov
add
pop
add
sub
pop
test
je
push
not
lea
not
pop
mov
push
dec
not
pop
add
push
push
lea
push
lea
push
push
push
push
push
push
push
call
addr16
jmp
jle
xchg
jnp
imul
mov
add
add
test
add
pusha
fs
add
push
lods
add
mov
in
jecxz
add
mov
in
add
pop
insb
pop
or
add
add
into
mov
add
fsubp
sub
pop
cmp
jne
mov
push
push
push
push
push
call
shll
add
jb
imul
xchg
add
add
add
add
test
add
stos
out
pop
mov
faddl
in
lock
xchg
add
add
cltd
fcompl
movsl
pop
add
add
add
sub
pop
test
je
push
add
lea
pop
mov
push
shl
sub
rol
pop
add
cmp
je
push
lea
push
push
push
lea
push
lea
push
push
push
push
push
call
push
bound
push
push
add
mov
add
add
push
movsl
nop
addb
jne
jne
cmpsl
data16
mov
cmpsb
push
lea
in
rcrl
addl
mov
add
fcomp
aad
sub
pop
jmp
xor
push
shr
shr
pop
pop
push
push
push
call
add
rolb
movsb
bound
add
add
mov
test
int
add
idivl
rcl
fadds
in
push
xchg
add
mov
add
mov
add
mov
xlat
lret
in
mov
test
add
in
hlt
lcall
push
push
call
add
cmc
xor
addb
imul
loopne
add
mov
add
mov
movsb
add
mov
add
jbe
add
cmc
sub
pop
pop
pop
push
ror
pop
leave
ret
push
lea
push
push
call
scas
stos
add
xchg
add
add
add
loope
jbe
sti
lahf
add
stc
fwait
je
mov
filds
add
add
add
movl
repnz
add
js
into
cld
mov
in
hlt
lcall
inc
call
push
lea
push
push
call
leave
pop
lahf
add
jb
leave
add
add
addl
xchg
fwait
mov
mov
int
je
add
rolb
lods
jne
xchg
add
xchg
sub
pop
pop
pop
push
lea
shr
pop
pop
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
outsl
stos
add
add
add
add
mov
testb
mov
push
mov
mov
lret
pop
leave
add
add
add
add
mov
add
mov
push
repnz
add
ja
add
leave
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
add
movsl
lahf
add
shrb
loopne
mov
je
add
add
mov
enter
mov
pop
int
stc
add
add
mov
test
cli
push
into
jle
pop
add
sub
pop
ret
push
rol
pop
mov
push
push
push
call
pusha
clc
icebp
fbstp
add
aam
pop
add
add
outsl
mov
add
add
add
xchg
push
mov
loopne
nop
add
push
add
sahf
add
lcall
push
inc
rol
rol
pop
pop
push
pop
pop
push
ror
add
rol
pop
pop
leave
push
not
pop
ret
xor
cmp
push
inc
cmp
xor
adc
and
adc
add
adc
adc
popa
cmp
xor
adc
mov
add
lret
sub
scas
into
jne
adc
fldenv
xor
xlat
push
dec
cmp
pop
lret
scas
cmp
push
arpl
dec
ficompl
dec
xchg
dec
inc
fwait
mov
ror
test
movsl
pop
add
mov
adc
xchg
mov
cmp
ljmp
test
negl
mov
mov
cmp
pop
fadds
iret
aaa
xchg
sar
inc
push
inc
mov
and
adc
lcall
in
xchg
pop
pop
inc
sub
mov
nop
cmp
and
and
and
shlb
push
cmp
bound
cltd
or
mov
jo
mov
pcmpeqb
mov
aam
xor
stos
sbb
pop
lds
and
sub
or
movsl
mov
mov
mov
les
inc
aas
je
ret
aam
jg
inc
xchg
jae
jle
cwtl
mov
xchg
jae
lret
rolb
bound
in
push
pop
cmp
loope
test
xor
aam
repnz
and
ss
sub
mov
sub
push
dec
dec
aas
inc
rolb
and
scas
pushf
stc
clc
cmpsl
pushf
fsubr
xlat
inc
dec
jecxz
push
xchg
cmp
sbb
pushf
in
into
mov
pop
cli
pop
push
popf
push
imul
ja
or
pop
in
inc
xlat
xchg
fldt
outsb
mov
repnz
inc
push
xchg
or
mov
je
scas
sub
inc
in
movsb
adc
or
push
jnp
andl
pushf
das
pop
xlat
mov
mov
in
shlb
fwait
add
pop
ss
dec
test
loopne
add
das
inc
mov
jl
mov
adc
out
es
cmp
mov
mov
sub
mov
inc
loope
push
mov
xchg
sub
cmpsb
cmp
or
stos
jle
in
repz
sbb
sbb
sub
mov
gs
or
mov
sub
int
mov
mull
adc
cmp
jl
out
test
xor
stc
jge
shll
bound
fidivs
lock
hlt
mov
jg
pop
test
frstor
les
adc
jb
sarb
sti
jbe
pop
xchg
call
mov
cli
dec
push
test
push
fnsave
mov
xor
xor
out
lock
push
cmp
add
imul
dec
xchg
dec
repz
loope
inc
mov
ds
mov
mov
out
mov
xchg
shl
push
bound
mov
jae
cmpb
pop
rcrb
mov
testl
push
jp
add
cwtl
mov
adc
cmp
push
xchg
shlb
ja
loop
and
fnclex
lcall
pop
rorb
andb
sub
push
xchg
addr16
or
inc
shrb
int3
es
jne
cmp
jo
leave
movsb
lcall
shl
dec
daa
cmp
loope
lods
cmpsl
pop
ret
lret
es
js
mov
push
arpl
fsubrl
sub
adc
push
pop
das
sbb
dec
xor
fadds
mov
jmp
insb
xlat
inc
lahf
stos
jle
jno
loope
shld
stc
imul
pop
mov
adc
fistl
mov
pop
cmp
sbb
imul
loop
dec
add
or
and
fisubl
clc
jl
repz
mov
jns
stos
xchg
outsl
xor
daa
push
call
shr
jl
ljmp
les
xor
mov
pop
fistl
jb
or
pop
xlat
fstl
push
scas
outsl
mov
in
mov
jbe
inc
inc
push
pop
nop
xor
xchg
aad
scas
mov
cltd
mov
ds
pop
cmp
andl
fstl
aaa
mov
adc
xchg
push
pop
iret
sub
out
in
lcall
add
call
shlb
rolb
xchg
ret
xor
sbb
xchg
add
sub
jns
jg
xchg
popf
inc
push
lds
int
mov
dec
mov
or
sub
cmp
cmp
sub
add
movsl
out
pop
xchg
add
cmpsl
fisubrl
add
insl
jnp
repz
dec
jge
mov
ficoml
jns
movsl
xor
incb
ror
sahf
outsl
add
xor
imul
push
fstpt
pop
adc
mov
mov
jb
add
fs
aaa
cmp
lret
dec
push
inc
dec
pop
sub
inc
repz
mov
sbb
sub
mov
jl
out
fsubrl
jle
push
adc
push
or
sub
call
fsts
mov
jae
cmp
adc
and
xorb
jns
cwtl
orb
icebp
fwait
out
push
enter
mov
xchg
push
pop
testb
sbb
data16
mov
push
sbb
xchg
and
pop
dec
inc
and
aad
jb
outsl
fcompl
mov
mov
xchg
xor
aad
aad
popa
mov
repz
jmp
movsl
cwtl
push
fwait
pop
pusha
sub
xchg
jae
and
bound
add
out
push
pushf
jle
push
mov
cmp
jnp
cmpsb
mov
popf
add
pop
jo
mov
cwtl
jb
ret
jl
inc
icebp
mov
push
sbb
js
xchg
dec
add
mov
jnp
enter
stos
inc
mov
cltd
mov
int
insb
mov
outsl
sti
cld
inc
loop
lahf
shrl
fucomi
mov
jg
xchg
rorb
jl
mov
testl
pavgb
cld
and
stos
dec
fildl
mov
jmp
aad
es
fucomi
ret
jne
int
pop
pop
int3
je
pop
std
sahf
mov
dec
xchg
les
data16
sbb
mov
repnz
add
je
ja
push
or
pop
pop
arpl
add
dec
pop
outsl
jg
out
sbb
xor
jne
xchg
xor
mov
insb
bnd
out
dec
xchg
pop
push
pop
out
xchg
mov
enter
imul
movsb
dec
mov
out
fnsave
js
bsf
xchg
shrl
ljmp
push
add
push
pop
inc
dec
or
movsb
test
or
mov
push
mov
ja
adc
xchg
pop
jns
cmp
mov
xor
xor
cli
sub
test
aad
xor
int3
mov
pushf
into
into
pop
and
and
cwtl
mov
mov
inc
jge
inc
or
mov
sbb
pop
or
xorl
stos
fwait
sub
mulb
adc
fiaddl
cltd
outsl
push
fisubl
enter
mov
movb
pop
and
mov
imul
mov
mov
gs
loopne
inc
push
lods
das
fcoms
inc
mov
push
dec
cmp
mov
push
jno
ffreep
movsb
push
outsl
jae
inc
sbb
jo
xor
lcall
adc
insb
jmp
aad
lret
into
call
shlb
icebp
imul
mov
cld
in
add
lds
mov
sahf
lret
xchg
imul
jg
jmp
fnstsw
mov
xor
sti
adc
dec
mov
leave
push
mov
adc
or
push
fnstsw
and
lcall
mov
dec
test
mov
push
sbb
loope
dec
loop
add
loop
loopne
jns
aad
pop
fdivrs
push
push
cltd
pop
mov
lock
or
ds
aas
lock
push
outsb
rcll
add
mov
push
lds
cmp
add
testb
mov
mov
sbb
pop
sbb
lods
adc
and
mov
inc
test
clc
pop
mov
negl
pop
jg
mov
inc
out
imul
inc
and
fwait
cmp
sub
int
sbb
xchg
out
sbb
mov
test
push
mov
sub
fwait
shlb
jbe
cmc
push
repz
pop
out
shrl
cltd
mov
and
pop
jno
sub
jp
sbb
xorl
mov
into
stos
mov
faddp
inc
cwtd
push
ret
xchg
ljmp
cmp
divl
icebp
push
push
sub
sbb
icebp
repz
jl
test
aaa
cmp
push
test
pop
leave
insl
popa
sub
push
call
ret
jnp
push
scas
daa
das
outsb
inc
outsl
jb
pusha
repnz
sbb
aas
pop
jno
jo
popf
clc
mov
pop
out
sbb
cmpb
sub
hlt
lea
arpl
outsb
insl
or
in
or
dec
and
ja
cld
or
test
sub
mov
shrb
jl
and
mov
pusha
add
test
aam
lods
cli
pop
mov
xchg
xlat
jne
jg
mov
test
aam
in
test
push
push
daa
shlb
sbb
xchg
push
push
lock
sbb
insb
lret
mov
mov
mov
stos
mov
mov
shll
insl
rorl
cmpsl
in
sbb
xchg
sarl
movntps
mov
fbld
fnstenv
or
hlt
scas
cltd
xor
ret
sbb
test
xlat
mov
les
or
inc
stc
lret
dec
ror
repnz
dec
xchg
cmp
subb
in
std
aaa
jmp
out
call
in
stos
js
fwait
imul
movsl
sub
jae
xchg
xchg
inc
cmpsl
fsubr
cmp
mov
lea
call
mov
mov
iret
add
mov
fs
dec
push
test
ficoml
icebp
push
sub
insl
shl
inc
outsb
sub
loop
movsl
xchg
pop
dec
mov
stos
push
arpl
icebp
es
push
or
xor
scas
cwtl
or
add
lock
sbb
xchg
mov
js
dec
jmp
jecxz
dec
jmp
lds
outsl
xchg
xchg
sbb
aaa
mov
or
pop
call
dec
inc
test
mov
jne
sub
xor
aaa
xchg
pop
testl
pushf
xchg
rclb
aam
push
into
jecxz
sub
lret
mov
imul
mov
sbb
insl
and
lods
dec
sub
roll
xchg
push
cmpsl
push
mov
daa
aam
test
jecxz
sbb
pop
cmp
pop
imull
roll
jecxz
pop
and
dec
cmp
imul
iret
enter
cmp
sub
lret
ds
jbe
pusha
sbb
in
cmp
xor
cwtl
mov
fsts
jg
int
hlt
adc
inc
inc
gs
mov
sub
int3
pop
mov
adc
cmpsl
jge
jecxz
mov
cmp
xchg
ret
cwtl
ds
xchg
push
adc
mov
sub
add
stos
cmp
or
imul
dec
in
js
add
or
xor
mov
xchg
xor
mov
pop
jo
popa
mov
sub
push
or
and
enter
subl
jecxz
or
mov
addl
xchg
loope
test
add
sbb
inc
mov
push
jp
pop
ret
xor
or
mov
icebp
inc
pop
cli
ja
andl
push
pop
xlat
inc
and
jmp
maxps
sahf
cmpsb
mov
xchg
mull
inc
jne
leave
enter
sub
dec
adc
loopne
sar
xor
push
pop
sarl
push
pusha
aam
jmp
or
fdivs
sbb
push
jb
scas
pop
add
sahf
mov
push
or
mov
push
add
mov
pop
push
or
lock
lods
in
sub
pop
adc
sub
mov
lret
xor
mov
jne
jbe
testl
pop
push
add
andb
jmp
dec
imul
call
xor
push
es
outsb
sbb
js
sub
roll
push
in
inc
inc
or
mov
aam
fsts
repnz
mov
and
mov
ret
fiaddl
adc
aas
dec
push
mov
test
sbb
in
push
int
push
in
dec
dec
sbb
lock
sub
in
ror
shlb
ljmp
filds
push
lret
push
add
ret
stos
es
sub
sub
fisttps
and
cmc
dec
or
cmp
adc
mov
and
pop
ds
imul
outsb
sub
aas
lcall
push
loopne
adc
mov
sub
aaa
scas
inc
push
mov
xchg
sbb
dec
sbb
cmp
mov
cmp
loop
ja
ljmp
mov
hlt
scas
fstpl
or
dec
cmp
jmp
ret
into
push
test
jg
mov
add
sbb
and
mov
andl
pop
fwait
cltd
dec
mov
or
ljmp
fdivrl
leave
and
inc
mov
shll
out
xchg
adc
loopne
cmpsb
pop
xor
sbb
ja
loopne
idivb
inc
test
sbb
adc
pusha
lcall
and
adc
cmp
mov
dec
insl
leave
push
jp
ja
pop
cmpsb
xchg
mov
clc
ss
lods
loop
dec
sbb
test
scas
and
jb
xchg
adc
cmpxchg
cmp
cmpsl
imul
cltd
stc
lcall
inc
adc
out
mov
ljmp
leave
or
cmovbe
xchg
cwtl
sub
add
decb
les
push
mov
arpl
cmc
mov
jnp
xlat
dec
test
repz
mov
inc
xchg
and
mov
jle
add
push
cmp
ds
or
fistl
stos
xor
push
jg
xchg
and
arpl
add
mov
movsl
fidivrl
mov
imul
hlt
push
iret
gs
addl
fs
jl
nop
popa
sbb
int3
xor
add
pop
mov
mov
aam
in
cwtl
pop
nop
sub
lahf
pop
adc
jb
fnstcw
sahf
lahf
inc
dec
lea
sbb
out
ljmp
dec
int3
mov
jae
xchg
fsubrl
outsl
mov
mov
mov
cmpsl
jns
movsb
out
dec
cmpsb
cs
xor
int3
lods
inc
cmpsl
mov
mov
ret
push
js
add
test
rolb
lods
nop
or
cli
in
fbstp
ds
sub
testb
adc
cli
mov
push
or
in
mov
cmp
jge
lds
fs
inc
dec
xor
mov
fisubs
mov
loop
mov
shr
mov
aas
dec
xchg
push
icebp
sahf
mov
popa
xlat
mov
jbe
sarl
pushf
mov
push
cltd
lds
rorb
ficoml
xchg
jl
and
mov
std
xchg
std
push
adc
xchg
bound
cmpsl
pushf
js
jbe
mov
sub
or
imul
call
out
mov
in
xchg
test
stos
rcr
cwtl
adc
or
push
je
in
ds
divb
lret
sbb
out
mov
mov
in
xchg
das
inc
push
mov
and
dec
cld
clc
imul
cmp
sub
dec
mov
test
fildll
movsl
or
pop
lods
ja
inc
mov
inc
sbb
daa
adcl
mov
xchg
aam
fs
leave
popf
cmp
pop
movsb
xchg
cmc
or
dec
fcmove
mov
jl
xor
shlb
push
aad
jmp
movsb
push
cltd
inc
clc
sub
loope
arpl
push
mov
lcall
push
in
mov
mov
adc
sar
and
fsts
jmp
pop
push
lds
pop
idiv
insl
xchg
lea
xchg
js
and
addr16
es
pop
ljmp
dec
sub
xor
loop
sub
lcall
scas
mov
or
dec
adc
sub
lret
js
xchg
icebp
mov
fwait
jb
pusha
lods
imul
push
inc
push
mov
addr16
cwtl
adc
and
loop
cmp
fistps
sbb
inc
movsl
sub
and
inc
out
xor
mov
mov
cmpsl
into
cli
lahf
mov
test
in
mov
mov
in
lcall
mov
aam
push
push
push
pop
push
push
psraw
dec
jl
fcmovbe
inc
gs
mul
mov
ljmp
aas
jmp
inc
pop
mov
and
adc
xor
pop
and
pop
addr16
stos
push
mov
stc
add
cltd
fstp
popf
pop
in
mov
mov
mov
mov
lcall
ffree
sub
test
les
cltd
dec
aaa
jl
jb
int
ljmp
pop
push
add
imul
out
scas
fdivs
lcall
or
push
fsubrp
les
inc
dec
push
xchg
daa
sbb
pop
or
pop
andl
jmp
imul
push
out
sbb
jp
add
mov
and
sub
cmpb
push
lret
clc
xchg
nop
cmpsl
or
cmp
mov
mov
mov
add
adc
popa
loopne
adc
jl
cmpsl
push
dec
mov
mov
cmc
inc
into
mov
dec
xchg
loopne
data16
xchg
jecxz
addr16
mov
inc
sub
jg
cmpb
shl
stc
mov
loop
push
sbb
imul
and
xchg
push
test
std
jbe
test
dec
cmp
cmp
int3
cmpsl
xor
popf
lret
movsl
inc
aas
add
and
jmp
fwait
push
pusha
xor
xchg
scas
push
lock
int3
pop
xor
mov
shl
sub
and
jmp
push
stc
mov
mov
enter
push
ss
cmc
push
test
mov
mov
inc
fnsetpm(287
pop
test
addb
mov
movsl
xchg
xlat
inc
jl
push
int
aad
sub
mov
push
add
sbb
mov
dec
mov
cmp
test
shll
xchg
push
aas
xchg
lea
fdiv
fwait
pop
jmp
mov
addr16
repz
mov
ret
addb
inc
movsl
pop
iret
sahf
test
mov
adc
mov
fs
int
xchg
iret
mov
fucomi
inc
xchg
test
in
popa
pop
dec
pop
pop
sbb
sub
mov
dec
stos
js
fistpl
jecxz
inc
sbb
pop
pop
xor
repnz
jl
xchg
inc
or
ss
inc
pop
aam
dec
subl
jb
insb
xchg
imul
and
or
js
sub
add
mov
pop
aad
or
enter
mov
pusha
mov
stc
jecxz
or
sub
lds
gs
lret
jnp
inc
push
mov
int3
lea
cmpsl
or
adc
sahf
mov
dec
mov
ret
cmpsl
sbb
sti
imul
js
or
out
push
mov
or
xchg
stc
insb
cmpsb
push
mov
xchg
inc
fisubl
jge
xchg
jl
inc
xor
add
scas
lods
pop
cmp
ret
sbb
sbb
stos
mov
mov
test
das
out
sub
sbb
adc
in
fiadds
mov
sub
out
lret
xor
in
mov
sbb
in
scas
or
popa
aaa
out
mov
pushf
ja
ljmp
subb
lods
adc
adc
jno
ret
or
push
jge
jo
or
or
test
xor
ljmp
loopne
lret
xor
mov
adc
aaa
sbb
sub
jb
call
test
cmc
and
dec
sub
adc
adc
jp
lods
nop
mov
or
push
mov
push
dec
and
inc
sub
inc
mov
xor
shrl
inc
inc
scas
xchg
inc
clc
rorl
ud1
xchg
add
imul
jbe
insb
inc
push
dec
push
push
push
cltd
in
mov
mov
setb
mov
push
pop
insl
mov
pop
sbb
mov
mov
loop
mull
cmp
jns
repz
cwtl
cltd
jmp
movsb
shr
ficoms
cmp
and
xchg
int
add
add
jns
sbb
mov
cmp
iret
sub
cli
cmp
push
sti
push
fistl
adc
out
push
sub
add
stc
sub
xor
lret
add
jnp
jno
mov
dec
mov
push
cli
popa
in
jne
lcall
leave
mov
in
pop
fsubl
es
jae
dec
mov
xchg
icebp
sbb
inc
pusha
fstl
test
xor
xor
cmp
pop
mov
sub
push
mov
fsubp
aaa
addr16
clc
push
stos
movsb
push
sti
sub
push
mov
sub
scas
scas
pushf
out
add
fnstsw
gs
mov
outsl
mov
pop
pop
push
xor
jns
adc
sub
or
push
into
jnp
shlb
mov
dec
xor
mov
pop
cltd
mov
xchg
jge
lahf
inc
sub
mov
and
lret
inc
lahf
pushaw
sub
imull
jp
sbb
popf
lds
mov
add
dec
jne
mov
je
stos
xorl
out
cmp
test
sbb
lahf
inc
fsubl
negl
adc
mul
js
repz
mov
cmp
insl
mov
std
add
test
xor
into
jle
loopne
jl
jns
daa
jge
test
out
cmp
lahf
popf
add
add
push
push
int
add
sub
mov
mov
add
mov
rorl
cmpl
cs
sub
cld
sub
mov
scas
mov
add
loope
xchg
movsb
fs
push
aad
in
loopne
stc
fcoms
xor
jo
push
sbb
adc
fistl
js
mov
push
lods
mov
sahf
data16
mov
sarb
cwtl
out
lret
jp
mov
cmpsl
adc
xchg
scas
gs
xchg
xchg
sbb
push
jns
jge
sahf
adc
nop
stos
jbe
dec
sbb
jbe
push
push
arpl
jno
mov
ljmp
out
pusha
rcrl
subb
or
dec
cmp
mov
sbb
dec
mov
pop
aad
sbb
test
xchg
xchg
pop
in
jo
inc
xchg
and
test
jmp
pop
icebp
jecxz
mov
aam
jge
inc
push
sbbb
add
add
fidivl
fdivl
loop
dec
lcall
lods
in
cld
pop
pop
lods
adc
xchg
add
mov
sub
push
xchg
stos
dec
int
jl
es
out
push
adc
gs
ret
sbb
popa
xchg
add
mov
in
std
roll
sbb
xchg
mov
inc
cmp
ja
data16
testl
dec
call
and
push
cmp
jo
mov
dec
cmp
mov
in
xchg
scas
inc
mov
jae
xchg
cmp
insb
xor
sbb
jge
insl
sub
inc
aaa
and
out
pushf
sub
cmpl
sub
emms
jge
mov
icebp
scas
insl
cmp
push
je
mov
test
xchg
das
les
xchg
xchg
sbb
and
dec
pop
inc
mov
pop
jecxz
sbb
leave
jg
sti
pop
dec
cmp
inc
push
push
imul
xchg
dec
addr16
icebp
mov
sub
xchg
jle
inc
jb
ds
mov
or
push
add
ret
test
cmpsb
fnstsw
mov
bound
adc
jo
xchg
lods
mov
push
dec
ficomps
fwait
mov
dec
push
decb
jb
cmpsl
sti
cltd
mov
push
mov
cmp
push
pop
and
cmpsl
fdivrl
jbe
lea
fs
test
es
xchg
mov
outsb
shlb
cmp
clc
mov
xchg
adc
add
cs
xchg
insb
or
dec
fists
js
out
leave
inc
out
jb
sbb
loop
sub
xchg
ds
icebp
adc
sahf
in
dec
cmpl
pop
hlt
pusha
dec
outsl
addb
ret
xchg
jle
jo
sbb
ljmp
stos
push
cmp
sbb
push
add
jne
pop
adc
stos
loope
ret
inc
pop
adc
xor
mov
push
jmp
sbb
cmpsl
dec
pop
and
sbbb
jg
xchg
lods
ss
subb
stos
xchg
sub
fdivrl
inc
das
ds
leave
add
loopne
or
cwtl
xchg
cmc
adc
add
movsb
dec
rcll
xchg
inc
push
adc
or
scas
mov
inc
out
in
aad
stos
pop
imul
outsb
mov
cmp
pop
mov
fwait
mov
mov
jb
stc
xor
dec
adc
push
frstor
or
jecxz
dec
jp
adc
mov
pop
dec
in
fnstsw
lahf
call
iret
pop
mov
leave
inc
pop
pop
subl
les
shrl
rcrb
lock
sbb
lret
push
test
fstps
sahf
cli
cs
mov
inc
mov
push
dec
add
push
mov
jmp
mov
push
sub
hlt
inc
movsb
jne
xchg
add
out
lcall
nop
lea
inc
mov
xorb
js
sub
inc
paddsw
sti
ds
mov
dec
add
incl
add
pushf
jno
mov
add
xorl
push
push
cs
mov
movsb
jl
xchg
test
fildl
lods
adc
ds
xchg
cmpsb
and
fiaddl
and
inc
push
aam
frstor
jl
push
iret
test
pop
in
repnz
mov
std
lock
imul
in
sub
into
sbbl
in
daa
pop
stos
pusha
cmp
loopne
rorl
inc
xor
test
push
sbb
push
mov
orb
js
jecxz
mov
pop
es
out
in
pusha
ret
push
cmc
pop
sbb
push
xchg
insb
out
push
cs
cld
outsb
mov
rorb
and
incl
loope
shl
out
icebp
push
scas
xor
idivl
jns
dec
fxch
sub
pop
movsl
inc
jb
jo
dec
pop
mov
mov
adc
mov
or
push
push
subl
loop
xlat
or
imul
dec
outsl
lahf
mov
and
push
adc
inc
lret
sub
push
pop
pop
loopne
enter
mov
jb
pop
adc
inc
jne
sub
sti
hlt
pop
dec
adc
lahf
cwtl
jne
arpl
inc
sbb
mov
int3
pop
test
jno
sti
pop
lcall
xchg
dec
cmp
into
int3
adc
mov
xchg
jbe
insl
jge
fdivrs
xchg
push
mov
adcb
gs
ret
mov
inc
out
or
lcall
data16
sahf
rorb
mov
aas
fdivl
inc
mov
ret
jbe
int3
daa
push
aaa
aam
lea
movsb
xchg
stos
cmpsl
insb
dec
loope
add
or
testb
mov
scas
cmp
push
inc
sbbl
push
mov
stos
pop
jecxz
mov
xor
mov
aas
mov
aad
mov
jmp
sub
scas
inc
jl
aaa
mov
scas
pop
adc
out
dec
jne
repz
fnstenv
in
das
push
pusha
xor
test
jg
xchg
ja
jae
xchg
int3
mov
sub
sub
lea
xorl
iret
jmp
mov
subl
add
cs
sarl
scas
sub
add
xchg
mov
xchg
xchg
xor
push
lods
loope
imul
in
scas
sub
scas
dec
sbb
sahf
cmpsb
nop
arpl
xor
inc
das
sbb
push
cmp
xor
int3
and
loop
in
arpl
adc
rcr
jl
test
cmp
xchg
pop
test
pop
nop
shlb
jbe
fs
frstor
push
push
fiaddl
or
jl
addr16
in
sbb
jmp
lea
pop
int3
push
mov
test
or
push
jle
lahf
jge
nop
rorl
cmp
gs
push
dec
sarl
testb
jbe
mov
loopne
popa
push
scas
jbe
cmp
rorb
sbb
pop
test
mov
and
lahf
lock
std
movsb
jg
repz
pushf
sub
cld
pop
xor
jbe
stos
xchg
push
cmp
inc
sti
xorl
cmp
ret
sbb
pushf
lods
adc
pop
mov
push
dec
pop
popf
jmp
xor
jnp
dec
or
push
fidivrl
adc
jo
mov
das
add
cmp
hlt
or
mov
aam
sahf
cmp
cmp
xchg
mov
pop
dec
sbb
pop
inc
jge
mov
popl
push
cmpsb
mov
popa
pop
cmp
cltd
stos
test
dec
jp
mov
pop
dec
clc
and
or
inc
push
je
cmpsb
xor
imul
mov
fldl
rol
fidivl
loopne
cwtl
cli
ret
sti
sti
and
or
xor
adc
loop
shlb
and
and
rcrl
movsb
lods
push
mov
mov
pushf
and
mov
sub
movsb
xor
cltd
inc
lret
and
xchg
jecxz
pop
cmpsl
das
mov
fstpl
insl
adc
jge
js
sub
jno
mov
jae
popf
mov
xor
popa
cmp
push
push
das
or
es
shll
pop
jp
int
fstps
ja
jg
dec
jne
cwtl
mov
dec
mov
subb
in
stc
lods
ds
js
and
out
jae
cmp
fsubr
xchg
ret
adc
lahf
shrl
xchg
mov
mov
dec
es
out
roll
push
sbb
add
sub
mov
shl
jae
outsl
jmp
pop
inc
test
fdivr
out
repnz
pop
sarb
jno
xchg
fidivrl
mov
test
out
and
inc
adc
cmp
xchg
loope
call
imul
inc
cmpsb
shlb
jb
jbe
or
add
cmpsb
jp
icebp
gs
aad
lahf
jle
jno
fldcw
add
push
fwait
jnp
fstl
push
orl
dec
loop
loop
ds
out
cli
and
test
aaa
push
cmp
gs
imull
inc
pop
test
sbb
jnp
sub
dec
in
dec
mov
adc
inc
pop
orb
int
jbe
and
mov
sub
mov
scas
aam
pop
lcall
movsb
jb
sarb
mov
sub
xchg
and
cmc
fistpll
fldl
push
push
mov
mov
jmp
inc
test
imul
or
insl
fcmovu
stos
dec
pushf
cmc
div
lea
stos
jae
xlat
je
popf
jno
ljmp
push
mov
mov
inc
leave
mov
or
add
or
iret
or
pop
idivl
mov
jno
and
in
pop
adc
sub
hlt
test
pop
adc
out
add
inc
in
movsb
data16
dec
lcall
daa
jge
adc
sub
aas
sub
iret
cli
out
xchg
jg
or
lds
iret
fstpl
out
and
frstor
sbb
iret
mov
shrb
in
dec
sbb
clc
mov
leave
addr16
int3
inc
daa
mov
dec
stos
mov
mov
mov
dec
sub
cmpsb
dec
add
mov
mov
lods
in
stos
scas
fsub
ljmp
cli
adc
jp
std
sbb
iret
inc
push
pop
mov
mov
xchg
imul
popa
jbe
pop
or
lret
lcall
push
into
dec
insb
adc
sub
fisubl
out
mov
les
stos
add
outsl
mov
jno
and
mov
xchg
vminps
adc
jle
jle
orl
incb
mov
push
negl
push
inc
incb
push
push
mov
negl
sub
mov
add
adc
lea
or
xchg
cwtl
outsl
adc
cmc
pop
mov
sbb
stc
add
testb
and
mov
popf
mov
adc
add
sahf
pop
lret
fists
iret
mov
cmpsb
nop
vsubsd
addr16
imul
and
arpl
push
adc
fwait
cld
out
movsl
cmp
clc
andb
add
adc
aaa
mov
sbbl
call
xor
outsb
xor
stos
addr16
push
hlt
js
nop
test
addr16
jl
mov
lret
pop
pop
sub
imul
xor
je
out
shl
adc
mov
xor
scas
fs
bound
cltd
mov
sti
xchg
add
into
andl
cmpb
xchg
aad
fimull
pop
daa
fdivr
mov
fisubl
jbe
pop
xlat
fs
enter
jbe
add
in
adc
sub
xor
mov
jae
out
xor
xchg
cltd
mov
addr16
inc
pop
pop
sub
testl
shl
insl
fnstsw
leave
lcall
out
or
popf
loopne
or
inc
dec
dec
stc
ss
jmp
add
sbb
sub
nop
in
add
xchg
les
cmpsb
pop
mov
notb
rcrb
movsl
add
mov
pushf
xchg
jbe
jp
or
adc
bound
test
arpl
addr16
xchg
add
cmpsb
or
push
or
lods
pop
adc
inc
cs
pop
fidivrl
inc
rcrb
dec
sub
xchg
mov
mov
daa
cltd
or
add
cmpsl
cmpb
jae
push
icebp
mov
xchg
stos
outsl
notl
pop
pop
mov
xor
and
adc
add
rolb
test
test
out
inc
fmuls
inc
mov
ljmp
xor
cmp
jg
test
enter
xchg
int
mov
jmp
cwtd
pusha
sub
sbb
movb
mov
mov
sbb
add
or
and
sbb
bound
push
mov
pop
jle
mov
mov
loopne
adc
jb
stos
sub
adc
pop
push
push
push
enter
cmpsb
test
cltd
mov
xor
leave
xchg
testb
jb
inc
loope
sti
mov
xor
add
pop
jmp
mov
inc
mov
jne
testb
out
lods
sub
ret
ret
xchg
clc
push
mov
xor
fnstenv
aaa
fnstcw
je
jmp
mov
lods
and
movsl
mov
mov
xchg
les
mov
jo
out
scas
fstpt
ret
sbbb
aad
data16
jg
addb
sbb
es
cmp
repz
lcall
dec
pop
fcoms
xchg
jmp
jp
popf
or
dec
in
push
cmp
jb
mov
iret
cltd
aam
jp
leave
pop
pusha
inc
jae
sbb
cltd
push
pop
cmp
test
sbb
adc
test
fnstenv
pusha
mov
mov
incb
jno
mov
hlt
jae
sub
add
ss
aam
xor
add
xor
imul
test
xor
push
fstpl
mov
mov
shufps
xor
data16
aas
jnp
pop
rcrb
or
lods
cmp
ds
dec
jp
push
lods
out
jl
popf
push
inc
leave
test
mov
popf
fisttpl
sbb
movsl
sarl
jp
mov
orl
sub
fldl
xchg
std
and
testl
out
mov
mov
and
sub
pop
jl
sbb
cmp
test
les
adcl
gs
or
and
lods
sub
sbb
cmpsl
jne
stos
out
jl
inc
inc
mov
idivb
push
dec
arpl
add
inc
fisubrs
cmp
outsb
mov
add
or
scas
mov
jae
dec
js
lods
aas
xor
mov
adc
pop
dec
js
ss
je
and
inc
dec
jae
cmp
sbb
dec
call
leave
add
add
rorb
ficomps
adc
xchg
test
popa
bnd
jbe
aam
ljmp
mov
imul
test
pop
mov
es
mov
test
adc
xor
adc
mov
sbb
loopne
add
mov
jns
fisubl
inc
jns
pop
jno
dec
in
lds
inc
aam
xchg
rcrl
jmp
cli
pop
jno
adc
mov
test
loope
xchg
jnp
sub
xchg
mov
aad
or
loopne
movsl
cmp
mov
push
and
fldt
ja
xchg
xor
icebp
out
pop
repz
push
bound
movsl
bound
xorl
call
jo
imul
insl
adc
cmc
lret
and
orl
fprem1
out
nop
dec
sub
imul
sbb
int
inc
jo
sahf
sub
cwtd
pop
sbb
scas
mov
pusha
dec
fwait
mov
mov
dec
and
or
fcoms
mov
mov
addr16
bound
cld
cmp
adc
push
adc
xchg
push
leave
and
fmul
test
lock
cmpsl
movsb
jae
adc
mov
adc
cmp
cmpsb
sub
cmp
push
aam
mov
dec
in
je
push
lods
mov
es
jge
loop
enter
jo
gs
ja
inc
in
sbb
int
sarb
xor
xor
int3
dec
fisubrl
adc
fldt
pop
fimull
xchg
repnz
mov
decl
jb
mov
mov
add
in
add
test
pop
or
les
add
jge
mov
add
dec
fmuls
xchg
scas
jp
call
sbb
push
fwait
mov
out
lds
and
pop
sub
push
leave
sub
jbe
scas
dec
lds
cmc
cmpsb
popf
stc
adcb
scas
pop
inc
pop
and
ljmp
icebp
aaa
lret
xlat
xor
pop
sub
dec
stos
js
push
cmp
insb
jle
das
shl
mov
scas
inc
pop
and
inc
mov
jge
ficompl
cs
adc
ja
js
dec
add
es
sub
jp
les
mov
and
xchg
pop
inc
jae
in
xor
lods
sti
shl
push
loope
movsb
out
jno
push
aad
pcmpeqw
lahf
int
mov
test
push
mov
sarb
out
cmp
aas
aaa
sbb
int
int
mov
stos
xor
imul
xchg
fsubr
test
mov
jns
push
xchg
clc
and
enter
test
popa
pusha
jns
cli
rclb
push
push
mov
mov
sbb
mov
roll
nop
jbe
ffree
cmp
sub
fnstcw
inc
cli
push
fdivl
sbb
sbb
xchg
cltd
nop
test
outsb
addb
out
lcall
lods
in
mov
loop
mov
es
xor
add
mov
hlt
push
inc
mov
jmpw
push
add
xchg
cmp
and
jnp
je
stos
es
xor
cmp
xchg
in
cld
jbe
addb
in
lods
mov
xor
and
out
mov
repz
push
sub
lods
ds
adc
sti
mov
lret
and
loop
jmp
or
enter
in
std
pop
xchg
mov
or
xor
ds
into
cmp
nop
ret
in
inc
xor
xchg
push
inc
sbb
data16
fwait
add
mov
mov
addr16
pop
sub
ffree
add
push
adc
add
mov
cmp
pop
mov
scas
imul
fs
sub
xchg
aad
out
sub
adc
js
popf
cld
mov
cmp
lods
mov
sbb
popf
add
push
ret
sub
cli
test
jle
out
lahf
cli
or
xor
ljmp
dec
imul
aaa
push
pop
inc
mov
mov
cmp
mov
dec
jno
les
pop
bound
iret
fnstsw
pop
fs
mov
arpl
pop
shlb
sub
mov
mov
dec
or
jge
and
push
push
add
aam
push
sub
push
outsb
jmp
stos
fdivrl
out
xor
jb
es
imul
sub
imul
push
sbb
mov
lock
mov
xchg
repz
dec
push
rolb
xor
mov
mov
cltd
jnp
jp
aad
mov
add
imul
lret
adc
ret
xor
or
fdiv
adc
push
ror
cmc
lret
lods
xor
jmp
insb
aam
mov
adc
sbb
loopne
leave
mov
xor
mov
fwait
xchg
adc
pop
xchg
jg
loope
iret
xchg
fstl
xor
movsl
scas
pop
push
sub
cmp
or
sbb
scas
xchg
in
test
fld
sub
sub
cmp
psubsw
push
je
pop
call
inc
call
mov
mov
mov
sti
test
mov
arpl
fld
cmp
add
popa
or
push
enter
divb
ss
cmp
outsl
fidivs
scas
xor
dec
jns
or
movsb
test
data16
add
in
sbb
lock
jp
es
cwtl
xlat
aam
mov
popa
or
dec
fcoml
dec
into
rcrl
test
fmull
push
sbb
test
mov
mov
stos
jnp
aas
and
lcall
jae
loop
jle
aam
fnstsw
popf
jg
mov
sub
fsubp
scas
rclb
in
int3
adc
stos
sbb
ret
add
push
pop
push
sbb
inc
les
fiaddl
lds
add
sbb
dec
out
add
mov
cmp
out
adc
mov
or
mov
ljmp
add
jecxz
adc
sub
mov
add
fsub
in
rcl
dec
inc
out
aam
xlat
dec
xor
push
fbld
sarl
jecxz
fimull
fs
test
mov
sbb
andl
cmp
sbb
mov
das
ja
repz
cld
push
out
sbb
pop
and
movsl
notb
adc
pop
push
enter
jmp
test
push
jae
mov
push
and
mov
pop
jg
rcr
andb
push
add
cs
cmp
insl
or
jle
sbb
popf
jb
jb
out
std
dec
imul
xchg
in
arpl
adc
sub
mov
fiaddl
and
iret
adc
loope
arpl
push
jmp
icebp
call
sbb
jl
sub
adc
shll
roll
cmp
pop
xchg
add
fucomi
mov
pmaddwd
mov
mov
leave
ror
les
movsb
daa
or
lods
jge
push
pop
sbb
xchg
shlb
addr16
outsb
or
sub
xchg
sti
jecxz
int3
mov
mov
and
jb
cmp
repz
clc
dec
and
fs
inc
jo
or
outsb
cmp
scas
ret
mov
in
imul
shll
push
mov
jns
jecxz
dec
mov
cmp
fxch
ja
pushf
movsl
pop
cmpsl
scas
add
dec
pop
sub
or
jno
negl
dec
xchg
lods
pop
push
aaa
sbb
or
call
jg
mov
iret
dec
cmp
xchg
movsb
or
jmp
sbb
fs
dec
jnp
mov
test
push
daa
or
mov
adc
outsb
sub
and
push
leave
push
in
xchg
scas
das
lahf
push
cmp
imul
fistl
fs
loopne
mov
pushf
movsl
xchg
sbbl
cmp
mov
cmp
add
push
jns
ret
addr16
inc
or
jo
jbe
or
in
jne
mov
mov
push
out
push
imul
jmp
das
inc
mov
bnd
stc
insl
adc
lret
pop
jecxz
and
cwtl
iret
shll
pop
sub
cmp
jo
sub
dec
inc
lea
or
outsb
inc
and
repz
mov
push
enter
jp
xchg
je
xor
push
mov
sbb
stos
test
jmp
dec
xchg
jmp
imul
cli
cli
mov
ret
js
sbb
in
mov
xor
push
cs
fs
in
add
out
pop
push
mov
push
imul
add
stc
cmp
shrb
insb
in
or
pop
cmpsl
adc
scas
iret
in
mov
loope
sbb
push
mov
filds
and
dec
adc
xor
std
push
pop
pop
fisubrl
inc
xchg
ret
loope
mov
and
lock
loop
jecxz
mov
out
sbb
fnsetpm(287
aam
cld
dec
aaa
mov
icebp
cmp
mov
jo
sbb
ds
cmp
enter
sub
sub
gs
add
leave
push
cmpsb
cmp
imul
imul
out
mov
shrl
shll
icebp
sbb
push
out
adc
inc
pop
inc
es
aad
dec
cmp
gs
loopne
les
cmp
bound
shl
mov
je
sbb
mov
outsl
mov
hlt
orb
test
cmp
mov
popa
sbb
mov
scas
fmull
xchg
or
cltd
add
dec
inc
insb
cmp
cli
sub
xchg
xlat
mov
jne
cli
mov
pop
addr16
das
pop
mov
shl
push
mov
cmp
mov
ljmp
inc
pushl
scas
clc
pop
cmpsb
mov
cmpsb
inc
sbbb
sub
lock
push
lret
sahf
jmp
incb
sub
jp
and
mov
lcall
icebp
xchg
mov
addb
outsl
adc
popa
dec
mov
push
iret
sub
jecxz
mov
inc
mull
hlt
push
and
cltd
xchg
sub
outsl
dec
push
add
aas
jp
fbld
mov
xchg
lret
mov
pop
cli
mov
fninit
divb
arpl
xchg
pop
jnp
aam
add
aam
push
gs
xchg
imul
leave
inc
dec
xor
push
js
cmpl
mov
xor
mov
insb
push
dec
in
or
movsl
mov
mov
gs
xchg
dec
xchg
or
bound
loope
jle
dec
xor
xor
cwtl
mov
clc
arpl
mov
fisttpll
sarb
mov
pusha
das
cmpsb
data16
dec
adc
enter
mov
sti
fadd
gs
xchg
xchg
inc
push
leave
sbb
in
dec
rolb
rcrl
xor
jae
jp
push
dec
xchg
sbb
popf
ljmp
push
push
or
shll
pop
xchg
mov
xchg
mull
imul
fiadds
lea
and
cmpsb
push
fidivrl
divb
aas
push
push
jp
sub
test
in
and
stos
movsl
sbb
ds
cmp
xchg
mov
and
mov
mov
cmp
dec
dec
test
add
add
fcmovnbe
mov
cld
cmp
loop
mov
pop
into
cmp
xchg
imul
loopne
scas
shlb
mov
lea
adc
jnp
jnp
xor
insb
push
xor
aam
jno
lods
pop
xchg
mov
sbb
popf
roll
lock
xlat
xchg
add
out
pusha
out
loope
or
mov
adc
sbb
in
pop
xor
pop
sbb
cld
inc
push
into
cmpsl
inc
xchg
dec
ljmp
sub
fcoml
cmp
lods
insl
or
lock
mov
ss
aaa
add
mov
outsb
inc
sbb
mov
mov
jmp
xor
popf
xchg
lea
sub
call
rcr
mov
add
mov
int3
out
dec
je
inc
icebp
jo
xor
or
cmp
dec
sbb
xorl
dec
mov
fwait
jbe
out
mov
inc
ss
jae
subl
aaa
arpl
add
inc
addb
lods
xchg
add
fs
repnz
cmpl
mov
fimuls
jnp
daa
sbb
mov
cmp
jo
mov
xchg
int3
int
mov
dec
pop
fisubrs
mov
int3
or
shl
cli
sub
xchg
jnp
sub
jmp
sahf
xchg
es
mov
push
int
xchg
or
push
scas
loopne
cmc
and
in
setl
jbe
add
dec
inc
jbe
je
jne
cmc
test
pop
push
xchg
pop
add
mov
xor
pop
repnz
std
xor
add
xor
cltd
out
jns
aad
fcmovnb
add
mov
sbb
lahf
fidivrl
aaa
ss
jo
push
lods
mov
push
xor
arpl
inc
rcr
adc
sbb
repnz
or
mov
aad
dec
jecxz
pop
dec
mov
jecxz
lret
in
push
in
test
shrl
sbb
pop
pop
pop
aam
push
mov
aad
popf
ds
idivl
sbb
or
mov
cmp
cmp
or
imulb
inc
and
enter
lcall
aam
popf
or
sub
mov
aam
xchg
and
addl
int3
lods
cmpsl
outsb
xchg
mov
cmp
jae
movl
int
arpl
cmp
push
test
dec
push
std
xchg
add
sbb
ret
xchg
sub
dec
dec
adc
dec
push
jnp
cld
pop
xor
movsb
ret
xchg
out
mov
cmp
pop
insb
push
dec
mov
inc
es
int3
roll
push
loop
xchg
fs
inc
mov
neg
and
stos
cwtl
enter
and
in
loop
adc
fisttps
iret
test
out
sbb
les
add
xchg
fstps
imul
jmp
sbb
inc
insl
add
push
cmc
mov
mov
inc
push
lock
pop
pusha
dec
push
iret
enter
and
cltd
imul
ds
shll
mov
popa
pop
test
mov
movsl
int3
sbb
test
addr16
sub
add
sub
ds
pop
pop
jno
cld
mov
aaa
jb
push
pop
shl
enter
popf
ja
mov
pop
xchg
test
aas
nop
sub
das
xor
mov
mov
xchg
imul
fisubrs
in
jbe
cmp
das
std
xor
dec
mov
int3
cli
popf
or
outsl
clc
push
subb
cwtl
push
xchg
sub
lods
jle
icebp
add
sbb
je
inc
insb
mov
add
jnp
mov
stos
icebp
jne
mov
xlat
and
dec
xchg
int
push
push
das
cmp
cmp
inc
out
mov
test
pop
inc
mov
loop
dec
ljmp
je
andb
lret
jae
jne
dec
inc
and
imul
mov
cmp
pop
out
cmp
cmp
mov
push
add
jbe
pushf
cmp
sub
rcr
call
or
cltd
imul
out
mov
repnz
jne
sti
add
adc
mov
pop
or
mov
adc
enter
outsb
jae
add
mov
sub
testl
jns
xchg
movsl
xchg
and
call
mov
jmp
fucom
or
push
or
enter
mov
movsb
mov
jnp
cwtl
inc
insb
hlt
jg
xchg
pop
add
popa
lret
popa
mov
insb
inc
cltd
mov
js
enter
adc
mov
xor
ds
pop
sbbb
rorl
mov
push
or
gs
push
bound
clc
xor
loope
es
mov
stos
mov
inc
mov
jmp
xlat
aas
dec
pop
fldenv
or
dec
ret
js
lds
enter
in
out
mov
jp
jo
adc
inc
das
insl
sti
or
pop
and
xor
sarb
pop
inc
xchg
sbb
jmp
sub
cmpsb
add
xor
lds
lcall
inc
fs
int3
add
mov
test
adc
es
enter
mov
fcoml
arpl
test
pop
mul
mov
roll
lods
lret
dec
lahf
jl
arpl
xchg
fwait
rcl
fsubrl
jbe
jbe
adc
push
sub
mov
testl
inc
inc
mov
jns
pop
pop
adc
cmp
pop
mov
insb
arpl
inc
fwait
add
cmp
test
ds
mov
adc
add
and
sbb
mov
mov
out
fsubrl
movsb
loopne
add
adc
ss
jmp
psrlw
xchg
mov
adc
jecxz
dec
and
arpl
adc
mov
cmp
cltd
xchg
call
popf
pop
mov
cmp
ss
std
aaa
pop
aaa
jno
rcll
lods
xlat
fildll
sbb
push
inc
sub
jg
or
fisttpll
pop
out
outsb
call
inc
ja
clc
lret
mov
push
jo
insb
arpl
imul
insb
push
gs
jns
push
shl
fisttpl
pop
mov
idiv
jae
sti
xchg
nop
push
pop
sbb
aad
int3
negb
cli
cwtl
nop
jmp
xor
xchg
aas
scas
cmp
mov
sbb
sti
stos
xor
pop
mov
mov
sbbb
or
pop
xlat
dec
push
inc
mov
loopne
pushf
jge
std
and
xlat
loope
sarb
imulb
stc
xor
fisubrl
mov
mov
push
lods
pop
pop
imul
popf
jmp
fldt
out
pop
shll
inc
lret
cltd
movsl
movsb
jae
outsl
shlb
add
pop
mov
mov
in
ljmp
push
pushf
push
bound
jbe
mov
jnp
pop
xchg
cmpsl
int3
cltd
mov
or
adc
push
icebp
push
aad
xor
fiaddl
cmp
mov
pushf
or
dec
sarb
rorl
push
push
and
enter
in
jp
cmp
in
push
adc
mov
cmp
stos
inc
lods
jl
cmp
shrb
cld
addr16
lea
lods
insb
or
dec
add
enter
sub
sbb
fs
ficompl
lret
jno
sbb
aaa
push
in
cli
outsb
jns
repnz
ljmp
fldcw
push
jp
mov
or
mull
jae
jle
push
push
repz
dec
pop
mov
mov
cmp
cmp
mov
sti
and
int3
pop
push
push
mov
inc
cmpl
xor
movsl
pushw
aad
mov
rcr
hlt
jle
or
popf
push
jnp
int3
push
cmp
rol
scas
or
pop
cs
mov
stos
or
cmp
mov
loope
mov
and
int
aam
add
sub
sbb
mov
js
in
jp
cmp
loope
lcall
icebp
fwait
insb
int
clc
cltd
sbb
in
inc
ficomps
adc
sub
pop
in
imul
fidivrl
stc
das
cmpb
or
xchg
lret
pop
decl
stos
icebp
in
mov
test
xchg
mov
push
add
mov
lock
sub
mov
into
mov
sbb
add
jnp
pop
dec
imul
leave
in
mov
lds
mov
jmp
mov
sbb
movb
test
lea
add
or
and
mov
xchg
inc
xchg
call
jmp
rcrb
loope
cmpsl
pop
lret
lock
test
jno
bound
inc
mov
mov
in
insl
imul
cmp
adc
lock
xchg
lahf
nop
mov
sub
or
in
xchg
mov
mov
es
sbb
ret
insb
pop
jo
andl
and
mov
sub
pop
sub
mov
and
add
sub
hlt
inc
dec
rolb
pop
jmp
sti
out
push
js
jmp
movsb
mov
pop
mov
lock
push
xor
out
lea
adc
adc
and
jmp
insl
sti
or
mov
xchg
mov
rcl
mov
leave
in
test
add
rcrl
sti
lods
mov
dec
mov
sub
subb
rorl
loop
xchg
cmpsb
dec
ja
jne
push
movsb
inc
cmc
sbbb
xchg
xchg
nop
adc
sti
insb
pushf
cld
jecxz
cltd
scas
popa
repz
rorb
inc
jne
dec
icebp
inc
pusha
push
or
lods
xchg
mov
pop
subb
dec
jb
sti
lods
xchg
adc
xchg
ljmp
pop
and
das
dec
mov
mov
pop
inc
xor
loopne
push
int
sbb
aas
call
push
jl
dec
mov
shl
jnp
movsl
inc
jg
jno
ret
fs
mov
rcl
fs
lahf
int
add
fidivl
cmpsl
in
rolb
fsubs
inc
jmp
out
out
icebp
fidivl
scas
in
std
xchg
mov
roll
xchg
popf
stos
out
ljmp
mov
lock
shrl
inc
imull
jne
rcll
adc
jecxz
sti
cmp
data16
mov
xchg
mov
gs
icebp
jbe
jle
ja
xlat
mov
and
push
das
stos
jnp
mov
or
fucomi
ljmp
int3
addb
add
std
xlat
xor
test
inc
inc
xchg
or
inc
fimuls
jnp
pop
int3
adc
rolb
testb
addl
inc
movzbl
popf
mov
pop
push
nop
sbbl
hlt
or
js
lods
bound
aas
dec
lret
jl
inc
push
mov
int3
out
sarl
ret
jmp
adc
mov
testb
xor
pop
mov
xchg
dec
xor
mov
dec
pop
in
jbe
dec
mov
ljmp
or
xchg
outsb
mov
ljmp
pop
divb
fildll
pop
sbb
ljmp
add
cli
int3
mov
pusha
xor
dec
aam
shlb
mov
cmp
loope
pop
scas
test
xchg
loopne
popf
pop
adc
sub
jo
cmp
push
mov
mov
add
ds
or
enter
inc
inc
idivb
pop
out
int
stc
jge
mov
enter
stos
lods
stos
or
cwtl
inc
test
and
ficoml
movsb
fcomi
incl
pop
mov
push
mov
movsl
mov
popa
enter
push
mov
sbb
xchg
nop
xor
jecxz
and
aad
sub
sub
dec
out
sti
xor
and
jmp
dec
lds
mov
inc
lret
cmp
dec
call
sub
jp
insb
in
jle
fadd
xor
jo
xchg
inc
push
std
adc
data16
insl
jl
in
das
loop
hlt
jbe
and
dec
clc
faddl
test
or
xor
sarb
inc
dec
pop
add
sbb
pop
xchg
dec
mov
cmp
popf
sti
popf
mov
fdivl
shll
pushf
inc
xchg
test
cmp
and
mov
call
repz
in
into
xor
mov
lds
jmp
jp
jo
ja
sbbl
insl
cltd
setno
mov
test
test
lea
shlb
je
jp
shll
mov
jle
xor
xor
popa
fcoms
inc
hlt
gs
movsb
push
adc
imul
mov
repz
inc
pop
pop
add
int3
cwtl
in
push
inc
test
faddl
xchg
aaa
filds
jno
inc
cwtl
lock
pop
inc
cmp
mov
inc
out
lock
jg
fistl
fsubl
pushf
pop
int3
dec
and
sub
fcmovbe
pop
dec
push
sub
and
shrl
repnz
iret
ret
and
jg
push
push
scas
mov
mov
loope
or
sarl
popf
lcall
pop
lds
adc
repz
adc
xor
xchg
mov
mov
sbb
cmc
add
fcomps
lahf
in
aaa
pop
push
or
outsb
sarb
or
iret
xor
fisubl
dec
rcrl
subb
test
jbe
mov
lds
popf
mov
into
out
mov
or
mov
out
clc
cmp
into
out
sbb
mov
pop
int3
out
lahf
sbb
sahf
and
lds
inc
inc
sub
add
push
lcall
mov
sbb
dec
aaa
stc
cmc
xor
fstps
adcl
jge
lock
or
daa
das
sub
cmp
jae
out
mov
fldcw
sarl
inc
das
fistpll
test
pop
ja
pop
push
in
and
jg
mov
mov
push
xor
cmp
test
movsb
pusha
sub
loope
je
testl
sbb
and
lcall
jmp
jle
push
lods
xchg
fsub
jo
jo
ljmp
clc
cmp
and
mov
insl
insb
js
nop
sahf
stos
cmp
xor
hlt
push
hlt
cltd
sarb
aad
das
and
mov
pop
clc
or
test
mov
push
cmp
or
mov
out
mov
push
rorl
imul
jbe
rcrl
mov
mov
xchg
popa
cmp
cmc
push
test
mov
insl
push
cmp
sbb
addb
mov
pop
call
mov
aaa
repz
shr
and
jae
jge
dec
cmc
pop
push
mov
jae
into
fcomps
sbb
dec
ja
sbb
pop
and
mov
push
sarb
mov
dec
inc
jp
mov
or
iret
daa
dec
mov
loop
daa
leave
mov
sbbl
xor
mov
push
push
inc
pop
movsb
lds
out
xchg
mov
loop
sbb
int
mov
cltd
mov
shrb
jge
push
mov
xor
lcall
iret
push
loope
jo
sub
fdivs
pop
test
cmp
lea
mov
sub
dec
or
aam
adc
sbb
xor
cltd
sub
sahf
adc
loop
sbb
dec
add
ja
rorb
pop
adc
loop
mov
shr
mov
xchg
fucomi
dec
pop
adc
rcrl
adc
iret
inc
or
aam
sub
arpl
roll
jns
enter
gs
pusha
in
mov
xchg
cltd
int
lss
stos
in
stos
fdivrp
and
xor
cmp
movsb
je
jg
and
test
xlat
jb
outsl
dec
movsl
pop
ret
jge
push
add
mov
mov
push
push
aas
xchg
or
stc
mov
or
jmp
sub
sbb
je
rol
sbbb
call
mov
mov
dec
loopne
ror
stos
adcl
dec
test
je
shl
jl
in
add
out
pop
dec
pop
out
jno
mov
jmp
fisttpll
dec
pusha
das
lds
cwtl
pop
add
mov
in
inc
push
push
pop
lret
pushf
jae
or
jbe
iret
out
mov
test
notl
lcall
push
and
loopne
xor
xchg
lods
adc
or
outsb
and
rcll
popa
push
xor
push
test
shl
pop
and
aam
in
jmp
mov
dec
sub
xchg
out
mov
push
mov
fldl
stos
jge
mov
push
sbb
rcrb
jl
xchg
sbb
mov
arpl
adc
iret
stos
push
adc
pop
fstpt
and
sub
dec
imul
js
add
pop
sbb
xchg
jno
fdivl
xor
pop
js
jo
add
xchg
jno
movb
in
push
fs
vhsubps
test
iret
stos
dec
movsb
xlat
movsb
sbb
outsl
and
cltd
test
aam
mull
fdivr
mov
sub
xlat
add
lahf
pop
ficoml
nop
push
inc
ror
adc
shlb
mov
movzwl
cld
scas
mov
dec
aad
pop
hlt
into
push
repz
add
jno
push
sub
pop
fwait
mov
outsb
fdivl
xor
dec
loop
out
les
lret
outsb
sbb
xchg
ficoms
int
push
test
or
lods
outsb
lods
adc
cli
sbb
jecxz
lock
out
insl
aas
pop
je
fsubrl
das
adc
clc
pop
adc
inc
push
jecxz
sahf
adc
adc
pushf
fstpt
loop
inc
jnp
or
xor
dec
push
lock
iret
rcrl
in
mov
mov
gs
shrl
repz
mov
lret
xchg
push
out
repnz
push
loop
out
movsl
orb
lds
mov
cmp
or
les
pop
or
mov
mov
inc
jle
daa
xchg
adc
mov
pop
out
pop
and
adc
scas
sub
negb
push
mov
xchg
adc
jp
fs
jnp
inc
xchg
fdivrs
popa
mov
out
movsl
pop
loopne
shll
add
fildl
jl
adc
add
in
leave
aad
mov
fnstsw
andl
rolb
cmp
xor
push
inc
xlat
or
sahf
inc
mov
xchg
mov
or
dec
movsl
pushf
pop
mov
sub
cmp
test
bound
inc
mov
stos
out
sbb
push
icebp
aam
inc
dec
icebp
lea
mov
jmp
and
ret
mov
dec
dec
lcall
ret
push
insl
or
sub
sahf
aam
jg
lods
push
and
in
cmp
or
loopne
mov
mov
hlt
mov
out
test
in
sar
push
in
xor
push
dec
outsl
jg
mov
subb
loopne
js
aad
hlt
mov
outsb
adc
loop
addb
test
loop
fistps
cwtl
test
inc
fldt
or
out
in
ret
insl
mov
push
lods
hlt
adc
fcoms
lods
and
dec
jo
sar
pushf
test
popa
daa
and
sub
or
mov
sbb
shrb
push
xchg
dec
xchg
xor
jmp
out
mov
adc
sarl
aaa
inc
adc
mov
push
lods
iret
shrl
jno
xchg
or
xchg
in
jnp
pop
mov
and
sbb
lods
stc
cmp
ret
sahf
stos
dec
sbb
sub
mov
enter
pop
mov
mov
cmpsl
mov
push
inc
dec
test
sub
xor
mov
insb
pop
popf
imul
mov
jno,pt
outsl
mov
mov
andb
cld
or
fbstp
sub
add
mov
gs
sub
jmp
pop
das
movsl
nop
in
lods
js
enter
cmp
sbb
sub
notb
lret
sub
pushf
mov
and
inc
leave
fldt
xor
jno
jmp
push
int
std
shlb
lcall
dec
stc
mov
and
mov
jp
inc
push
nop
lds
xchg
and
movsb
cs
dec
inc
lahf
mov
sti
aas
lea
les
pop
pop
mov
cmp
jno
movsl
push
push
in
jmp
and
testl
test
fdivs
adc
loope
inc
dec
mov
mov
imul
aam
push
xchg
xchg
jne
mov
sahf
or
cmp
icebp
rolb
fs
inc
or
pop
shl
roll
xchg
cs
pop
jg
mov
adc
ljmp
in
filds
arpl
pop
xor
mov
jmp
addr16
imul
lret
lcall
scas
inc
movsb
push
mov
call
movsl
mov
out
lret
add
hlt
dec
add
cwtl
lcall
or
cld
dec
sbb
push
imul
shrb
dec
fcompl
movsl
adc
movsb
jne
mul
adc
mov
es
mov
sub
push
pop
push
stos
xchg
mov
pmulhw
mov
sub
inc
dec
sub
add
into
aad
arpl
stc
cli
pop
sbb
jp
rcrl
mov
pop
cwtl
inc
sbb
test
add
dec
outsb
arpl
cli
sbb
inc
mov
mov
push
lcall
pop
adc
or
push
mov
mov
mov
and
sub
inc
mov
jns
scas
aam
imul
sbb
sbb
push
shr
loope
dec
mov
ds
adc
sti
fcompl
add
jbe
jnp
xor
fdivrs
push
pop
pusha
pop
push
cmp
or
dec
add
mov
cmp
repnz
pop
lret
cwtl
in
popa
mov
pop
cmpsb
stos
lds
inc
jo
dec
in
pop
inc
xor
icebp
out
xchg
jmp
rcrb
movb
addr16
getsec
es
in
cld
add
push
jbe
lret
inc
xchg
mov
out
pop
out
mulb
cs
cld
loop
mov
and
cmp
lahf
scas
rcl
inc
pop
test
out
xor
mov
jp
xlat
cmp
jp
jecxz
xor
pop
repz
out
sti
adc
jg
or
ds
mov
sti
mov
scas
cmpsb
add
pushf
inc
adc
add
into
cmp
scas
sub
rolb
rorb
in
pop
dec
and
dec
cmp
mov
gs
xor
dec
sbb
test
mov
mov
je
mov
sub
les
popf
mov
add
jae
xlat
dec
push
xchg
xchg
outsb
push
dec
dec
and
enter
mov
pop
mov
cs
mov
inc
lret
jb
shld
jmp
sarb
in
hlt
jp
fstp
xchg
xchg
mov
ljmp
fcompl
jnp
xor
popf
sti
fs
addr16
jle
mov
xor
push
pop
cmp
or
out
mov
lret
shll
mov
inc
fsubrp
lret
inc
mov
popa
fimull
das
jle
and
and
push
out
imul
out
stc
mov
jbe
inc
jbe
das
and
jmp
cmp
shl
and
lds
mov
sbb
add
subl
pop
pop
mov
test
fdivrs
fisubrs
xchg
xor
and
dec
mov
fucomi
lcall
in
lret
push
and
pop
cs
dec
adc
or
push
jno
xor
mov
lahf
gs
jnp
mov
ficoms
inc
arpl
lds
loopne
pop
sahf
jno
bound
mov
inc
in
iret
std
cmp
mov
or
cwtl
mov
mov
adc
pop
orl
insl
mov
daa
nop
sub
push
sub
mov
add
mov
cs
jp
jae
loope
or
jno
int3
addb
fcmovu
adc
add
shll
push
in
dec
pop
outsl
add
loopne
out
adc
inc
ss
and
xor
ss
adcb
pusha
mov
gs
sbb
pop
cmp
jl
jnp
out
inc
cmp
xchg
pushl
call
or
xchg
loop
pop
nop
loop
xor
sbb
cmp
pop
das
dec
rcrl
clc
insb
lret
pushf
loopne
mov
test
adc
and
jg
sbb
ljmp
and
jl
imul
cmp
mov
cli
lods
fs
cld
mov
int3
enter
xor
jmp
fisubrl
xchg
cmp
jo
jne
test
push
loope
and
and
outsb
outsl
pop
add
enter
dec
jbe
push
and
mov
jl
cmp
mov
jp
jb
dec
stc
repz
add
icebp
movsl
sub
jmp
cli
in
leave
fsubr
xor
mov
loopne
jg
rcll
sbb
stos
cli
int
movsb
fadds
xor
adc
jnp
mov
loopne
sbb
dec
mov
mov
repz
clc
push
pop
mov
mov
sbb
cmp
adc
cmp
out
inc
and
sbb
fisttpll
xchg
pop
dec
bound
mov
jae
lock
bound
and
es
sub
arpl
popf
in
ja
aam
jno
sub
aam
pusha
ret
cmp
xlat
and
pop
xchg
mov
and
cmp
loop
lret
insb
sub
mov
lods
mov
stos
test
pop
jl
cli
jge
jnp
out
inc
std
leave
inc
ja
xchg
fs
test
mov
add
loopne
je
mov
fwait
popl
lock
call
scas
push
repnz
test
aad
xchg
loop
mov
inc
cmp
mov
adc
xchg
lock
inc
xchg
mov
jge
mov
and
int3
push
lods
adc
test
dec
adc
pop
cmpl
pop
addr16
xor
cmpsb
lret
pop
test
mov
pop
repz
xor
loop
std
test
inc
or
in
loope
iret
ds
dec
jb
adc
fdivr
inc
arpl
sbb
and
sub
sbb
mov
mov
fisttps
jmp
addr16
pop
out
inc
xor
mov
inc
aam
and
popa
addr16
inc
xchg
push
push
cmp
stos
gs
xor
lret
ret
lods
and
std
push
cmp
sbb
sub
sysexit
adc
mov
mov
addr16
and
cmp
cwtl
add
add
ss
loop
adc
pop
mov
dec
adc
cmp
or
adc
int
adc
fisubs
jne
push
jl
ja
mov
and
push
lods
push
cmp
les
je
pop
push
lock
mov
dec
inc
jne
popa
mov
sub
xor
mov
imul
sbb
cmc
pusha
dec
add
cmp
in
jmp
pop
sbb
xlat
mov
push
mov
icebp
inc
cld
sub
nop
ret
adc
pop
pop
ftst
lock
or
or
push
inc
inc
movsb
or
or
andl
lcall
or
pop
jecxz
lahf
sbb
dec
lds
testb
sbb
cmp
icebp
or
pop
rol
movsl
or
mov
jmp
pop
pop
aam
cmp
jp
mov
xchg
fnstsw
mov
cmp
dec
out
cltd
pop
or
mov
mov
inc
sahf
xchg
xor
daa
and
mov
or
xchg
add
mov
xchg
sbb
in
stc
add
cmp
ss
insl
jnp
aas
and
add
and
and
jecxz
popa
ja
xchg
or
stc
mov
and
int
dec
push
scas
sbb
leave
aas
adc
push
and
pop
jecxz
mov
xor
ret
je
mov
push
sub
into
xlat
mov
sbb
cmp
aad
sbb
sub
je
push
aad
xor
rorl
lcall
and
jo
int
in
inc
jbe
sti
les
ja
repz
cmp
scas
cld
mov
repz
outsl
lods
shrl
sbb
sti
add
mov
popa
lcall
in
fcmovbe
mov
cli
daa
jle
rcrb
or
add
leave
sbb
sub
adc
xchg
out
insl
in
loope
popa
out
ret
fst
test
in
lret
int3
cmp
or
mov
push
int3
mov
push
xchg
call
inc
psraw
xor
xchg
scas
jmp
out
aaa
dec
push
xchg
in
inc
pop
int3
in
dec
jmp
or
int3
hlt
and
andb
lods
or
or
int
in
mov
dec
mov
cld
vminps
xchg
adc
ret
subb
and
popa
xchg
fs
push
mov
dec
xchg
xor
mov
mov
dec
inc
or
loopne
stc
mov
inc
int
inc
dec
mov
stos
dec
push
out
xor
or
lcall
jo
movsb
dec
int3
cmp
mov
or
and
jns
dec
pop
enter
inc
dec
rorl
cmpsl
push
mov
xchg
jae
adc
sub
dec
or
mov
mov
push
rclb
jecxz
or
jmp
ret
pop
xchg
push
call
movsb
mov
inc
mul
or
cmc
insb
mov
xchg
idivb
push
push
dec
lahf
adc
add
dec
push
jnp
pop
and
movsl
sbb
adc
mov
in
dec
and
dec
pop
movsb
loopne
push
sbb
cmpsb
sbb
cmp
fwait
sub
inc
add
clc
hlt
addr16
cmp
push
sbb
mov
cmp
lds
adc
adc
lcall
add
inc
jg
xor
or
ss
ret
cmp
sbb
jg
js
pop
sub
aad
mov
xchg
sub
adc
jbe
aad
inc
mov
xchg
push
jbe
pop
cmp
insb
stc
es
sub
mov
xor
lret
inc
cwtl
movsl
pushf
push
decl
mov
mov
scas
or
cld
movsl
sub
insb
cltd
mov
mov
hlt
sub
ja
scas
jmp
dec
push
cs
ss
ja
enter
xlat
leave
js
in
in
sbb
jge
sar
test
or
inc
cs
inc
inc
cs
sub
leave
and
push
push
in
adc
out
push
xor
sub
sti
lods
sub
in
and
dec
pop
shrb
xor
cmp
hlt
dec
cmp
and
pusha
and
pop
or
inc
dec
dec
and
xorb
cmp
adc
or
mov
adc
ljmp
xchg
and
sub
xchg
add
subl
in
jmp
inc
lcall
sub
jle
dec
hlt
sbb
std
dec
push
outsb
and
jmp
jle
dec
pop
lock
mov
inc
xchg
std
xchg
add
mov
fimull
out
xor
in
gs
cmp
iret
sahf
pushf
xor
test
data16
push
pushf
pushf
enter
lret
xchg
or
fcmovnu
decl
enter
and
mov
insl
out
pop
std
jg
pop
shlb
jmp
in
pop
rcll
ds
add
outsl
push
jb
fcoml
xchg
lods
lret
inc
int3
fcomps
nop
int3
inc
outsb
dec
or
adc
ret
out
jge
mov
inc
fs
dec
pop
sub
mov
fsts
lcall
mov
adc
add
mov
cmpb
in
sbbl
jne
or
mov
cmp
ds
pop
pop
dec
cmp
das
scas
lcall
xor
mov
mov
xchg
mov
dec
jns
mov
cmc
mov
mov
testl
push
inc
cwtl
jne
jle
lahf
dec
mov
push
sahf
adc
add
push
mov
inc
clc
es
rcpps
xchg
lahf
mov
xchg
dec
dec
mov
mov
cmp
gs
out
push
icebp
inc
cltd
xor
lock
add
fdivs
xchg
repnz
lret
mov
pop
mov
xchg
ja
push
inc
fldcw
movsl
inc
jne
adc
pushf
int
mov
cs
push
lahf
xchg
push
mov
mov
fwait
leave
bound
bsf
pop
negl
inc
inc
in
inc
jb
mov
lret
ljmp
pop
cld
push
add
jno
jb
dec
dec
push
addr16
in
cmp
fxch
ret
jb
test
adc
inc
sub
mov
pop
jo
hlt
shll
or
jmp
lret
lods
shlb
xchg
pusha
jbe
push
cld
mov
jmp
mov
xlat
mov
sbb
add
sar
xchg
test
xchg
sbb
dec
sbb
xchg
fstl
inc
lea
jmp
stc
adc
rcrb
push
inc
fstps
mov
repnz
enter
pop
push
dec
and
rcrb
mov
jl
mov
repz
stos
mov
adcb
mov
xchg
xor
adcl
inc
jne
adc
repnz
adc
lret
pop
rcr
sbb
xor
xchg
sub
das
scas
dec
xchg
les
mov
js
popf
adc
test
xchg
int3
fchs
in
lret
enter
xchg
jae
pop
div
push
sti
cmpsl
mov
sbbl
xchg
inc
adc
inc
xor
cmc
cmp
hlt
cmpsl
lret
cmpl
mov
fisttpl
jae
jnp
cmp
test
dec
stc
pushf
jne
sub
cmc
cltd
pop
daa
test
dec
out
lea
icebp
mov
cli
xchg
sub
out
lcall
sahf
sub
ss
lea
dec
out
inc
lahf
or
add
push
push
xchg
dec
addr16
fidivs
or
test
cmc
adc
ljmp
adc
aad
outsl
fsubs
cmpsl
out
adc
fnsave
xchg
mov
or
jl
inc
clc
mov
jno
enter
ja
jo
push
and
mov
or
sbb
xor
jns
cmc
mov
arpl
sbb
cli
into
les
ja
jmp
jp
xor
loopne
add
lock
pop
or
scas
fnstcw
mov
mov
xchg
add
xchg
mov
out
pop
dec
inc
sbb
mov
or
in
cmp
cmp
iret
and
cmp
or
mov
ljmp
fdivp
jecxz
mov
in
and
push
cs
cmp
adcl
jne
pop
push
or
dec
daa
orl
inc
into
add
xor
mov
movsb
scas
sbb
cmp
adc
pop
jae
sbb
push
push
loop
cld
mov
pop
fbstp
push
cmp
scas
add
sti
lcall
in
xor
nop
int
xlat
pop
stc
mov
and
sahf
add
adc
dec
ret
pushf
aas
les
or
push
cmp
jb
js
scas
sub
fdivrp
inc
inc
out
loopne
test
into
addl
xor
add
adc
inc
pop
xchg
mov
int3
pop
push
cmpsb
pop
push
adc
or
jae
xchg
push
test
fs
push
jae
loop
je
aas
or
mov
sbb
or
push
mov
mov
ret
xlat
sahf
push
mov
jecxz
cmpsl
stos
cmp
imul
ja
sbb
popa
pushf
mov
ret
andl
mov
shll
xor
mov
cmp
testb
dec
insl
push
addr16
jnp
mov
xchg
inc
xor
and
les
cld
stos
adc
in
pop
out
psllw
adc
push
xor
inc
mov
jle
ljmp
jl
and
call
lods
sahf
icebp
cmp
mulb
or
rolb
adc
mov
cmpsl
or
stos
adc
sub
cltd
cmp
and
push
sbb
xor
push
jns
pop
push
dec
into
fnsave
jg
inc
fdiv
outsb
or
xchg
shlb
out
jp
dec
pop
les
mull
dec
pop
inc
fwait
push
sbb
fstps
insl
dec
pop
fsubr
in
fdivs
push
mov
xchg
xchg
or
jp
lret
sub
push
jnp
das
add
daa
popa
das
icebp
icebp
std
into
fldt
popa
add
pop
sub
sbb
dec
cmp
push
mov
inc
into
inc
xor
mov
lcall
in
dec
adc
cmp
xchg
cwtl
jo,pt
out
daa
ret
movb
xchg
pop
les
add
mov
aaa
jns
mov
sub
cli
outsb
sbb
mov
sar
jbe
xor
cmp
jmp
jecxz
jnp
hlt
add
push
add
inc
dec
pop
clc
out
fdivrs
sub
push
lods
fwait
push
in
push
xor
pop
dec
jnp
cltd
adc
mov
aad
mov
mov
lods
pushw
test
jg
adc
ret
jle
mov
and
jg
les
inc
xor
xlat
jl
outsl
dec
add
jnp
cmp
push
sub
shl
cltd
sbb
jns
push
push
push
andl
pop
in
mov
mov
ja
jbe
addr16
or
clc
mov
dec
push
mov
int3
lock
mov
stos
std
xor
cmp
push
jle
fidivl
mov
add
cmp
jl
jb
ret
repz
ds
aas
rcl
mov
outsb
dec
and
or
push
outsl
pushf
cwtl
mov
out
mov
jnp
xchg
imul
div
mov
add
mov
mov
dec
mov
adc
sbbb
jns
sbb
inc
or
add
mov
ret
orl
dec
cmp
sti
sub
and
or
movl
sub
sbb
cmp
push
fwait
call
dec
jbe
push
fcmovb
ffreep
or
mov
push
mov
ja
ret
xchg
pop
mov
clc
mov
and
imul
mov
xor
mulb
or
xor
je
stc
outsl
pop
push
ja
mov
push
scas
in
mov
sti
pop
mov
sbb
stos
mov
insl
xchg
add
lods
and
xchg
add
mov
ret
dec
fs
mov
jl
adc
scas
repnz
in
inc
pop
cmp
inc
sub
xchg
dec
mov
or
iret
sbb
jl
sarb
xchg
shlb
stos
cmp
mov
and
sub
addr16
std
xchg
cwtl
push
inc
cmp
mov
lods
adcb
addr16
cmpsb
mov
add
xchg
push
cmp
sbb
mov
icebp
sub
aaa
call
popa
lcall
and
mov
fistps
bound
js
jg
stos
mov
cltd
or
scas
bound
popa
jb
jno
mov
scas
lods
cs
jmp
sbb
decl
iret
test
mov
dec
dec
jmp
or
dec
iret
jno
adc
jecxz
aas
xor
test
lret
lea
test
clc
ret
or
repz
or
aaa
sbbl
movsb
jo
roll
std
andb
and
nop
shlb
pop
mov
arpl
push
sbb
sbb
cwtl
jno
push
sub
fucomp
pop
mov
shrb
push
sbb
jo
and
cwtl
ret
sbb
pop
cwtl
les
xor
xor
icebp
ss
ss
repnz
stos
pop
xorb
imul
cmpsl
mov
pop
fs
test
lret
xchg
dec
dec
sbb
aad
test
lds
sub
test
xor
ja
and
outsl
inc
sub
stos
lods
arpl
mov
cmp
ret
das
push
testb
mov
jl
and
loope
xchg
testl
iret
mov
jnp
dec
pusha
mov
mov
mov
lret
xor
add
jo
shlb
clc
in
aad
pop
out
dec
push
jg
lret
jg
push
inc
and
adc
or
dec
mov
mov
ret
cmp
gs
lea
xchg
aaa
and
mov
mov
or
inc
repnz
sti
daa
push
xor
mov
shrl
pop
lock
mov
test
sbb
imul
xchg
sub
dec
jmp
cmp
dec
cmpsl
add
sub
int3
adc
fsubrl
or
addr16
or
loopne
mov
es
ret
jle
sarl
and
sti
lock
mov
or
xchg
jg
sub
cmp
lods
rorb
idiv
adc
dec
aas
ljmp
cmp
bound
xchg
pop
call
mov
ja
fnstsw
les
adc
push
jge
fdivl
insb
add
xchg
jmp
add
jmp
aaa
pop
js
jbe
lahf
xlat
add
sub
and
cmp
sub
ljmp
fcmovnb
xor
xor
inc
sub
stos
xchg
call
dec
jae
hlt
push
adc
pop
xchg
jle
fwait
leave
lahf
xchg
and
scas
movsb
push
imul
jg
pop
lea
push
aaa
pushf
lock
inc
cmp
outsb
push
fs
mov
inc
add
pop
loopne
repnz
es
ret
int
push
shl
pop
inc
fbstp
les
andl
sub
movsl
jmp
bound
rcll
lret
cltd
leave
rclb
sub
int3
jge
xchg
sbb
rcrl
pop
lcall
orl
lock
mov
imul
loope
mov
mov
out
scas
addr16
insl
sub
fldt
bnd
jmp
mov
je
push
pop
aad
jno
mov
adc
adc
add
int3
push
test
cmp
js
gs
gs
shrl
sbb
sbb
cmp
inc
and
lock
xchg
inc
fdivrs
mov
repnz
push
nop
mov
rorl
andl
fdivrs
into
add
mov
jge
or
sub
test
xchg
out
scas
clc
addr16
loope
cmp
and
stos
xchg
fcompl
sbb
inc
mov
dec
mov
pop
jbe
imul
xor
and
inc
test
mov
sub
add
leave
loop
xchg
rcl
cmc
fcoms
sbb
push
mov
jns
mov
cmpsb
jae
scas
sub
cmp
and
jns
mov
je
pop
dec
adc
mov
fmull
lret
dec
cmp
cmpsb
movsl
mov
les
dec
push
pop
push
loop
movsl
sbb
sarl
das
dec
add
mov
jb
repz
iret
lret
sub
loop
push
das
stos
jecxz
inc
js
mov
sub
iret
push
mov
cmp
pop
mov
cmp
xor
loope
or
add
mov
or
dec
sbb
mov
ds
in
lahf
sub
add
test
call
movsb
xchg
mov
movsb
int
leave
dec
js
rclb
sahf
data16
fucomp
fsubs
push
or
add
cwtl
mov
add
in
in
aas
call
repz
cmpsl
mov
roll
shll
les
cmpsl
mov
pop
fnstsw
cmp
cmp
mov
add
out
ret
inc
icebp
movsb
or
cmp
xlat
jns
insl
pushl
and
pop
inc
add
xchg
es
or
fld
sub
vpmacssdql
sub
clc
push
sub
push
mov
xor
ss
imul
push
mov
pusha
push
ja
jo
push
jmp
or
push
push
add
imul
mov
fiadds
push
mov
jae
aaa
insl
out
call
mov
jl
popf
outsl
clc
sub
add
popf
lock
mov
ds
fdivl
lea
data16
dec
cmp
aaa
faddl
into
xchg
cmp
cwtl
fidivl
shl
jns
mov
nop
ljmp
xchg
inc
dec
pop
pop
aas
js
sbb
adc
jb
pushf
jle
push
inc
jmp
movsl
lcall
pop
add
rcll
ljmp
pop
mov
and
daa
push
push
repz
stos
jg
mov
test
add
mov
lods
fs
push
pop
sbb
mov
or
jle
pop
xchg
sub
cli
push
outsb
xor
fwait
lret
xchg
lret
dec
shlb
je
sbb
xchg
push
dec
rcrl
movsb
inc
push
insl
loope
inc
popf
jno
pushf
mov
mov
fists
clc
js
cmp
mov
and
loop
push
mov
xchg
mov
mov
test
mov
mov
sub
clc
push
fbstp
hlt
mov
cmp
fsub
lock
adc
lds
dec
insb
ljmp
fists
pop
stos
cmpsb
mov
adc
xchg
mov
sub
clc
dec
cs
jp
xchg
imul
dec
mov
xor
cli
or
sbb
sub
pop
xchg
stos
fildl
or
test
mov
std
push
jmp
mov
test
aam
sbb
aad
int
mov
sbb
sahf
inc
inc
or
mulb
or
es
mov
pop
lock
call
lahf
daa
add
inc
cmp
or
lret
in
pop
sbb
imull
movb
sub
fstpt
and
cwtl
lods
jge
and
or
sahf
ret
insl
sbb
lods
sbb
pop
xchg
lods
sub
js
add
rclb
mov
xor
stc
push
cmp
adc
xchg
ret
dec
gs
shl
test
sub
stos
nop
xor
inc
xchg
ja
clc
flds
adc
filds
jbe
iret
add
inc
dec
jno
adc
push
xor
jecxz
xchg
dec
lods
mov
negl
sahf
pop
push
cmp
jns
scas
dec
les
sahf
icebp
int3
xor
test
push
add
insb
jp
cmp
or
pushf
dec
cmpsl
and
arpl
add
sar
aaa
sub
cmp
inc
js
jle
fucomip
cmp
inc
cmp
loopne
cmp
aam
sahf
dec
sahf
and
mov
mov
and
pusha
sbb
cmc
adc
lret
js
cmpsl
je
dec
inc
mov
repnz
sbb
dec
inc
outsb
rclb
pshufw
roll
mov
fildl
loope
sbb
repz
lret
nop
xor
mov
jae
and
sbb
pop
enter
in
leave
or
insl
inc
in
jne
enter
hlt
mov
ret
sbb
mov
filds
imul
or
push
fs
test
loopne
sarb
push
push
loop
jg
aam
loope
aas
into
pop
or
jb
push
push
js
imul
jle
or
inc
in
or
data16
fwait
lods
push
adc
pop
add
mov
inc
test
inc
cmc
jno
mov
in
std
inc
das
mov
and
xchg
xor
repz
aas
cmp
mov
and
out
loop
push
lds
mov
jns
mov
into
mov
jnp
dec
jo
mov
stos
jg
lds
fidivrs
out
cltd
test
jmp
out
mov
lret
bound
sti
mov
cmp
outsl
dec
add
mov
scas
lock
xchg
dec
jecxz
jmp
or
loope
aad
dec
movsl
popa
aas
loopne
push
in
inc
mov
pop
into
cmp
scas
nop
cltd
imul
pop
popa
sbb
inc
mov
mov
push
sub
scas
push
cwtl
jecxz
fwait
mulb
stc
inc
out
push
ss
jmp
pop
faddp
sarb
movsl
pushf
push
mov
inc
dec
loop
out
mov
mov
pop
in
lret
lods
into
pop
mov
add
push
mov
aam
loopne
jge
out
inc
cmp
sub
xchg
or
push
ds
cwtl
cmpsb
xlat
sbb
mov
mov
movsl
mov
lret
cmp
xchg
test
or
js
ret
sbb
daa
mov
jnp
jecxz
jg
stos
lret
icebp
xor
roll
sub
aas
rcll
push
push
xchg
push
add
jle
mov
pop
cs
mov
das
xchg
out
in
jbe
cmp
bound
xchg
add
es
pop
adc
and
cmp
fcomip
mov
pop
jno
jns
mov
cmp
sbb
test
addr16
sub
out
add
negl
fdivp
add
xor
int3
stos
sbb
dec
loope
rorb
push
icebp
cmp
mov
fwait
pop
cmpsb
cmp
inc
cmp
test
push
inc
clc
push
mov
mov
inc
pop
data16
data16
jge
mov
jmp
sub
cmp
mov
jbe
pop
aaa
out
adc
xchg
faddl
lret
jge
and
flds
movsb
stos
mov
and
xchg
mov
cmp
ret
cmpsb
aam
mov
jae
adc
fstps
das
xor
xor
dec
mov
stos
mov
clc
pop
sub
add
jno
inc
data16
pop
sub
or
fs
inc
clc
dec
adc
out
es
push
movsl
decb
es
push
push
cmp
inc
dec
hlt
aad
lret
ret
mov
mov
mov
xlat
scas
roll
push
lret
mov
cmp
and
mov
or
rcll
push
adc
cmp
fists
sub
sahf
mov
aad
lods
sbbl
and
fiaddl
inc
xchg
loopne
mov
shll
in
xor
jp
rcrb
aam
leave
clc
jmp
popf
sbb
ja
inc
ljmp
in
ss
nop
cmpsl
outsl
add
mov
adc
scas
mov
ret
aam
fisubrl
and
jno
aas
push
sub
scas
insb
fnsave
test
rorb
es
lret
fcos
cmp
push
mov
mov
add
loopne
cmp
mov
push
xor
push
pop
cld
push
or
mulb
jno
sarl
mov
shl
cmp
inc
or
ret
adc
xor
jl
clc
lret
lods
push
jae
je
jo
rolb
lret
mov
push
out
and
scas
sbb
mov
jp
lret
sbb
fcoml
sub
pop
inc
pop
aas
adcb
lret
mov
hlt
int
pop
inc
idiv
pop
mov
sub
pop
inc
jmp
ds
pop
inc
das
adc
push
mov
push
cmp
jbe
dec
pusha
std
lods
shrl
sbb
fidivrl
loope
or
insw
mov
popa
fs
sbb
fldenv
sub
ljmp
cmp
dec
insb
cltd
and
push
fstps
sbb
mov
adc
mov
repnz
negb
out
fcmovnb
dec
scas
mov
pop
mov
lock
push
sbb
clc
fmuls
ret
test
mov
imul
jl
and
mov
mov
adc
push
inc
aad
sub
sub
xor
mov
mov
jg
cld
inc
ljmp
sbb
fstps
pop
dec
add
in
xor
pop
into
xor
out
movsb
leave
sub
cmp
adc
pop
sub
movsb
iret
flds
movsb
push
or
ficompl
add
nop
adc
pushf
sub
fcompl
pop
scas
hlt
es
ret
call
mov
leave
dec
add
pop
sbb
ret
dec
es
xchg
das
adc
bnd
adc
push
sbbl
gs
add
hlt
leave
fists
or
lcall
adcl
mov
sbb
es
xchg
add
dec
insl
jae
out
clc
push
stc
cld
jbe
arpl
in
xlat
test
int
addl
sub
inc
nop
mov
dec
or
pop
or
sub
shll
ret
push
and
mov
in
insl
jnp
ret
lcall
add
push
and
out
les
and
imull
sbb
leave
sahf
std
lret
mov
cmpl
popf
xor
push
inc
lret
mov
mov
add
lods
ja
sbb
mov
push
sbb
cmc
mov
jge
mov
out
xor
lahf
sub
inc
aaa
xchg
and
outsb
mov
ds
loopne
dec
dec
arpl
lds
mov
mov
in
in
in
rclb
xor
mov
sbb
xchg
int3
mov
aaa
rol
call
sti
dec
xor
pop
xor
xchg
repnz
mov
fs
js
jg
int
rorb
inc
nop
push
test
lret
gs
test
push
aam
and
arpl
inc
mov
fidivs
mov
jl
inc
sar
shlb
or
mov
mov
sbb
cmpsb
xchg
int
jmp
sahf
cld
out
sub
sbb
or
mov
jg
pop
push
pop
mov
and
and
push
sub
push
adc
fdivl
fdivrs
push
jmp
lea
sub
sub
test
int
and
mov
mov
out
xchg
add
jns
int3
mov
cmp
xor
testl
xor
ljmp
in
sub
sub
inc
aas
cwtl
cltd
adc
out
orb
cmpsl
out
cmp
cs
sbb
decb
jns
adc
cmpb
lods
and
jno
ret
arpl
and
dec
call
mov
sahf
jl
add
mov
or
pop
lds
sub
call
pop
mov
mov
cmp
imul
sbbb
cmp
movd
xchg
mov
imul
dec
xchg
jnp
add
xchg
insb
dec
adc
stos
leave
mov
setl
ds
fists
jl
nop
pusha
xorb
js
fcoml
push
mov
cmpsb
cmpsb
shrl
je
inc
pop
pop
fidivrs
sti
sbb
das
lds
sbb
cld
mov
pusha
adc
sbb
fs
pushl
pop
fcomps
pop
mov
mov
add
ficoml
aam
inc
sbb
negb
dec
or
pushf
jmp
dec
xor
pop
sarl
ret
fcmove
xor
cmpsl
mov
dec
add
adcb
sbb
xor
call
sub
inc
mov
push
movsb
nop
aas
push
or
fcoml
gs
lcall
or
xor
pop
stc
pop
add
shll
testl
push
cltd
jo
xchg
xor
scas
pop
xor
test
mov
ja
clc
mov
loopne
mov
out
lahf
mov
fisttpl
imul
adc
fisubs
in
xor
leave
or
add
fidivrl
ja
andb
fidivrs
fadds
and
enter
mulb
cmpb
outsb
pop
ds
js
dec
ljmp
out
insb
adc
out
aad
push
mov
mov
or
cmc
inc
repz
xorl
gs
mov
ja
jb
test
lods
int
inc
pushf
jge
mov
lcall
movsl
and
cwtl
jnp
jb
pop
add
mov
inc
inc
shlb
jecxz
inc
int3
push
cmp
push
jbe
cmp
sahf
mov
push
out
adc
loope
adc
gs
ret
mov
inc
sarb
xchg
xorps
imul
mov
sbb
icebp
cli
or
sbb
arpl
adc
orb
lea
jge
insb
andb
fldcw
dec
xchg
xor
sbb
cmp
or
test
jno
sub
jne
jbe
xchg
cmc
adc
and
jecxz
cmp
fnstcw
jns
mov
inc
sub
ljmp
in
sub
pop
and
popf
cmp
jb
cmp
pop
pop
mov
xchg
les
jg
push
dec
hlt
cltd
insb
test
lds
xchg
jnp
mov
and
stos
add
lcall
dec
sahf
sbb
push
jge
ljmp
call
fists
cmpb
xor
stos
ja
push
jmp
mov
daa
xor
sub
add
sub
pop
popf
test
xor
addr16
daa
pushf
jb
loope
outsb
orl
pop
pop
xchg
addr16
aad
lods
add
aaa
push
jnp
or
sub
jp
xor
push
inc
mov
nop
inc
outsl
pop
pusha
imul
xchg
ja
or
pop
insl
ljmp
xchg
test
cwtl
jg
xor
scas
hlt
sbb
push
aad
xchg
stos
sub
addl
or
lret
sbbl
lea
push
push
cmp
sbb
in
jo
and
repz
stos
push
sbb
pusha
cmp
dec
aad
push
pop
hlt
test
int3
fnstenv
jmp
cmp
mov
sbb
je
call
inc
and
frstor
push
dec
fwait
ja
mov
outsb
shll
mov
scas
mov
sar
stc
mov
mov
cmp
push
pop
sub
repnz
or
adc
fwait
into
fdivl
and
jge
bound
mov
test
adc
add
mov
fdivl
mov
add
pop
test
adc
ret
test
ret
adc
or
mov
enter
xchg
sahf
rcrb
dec
fwait
mov
jb
shlb
scas
dec
adc
divb
adc
enter
jbe
jae
push
leave
test
repz
into
push
outsl
inc
inc
xchg
mov
arpl
std
sub
adc
mov
mov
push
sahf
sub
std
xor
ret
jecxz
das
in
stos
mov
xchg
and
pop
and
hlt
loope
pushl
sub
xchg
mov
push
add
fcomps
inc
mov
adc
xlat
cmpsb
andl
int
test
cli
mov
dec
sub
push
test
xchg
scas
pop
ja
inc
arpl
in
and
cmpsb
popa
jne
inc
sbb
stos
in
lds
add
xchg
xchg
mov
jne
sbb
cltd
lcall
cmp
sub
pop
mov
mov
insl
lahf
popa
push
lds
sub
mov
ficoml
imul
repz
mov
add
shll
pop
aam
in
pusha
sbb
rcr
mov
shr
je
clc
mov
pop
push
pop
add
sbb
lret
mov
pextrw
and
adc
inc
jmp
pop
xor
and
sub
xchg
mov
mov
mov
xchg
push
div
mov
test
dec
jp
dec
xchg
cmp
pop
movsl
push
in
lock
in
cltd
stc
jb
xlat
sbb
xchg
cmpb
rolb
xchg
into
cs
inc
fcompl
lds
sbb
dec
mov
sbb
cltd
pop
shll
mov
inc
sti
ljmp
dec
subb
add
add
xor
dec
daa
cli
clc
and
or
push
push
or
insl
cmp
aas
stos
mov
jo
jl
jb
dec
fisttps
int
push
mov
pushf
lods
daa
imul
jmp
imul
add
mov
addr16
and
sahf
orl
sahf
adc
xchg
scas
cmp
mov
inc
xor
push
mov
mov
enter
ljmp
add
jbe
pop
scas
mov
pusha
push
and
std
rcrl
stos
push
pop
test
pop
jae
into
bound
push
jg
adc
lock
push
or
pop
mov
mov
or
loope
xor
call
rcll
cmp
imul
test
push
sti
arpl
mov
sub
jno
mov
push
cmovae
ret
xchg
imul
loop
jno,pt
xchg
popa
jp
nop
es
stos
push
icebp
imul
cwtl
fcomip
lds
dec
dec
mov
jl
and
enter
xor
jle
push
hlt
xchg
add
adc
and
imul
or
shrb
vpermq
rolb
add
imul
jbe
sbb
pushf
cmp
inc
sbb
icebp
fwait
pop
bound
add
decl
divl
inc
push
lcall
cmp
fmuls
mov
or
gs
sub
mov
jmp
push
test
or
and
in
ret
stos
or
js
movsb
xlat
rcrl
fisttpll
aas
lcall
mov
and
vpmullw
sti
popf
pop
flds
lret
loope
incb
jns
in
lods
jg
ret
sbb
popa
fsubs
insl
dec
xorl
fistpl
push
jmp
fstps
jmp
stos
das
and
pop
clc
arpl
pop
scas
pop
lahf
sbb
pushf
in
cmp
shll
pop
jb
push
shlb
jae
sahf
jle
dec
add
adc
sub
jne
pop
xor
mov
inc
and
dec
lahf
std
dec
sub
mov
push
sub
jne
jae
push
enter
jmp
pop
xor
cmp
fidivs
incb
adc
in
add
or
mov
xchg
iret
mov
push
mov
adcl
mov
les
inc
call
push
mov
sub
aad
lahf
cmp
pusha
call
xchg
cmp
jno
imul
or
push
mov
or
lret
jecxz
mov
popa
lods
inc
pop
jns
repz
fsubr
push
cmp
jecxz
jo
and
leave
add
scas
scas
inc
cmp
in
repnz
jmp
or
dec
mov
idivl
lock
xchg
hlt
enter
jbe
xchg
lret
add
stc
notb
jp
gs
pop
js
test
jo
and
movl
inc
push
repnz
mov
add
or
jno
mov
and
cwtl
mov
inc
cli
add
enter
adcb
push
bound
addl
pop
scas
sti
test
xchg
jge
dec
dec
stos
dec
test
popf
push
mov
push
adcb
jno
jb
jno
jp
sub
or
ret
mov
sub
add
inc
rorb
sbb
in
push
inc
faddp
fdivl
push
out
jge
fisttps
jl
std
pop
xchg
pop
inc
xor
push
clc
jne
xchg
out
cmpxchg
xchg
and
jne
xchg
and
jmp
fidivs
push
lea
andb
push
fisubrs
std
mov
sub
movsl
sbb
mov
ljmp
mov
ja
jne
or
fadd
xor
mov
sub
das
cld
or
sbb
dec
dec
cltd
inc
movsb
sahf
ret
lock
pop
pushf
push
movsl
xchg
xchg
aaa
xor
or
and
xor
bound
cmc
sub
jnp
stos
fsubl
push
mov
sbb
adc
add
adc
pop
loop
pusha
scas
fdivrs
repz
jnp
daa
bound
xchg
lds
push
cmp
stc
cwtl
xchg
xor
cmc
jno
push
sahf
jb
pop
mov
push
mov
push
mov
add
push
adc
aas
adc
add
repnz
xor
xchg
cmpsl
mov
clc
and
cs
fisttps
mov
push
xchg
sbb
push
js
adc
scas
jecxz,pn
or
stos
mov
sbbb
pop
aas
iret
pop
fiadds
rol
dec
fidivrl
or
ljmp
lcall
insb
dec
mov
push
sbbl
inc
cmp
and
loop
testl
inc
sbb
jne
outsl
sbb
into
mov
loopne
mov
mov
adc
into
test
pop
dec
and
sahf
in
out
adc
xchg
push
fsts
pop
repz
lahf
xchg
add
popa
daa
movsb
or
lret
mov
call
es
out
push
dec
cmp
dec
jg
orb
adc
sbb
mov
imul
mov
pop
out
cmp
outsl
jae
xchg
cmp
das
and
mov
test
js
nop
sbb
mov
xor
jno
insl
and
adc
cmp
sbb
jae
in
hlt
movsb
fdivs
stos
cltd
pusha
std
lock
adc
std
add
push
movsl
dec
inc
mov
rcl
aas
call
jb
lret
icebp
insb
mov
dec
add
jl
jge
movsb
inc
fsubrl
aad
sub
sahf
push
dec
jns
mov
adcb
pop
jecxz
sti
push
adc
sti
dec
sbb
inc
call
imul
out
int
sub
jae
loope
pushf
xor
mov
mov
push
pop
hlt
pop
sub
pop
subl
repz
repnz
mov
and
jl
mov
xchg
mov
lret
icebp
jns
xchg
push
mov
jne
push
std
addr16
inc
ret
xor
scas
add
xchg
push
mov
or
lea
mov
cld
int
or
outsl
adc
cltd
jne
dec
shlb
test
sbb
sub
push
push
adc
adc
insl
fldt
addr16
sub
scas
imul
add
mov
fdivl
pusha
sub
mov
iret
cmp
fs
and
xchg
mov
test
xchg
mov
xor
pushl
insl
pop
repz
punpcklbw
hlt
movsl
pop
sbb
std
and
add
shlb
int
or
mov
cmp
outsl
add
fmulp
push
imul
rol
jbe
cmp
pop
lret
dec
adc
imul
jne
insb
dec
fs
inc
loopne
dec
popa
dec
das
add
inc
int3
cmp
add
xchg
pusha
xor
add
call
mov
jbe
lds
mov
and
sub
fnstenv
jle
jl
adc
mov
cmpsb
push
cmpl
xorb
xchg
jns
sub
scas
fsubrp
int
mov
mov
add
add
mov
jmp
gs
imul
mov
stc
gs
push
or
sbb
out
jle
test
or
pushf
es
movsb
les
cmpl
pop
dec
es
cld
loope
add
repz
outsb
jb
sub
out
jnp
mov
pop
jecxz
aam
xchg
subb
cmp
inc
insb
add
and
pop
and
aam
dec
push
nop
push
outsb
and
push
mov
pop
add
sub
sarl
je
leave
cmp
cmp
and
pop
es
sbb
jecxz
leave
adc
ret
mov
outsb
jno
in
jbe
sub
repnz
ret
push
loop
data16
inc
scas
enter
lcall
or
add
and
ja
add
sahf
cmc
into
dec
lret
sbb
cmp
mov
shl
pop
adc
mov
inc
jns
daa
dec
dec
into
and
cmc
sub
mov
push
negl
push
jecxz
sbb
addl
in
cltd
test
xchg
dec
mov
pop
mov
jbe
jnp
cmp
inc
iret
shll
xchg
xor
lds
mov
paddusw
pusha
sbb
pop
cmpsb
aas
fisubrl
cmp
jae
push
rcll
push
xchg
cwtl
mov
in
lock
je
or
mov
test
das
jno
add
or
dec
in
lahf
nop
outsl
mov
insb
repz
push
add
in
pop
loop
frstor
insl
mov
add
pop
xchg
shlb
dec
enter
sbb
fcompl
sbb
std
push
int3
mov
cmp
addr16
ds
sub
lahf
mov
push
mov
pop
das
adc
mov
arpl
or
adc
nop
test
inc
imul
orl
mov
sbbl
jno
inc
mov
js
movsl
jno
rcr
jmp
je
mov
fwait
out
adc
push
mov
sub
inc
push
jecxz
or
or
sub
mov
outsl
push
rorl
out
test
or
enter
sbb
test
insb
adc
fildll
and
push
lods
fdivrs
lea
nop
sub
cmp
js
mov
movb
mov
lahf
loopne
xor
in
fidivrl
jbe
sbbl
test
jp
inc
lret
mov
nop
inc
stc
mov
dec
aaa
cwtl
sbb
loope
jo
into
mov
dec
je
add
mov
ja
sbb
push
rcll
xor
je
clc
ds
rclb
loope
dec
mov
add
inc
push
push
jae
outsb
bound
push
rcrl
mov
mov
cltd
cmc
js
sub
lods
pop
fnstsw
shlb
jl
dec
daa
jne
jge
adc
lret
jns
mov
adc
and
cltd
sbb
or
addr16
js
xor
push
fwait
jno
lock
aad
addl
scas
mov
out
insl
cmpsl
insl
fldl
sub
and
mov
test
mov
fbld
mov
shll
testb
flds
cmpl
out
push
sub
lcall
mov
outsb
adc
dec
sbb
fisubrs
jae
jle
add
repz
xor
push
jno
lret
push
scas
sub
cld
adc
push
mov
adc
aad
pop
adc
adc
rclb
sbb
push
xor
bnd
idiv
test
and
xor
or
dec
adc
repnz
push
loope
loope
add
jg
inc
loope
jg
adc
shlb
pop
pop
imulb
lods
jne
xchg
leave
stos
bound
rcr
sub
inc
push
and
dec
pushf
ss
dec
add
inc
leave
pop
inc
adc
adc
das
or
jnp
sub
sub
sub
cmp
add
pop
scas
popf
mov
addb
jnp
sub
es
incl
mov
pop
enter
dec
negb
mov
mov
lea
inc
mov
pop
dec
pop
jg
mov
in
das
hlt
scas
dec
jge
std
sub
imul
push
test
in
lcall
es
mov
pop
cmp
loopne
retw
xor
push
rcrl
jns
mov
dec
ds
sbb
xchg
jae
adc
mov
push
stos
arpl
pusha
sbb
pop
test
loopne
shll
dec
jecxz
pop
mov
jg
js
inc
jne
pop
aad
js
outsb
cmp
rorl
cmp
cmpsl
jnp
jmp
test
inc
add
cmp
xor
adcb
pop
movsl
cmp
in
xor
in
xor
fnstenv
sbb
pop
adc
std
jno
xchg
out
xchg
dec
les
mov
cmp
std
roll
ficompl
push
mov
movsb
xor
orl
outsl
wbinvd
inc
xchg
leavew
jg
inc
push
jb
daa
fwait
pop
lea
ljmp
shl
inc
jge
sub
sbb
icebp
ret
pop
arpl
xchg
mov
cmp
fstpl
loopne
fs
stc
mov
inc
repnz
or
xchg
sbb
faddp
test
lcall
in
sar
dec
test
aad
in
fstpl
loop
mov
cmc
sbbb
cmpsb
imul
cmpsb
xchg
or
and
push
inc
push
dec
sub
and
push
adc
xorl
cs
pop
cmp
mov
mov
insb
addr16
das
ret
sbb
sbb
pop
pop
adcb
sbb
mov
pop
add
ja
cs
cmpsb
cltd
imul
jne
and
mov
dec
testl
test
adc
les
xchg
or
push
jb
add
or
repz
adc
fildl
add
fldenv
hlt
xchg
std
fwait
mov
push
push
icebp
fistl
dec
fnsave
pushf
jb
jbe
push
in
pop
scas
insb
repnz
lock
lea
mov
je
inc
and
pushf
hlt
pop
fisubrl
out
iret
mov
pop
arpl
and
jle
js
push
or
xchg
cmp
in
cmp
xchg
push
test
cwtl
mov
jl
sarl
fdivrl
sbb
xor
leave
out
and
lock
jle
cmc
int3
sub
jae
push
mov
es
push
fimuls
inc
pop
clc
cs
cld
je
cli
xchg
iret
shrb
insb
icebp
lods
ss
pop
add
dec
xor
push
mov
inc
cmpsl
push
mov
xchg
leave
jno
or
cld
push
lods
gs
sbb
ret
mov
sti
xchg
cmp
int
add
push
out
mov
add
fisttps
inc
test
xchg
mov
sbb
adc
or
out
jo
adc
stos
iret
jge
repnz
fs
jne
imul
insl
aas
push
out
adc
addl
cmp
fisttps
sbb
mov
push
cli
mov
jle
sub
sbb
add
scas
rcr
dec
outsl
popf
ds
or
xchg
hlt
aas
dec
mov
jnp
add
shlb
mov
mov
and
xor
jbe
orl
pop
or
cmp
mov
inc
adc
adc
mov
iret
cli
or
pushl
xor
cmpsb
jle
inc
jmp
pop
sbb
stos
cmpsl
add
ret
inc
in
subb
xorb
adc
jnp
jle
ret
repz
xor
and
mov
orb
cmp
xchg
pop
sub
bound
lcall
cmp
sub
mov
faddl
dec
sbb
sub
dec
cmc
mov
dec
pop
and
xchg
imul
dec
shll
ja
add
notb
push
mov
test
add
jp
mov
or
add
jno
inc
in
mov
pop
xchg
cli
int3
xchg
pop
into
notb
add
mov
imul
sbb
jae
mov
loop
xchg
adc
lea
jbe
mov
addb
icebp
test
sub
aaa
and
scas
in
jo
out
aad
in
adc
sbb
jo
pusha
dec
or
jno
jne
xorl
mov
dec
add
stos
mov
pop
pop
sub
ror
jmp
hlt
in
sbb
inc
or
not
xor
gs
ret
or
jnp
mov
fsubrl
js
mov
dec
leave
sub
iret
pop
fsubrp
test
pop
push
jp
clc
orb
adc
or
or
push
mov
xor
scas
clts
aam
cmp
nop
and
cmpb
push
int
mov
jl
popa
hlt
add
ja
and
sub
mov
inc
xor
inc
pop
icebp
mov
mov
xchg
lcall
pop
xchg
shll
das
pop
imul
iret
fisttpll
insb
adc
xor
cmp
cwtl
lods
sbbl
xchg
push
popf
and
dec
stos
popf
or
repnz
xor
mov
jae
pop
adc
popa
xchg
testb
pop
mov
mov
loopne
lods
sub
loop
icebp
lock
cs
rcll
xor
xor
mov
push
mov
sti
mov
xor
jns
xchg
ret
add
push
nop
dec
stos
push
mov
mov
and
pop
cmp
shlb
jmp
mov
sub
insl
push
stos
jmp
pop
scas
adc
dec
add
dec
jl
bound
leave
jno
lcall
frstor
pusha
cmp
inc
frstor
xor
cmp
mov
ret
jno
xchg
test
out
decl
sub
scas
jns
push
movsb
xor
fimuls
decb
xlat
cli
jb
sbb
jns
adc
and
call
and
pop
div
xchg
sub
add
xchg
add
les
scas
ja
cmp
iret
dec
clc
lods
aaa
or
inc
mulb
fstl
cmp
idivl
bound
or
mov
jno
jno
jno
cmp
mov
dec
pusha
pop
push
inc
fwait
and
cmp
mov
pop
aas
div
pusha
mulb
add
add
xor
int
cmpsl
ret
insl
push
fistl
cmp
mov
pusha
cmpsb
ret
js
mov
jmp
insb
ds
mov
fadds
adc
push
je
xor
push
stc
sbb
push
push
dec
jbe
mov
lret
push
into
adc
inc
sub
cli
in
adcb
sbb
sub
push
arpl
mov
lcall
push
insl
push
repnz
jle
mov
scas
jno
mov
aad
jno
sub
adc
mov
test
je
pop
fisubs
xor
sbb
movsb
push
stos
jb
inc
xchg
push
std
push
mov
pushf
jle
ret
xor
sbb
dec
push
sub
add
push
xchg
ja
loopne
mov
mov
sbb
inc
ret
call
div
mov
push
xchg
add
lret
jg
sarl
mov
lcall
pop
xor
add
pop
out
jb
inc
mov
jbe
push
xor
pop
jge
sub
fistpl
sbb
and
jo
out
mov
fidivs
pop
test
call
pop
lea
add
movsb
dec
shlb
icebp
lcall
pop
xchg
push
daa
cmp
inc
cmp
je
push
or
jge
movsb
pop
xchg
mov
xchg
mov
test
cmp
xchg
push
pop
ja
jg
hlt
inc
mov
fstl
push
cmc
mov
adc
mov
xchg
push
leave
push
cmp
or
fadds
shr
sbb
sbbl
divb
outsb
jns
mov
sub
jb
fcomps
cli
jno,pt
scas
xor
cld
sbb
pusha
ja
jmp
cmovge
jg
in
daa
clc
mov
sbb
cmpsl
jg
lds
dec
push
js
pop
jge
dec
push
pusha
inc
outsb
jecxz
push
lds
rorl
incl
in
jo
fisttpl
pop
inc
mov
pop
pushf
gs
call
ss
and
ljmp
ret
inc
mov
clc
call
je
fiaddl
pop
push
outsb
fldenv
js
jmp
addr16
mov
dec
pop
jbe
adc
mov
dec
iret
jne
les
lahf
xchg
push
loope
pop
icebp
xor
inc
mov
cmpsb
lcall
je
stos
jne
imul
xor
cld
xorl
stc
test
pushf
daa
test
push
ficoml
push
mov
fnstcw
jbe
push
mov
hlt
ja
das
push
lret
test
jge
xor
fcmovnu
mov
pop
and
dec
int3
xor
jno
push
jbe
add
xorb
xor
mov
bnd
cmp
mov
cmpb
mov
or
xor
pop
mov
add
jge
xor
pushf
fstpl
fiaddl
lret
pop
mov
xor
mov
lret
imul
aas
pop
out
lock
sbb
leave
into
out
dec
pop
push
xor
xchg
mov
xchg
push
push
cltd
clc
or
clc
or
mov
enter
and
jne
cmp
dec
ret
push
mov
inc
mov
mov
push
leave
pop
mov
sahf
mov
xor
dec
jg
fnstcw
adc
pusha
sti
inc
cmp
mov
inc
mov
inc
in
int
lods
scas
add
xor
dec
call
xlat
mov
inc
imul
arpl
push
test
dec
mov
lret
lahf
sbb
pop
out
add
je
cmp
out
push
ljmp
pusha
mov
add
out
jns
out
das
dec
pop
inc
dec
cmp
sub
xchg
repnz
into
daa
dec
dec
pushf
or
sub
cld
out
pop
xor
dec
subl
mov
adc
cmp
call
in
xor
push
out
mov
inc
lahf
into
rorb
add
test
jl
jno
cltd
stc
leave
loop
div
ds
dec
add
movsl
inc
rcrb
pop
add
inc
mov
or
dec
adc
pop
pop
cmpsl
mov
ficompl
adc
pop
mov
sub
mov
cmp
jg
dec
insl
cmp
rol
pop
inc
and
std
xchg
icebp
mov
loope
hlt
fsubrs
cmp
js
fmulp
xchg
loopne
ret
decl
mov
ret
and
jnp
sbb
movsl
push
or
hlt
mov
push
mov
outsb
mov
push
leave
addr16
or
mov
adc
arpl
stos
loopne
ds
xchg
xchg
add
in
lret
mov
loope
test
cmc
lcall
dec
inc
cmp
xchg
sbb
enter
mov
aam
push
nop
push
imul
addl
aas
jp
and
fbld
and
pop
and
lods
mov
inc
inc
stos
inc
pop
imul
cmc
pop
adc
gs
lahf
cmp
jb
jp
add
mov
loope
push
loopne
cmpsl
adc
ja
xchg
pop
sti
adc
das
dec
idivl
sbb
std
add
xchg
imul
push
in
add
mov
imul
test
popf
mov
adc
adc
inc
ret
mov
xchg
das
add
mov
leave
xchg
adc
mov
daa
mov
js
movl
or
fsubs
xchg
adc
mov
mov
repz
mov
pop
lods
fildll
cmp
call
xor
adc
adc
sti
mov
in
sbb
jg
ljmp
popf
in
jmp
sbb
std
ret
or
cmc
cld
inc
cmp
outsl
jecxz
rorl
mov
cmp
sub
frstor
push
scas
mov
stos
movsb
mov
mov
push
add
test
jge
jmp
sub
jmp
arpl
pop
in
cmp
add
scas
lods
leave
and
pop
xor
jne
fnsave
insb
loopne
jns
or
aaa
aad
test
aas
mov
out
pop
jp
jo
ds
sbb
mul
or
js
push
or
dec
push
ds
pushf
arpl
mov
dec
rsqrtps
rclb
int
dec
jecxz
enter
mov
mov
cmpb
imul
leave
pop
push
cmpsb
fldcw
pop
loop
dec
subb
mov
cwtl
jle
mov
call
stc
xchg
ret
jmp
outsl
js,pn
mov
adc
push
push
jl
xchg
jge
push
mov
or
popf
sbb
fdivl
mov
lock
lods
sbb
or
dec
stc
push
ss
test
sbb
jg
ja
mov
mov
cmpb
adc
jecxz
aas
shr
push
lock
jecxz
loopne
hlt
ficompl
push
and
lods
hlt
cmp
popa
pop
jnp
fistps
iret
pusha
lret
mov
fadds
jmp
xchg
out
jbe
fbstp
sbb
mov
add
adc
pop
movsl
pushf
iret
cwtl
mov
mov
cmp
pop
dec
dec
popf
dec
jns
js
jl
ds
fsubl
or
add
into
xchg
and
dec
xor
stos
std
cmp
dec
inc
and
add
outsl
ljmp
test
jp
adc
sbb
cmpsb
push
pop
ljmp
push
dec
mov
ss
leave
ljmp
movsl
dec
fiadds
loope
in
test
das
movb
repnz
ja
jnp
jp
outsb
dec
lahf
mov
lret
pushf
addr16
xchg
lock
and
sub
push
mov
mov
lret
mov
push
sub
sub
sbb
pop
cltd
sarb
and
cmp
enter
xchg
in
jge
jb
insb
mov
add
push
and
xor
jecxz
and
dec
movsl
dec
xor
imul
cmp
rol
sbb
ret
out
sbb
ss
inc
lods
into
aam
repz
stos
cmpsb
sti
push
xchg
add
sti
sub
fcoml
aaa
mov
js
mov
mov
xor
sti
das
mov
add
test
ret
dec
mov
in
scas
push
out
ret
xor
xor
sbb
or
jp
enter
push
iret
loopne
xchg
cmpsl
out
cmp
xor
fcompl
or
insl
and
cmp
adc
pop
pusha
cmp
mov
adc
ja
sub
pop
loopne
into
or
push
pusha
xor
mov
jp
xor
xor
inc
mov
fwait
sub
mov
inc
mov
push
cmpl
rolb
push
or
popf
into
arpl
sbb
imul
mov
dec
sub
imul
incb
outsl
lock
enter
and
cmc
mov
mov
add
jnp
rclb
mov
pop
sub
xchg
lea
cmpsb
fildl
sub
je
cmp
cmp
add
or
xor
ror
sub
sub
pop
inc
daa
lret
add
mov
data16
lods
cwtl
stos
cmp
sarb
inc
stos
sub
mov
dec
ss
cli
cmpsb
leave
dec
adc
cmp
lahf
adcb
into
out
lret
jp
xor
sub
loope
jmp
fwait
das
in
ret
jge
sub
lock
int3
sub
arpl
fdivl
sub
enter
cmp
push
shrl
push
xchg
cmp
loop
sbb
inc
xor
dec
sbb
push
imul
test
faddl
bound
loop
ja
mov
adc
mov
sbb
sbb
add
mov
adc
sub
mov
jl
push
xlat
mov
les
pop
lods
fadd
ja
or
mov
pop
and
jg
js
incl
daa
les
cmpb
test
mov
shl
and
in
andl
adc
iret
add
xchg
add
jp
adc
dec
aaa
mov
push
mov
movsb
icebp
rcl
mov
sbb
mov
dec
sbb
jge
fmuls
popf
sbb
fmulp
sub
push
inc
addb
xor
pop
jo
and
mov
xor
sub
scas
and
and
aad
cmpsl
pop
mov
cmp
xchg
lea
pop
aas
icebp
fs
negb
mov
dec
xchg
rcrl
dec
repz
pop
fwait
aas
adc
mov
in
adc
xor
xchg
jl
push
jecxz
sbb
xchg
je
scas
jae
xlat
test
xor
and
adc
subl
fsubl
aad
mov
test
inc
mov
push
das
lods
or
adc
add
ljmp
jg
pop
pop
hlt
leave
rcrb
std
nop
stos
es
push
xor
pop
xor
addr16
hlt
dec
in
int
or
pop
add
mov
test
hlt
cmpsb
lahf
jnp
hlt
push
mov
jns
mov
xchg
mov
cmp
movsl
add
mov
xchg
stos
sub
jno
js
cwtl
int
mov
jecxz
mov
inc
jge
cmpsl
aad
push
jo
push
cmp
lret
inc
xor
sub
xchg
sbb
out
movb
mov
sarw
mov
test
icebp
aas
mov
pushf
xlat
lahf
and
push
xchg
jo
ss
fisubs
arpl
sbb
into
rcll
mov
push
jle
mov
scas
sub
mov
dec
jbe
add
add
pop
add
adc
jg
cmp
sahf
mov
cmp
and
jecxz
dec
adc
gs
jne
ficomps
jno
aaa
rorb
mov
xchg
insb
or
push
push
cs
mov
ds
push
mov
push
inc
jmp
adc
pop
mov
push
mov
jle
inc
fdivrp
xchg
fs
xchg
push
shl
cmpsb
loop
rorb
movsl
insl
xchg
mov
insl
add
add
inc
nopl
imull
or
cmp
jmp
add
loopne
arpl
xlat
add
push
sub
imul
outsl
stos
xchg
pop
imul
and
outsb
jl
lods
cmp
fs
xchg
inc
mov
push
insl
xchg
rorl
xchg
lock
lods
sub
ss
push
jno
adcb
in
loope
icebp
or
addr16
das
jne
sbb
inc
stos
cmp
jb
mov
out
inc
aam
sti
jg
out
push
aaa
je
insb
xchg
mov
pop
adc
xlat
push
movsb
imul
lea
les
push
cld
bound
add
add
inc
movsb
mov
or
jp
jle
mov
mov
mov
ds
dec
stos
cli
call
insb
or
aas
push
mov
loope
push
pop
jb
xor
hlt
push
leave
testb
rcrl
push
popa
sbb
dec
push
mov
mov
subl
adc
popf
mov
leave
sbb
mov
jb
lret
xor
int3
mull
std
nop
or
inc
xor
inc
mov
pop
aas
out
xor
les
daa
call
cmp
inc
jl
lea
lods
out
jge
cmp
dec
mov
sbb
stos
ret
xchg
mov
loop
icebp
sbb
inc
shr
jmp
loopne
dec
lock
outsb
mov
dec
inc
jg
jne
mov
xchg
dec
out
sbb
mov
aam
not
mov
pop
xchg
es
xchg
add
rolb
popf
cmp
fwait
pop
in
push
inc
push
in
pop
imulb
lds
lods
xchg
sbb
jl
scas
or
fwait
sbbb
xchg
push
das
cmp
iret
lods
or
lock
sahf
mov
push
test
or
xchg
push
hlt
adc
push
in
data16
shll
dec
lds
jnp
pushf
aaa
push
cmc
out
mov
jnp
test
adc
outsl
je
fwait
adc
rorb
cs
or
cwtl
mov
xchg
int3
or
stos
int3
mov
mov
mov
mov
add
pop
mov
mov
fstps
fdiv
rcrb
mov
inc
cmp
aas
popf
cltd
clc
cmp
push
movsb
mov
inc
mov
lret
test
and
cmpsb
mov
sub
mov
and
cmp
and
jl
cwtl
mov
popa
dec
mov
cmc
mov
jbe
sbb
andl
xchg
lods
pop
jge
adc
and
xor
sbb
int3
pop
sbb
xchg
iret
mov
fisubs
outsb
pop
mov
imul
xchg
mov
lods
fcoms
and
mov
xchg
mov
mov
xor
outsb
pop
push
in
pop
outsl
adc
xor
or
jb
stos
sub
mov
add
sub
std
popf
pushf
daa
ret
mov
rorb
lods
nop
fs
arpl
lcall
outsb
push
xor
dec
js
sgdtl
fnstsw
loopne
ficoml
mov
fimuls
pop
xor
out
jmp
xlat
ret
loop
aam
dec
pop
push
imul
cs
jl
cltd
push
hlt
pop
sbb
testl
fwait
jecxz
mov
fsubrp
xchg
outsb
pop
dec
push
test
repz
jmp
xchg
and
dec
fsubs
ss
mov
test
andl
sbb
pop
sti
cmp
dec
ret
imul
loope
cmp
fildl
cltd
out
add
ja
sbb
add
jecxz
sar
mov
pop
add
lods
movsl
inc
adc
cmp
jnp
popf
call
xchg
dec
ret
inc
xchg
clc
cmp
adc
test
ds
imul
sub
cmp
les
sbb
mov
or
dec
hlt
ljmp
xor
fwait
mov
ss
popf
lock
shl
sub
xorl
out
jecxz
jle
nop
sub
insb
inc
mov
dec
or
mov
adc
aam
or
cmp
js
enter
adc
mov
push
inc
mov
push
mov
push
sbb
mov
das
pop
daa
push
pop
mov
in
push
jmp
popf
sbb
pop
fdivrp
cmp
out
jne
pop
aad
daa
add
or
nop
pop
lahf
cmc
ret
int
cvtdq2ps
filds
add
push
aad
xchg
mov
es
jns
or
loopne
xchg
mov
in
pop
divb
icebp
inc
loop
std
or
mov
push
lcall
inc
add
add
aam
or
leave
and
ficomps
js
xorb
shrb
push
push
into
jmp
adc
jb
push
push
les
in
fstps
pop
sub
cli
inc
inc
lds
movsb
push
aam
adc
inc
int3
sbbb
jmp
cmp
cmp
out
jmp
daa
cltd
sub
scas
negl
dec
push
push
hlt
fadds
mov
lahf
push
dec
and
outsl
gs
fsubl
test
mov
sub
jae
xchg
xor
adc
add
xlat
insl
in
ficoml
dec
das
jge
cli
inc
push
repnz
lret
inc
loope
jp
xchg
ljmp
push
xor
add
out
out
mov
push
push
jns
mov
pop
cld
lcall
mov
and
fmulp
xor
sbb
push
movsb
fdivs
and
pop
jecxz
inc
mov
loope
test
xor
cmp
lea
xor
mov
push
fstpt
pop
hlt
sub
xor
rclb
rcl
cmp
ds
or
mov
fsub
xor
xor
xor
mov
les
loope
or
scas
push
dec
add
fbld
pop
sbb
sub
xchg
sbb
cmpsl
lahf
and
pop
cmc
in
mov
jp
adc
sub
mov
ja
sub
dec
mov
dec
nop
aas
mov
gs
inc
push
sub
cmpsb
mov
mov
jnp
push
lods
inc
push
sti
out
repnz
sti
xchg
dec
push
imul
sbb
out
lret
xchg
cli
mov
push
test
cmp
scas
jecxz
mov
mov
lds
cld
xor
jmp
xchg
rcr
mov
push
sub
subb
push
xor
shlb
ror
pop
les
push
sub
pop
imul
sbb
dec
add
imulb
out
sub
scas
stc
popf
jge
sbb
pop
mov
and
lret
add
inc
stos
movsl
mov
or
mov
adc
and
sub
mov
and
rolb
add
or
and
pushf
mov
aaa
mov
or
popa
sbb
mov
insl
add
js
jg
stos
mov
add
sub
mov
mov
sbb
jbe
xchg
lret
aad
inc
xchg
adc
rorb
cmpsl
cmp
jecxz
sbb
test
xchg
aaa
rcrb
mov
lds
fisttpll
fadds
add
xchg
or
mov
dec
test
mov
lods
lods
test
ret
in
sbb
push
fdivs
dec
pop
fnstsw
pop
xor
mov
sbb
div
enter
sbb
push
fistpl
jae
add
mov
jns
int
lds
lret
sub
pop
push
int
out
mov
lret
loope
bnd
out
push
dec
add
push
pop
test
frstor
fnsave
popf
ja
pop
jae
pop
int
cltd
popa
lea
pop
jp
gs
push
lods
pop
or
mov
aaa
insb
insl
mov
push
xchg
jbe
mov
ret
lock
adc
js
pop
lock
inc
dec
out
push
mov
mov
sub
push
jecxz
lcall
add
mov
sub
mov
jae
lock
push
cmpsb
inc
xchg
data16
jp
in
movsb
das
insb
cld
orl
xor
add
dec
insl
mov
arpl
daa
dec
add
sbb
adc
test
dec
out
mov
and
pushf
stc
rcrb
push
scas
xor
ret
xchg
push
push
popa
into
jle
push
outsb
sbb
inc
push
ficoms
xchg
sti
movsb
fwait
or
fstps
adc
push
or
in
rcrb
cltd
cli
inc
pop
fs
jg
xor
fwait
add
stc
daa
sub
imul
push
sub
and
pop
out
test
or
mov
fsubrs
repz
pop
mov
sub
and
jno
scas
loop
and
dec
cmpsl
dec
jne
lock
mov
lcall
or
mov
adc
fs
out
jo
es
xchg
xchg
testb
push
jae
mov
loope
lret
cmp
cs
inc
cli
je
jbe
jnp
ljmp
dec
js
mov
stc
mov
sub
cmp
shrl
xor
les
jl
lds
shll
ja
imulb
mov
out
fcoml
incl
aaa
push
inc
sbb
mov
fldt
jle
dec
adc
dec
lds
dec
push
jno
xchg
sahf
int
or
sub
mov
sti
vmresume
leave
lock
push
inc
jbe
inc
es
and
fisubrs
or
jp
jbe
sub
lret
lds
ret
push
add
mov
pushf
icebp
pop
out
jg
xchg
ret
dec
les
xchg
pushf
pop
lea
notl
cld
imul
fdivp
add
js
xor
rcr
lds
sahf
cmp
js
mull
in
inc
fnsave
xchg
test
jnp
lea
inc
loopne
testb
mov
jecxz
ss
rclb
popa
int
sub
dec
mov
aad
mov
mov
jg
lret
movsl
hlt
int3
out
pop
mov
or
push
iret
inc
arpl
xor
ds
or
in
je
jne
lretw
mov
icebp
sub
push
mov
ds
lcall
jp
jge
mulb
xchg
jns
pop
mov
inc
sub
int
cmp
mov
mov
fs
jg
loope
fs
or
nop
add
int3
inc
lcall
repz
inc
movsl
cld
mov
or
inc
mov
sub
push
pop
rcrl
mov
mov
int
dec
bnd
sbb
lea
xor
sub
adc
mov
push
add
std
add
fstpl
mov
mov
rorl
data16
fadd
fldl2e
ret
mov
pop
fwait
pop
push
lcall
mov
icebp
adc
ljmp
orl
loop
mov
incb
jbe
push
lret
or
mov
xchg
cmp
dec
lret
adc
adc
pop
and
dec
cmp
outsl
xchg
das
loope
and
jno
inc
lock
adc
ljmp
das
mov
add
adc
inc
push
mov
movsl
stos
loope
lds
ljmp
mov
in
mov
ja
cmpsb
js
test
mov
sarl
push
cltd
into
repnz
mov
dec
pop
inc
fistpll
outsl
stos
xchg
fs
rcll
imul
pushf
fidivl
out
jae
cmpsl
pop
fs
add
fsubl
sub
stos
clc
dec
mov
pop
xor
in
inc
insl
stos
mov
dec
sbb
xchg
outsl
testl
in
out
jmp
rolb
sbb
sbb
cmc
sub
pop
inc
aaa
xchg
lods
dec
push
int
ret
xor
xchg
xchg
shlb
xchg
shrb
fchs
jb
imul
pop
sbb
mov
mov
cwtl
cwtl
inc
mov
aad
in
jo
cli
fmuls
adc
inc
xor
lcall
pop
in
jp
mov
loopne
pop
jb
mov
mov
data16
sbb
push
xor
cld
jne
dec
inc
stos
lcall
jle
mov
jnp
inc
dec
inc
sbb
in
inc
popa
adc
inc
rcr
jno
popf
jmp
mov
pop
sarl
jl
inc
mov
xchg
xor
jns
clc
hlt
cmp
mov
lahf
movsb
repz
xchg
mov
shrb
dec
repnz
adc
pop
dec
fdivrl
mov
jbe
imul
ds
js
inc
ja
mov
int3
shl
sub
jp
sbb
push
pop
inc
add
push
sbb
mov
insb
add
test
mov
sbb
or
mov
cmp
adc
out
cmp
mov
jl
test
in
sarb
clc
fldt
icebp
xchg
sub
fwait
in
or
mov
ss
lds
mov
xchg
mov
jbe
stos
sub
test
cmp
enter
sarb
mov
inc
mov
or
jecxz,pn
or
jg
pop
add
rorl
lret
aad
push
inc
mov
add
pop
rcrb
jl
aaa
lcall
add
mov
xor
adc
inc
in
add
sahf
lcall
bnd
psrld
inc
or
sarl
fidivrl
mov
jnp
sahf
mov
mov
mov
sbb
or
or
add
and
gs
mov
ja
sbbb
pop
pushf
and
pop
mov
cmpsb
push
clc
pop
push
aad
in
jno
jo
js
mov
jmp
push
cmp
filds
decb
and
mov
sbb
sarb
rclb
fstpt
pop
sbb
cwtl
push
gs
pop
or
sub
cmp
lret
push
or
push
andl
mov
das
dec
pushf
push
dec
pop
jbe
dec
xchg
inc
pusha
bound
xchg
dec
or
cmp
fdivl
sbb
dec
outsl
cli
fmuls
jbe
cmp
xchg
or
scas
cltd
xchg
jp
ljmp
insb
sub
pop
xchg
cmp
icebp
push
mov
lods
cs
sets
dec
cmpsl
cmc
test
shr
filds
dec
xor
jb
sub
loop
into
add
data16
ds
jl
decb
mov
ret
and
add
mov
sub
std
pop
insb
js
das
cmp
std
repz
test
xorl
cs
subb
push
popf
fidivs
pop
lock
enter
or
add
dec
and
out
ja
push
mov
cmp
sti
mov
lcall
push
cmp
aam
push
pop
nop
test
and
sbb
jo
je
add
xchg
dec
pusha
int
push
xor
cld
push
cli
jno
mov
push
aaa
xor
cs
or
cmp
std
insl
mov
sub
popa
push
mov
addr16
cmc
sub
xor
ret
inc
add
stos
ret
lret
pop
out
jns
loop
je
mov
stos
xor
out
movsb
push
test
notl
pop
in
mov
xchg
add
mov
push
in
test
sbb
enter
jp
xchg
cmc
cs
int3
aas
loopne
jns
inc
xchg
add
and
scas
lods
jge
xor
xor
dec
xchg
cmp
jp
xchg
movsl
les
bound
test
and
mov
push
pop
icebp
clc
sub
mov
sbb
ror
push
cmc
dec
mov
push
sbb
xchg
hlt
jp
call
xchg
and
push
mov
fsubrs
ja
sbb
jecxz
or
or
jnp
aas
jne
or
movsb
mov
cmpb
jno
push
pop
fwait
pusha
repz
cmp
xor
jns
add
cltd
pushl
movsb
adc
xchg
cmp
in
mov
push
sub
jns
dec
jne
pusha
sarl
stc
enter
cmp
mov
fidivrl
imul
rclb
les
push
leave
inc
xor
jecxz
inc
sub
aaa
mov
daa
push
outsb
cli
push
aad
repz
ret
jns
sbb
addb
ret
inc
push
lahf
xor
loope
enter
pop
mov
sbb
sbbb
sbb
std
or
loopne
xchg
aas
and
subl
call
sub
mov
or
jae
sub
rcrl
movsl
jge
sbb
mov
push
cli
mov
sbb
movb
mov
xor
sbb
ss
leave
iret
in
ja
lods
add
lea
ljmp
pusha
xchg
mov
or
cmp
jbe
lock
out
push
fnstcw
and
adc
sub
lahf
jecxz
outsb
rclb
cmp
lock
mov
int3
jmp
cmp
shr
jae
or
or
cmpb
cmc
pop
insl
xchg
imul
inc
das
push
das
scas
cmp
out
nop/reserved
scas
sbb
mov
jecxz
mov
push
lcall
loop
pop
icebp
jnp
lods
scas
add
inc
in
loop
push
sbb
lods
out
ss
bound
lcall
push
xchg
std
mov
mov
xor
jmp
and
mov
sbb
add
pushf
dec
roll
xchg
imul
xlat
inc
arpl
sub
lret
xor
filds
cmp
adc
mov
fcom
inc
xchg
out
mov
sub
ret
pop
xchg
jle
mov
and
faddp
inc
or
push
add
jp
mov
push
xor
gs
pushf
loope
dec
test
inc
imul
dec
outsb
into
jl
repz
xchg
cwtl
add
adc
pushf
fldcw
xlat
stc
mov
pop
sbb
into
pop
in
subl
rcl
cmp
fisubrs
push
out
jmp
mov
mov
jge
mov
leave
cld
push
xor
inc
adc
sahf
movl
mov
or
inc
mov
std
mov
jge
popa
test
fwait
dec
nop
cmp
loop
mov
pop
cmp
jne,pt
jg
jb
dec
loop
divb
push
popf
xchg
loope
jno
pop
dec
dec
aas
mov
sbb
test
hlt
and
mov
jge
shlb
jp
xor
cmp
fstps
cmp
sbb
lret
dec
adc
cmp
lret
test
ret
mov
adc
sbb
add
sub
loope
out
dec
enter
inc
sbb
test
inc
scas
ror
loop
int
dec
inc
xor
gs
insb
mov
test
jne
xor
mov
je
pop
push
lret
cmpsl
dec
sar
cmc
in
fsts
cltd
xchg
jmp
pop
mov
arpl
cmp
dec
int3
jmp
mov
xor
xchg
scas
adc
fsubrp
mov
popa
push
sub
inc
xor
xchg
incl
and
cli
fildl
xchg
int3
loop
fisttpl
icebp
pop
addr16
xchg
cmp
std
dec
dec
push
mov
sub
or
enter
js
mov
addl
xchg
jne
mov
and
dec
jecxz
inc
push
adc
xor
push
jae
in
int3
arpl
addr16
fs
mov
jp
aas
movswl
icebp
jo
push
mov
inc
pop
jmp
xor
cmp
rcrb
jnp
cltd
push
cltd
mov
les
das
push
pusha
push
aam
sbb
imul
lret
mov
and
cmpsl
data16
data16
jl
aam
test
lret
push
filds
int
cmc
data16
pop
push
mov
popa
cmp
or
jno
sub
sub
mov
mov
inc
lret
shlb
jle
sub
mov
jp
jnp
xchg
fmul
push
mov
push
sub
and
fsubr
clc
divb
icebp
push
hlt
and
add
cmp
in
adc
push
pop
popa
inc
rorb
mov
insl
dec
ret
loop
sarl
daa
pop
call
add
push
xchg
adc
data16
fiaddl
sub
lock
loopne
in
movsl
daa
add
lods
lcall
cmp
push
xor
nop
add
mov
lret
ret
xlat
xor
mov
loope
mov
out
mov
or
stos
or
addb
mov
pop
add
mov
div
pusha
cmp
xchg
jns
mov
test
fwait
popa
or
or
imul
inc
push
mov
call
cmpsb
loopne
sbb
int
mov
add
pop
push
xchg
adc
jo
popl
add
addb
inc
imul
push
and
js
testb
imul
cmp
mov
inc
and
mov
addb
add
adc
mov
orl
xchg
mov
aad
hlt
and
nop
das
adc
fcmovb
testb
fcmovb
jne
nop
cwtl
ret
test
sbb
mov
aaa
loopne
test
mov
push
jb
int3
in
sbb
jecxz
pushf
inc
lods
and
mov
movsb
jo
ds
shll
push
scas
rorl
rcr
jno,pt
nop
jne
add
or
mov
adc
mov
push
subb
inc
lret
sbb
inc
stos
push
ret
jp
popa
add
jmp
sbb
int3
out
fsubr
jb
dec
in
cmp
adc
lret
daa
or
sbb
in
push
je
push
push
cltd
out
testb
incl
jns
xchg
ficomps
mov
cmp
push
cmp
lods
xor
xchg
xchg
jbe
dec
sub
and
lock
adc
pushf
out
mov
dec
cli
push
int3
call
dec
mov
jne
sbb
stos
sbb
xchg
imul
cwtl
push
mov
jg
cmpsb
loope
repz
or
add
cltd
cmp
popa
sbb
fwait
into
stos
into
test
and
mov
ss
or
dec
lea
push
pop
into
stos
daa
rolb
add
dec
inc
xchg
sbb
pop
mov
sbb
aas
rorb
mov
fucom
aas
sub
out
sub
jg
and
xor
int
subb
push
cmp
cld
push
add
dec
jp
adc
sbb
icebp
sbb
dec
lret
iret
sub
mov
mov
or
hlt
ja
stos
iret
sub
syscall
arpl
mov
mov
mov
iret
jmp
pop
in
lret
mov
jbe
adc
inc
xchg
leave
stos
cmpsl
or
xor
insb
dec
dec
cmp
cmp
adc
xchg
aad
fiadds
push
ret
insl
jae,pt
popf
test
push
push
fidivs
loopne
dec
addr16
fwait
insl
adc
or
ret
dec
les
mov
cmpsb
jnp
loopne
fimull
pop
adc
mov
in
out
mov
jne
dec
jnp
cmp
sarb
aam
sbb
lds
popf
repnz
fwait
dec
pusha
pop
mov
cmp
dec
jle
lods
and
ds
stos
jl
cmp
mov
flds
addr16
sbb
aad
adc
sbb
imul
push
cmpsb
in
sbb
mov
sbb
dec
lret
jae
aaa
mov
add
cld
cwtl
inc
mov
int
dec
inc
notl
insl
jmp
or
push
mov
js
and
and
pop
push
imul
and
shl
repz
sub
loop
adc
cwtl
inc
fldl
stos
mov
inc
test
ret
push
xchg
je
jo
scas
adc
mov
sub
push
xor
xor
pop
popa
inc
dec
push
mov
rol
push
jmp
int
adc
jnp
lret
mov
adc
xor
adc
mov
adcl
in
das
fidivrs
icebp
mov
and
mov
out
in
lret
outsl
mov
sub
inc
sub
mov
pop
in
pop
pop
jns
enter
adc
in
jo
cmp
push
or
adc
and
add
subb
dec
fwait
jge
dec
scas
popa
aad
ss
test
scas
aam
stc
inc
shll
mov
stos
cmp
out
std
pusha
push
pop
dec
jg
into
movsl
movsb
mov
int
sbb
dec
movsb
jo
cmc
xor
data16
je
das
cmp
repnz
mov
xor
inc
xchg
sub
cmc
into
or
std
sbbb
dec
jno
jo
enter
aam
sbb
mov
or
test
mov
jl
std
or
cmpsl
xchg
or
lret
stos
xorb
loope
adc
clc
loope
pop
cs
call
cwtl
ja
movsb
insl
stc
adc
adc
mov
in
fbld
pop
fisttpl
hlt
pop
pop
loop
jmp
fidivl
mov
sbb
cld
aad
cmp
add
out
dec
pop
and
cmc
push
xchg
lahf
fidivrl
test
or
push
add
sahf
sbb
jne
sbb
mov
nop
lret
pop
movsl
cmp
fnstsw
rcl
add
pop
aaa
push
add
jmp
nop
sbb
enter
aam
sarl
dec
push
lahf
repz
lea
adcb
scas
pop
daa
out
fadds
sub
imul
into
or
inc
inc
out
add
insb
fcomi
cltd
jbe
mov
xchg
mov
mov
sub
imul
outsb
xchg
roll
lods
daa
mov
dec
imul
out
loop
in
and
shrb
inc
addl
and
sub
bound
mov
adc
pop
fbld
xchg
insl
sub
roll
sub
xchg
bound
sarb
sub
pop
inc
jne
mov
mov
mov
ja
mov
jne
and
jmp
add
pop
insb
and
inc
popf
xor
stc
icebp
jo
movsb
inc
pop
and
jmp
out
sbb
jecxz
mov
lods
pop
push
and
sbb
ret
daa
mov
lods
es
xchg
and
push
insl
out
ret
jl
xor
and
icebp
jecxz
mov
push
fdivrl
pusha
jnp
mov
pop
xor
mov
aam
or
mov
ss
shrb
and
mov
bound
push
mov
fwait
xor
pop
jmp
sbb
aad
mov
aam
outsb
sbb
pop
les
pop
fld
imul
cmp
les
out
push
bound
icebp
pop
dec
inc
dec
xchg
dec
mov
and
mov
mov
dec
ja
jmp
cmpsb
push
sub
pop
test
test
outsb
loopne
xor
leave
xor
stos
sub
pop
cmp
adc
mov
pop
out
js
mov
in
or
inc
out
sub
popa
orl
cltd
push
xor
popf
jle
sar
inc
mov
add
cmp
out
ds
or
or
adc
insb
mov
push
and
xor
cmp
lcall
dec
pop
stos
shrl
mov
push
adc
dec
pop
cmp
fwait
shrb
jno
mov
push
or
mov
push
arpl
cmpsl
xrstors
pop
fists
xor
scas
and
into
fwait
cmp
pop
fwait
fwait
add
or
cli
sub
repnz
mov
into
mov
or
mov
mov
jge
inc
or
xor
insb
mov
and
scas
imul
xlat
test
mov
ss
mov
xor
jo
test
lahf
jecxz
jmp
mov
cmp
cli
cmpsl
lds
dec
jno
ljmp
je
push
sub
dec
cld
add
loopne
sar
popa
lds
je
mov
mov
dec
pushf
pop
mov
pop
fidivrl
or
push
insb
jecxz
movsl
nop
mov
mov
xchg
dec
sub
and
mov
idivl
xchg
insl
add
stos
test
dec
icebp
popa
addr16
imul
inc
and
mov
leave
dec
xchg
lock
lock
stc
mov
out
dec
sbb
fsubr
xor
push
addl
or
sbb
lret
cmp
enter
xor
add
xlat
xlat
rcrb
fldenv
mov
pop
add
xlat
cmp
mov
push
test
add
push
mov
xchg
mov
push
add
dec
pop
xor
sub
arpl
and
mov
xlat
int3
pop
xor
cld
stos
push
enter
mov
ljmp
ret
cmp
xor
fimuls
inc
loop
divb
pop
mov
jp
loop
or
xchg
jne
push
repz
loopne
xor
ja
ja
mov
xchg
nop
mov
stos
gs
cmc
int
dec
push
push
xchg
jnp
xlat
aas
inc
xor
out
fs
pop
loope
and
testl
push
cld
push
adc
test
pop
unpckhps
mov
mov
mov
mov
lret
popf
out
scas
dec
push
or
jo
addb
aam
mov
xchg
xchg
or
les
fcomi
movsl
xor
iret
sti
mov
cli
xchg
pop
mov
jl
jnp
or
in
out
imul
movsb
fsubr
dec
dec
dec
imul
pop
ficoml
fbld
inc
repz
adc
lods
mov
inc
add
push
or
subl
xchg
and
pop
out
pop
nop
jb
ret
mov
fisubl
call
out
lods
lods
sub
in
mov
insl
inc
jmp
test
out
jne
push
mov
dec
or
inc
adc
test
sbb
jmp
fimuls
cs
ss
lea
mov
in
mov
out
dec
or
stos
lods
pop
pusha
pop
cmp
std
sbb
pop
dec
ret
xor
xchg
icebp
arpl
sbb
push
fwait
icebp
sbb
shr
ljmp
or
enter
ja
cmpsl
sahf
mov
sbb
xor
dec
loope
test
pusha
mov
pop
lret
pop
out
mov
daa
xchg
test
icebp
cmc
sbb
test
cmp
hlt
push
ds
mov
pop
adc
cmpl
cld
in
addr16
jae
mov
mov
mov
cld
add
cmp
cmp
xchg
lret
hlt
dec
mov
fidivrs
movsb
out
ret
ja
mov
test
push
push
in
mov
adc
dec
addr16
cwtl
out
shr
movsb
jge
or
pop
xor
mov
repnz
push
sub
idivb
ja
gs
jnp
loop
movsb
or
pop
pop
test
xchg
in
xchg
jmp
dec
ret
movsl
push
arpl
xchg
pop
gs
mov
add
lock
adc
xor
lret
cli
push
and
in
jecxz
jl
repnz
stc
dec
out
rcr
ja
ja
sbb
pop
inc
insb
mov
das
dec
int
das
loope
adc
aas
inc
in
mov
pusha
add
cmp
xor
fnstsw
out
fmul
rorb
insb
loope
ss
test
sub
sahf
rcl
or
cmpsb
sbb
xlat
mov
xor
or
dec
sub
mov
in
pop
sti
sbb
mov
out
add
dec
jno
mov
popa
pop
xlat
sub
in
loop
mov
ja
push
lock
jmp
stc
inc
push
nop
or
out
mov
sbb
call
loop
mov
dec
lods
outsl
mov
inc
aam
xorb
bound
pop
inc
fs
pushf
xchg
out
and
das
adc
cmpxchg
xchg
mov
mov
push
ret
mov
es
mov
jae
iret
loope
jae
mov
jae
mov
sbb
sub
xor
xchg
daa
popa
gs
adc
cltd
sbb
or
fcmovu
mov
sbbb
rcrl
push
prefetch
insl
mov
pop
in
cmpsb
popf
out
sub
fdivs
insb
adc
test
mov
loopne
lret
es
add
sbb
out
les
js
inc
leave
shll
lcall
dec
jne
mov
sub
jmp
xchg
repnz
jecxz
dec
ret
sub
dec
push
sbb
mov
jns,pn
pop
pop
lods
out
movsb
mov
xor
dec
adc
std
cmc
pop
and
xchg
or
push
or
mov
mov
mov
sub
mov
mov
jns
jl
in
cld
stc
repz
out
call
xor
inc
xchg
loop
mov
xor
cltd
cs
push
mov
fldl
lcall
mov
sbb
lcall
pop
loopne
inc
and
inc
mov
pop
jmp
ja
out
stc
jb
push
movb
das
sub
rsqrtps
jb
imul
pushfw
mov
pop
es
pop
dec
adc
fisttps
cmp
aad
adcl
jae
mov
sldt
punpckhdq
iret
outsb
mov
xor
push
xchg
inc
jp
in
sub
out
nop
stos
call
in
rep
or
stc
jg
pop
add
jns
and
pusha
adc
and
xor
shlb
leave
push
test
sbb
ss
adc
lcall
andb
shll
mov
push
enter
sbb
xor
sub
inc
mov
push
push
lods
loop
aam
push
sub
nop
dec
or
xor
nop
pop
push
mov
mov
subps
inc
xor
int
inc
jmp
sbb
cs
add
and
stos
andb
ja
push
jae
adc
mov
pop
hlt
mov
out
or
mov
ds
cltd
rolb
xor
aam
mov
sub
push
xchg
xchg
cwtl
les
iret
and
lods
enter
hlt
mov
and
andb
mov
or
mov
add
or
jl
push
in
mov
popf
push
pop
cltd
lea
mov
ret
mov
xorl
arpl
std
dec
add
xor
fsubl
inc
loope
or
insb
adcb
ffree
xchg
sahf
fstpl
cmp
cs
jno
jnp
test
lahf
jb
fisubrs
pop
mov
ret
mov
jbe
push
inc
cmpsb
or
out
fnstcw
inc
lahf
jecxz
data16
icebp
call
negb
sub
and
jae
int3
imul
dec
gs
dec
xchg
xchg
int3
pop
lock
sub
jg
dec
xchg
test
add
xchg
cmp
push
repnz
sbb
lret
aad
popaw
push
xchg
pop
cmp
adc
push
inc
test
add
fwait
imul
jmp
lods
adcl
cmp
in
adc
push
xchg
adc
sbb
sub
or
scas
cmp
repnz
in
adc
loopne
in
dec
xchg
jbe
sub
repnz
in
mov
and
mov
inc
inc
nop
push
scas
jmp
shrb
push
mov
push
or
and
cmp
leave
push
xchg
xchg
mov
mov
mov
stos
or
ja
adc
inc
pop
mov
movsb
js
fcmovnu
xor
mov
or
movsb
rcl
idivb
test
pop
xor
dec
adc
jp
pusha
and
fstp
xchg
pop
xchg
imul
iret
clc
lret
sbb
cmc
jl
jns
shlb
jae
xchg
mov
sarb
iret
out
or
cltd
rcrb
or
int3
and
add
xor
xlat
lcall
pop
add
mov
stos
push
ret
js
inc
sbb
xchg
ret
mov
rcll
sub
push
push
out
xor
insl
popf
test
mov
stos
insl
add
bound
and
jecxz
mov
push
imul
nop
mov
test
add
fmul
sbb
push
xor
xchg
hlt
xchg
addl
lcall
mov
out
inc
cmpsb
add
stos
lods
sbb
inc
fcomps
push
jae
mov
mov
pop
es
add
pushf
sbb
mov
jbe
mov
mov
cmp
mov
pop
xchg
inc
sub
daa
aad
stos
clc
or
jp
cmpsb
add
cmp
jbe
adc
lret
mov
or
adc
add
add
fcoml
rep
dec
out
push
xchg
fstpt
mov
xor
mov
fsub
mov
repnz
lods
mov
cli
insl
fistpll
stos
inc
adc
sbb
and
push
imul
xchg
decb
push
imulb
inc
movsl
repz
repnz
cli
sub
mov
xchg
lret
cmp
cmp
and
push
or
and
vpor
and
sbb
inc
ror
aam
inc
mov
test
pop
stc
xchg
test
scas
mov
push
dec
adc
push
xor
lods
inc
adcb
mov
loopne
outsl
rorl
les
stos
jno
jmp
jg
popa
pusha
neg
mov
cli
out
enter
or
sub
push
lahf
int3
popf
lea
inc
iret
inc
mov
sub
add
ljmp
lahf
push
push
xchg
jne
sub
mov
movsb
add
jbe
lret
push
je
jae
xor
pop
jecxz
mov
xchg
sub
inc
mov
sub
jne
lea
lock
aas
cwtl
or
ljmp
cmpsl
repz
xchg
mov
adc
mov
jmp
jge
cmp
test
cs
cli
and
stos
mov
push
add
out
cld
rol
movsb
ret
rcll
dec
imul
loope
out
or
addb
sahf
vunpcklps
cld
mul
cmp
in
out
leave
inc
scas
and
sbb
lods
xchg
cmp
push
stc
sahf
jp
dec
and
cmp
out
pop
stc
and
hlt
xchg
test
and
adc
mov
jno
xchg
ror
jecxz
lds
mov
xchg
xor
sbb
out
repz
push
cmp
xor
push
insl
stos
and
fiaddl
adc
mov
mov
mov
adc
mov
inc
in
dec
sub
push
mov
test
mov
movsl
pop
lds
or
psllw
fadd
mov
pop
out
popl
mov
jb
je
or
dec
mov
aad
movsl
sbb
push
push
movsl
into
cwtl
sbb
repz
sbb
popf
imul
push
aaa
fsubrl
ja
sbb
aam
lods
push
cltd
push
push
fimuls
dec
cmp
xor
and
push
adc
iret
inc
imul
mov
push
mov
frstor
in
test
mov
popf
stos
jb
sub
je
xlat
repnz
sub
xor
inc
imulb
mov
cmc
mov
jp
mov
inc
adc
int
sub
loope
cmp
add
jno
outsl
out
jg
mov
or
pusha
ret
or
cmp
inc
jge
sub
adcb
pop
ret
inc
lock
mov
mov
jae
mov
lcall
bound
xchg
mov
rcr
jb
push
or
mov
jg
ds
mov
jns
filds
inc
je
out
inc
insb
cs
add
int
push
cmp
hlt
test
fisttpl
cwtl
lret
adc
add
lock
mov
incb
sarl
dec
ljmp
jno
jmp
imulb
aam
das
xor
cmp
xchg
cmpsb
pop
mov
push
push
pop
arpl
adc
fdivrs
xor
shrb
lcall
insb
mov
jg
aas
rorl
sbb
aam
xor
dec
mov
pop
mov
les
push
enter
xor
adc
jbe
pop
leave
xchg
mov
or
push
inc
into
out
fcmovnu
sub
jecxz
pop
imul
mov
or
push
shr
mov
push
lods
inc
add
xlat
outsb
mov
xchg
push
dec
subb
pop
pop
jne
mov
daa
pop
cmp
mov
movsb
lea
ret
test
mov
bound
adc
pop
jae
xor
jnp
fcompl
cmp
hlt
scas
aam
or
sub
and
sbb
out
pop
pop
das
mov
shlb
lods
or
mov
outsb
pop
xchg
sarb
dec
cmp
and
cmpsl
movsl
xor
xchg
mov
enter
dec
shrl
ss
out
jl
rcll
imul
jbe
cmp
mov
xchg
mov
add
movsl
sbb
push
adc
xlat
cmp
pop
mov
sbb
pop
sarb
sub
push
dec
xchg
dec
pop
dec
fcoml
jo
out
pusha
test
lret
test
out
mov
sahf
mov
mov
lock
dec
jno
pop
popa
cmc
js
rclb
and
sbb
inc
stos
call
ja
pop
sbb
in
nop
xchg
pop
mov
push
fimull
cmp
xchg
jp
jns
movsl
aad
shlb
sbb
lret
xchg
lock
sub
jl
ljmp
mov
mov
and
and
loop
xorb
sub
adc
daa
cmpsl
fnsave
js
pop
mov
mov
cmp
xchg
shrb
xor
mov
mov
add
or
int3
popa
fstl
cld
jo
cmc
into
clc
mov
loope
jl
mov
inc
je
aaa
fiaddl
push
xor
lods
fnsave
mov
pxor
mov
pop
add
mov
ffreep
pop
or
inc
mov
adc
xor
nop
and
xor
mov
je
mov
inc
out
into
ljmp
inc
or
sub
flds
insb
inc
daa
pop
or
and
fdiv
and
rcl
mov
cmpl
add
shl
hlt
imul
aaa
ja
jp
xor
fwait
sub
out
push
xchg
cmpsl
pop
xor
mov
insl
push
xchg
pop
sahf
out
fadds
jmp
repz
mov
hlt
movsl
xchg
stos
xor
pop
cwtl
in
jno
shlb
cmp
stos
jecxz
jmp
push
out
in
push
pop
adc
xchg
xor
sahf
outsb
xchg
dec
jle
cmp
xchg
dec
out
xchg
or
cmp
push
ljmp
mov
int3
sub
stos
pop
lcall
cltd
jl
push
insl
inc
mov
setb
push
jg
mov
jg
adc
popa
lret
popa
xor
xchg
cmp
ret
sbb
pop
adc
push
loope
pop
clc
jae
dec
jae
and
lods
mov
pop
je
insb
mov
imul
adc
fwait
xor
mov
mov
in
fistl
rol
int
fwait
cmp
insb
mov
lds
jbe
shrb
xorl
lret
add
jecxz
add
imul
jae
out
xchg
pop
add
or
push
out
xchg
and
std
shll
push
push
das
pop
adc
test
xchg
in
mov
mov
inc
xor
xchg
dec
xchg
sub
xor
in
jl
add
cmpsb
cmp
inc
xor
jg
mov
leave
mov
mov
jb
mov
dec
nop
lcall
pop
cmp
sub
orl
mov
dec
out
ret
aad
data16
call
inc
icebp
dec
mov
int3
jl
mov
lcall
int3
sahf
push
and
fdivl
clc
stos
dec
jno
xor
pop
dec
push
sbbb
or
movsb
sub
mov
sbb
pop
pushf
xchg
andb
mov
scas
pop
rorl
push
mov
sbb
pushf
stc
out
in
les
xor
test
in
mov
outsb
icebp
pop
push
stos
sbb
sbb
mov
out
daa
popa
mov
sbb
jg
pop
loopne
mov
xchg
shr
cmp
aad
xor
inc
mov
div
gs
xchg
out
js
push
pop
bound
add
pop
add
pop
and
std
inc
mov
xchg
repnz
fisubs
cmp
jmp
xor
pushw
fistpll
lods
dec
int3
push
mov
jl
mov
mov
mov
lods
loope
mov
or
icebp
int
insb
adc
mov
ret
outsb
dec
cmpsb
mov
rcll
xor
pop
mov
xor
push
sbb
push
mov
lods
jo
mov
cld
sub
dec
lret
sub
scas
jae
shrl
jp
repnz
insb
xor
or
stc
sbb
mov
clc
push
jge
or
inc
pop
pop
popa
icebp
leave
ja
out
stc
jbe
adc
sub
in
stc
mov
push
stos
push
push
les
in
sti
jg
push
out
lcall
imul
cmc
xor
subl
cmp
xchg
adc
dec
add
pop
fucomip
push
mov
push
inc
sbb
dec
pop
cmp
mov
dec
jno
int
inc
pop
hlt
add
aam
dec
loop
scas
in
ret
test
adcl
aaa
orl
loop
add
and
orl
sbb
js
sti
movsl
mov
loopw
sbb
addr16
push
andl
xchg
xor
sub
mull
mov
xchg
mov
repz
mov
adc
fst
or
mov
jne
jmp
push
fildll
xchg
ss
out
xor
add
inc
sbb
push
loope
test
or
iret
push
pop
adc
popa
xor
xchg
dec
cmpl
cmc
nop
xchg
dec
cmpsl
add
ret
add
push
jmp
fs
loope
in
or
rorb
in
dec
push
popf
add
cmc
les
sahf
fs
aas
iret
cld
pop
clc
xchg
adc
fstl
cmpsl
cmc
ds
xor
dec
int3
fidivrs
xchg
lahf
cmp
mov
jo
inc
xchg
fidivrs
sti
cmp
mov
out
js
sub
ficompl
icebp
pop
popa
push
lcall
lods
aam
inc
in
hlt
into
inc
cmp
imul
sbb
popa
addr16
pushf
aam
pop
xor
movsb
jns
mov
sbb
imul
lea
xchg
aaa
inc
add
fsub
lods
push
mov
es
cmpsl
cmp
pop
into
and
imul
mov
mov
stc
rcr
mov
in
mov
xchg
and
mov
jae
lods
push
hlt
xor
xchg
mov
lock
ds
icebp
inc
lret
mov
cmp
push
adc
cs
sbb
leave
andb
frstor
bound
mov
out
insl
and
pminub
in
push
inc
inc
jnp
cmpsl
cmp
mov
and
enter
cmp
inc
iret
aaa
pop
into
pop
inc
dec
lahf
movsl
sbb
mov
fsubrl
mov
daa
xor
sahf
mov
xorb
jae
push
xchg
add
lret
fildl
int
jg
mov
adc
adc
fisttpl
inc
in
mov
adc
das
adc
mov
mov
sti
mov
sub
cmpsl
fwait
xchg
cmp
cli
mov
jp
mov
fisubs
loop
ja
in
pop
int
cmp
outsl
push
add
out
dec
xchg
dec
popa
sub
int3
pop
das
adc
pop
xchg
mov
add
mov
jg
movl
in
int
mov
loopne
test
sub
jno
and
jg
xchg
ljmp
jecxz
sar
push
push
lret
imulb
aam
popa
outsl
jo
cwtl
fs
xchg
jg
add
mov
mov
sub
mov
dec
in
or
cmp
push
push
roll
sbb
movsl
mov
dec
ds
rol
cmpsl
sbb
ret
sub
or
outsb
out
fs
mov
addr16
sbb
or
mov
xchg
adc
push
dec
push
push
mov
in
cmp
call
push
je
pop
pop
outsb
cmp
xchg
cmpsl
xor
and
shrb
or
or
xlat
fs
loope
fs
and
xor
rcll
adc
push
aad
push
pop
je
cmp
outsb
add
inc
movsb
inc
sbb
loope
test
loope
or
or
rcrb
or
out
test
jp
adc
cli
arpl
mov
arpl
pop
dec
int3
clc
in
cmp
push
mov
mov
aad
xlat
mov
mov
push
mov
sti
insb
jecxz
jmp
adc
mov
jb
pop
mov
push
sarb
inc
add
clc
out
lahf
call
sub
mov
pop
call
and
test
out
cmp
push
jns
les
std
push
icebp
fmull
pop
mov
bound
roll
xchg
cli
push
clc
lds
inc
mov
or
cmp
or
inc
dec
inc
pop
pop
mov
sar
mov
xorb
add
pop
scas
lcall
adc
paddsb
and
adc
cmpsl
sub
push
cmp
and
popl
stos
jmp
ja
stos
mov
add
push
outsb
loope
sub
dec
push
jno
test
pop
int3
int
xor
mov
or
mov
sub
arpl
out
enter
dec
mov
inc
cli
push
test
xchg
das
and
or
pop
cmp
xchg
iretw
lret
js
jg
add
cmp
out
shll
mov
in
inc
xchg
sarb
xchg
icebp
sbb
std
sbb
es
call
shll
dec
addr16
js
xchg
popa
imul
inc
push
mov
rol
fcomip
sbb
addr16
jg
and
fsubr
push
inc
adc
cmp
std
mov
push
ret
pop
cltd
notl
ret
xor
xor
test
xor
sbbl
in
mov
shrl
pop
cwtl
mov
mov
fcoml
popa
jmp
repnz
push
insb
sub
fiadds
or
ljmp
cmp
pop
sbb
adc
add
jb
sbb
mov
cltd
mov
jne
mov
jmp
adcb
xor
fcmovnbe
mov
ja
pop
jmp
inc
js
or
mov
jne
in
jle
xchg
pop
pop
decb
cmc
or
sbb
xchg
out
sub
test
jge
aad
inc
xor
dec
ss
inc
inc
dec
bound
lcall
inc
out
add
ljmp
inc
fcomps
stos
loopne
fimuls
aad
std
adc
sub
mov
cli
popa
pop
sarl
outsb
xor
nop
dec
push
roll
sub
loop
push
fistpll
out
cmp
dec
vpsubsb
mov
and
jl
fisttpll
loopne
sbb
faddl
inc
fstpt
in
jns
movsl
and
mov
mov
loopne
mov
aaa
add
pop
pushw
leave
xor
and
adc
xor
insl
or
sar
push
stos
cmp
or
cmovne
push
je
sub
cmpl
paddw
gs
repz
jb
and
shl
std
stos
or
xorl
frstor
cs
icebp
push
jno
cmc
neg
mov
dec
cmpsb
repz
nop
fsubs
int
shr
adc
sbb
cmp
leave
pop
mov
sbb
fisubs
clc
clc
cmp
mov
cmp
loopne
jbe
outsl
push
dec
js
pop
pop
jle
js
cmpsb
fsub
add
frstor
adc
push
es
rcl
fidivs
xchg
add
jbe
mov
into
lcall
icebp
bnd
fildll
movsl
incb
sahf
push
pop
into
jb
out
xor
mov
push
mov
xor
push
push
xchg
sti
test
inc
imul
pop
mov
aaa
pushf
iret
ss
sahf
jge
into
lahf
popf
and
sbb
xor
push
mov
add
std
push
mov
aad
mov
popf
xor
mov
ja
enter
inc
in
push
sub
loope
xchg
fists
or
mov
xorb
and
mov
push
scas
fstp
roll
mov
sarb
and
inc
pushl
mov
mov
pop
pusha
mov
stc
and
js
fstsw
ss
cltd
xchg
mov
sub
iret
xchg
loopne
hlt
push
mov
adc
scas
inc
xor
mov
inc
aad
js
in
in
ret
xchg
faddl
or
add
out
xor
hlt
sub
or
dec
out
push
mov
jns
inc
sub
add
mov
movsl
cld
enter
sub
inc
cld
mov
push
or
rcr
xor
stos
xchg
cmpsb
push
pop
mov
cmp
mov
aas
xchg
iret
pop
pushf
pop
jecxz
imul
or
inc
fstpl
lcall
lods
dec
lret
xchg
or
sahf
mov
sbb
cmp
imul
mov
pop
xlat
jl
cs
push
jg
dec
xor
adc
fsubrs
inc
js
mov
lret
pop
adc
jbe
or
pop
out
cltd
out
push
stc
or
xchg
js
adc
sbb
das
lcall
xchg
mov
push
xchg
mov
outsl
xchg
pop
fisttpl
aam
inc
mov
mov
sbb
pop
lods
hlt
xchg
leave
cmp
shlb
and
jl
int
sti
jg
pop
mov
orb
out
mov
push
insl
rolb
repnz
out
cmp
iret
daa
fbstp
stc
jns
fwait
enter
std
scas
dec
scas
out
shlb
jle
or
outsb
leave
cmpsl
pushf
repz
lods
add
imul
negl
or
adc
xchg
push
mov
jns
decb
xchg
hlt
jg
outsl
add
js
popa
fs
cwtl
scas
insl
cwtl
and
pop
mov
jbe
imul
aad
sbb
repnz
movsb
addr16
int
mov
lret
lock
mov
test
mov
fstl
ret
popf
outsl
cmp
push
mov
sbb
and
xor
xlat
xchg
in
testb
pop
jne
icebp
pop
std
test
stos
outsb
call
add
scas
dec
in
dec
cmp
push
inc
and
insl
add
mov
push
or
outsb
popa
sub
lock
ss
push
xor
mov
or
pop
fldcw
stc
sbb
jle
fs
nop
and
notl
xor
into
inc
imul
jmp
cmp
mov
push
repz
add
sbb
data16
das
loop
add
sub
leave
sarb
lods
pushf
repnz
popa
out
sbb
jae
std
gs
pop
leave
fbld
xor
or
push
add
out
jmp
cmp
in
popa
mov
pop
mov
jbe
or
sub
add
dec
xor
lret
in
idivb
xlat
lea
xchg
out
mov
mov
sahf
push
loope
or
cmpsl
mov
xor
test
js
arpl
jge
inc
and
fs
push
addb
pop
adc
xchg
sti
or
inc
xor
and
cmc
nop
vmread
scas
bound
insb
inc
ss
cmp
jle
mov
sub
decb
push
int3
inc
push
mov
scas
push
dec
jb
jle
aaa
sbb
pushf
push
fs
shlb
lret
pop
or
inc
fstl
repnz
fxch
subl
dec
mov
je
nop
mov
push
jg
and
add
push
mov
pop
pop
pop
rcll
sub
mov
pop
push
sub
xchg
cmp
cmpsl
xlat
dec
inc
ljmp
pushl
ss
push
repnz
aas
pushf
je
mov
lock
mov
push
sbb
aas
inc
xchg
les
pop
adc
adc
adc
add
xlat
push
shr
rcll
mov
jbe
into
adc
xor
aaa
jns
loop
cmp
nop
mov
jg
and
iret
push
in
jbe
int
nop
neg
repnz
popf
repnz
outsb
outsl
mov
and
jns
aaa
sbb
dec
fnstenv
push
lods
mov
sub
cmp
push
pop
push
hlt
and
mov
jne
push
pushf
sub
mov
outsb
jne
ret
pop
enter
push
jbe
sub
lods
and
jnp
jge
sarl
stc
jnp
outsl
jo
mov
sbb
jns
repnz
mull
sub
add
push
dec
loop
push
or
jnp
cli
js
imul
or
dec
cld
adc
mov
std
cmp
js
cmp
sbb
mov
subb
into
outsl
test
pop
test
dec
scas
imul
cld
rorl
daa
test
cltd
enter
test
repz
jo
jo
or
test
test
fs
fs
cltd
popa
popa
fnstcw
push
das
pop
out
push
xor
xor
out
lods
or
in
or
xor
aad
fwait
dec
hlt
xlat
pop
mov
lcall
sarb
cmp
fmull
stos
int
push
test
std
xor
and
std
dec
roll
dec
leave
xor
fidivl
inc
punpcklbw
cmpsl
cs
movsl
push
add
mov
cwtl
call
jbe
mov
popf
lret
sub
cwtl
mov
mov
mov
into
jecxz
dec
cld
jl
or
lcall
lods
sub
jl
jge
push
xchg
pop
ds
add
roll
push
ljmp
out
inc
inc
sahf
jbe
fdivrs
sbb
cmp
shl
mov
sbb
mov
lea
inc
adc
cmpsl
dec
push
mov
push
fcomip
jns
aam
out
or
outsb
pushf
add
and
inc
jecxz
push
jo
xor
das
enter
cmp
shl
jl
shl
mov
lea
inc
pop
lds
jge
and
add
aas
lock
push
inc
jg
jecxz
push
stos
cli
outsb
popl
in
stos
add
xchg
inc
int
rcpps
call
push
movsb
pop
outsb
out
mulb
inc
lahf
jecxz
push
lret
jecxz
mov
xchg
pop
jmp
or
cmp
dec
repnz
and
int3
arpl
push
out
and
add
cltd
inc
outsl
stos
test
ljmp
jecxz
iret
xor
cmp
dec
xor
ret
nop
leave
loope
into
pop
stos
sbb
fidivrl
adc
fwait
lods
push
int3
xchg
adc
out
loop
xchg
adc
xchg
cwtl
xor
into
push
int
mov
outsl
jl
inc
or
mov
lahf
repz
jns
aaa
mov
fsubrs
mov
pop
addl
shl
mov
xorl
bound
arpl
push
hlt
ret
popa
dec
dec
pusha
xor
push
icebp
int
shlb
aam
daa
lods
ret
mov
sbb
mov
lock
mov
mov
test
iret
mov
mov
inc
and
push
sahf
inc
sbb
mov
pop
sbb
fiaddl
lods
mov
adc
movb
out
mov
mov
subl
or
xlat
test
xchg
mov
xchg
pushf
mov
out
scas
jg
mov
cmp
adc
mov
jl
pop
addr16
aam
inc
pop
add
lods
xorb
repnz
into
mov
cwtl
xlat
insl
lock
sbb
jns
outsb
loopne
mov
gs
adc
pop
jmp
int3
push
shll
add
pop
jne
inc
cltd
rcrb
adc
mov
imul
pop
fwait
call
hlt
fiaddl
and
pop
jae
stos
mov
push
xor
insl
mov
push
or
push
mov
or
sub
rcll
cmp
jno
push
cmp
lahf
dec
xlat
pushf
push
mov
mov
iret
mov
inc
lcall
mov
lret
mov
pop
jo
hlt
sub
out
imul
test
inc
fmulp
aam
ja
cmpsl
je
push
int
sbb
jmp
sub
push
adc
push
repnz
lods
aad
into
test
fistl
pushf
xchg
das
adc
inc
lahf
hlt
xchg
mov
jns
roll
add
push
aas
lret
dec
outsb
jg
inc
push
jecxz
inc
xor
lcall
stos
jb
es
inc
inc
jo
add
jb
jecxz
fwait
nop
cld
rcr
stc
sbb
adc
sub
testl
sbb
int
jle
repz
insl
dec
fidivrs
cmovns
ja
test
sarb
sub
pusha
lods
in
int
sbb
fnstcw
fldt
pushl
test
stos
lret
into
rorb
xchg
mov
push
cmpsl
stos
arpl
adc
xchg
dec
xchg
and
pop
and
cmp
dec
mov
pop
sbbl
mov
xor
and
cmp
out
mov
jmp
int3
mov
arpl
jmp
mov
imul
pop
in
nop
mov
rep
out
ds
sub
pop
lods
sar
out
push
outsb
pop
out
xlat
andl
ret
insl
inc
mov
lahf
je
pop
in
xor
jmp
es
sbb
subb
bound
out
xor
jecxz
popa
or
inc
push
hlt
nop
mov
sbb
inc
ss
dec
movsb
movsl
das
sub
jbe
aam
popa
push
test
dec
fs
push
out
es
xor
mov
mov
lret
les
add
cmp
jae
jbe
xchg
push
inc
jne
aad
test
dec
add
mov
push
adc
scas
repz
mov
pushf
bnd
lcall
xchg
mov
aam
pop
inc
ficomps
or
jo
dec
lret
fmull
dec
xor
loopne
xchg
insl
push
lods
inc
in
xchg
cli
movsb
jge
iret
pop
fs
movsl
dec
imul
mov
aaa
inc
cltd
mov
pop
sahf
push
arpl
or
movsb
mov
adc
sub
mov
std
push
adc
xchg
lock
jb
int3
mov
adc
sub
and
popa
cmp
je
adc
int3
imul
mov
outsb
jmp
scas
enter
cmp
pop
mov
add
xchg
push
mov
dec
loop
jbe
push
adc
les
pop
std
ficoms
cmp
cmp
inc
add
loope
lahf
loopne
out
ljmp
dec
pop
add
cmp
jo
add
push
xchg
add
cld
js
enter
clc
shl
mov
push
cmp
xor
cmc
fisttps
sub
xchg
pusha
loop
mov
or
pop
jecxz
pop
xchg
lock
and
lea
insb
xchg
and
mov
xchg
dec
cltd
jae
push
ret
shrb
popf
inc
in
sub
mov
mov
daa
push
sbb
dec
rclb
shll
lock
or
sub
mov
fists
push
pop
add
out
mov
stos
hlt
call
xchg
mov
and
insl
push
adc
xchg
sub
lret
or
or
aas
cmc
enter
xchg
pop
sbb
inc
inc
dec
dec
sar
fdivr
xor
dec
adc
mov
andb
dec
mov
mov
lods
insl
ljmp
rorb
push
icebp
clc
jecxz
pushf
insl
cs
loopne
or
jmp
notl
add
test
xor
mov
outsb
mov
jecxz
mov
out
sarb
movsb
dec
mov
pop
pusha
shl
das
in
sub
cltd
ja
add
fstl
inc
adc
mov
push
jae
popf
xlat
xor
decl
cli
and
data16
or
repnz
lret
int3
cmp
lahf
pop
cmp
jo
in
xor
push
mov
pop
rcrl
mov
in
push
jge
mov
pop
xlat
lods
faddl
in
xor
mov
rorl
jo
outsl
dec
insb
pop
pop
or
stos
mov
je
test
dec
pop
and
daa
adc
lods
lods
mov
xor
and
pushf
pop
adc
lea
xor
mov
test
ja
mov
div
add
rorb
sbbb
xchg
je
mov
push
xor
adc
xchg
dec
int3
icebp
or
jbe
mov
add
fidivrs
cmp
movb
mov
mov
mul
fwait
mov
cmp
adcl
xor
mov
sub
push
mov
push
jge
stos
shll
add
test
into
add
jge
xchg
adc
sbb
out
inc
add
pop
inc
mov
push
aaa
mov
inc
pop
mov
xor
jns
and
xor
out
mov
push
and
xor
rcl
sahf
mov
iret
jae
cmp
xchg
movsl
fmuls
js
andb
lea
mov
mov
ficoms
sbb
aam
inc
pop
pop
dec
out
dec
dec
jg
cmp
push
enter
ja
push
pop
xor
inc
xchg
cltd
pop
mov
test
push
cmp
pop
jmp
push
jle
movsb
fdivrs
add
and
xor
jecxz
into
mov
repz
xchg
dec
lahf
xor
pushf
rorb
mov
dec
jg
mov
ds
mov
xchg
dec
addl
dec
sub
and
dec
inc
sarb
push
add
std
out
addr16
jl,pn
xchg
mov
dec
cmp
hlt
sahf
push
mov
sarb
cmp
xchg
sub
stos
ds
ret
in
jge
insl
in
in
out
cmp
jns
shrb
out
sub
ljmp
add
mov
dec
es
lret
xor
leave
dec
imul
out
mov
fsubl
push
xchg
roll
int3
cmpsl
jns
in
xchg
adc
xchg
mov
xlat
mov
test
gs
in
mov
aam
in
aas
lret
mov
inc
sub
inc
xchg
inc
data16
insb
cltd
push
add
adc
cmp
sub
scas
push
cmp
ret
dec
daa
daa
nop
and
into
pop
adc
movsl
cltd
lods
cwtl
jecxz
and
mov
es
inc
mov
fsub
sbb
adc
mov
sub
repz
in
push
mov
xchg
ljmp
sarl
inc
movsl
sbb
cmp
leave
sbb
outsb
xor
mov
sub
lret
popf
add
adc
cli
jecxz
sub
add
sarb
jnp
stc
call
push
xchg
sbb
repnz
mov
cs
mov
dec
iret
ret
enter
fsubp
in
jge
out
sub
xor
jns
jg
add
popa
add
mov
inc
jns
sbb
add
cs
mov
xchg
in
xchg
gs
test
xchg
insb
popa
or
cs
clc
mov
bound
test
inc
ja
jg
sub
mov
mov
outsl
les
nop
adc
mov
movsb
jne
mov
ret
mov
dec
push
mov
jnp
into
outsb
lea
xchg
fidivs
mov
adc
cmc
jmp
cmp
mov
pop
lock
out
cltd
roll
sbb
in
adc
or
sbb
stos
cmpsl
hlt
or
mov
jmp
xchg
sbb
push
imul
mov
addb
push
test
adc
add
inc
mov
shrb
dec
or
push
add
divb
add
jl
testb
jmp
inc
ja
mov
mov
hlt
and
out
scas
push
faddp
in
pushw
add
fmul
pop
jns
clc
mov
test
mov
xchg
ds
int
lcall
scas
mov
insb
repnz
jno
mov
lcall
int3
xchg
movsb
pop
or
jmp
loop
out
stos
aaa
xchg
push
cmp
addl
aas
ljmp
push
adc
out
mov
dec
cmp
mov
in
scas
jnp
enter
xchg
insl
stos
mov
mov
lcall
ret
inc
imul
bound
sbb
lret
mov
in
mov
inc
lret
pop
add
pop
inc
ds
es
dec
dec
loope
sbb
dec
and
inc
test
pop
lds
inc
dec
js
outsl
enter
cmp
dec
adc
jmp
es
mov
jecxz
mov
or
rolb
mov
push
sub
test
sub
dec
xchg
cmp
xchg
sbb
out
mov
dec
jl
mov
shr
faddl
mov
out
inc
xchg
mov
xchg
inc
mov
lods
popa
add
pop
mov
loope
in
mov
pop
mov
cmp
daa
mov
pop
mov
das
cwtl
mov
mov
jecxz
dec
out
ds
pslld
inc
dec
loope
je
and
loop
dec
sub
jne
ljmp
sub
push
orl
dec
pop
or
xlat
inc
imul
fildll
and
cltd
mov
push
sbb
xor
imul
addr16
xchg
pop
mov
mov
inc
shlb
push
pop
cli
dec
dec
rorb
sub
sbb
jo
js
scas
les
loop
or
mov
out
rcll
sub
inc
call
mov
xchg
xchg
sbb
jne
cld
mov
adcb
pusha
adc
mov
xor
scas
sub
lahf
out
push
shlb
je
mov
dec
jno
enter
mov
adc
cltd
cli
je
inc
cmpsb
in
and
inc
or
jecxz
fidivrl
rolb
jmp
or
stc
push
int
xchg
push
sbb
cs
sbb
call
test
in
jns
mov
xor
movsl
gs
mov
mov
sub
sub
in
cmp
aas
push
ja
cltd
pop
jecxz
and
mov
mov
das
push
mov
inc
xchg
inc
push
out
sti
test
add
sarl
pop
dec
jbe
sbbl
adc
inc
push
rcll
outsl
and
ficoml
or
arpl
or
add
cwtl
sub
pop
shll
add
int3
sub
imul
insb
adc
mov
dec
ret
mov
push
mov
fnstcw
shll
les
push
movsl
pop
dec
jns
sbb
and
sbb
das
insb
ja
outsb
popa
pop
jle
cmpsb
sarb
xor
mov
fnstsw
out
js
mov
push
dec
shrb
aad
jle
inc
sub
aaa
xchg
jmp
sbb
mov
mov
adc
push
pop
cld
ret
shlb
mov
jmp
push
sub
iret
add
sub
inc
out
add
xchg
ljmp
mov
in
xor
cmp
inc
pop
cmc
lds
mov
sub
jmp
fst
rcl
imul
sub
sbb
stos
mov
lods
lahf
xchg
lods
iret
outsb
and
push
mov
mov
cmp
in
out
lods
adc
sbb
loop
jo
mov
outsb
xlat
dec
inc
dec
inc
outsb
mov
adc
fcompl
mov
jae
push
sti
mov
inc
jb
sahf
lods
cmp
out
call
insl
lods
and
ss
rolb
dec
jnp
aad
lods
cli
jle
push
dec
sub
shll
subl
pop
dec
lcall
loope
popw
pusha
std
into
dec
push
mov
pusha
dec
inc
imul
rclb
push
outsl
imul
xor
xchg
loopne
xchg
das
hlt
xor
mov
enter
loop
stc
and
jmp
scas
add
cs
cltd
out
mov
testb
cld
and
cltd
sub
xchg
mov
xlat
loope
incl
dec
jae
xchg
inc
mov
out
pop
icebp
push
sbb
repnz
xchg
sub
add
shrb
mov
loop
jle
push
push
mov
mov
ret
jge
adc
hlt
out
ja
push
xchg
dec
sbb
adc
inc
dec
mov
jo
int
adc
sub
in
sbb
xor
dec
aaa
jbe
add
fcomip
lods
fwait
je
mov
dec
pop
add
insl
cs
pop
adc
sub
mov
sahf
cmp
xorl
adc
fmul
cli
aad
push
ret
xor
test
aaa
loopne
popa
mov
cmp
and
cs
push
jmp
adc
pop
mov
pop
xor
adc
xchg
xchg
mov
mull
adc
stos
adc
int3
pop
or
inc
xchg
adc
mov
inc
xor
xor
test
loopne
xchg
xor
cli
and
push
pop
jb
nop
out
push
sbb
mov
mov
jmp
std
pop
cltd
inc
pop
les
push
xor
mov
push
dec
imul
and
adc
adc
lods
jae
mov
add
push
clc
push
jl
lahf
and
inc
int
or
addl
gs
sub
insb
add
mov
sbb
aas
sub
int
sbb
mov
and
push
push
cltd
ds
push
and
mov
push
mov
psubq
aas
fxam
sub
cld
xchg
adc
int
stc
test
jnp
repz
adc
imul
dec
and
xchg
pushf
adc
push
ss
stos
imul
xor
push
in
imul
xchg
xchg
push
iret
iret
js
fwait
lahf
dec
push
es
mov
rep
ljmp
repnz
cwtl
push
inc
push
stc
push
sbb
and
adc
mov
nop
cli
inc
push
pop
push
mov
loope
mov
fstps
scas
rcll
dec
jge
lods
lahf
adc
adc
filds
adc
mov
cmc
test
jg
sahf
push
or
sub
int
pop
add
jne
xor
pop
cmc
rcll
mov
fmull
pop
cmp
push
push
push
loope
cwtl
pop
push
xor
dec
ja
jle
mov
add
cmp
mov
or
cmp
jo
xchg
jl
push
lret
and
pop
popf
dec
ficomps
sub
scas
adc
jno
and
aaa
pop
push
das
ja
int3
adc
mov
or
out
and
mov
ljmp
add
int3
shl
push
jl
repnz
push
mov
mov
mov
rorb
mov
addr16
out
sub
loopne
push
mov
out
shlb
cmpl
fsub
adc
mov
mov
sarb
dec
std
pop
sub
xlat
mov
lret
inc
out
add
push
test
xor
popa
mov
repnz
mov
cld
xor
sbb
aas
or
pop
cmp
aad
inc
loop
fxch
call
inc
movsl
rorl
cmp
dec
mov
in
or
pop
xchg
cmpsb
aam
push
test
inc
mov
dec
fidivrs
cmc
mov
or
dec
popa
mov
sti
lret
pop
xor
lcall
fdivr
test
inc
dec
cmp
fidivs
clc
push
fwait
adc
imul
test
push
out
das
faddp
scas
push
in
xor
sahf
scas
enter
inc
les
aam
rcrb
add
scas
leave
out
pushf
orb
or
xor
push
lock
jg
xchg
rorb
movsl
imul
je
gs
push
push
iret
mov
sarl
push
repnz
inc
test
xor
pop
mov
inc
and
or
sti
rolb
or
push
or
and
cmc
cli
push
and
ss
add
push
dec
incl
jb
repnz
leave
push
sbb
dec
ret
mov
add
dec
outsl
out
dec
mov
jp
stos
mov
adc
add
orl
rorl
cld
jo
fstps
pop
ds
jno
ret
aas
sar
cs
jl
mov
in
loope
mov
ljmp
jmp
call
jl
add
scas
xchg
test
add
pop
push
push
jo
imul
negl
test
mov
add
cmp
rol
jo
mov
push
xchg
out
ret
cmc
stc
je
nop
repz
inc
pop
cmp
adc
mov
pop
fcoml
insb
out
cld
or
cmp
pop
lcall
sub
neg
pop
xchg
dec
cltd
fsubs
imul
lret
and
xor
sti
cli
xor
cmpsl
sub
fstpt
jl
mov
test
out
ret
mulb
push
pop
jle
sar
sbb
rorb
das
inc
adc
adc
mov
push
mov
xor
add
mov
push
imul
sub
nop
nop
es
imul
sub
popf
push
xchg
scas
mov
in
rorb
jae
dec
imul
lcall
jecxz
loope
jo
cmp
subl
cmpb
push
fisubl
test
and
test
dec
mov
push
leave
sbb
jp
jne
cmp
mov
mov
add
outsl
daa
mov
push
mov
push
and
mov
xchg
mov
mov
jno
add
adc
add
test
push
inc
int
mov
loopne
pusha
adc
push
ret
add
int
outsb
sbb
insb
mov
mov
sbb
cmp
imul
pop
mov
push
and
mov
xchg
fs
popf
pop
fcoml
or
sbb
es
int3
mov
and
out
repz
daa
inc
mov
jmp
ss
pop
pop
mov
lods
cltd
xchg
xchg
inc
jmp
bnd
fldt
inc
test
xor
aad
xchg
push
insl
lret
imul
push
cli
push
outsb
cmp
jl
fisubrs
mov
cmpsl
or
xor
add
sub
popf
inc
cmp
lock
sub
cmpsb
cmp
dec
rcrb
sarb
mov
std
push
in
cwtl
lock
sbb
in
stc
push
ficompl
test
popa
pop
inc
rcrb
cmp
inc
adc
sbb
pop
push
aam
push
sbb
rol
cmp
inc
js
ds
inc
loope
shlb
bound
dec
jo
jmp
xor
cmp
xor
jle
xor
pushf
aas
add
mov
scas
dec
ja,pt
mov
dec
add
dec
fwait
inc
out
in
outsb
push
repnz
push
divl
jg
pop
loopne
inc
mov
mov
jae
and
jae
and
jp
std
bnd
push
data16
sahf
jbe,pt
adc
push
test
xchg
ss
popf
repnz
adc
cmpsl
cmpsb
rcrl
in
xchg
outsl
rcll
inc
movsb
push
sahf
jae
imul
subl
repz
rcrl
cmp
push
arpl
pop
xchg
and
test
clc
js
in
outsl
adc
cmp
mov
sub
push
cmpsb
pop
adc
add
sti
sbb
pop
fcmovnb
sar
sbb
cmp
pop
in
ss
mov
jmp
in
dec
rcl
cmp
loopne
ds
or
mov
jnp
lcall
in
dec
jp
cmp
mov
loopne
xor
sbb
mov
mov
pop
sbb
lret
popa
push
mov
mov
frstor
lea
xor
inc
inc
jle,pn
shrb
outsb
cmpsl
xchg
je
mov
cmp
pop
fwait
lods
add
ffree
mov
mov
andb
out
in
xor
outsb
push
xchg
xchg
cmpb
or
loop
shr
mov
and
imul
daa
dec
cwtl
popf
inc
imul
add
movsb
push
adc
stos
adc
push
jae
add
and
mov
mov
imul
scas
xchg
cmp
sbb
imul
jecxz
or
dec
adc
std
shll
in
mov
cmc
dec
cmp
ds
imul
add
in
inc
mov
or
mov
adc
add
and
sbb
fnstcw
xorb
push
in
dec
lcall
je
cs
sbb
ja
int
mov
pushf
inc
aaa
and
dec
cmpsb
stos
pop
lods
inc
and
xlat
cmp
bound
push
sbb
sub
test
ret
cmp
cmpl
out
jecxz
fmull
sbb
pop
and
addr16
push
sahf
bound
testb
outsl
ss
dec
cltd
mov
fldt
pop
mov
pop
sbb
xchg
add
filds
mov
aam
xor
xorb
enter
or
mov
pushf
pop
sub
mov
imul
pop
inc
cmp
jge
xor
cli
imul
and
jno
addl
and
out
fstl
sbb
pushl
jmp
cmp
aam
lret
xor
loope
push
jnp
pop
push
pop
mov
int
movsb
addr16
mulb
pop
lret
or
ja
mov
cli
les
sbb
xor
fcomps
sahf
pop
lret
pop
dec
pop
mov
je
aaa
push
addr16
popa
fcomps
dec
jno
pusha
mov
pop
push
dec
mov
test
or
cwtl
cmp
out
stos
sub
dec
out
fwait
popf
in
sbb
dec
in
mov
pop
in
jmp
inc
dec
lret
lock
sub
mov
inc
adc
xor
jl
fcoms
jns
mov
or
jge
mov
out
es
mov
leave
jae
test
movsb
xchg
adc
jle
cmp
dec
or
jmp
pusha
adc
pusha
cmp
ja
xor
push
je
push
jbe
cmp
dec
push
loop
or
test
mov
aas
cli
into
and
xchg
pop
lods
adc
add
jg
cmp
aad
ret
adc
sub
push
sbb
xchg
scas
pop
int
sub
jnp
orl
arpl
hlt
mov
jo
mov
cltd
ja
jmp
and
mov
out
sub
cltd
xchg
rclb
imul
gs
sub
sti
push
xorl
sub
xchg
and
in
inc
mov
inc
xchg
rorb
push
mov
aas
jae
mov
repz
shll
xor
pop
test
inc
mov
hlt
hlt
push
int3
cld
xor
sahf
mov
call
jg
mov
pop
mov
dec
dec
bound
jno
sbb
loop
mov
add
fnstsw
xchg
fcmovnu
shrl
fiadds
sub
mov
mov
subl
clc
add
insb
sub
lds
add
adc
dec
lds
cmp
jl
cmp
fists
and
mov
sub
and
imul
or
pop
pushf
inc
pop
and
fdivl
inc
adc
ror
jnp
mov
pop
cwtl
pop
sub
je
or
leave
pushl
jg
idiv
ss
shl
mov
mov
xchg
dec
pop
or
xchg
jns
add
mov
orb
and
add
jns
push
es
es
and
les
mov
xlat
push
mov
adc
lret
dec
jnp
leave
sub
push
inc
ljmp
cmp
mov
dec
inc
mov
jae
pop
mov
lea
mov
cmpsl
ss
jg
icebp
scas
add
rcrb
push
fcomps
mov
xchg
pushf
xchg
jbe
movsl
test
jnp
test
test
bound
mov
test
and
fsubr
adc
push
jno
pusha
push
mov
mov
stos
insl
sub
mov
sti
cmpsb
push
dec
repz
sub
popf
xor
mov
dec
inc
fs
lcall
arpl
jmp
mov
pushf
pushf
je
fbld
movsl
add
mov
bound
lret
data16
fsub
cmp
jmp
scas
pop
cmpsb
add
dec
xor
add
fs
adc
push
xchg
addr16
arpl
test
lea
xchg
js
movsb
inc
jg
mov
mov
jnp
adc
cmpsl
pop
xor
arpl
aas
out
and
stos
xor
xchg
nop
les
mov
xchg
fistps
cmp
movsb
rcrl
mov
icebp
aam
cmp
sbb
ljmp
fbstp
push
out
push
or
in
inc
and
jmp
sahf
test
sbb
lcall
bound
sarl
jmp
arpl
mov
aaa
sti
pop
mov
cltd
sbb
ficomps
dec
dec
xchg
sub
xchg
sbb
into
roll
pop
xchg
stc
xor
iret
jge
add
sub
daa
repnz
and
mov
xchg
jmp
sbb
cmp
adc
add
add
cmp
and
or
inc
ret
add
jbe
je
mov
push
fdivl
xchg
inc
nop
jb
inc
cwtl
and
jmp
xchg
xor
rcrl
sub
pop
ds
pop
mov
mov
ret
xchg
pop
xlat
xchg
mov
mov
mov
nop
add
and
pop
loopne
mov
adc
inc
sbb
popf
push
mov
or
pop
and
cwtl
push
mov
pop
arpl
sub
jle
popa
xchg
mull
xor
sbb
movsl
xchg
or
lods
mov
mov
dec
outsb
mov
fiaddl
jnp
aaa
iret
mov
mov
aaa
iret
je
pop
int3
aas
pop
push
and
jae
push
daa
lock
jmp
cwtl
imul
enter
repnz
les
xchg
pop
scas
cmp
push
push
dec
in
mov
jbe
cmpb
mov
and
repz
dec
insl
imul
in
and
sbb
sahf
out
mov
int3
pop
mov
xchg
lret
out
lods
inc
inc
scas
mov
out
subb
repnz
incb
jle
fidivl
mov
sbb
pop
fildl
ljmp
cmpsl
clc
lods
dec
cmpsb
arpl
movsl
sbb
ljmp
add
insb
inc
popa
pop
jb
cmp
pop
mov
xchg
aad
pop
mov
cmp
rcrb
stos
mov
pop
aas
inc
pushf
pop
repz
mov
mov
jle
dec
cmp
xchg
aad
or
ret
jmp
pop
cld
push
movsl
clc
cwtl
pop
stc
sahf
ja
test
push
xlat
xchg
xlat
std
and
aam
test
xchg
popf
xchg
add
shll
adc
mov
pop
push
xchg
stc
fcoms
addl
adc
cmp
xchg
jmp
or
fisttpl
and
inc
add
std
bts
adc
pop
sub
jae
mov
ljmp
int
pushf
and
sbbb
push
clc
lds
xor
cld
sbb
and
pop
dec
scas
mov
jbe
push
cmp
push
insb
pop
fsubr
push
fldl
jl
nop
sub
fcmovbe
jmp
dec
pop
add
popa
mov
jne
dec
mov
fs
jnp
and
add
pop
push
push
nop
inc
int
pop
aaa
pop
jne
inc
enter
cli
mov
fimull
xchg
lods
stos
pcmpgtd
dec
bound
or
loop
aad
shll
mov
push
pop
pop
int3
outsb
ds
scas
sub
or
mov
pop
repz
cld
push
loop
hlt
xor
mov
mov
mov
ficoml
dec
sbb
outsb
push
outsb
fwait
stc
cmp
jo
pop
hlt
scas
jne
repnz
cmp
call
jg
mov
jge
inc
rorb
cltd
mov
jno
mov
xchg
mov
out
jmp
lcall
dec
mov
pop
ja
pop
enter
int3
xchg
cs
fwait
xor
or
std
and
xor
gs
and
das
in
dec
mov
fldenv
scas
and
cld
daa
xchg
mov
fs
cmpsl
push
jns
xor
xor
jb
xchg
mov
mov
stc
data16
sti
inc
jnp
xchg
scas
push
ljmp
mov
push
mov
inc
cmp
shll
add
jb
test
testl
pusha
lcall
adc
add
cmp
in
or
aad
into
dec
mov
subb
mov
pusha
sbb
sub
or
sahf
mov
xchg
ss
rolb
mov
mov
jnp
inc
jb
addr16
and
mov
mov
test
jp
cmp
movsb
adc
pop
cmp
popa
add
dec
and
xlat
mov
lea
mov
cmpb
fwait
dec
movsb
popf
scas
pop
xchg
mov
fxch
xor
xchg
xchg
sub
icebp
pop
pop
push
mov
ja
pop
ret
js
mov
add
dec
add
inc
std
jecxz
sarb
fsubrs
xchg
hlt
mov
loopne
movsl
adc
push
mov
push
xor
mov
roll
mov
cwtl
sbb
gs
scas
and
mov
inc
sub
hlt
jl
test
mov
dec
sbb
add
cmp
test
into
leave
sub
mov
loop
xchg
ds
inc
add
int
jbe
icebp
pop
lcall
sarb
shrb
jg
test
lahf
mov
loope
test
ljmp
test
pushf
mov
push
mov
and
or
mov
out
int
push
mov
adc
push
inc
sub
loop
insb
cmpsb
iret
sub
divps
xchg
adc
pop
arpl
insb
pop
popa
fsubs
cli
mov
orb
or
mov
iret
ja
adc
lods
push
push
pop
pusha
xchg
ss
adc
or
sub
xor
mov
mov
jbe
cmpsl
push
mov
enter
lret
pop
stos
add
jp
dec
in
mov
int
mov
adc
test
stos
mov
mov
mov
dec
sbb
aam
sub
pop
jnp
adc
fnstenv
or
stos
xor
mov
xchg
mov
pop
push
movsb
cld
aad
pop
icebp
shll
xor
int3
adc
je
fs
cmp
insl
mov
xor
test
mov
data16
adc
xchg
lret
and
pop
js
aam
mov
scas
push
xorl
push
in
andb
dec
jae
pop
iret
xorl
push
cmpsb
xor
insb
mov
dec
aam
bound
or
repnz
mov
idiv
lds
inc
stc
sti
dec
in
ds
nop
ficoms
inc
jge
nop
sub
sti
ret
in
ret
stos
mov
call
xchg
nop
pushf
dec
popf
push
and
pop
sbb
push
xchg
hlt
add
or
in
cmp
sarb
ss
sbb
mov
sbb
shrb
cmpsl
xchg
sub
cmp
ret
add
mov
ljmp
pop
rcl
lock
or
pop
lods
add
lds
jb
scas
xchg
mov
leave
in
cmpsb
mov
pop
mov
add
psrlw
xor
popf
xchg
inc
sub
push
lock
movsl
push
mov
out
scas
push
xor
subl
lods
clc
inc
ss
mov
push
dec
mov
mov
mov
popa
ja
ds
cwtl
iret
inc
paddusw
roll
push
sti
xor
mov
and
xchg
jns
push
xor
fmulp
pusha
push
mov
in
inc
mov
pop
xchg
or
sub
shlb
add
mov
jno
and
mov
sbb
fidivs
or
xlat
notl
mov
push
cwtl
ret
jbe
aas
test
jp
imul
push
mov
ror
enter
mov
sbb
pusha
das
mov
scas
xor
pop
ljmp
movsb
add
jecxz
jp
pop
in
call
fadd
bound
into
loope
push
aaa
sbb
test
aaa
cmp
push
add
in
jl
dec
mov
lret
js
pop
mov
jle
xchg
push
adc
sub
pop
jl
ficoml
fwait
mov
and
enter
lds
xlat
pop
stos
insl
cmp
sbb
inc
jl
test
or
mov
shll
jno
ljmp
mov
pushf
repz
lret
movsl
mov
mov
sbb
pop
outsb
prefetchw
or
inc
sub
insl
mov
inc
xchg
mov
xor
arpl
push
or
cmc
mov
jecxz
les
pop
in
packssdw
std
lea
pcmpgtw
xchg
adc
sbbl
xor
mov
es
aad
rolb
jb
out
inc
mov
mov
lock
rcll
lds
arpl
mov
mov
out
mov
rcrl
mov
adc
scas
mov
push
das
shr
addr16
xchg
pop
loop
xchg
or
stos
xor
fsubs
mov
sarl
mov
jp
xor
cltd
rclb
pusha
mov
sbb
shrl
jl
jp
mov
lret
mov
mov
cmp
xchg
sbb
sub
xlat
std
jns
fwait
or
out
xchg
mov
jecxz
xchg
xchg
nop
aaa
jne
lods
out
cmp
or
mov
and
dec
cld
fcmove
push
loopne
push
mov
xlat
sahf
jp
and
imul
sarl
push
lret
cmp
xchg
aam
ds
out
sbb
test
sub
or
mov
jne
mov
sub
or
add
jnp
pusha
mov
rcrb
mov
cld
cmp
cwtl
aas
in
mov
dec
mov
xlat
mov
push
xor
push
or
adc
lods
movsl
pushf
imul
inc
scas
lock
push
sub
dec
cwtl
xchg
int3
cmp
jb
and
sti
or
sahf
aaa
jp
sub
push
mov
mov
dec
loope
sbb
ss
hlt
lods
dec
sbb
lea
or
pop
stos
pusha
std
in
jb
es
xchg
add
cmp
sub
cmp
inc
jmp
and
push
dec
dec
dec
mov
push
fsubs
pop
push
mov
or
jns
ds
sti
adc
out
xchg
push
repz
mov
inc
push
inc
pop
lock
aad
imull
je
mov
inc
insb
ficoms
or
cmp
ja
xlat
sub
dec
push
mov
xchg
adc
mov
lock
je
cmpsb
pop
cmp
cmp
adc
lock
out
loope
test
cmpl
mov
and
insl
es
dec
push
add
dec
ljmp
in
cs
inc
nop
mov
pop
mov
aas
pop
test
addb
add
sbbb
ss
loope
adc
lds
fmulp
xchg
pop
pop
cmc
mov
pop
enter
inc
and
inc
mov
roll
test
mov
xchg
in
xchg
pop
push
push
jbe
fidivrl
dec
fldl2e
out
sbb
cs
sbb
adc
call
lea
hlt
pushf
add
inc
pop
jb
lds
lret
dec
mov
shll
and
inc
leave
mov
cld
out
rcrb
sbbb
push
fsts
inc
adcl
lods
mov
inc
hlt
fwait
cmp
jecxz
movb
xchg
aaa
lahf
jmp
add
movsb
pusha
or
mov
jbe
in
jnp
iret
in
mov
push
imul
mov
mov
aad
add
jecxz
xor
add
push
dec
and
out
push
scas
jmp
testl
insl
sbb
adc
scas
pop
mov
out
lcall
add
lahf
dec
jb
daa
sti
push
insl
shll
ds
mov
dec
push
fidivrl
dec
cwtl
pop
sbb
lret
rolb
das
xor
aas
es
lea
pop
je
pop
popf
xor
push
fwait
and
pop
lret
fcoml
jae
bound
push
add
iret
mov
push
fwait
push
popa
icebp
cmc
cmpsl
dec
jle
outsl
sarl
lret
outsb
xlat
sbb
das
jbe
mov
arpl
aad
cmpsl
pop
add
repz
adc
and
ljmp
jecxz
dec
and
jp
mov
std
cmp
dec
jns
das
icebp
es
movl
mov
or
insl
push
mov
aam
roll
dec
icebp
bound
fstl
cmc
mov
cmp
xor
or
cmp
mov
push
data16
jp
add
jns
and
sbb
or
mov
subb
fcmovb
pop
pop
daa
xchg
push
or
jmp
dec
test
push
inc
lcall
adc
jne
jae
data16
rorl
add
arpl
adc
cld
mov
out
or
cmp
insl
sub
daa
mov
aas
enter
aad
rcr
inc
xchg
fcmove
rcrb
xor
inc
icebp
mov
cmpsb
push
orb
clc
clc
mov
lret
adc
dec
inc
mov
aad
pop
dec
and
pop
mov
iret
js
adc
leave
adc
jbe
mov
loope
aam
test
pop
cmp
test
aaa
mov
pop
push
mov
jno
sub
loope
fsubrp
xchg
rcll
dec
pop
mov
pop
pop
testb
lcall
mov
cld
cmc
mov
xlat
sub
dec
or
and
std
and
notb
xor
pop
pop
lods
ja
arpl
jnp
daa
add
stc
xor
mov
xor
lret
or
mov
imul
mov
push
loop
addr16
sbb
add
jnp
dec
dec
push
stc
fdivs
add
mov
pop
xlat
xor
xchg
jnp
xchg
out
imul
adcl
stc
mov
inc
cmp
jne
inc
cmp
sub
sub
sbb
in
sub
sbb
js
sbb
dec
pop
popf
loope
inc
sahf
shr
mov
dec
jo
push
test
mov
inc
inc
cmc
jnp
push
stos
lds
mov
incl
jnp
xchg
mov
mov
int
lods
cmp
aad
dec
ds
out
inc
xchg
leave
addr16
outsb
xorl
pop
fmuls
xor
sti
icebp
cmp
pop
add
int
std
mov
inc
sub
test
fistpll
cmp
and
sti
mov
push
sbb
adcl
adc
pop
movsb
out
inc
testb
dec
sub
jbe
cmp
push
in
int3
sub
jns
fwait
out
out
data16
mov
jecxz
movb
sarb
test
scas
xchg
mov
xchg
shrl
push
dec
xor
fs
jmp
test
xor
mov
mov
in
and
pop
and
arpl
outsb
imull
fldt
xor
adc
inc
aam
gs
mov
sub
int
jns
inc
je
hlt
cli
sub
addl
jp
mov
cmpsb
outsb
dec
add
pop
lock
popa
in
mov
fadd
jns
push
xor
lret
pusha
lret
adc
push
add
mov
mov
pop
xor
dec
clc
icebp
mov
pop
push
out
andl
cmp
xchg
push
fwait
aam
clc
cld
push
mov
cmp
mov
cmp
inc
aaa
data16
add
push
jb
and
sub
xor
sti
sbb
loope
cmp
dec
out
fcoml
jp
xchg
mov
cmp
sbbb
pop
jmp
loopne
outsl
xchg
xchg
push
scas
inc
int3
mov
mov
mov
daa
sbb
cld
mov
add
sub
adc
xchg
xchg
mov
sahf
adc
out
ds
fcmovnbe
loope
cmp
pop
iret
push
sbb
xchg
test
jo
popf
popf
outsl
lea
mov
sub
xchg
jp
lods
mov
cmc
push
sub
dec
sub
inc
jb
loope
int3
aas
cli
and
outsb
sbb
enter
sub
xchg
imul
into
mov
mov
das
add
mov
in
adc
add
push
notl
xor
mov
rorl
loopne
ljmp
std
aad
pop
dec
mov
sbb
jecxz
push
inc
fcomps
cmp
clc
mov
sti
jbe
into
scas
and
movlhps
cld
cwtl
mov
shlb
xchg
cmpsl
scas
inc
aaa
hlt
jecxz
jo
bound
push
ret
dec
rcrl
push
inc
jns
mov
dec
mov
mov
or
jle
mov
jge
scas
ss
add
fdivrl
cmp
jle
rcrb
rolb
push
pusha
mov
mov
inc
dec
insl
in
mov
mov
or
mov
clc
imul
lea
add
and
jne
jl
dec
fcoml
mov
gs
mov
hlt
fidivl
les
jae
jg
adc
or
mov
sahf
aam
xchg
das
rcrb
ds
mov
jno
jb
gs
nop
not
pop
ja
lock
cmpsl
push
pop
sarl
mov
daa
push
push
inc
jmp
dec
or
and
es
icebp
jb
push
mov
mov
cmp
orb
ret
push
pop
pop
dec
mov
mov
lds
test
cmpsl
jno
xchg
aaa
push
std
in
cmp
daa
jns
dec
imul
lahf
idivl
fisttpll
rclb
repnz
ljmp
mov
fwait
jle
aas
dec
mov
jg
imull
pop
imul
or
outsb
sahf
xchg
xor
jmp
add
insb
cmpsb
outsl
adc
pop
call
stos
iret
lahf
inc
pop
mov
out
sub
addr16
dec
and
jl
and
sub
clc
sbb
popf
pavgb
push
lock
adc
dec
xor
ret
test
jae
cmp
jno
jmp
pop
sub
push
int3
mov
out
jecxz
lods
inc
dec
or
rep
add
in
or
scas
out
push
icebp
cmp
cld
mov
xchg
mov
or
dec
sahf
mov
sbb
mov
dec
cvtps2pd
jae
push
mov
jg
fistl
jge
mov
sub
add
sahf
hlt
lods
imul
repnz
and
push
insl
mov
cld
loope
jae
add
mov
push
lret
test
enter
data16
out
push
in
inc
fcoms
xchg
lret
push
rcr
addr16
ret
mov
pop
adc
in
lods
cltd
push
jmp
and
inc
inc
stos
jne
sub
dec
ss
aam
push
dec
adc
or
xor
into
jl
subl
mov
xchg
fistpl
push
jmp
push
push
pop
scas
add
ret
je
adc
jne
iret
std
aas
mov
inc
filds
lea
fwait
mov
pop
and
fs
xchg
mov
dec
mov
mov
jle
dec
inc
jns
mov
data16
daa
sahf
and
mov
into
pop
jne
fldcw
sbb
xchg
inc
addr16
jb
daa
add
xor
lahf
lock
jne
mov
test
dec
aad
orl
loop
xor
jmp
and
pop
pop
pop
xchg
mov
xchg
push
push
mov
mov
fwait
inc
roll
sub
mov
push
lcall
sub
jg
cmp
inc
push
rcrb
add
lods
arpl
sbb
scas
test
rcrb
add
jo
dec
xchg
adc
mov
repnz
cmp
lea
xchg
ret
mov
push
shll
clc
in
pop
das
mov
outsb
sahf
aaa
sti
stos
mov
arpl
subl
fisttpll
das
fistps
xor
test
cmp
lds
jecxz
push
jmp
mov
mov
cs
jle
dec
xor
leave
out
push
arpl
mov
daa
pop
jae
lret
jbe
pushw
je
movsb
fmuls
dec
mov
outsl
dec
jge
mov
and
repz
xlat
cmp
add
nop
jbe
andl
decl
mov
and
cmp
testl
add
lods
in
hlt
adc
and
sub
lret
cmpl
lock
jbe
imul
add
pop
xor
das
inc
test
jmp
push
push
adc
test
and
jbe
das
sbb
fldenv
js
dec
or
jg
fmuls
jl
daa
and
cli
int
out
test
push
pop
or
cmp
pop
inc
lret
test
sub
jnp
cmpsl
push
xchg
repnz
fnstcw
adc
lahf
lea
ja
mov
push
jp
xor
outsl
or
and
scas
xchg
outsb
hlt
fldenv
shrl
icebp
cmpl
movsl
jno
pushf
xlat
idivb
dec
int
arpl
repz
xor
cli
data16
in
mov
mov
jne
cld
xchg
inc
push
mulb
ret
lea
pop
incb
fucomp
mov
adc
add
pushf
fneni(8087
scas
sbb
mov
outsl
fbld
clc
ds
aaa
jne
enter
in
mov
inc
leave
adc
sbb
in
lcall
pop
daa
push
mov
mov
cmp
jnp
dec
loopne
movb
and
fs
dec
mov
mov
cmp
arpl
sub
or
add
push
push
dec
mov
test
inc
fwait
lods
mov
pop
insl
rcrb
cmpsb
fwait
jae
jbe
jbe
in
pop
pushf
test
std
add
or
arpl
pop
loop
nop
js
popa
inc
sub
inc
xchg
sbb
rcll
fst
lea
pop
std
add
xchg
mov
and
pop
loopne
push
push
mov
push
pusha
imul
mov
hlt
sbb
add
enter
int
lods
fcoml
rep
push
xchg
or
lcall
adcb
cwtl
ficomps
dec
xchg
push
add
pusha
popf
push
and
les
lret
cmpl
add
push
or
xor
iret
lea
aas
sub
mov
sbb
or
jg
jo
and
inc
mov
scas
cs
jp
loop
add
pmulhuw
rcrb
xor
pop
mov
push
leave
loopne
loope
cmpsl
es
mov
out
pop
push
sbb
aaa
nop
rcll
aas
sub
inc
popf
iret
push
ret
mov
xchg
fdivrs
daa
pop
stos
ret
ljmp
pusha
xlat
aad
mov
add
pop
inc
std
mov
push
dec
pop
out
jns
or
pushf
xlat
mov
jae
out
jo
lea
imul
loopne
add
pop
mov
and
xchg
call
and
cmpb
xchg
push
lcall
inc
call
shlb
mov
jae
fidivl
pop
adc
fnsave
adc
out
stos
jae
xchg
test
add
popa
mov
jp
decb
mov
fndisi(8087
shrl
pop
mov
out
jb
adc
mov
add
and
addr16
cmp
repnz
aaa
mov
leave
mov
outsb
enter
lcall
add
xor
std
mov
and
pop
mov
stos
jle
es
push
or
lret
in
out
pop
dec
add
push
jg
add
out
leave
jmp
sbb
adc
mov
adc
pop
jg
adc
jo
sbb
xor
mov
cmc
les
inc
mov
adc
flds
inc
xor
call
xchg
rorl
das
movl
mov
push
mul
or
sub
sbb
sbb
or
dec
clc
push
or
dec
test
scas
and
lods
fs
mov
dec
les
sbb
pop
dec
pop
sub
fwait
push
cs
mov
jmp
jns
inc
xor
jno
mov
fiadds
push
push
sub
sbb
in
insb
testb
insb
lods
sbb
pop
xchg
cltd
loope
push
loope
and
fstps
shll
dec
icebp
lcall
enter
jle
inc
imul
and
loopne
jmp
sbb
fdecstp
sahf
mov
sub
ss
and
arpl
mov
mov
outsl
or
add
adc
add
push
lahf
divb
cs
inc
insb
jae
aam
pop
jae
and
ret
xchg
xor
xchg
cmp
fiaddl
cmp
repnz
lahf
sbb
adc
sub
or
iret
fs
jo
mov
xor
jg
or
dec
dec
sbb
fisubrl
inc
mov
addr16
fs
jl
das
push
xchg
jp
stc
sbb
add
push
sbb
pop
into
adc
ss
in
fs
sar
mov
cmp
dec
rcr
int3
mov
ret
icebp
cwtl
inc
add
in
dec
mov
lods
mov
clc
mov
mov
xchg
and
jae
mov
cmpsb
jge
xchg
std
xchg
movsl
sbb
les
sub
mov
xchg
out
mov
xlat
jnp
out
pop
int3
cmpsb
lret
test
iret
sti
add
out
loopne
lret
aaa
stos
or
dec
dec
fucomi
adcl
adc
add
mov
mov
cmp
pop
or
xor
in
mov
test
mov
cmp
lods
dec
mov
mov
mov
jp
push
test
mov
inc
lahf
je
pop
fwait
test
pop
push
addb
mov
jmp
pop
popf
mov
mov
aaa
adc
hlt
fwait
add
pop
pop
inc
jmp
jecxz
inc
aas
xorl
xchg
mov
jge
fs
mov
sub
js
jae
xchg
pop
inc
jl
jnp
mov
insl
pusha
mov
pop
outsl
inc
push
or
lcall
lret
adc
mov
jecxz
inc
xchg
pop
xchg
rcrb
imul
shr
adc
or
mov
jmp
jb
push
es
cwtl
push
inc
xchg
lcall
lret
push
jecxz
out
mov
mov
dec
sbb
xor
inc
mov
jmp
push
or
inc
mov
xlat
push
into
in
jmp
dec
mov
ret
sub
aaa
dec
into
adc
das
arpl
push
sbb
push
mov
mov
test
pop
sub
or
cli
loope
cli
out
jp
movsb
jp
mov
in
mov
aaa
orb
insb
cmp
das
repnz
popa
mov
sbb
roll
movl
push
mov
test
jb
xchg
add
inc
and
test
scas
call
pop
mov
dec
sbbb
xor
lea
int3
add
sub
push
lods
adc
xchg
xchg
test
or
fimuls
mov
adc
aad
popf
out
mov
mov
std
and
cwtl
in
mov
stc
repnz
pop
xchg
mov
mov
push
sub
cwtl
out
pop
cmpsl
pop
pop
and
test
jae
fcmovne
xchg
jne
jg
leave
inc
andl
lret
call
fstps
ja
adc
cmp
ja
rolb
sahf
mov
or
ret
mov
inc
inc
mov
pop
add
pop
mov
cwtd
stos
stos
sub
push
test
stos
mov
jns
outsb
arpl
add
sub
fsts
je
jmp
outsl
jb
arpl
fmul
pop
idivb
pop
and
lret
push
xor
test
les
push
clc
add
lock
lret
scas
jmp
jnp
mov
xlat
xchg
fsubrl
mov
cs
mov
push
pop
ss
cli
lea
fs
lods
and
add
insl
es
or
or
jae
idivb
pop
xchg
push
hlt
repnz
mov
pop
cmp
test
inc
test
adc
push
push
es
mov
sub
popf
mov
out
xchg
repz
test
sahf
mov
add
lods
idiv
addr16
imul
or
int3
out
add
sbb
mov
jb
fwait
popf
sbb
push
subl
inc
sahf
jecxz
into
push
cmp
lock
or
movsb
mov
sbb
sbb
cmc
inc
push
sbb
jns
mov
xor
jle
enter
xlat
loopne
mov
into
push
arpl
repnz
gs
popa
andb
push
jo
inc
inc
and
mov
cmp
and
jle
sti
js
and
jl
sub
vpavgb
idivb
in
xchg
pop
mov
cmp
lret
push
lret
pop
cltd
and
dec
mov
stos
cli
mov
ret
es
and
adc
lahf
push
xchg
aad
xor
xchg
aaa
mov
leave
pop
js
xor
outsl
pop
imul
out
lods
loop
push
in
xor
push
js
and
shlb
fwait
sbb
sbb
mov
ja
cmc
push
jmp
repz
pop
or
daa
push
out
cmpsb
insb
mov
add
mov
es
mov
mov
dec
adc
jg
adc
xor
cmp
dec
ljmp
inc
or
mov
mov
leave
cmpb
add
fwait
sub
or
fs
push
cmp
cmp
cmp
dec
imulb
test
out
ds
stos
daa
and
jp
divb
and
repnz
or
xchg
inc
add
xchg
in
inc
fimuls
jl
sub
mov
outsl
nop
movsl
scas
lret
jl
or
mov
xchg
clc
stos
ds
mov
mov
mov
xor
cmp
mov
in
insl
inc
mov
pmullw
cmp
jbe
ret
test
jle
jp
mov
push
mov
sbb
imul
fcomp
pop
mov
sub
xchg
mov
cmp
push
mov
testb
loop
pop
std
mov
inc
jae
cwtl
repnz
jbe,pn
popf
adc
jmp
mov
andb
rcrl
cmpsb
pop
adc
mov
xchg
popf
xchg
or
pop
ds
fmuls
mov
lods
xchg
adc
leave
inc
xor
jmp
pusha
lods
xchg
pop
popa
clc
mov
sbb
imul
dec
sbb
dec
faddl
repz
jmp
pop
mov
js
insb
call
pop
mov
out
ja
ror
scas
outsb
stc
stos
mov
sti
push
in
test
rcrb
call
push
cli
sbb
add
push
mov
test
lret
mov
mov
lock
fnsave
andb
fs
fdivl
arpl
xor
lods
jge
into
mov
adc
pushf
sub
mov
out
add
xor
test
inc
fcoms
rolb
and
arpl
hlt
addr16
adc
cmc
pop
sbb
mov
inc
in
pop
jno
jmp
cmp
fcmovb
call
filds
outsb
lcall
xor
adc
sbb
ret
imull
dec
sub
aaa
sbb
jno
xchg
and
and
xor
jge
xor
dec
xor
int3
or
adc
ja
mov
mov
sbb
inc
subl
jmp
and
fld
pushl
loopne
or
dec
test
testl
pushf
mov
andl
and
fcmovbe
je
pop
popf
jae
xchg
in
loopne
dec
in
mov
jo
or
shrl
mov
xor
loopne
mov
movsb
aad
insl
and
dec
sbb
repnz
por
dec
mov
sti
ret
adc
sti
mov
lcall
cmp
in
cmp
add
dec
sub
or
or
fmuls
popa
lea
and
loopne
dec
inc
outsb
arpl
sbb
ljmp
lock
aas
sbb
test
cwtl
lods
sbb
popf
dec
jle
arpl
inc
cmp
mov
jns
outsb
push
call
mov
add
and
dec
inc
lea
push
adc
fnstenv
std
rcll
push
sti
rolb
xor
iret
xchg
lds
cli
ret
mov
test
cs
fisubrl
mov
dec
dec
in
push
lret
in
test
rorl
test
fadds
lahf
cmc
outsb
xchg
and
icebp
cmp
cld
lods
lea
pop
cmp
ret
mov
pop
push
xor
sbb
and
jne
xor
mov
push
dec
outsb
mov
insb
outsb
stos
pop
inc
and
or
sbb
jae
mov
loopne
lcall
fldcw
pop
leave
sub
repz
push
mov
mov
ds
dec
imul
dec
jns
ja
xor
fstl
pop
sbb
add
xchg
rcll
xor
xchg
addr16
mov
push
ficoms
xor
fisubrl
xchg
xor
leave
cmp
data16
frstor
cmp
fistps
and
fwait
imul
ja
inc
stos
int
mov
sbb
imull
pushf
mov
sti
jae
mov
out
cmpsb
jmp
cmp
adc
jnp
cmp
adc
js
clc
mov
inc
lret
and
dec
rclb
mov
test
enter
pop
ljmp
mov
lret
pop
mov
jg
add
insb
adc
lods
xchg
mov
xor
mov
pop
cs
imul
add
daa
or
mov
xchg
loop
jnp
cmp
dec
mov
ret
add
es
pop
adc
stos
mov
dec
rcl
mov
shlb
push
aad
and
lods
and
sbb
sub
stc
out
int
or
xchg
notl
cmp
inc
mov
subl
jge
hlt
sub
push
or
scas
imul
and
mov
cmpsb
test
cmpsl
enter
sti
fcompl
dec
fsts
out
adc
xchg
in
lea
insl
mov
shlb
stc
insb
and
psubusw
push
popf
mov
dec
push
sbb
sub
rcr
adc
lret
aam
adc
pop
push
push
sub
pop
jecxz
pushf
into
ja
ret
xor
in
cmp
daa
in
ret
pop
mov
adc
mov
cmp
cmp
add
inc
inc
mov
sbb
push
pop
inc
cmpsb
fcompl
pop
dec
scas
sbb
inc
in
mov
aaa
push
pop
ret
dec
dec
loope
into
popf
and
and
divl
movsb
fistpll
in
in
cmpsb
int
fs
rcr
inc
test
mov
xchg
gs
inc
sub
inc
pop
test
jae
in
fs
or
repz
fs
lds
inc
in
lds
test
pcmpeqw
mov
mov
jnp
bound
and
rcrb
leave
mov
hlt
movsl
sbb
jb
jbe
dec
imull
mov
inc
fcmovne
sbbl
xchg
fildl
cmp
cmp
push
je
mov
dec
rcll
out
cld
push
fcos
mov
xchg
leave
stos
data16
loop
in
cld
sbb
push
ds
sti
ss
or
and
test
mov
mov
pushf
xor
mov
sub
push
mov
fwait
push
xchg
js
adc
or
mov
out
sbb
and
or
sbb
test
loope
jg
sbb
xchg
iret
fwait
mov
jge
xchg
cld
aam
jmp
js
inc
sbb
add
push
push
mov
mov
pop
pop
repnz
sbb
icebp
mov
and
mov
loopne
sbb
cmp
push
lods
dec
scas
lea
std
dec
scas
insl
test
dec
pop
out
jnp
jmp
cmc
das
int
fisttpll
les
add
out
xchg
xchg
pop
into
es
aad
ja
dec
cs
mov
hlt
jbe
push
movsb
xor
jbe
sarl
jmp
sub
ret
outsb
popf
inc
cltd
jo
mov
cmp
push
fildll
lea
inc
lds
negl
pusha
mov
clc
and
sbb
pop
push
mov
add
sub
scas
ret
xor
int3
ljmp
push
dec
dec
les
decb
js
aaa
mov
add
loop
jae
pop
shrl
repnz
int
mov
daa
pop
imul
jge
js
dec
int3
scas
and
jp
hlt
nop
jne
ljmp
hlt
mov
pop
mov
test
xchg
mov
inc
int
sbb
or
inc
shl
xchg
dec
lret
popf
cwtl
xchg
mov
ds
mov
stos
lret
mov
repz
and
jmp
call
stos
test
mov
cmp
shl
push
inc
js
loope
lods
ss
lret
fistpll
lahf
inc
hlt
xor
inc
cltd
aad
pushf
loopne
jmp
pop
nop
push
xchg
roll
sbb
ret
xchg
xchg
sub
inc
sub
iret
shll
nop
push
in
mov
pop
jb
xor
ret
jg
dec
pop
gs
shlb
and
fcomp
cld
mov
shrb
mov
cmp
dec
or
lods
add
mov
test
jle
cmp
sbb
movsb
insb
in
cmp
adc
aaa
imul
lock
mov
jl
mov
aad
mov
je
je
aas
lock
cmpsb
shlb
push
xchg
gs
scas
shll
lods
sarl
mov
lret
xor
add
mov
push
test
dec
sub
mov
nop
ja
insb
dec
test
cmp
jg
incb
xchg
bound
loopne
adc
mov
js
pusha
mov
sub
xor
loop
push
lods
mov
loope
xchg
adc
inc
cmp
dec
mov
inc
out
xor
call
into
loopne
push
mov
insb
aam
addr16
inc
jae,pn
cmpsb
mov
push
pop
pop
out
hlt
jne
jecxz
imul
mov
mov
jnp
push
sub
and
xchg
std
mov
xor
or
push
lods
add
add
imulb
bnd
inc
pop
loop
out
stos
fs
adc
inc
ljmp
mov
and
dec
pop
lcall
pop
jb
sub
xchg
scas
leave
popf
cltd
inc
jae
not
push
es
mov
lahf
fmul
fwait
cwtl
or
xorl
fwait
icebp
pop
enter
decl
adc
mov
sbb
sbb
xor
jno
out
insb
out
push
adc
cmp
push
jge
pop
rcr
iret
movsl
mov
cli
pop
push
outsl
mov
and
pusha
roll
aam
test
in
mov
xor
push
into
outsl
ss
xchg
adc
adc
mov
jg
mov
jae
jg
jmp
mov
dec
inc
mov
cli
jge
cs
enter
loope
inc
jge
or
jl
loopne
adc
stos
insb
or
xor
sbb
sahf
xchg
xchg
or
push
inc
cltd
mov
ret
test
pop
xlat
jecxz
cld
jno
push
stc
int3
mov
xchg
jge
lods
jl
les
pop
add
xchg
leave
je
andb
xchg
lock
cltd
stos
cmpsb
xchg
leave
outsl
repz
into
aam
int3
aas
xor
inc
xor
pop
rcl
cs
push
pop
sbb
mov
movsl
ja
xor
lahf
or
outsb
mov
cmp
cmp
dec
test
pop
test
arpl
inc
push
or
mov
cmpsb
int
mov
xor
inc
add
dec
data16
icebp
pop
loope
popa
sub
into
sbb
fnsave
mov
jmp
dec
xlat
inc
jnp
cmp
inc
in
dec
add
leave
dec
lods
loop
in
ret
push
dec
das
imul
cmc
das
daa
sbb
inc
jbe
cld
push
mov
les
sti
jne
sub
jle
pop
xor
cmc
sub
sub
inc
aad
iret
xlat
pop
jo
fmuls
out
sbb
mov
and
jecxz
inc
pop
push
pop
movsb
xor
sbb
repz
mov
out
gs
lret
dec
pop
loope
sub
leave
decb
inc
and
sub
xor
xor
lret
sbb
test
loopne
test
inc
xchg
push
mov
fmull
or
xor
mov
movsb
pop
xchg
adc
scas
inc
dec
jbe
mov
add
sahf
xor
push
cmp
xchg
sahf
push
ljmp
and
pop
push
jmp
lods
adc
mov
adc
out
incb
pop
lahf
mov
jl
lds
mov
ss
hlt
xorl
arpl
cmp
stos
lock
inc
inc
adc
xor
movsb
jge
nop
movsb
clc
jmp
lahf
in
mov
cld
xorb
aad
les
adc
cs
in
mov
inc
xor
test
cmp
adc
mov
push
dec
add
gs
cmp
and
ljmp
in
out
stos
jns
lret
cli
inc
cld
outsl
testl
or
cmpsl
xor
add
push
enter
leave
sub
das
mov
in
push
push
sub
jno
hlt
insl
cltd
aam
xlat
xor
test
je
adc
mov
or
cwtl
xchg
cmpsb
lods
jne
popa
lahf
imul
repz
sahf
faddp
xchg
fstpl
lret
xchg
fdivp
mov
mov
adc
int3
fcoms
mov
mov
and
rorb
pop
push
sbb
cmpsb
push
lret
mov
fmuls
outsb
sbb
loopne
xchg
movsb
or
pop
movsb
dec
fadd
adc
xchg
push
mov
inc
pusha
imul
jns
test
jae
in
jg
gs
inc
sbb
into
dec
adc
add
pop
sarb
mov
cmp
adc
mov
and
jp
xchg
dec
xor
xchg
push
push
mov
outsl
mov
mov
jb
fistl
cs
cmc
fwait
lret
dec
inc
cmc
xlat
int3
sbb
outsl
sahf
jg
stos
inc
loop
loope
push
jo
cmp
jl
pop
ret
sbb
jne
mov
push
inc
rcr
jge
movsl
pop
inc
adc
shr
add
pop
mov
xchg
mov
mov
shrb
dec
adc
xchg
fidivs
jle
ja
test
cld
test
dec
int
dec
icebp
sub
push
out
test
add
hlt
loop
icebp
pop
fs
adc
inc
int3
xlat
stos
jns
out
stos
inc
mov
stos
pop
arpl
scas
mov
push
sbb
mov
jg
pop
push
loop
and
inc
or
cs
mov
fs
cwtl
arpl
mov
jae
inc
inc
push
pop
les
push
add
les
imul
inc
int
sti
insl
rcrl
rcr
pop
sarl
repnz
daa
insl
mov
push
cwtl
in
push
test
jmp
test
mov
das
and
push
testl
gs
mov
dec
dec
inc
jle
sub
shrl
mov
jns
push
jnp
imul
jns
mov
inc
sub
sbb
pusha
push
int3
hlt
adc
outsb
outsl
aas
adc
data16
mov
or
push
jnp
mov
je
mov
push
and
loop
arpl
loop
jp
xlat
aaa
jmp
xchg
or
adc
lock
and
mov
or
dec
mov
enter
xor
add
gs
cmpsb
jb
pop
pop
hlt
mov
adc
inc
inc
imull
cmp
nop
mov
imul
add
pop
ficoml
dec
mov
scas
jne
jle
push
repz
popf
loopne
leave
adc
jmp
dec
int
push
add
ret
or
movsl
in
test
dec
and
pop
pushf
test
xlat
and
add
ds
test
lcall
xchg
fwait
mov
mov
sub
lock
cs
cmp
icebp
mov
rclb
xor
sahf
rcll
or
loopne
repz
or
data16
in
sbb
notl
addr16
into
inc
scas
dec
mov
pop
jo
jg
loopne
lods
loopne
call
cmp
pop
mov
or
scas
pop
outsl
imull
popf
clc
mov
pop
xor
sub
arpl
lcall
push
arpl
insb
inc
or
adc
adc
test
and
fistpll
je
mov
incl
or
mov
add
inc
push
outsl
sti
cmp
and
ret
sti
and
insw
cmp
aam
push
repnz
popa
lods
addr16
mov
jp
lret
movsl
mov
cmp
sbb
dec
lds
lea
dec
stc
sub
je
fsubl
mov
dec
lods
sub
int
push
push
pop
cwtl
mov
jmp
stos
cli
mov
or
mov
push
div
mov
lret
mov
and
mov
add
pop
jl
repnz
es
mov
adc
or
xchg
out
roll
in
xchg
cmp
shlb
int
out
imul
pop
fisttps
mov
lods
xchg
adc
inc
inc
mov
mov
icebp
jl
in
repnz
das
xor
popa
xchg
ret
dec
or
call
jg
fcmovne
mov
scas
lahf
inc
pusha
leave
testb
xor
aam
push
loop
cwtl
jo
andb
adc
lock
mov
add
dec
push
adc
js
push
lret
enter
pop
xchg
das
ds
das
stos
push
cli
jb
ja
outsl
mov
into
sbb
stc
loop
cmp
daa
ret
jb
xchg
lds
pop
dec
push
mov
and
cmp
je
cltd
hlt
aad
push
jmp
iret
idivl
mov
adc
out
fsubs
mov
shrb
dec
mov
ds
pop
mov
lock
dec
mov
jno
sbb
lret
push
cli
mov
cmp
outsl
xchg
mov
fwait
push
xor
sub
inc
dec
lret
xor
enter
sbb
mov
cmp
imul
push
push
in
out
ds
jb
cmp
aad
pop
xor
or
jle
sti
sbb
or
and
ret
in
adc
ret
call
lea
pop
stos
pop
es
xor
in
inc
xchg
lahf
adc
hlt
xchg
lds
cltd
and
cmp
outsb
push
xor
ror
or
mov
cmp
pop
pop
xchg
pop
ja
jl
mov
mov
xchg
or
repz
insl
int3
sbb
pop
imul
ja
out
mov
mov
aam
sub
idivb
sub
ja
je
in
mov
and
pop
and
cmp
test
fists
xorb
insw
pop
xor
pop
rolb
jbe
roll
jns
movsl
xchg
and
or
mov
int3
into
out
in
pop
cmpsl
dec
das
xor
cwtl
testb
addr16
inc
sbb
xor
add
faddl
sbb
jbe
fsubl
jl
movsb
push
and
pop
push
mov
cs
add
and
inc
enter
pop
xlat
cmp
fistps
daa
scas
in
dec
roll
mov
mov
jmp
push
sti
ret
lcall
mov
clc
mov
pop
jnp
popa
xlat
jecxz
imul
outsb
adcb
cld
or
cwtl
dec
fmuls
mov
jb
push
in
filds
and
jle
mov
je
adc
mov
jl
pop
add
lock
scas
sbbb
sub
rclb
jae
push
flds
shlb
add
and
data16
xchg
jecxz
mov
in
sub
insl
aad
rcll
mov
add
jbe
and
xor
sbb
add
imull
mov
adc
push
mov
mov
add
icebp
sub
lea
movsb
push
jo
jmp
mov
jo
or
arpl
pop
pop
add
test
jae
jle
pop
sti
add
mov
xor
and
jo,pn
and
fiaddl
lods
add
cmovno
jae
mov
ja
js
or
cs
jge
sbb
cwtl
fcoml
lock
pop
fbstp
in
pop
cld
std
xchg
popa
incl
fimull
mov
int
add
add
cmp
mov
pop
mov
xchg
jns
fiaddl
call
adc
daa
inc
sub
xor
dec
or
jle
ja
ljmp
insb
stos
inc
mov
dec
jp
xchg
adc
lahf
mov
adc
dec
push
fdivrl
popa
jge
out
add
loop
roll
cmp
cmc
icebp
xchg
sub
sahf
cmp
cmp
enter
xchg
dec
aad
dec
int
jae
fdivl
mov
lea
jp
push
je
lret
xchg
pop
js
adcl
ret
ljmp
rcrl
or
mov
or
or
adc
fisttpll
test
xlat
icebp
dec
xchg
mov
push
jae
cmp
jae
xor
lret
icebp
mov
enter
add
or
fists
add
fcomps
movsb
js
clc
xchg
arpl
push
xchg
xchg
test
mov
mov
push
add
mov
add
mov
scas
push
pop
cwtl
ja
lret
xor
repnz
xchg
in
dec
int
push
cmp
dec
pushf
rcl
inc
fwait
jmp
movsb
cwtl
fdivrl
adc
mov
ss
pop
xor
pop
mov
cltd
cmpsb
popa
push
mov
pop
leave
sbb
xchg
dec
pop
sub
xchg
fstl
hlt
sbb
inc
inc
pop
mov
in
scas
pop
call
or
jb
mov
mov
fisubrl
sub
pop
sbb
mov
mov
movsl
insl
mov
or
sbb
xchg
sahf
or
addr16
add
rclb
out
clc
lock
inc
mov
test
cmp
sbb
sub
xchg
dec
icebp
sti
sti
jl
sub
xchg
jg
pusha
pop
sbb
jns
push
or
sbb
popa
cmp
in
or
out
call
in
shlb
in
xchg
adc
test
sar
fsubr
addr16
xchg
mov
dec
popf
cmp
popw
dec
aas
das
shll
in
push
jo
jge
mov
stos
adc
push
test
rcr
idivl
inc
xchg
dec
and
ret
jns
cmp
int
fnstcw
sub
xor
mov
jmp
int
inc
lods
mov
or
mov
sbbb
xchg
std
jl
movsl
fidivs
movsl
stc
pop
push
shll
sahf
pop
jg
pop
push
xor
and
pop
scas
mov
xchg
pop
cmp
fidivs
shll
addb
xchg
jbe
dec
addl
cmp
mov
ja
push
add
nop
push
cmpsb
sbb
aad
xchg
test
and
and
popa
xor
jae
xchg
cmp
or
mov
decb
pop
pushf
hlt
test
outsb
mov
xlat
inc
mov
cwtl
mov
jl
shrb
enter
xorb
mov
and
sti
out
das
scas
push
enter
xchg
mov
add
add
mov
loop
sub
shll
out
rolb
xchg
sub
out
movb
sub
push
mov
imul
testb
cmp
adc
jbe
or
jmp
inc
pop
rorb
pop
jne
iret
add
arpl
xor
push
imul
out
loope
adc
mov
mov
xlat
jae
pop
ficompl
sti
pop
pusha
insb
xchg
and
dec
cmpsl
dec
pop
push
mov
xchg
push
test
daa
fs
adc
jnp
outsl
test
popf
xor
cli
mov
jle
jno
xorb
jecxz
negb
push
jge
lock
out
xchg
cmc
lods
jbe
mov
popf
mov
xchg
mov
in
mov
dec
pop
mov
push
pop
mov
imul
stos
pop
push
leave
mov
aam
adc
mov
xor
std
insl
daa
out
into
xor
sub
data16
aad
jbe
cmpsb
or
lds
aaa
out
mov
sti
xchg
xchg
fldcw
ds
test
rcrb
jo
int3
cmp
mov
mov
xchg
jns
mov
jmp
sbb
test
lock
aam
out
pop
call
test
inc
or
push
push
dec
mov
mov
push
rclb
in
out
ret
fwait
outsb
mov
add
cli
pop
xchg
test
or
sub
insl
mov
icebp
in
lock
jge
mov
bound
gs
std
divb
cmp
sarb
inc
ds
push
js
inc
pop
dec
subb
adc
inc
test
jle
pop
lods
mov
lcall
in
xor
jns
mov
daa
sti
or
js
fwait
xchg
cs
leave
xchg
adc
xor
xor
orl
dec
lret
sub
xor
andnps
mov
movsl
adc
mov
ljmp
xor
repz
ret
iret
jecxz
aaa
lahf
mov
push
scas
xchg
mov
mov
inc
shrl
adc
scas
lret
cmc
sub
cmp
jle
add
or
lods
xor
jb
rclb
stos
in
fs
outsl
sub
out
test
dec
mov
jl
test
movsb
aad
aaa
dec
repz
mov
xchg
push
jnp
insb
inc
jne
mov
std
mov
mov
jmp
mov
lret
push
lods
and
mov
cmc
inc
mov
mov
dec
lods
arpl
add
xchg
xor
pop
inc
lock
push
jmp
sbb
mov
jl
sub
pop
mov
aas
lret
insb
or
inc
adc
shll
jbe
andb
push
push
sub
jbe
fcmovnb
cwtl
dec
push
aam
rclb
fsubl
push
xor
lret
mov
xchg
jmp
or
mov
imul
clc
fdivrs
sti
mov
xor
push
clc
mov
int3
out
andl
mov
adc
dec
cs
imul
popa
inc
out
je
inc
dec
inc
and
loopne
sahf
add
out
mov
mov
fsts
and
sbb
push
pop
movsl
lods
xor
inc
pop
lret
or
add
inc
rcrb
imul
adc
jmp
das
pusha
aad
sub
fadd
int3
xor
and
addb
xor
cmp
mov
insb
sub
cmp
push
std
push
lods
out
cwtl
mov
and
mov
sbb
lcall
or
mov
or
xchg
cwtl
xor
jne
stc
arpl
pcmpgtd
pop
pushf
inc
xchg
push
inc
sub
lcall
and
out
mov
js
les
cmp
push
pop
mov
fcoml
lahf
rorb
lret
popa
or
xchg
mov
rcll
popf
hlt
scas
mov
mov
sbb
imul
arpl
addr16
outsb
stos
inc
notl
movsb
inc
push
adc
add
ds
in
jo
cmp
xor
lahf
sub
fnop
jno
pop
je
lret
outsl
aam
jmp
xchg
xchg
filds
insl
sub
cmpl
jbe
jnp
mov
call
loopne
ret
nop
fcmove
sbb
inc
test
les
fwait
cmp
pop
dec
and
aam
sbb
call
aas
add
stos
pop
sub
xchg
push
push
pushf
sti
ret
movsl
add
sbb
shrb
pop
out
or
daa
data16
es
jne
insl
jno
movsb
in
ret
mov
mov
xchg
flds
icebp
aam
push
push
movsl
push
inc
daa
sub
sbb
dec
popa
push
rorb
add
jle
js
scas
pop
jmp
js
xchg
shlb
add
cli
mov
shll
aaa
and
mov
cmp
ret
iret
lahf
or
xchg
js
out
mov
out
ss
cmp
dec
push
jae
jns
push
cmpsb
xor
inc
jne
cs
xor
xor
xchg
sub
ds
jle
add
cs
dec
cmc
mov
out
jno
mov
xlat
mov
push
fnstenv
lret
cltd
movsl
mov
xor
adc
mov
jecxz
xchg
dec
mov
push
inc
sbb
sbb
xor
aas
loopne
imul
push
sbb
pop
adc
or
and
mov
shll
mov
data16
out
mov
pop
jl
pop
or
pop
push
es
nop
js
mov
inc
sbb
cmpsb
pop
test
jge
push
hlt
xchg
mov
mov
mov
test
sti
mov
and
ds
inc
dec
stos
push
stc
mov
cmp
pop
jbe
mov
sbb
mov
sub
fwait
xor
and
imul
jne
test
stos
cmpsb
xchg
xchg
xchg
out
and
sub
lds
les
cmp
jl
fs
ss
aad
icebp
jle
leave
or
mov
in
fisttpll
and
cld
lret
push
jns
fstpl
xchg
or
xchg
in
leave
cli
jnp
cmp
sub
inc
ret
test
mov
dec
sbb
out
fs
lods
inc
sub
xchg
fwait
pop
push
wrmsr
xor
adc
and
jmp
fimuls
xor
jbe
out
jp
mov
lds
cmpsb
lds
dec
dec
push
ficoms
not
jle
mov
or
jecxz
xor
into
lds
scas
mov
daa
xchg
pop
out
dec
test
popf
negl
xchg
jmp
inc
lods
nop
clc
ljmp
push
fadds
aas
jg
jne
push
ja
dec
in
stc
adc
insl
cmp
daa
stos
out
jecxz
int
roll
adc
adcb
pusha
xchg
mov
into
ljmp
into
popa
mov
or
rcr
push
cmpl
jno
sti
clc
cmp
and
mov
aad
mov
pop
mov
stc
shl
mov
adc
sbb
lods
or
xchg
scas
mov
sbb
pop
stc
mov
mov
fstpl
out
fnsave
cmp
add
fwait
ja
xchg
aas
sub
jg
out
inc
cmp
pop
xchg
ss
mov
pop
idivl
pushf
addr16
ror
sahf
push
jae
das
inc
mov
dec
mov
mov
ljmp
pop
flds
inc
pusha
sbb
xchg
insb
push
test
pushf
inc
sbb
pop
ficoml
and
dec
lcall
push
pop
inc
bound
pop
xchg
shlb
das
mov
cwtl
push
add
push
out
lods
fists
xchg
fs
push
xchg
mov
call
daa
jmp
addr16
xor
out
fsts
and
stos
push
dec
call
pop
jns
movsl
imul
mov
jge
push
push
shll
xor
loope,pn
jmp
mov
loop
sub
fstpl
daa
push
push
jmp
sbb
pop
push
repz
sbb
in
xchg
daa
mov
ficoms
and
out
in
or
sub
mov
aam
mov
hlt
sti
xchg
cmpb
and
movb
and
fmull
sub
rolb
pop
push
shl
mov
jnp
cmp
outsb
xchg
es
jb
jno
dec
push
lahf
push
sub
push
or
dec
in
jmp
je
cmpsb
lcall
mov
movsb
pop
sub
inc
insb
jle
div
mov
leave
inc
fnstcw
loopne
cld
dec
add
out
in
incb
jb
mov
lcall
enter
pop
xchg
add
jne
sahf
and
mov
cmp
sahf
inc
std
xor
xchg
gs
adc
fidivl
mov
std
push
or
lahf
mov
xor
push
mov
lret
aam
jl
ljmp
xor
stc
jl
das
sbb
jg
pop
sbb
mov
xchg
or
call
hlt
mov
movsl
inc
stos
pop
das
jnp
ja
ss
dec
in
test
dec
fistps
sar
lcall
or
loop
inc
sbb
gs
push
cmpsb
hlt
push
or
stos
les
dec
sub
pop
mov
cmp
mov
xchg
inc
repz
pop
shlb
and
add
xchg
lcall
lret
imul
movsl
sahf
and
fsub
adc
rcrl
sbb
adc
dec
jmp
stc
jle
lcall
add
or
scas
push
pop
xlat
out
clc
jae
jp
loop
cltd
cmp
ljmp
sub
xor
pop
rolb
push
mov
out
test
xor
jmp
xor
jp
rcrb
dec
adc
sti
dec
pop
out
adc
pop
ds
sub
lods
call
xchg
mov
jg
adc
ja
pop
dec
xor
iret
push
or
gs
dec
mov
inc
clc
add
pop
xor
mov
mov
insl
push
cmp
call
cmc
in
or
mov
sbb
cmpsl
test
xor
mov
push
dec
add
ret
pop
pop
pop
jbe
aam
mov
jae
cmp
frstor
shll
aas
mov
push
pop
outsb
sbb
mov
fists
aam
push
mov
test
xchg
int3
mov
lahf
into
int3
scas
je
aad
jmp
dec
push
inc
push
int
outsl
xlat
xchg
lods
cltd
xchg
mov
mov
jb
sub
add
mov
mov
nop
into
rcll
xor
dec
sub
aas
xor
repz
sub
ss
fstpt
enter
sbb
je
mov
mov
adc
pop
mov
inc
aam
scas
xor
pop
gs
enter
fs
lret
popa
pusha
cli
imul
ss
shlb
loope
fnstenv
inc
or
data16
mov
sbb
jl
sub
push
aam
mov
or
fs
or
lret
test
xchg
inc
cmc
dec
dec
mov
hlt
ja
ljmp
insl
js
push
push
imul
insl
and
popf
adc
clc
pop
xchg
je
fstps
inc
outsl
idivw
popa
add
xchg
xchg
jo
aad
mov
test
inc
sbb
inc
mov
dec
ljmp
test
outsb
sbb
pop
stc
out
lea
inc
leave
sub
ja
jmp
outsl
add
ret
jbe
mov
mov
incb
pminsw
aam
xchg
aas
out
sets
cltd
or
adc
dec
mov
rcr
and
pop
push
sub
aas
sub
addr16
rcrb
cmpsb
dec
push
sbb
or
mov
rolb
mov
test
sub
pushf
mov
sub
mov
mov
test
sbb
shl
and
sub
lods
das
adc
into
and
out
mov
mov
dec
ds
xor
les
jns
test
pop
mov
lods
lds
mov
sbb
xchg
xor
xchg
sbb
sbb
into
in
es
iret
cld
cld
fisubrl
lret
sahf
pop
ja
mov
in
add
push
popf
shlb
fwait
aad
adc
jne
addl
int
push
mov
divl
pushf
nop
xchg
loop
daa
or
sub
cltd
jmp
sub
or
in
shrb
sbb
xchg
js
leave
inc
fwait
mov
inc
aaa
push
jnp
in
add
xchg
loopne
lcall
inc
adc
faddl
shll
arpl
mov
pop
cmp
sbbl
clc
gs
mov
pop
orb
je
mov
pop
cltd
push
or
inc
mov
add
es
adc
stos
and
xchg
loopne
loop
inc
sub
push
xchg
test
shlb
jecxz
mov
cmp
cmp
jnp
les
pop
xor
js
mov
adc
lret
rorl
mov
cltd
inc
cmpl
pop
inc
shrl
fildl
sub
movsl
xor
pop
cmc
xchg
or
testl
inc
cwtl
aad
incl
mov
repz
pop
out
and
push
jecxz
outsl
jl
sti
loopne
sbb
outsb
in
xchg
sbb
jmp
lods
or
sub
jecxz
lock
sti
out
in
mov
popl
mov
mov
aam
aam
out
out
hlt
loopne
inc
fcoml
xchg
adc
push
and
movsb
std
subb
fnstsw
inc
in
sub
in
inc
divl
imul
and
mov
adc
mov
out
add
push
mov
or
fucomp
lock
or
scas
in
insl
xchg
mov
in
scas
mov
push
pop
or
inc
mov
jp
dec
cltd
inc
mov
in
dec
and
jmp
adc
inc
xlat
adc
insb
fisttpl
push
movsb
arpl
lea
push
cld
test
in
mov
fsubs
fs
push
or
mov
aad
xor
pushfw
add
and
mov
push
xlat
cmc
lret
pop
aad
dec
out
cmpsb
mov
or
lea
add
inc
loopne
out
lock
sub
cmp
jmp
xchg
enter
fbstp
rclb
aas
stos
xchg
fcmovne
add
in
scas
mov
sub
loopne
jmp
dec
lds
in
aam
into
les
cmp
mov
adc
and
xchg
cltd
pop
xor
ss
push
test
lret
cmp
adc
sarb
out
adc
lahf
xorb
jne
push
mov
cmp
sbb
add
mov
ja
mov
popa
push
push
addr16
sbb
cmp
lcall
mov
clc
dec
sbb
jecxz
mov
sbb
aam
sbb
mov
movsl
sub
pusha
jno
sub
xchg
xchg
pop
rcrl
ja
push
pop
jno
push
fwait
shrl
xchg
sub
jno
xchg
scas
lcall
adc
stos
rcl
dec
dec
je
cmp
mov
inc
add
push
and
in
adc
lcall
dec
lret
imul
das
fnstcw
mov
push
jbe
xor
inc
imul
vminpd
pop
fdivrp
lock
rorb
popa
dec
adc
lret
lea
imulb
mov
stos
push
mov
sbb
lock
adc
mov
pop
push
clc
cs
mov
mov
lea
dec
in
sbb
ret
adc
iret
sbb
fistps
inc
inc
add
or
inc
decb
daa
repnz
push
pop
test
jmp
inc
mov
cltd
adc
lahf
outsb
aaa
xor
test
cmp
or
adc
divl
pusha
jo
jmp
daa
in
pop
mov
mov
jae
fs
inc
push
pop
pop
pop
sti
sub
in
imul
cmp
aad
pop
insl
call
movsb
ss
and
fs
movsb
cmp
add
out
push
test
sbb
mulb
push
xchg
lods
add
dec
inc
inc
js
stos
push
cltd
jmp
sbb
dec
int
and
sub
jne
pop
or
fs
test
push
sub
and
into
in
and
fstps
out
xor
jge
adc
dec
movsb
cmp
subl
xchg
hlt
jecxz
mov
push
sarl
add
je
and
rorl
shll
jl
cld
pop
sbb
cwtl
cld
mov
call
in
push
lea
les
fucomi
xchg
pop
mov
pop
insb
pusha
jl
or
jb
and
cmp
pop
jnp
push
lock
add
pop
dec
xchg
xchg
push
stos
or
jns
fistpll
punpckhwd
iret
sub
pop
mov
dec
mov
xor
dec
pushl
scas
cmp
xor
xchg
std
sbb
in
push
cmpsb
and
dec
adc
pop
std
add
les
test
xor
aam
popf
sub
and
dec
push
js
aaa
mov
test
ret
push
xchg
mov
aaa
cmpsl
dec
inc
leave
loop
push
xchg
outsb
aas
data16
idiv
jno
aas
mov
push
sub
int3
xor
cmp
data16
xor
hlt
dec
iret
cmpsb
jp
sbb
dec
push
inc
mov
push
mov
cmpsl
cmp
dec
sahf
push
mov
mov
fisttpll
in
in
xchg
fistpll
je
js
dec
scas
ljmp
xchg
or
push
mov
rcll
xchg
cmp
lahf
pop
bound
jecxz
sub
loope
jbe
and
stc
xlat
dec
jge
jmp
pop
dec
int
cmp
pop
xor
push
mov
fldcw
sti
pop
pop
fdivs
mov
push
and
inc
mov
adc
and
pop
jns
or
sahf
ja
dec
ja
mov
jmp
cmp
ffreep
repnz
cmp
imulb
fs
sbb
pop
lahf
fistpl
test
sub
jne
xchg
test
fidivl
inc
fwait
cmpsl
cmp
sbb
push
push
stos
outsb
inc
aas
lret
mov
inc
scas
dec
test
push
test
jb
aam
lea
adc
xor
data16
out
mov
sbb
fists
mov
arpl
sub
jae
dec
nop
std
adc
test
movsb
mov
inc
and
fistl
adc
sbb
add
arpl
and
mov
mov
inc
and
cmpsl
int3
mov
dec
lock
push
call
jo
lods
mov
and
arpl
rorl
scas
test
xchg
dec
push
insb
mov
add
shll
movsl
or
mov
cmp
lds
pop
ds
call
pcmpgtd
out
xor
pop
mov
push
outsb
mov
and
push
mov
or
sbb
leave
mov
jecxz
jle
cs
mov
repz
mov
negb
jg
iret
adc
sub
enter
in
dec
pushf
pop
insl
idivb
xchg
lock
xchg
jnp
or
rolb
dec
in
push
into
inc
lods
testl
movsb
xor
fs
es
cld
mov
cmp
xor
repz
ret
push
scas
cltd
or
pop
popa
xor
jecxz
fs
sbb
dec
inc
test
inc
xor
xlat
or
inc
inc
pcmpgtb
xchg
lret
mov
sbb
dec
into
andb
dec
lea
pop
es
mov
scas
rolb
mov
cld
shl
rclb
sub
lock
mov
das
inc
popf
push
call
ret
xchg
sub
mov
add
shr
outsb
stos
dec
lcall
loope
sahf
adc
test
ret
fisubrl
ss
scas
mov
cmpsb
popf
push
lods
inc
xor
inc
shrl
add
ret
daa
repnz
pop
jmp
mov
mov
cltd
pop
fwait
mov
mov
inc
pop
jae
dec
movsb
push
xchg
mov
decl
sarb
jnp
sbb
jnp
sbb
mov
enter
mov
mov
mov
mov
sbb
dec
jnp
sbb
xorb
push
mov
fsub
pop
mov
push
xchg
cmp
call
ja
aas
sti
das
pop
lcall
data16
sub
jno
scas
sarb
inc
jb
xchg
push
jecxz
sub
xor
mov
mov
insl
xlat
adc
and
fldl
pusha
sub
scas
js
mov
push
cmpsl
daa
adc
paddusw
push
pop
sub
mov
mov
lcall
adcb
dec
fs
jg
fldenv
or
or
or
sahf
lea
or
arpl
cmp
and
jl
into
ljmp
mov
pop
inc
push
jg
add
ss
jnp
xchg
into
insl
mov
dec
cltd
pop
call
ret
in
lcall
ds
popa
inc
push
enter
cmp
out
shlb
dec
cmp
lahf
sbb
mov
mov
aas
stc
in
cmp
push
cmpsl
fbld
push
fmull
mov
lds
xor
jp
jbe
sbb
xchg
cmp
pop
std
int
or
cmpb
test
dec
gs
xor
and
imul
ret
xchg
adc
xchg
cmp
add
fcompl
or
repz
shlb
sbb
leave
pop
shrb
xor
ret
mov
mov
xor
mov
xchg
stos
mov
fistl
dec
push
scas
out
pop
sbb
add
push
jns
popf
lods
sbb
ja
jmp
in
jno
xchg
out
lahf
js
dec
lret
mov
inc
stos
stos
dec
pop
imul
and
imul
adc
add
jg
sbb
mov
dec
lock
imul
and
jmp
ficomps
lods
insb
jb
ds
lea
shll
adc
add
add
and
scas
mov
xchg
mov
insl
fisttps
add
aas
dec
into
pop
lea
pop
push
sbb
jb
or
push
mov
js
nop
push
popf
sub
jno
ss
xor
mov
jno
cmpsl
cli
into
leave
fs
icebp
pop
push
inc
fpatan
rclb
ret
cltd
sbb
push
mul
jmp
jecxz
jo,pt
fnstenv
push
push
mov
cmpsl
mov
sbbl
in
je
sahf
ds
cmpsl
movb
mov
xchg
ret
shlb
insb
aas
ljmp
js
mov
inc
pop
insb
xchg
mov
xor
mov
cld
fsubs
movl
ja
ficoml
cmc
mov
dec
dec
and
testb
or
shll
rcl
xor
pop
adc
mov
or
mov
mov
aam
and
js
aam
test
dec
daa
jae
repnz
out
test
pop
ja
mov
js
dec
push
bound
iret
fsubrp
jle
aas
add
dec
mov
xchg
sub
rorl
stc
jns
enter
xchg
mov
jbe
popf
adc
lods
sub
out
gs
loope
or
lret
jp
out
add
sub
sahf
sbb
sub
shll
mov
inc
xchg
into
ss
adc
mov
loop
dec
in
es
out
fcmovbe
lcall
push
sub
mov
lahf
cmpsl
dec
fdivr
in
fwait
negb
or
and
push
push
push
mov
push
lock
push
add
fmull
add
ror
call
push
and
jno,pt
jmp
xchg
das
jecxz
test
sbb
nop
mov
inc
xchg
js
cmpsl
adc
push
sbbl
jae
divb
test
mov
xorl
cmp
add
movl
js
scas
pop
cmp
repz
ds
mov
ja
test
mov
aas
sub
push
sub
imul
mov
push
bound
or
mov
add
xchg
push
xor
pushf
imul
pusha
jle
cmp
int
jmp
fcomp
add
sub
jae
lds
pop
dec
daa
icebp
scas
flds
fmuls
pop
pop
mov
in
adc
mov
inc
sbb
mov
jae
mov
roll
xchg
int3
movaps
adc
arpl
inc
push
ss
pop
push
adc
adc
xor
xor
es
jle
out
enter
sbbb
xchg
in
std
xor
loopne
mov
sub
push
movsl
inc
sub
jbe
adc
push
outsb
xor
sbb
cmp
xor
adc
cltd
in
mov
cs
bound
pop
rcr
sub
jns
add
push
lods
add
or
outsl
call
push
mov
dec
xchg
outsb
scas
rcrb
jns
cli
adc
xchg
mov
mov
mov
xor
xchg
ljmp
lahf
sbb
and
jnp
les
andb
leave
push
pop
jg
pop
adc
adc
mov
dec
pop
out
and
shll
and
out
nop
xor
push
push
mov
mov
insb
jg
mov
pmulhuw
into
insl
cmc
mov
jp
shlb
push
cmp
pusha
pop
sti
mov
ds
movsl
iret
ljmp
xchg
mov
lods
cmp
sub
rorl
push
dec
stos
int
leave
jno
mov
or
push
xchg
inc
add
sub
pop
mov
xchg
shl
xchg
xchg
cmp
test
xchg
outsl
test
cmpsl
andl
add
ja
subl
ja
dec
pop
aas
aam
adc
into
je
dec
add
sbb
pop
dec
scas
adc
insb
mov
inc
imul
sub
xor
sbb
or
xchg
aas
jne
or
test
mov
push
in
pop
push
orb
jns
push
icebp
cmp
mov
sar
adc
jp
adc
clc
xlat
lea
pusha
push
sti
jecxz
shl
insb
mov
xchg
adc
mov
lret
insb
and
mov
jns
repnz
js
jb
subl
sbb
movl
in
push
out
pop
sbb
xor
dec
dec
arpl
xor
xor
xor
lret
xor
ds
xchg
test
lods
aad
lds
pop
or
sub
shlb
pop
mov
rcrl
hlt
aas
cwtl
inc
mov
dec
pop
movsl
jmp
inc
arpl
ret
push
or
mov
mov
lods
xor
cmc
sub
es
sbb
xchg
test
dec
fs
jecxz
int
lea
push
aas
lahf
mov
cmp
loopne
cli
xchg
add
ja
push
sub
roll
adc
lret
push
inc
jp
mov
mov
outsl
sbb
or
in
mov
daa
xchg
popa
push
and
mov
sub
mov
sub
js
pop
fadds
faddl
fnstsw
add
inc
mov
inc
testb
jnp
xchg
pop
icebp
mov
add
xchg
ret
jmp
lods
int3
orl
bound
in
adc
and
mov
dec
fildl
popa
inc
movsl
xor
mov
xor
fstps
popa
je
repz
pop
addr16
das
mov
lea
imul
sub
in
repz
inc
inc
cmpsb
cmpsb
push
pop
out
push
orps
pop
mov
mov
scas
xor
or
jecxz
adc
jecxz
inc
dec
push
and
sub
mov
in
pusha
fisubs
push
mov
lcall
or
stc
out
outsl
jae
mov
repz
shlb
aad
mov
stc
xor
sub
push
outsb
sub
icebp
loope
push
inc
fidivs
inc
or
gs
push
dec
mov
jle
mov
xchg
test
into
xchg
mov
fcomip
jbe
pop
insb
sbb
inc
iret
adc
and
movsb
inc
mov
adc
out
adc
fs
pop
mov
xchg
repnz
ret
adc
dec
les
inc
stos
nop
cmpb
xlat
dec
lods
cmp
pop
cmp
pop
adc
push
flds
mov
mov
mov
mov
into
loope
cld
mov
scas
arpl
push
sbb
pop
sbb
or
dec
sarb
arpl
mov
jle
outsl
adc
ret
test
xchg
jne
lahf
ds
lret
xchg
mov
cli
sub
jmp
mov
dec
in
fcoms
cmp
xchg
outsb
mov
cs
mov
sbb
popf
lds
xchg
clc
mov
out
gs
ret
jle
mov
push
and
mov
and
push
sti
sbb
adc
dec
orl
int
or
or
xchg
jle
cmp
jecxz
mov
pop
es
lods
sbb
into
out
add
orb
jnp
dec
int
jmp
cmp
icebp
maskmovq
testl
xor
je
sbb
outsb
sbb
rcl
lds
movsb
push
stos
push
mov
push
je
jns
stos
inc
xor
dec
push
mov
pop
pushf
mov
fildll
or
jns
jnp
dec
es
or
pop
cmpsl
lahf
popf
cld
or
mov
sbb
pop
cmpsl
stc
lret
and
loopne
xchg
or
add
inc
mov
test
bound
dec
mov
xchg
repz
stos
stos
dec
dec
adcb
mov
fisttpll
aad
mov
rclb
pop
push
pop
xchg
ficoml
cmp
mov
int
fldt
bound
mov
in
mov
pop
mov
nop
mov
push
aam
fdivl
mov
dec
fdivrs
push
xchg
gs
lock
dec
pop
ja
scas
xor
cmpsb
fwait
pop
dec
sbb
xor
or
cmc
into
inc
cmp
mov
cld
not
cmpsb
test
sbb
xchg
std
fwait
or
cmp
add
les
add
cmp
movsl
xlat
mov
lods
hlt
push
scas
jl
xchg
outsl
sub
inc
push
dec
popa
mov
popl
inc
fcmovnb
std
nop
je
pop
dec
sbb
mov
leave
mov
pop
pop
loope
sti
mov
mov
dec
cmp
pop
jl
mov
mov
lock
inc
and
psubsb
mov
out
sbb
push
pop
mov
nop
fdivs
sbb
iret
movb
xchg
adc
cmp
popa
fbld
or
ljmp
testl
repnz
gs
mov
fcoml
pop
mov
fwait
jbe
gs
or
daa
dec
inc
adc
pop
into
out
mov
faddl
sub
xchg
pop
dec
jge
out
jmp
mov
add
cmpsl
xchg
popa
bound
push
shr
jp
xor
adc
inc
adc
push
fiadds
cwtl
push
sub
push
fdivs
xor
mov
inc
or
out
enter
movsb
leave
std
cmpsb
mov
iret
push
xor
das
fsubl
mov
add
int
cld
jge
cmpsb
popa
das
lock
fdivr
arpl
xorb
jmp
cmp
pop
sub
cltd
cmp
add
inc
mov
outsl
add
clc
or
push
add
clc
pop
je
ljmp
int
ss
and
adc
scas
xchg
in
in
inc
pop
data16
cmp
sbb
stos
jnp
shl
test
xchg
dec
cmpsl
out
les
fiaddl
addr16
setae
pop
iret
cs
std
xor
lock
xor
and
xor
dec
dec
or
mov
mov
push
adc
add
jg
pop
fstl
lods
mov
rep
jp
jg
in
xor
inc
sbb
popf
cmc
mov
ret
xlat
mov
imul
or
jae
jae
in
push
mov
mov
jae
adc
lods
lret
mov
out
lahf
movsb
ret
in
test
cld
adc
nop
lea
xlat
push
jmp
in
add
jb
mov
mov
rolb
xor
stc
jb
mov
pop
sub
lret
out
xchg
jl
adc
pop
push
arpl
fmulp
hlt
ljmp
or
test
sbb
stos
movsb
out
in
lahf
nop
or
jg
fcomip
mov
mov
outsb
and
pop
mov
test
push
or
imul
cmp
stc
xchg
inc
nop
add
cmp
pop
and
int3
popa
mov
jecxz
das
in
fsubl
in
cld
jecxz
pop
int
sub
xchg
cmp
push
insb
fs
adc
push
adc
inc
sti
cmp
sub
iret
imul
shll
insl
adc
push
dec
adc
iret
popf
movl
aas
scas
or
outsl
call
dec
or
and
test
sbb
nop
je
mov
jbe
cld
xor
jle
lock
sub
dec
push
or
div
xchg
les
push
enter
adc
fcmovnbe
jno
dec
inc
jecxz
lods
fidivs
repnz
aam
push
psubd
imul
push
adc
cld
lahf
andl
clc
sub
jp
cwtl
sub
mov
xchg
lret
jge
cmpsb
sbb
not
dec
cmpsb
clc
ljmp
push
xchg
lock
call
jns
dec
in
ds
add
mov
sbb
lea
lds
lea
jl
fimuls
jb
adc
inc
push
push
out
jae
int3
stos
mov
nop
addr16
stos
mov
jno
xchg
mov
inc
mov
outsb
fsubr
popf
xchg
enter
fists
xchg
jbe
cmpsb
andb
mov
mov
arpl
jecxz
pop
ja
or
inc
popa
xchg
cld
adc
mov
nop
mov
lret
testb
arpl
inc
xor
aam
lea
fcompl
xchg
mov
bound
stos
sbb
or
outsb
scas
pop
into
sub
scas
or
imul
loop
pop
test
xchg
cmp
dec
push
mov
cs
stc
mov
shrb
lock
out
jecxz
nop
daa
mov
adc
sub
das
push
lods
pusha
cmp
out
jo
outsl
cmpsb
mov
into
stos
sbb
push
xor
inc
fmul
xchg
mov
jmp
rcrb
pop
divb
aaa
mov
mov
sbb
pop
adc
fldt
mov
xchg
jo
outsl
and
mov
sub
fwait
inc
jb
or
roll
jne
sbb
es
stos
lret
in
ljmp
idiv
jae
or
lea
addr16
or
inc
add
cmc
roll
pusha
fldcw
out
test
inc
inc
in
cli
pop
add
push
decl
mov
test
mov
jns
inc
mov
xchg
sub
scas
test
lea
mov
rolb
pop
pop
out
jg
fsubrl
pushf
mov
outsl
scas
daa
lea
leave
lcall
sbb
and
ror
js
je
cli
xchg
mov
and
pusha
sbb
push
jb
int
into
push
repz
movsb
pop
xor
xor
stos
lret
add
xor
mov
and
mov
xchg
mov
data16
mov
add
mov
jno
mov
jecxz
pop
mov
into
and
pop
es
hlt
ss
mov
imul
je
mov
lcall
sub
inc
mov
out
add
xchg
sub
das
sarl
aaa
mov
setae
loope
imul
mov
movsl
out
scas
movsb
imul
dec
out
sbbb
jno
dec
jo
mov
sbb
mov
sbbl
dec
out
mov
and
push
fsubl
sbb
mov
mov
popf
data16
pop
aad
mov
xchg
pop
iret
jge
dec
scas
xchg
push
out
pushl
sub
inc
jo
invd
cmp
fs
cmc
pop
sti
adc
cs
or
clc
int3
fists
mov
sahf
jge
into
push
mov
xchg
ret
mov
add
mov
bound
xchg
js
nop
xchg
jns
aaa
mov
or
pushf
sub
scas
inc
fidivl
ljmp
stos
xor
psraw
jge
cltd
or
push
inc
je
inc
cld
adc
mov
dec
sub
sbb
and
in
mov
mov
sub
jmp
or
pop
int
ds
cli
sub
xor
pop
mov
fs
lods
outsl
xor
popa
inc
mov
pushf
repz
aas
sbb
gs
xor
adc
out
xchg
fnstcw
fwait
imul
shrl
pop
out
lea
loopne
mov
push
out
cmp
cmpsl
add
out
and
xchg
or
stc
push
mov
hlt
test
repz
mov
sti
jmp
lcall
xchg
inc
mov
pop
push
sbb
mov
movsl
in
lcall
cmp
sub
dec
inc
xchg
pop
loope
jns
xlat
pop
movntps
xchg
cmp
ljmp
andl
in
nop
mov
dec
add
dec
aad
push
fdiv
dec
cwtl
icebp
popf
movsb
dec
cmc
jp
insl
je
mov
xor
mov
repz
orb
add
or
notl
dec
or
push
push
insb
mov
push
mov
lahf
pop
out
xor
jne
in
test
xlat
adc
movsb
sbb
minps
and
xchg
or
je
sbb
and
aam
fdivrl
out
in
outsl
pushf
les
inc
dec
cmpsl
std
and
movsb
fisubrl
jne
jl
loope
push
scas
inc
sub
mov
mov
cmp
xchg
inc
xchg
rcrl
test
ja
nop
mov
repnz
pop
jae
or
mov
push
stos
popf
enter
insl
enter
aas
clc
sub
push
sub
sub
fistps
test
xor
movsb
sub
xor
and
pop
std
cmp
sub
xchg
dec
outsl
adc
inc
das
prefetcht0
dec
stc
addr16
adc
mov
push
xchg
out
filds
add
add
jp
insl
mov
mov
mov
ss
rclb
xchg
icebp
inc
icebp
hlt
inc
outsl
jmp
lock
jg
pop
jge
shrl
enter
pop
fldt
nop
sub
shrb
xor
push
jl
out
mov
pop
lods
test
in
adc
cld
xor
xor
sahf
popf
repz
jp
xor
cmc
frstor
lock
jmp
shlb
lea
or
mov
push
inc
lahf
mov
ja
mov
js
test
inc
xchg
dec
aad
jge
xchg
adc
out
jae
clc
mov
mov
pusha
jp
mov
mov
fnstcw
push
add
push
xlat
sbb
and
inc
adc
xchg
and
and
dec
es
push
btc
dec
les
inc
fwait
lahf
andl
xor
stos
jne
js
lret
mov
inc
inc
lcall
cmc
ret
xchg
push
in
xor
bound
imul
xor
add
ret
or
pop
cmp
cltd
xchg
mov
rcrl
cmp
push
ret
adc
clc
cmpsb
das
popa
cmp
out
mov
out
sbb
push
or
fucomp
out
sbb
or
sub
popa
mov
jl
shlb
xor
and
cli
shll
xchg
lret
int3
adc
jno
sahf
cmpl
out
push
test
ljmp
int3
loop
test
out
pushf
loopne
scas
dec
rcrl
stc
clc
stos
divb
hlt
push
sarb
mov
push
push
popf
out
jp
xor
mov
cmp
sbb
arpl
jno
das
pushf
jnp
xchg
test
in
pop
xor
cltd
mov
and
adc
inc
or
sbb
add
jmp
incb
sbb
push
inc
dec
inc
mov
shlb
jbe
dec
lahf
mov
notb
shl
sub
push
subl
jno
inc
jl
lahf
xchg
shrb
out
and
push
in
jg
call
std
lea
or
pushf
sarl
adc
mov
fbld
jno
test
mull
cmp
mov
push
lock
orb
mov
nop
mov
roll
aad
jae
pop
mov
add
mov
insl
xlat
jp
popl
addb
int
mov
sti
mov
je
lea
mov
mov
mov
das
cld
sarb
jb
int
fisubs
cltd
popa
jnp
jecxz
imul
push
mov
xchg
or
shrb
mov
lods
xchg
orl
pusha
pop
insl
andb
out
jb
nop
insl
xchg
xchg
inc
push
dec
jge
inc
lods
mov
icebp
or
or
in
mov
insl
loop
enter
ljmp
pop
movsl
out
imulb
dec
gs
push
push
inc
scas
cmpsl
jne
fsubp
movsb
add
mov
les
mov
outsl
sbb
out
push
fildl
inc
or
fucomp
sbb
addr16
loop
push
sub
aam
cmp
subl
sbb
dec
pusha
push
inc
nop
sub
dec
or
sbb
sbb
incb
loop
mov
jg
jo
es
lcall
fcmovne
fdivp
call
out
cltd
scas
ret
ror
adc
nopl
imul
insl
aas
in
lret
xchg
or
mov
orl
into
in
cwtl
fs
xor
adc
mov
mov
in
cli
xchg
inc
test
cmp
scas
mov
dec
lods
in
rcl
jbe
or
fstps
cs
stc
xor
dec
or
adc
fwait
aas
mov
out
les
inc
jne
jmp
push
inc
repz
add
adc
jne
sbb
mov
mov
lods
and
sbb
negb
sbbb
jecxz
pop
lret
xchg
xor
fidivl
cwtl
psubsb
mov
out
cmp
movsb
out
sbb
ljmp
in
jg
btr
sahf
movsb
je
cmp
fucomi
mov
or
mov
and
shl
cmpsl
sti
xchg
std
inc
and
mov
fldl
xor
sub
rcll
mov
imul
jo
xor
mov
movsl
sub
insl
enter
sahf
jo
das
mov
xor
mov
mov
ja
inc
icebp
xor
imul
sub
cmp
nop
mov
hlt
es
sbb
cmpsb
pop
bound
nop
cwtl
test
fwait
xlat
cmpsl
lret
popf
mov
daa
mov
ret
add
ss
ret
push
xchg
mov
aaa
mov
out
jmp
pop
add
or
sbb
cltd
mov
sub
mov
sub
xchg
push
pop
repnz
xchg
xchg
add
testb
mov
pop
jg
icebp
clc
dec
mov
adc
xchg
pop
mov
add
mov
mov
clc
xor
in
lahf
shll
push
aaa
dec
sbb
or
lods
mov
mov
aam
push
ds
dec
adc
ljmp
iret
insl
add
sub
jbe
push
aas
or
test
and
add
cvttps2pi
les
inc
aas
ret
cmp
or
inc
out
pop
popa
mov
cmp
movsb
xchg
in
jmp
scas
or
push
mov
push
xor
roll
fildll
je
adc
push
inc
sub
pop
mov
int
and
and
pop
jnp
pop
add
pop
dec
pop
addr16
and
int
ret
push
jne
jo
jle
cmpsl
mov
lcall
das
sub
jge
adc
sbb
dec
inc
stos
test
sub
mov
xchg
add
out
mov
jg
cld
sbb
movsl
loopne
loop
cld
push
mov
jo
jne
xchg
loop
clc
sti
xchg
sub
nop
mov
pop
cmc
inc
sub
pop
orb
dec
lods
outsl
ja
jne
fwait
shlb
sbb
xchg
aas
push
cltd
mov
fwait
cltd
jnp
mov
add
or
pop
push
sarl
sub
fcom
loop
mov
test
push
or
pop
or
jns
dec
movsl
inc
sub
pop
mov
mov
push
push
xor
jns
pop
push
mov
inc
test
test
scas
repz
in
jb
dec
adc
jbe
adc
add
das
and
and
lock
jbe
adc
adcb
cmp
and
inc
les
pop
mov
sub
gs
subb
movsb
rcl
sub
add
sbb
in
xchg
mov
lock
mov
lock
fldpi
inc
add
rcrb
lds
sub
mov
lock
adc
subl
repnz
pop
in
inc
out
repnz
lock
jnp
adc
stos
push
lods
fdivp
mov
aaa
mov
pop
ss
into
jae
adc
mov
xchg
mov
add
mov
jp
mov
xchg
iret
cmpsb
into
jp
out
movb
xor
push
fidivrl
imulb
xor
int3
cwtl
call
cmc
pushf
hlt
cli
lcall
sahf
icebp
aad
xchg
stc
push
fisubrs
test
mov
xchg
xor
lahf
cld
sbb
adc
lods
adcl
jnp
insl
mov
stos
and
in
dec
and
clc
jb
mov
cwtl
jmp
jecxz
or
mov
call
pop
outsl
aaa
mov
push
xchg
push
xor
dec
es
and
scas
arpl
inc
mov
loope
jmp
je
push
jg
dec
inc
jmp
fs
gs
push
push
subl
js
pop
fcoms
movsl
and
cmp
test
or
jecxz
into
and
stc
repz
mov
subl
call
in
punpckhbw
sbb
adcl
mov
fsubs
jge
or
pop
movsl
ljmp
push
push
js
call
jb
add
cmp
and
pop
out
cmp
lcall
test
jno
imul
mov
int3
mov
xlat
stos
mov
cmpb
cwtl
jnp
and
and
mov
arpl
fistpll
mov
popa
jne
movsl
std
int3
fs
and
test
push
shrb
cmp
or
inc
lret
stos
out
and
sbb
jg
add
scas
ds
pushf
aad
pop
insb
xchg
addr16
cmp
aad
pop
lods
push
pand
les
mov
test
shrl
subl
popa
jle
xor
aas
loop
inc
or
fcmovb
les
or
aam
iret
inc
cmp
xor
int3
lcall
mov
pop
hlt
or
fbld
enter
push
scas
lret
std
rcl
inc
add
mov
mov
push
nop
ljmp
sbb
xchg
lds
xchg
or
pop
adc
es
dec
or
pop
ja
enter
inc
hlt
js
sbb
sbbb
cwtl
in
pop
sbb
mov
pop
in
xor
orb
or
or
cmp
mov
cmp
mov
rcll
mov
dec
and
cmp
mov
xor
jg
fists
fisubs
sub
fsub
in
pop
movsb
xchg
adc
add
pop
fcoml
xchg
adc
call
xchg
ljmp
sti
shlb
mov
jns
notb
push
aaa
inc
std
mov
fidivrs
out
icebp
lcall
loop
cli
and
mov
mov
dec
rorl
addr16
cwtl
mov
loope
and
mov
addb
jae
mov
mov
mov
add
cmpsb
je
mov
sub
bound
lahf
test
ret
loop
daa
jg
cwtl
pop
cmp
push
shrl
cli
jne
je
jp
xchg
xchg
cmpsb
in
stc
sub
and
call
mov
in
cs
fs
out
addr16
mov
imul
inc
shlb
push
test
pop
and
imul
push
xchg
fsubrl
in
push
cmp
fstp
ret
pop
dec
movsb
scas
aad
jo
sub
jmp
cmp
push
bound
add
fwait
gs
or
cmp
cli
or
dec
addl
fsubr
push
in
int3
xor
xchg
movsb
lea
push
jp
aad
ficompl
xlat
xor
mov
lret
jnp
std
popf
aaa
fldcw
jo
push
jo
rorb
cmp
add
inc
scas
dec
int3
les
aam
movsb
in
jp
mov
sahf
mov
jmp
inc
filds
sbb
mov
xlat
stos
pop
and
lahf
jae
roll
jg
jnp
dec
push
mov
dec
fimuls
in
arpl
or
pop
add
pop
xchg
xchg
mov
add
sub
or
mov
insl
into
pop
push
pop
mov
mov
xchg
sbb
pop
xchg
mov
mov
sbb
outsb
xor
daa
sub
into
push
sub
nop
ficompl
pop
mov
mov
daa
mov
and
fidivrl
or
push
pop
and
sub
cld
fwait
mov
adc
es
repnz
data16
lret
dec
int3
lcall
mov
jmp
lea
inc
clc
pop
stc
pop
lea
pushf
lods
xchg
rclb
mov
out
inc
dec
out
push
xchg
adc
sbb
popa
cmp
sub
icebp
test
in
vpor
shrl
mov
mov
dec
cld
iret
sub
sub
adc
adc
loopne
repz
rol
rclb
sub
add
push
shlb
lcall
cs
loope
test
mov
push
fcoms
icebp
jge
mov
leave
js
sbb
out
dec
sub
leave
daa
xchg
lret
jp
cmc
pusha
pop
push
out
int3
dec
inc
mov
gs
or
jecxz
fwait
cmp
fidivrl
mov
incb
cwtl
loope
sub
pop
xchg
ret
cmp
cmp
arpl
dec
dec
lock
push
sub
mov
add
sub
and
pop
and
jle
and
movsl
stos
push
adc
sbb
ja
sahf
mov
in
xchg
pop
lcall
and
xlat
or
push
lods
stc
mov
pop
pop
cmp
sbb
xchg
push
sub
cmc
mov
push
cld
xor
popa
mov
cmp
lods
jno
repnz
jg
or
jg
jae
add
mov
dec
hlt
cwtl
popa
add
cmp
cmp
dec
xchg
push
out
pop
pop
or
dec
insl
mov
lahf
pusha
sub
aad
inc
dec
les
mov
fistl
gs
orb
push
sbb
xchg
arpl
pusha
jo
cli
mov
jno
sbb
pop
sbb
cwtl
sub
enter
test
sub
or
add
push
je
ja
mov
std
push
lcall
icebp
sub
rcrb
pop
cli
hlt
mov
aad
stos
jae
sbb
sub
pusha
fdivp
mov
dec
fdiv
jl
repnz
lret
decl
mov
aas
fnsave
mull
movsb
imull
lret
rcrl
lret
dec
add
jno
cld
or
adc
clc
xor
mov
loope
mov
mov
sbb
and
insb
mov
pop
cli
xchg
fisubl
rcrl
aaa
jb
arpl
mov
lds
mov
sbb
sbb
rclb
xchg
jbe
xor
aaa
mov
mov
cmpsb
test
jmp
adc
lcall
jecxz
jp
mov
sbb
push
lock
xchg
fs
adc
cmpsl
xchg
aad
popf
xchg
sub
movsl
jecxz
lret
cmc
xor
adc
push
fsubs
outsl
xor
in
dec
incb
sbb
sub
mov
ljmp
dec
hlt
shll
imul
adc
in
rcrb
jns
fmulp
or
adc
into
mov
and
jne
push
inc
dec
in
pop
jl
and
leave
lods
fisubrs
add
mov
cmpsl
push
sub
pop
pop
inc
and
loope
nop
dec
lods
pop
xlat
and
adc
stc
dec
out
sub
mov
shll
ss
loope
dec
or
out
sub
mov
aaa
push
xor
sahf
lea
aad
cltd
test
push
inc
mov
stos
ljmp
es
dec
mov
push
add
mov
pusha
jnp
pop
das
sub
pusha
out
jmp
xchg
mov
xchg
fdivs
cwtl
ds
lods
shrl
xor
add
roll
sub
iret
mov
or
pop
ss
dec
mov
lds
mov
je
fcomps
push
nop
cmc
in
aam
jns
iret
divl
orb
jae
mov
xchg
insb
add
repz
test
add
andb
mov
js
dec
sbb
int
mov
or
jb
cmpsb
lods
inc
scas
shr
les
daa
cmp
fdivrl
pop
mov
push
orb
mov
xor
push
mov
sar
je
push
mov
paddq
jae
int3
jg
aas
jb
dec
imul
leave
mov
jge
and
jge
and
push
push
loope
popa
dec
xlat
mov
lods
testl
lea
test
outsb
sbb
cld
mov
int
jp
sbb
xchg
xor
hlt
mov
imul
imul
pop
loope
ss
adc
pop
vpcomuw
inc
jae
mov
fyl2xp1
jbe
jns
cld
rcll
lds
pusha
stc
ret
out
inc
add
jns
xor
je
cmpb
xchg
push
insl
stos
jmp
stos
or
add
add
sbb
sub
sti
fsubrl
flds
and
test
xor
je
cmp
add
pop
mov
xchg
jo
loope
adc
cmc
cwtl
fwait
and
and
filds
mov
push
inc
or
add
push
mov
jns
ret
dec
repz
call
dec
cmp
lret
imul
dec
jbe
mov
push
cmp
enter
push
call
es
xchg
fmul
mov
mov
loope
mov
gs
test
mov
xchg
jmp
loop
lods
cmp
loop
fldenv
cmc
es
enter
divb
cmp
push
mov
cmp
sub
pusha
std
pop
push
cmp
xor
sub
notl
enter
adc
rcrb
push
inc
cmc
ja
dec
push
push
jbe
int3
jecxz
and
mov
popa
fisttps
clc
xlat
inc
xor
fldt
lods
adc
mov
lock
fldl
sti
push
pop
xchg
mov
lcall
pop
xchg
sar
iret
sti
cld
fnstsw
dec
hlt
aad
xchg
in
add
jmp
daa
sub
sub
clc
sub
nop
or
pop
lret
xor
fstpt
adc
test
add
dec
pop
in
in
push
daa
iret
pop
scas
rorl
mov
adc
adc
orl
jecxz
cmpsb
add
pop
bound
fdivs
mov
jae
mov
mov
popf
mov
inc
cwtl
lret
sarb
stos
out
xor
inc
out
or
add
movsl
cltd
stos
aas
loope
mov
or
std
adc
imul
pop
out
clc
xor
mov
hlt
int3
scas
add
fcoms
mov
jno
jo
iret
scas
sub
leave
xchg
sbb
roll
cmp
dec
out
cwtl
mov
xlat
ret
sub
pushf
mov
xchg
test
mov
fstpt
xor
sarb
insb
push
mov
clc
hlt
imul
leave
fstps
mov
leave
outsl
rcrb
es
lds
add
bound
xchg
mov
mov
enter
mov
ret
add
negb
sbb
sub
outsl
imul
lcall
sti
jmp
lock
adc
pop
insb
inc
fcomp
aam
stos
pop
xchg
mov
or
fisubl
arpl
mov
inc
std
pop
mov
inc
and
lahf
mov
sub
xchg
inc
fcmovu
cltd
mov
pop
jb
ret
rorb
push
bnd
into
int
push
pop
adc
add
jo
sbb
out
lret
xor
inc
pop
xchg
mov
out
cltd
js
sub
sbb
sub
pushf
sbb
outsb
int
sbbl
stos
dec
and
aam
push
into
gs
mov
mov
loope
and
in
addr16
xchg
test
insb
mov
mov
aas
jno
jb
jo
dec
out
and
sarb
mov
lahf
adc
push
pop
fst
rorb
mov
adc
xor
hlt
out
jge
bound
idivb
sbbb
shll
out
ret
jo
mov
fcomps
les
sbb
jne
pop
out
gs
push
cs
jo
mov
mov
and
mov
ds
lea
pop
pusha
jo
std
jo
insl
jno
cmp
jg
daa
jl
jmp
add
shl
or
fildl
or
jno
cmp
sbb
or
test
sbb
add
stc
mov
test
sarb
mov
push
mov
add
push
push
popa
sti
in
pop
arpl
mov
jbe
iret
mulb
mov
xor
dec
mov
lods
jmp
mov
push
mov
xchg
dec
popf
xchg
mov
cmpsb
scas
movsl
xor
cli
pop
cmp
mov
orl
pop
addr16
and
mov
mov
xchg
add
pop
je
loop
or
push
je
xchg
in
cli
cmp
rolb
push
add
inc
push
xor
addr16
jecxz
in
jecxz
adc
pop
dec
push
loop
pop
pop
mov
adc
pusha
jae
dec
lea
movsb
mov
push
addr16
mov
ss
dec
fldpi
mov
xor
imul
fidivrs
mov
and
mov
pop
dec
mov
outsl
pop
xchg
ret
pop
call
ja
enter
inc
pop
ss
add
popf
xor
dec
cs
jb
out
les
mov
arpl
adc
sahf
test
out
fnstenv
scas
call
sub
inc
adc
sbb
push
dec
popa
fnstsw
push
mov
jae
jp
inc
test
icebp
xchg
stos
mov
stc
push
fwait
int
je
movb
stos
sahf
rcll
cmp
sbb
movsl
sbb
mov
adc
cmp
pop
je
mov
mulb
pop
fisttpll
mov
add
test
nop
mov
inc
mov
jge
inc
iret
push
pop
dec
notb
xchg
xorl
adc
mov
loope
cld
cmp
sbb
icebp
mov
mov
call
xchg
pop
shl
int
push
mov
inc
jecxz
fldl
xchg
sbb
pop
xor
outsl
mov
pop
sbb
incb
xor
jbe
outsb
ja
and
dec
pop
hlt
in
lds
lahf
sti
jnp
inc
pop
shl
lods
pop
popa
std
push
inc
rcrb
aam
lds
or
mov
test
call
xor
sub
scas
lock
out
adc
mov
cli
hlt
push
popa
and
xor
test
leave
fcmovnb
dec
lret
pop
pusha
mov
pop
lods
imul
xchg
imul
mov
mov
lods
sarl
xor
sbb
leave
idivl
push
or
inc
cli
shrl
loopne
pushf
xchg
mov
scas
pop
fldt
popf
lds
dec
and
lcall
push
adcb
xchg
out
jge
lock
and
nop
adc
mov
aaa
dec
movsb
cmp
mov
rolb
mov
xchg
mov
add
xchg
mov
and
inc
imul
or
fadds
pop
xchg
push
imul
test
les
lret
jecxz
push
mov
test
or
lea
fdiv
lods
mov
cld
cmpsl
out
or
fs
iret
decb
and
cmp
and
mov
jb
sub
js
jl
lret
int
dec
and
test
push
cmpsl
daa
xor
adc
dec
jmp
jl
and
mov
arpl
pusha
aaa
scas
arpl
jb
mov
xchg
cmc
add
mov
inc
ffreep
test
mov
push
lea
scas
and
dec
jbe
movb
in
mov
push
mov
jne
cmp
fisttps
lock
aad
rcll
shrl
pop
sbb
dec
pop
xor
mov
insl
fdiv
push
dec
add
xchg
add
pop
push
mov
inc
xor
xor
jb
jo
cmp
sub
rolb
cmp
es
or
cmp
dec
dec
mov
les
lods
cmp
bswap
jle
mov
rorl
sub
popf
sahf
adcl
sub
sbb
insb
in
fmull
fisttpl
adc
scas
cmp
out
inc
push
and
xor
jg
sub
negb
jle
out
dec
or
push
adc
bound
hlt
cmp
mov
test
mov
loop
gs
popa
dec
push
xchg
imul
stos
sub
or
cmpsb
cmp
cmc
inc
cmp
lret
int3
pop
add
adc
or
jge
div
rclb
push
dec
pushf
mov
push
enter
scas
mov
or
dec
dec
jmp
loop
inc
leave
pop
and
ljmp
aam
xlat
sbb
outsl
add
enter
inc
jl
fnsave
test
out
rclb
int
adc
test
cmp
in
cmp
or
fs
cld
mov
push
lea
mov
lret
psubusb
cltd
cld
enter
ja
mov
adc
std
sub
add
in
movsb
xor
jecxz
xchg
cmp
push
icebp
xorb
lcall
xor
adc
mov
jge
or
or
test
push
iret
dec
adc
scas
std
inc
mov
sbb
mov
es
shl
mov
imul
fdivl
or
mov
leave
xor
xor
sbb
xchg
sarb
or
xchg
addl
ss
adc
mov
sbb
sub
popa
mov
imul
sbb
add
imul
xor
ljmp
pop
sbb
outsl
sub
jns
push
jbe
addr16
mov
inc
lods
imul
add
sbb
mov
jno
aaa
pop
je
or
xlat
adc
xchg
jbe
out
dec
push
mov
pop
xor
inc
mov
mov
xlat
stos
stos
rorb
sub
out
xchg
idiv
pusha
scas
repz
cli
and
scas
push
and
scas
add
mov
cmpsb
mov
stos
cld
scas
push
jmp
mov
rcrl
sub
adcl
scas
sbb
fs
jp
inc
scas
data16
insb
inc
mov
iret
pop
repnz
mov
stos
in
popf
or
pop
pop
sbb
scas
sub
xor
sub
clc
inc
xor
jge
xor
pop
scas
call
mov
ds
and
ret
out
inc
es
ret
in
iret
pop
push
inc
outsl
movsb
jo
outsl
pop
nop
mov
xor
push
icebp
pop
bound
out
sbbl
lret
xchg
add
fcmovne
ja
mov
adc
mov
insl
ds
scas
ja,pn
adc
out
mov
cmp
pop
fmulp
mov
push
push
je
inc
aaa
cmp
mov
inc
out
sbb
jmp
push
jg
mul
push
and
es
ficoml
push
jno
cld
rcl
cmp
in
icebp
inc
or
mov
sbb
fwait
or
imul
jne
push
cs
fs
pusha
stos
xchg
mov
or
jnp
test
push
add
sahf
lahf
mov
mov
test
and
dec
or
jnp
and
xchg
xchg
mov
push
sbb
mov
or
cli
imul
xchg
add
cmp
xlat
mov
sub
push
imul
jnp
cmpsb
jp
sbb
in
fwait
sti
es
sbb
out
das
std
mov
cmp
sti
mov
xchg
fnstsw
mov
test
lds
addr16
imul
lret
movsb
mov
push
mov
dec
out
sbb
imul
cld
outsl
sub
fsubr
xchg
adcb
lahf
push
les
xchg
pop
lret
xor
jl
cmp
sub
popa
jno
cmpsl
scas
movsl
inc
cmpps
mov
xchg
add
add
outsl
inc
pop
lahf
dec
mov
jmp
dec
sub
sbb
push
dec
jae
mov
cmp
sub
stos
mov
jmp
imul
xor
inc
mov
mov
cmc
call
pop
les
stos
stos
ljmp
inc
and
xor
xchg
jg
pop
test
out
sbb
les
xor
clc
fcmovbe
adc
lret
out
stos
lret
fmulp
inc
mov
scas
lret
xchg
sbb
add
mov
call
aam
stc
sbb
sbb
lret
out
scas
jecxz
outsb
sub
fcomp
jg
enter
jmp
mov
iret
jnp
or
xchg
cmpsb
in
push
xchg
pop
or
mov
cli
fisubs
ficoml
and
add
rolb
cmc
fcmovnu
mov
test
iret
push
push
mov
mov
xor
out
sub
loope
dec
mov
ljmp
test
pushf
addr16
repz
mov
aas
outsb
mov
int
xorl
fwait
mov
gs
mov
call
push
shrb
cwtl
mov
sbb
lds
pop
andb
push
and
xchg
adc
cld
aad
add
dec
and
or
stos
fbld
jmp
outsb
out
xor
icebp
in
ret
sbb
mov
inc
repz
ds
loop
test
ret
sub
push
mov
clc
lods
in
dec
add
jne
xchg
sub
sbbl
int
int3
mov
idiv
dec
mov
ret
lock
mov
repz
xchg
jmp
lock
push
adc
ret
mov
fdiv
pop
dec
jne
or
in
ret
lods
inc
push
daa
sbb
inc
or
into
adc
xchg
test
dec
push
in
push
xchg
lods
mov
rclb
shrb
hlt
mov
pop
loop
sub
jne
je
adc
cltd
jae
js
adc
add
cwtl
rcrl
sbb
lds
push
and
and
test
js
inc
xor
push
mov
mov
jnp
pop
add
jmp
xor
and
shl
dec
addr16
leave
mov
cld
mov
add
mov
dec
mov
pusha
dec
dec
mov
outsl
add
pop
movsl
nop
pushf
push
loop
es
std
xor
or
dec
mov
js
jp
outsb
sti
cmp
test
hlt
out
xchg
xchg
outsl
andl
fsubl
jmp
xchg
mov
fwait
call
xchg
out
loop
cmpsl
push
adc
mov
lret
add
xor
xchg
add
fmul
mov
adc
clc
lods
pop
push
imul
push
inc
dec
in
pop
xor
mov
shlb
xchg
push
xor
sbb
ret
fstl
pop
push
mov
popf
adc
push
test
mov
adc
std
mov
js
dec
xchg
aaa
fwait
nop
mov
orb
out
mov
call
mov
pop
xor
xor
mov
shlb
clc
jecxz
lahf
fmull
mov
stos
mov
and
lds
leave
in
and
xchg
pop
es
mov
push
dec
dec
add
rol
pop
jg
pop
aas
push
inc
gs
ljmp
and
pop
inc
and
shr
or
dec
inc
movsb
out
jl
test
and
mov
dec
arpl
adc
test
inc
mov
pusha
js
xor
mov
clc
lds
lret
gs
dec
adc
mov
dec
movsl
mov
in
call
jp
das
cmp
es
pop
and
dec
mov
mov
xchg
sub
sub
les
push
push
das
pop
in
fistpl
xchg
std
loop
sbb
jne
jle
daa
mov
jno
mov
cmp
jns
cmpsb
add
and
xchg
push
fmul
cmp
gs
icebp
mov
mov
mov
dec
out
clc
or
sub
mov
test
mov
adc
ja
and
jg
sbb
push
les
mov
subb
nop
push
xlat
add
jae
dec
dec
loop
and
mov
mov
lea
dec
icebp
popf
inc
or
sbb
lock
or
stos
xchg
mov
scas
aas
inc
mov
inc
xor
iret
xchg
xor
sbb
mov
cmp
outsb
sti
scas
push
movsl
clc
sub
and
sbb
jnp
inc
add
insl
ret
dec
sub
leave
mov
les
inc
fwait
out
out
add
jo
addr16
outsl
rsm
or
mov
nop
mov
cmpsb
out
sub
insb
sbb
jle
fisttpll
pop
pusha
xchg
in
mov
xor
out
xchg
cmpsb
cltd
pand
or
push
sbb
lea
push
neg
cli
mov
js
push
pop
in
fldl
fwait
mov
push
xor
xchg
xor
test
sti
ds
out
cmpsl
add
sbb
das
sub
mov
test
das
arpl
mov
mov
jp
or
and
sub
mov
jle
fsubl
jb
push
cmp
std
scas
out
iret
xchg
outsb
fisttpl
das
pushf
push
add
push
mov
sub
scas
into
dec
mov
or
js
mov
sbb
adc
je
lods
lcall
scas
sub
jmp
shlb
jb
mov
push
xchg
xchg
push
bnd
sub
dec
js
aam
mov
push
stos
insb
cwtl
stc
movsl
insb
pop
jg
xor
mov
cltd
out
inc
pusha
addl
out
xchg
mov
and
int3
push
jne
ds
lret
cmp
xor
mov
int
xchg
xchg
mov
lret
mov
xchg
and
fst
dec
inc
dec
sbb
mov
sahf
or
push
loopne
icebp
pusha
cli
cmp
or
stc
xlat
insl
cltd
imul
or
jnp
sub
xor
nop
fs
jnp
imul
leave
jmp
xor
ret
mov
addl
pop
push
mov
pop
stc
stos
repz
sub
lahf
jae
xor
adcb
add
scas
rcrb
test
mov
xchg
add
xchg
imul
mov
aad
stos
sub
in
sahf
mov
mov
lcall
lcall
or
fs
cmp
out
shrb
cmp
xchg
aad
dec
mov
dec
outsb
sub
out
jle
push
loope
add
mov
imul
sahf
lock
out
aad
test
mov
dec
adc
stos
icebp
cmp
cld
ret
push
jbe
mov
mov
jns
pop
scas
xlat
sbb
inc
ret
mov
imul
add
adc
ja
outsl
loopne
cmp
inc
sbb
and
cmp
xchg
pop
loopne
notb
jecxz
icebp
gs
fadds
fwait
call
scas
jno
mov
mov
push
pop
inc
loopne
loopne
and
dec
aam
leave
push
aas
shlb
mov
xchg
int3
or
and
psrlq
cmp
sub
out
push
xor
xchg
pop
jge
fsubrs
fmull
mov
mov
jnp
shll
push
loope
mov
mov
pop
mov
cmc
push
pop
sarl
jmp
repz
cld
repz
jae
shlb
and
dec
out
fldl
cmc
setns
sbb
mov
add
cmp
call
push
je
push
call
dec
popl
jne
pop
js
scas
xchg
mov
push
xlat
mov
pop
rcl
insb
cmp
loopne
das
roll
mov
ljmp
sbb
bound
rcll
adc
fistl
std
fldcw
mov
dec
or
sub
push
adc
cmpsl
sub
in
dec
scas
sub
or
ror
xor
mov
mov
testb
cmpsb
inc
test
cld
pop
ja
in
push
test
js
leave
jns
andl
out
sbb
mov
jge
fadds
sub
push
imul
mov
cmpsl
repz
frstor
adc
lock
jg
and
cmpsl
xor
ffree
sbb
push
pop
stc
inc
test
fldenv
mov
insl
mov
xchg
cld
pop
sub
mov
inc
nop
push
call
gs
fcmovnb
in
incb
notb
loop
dec
jbe
cli
int
pop
imul
push
roll
hlt
sub
stos
jns
les
in
dec
xchg
or
xor
insb
push
scas
sti
adc
cmp
add
das
mov
xchg
rep
loopne
aad
cmp
fsubrs
mov
int3
call
xor
fnstcw
fdivrs
dec
cmp
loop
leave
add
fcmovnb
jg
out
cmp
push
in
lcall
sbb
xor
sub
pop
sub
jmp
or
push
adc
mov
lret
loopne
lea
mov
jbe
push
jge
imul
cmpl
jl
mov
shrl
jecxz
pop
sti
push
clc
cld
add
dec
or
lcall
pop
enter
push
int3
or
dec
xorb
push
mov
in
sub
in
mov
mov
aaa
pop
stos
fucomi
pop
and
int3
pushf
push
cmpsb
lea
pop
jb
push
addr16
mov
outsb
repnz
int
adc
pop
std
xchg
adc
sbb
rorl
pop
xchg
test
push
mov
push
xor
ja
mov
pop
lea
pusha
jge
adc
sub
or
xor
movsb
mov
push
dec
stos
xchg
int3
daa
in
sub
or
mov
pop
mov
mov
fisubs
cmpsl
int3
mov
sub
outsl
sub
mov
mov
xchg
xlat
fbld
cmpsb
pop
mov
loop
or
mov
ror
cltd
and
inc
mull
out
adc
stos
fimuls
dec
ss
pop
push
jne
insl
push
push
stos
sub
lds
push
xchg
push
out
mov
nop
je
ds
leave
mov
fdivrl
add
xorl
imul
push
sbbb
clc
dec
mov
pop
xchg
int
out
insb
sahf
fwait
loope
inc
call
adc
or
pop
cli
sbb
mov
fs
jnp
rcrb
jo
clc
fsub
mov
sbb
inc
xchg
popa
sbb
xchg
cmp
int3
loope
push
pop
sub
jne
lahf
dec
ja
mov
fs
jns
or
sub
clc
repnz
aam
sub
xchg
js
xor
inc
test
pop
xor
rcl
lahf
mov
popa
and
lret
dec
xchg
scas
jecxz
clc
cltd
jo
inc
popa
sbb
dec
sub
cli
sbb
cmp
js
cmp
xchg
add
pusha
mov
fadd
mulb
xor
stos
inc
stos
mov
aad
out
xchg
pop
cmc
fisubl
repnz
fs
mov
cwtl
xchg
xor
xor
out
stos
iret
loopne
pusha
mov
hlt
dec
imul
cmp
sub
fcmovnb
lret
and
adc
mov
shrl
xchg
pushf
iret
test
out
or
xor
popa
jecxz
inc
es
cmp
push
int
add
xchg
or
movsl
cli
loopne
xorl
movsb
jl
fnstenv
inc
insb
jnp
cli
xor
adc
fndisi(8087
clc
fdecstp
rol
pop
scas
mov
dec
test
sti
sub
or
sbb
cltd
jo
inc
sarl
dec
cli
js
sbb
cmpsb
insl
pop
sahf
push
cmc
sbb
pop
mov
adc
cmp
jns
and
push
mov
sub
xchg
loop
adc
push
xchg
sub
iret
or
xor
inc
int3
loop
adc
mov
sub
cltd
daa
enter
mov
or
lods
shl
pop
jne
jl
movsl
popa
cmp
cs
jg
mov
aam
inc
lahf
cmp
xor
addr16
sub
int3
int
faddl
adc
xor
or
sbb
xor
mov
xchg
repz
repnz
mov
adc
inc
rol
sbb
dec
mov
outsl
fdiv
ja
mov
adc
shl
dec
stos
sub
push
sbb
sub
jge
jmp
xlat
jle
mov
int
stos
add
cmp
or
cwtl
stos
or
sub
push
std
js
mov
lods
ss
adc
sub
cwtl
daa
mov
movsl
mov
push
adc
ret
test
sbb
scas
gs
hlt
cmp
mov
push
xor
neg
xchg
repnz
xor
mov
sub
hlt
cwtl
or
jno
inc
stos
lods
lds
pusha
dec
fimuls
addb
jbe
out
dec
mov
dec
jae
stc
mov
scas
lret
and
js
ds
test
fwait
test
jle
imul
aam
int3
insl
pop
daa
and
dec
mov
jns
xchg
or
jecxz
insl
addb
inc
lds
inc
push
int
dec
sbb
imul
cmp
cs
cltd
and
idiv
es
xchg
fs
push
and
scas
mov
or
xor
xor
xchg
jbe
andl
andb
lahf
xchg
jl
test
mov
dec
imul
xchg
mov
jnp
sub
shll
mov
enter
lock
mov
arpl
fdivrl
xor
test
out
lds
std
jl
pushf
fwait
mov
loop
loope
pusha
adc
xchg
out
jb
and
stos
inc
aam
push
jmp
aaa
jae
mov
fsub
inc
pop
or
lret
jns
subl
mov
popf
inc
ljmp
jl
nop
xchg
aad
test
dec
int3
cltd
mov
push
jo
adc
cwtl
shr
cs
pushf
not
mov
stos
js
push
mov
insw
lea
dec
mov
test
icebp
mov
aas
ret
ja
call
testl
btc
aad
dec
add
movsb
stc
enter
jns
and
ss
mov
pop
and
push
sbb
jl
rcr
cld
xchg
mov
push
add
jl
bound
jnp
test
mov
pop
sub
sub
out
mov
movsl
jno
mov
add
add
insl
mov
mov
jecxz
mov
imul
push
jb
jne
shlb
mov
jo
pop
or
jo
xlat
out
and
xchg
mov
out
cld
dec
sub
rorb
int3
loop
cld
clc
popa
add
lods
lcall
ss
test
es
cmp
mov
mov
mov
loopne
aaa
pop
fmul
flds
mov
cmp
cmp
jns
iret
mov
xor
sbb
cmpsb
idivl
bound
je
daa
fdivr
outsb
stos
jno
pop
pusha
inc
daa
out
stc
mov
insl
lds
mov
jne
arpl
mov
loopne
xchg
and
xchg
es
out
sahf
add
mov
push
incb
addr16
mov
jo
es
test
add
sub
fcmovb
bnd
jnp
pop
adc
push
into
sub
icebp
shll
lds
call
loopne
xchg
imul
clc
rcrl
int
jno
adc
repnz
arpl
loope
push
addr16
mov
push
dec
push
pop
mov
cmc
push
pop
xlat
xchg
adc
jbe
clc
in
ds
fldl
push
xchg
xchg
sti
out
neg
pop
arpl
das
cmp
cmp
mov
and
loopne
xchg
nop
cld
dec
push
in
dec
and
in
clc
movsl
out
adc
dec
int3
and
jmp
pop
leave
inc
incl
and
cltd
and
je
dec
and
jbe
loope
dec
xor
dec
cli
in
popf
and
xlat
cmc
xchg
daa
pop
imul
sub
or
int
push
insb
push
pop
int3
pop
jl
pop
cld
xchg
xor
mov
rolb
fdivl
insb
shr
inc
scas
cmp
pusha
addr16
nop
fs
lods
push
das
loopne
es
cs
push
or
sub
push
jb
lods
mov
loop
mov
inc
dec
adc
adc
or
in
dec
dec
je
test
sub
outsl
std
jbe
outsl
or
clc
fisttps
movsb
js
mov
mov
mov
scas
xchg
ret
int
add
movsl
je
fisttps
fmulp
add
nop
pop
insl
jg
pop
push
das
mov
shlb
xchg
xchg
mov
mov
daa
inc
jns
fisttpll
mov
pop
sub
js
adc
cs
test
loopne
pop
mov
ret
in
inc
cs
xchg
xlat
mov
add
lea
or
mov
loope
ret
into
adc
das
and
and
xchg
push
pop
fmull
orl
and
xchg
movsb
push
insb
aaa
jns
add
inc
fcoms
insl
xchg
inc
in
dec
pop
pushl
mov
mov
nop
adc
jne
jmp
inc
fsubr
pushl
mov
jl
lods
icebp
sbb
dec
and
mov
aad
pop
repz
add
das
ss
in
sahf
in
dec
sub
ds
cmpsl
fwait
ja
movsb
loop
mov
sbb
fildl
mov
jb
stc
dec
and
cwtl
mov
dec
call
push
lahf
popa
cmpl
test
mov
mov
lods
cmp
mov
jnp
push
int
les
test
jmp
jnp
pop
jb
sub
test
rol
and
arpl
stos
xor
popa
mov
cs
fsubrl
sahf
pop
xchg
into
inc
xor
aam
clc
mov
push
and
push
sbb
mov
mov
push
mov
mov
mov
mov
adc
in
decl
push
mov
xor
mov
rol
push
mov
notb
xorb
fisttpl
outsb
mov
cli
mov
push
jne
jp
adc
fs
repz
or
ss
clc
sbb
push
push
mov
test
jmp
in
insb
dec
xor
int3
and
leave
inc
dec
nop
iret
rclb
enter
inc
std
add
lret
lahf
inc
sbb
fsubrl
mov
aas
push
test
stos
popf
aam
cmp
xchg
add
inc
sub
data16
jne
in
fwait
mov
gs
xchg
lea
jmp
fisttpl
imul
xchg
int3
scas
cmp
pop
add
mov
adc
movsl
pop
mov
mov
es
les
push
push
mov
arpl
out
imul
out
adc
je
ja
scas
fs
sbb
test
sti
rol
aaa
stos
pop
clc
pusha
fldenv
lods
inc
jns
je
mov
push
lahf
dec
mov
adc
xchg
xor
adc
mov
pusha
mov
lret
daa
mov
sbb
mov
loope
and
cmp
mov
nop
jmp
in
mov
repz
mov
xchg
inc
push
insl
pop
inc
lea
add
pop
jg
outsb
or
sbb
aad
sub
ja
cmp
hlt
outsb
mov
in
sub
xchg
xchg
mov
mov
mov
inc
sbb
xlat
adc
push
mul
inc
inc
and
adc
int3
jg
ds
ss
aaa
in
jne
sub
push
loop
adc
fsubrs
inc
adc
mov
fdivrs
add
popf
push
pop
jge
xlat
add
mov
mov
xchg
les
std
dec
ljmp
cwtl
cltd
jle
addb
cmp
push
push
jb
or
stc
scas
dec
stos
cmpsl
cmp
push
ljmp
in
frstor
jne
repnz
inc
or
jge
jge
jno
mov
out
jno
lret
decl
repnz
push
jmp
into
enter
lret
push
std
and
rcl
fs
test
imul
jns
mov
jle
xchg
or
cmp
outsl
inc
mov
mov
mov
inc
pop
hlt
mov
stos
or
sbbb
mov
sub
jns
ds
ss
add
daa
mov
subb
sub
adc
add
jb
and
or
inc
sub
add
add
mov
insl
sbb
testb
push
xlat
and
push
add
mov
mov
add
xor
mov
jns
mov
cli
jle
xchg
xchg
in
cmp
lock
fwait
adc
out
mov
push
jb
int3
sbb
or
out
cltd
outsb
dec
push
into
iret
push
dec
mov
pop
out
in
or
in
push
adc
sbbl
dec
loopne
jbe
adc
sbb
xchg
and
out
sahf
add
xchg
sbb
mov
test
out
or
adc
inc
jno
out
call
leave
into
sarl
cmp
hlt
and
test
jns
hlt
setae
dec
push
sbb
jno
cmp
jne
mov
xchg
aas
push
lods
mov
xor
loopne
daa
nop
push
imulb
insl
mov
cmp
push
mov
push
fcomps
or
andb
rorl
sbb
adcb
adc
imul
dec
popf
out
push
sbb
xchg
rol
mov
js
sbb
push
insb
dec
sbb
xchg
in
mov
or
jg,pn
test
lock
jno
scas
or
out
adc
adc
push
push
mov
inc
mov
fwait
push
sub
lds
mov
fldt
jle
sar
out
pushl
lret
popf
mov
out
jmp
fmul
test
ds
test
jg
add
add
aaa
xchg
push
in
lea
js
and
aad
addr16
fistps
mov
inc
push
add
loopne
pop
dec
xchg
shl
jns
push
dec
xchg
pop
insb
adc
add
inc
aaa
add
test
das
cltd
pop
push
and
rcrb
lret
inc
int
pop
arpl
lods
or
inc
mov
mov
xor
popa
sub
sub
fwait
xor
int
cs
xchg
outsb
icebp
test
and
loope
int3
cmp
push
in
enter
mov
adc
inc
idivl
sbb
je
dec
mov
test
dec
test
call
call
in
les
and
mov
das
cmpsb
push
add
mov
or
sbb
cwtl
and
sbb
jb
testb
repz
push
test
dec
sarb
mull
stos
sbb
dec
ret
imul
cwtl
mov
xchg
mov
loop
test
push
jmp
mov
gs
enter
mov
scas
sbb
jo
and
push
in
adc
ja
push
lea
mov
stc
jbe
test
jbe
sbb
mov
add
scas
clc
xchg
push
push
out
xor
testb
dec
pop
rcrl
pop
je
mov
push
movsb
jg
pop
pop
aam
int
jl
int
jg
loopne
lea
cs
clc
nop
insl
cmp
mov
xchg
cmpb
mov
out
xchg
lcall
popa
aam
pop
rorl
mov
xor
int3
add
xor
sahf
popa
arpl
jb
ljmp
sbbb
fs
pop
sub
sub
sbb
dec
aaa
cmp
and
ja
push
xchg
shlb
aas
rcrb
test
int
mov
dec
xor
dec
adc
and
pop
sub
inc
mov
push
inc
jge
enter
daa
mov
xchg
repnz
xor
adc
insb
or
jmp
sbb
ljmp
mov
popa
int
mov
out
pop
roll
jle
sub
and
rcrb
aad
mov
loope
jns
dec
sbb
jo
movsb
and
lret
fimull
je
aad
xchg
stos
icebp
mov
rcrb
jmp
out
mov
or
and
ficompl
mov
cmpsl
ret
mov
pop
push
iret
adc
push
lret
pop
loopne
iret
xchg
ja
bound
sbb
xchg
fsubs
push
insl
mull
cmc
cmpsl
adc
lahf
xor
jo
fwait
sbb
push
les
add
xchg
mov
test
popa
andl
movsl
dec
add
cmp
mov
jle
ret
push
inc
fcmovnbe
jns
jno
adc
mov
ds
adc
inc
xchg
inc
loop
xor
out
gs
outsb
icebp
push
adc
or
popa
bound
sbb
es
lock
scas
xorb
pushf
jmp
in
vandpd
cltd
push
outsl
stc
dec
fs
or
nop
and
inc
cmp
movl
lds
es
unpcklps
fldenv
lret
mov
adc
pop
fistpl
mull
jb
cmpsb
fdiv
cmp
and
leave
in
aas
cwtl
out
xchg
cwtl
aad
sbb
lret
mov
fisubrl
mov
je
pop
xor
add
pop
sub
xchg
pop
mov
in
pushf
pop
inc
das
and
adc
ret
and
push
push
in
sub
sarl
push
subl
fists
push
or
in
imul
mov
je
and
jge
insb
xchg
fadds
insl
pop
out
jle
cwtl
ljmp
add
data16
or
mov
fisubl
inc
outsl
loop
push
je
cwtl
dec
ret
dec
cltd
dec
pop
dec
imul
dec
stos
pop
mov
xchg
sbb
inc
in
cltd
ja
mov
sub
cld
imul
jnp
xchg
or
out
xchg
mov
mov
iret
mov
dec
or
mov
dec
xor
and
ret
repz
mov
push
xor
gs
jmp
aaa
dec
jne
lea
sub
jle
inc
pop
dec
sub
cmp
push
and
loop
rorb
push
mov
pusha
or
xor
fstl
pop
int
pop
xor
add
sbb
fidivl
jle
jae
es
imul
shll
pusha
or
sub
pop
loop
cmp
lock
sti
sub
int3
in
and
loop
jbe
stos
out
test
rol
jge
sub
fcoml
aas
sti
jno
add
and
into
les
shrb
jle
add
or
mov
sub
mov
and
leave
pop
imul
jg
fimull
out
mov
jae
and
outsl
xchg
push
aad
sub
iret
cmpsl
cmpsb
movsb
dec
push
es
popf
xor
addl
enter
mov
into
insl
fdivrs
xchg
loope
cwtl
add
loop
pop
dec
cwtl
fiadds
mov
or
iret
aaa
movsb
fcoms
ljmp
ret
scas
mov
out
mov
push
in
inc
xchg
mov
xor
inc
call
out
xchg
imul
xchg
insl
mov
and
fs
subps
add
push
xchg
push
cmpb
es
mov
mov
popa
and
jecxz
mov
lods
repnz
in
jmp
mov
inc
int3
sub
popf
pop
mov
xor
adc
out
fidivrl
cmpsb
in
cli
xchg
mov
imulb
jp
mov
pop
in
xchg
aam
pop
mov
or
in
in
xor
pop
test
clc
cmpsl
insl
push
stos
test
inc
ret
add
cs
aad
sbb
repz
pop
int3
mov
addl
sub
loope
sbb
and
mov
fcoml
dec
fidivl
add
sub
push
aas
in
in
outsl
mov
fimull
sub
in
into
test
movl
bound
imul
mov
mov
xlat
pop
sub
ljmp
gs
cmpsl
insb
xor
fsubs
jg
lahf
or
adc
int
adc
xchg
and
clc
dec
popa
xchg
cmp
mov
lret
call
dec
jb
outsb
and
pop
add
or
xchg
shrl
dec
adc
sbb
sbb
or
mov
adc
pop
dec
fisttpll
xor
into
cs
dec
add
dec
push
int3
imul
test
lods
mov
jns
fisubrl
jp
pop
mov
xlat
ffree
jne
insl
dec
loop
jnp
push
fistl
rorl
imul
jo
mov
pusha
test
mov
or
add
pop
mov
xchg
dec
mov
into
cmp
add
sar
negl
loope
mov
lcall
fucom
lds
xor
inc
test
inc
mov
aad
insb
mov
mov
xor
dec
lret
fistps
cmpsb
inc
data16
push
xor
aad
jecxz
dec
sub
es
add
cmc
sub
faddl
je
sbb
test
bound
mov
pushf
xchg
or
shr
dec
dec
adc
push
out
adc
cwtl
mov
xorb
leave
bnd
in
aam
jmp
outsb
cmp
and
mov
push
out
xor
dec
ficoml
dec
ret
push
pop
jo
bnd
xchg
mov
and
neg
lods
dec
dec
mov
ret
xor
int
dec
rcrb
in
adc
jo
enter
lret
lds
add
addr16
aad
or
xchg
sub
lret
je
add
sub
movsl
adc
jle
fld
inc
pop
stc
dec
add
in
data16
popa
push
jge
or
xchg
jmp
pop
jbe
fcoml
adc
inc
or
ficoml
fwait
add
mov
mov
test
fadds
test
in
je
fidivs
insb
cs
or
pop
mov
rcll
hlt
jnp
adc
mov
sub
int3
dec
int3
fadds
xchg
jns
push
sub
das
dec
jae
xchg
push
cmp
mov
fsubp
repnz
inc
dec
loopne
push
mov
sub
aas
adc
xchg
cmp
add
xchg
ret
jne
out
popf
cltd
roll
pop
cli
cmp
xor
scas
jmp
icebp
cmpsb
and
and
mov
or
pop
and
add
inc
neg
inc
xor
pop
ljmp
repnz
rcrl
mov
and
imul
fmull
dec
out
loop
rcl
in
xor
ds
cltd
fsubl
xor
popf
push
cmpsl
hlt
lcall
inc
aaa
in
rorl
pushf
inc
cmp
or
xorb
and
cmp
outsb
rolb
inc
sub
mov
mov
mov
push
cltd
push
mov
popf
mov
cwtl
int3
pop
mov
pop
or
and
fdivrl
push
dec
jne
outsb
ret
xor
push
add
divb
aaa
rcr
inc
jp
jnp
sub
or
jae
in
cmp
movsb
pop
sub
inc
ret
jb
xchg
or
xchg
arpl
jle
mov
add
out
sqrtps
jo
push
jle
gs
mov
icebp
cld
mov
loop
jae
adc
mov
mov
insb
cmp
stc
sub
clc
sahf
or
fisubl
push
lahf
mov
mov
iret
push
test
in
pop
xchg
mov
xchg
ss
mov
xchg
xchg
or
pop
iret
daa
or
insl
addr16
mov
bound
test
negl
ss
mov
mov
xchg
lcall
sub
nop
ror
std
popa
comiss
pusha
sub
mov
sbb
cmc
gs
imul
cmpl
lods
mov
stos
repz
and
add
add
xchg
or
sti
inc
push
in
mov
test
fs
mov
in
push
int3
leave
xlat
shlb
push
cwtl
jns
xchg
adc
jp
ja
jo
aad
mov
xor
and
inc
mov
dec
inc
out
add
loope
sub
js
xchg
repz
repnz
adc
pop
add
fcoml
jl
xor
inc
adc
push
cmp
pop
js
add
cmp
mov
mov
push
jp
lea
push
jecxz
mov
movsl
mov
out
or
cli
aad
mov
orl
or
dec
inc
pop
rcll
cmp
fs
mov
and
enter
aaa
in
aas
xchg
in
shrl
dec
jns
out
jl
xor
cmpsl
out
clc
sbb
push
add
sahf
sub
pop
mov
loopne
pop
pop
gs
sub
xchg
cmp
and
cs
sbb
sub
and
push
xchg
aam
mov
push
popa
add
add
pop
fld
pop
sub
dec
xchg
lods
cmc
pop
fwait
or
adc
push
icebp
aad
pop
movsb
neg
adc
aaa
add
cltd
jb
mov
rorl
pop
cltd
sbb
lea
pop
mov
mov
ljmp
mov
or
mov
mov
mov
jo
adc
shll
push
cli
insl
je
dec
inc
sub
in
lahf
stos
sub
jno
insb
fdivr
cmp
add
adc
cltd
cltd
popf
dec
mov
sbb
loop
jne
mov
rcl
in
mov
jns
xchg
fnsave
pop
xor
jno
sti
sbb
adcb
xor
sub
xchg
test
movsb
xlat
jp
hlt
cli
jbe
mov
ror
lea
mov
mov
out
shlb
mov
jb
and
imul
or
fsubs
lea
mov
pushf
int
mov
arpl
addb
nop
xor
sbb
xor
call
or
dec
pop
lret
pop
cli
xchg
mov
xchg
dec
int
imul
jb
sbb
test
sbb
lods
jb
mov
dec
aaa
inc
cmc
push
xchg
sub
int
insb
adc
or
loope
rorb
mov
fbstp
dec
std
into
push
out
out
cld
cmp
push
andb
clc
cmp
cld
cmp
test
popf
dec
mov
in
or
mov
mov
das
inc
push
jg
in
push
push
jp
push
jnp
inc
pushf
xlat
jle
jns
mov
mov
clc
loop
test
hlt
push
daa
repz
push
jecxz
push
sub
es
ss
jbe
cmp
inc
call
aad
lds
pop
fisubrl
mov
cli
push
fwait
pop
lret
pop
xlat
cld
inc
sub
push
or
or
xor
push
leave
cmp
ret
jnp
lods
fildl
sti
in
scas
adc
inc
fdiv
sbb
jnp
inc
jb
sahf
mov
pop
lds
push
scas
call
stc
mov
scas
cmp
imul
pop
int3
pop
ss
fisttpll
dec
xchg
sbb
js
cmp
testl
adc
jno
and
push
cwtl
aaa
mov
ja
nop
xchg
pop
ss
imul
cli
mov
mov
jmp
fwait
inc
push
pop
inc
lret
jno
mov
mov
out
popf
sbb
jbe
hlt
adcl
out
or
push
and
mov
inc
jbe
xchg
and
repnz
inc
jmp
rcrb
imul
mov
imul
pop
jnp
xor
das
mov
leave
and
cmp
adc
rcrl
push
sti
dec
imul
ds
stc
negl
out
push
call
out
mov
jg
lret
insb
in
inc
cmpb
jl
in
pop
inc
outsl
aad
je
dec
test
rorb
xor
sub
mov
add
fcoml
xchg
pop
adc
in
arpl
aam
pop
mov
mov
xor
pop
hlt
rorb
push
cmp
sahf
lock
xor
movsb
adc
xchg
std
out
fsubs
fildll
mov
jge
rclb
inc
sbb
sbbl
mov
out
mov
jmp
mov
dec
mov
insb
mov
jnp
jb
mov
mov
cltd
lahf
cld
push
mov
push
jbe
icebp
lret
cmpsl
hlt
xchg
pop
mov
test
int
or
mov
cmp
out
jae
repz
or
add
add
sbb
test
scas
inc
cli
xchg
icebp
call
jmp
dec
push
pop
jae
insb
sbb
push
scas
movsb
cltd
fsts
jb
int3
mov
roll
ds
mov
cmp
jno
shll
imul
cmp
xchg
movsb
mov
mov
jmp
cmp
adc
jmp
xchg
push
stos
enter
dec
push
sti
add
cltd
in
mov
test
and
or
dec
fisubs
fwait
js
call
aas
cmp
push
subl
fwait
in
push
adc
mov
sub
mov
rclb
cmp
or
addl
in
or
js
mov
mov
pop
jecxz
adc
xor
adc
inc
jge
and
int3
loope
xor
pop
int
xchg
je
es
mov
rolb
cmc
adc
dec
addr16
lret
fwait
repz
lret
outsl
outsl
add
pcmpgtw
daa
repz
pop
sbb
test
mov
out
lahf
add
outsl
mov
jmp
jne
test
adc
cwtl
dec
pushf
aas
sbb
cmp
arpl
int3
pop
ss
or
push
leave
sarl
rol
push
push
cmc
or
push
in
dec
mov
inc
movsb
pop
mov
nop
addl
filds
push
cmc
cli
cmp
bound
push
xchg
xchg
push
inc
pop
scas
add
arpl
jbe
mov
lret
cwtl
stos
or
stos
xchg
push
add
cmpl
xchg
mov
lret
rorl
sbb
xchg
gs
adc
lods
xchg
and
ret
dec
ficomps
xor
push
lcall
mov
pop
adc
cmpsl
sub
push
xchg
or
xchg
jb
inc
mov
fldenv
cwtl
dec
ret
add
sub
sub
fs
dec
xchg
mov
in
dec
inc
nopl
push
cli
mov
lcall
imul
add
scas
shrl
mov
pop
jne
pusha
sub
stos
jo
jecxz
cmpsl
xchg
cmc
and
cs
sbb
mov
ss
lret
xchg
inc
cmp
dec
hlt
lret
sbb
stos
jge
or
lea
adc
sub
insl
mov
cmpb
xlat
outsb
mov
imul
loopne
sub
cmp
scas
shll
or
daa
ljmp
mov
jbe
lahf
mov
test
stos
cld
sbbb
test
std
outsl
xchg
aad
andb
ja
xchg
lret
cmp
out
xchg
stc
jle
push
jle
loope
call
push
jg
mov
stos
lret
repnz
clc
shrb
jge
mov
std
insb
adcb
mov
mov
dec
ljmp
sub
stos
sub
orl
dec
mov
arpl
dec
adc
or
int
xorb
pusha
jae
mov
gs
cmp
pop
enter
fnstenv
fcomps
inc
popf
dec
pop
enter
ss
push
inc
push
mov
mov
es
xchg
gs
insl
daa
push
sub
roll
mov
shl
cmp
test
cld
repz
mov
add
lret
daa
jmp
movsb
loop
mov
js
lea
pop
sub
inc
xchg
adc
fmulp
or
sub
scas
mov
xchg
jbe
repnz
push
int3
fwait
dec
imul
xor
in
and
pop
or
sbb
ja
mov
jg
nop
inc
int
jl
in
adc
jge
cs
pop
out
mov
jbe
cmp
enter
fcmovu
jle
adc
cmp
dec
jle
int
xor
cmp
push
xor
mov
pop
mov
xchg
int
imul
repnz
test
cmp
xchg
jmp
loopne
outsl
sub
pop
ret
mov
or
push
inc
push
loop
xchg
decl
mov
data16
pop
les
add
push
mov
movsb
scas
push
enter
xchg
daa
fs
pop
inc
and
out
xor
wbinvd
stos
andb
mov
hlt
jbe
xchg
lcall
jb
into
out
popa
xor
cmp
lret
data16
lret
lret
jbe
lea
dec
jmp
dec
ja
jl
mov
test
popa
dec
aaa
and
pushf
cmp
mov
rol
cmpsl
daa
inc
mov
xchg
jge
push
leave
and
stos
jne
pusha
pop
adc
mov
repz
cmc
xor
cmpsb
adc
pop
es
pushf
add
sbb
and
jbe
xchg
push
and
leave
xor
mov
push
lcall
adc
out
rorl
dec
mov
mov
lea
test
add
or
daa
jne
lret
sub
in
test
and
sbb
mov
dec
add
aam
mov
imul
stc
jecxz
jmp
testb
push
aad
add
jge
mov
xchg
in
sbb
inc
lods
push
hlt
divl
out
ret
std
stos
in
lea
lods
pushf
pop
xchg
mov
shll
or
test
out
mov
push
popf
sbb
hlt
mulb
mov
mov
mov
xor
inc
sar
sbb
mov
pop
movsl
aad
test
mov
stos
and
jno
mov
lods
ret
test
sub
gs
pop
dec
mov
xor
into
sub
jecxz
inc
ja
mov
int3
test
adc
xor
xchg
push
xchg
mov
fcoms
mul
stos
jg
mov
pop
imul
daa
push
cltd
jbe
mov
push
mov
mov
dec
mov
pop
scas
sti
mov
fisubl
jns
or
or
or
add
mov
adc
jmp
mov
add
sub
inc
ret
nop
addr16
sbb
or
sub
pop
push
dec
cmp
stc
dec
mov
decb
idiv
xchg
sar
xor
scas
push
loop
outsl
ss
dec
adc
pop
insb
repz
add
in
lahf
enter
imul
es
dec
mov
test
aaa
xor
xchg
inc
daa
mov
aas
adc
fs
gs
clc
xor
rcll
add
in
cmpb
std
dec
clc
mov
int
rcrb
push
add
or
mov
sub
outsb
scas
in
pop
test
and
jmp
lods
daa
addr16
lret
fs
lds
sbb
or
and
sub
lods
sbb
gs
call
add
orb
cli
out
icebp
std
shlb
dec
mov
bound
mov
out
dec
imull
iret
cmpsl
mov
js
repnz
fs
jp
push
scas
es
mov
mov
cltd
out
lods
jo
out
or
mov
xor
std
xor
movsb
mov
mov
mov
movsb
dec
aaa
inc
adc
std
test
jl
popa
mov
in
outsl
lahf
mov
sbb
shr
loopnew
imul
addb
push
mov
sub
sbb
and
cltd
push
inc
cld
ja
fimull
rcll
mov
imul
or
pop
cmp
lods
sub
sarb
pusha
mov
push
clc
shlb
mov
add
or
insb
cmc
mov
cmp
xor
add
xchg
xlat
fsts
outsl
inc
ret
pop
popf
lds
jge
adc
dec
push
xchg
mov
or
mov
jae
xchg
mov
jle
movsb
xor
test
negb
xchg
pusha
sub
inc
bound
stc
and
cld
cs
mov
xchg
sbb
mov
ja
hlt
add
loop
mov
gs
adc
mov
lea
fisubs
pop
push
mov
subb
test
xor
int3
mov
mov
cmp
lcall
sub
fnsave
mov
and
cmpsl
test
dec
lret
xchg
mov
call
pop
cmp
popa
or
clc
ficoms
fstpl
insl
std
jne
jno
fsubrp
xor
add
push
nop
fidivs
cmp
outsl
jb
mov
lret
aad
in
mov
idivl
gs
push
jno
mov
mov
adc
mov
cmp
dec
test
sti
ljmp
mov
clc
in
mov
rorb
push
push
xor
mov
test
push
fbld
cmpsl
add
lcall
mov
lret
lret
cmp
sbb
jle
testl
les
lods
xchg
inc
in
ret
lea
sti
pop
les
dec
sbb
inc
xorl
sbb
inc
aas
ret
xchg
pop
push
movsw
call
ret
sbbb
adc
data16
fbld
test
mov
dec
xor
sub
dec
out
xchg
gs
cltd
xor
jl
das
pop
push
add
push
or
and
add
jle
add
or
lahf
stc
js
sub
stos
push
hlt
gs
mov
movsb
and
call
lahf
pushf
cli
jnp
mov
mov
sub
add
xor
sub
pop
mov
movsl
pop
mov
cmp
xchg
xorb
dec
scas
pop
lods
ja
imul
imul
imul
sub
sti
mov
jno
mov
bound
imul
call
pop
mov
mulb
fsubs
mov
int
icebp
xor
cmpsl
dec
fistl
sub
mov
loopne
mulb
lock
sbb
inc
stos
jae
idivb
cmp
aad
dec
lods
jle
fistps
push
xchg
adc
imul
in
lods
mov
mov
clc
push
push
xchg
and
push
dec
add
daa
out
jnp
xor
fucom
push
in
inc
mov
dec
mov
cmp
inc
into
in
mov
xchg
int
or
xor
xchg
stc
mov
jns
push
or
out
fmull
mov
pand
push
ret
bound
ret
xor
in
cltd
add
push
call
jae
mov
and
xlat
mov
ja
dec
xor
jnp
xchg
xor
lahf
or
cwtl
in
inc
popa
adcl
in
repnz
jecxz
sub
and
dec
es
mov
rcll
mov
sahf
shlb
aaa
pop
mov
mov
fmull
push
adc
xchg
cmp
sub
or
fnstcw
push
leave
mov
or
negl
fdivs
cltd
xchg
mov
mov
fisubrs
push
pop
xchg
mov
and
cmp
lea
xchg
jecxz
jle
cmp
pop
sbb
fildll
or
mov
and
jle
mov
data16
mov
test
mov
xor
cltd
pusha
loopne
and
imull
cmpsl
xor
mov
pop
and
das
xchg
clc
imul
subb
mov
fisttps
xchg
cmp
idivl
pop
dec
push
cmpsb
test
jg
cmp
mov
sbb
push
rcrb
sar
push
loopne
mov
dec
pop
movsl
ss
sarb
lahf
jne
and
ret
adc
sbb
fdivrl
jg
sbb
pop
sbb
pop
add
jle
pop
leave
push
xchg
adc
and
cltd
xchg
xor
sub
push
sub
dec
xchg
mov
les
pop
clc
or
incb
testb
mov
jb
xorb
lods
pushf
xor
pop
ds
adc
push
movsl
loope
push
stos
cmp
lahf
xchg
lret
sub
int3
repnz
xor
push
notb
jo
push
mov
pop
adc
movsl
int3
mov
pusha
pop
adc
out
int3
ficompl
pop
dec
xor
jo
stos
and
es
test
mov
adc
add
in
adc
iret
les
clc
int
inc
shl
and
test
bound
mov
lods
jbe
mov
jbe
stc
loopne
dec
mov
ficoml
fs
ds
jne
push
popf
add
dec
fdivs
aas
jb
mov
jp
call
sub
rclb
lods
hlt
sub
aad
lahf
mov
pusha
jmp
cmp
test
jnp
imul
and
xor
fidivl
cmp
call
aam
es
mov
xchg
fmul
xchg
jmp
das
xor
icebp
sub
xor
ds
scas
dec
loope
push
nop
sub
fcmovu
aaa
push
leave
jmp
pop
push
pop
and
or
or
or
add
sub
mov
int3
mov
mov
pop
cmpsl
pop
sbb
mov
rol
das
adc
rol
or
insl
in
jecxz
add
push
jge
sbb
dec
dec
xor
xchg
xchg
insb
push
mov
sbb
or
sub
js
mov
jge
popf
rorl
sbb
jnp
std
dec
lahf
movb
gs
sub
repnz
ret
sbb
adc
mov
test
and
stos
jb
cld
bound
sub
pop
inc
inc
fists
xor
fisubs
fimuls
xchg
addl
pop
push
xor
cmp
or
adc
add
data16
pushw
movsb
les
cmpsb
sbb
lcall
xor
fnstsw
mov
mov
insl
mov
adc
jo
outsl
mov
loopne
pop
push
jmp
pop
xchg
popa
test
sbb
mov
loop
lcall
rcll
xor
mov
pushl
scas
cmp
jl
movsb
mov
push
add
and
fstpt
jg
sbb
pop
jo
pop
pop
test
pop
sbb
outsl
in
and
lods
loope
insl
xchg
pop
lret
pushf
mov
add
mov
add
out
adc
movsl
int3
mov
jo
cmc
or
bound
out
dec
ret
adc
sbb
or
repnz
adc
pop
adc
jecxz
pop
scas
or
jecxz
xor
inc
push
cmovge
mov
xor
xorl
shrd
int3
pop
lea
inc
jle
divb
cmp
pop
aaa
dec
xor
jae
push
mov
dec
jl
xchg
mov
hlt
xchg
xorl
cltd
out
jp
inc
fsub
xor
subl
fistpll
pop
insb
dec
inc
rclb
je
add
xchg
ja
enter
lahf
leave
xchg
pop
cli
lea
cmpsl
cwtl
or
loop
sub
cmp
leave
movups
mov
sub
ja
mov
add
jnp
sub
lods
popa
jo
popa
jle
movsl
cld
adc
mov
sahf
push
jne
xchg
xor
mov
fwait
pop
mov
dec
dec
add
lahf
push
add
mov
add
cvtpi2ps
and
adc
pop
mov
ljmp
cmpsb
jb
arpl
push
sub
pop
fnstsw
fld
pop
inc
and
cmp
aad
test
sbbb
adc
pop
imul
jp
push
in
ret
jge
pusha
shlb
ss
adc
pop
mov
mov
push
lcall
mov
and
inc
adc
into
sbb
mov
push
mov
xchg
sub
jo
xor
iret
into
push
sub
xchg
cmpsb
mov
fldcw
adc
std
test
aad
pushf
dec
shll
scas
decb
loop
sbb
call
jge
sbb
mov
ja
call
cmp
and
pop
xchg
test
jge
dec
sbb
pop
pop
xchg
outsb
xor
pop
mov
pop
not
add
xlat
jmp
cmp
popf
ret
idivb
stos
push
dec
xchg
pop
nop
ret
mov
xchg
loop
push
mov
cmpsb
aas
or
mov
lods
mov
push
rcll
cmpsl
mov
mov
test
inc
cmp
ret
push
in
push
jno
mov
mov
sti
std
lahf
fiaddl
xchg
or
and
mov
mov
pop
sbb
cmpb
icebp
ret
fwait
or
ret
je
sbb
loopne
xor
and
adc
lret
xchg
sub
push
std
push
out
cmp
fwait
aas
mov
ret
pop
mov
ja
cmpsb
mov
cli
cs
sub
inc
mov
pop
jg
xor
jns
mov
push
dec
mov
cmp
ret
xchg
ret
data16
push
jbe
lea
push
into
fcmovnb
lret
ljmp
dec
pop
sbb
jp
jp
pop
cmpsl
cmpsb
stos
mov
adc
mov
repz
adc
jne
cmp
lods
int
dec
inc
cmp
sbb
sub
pop
lea
call
jl
xor
sub
mov
into
push
lret
cltd
lret
cwtl
jle
ja
xchg
shlb
fdiv
insb
xor
insl
subb
inc
incl
insl
lock
movsb
push
dec
dec
lahf
and
lret
shlb
or
push
mov
dec
fdivrl
and
push
fisubrl
lahf
orl
mov
lods
xchg
inc
nop
ljmp
dec
mov
movsb
call
push
insb
das
mov
and
mov
jge
or
sbb
lahf
fnsave
mov
pop
or
int3
in
adc
mov
stos
xchg
pop
pop
gs
sbb
fs
adc
pop
testl
mov
imul
aas
inc
push
xlat
mov
add
and
bnd
xor
cmp
daa
das
pop
jne
scas
fimuls
pusha
hlt
pushf
xchg
ret
jecxz
leave
and
jae
cmp
in
stos
loopne
shll
push
sub
js
mov
bound
jbe
adc
or
cli
imul
push
negb
mov
dec
adc
add
adc
pop
sbb
mov
jb
idiv
add
pushf
int
into
mov
cmp
mov
pop
cmp
xor
mov
ds
addr16
mov
je
pop
mov
shll
fimull
mov
dec
insl
xchg
sti
mov
mov
jb
rcr
pop
mov
push
in
sbb
cmp
pushf
mov
repz
das
iret
mov
dec
in
jb
and
aas
or
ret
push
mov
and
je
aas
in
mov
sub
stos
adc
fdivrp
test
push
dec
std
lea
inc
outsb
xchg
adc
lds
sub
mov
push
popf
dec
fnstenv
iret
in
mov
mov
lfs
icebp
xchg
dec
cwtl
mov
mov
mov
pop
sbb
test
and
arpl
xchg
push
in
push
out
call
outsb
add
leave
ja
insb
adc
nop
mov
lret
push
mov
js
push
bound
aad
or
ss
data16
sbb
mov
or
shrl
jno
call
and
ja
cmp
dec
iret
lahf
and
arpl
pushf
push
rcrl
push
mov
jb
repz
sbb
movsl
loope
jbe
mov
rolb
adc
jge
pop
stos
sahf
sbb
lahf
sub
hlt
out
pop
mov
and
lods
ss
jmp
pop
jge
outsl
and
xor
mov
and
mov
sahf
rcrl
mov
ja
jge
out
das
int
adc
rcrb
repnz
mov
sbb
roll
pushf
frstor
aas
dec
mov
insl
xchg
dec
adc
adc
dec
cmp
nop
adc
dec
aas
pop
pop
mov
mov
gs
cmp
cltd
add
aaa
xchg
xorb
xchg
mov
mov
sub
push
push
je
inc
insl
cmp
adc
and
mov
out
mov
outsl
xor
sbb
mull
and
nop
sub
jecxz
out
lret
in
leave
ficoml
aaa
sub
outsl
mov
js
mov
mov
test
add
jnp
dec
push
fsub
dec
cmp
pop
pop
sub
inc
push
das
or
dec
insb
adc
add
jns
je
xor
push
push
lea
rolb
sbb
cmp
pop
testl
inc
testb
pop
int
fldl
gs
gs
adc
andb
les
clc
std
pop
mov
out
outsb
cmp
and
jb
cmp
or
inc
and
mov
ljmp
lcall
dec
pusha
lcall
outsb
pandn
add
mov
aad
pop
test
push
push
sbb
aam
out
xor
add
js
add
inc
aad
or
mov
or
lret
sub
and
movsl
pop
lds
adc
inc
push
fnstsw
movb
xchg
sub
pop
mov
add
mov
int
mov
popf
in
adcb
mov
rorl
jp
push
scas
or
xchg
push
xchg
pop
push
loop
es
mov
adc
int3
xchg
inc
fsts
sbb
subb
xchg
ret
addr16
repnz
inc
mov
jns
xor
jl
mov
cwtl
rorb
mov
sahf
je
mov
inc
push
imul
jno
pop
push
popa
xor
cmpb
cmpsb
pop
and
push
cwtl
or
mov
mov
ficomps
jb
xchg
jns
jg
icebp
fidivrs
and
lret
sub
mov
loope
and
add
pop
jg
pop
xchg
jmp
dec
cmpsl
or
pop
pop
nop
sub
fs
out
xor
pushf
sbb
push
xor
test
push
aam
sbb
or
adc
outsl
adc
je
inc
testl
fldl
inc
sub
dec
fisttps
jl
inc
xor
jl
jmp
push
add
adc
sub
push
cli
sbb
in
mov
sub
out
ljmp
push
mov
lods
aas
cltd
add
mov
pusha
mov
pop
movsl
xorl
and
lret
bound
push
subl
dec
imul
inc
mov
roll
loope
and
sbb
add
rolb
pop
adc
ret
xlat
and
aaa
sbb
ss
jge
call
and
cmp
mov
rcr
inc
adc
jg
enter
cmp
mov
mov
sub
mov
mov
iret
dec
mov
jb
test
inc
decl
mov
stos
mov
call
in
into
js
dec
jge
xchg
mov
and
inc
add
out
and
rcr
and
jb
mov
sub
sbb
push
jp
sbb
pop
and
fwait
popf
outsb
cmp
ljmp
cmpsb
inc
pop
int3
inc
cmp
pop
icebp
cmp
push
xor
jae
push
mov
jp
fcoms
outsb
push
cltd
out
add
repz
xor
fwait
das
orl
pop
ret
fbld
leave
scas
dec
stc
mov
sbb
cmp
mov
enter
fmull
sub
ds
xchg
adc
mov
dec
pop
fcoml
out
and
xchg
inc
push
mov
lea
jns
loopne
dec
mov
mov
mov
adc
mov
cmp
cli
test
pop
and
in
add
pop
add
daa
and
jns
push
mov
push
mov
adc
daa
test
add
lock
mov
sub
mov
neg
pusha
ljmp
push
mov
fld
jae
pushf
inc
lea
mov
stos
scas
jbe
sub
cmp
lods
pop
inc
mov
mov
and
dec
dec
into
fwait
jb
jb
pop
sti
in
xor
dec
adc
das
add
pop
push
inc
in
jb
add
mov
orl
sub
imul
inc
add
pop
lret
push
shlb
lods
bound
test
mov
lret
test
sbb
pusha
push
push
fidivrl
icebp
sub
inc
mov
mov
mov
xchg
inc
test
bound
pop
test
popa
lret
mov
mov
jns
and
ficoms
and
mov
sahf
loope
leave
hlt
sbb
pop
sbbl
imul
lret
dec
daa
and
cmpsl
jp
or
mov
pop
add
and
ret
in
jp
xor
mov
add
fiadds
pop
clc
mov
scas
push
cmp
scas
dec
cmp
sbbb
bound
jns
dec
xchg
mov
movsb
xlat
scas
mov
inc
addl
lods
push
adc
add
adc
mov
leave
shlb
add
pop
in
test
andl
inc
xor
lahf
popf
xchg
cmp
pop
xchg
pusha
lahf
sub
mov
subb
sbb
and
mov
clc
cmp
mov
push
sub
stos
jle
add
or
mov
push
bound
pop
push
lret
push
test
arpl
movsl
sub
mov
fcomps
cmc
xchg
and
inc
shrl
addb
mov
jb
cmpsl
mov
pop
test
and
jbe
jae
push
push
cmp
adcl
xchg
mov
mov
mov
cwtl
or
clc
insl
and
cmpsb
cmp
xor
testb
cmp
js
loop
insb
out
push
mov
xor
dec
scas
cld
mov
in
mov
popf
mov
inc
aaa
sub
stos
pop
mov
jno
fmuls
aas
xor
jnp
in
test
int
cmp
nop
jecxz
and
mov
xor
pop
mov
mov
imul
push
xor
xor
adc
lahf
scas
xchg
jae
dec
sbb
mov
out
jb
mov
imulb
xchg
xor
push
pusha
and
cmp
add
inc
xor
popa
mov
int
push
fiaddl
and
push
mov
jge
xchg
push
shl
xchg
rol
xchg
fs
cmp
adc
testl
insl
inc
add
stos
loop
add
jbe
xchg
xchg
je
mov
jo
pop
fs
push
mov
add
mov
cmp
jmp
mov
pop
dec
test
mov
je
jp
aam
xchg
pop
pop
mov
cmpl
lock
ljmp
in
jbe
adc
fstl
out
popf
int3
push
jle
loopne
imul
in
cs
in
mov
jne
ret
xor
sbb
test
adcl
mov
fldl
push
mov
add
and
jl
jmp
outsl
jecxz
mov
add
push
sahf
dec
sub
mov
inc
scas
xor
dec
in
jb
cli
bound
arpl
xor
in
adc
push
scas
rcrb
jp
cmpl
xor
aam
movsl
adc
mov
jae
xor
shll
fsubr
cmp
pop
lahf
out
loope
mov
fadds
inc
dec
mov
jne
mov
adc
xchg
xchg
push
cs
fstpt
jbe
adc
xor
aas
das
es
sbb
ja
jo
push
lods
xchg
in
inc
mov
loopne
lret
pop
xor
push
pop
test
xchg
push
inc
int
lret
rcrl
push
rol
mov
inc
xchg
jp
mov
in
xchg
dec
and
test
mov
out
aad
loope
add
xchg
mov
sti
popa
shrl
dec
add
out
in
out
pop
xchg
lahf
fdivp
bound
cli
sub
stc
jmp
or
jl
fnstenv
mov
stos
lods
xchg
dec
inc
jg
lea
cmp
pushw
cmovge
mov
cmpsl
ljmp
subl
mov
pop
and
call
test
sbb
jne
in
cltd
mov
pushl
add
std
cmpsl
pop
daa
loope
xchg
cmpsl
jmp
icebp
xchg
mov
cmpsb
orl
lock
loop
dec
add
mov
jecxz
xor
out
decb
bound
and
lods
push
dec
dec
inc
jp
pop
xor
inc
and
subl
mov
or
mov
test
dec
jne
jg
jle
sub
ds
clc
insb
and
and
mov
adc
fmul
mov
nop
rorb
leave
or
dec
gs
daa
or
pop
mov
mov
xchg
inc
es
jb
cmpsb
jb
enter
or
dec
cmpsl
sub
jl
dec
mov
xor
loope
xor
or
mov
sbb
orb
iret
push
sub
cwtl
incl
push
test
cmp
test
dec
pop
jno
jne
fdivs
mov
jg
adc
jnp
cmp
mov
out
fnsave
rolb
xor
mov
lods
andb
sti
rcrl
cwtl
push
mov
push
fldcw
bound
sti
dec
packsswb
mov
adc
bound
std
mov
jmp
sub
testb
sbb
inc
jge
lock
cltd
fwait
imul
imul
dec
repnz
nop
jnp
fisubrl
mul
rcrl
mov
inc
push
xchg
sub
shll
and
adc
pop
stc
mov
filds
pusha
xor
or
lock
sahf
ret
or
stos
dec
or
add
call
inc
mov
sbb
adc
xchg
imul
in
jmp
add
xchg
xor
xor
cmpsl
xchg
into
lret
into
and
dec
shll
add
pushf
dec
clc
sbb
mov
repz
jnp
rorl
out
mov
inc
add
and
mov
iret
orb
repz
pop
int3
imull
cmpsl
insb
mov
rolb
imul
push
loop
dec
hlt
fimuls
xor
scas
mov
add
into
loopne
xchg
push
mov
test
push
push
mov
ds
cmpsb
fstps
in
stos
jl
jbe
xchg
mov
std
sbbb
or
imul
push
push
pop
fcomp
int3
addr16
loopne
jge
adc
jns
dec
lock
fldcw
mov
sbb
cld
jmp
in
dec
cmp
test
imul
lcall
xchg
push
mov
test
push
mov
xlat
jg
sahf
inc
jmp
cld
mov
dec
dec
mov
sbb
loopne
mov
pop
outsl
xchg
xchg
icebp
fnstsw
rcll
fdivr
jg
jmp
dec
jmp
mov
and
scas
xor
fwait
pop
ljmp
insl
nop
and
cmp
adc
push
leave
pop
mov
fisubs
adc
cmp
push
push
and
rolb
and
fiaddl
push
int
xchg
iret
push
xchg
mov
dec
add
jns
jl
and
loopne
std
enter
icebp
sub
xchg
lret
shr
in
js
dec
mov
neg
pop
lret
jmp
inc
ds
ja
xor
mov
shl
cmc
mov
dec
xor
out
mov
mov
push
outsl
sub
lods
inc
je
push
popf
and
mov
mov
loope
and
les
insl
movsl
fsts
cld
rcll
rclb
cmp
das
pop
movsl
mov
ret
add
mov
nop
dec
or
js
aad
push
pop
xor
into
cmp
iret
mov
push
lcall
pop
sarl
push
pop
mov
dec
dec
mov
dec
fsubl
rcll
movsb
ret
insl
rcll
inc
cmp
cmc
bound
rcr
les
dec
loop
test
mov
repz
jae
dec
push
add
cmovae
xchg
mov
adc
pop
mov
mov
cmp
js
pop
xchg
add
sbbb
in
inc
test
lods
or
in
jp
xorb
mov
mov
aaa
cmp
insl
mov
add
testl
ss
and
jp
rclb
cmpsl
ljmp
cmpsl
and
out
pop
inc
sbb
mov
inc
enter
ja
ss
dec
inc
rcrl
adc
push
movsb
lock
pop
and
pop
push
or
sbb
lret
dec
dec
filds
dec
xchg
mov
call
arpl
pop
mov
mov
imul
jb
add
inc
imul
aas
popa
data16
push
ficomps
xchg
jno
ss
push
je,pn
dec
jl
fildl
fistl
pop
inc
adc
fnstenv
xchg
or
adc
stos
in
fimull
push
movsl
xchg
test
aas
push
and
arpl
rolb
sub
mov
sub
mov
add
adc
push
sbb
fninit
test
movsb
lock
sbb
int3
das
sti
dec
cmp
xchg
das
push
fildll
into
xchg
and
xchg
and
fcmovu
mov
test
mov
push
add
mov
inc
ss
les
add
lods
fnstenv
loope
clc
sub
dec
rcrb
inc
in
icebp
arpl
jp
push
pop
cli
xor
adc
sub
inc
lea
push
mov
aas
dec
stc
push
ja
aaa
clc
jl
sub
add
pop
mov
jno
sub
jae
fsubrs
nop
outsl
stos
sbb
mov
jae
lahf
es
jo
movsl
mov
in
lods
mov
cmp
mov
test
icebp
push
nop
adcb
cli
lcall
and
mov
aas
mov
push
out
pop
xchg
and
sub
out
lods
pushf
and
sti
shrb
ljmp
dec
pop
cmp
sbb
sub
sub
lea
cmpsb
jae
es
outsl
push
mov
mov
insl
cli
lahf
sbb
int
addr16
and
and
xor
insl
pop
mul
test
and
adc
arpl
inc
data16
mov
jl
test
pop
inc
ja
imul
jne
inc
mov
fs
aam
inc
mov
sarb
sbb
xchg
mov
shr
mov
push
lock
mov
std
sarb
jnp
das
adc
outsl
ja
iret
inc
iret
js
pop
jbe
jg
inc
or
add
mov
push
xor
movsl
les
sahf
sti
pusha
stc
outsl
push
xchg
jae
int3
sbb
icebp
push
mov
icebp
cli
dec
out
loopne
mov
pop
pop
sbb
jl
inc
pop
in
push
push
test
int
adc
repnz
mov
pop
std
xor
dec
mov
jbe
cmpsl
jg
add
imul
addr16
pusha
and
jno
data16
and
mov
cmp
mov
outsl
hlt
xchg
or
cmpsl
out
adc
add
and
shll
lods
call
inc
mov
in
sbb
push
pop
mov
xor
subl
or
pop
addr16
lcall
or
repz
fwait
or
pusha
addr16
pop
ret
sub
mov
dec
jno
cmp
insl
fstpt
xchg
xchg
pop
rcrb
bound
jb
ljmp
nop
cmc
clc
mov
jo
lret
mov
or
jmp
push
mov
call
pop
cs
mov
mov
popl
and
xor
sbb
test
jle
jo
or
testb
stc
fs
mov
pop
sbb
gs
imul
je
gs
jle
xlat
sar
push
jbe
clc
xchg
adc
mov
xor
xchg
push
pop
leave
fstpl
inc
mov
call
pop
cmp
insb
in
cli
hlt
inc
mov
mov
jb
iret
pusha
cs
jge
cli
jo
mov
or
sahf
lahf
push
pop
idivl
frstor
cwtl
and
test
adc
ret
stc
repnz
ds
mov
xchg
push
pushf
out
cltd
mov
flds
push
rorb
add
cwtl
mov
or
and
out
shll
push
in
mov
pop
xchg
addr16
movsb
xor
push
ljmp
aad
in
je
push
cs
mov
cmpsb
stc
sub
xor
outsl
add
jmp
mov
or
in
cmp
mov
mov
cmp
pop
add
popf
xor
cmp
imul
lock
sub
adc
sub
les
test
push
pop
dec
out
xchg
ljmp
jnp
hlt
imul
add
dec
mov
fdivl
push
pop
fsts
shlb
pop
aad
add
hlt
inc
jae
or
mov
and
add
push
push
nop
sub
mov
idivb
fcomps
leave
and
in
mov
mov
mov
pop
cmc
lret
jl
pop
push
sbb
push
jle
push
bound
pop
mov
out
insl
jmp
sbb
and
es
mov
call
lret
addl
out
clc
lods
push
sahf
insb
scas
or
jmp
pop
xchg
push
cmp
sub
std
pop
clc
mov
dec
enter
pop
xchg
aaa
pop
dec
aaa
fwait
mov
cld
mov
xor
add
pop
inc
pop
decb
xor
rolb
jnp
mov
push
pop
je
out
jge
mov
outsb
push
mov
or
or
push
xchg
bound
pop
push
mov
mov
jge
xor
adc
dec
adc
lret
add
xchg
call
sbb
and
pop
aas
movsb
das
clc
arpl
or
cwtl
fs
mov
fwait
sbb
cmpb
mov
shll
and
add
cwtl
or
insl
jle
mov
cs
or
xchg
fisttpll
aad
dec
test
and
jbe
dec
cmp
in
sub
lahf
cwtl
arpl
xchg
in
sahf
idiv
lods
mov
pop
mov
shl
push
pop
in
shrl
mov
mov
outsl
out
push
ljmp
push
outsl
inc
in
xchg
or
ficompl
repnz
mov
cld
adc
pop
sub
pop
push
sbb
xor
xor
mov
pop
and
inc
jae
movsl
stos
pop
push
mov
mov
mov
mov
xchg
jo
jge
les
sbb
mov
push
loope
push
or
cwtl
in
aas
pushf
pop
dec
or
cmc
test
pop
dec
shll
out
mov
push
scas
pop
xor
add
cs
xlat
stos
pop
stc
aaa
mov
cmpsb
push
dec
sub
dec
int
mov
push
adc
mov
push
loop
xchg
shlb
lret
out
add
notb
pop
icebp
mov
sbb
jge
jne
popf
sub
popf
insb
das
out
pushf
push
jp
or
out
push
mov
push
pop
sti
add
pop
mov
aas
jns
jg
sub
dec
iret
je
popf
xor
out
jp
add
inc
and
sbb
add
xor
out
dec
mov
push
mov
or
pop
in
inc
stos
push
cmpsb
lock
xor
and
dec
fcompl
rorb
push
jmp
pusha
mov
cld
test
pop
adc
cmp
pusha
ds
cmpsl
loop
adcl
inc
xchg
pop
cmp
cmp
push
rorl
int
fcmovnb
jecxz
cld
repnz
mov
inc
shll
adc
enter
cs
mov
arpl
or
mov
xchg
ds
push
inc
iret
lods
push
cmp
fnstenv
lea
or
inc
sub
inc
ficoms
cld
pop
movsl
dec
xchg
push
imul
bound
std
call
outsb
inc
mov
or
adc
in
fiaddl
or
sub
cld
fnstenv
jae
out
sbb
jg
adcb
mov
fdivl
add
cmpsb
out
imul
xchg
cmp
loop
push
lcall
cwtl
addr16
push
not
loop
xor
rol
pop
jp
std
xchg
int3
loope
xchg
lahf
test
and
js
aaa
addr16
mov
movsb
test
call
sub
testl
lods
jle
clc
xchg
repz
lods
pop
fmuls
pop
push
or
bound
ljmp
cs
fsubl
sub
lret
repnz
out
jmp
icebp
fnstenv
mov
testb
xor
push
mull
mov
daa
cs
adcb
testb
or
mov
or
sbb
or
sbb
mull
mov
add
lret
inc
cmc
dec
mov
add
mov
iret
mov
loopne
or
cmp
dec
adc
sbb
fcoml
push
push
pusha
mov
cli
jo
leave
cld
sub
cmp
shrl
fwait
bound
xor
mov
je
jns
mov
xchg
or
dec
xor
lds
dec
push
cmp
push
sti
test
pop
jmp
ret
mov
ss
test
fs
xor
sub
sub
arpl
jl
or
in
sub
add
insb
aas
or
or
pop
pop
jae
mov
call
pop
icebp
or
pop
or
and
les
stc
mov
orb
or
pop
add
stc
cmp
mov
imul
aam
xchg
and
jmp
xor
ss
std
adc
jne
fstpt
shr
mov
xor
inc
nop
shll
and
jmp
fisubrs
or
mov
sbb
pop
jmp
xor
push
mov
popa
adc
add
dec
and
and
and
repz
pop
and
mov
sub
jmp
cmp
or
xor
stc
repnz
jge
shll
dec
sub
negl
aad
outsb
fstpt
mov
loope
test
and
jb
subl
sub
mov
repz
gs
adc
sti
dec
bound
adc
idiv
mov
push
js
inc
xorl
ret
mov
push
push
mov
dec
shll
jb
cmp
ljmp
sti
and
push
mov
cmp
lds
lock
and
and
mov
jecxz
cmpsl
addr16
or
bound
push
sub
jmp
mov
jbe
out
test
sahf
xchg
adc
mov
fxch
idivb
scas
idivl
loope
cmpsl
mov
out
popa
sbb
fbstp
jns
sub
or
cltd
cmp
mov
pop
adc
cld
mov
sub
shufps
stos
icebp
popa
sub
pop
add
outsl
add
push
and
ljmp
push
lahf
xor
aam
imul
cmp
fisttpl
test
mov
push
or
pop
cs
sub
cmp
jmp
adc
test
add
pushf
std
ret
out
xor
adc
dec
cwtl
and
xchg
push
xchg
jmp
testl
insb
imul
nop
outsb
arpl
scas
aaa
decl
jnp
ja
jecxz
movsl
push
sbb
mov
jo
divb
xchg
push
stc
push
and
and
mov
inc
fisttpl
ffree
mov
xchg
push
jnp
xor
mov
out
pop
repz
push
cli
cmp
dec
push
mov
push
test
loope
into
into
loopne
or
mov
ds
cmpsb
loop
xchg
loope
inc
pusha
jnp
push
aas
push
jg
into
filds
jnp
cli
push
cli
pusha
jecxz
and
mov
lods
loop
andl
jo
push
inc
fdivrl
jle
pop
out
leave
jmp
movsb
sub
cmpsb
in
iret
cmp
gs
dec
rolb
add
mov
sarw
push
xor
inc
jne
jne
add
xchg
mov
xchg
into
lret
insb
fs
scas
packssdw
inc
adc
inc
sbb
sbb
mov
bound
fadd
repnz
mov
inc
add
lret
aam
mov
and
or
mov
insb
out
push
test
sub
insb
mov
lret
pop
lret
mov
int
loope
jge
pop
adcb
mov
sub
or
xchg
sub
and
fwait
jno
sub
lcall
sub
nop
mov
in
adc
or
push
fildll
and
push
jge
adc
push
out
or
inc
adc
xor
sets
clc
inc
iret
int
push
imul
pop
idivb
imul
daa
dec
mov
leave
stos
xchg
jnp
call
incb
pcmpgtd
out
test
insl
pop
fwait
push
idiv
adc
sub
push
lret
sub
cld
movsb
inc
mov
mov
or
arpl
movsb
and
mov
xlat
pop
adc
imul
cmpsb
dec
movsl
sub
scas
push
add
adc
leave
insl
sub
inc
aad
adc
cltd
push
xlat
fldt
cmp
mov
insb
in
call
mov
xchg
cs
lahf
aas
sarl
cmp
lahf
push
xchg
fnsave
lret
out
test
shrb
mov
inc
dec
xor
fidivs
pop
mov
cmc
xchg
popf
lret
nop
mov
loope
mov
loop
xor
mov
fwait
int3
aam
fisttps
in
dec
cmpb
mov
sub
mov
mov
movsl
shll
push
and
jmp
not
xor
dec
push
ret
cmpsb
dec
push
sub
ficoms
mov
cli
xor
mov
cmpsl
xlat
xchg
rcll
das
mov
lahf
xor
xchg
cmp
jp
fbstp
inc
int3
fnsave
mov
inc
aad
add
adc
lea
scas
insb
xchg
and
mov
shrb
push
fcomps
push
repnz
adc
dec
int
jp
lods
adc
mov
add
jg
in
aas
pop
iret
push
inc
repnz
adc
movsl
mov
or
pop
int
push
sub
imul
sub
repz
xor
push
ss
gs
clc
xlat
mov
shll
adc
xchg
sbb
repnz
jb
scas
jbe
dec
and
and
sub
and
fstl
or
cmp
ja
jno
sub
lock
fisttps
sbb
ror
jae
xchg
xor
mov
sbb
mov
cmp
fwait
roll
mov
outsl
xchg
mul
fs
push
andl
mov
xchg
sub
testl
call
mov
idivl
push
inc
mov
data16
sbb
mov
lcall
popa
leave
inc
mov
adc
call
cmpsl
fnsave
mov
mov
stos
dec
rcr
ds
sbb
icebp
push
mov
int3
sub
push
shl
lods
jae
or
sub
push
xchg
xchg
repz
shlb
jo
ror
je
mov
sub
movsb
xchg
in
testb
lds
mov
mov
in
movsl
adc
add
std
cmp
cwtl
xchg
rclb
xor
push
decb
inc
adc
stos
mov
jo,pt
pop
add
bound
fcoml
xlat
movsl
jne
jl
jge
ljmp
ret
dec
ror
rcr
jp
xchg
es
fisttps
inc
xchg
stos
jp
or
lret
xlat
fdivrl
ror
add
jno
in
jg
int3
dec
inc
ret
lea
mov
in
daa
out
jp
push
rcll
es
bound
jecxz
inc
cwtl
jle
mov
shrl
fiaddl
fsubrl
test
dec
dec
into
dec
call
pushf
inc
fildl
jmp
jns
popa
mov
or
inc
dec
mov
inc
shlb
dec
pop
aam
pusha
bound
int
dec
mov
repnz
inc
add
out
sahf
mov
dec
jl
cmp
pop
movsl
cmpsl
ss
sbb
pusha
out
dec
shll
shlb
mov
lret
dec
pop
push
inc
into
and
fcoms
arpl
orl
adc
cmp
je
cmp
fwait
insb
scas
int
xchg
push
lret
cmc
push
int3
es
lds
sbb
add
popa
xor
mov
scas
popf
mov
inc
pop
scas
addr16
add
vmread
outsl
scas
pop
sbb
pop
push
jle
std
and
jae
pop
dec
and
icebp
addr16
mov
cmp
inc
scas
sub
xchg
push
add
insb
aad
mov
xchg
sub
cmp
test
add
pop
das
and
sbb
test
mov
push
pusha
inc
xlat
dec
xor
adc
fists
or
rorl
mov
adc
sbb
sub
mov
push
mov
lods
test
testb
jg
sbbl
xor
jno
ficoms
xor
pop
add
loopne
ss
sbb
push
subb
pushfw
and
cmp
je
rdmsr
mov
and
cmpsb
mov
stos
mov
sbb
aam
mov
lret
hlt
loopne
cmpsl
inc
mov
ret
clc
repnz
and
add
cld
mov
pusha
sarl
cltd
pop
mov
jo
mov
cmp
jb
inc
or
cmpsl
mov
push
fistl
int
push
imul
push
mov
scas
mov
sub
sbb
rclb
pop
aaa
jp
push
sub
andb
jnp
sub
mov
inc
test
inc
xchg
clc
mov
adc
dec
add
inc
mov
xor
out
mov
int
ss
pop
ret
bswap
mov
cmp
or
mov
push
xchg
pop
mov
sub
dec
scas
pop
xor
jnp
dec
fcmovne
push
out
enter
mov
mov
mov
repnz
fiadds
inc
jge
mov
dec
and
outsb
push
fisttpl
scas
rcpps
sub
dec
sub
mov
cmp
pop
sbb
popf
dec
lods
cmp
push
imul
mov
insl
addr16
lret
imul
push
lahf
aad
or
insb
pop
sub
xor
sarb
out
push
push
mov
pop
mov
pusha
sbb
aam
xchg
shl
cmp
add
std
js
aam
and
nop
inc
icebp
nop
sbb
add
loope
sub
cmp
jns
roll
sub
and
jle
jbe
aas
je
out
es
lock
inc
pop
loopne
add
jo
pop
pop
push
iret
cmpsb
pop
ja
or
push
add
lock
push
adc
pop
push
out
outsb
and
sub
jecxz
and
pop
xchg
xchg
xor
popl
in
mov
pusha
daa
sub
cmpsl
mov
jbe
stos
inc
jecxz
jge
lahf
pushf
cwtl
sbb
push
repz
insl
loope
into
add
sti
jbe
jl
stos
fstpt
int
aam
loop
push
popa
push
adcb
cwtl
inc
scas
push
mov
mov
inc
push
push
in
xchg
mov
sbb
aas
xlat
leave
pop
fildl
mov
xchg
icebp
mov
or
jle
shl
loopne
pop
cmpb
inc
movsb
add
jns
mov
lods
mov
xor
push
ret
lods
inc
cmp
into
xchg
popf
dec
adc
mov
out
xchg
sbb
ss
or
ret
lcall
outsb
push
idivb
push
inc
iret
jno
ds
push
pop
jb
lock
pop
fsubl
adc
or
movsl
jge
pop
aam
or
xchg
outsb
sbb
push
sbb
mov
cmp
hlt
repnz
mov
loope
hlt
xchg
or
shl
sti
fisttpll
cmp
mov
push
jae
cmp
mov
mov
leave
fbstp
sahf
mov
imulb
xor
xorb
iret
loope
sbb
dec
inc
adc
out
movsl
cwtl
scas
rol
test
js
xor
jbe
jb
jne
jp
xchg
daa
pushf
sysenter
out
push
or
scas
dec
xlat
cmp
add
and
jnp
movsl
bound
sbb
popf
jmp
leave
lods
xchg
jg
xchg
xor
mov
mov
xor
xor
idivl
xchg
and
mov
pop
les
xor
fadds
push
pop
pop
loop
mov
push
mov
pop
aas
ds
pop
mov
mov
pop
fistl
mov
push
and
inc
cmpl
pop
aas
pop
mov
sbb
in
fwait
push
sub
push
sbb
inc
xor
jae
lea
pop
cli
negb
jae
fstpt
ja
bound
lahf
add
imul
idivb
fstpl
pop
sbb
xchg
dec
jmp
or
movsl
lret
popf
hlt
les
mov
mov
stos
dec
or
mov
imul
and
xor
scas
shl
pop
push
roll
icebp
int
sbb
xchg
push
loope
in
movsb
xchg
popf
sarb
cwtl
outsl
jne
clc
xor
into
jg
and
cmc
sub
dec
dec
test
mov
cmp
cwtl
das
mov
cmc
lea
cmp
adc
imul
fidivl
imul
mov
add
repnz
lods
sbb
test
daa
pop
faddl
add
ret
rcrl
call
add
mov
stc
fidivl
xchg
push
std
inc
lret
cmp
arpl
data16
iret
dec
mov
popa
jb
stos
outsb
inc
rcl
sbb
out
mov
mov
cmp
vpshad
sub
cmpsl
push
setg
popf
shll
inc
loop
mov
ds
dec
adc
leave
repnz
test
mov
inc
push
out
pop
bound
sub
sbb
xchg
sub
adc
sbb
mov
arpl
lahf
scas
dec
iret
clc
cmpsl
flds
or
iret
mov
icebp
cmp
jnp
rorl
test
movb
cmp
push
inc
mov
cwtl
push
lret
std
test
movsl
or
mov
push
lea
pop
mov
sub
xor
jo
mov
pop
and
xchg
add
add
arpl
xchg
sub
js
inc
jno
insl
xchg
lcall
and
movb
fdivl
and
push
sti
loope
push
loop
or
jo
xor
dec
push
fcmovb
daa
xor
das
mov
pop
and
cmp
dec
xor
lahf
mov
sbb
jo
mov
int3
push
xchg
lock
jg
test
rclb
sbb
jp
mov
daa
push
inc
rcl
clc
pop
push
lods
in
fldt
pop
js
int3
into
aaa
add
cltd
pop
sub
outsb
jo
mov
shll
addb
pop
int3
dec
push
cmp
je
out
pop
sti
es
xor
out
jecxz
xchg
lods
cs
cmpsb
lcall
out
fdivrp
sub
pop
test
sbb
dec
xor
mov
jl
fdivs
sti
in
pop
rorl
adc
dec
popa
sub
jg
sbb
std
sub
stos
and
pusha
push
out
mov
std
loopne
aad
addr16
sub
sub
js
mov
adc
jbe
jmp
arpl
sbb
and
gs
mov
rorl
mov
mov
addr16
xchg
fs
mov
jbe
cwtl
xor
mov
push
mov
dec
xlat
push
jae
std
sbb
xor
mov
xor
push
mov
mov
das
dec
xchg
push
insl
or
sub
mov
sub
dec
adc
int
ds
out
jno
cwtl
and
mov
int
test
fucomi
dec
mov
cmp
imul
cmp
into
test
pusha
mov
adc
adc
mov
pop
stos
mov
mov
loop
jb
ljmp
mov
lahf
mulb
pop
sbb
movsb
fcmovbe
pop
fs
dec
aaa
fstps
test
sub
in
clc
push
mov
xor
cs
cltd
jb
es
or
cmpb
in
repnz
jle
sub
adc
xor
dec
pop
leave
and
inc
mov
dec
mov
cmp
cmp
popf
cmp
pop
mov
inc
push
add
dec
pop
and
cmc
insb
stos
imul
xor
cmc
add
adc
pop
cs
lds
out
in
pop
cli
scas
je
xchg
mov
cmpl
insl
mov
mov
xchg
push
repnz
fcmovnu
mov
mov
gs
cmp
lock
nop
nop
nop
mov
sbb
hlt
jl
lods
add
lods
or
test
cli
mov
jnp
inc
jp
pop
mov
js
sahf
pop
cmp
pop
jmp
enter
mov
mov
add
mov
cld
psadbw
inc
lret
js
iret
orl
xchg
add
lret
mov
push
mov
push
jle
mov
sub
or
inc
dec
mov
xchg
icebp
jg
or
pop
add
pop
sarb
push
add
mov
inc
dec
sahf
aam
dec
pop
push
call
sbb
repnz
nop
inc
int
ret
pop
cli
xlat
or
and
push
into
xlat
mov
es
jb
add
idivl
clc
and
jnp
cmp
cmp
and
or
mov
add
fildl
inc
mov
mov
push
pushf
sbb
mov
sbb
cmp
clc
xor
stos
mov
lahf
sbbl
ficoms
les
push
jne
lret
mov
popa
add
inc
or
inc
jg
dec
xchg
xor
sbb
aad
je
jns
or
dec
push
adc
push
mov
scas
ds
adc
xor
and
inc
pop
mov
xlat
repz
imul
push
and
insl
cmp
sub
jg
add
je
inc
addl
mov
mov
and
fcomp
mov
pop
add
dec
jl
nop
es
adc
mov
cmpl
jb
into
insb
rorb
sbb
mov
inc
das
rclb
sub
js
sub
xor
adc
add
popa
pop
les
lods
mov
andl
arpl
lods
sbb
jnp
sbb
inc
inc
sub
aad
andl
push
push
sbb
dec
call
xchg
test
mov
inc
fwait
cli
xchg
sub
mov
fistl
mov
fcomps
or
push
mov
lea
add
pop
les
out
loop
sbb
jmp
sub
jmp
cmp
iret
or
sub
pop
lret
push
pop
iret
in
dec
test
cmp
rcrl
mov
lock
sbb
shrb
push
mov
xor
and
cmp
inc
popa
mov
adc
aad
aad
add
test
in
push
aas
lds
xlat
add
jmp
dec
cmp
mov
test
adc
les
adcl
leave
loope
add
adc
inc
scas
pop
cmp
fcmovnbe
inc
daa
xorb
add
movsl
call
xor
enter
fmuls
add
sub
popa
lods
sahf
es
dec
nop
or
mov
pop
push
fldl
push
dec
pushf
lds
pusha
pop
pop
sbb
mov
shrb
mov
pop
mov
aas
fwait
movl
cmp
sub
push
aad
adc
push
xchg
jl
cmp
sbb
pop
mov
fcmove
push
daa
dec
xor
hlt
xor
rorl
out
gs
lds
int3
scas
mov
xor
inc
pop
and
ret
xor
popl
cmp
cmc
repz
test
cld
insl
outsb
movsl
xchg
aaa
jmp
add
adc
push
mov
arpl
adc
imull
inc
pop
mov
je
sahf
ja
sarl
pop
inc
clc
adc
addr16
inc
fdivr
mov
push
cs
or
ss
lock
xor
and
sbb
dec
shr
mov
movsl
outsb
shll
xchg
ret
and
pop
mov
and
mov
sub
std
adc
inc
push
mov
mov
scas
fwait
insl
lods
lret
cmp
and
mov
and
cmp
andb
sbbl
mov
push
cld
or
cmpsl
rcll
xlat
sarl
inc
test
out
xchg
ret
push
imul
sarb
push
xor
mov
mov
cltd
out
fwait
sub
dec
insl
aaa
xor
ja
adc
jae
xlat
push
mov
mov
ficoms
inc
xor
mov
test
fcmovu
sbb
scas
xchg
xchg
add
in
adc
sbb
dec
jge
fsubl
adc
sarl
mov
mov
out
enter
jmp
dec
popf
idivl
sahf
cmp
mov
add
xlat
ja
xor
or
add
push
jl
and
adc
mov
xor
cmp
add
fstl
inc
push
out
sar
jmp
mov
adcl
push
xchg
repnz
int
popl
fnstenv
xchg
ss
jge
and
insb
fistpl
aam
loop
add
mov
divb
in
jbe
xchg
mov
movsl
xor
inc
test
mov
and
mov
and
sub
jnp
lcall
addr16
les
mov
or
mov
pop
xor
or
jno
subb
sub
xchg
aad
cmpsb
test
stc
or
loope
sub
test
or
loope
cwtl
not
mov
arpl
les
xor
mov
or
stc
ljmp
sub
shlb
icebp
push
mov
xchg
lcall
fwait
and
sub
gs
outsl
movsl
jl
test
ficompl
sub
adc
aad
repnz
imul
adc
pop
lcall
scas
mov
das
sbb
pop
aaa
and
xchg
adc
mov
add
pop
or
rol
and
rol
jo
and
push
mov
mov
outsl
int
dec
rcrl
push
cmp
sub
push
xor
sub
push
scas
mov
int
pushf
jg
jae
push
fstpl
nop
loop
push
jmp
pushf
sahf
push
out
fistpl
mov
or
pop
jecxz
arpl
lret
and
push
pop
sbb
pop
pop
xor
pop
cli
jle
insb
pop
xchg
lahf
mov
jle
mov
int3
dec
int3
aad
push
add
bound
cmp
aaa
movsl
call
bnd
fiadds
in
cmp
and
sbb
jae
mov
and
lret
mov
adc
popf
cmp
test
out
into
dec
out
mov
push
clc
cmp
push
aaa
sbb
addr16
inc
mov
inc
dec
xchg
loop
mov
jecxz
xchg
data16
sub
cwtl
lahf
loope
out
insl
popa
cli
pop
xor
dec
test
mov
sbb
jecxz
std
outsl
divb
ror
mov
fucomp
pop
sub
sub
test
out
push
stc
loop
or
cwtl
out
jno
in
test
push
shll
cmp
ret
shrb
scas
sbb
dec
mov
sbb
cmc
push
into
push
pop
lods
lahf
sbb
add
arpl
addb
jo
test
aas
fnsave
mov
mov
fiaddl
cmpb
insl
jp
out
inc
xchg
and
mov
mov
xor
push
or
fldl
fdivl
push
xchg
adc
insl
sbb
mov
popf
pop
and
je
cli
pop
adc
mov
gs
mov
stos
mov
fs
push
push
fildl
mov
push
mov
inc
outsb
add
testl
std
xchg
out
xlat
es
add
aas
inc
fdecstp
add
insl
je
cmp
xchg
sahf
lcall
fcmove
push
lds
addr16
xchg
mov
add
dec
fstpt
jecxz
pop
jmp
out
ja
data16
xchg
mov
insb
popf
push
lret
insb
adc
aaa
jmp
sbb
sub
add
enter
cld
aas
fucomip
pop
arpl
mov
scas
fsubrp
mov
xor
or
inc
stos
adc
mov
and
mov
pop
or
pop
in
jnp
aaa
js
outsb
xor
scas
ss
or
imull
cmp
mov
sbb
rcll
sub
jl
jle
mov
jb
sbb
and
add
jl
idivb
fcmovnbe
nop
lods
loop,pn
imull
lods
test
das
cltd
mov
fdivs
or
fs
leave
mov
or
xchg
jb
test
addl
ds
add
aas
xchg
mov
xchg
mov
shrb
jno
inc
and
jl
add
divl
fidivs
mov
sbb
clc
cli
mov
mov
sbb
mov
mov
cmp
cs
stc
mov
lret
or
sub
cltd
push
shrb
loop
enter
ret
pop
and
xchg
movsl
cltd
xlat
xchg
sub
and
push
add
out
mov
jo
test
push
je
and
jp
jle
xor
addr16
add
mov
xchg
cwtl
loop
mov
lret
vinserti32x4
hlt
cmp
dec
dec
inc
or
cmp
ret
mov
adc
ljmp
push
ds
subl
adc
mov
sub
insl
pop
pop
pop
pop
aam
xchg
cmp
mov
sahf
aad
inc
or
fldl
enter
test
jnp
mov
add
pop
mov
bnd
stos
fistl
popa
push
mov
ljmp
push
inc
cvtps2pd
scas
add
sbb
mov
jl
enter
adc
inc
scas
xchg
mov
sub
dec
mov
clc
adc
pop
jle
jmp
stos
cvttps2pi
mov
pop
dec
imull
jp
cli
adc
lret
movsb
cld
ljmp
insl
cmp
jns
cmp
stc
test
and
cwtl
mov
dec
inc
mov
stos
adc
xchg
rcrl
sbb
outsb
xchg
dec
or
lds
pop
inc
or
jl
cmp
fdivrs
std
xor
xor
sahf
adc
iret
fsts
ficomps
hlt
in
cmpsb
movb
adc
enter
or
loopne
xchg
inc
out
cmpb
mov
movsl
pop
jno
outsb
mov
mov
lods
mov
pop
or
dec
sbb
pop
into
xchg
push
js,pn
fists
mov
adc
mov
loopne
dec
fdiv
ljmp
fstpt
dec
dec
das
bound
mov
in
sbb
push
mov
mov
lock
test
shl
dec
fadds
and
aam
xchg
jge
or
push
mov
dec
adc
js
push
jns
mov
in
aas
aaa
mov
pop
movsl
scas
inc
add
flds
icebp
movsl
mov
outsb
cwtl
fstpl
stos
sti
push
aam
sarl
pop
cmpsb
mov
gs
std
je
out
mov
pop
xchg
fmul
xor
cmp
aas
jae
xor
add
adc
faddp
ja
ljmp
ljmp
sbb
push
cmp
pop
xor
and
xor
dec
mov
and
pop
sbb
cwtl
xchg
add
or
shrb
xchg
and
outsb
arpl
subl
rclb
push
out
lods
les
cmpsb
adc
stos
xlat
cmp
mov
or
mov
inc
xor
or
fcomp
out
push
fbld
xchg
xor
add
mul
aam
adc
xor
mov
lods
loopne
sarl
mov
dec
xor
int
push
lcall
fisttpl
lods
fcoml
jmp
ret
rcll
loope
es
pop
nop
xor
stc
xchg
cmp
xchg
dec
adc
lock
fistl
jbe
cmp
mov
vmread
pusha
fldenv
aas
lret
mov
mov
int
dec
lcall
sub
fsubrs
jecxz
leave
pop
xchg
roll
fldl
and
imul
stos
push
sbb
vpor
andl
rclb
add
std
cmp
or
mov
mov
pusha
insb
mov
cmp
mov
movsl
sub
xor
jns
jns
jns
pushf
mov
in
jb
jo
and
ret
lcall
sub
jge
xchg
jns
jb
adc
and
and
iret
arpl
roll
mov
push
xchg
das
aad
test
in
adc
push
inc
inc
bound
bound
mov
mov
pop
fistl
dec
sbb
stos
mov
xchg
inc
sahf
mov
mov
dec
adc
hlt
lea
sub
xchg
subl
inc
and
sub
push
cmp
adc
push
aas
loope
fcomip
push
mov
xor
or
inc
iret
ffreep
jl
movsl
mov
cmp
sub
add
test
xchg
and
inc
pop
stos
mov
faddl
pop
sbb
jle
mov
jg
test
cmp
cmp
dec
or
push
scas
jecxz
sarb
jecxz
je
or
imul
std
sub
xor
cmp
jb
lahf
jge
mov
push
push
insl
mov
dec
repz
or
into
test
pop
sub
add
ror
popa
js
aad
adc
cmp
add
cwtl
mov
adc
out
insb
mov
xchg
xchg
inc
sahf
je
inc
pop
push
mov
std
les
test
out
pop
mov
sub
enter
movsb
inc
push
bnd
push
mov
outsl
inc
mov
xor
repz
xchg
push
cmp
andb
out
dec
mov
dec
jecxz
xor
pop
push
jle
xchg
mov
xchg
les
sub
fwait
adc
mov
jg
fcoms
adc
push
jbe
in
std
sbb
jnp
pop
js
outsb
and
inc
fbld
cmpsl
add
sbb
cs
mov
xor
push
sbb
mov
inc
bound
jmp
loope
in
scas
lods
xlat
adc
jle
mov
bound
loope
lret
jns
xor
push
mov
xor
pop
movsb
test
pop
mov
stos
push
mov
rcr
rcr
loop
arpl
pop
fmuls
shrl
icebp
push
std
cmp
jne
stos
daa
imul
sub
ss
bound
adc
adc
filds
jnp
cltd
pop
rolb
adc
xchg
pop
imul
pop
cmc
push
test
and
popa
in
iret
repnz
mov
cmp
mov
aam
outsb
cmp
imul
cmpsb
pop
mov
jg
hlt
adc
mov
xor
das
rcrb
dec
iret
jmp
xchg
sti
cmc
fcmovnbe
test
xchg
and
je
push
dec
add
les
xorl
decb
mov
cmp
jnp
push
lret
pop
ret
ret
pop
add
mov
std
mov
rolb
nop
add
fnstsw
cmc
lret
mov
pop
pop
imul
adc
mov
pop
lret
and
pop
outsl
pop
xor
lcall
push
into
jbe
out
fsts
fcom
sahf
and
clc
ss
js
mov
push
repz
pop
repz
cmp
lcall
pop
testl
push
inc
jae
inc
xor
gs
push
pop
pop
jns
repnz
add
add
imul
loopne
je
popf
sbb
imul
mov
sbb
adc
pop
jnp
add
in
xlat
pop
lcall
xor
mov
inc
mov
test
imul
mov
je
nop
loope
popf
or
jecxz
mov
push
cld
lahf
sub
dec
pop
fstps
aas
xchg
stos
mov
test
pop
hlt
adc
jb
sti
out
andb
cmpsb
leave
faddl
xor
cmpsl
bound
push
pop
add
and
and
push
inc
and
and
dec
pop
cld
jae
into
ja
scas
cld
push
or
mov
imul
lahf
in
push
pusha
insb
adc
jge
xchg
out
inc
daa
mov
fstpl
jg
stc
push
or
test
jl
mov
rclb
call
jno
popa
mov
mov
fldcw
adc
scas
int
or
stc
les
shlb
mov
fcmovnu
xor
imul
mov
jp
xor
cmp
push
loopne
loope
dec
jo
adc
in
pushf
pop
enter
inc
sbb
lock
dec
mov
call
insl
jae
add
fdivs
js
cli
dec
cltd
or
in
lods
fistps
adc
lds
cli
test
dec
inc
push
mov
into
cmp
js
mov
into
pop
loope
inc
movsl
scas
aam
pop
xchg
addr16
sub
pop
inc
xchg
aam
xlat
sub
inc
inc
push
shl
inc
xor
mov
pop
jp
or
insb
fs
out
cld
fcmovu
xchg
enter
ljmp
mov
in
sahf
pop
mov
out
push
mov
mov
imul
jns
mov
fsub
js
test
insb
jmp
cmp
and
aam
gs
out
movl
xor
arpl
mov
pop
jb
mov
rcr
cmpsb
sbb
lcall
mov
push
fbld
sbb
test
jo
or
ret
jl
mov
insb
shl
xlat
test
clc
or
cmpsl
pop
arpl
add
mov
mov
stc
push
cmp
pop
insl
mul
incl
js
mov
sbb
sbb
fistps
mov
test
cmpl
test
adc
cmp
addr16
mov
xchg
adc
stos
call
xor
and
in
stos
jle
adc
sarl
or
dec
call
adc
cltd
out
movsl
cltd
sahf
mov
nop
imul
mov
imul
stos
mov
sub
adc
add
cmp
mov
bound
mov
jb
ss
mov
mov
push
pop
pop
fsts
push
xchg
mov
jle
sbb
mov
out
mov
inc
mulb
dec
cli
mov
jo
repz
out
xchg
mov
push
mov
cs
test
test
and
or
dec
rcll
je
ret
or
jl
sub
inc
sub
mov
jmp
inc
adc
mov
jno
cmp
aad
sub
cwtl
pusha
push
cmc
pushf
xchg
test
and
stos
dec
mov
cld
jo
sbb
fldl
aas
inc
pop
sti
aad
nop
sub
pop
fisubs
cmc
int
dec
sub
iret
out
rcr
outsl
loop
mov
xchg
test
ja
test
movsb
push
data16
cmp
or
dec
add
fs
mov
out
ret
dec
inc
filds
push
es
arpl
imul
mov
sub
rorl
mov
mov
push
inc
add
xchg
sub
push
cmpsl
bswap
add
cmp
ret
stos
dec
jno
es
popa
fbld
pop
lds
in
lahf
cltd
imul
les
out
sarl
and
jbe
mov
movsl
fidivs
and
test
or
lcall
inc
push
mov
les
lods
mov
lods
fsubr
pop
jge
xbegin
mov
lahf
je
sub
jne
dec
adc
and
sbb
icebp
mov
into
push
inc
enter
imul
nopl
int3
jecxz
jl
mov
push
mov
test
aad
mov
lcall
aaa
adc
leave
shl
or
jae
xchg
fldl
cmp
jb
loope
fstps
ficomps
pop
and
dec
add
cmp
lret
pop
out
pop
mov
mov
dec
jp
mov
movsl
xor
in
push
cmp
cmp
sbb
dec
sub
sbb
dec
fs
push
insl
int3
lds
and
mov
sub
fwait
add
dec
push
test
sbb
ja
inc
movsl
mov
and
jle
jge
xchg
hlt
jno
mov
jp
scas
cs
mov
pop
xor
out
js
lea
mov
bound
cmp
inc
xlat
xchg
push
push
cmp
adc
ja
pop
add
sarb
fcomps
and
mov
and
mov
pop
sarb
jecxz
enter
mov
fisubl
pop
sbb
pop
xchg
clc
mov
mov
icebp
sub
mov
stos
adc
push
mov
mov
stc
jb
mov
imul
dec
adc
jbe
inc
mov
or
sub
daa
xchg
inc
jge
pop
js
adc
lret
jl
xchg
mov
out
push
leave
cmc
pop
or
and
in
movsb
imul
pop
int
ljmp
call
xlat
fs
mov
dec
xchg
mov
repz
dec
pop
pop
outsl
pop
lock
sahf
std
iret
mov
sub
mov
push
push
push
nop
dec
jmp
dec
jmp
pop
mov
xchg
push
pusha
mov
leave
jmp
int3
out
mull
cmpl
cmp
push
cmp
loope
push
sbb
sub
and
jle
je
sti
das
jbe
shlb
out
sbb
out
xchg
lahf
lea
mov
sti
iret
rcr
or
cltd
out
mov
xchg
imul
pusha
out
lods
jmp
jle
in
sbb
and
jno
idivl
frstor
xchg
and
push
idivb
mov
cmp
or
push
xchg
in
lods
es
mov
in
cmp
jno
in
mov
push
sahf
fnstcw
mov
sbb
out
push
mov
in
push
dec
dec
lock
dec
jecxz
imul
pop
fcomp
add
scas
pop
popa
pop
ret
xchg
scas
sbb
push
in
mov
jle
and
jl
aas
mov
into
inc
jb
cmp
push
pushf
ljmp
sub
sbb
stos
data16
mov
out
add
pop
in
popa
daa
in
cltd
pop
lock
add
stos
push
push
sbb
push
sahf
out
jae
aam
or
idiv
jo
xchg
cmp
testb
push
dec
repnz
mov
aaa
lahf
hlt
popf
push
test
test
testb
pop
daa
int
adc
adc
mov
sbb
mov
inc
cmp
cmp
clc
int
jmp
out
add
ret
pop
dec
pop
fnsave
push
loopne
aam
dec
repnz
lret
xor
xrelease
push
int
ss
dec
dec
bound
lahf
es
pop
xchg
dec
fsubrl
leave
add
jle
mov
stc
gs
into
enter
pop
push
fmul
subl
testb
imul
xlat
test
sahf
xlat
push
xchg
stc
subl
mov
xor
in
sbb
pushf
pop
jae
push
xlat
and
xchg
pop
adc
push
xor
lret
dec
jmp
adc
test
imul
jnp
arpl
push
push
cmpsl
lcall
sbb
xchg
pop
add
inc
jge
ss
shlb
jle
enter
mov
aam
jae
mov
fs
fwait
inc
enter
popa
call
scas
call
out
xchg
or
cmp
out
mov
outsb
adc
in
mov
lea
push
adc
insb
cmp
inc
sub
mov
mov
jns
inc
mov
sub
or
push
adc
cwtl
mov
sub
mov
mov
mov
loop
sahf
popa
pop
popa
je
mov
jno
int
clc
mov
hlt
lcall
pop
jecxz
jae
jb
mov
loope
mov
and
mov
cli
mov
pop
icebp
adc
mov
ja
loopne
sbb
inc
and
scas
sbb
cmpsb
sahf
push
insl
jge
rclb
iret
jge
cmp
movsb
dec
je
fpatan
sbb
pop
jle
dec
sub
fdivrl
stc
mov
hlt
add
ret
dec
jbe
sbb
pop
pop
adcb
push
rolb
lds
cmc
and
inc
push
and
ret
gs
lods
xor
popf
cmp
mov
push
and
ja
push
ret
mov
shrb
cmpsb
fwait
in
and
mov
mov
mov
fisttpll
int
xchg
or
leave
rcrb
ss
aam
ret
adc
sub
inc
sub
sar
pop
stc
pop
rorl
mov
outsl
push
mov
push
sti
lds
push
sbb
xchg
cltd
sbb
xor
test
xchg
mov
xchg
or
scas
loope
test
inc
insb
pop
cmp
es
sbb
out
jno
out
mov
icebp
loope
push
sub
rep
xor
ficomps
nop
paddusw
movsb
mov
cld
xor
movsb
dec
pop
lcall
push
xchg
sahf
shrl
stos
inc
add
xchg
ss
int
nop
cli
xor
mov
fcom
call
add
lahf
adc
leave
es
mov
mov
int3
decb
ljmp
sbb
mov
mov
jae
inc
fdivs
ficoms
ret
dec
sbb
inc
inc
sbb
fildll
xchg
out
add
mov
sbb
fs
flds
popa
jmp
cmc
or
dec
cmpsl
jl
xchg
arpl
imul
fwait
cmc
loop
or
pushf
push
pusha
popl
add
outsl
or
inc
std
and
inc
cmpsb
ror
dec
xchg
mov
sub
xchg
dec
scas
inc
dec
lret
mov
sbb
xchg
imul
xor
lock
dec
cs
inc
aas
out
mov
jbe
pushf
fsts
out
lahf
lret
mov
sbb
andl
lahf
dec
shrb
cmp
nop
cmpsl
xor
mov
movsb
xchg
xchg
incl
jle
les
dec
push
xchg
orl
dec
icebp
inc
xchg
xchg
jl
dec
inc
vmwrite
lds
and
jne
mov
cmpsl
add
and
in
xor
movl
inc
pop
fiadds
fstl
jl
cmp
repz
xorb
xor
lret
inc
sbb
cmp
jge
mov
js
or
or
adc
mov
movsb
cmp
sti
dec
imul
cmp
sub
js
xlat
adc
adc
push
adc
xchg
aas
enter
mov
int3
mov
inc
scas
arpl
shll
mov
mov
lea
lock
outsb
les
clc
xchg
inc
lea
sbb
mov
int3
cli
push
movsl
xor
in
push
cmp
dec
filds
jg
int
leave
out
adc
xchg
scas
jp
adc
push
xor
xchg
or
push
pop
lcall
jae
sbb
mov
xchg
jne
sti
jno
outsb
mov
cs
sub
push
scas
fnstcw
ss
jle
adc
pop
push
jge
cmp
loopne
inc
mov
insb
cli
sub
lea
or
lods
pop
and
xor
sbb
jg
xor
cli
push
imul
jo
pop
mov
sub
aam
ja
mov
lock
sub
sbb
icebp
fadds
sub
and
dec
and
mov
pop
push
adc
ss
stos
std
loop
pusha
mov
xor
dec
pop
ss
in
mov
call
pop
ljmp
dec
xchg
push
shll
pop
xor
jne
mov
dec
mov
dec
cmp
xchg
imul
bound
sub
adc
cmc
pusha
cmp
jo
cmpl
and
sub
xor
jb
and
es
bound
pop
xorb
js
loopne
cwtl
test
jle
pop
or
jno
andl
mov
xchg
sbb
aad
outsl
mov
icebp
pushf
inc
or
hlt
inc
mov
jp
add
in
fistps
aad
fadd
cmp
jbe
mov
lret
in
pop
xor
clc
jnp
mov
dec
push
mov
pushf
cmp
bound
cmpsb
stos
dec
dec
jecxz
sbb
mov
into
push
scas
out
inc
pop
push
pop
pushf
mov
loope
mov
jp
ffreep
fimuls
lcall
lea
dec
inc
sub
fsubs
and
repnz
inc
jo
sub
cmc
daa
pop
xchg
lcall
jl
mov
outsb
mov
jl
andl
add
sti
sub
push
sub
ficoms
and
in
cmp
push
lock
iret
icebp
mov
push
xchg
adc
jno
shrl
stc
popf
stos
sub
fadds
add
scas
pop
pop
push
pandn
xchg
pop
pop
aaa
add
pop
inc
and
lret
mov
xchg
lcall
mov
repnz
mov
mov
shlb
aaa
hlt
test
mov
xchg
outsb
sub
or
outsb
ljmp
fcompl
jg
mov
sahf
sub
testb
add
popa
mov
jg
mov
inc
rolb
push
push
sub
lock
mov
pop
jmp
dec
aas
add
mov
jecxz
adc
add
test
mov
into
outsl
pop
out
push
push
dec
lds
cmp
mov
loope
jb
cvtdq2ps
cld
shr
xchg
inc
fs
orb
outsl
inc
cmpsl
pop
je
rorl
rorb
leave
add
and
popa
cwtl
movsl
loopne
sub
aaa
test
cmpsl
cmp
dec
jae
pop
pusha
bound
fisubrs
movsl
inc
push
push
dec
and
jle,pn
add
xchg
and
or
punpcklbw
inc
imul
ja
mov
arpl
xlat
fistps
mov
iret
fisttpl
in
adc
xchg
xor
add
push
jmp
outsb
dec
sub
jge
sbb
jmp
add
xchg
jbe
stc
mov
jmp
scas
imul
or
cmp
cli
inc
xor
xor
icebp
mov
add
ljmp
and
sub
inc
clc
pusha
push
fadds
in
pop
cmp
adc
out
stc
cmp
out
mov
pop
xchg
cmp
lretw
idivl
xchg
xchg
add
xchg
in
mov
and
mov
or
dec
sub
and
jge
add
movsb
dec
sbb
aas
cmp
outsb
lea
imul
or
jae
pop
mov
fucomi
adc
lods
jge
or
pop
pop
es
or
pushf
ljmp
sub
pop
mov
add
push
pop
inc
cmp
inc
cli
fs
dec
add
mov
mov
jne
dec
and
add
addr16
aas
adc
outsl
add
stos
rorb
sbb
cmp
lahf
leave
xlat
jne
fidivrs
push
mov
inc
lahf
test
dec
fldl
daa
pop
mov
xorb
inc
mov
inc
fmuls
sbb
jmp
adc
cmp
nop
jg
lods
loop
gs
jno
jle
and
mov
cmp
xchg
repz
test
mov
nop
xor
mov
xchg
sbb
fildll
into
dec
push
nop
or
xor
sbb
mov
mov
cmp
outsb
add
adc
insb
adc
shrl
pop
rcrl
ja
lret
lds
shll
jae
daa
shrb
repnz
rorl
mov
xor
call
imul
stc
fnstenv
lret
inc
das
insl
pop
push
add
add
outsb
sbb
adc
fdivl
fistps
mov
lret
push
fs
cmpsl
shl
in
mov
or
mov
mov
xor
call
fsubrl
mov
js
in
lds
push
cmc
adc
mov
inc
cs
push
fimuls
push
sti
pusha
adc
jne
dec
push
dec
loope
sbb
dec
neg
xchg
mov
sub
push
sbb
mov
add
sub
mov
mov
sbb
loope
test
mov
adc
addr16
fmulp
loop
xor
pop
pop
mov
mov
sahf
iret
or
arpl
sbb
inc
cmpsl
adc
mov
jmp
inc
cld
sub
ror
movsb
test
xor
js
pushf
mov
adc
stos
push
xchg
addb
cmpl
popa
inc
loop
call
or
jle
pop
jne
test
mov
and
xlat
mov
jae
cmp
and
mov
jmp
popf
imul
xor
jnp
xor
mov
push
xchg
mov
pushf
fildll
cld
aad
xor
ljmp
sti
leave
movsl
aas
lret
test
es
adc
xor
mov
pushf
or
dec
inc
xor
mov
es
sbb
add
aaa
jbe
mov
test
sbb
add
push
xchg
test
mov
jg
or
pushf
add
stos
mov
sti
cmp
mov
add
or
arpl
test
or
dec
pop
push
inc
inc
insl
mov
push
mov
call
inc
push
orb
and
push
xchg
rcl
xchg
cmc
loopne
xor
push
xchg
adc
dec
cmp
pop
mov
js
adc
adc
call
mov
pop
push
bound
dec
mov
mov
or
lcall
jg
mov
jb
shlb
ljmp
mov
std
addr16
mov
out
pusha
xor
mov
rorl
jmp
mov
sub
pop
adc
add
xchg
nop
lods
cmovle
mov
jl
add
cmp
clc
mov
and
dec
mov
mov
mov
push
repz
jg
lahf
das
loopne
minps
push
shl
inc
sbb
into
add
fsubs
push
cmpsb
out
cmp
xor
cld
xor
push
inc
sub
sub
pop
into
subb
jb
cmc
ffreep
repnz
pop
xor
cmp
inc
cmp
loopne
je
inc
clc
mov
cltd
cld
mov
rol
push
jo
pop
xchg
imul
testb
and
iret
int3
pop
out
cmpsb
sub
push
mov
xchg
lahf
push
push
cmc
insb
sbb
nop
mov
lahf
pop
lcall
and
push
repnz
loop
push
cmpsl
fbld
loopne
fidivs
ret
stos
mov
lret
jle
arpl
adc
inc
imul
jns
mov
sahf
xchg
call
bound
pop
stos
xor
test
mov
cmpsl
scas
xchg
daa
mov
or
xchg
sub
aaa
into
aam
mov
sub
faddl
mov
outsb
pusha
adc
fmuls
movsl
pop
enter
push
dec
mov
roll
popa
outsl
mov
scas
inc
jl
into
aam
inc
xor
mov
mov
cmp
inc
sbb
mov
mov
ds
ret
int
cmp
adc
sarb
jo
inc
iret
aas
adc
push
add
mov
cmp
adc
notb
cs
adc
sahf
enter
add
add
movsb
testl
fdivs
jg
add
xor
pushf
inc
pusha
push
fsub
push
es
movsl
lcall
flds
mov
les
pop
cltd
das
jmp
push
push
test
outsb
cmpl
loopne
hlt
jae
out
adc
and
mov
pop
pop
lods
mov
stos
fiaddl
sub
pop
mov
lret
mov
sbb
into
mov
sbb
pusha
lret
rcrb
mov
sti
inc
lret
mov
add
cmp
aam
mov
or
jno
push
mulb
stos
jnp
dec
mov
push
mov
or
and
xor
out
push
js
xor
test
and
mov
repz
mov
aam
jl
jb
push
push
out
iret
je
xor
dec
push
sub
sbb
xchg
xlat
cmp
sbb
jmp
fsubl
sub
mov
out
mov
mov
cmp
inc
outsl
loop
adc
xlat
lds
cmp
aaa
jno
aam
cmc
sti
lea
dec
rolb
push
cmc
adc
daa
add
mov
nop
fisubrl
ss
in
inc
inc
cmc
mov
inc
sub
rcrb
js
and
les
and
jecxz
scas
jmp
cwtl
and
lea
inc
inc
inc
cmp
push
push
push
pop
jg
xor
lret
mov
jle
jp
lcall
and
retw
mov
fnsave
inc
hlt
pop
out
mov
jecxz
and
sub
pop
inc
or
mov
push
push
xchg
mov
mov
xchg
jnp
outsb
fs
mov
loop
or
in
pop
lret
adc
or
lahf
mov
jecxz
outsl
addl
ja
add
push
dec
mov
push
mov
mov
adc
adc
mov
pop
inc
mov
inc
or
aad
in
pop
sbb
push
iret
out
fstl
push
adc
loop
idivb
fsubs
push
shlb
or
push
or
or
sub
mov
stos
cmp
cmp
pop
movsl
add
sub
fxtract
pop
ret
sahf
js
jne
lods
jg
jno
fidivs
icebp
push
jl
mov
dec
fs
nop
in
divb
pop
outsb
shll
jne
or
push
pop
mov
inc
cmp
mov
daa
sahf
stos
in
mov
loope
stos
pushf
mov
outsb
mov
loop
pop
dec
stc
cld
mov
popa
or
xchg
lcall
xlat
cmp
push
cmp
lods
mov
add
adc
enter
inc
jae
out
jg
add
int3
cmpl
sbb
jge
mov
mov
jnp
xchg
mov
push
push
sbb
das
mov
ret
lret
push
cltd
lods
adc
adc
xlat
cwtl
in
in
in
cwtl
lahf
dec
ret
xchg
push
add
push
notrack
addr16
pop
mov
aam
xor
test
mov
mov
push
push
movsl
pop
arpl
inc
pminsw
and
push
and
pop
adc
dec
mov
adc
popf
cmp
adc
out
in
lea
loope
add
cmp
sub
fs
pushf
jno
fidivl
fwait
aas
fdivl
cmp
and
rorl
cmpsl
adc
xchg
cmp
in
shlb
dec
popf
ret
pop
xor
sbb
pop
scas
jmp
jp
inc
cmp
push
sbb
xorl
lret
pop
sbb
cwtl
pop
push
iret
jg
mov
xchg
ja
sub
mov
cmc
xor
into
iret
lret
dec
jecxz
sub
or
and
push
push
sbb
ja
out
fmull
push
pushf
cmp
or
adc
enter
push
adc
sub
xchg
fldcw
lods
and
or
sbb
scas
testb
push
push
mov
scas
shlb
jge
addr16
mov
out
pusha
sbb
out
mov
cmp
cmp
pop
push
mov
aad
cli
jle
mov
jl
cmp
sbb
cmpsb
stos
aaa
int
dec
inc
add
bound
or
cmp
aaa
insl
mov
xor
addr16
jae
ss
sti
pop
aad
xor
sub
mov
mov
dec
call
sub
and
jno
push
ret
lahf
divb
fadds
cmc
or
mov
or
stos
mov
mov
lds
mov
dec
jne
jb
adcl
xlat
shlb
mov
rclb
push
insl
insl
js
rdseed
jnp
mov
sub
add
push
mov
or
repnz
inc
into
and
ret
adc
js
sbb
in
xchg
pop
fcoms
xchg
fadds
fcomp
push
or
add
inc
adc
nop
subb
and
sbb
push
out
repz
data16
jae
adc
stos
gs
mov
sub
lahf
pop
mov
les
shl
lret
lds
lock
push
aaa
pop
mov
dec
push
sbb
and
sbb
clc
pop
loope
repz
inc
dec
jg
mov
cmp
xor
adc
cmp
pop
imul
jp
push
mov
testb
ljmp
xchg
or
loope
cmp
outsb
cmp
mov
daa
ja
push
jp
nop
lock
xor
mov
mov
testb
lea
pusha
movsb
out
dec
int
cmp
ds
dec
mov
xchg
lods
scas
jp
imul
mov
xchg
in
jbe
xchg
adc
dec
sub
push
daa
push
cltd
mov
imul
xchg
daa
inc
xchg
dec
lock
jo
lock
mov
sbb
dec
std
push
lock
mov
icebp
mov
movd
push
mov
inc
sub
sbb
std
imul
scas
loop
pop
leave
xchg
cs
sti
or
jp
movsb
les
or
addb
push
mov
das
xchg
insb
and
test
pop
lret
pusha
xchg
cmc
adc
stos
outsl
mov
sub
int3
cmc
clc
rcll
mov
fdivl
add
mov
dec
mov
cmp
sbb
push
fstl
repz
push
rorb
aam
aad
in
jno
outsl
jns
jle
outsl
outsb
dec
sbb
mov
add
addr16
ret
fsubrl
pop
push
dec
arpl
int3
movsl
movsl
in
stos
imul
mov
shl
repnz
and
lahf
in
pusha
xchg
lret
adc
fs
adc
lret
pop
dec
out
add
lcall
nop
fmuls
aaa
mov
pop
push
sbb
xor
nop
push
outsb
inc
call
mov
jge
fsubs
out
xchg
dec
lret
outsb
lcall
es
nop
imul
mov
into
mov
mov
and
push
push
jp
fdivrs
leave
jp
mov
jle
push
adc
pop
stos
lods
sub
cmp
cmpsl
or
mov
mov
rcrb
aaa
add
ds
push
jp
fbld
pop
in
pop
ret
rolb
loope
sub
sbb
xchg
push
xlat
mov
and
sahf
insl
push
push
int3
je
aad
arpl
sbb
bound
push
loopne
push
leave
pop
js
push
sub
in
shrb
mov
adc
sbb
jge
sub
repz
lret
testl
push
dec
es
sub
nop
pop
push
lds
dec
insb
fistpl
data16
push
out
mov
int
adc
jge
fisttpll
xor
xor
lds
cmp
cmp
int3
shrl
mov
push
mov
in
jo
outsb
mov
aad
out
lock
loopne
sub
sub
xchg
es
xchg
dec
add
jmp
push
and
mov
dec
inc
clc
or
cmpsb
and
mov
mov
addr16
add
clc
movsl
lcall
fwait
scas
roll
dec
or
mov
mov
in
data16
xchg
xor
lds
sub
scas
divb
rclb
loope
jae
and
into
bound
xchg
xchg
add
push
ss
sub
jns
jnp
in
fadd
lods
mov
les
mov
xor
repz
sbb
cli
jns
xor
repnz
and
or
xchg
scas
aas
test
xlat
les
cltd
repnz
nop
mov
mov
rcrb
xchg
mov
cmp
fstl
jle
shrl
int
clc
pop
fsubrs
inc
js
icebp
cmp
pop
xor
cwtl
rorb
cmp
jg
inc
adcl
sbb
sub
push
stos
aad
inc
fsubrl
and
jns
mov
pop
and
shrl
les
xchg
fcompl
outsl
int3
inc
dec
mov
jmp
sub
sti
jbe
or
outsl
dec
push
jns
jp
cld
adcl
out
fdivs
out
jnp
test
ss
leavew
dec
lock
mov
fiaddl
mov
sub
shlb
xlat
or
lret
mov
inc
cmpsl
mov
imul
xchg
mov
fistpl
mov
imul
sub
and
ret
add
jb
rol
into
adc
decl
inc
sub
testl
cmp
mov
jecxz
in
xor
lods
cmp
push
and
std
or
sarl
test
and
data16
xchg
dec
add
js
mov
push
clc
enter
insl
icebp
jb
ret
add
push
fs
jecxz
addr16
lock
mov
in
mov
cmpsb
push
mov
stos
sbb
push
ja
mov
adc
sbb
pusha
mov
inc
stos
or
sbb
adc
adc
lock
out
addr16
xchg
out
or
jg
pusha
lds
test
xrelease
mov
push
jne
adc
cmpsb
stc
in
jmp
mov
add
test
sub
add
jge
arpl
int
mov
lcall
mov
mov
icebp
repnz
pop
mov
in
fst
sub
lahf
cltd
iret
jmp
in
mov
xor
mov
lret
sub
int
push
enter
jbe
icebp
ljmp
pop
imul
dec
adc
xlat
aam
sarb
les
xor
or
lock
loop
jmp
rol
xor
xchg
xor
or
lret
es
cmp
stos
lret
push
daa
xchg
lods
leave
pushf
dec
fnsave
cmc
jbe
xlat
pop
mov
inc
lcall
dec
adc
mov
sub
or
loopne
or
loopne
cmpsl
out
jge
subl
gs
add
into
push
lock
pop
lret
iret
xor
push
jo
out
adc
mov
lea
jmp
push
std
or
outsl
jns
adcb
sbb
mov
out
mov
shrb
sub
xchg
mov
and
out
mov
mov
or
adc
and
jl
js
sub
inc
jge
movsb
and
cmpsl
push
add
inc
xor
push
cmpb
into
adc
mov
pop
mov
inc
inc
sahf
jb
lea
xlat
xor
andl
pop
ficomps
iret
aad
sahf
or
xor
sarl
push
movsl
aas
mov
into
clc
sbb
cmp
mov
mov
push
sub
mov
js
and
pop
subb
lea
lret
xchg
dec
sub
aad
shrb
ss
pop
or
je
ret
test
push
cmp
fwait
lahf
adc
push
lods
add
pop
pop
in
mov
jl
leave
mov
sar
cmp
dec
push
imul
xchg
push
arpl
aas
sub
mov
sub
dec
mov
fildll
mov
mov
xchg
cmc
lcall
sub
popa
jno
repz
adc
pushf
xchg
jo
mov
gs
pop
push
cmp
jb
jg
xadd
push
ss
mov
sbb
out
lods
call
pop
cmp
push
cmp
repz
xchg
ljmp
mov
adc
jl
mull
imul
in
pop
shl
and
cmpsb
jns
dec
das
jl
xchg
add
inc
mov
fmulp
pop
mov
ljmp
cs
das
push
lahf
sbbl
sbb
rcrb
into
lret
outsl
and
lods
enter
inc
xchg
xchg
scas
and
sbb
dec
sbb
hlt
adc
lcall
and
jg
adcb
lods
add
in
ds
mov
jmp
js
xchg
inc
dec
mov
push
jg
pushf
sub
int
stos
cltd
jmp
push
inc
mov
sub
ret
push
jmp
push
jle
adc
push
xchg
test
je
fiaddl
push
loop
pop
ja
xchg
sti
into
or
inc
test
cli
jb
jbe
add
mov
mov
jg
add
imul
ret
pop
mov
cmpsl
mov
into
call
daa
scas
dec
popa
add
outsb
mov
lret
or
pusha
lret
in
sub
jb
mov
testb
ss
sbb
dec
pushl
pop
std
mov
jge
jae
cmpsl
jae
sbb
vcmpps
lea
inc
and
mov
xchg
xchg
pop
jne
pop
adc
push
xchg
enter
leave
imul
inc
test
inc
jae
inc
out
rorb
jo
mov
je
cmp
mov
out
and
out
or
adc
pop
xchg
or
mov
sbb
fnsave
leave
inc
xchg
adcb
in
and
arpl
adc
lods
shrl
jp
push
add
cmp
adc
sbb
flds
lds
xor
jb
out
cli
je
enter
out
aad
pop
std
add
int3
sbb
mov
mov
and
and
and
andl
rolb
mov
mov
shr
shl
or
pop
call
negl
mov
outsl
repnz
push
aas
mov
fistpl
mov
pop
dec
outsb
pop
dec
pop
shr
sbb
out
dec
inc
fstl
out
iret
sbb
outsb
mov
lcall
cmp
or
pop
rcll
repz
in
mov
outsb
jns
out
sti
or
push
je
out
andb
and
inc
sub
fucomp
push
push
js
jle
and
add
fnstenv
xchg
sti
mov
aas
mov
arpl
or
sbb
pop
lods
enter
inc
inc
mov
jle
subb
cmp
adc
ret
dec
mov
out
mov
dec
dec
fcomps
stos
cs
or
sbb
test
mov
xchg
out
cmpsb
mov
push
in
fldl2e
adc
lret
out
leave
sub
cmp
lods
and
inc
stos
jno
inc
lcall
jb
cmpsl
mov
inc
xor
mov
std
cmp
lahf
jae
mov
push
cltd
pop
into
and
xchg
pusha
and
cmp
ficoml
cltd
jo
sub
fcoms
adc
mov
stc
dec
js
xchg
fcomps
xor
ja
cmp
mov
sub
mov
stos
jmp
in
mov
int3
sbb
add
push
pop
inc
ja
and
xchg
jb
in
mov
fsubrl
mov
mov
and
add
call
mov
js
mov
xchg
cli
jns
imul
test
push
add
out
pop
arpl
pushf
ss
jo
dec
jbe
stc
into
pop
lcall
lcall
push
sub
mov
sbb
sbb
test
insl
mov
push
cmp
stos
mov
aaa
xchg
outsb
and
jmp
jecxz
test
lahf
gs
int
lea
push
test
insl
cmp
cwtl
fstpl
pushf
or
popa
push
add
rorb
pusha
lds
and
test
inc
fwait
mov
imulb
dec
sti
jmp
or
sub
mov
push
or
inc
imul
pop
sbb
outsb
pop
sbb
adc
lods
sbb
sub
or
adc
add
lret
je
pop
mov
test
xchg
jmp
jp
fmuls
pop
into
xchg
cmpsb
sbb
add
jb
xor
and
loop
imul
add
sub
mov
sbb
in
cmpsl
scas
pop
sti
pop
push
fisubrl
inc
xor
push
lret
xor
mov
popf
js
or
das
cmp
or
sbb
cmp
dec
les
in
icebp
dec
addl
mov
jl
dec
mov
fdivp
test
mov
add
pop
xchg
insb
push
fsubrs
mov
mov
push
pusha
data16
aad
scas
xchg
add
adc
mov
scas
mov
and
outsb
das
outsl
aam
pop
in
inc
inc
lods
icebp
es
lahf
xchg
decb
sahf
sub
cmp
stos
movsl
imul
adc
fbld
jns
rcr
mov
xor
mov
movsl
push
mov
push
cli
in
cmp
ret
dec
add
imul
mov
rcll
stc
sarl
nop
dec
jg
xor
in
inc
idiv
insb
dec
sbb
scas
xchg
lods
jo
ret
je
pusha
sub
or
cmp
outsl
iret
sti
call
push
mov
push
shll
cmpsl
outsb
repz
ljmp
and
and
mov
jge
cmp
xchg
int3
test
mov
sti
pop
and
add
loope
test
push
add
popa
and
sub
sbb
stc
or
pushf
aaa
mov
nop
push
adc
sub
jbe
mov
sbb
pop
dec
mov
int
push
xchg
nop
inc
outsl
rorb
cmp
roll
int
adc
movsb
adc
mov
or
out
scas
xchg
stc
push
mov
push
adc
daa
les
in
mov
dec
jns
icebp
jne
jmp
mov
xchg
popa
lret
hlt
xor
out
scas
sub
inc
imul
xor
mov
mov
mov
lock
insl
aas
hlt
push
or
jle
xorl
cmp
xor
jno
pop
mov
lret
fsubl
or
pop
jns
inc
in
cwtl
jne
jg
mov
adc
and
leave
std
sub
pop
sbb
dec
addr16
rolb
fildll
and
loope
lods
sub
cmp
inc
jnp
pop
or
inc
cmp
loopne
mov
out
popf
push
sub
into
pop
pop
mov
jp
cmp
xchg
mov
or
mov
jl
and
in
push
cwtl
pop
aaa
push
mov
ds
sbb
lcall
mov
mov
inc
sub
cmp
stos
pop
clc
push
leave
or
mov
insb
repnz
movsb
aam
sub
mov
arpl
adc
mov
leave
filds
mov
cmp
xchg
add
cmp
xlat
jge
jns
mov
aam
inc
sub
das
jne
push
sub
adc
push
pop
sbb
ljmp
fld
out
jmp
pop
mov
imul
mov
push
inc
sahf
xor
in
movsl
mov
or
jmp
dec
ss
adc
push
jecxz
lods
jno
pop
int
jnp
fwait
or
mov
lods
call
mov
cmp
xor
and
in
lcall
push
icebp
cmp
lds
ret
pop
int3
leave
lock
add
stc
xor
ret
xchg
shll
pusha
js
rcr
add
cmp
pop
loop
pop
lcall
ja
fnstcw
mov
sbb
cmc
popf
in
push
xchg
iret
insb
cld
push
int
pop
sbb
mov
lods
jbe
inc
data16
lgs
sub
xorl
mov
adc
mov
mov
sarl
inc
adc
jge
testl
sahf
cmp
mov
cmp
roll
lods
sahf
cmp
lock
sub
xor
xor
push
daa
and
add
sbbl
rcrb
cwtl
mov
loop
xchg
inc
or
jmp
fsubrp
add
pop
iret
push
xchg
into
jo
xor
pop
fists
subb
xchg
jmp
push
pop
divb
sbb
lock
xor
dec
xor
fldt
aas
jne
mov
and
push
cwtl
push
rcrb
data16
andl
sub
and
lods
mov
inc
push
dec
hlt
aam
int
dec
mov
loop
fildl
xchg
bound
pop
mov
jmp
cmp
push
push
repnz
mov
ss
and
leave
hlt
jo
cli
out
test
je
mov
push
sarl
mov
mov
out
jl
cld
or
in
adc
js
fdivp
sbb
and
jb
pop
fcomip
mov
into
push
mov
aad
jne
xor
xor
aam
or
push
das
in
dec
sarl
loope
js
inc
and
jne
int3
arpl
loop
jae
xchg
push
icebp
pop
mov
imul
fstpt
mov
xor
outsb
lahf
cmpsb
push
inc
push
sub
pop
add
dec
pop
aas
jecxz
fimuls
mov
icebp
fcoml
cmp
ja
mov
test
push
push
inc
and
inc
dec
clc
cmp
mov
ret
xchg
cmp
shlb
fstps
lahf
pusha
fsts
rclb
xchg
shlb
cwtl
mov
js
mov
xabort
shll
xchg
mov
arpl
jl
xor
mov
stos
mov
jno
pop
xchg
and
test
test
mov
adc
adc
xchg
test
adc
or
sub
test
fadds
movsb
clc
dec
out
and
adc
daa
andb
jge
out
adc
inc
xor
inc
xchg
sbb
lea
icebp
sub
mov
push
push
imul
adc
cmp
push
and
jg
push
les
jne
mov
int
hlt
imul
scas
cltd
aad
addl
xor
imul
adc
int3
or
movsb
es
or
imul
mov
jecxz
popl
dec
mov
loopne
in
fisubs
jb
fmuls
idivl
hlt
in
pop
ljmp
in
push
xchg
loope
outsb
cmp
clc
lcall
movsb
ja
je
test
pop
fsubs
dec
subl
xchg
and
xchg
pop
mov
out
mov
jp
loope
and
js
jbe
sub
ja
sub
je
adc
test
push
push
sbb
lahf
mov
insl
and
xchg
sub
test
adc
test
out
fidivs
xor
sbb
std
mov
jns
insb
jne
sub
out
or
xchg
mov
push
inc
shrb
test
mov
pop
ret
xchg
jns
lds
mov
xor
inc
jg
push
cmc
xchg
cmpsl
jns
sbbl
iret
lods
mov
xchg
pop
js
adc
add
ljmp
cmpsb
stos
inc
pushf
and
daa
in
rorb
xor
stc
es
pop
inc
ds
es
push
push
and
call
or
int
mov
enter
out
mov
inc
sbbl
push
push
into
adc
jle
icebp
cmp
jmp
pop
out
int
mov
jae
shll
dec
sarl
int3
cmpb
enter
push
inc
repnz
ret
xor
rcrl
cltd
addl
or
xchg
dec
inc
push
lret
jnp
push
jp
jecxz
push
stc
popf
sbb
pop
andb
mov
push
jmp
cltd
sub
add
cmpsb
ss
stc
mov
aas
xor
adc
insl
mov
dec
pop
sbb
sbb
mov
jmp
int3
repz
mov
outsb
bound
or
clc
bound
addl
pop
pop
pop
dec
sahf
jne,pt
mov
add
jecxz
add
inc
cmp
push
rolb
orl
outsl
aas
cmp
inc
imul
cs
ja
bound
outsb
pop
or
bound
test
test
pmulhuw
xor
les
adc
pop
jb
inc
je
sub
addr16
push
sahf
in
aas
mov
movsb
jno
mov
cmp
movsb
insl
call
and
dec
sub
mov
cmp
lahf
xchg
sahf
jge
xor
out
sbb
aad
out
and
push
adc
sbb
dec
cwtl
add
clc
jge
inc
mov
mov
or
inc
sbb
repz
push
push
push
adc
in
bound
sbb
mov
roll
std
nop
push
mov
sbb
sti
xchg
mov
or
sti
xor
decl
ljmp
mov
fsub
shlb
in
or
mov
into
ret
cs
mov
jg
sbb
push
cmpsl
pop
sbb
sbb
jmp
mov
sar
je
jp
mov
gs
cmp
imul
lret
xor
insl
and
xchg
test
rolb
mov
mov
rcl
lcall
in
cli
cs
movsl
or
jne
inc
sub
aam
pop
mov
lods
jne
loopne
mov
cmp
push
mov
jo
and
jle
stc
insb
and
push
mov
lea
in
shlb
loopne
jecxz
lods
jp
imul
adc
dec
jg
cmp
push
rcrb
cmp
mov
and
pop
repz
fwait
push
adc
in
lods
and
sbb
movsb
test
push
scas
lods
mov
or
cltd
jno
rolb
test
adc
cmp
pop
dec
scas
pop
std
in
aam
mov
dec
dec
sbb
addb
pushf
rcrb
imull
mov
shrb
lcall
out
ds
cmp
pushf
push
imul
out
add
pusha
call
scas
jmp
and
scas
sbb
fcomps
stos
ret
push
test
cmc
cmp
les
inc
sub
jecxz
repnz
cmc
enter
mov
jno
dec
out
shr
lahf
repnz
jnp
mov
xchg
cmp
push
insl
nop
cmp
popa
sub
int3
mov
clc
lcall
loope
or
aam
push
pop
push
dec
data16
sti
pop
pop
and
jl
clc
je
in
out
rcrb
shrl
je
repz
jle
sub
xchg
cmp
jl
cmp
cmp
enter
js
out
in
mov
inc
inc
nop
mov
aad
cmp
dec
pop
imul
movsb
fldenv
pop
rolb
adc
cs
test
in
and
out
pop
arpl
insb
out
subl
and
imul
in
pinsrw
call
pop
ja
arpl
adc
popa
inc
sub
dec
mov
fistl
fwait
nop
sub
lods
push
xchg
mov
push
shl
sbb
cli
mov
and
jp
and
mov
sbb
xchg
dec
ret
rcll
iret
fstps
out
mov
add
cwtl
and
repz
sbb
ljmp
push
xor
mov
cmp
adc
fcmovb
xchg
mov
cld
mov
jmp
orb
push
fistl
ljmp
mov
xlat
xchg
pop
xchg
dec
adc
andl
cmp
xor
pop
xor
jne
int
mov
mov
pop
xchg
ret
mov
aaa
xchg
push
sbb
cli
or
cltd
or
pop
int3
cmp
push
movsl
cs
pusha
ds
lods
jbe
pop
in
push
and
repnz
fisubrl
ds
mov
flds
jno
bound
sub
lret
sbb
and
sbb
xor
sub
pop
pop
mov
jle
push
mov
popf
or
mov
out
pop
mov
xchg
mov
sub
scas
xchg
pusha
jg
mov
mov
fdivrl
mov
out
or
leave
cmp
push
sub
mov
mov
leave
xor
mov
cli
rol
dec
scas
inc
aad
mov
or
test
xor
movsl
mov
cmp
sub
lret
daa
jmp
das
std
jge
ret
in
popf
jecxz
xchg
leave
dec
lret
sub
fcomi
cmp
or
ret
lock
sbb
out
stos
loopne
ja
lcall
in
adc
jns
ds
lods
out
test
add
cli
dec
arpl
dec
push
cmp
cmpl
mov
repz
inc
sub
jo
and
xchg
mov
push
cwtl
xchg
test
pop
dec
in
repz
mov
bound
insb
or
jae
or
sub
sub
mov
insb
in
rorl
mov
adc
adc
inc
int3
mov
push
std
in
ljmp
loop
mov
dec
add
jns
and
nop
xor
loop
push
fnsave
shrb
shll
pop
mov
cmp
pusha
inc
adc
ja
rcrl
xchg
jns
in
xchg
daa
jecxz
push
sbb
outsb
push
mov
mov
sub
jno
sbb
mov
cs
and
dec
cmp
cmp
andl
push
push
sbb
test
jge
mov
sub
jns
and
dec
lahf
fcmovb
mov
icebp
xor
jae
push
xchg
xchg
fwait
leave
mov
jne
gs
push
sbb
mov
inc
inc
mov
stos
jnp
pushf
loope
inc
int3
jge
or
mov
or
push
out
and
mov
cmp
dec
and
loope
xchg
and
add
adc
daa
insb
lods
outsb
andl
repz
pop
pop
js
push
sbb
repz
dec
jno
jb
cwtl
cmp
je
dec
xchg
and
pop
push
dec
ds
jo
es
test
pop
fbstp
inc
fmull
sti
std
push
mov
push
call
dec
lods
push
cmp
cmpsb
jmp
mov
fsts
mov
xor
inc
mov
xor
sub
push
add
push
call
into
cld
es
and
aad
cli
cltd
push
ljmp
jmp
push
jbe
lock
stos
testb
loopne
xchg
mov
arpl
or
std
cmpsb
sub
push
jnp
xchg
or
int3
dec
sti
imul
in
xor
mov
insl
imul
outsl
popa
mov
xchg
pop
mov
xchg
inc
dec
pop
iret
lds
mov
hlt
dec
cwtl
xor
cmp
stos
and
and
out
mov
push
addl
in
cwtl
xchg
ja
jno
pop
pop
bound
sub
push
ljmp
gs
cmp
xchg
cmpsb
push
div
in
aaa
dec
pop
stc
jle,pt
int
push
pushf
mov
add
and
cwtl
jmp
movswl
xchg
push
cmpsl
enter
cmp
adc
shlb
aas
jae
inc
cmp
loop
pop
xor
je
enter
daa
call
je
ja
xchg
mov
js
mov
mov
out
insb
jp
add
ret
cmc
jmp
cmp
shl
insl
ret
cld
jb
out
cltd
js
pop
mov
mov
mov
rcr
mov
mov
or
int3
aad
mov
scas
pop
cwtl
lock
fwait
adc
push
adc
cmc
into
push
outsl
lahf
xchg
adc
or
arpl
mov
data16
repz
or
mov
pop
lret
imul
xchg
sarl
daa
xor
xchg
inc
les
add
inc
sbb
or
push
and
pop
addr16
fistps
repz
xchg
lds
clc
sub
iret
push
orb
push
aas
jns
xor
xor
shl
jecxz
jg
dec
scas
inc
xlat
test
xchg
xchg
jb
ror
lds
sub
push
adc
cwtl
and
jbe
gs
call
mov
push
aaa
andb
sbb
out
pop
shrb
mov
ret
mov
outsb
sahf
testl
test
mov
and
push
ljmp
jp
scas
enter
jge
addr16
test
out
data16
insl
push
push
fadds
addb
sub
testl
mov
add
in
popf
repz
outsl
xlat
mov
scas
sbb
pop
push
pop
gs
lods
movsb
aas
cmp
dec
mov
xor
fadd
dec
fcmove
xchg
dec
cmpsb
mov
cmp
lcall
and
sahf
mov
lahf
addr16
add
iret
repnz
jle
ljmp
stos
js
andl
cwtl
add
gs
das
mov
adc
and
mov
push
pop
and
int3
cmp
pop
scas
loopne
jno
stos
stos
aad
sub
into
pop
out
daa
data16
in
fiadds
outsl
loopne
mov
push
imul
ljmp
adc
mov
push
aad
jb
and
mov
sub
jg
testl
xchg
mov
addb
push
sub
mov
inc
inc
rcll
lods
or
cmp
sub
imul
mov
rol
xor
pushf
pop
inc
ficoms
xchg
fwait
pop
xchg
lods
jnp
rcrb
jnp
int
adc
sub
outsl
ja
lcall
inc
fidivs
pop
pop
sbb
jno
clc
sub
xchg
in
mov
sbb
test
jb
sub
and
into
mov
nop
mov
cmpsl
mov
shlb
les
popf
mov
mov
ficompl
sub
fiadds
xchg
cmpsl
aas
mov
pop
sbb
push
inc
adc
mov
push
sub
aas
sarl
aaa
scas
sbb
mov
pop
aas
rcrb
in
out
push
mov
push
adc
iret
ffreep
push
cs
decb
jge
imul
xchg
cmp
dec
popa
imul
leave
icebp
cmpsb
iret
dec
imul
add
lods
xchg
aam
stos
jae
addl
mov
arpl
sub
cs
popf
fcomi
ljmp
sbb
mov
push
aas
rcrl
outsb
arpl
fxch
bound
sbb
clc
xchg
mov
xor
push
loop
and
mov
imul
stos
scas
add
add
pop
xchg
adc
push
dec
jmp
add
ja
and
xchg
lods
subl
adc
dec
inc
pop
pop
mov
out
cmp
push
fidivs
out
mov
aam
out
loop
cmp
xchg
xor
inc
imul
lods
in
popa
fadds
repz
push
or
cltd
push
scas
clc
aam
xchg
jnp
insl
daa
data16
lods
insl
adc
pushf
roll
test
int3
mov
jg
sbb
sti
jmp
pusha
clc
adc
xchg
mov
pushf
adcl
cmp
cmc
sti
pop
lods
jge
jmp
shl
fidivrs
cmp
ret
pop
sbb
mov
test
out
sub
xor
test
rcrb
dec
mov
js
andb
rol
jge
sbb
xchg
insb
mov
pop
jl
mov
fs
ror
arpl
inc
cmpsb
lret
mov
adcl
insb
xchg
xor
arpl
push
lahf
frstor
mov
mov
add
fldcw
push
imul
sbb
mov
adc
mov
icebp
into
xchg
sub
mov
lahf
add
push
in
xchg
mov
sbb
shll
pop
add
ljmp
lods
lahf
xchg
js
xor
pop
push
sahf
push
mov
fidivl
sub
fwait
lods
js
enter
call
push
mov
call
in
or
repnz
inc
sbb
adc
cld
scas
fldt
and
sub
scas
shrl
sub
mov
popa
jb
add
mov
sbbb
xchg
lock
or
and
cmpsl
into
sub
movsl
inc
sbb
cmp
add
sbb
ret
add
mov
gs
pop
sbb
push
xchg
and
xor
push
pusha
int3
in
pop
mov
add
rcpps
xor
cli
rclb
mov
pop
lret
or
js
cltd
lret
xor
cmpsl
add
out
jbe
pop
inc
dec
sub
iret
push
or
fdivrs
jno
cld
mov
pop
lds
cld
jnp
mov
les
mov
jbe
adc
adc
cmc
fcmovnb
pushw
stc
jge
in
xlat
lods
ss
outsb
jbe
mov
sti
repz
and
xor
out
inc
movsl
mov
inc
nop
mov
jns
mov
mov
or
sub
arpl
stc
mov
xchg
call
push
div
cmpsb
sub
ficoms
cmp
push
in
mov
sti
sahf
aas
add
adc
add
addr16
mov
fimull
pushf
lds
sub
dec
mov
pop
inc
cwtl
xor
leave
jns
subl
rcll
mov
and
mov
xor
mov
aam
test
or
daa
cli
pop
mov
cmp
push
fwait
jl
js
daa
mov
push
xchg
out
in
int
dec
jo
nop
imul
mov
push
mov
sub
pop
fcomps
mov
movsb
insl
fs
mov
mov
sbb
rcl
cmpsb
or
js
and
xchg
xorl
lock
mov
cmp
adc
mov
inc
mov
je
or
nop
add
mov
jne
xor
lea
call
negb
cli
jb
icebp
mov
ror
out
cmp
mov
fsubl
mov
outsl
jno
inc
nop
repz
dec
nop
xchg
jne
popf
or
jns,pn
sbbb
es
adc
ret
stos
cmp
mov
or
subl
lret
aas
xlat
sub
das
pop
inc
ficompl
mov
idivl
jecxz
fisubrs
push
daa
jbe
pushf
icebp
dec
lret
bound
xor
scas
shrl
inc
dec
xor
mov
pushf
daa
cmp
pop
fdivr
mov
sti
cmpsb
mov
das
push
push
cld
cmc
aad
mov
ljmp
aas
xchg
sbb
add
cmp
loopne
jge
jne
lcall
je
es
js
push
insw
cmp
sub
inc
call
sbb
pop
icebp
inc
mov
mov
in
icebp
mov
push
fwait
shrb
daa
test
in
test
enter
push
rcrl
sbb
cli
pop
pop
jp
data16
or
xor
jno
push
mov
pop
stos
or
and
dec
pop
pop
mov
adc
xor
fcmovnb
fisttps
bound
adc
sbb
das
mov
push
cmp
add
xchg
mov
xor
cmpsl
or
movsl
nop
insl
mov
pop
mov
ljmp
add
push
jle
pop
sub
sub
iret
mov
addr16
dec
fnstcw
jb
push
pop
sbbl
or
out
mov
jae
xchg
or
fwait
mov
fwait
push
and
ss
pop
stos
and
push
xchg
adc
inc
inc
push
jmp
fdivr
mov
xchg
inc
nop
and
cmp
iret
shlb
rorl
ja
mov
fxch
data16
pop
push
jnp
add
or
mov
fisubs
lret
dec
sbb
push
xchg
xchg
jp
mov
and
inc
dec
iret
pushf
jbe
and
add
mov
push
dec
pop
jl
in
adc
ds
int3
cltd
mov
push
mov
mov
xchg
add
scas
ljmp
pop
lock
popf
sub
add
nop
imul
jb
sbb
inc
jmp
call
cs
cmp
orb
mov
es
sub
and
xor
mov
and
and
dec
mov
xchg
inc
push
and
pop
call
cmp
or
pop
ret
cmpsb
sbb
or
int3
fimull
xchg
mov
data16
and
orl
xor
and
add
cmp
psllw
rorl
clc
lcall
dec
dec
cmp
and
nop/reserved
xchg
xchg
inc
push
addr16
push
push
inc
mov
addr16
shr
push
pop
xlat
mov
jg
cmpsb
cld
mov
dec
and
and
hlt
popf
jno
cmp
incl
cmp
test
and
adc
xchg
or
insl
inc
or
sti
xor
call
sar
out
sub
cmp
lea
sub
adc
je
add
mov
pop
sub
nop
out
je
sub
xlat
jmp
mov
rclb
jmp
pop
jl
sub
scas
out
mov
jo
fcmovbe
xor
iret
cmp
hlt
sub
sbb
jmp
cmp
sti
inc
popa
das
xchg
aas
mov
mov
inc
pop
dec
fildll
lret
dec
inc
lods
pop
adc
out
rcrl
lods
int
sub
mov
sub
sbbb
jp
movsl
imul
sub
in
push
cpuid
adc
test
stos
into
mov
test
cld
and
scas
lcall
mov
ljmp
out
call
mov
xor
divl
mov
repnz
out
inc
lods
das
outsl
adcb
xor
cmp
leave
jb
push
daa
fsubs
jb
es
xchg
adc
push
push
jne
jmp
test
pop
xchg
inc
push
xchg
imul
sub
out
std
jecxz
inc
sar
xchg
rcr
mov
pop
push
das
or
mov
mov
jo
adc
mov
jp
fs
jmp
int3
lcall
inc
add
lret
mov
pop
adc
insl
cmp
push
cltd
test
pop
mov
cmp
adc
fidivl
fwait
sub
push
add
pop
lock
mov
rcll
leave
mov
loope,pt
or
mov
sub
mov
aam
pop
push
cld
push
scas
xchg
fchs
in
cld
out
or
dec
cmp
icebp
or
cmp
push
into
xchg
sbb
push
xor
dec
pop
jnp
cmp
and
notb
mov
iret
call
push
jle
jge
out
imul
mov
cmpb
cmpsb
pushf
cmp
jne
in
cmc
inc
jne
adcl
mov
lea
inc
stc
int
push
stos
lods
jl
push
out
ljmp
jae
lods
push
push
iret
jnp
test
dec
push
nop
jno
test
das
push
lock
lret
push
xor
aam
mov
shlb
mov
pop
ljmp
jb
cmp
test
sub
addb
addr16
stos
jo
mov
std
cli
sub
cmp
or
repnz
inc
or
add
push
repz
add
daa
bound
ret
jle
test
shll
lods
jmp
scas
fistpll
sti
and
mov
lret
outsb
imul
cmc
jge
sti
mov
and
stos
pop
xchg
dec
sbb
or
outsl
jne
ss
fmull
mov
mov
adcb
sbb
daa
jle
shr
mov
es
mov
and
js
or
adc
loop
nop
pop
mov
cmc
jae
arpl
xor
sbb
pop
fs
xor
adc
xor
mov
xchg
xor
sub
pop
arpl
imul
add
adc
popf
sbb
adc
and
mov
push
sub
lea
in
pop
or
xchg
fimuls
cmp
dec
pop
push
mov
or
loopne
cmp
in
sbb
insb
lret
fdivrs
adc
push
jge
insb
add
jae
and
mov
insb
mov
inc
push
cwtl
lret
xorb
inc
adcb
repz
std
lret
push
pop
out
ficoml
push
popl
and
jo
push
sbb
bound
sbb
stos
mov
rcrl
inc
cwtd
jb
cmp
ss
inc
and
xchg
and
out
arpl
inc
sub
adc
nop
icebp
movsb
into
out
mov
lret
cmp
lock
pop
test
add
mov
push
mov
jns
scas
dec
pop
pushf
mov
aaa
fnstcw
push
imul
xor
into
fsubl
sbb
xor
test
xorl
imul
rol
lock
imull
adc
out
xchg
subb
pop
imul
jmp
mov
f2xm1
adc
mov
ret
sbb
sbb
cld
es
xor
xor
es
sub
nop
cmp
sti
insl
mov
pushf
rcl
cmp
and
push
insl
mov
scas
ljmp
arpl
cld
in
sar
in
mov
leave
push
js
pop
test
pand
inc
xchg
xchg
subl
xchg
stc
je
push
jbe
mov
mov
xchg
mov
mov
cmc
scas
mov
sbb
cmpb
jb
mov
jmp
or
sahf
or
popf
sbb
push
dec
xor
push
xor
decb
out
xor
lock
xor
push
pop
sub
add
and
pop
out
lods
inc
jl
shlb
repz
jno
xor
jns
adc
jne
fsubl
xchg
ja
int3
je
aas
stc
mov
nop
mov
jg
imul
andb
xor
mov
orl
mov
nop
cmp
ret
mov
dec
fcmovnb
add
fisubrs
inc
outsl
lret
mov
mov
std
adc
testl
lcall
mov
adc
out
adc
xor
push
jle
outsb
gs
in
ss
movsb
xchg
cli
pop
decb
push
xlat
push
shl
in
push
lock
jnp
stc
jnp
sarb
adcb
sub
push
inc
aad
ja
mov
jo
or
dec
mov
prefetch
enter
jecxz
pop
imull
test
cld
lock
dec
mov
jle
aas
pop
mov
aaa
sub
aas
test
jmp
cld
cmp
mov
lods
cmp
xchg
fcoml
imul
jae
dec
or
push
ljmp
ffreep
mov
repnz
pop
test
repnz
sub
or
inc
clc
lret
xlat
aad
loope
push
notl
lcall
out
pushl
fisttpll
imul
xchg
out
lods
fistps
pop
ffreep
inc
mov
xor
fwait
ja
scas
jbe
or
sub
cmc
jae
cmp
fcomi
add
clc
lds
mov
rorb
jl
xchg
fs
cwtl
mov
test
popa
mov
cwtl
jns
mov
movsb
mov
ja
shrb
ljmp
imul
mov
inc
test
pushf
aad
mov
jae
sbb
dec
jnp
mov
fs
add
aam
repz
inc
sbb
outsl
out
cmc
insb
ret
bnd
sub
ret
repz
jle
pop
pusha
cmpsb
popf
mov
or
jecxz
and
xchg
shl
push
int
xchg
cmp
xor
push
in
jne
jb
pop
mov
push
xchg
out
cmc
movsl
lds
pop
mov
lea
push
dec
dec
fs
inc
adc
sub
dec
insb
xor
inc
push
imul
rolb
xlat
out
shr
xchg
in
adc
out
stc
dec
add
dec
pushl
mov
xor
push
call
pop
aad
push
test
daa
shrb
sub
enter
outsl
rcrl
cld
sub
lea
mov
cmpsl
inc
pmulhw
imull
dec
xchg
mov
ja
push
in
ret
sub
loop
sahf
dec
xchg
inc
jb
in
aas
sub
das
pop
popa
inc
cli
inc
add
call
mov
popa
cmp
je
and
jb
push
jb
les
xlat
adc
into
jmp
jo
orl
or
dec
lcall
outsl
pop
and
idiv
xchg
mov
scas
arpl
mov
cli
dec
jecxz
and
loope
pop
out
mov
movsb
movsb
fxch
lahf
mov
sub
sbb
andb
xchg
out
shlb
push
dec
push
rolb
idiv
or
rorb
inc
inc
rep
sbb
outsl
and
pop
in
movsb
mov
mov
repnz
repz
mov
adc
jle
pop
mov
pop
cltd
push
out
ror
fldt
call
mov
dec
jp
out
jmp
lea
pop
push
outsb
in
jno
cmpsb
in
xchg
test
cmp
inc
pop
mov
mov
mov
lock
dec
int
aad
mov
and
sarl
inc
pop
into
loopne
or
fisubs
mov
cld
cmp
mov
cmp
dec
mov
shlb
pop
pop
jb
pop
xchg
mov
loop
cmpsb
pusha
outsb
leave
and
mov
sbb
adc
stc
mov
mov
jp
xchg
das
in
pop
cwtl
loop
pop
cs
in
sti
sbb
push
fdivl
movsl
push
sbb
cld
in
pop
cmp
xor
xchg
daa
cmp
dec
mov
mov
scas
xor
cmpb
test
repz
popa
fdivrs
xor
adc
pop
sub
stos
mov
and
pop
out
or
inc
shl
in
sbb
jns
mov
enter
popa
pop
jl
call
inc
sub
or
pop
mov
arpl
or
xor
or
mull
pusha
mov
mov
fiadds
mov
test
fistpll
mov
addl
sar
or
add
mov
sub
mov
pusha
call
insb
int
roll
sbb
inc
pusha
shrl
mov
xchg
ja
sbb
adc
dec
cmp
lret
add
fs
push
ret
xor
scas
aad
jmp
imul
push
addb
jne
jbe
idivb
ret
fisttpl
imul
mov
stc
mov
mov
jne
inc
inc
aam
add
sub
repz
lret
push
fwait
or
adc
cltd
mov
xor
nop
fimuls
out
ret
rolb
das
sub
iret
jmp
je
lcall
loopne
mov
mov
outsl
mov
add
aam
and
stc
jecxz
push
scas
lea
imul
mov
mov
xlat
jno
mov
filds
xchg
pop
sahf
inc
fsubp
shlb
pop
xchg
pop
xlat
adc
out
sti
or
pushf
xor
and
mov
jae
or
into
jg
nop
add
frstor
adc
xor
fisubl
adc
mov
test
scas
ljmp
enter
jge
lret
pop
aas
mov
and
mov
or
bound
outsb
jle,pt
sahf
push
mov
sub
cmp
loop
pop
pop
push
push
lods
dec
or
jge
push
push
mov
fisubl
imul
add
lds
js
hlt
add
addb
xchg
xchg
mov
xchg
pop
dec
fsubr
cwtl
mov
pop
cmc
cmp
movsl
xor
dec
push
rolb
icebp
push
add
cmp
push
mov
adc
push
pop
shlb
sbb
xchg
pushf
jmp
or
cwtl
lret
and
pop
fs
lods
in
lret
xchg
xor
inc
xor
and
loopne
or
mov
cmp
unpckhps
sbb
adc
lcall
cmpsl
cmp
cli
or
aad
cmp
add
sahf
insl
aad
cmp
fnstsw
in
ret
ret
out
into
popf
mov
or
pop
aam
sub
xor
das
xchg
es
fsubrs
fsubp
push
xchg
inc
in
inc
or
dec
xchg
xor
stc
sub
sbb
mov
lods
ficomps
vpsllq
jno
sbb
adc
inc
sbb
hlt
push
cli
pop
and
lock
movsb
jmp
mov
lods
mov
gs
ja
xchg
aaa
xchg
push
pop
dec
add
mov
pushf
add
lods
pop
mov
addl
or
imulb
dec
xchg
xchg
shll
ret
das
add
push
xchg
jnp
fwait
sahf
icebp
xchg
ljmp
out
stos
lret
jno
ficoml
clc
pushf
nop
mov
jb
in
and
nop
dec
pop
and
push
mov
xlat
addb
pop
pushf
flds
add
or
mov
mov
call
ret
js
arpl
xchg
add
pop
test
jne
pop
test
mov
xor
ret
sti
cltd
fildl
test
out
dec
sub
into
jae
enter
stos
stc
xor
int3
mov
cmc
out
es
inc
and
cmp
mov
sysenter
andl
lahf
popf
mov
outsb
jo
loope
push
movsl
push
aad
pop
push
daa
movsb
fldcw
fwait
shl
jb
dec
out
push
std
jmp
lahf
adc
inc
ja
sub
add
in
aad
lds
movsb
cmc
cmpb
in
dec
cmp
sub
xor
mov
int
ljmp
push
fiadds
mov
mov
dec
andb
cld
xchg
cli
xor
loopne
cmp
sbb
fs
aam
sahf
inc
mov
push
push
test
jp
bound
repz
neg
jp
aas
or
loop
push
pop
mov
mov
fstpl
rclb
push
dec
xor
mov
out
push
pop
inc
out
ret
xchg
sbbb
sahf
gs
fucomp
or
adc
movsb
cmpsl
popf
jp
mov
push
mov
lock
adc
popa
jg
pop
popf
push
lods
cmpsl
idiv
sbb
xor
pop
mov
and
pop
push
ret
sub
and
add
sbb
sbb
cwtl
mov
lcall
data16
ss
mov
xchg
fcmovbe
negb
out
mov
fs
sub
and
add
loope
movsl
dec
dec
test
aaa
pushf
push
inc
cmpsb
jo
insb
sub
push
add
je
mov
mov
or
stc
pop
add
mov
push
mov
je
lods
fidivl
xchg
jbe
lods
aam
lret
into
scas
ror
out
iret
cmp
iret
jns
push
adc
cltd
outsb
mov
mov
and
and
add
imul
cmp
sar
stc
arpl
jnp
mov
into
enter
jmp
jb
repnz
xlat
cmpsb
jp
dec
ss
mov
imul
sub
xchg
or
cmc
addr16
xchg
addb
insl
and
xorl
scas
popa
outsb
hlt
addr16
adc
sub
inc
inc
mov
stc
mov
mov
loopne
adc
shll
or
dec
int3
dec
cmp
shl
and
mov
push
clc
pop
cli
pop
add
int
xchg
jnp
mov
pop
rolb
test
mov
and
je
xchg
mov
sbb
movsl
sub
aaa
xor
ljmp
sti
mov
jmp
and
mov
cmp
add
pop
add
scas
jb
pop
jo
xchg
shrl
adc
add
jae
stos
xlat
cwtl
movsl
aad
pop
mov
hlt
fs
inc
xorb
fs
and
pop
lea
test
sahf
jns
sarl
fdivs
dec
fsubrs
pop
mov
es
js
adc
push
jnp
jge
iret
dec
inc
pop
aam
mov
pop
mov
aaa
jns
inc
add
test
pushf
out
inc
dec
test
mov
out
in
fcomps
jae
jbe
mov
mov
sti
push
cmp
cmp
loop
inc
scas
mov
outsl
and
popf
stos
cs
fisubl
xchg
mov
pop
ds
bndldx
mov
inc
pop
or
cmp
sbb
inc
xchg
das
icebp
repnz
pop
scas
cltd
movsb
or
xor
inc
std
int
cmc
out
test
inc
inc
addr16
iret
pop
inc
popa
or
popa
sarb
add
cli
push
clc
inc
jmp
jmp
mov
dec
ja
in
sarb
jns
lods
test
cmp
fimull
jg
cmc
mov
inc
xchg
adc
xchg
mov
ficoml
jp
pop
scas
xor
inc
xor
rcl
dec
fisubs
out
mov
push
pop
loop
cmpsl
sbb
inc
movsl
cwtl
cmpsl
dec
enter
sbb
lds
in
cmp
adc
out
fs
into
sbb
insb
dec
mov
sbb
and
inc
xchg
in
xchg
fs
rol
loope
jns
cmp
sbb
inc
mov
cmp
sub
and
xchg
and
lahf
jg
mov
mov
push
cmp
inc
bound
ret
pop
jne
adc
inc
dec
loop
xor
bound
mul
xchg
aas
add
push
movsb
xchg
add
add
mov
pop
jmp
push
push
or
or
mov
movsb
mov
js
jb
leave
xchg
cmp
xchg
lcall
popl
popa
or
push
or
sub
test
call
js
pusha
in
sub
dec
or
outsl
sbb
outsl
outsb
mov
jo
lahf
fnsave
pop
pop
xchg
jmp
clc
inc
xchg
out
jg
subl
mov
mov
out
outsb
test
aam
cmp
push
movsb
lea
test
mov
dec
inc
inc
test
xor
into
mov
ss
ret
lahf
jno
push
fmul
cmp
sarb
add
cs
mov
clc
push
mov
mov
jno
mov
add
int3
dec
mov
jnp
mov
iret
xchg
push
push
fwait
mov
push
pushf
rcl
lahf
icebp
divb
pop
xor
jge
push
stc
xor
cmp
loope
push
push
ds
pop
xor
and
xor
ret
daa
mov
xchg
mov
mov
sub
push
aas
fs
dec
fnstenv
adc
mov
pop
pop
or
seta
adc
test
xchg
outsb
xchg
out
inc
mov
lcall
repnz
and
inc
inc
aad
sbb
aaa
pop
xchg
lahf
notb
lret
pushf
mov
shll
aad
insb
pop
push
ljmpw
mov
push
cltd
jb
inc
mov
jg
popf
arpl
fsts
or
cmc
cmp
dec
push
jbe
insl
stc
push
mov
mov
lcall
adc
mov
inc
cmpsl
and
push
popf
adc
mov
lods
xchg
sub
mull
scas
sub
orl
inc
cmp
adc
pop
ja
adc
push
inc
and
cmpxchg
sahf
inc
mov
sarl
mov
mov
xchg
jne
push
pusha
jns
out
lret
jmp
mov
les
pushf
mov
push
scas
sbb
fnsave
icebp
test
lahf
add
bound
xor
fadds
xchg
in
and
jae
cmp
mov
adc
outsl
jle
rcrb
push
mov
xchg
cmp
test
fwait
mov
das
jp,pn
fnstenv
mov
inc
into
shrb
xchg
jbe
mov
adc
adc
daa
fmull
scas
push
mov
je
addr16
sub
popf
aas
sbb
lods
rcr
push
pop
adc
or
mov
cli
xor
mov
or
or
add
fdivs
mov
sub
shlb
mov
inc
push
mov
jb
inc
cltd
adc
sbb
xchg
cmp
ljmp
lcall
lods
mov
xchg
lock
mov
add
cmp
jp
xchg
adc
pop
cmp
pop
cmpsb
sub
fistl
mov
sub
mov
lret
pop
mov
or
stos
dec
sti
ljmp
ds
or
sub
test
inc
out
cmp
cmp
out
push
fs
clc
mov
subb
out
lds
imul
rorb
pusha
mov
push
jnp
lock
mov
push
fnstenv
push
mov
test
lret
xchg
sub
pop
jecxz
adc
pop
mov
lods
addr16
imulb
inc
cmp
gs
gs
push
inc
cmpsl
rcll
addr16
jge
fidivrs
loope
cmc
cli
cmp
mov
jmp
jecxz
fcmovbe
ror
mov
out
add
and
pop
sub
ret
jae
jae
repz
inc
sub
fildl
pop
xchg
les
movsb
fiaddl
cltd
push
aas
shlb
stos
gs
repnz
jno
test
or
lcall
pop
add
pusha
aaa
pop
fnsave
imul
jmp
mov
mov
iret
xchg
movsl
insb
sbb
aam
in
or
cmp
jns
inc
mov
in
cmc
insl
mov
jae
xor
arpl
loope
push
cwtl
in
pop
jmp
ja
and
notb
loope
into
push
mov
aaa
add
popf
push
or
sbb
aad
into
pop
xchg
idivb
fldl
cli
test
aad
shrb
cmp
xchg
lods
mov
and
call
je
jmp
js
pop
cltd
leave
inc
mov
pop
sub
aaa
js
jbe
scas
hlt
cmp
rol
mov
test
jno
shrb
cmp
jb
cli
ds
fadds
or
idivb
popl
dec
sbb
ja
lcall
jl
sbb
or
data16
inc
lods
ljmp
popf
mov
dec
xchg
subb
push
loopne
test
pop
jmp
xchg
cmp
lods
lret
mov
push
cmpsl
addr16
insb
push
cli
ficompl
js
cmc
add
repnz
ja
popf
pop
test
dec
stos
push
cmp
jns
out
pop
loope
into
sub
add
shrl
push
in
adc
mov
ds
jl
cwtl
js
out
popf
sub
and
xor
cli
dec
stc
adc
xchg
fcomps
outsb
add
and
lret
leave
or
imul
scas
or
cmc
add
js
jnp
adc
jae
int3
add
mov
psraw
cwtl
adc
outsl
lea
jnp
mov
sub
sub
mov
lret
or
mov
popl
mov
or
cmp
and
pushf
mov
stos
sub
cmpsl
ret
sbb
mov
fcomps
dec
outsb
or
fdivs
mov
sbb
jbe
cmc
data16
icebp
aaa
pop
aas
lds
pop
and
adc
mov
int
into
jns
cmc
xchg
fcmovne
sbb
repnz
and
stc
pop
sbb
sti
and
fdivl
cmp
in
xchg
push
int
insl
push
xor
call
pusha
ljmp
sbb
inc
fildl
fists
adc
test
into
jns
push
jns
inc
mov
mov
loope
jb
fstp
adc
push
cmp
nop
je
sbb
in
sbb
xchg
mov
push
pop
divb
sbb
lcall
int
lods
stos
cmp
jae
xchg
push
test
adc
dec
cmp
lds
pop
sbb
inc
pop
sbb
jmp
jnp
add
outsb
aam
out
dec
ja
mov
in
icebp
jmp
les
dec
cmpsl
repz
sub
insl
imul
inc
sbb
sub
ret
loopne
in
pop
inc
sahf
dec
jmp
rcll
pop
jo
mov
mov
cmp
mov
cmp
pusha
int3
shrb
les
out
sbb
ja
int3
iret
iret
aaa
or
iret
mov
scas
mov
mov
cmp
mov
test
loope
dec
lret
out
add
in
or
cmp
and
popa
cmp
or
mov
fisubrl
lock
or
mov
add
cs
ret
xlat
adc
push
int3
mov
pushf
lret
shrl
in
cmp
lahf
mov
inc
xchg
dec
xor
fsub
sbb
and
pop
je
call
imul
out
push
add
in
jbe
pop
stc
xchg
jle
xor
leave
stos
jb
test
test
cmp
cmp
cmp
dec
or
movaps
ret
rolb
inc
outsb
pop
fists
dec
lret
xlat
testb
cmpb
add
pop
rcrl
push
pavgb
in
enter
lods
dec
xchg
pushf
decl
addr16
leave
adc
cli
or
xchg
sbb
int3
push
or
insl
jmp
dec
sarl
shlb
daa
cltd
mov
cli
pop
ficomps
mov
clc
and
lock
xchg
push
out
pop
mov
xor
fbld
rcr
add
adc
test
or
dec
jg
dec
jp
xor
aas
dec
test
bnd
mov
jl
push
mov
fwait
jmp
and
lret
je
popf
pop
push
sub
scas
pop
cmpsb
sbb
mov
dec
pop
cmpsb
xchg
in
icebp
jp
xor
pushf
xlat
popa
and
inc
dec
cs
test
nop
ss
mov
dec
jp
push
mov
cltd
ret
mov
sub
cld
push
push
and
andl
mov
insb
and
scas
push
mov
push
outsl
inc
push
pop
pop
das
aam
pop
movzbl
push
pop
inc
xor
xor
in
dec
in
ljmp
scas
jl
imul
adc
enter
sbb
mov
loope
insl
sahf
rorb
insb
jle
pusha
cmpsb
test
jb
jp
mov
fistpll
mov
bound
subl
and
out
jge
leave
int3
stos
cmp
mov
call
mov
jle
dec
test
mov
mov
in
aas
popa
outsb
push
out
inc
jg
dec
sahf
nop
mov
mov
std
cmp
adc
xor
pop
lock
mov
push
and
sub
or
push
in
xor
psllw
dec
cmpsl
iret
into
jmp
lcall
mov
mov
sbb
popf
mov
enter
rcrl
in
mov
ja
pop
pop
pop
jge
pop
mov
mov
leave
mov
xor
jb
testb
sti
sbb
or
popa
in
add
xchg
rorb
lret
lock
sub
jns
hlt
sub
adc
pop
fdivrs
bound
cmpsb
and
adc
or
test
in
xchg
fs
push
add
jb
dec
addr16
ds
fcoml
into
test
movsl
shrb
ljmp
into
xor
adc
xchg
xchg
mov
nop
mov
decl
sbb
mov
or
pop
flds
add
push
pop
imul
out
mov
sub
jnp
enter
mov
push
or
cmc
or
cltd
sti
cmp
test
loopne
mov
cmp
cmp
out
gs
push
add
dec
pop
stc
inc
daa
pop
fmull
pop
ss
xor
xor
mov
imul
pusha
pop
daa
jecxz
add
mov
xchg
leave
into
fwait
lock
dec
icebp
icebp
ljmp
out
dec
call
pop
negl
std
orl
pop
cli
iret
loopne
pushf
sbb
jle
mov
mov
add
or
jl
lods
jbe
imul
inc
adc
sub
shlb
pusha
pop
xor
repnz
cmp
mov
dec
cmp
aad
mov
and
clc
imul
jbe
pop
pop
jo
ret
sub
add
daa
lcall
andl
push
iret
fcoml
adc
sti
sti
stc
jno
and
sbbl
scas
mov
out
push
outsb
mov
or
xchg
adc
enter
subl
jb
filds
push
jns
add
adc
gs
pushf
pushf
sbb
lahf
mov
fucomi
sub
mov
cmc
mov
jnp
loop
ret
mov
stos
lahf
jns
jge
xor
push
and
add
xor
mov
push
das
and
out
lea
cli
xchg
xor
mov
jp
pop
sub
cmc
add
lock
cmp
mov
mov
and
lret
cli
in
xchg
dec
jb
rdtsc
rcl
add
and
std
arpl
into
dec
xor
arpl
lahf
dec
mov
in
cmc
incl
int
sbb
imul
inc
dec
inc
out
lahf
mov
xor
sbb
cmp
xchg
or
enter
pushf
aas
sbb
and
aad
bound
aaa
ret
mov
push
test
and
pop
in
dec
sbb
push
or
ret
testb
push
pop
sbb
xor
in
aam
xchg
imul
and
pop
pop
inc
fcompl
fistpl
adc
push
pop
pop
sub
int
cmp
movsb
fcmovnu
in
stos
jle
add
adc
inc
xor
scas
push
out
ljmp
lods
movsb
ja
cmp
inc
std
dec
push
and
inc
push
cltd
rcrl
sti
xor
jbe
inc
add
inc
cmp
push
punpcklwd
pop
dec
mov
and
jge
push
inc
sbb
sbb
dec
pop
rcll
xchg
pop
xchg
dec
dec
es
mov
adc
hlt
iret
fcoms
scas
ja
or
mov
test
insb
sbb
shll
cmp
push
scas
mov
push
mov
or
das
dec
dec
push
mov
pusha
or
pushf
mov
stc
sets
mov
push
lret
add
xlat
subl
clc
shr
jno
xchg
into
outsl
test
pop
or
frstor
fcomip
sbb
mov
sub
push
push
and
jg
adcb
pusha
inc
aaa
xchg
int
mov
xchg
push
int3
rcl
in
or
sbb
outsl
lret
jp
iret
jmp
hlt
inc
int
pop
fs
inc
fisubrl
xchg
xor
xchg
ret
es
popa
jae
aam
js
add
pop
call
std
aaa
mov
cs
pop
cmp
mov
mov
push
mov
jl
in
push
pop
sbb
inc
fcomps
mov
enter
sub
sub
jae
gs
adc
sahf
mov
mov
sti
out
outsb
pop
push
lahf
or
cmp
insl
jb
pop
int3
cld
stc
out
mov
mov
push
mov
fbstp
sub
fs
fldenv
sbb
mov
into
flds
adc
mov
movsb
jbe
jb
aas
ja
sarb
pop
sbb
ss
pop
aaa
push
pop
out
pop
daa
cmp
sub
sti
pop
int3
sbb
push
lahf
add
adc
lret
popa
xlat
arpl
jp
pop
sub
mov
shlb
cmp
fsubrl
out
int
movsb
inc
mov
fistl
je
mov
enter
jno
inc
mov
inc
sbbb
decb
jne
adc
inc
mov
fsubrl
lods
rclb
inc
nop
and
into
repz
mov
pop
pop
push
and
sbb
cmpsb
mov
and
loop
and
pop
sub
vmovsd
adc
mov
aam
out
push
xor
sahf
cmp
jne
pop
mov
push
push
push
cmpsb
sub
cld
pushf
pusha
std
inc
push
cld
stos
cs
adc
repnz
ret
mov
jp
mov
or
cmpsl
loopne
jo,pn
pop
or
pop
das
dec
test
std
dec
or
leave
jno
ret
int
sbb
fidivrs
cmp
imul
adc
or
jns
mov
cmp
push
pop
rcrl
mov
mov
in
dec
mov
xchg
insb
les
out
pop
shrl
out
sub
add
xchg
hlt
sub
imul
lea
push
xchg
shrl
js
push
int
jo
out
in
sbb
dec
inc
mov
pop
pop
daa
adc
and
xor
sahf
imul
xchg
or
lret
add
shll
movsl
mov
pop
das
and
mov
jne
das
fisttpll
daa
out
cmc
xchg
jns
loopne
jae
xlat
sbb
sub
out
xor
push
cltd
pop
loope
aaa
sbb
push
xchg
aad
xchg
mov
lock
je
and
adc
shl
pushf
mov
rcll
xchg
or
daa
fidivrl
in
je
or
lret
imul
lds
cli
mov
cli
jne
loopne
in
inc
rcrb
sbb
pop
sbb
stc
cmpsb
aad
cmp
outsb
ret
daa
stos
decb
pusha
mov
ds
xchg
into
adc
add
xchg
iret
out
pop
insl
sti
push
daa
dec
fwait
jae
ret
jb
outsl
or
arpl
cmc
xchg
movsb
les
pop
enter
cli
movl
ja
adc
cltd
insl
sub
sub
sbb
cmpsb
gs
xchg
sbb
add
xor
xor
test
ds
and
daa
mov
rclb
loop
push
movsb
pop
sub
sbb
out
jnp
lret
add
aas
enter
daa
mov
in
mov
xor
and
insl
outsl
addr16
imul
adc
cmp
sti
jl
mov
adcb
pop
sti
lahf
lods
sbb
mov
out
pop
imul
fbstp
xchg
in
push
repnz
addr16
add
std
mov
ljmp
outsl
xor
test
lahf
xor
jno,pn
daa
and
imul
jae,pt
shlb
lret
sub
sub
lods
lret
mov
jbe
jb
jge
push
push
es
aaa
loope
or
movsl
push
dec
cmp
sbb
and
outsl
ja
js
fwait
mov
xlat
iret
out
inc
gs
jns
sub
mov
push
loop
arpl
nop
cmp
jno
or
test
xor
cmp
shll
out
rcrb
cwtl
aaa
mov
mov
push
inc
lret
inc
pop
call
add
fwait
pop
pop
pop
mov
cli
pop
or
cmpsl
mov
dec
cmpsl
pop
bnd
push
push
repnz
int3
add
aas
jp
pop
sub
jb
xor
test
pop
add
cmp
pop
subb
xchg
into
and
push
lds
test
jbe
jg
jbe
jnp
int3
cmp
push
clc
ss
push
cld
pop
aas
push
enter
fidivrs
pushf
nop
jnp
or
fildl
lods
push
das
xor
sub
sahf
repz
dec
cwtl
test
mov
xchg
adc
in
inc
push
xchg
mov
es
inc
stc
pushf
scas
shlb
and
sahf
int
jge
jnp
shl
cmc
sbb
adc
adc
fsqrt
xchg
dec
mov
call
or
add
cmp
mov
and
cmp
sti
lcall
jp
nop
push
mov
adc
outsl
rolb
fsubl
add
ljmp
lahf
add
jbe
mov
push
shrl
jns
mov
out
mov
mov
hlt
pop
cld
cmp
mov
jb
mov
test
jp
call
or
fmuls
sbb
addr16
xchg
mov
sahf
dec
add
xchg
xor
jne
jbe
and
nop
lods
nop
xor
mov
xchg
call
adc
mov
cmc
jbe
mov
leave
lods
pop
movl
push
mov
cmpsl
sbb
mov
add
push
jg
andl
sub
fcomi
pusha
xorl
and
fldenv
pushf
arpl
xlat
push
pushf
je
xchg
jne
push
pop
dec
pop
add
rorl
mov
xchg
stos
loopne
inc
movsl
mov
dec
rcrl
push
xchg
pop
enter
mov
jnp
inc
mov
push
jg
mov
and
movsb
cmp
jbe
jl
bound
jmp
and
fwait
lret
sbb
dec
cwtl
sarb
in
jnp
inc
dec
pop
ja
sub
ss
xor
xor
mov
lahf
mov
movsb
ja
lcall
aaa
loopne
jl
mov
lods
fidivl
xchg
int3
mov
stc
loopne
shll
lock
dec
xor
sbb
repnz
add
push
imul
aaa
lret
clc
cli
cli
test
xor
aaa
cwtl
test
cltd
sub
sbb
das
and
imul
mov
cmp
fmull
sbb
or
fmull
bound
out
mov
and
pop
test
jg
pop
push
cltd
das
bound
stos
mov
adc
xor
jp
imull
mov
stos
popf
cmp
hlt
in
dec
add
mov
les
sub
fstpl
mov
sti
loope
sbb
rcll
sub
roll
xlat
mov
cmp
arpl
mov
imul
mov
fidivl
jmp
sub
inc
xchg
sbb
add
xchg
imul
bound
sbb
pop
aaa
rcrl
lret
clc
mull
and
push
in
fwait
add
pop
jns
pushf
insl
pop
in
dec
cmp
jne
mov
out
xlat
sti
cs
cli
stos
xor
pop
sbb
add
xor
std
mov
jo
mov
sbb
stc
sbb
dec
sbb
out
and
push
xchg
fidivl
icebp
xor
popf
lahf
fdivp
sub
xorb
adc
add
pop
ljmp
fstl
jne
js
pop
movsb
jnp
add
and
mov
fildll
sbb
pop
out
xchg
mov
mov
add
test
mov
negb
rcl
lret
lds
dec
into
outsl
cmpb
xchg
stos
inc
mov
push
popf
fsubrl
adc
mov
movsl
pop
test
bnd
xor
arpl
pop
enter
pop
adc
fcmove
scas
adc
stc
jmp
mov
lret
int
pop
out
xor
aam
jnp
gs
dec
mov
mov
jp
bound
sti
imul
sbb
pop
aaa
stos
push
push
sbb
out
iret
stos
add
cmc
sub
cs
cmp
cmpsb
outsl
fistps
nop
adc
les
daa
xchg
mov
and
dec
adc
and
or
jnp
int3
popf
mov
or
pop
in
jge
shlb
loope,pt
testb
sub
repnz
clc
mov
in
push
insb
cmp
dec
jbe
add
scas
xor
roll
pop
repz
adc
dec
mov
fwait
aaa
ret
adc
sub
sub
dec
add
add
jb
prefetcht2
mov
es
mov
pop
or
out
testl
cwtl
adc
and
pop
repz
and
loopw
inc
xor
mov
sub
jb
jno
adc
xchg
push
push
cmp
or
insl
adc
adc
repz
popa
dec
clc
imul
test
and
leave
add
push
jl
jns
push
clc
sti
inc
stc
out
or
orl
adc
out
dec
mov
mov
enter
push
xchg
jns
push
movsb
imul
lret
push
sbb
cwtl
xor
in
nop
mov
and
jne
daa
iret
popf
and
repz
mov
mov
mov
cmc
fsubl
daa
adc
sub
leave
adc
xlat
lds
sti
pop
mov
push
lods
mov
repz
fistl
push
cmpb
addr16
add
cmc
fisttps
lret
lret
mov
mov
jb
popa
fsubs
in
and
jns
in
sub
divb
add
adc
xor
jae
out
mov
jb
out
loopne
xor
pop
js
pop
push
sub
fsubrl
mov
lds
cmp
cmp
push
or
scas
or
aas
mov
push
jle
outsl
lods
sub
dec
cs
pop
mov
pop
call
pop
nop
mov
jbe
pop
push
frstor
dec
push
mov
pop
mov
cmovnp
pop
loop
repnz
cmp
ret
ljmp
mov
loopne
inc
jo
or
mov
xchg
ffree
mov
fmull
sub
cmp
fsts
dec
mov
icebp
dec
lahf
jmp
in
xchg
movsl
in
aaa
sub
lret
dec
decb
scas
aaa
cltd
sbb
iret
fwait
push
xor
mov
data16
cmp
daa
cli
lret
call
mov
dec
stc
mov
bound
bnd
dec
popf
add
xchg
mov
mov
cmp
lds
xchg
mov
in
jno
xor
stos
cmp
dec
popa
das
insl
int3
jbe,pt
shrl
cwtl
mov
pop
icebp
push
in
mov
mov
mov
clc
aad
lock
idivb
stc
in
mov
mov
stos
xchg
and
lcall
cltd
lock
loope
mov
jns
ljmp
shlb
aad
xchg
jo
and
adcl
mov
test
xor
lret
inc
jge
lock
pop
lods
push
lock
repnz
lock
fsubr
jns
sbb
push
xchg
adc
cmp
movsl
test
pop
es
jg
dec
loopne
inc
xor
lock
lret
in
mov
in
mov
add
mov
inc
mov
fistl
push
mov
lahf
pop
hlt
das
out
ficoml
mov
cmp
or
fcmovne
push
aad
sbb
jecxz
inc
outsb
iret
mov
loope
ret
inc
xorl
xor
xchg
add
or
lret
add
sbb
add
mov
nop
jbe
jns
inc
sbb
movl
xchg
test
and
dec
and
sarl
or
aaa
ja
int3
sub
fwait
xor
sbb
dec
clc
fbstp
push
leave
inc
lock
sbb
push
dec
xchg
sub
xchg
lods
add
cmp
jns
push
ret
jae
sub
inc
rcr
mov
repnz
inc
xchg
sahf
jb
stos
enter
sahf
cmp
fisubrl
aas
sti
lea
add
dec
cltd
mov
popf
jae
jnp
imul
sub
mov
lods
sbb
mov
lods
push
jg
loop
pop
mov
into
fcoms
lret
add
mov
jg
mov
addr16
mov
cmpl
pop
arpl
sahf
sahf
out
inc
push
shl
fs
repz
or
std
mov
pop
movsl
fists
rclb
push
mov
fldcw
pop
out
bound
xor
cli
rcr
addl
mov
das
sbb
adc
inc
cld
push
lret
test
outsl
fcomps
into
dec
loope
es
mov
inc
pusha
xchg
adc
mov
mov
inc
cs
xchg
or
or
cs
jp
pop
cmp
sahf
lods
jg
lret
lret
ds
jge
push
dec
jbe
cmp
ss
cmp
push
xchg
mov
and
pop
jo
test
sahf
pop
push
mov
or
pushf
dec
icebp
pop
fisubs
movsl
daa
imul
iret
push
sti
fcoms
push
cmpsl
iret
sbb
sarl
fs
lahf
jge
call
mov
xor
pop
les
rcrb
xchg
arpl
aam
repnz
push
lret
xchg
push
push
inc
out
scas
sti
fs
fwait
sub
dec
cmp
push
in
jo
or
movsl
and
lea
adcl
sbb
je
movsl
cli
sbb
mov
jo
in
cli
cltd
repnz
xchg
pop
jecxz
arpl
cld
aaa
add
es
dec
sahf
sub
out
xlat
lea
mov
or
ljmp
shl
inc
jg
pop
popf
adc
sbb
mov
shll
cmp
jecxz
and
or
sub
sbb
lret
inc
xchg
cmp
fdiv
leave
cltd
jae
enter
mov
mov
es
and
jle
add
xchg
adc
lahf
or
inc
hlt
adc
rol
adc
jns
mov
adc
fisttpl
int3
mov
lcall
popf
fisttpl
outsb
ret
and
xor
lahf
inc
pop
movb
adc
leave
and
clc
hlt
test
add
fstl
mov
xlat
jg
pop
mov
test
dec
mov
mov
push
push
pop
lahf
adc
dec
test
out
push
mov
stos
ret
in
sub
gs
out
aad
hlt
dec
pop
ja
ret
mov
sbb
xor
inc
push
add
mov
imulb
mov
xor
shll
shl
lds
xchg
and
push
sahf
pop
add
xchg
jns
hlt
lods
jns
fwait
scas
sub
mov
int3
and
ficomps
xor
mov
pop
das
and
xchg
inc
int
scas
jge
shll
nop
xchg
jl
stc
popf
shll
daa
pop
inc
ficoms
cmpsl
xor
push
jmp
je
dec
daa
aad
loopne
inc
lock
fstpt
subl
inc
test
gs
mov
mov
and
pop
enter
mov
xchg
addr16
arpl
mov
cltd
lds
loopne
arpl
sub
fdiv
sti
sub
sbb
in
sbb
mov
pusha
movsb
xlat
test
mov
mov
jo
xor
je
xchg
lods
dec
sti
mov
shll
imul
pusha
loopne
xchg
xchg
push
outsl
test
adc
lret
sbb
and
xchg
icebp
jg
pop
jecxz
push
xor
mov
xchg
aas
pop
out
xchg
inc
push
sub
fnsave
add
gs
cld
andl
jle
lret
and
loope
sub
in
sbb
jns
and
xor
push
push
jge
cli
cmp
fistpl
dec
xchg
xchg
xor
pop
leave
gs
xchg
fiaddl
fdivrs
and
call
inc
pop
sbb
inc
xor
fbstp
jns
lock
push
jle
sarb
push
dec
test
sahf
sahf
test
fdivrl
iret
jmp
cmp
les
lret
ja
shlb
sub
hlt
ret
mov
lret
pop
dec
push
pop
inc
out
sahf
sbb
daa
adc
clc
xchg
sbb
xchg
stc
leave
lret
jmp
pop
push
jae
or
and
inc
dec
cld
in
out
sbb
in
fwait
mov
adc
push
movsb
mov
inc
sub
push
dec
sub
outsl
test
inc
sbb
or
xchg
int
jle
out
or
data16
ljmp
mov
sbb
int3
inc
mov
add
decl
push
call
stc
jnp
push
push
adc
add
lret
mov
and
xor
jbe
push
icebp
mov
mov
test
mov
xchg
in
fsubrs
sbb
xor
mov
pop
imul
adc
rcl
ds
cmp
int3
mov
push
pop
xor
xchg
fstpt
sbb
stos
xlat
movsl
mov
push
pop
sti
push
sub
inc
dec
xor
js
fcmovnbe
in
lods
test
sbb
sarb
cltd
lcall
mov
inc
jle
sarl
lods
mov
add
mov
or
je
push
pushf
mov
sti
push
fmull
into
movsbl
fiadds
jg
mov
subb
sbb
aaa
aaa
and
add
mov
mov
xchg
divl
add
int3
cli
jmp
jne
stc
sbb
clc
test
ret
mov
int3
shlb
cmp
mov
xor
xchg
adc
out
push
push
cmp
sbb
repnz
enter
in
adc
ret
sub
iret
out
fidivrs
xchg
imul
xor
out
cmp
and
clc
xchg
push
sub
mov
push
movb
dec
push
add
jecxz
sub
jecxz
add
or
outsl
popf
push
and
cmpsl
pop
add
js
fwait
mov
push
out
lcall
or
mov
imul
pushf
jmp
fdivrl
sti
stos
or
jae
fidivrs
shr
stos
push
mov
mov
dec
cpuid
pop
xor
ja
dec
movsl
inc
or
test
jmp
cmc
imulb
mov
push
pusha
inc
sahf
mov
add
sub
jge
call
es
fcomps
push
stc
callw
aam
int
test
lahf
mov
out
sub
jbe
push
dec
mov
add
or
in
or
jns
nop
mov
nop
mov
loop
mov
mov
push
sub
fsubs
arpl
pop
pop
sbb
sub
mov
test
and
mov
aaa
shld
scas
loop
sbb
pop
std
arpl
out
scas
and
call
add
lcall
mov
adc
aaa
fstpt
mov
ret
mov
and
adc
add
popf
out
pop
pop
notl
dec
cli
out
jne
add
or
mov
out
xor
xor
xchg
mov
mov
repz
fld
adcl
clc
lea
test
movsb
inc
in
xor
sub
pop
pop
sarl
cmp
je
call
push
push
js
stc
adc
scas
movsb
jns
xchg
mov
outsb
out
lahf
insb
movhps
icebp
mov
xchg
add
rorl
mov
mov
mov
or
push
sub
push
xchg
pop
dec
xchg
shlb
pop
sbb
push
push
stc
xchg
xchg
insl
shrb
mov
mov
mov
aam
loop
and
xor
mov
pop
shl
mov
scas
add
lock
lods
and
dec
jnp
cmpsl
sub
sub
mov
jp
adc
pop
mov
fwait
loope
pop
push
inc
mov
aas
jmp
movzwl
push
popf
mov
int3
xor
jo
sbb
aaa
push
sub
imul
adc
outsl
js
cmc
dec
scas
xchg
aaa
popf
sbb
or
jnp
sbb
sahf
mov
mov
int3
cltd
call
inc
int3
clc
mov
aas
or
mov
jb
xchg
jmp
sti
push
dec
fs
and
jle
inc
and
mov
stos
pushf
jbe
scas
mov
pop
fdivs
pop
dec
pop
sbb
adc
shl
andl
stos
call
sbb
xchg
dec
lods
sub
push
in
imul
lret
adc
pop
xchg
mov
and
out
shrb
add
pusha
jl
icebp
add
jle
add
mov
aaa
inc
jb
push
aam
pop
mov
bound
sbb
sub
loop
push
aam
clc
cmpl
movsl
push
inc
dec
cli
inc
jle
paddsb
cltd
mov
aas
adcb
and
repz
dec
scas
popa
add
stc
or
mov
test
pop
inc
les
xlat
push
mov
cmp
pushf
add
jno
jb
std
pop
jecxz
jmp
sub
pop
adc
sahf
sub
inc
push
jp
jecxz
xchg
dec
pop
or
cmp
rolb
dec
sbb
mov
pop
lret
out
in
inc
add
repz
pop
pop
in
inc
mov
mov
shlb
movsb
ja
mov
mov
cmp
cmpsb
gs
mov
jo
mov
mov
cmp
mov
xchg
adc
stos
cmp
pop
cmp
mov
fst
popf
dec
ds
and
pop
fdivrl
xor
push
popa
and
divb
pop
in
out
xor
mov
xchg
shrl
xchg
mov
or
jno
pushf
mov
fnstcw
xchg
mov
cmp
xchg
lds
mov
insl
inc
xor
stos
fwait
sbb
xor
adc
ret
xor
es
dec
dec
stos
and
xor
mov
mov
sub
adc
stos
js
sahf
sti
mov
mov
pop
dec
adc
push
adc
cmpsb
dec
adc
xchg
daa
and
xor
mov
cld
xor
stos
cmp
rcr
push
outsl
xchg
or
adc
movsb
aad
hlt
sub
and
mov
adc
icebp
pop
sbb
xchg
xor
roll
fst
xlat
andl
int3
jno
jle
scas
addr16
pusha
insb
mov
and
adc
loope
call
cli
xchg
cmp
sahf
adc
push
jbe
mov
xor
sub
xchg
loope
daa
xlat
int
jecxz
pop
inc
dec
mov
fwait
and
es
adc
dec
dec
lods
and
rcl
lahf
fcmovu
testb
push
cmpl
inc
xchg
call
xor
stc
fs
add
push
stos
in
popf
bound
addl
adc
lret
movsb
aad
or
fldt
or
clc
ficomps
jbe
frstor
mov
mov
ja
loopne
popa
sti
lret
push
pop
push
cwtl
pushf
mov
dec
jp
shrl
cmpsl
dec
sbb
pop
cmp
sbb
push
mov
daa
adc
mov
push
and
outsl
stos
ret
and
push
inc
sub
xchg
in
push
fst
lods
xor
jmp
jns
test
jo
xchg
cmp
mov
pop
pushl
mov
aas
arpl
cli
and
movsl
in
pop
iret
push
mov
pushf
push
push
jo
pop
adcl
mov
test
inc
push
mov
xchg
jo
cmp
ljmp
test
dec
xchg
mov
lret
dec
scas
and
jle
jno
scas
cli
mov
lock
loopne
mov
add
iret
jmp
dec
daa
mov
ret
jl
lahf
shlb
dec
and
pop
push
pop
in
pushf
cmpsl
arpl
aad
js
push
push
or
sti
jle
pop
fisttps
int
flds
shl
sbb
cmp
mov
or
std
mov
push
es
je
js
test
mov
ja
ss
and
xor
add
dec
mov
aaa
daa
imul
notl
pop
jnp
jecxz
inc
push
xchg
dec
jno
sbb
das
lods
es
mov
les
cmp
fucom
or
xchg
stc
js
pop
adc
pushf
int3
jl
cli
mov
cld
cs
or
aad
jb
dec
sti
and
std
xchg
movsl
ret
or
rolb
cmpb
fstps
and
adc
push
imul
jecxz
adc
xor
ss
sahf
nop
adc
pop
in
fldt
add
int
dec
push
cmp
fbstp
push
or
call
jbe
xor
cs
dec
xlat
and
pusha
or
out
shrb
xchg
pusha
loop
mov
adc
jl
mov
rcll
adc
mov
or
mov
push
vsubsd
clc
xchg
push
jno
loop
adc
sbb
int3
or
mov
cli
push
fsubr
popf
push
mov
pop
inc
jl
push
divl
negl
jl
aaa
jne
xchg
insb
in
cmp
mov
hlt
or
stc
dec
repz
sbb
dec
jl
and
inc
lods
insb
call
movsl
fldl2e
bound
sub
sub
je
add
sbb
sti
mov
and
aad
pop
xchg
in
xlat
jl
repz
cmp
jbe
sbb
add
fstpt
mov
cmp
iret
push
divl
xchg
xor
sub
cmp
adc
out
arpl
hlt
inc
jo
xchg
xor
outsb
lds
sub
dec
dec
cli
sub
sub
jne
mov
sub
scas
les
push
push
aas
fdivs
sub
xchg
lock
shlb
call
addr16
scas
pop
pop
and
decl
mov
jb
repnz
scas
lret
pop
pop
mov
cld
ja
ss
mov
je
pop
xor
clc
push
mov
jg
test
sahf
pop
adc
outsl
push
pop
xor
pop
push
sbb
pop
cwtl
lahf
jp
push
push
pop
mov
cmp
mov
mov
shl
jnp
inc
in
push
test
addr16
add
add
mov
cmpsl
nop
cs
insl
out
enter
repz
inc
push
aam
and
pop
mov
push
lret
scas
mov
dec
leave
pop
xor
adc
lcall
out
jnp
pushf
mov
lods
mov
int
xchg
xor
imull
add
dec
movsl
test
adc
pop
sti
and
inc
shlb
or
cs
jbe
mov
fsubrs
subb
mov
jl
xor
fs
ret
mov
inc
pop
out
dec
and
test
or
ja
or
and
aad
out
lock
movsb
or
lock
mov
std
jp
js
stos
loope
dec
fwait
cli
or
shr
mov
test
aaa
stc
sub
xchg
subb
mov
scas
or
jecxz
sub
jb
adcl
or
imul
test
mov
add
std
shlb
out
jmp
insb
je
jge
inc
mov
xchg
lret
shlb
gs
dec
xor
jmp
sbb
dec
or
cmp
mov
ds
test
fstpt
out
jnp
add
clc
adc
push
stos
int
notl
push
adc
popf
adc
pop
and
jae
loop
stos
adc
xor
pop
fwait
mov
popf
cmpsl
xor
stos
xchg
push
ret
aam
fcmovnb
jecxz
cmc
jge
sub
xchg
pop
xchg
lock
push
out
les
inc
mov
cmp
inc
pop
sub
fsubrp
adcl
xor
ds
push
dec
xchg
daa
mov
popf
lock
sti
dec
repnz
mov
mov
out
ret
mov
jne
bts
xchg
fwait
jmp
ret
inc
mov
cs
dec
stc
ret
xor
push
sub
stc
push
rcl
inc
mov
lea
cmc
and
rorb
jnp
mov
addb
iret
inc
or
and
adc
jl
orb
ja
test
addb
icebp
push
mov
dec
flds
push
imulb
leave
out
in
repz
mov
into
cli
mov
inc
jmp
in
jns
gs
xor
lods
stos
mov
adc
or
rolb
enter
repnz
adc
imul
pop
push
push
xor
mov
xchg
xor
sbb
pop
and
xchg
fs
cltd
ds
repz
inc
pop
jl
mov
aad
inc
dec
leave
in
add
jg
and
in
pop
xchg
sbb
xor
adc
std
cmp
cltd
sbb
mov
lret
lret
pop
mov
out
dec
rcrl
sub
ret
and
fldt
dec
stos
mov
xchg
cmp
xchg
push
pop
addr16
in
sub
movsb
sbb
test
cmp
pop
adc
adc
add
or
inc
lret
imul
dec
lock
add
es
dec
out
sbb
mov
mov
movsl
dec
mov
or
outsl
ret
sbb
xlat
inc
fcompl
js
mov
nop
dec
adc
data16
dec
xchg
es
lret
and
inc
mov
clc
in
xchg
or
lds
mov
leave
shrb
sbb
test
test
sub
insb
shrb
xchg
mov
inc
pop
shlb
pop
and
mov
xchg
fcmovne
mov
pop
xchg
mov
sbb
pusha
push
sarb
fistpll
je
test
or
add
clc
push
insl
cmp
push
jecxz
dec
cmp
xor
int
mov
bound
popl
and
loop
dec
sub
and
jecxz
lea
xchg
das
dec
sbb
das
arpl
add
xchg
mov
in
and
mov
pop
imul
or
push
xchg
sub
popf
and
in
cmpsl
mov
mov
mov
xchg
or
lods
lods
je
cwtl
add
push
test
arpl
mov
int
push
sub
les
gs
jo
mov
jecxz
xchg
dec
pop
mov
addr16
rolb
movb
jg
outsb
shll
cmc
scas
test
cmpsb
out
jl
inc
repz
cmpsl
fistpl
call
push
pop
clc
sti
int
mov
mov
inc
jbe
push
add
pop
inc
cmc
mov
push
xbegin
das
lods
or
enter
mov
sub
test
mov
outsl
in
adc
lret
ret
pop
and
inc
push
rolb
gs
sub
pop
ds
rorl
je
xor
ds
adc
outsb
aam
pop
lcall
add
je
cmp
jae
pop
ds
cld
das
sub
mov
pop
leave
or
jg
lods
cmp
mov
int3
inc
insb
fcoms
mov
outsb
ljmp
into
ret
xchg
imul
les
insl
int3
call
adc
arpl
push
mov
pop
or
fisttps
clc
js
das
int3
loopne
add
mov
cmp
xchg
mov
pushf
in
jbe
or
mov
and
rcr
mov
cli
stos
fimull
mov
movl
aam
decl
outsb
lahf
ds
pop
scas
shrb
into
mov
and
out
dec
xchg
mov
ljmp
mov
xor
fucomi
xchg
nop
bound
xchg
xor
cmpsl
movl
xchg
std
aad
scas
movsb
jmp
int3
imul
cmp
dec
stc
push
mov
fcompl
add
sti
mov
jae
jnp
out
repz
int3
mov
mov
and
es
xchg
and
mov
stos
rorb
lret
cmc
out
inc
inc
ss
test
ds
push
mov
sub
lret
sub
jge
xorb
pop
lods
xchg
call
jnp
jg
and
in
arpl
adc
subb
mov
pop
fstpt
stos
sbb
pop
cmp
testl
or
shlb
and
sub
mov
in
xchg
loop
sbb
icebp
out
sarl
fmuls
sti
cs
sub
push
clc
pop
xlat
inc
or
mov
mov
fcoms
dec
cmp
xchg
mov
push
add
lock
push
clc
jns
lods
nop
lcall
cmc
subl
into
adc
jg
mov
pop
xor
adc
cmpsl
adc
pop
lret
rcrl
adc
hlt
sbb
cmp
roll
mov
andb
fsub
bound
jae
jo
and
nop
es
pusha
jae
inc
push
sarb
xchg
insl
inc
mov
dec
push
in
cmp
cs
into
shll
stos
or
cmp
xchg
je
dec
into
push
insb
add
mov
cmp
jnp
aad
rcrl
adc
pop
cwtl
or
lahf
mov
push
xchg
inc
xor
mov
mov
fdivl
and
xchg
popa
dec
mov
cmp
fs
mov
jl
mov
mov
inc
or
push
pusha
imul
mov
ds
mov
jnp
rcll
cli
out
mov
aaa
pop
ljmp
push
imul
pop
cmpsb
jmp
scas
fucomp
cmpsl
xchg
sbb
and
std
jl
xchg
in
mov
add
pop
loop
push
jbe
aam
dec
pop
enter
inc
pop
pop
lock
stos
and
dec
imul
jbe
push
lock
mov
mov
dec
mov
iret
scas
add
sub
mov
sub
pop
inc
mov
fwait
add
adc
jb
cs
add
shrb
pop
inc
xchg
add
push
fwait
or
mov
dec
movsl
mov
jmp
and
inc
pushl
fsubl
repnz
js
xor
xchg
enter
dec
fdivrl
int
cmpsl
dec
les
push
lret
mov
fwait
xor
lods
call
jb
jmp
fcom
sti
xor
jg
fisubl
jg
gs
movsl
push
out
push
shll
push
adcb
dec
in
arpl
xor
mov
add
xor
xchg
ret
cwtl
fnstenv
repnz
es
data16
fisubrl
mov
pusha
and
loopne
les
roll
imul
test
jecxz
iret
roll
iret
pusha
jae
push
movsl
lahf
push
and
mov
test
inc
xor
subb
sub
pop
push
out
dec
mov
sbb
test
in
pop
fdivs
push
orl
cmpsl
test
mov
mov
mov
adc
pop
xor
sar
push
les
sbb
xchg
insl
stos
pop
xlat
dec
in
dec
pop
jbe
dec
aam
add
les
jp
aam
xorb
mov
jge
les
cmp
mov
or
mov
pop
push
lcall
or
mov
data16
jge
imul
icebp
enter
shrl
orb
js
and
inc
mov
sti
sbb
int
add
lods
pop
js
add
sbb
shlb
cmp
and
dec
sub
sub
pushf
test
jb
sbb
popf
and
data16
fs
mov
scas
jecxz
mov
cmp
repnz
jne
sub
xorl
out
push
imul
test
jmp
les
aas
sub
pop
lahf
leave
mov
xchg
pushf
cmp
xchg
mov
and
fstl
jbe
iret
lds
cltd
pop
inc
test
out
cltd
popa
jne
call
rcl
jle
scas
adc
pop
jmp
jno,pt
jg
fisttpl
repnz
adc
push
aas
xor
dec
js
aam
pop
int3
pusha
std
sub
xlat
lahf
aas
push
int
sub
push
mov
testb
pop
ror
jmp
mov
and
pop
cmp
pop
out
inc
push
inc
mov
inc
push
cmpl
insl
popf
outsb
aad
test
add
pop
lret
add
iret
ja
hlt
int
cli
adc
sbb
adc
incl
mov
and
lds
mov
jb
push
and
imul
ficoml
cs
or
bound
cmpsl
add
gs
xchg
fst
ds
cwtl
cwtl
out
es
sub
or
lret
push
mov
cmpsl
out
mov
mov
xchg
or
hlt
inc
jnp
fcomps
into
out
sub
inc
mov
dec
sub
pop
arpl
lret
and
out
lahf
mov
xor
mov
loope
inc
jl
jbe
mov
insb
pop
addb
subl
pop
fildl
rolb
jle
outsl
subl
push
xchg
test
cwtl
xchg
mov
mov
sbb
outsl
pop
push
and
dec
rcl
aad
mov
das
xchg
mov
std
lahf
test
add
fsts
lods
je
repnz
jge
cli
sbb
ds
dec
je
jmp
arpl
addr16
sarl
sbbl
xor
adcl
je
mov
jmp
push
cmp
cmp
decl
lds
jae
inc
daa
stos
jp
insl
and
xchg
jnp
mov
ds
jg
push
lret
xchg
xchg
sbb
test
cmpsl
cmp
push
adc
jp
xchg
sub
inc
fadd
faddl
jbe
int
inc
mov
je
or
pop
fs
lret
mov
xchg
movsl
xchg
push
xor
xchg
mov
xchg
cmpsb
jle
stc
ds
sub
fsubs
add
pop
push
and
adc
lds
imul
jmp
inc
add
and
mov
xchg
xor
mov
lods
mov
movsb
mov
lods
mov
out
test
sub
das
dec
faddp
fiadds
cmpsl
jns
mov
add
sbb
pop
xor
movsl
jl
loope
loopne
imul
xlat
pop
out
mov
fsubl
les
movl
fwait
mov
push
mov
repz
imul
jg
out
loope
or
mov
and
adc
fs
jno
sbb
rolb
lahf
jae
pusha
mov
rorl
inc
lcall
push
xchg
adc
mov
sub
add
pop
inc
mov
sbb
arpl
loop
test
sub
imul
das
xchg
sbb
add
jns
sub
or
push
inc
pop
cmp
xchg
out
cld
inc
pop
sub
cmc
xchg
xor
jne
push
insl
popf
je
icebp
hlt
scas
lret
sbb
clc
int3
imull
push
hlt
in
mov
add
pushf
push
mov
rcl
nop
fldl
mov
and
scas
add
xorb
sbbb
mov
js
stos
inc
pop
notb
out
jge
add
loope
not
jg
xor
mov
or
lret
cltd
xchg
add
scas
out
bound
ds
add
add
or
ja
dec
xor
xchg
push
add
inc
xchg
dec
into
cli
pop
dec
jb
sbb
inc
test
roll
adc
cs
pop
iret
ss
test
in
sub
addr16
xchg
mov
rcll
jp
out
icebp
scas
lret
and
ja
and
fnstcw
pop
adc
movsb
popa
fmul
sub
cmp
lea
fdivrp
fldt
dec
repz
mov
mov
sarb
icebp
mov
jns
jg
mov
into
xchg
sub
icebp
movsl
mov
bnd
cld
into
pop
mov
popf
xchg
fstpl
call
sarl
mov
iret
mov
sbb
mov
push
lret
xchg
daa
or
cmp
xchg
lods
clc
mov
sbb
repz
fnstcw
jb
dec
xchg
scas
xor
sbb
enter
in
ljmp
ds
mov
ljmp
shl
inc
mov
sub
dec
leave
push
xor
outsl
sub
enter
hlt
imul
les
mov
fadds
dec
rsm
or
aam
xor
xchg
jg
sti
push
jb
xchg
pop
das
aad
xchg
or
sbb
lcall
adc
sbb
jmp
repz
xchg
pop
jo
and
sbb
test
jns
mov
jo
aam
fisubrs
xchg
std
ja
jns
sub
ss
js
xchg
scas
fs
das
clc
adc
into
or
in
mov
inc
jmp
push
sub
xor
sub
outsl
mov
cmp
idiv
add
mov
pushf
sbb
outsb
sbb
mov
adc
sbb
sub
xchg
aam
jg
adc
icebp
adc
pushf
dec
popa
fiaddl
stos
adc
add
or
fistl
stc
mov
sbb
lea
push
or
or
sub
cltd
shl
xchg
shrb
bound
mov
stc
xor
inc
dec
lea
loop
in
lods
pop
pop
push
sub
jno
mov
jge
add
sahf
test
jmp
inc
mov
lock
and
sbb
aam
shll
push
lods
cmpsl
in
or
imul
ljmp
jmp
mov
insb
adc
outsl
test
cmp
pop
fidivrl
mov
sti
shl
repz
arpl
lahf
insl
mov
scas
mov
cmpsb
fsubl
mov
fisttps
and
xor
jnp
scas
popa
fcomps
or
fsubl
ljmp
cltd
ljmp
or
mov
fisttps
dec
or
sbb
inc
test
dec
mov
aam
mov
fs
dec
sbb
or
aad
sub
jbe
xchg
mov
negl
xchg
stos
test
adc
adc
sbb
mov
push
ljmp
fcomps
pushf
pusha
push
lods
cwtl
mov
inc
imul
sub
stc
lods
inc
sti
aad
and
or
mov
adc
lods
and
int
push
push
xor
cmpsl
stos
test
call
movsb
sub
sub
adc
jge
dec
push
gs
adc
mov
outsl
in
cmpsb
add
mov
adcb
stc
push
repnz
pop
notb
push
mov
xchg
in
pop
inc
cmp
xorb
in
js
lcall
enter
ret
neg
or
jo
pusha
loope
inc
sbb
mov
push
inc
lcall
sbb
popf
inc
mov
dec
call
pop
inc
testb
dec
lret
imul
mov
mov
mov
test
mov
jle
movsb
loop
jbe
outsb
jmp
inc
mov
pop
test
leave
push
negb
fimull
movd
xor
add
loope
dec
scas
xchg
mov
es
pop
xchg
dec
push
stc
enter
pop
ficompl
mov
and
ret
gs
loop
jns
pop
int
push
cs
jge
filds
lret
rcrb
subb
insb
pop
or
push
mov
mov
xchg
jnp
rcrb
out
out
cmp
inc
mov
cmp
jp
jmp
fldcw
mov
inc
cmp
mov
cli
ss
adc
mov
daa
sub
push
push
pop
and
push
lret
and
push
fiadds
mov
in
loopne
fs
inc
lret
xchg
sub
sarb
imul
hlt
movsl
jne
call
lea
jnp
cwtl
adc
ret
data16
inc
jns
pop
mov
stos
test
sbb
xor
cli
push
adc
cmp
repnz
push
dec
jge
mov
mov
cmp
adc
cmpb
xchg
jno
xchg
out
je
pop
push
dec
ja
sbb
scas
xchg
mov
out
das
pop
les
in
out
pop
sarb
ja
insb
sbbb
aam
pop
fmull
imull
adcb
push
gs
xchg
mov
dec
adc
push
push
sbb
cld
xor
adc
push
dec
lods
leave
and
sbb
inc
add
mov
mov
pop
xor
movsl
jmp
xchg
xor
fdivs
mov
movb
sbb
pop
icebp
bound
mov
push
inc
sbb
sbb
push
mov
dec
adc
or
mov
scas
int3
insb
mull
lcall
mov
pop
inc
int
movsl
rcrb
addr16
xchg
scas
repz
ret
or
sti
idiv
ja
aas
lea
insb
push
sub
insl
dec
push
movsl
insl
ljmp
and
mov
enter
inc
lods
std
add
jnp
repz
movsb
mov
adc
adc
cmpl
mov
sub
mov
mov
add
inc
or
test
mov
fs
cld
adc
adc
in
imul
add
scas
xchg
cmpsb
stos
imul
pop
xchg
fisubrs
in
mov
stos
pushf
inc
lods
mov
jmp
loop
pop
imul
mov
int
icebp
pop
cmp
pop
stos
pop
inc
loop
aas
das
out
inc
fnstcw
push
out
mov
and
add
aam
xchg
jns
les
sub
mov
xlat
shrb
pop
repz
jl
aad
test
adc
lds
jo
mov
or
arpl
es
sub
fbld
sbb
inc
stc
shr
imul
movsb
lret
lahf
mov
mov
dec
test
call
imul
aam
hlt
pop
lods
mov
dec
or
mov
xlat
jns
add
shl
jae
ja
icebp
xchg
xchg
pop
add
push
jecxz
pop
fbstp
mov
jb
xor
loopne
insb
mov
inc
stc
add
sub
mov
ficoml
mov
dec
in
push
inc
xor
or
sub
and
repz
xor
fs
pop
fisttpl
dec
loop
repz
lods
pop
std
stos
addr16
jmp
push
mov
mov
nop
ljmp
inc
jb
mov
adc
test
and
cs
inc
pop
movsl
out
std
outsl
mov
xor
push
jae
lret
fsubl
inc
pop
scas
pop
xor
and
and
std
insl
fwait
iret
pop
shll
mov
ret
sbb
add
jp
inc
jno
notb
cwtl
dec
bound
adc
mul
push
ja
push
adc
sub
inc
and
jp
and
out
sbb
decl
int3
out
pop
dec
lret
jo
push
dec
test
rclb
sub
cmp
dec
fcomp
push
std
imull
fs
insl
adc
push
bound
sahf
or
mov
dec
call
add
mov
jb
adcl
inc
cmpsb
mov
add
xchg
push
adc
mov
sub
cli
ljmp
jmp
loopne
jmp
mov
in
mov
scas
lcall
mov
stos
push
push
int
and
xor
dec
sub
mov
clc
sahf
cmp
mov
cmovbe
pop
jbe
sub
dec
cmp
and
and
fs
and
mov
adc
aad
adc
and
push
rol
fwait
js
add
lret
xchg
inc
xchg
popa
lea
mov
ja
xor
xchg
cmp
sbb
ds
mov
dec
mov
mov
and
xor
ror
sub
out
push
ret
rcr
mov
adc
shl
cmp
mov
mov
dec
mov
fidivrl
test
sub
ss
dec
bound
pop
or
mov
sbb
mov
mov
pop
rol
dec
mov
in
jl
into
mov
insl
pop
jge
xchg
mov
dec
lcall
jp
call
das
movsb
mov
or
iret
jp
add
test
fsubrs
fdivl
cmp
inc
push
xor
pop
enter
xor
loop
mov
xchg
seta
in
insb
ss
adc
push
inc
and
rcll
push
das
cmp
jp
mov
outsl
rcrl
adc
imul
clc
mov
dec
add
rclb
outsl
pop
add
push
mov
fs
mov
adc
jns
or
leave
aad
inc
js
jp
adc
xchg
inc
jge
mov
jmp
shlb
cmpsl
sub
jmp
adc
sahf
and
lcall
in
pmaxsw
stos
fsubl
sub
or
stos
inc
arpl
scas
ljmp
test
jmp
dec
sub
jne
loop
addr16
xor
mov
sbb
popa
push
or
out
jae
mov
scas
push
ret
add
mov
or
xchg
ljmp
movsb
movsw
sbb
fs
test
in
jns
mov
cmp
push
fwait
sbb
outsb
inc
mov
sub
pop
inc
cmp
mov
sbb
xchg
pop
in
mov
cltd
int
xchg
ret
sub
adc
jp
push
xchg
or
push
xor
or
icebp
insb
push
sub
out
mov
bnd
lods
cmp
test
shrl
mov
mov
push
in
mov
mov
jne
cmpsb
cltd
imul
inc
cwtl
movsl
jne
sti
inc
test
add
out
adc
cmc
dec
nop
sbb
decb
outsb
leave
imul
clc
shlb
mov
lret
dec
mov
imul
lret
sub
je
out
mov
push
ffree
sub
xchg
xchg
subb
mov
xchg
lock
mov
lahf
jecxz
hlt
pusha
inc
and
adc
mov
fstp
pop
mov
jbe
js
cmpsb
or
popf
jl
xchg
imul
sub
ficompl
shrb
lods
sub
dec
fwait
or
cmpsb
fistpl
orb
movsl
testb
scas
push
hlt
mov
mov
xor
out
js
sub
push
push
pushf
mov
stos
pop
sbb
xor
mov
or
movsb
adc
iret
and
mov
xor
lds
dec
lret
mov
adc
lock
into
mov
je
rcr
xchg
addr16
andb
out
adcl
mov
repnz
push
roll
xlat
call
pop
mov
xor
dec
or
fldt
divl
xchg
in
stc
inc
lahf
xor
jmp
ss
or
mov
adc
jp
xor
inc
shlb
add
mov
addl
jl
fiaddl
jg
into
loope
add
or
xchg
lahf
gs
rcrb
popw
push
mov
adc
jmp
dec
mov
pushf
int3
cmc
cli
pop
sub
inc
movsb
lret
sub
std
add
ljmp
repnz
in
test
adc
sub
jbe,pt
adc
sub
sahf
lods
or
mov
imul
iret
ret
mov
push
stos
mov
movsb
sbb
fucomi
sarb
push
sub
movsl
dec
stos
sub
js
xchg
in
dec
and
dec
or
test
movsb
mov
xor
mov
adc
std
inc
jb
mov
scas
sub
pop
scas
cmpsb
pushf
shlb
in
pop
add
adc
and
adc
or
pmuludq
add
rcrb
cmc
xlat
add
aad
int3
xchg
scas
sbb
nop
xchg
jl
mov
inc
sti
mov
xchg
mov
xchg
cli
add
jns
pop
xchg
and
adc
sbb
inc
xorb
test
scas
jb
mov
lock
pop
imul
xchg
xchg
outsb
xchg
repz
sub
jb,pn
cmp
jbe
xor
inc
out
daa
imul
inc
cmpsb
dec
aad
jl
fsubr
aam
cmp
in
dec
rolb
faddl
faddl
loop
push
inc
xor
test
fwait
inc
pushf
cli
sbb
je
popa
loop
xchg
dec
adc
lea
mov
lahf
mov
jbe
div
sbb
repnz
push
std
iret
inc
xchg
mov
jns
scas
mov
fstpt
xchg
out
ds
xor
cmp
mov
pop
les
xor
dec
pop
test
cltd
cli
xchg
inc
push
int
jle
sub
dec
test
mov
mov
pop
xor
cwtl
fcmovnu
movsb
pop
cmp
cmp
xchg
adc
testl
cwtl
pusha
sbb
push
hlt
jno
and
pop
lcall
mov
sti
pop
insl
rcll
pop
jno
jle
les
mov
push
pop
xor
mov
mov
popf
sbb
sti
mov
push
xor
mov
push
sbb
add
push
lods
int3
push
pop
fbstp
sbb
jo
dec
jbe
adc
popa
subl
cwtl
pop
lea
mov
jecxz
dec
mov
pop
mov
sbb
out
arpl
lods
mov
jmp
pop
cmp
mov
push
and
push
or
and
fs
int
imul
sarl
out
jnp
mov
sub
lcall
pop
int
push
fwait
aas
int3
mov
lock
rorl
outsl
repz
xchg
rolb
mov
shrb
mov
stos
jbe
or
inc
xor
mov
lret
fsubs
jp
enter
push
xchg
adc
movsl
outsb
push
dec
movsb
lds
add
mov
sbb
mov
mov
nop
andl
mov
inc
sub
xchg
daa
dec
fwait
push
mov
mov
imul
pminsw
jbe
lods
xor
cmp
jae
adc
jle
pop
sarl
outsb
push
pop
dec
push
adc
push
pop
mov
jns
or
stos
cmp
stc
mov
daa
dec
out
push
xchg
add
cmp
dec
fnsave
enter
fidivl
jns
ret
fldl
sbbb
cmpsb
popa
xchg
maxps
bound
cwtl
or
sbb
out
xchg
fiadds
push
xchg
aaa
scas
mov
lcall
cltd
cmpsl
dec
jne
call
xlat
pushf
dec
mov
dec
shlb
int
xchg
push
rcrb
sbb
sub
jg
cmp
insb
imul
out
jecxz
push
jecxz
popf
dec
ret
popl
xchg
pop
pop
sbb
push
cltd
add
jb
jle
mov
sbb
fwait
pushf
pop
pcmpgtw
idivl
hlt
push
pusha
cmp
cmp
test
dec
sbb
nop
mov
fwait
cmc
jbe
shll
and
dec
pop
aaa
adc
jns
pushf
ret
adc
pop
add
fwait
sahf
mov
int
fsubrl
rclb
dec
int3
pop
movsb
sbb
and
dec
pusha
xchg
add
test
stc
mov
sub
sub
push
xor
stos
mov
fisttpll
xor
jnp
cmp
sti
mov
aaa
mov
lahf
push
sub
cmp
iret
pop
dec
sbb
mov
pop
push
popa
bound
pop
daa
fdivs
xchg
xor
lahf
add
movsl
inc
lret
jb
shll
jae
cmp
imul
jne
rol
lea
shll
fadds
cmp
jecxz
imul
nop
dec
mov
test
xor
or
mov
xchg
fnstsw
sbb
xor
daa
push
xchg
adc
mov
xchg
ss
lret
mov
jae
push
insb
jno
fisubrl
sub
pop
ljmp
sarb
pop
fadds
nop
xchg
pusha
inc
out
or
mov
push
or
or
rcl
shll
pushf
adc
push
fadd
int
pop
push
outsb
jecxz
es
and
sub
mov
mov
mov
jns
pop
adc
ret
push
lret
adc
insl
iret
out
je
pop
pop
test
push
es
std
lret
scas
scas
sahf
dec
cld
jno
sbb
aam
pop
fstpt
pop
leave
xor
in
out
stos
pop
movsb
call
lods
scas
pop
lcall
xchg
adc
inc
adc
popf
ds
inc
cmp
ds
je
jecxz
push
cli
stos
xchg
xor
xor
cmp
aad
aam
push
cmc
add
leave
mov
xorl
pop
mov
fadd
pop
dec
ss
mov
cmp
outsl
or
jmp
rorb
test
mov
stc
jmp
jecxz
add
jnp
and
lret
je
inc
add
and
rclb
xchg
mov
sarb
nop
repnz
mov
fldt
dec
xor
stc
xlat
and
mov
dec
std
or
mov
out
scas
cmp
mov
imul
les
mov
or
jnp
sub
dec
inc
jp
mov
jmp
fsubrl
fnstenv
xor
mov
mov
fisubs
sbb
xor
push
inc
fnstcw
sbb
das
icebp
loop,pt
jne
rcrb
repz
push
aas
sbb
push
jae
int3
mov
sbb
xchg
sbb
inc
fisttpll
in
dec
leave
scas
stc
popa
inc
rcll
shlb
cld
sahf
repz
push
or
pop
add
daa
adc
outsl
das
mov
inc
inc
sbb
lods
popf
sti
insb
pop
sbb
or
outsb
jmp
fsubs
sbb
sbb
loop
test
pop
xor
pop
xchg
mov
data16
stos
out
inc
xor
pop
or
adc
clc
mov
pushf
aam
fsubrs
repz
ja
pop
jle
jns
loopne
int
testl
scas
pushf
mov
add
shlb
gs
push
pop
and
add
adc
lods
inc
push
das
shl
sbb
push
cmp
mov
and
in
sub
subb
popf
and
jp
add
push
inc
pop
jle
pop
pop
push
jb
das
inc
pop
xchg
insb
fdivl
jnp
pusha
jl
test
out
jmp
push
or
sub
das
add
sub
jmp
pop
subb
adc
mov
and
lock
std
imul
stos
xlat
mov
mov
jg
std
mov
fiaddl
push
lret
push
test
fsubl
ds
inc
xchg
push
nop
std
pop
jo
mov
mov
adc
mov
dec
out
dec
repz
pusha
push
sti
pxor
pop
mov
xchg
pop
mov
ficomps
sub
or
push
mov
inc
mov
mov
rolb
outsl
mov
outsl
repnz
and
cmp
insb
push
sub
fs
fidivs
sahf
leave
pop
inc
pushf
jno
fisttps
jmp
sub
rolb
gs
mov
push
cmpsl
inc
stos
mov
repz
mov
jg
insb
scas
js
adc
inc
adc
loope
gs
cmpl
insb
sub
fsubrl
std
mov
cmpsb
jge
hlt
xor
fwait
pop
lods
mov
and
loope
fs
mov
mov
subl
cmp
les
mov
lds
mov
lds
push
mov
inc
cmc
mov
insl
in
loopne
xchg
pop
xchg
lcall
test
push
and
out
jne
rol
pushf
adc
imul
and
inc
adc
fmull
lcall
gs
mov
stos
fcmovnu
xchg
jmp
in
cltd
sahf
daa
or
scas
in
inc
mov
movsl
xor
pop
rcrb
xchg
cwtl
insb
cmpb
mov
sub
push
push
adc
int
inc
or
sub
test
and
mov
das
leave
in
bnd
mov
or
das
and
jae
lods
sub
cmp
les
jnp
inc
int3
push
push
dec
or
jl
mov
pop
sub
imulb
push
push
in
int3
subl
popl
repz
mov
repnz
mov
fldcw
fadd
js
cmp
xor
js
pop
imul
push
push
gs
and
sbb
lret
sbb
pop
in
inc
je
adc
and
testb
cmpsl
push
test
mov
xor
fisttpll
adc
iret
aam
fwait
arpl
mov
pop
or
rcrl
pop
or
je
cltd
jl
pop
and
addl
mov
fimull
sbb
in
lret
loope
add
cmp
aam
mov
call
mov
sbb
xchg
test
or
fistl
push
aad
sbb
sub
mov
outsl
popf
push
push
ret
push
cs
pop
xchg
aad
adc
rorb
mov
sub
adc
dec
pop
xor
xchg
pop
adc
repnz
inc
dec
mov
mov
mov
cmp
aaa
std
jne
or
push
inc
lret
dec
cmpsl
push
orl
scas
daa
mov
dec
mov
loop
cmpsl
mov
int
scas
jmp
jg
mov
cmpsb
adc
fisubrs
jmp
cwtl
pop
jecxz
notb
lods
and
es
dec
xchg
push
arpl
cmp
cmc
cltd
adc
fldcw
jg
les
sbb
mov
xlat
lods
inc
cmp
mov
jno
push
repnz
ss
push
jns
xchg
jecxz
call
mov
pop
pop
fistpll
mov
arpl
es
imul
xchg
jp
fcompl
add
daa
outsl
test
ret
enter
out
pop
jp
add
outsl
or
cmp
xchg
or
shll
add
sbb
sahf
nop
imul
outsb
les
mov
or
xor
int
mov
sub
sbbl
loopne
lods
repnz
mov
movsb
or
std
adc
cmp
ljmp
xchg
mov
cmp
in
push
lds
sahf
mov
xor
sub
push
ret
ss
stos
xor
sub
add
sub
jns
orl
cmp
pop
or
jp
cmp
jmp
imul
stc
outsl
popa
insb
push
fxch
dec
dec
sub
inc
push
stos
lea
inc
xor
xchg
pop
xchg
popa
outsb
outsb
push
cmp
jns
rcrb
rcr
orb
push
and
test
jae
neg
mov
cs
cltd
testb
pusha
shl
mov
outsb
dec
mov
dec
mov
ljmp
push
ror
add
inc
xchg
imul
inc
arpl
jecxz
ud0
xchg
add
int3
filds
or
fs
out
fs
jle
aam
xor
adc
arpl
insl
mov
inc
ret
aad
mov
mov
sti
mov
mov
push
aam
add
mov
test
and
mov
sti
int
iret
das
sub
call
aas
lea
sub
ficompl
js
adc
clc
std
loope
mov
std
jle
xchg
cmp
scas
fcomps
fisubrs
scas
adc
lret
pop
dec
fcmovnu
addr16
cmp
rcrb
or
lock
lret
repnz
inc
movsb
pop
add
sbb
mov
ljmp
jecxz
addr16
sub
pop
ror
push
cmp
sbb
test
pusha
pushf
ja
mov
mov
jns
fildl
fimuls
pop
stos
int
stos
inc
cltd
repz
push
mov
loop
push
outsl
in
ja
jp
rorl
data16
jne
inc
cltd
and
mov
sub
adc
push
cmp
sbb
or
in
mov
loop
movsb
and
sbb
mov
addr16
pop
hlt
data16
xlat
xor
pop
dec
jns
mov
jecxz
adc
cmpsl
dec
ficompl
sbb
push
push
aam
pusha
cmp
pop
jns
ljmp
out
cmp
xor
sbb
mov
aam
push
sub
mov
cmp
mov
fadds
sahf
push
push
mov
mov
loope
or
jo
mov
das
add
cmp
adc
sub
lcall
lret
sar
scas
sbb
cmpsl
mov
and
xor
xor
outsb
inc
les
aas
ret
or
adc
mov
addb
mov
fstl
andl
fcoml
sub
push
push
pop
movsl
mov
lods
rol
icebp
inc
dec
or
test
jno
push
fs
mov
fidivrs
jnp
sarl
frstor
pop
setns
dec
sbb
jecxz
arpl
fwait
pop
int
fwait
mov
test
jp
inc
and
inc
mov
pusha
xor
xchg
mov
lret
pushf
mov
cmc
ljmp
pop
fstps
idivb
push
insl
cwtl
and
xchg
outsl
scas
popa
jb
mov
push
mov
cmp
mov
inc
sub
and
fstl
mov
mov
ljmp
pop
mov
movsl
adc
ss
xor
cmpsl
imul
xchg
setbe
enter
inc
xor
mov
mov
add
pop
jnp
mov
idivb
pop
xchg
mov
add
into
push
dec
and
das
icebp
xor
push
mov
lods
das
arpl
pop
ds
inc
cld
imul
cmp
lock
mov
inc
aam
sub
out
xchg
pop
lods
and
gs
popa
adc
mov
into
mov
scas
pop
adc
aam
aam
cmp
add
rorb
or
or
jb
push
loop
leave
fiaddl
push
xchg
inc
dec
cmp
lods
iret
add
add
pushf
dec
jne
xchg
inc
divl
lods
movsb
push
jnp
and
imul
sbb
add
inc
cmp
push
and
hlt
sbb
mov
push
dec
pop
aam
jae
test
sbb
sahf
xchg
or
imul
jg,pn
out
sub
out
push
mov
insl
pop
scas
iret
sbb
jmp
in
mov
adc
aad
xor
sbb
test
add
hlt
pop
fcomps
or
aam
mov
jo
pop
es
pop
out
sbb
jns
mov
mov
dec
sti
ja
and
aas
jg
and
jae
in
lcall
push
aam
fisttpl
cltd
mov
push
lahf
nop
aas
fstl
lret
es
adc
mov
dec
dec
cmp
test
add
mov
cs
loop
stos
or
inc
pop
inc
push
mov
inc
pop
out
push
xor
xchg
pop
sub
pushf
adc
mov
add
add
stos
out
pop
jns
sub
mov
xchg
call
rcrb
dec
push
or
mov
pop
inc
cld
sbb
jecxz,pn
stos
jnp
mov
test
push
ficoms
mov
xor
lods
xlat
fiaddl
jmp
hlt
push
xchg
inc
lahf
pop
and
cwtl
push
sbb
sti
loop
mov
hlt
fs
mov
or
or
cwtl
xchg
add
addr16
xchg
mov
jns
daa
mov
mov
add
jecxz
jbe
insb
sti
push
pop
imul
aad
mov
cld
ret
pop
or
jne
jg
sub
call
pop
shl
sysexit
sbb
sbb
ljmp
pop
movsb
insl
cmp
push
and
and
mov
jb
stos
pop
enter
pop
sbb
adc
je
lahf
cmpsb
mov
jbe
sbb
pop
sub
int
scas
jae,pn
jb
dec
fidivrs
xchg
fcoml
movsl
jne
or
push
sub
mov
cld
dec
jnp
sahf
xchg
mov
mov
lcall
leave
jnp
mov
pop
popa
inc
movsb
sub
add
into
mov
adc
in
pop
repz
dec
sbb
fs
imul
jmp
pop
mov
bound
cmp
inc
ret
pop
and
cmp
pop
ljmp
mov
call
lcall
ficomps
add
into
mov
dec
xor
mov
jbe
jecxz
hlt
mov
mov
cmp
cmp
mov
sbb
dec
adc
stos
mov
add
cli
repnz
stos
xchg
cmp
sub
ss
and
std
test
arpl
call
jge
and
mov
jnp
scas
pop
cmovge
stos
or
in
xchg
sbb
mov
fcmovbe
test
aas
stc
cmpsl
xchg
in
std
xor
and
mov
subb
adc
fbld
push
mov
ljmp
adc
mov
and
les
mov
inc
out
jne
sbb
out
ficomps
push
cltd
jmp
mull
fidivs
test
push
pop
iret
loop
cmp
xabort
mov
fs
outsb
fdivrl
cwtl
dec
jo
cltd
dec
xchg
filds
push
jmp
and
push
nop
hlt
sbb
fildl
insb
sbb
mov
outsl
push
push
stos
inc
dec
mull
mov
xchg
xchg
pop
int3
jbe
orb
cmc
add
lods
xor
mov
mov
andb
xor
roll
dec
loope
icebp
imul
mov
sub
xchg
sub
or
js
sbb
loope
add
adc
pop
icebp
push
fs
mov
jne
mov
add
leave
movsl
cld
cltd
in
and
lahf
jl
dec
fwait
pusha
cmp
mov
sbb
pop
sub
mov
sbb
mov
lea
les
mov
das
test
push
loop
or
aad
in
inc
adc
lea
sub
mov
inc
loope
out
inc
sbb
add
in
testb
ror
fnsave
cli
inc
hlt
jge
stc
sbb
adc
inc
inc
repnz
add
test
insl
push
adc
rorb
cmpb
pop
subb
out
cmp
mov
and
adc
fwait
cmc
dec
ficoml
or
xor
mov
sti
inc
pop
xchg
push
mov
or
jp
mov
aas
pop
inc
addr16
je
adc
nop
or
popf
xchg
mov
pop
je
or
xorb
jb
xor
adc
cmpsb
pop
and
les
stos
xor
out
jb
xchg
lahf
mov
adc
les
leave
ficompl
or
pusha
inc
and
cmp
or
jg
inc
jne
pop
clc
daa
loope
adc
les
push
jg
jp
mov
scas
dec
mov
pop
or
or
les
sbb
icebp
dec
push
int3
andb
cmp
cld
push
mov
ficoml
mov
in
sahf
mov
sub
sub
mov
insb
adc
js
mov
add
or
aad
mov
cmc
pop
movsb
xchg
pushf
scas
fmull
inc
stos
push
cmp
loope
fstps
popa
mov
test
outsl
jae
repnz
cmp
mov
rorl
lret
test
daa
fucomi
and
sti
stos
ja
mov
lret
push
inc
push
jg
popa
icebp
cmp
add
adc
repz
je
mov
cli
mov
faddl
hlt
jl
js
movsb
inc
push
lods
or
addr16
es
fiaddl
mov
scas
mov
push
pop
dec
or
into
or
cmpsb
mov
sbb
adc
pop
mov
push
ret
mov
fistpll
fwait
scas
sbb
mov
fwait
push
xchg
je
push
inc
or
mov
sbb
jne
cmp
sub
adc
mov
dec
jne
dec
xor
lods
sti
xchg
xchg
inc
gs
cmpsb
mov
dec
pushl
sub
xor
mov
mov
mov
dec
mov
dec
fdivs
and
xchg
or
dec
loopne
ja
xchg
pop
fcmovbe
into
aas
test
ss
lods
push
gs
and
lods
call
add
scas
adc
out
test
fimull
out
hlt
stos
xor
xchg
push
mov
add
inc
push
int3
jge
xchg
data16
push
std
lods
adc
bound
pop
mov
scas
xchg
jecxz
dec
je
je
push
mov
icebp
rcll
and
cli
stc
adc
fisttpll
jne
orl
push
inc
js
negl
sbbl
test
scas
movsl
subl
or
movsl
scas
into
mov
and
mov
push
xchg
pop
mov
sahf
mov
ficomps
enter
vmwrite
adc
subl
mov
sub
sub
outsb
stos
bound
in
sbb
dec
divl
dec
popa
inc
sti
js
xchg
sbb
xlat
adc
push
mov
out
xor
sbb
ret
push
sub
popf
push
icebp
adc
push
lock
loopne
sub
and
outsl
jo
test
movsl
enter
add
push
faddl
jnp
and
xor
fs
xchg
lcall
mov
or
aam
inc
aad
test
fsubl
ljmp
insl
cli
xor
mov
rcll
mov
mov
adc
pop
cwtl
dec
enter
outsb
pop
mov
pop
ljmp
dec
cmp
leave
fst
or
jmp
mov
jecxz
mov
jg
clc
dec
fwait
lcall
cmp
shrb
mov
add
ror
scas
push
in
ja
and
pop
xchg
je
mov
dec
stos
sarl
and
scas
pop
repz
pop
and
das
xchg
inc
push
fstpl
xchg
fcomps
and
int
ret
clc
lcall
inc
push
fisubrl
lock
rcrb
mov
je
imul
sub
out
xchg
leave
jne
fists
insb
or
jmp
cmpsl
gs
push
pop
fsub
test
insl
inc
imul
aad
or
scas
pop
orl
jb
dec
mov
mov
push
inc
pusha
dec
sub
aaa
clc
or
stos
push
lock
push
push
fwait
addr16
lods
lods
scas
je
mov
rclb
into
in
aam
push
or
rcr
and
inc
mov
push
push
frstor
leave
rcrb
js
mov
cmp
sbb
and
xchg
js
mov
test
inc
push
sub
fcoml
cmpsl
sub
xchg
rdpkru
test
ret
jmp
sub
out
mov
sbbl
jns
popa
sbb
fiaddl
jle
jmp
cmp
xor
in
aas
sbb
cmp
xor
push
mov
cmc
rolb
mov
lds
mov
test
ret
mov
gs
outsb
and
daa
in
inc
out
mov
dec
stc
mov
lea
call
les
fwait
sbbb
sbb
jb
dec
xor
jns
std
dec
shlb
roll
sub
in
in
mov
repz
or
push
cmp
mov
insl
xchg
aam
test
and
test
dec
dec
dec
add
lods
push
adc
mov
xor
cmpsl
imul
aam
xor
cld
dec
mov
mov
dec
cmp
mov
ds
fsubl
push
add
lods
adc
sbb
push
sti
aaa
rcll
mov
jecxz
enter
or
pop
pop
mov
addr16
ljmp
fldt
sub
xchg
imul
sarl
movsl
inc
out
add
jecxz
sbb
outsl
in
sbb
mov
fs
push
pop
daa
fidivs
adc
mov
iret
mov
mov
xchg
cwtl
push
incl
fnclex
out
ret
and
lahf
insb
stc
icebp
cmp
shll
sbb
cld
dec
jl
andl
arpl
faddl
shrb
into
add
out
push
cmpsl
fs
cmpsl
movsl
push
xorb
leave
repz
insb
dec
inc
cmpsb
sub
into
add
cmp
push
repnz
cmpsl
popf
push
mov
inc
aaa
repz
mov
xchg
xor
mov
push
and
lods
pusha
and
lret
push
lods
adc
inc
sbb
imul
lcall
scas
mov
sub
mov
inc
push
and
xor
push
ret
outsl
mov
cltd
rorb
pusha
push
cmc
mov
sub
outsb
inc
sub
jp
add
pushaw
cmpl
mov
rcrl
sbb
sbb
shlb
pop
add
jle
cmpl
jge
jo
and
sub
push
nop
imul
ret
int3
mov
aas
xchg
enter
cltd
ds
cmpsl
sub
adc
push
imul
and
lods
out
mov
js
mov
mov
mov
cmp
adc
stos
jle
adc
cmp
scas
adc
xor
out
xchg
mov
add
mov
lods
in
xchg
loopne
pop
mov
lret
xchg
daa
faddl
jb
enter
data16
int
out
lret
loopne
aaa
cmp
pop
clc
ljmp
mov
in
or
fistl
rclb
jecxz
in
fisubrs
jg
sub
mov
xor
icebp
push
add
sbb
pop
aaa
jb
and
lea
decl
cmp
add
xor
cmp
pusha
test
or
mov
mov
jns
fs
test
jmp
lret
cld
pusha
adc
pop
push
ret
sbb
pop
shlb
sub
jns
movsl
insb
xlat
lret
cmc
jbe
sub
lods
pop
pop
push
jl
hlt
xchg
dec
sub
cmp
adc
sbb
scas
mov
push
mov
loope
cmpsl
xor
cs
shrl
leave
dec
pop
in
outsl
mov
mov
mov
aam
les
mov
xor
jl
dec
xchg
push
lea
lock
xchg
fsubrp
dec
cli
jne
jp
dec
sahf
xchg
dec
add
rcl
imul
and
lret
icebp
and
insl
ret
xor
stos
push
mov
mov
lods
pop
test
aad
loop
bound
dec
mov
fldcw
sbb
push
cmpsb
inc
out
sub
mov
lods
xor
push
in
xchg
test
in
and
xchg
sar
fiadds
jno
pusha
ret
and
jmp
inc
testl
jp
or
add
fstpl
cmc
arpl
out
xorl
cmpsb
jmp
pop
nop
push
cmp
cltd
xchg
pusha
lds
add
pavgw
mov
sbb
test
add
inc
test
addr16
mov
mov
add
or
insl
out
loope
inc
push
mov
mov
hlt
imul
sti
icebp
mov
dec
pop
les
xchg
mov
and
or
and
and
mov
dec
add
dec
pop
cmp
jg
or
incl
jns
and
movsl
setle
lret
or
and
xor
test
add
lret
sti
insb
xchg
ja
movups
inc
aas
cwtl
enter
aaa
ret
mov
int
add
dec
and
cltd
cmp
sub
call
add
cmpsb
aaa
jbe
mov
ret
scas
in
and
rcrb
cmpsl
and
call
out
fwait
push
sbb
adc
icebp
testb
mov
ret
and
stos
or
sub
and
add
cmp
in
xor
xor
jb
inc
pusha
sti
inc
jbe
cmp
mov
fsubs
adc
mov
jns
les
inc
mov
lods
push
in
dec
adc
and
mov
mov
inc
dec
xlat
movsb
inc
sahf
addb
mov
arpl
mull
cmp
push
push
jg
das
push
call
ret
jae
arpl
and
jmp
mov
into
mov
xchg
cmovs
into
dec
push
in
xchg
xor
out
hlt
pusha
call
sub
inc
jmp
lcall
adc
aas
push
in
jno
push
and
push
into
rcrb
sub
icebp
fistpl
xchg
outsl
push
inc
std
xor
jae
pop
jle
lahf
mov
rcll
aad
mov
sub
roll
add
fdiv
pop
push
pop
dec
loop
ljmp
mov
mov
xor
pop
mov
or
hlt
in
cli
inc
rcl
out
test
lahf
ja
add
stc
or
or
fistl
cmp
cmp
xchg
outsl
std
fidivs
jb
stos
std
lds
loope
shll
lcall
cld
cld
cmp
outsb
cld
mov
lret
sti
jnp
and
jmp
sbb
les
dec
pop
js
sahf
out
pop
stos
cmp
dec
adc
mov
pop
scas
pop
xchg
decl
and
fistpl
xor
int
jg
jecxz
or
sti
cltd
mov
addl
je
dec
add
ret
imulb
ljmp
stc
and
rcl
inc
jmp
push
fdivs
out
and
sbb
dec
mov
sbb
fadds
aad
inc
push
inc
add
mov
or
inc
aas
or
mov
inc
or
daa
xor
fdivp
lahf
push
push
and
popl
pop
int
mov
int3
mov
or
mov
icebp
jo
pop
in
fs
mov
pop
or
into
xor
clc
cmp
jp
rcrl
bound
xchg
mov
jg
cwtl
xchg
mov
ror
push
es
or
inc
xorl
mov
mov
jmp
add
je
orb
shl
bound
xchg
push
xor
cmpsl
pop
pop
xor
pop
fcompl
dec
and
jp
push
xchg
jns
pop
add
in
inc
rclb
sbb
loope
mov
loopne
add
dec
lahf
mov
fisttpll
and
jbe
mov
hlt
sbbb
imul
les
fcoml
sub
inc
out
mov
pop
stc
jae
jno
pop
pmulhuw
lock
or
roll
popf
std
cmp
sub
xor
int
inc
pop
lock
mov
jb
shl
psubsw
mov
lahf
mov
mov
into
mov
stos
test
jge
dec
cld
hlt
xor
out
fisubrs
icebp
pop
adc
and
xor
jp
sub
in
jecxz
fwait
addr16
inc
gs
and
xchg
js
cmpsb
rcrb
enter
or
add
mov
adc
sbb
cmp
mov
jno
js
sub
and
jns
sbb
adc
insl
mov
and
fyl2xp1
jecxz
xlat
dec
xchg
movsl
jae
lcall
fs
adc
jns
mov
sub
out
ss
gs
mov
jne
adc
inc
fiaddl
inc
cltd
mov
jae
cmp
imul
sahf
mov
cmpsl
mov
movsl
sbb
pop
xchg
cmp
icebp
jge
mov
mov
xchg
mov
mov
cmp
popf
outsl
lahf
mov
notb
jmp
addr16
icebp
cmp
add
loop
mov
insl
inc
push
push
sub
push
sar
mov
mov
adc
jle
jb
fstp
xchg
mov
ja
lock
cmove
cmpsb
je
inc
push
scas
mov
adc
ja
das
imul
lds
stos
dec
hlt
data16
cmpsl
pop
stos
pop
rolb
inc
call
insb
mov
icebp
outsb
aam
nop
push
and
sub
testb
or
imul
and
inc
sbb
push
mov
xchg
fwait
es
jne
imul
and
xor
inc
or
es
cmp
stc
xchg
cmovle
push
rorb
lahf
fdivl
test
ficomps
into
cs
in
mov
out
mov
and
ljmp
popf
push
inc
in
and
xchg
or
rcrb
or
inc
lahf
test
in
js
gs
int3
mov
daa
loop
cmp
aam
jg
mov
xchg
sbb
cmp
mov
inc
pushf
repz
adc
push
dec
adc
roll
mov
pop
ret
stos
sahf
icebp
sbb
pop
mov
fsincos
xchg
sub
test
js
xchg
pop
pop
jnp
jae
cs
das
and
dec
adc
pop
xchg
push
mov
sbb
lret
loope
pop
ljmp
jbe
xchg
iret
icebp
repz
xchg
xchg
in
in
test
mov
and
dec
fcomps
pshufw
sbb
pop
xchg
stos
mov
jnp
jmp
push
pop
add
in
cs
cmpl
mov
xor
mov
dec
adc
leave
lods
add
loope
mov
add
mov
xchg
mov
and
mov
xor
inc
mov
mov
xor
add
cmp
adc
mov
pop
cmp
sub
dec
cmc
jno
cmp
lret
push
in
int
icebp
or
or
push
inc
lahf
jbe
add
les
inc
aas
call
pop
push
icebp
test
into
mov
xor
hlt
or
xchg
mov
insl
mov
mov
adc
stos
mov
xor
out
adc
xchg
pop
dec
xor
enter
and
fcoms
and
addr16
pop
jle
lahf
lds
loope
and
cmp
sub
aad
jnp
fists
imul
cmp
insl
outsb
jge
cmpsl
pop
mov
sti
aad
push
add
cmc
lds
movsb
xchg
ficompl
dec
pop
cmp
inc
lcall
icebp
sbb
push
add
jne
icebp
out
daa
mov
out
xlat
stos
inc
mov
fldenv
sti
push
dec
jge
insl
ja
push
push
dec
push
or
jo
stc
outsl
ja
add
sub
cmpsl
into
scas
jp
jecxz
ljmp
call
int
testl
into
leave
xchg
pop
shrl
ja
mov
xchg
xchg
cmc
ljmp
leave
pop
sahf
