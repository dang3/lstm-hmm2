sbb
add
mov
pushf
mov
add
sbb
mov
subb
test
sub
jg
xchg
hlt
addr16
inc
or
sub
dec
fisttpl
cmpb
push
cmp
push
lea
mov
or
xchg
in
addb
jbe
sbb
adc
xchg
ss
sub
sarl
dec
mov
add
sahf
dec
mov
ljmp
lods
ret
jge
and
outsl
jo
sti
adc
dec
lret
sub
in
mov
fimuls
test
loopne
cmpsl
test
not
in
pop
nopl
inc
outsb
inc
mov
or
int
fsubp
or
out
add
test
push
mov
stos
push
add
pop
out
adc
push
fildll
jnp
shll
aaa
pminub
fldt
sbb
push
mov
push
and
cmpsb
ret
orl
jecxz
scas
ret
inc
cmp
add
xor
push
xor
nop
fucomi
mov
cmpsl
lods
out
jns
js
shrb
stc
cld
popa
pushf
insl
fxch
rol
jbe
adc
daa
in
inc
repnz
lea
ja
jnp
stos
lock
daa
mov
idivb
cmpsl
push
insb
cwtl
insb
mov
and
and
xchg
lea
loop
cltd
out
sbb
hlt
les
push
cmp
pop
cmp
int
push
push
loope
pop
pop
in
cld
lahf
jnp
ljmp
add
mov
je
pop
lods
xchg
mov
adc
je
mov
inc
dec
lcall
jp
sahf
xor
lret
clc
add
push
popf
mov
repz
push
int3
loope
out
fdivl
sub
repz
shl
mov
mov
aad
les
adc
push
xlat
dec
mov
mov
xchg
ss
testb
jbe
testl
lcall
cld
es
loop
xor
push
push
repnz
dec
ret
mov
push
sti
inc
in
ja
leave
std
shll
and
jns
data16
lods
cmpb
pusha
sbb
ljmp
xlat
test
jno
sti
jmp
cmp
mov
lods
and
jbe
loopne
inc
aad
push
mov
cmp
xor
mov
pop
imul
test
push
gs
cmp
lods
mov
pop
jge
push
adc
repnz
jo
and
cmpsl
push
pop
xchg
push
daa
pop
js
jno
mov
pop
add
bound
xor
jns
jmp
push
test
leave
pop
cmp
mov
ljmp
mov
or
scas
cs
aaa
cwtl
xchg
lock
dec
testb
jg
cwtl
fwait
jb
dec
faddp
xor
mov
jno
daa
mov
fbstp
cmp
jb
add
adc
inc
lret
push
sbb
es
sarb
cmp
fiaddl
mov
push
lods
aam
xchg
arpl
cltd
int
adc
pop
dec
or
sbb
cmp
adc
cltd
mov
ret
fs
dec
mov
ret
adc
push
pushf
cmp
fcmove
call
popa
rcl
push
mov
loop
sub
loopne
js
or
js
scas
xchg
test
and
out
repnz
inc
jne
xchg
sub
sub
sub
enter
pop
mov
mov
pop
pop
enter
push
movsl
scas
loopne
lret
xlat
pop
add
inc
xor
fs
stc
xchg
or
inc
jg
js
fidivrl
sarb
lods
stos
cs
mov
xchg
aas
int3
scas
scas
cmp
mov
pusha
scas
stos
stos
adc
jmp
outsl
imul
push
jp
sbb
inc
lret
je
movsb
testb
cld
mov
cld
mov
imul
fists
test
sti
adc
mov
mov
sbb
jno
jge
add
cmpsl
je
call
pop
out
and
stos
fnstcw
int3
loop
jbe
pop
jae
lods
xor
add
jns
arpl
jl
ret
insl
inc
cmp
rcl
sbbb
mov
bound
aad
stc
pop
out
push
inc
cmpsl
sbb
scas
sub
xor
push
es
jb
roll
xchg
sub
es
testl
std
int3
sbb
pop
ss
or
sub
movsb
pop
insl
cmp
or
xchg
xchg
mov
in
jns
insb
mov
mov
lea
adc
xchg
fs
out
imul
aam
pop
loop
add
inc
imul
jmp
jae
cld
notb
lret
xor
sbb
sub
std
cmp
stos
pop
mov
mov
pop
in
out
dec
test
lret
sti
sub
mov
cmpsl
leave
push
inc
bound
push
movsl
xor
ljmp
push
mov
stos
sub
loopne
addr16
js
stc
xor
aas
shl
mov
push
xor
les
and
pop
pop
inc
pop
inc
dec
sub
scas
adc
arpl
jae
xorl
lret
and
test
jecxz
jp
loope
pop
or
xchg
and
ffree
mov
xor
jae
shrb
or
loop
inc
xchg
std
dec
hlt
shlb
xor
or
mov
insl
jg
cltd
leave
or
sbb
or
add
call
cmp
out
sub
and
ret
aam
imul
sbb
cli
push
pop
test
jmp
dec
inc
and
mov
mov
lock
cmp
cmp
shl
psrlq
mov
icebp
gs
je
dec
ds
jecxz
testb
push
pop
jge
mov
xchg
cld
es
jp
dec
out
and
daa
and
push
jne
mov
sbb
sbb
stos
hlt
cmpsl
loopne
ss
fidivrl
mov
movsl
jo
lods
mov
or
cli
fildl
sbb
mov
adc
mov
inc
push
test
sub
mov
xchg
ret
and
pop
sub
mov
mov
cmc
mov
or
cmc
scas
fcoms
hlt
jl
mov
adc
rorl
icebp
iret
inc
divl
mov
dec
jb,pn
xchg
add
pop
and
scas
and
dec
nop
xor
jge
jb
aaa
nop
pop
jbe
xchg
add
cmp
xor
adc
xor
aaa
add
xor
add
fwait
inc
in
mov
and
adc
repz
mov
hlt
adc
pop
mov
insb
call
cs
mov
cli
mov
iret
pushf
shl
pushf
in
cmc
sahf
out
fistps
clc
outsl
and
mov
dec
jge
loop
jge
mov
dec
xchg
adc
iret
cmp
inc
fwait
pop
jp
in
int
lret
push
mov
pop
in
aam
mov
cmc
popf
jnp
or
or
add
and
sbb
fimull
mov
jge
fcomps
cmc
iret
pop
pop
mov
cmp
loope
nop
popa
dec
icebp
xchg
ss
jge
leave
cmpsl
ficoml
push
inc
leave
sbb
mov
or
xchg
repnz
sbb
pusha
or
adc
cli
or
data16
mov
pop
inc
adc
iret
lods
gs
mov
xor
or
int3
inc
cmp
daa
xchg
out
and
xor
lcall
xor
popf
repnz
pop
decb
sub
dec
arpl
popa
cmc
xor
dec
jmp
out
jecxz
inc
mov
pusha
mov
adcl
es
xchg
std
loopne
pop
movd
adc
fdivrs
mov
addr16
sbbb
sarb
xchg
pop
cmp
mov
xchg
xchg
punpcklwd
sub
in
lret
lret
mov
inc
mov
movsb
shll
and
jle
insb
or
jg
sub
pop
aaa
push
out
out
bound
jmp
lret
pop
mov
outsl
cwtl
mov
xchg
inc
pop
call
cmpsb
mov
fsubl
or
loop
addl
inc
scas
jo
in
jmp
into
popf
in
icebp
addr16
mov
mul
or
pop
out
inc
push
outsl
nop
cmp
and
imull
imul
push
jmp
xchg
jbe
clc
jbe
repnz
ja
pop
fsubrl
bound
inc
inc
mov
push
imul
out
mov
push
inc
imull
or
cmpsl
sahf
rclb
mov
add
cmp
fldt
les
cmp
les
xchg
add
imul
loope
add
cltd
and
subl
fstps
or
add
rcrl
jns
fwait
dec
inc
out
cwtl
insb
cmp
push
outsb
pop
xchg
shrl
push
ds
shll
mov
add
or
movsl
leave
gs
das
out
aad
dec
jle
push
sbb
sub
jmp
cmp
inc
test
or
ljmp
cwtl
pop
pop
sbb
repnz
fwait
test
xor
loope
cmpsl
sub
adc
jo
outsl
mov
aam
cmpsl
rcr
dec
sub
sahf
int
adc
push
pusha
push
std
and
bnd
cmpsb
mov
adc
cmpsl
xchg
fbld
mov
out
xor
mov
das
jecxz
jbe
fsubl
lret
leave
add
je
lods
call
xor
lods
sahf
or
add
subb
movsb
jb
fdivs
sub
divl
ds
mov
icebp
and
pushf
mov
add
pop
dec
test
loop
mov
mov
jae
cwtl
sbb
xor
lret
mov
xor
push
bound
adc
push
lret
cltd
in
jmp
pop
out
roll
ss
push
sub
les
nop
dec
pop
pop
cmc
xor
fcomi
xchg
add
inc
and
pop
xor
fiaddl
inc
and
icebp
in
cmpsb
sahf
shl
fwait
add
in
lret
call
es
rcrl
sub
jmp
mov
frstor
mov
cmp
movsb
popa
xor
lret
push
mov
arpl
addr16
in
add
daa
repnz
aad
insl
add
xchg
add
std
ret
xchg
pop
subb
movsl
push
xchg
ja
xlat
sar
dec
pop
xor
sub
sub
notl
mov
or
xor
dec
int3
jmp
rcrb
lret
fisttpl
pop
out
and
push
and
dec
loopne
in
scas
hlt
or
fsub
jnp
jle
add
push
mov
mov
jae
jo
sbb
sbb
push
xchg
xor
loopne
xorb
push
xchg
fistps
sub
mov
sarl
imul
push
cltd
adc
jo
ret
dec
lea
jle
cli
dec
aaa
sti
leave
xchg
mov
in
ret
and
mov
int
aas
xor
loopne
and
push
push
mov
int3
imul
jg
mov
subl
insb
jne
sbb
inc
mov
ss
shlb
fwait
mov
ja
lahf
dec
mov
push
test
xchg
mov
clc
cmc
stc
test
les
push
lret
jo
add
mov
pop
push
fcompl
jl
push
js
nop
xchg
jg
mov
insb
inc
stos
dec
cld
sub
sub
orl
rol
or
jl
xchg
ss
xchg
mov
sub
push
jnp
adc
jl
inc
leave
ds
cld
loope
mov
xchg
xor
lret
sbb
xor
mov
sub
out
mov
mov
pop
jne
test
cmp
push
ss
xor
nop
sbb
imul
stos
mov
push
addb
add
xchg
inc
lcall
push
push
lahf
dec
jnp
and
sbbb
pop
popa
add
mov
xchg
mov
adc
icebp
aaa
mov
sbb
pop
test
and
push
mov
andb
jmp
aad
in
cmp
and
rcrl
imul
pop
mov
mov
adc
or
subl
and
mov
cmp
clc
out
jb
pop
jp
fildl
sbb
in
test
int3
mov
popa
xchg
dec
pop
popf
cmp
dec
movsl
test
sub
fdivr
add
push
lret
jge
sbb
mov
push
mov
out
popf
dec
jb
pop
jae
add
mov
inc
outsb
mov
into
and
popf
loop
mov
sbb
data16
das
pop
inc
xchg
scas
bnd
push
dec
jne
mov
push
sub
je
xchg
cmp
pop
sahf
push
xchg
addr16
or
enter
pop
adc
jo
or
out
lcall
lock
xchg
dec
loope
lds
mov
loopne
xor
mov
imul
loop
sbb
xor
sbb
ja
dec
int3
imul
jb
shlb
cli
xchg
push
dec
inc
lret
pop
cmp
clc
dec
fwait
jo
dec
cmp
push
scas
pop
dec
push
notl
ret
scas
dec
jecxz
cld
sub
xchg
std
sbb
lock
adc
lods
inc
loopne
insb
pop
imul
outsl
mov
and
inc
sbb
rcr
mov
inc
cmp
or
in
test
cmc
clc
pop
pop
push
cmc
js
in
mov
xchg
mov
pop
movsl
pop
mov
fidivl
fstps
mov
fistpl
mov
xor
loop
xchg
jecxz
mov
test
fstpt
test
test
mov
mov
arpl
fld
movsl
fwait
scas
xor
mov
sub
jno
inc
cmp
cmc
mov
icebp
or
imul
mov
jns
dec
xlat
mov
daa
sbb
out
cmp
std
cmp
nop
test
xlat
dec
loope
mov
shl
jp
xor
inc
cmp
bound
pop
rcl
into
sbb
jnp
iret
repz
cltd
sub
cmpsl
setns
insb
divl
movsl
lret
xor
dec
mov
or
xchg
sub
or
pop
push
fs
cwtl
es
adc
xor
mov
out
xchg
sub
scas
int3
dec
mov
cmc
aaa
add
insb
shrb
out
pop
cmpsb
add
add
call
adc
sbb
sbb
std
adc
cmp
xor
enter
jmp
js
lret
pop
mov
sub
mov
xchg
jno
insb
clc
pushf
subb
icebp
mov
add
xchg
pop
mov
add
mov
lret
addr16
pop
cmc
xchg
jbe
xchg
or
push
stos
mov
add
int
std
pusha
cli
lds
mov
test
push
test
xlat
insb
cmpsb
xchg
iret
popf
pop
mov
fs
mov
push
pop
add
testb
dec
jbe
aad
jl
mov
xlat
repz
repz
sahf
inc
stos
push
add
inc
js
int3
rcl
rorl
pusha
push
pop
les
sbb
pusha
mov
cmp
inc
dec
and
je
push
outsb
arpl
imul
push
popf
jmp
leave
dec
jp
out
ja
in
aas
out
or
data16
push
push
shll
push
mov
addb
pop
lds
test
jbe
push
movsl
orb
wrmsr
pusha
sub
add
mov
loop
out
add
hlt
rorl
mov
gs
xchg
aam
nop
mov
or
and
xchg
in
popl
cmp
aas
pop
sub
repnz
loop
xchg
pusha
add
xor
dec
pop
jo
setp
ss
adc
icebp
and
inc
sub
shr
out
cmp
push
or
mov
xchg
pop
int
fnstenv
xchg
sti
neg
mov
push
sub
into
mov
xchg
mov
in
pop
push
jmp
mov
add
test
fucom
jo
outsb
rcll
xchg
jbe
add
lret
fldcw
mov
lahf
push
sub
cmp
cmp
enter
dec
mov
adc
js
xchg
sbb
cld
mov
jecxz
sbb
jmp
lahf
icebp
es
mov
xchg
jge
jle
ffree
leave
xor
loope
xor
mov
cmp
push
icebp
inc
fwait
aas
add
test
push
mov
or
ret
aam
mov
mov
ljmp
xchg
scas
mov
fldt
cltd
cmp
lret
mov
andl
sub
sub
xchg
pop
into
dec
xchg
xchg
addr16
push
loopne
xchg
dec
dec
pop
jecxz
movsl
into
cmpsl
pop
xchg
sub
push
or
add
adc
loopne
xchg
jmp
push
xchg
mov
mov
dec
xor
jb
mov
ret
lods
and
lods
lds
int3
test
insb
hlt
aaa
fbld
jb
xchg
sbb
ljmp
xchg
mov
mov
std
fbstp
inc
mov
loope
mov
mov
jmp
xor
xlat
rorl
inc
mov
jmp
xor
nop
mov
adc
insb
xor
and
inc
rorl
clc
push
ss
mov
imul
inc
movsb
test
or
stos
icebp
mov
push
dec
fs
std
cwtl
popf
test
push
leave
pop
lahf
lahf
popa
repz
add
adc
in
cmpsb
adc
dec
adc
in
add
cmp
aam
gs
sti
or
mov
jg
stos
or
adc
ja
add
das
add
jl
sub
xchg
fwait
inc
sub
jg
jg
pop
xor
pusha
rorb
fisubrl
scas
xorb
mov
xchg
ficomps
or
add
cmp
jl
dec
cs
pop
mov
aaa
lcall
pop
mov
mov
cs
pop
xor
imul
push
scas
mov
inc
outsb
pop
cwtl
mov
sbb
cltd
push
andl
imul
test
arpl
sub
sti
jecxz
dec
ret
adc
into
mov
out
push
or
iret
add
mov
out
inc
jl
call
cltd
lock
lea
sub
inc
sbb
sub
addl
sarl
adc
ds
push
jmp
cmp
bound
push
lock
repz
jecxz
add
mov
and
popf
cmc
inc
mov
arpl
je
lods
scas
mov
jge
scas
movsl
jns
popf
divl
pop
loopne
lea
push
push
imul
arpl
pop
dec
mov
js
xor
cmpsb
dec
lods
out
jp
adcb
daa
lods
inc
ds
xor
add
xchg
clc
push
mov
pop
mov
adc
addr16
cmpsb
das
imul
in
mov
scas
aam
outsl
xchg
xor
cmp
pop
cwtl
xor
sti
sbb
bound
shrl
cmp
in
mov
jp
js
pop
push
mov
pop
mov
test
sbb
mov
xchg
and
ret
pop
fsts
jle
std
cmp
sbbl
iret
pop
cmp
and
sbb
push
sbb
adc
je
jp
sbb
sub
stos
jp
cwtl
jno
xchg
xchg
sbb
push
mov
lcall
insl
or
lock
lods
xchg
imul
pop
pop
xchg
aas
insl
add
sub
dec
mov
dec
ret
jle
and
jns
push
jecxz
mov
test
push
add
lret
or
jecxz
adc
mov
imul
mov
mov
xchg
add
aaa
mov
ds
std
enter
jbe
popa
or
inc
xor
movsb
inc
xlat
gs
and
mov
jl
int3
push
push
xor
push
movsl
popa
add
nop
or
xchg
mov
int
hlt
xor
xchg
enter
jecxz
jl
pop
push
into
in
and
es
inc
dec
or
lods
jo
sbb
inc
xlat
adc
inc
lds
std
xor
rcr
loope
ss
kaddw
and
ret
add
int3
xchg
es
push
lret
and
xor
jnp
cmp
pusha
adc
mov
jmp
mov
les
jns
dec
jbe
mov
dec
lods
mov
sub
xor
stos
xlat
jne
js
or
es
pop
dec
pop
push
pop
mov
movsl
xchg
movsl
pop
sbb
hlt
in
jae
psrlw
mov
jmp
dec
ret
icebp
int
mov
ds
fwait
sub
mov
popfw
insl
pop
movsb
pop
xor
addr16
pop
or
in
inc
sub
enter
inc
and
pop
cs
add
in
insl
cwtl
and
pop
or
jmp
jl
repz
mov
loopne
xchg
adc
mov
std
adc
add
xchg
jno
std
fsub
sbb
clc
outsb
dec
subb
mov
mov
daa
and
enter
cmp
fnstcw
cmp
pop
mov
mov
adc
fs
fldcw
or
mov
xchg
mov
imul
fnstsw
add
mov
cmp
push
and
dec
pop
call
je
pop
out
repz
stc
cmovle
sub
fildll
or
cmp
jbe
jae
lea
ficoml
pop
std
mov
shl
pop
jecxz
imul
cld
cs
dec
jecxz
jno
test
negb
xchg
adc
sbb
inc
dec
out
into
xor
xchg
sbb
mov
add
clc
mov
and
add
and
or
sub
mov
enter
rcr
xor
add
repnz
jbe
push
ret
xchg
xchg
ret
fwait
fwait
leave
dec
out
imul
push
jnp
dec
dec
add
sti
sbbb
dec
add
xchg
mov
mull
ss
push
insb
cmp
inc
mov
push
xchg
ror
fidivrs
adc
cli
fsubs
lret
sub
push
push
clc
jge
test
ds
in
xchg
fistl
jb
adc
out
pop
cmpsb
mov
and
mov
in
mov
dec
xor
sbb
xor
add
andl
and
pop
mov
pushf
aad
inc
mov
mov
in
mov
pushf
repnz
mov
mov
jecxz
out
mov
aam
push
mov
sbb
mov
repz
addr16
fwait
xchg
sahf
fidivrl
popf
dec
in
sbb
mov
mov
jo
outsb
aaa
sbb
and
ret
sti
punpckldq
mov
in
cwtl
rclb
xchg
outsl
sti
loop
or
mov
stos
mov
cwtl
shlb
and
loope
insb
jp
pop
inc
scas
inc
rolb
sti
push
in
adc
jo
inc
mov
insl
cmc
std
popf
push
cmp
cmp
push
lods
mov
inc
dec
adcl
loopne
xor
popf
iret
or
insb
flds
ffreep
clc
sbb
outsb
or
jecxz
add
scas
add
hlt
and
addr16
xor
sbb
xchg
dec
jmp
xor
jno
dec
dec
fcompl
push
fs
cmp
jle
dec
dec
xchg
imul
outsb
daa
mov
sbb
scas
fs
stos
ret
or
sbbb
ds
pop
dec
out
pop
xor
mov
sbb
aad
mov
xlat
lahf
imul
push
insl
loope
int3
rclb
sbb
fdivrs
push
mov
pop
jne
or
fisubrl
jne
cmp
jg
add
push
or
sub
rcrb
mov
adc
pop
cwtl
test
mov
lahf
jl
clc
mov
mov
push
dec
sub
in
jnp
cmp
test
sti
mov
out
add
sub
stos
xchg
aaa
inc
sub
jp
jbe
adc
aam
and
or
int
xchg
pop
test
in
sbb
aas
jbe
cmp
adc
fwait
popf
repnz
movsb
cmc
xor
in
dec
add
es
mov
fidivrl
sbb
sti
or
in
and
xchg
add
jno
out
sarb
xchg
or
push
in
lds
sbb
jbe
into
jns
imul
xor
popf
dec
mov
push
repz
test
imul
into
xor
call
xchg
test
jp
out
xchg
inc
mov
cmp
mov
cmp
clc
gs
mov
cmp
sbb
popa
pop
mov
and
fstps
lret
add
pop
lcall
and
hlt
lcall
sub
jb
fildll
decl
dec
push
mov
jmp
mov
xchg
ds
pop
fs
adc
cwtl
out
add
jmp
push
cli
idivl
lcall
scas
push
jge
adc
cmp
or
lea
inc
push
dec
xchg
adc
stc
fildl
or
mov
push
scas
test
jnp
call
std
lds
aaa
dec
stos
cmp
addr16
movsl
xor
cs
lahf
mov
subl
or
sbbl
dec
jmp
mov
jecxz
daa
test
mov
fwait
push
int3
hlt
divb
outsl
jl
insl
jmp
xchg
call
insl
cmp
mov
sub
cltd
fldl
lods
shrb
rcrl
pop
loope
push
imul
mov
jle
push
shl
imul
lahf
pushf
lock
loope
pop
mov
mov
repnz
mov
mov
leave
test
push
mov
in
test
push
out
sahf
mov
jb
xchg
push
xchg
loopne
out
in
scas
movl
test
test
imul
fnstcw
jl
jmp
push
mov
and
icebp
stos
mov
imul
in
mov
and
add
out
fnsave
adcl
insl
addr16
nop
push
imul
imul
inc
push
mov
mov
jp
push
mov
xor
in
push
mov
lret
lock
xor
cmpb
dec
dec
jbe
add
mov
out
sti
repz
mov
lret
jg
jbe
repnz
out
cmp
cmp
cmp
jmp
lock
fistpl
sbb
mov
jl
fadds
and
pop
adc
xchg
daa
dec
pop
push
and
cmp
cld
addb
repz
sbb
sub
negb
xchg
das
sbb
or
inc
ja
sub
lret
fildl
ds
andl
popa
xor
xor
xchg
jl
int
sub
fsubl
jmp
add
inc
push
xor
jmp
out
roll
lods
inc
sub
xchg
mov
aam
xor
loop
daa
dec
lods
insb
xor
ret
inc
rcrb
mul
mov
ret
es
or
out
scas
push
xor
mov
or
fnstenv
pop
push
adc
addr16
cmpsb
dec
mov
test
sbb
jbe
jbe
cld
cmpsl
mov
out
stos
inc
dec
add
sub
cmp
mov
roll
and
jo
mov
subb
jmp
aaa
sahf
or
pop
std
sbb
out
push
loope
push
ret
fmuls
xchg
mov
mov
jp
cmp
lds
iret
mov
jp
dec
test
out
loopne
pop
out
sub
js
cmp
mov
shlb
std
mov
aam
idiv
jge
imul
sub
fldenv
outsb
xchg
fstpt
js
imulb
stos
mov
pop
xchg
pusha
pushf
lock
mov
dec
inc
mov
sti
or
mov
sbb
imul
movsb
scas
shrl
mov
push
addl
leave
fs
dec
and
mov
jecxz
fs
lds
push
xchg
sub
pop
nop
push
cwtl
sbb
arpl
sub
cmp
jmp
sbb
pop
in
movaps
mov
xchg
push
int
outsb
gs
in
sub
inc
fs
outsb
jno
and
aaa
out
add
in
std
sub
dec
popf
fcoms
inc
cmpb
test
sub
jl
xor
jo
sbb
push
push
dec
and
test
cli
mov
scas
into
or
shrb
mov
je
add
scas
jl
mov
mov
testb
pop
mov
sub
loop
xor
pop
sbb
xlat
test
mov
and
call
aam
shll
mov
mov
fsubl
jo
nop
je
mov
dec
lahf
mov
or
ja
mov
cmpsb
fwait
pop
imul
jg
mov
mov
lahf
js
fs
in
pop
test
aas
mov
jp
mov
enter
stc
xchg
les
pop
int3
sbb
jbe
outsb
out
jae
not
lret
nop
hlt
jecxz
xchg
js
or
xchg
daa
dec
push
push
xchg
iret
insl
in
sbb
xchg
ret
lds
scas
add
shl
or
shl
or
jno
lock
jle
aas
adc
pop
xor
ret
iret
or
test
mov
mov
cmp
ss
loop
loope
pop
lahf
sbb
xchg
cs
mov
loop
sbb
lret
cwtl
mov
xchg
xchg
fidivl
fildl
sbb
mov
xor
jno
and
ss
and
inc
xchg
sbb
xchg
jo
aas
pushaw
or
dec
icebp
rorl
arpl
dec
jmp
adc
mov
mov
dec
xchg
sbb
pop
adc
push
sbb
cmpsl
cmc
pop
jmp
mov
test
xchg
mov
xor
cmp
pop
enter
pop
out
sbbl
test
dec
test
add
lods
fsubs
das
add
lret
xchg
cmp
out
mov
cmp
xlat
xor
js
adc
ret
push
pop
clc
nop
insl
push
adc
dec
xor
pop
push
shufps
js
dec
or
add
mov
jge
js
ljmp
in
cltd
repnz
jae
std
push
dec
jae
outsb
push
inc
lret
sub
adc
call
test
add
leave
cmpsl
in
xchg
and
pop
cmp
enter
adc
or
cmp
jb
repnz
outsl
scas
mov
movsb
in
xchg
add
xchg
test
or
out
lcall
inc
pop
std
mov
aad
jmp
add
sub
outsl
pushf
jl
mov
and
and
sub
pop
lods
out
stc
popa
push
gs
test
idivb
push
cltd
xor
push
test
xchg
movsl
pushf
mov
mov
push
add
mov
mov
adc
and
sbb
popf
shrb
xorl
mov
incb
adc
mov
cltd
iret
jg
insb
sbb
imul
mov
jle
and
cld
mov
ja
fadd
add
xor
ja
jbe
inc
dec
lods
mov
jno
mov
jne
adc
pop
mov
add
adc
ret
add
dec
xchg
icebp
push
pop
leave
rcl
pop
cwtl
ud0
movsb
inc
push
leave
insb
push
movsl
sbb
subb
dec
jp
lods
add
leave
pop
jmp
pusha
movsl
lea
xlat
pop
inc
stos
divl
fcoml
int
rorl
loopne
mov
nop
mov
or
sub
es
clc
jb
xlat
pop
pop
int
jae
adc
sarl
mov
shrl
xchg
pop
push
daa
ret
mov
int3
jbe
addb
enter
mov
fsubs
mov
scas
dec
push
out
ror
sbb
adc
out
bound
xchg
and
mov
cmp
adcb
loopne
outsb
sub
je
je
aad
inc
loope
add
sbb
and
adc
adc
movl
clc
adc
inc
push
insb
sbb
inc
add
add
mov
inc
pop
faddl
call
xor
jo
mov
mov
rcr
outsl
and
das
or
jmp
popf
or
imul
bound
mov
dec
cmp
in
leave
imul
stos
movsl
jge
and
push
or
pop
mov
inc
lret
lock
vmwrite
mov
push
add
nop
and
or
jnp
data16
cmp
pop
jmp
mov
fidivrl
mov
stc
scas
mov
mov
pop
jl
cmpsl
cld
xchg
push
dec
add
jno
mov
mov
arpl
jne
mov
mov
sbb
andps
insl
daa
stos
ret
adc
insb
xor
stos
repnz
fadds
adc
dec
push
cmp
notb
in
push
lcall
fidivrl
dec
pop
mov
test
bswap
sbb
adc
pop
push
scas
or
add
mov
test
sbb
test
mov
outsb
cld
aas
ja
icebp
loope
jmp
test
sti
adc
ret
je
stc
and
or
int
aam
xor
call
gs
sti
jnp
push
xchg
xchg
ds
fbld
test
adc
scas
and
das
and
lcall
orl
les
push
mov
mov
dec
xchg
mov
out
fidivrs
jecxz
lcall
push
mov
mov
aas
jp
mov
adc
sub
xchg
cmp
mov
mov
mov
cmp
fucom
rcr
test
popa
mov
rolb
pop
push
lcall
lea
cld
jle
or
mov
out
jge
sahf
mov
or
mov
mov
shlw
jns
jb
ljmp
adc
add
inc
mov
fldt
std
inc
or
cmp
xor
mov
add
cmp
mov
loope
shrb
scas
and
jl
xchg
inc
sub
prefetchnta
push
push
cmp
enter
jns
xchg
lret
loopne
mov
xor
or
lahf
jp
loop
push
inc
mov
cmp
icebp
stc
jmp
add
cli
sbb
jbe
cmp
xchg
outsl
jo
stc
ficoms
inc
dec
jmp
xor
shrd
stos
jmp
mov
add
or
mov
filds
push
add
sbb
cs
inc
aad
mov
outsl
pop
pop
fimull
add
mov
or
bound
cmpsl
daa
lret
arpl
mov
mov
movsb
aaa
shll
or
aad
mov
cmpb
inc
inc
add
push
cmp
or
pop
mov
inc
enter
xchg
fcomps
push
inc
fidivl
cmp
test
jbe
mov
cmp
pusha
mov
stos
faddl
dec
aad
shrl
sub
dec
sarl
lret
decb
or
xchg
add
js
sbb
and
arpl
dec
imul
pop
push
movb
negl
add
cmp
dec
or
lea
sbb
sbb
das
arpl
push
inc
and
push
stc
arpl
pop
ss
fcomp
cld
out
jno
pop
adc
daa
shrl
cmpsb
hlt
mov
xchg
popa
sbb
loope
mov
in
cwtl
xchg
testb
jmp
xor
sahf
fmul
bswap
lods
sbb
std
cltd
stos
push
out
loopne
pop
dec
xor
sub
dec
jecxz
cmp
xchg
repz
mov
mov
or
jns
adc
movsl
and
fistpl
push
loopne
divl
gs
daa
sarl
out
push
cmp
push
ds
outsl
cmp
les
gs
mov
fisubrl
fistpll
cmpsb
and
mov
sbb
in
mov
cmpsl
sub
data16
cmpsl
pushf
jo
daa
push
jbe
pop
cmpsl
and
test
cmc
lahf
mov
orps
outsl
xchg
insl
imul
pop
adc
or
mov
cmpb
jbe
iret
mov
movsl
clc
pop
in
pop
xchg
sub
pop
ret
inc
ss
insl
adc
push
mov
inc
push
es
mov
pop
or
ljmp
inc
sub
or
stc
mov
lret
dec
pop
push
int3
dec
loop
inc
push
mov
ficompl
jb
ror
xor
sbb
jb
enter
pop
es
pusha
dec
jno
lods
add
pop
mov
in
je
aad
test
fsubrs
xor
cltd
mov
sub
nop
das
divb
push
filds
push
movsb
add
lcall
mov
lods
and
mov
loop
loopne
cs
sub
out
cltd
dec
js
xchg
mov
adc
scas
jg
inc
pop
stos
test
and
mov
fmuls
mov
loope
xchg
ss
xor
fcoms
cltd
hlt
fiadds
and
aad
xchg
es
mov
mov
in
leave
mov
and
sub
adc
xlat
sub
jle
arpl
mov
cmpsl
adcl
scas
test
xor
mov
adcb
mov
add
rcr
mov
mov
sub
pop
inc
jb
mov
in
add
jno
js
mov
sbb
jb
xchg
mov
loope
pop
repnz
cwtl
fsubrp
push
clc
mov
out
lret
ds
mov
inc
shrb
dec
div
ret
inc
ja
xchg
leave
out
or
repz
ret
aam
jl
mov
mov
ret
jle
clc
fisttpll
dec
stc
sbb
and
dec
lcall
push
fwait
mov
xchg
shlb
xchg
jl
adc
gs
mov
loop
aas
mov
icebp
jmp
fst
insl
mov
and
int3
mov
mov
loopne
lods
sarb
mov
dec
mov
adc
pop
jl
mov
shll
imul
shlb
cwtl
cmpsb
popf
xor
das
dec
movsl
jl
scas
push
int3
out
in
lods
stc
push
inc
mov
out
and
lods
mov
fstps
rcrl
and
test
or
pusha
dec
addr16
or
hlt
sbb
mov
adc
loopne
in
repz
addr16
jo
push
dec
mov
and
lock
pop
icebp
and
pop
clc
stos
mov
cmp
loop
lcall
ficoml
jge
push
repz
xchg
daa
push
jns
enter
xor
and
jge
fmuls
inc
icebp
xchg
inc
fstl
mov
stos
sbb
es
dec
and
sbb
push
mov
cmp
daa
rcll
adc
add
ret
clc
mov
lcall
lret
test
outsb
ss
inc
movsl
sbb
dec
sti
test
mov
cld
iret
jb
repnz
adc
pop
cmp
push
mov
les
ror
jns
into
movswl
pusha
movsb
ss
xchg
cmp
mov
frstor
inc
mov
mov
xor
jle
mov
leave
jo
icebp
loopne
or
jle
push
inc
stos
xchg
xchg
test
ja
mov
in
inc
out
fildll
xchg
or
or
enter
xchg
sbb
push
sarb
ret
mov
adc
icebp
jg
mov
call
sbb
xchg
pop
stos
jns
das
fisttpl
fwait
stc
add
imul
mov
mov
pushf
outsb
scas
push
fists
sbb
int
mov
test
insl
daa
pusha
sar
pop
and
icebp
add
xchg
cld
fldl
aaa
mov
jo
push
jg
sub
dec
in
dec
aas
loopne
and
dec
mov
mov
push
stc
pusha
lcall
je
sbb
sbbb
push
clc
insl
scas
test
inc
addb
ffreep
jecxz
sbb
test
xchg
gs
neg
xchg
shrb
aaa
mov
xchg
mov
inc
lret
add
pop
pop
pop
aam
icebp
popa
sbb
sbb
cmp
xchg
mov
dec
or
xor
ret
and
adc
sar
cld
ja
fisttpl
dec
and
sub
cmp
ss
fidivrl
rorl
fildl
push
xor
inc
xor
cmp
movsb
sbb
push
pop
imul
mov
repnz
cmpsl
jmp
clc
pop
cs
fldt
sbb
push
inc
jg
and
and
in
pminsw
adc
andb
xchg
pop
fisubrs
bound
mov
add
dec
xchg
ljmp
cmpsb
push
es
inc
and
jecxz
inc
and
push
add
leave
pop
inc
out
ds
in
scas
sbb
je
out
sti
nop
push
jae
cltd
dec
ja
jnp
and
sbb
push
push
lds
and
xor
push
into
in
and
popf
mov
mov
push
leave
sbb
lock
cltd
aaa
mov
scas
push
call
mov
pop
iret
call
sti
mov
push
cld
inc
sbb
or
in
bound
aam
xchg
push
lea
lea
mov
xor
lods
popa
icebp
sub
dec
mov
mov
xchg
out
popa
or
pop
in
xor
push
pop
fnstenv
insb
shrb
inc
push
out
push
mov
pop
push
cmpsl
mov
shlb
lea
push
stos
test
imul
push
test
lea
dec
xchg
xor
mov
inc
stos
and
repnz
xor
fwait
and
xchg
in
push
cld
push
fldt
pop
inc
sub
push
mov
aad
push
jle
lahf
sbb
les
xchg
sbb
aad
inc
cmpsl
dec
inc
push
mov
ret
shlb
or
ret
lea
and
lcall
rol
xor
iret
iret
dec
bnd
xchg
add
mov
gs
mov
and
out
lret
mov
cmp
sarl
mov
lcall
inc
movsb
inc
test
pop
inc
jae
or
subl
add
jo
ret
or
dec
clc
sahf
leave
loopne
fildl
mov
pop
je
mov
cmp
push
lods
jp
mov
and
addr16
lods
xchg
or
test
mov
sub
shll
xchg
int3
add
stos
in
add
stos
push
ljmp
cmp
jecxz
push
mov
pop
test
in
iret
push
xor
arpl
adc
pop
loopne
pop
rcr
rcrb
jmp
sub
jns
js
mov
push
bound
mov
mov
dec
cmc
jno
adc
out
inc
xor
fnsave
fwait
data16
cmp
push
rol
sarl
cmp
xor
test
ret
inc
rclb
jl
xchg
pop
push
mov
les
fsubl
jle
mov
add
rcrl
mov
and
adc
mov
mov
jg
scas
or
and
xchg
subb
stos
cmp
ret
movl
stos
fsincos
out
pop
bound
cmpb
fnstenv
and
ja
mov
jae
xor
movsl
mov
cmpsl
add
jnp
enter
sub
and
xchg
loopne
mov
loopne
ljmp
std
hlt
cmpsl
jb
jle
out
test
sbb
in
movb
out
mov
repz
pop
mov
mov
lret
cli
or
push
add
xchg
mov
cltd
in
jmp
nop
ss
stos
jge
xchg
movsb
mov
lds
dec
cmpsl
lods
cmc
scas
lods
data16
insl
outsb
in
cld
mov
or
insl
mov
mov
hlt
sub
orl
pop
sahf
lret
inc
xlat
into
hlt
andb
rorb
inc
stos
fldl2t
rol
or
mov
and
dec
add
jecxz
lods
stos
and
outsl
loope
push
push
dec
insb
jae
int3
jmp
or
mov
pop
inc
je
rolb
mov
sbb
add
dec
popf
les
cli
sub
dec
cmp
inc
xchg
pop
mov
xorb
mov
fwait
in
out
aaa
xchg
push
clc
repnz
ljmp
adc
aam
iret
mov
repnz
sub
sub
adc
push
sub
adc
add
cmpsl
sbb
fwait
data16
adc
dec
repz
or
jmp
or
rol
sbb
cmc
mov
pop
jns,pn
aaa
scas
adc
sbb
call
idivl
cmpsb
call
lret
push
pusha
add
jmp
fadds
mov
cmp
test
test
leave
in
jl
inc
mov
cmc
pop
xorl
pop
mov
cmpsb
mov
fdivr
mov
cmp
sbb
stos
add
add
shlb
insl
out
push
mov
adc
lret
mov
andb
pop
shll
les
lret
xchg
mov
loopne
lea
mov
lahf
std
mov
mov
xorb
pushw
or
movsb
adc
push
fwait
aaa
xchg
cmpsb
dec
sbb
or
ret
sub
mov
idivb
cmp
adc
jne
mov
pop
cmp
fcmovb
xchg
ja
dec
fsubrp
or
xor
icebp
adc
js
lret
enter
inc
pop
xor
aaa
mov
sub
mov
jmp
loopne
gs
out
sti
jnp,pt
mov
aam
iret
xchg
daa
jb
fdivrp
nop
fimuls
dec
ret
ljmp
mov
jb
dec
fisttpll
mov
lods
movsl
lods
push
mov
shrb
es
cmp
and
inc
inc
add
sub
mov
sbb
add
pop
mov
in
iret
push
mov
fldl
enter
pop
adc
cs
xchg
cmp
sub
xchg
adc
push
stc
jno
in
adc
iret
mov
lods
push
jmp
jg
pop
adc
push
mul
push
stc
jnp
movsl
and
inc
test
pop
gs
adcb
pop
pop
movsb
arpl
cs
adc
aad
mov
jmp
mov
push
fucomp
mov
shll
jmp
out
sbb
rolb
mov
push
test
jl
cmp
xchg
cli
adc
std
xor
dec
pop
jne
adc
xor
test
out
mov
mov
cli
lds
and
push
scas
inc
adc
mov
ret
jb
lea
inc
or
stos
sbb
jnp
je
js
jo
lahf
lmsw
pop
pop
out
pop
rcrb
jnp
stc
ret
xchg
xchg
ret
jo
xor
pop
outsb
jp
pop
loope
out
test
shl
pushf
loop
or
cmp
in
subl
fcomps
mulb
jns
fsts
push
addr16
test
ljmp
loop
call
sub
sahf
ja
mov
imul
jns
lahf
cmp
pop
and
push
mov
icebp
xchg
aad
insw
into
sti
aam
and
iret
out
mov
mov
shrb
mov
sarb
loope
xor
les
loope
movsl
iret
push
mov
call
pop
sub
dec
jp
repz
addl
imul
inc
pop
jnp
pusha
mov
and
gs
push
in
ret
jnp
ret
lret
leave
jl
out
movsb
sub
sub
xor
out
mov
and
add
imul
cli
mov
inc
in
icebp
movsl
add
pusha
inc
adc
outsl
and
or
jne
add
mov
pop
daa
je
icebp
gs
xchg
lgs
ja
xor
sbb
inc
xor
dec
push
fidivl
sbb
mov
outsl
push
bound
in
inc
lods
icebp
fucomp
and
lahf
ss
orl
out
sbb
push
cli
push
leave
mov
mov
adc
scas
mov
mov
sub
jno
xor
sub
mov
cmpsb
ja
es
or
adc
jne
cmp
or
mov
hlt
jecxz
int3
daa
idivl
pop
cmp
inc
ss
out
mov
arpl
mov
loopne
daa
sbb
dec
push
push
ljmp
xchg
sbb
ds
xor
jbe
insl
rorb
scas
mov
ret
jge
das
out
test
repnz
ret
mov
fldcw
jb
fs
fwait
cmc
cli
popf
shll
les
repz
out
lea
sete
lahf
mov
icebp
jl
hlt
pop
inc
or
push
fstpl
dec
repz
push
cmpsb
and
sbb
movsl
xchg
ljmp
or
fdivp
rcll
rolb
cmp
call
outsl
loop
movsl
and
loope
cmpsl
repnz
vucomiss
rclb
pop
xchg
shlb
nop
xor
and
icebp
mov
out
mov
inc
mov
pop
push
lea
xor
push
sub
addr16
cmpsl
jg
cmp
repz
stos
sub
pop
dec
sub
lret
sbb
add
mov
pusha
or
sbb
dec
jg
xchg
cmp
repz
ss
fdiv
pop
xchg
inc
popf
pop
jg
movsl
mov
fsts
loope
jp
push
mov
mov
loop
lods
jnp
outsb
sbbl
mov
inc
or
add
sub
push
loopne
inc
fisubl
ficoml
and
sarb
cmp
imul
fdivl
leave
int
push
xchg
les
out
stc
pop
rorl
add
shll
inc
imul
mov
outsb
out
jecxz
mov
stc
xchg
imul
sub
jecxz
shlb
or
lea
lods
pop
xchg
ret
inc
xchg
ja
pop
aam
cmp
or
fs
lods
arpl
add
aas
aaa
pop
push
xorl
clc
ror
ljmp
mov
and
inc
push
push
jnp
push
in
ret
dec
adc
mov
ljmp
je
push
daa
aaa
sbb
nop
or
cmpsb
dec
sarb
mov
xchg
push
sub
pop
ss
mov
jno
lret
out
cmc
loop
and
insl
roll
outsb
gs
cli
test
lret
jmp
push
or
pop
loop
and
sbb
enter
popa
sub
js
adc
outsl
push
push
inc
pop
add
mov
divl
xchg
js
movb
sbb
nop
pop
mov
in
fnstcw
not
idivl
aam
add
pop
jnp
fstpt
xor
dec
movsb
loop
fs
push
cmc
imul
mov
mov
push
lret
xchg
xor
std
pop
test
dec
ret
call
enter
mov
loop
dec
sbb
addr16
repnz
xor
aaa
mov
mov
pushf
mov
cmp
dec
data16
adc
jno
loope
mov
mov
pop
mov
mov
test
cmp
inc
inc
dec
inc
leave
jmp
sti
cs
out
xchg
hlt
nop
sub
das
push
push
and
push
inc
add
jb
fwait
in
add
rcl
es
inc
mov
ss
and
data16
fisubl
pusha
mov
jg
hlt
adc
push
ret
jle
or
xor
rorl
pop
push
add
mov
mov
pop
pop
add
imul
outsb
andb
in
lea
push
mov
outsb
mov
ja
mov
int
movsb
bound
or
add
and
orb
cmpsl
bound
imul
jne
xchg
scas
sahf
mov
pop
dec
jnp
daa
fiaddl
jo
cmc
mov
in
and
jge
pusha
out
xor
sbbb
test
sbb
loope
subl
fdivrs
out
cmp
sub
fadds
mov
mov
addl
test
mov
in
lahf
cmp
es
push
adcl
push
add
bound
add
out
in
inc
xor
inc
in
cli
in
jno
movsb
lock
pop
sti
pop
loop
inc
repnz
test
adc
add
jge
addl
cmp
or
or
adc
daa
test
nop
out
outsl
mov
xchg
mov
jno
fdivrs
mulb
loopne
sahf
outsb
popf
add
pop
mov
scas
or
ds
daa
xorb
arpl
out
lret
jb
or
ret
les
insl
xlat
pusha
sub
mov
or
adc
rclb
fldenv
aas
pop
cwtl
mov
xor
js
lahf
mov
dec
xlat
arpl
mov
mov
push
fs
jns
push
cld
push
mov
push
scas
xchg
xchg
cmp
dec
ds
add
xchg
pop
out
mov
in
add
adc
or
xchg
lods
dec
xlat
and
xchg
into
push
int3
dec
mov
push
xchg
ss
cmpsl
xchg
dec
popf
iret
add
leave
pop
lcall
lret
ss
or
mov
mov
push
push
dec
ficomps
inc
add
jno
lret
xchg
cli
fistpll
lcall
jbe
push
shll
sbb
or
repz
aaa
cmpsb
das
jo
negl
test
enter
pop
pop
push
mov
adc
rorl
outsb
js
push
sbb
imul
mov
sub
clc
mov
cmp
mov
mov
mov
mov
mov
mov
add
mov
loop
in
test
inc
push
mov
sbb
daa
mov
mov
sbb
push
sub
and
movsb
ss
pushf
xlat
or
sub
ficoms
lret
xchg
pop
mov
cmc
ret
imul
cld
fadds
inc
sbb
cwtl
imul
sbb
xor
gs
mov
out
sub
scas
in
insl
sbbb
jle
cmove
shl
lods
xchg
or
lods
lret
and
gs
aad
or
jb
xchg
jl
lods
sbb
jae
into
insb
in
pusha
insb
and
lret
das
pop
dec
testb
sub
xchg
adc
and
mov
mov
mov
xchg
in
xor
fstp
sub
in
adc
dec
jmp
mov
out
test
lods
xor
ret
or
call
push
adc
mov
pusha
fldt
lret
pop
add
add
jecxz
movsb
ret
mov
push
mov
mov
int
push
push
addr16
xor
add
pushf
dec
sti
mov
dec
sbbl
jp
mov
jne
cmpsb
sarl
mov
imul
sub
mov
aad
xchg
xchg
dec
pop
int3
cmpsl
mov
hlt
cld
dec
cmp
xchg
aas
rclb
mov
cmp
loope
mov
cmp
scas
dec
lods
mov
inc
cmp
xor
ss
shll
aam
ss
out
mov
enter
ja
add
std
stos
push
repnz
cmp
aaa
enter
popf
movb
fisubl
lahf
mov
sub
imull
mov
iret
push
jb
cmp
dec
and
mov
mov
insb
imul
pop
pop
adc
and
fwait
mov
inc
fwait
lock
outsb
data16
rclb
in
inc
adc
xchg
adc
mov
call
fptan
cmpl
xchg
test
mov
cs
fiaddl
fstpl
outsb
cwtl
test
dec
mov
pop
push
dec
jns
mov
daa
in
sub
mov
mov
icebp
mov
inc
daa
mov
sti
lret
or
xchg
ja
cmpsl
mov
push
pushf
repz
test
inc
mov
filds
cvtpi2ps
jp
xchg
push
pop
aaa
xor
mov
pop
imul
insb
mov
loope
divb
scas
sub
mov
out
fs
ljmp
stos
filds
cld
inc
lcall
mov
jecxz
mov
pusha
dec
addr16
push
adc
arpl
and
out
pop
cmpl
add
addb
hlt
icebp
movsb
pop
data16
jle
jl
mov
push
pop
cmp
push
mov
push
outsb
adc
sub
add
sahf
xor
lea
push
mov
xor
cmpsl
pop
pop
lret
jns
out
mov
loope
pop
jecxz
out
xor
imul
nop
push
rolb
inc
mov
jno
movsl
test
mov
icebp
icebp
xor
sub
lods
cmpsb
cmp
mov
fcomps
sti
mov
cld
xor
es
in
test
cmp
inc
jno
inc
push
lods
data16
incb
sbb
and
jbe
jae
pop
mov
sahf
dec
test
out
cmp
imul
push
or
repz
mov
sbb
inc
cltd
mov
orl
inc
fwait
aaa
popf
sbb
sti
jbe
int
jae
pushf
sub
sarl
imul
out
sub
jne
mov
xor
dec
pusha
outsl
and
jb
mov
xchg
or
daa
icebp
push
dec
test
dec
xor
ja
xchg
sar
jge
add
sub
lock
mov
test
test
fwait
outsl
ljmp
mov
or
loopne
mov
mov
notl
pop
fstpl
and
sarl
addr16
adc
ret
xor
cmpsb
fnstsw
pop
imul
or
jg
mov
push
sahf
cmp
call
icebp
mov
xor
inc
mov
jns
in
add
into
cmpsl
pop
ds
push
lock
test
dec
pop
aam
mov
pop
incl
cwtl
loop
or
sub
dec
int
sbbl
test
jno
cmp
scas
xchg
add
movsl
arpl
dec
loope
or
mov
jge
lock
into
or
mov
notb
mov
hlt
pop
int
hlt
jg
sbb
inc
stos
dec
jae
ja
cld
out
inc
add
jnp
dec
jmp
xlat
fwait
or
rcl
stos
jge
mov
dec
aas
add
loope
push
sbbb
dec
cmp
and
popf
test
inc
mov
std
push
or
insl
shl
sbb
leave
rcr
mov
vcvtsd2ss
lahf
mov
ds
and
in
xchg
es
add
aaa
cwtl
js
fisttpll
push
xrelease
fistpll
and
lcall
or
jbe
mov
jg
inc
lret
and
iret
mov
sub
fwait
push
mov
fs
sub
jmp
dec
sbb
ljmp
orb
imul
cltd
ljmp
ss
sub
movsb
jbe
and
push
rorl
cmp
xchg
shll
sbb
mov
dec
jl
or
jbe
ss
pop
pop
inc
fcompl
cmp
pusha
mov
in
cmc
mov
or
or
xlat
inc
mov
call
scas
ds
pop
sar
in
inc
sbbb
sbb
cli
xor
idivl
test
cmp
aad
cld
pop
jg
push
out
mov
clc
daa
mov
popa
icebp
push
js
push
sub
push
jns
scas
out
and
inc
or
sbb
dec
lcall
stos
repz
dec
push
sbb
push
das
ljmp
xchg
shrb
insb
xor
test
cmp
enter
mov
mov
add
imul
sbb
lock
jno
aam
out
mov
dec
or
sub
outsb
lds
into
lret
pushf
jbe
jo
add
pop
sub
add
nop
jecxz
push
jb
xor
mov
lock
mov
or
cmpl
push
push
sub
sbb
hlt
sub
nop
or
popa
push
fsubrs
or
adc
ljmp
daa
push
insb
out
mov
outsl
cmp
xchg
adc
aaa
shrl
jge
int
sbb
in
and
call
and
lahf
adc
pop
dec
sub
fdivrl
jge
jp
mov
rorb
add
xchg
inc
push
imul
ret
mov
sbb
ret
stc
mov
popf
fists
mov
cmp
jne
dec
pushf
fidivl
dec
push
lds
negb
cltd
pop
adc
mov
jno
mov
call
mov
sbb
pop
xchg
push
movsl
test
outsl
cltd
jo
sti
jge
insb
jg
lea
or
arpl
push
in
xlat
cs
and
push
inc
dec
mov
test
call
fistps
mov
test
and
mov
push
nop
stos
and
cli
add
pushf
mov
jb
dec
fs
xorl
dec
pop
movsl
imul
push
xchg
push
sbb
xor
fadds
aaa
add
jle
jmp
mov
push
jge
xchg
mov
and
add
cmpsl
mov
or
les
mov
pop
out
rclb
jg
cmp
cmp
shlb
les
mov
cmp
scas
fs
dec
mov
xchg
mov
cmp
notl
fisubrl
cmpsl
lea
or
lds
call
rclb
cli
cltd
shrl
mov
movsb
xor
push
lret
pop
xor
fimuls
mov
fs
ret
lret
pop
inc
aam
sub
and
sub
out
jmp
push
cltd
adc
or
mov
mov
movb
sub
loope
mov
sbb
nop
jge
jns
cwtl
fistl
xor
sbb
sbb
inc
adc
lret
pop
sti
sarl
fiadds
ret
les
inc
fbstp
cltd
cmp
jne
sti
je
movsl
sbb
lcall
sahf
inc
stos
cltd
sub
loop
rcrb
xchg
mov
js
fsubl
sbb
dec
mov
das
sub
or
sbb
push
sub
int3
stos
lret
jecxz
stos
sub
pop
in
mov
cld
in
mov
adc
aad
jp
mov
or
lret
imul
xor
push
mov
sub
data16
dec
in
push
mov
xchg
daa
cwtl
mov
mov
push
inc
fsub
rol
lahf
adc
orl
and
pushf
mov
lret
sub
nop
pop
or
pushl
das
add
lret
mov
xchg
adc
add
pop
das
push
cwtl
bound
dec
mov
or
mov
push
jmp
mov
inc
pop
dec
aam
outsl
jo
mov
sub
pop
mov
scas
and
aam
mov
inc
stos
popa
sub
out
cmp
bnd
call
out
add
sarb
jg
aaa
dec
lods
pop
aaa
jns
inc
mov
daa
aad
shrl
mov
sub
mov
in
adc
stos
pop
ret
sbb
in
rcrb
shlb
sub
ss
in
hlt
sbb
pop
mov
das
adc
cmc
cltd
stc
xlat
jl
add
xchg
sbb
stc
cmp
mov
mov
sub
sub
xlat
bound
loopne
stos
mov
insl
inc
es
mov
cwtl
mov
scas
inc
mov
imul
out
dec
out
call
add
fisttpl
ljmp
inc
jae
sub
sub
jmp
mov
stc
mov
xchg
mov
hlt
dec
inc
cmp
inc
cmp
cli
jo
hlt
inc
mov
xchg
mov
sti
clc
xchg
icebp
aad
sahf
mov
jo
scas
mov
ds
lret
stos
loop,pt
sub
jle
mov
fcoml
add
insb
rol
jne
xor
add
shl
int
imul
xchg
inc
cmpsb
dec
mov
movsb
dec
repnz
repz
insl
xor
xchg
jmp
adc
ljmp
filds
outsl
movsl
dec
pop
gs
repz
jbe
pop
mov
and
fnstenv
cli
push
cmp
sbb
sub
fstps
shl
daa
push
dec
stos
in
adc
cmp
leave
imul
and
mov
cmp
gs
stc
jge
nop
inc
dec
pop
iret
ljmp
add
out
sti
cmp
mov
popf
xchg
jne
mov
xchg
rorl
out
iret
xchg
arpl
push
mov
jno
mov
adc
ds
push
mov
xor
mov
jne
pop
rcr
in
adc
mov
dec
push
pop
sub
jo
scas
jle
test
and
jmp
sbbb
jle
fstpl
ret
mov
or
fdivr
dec
incb
cmp
and
cmc
addr16
arpl
sbb
pop
mov
mov
pop
enter
popa
cmp
cltd
xchg
jbe
out
test
rcll
pop
popf
dec
add
push
mov
stos
out
in
and
je
dec
cmp
mov
aam
in
jnp
outsb
js
pop
cmp
mov
inc
and
cmp
mov
loop
mov
inc
daa
mov
loop
dec
adc
sbb
cmp
sahf
cmp
cmp
add
hlt
or
mov
adc
stos
ja
cmp
dec
adc
mov
pop
sub
push
mov
mov
inc
les
das
jg
xchg
jnp
cli
sub
scas
in
inc
arpl
mov
mov
jl
add
sub
icebp
jns
sbb
pusha
pop
mov
xchg
jae
jb
jb
push
mov
xchg
dec
cmp
idiv
daa
cmpsl
movsb
push
inc
inc
xor
mov
adc
pop
and
hlt
decl
int3
ja
lods
arpl
cwtl
add
push
inc
outsb
mov
shl
cmp
jb
in
ljmp
dec
push
push
pop
dec
or
jno
xor
pusha
jge
mov
sahf
ja
push
xor
xlat
mov
sbb
std
or
mov
push
test
cmp
push
icebp
cmp
mov
out
cwtl
ret
enter
insb
dec
and
inc
or
and
mov
dec
jmp
test
movsl
pop
daa
or
int
out
andl
insl
xchg
sahf
mov
andl
ja
je
je
data16
xchg
and
in
shlb
cld
mov
andb
push
repnz
lret
cmc
cwtl
imul
inc
jl
fimuls
pushf
lahf
push
push
xchg
mov
adc
sub
mov
scas
fldt
imul
mov
inc
adc
andb
add
push
inc
fwait
add
mov
fisubs
push
stos
push
daa
mov
outsb
ret
les
cltd
pop
mov
imul
adc
push
and
out
and
pop
aam
ficomps
fmull
pusha
fisubrl
adc
pop
aaa
les
ret
clc
pop
inc
jmp
mov
sub
cmp
les
call
out
inc
push
inc
mov
pop
shrl
or
push
les
cld
lcall
mov
xchg
pop
pop
adc
push
out
out
ffreep
stos
pop
or
lock
cmp
xchg
jae
push
fcoml
pop
jae
iret
cmp
pop
xchg
in
jne
iret
xor
aaa
xor
jb
in
pop
push
lahf
fisubl
xchg
bound
xchg
xchg
add
xor
aas
outsb
fdivrs
aam
sub
cmp
pop
mov
xor
add
and
mov
or
div
xchg
pop
pop
faddl
mov
shrl
dec
je
cmc
and
aaa
sbb
sbb
test
cmp
sub
xchg
dec
add
xor
not
mov
pop
loop
lret
inc
and
cmp
stc
jg
inc
and
ds
jge
jno
iret
add
shll
mov
nop
jmp
adc
das
aam
cli
mov
and
jmp
fdivrl
loop
jmp
mov
add
push
jo
xor
and
push
imul
mov
aas
pop
rclb
cmpl
hlt
pop
sarb
in
pop
sar
mov
enter
jb
mov
outsl
pop
rclb
fisubrs
add
sub
sub
in
push
outsl
shlb
loopne
and
insl
ret
pop
jge
jg
sbb
mov
jecxz
add
into
addr16
aad
into
loopne
fs
sbb
pop
push
in
clc
pop
das
je
mov
in
mov
sbb
dec
cmp
xor
into
repz
jg
lcall
insl
cltd
lods
inc
pop
push
push
aas
and
jb
rcll
dec
sbb
sti
inc
and
cmp
pop
push
ja
push
insl
icebp
sub
sub
aaa
sub
add
addl
ss
sub
notb
and
les
inc
cmp
add
es
call
mov
into
stos
cli
dec
sahf
dec
ss
push
inc
stc
fistl
dec
fidivs
mov
mov
test
mov
and
xlat
stc
mov
out
mov
cltd
fwait
insb
jo
adc
push
jno
cs
frstor
adc
dec
sub
sub
clc
mov
lcall
cmpl
adc
push
into
ds
and
mov
call
inc
popf
jno
repnz
mov
subb
scas
cwtl
mov
mov
dec
es
sub
test
jl
lods
in
add
sbb
dec
dec
inc
mov
dec
cmpsb
or
dec
rol
jne
add
jle
icebp
xor
mov
fnsave
cmpsl
mov
in
shrl
add
in
nop
xchg
cmp
xchg
jo
cs
test
outsb
loop
xchg
inc
xor
setp
jns
cwtl
cmc
cwtl
les
or
mov
js
pushl
cmp
or
pop
mov
mov
outsl
mov
adc
dec
xor
lods
addr16
std
test
pop
sahf
add
loopne
push
xor
push
mov
adc
mov
push
push
push
sbbl
mov
sbb
lcall
jle
loopne
icebp
fldt
mov
mov
push
push
xchg
xchg
insl
in
xchg
jmp
ds
fsubr
mov
dec
jne
jp
aas
into
cmp
insb
inc
vpmuludq
add
add
loope
mov
and
popf
adc
scas
jns,pt
decl
test
stc
movsl
add
lret
adc
dec
push
sahf
pushf
mov
pop
push
add
and
push
sbb
into
pop
das
popf
fbld
sbb
mov
or
imul
xchg
pop
sbb
xchg
cwtl
aaa
push
jae
mov
adc
add
cs
push
sub
xor
fsubl
inc
xchg
mov
push
jnp
loope
idivl
mov
test
xchg
cli
xchg
push
push
ret
mov
out
fisttps
testl
repz
sub
imul
push
xor
cwtl
adc
xor
jns
outsb
insl
push
push
or
add
bound
js
aam
bnd
add
hlt
or
jge
push
xchg
setge
xchg
mov
xor
pusha
mov
insl
sub
jle
jo
lods
jmp
cltd
cltd
imul
jb
mov
and
push
xchg
call
cmc
cltd
js
in
sbb
xchg
push
xor
or
dec
cmpsl
push
sar
outsl
pop
xor
sarl
inc
mov
test
bound
in
xor
adc
jmp
xchg
sub
and
fwait
sti
jg
mov
imul
sub
jo
push
jmp
cmp
push
les
cmc
fdivl
outsl
mov
adc
clc
cmpsb
mov
inc
xor
mov
insl
mov
adc
in
dec
fists
sub
xor
xchg
pop
test
shr
mov
sbb
jmp
gs
jnp
push
repnz
addr16
cltd
pop
and
adc
insb
pop
adc
jl
push
lods
andl
cltd
into
iret
pop
mov
ds
pop
and
int
popf
and
mov
into
imul
mov
clc
aad
mov
lds
lret
das
pop
addb
mov
ljmp
aaa
mov
jecxz
xlat
mov
loop
adc
call
js
dec
adc
js
and
test
sub
sbb
dec
and
mov
les
mov
cmp
xlat
lret
sbb
mov
pop
test
outsb
cmp
mov
cmc
in
adc
and
jge
into
inc
lods
fs
cltd
push
mov
push
mov
adc
mul
mov
sbb
push
inc
lahf
push
push
push
leave
jge
jo
mov
nop
bound
sbb
push
or
xor
paddw
adc
jg
std
and
mov
pop
xor
pop
dec
aas
fldt
sti
mov
adc
dec
leave
pop
pop
das
bound
mov
rorl
mov
cmp
jg
jnp
cmp
movsb
adcb
xor
lods
cmp
jp
add
xor
imull
or
call
mov
mov
dec
jb
scas
xor
push
xchg
xchg
sub
and
inc
es
sub
or
ret
fs
sbb
orl
jmp
xchg
insb
and
aad
jmp
fucomip
scas
call
xchg
jmp
add
cli
lds
cmpsl
loopne
sarl
test
data16
mov
rcr
pop
lret
les
or
mov
into
test
in
adc
add
add
ja
insl
mov
faddl
test
pop
cld
sbb
or
jg
setnp
icebp
pop
dec
or
and
cmp
dec
loopne
repz
in
and
movsl
leave
xchg
into
call
dec
sub
shlb
mov
mov
cmp
pop
cmpsb
inc
scas
pop
dec
fisttps
mov
int
fs
shl
pop
roll
xchg
xchg
cmp
or
sub
add
push
stos
adc
jnp
push
sbb
mov
sub
subb
inc
mov
sbb
out
jno
inc
pop
xchg
fsubr
sub
and
xchg
lock
int3
fwait
or
pushf
push
xor
mov
sub
adc
cltd
push
push
xchg
fs
and
sbb
rol
lahf
jo
cmp
jo
cli
push
fwait
mov
or
pushf
aas
sub
jmp
rcrb
mov
cmp
push
cmpsb
adcb
std
js
bound
mov
pop
push
pop
push
inc
cmpsb
mov
xlat
mov
cltd
mov
inc
add
mov
inc
mov
popf
in
mov
push
imul
sub
pop
mov
dec
loopne
adc
jnp
mov
adc
aad
loope
or
dec
or
ljmp
mov
jne
out
stos
lods
adc
push
mov
sub
int3
mov
inc
data16
jl
divb
jns
mov
and
mov
js
data16
je
shll
shlb
cmp
scas
sti
sbb
sub
shl
scas
imul
lods
push
and
mov
ret
inc
rclb
add
in
jmp
cmc
and
inc
dec
jl
xor
aas
mov
addb
sbb
stos
pop
jno
fidivrs
cmp
cmpsl
addr16
gs
insl
and
jne
push
out
pushf
roll
cmpsl
imull
cmp
jno
popa
adc
mov
add
and
hlt
rorl
or
les
decl
addr16
insl
fstp
dec
stos
jno
or
sbb
sbb
dec
cwtl
repz
into
in
and
pcmpeqd
xchg
out
and
out
cltd
popf
xchg
mov
fcomps
cli
pusha
inc
inc
mov
pop
or
es
outsb
adc
xchg
rcrb
mov
push
stc
cmp
hlt
cltd
lea
push
ss
xor
adc
imul
sub
pop
mul
movb
imul
shrb
push
push
inc
enter
xor
inc
int3
pop
mov
sbb
cmp
sbb
mov
arpl
jno
and
mov
cmp
sbb
out
adc
arpl
adc
jbe
fcomps
mov
cs
fsubrl
xor
cs
cmp
ss
mov
sub
xor
lods
jp
lea
sbb
cmp
cli
dec
lret
aas
cltd
xlat
xchg
lahf
lahf
sbb
mov
arpl
mov
aas
lds
mov
adc
or
xchg
gs
dec
mov
push
lcall
loope
mov
jo
lock
ja
push
dec
dec
adcb
in
mov
fcomip
cmc
stos
xchg
or
stc
stos
mov
and
pop
mov
out
dec
mov
jg
cmc
out
jo
popf
pop
adc
repz
inc
lahf
lcall
cmp
jge
outsl
xor
xor
mov
fimuls
inc
insl
mov
test
int
xchg
rolb
lods
pop
add
scas
data16
sub
jecxz
xchg
popa
jle
leave
pop
jnp
stc
jno
jb
shlb
mov
and
xorl
jp
stc
add
popf
xor
pop
cli
loope
adc
loop
sbb
fnsave
xchg
xchg
rorb
xchg
pop
fcoml
push
lods
subl
inc
out
sub
insl
aad
arpl
adc
add
mov
xchg
sti
frstor
inc
dec
dec
mov
pusha
pushf
and
xchg
mov
lret
push
pop
push
sbb
cmpsb
xchg
loope
or
test
pushf
cmpsl
or
mov
mov
insb
aas
or
sahf
fistps
lea
add
pop
mov
sub
xor
imul
into
push
fisttpll
out
mov
clc
mov
xchg
ljmp
dec
xchg
inc
or
sbbl
xchg
cmpsl
xchg
repz
aas
push
lods
and
rorl
dec
lds
jmp
jecxz
inc
jge
jmp
dec
push
pop
pop
movsb
ret
mov
sub
movsl
aam
push
add
mov
xchg
fwait
cs
and
jns
incl
jmp
push
pop
movsb
andb
clc
rcrb
dec
cmp
pop
in
or
int
mov
inc
int3
xchg
leave
movl
lods
sub
xor
mov
test
inc
cmp
sub
lock
push
testb
jmp
rolb
hlt
push
push
mov
xlat
and
test
test
jo
adc
mov
es
leave
inc
mov
xchg
add
pop
sub
pop
sarl
ja
or
pop
mov
ret
sbb
jb
add
in
adc
add
mov
or
cmp
es
in
and
stc
sub
mov
call
inc
popf
movsl
or
pop
dec
push
rcr
subl
fidivrs
sbb
js
push
stos
and
bound
addr16
sbb
ss
dec
in
cmc
ds
repz
adc
inc
pop
leave
ljmp
pusha
dec
stos
or
scas
sub
mov
movsbl
push
push
sub
add
mov
into
mov
enter
push
outsb
ljmp
sub
push
mov
dec
dec
fidivs
test
xor
enter
xor
cs
cmpsb
sub
out
loop
and
cld
xor
jg
lahf
push
dec
mov
add
mov
out
lcall
xorl
out
aaa
cmp
jns
imul
xchg
sbb
adc
jbe
jne
push
xchg
in
push
mulb
pushf
mov
icebp
xorl
cmp
inc
xor
jbe
xlat
fs
mov
roll
fs
leave
adc
push
and
or
fnsetpm(287
loope
xchg
shrb
int3
and
jp
adc
sub
sbb
or
popf
xchg
xchg
push
fcmovb
jecxz
into
jmp
int
mov
mov
and
push
lahf
xchg
sub
ss
scas
cltd
mov
test
ret
sahf
or
ss
lock
xchg
cld
or
add
sub
and
adc
hlt
cmp
pop
cmp
mov
or
add
cld
out
ror
cwtl
pop
cwtl
cli
add
jno
les
lods
cmp
cmp
ret
and
les
jae
loope
xchg
addb
fstl
lock
push
mov
inc
mov
inc
inc
loope
insb
cmp
pop
mov
mov
outsl
stc
mov
emms
mov
jbe
sub
call
jmp
imul
or
mov
add
dec
stc
xchg
js
scas
test
inc
call
imul
mov
into
lea
pop
sub
test
daa
push
andb
ja
sbb
rcrb
xor
stc
ret
aas
aaa
loop
push
in
test
jmp
ljmp
lds
jecxz
jns
jle
in
ror
pop
mov
outsl
out
jo
and
in
mov
inc
sbb
test
negb
ja
inc
jp
sub
xor
and
stc
imul
cmp
or
fwait
testb
jg
mov
dec
dec
jo
loop
or
cltd
push
test
ret
in
adc
scas
repz
add
jnp
lret
or
lock
mov
mov
pop
push
or
lds
mov
inc
mov
push
adc
sarb
jmp
fildl
fildll
shll
lret
pop
pop
mov
hlt
daa
mov
das
jne
push
dec
out
shrl
mov
mov
and
aam
push
int
mov
cmpl
mov
mov
dec
lds
frstor
stos
add
push
xchg
sbb
enter
pop
testl
jp
adc
clc
decb
mov
cmc
stc
cwtl
les
call
and
inc
inc
cld
adc
rclb
ja
and
mov
arpl
test
es
jg
inc
mov
jae
cmpsb
xor
das
cmp
shll
push
shrl
push
inc
cmp
fwait
jae
sti
push
jecxz
sbb
push
pop
insl
adc
cmp
or
lret
xlat
mov
pop
xor
mov
dec
xlat
cmp
cmp
dec
loopne
cld
and
xchg
in
jne
sub
push
sahf
lds
xchg
cmc
out
sub
shlb
inc
adc
or
aad
sub
add
test
xchg
cmp
xlat
xor
push
enter
push
aaa
mov
mov
inc
sbb
arpl
pop
push
nop
and
aad
scas
fstl
lds
add
mov
fiadds
jo
jmp
cs
dec
adc
mov
cmp
pop
mov
popa
pop
pop
inc
inc
iret
shrl
scas
divb
aad
and
int3
inc
jno
outsl
insl
incb
loope
jne
icebp
sbb
into
bound
dec
in
pop
mov
mov
mov
shlb
fildl
add
divl
popf
mov
push
dec
je
mov
adc
ss
mov
jb
xor
in
sbb
push
sahf
outsb
sahf
cltd
icebp
push
lods
test
data16
or
pop
decb
ret
rorb
add
pop
stc
adc
or
sub
mov
add
or
sub
xchg
mov
adc
and
stos
mov
fcmovnb
xchg
sbb
cmp
sahf
sahf
inc
in
push
scas
leave
loop
testb
push
loope
cmpsb
push
lock
push
push
pushf
mov
jecxz
sarl
lcall
adc
cmp
popf
sub
out
pop
and
pusha
jmp
push
and
fmull
arpl
add
into
push
out
add
push
aam
dec
mov
lock
xchg
dec
mov
popa
outsb
cli
fidivs
lods
decb
cltd
add
adc
xor
into
inc
xor
fldcw
fwait
mov
push
in
cwtl
lods
dec
les
pop
dec
fidivl
cmpsb
repz
out
int3
adc
mov
out
mov
cmpsb
adc
xor
adc
test
sub
mov
mov
mov
lods
cmp
sub
jno
adc
inc
jb
inc
push
ljmp
mov
rcrb
repnz
js
mov
sub
sub
push
sarb
in
cmp
ss
xchg
cmpsl
pop
xchg
or
pushl
lret
out
testl
push
lret
scas
pop
cltd
jnp
add
cs
pop
xchg
jg
dec
fldl
loopne
pop
andl
mov
sbb
jecxz
push
movnti
loope
ret
das
or
shl
xchg
fs
pushf
xor
xchg
mov
popa
inc
push
arpl
mov
dec
xchg
and
xor
mov
subb
out
jge
push
rorl
push
xchg
jmp
cmc
cmpsl
loop
fadds
pop
mov
sahf
xor
sub
lock
pop
stc
nop
mov
jb
dec
aad
sbb
repnz
pop
mov
sbb
loopne
std
fldcw
cli
repz
shlb
fdivrs
pop
aas
test
sbb
inc
gs
push
sti
jns
arpl
bound
sub
adc
ja
adc
cmp
test
fmuls
pop
and
dec
dec
mov
fwait
lds
std
cld
xor
scas
rolb
aas
push
lods
xchg
lods
sbb
sahf
sbb
scas
jp
insl
sub
cmpsl
lahf
mov
pop
mov
mov
popa
add
es
out
pop
sahf
clc
cmp
call
je
ja
mov
mov
std
cmpl
mov
gs
mov
pop
imul
xor
mov
mov
jge
repnz
push
fimuls
mov
mov
mov
fcoml
test
outsl
jl
cs
int3
ss
pop
add
dec
in
push
pop
mov
mov
into
imul
push
pop
cwtl
xor
ror
dec
add
repz
xor
inc
add
insb
inc
in
push
inc
cmp
les
mov
dec
jl
mov
out
je
fmul
or
push
mov
aad
aam
lea
inc
jno
aaa
adc
lret
cmp
out
add
mov
mov
test
pushf
scas
push
bound
jg
stos
xchg
cmp
rorb
cmpl
rcrb
ret
sbb
test
es
jmp
movsl
cld
sub
gs
ret
mov
mov
fsubr
pop
xor
sub
mov
dec
ja
mov
mov
into
dec
out
test
rcll
mov
outsb
and
imul
pushf
dec
dec
inc
xor
andb
daa
mov
lcall
add
fsubl
jae
dec
ret
mov
in
adc
jns
loope
je
add
icebp
movsb
inc
push
and
testb
into
mov
cmpl
cmc
lods
lret
cmpsl
adc
insb
dec
lcall
push
xor
jbe
lcall
sbb
arpl
cltd
out
xchg
mov
jge
insb
inc
sub
add
push
test
cmpsl
fnstenv
mov
lret
jbe
and
in
pminsw
jno
mov
cmc
hlt
push
mov
in
xchg
jl
loopne
xchg
xchg
pop
rcrl
push
std
xchg
mov
shlb
iret
ljmp
adc
adc
cmpl
cmc
xor
inc
mov
addl
sbb
call
adc
ljmp
rorb
xor
push
push
sub
js
rcrl
pop
repnz
out
xchg
add
bound
stos
add
notb
aaa
jmp
push
push
clc
into
xor
and
lret
inc
add
and
inc
test
pop
pop
insb
icebp
sbb
into
pop
dec
sar
sahf
dec
dec
mov
mov
cmp
xchg
push
pushf
out
adc
jecxz
sarw
xchg
pop
mov
add
adc
lret
xor
cld
dec
dec
icebp
pushf
ret
cmpb
div
imul
adc
and
test
scas
or
das
ja
repz
sub
sub
popa
mov
lahf
inc
jle
inc
aam
fcoms
iret
lahf
test
das
and
loope
lock
insb
int
std
pop
and
mov
out
fnstsw
inc
fldcw
pop
dec
rcrl
rcl
jmp
inc
imul
ret
scas
mov
push
mov
dec
inc
pop
sbb
pop
sbb
sbb
cmc
cmp
push
push
push
and
ret
fisubrs
aaa
in
clc
mov
push
int3
sub
sub
inc
lock
mov
jnp
push
lods
jl
pop
ss
fisttpl
jl
mov
push
inc
and
xor
std
int
inc
test
dec
das
mov
rorl
pop
int3
jge
add
shlb
stos
mov
scas
popa
or
mov
xchg
loopne
cmp
jge
out
ljmp
xchg
cltd
xchg
mov
sub
in
pushl
out
in
hlt
addr16
and
mov
jnp
adc
popa
pop
jnp
push
addr16
lret
out
stos
enter
cmc
inc
sub
repz
outsb
xor
cmp
test
scas
mov
mov
dec
pop
inc
out
loope
pop
cli
out
dec
and
add
or
hlt
lret
pop
fldt
enter
jl
shl
mov
rorl
jnp
and
arpl
mov
pop
inc
in
inc
mov
negl
cmpsb
nop
lods
inc
sub
push
lds
scas
stc
xor
les
fdivrp
pop
inc
outsb
cmp
icebp
ljmp
push
sbbl
add
enter
mov
sbb
insl
mov
fsubr
loop
imul
sbb
cwtl
in
mov
push
rcrb
mov
cli
fstpt
lods
dec
idivl
add
inc
pop
sub
xchg
sub
push
mov
pop
scas
fs
rcrb
mov
jne
out
movsl
dec
mov
mov
stos
adcb
cmpsl
insb
sub
insl
lods
outsl
ds
outsb
mov
scas
or
xchg
xchg
jl
cmp
ret
fisttpll
insb
push
mov
ljmp
jg
pop
es
jnp
xlat
clc
pop
push
insl
sbbl
je
movsb
loop
or
shlb
jmp
jo
cli
fcmove
addr16
orl
push
mov
roll
pushf
shl
xchg
jp
and
test
xchg
pusha
or
lock
dec
mov
cmp
aas
fcompl
xor
mov
cmpsl
or
cmpsb
add
jbe
mov
mov
aam
lcall
sub
dec
lret
in
jle
fisubrs
mov
cmp
add
mov
pop
je
inc
fsubrl
jno
and
dec
sub
cld
mov
push
outsb
popa
sarb
xchg
xor
mov
dec
roll
xor
jae
in
stos
xchg
xor
dec
add
aaa
repnz
xchg
cmp
and
and
mov
push
cmp
comiss
pop
xchg
xchg
cmp
jno
mov
and
adc
fmuls
jge
scas
push
pop
xor
in
and
pop
jo
push
or
xor
mov
ret
aad
stos
addr16
inc
sbb
int3
add
dec
dec
inc
dec
daa
cmp
push
mov
mov
imul
popf
add
popf
cltd
xchg
outsl
loopne
cli
ja
stos
cs
xchg
xor
int
push
out
loope
or
iret
add
loope
or
clc
cld
int3
out
adc
inc
out
in
xor
inc
dec
les
pop
jmp
fistpl
mov
lahf
fdivp
ja
dec
js
cmc
mov
outsb
push
enter
xchg
push
fisubrl
insl
loope
xchg
les
cmp
test
and
setp
push
lret
call
xor
mov
sub
mov
push
scas
das
test
lds
inc
mov
insb
repnz
push
fnstenv
andb
addl
loopne
arpl
js
insb
push
fs
jno
lret
mov
mov
xor
ja
shlb
fdivrl
mov
aaa
xchg
xor
outsl
xor
loope
in
cmp
jl
and
dec
sub
inc
rcrb
in
or
insl
lea
adc
dec
dec
and
insl
cmp
les
jl
lahf
pushf
das
xchg
pop
push
jp
shlb
fstpl
cs
jmp
movl
cmc
ret
repz
and
push
rolb
mov
or
lret
pop
push
fsubr
cmpxchg
scas
xlat
sub
scas
ss
loop
cmpsb
test
lods
mov
inc
mov
adc
inc
pop
cmp
mov
ds
mov
mov
mov
addl
cmp
push
mov
push
sarb
lods
inc
outsb
sets
inc
icebp
in
shl
xor
std
pop
push
popf
test
rcrl
into
push
mov
sbb
xchg
pusha
test
inc
insb
push
lea
cmpsl
mov
inc
pop
scas
cwtl
fcmovb
push
cmp
cltd
push
fnsave
mov
je
ja
dec
out
pop
xchg
je
jno
jg
pop
cli
xor
add
sbb
lock
filds
aas
xchg
stos
subl
ss
iret
call
lock
pushf
ljmp
push
mov
lea
mov
out
jbe
mov
mov
pop
jp
add
imul
lods
pop
cld
and
std
cmp
leave
ljmp
imul
and
mov
scas
push
jbe
in
repz
push
daa
dec
pop
pop
push
in
mov
push
adc
out
repnz
dec
cmpb
push
hlt
aad
lret
push
adc
push
jl
rorl
or
adc
jecxz
or
dec
pop
jmp
sub
xchg
lahf
mov
xor
mov
or
stos
xor
retw
or
push
mov
ljmp
pop
add
aad
adc
arpl
ja
hlt
enter
lret
insb
inc
stos
sub
outsl
subl
shll
loop
popa
sbb
mov
xlat
lds
enter
inc
lods
xor
and
popf
shrb
xchg
cmpl
test
inc
fs
insl
gs
outsl
ds
fiadds
imul
insl
mov
stc
in
xor
popa
mov
pop
xchg
cmp
sub
lea
test
imul
sbb
mov
test
cmp
aaa
push
shl
fs
shll
add
dec
lret
xchg
lahf
mov
mov
ret
int
mov
outsb
jle
inc
or
jecxz
mov
xchg
pop
loope
sbb
sub
sbb
jns
dec
mov
and
jle
sub
fcmove
hlt
out
and
in
dec
and
cwtl
test
leave
daa
sahf
add
add
popl
jb
xchg
mov
les
insb
sar
fimuls
rcrb
adc
mov
sbb
test
sub
mov
add
sbb
jmp
xchg
pop
mov
pop
push
pop
leave
ss
sbb
mov
sbb
dec
sbb
jge
cmp
mov
xor
sub
inc
xor
xchg
fisttps
sti
mov
xchg
inc
sub
pop
add
jbe
push
mov
repz
dec
and
pop
add
pusha
and
or
pop
or
mov
xchg
mov
jmp
pop
xchg
or
mov
pop
leave
test
xchg
rcrb
ss
xor
and
mov
sbb
sahf
pusha
movsb
xchg
lds
xor
dec
inc
repnz
gs
jle
inc
lea
inc
inc
ljmp
jae
pop
jmp
aaa
add
enter
mov
inc
adc
imul
adc
loopne
lea
pop
fdivl
out
inc
inc
jg
mov
push
cmp
jbe
addr16
or
iret
pop
inc
adcb
jne
pop
pushf
mov
adc
out
cli
in
notl
sbb
into
push
jne
pop
push
mov
or
call
xor
xchg
sub
push
ficoml
adc
dec
add
and
rcrl
mov
repz
mov
in
les
cmp
sbb
mov
movsb
sbbl
loopne
pop
dec
dec
pop
mov
xor
cmpsl
push
inc
dec
xchg
faddl
out
push
xorl
roll
dec
loop
insl
ret
cmpsb
stos
out
push
ret
xchg
subb
test
cltd
ss
push
sub
pushl
xchg
inc
sbb
dec
push
sbb
mov
mov
mov
inc
sub
adc
incb
pop
rclb
icebp
mov
mov
xor
outsb
xor
cmp
push
inc
lds
subb
in
std
push
mov
mov
inc
sbb
sbb
aam
jnp
out
fwait
sbb
stos
cmp
sub
enter
sbb
in
push
int3
sub
fwait
in
jb
pop
ret
test
adc
out
loope
add
pop
enter
mov
or
push
inc
aas
into
add
lods
lret
mov
add
shl
mov
stos
lods
xchg
inc
call
stos
mov
jnp
mov
sbb
cmp
inc
xchg
pop
and
es
xor
mov
mov
inc
dec
dec
sub
mov
inc
in
sub
orl
lea
adc
ljmp
fildl
ja
negb
or
test
push
fidivrl
ret
mov
cld
arpl
jge
aam
leave
pop
lods
rcrl
pop
cs
fcomps
mov
imul
inc
push
xor
and
lods
add
cmp
adc
ret
jg
pushf
xlat
ja
inc
nop
enter
mov
or
sbb
add
lret
shll
and
ja
int3
mov
imul
jnp
jl
jnp
shlb
call
ret
jecxz
sarl
scas
sarl
sbb
dec
daa
ret
arpl
daa
rorl
in
out
mov
cmp
gs
sti
xchg
loopne
out
or
clc
jno
insb
out
arpl
adc
inc
int
jecxz
or
in
cmc
out
aad
test
out
sti
stos
adc
popf
frstor
push
bound
jmp
xchg
out
ljmp
fidivrl
push
dec
lea
dec
sub
roll
test
pop
jnp
pop
add
in
or
mov
push
sti
mov
adc
js
pop
inc
mov
scas
jae
xchg
inc
pop
out
dec
jae
push
cli
aad
xchg
fwait
stos
cmc
xchg
test
mov
stos
inc
mov
cmpsl
inc
lahf
and
pop
mov
or
add
shll
mov
jne
fdivl
sahf
push
xor
repz
or
icebp
dec
xor
stos
fcoml
dec
dec
push
jbe
xor
clc
and
lcall
out
adc
jns,pt
mov
test
jb
push
data16
inc
jl
sbb
jno
sbb
inc
inc
rcl
repz
mov
movsb
sub
jns
rcll
sarb
dec
idivb
push
pushf
cmp
jg
repnz
rclb
jl
and
icebp
inc
lods
inc
push
enter
cmp
fxch
mov
sub
jp
jns
data16
sbb
adc
xchg
icebp
scas
mov
mov
mov
sbb
stos
leave
aam
bound
add
ja
adc
fmull
pop
jmp
push
xor
sub
xor
push
pop
in
out
dec
mov
mov
inc
push
push
xor
xchg
jns
lds
fsubp
push
in
nop
sbb
sub
push
jae
hlt
loope
push
lea
and
or
xchg
mov
movsl
ret
fidivl
sub
mov
ja
xor
jno
mov
xchg
cs
or
inc
cmp
cmp
insb
pop
ss
jae
bound
repz
xor
xchg
insb
clc
adc
push
in
cmc
jge
pusha
outsb
pop
push
sub
fisubl
dec
call
mov
push
and
jo
insb
addr16
add
pop
add
repz
repnz
mov
cltd
push
fdivrs
mov
dec
out
sub
sahf
les
push
xchg
in
xchg
sbb
loop
push
pop
nop
imul
fmuls
cmp
push
pop
ljmp
adc
pop
hlt
mov
lods
lret
aas
xchg
xchg
aad
sbb
popa
pop
outsb
mov
in
sti
lods
jecxz
or
add
ret
stos
jns
roll
sbb
imul
mov
sarb
cmpsb
sub
push
in
stos
cmp
fstl
pop
in
mov
jle
push
rcrl
test
leave
data16
xchg
mov
pop
dec
test
sub
xchg
popf
xor
jmp
and
push
lods
popa
adc
int3
aam
negb
add
mov
ljmp
sub
das
jmp
sbb
adc
stos
insb
inc
mov
js
test
cwtl
and
push
xchg
add
xor
sub
jnp
dec
lahf
xor
adc
mov
sub
push
mov
sbb
xchg
je
test
test
mov
lods
push
lcall
jae
loope
jb
xchg
je
xchg
inc
out
and
pop
lods
aas
les
inc
cmpsb
ret
jno
mov
or
and
mov
mov
in
push
lret
test
xor
movsl
das
cmp
ja
push
mov
orb
xchg
pop
xor
add
inc
movsb
cmp
stos
add
sub
mov
pop
pop
imul
mov
in
mov
xor
loope
leave
push
cmp
mov
daa
cmp
rcll
fmuls
xor
jg
or
leave
pop
mov
and
pop
xchg
orb
push
mov
shrb
loop
mov
je
test
mov
add
jbe
insb
lcall
and
enter
jno
jne
push
xchg
fwait
or
stos
cld
or
addl
lds
xchg
jp
mov
in
jg
aas
sahf
es
push
jp
cmp
in
sub
ret
and
cmp
aam
dec
sbb
dec
outsl
xor
xor
and
jae
jae
das
out
lcall
add
repnz
xchg
nop
push
ss
pop
sbb
das
inc
outsl
sbb
fstps
mov
add
dec
sbb
xor
imul
and
cmc
push
adc
and
mov
and
popf
popa
pop
push
cmp
cmp
nop
push
test
or
lcall
fcompl
out
fs
lds
in
add
popf
push
mov
dec
rcpps
mov
enter
or
push
data16
mov
add
push
sahf
add
pop
cmc
aad
ret
icebp
xor
push
in
loopne
les
sbb
sbb
xlat
inc
xchg
fstpl
in
xchg
pusha
lea
mov
jbe
gs
add
outsl
call
leave
repnz
aas
daa
or
fistps
jne
outsl
xor
mov
dec
cmp
decl
sub
andb
mull
push
call
test
mov
mov
cmpl
pop
pop
sub
mov
push
aad
das
add
xchg
test
aam
xor
mov
xor
ror
xor
das
hlt
jecxz
inc
dec
xlat
adc
jbe
adc
mov
or
or
ja
dec
fs
cltd
jecxz
hlt
jle
push
xor
xor
out
clc
mov
fldenv
mov
or
xlat
mov
inc
push
icebp
loop
jge
mov
mov
mov
add
das
repz
insb
xchg
imul
int
cmp
cmc
data16
out
inc
insb
fsubrs
cltd
ljmp
ljmp
ret
mov
mov
scas
inc
leave
lock
sub
mov
mov
cli
movsl
jae
pop
std
lods
mov
inc
cld
lods
dec
xor
pop
jne
scas
pop
lock
sbb
int
pop
or
jle
sbb
lcall
aas
popa
arpl
mov
mov
pop
xchg
push
or
sub
test
movsl
or
sbb
jo
xlat
add
aas
cld
mov
push
mov
sub
sub
and
das
mov
out
inc
dec
and
add
inc
gs
sbb
xchg
inc
das
movsb
mov
fidivrl
test
hlt
loop
mov
mov
daa
mov
jp
xchg
mov
or
in
adc
movsl
pop
aaa
daa
fsubrl
jp
dec
dec
xchg
jno
outsl
addl
cld
outsb
mov
xor
pop
sti
mov
cmp
and
pop
xor
mov
push
cmp
sbb
scas
push
pop
pushl
xor
cli
cld
popa
cmp
mov
aas
aad
rcll
scas
into
jb
loop
mov
push
xor
push
insl
inc
xchg
aaa
mov
sbb
inc
bound
mov
push
and
inc
ds
adc
pop
mov
outsl
or
cmp
in
mov
pop
jmp
mov
or
std
sbb
inc
leave
pop
mov
lods
and
push
jg
lret
xorl
out
jns
add
lret
lea
jb
dec
sub
dec
sbb
jb
dec
sub
inc
sahf
pop
mov
push
ret
push
aaa
sbb
adc
mov
push
pop
xchg
je
rcl
test
xor
cmpsl
adc
inc
testl
push
cmp
mov
loopne
and
jae
lods
ljmp
or
imulb
sbb
push
push
or
mov
sub
mov
push
or
cmp
jns
xchg
dec
push
pop
and
scas
pop
notb
jo
and
sub
cs
and
push
adc
hlt
fisubs
and
retw
fimuls
andl
ja
shlb
std
fsubrs
ja
jg
mov
sar
test
jg
ficoml
stos
lods
xchg
jmp
cmpsl
xchg
aas
subb
jbe
push
inc
cltd
mov
enter
in
xchg
daa
mov
out
and
rcll
push
sbb
adc
pop
or
and
and
pushw
andb
bswap
sbb
sti
pop
or
pop
out
rorl
add
pop
popf
dec
lcall
and
int3
aas
fsts
sbb
arpl
adc
and
jbe
xchg
daa
adcb
and
dec
sub
pop
mov
out
push
mov
data16
jb
cld
fldenv
or
jbe
arpl
push
and
cmp
push
int3
dec
cmp
add
daa
sbb
test
mov
je
mov
addb
add
cmp
adc
xor
nop
stc
mov
gs
call
movsb
jb
pusha
push
mov
mov
lds
inc
sub
divb
addr16
pop
mov
sub
dec
push
inc
push
mov
xchg
push
test
jae
cmpsl
loope
xlat
sbb
jmp
aaa
mov
dec
xor
push
pop
sahf
cmpsb
pop
push
fnsave
pop
adc
cmp
jbe
stos
sbbb
scas
and
push
das
xlat
stos
add
fwait
jnp
divb
xor
add
sub
push
addl
or
cmp
xchg
ficoml
out
shll
dec
mov
jp
sub
iret
or
mov
lea
inc
mov
cmp
pop
cmpsb
repz
jbe
or
popf
mov
mov
jnp
test
push
or
nop
inc
lcall
lret
mov
dec
mov
in
adc
mov
or
mov
adc
sbb
adc
jge
je
das
shlb
hlt
dec
jae
mov
int3
mulb
pop
loope
jne
imul
mov
lock
ja
mov
cmp
cld
inc
ja
std
test
pop
jmp
fisubl
es
ljmp
xlat
ja
shll
mov
enter
add
in
add
loopne
jp
hlt
clc
jle
xlat
sub
inc
mov
sbb
shr
fisubrs
popf
cmp
xor
testl
nop
xchg
or
rorl
inc
lea
mov
jecxz
push
pop
pop
test
cmpsb
cli
stos
cmp
cmpsl
lret
cmp
js
xor
mov
inc
into
cmp
mov
aaa
loop
mov
daa
inc
add
rcl
es
loop
ljmp
pop
inc
pop
or
jbe
mov
pop
lds
lret
popfw
xorl
cli
xor
divl
and
test
hlt
repnz
fldl
shll
mov
in
adc
push
enter
push
leave
mov
pop
dec
and
pushl
inc
into
xor
andl
xor
icebp
imul
loopne
sbb
push
das
or
mov
in
insl
repnz
cmpsb
mov
push
andl
xchg
xchg
and
mov
mov
ljmp
cmp
mov
shrb
xlat
loopne
icebp
mov
fwait
lahf
cmp
pop
sbb
xchg
inc
xchg
cwtl
out
add
mov
js
in
xchg
dec
adc
outsl
fstl
mov
aam
imul
jbe
jns
mov
or
push
xchg
xchg
lods
scas
push
xchg
movsb
clc
adc
push
mov
dec
sub
cwtl
stc
dec
cwtl
mov
dec
cmp
adc
test
lods
mov
ja
jl
dec
jo
and
in
in
or
xlat
and
push
jmp
pop
shlb
int3
lret
dec
dec
dec
repz
jp
lret
mov
loop
pop
scas
sti
ss
stc
push
imul
mov
jle
sub
pop
add
pop
pushf
lret
ljmp
dec
xor
loop
xchg
inc
pop
pop
push
stos
int
mov
mov
mov
in
pop
sbb
seta
ficomps
mov
data16
and
xchg
testl
sub
lret
shll
clc
clc
imul
pop
push
ljmp
adc
xchg
jo
dec
ficomps
hlt
push
int3
sub
jno
xchg
jmp
hlt
pop
lret
mov
jne
scas
insl
xor
daa
pop
cmp
negl
cmp
jbe
rcll
and
lds
inc
scas
ja
or
push
gs
movq
inc
outsb
fsubrl
aaa
inc
sub
xchg
fcmovnu
xlat
jle
push
repnz
sar
ret
xchg
orb
or
icebp
mov
leave
cmpsl
push
mov
xchg
pop
push
mov
push
aaa
loopne
sbb
lods
mov
xor
out
aas
xchg
clc
subb
xor
outsl
xor
test
stc
dec
xor
inc
andl
jb
imul
dec
and
lret
add
fisubs
pusha
ja
lods
bound
xchg
inc
xor
out
xor
lea
fdivrl
pop
sub
jae
jne
mov
mov
mov
adc
hlt
daa
in
sub
fstps
inc
cld
jecxz
shrl
hlt
lahf
jmp
xor
or
out
aam
imul
hlt
jp
mov
xlat
xor
outsl
xchg
mov
in
mov
les
push
jp
pushl
ss
jle
movsl
push
call
xchg
jle
rorl
jnp
in
leave
xor
dec
sahf
and
stos
sbb
push
dec
es
rcll
mov
test
das
push
lret
jnp
scas
test
inc
loope
ja
loope
in
es
sbb
je
push
ljmp
sbb
rcrb
dec
jno
shrl
div
push
enter
movsl
pop
dec
mov
addr16
insl
ljmp
aaa
int
loop
xchg
inc
repz
out
push
lock
shll
cmp
dec
lods
inc
cmp
cli
fdivr
popf
sbb
inc
xor
fwait
pusha
add
stos
lods
push
dec
rcrb
pop
loop
loop
mov
sbb
mov
jp
fbld
lds
push
lds
mov
and
xlat
scas
push
xchg
jb
sbb
push
lds
fisubrl
add
xor
and
aad
call
xchg
inc
sub
shlb
popa
mov
addr16
pushf
push
xchg
or
xchg
dec
sbb
push
sti
pop
ret
mov
insl
xorl
xchg
lahf
mov
push
add
outsb
aas
mov
fwait
mov
or
xor
es
shlb
xlat
inc
pushf
pop
int3
fld
test
addl
or
js
cld
cld
sub
sbb
xchg
shlb
addr16
lea
pop
cltd
dec
cmpsb
aas
int
andb
mov
pop
iret
std
std
cwtl
int3
mov
inc
dec
popa
sub
mov
stc
xlat
shl
push
push
pop
and
adc
or
repz
sbb
sahf
mov
xor
inc
sbb
pop
and
lea
aad
sarl
push
or
ss
test
push
fsubr
int3
fs
popf
mov
push
lock
sbb
sub
pushf
jo
add
cmp
daa
push
and
mov
clc
inc
inc
adc
adc
sbb
pop
repz
add
inc
push
mov
leave
mov
push
popf
mov
cltd
cwtl
inc
mov
in
jbe
or
sbb
mov
pop
ret
xor
push
cli
adc
int
fisubs
sub
push
push
jp
mov
jno
mov
mov
hlt
cli
xor
push
and
pop
mov
and
das
adcl
dec
es
nop
xchg
push
inc
xlat
adc
add
cli
pop
mov
fdivl
jmp
fildll
adc
std
jge
jecxz
insb
testl
mov
aad
or
shlb
dec
arpl
xchg
aaa
adcb
and
repnz
movsl
mov
or
sbb
xlat
xor
push
dec
cmp
aam
scas
xchg
or
jge
push
ljmp
sbb
adc
cmpl
imul
jb
inc
mov
lcall
inc
sbb
jbe
clc
scas
add
sub
and
cmp
jecxz
xlat
xor
fidivl
test
test
loope
pushf
xchg
mov
pop
lahf
mov
pop
xor
mov
and
adc
jecxz
stc
std
cmpsl
inc
cld
fs
pop
aad
cmp
ljmp
pop
lods
hlt
mov
mov
mov
add
pushf
mov
jmp
adc
xor
pusha
dec
mov
test
push
add
aaa
sbb
and
xchg
psadbw
pop
push
jno
xchg
dec
push
stos
or
fildl
lds
dec
xchg
dec
mov
pop
mov
sbb
cwtl
inc
mov
pop
out
loop
xchg
shl
scas
push
pop
loope
popa
and
and
xchg
inc
bound
gs
xchg
mov
xlat
mov
pop
or
push
xchg
std
mov
cmp
repnz
ret
inc
dec
mov
sbbb
faddl
addr16
enter
arpl
fidivrl
inc
push
call
enter
jge
sbb
lods
xlat
addl
jns
sbbl
ret
push
sub
call
or
aaa
sub
shrb
xor
into
xchg
pop
inc
mov
test
outsl
jg
jge
ficoml
dec
cs
xor
jp
pop
out
and
int3
fcomps
and
xchg
faddl
and
mov
into
xor
xlat
push
cmpsl
in
mov
pop
push
sub
std
lea
mov
sarl
mov
sahf
push
lret
jae
adc
in
lds
mov
outsl
sub
call
mov
cmp
inc
mov
scas
jp
xchg
insb
jne
pop
and
fisubl
mov
fldcw
fbstp
or
and
ss
lea
insl
mov
xor
adcb
loope
sbb
pop
pusha
adc
shrd
fmull
cmpsb
push
test
pop
hlt
inc
sbb
jg
or
jne
lods
inc
dec
or
push
addb
sti
sbb
cmp
test
ret
or
in
sub
es
cmpsl
pop
ljmp
push
cmp
in
lods
push
cs
leave
dec
push
add
bound
inc
mov
sbb
push
hlt
mov
xor
ss
mov
in
pop
pop
jo
xchg
out
jle
scas
pop
imul
mov
cltd
and
sarl
adc
insl
jae
pushf
popa
inc
push
fwait
data16
lods
xchg
ror
lret
hlt
jmp
pop
lock
cmc
nop
insl
sub
repz
xor
dec
mov
xor
dec
test
mov
loope
push
add
idivl
sub
fisubrs
enter
or
in
cld
data16
testl
js
cs
jo
lods
and
dec
das
hlt
jp
mov
add
scas
adc
mov
xchg
or
xor
dec
push
push
arpl
adc
xor
test
mov
test
inc
xor
inc
and
add
cmpsl
in
loope
cltd
dec
xchg
call
jmp
jo
pushf
kandb
xor
push
test
jecxz
sbb
xchg
adc
mov
pop
xor
cwtl
add
movsl
cmpsl
adc
add
cmc
jg
add
mov
cs
mov
cmp
add
out
into
pop
addr16
loopne
mov
imul
pop
mov
jbe
sbb
jmp
sub
test
mov
orl
arpl
sbb
xlat
mov
pop
jmp
push
jp
fs
mov
jb
jg
mov
jmp
jbe
add
add
jl
cmp
outsl
fadds
pop
cmpsb
rorb
xchg
pop
fidivrl
push
cmp
add
popf
pushf
xchg
das
xchg
loop
fwait
inc
mov
mov
roll
loope
jno
out
cmp
test
lret
sbb
cmp
xchg
add
lods
inc
pop
jae
int3
push
fcomp
sub
cs
lea
shlb
ret
add
je
pop
ljmp
xchg
imul
add
in
lcall
inc
out
jo
fistps
mov
mov
xor
jl
or
cmpsl
pop
or
mov
lahf
jmp
ds
mov
xchg
mov
adc
xor
or
cmc
sbb
mov
in
mov
mov
mov
subl
xlat
sub
push
popf
fnstenv
cld
dec
lret
fisubl
fnstcw
sbbl
mov
cmpsb
adc
icebp
sub
inc
es
shlb
out
mov
negb
cld
cmp
xor
xlat
xor
mov
jae
popf
addl
cltd
fwait
sbb
sub
jns
jb
arpl
test
rorl
mov
std
subb
jnp
std
mov
mov
or
in
in
add
test
ret
lcall
ljmp
popa
lock
shl
cmp
pop
outsl
pop
xor
into
mov
mov
xchg
arpl
lret
out
lods
scas
and
ss
xchg
adc
mov
lahf
mov
js
xchg
mov
out
mov
dec
and
jne
lock
scas
sbb
cmp
mov
and
pop
fstl
mov
mov
or
inc
jge
into
data16
ja
dec
popa
mov
dec
lds
pusha
cmpsl
scas
inc
imul
mov
lods
ffree
push
ljmp
aam
je
mov
das
testb
mov
mov
adc
into
stc
cwtl
ja
dec
jmp
jnp
popa
in
ljmp
ret
mov
adc
std
xor
add
push
or
shrb
xchg
lret
lea
js,pn
pop
fs
negl
or
rep
out
adc
sbb
lods
add
dec
sbb
pop
pop
ljmp
dec
push
mov
cli
int
push
mov
popf
add
popf
xchg
notl
sahf
pop
push
dec
int3
push
jge
ret
cmp
mov
out
mov
jle
pop
clc
mov
loope
aas
lock
pop
mov
mov
push
outsl
mov
in
or
sahf
sbb
cmpsb
dec
cltd
pushf
xchg
bound
sub
cltd
scas
int
push
xchg
lahf
mov
imul
cmp
repz
mov
popa
mov
test
xchg
stos
push
sarb
fsubs
xchg
mov
sub
add
add
je
and
dec
test
ljmp
mov
add
aaa
dec
cmp
jns
loopne
lcall
ret
dec
js
jnp
decb
jle
jb
cmpsb
enter
jae
inc
mov
mov
popa
dec
sbb
icebp
mov
push
test
int
loope
sbbl
test
in
pop
xchg
repz
sbb
and
ret
imull
ljmp
xlat
imul
ja
das
sub
sbb
dec
add
testl
mov
pop
inc
data16
cli
inc
inc
cmpsl
pop
mov
add
cmc
dec
loopne
lods
pop
add
insl
mov
adc
enter
inc
mov
adc
mov
aam
imul
popa
lock
popf
sti
inc
scas
daa
cmp
adc
fcompl
mov
cmpl
mov
cmpsl
mov
xor
stos
mov
into
jno
leave
pushf
adc
movsb
adc
sarl
mov
push
aam
and
sti
push
enter
push
xchg
and
clc
sub
imul
out
dec
and
lock
stos
cmp
fimuls
cmp
mov
ljmp
loope
add
jae
gs
out
and
add
and
aas
jo
push
mov
sbb
adc
jae
cmp
std
test
imull
jp
lods
stos
xlat
ljmp
cmp
dec
push
jge
inc
push
pop
jle
das
jo
fs
pop
jb
push
fwait
or
les
mov
lea
or
and
imul
mov
dec
dec
int
in
mov
pop
lock
inc
mov
gs
cli
mov
dec
mov
out
mull
fidivrl
sub
mov
call
mov
mov
cmc
pop
imul
push
and
jno
xchg
add
pop
mov
push
loope
sbb
scas
adc
xchg
mul
out
aaa
jle
ret
lock
shlb
inc
sub
jae
mov
lods
cmp
mov
iret
imul
mov
push
cmp
sahf
pop
xchg
cmpsb
cmc
fdivrl
out
pop
pop
and
icebp
cmp
mov
xlat
sub
mov
jle
aas
jnp
pusha
push
xor
cmpl
xor
cmpsb
and
mov
insb
outsl
sbb
push
js
cmp
into
outsb
mov
ret
mov
lock
add
push
mov
movsb
insb
cli
or
jb
xlat
pop
fs
sahf
mov
sub
cwtl
bound
xor
stos
jnp
es
sub
dec
xor
sbb
mov
adc
cmp
lret
in
sarb
lret
stc
addr16
inc
or
xor
sbb
xchg
inc
stos
dec
leave
lret
or
jne
cmp
mov
inc
mov
cmp
xor
pop
sub
xor
mov
sarb
pop
mov
das
adc
mov
bound
divb
lods
ljmp
sbb
mov
fisttpl
inc
jmp
mov
mov
dec
aam
js
pop
ljmp
leave
mov
sti
jp
or
das
sbb
out
cs
push
fwait
cwtl
lret
adc
or
push
push
mov
sti
incb
popf
addr16
mov
mov
inc
xor
mov
shr
xor
push
orb
xchg
negl
push
sub
cmp
lcall
scas
jne
dec
fdivl
sbb
fsubrs
nop
repnz
and
adc
shlb
xchg
test
pop
xor
mov
in
dec
push
jb
fdivrs
je
adc
scas
cmp
add
sub
sbb
inc
mov
sbb
fs
repz
lea
or
dec
gs
outsl
enter
insb
fmull
xor
popf
leave
js
orl
mov
lcall
ljmp
sub
jge
aas
sbb
aam
inc
push
mov
xchg
mov
xchg
xchg
pop
mov
andl
xor
mov
mov
xor
test
mov
out
inc
iret
jg
jg
inc
mov
jnp
and
and
xlat
into
push
imul
or
imul
sbb
movsb
test
pop
call
loopne
cmpsb
addb
les
les
jo
mov
pop
js
xchg
mov
push
xchg
lret
fisubl
cmp
insb
add
mov
imul
cltd
aaa
daa
jb
push
xlat
inc
popa
cmc
daa
sbbb
in
shll
push
fs
mov
test
and
push
subl
add
shl
neg
fistl
xchg
push
leave
sbb
pop
mov
lret
psubsw
cmp
mov
imul
fisttpl
insl
pop
in
shll
ljmp
add
add
add
orl
daa
pop
mov
mov
aaa
movsb
xchg
mov
test
into
daa
mov
sbb
push
lea
hlt
pop
adc
pop
mov
out
roll
or
mov
mov
aas
cmp
fildl
movsl
jbe
xor
jo
mov
mov
dec
out
dec
xor
sbb
fdivs
sub
popa
roll
faddl
add
aaa
loopne
pop
outsl
inc
bound
mov
shlb
and
arpl
add
mov
xorl
stc
push
repnz
rcr
das
mov
push
pop
mov
movsb
pop
or
loope
sub
pop
loop
pop
or
xchg
jp
arpl
shll
lret
inc
mov
call
in
out
adc
roll
hlt
xor
loopne
insb
call
or
aaa
add
jae
jb
push
jbe
gs
mov
aas
pushf
jmp
push
clc
lds
aaa
scas
push
push
sbb
mov
lds
enter
adc
add
imul
data16
rol
pushf
add
out
jg
in
js
clc
iret
sub
ds
pop
negb
pop
sbb
mov
out
mov
rcrl
pop
adc
repnz
adc
cli
stos
pop
inc
xchg
insb
fnstenv
jne
adc
insb
jmp
scas
out
sub
lret
ret
add
jl
add
cmp
int
mov
jge
pop
add
scas
dec
adc
js
adc
xor
push
xor
jecxz
xor
mulb
mov
cmp
cmp
jo
mov
mov
mov
stos
shld
xchg
hlt
stos
jle
mov
mov
enter
divb
les
aad
movsl
or
int
loop
mov
test
mov
cmp
fisubs
sub
mov
sub
imul
mov
dec
mov
stc
repnz
fidivrs
pop
jl
sbb
daa
mov
push
mov
mov
ret
xor
dec
fscale
jecxz
fmull
sahf
popa
movsl
aam
or
loopne
lcall
in
pushf
mov
pop
sbbl
loopne
jp
mull
jg
std
ret
sbb
xor
cltd
ss
dec
cmp
jmp
push
xchg
cld
mov
in
xchg
or
jns
stos
das
xchg
push
add
add
mov
or
xor
sub
xchg
inc
jae
js
inc
adc
in
repz
test
addb
shl
and
fcoml
pop
add
std
fidivrl
adc
push
test
or
stos
add
arpl
popl
pusha
push
push
in
sbb
punpckhdq
into
pop
inc
xchg
stos
call
mov
xlat
ret
int3
sub
or
push
jno
push
dec
sahf
dec
xlat
jne
cmp
lds
pop
xchg
in
in
sbb
movsb
fsubp
jl
data16
pop
rcll
mov
icebp
xchg
adc
rcll
xchg
dec
pop
ficoml
mov
xor
xchg
pop
mov
insl
test
lahf
mov
jne
push
pop
adc
cltd
dec
into
stos
adc
dec
std
test
sbb
sbb
xchg
adc
fdivs
xchg
sbb
pusha
and
jns
jne
mov
mov
xchg
sub
mov
inc
lret
sbb
outsl
mov
xchg
into
cli
jmp
xchg
mov
jecxz
jp
outsb
inc
cli
adc
rcll
xlat
out
rcr
cmp
xchg
test
stc
mov
in
jno
pop
lret
stos
jbe
int3
mov
shlb
cmp
dec
aas
or
push
repz
pop
shrl
addr16
hlt
add
sbb
xchg
inc
in
into
push
lods
inc
fmulp
xchg
xchg
lea
and
fabs
push
bnd
xchg
movsl
jl
sub
jmp
mov
pushf
add
sbbl
push
mov
movsl
pop
outsl
out
mov
in
mov
fistpll
dec
mov
fucom
fdecstp
push
mov
inc
jecxz
repz
mov
stc
lret
push
adc
leave
mov
fs
icebp
ss
add
pop
xchg
repz
popf
sub
fistps
mov
push
mov
ret
xor
push
out
test
scas
les
mov
outsl
fcoml
or
sbb
pop
jge
data16
jb
or
xor
push
xor
jnp
leave
mov
daa
push
jbe
inc
mov
popa
mov
and
fdivrl
daa
aad
lret
dec
or
aad
jb
fidivl
lods
pop
cmp
ret
sbb
lret
dec
outsl
mov
jge
pop
out
add
stos
ret
jbe
gs
sub
adc
pop
imul
pop
or
int3
enter
push
mov
cmpsl
xchg
outsl
xchg
and
out
sbb
out
jmp
and
inc
sbb
pop
mov
inc
out
mov
xlat
mov
rolb
dec
daa
mov
callw
rcr
faddp
dec
mov
sub
mov
leave
ds
mov
xor
loope
fidivs
xor
sub
sub
sbb
sbb
add
addl
fwait
pop
sbb
adc
sub
push
lea
jmp
sub
mov
aad
push
andb
in
mov
test
stc
scas
sub
repz
and
sahf
dec
shrl
push
dec
rcll
nop
sbb
sarl
jge
fcmovnbe
pop
mov
add
jecxz
sub
xchg
pushf
aad
negb
mov
out
mov
xor
test
stc
mov
flds
jne
pop
push
xor
push
bound
mov
pop
js
icebp
jge
std
pop
cli
add
mov
sub
jnp
fcoms
fisubs
or
inc
push
ljmp
in
bound
leave
fnstcw
and
sub
ret
pop
xchg
inc
cmp
pop
push
test
jg
clc
aas
loope
sbb
jae
repnz
sahf
ljmp
sbb
sti
sub
popa
inc
cmpb
sbb
lret
jmp
push
mov
mov
in
into
mulb
fiaddl
adc
ret
xchg
stos
rcrl
pusha
and
sub
xchg
jmp
out
or
cmp
sub
out
pop
or
into
fwait
ret
lret
jp
rorl
adc
jg
sbb
dec
pop
je
lock
xchg
insb
lods
push
or
cmp
repnz
mulb
adc
mov
add
sub
cltd
and
mov
test
call
jp
mov
xchg
push
outsb
gs
loope
mov
fdivl
ja
cs
mov
or
add
and
add
cmp
push
daa
mov
sbb
fmull
test
sti
push
cli
int3
add
ret
jle
mov
movsl
add
push
mov
lea
pop
dec
xor
pop
hlt
stos
push
mov
mov
fistps
mov
aam
push
xor
int3
daa
ret
hlt
jns
loopne
pop
lret
ror
sbb
je
or
fisubrl
sarb
js
dec
adc
and
sbb
xchg
insl
mov
fwait
mov
mov
repnz
mov
xor
popf
int3
inc
jg
jbe
stc
test
lock
xchg
push
inc
aad
sbb
mov
xor
inc
jmp
clc
movb
xchg
mov
test
pop
jecxz
xor
inc
call
xchg
xor
imul
mov
mov
xchg
add
cmp
pop
cmp
popf
inc
faddl
sbb
rclb
fwait
mov
cmc
xor
xor
dec
pusha
loop
out
insl
dec
lret
filds
insl
cmpb
xchg
mov
dec
ret
and
je
or
push
das
pop
pop
lea
jle
xchg
push
std
shrl
mov
fisttpl
inc
loopne
stos
or
inc
repnz
xchg
push
dec
mov
int
testb
sub
shlb
jg
inc
shr
es
in
rcrl
mov
sub
cmpl
jmp
adc
pop
movsb
xchg
sub
outsb
pop
pop
jne
mov
adc
pop
ret
ja
xorb
adc
push
jno
lahf
xor
mov
ds
adc
xchg
cltd
mov
jle
test
adc
gs
test
sar
aas
das
push
push
nop
aad
addr16
aas
xor
mov
jge
sub
sub
and
xor
or
repz
cmc
scas
add
pop
aaa
dec
test
lcall
add
int3
inc
leave
mov
mov
jmp
inc
jge
movl
divl
out
xchg
adc
jne
inc
jo
popa
mov
rolb
mov
popf
enter
ja
or
add
inc
mov
addr16
adc
ja
push
sar
or
add
sub
xor
pop
and
cmp
scas
lea
roll
syscall
add
xor
jmp
inc
jnp
xor
adc
xor
lret
lahf
pop
push
inc
jle
ds
pop
fwait
cwtl
stc
fwait
movsl
jb
add
hlt
mov
cmpsb
xchg
jno
mov
xor
and
repnz
cmpb
mov
add
aam
or
imul
push
sub
movsb
inc
int3
and
test
pop
cmp
fldl
pop
ret
hlt
cmpsb
jmp
sub
shrl
imul
test
add
adc
inc
dec
nop
enter
push
mov
fiaddl
dec
inc
fsubrs
fisttpl
inc
mov
sub
adc
cmp
xchg
addr16
pop
icebp
rolb
sahf
test
ficoml
push
cmc
or
pop
cmp
xor
in
jo
mov
mov
cmp
out
les
push
mov
pop
xor
add
mov
push
lock
adc
in
inc
add
xchg
ficoms
sbb
and
subb
dec
jns
mov
lcall
dec
hlt
and
lcall
inc
nop
popa
rcrl
jp
arpl
je
pusha
aas
add
cmp
dec
out
jg
xor
hlt
stc
int3
add
pop
sarl
rorb
lods
daa
mov
pushf
repz
out
cltd
repnz
cmp
or
aaa
scas
mov
push
cmp
dec
into
neg
xchg
inc
popf
cmp
add
dec
pop
outsl
dec
mov
push
test
dec
mov
jp
outsl
xchg
int
mov
lds
pop
js
repnz
sbb
ja
push
lock
lods
push
cmp
test
scas
jno
iret
scas
lret
ret
in
pushf
test
pop
jnp
and
je,pn
xchg
pop
jns
mov
sub
inc
mov
dec
jae
push
cmc
jbe
cmp
filds
sub
sbbb
stos
test
dec
mov
aad
loop
jmp
add
lret
sahf
or
mov
and
test
dec
icebp
negl
mov
pusha
cld
daa
adc
out
fcompl
int3
mov
lds
in
loope
les
movsl
loopne
adc
outsb
rcrl
add
sub
cmp
daa
adc
pop
sbb
push
push
jns
jle
aaa
mov
xor
and
mov
pop
mov
push
and
xchg
pop
je
dec
stc
xchg
mov
dec
sti
iret
das
mov
int3
jp
sbb
fisubl
add
inc
mov
sbb
imul
xchg
mov
imul
or
mov
pop
lret
dec
rclb
xor
pop
lret
or
fcmovnbe
xchg
orl
data16
pop
in
jge
inc
or
imul
push
lret
popf
sub
push
imul
in
dec
rcll
call
dec
shlb
xchg
xchg
dec
in
mov
mov
js
xor
and
sbb
filds
addr16
fcom
andb
mov
xchg
adc
pop
push
out
push
adc
xor
pop
xor
hlt
jnp
iret
lds
fistps
cmp
add
inc
pop
pop
pusha
int
cmp
sub
push
orl
and
fldenv
mov
dec
dec
sahf
dec
lret
mov
jg
sar
add
cld
movsb
add
js
jecxz
stos
cli
or
pushl
out
sub
loopne
pop
cltd
shll
jnp
hlt
rclb
sbbl
xchg
mov
sub
and
push
dec
mov
neg
stc
add
cmp
add
mov
rclb
push
sbb
mov
cmp
stc
lret
cld
cld
lahf
mulps
push
sti
xchg
scas
dec
stc
adc
inc
jl
and
orl
mov
sbb
out
arpl
jns
add
cmp
fstpt
int3
mov
cmp
adc
sbb
fucomi
adc
aad
shrl
xchg
push
mov
mov
iretw
cmpsb
fisttpll
les
bound
scas
in
dec
das
jbe
pushw
imul
loopne
push
inc
call
dec
pop
mov
test
sbb
mov
movsl
push
adc
push
fistl
xchg
js
insb
push
add
mov
cmp
jg
lds
mov
add
aam
mov
add
cltd
xchg
inc
cli
pop
stc
pop
dec
mov
mov
in
adc
xchg
movd
aad
pop
leave
lret
fcmovne
push
fdivrs
movsl
cmp
mov
loope
push
out
mov
mul
lds
ret
andb
int3
push
ss
mov
in
in
out
mov
shll
fstp
push
das
cwtl
mov
shll
fbld
cmp
jne
add
out
xchg
cmp
and
jp
add
xor
ret
mov
push
lds
dec
ret
scas
adc
xor
enter
jb
add
xor
and
scas
cmp
and
inc
fs
test
dec
add
pop
add
xchg
cmc
xchg
or
aam
add
dec
xchg
inc
cwtl
dec
add
inc
cmp
jne
lret
mov
and
xor
fwait
mov
jnp
and
sub
ret
inc
lret
std
push
lcall
test
clc
cmp
fs
jecxz
inc
ret
imul
inc
enter
loop
lret
lods
rcrl
into
mov
lret
pop
xchg
decb
mov
popa
cmp
cli
push
repnz
jae
cmp
dec
xchg
push
xchg
push
daa
fwait
lret
pop
out
push
push
push
add
jns
int3
xchg
sub
push
xchg
scas
inc
add
or
sub
popf
lea
int
inc
xchg
lret
xchg
aas
mov
pusha
in
icebp
push
cmpsl
or
pop
je
xchg
stos
add
or
push
clc
mov
cltd
pop
fcmovnb
and
push
jl
das
mov
inc
mov
jnp
cld
repz
fwait
jae
xchg
insl
popf
shrb
mov
jo
jmp
leave
xor
in
push
push
fsubrl
lods
scas
js
ds
and
out
int3
shlb
aaa
loopne
sub
shl
dec
xchg
stos
jns
or
pop
loopne
add
xchg
pusha
popa
test
push
lods
pushl
insb
stos
jnp
pop
orb
call
std
cmpsl
leave
call
ret
mov
mov
xor
inc
push
jns
and
daa
stos
and
fisttps
xor
enter
or
jae
dec
or
add
cmp
call
mov
xor
test
push
and
ret
dec
mov
call
jo
mov
dec
scas
push
push
aas
cmp
inc
pop
inc
mov
xchg
sti
stc
xchg
and
push
cli
adc
mov
fwait
dec
mov
negl
xor
shll
mov
fwait
and
std
shll
aam
ret
and
int3
or
fidivrl
test
pusha
mov
stc
aam
push
mov
sbb
dec
movsl
dec
and
test
cli
xor
xchg
nop
mov
loop
adc
fwait
cmc
sahf
leave
xlat
xor
cmc
hlt
pop
negb
sub
sbb
cltd
xchg
add
scas
cmp
pushf
or
push
mov
sub
push
mov
xchg
lret
jb
shll
mov
addr16
rorb
call
jmp
das
js
and
push
gs
and
int3
inc
hlt
pop
cmp
lcall
jl
cwtl
pop
mov
cmpsb
pop
js
pop
je
ror
clc
adc
push
outsb
das
adc
xorl
clc
push
cmp
mov
ret
insb
push
dec
adc
adc
dec
in
mov
mov
dec
jae
xor
xor
dec
outsl
pop
pop
sti
sbb
icebp
nop
mov
movsl
fcomps
jns
jge
mov
cmpl
push
hlt
int3
loopne
mov
gs
rorl
nop
cmp
pushf
xor
mov
lds
test
fcoms
add
mov
pop
adcb
xchg
das
out
insl
popa
andb
add
rcr
stos
jmp
dec
stc
pop
cltd
adc
test
xor
clc
or
out
arpl
insb
nop
sbb
negl
pop
xchg
jns
lahf
jl
test
and
mov
popa
stos
nop
jl
cmp
shll
dec
adc
mov
int
movsl
stos
test
push
mov
cli
shrb
testb
cmp
sub
push
fwait
jns
aam
sbb
bound
and
and
test
or
adc
sahf
dec
and
inc
mov
jae
test
js
xor
cmp
cmp
pusha
lret
fsubl
sbb
int3
adc
pushf
push
das
rolb
push
out
loopne
mov
mov
mov
sub
inc
std
rorb
popa
cmp
add
ljmp
push
and
int3
js
mov
mov
stc
xchg
inc
lock
cmpb
cmp
jo
scas
inc
out
inc
dec
jge
adc
cld
enter
mov
and
aaa
pop
popa
cmp
xlat
fiadds
or
addl
shll
cmp
mov
nop
es
shlb
sbb
jecxz
cli
aas
pop
shrl
je
mov
clc
add
pop
jle
loope
xchg
cmp
cmp
sbb
pusha
in
rorb
lds
sub
shrb
xor
fidivrs
divb
pop
ja
mov
and
and
xor
in
push
pushf
pop
add
mov
jno
ficoml
jecxz
fs
and
out
inc
sbb
into
call
ret
stos
mov
sub
dec
rcrl
test
daa
bound
jno
or
push
mov
inc
loop
scas
aas
ret
add
cmpl
mov
insl
cmc
shll
or
adc
and
xchg
push
jns
pop
fwait
les
test
mov
cwtl
rorl
push
and
mov
add
pop
or
cli
xor
mov
ud0
sbb
push
lret
add
fisubl
pop
inc
fadd
adc
scas
repz
jns
cli
dec
cmpsb
shrl
mov
inc
adc
jnp
ficoms
push
js
pop
xchg
pop
mov
test
mov
insl
jno
lock
push
cmp
rcrb
dec
cmpb
jb
andb
sbb
je
dec
pcmpeqb
pop
scas
adc
in
push
mov
cmp
shr
or
cltd
jg
jae
enter
xchg
sbb
sarl
mov
dec
pusha
mov
mov
cmp
mov
xor
pusha
pop
sbb
cmp
lods
xlat
mov
pop
pop
iret
fsub
cli
cs
pop
lcall
push
xor
outsb
in
pop
fwait
iret
push
adc
imul
mov
into
test
lcall
in
imul
add
pop
adc
xor
idivl
pop
stos
popf
fs
sub
shr
scas
pusha
andl
cmp
add
sub
cmp
outsb
mov
fsts
inc
or
fldcw
cmp
cmp
xchg
dec
cmp
lock
rcrl
xchg
xchg
outsl
test
sub
and
or
sub
mov
xor
mov
lea
sub
xlat
lods
lahf
std
clc
enter
lea
test
mov
daa
dec
xor
mov
inc
mov
or
push
cltd
and
leave
sbb
sbb
mov
je
cmpb
mov
inc
arpl
out
pushf
or
mov
push
or
cmp
and
out
jae
sbb
ja
sbb
or
mov
lea
rcl
xchg
jl
ljmp
js
pop
out
mov
scas
xchg
lds
mov
cmp
xchg
jns
cmp
xchg
xchg
push
outsb
push
sbb
ret
jle
pushf
xor
dec
jge
int3
fists
sbb
sbb
in
in
negl
aaa
sbb
xchg
jl
pop
push
cmpl
adc
scas
dec
mov
loopne
jae
xor
imul
xor
pop
cs
adc
push
int3
es
popf
sahf
daa
iret
test
add
addl
pop
push
clc
std
xlat
test
sahf
sti
inc
outsb
adc
mov
js
int3
dec
int3
out
aas
xor
jo
adc
inc
mov
adc
xchg
jle
fidivrl
lock
jo
lods
push
cld
cli
pop
imul
xor
cmc
dec
and
imul
icebp
mulb
lea
fimull
xor
sub
pop
iret
popa
jle
shr
xlat
mov
mov
sbb
mov
xor
push
mov
cs
cmp
cmp
icebp
adc
mov
icebp
mov
int3
jl
xchg
xchg
and
aad
and
mov
in
cmp
sbb
lret
lahf
mov
pop
jo
mov
fwait
stos
and
movsl
add
add
mov
clc
xchg
loop
fwait
inc
sbb
dec
adc
xchg
cli
push
sub
stc
cmp
xorb
mov
cli
mov
loop
jne
test
ss
cmp
and
mov
xlat
pop
push
jae
push
xor
cmp
rcr
sbb
mov
mov
jp
sarb
into
sub
icebp
arpl
inc
mov
sbbl
jge
or
push
adc
fsubrs
mov
jno
stos
xchg
inc
leave
and
sti
xchg
mov
add
imul
lret
mov
pop
pop
bswap
sarl
rorl
mov
and
je
jb
repnz
int
adc
fldcw
sbb
std
ret
mov
inc
sbb
xchg
movsb
lahf
mov
leave
push
dec
mov
mov
adc
js
xor
pop
sub
or
mov
push
sub
and
cwtl
jnp
out
xchg
lret
cmpsb
inc
adcl
jnp
add
sbb
sbb
rclb
push
in
push
push
push
in
imul
mov
lcall
in
or
mov
mov
bound
daa
lret
notb
push
mov
jl
mov
into
xchg
shll
repnz
jne
in
loopne
iret
aaa
push
mov
pop
cmp
sbb
sbb
cmp
mov
adc
or
testb
xor
adc
dec
stos
inc
xchg
movntq
jb
popa
cmpsl
sbb
xchg
imul
or
lahf
insb
push
dec
adc
stc
dec
stos
sbb
mov
mov
lahf
loopne
out
or
mov
mov
icebp
sbbb
sub
outsb
cltd
movsl
int3
fcomip
movsl
push
dec
sbb
mov
ss
icebp
inc
xlat
jns
fisubl
insb
jns
mov
stos
and
gs
shr
add
aam
adc
pusha
adc
push
pop
inc
adc
jle
dec
out
sar
iret
xor
iret
sbb
int3
gs
cmpsb
insb
cmpsb
push
das
daa
pop
jecxz
xchg
dec
xchg
push
es
dec
aaa
xchg
idivl
mov
or
neg
mov
inc
les
mov
add
lahf
add
jne
lcall
jns
adc
lea
dec
add
push
sbb
jmp
jae
inc
push
cwtl
flds
pop
sub
cmp
mov
sbb
aam
fucomi
ja
test
mov
add
xchg
pusha
iret
adc
call
and
jbe
sbb
stos
or
fstpl
test
pop
pop
negb
les
imul
add
imul
ret
pop
push
int
movsb
and
mov
in
jecxz
inc
and
lea
ss
pop
insb
mov
test
mov
cld
push
jg
xorb
xchg
out
mov
arpl
mov
add
mov
stc
fmull
xchg
insb
jo
xor
ja
jbe
pop
mov
loopne
testb
xchg
mov
pusha
stc
sub
adc
sbb
add
push
lods
jecxz
mov
mov
inc
mov
sbb
pop
movsb
outsl
insb
dec
fists
xor
negb
sub
cmp
imul
inc
mov
les
push
push
scas
or
dec
sbb
xchg
add
shrb
lock
mov
inc
shrl
xchg
cltd
inc
lret
arpl
mov
insb
add
xchg
movsl
xchg
sarl
pushf
sarl
push
sub
mov
inc
test
sbb
jnp
cmp
push
and
test
in
jmp
ret
lahf
shll
pop
sub
jnp
mov
cmp
fsubrl
imul
mov
mov
xchg
push
test
in
aad
jb
daa
sbb
push
or
or
or
mov
dec
call
lret
aam
xor
pop
sub
cmp
inc
adc
shrb
stos
cmp
rorb
jno
dec
int
in
lcall
pusha
jne
int
xchg
icebp
push
dec
xchg
inc
enter
sub
mov
int3
mov
sbb
arpl
pop
add
out
jo
or
mov
fldcw
mov
imul
mov
adc
mov
sahf
push
jb
push
lcall
hlt
cmp
push
jnp
adc
sub
cltd
inc
add
mov
rolb
fs
or
inc
imul
push
xchg
inc
enter
pop
mov
cmp
out
or
out
shl
imul
repz
movsl
and
sbbb
call
stos
out
imul
aas
pop
sahf
and
loope
rcrb
xor
lret
add
sub
mov
in
das
and
jae
ss
and
or
shl
cld
inc
pcmpgtd
xchg
imul
xchg
aad
loope
scas
test
cmp
imul
test
stos
inc
je
rclb
jmp
cmp
or
aaa
mulb
xlat
hlt
adc
pop
sahf
push
movsb
jns,pn
jecxz
shlb
ss
cmp
xor
daa
iret
dec
xor
orl
dec
dec
jns
mov
lahf
adc
xchg
adc
mov
jno
mov
scas
clc
int
mov
icebp
or
fcmovb
cmp
orb
push
dec
icebp
mov
test
xchg
push
pop
addr16
jp
jp
loope
in
pop
pop
in
loop
mov
cmp
add
stos
inc
sbb
pushf
stos
ja
inc
jnp
lahf
sub
aas
fisubrl
aas
jg
adc
push
sbb
sbb
xchg
inc
push
mov
inc
fildl
or
aaa
mov
test
mov
mov
mov
scas
xchg
aam
clc
sub
add
pop
dec
pop
aam
pop
add
sub
aam
sub
or
xor
adc
je
sbb
or
xchg
test
arpl
mov
sub
push
jp
dec
arpl
int
xor
inc
enter
xchg
inc
pop
jle
fmull
inc
in
adc
imul
dec
rorl
in
sub
push
lods
inc
popa
mov
addr16
testl
je
out
out
int
xchg
xor
xchg
mov
inc
clc
mov
xchg
and
decl
aam
xchg
ret
jae
mov
cmp
shr
jo
addr16
cmc
cmp
cmp
sub
or
mov
pop
push
loop
outsl
dec
mov
jmp
daa
adc
ljmp
adc
add
xchg
mov
or
jle
ffree
adc
cmpsb
jno
ficoms
sbb
inc
mov
sarb
clc
xor
xchg
push
ret
hlt
push
imul
out
sub
pushf
cs
or
sbbl
mov
pop
sub
cmp
int3
and
je
add
push
ds
cmpb
jno
push
inc
push
fistpl
xor
or
loop
arpl
fdivs
inc
push
push
mov
lock
adc
fld
les
adcb
jne
xor
mov
xor
aad
mov
pop
imul
cli
rclb
pop
mov
sti
push
stos
pusha
icebp
mov
push
fcoml
push
lret
into
mov
inc
dec
jle
fcomps
pop
jmp
ljmp
sarb
pop
adc
aad
push
fbstp
dec
movl
xor
sbb
and
fistps
or
fadd
cltd
pop
inc
inc
fmuls
jbe
cmp
pushf
nop
mov
stos
mov
mov
adc
sbb
add
ret
mov
in
in
mov
scas
notl
loop
mov
or
pop
and
push
lcall
xor
movsb
push
mov
into
mov
add
xlat
jle
mov
inc
dec
aam
int
jmp
xchg
sub
xchg
adc
js
das
fwait
int3
lock
sbb
cmp
data16
adc
popw
sbb
out
cmp
icebp
xor
bound
jne
cmp
mov
cmpsl
push
mov
insb
arpl
movsl
mov
xor
lods
cld
insb
rcl
lea
add
mov
jo
test
movups
adc
inc
mov
std
push
outsb
mov
ret
adc
insl
sbb
mov
dec
cmp
jl
xchg
es
jge
or
es
sub
dec
xchg
lock
and
mov
sbb
xchg
cmp
xor
jle
pop
or
mulb
fdiv
mov
cmp
add
loopne
xchg
xlat
repz
xor
movsb
add
ja
jnp
mov
xor
repz
jge
out
loopne
pop
jecxz
cwtl
adc
in
mov
pop
sub
inc
mov
cmp
xorl
and
sbb
out
into
popa
or
sbb
mov
dec
jns
fcoml
and
in
cmp
jle
insl
js
int
dec
pop
jne
or
or
cmpsb
or
pusha
test
push
in
les
ds
and
jns
stc
sbb
lods
dec
clc
or
jl
mov
mov
pop
or
xor
and
lret
adc
int
pop
pusha
stos
mov
das
dec
jno
and
dec
fldl
jecxz
jg
test
pop
cmp
or
mov
les
shlb
outsb
push
cmp
pop
bound
cmp
mov
xchg
and
jno
or
inc
leave
sbb
pop
add
sbb
gs
jp
arpl
movsl
ja
sub
inc
imul
subl
pop
sbb
dec
pop
lods
mov
push
xor
cmpl
popa
sub
sar
adcb
cmp
mov
out
dec
or
shr
sti
rol
or
pop
nop
inc
xchg
inc
add
push
les
sbb
shlb
add
fistpl
and
mov
adc
pop
cmpsl
sub
pop
pop
push
xor
sub
jno
cltd
sbb
xor
sahf
pop
fldt
xchg
sbb
lock
mov
and
adc
stos
inc
push
xchg
repnz
mov
or
pop
lods
add
xchg
ss
and
mov
mov
xchg
adc
insl
icebp
xchg
repz
into
mov
adcb
mov
fstpl
dec
sbb
mov
repnz
xchg
or
cmpsl
insb
sbb
xor
sti
fld
add
popf
out
sub
in
pushf
inc
cs
and
push
or
pushf
adc
in
cmp
ja
shlb
aaa
mov
and
dec
adc
add
jge
test
or
push
leave
movsl
xor
orl
fmulp
daa
lods
pop
out
iret
mov
pusha
popl
mov
sbb
push
xchg
shrl
push
dec
es
in
xlat
popa
pop
insb
ds
loopne
cmpsb
inc
dec
scas
mov
mov
test
xchg
cltd
lds
sbb
test
and
clc
or
into
jge
daa
data16
xor
sbb
sub
push
ja
sub
daa
pop
les
mov
in
and
xor
adc
xchg
lret
lret
sbb
jmp
int3
loopne
sub
pop
pop
das
lock
lret
or
xor
and
push
mov
push
roll
inc
fists
sbb
sub
imul
int
push
clc
add
fwait
dec
pushf
pop
out
fnstsw
pop
xchg
cltd
cmp
pop
xchg
loope
mov
insl
mov
pushf
cmpsl
mov
cld
hlt
shlb
mov
sbb
mov
mov
xor
test
mov
insl
lods
xchg
mov
les
and
dec
cmpl
xchg
lods
aaa
mov
fdivrs
jecxz
xchg
loope
mov
sub
mov
sbb
imull
lods
call
rol
decb
xchg
lea
stos
stos
mov
pop
imul
add
pop
adc
mov
jo
fsubrl
orb
out
dec
sub
mov
std
adc
mov
aam
mov
jecxz
add
movl
mov
and
insb
scas
push
sbb
adc
jb
xchg
mov
das
mov
stos
mov
test
adc
clc
sub
popa
test
jae
sbb
aaa
mov
cli
cmpb
sahf
and
mov
cmc
cmp
push
xor
cmp
sub
out
sbb
bound
into
ljmp
mov
add
lahf
aaa
repz
insb
jns
fnstsw
mov
stos
sbb
es
aad
sahf
test
les
adc
cmp
lret
push
inc
or
inc
jge,pn
dec
fsubrl
ret
jno
dec
xchg
call
jnp
xlat
sahf
and
ret
xorb
or
loopne
mov
lret
mov
loopne
addr16
inc
aas
xchg
pusha
negb
sub
stos
insb
shrl
push
insl
ss
mov
lock
mov
sbb
xchg
fwait
mov
or
pusha
adcb
mull
test
out
cmp
sbb
jno
rcr
push
stos
jno
das
shrb
scas
xor
xlat
mov
jecxz
xor
mov
stc
test
inc
xor
add
mov
repz
or
mov
lock
push
movsb
fwait
mov
test
fisttpl
push
jg
adc
xchg
dec
lods
jno
cmc
clc
out
out
mov
xchg
cwtl
push
jbe
insl
movsl
scas
mov
and
ljmp
mov
mov
push
jns
test
sbb
flds
dec
test
pop
adc
xlat
push
outsl
pop
mov
loope
add
and
in
jp
es
xorb
mov
adcb
insb
adc
push
push
xor
lcall
dec
mov
loopne
sbb
arpl
sbb
orl
pop
cld
add
inc
rcrb
jp
mov
out
or
pop
mov
das
mov
xor
add
pop
arpl
xor
fwait
jns
jbe
jo
out
or
pushf
pop
mov
filds
outsl
jmp
pusha
fcoms
pop
cld
cwtl
inc
mov
mov
push
iret
call
clc
adc
mov
mov
stos
push
scas
push
ja
sub
mov
ds
insl
andb
fsubs
movsb
sbb
sahf
mov
in
push
fwait
arpl
dec
pop
push
or
test
xlat
insl
add
mov
jl
push
cmp
out
push
dec
cmp
in
mov
xchg
dec
or
xchg
jg
in
popf
jecxz
and
incb
repz
lahf
stos
push
xchg
pop
jmp
mov
adc
into
cmpsb
out
mul
lcall
push
mov
cmp
in
or
bndstx
jecxz
ror
sub
jae
cli
insw
cltd
xor
popa
dec
mov
mov
rcrl
gs
arpl
pop
in
xor
loopne
and
cmp
stos
pop
add
je
jl
sub
stos
stos
push
pusha
jno
mov
stos
cli
fs
stc
dec
out
dec
mov
cwtl
pusha
fwait
insl
xchg
hlt
ret
mov
push
jl
add
sub
mov
push
inc
cmp
push
cmp
pcmpeqb
lea
add
icebp
adc
in
insb
jl
jne
mov
xchg
scas
lea
add
sbb
pop
xchg
jl
shll
adc
fcmovbe
lods
cmp
xor
je
or
popf
jecxz
dec
adc
repz
mov
inc
sti
sub
fldcw
fldcw
push
fwait
mov
pushf
popf
cli
insb
sub
fwait
mov
ror
popf
mov
push
es
mov
inc
pop
iret
cmp
jb
push
or
subl
aam
out
mov
aam
xchg
mov
addb
clc
jmp
inc
mov
push
fdivs
lods
mov
or
jo
jo
std
lret
mov
cltd
cmp
jbe
inc
in
push
sbb
negl
inc
adc
fcompl
imul
or
sbb
xchg
adc
ss
pop
mov
sbb
shrb
jb
inc
cli
add
arpl
cs
and
int
iret
enter
popa
fdivl
pand
decl
out
je
and
jo
cmp
cmpb
out
cmpsb
push
movsl
xchg
testb
cli
imul
mov
outsl
sub
sub
iret
pop
stos
insb
mov
xor
ja
sarb
add
addr16
pop
mov
mov
or
xchg
add
sbb
imul
test
push
stos
js
add
shlb
ret
xchg
rcll
int3
adc
ja
fisubrs
mov
jb
cmp
cmpsb
cli
dec
in
mov
les
add
mov
inc
sub
in
sub
push
add
scas
and
xchg
jp
add
int
call
iret
or
mov
mov
sbbb
out
pop
pop
adcb
push
dec
dec
out
lret
inc
jno
mov
dec
jg
out
sar
les
pushf
jae
mov
inc
sbb
push
incb
js
xchg
addr16
mov
mov
jo
hlt
ffreep
mov
pop
movnti
daa
xchg
mov
fdivrl
hlt
mov
int3
inc
push
testb
loope
aad
xchg
xor
cwtl
je
or
jmp
fldcw
das
cmp
dec
lahf
mov
push
out
fadds
mov
pop
jmp
push
out
shrl
mov
je
jno
in
fists
jns
mov
testl
sbb
and
xlat
mov
mov
into
lret
nop
into
jle
nop
mull
repnz
jae
jecxz
cli
and
xor
xor
fs
or
dec
es
scas
add
pop
push
xchg
nop
sahf
shll
push
out
inc
dec
repnz
call
or
test
movsl
rolb
push
loop
dec
leave
repz
jno
pop
jne
adc
hlt
shll
repnz
fcomip
data16
outsb
mov
xor
xchg
xchg
push
xchg
lahf
fcom
mov
jae
pop
and
sbb
fwait
daa
dec
std
jl
fsubl
test
imul
idiv
inc
rcrb
cmp
das
int
mov
mov
xor
js
call
pusha
cmpsl
add
test
andb
inc
sub
and
sub
cmp
loop
xlat
mov
jae
fistpll
jp
sub
push
xlat
enter
jb
adc
sarl
les
push
sub
incl
in
inc
adc
je
jae
or
insl
sbb
outsb
es
or
js
add
enter
addl
and
mov
pop
repz
stos
lock
es
daa
clc
xchg
add
daa
ljmp
inc
inc
cmp
push
mov
aas
inc
pop
std
aad
lret
stc
mov
call
push
adcb
cmp
jbe
sub
mov
mov
mov
cmc
mov
mov
popa
imul
mov
outsb
xchg
cmp
or
mov
loop
push
icebp
pop
stos
push
mov
dec
push
fsubp
sbb
xorb
dec
inc
jge
jno
or
lds
jp
push
mov
test
dec
mov
es
pop
mov
mov
mov
fiaddl
and
cs
and
repnz
ret
mov
jne
int
pushf
xor
mov
pop
inc
ret
pop
ja
shlb
dec
insl
dec
adc
call
inc
mov
insb
jo
insb
sub
xor
jle
inc
leave
pop
adc
imul
pushf
add
mov
xchg
jge
les
cli
bound
aaa
mov
or
sub
add
adc
repz
ss
mov
scas
shlb
fsubrl
fldl
pop
mov
mov
mov
push
mov
sub
and
lahf
dec
sub
xchg
cld
sub
sub
outsl
mov
jge
out
xchg
dec
sub
in
mov
fdivr
fiaddl
data16
inc
rol
repnz
inc
dec
jo
sti
aam
pop
pop
sahf
loopne
shrl
clc
push
rcrb
jmp
cmpsb
xchg
inc
and
and
jl
adc
outsb
push
adc
dec
test
cli
add
xchg
push
popa
loope
mov
leave
sub
jge
arpl
add
aad
inc
add
out
cmp
jmp
inc
xchg
bound
flds
push
pusha
scas
aad
sub
nop
xchg
pop
iret
lcall
mov
nop
mov
mov
inc
cwtl
cmpb
sub
rorb
adc
and
shl
outsl
inc
sahf
clc
dec
mov
test
sbb
je
decl
push
shl
aaa
xchg
inc
test
cmp
sbb
adc
ljmp
js
adc
inc
pop
addr16
and
call
lcall
and
scas
cmp
adcb
mov
mov
push
lret
stos
filds
scas
imul
je
ss
or
sbb
mov
push
stos
gs
jmp
or
fcmovnu
jg
mov
stos
push
addps
in
mov
movsl
pop
aaa
add
ja
hlt
xchg
loop
adc
pop
dec
dec
subl
outsb
cmp
pop
dec
arpl
ror
adc
mov
inc
xchg
fimull
cs
jae
or
pop
aam
or
adc
out
cmp
aas
daa
jne
lret
hlt
or
adc
sbb
dec
mov
or
sub
push
sub
movups
repnz
leave
stc
mov
xor
in
jmp
push
stos
push
and
dec
dec
cwtl
and
fists
loopne
dec
xor
js
mov
loopne
xor
punpckhdq
xchg
mov
pop
sar
jns
rcrl
or
jne
xorl
stc
cwtl
mov
cmp
xor
jnp
ljmp
aam
add
std
inc
inc
push
ljmp
sbb
hlt
pop
mov
in
fadds
loop
in
pop
mov
push
and
sbb
cltd
sub
mov
dec
jnp
inc
push
out
inc
out
pop
jmp
mov
jb
cli
xor
or
push
push
add
fisubrl
dec
xor
xchg
add
mov
push
movsb
repnz
out
add
xchg
sub
and
data16
sub
in
lock
mov
mov
pop
movsb
pop
int3
sub
lcall
push
mov
stos
cmp
lods
cmp
rorb
lret
pop
mov
cmpsb
lds
nopl
and
xchg
shll
add
pop
sub
xchg
mov
dec
dec
push
lret
fidivrl
push
cs
jb
call
cli
fildl
jge
rcrl
cmc
bound
push
insb
push
pop
xor
mov
jge
rcrb
jmp
xchg
xor
enter
pushf
adc
xchg
xlat
jbe
pop
sbb
cmp
out
xchg
adcl
vpaddusw
adc
cwtl
das
nop
pop
out
out
dec
lods
ficoml
stc
loopne
add
push
jae
pop
aas
inc
jle
decb
add
add
idivb
xor
nop
jle
jg
inc
cld
xor
xchg
sub
or
scas
adcb
xor
push
cmc
cmpsb
shl
xchg
sub
jne
stc
lret
outsl
imul
hlt
add
imul
mov
or
pusha
scas
add
in
gs
arpl
imul
inc
stos
mov
iret
mul
nop
xlat
mov
pop
dec
cmp
or
and
popa
scas
push
cli
mov
test
fldl
and
mov
and
jl
mov
popa
push
inc
jge
fwait
ja
and
mov
icebp
or
cmp
push
push
icebp
push
call
test
fdivl
shll
testl
test
movsl
lret
jbe
inc
dec
pop
or
mov
mov
add
nop
lods
xor
lods
add
sub
cmp
fidivs
sub
outsb
cli
pop
mov
outsb
jl
mov
xor
cmp
daa
cld
popf
adc
add
movb
xchg
daa
mov
sub
jg
fmuls
adc
aad
out
addr16
jbe
cmp
dec
xchg
xchg
leavew
mov
arpl
pop
inc
mov
pop
dec
ljmp
sbb
xchg
mov
bound
rcrl
out
xchg
pop
das
mov
or
pop
inc
mov
mov
stc
push
xor
loope
or
mov
dec
lods
xor
push
in
stos
mov
rolb
shll
out
mov
int
xchg
xor
xor
loopne
adc
lea
cmpsl
jo
sub
and
lahf
mov
fwait
lahf
fwait
dec
mov
ret
ffreep
pusha
dec
lahf
fildl
pop
or
cmc
icebp
xchg
scas
add
push
cmc
push
and
cmc
push
inc
xor
xchg
jo
jno
sar
adc
sbb
or
dec
in
push
push
sub
stos
mov
mov
shrb
pop
push
gs
rclb
xor
stos
or
push
imul
xchg
xchg
push
mull
lahf
pop
xor
in
shll
aas
pop
in
ljmp
testl
jl
jb
mov
adc
cltd
push
lahf
jl
cld
stc
dec
out
out
dec
test
subb
mov
sahf
sbb
int
push
inc
cmp
pushl
ss
je
mov
imul
push
sbbl
inc
ljmp
pop
ss
push
pop
mov
and
or
nop
jl
mov
icebp
addl
cld
insl
out
and
jl
mov
imul
pushf
in
subb
sub
lds
push
ss
mov
movb
xor
adc
shlb
daa
loope
cmp
popa
inc
fdivrs
outsl
sub
xchg
ja
inc
in
repnz
mov
mov
mov
gs
inc
mov
cmpsb
jmp
movsl
addr16
mov
js
data16
dec
int
inc
lods
push
insl
in
pop
push
and
lcall
in
cltd
xor
testl
pop
sub
pop
and
and
aam
out
xor
jecxz
call
mov
mov
sub
and
jg
pop
xchg
outsl
push
ret
dec
daa
nop
sub
sbb
decl
adc
pop
inc
adc
bound
lea
mov
sub
andb
aam
mov
call
adc
mov
add
mov
enter
outsb
xor
add
xchg
sti
jb
mov
jbe
pop
sub
xor
loop
leave
test
outsb
rolb
int
dec
imul
push
lret
shll
lret
adc
dec
inc
inc
pop
ljmp
add
pop
movsb
jbe
icebp
xchg
jg
fdivl
sub
adc
cwtl
mov
rcl
outsl
gs
dec
ret
inc
adc
push
es
fpatan
and
sarb
inc
xchg
inc
pushf
pop
mov
icebp
inc
movsb
rorb
mov
mov
iret
testl
dec
mov
sbb
adc
daa
es
ljmp
das
inc
pushf
jge
jns
jns
and
sub
pusha
dec
loopne
sub
dec
and
ja
mov
out
mov
xor
test
fwait
mov
mov
int
es
insb
pmullw
dec
push
sbb
cmp
or
icebp
andl
and
leave
lock
sub
push
sub
jno
lahf
cmp
aaa
push
jns
jmp
xor
or
jo
cwtl
int3
icebp
sub
jmp
jbe
mov
or
shll
adc
mov
stos
arpl
test
or
xor
pop
xor
ds
in
push
aas
jae
xchg
jmp
pop
andl
push
lahf
mov
sahf
in
add
cmp
cmpsl
mov
fstl
pop
sbb
inc
jecxz
dec
add
cltd
lret
outsl
loopne
xchg
mov
std
inc
xchg
xchg
xchg
sbb
fs
lds
stc
or
shll
test
fwait
lret
rorb
daa
push
test
add
cld
stos
cmpsl
repnz
ss
and
adc
adc
jmp
push
fldcw
iret
jnp
xchg
add
mov
out
fadd
cs
xchg
lods
push
mov
cmc
sub
jno
push
gs
xchg
movsb
dec
shl
aad
sub
xor
test
mov
rolb
test
das
mov
xchg
mov
fcoms
data16
sbb
sub
sub
mov
mov
jne,pn
shlb
sub
adc
mov
addl
leave
push
roll
dec
jns
or
inc
imul
rolb
jae
out
mov
lock
inc
jae
lock
popw
xchg
push
or
mov
jecxz
mov
mov
cmp
mov
lcall
aaa
mov
sub
adc
out
adc
aam
xchg
push
movsb
and
cmpsl
or
das
inc
xor
sub
rol
shr
fcomi
stos
fdivl
sbb
inc
or
xchg
add
cwtl
or
push
pop
mov
test
and
mov
mov
push
imul
mov
stos
leave
jge
push
pop
adc
lds
inc
inc
xor
scas
adcl
lock
jmp
stos
lea
jl
bound
xor
out
cwtl
jmp
mov
dec
int
pop
pop
lcall
xor
in
dec
rol
int
and
xor
aam
dec
icebp
nop
cld
jg
cmp
xor
jnp
add
add
test
push
ret
mov
sub
adc
jle
stos
outsb
sbb
add
shrb
das
sbb
out
xor
fsubs
cwtl
push
out
rol
add
push
push
xor
cwtl
pop
lret
inc
push
cmpsb
sbb
in
movsl
mov
popf
xchg
mov
add
jnp
inc
enter
stos
add
or
push
cmp
pushf
inc
sub
jge
pop
das
adc
mov
cmc
je
pop
lcall
and
mov
xor
push
push
adc
test
xor
xor
cmp
xor
mov
pop
mov
mov
les
ss
movsl
test
dec
call
arpl
push
out
cmc
clc
mov
cmc
not
aaa
or
data16
idiv
fsubrp
sub
fcmovnbe
adc
lret
or
ljmp
jp
rcrl
mov
add
movnti
es
decb
push
lcall
not
js
mov
xor
repnz
cli
mov
into
shll
int
mov
mov
das
out
push
bound
push
sti
pop
ss
mov
aas
gs
test
mov
mov
add
cmp
shlb
mov
lret
push
mov
mov
shll
jbe
outsl
dec
leave
rorb
dec
push
xchg
jno
push
movsl
mov
add
mov
aam
mov
mov
or
mov
shrl
sbbl
in
cmc
pop
les
or
mov
pusha
adc
clc
mov
push
scas
sbb
les
ret
mov
fisubs
nop
data16
les
test
repnz
sbb
adc
iret
sub
fcmovb
popf
pop
hlt
cmp
repz
call
and
popa
xlat
test
sti
icebp
sbb
push
mov
pop
push
mov
stos
cli
jmp
aam
add
pop
sub
xor
les
jbe
aaa
aad
dec
hlt
ja
popf
jg
in
jle
repnz
dec
adc
mov
xchg
pop
es
into
repnz
add
leave
nop
pop
dec
jae
dec
sti
xchg
dec
pusha
mov
data16
and
fwait
mov
jns
inc
scas
test
inc
mov
icebp
or
xchg
push
jno
mov
jbe
fsubr
sub
rcll
mov
sub
xlat
out
subb
lret
inc
xlat
sbb
insl
out
jmp
outsb
jecxz
lods
adc
insb
add
rcl
sub
dec
mov
or
in
mov
mov
xor
push
push
mov
int
lahf
and
in
in
aam
dec
rorb
jae
pushf
xor
add
ljmp
jns
adc
shrb
sarb
cmpsl
push
push
jns
push
sub
push
mov
lods
imul
jns
sub
imul
mov
fsts
bound
lock
fstpt
lahf
loop
loopne
lea
mov
xchg
mov
sub
out
inc
cmpsb
les
mov
mull
pop
add
push
test
jmp
test
inc
push
add
in
outsb
pop
mov
cmpl
and
mov
dec
jecxz
push
fcomps
mov
mov
mov
shlb
xchg
lock
andb
pushf
mov
imul
or
inc
mov
lahf
mov
mov
cmp
pop
je
mov
mov
jae
jnp
leave
cmp
xchg
pop
aaa
imul
das
xor
aaa
xchg
shlb
pop
les
jae
das
fsubp
xchg
add
sbb
addr16
jg
mov
inc
sub
lea
lea
sbb
pop
push
pop
loop
cmpsb
sahf
lods
lock
jecxz
sub
jge
cltd
jbe
in
inc
xor
outsb
repz
in
arpl
xor
dec
stos
out
xchg
dec
popa
aad
pop
or
sbb
cs
inc
jge
ffree
sbb
test
jne
pop
outsb
cmp
push
xor
pop
add
mov
adc
cmp
or
adc
imul
movsl
lock
push
mov
rclb
loop
test
pop
mov
ljmp
mov
cmp
sub
dec
inc
nop
popf
insb
xor
rcrb
xchg
pop
push
sbb
out
icebp
daa
pushf
das
fisttpl
pop
fstpt
push
lret
icebp
jne
aam
clc
gs
mov
push
jp
in
das
push
jns
adc
jle
fdivs
jo
call
lock
pop
pop
sbb
lcall
in
sbb
pop
fnstcw
push
test
out
or
or
jns
xchg
and
aam
add
push
outsl
inc
inc
scas
or
lret
cmp
data16
pop
pop
mov
jge
mov
or
inc
clc
mov
xchg
nop
in
sti
sub
jnp
add
stc
cmp
in
xchg
dec
adc
cmpb
gs
sarl
inc
dec
pop
adc
inc
lock
enter
cmp
pop
pop
add
fstps
and
mov
inc
sub
roll
or
lods
cmpsl
and
and
jecxz
js
test
pop
xchg
cmp
lock
pop
xchg
and
pop
or
inc
insl
shrl
ret
cmc
test
mov
or
jp
mov
mov
mov
xchg
dec
sub
movsl
xor
mov
fistl
adc
or
fstl
cmp
mov
cmp
adc
xchg
add
inc
nop
cltd
mov
mov
negb
cmp
aam
dec
inc
mov
iret
inc
stos
mov
dec
cltd
add
gs
mov
aad
mov
mov
clc
adc
add
pop
push
inc
add
inc
subl
clc
test
cs
inc
call
sbbb
pop
outsl
popaw
push
inc
pop
push
push
xor
mov
mov
sub
repz
cs
in
rorb
jns
jmp
sar
scas
out
std
mov
xchg
and
dec
inc
jbe
mov
mov
add
fistpll
in
sub
loop
movsb
sub
cli
pop
add
fldl
fucom
div
sbb
push
pop
test
jmp
cmp
into
add
xchg
adc
stos
cli
lea
sub
mov
test
test
enter
and
push
imul
leave
js
adc
or
repnz
test
mov
fwait
mov
push
pop
jge
mov
adc
popf
xor
sbb
fisttps
cld
push
or
push
jecxz
xor
icebp
in
int
jge
loopne
adc
xor
add
call
subl
push
add
into
jg
pop
lret
jbe
inc
dec
sbb
push
aaa
repz
push
xchg
jne
and
dec
push
jmp
shrl
inc
push
mov
push
cltd
outsb
cmc
pusha
push
aam
out
pop
mov
xor
inc
in
push
mov
adc
mov
pop
sub
jne
repz
add
int3
fmuls
stos
subl
inc
cs
mov
lods
mov
das
lds
ljmp
sbbl
cwtl
pop
rcrl
loopne
pop
push
push
fucomi
xor
push
inc
lock
lea
jnp
gs
call
cmp
cmp
xchg
fdivrs
call
test
enter
pop
ficomps
cmpsl
dec
dec
std
orl
int
loopne
inc
add
push
pusha
aad
arpl
addr16
dec
add
inc
pushf
std
fnstsw
adcb
xchg
repz
mov
inc
loop
call
inc
int
mov
push
inc
gs
imul
xorl
insb
push
aaa
ret
ffree
lahf
pop
mov
sub
cli
enter
mov
jge
leave
or
mov
mov
movsl
ret
repnz
xor
sbb
inc
add
and
cmp
and
aad
orl
mov
mov
lret
data16
cmp
inc
sbb
cmp
cmp
test
cmp
ss
xchg
test
shrl
call
pop
popa
jno
push
xchg
lea
xor
jbe
cwtl
push
aaa
cmp
pop
test
aad
imul
loop
inc
dec
jno
mov
mov
lret
shll
inc
int3
and
outsl
fdivrs
push
sarl
repz
ret
gs
out
popl
inc
inc
sub
jne
jbe
lds
jns
aam
pop
lds
icebp
dec
call
ffree
shrl
xor
pusha
aas
notb
and
call
or
lods
sbb
push
adcb
mov
popf
dec
popa
inc
push
jecxz
test
jno
adc
mov
jb
add
lock
test
ret
fsts
mov
cmpsb
jbe
pop
cs
ja
pop
add
out
es
hlt
xor
in
dec
add
mov
nop
xchg
movsl
jae
imul
scas
fs
xchg
pop
push
xchg
pop
jb
and
inc
stos
ds
mov
imul
stc
jnp
fwait
add
cmpsb
stc
pop
test
mov
sub
xor
adc
cmc
ret
data16
lds
stos
int
adcb
mov
push
imul
mov
add
js
outsl
jns
pushf
dec
and
negl
mov
mov
lea
imul
inc
das
iret
and
sbb
and
adc
hlt
push
inc
mov
dec
fs
push
add
add
mov
add
add
cmp
add
ss
cmovae
mov
dec
xor
sub
and
dec
mov
sub
cmp
scas
mov
cmpl
jns
lods
loope
popa
cld
iret
sub
fldl
xorb
fisubrl
sahf
in
pop
notl
xor
cmp
lods
mov
fdivrl
dec
push
dec
out
stos
cmpsl
and
push
lods
xor
mov
or
pusha
decb
insb
xlat
sub
add
mov
dec
xchg
shll
out
jno
xchg
ja
in
sub
jecxz
out
add
aam
mov
cmp
and
pop
mov
xchg
ljmp
jne
in
imul
lock
xor
add
lahf
pop
loope
int
sbbl
dec
jecxz
loopne
jns
ret
adc
mov
add
jb
mov
cwtl
out
rclb
push
outsb
jne
push
xchg
sbb
rorb
jbe
ja
inc
add
sbb
sahf
icebp
clc
je
shll
mov
push
insb
inc
mov
fisttpl
cmp
xchg
or
icebp
ss
mov
or
negl
xchg
aam
adc
or
orl
aam
ret
mov
fidivrl
rclb
mov
aad
xchg
pop
clc
adc
xor
call
ss
dec
je
fdivl
push
test
jne
adc
push
cli
adc
lcall
ret
insl
push
or
xchg
xorl
dec
out
test
sbb
xchg
add
test
and
sbb
orb
fsubrp
pop
pop
jns
test
cmp
mov
into
sbb
push
int
cltd
adc
dec
ljmp
pop
inc
cmp
out
push
aaa
mov
idivl
cmp
out
fistl
cmpsb
aas
mov
mov
mov
subb
gs
cmpsl
inc
stos
xchg
pop
popf
ja
and
push
sbb
imul
loop
or
stos
es
xor
push
adc
popf
xor
ss
pop
or
jno
push
inc
xchg
xchg
sbb
mov
sub
call
sub
inc
and
lret
adc
cs
sahf
adc
dec
aas
sahf
out
outsb
xor
lret
mov
jmp
ja
mov
and
push
sub
and
and
pop
and
icebp
adc
pop
cmp
mov
sbb
aas
push
push
rorl
dec
les
mov
dec
in
jp
xchg
push
stc
xor
lcall
pop
push
cmc
inc
popa
mov
and
mov
push
shrl
xlat
xchg
xchg
push
dec
jle
push
cli
mov
mov
cltd
mov
movsb
cmp
stc
les
pop
movsl
aas
icebp
xor
inc
jb
jecxz
mov
movsb
fcompl
pop
push
into
mov
jae
xorb
enter
dec
nop
jmp
cs
xchg
jae
xchg
mov
movsl
mov
out
mov
gs
movsb
in
mov
cmp
mov
jae
mov
data16
sar
out
cmp
shll
jbe
mov
xchg
ret
adc
sbb
sbb
push
and
sub
mov
add
or
push
xchg
mov
nop
inc
adc
insb
mov
aad
sbb
nop
sub
cmc
fstps
pop
in
xor
in
lahf
mov
jno
aas
xor
xorl
jle
lret
daa
inc
or
xchg
add
shrl
hlt
push
bound
mov
fwait
push
cmpb
xchg
inc
dec
push
cli
imul
jno
dec
cmp
push
inc
sub
jae
sbb
fwait
es
and
mov
xchg
and
scas
adc
movd
iret
aam
mov
lods
icebp
movsb
inc
inc
out
shl
iret
push
pop
inc
push
push
mov
stos
cmp
push
push
decl
icebp
mov
pop
sarb
adc
xor
mov
xchg
sbb
ret
ja
gs
or
pop
or
push
subb
xchg
int
mov
jle
js
pop
je
fcmovbe
inc
std
int3
adc
push
inc
push
add
imul
aaa
sarb
xchg
repz
mov
dec
mov
mov
das
mov
lock
int
mov
inc
jle
xchg
lret
lea
push
testl
lret
and
mov
mov
movsl
clc
push
clc
in
inc
cltd
adc
in
out
add
jae
mov
fcmovnu
into
cmp
inc
jecxz
adc
ss
cs
adc
inc
lods
mov
ljmp
data16
cmp
inc
iret
aaa
or
push
enter
and
test
jo
clc
xchg
test
cmp
aad
mov
jns
cmp
test
sub
add
mov
addr16
lea
xchg
sti
pop
aaa
mov
fcomps
inc
cmp
addl
push
movsl
and
and
and
mov
mov
loop
outsb
cmp
scas
cwtl
lock
xor
xchg
inc
dec
movsl
adc
add
mov
das
lods
fidivs
ficomps
adc
or
xchg
shll
insb
sub
mov
sub
gs
adc
das
aas
out
sub
xor
rolb
xor
pop
hlt
and
push
shll
jns
dec
mov
loope
je
rcrb
mov
cwtl
outsb
inc
mov
mov
gs
sbb
clc
lret
inc
adc
sub
inc
pop
mov
cmp
or
inc
or
inc
test
icebp
dec
dec
fimuls
pop
add
add
mov
push
cmp
dec
in
fldcw
jl
sbb
lcall
testl
bound
movsl
stos
fldenv
cmpl
popf
mov
test
jno
jo
pop
and
xor
push
icebp
lret
mov
cld
gs
aam
aas
or
dec
scas
xor
icebp
adc
fadd
add
add
popa
push
jno
mov
mov
ds
mov
sub
jno
mov
shlb
leave
cmpsl
pop
sahf
mov
add
jl
movsl
pop
hlt
mov
insl
cmpb
je
pop
loope
dec
jecxz
aas
add
fisubl
mov
cmc
dec
ss
ja
push
mov
push
or
mov
out
fistpl
inc
push
mov
stc
mov
mov
cmp
or
inc
mov
xchg
pop
mov
roll
sbb
movsl
jae
mov
mov
insl
cli
test
pop
out
pop
inc
xchg
sub
jmp
inc
adc
xor
loop
mov
dec
add
arpl
loope
mov
pusha
inc
cli
mov
jecxz
add
fildl
loopne
sub
jne
fidivrs
icebp
mov
aas
aas
sub
cs
dec
scas
push
in
iret
jmp
rcr
into
testb
dec
sahf
mov
sbb
cmp
or
lcall
sbb
or
adcl
pop
push
cmp
popa
and
xor
push
sbb
jp
addb
in
cmp
mov
sub
ret
xchg
mov
add
add
jo
dec
xchg
pop
sub
xlat
aas
ja
scas
and
jp
sbb
int3
push
out
fsubl
outsb
imul
cmp
and
lcall
cmp
pop
pop
add
cmc
sbb
iret
jno
sub
mov
xor
or
inc
scas
sbb
aaa
loopne
call
sbb
aas
xchg
loop
aam
cmpsb
add
divl
mov
in
je
xchg
dec
cmp
push
jo
dec
mov
sub
dec
xchg
pop
xchg
loop
ja
aaa
jge
add
loope
daa
mov
fwait
inc
in
test
xor
incb
jnp
insb
push
xorb
sahf
push
and
call
mov
cmp
mov
pop
mov
jle
mov
and
jae
roll
add
int
enter
push
xchg
loope
pop
cwtl
or
out
dec
sti
std
fmuls
jno
fwait
mov
cmp
insl
stc
aam
fsubs
repnz
and
filds
push
inc
outsl
loope
scas
push
gs
aaa
mov
leave
mov
jns
out
mov
jne
sbb
sahf
fstps
es
mov
dec
int
in
cli
push
mov
mulb
sti
pop
pop
rcrl
test
mov
dec
ja
add
cmc
and
or
or
xchg
or
jns
mov
js
or
sub
mov
in
dec
or
in
pop
inc
or
int3
roll
nop
outsb
addr16
xchg
movsl
jbe
cmp
pop
adc
inc
jb
mov
xchg
mov
adc
scas
aad
fwait
inc
repz
add
jb
sti
icebp
int3
inc
nop
mov
dec
sub
jbe
loop
test
mov
sbb
das
mov
inc
popl
jg
push
outsl
dec
out
lcall
cmpb
xchg
push
xor
mov
xchg
jbe
fmulp
lods
jge
roll
cli
push
xchg
daa
call
lret
adc
lock
fnsave
jns
mov
adc
lea
in
loope
mov
sarb
adc
cmovge
add
insb
adc
lods
cmc
mov
cmpsb
gs
shll
movsb
fwait
cld
mov
push
sti
aaa
mov
movsb
rcrl
popl
add
xchg
mov
stc
and
shlb
push
stc
sbb
jnp
push
inc
inc
scas
in
in
fldt
out
rcrl
insl
xchg
add
aad
mov
stos
pop
or
mov
dec
jne
adc
out
popa
sub
fs
in
loopne
nop
ret
xor
fbld
xor
jl
xlat
jcxz
daa
jne
mov
cmp
jne
xchg
std
jge
sahf
pop
and
mov
adc
sarl
add
xor
cmp
push
mov
outsl
cltd
jo
xchg
aad
jne
enter
aaa
sahf
leave
imul
add
adc
push
xchg
xchg
fldl
jg
aad
int
gs
idivb
and
inc
add
push
add
test
aad
inc
push
sbb
sub
jmp
cwtl
push
dec
jmp
out
xchg
rol
shr
stos
mov
jge
out
fstpl
pop
outsb
stos
sti
cwtl
stc
lock
aad
jno
add
jg
sub
cmp
lods
xchg
movsb
int
sub
hlt
call
and
test
leave
add
xor
or
mov
int3
jmp
gs
bnd
sahf
pusha
test
sbb
fwait
pop
lods
rcrl
mov
xchg
cmc
insb
pusha
dec
lds
outsb
outsb
in
imulb
cltd
scas
pop
sub
nop
jecxz
imul
scas
orb
scas
sub
sbb
pop
sub
mov
imul
inc
lcall
cli
imul
leave
mov
mov
mov
stc
adc
loope
xor
add
jo
addr16
and
mov
cli
ja
mov
mov
aam
xchg
fs
adc
xchg
sbb
mov
xchg
and
std
adc
push
cld
rorb
pop
mov
mov
out
jp
fwait
imull
xchg
sub
pop
hlt
out
adc
cmp
fwait
lret
adc
fldt
or
inc
iret
icebp
aas
test
fists
js
jg
call
jbe
cld
jbe
subb
nop
add
push
mov
call
les
cmc
mov
sub
loop
fisubrl
dec
lahf
and
pusha
push
icebp
mov
gs
repz
mov
push
jbe
outsb
or
arpl
or
es
or
mov
mov
mov
aas
jb
popa
rcl
push
and
das
test
sbb
aaa
inc
pop
mov
mov
outsb
aaa
imul
mov
fildll
jle
lret
out
sbbl
or
xchg
mov
shll
jo
inc
fadd
insl
dec
push
lea
jns
cmp
inc
scas
dec
std
or
movsb
dec
lahf
and
mov
push
pop
stos
and
es
fnstenv
cli
repnz
cld
cmc
cmp
inc
xor
dec
shr
aas
mov
adc
sbb
popa
rcl
sbb
push
jge
mov
das
xor
clc
sub
xor
or
es
stc
mov
jp
lock
cmp
testb
data16
lcall
cmpb
xlat
jecxz
fistpll
sub
sbb
lret
dec
xor
in
mov
out
out
repz
mov
inc
andl
push
fsubrl
cmpsb
mov
sub
int3
xchg
cmp
mov
imul
fwait
cmp
fcompl
test
cmp
add
in
dec
sti
adc
lods
shr
rclb
dec
bound
pop
dec
cmpsb
stc
or
ljmp
add
jge
jecxz
pushf
fldt
lahf
lea
cltd
sub
mov
imul
mov
adc
push
popa
out
jl
pop
loop
fnstsw
bound
xor
jge
sbb
xchg
lea
add
mov
scas
mov
push
mov
inc
push
inc
sub
iret
lds
pusha
mov
xchg
push
stos
and
ja
iret
mov
xor
or
stos
loopne
dec
stc
lret
inc
ret
in
push
push
push
inc
inc
mov
push
scas
or
out
loopne
mov
sub
mov
or
inc
lcall
xchg
insl
stos
push
jl
iret
cmpsb
cwtl
push
push
mov
xor
aad
inc
mov
adc
lock
lods
mov
xchg
mov
clc
cmp
or
data16
adc
out
mov
aam
push
adcl
jg
adc
cwtl
push
movsl
adc
lods
inc
cmp
mov
push
adc
xor
xchg
mov
jge
mov
scas
out
cmp
hlt
xor
push
mov
frstor
push
mov
xchg
dec
sbb
lret
leave
xor
and
pop
and
repnz
leave
pop
sbb
hlt
pop
andb
inc
loop
cmpsw
sub
adc
push
sbb
dec
and
sarb
daa
pop
adc
sbb
xchg
and
aaa
out
or
movsb
adc
cmp
lock
jns
mov
mov
jnp
mov
je
or
je
ds
push
mov
mov
xchg
mov
add
push
inc
pop
mulb
into
sub
popa
mov
sbb
sub
repnz
mov
leave
sub
dec
pop
ds
xchg
jp
repz
xorb
arpl
gs
lds
xchg
cmp
xor
mov
lea
in
mov
jge
mov
lahf
movsb
adc
fcomp
pop
icebp
push
sti
loope
aam
inc
sub
mov
dec
pop
add
rorb
add
into
mov
into
loope
aam
neg
nop
test
dec
ds
adc
lds
xor
xor
mov
inc
inc
jmp
sub
fdiv
mov
sub
nop
movl
cmp
or
jno
sub
sbb
outsl
inc
lea
cmp
push
loop
sub
and
sbb
mov
stc
subb
xchg
ret
ret
cmpsb
mov
jmp
cld
leave
aas
mov
xchg
jnp,pn
add
mov
fbstp
jno
push
call
clc
shll
sub
out
fisubrl
stc
jo
push
jmp
sbb
fildll
daa
scas
xor
pop
ds
cli
push
outsb
inc
ret
cwtl
lcall
cmp
inc
lock
cmp
out
subl
andb
sub
cli
lret
xor
and
jl
loop
mov
mov
cli
int
push
mov
xlat
jb
cmp
push
js
sub
and
lret
stos
cmp
inc
or
fsubrl
mov
jne
push
lret
dec
fidivrl
xor
sbb
decb
lods
and
or
loopne
xchg
pop
imul
in
movsb
into
nop
lds
rol
mov
or
stos
movsl
ja
popf
cmpsb
rorl
jae
sub
iret
std
in
gs
out
mov
cmp
xchg
cmpsl
mov
or
inc
mov
into
jg
push
pop
and
xchg
mov
xor
dec
xchg
cwtl
push
cmp
add
adc
or
fcompl
ret
mov
mov
adc
xor
and
dec
mov
and
lret
adc
and
and
mov
lahf
aaa
lahf
inc
fcmovne
sbb
push
jg
idivb
fadds
fbstp
xlat
push
jo
pop
call
pop
orb
icebp
push
cmp
push
bound
test
push
mov
dec
cmp
push
cs
cltd
lret
inc
mov
mov
dec
pop
mov
sti
xorb
test
scas
call
or
out
cmp
fiadds
xor
shl
sub
dec
sub
psrlw
add
scas
jb
in
sahf
xor
pop
inc
and
aas
mov
in
xchg
xlat
iret
fidivrs
fmuls
fisubrs
fcompl
loope
and
mov
cwtl
cmp
mov
mov
or
inc
into
enter
adc
sbb
adc
cmp
and
stc
cmp
jmp
sbb
cmp
popa
jne
pop
mov
das
jb
push
lock
js
sub
xor
nop
outsb
dec
inc
inc
cmp
in
test
aam
lcall
mov
jle
sbb
enter
add
cmpb
mov
aas
jbe
sub
cmp
scas
lret
les
mov
test
push
and
sub
lds
popa
dec
or
xor
xor
sub
ja
cmp
mov
mov
xchg
jl
movsb
mov
inc
sub
into
test
and
add
sub
or
sbb
lock
mov
push
push
xor
lret
or
mov
test
cmp
xor
pop
inc
lcall
xchg
dec
cwtl
shl
js
add
xchg
cmp
sbb
inc
data16
aam
jnp
xchg
out
xor
jge
jb
jecxz
mov
in
pushf
pushl
mov
testl
mov
lea
out
decb
js
and
mov
hlt
ss
orb
xchg
add
lds
dec
sti
adc
ficomps
jle
fcoml
into
and
xor
jne
scas
or
je
push
and
push
rcr
push
jecxz
sub
mov
xor
sub
and
and
and
push
jmp
lock
xor
pushf
gs
gs
insl
sbb
lock
sets
movsl
loop
pop
sbb
cld
popa
mov
xchg
gs
int
adc
out
js
mov
test
lds
dec
mov
cld
add
movsb
adc
adc
in
jno
push
and
popf
loop
adc
mov
add
pause
call
push
push
jg
mov
sub
or
mov
shrl
cld
add
or
in
arpl
sbb
mov
lea
xor
pop
add
mul
sar
mov
add
inc
and
add
sub
aad
or
mov
add
movsb
jnp
fidivrs
stc
stos
decl
mov
add
pop
push
cmp
jbe
jno
popa
std
jno
jmp
xor
ret
into
sbb
dec
andl
sub
into
cmp
jae
mov
pop
jno
cltd
mov
in
mov
lds
mov
dec
jmp
or
inc
mov
insb
xor
rcrb
je
adc
test
sbb
fnstcw
lahf
popa
jl
scas
out
sahf
pop
push
xchg
fwait
adc
arpl
jno
addl
xchg
xchg
inc
xlat
js
xor
fistpll
push
sub
frstor
inc
add
cmpsl
jne
aad
rcrb
stc
add
orps
fisubs
xchg
loope
ja
pop
pop
jnp
lcall
clc
and
and
add
insl
push
cmpsl
cmp
imul
dec
push
mov
sub
adc
into
pop
jnp
inc
arpl
scas
sarb
ret
inc
insb
notl
pop
cmpsb
ret
loope
je
mov
sbbl
push
sbb
decb
mov
popa
xor
addl
int3
je
adc
std
pop
push
pop
push
cs
xor
sti
or
jle
iret
push
xchg
mov
lahf
push
and
ret
das
inc
rol
xchg
addr16
add
fxam
aaa
cmp
clc
cmp
ficoml
ss
das
cltd
pop
in
add
cmpsl
jmp
pusha
jle
pop
jnp
sarb
mov
add
sbb
cmc
lret
cmp
mov
mov
inc
mov
or
std
cmp
mov
xchg
loop
xchg
movsb
and
test
test
cmp
mov
jge
sub
dec
mov
repz
xor
pop
xor
adc
lea
xchg
aas
cli
aam
inc
adc
inc
mov
inc
inc
pop
aaa
popw
add
push
mov
shr
mov
push
xchg
imul
pop
dec
or
mov
mov
fsubl
mov
push
nop
idiv
popa
pusha
push
roll
sub
cltd
adc
xor
push
jge
sub
mov
mov
gs
sub
decb
add
stc
pushf
pop
call
pusha
fidivs
shrl
add
xchg
push
jns
xlat
xchg
push
or
pop
cmc
or
push
adc
test
scas
into
dec
and
aaa
cli
mov
sar
aaa
nop
loope
mov
std
hlt
inc
and
inc
aam
sub
jb
add
xor
mov
xchg
or
sahf
fadds
clc
int3
jmp
je
mov
pop
sahf
mov
or
stos
imul
cmp
and
mov
adc
adc
or
mov
popf
cmp
xchg
inc
int3
outsb
adc
andb
xchg
add
sub
mov
shrl
push
dec
inc
pop
ret
jo
std
cmp
cmp
call
push
neg
sahf
sbb
insb
lahf
in
loop
andl
dec
jecxz
push
sub
cmpl
sub
imul
test
cwtl
popa
inc
pop
aas
jne
push
std
sti
lods
imull
dec
rclb
and
not
shll
imul
jl
and
int3
xchg
int
push
test
dec
adc
test
mov
add
bound
push
sbb
mov
adc
mov
sub
adc
mov
test
mov
push
lahf
pop
add
outsb
rclb
in
cmp
adc
sbb
jne
sbb
mov
xor
aad
mov
fists
cmpb
pop
mov
pop
cwtl
clc
or
ljmp
adc
mov
mov
sub
mov
pop
lods
cltd
sbb
sub
mov
das
mov
loopne
scas
lods
add
push
and
int
in
fwait
or
mov
inc
jo
in
mov
jmp
mov
ljmp
shll
lds
dec
mov
fwait
push
fnstsw
jp
in
push
adc
or
xor
jle
shl
mov
adc
mov
sub
and
and
mov
mov
out
aas
out
rolb
cltd
out
sahf
vmread
mov
js
push
and
enter
repnz
pusha
ss
adc
cmp
push
movsl
jno
inc
sbbb
inc
sub
ljmp
inc
inc
or
movsl
pusha
lea
jmp
fstpl
sub
pop
mov
testl
mov
pusha
lods
mov
xchg
or
fists
roll
loopne
adc
int3
outsl
or
ds
fisubrs
outsb
mov
loope
mov
pop
mov
rcrb
adc
ljmp
mov
cwtl
cmp
cltd
cld
cmp
mov
in
or
inc
imul
mov
jmp
cltd
mov
xchg
push
pop
loop
mov
and
mov
inc
xchg
fistps
negl
pop
aaa
add
pop
outsl
hlt
sub
mov
std
dec
sbbl
call
xlat
fnstcw
or
pop
push
mov
mov
and
insl
fucom
mov
pop
sub
lcall
mov
jns
mov
and
fimull
std
inc
jbe
jmp
add
xor
push
hlt
or
movsl
aaa
das
push
dec
in
popa
cmc
inc
adcl
push
mov
sbb
cmpsb
adc
mov
enter
push
pop
stos
popf
lods
mov
loope
sbb
lds
add
fcomp
movsl
pop
ds
or
push
mov
ss
ds
add
stc
aaa
arpl
mov
xor
repz
xchg
dec
js
xor
sub
and
mov
push
mov
dec
and
inc
lods
mov
cmp
ss
dec
arpl
pop
cmp
add
sub
adc
mov
inc
and
xchg
sub
mov
inc
push
rorl
cmp
mov
dec
jp
inc
dec
test
shr
ds
jmp
fcmovnu
arpl
adcl
pop
js
dec
data16
dec
pop
test
push
mov
scas
or
test
test
add
inc
adc
lcall
mov
imul
xchg
jecxz
mov
mov
pop
jmp
fsubrs
ja
out
push
mov
shll
out
les
aas
loopne
mov
cmp
adc
cld
lods
ljmp
jae
popf
lock
fnstenv
pop
lret
sbb
cltd
fcoms
push
jecxz
fs
fdiv
jge
xchg
push
push
mov
xor
icebp
cli
mov
mov
push
xlat
or
imulb
jne
jle
push
shl
test
das
push
jns
aad
adc
lret
mov
xor
push
fidivrl
mov
les
mov
adc
ss
or
ljmp
push
mov
aam
dec
loope
xor
push
jnp
add
std
push
xchg
add
mov
and
pop
cltd
adcl
popa
sub
cwtl
push
sub
test
xor
or
xchg
orl
or
sbb
je
seta
jle
repnz
pushf
inc
sub
add
mov
test
sub
mov
pusha
dec
adc
and
jnp
jo
icebp
into
ljmp
sbb
mov
lahf
pop
out
cmp
cmc
mov
sbb
pusha
leave
lahf
packsswb
mov
push
not
cltd
push
hlt
lret
mov
jl
ja
jbe
stos
in
adc
xor
push
ja
jne
test
iret
inc
mov
bound
pop
cmc
in
les
dec
cmp
pop
xchg
and
push
lea
add
ss
mov
sarb
fistpl
mov
test
into
pusha
fldt
jge
pop
shl
enter
or
adc
lods
lret
push
lcall
mov
popf
push
test
ret
cwtl
fisubs
cmpsl
lcall
inc
xor
or
dec
dec
ret
mov
outsl
enter
pop
shl
cmp
xor
call
js
sbb
les
mov
cwtl
pop
xchg
mov
mov
ljmp
scas
xor
jl
mov
scas
cmp
movsl
mov
cmp
cmp
jmp
sbb
movsl
scas
push
cmpsb
fstp
fwait
out
sub
xchg
push
jae
xchg
hlt
push
aaa
sub
daa
push
mov
pusha
popf
xchg
push
lods
cli
hlt
cmp
test
or
pop
movsb
and
pop
cld
imul
cmp
int
lods
mov
pop
mov
push
jbe
pop
divb
xchg
scas
and
scas
jno
cmp
int3
ja
pinsrw
sahf
sub
cli
xor
rclb
sbb
adc
nop
and
push
ds
aas
call
mov
and
push
inc
clc
jns
addr16
mov
out
insl
push
stc
stos
mov
bound
fistps
or
pop
pop
ret
mov
popa
xchg
xchg
enter
fxtract
sbb
xor
inc
mov
arpl
push
and
adc
sahf
and
xorl
fstps
push
icebp
out
sbb
jns
mov
aad
adc
adc
mov
or
insb
sbb
mov
push
inc
test
pop
je
sbb
rorl
mov
cmc
mov
mov
jge
addr16
call
xchg
xor
sarb
mov
sar
adc
push
pop
sbb
lea
aaa
out
ficomps
pop
stos
push
or
jno
ficoms
stc
inc
imul
cmp
lret
mov
daa
mov
stc
mov
inc
push
repz
imul
stos
xlat
subl
sarl
outsb
ljmp
ret
clc
es
sub
mov
jecxz
aas
js
scas
xchg
push
push
xor
stos
sub
std
add
jns
in
jl
inc
les
adc
aaa
push
jecxz
aam
inc
jo
pop
cmp
repz
add
fnstenv
imul
ret
sub
sub
and
inc
sbb
loope
scas
mov
mov
and
pop
adc
lahf
das
enter
xor
pop
xchg
testb
mov
shlb
xchg
imul
ja
xor
mov
ds
jno
jne
jbe
out
mov
imul
leave
cmp
ret
push
pop
fcompp
sbb
out
mov
xorb
lock
push
bound
jae
shlb
jge
aas
aaa
jp
call
jo
cmp
inc
dec
mov
xchg
jbe
sub
mov
daa
lds
inc
jle
jbe
xchg
xor
int3
js
pop
xchg
into
add
cmp
sbb
in
adc
xchg
dec
push
sub
mov
gs
inc
mov
inc
cmp
shl
roll
sub
push
jo
xchg
sbb
fwait
ret
add
movsb
int3
lds
and
hlt
dec
push
negl
sbb
loop
inc
mov
and
xchg
in
jp
push
lods
cmp
subb
ja
pop
pop
jmp
jne
stc
fsubrl
pop
ret
or
in
jno
lea
in
in
jno
in
mov
xchg
push
out
xchg
test
pusha
es
mov
and
pop
rclb
cs
xchg
ret
jge
mov
ds
inc
pop
push
adc
mov
mov
add
pop
repnz
cmp
xor
cwtl
aaa
and
test
sbb
jmp
inc
or
add
sbb
or
sub
mov
arpl
pop
pop
cmp
jle
pop
jb
mov
xchg
mov
push
or
mov
aad
pop
jne
and
arpl
push
fldcw
jge
mov
xor
mov
sbb
mov
lret
outsb
ret
ds
xor
lcall
or
arpl
in
cwtl
gs
or
fsubl
xchg
lcallw
in
mov
pushf
sbb
xchg
mov
aaa
lds
xchg
push
clc
adc
lods
jl
enter
notl
nop
insb
mov
push
fsubr
push
popf
fisubrl
repz
jl
rorb
lds
ret
xchg
popf
or
gs
jno
add
inc
or
adc
push
pop
fisttpl
cmpsb
push
insb
inc
movsl
push
daa
mov
popf
jne
sti
negb
sbb
sub
icebp
test
xorb
aad
jne
aam
iret
out
stos
movsl
ret
lret
cmp
dec
call
jbe
xor
xchg
pusha
dec
popa
mov
dec
push
pop
xchg
into
pop
es
hlt
ja
adc
dec
cmp
mov
fs
inc
inc
cmp
jp
aad
test
les
xlat
out
sti
sti
in
add
pop
xchg
in
clc
test
fdivs
in
imul
inc
inc
and
lret
mov
or
inc
adc
dec
lods
or
aad
fstpt
fisttpll
gs
inc
cli
mov
jg
pop
mov
push
outsl
insl
adc
xchg
scas
shr
rol
cmp
hlt
jnp
repz
mov
cmc
into
push
jo
jns
mov
ret
jmp
adc
mov
jae
outsb
push
xchg
cmp
in
inc
loop
arpl
ret
leave
je
adc
add
pop
mov
jmp
in
out
xchg
mov
shll
fcmovnu
mov
leave
sbb
inc
add
stos
pop
rol
and
ljmp
xchg
jae
mov
cltd
lcall
xor
or
or
iret
fstps
add
mov
fsub
hlt
stos
mov
test
hlt
mov
or
and
aas
stos
adc
loope
lcall
jno
mov
xchg
loope
jmp
add
idivl
and
pop
shll
xlat
push
or
lret
ffree
mov
stos
dec
pop
jmp
xor
add
lahf
jp
test
cmp
xor
and
aam
jnp
mov
daa
sub
outsb
sbb
call
in
mov
inc
mov
xor
out
icebp
outsl
xor
dec
cmp
jae
stc
popf
insb
arpl
xor
adc
stc
xchg
mov
jns
gs
bound
adc
mov
push
xchg
nop
cs
iret
loope
ss
inc
faddl
test
jnp
ljmp
shll
mov
test
sbbl
in
mov
sarb
inc
rolb
adc
adc
sbb
push
mov
sbb
ror
inc
pop
inc
xor
int3
xor
sub
into
xor
push
lock
dec
pop
xor
enter
out
test
dec
dec
mov
mov
mov
add
adc
adc
mov
out
mov
dec
sbbb
in
sbbb
stos
add
xchg
jns
mov
mov
gs
repnz
mov
cmpsb
push
xchg
popa
adc
push
mov
stos
jb
dec
jp
in
push
sub
fcom
push
xor
mov
mov
sarl
adc
xchg
sahf
aaa
inc
movsl
outsb
addr16
and
test
bound
xor
inc
pushw
test
jno
pop
ret
jne
xchg
jb
decl
in
sbb
popf
sbb
rorb
push
daa
mov
and
push
add
jl
inc
pop
or
lock
dec
xlat
lds
cmc
mulb
lock
mov
pop
push
and
ret
sbb
ja
std
enter
andl
xchg
imul
in
decl
and
mov
xchg
mov
pop
sub
push
dec
inc
mov
and
add
mov
add
lods
sbb
stc
dec
jle
jmp
cmp
sub
adcb
or
gs
sbb
addl
shll
movsl
cmp
lock
xor
lods
pop
aaa
icebp
rorl
mov
fcomp
jl
fiaddl
xorl
push
dec
mov
movsb
xor
pusha
lock
and
loopne
mov
jl
mov
pop
rclb
lods
xchg
test
cmp
dec
or
cli
popa
ret
jle
cmp
xor
stos
or
hlt
shlb
dec
test
icebp
add
sahf
pop
cmc
jo
in
outsb
push
or
cmc
pop
add
int
fcoms
push
inc
ljmp
push
push
lahf
andb
pop
popa
cmp
add
and
push
popf
stc
fwait
jecxz
jg
push
mov
lcall
cmp
push
sbb
sbb
inc
imul
into
dec
cli
leave
mov
sbb
divl
mov
and
stos
std
shl
xchg
mov
inc
scas
test
fbld
lcall
and
jns
js
daa
outsb
jb
sbb
in
shll
aad
ja
mov
arpl
pop
mov
cmp
cmp
adc
loopne
mov
dec
stos
mov
inc
sbb
push
in
pop
push
adc
int
and
je
mov
dec
adc
pop
rolb
xchg
xor
call
pop
bnd
scas
mov
cmpsl
inc
popa
sbb
popf
dec
sub
xor
adc
and
repz
mov
aad
dec
mov
lahf
jg
in
push
dec
mov
scas
xchg
outsb
jmp
rorb
pop
jno
lcall
jecxz
mov
or
lret
lea
add
xor
jecxz
adc
cmp
outsl
adcb
popa
sbb
cmpsl
daa
cmp
xchg
daa
mov
aaa
dec
xor
jmp
sub
xchg
pop
dec
fisubs
jnp
lahf
divl
sbb
pushf
stc
or
push
adc
insb
lock
cmp
and
adc
mov
sbb
imul
dec
mov
out
jl
jmp
out
lcall
ret
xor
rolb
cmp
jno
and
or
xchg
or
cmp
sarl
adcb
dec
nop
mov
push
jnp
into
xor
xor
into
pop
clc
adc
jo
bound
icebp
shll
bound
inc
dec
cmc
je
xchg
cmp
push
mov
insb
lods
ret
cmc
cmpsl
pop
fdivl
ffree
cwtl
ror
mov
sbb
movsl
cmpl
inc
sub
sub
mov
lahf
fists
sbb
jmp
stc
pop
or
mov
inc
or
mov
xchg
and
lahf
dec
rcl
nop
jns
lcall
sbb
mov
test
cli
nop
fcoml
push
hlt
in
shrb
sub
mov
add
imul
imul
sub
inc
mov
imul
jno
je
clc
jns
jl
sarl
jecxz
xchg
xor
sub
mov
adc
bound
lcall
add
mov
cmc
pop
daa
push
fdivr
push
cmp
mov
sub
mov
movsb
or
mov
xor
faddl
cld
jl
jp
mov
mov
imul
hlt
push
pop
lcall
xchg
fadds
cmpsl
sub
or
inc
cmc
push
cmp
call
rcll
jp
add
daa
cmpsb
in
dec
scas
loop
mov
or
roll
cmovns
leave
out
push
orb
xchg
enter
mov
leave
mov
pop
sbb
movups
mov
pop
mov
or
or
push
aam
mov
and
lret
mov
pop
shr
fldenv
and
push
mov
lret
mov
jge
icebp
jecxz
push
or
aam
or
push
jmp
movsb
xchg
int
aad
imul
mov
imul
fisttps
pushf
inc
cmp
or
jo
clc
loop
or
or
mov
and
cmpsb
sbb
mov
clc
pop
sbb
into
repz
ficomps
and
sub
xor
std
shlb
sbb
pop
jle
inc
mov
lods
clc
aas
mov
hlt
or
xchg
stc
dec
mov
rcrl
push
roll
adc
mov
icebp
or
add
sbb
sub
push
popf
lret
scas
sbb
outsl
pop
hlt
mov
icebp
lods
pop
lds
pop
pop
lods
adcb
outsb
mov
xchg
sarb
mov
adc
sarb
cwtl
push
cmp
cli
xchg
pop
fldl
pop
in
cwtl
in
pushf
out
lahf
push
movsl
mov
mov
jbe
mov
cmp
aad
loop
jno
pusha
mov
fsubrp
icebp
shll
stos
mov
and
push
rcrb
and
dec
xchg
mov
ds
sub
pop
insb
and
popf
mov
insb
andl
push
scas
mov
fnsave
aas
imul
cwtl
pop
and
mov
add
add
je
scas
mov
mov
inc
inc
je
popa
pop
xchg
dec
add
jae
push
dec
inc
fwait
cmp
push
dec
inc
xchg
pushf
fnstcw
jle
pop
mov
js
ss
and
and
subl
fs
movsl
mov
mov
xchg
out
mov
mov
inc
push
cmp
aaa
adc
add
clc
rolb
arpl
push
mov
pop
pop
sbb
sti
pop
bound
push
scas
stos
sbb
cld
push
sbb
les
repnz
jmp
dec
push
push
call
push
fcoml
sub
fisubrl
add
xchg
push
or
inc
lods
test
lret
mov
in
and
push
ret
mov
into
andb
mov
repz
out
jge
jne
and
add
pop
rol
push
lds
imul
sti
insb
rorb
ja
xchg
push
dec
mov
adcb
iret
aam
stos
and
movsb
pop
aam
rorb
sub
sbb
pop
out
shll
add
mov
pop
lods
sub
and
push
fcomip
cmp
nop
add
add
in
lds
pop
test
jae
xchg
out
xor
inc
sub
xchg
pushf
cwtl
imul
push
jno
dec
push
aas
push
mov
in
rorb
mov
jne
test
test
jbe
sti
push
xor
sub
pop
add
popa
icebp
cli
mov
inc
scas
fisttpl
inc
add
or
sub
ss
mov
xchg
iret
bound
push
sbb
repnz
and
pop
xor
mov
or
pushl
and
or
push
add
scas
xor
gs
cld
push
dec
cmp
and
pop
and
pop
pop
das
sti
dec
pop
inc
mov
push
lods
rclb
and
add
and
imul
adc
rorl
mov
pop
dec
lcall
mov
mov
xor
icebp
insb
std
imul
fs
repz
sbb
aaa
ror
jno
mov
pop
imul
push
adc
xor
out
test
pop
jae
jp
insb
pop
pop
and
sbb
adc
lret
sub
add
pop
push
stos
and
fst
insl
lret
pushf
dec
add
inc
clc
pop
jge
mov
or
mov
sahf
jge
pop
inc
add
sub
add
jmp
sbbb
or
adc
inc
sbb
int
ret
mov
sub
popa
shlb
jle
pop
or
pushf
push
adc
xchg
dec
add
shlb
and
add
and
xchg
out
pushf
int
mov
iret
jmp
loopne
jno
jne
mov
xor
mov
inc
mov
cltd
stc
ss
faddl
xchg
dec
add
jp
cmp
push
lret
cmp
mov
testl
push
jo
leave
or
aad
stc
mov
pushf
addr16
or
js
mov
std
je
rcll
arpl
sub
dec
outsl
push
in
loope
dec
push
adcl
cltd
stos
nop
movsb
cmp
out
mov
aam
adc
sub
arpl
jl
lods
ja
lods
xchg
or
push
stos
cmp
sbb
stos
andb
mov
xchg
mov
jle
mov
stos
push
push
orl
les
jle
repz
or
and
mov
bound
cltd
or
call
sub
sahf
movsb
push
fwait
sub
aad
dec
imul
pop
test
cs
push
movsl
mov
fsubp
sub
mov
cwtl
clc
ja
dec
cwtl
es
push
xchg
jmp
and
cmp
das
push
addr16
cmp
cmp
mov
outsb
shrb
inc
ljmp
jg
scas
addr16
xor
nop
rcll
into
add
lahf
cmp
or
hlt
lret
js
cmp
inc
add
mov
scas
xchg
jge
shrb
xchg
cmp
lea
xchg
stos
dec
cmp
iret
lds
pop
mov
in
add
mov
pop
or
outsb
sahf
imul
push
and
add
pop
and
inc
icebp
jle
xlat
jns
mov
fsts
add
jnp
mov
mov
enter
mov
dec
ret
push
push
push
xchg
push
xlat
stos
jecxz
add
cmp
testl
adc
mov
mov
rol
sti
inc
mov
ljmp
jb
cmc
cs
bound
adc
cmpl
sbb
sub
das
mov
jne
aas
imul
fs
push
adc
scas
fidivl
adcl
arpl
loopne
dec
fcoml
lods
dec
inc
hlt
pop
xor
push
or
frstor
cmp
lcall
push
stc
sub
jbe
and
xor
in
rol
xchg
imul
movsb
cvtdq2ps
sahf
loopne
cmp
mov
fists
xchg
mov
dec
pop
and
nop
cld
xchg
in
in
stos
cwtl
notl
jp
pop
and
add
and
or
jns
iret
imul
mov
xchg
idivb
xchg
icebp
popf
push
repz
dec
jle
inc
xor
jo
xor
int
or
xor
mov
add
jb
jo
mov
shrl
add
sti
add
xchg
ret
jb
das
push
out
pop
stos
into
xchg
mov
jb
push
repnz
mov
movzbl
dec
push
js
xor
and
dec
jmp
push
jns
test
out
out
fwait
cmp
mov
inc
pop
cltd
scas
sub
stc
dec
adcb
imul
lea
mul
jnp
fimull
aaa
sub
daa
mov
icebp
mov
lret
inc
int3
mov
fsubrp
fists
pop
out
rcrl
insb
fcomp
test
add
stos
ret
xchg
pusha
jns
scas
addr16
adc
std
and
cmc
add
repnz
sbb
popa
or
icebp
push
xor
mov
ja
mov
dec
ss
icebp
int3
pop
mov
fdivrs
adc
mov
cwtl
jmp
repz
rorl
push
or
or
popf
lods
dec
sti
add
ljmp
sbb
sarb
movsl
inc
jbe
fisttpl
mov
repnz
push
push
xchg
sub
rorb
cmc
adc
lret
or
enter
push
sbb
call
shlb
daa
sub
dec
and
sahf
imul
and
repz
rorb
mov
imul
popf
int3
push
fcmove
mov
xchg
sub
jp
popa
cmp
popf
sbb
cwtl
and
sub
push
dec
push
xchg
mov
shl
add
mov
popa
pop
fpatan
pusha
and
jae
leave
adc
jne
xor
xchg
scas
sub
xchg
shlb
mov
fcmovnb
jno
iret
cmovnp
sbb
xchg
inc
mov
mov
ds
cmp
and
xchg
js
loop
jle,pn
shll
sahf
sbb
outsl
out
dec
into
xchg
sbb
mov
inc
pusha
push
popf
cs
loopne
lods
mov
push
shrb
mov
push
or
loop
imul
data16
cld
loop
stos
pop
mov
xor
roll
lods
pop
sbb
xor
pop
das
ret
sahf
push
mov
mov
xlat
repnz
or
daa
cwtl
push
inc
sbb
xchg
outsb
lcall
cltd
aaa
xchg
repz
mov
aam
pop
into
pop
rclb
cmp
mov
cmp
jle
inc
xorb
scas
popa
fs
lcall
inc
mov
pop
mov
pop
insl
andl
aad
cmp
inc
mov
mov
and
arpl
dec
out
mov
es
scas
mov
jne
inc
cmp
outsl
in
dec
pop
and
cmp
push
pop
iret
iret
ret
dec
sarb
xchg
clc
cmp
cmp
ficomps
test
sub
and
mov
dec
push
and
push
nop
xchg
push
sbb
mov
xchg
mov
sub
inc
loope
popa
out
into
and
dec
xchg
mov
mov
xchg
mov
inc
data16
mov
or
mov
iret
into
in
push
test
cli
sahf
in
xor
adc
call
push
sbb
stos
lea
testb
sbb
aas
adc
outsl
sahf
shrl
cli
loopne
push
clc
dec
add
sbb
jo
push
nop
clc
sub
and
outsl
pop
mov
mov
ljmp
enter
mov
mov
pop
mov
arpl
cmp
jge
mov
mov
mov
push
test
fdivs
mov
rep
inc
in
cwtl
stos
sbb
xchg
cld
in
push
xchg
xchg
inc
out
jg
shll
dec
and
in
movsl
daa
jle
push
movsb
lcall
imul
push
dec
in
sti
jbe
push
data16
hlt
pop
out
addr16
adc
push
inc
sbbl
and
pop
stc
jb
insb
jle
roll
jns
lock
add
scas
insb
in
mov
inc
fs
inc
movsl
xor
push
jnp
push
cmp
xor
ret
mov
cmp
test
repz
xorl
mov
sub
das
or
or
movsl
test
cs
cltd
xor
inc
jmp
xor
cmpsb
insl
aad
jmp
gs
pop
mov
ret
lcall
and
mov
aam
pop
mov
xchg
lods
xchg
mov
mov
in
xor
in
adc
sub
mov
adc
and
enter
cmpsb
jbe
add
inc
pop
sub
aaa
xchg
jp
pop
cmp
popf
sub
cwtl
pop
cmp
mov
in
pop
mov
jl
adc
mov
add
inc
addr16
fcoms
sub
jae
sub
es
scas
adcb
js
stos
sub
add
lret
test
push
fs
or
cmc
repz
test
cmp
inc
mov
in
pop
pop
inc
pop
push
addr16
test
mov
mov
adc
lods
pushf
dec
sub
loope
push
jp
fistps
mov
cwtl
mov
mov
mov
jae
jbe
fwait
or
out
stos
adc
dec
adc
in
push
mov
or
bound
mov
cld
scas
or
jae
mov
mov
out
push
pop
lahf
aam
adc
stc
add
ja
lret
iret
das
fists
enter
outsb
test
push
arpl
pop
out
sbb
mov
jle
sub
jae
imul
je
aas
push
loopne
lcall
int
inc
push
xor
cmp
loope
add
pop
loop
dec
clc
adc
lods
mov
xchg
std
cltd
inc
inc
sahf
psrad
ja
sbb
adc
sbb
les
pop
mov
xor
sub
mov
stc
push
xchg
xchg
lds
movb
adc
adc
jmp
xor
mov
mov
and
shlb
mulb
aas
pop
lret
push
and
icebp
mov
xor
sahf
lods
jge
mov
mov
loopne
lea
shl
mov
shr
inc
push
mov
daa
pop
dec
aaa
stc
cli
push
outsb
je
push
std
enter
mov
sbb
pop
ja
cltd
push
out
push
push
jmp
shr
push
aaa
shll
loopne
dec
sbb
push
and
insb
adc
fisubl
mov
and
arpl
push
popf
or
leave
add
ss
sub
enter
jno
xor
pop
mov
mov
or
cmpsl
dec
or
add
jo
jbe
lea
push
stos
fs
fs
jg
les
aam
stos
js
or
or
es
pop
cmc
cmpsl
xchg
inc
push
pusha
cmc
dec
das
flds
movhps
pop
out
cmc
inc
mov
cld
es
push
push
sbb
mov
into
mov
mov
test
sub
xchg
std
pusha
add
xlat
in
dec
loopne
sbb
in
dec
cmpsl
je
repnz
pop
lahf
pop
xchg
enter
lret
jmp
xchg
scas
sbb
xor
test
mov
out
bound
mov
xchg
into
dec
jecxz
testb
movsb
popa
mov
ret
dec
add
lea
dec
lods
aas
jl
mov
sub
aas
jl
xchg
test
cld
jno
insl
push
sbb
xlat
push
int
lret
xchg
dec
in
xchg
add
icebp
xor
add
adc
inc
lods
out
cmp
pop
scas
xor
je
shr
pushf
fwait
shl
mov
and
lcall
mov
mov
int3
insb
xchg
popf
push
push
xchg
xor
add
hlt
jno
adc
lock
test
cwtl
and
arpl
pop
daa
dec
sti
sub
int3
leave
cld
sub
jbe
mov
roll
addr16
mov
or
xor
xor
push
xor
dec
enter
mov
mov
jno
inc
stos
popa
sbb
push
rcl
mov
and
fildl
fldt
pop
mov
ja
jge
and
loopne
insb
add
xlat
jle
pop
pushl
and
std
outsb
jo
movl
sbb
mov
jae
xchg
into
mov
xchg
dec
xchg
movl
andl
sub
dec
jmp
stos
sbb
into
test
pop
cli
pop
icebp
cli
and
jb
insl
inc
aad
movsl
sbb
pop
mov
inc
pusha
mov
out
pop
idivl
jns
test
ret
loope
mov
imul
out
pop
mov
stos
mov
cmp
jnp
dec
test
push
sub
imul
add
aaa
fistl
jbe
and
and
push
mov
mov
mov
dec
dec
rolb
dec
arpl
bound
pop
jnp
mov
mov
inc
push
movsb
aaa
cwtl
add
cld
shrl
notb
ret
enter
mov
sub
mov
insb
inc
ret
enter
loop
scas
inc
lret
stos
bound
pusha
cltd
leave
testl
dec
ficompl
dec
or
cmp
or
cwtl
out
push
aaa
inc
pop
and
inc
ja
push
push
loope
mov
adc
push
or
fmuls
inc
insl
jbe
push
rclb
and
test
sbb
inc
cmc
and
addl
negb
cmp
jno
add
daa
lock
leave
and
pop
lock
or
lret
cmp
arpl
add
je
adc
inc
inc
fwait
or
push
std
inc
jnp
shrl
mov
cwtl
and
fs
or
hlt
fs
dec
adcl
std
out
adc
mov
js
inc
out
dec
loop
sub
or
pop
in
push
inc
sbb
inc
xchg
adc
dec
popa
add
jbe
add
popa
shlb
push
xor
lret
add
push
sbb
pop
bound
nop
mov
aas
jg
ss
pushf
mov
jge
inc
mov
aam
cmpsl
sub
push
mov
sub
mov
xchg
je
add
sub
repnz
mov
sub
xchg
adc
fidivl
sahf
sbb
or
pop
jae
adc
xchg
sbb
adc
dec
xchg
jmp
lahf
sub
scas
xchg
aaa
mov
adc
mov
cmp
mov
cwtl
imul
jne
lock
fwait
mov
cli
xorb
jecxz
in
dec
add
imul
cmpsb
repnz
dec
jno
ret
pop
aad
stos
pop
test
push
test
push
sbb
inc
es
push
inc
fs
xchg
sbb
fcmove
or
cmp
push
sub
scas
ds
xchg
stos
cli
or
in
jne
cmp
ds
lcall
add
jge
leave
lods
dec
xor
xchg
mov
sbb
xchg
fcomps
test
movsb
mov
cs
scas
mov
imul
and
push
fisubrs
inc
push
dec
enter
fiadds
test
mov
pop
fisubs
es
xlat
aad
mov
shll
iret
mov
pop
cmp
test
and
mov
cltd
jle
loope
std
push
out
mov
add
stos
inc
loope
lret
mov
jne
and
call
hlt
cmc
idiv
jg
pop
pop
dec
rclb
iret
sar
pop
adc
mov
sbb
push
fstpt
mov
pop
lret
fidivs
push
pop
sub
aad
in
popa
jno
or
xchg
or
mov
jle
or
fmul
cs
sub
sbb
mov
or
jo
cs
js
push
js
pusha
loop
push
addl
sub
pop
and
inc
icebp
jne
push
push
or
mov
shrb
aas
test
pop
xor
bound
and
sti
mov
arpl
icebp
fstpl
push
push
cltd
push
insl
inc
les
and
inc
inc
jo
and
jae
sub
jmp
mov
pop
dec
xchg
es
add
mov
and
jle
sahf
inc
adc
xchg
sub
adc
and
test
into
jp
clc
addb
ljmp
repz
xchg
enter
xchg
imul
mov
adc
adc
imul
adc
cmpxchg
sub
xor
xchg
out
xor
ljmp
mov
adc
xor
stc
aas
mov
pop
into
or
sbb
cli
push
scas
outsb
jecxz
pusha
in
xchg
pop
mov
mov
sbb
push
pop
jmp
cmp
mov
nop
pop
push
xchg
jae
pop
mov
in
fisubl
jbe
stos
clc
or
hlt
subb
mov
xchg
adc
in
mov
stc
add
jmp
adc
roll
mov
shll
or
or
loopne
jp
jnp
push
out
add
in
pusha
nop
mov
jp
or
jbe
rorb
into
sub
call
dec
das
inc
xor
xchg
fadd
push
xor
test
and
jmp
fidivrl
sbb
dec
rclb
dec
push
aas
mov
call
imul
pop
sub
and
adc
dec
test
add
sbb
adc
rcrl
lret
imul
mov
ret
pop
or
mov
pop
mov
notl
inc
cs
dec
movsl
jno
mov
mov
and
xor
sbb
pop
add
lods
dec
into
mov
daa
jnp
push
fwait
daa
out
or
inc
jle
rorb
mov
mov
pop
ret
pushl
lahf
and
jb
pop
jecxz
and
inc
inc
mov
jo
scas
xchg
fprem
pop
adc
jo
push
sub
sti
jmp
pusha
cli
xor
jmp
cmpsl
cli
les
push
xchg
ret
push
shlb
adc
xchg
adc
mov
xchg
cmp
shrb
je
or
inc
int3
push
pop
into
xor
call
popf
lea
mov
hlt
push
mov
nop
dec
rorb
xlat
imul
pusha
les
mov
push
jmp
jbe
arpl
pop
fwait
shl
das
cmp
subl
and
inc
dec
loope
lahf
pushf
xor
and
inc
add
adc
mov
or
popa
jl
pop
cmc
push
mov
pop
pop
xor
in
mov
jno
mov
xchg
push
out
dec
sbb
push
and
imul
in
or
insb
pusha
inc
push
add
test
stc
in
sar
insb
inc
xchg
outsl
inc
mulb
mov
movsl
shr
int
lahf
push
gs
push
out
jge
cli
adc
xchg
inc
push
mov
pop
sub
cmp
add
int
out
pop
dec
pop
std
mov
fistpll
stc
mov
mov
nop
sub
and
clc
outsl
or
das
jno
shll
push
aad
decb
xchg
and
mov
dec
outsl
cmp
or
cmp
test
pop
leave
repz
jg
xchg
daa
insl
push
jno
inc
ret
mov
lock
sahf
stos
pop
js
roll
mov
rolb
mov
clc
jnp
inc
adc
shll
jge
nop
sbb
das
dec
addr16
sti
mov
sbb
add
daa
sub
ss
pop
jmp
lret
rolb
sbb
cmpsb
mov
in
lock
mov
iret
mov
sbb
xor
jecxz
orb
icebp
dec
adc
push
cmpsb
xor
and
xor
inc
lock
sub
pop
js
mov
jno
sarl
movsl
xor
xchg
inc
sahf
cmp
movsl
imulb
pop
fwait
or
jecxz
insl
lcall
push
or
js
seto
add
or
jecxz
cmpsl
mov
shrb
jo
fucom
and
das
jae
outsl
filds
mov
pop
xlat
sub
mul
test
jmp
mov
xor
mov
sbb
or
mov
cmp
push
out
mov
push
push
fldcw
inc
subb
mov
sbb
jno
inc
or
jne
stos
adc
mov
in
jmp
add
xor
ljmp
and
icebp
pop
mov
dec
inc
jmp
out
lock
cld
mov
in
xchg
and
jl
adc
loopne
daa
sbb
dec
mov
xchg
mov
scas
sub
xor
mov
pop
jae
and
cmc
stos
andb
jg
lods
fimuls
xor
jle
pop
repz
add
fdivl
aad
subl
dec
pop
mov
xchg
jae
mov
xor
adc
mov
mov
fs
sbb
mov
jb
mov
lahf
add
fs
jnp
int3
jno
loope
mov
push
ret
xor
loopne
lahf
xor
jnp
imul
mov
les
lds
mov
xchg
xchg
sti
inc
insb
xor
cmpb
cmpl
cmp
push
xor
addb
scas
out
push
fbld
lods
daa
adc
push
cmpsl
sbb
xchg
inc
xor
jecxz
sbbb
sub
inc
popl
push
cmpsb
movsl
scas
pop
mov
mov
dec
pop
xchg
pop
dec
outsb
ljmp
jl
fadds
mov
xchg
mulb
pop
mov
inc
inc
addb
mov
popf
shrb
clc
inc
push
xchg
das
mov
repnz
out
pop
hlt
add
mov
jle
roll
lods
lock
inc
cmp
jo
leave
clc
pop
fnstenv
and
dec
add
inc
lock
push
mov
add
pop
repz
loopne
xchg
nop
mov
scas
cld
xlat
add
and
lret
inc
daa
addb
xchg
cmpsl
les
xchg
push
std
or
fsubs
int3
test
rol
lret
call
out
popa
leave
rorl
rolb
push
cld
pop
jno
xor
ljmp
pop
out
push
rcl
scas
test
fnstsw
in
int3
stos
iret
sub
iret
cltd
mov
cli
add
loopne
in
mov
jnp
pop
mov
pop
inc
iret
xchg
fs
fmuls
mov
pop
xchg
xchg
sub
int3
push
mov
add
sbb
bound
hlt
popa
bound
out
lea
andl
jmp
cmp
mov
aad
jnp
dec
xor
dec
sub
push
and
jp
xchg
bound
and
add
iret
jmp
pop
mov
inc
fs
pop
sbb
fdiv
roll
pop
and
dec
xor
dec
hlt
lock
dec
lds
or
jl
out
imul
shrb
sbb
jae
mov
push
xor
jno
dec
inc
mov
adc
incl
push
lock
movsl
and
lret
jb
mov
loopne
cmp
cmp
gs
cwtl
andl
and
shrl
andb
insl
push
flds
pop
xchg
push
cmp
pop
cmpsb
popf
subb
cmp
das
add
xchg
arpl
movsb
lret
popa
ficomps
mov
decl
push
push
in
inc
stos
mov
inc
push
rclb
jmp
orl
cmpsb
and
xchg
loopne
xor
sbbl
push
xor
sti
add
daa
scas
adc
andl
lock
sub
add
sbb
xor
fcoml
jmp
jne
ds
leave
mov
cmpsl
cmp
add
lds
or
cmp
clc
sbb
cmpsb
loop
or
cmc
pmullw
mov
out
stc
mov
subb
mov
int3
adc
ja
push
jnp
inc
fwait
mov
add
inc
fwait
pushf
jne
add
xor
outsb
xor
ljmp
cmpsb
xchg
mov
adc
xor
loope
lret
sahf
xor
fdivs
adc
jg
mov
bound
enter
push
paddsw
stc
loopne
push
ljmp
mov
leave
mov
or
les
mov
les
insb
mul
enter
aas
das
lods
add
inc
ss
pop
out
into
out
es
xor
mov
lods
xchg
sub
fistl
divb
dec
inc
inc
test
xchg
and
jecxz
xchg
ror
aad
sbb
jp
mov
arpl
sbb
pop
fs
cmp
mulb
xchg
jno
je
inc
xor
lods
xor
xor
lret
mov
dec
movsl
mov
loopne
pop
test
mov
jmp
inc
mov
xchg
xor
adc
inc
cwtl
cmp
pop
mov
arpl
outsb
and
adc
xorl
dec
lahf
jp
js
xor
dec
sbbl
inc
rol
test
fnstenv
pop
scas
push
and
out
xorl
push
cld
fisubl
inc
sub
aam
mov
jnp
sahf
mov
xchg
fadd
jne
inc
testb
xchg
cmpl
ljmp
jmp
push
or
mov
mov
cmpl
jl
iret
push
adc
jmp
sbb
push
outsl
lds
mov
in
push
dec
cmp
dec
mov
aas
orl
pop
out
ja
fwait
lds
testb
cmpsl
neg
scas
out
cmp
jo
stos
scas
mov
gs
in
jb
imul
dec
and
jmp
xchg
cmp
lahf
fildl
or
subl
cmpsb
ljmp
cwtl
cwtl
movq
push
cmpsl
rolb
fnsave
push
jno
and
fadd
das
into
push
mov
xor
insl
fisubrs
and
cwtl
cld
mov
push
dec
fsubp
jecxz
in
mov
sub
and
stos
and
mov
jb
cltd
cwtl
aam
cmp
test
dec
sbb
shll
or
xchg
aas
fs
xchg
pop
cmpsl
mov
xor
pop
sbb
cmpsb
fldcw
xor
loopne
mov
cmp
lds
add
ja
movl
sub
int3
push
inc
push
test
jmp
or
stos
pop
mov
test
xchg
outsl
jp
fwait
pop
lds
inc
test
fstp
xchg
inc
xchg
sbb
mov
sbb
popl
adc
rclb
and
mov
pushf
lods
rolb
nop
or
pop
cmc
cmpsb
pop
pop
inc
hlt
addr16
dec
inc
jl
push
lret
cmpsl
pop
rcrl
pop
mov
add
ret
sti
cld
out
xor
mov
adc
fcomps
add
mov
push
leave
mov
outsb
icebp
pop
fistl
sbb
mov
inc
jb
lret
in
lock
loopne
and
rcll
jb
fisubs
push
into
mov
xchg
mov
dec
int
and
and
jle
rorb
sub
sbb
enter
push
cwtl
pop
data16
dec
in
jmp
sub
ret
jmp
jo
or
and
pushf
pop
data16
xchg
xor
lgs
jb
add
sbb
dec
mov
rorl
out
or
mov
pop
rcr
sub
lret
pop
rol
or
cmp
sahf
in
dec
cmp
test
cwtl
lret
ja
jp
cmpsl
mov
lods
std
mov
leave
sahf
push
lret
push
lret
ja
or
cmc
icebp
dec
pop
fcoms
xchg
out
mov
aaa
or
push
lahf
mov
dec
mov
call
andb
push
or
or
mov
rclb
cmp
jle
lcall
das
cld
fdivs
push
push
repnz
jge
lahf
xchg
insb
mov
jbe
shrb
imul
repnz
xor
out
stc
pop
mov
rcr
test
xchg
cltd
popa
push
stos
pop
scas
cs
movsl
notb
and
inc
or
out
sete
int
out
mov
push
insb
cmp
sbb
adc
mull
xchg
int
sub
push
das
imul
jl
daa
push
push
xor
lret
mov
push
pop
shlb
out
jp
flds
pop
loopne
leave
lcall
pop
fisubrs
pushf
mov
xchg
clc
mov
incb
jl
lret
fs
mov
stos
xchg
mov
data16
inc
and
inc
outsl
js
out
xchg
cmpsb
cmp
call
jmp
pop
imul
and
jb
jmp
xchg
cld
push
sub
adc
mov
mov
idivb
dec
push
scas
daa
mov
dec
aad
pop
push
cs
out
hlt
jno
mov
add
out
call
cmpsb
adc
push
push
mov
jnp
push
test
jns
or
and
push
jge
insb
xchg
jno
mov
sahf
in
dec
in
out
or
in
mov
aam
xor
cmp
cli
jp
xchg
mov
jne
or
lcall
loop
push
push
dec
adc
out
or
stos
mov
les
or
push
adc
loopw
mov
jbe
sbb
xorl
nop
and
sbb
sub
sub
outsb
out
xor
leave
push
xor
xlat
push
out
das
idivl
je
lock
inc
mov
cmc
repz
and
lods
out
add
sbb
loop
or
pop
loopne
adc
jmp
je
cmp
jl
insl
scas
xor
testb
out
and
xchg
sub
push
std
mov
and
sub
xchg
inc
loopne
jo
aaa
gs
adc
cmpsl
jecxz
rolb
dec
dec
lock
movsl
pop
aaa
xchg
add
cmc
lret
in
cmpsb
sub
mov
jne,pn
jne
roll
xchg
loopne
ret
adc
add
add
jno
icebp
and
push
shld
cmp
fwait
pop
scas
push
pop
ljmp
pop
testl
xor
or
jg
rcrl
js
sub
lock
mov
stc
movsb
cmpb
mov
xchg
cmpsl
pop
ret
pop
push
ljmp
out
push
xchg
sahf
sar
inc
or
ret
sub
stos
add
scas
mov
adc
popf
xor
mov
icebp
pop
leave
add
mov
js
or
jl
sarl
sbb
popa
hlt
pop
nop
sti
stos
inc
cltd
adc
dec
xchg
fcomps
in
sarl
stos
ret
push
ret
aam
sub
in
dec
frstor
fdivr
movb
orb
dec
jnp
or
cltd
loopne
jne
mov
sub
fldcw
inc
stos
sub
push
cltd
mov
rcl
and
imul
rorb
jle
in
add
insb
xor
outsl
cli
mov
call
lods
xor
jae
shrd
push
icebp
xchg
andb
jge
inc
jle
imul
sub
cmp
popa
mov
cmpsb
jmp
cltd
mov
sbb
add
adc
pop
lahf
xor
mov
fidivl
stos
xchg
cmp
ljmp
and
push
hlt
data16
loopne
test
orl
sub
mov
fcomps
js
cmpsl
sub
jne
jno
je
mov
aad
jge
mov
fiadds
cld
add
inc
jns
pushf
add
enter
mov
xchg
ss
xchg
in
in
stos
cmp
jmp
sub
cmpsb
push
gs
and
push
mov
and
pop
xor
and
mov
xchg
dec
mov
fmul
sbb
jg
out
gs
dec
call
mov
mov
and
insb
aas
je
mov
mov
and
cmp
lea
or
mov
pop
adc
sub
mov
loop
push
push
add
xchg
cltd
aaa
repz
jno
push
test
je
push
cltd
sub
popf
sbb
jo
arpl
mov
ljmp
mov
in
pop
or
mov
out
test
mov
test
in
jns
pop
jg
enter
sbb
aam
cmp
pushf
adcb
icebp
push
sub
pop
mov
pop
xor
iret
loope
jmp
mov
filds
int3
mov
cltd
inc
push
sbb
sbb
test
push
cmp
lcall
std
cwtl
dec
stos
gs
shrl
push
add
arpl
push
inc
jns
mov
mov
fldl
rol
in
aam
sub
cwtl
insb
xchg
pop
mov
ds
jbe
imul
rcll
inc
testb
pop
mov
test
ja
sbb
or
sub
cmp
sahf
pop
shlb
popf
pop
stc
adc
mov
jnp
mov
push
or
push
inc
mov
xor
mov
arpl
add
add
call
mov
jne
adc
mov
inc
ds
add
dec
lret
mov
cmp
imul
fsubrl
or
xchg
jno
arpl
adc
jg
mov
push
add
push
into
and
xor
mov
gs
shl
shrl
test
or
push
inc
pop
jne
xlat
pop
pop
mov
mov
lret
xor
inc
xor
mov
cmp
insb
push
dec
adc
or
mov
stos
jg
dec
xchg
test
out
jae
mov
ljmp
lods
int3
das
cmp
and
mov
int3
inc
cmp
negl
lods
xor
ss
das
add
add
icebp
cmpl
pop
mov
xchg
movsb
push
fsubs
or
clc
cmc
fdivl
fwait
cwtl
push
pop
inc
sbb
dec
fistpll
cmc
movsb
pop
cltd
xor
mov
xchg
je,pn
sub
dec
das
xor
xchg
std
pop
adc
in
int3
push
adc
movsl
stos
inc
sbb
dec
cltd
test
call
test
bnd
ret
shl
movsl
ret
push
xor
pop
lret
fstps
jecxz
popa
inc
aad
sbb
add
icebp
cmc
and
adc
lds
mov
rclb
push
mov
mov
push
push
pop
jle
call
jnp
mov
test
into
push
sub
mov
aad
push
jecxz
pop
les
imul
jne
mov
jns
rcrb
loope
sarb
shl
iret
xchg
pushl
dec
out
pop
jmp
dec
rorb
xchg
out
xor
xor
xor
add
popf
mov
jns
pop
ret
js
mov
adc
fst
incb
js
xor
jge
ficoms
rolb
inc
push
and
mov
cmp
add
fucomi
push
fistps
in
movl
stos
jmp
xor
and
sbb
aaa
dec
sti
decb
mov
pop
fwait
bound
test
jp
sub
push
xor
cmp
push
pop
and
jecxz
mov
out
outsl
jb
mov
mov
xchg
add
mov
push
add
mov
jp
mov
aaa
fdivrs
call
jb
jo
and
repz
mov
ret
dec
cmp
mov
mov
mov
stos
and
nop
jae
pop
in
jg
pushf
dec
sbb
lahf
fldt
adc
push
insl
lock
add
cmp
imul
in
ret
add
sbb
mov
fmul
mov
icebp
dec
rclb
nop
ret
mov
jnp
mov
add
mov
add
xor
lods
push
bound
mov
add
xor
hlt
xchg
repnz
sbb
xchg
jno
call
mov
pop
shrl
push
mov
xor
xor
jp
in
in
pop
and
rcrb
mov
mov
push
add
add
out
into
and
sbb
sbb
mov
push
or
fbld
push
jle
sbb
mov
pop
xor
ds
movsl
pop
mov
or
mov
xor
mov
sub
jecxz
into
xchg
cmp
fdivrs
pop
add
loop
test
int
xor
popf
pop
jno
push
pop
mov
mov
pop
xchg
mov
mov
xchg
mov
movsl
sbb
pop
arpl
inc
sub
out
cmp
sub
inc
dec
sarb
ds
cltd
mov
lea
call
push
mov
sahf
in
cmpl
cwtl
movsb
adc
test
cmp
push
jl
mov
push
and
mov
dec
push
mov
daa
jbe
in
add
pop
inc
stos
xor
dec
xlat
mov
pop
push
xor
push
xchg
push
loope
sbb
jnp
divb
sbb
arpl
xchg
inc
adc
loopne
mov
lds
pusha
xorl
out
clc
dec
fmuls
ljmp
repnz
repz
xor
stos
push
cmp
out
sbb
outsl
cmpsl
into
dec
filds
in
and
bound
outsl
pop
or
dec
pop
fstpt
sbb
roll
sbb
add
xchg
addb
clc
into
ljmp
bound
cmp
sbb
shll
mov
jp
imul
and
xchg
cmp
sub
mov
andl
mov
imul
scas
bound
push
ficoml
push
or
lret
sahf
dec
cltd
fwait
xor
rcrl
jp
fisubrl
cmp
sub
or
inc
pop
push
shll
js
add
int
sub
sarb
dec
insl
stos
mov
loop
ret
mov
sarb
ret
fbstp
sbb
sub
out
in
and
leave
ds
fimull
cmp
mov
mov
test
out
enter
sub
add
push
dec
and
jge
push
pop
out
push
sarl
push
push
outsb
arpl
push
cmpsb
pop
ret
mov
aad
fsubl
mov
jns
xchg
mov
pop
cmc
loopne
sbb
pop
cli
mov
inc
jno
mov
mov
repnz
sub
xor
sti
pop
pop
scas
sbb
pop
repnz
fcmovb
les
cs
sbb
or
cmp
repnz
repnz
jmp
push
and
arpl
lods
js
lock
fmuls
push
ret
cwtl
mov
adc
xor
lahf
pushf
jecxz
insb
push
rcrl
adc
out
in
and
jl
xchg
fsubl
into
daa
cwtl
mov
pop
inc
jbe
jae
dec
and
dec
jl
jne
mull
xor
push
mov
or
jno
adc
cmp
jno
stos
adc
enter
sti
mov
cmp
ds
jbe
push
test
sub
test
stos
lea
pop
mov
cmp
popa
fildl
adc
jnp
cmp
push
dec
xchg
xor
sarb
cltd
shll
xor
jp
in
mov
stc
xchg
loopne
xchg
mov
les
addr16
lcall
js
adc
mov
pop
out
lock
xchg
xor
mov
out
insl
sbb
fldenv
addr16
movsb
add
xchg
mov
in
in
mov
clc
gs
inc
insb
sbb
add
scas
ror
jle
daa
jae
push
std
mulb
mov
push
push
ret
imul
es
mov
rcrb
mov
hlt
or
out
test
cltd
movsb
mov
jecxz
int3
xor
fs
in
testb
or
mov
xor
pusha
ret
les
stos
test
imull
mov
sbb
lds
pop
lods
mul
push
jb
lds
pop
mov
es
mov
dec
push
mov
fcoms
jb
xor
jl
ja
and
mov
pushl
not
in
aas
or
psrld
mov
shrb
pop
dec
sar
lret
or
imul
ljmp
out
loope
sbb
les
xchg
test
sbb
pop
aad
pusha
rorb
sub
orb
cmpsb
sbbl
jge
ret
fs
repnz
shlb
push
dec
inc
in
repz
sub
std
insl
inc
sub
fdivp
leave
inc
shrb
aas
pop
fmull
cmpsb
push
jne
dec
pop
mov
ficoml
ret
cmp
inc
mov
sub
push
loopne
adc
and
divb
mov
jge
mov
push
insb
imul
add
filds
pushf
dec
mov
xor
push
int3
out
push
xor
je
mov
aad
xor
lret
mov
sub
lcall
cmpl
sbb
xchg
roll
test
adc
es
mov
jle
out
mov
adc
daa
adc
and
stos
and
rcll
sbb
std
cmc
stos
push
cmp
cld
lea
jg
adc
bound
test
in
jne
jns
mov
loopne
fldcw
jge
add
dec
paddb
sub
cwtl
or
dec
adc
ret
jle
stos
pop
xchg
hlt
and
inc
or
out
cld
loope
repz
call
and
mov
and
adc
pop
push
inc
add
loope
js
mov
fwait
cld
cs
jb
fdivr
arpl
mov
pop
adc
cmpsb
dec
cwtl
rcr
mov
push
fwait
xchg
inc
add
lahf
int3
adc
mov
mov
fsubs
or
push
ret
sub
imul
insl
hlt
popa
xchg
fadds
inc
mov
loop
and
mov
jns
push
mov
imul
dec
and
lods
hlt
mov
sbb
test
mov
fsubrp
cld
scas
lods
mov
and
mov
rcrb
leave
push
xor
push
sahf
outsl
inc
sub
push
call
call
std
fsubrs
stos
rcrb
mov
push
cmp
inc
sbb
inc
push
pop
push
loopne
popa
repz
out
mov
ds
mov
call
dec
xor
jno
data16
popa
xor
int
dec
jle
icebp
int3
int
mov
dec
inc
push
sbbb
imul
fs
movsb
arpl
push
cli
loopne
cld
pop
loopne
je
lds
xor
push
fprem1
aam
cmpsl
mov
pop
adc
bound
mov
icebp
xchg
mov
clc
ja
rcrb
es
sahf
cmp
or
jg
arpl
imul
idivl
lock
push
scas
std
scas
in
cmp
out
push
mov
dec
cmp
loop
enter
push
adc
adc
jne
je
dec
pop
test
mov
jmp
fisttpl
rol
ds
testb
stc
add
and
leave
dec
sub
sub
out
push
mov
jns
cmpsl
add
shrl
dec
pop
xchg
mov
insb
cmp
sbb
mov
repnz
loope
loop
sti
jbe
mov
jl
inc
mov
add
push
xchg
inc
mov
and
bound
test
lea
xchg
cmp
sub
sub
xor
sub
mov
push
xchg
mov
mov
xor
lahf
inc
daa
jae
add
mov
decl
gs
mov
push
push
xor
pop
shrl
xchg
fmull
shl
outsb
and
jb
cmp
push
das
je
xor
out
mov
add
aad
or
in
push
data16
or
xor
movsb
dec
mov
out
pop
or
out
xor
mov
fisttpl
push
leave
mov
or
hlt
lea
mov
cmp
inc
sbb
mov
push
in
into
jnp
jl
or
mov
out
jnp
icebp
jle
and
push
jae
ficoml
pusha
nop
ret
mov
dec
xchg
sub
add
fisttpll
mov
dec
or
jg
rclb
mov
test
test
cli
inc
mov
mov
leave
or
imulb
xor
ret
pop
imul
fstps
xchg
rolb
sbb
and
lahf
ss
sub
movsb
push
test
movsl
int3
repz
push
mov
js
sarl
mov
inc
mov
fldl
cmp
aaa
sub
jnp
nop
push
mov
aad
stos
mov
cs
daa
jbe
in
cmp
and
test
in
std
decl
jge
sbb
jg
xor
push
sbb
dec
xchg
arpl
mov
or
daa
mov
pop
push
xchg
out
sbb
adc
xor
and
icebp
push
inc
or
lods
lret
jno
std
and
mov
in
rcl
jg
dec
push
xor
sub
test
daa
pop
lock
nop
adc
lcall
xchg
in
mov
test
add
cmc
jno
cwtl
xchg
mov
mov
adc
dec
sar
int
aas
cmp
dec
inc
sahf
gs
stos
adc
stos
lea
inc
jnp
lods
inc
push
dec
inc
int3
or
xchg
in
sub
or
or
out
out
outsb
dec
cmp
pushf
inc
mov
mov
push
rcll
out
dec
fists
shrb
dec
mov
imul
pop
sub
fisttps
daa
and
out
sbb
iret
lods
xchg
imul
xlat
call
addb
shll
ja
subb
cs
popf
and
jle
rorl
cmp
inc
xor
or
and
shrb
ficompl
mov
mov
push
cmc
dec
aas
loop
aaa
mov
adc
loope
sbb
imul
jl
movsl
jp
mov
and
jnp
pop
inc
icebp
orl
adc
and
adc
xchg
xchg
inc
add
inc
daa
jmp
xchg
cltd
xchg
sti
lods
in
stos
into
into
mov
adc
test
xchg
push
sbb
fwait
jbe
and
cwtl
lret
sbb
bound
ljmp
pushf
adc
test
lcall
sub
mov
add
dec
pop
push
and
push
stos
subb
scas
sti
push
mov
jns
jp
pop
xor
stos
js
inc
jg
mov
mov
inc
sub
int
inc
jnp
mov
and
divl
jmp
pop
rep
pop
xchg
xor
aas
std
dec
shlb
jg
icebp
jmp
movsb
ljmp
dec
xchg
and
mov
lret
xchg
mov
dec
stos
js
cmovns
jmp
adc
andl
cs
cmp
loop
pop
ss
push
lret
dec
cmp
bound
dec
js
repnz
push
add
mov
pop
sahf
pop
xchg
pushf
addr16
lahf
dec
mov
mov
arpl
xchg
inc
repnz
cs
mov
imul
inc
addb
jge
lods
jne
test
xor
adc
movsb
mov
mov
sub
dec
push
inc
mov
push
add
xchg
add
cli
mov
add
or
mov
cmpb
jmp
cmp
popa
cmp
call
xchg
inc
push
nop
outsl
mov
jge
sbb
sbb
inc
xchg
cwtl
into
pop
aam
jnp
ret
pop
xchg
rolb
pop
dec
adcl
stc
inc
in
arpl
popf
pop
stos
jmp
mov
or
enter
dec
mov
in
aam
mov
ljmp
pop
das
jle
mov
imul
cwtl
faddl
pusha
out
or
jmp
cmp
test
pop
sarl
outsl
in
fsts
mov
and
pop
sub
mov
int3
xchg
outsl
out
lahf
xchg
sbb
cmp
mov
sub
adc
sarl
mov
lods
add
add
filds
jl
sub
ljmp
cmpsb
push
xchg
jp
mov
cmpl
pusha
xlat
movsb
outsl
adc
mov
std
mov
lcall
cmpsb
adc
mov
imul
arpl
test
lea
mov
and
cmp
mov
pop
int3
mov
fimull
jns
jno
std
aaa
or
xchg
pop
call
mov
movsl
xchg
icebp
ss
stos
lods
les
fcom
and
inc
sub
movsb
fwait
jne
fwait
jns
fs
sbb
ret
filds
dec
aas
jae
jb
pop
in
test
les
imul
mov
jo
jg
cmp
jno
inc
jae
cmp
nop
sbb
clc
outsl
out
pop
add
movq
adc
mov
mov
test
mov
push
mov
push
pop
outsb
ret
pop
jne
cmpsl
push
lods
cmp
sbb
sbb
jecxz
aam
push
inc
dec
fwait
ljmp
dec
lock
sahf
fistl
sub
push
jle
mov
scas
push
jle
fidivrl
or
out
xor
and
inc
test
mov
test
shl
pop
call
ds
xchg
ret
les
std
lahf
inc
shrl
loopne
fsts
enter
scas
sahf
xor
push
xlat
arpl
or
inc
push
jl
adc
test
sbb
lahf
lock
mov
jns
out
cld
cmp
stos
sub
lock
mov
dec
adc
ficomps
push
sub
out
pusha
pop
inc
outsb
mov
outsl
idiv
add
fisubrl
fcmovne
shrb
pop
and
js
xor
mov
cmp
aad
scas
or
les
inc
mov
push
clc
jmp
lret
shr
push
in
inc
xchg
lods
mov
jl
sub
sub
mov
pop
dec
push
or
shl
fidivl
xor
sahf
imul
fmul
shrl
dec
mov
xor
xor
mov
or
xchg
push
fisubrs
mov
pop
jne
popf
inc
mov
sub
cld
xor
testb
mov
addr16
pop
test
inc
pop
mov
js
xor
and
mov
jmp
sbb
sar
pop
inc
je
nop
pusha
outsb
dec
xor
xchg
ljmp
pop
test
push
dec
adc
dec
sti
xchg
test
and
in
and
ret
cltd
inc
fidivs
sbbb
lods
dec
bound
testb
sub
lret
mov
jns
jge
sub
push
cmp
out
fdivrl
mov
xchg
mov
cmc
adc
sarl
mov
adc
jmp
pop
mov
lods
xchg
rcrb
xchg
adc
add
fsubs
lods
cwtl
cltd
inc
and
dec
push
cmp
or
aad
sbb
in
int
or
ss
adc
aas
dec
aas
popa
adc
dec
xchg
cmp
push
sub
movsl
jg
data16
mov
iret
xchg
inc
sub
pop
and
jb
sub
jns
outsb
repnz
xor
xchg
test
sbbl
jl
adc
sbbb
or
scas
add
push
xchg
pushf
sub
add
sub
testl
cld
outsb
gs
shrl
sti
fsubrs
adc
and
xchg
sbb
insb
mov
xchg
sub
int3
inc
data16
mov
in
jp
jecxz
sti
cmp
xchg
ja
mov
xor
popa
daa
pop
rcrl
jnp
add
inc
movsl
cli
xor
insl
mov
dec
xor
jbe
add
dec
xchg
nop
push
sub
push
lret
sub
idivl
jge
stos
je
add
roll
dec
mov
cli
fisubrs
mov
out
je
pusha
dec
inc
adc
imul
jmp
je
xor
cmp
push
add
push
jmp
aaa
push
and
mov
pop
and
stos
out
lock
cltd
daa
jbe
jb
in
cmc
jo
cmp
push
aad
mov
and
loope
aad
dec
xor
insl
stos
dec
les
mov
test
inc
cmp
lret
mov
mov
stos
loope
subb
adc
cltd
cmp
cli
negb
jmp
cwtl
sub
stos
inc
loop
adc
and
sti
push
popf
adc
sub
xchg
sub
or
dec
dec
adc
pop
cld
sub
mov
dec
nop
mov
sub
xor
out
lea
leave
inc
adc
aad
or
sub
mov
repnz
or
jge
enter
pop
fildll
add
in
stos
in
cld
cmp
sbb
and
inc
std
xchg
sbb
mov
imul
push
das
cmpsb
mov
cmp
push
js
pushf
mov
in
xor
add
sahf
sub
or
in
out
push
rolb
popf
loop
dec
pop
xchg
cli
hlt
dec
pop
mov
jg
push
adc
ss
add
jbe
sti
and
push
push
mov
in
ljmp
rorb
sahf
shrl
fildl
xor
out
mov
cmpsl
out
inc
mov
call
jo
pop
daa
fdivrs
jo
bound
cwtl
dec
cmp
pop
sub
je
mov
inc
cli
xor
jns
mov
pop
sub
mov
out
add
insb
ret
lock
clc
sub
pop
adc
and
xchg
arpl
pushf
ljmp
and
popf
add
iret
movsl
repz
push
scas
jnp
xchg
push
inc
mov
ja
pop
or
pushf
fucomip
mov
int3
sub
bound
mov
pop
mov
in
loop
sbb
sbb
dec
cmpsb
shll
pop
bound
das
paddusw
test
push
hlt
jne
std
clc
pop
call
decl
cmpsb
sbbl
repz
cmpsl
adc
push
pop
js
mov
add
mov
jl
mov
xchg
fsub
mov
nop
cmp
jns
sbb
or
pushl
addl
and
xchg
in
push
inc
add
popf
push
xor
sub
dec
shll
shr
mov
pop
fmul
and
sub
lods
xor
cmp
orl
loopne
push
mov
pushw
aam
loop
dec
cs
pop
xor
mov
movsb
cmc
imul
pop
pushw
cs
cmp
sub
pushf
pop
enter
push
push
add
or
je
stc
adc
lcall
jmp
cmp
pop
lret
push
mov
mov
cmc
js
fadd
jbe
mov
lret
xchg
sbb
cmpsl
xlat
stos
leave
mov
lods
ljmp
jo
fldcw
and
dec
and
adc
or
into
loope
and
mov
insl
das
fisubs
mov
cmp
sbb
out
inc
scas
push
bound
add
cmp
in
jge
cmp
mov
ljmp
jae
jno
xchg
scas
insl
lret
sbb
inc
call
pop
out
shll
ret
sbb
pop
orb
add
cmp
je
adc
decb
cmpl
xor
dec
mov
movl
cmp
test
lret
xchg
push
and
shlb
push
inc
add
xor
jns
push
pop
dec
cli
inc
out
ja
or
inc
aam
push
pop
addr16
bound
icebp
dec
cmp
divl
orb
out
and
jb
push
test
pop
out
sti
push
js
push
rcrl
cli
shll
repz
add
fadds
in
out
push
dec
jmp
sbb
movsl
dec
push
mov
inc
leave
cmc
std
dec
lds
push
cmp
leave
xchg
iret
jle
sub
xor
inc
stos
pmuludq
and
mov
mov
jno
jmp
inc
mov
xchg
xchg
std
xor
pusha
mov
aas
aaa
shrl
jae
sbbl
fistpl
fmull
push
push
lea
outsb
into
js
loopne
test
loopne
xor
ret
cmc
add
out
pop
fistpll
out
add
adcl
and
fsubp
push
leave
pop
adc
push
jb
jnp
cmp
in
lods
inc
sub
or
mov
inc
ret
rorl
push
adc
mov
enter
lret
mov
popf
mov
or
hlt
stos
in
fs
fidivrs
outsb
std
xor
or
jmp
aam
add
fcomp
cld
mov
mov
mov
scas
adc
lods
sub
sbb
and
pop
jbe
ret
jmp
or
jg
mov
jge
pusha
or
jmp
sub
ds
mov
mov
mov
add
xchg
imul
pop
std
paddd
and
inc
fldl2t
mov
add
pop
jnp
pop
mov
mov
scas
jb
sub
imul
cmpl
adc
scas
xchg
mov
das
xchg
aaa
rolb
push
imul
jge
vpunpckhdq
lahf
in
add
xchg
or
mov
sub
jo
scas
xchg
xlat
fdivrs
and
clc
push
lods
adc
xchg
push
cld
pop
iret
push
add
pop
xchg
out
lret
jae
lahf
cld
roll
jns
mov
cltd
jp
add
pop
lods
lret
inc
iret
sbb
add
push
push
sbb
sbb
jb
out
stos
jns
ja
loope
sub
ret
out
sbb
jg
mov
hlt
or
mov
dec
inc
or
out
test
pushf
mov
push
mov
dec
out
mov
in
sub
sti
mov
dec
jmp
cli
xor
ljmp
shlb
iret
xchg
imul
push
pop
adc
test
jne
or
push
sbb
scas
add
fsub
push
mov
movsb
sarl
in
lahf
aas
or
jne
js
inc
mov
rorl
icebp
pop
hlt
repz
jne
das
out
pop
repz
push
out
jle
mov
xchg
mov
mov
repz
jle
xor
fcoms
add
cltd
scas
push
ret
push
jae
sbb
mov
and
subl
cwtl
arpl
test
fcmovb
jmp
and
mov
icebp
lahf
mov
dec
mov
rcr
aam
sub
cltd
inc
cmc
mov
or
mov
call
mov
push
aam
mov
shrl
mov
sbb
adc
cs
sub
push
repnz
jae
push
dec
xchg
jnp
xlat
and
push
mov
push
push
fisubrs
adc
scas
mov
push
xchg
xor
int
mov
or
rcl
dec
ja,pt
movsl
jb
scas
sbb
or
pop
clc
mov
jo
movsb
jae
test
icebp
add
loop
cmp
xchg
inc
cwtl
dec
fnstcw
and
movsb
test
in
divb
aaa
scas
xchg
cld
push
sbb
std
xor
push
add
repz
mov
dec
push
or
lcall
adc
add
fwait
mov
push
mov
xor
push
popa
pop
xchg
je
movsb
adc
data16
lea
push
rclb
mov
clc
dec
mov
in
push
addr16
jl
mov
loop
and
and
sub
cwtl
or
icebp
mov
jnp
sarb
sub
mov
out
repnz
push
pop
mov
sub
lret
xor
cltd
pop
inc
push
lea
addr16
mov
mov
rorl
lods
push
mov
mov
and
mov
sub
or
imul
mov
fcmovne
es
iret
sbb
in
cmp
push
pushf
in
daa
mov
fsubr
xchg
rcl
addr16
idivb
imull
push
fcoml
push
pop
cmpl
out
je
pop
adc
mov
sahf
add
and
imul
mov
fisubrs
popa
jp
adc
jno
push
adc
cwtl
mov
mov
xor
out
pop
mov
in
dec
imul
rcr
xchg
push
mov
scas
adc
lds
xchg
pop
pop
inc
jns
sahf
in
repz
hlt
jnp
ja
repnz
enter
or
or
push
mov
ljmp
inc
xor
in
in
imul
insl
add
push
aad
xchg
push
call
scas
mov
loop
push
jecxz
add
mov
or
imul
jbe
gs
add
jo
inc
call
testb
push
or
icebp
mov
in
xchg
or
inc
aam
push
mov
pop
mov
dec
in
inc
into
ret
or
push
pop
inc
scas
push
push
jnp
mov
ss
mov
bound
fstps
loope
rcll
addl
mov
jle
leave
dec
es
outsb
cwtl
xor
dec
outsl
pop
pop
dec
stos
jmp
lea
adcl
shll
arpl
cmpsb
pop
mov
push
loop
aas
pop
ret
imul
cmp
mov
shr
aad
mov
xchg
add
pop
in
dec
jecxz
push
push
outsl
mov
jbe
fwait
daa
sub
mov
pop
popa
sub
cmp
xchg
rorl
xchg
ret
vrcpss
pop
cmp
dec
push
fwait
fwait
sbbl
cmp
adc
jge
pop
ljmp
pop
out
fmuls
inc
scas
cs
cmp
and
inc
or
pop
incl
mov
leave
out
or
add
out
je
aas
insb
sbb
sbb
ret
mov
ds
lods
cli
push
fwait
xchg
mov
xchg
inc
add
adc
scas
pop
and
arpl
jae
adc
or
cmpl
cmp
or
mov
and
fisttps
rolb
dec
pop
jb
ss
pop
ret
int
mov
cmpsb
leave
sahf
ret
into
aam
jnp
jl
cs
dec
inc
add
jle
mov
sbb
fisttpl
sub
cs
cmc
clc
jmp
xor
mov
mov
fstps
dec
movq
adc
lea
fidivrs
cltd
mov
icebp
fwait
mov
mov
sub
and
lret
inc
pop
imul
lock
fldenv
jge
jnp
jge
mov
pushf
sti
or
mov
push
shll
adc
int
repz
popf
dec
stos
aad
jno
sarl
fidivl
imul
ja
lock
insb
mov
jo
lcall
xor
jp
je
lea
mov
jmp
cmpsb
xor
push
inc
stos
std
mov
stc
sbb
or
cli
addb
xchg
psubsw
pushf
lds
inc
inc
inc
mov
sub
mov
fnsave
fsubrs
lahf
ficomps
insl
cmp
popa
mov
popf
mov
mov
or
ret
sub
mov
mov
pop
xchg
mov
xor
xlat
les
subb
in
pop
jae
sbb
or
and
ret
test
loop
push
je
scas
std
sub
fcomps
bound
icebp
imul
xor
lods
push
dec
push
mov
pop
mov
lock
mov
in
rclb
and
xchg
mov
and
ret
in
fs
mov
mov
cltd
idiv
hlt
sub
jno
sub
mov
xor
imulb
xor
xor
mov
sbb
fisttps
pop
popa
mov
mov
cmpsb
fldpi
jbe
mov
adc
imul
inc
jne
mov
pop
push
pushf
adc
and
sahf
ss
rcrb
push
push
aaa
mov
xchg
scas
adc
pop
test
js
rolb
xchg
adc
jae,pn
mov
mov
aas
gs
xlat
push
mov
fists
mov
lret
mov
sub
sbb
insb
sbb
enter
mov
dec
push
push
mov
sub
inc
push
xchg
cmp
cmc
in
arpl
int3
jo
and
inc
jae
les
jno
shrb
hlt
addr16
divb
xor
idivl
dec
push
dec
in
fisttps
fsubr
inc
jbe,pt
xchg
insb
dec
addr16
sub
cmpsl
push
jecxz
insb
test
push
mov
adc
and
xchg
jl
pop
lret
dec
pop
stos
lds
movsl
emms
insl
push
xor
or
loope
repz
jb
dec
jl
test
arpl
repnz
cmp
lea
xor
xchg
sbb
popf
pop
cmpsl
andb
inc
fst
xchg
pop
pop
aam
nop
sbb
push
cld
fidivl
mov
in
push
or
mov
xor
jl
shl
stc
sub
push
mov
xchg
fcmovne
movsb
cmovp
push
lcall
loopne
sub
mov
dec
iret
mov
dec
adc
jmp
mov
adc
in
aad
inc
imull
push
mov
jle
push
cli
lods
dec
and
sti
adc
jns
cltd
imulw
xlat
pop
insl
int3
mov
sbb
les
stc
push
sbb
inc
jp
aam
fimull
or
push
orl
aad
mov
push
pop
cltd
fs
popf
outsl
out
cmc
in
test
jmp
sub
push
dec
imul
jns
ss
pop
mov
daa
or
mov
sub
cmpsb
mov
mov
ljmp
shrl
repz
pop
jl
dec
adc
sbb
fabs
ficoml
jno
adc
pop
mov
das
ljmp
mov
mov
sbb
mov
int
push
pusha
xor
jmp
mov
andl
into
mov
xor
nop
mov
stos
ret
pop
iret
jns
enter
push
lds
lods
jecxz
push
outsl
fnstsw
aam
imull
sbb
xchg
outsl
inc
mov
lcall
and
or
loopne
fisttpll
inc
cld
rorl
push
mov
mov
add
ror
mov
cmp
jne
dec
fnstenv
xchg
dec
iret
xor
and
lcall
and
add
push
mov
jne
pop
sbb
dec
jecxz
inc
imul
js
in
lfence
pop
mov
mov
xlat
jecxz
mov
xchg
adc
pop
lods
adc
mov
mov
mov
pop
sti
pusha
jns
push
shrl
inc
mov
sbb
cmp
addl
jecxz
imul
lahf
out
pop
out
mov
jp
push
add
loopne
mov
mov
popf
aaa
or
jecxz
push
mov
addb
insb
mov
aad
int
repz
sbb
pop
pop
jae
xor
test
iret
test
ret
xchg
mov
sub
sahf
mov
movb
jmp
mov
push
int
jl
ja
icebp
mov
mov
pop
in
mov
mov
sbb
mov
dec
mov
pop
leave
pusha
ljmp
lods
cmpsb
cmp
xchg
push
lods
ja
std
stc
sti
data16
cwtl
jecxz
xor
inc
cmp
mov
xchg
and
adc
sub
xchg
push
sub
std
jnp
into
xchg
mov
out
push
or
jle
popa
mov
cmp
lahf
cmp
push
pop
fcoml
jge,pn
in
rolb
cmc
loope
sbb
jmp
or
jno
stos
enter
mov
xor
daa
xchg
push
mov
popa
adc
and
cld
lahf
dec
and
jle
cmpsb
jb
push
xor
lock
add
ret
lock
js
inc
dec
movb
xchg
lods
adc
add
xor
cmp
dec
push
es
sub
xlat
mov
sub
xor
test
inc
data16
mov
sub
cmp
dec
adc
insb
test
pop
sub
fildl
xchg
jmp
xchg
pop
cli
and
js
cwtl
test
sti
fistpl
add
mov
sbb
mov
daa
ret
cmp
push
and
or
mov
insb
int3
inc
into
and
cs
lock
cld
xchg
adc
cmp
add
test
pop
fstl
sbb
xchg
mov
mov
cmc
jno
lret
scas
xchg
ja
test
push
fisubrl
aas
movsb
std
aad
psrad
in
push
push
outsl
rcl
jne
push
mov
cltd
or
dec
out
jecxz
in
add
fldt
ljmp
jb
sbb
subb
or
dec
mov
adc
jae
js
sahf
pop
lds
daa
outsl
add
mov
lret
int
mov
sarb
cmpsl
js
out
jae
pop
xchg
sbb
es
outsl
sbb
int
popf
adcb
mov
fidivs
pop
mov
inc
cli
add
xor
xchg
mov
cmpsl
in
inc
pop
push
aas
jbe
or
push
jmp
cmp
adcl
sahf
imul
call
int3
dec
ss
pop
prefetch
repz
xor
fdivr
cmp
cmc
mov
inc
pop
lret
add
call
or
subb
into
xchg
sbb
sbb
mov
lods
int3
rcrl
inc
cs
lret
hlt
aaa
xchg
lcall
inc
dec
out
xor
push
flds
inc
dec
mov
xor
ds
inc
popf
fsub
xchg
dec
fcomps
jp
pop
jmp
iret
xchg
in
icebp
mov
jo
cmpsl
mov
fstpt
dec
mov
xor
leave
xchg
popa
js
int
or
in
shl
cwtl
addb
jl
mov
ss
xchg
mov
mov
mov
jae
stos
arpl
lock
push
dec
movsl
jmp
repnz
pusha
xor
pop
sbb
mov
into
sbb
xchg
xchg
add
mov
jmp
push
mov
sti
insb
inc
adc
xor
jo
addl
add
je
cmp
les
insl
ss
pop
cmpsb
mov
mov
and
jbe
cmpsl
push
scas
addr16
inc
test
mov
jae
cwtl
out
ss
lcall
sbbl
scas
push
fmuls
and
mov
adc
imul
pop
in
rcll
test
inc
lea
pop
rcrb
mov
xchg
inc
mov
mov
dec
jae
sbb
cmp
or
popa
xor
jne
dec
loopne
sbb
bts
in
mov
gs
leave
pop
jne
inc
mov
push
mov
adc
sub
sub
push
mov
mov
xchg
xchg
cmpsl
or
push
add
pop
mov
les
into
or
clc
mov
pop
or
xchg
movb
gs
mov
and
lods
imul
jno
arpl
icebp
pop
sbb
push
and
aas
push
sti
test
jge
lret
fiadds
cmpsl
sub
dec
jg
jns
sub
pop
je
cmp
cld
aas
mov
popa
dec
or
jmp
gs
or
push
pushf
cmp
add
or
inc
mov
leave
push
xor
xchg
fmull
sti
insb
pop
in
and
jae
mov
bound
out
lret
inc
iret
jge
lcall
in
push
fs
cmp
mov
dec
cmpsl
or
sbb
jae
xchg
inc
out
ja
push
mov
in
or
add
imul
pop
sbb
xchg
sahf
cmc
sbb
cmp
insl
jp
cwtl
push
sub
sbb
pop
orb
sbb
mov
int
xchg
push
popf
sete
outsb
push
imulb
push
cmc
sub
mov
cwtl
decl
call
xlat
jl
out
push
sar
push
dec
rorl
jb
sahf
js
sub
out
sub
jnp
jae
dec
fadds
outsb
inc
jecxz
outsl
sahf
leave
test
addr16
scas
mov
pop
je
rcll
and
push
addr16
imul
xor
es
adc
push
sahf
jnp
push
orl
pop
test
mov
mov
mov
dec
lret
sub
sarb
mov
jae
test
xor
mov
pop
sub
adc
fmuls
dec
sbb
cmp
je
or
cmp
jae
incb
pop
icebp
pop
mov
jb
mov
xchg
sub
xorb
pop
mov
in
negb
push
cmpsb
pop
pop
out
xchg
sbb
pop
xlat
les
adc
rcrb
xor
bound
pop
arpl
push
mov
gs
dec
dec
bound
pushf
int
clc
jbe
lods
in
cmp
in
clc
push
xor
icebp
movsl
in
fsubs
cmp
loopne
jmp
ss
testl
xchg
ljmp
mov
addb
cwtl
jne
push
and
aam
sbb
jo
cwtl
cmp
stos
fmull
scas
test
sub
cmp
insl
push
mov
jno
stos
negb
sub
sbb
and
rorb
mov
outsl
mov
shrl
mov
cmp
sub
push
js
xchg
sbbl
add
mov
repnz
ljmp
sti
loop
mov
cwtl
add
xadd
push
jmp
mov
call
dec
loop
lods
dec
pushf
jg
pop
je
xchg
sub
call
mov
mov
mov
mov
pusha
xchg
jno
push
fnsave
jbe
popw
movb
insl
adc
jp
imul
stos
mov
call
imul
stc
sub
inc
gs
loop
inc
test
jne
or
jb
loope
or
inc
dec
pop
cmp
inc
mov
popf
std
add
lret
xchg
out
fldl2e
add
imul
jns
mov
sarb
pushf
lret
enter
mov
loope
push
sbb
xchg
mov
mov
ja
push
pop
sbb
jns
jmp
or
dec
cltd
adc
sti
out
movb
adc
jmp
cmp
shrl
jmp
sbb
pop
jae
sar
xor
fs
push
mov
xchg
mov
fwait
test
xchg
lods
jnp
mov
aas
fwait
test
je
bound
imul
push
iret
pusha
idivb
ficomps
nop
push
test
sub
dec
inc
movsb
sbb
dec
stos
push
inc
in
pop
not
adc
scas
stc
push
inc
out
dec
cmpsb
insb
nop
push
test
stos
sbb
xor
loopne
jnp
and
scas
mov
scas
mov
add
andl
xchg
pushf
imul
stc
xor
ror
aad
or
test
pop
cmpsb
outsl
mov
xchg
mov
mov
push
sub
xor
xchg
cmp
cli
push
or
pop
sbbb
and
scas
loope
movl
sub
inc
orb
lret
pop
into
js
sbb
shlb
das
cmp
test
pushl
rorb
nop
pop
push
jle
test
stc
shrb
lea
mov
push
das
arpl
stos
or
enter
xor
xchg
jnp
addl
in
dec
nop
or
and
xchg
repz
loopne
ss
insb
fs
shrl
mov
inc
rolb
pop
push
and
jecxz
pushf
fildl
shrl
fcmovnbe
mov
or
shlb
jp
mov
fxch
stc
lds
mov
fcomps
out
cltd
in
pop
sbb
xlat
jle
repz
jo
mov
jge
sub
pop
mov
imul
cmpsl
outsb
cmp
pop
cmp
xchg
outsb
inc
test
movsl
es
ffree
aaa
loope
pop
cmp
adc
xchg
shrl
pop
jo
adc
inc
fmuls
xchg
and
mov
jp
cli
add
xchg
mov
cmc
or
mov
rcrl
cmp
add
mov
out
mov
dec
movb
mov
dec
pop
xor
adc
popa
popf
inc
fnstenv
and
or
pop
lock
hlt
and
jnp
and
lods
lret
hlt
adc
cs
test
sbb
ljmp
jmp
add
imul
adc
mov
adc
mov
mov
fs
jbe
lcall
loopne
cmp
xchg
cmc
sbb
rcrb
xlat
push
fcmovu
lahf
add
dec
jae
push
scas
inc
idivb
or
push
loope
aas
shrd
mov
pop
mov
addb
xchg
pop
xor
out
out
adc
pop
mov
das
sarl
jo
mov
test
icebp
xchg
or
call
fs
popa
adc
fnsave
int3
and
cmpsb
xor
lods
pop
icebp
add
insb
pop
cmp
les
pop
adc
pusha
fcompl
scas
cmp
ljmp
leave
pop
nop
test
or
loopne
dec
jne
sub
ljmp
jae
mov
hlt
repz
mov
aaa
jb
aam
cmc
jge
jg
std
sar
jecxz
movl
add
outsb
cmp
and
shrb
addr16
mov
and
data16
icebp
mov
in
lret
sbb
les
sub
jb
fidivrs
mov
jns
inc
and
popf
ds
pop
inc
and
xchg
stos
int3
xchg
dec
testl
xlat
add
roll
and
xor
push
push
cs
nop
iret
pushf
cmp
mov
push
decl
jnp
imulb
in
jns
stos
xor
lahf
movsb
sbb
xchg
adc
sub
daa
fbld
imul
adcb
insb
popa
jns
aad
xor
mov
rcll
xor
aaa
sbb
xchg
aas
sbb
ffreep
test
mov
scas
icebp
sbb
out
mov
into
or
xor
xor
lds
in
xor
push
mov
out
sub
mov
jo
stos
add
cwtl
adc
pop
mov
out
pop
xchg
xor
fs
getsec
push
in
mov
xchg
mov
lret
xor
lods
xlat
adc
pop
sarb
sub
or
fcoms
fildll
mov
nop
lock
sbb
nop
xchg
incb
sahf
rcrb
adc
xorl
out
cmp
lret
test
mov
jecxz
sbb
adc
int
popa
cli
sbb
cmpb
cld
xchg
inc
inc
test
mov
pop
and
jnp
cmpsb
mov
sub
sbb
xor
pop
shlb
imul
jp
je
dec
stos
into
xor
cmp
sbb
dec
stos
repnz
gs
adc
aas
lcall
push
sti
push
push
dec
jge
loopne
hlt
orb
xor
pushf
cmp
sbb
mov
or
and
or
and
negb
pop
js
icebp
mov
loopne
idivl
jl
pop
sub
mov
inc
inc
movsb
dec
inc
pop
insl
fiadds
in
sarb
cs
cmp
mov
lret
int3
in
popa
into
rorl
sub
out
dec
dec
and
jo
andb
out
inc
push
cltd
pop
inc
fwait
and
into
and
sub
and
pop
popf
adc
cmpsl
pop
xor
jne
pop
int3
jae
cld
sub
push
cmp
dec
pushf
sub
cs
add
xor
cmovne
mov
adc
in
lock
mov
mov
dec
jp
lret
insl
std
pushf
push
out
mov
sbb
inc
repz
lret
dec
sub
add
adc
sub
sbb
loopne
aad
dec
icebp
ret
or
pushf
shl
push
subb
call
popa
mov
je
imul
call
and
and
out
inc
fadd
xchg
lret
push
push
std
data16
push
out
in
pop
fwait
and
movsl
xchg
out
inc
dec
adc
lcall
xor
sahf
push
xor
pop
jl
pop
in
and
mov
das
test
fdivrs
push
dec
inc
pusha
mov
dec
or
es
test
hlt
cmpl
xor
ja
add
dec
iret
sub
arpl
or
push
cmp
clc
mov
mov
jmp
rolb
rclb
popf
jmp
jg
inc
dec
push
jmp
and
xor
mov
pop
cmp
test
mov
or
or
clc
pop
cmpsl
and
hlt
mov
sbb
mov
adc
push
rcrb
or
es
loope
sub
fs
outsb
rcrl
fwait
cmp
movsb
push
xor
xchg
divl
inc
add
out
mov
cmpb
cmp
and
int3
mov
pushf
testb
add
xorl
mov
mov
pop
cmpl
stos
loop
jl
movsb
scas
es
mov
xchg
push
and
pop
cmp
mov
test
cs
pop
in
mov
lock
cltd
and
dec
scas
mov
ret
add
in
xchg
xlat
imul
addr16
sbb
sbbl
pop
mov
ret
and
mov
pop
adc
mov
adc
inc
adc
mov
mov
dec
popa
sbb
adc
cmpsb
cwtl
in
iret
sbb
pop
paddsw
and
and
xor
out
mov
add
test
je
or
lock
or
inc
lret
lret
jle
sbb
add
sub
orl
adc
pop
xchg
sbb
pcmpeqd
das
mov
fsubrl
data16
jmp
lods
aad
cmp
xor
or
lods
pop
cli
pop
jo
idivb
popa
mov
lret
enter
fsubrs
mov
std
xor
imul
mov
mov
cmp
mov
xchg
pusha
xchg
lods
cmp
fdivp
out
shrl
or
std
popa
imul
dec
rclb
mov
fisttpll
adc
jns
movsl
es
sbb
insl
into
dec
or
jg
ret
pop
sub
decb
int3
pop
neg
decl
std
jge
loope
ret
sbb
cmp
cmp
or
push
xor
jmp
dec
aas
fwait
mov
mov
in
mov
popf
dec
popa
in
pop
loop
les
mov
pop
dec
xchg
loope
addb
sub
test
int
nop
push
cmp
mov
push
fwait
in
xor
nop
call
int3
lret
aas
out
iret
or
push
pop
mov
adc
fwait
cmp
add
mov
divb
aam
dec
fs
mov
xchg
lahf
mov
push
xor
jb
push
xlat
jecxz
test
sbb
cli
mov
jnp
adc
insb
roll
sub
jnp
aad
xchg
jge
jae
in
hlt
pop
jns
ss
or
xchg
mov
mov
jmp
inc
lcall
clc
lcall
out
mov
js
pop
repz
mov
addr16
adc
sbb
leave
push
lds
cmp
cs
int
sbb
test
out
sbb
push
add
or
rolb
push
data16
test
mov
mov
or
jbe
adc
aad
or
xchg
xchg
mov
loop
jp
outsb
add
das
mov
in
dec
cmp
shr
cltd
push
ret
movsl
cmpsl
mov
push
imul
sub
pop
bound
sbb
lds
push
fbld
add
repnz
xor
stos
jmp
add
cli
aaa
sti
jl
stc
ja
clc
daa
cmp
sbbb
jl
daa
call
jno
rcll
mov
into
das
and
jg
mov
rcr
or
lcall
and
iret
jecxz
dec
cmc
aas
sbb
dec
ds
or
inc
jge
pop
sti
ror
popf
dec
pop
cs
jns
push
int
jae
ja
test
mov
ret
mov
sub
je
loopew
or
cld
or
and
cmp
ret
cmpsl
xor
cmp
or
cwtl
fs
mov
inc
inc
sti
adc
into
cmp
ret
scas
dec
inc
push
test
dec
pop
xchg
in
aaa
push
mov
mov
test
rorl
lods
inc
int3
dec
inc
pmaxsw
inc
adc
dec
repz
repnz
sbb
xlat
lea
adc
wrmsr
jne
adc
adc
push
add
lods
sahf
mov
adc
cmc
adc
ror
jle
xorb
lahf
sbb
xchg
dec
dec
xchg
aaa
xchg
jno
movsb
and
xlat
mov
aam
mov
push
int
outsl
fucomi
cli
push
sbb
cld
jmp
test
mov
sbb
das
add
mov
dec
xor
xor
mov
mov
mov
subb
mov
add
and
into
pop
pop
mov
and
sbb
dec
xchg
inc
lea
jp
popa
movsl
cmc
pusha
stc
mov
jnp
cmpsl
add
push
mov
ret
testb
push
gs
cmp
jae
pop
mov
cmp
mov
fiadds
xor
push
test
and
jecxz
arpl
xor
hlt
stos
call
fdivp
mov
push
dec
push
add
jb
hlt
loope
push
test
lea
addr16
icebp
jbe
insb
push
push
and
jo
insb
cmp
cmp
mov
or
loop
xor
rorb
stos
notl
mov
in
add
iret
mov
cmp
xchg
aad
jle
jmp
fisubrs
mov
add
mov
je
or
outsb
xchg
cmpsb
lods
mov
popa
mov
mov
cmp
mov
fiadds
sub
inc
push
mov
stc
xchg
pushf
dec
dec
xchg
hlt
dec
sub
out
xchg
adc
hlt
and
mov
repnz
loopne
and
test
mov
inc
out
popa
test
mov
pop
xchg
xor
mov
push
dec
into
cmp
call
data16
in
dec
ds
inc
cmpsb
sub
cli
or
lahf
es
push
lahf
mov
xchg
add
pop
push
sub
dec
pop
loopne
test
js
test
aam
fdivp
lds
pop
dec
adc
mov
ja
out
pop
adc
icebp
pop
mov
mov
push
dec
addr16
std
js
mov
xor
iret
pop
imul
jl
push
or
das
dec
cmpsl
aas
fiadds
iret
popa
ja
sti
data16
insl
jecxz
and
clc
mov
arpl
and
mov
sub
sti
fisubs
daa
dec
sbb
aas
nop
xor
in
sub
int
aaa
cmc
cmp
imul
in
mov
mov
cs
in
fsubrs
lret
js
inc
mov
dec
shlb
xorb
imul
mov
inc
jle
fadds
mov
int3
mov
inc
scas
jae
fwait
adc
aad
cld
je
sbb
xor
repz
sub
repnz
cmpsb
mov
inc
leave
adcl
and
aad
neg
std
fdivrs
mov
xchg
dec
mov
aam
inc
call
insb
jmp
mov
jmp
lahf
insb
stc
arpl
mov
pop
lock
sub
sub
sub
orl
dec
repz
sub
lods
push
test
sbb
jl
mov
push
jle
and
add
push
loope
or
mov
jns
mov
cmpsl
stos
dec
sbb
pop
mov
cmp
adc
or
icebp
jle
jo
mov
jle
push
orb
sbb
xchg
pop
push
int3
push
loope
aam
cmp
dec
add
pop
dec
lock
sbb
lret
movsl
xor
push
and
ljmp
testb
sbb
aam
pop
adc
movsl
cmpsl
into
fldcw
adc
and
rclb
and
test
mov
fisubrl
sub
ds
jmp
push
xchg
inc
push
add
pushf
push
pop
mov
jge
out
fdivr
pop
lock
inc
test
cmc
jb
adc
and
subl
ret
sbb
insl
or
pop
shlb
dec
mov
sbb
mov
es
outsl
shll
and
xlat
ljmp
jg
dec
fsubrs
ret
lahf
loopne
cs
pusha
adc
add
in
les
push
pop
and
in
mov
xor
sbbl
xchg
push
and
mov
fiaddl
sub
mov
jl
push
mov
ds
jmp
popa
test
cmp
push
jo
loop
sub
push
xchg
les
fs
pop
xchg
repnz
fldcw
mov
cmpb
divb
les
inc
jg
xchg
mov
shr
dec
pusha
adc
fs
int3
pop
sub
add
dec
sbb
mov
add
push
sub
pop
rcrb
xor
leave
xor
cld
mov
pop
lahf
aas
and
aam
lret
das
push
shlb
je
mov
js
xor
and
sti
ret
sub
fsts
add
les
stos
fistpl
mov
lahf
dec
movsb
add
bound
ja
js
nop
jmp
enter
cvtpi2ps
and
lahf
add
jns
repnz
aas
cmp
inc
lds
and
mov
sbb
addr16
mov
pop
inc
out
and
ret
les
mov
sbbl
lahf
add
inc
out
stc
shrb
cmp
imul
fcompp
pop
mov
lahf
sbb
cmp
rcrb
ret
mov
xchg
test
mov
jmp
sub
cmp
push
xchg
xchg
pop
pop
pop
jne
movsl
xor
and
and
sub
out
mov
or
xchg
iret
out
sti
sub
lods
lcall
rcrb
cld
dec
mov
loope
in
cmc
testl
insb
dec
push
sahf
enter
pop
insb
push
lods
xor
jecxz
add
std
out
ret
or
add
ficoml
xchg
mov
mov
imul
shll
fsub
add
adc
or
jne
jg
pop
mul
mov
or
adc
sbb
adc
xor
pop
cwtl
jge
mov
idiv
xchg
aaa
jecxz
int3
cmc
loop
xchg
mov
xor
into
xor
or
data16
insb
mov
hlt
sub
jle
test
dec
mov
enter
adc
jecxz
jnp
rorl
nop
mov
es
shlb
pop
outsl
notl
dec
sbb
dec
and
or
xor
sbb
js
pop
adc
jo
mov
out
xchg
sbb
inc
in
insb
lock
pop
in
pop
sahf
jae
push
push
ss
mov
lods
sbb
sub
test
roll
jo
movsb
push
mov
outsb
jle
adc
sbb
out
aaa
xchg
mov
jmp
call
cmp
xchg
in
xlat
shll
popf
out
ret
sbb
clc
dec
fstpt
mov
in
jg
pushf
insl
dec
mov
adc
pop
test
out
fists
aad
push
inc
fidivs
mov
test
gs
jecxz
popw
std
dec
sub
stc
lret
fwait
xor
in
ds
or
adc
andb
and
jnp
ret
scas
xor
xor
push
mov
inc
hlt
idivb
inc
std
inc
lahf
adc
mov
cmp
adc
in
xchg
popf
lock
aam
cmpsb
xchg
lods
sbb
js
aaa
push
movsb
out
dec
test
jl
fidivl
xor
add
int3
jno
nop
jo
cmpsb
andl
jo
mov
jl
pushf
sti
fildl
mov
cmp
and
inc
js
push
push
cmpsb
or
out
int3
inc
jp
lret
in
test
mov
icebp
outsb
sti
mov
and
xchg
dec
xlat
fmul
imul
xchg
scas
dec
cltd
or
sub
push
ljmp
jecxz
xchg
mov
out
or
mov
push
jp
icebp
in
sub
leave
pop
and
adc
dec
ret
jle
insl
lret
outsb
and
sbb
dec
xchg
jbe
mov
sub
cmp
in
rclb
call
push
lock
pop
outsb
repz
jnp
and
push
xchg
jb
or
mov
adc
pop
fistpl
aam
mov
bound
adc
mov
mov
jge
fucomi
ret
xor
mov
pusha
xchg
push
int
loopne
outsl
jmp
iret
les
and
push
int
or
les
enter
ret
jecxz
std
mov
xchg
or
sbb
int3
sub
and
ljmp
jnp
sbb
in
cs
xchg
or
push
sub
imul
pop
in
mov
sbb
jmp
mov
fisubl
data16
push
iret
jbe
mov
adc
mov
xor
rcrl
lcall
sbb
add
cld
mov
inc
jle
shr
outsl
enter
or
pop
cmpl
push
sbb
sub
sarb
in
out
adc
cli
movaps
inc
iret
sti
stos
sarb
xbegin
add
pop
in
jae
jmpw
ret
add
sub
and
mov
xor
lcall
loop
pop
shll
dec
js
sub
pop
cmc
cltd
mov
sarl
sbb
enter
femms
mov
xchg
mov
push
xor
clc
je
fs
sbb
test
inc
adc
in
xchg
sub
stos
jae,pn
mov
nop
pop
scas
mov
gs
cmp
mov
repnz
sbb
out
insb
je
adc
test
inc
push
divl
dec
les
addr16
fwait
sbb
fistpl
sub
xchg
out
sbb
in
psrld
int3
lods
push
adc
jle
mov
rcr
jge
sub
push
mov
push
sbb
fcmovbe
decb
push
daa
pop
or
cmpb
pop
xchg
push
push
stos
mov
mov
adc
imul
push
cmp
orb
jge
sub
mov
mov
addr16
popf
test
mov
sahf
jnp
mov
div
lret
lret
xchg
mov
xor
lods
fwait
in
cli
and
gs
mov
push
decb
loopne
mov
mov
test
or
sbb
movsl
sbb
loop
rcll
das
cld
scas
jp
sub
pop
rcrb
xor
mov
or
jbe
sbb
adc
fstpl
pop
hlt
lock
lcall
lcall
xchg
push
nop
cmp
les
jno
cmc
mov
xchg
pop
in
shlb
lea
sbb
lods
adc
loope
xor
test
and
fwait
je
ja
mov
je
cwtl
fst
ret
pop
adc
call
inc
int
push
inc
cmp
fidivrl
sub
pop
fiadds
mov
jno
movups
xchg
jge
aad
add
outsl
pusha
stos
cmp
push
pop
mov
cmp
mov
add
sub
stos
dec
lahf
mov
lods
test
xchg
push
push
or
push
push
std
stos
clc
or
adc
jmp
mov
adc
arpl
sarl
outsb
sub
xchg
mov
mov
or
mov
ret
or
or
mov
test
xchg
sub
and
mov
jl
adc
fwait
in
inc
cli
mov
jl
sbb
jno
insl
or
or
add
ss
add
add
push
cmp
test
mov
or
push
sbb
outsl
jle
dec
pop
dec
inc
stos
push
jge
jmp
xchg
cmp
data16
jmp
mov
mov
lret
ficoml
pop
insl
adc
mov
idivl
daa
pop
xchg
push
jle
sti
xor
jmp
movsl
add
popa
mov
testb
xor
push
arpl
push
sub
and
mov
inc
mov
mov
mov
cmp
dec
call
xor
lock
dec
addr16
mov
loopne
cmp
add
jne
and
mov
xor
insb
out
inc
je
jbe
jmp
adc
stos
xchg
movsb
int3
mov
xchg
stos
xchg
cmp
push
lahf
insb
cmpsl
lods
clc
mov
xor
xchg
mov
add
or
jno
adc
mov
out
mov
in
add
xlat
push
out
lcall
push
dec
daa
aaa
mov
addps
and
out
xor
sub
mov
sti
mov
sbb
xor
inc
xchg
xor
xor
outsb
mov
cmp
mov
in
sbb
mov
pop
pop
test
mov
lret
mov
lods
jne
add
icebp
or
mov
adc
fwait
push
push
dec
mov
mov
clc
in
inc
pusha
jle
ss
ds
aam
or
out
ret
mov
out
popa
inc
and
cmp
les
data16
test
dec
dec
jge
vcmppd
in
or
and
xor
inc
and
loope
test
push
lds
shl
push
jo
dec
mov
mov
stos
dec
out
in
jnp
test
push
sar
outsl
lods
cmp
inc
jae
mov
outsb
cmp
ret
jp
int3
dec
inc
sbb
and
loop
mov
push
call
out
mov
popf
jne
orl
sbb
std
outsl
xchg
adc
xchg
adc
mov
aam
inc
add
xchg
push
aam
aas
add
sub
and
imul
cmpsl
inc
enter
mov
push
push
xor
fdivrs
push
push
mov
dec
ret
stos
xchg
shll
jle
add
and
add
cmp
in
lcall
fisubl
mov
jno
xchg
add
aam
mov
cmpl
loop
in
xor
lahf
sub
inc
std
testb
repz
xor
mov
bound
push
sahf
cmp
jg
test
dec
cld
inc
sarl
xchg
sarl
movsl
adc
cmp
test
sbb
arpl
lret
jle
imul
xor
mov
fnstsw
jecxz
stc
sbb
push
pop
jbe
xchg
mov
xor
rolb
mov
adcb
out
pusha
test
lods
cwtl
inc
sbb
sbb
ljmp
loop
gs
mov
push
fs
lret
lcall
adc
push
popf
je
xchg
push
mov
es
xchg
inc
insl
faddl
push
stc
mov
je
cs
frstor
add
and
fcoms
sbb
jae
insl
fwait
adc
push
mov
push
sbb
sub
or
mov
insb
sub
lods
mov
dec
mov
jae
fisubrs
mov
pop
xor
inc
movsb
loop
push
push
rorl
fsubrl
mov
std
fildll
icebp
sub
inc
inc
jmp
mov
push
pop
orl
mov
mov
mov
repnz
sub
leave
call
or
add
popf
pop
ficoml
fidivrs
xchg
lods
fdivs
pusha
gs
xchg
dec
mov
jno
movb
mov
cmp
cld
insb
pop
or
and
xchg
loope
js
mov
lods
cmpsb
stc
jp
xor
push
jl
rcll
jno
in
xor
cld
mov
cmpl
ljmp
or
mov
add
nop
pop
rcl
xor
cmp
xor
jae
jl
push
ud2
enter
add
xchg
add
mov
add
xchg
or
and
mov
mov
adc
je
sbb
pushf
aas
or
mov
cltd
ja
pop
loope
xlat
sarl
jno
hlt
test
inc
jge
lret
and
sbb
cmp
sub
jp
push
inc
rcrl
cmp
mov
pop
leave
fcmovnu
and
dec
xlat
ss
or
mov
sub
lea
mov
es
xlat
xchg
push
pop
jecxz
inc
cmp
mov
mov
cmp
dec
out
pop
sbb
mov
insb
lock
hlt
lea
mov
inc
mov
push
mov
xchg
and
mov
xor
ljmp
inc
repnz
or
dec
or
jbe
out
aad
loope
jmp
enter
push
pop
mov
fstp
xchg
pop
mov
dec
pop
xor
int3
dec
mov
xor
mov
loop
dec
cwtl
or
add
sub
dec
in
xchg
mov
dec
mov
sbb
stc
out
dec
xchg
sub
and
push
inc
xchg
pop
inc
and
mov
or
fstpt
push
dec
cmp
xchg
stc
iret
xchg
popf
fwait
inc
add
cwtl
aam
or
jp
stc
rcll
in
xchg
hlt
aad
inc
adc
mov
jns
popf
lahf
dec
aas
and
pop
fscale
fisubs
fildl
xchg
add
and
sub
push
xor
fsubrl
jecxz
bound
sub
aad
ret
cwtl
dec
jg
arpl
jb
add
test
jmp
lock
in
add
test
popa
out
mov
xchg
add
pop
fnstsw
bound
lret
push
fmulp
cwtl
or
jb
adc
int
fnsave
enter
fwait
xchg
fisubs
aas
lods
das
adc
es
mov
sub
lods
and
sub
fnstsw
sub
mov
pop
xchg
lahf
cmovne
addl
xchg
pusha
cwtl
dec
jge
inc
xor
adc
cmp
cli
fs
stos
xchg
fs
test
push
jg
loope
sub
xchg
jecxz
fsubrl
jmp
pop
mov
adc
nop
ja
and
movsl
dec
inc
gs
cs
sbb
std
mov
pop
jbe
jb
daa
aad
cmpsl
xchg
jno
xchg
or
and
jle
hlt
dec
xlat
rolb
pusha
nop
imul
push
fisubrl
popf
jae
xor
int3
rcl
in
leave
xor
sahf
or
loopne
in
jg
mov
adcl
arpl
rolb
aad
aad
push
nop
sbb
and
lret
sub
fldl
clc
mov
das
iret
mov
loopne
out
stos
out
xor
inc
lods
shrl
jnp
push
push
leave
inc
pushf
pop
push
dec
movlps
xor
sub
adcl
hlt
loopne
ja
and
mov
cmp
and
cmc
mov
repz
xor
scas
fucomp
lods
add
add
popa
push
pop
inc
adc
pushf
or
ret
push
lds
add
mov
pop
mov
icebp
loope
es
jmp
cli
rcrb
sub
sub
mov
rol
std
mov
adc
xor
mov
in
push
je
or
pop
aaa
dec
hlt
fs
inc
out
or
lods
cmp
icebp
mov
inc
scas
scas
push
subl
xorl
xor
inc
mov
imul
stos
dec
jmp
cmpl
pop
repnz
cmp
jae
cmp
and
xchg
lret
fidivs
mov
sub
add
cmp
inc
dec
pop
or
movsl
and
dec
mov
call
jmp
cmp
mov
cmpl
or
jl
lret
shll
push
into
es
out
xchg
cmp
or
stos
popf
shlb
push
sbb
dec
inc
sahf
mov
cltd
sub
lret
out
or
jmp
cmc
movsb
loope
xchg
addb
push
in
lret
fcoml
std
mov
ljmp
popa
sbb
fistps
push
adc
lret
sahf
dec
lahf
adc
inc
inc
test
fwait
fwait
cltd
sub
mov
aas
setge
sub
hlt
in
dec
cwtl
shll
sbb
popa
add
shlb
icebp
and
out
frstor
sub
mov
pop
hlt
or
mov
sub
lods
xor
inc
push
dec
lock
div
mov
and
dec
sbb
add
cmp
test
mov
shl
ds
cld
pusha
fldcw
mov
push
add
daa
pop
mov
pusha
jns
jecxz
mov
mov
sub
rep
mov
lahf
lret
aad
xor
ficomps
add
jne
cmc
or
popf
cmp
push
int3
lds
xor
inc
mov
insb
popf
adc
mov
xchg
js
out
mov
push
data16
xchg
mov
je
movsl
scas
dec
xchg
add
push
push
and
push
lret
jmp
push
packsswb
in
adc
cli
inc
ret
ljmp
add
loop
ja
jbe
fwait
cltd
dec
ss
push
xchg
into
scas
inc
inc
iret
xor
dec
jae
push
add
lahf
xor
lret
pminub
mulb
jne
popf
adc
inc
insl
out
int
push
dec
loop
push
jne
sub
out
bound
inc
call
mov
and
sbb
inc
das
adc
inc
sub
pushf
mov
inc
nop
pop
lods
fsts
stc
cmpsb
mov
je
or
mov
nop
mov
and
mov
add
dec
stc
mov
fadds
popa
loopne
in
je
fucomi
pop
adc
test
xchg
aam
jle
sbb
fs
fsubrs
jbe
icebp
cwtl
jecxz
dec
jbe
imul
adc
push
and
cmp
test
and
test
mov
push
push
pop
cmp
pop
ficompl
or
mov
out
inc
pop
fisttpll
mov
jnp
jge
mov
mov
in
mov
pop
mov
push
out
call
mov
dec
rclb
fstpt
jb
sti
inc
add
mov
scas
sub
in
gs
pop
jne
or
lds
lods
in
mov
hlt
std
adc
inc
sub
rcr
inc
and
fdiv
xchg
icebp
cld
jmp
pop
pop
mov
out
mov
push
mov
sub
cmp
push
sbb
push
mov
scas
aad
push
dec
add
mov
adc
jle
sub
imul
fildl
jmp
out
xchg
cmpsb
test
dec
scas
pop
outsl
adc
xor
lcall
lcall
mov
dec
dec
mov
fs
mov
dec
arpl
adc
xor
loope
mov
add
push
aad
mov
sbb
fcmove
sbb
cmp
and
xchg
inc
xchg
push
in
mov
adc
push
lods
movsb
ja
inc
sbbb
sbb
into
and
dec
outsl
lret
jb
xor
outsb
lds
add
sbb
and
ret
mov
mov
push
adc
xchg
arpl
mov
mov
outsl
xlat
lahf
pop
pushf
repz
mov
fsubrs
outsl
mov
push
rcrl
cmp
cwtl
and
mov
outsb
fcmovu
nop
ud1
mov
fstl
cmp
orl
sbb
push
outsl
test
push
mov
sub
cwtl
jecxz
insb
aad
arpl
cmp
repnz
pop
inc
push
mov
add
sbb
mov
fisubs
ficomps
pushf
adc
cmovle
and
push
mov
movlps
in
adc
insl
inc
aas
imul
xor
dec
xchg
or
xchg
orb
xchg
lods
movsb
or
pop
xor
sbb
add
adc
loop
jp
mov
mov
inc
or
dec
or
mov
dec
ja
aam
loop
sarl
inc
aam
xor
mov
sbb
add
jnp
leave
shlb
xchg
push
xchg
stos
lcall
inc
sub
xchg
cwtl
xor
sbbb
sbbl
sbb
ss
call
sti
scas
fcmovbe
cmp
dec
shl
and
xchg
test
imul
inc
dec
popa
xor
shr
addr16
lcall
cmp
adc
xchg
inc
lret
rorl
insl
mov
push
fldl
cwtl
push
fildll
dec
aas
jns
xchg
dec
jl
xchg
or
mov
mov
jne
mov
mov
jne
add
icebp
push
insb
mov
iret
mov
xor
push
lods
jmp
rol
mov
or
cmp
push
push
mov
imul
push
mov
adc
mov
les
insb
push
aas
mov
inc
ds
ret
jge
mov
dec
fwait
pop
lcall
scas
jle
jns
cmp
ret
add
std
add
xchg
leave
fs
xchg
jge
in
scas
or
addr16
test
jo
jg
cli
scas
sbb
ret
cmp
sahf
mov
out
mov
bound
xchg
or
add
xchg
push
add
fisttps
mov
jmp
sbb
out
mov
dec
int3
or
mov
or
push
insb
fs
dec
sbb
sbb
sbb
sbb
out
jns
out
ret
test
outsb
jo
leave
and
inc
mov
xchg
or
cli
push
xchg
mov
fwait
mov
sub
dec
adc
jnp
icebp
cmpsb
pop
iret
or
aas
jo
add
scas
jle
inc
or
fs
or
cmp
fcmovu
adc
movsb
ljmp
jnp
push
orb
out
mov
je
outsl
mov
xchg
xchg
loop
sbb
dec
pop
push
nop
in
fstpt
leave
adc
pop
cmp
cmc
popf
jno
and
aam
cmp
in
and
insl
int
mov
loope
cmp
lods
pop
rol
lea
cmp
jp
pushf
insb
dec
xlat
test
mov
outsl
inc
jmp
inc
sub
inc
rcl
add
out
pop
pushf
push
ds
add
mov
mov
mov
bound
mov
sbb
push
and
lret
push
in
mov
gs
leave
into
jb
lds
and
push
jecxz
pop
ret
sub
fstp
mov
xchg
cmpsl
clc
data16
int
int
ja
or
out
xchg
paddusb
fstl
lcall
xor
inc
dec
std
aad
test
inc
fimull
mov
mov
adc
mov
mov
enter
fcomp
xor
mov
cmp
test
fsubr
inc
jns
jmp
leave
mov
stos
xor
push
movsl
pop
mov
sub
negb
xor
jae
js
scas
loope
lahf
fwait
dec
jmp
enter
lret
sbb
insb
lret
push
sub
fldcw
es
cwtl
pop
icebp
jmp
push
add
ror
jbe
inc
adc
outsb
repz
imul
pop
fucomp
lea
in
push
or
icebp
test
int
call
shlb
imulb
sbb
scas
sub
mov
inc
pop
cmp
jno
push
push
notb
decb
cmp
imul
inc
xchg
les
in
and
cmp
pop
xor
xchg
sub
insb
xchg
ja
and
aas
aaa
and
push
mov
lcall
xor
outsb
or
dec
sbb
loope
shrl
dec
jns
test
movsl
movsl
stos
fdecstp
test
inc
mull
add
lods
sub
dec
jbe
mov
adc
adc
idiv
adc
stos
mov
xor
test
dec
push
sub
mov
cmp
mov
arpl
sahf
roll
movsb
inc
dec
mov
clc
mov
mov
cmpsl
bound
sbb
mov
iret
or
adc
xchg
cs
sbb
sbb
add
and
cmp
pop
cltd
or
rcrb
jge
out
xchg
mov
cli
cltd
int3
dec
cmp
addb
sahf
mov
les
jae
mov
inc
cld
and
add
and
adc
imul
or
jp
cmpsb
dec
dec
pmaxub
adc
das
push
popf
mov
sub
mov
lahf
insl
jmp
out
mov
dec
notl
jge
and
push
and
aam
push
pushf
in
adc
add
cmp
xlat
adc
ficoml
sub
sub
outsl
lahf
jge
repz
cli
pusha
xchg
xchg
sub
fldcw
xchg
push
cmp
fldt
out
pop
mov
mov
test
out
push
pop
xor
mov
js
sbb
inc
cmpsl
xchg
aaa
add
cmp
jne
movsl
or
stc
mov
cmc
lret
cmpsb
stc
scas
ret
adc
call
fsub
mov
add
loopne
mov
mov
lret
call
inc
icebp
add
push
mulb
testb
mov
jb
xchg
repnz
cmpsl
push
mov
or
xchg
push
divb
sahf
mov
xor
xchg
mov
pop
testl
je
into
repz
jns
push
shll
loop
jnp
jmp
jle
filds
aam
jno
fistpl
cld
out
sbb
loope
lock
mov
and
dec
loope
mov
stc
mov
jae
sub
imul
ss
les
mov
in
aam
push
fists
add
pop
xor
lods
fisubrl
pop
pop
add
adc
aaa
data16
ds
lahf
xor
pop
leave
fbld
jo
or
mov
or
push
je
pusha
mov
gs
sub
iret
aad
add
fidivs
sub
pop
jl
cld
add
mov
add
sbb
add
je
push
push
jbe
mov
or
jo
pop
mov
adc
inc
pop
jmp
jnp
and
lods
lods
enter
in
cmp
adc
sbb
mov
lock
or
rcll
pop
iret
test
mov
frstor
loope
cmp
inc
in
pop
xlat
lahf
cli
dec
mov
jno
mov
ss
fidivrs
into
xlat
inc
scas
fdiv
lea
mov
mov
inc
cld
or
cli
ret
xor
repz
lods
mov
orl
add
inc
shl
push
popa
inc
idiv
dec
in
adc
icebp
sub
jmp
mov
sub
sub
or
stos
mov
mov
addb
cmp
dec
popf
scas
mov
xor
mov
add
push
jno
add
xor
jecxz
mov
mov
jae
shrb
scas
and
mov
mov
sbbl
imul
mov
adc
out
or
sbb
icebp
enter
loop
jns
cmpsl
jge
in
mov
les
fidivrl
das
pop
dec
adcl
aaa
add
js
sbb
shrl
push
in
mov
xchg
sub
test
mov
pop
xor
jbe
clc
mov
mov
jno
cmp
sti
mov
dec
mov
jbe
xchg
lret
xor
mov
inc
cwtl
mov
adc
sub
mov
fst
xor
lret
mov
addr16
ss
cmpsb
call
mov
shlb
mov
repz
int
cmp
mov
cmp
adc
push
or
sahf
pop
add
mov
xor
iret
jmp
mov
mov
sbb
daa
stc
sbb
push
clc
js
jl
mov
scas
dec
cmp
mov
dec
sub
mov
mov
cwtl
pop
aas
out
sub
sbb
les
sahf
or
inc
scas
pop
jnp
testl
test
in
mov
cli
sarb
cmc
repz
cmp
push
pop
xor
xor
xchg
ds
sbb
out
add
fwait
cltd
loopne
jmp
leave
pop
mov
cmp
adc
mov
sti
pop
sbb
mov
aam
xor
cmp
int3
repnz
pop
xor
inc
inc
adc
aas
pop
dec
test
xorb
imul
push
ss
inc
cmc
push
inc
dec
aad
negb
dec
js
sub
pop
mov
cltd
fists
and
sbbl
add
adc
push
out
dec
mov
cmpsb
scas
into
mov
addb
out
and
jp
fucomp
xchg
lret
mov
xor
mov
jl
shl
cli
call
dec
xchg
es
jle
enter
fcoms
sbb
repz
xor
push
adc
xor
xchg
shrb
cmp
inc
rcl
push
in
or
pop
and
hlt
int
dec
je
stos
push
sub
mov
ret
jge
in
push
mov
dec
cltd
mov
and
mov
add
sub
pop
test
and
test
pop
divb
push
and
mov
popa
xchg
in
sub
int
out
std
jge
mov
jmp
rorl
aad
int3
fs
std
movsb
cmc
mov
add
mov
das
nop
push
lret
or
fcmovnbe
inc
pextrw
test
repz
sahf
jo
cwtl
call
lock
xor
ret
pop
push
mov
add
sbb
push
cld
movsl
mov
jb
inc
pop
or
popf
inc
iret
sbb
and
test
adc
aam
insl
xchg
or
sbbb
jnp
jne
loop
lock
mov
adc
inc
iret
jae
jb
movsb
add
and
rorl
and
and
xchg
add
dec
dec
mov
fwait
imul
lds
repz
cli
les
rclb
call
pop
jno
bound
pop
inc
js
clc
jns
jmp
jne
mov
lea
inc
jae
and
lret
ds
mov
cld
insl
addr16
pusha
das
outsb
arpl
mov
gs
and
out
xchg
xor
and
add
stos
mov
mov
pop
sub
loopne
popf
xchg
outsl
les
scas
xchg
inc
cmc
pop
xchg
loope
andb
dec
pop
ljmp
sahf
ss
xor
insl
dec
mov
jg
fimuls
sbb
arpl
call
sbb
movb
inc
dec
jmp
leave
icebp
sub
pop
or
sbb
push
jno
clc
xchg
leave
sti
fisubl
xchg
cwtl
inc
and
adc
or
sarb
sbb
cmp
add
xor
cmp
pop
stc
xor
and
or
test
aas
mov
add
in
das
sbb
pop
xchg
add
mov
pop
push
lods
sar
xlat
cmp
into
mov
cmp
icebp
fidivrl
test
mov
lea
ds
or
fstpl
test
mov
inc
mov
xchg
bound
push
loop
aaa
xchg
aad
jno
mov
xchg
bound
addl
pop
push
jns
enter
lahf
mov
pop
dec
mov
xchg
pusha
xchg
add
in
adc
xchg
add
out
mov
mov
mov
mov
jg
mull
cmp
incb
pushf
inc
mov
mov
out
push
or
shlb
xchg
pusha
adc
cmp
adc
dec
das
xchg
fidivrs
ja
fnstsw
xchg
das
add
sub
insb
xchg
pop
xchg
add
insb
inc
iret
add
fimull
adc
xchg
mov
dec
loope
cwtl
or
fstps
mov
stos
stc
jo
xor
rcr
add
aaa
stc
gs
lret
rol
loopne
cltd
je
mov
mov
pop
std
insl
inc
add
sbb
repz
pop
in
xchg
arpl
jge
pop
idiv
cmp
lret
add
inc
xchg
mov
repnz
mov
push
ds
insb
je
add
push
inc
pushf
push
sub
fs
cmp
lret
rolb
ret
test
repnz
sbb
jge
cltd
imul
call
loope
insb
ret
jns
push
and
mov
inc
jno
mov
dec
ret
lret
push
or
dec
mov
mov
pop
mov
mov
push
sub
and
mov
cwtl
pop
inc
mov
and
inc
into
jb
mov
push
faddl
jnp
jl
dec
into
bound
or
sbb
lods
std
out
movsl
fcoml
lock
imul
bound
outsb
jmp
call
fnsave
adc
add
sbbl
add
in
sub
or
incl
xorl
ds
sbb
fstpt
shll
mov
cld
cs
std
push
and
and
jl
add
push
mov
outsb
fwait
sub
push
mov
pop
mov
scas
out
repnz
xchg
inc
add
sti
out
push
xchg
cmpsl
pop
arpl
shrb
jno
in
jae
lret
push
je
xchg
mov
cli
faddl
xchg
jno
ja
xchg
and
lret
dec
std
lea
out
and
test
push
dec
push
faddl
outsb
orb
es
fs
jmp
mov
jge
dec
test
inc
pop
movsb
mov
ss
add
inc
mov
sbb
cmp
repnz
cmp
lret
or
and
xchg
adc
stos
mov
cltd
xor
je
enter
sub
cmp
push
int
mov
outsl
and
imul
cmp
cli
ljmp
xor
outsb
cld
fimull
jo
mov
and
push
pusha
repz
repz
icebp
cmpsb
xchg
ljmp
xchg
push
das
fldcw
cmp
inc
out
mov
mov
xchg
add
and
jmp
mov
push
cmp
ss
mov
cmp
sbb
pop
rcll
xchg
and
lcall
enter
dec
imul
xor
xchg
fwait
and
xchg
test
lret
out
cmc
rcll
fwait
sub
inc
je
sub
pop
add
sub
mov
adc
test
jb
and
xor
and
out
sbb
mov
fidivrs
and
fbld
xor
push
xor
jmp
mov
bound
push
ficoml
movl
aas
push
cltd
add
pop
lds
xor
enter
jle
dec
test
hlt
sbb
jmp
sbb
out
adc
icebp
iret
test
sub
das
xchg
aaa
xchg
rcr
xor
jcxz
lahf
push
cmp
push
loopne
jae
popf
xchg
lret
push
sbb
sti
and
mov
repnz
fisttps
mov
jecxz
xor
subb
das
or
pop
xor
inc
stc
test
jp
add
fs
movsb
dec
lret
arpl
pop
sub
xchg
mov
jle
out
inc
inc
aaa
mov
xor
shlb
subl
jne
adcb
les
test
stos
adc
pop
or
xchg
out
pop
popa
sub
ljmp
jno
ret
mov
cmp
popa
jecxz
clc
imul
jns
popa
sub
lods
and
cmp
outsb
push
call
push
int3
sub
lret
xor
out
in
pop
pop
je
mov
fstps
cmp
mov
cmc
jo
mov
in
mov
cmpsb
mov
adc
adc
cmc
das
aaa
adc
inc
cmp
add
sbb
into
cmpsb
popf
fmuls
xor
push
mov
lea
push
test
xorb
hlt
push
gs
mov
cwtl
arpl
cwtl
and
fdivrl
mov
cmp
sub
scas
ret
data16
jo
cmpsl
sti
cmp
fdivl
sub
adc
mov
je
arpl
adc
adc
xlat
xchg
pop
sbb
pusha
fsubrp
mov
test
repnz
xchg
mov
jp
and
rcrb
hlt
sbb
sbb
mov
movsb
mov
jns
popf
adc
hlt
sub
mov
pushf
test
pusha
jns
adc
loope
cmpsl
stos
repnz
mov
jns
and
pop
lcall
shll
jmp
aad
outsl
in
and
cmp
jecxz
inc
push
push
xor
push
sub
push
stos
inc
xor
add
call
js
jg
das
pop
lret
and
jo
pop
popf
mov
bound
and
mov
mov
rclb
pop
ficoml
cmc
pop
cmpsb
dec
aam
lods
xor
xor
xor
dec
or
cmc
dec
pop
enter
mov
mov
test
int
sub
lcall
push
mov
pop
shrl
loope
push
sub
xchg
adc
dec
push
loopne
sahf
fs
jnp
adcl
out
imul
push
add
out
int
sub
xor
push
das
xor
into
pop
xchg
push
cld
aas
mov
pop
xchg
add
imul
rcll
aaa
orl
xrelease
jne
mov
xlat
in
inc
jge
pop
mov
or
iret
inc
xor
in
shr
aam
pop
adc
cli
ljmp
cmp
cmp
dec
dec
popf
cmp
mov
cmp
gs
call
aaa
test
movsl
add
in
ss
sti
outsl
rcr
pop
in
sbb
lds
mov
aad
and
dec
mov
or
popa
mov
fiadds
adc
das
fildll
pop
mov
fdiv
lcall
add
mov
pop
fimuls
sub
sbb
mov
pop
or
pushf
xor
push
in
push
repnz
xor
xchg
and
lock
int3
adc
insb
xor
adc
mov
sub
sahf
js
and
xchg
repz
mov
movl
sbb
adc
stc
adc
and
imul
scas
shr
adc
clc
repnz
mov
add
outsb
jae
or
jbe
lret
lcall
sub
and
stos
pop
fadds
lahf
jb
xchg
int3
cmp
out
inc
sbb
mov
iret
xchg
fbld
aas
cwtl
adc
ret
in
mov
fnsave
imul
jb
pop
mov
lret
aas
sbb
stc
outsb
imul
jne
push
mov
clc
andl
or
sbb
cmpsl
mov
add
push
insb
sbb
cmp
ljmp
out
sar
lahf
mov
stos
lahf
xchg
adc
ss
mov
loopne
adc
movb
ret
push
sub
jne
mov
sub
pop
push
xchg
or
cmp
xor
xchg
fcompl
jo
cwtl
sub
imul
sbb
xlat
pop
cmp
xchg
pop
movsl
dec
push
cpuid
jo
sar
sahf
out
adc
adc
ja
cltd
adc
xchg
cmpsb
inc
outsb
inc
cmpb
shrl
fnstsw
push
nop
sbbb
aas
mov
jge
add
push
lds
pop
lahf
fsubl
cmp
cld
xor
call
pop
jecxz
addr16
sub
sti
test
fsubl
dec
scas
sti
aad
mov
or
repz
enter
pushf
out
test
or
inc
and
lods
push
mov
mov
xor
shr
rol
mov
movsl
pusha
sarb
test
pushf
or
or
int
jno
test
loopne
inc
inc
xor
jno
gs
dec
lea
xor
and
mov
sub
sub
jg
xchg
mov
stos
push
xlat
sti
iret
xchg
mov
pop
je
dec
push
cmp
and
mov
popf
mov
xor
jbe
pop
ljmp
mov
movsl
call
sbb
movsb
sbb
adc
sub
jno
int
mov
xchg
xchg
test
jp
psubq
add
imul
cld
nop
scas
fcompl
fsubrs
ja
out
sarb
xor
es
rorb
xlat
scas
and
push
sub
sahf
ficoms
lret
jge
dec
cmp
or
test
adc
cmpsl
dec
xchg
mov
pop
adc
push
jo
imul
xor
inc
pop
jae
and
fcoms
dec
jb,pt
sub
mov
cltd
loop
adc
xchg
or
iret
xchg
xor
lock
ljmp
jb
lahf
shll
sub
push
jae
shll
xorl
mov
cmc
lods
rcr
cmpsb
cmpsb
dec
cmpsb
js
mov
das
push
int
je
aas
hlt
scas
and
jge
add
inc
gs
jne
fldcw
and
mov
add
mov
adc
push
js
pop
or
roll
push
fs
xor
jp
scas
stc
shlb
jle
out
nop
rcrb
les
imul
mov
mov
xor
xlat
sbb
add
add
data16
xlat
data16
not
hlt
lret
cmp
cmpsb
fs
addr16
out
jno
pop
dec
adc
pop
jmp
mov
xchg
sbb
iret
sahf
jp
repnz
dec
in
mov
inc
adc
pop
xchg
rcrl
and
stc
in
mov
cmp
stos
call
testl
adc
or
xorl
pop
in
rolb
int3
xchg
std
fs
push
mov
sti
es
es
or
sbb
fucomip
jl
push
jno
inc
jns
dec
sbb
jge
out
xchg
xor
xlat
into
int3
jo
aam
lret
cmp
xor
fcmovnb
mov
sub
sub
sti
xchg
and
or
mov
aam
cmpsb
cmc
ja
sbb
mov
inc
xor
bound
dec
cmp
and
pop
xchg
dec
rcrb
xchg
dec
out
mov
ret
sbb
add
cmp
int
mov
nop
push
out
dec
sub
sbb
jecxz
jg
add
or
xchg
adc
aaa
sbb
dec
pusha
iret
adc
inc
adc
pushf
push
repnz
mov
mov
outsl
outsl
test
fs
cmp
add
mov
scas
insb
push
jnp
ret
aas
inc
and
jb
cmp
movsb
mov
mov
xor
mov
stc
jns
jno
loop
add
mov
pop
out
inc
push
push
loope
rcrl
xor
js
lea
jno
xor
mov
stc
les
shll
adc
iret
sub
dec
pop
jge
fwait
cmp
xlat
test
mov
adc
lret
dec
mov
rorb
mov
xor
mov
dec
sub
clc
pop
xor
iret
ficoms
scas
fdiv
hlt
in
movsb
pop
and
xchg
ljmp
inc
or
loop
and
sub
aaa
ja
ret
and
add
sbb
unpckhps
pop
mov
lock
sbb
test
push
dec
hlt
mov
add
out
test
mulps
roll
xchg
push
xchg
cld
imul
cltd
jmp
int3
pop
out
pop
mov
sub
cmp
loopne
mov
mov
popa
sbb
lret
sahf
mov
xor
adc
shll
data16
popf
and
and
scas
sub
cmp
subb
dec
xchg
xorb
or
push
loop
fs
push
cmc
jle
sbb
push
mov
lock
out
push
xor
lahf
sbb
sbb
es
mov
cmp
shll
insl
in
pop
in
out
loop
cmpsb
mov
hlt
testl
adcb
stos
daa
sbb
or
pop
arpl
push
aam
std
ljmp
and
mov
mov
mov
jp
mov
pop
jp
sbb
cmp
scas
add
insb
mov
jmp
inc
cld
bound
test
arpl
sbb
jo
pusha
or
sub
shll
xchg
jb
aam
xchg
jno
and
jnp
fiadds
and
mov
outsl
jns
cltd
push
sub
sub
jmp
in
fs
xchg
adc
mov
cmp
mov
incb
ret
and
cmpb
or
nop
pop
xor
enter
cwtl
jbe
sub
sub
ljmp
lcall
push
cmp
int
inc
adc
outsl
mov
jno
xorl
cwtl
mov
es
notb
cmp
in
psubd
mov
jb
add
repz
shrb
xor
mov
add
jg
add
cld
fwait
and
mov
dec
pusha
mov
fimull
stos
lret
xor
scas
hlt
fimull
jo
test
pop
je
inc
lods
push
notl
nop
pop
inc
lea
ds
stos
leave
xor
push
insb
inc
sub
jae
enter
mov
aas
shr
fidivrl
fisubrs
dec
pop
pop
out
lret
movsl
in
dec
xor
shl
loope
aaa
jne
cmp
jg
loopne
cwtl
out
mov
js
push
xchg
aam
subb
iret
cmp
dec
pop
shl
aas
into
pop
ret
cmpsl
in
clc
push
push
jge
dec
sahf
test
cld
fbstp
cmp
les
pop
mov
aaa
push
lret
cmpl
jo
xlat
int3
hlt
rcl
or
cmpl
push
push
mov
test
mov
loopne
lock
sub
jnp,pn
mov
and
rorb
push
mov
nop
pop
imul
mov
andb
sbb
data16
dec
dec
cmp
push
rclb
sbb
shrl
mov
dec
shll
sub
cld
into
movsl
test
lods
lea
sbbb
mov
jae
jb
out
outsl
scas
or
iret
pop
icebp
stos
cmp
lds
pop
je
xchg
ja
mov
mov
sub
or
cmp
mov
aaa
sbb
pop
ja
fwait
pop
out
fisubl
lods
dec
cmp
outsl
std
test
js
fcmovne
jl
clc
arpl
or
xchg
gs
jbe
popf
and
testb
push
pop
mov
fldenv
pop
mov
dec
mov
bound
popf
xor
jge
xor
dec
xchg
mov
fstl
out
mov
std
adc
xor
and
in
insl
sbb
push
or
repz
push
stc
jb
test
lock
mov
add
pusha
aas
push
dec
pop
dec
pushf
cmpsl
enter
jo
cltd
mov
jmp
adc
call
lods
fistpll
lret
std
cli
and
and
imul
mov
loop
out
inc
xor
dec
mov
cmc
cmp
inc
dec
mov
repz
fsubr
lret
loope
jbe
rclb
xchg
dec
push
push
pop
pop
lds
repz
adc
sub
xchg
push
cwtl
mov
jb
into
xchg
adc
push
int
clc
and
out
push
movsl
pop
fidivl
mov
jecxz
stos
mov
mov
leave
pop
jb
add
lret
mov
sub
pop
push
mov
mov
enter
jle
fs
out
arpl
pop
push
mov
add
scas
push
mov
lret
sub
push
enter
out
stc
xchg
mov
insb
insb
and
inc
cmp
xor
mov
or
fisubrs
push
icebp
test
dec
js
xchg
adc
xlat
loopne
dec
jecxz
pop
add
jo
les
xchg
and
rep
inc
mov
mov
out
or
cmp
xchg
mov
es
arpl
loop
inc
jb
or
cld
int
test
inc
mov
insl
aad
adc
les
mov
ljmp
mov
in
stos
fldenv
out
bound
mov
lock
or
ljmp
jne
scas
sbb
pop
xlat
xor
arpl
std
sar
add
cmp
pop
gs
lds
pop
gs
fimull
ss
xlat
dec
cmpsb
inc
pop
test
insl
inc
test
mov
inc
adcb
jbe
ret
leave
das
sub
xchg
inc
jne
or
daa
pop
mov
cmp
dec
incl
jl
inc
adc
cwtl
pop
int
inc
push
stc
xor
and
or
fiaddl
mov
repz
xchg
xlat
ficompl
mov
pop
push
arpl
lods
test
insl
not
mov
push
pop
daa
ficoml
mov
imul
xor
sub
sarb
inc
mov
sbb
out
cmc
xchg
inc
inc
divb
jp
add
ja
cmp
cmp
xor
arpl
int
adc
jne
pushfw
aam
jle
imul
imul
xor
sub
std
cmp
aas
sub
mov
sub
enter
hlt
or
and
cli
mov
idivl
loop
and
jo
ret
insb
mov
fsub
ret
loop
out
ss
cmpsl
mov
sub
pop
sub
dec
add
nop
push
jl
xchg
mov
scas
or
push
fldl
aad
or
xor
cmpsb
ja
fldt
jmp
and
sub
rcll
pop
test
push
push
push
sahf
mov
in
add
in
nop
or
cmpsl
jle
cli
mov
inc
inc
mov
fmull
and
dec
adc
gs
dec
xchg
daa
repnz
ja
aad
pusha
pop
nop
mov
cmp
mov
rol
fdivl
inc
scas
aad
lcall
mov
xchg
jl
xor
add
jl
jl
test
xchg
lret
pop
pop
and
inc
jg
insb
push
mov
cmp
daa
stos
mov
inc
mov
fbld
xchg
nop
scas
mov
or
and
cmp
adc
mov
cld
mov
stos
ret
cmpsb
pop
orb
es
push
pushf
mov
iret
push
pop
sarb
adc
mov
out
sarl
push
cmpsl
sbb
xchg
cmp
mov
inc
sbb
pop
add
dec
xor
ljmp
or
dec
jmp
sub
pop
add
rcr
pop
dec
negl
mov
rcrl
jb
push
inc
inc
mov
adcb
sub
or
mov
addr16
xchg
cmp
pop
jl
adc
stos
rorb
jl
xchg
pop
jl
sub
sbb
mov
jg
adc
or
push
sti
mov
addl
jae
daa
std
sbb
pop
and
add
cld
filds
rclb
stc
cmp
das
cmpsb
pop
out
cmp
mov
fs
lea
mov
cmp
insl
cmp
sbb
and
adc
mov
push
mov
or
loopne
mov
test
fnsave
mov
repz
mov
lods
fsubs
shrb
adc
sub
pusha
add
ljmp
mov
adc
dec
pushl
xor
cmp
jmp
popf
loope
sub
cs
xor
pushf
xchg
in
xor
inc
das
hlt
stos
mov
sub
and
add
cmp
lds
xor
lea
js
mov
sub
mull
das
push
imul
dec
cmpl
or
mov
aaa
loope
stos
xor
outsb
mov
sbbb
call
adcl
pop
imul
test
popf
jg
pop
adc
imul
fcoml
or
add
add
sbb
call
push
jecxz
cld
dec
fwait
and
fsts
or
mov
pop
mov
adc
or
or
sti
or
xorb
lock
stc
stos
jns
cli
xchg
jge
call
lock
enter
iret
inc
inc
pop
int3
or
push
lods
cli
xor
adc
aad
rcrb
pop
loope
scas
cmp
xor
fmull
xor
or
xor
pop
pushf
scas
sbb
xor
mov
and
xchg
sbbb
jb
dec
nop
dec
aas
hlt
mov
lahf
inc
cwtl
scas
mov
xchg
and
nop
arpl
pop
xchg
test
lcall
lret
std
sbb
sbb
mov
lea
inc
test
jmp
pushf
xchg
adc
jmp
shl
push
in
in
stos
pop
insl
and
mov
lret
arpl
andb
push
sub
scas
ljmp
jo
or
xorb
pop
xchg
add
xor
cmpsl
sti
fdivs
push
dec
adc
insl
dec
popa
mov
in
dec
jp
enter
js
fisubl
pusha
sub
jbe
jl
dec
push
insb
xor
dec
dec
and
les
ret
stos
sahf
adc
rolb
inc
lds
jg
cmpb
inc
popf
push
mov
mov
push
mov
lods
jl
iret
or
xlat
ficompl
push
popa
jbe
or
cwtl
rcrb
je
data16
clc
les
lods
call
cli
jecxz
ret
mov
data16
negl
xchg
pop
sub
push
lcall
cmpsl
or
add
sub
cmpl
mov
sbb
repz
addr16
mov
xor
fsubrp
mov
fucomp
rcrb
adc
dec
test
jmp
fwait
pop
jne
into
imul
xor
hlt
rorb
xor
fisubrs
push
aaa
ss
lret
mov
decl
in
mov
notb
fs
out
inc
lds
pop
inc
dec
fcomps
orl
out
fs
wbinvd
cmp
aaa
xor
popa
into
and
mov
lods
lcall
in
xchg
data16
lcall
roll
out
bound
aaa
incl
ss
push
mov
jg
es
add
test
int
cmp
push
sub
test
lock
sbb
lret
or
adc
jg
jge
andl
pop
pop
or
das
push
add
les
dec
loop,pn
push
adc
shll
add
sub
inc
cltd
cmp
fstpl
dec
push
mul
inc
mov
shlb
pushf
popa
dec
clc
pusha
jb
sbb
imul
hlt
lret
leave
hlt
je
push
xchg
std
xchg
shl
push
mov
ret
xor
pop
gs
outsl
cli
cmp
sti
lret
aaa
mov
lock
orb
mov
jecxz
sbb
fs
sub
and
popf
lds
jnp
xchg
std
mov
add
sti
ret
cld
cwtl
outsl
ss
sbb
bt
or
lret
clc
stc
push
xlat
cs
push
loopne
lods
add
sarb
cmpsl
inc
inc
dec
push
push
jo
or
leave
jnp
data16
addr16
dec
inc
lahf
daa
fsubr
sub
aam
mov
push
fs
cmpl
into
xor
addr16
pop
jg
les
rcrl
dec
xor
xor
xor
mov
pusha
inc
ficoms
xchg
jl
xchg
mov
pop
push
dec
mov
call
jl
jg
push
push
scas
jg
cmpsl
jg
xchg
notb
ja
std
mov
inc
mov
fnstsw
mov
add
or
sbb
sbb
mov
mov
pop
in
and
ja
ja
cmp
and
xchg
leave
sub
fimull
push
ja
cwtl
push
pop
cmp
push
mov
std
add
push
cld
out
int3
add
je
or
jg
outsl
fsub
xchg
clc
imul
shrl
je
or
pop
jle
sub
jae
pop
xchg
mov
les
testb
fs
or
call
xchg
mov
iret
adc
xor
pop
enter
repz
inc
cs
sub
add
inc
push
dec
mov
out
xchg
paddb
shll
mov
xchg
xchg
mov
fwait
adc
xchg
adc
cmp
mov
repz
lret
in
dec
sbb
sbb
jmp
imul
add
jg
jmp
jle,pn
popw
scas
loope
movsl
pop
invd
out
orl
add
mov
push
outsl
inc
scas
push
adc
pop
pop
lret
cwtl
or
sbb
cltd
rclb
pop
loope
aad
xchg
or
daa
jecxz
test
pop
jecxz
imul
lods
mov
sub
and
les
dec
lea
mov
into
arpl
xchg
jg
mov
mov
rcrl
add
in
xchg
pop
test
out
pushf
adc
and
lock
iret
mov
adcb
inc
jmp
pop
in
mov
cmp
test
inc
push
dec
fists
mov
pop
dec
mov
ret
mov
hlt
orl
xor
xor
pop
lret
pop
in
aad
jae
cld
xchg
mov
hlt
or
aam
jo
mov
iret
sbb
les
stos
jge
adcb
and
in
stos
std
xchg
aam
jb
fimuls
and
in
inc
jo
imul
xor
inc
aad
mov
lahf
mov
out
fxch
les
sbb
sbb
out
xlat
bswap
pop
cmp
mov
pop
popf
repz
outsb
pop
movq
stos
clc
lods
and
mov
adc
pop
out
sahf
mov
xchg
jbe
jg
rolb
cli
mov
xchg
and
xchg
sbb
lahf
cmpsl
or
pusha
fnstsw
adc
lret
mov
xchg
sbb
lret
es
ss
dec
xchg
out
dec
push
jp
pushf
dec
aad
sarl
movsb
inc
dec
sub
outsl
push
and
jmp
dec
ljmp
xchg
xchg
dec
stos
cmp
mov
push
ficomps
mov
push
orl
cmp
test
int3
push
nop
xchg
push
std
cmc
push
pusha
je
mov
mov
pop
inc
inc
cmc
mov
sub
xchg
xchg
add
xor
test
push
pop
inc
in
call
sbb
xchg
mov
out
cmp
mov
mov
jg
lea
mulb
out
pop
push
xor
fcomps
mov
hlt
add
repz
mov
mov
pop
pusha
int3
jnp
adc
xor
adc
fisubs
sub
insl
data16
loop
pop
enter
mov
jno
mov
das
movsb
dec
pop
mov
cmpsb
xchg
imul
or
push
mov
xor
push
push
fsts
cwtl
into
cltd
xchg
dec
adc
pusha
cmp
mov
test
das
in
mov
aas
test
arpl
shlb
adcb
loope
dec
xlat
out
sti
incb
sbb
push
lahf
sub
stc
dec
mul
mov
inc
dec
mov
aas
lea
jns
call
sbb
cmpsl
fldenv
push
cmp
lcall
ja
stc
push
mov
xor
ja
cmpsl
dec
mov
aaa
add
add
xchg
cmp
xlat
rolb
fisubl
mov
fmuls
nop
std
leave
sbb
aad
cmp
add
testb
lods
pop
and
aas
das
xchg
jns
gs
jbe
jnp
add
mov
aam
addr16
loope
cmp
jns
loope
push
bswap
idivl
lods
add
je
cmp
cltd
or
imul
dec
daa
gs
mov
or
lea
test
push
out
rorl
mov
jmp
call
jg
mov
xchg
cmpsb
push
sub
les
xor
lret
insb
ja
mov
adc
fisttpl
cli
cmpsb
jo
mov
inc
sti
mov
enter
sub
add
test
fcmovnb
in
outsb
push
jp
hlt
mov
adc
or
stc
mov
in
jo
test
popa
mov
mov
test
and
or
mov
repz
dec
cmpsl
dec
pop
and
ret
pop
int
test
sub
gs
dec
pop
notb
jmp
dec
fs
das
repnz
loop
ror
ljmp
sub
movsl
sub
mov
jnp
add
mov
dec
lret
jo
push
insl
or
push
movsb
aas
sbb
cmc
push
jge
jge
out
jl
inc
addr16
jle
sub
mov
sbb
push
sbb
pop
sub
mov
movsb
inc
int3
ljmp
jno
or
cmpsl
jae
cmp
test
sbb
inc
sbb
jl
add
insb
cs
insb
xchg
out
sbbl
and
sub
mov
loopne
mov
and
inc
and
outsb
lock
sbb
cmp
push
fdivrl
jle
ljmp
or
mov
mov
jg
xor
repz
das
mov
xchg
pop
adc
or
sbbl
andl
pop
stos
adc
movsb
sub
lea
cmp
js
xor
fisttps
mov
mov
pop
xchg
lods
mov
pusha
fbld
int3
out
sub
loop
mov
push
imul
inc
mov
mov
xchg
add
dec
out
repz
sub
xchg
xor
and
cs
xchg
inc
lahf
or
mov
out
pusha
pop
jg
pop
jnp
call
fdivrs
add
adc
mov
push
dec
push
sbb
and
fidivrl
pop
cmpsl
loop
mov
xchg
mov
rorb
add
pop
loop
jge
mov
js
dec
inc
mov
mov
and
in
rorb
mov
cmp
xchg
out
sbb
and
or
cmpsl
jecxz
add
mov
pop
inc
cmpsl
pushl
rcrl
inc
pushf
inc
adc
dec
out
in
scas
sbb
xchg
sbb
cmpsb
dec
xchg
mov
xchg
mov
lods
pop
xchg
pop
cmp
push
add
outsl
inc
jp
mov
aad
and
sub
out
stos
outsb
mov
inc
rorb
and
addb
mov
sub
xchg
and
mov
in
xor
in
mov
mov
mov
test
mov
fidivl
mov
bound
sub
xchg
popf
fnstenv
je
orl
sbb
ret
in
or
push
mov
addr16
xchg
loop
mov
xor
popf
gs
lret
or
fnstsw
pusha
ja
jle
xchg
popf
mov
xor
lret
lods
push
fldt
jo
movsl
sti
push
or
into
ds
rolb
shl
das
jle
inc
aaa
inc
fwait
imul
inc
mov
add
push
jp
dec
pop
hlt
fistps
jbe
popf
dec
dec
xchg
mov
mov
mov
push
sti
fs
push
inc
xchg
lods
call
and
into
sbb
sub
xlat
mov
jp
loope
outsb
pop
popa
jl
pop
mov
nop
stos
cmpsl
cmpsb
jle
and
loope
jne
into
sbb
gs
dec
dec
cmpsb
xchg
pop
femms
repnz
bound
xchg
mov
lret
mov
xchg
dec
stc
pop
or
sub
sub
lahf
stos
int
int3
or
lret
sub
mov
mov
dec
sbb
subb
inc
mov
insb
scas
mov
insl
adc
jecxz
loop
movsl
das
lods
ljmp
jb
loopne
in
pop
fidivl
in
jl
fs
xor
dec
add
movsl
aas
pop
das
xor
mov
lahf
pop
pop
or
cmp
pop
or
loopne
inc
scas
aas
popf
sahf
dec
pop
pop
stos
ror
in
xor
xchg
adc
mov
sub
je
or
lahf
test
test
mov
js
xchg
daa
sti
pop
mov
mov
out
scas
loopne
cwtl
mov
or
pop
push
imul
nop
push
pop
xchg
mov
push
cmp
sahf
adc
in
xchg
lret
imul
sbb
in
mov
lods
adc
push
out
ret
rcrb
xchg
addl
sbb
popa
cmp
jne
mov
jbe
inc
ja
mov
daa
push
or
ficomps
gs
xchg
jp
lret
xor
inc
adcb
imul
pusha
loope
or
clc
movsb
ja
sub
sub
je
pop
pop
push
fbld
test
or
add
lret
cmpsb
shrl
sti
imul
loopne
insb
push
out
leave
leave
xchg
test
insb
shlb
pop
pop
sub
in
lods
sahf
in
or
movsl
data16
cli
inc
rolb
outsl
sub
mov
cli
mov
adc
add
or
aad
rcrl
ret
and
std
shrb
hlt
or
bound
das
and
dec
pop
daa
push
cmc
movzbl
leave
fldt
movsb
push
mov
xchg
sbb
gs
xor
and
fs
xor
lds
mov
test
push
mov
in
ucomiss
adcb
mov
mov
je,pn
and
cmp
push
aad
ret
fsubrp
adcb
sti
mov
mov
dec
fsubs
insb
nop
lahf
imul
jmp
shrl
or
ss
cmp
dec
xchg
fnstenv
xor
cwtl
inc
lods
cmc
pop
test
popa
push
push
jo
mov
jp
sub
std
xchg
sahf
xlat
in
push
dec
cmp
daa
pushf
sub
inc
fstps
jl
mov
stos
jp
mov
and
movsl
stos
outsl
mov
sar
lock
cmp
xchg
cmc
iret
pop
test
test
inc
insl
movsb
mov
jne
test
cs
ret
lret
lret
mov
xor
js
sub
jmp
add
js
and
sub
jl
rcr
in
push
out
das
js
inc
fstps
testb
mov
lods
cmpsl
cmp
xor
ret
lods
dec
fwait
in
lea
xchg
int3
lret
sbb
sub
rcrb
mov
js
ss
arpl
mov
es
hlt
test
pop
sbb
jb
incl
repz
loopne
ss
mov
and
xor
loopne
inc
sub
imul
inc
dec
js
push
mov
ds
dec
enter
inc
jmp
cmp
inc
movsl
mov
add
in
rorl
dec
mov
cmp
pop
sbb
mov
nop
push
mov
popf
and
popa
fdivrp
shrb
mov
mul
cwtl
popa
sti
push
xchg
es
out
les
outsb
jecxz
mov
arpl
sti
repnz
cld
pusha
in
sbb
dec
sbb
mov
stos
imul
push
push
push
popa
push
dec
mov
jb
lret
int3
mov
fldt
push
aam
test
push
faddl
xchg
roll
pop
int
shl
jecxz
test
jp
cmp
cs
jmp
lea
xor
and
daa
rclb
loop
pop
addb
sub
push
lea
sbb
loope
cmpsb
sahf
js
scas
pop
dec
or
in
test
filds
push
enter
or
or
adc
nop
xchg
int
movsl
js
in
dec
sahf
mov
and
dec
out
lret
sub
shll
repz
stc
sbb
ljmp
sbb
jnp
enter
pop
and
push
js
rcrb
std
arpl
jmp
fcmovnu
jbe
mov
or
xor
shll
jno
imul
sbb
aad
or
jg
jg
lret
gs
pop
sbbl
push
mov
loop
pushf
call
pop
mov
loopne
xchg
incb
sbb
into
rorb
lret
sbb
insb
imul
sbbb
repnz
aad
test
mov
rcrb
sbb
mov
test
pusha
and
dec
insl
ds
hlt
std
std
cmp
dec
adc
test
out
fnstsw
inc
fstpt
sub
adc
cmp
or
mov
in
cwtl
inc
cld
inc
jl
imul
jmp
jecxz
cwtl
mov
jle
xchg
lret
pop
addb
push
sub
in
jno
cmp
mov
sbb
xchg
xor
mov
pop
pop
mov
sbb
not
xchg
jb
xchg
sti
jae
daa
movsl
sub
cmc
adc
pop
loop
lret
adc
sbb
jmp
jg
fwait
sbb
xchg
testb
popf
mov
stos
dec
outsb
jmp
les
fdivrp
rol
add
sbb
jl
jnp
bound
pop
hlt
mov
push
outsl
repnz
and
xor
fisttpl
xor
sub
jp
inc
inc
mov
mov
dec
repz
xlat
outsb
mov
fidivrs
mov
jmp
sbb
out
dec
jo
mov
aas
js
xchg
fldl
invd
inc
lock
cmpsl
sub
das
scas
nop
test
pop
call
bound
lret
adc
or
jb
das
mov
in
xchg
and
adc
mov
xor
in
cmp
mov
aas
js
mov
insl
push
in
dec
jl
popf
out
int
sub
filds
pop
jge
jae
add
loope
cmp
hlt
enter
mov
add
nop
xor
mov
sub
nop
cs
fldl
shrl
mov
adc
xor
mov
pop
test
je
sbb
imul
test
imul
in
lret
incl
sbb
jnp
sbb
ss
aad
jns
sub
data16
das
arpl
mov
adc
cmp
cmp
push
xchg
inc
sbb
popa
outsb
shll
adc
mov
fisubrs
mov
std
scas
push
cli
in
and
cld
push
in
xor
int
int3
lret
add
lods
jle
push
test
movsb
adc
and
sub
movntps
inc
lock
xor
mov
pop
mov
sub
sarl
lods
mov
and
cmp
scas
cmp
fs
imulb
pusha
mov
adcb
cmp
int
aaa
stos
aad
inc
mov
adc
fimull
fs
int3
sub
and
test
lods
inc
mov
pop
push
cwtl
movsl
pop
fld
jae
mov
es
mov
testb
jecxz
loope
aaa
je
fucomp
shlb
cmp
repnz
dec
stos
inc
mov
ja
jae
add
sar
mov
testb
jp
ljmp
lock
daa
outsb
cwtl
sub
xchg
jge
out
fnstsw
dec
lds
adc
xchg
aaa
xorl
sub
inc
mov
jecxz
or
sbb
push
cwtl
mov
xchg
loope
cmpsl
fisubrl
cmpsl
pavgw
sbb
xor
fs
pop
jl
fsub
mov
test
sub
fbld
loope
adc
xor
into
out
arpl
les
pop
shlb
jge
cwtl
fdivs
push
arpl
cmp
cs
loop
cld
mov
dec
lahf
push
jbe
popa
repz
cmpb
jp
dec
mov
ja
sub
inc
fildl
mov
dec
iret
mov
cmp
outsl
mov
in
out
int3
pop
shlb
test
inc
bound
or
call
cmp
xlat
ret
adc
in
cmp
in
cmp
push
and
pop
sti
jbe
or
xor
cwtl
hlt
dec
add
mov
pop
pop
mov
mov
pop
movsl
sbb
rorl
and
inc
and
push
data16
sub
xor
es
mov
call
cli
xchg
dec
or
cmc
xor
pop
push
rcr
insb
int
lods
dec
lods
cs
data16
out
sub
jae
mov
mov
cmc
ret
sub
inc
rcrb
cmpl
stos
in
movsb
pushf
jbe
pop
cld
push
jns
mov
movsl
jb
mov
icebp
xchg
movsb
xchg
push
in
sbb
rorb
mov
lods
push
fstpt
push
mov
rcl
imul
pcmpeqw
xchg
and
pusha
xor
ss
sbb
mov
mov
mov
push
cmp
adcb
xchg
hlt
arpl
mov
jbe
cmp
popf
outsb
and
ret
and
pop
sbb
loop
lahf
dec
add
fistps
lea
outsb
out
pop
std
add
adc
test
sub
hlt
inc
sbb
fdivl
mov
mov
fs
and
sbb
jbe
daa
sbb
sub
ds
adc
cmp
aas
ss
int3
enter
add
cmc
xlat
or
jo
int3
mov
int3
xor
aam
rcr
pop
or
outsb
push
mov
mov
enter
lods
inc
xchg
pop
stos
mov
lock
lcall
xchg
inc
push
faddl
call
dec
int
jle
addr16
dec
xlat
sub
out
rorb
insl
fistpl
shll
popf
je
xchg
cmp
push
call
mov
cli
push
fildll
mov
or
adcl
mov
ljmp
in
xchg
sbb
fidivl
mov
lahf
xor
sbb
mov
jo
out
pushl
xor
cwtl
xchg
popf
in
je
jnp
inc
mov
jnp
and
add
fwait
mov
sbb
call
shrl
lret
mov
and
fisubrl
inc
sub
iret
cs
sbb
and
push
xchg
ret
arpl
add
cld
rep
leave
mov
clc
push
fdivrl
arpl
out
jbe
pop
es
xchg
add
stc
pop
or
shll
test
mov
jle
mov
test
icebp
xchg
or
sub
add
xchg
pop
adc
or
dec
adc
test
mov
push
jne
inc
cmc
mov
fnsave
cmp
ret
hlt
enter
fistl
pop
lahf
int
mov
mov
dec
fisubrs
mov
ret
sbb
loop
iret
sub
adc
push
dec
mov
out
mov
lret
or
xchg
jo
add
stos
xor
aaa
pop
push
and
fcompl
xchg
rorl
pusha
adc
pop
sbb
adc
mov
lds
fadds
cmp
imul
mov
mov
dec
pushf
adc
cmc
cld
popa
dec
xchg
pop
stos
sahf
ret
leave
cmp
test
xchg
push
in
push
inc
mov
shrb
or
or
cmp
mul
and
pop
repz
ljmp
iret
sti
mov
in
sub
sbb
stc
lea
mov
lods
or
arpl
lret
xor
mov
push
dec
test
stc
pop
pop
dec
mov
mov
and
pop
aas
addr16
and
test
mov
inc
jg
mov
add
add
inc
push
add
and
std
push
sub
add
icebp
mov
mov
sbb
mov
adc
std
pop
mov
or
mov
and
xlat
inc
add
mov
fldcw
push
repz
lret
push
xchg
nop
xor
or
mov
adc
int3
cmp
outsl
add
jae
inc
xchg
mov
inc
xor
repz
insl
add
jl
jne
ds
and
sub
jmp
push
mov
xchg
cltd
iret
repnz
sbb
adc
movsl
cld
fcmovnb
gs
pop
or
jno
pop
inc
in
cmpl
jbe
stos
mov
filds
mov
in
xchg
subl
bound
leave
ss
or
bnd
in
pop
fdivl
push
pushf
ja
pushl
je
lock
js
pop
dec
push
in
mov
daa
stos
lcall
adc
fidivrs
adc
jne
sbbb
mov
mov
mov
jae
imul
pushf
jno
pop
bound
lret
jb
xchg
call
addr16
int
mov
xchg
lahf
xor
xor
xor
ss
in
push
xchg
enter
out
push
lock
adc
std
xchg
push
and
xor
std
xchg
cmp
add
clc
xchg
mov
mov
dec
adc
enter
arpl
mov
aam
dec
iret
test
movsb
adc
call
xor
push
xor
adcl
aas
dec
lods
mov
bnd
and
lret
or
mov
pop
dec
movsl
jnp
rolb
fidivl
push
jb
enter
ret
icebp
out
nop
stos
mov
aam
pop
mov
xchg
mov
push
push
popa
cld
fcoml
stos
push
xchg
sbb
les
in
popf
add
aam
pushf
mov
pop
mov
loopne
sub
arpl
and
fcmovne
sbb
dec
jns
cmp
lods
or
out
sti
cli
imul
sbb
call
cmpsl
out
mov
mov
pop
and
adc
xor
shr
mov
fsubr
lahf
call
ja
dec
cmpsl
add
jmp
cmp
scas
jnp
data16
lret
push
jge
loopne
lds
rcrl
sub
push
stos
sub
hlt
pushf
insl
inc
in
add
mov
shll
jne
cmp
mov
jnp
mov
jl
adc
sbb
int3
in
popa
insl
or
lods
pushf
movsb
mov
into
stc
loopne
mov
mov
xchg
cmp
pop
arpl
aam
jg
mov
aaa
jno
repz
add
mov
sti
repnz
push
jns
inc
dec
fisttpll
add
or
in
jae
pop
cli
push
add
adc
cmp
test
pop
sub
js
mov
fiaddl
pop
push
data16
xchg
sub
or
inc
dec
insb
mov
xor
add
lods
int3
xchg
stos
cmc
out
ljmp
push
outsl
jecxz
rorb
gs
add
test
incb
int
call
cmp
xchg
cmp
jnp
xchg
int3
lds
add
xchg
cmpsb
sub
scas
es
pop
outsl
xor
lods
sbb
test
xchg
xchg
and
ljmp
or
xchg
cmpsl
cmp
mov
xor
or
fiaddl
jecxz
in
ss
and
cltd
pop
push
mov
dec
bound
fwait
push
cmpsb
push
leave
push
jp
xor
sbb
in
dec
ljmp
mov
adc
insb
mov
inc
sbbb
add
ret
ja
jb
add
jecxz
or
rolb
dec
pop
jb
aaa
push
sub
stc
inc
test
loop
xchg
jo
adc
dec
sbb
imul
dec
mov
cmp
call
sub
lods
xor
push
lods
xor
or
xor
repz
rol
out
sti
pop
inc
adc
jno
mov
inc
xor
call
xor
jo
imul
cwtl
mov
stos
add
test
mov
out
inc
mov
adc
and
fsubrs
shlb
lret
push
add
mov
les
sti
mov
jge
and
push
mov
mov
push
cmp
cld
mov
push
fcomps
fldenv
ja
stc
push
push
dec
push
sarl
in
push
in
sbb
xchg
mov
sbbl
shl
faddp
mov
ss
scas
xor
pcmpeqd
xchg
ficompl
orl
push
xor
xchg
repnz
lret
push
and
mov
mov
js
push
add
pop
xchg
std
push
out
or
sub
xor
pop
stc
xor
lret
mov
cmp
aam
add
jle
mov
cmp
add
pop
out
jmp
push
test
gs
adc
test
xchg
pop
sbb
movl
fcmovb
int
stos
or
sbb
ja
loope
loop
js
insl
cmpb
mov
js
jnp
cmpsl
ficoml
xlat
sbb
das
callw
inc
fdivl
add
xchg
fcmovne
cli
lods
divb
sti
jl
iret
jge
fimuls
cs
ljmp
push
xchg
mov
call
push
stos
repz
pop
fsts
sbb
push
dec
inc
inc
add
outsb
and
add
in
push
adc
mov
xlat
adc
popf
push
bound
mov
push
add
fcoml
jns
scas
call
shr
adc
pop
sbb
mulb
mov
rcl
aad
jp
mov
imul
mov
xchg
inc
mov
gs
stos
sti
clc
insb
mov
xchg
enter
shrb
iret
sub
int
lds
mov
xchg
fsin
out
xlat
adc
adc
pop
xor
mov
inc
stos
cmp
push
push
ja
inc
mov
sbb
rolb
sbb
dec
icebp
pop
pop
sbb
out
mov
es
pop
add
int
jmp
push
test
cmp
leave
stos
jae
pop
dec
test
mov
sbb
mov
sbb
pusha
dec
insb
mov
cmp
xchg
add
insb
push
lea
push
daa
jnp
sbb
hlt
mov
je
mov
inc
adc
mov
jle
lcall
out
sbb
xor
mov
xchg
push
mov
add
xchg
mov
mov
cmpsl
inc
mov
cmpsl
adc
jns
ffree
inc
push
inc
in
jge
pop
xchg
sub
inc
sbb
insb
fmull
icebp
scas
lds
ja
mov
xchg
xchg
pop
cld
push
dec
mov
stos
jo
aad
shr
incb
repnz
fisttps
and
int
add
fwait
xor
mov
in
aam
mov
das
xchg
out
pop
es
sub
jnp
iret
sub
cmpsb
sub
into
xor
sub
and
pop
dec
rcrl
loopne
sub
aaa
or
repnz
cmp
sub
add
sub
mov
adc
sub
lock
fisubl
shll
dec
mov
add
cmpsb
lahf
sub
les
adc
ja
jbe
mov
jo
sbb
scas
enter
mov
push
in
orb
jbe
rcl
inc
or
dec
in
mov
testl
je
sub
iret
out
out
iret
adc
inc
out
cmp
or
andl
ljmp
loope
mov
test
xchg
push
fnsave
out
dec
mov
dec
insb
out
popf
add
aad
jb
dec
xchg
push
cmp
mov
out
mov
aaa
fiadds
xchg
add
jae
testl
and
add
ficoml
sub
xchg
rcrl
stos
and
push
lret
shlb
punpcklbw
or
test
sbb
sub
gs
icebp
jle
fldcw
leave
jo
dec
sahf
mov
lods
rolb
add
sub
ljmp
dec
jne
pusha
in
mov
aam
push
stos
inc
pop
icebp
lock
rcl
adc
xchg
es
loop
stc
shld
cmc
inc
insb
fcomp
out
mov
das
cs
std
in
and
adc
and
and
or
inc
neg
sbb
sub
mov
mov
in
adc
fidivs
loopne
fsubl
fsubl
xor
repnz
cwtl
dec
movsb
bound
jno
cltd
dec
xchg
fldcw
jle
daa
cmc
inc
clc
je
loop
push
pop
mov
push
mov
fsubrs
pop
push
cmp
xor
jne
lds
fsubl
cltd
xchg
push
imul
addr16
lds
out
push
pop
inc
lock
iret
out
pop
jl
popf
outsl
stos
cmp
nop
mov
or
add
or
sarl
sbb
sbb
jnp
adc
adcl
inc
lret
lea
sbb
iret
and
and
daa
sti
pop
jl
xchg
mov
mov
fiadds
inc
jo
mov
cmp
leave
cmp
jle
sub
dec
fsubl
loop
xchg
or
inc
xor
repz
mov
cbtw
scas
jbe
mov
push
addr16
jmp
aas
xor
or
out
xor
adc
jae
out
sbb
dec
movsb
and
xor
scas
daa
mov
aam
inc
jle
mov
mov
sbb
sub
adc
adc
aam
flds
enter
es
movsb
xor
iret
shlb
cmp
jns
xchg
adc
pop
ja
inc
or
daa
in
mov
cwtl
lcall
push
rcrb
loope
push
mov
push
test
insl
pop
sahf
int3
mov
lock
shll
fidivrs
rcrb
lea
xor
mov
je
sub
and
jp
and
inc
lock
add
out
test
mov
dec
hlt
mov
cs
pushf
into
pop
sbb
insb
cmp
mov
or
pop
push
into
sub
dec
push
dec
jb
fstpt
dec
mov
cli
fiaddl
push
outsb
push
repz
push
popa
push
lea
inc
nop
mov
aaa
lods
popf
in
or
outsb
adc
ljmp
popf
sub
movsb
cmpsb
in
stos
inc
mov
popa
pop
mov
jae
inc
sbb
sbbl
jmp
sbb
inc
xor
jg
sti
lcall
movsb
fs
mov
jae
xchg
iret
jno
adc
jo
cmpsb
pop
mov
sub
jbe
adc
jne
pop
push
pop
xchg
les
mov
push
fwait
jp
add
sub
inc
push
mov
push
xorl
mov
and
pop
cmp
push
push
loopne
pop
pop
mov
sub
aaa
mov
mov
subb
out
test
cmp
sbb
fcomps
in
sbb
shl
stos
push
adc
popa
jae
insb
push
clc
dec
mov
or
ret
xchg
jge
rcrb
and
cld
in
push
xchg
fisubrl
jmp
add
or
sti
or
sub
and
push
dec
add
jecxz
mov
and
sub
or
and
push
mov
mov
lret
popf
adc
sbbl
jge
outsb
mov
add
pushf
aam
add
inc
out
mov
add
xor
cld
mov
or
and
or
mov
shrl
add
push
rcrl
dec
stos
shlb
lods
fcmovnb
and
test
imul
dec
pop
test
cmp
mov
and
adc
mov
mov
sti
xchg
ret
ret
lret
xor
cmpsb
je
movsl
shll
mov
into
inc
je
cmp
icebp
sbb
repnz
test
sbb
adc
pop
lock
ja,pt
scas
mov
sub
ror
out
sbb
out
sbb
gs
pop
mov
lret
lahf
lods
test
cmp
shrl
rcll
icebp
sub
and
sbb
shlb
ret
add
subb
aaa
sub
stc
jp
gs
mov
enter
or
fs
into
and
testl
in
dec
pushf
pop
push
pop
inc
jnp
cmp
add
cmp
push
fildl
rcll
retw
adc
cmp
cmpsl
orl
add
push
sbb
sbb
cltd
test
and
inc
ret
std
icebp
push
inc
pushf
testl
push
into
xlat
iret
jg
jno
mov
fsubr
push
in
das
jns
add
cs
call
std
add
dec
mov
les
incl
adcb
sbb
push
adc
push
dec
sahf
in
ljmp
in
or
lock
mov
fistpll
popf
test
shll
inc
sub
add
inc
std
sbb
mov
out
mov
sub
sub
jecxz
jns
lods
movsl
and
jp
das
sub
loop
rcl
fnstsw
rorl
inc
out
enter
addr16
in
je
xor
test
cld
cmpb
sbbl
dec
fwait
popf
adc
sbb
or
mov
cwtl
mov
jmp
mov
dec
inc
mov
sbb
jmp
adc
sub
in
push
lods
popf
pop
lods
mov
add
mov
sbb
addr16
sub
out
jbe
popf
arpl
xor
sub
pop
or
ret
out
xabort
and
adc
mov
and
mov
out
adc
in
inc
or
negl
mov
mov
inc
es
sbb
popf
arpl
jmp
inc
fidivrl
shrl
push
das
or
xchg
leave
idivb
lods
sbb
cmpsb
cs
push
adc
sub
test
outsl
aas
js
add
lds
movsb
cwtl
fwait
sarl
xor
inc
and
out
xlat
sub
pop
cmp
shll
popa
popa
sub
mov
mov
movsl
push
sbb
fcomps
sbb
inc
pop
movl
xor
divl
inc
aaa
jb
mov
cmp
movb
mov
dec
push
adc
adc
outsl
inc
data16
fsubrs
pop
fdivrs
mov
add
jmp
xchg
sarb
push
mov
push
outsb
xchg
rcll
sub
jo
sbb
adc
std
jp
add
cmc
jl
dec
ds
dec
add
call
jnp
cmp
ret
sbb
addr16
adc
lret
sub
add
jge,pt
leave
mov
or
mov
repnz
mov
divb
mov
lahf
enter
push
ss
decl
imul
add
pushf
and
xchg
push
orb
loope
sbb
adcl
dec
pop
pop
ret
or
sub
sbb
xchg
pop
xor
in
loop
aaa
lcall
adc
rorb
in
stos
xchg
in
jl
popf
aas
movsl
lcall
cmpsb
stos
add
inc
shrl
inc
sbbb
or
sub
jbe
scas
cmp
fmull
dec
mov
adc
inc
mov
sbb
and
or
cwtl
xor
adcl
inc
dec
mov
aaa
sub
outsl
xchg
fbstp
jge
pop
popf
dec
sbb
push
aaa
mov
adcl
scas
faddp
jno
sub
fisttpll
push
pop
jge
int
xchg
repnz
int3
imul
xor
sbb
mov
hlt
sbb
es
mov
dec
xchg
jl
lea
stos
fwait
mov
push
pusha
jbe
mov
push
fcompl
mov
cmpsb
in
sti
aaa
aas
fidivl
mov
mov
xchg
and
jns
hlt
movsl
xlat
shl
insb
push
stc
loop
xchg
enter
push
mov
sbb
js
cmp
push
inc
sahf
xchg
std
mov
mov
pop
in
mov
mov
or
pop
mov
cltd
jae
stc
jmp
rorb
stos
test
lret
adc
mov
rorb
lret
push
mulb
sub
xchg
xor
loop
push
jo
pop
inc
popa
jl
arpl
xchg
mov
das
mov
lea
adc
push
sub
xchg
push
inc
test
lock
push
push
movb
jbe
or
js
sbb
or
stos
movsl
hlt
add
dec
ljmp
loopne
cld
rclb
add
ljmp
mov
or
or
std
mov
jmp
imul
sub
repz
xchg
jo
sti
inc
cmpsl
and
mov
jg
dec
stos
insb
cli
dec
mov
inc
or
arpl
testl
mov
rsqrtps
in
and
cmpsb
in
push
adc
arpl
cmp
adc
xchg
and
movsl
les
out
and
out
push
inc
mov
add
xor
push
fcmovne
pop
test
push
enter
fmull
xlat
push
shl
ljmp
ljmp
mov
sbb
cwtl
imull
icebp
popf
ror
ficoml
pop
or
sub
xor
lods
push
sbb
push
sbb
push
jecxz
sbb
push
pop
inc
jl
sti
dec
stc
and
add
popf
sti
xor
pop
cmp
push
and
js
rcr
pop
sbb
lahf
aas
inc
leave
cmp
mov
insb
jae
out
mov
outsb
fnsave
push
ret
ja
mov
inc
mov
pop
or
call
fwait
xchg
enter
and
mov
mov
xor
mov
xor
imul
add
cld
mov
adc
lds
inc
push
repz
cwtl
clc
out
push
into
mov
xchg
inc
xchg
or
jmp
test
bswap
stc
xor
or
sbb
xor
sub
adc
loopne
inc
dec
ss
fildll
add
je
fcom
or
inc
pop
inc
mov
adc
lret
popf
std
push
xor
loop
xchg
data16
jo
dec
imul
stos
jns
dec
jbe
lret
int
scas
mov
pop
cwtl
cmp
mov
dec
adc
shlb
jmp
xor
mov
out
stos
jo
cs
jno
mov
jbe
adc
inc
cmp
push
sub
mov
lret
mov
xchg
jl
pop
xchg
out
loopne
mov
rcrb
lods
add
das
sub
inc
jmp
add
test
add
push
dec
sarb
ret
stc
push
mov
inc
cld
dec
shlb
xchg
cwtl
shrl
pop
pop
xchg
mov
cmp
in
pushf
cwtl
xchg
lods
sbb
rolb
incl
mov
pop
mov
sbb
fdivl
ja
fcmove
sti
imul
popf
in
xlat
cmp
inc
imul
sahf
mov
sub
adc
shll
xor
sub
leave
dec
cld
lahf
xchg
and
xor
add
cmp
lods
push
outsl
add
cwtl
xchg
push
sbb
jae
jle
push
dec
mov
scas
sub
mov
inc
pop
push
mov
pushf
push
mov
fwait
out
xchg
js
mov
iret
mov
mov
push
sbb
lea
into
outsb
add
clc
sub
jmp
repz
push
jle
std
xor
inc
xrelease
sub
out
iret
xor
lret
cmp
cmp
lods
sub
push
ret
xchg
fmuls
sub
add
shl
fs
xor
imul
popf
cmp
call
cmp
xchg
add
das
cmpl
cli
out
push
dec
fidivrs
pop
movsb
jecxz
xchg
xor
mov
fadds
dec
jb
leave
clc
into
jl
push
fst
jg
mov
mov
cltd
sub
fcoml
adc
or
popa
ja
mov
xor
mov
fdivl
std
mov
inc
out
jb
nop
ret
and
cli
mov
fwait
pop
mov
out
std
xlat
aaa
lds
push
push
fs
les
add
stc
clc
mov
and
pop
xor
fmuls
pop
xchg
in
sub
lea
repz
in
int
rcrl
outsb
pop
fsubr
inc
aam
fsubs
ret
sbb
xor
inc
test
subl
out
pop
pop
xchg
lds
inc
inc
inc
dec
sbb
xchg
or
stos
cmp
cld
addb
lock
push
fisubrs
push
into
stos
movsl
dec
aas
test
dec
cmp
jmp
gs
and
movsb
push
sahf
push
mov
fdivl
in
push
movsl
add
out
pop
jb
pop
addr16
jns
xchg
movsl
movsl
cwtl
pusha
mov
roll
jo,pn
push
mov
sub
dec
sarb
push
mov
sub
imull
dec
push
xlat
push
jae
xor
adc
push
loopne
ret
out
out
loop
mov
mov
and
sahf
sub
or
sbb
push
insb
mov
sti
cwtl
pusha
cwtl
rorl
popf
dec
mov
test
sub
pop
dec
or
mov
cs
cltd
nop
lock
sbb
sbb
lds
jo
pop
mov
data16
clc
push
arpl
jns
pop
mov
cmpsl
hlt
dec
mov
in
ja
and
mov
pusha
adc
insb
sbb
or
sahf
xchg
sub
fisttpll
inc
in
sub
idivl
test
or
jns
adc
mov
xor
xchg
dec
pop
pop
lahf
jno
mov
cmpl
shll
and
rcrb
sti
and
das
adc
jb
and
xor
sbb
sub
popa
sbb
cmp
call
mov
movl
mov
jecxz
adc
movsb
xor
jg
jnp
mov
push
shll
jg
dec
mov
cltd
loope
adc
dec
cmp
fwait
mov
addl
dec
cmp
dec
fidivrl
jle
pop
sub
mov
notl
adc
and
int
sti
dec
pop
insl
jge
mov
pop
pop
enter
dec
inc
cltd
out
inc
testb
ds
sti
fwait
jle
pop
repz
or
fwait
jmp
sbb
sahf
mov
into
cmpsb
xchg
daa
mov
xchg
movsb
xchg
add
sbb
ret
scas
imul
test
leave
inc
rolb
fmull
lahf
outsb
xchg
mov
js
mov
lahf
test
rep
jnp
mov
cmp
xchg
mov
pop
pop
imul
jecxz
std
inc
insl
hlt
ret
cmpsl
or
push
je
mov
outsb
icebp
sti
fmulp
ret
ljmp
aaa
and
in
test
lods
mov
add
inc
cmp
nop
dec
adcl
xchg
cmp
xchg
xor
ja
out
fdivrs
test
adc
aaa
gs
jo
push
nop
fs
lock
stos
popa
or
pop
dec
xchg
in
xor
imul
pushf
lahf
fsub
je
sahf
inc
jle
push
pop
ret
test
lea
into
add
das
int3
andl
movsb
lods
jge
dec
rcrb
stc
test
out
leave
xchg
xchg
push
pop
sub
lret
lock
sti
dec
arpl
loopne
gs
shll
cmp
dec
mov
in
push
inc
addb
fwait
cmp
loopne
dec
jge
pushf
xchg
lds
xor
enter
addl
mov
push
mov
fwait
or
lds
jp
lock
push
cmpl
mov
xor
pop
das
ds
or
fmuls
inc
outsb
fnstcw
jge
pop
repnz
sbb
dec
js
jbe
mov
mov
in
and
xor
adc
inc
stos
pop
inc
mov
and
add
mov
sub
cmpsl
nop
pop
mov
adc
mov
push
leave
cmp
inc
call
adc
cs
je
fbstp
or
push
xor
lock
xor
aaa
push
cld
pushf
or
xor
adc
stos
jno
jecxz
and
aad
mov
daa
cwtl
cmpsb
rorb
pop
mov
adc
enter
daa
mull
xlat
mov
add
in
cld
data16
pop
dec
and
out
insb
inc
push
cli
lcall
adc
lds
inc
pop
cmpsb
enter
inc
arpl
cltd
cli
mov
iret
lret
jmp
pop
dec
or
popf
add
cs
lds
cmp
xor
inc
xchg
test
push
ret
jg
or
mov
loopne
sahf
cmpl
xchg
out
out
mov
mov
mov
mov
xchg
movsl
jbe
or
xor
lret
mov
mov
repnz
xchg
insl
fldl
in
ljmp
push
and
fcomp
movsb
jl
xchg
lahf
int
mov
ss
cs
cltd
and
insb
fsubl
testl
sbb
xor
or
dec
jno
mov
jnp
mov
imul
into
xor
jmp
sbb
pop
jp
xchg
and
jne
sub
rcr
add
mov
and
fst
inc
cmp
fwait
push
pop
jbe
icebp
cwtl
ret
xor
xchg
imul
movsb
cwtl
xchg
mov
test
data16
xchg
addr16
setge
push
ss
push
cmpsl
push
sub
addb
push
or
ljmp
jge
fs
xchg
push
fisubs
xor
lcall
leave
lret
fisubs
dec
pop
and
outsl
movsl
push
xor
es
mov
int
ret
pop
out
or
scas
inc
and
push
idivl
sub
push
fidivl
mov
mulb
push
adc
jg
sarb
dec
sub
fdivrl
mov
xchg
or
popa
xchg
aad
and
fldenv
jo
cmp
add
js
pop
mov
or
and
mov
or
ja
daa
mov
mov
dec
mov
push
or
aaa
cs
xor
xchg
xchg
mov
pop
test
dec
mov
fcmove
iret
xor
pop
sbb
popa
out
popf
mov
popa
in
loop
mov
nop
testl
out
shll
dec
sbb
lcall
lods
addb
mov
push
outsl
pop
scas
sti
aas
dec
mov
inc
call
sti
push
sub
sti
add
popa
sahf
fxch
adc
dec
xor
dec
mov
ja
gs
arpl
mov
mov
shl
mov
neg
mov
mov
cli
push
lea
adc
test
push
call
pop
call
xor
test
sbb
cs
adc
and
or
cmp
sti
cmp
or
insl
adc
jno
popf
add
icebp
fmuls
sbb
push
scas
pop
sub
and
shr
jns
push
mov
pop
add
pop
or
lock
xlat
and
shlb
xchg
loop
xor
jge
lock
xchg
out
jl
jb
repnz
sbb
jb
pop
sbb
pusha
cmp
pop
and
std
inc
cmpsl
bnd
push
adc
jbe
outsl
or
push
add
int
shlb
mov
cmp
sbb
xchg
push
and
icebp
adc
cld
xlat
inc
sbb
fildll
xchg
testl
out
and
push
call
insb
mov
push
fistl
pop
es
pop
mov
and
sti
in
inc
cmp
sub
fst
mov
dec
push
lret
cmp
push
js
xchg
push
jb
clc
lret
lret
mov
and
enter
mov
sub
jns
mov
or
mov
fdivp
sub
imul
and
ljmp
mov
arpl
ds
xor
pop
sbb
push
movsb
jp
lret
inc
stos
pop
or
idivl
sub
dec
icebp
into
ja
adc
add
call
cmp
inc
int
in
and
jle
icebp
add
call
hlt
pop
push
ret
mov
mov
push
xchg
push
nop
or
scas
dec
jns
movsl
loopne
mov
jp
test
bnd
js
jne
sub
mov
lods
inc
mov
mov
mov
add
pushf
mov
cmp
js
mov
dec
ja
into
adc
ja
jae
jbe
cmp
pop
cmpsl
xorb
jle
pop
jo
sub
scas
lret
sahf
mov
pop
aas
loopne
in
mov
sbbl
lcall
mov
xchg
or
inc
mov
xchg
enter
mov
shlb
and
je
inc
inc
xchg
aaa
loop
push
addr16
or
sub
sub
jo
dec
jae
mov
mov
rclb
fs
jbe
jmp
adc
loopne
je
mov
imul
mov
inc
test
call
mov
jg
popf
bound
out
push
insb
ljmp
int
or
dec
mov
jle
enter
inc
and
adcl
cmc
sub
je
bound
movsl
xchg
jmp
jp
aad
mov
out
cmpsl
aam
push
insb
imul
leave
xchg
dec
stos
add
xchg
xchg
int3
add
mov
sbb
das
pop
rcll
and
sbb
jnp
mov
lods
imul
fdivrl
inc
and
into
pop
sbb
flds
add
or
fucomp
addr16
sub
pop
lods
in
and
int3
imul
push
mov
push
inc
mov
aad
inc
negl
popf
xor
popa
adc
les
rdmsr
stos
lret
mov
mov
or
jno
inc
xor
subb
ficoml
aam
and
add
push
int
outsb
icebp
sbb
xor
aaa
test
sbb
dec
cmp
adc
cli
or
mov
push
xchg
call
cmc
push
jbe
mov
lock
out
popa
ret
add
clc
int3
or
lret
adc
lods
scas
dec
push
jg
mov
es
push
shl
icebp
insl
loopne
lea
or
or
stos
std
sbb
aad
stos
or
repz
inc
mov
cmp
aaa
fsts
insl
dec
mov
fisttps
push
mov
dec
mov
gs
enter
or
and
or
sbb
add
pop
or
das
push
jmp
xorl
les
add
push
dec
push
adc
gs
xchg
jp
pop
and
mov
movsl
int3
lahf
test
cmovg
daa
minps
jmp
in
sbb
iret
shrb
push
fidivs
pop
push
clc
lods
cmp
mov
mov
jb
sbb
or
sbb
imul
push
cmpl
mov
add
sahf
jno
xlat
add
aas
push
fistpl
nop
stos
pop
adc
pop
or
push
xor
mov
fisubs
dec
out
mov
in
icebp
push
aad
inc
fwait
je
mov
push
cmp
and
xor
pop
nop
jp
mov
mov
sub
add
push
jecxz
and
daa
cmpl
cmpsl
jns
and
arpl
adc
push
insb
mov
jle
jb
imul
js
mov
dec
cli
sub
addr16
call
dec
sub
sbb
xchg
les
jae
testl
iret
fmuls
dec
xlat
sub
in
and
pop
movsl
adc
mov
fnsave
xchg
lock
pop
je
popl
mov
sbb
je
push
push
mov
test
adcb
dec
jge
aas
bound
lds
jg
lea
clc
mov
mov
outsb
pop
lret
push
or
fs
das
inc
xchg
xchg
divl
lret
out
popa
inc
lret
addr16
pop
rep
aas
xchg
mov
mov
jae
add
or
enter
fildl
movb
aaa
ljmp
fldt
aad
jle
push
jge
icebp
push
mov
jl
outsb
add
ds
sbb
in
jb
js
cwtl
xor
cs
cmc
dec
fstpl
pop
sarb
mov
dec
jae
gs
and
mov
std
sub
mov
adc
cmpsb
xorl
mov
push
push
mov
jl
add
and
out
leave
jmp
mov
dec
mov
push
or
pop
cmp
pop
sub
adcl
neg
cmpsb
and
adc
push
mov
lret
out
sbbl
outsb
or
mov
xchg
in
or
cmp
sbb
scas
mov
mov
push
inc
xchg
xor
sbb
inc
pop
mov
rolb
xchg
inc
insl
fwait
mov
inc
out
jo
xlat
sbb
xor
stos
addr16
js
and
mov
loope
fimuls
ficoml
push
in
xchg
into
jp
mov
adc
mov
ret
lods
addb
std
and
fnstcw
adc
push
add
mov
dec
in
xchg
rol
icebp
mov
lret
scas
or
outsl
mov
insb
cltd
mov
hlt
cs
adc
andb
inc
mov
dec
dec
mov
and
cli
mov
test
xchg
icebp
or
imul
ja
out
add
es
lock
lcall
loop
sbb
sbb
out
stos
bound
je
sub
lret
insl
jmp
xchg
lock
jp
mov
dec
aaa
fcomi
mov
rclb
jno
jb
sub
test
inc
inc
ljmp
mul
cmp
jge
adcb
movsb
dec
call
jne
and
je
mov
mov
repnz
cmp
ja
fsts
int3
pop
xor
mov
bound
cld
sbb
ljmp
jle
inc
popa
icebp
cmp
lods
ret
bound
jnp
add
adc
push
orl
xor
shrb
mov
push
ficompl
imul
inc
jmp
adc
rcr
add
fldcw
push
jno
aas
cs
cs
mov
icebp
adc
dec
and
sbb
xor
xchg
dec
faddl
and
adc
push
and
sbb
cmp
mov
mov
lods
bound
xchg
sub
xchg
xorl
mov
adc
adc
mov
mov
mov
loope
out
cs
add
je
movsl
xchg
inc
ljmp
fdivrl
add
sub
cld
pop
cltd
cmp
inc
mov
and
mov
pop
daa
sub
out
test
xor
mov
mov
fs
sub
out
in
notl
xor
sub
ret
adc
jmp
jno
jbe
jecxz
nop
loop
rep
add
pop
sbb
scas
and
cs
aas
test
repz
fimull
jne
sub
mov
aas
inc
popa
out
das
out
mov
dec
inc
fdivs
gs
jmp
fistps
xor
rcrb
das
test
iret
jle
mov
into
pop
and
test
xor
andb
mov
popa
jns
and
out
outsb
fadd
add
in
xchg
popa
call
nop
xor
scas
loope
pop
repnz
inc
test
cmpsl
leave
leave
sti
cwtl
mov
sub
es
movsb
xchg
aaa
lock
int
adc
dec
fimull
xor
sarb
aam
mov
pop
jb
or
add
negb
rol
rol
jecxz
xor
ss
test
icebp
mov
incl
imul
jno
lcall
scas
popf
ljmp
pop
dec
daa
fwait
xchg
jmp
xchg
aad
add
push
dec
dec
mov
cmpsl
adc
or
sbb
add
test
push
aad
jle,pt
mov
push
fsubrl
aaa
mov
sbb
leave
inc
or
cld
push
xchg
and
add
mov
in
add
mov
add
mov
xchg
jbe
push
xor
pop
jb
inc
movsl
add
dec
cltd
mov
daa
sbb
mov
mov
pop
push
ficompl
fdivrl
sub
inc
std
jg
es
out
adc
push
leave
test
xor
mov
aam
adc
xor
test
andl
xchg
adcl
pop
mov
movw
dec
fwait
pop
inc
push
lahf
xor
mov
fidivrl
popa
in
lock
lret
inc
jmp
add
add
movsl
sti
icebp
jae
mov
cwtl
pop
jp
psubsw
mov
sbb
shll
mov
ret
movsb
call
inc
addr16
xchg
push
mov
and
movsb
pop
cltd
push
cld
mov
lock
outsb
cltd
shrl
dec
lock
dec
push
or
into
sbb
ljmp
dec
sub
orb
fnstenv
loop
inc
and
popf
mov
mov
jne
and
loope
or
and
and
leave
pop
outsb
cmc
fldt
loop
inc
hlt
add
ljmp
cmp
movl
jle
and
loopne
clc
arpl
jp
sbb
fldenv
test
jne
hlt
into
out
push
mov
jmp
fdivr
arpl
jecxz
fdivrp
inc
and
and
push
adc
into
imul
test
lds
cli
mov
loope
mov
push
in
pop
sti
mov
stos
outsl
push
or
sub
scas
mov
fwait
jae
push
aas
iret
xchg
test
xor
lods
test
push
dec
imul
dec
sub
movsb
test
cmp
clc
adc
iret
jnp
stc
sbb
push
dec
hlt
add
cmpsl
jmp
sub
push
xor
or
mov
lret
pop
out
cmc
jecxz
mov
out
cmc
mov
or
cmp
cmc
inc
mov
repz
int
push
dec
fisttpl
mov
jge
jl
mov
cmpsl
gs
and
in
dec
arpl
ja
push
lret
out
lret
inc
mov
or
shlb
and
ljmp
jbe
sarb
add
push
cmpsl
mov
repnz
outsb
ljmp
rorb
fcoms
pusha
pop
pop
stos
sbb
sub
mov
sbb
ret
sub
lret
push
dec
scas
mov
cmp
jnp
data16
sub
fdivl
sbb
sbb
pop
lock
sub
cmp
xchg
pop
repz
test
push
ds
test
dec
adc
pop
test
fdivl
test
sub
mov
les
cmp
lods
popf
mov
xor
jo
adc
jmp
rcrl
fstpt
aas
jne
cmpsl
testb
sub
lret
xchg
test
popf
sbb
or
mov
pop
in
cwtl
xor
dec
push
in
pop
jns
push
fnstcw
mov
push
cli
in
xor
dec
mov
sahf
add
je,pn
je
dec
fidivrs
cmp
push
jl
sbb
xorl
xchg
pop
xchg
push
push
mov
popa
test
sbb
mov
pop
push
jne
jnp
dec
pop
mov
and
daa
jge
ret
in
mov
fildll
push
jnp
jno
push
xchg
mov
shrl
leave
sahf
jb
mov
jbe
jne
add
mov
pop
xchg
inc
movsb
adc
jecxz
fcmovbe
cmp
dec
jge
pusha
jecxz
jmp
js
aaa
mov
fists
fwait
jg
xchg
pop
xor
mov
lahf
adc
pop
lret
dec
mov
movsb
outsl
pop
repnz
push
xor
mov
stc
das
test
cltd
pop
or
dec
out
cmpsb
jns
fs
pusha
xchg
test
or
insl
scas
imul
in
inc
cmpsl
add
pop
lods
mov
jg
rcrb
xchg
push
mov
and
xchg
pop
scas
clc
add
test
jb
and
fs
test
jmp
outsl
arpl
xchg
sub
cmp
sbb
jecxz
dec
fwait
jl
leave
inc
xor
sub
xchg
xchg
repz
pop
jp
je
jne
mov
cmc
insl
xor
sub
xor
mov
jle
add
or
add
pop
in
sarl
jne
add
test
and
inc
aad
dec
cld
repz
leave
mov
inc
nop
mov
add
call
and
iret
xor
jge
in
in
pop
cmc
fisubl
push
mov
stos
push
jg
shll
xor
nop
out
loope
repz
jno
mov
in
lahf
pop
pop
lea
movsb
cmpsl
mov
and
jae
pop
mov
nop
lods
dec
idivl
clc
adc
jge
xor
pop
lret
mov
loop
sbb
and
test
cmpsw
fidivrs
test
push
das
movb
rcrb
jl
lods
mov
fisubs
out
aam
jge
inc
dec
fiadds
je
push
add
xor
dec
xlat
dec
or
push
add
icebp
adc
fwait
push
sub
sahf
mov
add
or
jnp
pushl
lea
mov
sub
cld
dec
in
adc
cld
into
testl
mov
paddq
in
out
mov
add
adc
jle
sbb
sub
add
js
stc
call
lret
cs
popf
testb
mov
leave
mov
stos
aam
sbb
mov
and
test
imul
cmpsb
ja
dec
add
xchg
je
push
and
or
add
hlt
mov
push
sub
stos
pop
xchg
imul
out
out
push
xchg
adc
cli
pop
imul
dec
vpsllw
xchg
cmpsb
imul
lods
insl
xchg
fbstp
nop
dec
ja
or
push
mov
into
adcl
cltd
ret
aaa
sbb
sub
cmpl
mov
and
or
lods
shrl
mov
xor
add
cmp
xor
pop
jle
push
cmc
dec
cltd
sbb
xlat
psllq
in
cmpsb
fwait
int
outsb
loope
ds
cwtl
push
rcrl
stos
mov
xchg
cs
xor
mov
dec
mov
mov
pop
mov
aad
mov
sbb
pushf
cld
inc
adc
xchg
pop
aaa
aas
shll
test
sbb
push
cmp
and
sti
cmpsb
pop
insl
sub
inc
rclb
mov
mov
imul
sti
push
mov
adc
push
add
mov
push
stc
inc
cltd
adc
arpl
jne
sub
sub
jle
xchg
ljmp
aad
cmp
daa
xchg
xor
dec
test
lock
sbb
pop
in
inc
cs
repz
ret
mov
mov
fistps
lret
push
into
icebp
xchg
cmp
push
sub
and
nop
mov
dec
addr16
mov
mov
arpl
sbb
jle
fcomps
adc
xlat
dec
rep
mov
push
scas
addl
mov
rorb
rcl
bound
jmp
das
lcall
sbb
fsubp
popf
push
dec
fmull
ds
sbb
push
mov
pop
mov
xchg
xor
inc
mov
fistps
mov
sbb
jmp
xor
test
mov
pop
ret
stos
xchg
cmp
ror
cwtl
sti
jne
sbb
cltd
pushf
shll
add
jo
pop
into
jl
xchg
xchg
gs
cmp
out
sti
pop
push
add
sbb
cli
cld
outsl
inc
push
sbb
jnp
xor
das
cmp
jae
sub
sbb
enter
xchg
xlat
es
inc
shr
icebp
popf
mov
dec
sub
cmp
scas
insb
xor
and
jne
mov
sbb
sbb
push
cltd
std
iret
movsb
and
int3
jne
add
ret
bound
push
iret
popf
and
jmp
push
cwtl
data16
pop
inc
icebp
jnp
and
cwtl
add
rcll
ljmp
in
add
mov
rolb
fwait
mov
imul
sbb
xchg
jmp
aaa
aad
jge
push
adc
in
xlat
mov
nop
xor
sti
ss
push
jno
push
aam
ret
ja
movsb
mov
aam
add
dec
add
jp
repz
inc
and
aam
ja
pushf
std
js
lock
jne
push
mov
out
cmpsl
psubb
push
xchg
cld
xor
gs
fists
push
es
movsb
loop
mov
adc
or
jp
fstpt
xchg
xlat
out
std
mov
andl
sbb
xchg
add
or
in
add
xchg
push
imul
test
ror
js
dec
lods
or
fisttpll
je
in
es
and
int
int
xchg
test
mov
orl
mov
xor
or
iret
add
inc
dec
sub
pop
enter
je
rclb
dec
call
leave
loope
ljmp
push
jmp
dec
mov
inc
cmp
lock
pop
mov
or
mov
aam
jnp
icebp
xchg
xchg
xchg
inc
cmp
pop
in
dec
iret
shll
or
testl
fistl
mov
sub
cmp
dec
xchg
jnp
push
push
xchg
outsl
add
adc
ss
pop
jnp
push
and
xchg
sbbb
add
jl
mov
lahf
cmp
sub
es
ss
mov
mov
adc
jle
or
cmpl
add
push
jl
inc
ljmp
xchg
fcmovnbe
cmp
stos
dec
loopne
jno
pusha
in
and
pushf
mov
mov
popf
cmp
jne
mov
pop
scas
fstpt
test
out
jno
inc
fimull
bound
int
aas
mov
mov
aaa
cld
in
xor
mov
mov
push
or
loop
outsb
pop
jbe
imul
add
xlat
scas
mov
mov
cmp
stos
cwtl
adc
enter
push
test
push
bound
or
inc
sbb
jmp
sub
mov
jno
ljmp
rcll
pop
inc
fcmovnu
mov
mov
aad
fiadds
xor
lret
movsb
dec
pop
inc
movsl
scas
add
and
push
xchg
sbb
jo
into
adc
les
or
mov
push
nop
xchg
aaa
popa
aam
fbstp
cld
jl
fbstp
adc
pop
inc
jmp
fs
pop
gs
into
lret
rclb
outsl
subl
gs
mov
jl
addr16
out
out
xchg
mov
pop
xchg
lods
enter
push
ss
push
dec
push
aad
pop
enter
sbb
xor
addl
pop
dec
js
pop
cmpsb
mov
xchg
roll
push
or
and
or
xor
or
cltd
dec
inc
std
add
cmp
addr16
push
mov
inc
arpl
fwait
jno
cmp
mov
inc
add
scas
pushf
popa
cwtl
in
fsubrl
fisttpll
je
xchg
xchg
and
pop
jne
pop
sbb
test
aad
adc
jge
arpl
pop
or
inc
add
stc
leave
int
xor
or
and
cmp
testl
imul
cli
dec
std
xor
mov
shlb
outsb
cmp
int3
cli
pop
xchg
inc
jg
gs
dec
and
aam
sbb
cld
ja
dec
out
fcmove
cli
push
bound
adc
movsb
sar
mov
cmpsb
aad
ss
iret
fsts
push
dec
sarb
mov
ror
sub
inc
mov
jns
pop
hlt
fisubrs
jne
add
or
inc
addr16
add
call
popa
loop
lods
arpl
dec
push
dec
cmpsl
jae
push
bound
mov
pushf
inc
mov
pop
sbb
pop
enter
call
xchg
or
hlt
out
push
push
sub
movsl
and
cmp
outsb
call
or
lret
aam
popf
je
cmp
push
pop
sub
mov
in
inc
loope
xchg
fcoml
xlat
add
aas
leave
dec
or
stos
mov
add
and
cmp
ret
mov
nop
sub
repz
push
mov
movsb
xchg
in
test
fsubp
jg
outsl
mov
or
dec
pop
dec
mov
es
cmc
adc
cmp
push
cmp
jae
scas
icebp
or
pop
push
add
hlt
shrl
fsubs
test
repnz
jle
mov
int3
push
movsl
jnp
adcb
addr16
pop
adc
cmp
sub
out
add
mov
mov
or
lods
repnz
sbb
push
push
mov
pop
sub
and
add
mov
or
test
and
fdivrs
pop
adc
and
ja
sub
mov
rcll
lods
aas
and
cmc
in
aad
dec
inc
jbe
sub
adc
lcall
rclb
stos
inc
inc
mov
push
push
loopne
adc
sbb
les
out
les
sub
or
fistpl
add
ljmp
outsl
dec
rol
arpl
out
insl
add
jge
pushf
and
add
mov
mov
add
ficoms
or
fimull
fisttpll
jp
inc
loope
jo
fcoml
mov
push
lds
addr16
out
xor
cmpb
clc
xor
scas
push
loope
cltd
cmp
and
test
flds
es
add
mov
loop
add
js
xchg
add
mul
add
pop
inc
int3
fdivrl
popl
cli
std
jg
outsb
ss
insb
pop
xchg
hlt
mov
mov
jg
sbb
rclw
mov
mov
les
sarl
mov
dec
sub
shll
sub
aas
lret
insl
mov
ss
sbb
pushf
daa
mov
adc
dec
nop
pop
mov
or
out
mov
cmp
test
outsb
sbbb
xchg
into
mov
dec
pop
stc
pop
push
xlat
out
sti
fmull
mov
aas
and
addr16
pop
gs
mov
inc
pop
clc
inc
inc
stc
inc
sub
pop
jg
xor
fnstenv
xor
mov
sarl
sub
add
xchg
sbb
pop
and
ds
xor
sahf
and
pop
push
mov
push
ret
in
xchg
stos
ja
mov
dec
or
test
orb
fcoms
bound
inc
sahf
repz
rcrl
in
hlt
inc
les
mov
dec
test
cmpsb
call
aad
addr16
scas
out
xchg
dec
in
mov
test
push
icebp
scas
lods
cmp
mov
mov
fimuls
aam
cld
inc
xchg
ss
pusha
das
jo
mov
in
dec
mov
clc
hlt
adc
xor
cmp
scas
dec
and
rcrl
leave
mov
add
lret
sbb
shl
xchg
jle
cmp
and
lds
cmp
mulb
cmp
shr
insl
xchg
cmc
int
sub
push
into
mov
dec
popa
cld
xchg
adc
ljmp
inc
cmp
pusha
jno
aam
jbe
inc
or
call
mov
sub
sbb
loop
rcl
cmpsb
dec
stc
xor
or
sub
xchg
rclb
int3
lahf
lds
hlt
gs
sub
pop
testb
inc
sbb
fs
mov
dec
push
push
sbb
jns
dec
pop
stc
and
add
lcall
mov
scas
outsb
mov
cltd
mov
mov
sub
mov
adc
sub
mov
cwtl
stos
xchg
jl
imul
in
fwait
and
jl
fsubs
negl
mov
push
xchg
xchg
dec
cmc
in
xchg
jp
mov
lods
bound
dec
mov
cli
test
fsubl
pop
mov
jle
pop
cwtl
jge
fnstsw
fstl
mov
pop
or
pop
jbe
fnstsw
add
fstps
jmp
jae
mov
jne
add
gs
mov
mov
ljmp
mov
dec
pop
leave
ja
xchg
rcll
gs
in
sub
test
cwtl
cld
arpl
jecxz
sub
jne
sbb
dec
inc
loope
arpl
enter
fdivp
iret
das
fisttpll
mov
xor
sbb
fcoms
popl
rorb
or
stos
sub
faddp
push
popa
mov
out
and
shrl
push
test
idivl
divl
and
outsb
ja
jl
loop
adc
mov
leave
cmp
fidivrl
cld
js
jle
lret
jae
or
lahf
les
pop
lods
mov
xchg
andl
es
aas
xor
or
leave
fnstsw
stos
shr
les
in
test
outsl
mov
jl
dec
xchg
jae
and
sahf
xor
jp
push
stc
mov
std
pop
ja
cmp
cltd
mov
xchg
push
test
scas
fwait
adc
pop
aas
push
cld
pop
lcall
adc
push
out
ds
das
xor
push
adc
xor
jns
stos
dec
add
push
pminub
out
sbb
push
mov
scas
nop
movl
or
inc
jle
icebp
lock
ficompl
out
push
mov
pop
push
sbb
pushf
std
sbb
ret
mov
leave
test
sbb
aaa
adc
lret
data16
dec
flds
adc
xor
inc
mov
push
adc
in
dec
add
and
xchg
pop
mov
dec
push
ss
mov
xchg
fcoml
popa
data16
insb
scas
mov
imul
imul
loop
adc
jbe
nop
pop
mov
out
test
and
mov
dec
pop
fnstsw
push
ds
dec
idiv
idivb
jnp
in
pop
ficoms
adc
cmp
sub
in
and
out
shrl
push
enter
sbb
je
mov
daa
je
inc
sbb
out
fidivrl
push
shr
adcl
scas
rcrl
mov
cwtl
and
sbb
enter
test
and
or
sub
clc
add
cwtl
jmp
sbb
inc
stos
cltd
pop
aam
int3
cmp
mov
push
daa
jp
fdivr
outsl
add
addr16
cs
mov
jl,pn
mov
scas
and
and
jo
not
sbb
inc
jmp
push
mov
jnp
mov
jmp
mov
xchg
mov
bound
xchg
mov
test
mov
jmp
jle
daa
and
push
bnd
insl
adcb
fucom
inc
cmp
imul
sbb
ret
enter
cli
fcmovnbe
sbb
xchg
lods
xor
mov
imul
push
pop
cltd
lods
rcll
aas
jnp
sarb
clc
sti
out
dec
inc
jmp
out
test
push
mov
sub
je
filds
adc
repnz
xor
ss
and
test
lods
adc
push
rorl
aas
cmp
test
fwait
mov
movsb
iret
xor
arpl
scas
adc
fdivl
push
sub
mov
stc
dec
andb
inc
gs
fistl
fisttpll
mov
xor
gs
test
adc
push
fucomip
lds
lahf
inc
dec
cmp
pusha
push
mov
bound
leave
jb
pop
stos
les
sub
aas
lret
movsb
fbstp
xchg
and
loopne
mov
dec
scas
sub
out
jnp
int3
add
test
cmp
push
xchg
xchg
mov
pop
push
lahf
add
xchg
lods
loope
les
dec
rclb
cmpsl
xor
imul
and
jae
mov
sbb
adc
sarl
cld
fdivrs
test
add
add
mov
imul
sub
pop
sbb
inc
jg
out
mov
dec
push
fcom
push
in
cwtl
add
sub
cmc
push
add
mov
sar
out
popf
xor
popf
or
imul
add
aas
pop
imul
dec
ja
insl
jne
shrl
push
test
aaa
clc
jp
js
mov
push
scas
les
js
addr16
push
dec
jae
movsb
je
inc
adc
xchg
imul
pop
fwait
pop
imul
jb
out
cs
and
jg
lcall
les
out
iret
xchg
insl
pop
das
into
fidivrl
mov
scas
out
in
jns
cmpsl
sahf
fdiv
xor
rorl
mov
xchg
scas
inc
addr16
jno
enter
fdivl
mov
scas
add
add
outsb
mov
int3
mov
fsubrs
and
and
jl
sbb
loope
cld
dec
nop
pop
jecxz
cmp
dec
imul
lret
fildl
xchg
push
dec
enter
lock
int3
push
rcll
mov
jb
stos
out
xchg
and
push
ret
ss
pop
dec
or
push
or
xor
dec
pop
cmpsb
and
adc
std
scas
loopne
cld
mov
arpl
or
fstpt
neg
dec
mov
bound
sbb
pop
dec
mov
or
mov
test
sub
outsb
jno
inc
lahf
or
mov
test
pop
icebp
int3
outsb
lcall
movsb
fmuls
loop
xchg
int3
adc
orb
stos
mov
stos
add
stc
pop
xor
test
nop
mov
je
mov
test
pop
popf
lret
inc
jmp
push
add
adc
arpl
js
jns
inc
mov
inc
adc
sub
cmp
mov
movsl
inc
jnp
dec
popa
dec
dec
addr16
pop
mov
das
fwait
sub
xchg
push
bswap
aaa
sarb
dec
lea
mov
in
jmp
cmpsb
push
mov
mov
lods
fdivl
fisttpll
pop
imul
stc
mov
sbbl
cmp
sahf
popa
aaa
mov
mov
cmp
inc
and
mov
outsl
stos
dec
jns
fnclex
movsl
pusha
jbe
in
mov
mov
repnz
push
push
or
sbb
add
in
loopne
mov
cld
enter
stc
mov
jecxz,pt
mov
or
rolb
pop
adc
jmp
call
addr16
movsb
mov
add
lods
mov
adcb
and
and
shl
mov
jno
mov
cmp
test
push
mov
xchg
fisubrl
lds
sbb
sub
faddp
lock
dec
scas
gs
pusha
xchg
lock
ret
das
adc
pop
cmpsl
aam
dec
pusha
inc
imul
mov
fxch
rorl
or
jg
jne
push
push
pop
mov
xchg
jns
mov
call
cmpl
mov
adc
loope
stos
jae
pop
fldcw
mov
jae
xchg
inc
scas
xchg
mov
mov
mov
sub
daa
pushf
adc
decl
jg
outsl
mov
lret
data16
pop
fldcw
mov
jecxz
adc
or
and
xchg
adc
sub
ret
cli
ja
dec
mov
pop
flds
testl
movsb
dec
push
push
aaa
faddp
push
pop
lds
jecxz
lret
or
adc
xchg
ja
mov
jg
cli
adc
movsl
jp
fistpl
sbb
stc
xor
cmp
add
jne
pop
jo
incl
cmpsb
sub
push
jle
or
jo
mov
lods
pop
rcr
std
push
jo
inc
into
sub
sub
jge
stos
or
lret
testl
fucom
je
xchg
xor
fisttpll
pop
es
ds
cwtl
inc
scas
gs
fisubl
mov
lcall
xchg
in
neg
push
out
fisubl
inc
push
push
mov
dec
push
cmc
test
lahf
pusha
stc
repz
cs
mov
mov
lods
cmp
inc
test
filds
imul
in
sbb
int3
inc
movsb
sbb
xor
cmp
mov
jg
sbb
leave
xchg
inc
xor
pop
adc
mov
sbb
cmpsl
xchg
adcb
imull
lods
das
shrl
clc
mov
push
inc
xchg
mov
mov
sub
shlb
inc
jb
test
xlat
pop
fsubr
inc
mov
stos
fnstcw
or
push
push
and
add
hlt
mov
ret
sbb
cmp
div
and
hlt
test
push
frstor
in
inc
push
fistpl
mov
aas
sqrtps
adc
xchg
dec
int3
xchg
mov
pop
jns
mov
cmpsl
and
test
insl
es
mov
icebp
stc
adc
cmpl
fmuls
dec
adc
iret
dec
popa
sbb
js
out
and
ds
lret
push
jge
mov
sbb
jno
rorl
mov
push
push
add
scas
push
lock
adcl
rep
and
or
sbbl
jb
sahf
push
enter
mov
idivb
jae
out
mov
sti
mov
lods
sub
cmp
adcl
push
out
sbb
popa
xchg
mov
push
dec
push
mov
push
out
jmp
mov
xchg
mov
daa
subb
in
nop
sub
mov
push
pop
cmpsl
jns
pop
in
shll
pop
mov
outsl
test
lods
out
pop
inc
fistpl
outsb
or
push
gs
cli
stc
jp
adc
je
add
cmp
push
pop
inc
jp
mov
xchg
dec
push
in
into
jl
push
sbb
ret
mov
pop
and
xchg
lea
mov
add
popa
pop
fiaddl
dec
adc
insb
gs
pushf
adc
loop
mov
aad
mov
push
sbb
stos
rorb
mov
cmp
insl
inc
dec
repz
jmp
fistpl
lret
shl
je
push
adc
mov
jnp
subb
xor
pop
and
xchg
jge
mov
add
sbb
and
push
cmpsl
adc
bound
xchg
mov
xlat
xor
fcoml
push
pop
in
mov
dec
or
dec
and
sysenter
fcmovnb
mov
fisttpll
mov
lods
and
pop
sub
cld
pop
lods
adc
or
scas
xorl
inc
aam
sti
ja
cltd
in
dec
je
popf
jns
rorl
call
sub
inc
enter
xor
push
outsl
aaa
gs
sbb
outsb
push
dec
cmp
push
adc
sub
inc
and
testl
sbb
or
pop
pop
stos
arpl
mov
fisttpl
out
sub
and
add
xor
iret
cmp
xchg
bound
mov
pop
inc
test
dec
imull
xchg
mov
push
test
xchg
es
adc
dec
add
sbb
mov
push
mov
fmull
sub
lds
lods
lret
mov
pop
mov
cmp
daa
daa
sbb
pop
ds
insb
adc
stc
cmp
das
dec
clc
addr16
nop
inc
dec
aaa
push
icebp
ret
icebp
sub
loop
inc
inc
dec
nopl
xchg
pop
inc
push
jb
jl
push
movsb
cmc
mov
jns
add
dec
push
leave
cwtl
adc
and
cmpsl
ja
mov
jp
add
mov
push
test
mov
dec
mov
test
inc
lahf
lahf
jg
jmp
inc
in
test
cmp
jns
into
rcrl
lret
xor
in
dec
cmp
or
lcall
mov
movsb
push
pop
jno
in
xlat
cmp
insl
mov
inc
push
cwtl
repz
mov
add
pop
mov
mov
xor
ret
add
shr
daa
aad
repnz
imul
or
mov
mov
jl
int3
subb
movsl
jle
pop
mov
xchg
and
cld
shrl
in
leave
bound
lcall
aam
sbb
outsl
int
sbb
leave
push
dec
mov
outsb
pop
jns
pushf
jecxz
cmp
mov
lock
daa
in
mov
pop
cmp
ljmp
pop
in
ds
dec
subb
jbe
inc
mov
xlat
adc
jmp
mov
rcl
push
dec
push
xor
pushf
sarb
mov
clc
adc
inc
leave
in
jl
and
mov
das
push
mov
mov
scas
lahf
in
push
adc
jne
cmpsl
xchg
shll
pop
adc
cmp
arpl
sti
mov
fcoml
cmpb
repnz
and
mov
ret
fs
mov
pop
es
add
test
mov
imul
jae
aad
cmpsl
mov
push
push
fnstsw
adc
xor
push
cli
and
push
adc
imul
imul
es
data16
test
add
mov
jmp
aaa
push
dec
je
inc
or
iret
lods
mov
sub
mov
jmp
adcl
fstpl
in
in
orl
repz
ljmp
ds
push
insb
out
popf
push
movsl
in
mov
pop
xchg
sub
push
insb
jecxz
outsl
mov
shll
mov
aad
mov
or
sahf
xor
fsts
xor
adc
je
dec
ljmp
inc
jp
fcompl
shld
incl
insb
jo
sahf
jns
add
jae
lret
stos
mov
mov
loopne
bound
frstor
push
pushf
cmpsb
cmp
sarl
fstpl
ja
sbb
adc
xor
enter
jne
adc
mov
out
loope
ds
adc
icebp
jg
iret
fisttpl
fldt
imul
dec
in
sub
addr16
or
mov
sub
out
xlat
cmp
in
leave
or
mov
push
jmp
iret
lds
movsb
idivl
in
mov
cmp
mov
push
push
fistpl
mov
ret
imul
xor
insl
in
add
mov
push
adc
out
inc
cld
pop
or
mov
fcmovnu
fcomps
mov
loop
mov
add
clc
mov
mov
inc
and
ror
sub
pusha
inc
pop
fs
hlt
hlt
push
dec
mov
sarb
dec
mov
push
lret
bound
add
aad
push
popa
pop
cmp
fucomip
shlb
out
jge
or
mov
pop
xchg
cmpsb
adc
fsubs
mov
mov
inc
out
movsl
and
sbb
inc
adc
dec
rcrl
xchg
ficompl
lret
cmp
stc
xchg
rep
cli
insl
sub
imul
sbb
neg
cmc
or
sbb
jnp
arpl
call
sti
fcom
dec
pop
rep
repnz
movsl
mov
outsl
mov
push
dec
mov
or
outsl
ret
mov
in
aam
fs
pop
scas
jecxz
cmpps
js
jg
dec
ds
and
les
jo
imul
fiaddl
or
aam
cli
gs
pop
popa
loope
mov
inc
push
loop
fildll
out
movsl
push
inc
scas
and
jns
pop
ljmp
xchg
cmp
jl
jno
sbb
sbb
mov
stos
test
scas
pop
sahf
js
in
ds
or
negb
lea
iret
es
je
jns
scas
xor
fsub
mov
rol
push
xor
daa
mov
jge
fcomps
mov
dec
sub
test
mov
jnp
xor
jae
sbb
shrb
std
xchg
imul
pop
lods
sbb
and
and
push
pop
icebp
gs
cmp
in
into
dec
cld
fmul
xchg
pop
jbe
push
xchg
adc
ds
pop
adc
push
jmp
xchg
add
xchg
clc
inc
ror
mov
fisttpl
ljmp
lock
mov
repz
mov
or
inc
push
cmc
addr16
int
dec
popa
lds
sbb
pop
xor
cmpl
in
sub
jae
sbb
test
int
lock
pop
xchg
gs
pop
add
lock
cwtl
mov
mov
shlb
inc
jl
jne
mov
jp
jle
jb
popa
push
cmpsl
test
push
inc
loopne
push
cmp
pushf
pop
sahf
dec
imulb
xor
push
cmp
ret
movsb
fidivl
xchg
inc
xchg
ret
mov
cmp
dec
mov
sarb
movsl
cmpb
mov
add
jae
mov
stos
push
push
dec
pop
mov
insl
gs
sub
inc
rorl
fisubrs
in
jl
lods
xchg
data16
in
push
or
mov
lret
mov
data16
and
negl
adc
addr16
sahf
xor
shlb
je
jnp
mov
imul
clc
xchg
jo
js,pn
addb
insb
dec
push
jmp
stos
dec
aaa
pop
push
sbb
rol
pop
push
stc
outsl
mov
push
fcmovnu
mov
push
fwait
in
push
sbb
add
repz
xchg
imul
mov
dec
jae
push
pop
lea
lock
rcl
add
add
aaa
dec
adc
jmp
std
aam
and
push
shll
adc
fbld
mov
sub
icebp
clc
insb
xor
and
aaa
ja
test
xor
sub
int3
shr
lds
adc
mov
popl
or
aad
int
adc
add
cmc
js
xor
sbb
dec
xor
add
push
xchg
lods
cwtl
lret
mov
jmp
add
mov
test
fidivl
mov
cli
fists
mov
push
aaa
add
or
movsb
pop
sbb
ljmp
lcall
pop
cmc
mov
mov
jecxz
cmp
pop
jns
dec
jne
mov
mov
mov
leave
inc
das
sbb
stos
test
cmp
jnp
sti
sbb
mov
popf
dec
xchg
aas
out
push
loopne
in
or
or
jae
pop
lods
dec
movsl
mov
push
mov
inc
mov
fbld
xchg
loope
in
out
add
push
inc
fs
inc
addr16
mov
fcomps
mov
jle
add
push
repz
sbb
sti
adc
mov
mov
dec
fisubrs
xchg
fmull
loop
dec
mov
cs
imul
xchg
pushf
iret
call
lea
mov
cmp
cli
test
and
xor
scas
lcall
hlt
scas
cmp
stos
ror
fbstp
ja
xor
cmpsl
loopne
imul
fisubs
jl
ss
lret
outsl
pop
add
cmp
frstor
adc
ret
pop
in
pop
lea
xor
out
xchg
jb
lods
xor
add
std
inc
in
push
cmp
sub
push
mov
iret
test
outsb
int
test
jbe
adc
icebp
icebp
pop
rcrb
scas
test
pop
rol
out
fildll
int3
out
fistpll
pusha
sbb
call
mov
das
cmp
lods
mov
dec
adc
xor
in
adc
sbb
xchg
and
push
lret
icebp
hlt
rolb
add
push
pop
popa
cmp
mov
lea
push
fdivrl
cld
fcomps
and
mov
jns
xor
dec
lret
es
sub
mov
nop
sub
test
jnp
pop
sub
xchg
mov
dec
or
out
daa
shll
test
dec
je
xchg
push
scas
mov
xor
rclb
cmpsl
cld
push
ret
mov
inc
or
sub
jg
into
cmpsb
pop
cmp
add
push
xchg
arpl
ds
cmp
or
mov
jp
ds
xor
push
rcrb
movsl
jbe
add
ret
out
push
add
xor
andb
shrd
jmp
jle
jno
icebp
insb
inc
sarb
cs
inc
mov
fdivs
adc
faddp
mov
adc
aam
sub
cmp
cmc
stc
sbbl
sub
fs
cltd
fwait
add
adc
rclb
jb
dec
mov
xor
int
jbe
jnp
mov
jp
sbb
mov
push
out
cmp
ffreep
sbb
movb
mov
pop
xor
lret
data16
jo
js
lret
sahf
cmp
ret
fcomps
cmp
aas
bound
mov
lock
mov
movsl
inc
sti
movb
out
push
in
clc
xchg
and
xchg
in
and
scas
dec
movsl
cmp
insb
sub
or
sti
daa
mov
xchg
xchg
stos
xchg
repz
cmp
pop
cmp
aam
popf
imul
inc
sub
sbb
xchg
push
mov
push
pop
sub
mov
inc
add
stos
push
dec
iret
in
adc
cmpsb
stos
in
adc
std
popa
mov
repz
mov
dec
adc
addr16
dec
addr16
lea
iret
xor
cmp
cmp
push
ret
test
nop
fbld
fwait
jno
cmp
mov
in
or
inc
xor
lea
pop
and
fwait
or
sbb
inc
dec
xchg
xor
in
inc
or
and
sbb
ss
scas
test
adcl
enter
jbe
or
sbb
xlat
sbb
push
mov
push
pushf
dec
idivb
inc
mov
mov
sub
xchg
fs
ret
mov
inc
xchg
push
test
and
repnz
cmp
adc
jp
jge
xlat
repz
push
inc
pop
mov
jecxz
cmp
jo
inc
imul
imul
lds
xor
dec
push
mov
inc
mov
dec
xchg
mov
sub
xchg
in
fcoms
xor
test
orl
sub
push
push
repz
xor
scas
xor
iret
mov
aam
jae
fnstcw
mov
sub
jmp
lret
sub
sbb
popa
pop
fimull
mul
imul
mov
inc
daa
adc
daa
fstpt
sbb
pop
int
push
add
jl
aaa
lcall
xor
jbe
mov
push
daa
jnp
xchg
ror
mov
xchg
adc
xor
jg
inc
mov
jmp
mov
or
or
popf
add
xor
xor
pop
push
imull
insl
loop
push
xor
mov
insl
pop
add
jnp
inc
loop
orl
or
cmp
push
mov
pop
sbb
fcoms
mov
pop
fcmovnu
lods
lods
inc
jno
cs
dec
cmp
movsb
popa
loope
out
daa
and
ds
bound
add
aaa
xchg
jg
rolb
icebp
inc
dec
and
xchg
and
int
and
push
or
scas
sbb
pusha
inc
cmp
mov
pop
cmp
popa
or
ja
xchg
xor
imul
sbb
mov
aaa
sbb
mov
and
pushf
dec
mov
pop
pushf
cs
stos
loope
rclb
lret
pop
test
inc
aas
push
and
std
adc
les
stc
loope
jbe
cmp
inc
je
fmul
call
movsl
inc
jp
std
pop
add
push
test
xor
inc
gs
out
inc
adc
push
dec
sub
aaa
lret
sub
push
js,pt
out
pop
pop
pop
outsb
sub
push
dec
cmp
stos
sub
mov
mov
seta
repnz
fisttps
mov
bnd
hlt
mov
mov
fimuls
xchg
nop
mov
sbb
lea
pop
add
sub
loope
test
fmulp
xchg
pop
push
xlat
inc
add
in
cmpsl
and
jl
cwtl
outsb
jmp
add
movsb
cmp
inc
lret
test
ljmp
cmp
cmp
xchg
insb
dec
sbb
pop
mov
ret
sub
imul
data16
sub
dec
ret
test
lock
into
popf
xor
out
cmc
push
mov
divl
adc
std
or
shrb
gs
rolb
es
rcll
ret
sbb
xlat
pop
mov
jae
loopne
ja
pop
adcl
aaa
or
xor
arpl
jmp
inc
scas
mov
lods
roll
int3
mov
pop
aam
scas
jns
popa
dec
mov
lods
loopne
dec
jl
jmp
faddp
mov
cs
call
outsb
les
arpl
xchg
adc
roll
cmpsl
adc
popf
mov
push
js
pop
inc
jno
lret
mov
and
adc
mov
dec
cmp
bound
mov
loope
pop
lret
paddb
jo
xor
adc
fcomps
lret
mov
jg
inc
test
adc
jmp
inc
call
in
push
cs
out
es
clc
push
imul
movsl
jecxz
push
inc
or
test
push
and
cmpsb
lods
sbb
or
pop
cmpsl
mov
cmp
andl
shl
inc
jecxz
gs
pop
daa
psraw
lods
test
push
fwait
arpl
xchg
dec
cs
jmp
and
jmp
ljmp
movsl
test
sahf
dec
xchg
lock
dec
jne
ljmp
sbb
mov
stos
jb
lcall
cmp
xorl
or
cmc
mov
insb
jno
orb
pushl
mov
dec
in
xlat
out
push
popf
xor
aam
jnp
mov
push
ds
lret
stc
int3
xchg
mov
mov
into
lcall
pop
and
insl
roll
loop
adc
sahf
dec
pop
out
pop
cmp
adc
repz
stos
mov
mov
push
fisubs
js
fmuls
jb
mov
push
out
pusha
pop
aas
orb
insb
adc
aas
call
dec
sbb
mov
mov
inc
mov
push
ljmp
daa
cwtl
insb
add
insl
adc
in
ljmp
push
dec
stc
mov
pushf
outsl
test
lret
add
leave
xchg
sarb
inc
insl
fistpl
repnz
add
sub
ret
jp
inc
cmp
je
insb
push
rorl
mov
cmp
mov
or
int3
and
mov
bound
ljmp
call
add
fsts
repz
add
xchg
push
repz
jno
rclb
pop
cmpsl
mov
sbb
inc
roll
push
push
pop
cltd
xchg
jge
mov
adc
test
or
test
mov
clc
jle
in
or
adc
popa
mov
adc
mov
jmp
subb
jmp
popf
scas
adc
push
inc
pop
mov
repz
pop
jns
adc
or
xchg
xchg
add
cmp
sahf
lcall
cmp
lcall
xor
lcall
les
push
aas
loope
fistps
pop
ficoml
adc
add
popf
mov
sub
lods
aas
repz
jle
mov
mov
lahf
xchg
mov
and
pop
and
cmp
xchg
loope
scas
rclb
jns
inc
pop
push
fists
stos
daa
adc
flds
push
push
inc
test
outsl
push
icebp
popf
jnp
cmpsl
xor
jo
cmc
daa
leave
fdivrl
push
dec
fistps
xlat
aad
lods
pop
pusha
rolb
mov
inc
ja
out
pop
mov
js
movsl
jns
sub
mov
fucomip
push
gs
ds
mov
cwtl
leave
ljmp
or
pop
scas
leave
dec
clc
loop
iret
xor
mov
mov
xchg
push
lret
push
ficompl
in
cmp
add
lea
in
sub
ljmp
push
pop
hlt
jg
dec
xor
dec
mov
cmp
pop
inc
iret
rcrl
jae
shl
push
imul
adc
aad
or
mov
pop
xchg
push
rcrb
data16
adc
cmc
cmp
imul
mov
jo
cmp
insb
imull
push
mov
mov
dec
cmpsl
sbb
flds
fisttpl
mov
cmp
cmp
bound
mov
icebp
adc
sbb
pop
push
pusha
shlb
and
fadd
push
push
scas
dec
dec
xor
aas
mov
xorl
mov
jge
imul
jg
jp
aaa
mov
arpl
mov
cmp
xor
xchg
xchg
cld
mov
pop
or
add
jne
add
arpl
aaa
insl
mov
je
dec
aad
mov
dec
push
pop
addr16
mov
jp
xchg
pop
mov
jle
push
enter
lods
cmp
xchg
push
daa
sub
lods
xchg
imul
inc
adc
pop
push
rcr
cmp
jbe
sbb
mov
xchg
loop
mov
lock
push
dec
dec
es
jns
in
mov
cli
mov
ret
cli
jge
mov
inc
call
inc
fimull
pop
pop
out
push
sti
cmp
test
or
into
jbe
add
test
sbb
mov
orb
ljmp
xor
xchg
sti
pmaxsw
in
pusha
jle
jl
cmp
mov
xchg
fdivrl
lret
xor
mov
cmp
clc
pop
je
ja
mov
mov
cmc
in
divl
push
fwait
pusha
sbb
cli
sub
stc
xor
xchg
jnp
icebp
adc
adc
movsl
sbb
int3
cmp
xor
sub
pop
daa
gs
mov
inc
cmpsl
cs
leave
pushf
jo
js
xchg
mov
mov
cwtl
mov
aam
push
cmp
mov
pushf
daa
dec
mov
cwtl
sub
dec
es
shll
xor
loopne
jo
push
add
adc
xor
cmpsb
daa
nop
ss
fwait
jae
jne
lret
fadds
mov
roll
mov
xchg
popf
cld
test
xchg
sar
incb
push
aad
adc
lcall
sbb
mov
inc
mov
sbb
mov
mov
mov
fistps
sbb
xorl
xchg
dec
or
cmp
sub
cmc
sbb
stos
loop
stos
sub
popa
add
xchg
clc
push
mov
and
test
addr16
mov
out
cmc
test
loopne
push
push
loop
test
lock
xchg
je
shrl
push
pop
xchg
sub
push
shlb
xchg
cs
loopne
imul
and
inc
cmpsb
inc
pop
mov
and
daa
pop
dec
loope
push
xor
or
sbb
fists
lods
mov
pushf
jp
or
stos
sub
inc
mov
xchg
decl
sbb
and
pushfw
inc
inc
pop
bound
mov
into
mov
mov
mov
popf
nop
push
in
inc
aaa
jmp
mov
jmp
mov
push
aad
sbb
or
shll
daa
xor
xchg
leave
mov
mov
xor
mov
out
nop
imul
outsl
sbb
mov
lahf
fincstp
test
aad
out
dec
clc
xor
or
shl
mov
cmpsb
mov
dec
testl
aas
test
fnstsw
lock
fsts
sub
inc
bound
ret
aaa
dec
and
push
or
add
jne
cmp
out
shr
push
adc
mov
clc
sbb
mov
repnz
in
repz
es
daa
xchg
add
push
cmp
cld
inc
jns
loopne
je
divl
cmpsb
cli
imul
lock
xchg
add
xor
sti
jg
add
cmpsb
xor
xchg
std
add
dec
imul
mov
xchg
mov
xor
mov
and
sub
push
lea
cmp
mov
jmp
call
mov
cmp
or
jne
pop
mov
ds
mov
pop
cmc
daa
popa
cltd
and
lods
cmp
test
add
mov
mulb
adc
rcl
imul
mov
lea
rcrb
xchg
pop
int3
pop
aas
inc
push
pop
add
mov
out
ret
cmc
jecxz
imul
add
cmpsl
fistpl
jbe
jmp
rcrl
lods
imul
sbb
ds
pop
push
xchg
jnp
imul
je
das
insl
pop
lret
lret
jo
pop
xchg
adc
push
hlt
stos
mov
push
shrl
data16
add
sbbb
mov
push
and
popf
cltd
cltd
cld
addr16
or
sub
push
cmp
xchg
pop
fildl
int3
movl
std
fidivl
adc
loopne
cli
xor
mov
sbb
out
mov
insl
mov
insb
cmc
dec
cltd
dec
adc
add
outsb
and
insl
mov
adc
in
out
daa
aas
sub
ss
add
add
jno
push
mov
xchg
dec
sti
mov
repz
cmp
inc
jg
or
mov
jmp
test
ret
and
jl
cmp
jg
jg
cmp
push
outsb
dec
sahf
cltd
cmpsl
sbb
ljmp
mov
pop
sub
testl
addr16
scas
xchg
pop
loop
sbb
gs
sub
icebp
xchg
push
outsb
jl
sahf
fldcw
dec
test
pusha
adc
xchg
mov
adc
jl
fwait
leave
enter
push
orl
std
ds
sbb
mov
ret
sbb
inc
ret
iret
mov
dec
cmp
or
mov
shrb
sti
and
xchg
jns
push
rclb
or
and
mov
shll
pusha
push
ja
cmc
imul
decb
popf
out
mov
lcall
mov
xor
in
mov
stc
addr16
dec
jmp
lret
lods
imul
fstpl
xchg
push
mov
cmp
out
arpl
sub
imul
mov
pop
cs
fisubl
and
cmp
push
push
icebp
sbbb
stc
das
add
repz
jmp
adc
cmp
das
inc
loopne
cmpsl
mov
cmp
mov
out
jecxz
lock
and
clc
pop
and
xchg
cmp
decb
xchg
fistpl
roll
inc
jmp
pop
and
pop
call
and
pushf
xchg
les
sbb
xchg
adc
jbe
lods
inc
pop
mov
pop
push
mov
fs
popa
cmp
pushl
addl
fbld
fcompl
rcr
addr16
push
pop
test
pop
push
imul
cmpl
mov
stc
or
int
sbb
xor
stos
in
push
dec
adc
cmc
aaa
fwait
jecxz
inc
xchg
and
mov
cli
arpl
lock
mov
dec
pusha
or
jecxz
dec
xlat
jle
dec
jae
jae
cmp
push
xor
sbbl
out
cmp
invd
movsl
fdivr
push
pop
push
pop
ds
jp
je
lahf
movsl
xor
cmp
lret
imulb
mov
xor
repz
cmp
dec
iret
and
in
or
js
mov
xor
int3
push
aad
hlt
sahf
call
add
adc
adc
in
into
call
mov
in
imul
mov
xchg
sbb
adc
lahf
push
test
xchg
ds
push
popa
xchg
cmp
cmp
sub
lock
gs
push
cmp
add
xor
fimull
imul
mov
inc
adc
shl
cmp
lds
xchg
or
lret
and
cmp
xlat
out
loopne
fsts
push
lock
mov
sub
pushf
arpl
mov
pop
xor
popf
sub
orl
out
frstor
mov
push
jle
mov
cmp
cld
push
mov
mov
lods
pop
sub
sahf
sbb
adc
test
mov
sub
push
sbbl
mov
sbb
mov
insl
push
in
xchg
rcr
lcall
in
data16
sbb
lret
and
adc
pop
dec
xchg
int
lret
push
in
mov
insb
jns
cli
jns
fmull
nop
dec
iret
bound
mov
lods
js
lock
cmovg
and
mov
mov
dec
cwtl
scas
gs
and
loopne
pop
jnp
jne
xchg
cmc
js
xchg
mov
inc
popa
inc
outsl
fadd
pop
add
jnp
inc
or
in
mov
mov
cld
aaa
bound
adc
stos
sub
or
insl
push
mov
bound
pop
sbb
cmp
xor
aad
mov
jle
dec
xchg
pop
push
cmp
shll
gs
or
pop
cmp
out
sarb
xchg
pop
mov
outsb
push
and
add
add
cmp
jl
nop
jmp
push
lea
int
data16
mov
ss
dec
inc
inc
push
mov
pushl
cmp
aas
cmp
sarb
mov
mov
inc
cmp
pop
add
orb
fidivs
fnstcw
xchg
out
jo,pt
sti
jle
pop
arpl
clc
bound
orb
test
sub
mov
mov
movsl
lock
fs
push
inc
xchg
adc
mov
cmp
clc
out
ljmp
mov
in
ret
hlt
pop
cmp
out
fists
xor
push
inc
inc
jl
je
cmp
adc
mov
push
jp
xlat
adc
dec
and
decb
adc
sbb
jp
push
adc
cmp
mov
push
xchg
jo
int
mov
pop
ficoml
into
push
or
mov
inc
stc
flds
es
jle
mov
sbb
sub
adc
cmp
ds
or
call
inc
sbb
lret
sbb
fld
inc
cmc
pop
roll
mov
xchg
push
fistpl
test
cmp
cmp
and
fdivrp
mov
mov
inc
sar
mov
sub
inc
xorb
jnp
push
ror
in
not
xchg
xor
sti
push
xor
add
insl
xor
subl
sbbl
xor
add
into
call
cmpsl
pop
push
sti
leave
loopne
lods
loop
push
filds
arpl
push
shl
sbb
jmp
xor
outsl
and
icebp
fprem
mov
mov
mov
out
or
dec
popl
scas
push
push
inc
sbb
sbb
mov
add
int3
sub
cmp
dec
popf
cs
xor
pop
js
mov
aam
pop
mov
fcmovb
push
arpl
dec
enter
push
sbb
popa
popf
mov
xchg
xchg
insl
add
aam
xchg
dec
pop
push
insb
test
jbe
and
fmull
int
outsl
imul
and
adc
imul
cltd
aad
cmpl
add
push
pop
testb
cmp
jg
dec
rol
ret
inc
inc
mov
push
pop
push
jg
mov
nop
ja
out
movsl
mov
repnz
mov
and
addr16
call
outsb
mov
es
push
jb
push
and
add
pop
xchg
xchg
adc
cmc
push
mulb
mov
daa
mov
pop
sti
lahf
call
mov
push
xchg
push
mov
pusha
imul
mov
push
sahf
scas
loope
add
xchg
inc
pop
cmp
xor
lock
mov
xor
mov
les
repnz
cmc
sbb
pop
xchg
mov
mov
inc
adc
xchg
jb
in
add
sub
cld
xchg
or
push
inc
and
xchg
mov
jl
movsl
cmp
push
and
mov
pop
lret
clc
cmp
data16
stos
bound
pop
jbe
cmpsb
lcall
xchg
pushf
mov
je
into
push
xor
fisttpl
inc
adc
push
testb
mov
insb
out
sbb
jbe
pop
scas
jp
ret
pop
mov
adc
jp
ljmp
cmpsb
lret
cmc
cld
or
jl
into
pop
daa
mov
jg
mov
push
out
inc
pop
scas
stos
xchg
es
push
or
mov
rcrb
xchg
bound
inc
jg
adc
sbb
cmpsb
cld
pop
mov
or
xchg
jno
adc
push
ret
xorb
inc
add
push
add
push
stos
jmp
gs
scas
push
jg
fdivr
add
xchg
push
and
push
gs
loopne
dec
int3
jmp
loopne
bound
sub
xchg
pop
push
les
xor
push
push
mov
mov
dec
lea
lcall
xchg
lret
push
inc
mov
mov
lea
mov
add
cwtl
xchg
inc
bound
mov
test
clc
lahf
xchg
call
scas
push
jb
dec
ja,pn
movsb
add
push
add
xchg
jp,pt
lods
jp
test
inc
arpl
jge
adc
cld
lret
leave
and
jge
mov
mov
jno
push
mov
sub
popf
mov
pop
loopne
fsubrl
bound
das
xchg
mov
or
jae
mov
dec
shll
movsb
fistpll
or
push
cltd
in
mov
popa
clc
gs
insb
mov
mov
xchg
jge
dec
es
dec
out
mov
add
dec
rcl
in
or
lds
inc
inc
xor
in
gs
bound
mov
mov
push
lret
sub
add
dec
push
loopne
pop
cltd
pop
add
push
xor
test
iret
push
xor
push
lods
sbb
out
mov
add
lret
mov
mov
out
sub
and
addl
fwait
shrb
push
pusha
stc
sbb
mov
lds
jbe
lods
push
pop
mov
pusha
inc
pushfw
sub
push
dec
movl
insl
mov
xchg
push
inc
push
push
dec
insl
outsb
mov
cmp
in
cli
mov
loopne
sub
ret
jg
repz
mov
lahf
fucom
dec
or
pop
popa
mov
pushf
cmc
sub
xor
dec
add
sbb
inc
jle
lahf
sbb
jae
decb
dec
and
mov
lcall
cmp
pop
add
imul
loop
cs
scas
xchg
in
scas
jnp
addr16
inc
in
std
push
pop
and
mov
inc
addr16
rcll
aaa
jl
test
nop
adc
out
push
test
mov
dec
mov
pop
pop
lea
imulb
push
out
dec
nop
dec
std
push
or
and
cli
xor
and
shlb
movsl
mov
enter
add
and
bound
pop
lcall
xor
mov
dec
pop
jl
mov
fbld
es
push
dec
adcb
in
idivb
cltd
and
sub
dec
and
shr
fists
pop
jmp
inc
lret
out
mov
push
loopne
push
mov
rclb
inc
sub
mov
es
insb
push
sbb
xor
cltd
in
dec
scas
out
test
ja
mov
leave
pop
xchg
rcr
enter
fwait
pop
add
bound
ja
dec
movsb
insb
xor
inc
scas
and
add
pop
adc
jne
push
inc
jnp
frstor
inc
rep
pop
in
sub
push
aam
sbb
mov
cltd
xchg
ja
cmpsb
and
ds
pop
lahf
out
pop
cmp
dec
cli
cmc
ja
pop
or
push
and
aas
fwait
cmpsl
pop
in
sbb
or
cmp
dec
mov
adc
cld
shrb
das
out
repnz
sbb
out
push
ljmp
add
mov
pop
mov
lcall
ljmp
sbb
js
loop
in
mov
in
xlat
fcmovnu
mov
mov
fwait
out
hlt
cld
adcl
int3
push
stos
add
xor
scas
xor
jge
insb
pop
push
adc
sbb
or
inc
mov
dec
movsl
cmp
insl
inc
sbb
fs
xchg
xchg
scas
cwtl
xchg
pop
stos
clc
cmp
push
sbb
les
push
xlat
jge
rcrb
mov
popa
sbb
pusha
xchg
flds
out
cmp
icebp
mov
or
fistl
sbb
je
push
sar
repz
fdivl
repz
mov
mov
addl
jno
jae
push
cmp
sbb
ret
cmp
cmp
insl
out
lret
je
push
ss
inc
xor
xchg
into
mov
and
test
xor
sbb
cmp
aad
xchg
ret
loopne
pop
int
sar
push
mov
mov
cmc
pop
sar
dec
sbb
imul
cmpsl
icebp
lds
sbb
pop
mov
add
leave
inc
xchg
push
and
jmp
aad
popl
mov
int3
add
int3
sub
aaa
adc
shl
jb
mov
xor
ljmp
jns
test
fildl
std
push
mov
test
ja
or
mov
mov
xor
push
stos
mov
or
loop
rclb
xchg
adc
push
imul
test
mov
loop
lret
decl
push
in
push
mov
push
push
xchg
sbb
sub
sbb
std
sub
pop
clc
sbb
mov
pop
scas
inc
scas
dec
ds
push
rol
mov
cmpsb
sub
std
bound
mov
xchg
mov
test
mov
popf
aam
xchg
xchg
cwtl
xchg
outsl
jbe
shl
aaa
jae
mov
mov
out
fnstsw
lods
pop
pop
adc
mov
jns
pop
lcall
hlt
adcl
vshufps
scas
jp
mov
add
push
pop
cmp
sbb
addr16
fdivrs
int3
out
xorl
fstpt
jmp
xchg
ret
pushf
or
das
lfs
inc
mov
jo
aaa
fdivrp
pop
imul
mov
int3
xchg
pop
mov
ljmp
shll
cmp
and
or
mov
lods
jecxz
lret
dec
aad
lcall
outsl
mov
lret
xchg
mov
mov
rclb
sub
ret
xchg
push
addr16
pop
dec
xor
out
dec
mov
imul
mov
cld
lahf
and
pop
inc
sarb
inc
mov
and
fcompl
push
repnz
xor
enter
ljmp
inc
xchg
int
adc
ret
mov
mov
mov
sbb
mov
sbb
test
dec
shlb
mov
in
test
add
lahf
jne
mov
popf
cs
scas
adc
sbb
inc
loopne
ds
and
mov
aaa
add
mov
inc
pusha
push
jg,pt
ja
xor
call
cmpl
lock
stos
cmc
cld
enter
sbb
lret
ja
lds
stos
and
cwtl
inc
mov
sub
lds
shrb
daa
dec
jns
and
push
roll
mov
dec
cwtl
jecxz
scas
shr
push
xor
scas
push
and
adc
cli
lcall
clc
or
imul
sbb
push
mov
lods
xchg
sbb
fsubr
roll
mov
jecxz
int
inc
mov
movsl
out
das
in
stc
faddl
jbe
out
mov
test
push
fnsave
adc
addr16
xchg
shll
cmp
sub
out
pop
mov
lea
test
mov
pop
or
scas
aad
ss
sbb
or
xchg
hlt
jmp
imul
mov
leave
mov
cmp
mov
loope
mov
icebp
or
cmp
push
int3
imul
int3
daa
loopne
sbb
mov
sbb
cmp
sub
scas
int3
lock
sbb
mov
ret
scas
dec
xchg
addb
sbb
mov
ficoms
pusha
imul
pop
xor
jl
and
mov
dec
cltd
jg
xor
adc
frstor
enter
aam
movsb
aam
pop
mov
insl
push
sbb
imul
add
ret
ljmp
inc
jnp
ja
fbstp
mov
inc
push
adc
push
cmp
adc
scas
mov
icebp
xlat
icebp
into
mov
add
int3
sub
adc
js
hlt
lds
pop
or
and
adc
inc
adc
xchg
lods
jae
pop
add
xchg
mov
out
mov
or
rclb
mov
cmpsl
in
idivb
ljmp
lahf
in
mov
gs
sbb
mov
push
jl
xor
fcmovb
jnp
mov
jo
lret
cld
andl
dec
xlat
cmc
sbb
cmp
xlat
push
and
sub
call
cmpsw
sbb
inc
pop
mov
pop
bound
mov
sti
dec
push
nop
mov
pop
push
inc
mov
add
xor
sarb
pushf
cmp
lods
movsb
faddl
adc
dec
rcrb
nop
fcmovnu
dec
dec
xchg
push
leave
cmc
xchg
shl
testb
scas
sbb
mov
and
lret
filds
hlt
bound
xchg
cmc
into
cmp
sub
ljmp
sub
or
sbb
inc
push
repz
in
rclb
pop
and
enter
dec
mov
mov
sub
add
adc
ret
jg
mov
arpl
dec
lods
js
and
mov
popf
ret
mov
mov
dec
lods
cmp
popf
out
jmp
mov
xor
xchg
shll
add
arpl
push
fsubrl
mov
jb
std
hlt
outsb
xchg
in
dec
fistps
sub
enter
inc
pushf
push
inc
faddl
test
jae
ss
add
mov
repnz
adc
shrl
lock
mov
push
inc
pop
gs
outsb
movsl
ret
leave
jmp
xchg
sbb
mov
jne
cmpsl
addb
adc
faddl
sub
push
ja
jl
imul
loop
out
mov
push
mov
inc
fincstp
popa
loop
xchg
testl
mov
test
sbb
mov
push
fsubl
adc
loope
jns
jle
sbb
xor
add
shll
cwtl
popa
mov
mov
add
outsl
push
cmp
and
sbb
insl
jle
pop
xlat
push
mov
pop
pop
fdivs
xor
or
cmp
push
adc
jb
push
imull
pop
dec
dec
xchg
gs
xor
jnp
push
sub
gs
jmp
cli
push
mov
fdivrl
add
cmp
bound
out
movsl
stos
pop
mov
pop
xor
dec
pushl
mov
jne
xor
inc
ret
sub
sbb
jnp
sbb
xchg
sar
aad
leave
mov
repz
jl
mov
mov
xchg
lea
xchg
mov
cmpl
pop
adc
add
dec
fcomi
and
mov
sbb
adc
push
xchg
aam
lods
in
fisubrl
jns
mov
push
popa
iret
mov
sti
ss
mov
fs
sub
jno
rorb
push
in
lret
sbb
dec
test
jb
sbb
mov
mov
imul
jbe
testb
xchg
in
push
call
sbb
cltd
dec
or
lds
xor
jbe
out
into
enter
lods
cwtl
std
sbb
pop
mov
out
hlt
cmp
js
xchg
or
popa
cmp
sahf
sub
mov
mov
jp
pop
or
mov
or
imul
or
sbb
jb
call
leave
outsl
fs
stos
repz
mov
cmp
dec
les
adc
mov
inc
push
fdivr
sub
lock
js
fsubrs
mov
sahf
bnd
fcomps
leave
scas
cmp
incb
gs
mov
jmp
push
fs
dec
sti
fisttpl
push
xchg
adc
sbb
arpl
push
mov
sbb
cmpsl
jo
cmp
daa
js
cmpb
adc
shrl
xchg
aam
gs
cld
add
jg
out
jle
sub
repnz
lahf
mov
popf
and
iret
or
cld
lgs
pop
mov
mov
test
sbb
push
fld
leave
add
scas
pusha
cmp
cs
loopne
mov
add
jb
and
mov
pushf
lock
adc
push
xorl
pusha
hlt
ljmp
enter
dec
lock
xchg
and
imul
push
jmp
and
or
fiaddl
jmp
loop
cmp
and
xchg
mov
inc
stos
xchg
jb
or
inc
lahf
icebp
inc
or
sub
xor
xchg
mov
mov
shll
inc
jg
jg
scas
sar
fldenv
daa
mov
dec
flds
push
test
or
int3
push
inc
xor
clc
fbstp
cmpsb
jb
or
push
add
int
xor
inc
push
arpl
xlat
mov
xchg
pop
cmpb
leave
sbb
push
adc
cld
and
xchg
sbb
mov
mov
dec
in
jge
scas
ret
rcrl
adc
ret
iret
in
or
mov
pop
imul
rcll
sub
popf
lea
sub
sbb
sbb
pop
inc
cltd
dec
xor
cmpsb
lods
xchg
fnstsw
rorb
mov
sti
add
pop
subl
push
cwtl
addr16
inc
xchg
addr16
xchg
pop
icebp
pop
add
outsl
jecxz
mov
mov
jmp
shlb
add
xchg
in
mov
icebp
dec
ret
mov
cld
cmc
das
and
or
idivb
mov
mov
jnp
push
pop
ljmp
mov
cltd
rcrb
repz
mov
inc
clc
es
cmp
addb
sahf
jg
loope
arpl
adcb
lods
pusha
in
std
cld
in
xchg
inc
mov
dec
inc
mov
scas
mov
shlb
fwait
jecxz
mov
jle
dec
adc
cltd
outsl
xchg
aad
fmul
and
popa
xchg
add
jnp
push
cs
fsub
jle
cwtl
lock
dec
xorb
pop
mov
cmp
or
insl
add
xchg
mov
add
rcrb
shlb
clc
das
mov
ljmp
mull
shlb
jnp
mov
cld
push
mov
mov
iret
subb
adc
int
arpl
add
das
cmp
daa
or
jbe
push
ret
add
mov
cli
iret
sbb
cmp
sub
shl
popa
and
inc
daa
lea
jns
sbb
fsub
cltd
movsb
arpl
add
fcompl
imul
jnp
or
icebp
xor
or
movsb
loopne
xor
push
xor
dec
mov
sahf
enter
mov
inc
out
xchg
xchg
nop
push
jmp
sub
movl
mov
int3
std
dec
adc
jb
xor
inc
adcb
sbb
xchg
mov
sbb
pushl
cmc
mov
out
jno
dec
dec
lret
push
cwtl
lea
cmp
push
cmp
or
mov
xchg
fidivl
fstps
pusha
ljmp
clc
jl
icebp
cltd
andb
fwait
ja
xchg
cmc
mov
mov
cmp
data16
xchg
inc
mov
lock
cmp
fwait
ljmp
dec
dec
fs
aam
loope
and
adc
popf
adc
shrl
xchg
cmc
xchg
mov
inc
mov
cmp
and
ds
lock
cmp
push
shr
stos
inc
flds
and
rcrb
add
loopne
adc
orl
xchg
xor
int
cmp
mov
and
jmp
jg
fildll
or
inc
pop
into
and
mov
cs
pop
popa
cmp
add
dec
push
and
sub
mov
lods
lahf
or
outsb
cs
and
cmp
fwait
or
stc
bound
insl
lods
scas
inc
shll
sbb
jnp
test
push
lahf
jge
idivb
mov
sti
push
cmp
sarl
fwait
mov
cli
sbb
pop
sbb
pop
push
stos
mov
xlat
inc
lds
fwait
xchg
sbb
testb
outsb
mov
jnp
cmc
ljmp
xor
fwait
jge
inc
mov
sti
leave
xor
adc
addl
mulb
xchg
sub
cmpsb
xor
ja
mov
insl
push
iret
pushf
popf
dec
inc
push
or
push
in
push
lcall
mov
xor
insl
pop
ret
jmp
add
mov
jmp
jne
sub
movsb
add
adc
cmpb
icebp
sbb
adc
adc
dec
xchg
fsubrl
push
and
push
scas
test
push
fwait
dec
loop
jbe
shr
adc
mov
imull
push
jb
xchg
jl
push
cmp
adc
cmpsb
testb
or
sbb
xchg
cmp
or
pop
stc
roll
mov
das
mov
cs
cmpsb
test
push
jno
inc
push
mov
mov
popa
and
xchg
xchg
out
dec
into
mov
mov
dec
ja
popa
repz
mov
xchg
out
mov
xor
outsl
das
rcl
pop
xchg
repnz
test
sti
lods
push
loop
push
inc
mov
push
roll
mov
aad
jmp
scas
jmp
jge
imul
aad
mul
idiv
xlat
inc
jae
jno
mov
lcall
jb
repz
jmp
into
cwtl
mov
movsl
ds
pop
outsl
jecxz
xchg
sub
adc
int
xchg
dec
outsl
push
repnz
jne
xchg
arpl
jns
mov
jno
push
push
mov
cs
ss
mov
imull
arpl
test
and
daa
jge
lea
movsl
cmp
loopne
mov
xchg
push
iret
sbb
into
fisttpl
lret
orb
int3
add
xor
or
jne
mov
push
cmp
sahf
sbb
repnz
xorb
sub
rol
mov
sub
jno
push
int
inc
jmp
sti
push
jno
test
adc
sub
ret
jl
mov
jecxz
mov
test
int
test
inc
movsb
pop
int3
adc
and
add
or
out
add
aas
mov
sub
push
pop
pusha
icebp
add
push
mov
xchg
or
sbb
into
decb
mov
jmp
mov
dec
lock
divb
clc
out
cmc
or
out
pop
xchg
sub
push
inc
cltd
sarb
xor
jmp
negb
inc
xchg
pop
jno
mov
jne
adc
fs
iret
jne
dec
popa
inc
ret
jbe
test
outsb
roll
fstpl
dec
int
mov
jg
fs
mov
in
pushfw
shl
sub
aam
push
sbb
out
cli
adc
inc
mov
call
pop
lret
fsubr
sub
adc
inc
mov
aaa
call
pop
sarb
test
push
jl
lea
ljmp
outsl
pop
in
les
fisubl
jne
push
pop
mov
adc
adc
dec
inc
es
push
mov
in
sbb
or
push
or
daa
and
inc
xor
ss
xor
rclb
cmp
mov
jno
mov
lods
push
je
mov
movsl
adc
xchg
adc
cwtl
sub
fcoml
jnp
fstpt
mov
xchg
movsl
ss
mov
nop
out
pop
ds
fnstcw
fwait
popf
sti
pop
xorl
push
imul
loopne
imul
sbb
daa
jbe
mov
inc
push
int
out
adc
push
jmp
jbe
lret
adc
fimull
mov
push
mov
fisttps
cwtl
pop
and
arpl
nop
enter
or
adc
mov
in
in
and
and
pop
aad
or
and
jo
mov
lock
pop
shll
cli
aaa
cmc
arpl
push
fmull
nop
sahf
pop
sahf
xchg
sbb
push
xor
xchg
jmp
outsl
cltd
sbb
jns
xchg
add
inc
push
push
adc
push
jle
decl
or
and
mov
push
add
movq
out
sbb
fdiv
rcrb
ds
fs
lea
inc
jmp
sarl
jp
mulb
cld
jp
aaa
push
ficompl
jno
sbb
loope
sub
push
inc
mov
in
cmpsb
vpsubw
sub
divl
push
cli
das
or
add
lcall
daa
cld
cmp
jo
bound
cs
rcrb
ss
dec
xor
outsb
fidivrl
in
ljmp
xor
add
add
stos
lret
test
aaa
xchg
mov
mov
pop
mov
mov
insl
lahf
lret
inc
nop
xlat
ja
ds
test
ljmp
divb
sbb
and
xor
mov
orl
sbb
dec
and
add
jle
fwait
jns
pop
les
loopne
addb
ja
sub
mov
add
cmpsb
jp
jle
sub
divb
in
das
test
sub
push
mov
jns
fmulp
adc
outsl
adc
in
dec
mov
test
mov
inc
jnp
dec
jl
push
mov
pushf
inc
ja
mov
shlb
add
insb
out
adc
cld
adc
adc
fs
xor
jae
adc
adc
lods
pop
jg
inc
cs
mov
and
shl
lock
movsl
lods
aaa
sbbb
mov
and
xchg
pop
adc
mov
fsubrp
rcrb
mov
aas
mov
cmc
sbb
cmp
mov
inc
xchg
lret
shll
jge
cmp
hlt
mov
and
cwtl
inc
add
movsb
hlt
les
jmp
adc
loopne
mov
sbb
mov
inc
ficomps
cmp
dec
pushf
jl
adc
into
or
dec
lods
mov
sbb
dec
or
das
lahf
pop
lods
xor
mov
dec
mov
cmp
mov
mov
pop
cs
add
inc
xchg
mov
xor
xorb
ret
leave
xchg
adc
shlb
push
adc
rcrl
sbb
adc
inc
aas
mov
mov
out
add
and
push
scas
lea
aam
pop
dec
pushl
push
repnz
nop
pop
add
dec
pop
mov
pop
clts
xchg
daa
daa
daa
cmc
adc
fs
mov
loope
popf
pop
scas
adc
sub
sbb
mov
in
ljmp
mov
cmp
fsubrs
insl
jns
jmp
adc
mov
cld
dec
adc
jne
ret
movsb
mov
cmpsb
fwait
and
mov
mov
cli
adc
ja
mov
ficoms
sti
stos
mov
clc
xor
stc
jl
mov
sbb
cmp
insb
jl
js
jae
jo
test
stc
and
push
les
cs
jbe
mov
fildll
dec
sub
mov
inc
jecxz
push
es
mov
test
pop
ficompl
cmpsb
jb
pop
lret
idiv
jmp
add
sbb
mov
imul
mov
dec
push
add
pop
loop
mov
mov
out
imul
mov
lret
dec
and
cld
loopne
dec
and
mov
jb
xchg
adcl
repnz
add
push
cmp
jecxz
lahf
mov
add
pop
out
and
call
fdivrl
jg
xor
lcall
fstps
adc
adcb
push
xchg
fisubrl
cmp
ss
insl
int
fisttpl
jl
jle
or
and
inc
mov
xchg
inc
dec
xchg
xor
shlb
nop
dec
imul
mov
lock
xchg
fists
jge
dec
adc
add
lret
cmp
jmp
loope
pop
mov
std
rcr
adc
leave
mov
lds
fcomi
adc
dec
cmp
faddl
add
arpl
xor
repz
lahf
fwait
adc
push
arpl
cmp
insl
add
fldcw
mov
and
inc
or
lods
arpl
lcall
test
adc
lret
sbb
dec
or
mov
loope
cli
std
xorl
lret
jle
fwait
mov
cmpsl
sarl
jge
jmp
loope
mov
sbb
xchg
jns
push
lcall
push
leave
mov
in
lcall
sti
arpl
mov
dec
jmp
ja
mov
or
pop
enter
push
daa
shr
addb
sub
iret
push
dec
lcall
inc
push
int
dec
popf
imul
cmpsb
add
lds
lods
int3
jecxz
or
enter
jnp
test
xchg
movsb
pop
out
ss
clc
sub
cmp
pop
and
insb
das
pop
push
or
pop
and
push
mov
mov
sbb
lahf
shl
ret
inc
adc
cmp
or
cmp
mov
int
fidivrs
aad
adc
fbld
call
adc
stos
and
mov
adc
fwait
repnz
je
cmp
cmp
xor
insl
lgs
pushf
into
out
aaa
es
push
mov
test
rolb
aam
insl
das
jmp
xor
std
int
jno
popa
and
popa
sub
xchg
pushf
lret
outsl
das
mov
and
pop
mov
out
xchg
push
inc
mov
enter
pop
test
cmp
xchg
xor
lock
sub
or
sbb
mov
clc
pop
sub
dec
inc
popf
jecxz
clc
mov
mov
enter
fstpt
js
inc
add
mov
mov
pop
pop
icebp
push
test
mov
arpl
jbe
inc
push
inc
bound
sub
rol
ret
pop
pop
push
or
or
pop
ljmp
xchg
add
ljmp
sbb
and
add
ret
stos
push
jb
add
dec
mov
mov
dec
xchg
mov
mov
les
fldl
movsb
cmp
lret
jge
idivl
inc
add
mov
gs
push
mov
and
pop
das
lcall
adc
or
lea
lods
pop
aas
push
icebp
shlb
fldl
push
and
mov
bnd
shlb
inc
jmp
and
mov
push
fsubrs
mov
cmp
addb
mov
loope
cmp
mov
push
enter
sbb
add
dec
out
imul
mov
and
jns
pop
jg
add
ret
std
lcall
dec
fwait
or
jns
mov
ret
or
xchg
cwtl
ljmp
loop
jnp
mov
in
pop
inc
lock
jmp
pop
ljmp
pop
daa
xor
sbb
push
jo
loope
xchg
imul
pop
xchg
push
xor
xchg
mov
sub
mov
int3
in
mov
stos
fs
sar
fxch
aam
aad
lcall
or
or
and
jo
dec
addr16
and
out
mov
add
aad
outsl
aaa
inc
jne
xor
jecxz
in
dec
ficoms
or
inc
xor
push
lock
sub
sub
add
xlat
sbb
aad
add
pushf
xchg
repz
rcrb
or
add
ror
cmpsl
pusha
pop
shrb
loope
es
jno
sbb
loop
sub
xorl
lods
scas
push
dec
lret
lret
push
and
inc
xlat
pop
inc
stos
push
or
xor
divb
mov
mov
mov
in
or
add
xchg
adc
in
shll
int3
adc
adc
mov
and
jmp
pop
xchg
subl
jle
add
in
sbb
aaa
and
test
ds
mov
pop
xchg
fwait
inc
loopne
decl
stc
sbb
jne
cmp
sbb
dec
mov
mov
cltd
jmp
push
scas
das
sahf
mov
or
das
or
cs
mov
jne
bound
adc
insl
popa
pusha
subb
sbb
xchg
or
xchg
add
add
shll
cmpb
lahf
jne
bound
lea
popa
and
push
testl
test
nop
cmp
outsb
jae
out
and
inc
push
cmp
leave
insb
mov
in
push
xchg
popf
xor
pop
imul
push
cwtl
jbe
xchg
popf
pop
mov
mov
xchg
xor
cmp
into
test
and
mov
push
shlb
outsl
jmp
cmp
push
sub
push
lret
push
pop
mov
loopne
mov
adc
cli
sarl
add
adcl
mov
sub
inc
pop
jp
cltd
addr16
jp
sbb
sbb
bound
fildll
imul
lret
dec
sub
push
dec
mov
sbb
xchg
mov
je
xor
jae
xchg
stc
outsl
cmp
inc
sbb
jecxz
jae
imul
rcrl
insb
mov
fbstp
push
dec
or
jmp
jae
pop
stc
sub
add
mov
dec
addr16
in
xchg
jns
aad
ss
test
lods
cli
sete
mov
lahf
out
ljmp
sub
repnz
mov
push
or
test
mov
insb
xor
paddd
sbbl
jo
xor
sbb
out
sub
loopne
fs
paddw
test
movsl
pushf
ret
insl
pop
sbb
lods
xchg
mov
ds
sbb
arpl
mov
push
dec
lods
aad
mov
lds
out
pop
push
pop
lea
bound
push
push
or
dec
test
jecxz
inc
xor
in
adc
adc
lds
lock
leave
mov
xor
dec
mov
sub
icebp
push
sub
fsubrl
das
jle
outsb
jle
clc
arpl
adc
cmc
mov
xchg
dec
cs
cmpsb
cld
jg
subb
xor
xchg
loope
mov
add
es
dec
ja
das
stos
rcrl
mov
adc
test
test
decl
dec
jp
add
sbb
mov
or
add
fs
sbbl
dec
mov
int3
sbb
sar
out
pop
repnz
repnz
push
in
scas
call
lods
dec
loope
clc
leave
mov
cmpsb
cli
nop
data16
in
xor
incb
push
or
mov
pop
addr16
sbb
sub
call
push
dec
or
mov
lret
cmp
movsl
stc
and
pop
mov
mov
adc
scas
add
xor
sub
xor
xor
lahf
sbb
mov
jp
test
mov
rolb
jnp
adc
xor
lahf
shrl
pop
imul
popf
mov
popa
rcll
mov
dec
fs
sbb
mov
add
les
outsl
adcb
inc
scas
lds
shlb
addr16
leave
call
test
jnp
cmpb
adc
push
pop
jns
in
nop
mov
mov
or
mov
push
iret
adc
fcoms
movsl
xchg
mov
cltd
dec
lock
dec
adcl
and
dec
lahf
mov
add
in
addb
sti
frstor
jmp
fcompl
ficoms
xchg
sub
cltd
pop
fisubl
stos
nop
jae
or
and
push
into
mov
dec
das
cs
fbstp
mov
mov
dec
sbb
enter
call
mov
and
mov
add
shlb
fwait
in
cs
mov
scas
jecxz
adc
mov
enter
mov
je
cmp
mov
mov
es
mov
out
lods
stc
sbb
lods
pusha
cmpsl
mov
sub
je
pop
out
mov
mov
mov
cmp
loop
mov
push
fsubs
ret
jno
sti
add
mov
je
dec
fldl
loop
mov
imul
cltd
or
mov
leave
xor
inc
add
pop
add
inc
jecxz
pop
aad
jmp
stc
aad
in
adc
xor
popf
fisubrs
rcrl
mov
or
jb
push
call
xor
pop
fnstenv
stos
sub
jp
outsb
out
std
lods
iret
out
adc
cmp
dec
adc
ret
inc
repnz
addr16
cmpsb
cltd
jnp
sub
shlb
cmp
addr16
incb
shlb
adc
dec
test
lahf
or
idivb
push
lahf
xorl
ljmp
dec
fisubrl
mov
jnp
bound
and
jl
adc
test
inc
mov
push
fdivs
xchg
stos
bound
aad
sbb
stos
cmp
xchg
jbe
dec
mov
dec
xchg
xchg
cmp
jo
lahf
jo
shll
ljmp
dec
outsb
dec
scas
jecxz
jae
adc
and
stos
add
mov
lds
outsb
jae
jne
inc
in
jecxz
lods
or
mull
push
scas
inc
sahf
fisubs
dec
lret
dec
xchg
dec
xorb
gs
or
cmp
push
add
push
aam
add
cmp
mov
jae
shll
xor
mov
out
and
orb
pop
jo
jg
shr
fwait
std
fisttps
in
mov
pop
mov
idivl
faddl
repz
xor
sbb
add
mov
cmp
ja
adc
fcompl
sub
pcmpgtw
and
sbb
jp
mov
or
jecxz
mov
add
sahf
hlt
sbb
lods
mov
pop
adc
push
mov
sub
imul
cmp
clc
scas
pop
clc
mov
jl
fadd
sbb
mov
lods
pop
gs
out
lahf
inc
cmp
dec
ss
push
mov
decb
jle
test
std
mov
inc
addr16
mov
jp
movsl
cmpsb
xor
xchg
les
fidivs
pushf
adc
or
push
movb
dec
xor
pop
pop
mov
push
mov
sbb
dec
cmpsl
inc
ljmp
andl
stc
sbb
int3
add
daa
mov
cld
xor
dec
adc
jo
jae
add
xor
movsl
sbb
cmc
lock
cwtl
pop
cmp
xchg
add
popf
jmp
shll
xchg
mov
sahf
or
xor
cmc
mov
fstps
jo
inc
or
and
inc
iret
pop
test
sbb
call
aam
gs
adc
xor
push
mov
sub
and
lock
mov
call
arpl
jno
and
fmull
cmp
lds
xor
jl
cwtl
cs
nop
push
pop
cltd
cwtl
rorl
jno
jg
fistl
add
xchg
xchg
fstpt
adc
aas
or
divb
fistpll
aas
dec
int
inc
mov
and
jb
cli
ja
push
adc
xchg
push
sbb
mov
loope
in
mov
dec
cs
lds
push
jne
mov
mov
je
fcompl
mov
leave
js
fs
test
call
xchg
cmpsl
sub
fwait
mov
sbb
insb
add
xor
xor
gs
sub
mov
jno
clc
push
cld
repz
jle
lock
pushf
nop
jo
aam
mov
mov
adc
or
add
cmc
cmp
test
dec
pusha
mov
or
cmp
or
cmp
ljmp
jg
xchg
fwait
js
in
jae
testl
push
mov
icebp
xchg
lods
dec
or
test
sub
cmp
lret
and
pop
mov
push
cmp
in
xchg
movsl
scas
testl
icebp
mov
mov
sbbb
add
mov
jne
cmpsb
inc
dec
cmp
mov
scas
aaa
sahf
jmp
sub
sub
rorl
test
cltd
test
je
addr16
out
fisubrl
fucomip
sub
xchg
xchg
shll
sub
jo
iret
xchg
test
lahf
push
int3
and
es
jo
pop
mov
mov
xor
mov
add
sbb
jmp
xchg
push
push
in
pop
push
push
add
cmp
sub
sub
icebp
arpl
xorl
mov
mov
repz
xlat
or
sbb
and
cmp
jo
jg
cltd
nop
out
mov
gs
lret
adc
daa
fistl
int3
push
lahf
inc
xor
fsubrl
jno
xor
jmp
dec
mov
dec
and
imul
push
rolb
mov
sub
pop
hlt
es
imulb
sub
push
add
ficompl
cs
pop
ret
add
dec
insl
das
mov
std
ret
xlat
and
test
and
push
or
fstpl
push
cmc
pop
mov
jnp
dec
add
lods
inc
aas
add
jno
xor
mov
dec
insb
jg
inc
popa
iret
mov
cmpsb
sub
dec
stc
arpl
push
mov
mov
xchg
rclb
addl
dec
and
movsl
mov
aam
mov
mov
fcomps
or
mov
mov
push
inc
inc
lcall
dec
or
out
mov
push
lret
lret
imull
in
stos
sahf
push
xor
or
test
pop
mov
mov
out
sub
sub
shr
std
dec
lret
fistl
das
cmpsl
cmp
dec
pop
push
mov
dec
pusha
xor
mov
adc
mull
insb
icebp
xchg
inc
push
cwtl
aas
add
push
fisttpll
div
aas
int
inc
jb
daa
adcl
clc
mov
leave
test
sbb
repz
test
lods
mov
leave
cs
ret
stos
jns
js
repnz
cltd
mov
loope
add
xor
movsl
pop
lds
jae
inc
and
ss
insl
cmpl
inc
loope
dec
ja
push
insb
je
in
pmulhw
jb
push
lods
shrb
loopne
lea
add
and
lock
fcomps
fldcw
mov
popf
add
js
and
add
cltd
aaa
fmull
push
fistpll
test
movsl
and
mov
xor
loopne
lea
orb
add
sub
cmp
aam
loopne
lods
jmp
jae
cmpsb
jo
aas
repnz
ja
or
add
and
mov
mov
imul
das
pop
xor
cmpsb
std
pop
ret
or
into
mov
scas
movsl
sbb
stos
inc
insb
dec
pop
lods
sbb
add
xlat
xlat
ja
xchg
sbb
insl
fildl
in
js
lds
inc
int3
add
sub
ret
mov
cmp
je
in
dec
insl
call
xor
jo
cmc
mov
mov
in
push
imul
cwtl
je
popa
out
jne
lret
out
xchg
call
sbb
es
stc
enter
xchg
mov
sbb
lock
xchg
and
sbb
in
fcom
sti
or
jb
push
hlt
jns
add
ljmp
sub
jnp
insb
or
outsb
mov
sub
dec
inc
xchg
rolb
sub
ja
dec
scas
jno
or
loope
dec
xlat
cmp
adc
rcrb
mov
dec
cmp
lock
or
jmp
inc
shlb
cmpb
sub
test
inc
ret
repz
cli
rorb
add
fimuls
inc
ret
cmc
push
adc
movsb
test
les
fiaddl
mov
int
push
imul
xor
lock
lahf
filds
jp
loopne
adc
pop
stc
sub
sub
fdecstp
aas
xchg
and
ret
mov
sub
xor
push
stos
jmp
add
mov
and
mov
scas
mov
sub
aas
fwait
fwait
popf
pop
rcrb
outsb
push
jns
movsl
push
dec
mov
fwait
jmp
pop
jl
and
fldcw
push
fsubs
push
stos
pop
dec
pop
repz
in
mov
adc
push
gs
cmp
cmp
ds
push
in
push
inc
lea
sub
test
mov
mov
dec
lds
iret
jno
cmp
shlb
xchg
mov
push
fdiv
push
and
gs
out
jb
jo
pushf
rcrb
outsb
cmpsb
add
inc
mov
sub
les
sub
lods
jg
in
push
std
adc
pop
mov
stc
and
adcb
scas
adcl
ficompl
push
pop
repnz
int
lods
ret
mov
mov
in
mov
push
pusha
jnp
pop
movsb
repz
sub
jecxz
test
xchg
pop
xor
xchg
dec
iret
mov
out
xchg
xchg
orb
fldl
mov
mov
pop
ljmp
loop
rcll
aas
in
adc
sub
xor
cs
mov
ljmp
and
shrb
jmp
mov
xchg
js
das
stos
fwait
ss
addr16
stc
inc
imul
ljmp
push
mov
xor
cmp
sub
fwait
pop
jbe
insl
sarl
int
xor
mov
ljmp
pop
or
subb
insb
mov
icebp
in
cmpsb
in
sbbb
cmp
js
push
ja
inc
or
int3
into
cmp
imul
xor
mov
loop
cmp
int3
xor
sub
xchg
push
lods
mov
repz
push
pusha
leave
dec
xchg
xor
aam
push
sub
jbe
gs
lcall
jmp
dec
cmpsb
mov
xchg
push
sbb
shll
xchg
loop
mov
adc
sub
inc
or
and
mov
lods
sbb
outsb
test
ljmp
subb
repz
or
xor
inc
xor
mov
mov
or
lods
rcr
sub
mov
imul
std
data16
push
mov
sti
les
or
push
mov
in
or
adc
ret
sbb
xchg
aad
test
dec
out
jbe
scas
cmp
lea
mov
iret
xchg
in
cmp
cmp
dec
sub
aad
push
adc
repz
pop
es
rorl
xchg
iret
mov
int3
mov
pop
push
insb
faddl
insb
mov
mov
lds
mov
inc
push
push
leave
out
imul
cmp
jnp
aaa
cmpsb
mov
sbb
mov
cmp
test
jmp
faddl
popf
in
test
xor
lret
push
xchg
test
and
cld
in
mov
ret
test
or
insb
sub
mov
pop
dec
insl
dec
mul
mov
addr16
sti
mov
sbb
and
sar
arpl
sbb
lods
popa
pop
pushf
push
dec
xor
ss
dec
mov
xor
fmuls
lret
cs
mov
sub
imul
push
sarb
xchg
push
lret
shl
xchg
imul
xlat
addr16
or
mov
cmp
sbb
fistl
sub
push
or
adc
enter
xor
gs
jmp
mov
sti
lahf
jl
test
jns
out
mov
shlb
mov
aaa
mov
push
rorb
or
jl
mov
mov
and
gs
adc
fmuls
cmp
dec
test
mov
adc
push
xchg
and
int3
popa
mov
and
rcrb
aaa
gs
test
inc
jb
mov
push
push
ror
mov
aam
pop
adc
mov
cld
ljmp
les
in
pop
dec
rcll
or
inc
or
push
push
jae
in
add
imul
int
aad
into
pop
popa
ror
cmpsl
ja
mov
adc
fcmovnu
stos
push
iret
movsb
outsl
scas
xor
or
imul
push
fbld
arpl
je
aad
or
stos
adc
inc
and
lahf
fldt
inc
scas
sub
int3
iret
cmc
and
sbb
pop
clc
leave
inc
mulb
pop
jmp
push
loopne
fildl
or
aam
call
and
daa
xchg
push
xor
mov
mov
ror
xchg
bndstx
ljmp
sub
popa
addb
and
cmp
sub
mov
imul
mov
mov
mov
mov
xchg
lahf
je
loope
dec
clc
fsubrs
fucom
inc
xor
out
inc
leave
hlt
mov
inc
and
scas
sbb
mov
sub
fidivrs
push
mov
inc
test
mov
sub
push
scas
das
add
fisubrl
mov
repnz
sbb
in
enter
lods
repz
lods
add
mov
cmp
adc
xchg
mov
enter
push
push
inc
xor
mov
mov
pop
lods
pop
sub
test
popa
inc
xor
inc
adc
movsb
ljmp
mov
cmp
cmp
aaa
lahf
mov
jmp
aad
fisubl
cs
imul
int
clc
inc
ror
repnz
stos
add
cli
pop
ret
or
loope
xor
gs
inc
pop
cmp
aaa
mov
xlat
mov
dec
test
or
bnd
test
out
sbb
inc
mov
ficompl
test
scas
rcll
xor
adc
movsl
mov
push
push
loopne
fstpl
add
imull
cmc
int
rcrb
pop
insl
push
xchg
jle
scas
and
repnz
cli
add
lahf
fnstcw
push
mov
xchg
adc
mov
stc
test
sbb
inc
stc
mov
sti
or
mov
les
pop
arpl
gs
idivl
sbb
mov
outsl
jge
je
mov
imul
push
xor
sub
es
mov
jge
lods
outsl
jno
leave
xor
add
jle
and
paddusb
or
das
mov
cmp
test
lds
inc
pop
loope
dec
ja
push
and
mov
test
sbb
fnstsw
cmp
aam
stc
cmovs
stos
out
ljmp
ljmp
or
cmp
dec
sbb
xor
inc
push
mov
stos
hlt
shll
mov
shll
adc
jecxz
data16
cmpsb
rorl
cmpsl
adc
sub
pop
je
test
jl
cmp
pop
dec
ds
adc
lock
and
bound
sbb
and
xchg
mov
ss
fisubrs
mov
jb
scas
dec
cmp
mov
lret
ja
mov
jb
ja
jae
mov
test
xchg
pop
es
sbb
and
adc
imul
jle
dec
lret
les
lock
push
clc
or
add
add
push
push
popf
shll
jbe
sbb
xchg
repnz
add
mov
pushf
mov
mov
mov
add
aaa
mov
add
mov
mov
push
lods
sub
dec
push
jns
xor
mov
sbb
fwait
add
outsl
push
xchg
pop
add
icebp
mov
and
xchg
push
or
jp
mov
push
cld
xor
sub
arpl
call
jmp
cmpsb
pop
jecxz
repnz
or
pop
orb
into
into
outsl
in
xor
shrl
adc
cmp
loopne
push
jl
lods
or
jb
int
mov
mov
in
fs
aaa
mov
cld
push
add
sar
fstl
inc
mov
pop
sbb
lds
dec
adc
xchg
xor
adc
ds
stos
test
scas
push
and
mov
or
xchg
or
xor
cmp
jl
inc
jno
imul
stos
push
inc
jo
xchg
gs
bound
cmp
inc
inc
add
dec
lea
icebp
imul
xchg
dec
push
lods
push
in
jle
adc
adc
ret
lcall
sbb
fcoml
mov
inc
jbe
insb
xchg
mov
lret
aaa
mov
icebp
xchg
ljmp
dec
stos
push
xchg
cmpl
lea
in
or
and
mov
pop
sub
and
test
les
dec
sub
push
sti
jno
fstpl
into
shlb
adc
xchg
addr16
in
fs
xor
push
je
push
lock
invd
in
inc
mov
push
iret
ja
test
sbb
jge
mov
xchg
lret
negb
std
push
stos
gs
fisttpll
cmpl
shrb
int
call
std
mov
stos
loop
mov
rorl
mov
out
or
mov
xor
int
pop
jecxz
xchg
pusha
arpl
andb
mov
pop
rorl
inc
hlt
jmp
pop
jbe,pn
loop
and
push
and
mov
sbb
or
dec
test
mov
push
cmp
add
addr16
rcrb
mov
sub
divl
aas
sub
mov
hlt
std
daa
xchg
cld
add
push
jge
mov
inc
dec
push
xor
lea
sbb
aad
fsub
aad
mov
inc
int
aad
and
repnz
xchg
ljmp
mov
xor
push
jecxz
arpl
aas
jecxz
jle
jecxz
xor
dec
inc
daa
push
inc
cmp
cmp
mov
in
mov
sbb
mov
les
jae
fdivrp
jle
divl
cmp
popa
movsl
inc
insl
addr16
lods
adc
xchg
jb
frstor
or
jne
leave
sub
int
js
inc
jge
movsw
pushf
pop
xchg
lods
fidivrl
inc
pop
mov
pop
jo
ja
cmp
sub
jns
xchg
mov
lret
aad
or
xor
icebp
inc
enter
cmc
sub
adc
or
ljmp
push
xor
jge
stos
push
push
lcall
mov
sbb
cmp
sub
std
push
pop
hlt
jae
inc
mov
ja
call
out
mov
push
in
lahf
jp
cwtl
pop
data16
iret
mov
into
jge
int3
cmp
mov
ror
adc
leave
add
xor
jnp
dec
adc
sub
cmp
call
mov
xor
sub
insb
mov
cmp
scas
mov
ljmp
xchg
repz
inc
orl
or
push
mov
js
stos
and
aaa
sub
lods
pop
cltd
push
ret
jae
test
test
jb
xchg
adc
or
add
cmp
loopne
jns
push
or
je
int
jp
inc
enter
and
and
pushf
mov
push
mov
in
ss
mov
enter
and
imul
loop
sub
imul
fldcw
xor
scas
jno
dec
push
xor
shl
add
pop
inc
sti
jo
push
add
arpl
movsb
pop
shrb
cltd
push
das
les
movsl
bnd
in
imul
sbb
xor
ret
sahf
cmp
dec
sbb
int3
icebp
or
outsl
std
jle
int3
add
ja
jge
cmpsl
fdiv
jno
cmpb
icebp
orb
mov
lret
adc
filds
rcl
call
bound
roll
aad
cmp
test
stc
ljmp
adc
nop
cltd
sub
les
pop
or
sbb
es
xchg
jl
inc
mov
xor
dec
dec
pop
stos
or
sub
jbe
outsl
je
mov
sub
repnz
dec
subl
test
jae
inc
cmp
cltd
ljmp
sub
pop
fwait
sbb
inc
or
xchg
lods
test
push
dec
pushf
cli
nop
mov
mov
lock
decb
nop
push
or
mov
sbb
mov
movsb
ja
les
clc
pusha
dec
sbb
jae
mov
dec
mov
in
jb
popa
mov
jl
sahf
jno
std
inc
push
adc
loope
xchg
aas
pop
mov
xchg
or
int
or
xor
lahf
xor
mov
shl
icebp
fwait
daa
jge
dec
pop
inc
in
pop
cmp
imulb
stc
jmp
mov
test
mov
ds
or
movsl
sub
mov
adc
lds
jmp
push
lods
cltd
pushf
ds
mov
or
adc
sub
pop
sbb
ljmp
mov
push
ljmp
icebp
and
push
mov
sub
and
xlat
mov
push
jle
add
adc
adc
lret
or
aaa
sbb
lret
cld
iret
or
mov
push
leave
jg
lds
adc
pop
pop
mov
push
dec
cmp
cwtl
dec
jnp
negb
fdivrp
push
gs
mov
dec
push
fwait
repz
and
push
sbb
jbe
cmpl
mov
out
mov
mov
and
int
pop
mov
aad
push
shlb
mov
rcrl
test
outsb
cmpsb
add
jne
popf
mov
out
aad
std
repnz
inc
mov
orb
xor
in
jge
aam
lret
les
rorl
sub
dec
mov
loopne
fcomip
push
and
push
test
bnd
xchg
call
cmp
sub
mov
sub
push
pop
mov
push
lret
ja
test
push
push
fildl
shr
xor
push
sti
dec
sbb
movsl
lret
adc
loopne
popa
and
adc
gs
ds
cmpsb
xchg
push
insb
mov
push
lahf
and
jb
or
cmpsb
push
xor
sbb
jbe
xchg
mov
stc
dec
dec
push
or
gs
les
int
xchg
ret
xlat
jo
or
sbb
nop
mov
in
pop
dec
lea
in
jo
push
push
pop
mov
inc
mov
mov
lock
adc
test
ja
mov
loope
and
aas
arpl
push
xchg
imul
lods
mov
push
xcrypt-cfb
cmpsl
mov
hlt
mov
pop
outsl
jl
add
imul
cmp
je
jmp
in
add
sub
push
inc
clc
push
lea
fldz
push
dec
scas
pop
cmpsb
xlat
jnp
stos
bound
dec
or
mov
cld
xchg
xchg
jecxz
inc
dec
and
mov
jno
jbe
and
data16
mov
fs
std
cs
cltd
dec
enter
adc
mov
imulb
jmp
pop
daa
cmpsb
aaa
xchg
jle
jnp
sbb
ds
test
std
mov
or
sub
xchg
pop
jecxz
cltd
in
jns
push
inc
push
dec
rclb
sbb
inc
xchg
lcall
icebp
scas
lds
pop
and
mov
push
cmpsb
jecxz
lea
cmc
fisttpll
dec
sbb
jle
icebp
sbb
jg
sahf
pop
cmp
js
pop
xor
mov
xchg
mov
sub
adc
addl
mov
xchg
cmpsb
rcr
mov
ds
cmp
cmpsl
stc
sub
cmp
into
push
mov
ja
mov
cs
ja
lods
xchg
pop
test
scas
dec
sahf
jg
lret
jl
push
push
sub
inc
pop
loope
sub
fcomip
jle
add
xchg
cwtl
in
push
loop
lret
xorb
sahf
daa
xchg
bswap
mov
out
adcb
add
rolb
or
or
cli
dec
adc
imul
pop
mov
sbb
mov
push
xchg
adc
movsb
push
and
mov
bound
xlat
jbe
dec
icebp
cmpsb
or
dec
adcl
shl
testb
push
dec
js
mov
lea
sbb
dec
mov
in
lds
inc
or
xchg
mov
fstl
test
enter
mov
cmp
mov
pushf
cltd
push
mov
cmp
push
or
xchg
cmp
inc
into
mov
ljmp
shll
loop
js
sub
out
jne
stos
ss
add
xor
push
mov
fwait
sbb
jae
mov
sbb
mov
leave
inc
std
sbb
inc
lods
mov
xor
in
mov
test
jmp
iret
movsl
xor
imul
sarl
push
or
dec
xor
and
stos
enter
aam
fcmovnbe
jns
repnz
inc
out
subb
fadds
lods
xlat
lds
das
adc
mov
insl
pop
rolb
lret
cmp
xchg
or
ror
mov
lods
pop
testb
sbb
or
or
jmp
rorb
xchg
push
hlt
pop
mov
divb
mov
pop
mov
xor
add
dec
int
inc
pop
adc
mov
mov
arpl
inc
stos
xchg
mov
mov
cmp
mov
add
movsb
ss
lret
xor
test
jp
pop
push
pop
jne
push
shr
mov
rcrb
sub
mul
cmpsb
ja
int
add
jns
mov
data16
xchg
xchg
cmc
xor
sbbl
cmp
or
out
xchg
fcompl
ja
mov
pop
push
fildl
mov
xchg
lds
mov
pop
xorl
ljmp
mov
and
rolb
repnz
cmp
pop
sub
scas
fldcw
adc
xchg
mov
jg
or
xor
xor
adc
sbb
decl
into
and
out
xor
add
inc
hlt
outsl
movsb
push
stos
xor
and
xchg
mov
nop
pop
push
push
sub
rorb
xchg
mov
mov
adc
push
enter
sub
setns
rcrl
jb
fildll
inc
mov
mov
push
sub
ret
mov
dec
data16
adc
xor
test
repnz
int
out
subl
lea
mov
mov
mov
loopne
testb
xor
pushf
cmp
outsb
adc
cmp
scas
xlat
jb
xchg
ss
outsb
push
lret
inc
daa
pop
adcb
lock
mov
outsb
adc
daa
jae
dec
lea
push
dec
fs
or
fldenv
cwtl
jbe
lock
les
arpl
mov
add
lret
popa
popf
sbb
inc
fcomps
arpl
lret
test
adc
and
mov
fistpl
ret
ja
lret
sbb
cmp
and
sub
xchg
sbb
xlat
xchg
sbb
je
mov
xchg
into
lods
ret
rcrl
shrb
jae
cmp
cwtl
mov
test
cmp
mov
das
ja
in
roll
xchg
cmpsb
mov
mov
lret
mov
popa
mov
outsl
jno
add
push
ljmp
push
adc
and
movsb
mov
mov
mov
imul
xchg
add
add
cltd
or
lcall
xorb
adc
pop
movsb
mov
xor
lds
inc
sbb
cltd
inc
iret
arpl
dec
cmp
push
fnstenv
inc
push
and
outsl
pop
xor
mov
cmpsb
and
xor
add
inc
jo
cmp
gs
scas
push
push
sbb
out
loop
adc
ss
sbb
shl
out
pop
dec
in
pop
mov
mov
pop
aas
and
push
and
mov
push
subl
or
adc
jge
adc
sbb
ja
pop
adcb
mov
dec
sub
gs
jne
pop
cmp
cmpsb
and
clc
mov
cmp
xchg
arpl
cld
push
aas
loope
sub
mov
push
inc
xchg
loop
jb
fcom
xor
xor
in
cmp
call
dec
in
and
jg
dec
inc
and
mov
fwait
js
jl
push
push
xchg
notl
lods
ret
mov
test
loope
pop
push
adc
dec
push
or
test
push
fisubrl
push
mov
jle
lods
pop
cmp
cmp
daa
push
lcall
gs
test
mov
sbb
sbb
imul
or
pop
ljmp
aad
jae
pop
arpl
fsts
mov
push
sub
sti
xor
js
in
rclb
mov
pop
sahf
sub
jb
push
out
outsb
inc
out
ljmp
mov
adc
shll
and
xchg
repz
into
cmpsl
jo
push
insb
or
and
insl
in
das
shlb
inc
loopne
sbb
iret
jnp
mov
pop
insb
repnz
in
stc
aad
scas
cltd
sar
xor
xchg
lods
sbb
jp,pt
mov
add
fldt
cmpsl
out
mov
popf
fidivl
call
fs
and
or
stc
or
imul
jle
sbb
pop
fnstcw
icebp
movsl
ss
dec
test
cmp
adc
xor
jae
sbb
jle
pushf
xor
jo
movsl
insb
stos
mov
lret
pop
push
jno
or
scas
jbe
iret
cli
xorl
xor
lea
sub
xor
sbb
aam
inc
and
mov
xchg
lcall
push
pop
stc
ss
xorb
pusha
pop
dec
test
jnp
mov
jns
repz
lret
mov
in
sub
jecxz
sbb
jle
xchg
insl
and
jno
jecxz
add
inc
in
shrl
movsb
fs
xor
mov
loop
into
mov
ficoms
lret
mov
lds
xchg
inc
sbb
lcall
inc
jb
subl
push
xchg
popf
xchg
loop
gs
push
fidivrs
xor
pushf
std
out
mov
mul
adc
and
mov
mov
shrb
outsl
sub
pop
dec
xchg
sbb
int3
dec
lahf
pop
testb
jnp
lcall
jl
notl
fnstenv
arpl
loop
stc
iret
mov
xchg
mov
add
xchg
out
cld
push
iret
push
adc
xor
pop
inc
gs
dec
aas
pushf
shrl
pop
mov
fsubl
daa
movsl
loope
mov
sar
cmc
and
fstps
sub
pop
xchg
push
xchg
ficomps
outsl
sub
mov
xchg
bswap
lahf
adc
femms
gs
sbb
in
add
bsf
push
imul
mov
popf
orb
jo
inc
pop
or
push
xchg
jl
xchg
fisttps
push
fsqrt
jge
mov
mov
xchg
sti
and
push
leave
xchg
scas
sbb
test
out
pop
imul
xchg
pop
inc
decb
fisubrl
jne
ret
lods
movsb
orl
mov
pop
xor
pop
or
or
ja
mov
xor
xchg
push
repnz
in
mov
shlb
jecxz
in
push
and
adc
rolb
mov
and
pop
cmp
in
push
jecxz
icebp
add
or
mov
sbb
or
sub
or
push
and
jo
dec
cwtl
jae
xchg
cmpb
sub
int
fwait
dec
ljmp
out
outsb
jns
mov
cmp
push
cmpsb
xor
loope
dec
mov
jg
es
test
int3
push
xchg
lcall
mov
mov
sbb
mov
fcoms
sub
mov
movsl
shlb
inc
inc
adc
sbb
clc
andl
xchg
lock
cmc
pop
icebp
push
subl
into
or
cmpsl
sub
mov
cmc
decb
test
jae
testb
jo
dec
fld
push
and
xor
add
insb
rcr
lcall
cmp
push
mov
pop
lock
xchg
adc
faddl
adc
imul
pop
or
cs
pusha
jb
or
out
jecxz
xchg
cmp
bnd
push
mov
mov
div
sub
pop
xchg
push
pusha
mov
je
adc
fcoms
pop
mov
sbb
push
hlt
inc
int3
sbbb
in
rorl
mov
clc
push
das
repz
js
out
or
jnp
nop
xor
or
sbb
dec
inc
cmp
icebp
in
jp
adc
popf
das
mov
pop
cs
cli
imul
inc
sub
fcompl
inc
xchg
adc
sti
popa
pop
and
test
insl
mov
pop
xor
inc
popa
mov
repnz
sbb
es
ret
push
xor
xchg
lcall
push
xchg
insl
inc
ds
sub
repz
sbb
outsl
dec
and
hlt
mov
mov
rcrb
pop
mov
jno
sarb
bound
cltd
cld
in
adc
ja
insb
dec
add
andl
mov
cs
and
mov
push
cltd
sbb
shll
aam
dec
cmpsl
push
out
pop
xlat
das
dec
pop
lods
sbb
jb
jo
jbe
roll
in
bswap
ljmp
sub
mov
inc
arpl
xor
and
mov
insl
test
jle
les
es
dec
xchg
pushf
lcall
pop
leave
mov
jo
jg
and
out
stos
xor
stc
and
jo
shrb
pop
push
into
mov
stos
jbe
ret
cs
cmp
aad
adc
inc
ret
daa
test
imul
int
adc
adcb
or
add
shll
scas
ret
jo
stc
and
dec
mov
jbe
xor
dec
inc
jge
adc
adc
das
pop
lahf
xchg
icebp
mov
xor
lock
dec
lcall
ficomps
loop
rorl
mov
jne
mov
popa
insb
push
sub
push
mov
cmpsb
rcl
jo
xor
mov
and
dec
adc
popf
pop
into
inc
dec
ss
inc
mov
push
cld
sub
rcll
dec
and
mov
fdivs
jge
pop
add
cltd
lock
in
inc
call
popa
imulb
shrb
xor
test
fldt
test
jno
and
sahf
sbb
pop
es
lods
arpl
loopne
mov
jl
es
sbb
iret
sub
out
sarl
out
lods
enter
aas
outsb
fldt
pushl
roll
in
mov
cmovb
popf
pop
out
aaa
add
out
xchg
cmp
lods
mov
cmovl
jmp
shl
insb
xor
inc
mov
fsubp
fiadds
sub
and
inc
adc
pop
dec
push
andb
das
cmpsl
adcl
sbb
lcall
lret
inc
pop
testb
pusha
mov
cmp
mov
xchg
popa
push
sbb
test
fwait
icebp
inc
jle
adc
sbb
ss
stos
ror
mov
enter
test
jge
pop
ffreep
lahf
out
mov
repz
pop
pop
int3
mov
bnd
pop
dec
mov
lahf
xchg
dec
enter
insb
lret
lock
gs
popf
aas
pop
lods
push
push
or
pop
aas
xchg
leave
inc
cmp
sbb
rclb
test
xor
jns
fistps
int3
cmc
shll
cwtl
sbb
jb
pushf
and
sub
inc
inc
cmp
arpl
pop
mov
adc
sbb
lock
enter
bound
test
outsb
xor
adc
lds
in
mov
jae,pt
push
ja
mov
orl
or
inc
out
lcall
push
std
push
jmp
shrl
fwait
jnp
test
mov
in
stc
jle
mov
mov
shrl
push
imul
cmp
add
sahf
decl
mov
sbb
adc
enter
test
add
lret
xor
or
stc
sbb
and
push
and
inc
notl
xchg
push
push
mov
ja
cmp
stos
call
pop
sbb
pop
or
mov
jo
mov
and
add
push
dec
mov
jne
in
jo
sarl
into
mov
lea
repz
cmpsl
mov
add
das
xlat
ret
dec
pop
inc
pop
shrl
test
xchg
adc
mov
push
sbb
fmull
sub
jb
add
adc
aaa
mov
push
lea
push
adc
inc
scas
mov
cld
gs
xchg
push
dec
mov
xchg
and
push
sub
xchg
call
dec
and
jo
int3
xlat
aas
ret
lea
mov
jp
adc
inc
lods
in
inc
dec
push
lcall
lods
xchg
fidivrs
cmc
fidivrs
stos
mov
add
fwait
pushf
jp
ret
pop
into
in
icebp
xor
mov
cwtl
jmp
jp
int3
mov
test
pop
std
add
mov
sbb
adc
jmp
inc
popf
jo
mov
xor
pop
mov
sub
mov
or
call
jg
xor
mov
cld
out
xchg
dec
cmpsl
sbb
roll
cmpb
insb
mov
pop
xor
sub
sub
adc
xchg
iret
xorl
inc
in
incl
fdecstp
in
sbb
out
jne
push
sarb
lods
add
lods
mov
sbb
dec
xchg
mov
pop
jl
and
pusha
mov
jle
or
mov
sahf
pop
add
aad
stos
ret
cmc
sbb
push
daa
cwtl
adc
mov
mov
jecxz
mov
cmp
pusha
adc
fstl
inc
pop
and
das
jnp
out
pop
das
xchg
mov
rcr
add
fdiv
pop
data16
andb
xor
lods
xchg
mov
inc
xlat
sub
adc
cmp
mov
dec
dec
jo
loopne
pop
ljmp
insl
pop
call
and
daa
cld
icebp
fisttpll
xlat
sbb
lods
dec
aas
mov
aaa
stc
mov
push
les
mov
jmp
lods
mov
cmp
inc
or
fdivs
leave
jmp
cld
and
pop
push
mov
push
stc
fcoml
les
ljmp
dec
jns
lock
mov
out
pop
mov
mov
sbb
jo
xchg
dec
cmpsb
jmp
sub
sbb
push
pop
sahf
dec
mov
dec
jne
mov
mov
movsl
stos
fstpl
cmp
and
mov
xchg
daa
xchg
test
cmp
xor
cmp
imul
push
jge
and
adc
rolb
adc
divb
add
lock
fdivl
mov
aad
sbb
or
sub
xor
cmc
xor
out
sarl
sbb
push
pop
adc
ret
pop
jbe
xchg
mov
jg
int
sub
xor
xlat
push
in
outsb
ja
lods
jns
pop
xlat
mov
scas
add
std
out
lea
xchg
in
lret
push
sbb
add
roll
shl
mov
outsb
mov
sahf
scas
pop
ds
int3
mov
shlb
adc
arpl
pop
in
aaa
inc
and
cmp
xchg
xchg
pop
lods
fidivs
bound
sahf
leave
adc
outsb
pushf
in
xchg
and
pop
sti
jo
shl
mov
ret
and
ss
notb
pop
movsb
shrb
icebp
test
xor
cmc
lea
inc
xor
call
jns
sbbb
xor
pusha
out
add
mov
les
test
lds
test
xor
mov
nop
xor
lods
outsb
mov
add
inc
dec
fistps
imul
jbe
stc
loop
push
test
jne
dec
sub
jecxz
mov
enter
std
jnp
jno
sub
cmp
aaa
add
push
pop
loopne
loopne
aaa
pop
or
dec
jmp
mov
in
test
stos
push
xchg
rorb
mov
add
in
jp
stc
push
dec
movsl
mov
adc
push
ret
je
repz
pop
push
and
push
cmp
sahf
mov
aaa
int3
ds
ja
inc
cmp
push
xor
xchg
movsb
fsubrp
and
int
fistpll
cwtl
orb
mov
and
push
fcoms
ja
daa
mov
cmp
insb
loopne
stc
mov
fisttpll
cmpsl
jb
lret
in
int
xchg
orb
and
daa
outsl
add
jnp
testb
lret
sub
mov
mov
cmpb
dec
popa
scas
mov
jge
cmp
out
adcb
repz
lods
aas
sbb
dec
jo
adcl
jnp
xchg
lods
fmull
cmp
ret
das
push
sub
fwait
sub
or
out
lcall
pusha
adc
sbb
mov
icebp
movsl
fcoms
jmp
bound
scas
fldenv
bound
xor
sbb
loop
repnz
push
jmp
fcoml
push
rorl
mov
cli
dec
jo
mov
jae
jo
loope
mov
and
and
les
aam
pop
ret
ret
pop
std
mov
inc
fwait
mov
loop
sarl
xlat
push
ret
push
js
movsl
add
fld
ret
mov
negl
clc
and
jle
push
cmp
mov
jge
bound
shll
xor
sub
jno
repz
pop
push
adc
mov
scas
sub
xchg
out
das
imul
lret
dec
push
xlat
in
pushl
sti
add
jo
shl
jne
xor
and
xchg
clc
aad
sarl
push
out
xor
cmpsl
andl
push
out
sbb
pop
cmp
mov
idivl
mov
mov
dec
loop
fistl
lds
lret
jecxz
and
ljmp
int
ljmp
cld
out
icebp
mov
popa
bound
repnz
loope
mov
mov
test
pop
dec
mov
aas
stc
pop
das
in
arpl
pop
int
xchg
ja
js
pop
arpl
repnz
dec
xlat
add
jne
dec
inc
inc
jmp
outsl
inc
cmpsl
sub
or
cmp
movsb
retw
cmp
push
and
mov
les
push
push
in
mov
cs
xchg
rcr
dec
scas
inc
shll
test
out
mov
mov
unpckhps
insl
mov
mov
jb
cwtl
add
xor
adc
enter
imul
ljmp
mov
into
or
sub
add
notl
fcompl
mov
cli
push
dec
xor
pop
shlb
neg
fs
ret
test
xchg
loopne
in
lea
insb
popa
xor
repnz
xor
stos
mov
ror
dec
xchg
rorl
cmpsl
mov
rolb
mov
cmc
cmpxchg
jns
mov
inc
lods
sub
sbb
xchg
push
gs
arpl
pop
test
sub
mov
imul
std
in
cmp
push
cmp
mov
test
xor
je
lcall
mov
imul
mov
dec
ficompl
stos
gs
data16
sarb
hlt
push
or
iret
mov
in
fwait
sahf
ljmp
shl
cmp
push
mov
in
push
sbb
cmpb
js
mov
and
faddp
loope
add
and
data16
xchg
loop
mov
xor
push
lods
xor
cmc
mov
enter
xchg
lea
push
pusha
push
nop
adc
mov
mov
movsbl
ljmp
sar
insl
inc
jl
imul
jne
jo
imul
rcrl
sarb
stc
sbb
push
jl
xchg
orb
dec
test
pop
and
xchg
add
mov
mov
into
xlat
or
test
pop
inc
dec
dec
or
pop
push
jo
aam
mulb
sbb
inc
hlt
dec
jmp
ja
cli
imul
ret
jge
lret
sbb
inc
or
daa
xor
leave
into
sbb
cmp
popa
cmp
or
sub
lds
sahf
imul
pop
pop
movb
adc
jae
shrl
imul
roll
mov
movsl
mov
insb
dec
mov
mov
loop
pop
pop
roll
xor
in
pushf
mov
lahf
arpl
in
pop
jle
jg
jno
cltd
mov
fildll
or
or
call
dec
fsubrs
mov
pop
add
es
mov
mov
xorb
frstor
and
int3
ret
and
push
dec
sub
test
adc
mov
stos
out
outsl
inc
jbe
pop
xchg
aas
adc
test
mov
add
aaa
sbbl
fiadds
hlt
xchg
lret
jecxz
cli
movsb
mul
add
shrl
cmp
sub
lahf
adc
jp
or
push
dec
jns
out
push
cli
push
add
sbb
lods
jmp
and
mov
pop
jge
cltd
test
xor
sbbb
lret
adc
adcl
ds
andl
sbb
inc
fcompl
dec
pop
sbb
adc
push
outsb
sbb
dec
fidivs
daa
pusha
dec
out
loope
xchg
lods
cmp
fildll
mov
ss
jae
jne
flds
stos
call
mov
push
sti
clc
cld
mov
inc
andb
mov
and
nop
insb
loop
nop
pusha
push
ret
and
dec
add
bound
sbb
test
arpl
mov
mov
test
fadd
divl
stc
cwtl
xchg
mul
sub
and
mov
pop
mov
dec
xchg
stos
cmpsb
imul
pop
push
inc
imul
scas
lock
or
sti
cmp
aaa
xchg
mov
inc
pop
shll
int3
xchg
mov
addr16
out
repnz
sbb
sahf
dec
jne
mov
push
loopne
ret
push
out
rcrl
mov
sbb
xchg
pop
dec
xchg
outsl
cmp
test
jl
sub
into
outsb
push
push
mov
xchg
dec
adc
adc
xchg
sbb
sbb
xchg
cltd
inc
cmp
bound
cmpb
mov
in
repz
subb
inc
push
sar
imull
lret
mov
cli
stos
cltd
into
sti
movsb
and
into
mov
sbb
movsb
dec
fucomp
jne
lock
adc
mov
fld1
addl
xchg
adc
enter
push
inc
outsl
xchg
fscale
mov
mov
mov
test
push
sub
cwtl
call
xor
test
es
cs
ss
lea
push
lods
push
out
out
lock
fcompl
cmp
addb
nop
or
fdivs
cmp
or
mov
pop
sahf
and
or
pop
mov
jbe
jl
mov
mov
dec
and
test
mov
mov
dec
aaa
and
fimuls
pop
push
rolb
lock
cmpsl
lcall
dec
mov
ja
xor
inc
sarb
cmp
loope
mov
je
enter
or
pop
addr16
pop
push
imul
xor
mov
es
dec
mov
in
repz
shlb
adc
sbb
les
push
adc
inc
sbb
repnz
adc
dec
dec
imul
mov
dec
cli
dec
xchg
imul
push
mov
sub
fiaddl
cs
mov
sub
in
stos
lcall
sbbb
rol
fistl
loopne
shrb
adc
mov
sarl
gs
mov
xabort
insb
adcl
or
cmc
push
cmp
fwait
push
mov
addl
gs
mov
test
push
mov
add
daa
adc
cltd
dec
jge
cmp
jle
dec
icebp
cwtl
pop
in
imul
dec
xor
sbb
mov
sub
mov
or
pop
inc
mov
xchg
into
xchg
jmp
call
xor
push
lret
decl
imul
cmc
jo
jecxz
xchg
inc
adc
inc
cmpb
and
adc
inc
outsl
addr16
dec
imull
sbb
xchg
push
mov
jmp
jns
outsl
pop
dec
sbb
lret
sbbl
daa
dec
add
and
mov
je
cmp
pop
setae
pop
mov
mov
dec
cmpsb
cltd
or
mov
or
jnp
and
xorb
rorb
nop
imul
lea
imul
pushf
jo
scas
clc
xor
inc
add
xchg
cltd
clc
adc
loopne
das
arpl
or
out
int
repnz
adc
inc
out
xchg
fcoms
cmp
sti
inc
fistpll
mov
jl
mov
sbb
inc
add
das
enter
or
add
jns
add
call
cs
dec
adcl
stc
mov
mov
fwait
add
popa
sub
mov
inc
imul
push
xchg
fwait
lret
mov
icebp
or
push
mov
nop
push
in
into
mov
lahf
sub
sub
cmp
imul
or
dec
sbbb
in
or
and
pop
push
imul
lret
test
xchg
xchg
test
ja
dec
jae
pusha
cmp
stc
xor
jnp
out
or
icebp
fucomp
clc
in
or
ljmp
or
lds
mov
mov
movsb
fimull
les
xchg
dec
and
sti
pop
fisubs
rclb
imul
jg
push
sbb
ss
mov
xchg
ret
repnz
fcmovbe
sahf
push
mov
dec
shrb
mulb
ret
jl
add
xor
pop
imul
mov
cwtl
lret
jg
daa
test
sbb
repz
xchg
inc
xchg
jo
outsl
xor
jmp
fcmove
je
pop
aaa
imul
pop
inc
pop
mov
shlb
xchg
icebp
or
fisttps
xchg
xor
mov
adc
pop
mov
pop
in
sub
add
shll
imul
shlb
jmp
in
imul
outsb
sarl
inc
inc
mov
outsb
and
xchg
jns
push
rcll
sahf
loopne
and
data16
leave
xchg
mov
cwtl
pop
inc
stos
repz
test
push
shll
dec
jnp
push
mov
fiadds
xchg
or
pushl
rcl
clc
jne
push
lock
xor
adc
movsb
fwait
mov
dec
xchg
or
lcall
and
inc
cld
pushf
fcmovnu
clc
push
inc
aaa
pop
cwtl
sahf
test
pusha
inc
into
scas
xlat
cmpl
jg
gs
dec
mov
mov
jp
jle
sbb
out
sbb
mov
lods
sub
push
jns
call
lock
arpl
sti
jae
jae
js
xchg
mov
sub
and
xchg
push
mov
dec
mov
sbb
rdtsc
outsb
cmpsb
in
inc
push
dec
loopne
ljmp
outsl
adc
out
xor
lea
add
in
sbb
and
and
test
lea
aad
cmpsl
cmp
xor
repnz
rcrb
jbe
push
pusha
lds
sarb
and
xor
jno
jno
lock
gs
pop
adc
inc
int
es
lret
aam
test
add
jbe
mov
push
or
sub
lcall
fcoms
in
sarl
ficompl
fmul
inc
and
shrl
mov
stc
cmpsl
in
dec
lods
adc
gs
ja
fstpt
lret
das
push
lods
lahf
and
int
and
pop
mov
outsb
push
inc
or
xchg
cmp
shl
pop
nop
ds
xchg
adc
cmc
or
sti
psrlq
and
push
mov
addb
out
nop
mov
cmpsb
sub
fidivrl
cs
std
fstp
adc
add
dec
xchg
das
add
or
lods
js
dec
in
neg
cltd
cmc
pop
addb
mov
push
xchg
mov
pop
dec
out
negl
fisubrs
sahf
inc
pop
dec
push
clc
push
push
pop
das
outsl
stos
mov
mov
mov
mov
flds
loope
mov
jmp
xor
cmpsl
cmp
and
adc
je
enter
loopne
jb
jl
movsl
ja
ds
sarl
ss
rcr
jle
mull
js
leave
or
inc
dec
xchg
js
push
data16
inc
ret
adc
daa
push
xor
nop
cmpsb
push
cmp
and
aad
test
mov
fidivs
mov
inc
fstpt
inc
decl
loopne
nop
pop
icebp
xchg
cmp
nop
cmc
sti
mov
mov
lds
cmp
jbe
andb
sahf
std
sub
mov
and
popa
sahf
push
imul
out
push
cmp
dec
mov
pop
andl
test
nop
gs
jecxz
cld
cs
push
rorl
add
lea
mov
or
addr16
sbb
jno
aaa
dec
push
mov
test
pop
scas
push
cs
or
sbb
and
inc
aaa
cmp
xchg
mov
push
cmpsb
mov
fs
add
repz
cmc
or
sub
xor
stc
cli
push
es
mov
stos
lea
jg
cmp
pop
and
imul
les
scas
ret
push
ficompl
ret
ret
xor
in
repz
inc
push
push
xchg
sub
jle
les
xchg
mov
or
xchg
in
mov
jecxz
les
sbb
lahf
cmp
int3
xor
adc
jno
test
or
cmp
scas
mov
rcrl
leave
ficomps
cmp
icebp
xor
push
push
hlt
jecxz
scas
cmp
sub
in
fsubs
ljmp
in
cli
test
je
rcl
mov
movsl
mov
iret
mov
sti
lods
ss
cmp
sub
cmpsl
lock
lret
mov
int3
cmp
pop
mov
jmp
and
iret
aas
and
jl
and
repnz
int
inc
insb
les
arpl
jns
jp
outsb
xchg
mov
dec
or
lods
pop
sbb
in
repz
xchg
movsb
std
inc
scas
jge
into
mov
mov
out
stc
or
out
int3
pop
and
lret
or
sti
mov
mul
pusha
jnp
mov
js
mov
adc
xchg
push
sub
xor
dec
mov
ja
push
xchg
shll
jle
das
popf
and
pop
mov
xor
imul
icebp
xchg
fldcw
xor
push
scas
jo
fcomps
pop
pop
arpl
fdivrp
add
stos
clc
jmp
xchg
xchg
pop
in
push
in
dec
sbb
mov
jg
aas
notb
adc
jecxz
scas
fildl
mov
clc
add
test
std
jne
repz
outsl
dec
mov
lea
sbb
add
pop
pop
mov
cmpsb
ja
push
lea
xlat
mov
rcrl
cmp
sub
cld
pop
test
adc
sbb
movsl
cmp
les
or
mov
jg
mov
add
sbb
std
xor
cltd
sub
andb
insb
xor
into
inc
pop
repnz
pop
cld
push
not
movsl
jno
jne
xor
popa
call
mov
inc
pop
xchg
jg
test
pushf
jmp
loope
and
jno
sbb
dec
loop
adc
subl
in
push
xor
aad
gs
inc
or
jp
pop
sub
jmp
sarb
ljmp
int
mov
out
and
push
arpl
cmp
adc
pmuludq
les
jmp
and
cmp
sahf
sbb
enter
in
enter
jnp
imul
popa
push
xchg
mov
xchg
push
iret
and
jae
out
sub
rclb
add
xchg
push
or
test
xchg
mov
xlat
cvtps2pi
cmp
iret
inc
mov
clc
gs
enter
cmp
out
jge
adc
pop
int
aas
push
out
mov
cmpsb
push
out
mov
aaa
cmpps
push
push
push
jp
dec
fadds
adc
stc
js
mov
pusha
out
jno
out
cs
xchg
std
pop
mov
popa
adc
in
pop
pop
sub
fildll
or
mov
pusha
call
pop
outsb
lock
in
mov
sub
idivb
push
mov
pop
push
idivl
and
jg
pusha
add
mov
dec
pop
xsavec
cwtl
or
scas
loop
hlt
fmul
out
leave
mov
lods
mov
lret
xchg
jl
xchg
lret
mov
clc
xor
mov
adcb
push
and
xchg
mov
scas
xchg
addr16
loop
mov
inc
sahf
push
fs
xchg
pop
popl
fs
pop
xor
inc
ds
jbe
aaa
mov
xchg
xchg
push
sub
xor
arpl
jns
push
out
les
pusha
push
incl
dec
jno
je
sbb
enter
mov
xor
int3
shl
testl
out
std
mov
inc
add
mov
std
cmpsl
add
mov
outsb
jl
sub
les
pusha
movsl
and
sti
arpl
dec
jmp
cmp
inc
nop
imul
add
cmp
xorl
xor
les
inc
xchg
jne
ljmp
sbb
or
adc
push
aas
jmp
gs
pop
mov
cmpb
jecxz
lock
das
mov
call
negl
popa
cld
inc
push
adc
adc
repnz
jnp
or
or
fisubs
cmpsb
in
hlt
icebp
cmp
loopew
aad
jb
xor
mov
icebp
jl
cmp
fcompl
es
xor
sahf
adc
jg
fs
test
mov
pop
xchg
sbb
xor
cmp
inc
dec
mov
test
jle
and
push
and
in
mov
lea
adc
movsl
mov
lods
mov
or
mov
and
adc
add
jg
bound
and
imul
mov
mov
and
xor
mov
push
mov
xlat
and
inc
outsl
dec
push
fdivrl
adc
loope
jecxz
cmp
divl
popf
or
cmpsb
jmp
negl
test
lds
push
or
xor
or
mov
jo
in
push
pushf
add
gs
loop
adcb
and
sbb
lds
inc
pop
jecxz
pop
bnd
cmc
push
outsb
notl
pop
xor
fidivrs
and
push
cmp
lahf
xchg
sub
sbb
and
lock
push
pop
adc
mov
and
iret
mov
xor
lret
mov
jne
or
in
out
pop
inc
lods
push
std
iret
stos
push
in
push
stos
addb
lret
fcmovnbe
icebp
lds
push
shll
hlt
jl
cli
in
add
ja
adc
lret
lcall
repnz
test
and
or
mov
jbe
mov
scas
sti
cmp
hlt
pop
and
cmp
aam
jb
fcmovb
inc
outsl
mov
and
pushf
test
and
jno
cvtps2pi
pop
mov
decb
mov
dec
xchg
fdivl
fwait
mov
lahf
mov
sub
cwtl
pop
add
push
leave
push
inc
inc
cmp
popa
adc
cmc
xchg
fs
lods
jg
inc
ret
sbb
cs
mov
mov
dec
dec
pop
repnz
xchg
cwtl
push
mov
sub
xchg
mov
fxch
pop
clc
mov
mov
push
dec
mov
bnd
sub
sbb
and
cmp
jl
inc
sub
in
sbb
pop
jae,pn
mov
mov
outsl
shll
stos
push
fstpt
mov
inc
in
adc
mov
dec
sub
daa
xor
add
jo
icebp
sub
or
sub
pop
enter
call
inc
out
jnp
hlt
aaa
out
adc
xchg
inc
lahf
dec
cli
push
dec
xor
filds
lds
mov
mov
cmc
lcall
push
scas
std
or
cmpsb
sbb
in
mov
sbb
mov
push
and
shl
ja
iret
fwait
je
sbb
push
dec
xor
mov
arpl
test
clc
add
add
cmp
jmp
pop
inc
cs
push
sbb
mov
add
rcrl
xor
fcmovnu
cmpsb
js
mov
jmp
cld
and
lods
add
inc
in
out
xor
mov
push
sti
les
hlt
dec
sub
sub
shlb
cs
push
jbe
fmull
adc
mov
jg
inc
je
cmp
push
cli
sti
fwait
inc
cmp
adc
sub
push
ffreep
lcall
addb
in
mov
in
adc
loop
sbb
sbb
shrb
xchg
mov
pop
xchg
xor
fnsave
ficoml
pop
xchg
mov
cmp
push
jecxz
mov
lcall
mov
sahf
push
fidivrs
and
mov
aas
nop
mov
pop
mov
sub
aam
mov
inc
push
mov
roll
mov
jecxz
mov
sti
cld
popf
ss
mov
rclb
mov
in
xorl
push
or
out
je
shll
pop
cmpsl
imul
push
and
mov
repz
fcom
insl
mov
adc
ror
js
cwtl
push
mov
and
popf
notl
lahf
test
je
pop
dec
scas
std
pop
int3
lahf
mov
or
shlb
sbb
and
scas
les
add
ds
jg
shl
sub
push
loopne
insl
jmp
cmp
fstpt
lea
fsubrs
loop
pop
xchg
mov
mov
iret
push
adc
xor
int
ljmp
sub
pushf
dec
cs
loop
repz
shrb
int3
lods
push
pop
pusha
jo
xchg
hlt
inc
addb
lea
jae
popa
xchg
mov
dec
adc
cmp
mov
adc
sbb
or
aaa
fisttpl
les
fs
pop
adc
push
jns
push
pop
iret
cltd
fcmovb
ret
mov
rcrl
pop
mov
jne
and
push
jo
sbb
pop
popa
fld
mov
dec
fmull
sbb
aaa
mov
jge
jecxz
outsb
mov
cmpsb
in
xor
fcompl
xchg
adc
fdivrs
clc
out
icebp
test
mov
out
jge
xor
jne
xor
mov
or
adcb
std
or
jbe
sahf
inc
cli
dec
dec
mov
es
jge
mov
das
out
sbb
or
add
insl
mov
inc
loope
add
aaa
xchg
push
subb
push
xorb
xor
jle
call
popa
in
nop
pop
push
lods
or
mov
rol
loopne
lods
or
mov
sub
lahf
clc
fmuls
rol
or
xchg
cmp
xor
dec
movsl
frstor
mov
mov
push
cmp
mov
jmp
aam
sub
pop
movsl
xchg
cli
adc
inc
lcall
and
xor
enter
mov
xor
daa
js
add
pop
xlat
adc
repz
repz
jp
add
sub
cmpsl
or
clc
popa
cmp
rclb
popa
repz
shl
mov
sub
sbb
mov
jae
inc
dec
je
bnd
lods
pop
aam
jne
movsb
aam
into
lret
cld
pop
cmp
outsl
xchg
sbb
loope
rorb
shlb
or
bound
lock
stos
push
mov
gs
mov
std
repz
jl,pt
fcoms
subl
xchg
aad
cmpsb
sub
jge
test
leave
mov
test
push
mov
ret
in
xor
js
js
inc
xchg
rclb
inc
insb
ds
mov
push
cmp
pop
push
aam
cmp
mov
jle
cmp
sbb
mov
pop
lea
dec
pop
leave
repz
inc
addb
inc
and
and
fsubrl
cmpsl
out
xchg
data16
jb
mov
jmp
cs
ret
mov
inc
mov
xor
add
cmp
jnp
cmc
insl
dec
cltd
out
int
cmp
sti
lods
addl
cli
or
push
int3
pusha
int
pop
fdivr
lahf
mov
mov
cmc
jmp
cmc
push
jnp
xor
ljmp
out
fwait
insl
xchg
fcomps
es
imul
jp
int
sub
or
mov
inc
shrl
popf
mov
push
aad
jp
pop
and
push
pushf
ljmp
into
sub
shrl
sbbl
cmc
clc
js
adcl
dec
xor
xchg
push
cltd
push
ficoml
arpl
loopne
dec
mov
movsl
sub
filds
adc
or
das
sub
lea
mov
leave
pop
sub
push
int3
jb
leave
mov
mov
push
js
lret
jne
shll
test
out
lods
in
inc
aad
adc
dec
dec
mov
jge
test
test
xor
ljmp
cmpps
or
mov
xchg
sti
out
sub
mov
data16
or
pop
mov
cmp
jge
out
ror
stos
mov
cli
push
sbbb
ret
and
sar
and
sbb
popa
les
mov
sbb
iret
sbb
loopne
and
cmp
pop
clc
movsl
fidivrl
dec
andps
pushf
cmovbe
mov
and
lret
push
sbb
mov
roll
push
stos
jg
or
jle
xor
in
pop
les
xor
push
sbb
clc
and
inc
sbb
adc
push
mov
cmp
clc
cmp
add
jge
lcall
cmp
push
and
ffree
clc
cmp
gs
adc
and
push
push
xor
icebp
mov
movsb
adc
jbe
and
std
or
cmc
xor
or
imul
cmp
std
inc
xchg
jecxz
xchg
jb
enter
js
es
sahf
pop
sbb
shrl
lods
cmc
dec
rcll
repz
sbb
xchg
popf
gs
or
negb
xchg
lds
adc
data16
mov
jecxz
xchg
mov
dec
mov
mov
xchg
xor
insb
and
fisttpl
cmp
jp
xchg
or
mov
adc
jb
mov
loope
imul
add
in
pop
jne
pop
cmp
popf
xlat
icebp
or
sbb
imul
rol
punpckhwd
pop
in
or
test
ds
std
divb
orb
xchg
xor
bound
lahf
and
and
pop
push
insl
xchg
add
dec
mov
adc
out
add
dec
dec
add
fcmovb
mov
stos
sti
packsswb
or
adc
stos
adc
fwait
lahf
sub
mov
push
cmp
push
lds
inc
cmc
or
int
jns
cld
sbb
fsts
fisttpl
in
and
jbe
fidivrs
ljmp
xchg
push
loop
repz
sti
orl
jg
in
sub
loope
xlat
mov
add
mov
cmp
mov
rcrb
mov
pusha
push
popa
in
mov
iret
adc
xchg
sbb
out
aam
dec
inc
jg
shr
xlat
cld
vmovntpd
movsl
or
and
ret
mov
or
xchg
je
push
xchg
fcom
xchg
push
dec
ds
aad
sub
enter
icebp
fsubrs
inc
cmp
push
mov
hlt
adc
jmp
addr16
xor
mov
or
add
mov
xchg
jbe
inc
jg
lods
fsubr
push
pop
mov
mov
sarb
fsubrl
fbstp
mov
movsb
int3
les
sbbl
or
stos
pop
les
jns
sbb
inc
sub
rcr
bound
div
mov
jp
jno
in
bound
push
ret
inc
push
insl
sub
jne
push
and
enter
cmpsb
mov
add
and
mov
negb
push
xchg
movsl
sbb
xor
dec
insb
jbe
sbb
pushf
cld
lods
sbb
fadd
dec
inc
outsb
call
pop
or
xchg
imul
adc
add
ss
mov
loopne
sub
stos
mov
stc
aad
sarl
call
lcall
stos
push
sahf
inc
dec
or
or
mov
ja
pushf
push
stos
push
decb
sti
aad
jge
jbe
stc
push
bound
pop
xchg
jo
mov
aaa
add
cmp
ljmp
sbb
sbb
xchg
leave
sbb
dec
mov
jmp
in
fbld
sub
mov
out
sbb
je
lcall
inc
and
out
cs
clc
dec
sub
mov
mov
aaa
mov
aas
xchg
sub
jl
dec
data16
cmp
sub
sbb
cmp
imul
cld
clc
leave
pop
faddl
popf
sub
mov
frstor
mov
adc
out
adc
push
pop
jg
dec
dec
inc
push
ret
inc
push
scas
pop
xorl
xor
cmc
mov
inc
fmull
and
je
and
xor
out
lods
cmp
mov
jmp
lods
les
dec
mov
and
inc
cmpsl
fiadds
fwait
out
mov
scas
jl
mov
adc
cmc
adc
and
adc
fs
push
inc
sub
adc
pushf
sbb
stos
pop
sbb
fdiv
pop
mov
dec
mov
scas
xchg
sbb
pop
in
xchg
mov
sbb
xor
sbb
sbb
aad
int3
out
into
cmp
pop
inc
popf
test
mov
rcrl
loopne
inc
hlt
cmp
std
dec
sbb
mov
fstp
enter
jno
shll
xchg
lret
adc
sub
jecxz
arpl
xor
jge
add
popa
jbe
cli
movl
test
ficompl
mov
or
push
inc
xor
add
testl
xor
cmp
push
movsw
push
loop
fdiv
int3
das
cmp
and
mov
xor
jno
push
cmpsl
pop
jp
arpl
int3
decl
shr
mov
lret
gs
lock
push
mov
int3
dec
lret
fldcw
xchg
mul
xchg
lcall
pop
pop
mov
pop
in
pop
into
bswap
pop
scas
or
lret
stos
xchg
int
xor
jl
dec
rorb
stos
lods
sti
in
push
and
cli
cmp
pop
popa
nop
pop
sub
or
dec
jae
jb
ret
lods
cwtl
sbb
adc
xor
es
add
pop
xchg
mov
repnz
mov
sub
push
push
mov
cmp
cmp
and
xor
push
xchg
icebp
jmp
add
dec
lock
mov
fcomip
xor
pop
popf
aas
ss
pushf
inc
fadds
xlat
lds
cmp
aam
push
in
test
loopne
out
fisubl
je
xor
add
imul
outsl
add
dec
xor
mov
adc
cmp
fwait
imul
fcomp
leave
stc
leave
inc
inc
mov
in
push
adc
xchg
inc
pop
fwait
or
cmc
adc
out
inc
ffreep
imul
pusha
xor
lock
sub
jnp
cltd
loopne
shll
mov
stc
sahf
cmc
movsb
jb
das
stc
xorb
xchg
cs
pop
loopne
aam
pop
dec
in
cld
addr16
xchg
sub
pop
out
iret
mov
lahf
xchg
jbe
xchg
dec
jbe
movsb
adc
xor
and
and
loope
lahf
fldt
xchg
xor
dec
adc
sbb
and
mov
or
sub
movsb
or
sbb
enter
jg
inc
push
jo
cmpsb
fwait
jb
mov
xchg
ret
cltd
or
stos
pushf
pop
das
cmpl
into
jbe
cmp
cmpsl
mov
cmpl
movsl
cmp
jb
mov
adc
dec
cmp
pop
sti
loope
stos
fisubrs
pop
fcomps
pop
and
cwtl
inc
and
cltd
stos
and
fwait
push
sub
cli
addb
imul
push
dec
imul
jg
mov
mov
sbb
imul
pop
cwtl
pop
sahf
fmulp
jno
mov
lret
fwait
push
pop
push
push
out
mov
lret
repnz
pop
in
pop
js
out
jge
cmp
and
sub
ja
cmc
mov
mov
insl
fimuls
xchg
call
aaa
mov
notl
test
jb
and
mov
xor
das
or
hlt
jb
cs
test
mov
out
cmp
or
mov
jp
ljmp
mov
xor
sub
pop
pop
push
inc
jle
xchg
les
insl
mov
pushf
stos
xor
add
adc
or
rcl
mov
mov
mov
push
xchg
push
sbb
ret
inc
loope
imul
testb
dec
push
nop
add
jecxz
and
mov
testb
ror
or
aad
dec
xlat
push
xchg
mov
or
adc
sbb
out
inc
pop
dec
fiaddl
iret
rcrb
cmp
mov
inc
mov
cmpl
mov
pop
jp
cmp
testl
pop
lock
mov
jge
cwtl
inc
lods
imulb
loope
pop
sahf
cmp
sbb
sub
jae
ss
sti
data16
imul
arpl
pop
pop
mov
or
sbb
sub
pop
pop
dec
arpl
fldl
rorl
jge
pusha
add
mov
xorl
pop
and
push
dec
mov
inc
sbb
ds
in
xor
vpcomuq
dec
push
mov
or
repnz
fidivrl
xor
push
xchg
shl
sbb
pop
cmpb
imul
fdivr
outsl
scas
xlat
mov
jnp
cltd
scas
loopne,pt
sti
jg
sub
sub
xor
jbe
cmp
adc
pop
lret
sbb
and
icebp
sbb
adc
or
int3
mov
enter
subl
add
mov
mov
icebp
jmp
in
jg
cmpsl
sub
fsubr
fcoml
daa
xor
jb
push
mov
jno
pop
lret
aad
xorb
push
lods
in
out
dec
ja
pop
pushl
sub
pop
es
hlt
scas
scas
jp
xorb
mov
mov
mov
or
fisubl
mov
popf
scas
xor
loop
lods
idivb
sbb
lahf
stos
and
xor
jmp
mov
mov
repnz
loopne
out
daa
xor
sbb
xchg
cs
sahf
into
xchg
repnz
stc
cmpsl
ret
sbb
cmc
inc
push
or
push
arpl
lea
pop
inc
sub
sbb
test
sbb
or
pop
shr
fs
mov
jb
jae
jne
data16
cmpsl
fcompl
iret
xor
ss
cld
sahf
and
cli
or
repnz
jl
push
push
cwtl
xchg
add
dec
mov
iret
mov
mov
fs
fs
fdiv
mov
in
xchg
clc
int
test
mov
mov
loope
popf
pop
push
pop
fistpl
xchg
push
inc
and
es
push
test
shr
frstor
adc
call
dec
dec
roll
test
dec
aas
arpl
dec
ss
int3
cli
dec
xor
or
lahf
test
jns
adc
loop
add
dec
sbb
add
inc
lock
inc
dec
cltd
adc
scas
jecxz
cwtl
xlat
dec
mov
pop
mov
xor
insl
push
outsl
push
in
mov
cwtl
imul
ds
jmp
mov
jno
push
sub
insb
insl
ljmp
cmpsl
push
dec
out
push
sbb
jle
add
daa
lock
and
mov
lahf
mov
icebp
pop
adc
test
loop
scas
jbe
add
sub
cli
movsb
scas
lcall
inc
cmp
test
xchg
scas
inc
xchg
gs
xchg
mov
pop
sbb
andb
cmpsl
out
rcl
ljmp
enter
or
lret
push
fistpll
jg
push
lds
gs
fisttpll
pop
ds
adc
fs
mov
sbb
add
fwait
in
loope
xchg
cltd
shlb
xor
loope
mov
sbb
rcrb
fsubp
cmpsb
add
filds
stos
ljmp
out
xchg
xchg
call
inc
pusha
stos
and
lret
idiv
clc
jmp
fidivl
inc
mov
iret
sub
movsl
lret
fldpi
sbb
aaa
push
xor
dec
int3
mov
add
iret
add
and
fcompl
mov
jecxz
add
push
sub
jae
lahf
pushf
mov
or
iret
pop
sbb
inc
into
shr
in
push
aam
rclb
clc
scas
lahf
das
sahf
ficomps
out
imul
mov
test
jle
int
mov
add
pop
cmp
jle
pop
rorb
mov
cli
sub
jge
mov
loopne
mov
xor
cmp
jbe
fisttpll
sub
outsb
cld
add
mov
inc
jns
test
int
imul
dec
gs
sti
out
lds
outsl
push
mov
mov
pop
pop
jg
ret
adc
inc
nop
movsb
sarl
xor
push
jb
pop
cs
lahf
sbb
ja
add
addr16
push
fsubs
pop
pop
stos
incl
mov
mov
inc
lret
in
inc
adc
sbb
xor
ljmp
pop
cli
call
and
or
lahf
cmp
test
inc
inc
insb
push
int3
push
hlt
ret
in
repnz
xchg
arpl
mov
ret
subb
xchg
xchg
pop
dec
and
cld
cmc
xor
push
mov
mov
push
in
mov
bound
ljmp
in
dec
jmp
arpl
test
mull
sub
adc
pop
mov
imul
adc
push
mov
ror
ret
cmp
jno
mov
mov
gs
sub
pop
dec
pop
imul
pop
xor
jge
mov
cld
sbb
inc
aas
cld
rorl
jp
pusha
loopne
sbb
or
out
adc
or
stos
fs
cmp
mov
cmovl
ret
inc
mov
dec
pop
aaa
xor
repz
adc
sub
fidivrs
mov
incl
push
test
movsl
and
pop
fsubl
out
outsl
sti
fisttps
pop
loop
outsl
mov
das
mov
push
movsb
mov
sub
xchg
push
ds
xchg
push
mov
mov
in
sub
jno
lds
fsub
bswap
shll
mov
sbb
jb
mov
out
imul
rol
fisubl
push
cmpb
movsb
inc
pop
cmpsb
ja
cmp
sbb
pop
xor
mov
lcall
mov
ret
xlat
jae
faddl
das
jge
jmp
or
dec
push
rorb
out
mov
inc
cmp
jp
je
pop
cltd
repz
jmp
gs
inc
mov
add
decb
mov
sub
xchg
inc
mov
inc
arpl
std
inc
pop
or
pop
jecxz
shrl
stc
sub
cmp
sti
std
sub
mov
or
in
sbb
xor
mov
push
mov
sarl
sarb
fildl
jl
mov
pushf
cmpb
es
dec
movsb
pop
xor
int
mov
pop
mov
lods
pop
inc
adc
pop
cmp
ljmp
add
movsl
out
push
adc
xor
sub
insl
outsl
sub
jbe
outsb
fsts
shl
lret
lods
sbb
test
callw
pushf
aad
push
adc
out
mov
or
mov
sbb
jle
sub
and
or
les
inc
repz
scas
arpl
mov
sbb
jb
stc
sbb
pusha
in
stos
mov
lcall
sub
fwait
xlat
stc
test
dec
add
mov
test
rol
mov
cmp
and
pop
cmp
dec
xor
and
mov
popa
ffreep
inc
mov
xchg
inc
cltd
cli
cli
sti
dec
dec
xchg
les
cmp
and
sbb
shll
pushw
das
lods
aam
in
rcrb
or
xchg
in
push
fisubs
popa
dec
inc
pop
rorb
push
pop
fucomi
cld
movsb
movsb
iret
mov
or
scas
es
rorb
push
or
cli
add
orb
fcmovbe
cmp
inc
xchg
add
pop
es
in
and
mov
xchg
rorl
cmpsl
loope
xor
hlt
jle
adc
mov
xor
loope
cmpsb
hlt
sahf
ljmp
adc
sub
icebp
stos
pop
mov
int
or
outsl
or
testb
xor
and
pop
lret
mov
pop
pop
dec
ror
ret
pop
jl
pop
mov
repnz
jp
sub
pop
subb
sub
or
push
adc
roll
call
ja
js
sbb
pop
mov
inc
mov
mov
ret
pop
fldt
xchg
lret
aaa
jne
and
pop
outsb
inc
pop
out
ret
or
vminpd
cmpsl
adc
sbb
bnd
mov
inc
xor
sub
inc
rclb
xchg
cmc
adc
jecxz
lcall
fmuls
jl
pop
sbb
adc
das
jne
dec
lcall
or
loop
popa
sub
add
xchg
sbbl
aaa
bound
stos
jbe
pop
aas
stos
sub
pop
addb
fdivl
scas
fdivs
ffreep
xlat
std
cmp
or
and
out
push
mov
add
daa
cmp
sar
cmpsl
out
jl
cmpsb
aam
cmp
ret
sbb
jecxz
stos
sbb
xor
repnz
cmp
mov
int3
imul
and
lods
sbb
lds
repnz
mov
mov
mov
jmp
mov
imul
push
daa
in
lods
in
xchg
loope
add
enter
fprem1
rclb
jnp
mov
sub
js
jb
mov
aam
push
cwtl
jns
aas
jle
stos
xchg
ss
lods
mov
sbb
push
sub
or
pop
xor
xor
imul
sahf
ja
rcrb
repnz
push
sub
jge
jb
push
push
push
pop
std
cli
xchg
xor
pop
push
pop
in
int
jb
iret
mov
enter
repnz
mov
jae
scas
es
push
hlt
nop
mov
rcrb
pushf
jg
inc
stos
ds
outsb
jl
sbb
jmp
rorb
push
sub
jge
jmp
scas
rolb
daa
pushf
xlat
inc
shrl
test
mov
cmpsl
dec
int
out
loop
fwait
mov
mov
ret
push
and
lock
mov
xchg
jns
mov
bnd
mov
sub
test
add
neg
ret
decb
push
imulb
aas
lea
push
xchg
jo
cmc
cmpsl
dec
sbb
cmp
dec
bound
sahf
push
xor
mov
stos
lock
notb
mov
out
lret
sub
das
adc
pop
mov
mov
mov
fstpt
cmp
lock
cli
test
push
lret
push
jl
ret
pop
shll
gs
rcll
outsb
push
gs
out
fcomi
imul
loope
xchg
mov
cmp
lock
aad
test
fst
sbb
mov
jb
in
fcom
jbe
iret
jb
inc
aam
mov
or
xor
scas
les
push
push
addl
lds
mov
inc
mov
std
jo
xor
mov
jb
cltd
popf
adc
mov
sub
ret
out
push
xchg
popf
mov
sbb
push
pop
xor
loop
add
mov
ret
divb
sbb
mov
cwtl
adc
xor
inc
or
lds
push
push
or
pop
cld
push
sahf
cmp
ret
cld
jl
popf
ja
repnz
lods
push
ret
mov
push
sbb
add
test
sub
or
lret
mov
or
mov
mov
xlat
mov
lds
pop
mov
pop
iret
fdivr
mov
dec
push
outsb
lds
pop
inc
dec
ljmp
sti
adc
mov
vandnps
xor
rcl
sbb
imul
cs
aad
and
aaa
xchg
push
push
mov
testb
jns
lret
jmp
mov
iret
pop
out
call
scas
and
fst
inc
paddusw
jg
nop
popf
mov
aas
mov
loope
lods
dec
and
mov
test
rcrl
inc
into
int3
cltd
shlb
push
roll
lret
out
les
push
adc
dec
insb
outsl
pop
jl
das
sub
lcall
test
dec
cld
sbb
fwait
sub
pop
cmpsl
out
popf
jp
in
ds
adc
outsb
icebp
or
jmp
pop
pushf
dec
jge
sbb
das
inc
clc
scas
out
adc
popf
push
and
movsl
leave
in
mov
sub
sbb
jg
insb
push
sub
push
ljmp
popf
adc
mov
mov
fbstp
mov
pop
test
sub
jge
imul
mov
int3
mov
push
cmp
xchg
xor
fnsave
mov
orb
sbb
sbb
pop
or
push
ret
outsl
inc
arpl
xchg
inc
inc
cli
addr16
data16
sub
pop
nop
adc
addl
icebp
jmp
pop
sub
mov
mov
jp
and
jge
fnstsw
ret
daa
cmp
sbb
jmp
gs
push
cli
push
mov
dec
push
fstps
js
ljmp
test
ss
inc
pop
adc
xchg
jo
test
aaa
jle
or
sub
shlb
sbb
adc
pop
inc
int3
jge
and
mov
sub
insb
cmpsl
or
aam
add
mov
mov
xchg
xchg
add
mov
cmp
mov
and
cmp
data16
jnp
jae
sbb
std
incb
cmpsb
out
inc
jno
jge
sbb
repz
adc
movsb
shl
xor
sti
sub
ljmp
push
add
nop
inc
nop
hlt
jle
cwtl
pop
insb
int3
cmpsb
arpl
mov
sub
divb
xbegin
mov
inc
mov
dec
in
or
fldenv
xchg
jg
push
outsb
jae,pn
call
std
ss
ret
pop
mov
sbbb
aas
jg
jbe
dec
lahf
neg
cltd
dec
cs
push
and
xlat
pop
je
and
pushf
inc
cmp
sbb
out
mov
mov
cltd
in
xchg
cmp
and
incb
pmulhw
sub
sti
xor
dec
or
add
cmp
xor
in
ljmp
rcr
jmp
jmp
sub
loop
sub
xchg
inc
push
push
lock
lcall
mov
xchg
sbb
jg
push
inc
sbb
addr16
jg
inc
and
andb
pop
mov
mov
inc
dec
insb
jns
sbb
sahf
stos
dec
cmp
xchg
rcll
andb
mov
into
out
add
sbb
enter
mov
mov
fs
push
jbe
les
inc
fsubr
add
push
dec
push
in
fildl
leave
in
sub
xchg
dec
iret
fucomp
xchg
mov
out
xor
push
testb
fists
arpl
je
pop
rolb
out
or
xchg
repnz
cmp
mov
int3
cmp
rcrl
cli
cmpsl
jmp
dec
lods
push
dec
pop
adc
fiaddl
inc
lret
push
mov
cmpsb
adc
mov
imul
scas
xor
scas
add
inc
sbb
mov
mov
jns
cld
add
fidivrl
imul
outsb
jmp
test
xor
xor
movsl
xor
or
loopne
out
push
pop
inc
cltd
mov
push
cs
popf
fistl
adc
les
out
mov
adc
inc
adc
xchg
xor
mov
xor
shr
out
nopl
notl
lods
int3
xor
mov
add
mov
cld
sub
ja
push
and
lret
pop
ss
mov
mov
les
call
jp
aad
push
jo
flds
xor
ja
mov
pop
xor
cmp
rcrl
hlt
pop
jb
or
jmp
inc
mov
sbb
and
lret
popf
andl
or
fs
add
inc
mov
pop
cmp
add
inc
mov
aad
aas
or
and
mov
pop
xor
adcl
ljmp
pushf
call
pop
pushf
int
pop
out
xor
stc
lock
add
int
xchg
xor
adc
add
jae
xchg
mov
adc
lret
lea
push
movsb
xor
mov
inc
outsb
aas
jbe
mov
rep
out
mov
and
enter
pop
mov
out
js
push
pop
call
and
clc
xchg
mov
cmp
ljmp
loope
or
out
mov
xor
jno
cmp
jg
and
jp
adcl
sub
stc
xor
loopne
or
call
iret
cli
das
mov
shll
testl
sahf
enter
imul
mov
arpl
out
xor
jnp
mov
es
jl
loopne
and
inc
cld
jo
test
sbb
lret
out
add
lods
dec
and
cli
bound
mov
or
call
in
pop
in
adc
or
inc
add
sbb
dec
xor
arpl
stos
je
movsl
insb
pop
bswap
call
cmc
leave
pop
pop
pop
adc
add
dec
mov
repz
lea
sub
xor
push
shrl
movsl
movsb
add
mov
shl
pop
inc
add
sbb
sbb
imul
and
mov
out
repz
mov
scas
add
push
shl
loopne
into
lahf
movl
jecxz
or
xchg
test
inc
cmc
or
shll
loop
inc
lea
push
faddp
test
movsl
xor
movsl
mov
clc
or
inc
mov
dec
mov
pop
dec
call
sub
cwtl
jne
mov
imul
icebp
gs
xor
int3
xchg
fwait
push
xor
fnstcw
xor
xchg
call
loope
pop
int
icebp
lret
push
dec
cmp
cmp
jno
cmpsl
cmp
test
adc
jnp
and
fidivs
xchg
enter
sbb
inc
ja
or
dec
out
sub
jp
ficoml
push
fisttps
testl
cs
popf
mov
mov
das
jo
cli
fbld
sti
jp
jae
push
pushl
adc
inc
repnz
inc
xor
mov
gs
ljmp
fsubl
xor
xchg
fisubl
push
cmp
xchg
imul
lret
insb
out
pop
shl
mov
mov
ret
arpl
cli
push
sbb
pop
and
jae
fpatan
loopne
movsb
mov
mov
test
imul
sub
push
cld
ja
test
mov
push
jne
dec
mov
pushf
xchg
jp
testb
adc
cli
sub
mov
or
mov
shrb
mov
or
sarb
sti
mov
cmp
or
shl
cld
inc
lea
fwait
push
fidivrs
outsb
test
dec
xchg
xchg
lea
add
push
daa
dec
or
inc
fdiv
sub
aas
xlat
movsl
xchg
and
adc
xchg
clc
xchg
scas
jle
and
xchg
or
pop
hlt
out
and
arpl
xlat
shrb
jl
ljmp
add
outsb
cs
push
sub
push
xchg
out
in
or
ds
imulb
dec
rcl
jnp
fs
loope
test
mov
in
xchg
add
popa
ja
dec
push
lods
lret
invlpg
dec
cmp
xchg
and
mov
mov
lea
hlt
sti
cmp
iret
jbe
rep
xor
daa
sarl
sbb
add
jge
lret
xor
ror
setge
cmc
jmp
mov
xchg
xchg
cvtps2pi
mov
les
jns
fistpl
add
dec
sahf
lret
push
and
testl
add
mov
adc
mov
scas
mov
fcompl
add
iret
mov
inc
rcrl
dec
push
and
aad
repnz
xlat
sub
jmp
faddl
movsl
cmp
inc
hlt
ficompl
add
stos
push
mov
pop
pop
in
inc
inc
mov
mov
mov
cmp
outsl
jne
enter
xor
xchg
icebp
cli
xchg
inc
out
rcll
dec
in
add
dec
add
out
push
xlat
mov
push
and
test
mov
inc
inc
jecxz
in
sbb
aas
mov
adc
enter
mov
dec
push
cld
aam
mov
sbb
add
sbb
cltd
leave
sbb
inc
jmp
daa
sub
push
in
push
pushf
cmp
cmpsb
insb
mov
loope
and
sbb
out
mov
daa
ficompl
xorl
jmp
call
jp
xor
cmp
out
push
insb
bound
mov
mov
addr16
xchg
jle
pop
leave
js
decl
scas
insl
inc
lcall
test
sbb
scas
es
shr
and
shlb
mov
pop
nop
loope
ss
inc
dec
loope
call
rol
outsl
xlat
fcmove
icebp
loopne
aad
pop
mov
sti
dec
inc
xlat
repnz
mov
pop
fs
es
in
insb
adc
cmp
and
dec
jmp
cltd
lds
scas
cs
fildl
xchg
call
ds
ret
adc
out
data16
inc
mov
jns
mov
enter
loop
ret
lods
sbb
dec
popf
mov
std
dec
fstpl
sub
sub
mov
pop
push
hlt
mov
mov
or
mov
fucomip
adc
out
jnp
jne
imul
cmc
mov
push
push
pop
stos
js
shrb
dec
and
push
and
xchg
pop
lds
jge
je
gs
mov
push
cli
cwtl
scas
cmp
jge
cmc
push
sti
push
jg
push
adc
leave
inc
pusha
xchg
mov
mov
pop
mov
or
or
movsl
xorb
rol
out
cmp
cwtl
pop
mov
sub
shlb
int3
fnsave
fisttps
lret
sub
xchg
roll
ljmp
les
inc
fbstp
in
iret
mov
in
mov
mov
jp
shll
or
mov
stc
inc
out
pop
sbb
mov
lret
adc
sub
pop
popl
adc
xor
lds
mov
jge
push
xchg
cltd
cmp
int
orl
fisttpl
fcmovb
sbb
xor
mov
push
addr16
imul
mov
push
popa
pop
ficompl
scas
cmp
scas
push
push
inc
test
shr
xor
push
xor
cmc
xor
outsl
pop
jmp
and
jb
mov
mov
inc
cltd
or
dec
add
xchg
stc
dec
sbb
pusha
dec
movsl
xor
sarb
fsts
mov
out
mov
daa
pop
adc
add
dec
fsubrs
gs
add
dec
mov
jp
pop
lahf
jnp
pop
popf
sti
cmc
jno
xor
fwait
std
popa
inc
xchg
arpl
jge
rorl
add
sub
cmp
cmpsl
pop
je
jle
or
cltd
test
test
orl
jbe
sub
lds
fcmovnu
push
pop
mov
mov
movsb
aas
pop
adc
or
arpl
add
sub
push
xchg
test
stc
jmp
in
aam
xchg
sbb
mov
in
in
and
sbb
push
jns
dec
js
out
push
in
into
mov
sti
mov
mov
xor
adc
mov
and
shll
out
adc
push
xor
add
sub
es
adc
inc
out
jno
lahf
clc
jg
lcall
and
pop
addr16
dec
and
pop
sub
loope
les
push
dec
fldcw
in
mov
je
mov
sbb
aam
push
pop
int3
pop
xor
cmp
push
jge
mov
shlb
pop
and
pop
mov
mov
stos
sub
mov
sub
mov
std
test
daa
jb
inc
insl
leave
sahf
mov
mov
enter
or
xchg
loopne
fimuls
mov
mov
jbe
push
jge
sti
mov
mov
out
mov
push
sub
and
std
sub
shll
lret
test
fisttpll
ja
fcompl
sbb
jno
andl
push
roll
cli
push
test
pop
sub
cmp
dec
dec
jbe
leave
mov
push
aaa
scas
add
push
adc
pop
cld
loope
ljmp
fadds
sahf
pop
addr16
inc
loope
jecxz
sbb
rcrb
cli
addr16
mov
scas
push
sbb
jle
jbe
and
les
ds
push
sub
out
and
outsl
sub
dec
arpl
lret
loopne
pop
mov
leave
int3
in
adc
cmp
cli
dec
ja
test
xor
inc
lret
adc
das
push
fisubrl
xchg
pop
push
adc
push
or
pop
push
cmpsl
inc
repnz
sar
sbb
cld
imul
and
and
adc
orl
xchg
in
movsb
inc
mov
dec
jge
aaa
and
jb
mov
cmpsb
mov
sub
shr
test
pop
sub
jp
pop
or
cmp
lret
popa
pop
out
sub
loopne
adc
sbb
sub
dec
cmp
cli
or
mov
pop
pop
mov
pop
mov
lds
adcb
ud0
mov
or
ss
xchg
in
sub
rol
mov
sbb
scas
xchg
xchg
sub
imul
in
mov
aad
mov
mov
fwait
dec
and
xor
push
add
mov
jle
bound
xor
hlt
aad
scas
pop
clc
cmpsl
adc
loope
sbb
adc
sub
in
stc
mov
insl
mov
push
dec
cmp
sbbl
xorb
lahf
xor
std
adc
in
pop
mov
aas
or
punpckhwd
dec
mulb
jo
decl
movb
repnz
out
pop
dec
cmc
inc
adc
dec
sub
jmp
icebp
dec
adc
nop
jns
repnz
mov
cmp
outsl
push
jb
jne
data16
les
and
sub
cmp
scas
xchg
cmp
pop
ret
inc
arpl
mov
daa
xchg
adc
adc
push
mov
lret
sti
popf
enter
lock
shll
inc
iret
inc
pop
in
sbb
push
cmp
and
enter
fdivrl
sbb
and
jp
repnz
ljmp
jne
inc
sahf
test
scas
insb
loope
mov
test
and
fistpll
jle
mov
jge
push
or
xchg
push
test
mov
adc
jge
adc
rclb
xchg
in
push
loopne
inc
add
insb
inc
loop
cmp
leave
mov
xor
jmp
xchg
sbb
scas
data16
je
insb
in
ss
cltd
fdiv
inc
jg
nop
mov
sti
ljmp
pop
repz
inc
cli
popf
mul
repz
sbb
data16
sbb
push
scas
in
jno
jp
pop
mov
imul
ljmp
dec
add
pushf
into
hlt
push
insl
mov
xchg
call
out
mov
dec
aad
dec
mov
sbb
jp
cmc
inc
sub
iret
adc
lret
cmp
jmp
jae
test
add
insb
sub
lock
xchg
pop
adc
dec
jecxz
fcoms
mov
into
out
cmp
push
adc
push
jnp
repz
sub
pop
cmp
insb
fsubrs
pop
rorl
in
xor
or
jo
mov
dec
mov
cmp
cmp
sbb
sbb
fdivrs
or
or
add
adcl
js
push
cmp
cs
bound
out
add
fsub
adc
cmp
ds
lods
ljmp
mov
pushf
pop
sbb
jo
ret
icebp
aad
sub
dec
add
sbb
push
pop
scas
out
loope
fisttpll
lret
adc
add
adc
dec
mov
or
movsb
lods
and
fnstenv
sbb
aam
mov
add
mov
mov
repnz
xchg
push
sub
mov
andb
aam
mov
in
jbe
push
push
in
or
dec
stos
lret
mov
popf
imul
mov
stos
inc
jmp
or
mov
or
push
insl
inc
lret
test
dec
fadd
push
sub
jge
cmp
inc
sub
mov
popf
mov
cmp
out
sbb
mov
inc
sbb
adc
xor
outsl
sub
inc
mov
fldl
sub
jb
iret
insb
popf
outsl
mov
mov
outsl
cmp
outsl
das
scas
out
pushf
stos
jmp
ret
mov
outsl
cli
or
cmc
movsl
cmpsb
cmp
push
push
sbb
fcom
or
pop
test
add
and
jmp
addb
xor
cmpsl
adc
jnp
adc
daa
xchg
sub
mov
xchg
xchg
jl
and
addr16
int
imul
adc
sbb
in
xor
jns
enter
je
outsb
or
cmpsl
push
mov
jmp
jo
in
or
pop
add
push
enter
mov
xchg
add
scas
inc
push
scas
cmp
stos
mov
aas
jl
mov
mov
popl
scas
or
cmpsl
xor
mov
cmpsb
and
lds
testl
cmp
lods
cltd
fnstsw
mov
jno
jno
ror
cld
lahf
cmpsb
out
cmp
lret
test
add
add
divb
push
jo
lret
pop
and
pop
dec
in
je
aam
insb
mov
sub
int3
out
push
sbb
mov
or
and
jo
push
test
insl
dec
jecxz
jp
xor
adc
mov
add
cmpsl
xchg
cmp
fsub
or
sub
icebp
fs
fmulp
stc
pop
jge
stos
ds
arpl
inc
mov
inc
sbbl
add
xor
jne
jae
aas
inc
test
cmp
fisubrl
mov
jnp
fs
add
vxorpd
loopne
call
and
mov
mov
mov
in
or
cwtl
inc
inc
shr
lret
outsb
dec
es
cmc
je
mov
sbb
sub
mov
dec
insl
enter
push
push
int3
jbe
xor
mov
test
jge
daa
stos
cmp
push
dec
mov
rcl
sub
fcoms
pop
ret
jns
fistpl
pop
mov
xchg
jecxz
pop
and
cmp
mov
or
ficompl
arpl
test
pusha
adcb
mov
ljmp
xchg
es
lds
add
repnz
mov
daa
inc
loopne
jno
rcl
pop
lods
stos
lods
mov
or
sbb
leave
iret
and
push
ficompl
cli
jp
sbb
mov
pop
out
nop
add
shll
data16
push
sbb
cmp
mov
shl
push
lods
pusha
adc
ljmp
lret
ret
xchg
cli
cmp
sbb
and
sahf
xchg
enter
and
pushf
jecxz
cltd
push
inc
pop
or
dec
movsl
pop
adc
loope
aam
fwait
xor
clc
out
cmp
rorb
inc
scas
push
mov
mov
mov
mov
cmpsl
sbb
fcmovnb
in
inc
xchg
cmp
subb
xchg
jge
icebp
or
push
mov
lahf
sub
pusha
call
imul
mov
cmp
mov
jne
sbb
sahf
mov
aad
lock
adc
ss
inc
call
rcll
push
ljmp
or
pop
jb
inc
jne
sub
and
shll
xchg
int
adc
daa
push
retw
aaa
pop
add
mov
jg
pusha
and
stc
dec
mov
pop
clc
into
shlb
scas
sbb
adc
jg
call
movsb
daa
pop
fbstp
push
jb
mov
hlt
mov
repnz
xlat
adc
jecxz
ret
add
leave
iret
inc
mov
imul
mov
mov
insb
popf
dec
test
dec
decl
xchg
push
gs
lcall
inc
xor
aad
jmp
xchg
stos
cmc
mov
dec
ficompl
in
xor
fnsave
fnstsw
sub
rorl
repnz
mov
lahf
ds
test
fistpl
inc
push
movsl
enter
daa
inc
mov
jle
test
push
mov
adc
mov
cmc
lcall
pop
sbb
mov
imul
loopne
jecxz
mov
mov
outsb
add
pop
add
ja
cli
cli
out
std
xchg
inc
dec
rcrb
or
sahf
clc
dec
lods
mov
sbb
or
adc
xchg
roll
aas
xor
jecxz
stc
clc
push
into
and
fsts
mov
in
ret
xchg
and
ja
xchg
mov
jne
push
xchg
mov
mov
mov
and
and
mov
mov
movsl
sub
lods
mov
push
mov
jmp
jge
sbb
pop
mov
lock
sahf
mov
stos
nop
sti
jge
in
aad
scas
sub
mov
cltd
push
movsb
es
push
leave
into
lcall
mov
cmc
cmp
adc
mov
jle
int3
mov
out
ss
ret
daa
adc
jae
push
pop
movsl
daa
xor
sbb
add
add
sbb
mov
repnz
push
int
cltd
fimull
data16
xor
xlat
dec
jmp
or
lods
xchg
xorl
aas
jnp
xchg
push
lahf
popa
lret
and
in
mov
popf
push
nop
sub
sub
cmp
enter
xchg
cmc
xchg
xchg
xchg
jnp
dec
adc
dec
or
addb
jg
mov
mov
lret
mov
sub
pop
mov
testb
xor
call
in
mov
and
je
inc
scas
push
xchg
push
mov
sti
mov
fdivp
pop
daa
subl
test
jle
xor
enter
mov
dec
andb
sub
adc
ja
sbb
aam
ret
xorb
test
add
sbb
pop
sti
sarb
mov
push
cmpsb
dec
lahf
notl
out
test
lcall
dec
pop
fcompl
mov
sub
mov
add
in
sti
mov
mull
cld
lods
mov
aad
mov
cmp
push
inc
add
in
aaa
stos
push
pop
lods
jge
pop
push
daa
add
dec
jae
cld
rcl
test
or
cmp
dec
dec
rcll
mov
shrb
push
pop
popf
push
sub
test
xlat
push
push
jp
adc
sbb
fwait
xlat
pop
cmpsl
mov
cld
cli
adc
mov
enter
sub
ret
pop
or
sti
test
int3
sub
mov
push
lods
or
adc
mov
ret
sub
int
mov
inc
fisttpll
fs
xor
jo
fucomp
ss
xor
sub
and
jae
inc
pop
lret
or
xorb
inc
add
or
push
adc
inc
sbb
gs
inc
clc
cli
jnp
jl
fisubl
jge
shrl
or
push
adc
je
jne,pn
dec
lds
stc
mov
pop
es
dec
out
icebp
mov
mov
push
ss
ss
xchg
scas
cmpsb
cwtl
shl
inc
pop
and
jmp
andl
dec
iret
cmpsl
jecxz
add
cmc
add
dec
outsl
cmp
es
in
cmp
or
inc
fildl
sahf
add
cmp
jnp
sahf
add
jmp
int3
add
or
and
cmc
int
pop
aam
lock
xchg
cwtl
shlb
dec
sti
popf
adcl
test
sub
ljmp
fwait
sub
stc
pop
mov
and
enter
add
cmp
dec
lret
jns
xchg
fildl
pop
or
sub
or
xor
rorb
jecxz
loopne
jb
shr
fstps
sub
cmp
xchg
add
inc
test
xchg
outsb
push
add
fistps
sbb
sub
xchg
sub
imulb
inc
lods
adc
loope
pushw
popa
in
sub
int3
psllw
mov
shll
xchg
mov
popf
jbe
lahf
loopne
cmp
movsb
iret
addr16
mov
enter
cs
sahf
int
add
mov
das
mov
aaa
and
sarb
push
mov
enter
lds
std
mov
lods
fs
jl
inc
out
push
frstor
out
daa
js
mov
jp
fsubl
inc
adc
add
adc
daa
pushf
lcall
les
cmp
arpl
sbb
lret
fisubrs
mov
ret
sahf
test
jecxz
adc
jbe
dec
cmp
lcall
lock
xor
or
incl
pop
sbb
pop
fisubrl
shlb
ds
xchg
dec
das
jbe
xchg
in
je
mov
les
xchg
decb
rcrb
mov
pop
mov
sbb
cmp
mov
cltd
test
sbb
in
fwait
scas
js
sahf
stos
mov
cmpsb
ds
dec
dec
dec
mov
pop
ds
stos
cmp
mov
pop
int
mov
pop
lcall
mov
int
enter
xchg
data16
jnp
mov
push
cmpsb
movl
loop
lods
and
fwait
sub
push
cmp
insb
fstps
jo
mov
sub
push
ljmp
xor
sbb
push
mov
iret
push
insl
sbb
cmp
and
sbbl
imul
dec
iret
jp
xchg
adc
ret
leave
jbe
jb
pop
jo
cwtl
stos
jae
push
xchg
insl
sarl
pop
and
adc
pop
add
faddl
aas
pusha
and
xchg
mov
mov
xchg
push
pushf
xor
popa
mov
outsb
stos
pop
sub
repz
push
adc
shll
in
frstor
stos
xor
addr16
arpl
fdivl
fwait
pop
mov
mov
sbb
aad
test
jl
sub
shrl
ljmp
test
mov
and
xor
push
out
xchg
adc
push
lock
das
mov
inc
lcall
cmp
jo
mov
jmp
xchg
faddp
cmpsb
pop
sub
adc
lret
cli
dec
sarb
jecxz
arpl
xor
fwait
insb
loopne
inc
push
rcll
dec
fcomps
or
fldl
loopne
ds
enter
or
add
dec
pop
inc
lock
dec
hlt
add
cmp
shl
adc
stc
xor
and
sbb
ret
add
mov
stos
add
stc
inc
data16
mov
int
pop
cmpsb
xchg
mov
dec
int3
lods
dec
loopne
pop
dec
pop
cli
stos
mov
ds
out
fiaddl
or
mov
add
xchg
pushf
and
stos
jmp
stos
and
hlt
push
pop
add
add
std
and
ja
leave
xchg
xchg
inc
mov
cmpsb
xchg
iret
push
xchg
inc
sub
mov
mov
pop
jle
lret
icebp
push
es
cmp
test
and
adc
stos
add
outsl
fsubrs
pusha
into
dec
adc
pop
addr16
and
xchg
add
or
test
js
jmp
dec
xchg
inc
inc
dec
movsb
data16
mov
and
xchg
enter
in
ret
cmp
xchg
out
push
mov
push
jns
cld
in
pop
jbe
xor
aam
sti
fnstcw
hlt
loop
js
sub
popf
sbb
xchg
ds
test
test
xchg
inc
dec
les
push
jb
repnz
out
and
int
adc
cmc
lcall
or
mov
popa
xchg
xor
out
mov
sahf
popf
ljmp
inc
jmp
stc
inc
inc
addr16
roll
sti
mov
lret
xchg
outsl
cmp
mov
in
xchg
or
jno
lahf
mov
dec
or
jg
imul
mov
cmp
rcrl
int
cmpl
or
sbb
cs
xor
shlb
xchg
mov
loopne
sbb
or
jnp
jg
jne
out
xor
push
pop
inc
js
lcall
inc
or
mov
imul
and
xchg
sbb
jecxz
mov
cwtl
scas
js
xchg
cmp
ret
ret
inc
stos
and
cli
push
int
das
lea
cli
and
xchg
sbb
outsb
xor
xor
pop
lahf
jmp
mov
mov
shrb
pop
pop
and
dec
aas
aaa
idiv
popa
daa
scas
lods
push
or
add
pushf
ss
gs
inc
pop
pop
movsb
cli
xor
sub
xor
fxch
cmp
dec
sub
push
pop
pop
pop
in
pop
test
mov
sarb
popa
xlat
sarb
shr
jne
rcrl
movl
xchg
push
add
mov
xchg
mov
test
mov
dec
out
clc
icebp
arpl
ficoml
movsb
cmpsb
xchg
ja
popf
xlat
fwait
sar
cmp
into
sbb
mov
hlt
cmp
ds
out
rorl
xor
popf
mov
push
ljmp
prefetchwt1
in
lock
dec
lcall
cld
mov
out
push
scas
fs
mov
dec
imul
out
jns
xchg
inc
xor
dec
inc
pop
or
mov
jg
ljmp
jmp
scas
movsb
pop
ret
adc
shrb
call
pop
sub
popa
fcoms
sbb
fstl
add
lea
xchg
cmp
aaa
lret
popa
movsl
xchg
in
mov
in
fisttps
cli
lret
mov
or
shll
cli
push
push
add
scas
and
ret
lahf
shlb
int3
push
cltd
xchg
sub
insb
cmpsl
pop
xchg
test
test
pop
enter
faddl
mov
or
sbb
cmc
mov
xchg
push
cmpsb
divl
imul
xor
insl
fiadds
addr16
shlb
cmp
mov
ror
imulb
lock
lahf
jo
imul
leave
mov
rcr
div
test
mov
mov
fstpl
fstpt
sti
jge
jmp
shr
adc
cmpsl
sub
rcrb
stos
inc
xchg
and
xor
repz
push
insb
outsb
pop
orb
pop
push
push
push
ljmp
lcall
push
fisubl
call
mov
dec
bound
pop
add
sbb
mov
cmpsb
ror
sbb
mov
jl
stos
jge
repz
add
aam
adc
push
sahf
andl
fiadds
mov
fucomp
rcrb
repnz
ror
stos
xor
xlat
add
dec
xchg
pushf
pop
mov
and
mov
or
xlat
fcompl
sbb
mov
stos
inc
mov
stc
rol
js
fistpl
jmp
ret
sbb
negb
outsl
jle
test
jl
pop
mov
and
pop
sbb
sbb
or
bound
inc
aas
inc
in
dec
adc
push
fistps
cmp
mov
std
mov
push
icebp
cmc
mov
push
popa
xchg
sbb
or
aas
push
jne
popa
push
push
or
sub
mov
arpl
js
adc
pop
int3
out
insl
cmp
add
and
or
or
mov
or
pop
inc
inc
xlat
shl
lret
add
mov
pop
adc
push
push
aaa
stos
jbe
add
jno
sbb
adc
stos
aaa
repnz
mov
sbb
dec
lods
xchg
cmp
popf
add
inc
inc
pop
aaa
mov
test
lcall
fistl
in
jo
out
stc
push
mov
scas
bound
xchg
insb
data16
dec
sbb
iret
lret
add
scas
std
sbb
aam
fdecstp
loope
and
or
or
lea
ds
cmpsl
popf
stos
push
mov
add
sbb
mov
fisubl
gs
clc
jge
loopne
adc
adc
adc
push
es
mov
ret
cmp
push
mov
outsl
fwait
push
sbb
int
xchg
test
lock
adc
loope
aaa
cmpb
mov
add
into
or
cmp
leave
loop
and
inc
fiaddl
int
es
jecxz
xor
lods
mov
aad
adc
inc
add
mov
mov
ret
xorb
in
push
cmpsb
xlat
sub
fisttps
push
or
dec
std
xor
pusha
jmp
movsl
push
test
in
sub
adc
push
repz
sub
cmp
mov
dec
dec
pop
mov
call
xor
xchg
repz
fcom
in
push
and
pusha
sti
push
add
jb
outsb
loopne
and
jl
mov
psrld
imul
out
adcb
outsb
insl
cmovb
test
leave
and
aad
lret
adc
cmp
stos
push
xor
into
cmpsb
stc
cmp
sub
je
cmpsl
dec
pop
add
xchg
fsts
mov
xchg
or
test
dec
dec
mov
insb
pop
lock
and
dec
xor
out
lret
sti
cwtl
out
in
stos
imul
mul
and
mov
cmpsl
jecxz
ja
push
sahf
test
shll
fidivl
jbe
ret
cwtl
cmpsb
stos
aas
stos
je
cltd
xchg
out
dec
add
push
adc
nop
lds
pusha
add
xchg
fisubrs
lods
mov
xor
ljmp
mov
test
xchg
lahf
mov
xor
adcl
ret
outsb
daa
jecxz
push
in
outsl
mov
pop
or
inc
sarb
fmul
xchg
mov
fcompl
stc
frstor
pop
cmp
mov
xor
sbb
gs
addr16
xor
icebp
mov
sbb
cs
in
cs
divl
jb
sahf
sbb
push
inc
sti
jg
dec
pop
popf
subb
cmp
mov
push
cld
mov
pop
jle
nop
bound
loopne
idivb
aad
je
xor
ret
aas
inc
push
cltd
jmp
jp
pop
inc
ss
pop
push
mov
mov
and
cmpsl
dec
ret
movsl
jbe
xor
jl
in
test
dec
insb
mov
cmp
sahf
push
sbb
push
mov
sahf
inc
fcmove
fs
notl
push
roll
testb
adc
ret
mov
sbb
mov
push
cmpsl
push
hlt
lcall
test
dec
and
cmp
cmp
lret
out
push
cmp
cmp
lcall
sub
and
mov
and
push
aam
push
sti
push
mov
and
push
cmp
mov
jl
lods
xor
fistl
addr16
mov
add
ja
push
sub
cltd
out
lods
dec
dec
mov
ret
in
or
sbb
je
pop
lret
sbb
shlb
dec
das
xchg
xlat
cmp
mov
jmp
scas
mov
pop
enter
pop
test
jbe
mov
push
lret
mov
aaa
sbb
xor
jecxz
ja
or
mov
or
dec
inc
and
xchg
add
mov
xchg
fisttpll
adc
js
std
mov
movb
popa
gs
clc
mov
gs
fdivl
xchg
test
popf
ja
xor
xor
fcomps
and
and
jmp
push
shr
out
push
sbb
add
bound
idivb
mov
loope
mov
mov
jge
mov
inc
fiadds
adc
test
mov
fwait
mov
popf
hlt
int
pop
push
out
push
pop
popa
push
pop
imul
sub
popa
push
inc
les
aas
add
jb
push
xor
imul
mov
int
inc
push
fs
lret
arpl
mov
mov
shlb
mov
inc
icebp
out
gs
pop
and
in
lahf
iret
aad
pop
xlat
pop
pop
sub
mov
adc
add
imul
test
lods
push
push
inc
jb
jbe
icebp
mov
or
idiv
push
and
das
xor
xor
es
fadd
loopne
aas
adc
fsubl
push
push
jno
test
repz
inc
add
out
pop
jae
jae
mov
or
mov
or
add
cmp
jle
out
adc
cmp
sub
inc
jecxz
repnz
and
xor
push
sub
adc
jbe
lock
xor
fsubs
mov
aas
cmc
sub
dec
je
mul
jno
gs
jecxz
cmp
cwtl
aaa
popa
jne
decl
sbb
cmpsl
test
in
movsb
aad
cmp
xchg
aad
in
push
or
push
leave
mov
ds
outsl
fisubs
adc
lret
sub
out
cmp
pop
lcall
cs
xchg
mov
inc
outsl
lcall
jle
pop
inc
adc
and
mov
push
mov
push
xchg
or
insl
pusha
arpl
test
xchg
xor
mov
cmp
fs
and
push
lahf
xor
inc
orl
and
jo
and
jo
sarl
stc
pushf
imul
test
cwtl
sub
int
jb
int
gs
pop
and
push
lret
inc
loopne
and
adcb
xchg
outsl
addr16
inc
mov
ret
ljmp
xor
fldcw
lret
js
call
dec
cmpsl
loop
sbb
fwait
stos
adc
out
mov
ficoml
call
out
iret
loopne
loop
inc
nop
pop
cmp
les
les
push
push
stos
es
out
push
push
mov
std
sub
push
mov
movl
in
sub
inc
lea
and
mov
fistl
pop
adc
push
cs
clc
and
stos
adc
cs
sti
stos
and
std
mov
icebp
cli
movsb
cmp
pop
insb
add
sub
push
push
sub
or
into
inc
xchg
jle
pop
inc
adc
lds
push
push
push
mov
xlat
aaa
pop
mov
fisubrl
movsl
lcall
fnsave
inc
js
mov
jecxz
or
stos
sahf
mov
scas
or
das
outsb
and
dec
ja
jl
sbb
add
inc
stos
inc
mov
jae
pop
cmp
leave
stos
shrb
dec
cmp
pop
mov
dec
popf
mov
xchg
js
clc
mov
fwait
and
outsb
testl
mov
or
into
sub
add
sbb
fildl
aaa
inc
std
fsubl
rol
enter
add
mov
inc
stos
xchg
push
jnp
add
pop
icebp
out
lods
jns
xchg
popl
adc
xlat
mov
sub
sarb
insl
and
push
mov
into
pop
sbb
mov
pop
and
mov
pop
and
lock
ret
push
cmpsl
mov
pop
sbb
push
push
cmc
test
popf
roll
adc
cmp
cmp
in
mov
push
imul
mov
mov
push
or
inc
xlat
push
lret
fmuls
push
aam
in
les
sti
loopne
lods
push
cli
jle
rcr
sbb
and
lret
fsubrp
dec
sbb
leave
adc
mov
lods
rcrl
popa
sub
mov
mov
xchg
aam
cmp
jg
or
ret
and
test
scas
inc
push
ret
mov
push
and
pushl
cmpsb
pop
inc
cmp
insb
mov
dec
aas
jb
cmp
rclb
negl
xor
mov
bound
mov
fcoms
mov
stos
jnp
xchg
lods
mov
sbb
inc
fsubrs
jle
mov
insb
or
pusha
mov
adc
mov
mov
and
lret
mov
cmp
adc
movsb
movsl
mov
mov
jge
ficoms
xlat
push
lahf
hlt
inc
movsb
mov
fwait
adc
inc
jmp
in
xor
adc
xchg
cmp
push
mov
inc
loopne
mov
mov
aam
ret
cmp
fwait
or
sub
mov
push
sbb
les
cld
and
inc
mov
fdivs
int
and
insl
addr16
aam
test
ljmp
xchg
mov
gs
into
lods
sbb
jno
cli
adcl
push
and
xchg
sub
repz
mov
jge
insl
adc
mov
adc
jne
ljmp
pop
adc
fcom
sub
mov
mov
jmp
jno
cld
add
insl
cld
jne
int
inc
clc
push
jns
mov
pusha
add
mov
dec
dec
cltd
mov
es
xchg
stos
decl
clc
out
inc
scas
jg
push
inc
das
ja
adc
daa
repz
mov
out
inc
test
and
loope
mov
fldenv
bswap
push
inc
xor
jp
add
cmp
inc
gs
jp
loope
add
fstpl
dec
and
sub
fldpi
call
popf
aad
xchg
insb
ja
pop
enter
sub
xchg
pop
fbstp
lods
inc
sbb
cwtl
int
out
or
cli
imul
mov
rclb
pusha
pusha
decl
cli
xchg
outsl
mov
push
cmpsb
or
cmpsl
rcrl
iret
mov
mov
cmpsb
notb
and
mov
and
icebp
call
shl
xchg
xchg
adc
xchg
das
adc
idivl
add
cmp
add
lcall
xor
in
xchg
pop
xchg
cs
push
loopne
cwtl
loop
lock
filds
aad
mov
mov
pusha
adc
mov
mov
das
xchg
sbb
dec
imul
mov
cltd
test
mov
lds
cltd
push
dec
icebp
pushf
daa
cmpb
out
fstpl
push
cltd
lret
shlb
popf
inc
jl
sub
div
in
mov
xchg
fldl
sbb
inc
xor
ja
enter
lret
in
push
mov
sbb
cli
mov
shl
sub
leave
fmul
scas
outsl
or
mov
pop
push
subb
lods
mov
pusha
pop
scas
pop
sbb
inc
lahf
sub
xchg
inc
jo
int3
mov
mov
arpl
les
scas
data16
mov
and
cmp
pop
inc
pop
gs
mov
mov
das
fucomp
sub
pop
pop
jmp
jno
sbb
fldt
out
sub
dec
inc
cmc
xchg
daa
shlb
aam
mov
mov
adc
ss
test
inc
mov
lcall
insl
lret
and
out
cmpl
iret
cli
mov
mov
cmp
dec
push
dec
adc
addr16
push
and
int
dec
or
outsl
xchg
inc
or
sbb
xchg
jne
js
jb
sub
add
xor
icebp
loop
and
or
cltd
cmp
adc
or
mov
inc
bnd
jo
inc
inc
mov
sub
jle
andl
add
js
pop
jns
jnp
aad
lea
xor
sub
mov
ret
pop
sub
inc
cli
jmp
in
mov
pop
out
pop
lods
stos
add
imul
loopne
divl
stos
mov
dec
lahf
add
ljmp
sub
xchg
pop
lcall
ficoms
rcrb
adc
push
fs
mov
cmp
iret
xchg
or
or
leave
xchg
push
or
or
outsb
jecxz
arpl
xchg
mov
fildl
mov
pop
dec
push
ds
inc
bound
mov
stos
mov
cli
shrb
inc
dec
ljmp
or
fstpt
and
sbb
cmp
outsl
fcom
push
ljmp
push
sbb
mov
pop
xchg
sarl
sub
inc
cli
cwtl
shlb
pop
shr
jecxz
fsubrl
shll
test
xchg
push
jp
sbb
and
mov
aaa
std
icebp
jl
xor
clc
stos
sbb
pop
sbb
out
lret
add
scas
jae
xor
or
divb
cld
stc
push
lods
lret
inc
pusha
rolb
jle
lret
inc
sub
cmc
push
daa
icebp
ljmp
pusha
test
aas
filds
rcrb
push
pop
xchg
push
cmp
jmp
mov
push
sbb
sub
sub
decl
aam
jo
xchg
pop
testb
ret
ret
mov
test
in
xchg
dec
bound
cmp
sub
pop
jne
pop
ror
in
mov
jmp
leave
pop
inc
imul
push
inc
les
adc
xchg
push
add
and
pop
add
stos
leave
cld
roll
push
adc
clc
pop
push
in
test
jg
pop
adc
jae
add
jns
push
test
and
pop
mov
stc
imul
movsb
outsl
nop
xor
jno
popf
fwait
nop
lahf
pop
loopne
xchg
jno
sub
out
popa
sbb
sbb
mov
rcl
pop
pop
imul
sahf
or
sti
sbb
mov
adc
add
dec
pop
xchg
and
mov
cmp
cltd
mov
xor
dec
shl
lock
pop
imul
repnz
std
and
mov
lods
xorb
cmpb
inc
xchg
push
push
cmc
test
out
sbb
xchg
ljmp
pop
pop
pop
adc
movsl
in
call
adc
pop
rolb
push
or
stos
loopne
push
das
popf
mov
xor
pop
in
pop
sub
lock
ret
ljmp
pop
jne
inc
daa
stos
sub
cmpps
sub
and
ror
push
mov
add
adcl
les
loop
rcr
cmpl
mov
pop
call
cs
pop
sbb
lahf
cmc
xchg
ljmp
int3
mov
lock
adc
outsl
add
ret
stos
out
ss
mov
fisttps
test
dec
or
xchg
iret
xor
repnz
ret
loop
pop
xchg
adc
and
xchg
sub
cmp
push
xchg
mov
mov
insb
lock
in
cmpl
xor
aam
pop
es
shrb
jnp
pop
in
movsb
mov
pop
adc
sub
enter
and
mov
push
push
mov
pop
add
pop
subl
mov
cmpb
sub
dec
pusha
push
xchg
fistl
mov
xchg
aaa
bnd
gs
hlt
cmc
in
dec
xchg
popf
push
adc
xor
in
xor
jle,pt
movb
inc
lods
stos
dec
add
nop
cld
pop
js
lods
pop
mov
or
insb
or
dec
pop
stos
and
iret
and
mov
icebp
outsl
push
in
sbb
push
mov
fs
aam
aas
cmp
jmp
cvttps2pi
cmp
pusha
test
out
mov
js
lahf
inc
aas
into
fisttps
sahf
gs
pusha
mov
lret
sub
xor
inc
and
lea
or
outsl
mov
push
cli
or
jb
xchg
rol
mov
and
cmp
cmp
push
mov
movsb
mov
mov
mov
fstpl
popf
xor
faddp
pushf
cmpsb
lret
mov
lea
dec
lea
jmp
shll
sbb
std
jb
cld
outsl
add
xchg
fnstcw
xchg
stos
add
nop
fldt
jmp
pop
lods
ret
jp
jo
xchg
call
and
gs
out
idiv
push
mov
mov
lcall
dec
push
test
sub
jb
in
xor
xchg
adc
mov
sub
or
xchg
jmp
cmc
inc
or
cmp
ja
inc
cld
movsb
jnp
pop
mov
fdivr
mov
and
aaa
ljmp
or
lahf
rclb
lea
enter
xchg
pushf
push
ljmp
push
xchg
mov
fmul
jl
push
xor
jecxz
rorl
out
cltd
ljmp
scas
ret
or
mov
pusha
out
sbb
addr16
scas
daa
pop
jne
shll
fsub
or
bound
jns
imul
in
insl
shll
sbbb
imul
add
sub
stc
xor
mov
scas
stos
lcall
and
cltd
out
adc
repnz
adc
and
mov
push
inc
sbb
adc
test
sbb
es
dec
xchg
ja
test
arpl
cld
jmp
sbbl
out
or
rcr
std
and
fcoml
pop
inc
imul
lds
icebp
xor
mov
ss
push
in
add
rclb
movq
cmp
mov
decb
iret
mov
pusha
sbb
cmp
push
cltd
jns
mov
data16
lods
testl
roll
fwait
add
jmp
sub
lahf
cmp
dec
std
ljmp
fmuls
daa
pop
add
push
leave
mov
jle
ss
or
push
mov
or
mov
mov
push
jno
jecxz
clc
cmc
add
aas
jae
rcrl
push
scas
mov
out
shrb
pop
insb
add
scas
mov
std
shll
or
fiadds
xchg
shl
push
icebp
clc
cmpsb
jg
pop
cmp
xchg
push
jno
lods
std
adc
les
fucomp
dec
mov
adc
jne
pop
xchg
or
jmp
cmpsl
and
adc
mov
pushf
shlb
frstor
pop
ds
fdivr
stos
js
inc
jge
sub
popf
or
pop
and
pop
lods
push
in
cmp
ljmp
stos
std
mov
xorb
cmp
xlat
mov
dec
lds
pop
mov
sub
aad
dec
scas
xor
gs
xchg
adc
pusha
or
push
out
ja
jle
fstl
xchg
adc
dec
call
dec
frstor
mov
int3
pop
jnp
mov
and
pop
fsubp
test
jmp
sbb
dec
xchg
cltd
xor
out
leave
loope
shlb
mov
sarl
mov
pop
repz
xor
pop
sbb
push
iret
and
mov
pop
jb
pop
stos
out
loop
pushf
mov
jnp
sub
mov
dec
sahf
jnp
jbe
loope
push
pushf
mov
pop
mov
mov
mov
les
lcall
ss
cmp
cmpb
ret
xbegin
fistpll
les
sub
push
rcr
fdivrs
mov
pop
filds
mov
cmp
lods
push
mov
fdivrs
cmc
pusha
popa
in
fmul
xchg
jnp
in
out
fnstsw
test
sbb
nop
or
mov
inc
loopne
aam
mov
adcl
mov
push
fbstp
cltd
xchg
ror
mov
sti
push
push
mov
ja
shrl
xchg
push
pop
xchg
pop
pop
xlat
popl
and
jns
add
in
or
mov
mov
scas
adc
jae
add
test
fsubrl
mov
mov
lods
ja
sub
sub
ja
and
xor
jns
push
lcall
sbbb
push
sbb
mov
loop
mov
sbb
out
mov
or
out
mov
lahf
and
pop
loopne
inc
daa
jns
test
flds
mov
insb
or
scas
sub
lds
push
in
pop
or
mov
pop
jno
and
imul
dec
cmpsb
cli
das
test
sbb
or
ljmp
inc
scas
sbb
xchg
loope
repz
add
cmp
and
out
subl
lahf
inc
dec
test
lret
pop
jne
sub
int
in
or
push
sbb
in
mov
cmp
mov
fisubs
cmp
js
in
mov
inc
or
mov
jecxz
mov
mov
xor
aaa
out
std
cmp
push
mov
sub
subb
push
outsl
xchg
inc
jns
loopne
scas
cmc
push
jge,pn
shll
in
iret
cs
mov
jecxz
mov
cmp
cmp
cmc
sahf
in
mov
scas
insb
outsb
adc
ret
ds
mov
xchg
sub
gs
and
adc
icebp
sbb
sbb
sbb
lretw
pop
gs
push
xchg
roll
add
lcall
push
cmpsb
test
sub
or
cmp
ss
les
sbb
mov
mov
pop
sub
mov
xor
sub
sbb
ds
out
pop
lds
sbb
rcrl
movsb
or
jge
inc
or
cwtl
and
jae
subl
mov
push
ljmp
xor
jg
out
and
cmp
les
ficomps
in
cmpsl
or
mov
pop
aaa
jns
test
in
pop
mov
les
xchg
stos
dec
lea
dec
lret
jg
in
cld
push
or
pop
xor
mov
std
std
mov
roll
insl
test
adcl
push
je
cmp
test
test
push
arpl
ret
push
mov
xor
mov
xchg
mov
jne
js
sub
jno
sbb
push
sub
push
sub
sahf
or
fistps
pop
mov
inc
adc
push
xchg
lahf
push
and
dec
cld
inc
lret
push
test
mov
bound
jge
xor
arpl
sub
cs
push
and
lods
inc
xchg
push
dec
or
push
push
mov
mov
flds
jno
mov
or
cmpsl
sbb
insb
sbb
les
movsb
cmp
jnp
ds
or
into
fldt
hlt
sub
nop
andb
loope
sbb
pop
adc
fwait
cwtl
cmovbe
das
les
andb
xor
das
jae
imul
cmp
les
xor
subl
icebp
cmc
mov
add
orl
inc
stos
sarb
sbb
mov
enter
pushf
les
icebp
jmp
movsb
jle
add
push
mov
and
ljmp
mov
pop
mov
mov
loopne
jecxz
cmp
loope
pop
scas
out
dec
fmul
addr16
cltd
stos
lret
cmp
inc
daa
push
jae
cmp
outsl
cmp
rcr
xor
lret
mov
aas
adc
shll
mov
test
out
cmp
aam
cmp
into
fwait
bound
add
inc
mov
js
out
lret
push
push
mov
mov
int3
iret
mov
adc
or
mov
push
mov
xchg
and
outsl
shlb
jl
aas
cmpsb
adc
sbb
lcall
xor
aad
mov
cmp
and
iret
leave
mov
jecxz
scas
inc
xchg
mov
out
out
lods
mov
xor
iret
and
jne
sbbl
add
jb
leave
sub
push
shll
jns
test
aaa
sub
fstpl
out
fistps
int
int
aad
sbb
out
mov
and
cmp
rclb
sbb
sahf
aas
shlb
icebp
stos
mov
clc
cwtl
sbb
sub
sbb
lret
mov
sbb
jne
adcb
out
inc
pop
es
ret
push
lahf
adc
and
jno
rcr
adc
jg
bound
xchg
add
mov
mov
pop
orl
jmp
sub
adc
or
xchg
jae
pop
push
aam
cli
adc
insl
xor
sub
or
popa
sub
pop
scas
sbb
inc
cwtl
addr16
test
mov
xchg
jbe
xchg
lret
movsb
add
ja
rolb
ljmp
movsl
addb
sub
xor
push
sub
repz
pop
mov
pop
movups
ret
push
lahf
and
add
xchg
dec
mov
mov
pop
sti
test
sub
sbbl
mov
mov
pop
pop
cmp
call
test
lea
idivl
jp
ret
mov
dec
cs
outsl
daa
mov
arpl
ret
lret
inc
lret
xchg
aas
pop
imul
into
jp
inc
testb
addr16
pop
xor
xchg
push
add
push
roll
out
and
daa
rcrl
xor
adc
cmp
xchg
movsb
cmp
sbb
loopne
push
lahf
ret
or
in
push
jno
je
das
or
sub
pop
and
xor
dec
out
test
int3
xor
cmpsb
jmp
dec
dec
movsl
fs
lcall
out
mov
mov
ret
pushf
ss
adc
test
cmp
test
xchg
test
or
or
inc
jnp
mov
or
test
stc
sbb
sti
call
and
mov
aas
sub
mov
cmp
jge
adc
cmp
je
in
pop
xor
jl
inc
repz
pushf
leave
cmp
xor
insb
iret
push
sbb
inc
add
mov
scas
cmp
out
sub
push
lods
out
xlat
sub
popf
dec
sbb
fs
loop
mov
clc
pop
dec
dec
orl
or
std
fimull
call
inc
cs
cmp
jg
jle
mov
clc
sbb
imul
lds
hlt
cwtl
stos
enter
or
mov
cmp
adc
int
iret
push
cmpsl
loope
and
fmul
sbb
sub
insl
mov
cmpsb
sub
or
sub
aam
lahf
mov
sub
or
mov
mov
lock
mov
xchg
leave
outsb
jb
daa
mov
mov
or
or
addr16
add
pop
inc
jle
xchg
js
ja
clc
shll
xorl
pop
ret
vcvtdq2pd
xor
mov
test
loopne
pop
cli
adc
cmp
mov
popa
test
xchg
push
pusha
inc
sub
ret
xor
adc
mov
outsl
inc
pop
pop
mov
mov
dec
xor
outsl
xor
test
popfw
sbb
cmc
movsb
jg
sahf
mov
mov
das
inc
negb
cmp
das
push
pusha
mov
fwait
inc
sbb
andl
out
and
rclb
in
ljmp
push
popf
dec
xlat
inc
jae
bound
fwait
push
pop
xchg
jl
outsb
inc
adc
or
lods
dec
dec
sub
xor
inc
out
push
ret
stc
lret
sarl
xchg
sub
lods
dec
adc
mov
rcrl
cmp
je
les
std
dec
sbb
in
in
shl
aad
push
cld
call
test
push
adc
xor
add
ljmp
icebp
cld
scas
pop
das
cmp
ja
push
sbb
add
xor
jcxz
pop
adc
lock
xor
test
sbbl
mov
push
pop
cmp
jmp
xor
cmp
inc
pop
in
cmp
xlat
dec
ljmp
push
out
out
and
xorl
call
xchg
hlt
fcmovne
fcmovne
pushf
out
inc
arpl
pop
pop
mov
and
pop
pushf
stos
ffreep
jge
xor
movsl
clc
out
jne
pop
mov
ljmp
push
outsb
sbb
pop
inc
scas
add
leave
push
pop
and
mov
out
xchg
pop
jmp
cld
add
xorb
addr16
in
std
cld
scas
or
lcall
add
test
mov
dec
mov
or
fisubl
cmp
cli
inc
mov
daa
movb
dec
mov
ret
decb
mov
mov
sbb
jge
ret
lret
mov
dec
jno
push
cs
repz
int3
rcrb
xor
or
mov
aaa
subl
sub
ja
xchg
inc
mov
cmp
cmpb
aaa
pop
adc
cld
jo
or
push
fs
dec
pop
cmp
scas
jno
cmp
xchg
jns
lea
fcoml
xchg
int
xchg
cltd
das
leave
xchg
xchg
in
lret
sub
cld
dec
cmp
add
andb
daa
push
add
arpl
push
mov
adc
gs
mov
push
jns
xor
arpl
push
and
push
imul
ror
or
es
mov
aam
dec
fcomi
jge
bnd
in
stos
sbb
imul
je
mov
inc
aad
sbb
mov
sarb
xchg
push
movsb
or
lahf
sub
xchg
das
fs
arpl
adc
mov
pop
xor
xchg
sbb
cmp
sahf
cmp
add
stos
inc
arpl
sbb
andl
hlt
mov
inc
mov
jae
int
dec
clc
xsha1
cmpsb
dec
mov
mov
into
aas
subb
je
push
mov
sub
pop
cs
jl
sbb
mov
mov
fwait
loop
orl
mov
jne
jl,pn
mov
and
mov
cmp
cwtl
and
cmpsl
mov
xor
jmp
fs
mov
outsl
cld
jbe
dec
clc
es
sbb
lods
fdivl
cmpsl
mov
adc
dec
or
sahf
sub
jns
stos
mov
scas
lea
pop
sub
cld
insb
xchg
rcrb
inc
cltd
xchg
or
dec
mov
inc
pop
jle
aaa
jmp
jno
outsl
ficoms
xchg
cmp
ret
jg
movsl
stc
and
insl
dec
and
dec
mov
jae
out
pop
mov
arpl
je
je
mov
sarl
jnp
push
and
mov
sub
pop
push
repnz
je
xor
xlat
pop
lahf
nop
pop
jg
add
movsl
iret
push
clc
jp
mov
jnp
mov
adc
xor
push
xchg
mov
rcl
iret
jg
cmp
stos
test
rcrl
ja
adc
arpl
dec
push
enter
lret
push
pop
clc
add
into
test
scas
fs
xchg
frstor
jns
xchg
out
cltd
jle
pop
mov
jns
jne
xor
adc
jg
adcb
cmc
movsb
inc
sub
dec
loopne
sbbb
jb
mov
add
sub
add
int
push
add
out
jns
add
es
sub
pushw
lods
pop
xchg
lahf
pop
jo
repnz
pop
dec
or
repz
fstl
cmp
fldcw
test
sub
push
mov
xlat
mov
and
push
xchg
or
mov
ret
sbb
cli
icebp
adc
loopne
sub
inc
imull
imulb
adc
mov
jo
cltd
or
sub
ljmp
test
mov
add
mov
mov
xor
fnstcw
cmpsb
add
test
or
test
or
out
gs
add
inc
pop
jae
dec
xchg
loope
mov
or
jg
xor
xor
js
sub
sbb
mov
jle
inc
dec
mov
adc
sub
fisttpll
xor
int3
push
cmp
jl
add
sub
lahf
mov
cmpsl
daa
int3
mov
push
mov
inc
lret
daa
jno
cmp
je
push
es
mov
pop
loop
pop
sub
int3
into
and
mov
sub
push
xor
inc
out
mov
sarl
jne
pop
mov
push
and
pop
and
xor
and
or
rcr
inc
xchg
popf
jp
add
cmpl
stos
leave
pop
dec
ret
fwait
push
lcall
sub
ret
jo
sub
dec
jno
rcrb
ja
cmp
inc
adc
lock
xchg
mov
cld
dec
test
sbb
in
push
aas
lods
in
push
loope
in
xchg
mov
in
and
add
sbbl
cmpsb
out
or
mov
mov
dec
imul
cmpsb
add
out
mov
push
xor
fisubl
mov
mov
jp
dec
mov
mov
fadds
test
lcall
aas
test
fists
cwtl
mov
or
shlb
cmpsl
fs
xor
sti
xor
mov
inc
es
js
xor
daa
cmpsb
sub
jno
mov
mov
js
shlb
popf
inc
shlb
es
push
imul
cli
shll
aas
xchg
sbb
inc
adc
jo
enter
js
fdivl
or
imul
cmc
push
xchg
or
xchg
push
xchg
push
leave
int3
nop
inc
mov
pop
sahf
cmc
out
dec
out
push
aas
in
cmp
jecxz
jmp
xor
shrb
sub
sbb
dec
cmp
xor
sub
adc
cmp
pop
add
daa
fstpl
mov
sti
int3
mov
xchg
inc
mov
das
or
fstpt
adc
repnz
shll
and
mov
adc
cmp
arpl
stos
sub
or
jnp
cmc
sbb
enter
jmp
xchg
out
mov
lea
hlt
mov
inc
nop
out
leave
pusha
scas
jbe
xor
jmp
adc
xor
jge
xor
cmpsl
push
scas
mulb
sbb
mov
lock
lock
test
jne
jb
pusha
xlat
out
shr
mov
lods
dec
in
stos
rolb
ds
jae
mov
push
xorb
movsl
in
inc
adc
jnp
and
mov
lahf
xor
into
dec
mov
sbbl
fisubrl
insb
daa
test
jl
push
es
std
aaa
dec
pop
callw
sbbl
scas
cmp
sub
js
sahf
repz
add
cli
and
sbbb
cmp
mov
cmc
dec
aad
scas
mov
out
and
fbstp
dec
mov
mov
popf
shlb
pop
mov
addr16
mov
inc
jle
mov
mov
dec
roll
popf
rcll
pop
fcomp
pop
push
push
inc
lahf
sbb
fcomi
push
jmp
imul
pop
add
icebp
pop
iret
icebp
or
jge
subb
mov
in
mov
add
pop
fnstenv
mov
push
xchg
mov
call
rol
jns
xor
inc
cltd
push
stos
or
adc
sbb
lods
call
cmp
nop
inc
jl
daa
pop
loopne
mov
out
or
mov
fmul
or
movsb
leave
popf
jne
rcll
mov
mov
jmp
ret
mov
cmpb
mov
rcr
sub
add
dec
in
or
loopne
jle
ret
nop
sbb
call
jl
jmp
mov
cwtl
push
lret
sbb
pop
je
fiadds
mov
sub
add
or
jbe
adc
mov
mov
sub
jg
xor
sub
outsb
mov
add
out
std
jecxz
frstor
les
xor
inc
pmaxub
sbb
movsb
xor
arpl
add
mov
mov
flds
test
lahf
out
dec
adc
dec
enter
xchg
frstor
stos
adc
inc
orl
ja
cmp
pusha
dec
mov
adc
and
jnp
and
xchg
test
sub
rcrl
mov
sti
ljmp
enter
mov
clc
pop
loope
dec
scas
xor
add
and
pop
xlat
lcall
add
jb
lret
dec
mov
lret
mov
mov
dec
movsb
test
xchg
or
stos
insl
mov
dec
pop
rolb
pop
pop
fcom
push
or
inc
add
std
mov
aad
out
jg
adc
sbb
scas
ljmp
or
mov
pop
iret
out
repz
aam
mov
add
jno
bound
imul
sbb
dec
add
mov
jp
pop
inc
xchg
or
pop
sbb
jns
pusha
dec
jne
test
sub
mov
dec
jae
test
xlat
dec
pushf
icebp
dec
and
add
jo
inc
jae
pop
inc
pop
lea
call
in
jae
mov
out
pop
lods
testl
push
flds
push
push
lods
aaa
dec
lahf
xrelease
dec
int
xchg
xor
sub
push
jne
cmp
add
sub
ss
xchg
xor
cmp
jae
mov
das
rorb
mov
stc
sub
mov
xchg
xor
mov
pop
ljmp
mov
xor
flds
aaa
in
fcoms
pop
outsl
addr16
lods
repnz
popa
pop
sbb
aaa
fsubr
mov
adcb
lahf
fs
mov
cmc
fnstsw
push
mov
pop
jp
mov
dec
loope
leave
repz
jecxz
pop
sub
movsb
hlt
ds
fs
sbb
pop
mov
jae
or
dec
sbb
mov
dec
test
das
aaa
call
mov
std
mov
clc
fistpll
cmpb
mov
and
push
mov
test
mov
push
sub
mov
cmp
loop
push
icebp
mov
dec
ret
ja
addl
push
pop
arpl
sub
scas
xchg
xchg
xchg
cmp
mov
pushf
ljmp
or
push
xchg
das
inc
lods
fldt
mov
loop
in
inc
cwtl
repz
adc
mov
test
movl
lea
cltd
andl
nop
xor
lock
dec
dec
shl
xor
jg
jns
shlb
xchg
fs
or
xchg
sbb
xchg
or
icebp
cmpsl
sub
sub
les
test
pop
mov
orb
dec
cmpsb
lcall
and
sub
ljmp
cltd
out
dec
cmp
dec
fucom
aad
les
arpl
inc
call
ljmp
leave
scas
movsl
cli
test
fisubrs
test
push
imul
pop
inc
std
pushf
aam
xchg
adc
fistps
push
adc
mov
inc
pop
pop
cmp
and
xorb
jo
lcall
jp
rorl
xchg
mov
jl
or
mov
jb
loopne
pop
and
ljmp
xor
or
xor
add
or
jle
js
mov
cmp
lds
in
xor
cmp
cmp
stos
mov
xor
cwtl
pop
icebp
das
dec
imul
push
fldenv
sub
iret
loopne
sub
out
es
dec
out
add
repnz
push
xchg
cmp
mov
mov
xor
ja
scas
push
dec
ljmp
push
rcll
aad
jmp
adc
movb
and
mov
inc
dec
xchg
inc
aas
add
paddw
fucomi
outsb
mov
pop
sub
sbb
pop
sub
add
inc
loopne
sub
filds
lock
loop
movsb
lahf
pop
mov
faddl
sub
dec
mov
adc
sub
or
jp
mov
mov
push
dec
xor
push
add
rcll
xchg
scas
push
insb
push
and
call
inc
jae
push
lock
sti
adc
jnp
pop
and
xchg
push
mov
sbb
cmp
repz
pop
inc
test
stc
or
cmp
jmp
enter
adc
jmp
fldcw
popa
int
push
test
push
sahf
push
adc
ror
sub
dec
jle
jbe
adc
pop
xchg
lea
stos
jle
addr16
test
mov
mov
call
mov
jge
ja
mov
inc
inc
fiaddl
fidivl
cld
add
xlat
mov
data16
inc
enter
sbbl
inc
mov
push
hlt
lea
int3
out
push
mov
aam
mov
std
pop
push
xor
popa
ja
push
mov
lds
data16
loopne
or
lret
js
xchg
cmp
and
rcrb
dec
in
shr
in
imul
pop
scas
jb
popf
rcl
xchg
popf
adc
xchg
pop
push
mov
test
cs
sti
shlb
inc
inc
or
push
out
pop
inc
cli
ffreep
pop
or
cld
rclb
sub
sbb
scas
cltd
push
out
mov
pop
mov
sbb
into
ficoml
and
jecxz
sbb
jne
lret
sarl
stos
xchg
popa
sub
adc
iret
dec
ds
mov
xor
pop
ret
mov
arpl
inc
mov
jmp
rclb
mov
mov
add
jge
fwait
lcall
mov
sbb
aam
xorl
movsl
clc
fisubrs
push
fcompl
jecxz
mov
rdtsc
das
cmp
jb
dec
sti
push
mov
dec
rcrb
mov
cli
ds
inc
js
bound
cmc
cmp
aas
cmp
rcl
or
mov
int3
push
lock
dec
nop
push
inc
cmpsl
and
sahf
mov
frstor
push
add
inc
sbb
repnz
stos
pop
sub
mov
ret
xchg
dec
xchg
jecxz
mov
cmp
xor
push
test
sti
loope
lret
xlat
mov
loop
adc
push
push
iret
pop
aas
outsl
adc
iret
int3
xchg
xchg
xor
sbb
mov
inc
int
cwtl
push
movsb
pop
mov
rcrl
push
jns
mov
push
cmp
pop
or
test
push
filds
push
and
jo
dec
sbb
xchg
lods
xor
fs
leave
jge
jge
push
xor
mov
std
inc
in
xlat
cmpsl
mov
mov
test
push
sahf
subl
shr
ficompl
fcomi
add
jae
rolb
jo
mov
pop
fs
sahf
push
test
sbb
inc
xor
jne
outsb
dec
outsl
je
jb
loopne
or
clc
mov
pop
sub
pusha
xchg
inc
ja
repnz
outsb
add
ljmp
push
data16
daa
mov
mov
push
sahf
pop
sbb
mov
mov
incl
and
or
pusha
data16
dec
insl
sahf
lock
mov
dec
fistps
std
aaa
adc
xor
icebp
dec
sti
push
mov
lret
xlat
xchg
xlat
lea
mov
mov
loopne
push
mov
xchg
sub
xor
lods
jo
pop
mov
cmp
adc
add
notb
out
xchg
jno
fmull
movb
push
sbb
jecxz
popf
mov
sbb
test
adc
popf
push
mov
popf
aam
scas
add
cmp
push
mov
data16
mov
aas
out
push
in
xchg
jle
negl
add
out
outsl
lahf
scas
inc
test
mov
xlat
push
or
jbe
jo
jl
mov
les
out
ds
repz
push
lods
cs
dec
and
ljmp
inc
test
mov
lcall
mov
loope
mov
loop
cmpsb
shlb
mov
dec
pop
jae
dec
mov
leave
and
and
pop
popa
lret
push
mov
icebp
ljmp
fstpl
fnstcw
cmp
sbbl
and
aas
cld
lods
push
aad
iret
mov
inc
pop
lock
pop
dec
mov
into
xchg
push
adc
mov
pop
xor
out
xor
push
icebp
sub
pop
aam
mov
fbld
pop
test
insl
cwtl
add
leave
mov
iret
fiadds
loope
loope
mov
lods
movsb
gs
push
ja
dec
inc
inc
mov
push
mov
xor
in
sbb
rol
xor
push
xor
mov
add
sahf
push
aaa
mov
cmp
sahf
sbb
push
inc
pop
out
jo
int
clc
lods
mov
fmuls
mov
repz
mov
fistl
test
in
xor
loopne
hlt
mov
add
fisubs
sbb
daa
pop
test
add
pusha
lea
jmp
lcall
subl
sbb
xchg
inc
daa
jne,pn
stc
in
int3
ljmp
aaa
ss
push
arpl
aaa
pop
fidivrl
adc
mov
outsl
cmpsb
nop
fisttpl
cmp
mov
mov
daa
out
and
xchg
inc
sub
ss
sub
jecxz
sub
ret
pushf
adc
push
hlt
and
lea
in
mov
fwait
inc
xchg
cli
pop
rorb
pop
xor
mov
mov
mov
jne
sarl
xchg
lcall
mov
push
pshufw
shlb
or
add
mov
push
stos
ret
xchg
shr
fdivrs
xchg
mov
aam
jl
addb
shl
mov
or
mov
add
push
jno
adc
lods
mov
repz
adc
cmp
sbb
mov
pop
scas
test
add
cmp
mov
mov
push
lret
mov
scas
repnz
repz
daa
out
fistpl
aas
out
cs
jne
test
insb
fisttps
lahf
adc
mov
jmp
arpl
movsl
xorb
dec
jno
xchg
adc
test
iret
fadd
stos
test
rcrl
jle
inc
mov
jns
jmp
sbb
idivl
and
mov
xlat
test
js
cmp
scas
ret
jg
jne
lods
and
pop
push
int
call
in
jne
pop
out
dec
sbb
sbb
loopne
pop
cmc
push
es
cmp
push
fnstenv
push
push
js
mov
pop
dec
test
fs
pushf
jae
and
add
lahf
sbb
jnp
adc
or
jb
imul
push
test
dec
enter
and
mov
adc
pop
or
data16
xchg
add
cmpsl
xor
arpl
nop
loopne
es
xor
repz
mov
lea
cmp
into
xchg
dec
mov
mov
mov
pop
shlb
cmp
mov
flds
push
sbb
dec
mov
ret
sub
sbb
scas
push
popa
inc
pop
xchg
push
aam
pop
jcxz
shrb
hlt
rorb
pop
dec
sti
fsubl
movsb
sub
xchg
shl
cltd
lds
pop
nop
mov
xor
and
sub
jp
inc
les
add
xor
loop
outsl
mov
out
ja
sbb
xor
xchg
imul
cli
ljmp
fldt
loop
imul
push
xchg
andl
cmpsl
mov
cmp
cli
inc
lret
mov
add
loop
and
xchg
mov
xchg
xchg
add
bnd
int
mov
jecxz
es
pop
dec
ret
push
push
jbe
jo
ljmp
inc
fwait
jo
lods
dec
mov
js
pop
or
mov
aam
addr16
jne
and
sub
mov
inc
mov
mov
add
mov
cwtl
or
iret
and
sub
cmp
mov
pop
fisttpll
ror
jne
leave
or
jne
cmovs
xor
mov
and
xor
and
pop
call
sarb
sarb
mov
jno
cmc
arpl
aas
cld
mov
jbe
jae
mov
sub
fs
fcmovnbe
sub
test
out
sub
cmp
sbb
fildl
inc
xlat
cmp
mov
and
xor
pop
je
into
push
pushf
mov
jbe
cmpb
pop
jb
cld
jne
dec
out
or
mov
sbb
adc
pop
sbb
popa
imul
shrb
dec
pop
mov
fbld
outsl
adcb
lock
popa
mov
add
xor
and
push
push
jo
and
or
enter
lods
aaa
xchg
mov
adcb
xor
pusha
mov
cmpsl
scas
ficompl
neg
push
movsb
mov
xchg
push
inc
mov
mov
sbb
test
mov
jl
les
aaa
lds
test
adc
push
shll
hlt
jno
xor
sub
mov
push
nop
jns
sub
pop
scas
je
mov
push
ljmp
dec
mov
sbb
inc
cld
xchg
sub
add
xchg
mov
xlat
lds
mov
dec
xchg
mov
sub
or
mov
adc
fisubl
cmp
movsl
subb
pop
push
flds
xchg
sub
mov
jb
mov
vmread
cli
add
fwait
jg
ja
push
mov
pushw
pop
adc
add
jmp
mov
scas
jo
in
ja
mov
mov
xchg
aas
fidivrl
mov
mov
mov
fstpl
ret
push
bound
lock
cmpl
push
cmp
jge
cmp
mov
mov
jp
pop
fwait
dec
fiaddl
rol
lcall
jmp
or
push
sub
mov
cmpsl
loop
loopne
adc
int3
ss
sahf
pop
clc
movsw
xor
and
inc
cs
xchg
jl
push
bound
cltd
pushf
mov
cmp
adc
aad
mov
bound
jl
in
push
adc
out
mov
leave
ss
test
or
dec
iret
repz
or
sub
mov
mov
mov
clc
xor
sahf
fnstenv
xchg
xchg
ljmp
xchg
shlb
jle
pop
jge
test
xchg
stos
add
out
cs
xchg
stc
ret
out
dec
sti
mov
mov
mov
push
pop
daa
js
jmp
stc
and
mov
sub
dec
leave
sahf
sbb
add
mov
hlt
cld
das
mov
mov
or
jle
pop
fcompl
push
xlat
sbb
scas
aad
loopne
adc
in
fsubrs
shl
inc
cmp
dec
cmp
and
aam
ret
sub
mov
cli
iret
mov
mov
sub
mov
mov
loop
cmc
js
jns
aam
int
inc
mov
icebp
stos
ss
inc
xlat
dec
shl
jbe
mov
push
inc
and
xor
mov
pop
ret
test
xor
ret
dec
push
push
jecxz
fnstsw
or
lods
pushf
mov
daa
lea
xor
rolb
mov
scas
js
loopne
scas
ret
and
mov
mov
scas
pop
pop
gs
add
in
mov
scas
inc
inc
and
aaa
dec
jnp
jge
xchg
jne
movlps
xchg
arpl
mov
ja
xchg
dec
push
sub
xchg
in
ja
dec
dec
jl
out
loop
mov
scas
jb
add
push
add
lret
andl
js
out
sbbl
pop
lret
xchg
sbb
mov
mov
ljmp
stos
inc
pop
mov
std
xchg
hlt
sub
lcall
pop
push
sarl
xchg
cmp
mov
add
mov
or
add
lret
in
ja
data16
sbb
std
andl
mov
ficoms
mov
outsb
mov
or
data16
sbb
fists
mov
push
data16
jns
test
xchg
in
int
rorl
mov
xchg
inc
jae
mov
add
stos
jecxz
cmpsb
repnz
xchg
ds
imul
xchg
lahf
lea
jecxz
test
cld
mov
or
mov
hlt
pop
lods
mov
sbb
test
sub
or
jne
sbb
xchg
xor
mov
ds
mov
pusha
push
dec
push
mov
or
repnz
add
bound
gs
in
out
mov
add
mov
jmp
repz
mov
cmp
sti
add
stos
test
ss
xchg
cmp
pmaxub
out
test
push
mov
cltd
xchg
mov
mov
xorl
pop
insl
inc
xor
decb
jnp
jnp
adc
pop
jp
int3
sub
jae
fcomps
filds
ror
subb
mov
add
imull
pop
xchg
inc
adc
mov
stc
out
pop
lahf
cmp
sbb
jne
mov
cmp
std
mov
push
mov
imul
cmpsl
pop
inc
mov
imul
dec
push
fsubrl
pop
pushf
movsb
aad
jp
mov
sarl
mov
jae
jmp
mov
add
xor
scas
out
pop
cmc
in
sub
test
repz
inc
sbb
lcall
cli
fs
insl
adc
call
xor
xchg
test
and
adc
push
subb
enter
hlt
or
sub
mov
xchg
mov
xchg
push
adc
ds
mov
and
adc
faddl
mov
shrl
inc
jne
ja
icebp
test
and
fs
cmpsb
mov
push
xor
arpl
lahf
mov
popf
popf
in
jg
sbb
cmp
scas
push
je
inc
adc
adc
cltd
fldl
sahf
xchg
repz
sub
xor
shlb
rorl
mov
mov
pop
imull
jmp
in
pop
inc
cmp
lods
cmp
sub
lcall
movsl
in
ss
das
pop
enter
lods
mov
adc
imul
pop
xor
adc
xor
cwtl
std
push
cmp
jle
enter
sti
mov
mov
or
pop
cmp
xor
bound
mov
xchg
aas
nop
outsl
clc
notl
hlt
aas
negb
mov
enter
add
or
xor
fdiv
xor
mov
mulb
ss
into
jmp
adc
popf
sub
dec
inc
clc
stos
mov
ret
lret
jno
jp
gs
cld
fistps
loop
add
pop
inc
push
aas
iret
call
cmp
push
in
push
aaa
movsb
jno
inc
psrad
cmp
testl
xchg
xor
cmp
mov
rorl
in
idivl
test
push
psubb
pusha
pop
pop
loop
add
cmp
lret
and
pop
lock
lret
stos
jge
lock
clc
mov
and
xchg
sub
outsb
push
cltd
sbb
add
or
in
negl
addr16
test
push
push
iret
pop
mov
pop
shl
mov
popl
loop
notrack
mov
jl
mov
out
and
shl
adc
sbb
pop
and
nop
add
push
xor
sbb
inc
jmp
fldt
imul
ja
pusha
sbb
mov
adc
cltd
int3
arpl
aas
mov
and
jge
fdivrl
or
cmp
in
pushf
jo
jb
aaa
mov
cmp
cmpsb
sub
cmp
pop
dec
jl
imul
push
mov
shlb
sbb
push
mov
sbb
ret
pop
mov
pop
mov
mov
imul
sti
jns
fistl
lret
jae
fstp
sub
jne
sub
jnp
adc
xchg
hlt
loope
shll
cmp
cmp
cwtl
jnp
scas
int3
adc
push
repz
dec
xor
arpl
mov
add
loopne
ret
mov
bound
lcall
xchg
fstl
mov
outsl
inc
lahf
mov
je
popa
push
insl
mov
gs
cmc
mov
jo
subb
mov
jne
ss
mov
mov
es
addr16
add
cmp
cmp
loop
adc
lret
add
inc
and
adc
jnp
lret
nop
ja
pushf
adc
push
movsl
dec
ret
lahf
inc
mov
xrelease
mov
loopne
sbb
sahf
cmp
pop
cwtl
bound
mov
add
orb
mov
push
sub
cmp
popa
enter
ljmp
jno
lods
cmp
jo
jnp
test
aam
mov
jmp
adc
pop
add
mov
call
lods
or
sbb
movsl
sub
ja
and
xor
xchg
push
testl
rorl
ret
arpl
dec
sub
jae
cmp
ds
and
in
xor
or
push
adc
cmpsb
pop
mov
gs
sbb
pop
leave
arpl
mov
sbb
mov
push
lahf
sub
lret
sti
mov
adc
aaa
mov
gs
ret
ret
fisttps
lahf
loope
xchg
popf
fsts
jmp
adc
cmp
jge
sub
je
js
mov
sbb
mov
imul
sbb
imul
mov
push
test
mov
sub
test
jne
mov
adc
inc
inc
fcoml
push
ret
sbb
pcmpgtw
lret
sbb
mov
shlb
inc
pop
call
mov
hlt
cmp
test
scas
and
xor
sbb
inc
or
test
cmp
pushf
fcmovu
jmp
shrl
loopne
idivb
mov
add
sbb
addr16
test
inc
inc
lock
mov
sbb
adc
stc
fcompl
mov
mov
cs
dec
ret
sti
lods
clc
push
push
std
loopne
aas
xchg
inc
daa
repz
ds
clc
add
mov
ficompl
or
and
push
daa
jno
mov
cltd
cli
cmpsb
jb
and
sahf
stos
insl
xchg
jne
sbb
add
ljmp
cs
push
jae
neg
sub
xchg
test
fistl
shrl
in
and
push
jecxz
jp
and
stc
mov
int
out
sub
mov
adc
pusha
add
jge
sub
inc
xor
ljmp
les
dec
mov
orl
loope
dec
xchg
pop
cltd
inc
daa
data16
push
fdivs
jmp
xor
push
push
xor
cwtl
jnp
outsl
cli
loop
sub
mov
pop
rcl
jg
sbb
jge
lret
cltd
dec
mov
or
push
stc
icebp
xchg
pop
lds
pop
mov
cmpsl
mov
pop
ret
fidivs
std
add
add
fs
int
jns
mov
inc
aaa
mov
jo
int
scas
outsl
ret
mov
mov
sub
fsubs
in
mov
mov
xchg
pop
mov
push
sbb
fnsave
push
inc
mov
push
xchg
es
leave
xchg
lret
std
repnz
loopne
ja
jne
and
or
cld
lret
xor
mov
into
and
push
lods
lgs
sbb
jge
mov
sti
les
adc
sbb
push
dec
dec
loope
or
cmp
iret
insl
shll
mov
rorb
in
movsl
repnz
mov
dec
add
lds
test
test
fiadds
in
shll
mov
pop
jl
cmp
sub
repz
cmpsl
xlat
into
ss
sub
sbb
ds
sahf
sbb
sub
stos
idivl
dec
add
std
jmp
jb
cmp
mov
jmp
adcl
xchg
cmp
dec
outsb
and
mov
push
mov
mov
jno
cwtl
cmc
cmp
mov
add
std
test
rorb
inc
ret
in
ljmp
jmp
pop
popf
out
add
inc
jmp
pop
push
sbb
jecxz
rolb
cltd
mov
jbe
inc
mov
push
into
loop
dec
shlb
outsb
mov
cmc
mov
jp
xchg
loop
dec
sub
cmpsl
popa
dec
pop
insl
pop
or
ss
je
dec
bnd
pop
xor
iret
and
bound
xchg
xchg
lea
fs
movsb
in
push
pop
mov
test
enter
test
jb
gs
popf
mov
notl
xor
mov
enter
dec
lea
cmp
add
lock
xchg
nop
insl
outsb
push
mov
sub
cwtl
xchg
xor
arpl
mov
sub
insl
fcomip
shll
or
sbb
xor
loope
scas
pop
inc
ret
and
aaa
mov
outsb
and
stos
in
xor
lret
stos
mov
sub
orb
push
outsl
pusha
repnz
jl
cmpsl
inc
sbb
add
mov
xor
and
rcrl
xchg
sub
xlat
cmp
divl
xchg
mov
call
cli
adc
sbb
cmpsb
sub
xchg
test
insl
cmc
inc
jne
mov
adc
lods
lahf
adc
xchg
cmpsl
xor
sub
pop
or
aad
mov
loopne
scas
push
xor
cmpb
movsl
fs
jns
jb
stc
iret
insl
aaa
shll
cmpsb
ret
test
rclb
mov
mov
mov
adc
icebp
movsl
mov
fisubs
dec
stc
lock
cmp
movsb
outsb
flds
mulb
inc
mov
cld
shrb
inc
ds
insb
fsubs
nop
arpl
xchg
push
or
adcb
or
xchg
push
hlt
sbbb
dec
push
mov
cmpsl
mov
inc
icebp
push
cmp
cmp
jno
mov
and
arpl
arpl
popa
jnp
lea
sti
mov
sti
aaa
push
cld
pop
cmp
mov
pushf
mov
jecxz
or
sub
fisttps
ss
pop
push
ljmp
jnp
or
stos
add
jg
pop
pop
push
ret
call
arpl
push
repz
inc
nop
mov
mov
outsl
add
sub
call
jno
push
adc
lock
inc
into
sub
call
push
test
or
push
stos
fistpl
add
lahf
shl
xchg
adc
ret
push
rcrb
push
adc
push
cmp
fsub
daa
jbe
mov
jp
scas
jne
pop
pop
adc
mov
aas
test
iret
or
and
lcall
xchg
jno
xor
pop
xchg
jp
lret
or
cmpsl
or
push
pop
sub
add
push
xchg
dec
mov
push
fisubl
jmp
xlat
pop
dec
fucom
inc
cli
lcall
push
lea
mov
or
nop
fnstcw
outsl
fs
lock
insb
ret
push
gs
and
test
xor
cs
scas
pop
push
sbb
filds
mov
mov
aad
mov
xchg
loop
pushf
push
outsb
js
ss
lea
les
jne
popa
pop
test
adc
outsb
fstpt
push
pop
out
std
mov
dec
sti
lret
sbb
xchg
or
push
into
fsubrs
lahf
mov
ljmp
fnclex
adcl
stos
and
cmpsl
jg
xor
mov
insl
dec
mov
and
test
push
push
and
sbb
jne
xchg
pop
inc
outsl
dec
dec
dec
xor
mov
pop
mov
icebp
fldt
iret
xlat
in
adc
push
std
adc
stos
xchg
mov
cmp
mov
lret
xorb
xchg
mov
test
dec
into
rdpmc
jae
or
jp
mov
jg
and
sti
aad
cmpsl
lret
mov
cmp
sub
dec
mov
mov
sub
sub
cmp
fldcw
cmp
push
fdivrs
es
dec
call
adc
dec
movsb
loope
mov
fiadds
or
mov
add
test
mov
cmp
push
xor
mov
cmpsb
mov
rol
xchg
inc
mov
leave
addr16
das
data16
inc
stos
fdivr
xchg
jp
jmp
xchg
ds
hlt
xor
lea
and
lods
xchg
mov
push
vmread
pop
lods
push
decl
mov
rep
cmp
sbb
int
xor
loop
mov
add
sbb
rcll
mov
jmp
push
imul
cmp
dec
cmp
jmp
push
std
faddl
pusha
call
pop
jbe
nop
sbb
jb
das
lret
sti
ljmp
daa
pop
aam
mov
es
mov
les
push
inc
sbb
ss
in
jno
pop
aaa
ja
in
or
test
movsl
add
push
jne
popa
mov
mov
pushf
test
cmp
push
test
jb
inc
xorb
popa
xor
addr16
mov
mov
movsb
dec
out
mov
cmp
mov
jb
arpl
push
inc
mov
fnstsw
fiaddl
inc
aam
insl
ror
inc
push
push
das
cmp
dec
scas
cmpsl
sub
ljmp
rol
sahf
pop
jle
pop
pop
fadds
or
dec
out
fidivl
pop
inc
xor
out
add
xchg
mov
or
in
iret
rcrl
or
fdivl
mov
aaa
imul
ds
and
add
mov
inc
test
xor
adc
popf
push
imul
push
xor
jnp
pop
or
fmul
aaa
pushf
mov
mov
repz
test
push
sbb
lods
sbb
push
aas
cmp
int3
inc
icebp
and
xchg
sahf
xor
mov
imul
mov
imul
pop
aaa
cmpsb
int3
inc
out
and
icebp
push
std
push
dec
fisubs
sub
inc
xchg
fidivrs
push
lret
dec
push
cs
or
jno
pop
mov
jb
ljmp
ds
adc
adc
or
insb
mov
loope
pop
push
lcall
mov
int
ret
jmp
mov
out
pop
iret
inc
jmp
bound
dec
mull
sbb
repz
jecxz
dec
aaa
mov
push
xchg
lods
pop
cwtl
xlat
aad
mov
mov
int3
inc
sub
lods
movsb
pop
or
pmuludq
leave
out
xchg
mov
in
movd
mov
movsb
insb
pop
ja
iret
xchg
mov
sbb
push
push
push
xchg
push
lret
adc
lods
outsl
mov
pusha
mov
xor
loope
mov
xor
jmp
add
stos
pop
dec
cmp
cmp
int3
push
incb
lcall
js
mov
or
cmpsl
dec
stos
arpl
das
pop
jge
cwtl
das
loop
add
add
aas
mov
rcrl
cli
mov
push
sbb
les
jmp
and
les
mov
jge
dec
mov
bound
cld
jb
and
fwait
dec
adc
stc
mov
and
mov
or
xchg
cltd
mov
clc
add
test
loopne
jno
jecxz
mov
sar
lcall
testl
je
xchg
adc
test
fcompl
das
xor
out
das
adc
pop
scas
out
sbb
je
mov
sub
into
cmp
lods
fisubrl
lret
daa
repz
pop
testb
jno
stc
pop
cmpsb
cmp
jne
mov
in
adc
repnz
xchg
and
jns
mov
mov
iret
test
loopne
adc
jl
jmp
daa
lcall
fwait
mov
mov
sbb
push
movsb
xchg
inc
testb
in
xchg
popf
pop
std
cmpsb
notb
ja
imul
jmp
pop
inc
cltd
scas
push
adc
mov
or
inc
and
xor
xor
out
inc
dec
push
lds
push
and
mov
pop
out
xchg
xor
ja
inc
jmp
sbbl
or
push
inc
in
dec
fcoml
insl
movsl
shll
jnp
mov
es
loope
cli
pop
xchg
dec
sbb
bound
xor
pop
sub
lock
jnp
inc
mov
sbb
testb
xchg
push
jle
sti
lock
sar
sub
loope
xchg
cld
ljmp
cmp
cwtl
xlat
in
cmp
xchg
or
in
bound
mov
fcmovu
lock
jp
imul
imul
add
iret
std
ss
out
sub
add
inc
jl
jns
push
testb
xchg
jge,pt
pop
scas
pop
jnp
cmc
inc
cli
cs
hlt
mov
decl
insb
rcrl
movsl
fldcw
or
stos
mov
inc
push
inc
repz
cwtl
lcall
imul
stos
jecxz
stos
lret
xchg
inc
andb
fstps
dec
jbe
out
rcrb
mov
outsl
or
mov
push
sub
scas
or
push
xchg
or
scas
ret
cld
es
pop
mov
lcall
jmp
addr16
loop
out
jl
cmp
adc
push
and
inc
xor
dec
xor
dec
sbb
stc
cmp
inc
stc
mov
lock
and
into
daa
and
ss
bound
push
sarl
inc
inc
cld
jmp
stc
or
out
mov
shrb
and
mov
aam
adc
in
leave
call
ss
pop
xchg
pop
fstpl
fiadds
pop
rol
mov
inc
push
ror
dec
pop
mov
fcmovnbe
pop
mov
mov
add
sub
mov
in
out
lcall
shll
test
adc
dec
fsubr
iret
divb
inc
lahf
dec
dec
sub
and
add
fdivl
mov
xor
mov
mov
and
bound
mov
sbb
jb
push
push
or
mov
mov
xor
in
rcrl
mov
sub
fcmovb
out
cltd
je
mov
mov
subb
mov
test
lods
sbb
out
mov
pop
imul
fiadds
lds
out
into
filds
mov
cmp
xor
mov
mov
mov
push
mulb
dec
mov
inc
mov
test
push
adc
sarl
xchg
xchg
fwait
sbb
xchg
push
mov
sub
cmp
mov
dec
dec
je
mov
popf
incb
daa
hlt
sub
loopne
das
test
sbb
stc
in
int3
movsb
xchg
fiadds
outsb
bound
mov
nop
and
sub
mov
insb
inc
idiv
pop
push
subb
sti
aas
imul
movb
mov
sub
lods
push
es
push
adc
ficomps
sub
adc
inc
insl
mov
add
mov
scas
mov
or
lret
add
scas
adc
bound
out
sub
mov
decb
pop
pop
mov
lret
push
ret
inc
cld
sbb
adc
push
sbb
int
jge
sbbb
shlb
movsl
or
mov
rcrl
push
mov
lods
fwait
jmp
cwtl
fistps
loop
mov
adc
sbb
xchg
filds
xor
shl
je
mov
cld
aam
dec
cmp
cmp
sahf
sbb
inc
push
cmpsl
jae
int3
lods
lea
adc
push
push
or
fnstenv
fildl
sbb
pop
adc
dec
jne
jmp
xchg
inc
and
sub
add
js
jle
mov
loopne
lea
and
or
cs
sub
out
xchg
lds
iret
popa
call
dec
aaa
mov
mov
and
test
sub
in
sarb
lods
mov
out
leave
imulb
xor
sbb
das
je
lret
aas
movsb
dec
sbb
or
es
xchg
xor
push
sub
popa
push
fst
jno
add
call
les
dec
mov
jg
mov
jne
add
xlat
xchg
dec
nop
arpl
xchg
push
or
or
push
loop
imulb
mov
mov
ja
ja
popa
pop
ret
leave
popa
movsl
mov
lds
jnp
cmpl
sbb
sbb
jb
adc
or
inc
push
push
out
pop
jg
and
repnz
mov
xchg
lods
jmp
insb
add
mov
rcr
mov
mov
jmp
mov
mov
jo
xchg
xor
lret
jmp
outsb
je
pushf
pop
mov
cmp
mov
ljmp
fstl
shlb
inc
bound
jne
xor
xchg
push
xchg
mov
stc
xchg
xchg
lds
jnp
sub
push
rcrb
fmuls
xchg
shr
sbb
mov
dec
pop
push
fstps
lahf
sbb
add
fisubrl
adc
dec
scas
shll
or
push
jnp
xchg
dec
push
movsl
fwait
mov
inc
scas
sub
sar
mov
jno
in
dec
ret
gs
loop
lahf
mov
shll
xor
add
inc
rcrl
jne
scas
aad
ljmp
pusha
mov
sub
push
outsl
fwait
enter
cwtl
aas
enter
fwait
in
addr16
pop
imul
jno
adcb
mov
in
inc
cmp
xor
sbb
loope
cltd
test
lret
xor
stc
gs
mov
pop
outsl
mov
cmpsb
adc
das
pushf
xlat
inc
pop
mov
jg
sbb
mov
outsb
cmpsl
push
jbe
adc
push
xor
lret
sbb
bound
cmp
sbb
cwtl
popa
lods
and
dec
add
stos
sub
scas
jecxz
les
xchg
cmp
insl
aam
inc
outsb
cld
inc
pusha
outsb
mov
mov
adc
mov
push
shlb
push
repnz
pop
adc
bound
xor
pop
mov
cmp
popl
enter
push
pop
adc
movb
or
add
mov
lahf
add
jb
lock
lea
jnp
imul
cmp
mov
insl
jl
jmp
and
cli
mov
pop
and
jne
jae
ds
lret
rolb
shll
cmp
into
fwait
lret
push
popa
call
rorb
dec
out
rclb
and
dec
insb
inc
int3
mov
dec
rclb
je
pop
cmpb
sub
out
icebp
pop
scas
xchg
fmuls
lret
mov
lret
jg
dec
cmpsl
mov
sub
mov
sub
inc
adc
jle
add
js
jmp
pop
test
sub
insb
imul
in
or
jg
xor
sub
jge
clc
gs
jle
in
mov
pop
shrb
js
iret
jmp
shl
call
in
aas
inc
out
mov
loopne
stos
fcomp
xor
lock
and
sub
push
pushf
mov
aaa
std
rorb
mov
roll
sbb
mov
mov
mov
clc
scas
out
sti
xor
int3
cmp
inc
or
loope
test
and
and
cmp
je
jmp
sbb
add
fsubp
add
inc
jae
rclb
test
dec
mov
dec
adc
mov
mov
sbb
or
insb
loop
idivl
and
test
add
xor
int
inc
cld
cmp
ss
push
xor
clc
jae
ljmp
fdivrl
inc
call
jge
pop
fistpl
stos
scas
scas
popf
mov
jmp
mov
push
cwtl
push
add
ljmp
adc
xchg
adc
test
mov
cltd
inc
test
sti
lea
mov
inc
xor
cli
jg
pop
dec
sbb
cmc
in
lahf
divl
mov
adc
fcomi
mov
cmp
inc
out
inc
test
push
add
xor
mov
sub
push
je
inc
dec
lret
adc
add
leave
lods
xchg
das
nop
adc
movntq
pop
jnp
mov
pop
loopne
cmp
cld
add
xchg
aad
out
pushf
mov
in
mov
and
rcrl
or
dec
lahf
add
jmp
lret
or
es
scas
and
hlt
pop
pushf
dec
pop
and
popf
les
pop
data16
rcrl
out
mov
push
xchg
jle
xchg
in
add
in
out
nop
push
push
sbb
std
fisttpl
xchg
jbe
aaa
and
and
shl
aaa
movq
xchg
xor
cli
outsl
jns
mov
pop
mov
xor
mov
mov
sti
push
dec
into
sbb
mov
push
or
jae
scas
mov
gs
in
xchg
iret
xor
les
push
fildl
clc
lahf
adc
mov
xchg
pop
fadds
jge
ss
daa
icebp
fistl
ljmp
in
jnp
push
jns
dec
out
mov
sti
mov
insb
pop
je,pt
mov
fnstcw
in
pop
mov
je
jbe
fisubrs
push
dec
jae
popf
std
in
dec
jmp
push
inc
mov
je
mov
jnp
mov
incb
scas
or
sbb
sbb
pop
jo
jecxz
ljmp
jae
jecxz
adc
in
fcmovne
fstp
fnstcw
addr16
adc
add
pop
in
xor
nop
cmp
ret
pop
cmp
or
fdivrl
fistps
dec
out
xchg
sub
xor
xor
movsb
xor
mov
xchg
test
push
dec
mov
xchg
inc
sbb
adc
int
cmpsb
stos
jmp
jmp
mov
mov
ss
xor
insb
jns
out
cmp
jmp
dec
sbb
int
push
jl
mov
xor
dec
xor
inc
jns
mov
out
shr
adc
paddsw
adc
push
xchg
js
add
fs
aas
mov
subb
rcrb
out
or
es
fs
ds
mov
sub
push
jle
ds
popl
fs
mov
dec
sub
ficompl
jl
cmpl
imul
iret
inc
mov
ljmp
pop
inc
nop
jl
sbb
daa
jo
add
cld
jbe
xor
sub
mov
pusha
mov
or
fcomip
xor
cmp
pop
ljmp
inc
stos
xlat
outsl
xlat
add
sub
pusha
lret
adc
imul
loopne
lret
xchg
les
fdivr
xchg
aaa
dec
dec
dec
mov
push
test
lods
pop
outsb
dec
andb
inc
test
mov
je
jmp
xchg
pop
pop
cmp
mov
xorl
pop
roll
mov
shll
cmc
and
or
dec
loopne
push
mov
std
cmp
pop
adc
lea
mov
mov
pop
inc
fsts
mov
push
inc
fadds
xchg
pop
dec
xor
or
xor
adc
adc
pop
mov
mov
lret
sub
cmc
insb
adcl
enter
push
mov
xor
outsb
xchg
push
mov
cmp
sbb
xchg
cmpl
add
insb
ljmp
movsl
int
call
into
adc
sub
cmpsb
stc
mov
addr16
jb
inc
push
jae
pop
xor
cmp
in
pop
jecxz
addr16
dec
lds
fldenv
sub
push
cmp
mov
mov
lahf
lods
clc
ds
mov
movsb
fs
or
test
rorl
cs
inc
ret
push
inc
inc
ja
dec
dec
push
dec
stc
jge
stos
mov
test
cmp
add
xchg
jg
fstps
pop
pop
sub
cli
sahf
in
adc
shll
movsb
or
sbb
push
jge
jl
xor
data16
adcb
add
dec
add
pop
push
loopne
mov
jp
in
lds
xor
out
xor
in
outsb
sbb
repz
dec
out
mov
popa
in
adc
cli
fdivrl
shrb
push
sbb
enter
jbe
mov
jo
ja
pop
test
enter
xorl
add
iret
xchg
cmp
mov
cmp
jp
fistps
and
mov
scas
stc
mov
cld
sbb
xor
sbb
pop
inc
dec
push
xlat
test
adc
lea
sub
jecxz
cli
sbb
cmp
cwtl
mov
daa
movsl
inc
push
cld
icebp
inc
dec
adc
int
imul
mov
cs
inc
sub
mov
mov
jle
inc
push
les
ds
roll
adc
aaa
or
xchg
inc
jbe
adc
mov
inc
stc
mov
sub
xlat
sub
imul
fadd
adc
push
insl
jae
sti
dec
repz
jbe
stos
ja
jmp
cltd
add
jmp
mov
lret
jecxz
or
frndint
xor
faddl
dec
lcall
and
mov
mov
xor
idiv
inc
gs
inc
cmp
adc
cmpsl
sti
sarb
mov
xchg
and
imul
adcb
fists
or
push
push
push
mov
enterw
fdivl
out
sbb
pop
xchg
js
aas
add
push
lock
mov
push
popa
inc
sar
jb
fidivrs
mov
mov
sbb
mov
je
ret
je
ljmp
scas
addr16
jp
ljmp
xchg
mov
lds
mov
dec
repz
out
cmovnp
mov
aas
mov
xor
test
ret
test
mov
cs
sahf
mov
sbbl
ficompl
cmp
fdivrp
ret
inc
cmp
imul
loopne
xchg
adc
xor
scas
out
push
pusha
or
insl
inc
inc
les
mov
push
adc
jno
push
jbe
push
into
aas
inc
cs
xchg
and
out
out
dec
or
push
fnstcw
frstor
and
test
pop
std
movsb
outsl
xchg
stos
xor
bound
outsb
inc
adc
mov
int
cmp
mov
add
pushf
ljmp
mov
int
sbb
jnp
adc
cmpsb
ret
jecxz
cmpps
jle
and
mov
shll
and
inc
in
push
mov
inc
out
outsl
ds
xchg
jg
mov
inc
add
insb
stc
aad
xchg
cld
jnp
jl
subl
cmpsb
sbb
call
cs
inc
cltd
nop
int3
aas
push
shlb
lret
psraw
mov
jle
sbb
push
shl
scas
hlt
xor
pop
jg
mov
in
and
enter
xor
sbb
and
call
dec
mov
xchg
out
lods
jge
and
jg
sbb
jns
out
adc
arpl
push
mov
xor
popf
out
adc
xor
inc
aaa
loope
fidivrl
adc
jno
xchg
and
mov
orl
sbb
push
shrl
enter
addr16
pop
insl
sahf
mov
lock
mov
es
incl
fstps
inc
movsb
repnz
data16
pusha
adc
push
scas
push
and
lods
ljmp
fidivrs
pop
cmp
cmpb
push
lods
jo
ret
pushf
mov
jo
mov
cltd
push
mov
imul
cmp
testb
fimuls
xchg
loopne
jbe
sub
daa
inc
rolb
xor
mov
ret
or
testb
rolb
fcomps
dec
test
divl
cmp
or
xchg
int
dec
xchg
cli
xor
lcall
cmp
fsts
xor
adc
out
jb
ljmp
insl
lret
pop
adc
sbb
xchg
jns
dec
mov
xchg
adc
dec
inc
sub
mov
xor
or
stos
inc
cmp
or
shll
mov
jo
push
lea
xchg
sbb
sti
jae
adc
inc
inc
push
dec
in
les
add
add
cmpsl
or
dec
pop
and
dec
arpl
pop
inc
jnp
pusha
pop
xor
dec
movsl
and
loop
push
fists
jae
lret
jp
ret
push
push
mov
push
out
mov
dec
iret
in
test
pop
icebp
cmp
xchg
cmp
loope
rol
rorl
xchg
out
std
jecxz
add
jmp
out
rorl
data16
shrb
inc
loop
push
lds
pop
mov
xchg
ret
cmc
xchg
in
icebp
mov
sbb
pop
pusha
aaa
push
test
ds
mov
pop
in
lds
add
lcall
lret
lea
or
sbb
inc
sub
mov
es
and
arpl
repnz
enter
addb
push
loopne
das
sbb
in
push
mov
sub
stos
jle
movsb
and
adc
cwtl
mov
or
cmp
arpl
mov
shrb
dec
out
push
cmp
jp
testb
daa
push
push
jo
ret
or
add
mov
cvtps2pd
aam
mov
fcoml
dec
add
xchg
ss
jo
mov
xchg
mov
mov
fstps
imul
inc
or
in
in
or
mov
mov
and
sub
movsb
adc
in
sub
xlat
jl
cmpsb
sbb
push
sub
test
sbb
xor
into
shlb
xlat
mov
sbb
add
insl
rorb
ret
pop
dec
insl
add
sbb
insb
ds
xor
aas
mov
cli
mov
push
es
stos
pop
jns
pop
loopne
sub
cld
lret
dec
fstl
aaa
shr
mov
xchg
xchg
shll
jno
pop
insl
push
test
mov
and
or
mov
aaa
shll
lds
out
add
rcrb
das
jno
push
mov
mov
pop
movsl
adc
sbb
into
jno
mov
daa
sbb
sub
cmpsb
lds
xor
sub
xor
xchg
mov
jbe
jle
out
movsl
sub
or
mov
push
xlat
dec
sub
mov
lea
or
push
test
cmpsl
adcb
ljmp
jle
adc
aaa
in
mov
outsb
add
sbb
movsl
ret
leave
and
jne
test
pop
cld
test
idivb
movsl
dec
sbb
insb
aaa
ss
insb
cmp
sub
dec
jae
xchg
inc
aad
pusha
jb
stc
pop
mov
and
fiaddl
sbb
gs
ficompl
sti
jno
shll
xlat
imul
cmp
cltd
pop
lods
in
cltd
leave
stc
shl
int
outsl
adc
xor
insl
sub
mov
icebp
neg
lcall
in
mov
ss
fstpt
divb
stos
inc
icebp
pop
fimuls
fiaddl
test
stos
frstor
mov
and
jb
jns
dec
imul
add
loope
jp
xlat
lods
cmpl
sub
orl
jno
or
out
mov
mov
outsl
fidivrs
pop
add
inc
nop
cmp
mov
or
cli
adc
or
pop
pop
int
aaa
pop
push
stos
and
inc
aad
xchg
dec
mov
cmpl
aaa
adcl
mov
add
lock
pop
push
hlt
sub
lcall
xlat
mov
loope
push
imul
mov
vmovupd
pop
loope
jp
sbb
xchg
fstp
sbb
sbb
jbe
mov
int3
push
icebp
stos
jne
adc
fildll
or
mov
sub
jae
add
addb
jl
push
or
xchg
cli
fwait
sbb
and
xchg
pop
or
rcrl
idivl
movsl
mov
add
or
ss
mov
pop
pop
xlat
push
test
bts
shrl
imul
cltd
and
adc
mov
push
rep
xchg
xchg
pushf
inc
fbld
adc
lock
out
cld
shll
mov
imul
popf
pushf
cmp
add
jo
inc
jp
cmpl
mov
test
inc
sahf
xor
cmp
mov
cwtl
lahf
push
popl
scas
mov
inc
in
jg
dec
data16
push
cs
and
int
repz
adc
sbb
pop
jg
mov
aam
push
js
push
mov
cmp
insb
fisubs
in
dec
in
movsb
xchg
sbb
mov
lcall
mov
lods
enter
push
cltd
xchg
adc
lods
xor
or
rcl
xor
adc
ret
sbb
add
cmpsl
mov
xor
int
jbe
pop
notl
insl
sbb
xchg
fisubrs
sbb
stos
push
iret
js
add
dec
imul
arpl
mov
cli
hlt
subl
imul
movsb
jno
xor
sbb
fimuls
bndstx
mov
xchg
inc
repnz
mov
mov
mov
fldenv
out
ds
mov
out
inc
bound
shll
lods
pop
lods
dec
dec
sub
lret
dec
mov
ljmp
mov
sahf
into
cmp
cmpsl
std
jge
sub
add
lods
lahf
add
nop
sbb
fstl
cmp
mov
push
mov
xchg
aaa
mov
lret
and
outsb
dec
stos
inc
lcall
addr16
lods
sub
xchg
sub
popl
push
mov
mov
mov
pusha
aad
xchg
jecxz
pusha
push
inc
mov
js
pop
lahf
and
shl
sub
push
mov
and
mov
daa
dec
mov
ljmp
and
push
pop
mov
lds
repz
jbe
dec
pop
pusha
push
jne
cmp
push
inc
cmp
mov
jle
dec
les
mov
dec
add
mov
and
or
push
and
pop
xor
mov
or
xchg
fidivrs
push
sbb
cld
push
mov
push
sub
in
test
lret
mov
ret
push
mov
adc
or
icebp
push
stos
lret
in
xchg
mov
pusha
jmp
bound
adc
and
xor
nop
jbe
and
pop
xlat
pop
jo
fcoml
xchg
out
lret
rcll
pop
cld
sub
mov
dec
push
mov
mov
ds
mov
mov
andl
sbb
and
nop
lea
adc
cltd
xchg
rcl
jl
imul
stos
push
outsb
nop
rcrb
dec
jns
sub
mov
mov
xlat
adcb
adc
or
rcrl
out
jle
xchg
fadds
xor
repz
push
xor
xchg
xchg
push
je
push
push
iret
int3
iret
cmpsl
sahf
jnp
out
std
lret
int3
push
daa
sti
cmp
int3
ljmp
sub
push
test
adcl
sbb
mov
mov
pop
scas
mov
add
sub
mov
aas
and
int3
push
sub
or
rcll
inc
and
rorl
cld
mov
xchg
or
xor
mov
sub
pop
stos
mov
shld
xchg
push
inc
fwait
sbb
movsb
icebp
mov
push
and
into
mov
push
sub
xor
add
pop
sub
cmpsl
and
mov
shll
or
sub
aad
jno
xor
aad
dec
xor
mov
or
lods
lret
lods
push
jmp
inc
hlt
movsb
lds
sub
dec
bound
sub
pop
or
mov
xor
and
movsl
jmp
mov
push
xchg
rorl
daa
pusha
into
iret
hlt
roll
xor
test
or
imul
jns
in
out
inc
ret
cli
or
push
xchg
pop
es
inc
dec
je
aam
ffreep
ljmp
sub
es
icebp
fnstcw
stos
sahf
dec
mov
pop
enter
pop
mov
cld
mov
xor
and
lcall
gs
sub
loope
lods
cld
fs
push
ds
shrb
mov
movsl
pop
mov
mov
and
psubq
inc
shl
cld
ficoms
lret
loope
pmaddwd
sbb
loop
cs
lock
cltd
loope
dec
adc
test
xor
xchg
sbb
jo
fsubs
hlt
inc
cmpsl
mov
mov
lret
jmp
pop
call
xchg
adc
jns
fidivrs
pusha
and
cmp
sub
lds
sub
cli
rorb
cmc
std
daa
jns
mov
pop
cmp
pop
push
scas
pop
jl
dec
lahf
pop
sbbb
call
jle
pusha
pop
xchg
xchg
popf
cmp
xor
outsb
push
mov
xchg
ret
cld
sbb
dec
adc
lcall
sbb
popf
scas
mov
pop
test
scas
xchg
insb
and
adc
fimull
in
mov
pop
jae
ret
movsb
or
mov
in
leave
shrl
or
adc
rcll
arpl
scas
pop
jno
cmp
jnp
out
pop
adc
popf
sbbb
insl
jge
orb
stos
mov
cmpsb
mov
sbb
iret
cmp
in
jne
xchg
mov
flds
lcall
aaa
fs
imul
sbb
fs
hlt
jge
scas
scas
xor
es
loope
push
pop
mov
pop
xchg
push
jge
add
jge
inc
repz
adc
imul
xchg
imul
shlb
adc
shrl
push
in
fsubrl
and
xor
loopne
mov
movsb
pop
lock
push
pop
imul
daa
mov
sti
lods
lret
ss
push
mov
jmp
idivl
scas
mov
push
fldt
inc
mov
movsb
in
jnp
push
leave
mov
dec
mov
dec
movsb
fs
xor
in
cmp
add
scas
inc
add
stos
xchg
leave
test
jl
dec
sub
pop
pop
clc
outsb
jbe
ds
sub
mov
mov
enter
or
sbb
js
pop
sbb
in
jo
std
xchg
sbb
xchg
mov
jmp
ds
ficoms
mov
scas
leave
jne
mov
sub
pop
mov
and
add
inc
movzwl
ljmp
test
mov
mov
scas
notb
add
lds
out
in
push
xchg
push
pop
xrelease
fcoml
add
pusha
jae
and
mov
sti
aam
and
sbb
add
sbb
jecxz
fwait
gs
jmp
sub
xchg
xchg
scas
sbb
ficompl
jp
jp
into
xchg
iret
sub
xor
push
jge
outsl
movsb
imul
lods
insb
int3
test
enter
clc
dec
int3
push
les
scas
sub
adc
andb
fistps
fldl2t
pop
cs
pop
outsl
mov
out
xchg
cli
xor
or
and
in
jecxz
and
pop
mov
bound
pop
adc
stc
push
fucomip
add
pop
cmpsl
and
notl
out
stos
mov
imul
xchg
adc
inc
addr16
call
mov
aad
hlt
cltd
jl
mov
fistl
jg
mov
movl
int3
inc
nop
std
into
mov
mov
fiaddl
dec
rorb
enter
mov
push
jbe
cmpsl
shlb
pop
push
in
pop
push
lahf
int
dec
test
push
cmp
das
jmp
aad
pop
push
push
js
ret
insl
inc
xchg
and
xor
call
xor
adcl
cmp
ret
pop
je
pusha
pop
adcl
pop
or
pop
dec
fwait
xchg
mov
mov
mov
out
pop
mov
loope
lret
mull
pop
popa
pop
pop
or
std
sarl
iret
jae
mov
mov
pushf
mov
clc
movsl
push
adcb
ficompl
inc
inc
adc
imul
pop
fildll
sub
sarb
pop
test
call
call
das
gs
insl
sbb
mov
mov
and
jmp
scas
stc
movsl
sub
xlat
adc
xor
scas
shll
add
lds
cmp
xchg
sbb
call
inc
mov
xor
or
dec
fdiv
ljmp
jne
lcall
fcmovb
dec
pushf
pop
movsl
push
lods
mulb
andl
push
mov
pop
xchg
sub
add
sbb
xor
insb
dec
fucomi
push
mov
or
test
ja
add
das
cs
xchg
ffreep
mov
mov
stc
nop
jnp
xor
aaa
test
sub
and
lcall
inc
js
adc
pushl
dec
pushf
loope,pt
xor
outsb
pop
cmpsl
js
mov
or
xor
mov
scas
sti
and
push
push
cmp
enter
lock
sub
enter
repz
jnp
jae
sub
sbb
les
xchg
stos
mov
imul
sbb
mov
xor
and
loopne
outsb
dec
cwtl
and
pop
ss
cmp
xchg
dec
adc
inc
jl
jecxz
mov
jb
ljmp
pushf
xor
mov
int
jo
das
nop
inc
cmp
icebp
es
push
or
dec
pop
mov
in
sub
cmc
out
adc
mov
inc
insb
or
sub
push
data16
movsb
mov
rcll
jbe
jp
out
incl
sbbl
mov
add
bound
and
loop
loopne
jo
lret
or
dec
cmp
lods
mov
inc
shrb
dec
pusha
mov
pop
cltd
mov
pop
pusha
inc
js
mov
push
push
out
dec
mov
faddl
mov
cmp
imul
stos
pop
pop
cmp
push
push
adc
lret
ss
dec
pop
inc
fldt
cmp
cmp
inc
pop
mov
mov
insb
stos
imul
loope
lods
or
mov
fwait
into
incl
sti
clc
and
mov
add
mov
push
mov
into
test
dec
fimull
cltd
mov
sub
jge
mov
test
fildll
mov
ljmp
mov
ja
lret
mov
ja
sub
orl
hlt
jbe
mov
xor
in
fcoms
icebp
mov
pop
xor
xor
leave
or
popa
mov
pop
pop
or
cmpl
dec
fimull
jl
shll
mov
push
adc
lods
arpl
daa
mov
loop
mov
pop
out
sub
lcall
out
icebp
cmp
lock
cltd
mov
xchg
xor
fdivs
pop
jo
xlat
movsl
or
pop
inc
test
xor
cmc
outsl
or
rorb
add
js
adc
dec
push
adc
mov
insl
mov
push
cld
movsl
add
dec
in
inc
pushf
add
out
gs
mov
push
shrb
jl
fnstcw
test
aad
loopne
test
xor
scas
sbb
mov
mov
cmpsb
std
in
xchg
lcall
inc
imul
aas
fwait
ret
push
fiadds
xchg
jne
cltd
inc
push
cmp
add
lahf
es
push
je
and
jle
xchg
push
fsubr
cmp
adc
loopne
out
push
scas
popf
dec
cli
dec
pop
lods
xor
sbb
and
fmul
popf
or
popa
sbb
aad
sub
jl
sub
cmp
push
add
push
sub
sbb
inc
sub
and
adc
icebp
fisubs
dec
je
incl
or
fwait
jbe
icebp
or
jno
sub
ss
movsl
mov
aad
dec
inc
mov
mov
fisubrl
xchg
aad
or
and
lds
movsl
or
insl
jmp
ja
cltd
out
mov
cmp
aam
adc
add
mov
adc
inc
sti
xchg
xor
push
aam
call
pop
negl
add
int
imul
shr
stc
or
push
jge
push
outsl
mov
int3
mov
xchg
testl
enter
pop
ds
xor
add
out
pop
lds
dec
mov
lret
adc
jmp
hlt
sahf
addl
dec
cli
leave
gs
xor
pop
cmp
inc
ret
lret
inc
pop
push
adc
inc
jp
cmp
and
bound
enter
movsl
mov
lock
push
scas
push
pop
push
xchg
loope
repz
pop
pop
xor
mov
add
loopne
jne
out
in
cwtl
stos
dec
outsl
adc
mov
push
mov
dec
insb
xlat
cmp
pop
sbb
xchg
inc
or
add
pop
mov
mov
xchg
push
mov
data16
fcmovnbe
test
out
icebp
inc
mov
or
fnstenv
jne
std
dec
lret
and
and
jb
stc
mov
push
jo
push
daa
mov
and
dec
jle
mov
fldcw
inc
mov
cltd
leave
stos
or
mov
leave
lock
push
repz
adc
cmp
xor
xor
ljmp
cmp
add
pop
xor
ss
lea
lods
pushf
loope
xchg
out
push
fstpl
shlb
add
aaa
push
add
out
mov
aam
data16
stos
xor
adc
push
jne
popa
ficomps
pop
and
sar
test
sahf
cmpsl
adc
dec
cli
inc
hlt
test
add
sbb
cmpsb
loopne
adc
mov
mov
mov
cmp
jbe
andl
xor
and
mov
xor
mov
pop
mov
xchg
lods
pusha
jge
inc
jno
fcmovu
or
xchg
jg
push
and
out
jp
sahf
mov
xchg
fisubl
fwait
jne
mov
mov
mov
cmp
invd
adc
cli
xchg
and
sub
call
push
int3
adc
adc
xchg
push
dec
ljmp
popf
out
outsb
jp
mov
mov
sbb
mov
in
mov
fidivl
rcl
pop
out
mov
dec
mov
cld
lahf
test
lea
inc
jmp
loope
int
push
addr16
ja
mov
cmpsb
inc
out
push
and
adc
int
inc
dec
les
jbe
xchg
aad
inc
loop
mov
jmp
test
shrl
jo
push
mov
das
inc
push
pushw
cwtl
fucomi
push
cmp
int
nop
mov
jg
loop
nop
lret
push
cmp
ret
jle
scas
mov
lea
in
aas
mov
hlt
fnstcw
adc
jne
and
addr16
lods
dec
add
ljmp
jo
jl
ret
stos
aaa
adc
push
mov
jns
or
inc
push
pop
das
mov
inc
lock
push
push
and
jbe
arpl
jge
out
inc
rep
mov
and
dec
call
out
dec
ljmp
add
mov
push
in
adc
adc
add
cli
jno
aad
lret
jl
ds
in
push
into
dec
aad
fldenv
cmp
add
aas
scas
jge
and
pop
outsb
pop
hlt
sbb
test
jg
xchg
mov
sbb
dec
sti
cmpsb
sbbb
cmp
rclb
cmp
dec
push
mov
movsb
pop
mov
xchg
inc
ljmp
cmp
popf
imul
push
jle
fsubrl
xchg
sbbl
pop
xor
or
scas
add
jge
cmp
lea
xor
jb
jne
inc
imul
mov
daa
xor
mov
jecxz
xor
repz
fwait
scas
in
ret
mov
loope
xchg
orps
mov
mov
je
sub
or
shr
testl
out
and
hlt
lret
mov
xchg
push
mov
sub
js
inc
lods
test
add
xchg
and
lds
inc
adc
idiv
sahf
sahf
jo
sub
lods
in
sbb
fidivrs
je
xor
and
or
mov
loopne
test
arpl
lcall
int
icebp
shlb
data16
push
jl
push
mov
nop
and
dec
and
ja
iret
jae
bound
inc
and
sti
lahf
pop
mov
add
mov
scas
pushf
mov
lds
inc
inc
mov
mov
xchg
pop
data16
jg
imul
sbb
mov
mull
cmp
mov
mov
sti
ret
add
loopne
jbe
test
dec
ret
lret
lret
fimull
js
lock
xlat
cmp
mov
shrl
and
and
daa
pop
pop
mov
push
cwtl
and
jne
and
inc
clc
jns
test
xchg
sub
lret
clc
fs
mov
jae
in
cld
pop
add
outsb
out
jno
in
or
cmp
imul
movsb
hlt
lock
test
lds
pushf
icebp
adcl
lods
push
adc
pop
scas
aam
mov
inc
bound
pop
mov
pushf
or
mov
cvtdq2ps
idivb
mov
sub
and
adc
shl
stc
sub
lcall
push
push
mov
call
inc
adcb
inc
sub
outsl
test
cs
adc
enter
fildll
ret
inc
jmp
mov
mov
fimuls
insl
loope
xchg
inc
mulb
mov
insb
shlb
jmp
jmp
pusha
xchg
out
push
int
sbb
call
inc
js
aas
clc
add
xor
shll
cmp
jmp
jmp
mov
adc
nop
xchg
and
and
fincstp
lret
int3
les
jno
mov
jnp
out
loope
cmc
and
inc
and
fdiv
scas
lahf
iret
inc
sub
outsl
add
cltd
dec
jne
mov
imul
fiadds
je
call
jecxz
and
add
sub
mov
sub
stc
push
cmp
iret
js
pop
fcompl
mov
cmp
sbb
movsb
rcrl
test
cmp
xchg
mov
xor
testl
lret
in
js
xchg
adc
push
adcl
mov
ror
pop
xor
popf
dec
stos
xchg
test
mov
inc
stc
lahf
xchg
mov
xchg
inc
adc
fcom
ror
sbb
daa
xchg
xchg
cmp
cwtl
imul
gs
mov
jmp
mov
mov
insl
sub
in
data16
shlb
cmp
inc
mov
movsb
rsqrtps
nop
imul
js
sarb
mov
mov
sarb
xchg
clc
add
sbb
cmc
je
or
cmp
clc
cmp
lcall
addr16
ret
cs
cmp
inc
in
add
mov
or
fwait
sub
or
push
imul
aaa
out
jl
mov
push
sub
xor
mov
aad
in
pop
add
sbb
outsb
sbb
inc
mov
ret
dec
adc
dec
add
out
dec
popl
cmp
sub
shrl
mov
add
cmpsl
dec
es
dec
jne
xor
scas
imull
mov
inc
rcl
jl
xorl
cmp
push
mov
scas
pop
insb
cmp
insb
movsb
bound
pop
mov
dec
pop
xorb
mov
insb
or
insb
mov
mov
cltd
sbb
cmp
push
add
int3
repnz
mov
push
sbb
icebp
xor
icebp
inc
cmpsb
adc
movsb
pop
pop
pop
in
jns
ljmp
mov
fadds
push
mul
or
push
xor
or
mov
addr16
mov
es
mov
rorb
stos
into
notl
ret
push
xchg
inc
jno
jbe
and
cmp
js
scas
sbb
bound
xchg
push
mov
or
fs
push
rcrb
add
cmp
bnd
aaa
pop
jbe
outsb
sub
aas
les
rorl
je
sahf
out
add
cmpsb
js
cs
or
dec
xor
pusha
in
andb
inc
int3
jp
outsb
cmpl
xor
xor
mov
or
pop
test
mov
dec
in
xchg
lret
push
push
cmpsl
ja
mov
ret
mov
ret
pusha
popa
sbb
loope
dec
fnstsw
inc
cli
xchg
adc
lret
outsb
mov
and
cmpsl
add
icebp
sbb
fldt
xor
xchg
int3
cmp
in
testb
push
cmp
xchg
loopne
mov
cmp
sbb
lea
xchg
jge
mov
add
icebp
es
fstpl
push
mov
aam
dec
sub
xchg
hlt
mov
outsb
push
xchg
int
cmp
add
add
mov
mulb
xchg
lret
mov
mov
out
mov
inc
adc
dec
out
addr16
test
pop
mov
xor
adc
ds
pop
pop
mov
xor
or
pop
mov
push
fisttpl
adc
dec
out
dec
stos
test
jg
lds
xchg
xor
mov
sub
mov
lods
sbb
out
inc
mov
mov
add
jle
in
test
test
dec
jbe
and
movsb
das
add
mulb
iret
inc
mov
cli
bound
dec
or
clc
rep
rcl
js
fcomps
xchg
add
mov
pop
cli
pushf
xor
sbb
sbb
dec
mov
push
push
or
inc
mov
das
push
dec
aas
xchg
pop
mov
jmp
ds
stos
aaa
jmp
frstor
sti
mov
and
scas
add
xorl
outsl
pop
ret
xor
mov
dec
pop
and
mov
mov
mov
stos
es
jl
push
out
stc
hlt
jno
inc
mov
in
and
jl
dec
jb
push
jl
mov
roll
mull
push
xchg
adc
pushf
jecxz
dec
pop
pop
adc
stos
gs
mull
add
lret
sbb
push
icebp
out
aas
or
jae
daa
mov
inc
out
data16
data16
lods
pop
jae
or
shl
mov
rcll
shlb
sti
lahf
test
ret
mov
jb
out
jnp
lds
mov
pop
and
mov
aad
dec
pop
push
ret
int3
push
testb
inc
orl
push
inc
xchg
jne
sub
jns
adc
ffree
sahf
pop
push
sub
sub
push
mov
xor
jbe
cmp
jl
inc
xchg
jnp
bound
xchg
pop
jl
xchg
les
mov
mov
test
push
fdivrs
sub
or
int3
mov
pop
push
and
dec
arpl
mov
fnsave
sbb
rolb
je
sbb
scas
sbb
and
into
xchg
or
test
mov
fldcw
loopne
mov
cld
divl
sbb
std
sbb
lds
jp
imul
fcoml
mov
jmp
xchg
pop
cli
jecxz
lret
mov
arpl
lock
xorl
mov
pop
mov
xchg
daa
cmp
sarl
in
inc
cmp
add
sub
xor
and
pop
insl
sahf
mov
and
mov
cmp
inc
and
xor
sbb
mov
sub
jo
enter
mov
xchg
dec
sbb
loopne
and
dec
roll
dec
mov
into
pusha
shll
lods
push
imul
mov
push
sbb
sub
mov
sbb
jg
xchg
jae
and
fsubrs
inc
enter
sbb
push
inc
jae
movsl
inc
mov
fstps
mov
jns
clc
mov
icebp
inc
sub
das
and
or
mov
sub
inc
aam
adc
nop
xchg
pop
fildll
sub
fs
popa
and
or
xchg
or
adc
xchg
xor
lods
and
xchg
and
or
fbstp
dec
jg
cld
add
fdivr
mov
mov
jge
aas
inc
dec
sub
sbb
mov
shlb
mov
add
mov
pop
and
cmp
push
pop
adc
mov
dec
adc
pop
jnp
loope
test
sub
push
lods
js
in
insb
test
fwait
cmp
mov
sub
stc
sbb
imul
mov
add
or
pop
adc
dec
fwait
aad
pusha
inc
jmp
xor
inc
fwait
aaa
ljmp
imul
pop
dec
pop
test
mulb
fists
in
and
aam
imul
outsb
sbb
icebp
xor
pop
imull
jp,pt
cmp
out
push
sbb
imul
pop
hlt
xchg
push
sarb
call
lcall
add
mov
cmpsl
pop
fistps
push
jno
and
xchg
and
or
jmp
aad
inc
sarb
sub
hlt
loop
sub
cmp
push
xchg
inc
jnp
gs
insb
push
cmpl
ficompl
test
sub
mov
mov
mov
push
mov
sub
scas
pushf
add
mov
sbb
cmp
jg
pusha
rcrb
icebp
loopne
xlat
push
push
add
xchg
jge
int
dec
insb
cmp
mov
cmpl
movsb
push
pop
dec
or
inc
rcrl
subl
mov
std
aam
sbb
xor
repz
xrelease
xchg
hlt
xchg
pop
pushf
imul
dec
out
fsubp
xlat
mov
dec
mov
mov
adc
xchg
test
or
es
js
js
cmp
je
pop
cs
push
out
mov
pop
xor
lcall
addr16
ret
adc
and
adc
sub
je
sub
cmp
imull
aaa
sahf
int3
xlat
dec
out
mov
jl
loop
cmp
or
imul
mov
inc
outsb
mov
lret
aas
mov
repnz
mov
fiaddl
push
lds
insl
mov
cmpsl
inc
push
pop
mov
pop
or
fldl
pop
aam
and
arpl
dec
adc
xlat
lret
push
lcall
push
fildll
popf
adc
outsb
push
pop
pop
insl
mov
aam
inc
or
pop
and
xchg
adc
idivl
popa
cwtl
cwtl
fisubrl
fwait
inc
pop
loop
fxch
addr16
cmpl
xchg
or
data16
in
orl
stc
dec
sbb
cmp
cmp
mov
mov
push
mov
xchg
dec
inc
xor
sbb
jno
leave
or
add
andl
movsb
cmp
cmp
dec
fisubrs
cltd
xor
repz
mov
add
mov
test
fld
and
inc
idivl
pop
mov
mov
enter
addl
leave
xchg
jae
mov
inc
fisubrs
mov
es
inc
or
push
jns
fnstenv
pop
push
adc
les
adc
lea
mov
sub
rol
outsl
pop
and
add
fidivrs
mov
iret
inc
sti
fisttpl
xchg
aad
pop
pop
je
in
pop
jae
ret
enter
sub
je
pop
mov
push
sbb
nop
jmp
mov
mov
mov
fdivrp
push
add
test
pushf
insb
fwait
cwtl
rcr
in
shll
xchg
out
jecxz
pop
push
les
mov
add
fstpl
fists
rcr
jmp
xchg
in
leave
cli
bound
nop
scas
mov
push
out
xlat
ja
mov
cmp
scas
and
cmpsl
push
out
mov
pop
leave
test
adc
xor
out
popa
aad
popa
out
and
out
mov
js
push
ja
cmp
rcll
fldenv
jecxz
or
sbb
cmp
jecxz
sahf
jae
imul
enter
push
inc
cmpsb
stos
xchg
mov
xchg
addb
and
and
fistpl
sub
xchg
ljmp
stos
fstp
sub
and
xchg
popf
pusha
fadd
movsb
pop
out
jecxz
jge
dec
push
std
lcall
mov
pop
mov
xlat
sub
and
roll
in
bound
ljmp
stc
lcall
lods
mov
stos
dec
sub
mov
ret
mov
sbb
add
outsl
clc
sbb
out
setle
jmp
xor
repz
cmpsb
aas
adc
test
fwait
cmp
cmp
mov
clc
les
subl
fisttps
jb
dec
idiv
ret
xor
outsl
leave
jle
cmc
pop
mov
mov
jmp
add
xchg
scas
mov
fwait
jp
dec
inc
sub
push
jp
pop
jnp
cld
cwtl
jge
cltd
jge
cmp
xchg
movsl
sbb
jns
push
push
dec
pop
pop
xor
lcall
push
test
outsb
pop
cmpsl
push
push
add
cmp
scas
jle
test
mov
dec
leave
xchg
cwtl
pop
sub
dec
or
pop
and
sbb
jae
repnz
in
outsb
pop
or
daa
test
imul
inc
enter
push
dec
mov
into
pop
cli
sub
outsl
jne
mov
or
into
mov
inc
push
mov
jo
pop
ljmp
mov
loope
hlt
jg
inc
inc
mov
jl
int3
xchg
iret
mov
cwtl
cmp
pop
lock
jge
aad
imull
xchg
hlt
inc
stos
mov
ret
mov
icebp
stos
inc
push
push
mov
jo
mov
enter
or
dec
loope
cltd
loop
mov
mov
dec
xchg
mov
xor
push
popf
loopne
repz
cli
int3
jbe
das
ret
setp
shrl
mov
mov
lcall
push
jae
and
push
repnz
inc
jb
outsb
loope
mov
cs
and
pop
bound
lds
mov
mov
xchg
inc
or
xchg
adcb
add
es
mov
and
jno
lret
sbb
int
cmp
lock
cmc
psrlw
push
sub
cli
add
or
xchg
cwtl
stc
xchg
mov
mov
cmp
xchg
push
xor
pusha
test
add
fisttps
js
stc
shlb
fidivrl
or
insb
rcrb
aaa
sbb
mov
lds
jecxz
das
mov
xor
add
adc
push
pop
add
ds
divl
push
test
xchg
scas
push
daa
xchg
xchg
push
fs
inc
out
jmp
or
push
dec
in
sbb
push
sub
test
push
leave
in
inc
fisttpl
sub
sub
add
ss
pop
jo
ficomps
jae
into
adc
imul
clc
mov
cmpsb
cmpsl
fiaddl
and
xchg
gs
and
inc
test
mov
add
fucomi
decb
arpl
fiaddl
xorb
mov
fsubp
mov
stos
lret
loopne
iret
movsl
jno
mov
pop
cmpsb
mov
adc
dec
test
fwait
pusha
adcb
call
pop
jmp
out
pop
cmp
nop
outsl
push
enter
sbb
jnp
jl
insb
mov
pusha
mov
in
mov
cmp
xchg
movsl
pop
fsubs
push
stos
in
sub
xchg
adc
sub
inc
out
xor
mov
add
inc
out
cwtl
testb
jo
shl
fwait
xchg
test
push
std
cmpsl
sahf
push
aaa
cmc
or
mov
lods
pop
mov
addl
lods
movsb
das
data16
cmp
lods
call
or
mov
add
idivb
add
repnz
shl
stos
jns
inc
in
mov
insl
xchg
js
mov
sub
adc
mov
and
push
ja
mov
jno
add
mov
sbb
scas
cltd
lcall
pop
fsts
pop
cmp
outsl
xor
pop
xchg
nop
sub
pop
ja
aad
sub
push
or
mov
std
pop
jae
mov
leave
imul
jl
bound
xchg
sub
push
icebp
or
or
lea
push
or
imul
inc
insl
add
mov
sti
test
movsl
pushf
ret
push
xchg
into
movsl
mov
jle
xorl
inc
loopne
xor
push
leave
xlat
stos
cmp
dec
xchg
rorl
mov
mov
mov
sub
pop
imul
sahf
std
dec
jl
adc
pop
je
mov
pop
in
xchg
loop
shll
mov
mov
shlb
mov
or
sub
mov
and
push
inc
subb
aas
js
pop
or
xor
mov
mov
mov
adcb
xchg
imul
bswap
inc
aas
rcl
imul
cmp
dec
pop
pop
mov
sbb
sub
sbb
dec
iret
push
nop
je
and
sub
mov
testb
test
ret
mov
jge
int3
scas
mov
cmp
fdiv
cs
pop
icebp
and
scas
sahf
in
mov
out
adc
push
sbb
loop
jb
iret
pusha
ss
mov
add
pop
push
mov
out
rorl
cmp
ljmp
adc
sarb
mov
testb
subb
or
mov
rcrb
cmc
xor
xchg
paddusw
cmp
mov
inc
fwait
daa
dec
sbb
lods
or
xorl
imul
or
add
test
test
int
add
inc
pop
mov
data16
fs
add
mov
sbb
mov
stos
jb
mov
jae
lock
mov
xlat
mov
arpl
andb
daa
nop
in
xchg
adc
scas
jle
mov
sbb
iret
mov
sub
les
addr16
xorb
inc
mov
xorl
test
mov
adc
clc
mov
jmp
push
pop
sbbl
jg
cmpsl
pop
fildl
aaa
insb
addl
out
setle
test
add
or
mov
mov
loopne
js
pop
inc
js
icebp
add
jl
cmp
xchg
out
dec
scas
out
scas
or
cmp
push
cmpsl
aad
jmp
cmp
nop
push
mov
sub
fadds
jle
mov
mov
push
les
and
incl
dec
and
ficompl
and
sub
xchg
cs
out
mov
idiv
repnz
in
mov
pushf
jmp
sbb
jno
stos
lcall
pop
sbb
je
jns
mov
jecxz
xor
inc
pop
aaa
andl
int3
adc
in
lea
sub
out
xchg
hlt
test
add
lret
cmc
aas
outsl
popf
or
stc
jl
cmp
cmpsl
imul
jbe
bound
or
loopne
leave
jle
jge
lret
adc
push
pop
test
add
std
xor
repnz
jmp
aad
jae
jnp
js
dec
inc
xchg
cmp
and
dec
call
xchg
fists
cmp
mov
inc
xor
stc
outsb
jecxz
jnp
mov
mov
jno
xchg
int3
push
mov
jle
fcmovu
es
cmp
dec
cwtl
pop
orl
adc
clc
inc
dec
pop
jge
sub
imul
in
dec
ljmp
pop
jo
test
jl
iret
push
pop
addr16
lret
or
loop,pt
test
hlt
fisttps
mov
popa
jmp
cmc
call
cwtl
mov
jns
fisttps
fisubrl
or
imul
push
mov
ja
ss
shll
sarl
inc
mov
push
aam
dec
xchg
sub
mov
pop
jb
sarb
in
push
sbb
les
and
adc
jmp
aaa
mov
rcr
push
xorb
imul
lock
lock
sbb
push
mov
or
test
in
inc
xor
push
add
xchg
shr
aad
cs
push
mov
pop
das
add
jmp
mov
int3
mov
test
jo
xor
push
mov
adc
cmp
fdivrs
lahf
insl
cltd
push
dec
mov
xor
fiaddl
xchg
enter
mov
shll
repnz
sahf
push
mov
ja
repnz
sbb
sbb
daa
pop
jnp
xchg
nop
adc
or
fwait
mov
stos
imul
pop
xchg
mov
pop
int
inc
or
cmc
mov
and
faddl
xor
std
cld
cmp
jo
shrl
lds
popa
pusha
int
pusha
test
xchg
pop
jb
mov
ficoml
xchg
ss
and
push
xchg
push
sub
add
std
adc
arpl
fld
pop
xchg
cli
movsl
sbb
mov
lea
adc
inc
stos
ljmp
xor
aad
mov
lret
jbe,pt
mov
mov
loop
xchg
ret
scas
out
lods
pop
cmp
in
ja
sbb
mov
push
popa
sbb
and
out
pushf
lahf
mov
fiadds
call
mov
outsl
scas
fsubrl
mov
cmp
inc
test
ss
out
pop
lcall
outsb
push
jl
int3
shrb
mov
test
push
mov
std
add
bound
inc
loopne
mov
dec
push
inc
and
lret
fmull
pop
xor
es
or
xor
jle
es
pop
aam
pop
xchg
mov
add
xor
fdivrl
pop
cmpsl
mov
jle
je
and
adc
aam
clc
mov
mov
fs
ret
dec
nop
jo
rcrb
inc
stc
mov
int
and
pop
cmpsl
inc
cmp
addr16
mov
ds
mov
pop
sub
rcrl
sub
lods
xchg
xor
ret
loop
adc
xchg
push
adc
loope
dec
adc
outsl
in
xchg
pminub
daa
cmp
popa
cmp
lock
pop
push
fisubrl
mov
mov
lret
andb
mov
jmp
mov
test
out
cli
pop
sbb
into
arpl
mov
fistps
ss
test
jl
push
cmp
sbb
xor
lret
push
cmp
and
xchg
adc
xchg
and
sub
hlt
and
call
scas
xchg
icebp
inc
mov
scas
inc
and
lret
test
add
es
test
push
out
mov
fwait
mov
nop
fnstcw
xchg
cmpsb
push
pop
jbe
bound
lret
jl
subb
sbb
ss
scas
out
fisttps
popl
xor
mov
shll
push
or
aad
std
adc
cmc
mov
mov
fiadds
fisttps
dec
inc
aad
dec
addr16
push
mov
sub
in
mov
and
sub
testl
loop
mov
dec
cmpsb
pop
or
push
sub
lods
xor
out
or
or
cld
xor
les
xchg
adc
in
jae
inc
mov
adc
es
cwtl
jnp
les
jb
inc
sbb
ret
mov
adc
xor
aaa
cmpsl
clc
and
ss
xor
dec
mov
sub
xor
inc
rolb
stos
pop
mov
popf
xchg
cmp
or
fimull
aad
mov
xchg
shlb
lods
jne
pop
popa
pushl
call
mov
sbb
or
sbb
mov
test
dec
jle
add
sarl
pushf
ljmp
push
pushf
stos
xor
ud0
and
cmpsb
fisubs
push
jns
std
xchg
mov
add
scas
in
or
pop
cmc
sbb
cmc
jp
aad
loop
mov
and
ss
popf
imul
inc
cmpsb
mov
sti
stc
popa
pop
imul
mov
aaa
imul
push
mov
imul
outsb
std
lods
fs
xor
xor
out
dec
jge
cli
stc
das
std
jmp
xor
mov
adc
inc
mov
xor
mov
adc
mov
or
es
xchg
dec
cmp
mov
dec
jl
fstps
pop
adc
movsl
mov
push
adc
mov
mov
xor
adc
arpl
jp
push
fmuls
sti
sub
xchg
ret
inc
cli
orl
lock
pushf
push
aam
outsl
fmul
loope
mov
test
mov
cmp
jecxz
in
push
mov
push
sbb
stos
das
mov
xchg
pop
hlt
dec
xchg
push
mov
push
cltd
pop
mov
jnp
mov
pop
ret
or
xor
cmp
ja,pn
xchg
addb
fwait
sub
enter
sub
add
sbb
mov
shll
ret
ss
pop
xorb
mov
inc
dec
push
mov
push
add
sub
cwtl
clc
leave
pusha
imul
and
mov
push
and
stos
insl
stos
sarb
in
ret
jne
imul
mov
xor
subb
inc
in
aaa
jg
push
push
and
aad
sbb
inc
inc
xor
ds
push
inc
orl
sbb
jae
jns
jg
sarb
push
xchg
mov
shlb
jo
repz
fnsave
dec
rclb
jl
das
outsb
jge
fwait
in
sbb
cmpl
xlat
inc
rsm
dec
into
orl
inc
lock
lds
ret
jmp
daa
ljmp
sbb
sbb
in
lock
sbb
addr16
adc
sbbl
loope
outsl
mov
jb
mov
cmp
jmp
or
jmp
and
sahf
in
pop
and
xlat
gs
test
popf
gs
xor
insb
in
stc
in
xchg
mov
or
adc
nop
cld
jp
mov
adc
inc
xchg
sbb
ljmp
mov
pop
dec
popf
xchg
sbb
loopne
push
jnp
mov
popa
pop
test
cmpsb
push
lcall
pop
inc
sub
mov
dec
sbb
pop
ficompl
xor
lea
cmpsl
push
imul
icebp
cli
cmp
jae
dec
and
xchg
in
stos
push
out
sbb
sub
xlat
mov
inc
testl
xchg
xchg
sub
or
cmp
fwait
ss
shll
or
in
mov
test
call
lahf
and
push
xchg
in
scas
dec
xor
xor
test
ss
mov
jmp
cmpsl
mov
imul
inc
inc
leave
push
jp
pop
filds
into
cmc
daa
psrad
in
pop
mov
sbb
popf
jno
pop
sbb
and
leave
je
fcomps
xor
ds
out
mov
sbb
fbld
out
jge
lret
jge
mov
jle
xchg
les
cli
mov
push
test
mov
mov
xor
rorb
divl
mov
rolb
jg
stos
jb
fcomps
xor
jp
adc
pushl
addr16
push
sahf
and
lods
inc
std
dec
sub
adc
or
sub
mov
and
out
cmp
sub
fsts
adc
fs
sbb
add
aam
repz
call
outsb
gs
enter
xchg
add
mov
lret
je
sbbl
xchg
imul
mov
push
cli
into
loope
rcrb
bound
fnstsw
movsb
aaa
mov
daa
xor
mov
add
std
pusha
rcll
pop
shr
rclb
add
lock
outsl
mov
xchg
add
xor
mov
js
cld
repnz
dec
and
mov
je
xchg
enter
pop
je
ljmp
les
and
xchg
sbb
cmp
popa
mov
jbe
andb
pop
arpl
mov
shl
add
out
or
pop
dec
and
fwait
imul
add
pop
add
inc
lcall
mov
lret
fsts
gs
adc
jmp
jae
mov
sbbb
ja
adc
cwtl
or
popf
add
call
outsb
mov
imul
pop
push
xchg
jnp
fidivrl
ds
out
int
fdiv
xor
mov
arpl
lss
jle
inc
inc
lea
test
loopne
mov
cmpb
and
sub
ror
les
dec
mov
stc
mov
fcompl
cmp
sbb
jmp
sbb
cwtl
ds
pusha
aad
xchg
jp
int3
inc
test
insb
iret
xor
lcall
pop
mov
mov
mov
imulb
loop
cmp
in
rclb
cld
insb
cmp
lret
scas
pop
add
icebp
loope
in
lods
insb
aad
adc
hlt
xor
xchg
pop
jg
xchg
sub
push
ds
cmp
aam
lea
aas
adc
ljmp
icebp
ret
call
jge
jge
dec
and
dec
dec
jecxz
loop
inc
je
xchg
jle
adc
mov
imul
and
por
test
jbe
or
dec
stos
inc
inc
sbb
mov
sahf
jge
xlat
and
lret
xchg
data16
push
call
dec
sbb
jmp
jns
cli
inc
push
fadds
or
push
jg
inc
sub
fildll
or
inc
or
rcr
push
aas
xchg
gs
js
xchg
dec
ret
jp
push
into
lds
mov
jnp
mov
mov
dec
sbb
cmp
push
ffreep
cmp
inc
jl
mov
mov
lock
movsl
xorl
xlat
mov
pop
cli
inc
adc
adc
inc
je
adc
cmp
andb
outsl
test
enter
jae
jb
push
dec
addr16
jne
adc
xor
push
dec
mov
jg
inc
movsb
jl
mov
loop
push
dec
mov
les
das
into
loope
dec
repz
in
mov
fdivl
dec
movsl
je
scas
jb
shll
mov
les
mov
leave
aaa
push
cmp
xor
ret
adc
mov
jle
adc
jns
into
lcall
loope
xchg
ljmp
mov
or
jae
icebp
mov
lods
lcall
out
mov
mov
xor
stos
iret
mov
pusha
loope
jp
xchg
push
jle
mov
leave
mov
cld
fidivl
inc
fidivrs
push
pop
int
pop
cmp
pushf
and
lcall
test
popfw
add
fbld
jb
adc
dec
jecxz
test
movsl
push
lahf
mov
cli
sub
xor
lods
xorb
in
ljmp
nop
rorl
jge
xchg
imul
fcompl
sub
pop
addb
lret
aam
pop
gs
and
stos
xchg
cli
mov
push
scas
pop
invd
in
and
and
arpl
aam
inc
xchg
jb
ror
rcl
sub
imul
sub
pop
ljmp
dec
sbb
fstl
pop
dec
mov
test
cmp
test
jne
imul
aas
loopne
inc
cmpsb
pop
xchg
mov
xor
adcl
int
jecxz
adc
lock
sub
fs
lock
sub
repnz
hlt
pop
jge
into
jns
fistpl
sbb
bndstx
mov
push
mov
xchg
lock
xchg
cli
nop
or
iret
pop
mov
mov
lock
out
adc
push
cmp
clc
pop
mov
scas
cwtl
bound
sub
sbb
mov
scas
scas
sub
and
enter
cwtl
cmp
add
or
negb
inc
or
mov
mov
test
outsl
sbb
dec
jl
inc
leave
lahf
push
popa
xchg
inc
mov
sub
pop
inc
push
mov
adc
mov
mov
ret
nop
scas
mov
mov
pop
mov
mov
add
or
mov
sbb
cld
and
repnz
xor
loop
push
es
mov
sub
adc
cltd
ljmp
movsl
mov
ret
mov
daa
aas
sub
cld
inc
and
pop
jne
into
scas
adc
push
lcall
xor
jmp
ficoms
hlt
fdivl
nop
pop
jmp
dec
ljmp
pop
sti
mov
les
xor
rolb
in
addr16
hlt
andl
push
movsb
sub
sub
push
lcall
aaa
aam
fmuls
dec
sub
dec
dec
and
sbb
and
cld
add
lahf
mov
subl
lahf
pop
cmc
cmpsb
test
mov
aas
adc
push
dec
mov
stos
mov
add
or
push
xor
pmaxub
shlb
ds
addr16
jno
mov
cmovle
mov
ret
pushf
mov
sbb
repnz
mov
lcall
adc
fstpt
movaps
ss
xor
or
stc
xchg
cmp
or
pop
insb
in
jbe
mov
es
push
test
outsb
clc
mov
adc
xchg
mov
mov
xchg
push
sbb
lods
cld
je,pn
dec
gs
imul
shll
push
mov
movsl
and
pop
hlt
out
fucompp
insb
or
pop
sub
xchg
jns
insl
cmp
aas
mov
repnz
lahf
aaa
cmp
stc
dec
add
mov
pop
das
sub
test
hlt
jmp
arpl
lcall
fwait
and
sbb
ljmp
push
pop
jae
xchg
aas
insl
loope
mov
pop
imul
mov
es
jg
jb
pop
negb
call
fstps
ljmp
sahf
int3
sbb
cmp
sbbl
pop
sbb
jmp
fs
mov
cmpsl
mov
mov
sar
pop
cmpsl
les
sahf
jb
push
mov
aas
mov
in
adc
mov
pop
ficoml
inc
sbb
popa
notb
push
jo
lea
jb
mov
pop
pop
shlb
push
arpl
insb
mov
mov
jno
test
cmp
sbb
push
push
orl
ror
repnz
or
sbb
or
sbb
mov
xbegin
xchg
or
cmc
in
and
mov
jne
addr16
out
cmpsb
add
jmp
jg
enter
inc
push
xchg
mov
push
mov
fwait
mov
sbb
jne
pop
or
and
call
stos
mov
into
sbb
test
mov
fnstsw
lret
jno
imul
add
cmp
cmp
cwtl
ret
pop
ss
scas
movsl
lock
movsb
add
pop
scas
insl
push
dec
mov
dec
inc
cli
dec
xlat
adcl
scas
push
loop
ds
cmp
loopne
arpl
ja
fnsave
movsl
cmpsl
aad
decb
adc
movsb
dec
pushf
xor
mov
in
mov
cmp
das
xor
pop
repz
imul
mov
sub
adc
dec
dec
jns
and
sub
loopne
inc
pop
into
inc
les
mov
rolb
xchg
orl
sbb
das
add
out
mov
in
movsb
sbb
push
jbe
add
stos
and
dec
cmpsb
inc
aas
fsubr
sahf
jae
push
sti
daa
cmpsb
cltd
leave
call
cltd
loope
dec
into
in
outsb
out
sbb
addb
ficoms
aaa
imul
outsb
shl
roll
mov
and
sub
pop
fistpll
pop
cmp
lea
decb
push
frstor
repz
daa
xchg
dec
sbb
xchg
outsb
lds
adc
jo
fstl
pusha
aaa
int3
pushl
push
xlat
push
mov
push
insl
shl
mov
dec
or
lea
push
push
enter
popa
lods
daa
lret
sub
fld
leave
rolb
and
mov
sbb
cmc
scas
jbe
lods
cmp
mov
enter
call
out
or
pop
push
shrb
mov
xchg
pop
test
fwait
sti
stos
or
jno
xlat
pop
cmpsb
std
inc
pop
stos
dec
jno
or
inc
mov
push
scas
test
int
repz
xorb
adc
jg
xchg
shlb
int3
fidivl
or
mov
mov
into
push
out
jne
into
adc
repz
test
cmp
mov
push
out
mov
inc
mov
pop
mov
aas
out
in
fidivrl
sub
aaa
loopne
push
xchg
out
sub
mov
lds
pop
xor
mov
or
int
add
push
sbb
imull
xor
mov
pop
xor
xor
jecxz
std
fidivs
and
stos
push
cltd
add
mov
mov
rcrb
push
cmc
sub
scas
roll
jge
xchg
sarl
popa
int3
push
cwtl
mov
cmc
dec
shrl
ss
es
iret
test
or
and
cwtl
and
icebp
adc
lcall
test
jnp
inc
mov
loope
xor
icebp
add
jne
testl
arpl
inc
pusha
aad
aad
xchg
dec
cmp
xor
movsb
add
lret
fxch
mov
and
push
mov
add
in
lcall
popa
sub
subl
push
cld
jg
mov
push
aad
and
fsubp
lahf
aad
xchg
inc
jbe
ljmp
push
rolb
add
je
jbe
add
stc
cmp
out
shll
icebp
fs
pusha
rsm
sbb
cmp
es
xchg
lds
scas
test
mov
dec
push
mov
cmp
or
js
sub
mov
std
push
lea
and
push
or
add
jp
jae
and
andl
ret
mov
mov
jns
cs
add
in
call
mov
pusha
push
xlat
in
ljmp
out
mov
mov
aam
pop
push
loope
push
mov
aaa
cmpsb
cmp
stc
popa
pop
data16
adc
xor
icebp
int
pop
pop
cwtl
popf
jns
ror
ds
jnp
add
cmp
dec
aas
dec
std
jnp
mov
xchg
mov
pop
lock
enter
out
inc
int3
movsb
enter
cmp
leave
xlat
aad
jnp
sub
push
insl
sub
cmpsb
mov
dec
xor
push
pop
popf
adc
aam
cmp
ds
out
cmp
or
sbbl
test
jl
leave
mov
xor
out
mov
lret
cli
andl
scas
and
sbb
insb
and
jbe
cs
inc
push
insl
or
dec
dec
xor
enter
add
xlat
popf
jecxz
jl
mov
cmp
inc
mov
shl
push
ret
sbb
xchg
lds
loopne
outsb
jno
mov
dec
outsb
jnp
and
jns
call
or
sub
int3
out
xor
dec
pop
in
inc
dec
in
xor
dec
sbb
sarb
mov
add
cli
repz
jnp
xlat
pop
addr16
mov
sub
sub
roll
cwtl
or
mov
repnz
mov
cmp
or
xor
and
xchg
fsubrl
js
ficompl
popf
inc
cmp
ljmp
std
imull
pop
in
mov
xchg
in
test
push
or
sub
add
popa
in
sbb
mov
pop
push
std
in
xchg
xchg
push
outsl
push
sub
shrl
xor
jae
push
jg
ja
sbb
xchg
add
xor
dec
das
mov
aas
jg
cwtl
push
fsubrp
mov
jmp
mov
movsb
es
sub
jae
mov
pop
nop
and
push
mov
iret
cmpsb
sar
insl
pop
ret
jo
xor
mov
and
stos
out
pop
jno
or
inc
pop
mov
lods
test
pop
cmp
test
or
loop
lahf
mov
mov
sub
mov
inc
push
pusha
xchg
aas
push
faddl
mov
rcl
adc
push
dec
call
pop
xor
pop
fwait
mov
jae
xor
jns
pop
xchg
mov
inc
xchg
imul
int
pop
sbb
mov
mov
inc
fnstcw
fists
and
or
iret
mov
dec
lods
mov
jno
mov
adc
push
call
into
loopne
fwait
inc
and
jnp
aaa
inc
in
jo
xchg
fbstp
cld
push
sbb
dec
lahf
mov
sbb
pop
das
sub
mov
pop
lret
fdiv
dec
push
pop
jp
dec
adc
and
cmpsl
popa
cli
repz
cli
mov
mov
push
mov
push
mov
cmpsl
aas
and
add
mov
and
test
clc
pop
cld
sub
jecxz
mov
push
pusha
xor
stos
jle
addl
adc
ja
aas
in
adc
into
sbb
fisubrs
pushf
in
jbe
bound
test
jge
popf
rol
sub
out
adc
rcrl
cmp
adc
push
add
outsl
out
insl
ss
mov
pop
sub
adc
xor
insl
cmp
data16
xor
call
hlt
pop
dec
xchg
mov
add
add
cmp
imul
data16
nop
mov
imul
xor
frstor
movsb
daa
imulb
fisttps
sub
or
push
xor
fdivr
arpl
add
xchg
jnp
add
std
cld
xor
inc
dec
mov
and
gs
cwtl
and
add
mov
push
lds
and
mov
int3
fimuls
sbb
je
dec
loope
movsl
fidivs
jl
jg
dec
lahf
aas
out
pop
fs
call
adc
addr16
mov
in
stos
aaa
movsl
bound
nop
lds
jp
movsl
add
outsl
jnp
fdivrs
sahf
or
pushf
or
jo
dec
mov
xlat
mov
push
fistpll
dec
lods
inc
mov
mov
xchg
cmp
push
insb
push
movsb
repnz
pop
push
sub
xor
repnz
call
loope
cli
nop
jo
inc
cwtl
fisubrs
sbb
std
stc
add
or
xor
mov
jne
jge
sub
xchg
sub
mov
pop
or
lods
stos
test
pop
inc
mov
and
lcall
mov
bound
sub
test
das
ret
lret
mov
enter
xchg
lahf
cmp
sahf
xchg
push
mov
inc
adc
pop
pop
in
fs
out
in
jle
xor
fmuls
cli
mov
cmp
out
inc
and
xchg
mov
aam
jp
mov
lcall
js
lahf
repnz
push
jb,pn
inc
mov
pop
jns
xor
ss
sub
cmp
jb
adc
enter
decl
outsl
repz
in
xchg
mov
mov
add
data16
pop
imul
out
clc
fcompl
and
dec
repz
push
cmp
cmp
cmc
aas
es
push
push
mov
pop
fidivs
imul
mov
fcmovb
out
test
mov
push
rclb
mov
scas
fiaddl
push
jns
cmp
std
pop
fdivrs
mov
push
push
adc
notb
lret
cmp
lods
cmp
adc
inc
popf
out
cmpsb
fsubrp
or
pop
cmp
xor
lds
in
ficomps
mov
and
outsl
sbb
ss
and
xchg
sub
idiv
jne
shrb
in
mov
jbe
xchg
loope
insl
je
pop
rorl
test
jne
pop
jbe
jns
pop
pop
xor
and
test
adc
rclb
xchg
fs
out
push
test
mov
xor
out
ror
fdivrl
scas
loope
insb
inc
sub
sbb
ljmp
andb
lret
mov
lahf
inc
add
cld
loope
sbb
inc
mov
test
and
cld
add
hlt
mov
add
mov
subl
int3
rcrb
dec
inc
adc
sub
pop
push
testb
les
loopne
mov
rcll
pop
sbb
test
push
jge
mov
aas
repz
sub
cld
dec
dec
mov
roll
sbb
test
mov
lret
cli
imul
mov
xchg
ja
pop
scas
cmc
inc
jno
insl
jns
lret
arpl
jle
int3
mov
in
std
popf
loopne
ljmp
jno
dec
adc
push
fsubl
mov
or
jmp
test
and
sti
lahf
pop
cwtl
jecxz
mov
mov
cmpsl
pop
dec
mov
xchg
or
cmp
fs
ficoms
ret
ds
mov
ficomps
cwtl
adc
insb
inc
adc
xor
push
jns
movsl
dec
mov
arpl
jae
scas
loop
jb
jo
test
push
subb
jp
jecxz
mov
mov
pop
pusha
daa
pop
aam
mov
mov
movb
adc
jl
or
dec
int
mov
mov
daa
cmp
mov
and
mov
test
push
jecxz
mov
les
push
xor
add
shlb
add
sub
and
push
es
xchg
int3
push
lods
add
jb
daa
sub
mov
js
pop
jl
popa
lret
cmp
out
lods
or
sbb
in
adc
fldt
xchg
xor
data16
push
daa
inc
aad
xor
cmp
sub
push
pop
sub
ljmp
sbb
cmp
mov
outsb
and
lds
push
rclb
cmpb
loope
cltd
mov
adc
xor
aad
mov
and
scas
add
dec
outsl
ret
ret
xor
adc
repz
ret
pop
push
fstps
mov
loop
jae
popa
fimuls
lods
fs
dec
cli
movsb
ficoms
in
lahf
dec
jge
pop
popf
insb
sbb
lret
fmulp
pop
subb
cmpsb
test
test
dec
aam
out
xchg
pop
cmp
mov
sbb
sbb
pop
les
mov
jb
out
out
test
jbe
ja
jns
jg
mov
mov
sbb
clc
jecxz
daa
sbb
dec
add
mov
cld
jmp
loope
pop
scas
push
repnz
jno
push
pop
dec
xchg
les
aad
cli
stos
psadbw
cs
jecxz
cmp
xor
adc
shrb
mov
mov
add
add
movsb
jmp
pop
jl
insb
mov
jo
je
xor
cmp
inc
push
aas
mov
mov
or
addr16
sub
aad
jmp
mov
std
outsb
cmp
jbe
shrl
lock
jne
js
in
scas
mov
and
pop
xchg
orb
dec
xchg
push
loop,pn
mov
jns
inc
sbb
dec
dec
and
aas
mov
pop
outsl
pop
xor
and
jl
ljmp
outsb
sbb
movsl
xor
mov
push
imul
dec
stos
aam
fwait
rclb
jecxz
outsb
adc
lahf
inc
fucomp
adc
fwait
test
mov
mov
dec
out
outsb
xor
dec
dec
outsb
fbstp
adc
sbb
popl
js
jge
adc
movsb
or
push
dec
inc
leave
aam
ret
add
mov
jbe
scas
ss
inc
popa
mov
lods
inc
and
and
sub
lods
mov
sub
mov
jnp
aam
movsl
adc
lret
xchg
stos
cmp
mul
popf
bound
dec
rcrl
pop
xor
ret
pop
fidivrs
and
jae
xchg
and
lods
movsb
and
or
ds
in
and
dec
xchg
int
scas
push
inc
fimuls
cmp
push
sbb
sahf
popa
mov
or
dec
divb
fbstp
mov
mov
push
test
xchg
jp,pn
dec
mov
clc
mov
mov
std
je
push
mov
ja
repnz
xchg
mov
sub
xchg
aaa
dec
mov
xor
pop
cmp
rorl
sar
sub
and
stc
sbb
ljmp
mov
imul
xor
ret
cmp
in
push
dec
jno
mov
repnz
push
adcl
sahf
xchg
mov
insb
mov
pop
das
inc
dec
jmp
add
sbb
movsl
imul
iret
nop
push
pop
and
movsb
rcl
sahf
fisttpl
sarb
xchg
push
xlat
xor
sub
loopne
push
out
and
push
add
cmp
mov
xchg
lcall
imul
mov
inc
inc
outsl
pop
sbb
jno
push
xlat
mov
sbb
dec
xlat
mov
sbb
cld
xor
movsb
cs
iret
jbe
sub
in
adc
stos
mov
test
mov
inc
bound
jg
mov
add
push
inc
sub
fsubrs
jp
and
out
sbb
mov
lock
test
imull
mov
outsb
rorb
add
fcoml
popf
mov
xchg
das
addr16
lds
mov
cmc
push
jl
dec
fisttps
dec
pop
rorl
and
mov
push
jecxz
and
gs
stos
stc
lret
roll
mov
jbe
cmp
je
add
mov
cmp
divl
sbb
or
or
pop
xchg
fcmovu
in
fnsave
daa
lahf
sub
pushf
adcb
sbb
and
bound
cmp
cs
mov
dec
int3
mov
jmp
jl
add
push
push
cmpsb
dec
jo
xor
sub
stos
jecxz
lds
sbb
mov
sbb
inc
mov
fidivrl
divb
mov
inc
cmp
sar
and
ss
in
mov
adc
popf
loop
sub
mov
mov
imul
je
test
mov
xor
mov
mov
pusha
loope
movsb
ficomps
neg
rcl
mov
out
cld
push
push
call
fisubrl
scas
mov
sti
frstor
clc
ss
push
add
popf
test
adc
mov
sub
or
push
ss
out
sbb
mov
xor
shl
aad
lods
cwtl
lahf
pop
mov
xchg
sbb
lret
xlat
test
stos
arpl
stos
xchg
stos
daa
shr
and
pop
jae
ljmp
xor
mov
xchg
mov
mov
dec
in
lds
leave
push
out
push
inc
inc
mov
push
sahf
jnp
add
into
ljmp
push
mov
cli
ret
dec
addr16
out
lret
dec
sarl
mov
xlat
popa
jl
sbb
cmp
ror
cmp
movsb
popa
loope
les
sub
jecxz
ja
daa
das
in
es
xchg
fs
adc
fcomi
test
lcall
pop
test
or
cmp
frstor
movsbl
orb
lret
cltd
popa
addl
daa
into
sub
jmp
cmp
in
arpl
cmp
mov
mov
std
push
push
aam
fdivrs
or
or
jmp
jg
pop
pop
push
aad
imul
cmp
push
jbe
push
pop
jmp
iret
jmp
and
xchg
sub
daa
inc
mov
mov
fnstsw
insl
imul
fsub
cmc
inc
cwtl
addr16
aas
loop
xchg
cs
cwtl
mov
cltd
loop
pop
es
push
jbe
insb
and
std
lcall
adc
pop
jecxz
dec
mov
test
movsb
repz
jmp
or
sub
mov
mov
pop
xchg
or
test
lcall
movsb
jecxz
jg
out
enter
mov
call
xlat
add
test
sbb
call
in
or
iret
cwtl
loope
jbe
mov
push
movsl
adc
bound
xchg
popf
js
pop
andb
xor
sahf
ret
int3
adc
mov
ret
repz
pop
xchg
cld
cmc
lcall
mov
push
dec
fmul
rcrb
jno
lcall
cmp
rclb
scas
add
mov
lcall
and
ja
fmul
icebp
outsb
mull
jbe
mov
push
les
dec
scas
mov
rcl
add
add
fisubrs
movsl
into
mov
dec
setp
cmp
jne
out
jnp
jo
xchg
or
lea
neg
sti
gs
add
jp
mov
outsl
test
sub
mov
lods
dec
pushf
dec
test
std
inc
xchg
push
add
insb
fmuls
in
sti
pop
and
cmp
in
out
leave
repnz
mov
mov
movsl
jg
push
jmp
sbb
lret
insb
dec
lcall
mov
sbb
lcall
sarb
ret
push
imulb
arpl
dec
cmp
rdmsr
jo
lds
mov
mov
inc
sbb
xor
pop
and
pushf
test
or
fidivrl
sbb
lahf
xor
xchg
xor
mov
mov
lcall
sub
lcall
xlat
and
out
cmpsl
add
push
movsb
push
mov
xor
mov
sub
or
ljmp
jecxz
push
push
push
into
lret
cltd
inc
add
cltd
nop
lods
movsb
push
sbb
iret
addb
iret
add
insb
jns
jne
out
lock
mulb
leave
mov
sbb
fwait
shll
rolb
sub
fs
add
stc
cld
orb
test
or
sbb
xor
jge
and
push
sarb
lret
mov
mov
inc
lret
pusha
jmp
or
ja
test
sbb
int3
data16
dec
xchg
dec
lea
and
shlb
shl
mov
scas
in
xor
lcall
add
mov
aaa
and
and
pop
and
jl
sub
xchg
add
sub
jae
sbb
or
imul
and
adc
mov
cmp
imul
add
sub
dec
int
icebp
aaa
pop
ljmp
mov
xchg
fnstsw
jecxz
leave
mov
sub
lock
cs
arpl
adc
cmpsb
test
or
mov
jmp
cmp
ret
sbb
push
int
out
jo
imul
inc
or
lret
setae
and
in
pop
jnp
adc
push
pushf
cmp
adc
nop
pop
icebp
sub
call
inc
cmc
shll
mov
and
push
jo
cmp
xchg
loop
mov
push
imul
sbb
or
rcl
push
outsb
fdivrs
ja
push
mov
rol
push
sar
sarb
loopne
ds
sub
shlb
xor
xchg
mov
pushf
mov
insl
push
loopne
lret
call
sti
jb
shll
sub
adc
and
fcompp
add
xor
test
jnp
in
fcomps
adc
lret
dec
cmp
into
incb
xchg
call
sbb
outsl
pop
leave
cld
add
adc
std
pop
mov
ret
push
frstor
sub
loop
insl
mov
mov
xor
mov
mov
mov
xor
xchg
lret
sub
jp
test
call
unpcklps
sti
or
arpl
mov
pop
jl
aam
adc
cmp
sub
sub
test
jne
loopne
xor
cmp
rorb
aaa
lret
lret
stos
cmp
shrb
dec
mov
pop
xchg
push
stos
clc
nop
aad
mov
cmp
lret
xchg
add
cmp
enter
popf
pop
sbb
mov
sub
or
sbb
cltd
gs
in
shlb
sti
bound
scas
push
aad
add
pop
dec
fs
sub
aaa
repz
insb
les
mov
mov
push
inc
bound
mov
xchg
mov
dec
es
in
or
or
aam
stos
pusha
fdivp
jb
addr16
outsl
lock
sbb
or
sbb
loopne
mov
mov
mov
or
imul
push
xchg
xchg
push
lahf
sbb
cmpl
nop
xchg
imul
mov
roll
sub
jo
mov
in
js
or
movsl
sub
xor
add
and
mov
xor
cmp
inc
mov
pop
cmp
sbb
imul
out
out
int3
and
ret
jl
jb
mov
test
popf
leave
or
dec
dec
scas
jnp
out
xor
cmp
insl
js
mov
inc
mov
inc
jmp
add
sbb
or
out
negl
jl
loope
dec
xor
xor
mov
push
cmp
inc
icebp
inc
mov
jne
into
movsl
inc
loope
aam
inc
pop
push
lcall
xchg
jae
cwtl
inc
dec
pushf
sti
mov
fiaddl
push
cmpsl
dec
in
push
out
mov
fsubrs
shlb
loop
xchg
lds
dec
sbb
pop
scas
cmp
cmp
aas
or
mov
ftst
jae
jg
push
jbe
sbb
adc
mull
xchg
add
int
cmp
mov
xor
scas
pop
cmpsl
mov
int3
mov
loop
push
in
leave
jl
jbe
xchg
sbb
icebp
xchg
ret
stos
lret
push
mov
lret
xor
fcomps
inc
or
ficomps
test
adc
sarb
mov
and
push
mov
adc
jbe
scas
ljmp
lcall
or
cmp
int3
mov
mov
hlt
bound
jp
aaa
arpl
rcll
xor
dec
cmp
lods
push
mov
add
xchg
movq
dec
push
xor
pop
mov
out
jno
scas
mov
mov
stc
pop
mov
mov
dec
and
pop
dec
ss
mov
dec
aaa
push
rcr
pop
sub
jle
sub
sbb
dec
stc
dec
shll
idivl
jle
fmuls
stos
xor
mov
stos
ficoml
fcomps
in
mov
jae
push
lds
call
out
and
std
dec
jb
sbb
cmpsl
aad
mov
daa
test
push
invd
rolb
out
dec
pop
mov
rcl
hlt
cmp
lds
fldenv
push
adc
aad
mov
cmp
push
mov
sub
popf
imul
pop
sahf
fcmovnbe
or
enter
pop
lock
sarb
scas
adc
and
fsubs
mov
dec
or
sub
jg
aad
mov
cld
mov
xchg
xor
loopew
lea
pop
and
jae
jno
iret
sub
jno
pop
cmp
sub
pop
sar
pushf
adc
jo
xchg
mov
iret
xlat
arpl
cs
arpl
ret
sub
rol
cmp
pop
and
cli
mov
or
add
dec
cmpsl
xchg
and
push
popa
loop
in
cld
cmc
aaa
in
mov
es
add
in
inc
xchg
mov
mov
dec
and
lds
int
ljmp
cmpsl
pop
and
rorb
repnz
jmp
sbb
das
or
push
adc
lret
mov
sbb
xlat
mov
add
sub
fwait
movsb
xor
or
iret
fs
push
js
aaa
mov
sub
cmp
mov
or
jp
in
and
jmp
js
mov
add
jmp
ds
js
dec
pop
jae
add
in
push
xchg
lods
or
lock
mov
out
fcomip
imul
cltd
cmp
pushf
add
xchg
fistpl
iret
jecxz
cmp
cmp
lret
inc
jle
imul
jp
sbb
push
mov
ds
push
int
pushf
stc
dec
ja
mov
fidivrl
rcrb
sub
push
insb
jo
fldenv
sbb
jecxz
adc
dec
push
test
xlat
fwait
sub
cli
fdivs
add
shl
stc
ds
aas
mov
loope
jnp
aaa
rcll
cmpsl
sahf
jl
jne
pushf
fisttpl
xor
jp
loop
pop
pop
or
add
sub
cwtl
jmp
mov
push
mov
xor
add
cli
dec
popf
jo
xchg
test
inc
xrstors
mov
cld
loopne
mov
lods
mov
popf
xchg
push
sbb
fs
mov
aas
jnp
push
sub
sti
rcll
test
lcall
or
sub
jnp
in
jle
and
xor
jno
stos
jge
mov
leave
clc
xor
mov
push
movsl
pushf
loope
adc
test
aam
sahf
sbb
icebp
aam
in
imulb
add
jno
mov
add
mov
add
int
addr16
add
inc
and
and
and
push
mov
jae
in
mov
out
pusha
loope
ret
int3
in
jb
ret
push
inc
bound
pushf
add
jecxz
in
fstp
shrl
push
jne
xor
orl
movsl
fisubs
xor
ffree
add
dec
mov
jg
mov
or
inc
pop
mov
and
mov
ss
or
scas
pusha
mov
insb
pop
or
sub
cmp
into
adcl
sbb
push
mov
xor
xor
mov
add
cli
movsb
and
adc
test
dec
adc
dec
pop
and
idiv
xor
cld
ret
and
pushf
fcoms
fldpi
push
loope
adc
fcomip
cmp
test
mov
mov
lods
xchg
cmc
or
shll
aam
test
icebp
and
nop
rcl
sbbb
sbb
sahf
jno
xor
mov
adc
sbb
iret
negb
icebp
hlt
movsb
hlt
in
add
mov
pop
es
movsl
es
repnz
or
in
dec
xchg
mov
jbe
movsb
pop
scas
sub
inc
leave
in
aas
or
push
dec
mov
sub
daa
dec
std
pop
js
icebp
cmpsl
ret
into
bound
and
idivl
das
xchg
push
jl
sti
out
inc
cmp
push
imul
sbb
cli
and
dec
and
sbb
call
pushf
repnz
pop
jmp
movsb
xlat
pop
xchg
mov
mov
jl
bound
cmpsl
sbb
push
pop
lods
pop
adc
push
and
push
xchg
mov
arpl
iret
lock
mov
int
scas
in
xchg
ss
or
add
mov
mov
jecxz
push
test
aam
lret
mov
xor
mov
lea
in
repz
orb
pusha
sub
xchg
push
call
data16
push
pop
out
inc
inc
mov
sbb
or
dec
mov
gs
inc
shll
sub
clc
adc
adc
cmp
bound
cmp
dec
int
aad
mov
inc
sbb
pop
fstps
cmp
cs
fsubrl
jbe
sbb
cmp
sub
rcrl
mov
mov
cltd
popf
stc
push
iret
fistpll
push
in
adc
test
mov
adc
gs
bt
loope
rcll
sarb
fisubrs
xor
jp
fsubr
adc
pop
les
outsl
pop
or
rcr
mov
popa
and
xlat
ficoms
inc
stos
jmp
enter
popa
xchg
pushf
jge
das
popf
cmp
sbb
lods
mov
ss
adc
cmp
jmp
jl
pop
sub
je
xor
enter
dec
lahf
xchg
popf
add
pop
xlat
test
sub
cs
call
arpl
addl
dec
scas
push
cmp
xchg
mov
outsl
inc
xor
std
fcmove
icebp
imul
pop
xor
mov
imul
loope
mov
shl
and
in
pop
int
mov
pop
scas
jb
pop
inc
cld
mov
and
adcb
lods
iretw
les
call
jbe
mov
jno
xchg
adc
test
popf
xor
mov
sub
mov
shufps
jg
incl
sub
hlt
mov
xor
cmpsb
fsubrs
ja
aaa
push
add
test
fndisi(8087
pop
data16
push
xor
jo
out
push
jns
out
inc
cmpsl
xor
in
and
lret
jo
mov
imul
sbb
ret
nop
push
push
xchg
inc
inc
loope
into
fimull
enter
mov
fdivrs
or
push
or
adc
stos
push
or
or
push
dec
pop
cmpsl
aam
cmpsl
mov
sbb
xorb
inc
cwtl
xchg
std
stc
jl
leave
in
test
push
mov
mov
pop
lods
loop
inc
xchg
mov
popf
popf
xchg
jle
les
out
push
lock
test
scas
mov
mov
stos
pop
les
mov
rolb
jae
xchg
mov
test
xlat
je
pop
add
pop
fldl
inc
insb
and
cld
cmovae
jle
lds
mov
fwait
insl
jl
nop
mov
sarb
cmp
mov
cmpsl
xor
xlat
mov
aas
mov
adc
dec
mov
aam
xor
fcomip
xor
das
inc
fsubs
cmp
pop
imul
pusha
push
in
into
out
cmpsl
xchg
sbb
call
imul
imul
inc
jge
lahf
cmp
stos
fsub
shll
and
xchg
imul
or
hlt
jbe
icebp
inc
mov
adc
pop
pop
pop
sub
out
ror
cmp
popf
mov
ljmp
pop
xor
incb
lret
dec
jne
clc
or
repz
lcall
or
cmp
shr
jno
das
test
adc
in
jecxz
clc
mov
inc
sub
out
movsl
adc
call
int
or
sbb
xchg
imul
pop
add
mov
sbb
cmp
popf
and
mov
add
jge
scas
mov
stos
xchg
or
mov
jmp
loopne
inc
push
jge
push
jno
ja
inc
sbb
test
push
and
pop
aad
dec
pushf
xchg
ja
dec
movsl
xchg
shlb
push
dec
push
adc
inc
jbe
sbb
fbstp
adc
cmp
add
push
or
clc
insl
into
push
and
in
in
outsl
push
out
fcmovbe
jmp
xchg
or
insl
int
adc
mov
push
add
push
loop
aas
sbb
rcrl
dec
add
stos
data16
scas
mov
popa
xchg
adc
push
leave
xor
pop
aad
sar
cmp
popa
in
repz
push
repz
pop
imul
mov
xor
fistpll
or
add
stos
call
arpl
mov
stc
push
dec
mov
inc
mov
pop
mov
or
test
add
or
jno
mov
jnp
icebp
mov
xor
enter
dec
iret
mov
or
pop
lods
mov
adc
mov
aas
xor
fidivrl
ljmp
lret
mov
pop
cmp
loope
movsl
test
inc
dec
mov
cmpsl
dec
popf
mull
mov
push
lods
lock
xorl
ret
mov
or
into
xchg
or
inc
mov
loop
cmp
out
hlt
xchg
inc
mov
and
lds
mov
roll
inc
stos
and
std
dec
sahf
add
in
push
jnp
jl
gs
pop
and
cltd
rorl
mov
gs
lcall
ret
inc
cltd
scas
adc
jb
inc
mov
cwtl
xchg
pmulhw
dec
sub
imul
adc
and
dec
push
mov
jp
lret
lea
call
imull
or
dec
lcall
inc
mov
mov
pop
push
lahf
repz
lods
loopne
in
cmpsb
sub
fwait
and
jecxz
xor
dec
mov
mov
push
push
sbb
jbe
jmp
inc
ror
aam
div
inc
mov
movsb
shll
cmp
hlt
lahf
fmuls
js
in
aam
adc
and
dec
jp
enter
repz
mov
lods
not
inc
call
adcl
push
shrb
push
sarl
xchg
add
push
push
mov
xchg
pushf
xchg
sbb
push
outsb
lods
mov
test
sahf
ret
aaa
jns
mov
push
loope
mov
aas
movsb
test
mov
sti
fnstcw
mov
arpl
les
pop
jge
stos
mov
lahf
out
movb
out
clc
divl
mov
sub
sbb
cs
pop
cmpsb
inc
ret
cmp
in
sub
push
sbb
xchg
mov
aas
mov
out
aad
test
and
cmp
push
mov
jg
sub
dec
imulb
les
aad
pop
mov
mov
rcl
aaa
cli
jns
and
push
sbb
sti
add
iret
push
add
les
repz
sub
rcll
nop
push
add
jnp
mov
aam
and
cmp
addr16
arpl
inc
xor
mov
push
ss
inc
int
sti
test
rclb
dec
fdivr
fldenv
js
add
inc
repnz
lods
xchg
lds
test
not
sub
xchg
add
cmp
aaa
push
jb
scas
test
push
and
cmp
or
or
mov
xlat
loope
out
add
lea
push
int
les
push
add
sbbb
push
jge
mov
cmp
cmpsl
lret
mov
inc
movsl
mov
and
mov
mov
xchg
out
push
shlb
repz
or
ja
jl
add
mov
mov
jne
xor
imul
pop
aas
dec
push
stos
dec
test
push
ljmp
les
icebp
jb
cmp
adc
cli
jmp
lods
xchg
xchg
loop
lea
xchg
mov
jge
push
or
adc
das
imul
mov
mov
lds
push
inc
pop
rclb
cmp
jnp
fisubrs
into
jmp
fdivrs
hlt
call
mov
xchg
shl
enter
dec
or
lret
hlt
pop
adc
xchg
xor
xchg
je
adc
sub
xchg
sub
dec
in
lcall
mov
lahf
or
lcall
loopne
push
mov
mov
sub
jmp
outsb
adc
add
ljmp
sbb
inc
xchg
xchg
cmc
jle
push
xor
leave
data16
push
mov
and
dec
popf
sub
movsb
jg
andb
adc
push
xlat
loopne
lret
out
adc
fisubl
push
cwtl
in
in
xor
or
das
insb
jle
out
push
jns
add
sete
xchg
in
sbb
ljmp
jns
jnp
cmp
stos
or
push
push
and
lock
jno
sti
cld
repnz
or
cwtl
or
fisttpl
in
cltd
das
mov
sbb
sbb
out
sbb
orl
add
aam
js
pop
xor
jle
and
mov
sbb
lods
cwtl
lahf
test
xchg
sub
push
sbb
mov
lods
xchg
pushf
add
adcb
add
lock
inc
inc
xor
mov
dec
mov
mov
js
ja
lock
fcoml
adc
sub
nop
aaa
cli
xchg
push
adc
mov
loopne
sbb
rol
push
add
mov
jb
mov
jp
push
sub
fistps
mov
jae
ljmp
mov
mov
out
cmp
push
loopne
mov
inc
xor
aas
xchg
cmp
nop
or
sti
pop
jbe
xor
sahf
mov
sub
jg
push
movsl
xchg
sbb
call
stc
pop
xchg
les
in
shr
push
jmp
cmp
or
loopne
mov
pop
in
int
aad
lods
push
sbb
jl
sahf
gs
ss
andb
fs
pop
clc
xor
mov
pop
insb
mov
negb
or
pop
dec
mov
xor
out
subb
sub
aas
insl
scas
mov
aad
cmpb
jae
popa
dec
int
cmp
mov
add
pusha
out
mov
aad
mov
aam
lret
push
or
cmp
inc
stc
mov
faddp
xor
pop
lock
lds
int3
mov
or
add
mov
stc
out
push
cmp
pop
jp
jl
xchg
xchg
or
cmp
jae
aad
jmp
cwtl
xchg
sarb
mov
das
add
fwait
addr16
sbb
outsb
lock
mov
stos
aas
hlt
mov
leave
inc
mulb
in
pop
add
scas
mov
mov
or
jmp
imulb
or
aas
popa
dec
push
insb
test
pusha
shrl
xchg
out
lock
iret
inc
sub
pop
sbb
cmc
out
mov
mov
cmp
stos
int
and
push
lahf
inc
cwtl
enter
pop
lods
inc
stc
mov
nop
lea
aaa
xchg
inc
cmpsl
ret
lcall
adc
cmpsl
das
mov
sbb
add
jp
jae
stos
jle
repz
out
add
and
inc
xor
rorl
push
cmp
sub
pop
enter
lcall
les
popf
insb
inc
mov
addl
js
xor
cmp
sti
cmp
pop
push
sbb
aas
lods
or
outsb
jno
lock
mov
xor
dec
into
add
add
add
pushf
inc
dec
mov
arpl
fnstenv
push
xor
dec
idivl
pop
push
cs
ja
mov
cmpl
xchg
lods
dec
ret
pop
cwtl
jmp
cmpsl
jle
lods
jmp
cmp
xchg
mov
push
fs
mov
and
mov
out
cli
int
push
add
jne
inc
jbe
inc
sti
xor
out
pushf
int3
and
scas
jg
notb
jae
cmp
ljmp
pushf
ret
push
cmp
mov
cld
je
xor
xchg
dec
out
or
mov
mov
sub
fwait
mov
xchg
ret
mov
mov
mov
lods
push
mov
ret
adc
es
shll
mov
call
mov
mov
mov
xor
adc
sub
mov
xchg
mov
insb
mov
sbbl
insb
xchg
in
lods
div
repz
pop
cs
dec
test
sub
mov
mov
dec
and
fsts
push
out
or
adc
mov
or
movsb
dec
pop
dec
mov
pusha
pop
xor
in
or
add
dec
xor
aaa
ja
aam
repz
imul
bound
push
int3
es
push
add
xchg
lahf
or
xor
push
pushf
aad
sbb
adc
jbe
jmp
mov
jbe
fbld
stos
pop
mov
incl
xlat
nop
jge
dec
cmp
pop
mov
mov
fistps
test
roll
cli
std
or
stos
decb
orl
jp
mov
in
pop
jnp
xchg
ljmp
pop
les
sbb
in
addr16
out
fists
in
ret
pop
mov
rorb
and
aaa
sti
xchg
popf
sub
in
js
cli
sub
inc
push
add
adc
mov
orb
es
lock
inc
cmp
inc
movsb
cmc
movsb
repnz
adc
mov
loop
insb
lock
mov
insl
insl
lds
mov
xchg
pop
mov
mov
sbb
stos
adc
push
pop
lcall
int3
hlt
mov
mov
or
and
adc
push
pop
int3
out
push
mov
aad
sub
jmp
sub
inc
sbb
pop
cmpsb
and
punpcklbw
stos
sub
mov
mov
add
loope
aaa
adc
mov
dec
ret
or
xor
sub
bnd
ljmp
cmp
xchg
cmc
push
pop
inc
sub
das
add
dec
aas
push
cs
cmp
adc
dec
inc
add
jbe
add
ljmp
call
xchg
nop
mov
out
mov
and
or
fistpll
inc
push
xorb
xchg
lock
aad
add
or
sub
movl
cmc
xchg
pop
or
mov
ja
div
stos
add
inc
pop
push
mov
lcall
xchg
push
call
gs
push
push
into
mov
jo
sub
xor
push
les
mov
xor
fstps
inc
add
adc
scas
int3
jbe
push
test
xlat
pop
loope
testl
mov
jo
sub
icebp
dec
sbb
pop
push
ds
sub
in
push
cmp
test
jecxz
pop
mov
rorb
push
push
mov
jecxz
loope
inc
cmc
ret
mov
or
bound
mov
movsb
gs
lods
mov
jns,pn
xchg
push
pop
xchg
sbb
mov
jne
lock
and
stc
dec
scas
jmp
mov
cmp
mov
scas
and
push
sbb
or
ret
aaa
into
push
and
jle
pop
lock
sub
clc
sbb
fidivl
pop
ja
sub
xor
sub
push
je
push
idivl
cmp
popf
sub
dec
jmp
mov
repz
sbb
push
xor
lods
out
je
push
and
push
aas
mov
jmp
and
repz
add
div
pop
add
push
lods
inc
std
sbb
les
loopne
add
mov
pushl
aas
inc
mov
sub
push
push
cltd
lret
jb
loope
mov
fmul
xchg
push
push
in
fimuls
pop
aad
dec
movsb
jns
mov
pop
dec
imul
pavgw
aaa
mov
ret
popf
cld
dec
push
filds
outsl
hlt
dec
jp
pop
push
mov
xchg
into
push
jno
loop
loope
xchg
inc
cmp
push
callw
jmp
cmpsl
inc
mov
pop
cmp
clc
lods
daa
push
leave
cld
add
inc
lcall
test
pop
push
jmp
cmp
xchg
dec
mov
das
outsb
pop
sahf
mov
sbb
scas
sbbb
shrl
pushf
es
jae
scas
lret
fwait
mov
aas
and
sti
mov
sub
and
inc
inc
jbe
notb
sub
mov
mov
mov
dec
scas
mov
repz
loop
std
mov
in
subb
sub
stc
jge
jae
xchg
fwait
in
scas
push
fwait
or
sub
dec
jecxz
jbe
cld
aad
loopne
cwtl
lea
in
inc
mov
push
sarb
jo
jno
sub
orb
mov
scas
adc
sub
mov
sbb
mov
ret
mov
dec
imul
xor
cli
add
sub
popa
cmp
fs
ja
mov
jle
jmp
cmp
in
es
sub
mov
add
cmp
arpl
mov
jg
jecxz
mov
fwait
mul
xchg
ljmp
push
cmc
cmp
lea
inc
dec
mov
jbe
sub
mov
dec
dec
mov
leave
xchg
lea
insb
rsm
mov
xor
mov
leave
js
sbb
jge
in
adc
sbbb
je
pop
out
mov
shr
mov
cwtl
test
clc
jmp
mov
mov
cmpsb
cmp
lcall
adc
mov
jg
test
mov
push
mov
stos
aaa
leave
mov
cmpsl
mov
mov
divl
cmp
cmp
jge
ret
mov
popf
arpl
xchg
add
aaa
imul
mov
push
lret
repnz
pusha
add
sarb
or
dec
int3
pop
das
lahf
and
mov
stos
mov
adc
imul
mov
aas
mov
or
cli
lea
xchg
push
jl
popa
int
pop
add
jmp
sarb
aad
out
mov
div
dec
test
or
dec
mov
pop
and
xor
addr16
dec
enter
aas
imul
shl
js
leave
fcoml
mov
hlt
xchg
stos
orb
sub
adc
dec
mov
fdivrl
push
notl
push
cld
lahf
pushf
lods
mov
test
ja
std
jg
lcall
sub
cli
repz
rcll
sarb
adc
jmp
rcrl
repnz
mov
fidivs
xor
push
push
inc
jg
push
mov
ret
pop
cmp
xor
jns
cmp
xchg
jle
adc
dec
faddl
sahf
and
xchg
push
mov
xor
ss
imull
rol
push
push
jge
inc
dec
lcall
sub
cmpsb
fisttpl
adc
or
test
jno
repnz
insl
add
dec
mov
aas
repz
mov
loopne
push
add
xchg
inc
outsb
cmpsb
mov
sbb
int3
xchg
mov
enter
int3
scas
push
testl
hlt
fwait
iret
lcall
and
mov
stos
test
add
in
or
stos
xchg
cmp
lods
addr16
dec
aad
imul
cwtl
jge
xchg
add
xor
xchg
cmp
push
or
adc
xchg
adc
clc
mov
and
adc
mov
jecxz
lods
xor
jne
jecxz
sbb
dec
insl
fidivrs
cmpsl
mov
jns
mov
push
insb
mov
xchg
sahf
push
cld
cmpsb
js
mov
je
aas
cmp
mov
in
and
outsl
orl
push
lods
test
push
jae
hlt
or
jecxz
out
xchg
mov
ljmp
lret
xchg
mul
xor
cmp
push
push
and
xchg
loop
sahf
jb
pop
loopne
lds
movsb
out
mov
fwait
inc
sbb
es
out
push
icebp
mov
pop
xchg
mov
and
cmp
or
loop
test
hlt
in
andl
cmp
sub
and
push
sbb
adc
mov
imul
pop
hlt
jle
push
mov
adc
inc
stos
fldt
push
mov
cmpsl
adc
bound
and
cmp
cld
out
xlat
cltd
mov
lock
fs
jnp
aaa
inc
shll
and
or
je
xchg
jnp
loope
fiaddl
mov
jne
inc
enter
sbb
lret
int
add
mov
fmul
out
scas
lock
sub
mov
nop
adc
dec
and
cmc
push
leave
mov
jg
outsb
scas
jae
testl
adc
orl
push
insl
pop
and
cli
sub
mov
les
pop
pop
cmpsb
sbb
inc
inc
xor
add
push
mov
jecxz
jnp
inc
das
ss
xor
lcall
push
fcom
pop
int3
inc
pop
sti
and
sbb
or
out
xor
call
pop
inc
mov
xor
loop
jb
arpl
aad
mov
jo
pop
push
add
mov
out
xchg
jbe
out
test
push
nopl
mov
scas
movsl
fnsave
movsb
xorl
or
movsl
lods
xor
xor
mov
outsl
jle
mov
outsl
cs
addl
popa
stos
popa
sbb
adc
int
mov
inc
and
movsb
sbb
xchg
jb
test
xor
cmp
or
xlat
and
dec
mov
pop
and
lods
sahf
and
call
xor
movsb
inc
dec
jne
push
xchg
inc
sub
mov
add
xchg
orb
ror
js
push
aad
lahf
add
fnsave
and
fisttpll
mov
out
das
cmp
mov
or
inc
ja
aas
test
lret
arpl
jne
popa
movsl
shlb
out
lods
mov
xchg
test
push
add
pop
nop
push
xchg
sub
insl
loop
mov
xchg
mov
repz
inc
push
sub
push
orl
cmpsb
ficoms
mov
inc
or
cltd
test
and
pop
insb
shrb
inc
rol
fstpt
mov
int
inc
rcll
jnp
xor
in
nop
dec
in
les
scas
lret
into
sbb
pop
lcall
xor
fcmove
cmc
js
mov
test
sbb
fdivrp
out
inc
lea
insb
repnz
nop
repnz
jg
inc
dec
loop
data16
xchg
sub
inc
ljmp
lods
push
aas
mov
xor
out
sbb
popf
xchg
mov
push
jmp
jne
popa
xor
mov
pop
aas
push
push
pop
mov
lods
pop
or
mov
inc
pushl
cmpsl
pop
mov
js
jb
pushf
test
pop
jns
sbb
sub
push
mov
pop
out
test
push
lahf
sub
jmp
lret
rolb
jge
jecxz
xchg
or
out
inc
push
sbb
stos
out
lods
andl
jns
sbb
aaa
mov
pop
mov
inc
mov
bound
ret
xchg
movsl
mov
rorb
add
iret
lods
aam
loope
in
rol
xchg
sbb
pop
out
or
jae
iret
jecxz
xchg
ss
add
xchg
xor
or
mov
and
and
cmc
loop
inc
sar
jg
mov
jb
cmpsb
call
cli
xor
stos
ljmp
loop
scas
shld
clc
xchg
mov
jmp
pop
aad
in
push
pop
movsb
jmp
mov
inc
xchg
inc
andl
mov
cmp
xchg
daa
push
xchg
jne
popa
push
jnp
jbe
jg
dec
stc
adc
aad
aaa
xchg
ror
shrb
push
and
repnz
cmpl
mov
dec
xor
mov
je
sti
pop
test
mov
rorb
pop
rcll
lods
or
test
or
cmp
add
cwtl
mov
es
imul
mov
fwait
cmp
mov
mov
or
push
arpl
cmp
pop
mov
aad
cmp
cmp
xor
pop
and
jg
mov
xor
jmp
cld
in
out
scas
and
sbb
stos
push
mov
lea
xlat
add
stos
out
arpl
sahf
inc
adc
xchg
inc
sub
mov
mov
xchg
mov
pop
push
out
fdivrl
movsl
jmp
xchg
mov
inc
add
fcomp
jnp
cld
push
push
xor
push
mov
stc
xlat
mov
aas
sub
lods
adc
sbb
stos
fstpl
loope
jp
popf
push
mov
sub
dec
negl
dec
dec
int
fcomps
repnz
bound
jb
hlt
lods
inc
mov
mov
test
cmc
mov
ror
les
insl
in
add
addr16
add
aas
jb
or
lret
inc
push
adc
stc
fcoml
repz
xchg
inc
pop
pop
add
inc
mov
imul
insl
aam
jno
inc
xor
pop
cmp
jge
xchg
xchg
sahf
cmp
pop
push
je
inc
cmp
jne
push
out
out
enter
into
mov
faddl
xchg
test
push
stos
mov
xlat
jne
cli
cmc
add
lahf
mov
incl
mov
bound
xor
or
pusha
les
dec
pusha
inc
cmpsl
es
adc
jo
adc
adcl
shl
and
mov
cli
cmpb
xchg
jle
out
aas
jp,pt
inc
fsubl
dec
insb
xchg
rorb
mov
jne
lea
or
sbb
in
ss
in
jb
enter
inc
mov
ret
mov
incb
loop
jnp
and
dec
cmc
inc
lea
lock
ja
cmp
and
sub
or
sub
stos
sub
sbb
xchg
lods
in
movsl
jp
push
push
mov
xor
push
adc
scas
jae
adc
mov
cmp
inc
sub
pop
movsl
shll
add
xlat
xchg
out
mov
stos
ror
cmp
outsl
pop
mov
call
pushf
sub
sar
xor
inc
ficompl
jnp
outsb
es
jecxz
mov
hlt
mov
jp
cmp
sub
dec
inc
jo
lods
dec
xchg
mov
fldcw
add
xchg
data16
inc
mov
push
lds
insb
mov
daa
inc
popf
out
outsb
or
lock
cmp
cli
ret
neg
je
cmp
and
es
mov
lret
add
lcall
xchg
dec
mov
ror
lcall
out
inc
repz
push
push
popf
loop
lcall
aam
mov
mov
cmp
jecxz
cmpsb
push
jne
inc
xor
fldenv
in
ret
jecxz
xchg
into
data16
mov
jl
in
fsubr
test
hlt
adc
rcll
insl
mov
scas
dec
lods
or
repnz
data16
jo
int
clc
loopne
mov
lock
dec
xchg
in
das
fstps
and
daa
mov
mov
xor
pop
pop
jp
and
add
mov
or
inc
or
push
pop
cli
dec
popa
lds
test
fdivs
add
ss
cmpsb
xorl
xchg
adc
jmp
jnp
rcr
jbe
sarb
push
and
jbe
cmp
push
push
pusha
mov
sbb
in
stc
fiaddl
inc
xlat
insb
xchg
add
scas
aam
inc
sub
or
movsl
test
in
repz
and
fstl
xor
ljmp
repz
sahf
fs
mov
sub
out
jg
mov
xchg
adc
xchg
out
fs
push
and
sar
add
movsb
pop
nop
test
add
mov
pop
xor
insb
fimuls
imul
lock
xor
test
sbb
rclb
out
test
sbb
les
mov
mov
mov
jle
cmp
or
mov
js
pop
shl
hlt
cli
pop
test
xor
lea
inc
inc
cmpb
lods
imul
push
mov
in
and
pop
mov
dec
dec
lahf
add
mov
or
out
sahf
out
mov
xor
shll
pop
scas
jbe
loope
mov
cmp
xor
jns
and
add
call
sti
pop
push
loopne
jbe
xchg
push
xchg
inc
clc
push
mov
fidivs
push
popa
adc
cmp
jl
mov
xor
in
into
fsts
pop
outsb
es
or
jp
dec
stos
add
inc
jl
icebp
adc
fwait
insb
pop
lcall
dec
fs
mov
add
adc
mov
and
adc
sbb
rcrl
stos
and
lock
and
xchg
jae
fisttpll
xlat
imul
or
add
jg
leave
mov
xchg
push
push
or
jp
adc
ds
pop
rorb
sti
loop
xchg
pop
idivl
adc
out
vmovhps
cmp
cwtl
dec
xor
add
sbb
hlt
ljmp
jae
out
push
jmp
jnp
sarl
cmpsb
pop
scas
ja
sbb
cli
je
out
add
movsl
xchg
cmc
repnz
add
jp
push
or
neg
iret
idivb
sahf
xor
shrl
jae
divb
pop
aam
sbb
mov
inc
loopne
pop
adc
xlat
lods
xor
stos
out
scas
or
lods
ja
in
int
mov
push
out
cltd
sbb
cmp
shlb
repnz
fnstsw
xchg
testb
xchg
cmp
mov
rcll
lret
stc
jbe
stos
adc
pop
mov
jb
xchg
loop
es
mov
dec
jle
dec
cmp
pop
je
pusha
imul
push
rcll
xchg
and
push
jnp
lods
sarl
xchg
xchg
je
inc
sub
sub
sbb
or
sub
pop
aam
mov
js
pop
enter
inc
push
pop
aam
into
push
aaa
pop
lock
loopne
shr
pop
mov
xchg
and
sbb
dec
dec
pop
cld
inc
divb
imul
or
mov
cmp
lahf
xlat
int
jge
movsb
pop
pop
add
lea
push
xchg
cmc
mov
negb
jns
add
stc
sbb
iret
inc
div
lahf
ja
movsb
jae
lret
in
movb
mulb
push
mov
mov
out
pop
scas
push
loopne
int3
test
mov
pop
mov
in
loopne
lret
dec
or
cmp
sahf
cmp
rol
das
adc
out
lock
xor
jno
shlb
inc
loope
int
imul
xor
push
or
es
mov
bound
mov
adc
imul
push
cmc
push
movsb
fisubrs
pop
pop
mov
jnp
mov
or
mov
lods
push
iret
mov
inc
and
dec
push
into
add
push
ret
hlt
xchg
neg
hlt
int3
jl
pop
jmp
sbb
push
movsl
dec
sub
in
mov
inc
cmp
rclb
pop
xchg
insb
xchg
inc
fsts
cmp
fcompl
and
leave
and
aas
mov
aam
cli
add
lret
inc
lods
dec
inc
test
ss
dec
xchg
add
mov
fildl
cltd
and
mov
mov
inc
and
adc
xchg
stos
adc
mov
adc
dec
or
je
insl
pop
fs
mov
pop
inc
jne
xchg
rol
sbbl
mov
or
ss
int
and
loop
stc
pop
pop
push
and
xlat
add
cmp
lahf
xchg
sarl
outsb
add
lods
out
push
stos
mov
js
jmp
add
add
pusha
fcoms
xlat
xlat
in
or
mov
mov
inc
out
out
dec
push
shlb
and
lods
ds
add
and
cli
mov
into
lcall
mov
cmp
fists
clc
iret
pop
push
mov
push
dec
lahf
or
loop
stc
push
shlb
dec
sbb
jmp
jns
pop
or
cmpsb
mov
addl
loop
clc
and
pop
sbb
int
rcrb
xchg
xchg
xchg
inc
mov
push
cmp
in
cmpsl
aam
cs
sub
xor
aaa
jg
inc
jno
or
aam
pop
mov
pusha
xchg
nop
inc
lock
in
lret
daa
mov
sbb
std
push
shlb
roll
jno
ss
mov
jg
test
pop
sub
push
outsl
and
jl
mov
mov
lcall
mov
xchg
sub
inc
xchg
push
sbb
mov
xchg
push
mov
addr16
aas
jle
pusha
add
or
lahf
jle
jne
rclb
pop
cwtl
in
stos
jge
cmpsb
leave
add
fisttpl
cli
dec
lock
pop
icebp
xor
xchg
lret
pop
lea
addl
push
aaa
addl
sub
and
pop
fsub
mov
and
push
sub
hlt
int3
fcmovbe
test
fstpt
imul
inc
call
sub
dec
push
xchg
lret
cmp
pop
sub
adc
push
loopne
lds
pop
push
push
shlb
inc
adc
sub
cmc
sub
pop
or
mov
insb
mov
clc
or
js
sbb
dec
and
test
jo
les
or
movsl
nop
mov
outsb
stos
mov
xchg
lock
jge
insb
sub
dec
pop
pusha
mov
mov
or
mov
mov
lcall
push
cltd
pusha
test
and
mov
cmp
mov
lds
mov
add
rol
and
push
inc
add
mov
aas
pop
jecxz
dec
xchg
rcrb
pop
cmp
cmp
pop
std
cld
jmp
test
enter
mov
and
jmp
and
jno
cs
cs
mov
jmp
mov
adc
inc
mov
push
cmpb
out
sub
ret
and
inc
ds
scas
and
sbb
addr16
ficoml
fldcw
mov
jge
mov
arpl
lea
jnp
mov
repnz
mov
mull
jl
dec
push
or
push
cwtl
jb
mov
repnz
xchg
lret
fistps
push
movsb
adc
jbe
addr16
call
das
cltd
lods
leave
sbb
xorl
outsl
repz
ja
fistps
pop
pop
ret
mov
inc
mov
icebp
xor
cld
aam
cmp
jnp
clc
push
dec
pop
xor
out
aas
jb
mov
and
add
jmp
das
jmp
pop
popf
xor
bound
add
sbb
mov
iret
add
out
aam
mov
lock
lret
pop
mov
pop
adc
or
lds
daa
incb
insb
jecxz
adc
dec
loope
loopne
sub
push
push
orb
sub
xlat
or
mov
test
aas
aam
xor
xchg
shl
xor
or
inc
scas
push
loope
inc
sub
push
xchg
pop
xor
aad
sbb
es
pop
ja
xor
and
scas
jb
and
arpl
or
fdiv
cli
cmc
ret
sbb
out
loope
int
jg
sub
fldcw
call
add
push
push
enter
subb
loop
push
add
psrlq
sbb
je
push
lret
push
out
or
adc
inc
adc
jg
jb
in
jae
fidivrl
mov
insl
push
pop
mov
mov
jecxz
out
rcll
divb
mov
jp
cmp
aaa
rcll
push
clc
aad
icebp
into
cmp
pusha
jne
adc
ret
loope
insl
je
lea
stos
mov
push
dec
sarl
insl
ja
jne
popa
rolb
xor
lcall
xchg
aam
mov
ss
dec
pop
ret
roll
lds
iret
mov
add
adc
dec
popa
dec
test
ret
fdivrl
repz
xchg
ret
dec
enter
sbb
push
fcmovne
loopne
std
mov
and
pop
ret
pushf
push
lahf
cmpsl
adc
mov
cmp
xlat
mov
ret
adc
std
stos
leave
sbb
and
lock
sub
nop
daa
sbb
cmc
incl
es
jbe
mov
jnp
repz
out
jp
imul
mov
mov
lods
movsb
lock
xchg
sahf
ret
ret
xchg
dec
js
ljmp
adc
pop
cwtl
xor
dec
lods
jmp
adc
pop
cld
in
imul
mov
pushf
cwtl
push
sti
cpuid
mov
inc
iret
inc
bound
clc
mov
aaa
fwait
lar
mov
lods
mov
jae
cmp
mov
into
std
out
sbb
stc
stc
inc
rcll
adc
xor
in
mov
or
neg
mov
pop
xor
addl
push
jl
pushf
mov
jmp
lahf
push
movsl
add
mov
mov
xor
bound
or
sti
pop
fisttpl
cmpb
xor
inc
stos
ret
mov
push
scas
inc
xor
adc
stc
xchg
mov
test
mov
ljmp
adc
loope
enter
jecxz
jp
test
std
mov
mov
push
sub
imul
mov
aam
adc
cmpsl
shlb
or
pop
dec
rcr
fbstp
sbbl
jne
sbb
jno
or
add
push
fwait
push
dec
xor
test
xchg
xorb
shlb
iret
push
mov
mov
or
pop
stos
add
push
insl
ss
jge
testl
mov
scas
xor
stc
clc
sbb
push
sti
sub
mov
nop
pop
dec
lret
dec
movsl
outsb
out
jne
ja
jle
mov
xchg
sti
pop
outsl
cmp
out
cld
mov
test
jmp
sbb
jle
fldt
enter
int3
pop
cwtl
and
adc
add
in
adc
movsl
daa
jne
lret
xchg
jmp
push
test
xchg
sbb
testl
pushf
mov
test
movd
and
xchg
lret
and
push
inc
and
mov
xor
movsl
add
pop
test
repz
mov
adc
pop
mov
sbb
lods
mul
jge
mov
cmp
insl
mov
in
loopne
ret
fwait
mov
sbb
cltd
mov
hlt
mov
int3
push
and
jp
jp,pn
aaa
xor
cs
xor
filds
jb
ror
fnstcw
pop
push
mov
adc
sbb
sub
pop
out
pop
cwtl
lds
testb
pop
xchg
cli
mov
xor
mov
mov
fldt
das
repnz
and
mov
inc
cltd
or
inc
jl
stos
mov
ja
std
add
pop
xchg
cmp
test
xchg
popf
jae
ret
jae
adc
pop
addl
frstor
push
bound
pop
xchg
rcl
mov
jo
les
pop
add
lcall
shld
test
mov
test
dec
jbe
push
shrb
pop
in
neg
mov
iret
mov
or
jb
fadds
mov
mov
test
pop
xor
dec
xor
adc
xchg
sbb
mov
sbb
fildll
aam
inc
dec
repnz
aas
lods
sahf
lock
arpl
fists
arpl
les
fsubp
fs
jl
je
sbb
inc
test
lea
mov
test
push
sahf
aas
fadds
scas
sbb
fdivrs
gs
cs
cmc
movsl
push
mov
in
jne
testb
daa
int
inc
cs
fs
push
jecxz
or
mov
xlat
push
and
in
cmp
cltd
mov
insb
inc
cli
cwtl
jmp
adc
push
push
xchg
aas
cmp
xor
loope
or
mov
dec
inc
sbb
or
jbe
pop
call
test
loope
popf
rolb
inc
cmp
dec
jnp
xor
fs
dec
into
jge
xchg
xorb
pop
es
and
lcall
mov
xchg
push
les
inc
lret
pop
test
xor
std
mov
lock
cmp
mov
cmp
pop
xor
jle
pushf
jmp
sub
outsb
rclb
jns
movsb
cmpsl
arpl
lods
out
outsl
and
mov
mov
insl
xchg
mov
inc
repnz
and
mov
xor
xchg
leave
out
xchg
testb
adc
inc
pop
aam
insl
jns
frstor
jnp
mov
push
sub
push
out
xchg
xchg
sbb
pop
xor
or
or
xor
sbb
popf
fwait
dec
ja
mov
sub
or
push
jp
orb
fsubr
lods
testl
ljmp
or
and
scas
xchg
mov
mov
xorl
jecxz
dec
out
xor
rorl
mov
xchg
xchg
loopne
in
pop
dec
nop
lret
jns
adc
jns
or
adc
pop
and
hlt
mov
mov
pushf
adc
pop
fmuls
jl
adc
hlt
push
xor
push
push
push
dec
sti
cmp
dec
xor
stos
jb
inc
dec
mov
and
add
cmpsl
test
add
orb
add
fs
mov
lock
mov
outsl
mov
jle
into
sub
fsub
dec
in
repz
fbld
shrl
mov
test
cs
addr16
pop
jbe
cli
mov
pop
leave
pop
mov
push
std
mov
aam
sub
mov
mov
jnp
rcr
mov
mov
dec
xchg
push
aas
or
xchg
mov
xor
ret
aas
add
ret
jo
adcl
mov
mov
stos
fildl
xchg
stos
fildll
jne
and
mov
cmpb
sub
inc
das
in
out
in
push
stos
aad
inc
frstor
pop
jne
mul
push
das
popa
inc
jbe
add
cmp
in
fucomi
cmp
or
lea
sahf
xchg
cli
sub
mov
add
fxch
jecxz
lea
and
pusha
or
test
rcr
mov
testb
rcr
jmp
inc
in
cmpb
and
clc
add
fmull
incb
push
jae
ja
and
mov
mov
push
inc
divb
fcomps
inc
mov
jmp
icebp
or
mull
addb
mov
jle
jl
and
push
fwait
in
mov
mov
rolb
insl
ficomps
and
sub
inc
dec
mov
cmp
mov
xor
mov
rorl
cltd
push
rcrl
test
or
fldl
xchg
mov
mov
jl
lock
push
sub
fdivs
and
jg
adc
xchg
push
or
popf
xchg
push
adc
cmp
pop
scas
popf
inc
cltd
inc
imul
imul
addl
daa
inc
cmpsl
loope
les
jmp
ds
or
leave
xchg
push
out
sbb
lret
mov
shlb
mov
mov
jbe
popa
cli
xor
pop
inc
nop
jecxz
mov
sub
test
xor
xor
fildll
jge
jmp
jp
adc
xchg
jbe
pop
shl
cwtl
mov
sub
test
fdivl
mov
mov
adc
in
stc
ret
mulb
cs
xchg
mov
add
and
cmp
loopne
sub
stos
or
stc
adc
cmc
aas
push
lds
xor
mov
test
fs
mov
sbb
mov
cltd
xor
mov
fiaddl
cmp
int3
ret
or
imul
xor
cli
into
stc
add
pop
dec
lcall
test
mov
xchg
stc
and
push
jno
push
adc
repz
jge
ret
pushf
call
xchg
adc
out
in
adc
push
and
mov
lods
jne
inc
subl
mov
cmp
push
xor
pop
mov
ja
popf
pop
movsb
lret
addr16
rcr
sub
and
sub
inc
pusha
sbb
and
lock
pop
push
not
push
shll
xchg
add
dec
imul
and
scas
sti
or
call
mov
jg
scas
cltd
add
dec
repz
cwtl
es
adc
push
jns
stos
push
dec
int3
lds
sub
out
fsts
jns
fdivp
aas
repz
cmpsl
adc
add
sbb
mov
jb
sbb
dec
add
inc
xor
sub
loope
outsl
andl
dec
and
les
sub
nop
jp
rol
sbb
inc
xchg
push
dec
jae
sub
fnstcw
pop
push
cmp
cwtl
jae
add
mov
sub
or
xor
or
add
pop
imulb
push
shrb
mov
adc
mov
test
outsl
sbb
xor
pop
insb
out
scas
sbb
rcrb
imul
ret
and
or
bound
rol
mov
xchg
pop
jno
ja
int3
xor
repz
shlb
popf
loop
lods
dec
mov
dec
in
js
das
test
jns
push
movsb
xchg
out
xchg
mov
mov
jne
mov
jo
in
lds
loop
outsb
and
ja
cmpl
dec
add
xchg
cmp
mov
sbb
inc
pop
aad
xchg
aad
mov
xlat
icebp
stos
test
or
mov
inc
in
fdivrs
push
sbb
jne
adc
out
lahf
outsb
pop
aad
call
sbb
fstpt
stc
push
and
movsb
nop
push
test
xor
movsb
aas
arpl
sar
icebp
fiaddl
pop
jb
lret
mov
mov
xor
mov
sub
jo
hlt
mov
aad
das
mov
and
mov
xor
jle
add
jmp
out
dec
adc
and
aam
clc
aaa
lods
jmp
movsl
repnz
inc
test
dec
and
or
test
inc
pusha
mov
mov
aam
adcl
xchg
in
lods
out
je
mov
inc
inc
jnp
add
stos
xor
stos
xor
testb
mov
roll
fildl
insl
mov
cmp
out
lods
outsl
sahf
pop
adc
jae
nop
scas
push
fcomip
fcmovbe
pop
or
or
movsb
scas
clc
sbb
lea
cs
cmc
inc
in
in
je
or
sarl
inc
mov
dec
pop
mov
mov
enter
sbb
dec
dec
jp
dec
shll
dec
xor
ljmp
call
movsl
and
pop
repnz
pop
push
ds
xchg
sub
int
mov
out
in
gs
icebp
pop
push
scas
adc
cmpsb
repnz
vpand
jnp
pop
es
cwtl
mov
movsb
es
mov
lcall
cmp
xor
pop
or
and
stc
add
out
sbb
mov
pop
into
cmpsl
lock
leave
cwtl
aas
inc
movsb
inc
or
xorl
cltd
or
ds
mov
roll
mov
cwtl
ss
dec
push
mov
dec
inc
js
or
dec
sarl
hlt
or
mov
into
pop
pop
int3
and
pop
jns
or
stos
dec
fcomi
mov
xor
int3
ja
imulb
in
push
call
and
push
repnz
cld
loopne
popf
addl
jge
xchg
jmp
mov
or
mov
pop
push
dec
pop
notl
push
pop
push
pop
test
fwait
add
ss
jp
dec
andb
adc
pop
jl
mov
xchg
xchg
out
jno
sbb
xlat
push
and
mov
mov
mov
sbb
pop
lods
sbb
inc
and
cmp
jle
inc
pop
addr16
jecxz
pushf
push
test
shrl
mov
sub
or
mov
dec
dec
xor
call
pop
sub
jl
cmp
xchg
pop
rclb
add
ret
lret
xlat
push
jns
mov
sbb
testb
and
lods
sti
mov
lcall
insb
mov
stc
in
lret
repnz
cmp
push
arpl
mov
hlt
leave
cmp
adc
in
xor
and
sbbb
imull
scas
cwtl
push
or
pop
in
cltd
cmp
rep
stc
xlat
inc
cltd
sub
cld
mov
sar
arpl
and
dec
mov
sub
cmp
cld
sub
inc
cmp
xor
mov
pop
xchg
in
in
hlt
fnstenv
mov
xchg
dec
cmpsl
or
sahf
cmp
mov
js
mov
clc
adc
or
jp
cmp
inc
lods
inc
push
jp
sbb
clc
mov
and
push
lahf
cmp
mov
outsb
lea
loope
sub
sbb
gs
stos
adc
nop
and
roll
ss
xchg
dec
mov
icebp
pop
sub
das
cli
shlb
sbb
out
jmp
imul
fistps
mov
icebp
fdivl
add
or
jl
jo
push
mov
mov
mov
data16
xlat
sahf
inc
imul
cld
std
adc
jl
or
add
jb
enter
cli
jnp
ret
imul
incb
sub
push
pop
js
das
mov
clc
insb
push
jne
sahf
aaa
push
movsl
lods
gs
or
inc
cmc
test
lea
and
cs
dec
ja
int3
andb
cmp
cmp
adc
sbb
sub
sub
mov
loop
dec
add
push
cmp
and
imul
hlt
test
dec
jbe
mov
fs
cmp
leave
jns
in
mov
inc
add
mov
sub
std
push
test
pusha
xor
inc
push
fs
ret
test
mov
lahf
movsb
repz
insw
enter
rorb
jp
fildl
inc
es
mov
inc
outsb
add
xor
aaa
fisubl
sti
in
aad
push
jl
mov
jae
push
mov
sbb
aaa
es
mov
lock
ficoms
ja
lds
dec
stos
add
xchg
mov
xor
lcall
movntq
out
pop
sti
push
pop
cwtl
and
shlb
movsl
xor
mov
mov
stos
and
mov
or
fistps
xor
mov
lahf
lahf
jae
test
dec
cmp
or
jo
imul
mov
sbb
push
adc
xor
ds
mov
fstp
cli
mov
hlt
mov
jne
adc
scas
aam
outsb
xchg
data16
fstpt
xor
and
push
jns
sub
bound
and
arpl
call
mov
lock
cmp
pop
test
cmp
int3
mov
and
inc
mov
sahf
sub
lds
scas
fsubl
dec
sub
aad
rcrl
lea
hlt
pop
jecxz
call
js
pusha
mov
aas
mov
call
mov
mov
inc
push
lret
test
xchg
test
into
jmp
jg
xchg
inc
pushf
and
sub
jno
outsb
js
xchg
stc
adc
mov
ret
adc
xor
lea
fisttpl
movsb
cmp
adc
jbe
repz
cmp
aad
popa
mov
mov
and
adc
pusha
pop
bound
scas
ss
lock
xor
and
jle
jne
sahf
in
push
fadds
mov
mov
addr16
adc
in
jge
pop
adc
add
cwtl
mov
and
aaa
shrb
mov
add
repz
dec
gs
push
xor
rcrb
or
movsl
xchg
daa
lcall
pop
ror
cmp
pop
test
jne
xlat
xor
gs
test
data16
cmp
lods
xorl
ret
mov
call
push
sbb
inc
cs
cmpsl
dec
jns
insb
sarl
aad
mov
xchg
add
sbbb
push
inc
and
jns
mov
rorl
xchg
pop
add
dec
pop
adc
int3
popf
add
adc
lret
xchg
sbb
and
in
ljmp
insb
daa
fistpll
xlat
incl
das
jp
fwait
adc
and
jecxz
jmp
mov
pop
jne
outsl
pop
loopne
cmp
stos
ret
orb
sub
adc
cmp
test
jmp
sbb
in
mov
jl
gs
pop
cltd
fidivrs
or
jns
adc
popa
test
dec
mov
lcall
xor
jmp
std
mov
js
cmp
imul
or
fwait
xor
pop
mov
mov
xlat
sub
mov
cmp
add
cmc
out
mov
js
pop
cmc
sti
jns
mov
mov
xchg
fadd
loop
nop
xchg
add
int
xor
inc
mov
dec
jne
pop
pop
das
daa
or
and
js
adc
cmpsl
inc
scas
rcrb
xlat
lret
mov
iret
jp
es
xchg
int3
mulb
and
jbe
call
sbb
cmp
fidivl
sbb
mov
dec
test
pop
pop
pop
adc
xor
inc
dec
add
shll
cmp
pushf
repz
es
sub
mov
outsb
cmp
clc
cmp
fisttpll
inc
dec
xchg
sbb
xor
cmp
ja
mov
pop
popf
cmp
mov
into
fdivrs
test
scas
dec
jp
add
popa
outsl
cmp
push
add
jl
dec
cs
mov
dec
mov
rcrb
push
mov
push
divb
scas
dec
xchg
popf
xchg
mov
add
clc
inc
test
dec
adc
jns
sub
cmp
shrb
cmp
mov
adc
negl
jle
and
mov
sbb
nop
bound
inc
decb
repz
jo
dec
in
cmp
sarb
test
mov
ret
pop
cmp
into
sub
fiaddl
add
and
push
push
add
adc
imul
subb
xchg
sub
add
add
jne
mov
cltd
movsl
cwtl
setl
mov
clc
inc
dec
cmpsl
test
mov
xor
or
popf
dec
nop
ret
popf
dec
leave
enter
dec
es
jo
pop
pusha
sarl
hlt
popa
mov
cmp
dec
in
sub
leave
xor
mov
add
in
jge
adc
iret
dec
cld
sub
sub
dec
mov
sub
mov
jmp
nop
lods
sahf
inc
xor
incb
cmp
inc
repnz
cmp
fsubp
jg
insl
dec
insb
out
fsubrs
add
mov
pusha
sub
lcall
frstor
aam
shrb
xor
pop
lahf
test
mov
mov
js
cmp
cmp
fcompl
jne
in
inc
outsb
out
mov
inc
addl
inc
mov
pop
xchg
sbbl
adc
adc
xchg
jnp
fildl
js
and
push
inc
jo,pn
aas
dec
pop
cmpsb
loope
push
and
test
cmp
ret
mov
adcl
cmpsb
test
pop
pop
stc
mov
movsl
loope
sub
xor
xchg
xor
xchg
and
in
into
fiaddl
aas
or
push
add
icebp
test
mov
push
pop
dec
mov
jl
add
lods
lods
fcompl
or
add
sub
or
test
pusha
push
or
setg
push
movsb
cwtl
sti
inc
fbstp
in
jae
loop
sub
and
imul
push
mov
andb
in
cmpsb
add
cmp
inc
inc
adc
rorl
xchg
sub
xchg
repnz
stc
stc
inc
nop
xchg
movsl
push
lahf
mov
add
ret
sbb
sarl
imul
jne
jb
addr16
rcl
scas
push
popa
hlt
xchg
loope
sbb
pop
push
jp
popa
sub
push
mov
sahf
mov
fildll
jmp
aad
xchg
aad
ja
and
lock
or
fcoml
adc
push
xchg
das
xor
sub
imul
add
xor
mov
in
dec
xor
repz
jl
int3
xor
iret
sbb
sbb
sbb
nop
xchg
cmp
jo
xor
xchg
sbb
rorl
adc
fdivrl
mov
stos
shl
xchg
sbb
icebp
rclb
mov
lods
stc
jnp
das
movsb
xor
movsl
btc
call
xchg
icebp
lcall
lahf
std
xchg
sbb
in
insl
in
pop
out
test
fstpl
push
shll
xchg
int
aam
subb
cmp
push
lret
test
aam
daa
xchg
mov
mov
nop
cmp
adc
lcall
cwtl
mov
pop
inc
stc
and
mov
mov
or
clc
adc
pop
mov
into
xor
mov
icebp
out
sti
fsts
cmp
leave
adc
cmp
nop
inc
xor
pop
outsl
inc
adc
pop
and
mov
inc
aad
fistpl
jb
xor
inc
jnp
push
repz
pop
imul
fistpll
push
rep
in
pop
and
leave
jecxz
xchg
add
cmpsb
lods
sbb
movsl
mov
xor
scas
xor
inc
loopne
jmp
cmpsl
or
push
mov
lret
add
jl
les
sub
and
stc
sub
sub
xor
add
mov
loope
cli
jg
cmpsl
cs
shrl
xchg
mov
mov
mov
ljmp
mov
pop
pop
or
ud1
adc
lret
add
adc
pop
and
push
shlb
pop
bound
fnsave
pop
mov
movsl
add
pop
push
in
and
jge
stos
and
mov
jp
lahf
and
lcall
dec
xor
mov
lock
flds
out
push
mov
lock
es
mov
inc
aas
xor
mov
jge
pop
push
stos
xor
and
sbb
pop
inc
daa
mov
pop
mov
pop
inc
pop
sbb
push
aam
pop
push
pop
test
sbb
adc
stc
mov
adc
clc
or
mov
pop
pop
pop
cwtl
dec
stc
shll
sub
adc
cmp
mov
inc
and
data16
xchg
sbb
loop
jnp
movsb
dec
mov
xor
ja
and
cmpl
mov
push
and
cs
movsl
shl
mov
das
or
repz
mov
test
enter
jbe
scas
int
les
leave
pop
cltd
dec
in
mov
xor
je
insb
test
ds
sub
inc
lcall
push
div
cmp
testl
dec
xchg
orb
mov
xchg
fmull
lahf
lea
jns
add
out
push
push
loop
lea
fistpll
cltd
mov
sub
lods
or
nop
or
adc
jmp
fildll
fnsave
insb
cmp
and
xor
dec
incb
ficomps
clc
fsts
lods
sti
mov
jnp
sti
lock
jl
or
imul
push
mov
xor
mov
dec
lcall
xchg
add
fiaddl
dec
mov
pusha
mov
adc
cmpsl
inc
repz
clc
jne
lret
mov
ficomps
mov
push
add
pop
insb
push
jnp
adc
dec
sub
adc
mov
fwait
jmp
cmpsb
dec
add
xchg
pop
repnz
fwait
cmp
lods
mov
add
add
adc
stos
addr16
push
and
les
lahf
je
pop
pushf
cmp
xchg
mov
lock
rcl
imul
inc
lret
lds
pop
fst
mov
xor
and
call
adc
add
mov
cmp
stos
and
jns
pop
ja
mov
je
repnz
loop
inc
lea
cli
cmp
adc
or
lods
ljmp
arpl
in
mov
in
xor
scas
or
movsl
mov
inc
inc
cmp
jle
ficoml
cmpsb
idivb
and
or
jne
popf
ja
lea
push
push
mov
sbb
mov
lods
push
rol
in
js
fmuls
jno
xor
and
call
and
dec
addl
and
mov
dec
push
push
xor
lcall
inc
push
cs
xchg
stos
push
test
xchg
aad
sub
divb
clc
lock
add
add
jne
outsl
mov
and
cmpl
loop
pop
xorb
loope
jmp
bnd
shrl
and
test
fistpl
xor
push
sbbl
add
rcll
lahf
or
imul
imul
pusha
imul
mov
insl
aas
inc
shrb
aad
fdivrs
adc
lret
out
inc
leave
shlb
cmp
jnp
pop
dec
add
inc
into
mov
mov
or
push
or
popf
sub
and
rcll
ss
xor
int3
adc
xchg
add
icebp
test
xchg
mov
xchg
ss
rcl
daa
aam
inc
xchg
mov
cmp
jo
sbb
sub
jae
mov
jo
mov
jp
test
testl
mov
mov
je
cmpsl
and
test
push
push
and
jno
mov
lcall
jg
fmul
aam
das
mov
and
fdivl
mov
aad
mov
out
sub
fwait
lret
ret
fs
and
bound
add
jle
shl
lahf
sbb
mov
and
sub
dec
shlb
aad
push
add
out
shr
scas
xor
dec
cmp
stc
cmpb
inc
ljmp
xchg
mov
pop
cmp
jecxz
mov
loope
into
and
ss
inc
dec
test
push
jns
jle
xchg
je
fcmovnbe
call
stc
cmpsb
stc
nop
jb
fists
jae
jo
pop
add
jle
mov
cltd
int
dec
sti
cltd
outsl
jae
call
sti
or
les
adc
test
jae
je
pop
inc
lds
into
mov
sub
jl
pop
out
in
shlb
cmp
mov
cs
xchg
ljmp
les
cli
cmp
popa
call
in
test
mov
fnstsw
dec
popa
in
sub
addr16
mov
push
mov
mov
pop
js
mov
cmp
sub
loopne
test
les
add
push
jle
repnz
mov
xchg
cmp
pop
mov
pop
test
lcall
xchg
mov
push
jo
cs
fisttpl
xchg
aad
jo
xchg
mov
add
out
out
repz
imul
pop
enter
push
and
sbb
cmp
xor
xchg
fs
fnstenv
sbb
inc
in
into
xchg
mov
ret
lret
pop
lret
pop
aam
dec
or
cmp
push
icebp
mov
or
cmp
into
jle
ja
das
andl
ljmp
loope
out
inc
lret
out
cmp
shrb
inc
outsb
push
mov
mov
push
add
lods
xorb
jae
je
jl
mov
es
pop
jmp
adc
loopne
mov
or
popf
into
pop
loopne
ret
test
fiaddl
test
xor
test
sti
arpl
fnstenv
pop
test
pop
push
push
mov
movsl
mov
cmp
aad
jg
mov
jg
aam
mov
jno
dec
int
hlt
iret
mov
xlat
push
shrb
sbb
push
shr
pop
cwtl
mov
and
sub
jo
sbb
out
ds
inc
push
pop
or
aam
xchg
cmp
outsl
xchg
cld
jge
pop
out
rorl
jl
fwait
xchg
mov
push
xor
mov
and
add
cmc
push
mov
inc
dec
popf
imul
cld
sub
addb
and
pop
jb,pn
popa
aam
inc
mov
repz
push
cld
std
xchg
ds
mov
test
stc
jb
push
subb
cmp
or
lcall
sahf
xchg
and
cmpsb
lcall
push
cs
aaa
shlb
lret
je
lahf
pop
pop
arpl
enter
lahf
xor
add
adc
stos
inc
inc
push
shrb
andl
imul
and
push
mov
jecxz
mov
fwait
push
fdivrs
std
mov
fdivrs
roll
dec
dec
push
inc
cmp
or
bound
push
mov
xchg
mov
imul
push
loopne
sbb
or
lds
jge
insb
jge
cli
ret
inc
dec
mov
xor
std
add
cltd
and
adc
pusha
fdivl
and
xchg
orl
push
aaa
sarl
jmp
ljmp
adc
jae
xchg
popf
popa
push
scas
movsb
jp
inc
les
or
dec
push
mov
cld
sahf
jp
adc
pusha
cmp
out
ja
add
enter
sarb
lret
loop
in
test
rcrb
and
xor
xchg
mov
xchg
cs
popf
addr16
mov
sbb
cmp
inc
mov
sub
jne
and
bound
and
adc
movsl
stos
ficoms
in
mov
xchg
ja
mov
cmpsl
scas
out
jne
push
jg
add
jno
clc
int
pop
xchg
les
pop
sarb
mov
repz
imul
mov
lret
cli
out
dec
imul
nop
imull
or
in
imul
cld
add
xlat
ret
push
push
xor
adc
or
shlb
push
sbb
cltd
sbb
gs
shrl
pop
and
orb
mov
pop
into
add
daa
out
xchg
mov
mov
xchg
pop
rolb
andb
ret
cvtdq2ps
push
inc
xchg
ja
lret
jg
push
add
inc
adc
std
cmpl
push
ret
inc
movsb
cmp
fs
out
pop
cld
jo
jle
sub
mov
imul
xor
mov
loopne
jns
icebp
out
inc
out
ljmp
cmp
push
jge
test
loope
test
push
sbb
mov
cmpsl
mov
js
dec
scas
fnsave
xchg
ret
dec
mov
add
fldt
mov
pop
and
out
pop
xor
and
bound
jbe
loop
xchg
jmp
sub
leave
mov
mov
cld
repnz
sub
mov
xor
xchg
into
shrl
mov
mov
add
or
dec
aad
das
sub
clc
xchg
cmc
jge
xor
into
and
packsswb
iret
lock
sub
sub
int
js
popf
sarb
ficoml
push
mov
nop
adc
test
pop
dec
add
inc
arpl
dec
test
ljmp
lock
ja
sub
dec
jge
popf
pop
push
xchg
pop
imul
pushf
jecxz
call
popa
ljmp
int3
sbb
addr16
adc
mov
lods
xor
mov
inc
lock
fs
scas
or
mov
icebp
mov
sti
add
or
and
pop
je
sub
pop
imul
dec
xchg
ja
jle
ret
cli
mov
andl
push
jbe
ljmp
ljmp
test
xchg
lahf
jno
fld
dec
in
subb
stos
mov
mov
pop
lahf
dec
repnz
aaa
pop
addr16
dec
and
pusha
add
das
mov
les
push
mov
rcr
and
ss
jp
mov
inc
inc
mull
shll
add
push
test
add
jge
leave
mov
add
idivb
insl
scas
leave
inc
inc
pop
add
jecxz
aas
daa
ret
in
icebp
repnz
xor
xchg
ficoms
inc
pop
test
fwait
into
push
mov
mov
icebp
add
lahf
testb
out
repz
je
addr16
push
jno
or
fxch
shlb
dec
cwtl
and
repz
int3
out
push
insl
jg
fsubrs
sub
stos
lods
inc
add
pop
fstpl
jp
xchg
pop
push
mov
scas
or
loope
mov
int3
fadds
out
fcmovne
stos
adc
xor
in
mov
aas
add
fdivl
mov
pop
scas
ds
pop
fisubrl
scas
inc
mov
mov
test
jno
test
adc
sbb
shl
inc
jle
lds
sti
push
push
lock
testb
cmpsb
mov
and
pop
pop
cs
mov
sub
cmp
mov
jmp
leave
pushf
dec
repnz
mov
pop
ljmp
xlat
test
push
mov
data16
add
xchg
lea
cmpl
dec
cmpb
push
xor
icebp
arpl
out
or
dec
cli
pop
mov
push
cmp
cwtl
or
call
xchg
jns
sbb
mov
movsl
inc
inc
jmp
push
ffreep
scas
jg
and
gs
mov
jge
cmp
or
rcrb
imul
mov
push
insl
adc
sub
xchg
fs
add
std
or
js
cli
mov
cmc
sub
fists
mov
insb
xchg
pop
adc
push
inc
insb
test
loope
xchg
mov
mov
enter
inc
push
sbb
xor
inc
xorl
jae
in
js
adc
inc
ss
cwtl
stos
out
das
hlt
mov
int
orb
setb
push
in
cmpsb
mov
outsl
inc
adc
push
xor
shll
in
push
repz
test
adc
sub
lods
or
pop
test
cmp
dec
arpl
xchg
xchg
xor
and
movsb
push
scas
push
outsb
pop
push
mov
pushf
jo
hlt
xchg
adc
clc
push
cmp
repnz
mov
loop
sub
mov
mov
mov
aam
mov
adc
cmpsb
out
scas
or
jmp
or
mov
push
mov
add
in
data16
dec
jmp
push
or
xor
or
lods
rclb
cvtpi2ps
cwtl
xchg
cmp
imul
xor
mov
mov
es
dec
fwait
ljmp
sub
adc
fsubrl
push
pop
popf
aad
ja
in
cwtl
notb
pushf
mov
mov
sbb
jmp
fwait
adc
fwait
xadd
push
pushf
cmp
int
mov
cmp
push
mov
sub
or
js
int
lret
inc
stc
test
into
jb
lods
mov
lock
shlb
and
jle
movsb
rorb
pop
mov
add
add
fs
cmpsb
aas
mov
dec
jo
outsb
dec
lea
push
mov
out
jo
jle
or
and
stc
lods
repnz
sub
shrl
xor
sub
mov
fbstp
mov
aad
fldl
cmc
mov
mov
lret
mov
inc
jbe
lret
je
adc
test
push
test
push
and
cmp
fimull
in
add
into
xchg
xor
add
dec
adc
cli
sub
xor
pop
movb
pop
push
mov
xlat
or
cmpsb
inc
iret
leave
dec
sbbl
cmp
mov
js
xor
ficomps
jns
xchg
fldt
mov
insl
sbb
dec
push
xchg
jne
jg
dec
testb
out
mov
mov
cmp
pop
ljmp
pop
mov
adc
ds
bound
sbb
add
jo
mov
add
loop
jmp
xor
mov
jbe
xchg
arpl
dec
inc
dec
test
outsb
sbb
std
jge
bound
repnz
and
out
cmp
roll
loopne
popa
imul
test
int
adc
xor
repnz
lock
push
fcmovu
daa
mov
outsl
inc
inc
adc
shl
in
inc
sbb
hlt
xchg
adcb
cmpsb
sub
dec
xor
cmp
fs
lret
sarl
and
out
jo
cwtl
imul
popa
aas
mov
daa
push
or
xchg
sbb
aam
push
or
add
aam
call
shrb
repz
popf
mov
dec
pop
es
movsl
adc
jne
lret
enter
gs
aad
ljmp
sbb
jne
out
pop
insl
addr16
cwtl
int3
imul
inc
imulb
pop
jb
jne
test
inc
dec
jo
adc
movsl
pop
and
test
dec
lcall
fstsw
imul
pop
mov
les
mov
in
in
js
jge
sti
cltd
xor
mov
dec
fcomps
das
mov
xchg
es
and
bound
and
xor
aaa
pop
pop
vcvttsd2si
jno
inc
sbb
iret
imul
loope
mov
add
mov
je
mov
pop
mov
scas
jno
les
js
push
into
jmp
das
jp
arpl
push
push
mov
jbe
push
sub
daa
loopne
adc
pop
nop
shrb
push
push
jecxz
xlat
or
inc
pop
aaa
xor
or
lret
outsb
lret
add
sub
push
mov
arpl
popw
insb
scas
xchg
mov
scas
ss
pusha
mov
or
icebp
out
adc
test
mov
jmp
mov
push
cs
roll
sbbl
movsl
push
js
sub
mov
shll
xor
outsl
stos
add
mov
in
inc
fisubrs
or
mov
inc
inc
lds
cld
stc
popf
jns
add
stos
stc
out
mov
push
insl
test
and
ret
mov
fdivrs
add
xchg
rorb
jns
mov
inc
roll
fincstp
sub
popa
scas
adcb
adc
jnp
scas
dec
aad
test
pushf
push
popa
outsb
lock
rorl
in
cmpsl
test
jnp
cmp
cmp
sub
lret
in
stc
cs
jae
mov
mov
cmpsl
dec
jbe
test
insl
xor
or
add
mov
clc
dec
sbb
push
outsl
push
fs
mov
pop
cwtl
js
xor
adc
xor
ret
sub
dec
loopne
test
mov
inc
adc
stos
lods
cmpsl
jecxz
arpl
test
repnz
std
xor
shrl
push
iret
leave
jecxz
push
fildll
mov
cmp
and
xor
ret
inc
scas
mov
mov
or
sub
arpl
lcall
leave
push
rcl
aad
sub
adc
mov
shlb
insl
cli
insl
xchg
lcall
xchg
repz
cmpsl
mov
push
iret
sti
push
push
sbb
push
jge
xor
arpl
xchg
sahf
add
push
jmp
subl
test
outsl
sub
xchg
add
test
mov
dec
mov
mov
rcll
inc
pop
outsb
lock
cmp
cmpsb
cmpsb
mov
cmp
popa
fwait
adc
mov
push
imul
movsb
xor
into
and
dec
leave
in
push
mov
inc
jl
or
aad
mov
out
jecxz,pn
shll
mov
daa
push
int
mov
stc
add
dec
mov
outsl
arpl
cmp
sbb
lods
das
mov
stos
inc
sbb
cld
inc
aaa
in
jle
fstps
mov
inc
push
aas
andl
cmp
test
inc
rolb
test
movsl
les
into
call
pop
add
adc
iret
pop
push
inc
xlat
imul
cmp
shll
xchg
push
or
push
sub
mov
out
xchg
dec
sub
mov
sub
push
push
or
aas
mov
dec
js
add
xchg
fimuls
out
gs
mov
mov
movsl
or
adc
push
out
sub
jae
ja
popf
push
lods
mov
mov
sbb
push
cwtl
fcompl
sub
mov
sbb
idivl
in
mov
adc
test
imul
jl
stos
fisubl
and
sbb
cmpsl
outsl
fcoms
ret
and
sub
xchg
push
ficompl
dec
cs
ret
aad
xor
mov
arpl
hlt
adc
adc
jno
gs
faddl
in
sbb
push
rclb
std
push
insb
inc
jp
out
call
test
popf
outsl
cwtl
fists
adcb
repnz
shl
push
push
stos
add
adc
loop
dec
xchg
ret
loopne
ds
cwtl
dec
add
sub
add
and
adc
mov
dec
cld
popf
dec
sub
push
lcall
mov
sbb
stos
dec
lods
push
movsl
inc
sub
ds
mov
test
cmp
popf
ret
or
leave
mov
das
mov
add
adc
popf
imul
lcall
push
adc
mov
ss
mov
fnsave
push
dec
or
push
repnz
js
loope
aad
ja
outsl
push
int3
mov
xchg
ja
cmp
fiadds
xor
push
seto
stos
js
test
or
inc
adc
repnz
cs
adc
xor
sbb
jo
les
dec
and
js
and
out
mov
push
sub
enter
add
hlt
jbe
pusha
mov
push
push
popf
inc
sbb
inc
pop
sub
xchg
or
adc
test
adc
jns
adc
jne
popa
in
pop
imul
lock
and
add
pop
xor
mov
test
adc
jns
pop
popa
mov
rcrl
out
mov
ss
or
mov
ss
sbb
inc
cmpsl
out
arpl
xchg
inc
rol
in
push
cmp
pop
movsl
sbb
sub
into
and
fucom
mov
shlb
adc
cmp
push
pusha
lds
dec
mov
iret
invd
inc
jle
mov
inc
xor
cmp
lret
adc
ret
pop
jbe
roll
rol
adc
cmp
cmp
nop
cs
or
xchg
push
dec
add
xor
mov
js
pop
lock
shll
inc
mov
pop
sub
and
fcmovb
stos
mov
testb
cmp
sub
sbb
push
rorb
mov
imul
inc
daa
outsl
jmp
cmpsb
out
stc
sub
outsb
aam
mov
andb
push
shrb
jmp
cmp
loop
std
gs
aaa
or
cmp
inc
in
jo
es
stos
inc
lcall
pushf
lret
jmp
add
push
js
sbb
popa
aas
mov
xlat
das
jno
rorb
mov
dec
iret
imul
xchg
mov
stos
push
mov
addl
mov
mov
rorb
push
adc
lods
or
orl
loop
pop
lods
add
fisttps
mov
sbb
dec
arpl
lock
test
shll
repnz
ret
js
stc
xchg
pop
fldcw
lock
dec
mov
adc
cwtl
ja
icebp
out
lret
push
pushf
test
adc
mov
aaa
adc
ret
xchg
test
repz
nop
out
imul
cltd
push
or
jmp
pop
jp
adc
iret
daa
push
imul
cltd
rcrl
sub
leave
outsl
mov
ret
lcall
jge
and
js
and
fwait
cmp
adc
xor
or
les
xchg
inc
pop
cmp
sub
xlat
lahf
xor
mov
pop
jmp
test
bound
in
in
inc
push
movsl
add
ret
push
mov
in
pushf
xchg
test
cmp
cmpsl
addr16
outsb
cmpsl
jns
ret
xchg
pop
mov
imul
lahf
leave
int3
and
jno
mov
jmp
ljmp
das
fwait
mov
cmp
jle
in
jbe
sbb
das
fidivs
pop
jmp
das
and
sbb
std
mov
jns
fimuls
jge
sbb
lds
lea
movsb
std
aam
adc
test
mov
mov
or
stos
ja
lahf
dec
sub
inc
movsb
rclb
test
data16
xchg
aad
inc
adc
fimuls
pop
testb
inc
enter
pop
pop
stos
lcall
mov
xchg
cltd
ret
jnp
clc
imul
out
aad
in
jp
stc
rcl
mov
sub
sahf
xchg
inc
adcb
push
cmpsl
lds
mov
dec
fcomi
sar
inc
xchg
cmpl
push
mov
push
pop
clc
lock
sbb
add
in
aam
dec
dec
dec
in
sub
xchg
pop
je
nop
mov
cmp
repnz
shll
popa
jmp
scas
out
mov
shrb
or
les
decb
xor
sub
pop
les
add
inc
loop
push
push
pop
sub
iret
push
lods
mov
cmpsb
adc
insb
xor
ret
xchg
dec
sub
test
or
inc
cmovp
pop
cmpsl
or
iret
jnp
jecxz
ret
stos
fucomip
icebp
movsl
jmp
cmpsb
cmpsb
xchg
sbb
cmp
inc
push
insl
mov
ljmp
cmpsl
test
push
jno
stos
inc
push
add
mov
fmul
push
sbb
dec
push
xor
and
pusha
add
or
fisttpl
mov
dec
ss
or
pop
in
inc
jbe
stos
jns
in
mov
call
or
xchg
call
es
mov
data16
sbb
dec
pop
xchg
int3
cmp
xor
loop
inc
data16
jbe
aaa
xchg
in
icebp
inc
sub
call
lahf
ljmp
xchg
hlt
pushf
xor
lea
xchg
dec
sub
in
stc
ja
add
mov
notb
shll
inc
push
lds
pushf
fs
sub
icebp
cld
popf
cli
jb
out
imul
cmc
mov
bound
dec
orb
pop
insb
adc
stos
mov
das
jns
cmpsb
test
ljmp
or
paddsb
sub
aad
into
lcall
jp
fmull
fisttpl
xchg
pop
pop
lahf
inc
push
fs
jmp
shll
jbe
pusha
xchg
and
lods
dec
add
dec
xchg
push
bound
orb
sub
into
lret
outsl
je
outsb
out
adc
dec
std
sbb
mov
movsb
popa
and
es
cmp
cmc
ret
push
imul
out
xchg
xchg
cwtl
xchg
sbb
int3
push
aam
or
mov
push
sbb
negb
pusha
ret
xor
inc
out
push
xor
inc
fwait
into
mov
pop
addr16
fmull
dec
xchg
ljmp
mov
inc
mov
mov
dec
dec
inc
ds
fidivs
add
inc
fisubrl
sti
loop
aam
out
sbb
cmpsl
jmp
pusha
cld
iret
inc
xor
mov
inc
push
pop
mov
ja
push
inc
sti
sahf
orb
cmp
aaa
sub
xchg
sbb
pop
sub
jae
loopne
nop
dec
les
cmp
or
sahf
addb
mov
pop
leave
in
push
scas
pushf
inc
cmpsb
pushl
out
push
push
sbb
fidivrl
lock
dec
loop
jae
daa
xchg
cmpsl
cmpsb
inc
stc
ja
jecxz
pop
ss
mov
pushf
cmpsl
jne
add
cs
cmp
in
xchg
and
mov
push
scas
das
in
movsb
das
inc
shll
mov
inc
imul
sbbb
xor
roll
pop
inc
sub
push
push
xchg
sub
out
loop
iret
inc
std
and
fisttps
clc
mov
scas
jo
sbbl
push
mov
jb
ss
lret
mov
adc
push
add
xor
jge
mov
movsb
lock
pop
pusha
fdivrs
inc
addr16
enter
cs
sbb
xchg
loope
lea
stos
loopne,pn
aaa
jmp
sub
hlt
lret
adc
daa
mov
test
enter
cmovo
in
jmp
add
sbb
or
jecxz
test
jg
out
jns
clc
push
arpl
xchg
mov
sub
sti
jmp
cwtl
pop
add
fwait
lcall
popa
pop
rcrl
loop
xchg
cmp
xor
pushf
add
js
in
add
adc
mov
mov
xorb
hlt
mov
pop
xchg
dec
sub
cmp
outsl
ret
fbld
xlat
ficoml
mov
or
jmp
shl
mov
imul
mov
cwtl
rolb
sub
jmp
cmc
xchg
push
lret
nop
adc
add
jle
or
test
outsb
sub
xor
adc
push
jb
add
hlt
cmc
adc
imul
andl
jg
cmc
sub
or
pop
mov
rolb
fldcw
lahf
sahf
in
cwtl
fidivs
int3
in
out
fmuls
hlt
insl
aas
lcall
push
xchg
xchg
pop
in
jp
push
mov
mov
outsb
ret
lods
in
cmp
push
ljmp
lcall
mov
rorb
test
sbb
ss
sbb
aad
inc
adc
mov
push
xor
inc
sbb
xor
call
popl
and
pop
jp
test
add
mov
pop
test
in
pop
lds
mov
mov
mov
insl
add
cltd
and
mov
adc
add
fnstsw
mov
inc
testb
adc
and
jmp
push
scas
pusha
or
mov
les
mov
in
rcl
adc
ret
popa
jb
jno
sub
cmpsb
nop
mov
dec
push
jmp
scas
aam
ret
pop
data16
push
sub
add
inc
imul
imull
iret
and
add
adc
lret
in
addr16
fstps
mov
mov
fmuls
jecxz
and
mov
adc
bound
xchg
sahf
mov
sbb
lds
push
jp
in
xchg
movups
jge
push
mov
adcl
xor
xchg
cmc
outsb
push
adc
mov
dec
sbb
incb
jp
inc
dec
pop
inc
xor
push
push
insl
dec
xor
pop
adc
call
pushf
xor
aaa
rorb
pusha
pop
pop
das
and
or
xor
in
pop
sbb
rcll
in
mov
mov
mov
xor
xchg
inc
call
sbb
testb
add
frstor
rcrb
cmp
pop
lods
sbb
subb
and
ljmp
fnsave
mov
inc
jbe
fs
popa
cmc
movsb
rcll
sub
xchg
ljmp
inc
pop
wbinvd
add
or
push
popa
loopne
inc
ds
sbb
xor
adc
inc
mov
iret
mov
cmc
pop
mov
lods
pop
js
aam
jno
test
mov
ffreep
cmp
adc
jmp
gs
repz
iret
mov
jecxz
jbe
sahf
inc
sub
in
sbb
push
mov
mov
and
fimuls
pop
in
fldln2
dec
add
mov
shll
mov
jo
lret
sarl
mov
and
mov
mov
fisubs
js
test
loope
stos
jns
movsb
xchg
or
mov
out
mov
lock
jg
sbb
mov
jns
gs
or
js
adc
push
jl
xchg
fxch
pop
loopne
mov
sub
subb
and
xor
or
cmp
cmpb
jb
cmpsl
out
leave
test
pop
hlt
jb
arpl
cltd
add
cmp
adc
outsb
filds
daa
pop
jl
bound
or
out
aas
inc
mov
stos
jnp
fstl
or
push
jb
and
das
pop
or
jp
push
shl
lods
inc
and
dec
popf
stos
testl
mov
leave
xchg
fs
mov
inc
int
loopne
jecxz
mov
pop
or
into
rorb
xor
inc
and
aas
dec
insb
mov
dec
ss
inc
stc
mov
dec
mov
add
mov
mov
xabort
and
enter
loope
inc
aam
fldl
or
fistps
pusha
mov
xor
loope
outsl
fstpl
jecxz
int
xchg
lods
add
jae
xor
lahf
cmpsb
loope
inc
movsb
movsb
and
mov
push
gs
jo
jnp
mov
cmp
lods
sbb
mov
cs
divl
cld
cmpsl
je
jo
cltd
cmp
cmp
scas
push
pop
cmpsb
jg
jg
adcb
std
jmp
sbb
mov
add
fwait
sub
test
lret
incb
mov
popa
hlt
in
xchg
push
stos
and
rcrl
pop
cmp
dec
and
adc
cmc
push
scas
roll
cmp
mov
jmp
insl
push
lods
sub
aam
lods
xor
mov
aam
jb
sub
loopne
add
repz
fstpl
clc
fsincos
clc
stos
fs
adc
lods
ss
sbb
mov
dec
mov
inc
and
cltd
pusha
cmp
aad
or
lds
push
jb
nop
fstpt
clc
repnz
and
adc
cwtl
or
cmp
rcrb
xchg
mov
es
push
or
cmp
sbb
adc
push
imul
je
pop
lea
out
xchg
jns
mov
fsubr
xchg
les
and
and
decb
jae
jbe
adc
jno
sarl
imul
add
cmp
dec
jecxz
push
fsub
sbb
mov
pop
add
or
jno
dec
fisttpl
sahf
nop
pop
xor
pushf
mov
in
cmp
push
out
imul
mov
enter
jmp
mov
pop
sbb
cs
mov
mov
pop
aam
adc
filds
lea
outsl
xchg
stos
jmp
adc
xlat
cmpsb
sbb
es
sub
clc
sbb
jo
les
cmpb
or
or
or
mov
push
stc
stos
xor
pusha
stos
mov
lock
jecxz
aaa
testl
adc
mov
inc
mov
into
test
int3
jb
xchg
std
ljmp
xchg
enter
aas
hlt
lahf
fistpll
out
dec
add
call
push
mov
or
cmp
mov
lea
scas
mov
pop
inc
addr16
sarl
cmp
scas
sbb
lds
call
notb
iret
div
fs
mov
sub
mov
movb
int3
pop
xchg
fistpl
imul
cmpsb
cmp
jg
pusha
imul
fmull
jae
cmp
iret
add
push
mov
mov
push
jno
push
lea
push
mov
push
sbb
repnz
cmp
lea
and
adc
rorl
pushf
xchg
adc
lcall
pop
fwait
xchg
les
lret
and
es
test
cmpsl
xchg
sbb
aaa
aaa
cmp
dec
sub
insl
insb
fidivrl
dec
and
push
xor
fnstsw
dec
adc
ret
add
lods
mov
pop
fisubrl
inc
push
jbe
call
les
lods
push
lahf
cmp
imul
dec
push
xchg
bound
push
sti
mov
repz
call
mov
in
and
mov
lock
outsl
call
data16
xor
pusha
jge
pop
gs
aad
push
inc
mov
mov
add
scas
mov
xchg
insl
cld
xchg
movsl
sbb
aam
test
clc
aaa
lods
push
dec
jle
loop
cltd
aas
lcall
ficoms
pop
mov
into
fstp
mov
inc
add
out
sub
pop
leave
jle
xor
int3
call
loopne
or
mov
inc
or
test
adc
adc
jmp
add
xchg
xor
stc
inc
ds
mov
cmp
dec
sub
nop
push
cmp
mov
incb
mov
ja
mov
sarb
ja
daa
inc
xchg
cmp
push
or
and
jns
pop
sub
cmp
fs
push
cmc
push
or
mov
or
scas
imul
mov
jnp
xor
pminub
ss
adc
fwait
jmp
jmp
push
insb
dec
call
mov
cmpsb
add
insb
lret
outsl
jp
out
ds
cmp
and
aad
dec
sub
xlat
pop
jp
pop
mov
cld
das
rcrb
popf
mov
cmpsb
push
pop
aas
push
movsl
and
adc
jo
test
xor
mov
pop
dec
inc
test
aam
out
iret
xchg
push
hlt
pop
lock
jge
addr16
pop
fs
call
pop
sbb
sub
and
sahf
push
shlb
rorl
jmp
scas
mov
test
aas
jmp
mov
push
repnz
andb
into
sub
movsb
sub
repnz
add
or
mov
fbstp
inc
lods
or
xchg
jbe
scas
xchg
push
sub
in
pop
mov
imull
jno
insb
divb
nop
inc
cmp
dec
cmp
out
pop
stc
cmp
testl
enter
and
adc
xchg
mov
cmp
sub
fld
idiv
sbb
mov
lods
xor
into
jg
movsb
or
sub
out
push
pop
in
out
sbb
cmp
lock
jnp
jb
je
xor
and
xorb
jae
dec
jb
add
pop
xlat
jb
sub
call
and
das
pop
dec
fldcw
inc
sbb
and
cli
jecxz
out
inc
jge
pop
mov
ja
jecxz
inc
push
ljmp
outsb
scas
mov
push
fwait
add
mov
and
or
test
dec
int3
inc
ja
inc
pop
arpl
lea
call
dec
dec
lods
mov
fwait
push
rdtsc
outsl
cli
and
rclb
and
mov
out
inc
cmp
adc
aas
test
cld
cmp
and
lock
out
pop
fcmovnbe
xor
ret
add
dec
loope
fld
sbb
inc
cld
ds
aaa
adc
add
dec
xlat
mov
push
ret
cmpsl
andl
and
icebp
sbb
mov
movsb
mov
pushf
mov
push
mov
xchg
adc
repnz
push
insb
xor
adc
lock
loopne
sarb
jae
or
push
xor
jle
xchg
xchg
or
sbb
push
xchg
jle
pop
scas
in
add
lret
adc
sbb
orl
and
mov
cmc
and
sbb
xchg
das
inc
stos
aaa
pop
and
mov
clc
push
and
dec
lahf
xchg
and
jo
cs
gs
int
xlat
pop
and
popf
push
aam
pushf
test
xchg
cmp
testl
sub
test
push
mov
fwait
jb
imul
xchg
into
xchg
loop
xchg
or
xor
sarb
pop
dec
fisttpll
sbb
pop
pop
pop
rorb
jmp
movsb
mov
xor
jne
dec
mov
cltd
insb
loop
js
ds
test
xor
in
cs
mov
cltd
jb
std
fadds
mov
mov
nop
add
jne
inc
sub
mov
xchg
pop
test
or
int3
jb
and
ljmp
in
fistps
jmp
loop
sarb
shlb
dec
stos
mov
push
loope
pop
xorb
xor
jl
xchg
push
rolb
nop
adc
sub
xor
arpl
test
lea
ja
cs
rcl
mov
mov
mov
popf
add
insb
stos
lahf
pusha
mov
pop
into
sbb
sbb
pushf
pop
dec
cmpsl
dec
je
jo
dec
sbb
mov
out
xchg
mov
icebp
imul
pop
jns,pn
hlt
popf
dec
popf
mov
jnp
test
outsl
and
mov
or
inc
sub
push
adc
adc
push
sti
dec
imul
inc
in
addr16
cltd
xchg
adc
cwtl
int3
mov
xchg
xor
pop
sub
ss
or
or
adc
fxam
xchg
cmpsl
pop
jp
and
dec
int3
mov
jnp,pt
lods
loop
cmp
add
lds
mov
das
add
rorb
test
mov
mov
jnp
xchg
mov
xchg
add
or
scas
mov
pop
or
lds
pop
and
xor
call
mov
aad
stc
inc
push
or
in
mov
pop
shll
rorl
dec
push
cmp
in
lods
fdivl
ss
adc
repz
add
daa
ljmp
and
sbb
scas
xchg
movsl
stos
jo
in
mov
aad
mov
jle
cmc
inc
pop
xor
movsb
or
mov
mov
test
cs
and
loop
hlt
add
mov
xchg
xchg
push
negb
add
sbb
mov
cmpsb
inc
lahf
dec
xor
dec
xchg
pop
and
inc
div
rcl
add
cmc
xchg
bound
xchg
stos
dec
and
adcb
popa
adc
lods
add
movsb
pop
mov
pusha
cmp
movsb
xor
adc
das
jl
adc
fwait
cmp
in
xchg
fs
inc
rclb
ret
dec
stc
das
aam
les
leave
mov
jmp
lahf
pop
adc
pop
in
daa
leave
jb
adc
test
lods
pop
push
jbe
mov
fwait
ds
repz
insl
ret
cmpsb
dec
in
pushf
or
dec
push
ja
scas
test
sbb
ss
ficomps
pop
stos
lahf
adc
in
jg
lret
aas
push
arpl
cli
ja
mov
mov
sub
mov
push
push
and
inc
lahf
jae
push
sarl
bound
clc
hlt
push
inc
inc
pop
xor
jge
cmp
repnz
or
pop
or
add
clc
sti
dec
shl
and
adc
add
and
cli
imul
fs
fstpt
and
add
daa
dec
mov
sub
sbb
jno
out
mov
jno
cmp
jnp
add
cmpsb
jns
pushf
dec
testl
mov
movsl
pop
sbb
jne
dec
cld
push
jmp
insb
or
push
lock
test
xor
js
xor
adc
adc
push
lcall
add
fimuls
sub
fsubs
cwtl
movsb
lods
popa
clc
cmp
test
pop
lcall
push
adc
and
mov
jmp
push
add
cltd
mov
xchg
xchg
inc
imul
rolb
mov
rclb
fistpl
pusha
lods
or
inc
push
sub
movsb
pop
lock
rcl
out
cmp
cs
jo
inc
popa
xor
fistps
or
or
sbbl
cmp
mov
sub
daa
test
movsb
sti
sbb
imul
pop
xchg
insb
sub
push
pop
stc
ret
fistpl
hlt
adc
add
dec
jne
aad
and
push
cmp
sbb
xchg
dec
aam
and
or
cmpsl
jae
les
hlt
jmp
ficomps
inc
inc
movb
mov
pusha
xchg
stos
clc
je
mov
mov
push
and
iret
add
mov
adc
repz
sbb
movsb
add
test
ret
sahf
add
adc
fisubs
jne
mov
cmp
sbb
mov
adc
inc
int3
inc
push
loope
cld
shrb
vmovups
xor
mov
loopne
add
push
dec
fists
or
shll
stc
mov
inc
jp
push
fldl
ret
jp
aad
popa
sbb
rcrb
and
jle
test
out
xchg
std
shr
push
add
mov
adc
xchg
int
jmp
sar
mov
stc
sahf
push
in
stc
popa
imulb
rorb
in
mov
push
out
fsubrl
in
into
cmp
lcall
pop
aad
add
je
sbb
adc
sub
es
rorb
test
jo
in
mov
std
push
add
push
ss
insl
mov
or
roll
dec
pop
or
aam
mov
or
popf
push
aad
adc
mov
in
mov
jns
xchg
sti
cmpsb
inc
pop
mov
mov
pusha
or
jno
call
out
testl
dec
stc
push
in
enter
xchg
dec
out
jl
inc
mov
adc
sub
xchg
roll
mov
xchg
ljmp
fildll
std
stos
in
pop
cli
aad
mov
add
ss
fisubrs
or
sub
pop
loopne
pop
movsl
push
adc
outsb
dec
dec
fsubl
inc
mov
js
pop
mov
out
sbb
lret
push
in
bound
add
and
aam
icebp
jo
pop
sub
lret
xor
ljmp
and
xchg
jmp
push
mov
adc
mov
or
push
lods
ds
push
fwait
xchg
lret
dec
inc
stos
xchg
call
push
leave
jmp
lret
cs
pop
add
aad
inc
pushf
push
into
lods
adc
jb
out
sbb
mov
push
and
mov
popf
out
jp
stc
into
dec
iret
jbe
and
and
fwait
mov
shrb
dec
xor
test
dec
adc
pop
movsl
ss
jns
enter
inc
cli
xor
pop
bound
push
and
push
gs
es
scas
inc
lret
mov
cmp
pusha
std
add
xchg
mov
shll
mov
adc
ret
sarb
inc
push
add
cmp
cmc
adc
xor
sub
or
arpl
push
pop
enter
shll
nop
jo
loop
cld
pop
int3
imul
clc
in
std
sbb
sbb
movsb
sbb
push
push
mov
mov
outsb
cs
push
pop
cmp
inc
enter
cs
or
jo
or
hlt
xchg
rcrb
dec
pushf
mov
stc
shl
sahf
rcrb
stc
imul
push
into
jmp
or
dec
jmp
xor
xor
outsb
sbb
inc
scas
jbe
inc
ljmp
xchg
fiaddl
inc
sub
aaa
stc
inc
mov
shl
xor
aas
jns
jl
scas
stos
flds
mov
daa
imul
ljmp
repz
sbb
arpl
sti
aad
jo
les
mov
jp
mov
into
sbb
sub
xlat
add
mov
stc
fcomps
push
lret
xor
sub
fwait
insb
aaa
mov
mov
jp
nop
loopne
xor
mov
out
aas
int
add
add
jae
mov
popf
popa
arpl
push
loopne
ja
push
mov
xor
incl
mov
rcrb
inc
rol
lea
mov
mov
aad
je
sbb
inc
mov
mov
dec
mov
outsl
lods
aas
xchg
fistpll
fs
sbb
mov
jae
cmpb
cwtl
adc
xchg
rcrb
outsb
hlt
add
imull
stos
jp
leave
sbb
xchg
stos
and
inc
mov
shrb
jmp
cmp
icebp
jecxz
pop
xchg
int3
xchg
fists
cld
rcrl
cmp
mov
adc
inc
mov
movsl
mov
ret
shrl
fxam
cmc
loopne
cltd
sub
leave
fs
fstpl
jmp
push
xor
push
jnp
mov
xchg
inc
and
push
imul
pop
movsl
sub
pop
jae
xchg
repnz
adc
add
adc
pop
pop
dec
sbb
mov
xlat
mov
add
out
xor
dec
sub
push
xor
or
repnz
popa
je
xchg
push
dec
popf
pushf
xchg
mov
cmc
or
and
stos
fadd
add
pop
fs
mov
jmp
inc
bound
lcall
pop
rol
or
arpl
loopne
shrl
xchg
cld
mov
sbb
push
ret
fldenv
and
mov
enter
inc
imul
ret
xchg
mov
scas
mov
imulb
test
mov
jmp
popf
jp
dec
cmc
dec
loop
aaa
xchg
movsb
mov
fucomi
scas
pop
aaa
sbb
lock
pusha
push
cld
cmpsl
cwtl
loop
add
in
mov
cld
test
push
xchg
mov
xchg
xlat
inc
inc
push
cli
lcall
xchg
mov
cld
or
addr16
fisttps
iret
std
test
test
outsb
pop
je
loope
pop
aam
loop
in
fcmovnu
cmp
and
xor
push
nop
jg
xchg
aaa
or
out
sub
mov
lods
enter
jl
mov
jae
adc
jns
adc
outsl
leave
leave
sbb
pop
xchg
shlb
ss
test
or
mov
je
jo
xor
xchg
pop
cmp
jge
pop
xor
aam
in
jle
sub
mov
sbb
outsl
inc
pop
out
jmp
and
mov
shll
arpl
mov
out
sti
jb
test
xchg
dec
cmpsl
ficoml
pop
sbb
shll
fcoml
hlt
add
xchg
int3
inc
jge
mov
sbb
icebp
mov
enter
ret
cmp
add
pop
mov
adc
int3
pushf
fs
jle
mov
daa
dec
movsl
repnz
pushf
inc
add
jp
and
push
jecxz
dec
sub
xchg
jns
dec
inc
scas
dec
fisttpll
test
repz
and
jle
mov
cwtl
add
cmp
cmp
insb
lret
loopne
pop
xchg
std
add
push
leave
push
add
or
popf
jne
sub
sub
mov
mov
pushf
xchg
inc
filds
in
xorps
pop
dec
sbb
sub
mov
inc
dec
movsl
xchg
push
xor
or
adc
adc
push
jb
icebp
xchg
inc
out
dec
add
cltd
jp
or
inc
mov
inc
ret
xor
icebp
jnp
insl
lcall
lods
adc
pop
push
jo
xlat
jo
push
popf
dec
mov
outsb
xchg
adc
pop
fnclex
rcrl
push
int3
inc
sete
dec
jmp
add
fbstp
adc
lock
jno
cmp
shrb
or
jge
jbe
shll
push
add
mov
testl
loop
and
in
and
lret
inc
fsts
in
loop
dec
mov
push
inc
sub
sub
fs
or
jle
aad
pushf
add
lock
scas
pop
adc
test
mov
xor
add
sbbl
xchg
xchg
mov
lcall
adc
pop
test
mov
and
rcr
lcall
lcall
imul
js
cwtl
sub
pop
enter
movb
push
pop
fiadds
xchg
mov
repz
test
je
insb
pop
pop
inc
nop
enter
mov
mov
fsub
mov
add
adc
cmpsb
das
mov
decl
pop
dec
cmp
ret
cmpsb
and
inc
dec
out
bound
sbb
test
in
mov
sub
cmp
cmc
lock
mull
pop
icebp
jg
shlb
addr16
push
arpl
jle
mov
daa
adc
into
cmpsl
jae
call
mov
mov
inc
stc
or
jle
test
sbb
push
push
pop
cld
adc
ds
pop
int
dec
sub
fimull
jmp
fidivs
adc
push
inc
xchg
lret
cmp
cmpsb
push
inc
xchg
and
adc
clc
adc
repz
mov
dec
cmp
and
adcb
cmp
lret
lahf
adc
hlt
jmp
cmp
xor
shlb
in
stc
sub
sti
out
scas
iret
dec
mov
aas
mov
adc
mov
or
add
sbb
sbb
adcl
in
roll
insl
sbb
popf
js
cld
jp
out
or
inc
push
jmp
add
xchg
jbe
xor
mov
push
aas
adc
ds
mov
mov
arpl
and
and
jo
dec
xchg
lods
push
rorb
in
decb
add
in
cmp
sbb
and
fnstenv
and
xlat
jno
mov
btc
sub
idiv
repz
test
inc
or
dec
jbe
mov
xor
cmp
js
xchg
push
insl
iret
sar
aas
fwait
sub
cmp
and
xor
pushfw
xor
mov
cmpsb
sbb
xor
pop
jb
test
jne
pop
jns
push
inc
jp
cmpsb
out
xchg
or
pop
sub
cmp
push
es
lods
repnz
xchg
xor
adc
ds
ja
mov
je
stos
imul
pop
or
xor
rcr
add
dec
pop
mov
adc
ss
cs
xor
shlb
loope
int
push
push
mov
mov
sub
ret
loopne
push
adc
and
in
inc
pushf
mov
xor
aad
cmc
aas
lea
jne
fidivrl
dec
pop
or
lods
lcall
daa
loop
sub
mov
jecxz
ret
pop
cmp
test
das
repz
mov
lds
jl
cwtl
stc
adc
imul
lods
xchg
outsb
jno
ss
aam
jb
cwtl
push
fdivrl
mov
sub
push
loop
inc
aam
cmp
int3
lcall
test
or
rcrl
rdtsc
push
stos
pop
iret
xor
sbb
mov
dec
push
fisubrl
loope
sbb
clc
add
stc
arpl
cld
je
pop
and
adc
in
pop
cmp
add
je
shll
mov
xor
jle
js
mov
inc
mov
and
inc
or
push
xor
mov
mov
insb
out
scas
xor
out
jle
dec
out
inc
dec
movsl
lds
push
pushf
pop
and
xor
stos
sbb
dec
mov
xchg
std
icebp
xor
test
mov
shll
sbb
push
xlat
pop
mov
inc
inc
adc
add
add
ret
jnp
mov
sub
pop
mov
test
dec
mov
enter
cwtl
push
outsb
ljmp
outsl
and
shrl
mov
jnp
lock
push
sbb
adc
and
mov
xor
push
jo
ljmp
mov
xlat
inc
das
cltd
jecxz
xchg
loope
cli
pop
dec
ret
mov
icebp
sub
mov
into
cmp
test
mov
cwtl
cmp
cmp
jmp
jle
cmpsl
lcall
and
in
pop
mov
ret
popa
outsl
or
das
stc
jne
xor
rcr
aad
sub
pop
cmp
jns
fs
xor
aas
addr16
mov
iret
cmc
cmp
inc
stc
addl
and
fst
xchg
push
test
push
mov
ret
sti
inc
jb
xor
cwtl
cli
daa
mov
test
dec
rorl
pop
pop
outsb
das
and
rcll
xlat
hlt
fcoml
push
ret
and
inc
aas
push
mov
cmc
and
stos
cmp
scas
cmp
int
sbb
push
test
add
scas
dec
sub
cmp
sub
in
lods
or
mov
scas
mov
std
jbe
xor
gs
leave
dec
and
shr
insb
scas
jle
add
mov
xchg
dec
sbb
pop
test
mov
push
out
jae
mov
mov
loope
arpl
dec
mov
cmp
insb
inc
js
inc
pop
sbb
mov
xchg
cmc
dec
stos
xchg
xor
sub
mul
repnz
fwait
dec
mov
mov
enter
mov
lods
ljmp
imul
mov
jno
pushf
xchg
and
cwtl
shrl
mov
push
jbe
sbb
loope
pop
fnsave
sbb
mov
jae
dec
pop
jle
out
out
inc
xchg
clc
in
sar
sub
dec
popf
add
int
sahf
outsb
mov
or
movsb
sbb
scas
jb
cs
rol
push
bound
lcall
lods
lahf
mov
mov
mov
cmpsl
dec
pop
test
aad
in
cmp
cmp
adc
arpl
cmpl
fstcw
stos
mov
push
mov
fldcw
sbb
aaa
addb
xor
mov
inc
enter
and
mov
out
sub
push
cwtl
scas
cmp
xchg
dec
outsl
xor
int3
push
jae
sub
jge
and
cs
aaa
js
push
aam
xchg
dec
dec
inc
fwait
out
out
and
leave
fnstcw
cmpsb
stos
pop
sbb
mov
adc
in
xor
cwtl
shr
int3
push
and
scas
clc
in
test
sbb
mov
mov
mov
jge
in
hlt
push
dec
int
or
jge
icebp
movsl
out
je
mov
dec
sub
push
xchg
mov
mov
adc
aaa
cmp
sub
mov
xchg
mov
lods
cmp
push
fdivl
sbb
sbb
pop
fistl
pop
xchg
int
and
mov
inc
mov
cmp
call
scas
ret
dec
mov
test
movsl
mov
mov
or
xchg
insl
insl
fmuls
in
mov
idiv
mov
mov
jge
inc
aaa
mov
adc
dec
cmp
lret
jecxz
mov
inc
jl
mov
imul
add
rcll
insb
mov
inc
push
loopne
pushf
add
jno
mov
dec
notl
mov
test
and
push
adc
movsl
push
and
or
cs
sahf
lods
lret
adc
mov
in
shl
lock
push
scas
mov
jp
das
jno
sub
pop
ljmp
jge
adc
lcall
cmp
dec
mov
push
jnp
add
lods
dec
addr16
and
lods
pop
push
or
inc
push
jecxz
dec
jmp
and
mov
in
inc
cltd
push
mov
cld
fwait
out
loop
pop
lret
lea
jne
enter
fcmovnu
imul
call
bswap
push
sti
mov
imul
imul
push
fbld
push
push
mov
in
dec
cmp
jns
out
mov
inc
pop
mov
imul
ret
test
mov
cmp
dec
inc
popf
std
xor
cwtl
cmp
outsl
out
pop
or
mov
mov
xchg
xor
loopne
add
xchg
movsl
ja
cmc
inc
ret
xor
addr16
mov
bound
and
hlt
arpl
and
iret
lret
jp
dec
leave
shlb
incb
out
inc
pusha
mov
push
dec
push
pop
loop
cld
jb
iret
adc
mov
pop
xlat
sub
lret
xor
xor
xchg
sahf
imulb
xor
or
jno
push
xor
mov
pushf
push
xorl
popa
jnp
outsl
out
mov
or
lret
ja
adc
mov
idivl
jno
xlat
cs
pop
cmc
jg
fstpl
mov
xchg
dec
dec
repz
cli
jo
pop
mov
mov
fmull
popl
mov
xorl
in
cltd
mov
adc
stos
mov
add
sub
aaa
fwait
aad
fimull
cld
idivl
mov
bound
addr16
nop
mov
mov
push
popa
cmpsb
sub
sahf
outsl
fcmovnb
jecxz
sti
push
sbb
movsl
push
inc
fsubrl
sub
jge
mov
mov
int
dec
shrb
mov
lods
int3
jns
dec
iret
nop
ljmp
lcall
jle
xchg
imul
add
negb
mov
in
push
jecxz
pop
lock
pop
inc
or
cmp
iret
cld
mov
lret
idivb
jns
fdivrl
ljmp
push
pop
and
popa
add
pop
xchg
ljmp
push
aam
or
dec
push
mov
dec
push
xor
pop
les
adc
stos
and
push
ds
aad
xchg
push
mov
out
mov
gs
cmpsl
mov
cmp
lock
addl
rep
out
iret
popf
sarl
test
sbb
push
mov
pop
outsb
add
loope
test
and
add
mov
pop
jbe
test
pop
jno
out
mov
stc
xchg
es
roll
adc
cld
daa
push
xor
cs
mov
or
jge
and
jle
or
cmp
mov
test
aas
cld
push
sarb
sbb
push
andl
jecxz
cmc
nop
pushf
pop
std
pop
mov
xchg
movsl
cld
xor
or
xor
ljmp
mov
mov
fbld
adc
jg
adc
adc
dec
adcb
adc
fldcw
dec
jo
repnz
xor
xor
push
rcrl
mov
and
repz
jecxz
or
in
push
cmp
popa
iret
add
xchg
mov
mov
lods
scas
sbb
xor
pop
in
inc
jg
adc
cld
jo
repnz
aam
inc
adc
jmp
notl
lcall
mov
ss
mov
push
adc
jb
mov
loope
jne,pn
push
mov
aam
xor
cmp
test
adc
outsl
loope
ficompl
xchg
cli
sub
add
out
test
cmp
mov
pextrw
dec
push
xorl
sub
loop
push
rcll
adc
outsl
cmp
add
pop
std
pop
lcall
aad
aaa
sub
ljmp
sbb
imul
push
cmp
es
xchg
lock
push
out
mov
or
dec
and
je
add
sti
loope
and
arpl
push
scas
jb
sbb
scas
pushf
out
mov
bound
or
mov
in
xchg
test
mov
and
mov
jb
mov
lret
jg
mov
fiadds
xchg
int3
test
xchg
mov
inc
fisubrs
sub
push
pop
in
incl
or
mov
or
sti
popf
out
inc
add
pusha
xchg
outsb
adc
lds
adc
out
xchg
push
mov
inc
or
pop
pop
ds
mov
mov
adcl
mov
jp,pt
or
mov
pusha
out
daa
mov
sub
jnp
sbbb
out
in
rolb
xor
mov
lods
dec
mov
movsl
out
outsl
dec
jbe
mov
sahf
outsb
sub
sub
inc
cmp
out
stc
out
push
or
mov
dec
inc
xchg
decl
in
xchg
inc
cmp
push
ljmp
dec
pop
mov
fcmovbe
xchg
daa
and
cmp
xchg
cmpsl
out
xchg
sbb
loopne
pop
je
jo
sbb
les
and
gs
push
out
sbb
out
into
imul
push
aaa
push
or
xchg
popa
ret
frstor
mov
sub
inc
mov
adc
into
adc
xchg
mov
cmp
xchg
jl
leave
inc
xchg
test
lods
mov
jne
sti
lods
pushf
test
sbb
insb
enter
mov
repz
repz
gs
inc
and
daa
insb
jne
rcrb
stos
mov
inc
add
test
test
cmp
out
mov
lcall
jbe
bound
mov
sub
rorb
cmp
mov
cwtl
push
inc
cmp
insl
push
push
xor
cltd
mov
imul
fnsave
xchg
je
pop
fiadds
aas
je
rsm
adc
mov
filds
sub
sbb
fcmovbe
dec
stos
int
jbe
mov
mov
dec
mov
cmp
sbb
stc
dec
clc
mov
cmp
adc
cli
push
in
push
mov
jae
xor
xor
push
ds
in
popa
lret
xchg
mov
mov
in
xchg
and
jge
adc
cmp
repnz
fadds
out
push
pushf
andb
enter
jb
test
pop
mov
mov
nop
lea
pop
nop
add
loope
pop
arpl
idiv
imul
xor
pop
iret
xor
scas
jo
leave
ror
rclb
push
ret
mov
ds
icebp
xchg
push
fistpll
ja
mov
cmp
pop
daa
jecxz
sub
stc
cmc
pop
imulb
fildll
ljmp
xchg
in
cmp
lret
stc
cmp
push
fsub
in
xor
mov
pop
aad
add
icebp
sbb
push
push
sbb
or
imulb
jbe
mov
add
jae
out
adc
sti
lret
jp
cld
or
cli
cwtl
add
lock
xlat
or
mov
sbb
sahf
pop
ror
lret
lea
or
mov
xchg
gs
sarl
pop
mov
push
mov
mov
test
push
fdivrl
ficomps
cmp
mov
outsl
sub
add
scas
sub
mov
mov
movsb
inc
fstpl
aad
fsts
sub
jmp
inc
cmp
push
out
fmull
add
sub
cmp
mov
push
add
push
vmovddup
je
cwtl
mov
mov
jb
adc
mov
fisttps
lahf
lds
jg
imul
repz
je
dec
js
aas
shll
cmp
push
mov
fcompl
or
pushf
mov
mov
lret
inc
outsb
push
fidivs
retw
pushf
push
lods
sub
negl
shrb
push
adc
adc
jg
push
push
xlat
mov
nop
cmp
jp
mov
cmpsl
lods
xchg
adc
out
mov
push
sbb
sti
add
icebp
inc
insb
pusha
push
in
ret
mov
xchg
and
mov
out
movsl
in
mov
adc
or
xor
mov
mov
dec
xchg
pop
adc
jp
les
add
sbb
movsl
orb
dec
mov
push
pause
push
into
cmp
mov
popa
mov
fistps
popa
test
pusha
mov
sbb
ja
rorb
and
rorb
mov
adc
lret
cmp
clc
pop
and
addr16
lods
adc
mov
out
and
push
divl
cmp
and
cmp
push
cmp
mov
aam
mov
cmp
cmpl
cltd
push
js
into
cmp
mov
and
pop
fcmovnb
outsl
cld
push
mov
xchg
mov
jle
popf
loopne
push
fucomi
inc
icebp
aam
and
mov
xor
icebp
loopne
mov
or
sbb
clc
mov
xor
or
push
dec
dec
fistps
imul
dec
loope
stos
stc
push
jno
mov
int3
mov
mov
pop
or
pop
jmp
fxch
call
sub
sub
mov
add
notl
dec
mov
lods
insl
dec
mov
pop
mov
or
outsl
test
sub
repz
ret
adc
jns
mov
subl
fldenv
aas
add
js
sbb
jns
out
jp
roll
dec
mov
push
and
mov
aam
lods
xchg
jle
pop
imul
popa
movsl
jle
inc
jmp
popf
jae
pop
adc
bound
cmp
mov
loope
dec
cld
mov
aad
popa
mov
bound
outsl
jno
mov
add
dec
mov
lock
pop
or
arpl
dec
outsl
dec
push
lcall
out
loope
sbb
loop
lret
pop
insb
mov
lea
sub
loope
jne
adc
js
inc
pop
in
or
lret
jg
xor
and
mov
cmp
cmp
mov
sub
jl
sbbb
and
cmpsb
out
dec
sub
cmpsb
inc
cs
xlat
out
push
lods
mov
jo
mov
fwait
sub
jae
push
sti
mov
cmp
jb
scas
xor
jmp
inc
enter
sub
test
cltd
and
fs
mov
out
fstps
mov
nop
adc
xor
stos
jmp
std
fisubs
jmp
in
dec
stc
xchg
mov
adc
add
sti
sub
jbe
test
add
stc
adc
loopne
pop
aam
orb
mov
inc
mov
xchg
out
repz
push
sub
in
cmp
or
sub
out
mov
mov
pop
xor
or
xor
sbb
jg
fimuls
xchg
add
loopne
xor
pcmpgtd
mov
pop
jae
imul
icebp
sub
push
arpl
std
inc
nop
aaa
jecxz
mov
push
jp
pop
adc
nop
ss
les
data16
xor
fmull
jmp
dec
test
dec
adc
or
mov
imul
bound
adc
out
call
cmc
fildll
sbb
pop
xor
jmp
lea
lret
pop
pop
imul
movsl
mov
push
and
dec
push
mov
js
pop
and
pop
sbb
add
imul
mov
mov
dec
jbe
outsb
repz
mov
repnz
pop
mov
mov
or
add
lcall
pop
inc
or
xchg
repz
in
and
pop
ljmp
push
out
lcall
aaa
adc
ja
sahf
dec
add
mov
add
out
sbb
mov
xor
lea
fdivs
pop
loop
xor
dec
mov
xlat
cld
xor
add
add
xlat
inc
cmp
out
fsubs
xor
test
test
icebp
push
mov
sub
mov
sub
dec
cld
pusha
sbb
pop
rolb
cmpsb
icebp
stos
cmpsb
push
xchg
sbb
mov
loope
mov
pop
mov
fcompl
xor
pop
cmp
push
jp
or
loopne
stos
add
sbb
test
cmp
jle
cmc
mov
jg
andb
rcrb
js
fsubrs
jae
orb
adc
adc
lock
xchg
push
out
test
mov
mov
or
push
sub
imul
sbb
or
popa
scas
xlat
or
popf
imul
add
xor
lret
aas
xor
cs
repz
push
imul
aaa
dec
popa
dec
jbe
add
aaa
jns
pop
cmc
call
or
out
add
push
jb
push
pop
pop
lods
lret
mov
lods
and
push
jns
push
jecxz
test
mov
push
iret
jmp
out
pop
or
adc
repnz
sbb
adc
dec
sti
enter
adc
mov
mov
jg
sbbl
and
jae
sbb
sbb
xchg
inc
repnz
sarb
xchg
mov
sbb
out
mov
inc
mov
ds
mov
repz
sub
dec
cld
add
inc
xor
mov
fiadds
sub
jno
xor
je
cvtps2pd
pushf
int3
mov
test
popa
mov
shll
lcall
shlb
stc
dec
andb
cs
cld
sbb
nop
in
or
lds
jge
fistl
or
cltd
mov
xchg
pop
mov
push
xchg
fldenv
loop,pn
pop
sahf
mov
aaa
fidivrl
arpl
adc
push
adc
mov
gs
lds
faddp
shll
stc
orl
ret
xor
inc
or
cli
add
jns
inc
lret
in
dec
or
cld
and
mov
dec
lahf
mov
inc
repz
cmp
repnz
jno
inc
pop
imul
xchg
cwtl
lcall
fs
mov
jle
cwtl
adc
xor
insb
sbb
pop
and
iret
popf
xchg
aad
test
push
shr
pop
add
xorl
je
mov
cmp
shlb
aad
lods
lea
aas
pop
jp
push
addr16
sbb
out
cld
in
mov
addr16
jmp
fcmovnbe
jno
xchg
insl
inc
or
jno
jp
mov
jbe
sbb
or
arpl
jg
lret
ss
push
xchg
vgf2p8mulb
cli
int
adc
mov
sbb
aad
add
std
es
rolb
push
inc
je
mov
scas
mov
fcmovnbe
fdivrl
in
bnd
cmpl
add
in
faddl
sahf
ja
or
push
sbb
and
insl
mov
lahf
js
push
fldenv
xor
cltd
in
mov
xchg
clc
stos
and
and
shl
je
idivl
xor
push
mov
xchg
push
mov
mov
adc
int3
and
jle
daa
bound
inc
imul
xchg
rol
adc
sbb
shlb
dec
and
fcmovnbe
addr16
fdivl
frstor
inc
sbb
inc
icebp
mov
push
add
xchg
insl
sti
mov
sub
jnp
cmovle
imul
or
push
in
loopne
mov
push
mov
pop
gs
sub
loop
lea
sub
push
mov
in
scas
and
mov
add
sbb
loopne
mov
dec
scas
xor
mov
pusha
mov
mov
mov
iret
jmp
xchg
ss
jl
call
scas
jge
dec
mov
bndldx
push
aam
add
loop
insb
push
push
mov
insl
mov
sub
lock
push
jns
pop
popf
cmp
out
push
push
fwait
lods
inc
push
pusha
dec
into
mov
fwait
and
hlt
mov
je
arpl
xor
call
cmc
or
imulb
pop
mov
jno
cld
and
mov
add
dec
mov
insb
test
cwtl
ret
popf
out
xor
jo
pop
mov
and
pop
xchg
xor
sbb
mov
idivb
cmpsl
nop
das
inc
sbb
cmp
cs
inc
cmp
lods
or
stc
es
dec
pop
sbb
mov
in
xchg
jg
enter
cltd
cli
pop
insb
dec
fisubrl
adc
out
xor
ja
push
mov
mov
dec
or
movq
inc
mov
int3
mov
inc
enter
repnz
xchg
orb
aam
adc
and
cld
mov
cmp
mov
orl
cld
pop
cli
jecxz
xchg
sbb
xchg
push
add
cmp
push
mov
negb
fisubl
dec
test
bound
adc
xchg
and
pop
mov
pop
repz
rorl
in
out
ja
mov
xchg
fidivl
das
cli
mov
dec
sub
or
jle
sarl
test
xchg
insl
ret
cs
dec
dec
aas
ljmp
sub
and
lahf
movzwl
lahf
shll
push
repz
clc
and
dec
or
ret
jmp
xchg
fisubrs
cs
divl
lods
xchg
std
xchg
xor
mov
mov
in
inc
or
xchg
movsb
mov
mov
imul
pop
add
push
ljmp
push
test
jge
mov
cmpb
aam
dec
xchg
sbb
ds
lock
xchg
into
mov
or
lret
aaa
push
xchg
pop
inc
lahf
dec
push
loop
arpl
dec
lahf
scas
pop
lret
je
sub
loopne
cmp
ss
pusha
mov
ds
ret
lds
push
outsb
out
test
push
daa
and
imul
and
out
jnp
adcb
inc
pop
or
incb
mov
sbbl
sub
ficomps
and
mov
dec
mov
sbb
sub
aam
cmp
jae
sbb
negb
adc
daa
pushf
mov
movsb
movsl
dec
add
mov
jmp
ss
sbb
mov
push
xor
out
loope
and
sbb
shll
mov
mov
inc
insl
dec
pushf
mov
sub
xor
popl
mov
sbb
xchg
out
adcl
shl
loop
rol
test
pop
mov
lds
inc
pop
dec
push
lret
mov
ficomps
push
mov
fadd
pop
inc
es
mov
cmpsb
sbb
xchg
stos
les
lret
mov
ss
pop
cmc
jmp
out
fistps
inc
inc
dec
pop
jns
ud2
pop
mov
pushf
sti
pop
loopne
psubb
and
imul
jp
cmp
mov
mov
shll
pop
xchg
cli
bound
pop
and
lcall
push
cmpb
clc
push
pop
ds
je
mov
xchg
sbb
push
dec
add
es
out
adc
sub
lret
out
add
or
mov
stos
mov
inc
je
push
pusha
sbb
mov
mov
pop
in
sbb
repz
pop
push
scas
xchg
mov
jge
fbld
sub
cmp
jmp
cmp
enter
cmp
in
or
rcr
xchg
in
js
inc
lcall
jnp
out
mov
inc
xchg
int3
in
addr16
into
jle
add
jle
or
sub
add
sti
dec
nop
mov
mov
sbb
sub
and
and
xor
dec
pop
adc
lret
enter
jecxz
xchg
shlb
lss
sub
lods
xchg
cs
jle
into
sti
outsb
clc
mov
out
and
cmc
mov
add
lock
dec
mov
mov
stos
nop
jb
out
sub
movsl
xchg
movsl
jle
outsl
fisubrs
mov
push
jg
add
inc
dec
or
aaa
cmp
mov
daa
sub
insb
cld
jns
test
fwait
lock
fldcw
inc
mov
es
xchg
mov
imul
addr16
fidivrl
sbb
sahf
push
pop
pop
xor
add
pop
std
adc
lret
xor
es
push
das
hlt
jnp
mov
subb
mov
inc
mov
ss
outsl
pusha
or
scas
cmp
xor
sub
adcl
mov
xlat
ljmp
out
pop
loop
out
je
scas
inc
jbe
imul
pop
and
movsb
pop
cld
jmp
push
cmp
int
push
pop
je
stos
mov
and
hlt
dec
movsb
mov
cmp
inc
iret
adc
lds
mov
or
xchg
popf
sbb
lock
xchg
pop
clc
cmp
mov
enter
jmp
jo
xor
data16
setge
lods
pusha
pop
jne
pushf
adc
call
xchg
pop
and
pop
push
dec
das
mov
repnz
mov
xor
pop
cmp
dec
xor
pop
adc
out
outsl
mov
and
fnstsw
lock
aam
nop
inc
dec
out
xchg
shl
out
jae
push
mov
push
pushf
dec
mov
in
sbb
aam
mov
adc
jp
shll
out
lds
lret
xchg
lret
pop
mov
inc
or
mov
jo
insl
and
lods
fcom
jo
push
insb
xchg
pop
and
int3
jnp
and
pop
ss
pop
cmp
fdivs
mov
push
pop
loopne
ljmp
cli
xlat
jmp
shrl
sahf
jb
imul
jmp
test
jns
insb
jmp
and
jb
sarl
push
jecxz
mov
xlat
xchg
fincstp
sub
fstpt
adc
xchg
inc
popf
xlat
dec
inc
add
sahf
stc
jg
scas
dec
sahf
test
inc
inc
inc
inc
lret
loope
lods
aam
cmp
push
rorl
jle
lahf
fidivl
xor
cmpsl
sbb
xchg
mov
out
cmp
sbb
test
jne
sub
pop
ret
xor
add
jae
inc
pushf
js
lds
push
push
xchg
adc
dec
movsl
add
lds
imul
mov
cmp
jns
pop
out
movsl
xor
out
inc
cmpsb
out
push
and
sub
movsl
and
arpl
mov
icebp
aaa
push
or
in
jl
and
ds
lods
push
pop
fs
out
xchg
xlat
std
sbb
cld
pop
ficoml
mull
call
mov
pop
xchg
mov
jl
cmp
xor
jb
sub
jo
ds
lcall
mov
leave
pop
ja
clc
xchg
xchg
cmp
mov
inc
inc
inc
and
push
ds
enter
adc
add
lret
les
mov
test
ret
test
negl
subl
sti
rorb
xlat
mov
test
sub
push
push
and
stos
movsb
in
add
pop
xor
cmpsb
stos
ss
push
dec
lods
sub
mov
je
pop
arpl
lcall
sbb
enter
fimull
or
fwait
xchg
mov
leave
fcomps
xchg
and
pop
sub
xor
sbb
or
lret
mov
iret
loope
in
and
gs
popf
aaa
sbb
ffreep
dec
ljmp
jne
and
movsb
inc
leave
lcall
fcomp
cmp
arpl
ja
jmp
jge
and
subb
xor
xor
decl
nop
stos
sahf
ret
cmp
pop
imul
ret
sub
cmpsl
xor
subb
inc
sub
push
pop
lret
lds
ljmp
fwait
imul
out
movl
cmp
sub
out
orl
ja
sbb
popf
dec
xor
xchg
dec
push
sbb
clc
inc
and
stos
or
jge
and
fsubl
inc
andb
ljmp
push
fwait
mov
fsubrs
fwait
imul
or
inc
dec
popa
dec
fs
movsb
xchg
es
pop
dec
pop
adc
shl
gs
cmpsl
aas
testl
std
fs
ret
dec
pop
incb
movsb
nop
push
js
in
stos
pop
aam
sbb
xor
dec
ds
mov
mov
pop
fwait
jb
lds
mov
xorb
dec
popa
in
jo
and
cmp
mov
leave
push
sub
mov
and
ss
stos
repz
or
fucomip
push
mov
leave
xchg
xor
mov
xchg
leave
push
loop
or
jge
cmpl
mov
xchg
pushl
int3
movsl
imul
mov
dec
pop
jbe
mov
xor
push
shll
loope
dec
inc
fidivl
incw
test
das
mov
lahf
push
insb
idivl
mov
addr16
mov
adc
push
fnstcw
mov
mov
ljmp
jecxz
jns
mov
and
sbb
lods
out
sbb
add
cmp
test
test
ss
pop
inc
xor
push
add
push
ja
jbe
push
sbb
jg
jo
nop
add
jl
rol
aad
pop
add
sahf
sbb
jns
or
lea
loop
in
mov
movsl
mov
mov
cs
inc
push
sub
sub
jg
cs
ficoml
push
enter
aas
xchg
inc
add
pushf
sub
scas
enter
jbe
js
and
xchg
jo
mov
and
add
pop
add
jecxz
push
movsb
lret
push
imul
adc
int3
ret
adc
mov
pop
push
or
mov
push
and
ss
ss
lea
cwtl
adc
out
sbb
iret
cmp
hlt
iret
enter
mov
mov
xchg
in
mov
ret
dec
mov
daa
and
adc
repnz
shll
mov
mov
sbb
sti
orl
dec
andb
cmpb
shlb
notl
dec
popf
out
and
adcb
out
cmp
and
imul
mov
in
lods
xor
ror
sbbl
fsubr
ret
shrl
repnz
adc
inc
mov
cmpsl
inc
stc
mov
aam
lret
test
sahf
jnp
mov
xchg
mov
outsl
sbb
lods
js
iret
gs
xchg
fwait
lret
jne
xor
rcrl
xor
je
out
xchg
inc
pop
shlb
dec
sti
repnz
cmpsl
in
loop
mov
clc
push
dec
cmp
je
sar
xchg
das
mov
mov
sbb
inc
mov
ljmp
xor
imul
fidivl
imul
xor
neg
leave
hlt
jg
mov
rcrb
xlat
jecxz
inc
sahf
mov
scas
shlb
imul
adc
and
jae
jmp
jmp
cmp
cs
hlt
int3
aam
in
jecxz
push
xor
enter
pop
lds
loopne
jmp
in
or
or
test
data16
cs
xchg
mov
cmp
scas
outsb
dec
dec
jno
sarb
cmp
leave
jo
inc
popa
clc
sti
or
pop
inc
xchg
fnsave
sti
and
mov
test
stos
or
fdivrs
xchg
into
aaa
and
cmp
and
pop
in
add
arpl
pop
hlt
adc
in
stos
xorb
int
cmpsb
lcall
sbb
in
hlt
cmp
push
push
adc
cli
ss
lahf
pop
xchg
adc
repnz
out
mov
mov
test
sar
jl
jp
adc
cmp
dec
cmc
jmp
pop
jbe
cmpsb
add
hlt
lret
push
lds
jl
or
add
pop
xlat
in
imull
sub
pop
jmp
in
xor
shll
xor
sbb
mov
jno
inc
scas
aad
and
cmp
dec
pop
mov
test
pop
xchg
dec
mov
cmp
cmc
fisubrs
and
sbb
lret
or
out
inc
sub
sti
fdivrp
sbb
es
mov
ss
sub
nop
xchg
inc
add
and
sbb
or
mov
jns
cmp
hlt
fildl
subl
jnp
cmp
dec
addl
into
icebp
scas
rclb
fdivl
mov
mov
xor
call
dec
xlat
push
test
sub
push
pop
inc
clc
xchg
pop
mov
inc
pop
jo
mov
arpl
jb
in
mov
xor
and
shlb
lods
jmp
scas
jecxz
sbb
lret
dec
ret
fs
sub
pop
mov
in
stc
popa
call
xor
dec
sbb
add
cs
int
lock
iret
rcrb
shl
inc
and
sub
cltd
movl
in
pop
gs
pop
rcrl
mov
fwait
cmp
mov
xchg
push
decb
xlat
cmp
dec
in
xchg
lea
lcall
mov
xchg
subb
cmpsl
pop
lods
js
dec
fdivs
jecxz
cmpsb
je
jge
scas
jge
pop
cld
dec
test
in
sbb
cmp
stc
sub
dec
push
push
addr16
testb
sub
xchg
jp
lds
jne
add
pushf
aam
add
fdecstp
dec
ficompl
mov
adc
clc
mov
jnp
rcrl
pop
stos
or
rorb
jecxz
push
cmp
ret
cmpsb
in
sahf
cmpsl
mov
add
ret
push
fst
add
xor
cli
and
fcoms
in
inc
arpl
nop
arpl
repnz
xchg
lret
mov
dec
mov
mov
popa
and
xchg
sbb
mov
stos
out
lahf
hlt
push
pop
mov
pop
sbb
lret
mov
xchg
inc
out
fiadds
repnz
stos
jnp
int
lret
adc
ret
xchg
pusha
call
fisttpl
outsb
cld
jno
jmp
insl
inc
dec
push
or
mov
ljmp
ja
stos
loopne
outsl
stc
inc
push
mov
fldenv
fcmovb
test
es
int
pushf
xor
shrl
gs
in
fimull
xchg
sbb
notb
cmp
mov
arpl
mov
sahf
cs
sub
mov
icebp
mov
jns
in
in
icebp
push
sub
into
insb
dec
movsl
pop
add
and
call
push
jl
arpl
adcl
jl
gs
fnstcw
lods
mov
pop
xchg
lahf
and
mov
xlat
in
pop
jecxz
repnz
adc
jae
sti
adc
xor
stos
adc
outsl
jno
pop
pop
push
iret
aad
stos
std
add
push
pushw
test
icebp
loopne
arpl
mov
dec
mov
push
mov
mov
jnp
ljmp
not
lahf
lret
inc
xor
test
and
arpl
mov
sbb
pusha
mov
cli
jmp
mov
cmpsb
addr16
dec
je
std
ficomps
mov
jbe
inc
lds
xchg
and
fnstsw
or
pop
daa
dec
xchg
scas
mov
jl
in
sub
or
ror
shlb
bound
mov
push
pop
mov
fildll
jb
inc
insl
jecxz
dec
push
shrl
mov
std
mov
push
iret
jo
repz
or
aas
xor
out
mov
aam
and
adc
sub
mov
push
sub
sub
arpl
push
inc
fidivrs
cmp
aam
push
jl
dec
push
fcmovb
mov
into
out
mov
bswap
ret
mov
lahf
jmp
loop
pop
jecxz
stos
mov
std
lret
enter
add
out
test
pop
sub
xchg
sbb
pop
fisttpll
push
dec
out
mov
jno
jae
cmp
adc
aas
cmp
loope
gs
pop
inc
dec
nop
xchg
or
sbb
add
xor
cmc
push
xchg
and
jp
mov
sbbl
in
lock
pop
dec
shrb
flds
sbb
push
gs
outsb
mov
sub
cld
xchg
mov
mov
cmp
jg
into
das
mov
mov
sti
loopne
jmp
cmp
mov
std
mov
jge
pop
xchg
dec
sbb
popf
mov
jo
lea
and
ss
scas
pop
push
fstpl
add
jnp
xchg
mov
sbb
sbb
push
les
icebp
xlat
pushf
sbb
enter
adc
mov
fisubrl
int3
insb
stos
ss
xchg
pusha
mov
rcrb
xchg
pop
out
push
inc
fldt
push
push
mul
mov
xor
add
lret
xor
idivb
sar
adc
adc
pop
mov
pop
and
xchg
stos
jae
fwait
or
jmp
push
mov
sbb
cmp
or
push
sbb
fucomp
push
and
sbbl
imul
aas
lcall
mov
add
push
mov
mov
enter
xchg
xchg
ss
out
jg
mov
push
fistpl
push
adc
jge
negb
shrb
jecxz
sub
movsb
in
ljmp
pushf
cmp
iret
xchg
shlb
sub
and
cmp
mov
rcrb
popa
lock
mov
sub
lret
add
mov
sub
fs
and
lods
xor
cmc
sbb
lcall
inc
mov
test
test
mulb
imul
jle
mov
inc
dec
lods
aas
dec
push
pusha
jmp
nop
or
fstps
xchg
dec
sbb
les
fldln2
mov
xor
inc
sbb
adc
add
fs
mov
pop
gs
sti
push
repz
mov
and
mov
ja
arpl
test
push
out
sbb
sub
lahf
mov
mov
fistl
fiaddl
dec
je
sub
push
mov
lret
sub
popl
repnz
pusha
sub
test
sahf
xchg
je
je
out
into
shl
push
xor
int
insb
outsb
test
loop
arpl
fnsave
push
cmpsl
mov
out
in
sbb
sbb
sub
int
loope
outsb
xlat
test
jge
xor
imul
scas
dec
push
insb
pop
inc
push
mov
push
test
gs
cld
jl
loope
pop
cmp
mov
or
dec
pop
scas
inc
hlt
mov
mov
bound
xor
push
sbb
inc
mov
xchg
stos
mov
xor
mov
sbb
add
in
ret
enter
clc
mov
fcmovnu
movsb
icebp
mov
cmp
xchg
movsb
add
adc
int
push
push
xor
mov
or
add
or
xor
sub
xor
std
jo
cmp
inc
in
sbb
xchg
xchg
stos
mov
and
pop
std
add
bound
movsb
or
pop
decb
inc
clc
fsubr
and
mov
push
jle
sub
adc
dec
push
out
in
mov
mov
jmp
and
clc
aas
dec
iret
xchg
aas
xchg
lret
clc
mov
bound
or
sub
rcrl
out
xchg
pxor
lods
popf
xor
xchg
add
cld
inc
add
ret
jns
lds
sub
outsb
iretw
mov
mov
test
pusha
sbb
je
and
cli
lahf
popa
ret
sti
lret
stos
mov
or
mov
jmp
adc
dec
mov
cs
ret
mov
push
stos
pop
mov
enter
cmp
sti
xchg
subb
jl
inc
jbe
xor
lea
pop
in
sbb
shlb
call
stc
imul
and
adcl
outsl
flds
rcll
dec
mov
sbb
pop
cmp
lods
imul
or
dec
aas
or
stos
nop
inc
aad
pop
nop
mov
dec
sub
sbb
inc
rcll
fsubrl
arpl
add
sub
inc
adc
cmp
pop
inc
rcrb
sahf
adc
add
outsb
push
out
jg
push
jo
and
rolb
add
mov
fdivl
jg
mov
jns
out
mov
jns
negb
jecxz
movsl
hlt
jge
mov
stos
pop
in
ror
sbb
mov
aam
mov
jae
and
xchg
repnz
sar
mov
hlt
jnp
hlt
imul
push
hlt
dec
mov
gs
mov
xor
jl
push
scas
inc
mov
dec
stos
int3
insl
inc
stos
adc
lods
mov
xchg
andl
cli
ror
lcall
nop
push
or
lcall
mov
outsb
popf
sub
mov
int
popa
pop
push
xchg
leave
cmp
push
popa
cmp
dec
loope
sub
xchg
movsl
jle
sub
ljmp
fwait
cmpsb
lods
in
xchg
sub
mov
push
xchg
sbb
negl
stos
sbb
push
dec
dec
daa
jns
push
sbb
jo,pn
push
push
scas
and
fildl
jmp
or
or
addr16
and
mov
aad
lds
in
adc
daa
mov
mov
mov
aas
sub
mov
mov
xchg
imul
mov
inc
pop
outsl
add
pop
aas
inc
inc
das
ss
addr16
xchg
sbb
sahf
dec
mov
in
add
xor
add
jmp
sub
xor
repz
cmp
psrlq
mov
aas
dec
dec
mov
fnstcw
xchg
sub
rcll
sub
repz
mov
ljmp
mov
imul
rcl
dec
stos
sbb
aad
jp
xchg
or
jecxz
stos
adc
pop
test
inc
cmc
and
sub
push
adc
fistps
cltd
lret
jge
gs
xor
dec
cmc
adc
inc
jnp
cmp
adc
ret
es
insl
xchg
hlt
push
mov
je
pop
mov
sbb
sbb
mov
and
push
adc
gs
sarl
xchg
or
xchg
in
fbld
stc
fdivrl
xchg
xchg
mov
jp
fwait
ds
sbb
cmpb
repz
xor
push
xor
adc
push
mov
mov
shll
int3
and
add
js
and
mov
sbb
mov
xor
or
adc
jge
mov
adc
outsl
mov
sbb
add
pop
neg
pop
loopne
subl
push
dec
xchg
jae
ss
pop
jo
lds
xor
jge
mov
jge
cmp
adc
mov
jmp
jns
fldcw
dec
mov
mov
push
sub
or
dec
and
push
mov
je
and
sbb
mov
aas
enter
or
push
out
jne
je
cmp
mov
inc
mov
and
flds
xchg
inc
sbb
jnp
je
les
dec
arpl
cmp
nop
sbb
or
fsts
call
mov
out
xchg
xchg
cwtl
mov
mov
loope
les
fisubrs
movd
jmp
fists
sub
pusha
iret
adc
dec
add
inc
mov
pop
into
cmp
jge
icebp
xchg
dec
scas
enter
cmp
pop
mov
out
lret
hlt
xor
xlat
inc
insl
or
jae
lcall
xchg
repnz
cmp
xor
aad
inc
insb
jb
call
or
int3
jecxz
dec
xchg
pmulhw
mov
ret
insl
or
scas
and
mov
cmp
addr16
jle
jle
mov
sbb
xchg
cmp
cmpl
push
int
or
mov
std
lret
cmc
mov
stc
jb
jmp
dec
fmuls
lret
xor
jp
add
stos
jg
lret
push
leave
loope
sbb
dec
ret
divb
jne
les
sahf
jg
pop
outsb
das
lock
mov
pushf
pop
xchg
bound
cmp
inc
aam
mov
rcrl
jmp
cmp
xchg
cmp
mov
inc
adc
loopne
mov
lock
or
pop
loope
divl
sbbl
cmpsl
sti
inc
and
pextrw
subl
ficomps
fistl
mov
cli
int
popa
xchg
nop
and
pop
stos
cmp
pop
arpl
mov
xchg
push
stos
cmp
stos
fsubl
loop
cltd
pusha
pop
inc
mov
stos
cmc
or
push
push
cmp
cmp
stc
lea
lret
xchg
es
and
icebp
add
insb
loopne
testb
mov
pop
xchg
push
or
ds
pusha
dec
mov
imul
insb
lcall
or
jno
outsl
subb
xchg
inc
into
jae
je
push
xor
and
xchg
pop
call
loopne
lret
pusha
fdivs
sbb
fmull
xor
cmp
push
pushf
and
pushf
aas
jle
xor
jmp
cwtl
mul
jmp
lret
lds
xchg
adc
pushf
jl
rolb
dec
inc
xor
pop
in
lret
jne
lret
inc
inc
dec
jno
mov
hlt
mov
insb
insb
flds
cmp
sub
adc
mov
out
hlt
inc
mov
test
pusha
mov
push
adc
cmp
add
lods
js
fisubrl
xor
mov
rcl
mov
mov
jge
jmp
ljmp
ret
mov
push
scas
add
lcall
inc
aas
mov
or
mov
xchg
out
mov
pop
clc
cmp
fucomip
or
dec
daa
jne
xor
icebp
in
gs
xor
xor
insl
xchg
and
xor
ret
adc
cmp
aad
inc
cmc
adc
inc
mov
mov
pop
fcomps
jbe
pop
je
pop
inc
jne
enter
jne
dec
ja
push
push
and
xchg
je
or
push
pusha
xor
adc
inc
rolb
arpl
fldl
pushf
jle
lahf
andl
lahf
xor
data16
pop
or
inc
jecxz
inc
test
adc
adc
cmp
movsl
pop
ss
cmp
adcl
add
inc
jp
xlat
and
cmc
mov
rcll
in
jmp
inc
ds
imull
inc
outsb
pop
fisubrs
push
sbb
ja
ret
push
insl
xchg
lds
xchg
ljmp
mov
ljmp
mov
outsl
call
push
xchg
dec
mov
mov
pop
mov
sub
sbb
mov
push
xchg
repz
cmp
adc
insb
cmp
xchg
decl
into
jge
sub
push
add
and
clc
and
cmp
dec
jnp
loopne
shl
data16
push
jge
stos
icebp
cwtl
fs
ljmp
dec
cwtl
push
mov
fdivrp
xorl
mov
cmp
lret
in
sbb
rol
lods
cli
push
aas
in
dec
ficoms
pushl
xlat
adc
das
sarl
call
cmp
pop
push
fucomp
int
xchg
inc
mov
jle
int
add
cmp
mov
push
and
cltd
cmp
leave
int
sub
xchg
cmpsl
arpl
je
pop
mov
hlt
add
lods
dec
ja
xchg
xchg
das
inc
jecxz
pop
ret
inc
rolb
jmp
sbb
push
xlat
cmp
cmp
sbbb
jle
jne
dec
orl
pop
mov
arpl
cwtl
lods
outsl
data16
fs
test
fcomps
pop
adc
popf
pop
cs
jmp
mov
orl
xchg
push
idivl
fnstsw
test
aad
movsb
add
mov
or
inc
repnz
dec
mov
mov
push
or
cli
sti
int
push
add
add
mov
andl
sub
sbb
ss
lods
sub
xchg
add
aaa
ret
notb
mov
xchg
in
or
jp
sahf
call
loopne
push
push
cmp
xor
js
movsb
ret
jl
sbbb
dec
sub
addr16
push
repz
sub
mov
jp
and
push
mov
adc
mov
in
stos
cltd
pop
iret
incl
and
xchg
test
or
cmp
mov
xor
sti
mov
cli
mov
adc
pop
inc
xchg
pushf
sysexit
push
add
xchg
int3
adc
sarb
add
add
jne
into
cltd
fildl
jne
jnp
imul
mov
xor
jbe
and
sub
inc
xchg
mov
or
jmp
test
mov
inc
enter
clc
int3
loopne
mov
js
mov
adc
jl
adc
sub
pushf
leave
cmc
adc
nop
ljmp
mov
fsubrl
xor
es
es
mov
in
jb
add
dec
jbe
fcmovne
lds
fcomps
lahf
adc
mov
cli
jle
sbb
aam
popa
pop
and
xchg
mov
pushf
notb
push
mov
enter
dec
and
sub
arpl
mov
or
out
jmp
andl
popf
jg
pop
cmp
dec
and
jbe
cmp
cli
test
lods
shlb
roll
inc
out
ds
or
xor
scas
mov
arpl
sbb
inc
ja
jmp
bound
sub
cld
ror
dec
cmp
pop
roll
and
and
or
pusha
add
xor
nop
push
mov
and
add
and
lock
sbb
ret
jmp
xchg
lret
or
mov
std
jnp
aam
push
in
cld
add
dec
fucomp
xrelease
bound
scas
test
push
hlt
shrb
and
scas
stc
lret
and
jecxz
in
push
or
or
aam
push
jmp
gs
and
subl
cli
add
cmp
aaa
adc
mov
frstor
mov
push
jg
mov
pushw
pop
jbe
das
lcall
and
cmp
mov
clc
in
sbb
xchg
xchg
inc
retw
mov
mov
call
and
imul
push
fsubrl
lock
jge
js
push
inc
and
inc
sub
andl
xor
scas
pop
fxch
jo
into
mov
sahf
sub
mov
and
jnp
pop
sti
or
clc
jbe
subl
test
dec
pusha
xchg
mov
es
lret
jecxz
loop
sbb
sbb
aad
adc
fmuls
sub
mov
sbb
dec
outsb
cmpsl
enter
mov
ret
cwtl
repz
cmc
pop
mov
pop
enter
xor
dec
mov
mov
push
add
push
dec
xchg
fcomip
frstor
push
lods
xchg
pop
fisttps
shrb
popf
out
fdivrl
xchg
push
mov
mov
test
shrl
cld
jecxz
lock
lock
ja
mov
dec
mov
jle
loop
jecxz
sub
repnz
fnstenv
adc
push
jecxz
sub
mov
sbbl
cmp
icebp
aad
lret
movsb
or
andl
scas
adc
sub
lahf
jnp
in
mov
mov
es
push
adc
jne
hlt
neg
pushf
fstps
pop
jno
in
pop
add
cltd
js
shll
sub
fwait
push
push
mov
das
lcall
orb
lcall
jb
js
xchg
xor
pop
dec
jge
test
mov
push
out
out
xchg
sar
dec
jge
insb
in
cmpsl
daa
push
insl
lods
xor
movq
insb
and
sub
repnz
ljmp
pop
mov
push
fisubs
lea
mov
pop
dec
adc
mov
push
inc
cmc
push
movsb
test
icebp
or
pusha
push
push
mov
cmp
addl
cmp
xchg
pop
pusha
pop
jne
or
aad
data16
add
dec
and
sub
sub
popf
pop
sbb
push
jl
cmp
jno
xor
xlat
xchg
dec
test
scas
test
adc
call
fstpl
adc
mov
in
in
pop
mov
cwtl
in
xchg
outsb
mov
popw
mov
jo
icebp
out
frstor
je
and
or
cltd
pushf
mov
ds
cmc
xchg
aaa
lret
dec
and
push
les
mov
jl
inc
push
add
in
pop
mov
dec
adc
orl
xor
push
stc
xchg
or
mov
cmp
hlt
dec
inc
push
jecxz
aam
addr16
leave
stos
cs
and
jae
sub
and
and
mov
stc
sbb
fadds
mov
roll
mov
push
stos
xchg
push
or
sahf
cltd
jl
mov
push
mov
int3
sbb
out
je
mov
test
mov
ret
lds
sbb
push
scas
and
repz
in
cmp
adc
in
adc
cmpsl
add
lahf
adc
mov
xchg
pop
fistl
cltd
add
xchg
inc
cltd
idivb
mov
mov
push
js
arpl
test
cwtl
inc
test
addr16
popa
enter
repnz
add
movsb
rcll
data16
sahf
pusha
mov
hlt
rol
sub
es
ret
fsubl
cmp
add
mov
pop
icebp
mov
icebp
sbb
inc
test
cmp
add
mov
out
pop
push
jne
inc
insl
xchg
mov
cmpsb
push
das
js
je
rcll
cltd
cmp
fwait
arpl
sbbl
icebp
fsts
jo
iret
adcb
in
ret
arpl
js
icebp
sbbb
shl
push
push
pop
and
pop
lret
push
scas
lcall
lret
jns
or
jecxz
add
hlt
sub
mov
clc
cltd
xorb
xor
push
add
clc
movsb
scas
int3
push
vpmulld
xor
mov
pushf
jle
lret
push
pop
cmpsl
and
mov
cmp
lock
push
adc
imulb
mov
aas
popl
subl
shll
jmp
xor
addb
xchg
popf
inc
inc
iret
mov
fcoml
arpl
outsl
cld
loopne
xor
pop
pop
xlat
stos
inc
icebp
call
jmp
pop
shrl
aaa
loope
jo
push
or
faddl
pop
pop
fwait
sbb
std
mov
rcll
sbb
add
or
push
jo
push
pop
add
pop
loop
stc
mov
lahf
mov
fdivl
dec
cmpb
and
sbb
hlt
int
sahf
pop
fcompl
lock
mov
inc
sbb
or
inc
push
shl
outsl
inc
shr
outsl
stos
jp
lock
sahf
and
xchg
xchg
shll
and
sub
ljmp
mov
ja
movsl
or
inc
movsl
mov
sub
cmp
mov
push
pop
fcomps
hlt
test
inc
loopne
mov
and
fmull
inc
or
inc
adc
or
add
pushf
out
xor
xchg
add
push
mov
test
fldl
dec
pop
cltd
jecxz
hlt
decl
mov
test
inc
les
add
idiv
inc
cwtl
mov
cli
pop
es
outsl
aam
stc
addr16
lret
xchg
scas
xlat
jge
lret
jbe
nop
sbb
and
xchg
stos
stc
fistpll
jmp
inc
outsl
jne
sbb
popa
mov
ljmp
in
test
test
sbb
jge
mov
pop
mov
ljmp
rol
push
adc
inc
pop
sub
les
lods
sub
bound
jne
add
xchg
pop
and
sbb
sbb
and
mov
add
xchg
sbb
xchg
dec
cli
or
sbb
add
insb
adc
inc
daa
insw
addr16
test
repz
rolb
mov
pop
lret
mov
pop
push
pusha
push
adc
push
dec
push
xor
pusha
sbb
clc
mov
mov
outsb
jge
pop
icebp
sbb
cmp
cs
xchg
sahf
pop
adc
push
dec
mov
je
fldcw
cld
sub
xor
adc
mov
popl
shlb
add
cs
lds
in
pop
out
decb
pushf
inc
mov
fs
cld
and
push
cmpsb
xor
insb
jmp
mov
in
cmp
mov
sub
or
in
rcrl
repnz
xchg
adc
aaa
fnsave
idivl
mov
sub
lods
ret
lret
scas
mov
ljmp
dec
xchg
outsb
cltd
cmpsb
inc
iret
popf
cmp
lea
inc
cmp
sti
push
aam
loope
imul
lret
and
inc
xlat
jae
sti
push
scas
int
call
js
xor
push
imul
mov
out
pop
push
test
test
dec
inc
std
cmc
iret
jecxz
push
negl
gs
in
push
popf
add
mov
mov
stos
in
mov
jno
aad
gs
std
dec
mov
or
popa
pop
mov
in
push
sub
mov
data16
imul
mov
ffreep
ficoms
test
lret
pop
mov
fcmovbe
test
mov
cmp
xchg
xchg
imul
fcoml
mov
fimull
dec
inc
sub
daa
fwait
aad
cld
sti
cs
aad
mov
mov
std
mov
cmpb
jl
out
mul
sti
rcl
hlt
rcrb
mov
push
sub
mov
scas
fstpt
mov
adc
lcall
ds
and
cmp
inc
call
mov
pop
sbb
les
push
je
outsb
pop
jp
mov
xchg
push
cli
sub
adc
aas
jmp
stos
cmpsb
into
xchg
je
js
shrl
push
leave
cmpsl
lods
pop
iret
adc
es
mov
sub
cld
std
orl
xor
int
in
aam
cwtl
push
dec
scas
fistpl
xchg
iret
icebp
ss
cmp
mov
lods
jns
movsb
pop
pop
jne
es
push
shll
lahf
cmp
and
mov
lcall
adc
xlat
sub
mov
and
subb
out
sbb
xlat
lds
div
jle
ljmp
cmpsb
jge
lds
sbb
ficoms
cmpb
fidivl
sub
or
mov
mov
cmp
or
out
inc
cmp
and
mov
icebp
fs
imul
cs
movsl
imul
rcll
popa
fldl
test
mov
and
cwtl
aad
in
cmp
or
stc
cmp
push
jl
ficompl
fistpl
hlt
pop
subb
ficoms
sbb
dec
not
cmp
mov
sbb
inc
shll
in
sahf
push
pop
mov
pop
lret
jbe
outsl
and
clc
pop
mov
inc
push
xchg
sub
lcall
out
sbb
cmpsb
and
loope
add
push
xlat
adc
cmp
pop
ljmp
rolb
shl
push
addr16
lods
push
fstps
mov
pop
dec
dec
je
inc
lods
push
or
sbb
xor
xchg
push
sahf
xchg
sbb
pushf
sbb
addr16
jmp
xchg
xchg
sub
bnd
mov
xchg
adc
cltd
int3
sub
test
push
adc
test
push
push
and
jmp
inc
inc
jbe
lds
mov
gs
push
leave
or
fldl
dec
dec
dec
mov
mov
pop
add
into
fs
pop
mov
sub
out
loope
int3
daa
cmp
scas
rep
std
popl
rcr
test
test
insb
and
mov
dec
sbb
and
repz
cwtl
xor
mov
ret
sub
loope
lcall
xchg
clc
mov
in
xchg
jge
stos
push
inc
popf
das
mov
nop
mov
leave
mov
loope
jg
lret
add
mov
out
fdiv
mov
in
movsl
inc
mov
mov
sar
decl
pop
cwtl
lods
ja
std
push
icebp
mov
sbb
int
adc
repnz
icebp
pop
or
clc
adc
sbb
sub
push
sti
pop
xor
xchg
mov
xor
iret
push
mov
shl
lods
inc
scas
leave
lret
lcall
loop
mov
cmp
xorb
add
imul
rcrb
div
inc
loop
movsl
or
aas
add
stos
out
jnp,pn
sub
out
cmp
jns
fyl2xp1
jmp
and
jp
jno
mov
movsl
sti
cwtl
hlt
arpl
xlat
adc
in
stc
xchg
pop
sarl
loop
add
and
pop
sarb
push
pusha
test
inc
data16
push
cmp
out
call
add
xor
mov
pop
loope
sbb
mov
jle
mov
xchg
jo
call
dec
cmp
lods
push
es
fsubl
or
push
jl
sbb
mov
xchg
pop
adc
movsb
mov
mov
loop
repz
in
mov
sbb
sub
push
push
fcompl
mov
push
push
shr
fcmovnbe
movsl
sbb
popa
dec
jno
or
lock
xchg
shrb
inc
and
mov
vmwrite
nop
push
ret
imul
insl
in
lods
bound
sub
pop
lcall
lret
sub
sub
jle
mov
pop
addr16
adcb
jb
xchg
xor
stos
sbb
and
inc
stos
mov
sbb
popf
jns
inc
xchg
dec
inc
push
push
add
repnz
cmp
xchg
les
insl
pushf
out
push
imul
int
push
mov
push
adc
cli
ljmp
pop
movsb
loope
cmp
jb
inc
ljmp
sub
aaa
std
jle
push
xchg
dec
jl
xor
jg
dec
adc
and
addl
test
and
and
rclb
mov
sbb
paddusb
rolb
sub
xchg
cmc
orb
aad
fisubrl
andl
jae
scas
sarb
bound
testb
sub
dec
leave
mov
addl
jno
jg
test
lods
out
ja
ds
inc
push
dec
into
and
push
xor
cltd
sbb
and
mov
test
sub
mov
mov
cltd
sbb
imul
lcall
lea
roll
sbb
call
fnstsw
mov
pusha
mov
sbb
mov
jge
bound
mov
sbb
outsl
rdmsr
mov
pop
in
dec
outsl
mov
rcrl
cwtl
leave
cwtl
xor
test
and
sub
push
std
shlb
pop
mov
jmp
inc
loopne
inc
aam
lret
and
js
jl
lahf
mov
divl
ret
mov
sbb
push
jmp
lret
push
inc
jp
aas
mov
pop
or
stc
or
arpl
pusha
dec
cmc
xor
lock
test
adcl
sub
xchg
fcoms
fdiv
pop
repz
fadds
and
movsb
push
xor
out
sbb
lds
sub
mov
mov
sub
pusha
test
mov
fidivs
andb
mov
dec
fistpll
lret
add
pop
and
inc
pop
sti
or
xchg
cli
enter
imul
pop
sub
rcrl
or
out
test
xor
in
pop
push
sub
mov
jbe
dec
sahf
xlat
adc
sbb
xchg
cmp
nop
pop
inc
je
mov
rcrb
les
cli
xchg
xor
or
repz
call
add
in
cwtl
das
mov
mov
push
enter
test
aad
scas
sbb
xor
ret
pop
daa
cvtdq2ps
fnsave
inc
adc
push
xor
adc
jle
mov
dec
sbb
pop
sub
test
dec
mov
push
jl
rcrl
in
xchg
push
sahf
aam
add
mov
popf
das
call
imul
fnstsw
repz
jo
inc
shll
cmpsb
push
push
adc
jg
jo
or
dec
jo
imul
movsl
adc
enter
pop
and
mov
mov
jle
les
push
in
or
repz
cli
shll
pop
push
mov
bound
cmp
repnz
push
jg
loopne
enter
push
or
pop
pop
insb
and
xchg
mov
jae
in
cmp
jg
popa
into
loop
or
pop
jecxz
loope
pop
mov
adc
dec
jno
push
pop
cmpsb
pop
mov
scas
int3
push
jg
out
fbld
lcall
push
lods
cmp
orl
push
ds
es
dec
lcall
gs
mov
sub
outsb
pushf
pop
pop
shll
loop
mov
xor
sbb
push
into
or
les
lea
out
mov
shlb
aam
xchg
mov
jns
lcall
negb
and
mov
sbb
sub
sub
out
andb
cmp
jmp
push
jnp
hlt
out
in
frstor
outsb
data16
clc
jge
push
lahf
testl
xor
mov
je
sti
and
mov
pop
xor
lods
push
jo
out
push
leave
lea
jo
dec
cld
scas
stc
test
int3
cld
lret
mov
add
dec
dec
or
mov
cli
sub
stc
imul
adc
jp
mov
fildl
dec
xchg
jo
mov
aaa
and
mov
xchg
mov
sbb
dec
mov
cmp
jle
shlb
movsl
push
inc
insl
mov
aas
jo
dec
adc
loope
sub
jge,pn
jmp
inc
mov
push
adc
push
stc
leave
je
mov
cmp
add
fwait
stos
pushf
addr16
pavgw
ret
sarb
add
bound
mov
dec
out
push
push
addr16
jne
mov
popa
rolb
and
iret
icebp
adc
and
cmpsb
or
fidivrl
enter
mov
inc
daa
add
jmp
lods
sbb
lods
and
sbb
pop
ret
popf
push
dec
mov
stos
push
shr
pop
mov
push
cmp
adc
sbb
jl
xchg
xchg
in
nop
push
clc
out
xor
ret
sar
repnz
mov
ljmp
dec
ficoms
mov
es
push
mov
call
xchg
adc
icebp
outsb
cli
inc
negb
int
pop
inc
push
push
fsubr
lahf
xor
fcoml
mov
leave
sbb
or
loopne,pn
push
or
dec
out
or
xchg
out
cmp
cmp
shll
jne
test
mov
add
roll
lahf
pop
pop
stc
test
inc
push
mov
daa
cmpsl
orl
mov
mov
xchg
lret
and
and
shll
dec
push
movsb
jl
sub
mov
notl
daa
movsl
dec
scas
rorb
push
push
mov
bound
andl
mov
cmc
sub
gs
popl
push
adc
les
dec
cmpsl
mov
inc
mov
lods
or
cmc
push
pop
scas
into
jb
xchg
or
data16
out
mov
ds
jecxz
inc
andb
push
inc
rcl
adc
pop
orb
nop
jno
sti
push
aas
jae
jg
daa
and
mov
lahf
sub
lock
lds
clc
fdivrl
inc
fistps
xchg
or
in
pusha
fisubs
rcrl
xchg
push
jmp
aaa
mov
jbe
mov
mov
cmp
loop
in
insb
xchg
dec
inc
je
xchg
arpl
pop
lret
into
cwtl
mov
in
int3
bound
xchg
scas
mov
cmp
ljmp
and
push
and
push
pop
and
adc
test
jp
pop
jg
out
scas
dec
rcl
pop
mov
add
cwtl
jbe
ret
sub
pop
mov
cmp
pop
dec
sub
cmp
xlat
fwait
bound
xchg
sbb
mov
push
add
test
xchg
xor
jae
into
outsl
push
popa
push
xlat
repz
push
clc
call
lods
jp
jp
push
clc
in
inc
cmp
mov
out
add
daa
pop
mov
or
iret
fwait
mov
and
les
dec
ja
movsb
das
lahf
xor
ljmp
pop
or
xchg
jns
dec
adc
imul
push
fistpl
icebp
arpl
ljmp
lahf
es
std
cs
mov
mov
sbb
mov
repz
pusha
bound
lods
aad
into
dec
jb
idivb
mov
xor
aaa
into
xor
inc
dec
fwait
movsb
add
mov
shlb
js
aas
roll
and
loope
cltd
aaa
mov
sub
shll
stos
lahf
cli
add
xchg
leave
jecxz
push
scas
lock
sbb
mov
xor
mov
fldl
cmpb
jb
mov
push
les
mov
sub
mov
xor
stos
iret
add
pop
adc
shll
mul
dec
test
adc
imul
stos
mov
stc
in
xchg
fld
shll
add
or
lods
test
sbb
pop
jg
stc
shlb
dec
imul
add
cmp
sub
ds
cmpsb
ss
mov
jg
mov
lcall
dec
and
sub
push
loop
inc
sub
pop
mov
jo
inc
or
or
jae
fiaddl
lock
pop
lock
sahf
xor
mov
pop
add
mov
pushf
xor
loope
in
and
stos
cmp
mov
push
mov
jecxz
or
not
inc
mov
xchg
sahf
and
inc
inc
inc
jnp
out
aad
lahf
aaa
push
jno
cmp
in
shl
repnz
mov
sub
or
in
push
adc
xchg
mov
cmp
iret
inc
into
mov
loopne
push
jge
sbb
fiaddl
test
std
data16
sub
insb
inc
les
pop
xor
fcmove
push
cmp
out
fnstenv
loop
jb
cmpsl
insl
ret
mov
jp
cli
ret
fwait
hlt
and
fildl
mov
or
sbb
mov
subb
xchg
pushf
inc
jne
mov
loope
add
ja
divl
ss
call
clc
lods
fisttpll
aad
mov
xchg
mov
repz
movsb
in
and
rorb
sbb
jmp
and
int
and
movsb
dec
popf
popf
pop
out
jbe
dec
sub
iret
jmp
mov
js
into
lahf
lods
int
inc
mov
loopne
clc
push
aam
shrl
pushf
xor
xchg
push
xor
xor
mov
test
xchg
xor
cmpsl
rorb
sbb
in
xchg
je
mov
cmpsl
mov
dec
mov
repnz
or
xor
cwtl
cmp
add
pop
cmp
xor
cwtl
inc
ss
xor
rcr
data16
repnz
bound
sbb
pop
lea
xchg
mov
mov
jne
gs
dec
aas
outsb
ss
push
adc
sbb
mov
dec
jp
int
outsb
jno
cmp
rcl
divb
popa
ret
pop
dec
sub
push
arpl
adc
xchg
out
mov
test
dec
and
xor
pop
fwait
enter
les
clc
mov
stos
fwait
cmp
or
fnstsw
roll
add
hlt
cmp
add
mov
cld
mov
mov
insl
mov
lret
fnstcw
dec
aaa
jo
incl
or
mov
clc
sbb
into
popa
dec
and
pushf
cmp
jnp
leave
call
sbb
fmull
pop
mov
mov
jne
mov
pop
test
and
push
popf
add
pusha
mov
mov
inc
and
popf
sub
test
clc
mov
lods
jne
sbb
mov
negl
bound
push
push
sbb
mov
jns
push
sbb
in
xchg
push
frstor
mov
call
in
mov
rcrl
inc
mov
ud0
push
mov
aam
loop
pushf
ror
ljmp
jns
lock
cltd
sti
mov
push
xchg
cmc
pushf
mov
lods
fs
xor
ljmp
push
sub
lret
daa
das
push
pop
sub
and
sbb
fcomi
jne
ss
inc
scas
stc
fcmovnbe
pop
dec
into
add
ss
inc
mov
push
inc
mov
cmp
ds
jb
mov
and
aam
mov
arpl
pop
gs
xor
mov
push
jmp
xchg
mov
and
cwtl
hlt
sbb
jecxz
dec
lds
fcompl
sbb
xor
mov
out
jnp
insb
xor
imul
push
inc
and
imul
out
ds
add
dec
pop
pop
pushf
push
dec
and
jp
cs
sbb
xor
push
in
cwtl
pop
push
enter
pop
movsl
cs
rorl
and
or
insb
pop
pop
pop
xor
xchg
data16
and
add
jnp
js
fdivrs
aam
daa
cs
mov
pop
sbb
cmp
inc
in
mov
lods
in
dec
jns
pop
outsl
jge
cmpsb
mov
sbb
and
and
in
dec
jle
sbb
loopne
push
push
movsl
hlt
into
test
add
addb
imul
fdivl
push
inc
icebp
inc
orb
jmp
jecxz
mov
scas
push
call
test
mov
inc
mov
xor
cmp
scas
cmp
divb
xchg
mov
sbb
and
cmpsb
inc
dec
arpl
testl
fisubrl
lcall
pop
xor
mov
xor
shr
jecxz
mov
mov
in
push
inc
ret
gs
xor
aas
enter
sbbl
mov
jne
fs
dec
inc
pop
inc
mov
into
fisubs
or
mov
je
jns
gs
pop
insl
popl
xchg
arpl
xchg
clc
clc
xchg
jecxz
enter
loop
stos
cmc
mov
fidivrs
push
call
cmp
add
mov
adc
jp
aam
stc
es
and
loopne
push
mov
in
jno
insl
insl
cmp
repnz
fimuls
mov
fimuls
jge
outsl
fsubs
js
jp,pt
arpl
fstpt
data16
push
data16
popl
mov
loop
mov
xchg
cltd
cmpsb
outsb
ja
ror
jle
shll
insl
push
xchg
pop
fs
push
sub
adcl
push
jnp
xor
arpl
mov
jo
sub
icebp
mov
sbb
sbb
pop
cmp
inc
mov
jno
jo
ficompl
dec
or
pop
pushf
ss
and
sbb
sbb
ds
jne
adc
jecxz
mov
add
rcr
jmp
ror
cmp
sbb
loopne
les
sti
dec
sahf
jle,pn
lock
roll
push
xchg
pop
mov
outsb
cwtl
and
xchg
call
lods
dec
idivb
push
mov
inc
push
mov
mov
mov
push
ja
jns
or
insl
or
lcall
xchg
inc
je
insb
push
mov
outsb
std
rorl
mov
dec
sub
jmp
and
pop
out
pop
sub
call
fmuls
mov
push
rolb
dec
mov
test
xorl
cmp
pop
adc
ljmp
jl
sti
xchg
push
cld
out
mov
test
in
mov
push
pusha
in
push
mov
icebp
adc
loope
mov
inc
loop
mul
aas
outsb
xchg
movsb
inc
adc
mov
dec
pop
jnp
mov
mov
dec
dec
add
iret
stos
push
pusha
mov
scas
add
mov
loopne
filds
add
mov
test
push
cmpsl
mov
out
sbb
fsts
pop
leave
enter
add
testl
lods
aas
mov
cmp
cmpsb
push
mov
ret
test
mov
imul
in
movsb
add
cltd
aaa
xor
cmpsl
rcrb
in
aas
daa
out
push
in
arpl
enter
sbb
mov
sbb
push
shll
add
les
mov
sti
push
cld
dec
loope
ja
xor
les
enter
popa
sahf
jbe
pop
mov
into
mov
cmpsl
mov
sbb
add
stos
arpl
std
push
outsl
fadd
and
add
loopne
pushf
movb
sbb
mov
jbe
mov
mov
pop
jmp
mov
mov
or
xchg
cmc
not
stos
inc
sbb
imul
inc
loopne
dec
addl
pop
mov
mov
lret
lock
addr16
cs
bound
xor
negb
and
mov
movsl
inc
test
inc
xor
pop
data16
ja
adc
and
push
push
xchg
mov
test
mov
cmp
fnstsw
int
inc
and
mov
jb
aad
sbb
cli
out
cmpb
jae
jne
cmpb
mov
xor
jmp
add
push
add
xchg
xorl
test
shrl
aaa
or
pushf
sbb
xchg
mov
xor
jmp
out
je
das
fidivl
insl
popa
andb
cmp
adc
popf
mov
ficoms
test
aas
mov
push
insl
jne
pop
mov
adc
push
push
fsts
and
xchg
inc
scas
movsl
out
dec
mov
jbe
pop
int3
xchg
rcl
std
cmp
adc
mov
push
loop
outsl
or
mov
jmp
mov
add
loope,pn
out
ja
pop
mov
cs
cmp
stos
dec
fwait
test
daa
adc
or
icebp
cmc
dec
mov
pop
insb
cs
enter
lea
sub
rcll
sti
cmp
xor
rclb
fistpl
or
adc
dec
xchg
into
ljmp
mov
jae
outsl
mov
std
aas
adc
jp
pop
ja
jnp
ficompl
xchg
jl
subb
ret
fucomip
jnp
shll
push
or
in
jo
ss
or
repz
fs
aas
into
movsb
inc
adc
xorb
add
repnz
out
and
jae
ljmp
outsb
pop
sbb
sub
jecxz
cltd
xchg
dec
sub
sbb
popf
popa
aad
or
dec
add
pop
fnsave
addr16
jo
call
adc
fdivl
aam
ss
push
scas
and
mov
jne
ds
push
push
lahf
cmc
ret
cmp
push
cmp
fimuls
cmp
shll
cltd
ret
inc
cmp
cmp
or
and
xchg
scas
ja
cld
jns
mov
popa
mov
sub
mov
je
test
and
sub
pusha
arpl
push
test
push
sbb
movsb
push
mov
mov
bt
jl
pop
jge
leave
dec
cmc
mov
adc
jp
dec
add
pop
test
pop
xorl
daa
in
imul
add
adc
stos
inc
push
jns
cld
in
pop
mov
leave
shrb
movb
xchg
xlat
and
and
push
fwait
pop
push
std
lret
shll
aas
or
xor
pop
lods
int3
jns,pn
sub
add
push
or
pusha
mov
jno
fnstcw
aaa
notl
stos
outsb
es
ljmp
cmp
sub
into
das
shrl
lret
fisttps
int3
lret
outsb
or
in
mov
xchg
mov
orl
and
sub
sub
aaa
xchg
bound
mov
popf
movl
subl
jge,pn
loope
es
pop
mov
sub
jp
mov
shlb
cmp
push
sbb
stos
ljmp
dec
xchg
lock
push
jns
sbb
mov
sbbb
dec
ficoml
lock
test
es
or
mov
xor
lahf
cmp
mov
aad
fs
jo
xchg
dec
sbb
sub
sti
add
idivb
scas
outsl
pop
pop
inc
stos
inc
inc
stos
mov
jp
inc
adc
pop
dec
sub
js
push
mov
shlb
leave
dec
fidivrs
aam
and
ja
mov
clc
inc
sub
pushf
lock
jg
dec
fistl
iret
popf
pop
sub
adc
mov
sub
unpckhps
sahf
add
lods
stos
cwtl
jnp
sbb
push
mov
jae
xchg
mov
fwait
xchg
pop
inc
push
mov
lcall
in
fnsave
and
xlat
fildll
rcl
add
in
lahf
shlb
sti
insl
xor
inc
js
jl
cld
out
repnz
into
push
push
arpl
addr16
mov
bound
out
nop
ljmp
sub
xchg
sbb
lods
cmp
ja
outsb
repnz
adc
ret
dec
inc
mov
insl
mov
inc
loope
fmull
bound
pop
pop
jns
add
notl
pusha
adc
cmp
push
sub
int
mov
dec
or
das
jg
xchg
add
faddl
adc
nop
stc
jnp
repnz
xchg
xor
jmp
xor
inc
rorb
xchg
std
sub
xor
xchg
loopne
sbb
addl
pop
clc
and
inc
xor
lret
imul
push
nop
pop
and
sbb
sarl
mov
jno
and
jno
insb
ss
cmpb
js
stos
sbb
fdecstp
push
int
xchg
fwait
lds
or
push
enter
dec
cmp
adc
mov
pop
mov
add
inc
nop
andb
aad
or
pushf
jmp
dec
jbe
inc
jmp
cld
inc
subl
loope
mov
jle
js
xchg
addr16
mov
loop
jne
sub
std
scas
dec
test
mov
popa
xchg
fstp
jns
dec
repz
or
push
or
ret
mov
hlt
xchg
jb
mov
fcoml
int
mov
or
push
aad
mov
mov
loop
and
cmc
sub
leave
rcll
lret
inc
mov
out
mov
mov
adc
cmc
mov
paddsb
je
stos
fsubs
gs
jo
scas
dec
and
sbb
decb
ja
fninit
mov
adc
scas
bound
inc
shlb
scas
scas
push
faddl
pop
movsl
push
fildll
push
loope
sub
jbe
lret
or
shrb
movsl
xchg
lods
pusha
adc
mov
sbb
int3
pop
mov
mov
dec
loope
and
movsl
ds
xor
popf
jecxz
push
icebp
aaa
std
lret
jb
into
arpl
xchg
xchg
mov
ds
dec
ss
cmp
mov
mov
sbb
push
xchg
push
sbb
sbb
inc
dec
jne
loopne
xchg
jecxz
test
and
cli
call
pop
ja
mov
jnp
lea
or
outsb
and
sti
adc
ljmp
lcall
adc
pop
insb
mov
lds
shlb
sub
pop
hlt
enter
insb
dec
addr16
mov
inc
popf
int3
rcrb
ljmp
stos
test
stos
lahf
aaa
inc
daa
sub
mov
inc
lcall
movsb
call
iret
js
jbe
xchg
out
iret
dec
mov
add
or
fwait
pop
mov
push
cmp
sbb
cmc
pop
jge
fdivs
pop
adc
inc
jecxz
add
cltd
ficoms
aad
sub
sub
clc
decb
jbe
aaa
sarb
inc
fistpll
cmpb
sbb
inc
xchg
popa
mov
lahf
aad
add
je
fwait
xorl
pop
scas
repz
mov
loop
and
fstps
pushf
ljmp
xchg
fucomp
in
outsb
out
push
sahf
insl
out
loopne
test
aad
arpl
andl
mov
in
cmp
sbb
and
andb
rolb
das
mov
addr16
xchg
pop
out
ss
and
jle
sbb
mov
aad
jnp
adc
movsl
jnp
mov
pop
cmp
cmp
mov
lods
add
mov
push
aad
xchg
js
and
stc
dec
sbb
hlt
inc
pop
jecxz
loop
gs
mov
mov
xchg
arpl
xor
mov
stos
test
std
fistpll
sbb
jge
or
cmp
sub
test
cs
jge
dec
incl
popa
out
xor
jo
adc
lea
jmp
or
push
cmp
cmp
nop
ss
fs
push
sti
jp
sub
imul
jb
test
mov
lahf
inc
outsl
mov
lahf
lds
and
xor
sub
mov
mov
adc
dec
jg
cli
sahf
cmp
fsubrs
sahf
inc
stc
inc
mov
mov
sti
cmpsb
xchg
movsl
adc
ja
xchg
push
sub
imul
test
lods
jnp
jp
xchg
lret
mov
pop
movsb
mov
and
jmp
xchg
xchg
loop
jecxz
aas
lea
jge
jp
xor
negb
xchg
shll
jp
aaa
arpl
dec
fdivrs
daa
fcoml
movsb
pcmpgtw
jbe
push
movsb
mov
mov
cld
xchg
imul
es
cltd
bnd
dec
xchg
adc
mov
call
shrl
mov
cwtl
sti
cmp
xchg
adc
lret
sub
sub
mov
push
pop
sbbl
mov
js
mov
cmp
pop
jbe
test
xchg
push
cwtl
cmp
outsb
mov
popa
pop
pop
sub
dec
dec
pop
test
out
aas
imul
outsl
sub
popf
outsb
out
cmp
xor
movsl
pop
scas
inc
orb
inc
mov
add
lcall
jmp
and
push
ljmp
cmp
xor
jbe
mov
and
repnz
stos
pop
mov
mov
sti
mov
lret
scas
clc
ret
xchg
xchg
fwait
mov
push
xchg
imul
movsb
mov
mov
imul
call
inc
sbb
andb
in
inc
xor
inc
bound
sub
jmp
xchg
fldenv
add
fstp
sahf
or
pop
pop
les
aas
sub
mov
in
push
punpckhdq
xchg
data16
ret
fnsave
out
xchg
inc
push
add
addr16
xor
test
movsb
sub
lcall
cmpsl
dec
xchg
jmp
jnp
mov
jae
mov
cmp
mov
xchg
fidivl
dec
push
cltd
cmp
inc
les
or
das
ficoml
in
xor
mov
jnp
push
shlb
push
add
out
inc
shlb
les
fsts
push
in
scas
xchg
stos
test
call
xchg
sbb
pop
push
mov
repnz
mov
adc
cmpb
cmpb
xchg
not
call
scas
repnz
push
pop
fptan
sub
xchg
push
mov
out
xchg
mov
pop
pop
outsb
cmp
cmp
lret
adc
fucomi
fidivrs
scas
mov
hlt
mov
sar
decl
jmp
xor
cltd
jle
lret
pusha
call
dec
fwait
ret
test
loope
lds
inc
ds
sbb
out
dec
insl
add
jno
jb
sub
or
mov
test
push
insb
xchg
inc
in
scas
pop
test
ret
cmpb
sub
rcr
push
call
mov
or
repnz
test
pop
and
pop
adc
test
xchg
mov
jmp
and
addr16
out
test
jb
pushl
ftst
add
push
mov
cwtl
and
call
cmpsb
dec
or
lret
mov
popa
xchg
push
sbb
rorb
cmp
pushf
repz
push
pusha
mov
ret
jl
popf
add
or
jecxz
ret
push
cmp
push
cli
ret
scas
cmpb
mov
fcomps
aaa
cli
insb
inc
int3
dec
or
xor
add
cmp
test
lds
pop
dec
ret
inc
shlb
xchg
push
mov
shll
jmp
es
stos
inc
jbe
adc
xor
in
add
bound
out
sbb
inc
push
jmp
mov
int3
sahf
cmc
jns
jnp
cwtl
in
imul
sbb
popf
mov
adc
lods
jecxz
and
adcb
sub
mov
sbb
push
cwtl
pop
cmp
xchg
inc
fstpt
not
cmp
xchg
pop
fmull
lret
aad
outsb
ja
jmp
and
mov
das
mov
pop
lock
ss
mov
mov
push
sub
loop
cmpsl
gs
outsb
test
inc
sbb
roll
xchg
ret
lods
mov
out
shl
inc
aam
mov
mov
lret
cwtl
pop
xlat
sbb
cmc
fstpl
jl
mov
mov
inc
stos
jb
into
rolb
shl
imul
jge
hlt
movsl
popa
xchg
push
mov
out
fnsave
lret
pop
out
sub
push
push
cmp
leave
sti
lds
subl
jb
xchg
mov
jp
outsl
sti
push
dec
pop
jns
dec
push
adc
test
daa
int3
push
jl
mov
and
mov
je
jae
popa
pop
test
dec
int
mov
dec
std
push
sbb
cmp
aas
addl
dec
aam
cwtl
inc
in
test
xor
adc
aam
xchg
sahf
push
xchg
movsl
push
sub
jmp
xchg
inc
push
pop
fdivs
xchg
sub
fiadds
push
or
or
icebp
xor
scas
add
stos
nop
and
in
mov
jno
imull
clc
js
cmp
inc
jecxz
pop
cmp
pop
cwtl
idivl
rorl
insl
pop
les
add
xchg
jmp
test
pop
push
push
mov
decl
xor
inc
add
xchg
shld
rcl
xchg
or
adc
or
cld
stos
mov
jecxz
mov
lock
cmp
fcomip
in
movsl
jo
mov
pop
sub
xchg
sub
call
mov
aaa
movsb
inc
dec
xchg
stc
sahf
inc
pop
cwtl
inc
push
sarl
cmpsl
test
fs
mov
adc
repz
jl
cmp
and
insl
popa
jne,pn
sbb
js
pop
cmpsb
mov
test
sahf
inc
cmp
mov
scas
je
mov
addr16
and
imul
add
cmp
nop
leave
mov
dec
dec
ret
lds
and
mov
jo
jnp
xchg
push
stos
or
outsb
pop
je
insb
sbb
xchg
xor
mov
ljmp
movsb
dec
adc
repz
scas
or
mov
data16
je
loope
add
and
lahf
in
xchg
push
dec
jns
cs
ja
dec
jge
xlat
lock
fnstsw
dec
stos
and
jmp
ds
xor
xchg
jnp
sub
outsb
fdivr
cmp
adc
movsl
pop
and
popa
daa
mov
jne
pop
xor
and
aas
ret
push
xchg
sbb
xchg
into
in
or
cld
das
lahf
jb
ss
or
xor
js
mov
fistps
cld
daa
fs
jmp
mov
sti
xchg
cmc
pop
pop
adc
pop
and
clc
hlt
push
lods
sbb
mov
orb
aas
lahf
fisubl
adc
sbb
repnz
mov
jne
xor
lahf
sub
sub
sbb
dec
int
mov
sbb
cmc
pop
shrb
xchg
dec
pop
cmp
jns
jne
pop
push
or
fcoms
jl
clc
push
js
push
lods
mov
rcr
cli
pop
xchg
out
inc
xor
js
jl
push
and
sub
mov
test
ficoms
sub
das
push
aam
les
jp
flds
adcb
adc
push
jge
outsb
or
cmpsl
and
sbb
pusha
jbe
mov
aaa
int3
adc
cmp
and
mov
mov
pop
movsb
mov
adc
dec
mov
cmp
es
jmp
push
jo
add
out
int
lahf
addl
xor
and
pop
rclb
outsl
add
jge
sbb
outsb
or
jle
outsb
mulb
fwait
repz
mov
mov
cmp
xchg
mov
push
dec
hlt
pusha
out
adc
jne
fsubp
addr16
insb
push
lea
aaa
ja
imul
je
mov
dec
inc
add
fstps
aaa
mov
sub
dec
xor
mov
cmp
insl
inc
sti
dec
mov
mov
add
mov
sub
jae
and
jne
push
cmpsl
pop
dec
subb
aad
pop
push
pop
stos
stos
enter
jge
and
inc
test
bound
movsl
add
jp
mov
adc
xchg
cmpl
add
rol
push
loope
addr16
sub
sub
cmc
xchg
pop
fldcw
aas
mov
dec
cmp
mov
jb
push
dec
mov
xor
mov
filds
daa
cmp
pop
ret
adc
adc
pop
push
mov
stc
dec
in
cmp
pop
nop
jno
jo
jb
das
data16
lods
sti
les
push
push
iret
push
jo
icebp
or
jge
lds
shlb
test
lods
or
and
mov
push
push
fwait
test
incl
or
cld
sub
shlb
lahf
popa
lods
movsl
shlb
test
mov
cwtl
nop
add
mov
adc
inc
movsl
add
mov
clc
dec
push
lock
jp
jp
cmp
mov
jmp
insl
iret
and
enter
enter
lea
xchg
adc
push
or
insb
shll
shll
out
je
inc
test
out
xchg
sbb
mov
fwait
arpl
and
test
fisttps
out
test
push
mov
cmp
adc
add
adc
std
cmp
xchg
push
int
lahf
or
dec
int
pop
xchg
loop
mov
aad
ljmp
jbe
adc
stos
mov
mov
rcrb
add
xchg
and
jge
decl
xchg
push
popa
or
pop
adc
push
aam
sbb
aad
test
push
adc
mov
jg
sbb
scas
repnz
jecxz
jp
and
push
sbb
adc
jecxz
sub
sbb
xor
jo
xor
inc
imul
push
sbbb
rcrb
adc
cmp
adc
shrl
mov
js
mov
clc
outsb
inc
adc
xor
dec
or
cmp
sti
mov
mov
test
pop
and
xchg
aas
cwtl
jl
jo
insl
xchg
das
and
xlat
sub
stos
cmpsb
xor
mov
adc
mov
adc
ret
inc
flds
dec
jae
push
js
rcr
mov
jae
js
inc
mov
adc
stc
jo
in
jle
std
add
xchg
sbb
lods
push
fists
imul
push
enter
fistl
das
imull
imul
cmp
jmp
ljmp
enter
mov
addr16
lods
jecxz
or
iret
xchg
into
push
std
imul
mov
pop
or
pushf
pop
pop
fs
sub
lock
adc
rorb
push
jae
sbb
pop
aaa
adc
xor
repz
xlat
and
pop
mov
movsl
rolb
sub
mov
and
inc
fisubrl
sbb
std
insl
arpl
sbb
ss
push
pop
popf
imul
inc
ret
inc
xor
pop
xorl
jns
aas
push
push
pop
movsl
xchg
push
jnp
les
fildl
in
mov
ret
fs
dec
adcl
jns
pop
into
jg
push
mov
push
ljmp
mov
insb
stos
inc
dec
es
xor
push
imul
push
out
dec
clc
xchg
out
out
add
movsl
dec
mov
shlb
mov
lret
xor
jno
xchg
add
mov
mov
xorl
and
inc
js
cmpsb
inc
repz
ja
popa
test
dec
or
cli
xchg
mov
and
xor
mov
inc
mov
arpl
mov
test
push
mov
fdivs
popa
dec
das
lock
adcl
dec
jbe
outsl
dec
dec
dec
aas
mov
lahf
xor
sbb
lret
addl
push
cmp
jo
lcall
push
shr
mov
popf
arpl
sbb
fldcw
mov
lock
lock
jo
fs
testb
pop
in
push
mov
mov
pop
jmp
lds
leave
out
dec
or
in
adc
xchg
seta
jno
movsb
hlt
js
bound
addr16
sahf
out
pop
nop
sub
or
dec
push
lds
outsb
lcall
icebp
rorl
pushf
pop
rorl
pop
and
push
and
stos
adc
rol
pop
stos
push
data16
arpl
xor
jge
adc
jmp
cwtl
das
and
push
adc
push
test
jnp
hlt
xchg
xor
cltd
iret
stos
nop
add
jno
sub
dec
std
int3
mov
mov
xchg
xor
into
mov
cli
sbb
sbb
and
push
push
repnz
mov
mov
cmp
lock
mov
dec
xchg
loopne
cmp
bound
and
add
ja
mov
sub
jae
std
xchg
cmp
inc
fadds
mov
fucomi
cmpsl
xchg
xchg
add
and
outsl
add
imul
adc
shrl
xchg
inc
nop
fidivrl
fwait
jnp
dec
mov
int3
test
push
sbb
outsl
ljmp
fisttpl
mov
pop
out
gs
bound
lahf
stc
sbb
pop
add
leave
adc
or
dec
sub
sub
inc
inc
pop
push
mov
add
addr16
frstor
out
sub
push
xchg
hlt
pop
sbb
push
mov
add
shl
cltd
xorb
cmp
cmp
jmp
add
lret
push
stc
ja
sub
lock
xchg
rolb
cwtl
sbb
imul
fiadds
pushf
mov
shrl
sub
movsl
mov
sahf
ret
mov
lods
and
push
shlb
imul
das
rolb
xchg
push
sbb
xlat
mov
emms
imul
mov
push
and
sub
nop
repz
xchg
push
inc
cmpsb
dec
jge
pop
jb
mov
ss
add
mov
jae
out
adc
push
inc
jne
and
mov
mov
lds
arpl
fwait
rolb
ret
popa
xchg
int
xchg
jmp
int
call
xor
jnp
mov
pop
or
push
sbb
jle
push
popf
and
mov
sbb
or
mov
movsb
mov
divl
xor
jmp
scas
fimuls
in
pop
aas
xor
js
sbb
or
mov
outsb
or
outsb
loopne
fstpt
roll
xchg
inc
push
push
jmp
adc
mov
sbb
adc
cmpsl
jmp
and
push
imul
sub
call
pop
jmp
add
test
lahf
lahf
sub
mov
pusha
mov
mov
pop
aam
and
iret
or
scas
add
sbbl
xor
arpl
movsl
out
sti
pusha
out
add
xchg
fdivl
xchg
add
lods
sbb
js
cld
out
dec
pop
gs
sub
jle
xor
pop
sbb
cmp
xchg
jno
push
sub
dec
xorb
mov
pop
insl
mov
scas
into
xor
inc
enter
mov
mov
jae
xchg
mov
fstpl
sarl
ds
repz
stos
pop
imul
jbe
adc
dec
push
dec
pop
xchg
xor
ja
xor
cmp
in
xlat
jbe
jmp
mov
push
sbb
ret
mov
lock
xor
push
pop
jmp
inc
cltd
clc
add
sbb
iret
rolb
xor
cs
test
push
jp
fs
es
sarb
repnz
std
cli
pop
sub
inc
insb
add
orb
ret
outsb
cs
andb
ret
pop
xor
or
outsb
fldt
jno
in
cmp
pop
sbb
scas
or
add
mov
into
out
je
test
xlat
dec
push
xor
mov
rcr
mov
not
xchg
lock
addr16
mov
mov
push
mov
lock
and
lods
push
push
std
mov
test
mov
jecxz
xchg
insb
jge
xor
push
lds
cmp
pop
and
ret
cmp
mov
or
pusha
or
mov
mov
mov
mov
cmpsb
add
fmuls
mov
jns
cwtl
or
inc
mov
ja
outsb
pusha
mull
lahf
xor
cmp
je
adc
add
jne
push
xchg
sub
clc
dec
scas
add
in
mov
call
inc
cwtl
or
in
xor
mov
fs
lds
sbb
dec
mov
or
arpl
adc
push
shll
push
add
movsb
fnstenv
sub
add
adc
cltd
daa
in
popa
cmpsb
in
out
int3
jb
lahf
add
sub
pushf
les
dec
adc
lods
ret
xchg
mov
pusha
mov
outsb
fisttps
push
push
lret
cwtl
inc
stos
cwtl
aam
mov
sub
jb
pop
pop
push
pop
divb
arpl
out
loope
jecxz
jne
out
ss
mov
inc
pop
mov
fisubrl
cmp
sbb
in
lods
scas
out
scas
sub
and
mov
pop
push
inc
fwait
mov
sahf
enter
inc
jb
ja
push
dec
cmpsl
mov
and
adc
mov
je
pop
rcrb
and
rcrb
std
mov
xchg
das
icebp
and
loopne
mov
js
mov
rorb
sbb
sub
sarb
rol
xor
fs
cmpsl
jae
repnz
stos
ds
jl
clc
scas
leave
call
push
scas
imul
mov
dec
add
popf
add
int
lds
add
stos
xor
in
mov
pop
mov
push
jle
sarl
sub
pushf
ret
test
jb
rorb
jp
jl
push
xor
jmp
xchg
xchg
pop
jae
mov
into
ss
cmp
je
cmp
xor
jbe
inc
bound
pop
fmuls
mov
or
pop
jecxz
xchg
adc
add
fwait
mulb
or
leave
fnstenv
sub
mov
dec
dec
mov
push
outsb
cmc
inc
out
loope
sub
pop
jmp
movsl
ja
and
fninit
sbb
nop
scas
mov
or
and
cmp
rcrb
icebp
mov
and
popf
inc
pop
call
mov
roll
ja
in
pusha
loope
pusha
mov
sahf
mov
jne
or
ljmp
lret
clc
push
sub
sbb
inc
mov
hlt
adc
sbb
fdivrl
pop
out
addr16
inc
jle
sti
and
into
imul
jg
mov
dec
fldt
scas
sub
jl
mul
int3
int3
mov
fwait
add
fwait
sbb
pop
stc
jns
divb
es
lcall
push
mov
popf
or
fidivs
imul
popa
push
pop
mov
and
pop
pop
mov
xchg
pop
push
mov
fcmovu
mov
dec
jmp
jg
push
pop
iret
movsb
add
subl
push
cmpsl
xor
hlt
jo
jnp
sbb
pusha
inc
insl
outsb
dec
jmp
cmp
rorl
mov
stc
xor
inc
jl
outsb
cmp
or
pushf
pop
jnp
cmpsl
push
lods
jg
out
data16
aad
add
movsl
popf
loopne
leave
dec
pop
js
sub
pusha
mov
mov
xor
test
shrb
push
push
mov
sti
out
adc
mov
xor
lds
mov
dec
push
ret
jle
data16
lret
sahf
rcrl
pop
cmp
push
jge
jno
mov
xor
push
sahf
mov
xchg
pop
std
adc
mov
jl
fwait
mov
in
dec
loope
pop
inc
notrack
cwtl
and
jns
dec
pop
or
xor
mov
aas
or
das
mov
jbe
cli
jns
in
xchg
jae
enter
xchg
sub
xchg
sbb
shll
push
fs
ds
adc
adc
das
jb
movsb
lea
dec
mov
sbb
aam
aas
stos
push
cmp
or
lret
xchg
xchg
xor
sbb
sub
out
inc
and
pop
sub
jnp
aad
incl
pop
loop
push
xor
xchg
and
stos
jno
mov
stc
xchg
xor
shlb
cmp
shlb
dec
outsl
mov
mov
nop
inc
ret
lahf
mov
insb
fbstp
add
test
mov
adc
dec
push
mov
outsb
loop
pop
xorb
rcll
and
xor
int3
loopne
lret
inc
cmp
outsl
jle
jo
repz
cmpsb
add
xor
push
shrl
lock
cld
add
inc
pop
and
xchg
fwait
lret
stos
movsb
ja
ja
cmpsl
mov
lods
test
xor
pop
into
xor
mov
dec
push
or
daa
sti
lods
and
shr
xor
ljmp
inc
sbb
xchg
imul
and
stos
inc
ret
lock
mov
xor
jb
mov
sbb
dec
in
adc
test
andb
dec
or
fiaddl
mov
push
fcoml
sbb
outsl
mov
dec
xchg
mov
movsl
mov
fs
xor
push
in
mov
sub
or
jo
mov
push
adc
cmc
call
scas
dec
inc
sbb
cmp
inc
jle
rolb
shlb
sti
jg
rolb
stc
jb
cmp
outsb
js
inc
sub
in
or
int3
icebp
call
loope
push
dec
sub
pusha
fisubl
mov
test
xchg
sar
popa
adc
loopne
xchg
and
dec
mov
stc
sti
std
out
enter
xchg
mov
movsb
jo
lds
inc
movsl
push
cs
adc
and
pusha
sbb
bound
xor
pop
jmp
sub
xor
cmp
not
sbb
leave
jg
lahf
test
imul
jg
orl
repnz
sarl
push
test
pop
xchg
jge
jo
and
sahf
lcall
xor
push
rcrb
fadd
jmp
popa
ret
aaa
sub
mov
test
popf
das
sbb
les
push
sbbb
mov
and
jl
lods
lret
mov
in
push
inc
cltd
cmp
lcall
pop
sbb
insb
jecxz
dec
cwtl
int
pop
cmpsb
mov
fnsave
dec
cmp
jb
or
xor
popf
fcmovb
gs
and
and
shll
jl
fnop
pop
repz
outsl
out
dec
call
push
xchg
dec
push
mov
repz
hlt
dec
dec
divl
in
xor
fwait
xchg
sub
call
mov
mov
mov
add
outsb
push
call
and
cld
add
stos
xchg
clc
sub
xchg
loopne
push
sub
iret
adc
repz
mov
cltd
pop
iret
pop
lods
cmp
add
sub
lret
outsl
fdivs
pushf
pop
jmp
sbb
ss
lods
jle
sub
mov
cmp
pop
cmp
adc
popa
rolb
popa
mov
and
call
jmp
pusha
icebp
xchg
popf
lods
lods
enter
push
push
sbb
inc
mov
adc
lret
adc
into
add
movsl
fldenv
push
scas
mov
mov
cmpsb
pushf
cmc
mov
cmp
push
pop
pop
cwtl
xchg
shrl
loop
test
inc
push
and
inc
test
imul
ljmp
mov
rorl
fisubl
in
popf
mov
mov
gs
xchg
lcall
je
or
lea
mov
out
dec
mov
in
movsb
pop
popw
or
xor
pop
adc
mov
cmp
sbbb
aaa
sub
inc
cmp
aad
icebp
repz
stos
leave
lods
rcrl
popf
stc
sahf
inc
pop
and
push
cmp
cmpsb
sbb
or
pop
in
push
aaa
out
in
xchg
and
xor
shlb
cwtl
mov
or
push
push
inc
push
divb
mov
std
adc
mov
sub
ljmp
or
add
sbb
and
hlt
lock
add
lcall
push
mov
dec
mov
daa
xor
sbb
test
arpl
push
fdiv
mov
pushf
stc
mov
dec
pop
mov
faddl
jg
addl
dec
sbb
mov
adc
sti
dec
daa
cmp
sub
shl
xchg
test
gs
mov
stos
inc
icebp
push
xor
adc
pushf
cmp
stos
idiv
fsubrs
pop
xchg
jmp
cwtl
mov
stos
mov
mov
xor
mov
add
sub
xchg
xor
xor
adc
rolb
ljmp
dec
xchg
lock
jnp
xor
fldcw
cmc
xlat
sti
data16
xlat
fidivrl
sbb
test
mov
fwait
mov
std
in
les
fistl
add
movsl
sbb
jle
cmp
test
xor
xchg
clc
dec
insb
out
cltd
lods
xchg
inc
imul
jp
js
call
sub
cli
add
dec
ds
out
jg
xor
add
and
nop
bound
mov
mov
vmovaps
rol
or
cmpsl
fldcw
in
imul
rep
lret
add
jb
dec
dec
push
leave
sbb
movsl
fisubs
addr16
add
rcrb
pop
sub
lea
dec
xor
inc
dec
mov
sbb
inc
stc
jmp
movb
or
cmp
add
out
lret
sbb
push
pop
mov
aas
cli
xchg
sbb
xchg
bound
pusha
cmc
push
pushl
sbbb
xor
adc
out
jbe
sbb
repz
sbb
ja
pop
lock
scas
ja
insl
aad
adc
or
out
cwtl
int
sub
mov
and
insl
mov
xor
inc
fld
inc
mov
in
ret
sub
into
nop
in
in
mov
adc
and
lcall
mov
sbb
psubw
mov
pushf
aaa
filds
inc
cli
push
cmp
popf
leave
punpcklbw
xor
add
ja
cmp
mov
shll
jg
jne
push
mov
pushf
adc
dec
jp
paddusb
emms
dec
stc
fnstcw
mov
push
scas
int3
xor
scas
ds
cmpsl
insb
fwait
add
sbb
out
sub
ljmp
pop
mov
call
mov
dec
les
cli
push
test
push
movsb
mov
or
cmc
pop
sbb
push
jle
push
dec
jns
ret
leave
xor
inc
sbb
mov
cwtl
lods
fucomi
adc
sub
test
stos
mov
insb
daa
adc
scas
ja
adc
fdivr
arpl
test
pop
cmc
mov
lea
out
out
mov
or
inc
xor
lds
test
cld
hlt
mov
pop
aas
int3
mov
ja
popf
sti
cli
mov
mov
mov
lock
pushf
push
push
icebp
xchg
loop
mov
nopl
xchg
jl
les
movsl
xor
out
push
dec
mov
jns
repnz
cli
cmpsb
or
rcll
outsb
jno
jg
js
sahf
sub
cmp
push
int
mov
sub
mov
mov
fidivl
add
push
sbb
mov
jl
rolb
iret
inc
pop
sub
cmpsb
addr16
and
mov
mov
stc
mov
jbe
test
das
pop
cmp
mov
sub
gs
ss
sbb
mov
push
mov
sahf
aaa
or
dec
dec
imulb
sarb
negb
fwait
incl
xor
adc
jnp
add
sbb
mov
imul
or
es
fucomi
fcoml
inc
jno
lcall
pop
idivb
sbb
or
push
icebp
jle
lock
test
mov
popf
inc
stos
xor
es
and
lea
fists
mov
fsub
je
jmp
inc
lock
mov
adc
dec
inc
imul
pop
das
pop
test
cmp
jle
fldt
mov
cli
mov
cld
cmc
pop
xchg
mov
jmp
rorl
mov
mov
loop
mov
ljmp
pushf
inc
jnp
fcompl
sub
fcomps
aaa
jg
and
sbb
jmp
out
hlt
mov
adc
fmulp
xor
and
mov
sub
leave
pop
mov
shrb
push
fs
sbb
xchg
dec
sbb
mov
jno
idivl
add
or
cmp
ss
pop
sub
test
mov
dec
adc
lock
test
add
sbb
mull
push
jae
cmp
lods
in
cmp
aam
inc
das
adc
mov
cmp
cmp
adc
fdivrs
dec
loop
sbb
jno
mov
mov
xchg
or
cwtl
mov
dec
xchg
inc
outsl
in
xchg
ds
gs
pushf
cltd
mov
sub
or
lret
push
gs
frstor
mov
push
cmpsl
or
xchg
adc
mov
insl
fisubrs
mov
and
inc
mov
cmp
testl
mov
lahf
mul
stos
das
pop
sti
add
fwait
xchg
mov
jae
inc
fdivrl
addr16
sbb
sbb
in
adc
out
shll
leave
cmpsl
jo
pop
mov
lods
fstps
xor
sbb
mov
dec
ret
faddp
subl
or
lret
lods
loopne
mov
popf
adcb
dec
and
das
mov
sahf
lret
jae
inc
rclb
aam
popf
push
adc
adc
ds
cltd
sbb
lret
xchg
dec
xchg
lret
inc
pusha
cmp
pop
push
incb
loop
mov
sbb
lcall
or
sbb
inc
or
sub
mov
xchg
dec
addr16
lret
sub
bnd
mov
mov
xchg
and
inc
stos
movsb
ja
pop
fs
mov
incl
jb
and
xchg
fnsave
cmp
xchg
dec
jmp
and
mov
push
inc
es
shr
inc
add
pop
adc
mov
cmp
imul
js
pop
or
sbb
cmpsl
pop
push
enter
roll
jp
sbb
sti
sti
ret
repnz
xchg
addb
and
insb
out
in
pop
popa
pop
nop
pop
inc
lea
mov
out
lods
ret
or
cmp
ret
xchg
shll
and
sbb
scas
mulb
mov
test
xor
mov
inc
inc
insb
aas
push
sbb
ds
sub
dec
and
adc
dec
mov
push
mov
icebp
fstpl
xchg
int3
pop
mov
sbb
insl
sub
xchg
mov
jae
xor
inc
lea
call
sub
mov
pop
shl
mov
or
and
sub
sub
mov
les
push
ret
popa
daa
dec
test
jnp
test
sbb
push
jg
stc
mov
sub
in
cmp
out
pop
dec
pop
cmp
mov
addr16
jb
jae
rorl
pop
fwait
mov
in
lcall
leave
lods
mov
xchg
and
push
dec
xchg
mov
in
cmp
arpl
cmp
loop
jns
inc
sarl
cmp
push
test
jecxz
or
inc
pop
dec
out
scas
test
sbb
dec
xchg
pop
xor
dec
lods
xchg
stc
movsl
iret
cmp
mov
cmpsb
mov
pop
xor
xchg
push
mov
clc
xchg
cmp
push
pop
repnz
fisubrs
and
cmpb
sbb
pop
in
test
cli
scas
or
cmpsb
stc
or
push
dec
add
pusha
movsl
mov
and
rcll
cmpsb
outsl
nop
mov
push
sbb
inc
out
sub
xchg
lea
imul
les
test
push
nop
out
scas
es
dec
fsubl
das
int3
mov
fstpt
xchg
enter
lret
mov
out
insb
mov
orl
in
lea
rcr
jo
xor
popa
test
cmp
data16
add
pop
dec
cmp
and
jne
loope
outsb
fucomi
sub
jp
xor
xchg
repz
popa
push
out
iret
rep
inc
dec
xchg
rep
dec
sbb
ss
std
adc
test
xchg
es
add
or
mov
imul
jl
repz
sti
fdivr
sbb
pop
lds
xlat
dec
jle
sub
mov
jne
sub
adc
pop
add
in
mov
xchg
mov
or
int
push
mov
adc
xor
pop
test
lds
inc
and
cwtl
xchg
cmp
mov
test
dec
add
cmp
jge
fisubs
fimull
addr16
icebp
cmp
daa
cwtl
jae
std
imul
iret
pop
mov
adc
roll
mov
and
lds
mov
imul
aad
mov
xor
shl
jo
iret
jno
xor
sbb
and
cwtl
mov
jno
xchg
arpl
dec
mov
mov
inc
in
pop
scas
outsb
jge
xchg
xor
and
or
sbb
aaa
sar
js
push
test
fidivrl
xchg
fldl
xor
fiaddl
mov
imul
adc
rcll
int
test
xchg
mov
sahf
fstpl
fiaddl
sub
adc
and
mov
mov
xor
dec
mov
cmp
inc
xchg
ljmp
jg
cmp
out
inc
jne
pop
sub
mov
imul
enter
sbb
cmpsb
ret
push
lods
adc
loope
dec
push
subb
pop
inc
xchg
pop
cmpsl
ljmp
stos
jmp
mov
mov
icebp
cmc
jb
fcmovu
into
xchg
cmp
cltd
xchg
or
in
dec
repnz
call
sub
jo
cmp
or
sbb
das
cmp
xor
or
cmpsl
sub
out
inc
pushf
out
cli
adc
xlat
cwtl
push
xchg
movsb
leave
add
sbb
mov
ret
fdivr
or
lods
or
mov
push
loopne
andl
push
fadds
mov
xchg
mov
add
xor
popl
inc
lcall
repz
div
cmc
test
iret
mov
push
pop
mov
dec
ret
sarl
ret
lods
test
cmpsb
xor
cltd
imul
pop
mov
pop
lock
inc
test
xchg
jge
mov
dec
scas
dec
rcrl
mov
cmp
negl
shll
dec
loope
test
adc
adc
mov
jecxz
xor
shll
dec
cld
fldt
add
mov
ja
ss
add
lret
mov
mov
sbb
lret
aam
jg
cmpsb
bound
xchg
scas
jo
push
sti
mov
cmp
dec
push
cmp
push
cmp
inc
pop
jecxz
repz
lahf
cmpsl
mov
sbb
and
xor
lock
mov
fisubl
mul
lret
push
int3
call
mov
int
add
jnp
cmp
lds
out
xchg
in
inc
rclb
std
fldt
sbb
sub
ljmp
ss
adc
cli
nop
xchg
or
jg
pop
mulps
jne
dec
sbb
sub
pushf
mov
xchg
sbb
or
das
ficomps
divb
repnz
sarl
inc
sbb
mov
daa
mov
pushf
mov
lock
arpl
add
neg
dec
mov
add
and
or
pop
adc
pop
mov
imull
add
mov
ficomps
dec
and
fsubs
jg
add
clc
mulb
xchg
fsubrs
dec
faddp
lret
shl
shl
jle
in
mov
cs
jne
sbb
xchg
inc
dec
mov
cmp
bnd
cwtl
dec
xchg
int3
or
mov
mov
sub
and
mov
sahf
call
ja
cltd
repnz
jno
jle
jle
xchg
mov
fsubl
xor
lods
push
loope
mov
mov
mov
add
sbb
pop
mov
enter
daa
in
jl
fcmovu
mov
sub
cmp
enter
jae
mov
pop
adc
pop
xchg
push
fisubrl
mov
xor
aas
call
filds
push
lahf
push
js
enter
ds
int
lods
mov
movsb
xchg
sbb
xchg
test
dec
ljmp
mov
and
add
dec
jp
inc
call
sub
push
mov
fiadds
in
push
pop
cmp
decl
pop
rol
xor
jnp
out
inc
mov
das
jbe
lret
pop
test
data16
xchg
xor
gs
xor
je
aad
js
add
cmp
int3
mov
jecxz
insb
ret
bound
sbb
pop
adc
push
mov
fidivl
cmpsl
mov
inc
fdivrl
or
push
jl
dec
scas
repnz
cmpl
sub
sbb
xchg
push
and
cmc
mov
jnp
call
and
and
mov
mov
mov
jmp
nop
fucomi
cwtl
and
push
xchg
mov
xor
cmpsb
xor
fsubl
movsb
jecxz
push
out
je
mov
in
lret
sub
shrb
cmp
repnz
cmc
pushf
addr16
icebp
daa
mov
mov
insl
and
jae
mov
push
jb
sub
imul
lods
jp
push
andb
sub
data16
sbb
sub
outsb
fwait
mov
jbe
testb
pop
jae
and
fnsave
rorb
sub
mov
add
xchg
mov
nop
push
lds
xor
add
cmpsl
test
dec
mov
sub
lock
mov
push
cmpl
xlat
xchg
jo
xchg
push
stc
inc
hlt
ret
and
dec
icebp
cmpb
inc
jbe
shr
rcrb
lret
movsb
jno
jns
mov
xorb
pushf
and
mov
in
repz
scas
ficoml
inc
xchg
and
cmp
cmpl
outsb
test
scas
into
arpl
mov
cmpb
inc
adc
push
insb
or
mov
add
mov
inc
dec
addr16
out
int3
scas
cmp
pop
jle
es
inc
jb
ss
into
xor
js
cmp
jo
fisttpll
ret
push
notl
cmp
xchg
mov
dec
mov
in
imul
nop
adc
add
test
mov
cmpsl
xchg
clc
add
inc
shll
jg
mov
in
mov
insl
push
mov
pop
data16
mov
xchg
pop
pushf
pop
imul
xor
and
mov
jecxz
and
jle
dec
loop
push
mov
gs
mov
mov
sub
jne
icebp
insl
add
push
icebp
loopne
mov
into
mov
in
out
and
push
movsb
lock
out
mov
jp
in
pop
cmc
pop
xchg
in
sub
inc
rcrl
pop
pop
inc
ds
cli
cmp
lock
sbb
jnp
stc
fsub
repnz
stc
jo
push
loope
mov
inc
test
xchg
ds
clc
fldl
test
in
es
pop
outsl
xor
hlt
out
push
pushf
pushf
popa
or
or
xor
xor
divps
adc
out
sahf
lahf
push
mov
xchg
jp
sub
daa
xor
ret
xchg
cwtl
xchg
jae
fcomp
sbb
sbb
jb
fistpl
mov
push
add
or
int3
addpd
ljmp
pop
scas
mov
xchg
inc
inc
mov
in
mov
call
mov
jns
in
int3
lret
sbb
aas
iret
aad
pop
arpl
or
les
cld
cmc
loope
fwait
ljmp
or
out
ret
add
sbb
push
fcoml
mov
adc
pop
sub
mov
adc
sbb
xlat
dec
inc
cmp
js
out
push
in
cmp
aaa
lcall
iret
dec
sub
jbe
jecxz
mov
dec
mov
leave
out
cmp
mov
jle
adc
pushf
test
inc
ds
mov
pop
mov
sbb
icebp
out
or
push
inc
ljmp
dec
jg
scas
push
loope
out
add
int
imul
fistl
movups
out
test
es
inc
out
jo
lret
dec
push
mov
mov
mov
loopne
push
xchg
das
in
mov
inc
cmpb
les
mov
cli
cld
adc
mov
adc
push
push
cld
and
int3
add
call
and
in
mov
xor
std
mov
rcrl
push
in
add
popa
mov
add
push
mov
cs
xchg
jg
push
js
push
loope
or
fs
aaa
push
test
xchg
or
jmp
or
scas
stc
fwait
cltd
dec
mov
cmc
push
aaa
mov
pop
aam
sbb
jbe
adc
repnz
movsl
xor
lahf
adc
iret
adc
sub
imul
jne
mov
xlat
je
lahf
rorl
cwtl
repz
jg
dec
and
or
push
pop
pushf
cmp
pop
pop
jge
mov
sti
in
stc
mov
std
repz
ja
add
mull
or
loop
xor
pcmpeqd
jecxz
jo
notb
cmc
xlat
call
cmpsb
jbe
pushf
repz
jl
out
movsl
xchg
shrb
add
mov
das
sahf
mov
andb
cmp
mov
pop
repz
mov
jecxz
fildl
iret
jo
movsb
call
pop
gs
ja
insl
aad
push
fwait
jno
push
mov
shl
inc
push
push
push
push
pop
rcl
cmpsb
mov
js
ja
adcl
insl
aad
adc
imul
add
je
mov
adc
pop
imul
mov
adc
add
xor
out
nop
imul
test
or
lcall
add
lods
mov
xchg
popf
inc
int3
mov
adc
cli
push
lods
inc
jg
sahf
rcll
push
and
loopne
pushf
inc
jae
pop
sbb
cmp
xor
lcall
call
xor
aam
and
and
push
xor
sti
inc
cmpsl
mov
mov
pop
add
adc
xor
arpl
mov
shlb
mov
daa
mov
and
aad
sub
insb
leave
adc
push
hlt
fisttps
cmpl
ret
nop
shl
hlt
paddd
lcall
scas
mov
or
sub
aas
subl
adc
pop
cmp
adc
pop
pop
cmp
dec
inc
in
mov
cmpb
inc
mov
imul
add
mov
sbbb
jne,pt
sti
lea
jl,pt
mov
in
xchg
push
jmp
leave
xor
lea
sahf
pop
and
mov
pop
sub
dec
jb
sahf
in
and
pop
xlat
mov
xchg
mov
cli
mov
je
add
xchg
jmp
out
rcrl
lock
rcr
cltd
popa
pop
imulb
fstl
lcall
mov
and
dec
out
sub
push
push
add
push
mov
cli
sahf
pusha
jo
dec
cmp
lods
test
xor
push
sub
fstl
call
push
fidivrl
lock
int3
jae
xor
xor
or
dec
ret
or
jbe
xchg
or
into
int
push
in
mov
mov
push
push
ret
sub
xchg
xchg
icebp
or
push
cmp
out
das
add
xor
rcl
lea
shlb
pop
ret
rolb
dec
mov
xchg
mov
xor
lea
movsl
or
daa
cmpsl
cmpsl
sbb
xor
xchg
inc
jno
pop
xchg
mov
sbb
ja
mov
push
and
push
inc
popa
pop
mov
inc
xor
xchg
mov
jl
mov
push
sub
mov
or
push
cmp
lahf
rep
imul
push
adc
dec
cmp
xorb
out
xchg
xor
lret
popf
out
add
leave
cmp
cmpsb
int3
sub
xchg
daa
std
lcall
mov
outsb
push
leave
imul
int3
pop
cwtl
fidivl
int
sub
ficoms
sti
aas
cmp
add
jle
je
and
sahf
gs
mov
aas
add
ds
cmpsl
lock
pop
sbb
in
xchg
jmp
sbb
repz
mov
jl
xchg
jmp
mov
push
mov
mov
xlat
int3
mov
inc
repnz
xchg
push
gs
aad
xchg
or
and
movsb
adc
sarb
bound
sbbb
imul
stos
scas
add
fstpl
lods
cmp
int3
or
test
fiadds
dec
xchg
ds
dec
jle
push
pusha
mov
fwait
lods
jae
xchg
inc
lret
enter
arpl
mov
stos
and
fcompl
cmp
aam
xchg
ret
push
shrb
stc
lods
mov
sub
or
cmpl
sub
add
gs
push
stc
sti
daa
mov
gs
sti
cli
jnp
loope
scas
in
jle
mov
mov
sub
sub
xchg
xchg
loop
jno
fmull
add
lock
dec
sbb
dec
and
aas
sbb
notb
popf
add
push
push
imul
mov
xchg
cmpsb
aad
popa
or
push
dec
stos
push
mov
lds
mov
and
enter
jae
rclb
cld
dec
mov
pop
loop
adc
mov
mov
push
mov
lock
test
mov
pop
xor
jge
xor
jg
ret
mov
insl
or
lahf
xchg
or
mov
fs
mov
jp
inc
dec
pop
test
xor
cmp
xchg
sti
iret
mov
cmpsl
stos
mov
push
pop
js
or
out
mov
out
mov
sub
mov
iret
mov
addl
pop
arpl
adc
pop
arpl
icebp
xor
popf
pop
add
orb
int
clc
inc
in
mov
in
loopne
inc
leave
jno
mov
mov
test
push
mov
int3
sub
negb
icebp
fldt
adc
lods
nop
and
icebp
das
nop
mov
inc
jno
dec
mov
enter
notb
decl
loop
iret
popf
mov
jnp
xor
xchg
pop
sbb
adc
outsl
xchg
xlat
dec
jb
test
adc
insl
stc
es
outsl
pusha
jbe
nop
addb
jo
lods
add
ficompl
mov
lods
xor
ss
xor
jae
pop
arpl
lcall
fwait
scas
mov
dec
std
add
lahf
mov
mov
xchg
in
push
mov
adc
loopne
mov
pop
jns
cmc
loopne
xchg
sarl
outsl
xor
fistps
and
lret
mov
lea
adc
test
jbe
iret
lea
mov
out
out
and
lods
fcomip
dec
ret
pop
divb
sub
cltd
aas
sbb
xor
push
je
lret
add
push
call
inc
movsl
jns
xor
mov
sbb
into
inc
ljmp
add
popa
call
stc
sbb
shrl
fisttpl
push
out
and
sbb
jmp
pop
jae
paddsw
mov
pop
jno
sbb
adc
mov
fdiv
xor
ds
jbe
loopne
popa
mov
int
bound
fisubl
div
xchg
lea
jno
mov
out
cmp
leave
je
push
or
pop
cs
testb
cld
dec
sub
inc
sub
out
sub
push
sub
stc
stc
fstpt
imul
pop
cmp
loope
sti
cltd
out
mov
add
mov
lea
fucomip
fbstp
jnp
cmpsl
lret
std
ss
movl
sbb
adcb
ss
ficoms
mov
ds
inc
add
mov
out
aam
xor
cmp
mov
or
fldl
push
into
jg
idiv
ljmp
push
sbb
jns
adc
push
xor
std
int
dec
push
jle
aaa
sbb
nop
outsb
jecxz
dec
dec
enter
pop
cwtl
lea
inc
outsb
fs
adc
jae
push
shl
out
adc
push
ds
fcmovne
enter
scas
imul
ret
adc
push
push
push
nop
fnstcw
notb
rolb
sub
into
sub
aad
or
jmp
lods
and
dec
xor
cmc
mov
lret
shlb
jmp
stc
std
ljmp
jns
push
xchg
popw
gs
imul
pop
in
insl
xchg
pop
repz
xchg
dec
les
das
adc
inc
pop
xchg
xchg
pusha
mov
fstp
in
ja
lds
cmp
pop
in
sbb
test
add
push
scas
movsl
aam
fisttpll
mov
sbb
sarb
add
cmpsl
inc
mov
mov
cmpsl
mov
jnp
push
push
pop
ss
scas
fwait
nop
mov
cmp
mov
repnz
jecxz
lock
cmpsb
nop
jg
lcall
lods
insl
push
xchg
addb
fwait
dec
push
mov
dec
out
sub
or
call
push
movsl
mov
loopne
lcall
aas
das
in
pop
dec
mov
inc
sbb
rorb
xchg
mov
dec
xchg
into
push
mov
adc
lods
lea
outsl
icebp
pop
pop
in
in
pop
ret
lret
xchg
jno
adc
hlt
pop
and
push
dec
mov
mov
adc
test
imul
ss
sub
mov
adc
pushf
stos
add
pop
popa
jae
push
cwtl
stos
or
inc
out
lea
outsl
inc
dec
push
xor
xchg
mov
jb
sbb
sbb
jno
lret
hlt
pop
push
leave
sbb
dec
cs
lea
outsl
inc
cmp
dec
je
ds
out
lock
xchg
stos
adc
xchg
dec
pop
outsb
sbb
movsl
jmp
xor
mov
pop
jns
cmp
cmpsb
xchg
leave
mov
push
xlat
daa
clc
call
test
cmpl
adc
mov
push
mov
lahf
enter
repz
imul
lcall
dec
or
xlat
rolb
fs
out
pop
or
subl
in
fsts
and
pop
in
icebp
outsl
fidivrs
push
pop
pushf
out
push
or
mov
jnp
mov
in
div
xchg
push
jge
pop
stos
out
gs
mov
lret
jo
js
mov
adc
adc
cltd
call
test
fsubl
data16
test
arpl
lea
sbb
inc
cmp
jg
lea
sarb
outsl
jl
dec
cmpsl
mov
in
dec
jle
ljmp
xor
in
stos
adc
aaa
das
test
sub
aas
clc
in
inc
lret
and
dec
dec
test
jns
mov
jae
cs
mov
lret
xchg
mov
xor
test
aaa
dec
fs
jecxz
and
xchg
das
out
pop
fwait
aam
inc
mov
push
dec
jl
lcall
xchg
lds
dec
cmp
cmp
adc
in
mov
jne
cld
fcoml
or
cmp
sub
popf
data16
mov
ret
mov
repnz
dec
mov
je
or
or
in
in
in
xchg
pop
lret
push
adc
inc
inc
je
lret
mov
sub
aam
push
and
push
int3
icebp
pop
jmp
ss
cmp
mov
out
xchg
dec
stos
add
jge
imul
test
or
push
ds
mov
push
cwtl
add
aad
into
ljmp
push
add
add
inc
aaa
rclb
adc
daa
pusha
and
adc
xchg
xchg
sbb
pop
jle
in
xchg
fdivrs
add
cmp
fsts
xor
sti
adc
sub
mov
pusha
das
out
inc
testb
popl
xchg
mov
daa
xor
cmp
lea
sub
out
popf
fldpi
xchg
jbe
in
xchg
ficoml
xchg
ss
pop
dec
jmp
stos
vdivsd
push
mov
outsb
pop
inc
or
mov
pop
imul
shl
push
daa
xchg
sub
pop
icebp
stc
andb
fstps
mov
loope
mov
push
adc
hlt
imul
cmc
cmp
xor
or
jp
out
mov
iret
jo
push
and
pop
xchg
mov
mov
hlt
ret
jb
mov
fdiv
and
mov
cmp
in
mov
push
test
shl
mov
int
lods
dec
sarb
inc
pushf
pop
xchg
pop
pusha
test
mov
pop
mov
ret
sub
mov
xchg
sti
rcr
lock
out
ret
sub
movsl
add
adc
sbb
pop
rcrb
dec
jnp
mov
mov
lods
sub
mov
or
pop
test
jl
loop
repnz
dec
outsl
mov
or
or
jb
mov
pop
repz
sarl
xor
shrl
push
addr16
icebp
pop
faddp
cmpxchg
ja
jmp
loopne
imul
and
shlb
and
imul
pop
fists
adc
ds
popf
fbstp
negb
add
xchg
or
dec
xor
pushf
inc
lods
out
push
xchg
add
sub
sbb
dec
dec
pop
sbb
sbb
add
cmpsl
jns
iret
add
cmpsl
inc
mov
or
pop
xchg
aam
cwtl
mov
sub
adc
loope
xorb
into
pop
cld
xchg
sub
fisubrs
pushf
addb
cld
xor
pop
std
test
adc
cmpsb
bound
ja
or
pop
pop
stos
add
adc
or
rol
pop
je
ds
cmpb
mov
iret
and
ja
push
push
mov
lds
push
mov
lods
insb
xchg
pop
push
dec
push
in
and
sti
aam
and
test
or
mov
cmp
leave
xchg
icebp
lret
fmull
stos
mov
bound
lds
jae
xchg
movsb
out
fstpl
fwait
cmp
cmpsb
lods
cmc
mov
inc
pop
jo
mov
mov
in
dec
adc
jne
test
or
mov
notl
pop
into
sbb
pop
fldcw
dec
adc
dec
arpl
sub
mov
ret
iret
and
push
push
fmul
adc
fstp
jge
pusha
fwait
add
or
je
jnp
bound
pop
mov
lea
dec
out
in
sbb
push
push
mov
pop
das
mov
insb
jle
cltd
push
inc
aaa
jnp
jnp
and
fcomps
imul
pop
jmp
mov
mov
mov
cltd
icebp
daa
push
cmp
mov
aam
call
adc
add
or
lcall
pushf
dec
inc
xchg
das
xchg
dec
xchg
or
push
adc
inc
cmp
test
ret
xlat
into
dec
xchg
xchg
ret
inc
fisttpll
js
subb
add
fiadds
sub
movsl
sub
lds
adc
fiaddl
jmp
test
push
ficompl
or
push
add
lods
dec
roll
movl
adc
js
shlb
xchg
outsb
cli
push
push
dec
push
movsl
aam
fildll
mov
mov
lds
mov
xor
push
jns
in
mov
and
std
sbb
iret
mov
cld
or
push
repnz
std
and
inc
roll
rcrb
cmp
ljmp
jg
jle
add
testb
dec
cmpsl
push
mov
xor
std
or
mov
xor
fisubl
in
mov
or
jl
fldcw
xor
and
jmp
sub
out
lock
jle
orl
bound
loopne
in
and
out
push
test
jbe
es
pop
or
or
das
dec
sub
mov
test
inc
out
push
pop
dec
std
cs
jo
movsl
inc
es
sbb
dec
into
das
std
inc
mov
pop
sahf
adc
sub
lret
out
icebp
cld
jb
aad
loopne
lcall
cmp
das
xchg
test
sbb
and
out
or
sbb
add
pop
fisubs
mov
movsl
adc
ret
sbb
mov
jmp
inc
cmc
aam
jno
cmpsl
dec
aas
mov
xor
mov
mov
and
cltd
bound
aam
xchg
jmp
xchg
mov
ja
cwtl
hlt
insb
fidivrl
stos
push
lea
shll
mov
insb
pop
lods
out
sub
pushf
cld
pop
jecxz
xchg
mov
fbstp
lods
pop
or
movsb
mov
adc
scas
fsubs
ret
movsb
dec
loope
mov
outsb
xor
xchg
aad
arpl
loope
pop
push
push
rcrb
fs
pop
mov
sar
test
in
dec
push
mov
and
data16
inc
shrl
cltd
aas
jbe
cmp
or
scas
sub
jge
out
push
push
lea
or
nop
xor
mulb
loop
mov
sub
andl
lret
or
sub
stos
xor
shl
mov
cmpsb
repnz
inc
add
lods
cmpsl
xchg
lods
pop
inc
ret
xchg
jae
mov
cld
jp
daa
fwait
sbb
and
jg
sarb
cs
shrb
cmp
xchg
jnp
cltd
or
cmp
gs
jmp
xor
cwtl
or
aad
xor
imul
lret
call
sbb
dec
push
jp
sub
pop
cmp
push
rol
bound
sbb
in
add
shl
fadds
imul
dec
mov
popa
add
aam
mov
jle
inc
lods
enter
push
nop
push
xchg
test
push
cmp
lret
mov
xorl
mov
pusha
jp
jbe
xor
leave
imul
pop
sub
adc
mov
or
mov
bound
xchg
pop
cmp
std
xor
rorb
sbb
inc
sub
fldt
in
out
dec
inc
ljmp
mov
ret
daa
inc
jmp
pop
repz
cmpsl
push
adc
xor
jmp
out
imul
xor
lods
or
js
imul
bound
int3
xor
sub
cmp
lds
outsb
mov
lcall
push
cmp
lock
test
adc
sti
sahf
push
mov
adc
adc
inc
push
icebp
sbb
push
ret
push
dec
mov
popf
inc
jg
scas
scas
xchg
fwait
insl
pop
cwtl
jbe
test
shlb
fldenv
testb
and
test
test
lods
mov
add
jge
jmp
or
nop
push
sysret
mulb
inc
aam
gs
xor
mov
movsb
fcmovne
pop
jp
or
pop
xchg
adc
lods
adc
pop
sub
aad
clc
in
sub
push
ficoms
xchg
xor
pop
pop
mov
pop
lods
mov
sub
jle
and
sbb
andl
jns
cmp
push
add
std
imul
fsubr
ret
sub
imul
stc
and
adc
outsb
inc
popa
push
push
inc
inc
dec
xchg
add
and
sub
sbb
cmp
pop
icebp
mov
sbb
xor
pop
and
movsl
lds
pop
stos
inc
mov
dec
js
mov
or
and
mov
jmp
push
xor
and
enter
fwait
push
pop
addb
jecxz
sbb
push
icebp
mov
push
daa
sbb
sbb
sub
data16
xchg
mov
ficoms
or
pop
nop
dec
into
inc
arpl
in
leave
sub
push
xchg
insb
xchg
fwait
adc
pop
jmp
fwait
into
sub
mov
adc
cmp
jb
testl
xchg
loope
xor
in
in
arpl
mov
icebp
xchg
cwtl
xchg
add
sahf
jbe
sbb
aad
jge
xchg
mov
inc
loopne
push
lea
xchg
cmp
jmp
sbb
cmp
ljmp
dec
ret
sub
dec
xor
adc
jb
lahf
lret
cmp
fldenv
sbb
push
lods
mov
fldt
and
les
lock
push
bound
push
hlt
sbb
das
adc
rcll
cld
xchg
stos
addr16
xchg
jo
repz
clc
sbb
popa
mov
cltd
ret
fcoml
aam
scas
cmp
ds
mov
fwait
repnz
dec
sub
sbb
sbb
xchg
test
mov
aam
mov
xor
roll
mov
imul
int3
jno
sahf
in
mov
xchg
pop
or
cld
cs
subb
xor
pop
or
inc
lret
xor
adc
jnp
mov
push
mov
and
repnz
int3
adc
push
or
into
nop
xlat
pop
pop
pushf
aaa
sub
pop
xor
jae
roll
sub
imul
jnp
int
insb
adc
mov
in
and
push
jecxz
xor
sti
push
clc
add
test
xchg
mov
xchg
add
pop
fisttpl
inc
push
popa
negb
sbb
adc
std
xchg
insl
pop
js
lock
inc
in
in
fs
and
inc
mov
adc
pop
jb
pushl
jno
cltd
inc
adc
or
test
jb
jo
xor
dec
ret
arpl
mov
adc
popa
xor
lods
loopne
sbb
adc
pop
int3
jle
sub
push
push
sbb
jmp
fadds
or
shrl
mov
lods
cs
movsl
push
test
sub
testl
clc
and
stos
ret
js
fisttpl
push
mov
cmp
icebp
or
in
mov
cmp
lock
dec
repnz
or
jne
aad
dec
mov
andl
and
xor
jo
mov
sbb
mov
lahf
jno
iret
pop
and
outsb
pop
loopne
fcmovu
fsubl
loope
cs
jp
cmp
push
inc
stc
add
lret
add
in
inc
mov
xchg
jecxz
pop
mov
test
mov
cltd
pushf
xor
cmp
sub
clc
scas
or
iret
xor
cmp
scas
push
stos
ljmp
mov
scas
aam
cmp
movsl
das
insb
and
scas
test
fwait
clc
cltd
icebp
rorl
test
repnz
pushf
mov
dec
mov
pop
cld
push
mov
stos
xchg
gs
into
adcb
sub
jno
sbb
mov
outsl
adc
push
ss
imul
aam
sub
ja
sbb
sti
adc
dec
aas
jae
pop
jae
adc
sub
cmp
pop
add
test
cld
cltd
notl
imul
and
adc
je
jno
pop
fstpt
pop
sub
adc
inc
mov
or
insb
mov
fstp
push
clc
push
push
nop
jl
shrl
push
cmpsl
mov
fs
xchg
jae
mov
cmpsb
iret
xchg
add
mov
inc
iret
lods
cmpb
mov
jecxz
mov
sub
adc
or
inc
sub
add
adc
mov
aad
dec
mov
cmp
bound
inc
or
push
jbe
dec
or
enter
data16
or
xchg
fcmovne
pop
jae
int
iret
mov
cmp
push
data16
aam
sub
xchg
es
jb
sub
cmp
xchg
cmpsl
mov
mov
das
or
les
aam
mov
cmpsb
loope
es
and
lods
mov
outsb
mov
test
in
call
xor
xlat
or
fstps
lea
xlat
jne
andl
push
mov
xchg
pop
jo
cmpsl
xchg
xchg
mov
adc
rorl
dec
aam
hlt
js
ret
orl
jo
lahf
pop
push
jle
insb
icebp
popw
adc
aam
add
mov
jns
cld
test
ret
xor
lods
cmp
insb
mov
jns
fnstcw
pusha
fcom
je
mov
in
sub
les
push
and
push
pop
adc
imulb
add
pop
in
aaa
push
pop
subl
in
aaa
cld
and
sahf
lock
ljmp
push
mov
mov
insl
dec
das
mov
jno
jecxz
xor
mov
int3
test
fadds
iret
sbb
adcl
jb
cmpsl
xlat
test
xor
push
adc
clc
imul
scas
nop
or
lods
in
sub
mov
lods
mov
data16
push
fimull
xchg
shr
push
and
fsubs
clc
mov
inc
jno
arpl
pushf
push
subb
dec
repnz
inc
fnsave
dec
mov
pop
jns
mov
jno
mov
roll
fisttpl
mov
dec
mov
fistpl
mov
enter
loope
xor
nop
cmp
lods
or
push
lret
jmp
ljmp
sub
xchg
in
cmp
scas
add
out
push
xorl
es
outsl
loope
out
dec
ret
bound
adc
dec
js
aaa
iret
aam
ffree
mov
jb
pop
mov
mov
sub
mov
and
push
sti
mov
inc
in
xchg
adc
xchg
lds
das
cmp
addl
push
arpl
xlat
cmp
mov
mov
push
aas
or
das
jb
out
dec
popa
pop
adc
enter
sbb
mov
insb
cmp
aam
lods
and
es
mov
or
sub
fs
mov
cs
cmc
pushf
adc
insb
mull
ja
jg
dec
popf
test
std
mov
nop
lcall
movsb
xchg
add
push
outsl
jae
xchg
add
cs
cmp
mov
mov
push
inc
mov
mov
mov
dec
adc
repz
xlat
add
inc
mov
shrl
rclb
push
jge
bound
pushaw
mov
into
out
pop
js
mov
loope
xchg
jae
rorb
mov
or
or
mov
call
shll
in
inc
sub
jno
mov
or
jns
mov
dec
cmp
cmp
lds
stos
inc
fwait
jmp
or
dec
gs
arpl
jae
leave
sub
jg
mov
or
pop
cltd
data16
cmpsb
push
ds
pop
dec
and
ret
stos
cld
loopne
ret
ds
outsb
shlb
mov
jl
shr
lods
sbb
or
sahf
in
mov
xor
repnz
negb
adc
adc
bound
mov
cmpl
std
jns
in
xchg
xorl
pusha
pop
mov
shrb
push
iret
mov
jno
pop
sbb
pop
in
hlt
call
jns
adc
add
add
add
mov
pushf
ret
add
pusha
sbb
cmp
mov
jp
dec
in
and
fdivrp
push
out
push
push
adc
shlb
xchg
inc
cmpsl
insb
sbb
enter
pop
jae
push
cmpsb
inc
pop
sub
aam
xor
push
test
cld
adc
jg
pusha
cmp
adc
lods
imul
idivb
repnz
pop
mov
mov
loopne
adc
sub
fisubs
xor
imul
xor
mov
sti
lret
scas
xchg
stos
xor
adc
sub
enter
inc
jno
mov
hlt
pop
arpl
mov
ja
push
mov
gs
imul
add
add
add
das
adc
jo
add
dec
test
dec
insl
sub
loopne
loopne
jns
mov
fsubl
xchg
adc
lods
dec
jo
mov
or
jb
int3
test
hlt
cmp
outsb
mulb
mov
or
xchg
mov
mov
das
and
std
nop
fstpl
xchg
icebp
cltd
jl
mov
mov
jp
sub
pop
shl
stos
fwait
out
jbe
adc
je
clc
cld
cmp
mov
daa
mov
repnz
and
pop
push
ret
inc
xor
push
or
xchg
dec
in
fcmovne
stos
and
out
pop
cmp
xor
fs
dec
xchg
jmp
aas
sbb
gs
adc
imul
iret
or
and
in
cltd
lcall
sub
std
stc
rcl
cli
fildl
mov
and
cmpsb
sub
push
pop
fdivl
fucompp
sub
arpl
icebp
cmp
cmp
sbb
cs
mov
ljmp
repz
imul
stos
xor
push
enter
jbe
enter
movsb
pop
xchg
mov
jo
arpl
imul
and
es
leave
popl
into
push
sbb
xchg
mov
adc
scas
and
inc
addr16
pop
popa
inc
bnd
clc
xor
stos
repz
es
shl
loopne
adc
fstpl
lret
repnz
into
repz
and
mov
stos
outsb
and
dec
std
mov
push
pop
push
lock
push
jbe
call
xor
dec
loopne
lea
pop
lock
mov
loope
test
fsubrl
jbe
loop
adc
aam
jnp
push
divl
adc
mov
dec
xor
mov
rorl
cmpsb
cmp
push
lock
adc
and
adc
cmc
and
mov
dec
dec
mov
xor
add
test
mov
sbb
out
outsl
loope
mov
add
add
enter
scas
mov
jns
ja
inc
daa
mul
jno
fadds
mov
cmp
push
mov
call
test
gs
mov
cld
pusha
xor
mov
mov
icebp
inc
jecxz
inc
outsl
mov
adc
out
sub
sbb
jle
mov
jb
ret
stos
add
test
cmp
xchg
rcrl
mov
in
ja
pop
push
mov
dec
fsubrl
arpl
aam
jge
jmp
cmp
mov
xchg
mov
pop
dec
mov
mov
jnp
inc
mov
out
lret
push
cmpl
je
inc
ret
or
mov
xor
sub
xchg
frstor
add
add
ret
mov
je
pop
and
out
xor
xor
pushf
xor
or
in
shlb
or
mov
cld
dec
cmp
pop
clc
inc
in
push
or
or
and
popf
imul
das
insl
jg
cmp
out
cmp
jns
in
jbe
int
ret
aam
lea
fs
push
fimuls
dec
xchg
shl
mov
push
cmp
inc
sahf
push
jo
mov
and
insb
dec
xchg
lret
repz
rcrb
faddp
jle
data16
jne
mov
mov
lahf
out
inc
in
adc
roll
inc
mov
std
das
sbb
in
mov
sbb
es
jnp
sbb
mov
daa
push
push
in
lock
jle
inc
sub
repz
and
dec
dec
inc
loope
xchg
and
adc
push
ret
push
test
push
push
jnp
insl
into
lcall
push
ret
iret
lock
push
sbb
mulb
push
add
push
or
jae
mov
jno
popf
xor
out
cld
jmp
and
fwait
xchg
fistpll
cmp
xchg
testb
imul
adc
cld
lret
imul
or
cli
pop
ror
loope
fildl
push
dec
xor
lods
scas
ljmp
sti
int3
daa
and
out
int
sti
sub
jmp
shr
sbb
popl
jae
pop
jo
jge
outsb
mov
stc
into
bound
clc
addr16
push
push
pop
cs
adc
mov
loopne
cs
add
cltd
mov
hlt
pop
cmp
push
jb
and
mov
dec
lods
pop
mov
mov
inc
std
popf
outsl
push
dec
cmp
xor
and
push
mov
inc
jle
lods
call
xor
bound
lahf
dec
mov
fsubs
add
jp
mov
fwait
add
dec
sbb
jmp
aas
movsb
xor
scas
adc
pop
lahf
push
and
mov
in
add
pop
add
ss
mov
cld
stos
mov
jne
aam
icebp
shl
aad
xchg
scas
shlb
std
inc
daa
dec
mov
add
js
mov
test
insl
dec
cld
fisttpll
lret
jmp
repnz
xor
cs
sti
sbb
ds
stos
in
ss
mov
push
sarl
jo
dec
xchg
push
mov
adcl
or
push
inc
dec
xchg
sub
popf
bts
loop
mov
xchg
jg
mov
daa
push
xchg
mov
xchg
dec
cmp
cmc
jl
xor
mov
data16
in
lods
icebp
rolb
xchg
push
sbb
pop
jge
cmpsb
pop
xchg
mov
mov
movsb
mov
add
rorb
in
leave
and
and
adc
jns
jle
xor
or
sub
or
orl
sbb
clc
pop
cwtl
xchg
jmp
pop
push
int3
out
push
push
dec
jne
mov
or
fmuls
push
cmp
out
fmull
pop
cmc
lods
adc
jmp
inc
sub
mov
mov
mov
mov
icebp
repnz
adc
xchg
xor
pop
or
xchg
stc
rclb
arpl
sti
and
je
jl
mov
mov
xchg
push
xor
je
lock
in
mov
mov
shlb
and
test
or
and
iret
mov
lock
xchg
jbe
fs
cmp
add
sti
lods
sbb
mov
cmpl
cmc
adc
out
ljmp
iret
out
sub
test
stos
xor
mov
pop
aad
xchg
hlt
adc
jl
pop
xchg
mov
mov
call
jle
fstl
fildl
daa
je
into
and
sbb
popa
loop
fs
mov
or
imul
in
nop
mov
xor
sarb
and
push
adc
cmpsl
add
hlt
jmp
nop
or
imul
pop
xchg
ret
adc
pop
mov
jno
push
push
sbb
test
sub
cmp
mov
inc
data16
ljmp
mov
bound
lahf
adc
and
les
push
rcr
cwtl
aad
out
negl
arpl
and
std
dec
lds
das
movsl
xor
and
or
and
not
mov
mov
sahf
and
roll
in
cmpsb
sbb
cmp
pop
in
mov
shl
lea
imul
out
popf
mov
sbb
xchg
and
jle
push
ljmp
jbe
insb
xor
aas
cmp
lock
js
add
cmp
pop
fimuls
pop
fmul
lcall
jo
movsb
pop
pop
mov
fdivl
aas
into
movsb
test
and
or
xchg
mov
repnz
mov
pop
aas
or
xorb
idivb
std
cmpsl
arpl
fdivs
in
test
mov
xor
int3
push
pop
stos
dec
mov
int3
out
cmpsb
xor
es
nop
das
mov
leave
xchg
jnp
jo
and
sbb
sbb
cld
scas
out
xor
mov
outsl
hlt
xchg
xchg
adc
aam
mov
xor
push
dec
dec
mov
cmp
pop
and
lcall
mov
adc
sbb
mov
inc
xchg
dec
xor
and
adcb
inc
or
xlat
add
inc
push
add
or
mov
ljmp
data16
xchg
mov
pop
sbb
pop
mov
lret
cmc
add
jle
xchg
mov
mov
cwtl
push
or
call
mov
sbb
dec
mov
and
ficomps
pop
aad
inc
push
inc
xchg
or
lods
mov
jmp
push
or
test
clc
jg
sbb
jae
and
xor
mov
mov
test
xchg
and
mov
push
sub
fsubl
scas
push
mov
adc
aas
pop
imul
repz
enter
dec
xchg
rol
aas
pop
sub
and
jle
rcll
daa
inc
xchg
push
sti
js
cld
aaa
inc
cmp
inc
mov
lea
xor
repnz
xchg
iret
jb
jae
and
scas
fildl
daa
daa
xchg
push
outsl
cmp
jmp
dec
fcomi
sahf
movsb
mov
test
jp
jg
cmpsb
call
pop
clc
jl
mov
or
cmpsl
loopne
xor
add
scas
enter
aam
in
in
push
scas
jmp
or
xchg
or
data16
loop
add
xchg
orb
movsb
iret
lods
mov
push
stos
mov
repnz
pop
out
daa
jb
mov
mov
leave
fcomip
pop
xor
arpl
out
sti
xor
popa
push
out
lcall
mov
cltd
loop
test
jmp
rol
clc
out
mov
mov
movsb
lods
sub
dec
xor
iret
sbb
cmp
cwtl
sets
push
sub
pop
sar
rorl
vshufpd
xchg
movsl
adc
out
inc
dec
inc
fmuls
or
int
cmp
push
mov
jbe
repnz
repz
mov
adc
cmp
je
add
ficompl
movsb
dec
test
movsb
loope
aad
jl
popa
cmp
add
les
adc
or
jns
mov
dec
inc
sbb
ret
call
mov
fadds
cmpsl
loopne
mov
popf
push
add
lcall
les
pushf
fwait
inc
xor
xchg
ss
in
outsl
mov
mov
xor
test
bound
mov
and
add
cmp
inc
jmp
arpl
pusha
jae
icebp
popf
fidivs
mov
xchg
cld
out
mov
add
jbe
and
into
pop
cs
rcll
int
decb
outsl
mov
adc
cmp
outsl
idivl
jne
sub
inc
popf
pop
and
sbbb
jmp
repz
pop
jno
stos
je
test
sub
gs
cmp
scas
enter
inc
sbb
cmp
pop
cmpsb
pop
jae
sahf
into
sub
or
test
xor
mov
fsub
inc
add
dec
mov
inc
mov
mov
lea
sbb
mov
jbe
sbb
cld
jne
jg
cli
in
frstor
jg
mov
push
stos
sbb
or
lret
sbb
mov
xchg
xlat
in
sbb
mov
add
fcoms
mov
out
mov
jle
dec
inc
and
mov
sub
adc
jg
add
aaa
dec
jbe
sub
ret
outsb
mov
sbb
int3
std
shll
in
add
jecxz
xchg
push
cwtl
xchg
push
xor
sub
cmpb
int
adc
xor
arpl
mov
loop
arpl
outsb
adcl
idivb
hlt
jb
mov
test
cs
faddl
outsl
lock
lret
and
mov
push
add
xchg
fbld
adc
sbb
in
loop
enter
push
pop
adcl
pop
jbe
daa
push
ficomps
mov
xor
cs
out
orb
jge
push
out
and
lahf
daa
push
cwtl
cmp
xchg
push
lahf
idiv
cltd
cmpb
adc
pop
insl
pop
mov
cmp
daa
ss
xchg
or
nop
xchg
pop
popf
dec
dec
add
jp
xorb
mov
xchg
xor
jl
pop
jmp
ret
pop
popa
sahf
mov
loopne
std
loop
sbb
xchg
sub
pop
cld
data16
icebp
inc
cmp
pop
negb
in
fadds
sbb
cmp
pop
push
jge
or
mov
out
jbe
adc
out
arpl
cmp
cs
test
ret
xchg
pop
ds
mov
and
xlat
dec
push
mov
mov
in
data16
mov
je
mov
shrb
pop
mov
push
loope
mov
inc
push
xor
call
gs
mov
xor
ficoms
dec
fldcw
out
lock
push
aad
sbb
mov
faddl
pop
xor
in
push
jp
pop
lods
ljmp
jbe
fwait
and
fsubs
adc
test
mov
in
and
in
rclb
push
addb
jmp
xchg
pushf
repnz
sbbl
inc
cld
lods
fimuls
out
faddl
push
imulb
fidivl
test
movsb
cmc
lahf
inc
cmpsb
outsl
cmp
inc
xchg
out
mov
scas
push
add
adc
mov
mov
pop
test
mov
mov
sbb
mov
and
filds
movsbl
pushf
push
lds
jl
insl
aas
xchg
das
mov
lret
dec
roll
fwait
repz
push
cmp
iret
mulb
cmp
add
mov
enter
sub
xor
xor
into
int3
lods
inc
add
ja
shlb
ret
pop
subl
or
add
lock
dec
popa
sahf
push
aad
adc
adc
or
jg
mov
mov
cltd
sub
les
sub
xchg
rol
or
xchg
fsubp
mov
imul
mov
scas
int3
jg
inc
pinsrw
jns
add
add
shl
jns
push
cs
mov
dec
mov
mov
mov
dec
lods
push
stos
jno
adc
or
ljmp
mov
push
push
and
in
mov
sub
xor
dec
push
jb
pop
jne
ret
mov
xchg
jg
mov
iret
xor
ds
fisubrs
in
jle
sbb
lock
mov
aam
sbb
inc
idivb
jmp
sbb
mov
loopne
test
cld
mov
lods
roll
int3
jg
jecxz
inc
add
pop
out
xchg
ljmp
sti
popa
inc
cmpsl
and
jae
push
jo
push
loope
int3
ret
fs
int
stos
mov
dec
and
in
loopne
jne
cld
lock
xchg
mov
cli
clc
pop
push
repnz
push
jae
add
jmp
aas
pop
add
xchg
sbb
mov
adc
xchg
fst
cmpsl
imul
insl
inc
rcl
andl
scas
cmc
mov
cltd
addr16
sahf
xchg
xchg
scas
push
jnp
hlt
stos
mov
pop
pusha
push
xlat
nop
insb
xor
movsb
mov
bound
xchg
jecxz
fwait
cltd
loopne
stc
jp
ror
pop
lret
jecxz
cld
and
adc
mov
shrb
jno
inc
mov
push
and
loop
push
stc
sub
das
insb
adc
inc
ret
clc
pop
mov
pop
sahf
jno
cs
clc
addl
mov
jl
aam
or
loop
in
orb
dec
mov
hlt
or
push
jb
xchg
hlt
ror
xchg
xor
stos
das
ret
aad
out
sbb
scas
jae
es
pop
ret
sub
mov
adc
outsb
jnp
aam
sbb
pop
jo
popa
pusha
push
jae
sbbl
sub
aaa
inc
rcrb
mov
mov
insb
xchg
jg
test
sbb
mov
ds
rolb
shll
and
lds
stc
xchg
popf
aam
xor
jb
mov
aas
adc
add
aas
sub
lret
xchg
stos
mov
push
inc
shr
gs
sarl
fdivrs
mov
movhlps
jp
aad
sub
jmp
cli
mov
js
ja
mov
push
repnz
cmp
sbb
mov
ljmp
fisubrs
stos
mov
mov
inc
jmp
int3
stc
enter
push
push
rcll
add
jne
mov
cwtl
xor
mov
push
mov
orl
or
in
sbb
add
sub
jne
or
sub
jmp
and
popa
or
or
cmpsb
lahf
dec
lock
mov
sub
movsb
fisubrl
loope
add
push
sbb
mov
pop
push
pop
jo
dec
enter
scas
aam
stos
fsubs
or
adc
stc
popa
cwtl
sbb
outsb
lds
jl
icebp
cltd
sbb
xchg
psllw
lds
mov
dec
pop
push
cwtl
lock
cltd
repnz
lahf
cs
aam
sub
mov
repz
ss
es
pop
jb
cld
hlt
push
adc
outsb
or
jo
inc
cmp
iret
divb
mov
inc
cmpsl
cld
inc
mov
clc
cld
sub
and
xor
enter
sbb
lods
lret
pop
lret
push
adc
loop
jge
ret
mov
pushf
xor
icebp
popf
cmpsb
inc
mov
and
and
inc
cmp
test
xchg
ja
loop
stos
pop
fldenv
lods
pop
sub
add
mov
mov
ja
or
mov
data16
inc
dec
jno
xor
adc
adc
out
inc
stc
cmp
mov
adc
or
rclb
cmp
insl
push
push
push
les
add
add
inc
mov
das
push
in
fwait
gs
mov
dec
pushl
aas
aaa
jecxz
pop
enter
ja
xchg
push
dec
pop
cli
bound
lds
test
and
cmp
cmpl
xchg
sbb
jge
jmp
lcall
insl
lods
cmp
orl
dec
sub
jle
imul
xor
pop
and
push
sub
push
inc
push
daa
out
std
lods
bound
mov
loopne
or
mov
ljmp
push
stos
pop
jns
sub
mov
hlt
lcall
sub
pop
popa
lcall
xchg
jno
mov
and
in
jne
mov
dec
fwait
jns
jl
cmpsb
dec
mov
sbb
xor
fsubl
or
sbb
mov
pop
sti
fwait
addr16
fwait
sub
out
xchg
adc
mov
mov
pop
sahf
insb
pop
in
addb
ss
hlt
pushf
push
xchg
jbe
mov
cmp
rorb
mov
lods
push
fs
mov
sbb
iret
imull
sarb
mov
pop
sarl
push
test
mov
xchg
mov
or
ret
js
lock
out
pop
cmc
pusha
sub
mov
jg
jb
out
pushf
aaa
push
push
xor
bound
push
jne
and
adc
mov
or
arpl
mov
dec
inc
je
push
sbb
int3
pusha
lret
xchg
loope
and
cmp
imul
cld
pop
mov
cmp
lret
and
sbb
push
jmp
inc
mov
sbb
out
ljmp
stc
daa
mov
arpl
fidivl
sbb
xor
out
and
dec
ret
dec
loopne
cltd
arpl
fwait
pop
and
adcl
testl
aad
xor
xchg
sbb
std
or
add
xor
jle
mov
lock
cld
or
fimull
mov
or
fstpl
add
xchg
lea
ret
xchg
xlat
rcrl
addb
sub
xchg
aam
push
cmp
les
arpl
rcl
frstor
clc
out
mov
adc
cltd
stos
push
jge
ss
aad
shrb
push
jae
dec
or
gs
mov
in
outsb
pop
in
stos
stos
inc
inc
pop
dec
cmp
inc
in
jbe
push
pop
stos
xchg
int3
add
push
push
push
xor
mov
call
shrl
lret
out
mov
repnz
mov
ret
data16
push
cld
xchg
lcall
mov
out
mov
fs
inc
icebp
fnstsw
push
and
addr16
inc
or
jno
mov
daa
mov
ret
stos
push
jnp
int3
lret
adc
pop
or
loopne
call
sub
push
cmp
and
aad
adc
xor
data16
and
cltd
aaa
pop
mov
cmp
in
inc
lds
add
mov
inc
xchg
jle
mov
mov
pop
fisttpll
stc
pop
inc
xchg
push
pop
or
inc
addr16
and
stos
sub
jno
sub
or
and
scas
mov
sbb
je
dec
push
pop
in
in
test
lock
fisubl
into
jo
inc
out
sub
loopne
add
mov
push
pop
add
call
aam
dec
mov
idivl
xchg
cmp
dec
pop
jnp
or
mov
cmp
pop
pop
int
mov
pop
pop
adc
repz
mov
test
mov
iret
mov
inc
jg
movsb
adc
cmp
rcrl
jns
iret
jns
sbb
jmp
aam
jg
int
test
data16
xor
mov
gs
fidivs
mov
pop
lret
jecxz
cmp
sbb
and
dec
xchg
daa
or
push
cmpsl
das
lock
icebp
rolb
insb
loop
cmc
rorb
push
sar
push
addr16
cld
icebp
add
lods
mov
jg
inc
pushf
aad
pop
mov
ss
inc
daa
mov
lea
adc
push
pop
cmp
xchg
add
movl
cmp
rcr
pusha
int3
xchg
inc
sub
lock
shlb
jg
lods
mov
orb
lods
js
or
int
leave
movsl
call
pop
fwait
cmp
aaa
xchg
mov
imul
ficomps
cli
push
repnz
pop
rcrb
sbb
cmp
xchg
cmc
push
push
jno
adc
iret
fcomi
pusha
xor
cltd
pop
in
mov
jmp
sbb
sub
cmpsb
imul
leave
sahf
xor
fstpt
jb
xor
js
cmp
inc
mov
xor
loopne
add
push
dec
dec
in
mov
sbb
test
push
xor
dec
and
testb
les
add
add
jae
pop
jns
lock
out
xchg
test
jle
sub
in
xor
sub
sbb
sub
or
out
bound
or
imul
pop
test
add
or
in
jo
mov
mov
pop
xor
sbb
cmpsl
sbb
sbb
jp
into
outsb
js
mov
arpl
out
xlat
in
test
inc
xchg
dec
inc
daa
test
outsl
movsl
fiadds
adc
and
fisubrl
jmp
mov
shlb
idivl
jo
add
pop
push
shlb
loopne
pop
adc
in
mov
daa
fstpl
es
or
out
stos
xchg
call
push
test
xchg
add
cmp
mov
xchg
jg
sahf
pusha
js
cltd
xchg
jmp
push
icebp
test
mov
lods
lret
iret
mov
cmpsb
test
xchg
into
mov
filds
or
test
push
cwtl
out
cmp
push
pop
xor
inc
shrd
add
dec
and
cmp
insl
movsb
movsl
mov
and
push
fsubrl
insl
icebp
push
cmp
mov
mov
andb
add
dec
aas
stos
mov
sub
dec
adc
xor
cltd
or
push
jle
daa
xlat
pop
mov
mov
xchg
mul
fistps
push
push
cmpsl
mov
jo
repz
dec
sub
loop
mov
loope
out
add
insb
and
xor
lret
jnp
push
ds
lcall
int
ds
adc
push
xchg
pop
mov
jo
enter
add
int3
sbb
jge
rcrl
mov
pop
popa
xchg
je
arpl
mov
loopne
ja
data16
jns
nop
adc
xor
ret
jp
pusha
adc
addr16
stc
pop
cld
cltd
rcrl
movsb
sub
adc
call
out
xchg
mov
out
inc
mov
pushf
decl
adc
xor
add
add
sub
dec
or
pcmpeqb
jns
icebp
ss
sub
negb
push
push
stos
sbb
pop
and
sub
nop
lret
inc
ljmp
ja
stos
dec
popf
filds
scas
int
mov
rclb
push
fldcw
imul
xor
and
popa
jne
cmp
mov
ret
iret
adc
sbb
in
hlt
xchg
arpl
xchg
sbb
icebp
pop
fwait
push
add
call
rcrb
pop
aad
and
shll
pop
cli
ds
push
sbb
push
or
inc
adc
lret
lea
rclb
mov
test
or
fsubs
pop
fildll
mov
inc
mov
aaa
scas
xor
in
pop
fdivrl
xor
push
sarb
test
test
mov
lahf
ret
jno
sub
js
jmp
xor
divb
add
xchg
add
push
or
cmpb
jae
call
int3
add
aas
jno
and
ret
orb
insl
and
sbb
dec
sub
mov
add
and
mov
and
sbb
addl
into
cmp
xchg
and
mov
nop
nop
xorl
jge
xorb
adc
cmp
jle
push
out
dec
inc
filds
sbb
mov
popa
add
xlat
xor
andb
repnz
xchg
test
or
arpl
push
jb
mov
and
popf
das
test
fnsave
sbb
or
mov
fcoms
or
lods
faddp
push
leave
jo
push
punpckhwd
popf
adc
das
fwait
inc
mov
in
dec
jo
add
mov
inc
jp
stos
dec
unpckhps
xor
lds
dec
cmp
sbb
mov
or
inc
lock
dec
xchg
xchg
adc
and
pop
ja
repnz
dec
sbb
addr16
xor
je
or
lods
cmp
sbb
mov
addw
aad
pop
cmp
mov
cli
jp
insb
cmpsb
cmp
hlt
adc
jl
push
lock
fwait
dec
fmuls
fnstenv
dec
rcll
fsub
add
repnz
jne
mov
mov
shrl
movsl
insb
push
into
imul
push
cld
jbe
lahf
fstpt
cwtl
xorl
std
test
xorl
shlb
mov
mov
jl
inc
out
movsl
rcr
fadds
jge
shl
pop
pop
mov
or
mov
pop
cmpb
cmp
repnz
sbb
test
pop
lcall
push
xor
les
jle
fnstsw
jb
stos
scas
ljmp
push
xor
sbb
mov
xchg
inc
ret
outsb
mov
mov
xchg
icebp
gs
in
push
outsl
jecxz
mov
dec
fcomps
shll
jecxz
loopne
repz
xchg
xchg
push
xchg
cmp
lret
out
pop
pushf
and
inc
push
xor
mov
loop
sub
cwtl
test
pop
push
dec
mov
xchg
jbe
mov
hlt
jge
mov
pushl
jl
sub
inc
jl
out
push
cs
add
aam
adc
jae
in
ficoml
or
aam
push
cwtl
in
push
mov
or
scas
lret
adc
ss
retw
xor
pop
push
jae
into
incb
xchg
lock
fnstenv
xchg
sub
rcll
popa
cmpsl
popa
or
call
iret
jmp
jp
mov
pusha
mov
xor
sbb
cmp
xor
xor
xchg
mov
insl
jmp
mov
jg
or
aaa
cmp
add
xchg
pop
xor
dec
mov
lret
sbb
xor
test
sbb
xor
call
dec
inc
and
cwtl
in
loope
out
inc
out
fwait
dec
test
push
cmp
pop
push
js
push
pop
je
sbb
adc
rolb
fucomp
push
xchg
xchg
nop
out
punpcklbw
scas
arpl
mov
cltd
xor
test
pop
fcos
data16
jo
cmp
imull
and
dec
xor
lock
dec
or
jae
sbbl
push
jecxz
call
enter
stos
xor
pop
mov
adc
pop
mov
movd
dec
adcb
mov
das
mov
inc
lea
xchg
cmc
lods
xchg
mov
dec
push
xchg
movsl
cltd
jle
dec
pop
sub
das
data16
mov
add
es
push
xchg
pushf
dec
insb
sbb
mov
push
lret
xchg
sti
test
inc
mov
rorl
cwtl
pop
iret
sbb
jb
mov
in
cmp
cwtl
adcw
mov
inc
jg
ret
cltd
iret
aas
lahf
push
repz
cmp
cmp
or
fidivs
iret
stos
mov
pop
push
push
xor
in
stc
sbb
les
fisubrs
jbe
mov
or
push
out
adc
push
fidivrs
popf
xchg
mov
xor
xor
jbe
fistps
inc
mov
inc
dec
mov
addr16
add
dec
aad
mov
fcomps
out
cmp
lahf
xor
jmp
add
inc
inc
clc
mov
or
jae
repz
stos
mov
sti
add
jl
std
jnp
shrb
daa
cmp
fbstp
xchg
pop
inc
cmp
push
idivl
js
mov
fwait
push
push
cmpsl
out
leave
pusha
sbb
cmpsl
sub
adc
jae
je
xchg
cmp
fnstsw
repz
xchg
icebp
cli
pop
cmpsb
inc
scas
push
ret
pop
subl
sbb
mov
lcall
pushf
xlat
cltd
push
ret
data16
cld
lds
cmpsb
lcall
push
lahf
out
pop
mov
jl
xor
mov
cmp
mov
dec
popl
mov
in
mov
inc
push
in
popf
sub
and
push
jae
scas
ficomps
mov
imul
orb
jle
xor
scas
and
xchg
mov
aas
push
jo
ja
mov
repz
and
cmp
dec
lahf
test
repnz
test
jno
fldenv
xchg
push
mov
in
negb
and
jecxz
add
aad
int
movhlps
inc
not
andl
sub
xor
imul
outsb
outsb
pop
sub
xchg
je
mov
mov
fbstp
xorl
add
push
bnd
cmp
lods
sub
jbe
sub
sbb
adc
and
or
out
shl
sbb
push
insl
addr16
xchg
push
mov
dec
xor
rol
push
adc
xchg
sahf
mov
or
fldt
scas
in
pop
sahf
or
imul
or
add
xchg
or
xchg
sbb
pop
mov
pop
mov
xchg
mov
mov
fnstenv
loop
in
ds
movsb
push
orb
dec
xchg
xchg
mov
cmpl
push
add
dec
mov
in
jno
add
cmp
add
pop
ret
gs
sub
enter
mov
lahf
bound
xlat
add
xchg
push
jbe
inc
sti
mov
aad
enter
jg
mov
add
adcl
xchg
cltd
arpl
sub
mov
sub
sbb
stos
insl
or
out
imul
stc
arpl
cld
adc
push
imul
ja
jae
push
dec
lods
subb
cwtl
pop
push
jno
imul
mov
mov
dec
push
repnz
pop
jl
cwtl
pushf
jmp
cmp
jno
cmp
imul
and
fisubl
mov
sub
fcoml
sahf
cmpsl
mov
pop
inc
mov
add
cmp
movsb
mov
mov
repz
xor
pop
and
pop
inc
dec
sub
jb
push
dec
jns
push
repnz
dec
push
imul
add
sub
add
decb
xchg
xchg
xlat
pop
aaa
sub
sub
jmp
or
jg
jp
cmpsb
andb
sti
scas
pop
sub
jg
fstpt
std
out
arpl
cmpsl
mov
icebp
xor
xchg
add
insb
outsl
stos
aad
jb
icebp
orb
or
xlat
shlb
jmp
sub
xchg
push
cmp
inc
out
icebp
hlt
les
mov
das
sbb
stos
push
mov
mov
pop
idivl
mov
inc
mov
negb
orl
adcl
mov
lock
pop
cmp
push
push
add
ja
les
inc
jle
mov
test
push
lea
pop
aaa
add
rorb
dec
fisubs
dec
lods
cmc
push
mov
fwait
jne
xor
jl
lret
sahf
push
ljmp
xchg
push
mov
je
pop
int
mov
das
mov
mov
fs
mov
and
int3
sahf
mov
or
rclb
jmp
dec
popa
loop
xchg
mov
data16
xor
and
pop
cmp
xchg
fdivr
insb
je
stos
jnp
shlb
imul
sbb
sbb
scas
jnp
js
jle
out
lods
rclb
adcb
xor
negb
add
andb
adc
pop
shlb
and
lock
xor
adc
daa
jo
pusha
dec
or
inc
adc
sub
insl
outsl
cmp
jp
xor
in
pop
pop
xchg
in
popl
push
lret
imulb
cltd
fwait
mov
sti
mov
lret
pop
push
add
sub
lret
inc
sarb
xor
stos
inc
mov
add
movsl
mov
xorb
cmpsl
popf
loopne
fs
push
daa
xchg
fidivs
jmp
call
test
leave
xor
insb
fidivrl
add
or
pop
push
enter
cld
xchg
mov
pop
jnp
mov
ja
adc
lahf
insl
aaa
xor
dec
pop
adcl
ss
sbb
shlb
mov
insb
test
add
jbe
jbe
fcmovnb
push
and
test
sub
xchg
mov
xchg
pop
scas
scas
pop
scas
ss
lock
test
test
repz
iret
clc
fs
int3
sub
mov
push
inc
xchg
stos
fcomps
lea
push
addr16
jns
add
dec
and
sbbl
jns
cmpb
cmp
add
mov
lcall
or
or
mov
mov
out
out
loopne
out
adc
fcomp
cmp
insb
and
pop
mov
cmc
push
jno
add
insb
dec
les
ret
dec
cltd
cmp
jnp
cld
test
sub
push
sub
and
adcl
jb
xor
cld
or
pop
lret
sub
mov
mov
add
mov
sbb
inc
subb
aad
pop
rep
cmp
pop
shlb
lds
mov
push
push
cli
decl
pop
xchg
lea
shll
dec
inc
mov
test
push
int3
fs
popf
les
xor
rcll
jb
mov
and
mov
xchg
add
out
dec
lods
jno
inc
and
or
jg
sub
fiaddl
popa
and
popf
push
sub
cli
test
ds
jmp
nop
jle
loop
clc
sbb
loope
and
mov
data16
call
aad
les
and
ret
fbld
imul
fistpll
cld
cmp
je
cwtl
add
hlt
fldl
pop
insl
add
inc
xor
xor
mov
push
insl
mov
testl
cmc
dec
push
movsb
mov
scas
cld
lods
pop
sar
jne
mov
push
popa
scas
test
pushf
pop
mov
cmp
mov
mov
ret
xchg
in
rol
movl
mov
pusha
out
jbe
cli
push
popa
fmull
or
aaa
popa
lret
stc
pop
fldenv
pop
adc
or
test
inc
test
das
cmp
lods
addr16
or
sub
cmp
in
and
loop
pop
incl
ja
xchg
mov
xor
mov
add
xchg
add
inc
out
xor
add
in
xchg
lret
ret
jmp
out
std
clc
out
leave
jo
fcoml
adc
imul
outsb
mov
add
inc
cli
bnd
data16
cli
mov
aas
inc
jg
mov
mov
cmp
sub
iret
hlt
gs
mov
mov
jno
jns
in
xor
push
in
mov
or
in
mov
mov
cwtl
test
jmp
sbb
out
mov
aad
push
cli
int3
or
cwtl
imul
dec
sti
rcl
out
push
sbb
stc
mov
pop
enter
xor
test
testb
add
adc
xchg
aas
sbb
imul
clc
add
scas
mov
in
push
nop
out
xor
xchg
add
loop
mov
imull
ds
pop
imul
hlt
arpl
push
or
sub
cli
or
sub
in
xchg
out
or
sbb
mov
ret
cwtl
lret
hlt
push
jle
push
push
aas
jns
dec
jl,pn
xorb
mov
stc
push
icebp
xchg
dec
xchg
roll
out
and
xchg
shrl
and
dec
mov
scas
shrl
xchg
fcmovnbe
sub
icebp
mov
push
adc
xchg
mov
xchg
add
xor
repz
stos
mov
inc
outsl
sahf
out
dec
inc
push
mov
lods
ja
add
mov
push
aad
jno
add
sti
outsb
fldl
xchg
push
adc
push
nop
aam
insl
jle
enter
imul
sub
cmpsb
push
jne
cwtl
sbb
adc
cltd
lock
fidivrl
or
lret
push
mov
or
and
leave
adc
mov
mov
push
xchg
push
outsl
mov
aaa
cmpb
mov
sub
inc
arpl
cmovo
and
xor
pop
dec
clc
jno,pt
adc
imul
insl
test
movsl
insb
sub
mov
cmpsb
mov
pop
popf
xchg
mov
loop
xchg
pop
push
mov
neg
lret
dec
xlat
jo
xabort
push
int
aad
movl
mov
stos
adc
lret
xor
cld
push
test
mov
sbb
jo
or
icebp
gs
mov
cmp
out
cmc
enter
lret
out
cmp
ret
std
pop
add
mov
fisubrs
mov
and
pop
mov
data16
adc
lcall
mov
or
push
popa
cmp
or
mov
lea
sub
cwtl
nop
lea
test
lcall
adc
aad
popf
push
lds
gs
ret
jns
sbb
test
loopne
cmp
cmpsb
scas
or
xor
push
cmp
cmpb
out
mov
mov
and
push
xorl
xor
or
sbb
aad
add
and
sti
sub
notl
mov
xor
dec
lret
push
push
jmp
inc
mov
push
mov
in
xchg
jl
je
dec
cmc
fs
popf
cmp
dec
add
sbb
xchg
jmp
outsb
ds
lods
cwtl
sahf
ss
sbb
mov
and
dec
lods
mov
inc
ret
mov
fidivrl
sbb
mov
jecxz
scas
movsl
cmp
dec
xor
aaa
in
mov
xchg
clc
sub
push
ja
fidivs
mov
mov
xchg
xor
jno
mov
mov
out
ja
gs
icebp
mov
sbb
adc
jne
jnp
int3
xor
jnp
pusha
dec
mov
sbbl
mov
and
test
pop
or
ljmp
clc
mov
stos
testl
xchg
mov
pop
fbld
cmp
mov
enter
inc
into
xchg
shrb
mov
popa
dec
add
mov
lods
pop
push
call
push
jg
xor
or
adc
push
insb
andb
cld
lcall
fwait
jecxz
mov
cmp
pusha
jp
iret
sub
jno
or
pop
cmp
pop
out
push
pop
xor
xchg
xchg
mov
cmc
test
xchg
push
jle
inc
aaa
hlt
adc
imul
movsb
or
or
sub
lret
inc
push
sti
popl
add
push
cmp
lds
cld
movsl
bound
pop
xchg
xor
arpl
jecxz
pop
add
xor
fcompl
jb
lret
mov
movsb
adc
xchg
popf
insl
popf
jne
fildl
std
jecxz
repnz
pop
dec
mov
les
lds
xchg
arpl
or
pop
lret
aaa
insl
jp
cmp
add
scas
scas
mov
mov
mov
shlb
leave
push
jbe
test
mov
or
mov
lock
ldmxcsr
leave
jl
push
ja
idivb
mov
jbe
andb
xchg
jbe
pop
iret
push
sub
sbb
cwtl
enter
cmpsb
icebp
cmc
clc
inc
test
sub
mov
xchg
inc
repnz
mov
add
jle
sub
in
fbld
mov
popf
push
and
or
and
ficompl
xchg
lds
ret
xchg
js
movsb
lea
in
lahf
pushf
imul
add
xchg
int
incl
dec
dec
adc
mov
or
fcomps
cltd
stos
inc
jns
test
insb
lret
add
in
test
push
jo
aas
rorb
jb
sub
mov
push
jbe
inc
jo
add
cld
jmp
test
leave
shll
fisubrs
cmp
fstl
std
mov
lcall
dec
in
and
dec
dec
inc
cmp
movsb
and
roll
push
cmp
mov
and
xchg
vpsrad
sub
addr16
or
test
sahf
je
push
shll
jno
push
mov
mov
mov
movb
xor
push
rorb
push
push
pop
cmp
mov
xchg
cwtl
cld
xor
clc
int3
cmc
mov
repz
sub
sbb
ret
push
fisttpll
in
rcll
fimull
ljmp
rclb
int3
test
adc
cltd
sub
push
mov
call
pop
mov
scas
cmc
shll
mov
lods
jge
jmp
or
call
sub
xchg
jl
inc
es
mov
sbb
mov
adc
xchg
jl
mov
jnp
mov
pop
mov
xchg
fsub
adc
add
fwait
xchg
pop
xchg
pop
stos
lret
jge
pop
dec
call
aas
dec
cmpb
xchg
inc
mov
cmpsb
mov
ja
arpl
fst
loop
adc
sbb
std
icebp
mov
jmp
das
ficompl
pop
push
add
or
fstp
out
mov
pop
call
cmp
cli
jo
loop
xor
add
test
push
xchg
adc
insl
adc
xchg
fs
outsl
imul
sub
ljmp
sahf
push
es
jl
into
mov
ss
inc
sarb
push
ds
loope
mov
xor
mov
adc
insb
xchg
dec
xchg
int3
and
sub
push
push
mov
push
clc
es
mov
xor
jl
push
xchg
cltd
mov
in
lahf
outsl
xchg
nop
xchg
aaa
icebp
or
dec
inc
pop
ss
push
fcmovnb
cmp
jo
lcall
pop
pop
aaa
mov
push
loop
add
lret
add
pop
popa
cmp
sub
xchg
test
in
dec
mov
flds
lea
mov
sbb
ret
push
xchg
pusha
inc
test
jmp
popf
sub
push
test
mov
jnp
or
sub
and
aaa
and
fsubp
in
std
sar
jo
ret
cmp
pop
shlb
sahf
jne
cmpsl
sub
cmp
push
mov
insl
cld
fsub
pop
or
es
cmp
insb
lods
sub
cwtl
xchg
mov
cmp
imul
pop
xchg
pusha
mov
jp
loopne
mov
adc
jge
out
idivb
adc
jo
movsb
mov
pop
std
jg
and
stc
cmp
or
iret
mov
imulb
enter
xchg
cmp
sub
cmpsb
test
jmp
fnstenv
push
push
mov
cmp
push
xchg
sub
push
adc
ret
fisubl
neg
mov
mov
xorb
and
jb
mov
mov
mov
orb
and
lods
xchg
inc
xchg
lcall
sbb
adc
push
pop
in
outsb
je
xor
insl
or
dec
rolb
jns
frstor
sbb
jle
push
push
mov
mov
add
push
js
cs
movsl
pop
scas
pusha
arpl
add
scas
aad
xchg
and
or
movsl
dec
imull
stos
cli
divl
pusha
or
mov
add
sbb
cltd
jb
sbb
pop
dec
sbb
push
mov
enter
inc
xlat
decb
into
add
jno
pop
push
pop
push
fists
daa
jecxz
mov
and
xchg
push
int
vhsubpd
jae
dec
out
or
sbb
inc
mov
adc
cmpb
xchg
notb
arpl
pop
push
pusha
out
nop
loope
or
xor
test
xor
push
fbld
es
sub
xchg
enter
daa
sti
popa
mov
test
movsl
inc
xchg
in
cld
into
cmp
xchg
mov
mov
jno
and
test
lahf
pop
adc
sti
dec
addr16
or
hlt
ja
xor
jnp
adc
out
jo
xor
scas
sub
jae
jl
jnp
mov
and
in
notb
lret
je
jle
dec
imul
pop
push
mov
lret
fisubrs
xlat
mov
lea
mov
scas
push
les
fists
rcr
lcall
popf
popa
int3
call
jns
data16
inc
lret
cld
mov
hlt
loope
je
xor
sub
add
jns
add
cmp
lcall
stos
mov
mov
fidivrl
stos
cli
pop
xchg
sub
scas
jge
xchg
cmpsl
jge
gs
push
lea
movsb
jmp
popf
popa
jo
inc
push
insl
xor
lods
mov
and
dec
pop
pop
xchg
in
and
inc
mov
add
cli
dec
sub
imul
shll
sub
mov
mov
cmpsb
jae
push
push
ja
mov
sub
out
xchg
mov
ds
mov
mov
xor
jecxz
bnd
mov
popa
pop
mov
fdivrs
adc
mov
sti
jg
mov
push
inc
dec
ja
ret
xchg
sub
sub
test
add
xchg
jle
loope
pop
cmp
cmp
in
or
pop
js
xor
repz
das
mov
inc
scas
mov
insb
fsubrs
add
push
mov
in
sar
adcb
mov
sbb
mov
mov
popa
dec
jbe
ljmp
enter
popa
mov
ds
popf
pop
push
push
jbe
fists
push
iret
cmp
scas
rcl
movsl
pop
fcmovnb
lahf
mov
sub
and
mov
add
rorb
mov
daa
mov
jl
stos
jne
popa
call
cmp
incb
lods
cmp
inc
pop
fdivs
push
ss
mov
cwtl
adc
rorb
push
int3
outsb
sbb
frstor
push
movsl
ret
xchg
int
and
ljmp
or
xchg
xchg
adc
cwtl
imul
negl
jns
int
jmp
popf
add
xchg
movsb
test
mov
dec
push
cmc
lds
and
shlb
xchg
imul
shrb
xchg
in
mov
mov
loop
xor
pop
mov
adc
call
lret
xchg
cmpsl
shrl
mov
fidivrs
mov
addr16
call
aad
cmpl
sbb
out
push
mov
movsl
lret
jle
sbb
jg
add
fbstp
jmp
dec
fld
mov
jp
popf
or
and
mov
xchg
jns
cmp
xchg
je
pop
mov
inc
push
cli
in
mov
mov
mov
push
scas
or
iret
fisubs
mov
mov
push
jb
and
inc
sub
push
xchg
js
dec
xor
mov
call
faddl
xchg
lcall
sbb
bound
lods
lods
imul
bound
jno
jbe
das
and
fistpl
or
aas
rcr
jge
rorb
inc
stos
push
inc
inc
sbb
mov
adc
jp
adcb
xchg
cli
lcall
je
aam
mov
mov
ficompl
dec
out
push
std
push
push
hlt
cmpsl
jbe
popw
cmp
lret
jg
aaa
test
or
sbb
jmp
adc
or
push
push
test
cmp
mov
popa
mov
ss
jecxz
cs
das
mov
nop
scas
mov
push
inc
sub
lcall
repz
loop
adcl
adc
iret
nop
mov
and
cs
or
repnz
push
in
in
and
pop
ja
int
mov
pop
ljmp
aam
fwait
dec
jae
cmp
sbb
cmp
and
iret
and
and
lods
ficomps
xor
xor
fisttps
and
add
dec
imul
add
pop
add
stos
mov
mov
xor
push
cwtl
dec
or
jo
loopne
inc
adc
jo
xlat
stos
push
jl
int
test
xlat
adc
notl
ss
mov
add
mov
les
jle
dec
call
es
cli
fsubrl
loop
iret
and
loope
xchg
add
popa
loopne
sbb
inc
repnz
daa
cmpsl
add
push
sub
xchg
lods
sub
sub
xchg
cmp
into
mov
fisubs
xlat
pop
sti
jo
sub
sub
adc
rorb
add
cli
xchg
rorl
mov
ss
sahf
pop
xchg
cmp
mov
sahf
into
orl
add
push
leave
lret
aaa
jnp
mov
push
pop
push
mov
xchg
mov
mov
pop
cmc
test
inc
pop
cmp
push
lods
push
and
cmpb
pusha
add
mov
push
sahf
aas
iret
dec
jne
insb
cmp
cs
test
ja
adc
xchg
pop
mov
cmp
repnz
jb
mov
jae
sarl
rcr
add
xor
mov
push
fisubrl
push
cmp
mov
add
outsl
lret
mov
in
subl
mov
rcrl
lock
lahf
cmp
xchg
fstp
mov
pop
flds
jle
je
les
mov
test
adc
pushf
pusha
ss
lahf
popa
test
xchg
scas
mov
add
data16
and
jle
push
inc
pop
lds
lret
jns
inc
cli
mov
shrb
and
das
add
leave
dec
push
aaa
mov
inc
sbb
pop
sbb
xchg
inc
lret
nop
movsl
popl
gs
movsl
pop
es
test
jmp
adc
sbb
xor
sbb
in
inc
jmp
stos
imul
repnz
mov
add
mov
cmp
stos
fimuls
xchg
adc
push
out
adc
jmp
stos
sbb
cmpsb
stos
jp
scas
dec
dec
and
xor
or
cmp
fcmovbe
loop
xchg
and
xchg
notb
inc
xor
lret
mov
lret
repz
adc
cmp
pop
int
cmp
add
pop
idivb
lea
shlb
std
out
sti
mov
movsl
scas
xor
lret
leave
add
xchg
lock
adc
adc
sbb
adc
imul
cmpsb
insl
lock
je
cmp
mov
xlat
dec
test
ficomps
insl
cmp
xchg
fcomp
fstps
insb
fcomp
in
xor
mov
sbb
inc
mov
cwtl
cmpsb
jnp
cmp
bound
je
in
loop
push
pop
mov
scas
mov
dec
jo
loop
mov
arpl
in
in
push
or
mov
sub
mov
fs
cld
ret
add
pop
mov
mov
adc
and
mov
loop
fnstcw
fwait
out
dec
stos
adc
sbb
movsl
cmp
shlb
mov
or
mov
stos
jns
int
jb
or
lret
lcall
jle
mov
sub
std
mov
cwtl
rorl
mov
xchg
xchg
cmpsb
inc
sbb
mov
sbb
cmpsb
outsb
lods
jbe
mov
jnp
or
xor
sbb
inc
cmp
das
mov
dec
sbb
lahf
repz
pushf
or
fbstp
lds
mov
jb
aaa
fnsetpm(287
dec
push
rcl
iret
loop
out
daa
loop
mov
xchg
loopne
aam
sub
shr
mov
push
sbb
dec
mov
ss
fildl
mov
pmaxub
scas
sets
push
ds
fcomi
push
dec
lahf
push
dec
iret
mov
cwtl
cmc
jg
mov
movsb
push
ret
sbb
out
dec
jmp
shll
jns
push
aad
sbb
jo
dec
push
les
mov
push
sub
ret
mov
ficoml
fdivrs
lcall
js
jmp
adc
clc
mov
in
or
test
pop
sub
test
dec
cmpsb
jns
push
mov
cmp
scas
inc
in
sub
stos
dec
call
nop
push
into
pop
push
ss
les
shrb
cmc
je
adc
aaa
add
fistps
add
sbb
mov
rclb
or
scas
fwait
stc
addr16
pop
adc
jl
sbb
xchg
test
mov
mov
push
rcll
imulb
test
mov
add
or
fs
add
mov
adc
and
sub
mov
cmp
inc
rorl
andb
sub
xchg
or
scas
in
adc
daa
mov
nop
sub
ret
das
and
mov
lea
push
movsb
cli
sub
or
mov
pop
inc
cmp
test
mov
adc
mov
imul
dec
jp
cmp
int3
fwait
mov
adc
mov
jne
sahf
int
mov
dec
shll
push
fwait
dec
ljmp
ret
and
and
fwait
outsb
into
ja
or
sbb
mov
push
mov
rcrl
push
stc
out
adc
add
test
ja
or
sbb
bound
outsb
inc
xchg
outsb
test
or
push
cld
sbb
xchg
xchg
push
inc
pop
or
jo
xchg
insb
divl
add
out
aas
and
jecxz
inc
cmp
dec
jge
lock
lods
mov
xchg
addl
inc
dec
lcall
inc
pop
mov
adc
shrl
mov
or
and
sbb
nop
les
fs
xor
cld
aas
outsl
out
cli
daa
popa
scas
ficoml
push
idivb
cmpsl
mov
repnz
xchg
xor
xchg
int
dec
lea
xlat
sub
pop
stc
push
jno
inc
dec
mov
inc
out
xor
scas
mov
mov
jmp
adc
sub
divl
mov
sahf
aas
add
pop
cli
lret
jecxz
add
cld
push
js
and
cmp
xchg
xchg
push
sub
add
inc
mov
jne
repnz
or
scas
movsl
xchg
xor
push
push
cmp
fisubs
movsb
mov
mov
call
addr16
adc
push
mov
mov
xchg
mov
jmp
hlt
test
sub
mov
push
sti
aam
mov
decl
xor
hlt
xchg
mov
or
cli
sbb
stos
inc
inc
sahf
pop
sub
add
sbb
inc
pop
add
xchg
inc
lret
sbb
out
dec
pop
rcr
sub
das
mov
adc
test
jae
xchg
mov
jnp
sbb
push
cltd
insl
and
inc
lret
mov
pop
scas
and
add
dec
or
ret
adc
dec
jnp
mov
cmp
sbb
and
mov
push
sbb
lahf
pop
sbb
push
sti
pop
cwtl
test
fistpll
adc
or
js
hlt
mov
or
test
int
loope
mov
mov
into
pop
dec
aas
gs
lods
int3
test
or
fadds
cmp
addl
dec
bound
dec
adcl
jp
or
das
subl
aam
inc
cmp
dec
xor
push
cld
push
fidivl
clc
mov
xchg
xchg
inc
icebp
adc
adc
push
push
jne
cmc
fiadds
sub
xor
add
jmp
imulb
imul
loopne
aam
sub
icebp
daa
bound
rolb
aam
dec
mov
or
stos
aad
ficomps
push
xlat
mov
dec
jo
xor
popa
int
pop
fs
pushf
push
push
call
or
pop
aaa
mov
dec
jno
test
decb
inc
sub
fcompl
int3
jbe
pop
cmp
pop
dec
call
jp
lods
cli
mov
and
jbe
push
lds
or
mov
enter
xchg
roll
outsl
mov
jno
cmc
mov
les
dec
add
push
cmpsb
xchg
sahf
imul
shll
mov
popa
add
aaa
aam
xor
test
xchg
ds
and
lods
dec
jmp
or
insl
xchg
sahf
fisubs
es
xchg
sub
and
mov
inc
les
add
xor
pop
adc
aam
dec
sbbl
aad
mov
adc
inc
ret
test
push
jo
cmp
out
mov
lcall
hlt
lods
or
fmul
aad
test
inc
pushf
push
mov
pop
jne
add
and
jg
fstpl
push
int3
out
sbb
clc
icebp
test
ds
cmp
je
push
aam
mov
mov
mov
lock
add
jle
pop
adc
js
mov
iret
mull
int3
xor
or
imul
xor
pusha
aas
pop
dec
dec
movsb
aaa
jae
bound
xchg
adc
lret
imul
jmp
sar
add
push
sahf
sbb
push
int3
sub
push
cs
fwait
das
ljmp
push
adc
testl
cli
inc
dec
lret
cmp
xor
rcrb
adc
cmp
push
test
push
cltd
xor
repnz
insl
stos
roll
mov
and
clc
movsb
cmp
xchg
xchg
fndisi(8087
pop
sbb
adc
dec
cmp
aaa
sub
iret
je
adc
inc
jp
sbb
sbb
jl
jl
push
addr16
or
movb
dec
testb
push
pop
scas
sbb
mov
jo
cwtl
sub
mov
in
sti
popa
sbb
imul
add
aas
adc
in
cld
dec
push
cmc
sub
xor
fisubl
xchg
pop
jge
scas
fcomip
fistl
dec
add
sbb
add
add
movsl
jnp,pt
icebp
movl
xchg
fs
arpl
add
movsl
cmc
add
inc
mull
fincstp
dec
je
fnsave
in
out
loop
lcall
ffreep
push
or
nop
es
adcb
mov
sub
stc
jle
cld
push
add
aaa
pop
jmp
mov
mov
inc
sub
push
or
sub
inc
out
hlt
jmp
mov
mov
inc
daa
pop
fcompl
xor
loopne
mov
loop
sub
les
jg
sbbb
xor
or
mov
add
fucomip
rolb
ds
cmp
inc
sbb
dec
loop
rol
sub
mov
cmpsl
push
shlb
insl
leave
pop
jecxz
ljmp
or
pop
jmp
imul
dec
jmp
mov
sbb
xchg
nop
push
mov
and
pop
icebp
push
pop
and
mov
testb
add
call
lea
gs
cld
dec
jecxz
aad
or
sbb
leave
out
xchg
addr16
add
out
in
pushf
add
cltd
xor
into
cmpsb
dec
faddl
pop
xor
gs
dec
lock
sub
ds
sub
lds
rcl
mov
cmp
pop
inc
imul
ja
gs
sbb
lods
ror
rclb
data16
pop
cwtl
pop
cld
mov
xor
cld
inc
push
sbb
es
cmp
leave
ss
sar
cmp
xchg
insl
in
fistpl
outsl
je
xor
lret
inc
xor
sahf
adc
pusha
push
pop
popf
pop
loop
cmpsl
outsl
inc
cwtl
subb
mov
add
stos
cmp
pop
adc
out
inc
outsb
popf
call
or
decl
insb
sub
mov
jl
loop
push
sti
arpl
sbb
push
mov
divl
mov
cs
imul
xor
test
inc
fsubrl
movl
jbe
sbb
jmp
or
enter
or
ret
push
inc
pop
aam
sbb
mov
sbb
inc
repnz
dec
lods
lods
jno
mov
test
pushf
xchg
incb
dec
enter
sbb
ss
dec
jb
into
mov
jns
mov
lahf
pop
jns
out
sub
cmp
xchg
jns
clc
xor
sub
out
xor
shrb
jmp
jo
clc
mov
das
out
shlb
pushf
cmp
rcll
lds
aas
popa
jmp
hlt
jl
arpl
cmp
test
inc
mov
pop
inc
out
inc
test
mov
push
push
xchg
jle
add
xor
in
push
adc
sub
and
out
out
scas
lret
lods
imul
and
jno
shll
or
lret
dec
aas
gs
int
mov
std
inc
push
rcll
fcomi
pop
pop
aad
xchg
dec
int3
xor
inc
in
aam
out
insb
add
scas
cmpsl
xchg
and
dec
mov
fstl
das
insl
lea
out
lret
mov
lods
push
mov
fiadds
xorb
sbb
jnp
shll
into
fsubrl
sub
lods
add
or
cltd
mov
mov
int
je
adc
xor
clc
stc
cmp
in
pop
daa
sbb
push
inc
fldt
mov
adc
and
pop
and
arpl
insb
fucom
vmovd
aad
roll
test
cli
xchg
addb
test
cltd
repz
and
jecxz
in
push
fistl
popf
pusha
fcompl
cltd
xchg
rol
sbbl
fdiv
pop
push
jne
js
mov
jb
inc
ss
sub
loop
xchg
lds
pop
pushl
add
adc
or
sub
scas
cwtl
aas
fldenv
adc
insl
mov
push
mov
fsts
dec
dec
sbb
xor
scas
adc
test
aad
sub
add
mov
stos
mov
inc
insl
and
adc
fs
xchg
sbb
xchg
stc
je
mov
mov
int3
call
inc
popf
aaa
jno
dec
bound
mov
dec
lret
adcb
mov
pop
sub
fwait
pop
jecxz
pop
mov
jns
mov
subl
pop
jle
pop
push
std
sbb
dec
das
mov
addb
ja
xor
cmpsl
jmp
push
out
jno
cmpsl
fldcw
pop
imul
inc
sbb
cmc
stos
pop
fadds
aam
int3
aaa
repnz
clc
fisttps
sub
jg
hlt
movsl
adc
xchg
cli
adc
stos
pop
and
inc
xchg
adc
out
jge
lahf
enter
add
test
repnz
shll
data16
inc
sub
stos
lret
in
fs
and
sti
mov
pop
sub
es
arpl
and
xchg
mov
mov
divl
cmp
inc
or
ds
pop
shl
push
dec
sub
imul
mov
add
fcompl
sbb
movsb
bnd
mov
js
jl
in
and
cmpsl
stos
test
add
cmp
add
jne
insl
daa
ja
mov
mov
sbb
xchg
scas
sub
nopl
out
icebp
xchg
fcomi
pop
mov
rolb
lcall
dec
inc
sbb
push
cmp
subb
push
into
iret
fdivrs
fidivrl
outsb
adc
sahf
jae
xchg
icebp
aaa
sarb
movsl
sub
xor
xlat
mov
jno
insl
push
into
jge
sbb
xor
inc
lock
ret
test
pop
jmp
lock
scas
cmp
mov
push
jb
imul
inc
jg
stos
mov
lret
or
test
mov
sbb
dec
ret
mov
das
ds
ret
jg
cs
jmp
mov
daa
ja
notl
sbb
sub
xlat
hlt
and
rcrb
mov
add
pop
repnz
test
repz
mulb
xor
xchg
mov
cmc
push
or
repz
pop
xchg
xorb
aam
cwtl
aam
int3
daa
insb
inc
dec
jp
push
es
lret
push
pop
jae
ffree
push
mov
cs
jle
aas
rcll
adc
sahf
ljmp
int3
es
fnstsw
test
cli
jae
or
pop
xor
scas
popf
jno
mov
mov
xlat
in
or
repnz
jmp
lcall
mov
adcb
push
ja,pt
sub
iret
sahf
pop
or
mov
mov
xchg
mov
jg
jo
pop
dec
sub
mov
das
dec
add
data16
mov
lret
mov
addl
pop
in
xchg
add
xchg
jnp
pop
lds
xchg
test
or
pushf
push
fwait
cmpsl
bound
xchg
ret
cmp
dec
lds
ret
jbe
test
xchg
pusha
add
ret
jns
out
loope
mov
sub
test
push
in
test
add
pop
ljmp
out
fdivr
jmp
out
lret
cld
in
adc
je
jns
mov
mov
mov
mov
mov
sbb
inc
dec
ds
push
dec
pop
cmp
push
cltd
pushl
pop
ds
mov
mov
movsb
arpl
movsl
pop
or
pop
xor
mov
lcall
js
adc
lods
mov
sti
popa
rorb
ja
push
or
adc
in
add
adc
std
inc
mov
mov
lds
jbe,pt
sub
mov
or
ror
aad
lea
mov
mov
shrb
jnp
push
enter
cmp
push
push
fisttpl
shll
xchg
pop
pop
into
insl
pop
punpcklbw
push
popa
mov
popa
ja
cmp
sub
sbb
sub
cmpsl
andl
cmp
xchg
cmpsl
sub
adcl
scas
icebp
faddl
and
mov
mul
xor
ret
pop
push
stc
insl
mov
sbb
loopne
loope
pop
cvtdq2ps
shr
stos
mov
outsl
rorb
sbb
xchg
xorb
in
inc
daa
pop
inc
sbb
inc
mov
hlt
orb
out
jecxz
add
out
je
add
es
imul
mov
rclb
and
ret
or
into
mov
fdivrl
mov
xor
adc
popa
jle
insb
loopne
mov
out
les
mov
mov
pop
xor
out
sarb
lcall
and
imul
push
repnz
cltd
xor
mov
mov
notl
in
js
cmc
dec
outsb
add
xorb
mov
push
je
adc
test
call
loope
xchg
xlat
pop
xor
push
in
fwait
and
pop
adc
das
shll
call
les
xchg
inc
jmp
mov
shlb
test
into
sahf
clc
xchg
je
lahf
add
mov
aas
mov
push
icebp
out
adc
dec
adc
jmp
std
jnp
jle
jo
adc
dec
and
dec
mov
lret
inc
fcomps
cmp
mov
sbb
mov
jecxz
xchg
adc
outsl
xchg
dec
aam
pop
pop
imul
pop
mov
sbb
jns
iret
jl
enter
mov
adc
stos
xor
xchg
lcall
imul
push
push
out
dec
repz
xor
cmp
test
sub
cwtl
mov
stos
inc
jno
mov
xchg
sbb
stos
leave
popa
fcompl
std
roll
sub
adc
add
das
add
or
pop
dec
jp
cltd
rolb
iret
cmp
insl
jo
cltd
pusha
inc
and
add
adc
push
add
jge
and
ret
inc
push
shr
sub
fnstcw
andl
shrb
das
xor
or
push
sbb
dec
sbb
outsb
mov
adc
imul
mov
das
mov
mov
jns
in
dec
add
std
enter
lock
inc
inc
cmpsb
push
ficomps
push
lods
aam
or
sbb
sbb
cmpsb
je
pop
lret
rclb
imul
test
sti
lcall
sbb
mov
lret
jle
cmc
fsub
add
leave
inc
rolb
xor
jbe
imul
aad
push
xchg
mov
iret
pop
sbb
xor
int3
lcall
xchg
mov
jno
cmp
add
iret
pop
mov
jecxz
xchg
mov
loopne
fcompl
cs
mov
cld
lods
xor
sbb
je
outsl
add
out
fisttpl
xor
jne
test
arpl
pop
inc
cmpsl
sub
push
adc
mov
jnp
call
std
jnp
fwait
aas
jb
xchg
es
lods
mov
repnz
cmc
fdivrl
subb
sbb
jecxz
leave
inc
out
mov
mov
pop
mov
repz
rcr
jne
cmp
push
sbb
sbb
xchg
test
scas
enter
adcb
stc
push
jle
push
pop
jno
sbb
icebp
data16
insb
lcall
flds
mov
loop
cmp
push
sbb
pop
sbb
in
and
sbb
out
inc
fwait
insb
das
inc
stos
xor
mov
nop
std
mov
stos
or
jno
ljmp
popf
cmpsl
inc
clc
mov
rorb
mov
fwait
xchg
fadds
or
dec
fstps
bound
push
fiaddl
pusha
ficoml
jmp
lret
inc
xchg
iret
dec
shlb
imul
fwait
cld
mov
inc
jl
in
push
adc
jae
jmp
fistpl
push
insl
out
leave
test
mov
jns
leave
xchg
subb
fisubs
add
int3
inc
xor
inc
mov
outsl
push
imul
or
fistpll
je
cli
jns
or
xchg
jle
xchg
in
pop
mov
or
pop
lcall
pushf
adc
fidivrl
push
mov
icebp
div
std
adc
sbb
pop
call
cmp
push
pop
cmc
leave
pop
mov
mov
fs
movsl
adc
push
and
aas
add
xchg
xchg
ret
shll
pop
jne
cmp
lret
lahf
repnz
mov
loop
movsl
or
in
mov
lret
scas
add
mov
pop
test
inc
lods
xchg
push
int3
add
imul
lods
loop
jb
jb
movsl
pop
dec
push
pop
mov
dec
mov
mov
jbe
cli
cmp
gs
insl
mov
sbb
mov
lds
add
stos
lods
aaa
or
std
shrl
fmul
fadd
jl
cld
es
inc
test
pop
add
std
jp
mov
idivl
dec
imul
data16
push
outsl
divb
pop
aaa
pop
mov
push
into
addr16
or
pushf
xchg
push
xor
pop
mov
adc
clc
lea
push
ret
fisttps
add
sub
adc
mov
add
gs
pop
mov
and
pop
imul
mov
mov
or
ret
mov
mov
lret
mov
adc
aas
sbb
add
das
out
cmp
xor
jb
mov
out
mov
mov
jnp
xchg
mov
jp
fildl
sub
or
sub
xlat
mov
dec
xor
jo
mov
imul
js
stos
and
shrl
xchg
movsb
and
repnz
ja
pop
ja
mov
jns,pn
cltd
pop
ljmp
aas
int
iret
sbb
pop
sahf
fcmovnbe
repz
mov
aam
clc
xchg
xchg
adc
xchg
mov
push
cmpsb
add
call
movsb
pop
movsb
jle
ret
dec
cmp
fisttpll
lock
ret
cmp
and
xor
sub
hlt
cmpsb
sbb
xor
call
jmp
ja
mov
jne
jno
pop
cmp
pushf
mov
hlt
mov
pop
adc
shl
pop
mov
fmuls
and
sarb
sbb
orps
add
ret
int
sbb
push
lds
rcll
imul
inc
xchg
and
pop
sub
pusha
es
lcall
jge
xor
shl
adc
ret
mov
sub
fdivrl
repz
adc
adc
stos
out
adc
inc
or
test
mov
data16
aad
push
test
xor
xchg
in
or
cmp
push
jge
lea
rorl
pop
mov
pop
push
push
jg
jmp
mov
in
add
add
push
maskmovq
idivl
mov
xchg
out
test
test
ret
jno
inc
xchg
test
mov
sub
out
dec
xor
sbb
lods
pop
mov
andb
int
inc
mov
iret
jne
sbb
aad
ds
xchg
jno
ficompl
xchg
ror
cmp
shlb
stos
ret
stos
cmpsl
pause
jmp
inc
jbe
arpl
dec
daa
mov
icebp
mov
xchg
call
lahf
daa
rclb
js
ja
mov
jae
lret
dec
loope
cmpsl
push
lret
icebp
adc
pop
jbe
push
and
sahf
dec
add
mov
inc
test
movsb
sbb
nop
gs
push
cltd
dec
nop
inc
mov
fs
pop
adc
fisttpll
addr16
mov
pop
jp
adc
cmp
and
shl
arpl
inc
sub
and
test
xchg
sbb
sbbl
or
lock
push
rcll
sub
sub
ja
pushf
movl
add
lret
mov
cmp
call
inc
cmc
adc
punpckhbw
pusha
inc
je
loopne
ja
out
inc
neg
pop
jge
xor
imul
mov
setbe
std
mov
test
lahf
mov
mov
mov
mov
orb
shll
rcrb
adc
jne
jbe
shl
clc
add
mov
sub
inc
sahf
mov
push
push
and
xor
cmpsl
and
dec
inc
xor
sbb
xchg
imul
orl
inc
xchg
in
insb
cmpsb
mov
aaa
cs
stc
insb
decb
shll
and
aam
inc
sbb
xchg
pop
pop
daa
inc
push
data16
mov
sub
sub
push
rorl
jl
mov
mov
mov
cli
push
cmp
mov
adc
dec
mov
jb
xor
stc
inc
sti
or
mov
jae
push
fwait
dec
and
lds
cmp
fdivrl
movsl
dec
mov
sbb
fnsave
in
mov
aad
pop
sub
loopne
mov
sti
push
aam
dec
dec
sbb
lock
cli
jnp
outsl
insl
repz
popf
stc
mov
mov
and
mov
xor
jo
pushl
loope
sti
sbb
add
push
mov
adc
fsub
out
add
and
push
dec
fiadds
ljmp
ljmp
lret
mov
or
in
inc
enter
cmp
iret
loop
das
dec
cmp
cmpsl
or
test
clc
fidivrs
jecxz
xchg
fsub
testl
cs
fs
cwtl
ret
sti
rcl
movsb
int
cli
mov
push
std
mov
rcl
minps
jb
aam
popa
add
jo
or
call
jmp
or
adc
sub
and
aam
jg
and
mov
push
adc
jns
inc
sbb
mov
popf
loop
ljmp
xchg
push
out
mov
cld
arpl
fdivs
dec
insb
aam
jb
push
arpl
lock
aaa
mov
int3
les
or
xor
fdivl
mov
data16
lahf
sti
jnp
push
insb
push
cli
add
jnp
push
icebp
or
or
sub
jbe
fisttpll
call
test
nop
out
andl
das
std
inc
or
xchg
lret
std
pop
mov
sbb
out
inc
cmpsl
int3
mov
lahf
inc
subb
xchg
lods
mov
jmp
push
imul
push
movsl
or
lds
push
test
bound
xor
inc
sbb
adc
jbe
mov
scas
call
cmp
adc
xor
popf
bound
aad
xor
jno
cmp
adc
nop
enter
daa
lret
mov
adc
pop
lea
push
add
mov
jle
pop
mov
adc
mov
das
jae
nop
jo
dec
insl
fs
cmp
cmpsb
ss
mov
sbb
cwtl
mov
pusha
xchg
pop
inc
pop
mov
ss
jmp
mov
xchg
pop
lds
ds
pop
into
push
adc
mov
mov
ljmp
or
arpl
or
lret
push
push
clc
sahf
xchg
push
fwait
mov
sub
cmp
push
xchg
jo
clc
nop
mov
jmp
lea
mov
sub
loopne
push
jge
cld
adc
js
and
mov
mov
int
pop
aam
pop
sbb
aaa
sub
lods
insb
mov
loope
cmpsb
nop
jno
add
mov
push
jp
das
roll
xchg
in
shl
jg
sbb
sub
xchg
and
mov
jg
pop
push
push
insb
aad
test
lcall
pop
jge
mov
add
xchg
inc
jb
mov
mov
push
pop
cmp
cmpsb
mov
cmp
mov
xchg
push
jl
lahf
sarl
cmp
sub
push
adc
clc
push
lock
scas
and
sbb
jmp
repnz
imul
xor
xor
mov
jo
test
add
fs
dec
shlb
loopne
inc
pusha
fcmovne
push
fsubrs
mov
sub
mov
rorb
test
cmp
sahf
or
and
cmp
mov
ss
mov
int3
out
adcb
fmull
mov
jbe
in
xchg
rcrb
dec
adc
or
rcr
leave
imul
lods
flds
arpl
ss
jbe
inc
cmp
popa
int3
mov
sbb
jno
fwait
mull
loop
add
mov
outsl
mov
ljmp
lods
mov
pop
inc
sub
nop
hlt
inc
retw
and
dec
xchg
cwtl
mov
subl
sbb
std
ds
out
aaa
adc
push
xchg
cmp
jge
test
or
gs
push
loope
fadds
xor
in
adc
mov
cmp
sarb
sub
pop
add
mov
inc
daa
xchg
xor
aad
xchg
mov
inc
cmpsb
cmc
jnp
pop
mov
jae
jg
and
inc
popa
addr16
or
leave
xlat
jne
negl
mov
xor
jp
int3
fisubrl
mov
push
fwait
inc
outsl
inc
arpl
xchg
cmp
in
stos
dec
ds
push
icebp
test
fidivrs
movmskps
out
push
lock
fdivrp
shll
pusha
daa
mov
je
xchg
fcomi
shrb
jae
shl
sub
ljmp
jmp
hlt
lcall
sub
lea
scas
sbb
icebp
or
xor
insl
mov
lahf
int
lods
add
push
add
mov
lcall
mov
movsl
enter
lock
xchg
sub
mov
mov
mov
fwait
int
push
insl
es
xor
pop
orb
mov
cli
cltd
popf
and
aaa
mov
xchg
and
lcall
inc
adc
dec
ret
sbb
into
xor
xchg
dec
incl
aaa
sbb
repz
jnp
scas
aas
inc
cld
mov
repnz
cmp
sub
test
insb
insb
pop
dec
dec
jp
out
imul
push
adc
mov
negl
aam
pop
or
daa
xchg
daa
iret
cmp
or
dec
outsl
and
xchg
mul
movzwl
cmp
lret
jle
pushf
mov
sbb
sahf
sarb
dec
popa
jl
xchg
sahf
out
jle
dec
test
jge
xchg
loope
pop
sbb
imul
data16
pop
jp
imull
movsl
sub
mov
push
lock
pop
jns
push
in
xchg
jo
xchg
rorl
add
xchg
shll
lea
add
inc
in
cltd
xor
cmpsl
aam
or
pusha
in
rcrb
divb
lods
and
mov
js
out
pusha
fistps
outsb
arpl
repnz
loope
push
sub
pushf
adc
call
or
shrb
daa
mov
popa
gs
push
sub
sub
pop
xchg
mov
out
fldcw
xchg
scas
mov
dec
sub
lods
sbb
mov
mov
pop
shrb
arpl
adc
ds
dec
cmp
cmp
ljmp
test
popf
xchg
inc
add
jb
test
lods
sbb
and
cmpsb
cmp
inc
mov
adc
daa
iret
sbbl
pop
test
iret
sar
movsb
add
mov
pop
fidivs
rcrb
or
jmp
pop
xchg
and
jne
mov
hlt
mov
outsb
add
xchg
jae
cmp
mov
sub
fdivl
and
test
leave
push
mov
cli
add
data16
aad
add
xor
sub
pusha
and
testb
fwait
xor
dec
aad
negl
mov
xor
cmp
dec
push
add
inc
mull
fs
pop
in
pop
fidivs
pusha
push
les
pop
push
out
push
cmp
or
cs
jecxz
sbb
cmp
pop
lds
adc
daa
mov
cmpsb
outsl
imul
rol
push
out
push
jo
cwtl
in
repz
loop
add
aaa
out
addl
test
popa
cmp
cmpsl
shrl
pop
push
cmpsb
adc
mov
shr
fnstenv
nop
insl
push
notl
iret
outsl
ret
and
aam
push
insl
cmpsl
les
bound
lds
out
fmuls
or
or
sub
arpl
lret
jp
xchg
or
and
std
xchg
data16
stos
dec
cli
rol
stos
or
mull
ja
fldcw
sbb
stos
fstp
pop
in
rorb
in
sar
lcall
mov
or
cld
and
out
mov
mov
adc
adc
lret
jo
test
rcll
popa
sub
xorb
ret
jae
cmp
cltd
sarb
std
ds
and
rcl
inc
scas
insl
push
lea
fwait
int
sbb
popf
dec
bound
and
pop
push
add
xchg
loope
test
inc
sub
mov
es
mov
xchg
dec
int
pop
scas
ds
scas
and
dec
out
mov
inc
and
loopne
adc
int
jle
mov
mov
jle
in
and
jecxz
movsb
lcall
and
and
add
mov
xchg
mov
sub
pop
shlb
mov
mov
aas
fs
lret
icebp
mov
test
dec
roll
movsb
sahf
test
insb
adc
in
pop
xchg
xchg
mul
inc
mov
jge
dec
or
pop
mov
push
and
fwait
xor
pop
xchg
inc
les
inc
aas
xor
ljmp
test
pop
xchg
push
push
imull
xchg
es
dec
aad
xor
out
inc
fwait
lcall
scas
adc
mov
pop
mov
ljmp
andb
lods
mull
pop
jae
mov
sbb
and
mov
mov
push
hlt
pop
ss
inc
mov
xor
mov
cmp
pop
mov
jp
and
xchg
bnd
dec
push
cli
mov
bound
cmc
dec
mov
push
jle
xchg
mov
lds
data16
add
leave
jg
lcall
pop
dec
mov
xchg
mov
xchg
mov
xorb
xchg
fildl
ffreep
mov
andb
mov
jp
adc
sbb
loope
pop
mov
sub
sbb
jp
ret
inc
push
dec
dec
fnstsw
leave
push
adc
stos
flds
xchg
xchg
mov
je
and
or
lret
test
loopne
leave
repnz
shll
in
xchg
and
aad
leave
mov
sti
lds
lcall
mov
or
xchg
fwait
daa
xor
outsb
ficoms
ret
add
iret
push
rclb
iret
push
add
aaa
pop
xlat
je
scas
push
aaa
dec
and
imul
ret
imul
ds
addr16
repz
outsb
rorl
add
fcomp
ja
xchg
pop
fldcw
jns
arpl
ja
pop
rcrl
scas
sbb
enter
lea
dec
or
push
test
jmp
xlat
pop
sub
xchg
in
pop
mov
mov
lret
mov
aam
ja
xchg
mov
push
fstl
dec
jg
inc
jno
mov
dec
cs
lds
adc
call
xchg
add
mov
lret
sub
mov
jno
sub
mov
mov
mov
mov
scas
out
lods
hlt
shlb
sarb
divb
mov
outsl
sub
add
arpl
sub
stos
inc
inc
jmp
hlt
cmp
inc
imul
sbb
cmp
cwtl
mov
out
das
sub
negb
mov
cmp
stos
xchg
sbb
adc
stc
jb
jno
or
das
pushf
es
mov
mov
repz
push
cs
xor
nop
dec
mov
jl
mov
sbb
mov
aaa
push
cmp
mov
loopne
jb
aam
outsb
jle
inc
in
shr
hlt
pop
dec
pop
lea
outsl
into
jbe
jno
aas
das
pop
in
sahf
aas
cmpsl
rcrb
sub
xor
mov
and
ljmp
roll
sahf
jl
push
aam
test
scas
mov
in
loopne
lods
pop
xor
pop
shrb
insb
adc
jno
or
inc
mov
ja
push
mov
sbb
mov
scas
xor
loope
rcrb
leave
mov
pop
ret
fildl
je
outsl
adc
addr16
inc
dec
jno
xchg
and
loopne
rcll
aam
or
in
mov
outsb
fwait
cmp
fstpt
popf
test
jo
in
in
sub
or
rorl
pop
lods
inc
sub
mov
out
pop
inc
add
pop
add
hlt
mov
dec
popf
mov
mov
adc
sub
add
out
inc
rclb
cmp
and
in
jne
loop
mov
outsb
insl
jns
es
arpl
imul
mov
movsb
jo
movsl
mulb
adc
xchg
in
cmpb
movb
aad
jl
out
adc
sbb
frstor
lds
stos
inc
sub
push
shlb
pop
inc
lock
scas
sbb
clc
push
fsts
xlat
pop
jle
fidivrl
push
pop
es
push
adc
jb
sbbb
imul
imul
rcrl
dec
cmp
mov
add
cmpsl
stos
popf
sti
pop
xor
jecxz
push
sbbl
mov
push
std
push
jmp
leave
pop
int
pop
and
jae
scas
sbb
and
xchg
mov
dec
mov
jo
add
loop
mov
add
sbb
mov
cltd
sbb
push
stc
jmp
pop
jmp
jae
push
scas
inc
js
or
and
pushf
and
lret
out
in
pop
ffreep
fsub
mov
push
imul
dec
test
adc
mov
je
push
aam
adc
adc
aam
inc
mov
or
sarb
inc
dec
ds
ljmp
test
xorb
leave
pop
mov
xlat
lcall
out
add
push
xchg
and
push
adc
jns
xor
jg
and
sti
inc
fninit
pop
sub
rorl
dec
sub
pop
xchg
push
das
iret
imul
jns
daa
push
mov
mov
dec
xchg
adc
push
imul
arpl
mov
cmp
leave
popf
das
xor
std
sub
dec
sbb
push
mov
mov
scas
insb
mov
outsb
out
popf
lahf
adc
inc
out
test
rolb
enter
or
ja
dec
xchg
or
call
mov
add
inc
mov
pop
jg
push
movsb
add
sub
jmp
imul
sub
xlat
or
jmp
gs
cltd
mov
aam
rcrl
dec
in
xchg
adc
das
insb
fnsave
sub
mov
inc
sbb
arpl
addb
stc
fsubrl
sbbl
mov
sbb
xchg
cmpsl
xor
pushf
push
das
ficoml
push
jno
dec
iret
sti
inc
stos
mov
loop
mov
std
and
mov
insb
int3
push
xchg
sbb
ret
and
inc
lret
xor
jl
repnz
outsl
dec
rolb
int
pop
lret
inc
mov
cmpsb
adc
jecxz
fstl
adc
popa
xor
jg
into
ljmp
mov
jmp
sbb
aam
test
inc
push
xor
ret
dec
pop
shll
push
fstps
mov
in
xchg
cmp
cli
mov
pusha
pop
inc
nop
int3
push
jecxz
push
ret
lret
inc
adc
fstps
mov
cmp
xor
idivl
inc
hlt
push
xor
pop
nop
jp
adc
jne
aaa
pop
flds
lock
cmp
mov
mov
add
sub
leave
addr16
xchg
mulb
mov
push
dec
xor
adc
or
inc
addl
mov
xchg
pop
jle
push
jg
mov
dec
aad
mov
mov
enter
jmp
pop
jns
shlb
std
xor
fwait
mov
loop
cltd
push
out
push
sahf
repnz
jmp
fnstsw
mov
pop
pop
je
mov
ss
mov
jb
dec
dec
push
xchg
dec
lret
arpl
scas
xchg
lret
or
in
jl
imulb
je
lret
jnp
cmp
repnz
mov
roll
pop
cwtl
arpl
scas
aas
inc
stos
push
and
fwait
xlat
jmp
mov
dec
movsb
ud2
push
push
push
add
add
jp
cmpsb
sbb
sahf
adc
mov
mov
lret
loopne
inc
test
add
mov
movsl
cmpsl
loopne
pop
movsb
stos
xor
sbb
sbb
daa
push
das
loop
mov
jo
pop
fs
dec
fldl
jne
fwait
loopne
sub
push
jae
fcomp
hlt
or
pop
adc
xor
push
pushf
sbb
and
cmpb
cs
cld
jno
orb
lea
push
mov
les
jmp
or
push
mov
adc
jb
addr16
in
stos
std
mov
pushf
lock
xchg
xchg
push
out
adc
mov
iret
dec
loop
adc
lea
push
hlt
xor
inc
adc
cld
lods
adc
jge
and
or
test
push
fistl
adcl
in
sbb
ss
xchg
pop
and
jecxz
inc
add
lods
stc
lret
add
xor
sub
data16
add
sbb
cwtl
push
icebp
and
inc
insl
pop
test
ja
jno
hlt
jbe
mov
and
into
push
es
ret
cmc
loope
ds
mov
push
inc
mov
enter
mov
sub
sahf
lret
xchg
faddl
add
pop
ret
shll
cmp
adc
rclb
pop
pop
sub
pop
jno
push
mov
xor
movsb
pop
adc
inc
inc
jge
aad
xchg
leave
jo
loop,pn
mov
js
pop
loope
rcll
push
call
iret
push
in
and
cs
inc
mov
cmp
mov
clc
bound
and
cmp
lret
loopne
addr16
or
fsts
and
clc
and
push
je
sbb
ret
int3
sbb
dec
mov
lea
scas
adc
and
push
pop
pop
ljmp
xchg
cmc
aad
xchg
sub
std
xchg
xchg
ljmp
and
push
and
pop
and
addr16
fcomip
dec
aas
in
add
shll
nop
xor
mov
pop
lahf
cwtl
loop
icebp
nop
incl
daa
fistpll
int
inc
pop
jo
insb
add
sub
sub
mov
out
xor
cmp
jmp
pop
adc
outsb
or
jo,pn
fldz
add
loop
es
negb
dec
fsubrl
add
xlat
xchg
jae
cmp
cmp
dec
push
testl
loopne
or
jge
pop
mov
hlt
inc
xor
lock
out
xchg
inc
push
mov
das
aam
inc
mov
addr16
jl
xor
in
lcall
xorl
pusha
cs
or
push
adcb
add
out
jb
push
add
pop
ret
mov
ret
mov
push
std
rorb
cmp
push
add
outsb
mov
or
hlt
mov
add
cmpl
push
outsl
add
test
hlt
jle
fsubp
xor
das
xchg
iret
test
xor
movsl
hlt
dec
pop
mov
or
notb
cs
or
add
lahf
ljmp
dec
cltd
es
cmp
adc
dec
sbb
repnz
lret
jno
mov
xor
jle
mov
mov
pop
push
adc
jae
cmpsl
std
push
movsl
je
inc
popf
inc
fstp
scas
into
xlat
mov
dec
iret
mov
sub
cmp
popf
add
push
scas
cmp
enter
cli
sti
loope
bound
fistl
cmp
int
xor
jecxz
jo
mov
cld
mov
insb
inc
fsubs
add
push
and
push
sub
or
scas
or
jbe
stos
int
movsl
inc
enter
mov
pop
div
fisttpll
or
lcall
mov
sbb
icebp
xchg
sti
fmuls
jbe
push
int
jbe
pop
lods
stc
dec
ret
orl
sub
rolb
push
dec
mov
sbbb
push
sti
dec
inc
add
xchg
jle
push
out
mov
aaa
and
gs
and
or
push
nop
test
push
arpl
aam
jecxz
lret
pop
add
jge
sar
cmpl
add
arpl
fldenv
jge
pop
xor
test
daa
mov
stos
out
jle
repz
jno
fsub
push
popa
dec
rorl
inc
inc
cmp
push
pop
xorl
xchg
mov
jne
int3
fisttps
xchg
sarl
pushf
xlat
aas
and
rcrl
jno
jecxz
fwait
or
ds
js
ja
jne
pop
cmp
push
es
dec
daa
inc
adc
lea
int3
mov
lea
fcmovnbe
cmp
pop
xchg
sbb
mov
adc
mov
mov
das
cmp
inc
insb
sub
pop
or
inc
scas
outsb
mov
add
sub
fisubl
lahf
in
push
xor
fnstcw
and
sbb
ds
loop
test
cmc
mov
daa
cmp
aad
lock
aam
dec
movsb
and
or
pop
jnp
scas
inc
push
ret
stc
fsubs
or
iret
and
cmpsb
cli
jb
sub
fnstsw
mov
aad
pusha
addr16
xor
cmp
movsl
mov
pusha
popa
fldt
or
inc
out
adc
push
ret
push
xchg
jmp
adc
cmc
aad
out
mul
xor
push
dec
ds
pop
test
pop
mov
nop
jb
xor
jns
mov
sbb
subb
and
mov
addb
jl
daa
inc
dec
pop
arpl
mov
imul
xor
arpl
sub
pop
movsb
les
pop
lret
scas
mov
cld
mov
aas
loop
dec
int
jmp
fldcw
sub
mov
mov
cwtl
push
mov
xchg
jbe
xchg
pop
xor
insl
ret
push
mov
icebp
fldl
dec
arpl
and
addb
into
pushf
fucomi
add
inc
push
xor
into
outsl
ja
loopne
in
dec
push
andl
pop
aam
ss
dec
dec
out
inc
ret
loop
xor
push
int
imul
adc
pop
ja
add
push
pop
inc
pop
mov
mov
sbb
and
ljmp
repnz
es
cld
adc
or
xor
insb
sarl
movb
jmp
fs
cwtl
loope
adc
add
cmp
push
dec
add
inc
pop
push
andb
les
mov
dec
cmc
clc
leave
fbld
mov
sbb
and
dec
and
adc
cwtl
fisttps
cld
lods
pop
adcb
jb
mov
cltd
push
add
adc
jo
add
add
sub
xchg
jno
inc
psubsw
call
jecxz
mov
int3
cwtl
in
scas
dec
inc
pop
shrb
bound
cmpsl
cmp
jb
nop
mov
cmp
repz
int
add
adc
or
sbb
aad
mov
xlat
aaa
jne
adc
pushf
inc
add
xchg
stos
cli
dec
mov
adc
cmp
arpl
and
or
sub
fs
leave
jns
adc
inc
and
dec
push
cs
shll
mov
push
pop
std
sahf
imul
out
mov
cmp
shlb
add
inc
imul
mov
dec
into
lahf
lds
sbb
jno
cmp
loop
test
cmc
loopne
stos
lods
lods
enter
out
arpl
add
xchg
std
ret
mov
jecxz
pop
js
mov
pop
sbb
out
pop
xchg
test
scas
je
rcll
push
loope
inc
sbb
test
fildll
xchg
mov
mov
sti
inc
mov
pop
addr16
push
ds
mov
shll
popf
adcb
lock
mov
pop
or
lret
pop
xor
fdivrl
call
in
jge
sbb
and
cmp
popa
and
mov
jmp
movsl
das
jae
xor
shlb
mov
push
jecxz
pop
push
xlat
jl
out
mov
pop
int
dec
or
dec
jnp
sahf
filds
idivb
test
scas
call
and
and
or
dec
pop
push
pop
pop
sub
pop
loope
jle
shlb
iret
and
lcall
scas
mov
mov
mov
mov
xchg
rcrl
movsb
pop
sub
rcrl
push
orl
pushf
cvtpi2ps
or
pop
inc
adcl
inc
data16
mov
addr16
sub
in
int3
ficoml
push
xlat
push
xor
xchg
cmpsb
mov
cmp
adc
mov
out
push
add
jmp
es
cmp
dec
lcall
and
arpl
lds
xchg
jae
fbstp
push
dec
xchg
inc
push
sti
test
cltd
iret
mov
sbb
sub
int
xchg
je
ret
cmp
jge
aad
sbb
test
imul
arpl
popf
sub
lret
xchg
sti
cmp
inc
imul
pop
aaa
mov
push
lds
jmp
arpl
xor
outsl
dec
adc
or
mov
or
sahf
cmpl
jb
mov
sbb
ljmp
cmp
sub
adc
pushf
jp
or
shr
pop
mov
add
mov
mov
pop
mov
test
inc
inc
adc
xor
push
into
sub
jmp
pushf
jge
push
mov
cmp
mov
sbb
or
cltd
pop
adc
out
ficoml
sbb
add
dec
push
and
sbb
cs
xchg
mov
or
iret
cmp
or
dec
lock
or
mov
jno
imul
repz
fbld
mov
pop
iret
and
push
daa
dec
pop
dec
jns
pushf
push
lea
pop
dec
xor
repnz
stc
shll
aad
xchg
in
sahf
push
lcall
jg
push
xchg
ljmp
and
test
je
mov
mov
out
pop
jl,pn
mov
rolb
ljmp
mulps
cs
xchg
stos
rcr
sbb
mov
stos
gs
movsb
and
adc
xchg
xchg
test
stos
xchg
icebp
cmc
add
std
fucomp
in
mov
repz
jne
mov
les
movsb
in
rorb
and
jne
mov
xchg
sbb
mul
lods
int3
push
dec
loopne
mov
popa
jmp
xchg
cld
cmp
fucomp
lds
and
loop
or
adc
dec
test
inc
push
adc
outsl
dec
int3
arpl
cltd
aam
mov
orb
lods
mov
loope
scas
mov
shrb
or
test
shlb
cmp
pop
hlt
pop
sbb
adc
out
cltd
push
or
aas
rcl
repz
add
stos
mov
sbb
mov
jge
sub
lcall
pop
adc
sbb
loopew,pn
jne
jb
xor
sub
and
js
fdiv
mov
adc
js
pop
sub
ds
jp
jg
sti
in
jp
mov
push
imul
sub
xor
mov
in
test
push
std
out
inc
dec
dec
aad
jne
and
mov
mov
mov
mov
jl
hlt
jnp
xchg
cmp
cmp
pushf
aaa
cli
les
jl
or
ret
sub
fs
dec
lret
leave
jnp
js
out
jae
pop
mov
std
aaa
pop
pop
scas
jl
lds
stos
mov
mov
jno
mov
inc
outsb
iret
out
stos
mov
mov
jl
sub
and
aam
push
push
aaa
out
pop
push
mov
loop
and
iret
in
into
sbb
adc
xor
cmp
dec
subb
sub
mov
jae
cmpsb
cltd
inc
rclb
sahf
mov
cmpsb
out
sub
fsubl
in
mov
je
testl
out
mov
push
sar
iret
lea
push
push
aas
mov
cmp
fimull
or
or
xchg
insl
sub
ds
inc
ret
adc
mov
or
inc
mov
sbb
stc
sbb
fisttpll
sbb
scas
pop
push
and
cmc
addl
sub
xchg
mov
dec
ret
gs
sub
mov
bound
loopne
mov
mov
cmp
out
add
mov
sbb
inc
xchg
inc
xor
stos
or
dec
xchg
test
sbb
fists
mov
push
xchg
lds
sbb
test
mov
lock
in
or
push
stc
lds
push
adc
pushf
movsb
ljmp
mov
xchg
mov
test
inc
insb
mov
jl
cli
xor
jge
popa
cltd
test
adc
xor
mov
and
loop
inc
mov
jp
iret
mov
ret
sbb
push
movsl
movsb
add
cmp
pusha
aas
icebp
mov
leave
lods
shrb
ret
add
lret
sbb
aas
nop
fbstp
out
aam
pop
mov
cmp
data16
xlat
mov
icebp
push
push
in
ret
dec
jp
test
out
add
dec
mov
push
mov
out
pushf
pop
popf
xor
pop
xchg
or
mov
mov
sbb
cmp
arpl
cmp
adc
out
iret
add
jl
dec
pop
push
lds
aam
hlt
push
enter
hlt
arpl
cmp
das
mov
pop
mov
in
popf
mov
inc
nop
lahf
jb
stos
adc
push
xchg
sbb
out
mov
aad
in
pop
adc
jb
adc
mov
sbb
lcall
out
adc
sub
sbb
sbb
iret
mov
bound
push
pop
out
jo
hlt
mov
push
xchg
dec
cmp
sti
mov
adc
mov
jnp
adc
mov
inc
jnp
push
stos
icebp
adc
mov
out
mov
call
out
dec
mov
adc
push
test
pop
inc
cltd
jno
mov
int3
mov
add
imul
stos
icebp
mov
arpl
rclb
or
mov
js
adc
sbb
incl
notb
repnz
lds
mov
out
je,pt
test
xchg
addr16
out
insl
out
outsb
xchg
jae
xor
xchg
nop
jne
sahf
rcr
sub
out
jmp
add
sub
loop
adc
sub
jp
mov
mov
je
sbb
int3
mov
flds
xchg
inc
inc
mov
mov
scas
sbb
mov
and
sbb
sub
adc
call
push
lods
pop
fs
mov
sub
and
or
je
iret
sbb
loopne
jmp
ja
jmp
cltd
and
lods
xor
dec
adcl
insl
dec
mov
pop
jge
and
and
sub
pushf
fadds
dec
push
push
adc
cltd
ds
pop
inc
imul
out
pushf
test
es
cmp
outsl
repz
dec
push
rorb
cli
sarb
inc
pop
or
push
outsb
inc
lea
xchg
pop
sbb
inc
xlat
movsl
inc
cmp
cltd
xor
mov
pop
repnz
dec
or
pusha
mov
std
push
mov
sub
xchg
hlt
sbb
push
pop
sub
jle
int3
sbb
out
add
pop
or
jge
ret
or
pop
sbb
sti
sub
jb
icebp
mov
popa
ss
idivb
cmovo
testl
es
jecxz
inc
or
dec
movsb
add
addr16
adc
rcrl
mov
int3
fsubrp
jns
es
scas
gs
add
daa
inc
je
push
fs
stc
cmc
mov
xor
mov
sar
fidivl
jo
xchg
mov
lock
lea
add
push
idivb
cmp
jge
xchg
lods
mov
xor
ret
dec
inc
insl
movsb
repnz
in
ss
mov
mov
push
sub
pop
push
inc
or
pop
mov
cmp
sub
js
add
mov
adc
mov
mov
es
and
pop
mov
insl
adc
ljmp
jecxz
out
call
loop
dec
cmp
ja
pop
bound
addr16
pop
shl
push
pop
xchg
fstl
jae
ret
cmp
add
imul
cmp
out
daa
and
adc
fdivl
inc
mov
lock
add
or
rorl
push
hlt
incb
cmp
sub
xchg
or
shlb
enter
jmp
xor
pop
das
inc
push
fdivrp
icebp
lock
test
mov
popa
add
mov
or
movsl
sub
shll
mov
jge
loop
mov
mov
mov
scas
fcompl
xor
mov
mov
in
js
mov
add
cmp
lds
push
pushf
inc
pop
xchg
in
insb
mov
jns
dec
aaa
dec
push
pop
inc
fs
pop
lret
mov
mov
addb
push
imul
sbb
in
aad
mov
lahf
mov
pop
clc
dec
pop
vpsubsw
cmpsb
ja
das
sub
test
xchg
cmp
rclb
inc
jne
jb
lods
or
mov
xor
outsl
rorl
mov
sti
mov
inc
cli
add
in
mov
test
jnp
repnz
xchg
xor
mov
add
xor
pushl
sub
test
lret
xor
mov
xchg
sub
into
aas
and
sahf
clc
and
jbe
or
lret
adcb
adc
push
inc
mov
aas
sbb
sbb
imul
dec
fstpl
add
push
mov
pop
mov
fnstsw
lcall
xchg
fdivl
cmp
nop
jl,pt
sbb
adc
push
jne
inc
aad
pop
xor
sbb
cli
sti
push
add
jl
xor
add
pop
xchg
mov
test
lahf
pop
popf
sbb
mov
test
cld
sti
aam
loop
sub
outsb
sbb
sbb
mov
pop
sub
nop
pop
ret
cmpsb
js
xor
bound
cwtl
dec
into
pushf
rorb
cmp
mov
cmp
daa
mov
rcl
leave
sahf
xchg
es
jae
sbb
cld
pushf
clc
insb
push
cld
cmpsl
and
push
push
sub
pop
inc
pop
cs
and
call
push
push
and
mov
bound
je
popa
lret
mov
xchg
sub
int3
jnp
aaa
jl
jp
cwtl
movsl
jb
in
into
inc
pop
repz
cli
imul
mov
hlt
fdivrs
mov
sbb
xor
imul
icebp
scas
add
test
jae
inc
xlat
fisttpl
sbb
aad
fnstsw
scas
rclb
push
test
test
or
jnp
add
mov
mov
inc
mov
mov
sub
xchg
sbb
add
adc
and
xor
int
sub
pop
out
jmp
jae
or
nop
ret
mov
fdiv
in
sbb
cmp
and
push
cmp
cmp
adc
cmp
ret
mov
cmp
je
sub
sbb
lds
fimuls
mov
push
pop
push
lds
fildll
loopne
xchg
ret
aad
cmpsl
xchg
cmp
mov
mov
mov
sahf
dec
ds
leave
sub
call
pusha
test
add
in
pop
test
fs
and
mov
sbb
sbb
or
les
jnp
or
pop
test
cmpsb
xchg
lods
sbb
arpl
xlat
lds
push
rcl
mov
mov
sahf
insb
pop
pop
in
jmp
sub
loop
add
inc
dec
cmpsl
mov
dec
push
leave
test
movsl
leave
into
sub
repz
or
and
lret
push
dec
or
out
and
or
es
adcb
sti
or
mov
cmp
aaa
outsb
sub
cmp
xchg
pop
in
add
dec
mov
cmp
push
ss
ljmp
jle
lock
das
push
out
sub
mov
inc
int
jmp
mov
dec
testl
ds
cmp
in
adc
imul
es
jmp
jle
xor
or
jo
jns
int3
lea
clc
in
lods
dec
jne
daa
test
jbe
leave
sbb
pop
lcall
xor
out
call
xchg
dec
push
je
pushf
xor
xor
fwait
mov
adc
pmaxsw
or
adc
add
add
mov
mov
adc
inc
shlb
imul
out
movsl
insb
push
jnp
negl
stos
or
sub
outsb
out
add
fdiv
jae,pn
scas
outsl
or
cmc
mov
inc
daa
clc
aad
les
xchg
neg
scas
dec
pop
or
push
stc
push
daa
shr
nop
mov
pop
xor
cmp
js
imul
fimuls
cmpsl
jg
sub
push
inc
cmpsb
ficoms
mov
xor
insb
mov
jmp
hlt
pop
mov
push
add
pop
add
pop
xcrypt-cfb
cmpsl
and
test
mov
daa
fistpl
xchg
or
pop
iret
jmp
daa
fs
subb
pop
jge
idiv
test
sbb
in
or
lret
popf
cmp
sarb
shlb
push
xor
adcb
inc
and
je
add
and
jl
xor
inc
adc
mov
inc
fsubrl
pushf
dec
in
popf
sbbl
cli
push
push
jg
lahf
idivl
xchg
sbbb
loope
out
fldt
push
stos
std
mov
push
xor
lods
dec
and
cld
sti
inc
std
loope
mov
xlat
dec
ja
adc
inc
mov
cmpl
sbb
ja
push
popf
add
and
lds
sub
xor
adc
data16
jne
leave
mov
call
lods
mov
lret
and
adc
xor
add
fsts
xlat
loope
jge
xor
push
mov
je
pop
add
jmp
add
dec
xlat
cmpb
cmp
outsb
adc
test
push
inc
shll
fdivr
arpl
dec
sub
stc
outsb
enter
cs
daa
xlat
test
fstps
outsl
icebp
aaa
test
testl
or
jl
sbb
scas
into
jge
cmpl
cmp
fistpl
push
popf
insl
insl
es
leave
in
sahf
or
mov
xchg
pop
ja
xchg
std
dec
add
clc
mov
int3
pop
add
fistl
xchg
mov
mov
dec
mov
in
push
popa
fnstcw
mov
sahf
and
jg
outsb
pop
icebp
push
mov
xchg
ficoml
shl
test
loop
mov
out
pop
sbb
fnstcw
fs
sbb
add
push
mov
cmpsl
ficoml
push
mov
das
filds
shrl
lahf
mov
mov
dec
leave
push
or
lret
push
pushf
test
and
sbb
test
jbe
scas
scas
sbb
adc
into
in
mov
lcall
in
incb
mov
pop
clc
pop
sti
jge
mov
adc
mov
push
shl
mov
mov
in
sub
mov
mov
pop
arpl
test
sub
lods
mov
mov
mov
cmp
stos
out
xor
mov
ljmp
out
stos
je
rclb
dec
mov
sbb
inc
data16
cmpsl
inc
mov
mov
xor
sub
mov
push
push
mov
aaa
rorl
dec
movsb
lcall
pop
fadd
and
test
mov
add
adc
add
mov
sti
and
dec
les
xor
mov
cmpsl
push
in
jno
inc
mov
xor
fnstenv
fdivr
cltd
test
push
cmp
popf
adcb
mov
test
adc
rcll
out
movsb
mov
push
leave
lret
xor
test
rcl
sbb
push
idiv
scas
mov
mulb
repz
mov
in
add
adc
jge
inc
ss
mov
pop
jp
and
sub
dec
jle
je
lods
jmp
and
cmp
push
int3
mov
mov
jl
jb
stc
jle
sub
mov
fwait
insl
mov
hlt
out
cld
mov
arpl
xchg
add
and
cmp
push
les
adc
ret
sbb
mov
xor
orb
andb
jb
arpl
inc
cli
fnsave
lcall
movsb
jae
mov
imul
adc
dec
adc
or
adc
loop
xchg
rorl
xchg
jnp
or
movsb
out
inc
mov
pop
mov
cmp
xchg
pop
sub
xor
inc
mov
inc
xor
lea
mov
movsb
out
in
jmp
jbe
ficomps
aad
test
jge
mov
repz
jnp
mov
jmp
imul
xchg
ds
aam
stc
jne
xor
pop
es
inc
test
and
jo
in
jae
push
enter
test
aas
cmc
inc
rolb
test
icebp
enter
test
mov
ljmp
and
aam
aas
in
clc
not
mov
lods
cmp
xchg
jbe
outsl
sbb
mov
arpl
jne
dec
ret
shl
sub
push
jecxz
sub
dec
jmp
les
fisttpl
fistpl
jmp
xchg
loop
adc
cmp
aaa
pop
dec
jge
xor
add
inc
mov
rcrl
jne
ja
loop
mov
lock
cmp
cld
cmpsl
mov
data16
lods
sub
iret
xchg
mov
in
aam
sub
pop
inc
ficoms
jno
add
andb
jge
push
arpl
mov
and
fists
into
xor
inc
enter
repz
jmp
les
dec
cld
cmp
pop
aad
lret
testl
pop
stc
cmc
pop
shr
pushf
pop
mov
cmpsl
push
push
mov
jecxz
loopne
jp
movsb
mov
push
call
popa
lods
mov
mov
pop
mov
sub
mov
inc
mov
sub
shlb
jo
lock
ljmp
cmc
sti
xchg
mov
mov
fisubrl
add
mov
or
push
dec
xchg
push
xor
or
sbb
in
repz
stc
call
adc
or
sub
adc
fwait
jmp
cmpsl
sbb
add
mull
stos
lcall
lds
jns
mov
loope
mov
xchg
out
repnz
xlat
or
cmp
mov
dec
inc
hlt
mov
mov
sarb
jbe
sub
xor
ds
pop
add
xchg
icebp
push
lret
es
xchg
jbe
daa
lret
adc
cmp
jb
pop
subl
cmpsb
aad
ficoml
mov
ret
lods
push
adc
xchg
insl
lods
pop
sub
addr16
or
inc
add
add
ss
push
ljmp
out
jo
adc
outsb
or
inc
push
imulb
faddl
cld
imul
add
and
fwait
cmp
lea
movsl
add
xor
fs
adc
dec
fcmovnu
or
push
shl
imul
sbb
in
in
xchg
lahf
xor
mov
js
cmpsb
push
cmc
in
push
or
inc
mov
lcall
xchg
xchg
clc
sbb
xor
pop
adc
jne
and
pop
bound
arpl
mov
cmpsb
insb
dec
dec
push
mov
xchg
xchg
jns
mov
daa
jge
xchg
jecxz
scas
inc
ds
jle
jg
mov
dec
jae
cltd
out
ret
movsb
jmp
out
mov
xor
rolb
adcl
pop
not
inc
fstpt
in
add
and
lahf
clc
jne
cmp
mov
daa
rolb
call
arpl
mov
jno
mov
sbb
mov
ljmp
mov
cmpb
sar
cmp
xor
hlt
xchg
cmpsl
in
cltd
sbb
add
and
lret
or
fwait
not
loopne
sbb
les
inc
adc
and
mov
jae
sahf
outsb
or
repnz
mov
pusha
push
std
es
aam
cmp
sbb
mov
mov
test
insb
mov
or
jl
adc
adc
pop
dec
leave
inc
cmpsb
push
ljmp
in
sahf
sbb
jp
nop
add
cmp
nop
jecxz
xor
cmp
shll
mov
repnz
pusha
jae
out
mov
sarl
push
movsb
adc
imul
mov
loop
sub
fstl
sub
cmp
pop
sbb
mov
ficomps
lods
or
mov
int3
xor
repnz
xor
jae
adc
mov
jbe
mov
jmp
ljmp
xchg
or
addb
test
imul
lret
rcll
or
scas
mov
or
add
ficoms
mov
mov
dec
adc
data16
daa
ja
jbe
out
movsl
bound
sub
ss
pusha
mov
adc
insl
fwait
inc
rclb
pushf
add
and
sahf
xchg
dec
jp
and
xor
push
adcl
pop
stos
aad
pop
xor
dec
jp
lcall
or
sub
int
notb
fstl
stc
push
xor
inc
xor
mov
push
in
dec
popf
repnz
cmp
fistpl
xchg
cmpsb
pop
mov
pop
dec
out
inc
dec
cld
xorb
mov
enter
mov
dec
sbb
push
mov
in
rorb
loop
xchg
mov
jmp
mov
out
push
stos
clc
pop
sbb
shlb
test
cmp
xor
pop
cmp
mov
xor
jb
sub
push
pop
aad
popa
mov
call
add
and
mov
sarl
stc
mov
add
fimull
in
lcall
inc
jmp
jg
mov
dec
push
sbb
pop
push
push
dec
mov
or
mov
mov
jecxz
popf
cmc
mov
mov
inc
cmp
sbb
add
cmp
addb
stc
or
mov
out
pop
cmp
mov
cmpsb
cmp
ja
xchg
fcmovnbe
aad
sahf
imul
push
jnp
sbb
pop
mov
xor
repnz
stc
call
push
and
adc
ret
mov
mov
mov
and
push
lret
pop
pop
lcall
int
xchg
add
xchg
das
inc
or
pop
mov
in
iret
pop
cmp
js
hlt
movsb
in
fldcw
in
sbb
push
and
or
and
scas
push
mov
push
jae
out
cmp
add
test
pushf
pop
and
mov
fisttpl
loopne
xor
aaa
xchg
es
cmp
push
cmc
hlt
pushw
xchg
adc
xchg
mov
add
mov
lahf
ds
aad
scas
roll
popl
adc
aad
or
outsl
icebp
ds
push
push
jecxz
mov
xlat
je
pop
inc
mov
daa
sub
loope
lods
int
jno
jg
push
daa
adcb
mov
mov
mov
es
inc
cmp
xchg
fsubl
popa
ret
in
jne
xor
dec
push
loop
lods
rcrl
inc
xor
cltd
xor
xchg
loop
inc
aad
cmp
dec
inc
inc
call
mov
pop
xchg
mull
xchg
dec
dec
inc
icebp
fldl2t
jl
gs
push
movsb
scas
pop
jmp
xor
aaa
lret
push
in
dec
maxps
mov
adc
pushf
out
popa
shr
orb
push
nop
mov
in
add
scas
test
jl
int3
in
mov
cmp
into
pop
sub
mov
jmp
add
loope
lret
jb
add
pop
push
jo
xchg
xchg
mov
hlt
push
insl
add
repnz
stc
aas
and
arpl
jg
lcall
dec
pop
es
mov
outsb
inc
dec
ret
js
negl
lahf
fdivr
dec
jae
gs
add
pop
xchg
out
cmp
mov
xchg
dec
jo
inc
mov
or
sbb
and
mov
dec
nop
call
ss
jmp
push
lret
fstpl
fdivrp
xchg
incl
dec
sub
mov
dec
out
adc
or
jo
pop
rolb
mov
inc
lods
loop
mov
aaa
or
push
pop
insb
cmc
jecxz
jo
out
fadd
jae
lods
and
pusha
sub
sub
cmp
and
push
mov
inc
cmp
in
push
inc
xchg
or
sarb
inc
mov
push
adc
fld
lds
inc
lods
lds
pushf
and
inc
add
pop
mov
mov
dec
mov
mov
aam
dec
cmp
push
push
in
lock
ss
add
stc
jo
test
mov
lret
pop
lret
std
pop
incl
addr16
repnz
add
dec
stos
mov
xchg
shll
std
bound
cmp
ljmp
inc
cmpsl
dec
lods
inc
outsb
mov
dec
scas
icebp
pop
pop
push
lcall
shll
jae
push
sbb
out
fstl
clc
cmc
sbb
push
popf
pop
xor
sub
testb
pop
ret
bound
rol
les
out
cmc
pusha
and
jle
fldenv
stc
adc
mov
jp
jno
hlt
adc
iret
jp
push
add
addr16
and
out
pop
lret
cwtl
pop
add
or
xlat
test
mov
jecxz
hlt
mov
push
and
xor
out
cmpsb
out
scas
add
mov
cmp
xor
xor
sbb
sub
int3
leave
xor
jmp
pop
and
add
faddl
lods
mov
and
push
push
xor
imul
or
and
push
popa
push
dec
popa
adc
aam
push
xchg
mov
sub
jns
or
loope
fisubrl
icebp
in
mov
or
sub
jge
and
adc
jl
stos
imul
into
jp
lds
insb
js
int
fcoml
into
aas
arpl
sub
cmpsb
and
xor
in
mov
jo
adc
mov
test
sub
in
out
bound
jbe
andl
jo
push
cwtl
leave
sbb
hlt
lcall
jle
stos
add
and
stc
and
lret
popl
std
insb
or
lret
dec
lds
mov
mov
mov
es
cwtl
or
cmp
call
loop
sub
es
into
push
push
mov
shl
fmull
pop
add
scas
cmp
incl
xchg
rol
outsl
jnp
mov
ljmp
xchg
mov
add
out
xor
jg
add
int
sbb
call
add
or
xor
jecxz
lods
mov
loop
add
outsl
push
cmc
movhps
or
pushf
pop
stc
cmc
rcl
daa
jbe
jbe
je
push
movsb
inc
add
stc
mov
gs
pop
dec
mov
test
ds
and
sti
out
adc
add
mov
sbb
mov
push
xorl
dec
sub
dec
push
lds
mov
sub
and
pop
inc
insl
lds
pop
xchg
sbb
mov
out
ljmp
pusha
xchg
test
out
or
movsl
adc
adc
mov
insl
and
imulb
call
in
iret
scas
adc
or
xchg
inc
mov
enter
test
sbb
sti
mov
sbb
lock
adc
pushf
loopne
xchg
sahf
dec
mov
sub
jno
std
je
mov
or
or
dec
clc
adc
lds
jnp
jnp
ja
ljmp
aam
push
hlt
popf
ja
dec
push
movsl
or
fmuls
fstpl
pop
mov
add
add
xor
sub
mov
jg
and
out
add
lods
out
push
sub
clc
or
or
ret
dec
pop
sbb
incb
jle
stos
jg
push
sbb
ss
sahf
in
cld
cmp
lret
xor
iret
xor
adcl
jmp
add
sbb
insl
xchg
fisttps
test
ss
pop
insb
jle
cmp
test
or
push
dec
jmp
loopne
mov
test
enter
into
stc
and
mov
sbb
or
adc
push
cwtl
dec
jl
enter
nop
xchg
cmp
jp
and
call
fsubrs
adc
jo
mov
loope
ds
xor
pop
mov
and
int3
and
jl
imul
das
arpl
out
outsb
jecxz
pop
cmc
inc
shll
inc
mov
cmp
outsb
adc
inc
push
mov
mov
pop
cmpsb
scas
push
in
scas
add
not
add
fstpt
popa
push
inc
addr16
inc
add
imul
movsb
xchg
inc
mov
dec
pop
test
sub
sub
pusha
and
or
loop
xor
adc
push
je
mov
jp
out
cmpsl
jle
icebp
inc
in
push
adc
mov
push
clc
sbb
push
dec
jae
mov
xor
xchg
into
sarb
mov
mov
jnp
lcall
ret
stos
cmp
jle
push
jecxz
cmp
fisubs
test
sub
ret
lds
in
xor
repz
cmp
aad
jle,pt
xchg
in
mov
pop
push
mov
call
and
xchg
shlb
add
mov
push
cld
cmpsl
es
call
or
pop
pop
dec
out
test
mov
lods
in
cmp
xor
add
adc
leave
jae
or
int
es
mov
xor
dec
adc
pushf
or
cs
mov
xor
push
inc
push
les
jnp
push
xchg
insl
fwait
cmovbe
das
outsb
push
int3
pop
pop
add
fstpt
add
xchg
das
out
movsb
pushf
pop
inc
mov
or
lods
add
in
pop
push
xchg
lret
das
xlat
fistl
push
mov
clc
push
jge
mov
lods
dec
xlat
fistps
pop
negl
add
clc
loop
shll
ljmp
sbb
or
in
jae
stos
xlat
ret
dec
lret
or
fsubl
adcl
ljmp
cmp
push
sbb
call
call
jb
out
cld
loopne
sbbb
pusha
aad
test
sub
jno
jle
sbb
cmp
stos
mov
cmp
xchg
rorb
sub
popa
iret
ret
add
dec
mov
shlb
xchg
sub
aam
inc
test
in
stos
mov
add
mov
enter
xor
movsb
inc
pop
adc
jnp
mov
addr16
push
lods
test
push
cmp
inc
jno
xor
lcall
in
lret
add
incl
sahf
mov
mov
arpl
nop
adc
test
dec
dec
fs
sbb
and
cmp
or
sbb
outsb
jg
mov
sbb
xor
notb
es
icebp
inc
jb
pusha
clc
cltd
imul
leave
cwtl
pop
ss
mov
loop
sub
sbb
stc
jne
in
cs
jb
loop
or
add
push
push
pop
push
inc
in
fiadds
mov
pmulhw
inc
mov
mov
adc
jb
add
xor
addr16
cmp
push
stos
inc
ds
xchg
ret
lea
push
adc
aaa
jnp
push
mov
nop
loope
stos
jmp
imul
jle
frstor
cmpsl
xor
sti
pusha
mov
adc
or
cmp
pusha
out
clc
jns
xchg
nop
jle
push
rorb
rcrl
mov
xor
mov
cmp
dec
jle
out
fstl
push
lea
loop
push
stos
les
ret
lcall
xchg
push
mov
orb
and
adc
insb
dec
xor
nop
lret
sbb
jle
into
minps
in
mov
xor
and
out
jecxz
pop
popa
and
aaa
xor
cs
pop
outsl
cmp
xchg
es
ss
add
cmc
test
sbb
pop
sahf
call
insb
loop
leave
fnstsw
rorl
pushf
pop
movsb
lea
imulb
adc
test
cld
out
hlt
hlt
leave
jb
lock
aaa
ss
icebp
lea
rclb
mov
cmc
mov
roll
xor
lret
pop
and
lret
fstpl
lcall
jb
jns
dec
add
ja
mov
inc
rcl
xchg
std
mov
mov
push
jle
pop
ds
in
and
dec
lret
aaa
mov
sahf
les
ret
hlt
aas
cmp
adc
cs
push
and
lret
insl
adc
jb
mov
dec
in
dec
pusha
pop
adc
hlt
fs
adc
push
aas
mov
in
adc
adc
lahf
xlat
das
and
ja
adc
and
and
std
ret
sub
mov
call
aad
jb
mov
mov
mov
lret
xchg
repnz
mov
sub
fistps
ja
mov
mov
lods
jle
sbb
cld
lret
inc
xor
jnp
lods
aad
adcl
mov
sub
jb
xchg
and
mov
sub
gs
lret
and
addps
or
push
push
shrl
jns
sbb
cmp
hlt
movsl
mov
fstl
jno
int
sbb
inc
pop
pop
push
fisttps
stc
stos
fsubl
fnstsw
call
es
out
faddp
push
and
mov
pop
test
nop
inc
out
jns
call
nop
and
rclb
mov
inc
cmc
jp
shll
shr
lret
daa
mov
movsb
jne
push
dec
jns
mov
jns
fstpt
mov
test
adc
sub
pop
imul
push
nop
fiaddl
jno
enter
ljmp
call
popf
pop
sbb
push
or
push
xlat
lea
insl
ror
cwtl
sbb
or
aam
dec
rorb
sub
sti
mov
stc
pop
shrb
shll
repz
and
push
mov
lcall
add
pop
inc
xchg
ret
mul
mov
jnp
dec
mov
inc
pop
sbb
adc
repz
sbb
enter
clc
inc
and
daa
fisubs
shr
data16
std
das
cmp
adc
lahf
xor
addr16
mov
aad
mov
sbb
int3
scas
jg
test
jbe
or
mov
pop
jmp
jmp
shld
xor
pushf
mov
mov
inc
mov
js
shl
mov
pushf
mov
inc
ret
arpl
mov
pop
adc
mov
jg
pop
jns
inc
mov
dec
mov
inc
rcll
pop
sub
movsb
imull
jl
jns
and
pop
pop
cmp
ss
add
shlb
xlat
mov
aaa
sub
push
push
mov
sbb
dec
jmp
out
xor
sahf
int3
fdiv
push
dec
push
mov
and
mov
arpl
mov
es
stos
mov
add
scas
cltd
mov
ds
push
xchg
sti
sbb
xchg
call
sub
adc
xchg
mov
in
movsb
pop
out
loopne
mov
fisubrs
add
enter
xchg
mov
xchg
or
out
mov
sarl
pop
out
test
flds
stc
loopne
pop
loopne
xchg
jbe
ja
adc
jne
scas
aad
and
jne
pop
push
fdivp
pop
cmp
xchg
xchg
and
adc
imul
outsl
mov
dec
xchg
mov
xor
aaa
or
in
pop
sbb
xchg
arpl
mov
xor
push
out
sbb
sti
jmp
mov
inc
test
inc
fisubs
sbbl
ss
lock
lret
cld
jnp
dec
sub
jmp
ljmp
in
fisubrl
and
inc
inc
lret
xor
or
lea
jmp
jae
mov
mov
jae
hlt
pop
in
mov
call
roll
out
add
mov
lret
and
dec
sbb
cmpsl
and
sbb
push
xor
movb
test
add
ret
cmp
imul
shll
pop
push
xchg
pop
mov
sarb
adc
pop
outsl
cmpsb
shlb
push
lock
mov
out
mov
add
imul
fldcw
add
push
add
xor
and
jo
fidivs
out
add
dec
cmp
dec
jmp
and
outsl
pop
out
and
xchg
pop
adc
pop
lock
test
add
sub
cmp
icebp
pop
lcall
dec
cmpsb
push
icebp
mov
xor
enter
insl
xchg
lcall
data16
mov
mov
lret
pop
mov
sbbb
in
and
mov
and
and
fists
and
jp
hlt
sbb
sub
cmovb
mov
fistl
cmpsl
dec
jle
xchg
scas
rclb
jp
inc
pop
stos
jo
mov
out
imul
adc
add
loop
bound
cmp
in
nop
xchg
mov
es
jl
je
lcall
add
imull
stos
sub
jae
imul
imul
repnz
sahf
or
enter
lods
daa
negb
or
jge
andl
pop
jb
pop
arpl
rcrl
sbb
test
shll
repnz
loope
daa
out
sub
test
mov
shl
fsubrs
test
push
lret
lds
or
mov
out
lret
or
adc
lret
xlat
push
sahf
adcb
mov
pop
adc
shll
and
into
fwait
les
or
clc
push
mov
outsl
mov
and
das
into
imul
mov
add
sarl
or
mov
jmp
adc
scas
repnz
cmp
cltd
sbb
add
dec
mov
mov
pop
pop
push
loop
adc
movsb
loope
mov
pop
cli
xor
fbld
std
push
rolb
fldenv
sbbl
sbb
or
scas
or
adc
or
mov
or
inc
pop
jae
adc
adcl
jbe
xchg
mov
ds
mov
push
inc
cltd
push
insb
sbb
rcr
jl
push
jae
sub
cmpsb
and
and
in
sub
sub
sti
fs
jle
jp
inc
mov
or
test
push
test
dec
mov
pop
ret
rorl
cmp
push
jmp
sub
repnz
jo
jp
shrl
inc
mov
adc
inc
pop
add
and
call
pop
out
popa
stc
popf
mov
sbbl
pop
packuswb
cmp
loope
jbe
insl
cs
jmp
sbb
lret
loopne
aam
pop
pop
clc
dec
leave
frstor
pop
cmc
push
in
ret
fistl
test
and
lds
inc
pop
mov
cli
rcrb
push
push
ret
push
scas
dec
cmp
aaa
lea
test
sbb
sbb
stos
fs
mov
jae
mov
sahf
das
cld
xlat
pop
add
pushf
or
xlat
jp
clc
push
push
cs
lods
pop
mov
jns
ss
push
call
jp
popf
mov
addr16
loop
pop
bound
dec
ja
and
add
mov
adc
mov
xor
loopne
or
lock
enter
jbe
jle
rolb
mov
out
lods
mov
or
sbb
add
mov
push
out
mov
mov
sbb
mov
idiv
jmp
and
add
aam
mov
jo
cmpsb
rorb
pop
pop
dec
ficoms
imulb
and
roll
xchg
dec
xchg
sub
aad
pop
stos
inc
ret
shl
xchg
jecxz
dec
jmp
jle
insl
jle
pushl
xor
addr16
dec
es
jecxz
arpl
or
out
inc
ds
aad
js
lea
out
mov
xlat
shlb
mov
in
arpl
inc
call
dec
dec
lret
push
shl
sbbb
xchg
inc
jl
adc
lret
repnz
jo
loopne
fidivrs
xor
mov
mov
pop
cs
pop
cmp
mov
mov
dec
jae
add
das
and
mov
rclb
cld
push
shll
sub
push
mov
out
addr16
and
inc
dec
icebp
lds
mov
add
inc
sahf
lock
dec
test
mov
call
sub
sub
fldl
jae
pusha
arpl
inc
cmpsb
push
dec
call
loope
xchg
scas
xchg
jge
lahf
rorl
fcom
ja
andb
mov
inc
fcomi
loope
or
jp
ljmp
cmp
pop
subb
sti
inc
or
mov
es
xchg
inc
rcl
sub
ret
shrb
cmp
fisubl
jnp
jmp
fwait
mov
cmp
xor
rcl
cs
popf
std
xchg
loopne
fists
adc
cmp
mov
cmp
daa
cmp
dec
push
mov
pop
xor
loopne
outsl
xor
out
and
jl
or
push
xchg
xchg
mov
inc
pusha
and
mov
rorb
inc
imul
mov
enter
sub
imul
push
adc
lods
dec
xchg
or
in
xchg
jae
push
mov
popf
cmp
xchg
aam
cmp
aad
insb
mov
xchg
sti
pop
in
lcall
mov
testb
cs
push
adc
mov
cmp
scas
xor
cmc
jle
aam
jnp
mov
sbb
and
adc
fdivs
pop
sbb
mov
data16
dec
jns
es
and
dec
stc
push
push
lahf
and
cmc
jmp
loopne
fists
rcll
lcall
mov
and
mov
jns
inc
mov
jl
or
rorl
sbb
pop
outsb
shrl
divl
xor
ret
sti
mov
sbb
lods
mov
push
mov
mov
sahf
cs
sub
lcall
lcall
mov
invd
cmc
test
lea
out
push
out
pop
repnz
add
repnz
xor
and
dec
dec
and
std
cltd
sti
sub
dec
sar
rclb
push
pop
into
xor
xor
or
imul
out
dec
sbb
sub
jno
push
fisttps
incb
sub
cmpl
jb
sbb
icebp
fsub
jg
ret
gs
fisubl
adc
ret
mov
push
pushf
mov
adc
out
ss
inc
add
mov
cmc
pop
xchg
xlat
daa
mov
dec
pop
push
pop
dec
mov
loope
lds
xchg
aaa
cld
iret
mov
cmp
mov
in
fsubs
xor
mov
insb
pop
nop
dec
inc
add
adc
les
sbb
stos
pop
add
inc
inc
pop
lahf
stos
sub
int3
fidivrl
fsubrp
xchg
add
and
xor
pop
cmp
rep
inc
cmp
nop
roll
xor
clc
int
fsubl
push
and
addr16
aam
mov
jns
jmp
xor
add
push
out
fadd
inc
add
jb
in
jbe
and
mov
aad
and
call
insl
sub
jnp
and
repz
rcll
or
decb
enter
sub
in
xchg
bound
sub
lods
jmp
cmp
or
negl
xor
sbb
das
lret
lret
out
stos
clc
cmp
cmpsb
cmp
rclb
push
outsl
bound
jp
sbb
jno
push
dec
mov
xor
in
xor
cmp
pextrw
xorl
in
push
xchg
sbb
es
daa
xor
mov
adc
fistpl
orb
mov
mov
aaa
push
and
sbb
mov
sub
and
pop
ljmp
out
push
mov
or
cmp
push
xchg
int3
daa
jbe
ffree
roll
add
insl
repnz
mov
cltd
xor
xor
mov
jae
scas
cmpb
int
push
sbb
out
mov
cltd
mov
cmp
sbb
sbb
and
cmp
add
sbb
inc
add
and
adc
sbb
fstpt
cwtl
push
xor
jne
pop
adc
xchg
das
jge
jp
push
popf
decb
cltd
mov
aad
and
popf
dec
inc
emms
adc
mov
dec
jge
inc
arpl
fdivs
jge
mov
sub
jae
dec
scas
jnp
das
std
and
mov
setp
sub
int3
dec
jl
push
jnp
fdivrl
jb
xchg
mov
movsl
sbb
dec
stc
inc
into
add
negl
rcr
out
scas
loopne
cld
cli
int
mov
mov
mov
repz
mov
call
mov
push
inc
into
pop
and
rolb
add
and
pop
push
xchg
stos
shl
xor
mov
pop
xchg
add
jno
das
js
dec
sbb
push
pop
xchg
pop
mov
scas
data16
aam
movsb
lock
mov
and
gs
or
dec
roll
mov
jge
pop
popa
inc
mov
pop
xchg
cmp
mov
out
mov
sbb
and
sbb
mov
xchg
pushf
ss
pop
testb
inc
fcmovnbe
push
sarb
push
and
push
pop
sbb
pop
mov
dec
sbb
jmp
nop
fcoms
insl
jne
cmpsb
mov
dec
leave
mov
inc
in
inc
sahf
mov
imul
push
popf
bound
add
fdivs
add
cld
int3
mov
fsubp
and
insl
adc
lds
xor
lds
push
out
push
pop
testb
xor
aaa
aam
out
dec
inc
add
loop
dec
push
hlt
sbb
push
jae
push
jne
data16
lods
lcall
jg
pop
lret
or
stos
fidivs
mov
iret
iret
and
jae
adc
sbb
repz
call
or
orb
cmp
js
shll
mov
cmp
xor
lods
mov
sub
loope
jbe
ret
mov
fs
fisubs
and
andnps
adc
in
jb
jl
fstps
shrl
sub
and
push
mov
cs
jae
je
mov
ss
push
pusha
cs
jo
out
mov
movsl
mov
pushf
fcomip
aad
leave
mov
iret
or
into
mov
sahf
mov
and
mov
adc
iret
pop
add
xor
fs
sbb
xchg
dec
mov
or
mov
lods
pop
out
and
mov
jmp
cmp
jae
in
cwtl
addr16
jle
lcall
outsb
sub
jb
adc
push
retw
daa
or
popa
fld
xchg
roll
jno,pt
aad
int
sti
xchg
cli
push
push
push
dec
or
cwtl
sbb
adcb
mov
push
mov
decl
push
cli
xchg
mov
push
and
mov
shll
mov
xor
pop
or
push
dec
mov
and
inc
mov
scas
and
lret
in
pushf
cltd
xchg
xchg
mov
fdivrs
cmp
and
cmp
cmc
ret
pop
cmp
xchg
fs
pop
push
fwait
subb
stc
lock
out
push
mov
add
mov
jmp
fsubl
es
icebp
fwait
gs
adc
fdivp
add
outsb
ret
call
loopne
rclb
roll
scas
cltd
xchg
pop
stos
jo
int3
xor
leave
data16
notb
and
lock
fwait
xchg
pop
push
shrl
jmp
mov
mov
nop
sbbl
or
int3
jecxz
jl
cmp
add
or
mov
lods
aad
or
xor
iret
stos
xchg
inc
lcall
mov
xor
sub
es
in
adc
in
mov
sbb
icebp
pop
pop
pop
cmpsb
adc
pop
fldl2e
jl
bound
jae
mov
dec
ds
mov
mov
ss
call
add
out
lods
std
dec
ss
ljmp
jae
lods
sub
mov
inc
lcall
mov
repnz
mov
sub
mov
mov
add
lds
xchg
xchg
insb
pop
mov
inc
push
mov
arpl
fistps
sarb
es
xlat
push
mov
inc
mov
fstp
in
push
dec
push
imull
or
mov
popa
in
cmp
xor
pop
adcl
es
ds
lahf
push
mov
rorb
mov
jp
sarb
add
mov
sbb
jp
pop
mov
les
or
add
icebp
xchg
nop
mov
sahf
push
inc
lods
lret
cmp
gs
jb
mov
divl
in
mov
xchg
push
sbb
cmp
sbb
add
mov
xchg
fs
jns
or
inc
xchg
jecxz,pn
cmp
push
and
rorl
or
inc
in
push
sub
jno
stc
jbe
iret
pop
or
dec
or
das
add
pop
cmc
cmp
sbb
and
out
jno
mov
test
les
jl
mov
inc
xor
mov
and
jae
dec
icebp
dec
inc
pop
xor
ret
cmp
repz
pushf
mov
dec
cmc
push
aas
dec
and
cli
xchg
stc
sub
mull
movsb
fidivs
cmc
popf
rcl
nop
mov
addb
popf
outsb
or
or
sub
out
mov
data16
sub
jecxz
fsts
mov
jmp
push
movsb
popf
and
and
sti
dec
push
pop
adc
and
push
ds
pop
in
push
pushf
xchg
sub
ljmp
jno
movsb
sbbb
or
jnp
inc
rcrl
xchg
jns
dec
adc
in
inc
leave
imul
movsb
scas
sbbb
test
pushf
out
jge
push
repz
cmpsl
adc
xchg
inc
pop
inc
test
mov
sbb
lret
imul
pop
mov
cli
adc
mov
lret
cmp
mov
jge
scas
aaa
sbb
lcall
ljmp
nop
aas
mov
mov
sub
dec
adc
out
mov
mov
test
filds
out
mov
push
xchg
lock
ret
xchg
or
ret
sbb
rcll
jecxz
shll
punpckhwd
jns
leave
or
or
cmp
mov
iret
mov
xlat
roll
mov
xchg
scas
cmc
sub
cmp
aad
xchg
popa
xchg
jle
cmp
inc
popf
fdivs
jl
inc
push
mov
pop
push
cmp
add
jmp
fbld
pushl
test
inc
or
or
add
dec
sbb
hlt
mov
std
or
jmp
and
lods
xlat
jb
xchg
jle
iret
les
xor
jp
or
push
xchg
cltd
sbb
fcoml
mov
jne
insl
scas
arpl
lods
mov
or
jecxz
fisubrl
ret
shll
jmp
insl
bound
sbb
jle
cmp
shrl
add
jb
hlt
pushf
fisubl
outsl
fstpt
bound
add
pushf
andb
and
in
sub
mov
cmp
pushf
mov
out
push
jo
call
lods
ss
gs
incb
adc
inc
stos
dec
aam
push
pop
lods
shl
aad
cmp
and
push
divb
sbb
in
or
or
lds
mov
out
or
lods
mov
fsubrs
or
je
loop
std
jo
cmp
jo
jmp
jecxz
loop
rcll
mov
call
iret
mov
inc
push
jge
ret
ret
lret
xchg
jmp
in
ret
jp
out
cmp
add
add
loop
sub
into
call
test
mov
dec
dec
push
xchg
sub
mov
in
pop
stc
sub
push
jne
out
add
jmp
rcr
ret
sarl
ret
jg
fisttps
bnd
mov
loop
aam
in
mov
push
dec
stc
xor
divl
sub
sbbl
and
inc
lret
sub
das
mov
push
lods
add
idivb
mov
adc
ja
movsb
sub
xchg
sub
jp
adc
push
adc
cmp
xlat
mov
dec
ss
jb
leave
insl
push
mov
jmp
adc
mov
mov
mov
mov
mov
sbb
insb
adc
mov
ja
mov
movsb
jge
inc
fmuls
enter
ljmp
jae
inc
mov
mov
xchg
lcall
in
cmp
xchg
xor
mov
inc
repz
mov
orb
mov
mov
lret
nop
dec
mov
inc
cmp
mov
or
lahf
adc
in
push
sub
mov
sub
and
sbb
and
mov
mov
cli
push
sub
or
popa
jecxz
lds
lds
aaa
mov
jge
loope
jbe
cmpsb
ljmp
cmp
pop
dec
pop
adc
mov
movsl
pop
push
js
aad
mov
repz
fwait
scas
lods
ffree
jg
imul
mov
ret
sbb
loope
adc
lea
rorl
je
dec
mov
fildl
mov
ret
xor
and
cmp
and
pop
ja
inc
jg
outsl
in
add
fwait
mov
dec
sbb
xchg
or
mov
mov
adcl
test
xor
lds
fisubrs
add
scas
popf
ficoml
cld
test
pop
or
ds
ror
loope,pn
les
jmp
inc
mov
sbb
add
or
inc
pop
data16
cmp
rcrb
push
push
and
sbb
out
es
xlat
stos
pop
add
xor
out
daa
movsb
jbe
jp
outsb
inc
cmp
testl
adc
xchg
fbld
jae
adc
clc
enter
jp
pop
or
add
xor
add
sbb
mov
je
jg
pop
pop
push
test
jno
fwait
mov
add
xchg
inc
push
sub
gs
shlb
roll
jg
xchg
xor
jp
and
stc
addr16
in
jg
pop
mov
mov
mov
adc
int3
mov
repz
pop
cmp
call
jbe
lcall
aaa
sub
mov
ds
xchg
push
mov
cmp
imulb
mov
jo
loopne
mov
loop
loope
add
test
daa
mov
out
in
xchg
arpl
clc
movl
lret
mov
adc
mov
dec
jbe
or
jl
mov
loope
aaa
add
mov
hlt
in
scas
outsl
test
cmp
mov
pop
leave
pop
mov
xor
xor
pop
outsb
dec
pop
or
in
lret
pop
pop
sub
jmp
mov
dec
pop
pop
jg
jp
jbe
mov
xchg
scas
pop
mov
loopne
fildll
ljmp
ret
aaa
inc
or
int
inc
xlat
and
sbb
xor
fisubs
sahf
fmul
imul
aas
cmpsb
inc
and
xor
subb
xor
adc
mov
aad
xor
movsb
mov
and
xchg
sub
test
mov
pop
imulb
stos
ds
mov
nop
jb
ret
movsl
in
insb
xchg
mov
roll
inc
add
adc
xchg
fsub
add
push
ss
xchg
xlat
cmp
pop
jmp
adc
movsb
cmp
iret
incl
orl
icebp
gs
and
fdecstp
mov
mov
mov
pop
xchg
xor
xlat
sub
push
jmp
push
cli
or
arpl
mov
ss
jb
ljmp
and
test
xchg
es
nop
aas
or
xor
cs
int3
loopne
lcall
fwait
std
mov
jns
int3
add
dec
jbe
dec
or
outsl
xor
ret
inc
sti
and
out
cmpsb
int
ja
sub
cmp
cmp
loopne
xchg
in
cltd
inc
daa
popl
inc
add
iret
sub
lahf
je
not
adc
lds
out
dec
sbb
jp
mov
inc
stos
mov
pop
jne
adc
mov
dec
xor
and
cld
mov
mov
into
adc
sbb
lods
inc
jp
inc
jl
pop
stc
out
pop
mov
mov
and
or
ja
jmp
or
outsl
les
adc
out
inc
xchg
mov
data16
mov
repnz
sti
mov
xchg
pop
sbb
xchg
and
add
fmuls
loopne
push
orb
mov
ljmp
out
imul
imul
cwtl
mov
sbb
xchg
mov
push
popa
inc
rclb
add
push
add
cwtl
mov
pop
aaa
and
fstl
nop
sub
icebp
xchg
rol
inc
dec
mov
imull
cmp
xchg
or
xorl
mov
add
call
rcl
xchg
push
dec
scas
xchg
out
xchg
cmp
test
pop
mov
xor
adcb
mov
movsl
and
xchg
and
cmpsb
mov
mov
add
sbb
cmpsl
out
cmp
xchg
xor
in
dec
sub
inc
in
and
dec
je
push
pushf
lahf
lcall
pusha
in
repz
aad
push
enter
fisubrl
pop
push
jle
neg
sti
imul
mov
lret
xor
push
push
aam
out
cmc
push
xlat
mov
mov
icebp
in
enter
pop
inc
clc
test
data16
lock
stc
pop
sbb
faddl
pop
pop
xchg
shlb
sub
mov
scas
frstor
inc
andl
mov
into
mov
in
in
add
fdivrl
inc
pop
push
mov
repz
pop
dec
adc
push
xchg
mov
push
mov
dec
shrl
cltd
dec
pop
shrl
inc
lea
leave
add
push
or
mov
pusha
cmp
mov
jb
and
push
xchg
xchg
sahf
loopne
sub
cs
adc
repnz
mov
fmulp
jl
fmulp
lods
jmp
ror
jae
lahf
jl
iret
cmpsl
mov
adc
mov
or
mov
add
iret
clc
repz
sub
std
lahf
inc
dec
xor
dec
or
stos
mov
clc
mov
in
xchg
loopne
popa
mov
je
je
mov
and
icebp
ja
xchg
pushl
imul
push
xchg
push
popa
dec
jne
and
out
push
pop
mov
data16
push
mov
stc
cld
pop
cld
push
mov
test
fwait
and
xchg
cli
push
push
lds
cli
out
mov
aas
int
push
insl
mov
inc
std
sub
inc
cmp
std
mov
imul
mov
xor
ljmp
mov
and
lods
rcll
aam
push
inc
pop
movsb
outsl
in
mov
aaa
imul
enter
ds
aaa
and
push
adc
daa
leave
aam
dec
sub
lods
mov
jg
xor
xchg
add
je
fsubs
sub
push
in
aaa
fisttps
aaa
push
pusha
sahf
loopne
inc
pop
or
adc
stc
scas
inc
mov
and
cmovne
data16
repz
jb
aas
aaa
adc
std
int3
mov
enter
aas
adc
sub
push
fsubrl
xchg
lock
int3
mov
or
cmp
jb
shl
bnd
dec
mov
inc
mov
mov
decb
pop
lret
leave
mov
push
pop
lods
fstpt
ss
nop
push
jecxz
mov
movsl
jecxz
movsb
out
add
jo
in
sbb
jae
add
lods
aad
dec
lea
ret
mov
jnp
leave
das
push
cmp
icebp
ret
gs
or
sbb
lahf
shll
dec
push
dec
insl
jbe
and
mov
mov
pop
lahf
aas
fcomps
outsb
ss
cs
insl
cmp
pop
pusha
mov
out
xor
arpl
leave
sub
lret
test
mov
push
fdivp
test
ds
sti
dec
scas
sub
test
xchg
cmpsl
pop
std
xor
pop
je
push
push
insl
and
sub
jecxz
cmpsl
mov
add
aas
sbb
rorb
sub
lods
je
sbb
outsl
enter
push
fisttpl
sbb
dec
mov
mov
pop
cld
adc
cmp
cmp
int
push
inc
dec
mov
inc
xor
sub
lcall
out
fs
xor
sbb
cli
iret
imul
cmc
jle
push
inc
fadd
stos
push
test
jecxz
xchg
pop
sub
xchg
sub
lods
sub
movl
xchg
sbb
repnz
adc
and
lret
sbb
jns
pop
and
adc
mov
mov
and
aas
jb
lock
test
sbb
xlat
and
inc
add
pop
pslld
inc
push
fld
lods
loope
sti
ds
inc
dec
dec
cmp
adc
jmp
mov
int
mov
popa
in
out
inc
pop
dec
fdivl
xchg
mov
mov
mov
mov
repz
into
cmp
das
mov
sub
lds
les
sahf
xor
in
inc
repz
dec
in
mov
jge
jecxz
rep
lret
std
or
xchg
enter
xchg
jmp
stos
push
fucomi
push
enter
mov
xchg
f2xm1
je
out
sbb
notb
inc
ljmp
pushf
mov
sti
dec
mov
test
sub
xor
das
imul
pop
xchg
mov
nop
or
pop
cmc
xchg
das
imul
adc
mov
cmpsl
adc
xchg
lret
pop
lret
aaa
dec
xchg
jno
and
sub
dec
cmp
push
insb
sahf
dec
sbb
cmpsb
ret
cmp
repz
jl
cwtl
repnz
je
neg
jae
xor
add
add
lea
xchg
imul
xchg
inc
and
ljmp
mov
xchg
and
xor
mov
mov
lds
ficomps
cvtps2pi
fstps
outsl
push
out
and
mov
pop
aaa
nop
xchg
out
cmp
popf
clc
rolb
in
push
xchg
pop
jp
fiaddl
out
fldcw
in
clc
or
dec
mov
and
push
fwait
scas
mov
ljmp
or
frstpm(287
xchg
xor
adc
icebp
inc
xor
xchg
lret
aad
xorl
test
fnstsw
popa
pop
dec
ds
push
push
nop
clc
js
pop
mov
loop
jae
xlat
ja
lahf
pop
add
mov
jae
add
repnz
subb
in
sbb
push
pop
mov
push
bound
lahf
std
lea
fcoms
or
cmp
lds
sub
cmp
cmp
jae
jne
inc
jns
pusha
into
jo
fiaddl
pop
ljmp
aaa
icebp
adc
mov
insb
xlat
stos
push
sub
or
mov
les
inc
movsl
in
mov
pusha
push
xchg
pop
ds
das
iret
shll
cmp
push
loop
mov
shr
jle
out
les
add
xchg
nop
sub
mov
out
mov
or
xchg
fs
jne
jo
aaa
pop
or
push
out
mov
scas
mov
lea
mov
loopne
xchg
filds
imul
loopne
sbb
stos
inc
or
xor
mov
jne
pop
add
out
dec
movsb
repz
arpl
cmp
lods
push
dec
movsb
inc
sbb
jmp
jmp
and
addr16
xlat
sbb
mov
stos
inc
push
cmpsb
sub
pop
adc
jnp
insb
divl
cmp
add
jle
rcll
movsl
jnp
pushf
xor
cmp
lret
xor
out
inc
xor
mov
sub
mov
idivl
pushf
movl
jb
loop
add
push
sub
xchg
dec
dec
and
mov
es
jl
hlt
mov
pop
ficoml
iret
mov
adc
pop
fdivrp
pop
dec
mov
mov
inc
call
sbbb
in
mov
xchg
test
es
sarb
jle
xchg
dec
jbe
lods
mov
iret
add
push
push
in
ret
adc
cmp
jge
mov
mov
dec
xor
rorl
into
cltd
out
loope
xchg
xchg
hlt
mov
ret
dec
mov
cmpsb
pop
xchg
ror
cwtl
mov
dec
adc
imul
lds
xlat
xchg
out
push
xchg
sahf
adc
imul
popa
out
ficoml
xor
shl
sti
sbbl
inc
sbb
jp
divl
lahf
clc
addr16
es
pop
xor
mov
or
jg
add
inc
push
mov
fisttpl
cli
fidivs
xor
fiaddl
push
mov
lods
jl
mov
movsl
movsb
arpl
jb
sbb
lea
dec
mov
xor
lods
mov
jae
xchg
jl
lret
mull
fstp
pop
sub
popa
pop
sti
cmp
push
sbb
stos
push
cmp
sbb
shlb
fcmovnb
or
jns
pushf
adc
stc
pop
arpl
or
mov
and
dec
stc
insb
fidivrs
sbb
sti
popf
adc
dec
notl
xchg
mov
or
pop
fwait
or
push
dec
pusha
cs
inc
mov
push
in
mov
sub
rcr
lcall
jp
inc
xor
stos
mov
adc
stc
mov
sahf
shrb
jae
and
cmp
xor
mov
mov
in
in
insb
lds
iret
push
hlt
mov
xor
mov
xor
ds
subl
sub
inc
push
pop
sbb
mov
inc
and
mov
jle
out
inc
xchg
add
sbbl
js
jne
gs
jle
mov
ljmp
rcrl
adc
push
mov
rorl
pop
jp
sahf
fdivrs
pop
cld
sbb
xchg
sbb
lods
mov
push
push
fwait
shlb
shll
adc
mov
bound
imull
jno
lds
xchg
ret
xchg
idivb
push
adc
jnp
mov
sbb
xchg
cltd
das
push
shlb
in
mov
or
dec
in
in
push
mov
rep
inc
jne
add
add
stc
fwait
lods
xchg
or
repz
add
xor
sbb
mov
aaa
outsb
leave
sbb
lahf
cmc
das
out
aas
fsubrl
out
out
or
push
cmc
shll
push
scas
adc
arpl
lock
sarb
mov
adc
test
mov
daa
imul
add
jo
cmpsb
in
inc
sbb
popf
stos
xchg
inc
add
jbe
lret
lahf
sahf
sarb
imul
dec
pop
sub
shll
negb
int3
pop
sub
outsl
inc
mov
cmpsl
push
sahf
cmp
cmp
fwait
jle
mov
mov
xchg
or
movsb
imul
xchg
outsl
jg
mov
dec
fdiv
pop
add
popf
jae
lods
cmp
dec
lret
sub
add
ret
xchg
dec
mov
xor
test
push
arpl
int3
sub
add
mov
push
sti
les
mov
mov
test
test
sbb
shl
cmpsl
adcl
dec
push
repnz
fimuls
mov
shr
dec
ret
mov
rol
js
movsb
mov
aaa
movsb
dec
cwtl
mov
push
pop
inc
sbb
and
add
mov
mov
cmp
mov
stc
push
mov
push
or
push
and
shl
inc
jno
shlb
xor
add
adc
or
les
in
sub
mov
int3
cmpsl
and
cltd
pop
adc
and
jbe
bswap
mov
cmp
sbb
stos
xchg
mov
xor
and
mov
shr
insl
divl
xor
adc
xor
pop
cmp
xor
cmc
fimuls
in
jge
xlat
cmp
imul
dec
rep
push
mov
jle
inc
das
roll
jno
and
mov
js
xchg
cmp
es
sub
dec
repz
in
test
shlb
sub
into
or
jl
push
repnz
insb
push
push
dec
pop
shll
arpl
sbb
pop
in
add
shl
cs
shlb
pop
adc
or
ljmp
mov
out
in
inc
lcall
sub
push
jne
imull
js
sets
cs
pop
mov
cmp
dec
add
sbb
or
or
out
jle
scas
mov
out
ret
pop
repz
sarl
and
add
cs
lods
rclb
dec
orl
stos
jne
in
rolb
cmp
sbb
or
aas
pop
xor
push
ficoml
cs
xchg
scas
jne
sub
rcll
sub
sbb
mov
cmp
mov
and
ret
mov
xchg
fidivl
push
les
in
out
dec
pop
pop
fidivl
sbb
fxch
movsb
aad
sbb
lea
mov
xor
mov
das
test
pop
inc
push
les
xchg
popf
mov
fs
ja
push
call
cmpsl
and
inc
xor
jno
dec
mov
adc
dec
test
and
pop
orl
push
xchg
mov
loop
push
cld
pop
mov
ret
jg
cmp
cmpsb
imul
jl
pop
mov
mov
adc
pop
adc
xchg
es
out
jbe
dec
pop
fisttpll
cmp
ret
int3
outsl
or
pop
imul
aaa
jle
xor
popa
sub
int3
jp
jns
in
js
push
add
push
or
cwtl
mov
pop
out
call
out
jo
imul
mov
ljmp
les
cwtl
ljmp
pop
arpl
fwait
shlb
mov
sete
or
cmp
addb
mov
ret
stc
add
data16
sbb
jmp
mov
or
xchg
mov
xchg
lcall
xor
pop
call
push
cwtl
mov
lea
mov
mov
stos
push
movsb
pop
sub
cmp
andl
or
cli
mov
pop
add
mov
mov
ret
sub
sub
push
mov
pop
mov
and
mov
mov
dec
jae
push
insb
sbb
cs
iret
mov
lret
mov
repnz
mov
and
js
testl
pop
push
or
sub
pop
xor
lret
sub
dec
sub
and
jg
repz
add
sti
push
mov
in
jb
icebp
shll
gs
sti
xor
mov
lds
jl
repz
and
or
bound
sub
int
cltd
adc
pop
fcomps
dec
std
pop
call
popa
outsl
stc
mov
xchg
outsb
mov
in
stos
test
push
mov
std
jl
inc
fists
adc
dec
push
sahf
lahf
mov
jbe
pop
jp
loopne
int3
mov
divl
hlt
out
sub
adc
aas
scas
cmp
nop
pop
xchg
add
sub
push
std
sti
push
jmp
inc
rcrb
cmp
jmp
xchg
iret
jbe
pop
subl
ja
jp
mov
lahf
sub
aad
sbb
sbb
push
enter
les
int
dec
rcrl
mov
inc
xchg
out
nop
fadds
mov
fimull
push
sbb
xchg
mov
int3
cmp
add
fistl
xchg
jl
mov
mov
jae
gs
lcall
gs
dec
icebp
sti
into
dec
mov
mov
clc
int3
sti
add
lods
pop
jnp
push
hlt
mov
test
ds
sti
push
leave
or
mov
inc
sub
in
movsb
and
push
js
enter
pusha
std
loopne
jno
loop
in
cmc
xor
mov
dec
addr16
movsb
fimuls
mov
jae
movsb
push
bnd
jb
mov
push
jnp
nop
rcrl
pop
push
mov
cmp
xchg
fnstenv
mov
out
pop
add
cmc
cmc
push
pop
int
and
pop
mov
xlat
fstpl
out
push
dec
sbb
mov
push
mov
push
push
aaa
inc
loope
cmp
add
fisubs
scas
lcall
add
and
scas
jns
jns
pop
sbb
shll
cmp
dec
jns
lds
movsb
shl
jl
das
adc
je
cmpl
xchg
sub
push
mov
outsl
stc
aad
jnp
or
and
xchg
test
lahf
mov
pop
cmp
mov
or
pop
fbld
mov
pop
ret
add
stc
rclb
ss
insb
adcl
jge
es
in
jae
sbb
nop
loopne
rolb
or
int
xor
inc
jo
adc
sub
movsl
mov
call
out
pushl
jmp
and
addr16
cld
inc
push
mov
scas
sti
lods
bound
jne
adc
test
xchg
cltd
test
mov
shrb
jno
outsb
adc
jnp
xchg
push
adc
arpl
xor
orl
xlat
popa
or
cmp
xchg
into
dec
bound
bound
xor
leave
sahf
mov
outsl
xor
or
jecxz
add
ja
jb
data16
add
jp
cld
shrl
jne
inc
test
mov
negl
push
xchg
lds
mov
das
lods
dec
push
xlat
mov
sbb
ds
xchg
pop
jl
xlat
aam
mov
cmp
adc
sti
cmp
and
push
push
test
mov
jp
cmp
dec
inc
xlat
dec
pop
xchg
inc
loope
lods
test
outsl
sub
mov
pop
std
sbb
push
xor
inc
int3
flds
push
scas
gs
cmpsb
cmp
dec
in
sti
test
sbb
popa
jno
inc
mov
dec
push
inc
cwtl
xchg
aad
mov
test
shlb
sbb
lea
out
stc
cmp
das
cmc
lcall
add
sbb
ret
mov
loopne
cwtl
push
stc
cmpsl
jmp
gs
imul
pop
mov
icebp
cmp
out
xor
mov
xor
mov
mov
imull
xchg
lcall
push
xchg
xor
pop
lods
sub
pop
mov
add
aam
nop
ljmp
movsl
in
repz
adc
dec
mulb
rorl
mov
out
cli
mov
xchg
bound
dec
clc
cmc
adc
add
je
add
fldl
and
xlat
iret
repnz
test
stc
mov
adc
aad
pop
rorb
mov
mov
lea
or
in
cmc
dec
bound
add
push
pop
aad
push
jae
add
push
inc
aad
scas
aam
je
icebp
je
mov
aad
fistpl
dec
pop
ja
xchg
lcall
imul
add
jl
sub
jns
into
leave
push
and
hlt
or
int
dec
and
or
movsb
and
data16
jne
lock
cmp
jno
or
push
rolb
pop
mov
push
fcmovnbe
sub
and
stos
or
stc
cmp
dec
shrb
jno
daa
pop
shr
pop
xchg
mov
mov
pop
jle
pop
mov
das
and
test
les
inc
dec
sub
stc
arpl
xor
stos
push
lods
xchg
jle
fdivrs
jp
scas
enter
push
pop
je
pavgw
jbe
loop
fistps
push
mov
push
mov
mov
fstl
adc
jbe
and
lret
dec
and
lahf
imul
in
lcall
jo
mov
rcr
jne
jne
pop
jae
es
mov
pop
mov
xchg
xchg
leave
lahf
sbb
dec
pop
bound
cli
jbe
int
sub
dec
push
leave
jno
adc
mov
xor
adc
xor
loopne
mov
outsl
and
loope
lcall
cli
mov
xlat
mov
mov
call
pop
dec
xor
mov
cmp
lret
adc
push
sbbb
fcomps
or
sbb
inc
in
mov
jnp
pushf
mov
je
cmp
ret
pop
add
and
pop
fwait
mov
andb
lds
divl
pop
aas
test
xor
or
rorl
cmp
pop
dec
mov
cli
fwait
pop
mov
sbb
aaa
jle
dec
sti
xor
fdiv
das
mov
and
aaa
add
enter
sub
and
cmp
imull
xadd
lcall
cmp
inc
out
cli
mov
mov
dec
cmp
mov
lret
not
stos
lea
mov
loopne
adc
pop
sub
cmp
mov
idivl
hlt
jnp
adc
test
enter
out
in
inc
mov
mov
loope
add
push
in
and
xor
fsts
fistpl
iret
mov
std
push
int
cmp
push
hlt
lret
push
lret
mov
and
inc
out
pop
cmc
dec
sbb
test
sbb
mov
pop
push
xchg
test
insb
shrd
fstpl
loopne
mov
ret
hlt
pop
std
or
pushl
cmp
test
lock
add
add
add
icebp
pop
rorb
rcrl
fdivl
xchg
jne
push
sub
and
or
push
mov
adc
xchg
cltd
addr16
jecxz
dec
pop
push
mov
fisttps
pop
jo
repz
pushf
mov
jno
push
sbbl
mov
pop
lret
fisttpl
aad
fwait
xchg
sub
clc
dec
jecxz
dec
aam
leave
lock
flds
jb
shlb
shl
push
mov
push
into
js
shlb
addr16
cmp
hlt
mov
mov
push
xor
je
psrlw
mov
movsl
pushf
add
and
push
push
mull
idivb
clc
pop
dec
iret
test
imul
sub
cmp
adc
jo
sbb
sbb
shrb
lahf
mov
into
xlat
dec
vhsubps
scas
ds
inc
daa
pushf
sbb
cld
sbb
xlat
sub
xor
and
clc
adc
push
mov
enter
sahf
xchg
cli
mov
xor
hlt
jbe
jo
subl
rcrl
shlb
in
inc
adc
pop
sahf
add
add
jge
mov
scas
xor
data16
pop
daa
hlt
push
scas
call
sbb
sbbb
decl
mov
in
pop
dec
sbb
push
add
jmp
jns
add
lds
iret
outsb
cli
aad
mov
loop
cmp
mov
int3
cmp
lock
movsb
push
xchg
ffreep
loope
add
divl
xor
or
mov
inc
rclb
mov
pop
or
bound
lods
adc
pop
jae
push
movl
dec
mov
push
push
iret
jg
test
cli
mov
or
sahf
bound
lods
sahf
mov
loope
mov
jo
and
pop
cmp
ja
dec
aad
repnz
js
push
lcall
xchg
cwtl
jge
mov
out
fcmovnbe
cmc
adc
xor
int
push
mov
mov
jge
push
ds
inc
mov
sbb
cwtl
aaa
jmp
int
cmpsl
imul
xor
and
popf
xor
repz
or
call
mov
arpl
imulb
and
leave
js
xlat
rol
sub
sub
popl
int3
shlb
js
dec
mov
sbb
mov
jbe
inc
cmp
and
insl
dec
and
cmp
arpl
pop
or
push
xchg
dec
ret
ljmp
popf
insl
xchg
cmc
mov
cmpsl
leave
nop
das
xor
pop
jmp
pop
es
pusha
and
int
adc
jo
lahf
jae
iret
int3
cmp
and
dec
mov
jne
push
xor
jne
push
pushf
cmp
mov
jl
jo
cmpsl
xchg
adc
sub
fwait
xor
lods
dec
xor
enter
test
and
sub
pop
add
ja
outsb
pushl
insl
fdivl
or
mov
xor
and
mov
pop
loop
stos
mov
dec
pop
loope
mov
cmp
gs
mov
dec
cli
adc
cmp
dec
lcall
test
mov
sub
repnz
jbe
int
pop
xor
arpl
xor
xchg
setge
adc
int3
mov
mov
iret
test
pop
mov
imul
sbb
cli
mov
ds
inc
gs
loop
ds
fs
jp
dec
testl
sub
jge
add
roll
rolb
xlat
cmp
mov
dec
enter
std
into
aaa
mov
cmpsb
aam
test
cmp
addb
inc
dec
sbb
mov
inc
add
mov
sbb
test
add
inc
push
mov
ljmp
jbe
in
adc
push
adc
lahf
mov
mov
lds
sub
sub
in
mov
sarb
clc
nop
push
iret
add
stos
scas
sti
mov
xchg
sub
lret
jle
jp
clc
dec
dec
test
daa
lock
int3
mov
pop
inc
or
jno
xor
push
and
bound
jnp
icebp
scas
pop
leave
adc
cmpsl
mov
lds
addb
mov
lahf
and
bound
int3
data16
and
pop
dec
lret
fwait
in
xchg
mov
insb
mov
add
pop
mov
push
cmp
cmpsb
sahf
xlat
dec
mov
fistpll
mov
insl
mov
mov
lcall
and
mov
outsl
mov
sahf
stos
sbb
clc
fbstp
icebp
mov
icebp
inc
in
mov
lea
je
push
xchg
jb
mov
dec
cs
cbtw
test
test
je
fwait
push
inc
sahf
out
xchg
in
sahf
pop
sbb
dec
in
inc
push
loope
sub
ds
xchg
addr16
lds
inc
les
fs
pop
dec
push
icebp
pop
es
dec
mov
push
mov
aam
js
xor
leave
and
jbe
or
add
hlt
std
call
mov
xchg
fistpll
jecxz
sub
mov
arpl
add
loope
out
xchg
adc
daa
call
js
lcall
push
xor
aam
shlb
mov
fcmovnb
xchg
push
and
in
push
out
fildl
movsl
mov
or
sti
mov
xchg
xlat
hlt
and
adc
int
push
mov
imul
mov
inc
fidivs
cli
icebp
jb
arpl
pop
xor
pop
inc
or
and
sti
outsl
pop
jp
stos
sbbb
pop
popa
sbb
adc
aad
xor
jle
nop
je
jns
stos
cld
ja
mov
sub
repnz
scas
sbb
pminsw
fmuls
inc
inc
fsin
das
inc
pop
add
and
sti
pop
push
xchg
and
xor
mov
je
cmp
cmc
adc
mov
enter
mov
rcl
movl
test
test
das
stos
repz
add
pop
pusha
imul
dec
es
cmp
mov
test
sar
lcall
add
lods
jg
dec
hlt
and
jbe
add
enter
into
mov
insl
iret
adc
cmpsb
add
mov
inc
in
testl
jbe
pop
fiaddl
gs
sub
ja
clc
inc
sti
imulb
mov
lods
incb
loopne
movsl
or
mov
jbe
cmc
or
push
loope
jl
xchg
cmpsb
adc
fwait
cmp
cmp
jge
adc
sub
jecxz
jle
push
mov
xchg
loope
pop
pop
mov
adc
cmpsb
cmpsl
push
inc
pop
fwait
ja
in
and
sbb
movsl
mov
addl
insb
add
or
adc
sbb
sbb
cs
xor
cmp
mov
lods
xchg
rorl
mov
jae
pop
and
addr16
nop
stc
sbb
xchg
pop
shlb
pusha
pop
pop
sub
mov
mov
cmp
fcmovbe
sbb
in
psubw
cmp
outsb
cld
adc
insl
leave
int3
adc
out
mov
pushf
push
sarl
push
or
andb
cmp
xchg
jg
cld
test
nop
enter
sub
mov
dec
and
out
pusha
xchg
xor
inc
cs
daa
or
stos
sub
shl
mov
xor
sti
fidivl
mov
mov
or
arpl
mov
ret
test
sub
andb
adc
test
jne
jbe
data16
lock
loope
mov
scas
cmc
lods
ret
or
xor
rcrb
out
and
cmpsb
push
stc
push
xchg
pushf
jns
xchg
push
jne
xor
dec
push
fcomps
test
ss
orl
or
mov
lods
push
pushl
xchg
or
outsl
mov
addr16
sbb
jle
js
hlt
popf
mov
sub
inc
mov
add
fs
jns
das
and
insb
xchg
add
mov
das
inc
push
lods
adc
xor
dec
cmpsl
jns
fnstcw
or
jbe
push
ja
enter
cmpsb
or
ljmp
std
jp
inc
pop
lock
pop
xchg
addl
aaa
mov
lcall
subl
int3
push
shll
addl
cmpsl
inc
pop
mov
int
dec
push
shll
mov
push
lea
test
int
mov
cmp
cmpsl
cld
js
fiaddl
push
jl
pusha
clc
ss
in
fs
repnz
push
pop
mov
test
pop
scas
outsb
out
rcrb
xor
clc
xchg
inc
mov
ret
lods
jnp
adc
push
inc
dec
xchg
cmp
xchg
js
loopne
inc
dec
jmp
jae
jae
and
fadds
inc
xor
rep
iret
fistps
and
mov
repz
dec
pop
pop
cs
push
ret
insb
or
imul
sub
cmpsb
cmp
push
test
adc
jne
cmp
inc
loope
push
out
jle
add
incb
xlat
xchg
hlt
and
jg
mov
cli
lds
xlat
call
repnz
and
pop
adc
mov
add
and
mov
jae
cmp
loop
ret
cmp
std
push
lea
in
lock
jne
inc
mov
loopne
jne
mov
sti
fists
sub
int3
addr16
in
xor
inc
stos
pop
pop
loop
jae
es
lret
inc
mov
std
jae
pop
xchg
outsl
mov
in
mov
inc
pop
mov
fcom
mov
xchg
mov
out
ja
jle
fmull
rcr
inc
iret
push
add
ret
movsb
xor
outsl
dec
pop
sub
scas
clc
sub
repz
sbb
aam
xchg
adc
push
xchg
rcrl
mov
ds
notl
push
cmp
testb
jbe
xor
xchg
push
sub
adc
lret
pop
sub
or
add
inc
inc
lea
in
mov
mov
mov
or
test
pop
mov
sbb
sub
call
out
int
xor
sbb
jl
insl
mov
xorl
popa
out
out
fcmove
jnp
sub
push
dec
jae
sbb
xchg
xorl
push
in
nop
fmull
arpl
shll
pop
or
int3
push
jbe
mov
popa
adc
and
aaa
icebp
push
fwait
mov
xchg
paddq
xor
adc
ja
test
cmp
push
mov
das
xchg
testb
xchg
dec
sbb
pusha
sbb
pop
sbb
cmpsb
inc
mov
scas
sbb
push
add
ds
in
pop
popa
push
mov
je
sub
js
mov
jno
loopne
sub
das
repnz
movsl
shll
cmp
and
sarb
jp
outsl
push
pop
inc
fwait
inc
in
test
mov
adcb
mov
cwtl
lock
dec
lods
gs
repnz
xchg
dec
xchg
ss
imul
push
pop
mov
cmp
mov
add
das
adc
ljmp
ja
mov
inc
out
out
mov
push
mov
mov
call
sub
fwait
jo
xchg
push
mov
inc
jmp
pop
or
inc
bound
or
adc
fisubl
jo
cmp
fsts
push
testb
in
mov
lods
mov
sub
dec
and
je
fstl
xchg
mov
popa
stos
sub
pop
rcrl
or
sub
dec
and
pop
sarb
in
adc
repz
fisubrl
call
push
and
lcall
push
mov
lods
test
push
push
stos
stc
push
lods
inc
cli
leave
mov
xor
xor
push
aaa
cmp
push
push
mov
les
mov
out
jmp
xor
mov
popa
cwtl
sub
stc
xor
and
mov
loop
shll
xchg
xchg
cli
or
xchg
nop
repz
in
icebp
clc
pop
sti
xor
mov
push
hlt
cmp
mov
in
mov
lcall
push
push
popf
add
or
push
mov
and
xor
and
and
fdivr
aas
mov
jb
hlt
sub
test
add
testb
clc
aaa
xor
fimull
pop
sbb
inc
gs
dec
shrl
nop
sbb
into
ffreep
xchg
lea
pushl
stos
and
add
lods
insl
es
in
pusha
and
maskmovq
negl
mov
mov
roll
dec
divb
call
add
out
in
mov
jle
inc
mov
into
loope
shl
inc
xchg
test
adc
shrl
out
cmc
hlt
push
push
xchg
xchg
outsl
bound
adc
and
ffreep
call
loope
push
and
aaa
cli
sbb
out
jecxz
mov
outsb
xor
adc
out
pop
rcrb
mov
xchg
mov
mov
shlb
cmpsb
xor
mov
les
dec
inc
pop
addr16
mov
lods
das
cli
int
jge
mov
mov
cli
or
xor
add
sub
mov
pusha
in
mov
sub
out
iret
lret
sbb
call
fwait
test
aas
imul
fwait
test
popf
fadd
popf
and
testb
and
xor
shrb
fwait
mov
pop
outsb
std
nop
sbb
fcmovnu
imul
inc
sub
les
lret
mov
mov
sahf
or
mov
fsubs
fmull
mov
jae
fisubl
dec
add
aas
xchg
scas
icebp
sub
aam
jmp
inc
incl
mov
int3
arpl
adc
addr16
mov
xchg
das
or
pop
addb
cmpsb
jae
cmp
sarl
rcll
mov
inc
push
call
ret
frstor
adc
jmp
add
jbe
jecxz
adcb
or
int
adc
fmull
cmpsb
pop
pop
fisubrl
int
cs
xchg
shll
das
in
test
in
mov
inc
xorb
pop
movsb
or
adc
add
xor
in
js
sbb
jnp
sbb
xor
adc
iret
in
out
outsb
in
mov
push
cmpsb
mov
stos
out
cmpl
roll
movsl
jecxz
mov
jecxz
popf
sub
das
push
add
out
les
xrelease
out
sbb
mov
mov
and
incb
dec
leave
std
xchg
js
mov
cmpsb
add
xor
jp
cmp
jne
pop
sbb
lahf
and
lcall
popf
add
push
xor
lahf
or
stos
rcrl
cld
lea
scas
xchg
mov
dec
cmpsb
cmpsb
adc
mov
xor
mov
adc
inc
jle
push
cld
pop
lock
sub
lds
wbinvd
add
jmp
test
out
and
pop
push
rol
push
fstpl
cmp
mov
push
fcomip
adc
push
sbb
inc
imul
add
mov
pusha
out
fstpt
mov
scas
xor
out
dec
cmpsl
lcall
xchg
dec
mov
xchg
sbbb
out
cmc
xchg
int3
cmp
into
lcall
or
mov
ret
mov
dec
jge
mov
jle
fsubl
ljmp
push
out
dec
mov
cmp
mov
lods
dec
mov
in
aam
popa
daa
xchg
push
les
mov
push
mov
addb
imul
xor
popf
test
sub
push
inc
dec
notb
test
out
shrl
cmp
aaa
mov
mov
loope
mov
xor
or
pop
pop
icebp
cmpsl
fistl
cmpsb
popa
xor
bnd
rcrl
cwtl
sub
in
jmp
loopne
xchg
lahf
xchg
inc
pminsw
jno
bound
ficoms
out
cld
push
xor
and
into
cmpsl
sahf
xchg
xor
and
inc
ja
notb
pushf
or
mov
in
sub
add
in
test
je
xlat
imul
shr
mov
cmp
mov
lcall
pusha
je
out
inc
add
add
or
and
loop
jmp
jmp
mov
or
arpl
inc
xchg
outsb
push
jno
pop
loop
mov
repnz
repnz
mov
or
out
in
cmp
leave
idivl
gs
movsb
call
adc
pop
aas
inc
es
outsl
mov
mov
pop
add
ds
cltd
xchg
call
push
dec
mov
xor
pop
into
lock
gs
movsb
nop
pop
idivb
decl
imul
jl
inc
jae
cltd
in
push
leave
lock
xlat
mov
sub
mov
xor
jecxz
rol
mov
into
lock
shll
sub
jmp
or
or
push
es
sbb
ss
adc
or
scas
rclb
mov
mov
mov
xchg
ret
xchg
pop
xchg
xchg
orb
in
fsubl
fldenv
aaa
and
testb
lret
push
repnz
mov
test
int
sbb
stos
das
jne
mov
in
inc
mov
out
mov
add
mov
xor
xlat
inc
pop
jl
lret
hlt
sahf
fisttps
pop
inc
xchg
pop
push
test
xlat
jns
sahf
cmp
push
rcll
in
call
cmp
enter
mov
sub
xchg
and
sbb
push
fcompl
jg
sbb
ror
cltd
or
and
pushf
xchg
mov
mov
mov
mov
mov
xor
ljmp
xchg
popf
shrb
dec
loope
mov
outsl
outsl
stos
sub
and
add
inc
mov
mov
in
add
mov
adc
dec
fcmove
andl
inc
adc
push
push
mov
mov
in
fbstp
jmp
ja
lret
mov
test
mov
insb
pop
mov
sbb
mov
sub
fstpl
push
or
clc
stc
xor
fidivs
loop
nop
divb
pop
into
lds
xchg
add
es
jle
int3
mov
into
lods
cmp
fwait
movsl
adc
xchg
sub
aaa
add
mov
sarl
mov
dec
add
pop
gs
pop
lcall
fadd
sbb
mov
sbb
pop
and
jecxz
sbb
push
add
jle
xor
imul
pop
loop
in
insl
push
test
jno
push
cmp
pushf
jl
pop
movsb
je
adc
es
pop
mov
insl
and
push
cwtl
push
fmul
mov
inc
pop
cmpsl
in
push
int3
mov
ja
mov
jne
xchg
mov
adc
sarl
repnz
mov
bound
lock
pop
xchg
jmp
cmpsb
loop
inc
lahf
lcall
xor
add
js
pop
int3
xor
and
idivb
repz
xchg
mov
es
mov
xchg
mov
lret
mov
adc
mov
sbb
imul
call
and
jo
loope
pop
into
les
inc
aad
lret
jp
iret
cmpl
mov
xchg
add
ret
into
sub
and
insl
dec
jge
jl
and
in
adc
mov
rcrl
repnz
pop
or
sarl
xor
xlat
ss
mov
cli
arpl
mov
add
mov
cmpsl
mov
dec
fldcw
outsb
sbbb
in
bound
call
xchg
push
mov
add
fstps
in
lret
fstpt
int
and
out
cli
inc
daa
out
lahf
sbb
sbb
popf
fs
sbb
push
nop
and
jp
fmul
push
out
lock
push
movsb
aam
jbe
loopne
cwtl
fists
in
xchg
mul
test
leave
inc
faddl
mov
dec
imul
mov
dec
sbb
and
pop
loope
es
ds
pop
aam
popa
lcall
cmpsb
mov
lahf
cld
popa
pop
cld
std
js
lea
mov
addb
jg
lahf
pop
jne
fs
rolb
mov
data16
loopne
addr16
xor
xchg
cmpsb
and
jno
or
mov
cmpsb
adc
jns
fld1
lods
inc
rclb
xor
sub
jl
movntps
mov
into
jo
xchg
xlat
je
fldenv
test
dec
push
sub
sub
or
arpl
cmpsl
inc
int
pop
movsb
out
lahf
repz
sbb
inc
adc
lods
cmc
sti
test
icebp
mov
lret
add
cmp
int3
push
loopne
in
add
mov
sub
mov
es
ret
std
popw
push
add
call
adc
mov
testl
adc
dec
mov
lea
lret
test
and
or
es
aaa
pop
pop
push
gs
push
jns
xchg
jne
jno
fisttpll
inc
cs
jge
lods
mov
xchg
aad
mov
lahf
nop
push
int3
mov
fimull
test
stc
fwait
inc
mov
pop
pop
les
mov
ret
stc
cmp
jmp
decl
lahf
xchg
sbb
mov
sub
cs
popa
insb
iret
shlb
test
mov
add
xchg
ljmp
bound
xchg
dec
addr16
inc
mov
popf
sub
mov
in
adc
das
int3
gs
rcrb
mov
mov
mov
push
nop
and
push
loopne
mov
lods
in
dec
cwtl
in
outsl
inc
sti
movsl
cmp
cmp
test
dec
daa
and
mov
and
fs
cmp
add
icebp
mov
dec
xor
and
das
icebp
mov
mov
aam
cld
jae
insl
daa
clc
pop
jae
inc
andb
adc
int3
out
icebp
ljmp
cmp
fstpt
dec
cmp
add
mov
jl
cltd
adc
in
loope
or
or
incl
jp
mov
xor
cmp
repnz
or
mov
sbbb
orb
out
ss
hlt
aad
repnz
ja
loope
sub
dec
daa
adc
sub
test
and
adc
cmc
jl
sub
fisttpl
xchg
imul
push
sbb
stos
test
stc
fwait
in
inc
sahf
cltd
mov
adc
icebp
push
lods
mov
ja
lahf
inc
pop
test
pop
pop
gs
push
add
pop
lds
cmp
adc
adc
mov
sarb
outsb
and
loopne
pop
fdivp
or
les
lcall
sbb
jno
pop
lods
insb
adc
ljmp
int
sarb
dec
mov
and
dec
sbb
rorb
cld
pop
cld
cmp
sbb
ja
sbb
push
loop
add
pop
rorl
sbb
call
and
dec
std
cwtl
jecxz
imul
ret
jecxz
outsb
data16
sbb
dec
roll
ja
scas
fwait
pop
je
dec
and
adc
sbb
popa
mov
cmp
or
cmp
push
mov
or
and
jl
cmp
xor
cli
cmc
in
fxch
mov
aad
xchg
mov
rcrl
insl
icebp
das
xchg
adc
mov
imul
data16
fcmovbe
xchg
frstor
jle
push
mov
test
mov
test
ljmp
cmp
jge
dec
cwtl
ss
and
hlt
mov
xor
xor
inc
dec
pop
sub
psubsw
mov
cmp
mov
mov
sahf
cmp
mov
cld
xor
mov
js
add
shr
es
and
psrlq
stos
jmp
shrb
mov
test
add
arpl
add
and
sub
gs
inc
adc
divb
mov
and
leave
bnd
adc
xchg
xchg
test
xor
decl
outsb
mov
stos
lret
push
inc
mov
repnz
sbb
pop
push
push
es
xchg
xchg
lods
mov
repnz
int3
adc
add
adc
xchg
cwtl
cmp
mov
sub
lods
sbb
sbb
notb
pop
sbb
adc
push
ffree
test
test
mov
cld
test
scas
lahf
roll
imul
scas
sub
cmc
enter
mov
dec
test
addr16
jle
adc
jns
dec
sti
mov
repz
loope
std
sarb
xchg
js
pop
push
cmp
mov
push
adcb
push
pop
fstps
ss
stos
insl
xchg
test
add
dec
mov
nop
lea
lods
mov
vmovntps
out
insb
inc
movsl
dec
addr16
aaa
imul
loopne
shrb
bound
neg
jno
xorb
je
ss
dec
add
inc
dec
cmp
fsubrl
xchg
lret
sub
mov
daa
push
xor
adc
mov
fisubrs
dec
stos
int3
pop
pop
addr16
enter
pushf
and
xor
sub
xor
dec
xchg
xor
mov
leave
aad
movsl
jns
shlb
ds
dec
cmp
fwait
idiv
push
push
cmc
pop
repz
ja
mov
lds
adc
lahf
mov
lcall
xor
repnz
scas
mov
inc
cmp
adc
dec
cltd
inc
sbb
and
roll
dec
pop
in
test
jne
push
les
fcoms
aad
push
fwait
pop
lods
pop
loop
fwait
out
lods
fucomi
push
dec
mov
mov
dec
fdivrs
jl
dec
inc
lret
mov
add
adc
push
mov
insb
dec
les
iret
lea
push
aas
ja
jl
push
movsb
sti
pop
fmul
fnstcw
icebp
dec
inc
js
or
jp
dec
xor
sbb
push
pop
push
inc
and
sbb
push
mov
or
ret
and
xchg
popf
jle
pop
into
clc
push
cmp
lcall
or
and
repz
ljmp
addr16
test
cmp
dec
cmc
inc
jl
xchg
push
sbb
mov
lock
aam
aas
push
adc
dec
adc
std
jae
leave
pop
and
insb
into
insb
sarb
push
popf
outsb
adc
inc
mov
lds
jno
pop
add
aam
or
fwait
es
sbb
fistpll
cwtl
shlb
enter
shlb
dec
cmpsl
push
pop
faddp
aaa
xchg
dec
inc
sub
xchg
cmpsl
push
bound
dec
cli
and
mov
adc
aam
js
jne
jae
clc
shll
cmp
pop
mov
ljmp
xchg
cmp
in
outsl
out
dec
mov
mov
or
gs
push
fsubrl
sbb
cltd
scas
and
and
fwait
scas
jno
cmp
adc
push
mov
imul
sub
adc
mov
les
jp
ret
mov
xor
cs
popl
es
lcall
hlt
mov
lahf
ljmp
andb
addr16
addr16
cmp
mov
pop
cmpsl
cmp
pop
daa
and
loop
jp
loopne
lret
or
and
mov
ds
lret
std
xchg
jno
fistpl
jg
xor
aas
loop
testl
aam
dec
mov
fdivrs
roll
dec
pop
and
idivb
cmp
in
mov
xchg
xchg
jg
cmpb
out
out
int
and
std
sub
push
imul
xor
adc
aam
les
loop
push
jg
sub
pop
add
aas
sub
divl
pop
rcrl
cwtl
icebp
pop
mov
xor
ss
pop
addl
loopne
andb
ds
mov
or
mov
jne
or
repz
stc
mov
and
push
ds
sbb
and
mov
insl
lcall
daa
mov
lret
sarl
push
dec
notl
cmc
in
cmpsb
out
mov
mov
push
mov
aad
das
mov
cmp
cmc
js
cmp
popf
cmc
pop
out
imul
les
arpl
inc
jne
inc
mov
inc
gs
dec
xor
mov
inc
lock
or
jmp
ret
dec
add
jbe
xchg
jb
cmp
add
scas
push
mov
aad
adc
pop
lods
mov
shll
nop
imull
jno
outsb
fiadds
les
loopne
xchg
test
dec
push
out
mov
pop
push
daa
outsb
jns
sbb
sarb
bound
inc
subb
or
adc
dec
inc
cmp
or
mov
push
pop
xlat
xchg
adc
rclb
cli
arpl
lods
imul
pusha
jo
pop
ret
sub
in
xchg
inc
lcall
xchg
dec
xchg
mov
nop
iret
imul
adc
push
jae
fbstp
sbb
mov
pushf
inc
pop
cmp
out
int
lret
daa
rcrl
imul
movsl
sub
aad
inc
xchg
adc
mov
cltd
or
inc
jbe
pop
orb
cltd
mov
incb
pop
pop
shl
ja
mov
add
movsb
mov
popa
mov
xchg
mov
mov
inc
or
mov
aaa
aad
out
ror
into
dec
dec
jo
lds
or
cmc
rcrl
cltd
push
push
ja
jae
sub
inc
and
mov
or
orl
pop
cld
pop
xchg
movsl
movsl
and
ret
pop
aad
outsb
inc
fwait
outsl
sub
xchg
jns
mov
pop
mov
in
add
xor
sbbl
leave
pop
inc
push
repnz
mov
sahf
addb
push
mulb
adc
pop
arpl
and
iret
adc
jge
sub
xchg
sub
in
cld
mov
jns,pn
js
pop
jnp
cmp
jge
lret
xor
out
sbb
push
repz
insb
push
inc
xchg
xor
mov
mov
aad
rol
and
pop
mov
loop
cmc
test
push
fsqrt
mov
sub
dec
scas
sbb
xchg
aaa
imulb
shlb
jbe
inc
add
jecxz
cmp
jle
sub
sbb
mov
adc
ss
pop
xchg
and
mov
aaa
or
test
cmpsl
in
pop
insb
shlb
lea
subb
lret
out
aam
cwtl
inc
jmp
xchg
aaa
test
jecxz
lods
into
and
fnstsw
in
jnp
or
mov
faddl
es
push
loop
sarb
jnp
clc
xor
imul
mov
cwtl
ret
movb
sub
inc
mov
icebp
mov
xlat
adc
xchg
ret
mov
rolb
xchg
jb
xchg
inc
xchg
adcb
or
dec
add
push
add
aaa
lret
loopne
lods
sbb
aam
push
arpl
mov
mov
inc
fbstp
in
jle
mov
xchg
test
inc
testl
pop
mov
movsb
cli
inc
and
pop
xor
adc
in
xor
lds
les
push
cmp
jae
in
std
sar
mov
sbb
xchg
jle
test
dec
sbb
mov
and
push
enter
inc
xchg
dec
inc
int
fldenv
inc
xchg
push
movsb
pop
std
cmpsl
mov
pop
lcall
lret
jge
cltd
sbb
cmpsb
call
push
jbe
pop
daa
xor
push
ja
sub
ljmp
pop
and
sub
cli
rcll
orb
out
out
xlat
mov
fs
and
xchg
xor
jl
adc
adc
test
insb
add
call
nop
pop
pop
repnz
mov
iret
jb
mov
rcl
xor
cmpsb
and
xor
shr
ja
leave
aam
xchg
pusha
iret
shrb
sar
out
xor
in
adcb
stos
test
and
shll
pop
popa
insl
repnz
xchg
sar
icebp
loopne
and
in
js
bound
shrb
sbb
testl
lcall
stos
es
mov
mov
jne
push
push
fdivrl
mov
popa
popl
test
rol
iret
lahf
in
lea
bound
idiv
jmp
fnstcw
mov
sbb
inc
loope
push
xor
cmp
jmp
clc
xor
mov
mov
loopne
cmpsb
inc
bound
push
cmpsb
cmc
loop
sbb
fidivrl
cld
stos
and
rcr
mov
and
call
stos
pusha
cmp
sbb
int
fcmovne
push
push
adc
ds
push
ret
xor
mov
jno
test
dec
jb
leave
daa
or
in
mov
adc
lea
jge
dec
pushf
push
mov
hlt
mov
jb
ja
jmp
test
push
cmc
out
pop
push
test
mov
inc
xor
sub
in
pop
fnsave
sbb
aaa
fadd
push
loopne
sbb
icebp
leave
sub
std
pop
fdivr
les
fldenv
mov
lea
and
add
test
sbb
shl
notb
xchg
lds
je
xor
int3
push
stos
push
push
xlat
fdivr
pop
or
sti
call
outsl
lods
lret
fdivrs
cwtl
sahf
push
inc
mov
pop
movsb
stos
cmp
mov
xchg
fs
xchg
cli
lret
jno
addr16
stc
fcmovu
fnstsw
inc
xchg
sbb
mov
movsb
cmp
push
adc
xor
mov
mov
out
out
or
mov
mov
xor
push
loop
ds
daa
jp
jae
pop
add
mov
xor
or
clc
mov
sub
das
aaa
hlt
scas
cmp
dec
lea
adc
jmp
mov
mov
shrb
xchg
movsb
xchg
or
jle
lods
mov
ja
push
dec
aad
test
push
and
push
jle
mov
mov
je
sarl
dec
std
mov
push
dec
jl
mov
push
cwtl
fwait
mov
sbb
mov
cmp
dec
fstpt
push
push
sbb
or
daa
in
mov
add
rcrb
outsb
stos
aaa
push
push
inc
jg
pop
fcoml
lcall
or
xchg
inc
jecxz
xlat
orl
shl
push
lahf
mov
dec
pop
rcrb
xchg
popa
pushf
ret
dec
fnstsw
std
mov
sbb
lret
ds
rol
mov
outsl
insb
push
mov
sub
xchg
pop
push
testl
cmp
data16
mov
xchg
inc
leave
in
loope
cmp
sub
mov
cmp
lahf
jo
jg
push
mov
mov
sub
xchg
out
dec
cmp
fidivl
mov
xlat
mov
icebp
insb
inc
push
movsb
dec
and
fistpll
ror
daa
sub
mov
xchg
rorl
push
jb
sarb
jl
sbb
jl
and
mov
mov
mov
sbb
sub
aam
outsb
icebp
push
jo
sub
call
or
arpl
cs
lret
fcoms
test
clc
pop
test
jo
mov
imul
sbb
sub
loop
adc
sti
mov
add
mov
leave
mov
mov
dec
jo
idivl
cmpsl
scas
in
xor
fdivrs
and
je
scas
aam
dec
nop
test
xor
inc
dec
inc
mov
mov
out
xchg
stos
ss
stos
jae
push
cmp
lahf
call
jb
cmp
clc
out
pop
dec
inc
push
xor
jb
mov
stos
inc
ss
addr16
or
lds
jge
jl
lret
dec
jo
sub
shrb
add
lds
cmc
cmp
mov
adc
pop
add
mov
in
mov
orb
les
pop
pop
dec
rclb
inc
mov
and
loopne
sub
jge
sbb
sbb
adc
out
sub
mov
popl
fs
arpl
sahf
jecxz
data16
loopne
pop
mov
ret
aad
jbe
insb
mov
fisubrl
and
mov
adc
test
aad
and
popa
sbbb
das
sti
lcall
cmp
mov
dec
mov
adc
iret
pop
ret
dec
or
inc
push
adc
push
std
out
cwtl
out
pop
outsl
sahf
sbb
and
mov
sub
pop
imul
push
mov
outsb
mov
xlat
pop
mov
mov
push
mov
into
sahf
sbb
or
rorl
es
sub
cmove
inc
cmpsb
div
push
and
das
pop
std
mov
xor
cmp
mov
cmp
addr16
pop
daa
xchg
pop
ds
sti
dec
popf
jle
andb
mov
loope
inc
cltd
aam
mov
adc
adc
cmp
or
ss
repnz
stos
cmp
pop
push
sub
sbb
imul
sbb
xchg
test
push
push
inc
ret
pop
add
push
cmp
lods
push
int
inc
orl
lock
out
fsubs
lods
mov
fbld
stos
in
aad
sub
or
addr16
cmp
mov
and
loopne
add
pop
add
cli
ja
mov
sub
cmpsb
ljmp
das
lahf
sbb
mov
lods
cltd
pop
sarl
adc
lock
push
xchg
sti
jecxz
mov
adc
popf
mov
adc
dec
pop
es
cmp
ret
xchg
fnsave
test
in
mov
gs
dec
cmp
ret
dec
push
shrl
mov
fs
cmc
mov
mov
scas
out
inc
xor
push
push
jb
pushf
push
gs
fwait
push
push
daa
sbb
enter
sbb
xor
mov
leave
mov
es
jns
sbb
add
sbb
mov
and
rcrl
fdivs
xchg
xchg
or
sub
repz
mov
sbb
xor
xor
add
mov
jp
ljmp
stos
icebp
lcall
push
jb
sbb
jmp
andb
pop
fildl
sbb
pop
adc
mov
or
jmp
adc
adc
icebp
std
shlb
cmpsb
mov
sbbl
xor
dec
jl
sub
mov
cmpsb
loop
push
sub
addb
and
lods
sti
int
push
scas
mov
cmp
mov
shll
popa
mov
ret
rorb
fdivrl
lcall
pop
mov
shrb
push
imul
or
aad
push
repnz
mull
ja
dec
imul
arpl
les
popa
cltd
mov
fidivrl
xchg
lods
bound
out
or
lods
fucomi
cmc
cmpsb
sbb
sub
pop
push
addr16
sbbl
lock
mov
sti
daa
icebp
stos
out
test
ret
aas
sub
popl
sbbb
test
or
mov
jbe
leave
cmp
add
outsl
sub
popf
cmpsl
data16
push
mov
mov
xor
jle
mov
test
aad
jne
push
and
out
bound
jge
pusha
adc
loope
xchg
xchg
aas
imul
add
imul
das
divb
xor
es
jp
jmp
push
rcr
lea
mov
or
xchg
add
out
out
push
xor
aam
xchg
scas
adc
mov
outsl
sub
cmova
movsl
rcl
jne
dec
adc
aas
in
pop
pop
jno
and
ds
mov
or
xor
scas
clc
ret
mov
in
add
sbb
in
aam
cmc
jo
jp
testb
aaa
test
add
aas
add
adc
add
repnz
push
stos
push
loopne
pop
adc
xchg
aam
adc
xchg
stos
leave
js
jp
fildl
stc
push
cmpsb
inc
movsb
in
addb
addr16
jl
pushf
push
repnz
cmp
sbb
aaa
test
push
scas
in
mov
shlb
adc
out
push
jae
testb
pop
std
add
xchg
push
lock
add
push
outsb
jl
push
in
pop
shl
shll
lods
sbb
mov
sbb
gs
mov
mov
inc
sbb
sub
pop
into
adc
mov
fmuls
jbe
dec
imul
stos
movsb
jns
mov
adc
mov
sbb
cmpsb
int
cmp
out
pushf
add
sbb
das
mov
test
jg
adc
in
scas
sub
cltd
push
adc
call
fst
cmp
pop
es
fdivl
or
mov
aas
add
push
movsl
mov
test
arpl
out
leave
add
repz
leave
add
mov
mov
mov
pop
mov
sahf
stos
fstl
out
dec
mov
dec
push
imul
imul
sti
cltd
mov
outsb
imul
lcall
ss
xchg
pusha
xchg
nop
mov
mov
sbb
addb
repz
loope
fimull
pusha
mov
dec
push
mov
or
jne
adc
les
pop
mov
cmp
out
pop
xor
inc
and
jnp
negb
test
in
inc
jecxz
stc
adc
arpl
or
adc
cmp
mov
inc
rcl
adc
test
mov
push
mov
xor
sbb
push
add
cmp
cmp
mov
cli
repz
dec
pop
xlat
arpl
push
icebp
lods
cmpsl
cmp
rcrb
notb
mov
enter
js
hlt
mov
stc
jbe
dec
mov
std
lcall
adc
out
test
mov
outsb
cltd
cmp
jecxz
ds
loopne
rep
cmp
jmp
xorb
packsswb
fdivrl
loope
or
mov
inc
ja
cmp
xchg
pop
sub
lods
sub
jns
mov
adc
pop
je
and
rcr
sbb
add
push
sbb
iret
cli
sbbl
scas
in
push
dec
loop
stc
jb
sub
ss
push
sub
push
sub
push
inc
ror
ret
lret
fs
sbb
sbb
jecxz
stos
mov
lcall
sbb
insb
dec
xchg
popa
dec
bound
xor
mov
push
lea
ret
mov
pop
sarb
fstp
dec
out
pop
pop
adc
dec
shlb
push
cmp
movsb
sub
jecxz
cld
lea
int3
pop
in
shlb
inc
das
lock
mov
jmp
push
test
icebp
test
and
sub
push
inc
cmp
jne
push
ja
ljmp
out
clc
jbe
loop
les
mov
cltd
mov
sub
je
xchg
addr16
mov
pop
cmp
jae
xchg
pushf
mov
dec
dec
cltd
jno
mov
clc
in
dec
fwait
and
mov
clc
fidivrs
pop
xchg
xor
out
out
adc
pop
cmp
pop
and
jecxz
shlb
es
outsl
jle
popf
pop
dec
scas
push
sbb
push
sub
repnz
out
int
les
dec
aam
or
jmp
addb
sub
pop
cli
cmp
lcall
arpl
imul
aad
hlt
stos
pop
push
shlb
push
jnp
mov
mov
xchg
pusha
repnz
sbb
sub
xor
imul
fsubl
sub
mov
jo
cltd
sbb
and
sub
in
jb
jmp
frstor
mov
xor
sbb
test
aad
and
push
pop
pop
imul
adc
sbb
ret
or
pop
popf
fbld
popa
inc
mov
add
jg
stc
jg
mov
mov
out
aaa
cmc
or
pop
je
xor
mov
je
lret
jno
xchg
cmp
aas
mov
test
mov
cmpsl
xchg
mov
inc
adc
xor
inc
mov
mov
jge
push
pop
jbe
cmp
xchg
mov
mov
xchg
popa
push
movsl
xor
adc
pop
movsb
loopne
fs
jp
sub
jp
test
ljmp
push
cmpsb
mov
mov
cmp
push
xchg
push
pusha
out
imul
cli
lods
sub
outsb
imul
push
nop
cltd
inc
ret
mov
repnz
lret
mov
mov
sti
movsl
movq
xchg
lds
pop
notb
mov
lods
push
lds
fldl
pop
cs
xor
or
jg
pop
xchg
add
inc
movb
cmc
inc
sub
aas
sbb
mov
imull
icebp
xchg
jecxz
push
das
push
pop
dec
rorb
push
jecxz
mov
imul
addr16
and
mov
imul
shrl
std
and
lcall
je
mov
push
cltd
add
lcall
sahf
not
out
fdivrl
add
lret
and
inc
cmp
jg
repz
pop
test
int
int3
fnstcw
push
leave
bound
mov
inc
cli
sub
mov
and
push
or
fmul
add
outsb
push
sbb
pusha
into
test
shlb
cmp
arpl
arpl
and
out
das
popa
jne
lret
fs
and
jmp
push
and
cli
out
adc
lds
cmp
add
std
sub
out
and
jae
test
mov
adc
outsb
dec
push
or
aam
cmp
mov
shlb
and
mov
cwtl
cmp
or
xchg
xchg
int
fists
xor
loope
mov
cmp
cli
jnp
imul
enter
pop
cmp
push
mov
dec
scas
sbb
clc
in
fisubrs
fcomps
jg
fnstenv
in
fs
jno
lods
stc
xor
das
in
push
sahf
cwtl
jne
pminsw
stc
dec
mov
mov
mov
fcmovb
enter
dec
shlb
pop
cmp
iret
scas
stc
nop
mov
or
iret
xor
xor
ret
stos
daa
jg
sar
mov
call
jge
fdivs
int3
pop
mov
insl
in
push
cmp
sub
in
xor
loop
mov
push
andl
inc
inc
rcr
sub
cli
mov
jno
jl
adc
sub
xchg
jg
outsl
xchg
aas
mov
cmpsb
fistl
popa
dec
jmp
push
ljmp
push
push
pop
jne
cmp
and
js
inc
daa
pop
xchg
mov
push
mov
add
outsb
xchg
out
shlb
test
pop
lcall
adc
cs
mov
cmc
inc
push
pop
mov
mov
push
incb
fildl
or
xchg
pop
jmp
ret
mov
pop
andl
add
dec
repz
sbb
cli
jae
mov
and
test
push
mov
inc
mov
movsb
out
adc
imul
add
cmp
fmul
mov
jg
data16
or
pusha
ds
xchg
mov
popf
lds
jmp
outsl
inc
dec
jnp
xor
xchg
add
dec
or
in
mov
leave
lcall
and
push
into
fisubs
in
nop
adc
sub
or
pop
xor
mov
ljmp
dec
repnz
daa
sarl
mov
sahf
xor
adc
inc
push
fdivs
in
add
stc
les
mov
mov
fisttps
and
gs
dec
mov
shrb
mov
cmp
outsl
xchg
jge
xor
pop
test
jp
adcb
std
mov
inc
inc
fdivrl
and
sbb
jnp
mov
cmp
cmpsl
push
inc
pop
jne
xor
jbe
notb
js
mov
mov
aam
add
and
add
loopne
pop
xchg
jg
stos
jmp
repz
sti
dec
add
mov
pushf
test
jno
das
stc
add
xchg
add
in
dec
ljmp
pushw
xchg
sahf
cmovns
out
push
adc
sbb
out
push
inc
fcoml
sub
sahf
mov
into
mov
cwtl
push
cmp
sbbl
push
cwtl
imul
cmpsl
dec
pop
cmpsb
jns
push
flds
gs
dec
out
jle
jp
ret
pushl
cmc
or
in
std
sbb
inc
flds
arpl
mov
and
sarb
dec
mov
or
lret
mov
out
jecxz
pop
les
jae
mov
stos
or
xor
cmp
cmc
jb
sbb
sub
lahf
test
adc
add
fstl
pop
mov
mov
adc
rcl
test
scas
and
movsl
bound
jae
mov
je
dec
ficomps
mov
test
fwait
clc
cmp
cmp
mov
pop
adc
adc
aam
pop
shl
into
push
call
dec
fadds
push
mov
or
jp
sub
xchg
sarl
add
les
push
adcb
mov
pushf
inc
in
daa
sbb
sbb
test
in
pop
scas
and
fwait
iret
addps
sbb
ja
dec
xchg
test
jb
out
push
repz
mov
frstor
shrb
xor
adc
pop
ret
jge
fs
mov
push
cld
pop
jnp
aam
push
cltd
add
aad
sub
and
stos
sub
jae
jno
adc
lods
cmp
xchg
out
mov
sbb
cwtl
rorb
add
in
out
popf
jge
out
jge
aaa
rcll
or
gs
mov
pop
mov
sub
lret
lods
fs
jbe
out
xchg
or
lret
pop
pop
pop
jno
push
dec
pop
jecxz
out
in
xlat
push
fxch
popf
imul
mov
jle
xchg
or
push
js
and
fld
mov
shll
and
push
pop
dec
push
cmp
out
sub
sbb
cld
push
mov
ret
out
push
push
hlt
dec
mov
sub
mov
out
adc
ja
jge
mov
scas
lods
xor
frstor
and
lea
pop
ja
cld
cmp
shll
and
ss
push
lock
cwtl
xchg
sti
or
lret
mov
dec
fsubl
jecxz
icebp
outsl
pop
outsl
adc
lds
addl
xor
pusha
xchg
pop
adc
leave
sub
jae
xchg
jne
cmpsl
in
mov
xor
dec
inc
sub
cltd
xor
fstl
test
rcrl
int3
scas
adc
lcall
and
fisubl
stos
daa
nop
fwait
or
inc
insb
cmpsl
mov
pusha
inc
arpl
push
jmp
ffreep
and
push
clc
inc
dec
pop
mov
sub
repnz
sbb
hlt
add
dec
sahf
mov
js
push
jns
pushf
cmpsb
mov
pop
adc
sbb
cld
adc
xlat
sub
adc
insb
lods
cmc
out
insl
int3
lret
cmpsl
loopne
bound
jl
and
lds
sbb
xorl
adc
inc
shl
sub
and
pop
jmp
sub
xlat
cmpsl
xchg
stc
stc
stc
test
mov
pop
or
loopne
sub
xor
pop
mov
inc
cmpb
ja
cmp
cmpsb
mov
lret
and
jp
scas
sub
stos
testb
jg
aad
fcoml
push
in
dec
jge
mov
jno
imul
jl
repnz
ficoml
lret
sbb
test
jae
dec
int3
cmp
sarl
and
or
fcomps
pop
clc
lahf
out
jle
xchg
pushf
xchg
mov
and
pop
ljmp
push
push
shl
push
ret
mov
pop
mov
cmc
xor
xchg
fadd
in
shr
in
sbb
mov
xchg
dec
lahf
call
fwait
xor
das
aas
out
adc
mov
outsl
push
mov
bnd
jmp
dec
xchg
adc
dec
mov
mov
hlt
cmpsl
ret
pop
lock
mov
into
add
arpl
jae
fimull
sahf
fcoms
push
outsl
inc
ret
dec
sbb
push
fs
jl
rcrl
cltd
mov
fnsave
mov
test
cmp
and
add
into
mov
and
or
cltd
xor
push
fldcw
cmp
or
cmp
lcall
xchg
and
das
dec
loopne
sub
and
in
push
stc
int
popa
sbb
inc
mov
cmp
pop
ffree
mov
xlat
jle
mov
or
lret
mov
aam
and
lahf
stc
push
mov
sbb
fnsave
sub
sbb
leave
pop
or
jp
mov
test
addb
inc
pop
pushf
or
sub
inc
pop
push
mov
push
sub
add
mov
fsubrl
in
push
pop
or
jl
jno
jbe
imul
cld
sbb
xchg
nop
icebp
cmp
or
dec
sbb
jmp
out
movsl
dec
mov
jmp
cli
pop
jg
mov
xchg
dec
pop
insl
cltd
or
mov
out
push
add
push
sub
push
in
mov
jo
inc
add
mov
movsl
ljmp
lods
cld
push
in
xchg
scas
mov
mov
adc
mov
mov
fmulp
dec
rorl
mov
imul
cmp
jecxz
mov
mov
mov
enter
mov
adc
iret
pop
std
mov
test
adc
js
ds
mov
inc
jecxz
mov
xchg
int3
pusha
aam
xchg
and
fdivrs
stos
and
pop
movsb
pop
fidivs
sub
lea
sub
jmp
or
dec
int
je
sub
stc
push
int3
or
jns
cmp
cmp
and
fwait
bound
dec
call
ret
sbb
aad
jg
jmp
sbb
pop
lods
cmp
lahf
xor
loop
pushf
aam
lods
testb
xor
jae
or
daa
test
xchg
in
mov
lret
xchg
subb
cmpsl
pop
sti
add
jecxz
lret
adc
movsl
or
out
jne
insl
je
mov
fidivs
movsb
jne
fadd
sbb
pusha
fwait
and
icebp
cli
pop
imul
lret
pop
mov
adcl
mov
sbb
xchg
ret
fwait
cmp
cmp
out
xlat
lcall
into
adc
out
and
notb
movsl
les
jbe
xor
fstpl
shll
dec
subb
jns
add
mov
repnz
sbb
std
cld
sub
mov
jo
sub
dec
add
jne
jp
pushf
dec
out
hlt
inc
cld
and
jecxz
imul
into
sbb
mov
or
in
das
mov
sbb
pop
dec
lahf
rol
jnp
rolb
and
push
adc
in
add
mov
stos
inc
popa
mov
popa
int3
mov
pop
rcll
mov
push
xor
mov
xlat
xor
pop
mov
mov
nop
inc
nop
daa
inc
push
xchg
pop
pop
sbb
decl
xchg
mov
movsl
es
xlat
test
dec
bound
push
icebp
loopne
xchg
pop
fmulp
dec
dec
lds
test
jb
or
sbb
push
sbb
mov
and
adc
lea
icebp
push
mov
sbb
nop
mov
pop
sub
xchg
emms
lcall
pushf
xchg
push
push
push
push
ljmp
popa
ret
js
mov
pop
aam
aas
cmp
pop
add
xchg
pop
cmpsb
fldt
das
sub
daa
test
sbb
lods
fstps
mov
and
lock
das
test
jae
pushf
xor
mov
mov
or
add
pop
xlat
in
lret
mov
mov
pop
mov
jno
in
adc
cmp
pop
mov
cmp
pop
pop
aad
jg
xchg
fsubrs
pop
icebp
pop
adc
mov
movsl
xlat
push
aad
test
lds
push
mov
les
in
pusha
inc
xor
data16
inc
inc
mov
jbe
stos
push
push
dec
jge
inc
mov
add
push
lock
push
pop
push
std
mov
sbb
mov
orl
mov
lock
lods
dec
mov
in
arpl
popa
cmp
lods
jno
lds
fwait
adc
sbb
or
flds
add
lea
sub
inc
push
dec
jno
icebp
mov
xchg
daa
mov
sbb
dec
fidivs
pop
sbb
cmp
push
inc
sti
xlat
fucomi
adc
xchg
mov
mov
fmul
ja
leave
pop
out
sub
inc
pcmpgtd
pusha
dec
pop
in
mov
ds
cmpsl
fisubrs
push
repz
inc
mov
and
dec
adc
add
imul
adc
call
and
adc
out
pushf
mov
dec
lret
sub
jmp
inc
icebp
pop
mov
pop
dec
push
sub
es
dec
scas
add
in
sub
out
mov
loop
sub
rorb
bound
aaa
test
adc
dec
push
mov
xor
dec
mov
add
or
ljmp
cmpsl
or
jno
push
dec
orb
sbb
jle
or
les
jl
add
and
xchg
mov
sub
push
imull
and
jb
pop
loope
inc
add
mov
test
shl
jo
mov
loope
cwtl
nop
fiaddl
call
or
arpl
jo
loop
jp
cli
fstl
incb
sbb
lea
mov
mov
bnd
in
cli
sbb
jg
dec
bound
in
js
jbe
lock
and
jp
mov
insl
cmp
in
mov
inc
sbb
and
cmp
call
lcall
out
adc
mov
xor
sub
pop
xorl
idivl
adc
mov
mov
xchg
daa
pop
fmull
pop
test
stos
iret
mov
push
shll
mov
icebp
and
or
mov
sub
sbb
test
dec
sbbb
movsl
push
outsb
pusha
xor
sub
lcall
sub
fcoml
inc
addb
xchg
sub
or
imul
outsb
push
fnstcw
js
mov
fs
mov
mov
xor
jg
loopne
xchg
pop
test
mov
xor
xchg
inc
inc
xor
cmp
and
mov
lcall
adc
loop
in
lcall
lcall
or
test
push
or
jl
faddl
inc
push
jge
or
lods
adc
fbld
aas
jbe
mov
mov
test
or
in
test
pop
mov
pusha
mov
int3
jbe
test
adc
out
inc
sbb
lods
push
loope
lods
jno
mov
cmp
in
fs
sub
pushf
xchg
inc
fdivr
aad
out
xchg
cmc
or
sub
cli
add
scas
jbe
mov
or
fildll
adc
jmp
xchg
out
add
out
jle
mov
lock
or
jbe
adc
jp
and
sbb
mov
push
fwait
jle
dec
push
push
mov
inc
mov
jne
add
push
sbb
mov
mov
popa
push
and
dec
enter
movsb
cmc
inc
cltd
sar
mov
dec
pop
inc
mov
jle
aam
ret
shll
push
or
in
jecxz
mov
std
and
bound
jns
or
xchg
cmp
adc
insl
iret
std
stos
and
or
push
js
fldl
inc
fwait
out
out
sahf
xor
lds
lahf
orb
ds
jle
jbe
lret
push
and
pop
aas
rol
cmc
mov
fwait
lds
lahf
inc
int
inc
push
pop
xor
loopne
adc
xchg
adc
cmpsb
and
nop
adc
mov
in
mov
outsb
xchg
sbb
jle
stos
stos
sbb
loopne
aaa
fwait
sahf
sub
jmp
scas
mov
fcoms
xor
in
xrelease
add
lret
pop
push
jo
into
lahf
sub
inc
jo
mov
jle
sub
fstpt
mov
xchg
adcb
sarl
inc
and
or
pusha
movsl
sbb
sub
pop
ja
cwtl
scas
je
mov
jo
in
sub
pusha
mov
or
outsb
icebp
iret
mov
test
mov
and
test
pop
push
mov
stos
and
movsl
outsb
mov
push
push
xor
sarb
sbb
mov
or
sahf
mov
divb
movsl
push
pusha
pop
mov
cli
lcall
pop
mov
out
jp
popa
inc
adc
mov
sbb
xchg
cmp
push
mov
ret
in
wbinvd
imul
dec
frstpm(287
adc
shrb
pop
insb
cmp
cmp
push
xor
mov
je
pop
mov
loopne
inc
add
es
cmpsb
adc
cmp
in
pop
dec
fadds
out
cmp
lret
aad
aad
sub
daa
push
xchg
stc
sub
hlt
xor
addb
mov
out
sub
mov
inc
sbb
add
xor
mov
cmpsl
mov
mov
and
cmp
mov
and
push
dec
sbb
sub
inc
bound
and
cmp
pop
mov
pop
and
jl
fucomip
call
pop
xchg
add
jnp
pop
cmp
sub
jecxz
inc
stos
in
add
or
scas
sar
lods
je
push
cltd
mov
inc
dec
out
mov
cmp
jle
pop
cmp
dec
adc
scas
dec
sub
arpl
pusha
sub
or
pop
jae
xorl
rcrl
dec
sti
loopne
test
outsb
sti
sub
inc
add
jne
int
outsl
aas
es
inc
les
jns
aas
aaa
pop
mov
fldl
cmpb
stos
mov
std
inc
in
cmc
pop
adc
mov
mov
fdivp
mov
test
int
jge
jl
cmpl
cmp
cmp
std
out
das
adc
cmp
mov
mov
push
cmp
popf
adc
and
repnz
mov
les
sbb
add
mov
lea
adc
pop
jecxz
sarb
lods
sbb
inc
and
ja
enter
pop
or
jecxz
pop
add
sbb
sbb
fsubs
sbb
jno
or
mov
enter
add
div
add
je
mov
mov
jl
mov
push
aas
hlt
jbe
mov
rcrl
or
mov
je
sbb
shl
out
aad
repnz
insl
xchg
inc
jno
aad
sbb
push
jno
in
mov
xor
push
sbb
or
xchg
sahf
subl
popf
and
jno
enter
and
popf
out
cli
and
bound
add
or
out
mov
and
stos
dec
mov
je
repz
arpl
mov
loope
adc
fdivrs
and
adc
adc
sbb
mov
stos
mov
xor
jl
mov
lods
outsb
dec
mov
add
and
jl
gs
mov
das
clc
mov
pop
imul
aad
jl
mov
lods
lret
popf
stc
ss
cld
add
and
jbe
xchg
ss
or
or
add
outsb
cmc
cmp
daa
movsb
sbb
int3
mov
pusha
imul
mov
inc
movsl
test
push
dec
inc
cmp
subl
push
xchg
test
fcmove
leave
leave
mov
sbb
ret
icebp
les
lea
negb
and
out
push
insl
out
aaa
adc
jl
xchg
or
jne
cld
lret
ss
imul
cmp
jle
shl
jl
fs
dec
cmpsb
out
ja
push
xchg
cltd
xlat
sub
shr
dec
xchg
adc
add
scas
test
dec
pop
loope
imul
sbb
sbb
cmp
jle
mov
rol
adc
dec
cmp
out
mov
cmp
roll
push
and
push
xchg
clc
pop
repz
adc
aaa
or
into
ds
adc
inc
push
mov
mov
ficompl
cmp
xchg
mov
push
daa
adc
jb
es
addr16
rorl
pop
push
jl
scas
jp
jno
loope
in
mov
adc
cmp
and
cwtl
mov
bound
loope
inc
jp
xchg
or
negb
xor
popa
js
addr16
es
xchg
mov
lcall
popa
jge
inc
add
or
sahf
das
dec
div
xchg
lds
ljmp
jne
jno
sbb
jnp
shlb
leave
adc
nop
dec
inc
push
imul
push
xor
xchg
jns
pushf
jno
orb
outsl
stc
std
int3
pop
pop
push
pop
negb
daa
fbstp
push
add
scas
and
cs
dec
stos
in
xor
pop
cmc
and
testl
push
mov
add
aas
pop
xorb
ret
jae
sbb
cmpsl
ljmp
mov
sbb
push
sub
daa
xchg
sub
insb
cmc
lcall
sub
mov
mov
inc
jecxz
negb
xor
mov
sub
pop
or
sub
or
sub
jnp
ret
insb
ffree
inc
nop
mov
movsl
popl
roll
movsl
repnz
je
adc
push
stos
sbbb
xor
xlat
dec
xor
lret
cltd
insl
pop
stos
mov
ss
sub
mov
and
hlt
pushf
add
cmp
call
dec
pop
out
add
mov
fidivrs
jl
push
in
sbb
xchg
add
mov
ljmp
in
sub
xlat
outsl
sbb
loop
iret
sub
xor
jne
inc
pop
test
movsb
xor
pop
cltd
cmpsl
pushf
jecxz
js
je
sub
adc
adc
lock
addl
cwtl
jno
xor
cmpsb
mov
xchg
xchg
cwtl
push
xlat
inc
ror
mov
iret
subl
adc
out
repz
repz
adc
ficomps
xor
popf
xor
push
cmp
sub
lock
pop
cld
push
hlt
dec
inc
cmpsl
addb
mov
push
lcall
ja
push
test
adc
lds
adc
lock
rcll
out
or
shr
mov
mov
outsl
cmp
clc
pusha
xor
mov
dec
xor
lret
pop
mov
inc
ret
loope
std
lock
out
cmp
inc
jno
fisubrs
lcall
lock
ljmp
push
iret
stos
xchg
mov
push
test
xlat
mov
push
outsb
xorl
xor
mov
xchg
mov
add
sub
push
cs
repz
int3
negl
pop
cmp
aad
and
jbe
nop
insb
popa
in
shrl
and
inc
in
test
mov
test
adc
divl
inc
pushf
int3
movsb
or
adc
jmp
mov
aam
cmp
dec
xorb
movsl
dec
mov
sbb
lret
mov
das
lods
ret
hlt
xor
popf
dec
mov
lock
cmpsl
leave
out
out
arpl
mov
push
leave
insb
mov
test
and
mov
fdivrl
scas
mov
dec
or
dec
insb
add
jno
stos
fcmovne
lret
in
xchg
inc
cs
pop
lahf
fldenv
jecxz
sbb
adc
insb
imul
inc
orl
xor
pop
adc
outsl
sbb
pop
dec
adc
fdivrs
es
mov
je
mov
xchg
add
push
out
and
loope
roll
fsqrt
test
stos
fsubrs
mov
sub
xchg
sub
sub
mov
lods
sub
cmp
cmp
sub
cmp
push
add
and
push
or
xor
sub
into
inc
xor
sub
nop
add
push
mov
jmp
sub
mov
popa
pop
dec
cs
cmp
divb
inc
rcl
stos
xchg
scas
ja
lock
cmc
add
xor
xor
adc
in
imul
repz
out
dec
movsb
mov
lods
das
les
js
fnstcw
sbb
and
mov
push
mov
cmp
or
mov
test
popa
add
pusha
hlt
jle
ljmp
xor
add
mov
adc
mov
lea
jl
jl
nop
mov
cmp
jae
add
fwait
jnp
sub
aas
aad
push
aam
inc
mov
mov
cmp
insl
das
xchg
sbb
loope
iret
rcl
jmp
les
fcompl
cmp
inc
jge
xchg
xchg
dec
outsl
imul
imul
xchg
repz
cmp
out
subl
jns
aas
add
mov
xor
mov
cmpb
jge
mov
sub
mov
scas
dec
icebp
jle
test
dec
cmp
out
add
loope
insl
xor
ficoml
arpl
lcall
outsb
xchg
out
daa
into
jmp
jle
xchg
adc
xor
jp
jecxz
mov
lods
jecxz
xor
aas
mov
scas
mov
push
out
pop
imul
mov
int
dec
pop
inc
sahf
add
sbb
leave
pop
test
add
notb
arpl
dec
mov
inc
imul
pop
xchg
inc
cmp
imul
pop
xlat
pusha
daa
fnstenv
add
jge
cmp
adc
xor
test
loopne
mulb
fnstenv
into
lcall
sub
mov
add
pop
jg
popa
or
fidivl
mov
sbb
sub
or
mov
and
stos
mov
icebp
loop
lods
or
hlt
mov
xorb
jg
das
mov
push
cmp
xor
shlb
or
mov
adcb
or
mov
sbb
scas
loopne
sbb
aaa
test
push
test
jno
ds
push
xchg
sub
in
aaa
loop
lahf
xchg
or
xchg
sbb
xchg
pop
mov
mov
jo
fisttpl
leave
dec
in
mov
push
push
lea
repz
pop
mov
inc
jbe
rorl
or
cli
jmp
xor
jno
adc
cmp
sbb
add
push
bound
in
add
popf
jbe
or
nop
jle
cmp
inc
cmp
pop
mov
insl
and
jno
fsubs
inc
mov
inc
inc
stc
fwait
xchg
jno
sarl
nop
mov
xor
movl
cld
repz
xor
and
push
sub
sbb
aas
mov
add
rorb
inc
rcrb
add
sbb
add
loop
out
adc
mov
ret
xchg
stc
xor
cmp
gs
enter
inc
pop
mov
scas
adc
movsl
mov
mov
add
sub
push
pusha
xchg
jno
add
jae
ret
mov
test
and
adc
xor
aad
in
movsl
lds
es
inc
xchg
inc
dec
nop
jmp
push
lcall
cmpsb
dec
xor
addr16
adc
addr16
vmwrite
popf
push
and
add
cmp
mov
fs
leave
lock
fwait
xor
lock
mov
mov
xor
adc
and
push
call
adc
ljmp
jmp
cmp
mov
mov
in
fwait
mov
imul
lods
mov
mov
sub
outsb
push
ja
call
into
sub
mov
jne
cmp
mov
nop
enter
jb
arpl
add
jle
mov
xchg
call
adc
adc
iret
and
mov
call
mov
or
out
sub
sahf
les
scas
push
lret
ljmp
adc
sahf
mov
push
push
cmp
fimuls
outsl
and
call
push
sbb
xlat
pop
jp
pop
mov
jl
push
jbe
mov
stos
mov
hlt
add
pop
mov
pcmpgtw
cmp
fnstenv
jns
adc
adc
inc
pop
es
inc
es
jecxz
xor
pop
call
mov
sbbb
dec
lods
cmp
add
xor
pop
or
jne
in
lods
fstpl
add
or
ret
inc
inc
sub
push
fstp
icebp
scas
push
jmp
jae
dec
xchg
or
fwait
xchg
shlb
outsb
sub
daa
mov
mov
mov
jbe
out
sub
pushf
cmp
dec
dec
loopne
daa
fisubrs
lods
xor
test
cmp
xlat
jl
mov
cli
and
inc
pop
and
pop
xor
stos
or
inc
xchg
mov
data16
ljmp
or
jp
popf
scas
jo
mov
xlat
je
cmp
sarb
loop
add
xor
orl
cmc
lds
or
jne
sub
je
gs
push
mov
lock
sub
jle
ret
adc
es
add
add
pop
push
cmpsb
arpl
cmpsb
push
addr16
leave
lret
in
in
dec
rcrl
adc
cwtl
pusha
jb
jno
addl
daa
pop
jmp
ja
add
pop
inc
push
gs
scas
xchg
ret
cmp
movsl
jne
mov
pop
push
mov
insb
loopne
leave
pusha
mov
int
sti
out
pushf
repz
sti
mov
and
xor
sub
lret
fbld
dec
hlt
rcrb
test
pop
push
push
xlat
inc
xor
movsl
rclb
outsb
pushf
mov
enter
pop
out
decl
fstl
jp
scas
jno
popf
sbb
int
sub
lret
or
sub
sbb
dec
mov
lock
mov
ror
lcall
jg
add
xchg
in
mov
jb
jge
jecxz
imul
cltd
bswap
fs
mov
mov
loopne
xor
cmpsl
mov
push
xchg
dec
jae
sbb
pop
lds
and
push
int3
sbbl
out
daa
jg
dec
mov
pop
rcll
dec
rorl
gs
imul
int3
mov
ljmp
ret
mov
jp
cmc
mov
sarb
mov
push
pop
cs
mov
pop
push
daa
cli
mov
adc
push
scas
sti
jl
pop
adc
xor
test
pop
testl
jo
fbstp
sub
out
mov
pop
icebp
arpl
addr16
or
push
mov
repnz
insb
and
push
in
or
int3
cmp
out
icebp
andb
insl
out
gs
xlat
push
sub
add
push
call
sbb
inc
dec
sti
mov
in
adc
ret
in
sub
les
imul
into
js
aas
xor
jns
and
aam
or
stos
push
mov
sbb
push
pop
cmpsb
gs
out
mov
jmp
jo
adc
out
decb
xlat
mov
cld
mov
pushf
mov
sub
aam
xchg
mov
cltd
or
shll
push
mov
adc
jo
clc
cli
or
in
mov
and
leave
mov
pop
aaa
sbb
lcall
insl
push
mov
mov
mov
sub
or
mov
cmc
and
fs
ficoms
jns
xor
mov
insb
or
iret
sub
jle
fcmove
aam
cmpl
cmp
mov
outsl
ljmp
mov
mov
xchg
jmp
push
xchg
sbb
xlat
cmp
cltd
cmp
scas
jmp
add
ficoml
popa
mov
sub
dec
and
outsb
dec
pop
dec
orl
scas
lret
dec
cmp
jno
dec
lret
pop
push
lods
into
inc
jo
pop
mov
sbb
xor
mov
lret
sub
inc
lcall
cmp
aam
adc
mov
popf
or
xor
nop
sbb
fsubrl
fs
or
nop
push
js
mov
lahf
pusha
into
stos
movsb
or
out
push
and
popf
fimull
xchg
inc
mov
xchg
mov
dec
push
ljmp
push
out
fldcw
push
mov
adc
fs
push
sti
fldl
push
jmp
adc
push
mov
dec
xor
jnp
std
data16
int
rclb
fwait
xchg
daa
jmp
jmp
pushf
mov
icebp
stos
and
shlb
es
jle
xor
inc
jp
loop
lods
pop
arpl
jnp
lcall
scas
int
add
mov
push
bound
lret
rcrl
xor
dec
les
icebp
inc
mov
sbb
sub
pop
xor
enter
add
fsubrs
je
ss
fnstcw
shll
mov
push
mov
or
push
mov
or
mov
data16
es
push
pusha
ret
call
popf
arpl
stc
gs
xchg
aas
push
mov
dec
ficoms
js
push
lahf
idivl
fs
inc
cmp
xor
sbb
mov
inc
sbbl
inc
add
shlb
int3
pop
loope
adc
movsl
dec
int3
jmp
dec
mov
outsb
dec
push
cmp
mov
cmp
or
iret
dec
je
jecxz
repz
stos
out
hlt
mov
popa
idivb
int3
bound
jge
lods
sbb
fstpt
adc
cmp
xchg
out
movsl
jge
lahf
sahf
testl
sar
push
je
and
rep
mov
push
push
sub
push
inc
xchg
sub
in
jecxz
data16
icebp
xchg
or
sub
aas
mov
in
loop
data16
xorl
sbb
in
in
mov
sub
xor
xchg
mov
push
ret
mov
outsb
or
aaa
insl
rcr
es
imul
cmp
mov
jl
sahf
or
mov
mov
xchg
add
inc
dec
icebp
repz
mov
jmp
jle
xor
fildll
lret
pop
es
push
pop
jne
xchg
pop
push
imul
jmp
andb
mov
pop
pushl
test
test
int3
xor
cmc
add
test
in
pop
sbb
or
push
dec
aam
je
repnz
cwtl
add
jno
es
stos
xchg
mov
sbb
outsb
cmpsl
jb
ljmp
lar
sbb
sbb
mov
fs
pop
daa
jo
push
fildl
inc
mov
inc
test
push
leave
adc
xchg
push
cltd
cmpsl
lds
mov
mov
ds
mov
ja
jbe
mov
ret
jnp
sbb
out
sub
xlat
mov
adc
ljmp
adc
push
push
iret
jmp
lcall
hlt
mov
inc
xchg
jp
pop
mov
idivb
gs
lahf
sbb
sub
inc
dec
dec
mov
mov
cvtps2pd
mov
push
xor
test
adc
in
jge
push
sub
test
lods
daa
mov
sahf
shlb
xchg
xchg
mov
cwtl
pop
ss
stc
dec
loopne
aam
pop
lds
lahf
imul
push
adc
pop
sbb
movb
int
dec
aas
into
add
es
xchg
xor
gs
cmpsb
fcoml
jo
jae
adc
ret
jae
cld
mov
mov
sub
sub
clc
mov
shll
mov
xchg
in
cs
loop
xchg
cwtl
outsl
js
test
jge
sub
out
adcl
pop
nop
ss
and
movsb
and
pop
jb
sbb
adc
inc
mov
adc
int3
inc
iret
sub
std
test
iret
arpl
orl
and
cld
pop
inc
shr
lock
jno
adc
dec
add
aam
adc
or
pop
pop
sbb
cmp
xchg
xorb
xbegin
les
sar
or
push
push
divps
adc
xor
and
gs
lea
fidivrs
cwtl
mov
push
xchg
mov
mov
repnz
cmp
pop
or
outsl
mov
les
into
cmp
mov
imul
xor
cmc
mov
andl
dec
mov
mov
adc
mov
xchg
xchg
rorb
push
outsl
or
sbb
popf
dec
lcall
and
in
mov
daa
and
xchg
aam
mov
mov
inc
cmpsl
xorb
pop
xchg
xor
xor
imul
pop
mov
in
test
insl
sub
jns
insl
xchg
sub
stos
dec
fwait
push
mov
scas
push
jmp
cmpsb
sub
xor
dec
fucomp
aad
or
lcall
orl
and
repz
ret
inc
xor
lods
push
jl
mov
dec
mov
adc
sbb
push
sidtl
out
jo
cmp
mov
pop
jb
and
xor
xchg
pop
xchg
loopne
pop
mov
mov
sarb
and
xchg
xchg
hlt
jnp
jmp
je
dec
je
aas
adc
cld
jnp
sub
mov
jg
push
jne
pop
xchg
ljmp
sub
push
rorl
xchg
shlb
and
xor
ret
imul
mov
pop
lds
outsb
leave
inc
and
test
dec
inc
movsl
pop
hlt
loope
ficoml
mov
push
inc
fbld
in
mov
cmp
xchg
and
je
push
repz
jb
xor
mov
fs
mov
and
and
jbe
or
inc
lds
mov
add
dec
decl
inc
in
and
mov
push
pop
ljmp
imul
add
outsb
data16
negl
out
mov
mov
enter
push
idivl
mov
cmpl
sbbb
sarb
leave
cltd
dec
push
je
mov
add
js
movsb
lret
xchg
out
mov
inc
cmp
movsl
scas
rorl
jne
sbb
pop
and
push
lock
xor
aad
pop
xchg
mov
call
pop
inc
dec
jne
imul
movsl
rcll
out
push
push
add
scas
inc
inc
shll
or
dec
lods
mov
cmp
stos
pop
add
jecxz
filds
int
shrl
pop
shll
imul
lea
in
in
xor
or
mov
lds
test
sub
lods
push
pop
stc
lods
lock
sahf
das
push
mov
mov
aaa
lret
sub
xor
push
dec
jl
fs
mov
mov
lahf
pop
jle
jp
repnz
push
fpatan
fsubl
dec
or
push
ret
test
ja
sbb
sub
mov
fxch
sub
or
es
mov
dec
arpl
sbb
cwtl
enter
or
or
xor
mov
mov
lret
push
xchg
sti
ret
andb
fimull
inc
or
pop
inc
sbb
push
inc
pop
lcall
jo
lret
mov
sbbb
sahf
sub
aad
sbb
shlb
aad
jle
cs
fidivrs
sub
cmp
mov
xchg
leave
out
stos
dec
js
mov
out
inc
dec
lea
dec
mov
cld
jmp
jmp
imul
scas
cmc
mov
loopne
movsb
inc
jg
dec
std
call
in
xchg
inc
lret
mov
jl
pop
movsl
inc
mov
scas
cs
lcall
push
push
fistps
rolb
pop
jb
inc
mov
pushf
ror
mov
xchg
or
and
push
push
push
fmull
jl
jmp
in
dec
imulb
lods
decb
loopne
adc
lret
sbbb
movsb
test
or
lahf
push
in
cmp
sub
push
pop
loopne
mov
fldenv
movsl
push
adc
sub
arpl
pop
mov
loope
dec
or
movl
pop
push
xor
dec
dec
call
aas
cmp
gs
nop
loope
and
lea
mov
lds
xor
rolb
xchg
hlt
fisttps
xor
rol
sbb
jbe
cltd
stc
push
jmp
xchg
vsqrtss
push
out
ja
add
cmp
roll
fs
jle
rcrl
mov
or
inc
ftst
stc
out
xchg
loop
in
or
jp
movsb
cmp
cmpsb
sub
jb
push
pop
or
test
shl
mov
sub
lret
mov
jp
leave
push
or
leave
cmpsl
adc
ret
cmp
shll
xor
ficompl
adc
repnz
sub
daa
jp
jae
mov
pop
roll
cmp
push
sub
add
test
mov
or
sbb
bound
repz
fistpl
mov
frstor
cwtl
lret
jle
sbb
xor
xchg
cmp
push
or
ss
ror
add
adc
and
mov
pop
fisubrs
pop
and
js
test
dec
add
outsl
testb
cmpsb
fistpl
mov
sbb
xchg
cmp
insb
out
lcall
test
insb
mov
imul
leave
outsl
cltd
out
add
sub
inc
mov
cmc
sub
dec
fldt
cmp
fcoml
jle
xchg
dec
jle
clc
pusha
aad
mov
ret
adc
add
lret
push
popf
lds
inc
mov
imul
jb
sub
daa
sbbl
push
sub
popa
idivb
push
fldt
cmp
cld
and
mov
scas
repnz
sub
aad
mov
pop
xor
dec
jge
addr16
rcrb
jns
fwait
cmp
push
sub
inc
rorl
cmp
stc
orb
and
xchg
lcall
dec
sbb
push
fstpl
mov
int3
sbb
pop
fisubl
enter
das
les
in
mov
divl
cmc
xor
pop
pushf
stc
push
fs
in
or
aas
sti
shlb
jecxz
or
adc
push
sub
sbb
arpl
fiadds
xchg
mov
xorb
mov
outsb
dec
mov
test
ljmp
sbb
faddp
in
iret
iret
mov
mov
lds
mov
hlt
fmul
ret
or
mov
cli
inc
arpl
sbb
test
repz
sti
push
and
pop
pop
mov
xlat
ja
lcall
lds
sbb
hlt
dec
xor
idiv
pushf
push
push
lahf
push
pusha
pop
jle
push
lea
sub
jge
inc
cmp
jae
pusha
and
aad
jmp
pop
sbb
mov
enter
inc
dec
mov
iret
into
mov
out
lds
mov
sub
inc
dec
add
stc
mov
fcoml
xor
pop
out
or
mov
cvtpi2ps
mov
push
sbb
pop
out
rol
fdivl
in
std
faddp
or
icebp
clc
sbb
out
xchg
cmpsb
and
lods
shll
jge
sahf
mov
test
mov
gs
pushf
cmp
dec
xchg
jge
jg
push
xchg
in
popa
or
sbb
insl
outsb
mov
dec
jns
xchg
aas
test
inc
into
jp
push
in
mov
inc
sarb
pop
fildll
shlb
gs
bound
outsb
xor
push
jae
sub
mov
fcoml
xchg
test
test
pop
int3
mov
xor
sti
sahf
addr16
mov
jae
mov
arpl
fucomp
sub
imul
lock
movsl
inc
std
cmp
xor
pop
daa
cltd
sub
xor
jecxz
loopne
xor
shlb
sub
popf
frstor
lret
xchg
test
loope
ja
mov
dec
fwait
repz
imul
loope
push
jle
xchg
rcrl
mov
mov
mov
add
adc
js
arpl
clc
jns
jecxz
and
pop
setns
mov
imul
push
es
enter
sbb
fwait
push
ss
push
adc
in
jno
mov
push
inc
movsl
enter
and
xchg
pop
or
movsb
mov
aad
xchg
mov
push
iret
mov
jecxz
mov
sarl
mov
and
push
mov
les
cld
xor
pushf
or
sub
imul
mov
cmc
jmp
aam
add
ljmp
outsb
xchg
or
mov
test
cmpsl
cmp
push
movb
inc
ficoml
dec
push
and
in
inc
jp
adc
scas
shll
pop
push
and
mov
jmp
push
sbb
in
mov
mov
aaa
out
and
mov
jge
fstpl
mov
inc
push
mov
and
pop
jmp
add
mov
push
subb
dec
add
fnstenv
jae
mov
cmc
out
dec
mov
mov
cwtl
xor
xchg
ss
pop
testl
nop
jmp
xchg
jmp
adc
repnz
pop
daa
mov
pop
repz
mov
or
and
shll
or
add
fisubs
decb
fidivl
int3
int
bound
icebp
push
pop
jbe
inc
dec
xchg
inc
dec
lcall
imul
pop
jecxz
adc
add
sub
jge
xchg
push
mov
sub
mov
or
and
xchg
jp
sub
push
sbb
js
shrl
mov
mov
ja
mov
push
test
std
inc
fdivr
xor
loop
dec
ret
add
pop
rolb
out
xlat
fildll
repz
fildll
or
mov
pop
dec
adc
inc
addr16
pop
jge
fs
xchg
adc
sbbb
sub
ret
and
jae
or
dec
pop
mov
call
lods
mov
stos
cld
bound
mov
out
cmpsl
movb
mov
fmull
pop
mov
mul
push
outsl
sub
pop
adc
mov
nop
push
jmp
pusha
enter
out
ret
fistps
mov
das
cmpsb
int3
xchg
adc
lahf
jge
inc
adc
lock
push
sub
jle
push
movsb
out
repnz
fbstp
and
clc
xchg
fisttpl
xchg
addl
int
dec
adc
mov
lea
mov
loop
jno
pop
add
xchg
mov
stos
sbb
pop
adc
or
mov
repz
fnstcw
mov
push
fisubrs
and
fnstcw
inc
in
js
loope
mov
dec
jle
bnd
mov
mov
stos
test
cmc
pop
lea
jmp
adc
shrl
int3
in
inc
int
and
mov
mov
jmp
shl
jns
mov
aad
inc
inc
clc
add
jmp
jae
mov
dec
cmc
lahf
mov
std
ret
in
sti
xor
dec
pop
iret
jp
arpl
imull
je
test
inc
cld
and
scas
test
mov
inc
lcall
mov
dec
dec
in
sti
push
xor
jmp
gs
mov
fdivl
pop
out
ss
fldt
in
mov
mov
sub
mov
ljmp
pop
mov
ret
pop
pushf
stos
into
into
jns
gs
and
jle
lods
pop
mov
jl
push
add
mov
sub
inc
push
push
cmc
dec
dec
insb
add
inc
adc
mov
in
mov
adc
xchg
cltd
leave
fldt
repnz
jmp
lods
jo
pop
daa
pop
and
cwtl
mov
dec
ret
mov
iret
call
jb
call
mov
mov
cs
ljmp
pmuludq
sahf
stos
int
dec
mov
std
sub
mov
push
stc
hlt
xor
jo
adc
sbb
aas
ljmp
in
mov
loopne
xor
pop
pop
add
lock
xchg
ret
ss
cmc
data16
lret
testl
xchg
mov
mov
insb
mov
nop
repz
scas
aas
fidivrl
or
repnz
out
ficompl
fs
jno
imul
les
xchg
sahf
mov
inc
cld
in
cmpsb
and
add
rcll
imul
ret
jg
inc
push
sbb
rcrl
test
pop
int
pop
or
sub
mov
data16
dec
pop
jo
movsb
inc
ljmp
adc
and
mov
jae
iret
inc
mov
aam
cmp
jae
sbb
sub
push
je
mov
jns
mov
pusha
imull
mov
lea
out
or
push
icebp
dec
push
std
popa
lods
sub
dec
jge
scas
daa
jns
sub
lret
pop
cmp
dec
imul
imul
bound
mov
pop
pushf
sbb
pop
test
repz
ljmp
and
cmc
sti
mov
inc
dec
add
loopne
sbb
and
dec
pusha
lret
push
int3
add
sbb
sarb
push
sub
iret
pop
je
and
stos
mov
mov
add
push
cli
pop
xchg
sti
mov
andb
test
jo
add
mov
jae
sbb
loope
fnsave
insb
xchg
fbstp
pusha
gs
jecxz
sbbl
xchg
ret
mov
outsl
xor
cs
xor
cmp
cmp
adc
dec
mov
adc
icebp
jb
and
loopne
fldl
jns
and
push
aaa
dec
imul
packssdw
enter
loop
popl
xor
push
pop
cld
sbb
cwtl
rol
into
mov
cmc
and
or
fcompl
xor
cmp
sub
shrb
push
add
shufps
push
jg
call
lods
das
xchg
jno
push
jns
mov
fnstenv
xor
or
in
in
sbb
into
pop
pop
sbb
inc
lahf
pop
xchg
push
push
mov
cmp
mov
mov
ds
fisttpll
sub
xchg
jb
cli
xchg
sarl
insl
mov
sbb
push
xchg
test
mov
pop
insb
sub
iret
das
aaa
sub
aaa
mov
fneni(8087
lea
cmp
xchg
xchg
sbb
or
fs
scas
mov
push
loopne
aam
imul
lea
fcmovb
inc
xor
jg
imul
mov
fisttpl
xchg
jmp
fisubs
push
push
xchg
jl
enter
jle
xchg
add
mov
xlat
mov
mov
dec
insl
jb
pop
mov
cltd
add
jno
cmp
out
inc
xchg
xor
aaa
clc
xchg
jne
in
add
iret
mov
imul
rol
jmp
add
lds
jecxz
sbb
jae
fbld
jl
enter
ja
mov
lea
push
mov
push
clc
mov
cs
adc
fisttpll
sub
ret
enter
or
test
mov
or
cmc
add
dec
addr16
xchg
mov
inc
in
xor
jne
pop
out
push
mov
adcl
push
pop
mov
adc
xor
push
js
jno
xor
icebp
xchg
mov
or
ja
test
pop
push
mov
pop
cmp
xlat
mov
imull
fwait
or
mov
push
mov
push
lock
stc
mov
loop
and
stos
ljmp
pushf
sbb
ja
popa
dec
xor
mov
das
xchg
adc
dec
ja
lock
aad
jno
inc
pop
pop
xlat
mov
aad
lea
es
scas
mov
sbb
sub
or
push
pop
lods
rol
add
movsl
in
rclb
sbb
repz
inc
cmpsl
xchg
nop
push
sahf
push
scas
cmpsb
sti
pop
test
sbb
sbb
mov
int3
mov
outsb
or
sahf
dec
mov
fldl2e
xchg
push
sub
dec
mov
cmp
sub
sahf
xchg
push
movb
lock
imul
and
adc
push
xchg
adcl
xor
ss
pop
xchg
lea
loope
sub
ss
add
std
inc
into
xor
leave
int3
fdivr
mov
dec
cmp
sub
test
push
repnz
xchg
push
je
dec
fstpl
xlat
fldenv
cmp
mov
stos
pop
arpl
and
or
xor
out
ficompl
fbstp
or
in
cmpsl
aam
xor
cltd
and
shll
fidivs
enter
sub
ja
ret
lods
dec
xor
jb
rorb
jbe
push
orb
loopne
sbb
cmpsl
arpl
xchg
test
js
orl
int3
sbb
adc
dec
les
enter
push
mov
sbb
jg
mov
pop
and
jae
or
sti
xchg
imul
sub
push
add
sub
add
jl
les
clc
clc
push
cmp
mov
dec
or
dec
fisttpl
sub
les
and
push
out
lret
in
cmp
jl
push
popf
or
adc
je
sbb
xchg
xchg
mov
js
pop
insl
shl
or
xor
inc
lods
fidivrl
jnp
sahf
xchg
movsb
sarl
outsl
add
jmp
add
inc
pop
jb
sub
mov
test
aas
mov
xor
cmp
or
jmp
push
lret
pop
cmp
hlt
hlt
or
into
pop
add
cltd
dec
shll
cmpsl
mov
cmp
sbb
es
or
pop
lea
inc
mov
pop
addr16
jecxz
mov
jne
into
adc
cmp
mov
gs
push
int
dec
xchg
aaa
arpl
test
into
lea
jmp
fmulp
ljmp
flds
or
rol
test
mov
push
out
push
xor
or
pop
js
adc
cmp
mov
movaps
push
xor
sahf
dec
andl
scas
iret
lret
jmp
lcall
mov
std
pop
incl
fiaddl
lea
scas
insb
das
xor
jno
dec
and
out
gs
aas
rcl
add
cmp
ret
mov
xor
pop
jmp
pop
std
cmpl
inc
jae
call
xchg
test
sub
jmp
shrb
or
enter
sbb
es
jo
mov
cmpsl
cmpb
stos
fnstsw
jbe
dec
jge
hlt
pop
push
sbb
insb
or
jle
test
mov
dec
xchg
xchg
sub
push
inc
out
adcb
frstor
mov
lret
push
and
and
bound
shlb
sub
daa
pop
ja
xor
jmp
xchg
mov
jecxz
aam
aad
loope
mov
outsl
int
int3
pop
in
repz
std
xor
inc
ret
xlat
fwait
imul
ret
mov
test
ljmp
add
and
cmp
add
cs
in
pop
sub
and
or
xor
mov
xchg
sahf
shrb
fistl
mov
daa
dec
adc
iret
mov
inc
xlat
cwtl
mov
cmp
sub
or
clc
popa
mov
call
lds
cmp
xchg
out
cmp
pop
push
xchg
inc
xor
xchg
mov
and
sub
cmp
stos
stos
aaa
jno
xchg
enter
inc
sarl
ljmp
andl
lahf
mov
addr16
pushf
test
mov
cli
lahf
lock
mov
pushf
jae
notl
pop
push
es
dec
popa
mov
jo
fscale
sahf
or
test
jno
in
push
cli
pop
stos
fidivrs
or
sbb
int
cmp
adc
push
pop
sbb
lret
inc
ds
xchg
in
mov
xchg
sbbl
lret
stos
mov
sahf
orb
sub
lret
out
mov
cwtl
jno
lret
xor
sahf
je
mov
or
mov
ja
popa
mov
data16
adc
or
inc
dec
dec
loope
cmp
jp
inc
dec
push
jo
aad
jnp
cmc
jle
leave
jo
adc
call
dec
not
push
movsl
sarb
pop
lahf
pop
outsl
fldt
sahf
fldl
or
movsl
adc
lds
or
mov
ss
pop
jecxz
add
sub
jbe
hlt
xchg
adc
pop
inc
mov
push
lret
stos
loope
push
div
adc
shlb
adc
insb
push
mov
or
mov
pop
loope
mov
std
inc
lea
jg
and
outsl
loope
scas
out
jl
mov
xchg
ja
ret
jns
dec
es
sub
adc
cmp
cltd
or
imul
std
xorl
int
sbb
nop
pop
out
pop
int3
cmpsl
pop
jge
cmp
dec
push
cltd
or
xor
aam
ss
in
aad
jmp
out
push
pusha
push
and
cmc
flds
cmpl
mov
mov
inc
lea
pop
int
push
or
ds
jle
int3
mov
addr16
cmp
pop
jmp
stc
ja
push
sub
cs
loope
inc
push
arpl
dec
push
pushf
sbb
push
jnp
icebp
sub
int
mov
cwtl
out
ja
stos
mov
dec
pop
adc
sbb
dec
stos
cmpsb
jb
rcrl
mov
gs
frstor
mov
jmp
clc
loope
movsl
cmc
push
push
cmp
pusha
je
xlat
xchg
jb
cmp
das
ljmp
pop
mov
lds
jno
sub
inc
lea
into
or
adc
and
and
ret
neg
call
shrl
mov
mov
jg
inc
cmpsb
cmp
cmp
xor
call
fdivp
mov
push
jge
sti
dec
mov
nop
jmp
mov
cld
int3
dec
sbb
nop
sbb
or
sub
cld
adc
inc
push
rcll
loopne
lock
cli
lret
aas
cld
cmpsw
test
imul
push
movzwl
mov
test
bound
mov
int3
cmp
sbb
mov
loope
jmp
inc
dec
lret
popf
mov
lcall
insl
loopne
lea
scas
adc
adc
dec
imul
adc
mov
out
stos
fs
xchg
jae
fwait
cmp
push
mov
add
out
icebp
push
xchg
xchg
push
sub
movsl
mov
and
sub
xor
ss
dec
sub
stos
incl
dec
fwait
or
inc
mov
sbb
mov
cli
sub
in
iret
fidivl
mov
aaa
popa
stos
jmp
out
cmp
push
add
sub
lret
das
sti
inc
pop
or
jo
inc
loopne
out
mov
jge
pop
cltd
xchg
dec
lcall
inc
shll
push
aaa
xor
stos
in
cmp
mov
push
rclb
outsb
inc
cmp
scas
mov
add
aad
sbb
shll
push
arpl
mov
mov
push
pop
sar
pop
daa
adc
xor
std
sub
push
pop
mov
mov
rclb
aaa
sub
dec
or
mov
pop
jb
jmp
mov
fmuls
prefetch
aad
ret
lret
jle
push
daa
mov
ret
jg
and
dec
sbb
imull
aad
movsl
loope
xchg
lods
inc
repz
out
mov
inc
cltd
outsl
cld
and
cmp
mulb
or
dec
adc
push
ljmp
adc
lret
fiadds
mov
mov
push
fwait
int
jnp
pop
sub
jecxz
jno
pop
rol
xor
and
sbb
outsl
xchg
stos
sbb
pop
sbb
dec
sub
jbe
adc
stos
lret
push
and
inc
pop
and
and
xchg
shll
jne
pop
fxch
or
dec
inc
mov
cmp
jae
inc
adc
pusha
mov
sbb
xchg
ja
in
mulb
ss
imul
aad
sub
ss
adc
test
mov
pusha
mov
jbe
jne
mov
mov
in
pop
lret
int3
pop
jle
mov
imul
sub
stos
cmp
mov
mov
jnp
adc
push
js
jp
aas
movsb
test
loope
mov
scas
bnd
mov
sahf
xchg
loopne
imul
mov
sbb
sti
pusha
out
push
repz
clc
and
shl
leave
xchg
or
aaa
xchg
or
push
sbb
sub
inc
fistpll
inc
inc
adc
int
mov
ja
xor
sahf
sahf
out
fisubl
push
and
jle
xor
dec
or
lds
xor
sbb
enter
filds
loope
xchg
repnz
mov
push
cmpsl
ret
sbb
loop
ds
pop
xchg
pop
push
push
or
stos
mov
lret
popf
repnz
and
push
dec
dec
mov
fdivrs
mov
mov
idiv
pusha
pop
movl
in
fisubs
sub
adc
pop
lods
jb
mov
loop
testb
out
lcall
pop
loope
test
clc
sbb
jmp
fsts
into
pop
decl
ffreep
jp
bound
lock
imul
mov
andl
add
stos
cmc
sahf
testl
push
jne
dec
mov
jecxz
into
fstp
stos
test
adc
or
fisubrl
mov
int
pop
jb
mov
stos
aam
inc
mov
pop
lret
pop
mov
lods
xor
cs
sbb
clc
and
ror
lods
scas
mov
pop
test
xchg
cmp
sub
mov
and
sbb
jo
fst
push
popf
xchg
lahf
push
jecxz
bound
das
ror
xor
insl
pop
in
jo
mov
mov
sar
loope
push
inc
jg
fsubs
mov
jle
sarl
clc
mov
xchg
xor
pop
mov
pop
xor
adc
lods
cltd
xchg
iret
aas
pop
adc
push
and
cmp
push
add
lods
cmp
pop
dec
in
mov
mov
pop
lods
jg
jle
sahf
daa
sub
sbb
mov
rolb
insb
insb
rorb
ret
les
int
shrl
ds
nop
pusha
add
sti
stos
adc
cwtl
xchg
push
fidivrl
xchg
js
jmp
cld
outsb
cmp
repz
loopne
push
xchg
pop
sbb
cmp
out
test
push
fcmovbe
nop
pop
or
call
in
cld
data16
call
fsqrt
lret
push
mov
mov
addb
sbb
outsl
cmp
outsl
mov
dec
lock
jo
call
repz
mulb
or
loopne
cmc
inc
lret
sti
hlt
or
jne
sbb
cmpsb
insb
sub
mov
fistl
push
xor
sahf
ret
sub
dec
sti
pop
pop
shlb
push
sub
add
cmp
and
pushf
rclb
pop
repnz
mov
push
fildl
jno
jmp
inc
pop
imull
outsl
je
hlt
sti
in
js
mov
ds
mov
xchg
out
xor
inc
imul
loope
aad
xor
xchg
mov
pop
adc
test
xor
lahf
pusha
fiadds
add
mov
pop
xchg
xor
or
xchg
mov
adc
inc
in
lea
pop
xchg
jns
and
call
sahf
jl
lcall
sbb
push
xor
movsl
fbstp
lret
dec
fdivrs
dec
ljmp
out
pop
jp
and
pushf
mov
adc
loope,pn
xchg
lds
pop
jmp
lret
adc
dec
lock
jno
pusha
jmp
test
cltd
inc
loopne
or
mov
lock
in
sub
pop
cmp
mov
rcrb
clc
push
dec
pop
fsubl
cmp
sbb
pop
mov
cmp
dec
lea
adc
ficompl
push
addl
xchg
icebp
add
adc
loope
hlt
adc
fwait
cwtl
stc
push
sbb
mov
cmp
pop
xchg
lock
and
mov
and
stos
xrelease
inc
push
mov
mov
add
sbb
xor
es
jbe
fcomip
jnp
mov
jp
inc
and
lds
mov
sbb
ja
cmp
loope
xlat
adc
in
pop
mov
aam
aad
cmc
or
arpl
xor
mov
rorb
sub
data16
xor
test
and
mov
inc
mov
add
ljmp
pop
gs
sub
xchg
inc
or
fstpl
sub
push
adc
hlt
fiaddl
ja
clc
fwait
sbb
jnp
addr16
mov
out
es
xor
add
xlat
cmp
lock
jle
cwtl
inc
mov
add
mov
pop
xor
pop
enter
or
shll
cmpb
js
push
popf
dec
inc
bound
and
sbb
orl
gs
mov
sub
or
clc
js
adc
dec
xchg
movsb
mov
movsb
or
int
push
stos
mov
pop
mov
inc
aad
sub
call
push
xchg
push
mov
stc
dec
or
mov
push
movsl
xchg
lcall
out
int3
sbb
push
cmpsl
test
aam
loope
stos
fcoml
mov
addb
jle
inc
repz
fimull
inc
push
in
sub
jl
insb
insb
shl
js
lcall
mov
fucomip
push
fstps
ja
cmp
out
lods
adc
mov
lcall
pop
loopne
loope
nop
push
js
fs
cs
sbb
das
outsb
fdivl
fldenv
or
cmp
aas
xchg
cs
popa
cmc
int
lret
ret
das
add
out
xor
push
fwait
adc
popa
mov
ja
inc
popa
jns
dec
sub
jl
jae
cs
jmp
sub
mov
imul
sub
rclb
test
mov
aam
popa
in
das
imul
inc
lret
pop
enter
lods
nop
mov
in
jl
dec
and
push
xchg
inc
out
aad
dec
loope
lret
and
dec
jb
cmp
nop
inc
mov
sti
or
mov
mov
push
adc
pusha
mov
shll
pop
out
enter
or
loopne
out
hlt
inc
stos
outsl
aad
pop
push
cs
mov
call
rcr
arpl
sbb
mov
les
push
stos
iret
shlb
sub
or
push
cmpsb
fmull
jae
lea
mov
xchg
gs
imul
xor
sti
int
mov
adc
cmpsb
and
int3
add
inc
push
daa
and
lds
andl
outsl
scas
add
xor
pop
fsubrl
add
sbbb
jbe
sub
mov
add
cmp
sti
pop
add
mov
cmp
mov
rolb
push
sahf
add
mov
iret
xor
hlt
push
mov
mov
pushf
nop
movsb
nop
fucomip
cwtl
ss
icebp
push
pop
fldcw
movl
mov
stos
dec
js
movsl
loop
in
jle
and
or
or
add
xchg
dec
popf
sbb
ss
fimuls
js
iret
test
int3
fwait
sbb
ret
shrl
sub
mov
imul
mov
das
aas
mov
popa
push
dec
mov
mov
xor
cli
sbb
outsl
dec
cmp
js
push
fcmovbe
and
in
daa
push
xchg
mov
xor
les
pusha
call
push
jmp
ds
sbb
pop
push
pushf
sahf
and
inc
fucomi
and
call
es
mov
sub
popf
sub
mov
sbb
in
push
pop
test
mov
aas
loope
ss
mov
push
stos
pop
xchg
jge
xor
jle
fiaddl
add
rclb
clc
lcall
mov
mov
xchg
clc
pop
sub
notl
cltd
push
jg
mov
add
out
xor
and
inc
mov
xchg
jne
push
pop
lods
pop
rolb
or
es
mov
mov
out
mov
and
adc
sub
fptan
test
lcall
addb
cmp
in
sub
adc
jle
pop
enter
mov
bnd
and
jg
xor
fwait
cwtl
fcmovnbe
orb
stc
cld
push
ret
fxch
jl
xchg
add
mov
ss
mov
or
sub
test
pop
xchg
mov
mov
mov
mov
and
lret
jae
mov
notl
and
adc
adc
loopne
pushf
cmp
sbb
mov
inc
cmpsb
movsb
pop
xchg
pop
loopne
pop
scas
push
clc
ret
sti
xor
roll
sbb
and
pop
push
pop
inc
xchg
imul
jl
sub
cmp
mov
jno
jmp
pop
pop
clc
push
jle,pt
jmp
fld
mov
rolb
movsb
mov
lret
adc
arpl
lea
scas
sbb
test
sub
mov
stos
lods
aaa
imul
and
dec
cmp
test
pop
add
out
pop
sti
lret
pop
jp
push
push
fimuls
fucomip
scas
and
or
sub
loop
shr
and
cmpsl
or
repnz
mov
mov
hlt
add
adc
cmp
xor
call
inc
enter
sbbb
dec
lret
cmp
fisttps
push
jmp
mov
insb
lods
mov
adc
lea
and
gs
movsl
test
sbb
jns
shrb
out
xchg
pop
out
mov
push
cmpl
lret
cld
je
pop
bound
pushf
jbe
push
ljmp
mov
dec
lret
and
and
mulb
inc
cs
xor
mov
dec
dec
std
test
jecxz,pt
insb
shl
imul
fsub
loop
inc
jo
pop
and
push
repz
loopne
sbb
push
enter
sub
das
rcll
pop
adc
mov
cmp
loop
jl
jecxz
sub
mov
test
add
mov
test
jle
inc
cmc
lods
scas
sar
mov
shr
imul
sub
push
clc
mov
or
sbb
lahf
popf
rolb
pop
andb
les
fst
pop
pop
aam
fcomps
xor
and
test
int3
shl
jae
inc
pushf
int
xchg
aad
push
loope
out
mov
mov
jae
daa
lock
lret
pop
add
mov
and
scas
insl
sahf
pop
dec
outsl
pop
aaa
aas
adc
shl
xor
sub
cmp
dec
leave
inc
push
or
jae
fsubs
ljmp
dec
scas
imul
das
insl
mov
and
arpl
pop
loopne
in
call
sbb
popf
aad
clc
xchg
add
jl
jne
scas
add
in
adc
pop
jae
mov
and
sti
rorb
std
mov
aad
sub
add
push
add
popf
popa
jne
clc
push
fdiv
movsb
sbb
inc
cmp
sbb
cmp
aad
loopne
fwait
and
loopne
in
sarb
cwtl
pop
pop
ret
mov
leave
jbe
out
xchg
xchg
mov
sbb
repz
mov
pop
inc
cmp
lret
lds
adc
mov
xchg
sub
mov
test
enter
test
add
inc
add
and
aas
std
jge
out
icebp
push
test
lret
mov
arpl
lock
popa
lret
ds
or
pop
xchg
mov
int3
pop
and
inc
fcmovu
jle
xchg
xchg
or
std
hlt
push
sbb
fstpt
push
loop
popf
js
xchg
cmp
loopne
aaa
ds
aas
call
jns
push
cltd
cltd
in
cld
adc
sbb
jmp
dec
call
or
mov
push
ds
push
mov
int3
repnz
imul
mov
out
pushf
testl
ret
ja
jnp
push
imul
jecxz
fisttps
xchg
adc
pop
cmp
out
scas
xlat
xor
dec
sbb
ret
sbb
fsubs
mov
dec
and
fs
mov
ss
inc
mov
movsl
sub
pushw
das
pop
fidivrl
cmp
mov
jle
mov
xor
adc
push
sbbl
pop
out
add
addr16
jmp
cwtl
cmc
rorb
inc
cmp
pop
sar
popa
ficoml
movsl
lahf
cmpsb
arpl
inc
call
stc
out
lahf
pop
lret
inc
xchg
pushf
or
test
sbb
cmp
ret
xchg
in
imul
or
stos
in
sti
jae
push
aas
jmp
add
insl
cld
add
push
push
pop
xchg
jnp
fucom
cwtl
or
incl
mov
fimuls
imul
dec
push
push
in
mov
outsl
or
scas
inc
leave
shlb
sbb
loop
js
add
sbb
inc
mov
ja
aam
enter
add
loopne
mov
xor
popa
dec
jmp
fsubrs
push
xor
outsl
cmp
iret
lahf
push
jae
iret
inc
or
cmc
js
cwtl
sbb
xor
adc
pop
jecxz
jmp
call
add
push
or
pop
dec
pop
mov
cmpsl
mov
in
push
arpl
add
cltd
pop
popa
shll
into
or
ja
ret
cmp
cmp
adc
push
sbb
test
inc
sub
inc
cmp
imul
mov
mov
jae
cmp
jo
dec
in
mov
xchg
repz
andb
loope
xchg
xchg
scas
in
nop
sbb
xor
outsb
lahf
and
gs
push
gs
or
sahf
cmpsb
dec
mov
fcoml
and
push
mov
sbb
jb
jmp
mov
mov
mov
xchg
or
or
jne
and
dec
lds
arpl
push
addr16
ja
jno
ds
out
cltd
ds
rcrb
ljmp
jg
lods
fisubl
sbbb
addb
testl
add
inc
cwtl
add
outsl
int3
addb
fwait
es
fcmovu
jmp
cmpl
call
lods
push
imull
sbb
cmpsl
sti
scas
pushf
pop
sbb
leave
shrl
fidivrl
xor
mov
imul
xor
xor
adc
scas
fdiv
outsb
stc
jmp
outsb
out
and
push
jno
xor
rcrb
lahf
and
mov
test
leave
sub
inc
nop
pop
icebp
adc
cmpsb
pop
fimull
jl
je
repnz
fdiv
sbb
push
mov
push
loop
fistpl
fstps
and
mov
push
repz
loope
mov
push
add
and
fucomi
in
js
sub
rolb
xchg
mov
in
sub
lea
add
pop
fmuls
push
sarb
push
pop
scas
stc
aam
jne
push
mov
es
push
dec
outsl
xor
cmp
mov
xlat
dec
jbe
xchg
rclb
add
or
aad
mov
dec
jo
mov
dec
js
push
mov
or
or
testl
das
xor
dec
add
mov
pop
mov
pop
call
and
rcrl
pop
dec
fcomp
ret
clc
ljmp
icebp
sub
sbbl
or
int3
jl
pop
dec
dec
fwait
sbb
movsl
testl
pop
lock
pop
or
sub
jecxz
and
jp
and
test
xchg
add
sub
inc
ret
mov
stos
add
jae
daa
cmp
ja
out
test
inc
testb
js
int
xor
push
xor
fcmovnu
popf
sub
mov
lahf
mov
mov
addr16
xor
sbb
pop
lcall
push
movsl
pop
test
mov
iret
add
insb
sub
push
mov
je
fwait
in
ja
mov
addr16
push
sub
add
fs
inc
pop
or
not
dec
pop
push
sub
mov
cltd
dec
aam
inc
insl
cmpsb
mov
incl
scas
fmulp
and
sub
push
bound
test
mov
xor
and
xor
scas
xchg
add
shll
push
pop
cmp
inc
xchg
sbb
xlat
sub
ja
lea
jg
sbb
or
add
push
shlb
insl
push
pop
xchg
push
dec
mov
jg
xor
sbb
pop
mov
cmp
sbb
imul
sub
bswap
cmpsl
adc
or
push
dec
fdivp
loope
mov
and
and
in
and
sbb
aas
pushf
sub
push
inc
mov
jmp
mov
cli
xor
test
inc
xor
in
xor
adc
clc
mov
push
into
cs
pop
scas
pop
and
je
fwait
pusha
dec
out
ret
hlt
gs
adc
das
aad
or
adc
mov
lea
out
mov
sub
test
or
movsb
or
pop
hlt
or
and
jecxz
add
add
dec
scas
sbb
fyl2x
data16
daa
std
in
loope
shl
testb
arpl
dec
sbb
imulb
xchg
into
and
mov
push
mov
adc
shrl
push
xor
aaa
test
bound
push
push
ds
push
pop
jle
mov
hlt
out
lods
fists
dec
xchg
mov
jle
jbe
lods
cli
les
and
lock
jle
and
add
dec
dec
lods
pop
std
imul
loope
dec
movups
mov
call
mov
scas
push
add
push
jmp
pop
insl
push
fnstsw
inc
je
loop
mov
ljmp
mov
add
dec
repnz
das
inc
and
xchg
mov
adc
and
iret
or
mov
sbbl
incl
je
push
mov
mov
sub
xchg
mov
cwtl
cmp
add
add
pop
aad
xlat
push
dec
jmp
cld
pop
mov
mov
popa
out
cmpsb
sbb
loop
fsubl
sub
jecxz
aas
push
xor
xor
cmp
js
ss
outsl
mov
mov
cmc
das
movsl
and
xor
add
hlt
in
pusha
inc
pop
push
scas
pop
xlat
jae
cmp
push
cld
iret
call
inc
xchg
addr16
sbb
pop
repnz
and
push
rclb
das
adc
mov
jmp
sub
fstp
xchg
andl
and
jae
call
pop
jns
sub
mov
insb
inc
lock
push
ret
roll
inc
popf
pusha
push
test
lock
mov
stos
add
dec
fs
push
lret
lds
cmpsl
fucomip
outsb
fwait
sub
pop
lahf
xor
jns
push
inc
pop
add
adcb
gs
fnstenv
dec
inc
inc
sub
cwtl
mov
or
xchg
mov
or
iret
addb
push
fwait
mov
add
push
addr16
mov
bound
push
xchg
movsl
sub
ljmp
data16
adc
mov
ds
les
iret
add
dec
fcoms
enter
cmp
and
fists
fldenv
mov
gs
loopne
add
inc
rclb
insb
xchg
xchg
xor
fld
sbbl
gs
jge
add
fimull
fstpl
es
mov
jp
xlat
jl
or
scas
ljmp
dec
pop
jne
sahf
loop
add
mov
cs
pop
mov
jecxz
or
call
in
pop
pop
lret
sbb
out
out
cmp
fimull
sbb
mov
pop
shlb
mov
inc
xchg
xor
pop
xchg
sbb
data16
push
jbe
cli
adc
inc
and
lea
in
scas
jne
cmpsl
add
add
push
jbe
ja
mov
add
xlat
data16
jle
xchg
inc
sub
mov
repnz
aam
negl
adc
push
cwtl
push
sbb
ret
xor
push
imul
rcrl
sbb
dec
cmp
mov
or
mov
call
dec
xchg
pop
jl
push
pop
insb
sbb
add
fisubs
pop
mov
data16
popf
inc
dec
ret
dec
orl
scas
push
int
call
pop
adc
mov
xchg
ret
sti
pop
adc
test
popf
xor
mov
pop
sbb
std
jne
dec
push
fistpl
aam
mov
add
out
mov
lcall
rcrl
add
in
imul
mov
out
or
rolb
push
dec
inc
loop
int
inc
movsb
cmpsl
mov
and
loop
ficompl
mov
adc
stc
mov
cltd
xchg
jge
sub
and
mov
push
sbb
fwait
jns
push
or
mov
dec
iret
outsl
insb
xor
add
mov
pop
mov
push
fwait
mov
xchg
mov
dec
sbb
mov
push
push
push
test
jb
clc
inc
stos
sub
push
and
mov
push
mov
leave
pop
in
xor
jne
xchg
cli
jge
xor
rolb
daa
into
jmp
inc
lret
cmp
push
cmp
add
jns
mov
incb
add
xlat
mov
pop
and
sub
xchg
xlat
stos
test
das
cmp
loopew
dec
imul
dec
sub
adc
in
mov
call
mov
dec
push
lahf
or
mov
and
adc
and
xchg
daa
jecxz
out
pop
test
sub
pop
xlat
cmpl
adc
inc
sub
pop
mov
sub
and
lahf
sbb
cmp
lods
and
loopne
dec
inc
xchg
cmpsb
sarl
cmp
sbb
mov
add
stos
in
ja
add
roll
push
int3
xor
fcoms
fs
jmp
daa
outsb
out
pop
lods
push
leave
iret
repnz
fisttpl
mov
mov
pusha
cmp
hlt
or
jg
fchs
sbb
push
gs
in
jecxz
add
daa
cli
and
add
pop
test
in
mov
dec
push
in
std
cmpsl
and
sub
jecxz
rcrb
fildll
dec
inc
out
jno
dec
movsl
or
mov
out
test
ret
adc
shlb
pop
cmpsb
fstl
dec
jle
aad
les
xchg
hlt
or
aam
scas
and
lret
std
mov
ljmp
daa
cmc
imul
data16
ror
inc
sbb
xchg
mov
fldcw
leave
cmp
mov
shll
xchg
pop
add
fwait
push
clc
lea
lock
and
push
stos
xchg
cli
iret
add
cltd
test
imull
in
loope
cmp
lock
stc
movsb
or
pop
inc
fsubs
adc
movl
pop
mov
cmp
pusha
mov
ljmp
mov
flds
dec
mov
gs
test
ror
pushf
add
mov
push
in
call
dec
xlat
divb
pushf
cmp
xchg
aaa
rdpmc
jb
or
loopew
mov
dec
ret
pop
ret
repz
cmp
int
xor
daa
fldl
fcomps
xchg
xchg
or
pop
das
add
out
sub
sub
aaa
mov
pop
imul
xchg
lret
adc
or
dec
arpl
pop
daa
add
and
pop
xchg
enter
shll
cmp
test
xchg
pop
rolb
push
or
rcrb
fdivr
xchg
test
test
aam
sarb
xor
addb
cltd
cmp
inc
je
dec
in
xor
data16
in
cmp
fdivrs
pop
mov
in
push
fdivl
xchg
mov
or
mov
pop
in
inc
ret
jnp
inc
popa
sbb
test
inc
mov
xchg
inc
rorl
leave
xchg
pop
and
out
movsb
sahf
dec
add
jmp
stc
cmp
sub
add
movsl
mov
push
lcall
fwait
cwtl
ljmp
iret
jns
mov
cmp
test
add
mov
xor
ss
int
icebp
sbb
sbb
movsl
fdivrs
mov
fnstsw
xchg
lods
sahf
sbb
insl
sub
push
test
mov
mov
xor
push
push
mov
adc
in
outsl
stos
or
mov
mov
push
adc
push
and
jecxz
shlb
xlat
mov
push
mov
and
insb
stos
das
push
xchg
dec
cmp
std
and
stc
mov
fmuls
sbb
add
xchg
popf
xor
dec
out
mov
sbb
lret
add
mov
fucomi
pop
loope
ss
sub
xchg
out
jne
mov
mov
adc
insl
add
stc
mov
jbe
sbb
sbb
pop
sahf
dec
mov
sub
addr16
mov
aas
mov
mov
xchg
mov
movsb
lahf
xlat
dec
dec
mov
mov
dec
std
repz
lahf
xchg
sbb
test
lods
push
sarb
xor
movsl
adc
inc
paddusb
cwtl
mov
movsl
pop
pop
jne
and
lahf
cmp
push
xlat
mov
loop
iret
cmp
jle
pop
loopne
pop
shlb
movb
cmpsl
sar
ror
cwtl
jle
enter
les
dec
rolb
dec
sub
cmpb
and
mov
jle
leave
fcomps
outsb
hlt
repz
or
popa
inc
fisubrs
sub
dec
cmp
repz
daa
inc
pop
lods
aaa
je
sbb
rcrl
out
push
imul
stc
inc
xchg
mov
pop
clc
xchg
push
fldl
dec
and
push
xchg
mov
and
ret
fs
dec
mov
outsl
insb
adc
lcall
aas
int3
mov
sub
nop
lods
jae
std
xlat
scas
mov
arpl
scas
mov
out
lretw
scas
rcrl
out
mov
and
stos
sbb
movsb
push
rorb
mov
xorl
jmp
dec
xchg
in
adc
lret
xchg
dec
dec
pop
mov
cmp
cmp
imul
or
add
mov
ret
cmc
out
rclb
inc
les
jl
mov
adc
mov
out
mov
movsb
mov
cmpsb
stos
sti
out
or
lret
lret
jns
or
push
das
das
mov
jae
pop
outsl
lds
push
out
xchg
lcall
xor
imul
icebp
ds
and
xor
jo
sbb
and
fildll
stos
push
js
add
out
sbb
adc
ss
fs
fnstsw
push
movsb
lds
cli
adc
int3
cmp
dec
sbb
pop
lds
gs
mov
aaa
jecxz
pop
imul
jmp
jmp
loopne
jmp
xchg
bound
adc
xchg
mov
movl
pop
pop
jg
scas
in
jae
sbb
js
or
daa
xchg
orb
fwait
xor
test
fs
pop
sub
scas
pop
fadds
cmp
and
inc
mov
call
cmc
stos
sbb
pop
jns
pop
mov
and
and
cltd
mov
push
inc
enter
xchg
into
xchg
das
dec
jl
pop
mov
mov
sahf
std
dec
pop
daa
cld
daa
movsl
inc
lret
lods
push
or
clc
xor
cs
jecxz
in
ret
push
sub
fstl
mov
int3
push
lret
cmp
sbb
mov
mov
shlb
dec
rcl
cmpsb
call
sbb
adcl
and
jecxz
jne
push
mov
les
ljmp
stc
inc
sub
fs
xchg
es
inc
rcrb
mov
mov
push
push
shll
jp
mov
test
fwait
roll
sub
std
xchg
test
aam
ffreep
xor
push
ret
jmp
rcrb
dec
sbb
xchg
push
xchg
imul
pop
sbb
test
jnp
jmp
cmpsl
mov
daa
cmp
mov
mov
orb
push
outsb
adc
ljmp
xchg
mov
push
mov
mov
jns
and
mov
push
fwait
push
scas
sbb
add
lods
pop
sub
xchg
je
pop
aam
xchg
sub
adc
aam
lock
jns
test
rclb
push
jb
rorl
or
xor
gs
mov
lret
and
inc
add
push
mov
adc
fbld
in
push
push
repnz
fstenv
xor
inc
cs
sahf
sbb
imul
mov
pop
mov
and
cmp
gs
sbb
push
lods
dec
fwait
mov
and
into
cmpsb
jle
ret
mov
imul
jae
xchg
inc
out
data16
ficoml
and
mov
mov
insl
arpl
imul
iret
push
stos
data16
inc
sub
daa
jg
mov
pop
inc
inc
iret
mov
sub
fsubs
bound
mov
insl
push
mov
xchg
mov
jmp
xchg
repz
xchg
fists
push
cmp
pushf
add
mov
scas
fsts
add
pushf
xor
jmp
push
mov
mov
pop
stos
das
aad
jmp
adc
rcll
stos
pushf
mov
add
dec
sbb
jmp
or
scas
sub
mov
insb
fstpt
jbe
lret
rcrb
add
arpl
dec
jle
mov
shll
shlb
mov
mov
bound
out
push
mov
sahf
mov
testb
shrb
adc
push
add
inc
mov
ds
mov
sbb
iret
int3
shlb
loop
test
je
icebp
push
sahf
jp
negl
ja
stos
sar
dec
push
add
push
dec
sbb
xchg
mov
into
lods
sbb
jle
ss
xchg
and
push
cld
sub
inc
repz
and
xchg
xchg
inc
jno
scas
and
mov
aas
cwtl
out
shlb
xchg
jg
leave
bound
popf
or
sub
lret
imul
mov
push
mov
ljmp
mov
es
fidivs
cmp
mov
jmp
stos
mov
jle
iret
iret
lret
shll
outsb
push
lods
xchg
pop
mov
jl
adc
aam
adc
icebp
lcall
mov
ret
push
int
xchg
push
sub
cmp
mov
add
lahf
mov
inc
inc
sbb
out
gs
js
in
std
iret
ret
in
add
pop
pusha
cs
sbb
jg
in
movsb
mov
into
and
and
mov
xchg
loope
lret
jp
mov
leave
rcr
xchg
imull
ds
xor
lret
cmpsl
ja
mov
bsf
lock
shlb
sub
jl
popf
mov
jnp
dec
cmp
std
lods
or
xor
rclb
outsb
out
hlt
jne
adc
or
mov
mov
loope
inc
inc
xchg
dec
pusha
sub
or
mov
in
jne
mov
orb
fwait
inc
sti
xor
pop
pop
xchg
jns
sbb
cmpb
addr16
ss
scas
mov
cmc
mov
add
jg
pop
add
sbb
mov
lock
test
inc
les
add
dec
and
pop
push
movsl
in
push
dec
pushf
jecxz
out
in
dec
jl
mov
add
sub
adc
adc
pop
out
rcr
and
inc
lods
in
push
add
cmp
mov
push
dec
mov
dec
or
xchg
or
roll
jbe
add
jle
or
fadds
je
cmp
out
out
adc
adc
lret
fldl2e
int
jnp
pop
mov
pop
sub
cmpsb
movsl
add
pop
cmp
jmp
lcall
ja
xor
cld
pop
jmp
adc
outsl
or
dec
cs
addr16
repz
push
incb
enter
dec
sub
pop
and
mov
gs
outsb
cmpsb
jge
add
dec
fwait
dec
dec
leave
and
xchg
sti
out
icebp
cmp
dec
fisubl
mov
gs
mov
pop
jne
xor
push
insl
pop
push
jecxz
cmc
inc
xchg
cmp
das
movsb
cmp
add
into
shl
fidivl
rorb
cmp
mov
fisubrs
jae
sahf
jno
js
cmp
clc
sahf
inc
pop
mov
into
rcr
in
sub
addl
and
mov
jge
nop
testb
faddp
movsb
shlb
int
lods
imul
hlt
fidivs
scas
aaa
cli
inc
pusha
popf
adc
rcll
jne
jle
xchg
mov
lea
push
jne
xor
in
or
adc
je
sub
jmp
fs
push
or
aad
aad
sbb
movsl
xor
addr16
movsl
jg
imul
xchg
lods
out
xor
inc
mov
or
lret
mov
pop
pop
cmp
jae
int
sbb
sti
andb
inc
or
xor
xchg
cmp
jge
push
testb
push
loopne
out
sbb
pop
add
dec
pop
inc
sbb
aaa
mov
xor
loope
xchg
push
out
inc
mov
mov
out
adc
dec
bound
xchg
pop
pusha
jge
lods
aam
sbb
pop
pop
std
push
pop
aad
and
cltd
cmc
lea
cs
push
mov
ss
xor
add
int3
mov
int
icebp
adc
icebp
cwtl
dec
jmp
test
push
fadds
add
cs
push
mov
jecxz
pop
fdivp
loope
jmp
outsl
mov
mov
aas
mov
dec
rorb
mov
mov
addr16
mov
imul
xor
iret
pop
sub
inc
add
push
sub
sar
mov
xchg
inc
and
js
push
push
stc
in
std
mov
loopne
mov
sbb
xor
fwait
jle
inc
das
push
rorb
or
loop
fimuls
and
adc
addb
mov
fadds
jo
popa
out
push
shll
push
leave
fdiv
cli
int3
mov
jle
mov
lea
stos
lret
ja
iret
pusha
mov
test
inc
add
fistpl
cld
xchg
jns
push
and
imul
xor
loope
out
clc
cmp
push
fistpl
adc
scas
pop
ror
int
jmp
and
sbb
jns
gs
push
jmp
lcall
mov
pop
lds
pop
inc
inc
pop
cmpsl
jbe
add
jmp
push
test
cld
fnsave
lock
dec
sbb
jns
fs
xor
test
shlb
mov
inc
dec
inc
pop
pop
push
mov
mov
out
cmp
dec
sub
sahf
lret
bound
and
inc
fs
or
xchg
or
cmp
and
out
test
popa
and
in
test
cmp
jno
or
cmp
fwait
pushf
jl
sbb
lret
inc
outsb
mov
adc
sub
pushf
cmc
lea
add
in
ret
xchg
push
je
outsb
jmp
incl
dec
in
imul
mov
sti
into
cmp
scas
ror
aas
add
jne
jo
adc
test
rorb
xchg
loop
lret
mov
mov
pop
sbb
inc
jmp
fwait
notb
mov
push
andl
mov
cmp
out
lds
pop
into
out
mull
and
cmp
out
inc
lahf
mov
es
cmpl
cmpb
es
mov
xor
cmpsl
sahf
icebp
cmp
jg
xor
test
jns
cmp
xchg
xchg
call
mov
jo
daa
arpl
sub
pushf
adcb
push
xlat
into
xchg
mov
cmpsl
pop
xor
mov
ljmp
aam
stos
mov
fdivrs
push
ret
das
lods
popf
arpl
into
jg
xchg
aam
cwtl
adc
xlat
scas
aas
dec
mov
mov
mov
cmpsl
or
mov
imul
in
or
fbld
jno
add
xor
sbb
loop
inc
aam
inc
add
ljmp
sti
out
fldt
pusha
inc
xchg
jns
jge
mov
daa
sbb
dec
inc
xchg
cmc
add
and
jb
adc
loope
icebp
pop
ljmp
or
jmp
jnp
mov
xchg
pop
fwait
mov
jno
in
cmp
jmp
arpl
stc
add
in
repnz
in
fimull
loope
mov
sub
sub
add
mov
lock
sub
sbb
mov
mov
jge
inc
and
mov
sub
jp
pop
test
pop
test
aam
pop
inc
test
cld
rcll
aam
xchg
xchg
test
dec
lcall
iret
cmp
ret
or
adc
sub
sti
mov
jmp
pop
inc
dec
cmp
and
and
pop
cmp
stc
dec
mov
xor
dec
aam
cwtl
dec
and
add
popa
xchg
subb
mov
cmp
rorl
mov
jnp
stc
mov
xor
mov
mov
or
mov
cmp
jge
lods
sub
pushf
gs
psubusw
sbb
outsb
clc
push
pushf
dec
lret
xlat
sub
xor
lret
nop
xor
testb
int
orb
jl
push
sub
fsub
sti
lret
lock
adc
push
mov
jnp
mov
xchg
in
insl
daa
das
insb
test
pop
mov
mov
adc
fidivs
push
clc
jne
mov
add
lock
push
and
arpl
mov
fsubrs
add
pop
mov
adc
mov
fisttps
xor
nop
lds
push
mov
adc
mov
lods
xlat
pop
out
sbb
ror
xor
sub
jbe
lret
xchg
in
cmpsl
cmp
mov
lds
out
dec
lds
xor
lret
mov
cmpsb
sbb
or
mov
repnz
or
push
jb
gs
mov
xlat
leave
or
shll
pop
and
adc
in
xor
in
repnz
xor
fildl
jg
mov
into
in
je
js
in
inc
aad
test
mov
movmskps
loope
push
lcall
ret
pop
push
int3
arpl
pop
loope
cwtl
ljmp
loopne
mov
push
mov
imul
or
int
scas
inc
loopne
call
ret
push
xchg
in
pushf
add
inc
jns
pop
and
mov
mov
sahf
cmp
push
mov
push
out
or
fsub
add
in
dec
dec
imul
clc
ljmp
jge
loopne
sub
mov
dec
test
lods
icebp
and
repnz
and
inc
mov
push
imul
mov
or
xchg
aad
cmp
mov
push
adc
mov
mov
xlat
hlt
ds
int3
lahf
int3
adc
pop
mov
leave
cld
sahf
xor
scas
pop
test
fxch
cmpsb
clc
sub
stos
ljmp
jmp
mov
push
movsb
mov
sub
xor
popa
pop
adc
pop
xchg
xchg
leave
pop
adc
mov
rcll
dec
je
dec
aas
sbb
mov
pop
loope
adc
mov
xchg
cwtl
xor
frstor
lret
cltd
mov
cmpsb
lcall
lods
mov
or
ret
inc
push
fmuls
or
jmp
roll
test
frstor
pop
subl
nop
mov
or
sub
and
dec
das
movsb
insl
sbb
fbld
shll
mov
mov
sbb
sub
fstpt
jmp
sub
addr16
or
stos
inc
hlt
xchg
add
inc
jmp
sbb
pop
and
out
movsl
adc
lcall
adc
push
in
jmp
sbb
lock
sbb
dec
cmp
or
nop
cmpsb
or
lret
lea
aam
sub
orb
rolb
mov
push
jp
cmpsb
add
int3
or
mov
jecxz
bound
popa
cmp
test
cs
fwait
inc
xchg
shr
in
scas
sahf
xor
out
dec
cmp
xchg
dec
mov
and
ja
fsubrs
mov
mov
jnp
cmp
cmp
jbe
nop
shr
adc
addr16
jo
push
fwait
xchg
cli
push
movsb
insw
or
out
test
lock
sbbl
push
ja
subl
xor
ret
jbe
sbb
dec
mov
std
pop
cmp
mov
mov
mov
sbb
ficoml
jo
sub
and
fwait
in
pushf
movsb
flds
or
movsb
xchg
fwait
xchg
xor
cmp
xlat
test
sti
imul
mov
movsb
mov
jb
insl
jne
aam
sub
sub
out
orb
fcmovnu
sarl
dec
mov
sub
xchg
rcll
ljmp
daa
fld
sbbb
push
xor
mov
xchg
xor
sbb
js
cmc
mov
es
fildl
pop
jne
mov
mov
add
mov
lret
out
rcrl
pop
mov
lcall
or
jl
insl
cmpsl
mov
out
add
inc
sbb
xchg
lret
mov
sbb
inc
pop
ret
ret
mov
or
ja
cmp
mov
mov
loope
push
std
shrl
xlat
mov
lds
cmp
lret
and
aaa
xor
mov
fwait
lods
jle
lahf
rcll
or
xor
lods
movsb
sbb
push
mov
mov
sub
fwait
mov
pop
xchg
loop
ret
mov
je
cmp
adc
pop
mov
test
xchg
mov
cld
movsb
stos
in
jp
dec
lds
mov
jns
int3
sub
mov
jl
gs
push
mov
aas
loop
adcb
pop
shll
cmp
jmp
cmpl
cmpsb
es
ret
xorb
imull
mov
mov
mov
and
pop
dec
and
int3
jl
jb
movsb
mov
cmp
inc
dec
xor
dec
ja
adc
ss
je
push
mov
adc
mov
ljmp
and
jmp
clc
cmpsb
imul
cmp
lock
loop
mov
cltd
out
or
jecxz
mov
xlat
inc
outsb
mov
add
loope
adc
and
mov
inc
jl
gs
mov
adc
fimuls
dec
mov
rcrb
jg
mov
add
aad
stos
xor
or
adc
aam
arpl
inc
pop
xorb
ljmp
ljmp
fs
in
pusha
sahf
xor
push
mov
lods
xchg
xor
in
add
push
jo
xchg
push
rcll
idivl
push
dec
sti
xchg
fninit
sbb
xorl
xor
dec
push
and
jae
sub
xor
inc
jg
test
sub
mov
cli
mov
les
xor
mov
loopne
loopne
imul
push
fs
enter
pop
rcr
addr16
arpl
scas
jb
pop
in
loop
cwtl
cmp
mov
cli
jo
jle
shr
aaa
lods
mov
out
fidivl
cmp
cs
push
and
jnp
shrb
cmp
jecxz
sti
and
cmp
mov
mov
and
ljmp
mov
int
jp
stos
cmpsl
daa
push
sub
roll
push
mov
inc
ljmp
out
mov
popf
pop
loopne
jp
mov
mov
mov
jbe
mov
sbb
rcl
out
xchg
sti
rcrb
dec
xchg
xchg
jae
sbb
mov
ja
add
or
jnp
aaa
fstpt
mov
cs
loop
test
mov
ficompl
sub
jmp
stos
cli
iret
mov
in
out
xor
cmp
sbb
lea
lea
pop
jnp
push
fcomi
add
xor
mov
lods
imul
xor
testb
cmp
jne
sub
xchg
mov
mov
pop
push
xlat
inc
fbld
loope
inc
dec
adc
stc
add
push
clc
das
adc
jge
shll
movsl
adc
jmp
push
add
jmp
add
fcoms
mov
lret
cmp
inc
pop
lock
das
fstps
jns
cmp
sbb
xor
xor
pop
or
dec
in
lahf
in
adc
inc
es
dec
bound
add
scas
clc
push
daa
or
dec
fisubrs
mov
test
leave
fisubl
clc
xchg
dec
int3
call
lret
nop
ret
add
cmpsl
loope
shl
jbe
cmp
aam
sbb
mov
xchg
mov
rclb
jmp
or
jmp
clc
jae
je
das
cwtl
inc
andb
clc
subb
jge
mov
int3
and
cmp
popa
mov
cmp
sahf
sub
cmp
movsl
jae
fwait
xchg
movsb
sub
push
add
cmc
mov
mov
mov
ja
bound
popa
adc
adc
jp
mov
insb
cwtl
loope
xor
mov
jb
and
adc
lods
and
mov
repz
fmulp
cmpsb
sub
xchg
xchg
data16
idiv
adc
into
mov
cmp
loope
pushf
jp
rcrl
test
add
clc
mov
clc
push
cmp
jo
cmpsl
jb
push
leave
jl
sti
adc
mov
mov
push
repz
scas
pusha
out
cld
jecxz
inc
sub
mov
xchg
add
inc
mov
mov
loop
or
xchg
jnp
mov
dec
insl
hlt
bound
aaa
cmp
into
cmpsb
fcompl
sbb
add
enter
shlb
mov
cmpl
lahf
mov
mov
cli
ror
test
pop
push
xchg
lea
sbbb
cmp
cltd
fs
les
jae
push
cmc
mov
lcall
int3
inc
xchg
or
fstpt
jno
lret
or
test
jb
mov
mov
out
lcall
xor
stos
loope
mov
repnz
xchg
shrb
jge
ds
sub
aas
lret
push
mov
or
adc
pop
mov
imul
test
add
add
jp
jl
js
pop
ret
cmp
sub
inc
cmp
xor
cli
dec
shlb
sub
mov
cltd
les
js
arpl
dec
pusha
xor
mov
in
push
mov
mov
pusha
push
dec
inc
fsubl
mov
popf
or
push
ja
test
push
imul
arpl
fmull
out
inc
cmpsb
fs
cmp
xchg
pop
inc
lret
push
js
add
sub
vmovaps
sub
pop
popf
mov
mov
mov
cs
out
aaa
dec
loope
out
cmp
cmpb
imul
cmp
add
inc
out
pop
repnz
jnp
cltd
pop
fistl
sti
pop
test
push
sbb
loop
or
data16
int
cmpl
cmp
rorl
scas
inc
call
testl
push
pop
jecxz
push
or
push
adc
aad
stos
mov
clc
ss
insl
xchg
inc
mov
push
jle
push
mov
mov
cmpsb
imul
out
xchg
aad
dec
pop
mov
das
or
cmp
and
inc
mov
mov
fdivl
iret
jg
adc
enter
stc
add
scas
dec
pop
aad
test
arpl
call
and
push
mov
pusha
inc
and
pop
jb
xlat
xchg
jl
pop
jne
clc
dec
xor
jge
notl
lret
jns
and
js
lret
sbb
push
mov
xor
add
sub
mov
cmc
jmp
dec
enter
clc
mov
xor
sub
dec
das
decb
mov
lods
push
int3
subl
xor
enter
les
pusha
test
sub
pop
nop
pop
sbb
pop
pop
addr16
pusha
xchg
repz
nop
sub
mov
xchg
in
sti
lods
test
movhps
repnz
pop
out
jo
fwait
jae
xchg
out
mov
lret
pop
ljmp
test
fs
cltd
aaa
js
popf
jns
or
and
or
mov
inc
push
shrb
imul
jmp
repnz
mov
sbb
or
cmpsb
or
inc
cmp
jae
or
fsub
add
jle
out
jge
sub
aad
dec
cld
xchg
jp
subl
xchg
sub
out
xchg
loopne
add
or
pushf
pusha
adc
testl
pop
fbstp
or
stos
ljmp
jmp
repnz
ret
repz
fs
outsl
add
stos
adc
or
ljmp
sub
add
sahf
lods
stc
mov
xchg
and
mov
lahf
aam
das
xor
jecxz
mov
xor
cltd
stos
loopne
sbb
jl
xor
xlat
test
add
pop
stos
adc
push
mov
cld
pop
sarb
aas
decl
popf
les
jmp
cld
ljmp
dec
ret
cmp
cmc
nop
notb
adc
push
mov
xor
push
inc
movsb
jo
xor
jl
movb
movb
mov
sub
pop
cmp
daa
sub
jecxz
fsts
inc
ja
std
pop
ret
mov
imul
test
pop
sub
dec
daa
sbb
imul
mulb
scas
stc
xchg
cmp
add
popa
fistl
xor
testl
inc
pop
and
pop
nop
out
into
xchg
movsl
pop
sbb
mov
pushf
or
cmpsb
cli
out
clc
jp
js
lods
inc
pop
jle
adc
pop
inc
popa
clc
mov
into
jo
sbb
and
fs
iret
stc
data16
mov
int
std
out
pusha
add
xor
aas
sub
jmp
xchg
outsb
cmpsb
add
popfw
aaa
push
movsl
jo
jno
and
stos
or
stos
jg
cmp
fstl
jb
cmpb
lret
xchg
cmp
mov
inc
inc
pop
and
cmp
ret
mov
imul
pop
popa
bound
dec
sub
push
repz
mov
dec
adc
mov
subl
xchg
push
pop
inc
lock
into
in
test
fimull
das
inc
mov
les
sub
jno
insl
xlat
xchg
stos
or
popf
imul
repz
in
mov
mov
cld
jo
adc
nop
inc
mov
outsl
push
push
pushf
mov
ja
subb
test
jns
imul
mov
cmp
loope
jle
and
sub
movsl
sub
xchg
and
jle
loope
ljmp
loope
pop
outsb
fidivs
in
repz
sub
or
xor
adc
push
or
lods
cmp
fs
cli
in
in
aam
or
imul
call
inc
xchg
setno
clc
xor
fiaddl
std
inc
xchg
and
push
ljmp
push
pop
add
mulb
stos
out
sub
sub
inc
jle
insb
pop
mov
imul
xor
dec
jg
shrl
fstl
xor
les
test
dec
xor
jg
dec
xchg
inc
inc
insb
dec
and
add
adc
xchg
cwtl
rcll
push
mov
push
clc
into
dec
jo
mov
jmp
pop
sub
movntq
cmp
aad
leave
sub
cmp
out
push
mov
jns
jecxz
out
xchg
aas
push
mov
std
mov
pop
xor
sub
add
pushf
mov
dec
xchg
pop
dec
out
outsl
ss
mov
or
sbb
cmpsb
xlat
or
aaa
mov
sahf
mov
imul
mov
loop
mov
jno
or
cmp
mov
pushf
aas
or
push
in
jg
mov
cmpsb
clc
shll
sub
cmpsb
mov
lds
mov
ret
ss
sbb
nop
out
push
pop
add
rolb
and
add
js
push
xorl
ss
mov
jbe
mov
sahf
mov
jo
push
fisubs
dec
out
pop
and
cmp
push
add
mov
lahf
loope
add
add
sahf
adc
outsl
wbinvd
pop
pop
inc
in
or
enter
lret
imul
stos
mov
int3
cmp
pop
ds
fadd
mov
pop
cmp
xchg
pop
arpl
push
or
sbb
test
testb
adc
out
mov
xchg
or
stos
xor
arpl
add
inc
cmp
sbb
movsl
out
mov
call
ljmp
es
mov
das
sbb
cmp
and
push
sbb
xchg
add
fstpt
or
das
lods
call
stc
in
adc
and
push
mov
or
pop
je
xor
dec
les
and
cmp
std
sub
fldcw
cli
imul
call
lret
add
sbb
mov
lahf
das
jp
or
push
ret
cmp
xor
pop
jecxz
js
sbb
fstl
mov
cmpsb
push
jbe
mov
je
int3
cmc
testb
pop
js
les
stos
mov
ljmp
dec
mov
dec
jbe
loope
push
dec
sarl
adc
leave
enter
dec
loope
popf
scas
stos
push
cmp
or
fs
cmp
push
fnstcw
loopne
jmp
cmp
out
imul
xorb
add
or
sub
xor
mov
movsl
push
repnz
cmc
arpl
dec
mov
cmp
add
mov
jmp
xchg
test
and
movsb
xchg
enter
in
add
mov
lahf
insb
dec
pop
mov
mov
mov
lret
cli
inc
sub
stos
scas
sub
mov
fsts
js
test
sub
mov
jge
push
ds
cs
out
fxam
ds
sub
cmp
push
adc
or
cmpsl
out
das
loop
add
mov
cld
and
sub
nop
adc
in
jecxz
lods
adcb
mov
jecxz
dec
mov
jbe
sub
pop
xor
jp
aas
ds
iret
cwtl
filds
andb
movsl
jbe
and
int
sub
cmp
jle,pt
fsubs
push
das
lcall
push
out
repnz
push
lahf
mov
stos
mov
ljmp
jmp
ja
call
cmc
fnstcw
aaa
sub
inc
or
jo
xchg
mov
enter
cmp
hlt
xchg
push
mov
inc
cmpsl
inc
ret
jns
push
icebp
aas
inc
jecxz
pop
pushf
lods
cli
cmp
shlb
jmp
test
cmpsl
pop
incl
in
and
je
test
mov
mov
enter
stc
mov
daa
stc
bnd
ss
mov
xchg
aam
push
jo
dec
addb
sti
repnz
popf
xor
jge
jno
daa
mov
rcrl
jle
es
movsb
add
or
inc
jae
push
mov
mov
jmp
xlat
cmpsb
orb
dec
jae
subb
jnp
adc
stos
ljmp
lcall
xor
mull
pop
sbb
neg
fcomps
push
fisubs
or
xor
fisubrl
jge
jl
and
int3
xchg
leave
cmp
cmp
jns
rcrl
xchg
cmpl
fsubl
jo
jle
push
aad
ds
addr16
cltd
lret
sarb
inc
movsb
mov
xor
into
sbb
sbb
rorb
jo
inc
dec
aaa
cli
adc
add
mov
shlb
ret
push
fnstcw
mov
ja
xchg
push
add
lret
dec
je
lock
cmpsl
jle
outsl
call
adc
pushf
js
cmc
jp
mov
inc
inc
inc
cmpsl
mov
jmp
pop
push
test
mov
insb
stc
inc
mov
in
mov
loopne
mov
adc
inc
jo
rorl
mov
into
mov
xchg
les
lcall
adc
fst
mov
adc
into
xchg
aaa
sbb
loope
sarl
iret
cmc
sub
cld
mov
jne
jle
iret
adcl
sbb
mull
xchg
pushf
inc
rclb
stos
inc
inc
xlat
mov
out
les
or
xor
sarl
ljmp
cli
lahf
and
out
in
pop
popf
dec
fs
sub
mov
mov
sub
rcrl
mov
les
mov
inc
ss
call
xor
dec
sub
cmp
adc
mov
jb
jmp
pop
or
dec
push
imul
pop
mov
jmp
out
jp
push
push
testl
xor
mov
cmp
test
or
xor
adc
push
push
scas
into
dec
pop
into
mov
sub
xchg
insl
dec
sahf
cmp
roll
enter
test
test
fidivl
in
cmc
adc
ror
dec
mov
out
test
rcrl
add
sbb
icebp
es
pop
mov
xlat
addb
adc
aam
sbb
icebp
ljmp
fcmovnu
out
dec
cmpb
loope
out
in
stos
cli
inc
repnz
add
imul
faddl
push
and
hlt
ds
jno
stos
push
pop
xchg
notl
out
fstpt
mulb
push
dec
pusha
push
cwtl
jb
popf
jne
movsl
lds
cld
stc
js
lods
adc
cmp
test
push
push
push
jmp
pop
mov
pushf
icebp
adc
inc
xchg
pop
sar
and
test
xchg
movl
push
dec
scas
out
cmp
and
mov
rcll
adc
inc
sbb
sbb
mov
mov
lea
pop
dec
cmp
xchg
outsb
outsl
and
test
ret
ds
pop
inc
add
fnstsw
inc
ret
push
and
sbb
roll
not
fisttpll
jg
inc
sbb
pop
outsl
mov
pushl
lret
lretw
jecxz
cs
or
jmp
mov
ss
mov
xchg
sti
mov
aam
daa
sbb
inc
inc
and
sub
gs
lcall
imul
jl
mov
testb
faddp
aam
xor
sub
sahf
sub
add
mov
loop
dec
nop
pop
pop
and
cmc
mov
and
mov
in
daa
lret
xchg
mov
pop
jecxz
les
mov
mov
lds
mov
xor
jne
ds
add
jo,pn
xchg
ljmp
jbe
fdivs
int
in
pop
jbe
enter
inc
push
clc
adc
xor
or
sbb
jmp
sti
mov
xchg
arpl
cmp
or
fstpt
pop
xchg
ret
mov
pop
mov
inc
push
ret
pop
fnstenv
push
pop
xchg
cmp
mov
shll
int
daa
in
in
pushf
add
in
xacquire
sub
test
cmpl
popa
and
fisubrl
mov
insb
add
push
daa
and
add
xchg
adc
and
pop
cltd
cmp
fsubrs
adc
loope
ret
jmp
add
inc
mov
lds
ret
mov
test
add
insb
add
sub
into
pop
jecxz
fsubl
sub
bound
lods
mov
push
jo
lret
popf
mov
cld
xchg
shlb
inc
fwait
subb
pop
add
ds
and
stc
jne
shll
pop
or
xor
daa
or
and
dec
clc
mov
dec
xchg
mov
aad
aad
daa
scas
hlt
pop
rorb
mov
cmpsb
cmp
mov
adc
jge
sub
adc
inc
mov
jl
and
mov
ljmp
mov
js
lret
push
mov
rol
andl
push
push
jo
rolb
je
xlat
cmpsb
or
push
stc
sub
stos
loope
jnp
inc
lret
add
ja
dec
xlat
icebp
orl
sbb
outsl
test
mov
mov
fcoml
sub
ljmp
push
stos
mov
call
xor
sbb
dec
testb
stos
inc
pop
daa
mulb
int
cli
cmp
aaa
fsubrp
and
test
outsb
stos
stos
cmpsl
inc
sbb
cmc
jg
scas
lods
pop
xchg
adc
cmc
das
jp
rorl
dec
mov
ja
int
imull
push
rcll
cmp
pushf
xor
inc
daa
xchg
xor
je
roll
ljmp
or
mov
sbb
test
jb
sub
sahf
cmc
adcl
add
cs
mov
jbe
pop
clc
jl
cmpl
jb
in
or
add
loope
rcr
xor
lcall
in
adc
sbb
dec
or
xchg
leave
stos
push
call
xchg
incb
mov
add
xchg
push
and
bnd
decl
test
mov
jmp
lea
pop
enter
push
std
push
push
test
into
xor
aad
shrb
icebp
cmpl
or
inc
push
mov
inc
in
adc
xchg
dec
mov
and
sbb
dec
inc
mov
adc
sbb
cwtl
xchg
adc
push
push
pop
fcmovnbe
outsb
ficoml
xchg
imul
data16
or
add
add
mov
pop
mov
push
lods
cmp
cmp
les
xor
jne
sub
and
call
inc
jno
clc
jle
fildll
outsl
aaa
lods
sub
pusha
fidivrl
mov
cmpsb
inc
and
into
push
enter
data16
and
jno,pn
xor
in
xchg
jmp
jnp
mov
jge
out
cltd
popf
lds
aaa
aaa
fidivrl
push
add
mov
mov
mov
out
cmp
testb
lret
in
outsl
in
scas
mov
sahf
jo
lret
and
jnp
sahf
repnz
pop
scas
inc
dec
stos
inc
push
cmpsb
add
mov
push
push
mov
out
or
dec
mov
jnp
out
inc
addr16
sbb
ret
ret
cs
int
mov
cmp
mov
mov
jae
jp
inc
ret
cmp
and
cmc
inc
push
sbb
jecxz
push
mov
xchg
dec
arpl
loop
xchg
insl
mov
fists
ja
mov
mov
jns
jge
shll
adc
js
stc
and
and
mov
ficoml
fsubl
out
pop
cmpsl
xchg
cmp
movsl
mov
in
sbbl
scas
push
pop
mov
fisubs
mov
aas
xorb
sub
dec
loopne
aad
insl
xchg
jg
dec
sbb
sub
push
dec
leave
or
jo
test
scas
add
aad
xchg
jae
inc
sub
enter
out
rol
jl
inc
aas
iret
fmuls
ret
cmp
inc
cmc
outsb
scas
mov
cmp
into
push
fidivrs
ds
sub
repnz
enter
lds
in
mov
daa
inc
and
xor
scas
mov
repz
push
cmp
jp
rorb
adc
mov
sbb
xchg
popf
js
xor
out
scas
mov
xor
shlb
insb
cmp
xchg
hlt
out
es
xor
dec
lcall
mov
push
inc
xor
cmp
sub
iret
adc
xchg
inc
mov
arpl
inc
in
jmp
push
loope
mov
test
jecxz
jmp
aaa
add
cmp
idiv
mov
sub
shll
jecxz
push
data16
negb
outsl
dec
pop
cmp
bound
or
lcall
adc
sbb
mov
int3
jae
mov
imul
pusha
push
cs
fistps
add
lds
in
push
xor
test
mov
and
sbb
and
or
add
and
pop
or
testb
add
mov
push
add
or
adc
mov
les
adc
mov
aas
add
jnp
sti
or
mov
pop
mov
loop
daa
push
cltd
pushf
mov
out
xchg
idivl
outsb
add
xchg
push
jle
mov
add
sahf
lret
cmp
push
out
ss
adc
lcall
mov
sub
repz
pop
mov
sbb
clc
loop
out
and
jg
and
das
xor
out
popa
js
orb
cmp
mov
xor
sbb
fsubrl
clc
cltd
mov
aas
cmp
inc
fdivs
fcoms
sub
sub
pop
inc
aas
jg
pop
xchg
jge
test
fisubs
lcall
pusha
sahf
lods
into
xchg
push
rcrb
dec
cmp
std
outsb
daa
push
add
jns
aad
mov
pop
loopne
mov
in
in
shlb
cs
mov
clc
ds
and
lcall
inc
sbb
cmpsl
sub
add
jg
push
dec
mov
or
lds
dec
pop
xchg
dec
inc
jne
mov
pop
aad
push
fidivrl
cmp
rclb
loopne
or
inc
int3
sbb
rorl
inc
fsubrp
sbb
push
clc
add
stos
dec
mov
sbb
push
push
out
mov
int
cmp
cltd
push
sub
mov
imull
sbb
jge
repnz
movsl
pop
leave
jb
cmp
bound
fs
or
cmp
out
dec
adc
lret
bts
push
int
fcmovbe
xlat
lods
xchg
cmpsb
and
push
outsb
inc
sbb
pop
scas
decl
and
mov
fcoml
aaa
mov
inc
cmpsb
pop
push
cmpb
repz
xor
cld
lcall
movsb
int
jbe
xchg
out
jle
sahf
mov
stos
std
test
dec
cli
inc
aaa
inc
jb
push
xor
idivl
leave
sti
mov
mov
push
mov
mov
das
scas
fcoms
shlb
mov
lea
add
ds
pop
insl
inc
xlat
lcall
mov
dec
stc
shll
rolb
sub
pushf
add
xor
jge
inc
idivl
or
sub
mov
daa
aad
lret
add
lods
aam
fisubs
push
inc
outsl
jbe
fcomi
ds
call
push
call
sbb
je
jnp
push
xor
pop
xchg
cmp
cmp
cwtl
repz
loop
pop
js
and
push
xor
dec
and
adc
push
jle
out
xchg
movsb
and
insl
cmp
pop
xchg
andl
jmp
and
or
adc
mov
adc
pop
add
das
out
cmp
insb
mov
leave
add
inc
stos
mov
xchg
fisttpl
xor
xchg
xchg
in
adc
jno
and
adc
loope
in
xor
dec
push
pop
enter
call
add
call
out
repnz
inc
out
push
cld
mov
repz
jns
mov
mov
push
lahf
pop
pop
pop
or
xor
mov
mov
lret
ret
xor
test
rcrb
sti
lock
in
and
icebp
shlb
lea
jge
sub
adcl
jae
xchg
fucomip
mov
in
ljmp
insb
in
fst
mov
or
andl
jl
xchg
mov
sub
mov
pop
outsl
stc
daa
popf
xchg
jp
shlb
xchg
cmp
fisubs
pop
sbb
mov
mov
outsb
jnp
and
js
stos
mov
iret
rorb
les
je
inc
mov
int3
pop
jecxz
mov
ret
scas
movl
ds
aas
cmpb
xchg
daa
and
into
xlat
pop
mov
xchg
push
orb
cwtl
push
int
dec
je
dec
push
and
dec
push
xchg
mov
notl
cmpsb
insb
shl
mov
push
sbb
adc
mov
jae
xchg
insl
xchg
xchg
dec
pusha
mov
stos
inc
pop
and
jg
mov
inc
repz
mov
fisttpl
lret
rorb
mov
insl
aad
lcall
xor
sbb
insl
loope
xchg
inc
sub
add
in
xchg
hlt
jae
js
ret
cmpsl
or
or
dec
add
insl
fldl
add
push
adc
push
push
xor
mov
enter
sbb
stc
mov
imul
js
data16
aaa
mov
jbe
mov
push
movsl
pmaxub
inc
push
or
fwait
repnz
xor
pop
mov
sub
or
arpl
sbb
add
test
jbe
bound
jge
cli
pop
hlt
and
rcrb
xor
mov
xchg
in
push
and
push
je
inc
cmpsb
jae
and
outsb
sbbl
or
cmc
cwtl
aaa
cmp
mov
jns
push
ret
xchg
pop
xchg
or
repz
fists
mov
adc
out
rolb
adc
push
pop
add
mov
sub
stos
adc
add
stos
outsb
or
adc
and
mov
out
hlt
sahf
test
addr16
and
or
xorb
xchg
sub
lret
inc
sbb
xorl
aas
call
addb
out
movsl
test
orl
stos
aaa
jbe
int3
push
ja
dec
mov
out
ja
pop
mov
ja
push
pop
adc
movsl
testl
les
cmpl
xor
and
ret
push
inc
mov
mov
test
push
lea
mov
popa
jg
jne
xorl
adc
sbb
mov
dec
lret
push
push
and
sub
mov
push
sbb
sbb
cmp
les
push
jecxz
andl
sbb
imul
mov
or
jle
int
jo
jbe
sbb
popa
daa
test
lea
clc
mov
gs
jg
iret
jne
pop
dec
shrb
jo
adc
cwtl
paddsw
stos
mov
clc
push
inc
push
lret
std
int3
jge
sub
or
jp
and
jbe
lret
gs
xchg
cmp
dec
gs
mov
repnz
add
mov
xor
std
es
jo
sub
lods
les
xlat
aaa
push
lcall
outsl
ffree
outsl
lgs
jg
sub
out
jae
pushf
mov
in
mov
dec
sbb
aas
pop
mov
cmc
mov
mov
ret
ja
xchg
jae
sub
pop
int3
inc
rcll
lret
outsl
test
dec
std
stos
push
mov
xor
lea
pop
jmp
orps
inc
cmc
adc
or
rcrl
sbb
call
lcall
enter
lods
xchg
jne
push
mov
jcxz
sub
outsb
push
mov
sbb
jl
inc
fs
jecxz
add
imul
sbb
and
lret
mov
jo
ss
lret
jl
jl,pn
sub
add
mov
add
lds
mov
fdiv
xchg
xorb
rorl
mov
xchg
rolb
mov
mov
cmp
imul
pusha
mov
rcrl
iret
mov
xchg
jp
or
push
mov
cmp
out
push
cld
jns
cmpsl
imul
jo
neg
jcxz
int3
add
fwait
and
or
push
outsl
subl
xchg
push
fwait
mov
out
cmp
mov
cmp
in
adc
dec
mov
sbb
icebp
sbb
mov
jle
jnp
xchg
inc
scas
sub
mov
adc
xchg
mov
scas
jne
push
adcl
jecxz
gs
mov
push
mov
jb,pt
sbb
sub
adc
jne
pop
cli
xchg
outsl
popf
jl
jne
sbb
jmp
aaa
mov
cmc
cwtl
insb
dec
arpl
dec
xor
sti
inc
pop
mov
je
inc
call
inc
cmpsl
lret
test
insb
add
dec
test
inc
sahf
pop
mov
push
add
insb
push
xchg
pushf
ljmp
mov
jo
cmp
mov
xor
push
push
jp
jecxz
and
sub
jle
test
cmp
or
fidivl
mov
push
xchg
jae
sub
ret
mov
test
mov
jge
out
mov
int
sysenter
popf
add
lds
sub
or
hlt
xchg
jle
outsl
js
aas
lret
mov
dec
push
cmc
lcall
jle
sub
ja
aaa
pop
push
add
aas
pop
cmpsl
or
cmpsl
push
push
enter
sbb
or
jl
fiaddl
insl
xchg
push
cmpsl
ret
ror
cmpsl
cmpsl
call
sub
jae
fisttps
pop
inc
mov
je
pop
cmpl
jmp
imul
dec
adc
cmp
or
cmp
add
in
je
subb
xchg
leave
fldenv
idiv
xlat
jno
aad
adc
inc
adc
stc
xor
cmpl
xchg
inc
pop
lret
dec
pop
xor
test
shll
shrb
call
imul
test
push
out
loope
xor
jl
movsl
sub
inc
cwtl
hlt
push
sub
call
sbb
sbbl
adc
mov
sub
adc
adc
fbstp
insb
rcr
add
mov
adcb
mov
xchg
add
inc
or
lea
pushf
mov
inc
adc
lret
push
mov
mov
xor
mov
test
stos
pop
sub
sti
inc
divb
outsl
jbe
divb
push
xorl
loope
mov
push
mov
jo
xchg
cltd
sbb
sbb
data16
pushf
sub
cmc
pop
insb
mov
stos
xchg
xchg
in
push
push
pop
xchg
mov
or
mov
cmpb
dec
mov
mov
mov
mov
int3
bsr
push
push
inc
mov
jo
lods
fisubrs
cld
pop
and
enter
sub
jmp
or
or
mov
inc
scas
stc
nop
pop
aas
or
repz
pop
enter
mov
xchg
mov
sbb
stos
addl
xchg
push
fs
jmp
mov
fcom
fscale
into
add
popf
repnz
jp
out
clc
xor
movswl
xchg
ja
cmpsl
pop
inc
jge
xchg
xchg
sarl
pushl
cmp
std
adc
pop
inc
aam
rcrl
das
adc
cmp
sahf
fildl
fwait
push
jecxz
adc
sub
sbb
jbe
ret
repnz
mov
repz
jp
cmp
lods
mov
call
pop
xchg
insl
mov
jnp
out
cwtl
fiaddl
cmpsb
mov
inc
outsb
mov
sahf
cs
clc
int3
pop
mov
dec
mov
std
add
pop
pusha
mov
push
jmp
scas
sub
lcall
pop
push
orb
aas
xchg
inc
outsb
jb
mov
insb
cld
or
mov
and
mov
es
into
cmpsb
mov
jle
xor
xchg
test
into
mov
xor
jge
sub
mov
repnz
pop
mov
add
stos
f2xm1
sbb
jge
push
in
sub
movsl
sarb
add
fstp
divl
mov
xor
sbb
inc
cmp
adc
shlb
loopne
fisubs
mull
mov
rorb
loope
cli
push
jno
adc
xor
fadds
adc
loopne
rorb
dec
insl
jmp
out
enter
xlat
mov
imul
lret
in
or
aas
fs
xchg
and
mov
jno
sbb
fbstp
and
mov
xor
aam
add
push
in
mov
test
sub
stos
lcall
in
jecxz
lcall
pop
dec
pusha
mov
dec
addb
dec
xchg
aad
add
sbb
jl
in
je
push
mov
and
fcomps
sahf
xchg
repnz
call
push
repnz
jnp
xor
jns
vmovntdqa
ret
sub
movsl
nop
pop
xor
idivl
mov
jbe
pop
mov
jne
js
push
mov
jne
ljmp
push
cmp
leave
nop
arpl
daa
xchg
mov
and
xchg
dec
scas
jmp
stos
xchg
push
pop
cmp
and
pushf
fs
sbb
pop
sbb
popf
sub
cli
jae
jmp
lcall
pop
fidivs
notl
rorl
cwtl
ficompl
dec
and
mov
sahf
loopne
sub
or
fadd
jle
mov
cs
or
inc
outsl
jbe
icebp
pop
sbb
fsubrs
add
std
add
loope
nop
shrl
mov
sub
sti
mov
pop
jle
clc
pushfw
fstpl
cmp
push
loopne
and
jno
add
popf
push
fisttpl
mov
in
add
xchg
mov
mov
mov
iret
arpl
dec
inc
es
rol
inc
sarb
aam
mov
loope
insl
cvtps2pd
pop
dec
push
movsl
mov
addr16
xor
call
mov
sub
adc
sbb
push
ret
in
adc
pop
dec
cmp
mov
mov
adc
mov
scas
add
icebp
mov
jns
sahf
into
test
fiaddl
inc
sbb
add
add
movsl
push
xor
adc
mov
cmp
stc
addr16
jns
fsubl
int3
inc
loope
xor
call
cmp
mov
cmp
ficoml
test
jecxz
popa
hlt
cltd
movsl
paddusw
xchg
jae
xor
add
jg
mov
jecxz
mov
scas
int
xorl
xor
xor
pop
and
cmp
lods
aas
mov
add
xor
mov
push
xor
je
xor
cld
shlb
movsb
push
adc
jge
cwtl
mov
ficoms
and
add
pop
add
push
xor
ret
push
mov
shll
dec
in
mov
lret
jns
and
xchg
xor
fisubrl
aaa
outsl
stos
loopne
fists
push
insl
dec
in
sub
and
add
xchg
std
sbb
mov
jmp
or
xchg
cmp
ja
xchg
mov
fmuls
js,pt
xchg
shr
std
xor
shr
cmp
xor
or
cmpsl
sti
mov
imul
addr16
outsb
inc
js
jge
in
in
or
movsl
cmpsl
push
fwait
mov
fistpl
hlt
outsb
insb
inc
or
in
jmp
sbb
push
ss
loop
mov
xor
xor
jb
sub
adc
repz
push
out
jns
popa
xlat
add
lret
mov
lret
adc
mov
push
pop
adc
test
idivl
mov
inc
test
xchg
cmp
sub
dec
jmp
lret
and
fdivs
push
xchg
push
xor
jecxz
xchg
ss
cs
enter
xchg
adc
cli
push
int3
mov
bnd
ja
jmp
mov
jo
loope
test
dec
jae
pop
jb
es
loope
out
xor
mov
cmc
aaa
test
pop
repnz
dec
lds
das
test
icebp
ja
imul
or
cmpb
sbb
aaa
inc
lods
aaa
rcrl
ret
sarb
mov
out
jne
xchg
jmp
or
popa
bound
lahf
in
mov
mov
jle
adc
push
xchg
inc
in
in
mov
jmp
adcb
imul
cli
repnz
inc
sbb
in
sbb
add
psrlq
mov
mov
sub
andb
pop
int
sub
jb
adc
adc
sbb
mov
pop
cli
fucom
imul
cltd
ret
push
jne
dec
cmp
sbb
pusha
inc
xor
dec
mov
push
mov
mov
mov
xor
inc
sbb
pusha
cmp
enter
pusha
or
adc
rorl
sub
jb
or
daa
adc
mov
sub
inc
inc
inc
in
stos
mov
mov
arpl
mov
fnstcw
push
jae
lret
mov
aad
decl
sub
rcll
cmp
ret
sbb
jecxz
jle
iret
addr16
addl
ljmp
cmp
pop
and
push
les
jae
mov
out
call
mov
in
int
adc
es
fcom
xchg
rclb
sbb
cwtl
xchg
orb
cmpsb
cmp
mov
mov
sbb
ss
push
fsubrs
insb
imul
ja
scas
fs
ror
fldl
adc
xor
push
pop
lret
xchg
mov
hlt
imul
push
push
testb
mov
or
push
push
repz
sub
out
cmpsb
mov
lds
add
push
xor
cmp
int
paddb
cli
jl
jg
xchg
push
jge
xchg
jmp
sbb
dec
gs
sbb
lret
adc
sub
xchg
int
addr16
lock
or
mov
scas
sub
mov
pop
mov
cs
adc
mov
in
pop
jl
push
xchg
push
cmc
inc
and
push
shrl
push
lods
mov
push
xchg
sysexit
repz
or
mov
mov
fisttpll
mov
jo
leave
xor
push
scas
mov
jns
mov
adc
into
imul
push
xchg
xor
lret
and
sub
loopne
xor
or
pusha
cmp
outsl
std
jmp
xor
iret
mov
sub
stos
mov
mov
arpl
pushf
mov
sbb
mov
sub
add
push
scas
fcompl
cmpsb
sub
jmp
add
add
cltd
popf
lea
mov
adc
mov
sti
orl
enter
hlt
clc
adc
xchg
loope
mov
mov
mov
xchg
cmpsl
pop
sar
fpatan
movsl
fbld
std
adc
das
xchg
mov
test
jp
adc
das
jbe
push
xchg
test
jno
fnstenv
xchg
scas
mov
mov
xchg
jle
mov
xchg
xor
and
cpuid
inc
mov
roll
imul
fsubrl
fsubr
out
push
mov
mov
inc
test
aas
mov
cld
shlb
lock
add
es
fcmovnb
xor
out
leave
mov
insl
and
pop
out
pop
jae
and
adc
push
dec
add
mov
call
std
daa
fwait
call
aaa
enter
insl
dec
pop
or
adc
rcrb
fwait
xchg
loope
jns
sti
cmp
daa
pop
mov
test
jnp
push
push
xor
into
push
lret
jg
jmp
imul
jno
xorl
aas
or
mov
add
xor
sub
jae
xchg
dec
push
mov
lock
xchg
leave
adc
stc
mov
aaa
push
out
lods
or
into
pop
mov
dec
jecxz
xor
data16
in
es
adc
in
or
push
sub
pop
leave
xlat
add
and
or
push
pop
sarl
mov
psadbw
nop
cmp
fistl
test
cmp
jp
dec
mov
mov
xchg
arpl
subb
mov
es
test
lcall
push
bound
out
xchg
cwtl
lahf
out
sbb
push
loope
mov
hlt
xor
and
and
cmp
dec
test
and
push
out
sbb
popf
and
jns
mov
sbb
inc
mov
add
in
sub
mov
xchg
pop
add
test
lock
or
lock
lods
or
das
mov
and
and
push
add
daa
inc
xor
pop
or
push
inc
cmpsl
cmc
inc
sbb
lods
add
std
lods
adc
arpl
idiv
or
jbe
flds
aad
pop
inc
cmp
dec
int3
add
push
loop
lods
xchg
mov
jns
in
lret
mov
jmp
dec
insb
jp
xchg
inc
jmp
into
xchg
pushf
adc
add
mov
sub
xchg
cltd
insl
or
jp
xchg
fldl
add
in
lret
and
dec
scas
loopne
dec
jmp
sub
loope
jbe
ja
arpl
ds
lds
fdivs
mov
mov
xchg
push
js
sbb
aad
lock
push
mov
or
dec
adc
gs
iret
jo
mov
outsb
sbb
ret
dec
push
adc
mov
jne
addl
pop
mov
int3
js
add
insb
repnz
out
xchg
addr16
sub
add
push
repz
jb
or
jno
sub
cmp
push
xor
out
inc
sbbb
movsb
outsb
es
cs
adc
sub
or
push
popa
mov
mov
pop
sub
js
gs
cmp
shll
aad
cmp
mov
testl
xchg
xor
fistl
mov
inc
lret
jg
je
orl
subb
jmp
inc
popf
sbbb
add
adc
sub
popf
ss
inc
pop
jnp
xchg
push
push
xor
in
loope
jae
mov
xor
cwtl
cmp
jl
add
jae
lock
cmp
mov
hlt
and
xor
in
loopne
xchg
dec
jns
xchg
push
push
adc
xchg
test
sbb
insl
mov
std
mov
fsubrs
mov
dec
addl
repz
pushf
lods
test
xchg
sbb
jl
das
sbb
push
dec
push
int3
ret
mov
jne
imul
add
loopne
shrb
and
movsl
sub
xor
add
testb
add
inc
add
mov
cmp
cmpl
mov
jg
sbbb
mov
int
scas
and
ja
push
enter
lds
out
mov
mov
xor
jl
dec
ds
imul
ja
je
add
inc
loopne
loope
dec
dec
rcrb
or
test
insb
lea
shrb
inc
mov
xlat
and
mov
fs
scas
je
add
and
movsl
push
xor
mov
sbb
std
or
jl
rclb
dec
push
insl
xor
jmp
mov
mov
sahf
imul
scas
imul
mov
je
cltd
mov
shr
cmp
add
push
lea
xchg
jle
xor
leave
lods
add
out
ljmp
arpl
icebp
inc
sbb
or
adc
dec
in
pushf
cwtl
sbb
test
and
cmpsb
jns
adc
fnsave
hlt
pop
out
call
mov
jb
mov
arpl
push
int
cmp
imul
xchg
cmp
imul
fwait
dec
jle
ret
nop
jmp
push
pop
loopne
repz
push
and
bound
out
dec
push
lret
das
rorb
xor
outsb
mov
lds
xor
sbb
out
cmp
xchg
jle
mov
push
or
pop
mov
gs
rol
in
mov
jo
dec
movq
out
and
es
push
or
iret
ja
push
call
sub
cld
and
and
push
inc
pop
shrl
jg
in
mov
mov
jp
mov
mov
int
lods
testl
jl
fistpll
mov
or
jmp
outsl
push
ljmp
repz
cmpsl
mov
mov
lods
mov
push
fsubl
imul
repnz
jne
popf
dec
mov
gs
push
ficoml
sbb
add
mov
push
pop
dec
mov
in
mov
inc
ljmp
mov
ja
push
sbb
and
stc
je
mov
loopne
repnz
xchg
pop
sbb
inc
jp
imul
push
call
lods
mov
pushf
cmp
outsb
push
jbe
int
cmp
push
movsb
shlb
jl
test
stos
scas
mov
int3
xlat
fdivl
popa
sub
lcall
rcrl
fstpl
xchg
dec
das
cwtl
fwait
ja
cwtl
insb
into
fistpl
add
add
push
out
mov
mov
cmpsb
jmp
lods
and
inc
addl
xchg
add
pusha
out
pop
pop
in
mov
sub
add
loop
in
mov
sbb
xor
lock
movsl
in
inc
pushf
ror
push
push
push
int
mov
loop
xor
xchg
sbb
mov
jne
bsf
jle
inc
ja
fildll
sbb
je
daa
rolb
add
movsb
lea
inc
fistpl
push
pop
push
fldt
cmp
fucompp
movsl
dec
cmp
ret
pop
stos
in
icebp
gs
mov
sub
mov
fs
int3
in
cmp
xor
cmpb
pop
xor
mov
xchg
sahf
mov
lods
je
inc
int
mov
scas
iret
mov
cs
lods
push
out
pop
and
inc
stc
sbb
xchg
jecxz
cmp
push
cld
mov
and
cld
jns
pop
loope
fdivl
fildl
mov
punpcklbw
sbb
mov
repz
xor
test
adc
pusha
adc
out
ret
test
push
cmp
repnz
jne
imul
xchg
xor
dec
scas
data16
mov
jb
pusha
cmp
push
pop
stos
clc
loopne
mov
dec
outsl
fdivrl
in
out
out
mov
cld
cld
mov
inc
xchg
mov
repz
xor
mov
cmp
pop
add
test
cmp
add
cmp
and
or
sbb
sbb
sahf
inc
mov
pop
rcrb
push
insl
lds
mov
and
xor
mov
sbb
lock
adc
out
jmp
cmp
jmp
outsb
fists
insb
incl
fdivp
sbb
mov
stos
cmpsl
dec
clc
mov
addr16
jl
lcall
in
aad
lods
inc
cmp
ret
lcall
gs
add
data16
rorb
test
xchg
cmp
arpl
sbb
out
sub
repnz
xchg
scas
mov
push
paddusb
jge
add
cmp
aam
cmp
cmp
sub
sub
leave
jecxz
in
adc
cld
popf
mov
pop
add
outsb
das
outsb
mov
push
pop
dec
adc
inc
add
aam
xor
sub
sbb
mov
out
mov
lods
adc
movsb
shl
xchg
mov
pop
jae
push
mov
pop
fdivp
enter
jbe
je
movsb
push
pop
int
rcll
xor
ret
ljmp
mov
sub
mov
test
lcall
aaa
and
jl
adc
mov
fbstp
adcb
xchg
frstor
call
xchg
pusha
ret
jecxz
lret
jns
mov
xor
xchg
pop
iret
jecxz
enterw
andl
mov
iret
enter
and
arpl
int
dec
movsb
cmovge
sbb
sbbb
jno
std
cmc
mov
mov
inc
aam
mov
mov
adc
jmp
sarb
or
jmp
or
cmp
loop
mov
xor
daa
xchg
hlt
or
sahf
add
int
cmp
pusha
dec
pop
inc
sub
push
lods
add
add
scas
xchg
popf
rcll
jo
js
push
sbb
or
movsl
and
mov
ja
sub
imul
push
inc
loopne
mov
xor
sbb
xor
enter
dec
cmp
push
inc
aas
insb
negb
std
lods
loop
sub
xor
je
xor
mulps
add
lcall
dec
cmp
pop
das
roll
jns
inc
loope
test
and
int3
adc
inc
mov
mov
dec
rcr
xchg
cmp
outsl
cld
arpl
mov
out
or
add
sbb
cmp
jle
push
aad
les
push
and
or
cmpsb
xchg
rcr
insb
scas
shll
inc
or
xor
sahf
or
push
rolb
mov
sbb
jne
pop
stos
xor
sarl
fdivl
sub
lret
add
cmpsb
imul
pusha
aad
fistps
jnp
lret
cmp
inc
push
mov
lods
setno
mov
cmp
mov
subl
and
push
jl
mov
bound
dec
insb
cmp
mov
pop
notb
test
pop
loope
jmp
jge
imul
pushf
dec
xchg
mov
and
jge
xor
or
sub
mov
lret
jmp
movsb
daa
lock
dec
fadd
out
cli
push
add
mov
inc
or
xor
testl
pusha
out
jb
pushf
cli
or
std
jge
in
mov
dec
xor
mov
into
fstp
mov
fwait
mov
call
xchg
cmc
andl
xor
and
and
mov
outsb
add
in
popf
lods
xchg
pop
pop
mov
mov
push
repz
inc
xchg
daa
lods
adc
out
jmp
dec
sub
cmpsl
sti
pop
out
mov
es
push
sbb
adcl
jmp
sbb
insb
inc
xchg
push
push
sbb
and
mov
test
lea
repnz
lcall
cs
cmp
sub
ss
iret
xor
xor
jl,pt
sbbl
sti
out
insl
mov
mov
xchg
fwait
in
ficompl
ja
add
push
sbb
xlat
aas
mov
mov
pop
imul
cmp
popa
adc
and
inc
pop
or
outsl
add
leave
push
mov
xlat
add
movsl
inc
adc
and
add
ds
iret
cmpsl
push
bound
cmp
popa
pop
sub
inc
es
testb
insl
rep
call
std
in
xchg
mov
inc
xlat
sub
je
and
push
xor
mov
mov
leave
mov
sub
lods
add
mov
cltd
jno
lds
inc
scas
xlat
fbld
shr
jne
xor
jmp
mov
push
mov
test
mov
push
cmp
lds
rol
jecxz
push
dec
sarl
fs
pop
cld
and
sub
mov
push
xchg
rolb
stos
inc
mov
pop
xor
in
ret
aad
cmp
jecxz
into
adc
inc
enter
add
and
fdivr
repz
repnz
xchg
mov
lea
std
inc
xlat
wbinvd
stc
jo
mov
jg
adc
dec
mov
inc
adc
addr16
in
lods
leave
dec
popa
cmp
add
fwait
inc
and
mov
mov
and
movsl
cmp
scas
sti
xor
sub
lods
inc
cmpsl
out
sbb
dec
sbb
sahf
mov
aam
out
stos
mul
cli
jae
call
adcb
add
scas
in
aaa
fs
cmp
loop
jp
adc
push
xchg
mov
lods
daa
and
sbb
fimuls
ret
inc
idivb
and
cmp
mov
push
mov
arpl
dec
divb
je
mov
xchg
bound
mov
add
outsb
les
stos
cmpsl
inc
jns
leave
in
int
je
mov
in
pop
lea
frstor
jae
sub
andb
xor
jbe
imul
pop
lods
pusha
addb
jae
cmp
icebp
imul
cli
add
jnp
xor
fisubs
jb
xchg
js
outsb
sbb
sarb
dec
jnp
pop
dec
mov
sti
push
sbb
js
mov
lock
rcrl
mov
adc
jmp
clc
dec
mov
jecxz
rcll
fbstp
push
orb
or
fs
leave
ret
mov
cmp
jnp
cmc
xchg
test
fmuls
pop
outsb
add
daa
xchg
in
insb
dec
pop
inc
movsbl
mov
pop
xchg
xor
mov
push
outsl
jo
das
pop
mov
push
repz
dec
pop
xor
mov
fwait
loope
fildl
fwait
int3
or
pop
sub
push
pop
xor
or
idivb
arpl
push
lcall
pop
lock
mul
insl
xor
pusha
push
sarl
mov
shl
pushf
leave
xor
sahf
dec
mov
and
lock
pop
sub
dec
inc
ret
sbb
cmpsl
pop
push
popa
mov
loop
dec
lock
idivl
fstps
pop
xor
jp
cmp
leave
push
cmpsl
nop
imul
mov
xor
or
mov
test
mov
movsb
xchg
cltd
push
pusha
jnp
jnp
int3
aaa
pushf
jl
repnz
test
xor
or
cmp
xchg
cld
leave
push
or
mov
repnz
iret
test
je
lahf
sbb
pop
sbb
xor
and
cmp
ret
out
bts
roll
push
mov
imul
xor
lds
xchg
cwtl
xchg
fs
add
stc
mov
js
aam
rolb
lods
test
mov
jae
xchg
aas
in
push
int
inc
inc
inc
mov
mov
fstl
jmp
loopne
cwtl
add
mov
inc
cli
js
cmp
jp
les
scas
bound
mov
mov
loope
and
repz
subl
mov
jo
xchg
mov
mov
movsl
mov
insl
movsb
lahf
push
jo
data16
mov
outsb
and
insb
xor
jne
push
lds
sub
sbb
sub
adc
clc
into
decl
roll
jo
mov
mov
mov
pop
in
xor
dec
xchg
inc
rcl
mov
dec
add
aam
aas
mov
enter
loopne
sub
sbb
fsubp
mov
push
add
repz
pop
inc
pop
adc
add
xor
rcll
mov
std
cmp
rcrl
ss
adc
jo
jnp
mov
and
add
test
negb
pop
cmc
xchg
scas
nop
mov
iret
and
ret
lods
mov
ret
lods
push
pop
sub
xchg
iret
jp
push
sub
jg
pcmpgtb
add
mov
xchg
cmpsb
jle
jnp
fisubrs
xlat
mov
sub
jge
jbe
mov
dec
roll
jnp
shl
fadd
jge
fistl
icebp
mov
in
mov
fisttpll
xorb
mov
inc
movsb
repz
xchg
decb
cmpsl
lods
inc
push
sub
mov
dec
movsb
cwtl
mov
inc
in
add
stc
xor
es
add
out
scas
inc
nop
adcl
dec
mov
cmp
stos
imul
and
movsl
les
inc
mov
jmp
ror
sbb
fisubl
jns
xchg
imulb
subb
sbb
xor
mov
addr16
inc
pop
mov
push
or
test
testl
dec
jmp
mov
jno
jb
mov
jmp
aad
fnstcw
xchg
push
push
xchg
xchg
push
mov
push
pop
mov
mov
xor
sbb
cmp
fadds
hlt
sub
ds
push
or
cwtl
lcall
fldcw
je
mov
and
and
fdivl
jl
in
hlt
or
add
arpl
es
subl
adc
inc
mov
ja
mov
or
ds
aad
ds
lock
push
or
adc
and
scas
and
lret
imul
popf
je
lods
mov
add
jns
enter
inc
popa
test
and
ret
and
add
repnz
xor
test
add
push
push
jge
mov
cmc
mov
push
insl
and
inc
inc
jmp
sbb
stc
mov
cwtl
ja
icebp
dec
cwtl
jo
scas
and
inc
inc
gs
mov
sbb
push
mov
imul
mov
lock
jle
mov
aas
in
cmp
sbb
dec
ds
daa
clc
into
inc
sbb
mov
mov
cltd
insb
aam
inc
adcl
add
fxch
lret
and
or
inc
sbb
ret
add
and
cmc
aas
ret
mov
mov
imul
test
repnz
outsb
mov
pusha
sub
or
in
dec
mov
inc
out
ss
mov
ljmp
loop
rcr
lret
jnp
cmp
and
jecxz
jae
push
mulb
or
int3
std
jmp
out
inc
jo
jl
mov
int
xchg
cmpsl
or
sbb
fbstp
call
int
sarb
jb
inc
push
xor
inc
fwait
mov
xor
push
jo
les
testb
mov
in
mov
dec
nop
lahf
shlb
inc
mov
cmpsb
cmp
mov
test
mov
call
setns
leave
and
and
cwtl
add
fimull
mov
cld
sub
mov
bound
fmuls
sub
push
cmc
dec
aad
lods
adc
bound
push
arpl
xor
into
jg
sbb
shrl
or
test
test
cmc
adc
ja
aam
movsl
add
std
jmp
xchg
jne
xchg
in
add
popf
xor
out
int3
pop
sub
das
xchg
and
add
aaa
inc
loope
popa
sti
push
js
pushf
pop
inc
fwait
dec
fildll
insl
loope
inc
mov
pop
mov
mov
adc
pop
repz
ljmp
sbb
call
in
call
adc
and
jp
jle
dec
data16
lcall
adc
cmpsb
stos
dec
mov
lahf
push
shl
push
std
lds
jb
dec
cld
scas
ljmp
xor
loopne
cmpsb
cwtl
push
arpl
sbb
jmp
jbe
dec
sbb
mov
cmp
mov
sub
mov
and
repnz
dec
mov
mov
xchg
int3
adc
int
push
dec
xor
dec
jmp
lret
pop
repz
sti
pop
lahf
faddl
lds
mov
cmp
imul
rcl
sbb
pop
adc
sub
sub
mov
xchg
pop
outsl
lahf
stos
gs
xor
ret
push
cmp
insb
addr16
add
jae
sbb
xor
mov
jp
push
fstp
mov
dec
out
lret
adc
clc
mov
mov
in
xchg
inc
add
sub
mov
jge
sti
mov
lock
pop
out
insl
jmp
dec
adc
call
clc
xor
dec
sub
mov
and
es
cltd
jecxz
mov
xchg
push
das
dec
lea
clc
stos
pop
in
popf
dec
jp
ds
jmp
push
mov
jecxz
mov
adc
pop
adc
cmp
pop
lock
jge
mov
sbb
sbb
nop
aaa
mov
clc
sti
push
popf
nop
inc
cmp
daa
cmp
or
fwait
push
fldl
xchg
xchg
subb
arpl
nop
inc
sub
clc
cmp
cwtl
fmul
inc
xlat
fstps
add
movsb
push
and
pop
or
xchg
fbstp
push
in
insl
dec
sahf
aad
arpl
imulb
cwtl
cmpsl
daa
mov
push
out
mov
iret
es
xor
cmp
mov
push
inc
mov
inc
pop
fsubp
out
pop
dec
inc
fdivl
mov
jbe
stc
mov
icebp
in
mov
add
test
push
lods
inc
mov
adc
xorb
sub
adc
movsb
movsl
push
dec
xorl
and
dec
xlat
xor
jmp
mov
sti
push
push
pop
icebp
movsb
pop
in
mov
sbb
sub
or
lea
mov
xchg
mov
jnp
dec
js
push
shrb
sub
cs
adc
cmpl
and
mov
and
popf
inc
les
rcr
idiv
jp
fs
xchg
nop
fldt
into
xchg
mov
outsb
fcompl
lds
pop
les
pusha
add
pop
jo
pop
test
enter
jb
xorb
xchg
mov
jb
shl
mov
push
out
repz
sub
loope
adc
mov
sbb
cmp
xchg
rclb
enter
adc
jle
pop
in
daa
jae
mov
or
mov
dec
out
rcr
adc
mov
sbb
mov
aad
push
push
mov
mov
inc
cwtl
in
mov
test
push
dec
sub
call
movb
mov
cmp
ss
ja
test
pop
push
push
sub
and
popf
roll
inc
das
test
adc
movsl
inc
pop
mov
adc
dec
lock
fs
mulb
xor
pop
mov
mov
outsl
in
rorb
or
jbe
inc
xchg
scas
jecxz
xchg
fwait
stc
lret
pop
inc
or
push
aaa
es
inc
inc
cmpsb
out
sbb
xchg
rorl
dec
test
xchg
sarb
mov
xchg
add
sub
mov
movsb
mov
aam
and
popf
jb
enter
movsb
pushf
pop
dec
loopne
adc
lea
sub
fwait
cli
addr16
mov
int
icebp
rclb
int
test
mov
ds
or
inc
inc
jns
ja
xchg
add
or
gs
cltd
aam
cmp
mov
xchg
or
cmp
fiaddl
pop
loope
or
shl
adc
aad
cld
sub
pusha
mov
jmp
jo
repnz
nop
aad
jge
adc
mov
push
push
adc
out
in
rcrl
push
cmp
add
dec
test
dec
call
dec
push
std
and
add
and
mov
and
pop
dec
gs
pop
call
xor
aam
andl
add
loop
inc
jp
adc
cmc
popa
push
cmpsl
mov
mov
push
mov
shlb
mov
imul
or
es
test
icebp
mov
cli
push
push
aaa
test
enter
pop
xor
adc
insb
loop
jge
xor
and
xchg
vpaddw
imul
aas
lret
jae
xor
bound
aam
cmp
cs
shrl
lret
std
int
mov
adcl
scas
lahf
lcall
xchg
xor
daa
push
adc
mov
ret
add
in
ret
pushf
adc
push
mov
mov
mov
fmuls
jns
mov
in
xchg
mov
cmp
mov
sub
jg
icebp
mov
stos
clc
fists
mov
jl
lcall
insb
jecxz
sbb
fisttpl
cmc
inc
push
ljmp
cmp
popf
adcb
ret
clc
push
ss
lret
jbe
cmp
cmp
push
and
shll
and
repz
arpl
popa
inc
add
jmp
jle
pop
lods
push
outsb
lcall
adc
pop
xor
movsl
fwait
jb
jge
out
outsl
hlt
xchg
xchg
aam
les
cltd
xchg
cltd
mov
cli
mov
scas
negl
or
in
cmp
mov
xorl
movsb
rcr
jge
icebp
dec
dec
jo
jle
and
add
lahf
and
or
mov
popf
or
cmp
pop
xor
orb
rcrl
mov
sub
ret
pop
jl
cmp
loope
mov
decb
loop
fsubr
cltd
mov
xchg
or
ss
repz
pop
or
jns
lret
lods
dec
add
inc
jg
fldenv
cwtl
mov
xchg
jb
pop
mov
or
mov
push
push
xorl
dec
and
mov
test
mov
outsb
adc
les
hlt
popf
and
mov
mov
leavew
sub
adc
enter
cmc
out
sub
mov
shrb
jle
lahf
mov
push
int3
mov
outsl
mov
lds
mov
movsb
or
dec
pushfw
push
push
orb
push
outsb
movsb
xor
push
mov
dec
sub
dec
test
repnz
mov
daa
mov
mov
sub
pop
add
jmp
and
pop
aad
mov
cwtl
aaa
lds
jmp
movsb
cmp
jl
inc
in
ret
imul
jo
or
xchg
push
push
lret
into
jo
mov
out
cmp
dec
dec
jg
pop
adc
in
das
mov
cmp
out
rorb
lods
inc
std
dec
inc
mov
scas
in
and
mov
jo
pop
jge
pop
addr16
or
sub
ret
sub
dec
jg
mulb
inc
and
lods
jg
popf
mov
cmp
mov
repz
fs
lcall
xor
push
dec
enter
jb
cltd
xchg
int3
xorb
out
add
repz
int
sbb
add
inc
mov
aas
scas
mov
or
test
sbb
ret
mov
sbb
pop
sub
cwtl
jl
fmul
int3
push
int
push
dec
outsl
lds
lds
ret
jne
mov
loope
iret
pushf
lea
lock
sbb
mov
dec
cmp
pop
mov
mov
pop
je
mov
pop
sbb
cmpsb
cli
xorb
mov
push
sub
icebp
adc
loope
mov
bound
jns
jae
filds
ja
xchg
iret
add
cmpsb
push
pop
out
pop
adc
cmc
stos
negb
movsl
dec
mov
lahf
bound
cmpsl
clc
das
popf
add
sbb
cmpsl
into
sbb
push
sub
xlat
in
in
in
mov
call
or
cmp
iret
or
into
dec
in
leave
and
adc
stc
data16
jno
cmp
inc
mov
xor
rcl
out
and
sub
imul
sub
push
add
jae
add
roll
arpl
int3
mov
idivb
lds
sub
loopne
inc
outsl
mov
loope
and
push
lea
mov
loope
sub
outsl
iret
arpl
mov
mull
icebp
in
cmp
jmp
int
fwait
jl
je
int3
dec
out
mov
push
push
mov
xor
out
ljmp
dec
inc
repz
std
ljmp
scas
popa
ret
fs
test
xchg
push
dec
sbbl
aam
pop
pop
lds
pop
lock
cmp
jmp
xchg
sub
jno
aas
rolb
sti
add
xchg
sbb
xchg
mov
inc
xchg
and
fisubrs
xor
loop
push
jp
fimull
ret
xchg
inc
dec
xor
insl
mov
ret
test
pop
int
xchg
cmp
inc
setp
pop
adc
and
and
aaa
mov
pop
lods
fcomps
ss
lea
xchg
add
scas
cmp
xor
cli
aam
and
or
in
lahf
xchg
ljmp
scas
and
cmp
in
xchg
push
es
ja
adcb
fs
push
xor
and
fs
push
mov
cld
cmpsb
js
out
xchg
fistpl
sub
mov
negl
jae
cmp
fistpl
xchg
mov
lret
jnp
and
jge
sbb
pop
mov
popa
notb
lret
xchg
jbe
xchg
push
in
sub
insl
lea
aaa
jecxz
pop
pop
push
cmc
jmp
dec
add
outsl
js
jae
lcall
jbe
test
jge
cmp
fldt
inc
push
cld
and
xchg
and
jbe
lea
xor
push
sub
add
mov
call
pop
mov
fdivl
push
inc
mov
pop
dec
cltd
lret
test
in
pop
sbb
mov
shlb
adc
mov
test
cmp
mov
sub
jo
or
jle
outsl
rcrl
and
jmp
dec
cld
inc
or
jnp
adc
loope
data16
insl
mov
and
mov
fdivs
bound
movsl
pushf
sti
aam
fsubrs
xlat
pushf
dec
sub
pop
mov
push
add
lret
push
add
sti
loop
popa
in
dec
jmp
or
cltd
push
sub
mov
adc
push
xchg
pop
pop
or
cmp
outsb
cmp
lock
mov
aaa
xor
jnp
stos
jmp
ljmp
mov
out
ljmp
mov
fucomip
mov
push
add
and
push
mov
mov
loopne
mov
ficoml
sbb
lret
jmp
aas
ds
sbb
and
enter
mov
mov
sub
mov
add
sub
adcl
pop
and
hlt
sub
enter
andb
mov
inc
loopw
pop
dec
xchg
and
cmc
pop
adc
ret
call
mov
cs
sub
and
pop
sbb
jmp
cli
insb
rcll
mov
stos
sbb
data16
or
addl
xor
inc
imull
pop
dec
std
mov
adc
cmp
mov
push
push
hlt
incb
or
stc
rol
adc
sbb
in
pop
xchg
testb
mov
lds
inc
jp
icebp
repnz
cmp
pushf
pop
int
in
dec
pop
xchg
cmp
lods
mov
pop
out
std
ficomps
mov
ror
mov
mov
add
jne
xchg
imul
jp
jl
add
push
into
xor
jo
push
cwtl
subl
pop
cltd
insb
sbb
dec
jbe
imul
sbb
mov
idiv
lds
cmp
test
setnp
push
push
jmp
mov
sbb
cmp
mov
shrb
lods
cmp
pop
mov
shrb
jle
loopne
fs
pop
and
dec
xchg
stos
aaa
fwait
lret
adc
pop
push
scas
or
mov
fisttpl
hlt
xchg
mov
jne
shr
fcoms
enter
sub
xchg
sub
jmp
rol
cmp
cmc
sti
inc
ret
lret
ret
jl
lock
dec
lea
xchg
fsubrl
mov
jl
mov
xor
mov
adc
dec
jo
gs
sti
fldl2e
jb
push
push
push
aaa
loopne
sti
xchg
push
push
and
mov
data16
or
ds
arpl
stc
add
dec
mov
mov
outsb
sbb
jp
outsb
or
or
scas
adc
lret
aam
sbb
lret
mov
jnp
cli
imull
inc
jae,pt
imul
push
mov
sub
fdivrs
cmp
sahf
xchg
xor
jmp
mov
dec
inc
sbb
aam
repz
xor
adcb
cmp
push
dec
sbb
cmp
mov
rclb
in
dec
pop
movsb
add
jmp
xchg
mov
fstpt
push
cmpl
jnp
and
mov
cwtl
mov
xlat
aad
sbb
push
je
int
shrb
imul
out
outsb
add
or
repz
arpl
xchg
jae
mov
fdiv
jle
sub
mov
sahf
test
pop
scas
jae
mov
scas
lds
mov
cmc
push
sub
sbb
jnp
movb
cli
xchg
decl
lods
pop
cmpsb
dec
pop
movsb
lret
inc
fwait
jmp
cmp
adc
sub
and
test
sub
mov
lods
dec
dec
data16
or
dec
imul
mov
cld
cmp
lret
xor
jl
or
sahf
adc
dec
cmpsl
jg
dec
xor
push
xor
push
mov
sub
imul
mov
adc
mov
ja
out
repnz
push
cmpsb
xchg
mov
pusha
gs
call
std
iret
and
sub
notl
cld
jns
insb
cmpsl
pop
xor
mov
lahf
aad
stos
mov
inc
out
mov
jecxz
lea
aam
orb
cmp
in
cmc
popa
sbb
fwait
mov
js
lcall
mov
movsb
movsb
and
xchg
sahf
clc
or
rolb
xor
dec
outsb
lods
or
out
push
jle
inc
dec
pop
loope
sbb
xchg
add
dec
mov
sbb
shl
jmp
addl
roll
push
mov
xor
mov
into
pop
jo
pop
cs
mov
lret
scas
test
dec
dec
out
mov
das
dec
mov
jl
mov
testb
push
subb
mov
repnz
rcll
imull
xchg
inc
add
icebp
popa
lcall
imul
adc
adc
stc
icebp
and
lds
dec
pop
testb
ljmp
sbbb
mov
in
mov
in
xchg
and
jns
adc
dec
inc
cs
ss
sub
mov
pushw
push
cmp
xchg
ljmp
or
xor
xor
es
aaa
imul
into
repz
jno
movsl
into
jecxz
inc
xor
xor
and
push
mulb
dec
dec
xor
clc
leave
xchg
dec
lcall
aad
scas
in
mov
ljmp
jae
or
sub
fdivrs
sub
in
jmp
in
lock
ret
cmpsb
cmp
push
cmp
mov
fadd
jb
mov
movsl
dec
std
ljmp
lock
incl
push
adc
sahf
inc
sbb
out
imul
filds
sbb
push
sub
inc
loope
es
add
out
lods
sbb
mov
imul
or
test
mov
or
in
pop
fcomip
cmp
popa
repnz
cwtl
xchg
mov
add
sub
pop
push
mov
xchg
stos
notb
inc
aad
pop
inc
or
dec
mov
pop
je
jo
jo
push
les
xor
push
push
testb
xchg
push
mov
loope
mov
sbb
stos
mov
adc
dec
xor
xor
clc
mov
sub
loopne
mov
ret
iret
shl
mov
sbb
int
push
dec
xchg
test
int
adc
jae
or
push
loopne
sbb
cltd
jecxz
outsl
sbb
and
xchg
cltd
addr16
sbb
mov
mov
or
and
sub
cmp
mov
addr16
js
std
jge
push
out
push
mov
data16
mov
int
mov
cli
imulb
push
sub
cli
mov
dec
mov
cld
leave
mov
dec
xor
and
xor
cmpsb
push
pop
mov
and
ljmp
cmp
loope
xor
out
xchg
sar
loopne
adc
xchg
and
stos
xor
repnz
xchg
sarl
imul
in
jae
dec
lea
loope
test
es
das
stos
fsubrp
andb
dec
jg
jnp
xchg
lahf
xchg
aam
rclb
adc
fwait
mov
idivl
mov
fsubrs
shrb
ret
xor
xchg
cwtl
icebp
add
dec
cmpsl
mov
xchg
xor
cmp
ret
iret
je
mov
inc
bnd
mov
cli
rclb
aad
xchg
shl
sub
rcll
cmp
leave
lret
mov
data16
roll
inc
cmp
xchg
mov
int3
xor
add
mov
xor
mov
sarl
jg
and
xor
cli
inc
mov
dec
ljmp
sahf
cmp
xchg
pusha
jb
test
std
sub
sub
add
stos
dec
fcmovu
xor
mov
jb
fisubl
mov
xchg
xchg
xchg
insb
fsubrs
ljmp
pop
dec
push
mov
je
stos
call
add
pop
sub
movsb
cmp
add
nop
dec
testb
sbb
mov
xchg
pop
and
xchg
add
mov
jmp
cs
fmuls
pop
leave
dec
loop
mov
imul
pop
jnp
xchg
xchg
in
dec
popf
pop
clc
bound
bound
push
inc
jnp
jb
dec
add
push
mov
test
mov
push
jle
movsl
inc
cmp
jo
rcll
daa
jnp
into
jge
push
divl
jnp
test
xor
ret
test
and
stos
rcrl
push
iret
or
inc
push
into
movl
ljmp
test
aaa
mov
cmp
roll
or
mov
jp
dec
test
aam
mov
in
and
std
jae
push
mov
popf
xchg
lock
sbb
loope
mov
jge
cltd
dec
mov
adc
test
add
leave
push
jge
cmpsb
xor
out
sub
mov
xchg
out
cmp
pop
sti
in
xchg
pop
addr16
aam
out
sub
xor
add
repz
dec
xor
inc
mov
mov
sub
push
lds
adc
jns
xchg
lods
mov
xchg
mov
cld
repz
fnstenv
add
out
aas
pusha
sbb
lods
mov
je
icebp
fmul
rol
daa
cwtl
xchg
and
in
int
or
mov
sub
cli
in
push
push
jne
lock
shrd
jno
addr16
xchg
aad
inc
lods
rcll
ret
notl
shl
add
outsb
mov
addr16
jp
mov
sbb
cmp
orl
mov
pop
clc
out
xor
sub
sub
leave
popf
jae
pop
test
nop
xor
sub
xchg
xchg
xor
push
popa
cs
mov
add
aaa
push
outsl
movsl
fdivl
int
test
xchg
pop
mov
push
mov
push
adc
push
loopne
fbstp
fwait
icebp
pop
insb
gs
push
orb
pop
lcall
push
sahf
or
movsl
ss
mov
xchg
sub
nop
clc
mov
scas
jbe
sbb
xor
adcb
add
adc
and
xlat
jp
or
sub
icebp
mulb
bound
incl
insl
in
sub
test
add
popa
fs
xchg
push
fsts
fdivrl
adc
inc
leave
xchg
sbb
enter
pop
xor
add
je
int3
out
mov
cmp
iret
popl
inc
cs
mov
aad
push
or
cli
ret
lods
frstor
mov
mov
lods
pop
or
setno
outsl
dec
dec
pop
and
mov
mov
icebp
lds
pop
push
jl
cmpsl
push
mov
jge
pop
add
jno
out
push
push
lahf
jae
xor
mov
pop
dec
mov
negb
and
sti
lock
dec
mov
xor
data16
pop
dec
out
outsb
adcb
xor
xchg
je
lods
inc
jnp
push
adc
in
repnz
popf
push
fwait
fdivl
das
inc
jns
sahf
sub
mov
into
mov
sub
mov
js
xchg
cltd
push
mov
cmpsb
insl
ret
stc
xchg
sub
sbb
dec
cltd
add
xchg
jns
pop
inc
add
cmp
add
dec
outsl
mov
push
stos
or
pop
sti
dec
popa
in
jnp
leave
loope
sub
negb
jno
jae
xor
add
add
cmc
popf
ds
inc
arpl
mov
mov
jb
test
push
adc
inc
fnstsw
add
pop
jp
nop
adc
dec
leave
mov
push
nop
or
insb
pop
pushf
aas
aad
xor
loop
push
stc
inc
mov
jne
dec
test
into
aas
movsb
fwait
aaa
js
dec
pop
mov
frstor
pop
imul
xchg
adc
and
stos
cmpl
leave
or
and
lock
test
outsb
fistl
arpl
arpl
or
push
movsb
stc
xchg
test
outsl
data16
sbb
mov
lds
add
sub
into
mov
gs
ret
cmp
push
das
stos
scas
cmpl
adc
jnp
stos
push
jnp
loope
inc
lock
cmp
insl
icebp
jmp
inc
sti
inc
mov
stos
iret
sub
stos
xchg
add
inc
sub
int3
fisttpl
or
or
pop
pop
xchg
pop
sub
mov
fistpl
cs
jmp
mov
inc
and
mov
cwtl
xchg
scas
xorb
mov
add
pop
adc
fwait
mov
dec
mov
test
nop
cmp
mov
mov
popa
push
xchg
fcoms
mov
dec
cmp
push
pusha
stos
pop
xchg
and
rcl
rorl
xchg
add
rol
xchg
rcrb
pop
push
add
jecxz
push
adc
test
rclb
fnstsw
jle
adc
fistps
pop
inc
and
sbb
push
push
loopne
xchg
ud1
or
fs
jbe
push
jge
adc
test
lock
out
cmp
mov
out
pusha
and
cli
sub
mov
div
jmp
notb
iret
jl
je
mov
pop
sahf
or
cli
inc
xlat
jb
out
or
lret
add
jl
mov
cmp
rcll
ljmp
sahf
ror
xchg
xor
xor
test
sub
dec
enter
lods
sbbl
mov
int
in
nop
addl
pop
mov
pop
xchg
or
or
cli
push
repz
cmp
arpl
and
mov
insl
push
lret
cmp
and
add
pop
mov
or
dec
movsl
jp
jns
inc
sbb
jno
mulb
and
negb
mov
sub
and
jmp
sub
ja
or
adcl
test
fwait
mov
or
push
imull
adc
push
mov
inc
push
mov
xchg
jns
and
cmp
inc
daa
or
push
push
mov
jp
jle
fisubs
mov
inc
hlt
das
out
dec
push
notb
loopne
ret
push
xor
std
aaa
outsb
movsb
lahf
xor
in
sub
cmp
adc
fisubl
sbb
mov
mov
repz
lods
daa
and
mov
mov
sub
jg
and
mov
push
nop
dec
mov
scas
inc
cmp
inc
outsl
sub
add
dec
lock
inc
movsl
rep
push
xchg
mov
mov
daa
cmp
push
mov
mov
or
cmpsl
mov
lock
adc
cltd
or
jmp
xor
je
mov
scas
mov
jb
lahf
aam
stc
fists
jmp
xchg
pop
push
push
les
sbb
vcvtdq2ps
arpl
insl
aam
rolb
lret
and
pop
sbb
sbb
mov
xlat
divb
leave
les
dec
shl
xchg
and
pop
enter
cmc
dec
xchg
inc
cs
loopne
insb
enter
outsb
out
ror
add
mov
add
shl
push
mov
into
xor
push
mov
pop
mov
jbe
gs
cwtl
xor
mov
sub
fwait
or
sarl
adc
dec
cli
shlb
xchg
mov
xor
arpl
sub
cmpsl
in
popl
jns
fists
in
pop
lods
divb
mov
mov
arpl
sbb
mov
enter
fdivr
jbe
jmp
inc
xor
and
outsl
mov
aaa
jp
aam
in
int3
add
loopne
xor
ljmp
pop
je
push
inc
test
xor
enter
adc
gs
jmp
out
push
xor
jbe
push
inc
xchg
add
ljmp
cmpsl
dec
inc
mov
imul
daa
cld
ret
fs
mov
loope
icebp
sub
bnd
addb
or
ficoml
sub
inc
jg
sti
mov
lret
je
xor
add
pop
mov
lcall
sub
and
sbb
mov
mov
lret
cltd
sub
cmp
and
xchg
mov
dec
push
jle
jp
mov
mov
or
test
push
or
sbb
xor
push
stos
jmp
movsl
enter
lods
pushf
fsub
cmpsl
mov
inc
push
lahf
dec
arpl
sti
repnz
mov
jns
xchg
inc
loope
dec
adc
outsl
adc
std
xor
cld
aam
cmp
mov
test
jecxz
icebp
mov
lods
test
div
or
in
rorb
ror
addr16
sub
mov
cmpb
mov
movsb
or
in
mov
jne
mov
and
push
lahf
push
outsl
pop
pop
scas
jl
nop
pop
lret
repz
nop
xchg
cld
fisubl
mov
popf
push
adcl
ljmp
or
push
jno
leave
or
test
sub
adc
shrb
inc
and
cmp
and
insl
jbe
iret
jg
cld
adc
xor
mov
inc
sahf
test
imul
push
push
pop
inc
into
out
in
pop
xchg
or
rol
push
xlat
inc
lock
cmp
inc
and
pop
xchg
push
and
fcomp
jle
push
pop
mov
dec
sahf
fimull
jmp
adc
cld
in
push
popl
int
fwait
push
xor
stos
dec
das
and
cmp
gs
shl
push
rclb
fimull
push
mov
pusha
xchg
movsb
xchg
ret
ds
pushf
mov
into
notl
mov
das
dec
in
insl
add
fdivrs
push
sub
pop
sbb
and
hlt
dec
xchg
aad
and
inc
nop
add
push
rorb
cmp
jns
icebp
mov
cld
out
sbb
insl
jp
mov
push
popa
dec
outsl
in
xchg
and
push
adc
shrl
ds
mov
ror
inc
loope
xor
icebp
in
outsb
inc
lcall
scas
negb
sub
aad
call
mov
lods
mov
sbb
test
es
cmpsb
int
add
inc
sbb
jb
mov
jecxz
cwtl
or
dec
fdivs
lock
inc
dec
xchg
cmpsb
icebp
push
jo
in
push
dec
stos
sub
aad
enter
jnp
xor
stc
or
leave
xchg
xchg
std
mov
aam
inc
repz
xchg
data16
pop
call
sahf
xlat
lds
push
bswap
cmp
lds
cmp
sub
inc
lods
insl
daa
loop
adc
in
fs
rcl
mov
lods
pusha
mov
xor
data16
enter
pop
outsb
or
cld
cltd
stc
cltd
add
pushf
out
subl
push
mov
jl
pop
ja
or
leave
mov
cmc
or
fs
xor
mov
inc
je
mov
sub
jbe
add
inc
xor
popa
lret
xchg
insb
add
pushf
push
mov
sbb
sub
add
stos
cltd
sbb
cmp
jge
stos
push
sub
scas
repz
jns
das
pop
jnp
call
add
adc
xor
push
inc
cmpsb
stos
sarb
push
cmc
add
jo
fldcw
pop
jle
movsb
sbb
or
loopne
movsb
xchg
std
or
shlb
jns
int
faddl
nop
aas
lock
ds
test
and
stos
lea
iret
push
sbb
lea
movsb
xor
mov
mov
push
or
sub
out
pop
loopne
leave
adc
mov
outsl
cwtl
add
mov
mov
sub
gs
or
jne
mov
ret
push
lods
movsl
mov
fists
pop
lret
pop
cld
mov
mov
popa
pop
out
cmpsl
test
in
lret
add
xchg
jl
pop
sub
sub
negb
fists
dec
inc
sub
sbb
hlt
push
loopne
enter
loop
out
cmp
test
sti
jno
shll
cmpsb
mov
jmp
xor
fwait
or
cwtl
mov
les
push
mov
and
add
cmp
les
aad
arpl
mov
add
sahf
sarl
or
adc
leave
mov
lds
or
inc
stos
and
es
mov
ljmp
cmc
ds
dec
arpl
adc
cmp
repz
shll
pop
out
test
add
mov
pop
adc
xchg
int3
pop
xor
dec
mov
pop
les
fwait
shll
loopne
test
cmp
addl
je
jbe
jbe
inc
mov
push
sahf
repnz
aas
repz
xor
dec
popa
pop
and
je
enter
pusha
adc
aam
jb
popa
push
subl
arpl
inc
rcrb
sarb
pop
fwait
lods
imul
mov
pop
or
inc
and
mov
xlat
adc
mov
jne
cmp
shl
frstor
negb
push
mov
nop
mov
scas
sbb
gs
push
gs
pop
out
mov
adc
sbb
dec
out
test
or
stos
jp
clc
sti
add
mov
inc
sbb
mov
lock
xchg
roll
mov
cmp
xchg
sbb
pushf
enter
mov
pop
aam
cmc
jmp
mov
sub
dec
dec
mov
cmp
sbb
cmp
fadds
jns
or
vpunpcklbw
into
xchg
mov
or
and
push
sub
mov
lret
sar
insb
xchg
sub
scas
mov
les
adc
cli
cwtl
or
and
fmull
add
add
sahf
iret
and
push
sub
inc
sub
mov
movsb
xchg
or
pop
sub
inc
outsl
stos
push
or
mulb
int
cmp
inc
in
adc
add
cmp
inc
xor
or
scas
es
cmp
stos
or
pop
lea
faddl
mov
xor
outsb
xor
out
mov
and
cmp
ret
stc
std
mov
pop
in
jge
nop
mov
loope
xor
adc
jl
xor
fildll
shlb
dec
lock
mov
test
aad
jecxz
idiv
mov
fbld
negl
xlat
mov
ljmp
pop
and
and
int3
in
mov
sbbb
dec
scas
or
repz
mov
std
inc
stc
mov
sub
push
in
pop
andb
movl
mov
dec
mov
and
cli
fldcw
sub
and
jno
push
pop
add
daa
sbbl
mov
imul
and
mov
mov
fiaddl
dec
insl
inc
lret
pop
jnp
sbb
iret
lahf
stos
dec
fcmovne
movsl
subb
xchg
sub
sub
push
push
xor
fs
xchg
pop
cmc
mov
or
jg
and
xchg
out
in
adc
movsl
dec
popl
push
add
pop
sub
shlb
popf
pop
outsl
inc
lcall
out
sbb
adc
adcb
orb
push
insl
sbb
je
addr16
fisttps
dec
in
cmp
and
sub
pop
pop
cmc
sti
xchg
push
cmpsl
add
jl
fbld
sbb
ljmp
fsubs
mov
mov
in
dec
mov
popa
ja
out
jo
sub
pushf
mov
sbb
add
test
lods
sub
push
or
pop
rcrl
mov
jo
out
in
js
nop
popf
xchg
mov
fsubs
push
inc
in
xor
out
int3
lds
movsb
je
icebp
xchg
jns
test
fstl
cwtl
outsb
mov
stos
mov
mov
fwait
insl
adc
pop
rcr
inc
adc
aas
inc
add
stc
movsl
jbe
push
push
fwait
push
push
jne
add
stc
sub
imul
pop
leave
mov
lods
les
jle
outsb
aam
lds
icebp
push
lods
push
sahf
test
imul
lds
aam
pop
icebp
xor
push
sub
cmp
aam
hlt
jecxz
pop
cltd
int3
xchg
jo
adc
push
dec
and
imul
scas
xchg
fdivrl
xor
cmp
push
fcoms
push
mov
stc
xchg
xchg
mov
bound
lea
add
jge
dec
jecxz
divb
mov
xor
mov
fcompl
sbb
daa
and
push
loop
in
mov
fildl
mov
mov
push
loop
cli
sbb
lea
or
sub
cmpsl
xor
and
xor
rclb
xchg
lahf
push
pop
fisubs
add
xchg
shll
insb
sub
dec
mov
int3
push
loopne
dec
mov
dec
sbb
lcall
fwait
mov
leave
insl
adc
icebp
pop
pop
sub
xlat
rcl
and
decl
inc
rcrb
js
test
push
lcall
add
mov
mov
xor
cs
dec
fiadds
bound
push
sub
jge
push
rcr
jg
dec
lods
std
dec
ret
or
pop
fisubl
or
inc
jb
fbld
ret
lds
pop
jno
repz
test
mov
out
sub
jmp
fiaddl
movsb
stos
lret
jbe
cmp
cmp
pusha
mov
jno
test
adc
pop
popa
jne
mov
jbe
mov
push
imull
insb
dec
pop
and
push
je
sbb
fs
jg
xchg
scas
shrl
xlat
mov
pop
popf
pop
movsl
cmp
fwait
inc
lahf
lock
inc
dec
lcall
inc
es
or
icebp
pop
sub
push
or
adc
shrb
mov
mov
mov
mov
dec
jge
bound
push
lock
cmp
ds
imul
mov
xchg
mov
sbb
popf
loop
cltd
and
in
add
je
in
or
or
clc
push
loopne
mov
and
pop
int3
loop
add
jp
xchg
rclb
pusha
push
xor
outsl
xchg
outsl
lods
mov
xchg
mov
pop
dec
jne
sbb
lret
mov
add
inc
pop
cmp
lahf
testl
and
std
sti
mov
dec
dec
clc
out
and
sahf
sub
push
dec
bswap
mul
lods
xlat
les
mov
sbb
add
lds
loope
jne
jl
pushf
jo
aad
push
add
ljmp
lea
fnstsw
inc
xlat
shlb
icebp
gs
iret
dec
and
sbb
pop
loop
dec
xlat
lea
hlt
jecxz
pop
jl
icebp
dec
test
cmc
setae
cmpl
jno
jge
out
sub
hlt
pop
jge
in
mov
push
fiaddl
je
push
pop
dec
and
pop
cmp
inc
cmpsb
stc
jns
cmp
scas
aad
jmp
fistpll
jb
or
push
sbb
ja
mov
mov
lock
cmp
call
sub
cmovp
adc
pop
xchg
mov
dec
inc
and
movsl
pop
mov
scas
jnp
add
adc
mov
leave
aas
jns
or
and
lock
pusha
aaa
fwait
add
cmp
adc
out
xchg
xchg
mov
aaa
std
test
mov
inc
or
test
data16
and
xchg
sub
lock
and
andl
lret
lcall
ret
sub
rclb
jns
xor
cwtl
mov
mov
mov
add
or
inc
decb
into
lds
inc
xchg
push
imul
jl
pop
cmc
pop
mov
in
and
arpl
lret
stc
mov
cmp
ret
sub
call
out
and
mov
inc
clc
mov
cmpsb
outsb
and
dec
sub
ret
sbbb
stos
xbegin
incb
inc
and
bound
push
stos
xchg
ljmp
ja
mov
sbb
cmp
into
in
jae
fsubp
xor
xchg
sub
stc
ss
ret
and
pop
aas
aam
lret
add
lea
sahf
xchg
loopne
orb
xlat
lcall
or
insb
xchg
int
add
in
popa
add
mov
out
push
insl
jns
xchg
push
scas
stos
pop
movsb
inc
cmpsl
jbe
shl
fwait
stos
mov
jecxz
add
sti
lods
cli
or
and
paddw
divb
sub
pop
sbb
dec
test
movsb
std
mov
mov
bnd
sub
outsl
pop
mov
mov
bound
adc
mov
pop
push
pop
push
ss
cmp
lcall
subl
test
repnz
cs
pop
insl
lcall
vpmullw
mov
adc
push
sahf
dec
mov
cwtl
pop
es
dec
dec
test
mov
sub
orl
xchg
insb
xchg
dec
jbe
sar
xor
xchg
fcmovne
push
mov
mov
nop
dec
sbb
push
arpl
das
xchg
imul
dec
sub
adcb
cmp
and
fst
lcall
loope
push
testb
test
xchg
jp
negb
xor
mov
fstpl
imul
movsl
push
or
jo
stc
cmp
loope
sub
popf
xchg
cmp
lret
cmp
sarl
jp
iret
in
dec
push
inc
xor
orb
bound
out
lahf
cltd
fiadds
or
es
shlb
mov
xchg
cli
xchg
ret
jb
sbb
std
stos
aaa
cmp
xor
shlb
sub
and
gs
test
mov
xchg
test
jmp
sub
into
frstor
mov
je
lcall
mov
lods
pop
or
ret
dec
pop
and
push
cs
je
and
inc
test
repnz
jnp
mov
or
jnp
loopne
xchg
jge
rclb
mov
xchg
jae
push
and
inc
cmp
jnp
and
cmp
xor
outsb
mov
xchg
mov
mov
scas
add
or
jmp
mov
repz
cmp
xor
cmp
sbb
push
xchg
pop
lock
sbb
jnp
in
and
add
pop
inc
push
jp
xchg
scas
inc
rorb
or
pop
sbb
insb
shll
cmp
repz
push
mov
aaa
lods
test
out
pop
jnp
add
mov
xor
or
rorb
mov
daa
mov
inc
xor
test
dec
lea
and
aas
adc
mov
push
push
ud2
loopne
test
mov
shr
ljmp
mov
add
mov
pop
insl
cwtl
popa
mov
xor
movsl
cmpsb
dec
scas
out
mov
jbe
push
loop
fabs
dec
in
push
or
cmp
mov
jecxz
pop
lcall
cmp
ja
dec
mov
sub
scas
jge
je
push
sub
outsb
je
test
cs
mov
lret
cmpsl
adc
dec
xor
out
cltd
stos
or
jmp
cmp
lret
mov
mov
ud2
adc
sbb
inc
pusha
xor
sbb
jmp
xor
mov
adc
push
stos
dec
lds
rcl
jns
hlt
outsb
sbb
imull
aam
xchg
daa
dec
scas
in
inc
jecxz
data16
push
sahf
sub
mov
jae
hlt
fcoml
mov
push
and
shll
jl
stos
dec
insl
mov
icebp
and
ds
jno
sub
inc
das
jmp
das
lock
add
pop
mov
and
mov
stc
repnz
insb
dec
pop
jge
dec
stc
lahf
sub
lahf
jnp
test
cmc
dec
xchg
movsl
push
fs
dec
out
adcb
jae
dec
add
outsl
push
sarl
push
xor
mov
divl
push
xchg
repz
jo
sti
xchg
pop
add
mov
aad
dec
mov
lret
test
sub
xor
cs
push
rcrb
fwait
mov
std
and
push
mov
or
movsl
movsb
pop
adc
outsb
push
aas
and
lret
data16
into
lcall
scas
adc
inc
xor
insb
imull
packssdw
mov
fsubrs
repnz
xchg
sub
cmp
in
rcrb
and
sar
mov
sub
les
negb
adc
imul
mov
or
les
sbb
xor
sbb
add
or
mov
mov
mov
adc
xchg
lret
xchg
insl
xchg
xor
movsb
pop
jnp
int3
fstp
push
loopne
pop
rolb
mov
inc
fdivrs
jo
out
xrelease
xchg
pop
mov
inc
js
call
in
test
or
arpl
cli
and
inc
sub
in
mov
xchg
scas
inc
cltd
mov
mov
fs
fadd
xlat
lcall
jb
loop
jbe
sbb
cmp
clc
clc
lds
movsl
and
sbb
shll
rorb
mov
in
mov
mov
fstl
cmp
sub
cwtl
cmp
pop
fisubrs
jno
cmpsb
lods
adc
je
mov
lea
lock
aas
neg
iret
jo
adc
or
jns
pop
orl
scas
test
push
pop
mov
mov
pop
or
hlt
push
mov
pop
dec
rclb
ljmp
outsl
mov
mov
jo
add
pop
into
inc
push
push
cmp
lret
push
aam
or
popf
lret
pusha
lods
jo
pushf
mov
xchg
fldl
pop
sbbl
mov
enter
cmp
gs
clc
mov
add
sub
pop
pushf
adc
mov
add
dec
or
mul
push
jecxz
call
push
inc
pop
push
arpl
fstpt
ret
pop
xorl
pop
or
push
fcoml
push
aas
lods
xchg
dec
inc
pop
mov
xor
rolb
les
mov
lahf
jecxz
adc
ficomps
sahf
cmp
cmp
stos
enter
sbb
mov
cs
mov
inc
cmp
je
popa
mov
fcomps
cmp
cmpsb
add
rcl
cld
icebp
insb
mov
loop
dec
inc
loopne
push
cmpsl
les
mov
sub
mov
cmpsl
add
es
pop
shr
inc
mov
lcall
nop
jnp
cs
jge
movsb
lret
std
dec
pop
hlt
or
cmpsb
adc
ljmp
mov
xor
jge
push
aas
cmc
and
mov
sbb
sbb
sahf
stos
jae
orb
loope
fwait
cwtl
pop
push
aas
pop
js
clc
aas
cs
cltd
cmpsl
or
ret
mov
lods
xorl
sbb
mov
lock
imul
mov
lret
mov
adc
adc
mov
sahf
sbb
rcr
inc
mov
test
ffreep
inc
sbb
rcll
call
cmp
push
imul
movl
push
lea
push
add
in
daa
ds
sbb
push
loop
lods
shr
pusha
jne
add
jno
out
mov
sub
subl
jecxz
mov
adc
js
test
inc
mov
adc
mov
inc
jo
sbb
int3
insb
lods
dec
inc
mov
ds
stos
inc
inc
lock
sbb
sub
adcl
rcl
fwait
aad
push
add
lret
loopne
movsl
sub
out
stos
pusha
ror
in
xchg
sub
push
add
pushf
popa
popf
addr16
aas
aaa
insb
inc
push
push
dec
adc
push
mov
jle
ret
movsb
sub
int
xor
fnstcw
mov
xchg
popf
dec
mul
lea
mov
out
pop
fnsave
popf
xlat
pop
mov
add
out
insb
popa
xchg
jbe
popa
in
and
gs
cmp
call
in
or
les
out
inc
sbb
out
in
push
roll
inc
push
je
jmp
decb
xor
fcomps
arpl
sarb
cld
pop
repz
test
les
movsb
mov
scas
rorl
mov
scas
mov
outsb
push
jmp
xchg
pusha
out
or
mov
push
pop
lea
subb
gs
push
add
sbb
adc
pop
loopne
and
out
cs
cmp
outsl
fsubrs
cmp
fimull
pop
das
pop
ss
sbb
adc
mov
dec
inc
jp
fmuls
pop
xchg
movsl
inc
dec
cmp
mov
rcrl
push
pop
add
add
fstps
mov
dec
fstl
rclb
in
add
xchg
shlb
jp
test
pop
into
and
rcr
or
add
jb
mov
sbb
pushf
out
cmpl
rol
cltd
mov
mov
not
sbb
push
pushf
nop
dec
mov
mov
and
sahf
lea
stos
add
xchg
daa
mov
xchg
mov
fsubrp
mov
mov
fsts
lds
mov
mov
push
inc
cmp
addr16
dec
enter
ja
adc
adc
fldcw
mov
imul
enter
rolb
pushf
lret
push
popa
movsb
lret
cld
mov
xchg
adc
fistpl
aam
scas
mov
shl
lock
pop
ret
xchg
dec
hlt
adc
jecxz
push
loopne
lahf
mov
jae
dec
xor
pop
mov
das
mov
pop
repz
int3
adc
aam
mov
std
sub
sub
in
push
test
sti
jae
in
pushf
sub
mov
out
outsl
adc
mov
cli
loopne
cmp
in
push
and
pop
mov
push
cwtl
jmp
mov
push
scas
aaa
pop
adc
and
and
push
sub
inc
sub
adc
sbbb
pop
push
mov
mov
adc
repnz
inc
cmpl
mov
mov
int3
jge
fcos
clc
cltd
in
push
lret
cwtl
clts
pushf
dec
lds
add
push
inc
xchg
mov
out
mov
popf
popf
xchg
repnz
sub
push
jns
gs
jns
je
out
push
mov
fsubp
xlat
cmp
mov
hlt
or
mov
mov
mov
rcrl
inc
jge
inc
sub
push
lock
push
mov
call
ficomps
ud0
push
mov
stos
jecxz
mov
movl
sub
into
jge
int
mov
fwait
push
mov
jno
mov
ret
movsl
mov
int
cld
fisubrs
lahf
loopne
mov
pop
test
dec
sub
out
inc
dec
call
pop
pop
xchg
mov
pop
rol
add
cmp
mov
mov
ljmp
pusha
fwait
mov
sub
inc
incl
pop
mov
mov
mov
mov
dec
jmp
shl
ljmp
mov
leave
lret
imull
jge
mov
dec
xchg
faddl
mov
ds
mov
xchg
push
jno,pn
add
daa
cltd
inc
add
adc
push
stc
fisubs
fsubl
adc
fst
mov
aas
cld
pop
addr16
nop
insb
sbb
ret
inc
mov
fnsave
xchg
mov
sbb
lock
outsl
adc
push
rcr
and
mov
xlat
mov
jbe
subl
jne
js
fisubrs
cmpsb
movsl
test
std
fcoms
movsl
or
and
cmpsb
jae
pop
data16
push
stos
sub
test
bound
ljmp
mov
push
jg
aaa
cmp
test
lock
popf
scas
bound
repz
inc
ret
in
sahf
push
xchg
sub
adc
das
jo
rol
or
test
jge
xor
outsl
fldenv
adc
sbb
fisubl
fmul
cmpsb
mov
clc
and
pop
mov
dec
pop
neg
cmp
jmp
arpl
stos
jno
push
dec
dec
pop
mov
cmpb
daa
and
jo
aam
fstp
icebp
shl
popf
mov
scas
pop
sbb
or
fcomps
or
mov
push
loope
aas
imul
jbe
xor
mov
sbb
jae
movsl
test
mov
lock
mov
xchg
pop
jb
add
hlt
jecxz
push
inc
aad
cmp
xor
push
call
push
cltd
sbb
dec
loope
das
xchg
test
jno
sbb
mov
or
cs
xchg
test
mov
mov
adcb
mov
jnp
loope
fcmovb
test
incb
pop
test
and
cmp
pop
fdivl
inc
lahf
andb
ret
insb
push
push
outsl
push
xor
sbb
pop
leave
insb
cmp
dec
ja
hlt
addr16
and
push
xchg
lods
mov
mov
dec
dec
popf
and
jnp
gs
test
mov
inc
push
sbb
jae
xchg
mov
dec
xchg
add
mov
nop
and
xchg
je
dec
movsb
test
int
jmp
das
mov
adc
mov
int
fadd
adc
mov
xchg
daa
leave
lock
pusha
in
sub
scas
not
cmp
cld
insb
push
pop
pop
mov
push
cmp
aam
jbe
cmp
inc
cmp
sub
in
iret
sub
loop
mov
and
std
cmp
addr16
pop
mov
fmull
adc
loope
jle
es
adc
add
xchg
add
mov
pop
outsb
bound
cmp
xor
add
cmpb
movsb
out
dec
sub
fimull
inc
sub
in
cmp
insl
mov
jbe
mov
jmp
lret
pop
js
cmc
shlb
insb
sub
gs
movsb
xor
fimull
bound
mov
mov
mov
ljmp
cmp
out
adc
das
sbb
xchg
add
xor
dec
loopne
leave
adc
fs
mov
pop
arpl
push
dec
mov
bound
mov
mov
aad
and
push
lret
inc
lret
ret
mov
sub
mov
imul
push
cmc
sbb
pop
sub
fldcw
inc
lods
outsl
pop
xchg
dec
das
xor
pop
inc
lret
mov
js
in
xchg
sbb
and
jg
xorb
jns
xchg
and
pop
mov
stos
pop
cmp
scas
push
cmpl
test
inc
mov
inc
adc
in
mov
out
mov
movsb
fsub
scas
mov
jecxz
outsb
xor
mov
insl
inc
sarl
mov
xlat
add
mov
enter
xchg
dec
and
mov
shll
repz
int3
xorl
ror
fwait
fs
and
daa
cld
imul
out
out
jbe
mov
mov
pop
test
lret
mov
add
cmp
add
inc
ret
mov
call
cli
dec
xor
or
xchg
repz
test
sbb
fsubrl
aaa
mov
mov
xchg
call
push
mov
xor
negl
push
sub
inc
add
inc
test
fscale
mov
insl
mov
divb
dec
jle
xorb
mov
xchg
fcmovnu
out
std
lds
arpl
push
sub
pop
xlat
insl
jmp
push
xor
cs
mov
rorl
lahf
adc
pop
pop
les
addr16
xchg
mov
je
sti
xchg
sbbl
popf
adc
adc
pop
fmulp
sti
cmpl
sub
inc
scas
add
mov
inc
jns
cmp
mov
addr16
xchg
mov
pop
mov
inc
dec
jbe
scas
negl
out
jo
xor
ret
dec
call
mov
es
sub
jmp
rcl
bound
jge
dec
and
adc
test
mov
negb
in
shll
or
or
int3
fwait
xor
inc
jo
mov
iret
mov
push
cmpsb
fstl
push
pop
push
fcomip
cs
test
pop
je
or
mov
jne
pusha
daa
pop
aad
inc
ja
adc
push
xor
imul
xor
fadd
sub
push
sahf
call
xchg
lcall
lea
sarl
adc
cs
inc
mov
fsubs
rcr
repnz
bound
pop
into
push
pop
out
out
push
xchg
inc
mov
aam
push
xlat
or
pop
out
insb
jae
xor
hlt
in
and
lahf
lea
gs
jge
stos
pop
test
add
call
aaa
sbbl
jnp
add
mov
ret
push
fisubrl
enter
jecxz
fstpt
stos
jmp
lods
daa
sbb
fmuls
insl
cwtl
sarb
or
neg
add
cmpl
adcl
and
sbb
andb
sbb
sub
testb
cmp
inc
mov
mov
xchg
aad
adc
iret
out
pop
mov
push
subl
mov
mov
mov
lea
mov
pop
and
in
out
pop
mov
ficompl
sub
xor
inc
adc
pop
sub
sub
xor
sbb
cmpb
in
sub
jmp
jbe
jmp
cmc
imul
pop
jecxz
aad
in
sbb
mov
out
fcomp
mov
sub
stos
xchg
jne
inc
mov
sbb
adc
outsl
and
daa
stos
mov
push
addr16
mov
xchg
subb
cmp
sbb
fstpt
cmp
mov
lret
push
fldenv
inc
mov
decl
aaa
les
cmp
in
imul
xor
popa
mov
movsl
adc
scas
xor
lds
decb
nop
push
inc
mov
decl
pop
sbb
int3
xchg
xor
dec
ret
lock
orb
imull
je
bound
pop
lcall
mov
adc
sti
xor
aas
adc
jge
pop
mov
pop
xlat
sub
dec
dec
rclb
mov
ror
jnp
shll
insb
adc
loope
shrl
inc
push
cld
push
and
repnz
ret
js
push
sarl
rclb
imul
bound
xor
pop
in
pop
xchg
loope
jecxz
je
stos
test
fdivr
jnp
xlat
fildll
jb
cmc
in
call
cmp
sbb
mov
cmp
push
adc
dec
xor
rolb
pop
xchg
test
call
add
jne
cmp
out
xor
lret
mov
pop
sub
mov
fldcw
cmpsl
push
imul
insl
jp
or
jge
jle
jg
test
lods
in
test
ss
arpl
lods
jge
inc
pxor
cli
mov
cwtl
setbe
repz
cmpsb
pop
push
lods
popf
inc
or
hlt
das
jnp
adc
ret
push
enter
in
sub
leave
add
inc
mov
xor
mov
cmpsb
mov
cmp
lcall
or
sub
fsubrs
daa
dec
cmp
imul
shlb
mov
jno
lahf
out
and
sub
or
sub
mov
out
cs
pop
or
dec
xchg
call
fwait
sbb
movsb
sbb
clc
rcll
sbb
hlt
pop
or
cmp
fildl
push
pop
mov
pop
ja
daa
fs
push
push
pop
fmull
ja
jae
xchg
scas
pop
mov
ret
les
and
scas
and
xchg
xchg
pop
pop
jnp
stos
xchg
pop
jo
cwtl
jecxz
cmp
fbstp
lods
in
mov
in
int
push
jmp
pop
cmpsb
fnstcw
lods
push
mov
shlb
lret
inc
cmp
jbe
lcall
mov
mov
je
cmpsl
insb
mov
push
inc
lahf
iret
fstpt
lds
rorb
lret
loope
adc
xor
push
mov
cmp
or
repz
mov
popf
dec
out
jae
dec
dec
subl
repz
imul
outsb
test
jne
add
xchg
mov
xchg
aam
fldt
pushf
arpl
pop
shll
sti
and
inc
fistps
loope
jnp
lret
mov
lcall
adc
mov
xor
mov
jle,pn
pop
mov
std
add
les
inc
push
in
loope
imul
push
mov
mov
mov
imul
out
loop
ud2
push
inc
xor
loopne
push
lahf
out
cwtl
sub
cmp
dec
jg
pop
push
mov
pop
jb
out
or
xchg
mov
jb
push
rclb
and
frndint
sbb
adc
xchg
ficoms
ret
fld
mov
jae
lret
xor
imul
jne
mov
sti
inc
mov
stos
mov
mov
sbb
fcmovbe
mov
and
aaa
mov
sbb
and
mov
jns
push
imul
inc
hlt
sbb
lds
loope
nop
push
push
je
aam
adc
lcall
jmp
jb
outsl
test
jo
push
adc
daa
jno
sbb
mov
mov
push
pushf
fidivl
mov
cmpsb
pop
lret
sbb
lods
jns
cmp
test
mov
or
pop
add
jns
cs
cmc
xchg
fnstsw
add
in
pop
out
mov
sub
mov
inc
pop
mov
cmp
jae
lds
test
mov
inc
mov
add
mov
repnz
lods
les
out
das
dec
lds
test
lea
fs
test
or
mov
mov
ljmp
int3
ret
inc
xor
inc
addr16
and
xlat
jecxz
ja
imul
std
inc
icebp
lea
out
mov
xor
ss
aas
aas
popa
test
test
jae
inc
jle
xor
fdivs
inc
push
sbb
cwtl
int3
dec
fwait
cmp
pop
int3
mov
pusha
push
mov
lods
mov
mov
xor
aas
rorl
cltd
movsb
push
jne
fbstp
outsl
and
out
popa
and
shrb
jno
and
push
pop
mov
pop
mov
cmp
pop
sub
jne
or
jge
in
daa
gs
push
jae,pn
icebp
sbb
test
popa
xchg
mov
js
cmpsb
sub
jg
or
cmp
negl
cmp
inc
mov
cmc
es
or
mov
movsl
jecxz
sub
shlb
mov
jo
mov
movsb
jno
lcall
loope
add
dec
or
mov
roll
cmp
mov
mov
pop
insl
add
sub
lods
mov
push
in
cs
xor
scas
ljmp
lock
inc
or
mov
inc
into
mov
sub
mov
cmp
icebp
jnp
lea
xchg
push
arpl
mov
xchg
incb
and
adc
mov
bnd
jb
sbb
dec
dec
adc
mov
jp
jecxz
sbb
cli
or
inc
xchg
rol
aas
cli
ret
xchg
inc
outsb
lock
loopne
dec
cld
mov
loopne
pusha
cmp
jl
int
daa
rcr
jae
add
shlb
cwtl
xchg
push
sbbl
pop
adc
movsl
lds
cltd
je
mov
dec
pop
aam
scas
pushf
pop
icebp
scas
mov
mov
sbb
dec
push
rorb
sub
mov
add
or
loop
faddp
cmc
xor
inc
mov
sbb
pusha
pop
ja
inc
idivl
dec
ror
imul
jnp
and
xchg
xchg
dec
jge
jae
adcl
jmp
fwait
xor
pop
sub
jns
fwait
sbbl
inc
mov
pusha
or
mov
lds
daa
or
mov
and
jmp
movsl
push
xchg
xchg
pushf
sbb
push
or
dec
or
je
push
cmp
test
or
add
adc
fbld
stos
inc
push
lea
dec
ss
mov
mov
mov
xchg
enter
push
pop
stos
mov
lock
inc
inc
xor
jno
es
lret
ds
enter
xlat
in
in
shll
jno
push
mov
pop
iret
lahf
jge
mov
dec
int
fisubl
rcl
pop
jl
dec
ljmp
imul
xor
cmp
push
fildll
in
scas
sbb
sub
sub
std
cmc
dec
pop
push
adc
or
mov
out
push
addr16
sub
movsb
mov
push
jecxz
leave
pop
insl
add
pop
hlt
pop
jecxz
roll
cmp
nop
cmp
and
lods
xor
loopne
push
testl
pop
out
addr16
mov
jp
dec
adc
jl
fcmovb
lcall
and
mov
mov
rcrl
sbb
xchg
mov
and
and
pop
scas
fisttps
sbb
or
jmp
pop
mov
orl
lret
in
inc
ficoms
add
je
nop
cmpsb
ljmp
les
push
out
pushf
inc
xor
mov
lret
ljmp
fsubr
mov
gs
test
lahf
lock
bound
test
cmp
pusha
or
stc
pop
push
lods
cwtl
mov
js
jmp
inc
aaa
out
out
pop
ret
data16
inc
xlat
lret
ss
push
icebp
shr
leave
cli
dec
xor
dec
adcb
adcl
fildll
testb
mov
inc
jmp
inc
sbb
lods
bound
xor
ljmp
jle
pop
mov
insl
out
aad
scas
test
fcmove
test
sbb
mov
es
mov
sub
loopne
pushw
pop
inc
sub
and
sub
push
push
mov
mov
push
xor
push
repnz
test
nop
xor
hlt
jae
imul
xchg
out
and
hlt
jno
popa
mov
movsl
inc
jge
repnz
inc
cs
std
pop
xchg
dec
fwait
xor
loopne
sbb
push
dec
mov
dec
pop
test
loop
pushf
inc
sbb
add
sti
and
adc
in
add
ss
mov
cli
int3
lcall
lods
add
push
mov
clc
mov
arpl
cmp
aad
jnp
mov
jne
inc
rorb
repz
add
rcl
adc
sahf
in
jns
gs
pminsw
push
or
popf
mov
sbb
data16
sti
inc
loop
or
fwait
arpl
dec
mov
insb
movsl
shlb
or
dec
movsb
outsb
fs
frstor
add
js
xor
xchg
popf
int3
mov
cwtl
mov
fld
insl
in
pop
ljmp
inc
push
imul
inc
inc
icebp
lret
adc
lret
daa
dec
push
stos
or
pop
imul
cmp
pop
ja
jle
int
pop
das
pop
iret
rorl
insb
dec
lret
lret
sub
xchg
pusha
pop
jno
inc
cmp
sub
sbb
or
xor
test
or
lds
out
mov
xlat
add
scas
in
adc
testb
mov
jns
jmp
mov
add
out
roll
arpl
in
cmp
dec
popa
int
fwait
mov
outsb
das
ja
mov
cmc
int
jl
repnz
loope
jo
cltd
rolb
aas
sbb
push
out
mov
cmpsb
pop
sub
cmpsb
mov
sbb
in
sbb
jmp
je
subb
vminps
sahf
push
movsb
and
or
fisttpl
and
push
xlat
lcall
and
inc
push
sbb
mov
addr16
mov
adc
sbb
sbb
dec
push
cwtl
mov
or
pop
sub
paddusw
and
jp
int
fstpl
int
repz
arpl
dec
sub
lock
ror
imul
jbe,pn
negl
pop
pop
mov
lods
rep
scas
pop
sti
enter
cmpsl
mov
or
add
adc
push
sbb
daa
sub
push
ret
ja
mov
test
or
dec
loope
lcall
popa
enter
test
mov
pop
cmp
dec
std
fs
aam
outsl
bound
mov
sub
mov
imul
dec
dec
or
inc
fwait
es
cmp
inc
inc
vxorps
pop
jp
lds
js
movsb
je
into
mov
orl
iret
mov
out
mov
add
iret
push
adc
out
ret
aam
or
dec
fnstsw
mov
inc
dec
nop
or
dec
jbe
lret
fldcw
xchg
ljmp
in
pop
mov
sub
bound
inc
sti
mov
xor
cmp
pop
pop
sbb
testb
jno
mov
jmp
cmpb
mov
jg
or
adc
pop
fisubrs
pop
xchg
clc
sub
xor
dec
in
xchg
leave
aam
mov
push
test
and
test
test
stc
dec
xchg
and
idivl
pop
sub
dec
sti
cld
cmp
loopne
cmp
js
lds
dec
xchg
shll
test
leave
mov
push
pop
cmp
pop
test
fiaddl
sbb
jl
nop
hlt
cmp
enter
inc
or
pushf
sub
shrl
fidivrs
insb
mov
sbbl
mov
lcall
cmp
add
xor
mov
xor
xlat
xor
jp
in
gs
push
loope
in
ficompl
aas
mov
sbb
fadd
sahf
push
repnz
xor
scas
test
enter
sub
icebp
jb
jns
mov
fisttpll
out
sbb
rol
cmpsl
insb
inc
ret
subl
jb
loopne
mov
sbb
lods
jbe
ret
xor
sbb
inc
sti
jge
sbb
call
mov
xchg
jmp
ss
inc
sbb
imul
jne
pop
outsl
pop
cltd
mov
pusha
sbb
mov
pop
mov
dec
jns
pop
xchg
and
mov
jg
push
mov
push
sarb
popf
in
or
scas
xchg
inc
xchg
mov
mov
pop
xchg
jg
mov
push
loop
xor
sub
leave
xchg
mov
jbe
dec
jg
mov
into
test
aaa
mov
ret
pop
adc
stos
pop
and
test
iret
shl
add
sub
mov
cmpsb
sbb
loope
aas
popa
gs
jle
gs
rol
xor
ret
idiv
dec
add
xchg
push
jno
cld
mov
testl
sahf
xchg
mov
mov
or
not
cwtl
push
ret
mov
sub
cmp
cwtl
jo
std
mov
jnp
repz
xchg
add
mov
inc
sbb
pop
adc
add
fsub
ret
mov
cmp
mov
out
or
pop
in
mov
call
sub
mov
inc
xchg
xor
movsl
data16
adcl
sub
aam
imul
dec
pop
aaa
call
ljmp
fstps
pop
pop
jne
mov
cmpsb
andl
call
push
mov
xchg
inc
neg
mov
or
xchg
loopne
push
adc
mov
mov
int3
enter
into
mov
inc
fidivrs
test
imul
rorl
or
inc
mov
sbb
mov
mov
imull
out
cli
xchg
lods
mov
mov
mov
int
movsl
cmp
pop
fsubs
lret
test
in
and
aaa
push
cmp
pop
mov
inc
jb
test
lcall
inc
pop
mov
insl
shll
aad
mov
and
out
and
lahf
std
cli
jp
sbb
movsb
mov
jmp
push
add
add
arpl
push
call
jle
ret
bsf
xchg
mov
out
pop
xchg
pop
push
add
push
lock
loopne,pt
mov
in
fs
ja,pn
adc
mov
inc
mov
out
into
add
xlat
imul
sbb
jne
in
mov
cmp
fimull
sub
cmpsl
xchg
imulb
sub
int
cltd
cmc
jnp
out
or
fistps
cli
or
dec
mov
mov
and
inc
dec
cmpl
fwait
outsb
sbb
int3
xchg
stos
cwtl
jge
cmpsl
idiv
scas
subb
test
or
adc
inc
testb
xor
cs
je
ret
ljmp
push
dec
popa
or
test
leave
mov
repz
arpl
mov
insb
push
movsb
mov
and
xlat
lret
in
dec
aas
jge
scas
xchg
jne
adc
mov
mov
ret
add
stos
jo
sbb
jb
pop
sbb
and
mov
mov
aad
and
scas
mov
inc
scas
shrb
push
sbb
sub
out
int
fucomip
push
adc
pop
in
dec
sub
hlt
fisubrs
ss
fs
das
testb
push
cld
mov
sahf
adc
fdivs
out
idiv
mov
jo
cmpsb
int
call
xchg
xchg
int3
js
pop
dec
sbb
mov
cmc
push
mov
int3
push
enter
cmp
loop
dec
mov
movsb
xor
rorl
popa
negb
outsl
outsl
les
sbb
jne
pop
or
mov
mov
mov
sti
pop
sbb
jnp
inc
es
cwtl
pushf
add
fiaddl
nop
fwait
roll
aad
cmp
pop
mov
add
cwtl
cli
enter
movd
lret
jmp
pop
aas
xor
jecxz
imull
adc
sarb
mov
sarb
xchg
mov
mov
popf
incb
jl
xchg
test
sub
shr
pop
sbb
fldenv
ljmp
mov
xorb
sub
push
dec
lods
out
mov
mov
fstps
add
int
adc
js
add
xor
xchg
push
test
roll
mov
or
sti
dec
jle
and
nop
dec
jne
lods
dec
push
push
sub
adc
ja
and
xchg
mov
pop
inc
imul
xchg
lds
sbb
sub
out
ret
movsl
repz
pop
and
rcl
addl
out
jne
cmp
repz
fwait
sub
push
aam
xchg
or
sarl
in
pop
or
cmp
popf
mov
push
sbb
fistpll
mov
or
shlb
lds
inc
and
mov
bound
outsl
sbb
adc
pop
int3
jmp
xchg
bound
pop
sahf
mov
xchg
xchg
jl
sti
jmp
sti
pop
shr
out
dec
gs
cwtl
xor
sbb
push
mov
lahf
shll
jnp
popf
dec
sub
outsb
push
pop
fs
push
push
std
stc
push
cmp
ret
inc
pop
lea
or
aas
dec
rcr
ss
and
movsb
rorw
cs
cmp
mov
int3
mov
jge
daa
scas
in
lods
jmp
mov
sbb
sub
ss
scas
mov
or
mov
mov
test
fadd
xchg
fstpl
les
add
mov
dec
stc
mov
daa
or
int
mov
xchg
sub
ret
movsl
scas
jmp
jae
mov
mov
lock
jmp
enter
xchg
add
add
xchg
mov
xchg
sub
ficomps
lea
push
xlat
cmpsb
dec
rcrb
stc
cmp
or
sahf
xchg
mov
xlat
pop
pop
arpl
xchg
pusha
in
or
loop
sbb
ret
das
shlb
lahf
insl
test
divl
rclb
xchg
add
adc
out
jl
nop
out
lea
add
sub
in
adc
jg
cltd
fstl
xchg
hlt
xor
insl
not
divl
mov
test
sub
test
cmp
fs
mov
cmpsb
push
push
or
or
add
cltd
loopne
ret
arpl
addr16
lds
jl
push
mov
jecxz
jnp
dec
ss
push
int3
and
jle
stos
fdivl
pop
or
rcll
fldcw
dec
shll
daa
sbbb
or
aaa
adc
jle
mov
mov
aas
out
insl
ret
sbb
xchg
ja
or
jmp
test
or
fwait
push
in
add
jg
mov
pop
inc
mov
imul
xor
inc
push
lret
push
mov
icebp
mov
cmp
add
pop
push
ret
rorb
outsb
les
and
adc
movsl
dec
or
add
dec
insb
int
jns
cli
out
fdivrl
lret
ljmp
sub
jno
mov
xchg
pop
shrb
push
xor
inc
push
shlb
inc
cli
cmp
in
loop
mov
lods
pop
xchg
fbld
push
lock
mov
adc
mov
or
pop
mov
ror
stos
mov
inc
pusha
in
leave
adc
movsl
push
lods
mov
aaa
sub
xchg
push
jl
rclb
stos
stos
sti
mov
leave
mov
jo
stos
jo
cmpsl
and
dec
outsb
ret
insl
lcall
pop
push
mov
push
jnp
cmc
lods
cld
pop
lret
mov
lods
fwait
adc
pop
popa
jecxz
cwtl
add
in
pop
mov
add
icebp
jnp
arpl
jnp
xor
aam
adc
pop
jns
loopne
test
bound
loope
pop
pop
test
or
jae
lea
hlt
into
out
adc
mov
scas
ja
inc
jns
imul
pop
popf
clc
divl
ret
xor
mov
clc
test
scas
js
add
imul
xchg
adc
push
in
daa
pop
adc
add
cmpb
mov
xchg
pop
mov
pop
aas
pop
enter
cmp
testb
push
imul
movsl
dec
ja
pop
outsl
movsb
std
mov
push
pushf
jnp
mov
outsb
popa
xchg
out
fisttpll
lods
cmc
adc
cltd
insl
aas
fadd
push
test
lahf
push
cld
lea
mov
xor
sbb
das
iret
loop
push
fwait
pop
pushl
or
andb
inc
sbb
mov
push
fwait
mov
xchg
in
ret
add
out
rcrb
lods
mov
repz
nop
inc
dec
cli
jg
jb
and
push
inc
out
test
mov
jge
bound
cmpsl
sti
inc
rol
jb
shl
inc
dec
or
mov
sub
cmp
cmp
hlt
sub
call
ret
mov
gs
push
jle
imul
in
jmp
ret
testb
xor
push
cmp
push
stos
fs
mov
or
iret
cmpsl
js
fimuls
rclb
cltd
shrb
sub
xor
fstpt
mov
pop
jge
cmpsb
stos
pop
call
mov
repz
and
pop
add
sbb
add
incl
aad
pop
jne
add
int3
cmp
lcall
loopne
test
loope
xchg
inc
shll
movsl
cmp
pop
sbb
xchg
daa
mov
inc
fstpt
fmul
mov
add
jg
and
test
dec
mov
into
add
adc
push
das
and
scas
xlat
loope
mov
dec
pusha
es
outsl
xor
int
pushf
mov
scas
into
mov
adc
test
insl
popf
popf
add
frstpm(287
push
and
sbb
shrl
mov
fcmovbe
pop
in
adc
imul
xchg
xchg
enter
das
out
push
inc
and
ficoml
inc
adc
jbe
and
xor
xor
iret
scas
and
scas
das
sbb
stos
add
pop
xchg
add
lcall
mov
cmpsb
jnp
xor
sti
in
out
bound
lahf
arpl
out
shr
and
push
jnp,pt
adc
stc
mov
adc
fimull
and
and
enter
hlt
pusha
mov
mov
or
inc
xchg
jg
dec
mov
mov
ficomps
xlat
sbb
xchg
ret
push
add
add
sub
add
call
sbb
lock
ret
in
xchg
arpl
xor
xchg
sarl
pusha
dec
setae
test
sub
ds
lock
test
and
mov
outsl
lahf
xchg
xor
fcoml
sbb
sbb
sbb
mov
dec
inc
idivb
mov
jmp
in
ljmp
xor
lret
pop
stos
adc
jmp
sub
ljmp
jnp
insl
popl
xor
pop
out
filds
mov
mov
mov
orl
pusha
fdivl
lods
insl
inc
xor
lret
pop
cmpsl
cmp
push
divl
mov
mov
push
cmp
sbb
stos
sahf
adc
mov
lret
in
pop
mov
and
lds
mov
and
fcoms
filds
sub
jmp
call
xchg
pop
scas
sarb
or
xlat
iret
inc
aaa
leave
and
icebp
fcoms
mov
fidivrl
adc
dec
cli
xor
lahf
dec
add
and
xchg
inc
jecxz
lods
inc
pushfw
dec
push
and
mov
mov
push
or
sbb
out
shr
inc
imul
mov
adc
scas
into
mov
shlb
xchg
data16
in
jl
fmuls
or
sbb
add
jg
pop
cltd
add
jge
xorb
jge
jmp
push
divb
push
or
mov
sarl
xchg
out
test
hlt
inc
xor
and
es
sahf
stos
out
iret
or
leave
popa
lds
xor
or
int
mov
xchg
jecxz
mov
mov
imul
jge
or
sti
jne
sbb
inc
or
out
mov
jns
pop
dec
jecxz
hlt
bound
or
rorl
mov
movsl
xchg
iret
cmp
mov
ds
or
imul
cli
xchg
jo
pop
int
movl
mov
hlt
testb
xchg
xor
mov
xlat
dec
sti
xchg
repz
jecxz
cmp
mov
jg
fisubs
in
xchg
int3
add
pushf
divl
js
push
jge
sbb
xlat
leave
cld
mov
lea
popf
cli
push
test
rcrl
cmp
in
pop
inc
imul
mov
sbb
push
or
inc
in
insl
outsl
adc
scas
cmp
mov
into
cmp
aas
leave
xor
stc
cmp
ret
insb
adc
mov
loopne
sti
mov
jmp
popf
stc
sbb
cmp
lret
xlat
cmp
sub
ljmp
std
lcall
cmpsl
aad
addr16
cmp
mov
sub
add
aam
test
xor
lods
arpl
lret
dec
pop
dec
jae
and
fsubs
arpl
cmp
mov
mov
xlat
rcrl
hlt
mov
ljmp
addb
out
xchg
ficompl
mov
jmp
dec
sbb
icebp
sbb
sub
das
mov
lret
movsb
aaa
adc
xchg
mov
lret
adc
push
mull
jmp
test
cwtl
pop
sti
lea
xchg
pop
mov
imul
fcoml
out
push
or
push
imul
pop
fwait
inc
roll
pop
dec
xchg
in
mov
mov
movsb
pop
sti
mov
movsl
aaa
repz
cmc
jmp
aaa
ljmp
pop
rcll
xchg
jne
jnp
push
ljmp
and
mov
inc
jp
cs
insb
lcall
mov
or
and
repz
jle
ret
or
dec
out
dec
mov
jae
mov
and
jns
ds
jle
or
mov
in
sub
insl
andb
push
lcall
pop
push
or
addr16
stos
inc
push
mov
in
cwtl
pusha
inc
je
rorb
pop
lock
pop
dec
dec
jle
push
xchg
repnz
jle
mov
xchg
ret
jge
stos
loop
aad
daa
adc
dec
xchg
push
push
icebp
fcompl
ja
add
cmpl
icebp
ljmp
xlat
cmpsb
mov
mov
lret
adc
sahf
repnz
ja
add
mov
push
xor
or
add
cmp
lret
cltd
lea
pop
or
arpl
xchg
aaa
in
xchg
push
shl
adc
or
jne
cmp
icebp
cli
cltd
lods
popf
je
daa
pop
loop
pop
push
ja
mov
xor
nop
pop
inc
rorl
data16
rclb
fwait
pusha
data16
xchg
sbb
stos
xchg
int3
arpl
xor
das
dec
adcl
je
sub
xchg
push
loope
jns
xchg
xchg
mov
lret
pop
push
or
cmpsb
jae
xchg
out
push
cmpl
xchg
mov
cmp
leave
pop
adc
mov
fs
cs
inc
mov
adc
in
shl
mov
cs
jae
out
popa
jno
mov
aas
int
std
jecxz
aaa
pop
stos
lcall
mov
mov
add
mov
mov
fadd
mov
test
rclb
dec
pop
inc
jo
scas
outsl
stos
std
pop
test
out
std
popf
xor
int
test
scas
loope
nop
lret
dec
scas
push
imul
lea
imull
mov
orl
mov
aaa
dec
dec
xchg
xor
cld
loop
or
push
test
nop
mov
xchg
das
xor
mov
jecxz
lahf
in
fcompl
sub
pop
mov
push
inc
lods
inc
sub
pop
push
mov
fs
lods
fdivrl
out
add
movsb
int3
ja
jbe
ja
push
adc
icebp
cwtl
add
xchg
push
enter
stos
xor
fmuls
push
popl
xchg
mov
mov
jl
shrl
jecxz
lds
sbb
adc
stc
ds
out
xchg
in
xchg
xlat
sbb
pop
sub
push
mov
loopne
stos
push
add
mov
data16
repnz
nop
pop
pop
jns
mov
dec
mov
in
mov
mov
pusha
repz
xor
and
pop
adc
mov
das
outsl
gs
pop
add
insl
and
inc
mov
adc
sahf
fsubl
lods
mov
in
sahf
mov
add
or
cmpb
jns
xchg
in
mov
pop
mov
inc
mov
loope
lret
cmp
mov
jb
mov
xor
sbb
arpl
call
pop
cmp
xchg
adc
inc
imull
das
sbb
pop
aas
into
call
in
sahf
push
in
out
dec
and
xlat
std
popf
lods
xor
lret
lea
lds
sbb
jb
test
cli
cs
adcl
jnp
hlt
jae
lea
mov
addr16
xchg
movsl
mov
mov
push
addl
je
ljmp
out
call
sbbw
add
xchg
add
lcall
mov
cmp
ja
fdivrl
mov
adc
int
dec
dec
negb
sub
mov
or
jno
pop
adc
sahf
ss
inc
pop
lods
rclb
xchg
add
pop
push
mov
and
push
adc
in
sti
xor
sbb
arpl
and
xchg
aam
adc
pop
cmp
out
inc
jbe
lret
dec
ficoms
bnd
lret
mov
jne
push
ss
sbb
dec
ja
mov
cmp
repz
pop
testb
gs
push
mov
and
cmp
addl
and
sarl
ficoms
lock
add
cld
clc
sahf
ljmp
scas
loopne
ljmp
test
inc
cld
dec
test
sub
and
xchg
loope
xchg
lret
loop
xchg
sub
sar
aam
inc
add
test
notb
dec
cs
loope
sbb
ds
dec
add
sbb
pop
pushf
cmp
movsl
jecxz
mov
mov
adc
mov
jecxz
or
lcall
insl
xor
daa
sbb
sbb
add
movaps
lret
dec
and
ja
scas
fisubrl
sbb
xchg
add
sbb
lret
mov
jb
inc
sbb
js
into
cld
aam
negb
and
outsb
mov
jns
hlt
jle
leave
adc
jbe
stc
sub
sbb
ret
push
sub
adc
je
sbb
rcll
rcl
pop
mov
enter
rcll
add
push
popa
push
xor
sub
addr16
push
jmp
and
movsl
lea
rcl
jmp
fimuls
cli
mov
lods
adc
cmpsb
jecxz
pushf
or
push
mov
scas
mov
dec
inc
daa
fisubl
sub
push
pop
js
leave
lahf
sbb
mov
inc
fwait
dec
mov
mov
push
push
ljmp
data16
dec
sub
inc
and
inc
and
das
mov
xchg
xlat
pusha
pop
mov
xchg
mov
out
lret
daa
mov
test
es
xor
xorb
enter
repnz
push
mov
sbb
pop
in
bound
xchg
lea
adc
test
je
dec
cmp
or
ret
mov
data16
jmp
fs
insl
addr16
sbb
inc
movsb
aaa
arpl
xchg
pop
push
loope
repz
inc
sbbl
sub
popa
pop
and
or
sarl
jno
lock
sub
xchg
ljmp
stos
or
mov
ja
xchg
xchg
jns
jne
push
dec
iret
mov
in
mov
add
mov
iret
xlat
xor
jmp
xchg
or
popf
add
xor
jp
xlat
mov
cmpsb
and
xchg
ficoml
sub
xchg
dec
mov
test
fbld
in
mov
mov
nop
jbe
cli
xchg
gs
aaa
vmwrite
xchg
jbe
or
mov
or
sbb
into
mov
test
mov
stos
xorb
cmpsb
jae
jmp
into
add
movsb
pop
dec
lds
mov
clc
int
sub
negb
movsl
repnz
jmp
add
test
dec
pop
and
notl
adc
les
cli
aas
imul
xchg
adc
or
add
xor
outsb
fdivrl
mov
jge
adc
jmp
sar
mov
seto
xor
mov
sahf
sbb
mov
mov
stos
frstor
arpl
mov
iret
scas
mov
sub
and
rcrb
gs
repz
inc
inc
xor
pop
arpl
orl
mov
push
hlt
arpl
loopne
loop
xor
cvtps2pi
push
js
add
jo
ljmp
roll
sbb
cs
les
testl
inc
sub
js
mov
hlt
jle
add
push
lret
stos
hlt
mov
mov
insb
andb
sbb
mov
dec
inc
push
nop
pop
lret
int
jne
and
bound
into
aaa
in
mov
cmp
or
icebp
loop
xchg
stos
pusha
inc
or
outsl
push
cmp
hlt
mov
sbb
shrl
xor
jl
push
and
adc
adc
out
insl
in
jb
and
movsb
xor
popa
and
add
pop
jno
add
push
or
push
cmp
repz
adc
ss
jne
lcall
and
pop
inc
movb
push
sbb
ret
lahf
jge
popa
ss
loop
int
push
test
cmpsb
cmpl
jo
subb
add
in
int
inc
and
dec
cld
pushf
out
sub
dec
adc
jae
xor
in
aas
sub
mov
out
pop
iret
ret
jne
mov
out
mov
mov
lea
loop
or
push
cmp
mov
mov
pop
fistpll
pop
sbb
ja
cmpsb
mov
xchg
lahf
dec
push
cltd
jb
popl
mov
out
lock
ficoms
jae
xor
bound
stc
ret
ret
ljmp
aad
test
hlt
mov
ljmp
push
jno
push
mov
mov
leave
out
xor
popa
adc
negl
arpl
mov
xchg
jnp
mov
pop
loopne
in
xor
lret
cltd
mov
push
popf
fwait
cmpl
movsb
adc
xorl
and
jmp
movsl
ss
cmc
stos
icebp
mov
sbb
pop
mov
or
sub
push
jb
int
or
mov
lret
mov
xchg
sub
mov
add
push
jl
aas
lret
aam
data16
cmp
mov
and
sub
mov
adc
ret
inc
mov
test
inc
scas
jbe
dec
inc
je
imul
lret
push
add
fisubrl
mov
cmpsb
ficompl
sub
in
and
cmp
pop
or
cmp
xor
sbb
push
mov
testl
cld
xor
cmp
xchg
or
jne
cmp
outsb
xor
add
cli
push
lock
call
popl
jmp
shlb
jecxz
jmp
push
hlt
pop
sbb
pushf
shrl
in
fisttps
cmp
fnstenv
cmp
out
aad
mov
test
inc
cmp
dec
jbe
insb
push
fnsave
fisubl
lret
or
pop
jecxz
xchg
mov
mov
std
xor
xor
and
shr
lds
fwait
and
sub
sbb
xlat
dec
fwait
int
push
je
ret
xor
loop
pop
push
into
imul
cmp
mov
loop
jp
sub
in
push
cmp
fstp
adc
mov
inc
mov
mov
lret
int3
xor
pop
xor
xlat
es
fidivrs
lods
cmpsb
add
and
cmp
pop
inc
pop
push
adc
pop
inc
outsl
adc
out
in
xor
leave
sub
cmpsl
lods
dec
orb
cwtl
and
jb
sbb
out
scas
in
js
jp
fstpl
inc
repnz
cmpsl
dec
ss
mov
mov
cmpsb
cwtl
mov
dec
jmp
mov
mov
push
mov
mov
pop
mov
testl
adc
inc
fsubrs
into
je
lock
andb
test
in
sbb
stc
xor
sub
dec
xchg
data16
adc
push
ffreep
cmpsb
fidivrs
xor
xor
mov
call
xor
mov
jmp
pop
insl
mov
mov
sub
lock
mov
jl
push
jns
xor
ret
dec
iret
jg
lret
mov
adc
cmp
push
insb
fiadds
imul
roll
js
int
div
hlt
pusha
lea
out
jnp
test
inc
mov
cmp
xchg
jnp
and
test
mov
inc
loope
loopne
test
mov
es
faddp
pop
inc
pop
sub
divb
outsb
stc
push
stmxcsr
inc
addr16
push
push
xor
and
push
cmpsl
ficoml
into
xorl
mov
fucomp
mov
jne
int3
sbb
pop
hlt
push
sbb
lahf
add
jne
mov
or
leave
pop
sbb
mov
imul
push
xchg
mov
sar
stc
mov
jecxz
xor
aaa
cmp
fidivs
fstps
data16
mov
dec
mov
das
add
and
in
push
inc
push
cmpb
add
call
adc
insb
mov
iret
dec
ljmp
add
ds
dec
xchg
inc
mov
push
popf
cli
pop
or
pop
xchg
inc
cmpsl
adc
movb
add
cmpsb
ret
pop
xor
or
xor
ret
loopne
mov
movsl
fcmovb
sti
cmp
out
jp
jle
push
hlt
loop
xor
xchg
inc
cli
fadds
sbb
icebp
mov
in
dec
fisubrs
sbb
orl
add
xchg
movsl
jl
fstps
notl
imull
lea
rcr
stc
pop
in
adc
inc
xchg
and
aas
lcall
xchg
fwait
inc
jge
pushf
insl
rcll
aam
lea
cmp
push
call
inc
or
or
cmp
or
xor
sbb
fidivl
xchg
loopne
lea
out
sub
out
and
jne
jmp
clc
data16
add
js
inc
cmpl
mov
push
ja
andb
fs
sbb
add
test
sub
sub
and
rorb
mov
sbb
or
movsb
sub
dec
cmp
xchg
mov
adc
xor
sub
or
xor
push
js
jne
inc
mov
rclb
out
and
and
sub
pop
shrb
lret
es
lret
and
int
add
mov
sbb
stos
fcmove
mov
in
or
leave
mov
sub
hlt
ljmp
dec
ja
sub
jne
fldl
out
sbb
lods
jecxz
xchg
inc
xor
out
lret
xchg
add
xor
inc
mov
aaa
mov
add
sahf
out
mov
movsl
aam
out
adc
nop
cs
sub
repz
out
pop
cmpsl
push
mov
jle
inc
ja
and
sub
dec
add
adc
int
js
xor
xor
fimuls
fsubs
outsb
popa
push
or
dec
push
pop
push
or
dec
sub
das
call
fldl
dec
mov
test
add
pop
lret
out
and
rorb
pop
push
and
into
out
cmp
loope
loop
into
dec
xor
mov
sbb
jno
inc
loop
push
iret
jo
outsl
push
cmpsl
push
and
jmp
push
push
and
sbb
or
lea
jnp
or
or
pusha
xor
pop
rorl
lret
int
xor
or
dec
cwtl
or
out
repz
popf
lret
lcall
fcmove
insb
cmp
add
test
fidivs
mov
scas
in
push
cmpsl
sbb
jnp
adc
add
lds
adcb
mov
pop
sub
adc
fcoml
das
xchg
mov
mov
daa
mov
adc
mov
rcll
add
cmpsb
notb
inc
sbb
xor
xor
xchg
in
and
mov
sbb
cmp
es
jno
andb
add
adc
fmul
push
ds
rcll
cli
xchg
pop
clc
adc
push
xchg
mov
push
add
pop
push
scas
jae
mov
add
or
movzwl
adc
pop
out
push
pop
fcoml
jg
aad
cmp
clc
push
jns
or
xchg
push
mov
sub
outsb
lds
dec
add
aad
mov
jo
jo
sbb
in
daa
mov
inc
dec
shrb
cli
xchg
aas
inc
jge
sub
jne
scas
sub
inc
pop
out
mov
jns
pop
inc
rcrl
pusha
mov
or
add
jno
nop
add
or
stc
push
cmc
enter
sub
cmc
lock
pop
mov
mov
outsl
les
cltd
adc
push
sarl
adc
mov
icebp
xchg
mulb
fcoml
stos
rclb
mov
cmp
leave
xorb
imull
add
scas
jo
push
add
inc
pop
sbb
mov
adc
int3
or
leave
leave
mov
cltd
mov
aad
xlat
sbb
pusha
lret
jge
cmp
loope
pop
cwtl
addr16
gs
fidivrl
inc
cmc
loopne
sub
lcall
sbb
lock
loope
aas
imul
cltd
adc
cmpl
dec
leave
mov
dec
je
cmpsl
fld
mov
adc
xchg
mov
pop
push
adc
pushf
lcall
cld
ljmp
enter
sub
icebp
sbb
shrb
test
and
and
scas
xor
je
ret
push
sbb
inc
adc
adc
mov
lret
or
sub
xchg
jo
cwtl
add
xlat
test
rolb
gs
nop
fidivrl
and
stos
push
and
xchg
mov
dec
mov
xchg
push
mov
fstps
xchg
push
popf
mov
pop
pop
xchg
scas
inc
jecxz
mov
cmp
mov
je
shrl
sti
pop
jmp
movsb
xchg
xchg
out
mov
aas
inc
js
iret
sbb
dec
xchg
cmp
test
xchg
jae
pop
stc
cmc
cmpl
xchg
dec
and
lods
xchg
and
shrb
push
lcall
inc
cld
jbe
xorb
sarb
aaa
orb
fucomp
lds
add
adc
jge
jo
xchg
pop
mov
adc
cmp
mov
add
loop
sub
lods
mov
pusha
pop
sub
mov
sbb
cmp
flds
jae
or
es
jmp
xchg
lods
bound
or
xchg
enter
cli
push
inc
lcall
cmpsl
idivb
mov
aam
rolb
sbb
push
mov
in
sbb
addr16
and
add
test
out
xor
jmp
jbe
shl
incb
out
dec
nop
shrb
xor
loope
xchg
push
pop
lret
dec
xchg
mov
les
xchg
sbb
inc
cltd
sub
jp
std
sbb
push
and
xor
cmp
loope
cmpsl
or
nop
jle
stos
movb
psubusb
dec
cmpsb
cmc
adc
jp
xor
fcoms
mov
add
mov
jp
inc
push
mov
addb
cmpsl
cmp
adc
loope
arpl
enter
add
pop
dec
pop
adc
inc
filds
push
loop
ret
sbb
adc
in
adc
mov
mov
fldpi
inc
pop
inc
mov
mov
inc
mov
inc
fs
insl
xchg
xchg
subl
outsb
add
sub
cmp
sub
add
or
cli
push
aad
inc
mov
mov
fs
imul
int3
insb
jnp
stos
stc
iret
fwait
mov
aas
or
push
aam
bound
es
xchg
lret
sbb
sahf
add
inc
daa
call
bound
daa
fstl
hlt
add
fadds
mov
jne
roll
aaa
add
mov
xchg
xchg
push
sub
stos
cmp
jo
or
mov
fcmovnbe
adc
ja
ljmp
sbb
mov
adcb
std
mov
adc
sub
das
adc
stc
sbbl
adc
js
mov
sub
movsb
xor
leave
push
mov
mov
insl
lods
adc
dec
dec
inc
jmp
push
dec
pusha
sti
data16
mov
dec
pop
fistps
mov
clc
jne
pop
mov
xchg
cmc
xchg
js
jle
inc
xor
pop
mov
xchg
call
hlt
xor
lret
das
push
or
jnp
hlt
test
in
inc
xchg
sbb
ljmp
out
pop
and
loopne
inc
mov
aam
jle
jp
and
imul
inc
mov
xchg
jecxz
sub
dec
aad
mov
or
fists
rorb
test
and
mov
sbb
xchg
sub
adc
xor
cmc
push
push
xchg
adc
jae
iret
test
sbb
adc
cmpb
fmull
mov
inc
cwtl
mov
addb
or
adc
sub
in
xchg
inc
pop
cmp
mov
imul
stos
ljmp
movsl
div
lahf
and
jle
fwait
loop
fs
and
repnz
mov
movswl
sbb
dec
cltd
pop
adc
lds
or
cwtl
adc
es
dec
cli
xchg
dec
out
sbb
lock
and
fmull
lret
nop
sub
push
mov
ja
inc
bound
mov
cmp
orl
mov
leave
sbb
fcoml
mov
scas
lcall
jge
cmp
test
cmovg
mov
adc
faddl
add
lret
or
mov
pop
sbbl
adc
mov
incl
pop
and
shr
push
add
push
outsl
mov
fdivl
inc
in
rcrb
adc
adc
lods
lea
cmp
cmp
and
cld
ret
aad
push
cwtl
adc
sbb
and
ss
mov
cmpsb
push
stc
stos
and
out
out
jle
add
fidivl
or
mov
loopne
or
push
es
push
sahf
mov
mov
sub
inc
add
in
mov
jae
jb
cmpsb
div
mov
inc
push
push
jp
loope
push
pop
pop
xlat
pushf
bound
push
ljmp
mov
ljmp
mov
mov
movsl
adc
add
xchg
fstl
gs
fists
mov
cmp
scas
mov
lods
addr16
dec
or
js
sbb
pop
lods
ja
mov
sub
add
call
out
lds
mov
and
pop
push
sbb
and
sbb
cmc
mov
daa
incl
icebp
sti
lahf
inc
leave
jmp
test
mov
jno
and
xorb
xor
lcall
mov
jge
jle
repz
loop
loop
and
jo
fsts
loopne
cli
inc
out
ret
push
mov
dec
mov
cld
dec
mov
loopne
into
mov
cltd
mov
cwtl
lds
aas
test
jg
sub
sub
sahf
jl
xchg
xchg
pop
add
cmp
hlt
negl
sbb
and
fisttpll
out
cmc
xchg
jle
pop
push
fadd
mov
in
sub
sbb
and
into
pop
sarb
pop
sub
lahf
mov
fnstenv
dec
jecxz
ja
dec
mov
nop
jb
mov
mov
int3
sbb
aaa
pop
lret
sbb
dec
fsts
je
mov
pop
xlat
call
push
gs
test
popf
inc
dec
jmp
and
or
popf
repnz
les
push
adc
dec
sub
sarl
into
rcrb
or
inc
and
add
inc
mov
add
mov
cs
adc
stos
mov
mov
inc
xchg
pop
or
aam
jne
push
rorl
subl
xchg
insl
jbe
mov
out
pmuludq
sub
xor
mov
pop
in
repz
push
pop
adc
mov
mov
cmp
repz
out
and
daa
test
mov
push
repz
sub
push
aad
call
cmp
fstpl
sub
jnp
xchg
ja
and
or
xorb
xlat
out
test
or
mov
es
mov
push
cmp
fnstenv
fdivl
mov
sti
pop
sbb
movsb
and
ds
add
out
sub
scas
mov
in
inc
je
add
jecxz
sbb
cmp
mov
push
or
dec
or
or
jo
mov
add
cs
je
xchg
test
and
fcmovb
outsl
xchg
dec
dec
push
xchg
mov
add
push
mov
push
aaa
cmc
arpl
shrl
andb
pop
pushl
in
jno
call
mov
sti
mov
mov
dec
cli
lret
in
pop
mov
sbb
and
cld
loop
js
sub
sub
test
cmp
mov
scas
out
cmp
adc
int
mov
popa
mov
incb
stos
add
rorb
and
adc
imul
jne
rolb
add
push
push
stc
sbbl
inc
loope
movsb
scas
and
lcall
cli
jecxz
add
cmp
inc
std
ds
pop
fcmovb
mov
dec
mov
popf
lods
out
pushf
into
scas
xor
lahf
nop
stos
adcb
mov
push
xorb
xchg
aas
jle
ljmp
sbb
push
lcall
in
jp
lahf
in
push
inc
lods
jg
push
inc
push
ljmp
incb
pop
pop
jo
and
stos
push
in
cmpl
ljmp
cmp
sbb
add
xor
sbb
push
pop
jecxz
pop
divb
les
clc
hlt
sub
sbb
sbb
mov
dec
xchg
mov
xor
fwait
movsl
les
out
jl
sub
lahf
mov
shll
pop
push
pusha
adc
call
jg
mov
lret
cmpsl
or
or
and
push
mov
jmp
std
sbbb
cmp
nop
fsubl
test
popf
xchg
arpl
xlat
cld
jl
out
insl
jl
int3
fimuls
pop
adc
mov
rolb
dec
jo
mov
mov
sbb
dec
adc
xchg
jp
add
in
xor
decb
adc
ss
stos
mov
cs
or
inc
scas
lock
adc
add
popa
mov
fwait
out
pop
ret
fwait
arpl
fsubr
push
aaa
or
arpl
and
lods
mov
sbb
mov
call
bound
faddl
push
push
inc
ja
lret
stos
sbbl
inc
adcl
xchg
sbb
or
gs
mov
or
jo
xor
sbb
or
mov
and
jae
dec
cmpb
popa
mov
dec
pop
daa
dec
cmp
and
lods
pushf
loop
cmp
lea
mov
sar
cmp
mov
cmp
std
xchg
xchg
int
out
test
and
sub
clc
lock
inc
add
mov
sbb
jno
gs
push
xlat
jnp
push
scas
int3
xchg
fcomps
adc
fisubs
out
jb
jno
fldt
flds
loop
add
cmp
mov
daa
push
mov
xor
mov
adc
and
add
cmpsb
pushf
lret
cmp
inc
pop
jge
fcompl
in
cmp
inc
mov
shlb
dec
aad
inc
inc
cmp
enter
dec
mov
xor
dec
stc
or
push
loopne
add
and
outsb
mov
push
mov
lods
inc
scas
shl
cmp
mov
add
push
scas
jae
popa
not
fisubs
and
adc
lret
stos
xchg
sbb
in
adc
imul
jne
stos
out
pop
xchg
fs
mov
loop
xchg
outsb
adc
jns
cmp
hlt
jge
xor
xchg
fcmovnu
push
jg
shlb
adc
pop
or
push
out
lods
sub
mov
adc
push
jg
sbb
pop
pushf
jl
lcall
cs
adc
mov
add
clc
sbb
scas
fs
movsl
xchg
lret
or
dec
movsb
push
testb
sub
xor
cmp
test
ficoms
fnstsw
pop
and
arpl
lods
xor
and
pop
mov
sub
mov
push
xchg
shr
xor
in
cmp
lahf
fsubl
sbb
add
pusha
decl
or
ss
das
xor
cmpsl
dec
in
dec
imul
cmpsl
iret
roll
bound
insb
pop
mov
test
inc
daa
addr16
fcmovb
and
inc
or
add
fyl2x
sahf
inc
cwtl
cmpb
push
cmpsl
daa
dec
sub
ret
push
adc
or
adc
daa
rorl
fwait
jmp
xchg
mov
push
dec
mov
mov
xor
sti
ja
lahf
lods
jge
inc
inc
mov
nop
fsubs
mov
fadds
xor
loope
hlt
mov
or
ss
enter
mov
mov
cmp
xchg
dec
lahf
mov
cmpsl
pavgb
gs
xchg
jb
test
and
adc
push
cld
sub
fs
cmp
mov
jmp
adc
sub
subb
imul
sub
stc
pop
xor
inc
in
mov
ds
mov
mov
sbb
fiaddl
fisubrs
lods
mov
xor
jp
jge
mov
lds
xor
mov
mov
dec
xor
push
add
push
out
repz
popa
into
adc
mov
repnz
xchg
aaa
push
xchg
pusha
or
and
incl
lahf
mov
ds
cmc
cmp
add
mov
enter
cmovle
adcb
adcl
les
test
inc
int
and
xchg
stos
jge
adc
sti
repnz
repnz
mov
add
jo
dec
jecxz
and
push
lds
cmp
out
fistpl
mov
cmp
push
mov
or
push
sbb
cmp
sub
fs
ja
mov
ds
sbb
and
push
sub
cwtl
pop
mov
sbb
mov
in
outsb
ljmp
and
pop
pushf
push
divb
jmp
in
pop
aad
sti
cmp
cmp
sbb
fdivl
xchg
mov
lock
mov
cmp
push
xchg
push
push
stc
adc
or
aam
pop
cltd
or
pop
jo
mulb
and
pop
pop
and
adc
repz
into
sub
lea
fistpll
outsl
pop
sbbb
mov
test
stos
int3
iret
jno
pop
aaa
inc
mulb
push
mov
lods
cmp
mov
stos
inc
adc
sub
call
into
mov
xor
pop
dec
scas
mov
push
jl
mov
mov
mov
xor
jae
notl
aaa
add
leave
popa
and
test
jo
jle
ss
call
add
xchg
sbb
das
jae
or
cs
mov
jae
in
jb
aas
mov
xchg
xchg
cmovbe
and
repnz
fnstcw
or
loop
xchg
add
push
out
xchg
pop
xchg
sbb
scas
and
adc
js
adc
arpl
fs
in
hlt
loop
js
mov
fldpi
xor
add
lahf
dec
xor
pop
pop
fidivrs
xor
xor
push
jae
mov
and
stc
icebp
std
shlb
cltd
xchg
in
sbb
dec
mov
pushf
jne
pop
aam
cli
test
inc
mov
jno
lret
ljmp
pushf
jmp
xchg
subl
lret
imul
cmp
lock
or
and
jo
stc
mov
push
xor
lcall
jno
loop
mov
adc
std
mov
mov
jb
jo
jns
clc
sbb
or
lock
imul
outsl
adc
mov
dec
test
and
adcb
ds
outsb
int3
fldt
cmpsb
cld
addr16
fldenv
jp
pop
mov
inc
fcoml
sbb
inc
fwait
lods
xchg
leave
fcomp
push
adc
imul
jge
and
push
jbe
leave
cmpsb
jge
sub
mov
ljmp
sub
xor
adc
in
cltd
and
mov
xor
leave
addb
sbb
adc
inc
pop
and
sub
add
stc
daa
ds
outsl
sti
or
lock
sub
or
enter
jnp
inc
inc
xor
outsb
clc
jmp
xchg
fwait
dec
pop
push
cli
mov
int3
fsubr
lods
jno
push
or
sbb
loope
dec
int
and
or
cmp
scas
adc
pop
mov
imul
mov
sub
in
pop
cld
bound
pushf
mov
ret
test
insl
push
or
xor
gs
mov
jb
xor
inc
mov
outsb
pop
ror
cmp
mov
in
imul
push
jne
inc
xchg
nop
sbb
fs
pop
pop
int
in
xor
dec
rclb
adc
push
cmpsl
and
pop
and
rclb
inc
sbb
test
push
shr
imulb
mov
xchg
jo
scas
loop
add
call
mov
call
stos
and
xchg
add
inc
cli
jo
fwait
mov
adcl
dec
scas
dec
jle
into
in
push
mov
add
mov
sbb
fwait
inc
mov
mov
gs
push
cmpsb
mov
jae
sbb
mov
xor
xor
push
xchg
fmul
rcr
ret
les
das
in
push
cmpsb
cld
and
int
loope
jno
leave
push
xchg
lret
adc
adc
cmp
scas
ret
testl
adc
inc
popa
cmp
hlt
inc
stos
rorl
icebp
ja
cmpsb
mov
into
stos
movsb
xor
cmpsb
push
pusha
dec
out
xchg
mov
pop
xor
out
repnz
loope
mov
mov
es
clc
pop
shlb
xor
push
pushf
xor
jge
or
es
mov
cmpb
aas
mov
push
out
fs
mov
pushf
dec
test
sti
in
push
insb
call
daa
negl
lea
cltd
popf
pop
cli
insl
xchg
pop
dec
insl
dec
fcoms
out
nop
test
mov
fs
mov
int3
mov
je
cld
cmc
ja
mov
je
mov
in
cwtl
jg
jmp
fstpt
adc
mov
xchg
mov
sarl
cmpsl
pop
fnstcw
xor
pop
or
xor
or
and
sub
rol
std
xchg
xor
test
enter
test
inc
ret
xchg
push
ss
or
inc
fstps
dec
fs
imulb
movsl
mov
push
mov
or
aam
pop
scas
aam
sub
or
cli
adc
mov
mov
movsb
xor
int
and
xchg
inc
pop
popf
mov
mov
mulb
lds
mov
std
sub
aad
sahf
jecxz
das
dec
sar
std
xor
in
dec
ja
push
jae
xchg
cld
dec
out
out
js
cmp
loope
movsb
push
iret
test
pop
sub
aaa
push
jo
push
jbe
push
test
sbb
push
or
xor
push
out
cmp
pop
adc
jl
add
and
addl
loopne
loop
orl
dec
aaa
insl
mov
cmp
decl
fstpl
sahf
jno
sub
pop
outsl
enter
movsb
inc
fdiv
push
pop
inc
mov
mov
jbe
aam
daa
lock
xchg
mov
cltd
jnp
mov
pop
or
xor
lods
clts
dec
les
mov
adc
neg
jb
cli
sbbb
gs
mov
xlat
mov
bound
sti
fistps
in
test
and
jp
shl
dec
loopne
fmuls
fdiv
ja
dec
rclb
xor
imul
orl
jmp
call
sub
cli
push
sti
clc
int3
pop
insl
stos
popa
jbe
and
cs
jl
push
xchg
imul
shlb
stos
jnp
xlat
push
jge
cmc
sub
xchg
leave
imul
mov
stos
pop
pop
hlt
inc
sbb
inc
shlb
stc
push
push
push
sbb
cld
out
cmpb
inc
rorl
dec
inc
ss
sar
adc
mov
aaa
sub
gs
nop
rorb
pop
andl
pop
sub
aad
int
movsb
jae
loope
movsl
mov
pop
and
scas
sub
jge
daa
ljmp
call
test
nop
add
xchg
test
loope
xchg
stos
cwtl
mov
add
imul
mov
les
mov
rolb
fdivrl
xor
cmpsb
push
fists
jno
adc
xchg
inc
xchg
cmp
outsl
inc
add
add
dec
mov
nop
pop
in
ret
fs
ret
xchg
or
add
sbb
xor
mov
mov
push
test
nop
ljmp
stc
push
int3
dec
bnd
aad
or
int3
outsl
je
pop
movsl
and
jmp
lea
mov
imul
testb
and
xor
push
arpl
push
mov
out
cltd
cwtl
mov
sti
in
jne
test
out
pop
adc
sbb
icebp
or
mov
xor
int3
popa
outsl
push
lock
jmp
cmp
jb
rolb
cwtl
xchg
push
movsl
inc
in
xchg
jmp
cmpsb
sbb
jno
jge
test
testl
dec
sub
pop
xchg
cmp
cmp
mov
mov
inc
lods
aam
xchg
mov
cmp
jle
jge
xchg
jmp
test
out
push
mov
xchg
jle
xorl
xchg
test
cmp
dec
insb
xor
mov
es
mov
and
dec
fwait
sub
sahf
hlt
mov
loop
aad
fcomps
cmp
inc
sub
lea
das
test
add
popa
push
jnp
jne
pop
dec
dec
inc
sbb
lahf
stos
jle
out
leave
lahf
das
inc
rcrb
xchg
jmp
fs
mov
loopne
loop
push
xchg
xor
clc
lahf
xchg
out
add
mov
mov
cwtl
shlb
xchg
lcallw
gs
pop
mov
and
or
stos
notb
xlat
test
icebp
outsl
dec
sub
or
sahf
pop
pop
addr16
lret
push
das
enter
scas
repnz
lods
cmp
bnd
jae
inc
hlt
bswap
and
stos
adc
cmp
push
dec
xor
mov
push
stos
inc
cltd
mov
in
push
mov
cmp
add
sbb
pop
popa
mov
lahf
hlt
pop
push
aas
movsl
lds
mov
fldl
iret
cmp
cmp
popa
push
mov
dec
sbb
xchg
push
pop
mov
mov
pop
dec
push
xchg
lods
and
push
rcl
clc
movsb
pop
mov
mov
test
cltd
adcb
mov
add
or
loop
lods
loopne
jp
mov
push
out
dec
rolb
std
arpl
xchg
push
stos
arpl
mov
or
popf
inc
xchg
push
cltd
and
scas
repnz
dec
popf
dec
movsb
xchg
imul
or
fsubl
movsl
xchg
mov
mov
ja
test
mov
lret
or
lea
sub
dec
movsl
jno
lret
mov
cmp
lret
lods
lret
xlat
icebp
xchg
loopne
js
enter
push
ja
adc
mov
xchg
adc
sub
cs
lret
jge
pop
cwtl
cltd
out
pop
shl
xchg
jp
push
pop
push
loop
sti
pop
jb
inc
xchg
xchg
ds
arpl
push
jb
mov
push
icebp
mov
rorl
jle
dec
dec
ror
pop
jl
pop
aad
push
mov
jl
stc
mov
xchg
stc
add
cwtl
mov
ja
push
xchg
cmp
aas
loop
jb
jbe,pn
add
sub
pop
lret
aas
les
push
lret
push
je
or
js
cmp
les
xchg
adc
rol
xchg
dec
xor
mov
mov
js
xchg
mov
stc
fdivrs
jns
lcall
cmpsl
sub
lock
xchg
cmpsl
pop
shrb
sub
das
jge
add
jl
inc
cmp
fnstsw
mov
test
js
pushl
push
sbb
sbb
and
xchg
enter
scas
fwait
gs
mov
loop
mov
mov
pushf
mov
add
adc
jp
stos
cmp
pop
or
or
cltd
mov
inc
adc
dec
leave
mov
hlt
mov
push
stos
xor
sub
jbe
leave
ds
movsl
outsl
les
movsb
jno
mov
xchg
add
add
dec
sub
sub
dec
adc
adc
pushf
je
inc
sbb
insl
sub
mov
ret
cmc
mov
lods
sbb
mov
pop
fisttpl
jb
outsl
stc
cmp
lds
fs
push
rclb
mov
les
ds
lods
bswap
sahf
inc
popa
pop
push
add
mov
adcl
or
mov
lea
in
sbb
push
xor
mov
jg
xchg
adc
loopne,pt
lret
mov
fdivrl
ja
jbe
fmull
xor
cmp
stos
into
pushf
xor
and
mov
push
xchg
add
jo
scas
icebp
or
mov
mov
repnz
pop
push
idivb
test
leave
and
aam
movsl
xchg
jbe
inc
mov
mov
push
adc
cmpsb
cltd
mov
or
dec
and
adc
out
pop
out
dec
movsl
dec
xor
pusha
jne
out
or
cmp
je
ja
in
cmp
mov
dec
pop
jo
rclb
cltd
mov
sti
shrl
loope
inc
push
stos
jo
movsl
out
push
xchg
enter
dec
mov
or
enter
push
leave
mov
jecxz
xor
lea
dec
outsb
mulb
mov
jns
pop
adc
and
or
fldenv
aam
fisubl
insb
sbb
mov
push
icebp
cmp
into
push
fs
int3
mov
pop
mov
xchg
sbb
stos
xchg
lds
es
pop
cmp
sbb
aaa
jae
mov
dec
imulb
xchg
pop
ds
fistpl
in
inc
push
jno
cmpsl
je
popa
mov
sbb
out
mov
mov
dec
cs
rcll
jecxz
ret
popa
nop
lods
push
bound
stos
jbe
inc
xchg
or
aam
jae
or
fdivrl
imul
clc
pop
pusha
shll
push
rcll
and
cmp
rcl
adc
imul
movsb
enter
int
dec
cmp
cmp
mov
mov
pop
jmp
mov
ljmp
pusha
dec
sub
bnd
sbb
jb
stos
cmp
test
cld
out
inc
lahf
jb
outsb
cs
cs
jl
add
loope
sub
cmc
shl
icebp
mov
aaa
sub
mov
dec
or
xrstor
and
lea
outsl
pop
mov
in
jmp
rorb
push
fdivrl
lahf
pop
mov
pop
mov
push
jmp
call
mov
ret
pop
mov
outsb
pop
push
repnz
push
add
cwtl
sub
call
shll
mov
inc
cmp
push
jle
insb
mov
jo
movsl
movsb
cld
jb
lcall
inc
mov
or
push
in
jo
call
cltd
fstl
fimull
fimuls
dec
jmp
loope
inc
fmul
or
int3
adc
jl
mov
in
jns
ret
sub
lahf
rcrl
sbb
lret
sbb
xchg
psrad
ljmp
testb
aam
pop
stos
pusha
or
mov
xchg
sti
and
mov
movsb
rcrb
imul
mov
push
lret
pop
adc
bound
inc
outsb
push
xchg
fsubrl
push
das
pop
ds
mov
xchg
mov
fcomps
pop
sbb
es
xor
ss
pop
sbb
shlb
roll
imull
cmp
inc
int
mov
jge
or
push
push
pushf
add
pop
shll
shll
nop
clc
mov
les
pushf
in
or
add
fisttpl
cltd
test
sub
sbb
ret
xlat
mov
fsubs
notl
out
aad
add
int3
int3
mov
or
mov
bound
bound
cmp
xchg
bnd
mov
adc
imul
jle
inc
fwait
cld
arpl
mov
jle
pop
outsl
or
cmpl
dec
mov
gs
arpl
call
or
mov
lret
stos
pusha
sbb
lock
cmp
sub
dec
imul
jg
pop
push
std
dec
mov
les
sub
push
dec
dec
in
xchg
jnp
daa
cmp
and
sbb
mov
leave
popa
add
xchg
dec
xlat
fwait
js
outsl
cmp
stos
sbb
data16
pop
and
fsubr
shr
rorb
inc
sub
dec
jnp
sub
and
adc
mov
lods
or
sub
and
add
xor
jmp
sbb
pop
mov
fstl
fwait
dec
clc
push
es
sub
push
pusha
lea
xor
pusha
loopne
xchg
fucom
lcall
adc
ja
andb
das
sbb
mov
xchg
or
stos
or
push
jo
dec
lods
push
sti
in
stos
int3
mov
mov
jb
cmp
in
in
xor
addr16
xor
fildll
in
cli
mov
sahf
std
add
sti
imul
adc
jne
xchg
js
in
xchg
jbe
test
or
dec
mov
sahf
cwtl
xorb
arpl
enter
repnz
pop
icebp
xchg
mov
rorl
int
lods
inc
dec
inc
or
adc
mov
out
or
push
or
nop
sbb
out
mov
inc
xlat
mov
test
sub
lret
es
xor
xchg
pusha
jo
xchg
in
mov
push
cmpsb
je
cmp
push
mov
shrl
jb
cltd
stos
push
rol
add
repz
push
ret
mov
dec
dec
mov
out
je
or
rorb
pushf
in
mov
loopne
xchg
pop
lock
nop
jg
ljmp
divl
mov
jo
cmp
fwait
out
call
cwtl
sub
ret
mov
adc
xchg
cmp
inc
subb
pop
xor
lods
movsb
dec
adc
dec
and
sub
mov
addr16
push
jge
addr16
xor
fimull
loop
ret
int
mov
xchg
test
mov
and
cmp
test
push
mov
cmp
cltd
pop
dec
orl
sbb
rorb
push
sbb
adc
pop
add
cmc
sti
pop
mov
mov
pop
repz
xor
outsb
out
out
sub
mov
mov
aas
add
sub
xor
int
xor
int3
pop
mov
adc
mov
loopne
add
xor
pop
mov
jecxz
add
hlt
lcall
pop
xchg
test
sbb
push
shrl
sti
stos
or
lds
xchg
daa
jge
cmpsl
add
in
mov
imul
cmp
xlat
enter
xlat
sub
add
xchg
sub
xchg
lods
pop
shlb
dec
je
xor
or
mov
cmp
sbb
pushf
adc
fidivrl
push
fs
out
in
clc
mov
sub
jp
push
pop
cmp
mov
ss
dec
xor
and
adc
xor
je
rcr
lret
dec
loop
shlb
lock
dec
insb
inc
fistl
test
pop
jmp
sub
add
xchg
rol
jl
imul
sub
mov
xchg
pushf
mov
xchg
adc
leave
roll
es
inc
add
lods
mov
sahf
mov
dec
cmpsb
dec
fwait
jp
fs
popf
push
adc
mov
lret
outsb
sti
inc
xchg
jbe
xchg
adc
and
add
dec
mov
in
aas
cwtl
jecxz
mov
loopne
or
or
jg
outsb
adc
add
mov
jbe
mov
das
mov
adc
fs
subw
cmpsb
lock
push
mov
push
icebp
roll
pop
lods
mov
xchg
xor
clc
cmp
push
scas
lds
or
mov
push
sahf
in
lods
or
int3
jo
inc
push
xchg
xchg
aam
push
mov
adc
sub
test
daa
xlat
out
xchg
ret
adc
cmpb
cmc
dec
cmpb
mov
in
cld
mov
or
dec
cld
adc
mov
and
cmc
add
sbb
sbb
ss
dec
jae
loopne
in
pusha
xchg
dec
rorl
jb
das
fcmovu
sub
mov
mov
insl
mov
aam
mov
inc
loope
mov
inc
nop
fimull
and
pushf
cmpb
fildl
pop
dec
pusha
fdivs
pop
jle
and
aad
inc
stc
int3
mov
test
adc
lret
and
xchg
pop
ret
pop
in
test
jnp
xchg
cmpsl
or
fsubr
sub
nop
mov
addr16
pop
inc
xchg
mov
out
fwait
inc
fadds
mov
pusha
outsb
mov
fcoms
pcmpgtw
popf
lret
sahf
sbb
pop
shlb
aam
in
xor
and
cmp
enter
fisttpll
pushl
ret
jnp
mov
push
cmp
pop
sbb
popa
stc
pop
enter
adc
test
cmp
dec
dec
lock
push
pop
or
cmp
ja
dec
adcl
cmp
dec
loope
aam
movsb
mov
push
mov
arpl
lods
mov
rorl
and
pop
neg
xchg
add
cwtl
dec
and
or
adc
cltd
inc
dec
add
xor
push
or
mov
and
jb
stc
xchg
mov
scas
icebp
sub
xchg
mov
inc
ds
sbb
jo
cmpb
mov
repz
xor
cmc
mov
fists
cmpsb
repnz
test
nop
loopne
or
mov
js
push
push
mov
lret
xor
fmuls
xor
or
daa
dec
push
and
in
mov
xchg
push
cmc
jae
push
dec
pop
pop
jnp
dec
int3
out
ret
cld
sub
xorl
mov
scas
test
sarb
roll
pusha
mov
andl
je
xor
aas
or
and
xchg
xchg
scas
nop
push
das
subl
jp
aaa
nop
inc
test
mov
fnstcw
insl
push
roll
imul
mov
ror
loop
mov
or
xor
pop
popa
cmpl
dec
test
mov
inc
sbb
daa
inc
out
clc
push
push
notl
loope
xor
or
mov
pop
orl
data16
scas
sbb
cmp
ret
pop
shlb
lcall
ltr
pushf
shr
add
loopne
stos
adc
jo
dec
sbb
adc
dec
and
lock
fcmovu
adc
in
pop
outsb
movsl
negb
lret
cmp
rclb
fsubp
mov
and
pusha
jbe
aas
rolb
test
gs
xchg
div
sbb
movsl
sti
mov
inc
cmp
and
mov
inc
mov
icebp
or
and
pop
inc
and
push
xchg
aad
jecxz
xor
jb
mov
sub
out
sti
out
xor
adc
dec
psubb
xchg
adc
cmp
adcb
push
pusha
mov
jae
cmpsl
and
sbb
jecxz
xor
insb
fimuls
cmp
fnstsw
ret
js
flds
mov
xchg
orb
dec
jp
adcl
dec
test
cmc
movsb
aaa
xchg
push
test
stos
mov
or
jb
cmp
push
fcomip
andb
shll
pop
jne
sahf
nop
test
daa
aam
punpcklbw
inc
push
js
divl
push
and
lods
jae
adc
ss
fadd
sub
call
dec
mov
sub
cmp
jge
xchg
dec
cmc
jmp
cmp
xorl
mov
les
fst
cmpsl
stos
lret
movsl
xchg
cmpsl
in
js
and
cmpsb
test
jmp
sbb
xchg
dec
inc
std
adcl
cmp
inc
test
scas
testb
push
push
mov
fneni(8087
push
pop
mov
xor
mov
test
and
stos
dec
jno
sub
out
je
cmp
sbb
jle
fcmovne
pop
xor
icebp
clc
popa
nop
mov
imul
or
addl
scas
mov
lds
sub
fs
xor
mov
adc
stos
push
mov
or
addb
scas
pushf
aad
sub
cmp
or
mov
mov
mov
mov
je
arpl
mov
outsb
sbb
lret
mov
insb
sbb
jbe
stc
push
popf
xchg
push
insl
insb
pop
ja
xlat
sbb
iret
loopne
push
std
aam
scas
sti
sti
rcrb
jb
lea
lret
fcomps
mov
ror
and
sbb
inc
or
sahf
push
or
cmova
push
js
adc
test
in
push
mov
push
lock
xchg
out
inc
imul
push
inc
gs
dec
push
loop
lea
insl
add
sub
ret
push
xchg
shrl
int
push
xchg
in
or
ss
popf
jno
xchg
inc
mov
aas
xchg
or
inc
repz
jb
test
mov
jbe
jg
inc
test
jge
inc
sbb
mov
cmp
pushf
fisubrs
daa
cld
sub
movsb
mulb
push
pusha
insl
enter
mov
sub
ret
jmp
pop
jb
xor
inc
into
push
push
jb
cmp
dec
sbb
movsl
lret
cmp
sub
bound
push
mov
stc
pop
cmc
mov
scas
mov
push
std
inc
and
outsl
push
jbe
pop
jl
mov
jb
mov
cmp
adc
lcall
pop
pop
mov
les
sbb
jp
nop
insl
jle
or
aas
mov
mov
mov
dec
orl
push
cmp
xchg
pushf
fucomi
mov
mov
inc
fadds
cmpsl
push
inc
inc
xor
jae
ret
or
mov
fdiv
xlat
pusha
leave
decb
in
js
fwait
pop
ffreep
cmpsl
int3
into
push
scas
int
idivb
inc
out
add
insl
xchg
and
xor
aaa
into
ljmp
mov
ficompl
ret
pop
fdivrp
push
imul
mov
mov
enter
popa
xor
jnp
push
mov
adc
cmp
xchg
test
rorl
out
push
or
pop
mov
call
lods
inc
movsb
pop
in
push
push
mov
jbe
in
mov
pusha
fsubrl
sub
scas
outsb
or
int
xor
jmp
push
loop
dec
xor
hlt
add
push
int
in
dec
xchg
int
inc
sub
int
xor
data16
xor
sub
loop
fcmovbe
dec
jg
fstp
pushf
rclb
ffree
or
xor
mov
cmp
mov
popf
pop
or
mov
sahf
arpl
mov
and
aad
icebp
ja
testb
jmp
lods
pop
cmp
sub
mov
outsb
iret
xlat
loope
les
adc
out
and
or
dec
iret
pop
mov
inc
lahf
xorb
push
loop
cmpsl
mov
xchg
fsubrs
dec
bound
clc
mov
hlt
push
xchg
mov
cmpsb
lcall
movsb
int
jp
ljmp
repz
loop
js
scas
mov
in
xchg
fstpl
insl
mov
mov
fwait
adc
mov
rcrb
lock
imul
push
cmp
popa
pop
jmp
int3
jns
sbb
mov
jp
jecxz
aas
xor
pushf
movsl
sbb
test
fsubr
lret
stc
xor
fwait
dec
mov
dec
dec
adc
popa
fildl
insb
fimuls
push
shrb
dec
mov
inc
cwtl
xor
dec
sbb
imul
xor
jno
fwait
xor
pop
push
mov
es
rorb
adc
mov
pop
xchg
add
movsl
add
mov
addr16
lahf
mov
pusha
or
repnz
mov
xor
lods
je
idivl
jne
fs
cmp
pop
dec
jp
std
pop
mov
rolb
dec
mov
shll
mov
jns
stos
sub
dec
sub
into
movsb
xor
pop
xchg
mov
and
in
push
mov
mov
pushf
imul
adc
mov
mov
enter
xor
push
out
nop
sub
inc
rorl
cmp
in
inc
int
scas
mulb
in
stc
xor
lret
sbb
pop
jl
xor
pop
pusha
jo
sub
cs
movsb
aas
and
mov
cmp
xor
or
push
scas
lock
loopne
lahf
rcrl
enter
sub
xchg
mov
add
and
scas
insl
mov
orl
mov
mov
ja
out
pop
stos
rorl
popf
sbb
sub
push
sti
adc
cmpsb
dec
or
adcb
repnz
pop
mov
das
push
test
and
outsl
or
fcomps
xor
mov
out
aam
imul
loope
xor
mov
lea
fstl
jo
movsl
and
popf
shll
adc
cmc
lret
push
mov
sahf
inc
cli
shr
outsl
rep
jg
sub
rcl
and
and
mov
adc
sbb
dec
outsb
mov
dec
repz
gs
push
and
out
std
fidivrl
adc
inc
or
stos
mov
add
shll
outsb
mov
dec
cmpsl
push
pusha
shll
mov
movsb
xor
mov
pop
adc
xchg
orl
test
xor
jnp
adc
jns
push
push
test
sub
outsl
sbb
cmpsb
dec
xchg
xor
sub
aad
test
sbb
sbb
pop
into
bswap
cld
push
adc
mov
cmc
insb
mov
xor
arpl
push
mov
pop
inc
cs
mov
pop
popa
pop
sub
mov
xchg
jnp
aam
pushw
mov
cmpsb
idivl
xor
sbb
popf
out
mov
jne
cmpb
jne
inc
lret
jns
sbb
sbbb
sub
das
out
push
cmp
dec
push
xlat
inc
or
push
cmp
push
gs
ljmp
outsb
add
jl
jns
out
inc
adc
sub
ficoms
je
and
and
push
push
push
push
pop
clc
add
mov
fnsave
test
xchg
sub
dec
push
push
iret
mov
imul
sub
out
add
addr16
jns
sub
and
cmp
cmc
mov
mov
outsb
ljmp
and
scas
cli
dec
cmpsb
nop
std
or
test
pusha
sbb
push
outsl
jne
pop
sbb
dec
test
aaa
flds
pushf
fimull
sbb
push
repz
xor
pop
inc
leave
cmpsl
out
sahf
inc
iret
xor
cmp
cmp
jp
sbbb
sahf
pop
jb
scas
cmp
rorl
jg
adc
pop
mov
fs
mov
cmp
fidivs
inc
inc
cmp
mov
mov
adc
jl
insl
nop
movsb
jg
add
aas
cs
and
int
in
pop
insl
nop
add
pop
sbb
mov
inc
push
outsb
xorl
repnz
fsubr
sbb
out
sbb
mov
shr
lahf
dec
add
lock
sub
insl
cmp
lods
jne
or
das
xor
inc
xor
jnp
int
ljmp
aas
xor
mov
lcall
repnz
cmp
lcall
outsb
aam
pop
jne
jno
outsl
ds
scas
sbb
sub
cmp
or
aam
mov
ss
jmp
push
jnp,pn
and
mov
add
adc
inc
xchg
icebp
jmp
or
inc
cmp
mov
dec
arpl
ret
mulb
in
fnstenv
ljmp
or
inc
xcrypt-ctr
cmpsl
sbb
popa
rcrb
enter
out
enter
jecxz
add
xchg
das
sub
mov
in
mov
and
mov
jae
nop
xchg
jb
addr16
mov
movsl
push
fs
mov
xor
or
ficoml
lret
dec
xor
cmp
jno
and
insb
mov
sbb
movsb
add
xor
sub
cmc
mov
imul
add
test
insb
stc
dec
cmpsb
jne
rcll
das
icebp
xorb
mov
push
dec
sub
push
pop
push
call
cs
cmp
sbb
or
inc
inc
les
pop
ds
pushf
push
xchg
dec
inc
pushf
mov
stos
pop
jmp
inc
imul
loope
movsb
push
dec
mov
repz
push
test
cmp
scas
xchg
adc
repz
insl
int
scas
xchg
and
pop
push
mov
test
jmp
je
jae
fs
cmpl
mov
cwtl
aas
lea
mov
dec
cwtl
nop
push
testl
int
pop
stos
gs
push
add
sarl
push
xchg
lock
out
mov
mov
jle
out
xor
push
int3
or
imul
jbe
mov
test
rolb
jb
int
cmp
mov
cmp
mov
add
rcrl
sub
jne
and
mov
lods
rcrl
pop
push
movsl
sub
push
add
inc
call
sub
push
pop
testb
xchg
popa
mov
and
pop
dec
xor
arpl
cmpsl
jmp
in
arpl
xchg
cltd
sub
mov
loop
mov
lret
roll
push
push
loop
lock
lods
loop
mulb
lret
pop
fisubrl
jmp
fdivrp
inc
inc
mov
or
cmp
push
cmp
test
inc
xchg
pushf
xor
xchg
push
outsl
rcrb
add
push
in
add
mov
xchg
xchg
jno
mov
xor
dec
fbstp
and
xor
data16
jns
jmp
jns
aam
data16
push
pushf
jae
and
mov
fdivl
notb
and
push
cmp
mov
inc
cmpsl
pop
fidivs
and
sbb
dec
scas
adc
scas
loopne
arpl
mov
mov
aam
push
stc
cmp
movsb
and
rcl
fildl
xor
inc
cmp
adc
mov
pushf
addr16
mov
xor
leave
xor
test
call
pusha
add
sbb
mov
jb
push
stos
scas
incl
sub
sbbb
fidivrs
xor
cmp
inc
xor
hlt
mov
jle
add
test
das
dec
mov
pop
xor
sbb
out
insb
dec
dec
nop
cmpsb
lock
inc
inc
cmp
ret
and
nop
mov
add
sub
repz
sub
xchg
daa
mov
cmpl
dec
mov
xchg
xchg
inc
cmp
hlt
cmpl
jns
add
jne
xchg
gs
in
lret
inc
daa
mov
cmp
int
mov
cmc
xor
xchg
daa
sub
xchg
hlt
dec
xor
out
or
pushf
dec
out
sbb
cltd
dec
ror
fsubs
arpl
adc
jne
mov
data16
icebp
dec
cmpsl
lock
outsl
mov
mov
sahf
pusha
jbe
pop
push
or
mov
inc
arpl
jo
push
xor
mov
std
jmp
clc
pop
ja
sbb
inc
xchg
or
maskmovq
divl
push
mov
mov
stos
push
repnz
push
jmp
in
lock
in
add
pop
pop
in
adc
int
pop
js
mov
fiadds
cmc
adc
in
std
pop
push
jne
cs
cwtl
inc
jmp
mov
adc
jecxz
das
jge
in
xor
test
mov
mov
jle
out
xlat
mov
cli
jnp
pop
xor
xor
movsl
push
push
fisubs
pop
mov
sti
les
daa
xchg
popf
mov
out
test
cwtl
subb
mov
lahf
outsb
out
sbb
frstor
lds
jge
inc
mov
daa
mov
cmpsl
add
scas
add
cld
ret
jnp
cwtl
mov
cld
scas
shlb
inc
inc
lcall
pop
ds
repz
in
ds
sti
dec
pop
dec
lahf
pop
iret
mov
je
hlt
or
and
sbb
push
mov
sub
ja
mov
sub
sbb
shll
ds
add
std
push
dec
lods
sbb
lods
xchg
cmp
push
sbb
inc
sbb
loopne
sub
inc
dec
stos
pop
sti
lret
add
add
cltd
out
sbb
mov
dec
cwtl
cld
mov
out
add
lock
lock
push
push
xchg
dec
fldenv
or
xchg
sub
jl
xchg
fadds
fldenv
push
mov
std
inc
ret
rcll
mov
popa
pop
loop
jbe
andl
lret
dec
cwtl
test
xor
lds
push
rcr
pop
dec
sbb
call
xchg
add
add
lahf
cmp
js
mov
stc
je
dec
cmp
in
and
cmpsl
xchg
daa
mov
mov
xchg
jb
mov
clc
lds
movsb
jno
xlat
sub
mov
xchg
mov
pop
loopne
hlt
fstpl
xor
bound
rol
int3
sbb
xorb
cmp
inc
fildl
adc
fs
jbe
mov
pop
sbb
push
mov
shrl
jg
addb
or
fwait
mov
daa
adc
sbb
cmp
in
sub
popa
fists
mov
inc
push
push
sbb
dec
xchg
mov
sbb
add
and
push
mov
cs
mov
mov
arpl
mov
lods
push
push
jae
mov
jp
mov
add
cld
add
pop
sbb
cmp
jns
add
mov
xchg
outsb
dec
or
push
dec
sub
push
push
fsubp
mov
mov
loopne
gs
or
pusha
in
xchg
cltd
push
xorl
pop
scas
push
arpl
push
mov
testl
test
rol
sbb
popf
sbb
xchg
sub
jae
out
repnz
insl
mov
into
pop
push
inc
push
scas
lods
mov
xchg
lret
lea
sub
in
dec
mov
insl
fidivrs
data16
xchg
dec
imul
xchg
mov
ja
dec
jl
xchg
pop
adc
xrelease
stc
loop
ja
sub
and
and
pop
push
sub
xor
adcl
jnp
rcrl
std
cltd
cmp
jge
imul
pop
lods
call
push
enter
imul
sub
mov
mov
outsl
pushf
test
cmp
sti
enter
std
jmp
jecxz
xor
push
ja
loopne
mov
mov
mov
cs
fdivrs
cli
push
shl
fmull
mov
xchg
hlt
mov
insl
gs
popa
dec
inc
out
push
ss
mov
lret
mov
or
fimull
fldt
jg
push
mov
test
ljmp
adc
adc
stos
test
sti
mov
je
jne
aad
inc
jl
mov
xor
lods
and
imul
data16
or
push
hlt
aad
cmp
fistpll
lock
xor
enter
pop
jbe
jp
add
xorl
movsl
jecxz
in
test
fdivrp
mov
repz
xchg
jo
mov
adc
or
xchg
adc
mov
sbbb
out
fdivrs
cltd
nop
xor
loop
pop
jno
adc
xchg
jle
pop
movsb
sbbb
mov
stos
cwtl
ljmp
and
push
iret
insb
int3
cmp
mov
fs
jbe
mov
mov
cwtd
xchg
dec
dec
stc
outsb
mov
mov
adc
inc
sbb
imul
repz
mov
sbb
movsb
mov
sti
pop
shlb
rcr
ss
inc
inc
mov
shl
jp
fidivl
or
aad
mov
call
pop
out
mov
mov
call
into
int3
push
xor
bound
sub
push
push
divb
cmp
shr
mov
adc
add
sbb
mov
movsb
cwtl
or
jns
jns
inc
push
adc
inc
push
xchg
and
shr
out
cltd
dec
xchg
cmp
stos
shrb
scas
test
inc
mov
xchg
adc
cmp
call
sub
lcall
push
push
test
ret
imul
xchg
dec
or
scas
xor
in
sub
lds
mov
or
scas
inc
sbb
test
adc
jns
sbb
xor
subb
mov
adcl
hlt
scas
dec
pop
orb
cld
test
cmp
jmp
cmpsb
and
xor
push
xchg
xchg
aaa
jmp
pop
movsb
std
xor
jns
add
mov
sbb
and
xor
pop
and
aaa
lods
push
push
pop
mov
mov
aas
xchg
popf
int
cld
pop
mov
sbb
scas
lock
inc
adc
std
in
rolb
in
inc
rol
inc
xchg
jle
xlat
mov
fadds
sub
aad
inc
add
addr16
cmpsb
int
jae
adc
xchg
xlat
add
push
adc
push
paddusw
mov
or
inc
pop
icebp
rcrb
push
inc
pop
dec
lods
and
negb
in
sbb
xchg
fs
or
mov
lahf
jne
pop
sbb
arpl
cltd
stos
mov
cltd
in
fidivrs
adc
lods
pop
enter
sub
leave
xchg
insb
loope
and
test
jno
ds
leave
xchg
sarl
stc
push
enter
xrelease
les
ss
mov
leave
scas
mov
sbb
sbb
fs
jg
loopne
mov
clc
cld
int3
push
jle
adc
push
into
xchg
into
xor
out
dec
and
and
andl
imul
rcl
or
call
lea
insb
ja
push
push
outsb
sti
push
mov
outsb
push
jmp
pop
xchg
dec
xlat
lods
gs
cmp
inc
sub
arpl
cmc
mov
cmp
dec
jmp
aaa
pop
inc
and
mov
pop
cmp
jle
cwtl
mov
lea
shr
lret
xchg
adc
push
stc
adc
icebp
outsl
pop
ss
imul
xchg
movsb
test
adc
cmpsl
jmp
mov
les
xor
gs
in
mov
pop
lea
jno
dec
aam
dec
insl
sub
xor
pop
mov
push
fsubl
push
test
les
call
sbb
out
lock
lcall
or
daa
bound
call
or
jg
xor
arpl
pop
add
ljmp
daa
lock
int
fnstcw
mov
addr16
jp
popa
mov
sbb
jae
ret
jno
push
pusha
mov
mov
repnz
lods
inc
lock
in
mov
dec
iret
xchg
or
sbb
pushf
int3
fldt
sub
int3
fs
in
push
xchg
mov
popa
mov
sbb
xor
insb
jl
add
push
lock
jne
bound
repnz
scas
xchg
scas
cmc
push
and
fnclex
mov
addr16
push
dec
fwait
push
push
jb
mov
or
movsb
pop
outsb
bound
or
sbb
sbb
jle
std
push
xor
push
rcrb
daa
and
lods
sbb
add
adc
bound
adc
rclb
add
mov
repnz
xor
pushf
jns
mov
repz
inc
add
ja
mov
ficomps
cld
mov
aas
movsb
jmp
jl
stc
es
repz
rcrl
dec
loope
insl
sub
stos
ds
mov
lcall
xlat
mov
mov
pop
fs
pop
icebp
mov
insb
pop
lret
jnp
sbb
xchg
mov
testl
jmp
or
lods
test
sbb
fnstenv
mov
mov
je
mov
cmp
dec
popf
lock
xchg
les
sbb
and
mov
sbb
jmp
bound
insb
mov
mov
push
sbb
fdivrs
jecxz
adc
ja
cld
xchg
cld
jp
xlat
fptan
and
xor
xchg
cltd
mov
cmpsl
divl
adc
mov
xor
lock
lods
lock
sbb
xor
bound
sbb
aaa
sub
andb
mov
mov
jnp
xchg
int3
js
mov
testl
test
iret
mov
das
std
push
jae
gs
es
pop
in
loope
inc
mov
mov
lds
jecxz
xlat
bound
jl
popa
xor
lea
clc
mov
push
das
mov
mov
pop
lock
shll
jl
mov
push
es
pop
add
jmp
cwtl
mov
fdivrl
mov
ljmp
shrl
sbb
lea
add
lcall
push
sub
mov
rol
push
cmpsb
cs
sbb
sub
das
or
mov
xor
popa
aad
mov
mov
adc
mov
pop
adc
jge
pop
mov
movzbl
leave
cld
je
in
sub
pop
lods
test
rorb
fimull
dec
lds
js
mov
inc
adc
adc
mov
cmp
jnp
stc
ljmp
xchg
mov
and
std
pushf
inc
jp
sahf
mov
cmp
data16
mov
xchg
adc
fstps
xor
and
daa
fwait
push
cmp
sbb
inc
in
out
cmp
lods
xor
and
enter
fistl
jo
mov
ljmpw
jmp
pop
lret
sarl
dec
test
mov
sub
pop
inc
push
insl
incl
ret
jl
jb
pop
addl
xchg
lret
add
sbb
pop
and
mov
ret
jo
lret
pop
shlb
arpl
dec
adc
sahf
lods
xor
inc
mov
test
test
cmp
sbb
in
sub
vmovhpd
inc
test
pop
pop
and
cmpsl
push
mov
push
mov
das
sbbb
les
mov
cmp
push
fsubr
test
hlt
adc
sub
je
push
cmp
mov
cmp
mov
dec
icebp
mov
or
cmp
repnz
mov
enter
mov
dec
into
negl
out
ja
hlt
push
push
pop
ret
arpl
rcrb
jbe
jle
dec
cmp
xchg
mov
cmp
ja
sbb
inc
lods
jl
add
cmp
lea
mov
fdivrs
adcl
mov
repz
in
shl
fdivl
sbb
lods
cmp
addr16
inc
mov
mov
jnp
xchg
pop
pop
test
push
jae
rorb
xor
jmp
in
and
pop
mov
insl
and
mov
loopne
adc
inc
mov
pop
pushf
daa
mov
out
sti
push
cmp
xchg
sti
mov
cmpsb
push
adc
pusha
xchg
push
sbb
mov
insl
cmc
push
loope
je
mov
jno
test
dec
arpl
inc
ret
xlat
mov
push
mov
sarl
clc
bound
movsl
stc
hlt
in
fdivrl
xor
xchg
jecxz
and
mov
fsubrs
subl
fwait
push
xor
lret
mov
jmp
test
and
sbb
das
lret
mov
ret
stos
bound
mov
xor
cmpsl
hlt
frstor
filds
add
dec
je
sub
push
cmpsl
cmp
or
rcl
fwait
and
sub
dec
outsl
and
pop
pop
add
aad
push
in
ss
mov
gs
jl
pusha
jb
and
data16
jns
in
push
data16
pop
jns
mov
lcall
lahf
jbe
pop
add
sub
pushf
sti
pop
push
add
sub
cmp
sub
mov
and
jno
das
lret
cmp
loopne
mov
push
jns
addr16
lahf
inc
xor
sbb
dec
cmp
or
sbb
jmp
rcl
int
sbb
mov
faddl
in
mov
sub
aas
in
mulb
xchg
jns
sti
movsb
sbb
call
mov
insl
adc
adc
sub
dec
xchg
cmc
pushf
mov
cmp
jae
sti
leave
mov
inc
mov
icebp
rcll
movsb
out
mov
or
lcall
outsl
sbb
ljmp
shr
fwait
roll
bnd
popa
mov
je
les
xor
inc
out
cmc
dec
pop
or
push
cmpsl
icebp
xorb
hlt
lea
popl
lret
hlt
and
dec
icebp
xchg
pop
outsb
mov
cld
mov
mov
xor
lea
lods
dec
scas
adc
shl
or
mov
stos
mov
mov
fisubl
fnsave
mov
dec
sub
mov
mov
lahf
mov
sbb
pushf
jmp
in
sub
shlb
adc
outsb
addr16
lds
imul
xor
mov
popf
jne
push
xchg
xor
dec
mov
or
jmp
xor
sub
int
fdivrl
sbb
fs
fildll
jp
xchg
adc
dec
ljmp
push
minps
sti
fisubrs
ja
inc
dec
imulb
ror
mov
pop
rcrb
and
push
xchg
xor
mov
jno
xlat
popa
adc
fcompl
and
cmp
test
push
lods
sbb
test
xchg
sub
jmp
pop
and
cli
add
hlt
cs
bnd
push
sbb
pop
pop
cmp
jl
mov
shl
fsts
adc
xchg
fcmovnu
imul
dec
fdivrl
push
sub
and
inc
push
mov
push
and
cmp
jb
dec
ds
outsl
pusha
lds
mov
xchg
cltd
icebp
mov
mov
shrb
cs
inc
pop
mov
hlt
lds
fcomi
push
cmp
jno
dec
jno
jmp
push
lret
lods
out
jg
out
addr16
aaa
mov
mov
sarb
sub
outsl
jp
sub
scas
jb
jb
adc
or
dec
xchg
mov
aad
or
jno
inc
scas
add
cli
mov
fldz
add
jno
jns
imul
rcrl
jnp
jno
mov
xchg
jmp
xchg
cmp
cmp
cmp
dec
iret
pop
mov
adc
push
jl
aaa
push
push
sbb
mov
push
lahf
cmc
adc
mov
or
inc
dec
inc
mov
add
sahf
sbb
or
or
push
push
in
scas
neg
loopne
or
loopne
mov
mov
dec
in
mov
jae
stos
xor
addr16
jno
push
jne
scas
add
int3
sub
call
rcr
cmp
xchg
jae
test
xchg
je
push
cmp
dec
xorb
push
movsb
lods
cld
jnp
mov
pop
scas
ror
sahf
inc
dec
or
daa
sub
int3
cmp
xor
subb
cmp
or
pop
outsl
jge
decb
xor
xor
add
stos
mov
movsw
cli
jnp
rorl
add
pop
mov
inc
push
leave
add
mov
call
fimuls
pop
inc
fsubs
enter
and
dec
int3
xor
rolb
fcmovbe
push
jl
add
mov
loope
sub
xchg
add
insb
jp
xchg
adc
loopne
dec
push
inc
imul
aam
cmpsb
push
dec
fcompl
and
hlt
push
jmp
dec
nop
mov
xchg
hlt
inc
cwtl
inc
or
out
addl
and
in
scas
sbb
mov
leave
push
loop
dec
insl
lds
xlat
pop
scas
ljmp
mov
imul
pushf
stos
ds
rcll
ja
ljmp
sbb
scas
pop
in
hlt
cmp
sub
je
lea
in
repnz
mov
cmp
adc
and
jg
test
or
into
out
jno
sbb
mov
add
pop
rcll
ficoms
sub
movsb
clc
inc
daa
mov
push
pop
push
xor
ds
leave
int3
mov
rol
mov
xor
je
inc
inc
icebp
sub
jp
testb
sub
pushf
inc
lods
sbb
adc
sbb
mov
jle
cs
fidivrs
xor
jecxz
pop
mov
mov
pop
js
mov
adc
and
jb
cmc
add
add
pop
push
pop
mov
adc
lret
mov
mov
lahf
in
inc
into
xor
and
push
pop
stos
xchg
leave
push
adc
popa
iret
and
subl
xchg
fmuls
aaa
dec
mov
mov
pop
imul
iret
jne
notl
jno
xchg
pop
sbb
in
jne
and
bound
daa
shr
popf
fisubs
xor
in
mov
xchg
xchg
pop
into
mov
mov
mov
arpl
sbb
in
ss
rcl
test
lret
push
inc
les
xlat
test
adc
out
mov
insb
notl
inc
popa
sub
test
enter
push
popl
fcoms
sbb
in
fisubrs
out
adc
lods
adc
test
mov
add
cli
add
loope
dec
aad
dec
and
and
mov
cmc
dec
loop
int
mov
scas
or
mov
inc
into
sar
pop
in
ds
daa
push
scas
lods
push
mov
stos
xor
icebp
push
mov
in
xchg
and
bound
jp
clc
int3
lods
outsb
jns
cmp
jecxz
call
dec
cmp
pop
fmull
lods
and
ret
xchg
clc
dec
mov
in
scas
movsb
ds
push
ret
test
pop
mov
mov
pushf
adc
adc
jmp
dec
das
sahf
bound
and
mov
jl
xor
add
xchg
pop
mov
pop
adc
pusha
dec
dec
sub
sub
mov
jno
les
mov
sub
ja
or
mov
sub
scas
loop,pt
js
out
pop
cmp
insl
push
jne
call
clc
jp
and
fs
std
ds
xchg
mov
movsb
ret
rcll
xchg
adc
lret
mov
or
add
lds
popa
mov
xor
imul
sahf
les
enter
mov
and
adc
loope
adc
xchg
xor
inc
and
dec
add
mov
adc
jg
dec
stos
ljmp
movsb
lea
adc
pop
xor
mov
outsl
gs
fcomi
cmc
cmp
cmp
outsl
xchg
push
outsl
stos
push
fs
add
inc
shlb
pop
sub
pusha
add
cmp
cli
test
dec
or
mov
out
ss
add
stc
js
rcll
popa
adc
lcall
jle
les
inc
cltd
repnz
cli
pop
push
outsl
xlat
call
aaa
xchg
ja
mov
pushf
and
jno
ss
pop
imul
ljmp
mov
imul
mov
test
jecxz
lea
sahf
sbb
fisubrs
rol
aam
add
ljmp
imul
adc
or
inc
and
daa
or
xlat
mov
jl
and
or
mov
mov
jae
pop
out
arpl
mov
and
aam
lods
sbb
xchg
sub
lods
mov
cmp
sub
or
mov
xchg
cmp
ljmp
or
rcll
andl
cltd
sub
out
fwait
mov
inc
jle
aad
enter
dec
or
int3
xor
add
lods
inc
fwait
jg
les
adc
sbb
xor
xchg
cmp
dec
mov
xor
push
sbb
loopne
popa
push
push
adc
inc
push
lcall
imul
popa
stos
popa
jge
sbbb
mov
xchg
xor
mov
lds
add
dec
outsl
insb
int
scas
bound
inc
push
stos
inc
sbb
mov
push
jle
cwtl
fsubrs
insl
ficoml
dec
outsb
aas
clc
sub
sub
stos
nop
mov
fdivrs
cmpsl
shll
fs
test
mov
rcrl
add
movl
push
nop
xchg
ret
add
ljmp
push
insl
repnz
add
popa
jmp
inc
lcall
lea
lds
pop
mov
inc
xor
mov
xchg
xor
mov
icebp
aam
scas
out
push
cmp
sub
arpl
insb
ficompl
mov
adc
lds
adcb
enter
fdiv
movsl
das
test
adc
les
test
js
jne
sahf
dec
fsubrs
insl
mov
mov
or
cs
push
lods
fistl
mov
cmpsb
xor
jecxz
aas
jo
dec
xor
aaa
jo
push
cmc
sub
xchg
bound
lock
dec
fildll
cli
cld
mov
iret
adc
js
xchg
adc
xchg
movsb
int3
fidivrl
pop
ljmp
imul
dec
ds
stos
imul
add
jo
fwait
mov
fidivs
roll
jl
rclb
std
shll
adc
pusha
pusha
mov
enter
fiaddl
outsb
and
xchg
fs
mov
fcmovne
call
pop
pusha
repnz
push
fldl
adc
mov
cmpb
fdiv
pop
fdivs
out
jmp
movsb
stos
int
add
add
sti
leave
cli
rcrl
mov
cwtl
lock
mov
inc
push
aad
jl
inc
lea
mov
pop
in
stos
out
aas
in
xor
insb
jb
fidivrl
imul
xor
jae
xchg
mov
loope
mov
jae
mov
pusha
pusha
call
pop
xchg
ljmp
out
outsl
ret
sbb
pop
or
inc
pop
cmp
clc
imul
ret
aad
mov
outsl
insb
sbb
push
or
inc
mov
xchg
xchg
pop
cld
add
push
flds
mov
cmpsb
negb
jmp
jne
push
scas
clc
cmp
and
test
cmpsl
or
js
xchg
sbb
mov
and
and
pop
pop
xchg
or
repnz
sbb
aad
xor
js
aam
imul
adc
dec
pop
scas
arpl
or
xor
jb
lcall
xchg
in
imul
and
xor
mov
push
and
or
pop
fcmovbe
aaa
lret
int
jmp
cmc
insb
xchg
and
xchg
insl
add
ja
pop
out
or
mov
inc
scas
inc
pop
movsb
cmc
mov
mov
lods
dec
mov
outsb
dec
mov
xor
inc
je
xchg
push
mov
pop
pop
sub
pop
push
sub
dec
add
mov
xchg
repnz
iret
pop
data16
mov
data16
subb
pushf
push
or
pusha
push
sbb
nop
lret
xchg
mov
in
mov
rorb
xor
pop
jnp
loope
xchg
fldl
in
push
out
and
cwtl
test
or
test
and
xchg
fstpt
aas
pop
sub
pop
fwait
icebp
push
mov
jle
and
sahf
cmp
outsl
adc
mov
and
pop
jmp
daa
in
or
dec
rorl
lcall
mov
cmp
cmpsl
rol
cltd
jecxz
in
fs
push
dec
pop
int
pop
push
mov
stos
jo
cmpsb
bound
lock
sbb
jecxz
adcl
mov
mov
lret
and
push
gs
mov
pop
mov
sarb
jns
cs
aas
jns
test
dec
push
cmp
mov
mov
sub
mov
dec
inc
mov
test
pusha
inc
mov
push
mov
iret
mov
pushl
imul
pop
adc
and
data16
ss
jp
cmp
nop
xchg
sub
fdivs
pop
sbb
lds
xchg
mov
push
lahf
clc
sub
xchg
or
mov
lods
stos
loopne
sub
nop
jbe
out
iret
popa
fdivl
loope
add
pop
lods
mov
mov
ljmp
push
fs
cltd
xor
stc
pop
bound
loopne
xchg
jl
repnz
fsts
nop
and
scas
add
mov
mov
stos
pop
mov
arpl
and
mov
mov
sahf
mov
xchg
out
insb
imul
rcrl
fistl
dec
mov
adc
loopne
ss
jmp
fnstcw
mov
gs
dec
xor
xor
lods
or
shrl
jge
mov
xchg
gs
pop
negb
outsb
cmp
sub
repz
lret
fsubrs
xchg
pop
mov
xor
and
mov
dec
cmp
cwtl
lock
lret
scas
in
test
lahf
shll
push
movsb
cmp
cmp
push
push
cli
int3
push
cmp
mov
mov
dec
in
cmp
cmp
jge
ljmp
pop
push
xor
mov
leave
push
push
xlat
addr16
cld
mov
in
daa
stos
in
adc
loope
mov
mov
adc
sub
data16
outsl
lock
popa
test
jle
sbb
mov
pop
loopne
int
jecxz
cltd
inc
jnp
imul
push
fpatan
pop
fsubrs
scas
sbb
loope
mov
dec
call
sub
sti
sbb
fadd
lcall
push
repz
out
inc
and
fsubrl
add
inc
cmpsl
aaa
jl
mov
pop
add
push
xchg
jbe
push
lock
cwtl
rcrb
xchg
inc
imul
imul
jbe
pop
cwtl
call
mov
daa
xor
lods
imul
sub
or
rclb
ret
push
leave
mov
lea
jecxz
je
cltd
jno
in
ljmp
lea
sbb
sbb
jg
mov
dec
ret
push
inc
enter
pop
push
data16
pop
or
xchg
fimull
jbe
pop
push
xchg
aad
push
popf
dec
jle
rcrl
movb
push
outsb
aas
iret
or
ret
into
movsb
cmpsb
arpl
stc
fdiv
xor
jb
dec
cmpb
jmp
push
add
or
rcl
sbb
adc
mov
stc
mov
xor
jle
ds
outsl
or
dec
inc
adc
pop
jb
mov
roll
std
repnz
lret
xor
fisubrs
push
sbb
and
add
insl
cmp
jl
cli
mov
add
cltd
cwtl
scas
xchg
leave
out
pop
push
dec
andl
mov
fstl
push
add
mov
sti
aad
jnp
cmp
sbb
or
negb
lods
lea
fmul
lods
cmp
fsubrl
rol
mov
dec
and
test
adc
add
sar
pop
jne
enter
std
fisubrs
iret
popa
mov
jnp
outsb
bswap
aad
scas
jb
mov
xor
and
push
pop
pop
sbb
out
add
dec
pop
add
cmp
push
sub
movsl
add
fdivrs
inc
and
out
push
das
lcall
aaa
xlat
cmp
outsl
dec
aaa
daa
sbb
out
out
dec
out
cmp
into
bound
fsubl
aas
mov
pop
bound
xchg
xchg
xor
scas
inc
sbb
mov
stc
jo
les
out
xchg
xchg
jle
xchg
lcall
testl
xchg
jp
or
pop
imul
outsb
lcall
std
xor
das
divb
sbb
mov
jbe
cmc
hlt
insb
inc
int
loop
add
add
push
add
jl
loope
pop
icebp
jbe
popl
std
push
arpl
aam
and
inc
aas
cs
test
sti
mov
xlat
xchg
insl
movl
es
repz
push
and
daa
das
pushf
xor
mov
divb
jecxz
gs
mov
lods
mov
aaa
lahf
inc
out
inc
mov
dec
popa
dec
cmp
inc
ss
cmp
adc
adc
inc
gs
in
dec
sbb
cmpsl
or
xlat
sbb
mov
jae
jl
cmp
xchg
cs
adc
andl
repnz
rol
leave
ret
adc
push
mov
aad
or
mov
imul
div
out
jnp
rorl
and
inc
call
cmp
enter
cli
pop
adc
push
mov
inc
fstpl
jecxz
sti
popa
jg
outsl
scas
fs
mov
jne
sub
cs
repz
cmp
cmp
adc
xor
ret
inc
inc
adc
xchg
pop
and
iret
sti
icebp
aaa
int
mov
daa
lods
pushl
push
and
rolb
lcall
aad
adc
jnp
sbb
out
sti
sahf
push
in
jl
add
mulb
lahf
and
sub
hlt
mov
inc
xlat
adc
and
inc
sub
cmp
nop
pusha
mov
jo
je
dec
add
or
xor
inc
out
nop
mov
gs
pusha
loopne
or
jmp
mov
test
inc
jne
repz
xchg
mov
lds
cmpsl
inc
pop
add
inc
test
out
jmp
push
cmc
mov
jmp
add
dec
xchg
popa
dec
iret
xor
pop
xchg
sub
mov
cmc
push
mov
stos
sub
insl
rol
scas
fldcw
add
mov
sbb
cmp
add
mov
mov
lcall
cmp
movsl
sub
movsb
ss
mov
add
push
mov
rorb
incl
loope
fildll
out
mov
xor
neg
cmp
dec
cmc
sbb
lds
jp
and
adcb
out
test
dec
add
js
cmpsl
data16
addl
mov
insb
clc
aam
and
mov
sti
mov
mov
xor
lret
mov
arpl
mov
mov
sbb
and
jg
les
jl
rcl
push
in
lods
arpl
int3
ljmp
jl
jmp
imul
push
adc
or
pop
push
es
xchg
xchg
adc
jecxz
add
xchg
movsb
fistps
xor
out
pop
mov
mov
es
cmp
repnz
mov
cmp
pop
inc
inc
mov
scas
pop
push
rorb
in
mov
jp
inc
mov
push
lahf
ss
sbb
jne
or
sti
data16
mov
dec
cli
add
add
dec
inc
dec
and
out
dec
test
lods
lock
mov
lods
push
inc
sub
pop
aad
aas
bswap
or
pop
aad
pop
dec
jge
fs
jb
sub
adc
imul
lret
fnstenv
loope
add
fsubrs
mov
int3
ret
sahf
cmp
subb
out
imul
dec
jge
dec
aas
rdtsc
ds
cmp
mov
cwtl
cmp
jnp
stos
fisubs
xchg
jmp
jae
mov
gs
iret
insl
inc
test
jmp
sub
cmp
inc
push
stc
nop
and
cmp
test
mov
xchg
movhps
dec
push
cltd
pop
jp
xchg
pushf
push
repz
dec
mov
leave
jae
dec
and
inc
loope
ja
bound
mov
popf
mov
pop
inc
xor
movsb
shrl
push
scas
loop
xchg
inc
ds
lds
xchg
xchg
adc
inc
daa
jmp
js
xchg
add
daa
leave
ficomps
aaa
out
mov
aas
lret
fneni(8087
xor
inc
dec
jmp
and
fs
dec
jg
ljmp
dec
iret
fcoms
and
std
mov
les
decl
xor
jne
hlt
or
xchg
das
idiv
mov
leave
push
in
fnsave
fst
push
sahf
es
loope
shl
movsb
lcall
cs
mov
jno
out
popa
lea
sahf
fisttps
sbb
sti
aam
mov
sub
ss
push
add
mov
adc
mov
cwtl
divl
xlat
in
inc
mov
in
sbb
push
call
pop
ja
xor
mov
divl
jecxz
lods
add
pop
cmp
push
lret
mov
pop
jns
mov
movl
imul
pop
aad
jecxz
jp
push
mov
aam
sub
clc
xchg
xorl
fadds
mov
push
ljmp
mov
mov
addr16
repz
sbb
shr
gs
test
jg
mov
xchg
sub
js
lahf
mov
ja
fdivl
pop
or
xchg
push
fmuls
push
lods
add
insb
inc
xchg
add
cmp
mov
xchg
push
loopne
sbb
sbb
jg
mov
fimuls
and
int3
push
aaa
or
sub
pop
sub
adc
pop
dec
jbe
jg
and
ljmp
push
mov
adc
out
nop
add
and
or
xchg
mov
inc
js
sbb
add
xor
imul
sbb
jo
test
dec
inc
mov
dec
jo
mov
inc
hlt
rolb
loope
dec
mov
loope
inc
mov
inc
mov
adc
and
clc
scas
and
aad
mov
mov
mov
xchg
sbb
fcom
test
sbbl
ja
mov
in
sub
mov
ret
pop
clc
mov
push
popa
add
mov
shl
mov
decl
xchg
or
aad
lahf
cmp
fs
jo
repz
insb
mov
xchg
in
cvtps2pd
inc
inc
mov
js
testb
cld
data16
incb
mov
aam
mov
xchg
pushf
std
dec
loop
leave
mov
lea
js
loope
add
jecxz
jae
int3
insl
cmpsl
loop
xchg
mov
loop
aam
int
add
and
xchg
xchg
push
sti
js
in
push
jg
loopne
pop
adc
mov
push
xchg
xchg
shl
add
orl
int3
xor
push
push
ds
repnz
xchg
test
loop
sbb
fsubrs
or
add
and
adc
jb
pop
dec
push
ds
movsl
rcrl
cmp
test
dec
repnz
jbe
lahf
cld
ja
inc
or
xlat
xor
out
cs
dec
push
sti
daa
sub
bound
je
stc
ss
lret
push
mov
inc
js,pt
cld
mov
leave
dec
pop
add
testb
fcomip
stos
mov
arpl
pop
mov
gs
mov
and
ds
les
adc
mov
mov
hlt
push
stc
fadd
push
pop
add
sbb
add
fscale
dec
jecxz
sahf
fbstp
movb
or
cmp
icebp
add
pop
xchg
mov
mov
data16
cltd
sbb
jae
mov
xor
xchg
repnz
aam
in
lcall
cmc
pusha
inc
loopne
mov
push
lds
lock
lahf
jmp
inc
data16
cmp
mov
lahf
lahf
fwait
in
or
shlb
adc
add
fs
sarl
iret
mov
pop
icebp
test
and
pop
popf
mov
sbb
cwtl
lds
repz
into
loopne
sub
mov
cli
int3
mov
lret
pushf
mov
call
or
addl
jne
fldcw
ficompl
and
dec
dec
clc
lahf
test
inc
push
out
ljmp
xchg
cmpsl
lods
lds
mov
push
jo
xchg
xchg
push
cwtl
fdivrl
fldt
popa
dec
pop
add
call
pop
in
daa
ficoms
call
sti
es
imul
pushf
sbb
scas
pop
clc
xchg
sbb
mov
mov
jle
mov
jp
aas
mov
mov
jecxz
fwait
jae
test
and
jp
les
daa
shll
sahf
push
cli
stos
ficoml
jae
aaa
sub
scas
jmp
out
mov
mov
cmpsl
or
mov
loopne
pop
cmp
cmp
popa
mov
push
inc
cmp
jb
test
push
dec
daa
std
jmp
jns
imul
hlt
ja
add
lods
scas
jg
jecxz
lahf
dec
sarb
xor
jnp
ja
sti
inc
and
data16
ja
dec
and
pop
shl
dec
daa
mov
add
rcr
shr
xchg
inc
jo
es
das
insb
scas
imul
push
ret
mov
xchg
cmc
push
inc
adc
dec
sbb
test
jno
filds
fsubl
fadd
lcall
xor
or
xchg
xlat
sbb
cmp
sub
cltd
arpl
into
jns
push
cmp
and
pop
and
in
sub
outsl
fdivl
lret
rcll
mov
inc
sarl
mov
inc
cmp
mov
cli
mov
sbb
xor
pop
lds
test
hlt
jl
xchg
cmpsl
push
mov
xchg
push
das
lahf
mov
js
jno
icebp
bndstx
loopne
xchg
xchg
fisttpl
loop
inc
xor
movsl
push
and
sbb
fwait
aad
cwtl
push
imul
rol
sbb
into
fstl
rolb
inc
xor
mov
cmp
jecxz
test
sbb
push
insb
mov
ret
stos
cmp
sbb
push
das
mov
imul
add
sbbl
adc
in
inc
mov
flds
pop
cmp
mov
add
cli
push
mov
fldt
cs
aad
jl
jmp
mov
adc
xor
shlb
mov
mov
movsl
cmovno
or
xor
in
push
and
xor
jb
fists
testl
xchg
xlat
inc
in
in
sti
push
adc
jae
add
xchg
inc
daa
jle
sub
into
addr16
int
je
imul
and
imul
inc
jg
xor
fstpt
rorl
mov
cmp
dec
jg
fldlg2
pop
xchg
dec
das
js
adc
repnz
in
shll
js
jbe
addr16
lock
repz
fs
scas
push
shrl
popa
test
sar
xchg
or
ficomps
mov
movsl
dec
xor
stc
mov
mov
hlt
jns
cmp
jg
int
and
mov
enter
inc
dec
mov
mov
ds
mov
or
repnz
cwtl
sub
jl
aas
aad
imulb
lcall
call
int3
sbb
sbb
std
mov
sarl
jno
fildll
scas
pop
lahf
test
adc
sub
push
enter
test
repz
mov
jp
add
popa
ds
push
xchg
inc
movsl
or
jecxz
movsb
inc
and
pop
add
cli
mov
jl
js
cmp
adc
push
data16
xchg
shll
jl
in
sbb
mull
je
xchg
push
ret
jg
je
leave
sbb
daa
roll
adc
std
cld
push
std
dec
sub
mov
cmpsb
lret
fiadds
dec
adc
sbb
aad
shl
add
stc
adc
jbe
cmc
repz
out
inc
mov
push
inc
dec
pop
xchg
js
nop
jnp
stc
ret
xor
pop
xor
cmp
fwait
or
lret
sbb
and
dec
pop
xchg
dec
push
jbe
inc
cwtl
nop
pop
mov
pop
clc
fs
push
dec
lods
mov
cwtl
inc
sub
jmp
into
inc
adc
pop
stos
sbb
int
fldcw
and
mov
and
cmc
push
and
mov
test
cmpsb
sbb
inc
and
xor
cmc
sub
sarb
inc
gs
lret
sti
add
jl
mov
ficoms
mov
lret
mov
pop
leave
jp
hlt
addr16
lods
push
mov
mov
sub
rclb
fcmovbe
sub
scas
shr
sbb
mov
test
mov
test
jle
pop
dec
shlb
int3
loopne
das
out
mov
sub
mov
loop
jp
outsb
js
lods
sbbb
mov
enter
das
xchg
imul
mov
mov
push
cli
and
mov
loope
repnz
aad
sbb
and
std
out
jo
cmpsb
inc
lds
decb
push
pop
pop
or
lret
cmp
push
test
sbb
cmp
sbb
inc
negb
jnp
ljmp
ljmp
jmp
cmp
cmc
mov
or
fistpl
inc
out
jecxz
push
push
testb
pop
xchg
notb
inc
call
inc
mov
adc
bts
push
push
mov
pop
stos
sub
call
sbb
sbb
es
inc
adc
mov
fcomps
sub
int3
jns
or
subb
xor
cmp
pushf
call
and
lahf
paddusw
jg
outsl
jmp
sub
sub
mov
lods
dec
mov
cmc
mov
push
test
cmp
dec
movsb
shlb
aaa
adc
push
repnz
test
test
sub
xchg
test
imul
aaa
jno
cmc
mov
cmp
loopne
push
xor
mov
stc
cs
dec
les
pop
cmp
dec
lcall
push
cmp
bound
add
mov
mov
jo
icebp
lea
je
ja
sub
roll
idivl
shlb
enter
mov
bound
imul
dec
movsl
mov
or
inc
push
mov
iret
push
sbb
xor
iret
scas
cltd
inc
das
sbb
push
and
and
dec
je
mov
outsb
or
jp
mov
insl
ss
les
enter
sbb
adc
mov
fs
xchg
pop
sbb
adc
loop
or
out
pop
dec
in
out
lcall
das
pop
xlat
test
adc
xchg
ret
loope
push
jge,pn
cmc
mov
imul
fsubrs
aad
mov
lods
adc
loopne
mov
mov
loop
out
mov
pop
mov
movzwl
int
bound
bound
js
scas
std
and
adc
int
test
push
in
cs
mov
xchg
xchg
cwtl
jb
scas
add
jmp
mov
cmp
cmp
fs
ret
rcrl
les
cmp
mov
push
sahf
loope
shll
mov
or
gs
jmp
or
and
sub
adc
int3
or
jb
adc
xchg
dec
and
push
pop
mov
dec
cli
xor
lcall
pop
mov
stos
ljmp
mov
roll
mov
imul
aas
push
ja
pop
jns
jmp
or
mov
leavew
scas
xor
dec
mov
adc
mov
sub
in
test
jecxz
cs
push
inc
cmpsb
pusha
mov
mov
xchg
aas
movsl
inc
cmp
dec
xor
mov
adc
and
mov
int3
dec
sbb
mov
mov
fs
pop
dec
std
mov
mov
inc
adc
int
jecxz
ss
mov
out
xor
data16
cs
cmp
loop
jl
sahf
lret
sbb
cmpsb
or
jno
pusha
inc
jl
das
std
shrb
or
dec
add
shl
cmp
push
xor
push
mov
add
xchg
jb
push
mov
dec
movsl
outsl
sbb
sbb
das
push
addl
ljmp
jge
dec
push
mov
outsl
call
mov
mov
pop
cmp
dec
loope
setae
repnz
push
mov
in
cmp
mov
add
mov
sub
adc
pop
mov
push
outsl
cmp
jle
add
pop
sarb
inc
in
inc
mov
les
out
mov
jns
push
and
push
and
or
dec
jb
into
adc
jb
push
std
sub
mov
arpl
sub
lret
push
inc
ss
shll
repnz
cld
or
adc
inc
sub
es
imul
pslld
push
adc
int
adc
sti
nop
and
cltd
cmpsb
xchg
imul
jne
jmp
jb
call
mov
inc
adc
or
lds
pop
test
xor
int
lret
jl
cmp
int
movsl
sub
jmp
cmovno
mov
cmp
insb
and
cmp
jle
orb
xor
shlb
or
into
xor
mov
stc
adc
or
fidivrs
hlt
dec
xor
pop
cmp
aad
rorl
cmpsl
or
mov
push
cmp
in
xor
jecxz
mov
inc
adc
jl
mov
or
cld
pop
xor
pop
mov
push
push
mov
sbb
adc
mulb
cmpsb
dec
pop
mov
mov
fs
push
push
fidivrs
jo
out
call
inc
jmp
mov
lret
push
sub
loopne
dec
push
stos
sub
nop
or
dec
sub
cld
inc
inc
sub
imul
addr16
jp
pop
pop
dec
mov
fwait
js
das
xchg
test
into
sbb
ficoms
mov
sub
popf
push
jp
pusha
add
sub
addr16
mov
lea
js
xchg
dec
imul
sti
push
inc
or
es
ficoms
pop
add
xor
scas
lock
jle
call
stos
repz
jbe
xchg
cld
aaa
jns
add
mov
test
aas
sub
pop
xchg
clc
imul
fcompl
cmpsb
inc
les
dec
and
jge
es
idiv
mov
in
push
and
jbe
adc
movsb
fsts
adc
jecxz
lods
arpl
cmpsl
fwait
aas
mov
inc
push
mov
arpl
sub
pop
insb
inc
loop
mov
xchg
sahf
xchg
inc
jl
mov
xchg
cmpsb
lods
mov
iret
sti
loopne
mov
stos
pop
sbb
jnp
xlat
push
sbb
jge
push
xor
cmpsl
enter
stos
xlat
cmp
fwait
cmp
mov
jle
das
xor
test
mov
in
into
frstor
pop
int
lret
mov
fsubs
out
ficomps
pop
in
aaa
pop
cmp
call
cmc
jo
cmp
adc
leave
in
aam
imul
pushf
cmc
js
stos
popf
cmp
fs
popf
jmp
std
mov
sub
xchg
pop
push
ss
add
arpl
pop
xor
add
xchg
xlat
sbb
push
mov
loope
es
orb
xor
sbb
in
imul
in
rclb
jae
loopne
push
cld
dec
mov
add
mov
std
xchg
adc
pop
and
fcomps
nop
or
sub
icebp
test
xlat
xor
or
shlb
dec
and
xor
pop
add
xor
jb
inc
push
int3
push
jmp
in
pop
add
mov
fsubr
popa
rorl
xlat
repz
jnp
mov
cli
sub
stos
push
ret
jae
cmp
cs
or
addr16
xor
mov
nop
pop
pop
pop
add
fsts
shrb
or
repz
clc
xchg
out
call
pop
add
dec
cmp
sahf
sbb
out
xchg
mov
and
cmp
sbb
fidivrl
and
rcl
cltd
pop
mov
lret
shlb
repz
mov
inc
or
sbb
lret
inc
popa
lea
iret
enter
fiaddl
lock
add
mov
dec
das
aad
jae
mov
ficompl
push
stc
inc
push
or
incl
add
xchg
cmp
rorb
cltd
loopne
imul
inc
frstor
xchg
dec
push
clc
sub
pop
scas
loop
sub
nop
lods
popa
arpl
ja
inc
cltd
xchg
jb
mov
adc
adc
pop
pop
in
xchg
in
roll
mov
dec
sbb
pusha
call
insl
jge
push
jo
push
loop
cmpsb
stos
fisubl
jne
jae
idivb
push
push
pop
dec
sarl
pop
xchg
and
sbb
add
ds
xchg
mov
inc
push
test
icebp
in
faddp
xor
and
xlat
add
ret
dec
dec
or
in
mov
push
lret
popa
imulb
jge
sahf
cmp
pop
mov
enter
test
pushf
sbb
incl
mov
sbb
out
inc
daa
test
mov
out
mov
test
mov
movsb
and
fildl
stos
inc
popf
xor
push
std
negb
cmp
xor
add
push
push
ljmp
mov
sbb
shrb
cmp
data16
mov
shll
test
push
sahf
mov
and
cwtl
jl
ds
xchg
out
push
xchg
pop
gs
sbb
sti
xor
int3
test
mov
lea
mov
or
dec
iret
mov
mov
das
lret
jmp
or
lret
mul
push
xorl
and
pop
push
sub
mov
outsl
dec
adc
dec
insl
sbbl
add
pop
jmp
xor
xor
fwait
aas
xchg
add
daa
fsubp
xchg
movsb
mov
xor
je
xchg
imul
imul
frstor
sti
sub
push
adc
std
jg
repnz
xor
jnp
mov
cmp
js
cmp
xchg
lret
jl
aaa
loop
jno
and
push
ljmp
cmp
xchg
and
push
inc
cmp
cltd
jno
in
call
fcmovnu
sbb
bound
xor
push
inc
imul
out
xlat
movsl
mov
stos
fwait
jne
ss
or
mov
push
mov
in
adc
outsl
stc
sti
xor
mov
inc
sub
jg
mov
or
movsl
ret
lret
fisttps
das
mov
jne
inc
pop
jle
repnz
ljmp
inc
pop
test
hlt
leave
pop
loope
mov
dec
les
arpl
movsb
mov
in
jne
sbb
cli
mov
ljmp
mov
dec
and
test
pop
cmp
jno
and
fs
cmp
inc
rorl
imul
xor
out
decl
push
cmp
aas
insl
mov
call
pop
icebp
push
shl
cwtl
out
loope
test
jg
popf
jp
popw
lods
inc
pusha
sbb
sbbl
addr16
mov
sbb
xorb
cmpsl
aam
stos
xlat
jp
js
jle
in
cvtps2pi
mov
inc
jo
arpl
dec
xchg
mov
data16
sbb
and
sub
stos
and
pop
std
push
dec
loopne
mov
mov
test
movsb
pop
jmp
mov
inc
mov
cltd
leave
adc
mov
cmp
test
repz
test
mov
imull
inc
xchg
aaa
jae
inc
sub
lret
fisttpll
pop
push
shlb
mov
or
cltd
pushf
inc
aad
and
and
push
dec
orb
or
adc
jo
insl
jmp
pop
add
rolb
inc
out
add
jo
pop
fnstsw
shlb
int
and
ror
adcb
fcmove
mov
movsl
les
jno
lcall
sub
lods
bound
pop
xor
xor
and
or
and
repnz
mov
inc
mov
sub
mov
jne
jmp
jecxz
mov
sbb
add
mov
pop
jo
iret
pushf
adc
imul
adcl
push
repnz
cmp
sub
mov
shrb
rclb
xor
and
add
mov
in
mov
pusha
inc
inc
sbb
enter
pusha
jl
outsb
rcrl
xchg
mov
inc
mov
pop
loope
repz
js
fisttpll
enter
mov
mov
xchg
adc
sub
movsl
lret
out
in
jbe
hlt
push
je
and
andl
mov
notl
mov
dec
arpl
leave
or
test
mov
mov
imul
test
dec
mov
jmp
lahf
adc
jns
js
sbb
and
out
pop
sub
add
adc
orl
push
outsb
insb
out
repz
mov
push
pop
fcomp
and
jns
jmp
mov
push
mov
pop
in
cmp
in
pusha
jno
push
outsl
in
test
test
cltd
cld
mov
ss
shl
fistl
adc
mov
inc
and
push
xchg
fnstsw
out
dec
push
pushf
pop
icebp
iret
ret
mov
push
call
mov
andb
loope,pt
adc
sbb
push
adc
lods
pop
pop
inc
sahf
int3
cs
out
sti
mull
xor
jne
negb
jge
fcmovne
pop
lods
shlb
push
push
outsl
pop
out
cmpsl
and
int
out
pop
sbb
xor
adc
xor
mov
jmp
mov
add
or
imulb
sti
lods
mov
sbb
or
push
or
in
mov
push
hlt
pop
dec
or
sbb
dec
jns
mov
pop
daa
inc
movb
mov
fisubs
push
test
insl
push
stc
and
cwtl
movsl
jecxz
aam
mov
push
nop
sbb
sbb
addr16
cmp
outsl
dec
adc
pusha
mov
outsb
lods
into
and
cs
testl
jb
adc
sahf
nop
dec
lods
xchg
lret
mov
inc
dec
ljmp
sbb
and
jb
mov
popf
lcall
imul
fcom
cmpsb
lock
js
sub
test
and
cmp
repz
loopne
subl
movsb
adcb
cltd
lcall
jecxz
push
mov
lret
xor
fwait
aad
dec
and
mov
in
inc
inc
stos
out
mov
mov
clc
dec
mov
cs
dec
or
sub
fidivl
out
push
jge
mov
add
invd
and
cmc
shr
mov
xor
mov
iret
add
xor
or
mov
mov
mov
addr16
or
sub
pop
rcrb
arpl
cmpsb
mov
cmpsl
jb
cmp
hlt
rolb
fbstp
stos
cmpsl
lcall
add
xor
add
loopne
shrb
adc
push
pop
cli
xlat
pop
ds
inc
and
popa
popf
es
insb
sub
xchg
xor
push
push
xor
ljmp
mov
mov
insb
xchg
push
roll
jge
call
icebp
sarb
sbb
loopne
leave
jge
jle
loop
je
xor
jg
mov
sbb
mov
movsb
icebp
jno
xlat
sbb
dec
mov
pop
mov
arpl
pop
sub
cmp
outsb
push
je
fbld
std
mov
inc
mov
fcompl
imul
add
cmpsb
imul
int3
lret
nop
jg
xchg
adcb
jb
sbb
push
and
mov
icebp
dec
inc
mov
pop
ss
jge
dec
stc
popf
xchg
cmc
cmp
outsl
iret
inc
mov
xor
rclb
ss
xchg
cwtl
xchg
dec
test
xchg
in
mov
adc
sarb
cli
mov
fwait
outsl
push
ljmp
or
sbb
jg
and
lret
addr16
out
scas
cmp
ss
or
pop
push
and
stos
repnz
mov
push
cmpl
sub
mov
ret
movsl
hlt
popa
repnz
insl
rclb
xor
lret
and
stos
sbbl
add
mov
negb
aad
push
jo
inc
cld
dec
cli
inc
add
mov
mov
fucomip
sets
je
dec
in
leave
cs
inc
push
mov
mov
jb
lret
jnp
mov
mov
inc
dec
cmp
sbb
inc
call
clc
xchg
test
int
pusha
cmp
add
adc
sub
add
cmc
push
mov
out
jmp
push
js
ja
cmpsl
mov
cli
loope
notl
xchg
insl
sub
add
add
push
cmpsb
add
sahf
xor
lods
aam
in
daa
jb
jge
add
sar
psubsb
dec
jl
or
push
pop
mov
mov
ret
imul
dec
and
mov
scas
push
xchg
notb
adc
arpl
stos
cmp
imul
hlt
imul
jb,pn
mov
cmpsb
aam
lods
mov
and
je
dec
sub
repnz
nop
xchg
add
test
pop
and
ret
out
ret
pusha
fnsave
cmpsb
icebp
sbb
std
das
out
pop
stc
mov
ss
clc
mov
imul
pop
dec
test
cmc
inc
jmp
data16
jne
jne
loope
cmpsl
gs
push
aaa
cmpsb
cmp
mulb
repz
ret
sahf
pop
repz
popa
mov
adc
dec
inc
andb
imulb
nop
in
mov
scas
hlt
lea
fcoms
cmp
jne
sub
adc
inc
jge,pt
scas
xchg
inc
lahf
adc
push
jge
lret
cld
xor
adc
dec
cmp
xor
jno
loope
inc
sub
sbb
pop
ljmp
xor
sbb
in
xor
cmp
dec
add
xchg
out
push
aam
cld
lods
test
lods
outsl
mov
cmc
test
fistpl
jg
lret
lret
dec
mov
cmp
and
fs
sub
dec
insb
movsb
cmp
adc
js
xor
mov
jge
loop
jo
adc
mov
or
scas
sbb
jns
lock
ja
icebp
loopne
jle
jp
les
arpl
cli
jbe
pop
sbb
mov
mov
lock
popf
push
pop
daa
outsl
pop
and
mov
mov
imul
and
hlt
push
aam
data16
and
pop
mov
test
ficoml
mov
pop
inc
fsubrs
lret
test
jmp
mov
jne
ljmp
clc
or
xor
jne
push
fs
test
gs
sub
push
in
in
test
add
mov
ficoms
ret
push
test
sub
popf
xchg
inc
ss
inc
popf
repz
outsb
lahf
mov
nop
in
xchg
test
repz
ds
adc
jbe
lcall
pop
inc
cli
adc
mov
xchg
pop
cli
dec
hlt
xchg
lret
xchg
pop
stos
out
andb
adc
jb
inc
pop
out
sub
andl
push
sbbb
pop
addr16
subl
sub
add
adc
jb
mov
xchg
or
icebp
mov
into
adc
sub
fsubrl
test
test
pop
lock
and
and
jb
int
sbb
jge
repnz
mov
out
jo
fsubl
dec
and
mov
addb
cmp
jnp
sub
add
mov
mov
jmp
dec
icebp
ljmp
mov
jmp
push
dec
cli
pop
sbb
sbb
push
enter
fs
fwait
or
push
push
pop
and
push
lahf
sub
pusha
jg
cwtl
incl
mov
mov
jns
ds
sub
cmc
nop
jb
outsb
test
sub
pop
rol
cli
fisubrl
mov
lea
enter
in
pushf
push
inc
pop
dec
aaa
out
pop
inc
lahf
xor
jl
jl
and
push
adc
inc
lahf
add
push
icebp
stos
stc
jmp
cwtl
inc
or
adc
cmp
clc
push
adc
inc
and
lds
insb
in
lahf
push
icebp
mov
jnp
cltd
jne
loopne
inc
imul
xchg
push
jne
out
outsb
mov
lret
mov
enter
add
gs
sbb
jb
push
idivb
jo
jae
iret
sub
in
mov
mov
in
sbb
and
jo
stos
leave
fiadds
lea
or
xchg
add
aam
push
mov
mov
jbe
popa
sbb
sar
call
lea
adc
adc
nop
lods
out
dec
xchg
sahf
mov
cmc
in
fisttpl
jp
rcrl
mov
dec
add
les
icebp
xchg
inc
xor
stos
cltd
dec
xchg
fcom
sbb
jle
sub
ftst
ss
lods
popa
cmp
test
addr16
sub
or
gs
push
mov
push
popf
out
fwait
push
insb
mov
and
push
push
loop
imul
adc
in
push
les
sbb
hlt
rol
mov
aas
push
xchg
faddl
dec
add
ficompl
xchg
rol
loope
pop
mov
pop
in
inc
icebp
pop
scas
lock
ret
sbb
push
mov
sbb
push
insl
sub
mov
cs
mov
and
scas
insl
mov
int3
push
test
dec
pop
outsl
popf
mov
cwtl
clc
loopne
sub
loopne
stos
outsl
pop
int
loope
adc
sbb
fwait
stc
cmc
cltd
hlt
popf
or
pusha
aam
pusha
adc
in
dec
cmp
sti
xchg
out
and
repnz
push
cmp
adc
cltd
rcrb
mov
mov
jae
sti
mov
jg
sbb
call
inc
sub
pop
add
aam
out
fimull
gs
ss
inc
out
push
mov
enter
int3
cltd
popf
sub
insb
subl
cmp
push
outsl
adc
in
addr16
mov
fisubrl
lods
arpl
sub
popa
mov
cs
sarb
rcrb
ja
mov
arpl
sbb
lea
aas
das
fsubp
imul
repz
insl
pop
fistl
push
shlb
sahf
push
ret
cmpsl
add
dec
imul
es
push
mov
outsl
out
xor
nop
xor
xchg
or
shl
mov
jmp
icebp
dec
imul
ficoml
push
sbb
jbe
add
mov
in
and
jne
lahf
inc
xchg
fisubrl
jecxz
lock
mov
jo
push
bound
scas
mov
insl
push
sub
ds
push
push
mov
out
popf
xor
fwait
xchg
insb
addr16
ss
mov
scas
sub
pop
std
sub
and
daa
flds
cmp
test
ss
pop
mov
data16
add
pop
call
xor
push
adc
add
pop
test
gs
dec
jne
jns
fs
pushf
xchg
sbb
mov
pop
xchg
cmp
pop
mov
aas
push
lahf
sahf
lret
ret
into
sbb
pushf
sbb
jl
cs
es
mov
lea
mov
outsl
or
inc
ljmp
roll
call
shrb
xchg
fistps
into
ret
lcall
adc
and
sub
sbb
incb
jb
sub
leave
enter
mov
lea
adc
fdivrs
add
adc
iret
sbb
out
xchg
push
push
push
in
lods
inc
inc
je
pop
stos
adcb
fldl
push
rorb
stos
xor
adc
pop
in
fldcw
cs
ret
inc
imul
mov
adc
inc
xchg
enter
fmulp
rorb
rcll
xchg
test
mov
ffree
insl
mov
xchg
or
xchg
push
cmp
ror
bound
cmc
inc
pop
mov
fdivr
aad
lods
push
add
ds
stos
pop
repz
cmpsb
out
fmull
mov
sbb
jl
ljmp
push
fistl
xchg
ds
fnsave
mov
inc
outsl
lods
sahf
fwait
ret
sub
adc
mov
imul
mov
sub
mov
fbld
push
pusha
clc
dec
sarl
popf
and
sbb
pop
imul
loope,pn
sbb
lods
pop
dec
jp
or
filds
lret
cmpsl
fidivs
mov
xor
movsl
push
imul
adc
add
or
rcrl
pop
aas
mov
repz
pop
dec
mov
cmp
push
loopne
cli
adc
dec
pop
xchg
test
sub
or
mov
std
lret
pop
sbb
jae
push
inc
push
test
stos
cwtl
pop
shlb
mov
leave
cmpb
mov
dec
jl
in
insl
int3
sub
ja
sub
into
sarb
pmulhuw
mov
lcall
pop
gs
jmp
insl
xchg
push
les
push
jmp
in
mov
pusha
mov
jmp
add
fistl
jge
sub
sbb
jae
push
ret
cmp
orb
scas
mov
mov
cmp
imul
out
add
or
fcomps
fs
push
in
lcall
jno
push
sbb
pop
add
imul
repnz
ror
dec
shrl
scas
pop
cltd
cs
std
or
cmpl
orl
sbb
insb
aas
das
adc
pusha
test
cmp
rcll
pop
jb
out
lea
adc
aaa
xorl
dec
or
insb
pushf
sbb
gs
cmp
add
cld
clc
aaa
je
aad
in
dec
push
mov
scas
mov
push
les
dec
repnz
jg
cltd
jo
nop
push
pop
xor
stos
notb
insb
sbb
sar
in
dec
insb
xchg
mov
adc
mov
jns
cmp
mov
mov
stos
fcoms
pop
jle
mov
mov
jmp
pop
inc
andb
movl
in
dec
push
out
add
jg
or
mov
lret
popf
repz
in
stos
jp
repz
push
stos
pop
push
dec
stc
in
ja
push
cmp
ja
jecxz
inc
hlt
inc
inc
or
adc
mov
sbb
or
out
inc
hlt
loop
stos
pop
xchg
inc
sub
and
pop
adc
ret
adc
xchg
xchg
dec
out
lret
and
testb
rolb
imul
jmp
mov
pop
subb
sti
aad
mov
cmpsl
xlat
dec
frstor
shr
repnz
mov
inc
ja
add
add
mov
mov
cmp
mov
pop
xchg
mov
popf
adc
xchg
add
inc
mov
addb
mulb
loopne
mov
xor
xchg
daa
scas
mov
add
adc
inc
and
and
fistpl
inc
push
arpl
dec
pop
rol
mov
out
mov
lret
xchg
lea
stos
insb
push
mov
cmp
fs
adc
popfw
xchg
or
lds
jns
and
sahf
stos
xor
movsb
and
aad
sub
mov
and
out
mov
stos
jae
push
push
dec
lock
adc
jne
jns
add
inc
scas
add
aam
push
mov
mov
xchg
bound
iret
sub
cmp
jl
shr
mov
movlps
jmp
out
outsl
punpckhdq
mov
mov
js
jbe
jmp
and
inc
cmp
in
add
outsb
movl
mov
in
stos
xchg
inc
jle
popa
inc
int
xor
loope
aad
inc
mov
rcl
xchg
inc
popf
ja
idivl
inc
lret
pusha
mov
adc
out
lds
pop
in
sub
fbld
push
push
xchg
mov
mov
cmpsb
enter
int3
jle
aam
enter
nop
or
call
or
mov
dec
loopne
sbb
cmp
or
stc
mov
push
add
jb
xor
int3
and
or
dec
out
jmp
mov
pop
jo
andb
icebp
adc
es
jl
aaa
cld
mov
pop
rclb
scas
mov
xor
mov
mov
insl
sbb
inc
inc
push
daa
sti
mov
int3
pop
jge
push
call
pop
out
xchg
les
jne
pop
xor
sub
pop
sbb
lea
fwait
movl
inc
ret
xor
lods
insb
push
aas
mov
and
push
pop
fs
faddl
cmpsb
je
xchg
rol
add
pop
xchg
mov
inc
sub
sub
cmp
sbb
stos
mov
mov
out
xchg
lret
cmc
bound
leave
xor
rcrb
pop
and
outsl
add
lods
pop
int
sbb
jo
push
lret
xchg
dec
cmp
adc
sti
sarb
out
dec
mov
sti
mov
stos
xchg
dec
rorl
mov
xchg
data16
popa
in
fists
adc
mov
sbb
xor
jb
ret
add
or
xlat
xchg
xorl
ret
lret
mov
fidivs
loopne
add
inc
adc
lods
cmp
fmuls
jne
clc
lock
inc
fiadds
inc
pop
stos
jno
fcomps
xchg
lahf
imul
out
nop
mov
pop
ret
lcall
sbb
pop
ret
aad
mov
add
xor
pop
aam
in
mov
or
sbb
inc
add
iret
cld
mov
outsl
pshufw
jmp
cmpsb
loop
push
push
pop
xchg
jnp
jl
xchg
cmp
lcall
xchg
jo
in
push
jecxz
imul
popf
shll
fwait
push
shrb
dec
adc
push
mov
pop
pusha
cli
cmp
sbb
clc
scas
ret
fwait
addr16
mov
mov
dec
inc
pop
lea
pop
inc
pop
or
pop
add
ret
nop
out
loope,pt
fidivs
push
hlt
int3
out
je
adc
iret
sbb
pop
or
jg
lcall
movsb
loop
addr16
sub
xlat
aam
inc
test
cmp
xlat
imul
xchg
and
push
xor
dec
pushaw
or
fs
pop
jl
jnp
inc
iret
sahf
pop
cmp
stos
nop
sbb
sti
imul
push
jg
in
xchg
test
in
loop
mov
xchg
mov
cltd
test
mov
les
pop
mov
sbb
jle
insb
rolb
cli
movsb
sbb
mov
movsl
xlat
sbb
out
fidivs
push
test
cmp
mov
jp
pop
pop
inc
int
add
lea
iret
call
mov
daa
sub
or
mov
jae
mov
pop
lods
jns
pop
push
mov
daa
mov
cmp
mov
pop
sub
out
gs
ret
jne
test
ljmp
xchg
sbbl
pop
or
adc
and
lea
xor
push
push
xchg
loop
out
sbb
push
scas
mov
mov
pushf
inc
pop
aas
and
push
shll
and
pop
stc
cli
sbb
sub
push
in
fldl
loop
popf
push
test
sub
mov
in
push
bound
mov
je
xor
or
jmp
in
iret
push
cwtl
pop
pop
mov
inc
sbb
std
dec
jp
pop
mov
xchg
ss
dec
inc
jp
std
mov
out
in
dec
adc
cmp
call
pop
and
or
xchg
in
fidivrs
adc
xchg
xor
loopne
sar
sub
xor
xchg
xlat
andb
pop
push
push
jl
mov
lret
rcll
push
inc
lahf
sbb
dec
mov
xlat
cld
push
jge
lret
jl
aas
jle
andl
jmp
ss
jbe
rclb
xchg
outsb
lret
pop
arpl
or
in
iret
mov
sbb
cmp
push
je
rcr
mov
jb
shll
mov
ret
pop
arpl
js
xchg
cmc
andb
mov
jle
ficoms
mov
pop
pop
xlat
leave
sub
pop
mov
push
or
in
call
stos
insl
rcll
loope
daa
mov
or
in
jge
in
xorl
jl
mov
or
jmp
pushf
xchg
repz
aas
push
testl
mov
shlb
pop
cwtl
mov
sbb
fidivrs
rorb
out
or
mov
lret
jbe
and
cmp
sbb
mov
mov
dec
mov
jmp
dec
jl
lea
fildl
sub
jbe
mov
mov
das
mov
mov
das
inc
mov
mov
jg
mov
and
jp
inc
inc
mov
fisttpll
das
sbb
fwait
ljmp
bound
cmp
rcl
sahf
push
lods
xor
mov
xor
jmp
and
dec
mov
sub
sub
or
add
xor
push
pop
sahf
xor
repz
mov
inc
pop
subb
rorb
cld
xchg
lea
mov
push
and
mov
lock
aad
test
sub
mov
out
xchg
cmp
hlt
gs
push
jecxz
push
cmpsb
push
js
jno
ja
xchg
lods
in
pop
and
aam
jl
loop
pushf
in
ficoml
or
scas
aad
lods
inc
push
push
pop
lea
pause
pop
mov
jle
push
jne
jbe
aam
xlat
les
push
jo
movb
lret
and
out
mov
add
in
and
dec
pop
jbe
and
imul
arpl
lds
js
pop
xchg
stos
xchg
xor
scas
pushf
adc
dec
test
jbe
cmp
in
fs
xchg
fnstenv
movsl
add
inc
pop
add
cmp
ficoms
cltd
pop
loop
test
mov
sub
xchg
adc
ja
push
aam
pop
movsb
aam
mov
aam
sti
in
sub
lahf
inc
int
mov
sarl
popf
cmp
mov
xchg
cmp
xchg
jo
insb
push
sub
shll
out
enter
xchg
lret
inc
add
je
push
out
jns
jecxz
enter
test
jecxz
fisttps
push
pop
or
cs
test
xchg
ret
je
out
sbb
mov
xchg
inc
mul
jnp
and
push
mov
lock
pop
xor
into
arpl
into
movsl
mov
push
popl
mov
adc
pusha
cmp
setle
repz
pop
sub
mov
fildl
jmp
cmp
mov
scas
out
fdivs
mov
cmp
fnstsw
mov
cmp
es
call
dec
aam
popf
cli
cmpsb
dec
call
out
shrb
mov
jmp
loop
mov
or
mov
or
adc
or
ror
inc
sbb
mov
lcall
sub
sbb
pop
iret
mov
in
and
inc
jmp
aam
imulb
rolb
mov
test
adc
test
icebp
out
std
mov
fbld
ja
cmp
sarb
cmp
cmp
fisttpl
cmp
imul
jecxz
outsl
sbb
mov
dec
dec
dec
inc
sar
daa
fdivrl
mov
mov
xor
dec
push
xchg
pop
sub
inc
dec
mov
or
sub
bound
cmp
mov
fs
mov
fimuls
cmp
or
adc
out
inc
popa
cmpl
jae
push
cli
fldenv
in
jo
sti
sub
dec
mov
or
fs
mov
aaa
popf
or
jns
mov
sub
into
mov
imul
mov
out
push
cld
xor
xor
mov
mov
jecxz
jge
cltd
cmpsl
mov
xchg
orb
dec
sbb
jae
dec
cmpsl
call
icebp
xchg
mov
outsb
fwait
cmp
add
sbb
iret
pop
adc
arpl
pextrw
stos
xlat
cmp
push
jne
adc
fincstp
mov
dec
xchg
push
pop
sbb
push
xchg
adc
rcrl
mov
inc
aad
cmc
and
or
cwtl
fisttpl
xchg
ds
inc
loope
inc
adc
clc
das
add
mov
pushf
xor
sub
cmp
adc
mov
jnp
out
pop
es
movsb
adc
fwait
outsl
inc
xlat
mov
inc
rcrb
enter
push
int
getsec
mov
popa
in
jnp
dec
inc
lea
mov
aam
fmuls
ficompl
inc
xor
or
divl
aam
icebp
into
aaa
jns
negl
inc
icebp
mov
ret
mov
arpl
adc
loopne
je
cmp
mov
rcrb
pusha
mov
stos
push
mov
loope
push
xor
mov
in
or
cmp
push
jae
xor
clc
adc
enter
das
rcll
jecxz
rolb
mov
or
cli
in
mov
push
adc
fldenv
or
fs
push
and
and
adc
cwtl
call
sti
cmp
out
iret
adc
inc
mov
lds
mov
imul
push
jmp
push
push
inc
and
fimull
pusha
mov
cmp
push
ds
push
pop
jns
dec
arpl
stc
call
push
roll
pop
cmpsl
insl
jno
inc
int
ret
push
xchg
xor
push
loopne
dec
xchg
mov
xchg
push
aaa
testl
pop
mov
cmp
push
test
xchg
insb
enter
jp
sbb
cmc
loop
jle
sub
mov
enter
xor
mov
leave
rorb
mov
ds
mov
movsl
and
mov
xor
or
jno
fdivrl
icebp
and
jbe
mov
gs
stos
pop
mov
and
add
push
bound
out
js
pop
sbb
fists
push
sbb
push
adc
pop
loopne
cmp
jp
and
jne
sbb
mov
in
ret
stc
mov
mov
xchg
dec
ret
jb
pop
cltd
inc
jmp
push
sub
jb
clc
sbb
xchg
add
push
xlat
sbb
or
cltd
fbstp
fcomi
addl
push
inc
test
fimuls
call
pop
shll
lcall
pop
mov
mov
scas
popf
adc
shr
mov
aas
ffreep
test
sbb
cmp
jge
push
pop
add
inc
call
pop
pop
pop
in
xlat
mov
ds
mov
lds
adc
dec
popa
test
in
jmp
ret
xchg
shl
pop
dec
inc
mov
cwtl
fucomi
or
rorl
clc
xchg
xchg
dec
rcl
dec
mov
stos
sub
xchg
jge
ja
or
sub
dec
insb
push
ljmp
sbb
das
xchg
mov
aam
push
cmp
or
inc
mov
adc
mov
xor
data16
aas
dec
sub
sti
jbe
xchg
jmp
lcall
and
mov
cmpsl
xchg
xor
mov
cli
mov
ljmp
outsb
add
xorl
mov
imul
push
pop
xchg
xchg
jmp
mov
out
cld
jle
bound
call
inc
js
inc
lock
jg
leave
mov
sbb
jne
repz
sub
cmp
call
js
loopne
xchg
push
mov
pop
stos
xchg
add
xor
mov
mov
movsl
ffree
lcall
xor
aas
and
cli
in
mov
pop
pop
stos
lret
pop
inc
and
mov
push
push
lea
shll
push
sub
inc
fstps
add
hlt
pop
mov
xor
jnp
lods
or
loope
scas
sbb
or
lahf
aaa
xor
lret
pop
dec
dec
fisubrl
mov
adc
ds
fdivs
sub
and
popf
shlb
loop
les
enter
pop
into
mov
lds
pushf
lock
mov
cmpl
lock
mov
movsl
sahf
shlb
mov
adc
stos
rclb
scas
mov
js
cmp
xchg
cs
mov
cmp
test
jbe
mov
cs
adc
iret
icebp
pushf
dec
sbb
cltd
ror
bound
outsl
dec
adc
dec
mov
sub
pushf
or
inc
pop
rorl
aam
push
mov
and
mov
mov
adc
jge
insl
xor
sub
jo
xor
sub
cmp
cmp
jle
xchg
fisttpl
push
fneni(8087
outsl
stos
xchg
mov
leave
sub
add
add
push
ss
sbb
adc
fldcw
mov
std
std
and
mov
imul
dec
addl
push
mov
xor
xor
imul
cmc
xor
fdivs
cmp
inc
or
int3
mov
aas
cwtl
lahf
pop
in
int
push
pop
pop
shl
or
mov
pop
and
daa
test
mov
push
jns
sbb
test
test
dec
xchg
outsl
pop
push
int3
gs
and
dec
test
xor
pop
jbe
dec
outsb
stos
mov
popl
jp
jns
clc
es
int3
scas
in
jge
push
lret
iret
push
stos
xchg
xor
mov
mov
lahf
push
adc
mov
es
dec
addr16
adc
loope
mov
imul
subb
aad
jecxz
dec
add
push
out
arpl
les
scas
lds
cmpsl
pop
cmpsb
mov
lmsw
cli
lret
pop
dec
ja
sub
pop
pop
mov
icebp
mov
add
jno
roll
pop
fdivs
jns
xor
mov
add
aaa
popa
imul
xor
scas
xchg
cmp
ljmp
pop
lcall
xor
cs
sub
sbb
lahf
cmp
push
jg
mov
lahf
mov
sub
xchg
insl
into
add
imul
insb
imul
popf
push
pushf
js
add
xchg
jge
xchg
xor
mov
xchg
xor
push
mov
repnz
ret
jmp
mov
mov
roll
in
test
clc
rcl
adc
popa
mov
cmp
rolb
mov
and
fs
pop
xor
jo
sti
pop
cmp
jmp
leave
jnp
adc
cli
outsl
pushf
cmp
xchg
push
push
in
insl
sub
adc
pop
cmpsl
ret
pop
cmp
insl
test
shr
mov
mov
je
push
out
cli
jmp
and
jecxz
cwtl
fadds
xadd
stos
repz
sbb
das
mov
lea
cmp
or
and
movsb
lcall
insl
pop
dec
xchg
push
sbb
ljmp
push
xchg
mov
inc
cmp
inc
pop
leave
mov
xor
jl
std
scas
and
sub
push
addr16
jecxz
lcall
push
mov
data16
cltd
sbbl
push
je
mov
shrl
pop
mov
xchg
mov
or
stos
test
icebp
inc
rolb
mov
sub
pop
or
aam
push
rol
loopne
jge
testb
fidivrl
fdivl
pop
mov
test
adc
jns
pop
push
add
test
sub
jb
jecxz
out
or
call
jg
imul
and
sub
ds
das
xlat
les
in
dec
outsl
pop
in
stos
pop
popa
jge
lods
test
jcxz
sub
es
mov
or
fidivrs
loop
mov
orl
mov
mov
push
dec
cmp
je,pn
mov
aad
xchg
mov
jge
pop
enter
pop
mov
dec
or
leave
pop
mov
cld
and
enter
mov
inc
loopne
outsl
sahf
adc
addr16
or
in
sbb
cld
out
out
and
nop
pop
dec
sbbl
jns
rorl
xor
fdivrl
ja
jl
xor
mov
mov
pop
or
mov
pop
and
mov
push
pop
lahf
xchg
jo
jo
cs
mov
cwtl
sub
push
jmp
dec
js
and
mov
or
ljmp
sbb
mov
or
bound
ret
icebp
or
jo
xchg
lock
out
cmp
in
xchg
aam
fadds
and
je
dec
add
rcr
xor
pop
aad
lock
cmpb
cltd
scas
push
repz
out
leave
js
push
repz
test
call
notb
adcl
lds
es
add
adc
scas
cmpsl
out
push
rolb
popa
dec
shrb
mov
hlt
pop
sub
daa
movsl
adc
scas
fiaddl
xchg
pop
insl
out
hlt
or
movsl
roll
cld
and
fnstcw
mov
lods
orb
cmp
jge
jb
das
cmp
mov
pop
xlat
movl
sub
or
stos
sbb
fwait
sbb
jge
repz
leave
xchg
ficomps
mov
insl
scas
dec
mov
add
adc
push
mov
inc
fbstp
cmpsb
sub
jl
mov
xor
insb
jno
inc
pop
movsl
ret
int
push
mov
push
or
xor
mov
int
pop
pop
cs
xor
pop
cmpsb
rcrl
andb
inc
add
push
das
lods
cmp
xchg
jmp
les
inc
fucomip
mov
xor
jmp
rclb
adc
mov
and
xor
shll
dec
jp
cltd
mov
repz
loopne
inc
out
stos
inc
inc
sti
inc
sbb
jae
fsubs
out
gs
and
fwait
adcb
mov
mov
xchg
jmp
lock
pop
sub
mov
movsb
adc
sub
add
lret
add
xchg
lahf
gs
lretw
cmp
pop
xor
or
cmp
lds
mov
gs
dec
jmp
out
std
subb
cmp
mov
arpl
and
sbb
enter
cli
mov
cmc
pop
daa
xor
mov
mov
popf
scas
mov
fldt
int
movsl
dec
nop
mov
rol
mov
fidivrs
or
xor
xchg
sbb
cmp
mov
pop
in
push
cli
dec
std
das
mov
aaa
sbb
jecxz
cmpsl
inc
lea
mov
pop
mov
in
test
in
inc
jle
rorl
xchg
xlat
push
pop
cmp
pushf
inc
mov
vunpckhpd
inc
into
mov
mov
cmp
out
xchg
pop
ds
ja
les
mulb
scas
jne
sbb
dec
push
or
sbb
mov
jmp
data16
shll
jmp
mov
mov
outsl
or
les
mov
imul
xor
adc
xchg
xor
xchg
into
ficompl
mov
mov
das
test
mov
mov
arpl
pop
lahf
push
pop
mov
adc
aam
sar
rcr
push
addr16
pop
adc
cmc
lock
cltd
sub
aas
or
sub
mov
mov
mov
dec
scas
or
mov
gs
sbb
rclb
and
mov
push
pop
jl
mov
sub
jbe
mov
mov
aad
ja
loopne
add
pop
jne
rorb
adc
outsl
cmp
jbe
test
icebp
push
ds
mov
jns
xor
cmpsb
sahf
dec
sbb
pushf
outsl
cmpsb
dec
and
xchg
add
aas
repnz
nop
push
jnp
push
sbb
pop
aaa
dec
mov
int
mov
rclb
inc
push
and
mov
pop
pop
cmp
jmp
mov
rorb
push
sbb
mov
xchg
adc
fldenv
adc
pop
nop
jae
cmp
inc
pop
test
lcall
xlat
jle
lock
cmpsb
es
sahf
movsb
mov
xchg
pushf
pop
or
ret
xor
mov
pop
clc
and
lahf
bound
ficomps
outsb
push
fwait
outsl
test
fcmovu
les
fsubrl
pop
cmp
dec
sbb
inc
aad
adc
ss
pop
and
ret
bound
popf
mov
push
jg
sbb
repnz
fcmovu
imul
fisubrs
shrb
push
push
enter
sbb
mov
ss
dec
mov
lock
ficomps
call
ret
xorl
es
loop
mov
xchg
mov
mov
pushf
idivb
mov
fmuls
inc
je
in
call
mov
enter
dec
xchg
pop
test
sub
or
cld
cli
scas
movsl
fwait
fildl
mov
sbb
ret
pushf
pop
pop
mov
nop
sbb
insb
fs
inc
mov
mov
mov
clc
cmpsl
adc
stos
movl
add
xor
push
dec
mov
in
test
test
pop
test
and
inc
xchg
dec
loopne
mov
fisttpl
cmp
push
adc
aas
movsl
rcll
rcll
sub
xchg
dec
mov
repz
xor
xor
dec
lahf
in
sub
pop
notb
or
add
push
in
cmp
or
mov
in
push
jmp
clc
ds
cmp
push
xor
repnz
sub
adc
cmp
neg
xor
mov
pop
imulb
sub
and
lret
xor
in
push
push
int3
xchg
or
test
test
mov
push
mov
inc
mov
mov
mov
mov
pop
lret
and
inc
lds
mov
aas
jge
inc
mov
movsb
xchg
pop
jecxz
jns
daa
mov
andb
popf
in
addl
icebp
fiadds
xlat
jno
sub
xchg
mov
jge
inc
sbb
jno
fcom
inc
sbb
jb
pop
idivb
jne
cmp
push
xchg
loop
push
sbb
xchg
subb
test
jb
das
lds
fsubrs
ss
cwtl
imul
mov
out
xchg
adc
and
push
hlt
mov
dec
push
dec
jno
dec
aad
mov
push
adc
clc
jle
push
and
jnp
filds
sbb
std
leave
or
les
mov
data16
lods
pop
adc
mov
sbb
inc
fwait
xor
xor
shlb
and
enter
or
jmp
je
mov
inc
xlat
inc
mov
js
jle
sub
xor
shl
ja
mov
inc
adc
and
adc
sbb
add
jo
mov
mov
js
xchg
mov
add
int3
push
push
cmp
sbb
jp
add
ficomps
lods
fisttpl
jb
jb
mov
cmp
pop
idivl
rcrb
jp
jne
mov
cmp
mov
pop
hlt
clc
pop
dec
add
in
push
cmp
pop
loope
add
int3
push
or
push
inc
mov
inc
in
cwtl
sbb
mov
mov
inc
popa
fwait
idivl
push
or
pop
jo
pop
shrb
xor
sub
mov
mov
cmp
pushf
jecxz
sbb
xchg
rcrl
stc
jne
xor
cmpsl
adc
movsl
js
adc
inc
ss
jmp
inc
cli
out
and
repnz
ljmp
hlt
subb
push
bound
icebp
shl
mov
lock
iret
rclb
adc
add
mov
push
imul
pop
xlat
aaa
nop
pop
jo
sar
inc
test
pop
cld
add
dec
adc
dec
fcompl
movsl
xchg
mov
scas
sub
push
mov
outsb
inc
cwtl
in
mov
loopne
test
sbb
notb
into
call
jl
xchg
jne
aad
push
movsb
push
or
movsl
or
into
cmpsl
or
lods
dec
andl
mov
fdivr
jb
jo
lahf
jecxz
dec
adc
popf
mov
mov
pop
fdiv
push
sarl
mov
adcb
scas
adc
lds
pop
sub
sti
sar
sub
lock
daa
stc
mov
mov
rolb
or
sub
mov
movsb
in
lea
pop
sbb
dec
dec
cli
bound
lods
fldcw
rorl
je
call
out
dec
adc
ret
cwtl
jne
insb
inc
ja
mov
in
scas
push
ret
mov
loop
cmc
sbb
push
ja
xor
mov
ss
leave
inc
fstl
iret
mov
push
mov
fcmovb
sub
les
and
pop
jge
sbb
inc
lahf
push
mov
jle
inc
mov
pop
loopne
jo
insl
mov
out
mov
sub
lds
popf
icebp
cs
mov
cli
mov
out
in
movl
dec
mov
jecxz
sub
shrl
mov
sahf
dec
notb
leave
inc
pop
inc
mov
mov
inc
cmp
add
and
xor
fistps
dec
movsb
inc
mov
jp
gs
jecxz
push
sbb
xchg
sbb
cmp
sub
pop
jecxz
sub
jae
push
mov
mov
repz
add
aam
mov
shlb
push
stc
jae
mov
adc
sub
and
lret
and
dec
nop
test
fnstenv
dec
shr
xchg
mov
sbb
dec
mov
loope
fnstsw
xchg
sbb
sarb
fisubrl
dec
test
jge
out
push
push
mov
aad
xor
popf
xchg
movsb
or
pop
push
xor
subl
and
shll
mov
mov
xor
push
cwtl
loopne
pop
jle
jbe
lock
sbb
call
mov
hlt
arpl
js
lods
mov
push
mov
adc
insl
xchg
test
repnz
or
stos
xchg
xchg
popf
jne
cltd
in
xchg
xlat
es
outsb
nopl
jae
mov
jns
inc
add
leave
sti
inc
adc
and
and
jl
mov
pop
outsl
xor
xchg
movsl
and
add
orl
cld
xchg
pop
out
rolb
push
dec
pop
fstpl
test
jl
and
pop
pop
and
jae
sbb
int
arpl
sahf
imul
push
or
fdivrs
fstps
fistpl
push
outsb
int
xorb
outsb
jge
mov
rclb
mov
call
and
mov
divl
push
popf
mov
pop
mov
dec
jl
push
or
sti
or
ljmp
ss
cmp
cli
inc
test
vcomiss
arpl
andl
mov
subb
sahf
imul
pop
movsl
imul
or
jno
jns
mov
push
mov
aad
in
push
dec
jo
mov
lahf
and
hlt
cmp
lds
jp
std
sub
pop
or
notb
jmp
shll
int
mov
inc
inc
sti
jle
rol
mov
sbb
std
aaa
lahf
insb
mov
loop
ret
push
sar
in
xchg
icebp
xchg
jnp
outsl
aas
popa
imul
adc
dec
pop
adc
and
jl
bound
jno
movsl
add
aad
ljmp
xchg
ret
lahf
lcall
xchg
pop
push
ss
xchg
lret
cmp
sbb
dec
sbb
cmpsb
xor
repnz
int
repnz
mov
outsl
inc
mov
cmp
js
in
jp
mov
lret
sbb
add
pushf
repnz
xor
ret
out
xchg
shlb
fcoml
or
pop
stc
sub
roll
mov
sub
or
cmp
sub
sub
into
inc
xchg
jae
xchg
shrd
push
adc
call
or
cmpsb
shll
dec
add
push
sub
dec
or
call
outsb
jae
aaa
or
je
mov
sub
movsl
jno
sahf
int3
addl
movsb
insb
jbe
in
lock
fidivrs
xchg
xor
fs
jl
cld
push
mov
xor
mov
jecxz
or
testl
loope
out
adc
or
popf
insb
sbb
pop
push
cltd
das
ljmp
mov
inc
sub
lcall
out
mov
xor
jae
ficoms
mov
out
inc
adc
cmc
jo
push
sub
xchg
cmp
cld
mov
mov
dec
mov
in
or
xchg
in
mov
scas
jbe
js
mov
repnz
and
stc
jns
xchg
sarl
lock
aad
dec
mov
and
in
mov
pusha
js
in
jne
fld
ds
push
mov
sbb
xchg
ja
mov
lods
aaa
loop
dec
inc
cmpsl
mov
mov
mov
push
lods
data16
jno
loop
int3
clc
mov
lret
pushf
sbb
inc
sbb
mov
fcomps
jae
inc
adc
xor
lea
or
sbb
insb
js
or
lods
xor
inc
out
push
mov
insb
std
adc
outsb
sub
lods
sahf
mov
movsb
daa
ja
lods
adc
cmp
or
sub
mov
scas
jno
pusha
and
xchg
andb
shlb
xlat
fisubl
mov
pusha
pop
inc
clc
mull
mov
loopne
jge
loope
shr
dec
xor
pop
fidivs
xchg
mov
sahf
mov
fistpll
lahf
icebp
jbe
jne
rcll
data16
jle
int3
bound
jecxz
das
xor
and
inc
push
and
or
aam
mov
inc
ret
sbb
sub
jge
adc
mov
jl
fadds
cmp
and
push
shl
sub
inc
enter
loope
shlb
test
mov
into
push
cmpsb
les
in
or
inc
addb
pop
jle
nop
jno
pop
arpl
mov
pop
cmp
mov
cmp
shrb
sbbl
and
xchg
call
xchg
mov
xor
hlt
inc
dec
jno
stos
mov
ss
insb
cmp
stos
mov
cwtl
mov
sub
mov
movl
add
les
movsl
inc
inc
push
xchg
or
cmpsb
enter
test
cmp
ljmp
xor
rclb
xor
push
jmp
inc
mov
xchg
test
mov
cmp
xchg
xlat
movsl
push
bnd
or
dec
fdivl
std
adc
dec
loop
mov
pushf
mov
xchg
popf
pop
sub
jb
jo
scas
dec
jae
imulb
int
fwait
add
or
sahf
xchg
xchg
mov
lret
jo
adc
jg
jne
mov
mov
lods
sbb
fdivrs
mov
inc
pop
out
mov
fs
dec
negl
mov
insl
iret
or
jmp
xchg
or
lea
adc
jae
ret
rolb
icebp
leave
jl
insl
cs
shrl
cwtl
xor
call
lods
mov
and
lods
add
into
imul
push
add
push
js
mov
push
test
sub
outsl
in
sti
cs
jae
sub
push
les
adc
in
fwait
jae
cld
clc
gs
jmp
inc
pop
dec
dec
out
push
add
fldt
dec
outsb
loopne
std
push
mov
outsl
xorb
push
lcall
scas
hlt
repz
mov
lret
popa
into
xlat
and
lret
divl
in
aas
andb
jnp
clc
dec
push
fs
cmp
mov
pop
outsb
scas
enter
jnp
test
js
adc
lcall
xchg
inc
cmp
icebp
imul
xor
pushf
fdivrp
adc
ja
popa
sarl
ja
stos
hlt
lret
stos
enter
ret
sbb
pop
lret
cmpsl
fcmovbe
inc
cmp
imul
imul
aaa
int3
std
push
test
inc
sub
sbb
dec
adcl
mov
lds
mov
daa
lds
xchg
or
mov
mov
lahf
sti
or
xor
push
pop
fimull
lret
dec
sbb
sahf
fs
xchg
lock
flds
lea
in
imulb
push
enter
sbb
adcl
daa
imull
xchg
jno
pop
jnp
push
pop
sbb
mov
jbe
insb
mov
xor
and
test
ret
ljmp
test
pop
mov
insb
aas
sbb
xor
inc
insb
scas
adc
lds
mov
sti
push
sbb
jge
jo
in
xchg
pop
mov
addr16
xor
dec
mov
xor
in
fmull
push
data16
dec
and
roll
pop
je
dec
outsl
or
mov
cs
xchg
loop
adc
xor
xor
pushf
push
ja
pop
pop
cwtl
ds
in
and
sbb
xor
ljmp
lock
pop
out
mov
shrl
mov
jbe
sahf
fwait
ret
shll
sahf
mov
loop
out
xchg
push
test
xchg
fs
sub
cmpl
es
test
xor
shll
insl
scas
jne
adc
loop
out
sub
test
xorb
cli
mov
xchg
inc
loope
hlt
test
pandn
lahf
mov
pushf
jecxz
add
fiadds
cmp
add
sbb
mov
sub
insl
aad
cmp
push
pop
shll
mov
fsubrl
cmp
adc
xor
push
add
jbe
or
mov
call
or
add
dec
xorl
add
lret
xchg
iret
adc
bound
pop
and
sub
popa
rcrb
and
iret
call
scas
jecxz
push
xchg
mov
lcall
or
mov
sbb
sbb
inc
mov
in
sub
stc
xchg
jno
mov
and
inc
xchg
in
xchg
jg
movsl
cmc
pop
loopne
inc
jle
xchg
std
dec
fildll
mov
mov
and
ret
cmp
adc
xchg
adc
rcrb
adc
xchg
add
and
sbb
pop
ror
mov
mov
insb
mov
les
inc
push
iret
mov
dec
xchg
and
jo
mov
sbb
gs
mov
lea
and
shlb
adc
in
lock
aas
inc
jg
mov
and
mov
scas
cltd
mov
test
jmp
cwtl
sbb
push
adcb
cmpsl
ja
mov
int3
test
lods
or
daa
jl
stos
cltd
cli
inc
jecxz
iret
mov
cmp
lea
mov
dec
xor
aad
andb
push
rcll
fldenv
fimull
repz
jmp
push
inc
repnz
mov
fsubrl
pop
and
jle
sahf
jge
leave
ljmp
ffree
repz
mov
add
mov
and
add
rorb
add
lret
pop
rorl
mov
loop
subl
push
xchg
call
mov
jge
aam
paddsb
outsl
jb
ret
out
jmp
xor
pop
pop
xor
xchg
aam
mov
cmc
jle
sub
sub
jg
fmull
sbb
out
mov
lock
int3
xchg
fisttps
adc
test
cmpb
fdivl
sahf
incl
pop
adc
test
ss
dec
jne
xchg
lret
popa
pop
or
mov
mov
xorb
push
rcl
inc
and
mov
aam
pop
pusha
les
xchg
push
fs
cmc
adc
cmpsb
jbe
xor
sbb
and
mov
pop
cmp
out
dec
adc
pop
mov
cltd
loop
add
push
add
fimull
cwtl
rcrl
in
mov
cmc
cmp
xchg
aad
sub
push
push
lea
out
inc
out
xor
dec
popf
or
test
inc
jo
mov
add
ljmp
xlat
adc
addl
pop
add
fistpl
jns
or
mov
lock
mov
or
push
pusha
push
mov
in
pop
or
fldl
jmp
push
mov
xlat
jne
jnp
push
jge
stos
adc
jecxz
subl
out
mov
xchg
loopne
inc
cld
test
jmp
mov
pop
or
pusha
fs
xor
jmp
add
ds
cmp
add
addr16
sub
data16
std
push
add
mov
cmp
mov
nop
bound
inc
inc
incl
aad
adc
pop
mov
push
sub
push
lcall
lret
mov
icebp
jle
lret
out
mov
icebp
sub
add
mov
addl
dec
or
push
sbb
dec
mov
fstpt
add
mov
out
faddl
ret
lret
loopne
aam
push
fsub
lods
neg
cmp
adc
in
pushf
jns
ffreep
lahf
in
pop
mov
sbb
sarl
cmp
bound
mov
push
loop
and
cmpsb
jno
test
lods
fwait
and
lods
hlt
cmp
movsl
mov
test
mov
shl
icebp
jge
jp
fadds
jns
mov
jmp
int3
pop
add
push
aad
sub
lahf
sub
inc
push
add
pop
adc
xchg
dec
frndint
mov
inc
cmpsl
pop
xchg
add
lods
xchg
aam
push
repnz
popl
fs
in
sbb
push
sti
loop
cmpsl
xchg
subl
or
add
mov
ret
cmp
mov
or
unpcklps
cmovo
loop
xor
repnz
stos
xor
adc
inc
clc
cmpsl
lcall
mov
mulb
ja
jo
les
repnz
imul
mov
ss
jnp
out
jp
or
add
imul
clc
push
adc
mov
add
xchg
cs
out
mov
lods
ret
cmp
sub
repnz
sbb
xchg
pop
imul
in
shll
adc
sbb
sub
dec
mov
out
add
outsb
stc
out
sub
dec
test
adc
std
xchg
lods
in
and
jmp
movsb
mov
adc
mov
out
mov
mov
and
das
push
pusha
push
popa
mov
push
xchg
sbb
test
and
mov
sub
int3
add
mov
sub
jo
sbb
ljmp
add
lock
mov
sahf
leave
xor
adc
sbb
mov
mov
sbb
lea
int3
adcl
fcoml
imul
jno
adc
and
lret
and
xor
adc
fldt
xchg
lret
xchg
xchg
inc
and
dec
test
inc
test
xor
scas
cmc
dec
xchg
fsts
push
out
cltd
movsl
ret
pop
mov
mov
fnsave
xchg
das
pop
or
xor
cmp
push
mov
aas
lds
xchg
arpl
outsb
imul
je
bound
xchg
dec
xor
fwait
cwtl
push
add
aad
gs
mov
pop
add
add
sbb
xchg
roll
mov
sbbb
xchg
insl
loope
cwtl
cmc
or
sbb
out
shlb
xchg
cmp
dec
fcmovbe
xorl
rorb
inc
fs
mov
pop
dec
jp
jge
pop
pop
xchg
pusha
leave
shr
int
inc
add
loopne
push
data16
rolb
sbbl
fstpl
dec
cld
stos
scas
ss
loopne
sbbb
jns
push
inc
ss
fs
mov
sbb
xchg
xor
adc
arpl
outsb
mov
addr16
jl
rcl
jo
xor
pop
sub
xor
clc
cmpl
xchg
ss
jb
sub
incb
dec
mov
push
jge
xchg
test
and
rorl
mov
and
dec
popa
je
std
mov
lret
flds
push
pop
loope
lcall
jae
insb
add
inc
add
adcl
lods
push
sbb
push
push
into
cltd
and
xlat
or
iret
jo
jle
adc
and
jnp
dec
repz
fsubl
incl
mov
hlt
sbb
lock
sub
insl
mov
imul
pop
mov
inc
pop
dec
dec
lret
jg
sti
add
adc
xor
inc
sbb
fldcw
jecxz
in
test
cmp
or
sti
adc
jne
loop
sti
nop
shl
pushf
and
daa
or
or
cwtl
inc
jbe
lcall
cwtl
mov
loope
es
jp
fwait
cmpsb
inc
icebp
inc
mov
cmp
cmpsb
mov
add
inc
popa
out
dec
sbb
xchg
loope
sub
cld
cmpsb
xor
jbe
sub
inc
test
fs
shrb
lahf
ds
push
push
call
mov
cmp
cld
xchg
loopne
lret
mov
inc
call
inc
mov
loopne
int
pop
test
test
sbb
ret
test
jl
mov
jp
inc
les
mov
rcrl
mov
addb
popf
dec
fmull
and
mov
adc
inc
dec
jle
outsl
mov
pushf
pop
popa
mov
imulb
mov
fldl
js
adc
pushw
adc
sub
inc
dec
mov
cmc
dec
insl
clc
push
mov
aas
popa
in
sbb
ficoms
or
lahf
add
shl
mov
sti
clc
jno
clc
xor
xor
sub
adcl
loop
and
jae
inc
mov
sbb
int3
xor
or
push
rcrl
mov
push
ret
punpckhbw
adc
out
out
shlb
ja
xchg
dec
and
ret
ret
and
leave
lret
icebp
and
push
sbb
outsl
mov
cmp
fistpl
jo
lret
cmp
add
test
icebp
jmp
daa
xchg
push
test
lds
arpl
sub
or
cmp
jbe
sbb
fsubl
cwtl
inc
mov
jmp
adc
and
and
or
pop
popa
dec
mov
inc
and
data16
dec
dec
jmp
add
in
push
xchg
xor
dec
imul
cmpsb
fisubrl
jb
int
cmp
sbb
mov
aaa
sahf
pop
xchg
push
cmp
push
int3
add
jmp
adc
dec
adc
xor
js
pop
xchg
out
cmp
add
xchg
and
push
xchg
test
push
push
jge
ljmp
pop
das
push
and
xlat
data16
jb
pop
mov
rcrb
out
xor
dec
or
xchg
or
pusha
ret
scas
or
jb
insl
into
cmp
out
dec
jbe
xor
fsubr
aaa
ljmp
push
mov
aad
cld
das
fildll
test
and
cmp
xor
pushf
push
or
cwtl
fists
cmp
xchg
sub
cmpsb
xor
xchg
mov
or
push
sbb
jnp
fistps
dec
repz
or
rcrl
mov
dec
inc
daa
leave
mov
out
loope
scas
fisttps
lret
ja
push
mov
xchg
jo
bound
mov
fs
adc
xchg
fcoml
pop
lret
call
xor
orb
into
out
cli
xchg
pop
inc
mov
adc
das
xchg
pusha
lods
out
scas
movsl
adc
jne
ljmp
pop
fisttpll
pop
pop
push
and
sub
sahf
add
popf
or
insl
jle
add
scas
xchg
repz
xchg
fimull
scas
mov
repnz
push
jmp
add
xchg
xchg
bound
je
movb
xchg
push
scas
imul
xchg
xor
dec
push
cli
in
sub
cld
shr
or
rcrl
inc
cmp
mov
test
xchg
sbb
pop
jne
fisubrl
add
movsl
inc
and
xor
scas
pop
mov
mov
sbb
jle
fistl
out
scas
je
rcpps
mov
bound
stos
into
mov
and
mov
mov
lds
ret
mov
dec
dec
mov
xor
jecxz
stc
xchg
xchg
rorl
cmc
mov
js
mov
popa
mov
incl
pop
mov
sub
jne
daa
jmp
lea
pop
icebp
orb
cld
fsubr
pop
cwtl
cmc
aaa
push
shll
mov
lahf
mov
subl
gs
add
insl
inc
clc
mov
pop
push
xor
sbb
pop
mov
xchg
shl
pop
cmp
sarl
int
das
ja
out
push
stos
add
xor
mov
mov
mov
ret
mov
add
jo
ret
in
outsb
jae
xor
iret
cmc
cs
dec
stc
push
js
pop
lahf
jl
mov
cld
jmp
mov
adc
loopne
push
pop
scas
movups
in
xchg
mov
adc
cmpsb
mov
sbb
repnz
adc
and
std
jne
gs
je
loopne
pop
loopne
std
adc
movsb
bound
mov
mov
add
prefetch
mov
ja
out
lods
lods
or
cmp
andb
cs
xor
add
insb
mov
or
sbb
jecxz
andb
mov
lods
mov
and
cwtl
mov
jmp
in
into
stos
jae
sub
std
inc
aas
xor
popf
test
or
pop
push
jmp
mov
ret
sub
mov
jns
jbe
scas
jl
mov
cmc
xor
add
je
scas
add
push
xchg
jae
popa
scas
aam
sub
and
pop
dec
nop
rolb
add
rol
sbb
test
rclb
mov
ret
and
mov
ja
jle
xlat
movsb
sbb
invd
div
fisubs
test
stos
push
ja
sbb
pushf
ret
mov
lret
inc
push
or
in
imul
mov
into
pop
rorb
add
or
nop
jmp
xchg
inc
cmp
sbb
cld
les
jg
mov
mov
jo
sbb
and
movsb
fadd
jp
mov
test
int
ja
or
jmp
lods
rorb
mov
pop
subb
pop
add
loope
mov
scas
dec
push
rorl
mov
push
cmp
sub
lret
push
lea
xabort
sbb
cs
inc
loop
jae
sar
dec
jb
addb
push
loopne
out
loopne
mov
or
xchg
orl
addb
inc
push
or
jns
or
sub
mov
jb
cmp
xchg
cmp
mov
and
jne
mov
leave
fidivrs
in
xlat
jbe
movsb
lea
push
jge
mov
xchg
pop
mov
daa
push
pop
fisubs
int3
mov
repnz
das
test
sahf
lret
jnp
and
aam
jl
test
fwait
add
inc
inc
fcomps
sub
lret
push
aad
jl
and
lret
movsl
and
outsl
and
or
push
rcr
and
inc
xchg
movsl
cmp
cs
xlat
pop
mov
popf
push
out
add
scas
dec
add
fnstcw
or
test
lock
lret
jmp
mov
mov
inc
cwtl
sub
or
and
idiv
xor
mov
lret
movsl
xchg
mov
orb
push
bound
sbb
inc
jl
mov
dec
xchg
in
jns
cmp
movsb
loope
mov
cmp
push
testb
add
sub
outsb
jmp
adc
mov
sti
jge
sbb
mov
pushf
mov
xor
cmc
in
mov
fadds
add
fs
push
cmp
fstps
stos
pusha
push
xor
cmp
clc
or
push
and
fucomp
ljmp
or
sub
push
cmp
test
dec
ljmp
push
add
arpl
out
repz
mov
gs
xchg
nopl
stos
mov
mov
bound
fiadds
push
sbb
call
mov
sub
dec
sbb
cmpsl
and
add
fs
fadds
mov
cld
test
test
outsb
pushf
sub
jle
dec
iret
xor
scas
inc
ret
xor
push
loopne
mov
notl
fdivrs
adc
fs
scas
and
lret
mov
je
mov
xchg
cs
pop
mov
or
xchg
test
divb
fnstcw
push
push
jno
sbb
sbb
pushf
popf
fisubs
and
lcall
inc
lea
jecxz
in
xor
clc
cmp
lock
push
jmp
lret
fistpll
ret
lods
lea
fidivl
and
adc
insl
adc
and
inc
or
pop
mov
push
leave
push
jbe
and
scas
mov
scas
push
fsts
dec
or
shll
add
sarb
in
fimuls
jmp
fnstenv
in
pop
je
dec
mov
inc
cltd
push
loop
and
jo
jl
jle
sub
dec
scas
lods
xchg
mov
push
lods
cmp
js
add
scas
xlat
orb
sbb
jo
aam
idivb
mov
mov
lods
push
sahf
repnz
push
shlb
cmp
xchg
dec
xor
adc
rol
push
push
or
nop
xor
jl
mov
or
dec
inc
pop
frstor
ds
add
xor
push
sbb
clc
or
std
inc
jno
add
movd
test
sub
insb
jle
pop
loop
sysret
sub
cld
push
sub
push
mov
add
sbb
stos
push
mov
inc
adc
in
adc
pop
test
xorb
or
adc
sbb
lds
xlat
mov
inc
jne
in
je
lret
pop
cmpsl
sub
cmp
mov
adc
ret
and
mov
sub
dec
cwtl
in
mov
sub
inc
xchg
pop
add
dec
adc
mov
mov
inc
jnp
das
imulb
mov
imul
adc
popa
lret
jge
ja
inc
jecxz
insb
movsb
sbb
jne
xchg
jg
adc
lea
fisttpll
jb
cld
xor
adc
mov
addr16
sahf
cltd
and
or
pop
xchg
adc
sbb
inc
or
sub
mov
cmp
loop
or
pop
nop
lods
insb
sbb
mov
mov
das
add
xchg
mov
popa
add
fisttpll
mov
pop
rclb
adc
aas
imul
bound
dec
leave
daa
xlat
and
sub
mov
mov
xlat
sbbl
ror
lock
gs
cs
out
pushf
adc
nop
or
and
cmpsb
fcompl
xor
daa
mov
insl
pop
push
insl
push
das
push
in
into
aas
cs
sub
cmp
mov
push
cs
rclb
cwtl
aas
xchg
cmp
cmc
je
notb
repnz
mov
das
and
cmpb
icebp
add
ret
lahf
je
and
inc
les
pop
xchg
cmc
stos
dec
xor
pop
push
daa
fmuls
ja
sbb
inc
mov
vmaxss
rcrl
insl
xor
fwait
add
std
adc
iret
push
rclb
ljmp
push
mov
loop
cmp
dec
pop
popa
xor
pop
or
add
add
ja
add
test
or
lds
pop
and
popa
push
xchg
pop
pop
cli
lret
shlb
mov
mov
sub
lds
cli
ret
nop
xlat
xor
mov
aad
mov
mov
jmp
shr
inc
in
test
outsl
gs
sbb
arpl
cwtl
xchg
mov
rorb
cmp
fisubl
inc
pushf
add
add
imul
mov
cwtl
fwait
test
roll
flds
imul
insl
cmpsl
fcompl
fmull
idivb
inc
sbb
mov
push
jo
adc
mov
sbb
popf
or
sahf
jg
shll
mov
int
sbb
cltd
pop
sub
cmp
pop
lds
or
mov
dec
sbb
or
imul
add
xchg
pop
xor
lahf
nop
cmc
push
dec
nop
jecxz
movsb
jb
jbe
out
xor
mov
stos
xor
aas
and
outsb
ja
and
jle
inc
adc
jg
movsl
test
stos
add
dec
pop
sub
push
or
cmpsl
cmp
out
mov
dec
push
mov
mov
test
jns
and
add
loop
and
push
and
cltd
fcompp
pop
repz
insb
jo
mov
xchg
xor
push
push
stos
xor
dec
fimuls
push
loop
lock
mov
and
jbe
pop
mov
out
mov
jecxz
popa
arpl
sub
jl
addr16
push
mov
pusha
cmpsb
xchg
shr
rclb
adcl
cld
mov
mov
leave
icebp
sarl
lret
pop
pop
add
subb
dec
mov
outsb
fnstcw
xchg
icebp
adc
mov
mov
pop
sbb
sahf
xchg
and
data16
scas
aaa
scas
ret
pop
pusha
enter
popf
inc
sbb
mov
rcl
lret
jo
adc
adc
stc
sbb
mov
test
pop
mov
lock
and
scas
push
frstor
or
jmp
mov
pop
paddusb
inc
loope
aam
arpl
mov
ljmp
ret
and
push
cmp
xchg
xor
icebp
stos
push
insb
punpckhdq
insb
fs
sub
jg
pop
sahf
push
and
das
popa
sete
sbb
push
jno
jno
insl
mov
fcompl
sbbl
gs
pushl
dec
xor
pop
sub
sub
popa
out
stos
aas
xchg
adc
sub
subl
ljmp
dec
mov
mov
outsl
push
cwtl
out
mov
add
mov
sub
jbe
es
adc
mov
pop
pusha
scas
test
imul
aas
pop
aas
aaa
mov
inc
mov
clc
adc
cmp
fldenv
int3
pop
xchg
mov
push
arpl
jmp
and
fbstp
std
pop
in
push
or
test
push
loop
aam
cmp
mov
loope
rcrl
repnz
push
es
fs
jbe
or
jae
cmp
rsm
cmc
aaa
pop
imul
adc
and
iret
xchg
add
adc
fildl
xor
pop
sbb
enter
sub
and
mov
out
mov
in
and
xor
mov
or
push
not
std
mov
mov
sub
out
and
add
jno
push
cmp
sub
jno
pop
cmpsl
nop
ja
jne
inc
mov
sbb
es
das
add
pop
movsb
das
push
adc
jns
fldl
mov
mov
mov
mov
xchg
in
mov
cli
xchg
lret
jne
loopne
leave
dec
in
shlb
aam
mov
adcb
rcrb
push
cld
jg
lods
mov
adcb
push
inc
sub
enter
xchg
jno
cld
into
xor
cmp
popa
add
shlb
sbb
push
sub
mov
dec
ljmp
es
sbb
dec
fs
xchg
mov
out
push
dec
ds
sub
mov
ljmp
das
movsb
fwait
push
and
rorl
pop
push
fisubrl
mov
inc
incl
sarb
or
sub
rolb
sbb
je
scas
sub
and
add
jg
fstl
enter
cmpsl
cld
and
xor
shr
mov
lds
xor
aas
cmp
or
aam
bound
test
mov
mov
incl
movsl
mov
pmaxub
inc
arpl
sbb
mov
mov
mov
push
inc
inc
push
shlb
push
fcmovbe
in
pop
dec
faddl
push
jecxz
pop
bound
push
xchg
pop
test
lret
jmp
mov
and
fwait
mov
jbe
sub
fnstcw
push
mov
cmp
xchg
inc
inc
mov
dec
sub
pop
loope
add
push
cs
idivl
stos
push
test
xchg
cmpsb
pop
mov
lods
pop
cmp
add
jmp
sub
dec
mov
jl
loop
es
gs
cs
add
sbbl
imul
sbb
adc
inc
pop
ljmp
jne
cmp
adc
cli
or
and
movsl
addr16
sbb
xor
mov
push
push
mov
clc
push
stos
out
jmp
movb
pusha
bound
or
hlt
fwait
add
aad
hlt
std
dec
dec
cs
jne
push
add
ud0
inc
and
out
push
pop
dec
lods
jo
movsb
and
loop
mov
xchg
inc
int3
dec
push
cmpsl
sti
in
mov
sub
xor
hlt
fcoml
into
add
or
loop
xchg
in
movsl
xorb
mov
inc
loopne
cmp
int
jmp
dec
and
in
aas
mov
sbb
lret
add
mov
add
lods
pushf
orb
fstpt
mov
mov
stc
and
adc
ret
int
xchg
push
pop
mov
lahf
nop
mov
popf
stos
imul
push
es
adc
movsl
cmp
shll
pusha
mov
mov
mov
ds
lods
mov
or
mov
fistps
adc
outsb
jmp
out
dec
mov
jae
push
cmc
push
out
jnp
mov
pushf
xchg
jno
mov
cmp
mov
lock
je
outsl
cli
insl
cmp
cmpsb
nop
sbb
sbb
mov
into
xlat
out
std
jno
add
cmp
outsb
sub
ljmp
push
clc
loopne
lods
mov
aaa
or
adc
out
jp
pusha
in
daa
xchg
ficoml
inc
outsb
mov
loope
mov
ret
sbb
xor
push
push
dec
out
or
in
or
inc
addb
mov
adc
cmpsb
mov
loopne
adc
lods
test
mov
scas
mov
cmpsb
mov
sar
aam
aaa
inc
faddl
mov
movsb
sub
fwait
pop
sbb
push
ret
dec
shrb
lcall
lock
clc
in
repnz
xor
push
and
inc
dec
test
loop
cld
cmp
xchg
add
inc
push
adc
andl
jp
fstpl
jbe
jle
fstpt
xor
je
inc
jle
mov
push
mov
dec
lods
in
xor
or
cmp
dec
xchg
sti
fsubl
xchg
xor
mov
inc
push
mov
sub
gs
das
ja
enter
inc
jge
jo
jmp
adc
daa
fiadds
and
or
add
jb
mov
push
pop
test
dec
outsb
fsubs
xchg
cld
lret
test
adc
stos
mov
inc
and
sub
bound
out
mov
ljmp
aaa
push
lods
or
xorl
jne
in
push
push
push
aad
dec
arpl
pop
ret
add
push
repz
jp
dec
jmp
cltd
rcl
fisubs
xor
add
sub
in
sub
movsl
push
lret
ret
aam
push
shll
pop
ffreep
push
or
mov
cld
xor
faddl
push
xchg
cmc
dec
sub
mov
sbb
push
mov
pop
or
cmp
add
mov
std
movsb
ds
pcmpgtd
pusha
jns
dec
mov
repnz
sub
fstpl
pop
pusha
inc
jl
jns
jnp
xchg
call
dec
incb
xlat
mov
cli
pop
mov
mov
pop
icebp
cmp
push
movsb
insl
fstps
sbbb
das
ss
sti
hlt
push
scas
sub
sub
popa
dec
cmp
xor
loopne
ss
or
inc
ds
pop
faddl
outsl
jo
cmpsl
mov
mov
sbb
mov
dec
pop
and
insb
add
and
push
push
add
and
mov
mov
push
sub
fisubrl
and
es
roll
jns
negb
out
push
stos
pop
fs
push
sub
xchg
sbb
push
push
pop
fst
shl
mov
add
shl
cwtl
cmp
mov
test
stos
outsl
mov
popa
mov
pop
or
out
loopne
mov
in
xchg
lahf
push
xor
mov
pop
enter
push
loopne
sbbl
cltd
setge
xor
test
popf
add
mov
and
mov
or
push
into
dec
inc
int
ret
push
sbb
xchg
sbb
mov
push
loopne
push
pop
sub
dec
adc
out
push
jns
loop
lret
xchg
out
sbb
sub
aaa
icebp
fistpl
js
cltd
imul
pop
test
mov
mov
lods
xchg
inc
pop
lods
sub
ror
loopne
out
pop
mov
outsl
pop
clc
int3
std
adc
push
cmp
jge
adc
inc
data16
cmp
or
push
pop
lds
sahf
jne
lret
lret
loop
movsb
in
jle
mov
pop
pushf
test
adc
mov
mov
pop
jmp
pusha
dec
stc
out
lfs
adcl
test
and
out
and
push
sbb
test
cmp
pushf
bound
out
imul
push
cmp
rcrl
stc
push
call
js
push
adcb
and
jnp
mov
add
and
mov
in
sub
shrb
movsbl
cmp
mov
enter
pop
add
pop
dec
stc
xor
jbe
aad
pop
mov
or
jg
in
pushf
rclb
jle
mov
std
rcr
lods
jge
pop
mov
lret
sub
add
xchg
xor
pop
jge
pop
ljmp
fstps
sub
cmp
cmp
fildl
xchg
cmp
loopne
push
jnp
sub
adc
jmp
pushf
aaa
imul
mov
mov
loopne
sub
punpckldq
repz
mov
jle
xchg
lahf
push
std
add
and
pop
inc
xor
push
and
add
inc
decl
sahf
mov
movsb
push
fnstsw
and
mov
inc
xchg
leave
addr16
pushf
loop
cs
xchg
push
cli
insb
mov
add
pop
add
ljmp
mov
mov
mov
sub
jno
xor
daa
movb
cmp
cmp
call
jge
fsubs
xchg
sbb
int3
pop
xchg
les
mov
test
test
or
mov
iret
sub
adc
aad
inc
mov
test
xchg
pusha
inc
imul
ja
gs
js
fimull
ret
xchg
add
inc
xor
mov
xor
xchg
cmp
dec
mov
pop
ret
mov
insb
lret
jp
inc
aaa
cmp
inc
mov
pop
lock
fnsave
inc
std
mov
mov
xchg
jbe
pop
inc
push
inc
je
cmp
jae
jecxz
ret
cmp
mov
jo
sbb
lods
mov
clc
lret
sbb
xchg
dec
ds
add
jmp
xlat
adc
mov
inc
fwait
les
xchg
mov
mov
adc
add
mov
sbb
mov
test
pop
outsl
xchg
xor
push
cmp
es
icebp
mov
gs
ret
xchg
je
aam
mov
lret
dec
arpl
or
popa
outsl
mov
dec
popa
cmp
test
movsb
xor
out
push
idivl
cmp
jb
xchg
inc
and
sub
repz
sub
jae
mov
push
xchg
imul
out
test
ljmp
cmpsb
sub
test
cwtl
pop
cmp
push
nop
adc
cltd
add
aaa
cmp
jns
pop
cmpsl
xor
repz
push
add
push
out
mov
xor
movsl
cmc
fbstp
mov
jmp
adc
in
dec
arpl
xchg
or
push
jecxz
mov
fs
sbb
and
ret
scas
das
into
and
adc
cmpl
xchg
push
cmp
jg
fucom
daa
fs
icebp
shlb
adc
xchg
fsubrl
mov
outsl
mov
iret
push
and
pop
divb
add
movsb
lcall
lcall
clc
adc
pop
sub
mov
dec
and
in
adc
xlat
test
jbe
cmc
sub
aaa
int3
push
inc
or
lcall
test
jge
loop
jmp
add
in
cli
lods
pop
pop
or
lds
xchg
dec
in
stos
int
push
mov
repnz
push
push
sbb
lock
std
orl
or
sarb
xor
push
add
and
cmpsb
and
in
ljmp
lahf
mov
mov
ficompl
cs
fildll
cltd
faddp
adc
sbb
jbe
lods
xor
or
mov
hlt
pop
loope
std
xchg
sub
nop
fisttpl
mov
inc
insl
das
subl
ljmp
mov
sbb
inc
or
faddl
push
scas
flds
jo
mov
or
bound
xor
lahf
xchg
cmp
mov
rcr
lock
icebp
fdiv
mov
outsl
je
xor
loop
cmpsl
inc
xchg
mov
and
scas
repz
imul
push
cmp
pusha
adc
shrb
or
ja
cmp
mov
je
addl
aas
cld
sub
mov
cmpsb
mov
ja
roll
push
or
mul
popa
int3
adc
mov
stc
outsl
sub
loopne
movsb
push
jae
adc
cmpsl
inc
jg
aaa
sbb
call
mov
icebp
inc
hlt
dec
loopne
rolb
xchg
xor
jecxz
cmp
test
out
lret
mov
mov
xor
xor
cli
pop
and
sub
push
lret
dec
inc
xchg
add
xchg
dec
loopne
xchg
leave
xchg
dec
jne
das
xchg
mov
xchg
mov
inc
sbb
cs
sub
mov
cmp
ret
xor
imul
shlb
lret
xchg
mov
popf
sahf
mov
push
mov
insl
pop
xor
cmp
push
pop
cli
imul
aad
cltd
inc
jb
push
jb
sub
push
sbb
cltd
or
cwtl
movsl
test
popf
and
ret
xor
cld
imul
cli
cmc
out
repnz
int3
in
xlat
ja
lea
add
sub
mov
mov
xor
sbbl
or
sbb
inc
add
fisttpl
enter
ret
add
test
jg
push
mov
cmc
and
sub
pushf
icebp
outsb
mov
stos
jp
std
pop
push
push
push
adc
repz
ss
xchg
adc
int3
mov
mov
andb
lds
or
mov
fisubs
fwait
push
xchg
xchg
push
ffree
ret
inc
out
mov
lds
pusha
push
push
push
jp
jnp
int
ds
js
cmp
adc
push
push
insb
xchg
mov
outsl
pop
mov
and
pop
shlb
jmp
fisubrl
pop
xchg
popf
and
fistl
or
aam
sub
mov
dec
dec
inc
in
mov
jge
mov
leave
gs
or
jne
outsl
fcompl
mov
lcall
cmp
xlat
rcr
sub
das
or
push
dec
ror
subb
jns
cld
mov
sub
jae
test
push
lret
jns
jb
dec
sbb
or
mov
adc
and
xor
fs
lea
subb
mov
or
xchg
push
cmp
sbb
cli
pop
in
jo
xchg
test
cmp
inc
in
cwtl
sbb
or
lods
push
aad
dec
adc
aaa
es
in
ja
cli
mov
jbe
cmp
jle
int
aaa
sbb
leave
loope
jbe
or
mov
xor
xor
shll
inc
jns
dec
sbb
fs
and
mov
mov
add
pushf
lods
imul
push
sub
xchg
xchg
sar
cmp
xor
adc
jmp
les
xchg
mov
js
or
add
sti
stc
sti
or
scas
xor
xchg
cmp
das
xchg
mov
loopne
xchg
mov
hlt
push
cmp
lret
add
cwtl
loope
out
sbb
pop
sti
dec
fidivl
inc
lret
aad
lock
jg
add
insb
jnp
push
mov
lcall
out
mov
mov
jle
cmp
xlat
adc
dec
dec
scas
ja
test
or
sbb
cltd
fucomi
sbb
cltd
mov
dec
pop
inc
out
mov
out
les
stos
mov
cmp
popa
lods
filds
pop
dec
stc
repz
shrl
jno
lods
das
adc
aam
aas
jmp
jno
scas
inc
cmpsb
in
in
dec
inc
jb
or
xlat
ficompl
out
cmp
xchg
call
pop
xchg
sbb
in
int3
push
add
fmul
add
xchg
ljmp
or
xor
xor
sahf
mov
inc
aam
xorl
xor
call
shlb
ror
add
stc
cltd
aaa
stc
jno
in
cmpsb
xchg
inc
inc
push
mov
pop
aam
fiadds
jecxz
lea
aam
xor
push
push
mov
outsb
mov
sarb
xchg
xor
xchg
cld
add
dec
xlat
aam
imul
les
jns
aas
mov
mov
fmuls
hlt
mov
cmp
mov
repnz
loop
repnz
fs
ja
sub
sti
fldl
scas
ret
inc
push
repnz
fimuls
jns
sbb
sti
imul
ss
mov
inc
int
sub
jnp
dec
sbbb
das
mov
aam
stos
sub
pushf
arpl
leave
pop
mov
lods
in
gs
fnsave
sub
outsl
fwait
push
outsb
push
std
insb
sub
inc
stc
pop
ret
xor
sub
and
adcl
ljmp
push
insl
inc
ljmp
ret
int3
sub
hlt
insl
js
mov
or
mov
sbb
dec
int3
cmpsb
or
lcall
add
dec
jle
mov
jb
hlt
cld
mov
jg
test
push
insb
popa
jo
ja
loop
mov
mov
std
xor
fnstcw
jg
mov
pusha
ljmp
pop
int3
push
imul
mov
mov
in
sahf
adc
loopne
and
test
push
or
shll
push
test
in
sbb
push
cwtl
repnz
aad
inc
jl
push
mov
ds
mov
rcrb
fcmove
iret
inc
add
hlt
adcb
xor
cmp
push
out
xchg
fsts
jns
cs
aas
jge
out
or
and
xchg
dec
out
xchg
xlat
xchg
daa
popf
aam
sbb
loope
push
inc
sub
fdivrp
outsl
scas
add
out
fcmove
inc
xor
dec
cmp
fdivr
dec
xchg
sbb
push
and
rclb
js
out
mov
mov
fwait
add
inc
xor
pop
or
add
sbb
cmc
in
andl
rclb
scas
or
push
jmp
pusha
rorl
fucom
imul
into
mov
jnp
push
dec
and
pop
insl
jecxz
sub
sbb
daa
mov
mov
mov
ret
cmp
je
fisubrs
jns
and
add
aad
dec
push
sahf
xchg
push
cli
mov
pushf
mov
adc
sbb
call
sub
aaa
ret
stos
adc
cmp
xor
jnp
sub
mov
pop
xor
ret
jg
ljmp
mov
cmpsl
pop
dec
out
mov
jb
fcompl
scas
adc
sub
adc
in
mov
inc
jmp
nop
push
push
mov
pop
js
jae
sbb
daa
lds
out
push
jle
jnp
push
rorb
insb
mov
imul
lret
jge
in
icebp
xchg
imul
mov
pop
pop
fidivs
arpl
in
xor
fadds
out
dec
pop
test
xchg
pop
mov
iret
sub
cmp
and
cld
jg
fldl
or
popa
xchg
dec
loopne
mov
lds
xlat
adc
mov
loope
mov
inc
repz
mov
xchg
iret
bnd
adc
jmp
cmp
xchg
dec
push
jle
mov
in
mul
mov
jns
pop
mov
inc
mov
aas
jns
cmp
and
lcall
adc
pop
or
inc
movsl
rol
lock
testl
test
clc
and
in
and
loopne
mov
hlt
dec
dec
xor
mov
test
pand
cmp
imul
pop
or
or
inc
stc
daa
in
pop
and
frstor
out
cmp
dec
xor
movl
das
jl
mov
cmp
mov
pop
add
cli
in
fwait
sbb
dec
xchg
pop
stc
mov
xor
cmpxchg
in
test
sti
pop
into
inc
xchg
outsb
idiv
xor
adc
sbb
bound
pushf
cmp
mov
sub
mov
sub
adc
ss
lock
push
mov
jnp
add
gs
cmp
lcall
ja
clc
cs
cs
mov
popf
sahf
push
into
sbb
fucomp
pop
loopne
or
jns
mov
jae
js
dec
and
repz
notb
test
add
mov
xor
pop
push
adc
inc
lds
ret
cld
subb
sahf
addb
sahf
inc
je
fistps
push
mov
pusha
lea
mov
mov
test
shl
lcall
sbb
cwtl
pop
sahf
push
jb
into
inc
jno
movsl
xor
dec
decl
shrl
cltd
fmulp
xchg
into
mov
sub
sbb
subb
out
jb
mov
xchg
data16
stos
pop
fs
sbbb
xor
adc
inc
int
mov
or
xor
enter
add
jecxz
and
xchg
cmp
ffreep
pop
dec
loopne
xchg
jo
cmpsl
sti
mov
push
jmp
adc
adc
cmp
xor
insb
insb
jae
cmpl
cmp
test
enter
loope
sub
jb
cmp
pop
pop
jnp
add
sbb
and
clc
or
lea
mov
mov
fsubrs
xor
dec
adc
xchg
fucomi
pop
jg
sub
push
push
imul
fisubl
mov
and
movsb
mov
inc
mov
dec
mov
and
pop
std
pop
dec
cmp
lahf
lock
popf
sub
sahf
pop
or
test
jle
lcall
outsl
lret
push
pop
loopne
mov
out
leave
push
mov
sub
xchg
adc
sub
pop
ss
jecxz
push
xchg
fwait
rol
loop
repnz
mov
orl
imul
sub
cmp
adc
cltd
cmc
push
insl
sub
std
repz
push
or
and
ds
xor
pop
xorl
out
mov
test
es
dec
push
push
jle
pop
cmp
loopne
sbb
test
mov
out
rclb
shl
push
mov
push
push
xor
and
cmp
push
cltd
lods
dec
mov
or
push
imul
push
cmp
xchg
jne
mov
cmp
sub
mov
mov
sub
push
aas
xlat
pusha
out
out
pop
dec
stc
daa
dec
sub
out
jl
dec
fisubl
pop
call
pop
mov
mov
xchg
mov
dec
adc
loope
mov
sbb
jle
cmpsl
pop
sbb
out
and
xchg
jns
mov
sub
jg
mov
and
cmp
lret
cmpsb
mov
fwait
jecxz
movsb
sub
pop
mov
out
cmp
adc
repz
lcall
popf
push
aas
insl
lret
push
inc
cmc
mov
mov
dec
and
shlb
adc
push
push
pop
sbb
in
inc
out
not
scas
scas
lea
xchg
jecxz
ja
pop
or
cltd
adc
add
imul
and
test
xchg
xchg
stos
sbb
inc
rclb
enter
fwait
xor
out
les
mov
and
cmp
mov
mov
dec
inc
xor
aas
imul
iret
popa
xor
mov
js
sbb
mov
popa
addr16
sarb
xlat
sub
movsb
out
les
dec
notl
xor
pop
adc
adc
nop
inc
call
pop
loop
pop
mov
mov
sbb
mov
fisttpl
rorl
loopne
dec
push
or
adc
xchg
int3
jb
std
mov
pusha
and
lahf
ss
push
mov
mov
mov
mov
sti
cs
into
lock
xchg
jno
xor
sbb
cmp
sbb
test
mov
ror
push
mov
popf
cltd
jnp
sbb
sbbl
xchg
mov
push
lahf
into
sbb
add
jle
push
pusha
stos
insl
pop
out
xchg
cwtl
cmp
ret
out
call
sbb
adc
mov
pusha
sbb
mov
sub
repz
mov
shll
and
adc
mov
xchg
test
out
scas
out
sti
xchg
mov
fs
insl
testb
mov
push
bound
dec
cmc
sbb
bound
iret
push
xor
add
jl
sahf
outsl
push
fcoms
xchg
testb
xchg
xor
fistpll
xor
shlb
cmc
lahf
cmp
sahf
mov
shll
push
mov
cmpsb
mov
lret
lods
dec
mov
or
inc
ss
xchg
idivb
adc
lods
sbb
cmpb
inc
aaa
sbb
in
add
xchg
or
push
stos
jbe
test
pop
jnp
and
popa
dec
daa
jecxz
mov
sbb
clc
xor
scas
ljmp
mov
adc
popl
cmp
stc
fcom
mov
mov
cli
xor
push
cmp
inc
add
xchg
ds
imul
mov
test
into
xchg
mov
aad
pop
outsl
cmpsb
jecxz
aas
pop
sar
jmp
lret
and
jp
inc
fsts
add
adc
push
mov
xchg
and
lock
mov
inc
sar
roll
idivl
xor
je
mov
mov
es
sbb
mov
jbe
mov
fcomi
enter
jge
cltd
mov
adc
iret
daa
rclb
lods
add
fstpt
xor
inc
xor
xor
int
or
sahf
pop
xor
xor
outsb
xor
and
cmp
xchg
popf
push
dec
out
inc
sbb
adcl
pop
pusha
xlat
mov
cwtl
xor
loopne
js
sbb
cltd
add
sub
mov
sbb
jbe
imul
gs
sahf
rclb
xchg
jb
sbb
or
fwait
mov
bound
lret
mov
mov
loope
gs
cmc
add
aaa
sahf
adc
pop
dec
les
cmp
filds
mov
fistps
repnz
fistl
jns
dec
lods
pop
jne
mov
jecxz
aad
push
mov
out
or
dec
cmp
mov
dec
adc
lea
mov
dec
inc
fidivs
and
mov
sub
int
sub
inc
sub
xor
mov
pusha
imul
out
jmp
xchg
out
testb
xchg
pop
push
jecxz
inc
dec
xor
call
mov
cmpsb
add
test
cmp
push
dec
pop
cmp
mov
push
rcl
cmp
mov
jno
xchg
aam
ffreep
xchg
pop
inc
pop
fnstcw
ss
cmpl
cmp
rcpps
andb
push
mov
sub
imul
addr16
and
jnp
mov
andl
stc
adc
shll
xchg
out
jecxz
and
jmp
outsl
cltd
in
pop
les
xchg
xchg
or
mov
ljmp
sub
pop
scas
cmp
mov
or
mov
in
push
mov
insl
xchg
or
and
mov
mov
dec
mov
mov
mov
push
ja
loop
shl
push
jp
enter
lret
fsubrs
inc
into
push
repnz
nop
fcomps
std
ljmp
push
repz
push
idivl
mov
jp
imul
dec
mov
mov
xchg
aas
jg
push
mov
sub
rorl
pop
pop
test
mull
jg
idivl
xor
mov
or
ret
and
pop
or
xorl
adc
mov
repnz
sbb
mov
lock
int3
dec
jne
push
or
pop
fnstcw
and
ret
mov
xor
add
mov
imul
push
stos
adc
cmpsl
repz
xchg
les
mov
scas
fmuls
fstl
adc
nop
pop
xlat
imul
sbb
shll
xchg
pop
push
cltd
shrl
decb
and
popf
xchg
mov
in
mov
pop
dec
pop
xchg
xchg
das
mov
inc
arpl
in
jae
jp
push
xchg
mov
push
out
lahf
and
sbb
out
pusha
aas
cs
xchg
push
sbb
jl
push
std
iret
xor
das
mov
stos
pop
shlb
sbb
jbe
inc
add
lcall
adc
popa
xor
mov
leave
cmpsl
sbb
jp
in
and
shrl
mov
xchg
shrl
mov
mov
sub
imul
mov
sbb
js
mov
lds
fmuls
jae
cmp
or
mov
and
pop
mov
mov
cmp
aaa
xchg
nop
add
movsl
enter
decl
es
fsub
inc
mov
jae
mov
and
test
pop
and
adc
int3
ret
pop
test
out
mov
mov
aaa
inc
push
mov
sbb
cmpsl
lcall
and
mov
and
test
adc
push
enter
sub
fistpl
les
inc
repnz
push
les
dec
push
sbb
jle
loopne
adc
addr16
sbb
add
lds
push
shll
push
cmp
or
pop
jns
cltd
add
not
fdiv
dec
out
lods
hlt
push
bound
cmpsl
inc
pop
leave
out
sub
movsb
leave
ds
push
fistl
mov
jo
into
fdivr
out
jmp
stos
sub
movsb
stc
iret
fsubs
mov
jns
cmp
jecxz
dec
popf
ja
xchg
iret
push
aad
mov
mov
mov
cmp
movsb
aam
jmp
scas
inc
mov
jl
push
adc
jp
dec
jbe
data16
das
jp
ds
mov
mov
jg
push
xchg
xlat
fistl
pop
fdivrp
pop
cmp
cwtl
out
ror
adc
popa
int
inc
aaa
push
dec
mov
clc
add
mov
cmp
adc
cmp
jne
jns
xor
in
dec
jle
xchg
jl
jno
dec
mov
es
jl
mov
cmpsb
inc
push
ss
int3
lret
dec
mov
imul
inc
into
jg
xor
sbb
sarb
imul
cmp
push
push
rorb
aam
sbb
or
shlb
aas
cld
test
lock
or
shll
movsb
xor
or
jno
inc
pop
in
mov
stos
lds
mov
xchg
inc
mov
lcall
push
mov
enter
iret
imul
dec
gs
push
fadds
mov
add
cmp
pop
adc
lea
sbb
jne
shlb
stc
int3
mov
dec
mov
push
add
add
fisttps
out
cmc
ljmp
or
adc
inc
popf
or
sub
cmp
aas
jo
push
jp
mov
xor
adc
in
lods
add
loopne
cmp
mov
repnz
andl
and
movsb
lods
cmp
jecxz
fwait
pop
push
outsl
adc
or
dec
pop
mov
outsb
sti
push
push
pop
or
mov
enter
fmuls
or
push
iret
mov
and
push
and
or
add
sub
and
inc
lret
aaa
push
push
add
xor
inc
cmp
xchg
scas
lds
pushf
movsb
xor
adc
mov
cmovno
ret
sbb
sub
stos
or
test
lock
adc
cwtl
pop
cmp
sti
pushf
lea
sbb
pop
aam
notb
mov
fldt
rcrl
xchg
loop
xor
jb
dec
mov
cwtl
add
adc
lds
in
mov
es
outsb
mov
mov
dec
mov
mov
or
fstpl
outsl
shll
jl
push
pop
in
in
and
std
or
cmp
popf
or
cmp
xchg
pop
cli
dec
scas
test
push
dec
inc
mov
je
aam
sub
inc
lret
in
jge
or
jmp
cmp
or
mov
push
sbb
push
pop
dec
lods
adc
pop
pop
jl
sub
es
div
fsts
not
xlat
sbb
pop
out
push
sbb
dec
imul
ljmp
cltd
sbb
popa
mov
sbb
cmc
aad
sbb
repnz
xor
lea
push
and
xor
daa
nop
insl
fists
dec
cli
popf
mov
mov
push
rorl
push
xor
popf
xchg
rolb
mov
mov
push
lcall
cmp
cmp
mov
call
mov
fmul
out
sub
or
loope
xchg
push
sub
std
pop
sti
outsb
inc
or
fcmovnb
jmp
imul
test
enter
sub
sbb
pop
rorl
es
js
jmp
sub
xlat
lds
jne
inc
adc
mov
loop
aad
cmp
cmp
fdivrs
daa
mov
daa
cmc
mov
xchg
gs
fldl
add
ret
sbb
add
dec
clc
or
mov
push
dec
int
cmp
jbe
int
test
inc
fimull
push
xchg
jo
jb
int
jns
es
mov
mov
insl
push
popl
scas
pop
push
fs
sbb
movsl
sub
jmp
cltd
cmp
jo
push
inc
xchg
sbb
std
add
hlt
add
mov
cmp
xor
stc
lods
jmp
ljmp
inc
lea
pop
push
or
jne
sbb
fimuls
sub
arpl
add
icebp
fs
jmp
cmp
lock
iret
jmp
xchg
xchg
ret
mov
nop
pop
std
hlt
dec
div
scas
or
or
push
adc
stos
je
test
mov
and
sub
psubsb
sub
pop
xor
inc
es
jo
mov
into
imul
fnsave
adc
push
xchg
push
jl
fnsave
mov
mov
mov
add
cmp
push
mov
mov
cmpsb
jmp
lock
test
adcb
mov
cmp
mov
lods
addr16
add
cmp
pop
gs
mov
jmp
mov
pop
add
pop
inc
mov
push
dec
mov
sub
cli
add
data16
add
lods
mov
push
mov
in
leave
data16
pop
dec
mov
jge
mov
mov
out
insl
pushw
lret
mov
sub
hlt
jle
adcl
ret
jge
sbb
pusha
adc
pop
inc
cmp
inc
add
jno
add
dec
lcall
dec
sbb
repnz
test
out
and
enter
test
mov
lret
jmp
lcall
mov
inc
fmull
or
push
imul
icebp
call
jle
mov
add
push
cmpsb
mov
mov
xchg
mov
dec
jne
mov
adc
jbe
pop
testb
xchg
xchg
cmp
or
out
fs
adc
mov
mov
jo
imul
sub
mulb
cmp
mov
add
rcrb
cmp
adc
xor
xchg
shr
mov
fimull
or
loop
jmp
fisttpl
mov
cmp
pop
pop
fdivrs
mov
dec
mov
int
sbb
pop
cltd
mov
in
add
jp
jl
jge
xor
push
mov
cmp
imul
adc
xor
push
mov
push
pop
inc
les
or
scas
pusha
dec
adc
pop
add
jecxz
shrb
xor
enter
fld
cmp
cltd
mov
sti
sbb
adc
add
das
movsl
enter
inc
jecxz
mov
mov
sub
outsl
jns
sub
dec
stc
icebp
adc
jecxz
adc
push
ss
push
out
popa
fsubl
jbe
fisubs
dec
adc
pop
in
adc
fmulp
icebp
push
fxch
lret
jnp
add
pop
insb
mov
adc
aaa
movsb
inc
call
dec
fldenv
cmp
push
xor
add
sbb
mulb
sub
or
popf
daa
cs
loope
inc
sarl
xchg
or
inc
xor
jne
scas
into
adc
je
out
ficoms
cmp
iret
outsl
ret
clc
xor
cld
loop
push
mov
enter
add
jl
das
pop
cs
out
pop
or
pop
dec
ret
mov
bound
out
sti
in
jnp
hlt
jl
lcall
push
xchg
jb
xor
int
mov
mov
rolb
and
lock
sbb
lods
test
mov
mov
mov
in
stc
mov
fcoml
lahf
stos
cli
sahf
rorb
push
push
les
gs
aad
cmp
outsl
movsb
mov
leave
jbe
mov
inc
inc
xor
arpl
add
aaa
or
add
mov
in
pop
push
xchg
hlt
scas
js
push
cld
nop
enter
xor
mov
movsl
pushf
sahf
and
shrl
cmp
repz
jb
mov
xor
adc
out
mov
add
roll
pop
dec
mov
data16
fistpl
and
bound
xchg
jae
pop
sub
jg
in
cld
pop
movsb
pop
add
je
adc
gs
outsb
lods
or
adc
adc
movsb
mov
push
ja
push
cltd
cld
cmp
lods
mov
loope
cli
add
jno
sub
adc
shr
cltd
ret
sbb
sub
int3
pop
ds
lcall
or
bound
es
xor
adc
sbb
push
cwtl
and
jle
cmpsl
sahf
mov
adc
sub
scas
xchg
jl
loopne
lds
adc
insl
stc
jle
xchg
rcrl
mov
sub
repnz
push
dec
push
mov
pop
filds
hlt
xchg
push
cli
repnz
push
out
ret
loopne
jle
adc
mov
xor
rcr
pop
jg
sub
mov
fcmovnbe
push
imul
stos
pop
rorl
add
sti
xchg
inc
pushf
aaa
loope
test
popf
mov
shlb
cmc
pop
mov
cli
scas
fistl
mov
xor
jmp
and
add
leave
ljmp
xchg
push
rcr
mov
aam
mov
test
inc
jmp
push
sub
sub
cmpsb
fsts
jbe
cmp
cmpb
lods
cmpsl
xor
xchg
pop
jmp
out
fldt
add
adc
pop
stos
push
test
sub
pop
lds
push
inc
sbb
das
adc
aam
repnz
add
imul
xor
cmp
mov
shrb
xchg
adc
mov
rcll
enter
lret
pop
out
or
mov
dec
leave
mov
cli
xor
xchg
fdivl
gs
lea
mov
push
test
jne
jle
mov
fstpt
jo
hlt
cmp
popa
aam
xchg
sbb
dec
jbe
xor
inc
test
sbb
rcrl
mov
sub
mov
test
out
popa
das
xchg
loope
sbb
push
sbb
mov
push
mov
and
jns
mov
mov
repnz
int
leave
and
pop
mov
fwait
cmpb
push
xor
adc
lcall
xor
push
stos
mov
es
jge
pusha
pop
out
xchg
insb
xor
lea
push
in
int3
insl
push
and
iret
arpl
xchg
gs
aaa
notl
mov
xchg
call
dec
jnp
sub
inc
inc
imul
mov
xlat
fistps
jnp
pop
dec
pop
daa
inc
push
mov
popa
mov
xor
or
or
jmp
inc
sub
stos
sbb
lea
lods
push
adc
aad
enter
and
loope
adc
inc
jp
andl
and
mov
arpl
les
and
mov
mov
jl
mov
ficomps
dec
and
cs
aam
popa
sub
mov
push
jb
jb
in
out
xor
jle
xlat
mov
int
mov
ret
pop
mov
fldl
shrl
pop
std
daa
mov
mov
lods
aaa
add
add
leave
push
xchg
mov
mov
mov
movsb
lcall
sub
dec
push
ficomps
jge
cmp
imul
outsl
cmpsb
and
mov
ss
push
std
icebp
sahf
xchg
movsb
shl
and
sub
xchg
mov
test
dec
sahf
mov
push
lods
mov
add
xchg
mov
mov
iret
daa
cltd
pop
ret
orl
shlb
and
lret
adc
sub
lock
addr16
and
sbb
outsl
insl
xchg
into
stos
in
mov
jae
mov
clc
shl
xchg
jns
jmp
push
ret
psrad
mov
rolb
dec
loopne
out
sub
dec
pop
dec
or
loop
leave
or
fucomi
fsubrs
mov
rorb
pop
cs
ret
icebp
dec
inc
cmpsb
cltd
pop
pop
pushf
mov
je
and
lds
mov
xchg
sub
push
inc
lahf
mov
stos
pop
cvtps2pi
sbb
cld
cmp
cmp
cmp
sbb
mov
insl
in
and
cmp
push
andl
ds
cmp
scas
scas
repnz
inc
mov
or
inc
insb
lods
push
int3
sbb
push
leave
sub
popa
jecxz
int
fs
fisttps
fwait
movsl
jg
aad
fdivrl
sbb
mov
aad
int
out
mov
clc
mov
stc
daa
add
in
aam
pop
xchg
sbb
jne
dec
daa
lret
repz
rcrb
xchg
and
pushl
dec
jns
mov
pusha
sub
xchg
enter
gs
in
and
loopne
push
fcomps
push
hlt
xchg
in
sarb
test
into
faddp
sbb
and
jecxz
or
psrlq
or
mov
sub
loop
push
mov
cld
mov
loop
xor
hlt
jl
test
and
push
jnp
lahf
xorl
es
cmpb
xor
into
sbb
in
fiadds
or
xor
inc
mov
fistl
aad
fwait
int
jl
nop
push
mov
dec
jecxz
push
fisubs
lahf
mov
jo
lret
test
add
push
and
mov
or
sub
fsubl
xchg
mul
enter
subb
ret
xor
xchg
je
test
xchg
pop
stos
pop
cmp
mov
push
rcl
dec
sbb
fmul
sbb
jns
leave
mov
bound
test
popa
out
imul
jo
movsb
jbe
addl
sbb
int3
cmp
fwait
imul
pop
pop
mov
lret
mov
mov
iret
jns
xchg
ja
sub
cmp
outsl
push
mov
xchg
lds
mov
imul
dec
inc
rcrl
cmp
fcomi
in
mov
cli
inc
outsb
push
in
mov
mov
call
data16
or
fildll
or
mov
rcrb
cwtl
movsl
cmp
cmpsb
mov
sub
lods
loop
cmp
cld
repnz
shrb
imul
jb
xchg
loopw
pop
imul
push
cmc
xor
fs
out
fiadds
inc
movl
mov
cmc
out
in
dec
test
mov
aad
fidivrs
fsub
into
icebp
insb
inc
adc
mov
nop
push
das
jb
cmp
or
icebp
rcr
mov
std
dec
ss
adc
and
cmp
lcall
hlt
gs
inc
adc
stos
xchg
sbb
scas
mov
iret
ja
loop
stos
pop
mov
xchg
xchg
jne
iret
xchg
stos
loopne
pusha
xchg
cmp
cmp
call
add
out
testl
mov
inc
mov
sbb
mov
int
mov
and
xchg
push
pop
xchg
xchg
ret
ss
adc
loopne
insl
inc
jbe
mov
out
lds
imul
popf
ljmp
out
shrl
xor
xchg
jp
mov
insb
xor
outsb
rcrb
into
jecxz
xchg
test
leave
enter
popf
xchg
fnstenv
sub
and
push
dec
push
sbb
mov
push
cmpl
subl
dec
fimuls
data16
ficoml
mov
mov
inc
jmp
mov
xor
es
push
clc
std
mov
push
add
fistpl
mov
and
push
repz
xchg
adc
sub
add
xchg
push
sub
jne
rcrb
out
mov
or
addr16
rcl
lahf
sahf
pusha
scas
imull
test
shl
and
int
xor
repz
adc
movsb
push
cmpsl
clc
inc
lea
mov
inc
lods
push
ja
mov
test
aas
lods
ret
xchg
push
mov
cmp
insl
dec
dec
xchg
lahf
hlt
sbb
push
sub
dec
jns
xchg
cltd
stos
push
cmp
mov
stc
push
repz
ljmp
dec
push
push
hlt
push
lret
negl
mov
cli
adc
mov
adc
cs
out
adc
mov
xchg
outsl
dec
mov
leave
and
sbb
xor
cmpl
jl
mov
mov
adc
in
inc
adc
fmuls
sbb
mov
push
or
xchg
bound
fidivrl
jns
add
mov
pusha
inc
jbe
inc
mov
lret
mov
test
push
cs
sub
inc
add
pop
das
mov
add
std
inc
enter
je
lret
aam
scas
jnp
int3
jmp
cli
xor
cwtl
inc
jge
fcomp
adc
push
ret
cmp
stos
sbb
mov
call
mov
jl
lods
and
xor
xor
pop
fsub
lcall
out
push
out
aam
and
inc
push
mov
cmpsb
fisttps
dec
movsb
popa
ljmp
out
add
mov
inc
mov
xor
dec
xchg
mov
test
mov
pop
arpl
fwait
aas
hlt
push
icebp
cwtl
ficoml
cmpsb
xchg
mov
push
dec
xlat
or
rorl
arpl
mov
es
aam
mov
add
sbb
jl
push
xchg
dec
pop
lods
cwtl
mov
rcrb
add
xor
adc
in
popf
sub
lock
sbb
inc
push
adc
rcr
rcrb
cs
pop
sarl
ficoms
imul
call
js
dec
sub
push
and
push
hlt
dec
and
imul
into
pushf
mov
jmp
adc
lea
jg
shrb
fisubrl
movsl
jl
push
push
pop
test
xchg
and
pushf
stc
arpl
xlat
jb
in
mov
clc
or
movsl
xorb
mov
shl
cmp
loope
inc
mov
scas
loope
movsl
xchg
mov
jecxz
adc
lret
icebp
in
aaa
push
xor
mov
rcrl
xchg
cs
pusha
ret
ret
and
cld
sbb
and
movsl
jg
repnz
ss
je
pusha
lahf
inc
shrl
push
xchg
mov
ds
call
add
loope
pushl
dec
hlt
fistps
mov
nop
call
test
mov
js
je
adcb
adc
dec
mov
adc
pushf
mov
gs
cli
imul
mov
inc
in
xor
iret
std
cmpsb
mov
scas
shrb
lods
jns
adc
clc
je
shrb
pop
pop
mov
jecxz
xchg
mov
jo
in
out
arpl
int
and
hlt
test
jle
mov
shrb
bound
pop
mov
pusha
mov
fnsave
push
cmpsb
pop
dec
inc
xchg
jne
sub
loop
mov
cmp
push
xchg
fistps
dec
ret
or
addr16
jg
mov
add
mov
testl
add
xchg
inc
imull
fdivrl
pusha
mov
divb
mov
aas
cmp
xchg
push
inc
jae
xrelease
mov
jge
pop
ss
loopne
push
rcrl
orl
pop
outsl
scas
add
call
xchg
cli
inc
subl
adc
mov
push
push
rclb
les
sub
xchg
jg
pop
stos
scas
lcall
jle
xor
lcall
aaa
jbe
sbbl
fmull
les
pop
insl
or
sahf
jbe
aas
xchg
sbb
cs
xchg
and
push
aam
push
popa
inc
fsubp
fists
out
imul
ss
inc
mov
add
popa
lahf
push
mov
push
rcrb
jnp
push
aad
add
cmc
inc
add
xorb
mov
pop
mov
test
or
adc
mov
and
mov
pop
dec
jae
in
rcll
in
cs
test
sti
lea
push
jb
xchg
rclb
push
int
popa
dec
jbe
dec
lea
mov
and
xchg
pop
loop
push
add
pop
mov
shll
mov
lods
and
fs
shrb
test
xchg
rcrb
mov
decl
cmp
loopne
sbb
lds
cs
or
pop
add
xlat
push
mov
je
loope
cmpl
xchg
lret
aas
shll
mov
test
mov
iret
adc
test
in
lods
mov
mov
xor
jl
mov
xchg
pop
or
mov
test
aad
test
sbb
bound
fcmovnu
mov
lahf
cmp
rcll
out
popf
addr16
cmp
call
in
or
mov
jge
inc
into
or
xor
mov
add
sti
fistl
movsb
and
mov
mov
jle
stc
cmpsb
mov
fcmovnb
jae
sti
or
fs
sbb
push
pmulhw
xor
push
push
or
fsubrs
adc
xlat
int3
push
sub
pop
ljmp
push
roll
les
mov
or
inc
mov
mov
ret
out
jbe
ret
bnd
out
inc
lock
sub
sbb
sub
fstpl
add
aam
xchg
mov
pop
jp
out
mov
mov
fwait
decl
leave
out
repz
fwait
outsb
sahf
xchg
xchg
loopne
mov
sahf
dec
pop
in
scas
in
mov
adc
xchg
mov
cmpsl
int
dec
test
cmpsb
mov
xchg
pop
stos
imul
imul
or
cwtl
sbb
mov
cmpsl
icebp
rcrb
roll
or
sub
icebp
sub
xchg
idiv
mov
fcoml
inc
data16
and
out
call
pusha
inc
mov
pop
add
pop
int
daa
add
cmpsb
mov
jns
xchg
jae
hlt
pop
sahf
dec
sub
lods
hlt
pop
es
jle
cmp
sub
sahf
xorl
inc
outsl
pushf
ljmp
notb
and
mov
addr16
jmp
sub
scas
jle
addr16
iret
scas
dec
inc
xchg
js
xor
sub
addr16
cmc
fdiv
fwait
bound
adc
loope
mov
push
daa
add
rcll
inc
adc
orb
mov
repnz
idivl
or
pop
mov
rclb
in
xchg
divb
sbb
jno
clc
add
test
sbb
call
dec
xor
inc
sbbl
push
arpl
sub
sub
jno
xor
lock
stc
stc
jne
sahf
adc
scas
jmp
xchg
mov
sbb
in
shlb
pop
pop
mov
mov
das
xor
mov
leave
inc
pushf
cmp
sbb
xor
mulb
jmp
jmp
out
stos
and
rcrl
addr16
flds
add
pop
cmp
push
insl
movsl
xchg
gs
mov
mov
cwtl
movsl
sub
cmpsl
and
lods
adc
addr16
mov
scas
fldenv
out
ds
fistps
stos
sbb
fcomi
cmp
hlt
dec
addb
js
les
daa
pop
add
daa
movsl
fstpt
mov
push
sub
mov
aas
xchg
push
xchg
cmp
and
inc
push
jmp
xchg
adc
xor
push
popf
push
jecxz
ret
sbb
sub
add
fistps
sbb
mov
es
mov
lcall
gs
mov
inc
hlt
sti
xchg
sbb
int
popf
enter
sub
xchg
mov
inc
dec
mov
or
jnp
loopne
sub
scas
aas
rcr
shlb
mov
aas
dec
xor
ja
pop
iret
stc
mov
stos
xor
decb
stos
sbbl
mov
mov
adc
gs
adc
insb
mov
and
mov
imul
cli
push
int
cmp
pushf
leave
cltd
popf
push
int
roll
mov
je
push
xchg
pushf
decl
sub
call
fadd
in
sbb
mov
fildl
push
sbb
int
push
testl
inc
cmpl
pushf
mov
pop
scas
lds
push
shr
data16
sbb
jne
inc
daa
in
push
outsl
push
xchg
clc
cld
sbb
in
arpl
mov
lods
iret
or
and
cld
push
pop
idivb
aam
mov
pop
sbb
out
lcall
sbb
inc
mov
pop
in
shll
inc
enter
jb
test
sub
pop
mov
sti
and
or
lahf
pop
dec
and
xor
iret
pushf
dec
stos
cmc
jmp
xchg
and
scas
pop
xor
pushl
push
push
jns
sbb
pop
insl
loope
mov
mov
xchg
lahf
out
xor
mov
in
xor
call
lret
sub
ja
stos
jb
dec
inc
pop
fs
xchg
decb
lcall
or
inc
inc
sbb
stc
jo
sbb
pushf
and
pusha
mov
push
std
int3
mov
mov
jns
in
xorb
adc
gs
out
xor
test
lds
sub
stos
outsb
xchg
cmp
sbb
push
sub
mov
mov
mov
fdivrp
lea
and
inc
mov
loope
cmpps
jne
shll
mov
xor
add
and
aaa
clc
js
or
xor
mov
sbb
adc
lcall
lods
xchg
or
bound
shrl
lods
cmpsb
xor
fimull
cld
and
dec
ds
mov
and
ds
icebp
fs
sti
xor
pop
lahf
mov
int3
or
jae
stos
in
pop
jl
popa
pop
mov
inc
inc
pop
mov
jae
ror
mov
pop
icebp
or
and
sub
mov
loopne
jnp
fsubrl
ds
push
lret
jl
hlt
lods
fdivs
rorb
test
sbb
add
or
fucomi
mov
orb
adc
xchg
adc
sbb
mov
add
cmp
adc
and
jle
jp
sub
daa
outsb
movsl
cld
testb
inc
int
cmp
ja
mov
xchg
dec
adc
add
jb
lea
loope
dec
loope
addr16
pop
jae
cmp
add
adc
pop
inc
mov
repnz
pop
jge
aam
inc
jmp
lock
xchg
pop
stos
add
pop
adc
iret
ljmp
lock
out
rol
test
jl
or
mov
cwtl
mov
mov
push
or
sbb
fcmovu
mov
and
scas
and
push
add
adc
int3
jno
xchg
icebp
fwait
and
rcll
adc
jl
dec
pushf
xor
ret
gs
push
and
xor
loope
shr
push
pop
jnp
xchg
shr
or
inc
jg
sub
xchg
push
jb
xchg
dec
xor
repnz
test
scas
pushf
jno
and
xchg
div
dec
ljmp
adc
inc
pop
lcall
into
dec
jecxz
pop
xor
mov
loope
js
or
mov
out
scas
ficomps
dec
sub
inc
cmp
pop
movsb
jae
in
leave
mov
mov
push
outsl
sbb
or
cli
or
stos
dec
pop
insl
xor
test
mov
cmp
jl
mov
in
das
outsb
addr16
and
mov
test
lods
je
movsl
xchg
or
scas
lods
or
mov
inc
movsl
rclb
stos
stos
sbb
push
addr16
jnp
sar
movb
into
and
push
mov
clc
fnstsw
mov
subl
mov
lret
repnz
and
sub
cmovne
lods
jnp
sbb
sbb
pop
arpl
sti
jae
lods
add
rcrl
jg
rcrl
or
cmp
mov
push
mov
int
push
xor
dec
ret
push
stc
cs
mov
mov
ffree
pusha
mov
sub
mov
xor
shlb
mov
and
xlat
clc
pusha
into
ds
cmp
outsb
adc
push
test
test
push
inc
iret
iret
sbb
add
rolb
sub
out
aas
sti
cltd
test
stos
mov
push
pop
addl
jmp
push
rorb
xchg
pop
xor
add
je
cmp
pop
addr16
pop
into
xchg
cs
shl
pop
or
sbb
outsb
sub
sub
pop
adc
mov
decl
add
in
push
mov
cmc
ret
mov
push
in
in
cmp
test
daa
adc
adc
jbe
lds
je
in
test
inc
outsl
and
repz
stc
jecxz
jnp
sbb
dec
hlt
imul
and
js
cmp
aas
mov
ficompl
fcmovb
lock
dec
lret
sub
nop
inc
push
stos
shrb
inc
stos
fsubrp
mov
and
push
fstpt
xor
shll
lock
xchg
sti
into
dec
dec
dec
push
push
test
out
pop
mov
shrd
and
pop
mov
bound
imul
jne
nop
xlat
xor
es
mov
pop
and
xchg
mov
add
nop
mov
lods
mov
pop
icebp
inc
in
test
scas
and
in
popa
rolb
hlt
roll
je
sbb
aas
addr16
jbe
pop
push
xchg
fstpl
inc
rcr
mov
mov
xor
sbb
push
mov
repnz
insb
sti
jecxz
pushl
dec
jb
ja
ja
fs
imulb
insl
jo
sub
mov
clc
pop
pop
mov
das
fsts
nop
imulb
inc
repnz
cmp
loop
test
nop
insb
push
inc
inc
cmpb
cmp
jae
jb
loop
out
mov
dec
mov
sbb
rol
add
xchg
sahf
cli
rolb
pop
xchg
add
and
lret
stos
or
sub
xor
and
popf
pusha
adc
inc
addps
hlt
adc
cmovno
popa
push
pop
es
mov
into
pop
jne
or
pop
jg
aas
popf
mov
aaa
fwait
rolb
idivb
repnz
fwait
es
mov
hlt
dec
popf
lds
stos
inc
xorl
push
pop
or
test
add
clc
movsl
inc
nop
bnd
lock
dec
fdiv
push
jae
mov
pop
in
sbb
aaa
sahf
jbe
outsb
iret
and
sub
clc
pop
pop
sub
and
xchg
cmp
inc
jne
dec
sti
pushf
insl
loopne
fcoms
or
push
fsub
cmpsl
sub
mov
and
sub
test
mov
js
cmpsl
inc
fstpl
sti
jmp
push
dec
push
add
mov
mov
iret
in
pop
sub
aaa
or
in
and
and
aad
mov
lods
push
push
xchg
int
mov
mov
out
repz
pop
out
test
push
ret
mov
push
arpl
out
dec
sti
add
xchg
or
fnstcw
data16
jmp
xor
aas
and
cmpsl
daa
sbb
sbb
mov
and
aad
xchg
add
lods
mov
pop
cmp
mov
in
xor
jae
inc
dec
in
jbe
xchg
into
fwait
decl
sbb
mov
mov
pushw
dec
push
cs
inc
out
push
mov
aaa
movsb
in
cmpsl
jae
lea
je
insl
aad
pop
scas
mov
shlb
xor
adc
mov
out
cmc
lcall
in
mov
icebp
jno
jne
mov
loopnew
les
jmp
xchg
shlb
jbe
pop
xor
ljmp
or
or
pusha
repnz
jecxz
aad
mov
inc
lds
or
sbb
pop
shr
out
outsl
jae
jns
enter
mov
adc
fldt
sbb
in
pop
daa
and
test
ss
iret
mov
adc
jle
shlb
cmp
xchg
add
gs
repnz
or
mov
xchg
rcll
nop
call
rorb
push
clc
ja
jne
fmull
stc
sub
cltd
loopne
leave
popf
sbb
xchg
fwait
enter
ss
jl
je
push
mov
xchg
jb
mov
mov
sti
stos
imul
das
stos
dec
mov
je
mov
and
scas
fwait
pop
inc
out
pop
ss
addl
and
xchg
pop
inc
push
inc
xchg
loopne
pop
stos
fxtract
std
mov
sub
pop
and
xchg
repnz
or
mov
pop
stos
sahf
aam
das
outsb
push
js
push
movsb
xor
sub
das
or
pop
push
pop
cmp
dec
mov
int
dec
shrl
fcmovnbe
jmp
lret
pop
xchg
imul
dec
sub
mov
out
andb
scas
test
sbb
fchs
aam
bound
inc
popa
fnstenv
xchg
fidivl
test
fdiv
push
sbb
sub
iret
cmp
push
cwtl
call
xchg
inc
add
dec
int
loopne
ss
sbb
inc
mov
push
cmp
sbb
jl
mov
sbb
sti
jo
cmp
cmc
ljmp
addr16
xchg
bswap
mov
jp
inc
xor
inc
push
mov
jae
xchg
inc
cmp
popa
cmp
xor
dec
sub
and
adc
push
push
cltd
outsb
and
mov
mov
push
mov
incl
or
sub
and
and
clc
xchg
xchg
or
pop
ret
loopne
xchg
adc
pop
mov
sbb
dec
cmpsl
mov
lea
aas
nop
lcall
adc
daa
js
js
scas
repnz
xchg
sub
ret
mov
in
mov
in
add
cmp
fwait
bound
cmp
add
xor
jp
push
pop
fucomp
lcall
ss
adc
xchg
dec
nop
in
push
lret
mov
inc
icebp
mov
sub
add
and
popf
loopne
jle
sbb
ljmp
jl
dec
cmp
dec
cld
js
in
xchg
xor
jne
inc
data16
roll
insb
push
scas
sub
cld
cmp
inc
add
in
roll
push
cs
out
in
lret
xchg
subb
test
adc
aaa
xchg
pushf
gs
cmc
ret
loopne
repz
xor
mov
sub
jle
orl
fsubr
imul
sbb
add
pop
jge
outsb
push
xchg
pop
sub
bound
cmp
test
lret
or
xchg
aad
jle
fisubs
cmp
sub
push
mov
and
fwait
mov
mov
cmp
in
nop
xchg
call
cmp
pushf
aad
jns
popf
sub
lods
into
jno
rorb
sarb
mov
mov
mov
adc
lcall
jp
and
mov
shrb
lds
leave
cmp
scas
xchg
in
fwait
adc
in
dec
leave
lock
cmpsl
xchg
jp
mov
shlb
mov
test
fisttpl
loopne
loope
mov
inc
test
mov
into
out
jecxz
lds
sub
or
bnd
xchg
push
imul
cmp
pop
cmpsb
lcall
add
add
das
dec
dec
ja
xor
cmp
sti
enter
adc
xor
repz
ljmp
xchg
and
cld
or
outsb
mov
in
push
icebp
cmp
arpl
fstl
jl
inc
sbb
es
cmc
pop
mov
icebp
adcb
xchg
xchg
mov
rolb
daa
cld
les
ja
xchg
inc
and
rclb
push
dec
pop
mull
lahf
in
cmpsl
jnp
test
insb
outsl
dec
fldcw
sbb
cli
push
stos
push
jl
xchg
lods
sub
mov
call
popa
in
imul
inc
lds
pop
sbb
or
or
daa
repz
lret
pop
std
add
mov
xchg
sbb
mov
mov
dec
xor
mov
jmp
lcall
fisubs
push
pop
dec
mov
ja
add
add
jnp
std
xchg
jecxz
push
imul
push
xor
inc
jmp
xor
lret
mov
mov
stos
push
sub
mov
sbb
lock
into
ja
dec
lret
inc
pop
xchg
add
xchg
cmp
out
mov
loope
sbb
je
cmpsb
push
jl
iret
inc
xor
or
outsl
xor
js
in
lret
sub
dec
cmc
pop
stos
push
mov
fiadds
inc
sti
push
pop
adc
sub
fcomip
sub
movsb
shl
mov
mov
adcl
cmp
stos
mov
inc
cli
popl
inc
jecxz
push
mov
and
cmp
jo
push
divb
lcall
std
decb
lea
sti
mov
xorl
lret
shlb
pop
repz
lahf
adc
insl
rorb
cmp
shr
ja
in
push
cmpsb
and
pop
bound
mov
mov
arpl
ja
ret
icebp
xor
test
sbb
leave
loope
movsb
call
xchg
sbb
inc
push
ljmp
jmp
les
add
or
mov
pusha
mov
add
int
adc
pop
and
pop
fisttps
outsb
xchg
xor
push
jnp
testl
jmp
cld
adc
scas
jge
mov
and
sub
into
in
hlt
inc
push
jb
mov
mov
push
mov
pop
fmuls
jg
sbb
push
enter
dec
inc
cmpsl
mov
in
hlt
push
movsl
sbb
repnz
movsb
sub
pop
popa
call
or
push
mov
jg
loopne
mov
in
sti
xchg
jg
fsubs
in
loop
lods
fsubrl
roll
int3
xchg
test
mov
cmp
pcmpeqw
test
sbb
insb
and
mov
jmp
stc
xchg
js
push
dec
enter
mov
nop
loope
mov
popa
mov
cwtl
aad
jnp
popf
arpl
cmp
and
pushf
jbe
mov
cltd
jg
sbb
inc
pusha
sub
jns
pop
sub
or
inc
out
add
adc
sahf
lock
popf
pop
adc
dec
xchg
js
sbb
testb
jmp
xchg
jo
stos
das
xchg
inc
dec
jne
pop
sub
insb
cltd
test
lods
sbb
jb
or
adc
fistps
mov
cmp
pop
or
push
mov
subl
and
in
test
mov
push
lret
xor
lcall
lahf
inc
mov
rep
mov
psubusw
ds
xchg
jg
jmp
aad
sbb
or
dec
xchg
push
mov
adc
adc
sbb
lahf
xor
inc
stos
mov
or
fsubl
aam
cmp
ja
negl
cmp
mov
dec
ret
js
add
inc
mov
popa
sti
ljmp
mov
mov
jle
mov
out
and
movsl
xor
mov
lahf
inc
or
jae
sbb
outsb
sbb
add
jmp
mov
cld
jns
jl
stc
shlb
adc
push
hlt
inc
lret
aam
mov
xchg
jg
fisubl
inc
adc
pusha
inc
cmp
shr
rcl
popf
adc
xor
sub
lahf
sarl
xchg
inc
push
repz
push
repnz
sub
mov
and
and
std
lea
aam
imul
popa
jecxz
in
rorl
insb
push
push
insl
and
dec
rorl
jne
shll
sbb
shr
jp
cs
jns
loope
xchg
imul
test
mov
adc
xlat
adc
aas
dec
push
fadd
mov
jae
ds
or
dec
popa
bound
fcomps
lret
jns
pop
xchg
or
out
out
xchg
or
pop
idivb
lret
pop
dec
stos
bound
xor
fisubl
test
cmp
test
int
xchg
pop
or
dec
shlb
cwtl
adc
aad
lock
ds
cmp
rcr
jle
mov
xchg
bound
cmpsl
pop
cmpsb
add
ffreep
sarb
int3
xor
mov
cwtl
loop
push
pop
xchg
cmp
ja
mov
mov
test
push
mov
incb
pusha
subl
or
push
add
pop
adc
inc
imul
push
inc
call
loope
pop
jl
out
daa
iret
cmp
mov
xchg
sub
adc
test
push
mov
fwait
mov
shlb
ja
leave
les
rclb
push
dec
or
setge
push
jp
jmp
push
jecxz
mov
sbb
mov
inc
das
jno
inc
lcall
pushw
add
sbbl
pushf
cmp
stos
mov
mov
lock
dec
jns
cwtl
cmp
subl
lcall
int
ja,pt
mov
dec
ret
pop
dec
mov
push
cmp
dec
adc
call
data16
pop
xchg
mov
lock
push
xchg
enter
push
ds
sub
pushf
scas
sub
test
into
mov
in
ja
xor
sub
stos
and
or
pop
ret
cmp
in
stc
scas
dec
push
inc
push
xchg
std
push
ds
mov
cmp
mov
lock
and
jge
xchg
sarl
movsl
test
clc
xchg
fwait
sbb
notb
pop
mov
pop
add
jmp
out
std
add
xchg
call
andb
fwait
mov
std
jmp
adc
jmp
cltd
repz
adc
insb
pushl
cmp
pop
mov
or
cltd
stc
jge
cmp
sbb
in
in
adc
lods
push
push
xchg
ja
ret
mov
inc
pusha
imul
and
xchg
adc
into
inc
adc
xor
xchg
sub
in
imul
jl
aad
cmpl
push
mov
push
pusha
mov
ss
pop
mov
decl
add
dec
test
adc
stos
mov
lods
and
les
adc
lods
popa
dec
nop
cs
mov
nop
push
lahf
add
jb
adc
cmpsb
dec
leave
dec
scas
out
das
mov
loop
push
dec
and
ljmp
ja
sti
add
movsb
xlat
xor
ljmp
pop
lea
xchg
insb
mov
iret
or
movsb
xlat
shll
lods
repnz
popa
jno
mov
adc
cmpsb
jge
jmp
popa
add
pop
cmp
and
icebp
jg
add
xlat
mov
pop
popl
push
jecxz
cwtl
or
or
call
cmp
lods
inc
xlat
jno
shrl
mov
jmp
mov
add
arpl
adc
cmp
cmpsb
jb
lret
xor
pop
mov
test
adc
jge
jmp
cld
repz
lahf
icebp
fmull
cmp
ret
mov
add
test
xchg
iret
mov
jl
and
cmc
in
adc
dec
std
mov
mov
test
hlt
std
ljmp
cmp
jne
jmp
mov
or
jg
sub
xchg
lcall
shl
loope
lods
inc
stos
inc
xor
xor
xchg
negb
outsl
add
sub
pavgb
std
int3
call
cmc
adc
fwait
fwait
add
js
add
jle
inc
in
lret
cli
bound
sub
notb
out
dec
adc
pop
mov
cmp
test
sub
int3
lea
sub
adc
push
lds
or
ret
xchg
adc
ret
repnz
shrb
das
adc
out
xor
enter
and
lock
sub
or
push
cmp
jb
sbb
adc
clc
add
or
jae
dec
scas
fcomps
pusha
es
es
cvtdq2ps
or
push
dec
sbb
mov
cwtl
lods
mov
fimuls
pop
mov
clc
mov
test
stc
ret
adcl
adc
cmp
push
fwait
mov
lcall
popa
fistps
pop
jnp
jb
out
sub
or
daa
aad
stos
pusha
pop
mov
cmpb
lock
mov
and
sti
sub
push
das
je
daa
adc
mov
mov
xchg
leave
pop
adc
addr16
roll
aas
add
adc
push
jae
adc
ret
imul
out
and
push
adc
shrb
imul
pushf
mov
cmc
call
cmp
cs
or
orb
add
xorb
aad
xchg
repz
push
stos
int3
fldcw
add
adc
mov
inc
rcl
mov
jle
incb
in
dec
lock
cmp
insb
mov
xchg
and
jae
cmp
cmp
lahf
pop
repz
sub
pop
adc
pop
jns
ret
ds
ss
in
jecxz
adc
scas
mov
out
test
jle
std
in
xor
cmp
jecxz
std
mov
adc
stc
jle
or
push
mov
pop
pop
ljmp
push
out
leave
jnp
aaa
call
adc
mov
sbb
xchg
xchg
fstpl
outsb
out
sbb
dec
jo
out
pop
push
popf
fwait
cld
cmpsl
sarb
div
aam
sub
xor
lret
sub
insl
xchg
loope
jnp
les
jmp
pop
fwait
mov
xor
je
dec
xchg
xor
push
popf
jl
fisubl
gs
inc
or
addr16
inc
mov
cld
dec
test
push
sarb
dec
mov
aam
leave
jle
pushf
hlt
dec
aaa
mov
js
rclb
sbb
repz
and
mov
loope
pop
stos
fwait
cmpsb
sub
xchg
fs
aaa
inc
sbb
sbb
mov
cli
add
jnp
mov
push
popf
jmp
mov
js
mov
pushl
xor
cmp
sbb
push
or
rorl
rcr
sub
test
mov
xor
decb
cltd
add
cmpsl
enter
rcr
pop
push
cs
fistpl
ret
lods
sub
mov
cmp
and
xchg
jae
xor
jbe
ljmp
js
and
sbb
jmp
lahf
mov
or
addr16
xchg
xchg
inc
inc
pushf
pop
jne
pop
sub
das
fisubrl
addb
dec
fisubs
add
jne
out
xor
sahf
rcl
adc
rcl
fcmovnbe
data16
daa
sub
aaa
out
andl
sbb
das
rorb
out
movsl
cmpsb
xchg
movsl
arpl
mulb
out
pop
sub
rorb
jmp
dec
jp
push
imul
adc
or
dec
pushf
test
xor
xor
jge
push
pop
xchg
mov
mov
xor
pop
subl
test
pushf
sti
lret
pop
stos
mov
add
or
orb
rol
je
ss
cmpsb
into
dec
inc
sbb
fwait
sbb
nop
ss
inc
pop
jecxz
adc
xchg
push
in
push
popa
loope
in
imul
mov
push
add
dec
cli
js
jecxz
rcpps
mov
ret
cltd
test
mov
cwtl
and
lret
call
aad
rorb
inc
inc
hlt
sub
es
lret
dec
sub
jns
cmp
jl
ret
inc
stos
dec
sub
xor
pop
mov
das
jmp
jl
test
mov
repnz
out
ret
jg
iret
nop
dec
cwtl
mov
in
jne
fimull
sub
push
out
clc
cmpsb
cmp
mov
fcmovne
and
sbb
xor
inc
sbb
mov
push
hlt
les
xor
mov
xor
rorl
jae
xor
jb
test
sti
ss
adc
adc
in
xchg
test
lea
mov
xlat
stos
mov
not
push
dec
pop
or
mov
fmulp
pop
arpl
jl
lods
inc
rcll
mov
sahf
pop
or
frstor
rcll
xchg
gs
jmp
ds
inc
ret
ret
nop
scas
pop
in
dec
mov
cltd
stc
ss
loop
imul
sarb
push
outsb
xchg
icebp
xlat
lret
stos
or
lods
pop
mov
fcmovu
push
cmp
arpl
and
enter
loopne
add
or
fwait
enter
cmp
lret
popa
pushfw
add
pop
lret
cwtl
je
push
rolb
xchg
mov
sbb
jecxz
xor
out
mov
loopne
cmp
mov
les
sbb
xchg
lea
dec
clc
imul
pushl
in
jns
xchg
outsl
rcrl
sbb
lock
inc
imul
js
adc
repz
fisttpll
loope
sub
rclb
pop
push
dec
pop
adc
loop
jo
and
clc
xchg
pop
xchg
sbbb
or
std
cwtl
push
jns
in
in
loopne
lret
or
lret
add
or
jae
ret
mov
add
jge
jge
sub
jle
leave
out
jge
and
adcl
inc
pop
ret
sahf
sbb
jge
clc
stos
sub
or
cld
mov
push
in
xchg
dec
pop
lods
xor
ret
fdivrl
sbb
mov
sbb
fbstp
jmp
fnstenv
int3
pushf
lret
dec
call
adc
mov
ljmp
or
and
test
sti
jg
jns
adc
xchg
insl
inc
mov
aam
jg
jecxz
mov
mov
add
inc
dec
cs
and
scas
iret
repnz
loopne
and
xchg
or
sti
adc
iret
sbb
pop
cld
int3
ss
jbe
dec
add
mov
fwait
cmp
cli
test
mov
and
cmc
xor
inc
pop
lods
mov
add
add
jl
xchg
sbb
mov
addr16
and
xchg
sub
sarl
and
cld
cld
sub
cmp
popf
push
dec
add
pop
out
sbb
xchg
pop
mov
out
lea
mov
push
mov
cltd
shrl
fprem
jnp
mov
lcall
push
negl
mov
push
les
iret
lea
jl
rclb
jne
dec
mov
and
inc
inc
and
es
push
push
mov
cmp
pop
imul
dec
xor
shll
into
jo
add
xchg
add
int
cltd
cli
ds
sarb
cmpb
pop
add
ljmp
and
jp
rcrb
mov
out
lret
mov
jmp
leave
mov
cs
sarl
loope
jmp
test
xchg
imul
dec
push
in
in
jo
adc
pusha
pop
int
mov
popf
ljmp
rolb
aaa
jno
cmp
sar
adc
cmp
sbb
repz
out
bound
inc
shlb
cmp
sub
pop
outsb
mov
test
push
in
mov
push
mov
gs
mov
pop
mov
adc
repz
xor
loope
cwtl
mov
int
std
push
dec
inc
mov
pushf
sub
negl
or
lods
adc
int3
pop
outsb
test
or
push
out
in
test
adc
cmc
ds
cmpsl
push
sbb
xor
orb
adc
pop
add
or
stos
adc
push
jno
cmp
mov
ret
sub
fcmovnb
mov
std
adc
push
adc
scas
jnp
mov
xlat
and
add
or
xchg
mov
cs
sub
je
sti
bound
jo
pushf
outsb
jo
or
dec
dec
in
pop
lcall
scas
adc
xor
test
add
dec
sbb
incb
clc
sub
jns
and
and
jmp
mov
and
adc
mov
or
cmp
jmp
mov
in
repnz
adcl
adc
int
imul
fstps
in
push
fidivrs
add
ret
mov
push
xor
pusha
cmp
mov
call
in
je
les
lods
jnp
aas
sub
push
rorl
adc
dec
jb
aas
jo
test
or
push
jb
push
mov
cmpsl
mov
dec
or
and
imul
in
insb
leave
roll
cmp
jb
gs
mov
sbb
leave
icebp
pop
jae
aam
mov
loope
ja
into
ret
ss
push
enter
inc
pop
insb
cmp
rol
sbb
lret
fstl
push
int3
cld
and
repz
adc
fucomp
sti
push
aas
mov
dec
aad
sbb
pop
outsl
mov
cli
stc
call
out
repnz
icebp
push
clc
sub
sbbb
push
dec
jne
ja
adc
sbb
and
adc
pop
outsb
mov
fmuls
xchg
or
cmp
leave
dec
out
shll
xchg
jge
stc
and
ss
cmpsb
xor
mov
dec
or
fistps
inc
ja
xchg
pop
ljmp
pop
sbb
mov
pop
and
les
jno
push
cltd
xchg
dec
dec
jge
or
push
sti
sub
or
adc
mov
in
cmp
test
mov
cmc
lea
push
aaa
ret
jp
push
lds
add
outsb
xchg
mov
test
cld
jns
xchg
pop
rcrb
adc
mov
dec
or
aad
fistl
insl
pushf
xor
test
loope
and
jge
cli
mov
and
mov
mov
xchg
jmp
xor
arpl
int3
cmp
or
out
mov
loop
fcom
fmul
mov
lret
in
fnstenv
aas
aaa
outsb
push
nop
mov
dec
cld
fcoml
jl
imul
xchg
test
mov
and
repz
adc
xchg
push
aad
out
int3
xchg
outsl
inc
adc
das
mov
push
push
mov
les
fnsave
sbb
frstor
jle
sbbl
jmp
nop
lods
pusha
negl
lods
jb
pop
insb
adc
aam
push
and
and
hlt
jg
enter
dec
pop
mov
or
mov
mov
sbb
hlt
jb
or
push
mov
xchg
add
incb
and
rcll
pop
xor
cmp
adc
mov
int3
pop
cwtl
test
mov
jecxz
ljmp
repnz
dec
mov
pop
lcall
into
shll
xor
ss
jno
mov
jo,pt
ficompl
js
ljmp
mov
add
mov
imul
adc
outsb
jl
enter
call
ret
scas
mov
test
hlt
nop
rcll
pop
data16
dec
cmc
mov
pop
ficompl
adc
cmp
cmp
rol
lods
jl
aam
or
std
lret
push
cmpsl
adc
xor
mov
movsb
xor
ja
sub
push
aas
jne
mov
inc
mov
push
xchg
insl
and
add
icebp
in
bnd
sub
loopne
add
jno
cmp
sub
pushf
jns
jmp
mov
cmp
sahf
lds
cmpsl
mov
out
inc
out
cmc
ficoml
cmp
and
enter
dec
xchg
dec
xchg
cs
fstps
loopne
int3
mov
jge
pop
mov
sbb
clc
mov
xlat
hlt
test
xor
shrl
stos
inc
loopne
pop
push
add
mov
or
xchg
or
add
push
cmpsl
jne
out
call
adc
push
popf
or
ja
mov
push
clc
mov
mov
push
sahf
push
push
push
fildll
mov
ljmp
adc
int
push
mov
mov
pop
movsb
inc
dec
xchg
js
shlb
sbb
pop
or
jp
sub
jmp
dec
ds
adc
sbb
jo
mov
sub
imul
test
mov
jae
cmp
inc
push
adc
imul
notl
mov
pop
sti
cwtl
push
rcll
sahf
fwait
jb
pop
outsl
xchg
xlat
stos
in
int
shl
std
xor
mov
adc
mov
imul
fldl
std
pop
dec
sahf
jnp
push
sbb
ficompl
adcb
out
or
int
es
push
fidivs
adc
das
dec
stos
mov
xchg
test
fwait
mov
fldt
lret
or
push
push
pushf
mov
sub
sbb
in
sub
scas
movntps
mov
stos
adc
push
cmp
lahf
adc
xor
mov
cltd
inc
fwait
pop
cmp
pop
push
adc
testl
jne
cli
jmp
lock
mov
rcr
and
cmp
into
int
xchg
repnz
out
cmp
lock
call
jno
lcall
push
and
inc
bound
popa
in
xor
cltd
test
shl
or
cmpb
xor
andb
dec
mov
pop
fdivs
outsb
cmp
xor
push
add
es
ds
lods
jle
pop
xchg
aam
jle
mov
mov
push
jl
scas
addl
push
aam
ret
lods
das
fcoms
cmpb
stos
das
pop
sbbb
jge
fxch
jno
pop
push
aas
jg
push
mov
nop
outsl
imul
sahf
dec
sbb
and
pop
jne
les
stos
jnp
outsl
dec
out
xchg
or
sbb
mov
ror
xorl
mov
dec
adcb
repz
xchg
jno
mov
loope
sub
enter
xchg
xchg
mov
cmpsl
and
scas
fs
mov
xor
pop
cmpsl
lods
std
or
out
test
push
mov
repz
fcomp
xlat
in
imul
add
ljmp
adc
decl
mov
add
add
aam
xor
dec
insb
or
push
je
jne
fsubrl
mov
out
jae
and
mov
add
loopne
sbb
sub
pop
adc
sbb
outsb
dec
jno
je
loope
dec
pop
and
test
stc
outsl
loop
push
ljmp
and
inc
inc
jecxz
movsb
pop
ljmp
jecxz
sbb
loopne
aaa
ret
mov
push
pop
leave
sub
sbb
lock
pop
inc
and
imul
mov
int3
xor
push
mov
jne
rol
lock
decl
jmp
in
xchg
movsb
or
and
aad
sub
xor
pop
lret
out
ret
push
inc
or
je
and
mov
in
mov
adc
cmp
in
bound
sub
out
insb
add
sub
leave
jb
pushf
pop
mov
cmp
xchg
mov
cli
inc
jp
sub
jno
fnsave
cs
outsl
data16
stos
pop
test
stos
bound
enter
lcall
mov
lcall
out
xor
xor
out
and
pop
push
cmp
fdivs
add
add
jmp
push
scas
sub
out
lock
flds
loop
scas
xor
push
xchg
or
adc
mov
and
mov
das
jle
imul
sbb
xor
data16
lret
push
std
loope
fcompl
or
jb
and
rol
int3
in
inc
movsl
lret
addr16
push
xor
adc
dec
cwtl
scas
and
call
mov
xchg
jno
roll
incl
jbe
and
mov
in
sarb
ficoml
inc
pop
or
mov
xor
mov
std
or
out
pop
inc
pop
inc
outsl
lret
outsb
jp
sbbl
in
adc
int
stc
icebp
cld
mov
pop
sbb
or
mov
jae
xor
dec
push
sbb
push
jo
test
adc
pop
aas
outsl
jbe
lds
pop
push
pop
push
insl
mov
mov
loope
mov
fdivrl
fs
loope
dec
sbb
aam
addr16
fs
fdivrs
jno
mov
or
jo
cli
xor
push
dec
aaa
repz
pop
mov
xor
clc
lds
xchg
fistl
or
push
sub
movsl
dec
or
sbb
and
aas
fbld
stos
bound
lcall
stc
leave
sbb
mov
xor
sub
jmp
xlat
jnp
mov
mov
jp
loope
add
mov
sbb
ss
push
inc
scas
xor
fs
arpl
adc
push
outsl
mov
sbb
lods
xor
cld
aad
push
jne
test
idiv
mov
dec
sar
ljmp
inc
andb
sbb
cli
fdivp
imull
pop
jns
pop
int
in
pop
and
imul
lcall
mov
push
icebp
leave
insb
test
sahf
mov
iret
adc
xchg
outsl
lods
scas
dec
fisubrs
repz
jge
add
mov
mov
stos
sub
inc
ja
popa
xlat
loopne,pn
push
addr16
jmp
push
sti
out
or
ds
mov
push
mov
repnz
cmp
or
fwait
ss
mov
cmp
sub
cmp
and
mov
leave
xchg
mov
sbb
lds
test
inc
inc
mov
pop
adcl
push
or
in
fwait
stos
jne
adc
cmp
cmpsb
scas
adc
sub
xchg
sahf
push
out
addr16
stc
fnstsw
divb
rcrl
or
mov
cmp
or
push
jae
shlb
loop
cli
shll
daa
dec
rcrb
imul
inc
inc
add
cmp
rep
cmp
outsb
jns
in
stos
stos
arpl
cmc
jge
ja
loop
jae
lods
or
lods
aas
mov
aad
push
outsl
push
cmpsl
test
jl
or
mov
jnp
xchg
push
mov
lcall
xchg
sub
or
cmp
nop
ja
add
adc
das
push
ficoms
mov
jne
pop
aad
push
sub
jno
sub
adc
mov
push
movsb
or
mov
test
ret
mov
test
jge
push
push
pop
aad
in
cmp
notl
or
dec
sahf
lcall
jb
jge
or
cltd
jle
push
icebp
enter
cwtl
xor
sahf
out
fmulp
jle
lea
hlt
daa
mov
js
enter
seto
push
cld
inc
loope
jb
jle
outsl
dec
ror
mov
ss
sbbb
push
insb
sub
jle
or
cmpsb
mov
xor
cld
pop
push
out
ljmp
jns
test
push
repnz
pop
aas
out
push
jnp
into
or
mov
pop
enter
xchg
and
daa
sbb
das
int3
push
xor
xlat
ficomps
xchg
stos
mov
lock
lds
push
cmp
hlt
test
fisttpll
sbb
mov
out
xchg
jp
je
xchg
push
dec
shl
adc
or
cmp
mov
ret
adc
push
ja
leave
pop
je
rorb
dec
jne
inc
dec
mov
int
pusha
leave
or
mov
inc
cmc
jl
rcll
jb
sbb
jnp
stc
je,pn
inc
push
fcoms
add
icebp
cs
xor
cmpsb
arpl
imul
xchg
jge
xor
dec
jb
xchg
add
mov
jnp
pop
lods
in
dec
push
sbb
mov
das
out
pop
ja
add
std
jecxz
lds
sbb
pop
lock
xchg
iret
ljmp
dec
movl
out
std
push
pop
add
shl
xor
andl
xchg
and
jmp
push
nop
ljmp
push
pop
in
lret
push
iret
jns
test
xlat
jge
repnz
adc
sub
dec
inc
in
enter
and
test
mov
lret
test
fdivrs
mov
sub
punpcklwd
mov
cmpsb
data16
and
add
jb
movsb
insb
mov
movsl
fsts
pushf
sub
mov
sbb
rorl
sbb
mov
rol
xchg
jmp
cmp
add
dec
enter
adc
test
sarb
aas
mov
sarl
and
or
sbb
push
jl
sbb
sbb
jno
cmpsb
sub
fdivs
and
push
inc
mov
fnsave
sbb
jl
or
jmp
mov
ret
daa
xchg
mov
jns
add
popf
rcrb
stc
mov
shlb
orb
mov
pop
mulb
divb
and
and
addr16
imulb
loop
cmp
fcoms
jb
or
cmp
jnp
mov
int3
addr16
sbb
lods
jno
inc
lret
pushf
ss
mov
inc
sahf
add
addr16
push
lahf
sub
mov
movups
gs
and
fimull
aas
fnstsw
dec
xor
mov
xor
and
add
mov
push
test
mov
imul
adc
mov
jmp
in
mov
adc
test
or
xlat
add
loopne
test
xor
mov
xchg
push
rclb
lods
scas
popl
iret
outsb
pop
insb
cld
push
repnz
or
ljmp
dec
jmp
lea
and
imul
or
loopne
fs
test
or
inc
rep
pop
popa
mov
sbb
cmp
in
xchg
idiv
fucomi
movsb
push
mov
adc
pop
popf
push
addr16
shlb
adc
inc
mov
pop
sub
mov
cli
popf
idiv
lods
punpckldq
out
jge
inc
or
inc
jb
daa
cli
mov
insb
inc
jno
push
mov
and
jg
call
into
pop
push
inc
lret
test
pushf
inc
ret
out
adc
adc
adcl
lods
push
adc
jmp
mov
fwait
outsb
stos
pop
jae
cmp
or
or
jmp
loope
in
and
stos
std
fwait
mov
cmp
inc
jg
movsb
sarl
mov
push
jmp
repz
xor
xchg
bound
pop
nop
scas
ret
aaa
lods
inc
lods
into
jecxz
xchg
orl
adc
sub
dec
dec
dec
js
or
adc
push
add
sahf
push
sub
das
push
jge
clc
ret
xor
jmp
imul
push
and
out
push
mov
mov
movsb
or
and
pop
loop
andb
gs
xchg
or
out
jo
es
shl
pop
popa
test
jnp
subl
lods
push
push
fsubrp
test
jmp
add
mov
aas
ds
and
push
mov
aad
inc
inc
sbb
pop
sub
int
pop
cmp
je
jp
rcrb
in
sbb
loope
jge
jmp
mov
jns
stos
inc
push
into
add
push
fnstsw
push
scas
clc
xchg
add
pop
xchg
shlb
testl
out
mov
test
push
fldt
ss
into
nop
rorb
push
dec
movsl
add
mov
pop
lods
pushf
pop
mov
ret
popf
mov
cs
mov
cmp
dec
mov
add
mov
adcb
mov
jne
in
in
lahf
stos
mov
addr16
outsb
popf
jmp
mov
aam
out
cmpsb
loopne
sub
adc
mov
mov
add
push
jg
pop
js
add
mov
lea
pusha
stos
fiadds
in
xchg
sub
out
cmp
popa
lret
mov
addr16
test
in
lods
xchg
xlat
inc
out
mov
stos
cltd
mov
jp
inc
shll
mov
jp
dec
ljmp
push
add
mov
push
xor
and
pop
jle
sub
sbb
mov
jns
lea
xchg
loope
adc
pop
movsl
repz
lea
and
f2xm1
in
pushf
and
addr16
xlat
sub
in
pop
leave
test
xchg
pop
cmc
test
lea
sub
lea
in
inc
mov
loopne
inc
xor
fdivr
outsb
mov
xchg
sub
fdivl
repz
ljmp
fldenv
xchg
jae
jle
mov
ror
icebp
mov
int3
out
pop
cmp
clc
ret
mov
push
and
lods
push
iret
xchg
mov
or
cmpsb
aad
enter
lods
fwait
aad
xchg
popa
bnd
dec
inc
lds
jl
cmc
clc
out
lods
or
mov
inc
push
in
sbb
xchg
leave
call
leave
push
sbb
iret
in
lods
push
xor
cmpsb
jno
jno
das
ret
mov
pop
mov
ds
popa
je
sbb
out
sbb
pop
push
dec
sbb
push
nop
in
dec
sub
cmp
push
frstor
mov
aam
outsl
mov
or
jae
test
xchg
inc
pushf
pop
fnstsw
mov
pop
nop
enter
lahf
jno
movsb
pushf
in
push
daa
mov
push
lea
repz
std
sub
pusha
aaa
cmp
sub
cmpsl
push
sub
mov
in
decl
outsb
fwait
or
mov
sbb
jmp
push
pop
sbb
pushf
jb
or
add
mov
dec
cmp
call
xor
pop
ljmp
shrb
mov
ja
cmp
ss
xor
jp
aaa
xchg
push
push
sarb
mov
push
loopne
out
test
xor
rorl
adc
nop
jne
sbb
mov
daa
dec
pop
ss
hlt
add
mov
not
jg
in
sub
aad
je
int3
int3
nop
xchg
push
stc
push
xchg
clc
inc
lods
mov
rcrl
pusha
pop
bound
jnp
clc
push
fcmovnbe
leave
cmp
out
aam
adc
inc
mov
cmpsl
push
stc
dec
inc
mov
pop
push
dec
or
cmc
fwait
cli
adc
int3
pop
mov
xchg
adc
add
push
sbb
dec
sbb
inc
xchg
lret
rcrb
push
aam
push
iret
xor
mov
adc
repnz
push
xchg
mov
lds
xchg
enter
gs
cmp
cmc
call
repz
cmc
leave
pop
jb
popf
dec
lds
or
xchg
loop
sub
push
add
lcall
cmpb
mov
sbb
sub
inc
aaa
or
pop
push
or
fcomip
push
call
xchg
cmp
ret
ret
xor
leave
mov
mov
add
jbe
aaa
inc
mov
inc
test
mov
jns
insl
pop
mov
mov
inc
lea
or
fisubrl
je
stc
ljmp
pop
cmc
mov
mov
inc
pop
pop
gs
mov
loopne
push
xor
cmp
xor
jl
sbb
cmpsb
dec
not
hlt
test
addr16
scas
push
pop
inc
daa
sub
into
insl
jl
imul
hlt
xchg
nop
ret
dec
xchg
cltd
mov
xor
dec
mov
leave
pushl
mov
insb
xlat
lds
lods
sub
xlat
pop
mov
rol
push
idiv
mov
sub
lock
out
aam
adc
sub
std
movsb
lods
popa
clc
add
mov
dec
and
pop
mov
cld
jg
hlt
push
and
fadd
jmp
out
stos
pushf
or
dec
int3
scas
out
adc
subl
push
sti
push
cmp
adc
cmp
in
cmp
xchg
push
or
jae
add
test
fsubrp
mov
call
cwtl
mov
dec
or
mov
cmp
nop
mov
fsubs
shlb
lods
push
jmp
mov
pop
shrl
xchg
fildll
push
mov
jg
mov
bound
xchg
mov
nop
subl
push
mov
les
or
xor
add
lcall
push
loop
mov
dec
addr16
mov
mov
mov
inc
xlat
dec
dec
mov
lea
xor
ljmp
adc
sarb
int3
rorb
pop
fisubl
fsubrs
movsb
inc
push
notb
jnp
xor
fdivs
ret
dec
movsb
adc
nop
orb
sub
out
pop
and
adc
pop
cs
arpl
js
es
mov
adc
aas
es
jns
xor
mov
xchg
jge
jno
add
add
leave
jmp
mov
sub
call
mov
mov
mov
mov
jmp
enter
test
sahf
mov
and
decl
jb
outsl
mov
cmpsl
mov
jbe
repnz
sub
dec
scas
out
xor
push
adcb
mov
jnp
popa
in
mov
xchg
nop
movl
dec
inc
ds
add
inc
pushf
add
jb
out
pushf
push
aaa
rcl
or
dec
jmp
mov
xor
sbb
out
popf
mov
lret
sti
mov
icebp
fs
int
in
addr16
sub
push
cmp
jl
and
xchg
inc
fdivrs
xor
cmc
or
inc
into
and
in
iret
add
or
gs
out
dec
add
call
imul
stc
fildll
xor
mov
cld
faddp
andl
arpl
xchg
mov
iret
test
out
sbb
inc
xorb
stc
rcll
aad
addl
nop
frstor
roll
es
addb
cwtl
and
xchg
or
repnz
push
gs
pop
cmp
xor
lcall
popl
jle
out
cmp
push
sti
divl
jns
pop
add
out
into
lret
push
ss
into
lods
mov
cmp
imul
clc
loop
sbb
std
and
jg
sahf
pop
and
pop
and
mov
push
sbb
roll
pushf
jno
push
sbb
mov
pusha
jmp
mov
cmp
cli
xor
xchg
loopne
or
cmp
pop
fmuls
xor
push
imul
stc
imul
mov
call
test
js
push
and
fwait
aas
aas
sbb
ds
fwait
push
mov
inc
add
mov
and
mov
popf
adc
mov
mov
call
push
fnsave
and
decl
and
out
and
xchg
sub
and
mov
and
pop
addl
sbb
dec
add
jno
inc
mov
test
sub
sub
pop
mov
sti
sahf
cmp
cmc
inc
or
cmpsb
addb
mull
fstpt
xchg
int
mov
in
test
into
ljmp
data16
push
loop
aam
sbb
pop
mov
mov
add
aaa
push
push
addr16
xor
fchs
dec
sti
push
mov
jecxz
sub
mov
repnz
fdivr
notl
pusha
pop
addr16
jg
jno
ret
inc
lods
jae
lret
jne
push
lret
jmp
push
sub
xor
icebp
nop
loop
pop
out
push
lods
iret
mov
test
xor
push
sbb
cmp
xchg
pop
std
daa
jp
cltd
daa
cmp
jmp
mov
fcoms
add
popa
lret
jecxz
mov
jo
fidivs
loop
sahf
xchg
scas
mov
dec
lea
pop
lods
sahf
leave
in
sbb
or
cmp
xchg
cmpsb
sahf
fwait
pop
jmp
push
out
cwtl
mov
cmpsl
popa
int
jge
ret
fadds
fistpll
push
hlt
loope
jle
xor
rol
cmp
stc
cmpsb
data16
mov
mov
lret
or
mov
clc
test
popf
adc
xchg
js
xchg
mov
add
js
inc
out
imul
xchg
ja
or
cmp
int3
lcall
jns
mov
addr16
insl
dec
andl
sbbl
in
ret
sub
mov
aaa
add
or
cmp
cmp
test
ret
lds
insb
js
sbbl
cmp
stos
stos
xchg
sahf
mov
ret
push
mov
mov
fildl
push
pop
push
mov
ss
jbe
pop
imul
mov
sbb
test
push
movsl
inc
mov
xor
jno
into
cmpsl
dec
sbb
mov
jnp
ss
leave
mov
loopne
dec
call
sbb
xchg
xor
imul
inc
ljmp
sbbb
mov
or
cltd
adc
movlhps
dec
inc
out
repnz
push
cli
sbb
pop
movsl
rcrb
xchg
popf
imul
dec
fld
or
push
push
and
call
push
in
in
outsl
imul
or
loopne
fwait
call
je
aas
sbb
adc
test
das
jno
cmc
mov
cltd
push
lods
jno
rcll
xchg
inc
jg
popa
stos
insb
jecxz
clc
rclb
xor
sbb
test
push
clc
xchg
jo
add
add
dec
dec
pop
push
iret
movsb
cs
jg
or
sbb
push
mov
pop
mov
popa
inc
push
push
shll
ljmp
imul
inc
fwait
dec
loope
in
stos
mov
mov
ja
cmpsb
jbe
cmp
insl
dec
jmp
push
cmp
ds
js
add
ds
push
sarl
mov
rcr
std
mov
mov
out
int3
fnstcw
fisubl
xchg
mov
lret
shlb
scas
jno
fistps
clc
out
loope
movsl
fsts
js
push
pop
or
fwait
add
subl
fst
hlt
loopne
rorl
imul
ljmp
out
cmpsb
repz
imul
adc
inc
xchg
push
sub
sub
popa
sub
scas
jge
leave
mov
pop
pop
cmp
adcl
rcrl
ret
xchg
les
shlb
jae
iret
push
mov
dec
cmp
sub
adc
lcall
xlat
jns
jl
addr16
jnp
lds
scas
aad
inc
or
cmp
jo
je
stos
xchg
sbbb
mov
mov
data16
sub
pop
in
adc
rorb
clc
jmp
pop
repnz
scas
hlt
mov
hlt
jae
dec
push
sbb
pop
push
sbb
cli
cmp
xlat
jg
fistps
pop
pop
jo
in
xor
adc
les
sub
inc
sub
mov
and
rolb
dec
cld
fisubl
icebp
xchg
in
mov
or
mov
stos
fsts
sbb
in
dec
les
leave
sbbb
jmp
fdivrl
iret
mov
and
dec
insb
push
data16
and
aaa
mov
jae
dec
mov
inc
ret
mov
dec
sbb
les
aaa
pop
std
int3
add
cli
and
and
mov
int
sahf
gs
cs
jl
stos
adc
sbb
xchg
push
ljmp
lock
cli
xor
xchg
add
in
push
pop
mov
fs
shr
out
fisubrs
or
push
daa
and
sub
gs
mov
fs
and
int3
cmp
outsb
test
or
sub
dec
inc
shll
fneni(8087
cmp
adc
shr
sub
inc
ret
repz
cmp
sbb
rol
loop
loopne
daa
cli
aas
mov
into
add
rcrl
xor
push
test
test
iret
or
jge,pn
lret
pop
mov
adc
pop
pop
cmp
jge
cmpsb
into
cmp
filds
clc
hlt
mov
mov
insb
push
mov
jl
add
sbb
jb
push
mov
outsb
or
cmc
call
mov
xlat
test
clc
adc
cmp
cmp
dec
push
jne
adc
push
sbb
inc
pop
push
or
es
adc
imul
adc
jg
out
mov
fldenv
jl
cwtl
das
lahf
imul
mov
lds
icebp
mov
inc
pop
les
sub
imul
jecxz
stos
mov
push
sahf
adc
push
cmp
ret
dec
rolb
testl
fldcw
fs
mov
arpl
jne
add
int3
pushf
add
in
daa
mov
jno
mov
insl
sub
jbe
pop
int3
xchg
jl
shrb
mov
pop
idivb
mov
dec
pop
mov
cwtl
xchg
mov
mov
inc
cmc
adc
iret
mov
data16
jle
test
fstpl
fldcw
mov
mov
sbb
and
sub
push
or
in
test
in
test
adc
jo
lds
xor
xchg
sbb
bound
xor
cs
lea
aad
add
inc
add
mov
jo
roll
sub
mov
sub
or
xchg
lds
lock
jno
call
inc
cmp
test
cmc
loopne
push
popf
icebp
aam
jnp
push
arpl
test
ljmp
jecxz
or
cmpsb
mov
lock
pop
outsb
cmp
adc
cld
xor
ja
adc
cmpsb
xlat
push
loop
fldt
or
arpl
shrb
loop
add
mov
xchg
sub
xor
mov
push
lcall
sbb
mov
fisubs
stos
rcrl
lods
xchg
add
push
loope
mov
imul
sbb
cs
in
sbbl
sarb
inc
mov
pusha
and
push
xor
mov
stc
mov
mov
push
pop
loopne
lods
xchg
out
dec
inc
pcmpeqw
shrb
xchg
fwait
imul
rcrb
push
pop
aas
call
out
sahf
sbb
popf
xchg
sub
out
fisubrl
movsl
inc
xchg
push
pop
pop
sbb
xchg
pop
in
or
and
jae
cmp
cmp
insb
or
loop
mov
push
icebp
xchg
mov
dec
sub
pop
and
pop
int3
xlat
push
xchg
adc
imul
enter
sub
mov
shrl
or
and
lock
seto
shll
test
iret
movsl
xor
sub
xchg
imul
int3
dec
inc
movsb
sub
push
daa
inc
adc
or
insb
mov
push
xchg
test
ljmp
xor
test
cmp
shrb
jge
stos
adc
repz
sbb
or
dec
je
sbb
push
int
jge
dec
orb
inc
inc
adc
adc
imul
enter
pop
sar
in
dec
pop
mov
dec
push
sub
rorl
aad
push
out
cmp
sbb
jae
dec
fs
adc
jae
outsl
pushf
pop
lods
adc
movntq
test
fsub
inc
movb
mov
jl
jne
loopne
lret
jno
mov
mov
mov
add
rcll
adc
sbb
mov
pushf
insb
push
mov
outsb
ss
mov
cmp
inc
mov
pop
lea
iret
push
mov
test
mov
dec
cmpsb
cmpsb
adc
cmp
inc
fdivrl
pop
jl
adcl
pop
and
push
js
push
fisttpl
scas
jno
pushf
sahf
aam
ja
out
ljmp
out
cmc
lock
cmp
or
icebp
pop
fnstsw
or
sbb
int3
dec
lret
add
in
cmp
sahf
pusha
mov
out
into
insb
loop
jbe
rorb
or
movsl
lret
jbe
xchg
dec
int3
in
subl
xor
inc
jl
fimull
hlt
stmxcsr
pop
lds
lret
in
arpl
add
dec
and
mov
popa
mov
adc
or
stos
add
repnz
xchg
sub
popf
sub
aam
mov
jl
aad
or
inc
mov
cmc
jno
outsb
mov
outsl
movsb
cmp
inc
mov
jb
lds
orl
xor
test
std
mov
mov
push
dec
lret
mov
pop
jecxz
ret
testb
andl
dec
ss
in
pop
mov
ja
fdivrs
aaa
pusha
xchg
jne
cmp
push
rcrl
and
mov
aaa
push
push
lods
or
stos
subl
sub
leave
pop
jb
adc
mov
mov
bound
mov
aam
je
and
daa
add
idivb
sub
movsb
lret
les
iret
out
shl
push
dec
sub
mov
push
pop
mov
sub
cmc
mov
cld
adc
xor
mov
xchg
out
ja
inc
insb
daa
inc
adc
mov
test
sbb
mov
mov
and
cmpsb
ds
fisubl
pop
or
cmp
les
scas
adc
dec
ret
mov
xchg
ficompl
lea
js
pop
or
les
loop
mov
adc
test
mov
push
pop
aaa
cwtl
ficoml
pusha
lock
adc
sub
pop
xchg
and
mov
cmpsl
jmp
dec
dec
je
imul
lock
shlb
movsl
lret
aam
mov
std
lods
js
inc
mov
sti
jnp
fsubrl
xor
repz
icebp
in
bound
add
or
cmpl
gs
arpl
jnp
jo
or
enter
xchg
cmp
mov
cmp
pusha
or
mov
pop
or
jne
cmp
jmp
adc
seta
out
ss
cld
and
subl
out
sbb
pop
imul
sub
stos
insb
mov
sub
pop
mov
cltd
in
mov
and
imul
push
ss
lds
pop
cmp
ja
fcoms
in
je
xor
cmpsl
cld
jbe
push
pop
jecxz
cld
inc
lcall
icebp
sti
bound
shl
out
call
sub
data16
add
xor
sub
fucomp
test
add
daa
pop
rolb
scas
out
cmovae
sbb
lods
jae
arpl
or
or
mov
imul
jle
mov
test
jno
inc
insb
aad
std
divl
sub
xchg
and
xchg
lcall
mov
or
hlt
mov
out
or
jge
dec
jle
jmp
sahf
cmp
movsb
inc
mov
out
sub
outsb
jns
int3
xor
jne
loopne
dec
outsb
addl
insl
fmuls
xchg
int3
push
adc
sub
mov
aam
iret
ret
mov
ljmp
add
clc
repz
or
ret
mov
mov
sahf
test
stc
aad
push
adc
mov
mov
pop
jecxz
xchg
inc
imul
add
rdmsr
mov
cmpsl
cmc
mov
sub
popa
jnp
cld
insl
lock
std
stos
ja
iret
pop
or
cmp
out
pop
stos
jns
inc
test
cltd
not
fsubp
jne
fsubrl
imul
xchg
mov
popf
lods
mov
insl
xchg
xlat
mov
jns
sub
push
mulb
ljmp
mov
jmp
sub
inc
hlt
jl
xchg
sbb
aas
cmp
push
mov
cltd
adc
add
pop
andb
pop
jg
mov
adc
hlt
mov
pushf
test
jno
stc
out
mov
push
shrb
int3
lea
lock
or
mov
lret
cld
lock
xchg
loope
xchg
das
sarb
jb
and
out
outsb
rcr
out
imul
pop
dec
sbb
or
push
xor
and
mov
push
or
mov
roll
icebp
bound
mov
lods
sbb
and
test
gs
int
mov
in
jp
mov
mov
add
push
push
mov
iret
mov
mov
clc
sub
mov
outsb
int3
cmp
xchg
sub
push
fstpl
aaa
or
mov
sbb
pop
repnz
cwtl
push
cltd
mov
xchg
jno
fstps
nop
or
data16
arpl
loop
fdivrl
adcl
add
lock
mov
out
rclb
xchg
xor
fdivrl
sahf
loope
leave
inc
or
lds
sub
mov
lcall
negl
fst
xchg
push
push
loope
xor
push
or
mov
mov
dec
test
dec
push
stc
ljmp
push
sub
loop
push
adc
outsl
loopne
xor
pop
pop
push
rorl
dec
or
test
lock
in
xor
xor
xchg
or
sbb
adcl
in
out
and
fsubs
mov
lds
jp
test
inc
jmp
enter
mov
pop
fdivl
pop
jge
or
and
shrl
aas
xchg
or
sbb
mov
push
aaa
add
in
xchg
pushf
fisttps
mov
xchg
and
add
inc
mov
xor
pusha
insb
xchg
mov
sbb
inc
lcall
int
jbe
fisubrs
fnstsw
dec
push
fcmovnb
jne
lahf
dec
inc
adc
lods
ret
jl
cld
loop
jo
or
aam
jg
mov
in
cmp
dec
jmp
mov
fisttpll
ret
into
jg
call
cmp
jecxz
sub
aas
add
jb
sbb
fnstsw
jno
notb
xor
add
jmp
cli
push
or
xchg
data16
roll
in
mov
push
jecxz
ret
stc
cli
cmp
adc
mov
loopne
addb
cli
jle
in
mov
mov
jns
jns
mov
push
js
xchg
push
imul
jmp
fstpl
adc
mov
fidivs
jmp
cmpsl
mov
ljmp
loopne
inc
and
scas
lods
xor
mov
ds
push
xchg
mov
in
lds
adc
add
xlat
mov
sbb
xchg
pusha
add
and
xchg
arpl
cmp
aas
mov
ljmp
add
mov
push
sbb
xor
and
popf
imul
dec
or
test
push
jmp
bound
mov
sahf
xchg
in
test
jno
cmp
xchg
pop
mov
cld
jge
sub
or
push
sarl
pop
sahf
mov
push
push
mov
in
addr16
fs
push
imul
fwait
neg
mov
fld
pusha
dec
scas
and
and
ja
test
sbb
cmp
sbb
mov
sub
es
adc
clc
cld
mov
lret
push
mov
jbe
sbb
arpl
mov
push
shlb
sub
jb
sub
inc
imul
and
lret
aad
hlt
imul
sahf
mov
je
lcall
mov
lea
and
scas
add
jns
adc
test
push
dec
dec
pop
add
loop
daa
cmp
mov
ret
out
sbb
push
pop
in
fildl
ret
push
jmp
rsqrtps
mov
fsubp
ret
loopne
inc
push
mov
jnp
cwtl
xchg
sarl
adc
xchg
push
shll
es
scas
dec
jmp
stc
stc
lods
sub
jl
sbbb
jnp
and
mov
in
lret
scas
mov
xchg
xchg
mov
cli
adc
in
cmp
dec
cmp
mull
mov
std
mov
xor
xchg
adc
adc
iret
in
data16
add
lds
xor
jo
rcrb
and
xchg
or
and
dec
idiv
sbb
xor
loope
mov
fcmovbe
push
mov
popa
push
lods
or
pushf
ret
and
mov
sbb
lods
negl
movsb
fldcw
cli
stc
jmp
rorb
push
negl
mov
sbb
inc
jge
jbe
mov
and
jmp
int
mov
sub
cmp
jo
hlt
dec
mov
das
fstps
jbe
jmp
add
mov
pop
lods
fs
clc
pop
imul
aad
lds
or
imul
mov
or
shlb
lret
stos
cmpsb
xor
mov
adcl
or
lret
push
mov
outsb
sti
cmc
imul
mov
jns
adc
int3
cmp
fmull
jnp
mov
add
scas
adc
andl
nop
aaa
lret
loop
mov
dec
test
add
icebp
mov
push
jnp
repnz
push
loop
test
mov
xor
inc
lods
in
push
xchg
adc
fyl2xp1
lea
and
aam
or
or
xchg
push
das
cltd
mov
cmp
push
mov
push
cmpsb
dec
out
lea
call
push
sub
fcoml
mov
xchg
mov
mov
fistpl
les
mov
jecxz
fwait
jp
cmp
ficomps
add
ljmp
cmp
inc
loop
das
push
imul
or
xor
or
fcompl
stos
dec
pop
add
push
push
iret
popa
pop
sub
popf
mov
fisttps
dec
pop
and
xchg
loop
sbb
in
xchg
shll
cmp
test
mov
ficompl
pop
xchg
mov
push
test
sub
lds
arpl
add
adc
add
mov
inc
imul
stc
outsl
movsb
add
and
inc
jno
out
iret
jle
fsubs
adc
add
dec
loopne
je
push
insl
scas
fwait
in
mov
jmp
adc
movsb
in
or
movsl
sarb
jge
xor
sbb
aaa
ss
ret
or
in
adc
pop
mov
xchg
and
push
pop
rcll
xchg
je
inc
in
mov
in
mov
mov
push
sbb
sahf
mov
xchg
shrl
add
imul
adc
pop
int
das
pop
mov
loopne
dec
and
jmp
or
imulb
es
push
in
pop
fwait
xor
mov
xor
iret
push
sub
out
mov
dec
push
or
in
cmp
mov
pop
imul
inc
mov
sub
sub
aad
or
adc
push
aam
xorl
out
iret
cmp
xor
in
aad
pop
inc
mov
and
stc
sbb
xchg
xchg
adc
jbe
mov
pop
andb
out
xor
xor
loop
push
daa
push
testb
xorb
dec
xchg
adcl
pop
xchg
repnz
addr16
into
and
sbb
pop
repz
sub
mov
xchg
adc
mov
push
push
mov
push
push
and
daa
out
push
jmp
testl
cmpsl
ret
arpl
ja
xchg
cmp
movsl
dec
xor
fyl2xp1
repnz
fwait
sub
incl
xchg
repnz
cmpsb
arpl
stos
sub
clc
mov
outsl
in
adc
and
jb
xchg
negb
jle
push
inc
dec
xor
cmp
adc
inc
add
or
popa
push
in
jge
test
incb
mov
loopne
cltd
jmp
scas
sub
push
xlat
add
xor
cmpsb
dec
aam
aaa
mov
inc
enter
adc
jmp
movsl
push
mov
xchg
mov
cltd
js
sbb
in
stos
mov
out
fdiv
sub
inc
enter
ret
nop
jle
out
mov
in
push
sbb
xchg
fsubs
mov
shrb
or
lods
push
sub
push
push
pop
loop
test
ds
loope
test
rcrl
fmull
add
jg
adc
fnsave
dec
add
mov
hlt
out
pop
mov
arpl
divb
sub
dec
stc
jnp
or
rcrb
pop
sub
inc
movsb
into
dec
loope
mov
push
out
sub
pop
or
cmovge
out
pop
clc
in
icebp
ljmp
sarb
xchg
cld
jmp
pop
std
or
sbb
lds
push
das
loopne
pop
cs
mov
lcall
sub
cli
sbb
jg
out
jno
mov
xchg
mov
push
stos
lahf
pop
xor
sub
arpl
lods
adc
mov
pop
adc
repnz
push
sub
adcl
jo
and
rcrl
sti
in
pop
pop
loop
movsl
jg
stc
push
outsl
test
out
std
mov
lea
shl
sahf
scas
mov
shrl
mov
pusha
inc
incl
outsl
xor
mov
or
in
shlb
icebp
lcall
sub
in
mov
push
mov
jle
xchg
mov
pushf
sbb
pop
pop
sahf
and
xor
mov
adc
add
or
ds
xchg
push
sub
enter
push
adc
sub
andb
sub
lock
push
mov
icebp
push
out
or
jmp
pop
dec
mov
xchg
xchg
loope
lds
jecxz
lret
adc
loopne
push
xor
cmp
loop
ds
mov
lahf
sbb
jp
aam
xchg
pop
mov
test
mov
daa
pop
sbb
or
sbb
imul
sbb
mov
add
push
xchg
push
ss
jecxz
and
out
pop
pop
dec
dec
fdivrs
mov
xor
stc
clc
shl
lods
imul
mov
jmp
fwait
mov
xchg
xorl
sub
add
fbstp
lret
push
out
mov
sbb
test
push
or
mull
mov
andl
popf
int
xchg
decl
xor
xlat
scas
cmc
mov
adc
es
pop
cmp
popa
neg
icebp
sub
cmpl
das
cmp
mov
std
add
addr16
mov
adc
test
mov
cltd
lahf
jg
push
inc
fidivs
mov
jae
arpl
je
lea
rcl
sbb
jnp
hlt
ret
xchg
sbb
sti
test
inc
icebp
shl
mov
cmp
jnp
dec
dec
inc
andl
hlt
fs
lret
pop
jae
aad
outsb
add
mov
lock
dec
cltd
int
jl
xchg
sub
imul
sub
fsts
fs
adc
and
jae
dec
test
sbb
cmpsl
cmp
stos
fldenv
push
push
adc
pop
imul
mov
inc
popa
bound
dec
das
pop
popa
xor
lods
jl
mov
push
push
sub
rcr
out
rolb
push
add
mov
stc
and
jmp
lret
mov
push
aas
cmp
testl
add
inc
cmp
ljmp
or
add
adcl
shrl
fmull
xlat
clc
cmp
inc
cmp
stos
pop
icebp
mov
push
lahf
adc
sub
mov
adc
das
dec
sbb
leave
pop
out
int3
dec
mov
ja
sbb
out
xor
push
popf
xchg
repnz
pop
enter
add
push
mov
movsl
test
jmp
shlb
out
jno
mov
pushf
stc
imul
add
jle
test
xchg
sbb
or
test
mov
fsubs
add
daa
jae
mov
daa
pop
sub
lret
push
mov
lahf
adc
inc
dec
jmp
mov
push
pop
test
insb
nop
push
pop
or
push
sub
or
lods
cmp
mov
rcrb
fistpl
arpl
push
xor
adc
cwtl
add
pop
cmc
fs
imul
mov
push
scas
in
cmpsl
popa
fistps
xchg
cli
push
inc
lea
dec
clc
in
stos
test
divb
roll
daa
xchg
adc
xor
xor
inc
cmpsl
sub
fdivrs
hlt
push
push
ret
fnstcw
pop
pop
cmp
mov
in
cmp
mov
sub
pop
cmc
ljmp
xchg
lea
sti
xchg
jo
psubsw
mov
cmp
mov
fiadds
and
jo
jno
add
and
js
xchg
test
dec
inc
mov
or
push
mov
sbb
xor
outsb
push
jae
mov
icebp
mov
hlt
jae
jne
int3
dec
daa
xchg
add
rcl
inc
cli
inc
push
or
adc
inc
scas
adc
jo
xor
and
insb
loop
inc
jnp
dec
add
fdiv
mov
adc
cmp
push
adc
push
inc
and
xchg
mov
adc
shrb
inc
add
lods
out
jae
xchg
stos
movsl
int3
loop
mov
stc
inc
pop
cli
push
push
xor
lock
in
pop
inc
inc
sbb
cmp
je
mulb
ss
hlt
mov
mov
or
adc
inc
inc
lods
scas
and
adc
pop
imul
sbb
mov
addr16
jnp
loop
imul
test
stos
aad
sahf
pop
mov
dec
dec
rorb
and
xchg
je
lds
ljmp
fcoml
sti
push
sub
stos
clc
jge
lret
add
xchg
jle
dec
into
sbb
xor
jl
fldcw
xchg
test
ss
mov
cmp
pop
daa
push
fldenv
xchg
adc
lcall
ret
cmp
xor
mov
repz
jne
loopne
cmp
or
pop
je
js
addr16
add
mov
add
sbb
pop
mov
addl
mov
rorb
sets
fcomps
inc
sbb
scas
add
addr16
imul
movsb
fcoml
pusha
or
sbb
lea
ja
pusha
icebp
fcompl
imul
dec
ret
je
insb
jb
xchg
in
dec
les
lret
dec
out
lcall
icebp
add
sbb
pop
ss
iret
xor
push
repz
decl
pushf
inc
leave
inc
xchg
add
xor
push
call
fbld
or
std
subl
mov
xor
and
and
xchg
into
mov
fstl
cmp
xchg
xchg
push
loop
and
sbb
cwtl
mov
fidivrs
jl
dec
push
pop
adc
inc
push
scas
shrb
and
sub
rcrb
adc
dec
xchg
jg
sbb
in
mov
sbb
mov
lret
int
cmp
or
pop
rorb
sar
dec
jb
std
or
mov
inc
les
adc
dec
xor
add
pop
jmp
add
jmp
cmp
in
or
xor
mov
int
jae
inc
pop
mov
jge
repnz
jg
je
aam
insl
in
fwait
repnz
in
add
out
cmpl
lods
xchg
loope
add
jnp
jmp
sub
dec
divb
test
or
test
mov
adcl
fst
xlat
orb
imull
lock
inc
test
ret
mov
mov
scas
test
cwtl
xchg
icebp
int
cmpsb
add
inc
push
lods
xchg
clc
inc
test
and
les
pop
jns
mov
int
lods
jb
test
out
fldenv
scas
bound
out
xor
xor
fistpll
jmp
out
or
loope
sub
adc
iret
lods
test
setne
jl
mov
adc
push
mov
push
daa
sub
ja
fucom
or
mov
push
xlat
mov
orl
jecxz
pop
dec
lret
fiadds
aas
icebp
shr
cwtl
bnd
nop
aas
stc
pop
fcmove
hlt
gs
mov
nop
sub
push
jb
sbb
sub
out
mov
outsl
shlb
int
xor
pop
in
cmc
push
out
sarl
sbb
bound
xor
jecxz
iret
mov
incb
dec
xchg
cmc
pop
clc
pop
add
or
pop
and
stc
xchg
fwait
lods
xchg
mov
push
rcll
shlb
es
mov
out
mov
push
dec
or
ret
xlat
add
leave
ret
jne
xchg
pop
mov
mov
mov
jecxz
test
jae
add
hlt
ret
mov
pop
lock
push
add
or
pop
pop
mov
daa
lret
push
in
jl
mov
cmp
push
test
das
aam
js
push
aam
mov
and
dec
adc
int
xor
push
sub
movsb
jb
mov
cmpsl
pop
push
leave
iret
inc
imul
pop
and
jne
mov
stos
daa
bound
or
push
aas
stos
pop
pop
ss
popf
mov
fidivs
jecxz
sub
mov
pushf
add
add
push
sbb
dec
pop
mov
adc
xlat
sbb
jnp
jnp
rcr
jge
icebp
push
inc
rcl
push
outsl
mov
and
sub
arpl
out
dec
inc
dec
push
sub
push
cs
cli
dec
push
xor
mov
out
and
pop
add
push
mov
stos
repz
add
mov
inc
into
xor
push
stos
scas
bound
push
les
adc
loopne
stos
movsb
push
enter
push
xchg
data16
push
jecxz
int3
adc
inc
data16
cmp
cwtl
rcl
cmpsl
pop
jg
jnp
pusha
xor
gs
dec
jno
cmpps
jnp
inc
dec
mov
and
xor
sbb
sub
in
enter
pop
pop
ret
dec
mov
push
sub
iret
lret
push
jb
outsb
mov
rolb
enter
pop
mov
test
dec
mov
dec
fwait
xchg
mov
dec
test
cmp
repz
das
xchg
fsubs
add
pop
out
pop
das
and
jg
test
aas
mov
jne
repz
scas
leave
fsts
xor
pop
lret
cmp
xchg
aad
lret
scas
add
sub
cwtl
jmp
popf
jle
out
andl
sarb
popa
mov
sub
push
add
ds
mov
xor
cli
pushf
sub
out
jmp
sbb
jne
sti
decl
loop
and
push
cmpsl
dec
xchg
or
js
decl
mov
cmp
lds
loope
and
je
sbb
cwtl
jl
nop
lea
cmp
mov
pop
push
popa
jecxz
imul
mov
jecxz
xchg
and
dec
mov
xor
inc
pop
cmp
sbb
xchg
xchg
clc
push
shr
das
into
incb
mov
dec
xor
pop
jbe
jle
test
arpl
jmp
jge
or
call
cmc
cltd
decb
adc
push
cmp
das
adc
pcmpgtw
cmp
and
adc
add
jb
sbbl
das
inc
and
mov
jno
jmp
arpl
sahf
or
sbb
outsb
dec
jmp
les
inc
or
repnz
dec
push
aaa
jge
inc
ljmp
popa
outsl
imul
test
cwtl
shl
lcall
cmp
in
cmp
adc
xchg
dec
and
adc
cmp
popa
dec
cmp
mov
in
xchg
insb
lcall
xchg
mov
lock
cmpsl
push
add
adc
jge
cmp
ss
mov
enter
icebp
adc
mov
shl
cld
addr16
or
daa
testb
sbb
and
push
add
pop
mov
push
subb
repz
ret
pop
popf
xchg
cmp
mov
insb
popa
shll
xor
xor
popf
xor
and
and
pushf
fldenv
mov
loop
lahf
sub
or
adc
jno
jle
inc
cmp
call
adc
insl
push
movsl
fistpl
jmp
js
lcall
inc
cmc
cs
sahf
jp
mov
pop
call
and
repnz
sti
ljmp
fisubrs
imul
fildl
dec
aam
adc
sbb
push
insb
jae
and
push
pusha
out
mov
pop
adc
outsb
clc
pop
sub
int3
outsl
into
mov
popa
and
stos
mov
fadd
mov
and
dec
testb
xlat
xchg
leave
xchg
xchg
lret
imul
les
into
add
aas
xchg
mov
cmp
sub
add
lahf
sbb
roll
xchg
lcall
ljmp
popf
xor
xchg
nop
jge
sbb
cltd
pushf
dec
push
rclb
or
loop
shl
in
add
jecxz
jnp
push
inc
push
adc
sub
and
and
dec
pop
insb
enter
faddl
xor
flds
cld
aaa
push
push
or
jmp
and
je
push
lds
mov
xor
daa
push
push
pop
push
cwtl
pusha
cmpl
stos
dec
push
imul
jno
lock
cmpsb
cmp
jnp
xchg
fldl
sti
mov
add
adc
push
lods
rcl
cld
cmp
mov
std
pop
add
or
jae
jecxz
test
jns
into
repnz
cld
mov
inc
sbb
adc
xchg
inc
xlat
adc
fldcw
xor
stc
jo
rcl
pop
leave
enter
pop
ds
adc
inc
arpl
add
in
stc
movsl
imul
push
xor
addr16
dec
and
mov
lea
gs
sub
outsl
and
cs
rorb
call
subb
push
ret
hlt
lret
gs
mov
sbb
je
xor
sub
arpl
adc
inc
sbb
ret
stc
pop
lret
icebp
ss
inc
es
or
in
jo
jnp
mov
jp
ret
cmpsb
jle
add
xchg
dec
sbb
push
jne
pop
mov
test
pop
nop
push
pop
adc
cs
cmp
jmpw
or
pop
icebp
aad
clc
popa
or
lods
jae
mov
movsb
mov
push
mov
cs
xchg
push
cmpsb
xor
cmp
push
dec
sub
das
test
mov
and
lock
mov
addb
in
and
pop
lcall
xchg
pushf
mov
cmc
jae
int
jg
arpl
xchg
sub
cmp
cmpsl
xchg
push
daa
sti
daa
mov
fmul
out
sbb
fsubl
or
and
es
xchg
xchg
jns
fmull
mov
test
sbb
scas
push
mov
xlat
scas
cld
adc
jb
int3
or
mov
add
mov
mov
push
mov
cli
loope
adc
pop
lds
pop
movsb
push
jne
xor
in
lret
push
mov
inc
ja
pop
mov
gs
int3
jg
inc
int
cld
enter
je
mov
adc
scas
sbb
lahf
jae
pop
dec
rolb
gs
jmp
popa
xchg
lds
loope
cltd
push
fs
cmp
mov
pop
in
in
dec
add
pop
or
lea
popf
ja
das
pusha
popa
jne
mov
divb
push
mov
ret
sbb
xlat
mov
clc
cmp
int3
daa
or
lea
mov
hlt
in
movb
sub
loop
jle
mov
fsubl
aas
cmpsl
ljmp
xchg
add
jnp
xchg
test
clc
in
fs
adc
sub
jnp
imul
std
lcall
cld
lea
popa
cmp
sub
loope
fisubs
std
fnsave
int3
rolb
pop
adc
xor
fadds
push
adc
out
call
cli
enter
mov
loope
mov
push
inc
cs
push
and
mov
inc
sub
test
stc
and
mov
ds
fdivl
jp
fldt
mov
cmp
pop
xchg
gs
out
jle
xor
inc
dec
std
daa
mov
mov
popl
mov
dec
fcmovne
and
fistpl
mov
mov
pushf
call
dec
and
test
bnd
jge
sbb
mov
fildll
orb
les
cmp
inc
popa
cmp
notb
jl
xchg
dec
cmp
into
leave
cli
divb
jnp
mov
sbb
jo
push
movsb
mov
jg
mov
pop
cmpsl
push
mov
loopne
jg
jns
repz
mov
test
mov
icebp
and
fmul
std
into
sbb
push
stc
xchg
insb
shlb
jg
and
into
std
push
xchg
notl
lock
ja
sbb
push
stos
shr
xor
outsb
cmp
inc
jbe
xlat
jnp
fstpt
ja
lock
and
sub
jl
sahf
jl
inc
inc
popa
mov
in
xchg
cltd
sbb
imul
mov
shlb
lods
mov
and
sub
sbb
lret
ud1
cld
bound
sub
int
call
dec
xchg
ret
cmp
sub
cmp
adc
or
test
inc
dec
jo
xchg
mov
sbb
jns
idivb
pop
js
sarl
imulb
jmp
and
shr
sub
dec
mov
gs
in
or
xor
stos
lcall
repz
sbb
sub
xchg
ss
mov
fstps
les
into
pop
sub
inc
push
dec
repnz
push
jmp
stos
imul
jle
mov
clc
movsb
inc
loop
mov
cs
mov
pop
pop
sbb
in
shrb
pushf
lcall
dec
sub
bound
cmp
jbe
jno
mov
xor
xor
inc
add
xlat
sub
test
mov
xchg
sub
sbb
mov
dec
inc
adc
push
sbb
jmp
adc
sbb
rcrb
jno
aam
jns
add
push
push
cmpsb
lea
iret
xor
sub
dec
dec
out
popa
xchg
popa
data16
and
sub
lock
fcmove
mov
pop
sbb
cltd
pop
adc
xorb
mov
addr16
sub
loopne
out
jmp
jp
xor
cltd
jecxz
ret
push
repnz
imul
gs
push
add
int
faddl
insl
sub
call
mov
cmp
lcall
ss
adc
jno
inc
and
adc
ret
cs
pop
cmp
pop
cmp
xor
push
sub
inc
lret
mov
fwait
mov
repnz
iret
cmp
xor
in
push
insb
stos
or
xor
daa
pop
hlt
dec
std
adc
cltd
call
mov
xchg
jbe
jae
jmp
lret
lret
jmp
rol
scas
jp
les
xchg
mov
daa
cmovl
xchg
mov
sbb
outsl
ds
leave
dec
dec
rclb
nop
imul
sahf
pop
jmp
addb
test
and
test
push
pushf
aas
fs
gs
xchg
mov
push
fcomip
push
add
dec
and
mov
xor
arpl
fstps
movsb
xorb
dec
jns
inc
jle
jl
and
lock
add
stos
jp
sarl
sub
and
pop
icebp
jo
adc
inc
insl
cmp
xchg
mov
and
push
or
mov
imul
mov
mov
push
aaa
pop
xchg
jmp
mov
stc
push
lret
pop
pop
cmp
call
xorb
add
in
addr16
insl
sbb
addb
je
or
imul
mov
jbe
outsl
xor
in
call
ss
sub
adc
mov
xchg
sub
mov
lock
jle
jg
mov
mov
icebp
sub
cmpsb
jmp
movsl
push
scas
add
sub
fbld
ljmp
push
fsub
xchg
pop
jne
adc
in
or
js
and
pop
aas
mov
stos
mov
into
into
mov
push
sub
rol
imul
lock
int
in
int3
int
jmp
imul
sub
lods
or
arpl
aam
or
out
push
int
ja
loopne
test
push
fdiv
es
dec
imul
adc
pop
push
or
rcrl
icebp
ljmp
or
lock
mov
cmc
or
push
pop
je
mov
xchg
and
cmpsl
jne
cmp
xchg
stos
inc
aaa
shlb
imul
mov
xor
out
mov
cld
sbb
sub
sbb
cmpsl
sti
in
adc
add
cmp
inc
pop
movsl
sarb
push
push
ficoml
jmp
add
mov
pop
sahf
imul
loopne
fnsave
ret
dec
je
adc
ret
loope
jmp
pop
cs
jbe
cmp
cli
sub
cltd
mov
cld
out
rolb
cmpsl
jge
lret
subb
lock
in
jle
dec
in
inc
cmpsl
in
cmp
sub
aam
or
mov
aad
insl
xor
inc
jecxz
xchg
mov
aas
dec
pop
insb
nop
mov
xchg
ret
adc
and
fmul
loop
aam
roll
nop
xchg
mov
icebp
ljmp
out
mov
adc
mov
mov
sbb
push
cmp
dec
das
daa
mov
es
stos
xchg
pop
mov
out
pop
mov
sahf
add
cmp
mov
xor
cmp
xorb
lock
leave
je
scas
movsl
add
jle
mov
add
dec
sbb
rcll
sbb
xchg
ljmp
test
scas
in
cltd
push
pushf
jmp
inc
mov
mov
sahf
int3
outsl
and
in
notb
adc
pop
xchg
mov
push
ret
pop
movsl
test
aaa
pop
ljmp
mov
sbb
mov
xchg
lock
fwait
xchg
or
imul
call
int3
loopne
adc
sbb
sbb
pop
sbb
jmp
inc
cmp
imul
pop
xlat
insl
pop
xchg
xchg
push
xchg
add
mov
sbb
xchg
push
scas
icebp
dec
jl
ret
jae
mov
nop
rolb
repz
adc
pop
push
cli
outsl
cmpsl
mov
xor
ret
leave
add
sbb
ljmp
filds
rcrb
and
sbb
stc
mov
mov
xchg
dec
arpl
divb
dec
aaa
jno
je
out
or
xorb
ss
lret
bound
aaa
mov
inc
push
gs
push
loope
jb
inc
push
adc
les
arpl
mov
sub
outsl
adc
jecxz
xchg
xor
xor
pusha
jnp
xchg
loope
outsb
scas
shll
xchg
sub
or
outsl
cld
push
mov
in
outsl
sbb
jae
jge
xchg
push
popf
push
fs
test
les
or
dec
xor
shll
vpshlw
js
mov
inc
mov
cmc
jg
inc
mov
xor
stc
mov
push
loop
jb
push
ror
je
pop
je
movntps
jbe
add
aas
jb
pop
movsb
xchg
ljmp
mov
test
insl
xorl
in
cwtl
fisubrl
pop
push
scas
call
ror
cwtl
fcoms
push
pop
xchg
and
xlat
lret
or
xchg
xor
pusha
xchg
inc
mov
and
fidivl
pop
cmp
inc
jo
ljmp
ljmp
jbe
jo
sbb
and
inc
jp
orb
inc
xchg
cmp
in
push
mov
imul
cmp
adc
lcall
pop
fwait
in
xchg
mov
lcall
fwait
xchg
push
lret
sub
sub
negl
or
test
jno
add
popf
mov
cmc
pop
inc
rolb
or
dec
les
sarl
sub
dec
pop
addl
xchg
push
and
and
dec
jl
inc
lods
jbe
sub
das
imul
cwtl
fsub
xchg
frstpm(287
cwtl
sbb
pop
les
mov
jne
pop
sarb
jg
sub
fwait
rcr
add
cs
lret
pop
xchg
insl
jle
cmc
scas
xchg
insl
mov
adc
addr16
xchg
repnz
adc
out
sbb
lods
mov
jne
dec
mov
out
les
ja
movsb
inc
sbb
jmp
loop
bndldx
mov
ds
or
mov
cld
popl
dec
mov
shrl
push
cwtl
movsl
cmc
mov
aaa
testl
mov
in
in
jl
or
out
cmpsb
add
sub
add
sbb
fwait
adc
mov
sbb
push
popa
xor
popa
add
mov
scas
inc
pushf
imul
negl
add
add
sbb
bound
sub
test
adc
in
sti
iret
roll
cmpsb
inc
sbb
sbb
aas
inc
test
inc
jnp
hlt
lods
fcompl
test
ficomps
dec
popf
insl
add
imul
sub
dec
jecxz
sbb
jne
cwtl
sbb
sub
data16
push
cmc
xchg
test
pop
pop
xchg
xor
dec
icebp
lret
rorb
xchg
adc
pop
xor
cmpsl
sub
add
add
fdivrl
mov
aam
in
add
in
loope
xchg
mov
data16
mov
mov
mov
in
in
aad
inc
dec
jl
jle
hlt
imul
ja
repz
out
cmpsb
mov
pop
mov
mov
mov
add
mov
lea
adc
mov
les
pop
loopne
or
or
pop
mov
xor
movsl
pop
cwtl
fstpt
aad
mov
jne
test
cmp
addl
das
add
and
rcr
enter
aad
xchg
leave
inc
pop
cmp
jae
cwtl
icebp
xchg
inc
xor
dec
xchg
xchg
lahf
xchg
sub
imul
pop
mov
inc
or
xchg
rcrl
iret
outsl
lds
push
lods
data16
mov
sti
pop
mov
fimuls
cmpb
ror
rorb
pop
mov
pop
ss
clc
push
xor
dec
insl
loop
cld
mov
add
ficomps
inc
cmp
leave
scas
in
insb
mov
mov
dec
sbb
xor
xchg
mov
mov
add
scas
mov
push
addr16
push
mov
fwait
incl
jo
jne
xor
add
mov
gs
push
jo
jp
add
test
clc
cmp
stos
adc
out
mov
out
add
adc
inc
icebp
stc
ret
jb
in
xor
dec
and
adc
iret
adc
cs
push
repnz
mov
xchg
movsb
data16
shrl
jge
dec
mov
sbb
push
orl
push
divb
mov
fstl
loopne
leave
xorb
hlt
repz
jl
mov
dec
push
outsb
rcr
pop
test
jno
sbb
adc
test
mov
loope
dec
and
ljmp
cld
xlat
add
popf
mov
pop
mov
inc
sub
mov
js
subl
out
mov
pop
lods
add
mov
rclb
xchg
insl
stos
mov
test
xor
shl
cwtl
loop
push
mov
je
les
add
into
outsl
iret
je
xor
xor
adc
push
test
pop
das
xchg
or
and
push
mov
mov
enter
or
test
leave
dec
xor
movl
mov
cltd
in
in
and
mov
sbb
push
inc
adc
in
movsl
inc
or
add
fimull
int3
ljmp
jne
or
sub
lock
dec
jbe
lods
push
pusha
mov
shll
dec
shrb
nop
mov
loope
jl
scas
xchg
dec
scas
dec
push
adc
dec
pop
dec
movsl
ds
mov
cmp
scas
stos
xchg
ret
in
jbe
jle
movsb
sti
jecxz
adcl
addr16
scas
adc
cltd
mov
mov
xchg
hlt
lds
rorb
mov
inc
in
cwtl
int
sub
stos
push
popf
add
xchg
call
cld
mov
jne
clc
sahf
mov
dec
xor
stos
fisubrs
rcrl
out
mov
pop
cmp
imul
movsl
push
dec
push
jl
popf
jle
adc
dec
jnp
cmp
nop
sbb
es
mov
stos
ret
jecxz
sbbb
inc
xor
mov
lret
inc
imul
hlt
lds
mov
pop
dec
push
xorl
lea
sub
push
loopne
push
dec
push
inc
js
iret
dec
mov
jg
test
test
rcll
push
testb
imul
adc
push
cmp
dec
js
xlat
and
ds
xchg
push
andnps
aas
dec
imul
loopne
dec
cmp
dec
addb
mov
adc
loopne
test
push
sbb
mov
fistpl
mov
into
test
lods
ja
je
loopne
int3
rcr
jecxz
dec
movsb
adc
mov
sub
pop
out
lds
loopne
mov
cmp
push
testl
aad
ficomps
xchg
fwait
push
je
adc
sbbb
mov
mov
cmp
test
inc
in
fwait
adc
repnz
jmp
adc
lea
push
or
jns
out
fs
rclb
jno
pop
arpl
sti
jl
xor
or
loop
sbb
adc
mov
pop
mov
mov
jmp
shrl
mov
xchg
xor
stc
cwtl
rolb
repnz
xor
mov
repnz
mov
adc
repnz
sti
mov
push
xlat
insb
fnstcw
roll
sbb
leave
pop
stc
repnz
pop
or
jo
sar
jp
and
pop
mov
push
pusha
dec
imul
arpl
sbb
popa
mov
xor
cmp
add
ret
jmp
mov
cwtl
out
outsb
addr16
inc
inc
mov
lea
out
icebp
push
mov
cmp
loope
cmp
rcrl
dec
mov
add
cld
jb
outsl
icebp
xchg
pop
scas
sub
add
sbb
jns
dec
repnz
and
pop
pop
in
iret
std
lods
mov
leave
dec
xor
sbb
mov
into
faddp
xchg
push
movsl
ret
subl
clc
int
mov
pop
jne
test
push
push
adc
mov
mov
mov
jo
xchg
mov
subb
ljmp
incl
ret
xchg
pop
mov
push
cmp
cmpsb
fistps
and
mov
in
push
dec
push
call
ds
push
and
adc
imul
aaa
stc
ret
imul
cmp
add
xor
mov
fcoms
push
adc
jge
inc
sub
xchg
mov
push
fiadds
fwait
cli
clc
imul
test
scas
data16
aaa
ret
dec
cmp
jl
xchg
es
hlt
fisttpl
ljmp
xchg
cmc
into
dec
stos
inc
fmul
pop
leave
jg
dec
mov
sub
jne
add
imul
xlat
mov
and
js
adc
in
jnp
xchg
mov
ret
and
mov
sbb
xrelease
popf
and
cltd
out
push
jp
mov
mov
das
cmp
imul
test
xchg
mov
mov
ret
add
jns
add
sub
in
pop
test
addr16
dec
xchg
jecxz
movsb
push
push
mov
mov
push
inc
push
push
inc
out
pop
stos
jmp
decl
andb
es
cmpl
lds
mov
sub
lret
aas
popa
cmp
mov
mov
push
loope
pop
lahf
jg
push
cmp
outsb
lock
std
jae
inc
xor
jno
xor
out
add
ja
stc
inc
or
loop
cmc
pop
push
xor
sub
mov
sub
sbb
sbb
jns
mov
inc
dec
xor
pusha
mov
and
jge
xor
outsb
cwtl
jecxz
in
cmc
fmull
dec
push
sub
sub
sbb
test
and
outsl
out
pop
out
push
sbb
lahf
sbb
scas
sub
dec
int
roll
ds
sti
ret
subb
push
std
das
gs
hlt
jo
jno
xchg
push
int
add
cld
pop
jecxz
das
aad
xchg
pop
insl
fcoml
cmp
fistpll
lcall
notb
adc
lods
or
testl
out
sub
cmc
mov
cld
aaa
mov
add
je
lods
hlt
adc
add
or
or
mov
loopne
popa
lds
inc
or
xor
add
and
in
ljmp
mov
sarb
out
js
adc
pop
out
push
cld
add
popf
fildll
pop
sahf
mov
mov
xchg
mov
push
mov
inc
jo
int
leave
repnz
push
cltd
sub
shll
fmuls
push
adc
cmc
push
test
mov
lods
xor
iret
mov
mov
in
mov
sub
push
fisttps
fwait
jmp
xchg
sub
add
sub
push
mov
push
mov
inc
add
jecxz
sbb
outsl
push
aad
or
fwait
das
sub
pushf
mov
add
out
cs
addr16
mov
sub
xor
cmpsb
pop
mov
mov
sub
aaa
shrl
push
fidivrs
cmp
jge
insb
push
pusha
push
js
sub
fwait
and
mov
movsl
in
cwtl
xchg
aas
int3
lock
nop
stos
mov
daa
gs
pop
mov
mov
push
add
add
test
mov
inc
mov
and
shll
xor
push
movsb
fistl
sbb
mov
jno
inc
outsb
jl
pop
sub
push
in
std
inc
xchg
xor
clc
mov
inc
movsl
xchg
push
shrb
add
test
mov
inc
rclb
add
push
pop
arpl
cmp
sbb
outsl
push
out
divb
fwait
bound
jp
fidivrs
push
mov
mov
adc
jp
rorb
ljmp
mov
xor
loope
mov
popf
and
int3
adc
sub
add
das
xor
add
push
fucom
xchg
mov
inc
rolb
mov
lods
pusha
enter
xor
fldcw
sbbb
cmpsb
mov
xchg
aaa
insb
adc
mov
cmp
int
ljmp
push
cmp
neg
mov
add
jge
mov
pop
jne
rcrb
sub
mov
out
sti
ja
ret
test
jmp
sub
xchg
or
sbbl
push
inc
mov
jp
jne
inc
dec
and
pop
test
test
xchg
mov
orb
mov
sahf
std
push
scas
jbe
clc
mov
cmpsb
fimuls
mov
lcall
stos
pop
out
rcl
jns
sub
inc
aas
or
adc
cmpsb
pop
fyl2xp1
or
subb
cmp
push
lcall
insl
dec
push
nop
repnz
or
and
jae
cmc
out
sbb
mov
adc
mov
fnstcw
cmp
lcall
imul
leave
xchg
loopne
pop
or
loope
jb
xchg
inc
cmp
loopne
stc
xadd
push
cmp
in
lock
mov
inc
dec
roll
outsl
jbe
or
or
lret
jnp
sub
inc
jb
fisubrl
cmp
xchg
push
sub
pop
in
pop
mov
mov
leave
fs
push
adc
add
fcoms
jns
imulb
ljmp
sbb
push
imul
xchg
out
push
xchg
sbb
jns
jg
sub
inc
int
xchg
cmp
mov
call
dec
mov
jno
xchg
rcll
dec
ja
and
add
pop
cs
int
sbb
fistpll
jns
out
hlt
inc
mov
add
cmpsl
clc
lds
pop
push
and
nop
das
pop
aaa
cld
pop
xor
cmp
or
xchg
adc
addr16
out
sbb
jbe
scas
adc
arpl
inc
scas
fisubl
lock
stos
bound
mov
dec
ja
lods
sub
push
pop
dec
in
cmp
shrb
aas
popf
xchg
xchg
loopne
jne
xchg
ljmp
or
icebp
mov
sti
mov
lea
enter
js
test
jb
pushf
xchg
loopne
repz
sbb
or
mov
ds
cmc
adc
js
fcomp
cwtl
dec
rcrb
rcll
jo
test
sbb
xlat
mov
clc
jecxz
pop
insl
scas
dec
cmpb
shlb
shlb
dec
rcrl
push
sbb
pushf
sbb
cmp
das
sub
out
jl
mov
aaa
dec
in
xchg
bound
mov
imul
xor
mov
je
test
ja
fsts
out
jbe
in
push
cmpb
add
mov
xchg
dec
sub
data16
add
cwtl
push
dec
inc
inc
pop
iret
lock
popa
sub
fsubr
xchg
mov
cmp
mov
sub
inc
mov
push
cmp
adc
and
adc
and
or
sub
jo
fwait
jns
sub
cmp
add
inc
mov
gs
in
out
sbb
arpl
jo
gs
cltd
inc
stos
pop
xor
cmpsb
jno
mov
push
pop
mov
mov
stos
cld
push
xchg
in
jle
in
and
and
sub
cmp
std
push
cs
or
out
mov
and
push
mov
xor
add
sub
lret
push
dec
lret
adc
fwait
data16
mov
pop
lret
loopne
cmp
sub
pushf
push
aam
fldcw
push
popf
popa
aam
dec
fwait
xor
movsl
in
fs
lahf
mov
jecxz
or
imul
das
jg
lods
xor
xor
cli
ret
ja
pop
rolb
cwtl
jecxz
mov
push
add
fnstsw
popf
xchg
shlb
in
fisttpll
loope
loopne
mov
outsb
fnstsw
sbb
push
mov
adc
je
xchg
xchg
movsl
js
jnp
adcl
jecxz
insl
lods
xchg
mov
mov
das
pop
inc
loopne
sub
and
mov
and
lods
or
inc
lds
leave
das
cwtl
sub
rorl
jns
xchg
insb
cli
sahf
sbb
cmpsb
loopne
imul
test
jg
out
or
scas
in
lock
ds
dec
test
adc
loop
sub
stc
lds
fidivl
push
fucomp
xchg
or
jne
shrl
inc
ret
push
test
pop
shll
into
push
cmp
mov
pop
in
push
lret
jecxz
mov
add
pop
lar
sti
inc
add
cmpb
xchg
lods
movsb
jae
dec
or
mov
mov
push
mov
or
push
adc
ss
mov
fcom
pushf
or
push
mov
pushf
jecxz
push
cmp
sbb
ds
setb
jp,pn
adc
jmp
mov
wbinvd
pop
repnz
pop
jg
lods
rclb
mov
push
push
mov
mov
pop
push
ret
popf
inc
inc
loop
lds
jg
inc
jl
sub
mov
out
inc
xchg
leave
mov
in
and
iret
adc
jecxz
xor
popa
lret
and
push
imull
scas
cli
loope
push
aad
mov
out
mov
mov
repnz
test
sbb
inc
adc
mov
jne
out
in
push
fmuls
pop
mov
mov
fnstenv
inc
shlb
mov
and
rcrb
adc
pop
sub
xor
dec
flds
push
icebp
xchg
add
jnp
xor
out
lods
pop
adc
push
cmp
adc
ret
push
jp
jmp
rclb
push
loop
sti
sahf
mov
andw
mov
lds
es
xor
lock
mov
sbb
xlat
xchg
cltd
or
push
pop
dec
xchg
aad
ficoms
mov
pop
lds
negl
mov
in
lcall
insl
loopne
lcall
add
mov
jb
rcrl
xchg
mov
xor
outsb
or
loop
jo
fxch
add
int
jnp
ja
jno
jge
and
je
sahf
shlb
sbb
cmp
andl
push
icebp
ret
lahf
lcall
sarb
arpl
jo
mov
adc
jecxz
dec
cmpsl
pop
imul
mov
mov
sub
shl
cmp
push
pop
xlat
or
inc
imull
mov
outsl
or
hlt
inc
in
test
out
jle
iret
or
in
sub
push
in
pop
xchg
mov
inc
lahf
mov
roll
fldenv
adc
mov
mov
test
dec
hlt
out
ss
cmp
mov
and
jae
lret
push
mov
popa
mov
jg
es
in
outsb
sbb
adc
mov
add
xchg
pop
rclb
ret
enter
leave
jmp
or
sub
pop
cmpsl
xlat
ja
pop
jo
adc
out
sub
hlt
sub
sub
cwtl
in
loop
mov
pusha
mov
sbb
cli
out
push
mov
xor
sbb
movsl
cmp
pop
inc
pop
push
outsl
stc
scas
iret
or
int
shlb
ret
xor
push
dec
mov
xchg
outsb
xchg
scas
in
ud1
dec
push
das
fadds
cmp
movsb
xlat
cli
pop
sbb
cmp
xlat
jmp
insb
and
sub
or
jno
mov
scas
jne
jnp
add
add
ja
dec
lock
rorb
add
sbb
loopne
lret
lods
ror
xchg
lea
pusha
adcl
cmp
lds
out
test
idivl
bound
cld
mov
aad
sbb
hlt
pop
ds
mov
sbb
dec
cmp
pop
test
loope
push
add
jl
mov
mov
mov
ds
or
cltd
aad
fisttps
mov
imul
add
iret
cmp
faddp
sub
ret
jl
sub
stos
divl
loopne
mov
ljmp
xor
sahf
enter
sahf
push
cmpsb
nop
mov
adc
inc
shl
and
mov
aam
pop
lock
xchg
dec
jge
inc
test
inc
jo
movsl
push
lcall
jle
xor
pop
ret
test
jb
cmc
pop
mov
dec
in
test
outsb
pop
repz
es
mov
cmp
std
imul
mov
cmp
lea
cmp
shrd
push
ds
mov
inc
aad
ds
ss
cwtl
mov
stos
aad
bnd
sahf
jge
jbe
aaa
pop
cld
fwait
xor
xchg
or
sbbl
jns
clc
sub
pushf
in
cli
add
lds
push
pop
sahf
imul
fisubl
push
ds
dec
cmc
xchg
inc
jae
out
inc
push
push
mov
inc
sbb
imul
mov
or
lret
repz
lds
sbbl
fcmovbe
jno
sbb
lret
inc
xchg
insl
cmc
push
invd
xchg
ljmp
in
das
mov
cmp
fmull
lods
neg
inc
mov
xchg
inc
push
sub
jno
inc
inc
mov
jb
insb
sub
mov
mov
sarl
cmpsb
neg
add
cwtl
bound
fdiv
ljmp
push
fiadds
pop
mov
jmp
add
or
pop
inc
lret
jne
mov
jmp
mov
or
daa
dec
add
bound
rcrb
lcall
rorb
sbb
fists
xchg
mov
jmp
jg
loope
lret
ja
jg
pop
sbb
dec
jns
or
js
adc
cld
adc
jmp
mov
and
nop
shll
mov
dec
fcmovbe
cmp
inc
and
int
inc
jecxz
lea
xchg
xchg
dec
xchg
pop
or
inc
inc
push
mov
mov
call
je
xchg
in
mov
lret
repz
test
dec
inc
add
push
jmp
std
out
in
cmp
sbb
lret
dec
stc
mov
xchg
dec
scas
sub
cmc
popl
push
fsubs
and
in
add
fistps
inc
cmp
mov
sub
xchg
and
mov
inc
jge
jecxz
cmpsb
aad
adc
sti
cld
pop
sar
adc
mov
aad
test
xlat
cmc
and
nop
lret
cwtl
addr16
fwait
mov
add
add
xchg
xchg
stc
sub
pop
in
push
pop
mov
pusha
push
int
out
or
outsl
inc
jmp
push
inc
cli
subb
lahf
xchg
dec
std
paddusw
out
cmp
and
push
and
xor
inc
push
das
dec
fcoms
pop
mov
cld
mov
pop
fs
test
or
lock
jnp
jg
jo
mov
or
das
mov
xor
in
icebp
fbstp
mov
pop
sbb
sbb
inc
lcall
fisubs
sbb
stos
and
ljmp
pop
xor
inc
mov
fsubrs
push
sub
iret
fisubs
push
mov
adc
or
inc
push
and
add
pop
push
das
sub
repnz
stc
or
add
popf
and
pop
xchg
ss
mov
test
stos
inc
inc
add
sub
imul
push
in
jno
push
cwtl
scas
mov
jo
scas
adc
and
fidivs
aas
sub
in
or
inc
sub
push
and
scas
or
cs
je
aad
mov
and
dec
lret
sbb
inc
test
fdivs
daa
fisubrs
push
lret
cltd
push
sti
push
in
adc
fnstsw
mov
sbb
pop
xchg
push
pop
xor
popf
lea
inc
cmpsb
test
jecxz
mov
popf
mov
ret
out
mov
movsb
sbb
dec
roll
or
sti
iret
add
repz
arpl
insb
imull
sub
loopne
cmpsl
aam
adc
sub
pop
pusha
je
out
jp
je
mov
out
test
loope
fstl
mov
aaa
andl
mov
xchg
in
inc
mov
xor
pop
jge
std
mov
jle
mov
add
es
scas
mov
cmp
scas
mov
mov
icebp
or
mulb
mov
test
ja
sbb
sbb
dec
jge
sub
ja
push
add
pop
xor
ds
add
xor
out
hlt
xchg
jp
mov
dec
fsubr
sarl
or
in
or
and
push
cltd
orl
icebp
sub
inc
outsb
dec
cmp
xor
aad
stc
movsb
out
pop
jmp
cmp
mov
push
push
cltd
xor
xchg
aam
stos
adc
ljmp
add
mov
cwtl
imul
sbb
scas
dec
out
cs
sti
cmp
xchg
das
aas
lods
mov
addb
jnp
cmp
mov
push
pushf
shll
adc
push
in
mov
push
aas
xchg
push
pusha
push
in
push
ss
push
cmpxchg
push
xchg
dec
in
push
cmp
mov
push
push
ret
push
xor
mov
leave
lds
push
mov
push
es
scas
inc
in
push
mov
cmp
test
sti
xor
insl
xchg
add
push
pusha
inc
inc
jbe
xor
imul
mov
mov
sub
rcr
pop
mov
andb
push
ss
fs
cmp
xor
sbb
xor
scas
out
jl
icebp
push
popa
in
std
sahf
inc
xchg
inc
test
cmp
repz
dec
adc
sbb
cwtl
and
jae
cs
xchg
shrb
add
cmp
jo
rcll
mov
adc
cmp
xorl
jge
xchg
mov
and
dec
stos
ss
jno
push
push
jo
xor
xor
fbld
jmp
out
xor
cmpsl
les
scas
pop
xorl
aaa
push
loope
xchg
not
outsb
mov
cwtl
dec
pop
testb
sbb
sub
das
mov
out
xchg
fildll
mov
jp
xchg
dec
nop
repnz
mov
mov
movsb
cmpsl
leave
lods
aad
mov
sub
nop
aaa
lcall
aam
lock
dec
or
insb
cli
dec
or
add
ja
addl
pop
cli
mov
je
fdivl
mov
mov
or
mov
ss
pop
mov
mov
add
mov
js
shlb
cwtl
dec
mov
iret
es
fcom
adc
cld
xlat
jl
add
scas
adc
push
in
das
loopne
mov
pop
lea
or
fsubl
addb
or
pop
and
sbb
push
into
lahf
jae
add
sahf
out
and
scas
dec
lods
cmp
pop
arpl
mov
nop
lds
xchg
in
rcrb
test
adcb
sahf
pop
je
inc
dec
jne
sub
addr16
dec
stos
or
push
mov
iret
and
pop
loope
fidivl
cld
adcl
xchg
xor
lods
lock
cmp
loopne
mov
mov
cmp
pusha
lods
rcrb
cmp
adc
int3
cmp
cltd
jge
mov
pop
cwtl
xchg
mov
mov
vmwrite
push
sub
cmp
pop
mov
out
inc
repz
and
stos
ljmp
push
insl
pop
push
mov
mov
cwtl
adc
daa
cmc
inc
adc
mov
ret
repnz
fcom
jb
iret
cmc
push
punpcklwd
stos
out
lods
in
sbb
push
cmc
test
and
push
lcall
pushf
repnz
andb
fcmove
jmp
push
adc
popa
out
pop
and
jnp
dec
dec
addb
jns
das
ret
or
or
pop
mov
orl
push
pop
mov
ss
push
xor
jbe
adc
push
ljmp
mov
jecxz
loope
shrb
in
cmpsb
mov
adc
mov
shl
push
mov
xor
nop
or
jle
call
loopne
fisubl
dec
call
mov
test
lods
xchg
jle
mov
sub
sbb
jnp
int3
daa
mov
fists
pop
jbe
inc
lret
call
inc
mov
pop
pop
and
pusha
mov
and
push
adc
or
iret
cld
outsl
and
jl
in
mov
loopne
cmp
in
xchg
mov
in
xchg
fdivs
jo
jae
sbb
jecxz
nop
inc
or
jne
xchg
insl
pop
xchg
mov
test
cmp
xor
jmp
cltd
add
xchg
fidivl
mov
jnp
xchg
or
push
mov
andl
aaa
loopne
in
cld
shr
push
ja
push
pop
sub
lds
mov
mov
mov
xchg
shll
call
hlt
cmp
mov
in
in
inc
lds
fadds
out
rol
cli
sbb
test
ljmp
insb
xchg
shr
mov
mov
inc
push
ljmp
inc
xchg
xchg
mov
and
jnp
int3
mov
jg
in
addr16
xor
nop
sbb
pusha
lods
pushf
call
jmp
mov
xchg
ja
outsl
fsubrp
es
mov
in
and
fisttpll
adc
mov
insl
out
sbb
iret
push
pusha
push
test
leave
jo
dec
xchg
or
cmpsb
gs
rorl
or
mov
int3
and
cmp
mov
and
loop
cmp
xchg
popf
test
mov
cmpsl
cltd
movsl
fldcw
mulb
popa
repz
leave
mov
ficoms
inc
mov
lret
push
test
xchg
sub
dec
test
mov
sub
mov
arpl
push
mov
xchg
mov
aad
pop
mov
repnz
cs
mov
sub
mov
and
mov
in
outsl
stc
mov
mov
out
mov
jae
iret
push
pcmpeqw
jb
push
test
jp
scas
pop
dec
cmpsl
cli
stos
outsb
fsubrl
rcr
sub
dec
arpl
dec
fcomp
fbld
push
fidivs
scas
les
cltd
xchg
shll
outsb
dec
push
or
or
sbb
aad
das
jne
mov
lods
in
sbb
cmp
aaa
pop
hlt
pop
adc
mov
and
cld
and
xchg
add
shlb
inc
add
push
clc
into
sub
hlt
sbb
sbb
loope
pushf
cltd
mov
insl
or
cmp
mov
testb
xor
lcall
push
lret
ja
push
scas
das
pop
daa
addr16
loopne
jmp
outsb
mov
sbb
adc
xchg
mov
ret
xor
pop
mov
shr
sub
es
cmp
mov
or
xchg
sbb
mov
sbb
sbb
mov
mov
lds
repnz
xor
jge
nop
data16
xchg
jmp
jae
jno
mov
lahf
imul
xlat
mov
push
push
adcl
push
fisttpl
imul
mov
cltd
rcl
push
cmpsb
adc
fwait
jl
mov
hlt
cmp
dec
xor
hlt
xchg
push
addr16
cs
iretw
pop
ds
test
mov
mov
pop
sti
adc
int3
shrl
xchg
dec
in
mov
lcall
mov
sub
xchg
or
mov
xchg
movsb
in
sub
fdivs
orb
xchg
add
mov
xor
aaa
push
call
mov
and
cmp
cmp
and
bound
or
sahf
xor
orb
add
test
lret
add
xchg
js
sahf
mov
mov
cwtl
lods
push
sahf
fs
xchg
int3
lods
jo
or
shrb
sub
pop
mov
cli
and
mov
jg
xlat
pop
fwait
mov
insb
mov
daa
xlat
movsb
orb
shll
push
mov
jmp
das
push
sbb
sub
cmpsb
mov
mov
inc
inc
in
scas
sti
jp
cmc
mov
xchg
clc
sbb
divl
push
or
arpl
ss
xchg
mov
pop
sub
xor
adc
scas
jg
sub
mov
fimull
lds
daa
adc
xor
pop
shl
sbb
add
notb
fists
push
cmp
mov
rcll
and
stos
pop
das
vpsubw
stos
adc
xchg
insl
lret
mov
mov
sbb
mov
fisubrs
xor
pusha
adc
add
dec
push
insb
mov
push
loop
and
mov
pop
cli
mov
inc
in
aaa
std
sti
sbb
adc
mov
into
fnstsw
pop
enter
inc
fbstp
pop
roll
mov
push
fstl
push
add
jle
in
mov
inc
outsb
dec
ret
lea
dec
inc
in
or
outsb
psubusw
jnp
xchg
es
idivb
cmp
int3
ret
lods
jle
xor
cltd
or
xchg
loope
mov
dec
dec
mov
dec
stos
xchg
std
sti
gs
andl
cli
push
scas
xchg
sbb
pop
mov
jne
rol
mov
rcrb
jne
sbb
insb
inc
shll
stc
jo
xlat
jae
xor
push
and
cwtl
adc
cmpsl
imul
add
data16
cltd
jl
or
cli
lods
loop
outsb
cli
and
lret
inc
lods
sarl
xor
dec
lods
sbb
loop
mov
or
sbb
cmp
cmpb
shrb
int
pop
ret
add
rcll
add
cmpsb
ret
cmp
outsl
cli
mov
xchg
add
dec
cwtl
xor
dec
aad
daa
jle
mov
jp
xchg
fs
leave
cmp
into
xchg
push
add
xchg
mov
mov
stos
jecxz
jle
xorl
cld
fdivs
incb
pop
adc
jbe
int3
dec
lret
xor
mov
jp
sub
andb
out
leave
push
pop
or
push
sbb
mov
into
std
mov
jmp
cmp
push
jl
mov
sbb
loope
loope
sub
xchg
pop
je
out
push
pop
mov
adc
inc
dec
lea
mov
call
cmp
test
sbb
push
repnz
and
not
jg
popf
loopne
fmuls
inc
addr16
xor
push
sbb
test
xchg
jo
das
stc
pop
fsubrl
fcoms
fcomps
in
dec
mov
scas
subb
pop
cmp
sete
cld
out
sarl
rcr
aad
mov
pop
pop
cmp
push
je
sub
addr16
adc
add
cmp
sub
jae
testl
int3
es
mov
es
mov
stos
inc
out
lea
aas
mov
jae
sub
sub
out
and
mov
add
mov
gs
and
test
jge
stos
out
or
das
ja
mov
lcall
jnp
aas
mov
jb
in
inc
push
or
pop
aaa
lret
jne
mov
subl
or
call
in
pop
add
dec
lods
sahf
pushf
scas
idivl
pop
dec
and
inc
cmp
mov
push
nop
and
mov
xor
mov
sub
mov
int
rcll
call
dec
imul
inc
mov
lods
test
shll
test
daa
sbb
out
push
add
subl
cmpsl
sub
adc
mov
mov
xchg
adc
xchg
es
js
repz
int
fidivs
jp
cmp
hlt
cmp
movsl
insl
add
lret
adc
mov
je
mov
xor
bound
jbe
jnp
pop
popa
inc
ljmp
pmullw
push
dec
sbb
mov
ljmp
pop
and
mov
pusha
sbb
dec
inc
dec
or
popa
gs
mov
jo
jnp
adc
mov
cld
and
jp
adc
je
cwtl
js
fdivs
loope
or
es
movsl
ret
aad
cmpsl
mov
pop
repz
int
pusha
push
loope
xchg
js
jno
sub
mov
cmp
push
and
sbb
push
xor
mov
and
fdivs
test
mov
push
ja
cs
and
push
xchg
test
push
cmpsl
lea
jne
imul
lahf
adc
enter
sahf
rorl
test
int
adc
lcall
push
es
sub
mov
cli
and
loop
dec
repz
pop
pop
sub
aas
cmp
shll
mov
sti
mov
int3
das
enter
in
jns
add
push
nop
lods
out
add
dec
push
adc
cltd
imul
cmp
adcl
inc
rcrl
out
add
in
lret
xchg
xchg
lds
push
rol
xchg
jmp
push
enter
add
dec
rclb
jno
dec
push
adc
aam
std
cmp
je
repnz
inc
xor
aas
pop
mov
xor
mov
mov
iret
mov
xor
lds
jae
inc
call
and
ror
aaa
adc
repz
ficoms
and
je
iret
pusha
scas
xchg
pushf
push
pop
adc
enter
sub
movsl
cli
dec
clc
xchg
fcmovb
xchg
fsub
mov
inc
shrl
mov
xchg
inc
outsl
and
add
xchg
das
and
insl
fwait
mov
pop
adc
cmp
and
add
cwtl
daa
mov
inc
push
xchg
mov
or
xchg
pop
andl
mov
cwtl
xchg
xor
shr
je
data16
dec
in
and
addr16
adc
xchg
pop
pop
repz
mov
cmp
shrb
nop
pop
push
jo
jnp
push
stos
push
imul
or
imul
cmp
outsb
rcrb
or
sub
mov
out
xor
mov
inc
movsl
jne
sub
or
and
cmp
fisubrs
mov
and
mov
insl
pop
movsb
mov
mov
clc
sar
movsl
imul
and
jecxz
leave
fisttpl
xlat
clc
aam
jl
unpckhps
lods
dec
add
mov
push
aaa
jno
test
jbe
pop
mov
cs
mov
or
dec
adc
add
fdivl
lcall
stos
dec
call
dec
leave
xchg
clc
sahf
andb
jle
stc
popf
fisttpl
pop
nop
ds
jo
pop
pop
inc
lods
int
cmp
enter
lret
cltd
fimull
cmp
mov
jae
ret
test
testl
fnstcw
sysenter
std
imul
fcoml
lea
lret
jge
test
fwait
movsl
pop
fsubs
mov
xchg
repnz
cld
jecxz
dec
clc
mov
cmpsl
fsts
xchg
jae
ret
out
ja
lods
data16
int3
sub
xor
inc
incb
fldl
xchg
jle
sbb
cmpsl
loop
jle
push
pop
inc
add
dec
ret
popa
mov
andb
push
inc
add
mov
xchg
inc
mov
out
dec
cmp
les
sbb
add
push
movsb
push
mov
fucomp
lea
jmp
dec
mov
test
fcmovnb
xor
mov
shll
sub
sub
or
jno
sahf
fidivl
popf
int
or
arpl
subb
pop
pop
in
push
xchg
shll
lock
idivb
imul
push
push
mov
adc
add
xchg
shl
dec
push
xrelease
rcrl
decb
popf
push
adc
in
jecxz
add
lcall
sahf
add
iret
inc
cmp
sti
inc
adc
cmp
mov
dec
add
sti
lahf
mov
daa
xor
addr16
xchg
inc
ret
adc
mov
or
les
clc
mov
std
test
push
or
inc
or
adc
ds
ja
push
fnstcw
and
cmp
pop
insb
ss
sub
adc
jb
data16
std
nop
adc
adc
ljmp
rcrl
add
xchg
sbb
mov
push
pop
lods
xor
cmpsl
out
mov
fdivrl
in
out
jmp
inc
jg
test
ja
fildll
shl
dec
push
lcall
insl
lods
cld
inc
sbb
aas
inc
data16
jp
aam
add
inc
out
inc
push
je
gs
and
or
cmpsb
fcmovnb
mov
movsl
xchg
cmp
inc
call
das
mov
mov
pop
ficoml
mov
mov
sub
les
gs
in
pop
push
xchg
cli
xchg
xchg
mov
outsb
decb
cmpsb
fadds
loopne
xchg
mov
mov
cmp
sub
pop
cmp
jo
aas
mov
mov
fimuls
ss
add
xlat
jbe
mov
loopw
dec
inc
fcmovne
fldenv
in
jns
outsl
push
or
or
and
movsl
ss
pop
lods
rcrb
add
mov
icebp
inc
cmp
fidivrl
ljmp
testb
mov
cmc
negb
pop
add
mov
jb
aad
cs
les
fstl
inc
addr16
incl
aaa
sbb
repnz
sub
sub
jb
dec
pop
add
inc
cmp
push
mov
sti
fnstcw
cs
sub
pop
je
pop
mov
loopne
push
cmp
test
outsb
add
xchg
outsl
divb
dec
out
sub
mov
push
mov
ret
jnp
add
popf
mov
adc
iret
rol
subb
addr16
adc
adc
ret
cmp
or
movsl
aam
push
lods
rcl
xor
push
xor
jp
cwtl
lret
fidivrs
pop
mov
inc
push
push
leave
mov
adc
mov
cmp
mov
shl
or
hlt
sub
aam
mov
shlb
xor
add
in
xchg
out
jno
fcomi
loopne
xor
jbe
sbb
int
cmp
push
ret
mov
xchg
mov
jae
das
test
iret
inc
ret
cltd
cmp
je
pop
jne
sub
lds
xchg
mov
call
int
and
stos
inc
mov
data16
dec
jo
rcrb
je
cmp
movsb
std
lds
daa
dec
ss
jge
imul
pop
sub
cmp
xchg
in
jmp
outsl
dec
aad
addr16
dec
das
cld
or
das
dec
sti
stc
ret
lahf
pusha
daa
insb
push
jl
popa
or
imul
mov
xor
mov
sub
ljmp
push
xlat
inc
and
movsl
pop
push
xor
enter
fs
loopne
jl
shlb
mov
fcompl
mov
sub
pop
xchg
jns
pushf
mov
and
pop
inc
cmp
jns
push
mov
test
out
pop
negl
xor
inc
je
cmc
xchg
cmp
pop
pop
ret
lret
add
or
push
jnp
or
nop
xorb
adc
test
imull
fsubp
cmpl
movsl
lret
sub
mov
inc
int3
adc
mov
jmp
int
in
mov
rorb
lret
pop
sbb
sub
out
push
push
sbb
push
ror
inc
cld
out
dec
fwait
jo
pop
rorl
cli
push
addr16
xlat
jae
xchg
out
sub
sbb
dec
or
lods
mov
push
fdivrs
rcl
mov
cmp
ja
imul
sbb
pop
xchg
dec
pop
jbe
lret
pop
rcrb
xor
mov
dec
or
ljmp
nop
mov
jecxz
adc
push
push
sub
xor
cmp
push
test
cmp
inc
xor
out
inc
sub
shlb
cli
mov
stc
xor
jmp
rcl
push
mov
mov
leave
push
sbb
in
push
lret
push
hlt
adc
xor
push
jecxz
std
in
mov
cmpsb
add
jbe
lods
out
dec
scas
ds
aaa
or
sar
sarl
adcb
test
cltd
cwtl
push
lods
fldt
pop
mov
jmp
sbb
shlb
repz
mov
lcall
jo
add
xlat
cmp
out
mov
lcall
push
mov
cmpsl
or
sub
outsl
cwtl
mov
mov
test
nop
and
jmp
outsb
fs
es
fiaddl
rol
lret
inc
outsb
idiv
or
pop
outsl
scas
loop
test
cmp
cli
mov
out
fadd
jcxz
mov
sbb
cmp
addr16
and
clc
mov
repnz
in
adc
add
cmp
jecxz
ss
and
xor
xchg
mov
out
add
ljmp
pop
pop
int
test
sub
mov
inc
imul
andb
and
addr16
aaa
push
ss
ret
and
xchg
inc
mov
dec
cmpsb
ja
or
scas
pop
mov
mov
rorl
std
incl
lds
das
arpl
cmp
jp
xor
xor
bound
mov
cwtl
inc
jno
js
dec
sbb
or
jne
insl
xor
sti
insl
cli
jl
out
cmp
xor
mov
dec
push
out
cltd
loope
jnp
mov
mov
lock
pop
jbe
adc
mov
mov
pop
xchg
stos
pop
push
pop
scas
xor
mov
inc
out
movsl
orl
aaa
test
hlt
dec
js
jno
adc
push
je
bound
and
xchg
xor
aam
dec
and
shlb
sbb
fs
xchg
mov
add
popa
loope
jecxz
add
js
inc
jne
mov
aaa
push
xchg
jbe
xor
xchg
sub
xchg
cmp
sar
movsl
sti
push
jne
dec
loop
mov
pop
dec
in
pop
sbb
cmc
mov
push
xor
subb
sbb
push
xchg
into
and
mov
pop
test
dec
jb
push
add
cmc
notl
out
sbb
mov
adc
lock
xor
insb
push
jecxz
push
push
cmp
outsl
and
mov
rol
cmp
adc
lret
movsl
or
inc
push
repnz
inc
cs
push
add
jae
dec
inc
xchg
add
mov
mov
and
xor
stc
mov
loope
aad
ja
xchg
push
aam
dec
nop
cmp
fst
std
dec
jno
jbe
xor
push
xchg
cmp
ffree
adc
out
adc
mov
ja
fwait
fs
or
addr16
sbb
stos
cmc
bound
dec
push
mov
xlat
mov
das
sub
out
mov
sarb
xchg
mov
lahf
outsb
xchg
sbb
dec
mov
ret
or
shrb
xchg
sbb
pop
loop
ret
sub
sbb
adcb
out
mov
cmp
sbb
shlb
mov
or
cli
cmp
cltd
xchg
jmp
xchg
jp
in
sbb
jno
pop
insb
mov
push
into
sti
xchg
fs
ja
arpl
int3
pop
push
nop
imul
mov
xchg
lods
aam
xor
fsubr
sub
inc
mov
call
popa
aaa
push
testl
and
cld
and
xchg
push
cltd
dec
xor
or
lock
push
movsb
and
sbb
dec
sub
sahf
add
aas
adc
ds
xchg
sbb
pop
sbb
jecxz
fmull
adc
pop
adc
or
clc
and
lock
in
add
ljmp
js
or
daa
aas
mov
dec
push
xchg
notb
dec
jmp
out
imul
jo
jb
mov
jge
sbb
scas
cmp
mov
xor
decb
lock
mov
test
sbb
push
arpl
out
adcl
inc
inc
sub
cmpsb
and
pushf
jmp
jb
inc
push
sub
loop
push
insb
pop
jo
sbb
mov
and
fisttpl
ja
shl
loop
mov
add
push
jecxz
ds
cmp
inc
xchg
push
pop
or
pop
mov
lret
or
jmp
or
jp
add
js
out
fdivs
fwait
mov
inc
mov
scas
outsb
inc
mov
or
out
es
adcb
call
pop
orl
mov
cld
jl
push
or
fsubrl
inc
jp
pop
pop
jnp
in
fimuls
dec
mov
inc
rcrb
call
hlt
les
xor
sbb
adcb
movsl
cmpsb
das
lret
test
insb
addr16
dec
hlt
fcomps
imul
addr16
mov
mov
jp
rcrl
ljmp
cli
cmp
mov
dec
fstpl
aas
movsb
jmp
loope
jne
sbb
or
cltd
jg
and
ja
xchg
add
ret
inc
test
popf
adc
cs
add
rorl
fidivs
push
test
popf
jg
call
dec
inc
mov
mov
addr16
mov
jle
inc
addb
push
sub
push
addl
ret
mov
mov
rclb
jecxz
imul
movsl
mov
push
repz
aad
enter
pop
push
negb
or
loopne
in
adc
into
mov
mov
push
mov
push
cli
push
inc
ss
dec
cmp
ret
sbb
push
test
mov
shrl
or
repz
push
add
ja
data16
mov
and
out
lret
cwtl
shl
cmpsb
fisttps
mov
sbb
std
dec
cmp
dec
sbbl
shll
je
pop
sub
dec
adc
rcrb
imul
mov
pop
outsb
lea
scas
into
sbb
push
pop
cltd
and
imul
jbe
repz
inc
loopne
or
ss
cmp
xchg
sbb
fisubs
push
je
push
inc
pop
push
mov
test
out
jo
js
pop
xlat
int
add
push
out
scas
fcomi
push
es
mov
daa
jecxz
xor
mov
sbb
lret
mov
jne
lods
cwtl
mov
xor
lods
or
push
fstp
pop
cmpsl
push
mov
fcoms
mov
pop
pop
in
mov
loope
and
ljmp
sarl
push
test
cs
sbbl
mov
adc
es
cmp
pop
and
jns
mov
push
ret
adc
out
jle
lock
inc
sbb
sub
adc
xchg
pop
add
aad
sti
inc
cmpsl
push
je
pop
adc
out
cmpsb
jbe
ja
mov
fildl
leave
loope
flds
inc
fidivl
lcall
fnsave
mov
and
ds
mov
mulb
daa
in
jbe
and
sub
mov
sbb
inc
jns
dec
dec
mov
leave
mov
bound
xchg
and
fsubs
mov
cmp
shrl
jno
and
test
outsl
gs
out
aaa
inc
mov
xchg
jo
lahf
mov
notl
mov
sahf
pop
stc
mov
sbb
adc
out
lret
xor
and
pop
and
xchg
xchg
mov
xchg
inc
inc
loop
jne
js
push
cmp
fisubrl
rcl
sarb
dec
adc
movsb
test
and
xlat
push
pop
jno
sahf
xor
jnp
inc
xchg
jbe
jle
loope
es
in
sbbb
and
xor
add
js
push
jmp
in
xchg
stos
shl
or
incb
rol
js
icebp
pop
mov
hlt
dec
sbb
push
lea
jb
dec
fld
loopne
mov
test
mov
jecxz
test
test
lods
outsb
dec
mov
fistpl
or
push
mov
sti
aaa
ja
jne
pop
test
popa
pop
gs
or
jbe
add
mov
or
enter
mov
dec
sti
mov
sbb
test
mov
mov
shll
pop
fsubs
mov
or
add
sub
mov
xor
xchg
adc
js
mov
out
insl
movsl
mov
outsl
xor
pushf
rcll
mov
jno
xchg
mov
xor
dec
xchg
aaa
xor
test
push
fstpl
cs
out
cmc
xor
imul
cmp
mov
pusha
jo
fsts
lcall
outsb
roll
aad
fidivrs
outsl
int
pop
jo
jns
pop
mov
sub
adc
and
loop
mov
jle
pop
mov
xchg
and
lock
scas
or
sub
push
jno
nop
rolb
push
dec
dec
cmpsl
jg
add
dec
xorl
pusha
lcall
ljmp
movsl
push
jge
inc
sbb
cld
out
dec
fcomps
xor
or
jg
xchg
xor
movsl
pop
int
cmp
daa
je
stos
push
xor
jnp
sarb
inc
negl
aad
inc
lock
add
pop
cmp
jae
adc
out
cmp
adc
stos
or
insl
xor
cwtl
jnp
adc
pop
imul
cmp
js
push
sub
lahf
inc
push
lea
xchg
stos
dec
fidivrs
jbe
xor
rolb
inc
mov
mov
jnp
dec
minps
xor
sbb
sbb
mov
mov
adc
push
mov
pop
cmp
dec
xor
cmpsb
je
push
or
pushf
dec
jbe
std
adc
sahf
enter
and
stos
cmp
aas
sbb
and
pop
xchg
mov
loope
push
push
jg
lret
push
dec
in
lret
push
and
xor
lahf
xchg
dec
inc
lcall
fisttpl
roll
and
mov
fisubs
mov
xchg
xchg
mov
aad
out
loop
jmp
jbe
insl
mov
cmc
std
aad
fisubrl
loop
jle
inc
rorb
mov
stos
pushf
aam
sub
pop
popa
popf
stos
xor
into
xor
repnz
jb
jmp
sbb
push
fimull
ret
dec
jg
sub
xor
add
je
dec
xchg
inc
fnstcw
cltd
push
mulb
add
fdivl
push
in
loopne
cwtl
test
jae
lret
vandps
xchg
das
ljmp
adc
push
jle
inc
pop
sbb
mov
sub
jb
and
les
pop
cmpsl
mov
xor
mov
ficoms
pushf
push
jo
push
adc
hlt
and
or
push
jae
add
in
sub
push
fsubl
out
sub
cmp
iret
test
aad
cmpb
div
dec
lret
mov
test
addr16
fidivrl
aas
push
jno
idiv
push
scas
test
xor
pop
loope
mov
push
das
mov
cmp
movsl
xchg
pop
clc
mov
pop
push
testb
icebp
pcmpgtb
pushf
rcll
addb
jp
dec
inc
push
jmp
xchg
cs
js
in
addl
fisubrl
pop
addl
pop
jmp
pop
repz
dec
lcall
out
cwtl
push
xchg
adc
mov
addr16
cmp
dec
insb
inc
das
mov
sbb
aam
add
lods
adc
xorb
in
inc
cld
pusha
in
aad
xchg
lret
sarb
xchg
int
lods
jae
dec
xlat
aad
pop
fwait
outsb
outsl
out
rorb
aad
mov
mov
dec
sub
incl
xor
dec
imull
mov
jo
mov
cmpsb
aas
jmp
pop
or
insl
rolb
std
test
call
es
jle
sbb
xchg
ja
test
loope
xor
stos
ja
dec
push
push
js
repnz
leave
cmpsl
sbb
dec
cld
dec
add
rorl
pop
push
xor
add
or
push
scas
adc
sahf
dec
mov
sub
mov
stos
in
cmpsb
sbb
insb
stc
inc
shll
rcrl
stos
in
scas
test
and
cli
add
and
mov
es
clc
and
mov
call
loop
fists
out
mov
jmp
divb
iret
mov
mov
xchg
insl
add
pop
mov
hlt
loope
fnstcw
enter
xchg
imul
push
mov
fwait
in
dec
xchg
enter
je
jb
testb
out
hlt
xchg
sub
hlt
outsb
dec
xchg
adc
fsubrl
ficoml
cmp
push
adcl
mov
sub
fcmovnu
fidivs
ja
pop
cmc
addb
pop
pop
sbb
mov
insb
clc
dec
xor
adc
fprem
pop
mov
jns
loope
movsb
xor
cmp
je
pop
mov
bound
shl
dec
popa
xor
ret
dec
xchg
mov
dec
fs
cmp
xlat
lods
mov
lret
fcomps
fildl
cld
cs
ss
fs
mov
mov
adc
add
pushf
nop
push
dec
scas
ss
je
inc
lret
sub
aaa
adc
mov
inc
mov
add
mov
roll
lahf
fucomip
sbb
pushf
mov
movsl
call
and
pop
cmpl
addr16
mov
inc
cmp
leave
cltd
std
xchg
dec
mov
add
dec
test
fwait
mov
xor
xor
mov
movsl
sub
out
scas
or
push
data16
pop
jns
js
sub
pushf
jg
jne
dec
fcoml
push
jb
cmpsb
testb
xor
lods
add
dec
aaa
push
icebp
jmp
sub
aas
dec
inc
insl
out
mov
std
mov
out
adc
lock
rcrl
push
sub
xor
cli
xorl
inc
adc
or
in
rcll
cmp
ja
dec
jo
jae
pop
or
adc
push
xor
adc
arpl
pop
cs
neg
test
push
stos
pushw
or
xor
int3
imul
mov
aaa
mov
inc
and
xchg
push
lahf
bound
jnp
fnstenv
lods
in
mov
or
loopne
imul
pop
push
pop
cmpsb
or
shlb
shll
sub
arpl
mov
cltd
jne
cmc
adc
stos
in
and
add
jae
imul
jecxz
in
pop
jle
aam
or
xor
pop
adc
int
sub
cmp
cmp
outsl
fbstp
pop
fsts
adc
jns
mov
cmp
lock
mov
and
test
lret
out
daa
or
mov
lods
ret
add
or
and
iret
sbb
clc
push
lods
aaa
cmpsl
add
adc
shll
sarl
mov
inc
cs
pusha
and
data16
mov
mov
cwtl
pop
push
testl
aas
iret
lea
leave
test
lods
std
rcll
ffreep
sbbb
ja
call
pop
inc
sub
push
inc
mov
int
notl
mov
and
mov
adc
and
xchg
ds
xchg
jecxz
jbe
mov
push
mov
xchg
bound
dec
mov
rolb
pop
xchg
les
aas
or
sar
movsl
mov
xor
mov
dec
dec
stos
xor
subl
cmpl
cmpsl
in
ds
push
pop
inc
lret
mov
fidivs
jo
mov
xor
dec
fimuls
mov
daa
pop
push
or
dec
and
push
jge
outsb
loop
stc
in
xor
jmp
xchg
fsubp
pop
jmp
sbb
push
orb
hlt
jno
or
xchg
iret
push
dec
inc
push
rcr
bound
push
or
es
lock
out
and
jg
arpl
xchg
pop
dec
sub
push
fst
movsb
cwtl
stc
shr
scas
xchg
sub
dec
scas
dec
outsb
add
mov
adc
clc
cmp
jmp
fimuls
mov
or
insl
shl
pop
divb
pop
pop
imul
bound
xchg
jp
lock
pop
outsb
and
inc
fwait
int
vpaddq
js
fwait
jne
jae
cmp
inc
mov
loopne
clc
xchg
je
sbb
pxor
add
test
cli
fstpl
enter
jae
fdivrs
mov
mov
cld
cld
push
pushf
pop
ret
cmp
mov
sti
jmp
cmp
cmp
and
xchg
xor
out
add
mov
mov
mov
sub
push
scas
daa
jbe
mov
push
mov
dec
repnz
jae
sub
add
mov
int3
test
lods
pop
push
push
pop
push
pop
into
inc
dec
push
jge
pop
stc
jle
or
dec
cmp
ficoml
call
xor
idiv
enter
and
or
or
jp
or
lret
out
movsb
add
clc
and
lods
test
cmpsl
or
push
mov
inc
jne
out
or
icebp
sbb
call
inc
add
dec
and
xchg
pop
push
jo
mov
int
pop
mov
fisttpl
adc
dec
cld
out
jno
add
adc
sub
add
or
jnp
nop
xor
inc
push
inc
not
push
gs
fwait
cmp
mov
loope
test
cmc
push
shlb
inc
mov
mov
inc
in
xchg
cmp
mov
das
or
int
mov
push
std
call
out
ret
xor
sahf
pop
adc
pusha
jne
dec
and
jle
dec
push
push
xchg
js
jb
lret
imul
shlb
push
pop
jge
push
insb
in
jo
sub
cmp
and
std
cld
pop
xor
sbb
pop
adcb
sbb
subl
lret
cmpsl
xchg
jns
femms
or
dec
data16
or
xorl
and
mov
dec
pop
dec
ds
outsl
sub
stc
push
inc
mov
sahf
das
mov
test
into
jmp
fiaddl
dec
ds
fstps
xlat
mov
xlat
inc
jnp
enter
mov
mull
push
movsb
pop
fnsave
mov
dec
or
sub
jnp
filds
ror
les
mov
push
ljmp
mov
sbb
lahf
jno
ss
cltd
lahf
fwait
sarl
test
sar
mov
push
mov
cmp
add
cli
repz
movzbl
jae
ja
orb
test
lret
lods
cmpsl
outsl
mov
xchg
cltd
mov
and
std
addl
pop
mov
in
fwait
scas
dec
jae
push
call
leave
xor
mov
mov
sub
jge
sbb
pop
jb
lret
test
jne
sbb
sub
and
sti
xor
push
mov
push
loop
mov
dec
cld
jecxz
jg
out
mov
xor
pop
inc
out
or
imul
mov
shlb
cmp
xor
insb
fwait
jmp
mov
div
mov
cltd
or
jb
sbb
fimuls
add
xor
mov
xchg
daa
mov
ds
sub
mov
push
and
xchg
fcoml
push
sbb
dec
shll
jge
push
mov
mov
jecxz
pusha
cli
data16
inc
fstps
or
cmp
mov
shl
cmpsb
loop
pop
test
pop
cmovns
xor
int
ja
dec
push
xchg
pop
or
stos
sbb
or
push
lret
lods
stos
jne
xchg
ret
js
sub
aas
in
out
jbe
jae
scas
fcmovnbe
mov
loopne
stos
sub
xchg
mov
add
xor
ljmp
mov
imul
repz
jns
mov
rorl
mov
mov
add
sti
lcall
mov
adc
lahf
inc
aaa
test
mov
call
sbb
dec
cmp
ljmp
push
or
inc
jb
dec
test
lcall
movsb
rclb
pop
std
mov
pusha
mov
movq
and
xor
mov
repz
fistps
mov
inc
jle
rclb
repz
sub
clc
pusha
std
jg
jbe
cmp
inc
mov
xor
shlb
bound
pop
dec
fldt
pop
gs
sub
loop
add
loope
push
mov
fadd
xorl
adc
xor
std
inc
pop
ret
sbbl
clc
pusha
xor
out
jb
and
jp
adc
pop
sbb
loopne
std
int
out
mov
ljmp
lea
push
and
out
and
lcall
aad
insl
je
sbb
sub
rcl
mov
inc
ds
aas
or
mov
mov
and
imul
dec
pop
push
jns
adc
sahf
in
out
xchg
movsl
push
jbe
xchg
pop
adc
pushf
cmp
pop
jecxz
jge
dec
out
repnz
outsb
pop
xor
push
cld
ret
ss
call
loop
inc
push
jnp
lock
test
test
xchg
sub
add
loopne
cmp
mov
test
out
pop
lcall
dec
xchg
push
pop
dec
mov
lea
shll
mov
dec
loopne
add
mov
mov
aas
jae
mov
mov
sub
lret
push
test
jb
inc
and
push
mov
lock
shlb
popa
mov
or
divl
push
shll
jae
mov
dec
xlat
or
xor
add
xchg
mov
pop
pop
fxtract
add
data16
add
idiv
push
xchg
lret
push
cld
daa
sahf
adc
jecxz
mov
cmc
push
ss
sarl
aaa
jo
mov
add
mov
mov
sbb
into
cmc
pusha
cli
mov
mov
sub
fadds
jmp
mov
push
popf
cmp
fs
arpl
rolb
outsb
push
stos
sahf
sbb
mov
mov
sub
in
rcrl
push
inc
add
pop
in
enter
mov
fcomp
ret
loopne
adc
in
aas
movsb
insl
test
lock
hlt
mov
push
fs
xchg
into
out
fscale
loope
jp
movsl
in
xchg
mov
jne
lods
push
int3
out
pushl
dec
movsl
add
lret
xchg
lahf
pop
mov
push
repnz
sbb
jmp
jmp
or
insb
or
xor
add
adc
adc
xchg
dec
push
in
test
mov
and
jmp
mov
scas
push
push
dec
insb
xlat
repz
cmc
les
ret
fsub
jge
mov
imul
jnp
daa
sarl
arpl
repnz
sbb
dec
data16
xor
adc
stc
std
cmpsb
pop
mov
loopne
mov
cmpsb
jecxz
pusha
inc
push
pop
push
in
add
push
lods
outsb
aaa
scas
jg
popw
mov
scas
inc
repnz
xchg
in
scas
insl
xchg
sbb
out
es
sbb
mov
lds
idivb
pop
iret
mov
jbe
imul
inc
imul
lea
popf
aam
xor
stos
loopne
xlat
inc
movsb
and
hlt
or
cmp
lock
incl
cmc
mov
cmp
movsl
out
push
mov
mov
adc
fwait
mov
lcall
xor
testb
xchg
sti
shrb
xor
push
rcl
jbe
push
mov
in
loopne
add
in
fwait
pmaxub
lds
repz
xchg
pop
cmp
lcall
int3
or
mov
push
push
bound
jmp
sbb
jns
aad
dec
cmp
cmp
mov
loopne
mov
ret
enter
xor
les
mov
mov
pop
jno
test
sub
sahf
or
test
loop
fisttpll
std
mov
andl
out
sbbl
inc
test
cltd
adc
repz
pop
jmp
cs
and
inc
sbb
popf
jb
clc
xchg
inc
xor
pop
pusha
mov
lods
in
iret
cmc
pop
movsl
adc
testb
hlt
jl
adc
add
push
out
in
repz
insb
stos
push
cwtl
mov
adc
inc
test
sbbb
and
lret
cmp
lods
sbb
mov
icebp
inc
sub
pop
pop
sbb
ret
push
rorl
inc
and
lcall
test
cmp
repz
ja
daa
aad
aad
and
mov
and
out
mov
aam
dec
pop
jae
add
add
aad
sub
es
pop
xor
out
mov
cmp
inc
cmp
or
lret
pop
pop
out
dec
pop
add
mov
loop
sbb
mov
xchg
call
test
and
pop
dec
in
enter
pop
inc
in
pop
jmp
das
rorb
push
mov
mov
dec
sbb
inc
mov
xor
and
xor
call
jecxz
inc
in
daa
daa
test
rorl
xlat
call
fwait
jge
mov
ljmp
xchg
mov
hlt
jg
mov
add
bndldx
sbb
enter
xchg
shl
add
xlat
mov
test
inc
lea
cmp
cld
lods
xlat
jle
mov
mov
inc
pop
mov
sbb
faddp
xchg
or
and
pop
xlat
xchg
in
sbb
push
leave
xchg
adc
ja
lret
xlat
cld
psrad
mov
andl
and
xor
sbb
nop
dec
loope
mov
dec
jmp
sbb
insb
mov
lcall
sub
cmpsb
mov
aas
push
pop
jecxz
inc
outsb
mov
sbb
imul
pop
cmp
sbb
std
test
pusha
ja
mov
cmp
and
addr16
andb
je
inc
ret
je
aam
mov
pop
insb
out
iret
out
out
push
push
sbb
or
dec
cmp
test
lds
cmp
jp
movsb
fnclex
ljmp
aaa
pusha
cld
mov
mov
in
mov
nop
loopne
xor
mov
and
iret
push
cmc
inc
aas
and
push
pushf
add
mov
inc
inc
mov
imul
sti
add
cwtl
jp
leave
out
cmp
xchg
cmc
sbb
sub
dec
mov
fstpl
sbb
xchg
or
or
push
xchg
leave
mov
int
mov
fmul
les
sbb
fnstsw
jecxz
push
int
cmp
shlb
and
xor
or
es
in
sbb
xor
sbb
sbb
add
stc
add
das
xchg
daa
dec
xchg
or
mov
ret
out
out
sub
push
lcall
mov
and
loop
xchg
insb
cltd
xchg
mov
icebp
push
mov
and
push
pop
js
inc
leave
add
or
or
in
xlat
push
inc
dec
cmp
in
inc
dec
mov
pop
cmp
xchg
repz
mov
push
popf
mov
mov
ret
sbb
mov
jbe
mov
xchg
lods
aas
mov
nop
pop
andb
testb
mov
pop
in
and
and
aam
adc
repz
gs
push
xchg
mov
cmp
sbb
adc
xchg
out
mov
dec
mov
cs
scas
pop
inc
loop
rcr
inc
sbb
inc
out
jle
xchg
mov
mov
and
iret
xor
lcall
in
push
imul
push
in
rorb
push
mov
fidivrs
mov
and
fmuls
fxch
mov
mov
inc
dec
fnstsw
out
aad
cvttps2pi
dec
negl
mov
negl
ds
pop
push
xlat
fcomi
jae
mov
rcll
or
push
test
cmp
aaa
lahf
mov
xor
sysret
ja
loopne
cwtl
cmp
fcmovne
stc
aas
es
inc
mov
jl
loop
or
insl
pop
fwait
lcall
sbbb
popf
movsb
in
pusha
imul
push
xchg
pop
sbb
cwtl
sti
push
add
arpl
cmp
rol
icebp
jb
xchg
mov
outsl
cli
gs
dec
jl
mov
cld
pop
std
das
and
push
or
imull
push
shlb
inc
lea
pop
dec
jne
mov
mov
decb
bound
dec
push
mov
shll
pop
xor
lds
push
push
ret
xchg
xchg
pop
shlb
leave
push
push
aas
mov
mov
scas
int3
or
call
inc
mov
add
mov
mov
mov
clc
fistps
inc
outsb
or
inc
sbb
insb
dec
inc
sbb
enter
xor
push
cld
jecxz
pusha
add
cmp
jp
fildll
pop
pop
cmp
in
insb
cmp
mov
jne
out
inc
fdivrp
cmp
cmp
pop
add
adc
lds
jo
inc
and
in
mov
jb
adc
je
mov
add
dec
dec
in
enter
testl
mov
test
push
enter
pop
xor
push
push
jo
loop
lods
mov
or
mov
cwtl
dec
push
cmp
pop
dec
mov
mov
lret
mov
outsl
test
outsb
enter
ret
pop
mov
adc
roll
and
stos
fbstp
and
pop
sub
and
scas
xor
sub
mov
and
ds
mov
pop
lea
mov
mov
scas
ss
icebp
scas
mov
mov
sbb
mov
out
xor
and
ret
ds
and
mov
inc
dec
inc
adc
dec
mov
and
inc
pop
aas
ror
testl
ljmp
adc
arpl
imul
movsl
pop
js
sahf
fmull
roll
adc
int
pop
ja
js
test
mov
pusha
dec
pop
imul
lods
lea
ds
xor
cwtl
sbb
xchg
jg
mov
movsl
fdivs
pop
sbb
xor
mov
adc
int3
push
push
mov
adc
roll
sbb
std
xchg
mov
xor
ficoms
fbstp
popf
imul
inc
and
aad
leave
push
aad
cmc
js
loop
ret
sub
pop
mov
mov
mov
aam
push
ret
mov
fsubs
mov
sahf
mov
dec
xchg
incl
push
fisubs
push
out
scas
xor
insl
lret
sub
jle
cmpsb
mov
mov
nop
leave
lods
dec
mov
cwtl
rcrl
mov
or
adc
les
jno
pusha
push
pop
and
call
xchg
pop
mov
sub
xchg
int3
mov
pop
jmp
mov
and
into
jmp
jge
sub
or
pop
ret
rdtsc
mov
out
dec
daa
and
mov
dec
jns
cmp
adc
rcl
ror
mov
mov
pop
retw
mov
fcomps
sub
cwtl
pop
lahf
repnz
add
or
and
mov
ror
cmp
inc
cmpsb
jl
scas
adc
movsl
sbb
add
lea
aaa
lahf
ss
das
int3
cs
pop
mov
fwait
push
pop
es
das
cmp
sbb
andb
dec
pusha
adc
das
test
ret
mov
and
loopne
pop
push
lds
mov
lds
lret
movsl
cmpsb
das
out
pusha
test
mov
mov
leave
and
imul
roll
repz
out
inc
out
pop
inc
imul
xor
std
push
insl
and
stos
popf
push
fwait
mov
cwtl
push
push
cmp
pop
std
lcall
sub
lea
adc
or
and
clc
inc
add
mov
jo
flds
xor
dec
add
outsl
and
fs
add
xchg
jne
sub
scas
sub
sub
mov
mov
call
and
add
movsb
idivl
nop
shl
call
pop
lahf
add
mov
inc
lods
popa
add
or
fsubrs
jbe
sahf
xchg
out
cwtl
stos
imul
dec
pop
or
and
jb
xor
popa
sbbb
arpl
xchg
sub
pop
push
xor
jmp
xlat
les
xor
cmp
jne
fs
flds
leave
test
dec
add
ljmp
or
dec
lods
aas
mov
push
fidivrl
jno
mul
adc
js
pop
mov
mov
add
dec
fstpt
andl
nop
out
shl
idivl
repz
mov
xor
js
adc
and
in
jle
mov
outsl
or
mov
pop
cmp
gs
dec
inc
cwtl
xchg
jns
test
pop
push
sbb
jp
add
jmp
fadd
mov
mov
popf
mov
cs
mov
sbb
mov
and
mov
cmpsb
fisubs
cmc
xor
push
push
inc
mov
inc
loop
inc
xchg
add
js
push
or
add
inc
or
mov
mov
sarb
jbe
fs
pop
jb
das
test
lods
xor
pusha
sub
mov
jl
and
andb
in
xor
xor
test
sbb
sub
call
ds
ljmp
or
push
jl
or
call
xchg
imul
dec
cmp
dec
pop
push
sbb
sub
add
jb
sub
std
push
xlat
cld
adc
or
nop
inc
les
insl
xor
jl
dec
sbb
sbb
mov
frstor
jl
or
mov
scas
scas
out
mov
cmpsb
pop
xchg
pop
mov
dec
and
dec
xchg
inc
jmp
lods
outsb
xor
or
sub
mov
test
fwait
lcall
cmp
adcl
sbb
adcl
push
push
outsl
inc
cltd
rcll
movsl
lea
dec
adc
add
or
jns
dec
cmp
add
jo
stos
cmpsb
jb
dec
sbb
aas
jb
test
repz
inc
js
inc
aad
movsl
mov
shll
push
ss
ja
daa
jbe
pop
cmp
and
aam
and
pop
fwait
jo
push
inc
pushf
ret
mov
xchg
loopne
jns
xchg
lock
mov
mov
faddl
mov
mov
adc
test
push
pop
adcb
dec
fstps
jno
aas
pop
jbe
jp
mov
bound
out
shll
push
sbb
inc
cld
ret
sarl
pop
insl
notl
pop
lods
push
push
popa
push
cs
imul
in
xor
xor
mov
or
cmp
mov
sbb
faddp
imul
popf
push
ss
cltd
pop
cld
movsb
add
adc
ljmp
ret
adc
cmp
cli
and
dec
shll
cmp
andl
cmp
int
sti
jmp
push
sbb
pop
fs
sub
stos
or
cltd
push
lret
xor
add
add
cmp
xor
inc
outsl
add
push
jae
movsb
mov
jb
pop
movsl
aam
sbb
cmp
fwait
or
scas
leave
faddl
dec
cmp
mov
jmp
fcmovne
xor
and
out
arpl
or
push
nop
clc
jae
test
add
dec
les
outsl
stc
push
add
jecxz
push
cwtl
std
mov
sbbl
jle
imul
rclb
jle
sti
test
daa
arpl
aam
ja
ja
mov
aas
ret
mov
cltd
shrb
and
adc
loopne
sub
iret
popa
mov
mov
cltd
stos
ret
test
xor
hlt
pop
jns
out
jl
jl
mov
mov
add
movsl
ja
add
jno
fiaddl
cmp
insb
cwtl
leave
mov
lods
ljmp
push
and
xchg
push
lahf
cmpsl
jns
mov
mov
jnp
cli
add
lahf
lock
loopne
sub
dec
lret
mov
cmp
push
outsl
sti
inc
call
mov
jecxz
mov
pushf
mov
pop
ficompl
inc
mov
push
cltd
fwait
push
add
push
add
add
or
sbb
pusha
mov
add
jecxz
ret
add
shl
cld
cltd
iret
add
in
fsubrs
lods
mov
and
loop
lods
add
in
adc
vprotd
mov
dec
push
jle
pop
and
test
call
imull
arpl
ret
fisubrs
repnz
cmp
xchg
movsl
pop
and
xor
push
xor
sub
pushf
rolb
jecxz
inc
push
xchg
jbe
mov
ds
andl
cmp
cwtl
scas
sbb
push
pop
gs
jle
cwtl
cmp
int
loope
aad
dec
sub
outsb
clc
add
outsb
jp
ljmp
pop
and
pop
dec
aaa
in
push
push
lret
mov
cmp
sbb
adc
mov
fisttpll
out
loop
cmp
cmp
sub
jae
lds
push
call
cmp
push
and
ficomps
push
adc
and
cmp
sarb
xchg
jbe
inc
sar
xchg
rcrb
rolb
pushf
mov
iret
sbb
out
ret
jle
pop
cwtl
adc
fimull
prefetch
sbb
pop
imull
mov
adc
pop
mov
ds
mov
lock
cwtl
insb
cmpsl
arpl
cmpsl
pop
add
jb
mov
addr16
xlat
sbb
mov
sub
cli
cmp
mov
sbb
push
divl
mov
xor
fxch
idivb
xorb
dec
add
push
rol
aaa
mov
sub
push
add
cmp
std
inc
add
cs
fiaddl
mov
or
mov
xor
pushl
adc
mov
out
inc
imul
dec
clc
pop
cltd
and
jnp
mov
mov
bound
movsl
xchg
inc
sub
cltd
mov
sub
jb
lods
cwtl
jp
scas
scas
adc
jae
pop
dec
or
mov
pop
ret
jg,pt
mov
pshufw
popa
push
mov
xchg
lahf
sbbb
inc
mov
pop
xor
push
dec
repz
mov
aad
es
jmp
push
or
or
dec
es
sti
sahf
xlat
push
jp
cmp
je
pop
imul
or
movsb
js
or
sub
repnz
dec
push
jnp
fdivrl
cmp
negl
sbb
mov
pop
or
mov
and
in
jmp
mov
stos
movsb
pushf
aam
sub
out
aas
cmp
mov
lea
in
mov
popf
fldl2e
bound
hlt
mov
xchg
jo
ja
cwtl
out
push
sub
outsb
fisttpl
cmpsb
sub
mov
clc
cmp
and
xor
jge
lahf
dec
xchg
push
sarl
imul
in
insl
fisttps
dec
mov
jb
fnsave
mov
pop
int3
ret
ljmp
inc
mov
push
icebp
mov
jae
mov
or
inc
pop
cmp
cmp
jle
xchg
clc
jle
in
jne
and
cmpsb
cli
sbb
in
or
mov
or
dec
enter
loop
cmp
push
mov
stos
negb
pop
cmp
mov
icebp
xchg
std
or
xchg
pop
mov
xchg
cmc
mov
mov
jae
cmp
mov
mov
mov
scas
nop
movsb
shrb
out
mov
fmuls
and
jge
add
pusha
xchg
shll
pop
mov
add
xor
or
int3
into
aad
xchg
pop
int
adc
xchg
cwtl
fmull
rorb
sub
adc
stc
popa
cmp
inc
cld
mov
lea
inc
aad
sar
loop
mov
mov
leave
add
jl
jbe
shrl
xlat
mov
jge
jecxz
iret
mov
punpckldq
rcrl
cmp
cmp
cmp
orb
data16
stos
lock
or
loope
pushf
sbb
aad
mov
xchg
xchg
mov
lret
faddp
iret
mov
cmc
and
mov
faddl
insb
inc
adc
sbb
xor
leave
and
ljmp
repnz
mov
or
mov
sti
das
jp
jno
xor
cmp
lock
inc
pop
das
mov
inc
dec
xlat
push
sbb
and
das
push
sti
daa
push
test
xor
mov
adc
mov
sahf
inc
and
lods
adc
push
sti
sub
xor
andl
push
in
fisttpl
mov
iret
ret
out
pop
push
pop
bound
loopne
add
shll
aam
inc
aad
pop
lret
stos
in
pop
cmp
cmp
add
cmp
mov
jns
pop
or
and
insb
lods
scas
cmp
outsb
cwtl
loope
or
pop
lock
call
fsubl
imul
lcall
mov
mov
cmp
jbe
xadd
fldl
sub
xchg
sbb
stc
mov
inc
push
pop
mov
fcompl
ljmp
mov
rcr
mov
inc
hlt
pop
cmpsb
pusha
jb
mov
and
jp
push
push
fs
dec
fldpi
mov
iret
insl
out
enter
xchg
push
icebp
mov
mov
xor
ret
inc
pop
or
and
sbb
cltd
iret
xor
cmp
lock
push
cmpsb
iret
aad
sbb
rcr
stos
movl
cmp
arpl
sub
test
sbb
xor
sbb
jmp
sub
mov
je
sbb
inc
mov
xor
lock
lock
outsl
fwait
lds
aas
mov
adc
les
dec
pop
sbb
leave
test
addr16
sbb
jnp
push
pop
clc
jne
fst
jl
repnz
out
mov
cwtl
cmp
repnz
insb
sub
xor
in
inc
xchg
insl
in
in
xchg
dec
mov
push
xor
push
sbb
and
stos
pop
inc
dec
sub
pop
aaa
imul
rcr
in
pushf
sbb
dec
sub
mov
xchg
ljmp
std
dec
ret
cmp
add
mov
xorb
in
cmp
hlt
aam
push
shrl
cmpsb
adc
nop
xchg
cmc
xlat
in
lcall
pop
sbb
jg
loop
into
sub
hlt
xchg
mov
popa
lods
mov
fs
push
xor
sub
pop
cmp
stc
jb
dec
add
out
cmpsl
push
not
push
jecxz
test
inc
and
cmp
aaa
xchg
sub
clc
movb
orb
iret
xchg
data16
ss
lock
adc
popf
adc
push
inc
cmp
in
jg
jo
adc
xor
aad
movsl
and
push
stc
flds
jb
fdivl
fbstp
fs
mov
jnp
or
pop
xchg
sahf
pushf
push
adc
inc
sub
ret
popf
insl
dec
pushf
pop
jnp
std
mov
in
addl
mov
pop
mov
mov
mov
xor
popl
call
inc
pop
adc
push
ja
mov
cwtl
gs
sub
adc
psubusw
or
out
push
loopne
push
jno
hlt
jge
cwtl
decl
jp
rcrb
mov
movsl
dec
xor
adc
push
addl
cltd
jne
scas
mov
pushf
mov
mov
pcmpgtw
adcb
mov
xor
mov
cmp
jmp
push
sub
adc
xor
lea
fdivrp
lea
add
mov
add
pop
cmpsb
push
jge
add
mov
repnz
inc
pusha
lods
pop
mov
mov
mov
push
orb
and
jl
test
or
jb
jbe
mov
pop
lock
push
and
pop
and
idivl
push
popf
shrl
in
arpl
lret
cmp
cli
push
or
xor
pop
and
lds
inc
cs
insb
int
fcoms
lods
mov
sub
mov
divps
and
lock
aaa
into
popl
sbb
aaa
sub
xchg
xchg
mov
lock
mov
cmp
imul
rolb
cmp
lock
or
sbb
sbb
out
adc
sbb
mov
test
sahf
arpl
pop
pop
out
rcr
leave
ret
shrb
cmovp
mov
mov
lret
icebp
fstps
stos
push
sarb
pop
rcl
mov
inc
lods
dec
mov
iret
test
push
shlb
lahf
lret
xor
pop
push
sbbb
fnsave
and
xchg
or
cmpsb
dec
dec
and
mov
repnz
popf
mov
xchg
push
orb
or
lret
sbb
leave
and
popl
push
pop
gs
and
cmp
cmp
xor
mov
emms
sbb
test
insl
xor
nop
out
daa
add
xchg
mov
test
sbb
or
xchg
add
push
sbb
dec
lea
les
xlat
nop
pop
push
dec
rolb
or
pushf
cmp
in
adc
sarb
cwtl
jae
cmp
sub
and
adc
xorb
mov
lret
loopne
sub
push
inc
push
jbe
lahf
add
mov
icebp
mov
ret
sbb
dec
les
fcmovne
shll
lcall
xor
clc
ljmp
in
mov
rorl
jne
adc
xchg
mov
xchg
roll
cmpb
dec
insb
mov
mov
fwait
ret
mov
rcrb
pop
pop
mov
popf
and
int3
dec
pop
nop
aaa
dec
cwtl
shrl
leave
rorb
pop
ss
jp
roll
sarb
jne
lcall
mov
fists
mov
cld
or
rorb
inc
cmpsl
push
ret
jl
icebp
mov
mov
lods
mov
jp
stos
sbb
and
nop
cmp
shll
shlb
push
push
loop
or
xchg
mov
adc
flds
mov
mov
inc
int3
scas
inc
roll
test
pop
call
int3
jns
mul
faddl
inc
nop
lea
es
adc
xchg
idivb
ja
mov
cmp
imul
lea
push
sub
fsubrs
repnz
setns
movsl
xlat
mov
inc
jecxz
pop
xchg
lds
ja
in
dec
stos
in
lea
jl
into
jle
sbb
int3
push
sbb
lds
cmp
adc
call
mov
in
fmul
sbb
push
sub
add
aad
mov
insb
in
pop
daa
mov
xor
cmc
pusha
cmpsb
or
scas
and
inc
mov
mov
cmc
int3
inc
inc
lahf
imul
add
fidivrl
je
dec
xchg
pop
pop
jae
jo
pop
out
xor
fisubrl
add
pusha
in
lods
popa
outsl
xlat
mov
lcall
fbld
in
jae
and
jl
pop
push
movsl
sub
insb
je
and
imul
frstor
and
jecxz
mov
aaa
adc
jmp
frstor
aas
ss
ret
addr16
loopne
arpl
push
mov
cwtl
sbb
flds
andl
hlt
xor
fistpl
int
lds
cltd
insb
lea
mov
sbb
mov
mov
and
add
outsb
pop
lds
pop
sbb
and
mov
and
les
ss
push
or
lea
das
or
sub
cmp
loope
arpl
jle
leave
mov
add
scas
mov
xchg
jmp
push
sbb
inc
shl
mov
lahf
xor
xlat
xchg
cmp
xlat
mov
mov
loop
dec
movsb
aas
push
pop
push
push
jns
ljmp
aam
add
push
and
xor
icebp
and
ss
jl
pop
fsub
int
aas
inc
xchg
xchg
sbbb
push
iret
and
enter
or
fiadds
faddl
aad
inc
lret
cltd
push
into
adc
in
mov
call
push
push
shlb
mov
push
xorw
test
inc
jp
sub
scas
sub
push
fisubrs
sbb
sti
lock
sarb
xchg
stos
fdivr
dec
mov
fistpll
cmp
ss
cmp
std
std
scas
jb
dec
mov
mov
loop
push
pop
js
and
or
das
lods
lods
xchg
inc
xchg
xchg
in
cld
push
test
out
mov
adc
into
and
icebp
sbb
mov
in
popa
or
ret
or
lock
data16
pop
movsl
cmc
xlat
xchg
push
mov
push
mov
xchg
pop
faddl
mull
ja
add
push
arpl
jle
push
add
xchg
scas
push
mov
shl
es
es
mov
cmp
mov
jbe
test
mov
jmp
loopne
dec
imul
dec
repz
into
fucomi
loop
jl
cli
inc
dec
cli
aad
stc
jns
frstor
faddl
jb
mov
mov
and
mov
scas
jecxz
or
jne
cmpb
rcrb
je
out
lret
xorb
pop
addr16
repz
popa
mov
lahf
popf
push
mov
rcrb
xlat
in
adc
inc
add
mov
lods
int
lods
xor
inc
jnp
lods
or
pop
dec
jp
xchg
mov
sub
add
imul
andb
enter
push
mov
fbld
xchg
stc
loopne
dec
jbe
iret
cmp
inc
int
sti
scas
test
pusha
mov
mov
and
mov
mov
push
jno
fdivr
fcomp
or
bound
cmp
inc
std
movsl
cmc
insb
das
mov
outsl
pop
lret
and
hlt
in
mov
pushf
imul
lods
and
ret
push
pop
jmp
gs
dec
shlb
xchg
test
in
push
adc
dec
cli
fcoml
scas
rorl
dec
add
mov
div
xchg
mov
push
jbe
enter
add
push
lret
mov
clc
sub
imul
leave
iret
fld
sbb
pop
xchg
fnstenv
ss
stos
js
insl
ret
jmp
sub
cmp
sbb
loop
xor
loopne
shll
sbb
cmp
sar
movsl
dec
repz
pop
add
xor
out
stc
popf
sub
xchg
adc
mov
loopne
jnp
negb
in
das
cs
movsl
or
fwait
push
mov
addr16
lods
in
add
add
push
hlt
les
and
mov
add
cmpb
pop
outsb
cs
mov
aam
adc
or
xchg
insl
adc
stos
pop
arpl
mov
adcb
push
xor
out
enter
xchg
xlat
outsl
push
cmp
cmpsb
shll
addr16
push
pop
cwtl
adc
pop
cmp
lods
sbb
jg
cmpsb
dec
in
pop
mov
mov
sub
dec
or
mov
push
loopne
jno
roll
sbb
jnp
lret
lar
arpl
les
je
aam
or
sbb
xor
popf
ret
push
pop
mov
inc
enter
xchg
mov
hlt
adc
dec
and
and
testb
sbb
add
repz
bound
pop
punpckhwd
mov
mov
jns
and
fimuls
pop
cmc
rorb
inc
mov
cmpsl
les
pop
dec
push
pop
or
sub
cmp
loope
stos
push
mov
test
push
mov
ja
sbb
mov
lock
imul
fimuls
in
decl
mov
fwait
xchg
sub
xchg
in
push
add
stc
adc
shrl
push
loope
das
repz
addr16
adc
mov
xor
inc
sbb
mov
or
fstpt
or
mov
add
lods
in
cwtl
sbb
rolb
lock
dec
mov
adcl
mov
mov
icebp
cld
das
roll
jno
jo
mov
jp
xchg
rcrb
int3
nop
cmp
out
mov
cmc
outsl
dec
pop
frstor
fistps
cmp
cmpsl
sub
sub
inc
fcmovu
outsb
fbstp
fistl
push
mull
pushf
clc
mov
sbb
inc
jo
mov
test
xor
fsubrp
pop
jecxz
add
add
in
mov
mov
sub
std
or
push
jp
jne
int
xor
jmp
mov
cli
repnz
add
in
mov
cmpsl
loopne
clc
out
ret
jns
or
scas
or
mov
int3
lods
cmp
or
dec
mov
push
pop
cli
and
arpl
lods
leave
outsl
stos
movsb
test
mov
xor
inc
stc
jb
ret
aam
sbb
andb
push
dec
add
test
mov
ret
sub
loope
add
fsubl
les
and
insl
inc
cld
or
jecxz
daa
xchg
je
or
pop
sbb
jnp
mov
aam
and
add
into
sub
xor
jae
outsb
push
xor
mov
push
mov
sub
xor
inc
scas
cld
xor
add
push
jp
sub
negl
cmp
or
stos
into
addr16
aad
dec
xchg
icebp
movsl
mov
adc
jb
sti
in
cmp
mov
test
loop
sub
dec
and
and
pop
sub
pop
push
mov
or
pop
jmp
pop
popf
push
push
fstpl
jge
cmp
insl
lret
pop
and
or
inc
add
inc
daa
xor
mov
lcall
push
and
outsl
xlat
loopne
inc
lahf
scas
insl
stos
sub
pop
mov
or
push
aam
and
pushf
and
in
inc
lret
pop
insl
or
insb
in
xor
jecxz
cs
mov
add
ret
cltd
enter
addr16
or
fidivl
or
mov
out
xchg
fdivrl
iret
outsb
cwtl
dec
jbe
add
rcrb
jns
inc
jo
and
push
mov
out
xchg
mov
sbb
ja
in
repnz
pusha
sahf
int3
fiaddl
cs
pop
es
sub
pop
insl
cmp
mov
jne
cs
hlt
stos
outsb
adc
add
jne
mov
lretw
cmp
adc
lock
or
sub
out
dec
xchg
lret
pop
ret
rcrl
push
jge
mov
xlat
dec
aaa
mov
pusha
push
xor
mov
mov
cmp
addr16
push
aam
into
ss
in
mov
lret
lret
mov
xor
or
cmpsl
mov
xchg
pop
mov
pop
andb
inc
xchg
sub
lock
cmp
xchg
pop
fistps
push
mov
jmp
je
cmp
loopne
push
mov
out
addl
cltd
dec
rcll
aaa
mov
fldcw
dec
mov
cmpsl
or
rep
sbb
cld
sub
sbb
int
out
mov
popf
add
dec
lods
mov
adc
inc
or
or
pop
insl
fdivp
or
repnz
test
jnp
pop
or
dec
push
xlat
cwtl
sbb
or
push
adc
jl
and
or
fcoms
sti
std
enter
out
pusha
mov
jb
lret
orb
loopne
dec
mov
jnp
in
sbb
push
mov
xchg
dec
int
imul
fistl
enter
cs
imulb
add
inc
push
std
fsubrl
jbe
leave
add
daa
leave
push
outsl
ret
cmp
iret
mov
inc
addb
adc
mov
push
mov
adc
mov
sub
sbb
clc
cmp
dec
mov
pushf
sarb
xchg
out
popa
lods
mov
jo
das
repz
das
sbb
fisttps
adc
xchg
pop
push
incl
loop
cmp
testl
fwait
popf
push
aad
push
or
mov
shl
mov
sbb
scas
test
pop
clc
scas
jns
mov
cmp
movsb
fiaddl
pop
inc
test
inc
push
xchg
inc
mov
out
scas
pop
out
mov
dec
in
scas
sti
shrb
and
out
sbb
inc
rcll
pop
test
andl
lea
mov
imulb
ret
jle
mov
mov
loop
std
lahf
in
iret
push
or
sub
mov
push
sbb
inc
scas
xor
push
sbb
stos
ficompl
repnz
mov
notl
add
push
dec
int
cwtl
popa
fiaddl
in
sub
add
mov
sbb
or
test
jno
lcall
into
sub
movsb
leave
xchg
jne
popf
pop
mov
pop
ljmp
push
loopne
jp
add
pop
push
ror
or
sti
push
push
fstl
out
aam
add
mov
hlt
inc
push
imul
aas
or
fwait
insb
adc
or
fdivrl
int
ret
sub
lods
sbb
sti
sub
fwait
pop
dec
jle
mov
fcmovnu
leave
cmp
ret
push
fistl
jnp
xchg
lret
pushf
pushf
hlt
movsb
sbbl
or
pop
push
enter
mov
sbb
and
mov
and
out
je
in
fs
rclb
pop
scas
xchg
jp
jne
ljmp
sub
adc
or
mov
jne
fdivrl
jnp
mov
rorl
push
mov
dec
pop
icebp
call
lcall
push
mov
fldt
xchg
push
mov
xor
jle
int
push
pop
icebp
jmp
mov
jns
mov
add
or
addr16
inc
cmpsl
sbb
jno
sbb
cmp
stc
mov
fimull
into
je
pop
xchg
subl
pop
add
lahf
push
mov
cmp
inc
sbb
into
mov
jp
and
xchg
aam
push
sub
cmpsl
ds
jbe
mov
add
pop
push
rorb
jae
jmp
test
lods
bound
mov
sub
push
pushf
repz
aas
push
mov
rolb
inc
inc
bound
sub
sbb
ffreep
insl
push
int
mov
adc
fsubrl
leave
pop
stc
sbbb
mov
fisttpll
xor
sbb
xchg
dec
mov
or
sbb
loope
mov
mov
add
cs
add
jns
arpl
xchg
je
icebp
mov
popa
pop
pop
imul
pop
rcll
ret
jl
aad
roll
daa
jo
arpl
js
scas
cmp
or
dec
push
iret
stos
jmp
test
shrd
lods
sysexit
std
ror
pop
fsubrl
inc
daa
lret
enter
int
in
das
ja
divb
dec
jle
mov
jg
or
inc
test
fcoml
xchg
inc
pop
cmp
fcoms
not
xchg
mov
pushf
xchg
push
pusha
outsl
xchg
mov
daa
jecxz
cmp
movsl
je
sub
add
call
xchg
hlt
push
pop
push
dec
xchg
in
cmp
jmp
inc
loope
mov
cwtl
jne
xor
dec
test
shlb
xchg
jmp
xor
xchg
fimuls
lret
adc
mov
push
mov
stos
mov
flds
mov
enter
lret
iret
mov
filds
mov
xor
arpl
add
mov
jl
and
insb
inc
adc
pop
pop
sbb
stc
in
jns
lods
push
in
cwtl
shll
cmp
aas
mov
es
sarb
iret
arpl
in
sbb
daa
push
lret
push
mov
mov
cltd
fistl
test
jae
and
pop
sub
mov
movsb
ficomps
and
sbb
xchg
ja
cmp
pop
jl
fsubrl
xchg
or
sub
and
mov
push
or
jne
mov
push
std
call
xor
dec
popa
jb
enter
insb
or
add
es
es
std
lahf
xchg
push
inc
rcll
push
sahf
mov
out
jbe
aas
sbb
mov
push
cli
dec
insl
inc
ss
fstps
jb
pop
cmp
cmp
cmp
dec
jnp
imul
mov
sti
jle
stc
arpl
xchg
call
adc
fistps
mov
xchg
enter
daa
sahf
push
push
int
or
xor
lea
mov
sbb
neg
cld
jno
push
vminsd
pop
sbb
lock
or
and
mov
jne
insb
in
popf
stc
loopne
lods
pop
adc
mov
inc
and
xchg
mov
add
mov
inc
out
aaa
push
cmp
sbbl
ret
fwait
xchg
fsubrl
mov
cli
pop
imul
push
and
or
xchg
sub
lock
loop
aas
sbb
pushf
add
mov
mov
sub
and
lea
jns
inc
dec
out
sbb
jecxz
movsl
mov
jmp
push
jmp
add
or
lea
mov
xor
inc
push
cmc
inc
jl
xchg
repz
sbb
dec
cmp
fisubs
dec
out
adc
mov
or
mov
in
shll
or
lcall
pop
cmpsl
test
cmp
scas
aaa
lods
rolb
add
loope
cmp
sahf
xchg
int
mov
pop
fdivr
push
push
or
outsl
rorl
das
adc
popf
adc
dec
shll
and
orl
mov
xchg
and
mov
mov
push
dec
out
movsl
dec
jno
adc
rol
sub
stos
dec
and
jmp
mov
push
xchg
sub
out
imul
xchg
jge
sub
addr16
jae
jb
lods
xchg
jne
sti
into
pop
das
pop
or
movsb
shrb
mov
and
pop
addl
lret
hlt
cltd
dec
andl
pusha
sahf
mov
jne
ret
mov
fiaddl
mov
mov
mov
sub
ljmp
and
and
pop
xchg
or
mov
subl
or
sub
call
or
dec
and
xor
push
or
test
adc
cltd
lea
test
dec
sub
mov
add
xchg
or
xchg
jl
cmp
flds
and
and
ja
mov
rorb
sub
inc
mov
xorl
mov
imul
inc
testl
mov
mov
test
sbb
push
in
jmp
xchg
mov
sarl
sbb
and
cmp
or
mov
pop
outsl
sub
jns
push
out
mov
enter
fs
mov
or
lcall
push
pop
mov
xchg
loope
mov
test
loopne
inc
push
cmp
sub
je
sub
jl
inc
sbb
sub
js
xor
xchg
pop
xor
das
imul
stos
or
push
mov
test
lcall
jecxz
fisttpll
fwait
push
cwtl
lcall
popa
xchg
push
pop
cmc
inc
das
gs
test
jbe
mov
cmpsb
xor
out
mov
mov
mov
out
into
int
out
add
push
clc
leave
cmp
hlt
jnp
or
inc
lock
sbb
xchg
add
cli
inc
arpl
js
adc
pop
add
fs
mov
jnp
dec
out
push
and
push
lods
sub
scas
stos
fisubrs
adc
jp
data16
inc
adc
lock
out
mov
andb
es
mov
mov
std
cld
mov
xchg
push
inc
jg
cmp
leave
rorl
add
leave
faddl
mov
repnz
cmpl
and
sbb
sti
xor
mov
pop
mov
pop
xor
out
andl
test
iret
mov
inc
adc
cmp
outsb
clc
push
lock
xor
in
cvtpi2ps
mov
lock
jg
xchg
out
inc
daa
das
jp
sub
mov
out
das
in
aaa
jge
cwtl
iret
cltd
je
lds
cmp
sti
push
cs
inc
add
or
sbb
popa
daa
xor
loopne
jl
cmc
mov
inc
loop
cmp
pop
jb
lea
and
xchg
mov
sahf
push
mov
int
inc
leave
cltd
xor
fstpt
dec
in
out
movsb
xchg
repz
gs
jns
pushf
sbb
mov
xchg
movsb
loop
inc
les
xor
inc
sbb
das
or
lock
sbb
sub
sahf
sbb
push
xchg
icebp
inc
xchg
movsb
call
xchg
mov
pusha
jge
mov
mov
sbb
cmp
mov
lds
ds
into
lds
cld
iret
lahf
push
clc
in
dec
xor
jle
mov
pusha
jg
fbld
in
test
xchg
jnp
xor
mov
bswap
sbb
push
jne
mov
mov
or
out
mov
fcomi
popf
dec
pop
mov
cmc
fwait
jo
mov
popa
movsl
shrb
push
pop
fadd
jns
sub
and
icebp
pop
addr16
lods
aaa
mov
fnstcw
adc
lahf
mov
jb
jp
arpl
jns
dec
dec
bound
xor
xor
aad
dec
outsl
push
and
sbb
mov
pusha
push
push
dec
jne
aas
dec
jo
mov
cmp
cli
inc
sub
cltd
sbb
sbb
and
pop
ror
nop
jae
jp
test
add
cs
pop
dec
popl
mov
cmp
mov
mov
ret
shlb
stos
jle
cmpsl
insb
adc
push
shl
xor
out
xchg
rol
jno
adc
pop
pop
loop
shll
cmp
and
ret
mov
daa
xlat
mov
inc
cs
mov
jmp
mov
mov
mov
clc
jge
or
stos
icebp
and
cmc
outsb
es
jmp
cmp
push
inc
pop
pmulhuw
mov
xchg
ror
push
mov
mov
pusha
aad
into
mov
mov
or
sub
int
adc
adc
loopne
sbb
mov
jno
pop
aad
popf
jmp
adc
fsubs
push
push
mov
jb
rclb
pushf
jbe
or
bound
fdivl
lcall
dec
pop
xor
addl
ljmp
inc
test
or
dec
sbb
in
cmp
fsubrl
sahf
movsl
mov
push
sub
xchg
mov
pusha
inc
shr
adc
out
stos
loop
xor
sub
or
jo
add
in
push
popa
push
cld
mov
jecxz
pop
mov
jp
push
inc
push
adc
test
outsb
xor
leave
insl
sub
mov
dec
gs
fsub
push
sbb
add
push
sub
push
or
mov
in
js
and
insl
mov
jne
outsb
pop
sbb
jns
push
xor
sbb
push
sbb
mov
pop
sub
push
and
and
cmc
push
push
xor
jbe
jno
shll
imul
repz
movsb
icebp
loop
mov
mov
cltd
sbb
cmp
push
movsl
lods
push
stos
ss
leave
rorb
repnz
lahf
dec
loop
rcl
inc
into
popf
pushf
movsl
lea
cmp
mov
std
in
and
dec
ret
out
inc
fst
push
test
loopne
or
or
sbb
inc
mov
movsb
stos
mov
in
push
mov
and
ja
cmp
jns
ss
int3
loope
test
cmp
inc
sahf
lcall
pop
mov
ds
inc
lret
mov
add
inc
mov
dec
jl
xor
fstpl
xchg
cmp
jp
inc
or
leave
push
aas
pop
fwait
mov
ret
sub
pop
aad
cmc
pop
mull
gs
adc
push
cmp
js
je
in
repnz
enter
pop
repnz
mov
cwtl
mov
or
daa
aas
dec
xchg
xor
dec
push
and
test
inc
fwait
stos
and
add
jb
mov
mov
ds
push
jo
out
call
mov
dec
mov
or
xor
sbb
lcall
clc
sbbb
fcmovnbe
mov
mov
sbb
cmp
fcomps
mov
aas
in
push
push
add
pop
pop
push
mov
loopne
xchg
mov
pushf
jbe
hlt
pop
dec
push
and
loopne
jnp
xor
lock
je
mov
or
sub
arpl
xchg
call
or
out
imul
fldcw
fwait
mov
push
mov
sub
sti
and
mov
pop
or
mov
cmp
fidivs
aaa
cmc
out
jne
cmpsb
sti
push
pop
or
or
shrl
lahf
test
cmpsb
and
xchg
xchg
scas
jmp
add
or
mov
jge
scas
inc
lret
mov
xchg
lahf
test
xor
dec
mov
aad
andb
push
cmp
jmp
fsubp
cmp
insb
int
ret
mov
cmp
push
repz
lcall
ret
data16
sbb
add
adc
loopne
dec
push
jno
daa
cmp
push
push
movsl
iret
clc
roll
es
nop
sti
cmp
cmc
outsl
bound
aam
jb
mov
cwtl
sub
mov
repnz
push
cwtl
icebp
cld
pop
loope
push
jnp
pop
addr16
add
lahf
fsubrl
push
cltd
lods
inc
fnstcw
add
stos
or
ret
adcl
mov
les
out
cs
mov
mov
ljmp
adc
std
test
call
leave
fstp
js
dec
push
push
mov
call
shll
sahf
ljmp
fadd
push
ljmp
rep
mov
cmpsb
or
lea
and
xor
js
lods
lahf
or
pop
sbb
in
test
aad
xor
add
adc
pop
shrl
add
leave
or
ror
movsl
inc
mov
sub
test
xor
in
mov
rcll
subl
lret
sbb
jp
or
mov
inc
loope
mov
pop
push
inc
mov
mov
mov
mov
lods
xor
lret
mov
jg
xchg
clc
clc
daa
cs
jge
sbb
in
out
jae
psrlw
sub
js
add
dec
xchg
xchg
lea
mov
lcall
lods
xorb
es
orl
repz
or
add
test
ret
mov
adc
jae
xor
testl
cmpsb
aaa
js
jmp
xor
fucom
mov
dec
ficomps
pop
cmp
stos
lea
jge
das
iret
cmc
iret
sbb
ja
xchg
push
stos
push
jo
push
mov
xlat
jecxz
jns
movsb
cmp
sbb
iret
mov
insb
std
ds
imul
xor
push
add
mov
xchg
stos
cmp
in
inc
cmc
mov
jecxz
inc
mov
stos
rorb
dec
fstpl
lock
sbb
jecxz
out
mov
pop
lcallw
movb
adc
int
outsb
jae
fstpl
aas
dec
mov
cmpsb
push
mov
or
dec
mov
push
inc
fildll
mov
roll
mov
cmp
rolb
js
adc
das
int
jbe
add
out
mov
cltd
bound
and
adc
or
jbe
ja
int3
dec
lods
cmp
mov
jo
addr16
sbb
in
stos
jae
jp
sub
int3
or
leave
inc
and
fwait
adcb
push
jecxz
pop
add
loop
add
orl
jle
in
xchg
jno
add
in
loope
iret
cmpl
xor
cmp
adc
cs
imul
push
int
mov
sbb
cmp
icebp
or
sbbl
and
ja
xchg
add
mov
sbb
icebp
fsubp
ds
aas
pop
inc
fadd
aad
sbb
inc
push
adc
xor
add
scas
cli
aam
push
movsl
int3
repz
addr16
jae
sub
mov
arpl
mov
jae
out
mov
cld
loope
adc
bound
popf
add
mov
iret
iret
daa
fcom
fsubl
cmp
ror
push
add
xchg
push
rorl
or
jnp
push
imul
mov
imull
movsb
lret
mov
addr16
dec
rclb
int3
push
mov
pop
mov
jmp
sarl
daa
or
in
and
ret
mov
setp
dec
pop
mov
push
hlt
add
inc
mov
push
and
dec
ss
les
mov
inc
cwtl
enter
ret
sahf
rcrl
adc
loope
imul
enter
add
das
and
arpl
xor
bound
sub
popa
mov
jp
inc
outsb
adc
adc
pop
mov
mov
lahf
loop
out
pop
ret
jle
cmp
mov
aaa
aaa
mov
xchg
push
les
jp
popa
iret
sub
push
arpl
or
sub
pop
ja
pop
es
lret
in
ja
mov
enter
lret
shl
inc
fs
pop
sbb
les
mul
push
jns
ret
mov
adc
arpl
mov
ficomps
and
movsl
and
popf
imul
cld
add
mul
shrl
ja
in
ljmp
mov
repz
lret
aad
mov
fistpll
jns
jb
cmp
pop
lods
imul
sub
dec
push
dec
fcmovb
andl
or
loop
js
test
or
ljmp
dec
mov
push
bound
or
jmp
addl
arpl
lea
mov
dec
xchg
bound
sbb
sbb
push
out
xor
pusha
rcrb
or
inc
idivl
enter
jle
fucomi
push
outsl
sub
fbld
loope
out
daa
sbb
lahf
fsubs
jb
sbb
mov
mov
imul
sub
notl
mov
leave
dec
xchg
inc
fnsave
pop
jle
loop
scas
andl
dec
mov
popa
xlat
push
xchg
out
pusha
mov
and
test
insb
push
or
and
push
pop
or
mov
popa
jae
shl
mov
push
jmp
fwait
cmpsb
xor
mov
in
fisubs
ficoml
or
pop
or
or
sarb
mov
mov
aam
scas
or
mov
lds
push
mov
and
outsb
sbb
inc
mov
mov
xor
mov
mov
jl
push
fsubrs
pop
push
dec
xchg
jecxz
cmp
or
pop
lods
stc
mov
mov
imul
in
outsb
or
dec
ja
jo
pop
lea
xor
adcl
out
test
iret
fisubrs
or
sbb
mov
out
jmp
out
push
mov
cs
outsl
or
mov
sahf
lds
pop
sahf
cwtl
mov
mov
xor
xchg
call
subl
mov
jecxz
ljmp
aas
sahf
mov
pop
mov
out
loope
mov
dec
test
push
jbe
aam
ljmp
cmpsb
xor
jle
test
lock
outsl
or
dec
dec
xchg
bound
pop
fstpt
add
cmp
fldl
mov
jl
sub
xchg
hlt
leave
rcll
or
cmp
mov
int
outsb
dec
push
mov
mov
popf
pop
test
or
outsb
jb
mov
sub
cltd
cli
scas
sub
into
scas
pop
push
sbb
movsb
xchg
fisubrs
movsl
aas
mov
mov
push
mov
int
gs
stos
lret
add
mov
hlt
mov
test
jl
jae
stos
jmp
lods
pop
std
cwtl
decb
mov
adc
xor
sbb
scas
cmp
int
subb
xchg
add
fisttps
fdivr
mov
adc
or
xor
mov
subb
jge
stc
test
dec
lods
pushf
sub
fdivr
mov
stc
xchg
je
aaa
mov
dec
pusha
xor
sti
scas
dec
mov
mov
outsb
and
in
sbb
mov
xchg
das
fs
jb
stos
int3
mov
dec
gs
push
adc
pop
adc
and
cs
aam
jno
inc
sbbl
test
xchg
lods
cwtl
xchg
pop
imul
pusha
push
imul
iret
mov
xorb
lret
adc
adc
inc
cli
xchg
lods
scas
inc
cmc
pusha
cmp
mov
push
mov
cmc
inc
fists
xchg
inc
loope
or
sub
es
cltd
ficoml
pop
sub
cmp
or
jle
ror
into
movsb
jb
mov
xor
mov
cmpsb
outsb
imul
cmpsl
dec
xchg
sahf
jno
pop
aas
jb
in
jle
sub
mov
scas
cwtl
cli
lods
and
cwtl
mov
leave
sbb
lods
fnstenv
cmp
enter
jns
dec
and
adc
aad
fbld
lea
rol
push
sarb
adc
shlb
aas
pop
inc
enter
mov
rolb
adc
arpl
mov
xchg
rcrl
sbbl
xor
inc
or
xchg
adc
jo
outsb
and
jne
sbb
cmp
fistpll
mov
sbb
cwtl
pop
xchg
lock
ss
test
inc
pushf
inc
mov
inc
orl
push
in
sub
add
or
jo
xorb
jmp
or
mov
insb
sub
loope
fdivs
xor
aas
inc
mov
add
mov
test
adc
call
in
aam
roll
xchg
sbb
cmpsb
push
cltd
jg
cli
popf
push
fiadds
dec
adc
dec
out
xor
out
push
adc
xor
int
sbb
ret
push
inc
shl
cmpsb
aaa
mov
mov
cmp
mov
loop
jge
sbb
dec
mov
push
sbbb
dec
repz
aas
cld
pusha
xor
mov
cmp
sub
addr16
push
out
test
jns
sbb
inc
popa
jmp
lahf
inc
pop
pop
lock
out
jecxz
pop
sti
add
ss
push
xor
lret
mov
cmp
pop
xchg
sub
mov
cwtl
push
pushl
test
pop
idiv
dec
jae
pop
popa
and
jne
aaa
lcall
sbb
subl
mov
push
jns
and
popf
inc
and
scas
pop
adc
scas
in
push
push
lea
pusha
rcl
int3
nop
push
and
insl
xchg
int
mov
pop
push
push
rcl
jg
mov
inc
sbb
inc
xor
std
or
push
adc
xchg
rcl
push
iret
push
cmp
test
fs
test
jle
fildll
jae
xchg
imul
cwtl
lods
lods
dec
stc
dec
out
imul
and
aaa
jb
xchg
fsubrp
or
int
sub
cld
push
ja
or
repnz
pop
fwait
xchg
jo
push
outsl
mov
test
xchg
ljmp
test
pop
icebp
leave
dec
pop
jnp
mov
fmuls
cli
and
sub
lcall
jp
jmp
test
cld
lahf
arpl
push
mov
cmc
stos
jno
std
cmc
cmp
push
dec
cmp
and
xor
sbb
gs
sti
inc
aam
out
adc
shrl
int
dec
or
inc
int3
pushf
adc
popa
push
std
loopne
inc
pop
mov
aaa
popf
push
lcall
jge
lret
cwtl
stos
test
movsl
imul
adc
popf
lods
test
repnz
or
jno
pop
xchg
in
jle
mov
xchg
mov
sub
push
popf
ds
cmp
lcall
push
fs
mov
bound
popa
pop
sub
imul
pop
jnp
lahf
mov
subb
inc
mov
shr
sbb
adc
cmpl
sub
fldcw
xor
lea
ja
jmp
rol
dec
es
ror
lcall
insb
iret
lods
stc
hlt
jo
sub
std
out
mov
inc
add
or
cmp
pop
add
cmp
xchg
dec
movsb
or
or
cmp
push
push
xlat
icebp
or
test
out
jl
mov
cld
sub
lds
es
mov
rcll
cld
ds
ds
into
pop
jmp
and
loope
xor
xchg
icebp
cmp
lods
lcall
mov
inc
mov
xchg
add
adc
in
dec
add
pop
ret
dec
push
dec
icebp
mov
push
inc
das
shr
mov
ja
fmul
icebp
pop
lock
les
aas
stos
pop
push
mov
roll
push
dec
cmpl
aam
push
xchg
cld
xor
mov
and
pop
jae
mov
jno
lods
pop
cmp
in
mov
fsts
cwtl
dec
dec
out
lahf
imulb
xchg
mov
into
test
stos
hlt
xchg
pop
push
xchg
mov
loop
jge
out
mov
aaa
push
pushf
mov
out
lret
sbbb
enter
pop
mov
jnp
dec
fsubr
out
call
int
jo
cs
out
cwtl
fdivrp
add
dec
add
pusha
sahf
pop
jp
xlat
push
test
out
fsubr
jmp
movsb
cld
test
loope
dec
pusha
push
pop
inc
notl
loope
addr16
mov
sarb
add
int
cmp
icebp
add
cmc
outsl
pop
inc
clc
cmp
mov
push
sub
sbb
icebp
xlat
sub
inc
add
jb
inc
jge
mov
add
movsl
inc
xlat
mov
pop
roll
xlat
in
or
mov
rcrb
xor
pop
inc
sbb
pop
insb
sub
repnz
xor
out
cmp
cmpsb
mov
nop
dec
pop
aas
sbb
imul
movsb
mov
mov
adcl
dec
add
cmc
push
mov
jp
inc
iret
cltd
test
cli
mov
adc
popf
add
xchg
in
pop
push
inc
cmp
sbbb
pop
shr
scas
inc
in
xor
push
leave
arpl
add
shll
jle
in
or
mov
sar
mov
rcrl
adc
xchg
cltd
pushf
mov
add
and
rcrb
pushl
inc
and
jno
pop
inc
ret
sub
push
repnz
lods
in
popf
mov
imul
jno
jecxz
sub
jo
ret
mov
repz
pop
int
mov
loop
popf
jne
sub
push
lret
add
mov
cwtl
sub
dec
popf
ss
outsb
pop
fsubrs
filds
inc
insl
add
or
sub
mov
shl
shlb
xor
xor
leave
stc
mov
pop
mov
mov
inc
fidivs
inc
lods
stos
push
mov
popa
mov
mull
adc
aaa
pop
or
inc
int
mov
outsl
and
xor
fisttps
cmpsb
or
imulb
sahf
sbb
dec
mov
or
or
or
movsb
lret
sub
push
push
in
or
xor
cmp
jo
mov
adc
scas
insb
add
sbb
xor
shrl
or
or
jmp
pop
adc
repnz
popf
push
jne
in
xchg
xor
fwait
call
in
movsb
add
add
repnz
jno
dec
repz
movsl
sarl
sbb
and
adc
int3
inc
adc
lods
mov
in
shl
jp
shr
mov
xor
movsb
mov
in
cpuid
jne
inc
dec
stc
addr16
jne
xchg
mov
and
sbb
cltd
push
xlat
sti
push
adc
sbb
in
dec
outsl
lods
in
pop
push
push
punpcklwd
sbb
cltd
loopne
bswap
push
lea
and
or
cmp
lret
inc
lock
clc
aaa
jbe
push
cmp
xchg
aad
test
push
fbld
aad
sbb
dec
cmp
cs
inc
and
jecxz
mov
decb
sbb
push
ret
rcr
out
pop
mov
and
lock
shl
lock
loop
adc
aas
xchg
pop
sti
je
ja
insb
sub
movsb
xchg
jge
sahf
push
xchg
mov
jp
aam
je
dec
inc
js
xchg
inc
mov
pop
fldt
cld
repnz
das
push
insb
dec
orl
or
mov
jge
icebp
sbb
sbb
inc
adc
fldl
dec
xor
mov
pop
and
jle
mov
mov
ds
outsb
jb
lahf
cmpl
mov
int
mov
dec
pop
inc
or
mov
xchg
test
push
mov
xchg
jne
dec
mov
inc
outsl
adc
es
xlat
xor
pusha
add
inc
adc
enter
or
pop
cmpsl
mov
js
jnp
cmp
push
std
cmp
mov
pop
orb
xchg
sarb
dec
das
xor
pop
sub
mov
mov
iret
cltd
es
cmp
mov
xchg
adc
sbb
xlat
xor
dec
dec
seta
mov
movsb
sarb
cmp
cltd
mov
push
sbb
push
lret
cmpsl
outsl
jmp
adc
cmp
es
mov
ja
loop
out
lahf
jmp
js
jle
mov
imul
dec
ret
aam
dec
inc
fwait
clc
std
dec
push
mov
sbb
aad
cs
cmpsb
mov
mov
pop
pop
rol
addr16
push
lock
mov
fsubr
push
out
mov
jns
in
cmp
out
sbb
loop
cmp
test
lret
je
dec
das
ret
xchg
fcoml
mov
push
icebp
add
mov
fs
cmp
sarl
xor
out
mov
cmc
push
and
cmp
push
fisubl
mov
sti
jno
sti
jno
xchg
fisubrs
ds
and
inc
mov
mov
mov
flds
test
jne
xor
cmpl
sti
call
inc
fcoml
stos
nop
jecxz
sbb
flds
push
jbe
popa
stc
ss
sbb
fs
scas
icebp
sti
push
popa
sbb
stos
fisubrs
movsl
sahf
repz
xlat
repnz
sbb
pop
pop
sub
roll
push
cmc
mov
pusha
sbb
add
fists
and
addr16
andl
push
and
xchg
xlat
test
push
xchg
xchg
fisubrs
sub
jp
loop
jo
mov
pop
mov
std
jmp
xor
and
cwtl
pop
mov
push
lret
xchg
imul
imulb
xchg
lods
sbb
cwtl
in
call
jg
inc
nop
pushf
test
pusha
imul
popl
testb
jo
jmp
mov
jns
cmp
push
aam
shll
mov
cwtl
sbb
push
jns,pn
jnp
push
dec
push
push
add
int
es
jecxz
xchg
addb
cmpb
jl
repnz
jmp
pop
iret
arpl
call
ret
cs
loopne
movsb
inc
lds
and
fstpt
mov
mov
add
scas
xchg
lret
adc
or
or
mov
and
lcall
jl
loopne
fs
ret
pop
inc
mov
cmpsb
mov
decb
mov
add
xlat
inc
pop
out
cltd
and
mov
clc
scas
dec
or
mov
mov
adc
jmp
adc
jmp
scas
out
or
and
xor
push
mov
mov
mov
jge
hlt
add
dec
clc
inc
leave
add
ficomps
pop
push
mov
mov
fst
xchg
jb
mov
mov
sahf
movlps
xchg
and
idivb
cmp
xor
loopne
cmpb
popa
sarb
inc
cmp
mov
iret
mov
cs
insl
insl
mov
mul
mov
cmp
pop
mov
pop
addr16
mov
add
cmp
cmpsb
cmp
add
int3
jmp
addr16
push
sbb
cs
stos
notb
int3
and
mov
cmp
jmp
mov
test
fdivl
outsl
insl
cmpsl
loopne
popa
mov
sti
inc
cmpl
mov
lahf
dec
out
aas
or
icebp
mov
out
insb
bound
test
fcomps
pop
mov
cwtl
push
pop
fistps
xchg
fidivrl
loop
jge
push
out
mov
or
adcl
mov
xor
inc
dec
sub
out
sub
adc
push
dec
mov
mov
push
jb
mov
jg
push
aas
adc
iret
stos
and
out
xchg
notl
jmp
hlt
lock
adc
sarb
imull
out
xchg
mov
mov
insl
iret
push
sbb
ds
push
jb
lock
xor
aam
adc
stos
push
aas
bound
andb
push
push
lret
cmp
adc
mov
jle
xchg
add
jecxz
xlat
and
movsb
cmp
mov
iret
loopne
bound
int
or
mov
shr
jle
push
jmp
inc
mov
subl
out
xchg
push
inc
sbb
cltd
fsubs
dec
shrb
sbb
mov
in
hlt
jecxz
sbb
or
mov
xchg
xchg
sti
shlb
fidivrs
loop
xchg
inc
push
clc
and
inc
fucomip
rorb
xchg
xchg
jno
cmp
mov
sbbl
loop
icebp
xlat
fdivs
idivb
fiaddl
xchg
jo
fiadds
pop
inc
sub
in
cmpsb
jnp
bound
enter
inc
push
shlb
xchg
lea
cld
push
jo
and
cld
iret
loope
pushfw
out
jmp
pop
das
pop
mov
iret
fistpll
cmp
or
loope
pop
mull
std
mov
push
loop
sbb
or
jno
pop
out
sub
test
cmp
adc
je
inc
xchg
shlb
and
push
jnp
or
repz
xchg
xchg
mov
pushf
sub
mov
and
ljmp
movsb
mov
incb
std
aaa
sbb
jae
jmp
adc
aam
or
mov
cmp
stos
or
stc
mov
pushf
arpl
push
fucomip
lahf
fdivrl
dec
mov
sbb
cmp
and
lea
rcrb
daa
out
lea
adc
scas
inc
or
push
pop
adc
adc
outsb
out
ror
scas
imulb
imul
add
mov
or
jp
adcb
mov
xchg
inc
mov
and
inc
add
mul
jmp
inc
xlat
lret
into
mov
or
jno
add
dec
pop
pop
jmp
pop
mov
or
mov
cmp
xchg
movsb
repz
push
jb
pop
gs
stos
outsl
mov
pusha
insb
fs
gs
dec
cmp
or
inc
mov
loop
xor
cs
xchg
lret
pop
jb
outsl
aad
push
or
es
dec
andb
aam
mov
or
incb
inc
add
push
ljmp
add
fdivrs
mov
jbe
lcall
add
xchg
jecxz
mov
mov
push
inc
cmp
cmc
dec
ljmp
sar
scas
xor
cmpsl
and
icebp
add
or
fisttpl
xchg
lods
mov
pop
and
or
or
xor
push
sbb
mov
sub
shll
xor
jae
fildll
dec
dec
frstor
insl
mov
or
aam
popa
xchg
pop
pusha
lods
sub
testb
insl
mov
test
sti
adc
in
push
xchg
jge
mov
dec
pusha
pop
outsb
xor
or
push
lock
in
push
shl
jge
movsl
fidivrs
mov
inc
mov
out
mov
jp
cwtl
pusha
xlat
clc
int3
xor
insb
pop
xor
shrb
sub
fldcw
insl
sbb
push
push
adc
push
lds
popa
test
jmp
popa
call
iret
sarb
aad
or
sbb
in
fimuls
push
gs
imul
mov
sub
xchg
cmp
or
mov
nop
je
or
sub
popf
mov
mov
stos
ret
or
cmp
in
sbb
inc
mov
pop
hlt
xor
pusha
sahf
dec
jle
movsb
data16
mov
push
out
mov
inc
mov
popf
push
mov
js
dec
cmp
aam
dec
and
gs
xorb
scas
push
jbe
or
jp
adc
sarl
inc
or
stos
xor
test
mov
stc
xchg
push
sub
jae
xchg
pop
shrl
pusha
adc
sub
mov
test
popf
xorl
pop
imul
adc
test
dec
insl
scas
and
mov
pop
test
out
outsb
pop
shll
fwait
shrb
xchg
scas
and
fistpll
add
or
sub
ja
ljmp
pop
ret
pop
adc
pop
fisttps
push
pop
pop
pop
mov
mov
outsb
adc
aam
pop
movsl
enter
rcrl
mov
push
push
mov
mov
lcall
add
mov
inc
js
scas
fisubl
outsl
mov
les
and
sbb
mov
in
insb
and
xchg
ja
stos
mov
pop
inc
push
sub
orb
pop
sahf
inc
push
stc
js
jno
xchg
cmp
lret
inc
sbb
std
push
iret
mov
orl
lcall
sub
fstps
add
daa
adc
jp
mov
call
mov
pop
add
faddp
mov
xchg
cs
or
add
sbb
sub
adc
mov
dec
inc
add
mov
lcall
and
ret
jp
mov
sbb
xchg
mov
rcll
pop
xor
jo
push
in
js
addb
dec
dec
xlat
xor
xchg
sub
xor
xor
jbe
loopw
mov
daa
pop
mov
scas
daa
jg
mov
cltd
shlb
ret
test
cli
call
mov
movsl
push
out
pop
cmpsb
mov
cli
mov
sub
jecxz
adc
repnz
pop
inc
lcall
daa
outsl
xor
arpl
and
pop
sti
add
xor
and
add
lea
scas
and
sti
xor
out
insb
xor
iret
cltd
inc
into
bound
repz
adcl
shr
add
jbe
dec
in
xchg
fstl
in
idiv
subl
loopne
mov
cmp
cmp
fwait
jae
aad
push
adc
lret
out
jp
dec
inc
xchg
sti
jne
cmp
out
xchg
mov
lock
lret
sbb
loope
adc
jno
mov
outsb
addr16
and
das
push
jecxz
icebp
push
cmpsb
sub
dec
cmp
sbb
in
xor
and
pop
je
add
fildll
cmpsl
je
cmpsl
lea
push
adc
dec
stos
dec
in
in
mov
outsb
jns
pop
dec
insl
arpl
sub
je
sbb
lods
rol
jbe
es
daa
ficompl
sbb
je
shll
in
push
add
mov
push
daa
add
pop
push
aam
lret
lea
pop
or
or
pop
int
scas
inc
clts
adc
loope
inc
sbb
out
mov
or
stos
xor
lods
fcmovnbe
cmpsl
push
rcrb
es
xchg
aam
ret
ret
repz
inc
imul
inc
test
jecxz
pop
xchg
inc
add
ss
test
and
push
mov
inc
movsl
out
lcall
fistl
mov
cld
xchg
cli
mov
int
mov
fs
lcall
scas
inc
lock
add
or
mov
lods
movsb
decl
les
and
ja
sbb
adc
inc
dec
movsl
pop
scas
dec
in
or
cmp
out
loop
into
push
or
and
out
push
xor
jmp
movsl
adc
das
aaa
sbb
inc
mov
mov
mov
ja
and
mov
cmpb
outsl
inc
add
cld
fldenv
xchg
lret
lret
lea
or
fistps
and
cmp
aas
mov
pop
cmp
rcr
mov
dec
les
int
cli
cs
outsb
pop
inc
inc
pop
mov
in
adc
push
fdivr
cmc
or
jp
add
pushf
idivb
xchg
in
cmpl
xor
sbb
ljmp
xchg
sbb
pop
enter
test
xorb
dec
stc
mov
dec
lret
mov
add
adc
dec
loopne
mov
cmp
sub
in
or
cld
call
xchg
pop
les
add
addr16
call
divb
int3
sbb
mov
in
sbb
test
les
cmc
aas
inc
dec
push
or
imulb
pop
nop
jo
mov
ss
push
xor
imul
test
arpl
lods
add
pop
inc
xchg
xlat
icebp
out
pop
push
fldcw
std
sbb
loope
pop
insb
cmp
jg
dec
out
inc
or
mov
ret
pop
xchg
leave
dec
xchg
outsb
adc
cmp
dec
and
cli
mov
push
dec
aaa
jl
pop
mov
xlat
xchg
pop
push
pop
jnp
add
cmp
mov
xor
fwait
xor
xchg
and
xchg
shr
cmp
pop
out
lcall
ljmp
push
or
outsl
push
jnp
sub
dec
cmp
xchg
cmp
push
mov
mov
movsb
cmp
call
pop
mov
xor
scas
popf
jl
jg
or
aad
or
push
imul
mov
adc
std
jno
sbb
popa
xchg
iret
sub
call
xchg
mov
pop
pop
addr16
in
loop
push
mov
and
fsubrs
add
adc
insl
stos
pop
mov
cmp
clc
dec
mov
sbb
imull
inc
arpl
ss
xchg
es
sbb
inc
addr16
pop
jmp
xchg
testb
scas
xlat
cmp
mov
mov
inc
mov
std
xchg
jb
mov
sub
loop
sub
add
jae
mov
dec
add
aad
and
inc
outsb
aas
int
std
iret
mov
mov
cltd
push
roll
mov
pusha
mull
testl
adc
inc
scas
jns
xchg
outsl
icebp
pop
jl
inc
jge
mov
sub
or
pushf
movsb
add
cmc
popf
stos
call
push
int
inc
sbb
cs
fstps
test
popf
xchg
sbb
imul
pop
ret
cmpsb
js
addr16
int
fs
sub
aad
out
ss
addr16
out
mov
push
or
lcall
push
mov
sbb
sti
dec
mov
les
scas
into
bound
and
in
sub
and
clc
insb
lret
jnp
das
out
sub
add
nop
push
jno
fwait
popf
mov
or
add
jae
mov
mov
mulb
jge
and
in
mov
push
jb
xor
mov
mov
mov
testb
pop
int3
pop
cmp
ja
call
adc
mov
xchg
out
movsl
sub
subl
ret
scas
cltd
pop
adc
in
xchg
lcall
xlat
shr
test
add
jl
add
sub
mov
and
sub
mov
push
xor
insb
mov
nop
pusha
mov
sub
ss
rorb
and
cwtl
mov
mov
shll
in
es
pushf
idivb
movsb
xchg
in
cmp
xlat
mov
cltd
pop
lods
lods
fwait
cmp
jne
xlat
std
mov
sbb
sbb
shrl
lahf
pop
push
stos
lret
xchg
mov
nop
jne
shr
sbb
xor
fiaddl
adc
imul
insb
divl
push
push
repz
lea
in
or
repnz
and
sbb
push
adc
sub
cmpsb
add
dec
sub
ds
insl
fnstsw
sbb
movsl
add
imul
daa
lcall
and
popa
sub
mov
das
hlt
add
mov
push
pusha
out
push
pop
add
daa
add
je
inc
repz
in
test
inc
lahf
ljmp
jle
cmp
sub
dec
xor
xor
and
push
sbb
cs
rolb
xor
aaa
push
push
fcmovu
rcll
es
xlat
stos
mov
pop
out
pusha
pop
cld
xchg
lret
mov
xlat
sar
sahf
orb
xchg
xchg
mov
pop
test
dec
jl
inc
cmp
dec
mov
imull
out
int
mov
int3
stos
mov
lods
mov
pushf
in
insb
fs
popf
popf
lods
jnp
add
aas
repnz
clc
pop
stos
or
rorl
jae
or
xlat
add
mov
mov
mov
adc
cwtl
clc
lods
jbe
aam
push
xor
loope
push
mov
sbbl
enter
aam
stos
add
mov
add
lret
daa
sbb
stos
rol
xchg
adc
lahf
push
popa
and
retw
and
out
xchg
fucomp
adc
xor
push
xor
adc
adc
es
or
dec
cwtl
and
fdivr
or
push
ds
cmp
mov
or
mov
rsm
pop
ja
xchg
ja
sbb
xor
mov
insb
add
movsl
mov
insb
cmpsb
xor
sub
adc
fs
mov
pop
popa
add
fs
add
jno
jb
push
dec
dec
inc
je
jmp
cli
inc
inc
in
stc
jnp
push
leave
mov
out
arpl
mov
cmp
mov
jl
test
adc
leave
fsubrp
sub
adc
mov
and
scas
insl
adc
icebp
iret
sar
shl
xor
es
daa
or
stc
pop
aas
mov
cmpsl
fdivrp
bound
mov
cmp
popa
insl
shlb
data16
arpl
pushf
push
mov
xchg
cmpsb
aam
jge
es
movsl
jl
jge
ss
mov
lds
mov
repnz
xchg
popa
std
lods
test
jo
jnp
dec
aaa
in
int3
out
cmp
push
dec
cmc
sbb
test
in
add
inc
sarl
adc
imull
xchg
cmp
inc
rorb
idivl
or
fld
cmp
cmp
cmp
ds
fidivl
pushf
inc
cmc
xor
and
cmp
xchg
xchg
imul
gs
js
pop
adc
push
jmp
je
data16
dec
jl
mov
jecxz
mov
test
stos
cmpsl
bound
rolb
push
je,pn
cli
cmpsl
mov
mov
jne
mov
inc
adc
or
iret
fistpl
lea
cs
mov
push
popf
jmp
sahf
xlat
fwait
mov
jg
stc
xchg
fwait
popf
aad
push
push
dec
push
xchg
aaa
inc
and
mov
xchg
push
mov
aam
in
cwtl
gs
jb
lcall
sub
push
xlat
sbbl
adc
movsl
xchg
inc
pop
cld
les
fistpll
xor
mov
lds
mov
and
shll
adc
mov
fldl
lock
filds
gs
test
cmp
and
adc
sbb
fidivl
iret
xchg
mov
stos
lods
int3
inc
pop
hlt
mov
jno
adc
in
das
cltd
in
pop
ja
dec
push
and
imul
ss
xchg
add
fildll
sbb
in
mov
push
push
jmp
or
pop
cs
jle
faddl
jp
movsl
sbb
push
mov
cmp
fstp
popa
sbb
xchg
jb
push
clc
adcb
mov
pop
inc
pop
cmp
jns
int3
in
push
in
and
out
dec
ret
sahf
clc
dec
xor
sub
arpl
pusha
mov
rclb
xchg
mov
mov
sbb
mov
addr16
mov
pop
es
outsl
push
mov
or
cld
xlat
or
mov
sub
lock
dec
gs
aad
jl
or
sbb
xor
push
add
lods
inc
inc
pop
sub
and
aad
aaa
popf
outsl
adc
jns
xlat
fdivs
std
push
in
xor
inc
das
push
xchg
les
fsubl
jmp
sbb
mov
inc
fidivrl
jo
xchg
mov
mov
imull
jmp
adc
shlb
insl
adcb
hlt
pop
mov
rcr
ds
dec
gs
mov
enter
int3
sub
jmp
sub
pop
daa
mov
or
xchg
dec
frstor
imul
lcall
mov
dec
cmp
cmp
repnz
push
jb
mov
stos
xchg
xchg
imul
loope
popf
xor
pop
ljmp
imul
pop
adcb
add
cmp
loop
add
loope
dec
adc
sbb
lahf
in
or
out
pop
daa
insl
jmp
pusha
test
jne
mov
cltd
jnp
les
sub
mov
dec
jno
imul
fsubr
adc
in
push
push
push
out
cli
xchg
adc
cmp
aad
dec
push
rcll
clc
vpackuswb
sbb
xchg
and
xchg
mov
inc
std
pop
mov
add
mov
mov
and
inc
mov
test
push
das
xchg
xchg
mov
icebp
add
in
or
je
dec
pushf
test
movsl
out
lock
mov
fmul
pop
sar
sbb
xchg
fmulp
mov
add
jecxz,pt
rclb
aam
je
xchg
jae
call
add
repz
add
mov
and
mov
int
lret
cmpb
out
mov
cmpsb
out
adc
inc
push
roll
jg
in
cmp
loope
inc
xchg
stos
jno
in
cli
mov
fstpt
je
push
in
cmp
add
cmp
cmp
std
push
cmpsl
jo
sub
and
out
cld
arpl
xchg
sub
xor
sbb
mov
cmc
imul
ljmp
adc
mov
jle,pn
imul
fldl
xchg
mov
dec
inc
xorl
and
xor
insl
pop
sub
pop
sbb
lahf
call
mov
mov
out
push
mov
cmp
sbb
loopne
push
in
in
xor
jp
pop
test
sub
dec
push
repnz
cwtl
and
cwtl
rolb
scas
jne
jo
inc
ret
fidivs
and
cltd
lcall
cmp
into
clc
xor
pop
popf
dec
je
fcmovnbe
mov
inc
int3
mov
arpl
pusha
addl
sub
mov
in
dec
mov
mov
stc
mov
xor
dec
sub
mov
stos
das
mov
xchg
xchg
inc
push
sbb
orl
cmp
and
add
inc
and
ja
mov
cmpsb
mov
jg
rcll
aam
jp
lahf
scas
sbb
fisubl
enter
lods
fdivs
fwait
hlt
adc
xorl
inc
outsb
fimuls
dec
mov
push
push
out
pop
decb
ret
imul
cwtl
test
out
xor
lret
testb
loop
repnz
cs
sti
xor
mov
sbb
inc
lods
mov
mov
mov
xchg
int3
xchg
mov
test
push
in
shrb
add
or
fisubl
lea
push
xor
or
sbb
icebp
pop
fsubrl
jne
addr16
jmp
fmuls
sahf
xor
imul
cmc
jnp
mov
mov
shlb
je
jae
rcrb
popa
movsb
mov
push
cmp
sub
es
enter
stos
in
test
push
mov
aam
in
cmp
push
sub
pop
push
pushf
ret
pop
stc
in
jb
mov
pop
pop
sub
xchg
inc
mov
mov
lcall
xchg
ss
fisubs
inc
movsb
testb
jge
lods
sarb
mov
xchg
test
and
and
fdivr
or
out
mov
sub
into
sbb
cmpsb
lret
sti
in
fdivl
mov
jnp
xor
mov
mov
jp
pop
ss
mov
pusha
mov
loopne
sub
loope
lcall
cmpl
cmp
mov
inc
out
test
adc
mov
inc
cmp
jmp
loop
mov
jle
xchg
and
xor
stc
jo
pop
arpl
cld
aam
stos
out
jle
or
jne
outsl
inc
jbe
dec
jl
or
and
iret
adc
push
cld
xor
fisubrs
add
pop
dec
sub
sbb
push
out
out
es
aad
clc
in
lcall
pop
add
xchg
push
in
loop
repz
insl
or
aad
add
and
mov
dec
inc
dec
in
push
mov
cmp
jecxz
ret
subl
xchg
sub
insb
mov
inc
movsb
aam
out
hlt
dec
jecxz
das
sahf
and
lret
dec
xchg
adc
shlb
call
out
jg
xchg
shrb
loope
popf
in
lret
jb
cmp
dec
adc
fcomps
inc
cmp
jl
fstpl
lret
xor
jno
and
pop
and
adc
subb
mov
mov
es
push
jmp
lret
xchg
loope
fwait
xorps
inc
int
xchg
rolb
fdecstp
mov
add
mov
sbb
xor
out
jle
jns
mov
push
shlb
icebp
xor
jl
pushf
sti
popf
mov
pop
jg
pushf
push
and
add
in
jae
or
fwait
adc
rdmsr
and
mov
mov
xchg
mov
sub
aaa
sub
jmp
fidivl
dec
hlt
cvtdq2ps
popa
or
jno
xor
mov
push
mov
mov
icebp
jb
sbb
dec
shld
into
arpl
or
out
stos
gs
aas
mov
inc
fimuls
mov
mov
mov
push
jns
orb
or
cwtl
adc
test
mov
pop
jo
xor
into
arpl
out
pop
gs
adc
mov
and
push
movsl
push
xor
push
repnz
fcompl
push
mov
sub
push
sbb
cmp
pop
cmpsl
je
adc
fsubr
outsb
loope
stos
add
loopne
cmc
pop
pop
mov
push
lods
dec
sbb
cmp
xor
popa
lods
std
push
and
add
fucom
ret
je
pop
pop
std
repz
cmpb
out
xor
int
ja
inc
lcall
mov
xchg
or
out
outsb
into
mov
insb
mov
cmp
mov
fidivl
aaa
jmp
popf
dec
mov
or
pop
and
lock
xor
mov
movsl
ljmp
dec
mulb
enter
cltd
arpl
and
cltd
inc
dec
jmp
js
inc
in
dec
add
out
adc
shlb
jb
mov
and
push
adc
daa
into
pop
add
pop
sbbb
aas
sub
clc
xchg
xlat
movsl
mov
mov
in
popa
mov
inc
fdivrp
dec
mov
test
testb
sbb
xor
cmp
pusha
mov
mov
mov
idiv
adc
push
add
add
in
mov
in
fcmovnu
sub
xchg
mov
jmp
push
fstpl
jle
loop
xor
sub
mov
push
movb
cmp
mov
mov
insl
mov
dec
icebp
mulb
filds
sbb
sub
pcmpgtw
repnz
out
rorb
dec
sahf
dec
sub
jno
inc
mov
adc
cmp
jecxz
push
cld
pop
push
subl
jo
push
in
popa
mov
sbb
int3
sub
pop
ret
cmp
and
je
push
stos
je
fistpll
ret
and
and
imul
mov
cli
mov
xchg
mov
sbb
jb
mov
fwait
push
push
ja
popw
inc
dec
mov
call
sbb
lods
push
jbe
cmpsl
leave
stc
loop
lret
cmc
push
data16
lock
fldl
jno
push
andb
lcall
insb
popf
enter
jle
jl
or
loopne
dec
jnp
inc
push
gs
test
lods
dec
pop
jle
sub
jo
fiaddl
hlt
jnp
and
outsl
icebp
mov
arpl
adc
jnp
mov
lock
clc
cmp
scas
inc
inc
inc
dec
test
hlt
xor
xor
push
push
aas
cmp
ljmp
sbb
cmp
jmpw
stos
jo
cmp
push
push
push
add
lea
ret
xchg
imul
dec
push
arpl
shlb
cmp
inc
mov
pop
jecxz
ret
jg
lret
push
rdmsr
mov
ds
rol
ret
and
lret
fstpt
jecxz
and
cmp
scas
xor
or
lea
add
insb
jle
adc
mov
mov
out
pop
mov
jle
shll
mov
push
inc
sbb
inc
test
fistpl
mov
push
xor
adc
outsw
rorl
sbb
pop
mov
rcrb
shrl
lods
add
mov
enter
popa
dec
cs
les
jge
ja
sbb
add
jle
lods
insl
popf
fwait
les
lods
insb
pop
inc
ss
push
push
rcl
pop
fstps
sti
xor
adc
loope
aas
iret
sbb
aas
dec
or
xchg
and
test
nop
ret
xor
int3
xchg
call
rorl
push
mov
scas
clc
pop
cmp
push
inc
xor
fs
mov
add
or
cmc
cmp
fisttpl
outsb
sbb
fwait
shl
push
xchg
jae
cmp
xchg
jae
ja
pop
aad
lahf
sbb
xchg
pusha
push
data16
fdivrl
ret
adc
movb
loope
mov
sub
lock
addr16
dec
cmp
or
lds
adc
push
mul
push
out
pop
jbe
push
mov
mov
in
fnstenv
xor
push
xchg
sbb
movsb
pop
jns
sbbb
lahf
xchg
repnz
cmp
pop
cmp
and
out
int3
lahf
sub
xchg
es
mov
push
insl
pop
nop
xor
jmp
push
pop
cltd
or
andl
lcall
push
imul
andb
or
sbbb
cltd
or
sub
cwtl
sub
scas
ja
adc
mov
cmp
jnp
in
lea
test
push
sti
sub
xchg
push
jp
xor
or
das
xchg
lods
shl
inc
or
xchg
dec
movsb
inc
loopne
add
cmp
mov
or
adc
dec
shll
lcall
cmp
call
jl
jg
cmpsb
push
imul
cmc
rcrb
decl
jge
pop
scas
or
pop
stos
adc
pop
insl
mov
mov
dec
in
dec
xchg
inc
aam
jnp
add
js
push
pop
sub
aaa
mov
dec
sub
repnz
ss
out
inc
fldz
mov
imul
or
sahf
jl
dec
add
xchg
fidivrl
mov
cltd
jge
xor
imul
pusha
cmpsl
cmp
ret
repz
sub
jg
add
bndstx
ds
inc
xchg
test
test
mov
loope
push
dec
lock
outsl
sub
sub
sbb
pop
inc
mov
outsb
ds
and
mov
into
pop
and
nop
adc
xchg
and
data16
jbe
inc
dec
aas
or
out
mov
adc
xor
andl
and
gs
aas
xor
mov
aaa
scas
jmp
rcrb
xchg
and
ljmp
push
add
xchg
mov
mov
xor
xor
xchg
pop
lahf
mulb
sahf
rcr
in
out
filds
xchg
mov
mov
stc
into
xor
bound
push
xlat
sub
repnz
xor
jno
fildl
ja
popf
movsb
rcll
sub
adc
push
adc
sub
xor
addr16
sub
out
push
dec
mov
scas
mov
mov
test
sub
test
pop
cltd
in
out
mov
dec
inc
test
notl
push
lret
add
push
mov
sub
dec
ret
stc
mov
fdecstp
pop
ljmp
dec
inc
mov
cwtl
mov
shlb
mov
push
gs
iret
jge
iret
dec
inc
push
test
outsb
sub
and
std
cmc
popf
repz
inc
scas
xor
push
data16
or
nop
rcll
shlb
aam
push
push
cmc
loop
mov
pop
mov
push
inc
sub
jne
outsl
adc
mov
jnp
jecxz
push
mov
dec
or
push
sbb
aam
lea
inc
dec
pusha
jo
movsb
lret
or
insb
popf
scas
jb
jg
sub
fucom
subb
aaa
arpl
xchg
lods
outsb
insl
cs
or
ds
fnsave
mov
cwtl
stos
xchg
push
sahf
jbe
sbb
sbb
aaa
jg
pushf
fcoms
and
cmpsb
cmp
jmp
scas
loope
mov
cmpsb
movsb
sub
pop
cmp
mov
gs
jmp
out
sub
arpl
js
mov
dec
adc
or
clc
sub
xor
ja
xchg
lcall
push
in
into
cwtl
outsl
sbb
je
xchg
out
decb
pop
sub
pop
cltd
std
mov
xor
cmc
icebp
sub
shl
fistl
xor
xor
or
mov
ss
shll
or
lock
in
mov
fildll
fstpl
or
negl
jo,pn
mov
push
pop
jecxz
popf
pop
mov
fidivs
push
xor
cmp
inc
sub
cmp
mov
pop
cld
push
mov
sbb
inc
jne
fildll
das
push
in
sbb
mov
mov
push
fstpt
pop
lret
sti
jmp
sar
pop
inc
xor
cmp
pop
pop
jmp
jno
xchg
sub
xor
sub
cli
jns
mov
shr
add
inc
loope
pushl
mov
sub
and
sti
pop
rcll
lds
sbb
jae
ljmp
lods
jae
div
test
fst
mov
aam
insl
sub
shrb
xchg
mov
dec
out
mov
stos
mov
testb
cltd
dec
xchg
mov
cmpsl
not
mov
sub
dec
ja
and
out
push
cmpsl
fdivr
in
ret
test
adc
or
sti
divl
mov
fnstsw
pop
dec
aaa
push
lock
fisubs
xor
sti
lock
push
icebp
jo
sbb
jl
in
shll
sub
je
jo
das
das
and
ja
test
gs
add
sub
mov
and
push
dec
sub
and
in
sub
in
xchg
sub
xchg
cmpl
das
mov
in
popa
fwait
mov
nop
dec
add
repnz
ss
lret
popf
inc
push
aam
lcall
xor
mov
out
mov
dec
sub
jge
or
in
add
adc
scas
mov
fisubl
ficompl
sub
dec
cmpsl
fucomp
cmp
dec
cli
enter
push
jmp
pushf
sub
sub
pop
call
nop
sahf
data16
cmp
daa
fpatan
aaa
and
sub
pushf
lret
std
dec
and
loope
pop
out
sti
mov
xor
les
cmpsb
imul
sti
orb
add
jge
imulb
mov
cwtl
push
cmpb
lret
lret
or
jp
lcall
das
cli
push
add
cmpsl
pop
pop
jo
pop
or
jl
dec
sti
out
cmpsl
aad
mov
mov
adc
lahf
shll
pop
push
push
fisttps
ja
clc
ljmp
iret
mov
mov
adc
cltd
fmuls
das
jle
and
mov
ret
xchg
test
inc
lcall
sbb
ds
loop
mov
test
dec
inc
ds
add
cld
xchg
push
mov
mov
sub
in
fisubl
test
dec
stos
mov
gs
sbb
pop
cltd
xor
mov
mov
lods
dec
pop
cmp
lret
xchg
mov
add
je
or
push
ficomps
pop
je
push
cmp
adc
xorb
test
and
mov
pushf
nop
adc
jle
loop
aad
psubd
sub
bound
lods
mov
jno
pop
push
dec
je
push
xchg
mov
popa
jo
in
dec
or
pop
cmc
stos
or
and
bound
jns
data16
fldpi
in
cltd
aam
xor
xchg
fistpll
pop
ret
mov
sub
das
iret
cltd
rcr
pop
sbb
rorb
sbb
dec
mov
cmc
cltd
jbe
mov
outsb
icebp
mov
mov
cli
jle
andb
jl
sbb
xchg
mov
out
adc
outsb
cltd
sbb
je
cmpsb
fcomps
push
call
pusha
adc
int3
pop
popa
jmp
xor
rol
inc
cmc
xchg
pop
enter
xchg
xchg
sbb
sti
out
push
cmp
inc
loope
test
push
push
flds
mov
push
mov
jbe
lret
setb
adc
es
hlt
leave
cmp
xchg
enter
or
ljmp
sbb
xchg
lods
fidivs
test
lods
or
arpl
inc
mov
icebp
pop
add
popf
mov
add
or
dec
in
fidivrl
insb
and
cwtl
cmp
cmp
outsb
add
arpl
mov
dec
mov
add
iret
shll
cwtl
popa
outsb
outsb
mov
lods
in
lock
decb
lret
loope
push
sbb
hlt
lret
xchg
or
xchg
mov
jge
pop
stos
sbb
ret
mov
mov
jo
pop
pop
cmp
shlb
nop
test
es
jae
shrb
cmp
popa
xor
nop
mov
fs
mov
lods
sub
outsb
inc
fldcw
int3
dec
add
mov
sbb
push
pushf
clc
call
mov
flds
test
daa
shrb
sub
push
dec
std
movsb
lds
scas
lea
ja
push
fdivrl
cmpsl
dec
loop
loopne
pop
and
inc
out
dec
fs
mov
pop
movb
fdivrl
fcmovnbe
shrl
insb
xor
test
cmp
adcb
aas
hlt
xor
cmpsb
outsb
cmp
cltd
aam
cmp
add
add
xchg
imul
mov
cmp
repnz
xchg
jl
mov
mov
pop
adc
dec
mov
push
bound
sub
fisttps
push
jo
fadds
jne
hlt
xor
cmc
jbe
xchg
das
cmp
in
mov
add
cmp
arpl
clc
mov
lea
jno
add
push
push
xchg
add
inc
mov
sub
gs
mov
insl
imul
iret
and
xor
test
sub
cmpsl
push
jb
repz
dec
bound
jge
push
daa
jp
xor
iret
les
pop
stos
push
cwtl
call
add
test
fcoms
xchg
push
adc
mov
loopne
repnz
imul
idivb
mov
in
mov
in
mov
xchg
and
lea
xchg
aaa
cmpsl
push
stos
and
push
daa
sub
stc
in
push
sbb
jmp
aas
dec
ret
xor
dec
in
push
into
enter
sbb
and
call
pop
stc
jns
cmpl
jo
adc
inc
repz
jl
jg
jle
popf
cmp
mov
daa
add
add
rclb
ds
sub
xlat
mov
mov
aaa
mov
mov
rcll
stos
ret
mov
cmp
pop
mov
mov
les
push
insb
lret
add
pop
mov
sbb
sbb
fsts
or
mov
cmpsl
mov
adc
fs
scas
scas
imul
mov
cmpsl
fs
inc
mov
es
push
fisttpll
jnp
mov
mov
jcxz
push
adc
sbb
jmp
mov
out
call
sbb
repz
xor
movsb
pop
sub
pop
cld
jne
or
jb
call
fnstenv
and
xchg
xor
das
or
and
mov
or
xor
sbb
inc
mov
push
xor
sbb
cmc
lods
mov
pop
push
jne
mov
jecxz
aaa
pusha
add
mov
sub
jecxz
movsb
dec
adc
jmp
daa
iret
jge
jb
mov
faddp
jle
loope
cli
or
sub
sbb
pop
lods
lret
stos
movsl
arpl
scas
cmp
ss
cmp
out
in
or
and
jecxz
sbb
insl
pop
jo
fiaddl
lret
pop
je
mov
loopne
lea
je
mov
fs
dec
subb
ljmp
pop
out
cld
dec
clc
and
pop
scas
in
divl
inc
and
adc
call
movsl
mov
and
outsb
or
mov
and
jge
js
mov
das
out
cmp
aaa
leave
sub
push
sbb
xlat
mov
clc
sub
xor
xchg
out
inc
add
xchg
inc
mov
orb
repz
mov
in
into
pop
sbb
int
xchg
sbb
aam
dec
icebp
pop
xor
outsb
cmp
ljmp
pop
add
cmpl
insl
test
push
push
or
push
hlt
dec
test
sbb
sbb
adc
jle
cmp
mov
lods
fldl
jecxz
sarb
fcompl
dec
pop
mov
jg
and
out
jecxz
loopne
jnp
in
sarl
jecxz
movsb
push
inc
xchg
push
les
stos
out
stc
subb
dec
frstor
lret
push
iret
mov
ret
aam
push
add
cmp
adc
stos
inc
movsl
ret
and
shll
movl
push
insl
xor
fisubrs
xor
adc
pop
jge
mov
pushf
es
push
sbb
and
push
adc
lods
mov
repnz
lahf
and
loope
ljmp
test
jg
sarb
push
fistpll
gs
push
add
adc
pop
js
add
mov
xchg
pop
jns
xlat
inc
cmc
test
movsl
and
test
mov
sti
and
push
lahf
xor
icebp
xchg
xor
and
out
dec
xlat
adc
aam
pop
add
xor
movsl
mov
sbb
push
adc
and
out
cmpsl
out
adc
test
fimuls
pop
fisubrs
mov
int3
into
clc
sub
add
leave
xchg
hlt
lret
jns
jns
hlt
xor
cli
cld
cmpb
aad
xor
lahf
inc
in
test
push
cld
or
cld
sbb
jg
push
clc
xchg
pop
aam
movsl
shrl
mov
fiadds
sub
sbb
adc
xor
pop
add
push
ss
lea
dec
inc
dec
pop
and
push
popf
inc
sub
enter
inc
daa
cmp
dec
or
sub
mov
int3
scas
lcall
rcl
pop
out
adc
and
jo
mov
cmp
sbb
addr16
cmp
add
mov
or
cmpsb
mov
mov
sbb
aam
xchg
cmp
mov
lock
push
add
ficoms
mov
ret
cld
sub
or
cs
out
iret
push
aaa
adc
xor
xchg
sbb
mov
add
loop
mov
xor
jne
insl
lock
mov
push
xor
mov
in
mov
and
cmpl
les
pop
dec
ret
fimull
cli
push
cmp
ljmp
dec
fadds
cwtl
fwait
and
adc
mov
jnp
add
add
imul
aas
mov
outsb
push
cs
push
and
mov
loop
jp
mov
js
push
cmp
mov
mov
jnp
mov
das
mov
int3
or
fs
daa
test
xchg
insb
cmp
fwait
push
or
and
mov
cwtl
or
sub
sub
cmp
mov
mov
add
loope
mulb
dec
stos
push
xchg
pop
push
sbb
add
cmc
or
mov
mov
or
or
scas
cmp
clc
mov
movsl
movsb
lret
xor
inc
loope
xchg
lock
push
push
scas
xor
adcb
fisttps
fcomps
cwtl
and
ret
mov
jecxz
sub
lods
jle
push
adc
in
pop
outsb
mov
incl
adc
or
lahf
les
inc
pop
xchg
dec
and
sbb
add
out
pusha
mov
subl
mov
aad
push
daa
dec
dec
test
sbb
xchg
icebp
pop
adc
sbb
cli
mov
movsl
cwtl
outsb
push
stc
dec
dec
fbld
push
popf
lods
or
mov
xchg
ds
mov
jo
and
lds
push
nop
sbb
add
cmp
jns
jb
scas
fnstenv
lock
pusha
pop
xor
je
xchg
inc
ret
cld
imul
fsub
arpl
les
add
dec
insb
dec
in
mov
aam
sarb
mov
sbb
mov
mov
lods
cmp
sbb
adc
and
cmp
jmp
daa
sbb
test
add
popa
adc
xchg
test
lock
pop
testl
xchg
loop
mov
sbb
test
jns
cmpsl
out
popf
sbb
dec
sahf
fidivrs
rcrl
cld
or
mov
imul
mov
pop
push
add
std
daa
mov
cmp
and
jns
cmpsl
push
pushf
xor
add
popf
mov
call
shl
jmp
stos
popf
cmp
rorl
jns
cmp
shlb
stos
in
pop
push
pop
aaa
dec
decb
jb
jge
cmpsl
add
stos
nop
lret
xchg
push
xor
pop
inc
lds
out
cs
inc
add
xchg
mov
xchg
fstps
enter
pushaw
push
push
mov
adc
and
fstpt
leave
mov
out
iret
xor
gs
fdivs
or
mov
pushf
out
sub
push
sbbl
cld
jl
inc
jae
push
and
mov
test
push
repz
sub
inc
inc
outsl
mov
mov
imul
inc
cltd
cwtl
inc
arpl
cltd
add
data16
push
and
sbb
test
daa
xor
jno
mul
add
dec
nop
int3
adc
jmp
setle
pop
adc
addr16
stc
xchg
push
xchg
lods
push
sub
sbb
mov
sub
cmpsb
loopne
jl
int
in
push
sub
in
mov
pop
or
add
shll
xchg
sub
pop
jne
jno
imull
jnp
movsl
sahf
pop
mov
mov
dec
add
iret
ficompl
loopne
mov
repz
add
out
rcr
js
out
in
xor
inc
ret
into
leave
sub
int3
and
int
mov
jecxz
fstpt
xor
aad
mov
jns
jno
xchg
inc
addl
mov
fisubrs
pusha
aam
rcrb
mov
xchg
mov
lea
out
incb
faddl
ljmp
lahf
mov
pusha
xor
es
aas
das
cld
movsb
std
or
and
pop
jne
rclb
cs
pop
adc
out
jb
mov
pop
inc
xchg
mov
lods
mov
cltd
je
adc
push
dec
rolb
mov
push
scas
mull
into
in
lock
sub
loop
fs
std
fsubrs
jb
lock
push
pop
and
in
fucomp
or
into
cmp
fs
jnp
and
sti
dec
call
jnp
adc
sub
dec
mov
ja
push
arpl
push
int
pop
fcomi
push
xchg
out
and
pop
lock
or
mov
dec
mov
stc
pop
lock
lock
imul
nop
mov
xor
pusha
in
arpl
cmp
insb
cmc
aad
inc
lret
mov
inc
mov
xchg
sub
call
xchg
jl
push
xchg
and
scas
mov
sub
lods
lcall
push
adc
jnp
pop
into
mov
adc
pop
repz
nop
jge
xchg
cmp
cwtl
mov
inc
mov
cmp
mov
pusha
cs
outsl
and
mov
dec
loopne
cltd
sbb
pushf
mov
lret
jbe
lock
fcomip
push
ret
xor
sub
jle
and
pop
pop
adc
dec
fxch
add
inc
ds
inc
mov
in
or
inc
clc
fdivrs
sub
bound
sbb
dec
dec
int
iret
jmp
mov
je
gs
mov
push
jae
std
std
nop
add
cmp
mov
and
push
nop
cmp
into
rorl
inc
test
les
mov
or
mov
loope
xchg
inc
mov
sbb
xor
mov
sbb
daa
fldt
mov
in
xchg
and
lret
mov
in
mov
addl
lds
cmp
xchg
int
lret
mov
js
outsl
jnp
repnz
inc
sbb
int3
and
sub
xor
mov
add
push
and
sarl
mov
scas
jno
mov
push
sub
mov
out
pop
ds
test
sub
cltd
pop
xor
sub
fildll
inc
add
mov
or
adc
mov
push
pop
das
lds
cmpsb
stos
mov
scas
xchg
xchg
xor
lods
in
cwtl
pop
shrl
push
jb
imull
mov
push
fcomps
mov
jne
fs
ret
pop
stc
test
dec
cmc
das
invd
cmpsb
ja
pop
icebp
subb
aad
push
fdivs
cmc
movsl
and
out
sbb
repnz
cmp
fisttpl
push
mov
stos
out
fistpl
add
mull
dec
xchg
testl
gs
sub
push
xlat
gs
sub
add
movsl
ja
scas
mov
lret
mov
mov
jae
pop
clc
lahf
xchg
xlat
xchg
int3
and
loopne
pushf
decl
fiaddl
shr
out
mov
jecxz
mov
iret
into
aad
fsubrl
and
pushf
jge
or
pusha
test
frstor
jecxz
xlat
out
xlat
mov
stos
add
xor
movsl
and
pop
pop
std
mov
push
pusha
mov
xchg
inc
mov
add
push
insb
daa
stc
shr
adc
pop
fidivrs
fstl
test
imull
mov
adc
insb
sti
stos
shll
pop
xchg
cs
out
test
int3
aam
push
cld
cmc
mov
rclb
dec
add
cs
xor
leave
loop
push
sbb
imulb
bound
arpl
pop
push
dec
and
push
loop
arpl
lods
xchg
aas
dec
add
jg
sbb
pop
hlt
sbb
sub
test
repnz
jmp
cmp
insl
outsb
sub
fdivrs
add
dec
scas
ss
push
aaa
fdivs
inc
jne
nop
insb
and
push
cmp
cwtl
sub
jl
lods
sahf
ficomps
xchg
sahf
aaa
and
xor
fdivp
mov
inc
loop
dec
pop
lret
and
inc
jmp
clc
subb
mov
rep
call
mov
push
imul
popf
jge
or
mov
pop
push
pop
int
in
popa
lods
mov
rcll
sbb
cmp
cltd
fs
or
add
loope
imul
push
int
push
andl
xchg
mov
rcl
inc
sbb
mov
push
xor
ffreep
cli
ret
jmp
scas
daa
fwait
jb
out
mov
mov
inc
or
xor
push
idivb
pcmpgtb
mov
pop
out
mov
sub
pop
mov
rclb
pop
aaa
jbe
xlat
add
jle,pt
cld
mov
mov
aas
fildll
mov
mov
test
arpl
xchg
and
movsb
add
push
cmp
mov
cmp
sub
pop
mov
or
rorl
daa
movsb
div
notb
nop
sbb
pop
icebp
jecxz
and
jp
dec
iret
std
incl
push
pop
or
rolb
fisubrs
sbb
jp
push
sub
imul
sub
jge
jnp
popa
out
jo
mov
popf
xchg
shr
cld
mov
adc
sub
pop
lods
or
or
jl
aaa
xchg
bound
mov
out
jae
pop
insb
push
imul
xor
dec
mov
in
mov
aas
mov
leave
and
mov
shlb
dec
xchg
in
xchg
jno
jne
adc
loopne
fsub
push
cmp
in
or
fldlg2
or
adc
mov
xchg
dec
adc
push
push
push
dec
out
mov
div
adc
xor
pop
jbe
sub
movsb
std
imul
sbb
mov
jp
sbb
xchg
stc
inc
mov
mov
push
xchg
clc
mov
movsb
and
loopne
cld
dec
push
fisttpl
sub
mov
dec
mov
cmp
sbb
int3
ljmp
or
stos
or
and
push
mov
mov
lods
les
std
testl
push
lahf
movsb
icebp
ss
lcall
inc
fnstenv
cs
mov
xlat
pop
aad
inc
ret
cmp
addr16
and
mov
dec
add
lds
sti
pop
popf
jo
bound
es
stc
mov
imul
or
or
cmpsb
fsubrs
imul
pop
arpl
jns
xorb
mov
jne
mov
jp
in
int
and
jne
test
cltd
mov
jp
pop
jle
insl
icebp
jno
pop
pushf
mov
cs
cmp
push
mov
sbb
js
movsl
xchg
clc
fstpl
loop
ret
leave
dec
mov
loopne
xor
loop
push
imul
sub
mov
in
mov
push
xorl
pop
sbbl
jns
mov
adc
insb
pusha
addr16
inc
movsb
push
xchg
fstps
arpl
mov
or
lret
imul
int3
outsl
aam
jnp
xor
or
adc
test
xchg
sbb
add
mov
jle
cmp
add
mov
das
inc
xor
ret
dec
dec
xor
cld
lods
and
sbb
pop
fstps
jmp
bound
shlb
add
or
and
inc
cmp
pop
xchg
mov
push
cmpsb
in
sbb
inc
lret
dec
call
and
pop
outsb
or
lahf
enter
cmp
es
leave
dec
into
mov
arpl
inc
arpl
lahf
mov
mov
sti
sbb
and
cmpsl
ret
stos
dec
and
jmp
mov
xor
cld
js
js
add
pop
loop
cmpb
popl
pop
lods
and
sbb
rol
sub
cmp
jno
jno
mov
cli
imul
pop
leave
xlat
sbb
adc
clc
adc
or
hlt
jb
xchg
mov
add
inc
hlt
xor
push
mov
rcrl
ffree
jmp
push
loopne
ds
ljmp
adc
dec
cmc
ss
pop
xchg
sbb
mov
cmpsb
mov
mov
test
ror
sub
jae
stc
pop
jnp
popf
enter
in
fs
lods
stos
pop
push
loop
lret
and
xor
iret
inc
imul
jb
and
push
rcrb
adc
push
mulb
sub
and
out
out
inc
and
add
add
xchg
xor
lds
decb
rolb
cmp
mov
daa
pop
insl
add
or
inc
outsb
aaa
jmp
arpl
dec
xchg
mov
repz
mov
aas
stos
push
mov
pop
ja
lcall
stos
cltd
push
enter
out
and
test
pop
sbb
cli
xor
cmpsb
repnz
push
mov
sbb
rorb
xchg
inc
mov
rolb
cmp
sub
push
pop
mov
jle
add
data16
pop
pop
adc
ljmp
mov
jl
and
and
jns
mov
rorl
les
lds
lods
push
stc
xor
xor
cmpsb
xchg
es
dec
pop
sbb
xchg
cmpb
fs
ret
adc
js
mov
xor
cmp
or
inc
mov
pop
lods
inc
aas
push
cmp
mov
iret
pop
cmp
in
out
fidivs
imul
pop
push
pop
outsb
aas
push
nop
mov
add
or
and
jnp
push
push
shrb
xchg
in
int3
jp
not
sbb
arpl
inc
cmpl
mov
inc
jno
xor
les
adc
mov
dec
mov
xor
pop
cs
xchg
sbb
dec
adc
cmp
xor
sub
pop
lods
test
movsl
loop
test
fstp
mov
mov
lods
call
mov
mov
xchg
rclb
imul
dec
mov
movsb
hlt
add
fadds
push
push
jo
jae
cld
pop
pop
jbe
roll
sbb
cmp
mov
les
push
xchg
fisubl
mov
jl
sbb
add
sbb
lock
jne
push
jmp
cmp
inc
lahf
call
or
adc
sbb
pop
mov
aas
mov
mov
push
push
or
std
hlt
bnd
test
call
xor
testl
ret
or
xchg
jmp
pop
outsl
adc
out
in
dec
or
movsw
add
xor
or
loop
jecxz
pop
jb
sti
sub
mov
pop
sub
pop
out
js
xlat
subl
in
enter
mov
jne
xor
cmpsb
ds
xchg
ficomps
int3
mov
gs
emms
clc
jno
mov
cwtl
aam
add
rol
push
inc
clc
aas
hlt
aaa
push
ror
mov
add
adc
add
fidivrl
cwtl
inc
cmp
idivb
push
adc
mov
push
std
xlat
bound
cmp
pop
cmpsl
pop
mov
and
mov
add
mov
lods
cmpsb
jns
shrb
aaa
out
cmp
mov
xchg
pop
sarb
decb
outsb
shlb
jmp
xor
mov
cmpl
dec
cmp
or
hlt
out
pop
imul
jg
xor
aam
sbb
test
stc
roll
mov
aaa
jnp
jecxz
mov
pop
aam
mov
andl
add
out
push
or
rcr
mov
xchg
enter
inc
iret
fs
add
cmp
sbb
sub
jno
push
xor
dec
xor
push
movsb
call
add
aad
cmp
repz
lcall
popa
je
cmp
popf
icebp
xor
mov
loope
sbb
iret
lahf
into
rorl
cmp
mov
ja
test
mov
out
jmp
mov
mov
in
dec
mov
dec
out
or
xchg
in
or
push
test
faddl
dec
dec
xor
test
sbb
inc
mov
and
arpl
and
mov
mov
addr16
xchg
test
jmp
or
divl
cmpsb
lret
xor
fimull
dec
xchg
mov
xchg
xchg
add
insl
in
or
xchg
push
out
loop
push
out
sahf
dec
nop
push
pusha
mov
jl
lods
mov
push
mov
inc
lods
sbb
add
add
mov
aad
test
nop
adc
roll
sbb
mov
pop
or
out
pop
jp
sub
pmaddwd
fwait
mov
push
test
jne
lods
mov
or
cvtps2pi
out
out
xchg
sbb
rolb
push
mov
mov
jne
push
xchg
movsb
push
xor
pand
out
das
mov
and
sbb
out
movsl
cli
xlat
out
sbb
aas
subb
jmp
testb
xor
in
out
lods
add
adcb
mov
stos
aam
rcr
mov
cmp
adc
xchg
dec
mov
inc
adc
sti
sub
bound
nop
jle
movsb
out
lahf
xchg
shlb
sub
pusha
scas
into
add
es
push
fldlg2
mov
pop
push
mov
and
cmp
xchg
bound
mov
sahf
ss
xor
dec
jl
inc
xchg
xor
lret
cmpsb
push
jnp
das
pop
pop
js
mov
sti
push
sbb
dec
dec
iret
xchg
lods
inc
cli
ljmp
test
negl
push
push
adc
or
daa
or
lret
arpl
push
mov
mov
pop
loop
les
dec
adc
adc
shll
lods
pop
xorb
and
mov
addr16
jns
pop
push
jmp
lods
mov
cli
addb
leave
push
or
adc
inc
aas
xchg
and
jno
orl
push
shlb
rcrl
aas
clc
jecxz
jmp
xchg
sub
lret
imul
or
xor
xor
aad
cmp
fs
movsl
jle
fcomps
dec
mov
sarb
jg
vcvtdq2ps
xchg
dec
stos
mov
push
pushl
shll
inc
xchg
pop
inc
mov
pop
sub
sbb
pop
daa
sbb
arpl
jo
ret
mov
ljmp
sbb
aad
call
rclb
rclb
mov
pop
xchg
mov
pop
popf
lds
cmp
add
pop
ret
sbb
pusha
cmc
rcr
pop
movsl
mov
movsb
xor
mov
lret
adc
dec
mov
popa
mov
add
std
ja
push
xchg
mov
pop
out
pop
vphaddudq
mov
inc
or
jns
insl
jo
repz
mov
jnp
sbb
xchg
pop
iret
mov
and
inc
lods
pop
imul
dec
jl
jp
add
sbb
inc
stos
lret
popl
mov
stos
cli
xchg
xchg
icebp
js
cwtl
adc
cmc
xlat
dec
js
push
mov
fdivrl
sbb
lock
mov
and
push
pusha
or
lds
stos
call
push
imul
sarl
jp
cmc
std
push
aaa
xor
sub
xor
inc
sub
inc
cmpsl
leave
dec
push
sub
or
fisubl
leave
bnd
pop
cmp
cld
sahf
add
jns
aaa
push
push
mov
loopne
test
lret
imul
sbb
insl
fisttpll
mov
popa
dec
testl
addl
inc
sti
addl
mov
jg
mov
sub
icebp
mov
fcmovnbe
xor
mov
sub
ret
es
ja
popf
clc
or
cmpl
or
mov
scas
xchg
or
cli
jmp
mov
and
aas
movsl
ret
repnz
aas
sbbl
stos
clc
mov
and
xchg
pop
and
movsl
xor
test
jo
xchg
das
xchg
sahf
sub
lods
filds
fdiv
dec
stos
xchg
stos
inc
loopne
adc
fs
adc
cmp
or
push
div
stos
fistpl
aaa
adc
fstps
xchg
mov
jecxz
je
and
add
dec
jl
lods
lret
sbb
int3
inc
mov
loopne
or
ljmp
fimuls
ret
jb
add
lahf
fcmovb
pop
add
mov
cmp
cmp
pop
in
ret
mov
lret
add
outsl
sarl
lods
mov
xlat
addl
mov
mov
mov
push
cmp
jg
insb
dec
jno
sub
adc
or
psrlw
inc
idivb
and
stc
mov
mov
dec
addl
adc
or
push
cwtl
loop
lahf
imul
stc
mov
movsl
rolb
mov
jp
pop
lea
fidivl
ljmp
insb
xchg
push
mov
add
insb
das
mov
repnz
daa
mov
das
cmp
lods
jno
aas
jmp
pop
sub
mov
sub
mov
pop
into
push
jecxz
rcl
cmp
lret
je
stc
xor
adc
push
dec
add
mov
xchg
sarb
sbb
xorb
sub
inc
mov
cmc
dec
call
call
xchg
jl
jge
negb
and
adc
int
out
cmpsl
mov
push
mov
push
mov
adc
xchg
or
repnz
push
and
shlb
mov
leave
movsb
sub
jg
adc
insb
lret
or
mov
dec
ror
mov
sarl
into
in
sahf
nop
mov
xchg
pop
xchg
mov
or
cmp
scas
sub
rolb
lds
jbe
and
enter
and
std
cmp
jnp
icebp
sti
mov
pop
xor
dec
stc
leavew
addr16
aad
lret
pop
push
dec
and
pop
push
test
loope
pop
inc
push
mov
mov
hlt
and
sbb
pushf
ss
inc
or
mov
ret
inc
xlat
and
pmulhw
test
pop
mov
lods
rcrb
mov
cmp
jg
test
fisttpll
lret
out
pop
je
or
inc
rorb
aaa
mov
call
in
out
push
repnz
popa
frstor
pop
pusha
xor
cmp
sbb
outsl
fstl
inc
mov
scas
jge
out
lds
xchg
cld
push
mov
out
jnp
mov
cli
repnz
push
aas
cmpsb
dec
stos
cltd
mov
sub
xor
sub
cmp
scas
loope
xchg
cmp
jl
mov
shlw
jp
xchg
data16
out
ficompl
sub
test
nop
or
cmp
xor
leave
subb
sbb
imul
pop
es
push
nop
leave
pop
cmc
mov
cwtl
adc
repz
ja
dec
cmp
stos
lock
shll
pop
addr16
lcall
in
arpl
mov
jmp
inc
push
add
fnstcw
iret
imulb
mov
cmp
sbb
jno
cmp
pop
dec
rcrl
lods
dec
dec
icebp
inc
shr
lret
int
add
fdivrl
sub
jle
pop
aad
in
iret
xor
adc
xchg
out
scas
xor
test
push
push
fisubrs
in
adc
sarl
cmc
mov
cmpsb
sbb
inc
nop
cs
scas
sarb
jnp
mov
ss
and
aas
adc
shlb
mov
lds
je
xchg
jle
imul
pop
inc
xchg
mov
mov
adcl
fwait
negb
les
and
add
js
fs
jmp
push
inc
jo
out
xchg
mov
pop
pop
lcall
cld
in
fstpl
jae
addl
call
bound
mov
add
arpl
ret
pop
push
jae
push
jo
and
cmp
sub
xor
js
sbb
movsb
push
cmp
sahf
loop
mov
jbe
scas
daa
push
ret
dec
addr16
mov
cmp
incl
sbb
jae
std
shll
push
in
sub
lock
mov
adc
iret
push
jnp
inc
inc
iret
mov
out
aaa
arpl
shl
rorl
jle
push
mov
pop
int3
xor
loope,pn
movsl
mov
dec
sub
test
push
mov
jmp
orb
aad
lret
dec
callw
push
mov
pop
xchg
sbb
lea
mov
test
je
mov
xor
cwtl
push
jno
mov
test
jb
xchg
sub
pop
jo
int
lods
outsl
scas
gs
je
xor
pop
arpl
fdivp
lahf
sub
cmpsl
iret
jno
lods
adc
dec
in
mov
mov
lea
daa
cmc
push
and
push
mov
ss
adc
sub
out
cld
inc
loop
or
push
dec
int
aaa
mov
btr
test
mov
dec
sbb
push
or
sub
xchg
pop
push
push
mov
mov
pop
pop
cmp
stos
insl
sbb
addr16
js
sub
gs
inc
add
out
cmp
insl
xor
pop
xchg
cmp
fwait
icebp
xchg
sbb
add
mov
repnz
xchg
stos
adc
mov
jo
lods
out
mov
jle
jae
sub
mov
inc
mov
loopne
out
mov
or
lods
test
loop
cmp
pop
jl
inc
mov
mov
shrb
sub
les
add
mov
cmc
or
data16
in
xor
or
cmp
pop
inc
stos
rcrl
aaa
cmp
ljmp
pop
out
mov
fs
loopne
les
test
inc
std
std
je
loope
mov
das
sub
mov
mov
test
mov
xlat
ds
xchg
dec
lahf
mov
adc
stos
push
fisubl
add
daa
and
gs
mov
mov
leave
aaa
jae
dec
icebp
inc
mov
add
xchg
xlat
mov
xchg
xchg
sbb
mov
stc
into
mov
and
les
or
cmp
lcall
add
lods
add
or
add
inc
push
cltd
rcl
pop
mov
outsl
in
sbb
out
sbb
sub
loope
mov
jmp
or
mov
stc
ficompl
repnz
push
rclb
mov
out
adcl
ja
inc
or
pop
test
sub
fsubs
mov
movsb
push
lahf
push
or
jge
mov
addl
in
test
jno
mov
gs
daa
fistpll
xor
les
iret
adc
mov
outsb
pop
sub
xchg
xchg
adc
clc
fwait
mov
push
shl
xchg
jp
mov
leave
or
rcll
dec
ror
xchg
scas
fcompl
xchg
add
lcall
insl
xor
push
lods
and
mov
xchg
ficomps
out
jecxz
lret
xor
jns
cld
push
pop
leave
repz
ds
daa
adc
mov
test
and
jbe
incl
sqrtps
fwait
rclb
gs
and
pushf
mov
jg
jnp
fwait
push
enter
loop
lret
rclb
or
dec
in
gs
mov
xor
mov
aaa
jmp
xchg
jle
push
shl
adc
dec
outsb
into
and
mov
push
rolb
out
mov
dec
nop
pop
pop
cmpsb
jne
pop
icebp
rcrl
insl
and
sub
repz
imul
xlat
pusha
dec
cmp
ds
and
aas
xor
inc
and
lds
cmp
in
xor
jno
pop
inc
sub
into
and
leave
leave
cmpsb
dec
push
rol
stc
and
lea
push
sbb
sub
arpl
sahf
fwait
negb
add
movsb
bnd
xchg
popf
flds
dec
sbb
cmp
pop
inc
sub
mov
es
push
and
ljmp
pop
imul
xorb
movl
ret
mov
aad
or
pop
test
pop
lods
es
mov
mov
loopne
ljmp
xchg
push
into
dec
push
daa
xlat
imul
jno
dec
cmp
ret
mov
in
dec
push
sbb
xchg
fdivrp
adc
sbb
movsb
xor
mov
sbb
popf
movsb
jno
loop
inc
fldcw
adc
jae
jp
pop
and
scas
stc
lods
jge
sbb
movsl
dec
call
fnsave
test
into
stc
xor
dec
mov
test
pushf
aas
push
push
pop
mov
lods
in
outsb
push
lea
push
pop
xchg
xchg
fdivs
xchg
call
push
push
and
imul
aam
xor
push
pop
mov
into
and
mov
jge
stos
jae
jge
movsl
mov
sbb
movsb
cmp
and
push
in
cmp
pusha
add
jns
popf
mov
fnsave
pop
bound
pop
loope
adc
jo
and
outsb
outsl
or
add
cmpsb
dec
jbe
mov
mov
jns
push
sahf
mov
sbb
pop
inc
pop
lahf
dec
sarb
rolb
adc
div
dec
mov
divb
aam
addr16
cmp
faddl
out
insl
mov
add
jae
xor
mov
repz
cmpl
lods
gs
adc
les
adc
and
jae
sub
or
and
and
flds
dec
push
pop
xchg
mov
je
loope
or
xchg
adc
push
mov
jbe
cmp
jecxz
and
sbb
insl
insb
mov
xchg
data16
jnp
and
loopne
in
pop
mov
fsts
stos
aam
and
sub
dec
cmc
sbb
mov
shlb
imul
icebp
or
sbb
js
rolb
cmpsl
in
add
dec
pop
roll
dec
xor
pushf
jae
xlat
into
xchg
sub
sbb
shl
push
xchg
mov
mov
mov
ss
enter
jp
lock
jge
popf
bound
addr16
insl
js
cmp
insb
aaa
arpl
fcmovnbe
sbb
xchg
sbb
xchg
mov
mov
push
xor
or
adc
sub
dec
into
jecxz
ret
push
test
iret
imul
xor
jp
push
ja
mov
jnp
cmp
adc
js
cwtl
cmp
xor
sbb
sub
mov
inc
lock
sbb
mov
out
fldt
out
xor
inc
cld
push
ret
int3
cmpsl
ja
loop
out
test
or
jle
mov
push
sub
and
jmp
fcmove
cs
test
lcall
test
fstl
push
xchg
add
push
sbb
push
sbb
push
leave
xchg
dec
adc
das
js
icebp
adc
imulb
gs
jecxz
sbb
xchg
dec
mov
cltd
fiaddl
mov
repz
out
inc
popl
mov
lds
imul
popa
mov
test
inc
adc
xchg
push
mov
adc
icebp
pop
rcrb
cmp
xchg
mov
rcrl
clc
or
iret
jb
xchg
mov
pop
gs
sbb
imulb
mov
call
test
jns
cmp
inc
xlat
subl
into
sub
adc
outsb
pushf
jo
outsb
std
jle
je
mov
xchg
pushf
xchg
adcl
das
mov
mov
test
jmp
mov
pop
xor
rol
ret
imul
aas
dec
sbb
sti
inc
arpl
out
sbb
sbb
inc
int
mov
or
push
inc
mov
cmp
aad
testl
jl
fnstcw
cmp
xor
and
xchg
pop
or
jae
mov
fcmovb
es
popa
aam
sti
xchg
xor
jno
subl
insl
mov
xor
push
int3
lea
loopne
test
movsb
lret
push
push
repnz
mov
shll
imul
and
ljmp
pop
xor
clc
ficoms
enter
notl
fdivrl
mov
jg
pop
and
test
imul
xor
xlat
pop
push
mov
mov
xlat
not
push
and
test
xorb
mov
mov
cmp
adc
cmp
sti
aas
sub
xor
add
mov
daa
out
cmp
divb
jg
clc
sub
inc
xchg
into
mov
out
in
adc
push
iret
push
negb
sub
popa
jl
and
sub
mov
add
sbb
cmp
add
xor
xchg
pop
push
and
stc
sbb
cmp
scas
leave
or
repnz
dec
add
inc
pop
lock
rcl
adc
sbb
clc
aas
incl
and
pop
loope
or
ss
mov
sbb
and
or
in
test
loope
dec
xchg
dec
dec
or
xor
xchg
mov
dec
xlat
movsb
sub
popl
push
add
loopne
decb
ret
sbb
mov
ds
lods
aaa
add
and
insb
lods
push
iret
xchg
mov
insl
popa
dec
popa
outsl
lret
push
sub
jmp
jle
out
fistpll
sbb
mov
jo
pop
inc
test
aad
test
int
test
mov
dec
nop
fwait
inc
fs
push
cmc
mov
mov
cmp
mov
mov
call
dec
lods
mov
cmc
or
xchg
mov
push
test
es
insb
imul
inc
xchg
cvtps2pi
and
pop
outsb
inc
add
decl
mov
sub
out
cld
dec
cmp
xchg
popf
pop
icebp
xchg
jmp
ljmp
test
or
mov
ss
mov
push
jb
mov
rcrl
mov
in
es
in
sbb
xchg
cld
jns
incl
int3
mov
mov
inc
das
mov
dec
shl
dec
mov
dec
aam
inc
and
cmp
sbb
inc
add
test
xchg
or
clc
push
fisubs
cmp
xor
loop
xchg
jmp
push
loope
testl
and
neg
popf
jecxz
jns
orb
pop
mov
add
nop
insl
test
jmp
lods
dec
and
adc
not
aad
and
sbb
mov
inc
sahf
ret
mov
dec
test
cwtl
sub
cli
xlat
sub
andl
subb
out
xchg
jg
mov
add
adc
mov
sbb
mov
scas
lea
adc
xor
push
int3
outsb
fdivrs
jge
and
call
mov
lds
or
jge
mov
bound
jmp
xorb
je
pop
jp
ja
xchg
cmc
mov
dec
test
mov
xlat
jae
into
mov
fcompl
test
rcrb
das
bnd
sub
movsb
and
sahf
leave
xchg
add
jne
fdivrl
icebp
adcl
fnstcw
mov
xchg
test
adc
stos
mov
sbb
jp
jne
adc
shrl
pop
mov
xlat
test
out
inc
or
xor
cmp
push
cld
jmp
fsubs
mov
cwtl
pusha
jns
mov
cwtl
adc
sbb
pop
add
pusha
xchg
xchg
pop
mov
fcom
das
in
and
lds
inc
mov
icebp
gs
mov
sub
mov
outsb
stc
inc
pop
push
pop
mov
pusha
dec
and
jp
call
push
xchg
mov
std
adcl
fwait
rorb
mov
rcr
jo
mov
jl
lock
pop
in
push
jae
lods
fldl
dec
pushf
or
adc
leave
icebp
mov
dec
imulb
js
int
jge
outsl
aaa
int
cmpsb
sbb
pop
nop
stos
stos
push
pop
pop
and
pop
out
mov
inc
pop
es
imul
out
ja
clc
lret
outsb
add
mov
stc
test
mov
lock
hlt
fsubrs
lea
dec
int
pop
inc
push
xchg
sub
rolb
sub
cmpsb
cmpsb
adc
adc
test
lret
pop
or
test
mov
push
lods
not
or
shl
lcall
xchg
jb
mov
add
mov
adc
push
pop
mov
test
add
inc
jl
jp
enter
out
push
xchg
lea
jp,pn
loopne
xlat
ds
test
adc
dec
push
nop
inc
sub
in
mov
lods
adc
xor
xchg
cmpsl
pusha
push
jnp
jbe
cwtl
loopne
test
popf
subb
fucomip
icebp
xor
sbb
cmp
jb
fcoms
test
out
xchg
cmp
jbe
push
sub
lret
stc
push
das
jle
jle
or
mov
test
mov
cmp
cli
jge
pop
movsb
or
js
stos
and
movsl
fs
mov
mov
xchg
mov
fsubrp
fwait
lcall
xchg
js
sbb
mov
into
add
mov
sarl
aas
daa
sub
jmp
sbb
mov
jp
jbe
std
mov
lock
jge
cltd
sbb
xor
xchg
pop
sub
and
mul
popa
sbb
push
lods
arpl
mov
sbb
jle
in
sub
shrl
stos
push
nop
test
je
andl
loope
or
sub
mov
mov
clc
pop
jne
inc
movsb
data16
repz
or
sbb
push
or
mov
push
clc
out
cmc
dec
jb
aad
sub
loopne
jle
pop
repnz
push
xchg
pusha
sub
xchg
xor
jno
push
add
das
lcall
cmp
mov
cmpb
or
pop
rolb
push
mov
loop
xor
stos
mov
mov
jg
push
mov
jg
out
mov
popf
push
or
lods
test
stc
je
sbb
and
ret
lea
adc
inc
dec
lahf
jae
imul
and
mov
and
pop
clc
mov
add
ficompl
pop
or
stos
and
ja
mov
xor
push
aad
popf
lret
pop
sub
push
rcll
jno
aaa
outsb
xor
roll
out
cmp
or
subb
xchg
or
push
rcll
mov
mov
xchg
mov
sahf
ret
adc
gs
andl
aas
cs
or
jno
incl
popa
cmpsl
adc
pop
shll
neg
je
lock
popf
pushf
test
cmpsl
in
jl
sub
push
insl
test
mov
mov
mov
enter
int
in
mov
je
lret
imul
pop
inc
std
and
jle
lods
mov
xchg
psubq
or
cltd
adc
in
sbb
jmp
ljmp
popa
iret
stos
cmpb
xor
nop
enter
or
adc
pop
out
inc
shlb
jecxz
in
mov
fnstenv
cmp
adc
pop
gs
jecxz
insb
in
xchg
int3
cmpsb
push
mov
xchg
jns
xor
sub
xchg
dec
sbb
jp
dec
xor
sarl
imul
inc
js
fidivs
inc
dec
cmp
insl
movsl
mov
jo
push
add
bound
shll
adc
lods
cmp
mov
ja
jae
inc
pop
dec
mov
inc
lahf
jbe
repnz
jo
icebp
pop
std
out
out
jnp
xor
lcall
dec
dec
scas
gs
mov
sub
and
gs
cmpsl
inc
adc
rol
mov
out
and
push
jae
mov
loop
pop
mov
std
mov
fistps
inc
fstpl
scas
mov
lods
mov
arpl
inc
fidivrl
dec
test
and
popf
push
sbb
push
pop
push
lret
sbb
jae
aaa
inc
or
scas
sbb
cmp
or
int
lret
xor
add
push
jmp
cs
lahf
scas
mov
jecxz
aaa
xchg
mov
data16
mov
lcall
push
push
mov
scas
ret
push
jae
sahf
add
leave
dec
sarl
neg
fisubrs
xchg
in
xchg
loop
push
xlat
dec
cwtl
xchg
mov
mov
inc
xchg
mov
int3
pop
out
test
lret
and
je
xchg
mov
cmp
mov
push
inc
mov
out
repnz
repz
push
divb
cmp
mov
test
mov
sbb
scas
push
cli
rcrl
adc
call
cmpsb
xchg
das
adc
pushf
inc
lock
or
subb
mov
mov
add
icebp
add
es
or
pop
inc
fmuls
sbb
adcb
call
add
test
hlt
sub
jno
lds
mov
jnp
mov
lods
sbb
hlt
je
movsb
out
movsl
and
out
loopne
sbb
aad
jmp
lea
repz
popf
aas
test
js
jnp
mov
mov
xor
dec
sarb
or
add
bound
in
hlt
gs
pop
loope
inc
hlt
dec
jecxz
and
cmp
das
in
jge
and
dec
or
int3
pop
lcall
cwtl
xor
jne
out
popl
loop
mov
sbb
xor
in
mov
ror
loop
loop
gs
inc
sti
and
xchg
les
xchg
lret
mov
es
cmp
inc
xor
fbstp
mov
xlat
mov
or
pop
push
fstpt
pusha
pop
adc
push
insl
pop
das
adc
js
adcl
and
or
sub
shll
out
adc
and
inc
test
jbe
rclb
loope
movsl
xlat
adc
fimuls
mov
push
mov
lea
jl
daa
sbb
fcomps
cmc
inc
jnp
xor
fdivs
pushf
jne
add
cmc
mov
js
rorl
xchg
mov
jnp
mov
dec
scas
je
pop
lods
xor
or
dec
jnp
mov
cmpsl
sbb
mov
out
outsl
mov
mov
xchg
shll
push
mov
pushf
inc
adc
loopne
enter
sbb
movsl
enter
das
test
pushf
inc
repz
mov
imul
xchg
imul
cmpsb
mov
pop
in
cwtl
fisubs
test
shll
hlt
dec
mov
jge
xchg
jg
lods
mov
or
ror
adc
xchg
scas
push
inc
xchg
test
dec
cltd
outsl
mov
or
cs
mov
push
mov
dec
and
ror
jle
lret
neg
ljmp
add
mov
mov
push
add
jno
push
ja
xor
dec
fdivrl
aas
ljmp
loope
xchg
cmc
jg
icebp
fiaddl
mov
fldl
jns
addr16
dec
fisubl
adc
mov
dec
jb
add
repz
lcall
jmp
add
add
dec
into
mov
lock
mov
mov
out
imul
lea
sbb
loop
or
insl
dec
ljmp
and
inc
adc
pushf
xchg
stos
cmp
jp
enter
xchg
repz
mov
dec
jnp
lock
stc
pop
aaa
adc
cmpsl
arpl
jmp
xor
adc
test
adcb
shrl
jnp
dec
push
and
add
push
xor
pop
je
pop
mov
adc
push
shrl
or
add
pop
mov
sub
cmp
pop
inc
ja
push
and
sub
fdiv
mov
jecxz
hlt
gs
jg
dec
lret
mov
dec
pop
push
push
fadd
sub
pop
fisttpl
lea
daa
push
fiadds
jnp
mov
push
xchg
clc
hlt
mov
xor
jbe
into
pop
push
jno
icebp
cmc
cmpl
mov
lods
sbb
and
push
xor
add
push
mov
arpl
push
ljmp
and
out
outsb
cmp
dec
xor
xor
ss
test
add
cmp
and
push
jns
jo
and
mov
dec
test
sbb
mov
add
xchg
aam
inc
idiv
fldenv
ljmp
cmp
jecxz
ss
orl
or
mov
arpl
push
dec
adc
loop
mov
mov
bound
mov
outsl
dec
sub
inc
inc
cmpsl
lret
les
cmp
nop
ja
addr16
push
bound
arpl
xor
adc
mov
dec
rcrl
ret
arpl
inc
insl
lock
cmp
jecxz
and
pop
icebp
mov
call
cmc
mov
jns,pt
out
or
xchg
fildl
and
cs
int
popf
loop
call
push
hlt
out
adc
imul
xchg
push
add
sahf
mov
pop
mov
sub
pop
or
add
les
cmp
add
cmp
mov
add
add
movsl
mov
xchg
and
pop
jp
movb
out
jo
addr16
xchg
xchg
dec
jl
sbb
fsts
adcl
fidivrs
xchg
xchg
xchg
sahf
fs
mov
xchg
mov
daa
cmp
xor
dec
in
xchg
aam
pop
repz
iret
mov
stos
sbb
mov
jnp
add
pop
and
cltd
adc
rcl
repz
cmpsb
jne
clc
or
sbb
cmp
cltd
and
push
pop
lret
dec
dec
xchg
fxtract
or
jbe
inc
jno
scas
enter
mov
inc
out
rolb
sarl
notb
dec
jbe
xchg
mov
cwtl
mov
or
or
add
push
pop
push
jg
aad
mov
cmp
sbb
and
orl
mov
jge
sbb
push
xor
xchg
xor
jmp
in
add
popa
mov
sub
and
push
fnstcw
fisubl
repnz
and
lret
jns
inc
pop
or
sub
adc
ljmp
and
cmp
dec
jns
data16
subl
mov
jo
loop
push
leave
dec
lret
rorl
es
movsb
das
in
sbb
rcrb
mov
push
fwait
inc
jb
fistl
stos
out
mov
pop
mov
popa
sbb
push
jno
cltd
lahf
pop
and
int
xchg
or
fs
dec
xor
iret
mov
add
sub
pop
fcoms
sbb
lret
or
pop
cmp
and
aaa
jne
popa
popf
dec
adc
subb
mov
sbb
cmp
push
push
adc
and
rolb
push
test
push
push
das
mov
mov
jp
out
mov
pop
ja
shrb
ja
imul
mov
push
ljmp
sbb
adc
out
cs
insb
dec
or
in
out
ret
out
fbstp
adc
out
cs
mov
hlt
and
adc
movsb
push
mov
adc
addr16
xor
jg
mov
xchg
dec
mov
fwait
push
xorb
jne
jl
xor
adc
mov
gs
call
or
enter
or
outsl
jmp
icebp
mov
iret
incb
and
jmp
in
das
fxch
std
add
adc
ljmp
lret
adc
push
sub
xlat
test
inc
jbe
jl
push
test
mov
xchg
bound
bnd
mov
push
or
lods
xchg
outsl
rcll
xchg
mov
or
inc
mov
lcall
decl
pop
cmp
or
mov
xchg
dec
ja
sbb
jns
sahf
add
mov
mov
xlat
les
mov
sbb
imul
addr16
cli
mov
xchg
sar
push
or
dec
lret
xchg
lods
pop
xorl
mov
add
push
mov
add
xlat
repnz
out
imul
ljmp
mov
orl
or
test
xor
call
push
adc
test
and
and
repz
das
int3
push
xor
push
je
aad
mov
in
test
adc
mov
cli
imul
outsb
js
mov
sub
mov
and
cmpsb
in
insl
repnz
ljmp
or
inc
push
push
in
shl
scas
mov
fwait
ja
push
adc
in
cmpsl
sub
mov
imul
pop
clc
in
or
lds
cmpsl
cmp
mov
lods
xor
iret
imul
xchg
testl
imul
imul
pop
out
fcoml
loopne
fdivl
into
pop
test
lcall
xchg
testb
je
jmp
and
arpl
cli
outsl
sbb
sbb
mov
movsb
jae
js
push
push
inc
add
dec
and
mov
icebp
lcall
pop
icebp
push
into
lods
js
dec
int
inc
mov
insl
repz
lahf
inc
mov
cmp
push
mov
pop
jle
inc
pop
and
fstps
push
ret
pop
std
ja
and
adc
lcall
add
jmp
dec
add
into
mov
dec
jmp
mov
into
gs
adc
mov
mov
pop
dec
xchg
cmp
arpl
cli
adc
and
mov
xchg
stos
push
sub
xorl
vpsadbw
and
mov
insl
call
pop
jne
push
adc
pop
jns
mov
ljmp
and
push
pop
push
cmp
mov
inc
xchg
cli
int3
sub
sbb
xor
adc
add
and
push
xchg
pop
inc
imull
pop
xor
xchg
leave
inc
loopne
jge
ret
xchg
lret
push
xchg
out
pop
xor
sti
add
push
test
or
mov
movsl
dec
mov
scas
imul
shrl
xor
jle
jl
adc
ljmp
mov
sti
popl
fmull
sahf
test
fdivrs
hlt
shll
inc
push
ret
lods
xor
movsl
mov
test
jbe
mov
push
jnp
push
loopne
or
inc
imul
test
sub
ret
hlt
cmpsb
mov
int
inc
in
repnz
andb
into
xchg
fs
dec
push
mov
xorb
jl
mov
adc
cmp
insb
jmp
or
repz
out
cmp
xor
lods
sti
push
sub
sahf
pop
and
mov
jecxz
or
leave
scas
jae
ret
jle
jg
shlb
xchg
push
lods
outsl
and
repnz
jl
cmp
cld
repnz
int
mov
jo
or
pop
aad
lea
or
mov
int3
inc
mov
cld
mov
in
cmp
imul
sub
or
xor
mov
orb
mov
mov
pusha
mov
aad
push
push
jg
add
nop
fnstsw
sub
cmp
fldcw
fwait
push
movl
and
jbe
mov
dec
sbb
jbe
lea
rcrl
or
adc
and
gs
sub
jnp
fsubr
ljmp
popa
std
dec
fadds
dec
push
sub
jne
add
dec
in
outsb
add
and
sti
add
sahf
mov
cmp
dec
mov
xchg
jb
sti
insl
std
mov
jg
stos
sti
mov
loope
inc
xor
sub
mov
mov
or
adc
mov
pusha
ret
iret
mov
fnsave
mov
sub
adc
int
mov
lcall
xchg
and
fistpll
aaa
test
mov
and
data16
mov
iret
lods
in
mov
adc
jns
inc
les
sbb
incb
inc
ljmp
cwtl
loopne
xor
inc
xchg
push
xor
ret
inc
imul
mov
test
or
gs
lret
mov
bound
roll
enter
rclb
sbb
leave
sbb
and
pop
xchg
sti
mov
daa
pusha
popf
std
or
jmp
iret
les
inc
mov
stos
fildll
cmpb
mov
dec
and
divps
lahf
sub
pusha
jo
cltd
in
std
adc
test
sahf
dec
mov
push
int3
mov
or
push
xchg
cmp
inc
fldt
mov
shlb
pop
push
mov
imul
and
dec
shr
faddp
mov
enter
jecxz
call
push
xchg
push
mov
sbbb
xor
aas
push
in
scas
pop
lahf
fldcw
mov
jns
pop
sbb
cld
inc
shlb
adc
adc
imul
cmpsl
les
or
push
icebp
pop
iret
jg
push
ja
shl
mov
inc
std
pusha
sti
push
repz
mov
in
ja
push
int
mov
rolb
test
movsb
jecxz
add
sub
outsb
cmp
lcall
repz
das
adc
mov
adc
roll
pop
mulb
repnz
ja
mov
sub
or
mov
push
push
pushf
mov
jecxz
sub
movsl
inc
lea
aam
sbb
lahf
add
cmc
sbb
inc
mov
xchg
cmp
mov
dec
lcall
fwait
jo
add
mov
mov
fisttpll
dec
pop
and
pop
mov
iret
jecxz
lahf
or
add
xchg
push
jl
stos
adc
test
fcmovu
dec
sti
out
mov
sti
inc
xchg
mov
xchg
inc
pop
inc
pop
test
mov
cmp
mov
es
pop
pop
enter
xor
ds
pop
idiv
repz
push
imul
or
xchg
pop
cmpsb
push
aad
mov
dec
or
or
xchg
mov
roll
arpl
and
add
or
repz
les
mov
xchg
sbb
repnz
sub
lds
dec
je
cmp
xor
dec
bound
push
into
test
sahf
nop
push
xor
arpl
push
in
popa
sbb
fdivs
cmp
lock
mov
cmp
push
sbb
mov
push
daa
enter
mov
cmpsb
push
xchg
in
rorl
loopne
outsl
mov
int
mov
and
inc
jae
cmpsl
lea
mov
jl
jnp
mov
stc
push
lea
lds
jae
lea
fistl
les
xchg
lcall
xchg
mov
mov
mov
mov
cmp
ljmp
add
bnd
daa
data16
cltd
iret
dec
leave
or
iret
lock
aad
aam
pop
pop
push
adc
int
inc
test
adc
add
mov
in
into
xchg
leave
std
cmpsl
or
adc
dec
jae
mov
or
hlt
sbb
dec
imul
xchg
popl
or
and
inc
les
xchg
or
ja
aaa
mov
xor
idivb
in
repnz
inc
shll
lea
nop
and
fsubs
and
shll
xor
adc
mov
push
mov
or
cmp
jge
sub
pop
nop
mov
popf
mov
fs
xchg
scas
sbb
mov
adc
leave
shl
push
les
xchg
shll
dec
jne
cltd
mov
sub
mov
shlb
bound
and
xor
lds
jnp
outsb
scas
cmc
cmp
push
cmp
subl
add
mov
jecxz
inc
xchg
pushf
push
icebp
mov
mov
mov
outsb
cmpsl
jmp
ja
dec
mov
jno
and
test
aad
pop
inc
lods
push
cmp
lea
es
out
inc
daa
xchg
add
imul
mov
insl
ja
sub
shll
add
pmuludq
iret
jb
repz
fisubl
mov
popa
fdivl
nop
sbb
push
mov
out
stos
xor
inc
das
enter
insl
std
out
pop
mov
fcoms
jo
repz
or
and
fidivrl
iret
pop
dec
in
cmpsb
jo
out
jo
stos
rolb
push
cmpsl
rcrl
inc
movsb
shlb
test
and
mov
push
call
xchg
xor
test
mov
cmp
fstpt
movsbl
pop
pop
push
inc
test
pop
and
aas
pop
arpl
ret
push
sbb
aad
rcll
in
push
fcoms
insb
mov
add
stos
sbb
out
fistps
inc
sbbl
in
and
outsb
xor
jl
or
sahf
scas
aam
fwait
dec
mov
jns
mov
test
jb
push
int3
xchg
dec
dec
insb
jae
pop
fisubs
out
adc
jns
xor
jge
aam
mov
sarb
mov
jb
addr16
in
frstor
push
aaa
or
ja
dec
lret
cmpsb
sahf
addb
dec
sti
xchg
sar
roll
shl
arpl
fwait
cli
mov
cltd
stc
xor
push
repnz
mov
lock
inc
pop
mov
test
shlb
inc
cmp
bound
scas
pusha
cmp
and
ret
pop
cmp
sbbl
sqrtps
xchg
pop
xorb
dec
lea
push
sbb
or
outsl
dec
xchg
aaa
add
test
and
sbb
sbb
sbb
scas
mov
and
movsb
xchg
push
lcall
clc
cmp
mov
xor
aas
xchg
xchg
adc
mov
inc
and
mov
ss
loop
loopne
fisubrs
pusha
push
inc
mov
dec
js
cs
xchg
pop
std
repnz
roll
aam
xchg
adc
out
sub
inc
in
arpl
sbb
rclb
adc
cmp
cmp
movsb
lea
push
xorl
sahf
in
into
lahf
negl
stos
fcomps
repz
adc
movsl
cwtl
negl
das
out
inc
mov
inc
or
mov
pushf
add
mov
cs
stos
dec
adc
jae
scas
xor
loopne
test
pop
cmp
adcl
adc
push
xchg
or
adcl
add
daa
sub
mov
pop
jge
enter
sti
mov
jle
push
xchg
in
imul
insl
cmp
ret
pop
repz
sbb
xor
invd
sti
jbe
push
fwait
imul
insl
nop
dec
pop
mov
push
roll
mov
pop
in
mov
pop
test
je
add
jo
cmp
lods
push
out
imul
shrb
loope
cmp
ljmp
jb
push
fstpt
mov
negb
loope
imul
dec
dec
pop
add
ja
adc
popa
cmp
jae
add
cmp
aas
sbb
inc
push
sub
jg
hlt
xor
adc
das
push
sbb
jecxz
out
xchg
cmpsb
pop
lret
cltd
insl
mov
xorl
dec
sahf
jge
call
xchg
out
and
cmpsb
faddl
test
inc
pop
rcrb
xchg
inc
cmpsb
movsb
mov
cmpsb
adc
xchg
jmp
pusha
neg
ficoms
mov
mov
leave
pop
insl
push
jge
repnz
fsubr
lea
or
add
or
sahf
cld
repnz
mov
push
and
loopne
add
loop
push
cmp
in
mov
jb
ja
mov
mov
and
xchg
cmp
stos
out
lret
mov
int
xlat
push
fistpll
hlt
imul
mov
enter
lock
gs
push
aaa
mov
add
xchg
out
cld
push
scas
mov
add
aas
fbld
xchg
jge
std
popa
and
iret
or
arpl
push
or
jmp
fwait
adc
xchg
mov
out
mov
frstor
js
into
pop
mov
mov
or
test
scas
xor
push
cmp
sub
orl
and
jae
lret
and
std
xchg
sbb
clc
dec
mov
les
insl
test
mov
in
insl
dec
int
push
adc
mov
push
and
dec
sbb
sbb
stos
out
xchg
push
jnp
mov
mov
ds
and
inc
push
mov
gs
cmpb
xchg
test
ljmp
xchg
adc
fldt
sub
test
fwait
xor
cs
cld
fidivrs
jno
sbb
sbb
adc
pop
fstl
or
mov
adc
jmp
mov
jp
push
call
xchg
mov
into
shr
jo
cs
lret
sbb
mov
das
cmpsl
xchg
mov
jle
fs
scas
testb
push
dec
and
cwtl
ds
test
mov
stos
movsb
in
fimuls
mov
test
mov
cs
push
mov
cmp
inc
inc
push
in
adc
inc
jbe
xor
iret
cld
call
add
ljmp
stc
xchg
movsl
add
push
mov
ds
pop
imul
aam
ficomps
out
incb
and
and
enter
xchg
iret
test
jne
pop
or
pop
push
xchg
inc
in
mov
mov
or
lret
pop
les
repz
mov
in
aaa
pop
sbb
rcrl
in
outsl
jb
sub
mov
nop
sahf
sub
cmp
or
movsb
popa
jo
pushf
lods
and
lret
mov
add
fwait
sti
loop
divl
arpl
and
jmp
add
gs
lea
js
mov
ret
push
je
sub
sbb
loopne
inc
add
sub
dec
add
cmp
xor
nop
push
flds
fldl
icebp
enter
jno
inc
jl
mov
mov
loope
jge
xchg
dec
test
pop
inc
in
leave
add
inc
jbe
pusha
mov
mov
ret
rcrl
clc
loopne
dec
js
lods
sub
aad
clc
insb
dec
ret
std
stos
adc
in
aad
fiaddl
push
mov
jmp
inc
inc
stc
sub
lcall
les
jmp
fdivrl
pop
andl
jg
out
mov
cmpsl
lahf
mov
js
inc
data16
mov
jae
add
repz
xchg
xchg
mov
ret
pop
lahf
lock
adc
shll
mov
cld
push
xchg
aas
mov
lahf
movsl
mov
push
mov
pop
add
rol
ret
push
stos
xor
cmp
lcall
or
mov
or
repnz
or
add
mov
xor
popf
adc
push
mov
and
inc
cmp
rcr
insb
mov
ret
aas
pop
in
nop
push
subb
cwtl
mov
std
or
imul
pushf
xchg
pop
mov
imul
mov
xor
cmpb
fsubs
leave
xor
inc
or
and
inc
xor
xchg
daa
sar
jg
cmp
and
xor
cmp
push
pop
pop
sub
sub
dec
pop
and
mov
dec
imul
lahf
sti
xchg
test
mov
les
xchg
bound
jle
popa
xchg
xchg
mov
mov
xor
sbb
fsub
int
call
ret
outsb
adc
and
subb
cmp
jbe
cmp
jg
loope
loopne
shlb
dec
pusha
jbe
hlt
or
sti
adc
xor
jb
iret
int
jne
mov
mov
adcb
and
mov
mov
inc
xor
mov
xor
pop
outsb
xchg
and
jg
sub
cld
push
and
mov
jns
and
testl
hlt
sub
mov
pop
and
adc
shl
add
test
int
adc
or
int
cmpb
ret
adc
inc
sbb
pop
jmp
mov
cmp
fbld
lods
sbb
out
jb
mov
jns
push
dec
add
aaa
lock
ja
dec
das
mov
shlb
push
fstl
in
push
movsb
aaa
flds
inc
les
or
cmpsl
out
fbstp
roll
or
adc
jl
cmp
mov
insb
sbb
std
mov
test
pushf
cmp
sbb
les
xor
pop
fnstcw
ret
add
mov
es
std
hlt
cmpsb
out
mov
mov
or
je
mov
pop
ja
dec
ret
test
xchg
inc
stc
xchg
outsl
mov
repnz
hlt
jae
out
pop
imul
add
stos
pushf
les
jp
imul
adc
fwait
shlb
bound
adcb
loop
and
repnz
mov
push
mov
sbb
xor
pop
mov
push
ljmp
shrb
imul
test
mov
in
push
or
sbb
js
cmp
inc
jmp
hlt
sbb
add
test
insl
and
js
mov
cmp
movsb
outsb
cwtl
insb
pop
cltd
cs
lods
lcall
dec
xchg
scas
cmpsb
jle
cs
js
xor
adc
mov
gs
jno
xor
and
cltd
push
add
clc
inc
push
dec
mov
in
scas
mov
cmp
mov
jp
je
mov
push
push
mov
mov
push
xchg
and
xor
pushf
jb
or
and
mov
sbb
call
mov
lret
inc
repnz
mov
mov
fistpll
jp
clc
repnz
das
mov
loop
jmp
hlt
and
mov
cwtl
out
cmpsb
sbb
ficomps
xor
hlt
lds
jge
imul
xchg
jno
and
in
jmp
call
xchg
pop
lods
lds
xchg
data16
lret
aas
iret
out
mov
mov
xor
sbb
add
add
mov
lods
xchg
jb
lret
cli
adc
and
test
xchg
cltd
js
stc
mov
outsb
les
xor
iret
push
mov
aaa
mov
lds
xchg
jl
repz
xor
loop
mov
fwait
push
jno
jge
mov
sbbl
sti
xor
xor
stos
mov
test
pop
pop
pop
pop
sti
inc
xchg
adc
add
or
or
cmp
ja
arpl
insl
rcl
dec
mov
pop
loope
add
fisubs
and
aam
push
orb
test
nop
lahf
stos
lea
mov
pop
ret
xchg
inc
in
pop
mov
push
aaa
sbb
mov
adc
and
stc
pop
add
aas
jecxz
or
test
sub
sti
dec
dec
or
outsl
js,pn
nop
adc
xchg
sbb
bound
movsb
jno
das
jmp
xor
and
xchg
stc
idiv
adc
fists
sbb
dec
popa
pop
mov
pop
adc
cmpb
je
repz
pop
imul
sub
xorl
cmp
jmp
and
cwtl
adc
adc
xchg
jle
mov
mov
das
cmpb
aas
dec
scas
jo
testb
pop
enter
push
cmp
cmp
and
in
roll
sub
sbb
sub
push
dec
jecxz
sub
mov
jnp
cwtl
cmpsl
xor
pop
adc
mov
aaa
into
int
jl
test
jge
cmc
out
pop
dec
and
sbb
xchg
lods
xchg
movsb
mov
pop
sbb
pop
inc
cs
sbb
loope
gs
loopne
jnp
aaa
xor
int3
push
cmpsl
fs
fimull
push
out
imul
adc
inc
bnd
gs
adcl
dec
dec
add
sub
sbb
stc
add
insb
cmpsl
mov
stos
inc
out
inc
fcomip
pop
test
or
mov
inc
mov
and
nop
push
mov
and
icebp
lock
mov
cmp
fwait
xchg
jp
dec
out
mov
push
stos
inc
push
push
outsl
mov
rclb
neg
sti
xchg
lock
femms
outsb
and
in
lods
xchg
imul
jmp
out
sbb
mov
lods
xchg
les
push
push
sbbb
out
repz
gs
mov
or
sub
lahf
add
push
pop
sub
mov
adc
push
and
mov
sub
and
or
fdivs
xchg
jge
rcr
add
je
and
xchg
mov
mov
int3
add
xor
inc
imul
cwtl
mov
in
frndint
movsl
or
push
mov
lods
xor
imul
imul
out
xor
or
icebp
aam
insb
out
adc
cmp
fists
xor
jb
dec
loopne
add
scas
mov
mov
xor
pop
dec
sbb
ljmp
mov
push
das
add
int
adc
add
cmc
xchg
inc
adc
das
js
xlat
out
fsubrl
lock
push
bound
pop
sbb
loop
cmpb
inc
int
test
push
sbb
fidivrs
daa
jl
add
dec
in
cmp
movsb
das
jae
push
pop
in
push
sahf
xchg
and
jno
inc
push
cmc
bound
cmp
popa
loope
idivb
fbstp
icebp
popa
int3
jno
push
aad
aad
inc
jmp
mov
mov
aas
inc
cmp
nop
dec
jle
imulb
test
and
push
fisttpll
cmp
push
mov
insl
lahf
mov
cmp
fdivs
stos
pop
xchg
push
imul
arpl
jbe
adc
sub
gs
or
fsubl
xchg
outsb
in
rcrl
and
inc
push
test
arpl
cmpl
jge
cmp
fdivs
int3
fiadds
inc
xor
mov
mov
int3
adc
push
pop
aas
mov
arpl
push
pushf
icebp
and
cmpsb
inc
sarb
in
out
test
inc
dec
xchg
mov
sbb
shlb
cmpsl
test
lcall
lds
scas
scas
in
hlt
dec
sub
dec
out
or
dec
fcom
adc
je
mov
dec
out
arpl
cmp
je
cmp
sbb
pop
xor
mov
sub
sarb
aad
movsl
shll
sti
mov
push
jl
and
ljmp
jns
push
cs
imul
rorl
adc
js
add
popf
cmc
xor
hlt
stos
movsb
xlat
push
sub
jae
jo
mov
test
jnp
sbb
cmp
out
shrl
fdivr
mov
jo
inc
mov
jae
mov
push
cltd
stos
xchg
or
das
add
dec
or
xor
je
popf
jge
ret
scas
jb
and
mov
inc
lcall
xlat
push
das
push
pop
pop
out
scas
pop
mov
hlt
push
fwait
add
fidivrs
cmpsb
icebp
std
cmp
push
push
add
lret
in
mov
xchg
mov
aam
xor
mov
out
cmpsl
sub
js
xchg
xor
jno
dec
fbld
push
adcb
mov
mov
push
fucomp
aaa
cmpsb
ret
pop
lahf
push
dec
or
xor
lods
rcl
or
jp
inc
add
mov
pusha
push
dec
cmp
shlb
repnz
add
sbb
popa
mov
addr16
ja
js
movsb
sahf
lods
aas
push
dec
fsts
jle
pop
add
add
hlt
mov
mov
insl
daa
and
xchg
stos
fwait
adc
cmp
ss
sbb
stos
out
jns
mov
xchg
or
and
out
mov
dec
xor
lret
pusha
mov
loopne
popf
cmp
repnz
mov
je
cmpsl
inc
test
cmp
or
mov
aas
sub
mov
ljmp
inc
fdivrs
inc
xchg
ss
jnp
loop
xchg
imul
fistpl
push
aam
repz
jbe
gs
push
pusha
lods
shrb
fiadds
roll
jbe
and
push
cld
imul
aam
repnz
sub
mov
inc
stc
insl
xchg
mov
cli
xchg
sub
pop
jo
cmp
mov
je
ret
sub
repz
imul
icebp
lods
lods
loop
int
in
cli
dec
lcall
inc
aaa
pop
mov
dec
scas
mov
scas
xor
mov
jne
clc
loop
testl
movsl
xchg
mov
sbb
add
push
arpl
xchg
xlat
ds
out
xchg
mov
std
repnz
xor
cmp
inc
fiadds
scas
test
out
rcr
pushf
dec
push
cmp
mov
shrb
mov
xchg
xor
add
add
fld
dec
add
or
bound
out
xchg
add
cmpsl
mov
adc
cltd
fisubrs
jno
mov
xchg
jl
out
xor
push
mov
inc
aaa
push
sub
inc
mov
orb
xor
mov
rorb
dec
faddp
pextrw
xchg
out
fldt
ret
ror
sub
fistpl
sub
lods
in
loopnew
addr16
cmp
dec
test
les
push
enter
in
sbb
iret
xor
add
fs
sysret
movsl
cli
jg
sbb
out
mov
shrl
xlat
fdivrl
sahf
test
adc
and
pop
push
adc
enter
inc
mov
xlat
mov
xor
inc
sub
icebp
lahf
repnz
inc
loope
imul
inc
mov
into
in
xchg
out
mov
mov
dec
sbb
jmp
push
mov
and
xor
jno
cmp
xchg
cmpsb
sbb
inc
pushf
mov
adc
push
cmc
or
fisubrs
xor
pop
jne
add
mov
dec
cmp
jg
adc
mov
dec
ret
dec
daa
aad
in
mov
and
push
lret
mov
push
std
jno
jne
xchg
xchg
dec
adc
js
pop
pop
inc
inc
add
xor
std
or
lret
pop
mov
and
push
sub
adc
jne
or
jnp
add
daa
jae
jno
push
jnp
xor
push
cmpsb
cwtl
mov
or
orl
pop
sbb
add
jne
gs
les
adc
cmpsl
enter
sbb
fs
insl
ja
orl
sub
shl
dec
sub
adc
nop
or
fcomps
pusha
es
pop
jb
lock
sti
and
jb
or
negb
and
inc
mov
out
jmp
mov
addb
outsb
ds
jle
in
mov
push
mov
adc
cmp
je
aaa
adc
mov
add
pop
ljmp
xchg
pop
mov
jbe
xchg
shll
cld
imul
and
mov
fistl
add
pop
rcr
sahf
ljmp
sbb
ret
xor
xor
xchg
cmpsb
pop
lcall
rorl
outsb
mov
into
dec
mov
std
add
push
pop
or
or
faddl
fs
inc
fisubrs
xchg
and
data16
nop
mov
out
cmp
dec
mov
cwtl
stos
adc
or
lds
push
dec
dec
sbb
sbb
mov
jmp
sbb
popf
imul
les
scas
or
mov
xchg
ja
sub
ja
pop
jmp
xchg
jp
mov
out
sbb
fsubp
pop
fstpl
lods
sbb
adc
jae
cmc
dec
adcl
mov
jno
add
inc
ds
cltd
lds
ret
inc
stos
jne
test
imul
adc
cmp
fstp
fsubr
mov
adc
adc
add
idivb
lcall
pop
push
cwtl
cmp
bnd
cltd
mov
xchg
add
jmp
imul
icebp
test
enter
out
cltd
and
jmp
in
mov
pop
xchg
lret
sub
fldenv
aaa
dec
push
cmp
shlb
xchg
push
sub
ss
xchg
xchg
or
out
dec
es
mov
subl
lods
pop
lods
xchg
pop
loopne
sahf
mov
pusha
inc
jae
outsb
shl
push
mov
gs
aam
dec
cld
xor
adc
push
dec
repnz
pop
dec
jne
outsb
ret
mov
pop
inc
pop
test
push
dec
adc
dec
test
xchg
mov
mov
inc
add
sub
sub
mov
arpl
dec
stc
push
adc
dec
jp
mov
sbb
rcrb
fldt
lret
mov
sub
add
fwait
lods
shlb
push
adc
scas
pop
popf
mov
cmp
push
cwtl
sub
xor
adc
out
fidivs
lret
mov
cmpsl
sbb
in
fwait
or
into
jno
lcall
and
int
inc
mov
bound
into
add
loope
outsb
push
mov
in
in
sub
fdivl
repnz
jo
jbe
sub
scas
imul
adc
mov
movsl
out
fwait
push
adc
addr16
jl
lock
sbb
inc
loope
xor
add
pop
dec
mov
cmp
or
inc
sub
push
lret
mov
mov
mov
ss
mov
cld
insb
mov
jno
movl
jne
loope
xchg
lods
push
push
aad
mov
pusha
mov
jbe
out
pop
dec
lock
inc
sbb
scas
aaa
mov
sub
pop
movsl
sbb
cmp
mov
sarb
lea
and
push
xor
shrb
fsts
in
insb
sbb
aad
mov
scas
insl
adc
adc
clc
mov
mov
mov
xchg
jmp
lret
mov
hlt
dec
ljmp
jb
xchg
jno
les
jmp
mov
leave
addr16
vbroadcastf32x8
inc
sbb
leave
xchg
jo
pop
xchg
mov
push
mov
jle
arpl
call
and
in
add
sbb
pusha
xchg
test
mov
jge
add
cmp
and
pop
mov
cltd
sbb
xor
add
add
lcall
mov
sbb
lods
pop
xor
fsubrl
push
call
or
fwait
sbb
adc
fmul
pushf
sbb
lcall
dec
xchg
xor
hlt
xchg
ret
adc
add
lret
movsl
pop
loope
xor
adc
ljmp
mov
arpl
jp
int
inc
inc
ret
or
inc
je
adc
or
mov
sbb
ret
aas
push
adc
ret
or
adc
xchg
jb
scas
aad
ja
ret
decl
adc
je
and
sbb
bt
mov
scas
pop
gs
push
popa
jge
jp
icebp
push
jae
push
mov
ret
int3
inc
cmp
loop
cmpsb
mov
lock
mov
sub
or
inc
sti
fidivl
cmp
sbb
gs
jno
mov
and
jle
xlat
in
dec
inc
dec
dec
movsb
jl
test
pushf
and
stos
and
shr
cwtl
mov
push
int
mov
outsb
cmp
fisubrl
and
popa
push
arpl
ss
scas
xchg
ja
push
aam
leave
inc
leave
mulb
lret
rol
mov
jle
sbb
icebp
loope
pop
stos
jecxz
push
rorl
fs
cmp
scas
xchg
mov
inc
loopne
addb
shll
dec
outsl
lods
sarl
dec
adc
cs
or
and
ror
lods
lret
xor
or
enter
mov
mov
xchg
push
and
and
push
pop
xchg
int3
sbb
iret
push
xchg
hlt
mov
adc
in
push
push
mov
outsl
sub
inc
jg
push
in
cmc
xlat
lea
xchg
xor
xchg
pop
sti
scas
push
cwtl
aas
pop
cld
int3
jbe
sarl
sub
sub
mov
sbb
cld
in
das
and
xlat
dec
insb
test
pop
ret
ret
inc
test
negb
addr16
testb
xchg
int
in
and
jns
sahf
cwtl
mov
push
xor
mov
jns
rcrl
out
dec
mov
sbb
and
mov
jg
dec
push
decb
ds
push
mov
les
mov
cli
popf
inc
mov
ret
mov
xor
or
imul
mov
sbb
pop
jmp
xor
arpl
movsb
out
pop
push
jecxz
push
pop
jnp
push
mov
cmp
mov
roll
in
popf
inc
repz
lret
test
inc
mov
fsts
adc
insb
int3
inc
sbb
jmp
push
add
add
mov
std
xchg
test
sub
addr16
adc
pop
add
scas
adc
push
mov
rcr
jae
mov
jne
push
mov
pop
lret
stos
fstl
fcomip
xor
push
pop
mov
push
jbe
sbb
cwtl
out
add
movb
sub
clc
pop
hlt
pop
dec
lds
cmc
mov
cmpb
adc
and
or
xor
adc
push
pop
aas
test
mov
lock
aam
jg
cltd
fistps
ds
rcrl
mov
fs
sub
push
push
mov
inc
pusha
mov
pop
pop
popa
orb
mov
jnp
repnz
add
addl
test
adc
insl
idivb
ds
jne
pop
out
sti
xchg
mov
ss
lods
pop
dec
sahf
mov
into
lahf
add
add
test
call
pop
xchg
mull
push
repnz
mov
add
scas
push
inc
dec
sub
je
or
mov
sbb
push
jge
sub
icebp
jbe
jns
testl
jge
int
femms
cmp
out
mov
fsubl
xchg
je
inc
pop
inc
adc
pop
aam
lcall
add
push
cld
sbb
loopne
add
xchg
outsl
add
pop
loopne
and
xchg
iret
and
add
ret
lret
cld
cmpsl
js
mov
aad
stos
and
pop
and
sub
xchg
fnstcw
jae
ret
sbb
jl
popa
xchg
popf
mov
in
or
scas
and
js
xor
dec
sbb
aam
fcmovnu
cmpsl
lcall
sti
xchg
jbe
je
xor
mov
movsb
and
push
cmp
jnp
pop
loope
fistl
mov
mov
test
mov
cmpsb
push
arpl
push
mov
scas
leave
jno
repz
mov
cmp
aam
gs
add
mov
fldl
push
in
enter
loop
in
shlb
jo
xor
or
aad
jmp
vcomiss
inc
jae
lock
fsubrl
lret
and
les
cmpsl
or
jg
test
sub
add
insl
movsb
jg
push
or
inc
lods
cmp
ficompl
push
imul
dec
stc
inc
fnstcw
push
shl
mov
movsl
or
jg
inc
sub
movsl
loope
lock
das
subl
jg
mov
test
pop
mov
push
mov
jle
and
int3
adcl
aad
mov
bound
cwtl
sbb
setb
xor
sbb
or
sub
lds
in
jo
icebp
mov
mov
push
jnp
in
xor
notl
inc
inc
jno
push
adc
push
inc
rolb
cmp
push
out
and
shrb
sbb
leave
out
ret
sahf
or
mov
mov
fldt
xchg
movsb
outsl
loop
testb
je
push
lock
fisubl
adc
mov
shrl
xchg
jns
scas
das
cmp
bound
xor
dec
and
mov
lret
push
add
push
sub
fistpll
sbb
mov
inc
push
data16
mov
aaa
inc
add
jnp
insl
pop
xor
fldenv
or
adc
jge
arpl
cmpl
imul
push
insb
sarb
dec
cmp
or
xchg
jle
mov
xchg
in
icebp
sbb
ljmp
es
cmc
jmp
scas
stos
xchg
adc
or
jno
push
cmp
mov
rorb
cwtl
imul
xor
xor
cwtl
aas
sahf
movsb
xor
mov
inc
cmp
out
or
xchg
pop
sahf
psraw
inc
inc
shlb
xchg
push
cmp
lods
xlat
ljmp
push
lea
test
mov
pop
ret
or
cltd
aad
mov
pop
dec
cmp
leave
cmp
cmp
jbe
scas
add
mov
pop
mov
and
fstpt
pushf
mov
out
out
mov
outsl
mov
out
popa
ja
add
sub
ret
ret
ficoms
or
mov
xor
xchg
push
inc
cmp
xor
push
sti
mov
in
mov
dec
push
jno
pop
fwait
out
hlt
or
mov
mov
or
jno
add
xchg
push
push
hlt
lods
add
push
mov
enter
push
enter
and
dec
ds
cld
imul
push
rclb
push
cmp
mov
hlt
mov
mov
xchg
mov
test
xchg
jns
sub
pop
inc
cs
in
xor
jmp
decb
mov
dec
pop
orb
dec
out
sbb
sahf
loop
dec
fsubs
test
arpl
xchg
mov
pop
mov
add
cmp
push
loopne
test
or
xor
lock
inc
push
into
lods
xlat
pop
adc
mov
test
insl
mov
mov
cmpsb
outsb
jno
mov
cltd
sub
ficoms
xchg
lock
fs
push
and
and
dec
push
and
xor
loopne
jp
dec
inc
inc
pop
je
imul
mov
or
stos
push
or
push
push
mov
gs
xor
mov
adc
daa
daa
js
ljmp
sbb
push
sub
loope
push
cmp
mulb
aad
jne
call
ret
push
decl
xor
fwait
add
shrb
cli
sub
push
jle
pop
push
in
add
rcr
dec
sbb
jecxz
sub
and
xorl
movsl
adc
sarb
jmp
xchg
mov
jae
sbb
or
or
pop
add
xchg
mov
stc
mov
inc
cmp
xor
lock
fwait
jl
stos
and
push
inc
insb
div
cld
les
pop
aad
mov
sbb
jle
ss
mov
sarb
test
pusha
jmp
xchg
cwtl
jge
lret
popf
xor
gs
ja
xor
cli
repz
vpaddw
inc
sbb
imul
xor
out
lods
cmp
cmp
sub
cmpsb
jns
scas
hlt
ret
pusha
pop
sbb
mov
mov
mov
inc
push
inc
and
pop
mov
xor
xchg
or
fmull
out
outsb
push
xchg
mov
int
ja
inc
jge
insb
xor
pushfw
les
pusha
jnp
fdiv
std
xor
push
or
insl
sahf
and
jge
xchg
cli
sbb
loope
in
jbe
and
pushf
int3
push
push
cmpsb
add
add
imul
add
cltd
mov
xor
rcll
fsubs
or
ret
and
in
test
xchg
cmpxchg
jne
mov
xor
xor
mov
add
adc
mov
pop
dec
adc
sub
adc
mov
lret
es
xchg
dec
jns
jmp
push
shl
inc
xor
jp
push
sbb
mov
aad
inc
dec
pop
jne
pop
call
loop
stos
push
sbb
xor
or
jbe
push
lahf
outsb
lods
adc
mov
loop
mov
cmp
das
mov
mov
xchg
aas
std
out
inc
inc
in
jp
mov
sbb
cld
dec
jmp
mov
and
pop
adc
add
stos
pop
inc
repnz
cltd
je
ss
icebp
mov
push
sar
fbld
cmp
sbb
add
adc
push
inc
sbb
jo
inc
jns
jg
push
out
jge
pop
sub
arpl
orb
sbb
jp
adc
je
icebp
mov
dec
xchg
xor
push
in
sub
or
and
movb
bound
in
ret
xchg
jno
aaa
lods
mov
cltd
add
dec
xor
loope
rol
imul
xchg
push
popf
int
nop
push
idiv
sti
in
mov
mov
lods
das
repz
fnstcw
cmp
aas
mov
fst
sub
ret
lahf
pop
pop
int3
or
ss
xchg
shr
pop
les
dec
xchg
and
getsec
out
mulps
jle
jl
dec
and
clc
cmpsl
sub
push
sbb
mov
inc
mov
xorb
xchg
lret
arpl
xor
lock
lods
aad
mov
xor
jle,pt
cli
push
ds
add
ret
pop
hlt
jo
mov
call
nop
mov
ret
rolb
xchg
mov
push
and
mov
out
and
call
mov
cmp
xchg
add
push
mov
jp
out
aad
pusha
out
sbb
insl
out
jl
cld
add
out
sub
or
adc
insb
mov
outsb
test
mov
and
dec
clc
outsl
inc
pop
and
mov
call
aam
dec
push
sbb
jg
and
or
or
cmpsb
and
aad
imul
bound
aam
cld
or
out
or
sub
add
movsb
popf
xchg
push
jb
push
or
ret
dec
testl
aaa
fistps
pop
cmp
filds
xchg
cmp
mov
icebp
pusha
test
dec
mov
stos
int3
bound
mov
out
xor
adc
or
aad
inc
aas
pop
std
lret
xchg
mov
mov
sbb
xchg
jbe
lods
jge
imul
cmpl
lds
pop
out
loope
sahf
pop
and
mov
shl
and
mov
imul
jno
push
pop
cmp
inc
iret
pop
pop
mov
xor
sub
dec
sub
roll
stc
add
ja
js
or
outsl
push
jp
mov
dec
jge
sub
adcb
popa
and
pop
mov
cmp
push
repnz
mov
pop
outsl
jmp
lcall
subps
test
or
aad
mov
stc
imul
xchg
bound
inc
icebp
ja
les
outsb
stos
sbb
and
xchg
mov
mov
push
dec
add
fnstenv
push
imul
and
xorl
shl
sbb
leave
lds
inc
and
xchg
xor
xor
cmp
clc
push
adc
std
jno
adc
mov
lock
out
push
icebp
push
add
xchg
jns
mov
rorb
adc
outsb
jp
mov
jbe
pusha
jnp
push
adc
inc
mov
mov
test
jecxz
lahf
fsubs
pop
lds
push
ror
int3
pusha
xlat
mov
mov
insl
add
in
punpcklbw
or
pop
and
rcrb
pop
cmp
xchg
lret
fcomp
push
dec
xor
shrl
and
fwait
inc
mov
sahf
sahf
adcl
in
popa
cmp
call
insb
cs
movsb
test
adc
shrb
in
sbb
xor
pop
test
inc
jnp
pop
jge
rcrl
mov
insb
pushf
and
mov
idivb
stc
mov
jae
mov
cmp
pop
mov
add
icebp
cmp
test
imul
das
js
into
out
and
inc
dec
pop
sub
in
jbe
mov
sub
mul
stos
mov
aad
add
jns
fdivrl
pop
xlat
mov
jl
push
js
bound
mov
test
cmpb
jp
lods
push
mov
mov
push
push
dec
mov
pusha
test
inc
mov
or
test
loopne
push
test
pusha
xor
rcl
fimuls
dec
xchg
clc
sbb
sbb
jmp
mov
loop
or
sub
gs
lea
rcrb
pop
ret
sbb
cmp
es
insl
ret
pop
mov
frstor
lock
std
inc
cld
daa
dec
inc
lods
jne
cmpsb
sahf
sub
pop
mov
and
sahf
and
or
stos
mov
adc
inc
sub
lods
aam
dec
ja
jg
push
xor
pop
testb
in
jmp
jecxz
push
roll
js
mov
mov
pop
fisubl
scas
and
fsubl
pushf
sbb
jle
out
rcr
mov
je
cmc
cmpsb
cmc
jecxz
or
sbb
xor
stos
or
or
fwait
ds
std
ret
sub
cli
fnstcw
mov
js
btl
adc
nop
xor
aad
mov
and
add
pop
mov
dec
inc
xor
cwtl
mov
xchg
test
pop
inc
mov
popl
and
cltd
enter
dec
pusha
add
into
xchg
sbb
fcomps
push
cmpsl
lods
mov
and
insl
jle
mov
sahf
dec
mov
sub
aam
rcll
fildll
les
push
mov
pop
cld
stos
outsb
fimuls
pushf
push
xlat
xor
cs
pop
or
xor
fwait
mov
lea
test
in
inc
add
mov
mov
cltd
mov
adc
test
fdivp
scas
jp
push
rcr
movsb
fdivs
cmc
dec
sbb
mov
mov
fwait
clc
or
push
xor
lea
cli
out
shl
xchg
icebp
lods
icebp
rcrl
push
mov
int
xor
pusha
push
cmpb
pop
fwait
lods
loop
inc
pop
nop
dec
cli
scas
dec
or
daa
adc
out
int3
xchg
add
xchg
cmc
push
and
loop
sbb
fisubrs
jnp
imull
sbb
daa
lcall
lods
scas
ja
in
push
adcl
mov
inc
dec
push
clc
sbb
or
jl
outsb
sbb
movsl
sbb
jle
mov
cli
stos
mov
test
clc
stc
rcrl
pop
adc
jno
mov
pop
sub
push
loope
cli
cwtl
jge
mov
jg
dec
cmc
pop
clc
test
jmp
push
testl
imul
hlt
loopne
adcl
repnz
pop
pop
mov
cltd
jns
stc
ja
dec
fidivrs
loopne
leave
sub
bnd
incl
lret
xchg
inc
in
scas
pop
mov
inc
mov
lods
mov
mov
ljmp
faddp
ja
jg
lcall
lret
inc
sub
add
jg
pop
cmp
imul
mov
and
jl
lods
jmp
pop
in
test
cmpxchg8b
add
push
jg
and
mov
ja
sub
shrl
rorl
icebp
idiv
leave
add
adc
roll
mov
jo
test
inc
popa
pop
dec
cmp
test
dec
stc
sbb
push
jne
lret
cmpsb
dec
pop
fisubs
lret
mov
mov
jns
fmulp
jb
jb
jl
popa
push
jno
aas
cmp
adc
mov
cmp
fstps
mov
dec
lret
xor
fs
mov
mov
cmpsb
inc
cwtl
imul
imul
das
adcl
shrb
pop
mov
and
cltd
xchg
lock
flds
xchg
add
call
addr16
push
mov
fcoml
push
and
and
lods
dec
insb
jae
enter
xchg
push
mov
stos
mov
and
and
mov
in
inc
addr16
sub
nop
pop
int3
rolb
cmp
or
sahf
aaa
outsb
aam
pushf
cmc
jo
popa
jns
mov
lea
xchg
xlat
sbb
or
std
movsl
mov
nop
pop
jmp
dec
sub
rcrl
rcrl
adc
lcall
popf
dec
xchg
push
int
xchg
ret
push
test
jno
dec
jmp
mov
adc
cmpsl
lods
mov
and
pushf
insb
inc
mov
mov
cli
loop
inc
and
or
popf
out
inc
push
dec
cmp
jne
mov
in
mov
stos
xchg
pop
loope
mov
fcomps
call
xchg
push
and
stc
test
jge
mov
cs
pop
lods
push
cmp
popa
test
pop
mov
inc
xor
jns
lds
pop
jbe
test
scas
insb
xchg
loope
adc
push
lock
push
push
loope
je
dec
pop
roll
scas
scas
iret
sub
xlat
es
and
xchg
fldenv
test
push
das
push
ljmp
mov
push
data16
and
lcall
push
xchg
ja
stos
shl
adc
or
nop
push
movsl
int3
jbe
sbb
dec
or
repz
pushf
imul
lcall
sar
rcr
es
dec
push
rcr
cwtl
test
xchg
or
shlb
cmp
aad
sub
jne
shrb
incl
pushf
add
dec
test
popa
sti
icebp
xor
aad
adc
orb
inc
push
stc
inc
test
or
lea
sub
cld
test
in
stos
andl
lcall
fnstenv
cwtl
pop
mov
jl
das
cli
sbb
cltd
inc
decl
jae
insl
xchg
in
testl
popf
mov
mov
imul
pop
out
add
lcall
mov
shlb
fstpt
lods
loope
stos
sbb
fwait
mov
iret
ret
xor
push
adc
test
in
outsb
sub
lods
mov
sbb
mov
test
out
push
push
pop
cmp
testb
adc
test
add
rorb
scas
cld
mov
mov
popa
adc
stos
lret
cltd
add
insb
dec
mov
adc
cmp
add
in
mov
cmp
addr16
inc
hlt
lcall
adc
xor
bound
clc
outsb
aam
push
xchg
lcall
out
jae
push
mov
push
pop
enter
push
bound
dec
xor
icebp
mov
fdivs
loope
xchg
adcb
xchg
movsl
lds
daa
pop
xchg
sub
xchg
push
dec
mov
std
jl
adc
pusha
xchg
lods
outsb
enter
filds
sub
iret
dec
adc
lahf
ret
pop
jecxz
lds
pop
stos
lret
shll
mov
iret
out
imul
mov
and
mov
jp
cmpsb
aas
stc
or
arpl
scas
xchg
and
sbb
sbb
rcl
jbe
mov
cmp
std
nop
orb
shll
pop
dec
inc
xchg
enter
mov
inc
clc
pop
or
jl,pt
push
das
divb
sbb
jecxz
jnp
popf
scas
shlb
pop
xchg
nop
adc
ljmp
sub
daa
nop
jnp
inc
data16
rorb
pop
ret
mov
jnp
stos
xchg
push
mov
dec
lods
and
mov
shl
stc
xchg
rcrl
xchg
call
adc
out
cmc
arpl
mov
push
data16
insl
jno
and
popa
bound
fistpll
or
pop
mov
repnz
les
stc
pop
sub
cmp
lcall
loopne
fcoml
popa
fistpll
mov
jmp
in
jg
out
bound
insb
push
movq
xchg
push
push
lock
and
add
sbb
xor
adc
pop
pop
ljmp
dec
xchg
xor
mov
cmp
loope
pop
ud2
or
fisubl
setp
push
xorl
jl
sbb
jecxz
xchg
sub
mov
sbb
test
add
ja
push
or
jp
movsl
mov
sub
mov
fs
mov
aaa
mov
mov
stc
out
sbbb
push
xchg
xchg
out
push
add
stos
xor
or
jmp
push
push
mov
leave
pop
mov
xchg
shlb
push
push
inc
sbb
xlat
test
outsl
jecxz
lock
adc
in
es
xor
sub
adc
add
or
jns
sub
and
adc
pop
xchg
cmp
ljmp
mov
fnstsw
cmp
xlat
add
dec
push
rcr
insl
decb
cmp
ud0
push
pushf
xchg
cltd
inc
mov
popf
mov
cwtl
or
ret
into
mov
xor
inc
pusha
mov
add
int
das
movsb
sti
mov
fwait
stc
push
adc
inc
aas
sbb
sbb
xor
sub
rorb
repnz
add
inc
dec
mov
xorb
fnstenv
and
ret
sbb
aas
cmp
jb
repnz
or
jmp
adc
xor
mov
int3
or
jp
lods
dec
shll
pop
mov
fwait
adc
fwait
jmp
dec
sub
xchg
jnp
sub
ljmp
andb
stc
jo
sub
sbb
fcoms
push
jp
cli
and
add
sbb
sbb
xor
jb
add
movsl
jle
test
cltd
hlt
addr16
aas
xchg
inc
inc
push
shll
push
adcl
popf
cmc
cmc
popf
push
push
jg
or
clc
push
cmpb
mov
daa
mov
xorb
or
and
add
pop
or
into
bnd
outsb
push
push
xor
fdiv
inc
or
push
test
fcoms
popa
add
sbb
inc
lahf
leave
fwait
jle
aaa
mov
jecxz
jae
dec
jge
jne
push
jb
lods
dec
arpl
es
adcb
xchg
imulb
jae
nop
arpl
xor
shll
insl
out
mov
lret
rcr
pop
dec
subl
pop
pop
pop
and
or
jno
mov
out
push
add
shl
jns
enter
lea
or
leave
or
dec
cld
mov
int3
pop
jp
test
mov
jne
test
ds
rolb
xor
mov
out
mov
fcompl
fwait
xchg
jmp
popa
ret
test
rcrb
mov
jno
and
in
in
loop
fildl
js
adc
enter
mov
pop
sbb
repz
jecxz
add
pop
stos
sbbl
movsb
testl
jmp
jecxz
fcoml
push
gs
jno
aad
cmpsl
je
push
sbb
outsb
cmc
popa
lcall
out
insb
js
adc
xchg
pop
out
fiaddl
add
ror
fucomi
mov
cmp
cwtl
inc
mov
add
mov
sbb
push
add
sbb
inc
pop
pop
sbb
incb
les
mov
lret
lcall
push
dec
xor
pop
push
mov
jecxz
fisubrl
mulb
dec
jle
pop
pop
testl
add
adc
adc
aaa
fwait
lods
div
push
filds
and
mov
enter
adc
lret
and
dec
jge
mov
push
adc
mov
lret
movsb
or
push
imul
inc
mov
xchg
fcompl
mov
aas
imul
call
movsl
test
inc
xor
mov
pop
mov
repz
mov
inc
xor
mov
dec
iret
dec
dec
push
dec
xchg
idiv
cmc
and
aaa
in
pop
adc
aaa
pusha
aaa
lock
mov
mov
cmp
adc
pop
divb
jns
call
sbb
fidivs
fldenv
jo
insb
lods
stc
pop
popa
cmp
mov
fisubrs
je
jmp
jle
add
push
cmpsl
lock
xlat
jae
dec
adc
nop
dec
dec
shll
hlt
xchg
hlt
mov
push
xor
mov
ficomps
loope
jmp
loopne
cmpsl
testl
ja
xor
sar
xchg
test
mov
loopne
cwtl
dec
pushf
stos
iret
lret
sti
sub
ja
push
imul
aaa
je
out
mov
pop
jne
pop
push
popa
and
cmc
adc
pop
mov
push
sbb
push
mov
mov
lret
and
cmp
mov
mov
xor
cmc
cmpl
stc
clc
push
daa
pop
jge
inc
sti
data16
cmp
jae
repz
gs
jae
orl
inc
das
sub
int3
jl
fs
mov
shrl
js
mov
inc
dec
ret
inc
cld
outsl
sub
sub
pop
call
ja
push
adc
ret
mov
lock
mov
mov
fnstcw
int3
fs
sbb
jmp
inc
inc
shrl
test
mov
or
repz
push
lret
int
pop
inc
jno
xor
stos
ret
ficompl
cmp
js
loopne
mov
shrb
cmpsb
lock
push
xchg
je
incb
xor
cmp
cwtl
je
insb
fistps
int
push
mov
insl
adc
jmp
cmp
mov
pusha
loope
insb
lods
loope
pop
data16
cli
dec
add
test
clc
xchg
fstl
sbb
xchg
lea
ret
outsl
jl
sti
incb
dec
xor
pop
push
inc
fisttpll
adc
lock
out
pop
out
test
outsb
pusha
into
mov
mov
jl
or
pop
adc
and
push
pop
jmp
jo
ret
or
sub
icebp
jne
mov
stos
fucomp
adcl
cmp
addr16
jge
into
lea
pop
adc
sub
xchg
negl
lahf
or
fldenv
test
faddl
jge
enter
pop
or
jge
lret
mov
scas
jl
movsl
outsl
xor
mov
enter
adc
mov
adc
call
mov
repz
jb
and
adc
and
cmp
xor
mov
pop
aam
jge
jmp
pop
icebp
insl
lret
in
fdivrs
jae
or
inc
cmp
inc
lea
cmp
jns
mov
test
in
pop
stos
inc
push
push
stos
mov
sub
jb
shlb
in
inc
fimull
lea
mov
xchg
gs
mov
pushf
sub
lds
mov
cmp
push
ljmp
xor
mov
ss
je
movsb
sahf
cmp
jo
cs
daa
cmp
mov
in
fcomi
pop
popf
ffree
ja
insb
or
das
and
xor
rorl
cmp
add
cmpsb
pop
vxorps
and
dec
movsb
xlat
popf
push
dec
ret
adc
add
insl
pop
std
xor
cld
sbb
mov
js
les
adc
push
cmpsb
jmp
cmpsb
popa
fisubl
loope
pop
jae
jb
addl
pop
push
in
test
outsb
mov
jp
jnp
cmp
mov
cltd
adc
jb
loopne
lahf
aas
adc
mov
inc
push
inc
sbb
jg
push
mov
pop
pop
sub
mov
aaa
clc
or
dec
outsl
adc
jb
mov
das
adc
jno
hlt
xchg
cmp
jl
std
add
push
imul
fs
loopne
jne
ss
mov
add
jae
push
mov
sub
test
pop
mov
cmp
xchg
out
xchg
sub
pop
in
loop
popa
jp
arpl
scas
and
mov
sbbb
sbb
sar
jle
sahf
int
scas
jmp
and
pop
inc
sbb
mov
sub
std
push
or
bound
int3
in
dec
inc
jns
arpl
lret
xor
jae
jns
inc
ljmp
aaa
cli
add
lods
imul
push
lods
outsl
dec
fs
add
shll
adc
out
cmp
dec
xchg
shll
in
xor
ja
jmp
pop
fdivrs
inc
iret
pop
cmp
push
xor
mov
and
pusha
pop
mov
movsb
mov
and
xlat
push
push
hlt
les
mov
pop
jnp
outsb
lods
dec
lahf
mov
push
dec
fsub
jmp
ds
inc
inc
dec
test
pop
xor
fimull
or
xor
sbb
xor
mov
pop
inc
shll
aaa
fsubp
mov
aas
jp
ficoml
dec
xchg
jmp
xchg
lcall
out
push
and
mulb
lds
sub
out
imul
dec
pop
mov
add
aam
sub
shlb
jnp
sub
rolb
jecxz
lret
pop
shr
aaa
cs
mov
inc
ja
arpl
mov
inc
mov
cld
mov
dec
arpl
mov
cld
scas
sahf
stos
jae
mov
arpl
pop
xchg
movsw
add
scas
xchg
xor
adc
jge
cmp
inc
ja
jmp
das
mov
fcomip
mov
in
jge
js
dec
push
scas
mov
pop
dec
daa
icebp
in
adc
lahf
add
out
je
into
sub
pop
sahf
mov
pop
fdiv
push
sub
adc
cmovs
inc
leave
in
mov
cmpsl
dec
testl
add
mov
fimull
jb
sbb
test
sbb
pop
ficoml
sub
imul
mov
dec
pop
dec
das
icebp
test
pushf
stc
or
mov
inc
pop
rcrb
aad
xchg
pop
icebp
jmp
pop
rcrl
lock
das
dec
cmc
sbb
sub
add
push
xchg
adc
xlat
pop
and
fcomi
es
scas
or
lcall
push
pop
dec
push
and
scas
xor
mov
cmp
cmp
andl
repnz
lds
frstor
dec
lcall
stos
test
add
mov
js
pop
cmp
or
or
inc
rcl
xchg
sahf
addr16
adc
and
test
push
mov
js
push
mov
insl
ds
cld
add
inc
push
mov
cmp
jns
movsb
or
mov
and
out
xchg
fcoms
adc
test
mov
mov
lret
scas
mov
out
icebp
enter
jle
lods
sti
ljmp
iret
sbb
mov
out
mov
dec
adc
inc
in
std
jmp
enter
fdivl
jnp
add
sbb
push
lret
test
cmp
adc
iret
out
movsb
ljmp
jecxz
push
jne
pop
movsb
cltd
es
ds
pop
inc
test
imul
pop
clc
fisttps
mov
xor
shlb
sbb
pop
lds
push
shl
leave
daa
lret
mov
pusha
inc
fwait
push
in
nop
push
lock
lods
adcl
or
fmulp
in
push
jo
jns
popa
cmc
pop
and
fs
push
mov
xchg
or
pop
push
and
mov
imul
dec
mulb
sbb
pop
out
loopne
pop
in
or
mov
push
rolb
into
mov
mov
or
ds
add
sbb
jo
mov
jns
ljmp
cmp
leave
push
add
out
cmp
add
pop
sub
or
pop
sub
mov
subb
xlat
mov
fwait
xchg
sbb
imul
loope
pop
inc
inc
cwtl
ja
jnp
mov
inc
mov
add
mov
mov
add
aad
das
out
sbb
sarl
dec
push
out
repnz
fildl
cmp
sbbl
in
jb
sub
insb
sti
add
jno
mov
jae
ja
pop
jg,pn
in
xchg
cmpl
rep
lock
mov
shlb
add
xchg
ja
inc
out
sub
jbe
sub
test
lods
sbb
call
xchg
cld
test
push
popa
outsl
addr16
cmp
imul
sahf
sbb
mov
pop
push
popf
in
xor
cwtl
cwtl
test
enter
dec
enter
push
mov
test
and
ja
mov
jmp
rcll
mov
inc
out
xor
mov
fwait
and
adc
loope
fidivl
mov
mov
imulb
enter
sbb
ret
sbb
mov
pop
incb
push
cmp
movsl
test
or
mov
jmp
add
push
fwait
sti
jb
loope
cwtl
cmp
mov
inc
popa
or
mov
mov
pop
mov
pop
icebp
xor
fadd
cmpsl
ret
in
fwait
push
lds
pop
dec
inc
test
and
sub
xchg
shrb
scas
sub
or
shrb
mov
mov
inc
mov
shlb
sbb
dec
inc
mov
mov
popa
push
ds
dec
mov
gs
ret
xlat
shll
sti
jp
les
out
cmp
xor
rcr
adc
mov
mov
enter
rcrl
roll
ss
jo
mov
cwtl
mov
push
cmp
scas
add
out
inc
xchg
les
mov
aas
pop
inc
mov
aad
lods
shrl
mov
lcall
mov
add
push
add
incb
dec
push
lods
push
dec
cmc
fidivrl
push
jbe
fcoms
dec
mov
inc
push
mov
out
out
rorb
add
sub
xor
out
push
pop
adcb
inc
imul
fmull
idivb
xor
shlb
sbb
mov
adc
dec
cmp
and
es
pop
add
inc
xchg
movsl
sub
dec
sub
and
push
or
sahf
xchg
adc
push
orb
inc
push
mov
cld
insl
fldt
dec
call
lods
iret
je
mov
xor
xchg
and
xchg
push
dec
add
push
push
jb
addr16
cmp
xchg
rorb
cmp
ret
inc
fldl
push
in
mov
add
jmp
pop
and
rcll
call
sub
xor
shrl
lcall
stos
inc
es
clc
fucomi
repz
int3
out
stc
push
cmp
jo
enter
in
int3
repnz
lcall
enter
or
jns
mov
push
scas
sahf
jb
sti
adc
addr16
mov
lahf
outsb
divb
call
or
sub
push
pop
enter
outsb
sub
adc
add
icebp
shrb
mov
and
mov
jl
fwait
addr16
pop
cmp
mov
cmp
test
jo
inc
jbe
int3
aaa
ret
popf
cmp
sub
jnp
les
mov
mov
push
bound
outsl
insb
xor
movsb
loop
clc
sbb
inc
xchg
push
sbb
pop
dec
neg
stos
dec
dec
xor
cmp
push
out
pop
push
xchg
mov
aaa
std
sbb
mov
inc
pop
icebp
pop
cld
cs
fisubrl
and
cmpl
xor
add
out
mov
mov
pop
push
outsb
aaa
pop
sub
iret
xor
rcll
sub
je
loop
adc
jb
int3
lds
and
jmp
cwtl
test
shlb
mov
lahf
filds
mov
cmp
roll
jno
enter
lods
mov
movsb
sub
jecxz
pushw
cmc
pusha
add
xlat
inc
jo
or
lods
pushf
add
shll
and
adc
mov
fwait
xlat
out
xchg
orl
mov
outsl
adc
les
inc
hlt
sysenter
pusha
test
leave
mov
shl
scas
bnd
lret
cmpsl
xchg
divb
shlb
inc
in
jge
negl
mov
add
shlb
cs
inc
lods
enter
roll
sbb
cmpsb
gs
out
cmpsb
leave
xchg
inc
push
fdivrl
mov
pop
sti
mov
scas
push
aas
mov
rep
lret
pop
repz
and
repz
rcl
cmp
mov
cltd
adc
out
ja
mov
imul
out
test
clc
pop
adc
incl
stc
jbe
add
fwait
nop
inc
fstp
or
lock
ds
adc
in
mov
mov
in
xchg
and
jge
add
fmull
pop
cltd
test
jae
decl
mov
out
xor
push
pushf
shrl
das
clc
mov
cmpsb
mov
sahf
inc
cli
lds
hlt
loopne
popa
or
dec
insb
dec
sbb
leave
pop
add
inc
and
ja
xchg
test
jecxz
sbb
pop
test
mov
cmp
testb
xlat
ret
mov
outsl
lcall
sbb
fimuls
xor
dec
dec
ret
add
test
sbb
and
push
sbb
inc
pushf
push
pop
shl
movsl
test
call
push
jbe
bt
inc
mov
stos
sbb
nop
int3
sbb
or
in
pop
out
dec
sub
negl
insl
mov
pop
mov
imul
adc
mov
cmpsl
bound
xchg
popf
inc
pushf
mov
inc
pop
lea
xlat
bound
mov
xchg
les
std
inc
out
movsb
inc
xchg
xchg
adc
sub
push
push
rcr
xchg
addr16
pop
or
jne
push
ret
cmc
jo
jb
cmovne
xor
xchg
mov
fstps
sbb
mov
or
adc
loop
stos
lea
adc
in
out
add
add
addr16
pop
push
addr16
cld
test
stos
outsl
push
ret
mov
dec
xchg
ffree
rcll
shr
pop
sub
inc
icebp
imul
int
rorb
aad
outsl
or
mov
jns
pop
push
in
popa
sti
sub
and
cltd
enter
jg
push
inc
sarb
inc
cmp
xor
cmp
pop
add
mov
xor
stos
cmp
push
shlb
test
push
jg
sbb
xor
push
push
dec
sub
dec
dec
adc
push
ljmp
pop
or
adc
aam
mov
ret
add
fsubs
fstp
pop
sub
push
imul
lret
shl
mov
add
iret
mov
mov
insl
gs
push
jns
add
push
call
std
into
popa
sub
add
inc
clc
shrl
xor
cmp
scas
push
sbb
cmc
lock
enter
mov
sti
dec
jb
add
adc
out
mov
pop
into
daa
or
sti
cmp
sbb
dec
and
fstl
mov
xchg
aam
jmp
das
call
leave
das
xor
jp
xor
out
jns
sti
aad
cwtl
inc
fdivs
divl
sub
mov
mov
test
pop
into
call
jl
push
and
lcall
push
pop
xchg
adc
pusha
shll
bnd
out
fimull
sub
dec
jp
lahf
cmc
aad
or
test
sub
rorl
sbb
lahf
inc
loopne
cmpb
mov
mov
dec
mov
cmpsb
gs
dec
cmpsl
fchs
adc
and
loopne
add
inc
ja
pop
jg
aam
dec
fisubl
lods
int3
or
incb
jge
cli
or
ja
push
int3
dec
lret
xchg
test
mov
xor
jl
ds
mov
mov
fidivl
fcomps
stc
pop
fwait
sub
push
emms
movsl
sub
jl
jp
arpl
mov
mov
adc
sbbb
lret
push
sub
sbb
sahf
out
add
loopne
out
xchg
fs
xor
dec
mov
popa
fstps
xor
push
and
iret
push
les
loopne
push
fldl
leave
sub
fs
das
lods
lods
leave
ja
inc
mov
mov
stos
push
jnp
hlt
sbbb
fwait
fwait
ror
inc
xlat
push
rorl
xchg
mov
insb
fs
jo
sbb
nop
sub
or
adcl
push
adc
pop
or
dec
jg
cld
out
mov
enter
pop
rorb
mov
aas
adc
push
adc
or
lret
inc
lret
sub
les
enter
insb
jb
sbb
mov
call
sub
cld
cmp
pop
inc
sbb
mov
loop
mov
popa
dec
sbb
adc
and
cmc
test
mov
sub
inc
rcl
mov
cld
orb
push
mov
sbb
dec
dec
dec
cmp
dec
lock
mov
mov
dec
scas
pop
xchg
aas
mov
sarl
sub
jb
lcall
mov
cltd
sbb
add
fsubrl
jns
std
or
imul
sarl
js
icebp
shll
jb
sbb
stos
fstl
inc
jmp
lock
lods
adc
sbb
fwait
cltd
les
cmpsb
mov
adc
out
mov
or
push
sub
or
cmpsb
cmpsl
dec
mov
arpl
mov
cs
adcb
call
jg
jbe
pop
outsl
fnsave
jnp
jne
lods
dec
mov
icebp
call
push
xor
cmp
dec
mov
insb
xchg
cwtl
mov
jl
insl
in
cli
cmp
inc
repnz
pushf
repz
inc
inc
and
push
sbb
lods
xchg
jecxz
xchg
insl
and
sbb
pop
adc
xor
cltd
icebp
jge
cltd
sbb
mov
into
outsl
clc
rcll
std
insb
scas
cmp
decl
ficomps
cs
imul
mov
mov
inc
mov
inc
mov
lea
aas
ljmp
push
xchg
test
cltd
inc
popf
test
mov
and
inc
inc
repnz
sub
outsl
sub
sub
notl
mov
cmp
sub
outsb
or
mov
cmc
divb
dec
loopne
xchg
out
push
xchg
scas
ljmp
sub
pop
jmp
stos
sti
ret
enter
test
pop
js
mov
les
loope
outsb
pop
lret
popf
mov
cmc
xor
jle
sahf
dec
stc
cmc
inc
subb
jo
repnz
ja
mov
ljmp
jle
cmp
repnz
and
fwait
insb
icebp
stos
cmp
lea
jp
je
imul
pop
sub
cmp
mov
inc
mov
repnz
pop
mov
pop
imul
pop
cltd
mov
iret
dec
sbb
outsl
daa
mov
loop
mov
add
cmc
mov
lret
and
out
sub
jl
lcall
repz
cs
out
xlat
adc
icebp
mov
lds
adc
inc
mov
mov
mov
dec
push
mov
and
cli
dec
cmp
leave
test
std
in
mov
out
push
ret
jnp
push
mov
test
jae
outsb
movsl
inc
pop
pop
push
int3
test
pushf
cwtl
ret
sbb
mov
imul
mov
sarl
push
out
mov
dec
test
pop
or
imul
mov
js
in
cmpsl
adc
dec
jne
mov
aad
arpl
xor
sbb
imul
jno
jp
xlat
outsb
aad
inc
leave
lods
cmp
rcrb
mov
movsb
sbb
test
int3
nop
out
lret
cmp
push
jle
inc
test
das
adc
into
stos
pop
xchg
ljmp
fdivrs
or
repnz
sbb
xchg
push
sbb
mov
movsl
sbb
xor
nop
scas
into
pop
pop
xchg
pop
push
inc
add
aas
xchg
repnz
add
mov
xchg
out
out
shlb
sbb
xchg
push
call
xchg
repnz
push
fldt
movsb
inc
mov
scas
push
and
sub
sub
lods
inc
and
xchg
jmp
out
shlb
xlat
xor
or
test
repz
decl
js
pop
andl
push
push
xor
out
add
xorb
push
iret
call
sbb
inc
push
dec
div
push
jl
imul
ret
sbb
es
dec
push
mov
add
xchg
pop
int3
xchg
scas
push
push
popa
stos
repz
or
fnsave
pop
loop
mov
jbe
jnp
lea
ljmp
stc
std
mov
orb
cmp
movsb
cmpsl
insb
aam
hlt
popa
or
mov
jns
inc
add
fisubrs
push
jo
mov
sub
pop
iret
js
mov
shrl
pop
test
gs
pop
mov
rorb
dec
mov
lret
jecxz,pn
in
nop
int3
repnz
mov
js
push
inc
divl
cmp
cld
xchg
adc
cli
fdivrs
fsubrl
loope
mov
mov
movsb
xlat
sbb
cs
xchg
xor
js
icebp
nop
mov
lea
xor
divl
mov
ret
and
setge
pop
divl
cmp
sub
add
sahf
shrb
stc
push
movsl
cmp
shr
cmp
mov
lret
ds
nop
mov
and
pop
xor
sbb
mov
fsubl
xchg
jle
mov
jp
addr16
add
xchg
push
stos
out
incl
and
xor
in
call
clc
mov
xor
mov
add
andb
jmp
inc
das
dec
notb
ds
add
ret
insb
and
mov
sub
test
cmp
mov
aas
mov
addb
rcl
fwait
ljmp
and
idivl
xchg
lods
mov
jne
mov
mov
dec
add
lds
and
fucom
push
inc
xchg
xchg
fdivs
xorl
insl
sarl
orl
cmp
mov
fildl
ret
and
test
lods
sub
dec
mov
pop
mov
arpl
nop
aad
movsb
loope
push
push
xor
sbb
nop
loope
icebp
push
lods
popa
lock
mov
mov
lret
pop
xlat
add
sbb
cmp
ret
ds
and
push
lret
sub
sub
and
roll
mov
js
cli
cmpl
cltd
lock
int
jg
out
mov
mov
push
mov
jmp
adc
bound
push
ds
lds
out
add
or
mov
jo
xor
adc
inc
mov
ret
xor
mov
push
push
cmp
ds
jne
fistps
lea
int3
aam
std
cmpsl
pusha
fildll
lcall
shlb
into
popf
fmuls
xor
iret
loopne
xchg
fisttpl
arpl
cmp
adc
pop
fdivl
sub
sub
iret
push
and
add
insb
ljmp
lret
add
pusha
int3
pop
orb
add
arpl
push
insl
mov
push
icebp
pop
jnp
pusha
mov
cs
adcl
fistps
fdivrs
sub
push
dec
dec
pop
sub
adc
cltd
movsb
dec
mov
das
jns
sub
cmp
int
ret
iret
pop
and
adc
lods
ret
cmp
cwtl
push
aam
cwtl
aas
andb
data16
lea
out
adc
fcoml
mov
pop
mov
dec
and
repz
jp
ret
test
ss
iret
adc
out
and
pop
jne
test
lahf
shl
fadds
cmp
es
push
sub
xchg
mov
gs
xor
or
test
andb
sar
mov
push
mov
mov
int3
fcoml
rolb
jo
and
mov
into
std
mov
lods
cmp
mov
jmp
ret
mov
arpl
arpl
das
mov
imul
pop
addr16
nop
jmp
hlt
sete
cmp
stos
adc
xchg
mov
jg
das
push
sub
push
push
mov
mov
loope
pop
sub
das
jb
pop
cmp
shl
or
push
in
enter
leave
jmp
pop
imul
xor
cmc
rorl
stos
add
stos
imul
xchg
mov
lock
imul
dec
ret
jne
cmpsl
ss
daa
pop
and
daa
fstl
outsl
outsl
out
enter
sub
idiv
fwait
jg
dec
addr16
imull
or
orb
insl
sub
cmp
sub
sbb
sbb
les
not
out
mov
test
or
icebp
or
lods
andl
stc
movsl
jl
push
adc
bound
cmp
inc
aas
stos
testb
imul
gs
loopne
inc
sub
aas
push
sub
lock
mov
insb
mov
rolb
cs
imul
or
mov
pop
dec
push
push
aam
jo
pop
in
out
outsb
rcll
mov
in
mov
leave
jo
sbb
xor
xchg
adc
insb
mov
xchg
sahf
arpl
punpckhdq
push
pop
adcb
xor
std
cmp
rcrb
sub
mov
ret
in
sbb
mov
mov
mov
pop
pop
dec
push
dec
jmp
out
adc
xchg
mov
scas
xchg
and
sub
jns
rcll
test
mov
push
pop
shlb
loope
incl
adc
or
pop
and
xchg
inc
adc
in
dec
int3
movsl
fs
xchg
in
gs
call
ss
je
sbb
inc
sbb
mov
pushf
ja
xor
clc
mov
int
mov
inc
cmp
push
in
sub
dec
fistpl
push
nop
xlat
rorl
pop
adc
enter
or
out
out
sub
mov
jno
jno
sub
bound
aam
or
stc
sbb
andb
cmp
pushf
leave
test
int3
mov
movsl
outsl
mov
ds
mov
cmpb
and
push
add
sbbb
xor
or
pop
test
in
xor
mov
cltd
lods
inc
insl
pop
mov
pop
repz
test
clc
adc
sbb
jmp
arpl
rcrb
inc
xchg
lcall
dec
std
cs
repnz
inc
push
pop
pcmpgtb
shlb
faddl
shll
push
xor
and
int3
in
mov
rcr
push
int
pop
pushf
mov
repnz
bound
stc
inc
dec
mov
data16
in
icebp
sbb
cld
mov
test
mov
xchg
push
push
shr
inc
jle
xchg
pop
movsb
add
add
dec
and
mov
js
sar
loop
mov
pop
enter
xchg
insb
ss
inc
inc
sbb
jge
ss
sub
outsl
push
ja
or
mov
adc
incb
sub
mov
cmp
int
sbb
mov
call
pop
in
int3
js
imul
in
mov
sub
and
jns
pop
fildll
xchg
jns
lahf
fdivrs
jle
push
or
jae
jae
sbb
push
popa
and
and
pop
mov
fisubrl
aad
pop
xor
scas
jne,pn
imul
push
jae
pop
dec
push
pop
cmpsb
and
sbb
scas
xor
test
cwtl
adc
sbb
jno
or
imul
push
mov
test
imul
pop
dec
jg
mov
cs
fcompl
imul
mov
div
inc
movsl
shl
inc
addr16
fcomp
mov
inc
jle
out
ret
loop
fidivs
fmull
mov
mov
mov
out
xor
sub
mov
cs
pop
and
pop
stos
and
mov
stos
das
test
xor
xlat
xchg
inc
sbb
adc
arpl
xchg
mov
in
lahf
test
mov
imul
ja
jno
cmp
xchg
or
iret
cmp
cmp
sub
sbb
std
test
and
and
sub
loopne
mov
fldt
dec
ljmp
jbe
fs
in
mov
push
sbb
mov
jg
xchg
lea
iret
fistps
or
stc
inc
jae
mov
ljmp
push
sub
jno
out
test
cmc
inc
cmp
lret
push
sub
push
push
leave
mov
inc
sub
xchg
dec
fmull
mov
mov
test
lods
add
and
jle
arpl
repnz
add
divl
cwtl
jle
xor
push
sbb
push
dec
xor
xorb
ss
clc
loopne
or
xor
scas
lahf
movl
test
lock
push
aaa
jbe
pusha
cwtl
in
out
fisubrs
shrl
int
fwait
out
repnz
addl
jp,pt
divb
jno
xchg
mov
mov
shll
call
pop
shrb
adc
or
cmp
cmc
sahf
js
sbb
rorb
repnz
mov
jmp
inc
adc
aam
sub
mul
ret
ffreep
inc
loopne
inc
pop
push
scas
movsb
adc
and
mov
stos
jmp
int3
lahf
jg
cltd
and
inc
imul
or
insl
or
je
idivb
cli
pop
nop
mov
xor
inc
cmp
in
xor
fildll
int3
xchg
mov
push
or
lods
scas
out
dec
mov
jo
sbb
inc
push
xchg
out
lcall
jmp
fpatan
sbb
in
test
out
xor
daa
inc
out
sbb
inc
xor
sbb
lcall
fldt
hlt
xlat
shl
icebp
icebp
sub
pusha
ret
fdiv
mov
jns
sbb
push
daa
pop
jb
adc
adc
xor
push
lock
xlat
pop
test
adc
mov
jbe
cmp
mov
jnp
cmp
addr16
lahf
mov
pop
movsb
imul
sbb
std
std
xchg
jne
cld
cmp
lret
push
inc
ds
fidivrs
cmp
xchg
ds
jmp
xor
cmp
add
mov
xor
insb
lea
xchg
cltd
xor
addr16
adc
xor
push
fcmovne
pop
stos
fbld
or
sbb
lods
jl
aaa
dec
and
inc
cmp
jae
idivl
ljmp
test
jbe
scas
jp
sub
mov
jecxz
lcall
push
hlt
add
jbe
and
lods
jb
mov
sub
mov
movsb
movsl
pop
outsb
movsl
xorb
mov
shlb
cli
mov
out
incb
xchg
cmp
xchg
push
repz
sahf
sbb
arpl
inc
daa
aad
sahf
pop
pop
jno
test
jb
jmp
je
scas
gs
clc
sbb
bound
mov
insl
adc
enter
mov
orl
push
sti
aas
adc
outsb
rcrl
sbb
ja
flds
adc
les
repnz
mov
leave
mull
adc
lcall
pop
les
bound
test
xchg
sbb
sbb
mov
push
or
dec
push
adc
lret
in
inc
sbb
push
push
popf
test
cmp
int3
mov
sti
xchg
jl
mov
sbb
and
or
mov
mov
dec
jecxz
inc
xorb
rcr
cmp
cwtl
out
in
fldl
data16
inc
xor
push
mov
adc
lahf
test
jnp
sbb
fstpt
fsubrl
mov
test
mov
data16
push
out
mov
xor
cmp
imul
add
mov
repz
mov
mov
aam
inc
popa
das
mov
add
push
mov
mov
cmp
loopne
mov
mov
xchg
sub
repz
hlt
and
mov
icebp
and
pop
or
pushf
jecxz
pushf
arpl
sub
adc
pop
sub
lret
cmp
in
ret
or
jo
repz
into
pop
xchg
jbe
and
mov
outsb
xor
dec
push
sbb
aad
xchg
fmull
not
movsl
push
or
out
jne
cltd
addl
sub
scas
jl
mov
xchg
les
inc
insl
xchg
cmpsl
sbb
mov
cltd
sti
xor
inc
aad
movsb
xchg
sub
outsl
mov
xor
daa
mov
into
pop
mov
enter
enter
cltd
shl
cmpsb
and
lock
out
mov
cs
popf
sbb
mov
pop
movsb
add
js
in
gs
or
aaa
popf
push
cs
or
stc
adc
xor
mov
pushf
add
xlat
mov
into
movsl
or
das
or
pop
push
cld
loope
vpaddsw
push
fbld
fisubs
add
aas
mov
rolb
out
dec
aad
and
adc
or
daa
cmp
jae
xchg
stc
ret
inc
xor
and
mov
ficoms
stc
add
xor
sub
add
cmc
jl
jge
out
inc
pop
inc
pop
fmull
adc
scas
mov
inc
mov
jle
pop
sub
jl
repnz
das
bound
xor
add
outsl
cmp
xor
push
fst
cwtl
aam
cmpl
or
dec
pushl
jmp
sahf
xor
subb
nop
mov
xor
lods
jl
dec
push
inc
push
or
lods
and
ja
mov
hlt
or
aad
add
cli
out
xor
mov
jb
and
jb
xor
fiadds
test
rorb
push
mov
lret
push
jle
lea
push
jno
xchg
push
std
inc
or
cltd
push
mov
sbb
aaa
lahf
sahf
call
test
or
icebp
aad
into
in
outsb
lahf
fcomp
xchg
jle
cmp
add
dec
and
nop
mulb
nop
mov
fnstcw
pop
adc
or
ds
stc
jg
inc
repz
xchg
adc
sbbl
and
pop
pop
xor
lret
hlt
sbb
mov
movb
shrl
lods
mov
cli
rolb
push
leave
lods
xchg
and
lods
pop
imul
or
negl
loope
iret
push
addr16
push
icebp
sub
jmp
mov
adc
jo
or
jecxz
ds
cmp
sub
movsl
das
cmp
pushf
cld
cmp
pop
in
movb
push
int3
mov
std
mov
cmpsl
lcall
push
int3
xor
es
xor
shll
lcall
je
fwait
pop
cltd
fidivl
dec
mov
ds
push
aas
xlat
sub
out
stc
aam
xor
arpl
out
negb
or
setb
jge
push
sub
mov
loope
inc
imull
jne
cmpsb
fwait
sub
es
xor
std
les
outsb
or
pop
imul
pop
push
fstpl
push
dec
js
sub
xlat
fists
mov
add
add
ja
inc
or
in
dec
add
mov
cld
fsubr
inc
push
nop
add
clc
sbb
bound
pushf
jnp
pop
inc
outsb
add
js
adc
mov
insb
push
fisubl
push
aad
data16
mov
jb
xchg
mov
std
adc
xchg
sbb
scas
jmp
mov
push
sub
ret
mov
dec
mov
pusha
out
adc
test
push
test
test
js
je
fnstcw
sub
js
dec
jle
mov
mov
gs
insb
lods
fdivs
cli
into
repz
pop
add
mov
rclb
push
inc
mov
push
or
mov
jae,pt
push
pop
inc
pop
mov
xlat
jo
cld
fisubl
aad
out
mov
or
xchg
ja
jle
jae
pop
fmuls
bsr
bound
movsb
sbb
dec
mov
xor
xchg
adcl
adc
sub
push
inc
in
repz
in
call
sbb
jb
inc
mov
fwait
mov
add
adc
mov
or
cmc
push
sub
leave
cmp
shlb
cld
mov
iret
or
aas
loop
ret
mov
or
mov
xchg
xor
xor
xor
add
sti
pop
cmp
ficoml
stos
popf
xchg
sub
loop
or
ficompl
fisttps
aas
test
loop
jae
sub
pop
cmp
daa
sbb
mov
jb
adc
adc
scas
adc
adc
fwait
test
repz
aam
repz
jge
sbb
mov
insb
dec
push
adc
inc
cmp
mov
xchg
lahf
ss
push
movsl
mov
lret
stos
adc
mov
fnstenv
call
nop
dec
pop
xchg
add
mov
fbstp
pop
dec
fwait
adc
mov
popa
in
aas
andb
rcr
aaa
add
pop
outsl
jbe
mov
scas
pop
jnp
inc
pop
call
fadds
xlat
subb
cmpsl
and
loope
insl
inc
test
rol
jle
sub
or
jne
sub
cwtl
inc
scas
cmc
dec
es
iret
test
out
jb
in
mov
pushf
enter
or
inc
adc
xchg
pop
push
aam
pop
pop
jae
mov
inc
sub
sub
adc
xchg
pusha
mov
dec
xor
ret
jae
loope
rcrl
adc
movsl
add
addr16
lods
mov
adc
jo
test
outsb
test
fisttps
sub
dec
fildll
sbb
hlt
pop
sub
xchg
mov
push
mov
nop
or
mov
sahf
xchg
enter
ret
jae
pop
imul
mov
inc
mov
mov
mov
mov
push
in
adc
and
pusha
in
adc
insl
loopne
repz
xchg
int
mov
inc
push
insl
insl
and
cmp
add
movsb
ds
leave
jmp
or
pop
or
pusha
cltd
sub
out
rclb
push
in
push
inc
lods
sub
pusha
xor
and
cwtd
movsl
inc
adc
out
loope
mov
pop
jne
push
adc
pop
mov
aas
dec
dec
mov
pop
lret
and
ljmp
cmpsb
sbb
pop
test
xchg
iret
cltd
adc
dec
pop
inc
insb
dec
push
outsl
xchg
mov
cli
cmp
addl
inc
aaa
inc
adc
push
cwtl
jne
lea
adc
dec
jecxz
aad
fsubl
mov
lods
es
lcall
cmpsw
lods
mov
jmp
pop
lods
mov
pushf
cmpsl
push
imul
mov
out
pop
adc
jecxz
pusha
aas
xchg
outsb
mov
rorb
dec
jnp
mov
dec
ficompl
or
mov
rolb
adc
ja
insl
xor
gs
cli
test
push
push
jmp
in
sub
imulb
ja
xchg
cs
mov
xchg
cli
andl
das
jae
mov
add
movsb
mov
push
xchg
scas
in
inc
test
adc
les
jl
xchg
mov
add
and
imulb
mov
mov
jne
and
das
adc
push
sbb
push
add
movsl
std
dec
mov
fdivr
pop
sub
dec
adc
mov
stos
add
cwtl
sbb
pop
inc
xor
and
je
sbb
xchg
mov
and
pop
cli
inc
and
rcl
sub
int
push
jo
stos
shll
pop
adc
in
out
and
cmp
or
aam
lods
iret
enter
pop
lret
lds
or
ret
and
cmp
outsb
call
jae
jl
into
add
enter
in
sbb
xchg
imul
mov
dec
lds
dec
aad
inc
and
or
xchg
lods
aas
xchg
mov
aas
push
cmpsl
sbb
dec
sbb
aad
jns
xchg
push
pop
out
outsl
mov
jb
add
pmaxub
adc
or
ds
cmpl
add
iret
shl
enter
dec
push
add
divl
rorl
mov
push
roll
adc
sub
js
pop
and
jmp
pop
shlb
mov
les
gs
dec
inc
xorb
mov
data16
cmpl
mov
cmp
sub
arpl
mov
cmpsb
call
pop
jbe
mov
xchg
or
scas
gs
in
jl
push
lods
jb
cltd
les
xor
xor
ret
nop
arpl
or
adc
mov
iret
xchg
in
mov
adc
cmpsb
dec
out
pop
ljmp
jne
ljmp
add
xchg
mov
rcr
xchg
adc
push
push
xchg
xor
push
inc
jbe
and
jmp
inc
loop
mov
daa
pushf
cltd
mov
xor
sbb
xchg
xor
xor
dec
stos
insb
stc
pop
sbb
fwait
jae
jbe
add
inc
loope
mov
cli
lea
pop
add
scas
and
sbb
mov
rcrb
stos
sbb
shlb
decb
jecxz
dec
stos
inc
mov
fildll
mov
test
out
push
jmp
push
in
fidivrs
mov
in
test
ret
xlat
mov
adc
sbb
out
adc
pop
sbb
mulb
sub
mov
sbb
inc
out
outsl
push
mov
loopne
pusha
rcll
mov
movsb
xchg
frstor
inc
std
dec
jle
and
fldcw
xor
lahf
fucom
mov
test
add
and
je,pt
xlat
cwtl
dec
jns
scas
test
inc
mov
iret
mov
fldt
sbb
pop
je
ja
push
xor
inc
enter
scas
push
lds
fidivs
inc
clc
mov
mov
sbb
add
mov
xchg
call
push
or
in
xchg
mov
sarl
leave
inc
loop
enter
cmp
and
stc
out
into
popf
out
xchg
fs
mov
mov
cmp
lahf
dec
lock
leave
push
mov
in
aaa
repz
movsl
sarb
or
mov
das
mov
or
mov
jmp
cli
or
mov
push
outsl
dec
aam
outsl
add
fnsave
add
mov
xor
cli
fidivs
push
push
stos
dec
or
leave
xchg
mov
stos
stos
lds
inc
movsl
sbb
cmp
int3
mov
mov
pop
scas
mov
add
insb
pop
loopne
sub
andb
jb
mov
mov
in
out
sbb
and
fdivr
and
loope
test
shrl
xlat
push
roll
xor
mov
jge
mov
xor
or
jecxz
out
mov
inc
outsl
addr16
push
stos
pop
mov
popa
lds
rclb
sub
leave
lock
xor
ret
pusha
addr16
xor
loope
movsb
jno
sub
dec
pop
or
shrb
sub
call
mov
add
cmp
and
femms
jb
inc
fiaddl
pop
mov
xchg
xor
dec
and
push
das
mov
add
xchg
int
cmp
jg
cltd
and
mov
inc
jne
jae
sub
in
lods
aad
in
mov
xchg
push
push
or
outsb
mov
fs
sub
sbb
aas
jne
inc
push
jg
xor
jge
out
sbb
mov
or
pop
sbb
jmp
jbe
adc
shrl
mov
inc
sub
push
test
das
mov
mov
xor
insl
jge
mov
mov
sti
xchg
movl
cmp
and
jno
ljmp
lret
sub
test
push
mov
std
cmp
sub
jecxz
mov
dec
loop
xchg
aam
sahf
xchg
xchg
in
enter
mov
inc
mov
xchg
cltd
repnz
add
lods
scas
add
xchg
test
fidivrs
out
jmp
mov
clc
icebp
mov
mov
sub
xor
lea
push
fstl
or
or
adc
cmp
pop
in
lods
sti
sbb
adc
jp
int3
jecxz
or
pop
bound
test
xor
incb
push
insl
push
mov
fsubp
clc
mov
mov
sub
pop
xchg
mov
cmp
jbe
pop
push
les
ja
cmpsb
adc
cmp
mov
adc
xor
add
clc
lock
jo
add
sahf
les
xchg
sub
jl
mov
pop
sbb
clc
push
cmp
and
inc
pop
and
inc
gs
je
cmp
shrl
adc
bound
movsb
psrad
cs
push
mov
cmpb
xor
pop
ffreep
push
addr16
sbb
outsb
popa
mov
movsb
pop
gs
jl
stos
fwait
adc
mov
dec
mov
adc
std
mov
cmp
jle
or
addr16
repnz
ret
pop
mov
loop
xor
inc
xor
sub
push
lcall
int
pop
mov
cmp
inc
ljmp
inc
cmp
pop
sub
cmp
xchg
lcall
shl
adc
shrl
sbb
jae
nop
out
pmaddwd
aad
push
inc
dec
dec
cmp
mov
outsl
test
out
pop
inc
subb
xchg
in
pop
pop
or
xchg
jns
or
lods
fidivrs
fwait
xchg
cwtl
sbb
ret
out
jge
int3
dec
jle
clc
aad
das
adc
lea
and
pop
scas
pop
out
sti
bound
push
pop
xor
test
or
loop
push
push
je
sbb
add
and
xlat
adc
cmp
push
dec
sbb
sbb
and
xchg
xchg
jno
mov
pusha
sub
enter
jl
pop
mov
std
xor
rol
sub
popf
shrb
insb
scas
jno
call
mov
xchg
pop
pushf
jecxz
push
dec
out
dec
jle
in
in
test
mov
and
mov
data16
scas
dec
repz
lock
adc
loop
xchg
inc
enter
sub
in
mov
push
mov
in
xor
repnz
insb
in
call
jbe
orl
pop
cmp
and
sarl
jne
and
pop
xchg
in
lret
jmp
jns
jge
imul
mov
inc
out
or
dec
call
lret
inc
mov
push
outsb
addb
js
mov
inc
cmc
xchg
or
stc
pop
daa
add
mov
or
gs
push
dec
push
int3
inc
es
mov
hlt
cmp
cmp
dec
mov
test
xor
in
inc
shll
div
or
je
mov
or
mov
mov
enter
popl
xchg
out
in
mov
mov
lods
rorl
fldt
xchg
mov
icebp
imul
aaa
insb
addb
repnz
loopne
orb
adc
clc
movsl
xchg
cmp
cmp
in
mov
imul
xrelease
and
and
dec
xchg
xor
adc
or
mov
inc
test
repnz
or
scas
add
dec
es
loopne
lret
pop
pop
out
inc
insb
jle
sbb
mov
sbb
xor
xor
or
std
jl,pt
out
imul
adc
dec
dec
and
shl
bound
jp
pop
push
ret
mov
pusha
idivb
mov
jge
ret
fcoms
leave
loopne
cmp
sbb
loopne
loop
inc
ret
out
ljmp
pop
js
and
push
cmp
inc
xor
mov
sti
push
rol
dec
mov
pop
or
mov
jecxz
add
jno
repz
xchg
pop
xchg
test
adc
or
sti
arpl
xor
mov
lahf
outsb
ss
outsl
jecxz
mov
cmp
and
dec
sbb
add
stc
iret
test
mov
cmc
ds
jl
rclb
cltd
jmp
mov
fsincos
mov
or
sarl
adcb
cmp
pushf
xor
mov
cltd
or
test
rorl
es
jns
dec
xor
push
rcl
add
dec
cmp
dec
xlat
add
scas
pop
push
mov
pandn
push
sti
test
pop
xchg
hlt
pop
xor
cmp
xchg
jae
pusha
cs
xchg
scas
xor
ljmp
cld
fwait
or
pop
pop
repz
push
ret
lretw
stc
adc
mov
sbb
or
inc
stos
mov
out
jecxz
pop
call
dec
lods
cmp
popf
icebp
imul
mov
das
cmc
sub
and
dec
add
xor
into
jp
ds
dec
mov
popa
fisubrs
jbe
filds
std
cmc
out
arpl
rcll
fimuls
xchg
dec
in
inc
xchg
mov
imul
jl
in
xchg
fsts
call
outsb
adc
lds
ljmp
sbb
stos
data16
cmpsl
imul
aad
aas
mov
cmp
jnp
out
mov
dec
sbb
jmp
or
or
call
pop
repnz
push
inc
daa
mull
dec
sbb
scas
inc
lock
subb
mov
ss
ret
lret
mov
fsubrl
popf
push
mov
cmpsb
mov
sub
mov
mov
cmc
pop
inc
cmp
stc
movsb
ljmp
sbb
cmc
in
cmp
xchg
dec
lahf
idiv
dec
jg
dec
add
scas
mov
mov
mov
xlat
xchg
xor
xchg
imul
out
pop
lock
xchg
stc
jecxz
fwait
push
sub
cmpsb
dec
sub
mov
add
mov
jecxz
sbb
mov
ret
test
movl
sti
pusha
test
int3
aam
frstor
add
lds
mull
mov
cmp
xchg
sbb
addr16
and
add
jecxz
push
dec
push
and
bound
lods
ret
push
iret
cmp
push
xor
xor
outsb
out
adc
cmpsl
or
in
stos
outsl
shlb
movsl
pop
cmc
int3
sub
or
cmp
mov
fldcw
int3
mov
fstl
cmp
sti
xor
jecxz
dec
add
loope
pop
ss
cmp
inc
fcmovb
ret
add
mov
push
pop
fmull
push
add
jns
vpmuludq
or
inc
mov
leave
cmp
dec
jge
xor
ss
xchg
fadd
mov
push
filds
sub
xlat
test
stc
lea
ja
xchg
insl
jle
in
hlt
pop
jmp
ficoms
mov
adc
ds
imulb
test
inc
xor
dec
dec
mov
pop
push
or
mov
hlt
loop
pop
repnz
scas
hlt
lods
dec
notb
cld
jg
imulb
pop
mov
xor
sub
popa
cmp
into
scas
push
cltd
mov
mov
sub
mov
scas
xor
adc
xor
or
adc
cwtl
cmpsl
repnz
insl
inc
int3
add
xor
dec
pop
inc
dec
and
xchg
cs
addr16
in
popf
xchg
pop
and
push
cmpsb
pop
data16
movsl
jg
testl
xlat
mov
iret
add
jno
testb
std
push
sahf
cmpsl
in
xor
sub
jae
adc
pop
sub
dec
clc
lret
push
cmp
pop
or
sti
imull
ljmp
inc
cmc
movl
xchg
jle
lahf
nop
lock
shll
pop
push
clc
imul
insb
lds
int
pop
xor
push
sbb
test
cmp
sbbl
jo
repnz
rcrl
sub
repz
dec
sbb
rclb
mov
inc
loopne
mov
pop
insb
pop
sbb
addr16
pop
mov
push
jb
test
mulb
jbe
bound
mov
add
cmp
lock
xchg
in
xchg
xchg
jmp
arpl
sbb
cs
mov
pop
stos
pop
movsl
sub
add
jl
adc
pop
push
pop
cs
mov
or
scas
mov
cltd
push
aam
repz
ret
mov
outsl
test
mov
out
leave
push
xchg
jne
clc
in
lea
push
rcrb
or
inc
insl
jp
xchg
movsb
add
das
push
aas
push
shlb
cmpsl
pop
and
pop
inc
xchg
scas
mov
test
ret
clc
stos
mov
cmp
sbb
loope
clts
dec
jecxz
pop
stc
xor
sub
bound
jne
or
sub
sbb
rcrl
or
out
in
mov
rclb
lcall
xor
test
pop
cs
pop
divb
and
jns
aam
inc
pop
push
int
xor
xor
or
push
xor
sbb
xor
push
subl
jl
rorl
mov
vpinsrw
push
out
stos
dec
ljmp
sub
mov
xchg
inc
inc
adc
pop
xchg
dec
mov
xchg
ret
mov
and
push
inc
push
iret
jno
jns
push
inc
repnz
int
push
dec
inc
xchg
mov
je
sub
es
inc
rolb
jp
ror
add
in
ja
xlat
xor
data16
adc
repnz
xor
std
mov
sub
mov
das
adc
xchg
jnp
ja
movlps
aad
cmpsb
jmp
lods
fwait
ret
sahf
sub
and
add
cld
scas
jne
cmpsb
hlt
je
pop
in
cltd
pop
dec
pushf
pop
lcall
sub
pop
enter
inc
and
je
ja
jnp
push
jo
into
mov
loope
dec
jno
and
sub
ja
fcoml
imul
in
fwait
inc
movsl
repnz
dec
mov
lea
ror
xchg
cmp
sahf
xor
pop
out
cmp
loope
push
xlat
fsubr
adc
xlat
shll
iret
pop
xchg
test
or
xchg
rorb
stc
dec
xchg
mulb
xor
lret
mov
and
lcall
mov
insb
adc
jle
and
sbb
test
int3
mov
inc
mov
mov
pusha
mov
fs
xchg
cld
icebp
loope
outsb
fs
sub
mov
adc
dec
mov
xor
push
mov
mov
xor
xor
adc
inc
int3
adc
pop
shrl
cwtl
add
sub
pop
repnz
popa
jmp
lret
push
das
insb
pop
xchg
loope
or
jae
shlb
or
inc
add
ds
push
pusha
mov
pop
or
cwtl
loope
push
mov
mov
adc
mov
xor
in
mov
push
fdivs
in
ljmp
scas
add
sbb
and
sbb
and
cltd
or
mov
pop
pop
inc
sbb
jge
sbb
dec
fldt
mov
aad
mov
lea
xor
out
push
outsl
leave
call
push
stc
xor
xchg
mov
add
daa
mov
out
sbb
int
loopne
mulb
push
xchg
fs
pop
add
mov
jb
aas
lret
mull
hlt
and
test
xchg
xor
add
jo
sbb
cmc
push
cmp
mov
loop
xchg
cmp
cmp
movsb
push
inc
xor
mov
mov
mov
in
rcrb
lahf
mov
cmp
mov
mov
cmp
loopne
pop
xchg
mov
xor
aas
cmp
ja
jle
push
outsl
daa
stos
mov
out
pop
cs
push
or
enter
pusha
int
mov
sub
les
loope
sbb
fstpl
enter
in
lcall
repnz
stos
data16
movsb
push
jns
mov
mov
and
mov
pushl
fwait
es
mov
in
xor
cwtl
mov
fstpl
es
mov
pop
mov
imulb
dec
adc
mov
lods
jp
push
mov
loop
xchg
sbb
sahf
cmpsl
pop
je
add
or
fldenv
mov
out
scas
outsl
lods
gs
jno
pop
fisubrl
cwtl
test
mov
lods
aas
push
lods
ljmp
insl
inc
inc
stc
push
mov
in
rcll
xchg
mov
jmp
sbb
cmpsb
xchg
pop
adcl
shl
test
ja
call
insb
add
ret
or
sbb
adcb
mov
sbb
jo
add
xchg
ds
ss
inc
cs
lds
mov
sub
fs
popa
xchg
mov
out
pop
aaa
enter
xor
fidivrs
add
out
mov
push
jmp
ljmp
fldl
cmc
iret
adc
sbb
addr16
mov
push
pop
test
pop
pop
jno
das
or
jns
cmp
lods
lods
cmpsb
call
mov
aaa
cltd
and
rcll
scas
roll
outsl
xor
cmc
jne
lcall
pop
rol
add
ret
push
stc
loope
lods
clc
stc
les
xchg
push
rcr
into
mov
sti
insl
push
scas
jl
in
jne
stos
shr
add
popf
aad
bound
or
jbe
jb
xor
clc
out
leave
mov
xor
push
pop
adc
je
xor
arpl
push
and
add
movsb
xchg
xor
int3
les
add
fwait
roll
sbb
insb
mov
mov
fwait
outsl
sti
xor
enter
mov
jecxz
or
push
push
adc
dec
mov
cmp
mov
sbb
xlat
push
mov
scas
int3
add
sub
scas
out
loop
add
inc
mov
cmpsl
and
xor
fistpll
outsb
je
jge
mov
in
pop
sbb
inc
sbb
in
mov
into
mov
pop
stos
mov
dec
xchg
cmp
push
mov
call
push
aad
xchg
inc
loop
jbe
lret
pop
nop
jo
clc
inc
pop
and
push
add
loopne
fisubrl
cmc
and
or
mov
cmp
data16
in
xchg
scas
je
daa
jno
mov
jne
cmpb
xlat
arpl
push
and
jae
ds
fisubs
dec
and
clc
xchg
adc
in
cmp
ja
pop
popa
push
mov
test
adc
loope
inc
pop
fcoms
dec
and
pop
fisubrs
stc
fstpt
cli
jno
lds
arpl
leave
mov
outsb
mov
div
add
hlt
int3
xor
and
sbb
adc
mov
inc
xor
and
sub
push
adc
outsb
xor
mov
push
add
rcrb
mov
in
jmp
dec
daa
xchg
cmc
arpl
in
and
push
pushf
popf
mov
call
icebp
loopne
xor
push
mov
je
jb
fisubrs
pop
int
cmp
lea
pusha
push
int3
cmpsl
mov
xchg
add
xchg
inc
inc
pushf
pushl
bound
mov
pop
ljmp
ja
jg
fdivs
daa
mov
out
daa
clc
xchg
sbb
mov
jl
icebp
jl
push
mov
out
xor
in
lret
scas
jae
insl
adc
leave
mov
jo
push
lds
int3
out
pop
scas
leave
sub
imul
jb
daa
cmpsb
push
jmp
push
sub
jle
and
mov
fdivrp
inc
push
mov
sub
or
sbb
je
outsb
jb
mov
inc
dec
jae
cmpsl
vcvtps2pd
scas
in
sbb
pop
jo
lahf
lods
lock
push
push
xchg
popf
dec
ficomps
jle
push
outsb
fucomi
mov
imul
popa
jmp
fnsave
movsl
std
daa
dec
push
mov
cmpsl
insb
jg
inc
sub
sbb
xor
xchg
sbb
in
in
pop
xchg
fisttpl
inc
std
subl
les
xchg
push
push
add
in
into
lea
out
jp
lea
push
pop
mov
daa
jecxz
outsb
mov
xlat
jbe
cld
ljmp
addl
sub
jmp
scas
repz
pop
push
cltd
notl
out
sub
add
stc
das
xchg
negb
xchg
or
test
pop
xlat
aad
int
addr16
pop
ret
outsl
insl
dec
rolb
out
sti
pop
sub
insl
xor
mov
icebp
dec
xchg
push
or
aad
in
inc
incb
push
psrlw
mov
cltd
ficoml
lcall
stos
pop
push
fsts
ret
jno
sub
aaa
gs
subb
and
push
aaa
fwait
pop
ficomps
lds
or
test
les
insl
icebp
xor
adc
or
inc
pushf
mov
stc
mov
xchg
insl
pop
subl
andb
mov
daa
cmpsb
push
sbb
sbb
ds
pop
dec
enter
cli
add
dec
out
sbb
loopne
inc
data16
daa
xor
xchg
dec
data16
mov
data16
repnz
push
outsl
mov
stos
hlt
icebp
fwait
nop
pop
xor
std
jl
stc
pop
dec
into
int
mov
mov
cmp
mov
je
mov
inc
sub
out
ds
mov
cmpsl
dec
mov
mov
test
hlt
cmp
insl
mov
jb
inc
pop
inc
or
jmp
lret
aam
pop
dec
mov
cmpsl
sbb
movsb
cmp
pop
sub
das
jnp
xchg
pop
xor
dec
sahf
movsl
cmpsl
aas
sbb
dec
dec
add
add
aas
xor
mov
sbb
and
xchg
mov
push
cmp
iret
xor
cltd
pop
data16
outsl
pop
push
mov
pop
lret
mov
mov
loop
mov
jmp
sub
mov
dec
cmp
pop
lods
loopne
aam
sub
int3
cli
push
push
or
jg
movsl
test
popf
and
rorb
mov
mov
xor
ffreep
cmp
fs
mov
jp
dec
pop
insb
aaa
inc
mov
mov
sub
int3
das
jge
cmp
xchg
sub
movsb
inc
popa
cmpsb
mov
lret
sub
cmp
mov
shrl
test
movsl
bnd
add
stos
sbb
sbb
push
ret
cld
sbb
mov
lock
pop
negl
fisubrs
xchg
mov
adc
clc
mov
out
aas
dec
sub
mov
int3
out
cmp
xor
inc
push
ret
inc
fisubrs
mov
fbstp
mov
scas
ret
cmpsl
out
stos
cltd
cmp
fsubs
push
cmp
and
cmp
dec
push
cmpb
lods
leave
xchg
pop
imul
dec
push
icebp
cmp
xchg
or
dec
in
aad
or
dec
push
jno
and
popa
cld
xchg
jecxz
adc
cmpsb
inc
lods
push
xor
fnstenv
inc
frstor
stos
pop
inc
dec
in
aaa
xchg
inc
pop
shll
in
cmp
int
fisubrl
pop
stc
sbb
sub
jle,pt
inc
testl
xchg
and
movsb
popf
and
cmpl
mov
shr
sub
dec
adc
add
jle
xchg
jne
fsubrl
push
jmp
mov
imul
ja
cwtl
push
pop
insb
notb
out
sub
clc
stc
cld
inc
and
mov
inc
pop
cmp
or
xlat
pop
lret
daa
pop
lcall
hlt
cmp
popf
dec
mov
or
pop
pop
pop
cmpsb
mov
ja
test
push
dec
fwait
hlt
xlat
jns
or
das
mov
mov
aas
popa
mov
or
sarl
repz
cmp
popa
fwait
andb
mov
mov
and
outsl
add
insl
push
rclb
int3
out
xor
imul
rcrb
mov
sbb
lock
shrl
and
sub
xchg
jle
scas
cmp
in
mov
jns
mov
inc
xchg
popl
xchg
push
loope
mov
clc
xor
imul
mov
sbb
mov
in
add
add
xor
dec
jmp
adc
mov
lock
mov
pop
mov
mov
into
shl
jno
dec
jl
inc
inc
push
cmp
addr16
pop
sbb
push
push
inc
stc
rorb
clc
ljmp
add
mov
cltd
or
call
adc
cmp
clc
pusha
sbb
cmp
leave
pop
ss
mov
inc
cmpsb
jmp
cmp
cli
test
push
aaa
js
push
pop
lret
scas
popa
cld
cmpsl
mov
jg
cmp
movsb
mov
push
inc
sub
jp
lds
mov
mov
pushf
cmp
fistpl
gs
jno
mov
lret
or
pop
popa
and
mov
push
rcll
or
xchg
stc
es
movsl
frstor
mov
and
dec
scas
icebp
cmpsb
xchg
jne
xchg
sbbl
mov
inc
pop
or
sarb
and
fdivp
les
dec
mov
mov
or
ja
cmp
pop
fldcw
sub
cmc
pop
jnp
add
movsl
aas
mov
movsb
cs
sar
jmp
insb
cmpsl
jnp
push
inc
mov
mov
jle
fwait
xor
popa
add
xchg
lds
lret
or
nop
xor
jne
aam
lahf
mov
jno
movsl
xchg
mov
rolb
pop
shrb
sub
out
test
push
mov
adc
inc
rclb
pop
shll
idivb
std
jbe
pop
mov
pusha
aad
mov
jo
jbe
rcll
lds
cs
pop
addb
mov
lods
mov
or
adc
mov
loope
sbb
aas
shll
in
cmpsb
notl
pusha
and
iret
fcom
mov
psrlw
mov
sarl
rolb
nop
sti
adcb
push
jae
ljmp
andnps
in
sub
into
int
mov
xorb
inc
ds
cltd
mov
outsb
lods
ja
xchg
lret
fsubrs
mov
sub
es
pop
cmp
leave
xchg
xchg
call
es
stos
adc
iret
fcomps
subl
fnsave
fwait
mov
dec
out
scas
ljmp
aaa
sbb
rclb
enter
adc
out
repnz
xorb
and
mov
test
xchg
lock
inc
push
pop
movsb
push
mov
nop
fcomp
mov
cmp
lea
hlt
fidivrl
test
sub
sahf
aam
inc
xor
cmp
fwait
add
push
xor
les
lods
lcall
hlt
hlt
jne
sbb
lret
testb
ds
adc
nop
test
imul
inc
or
add
mov
lret
into
icebp
scas
out
jecxz
es
cmc
bnd
xchg
pop
stc
jne
pop
add
sahf
out
push
cli
mov
out
test
stc
inc
ret
add
and
pop
inc
dec
sbb
or
lds
cmp
ficompl
stos
pop
in
into
ret
ja
jmp
mov
pop
js
add
in
inc
cmpsb
inc
jge
in
mov
leave
jp
dec
push
inc
add
pop
les
mov
pop
push
fwait
imul
pop
mov
test
cs
insb
pop
push
mov
movsb
out
cmpsb
cld
inc
insl
out
jle
cmp
jecxz
push
or
cmp
mov
imul
adc
stc
or
lea
rcll
cli
xchg
xlat
mov
fisttpll
pop
sti
sub
fld
add
aam
out
cmp
adcl
fldcw
mov
cmp
pushf
pop
test
jne
push
xchg
jmp
scas
and
cli
dec
iret
sbb
jne
mov
test
xchg
ljmp
call
ror
xor
cmp
inc
icebp
sbbb
or
xchg
pop
and
push
push
mov
in
lcall
out
aam
inc
cmp
add
clc
mov
daa
push
mov
add
inc
mov
lock
clc
mov
mov
mov
test
xchg
std
mov
push
das
sub
shrb
lods
jl
sub
jnp
and
push
inc
push
ljmp
jne
jne
add
inc
xor
mov
in
clc
test
and
test
jecxz
push
test
loope
fadds
inc
push
push
mov
mov
out
add
nop
mov
ret
pop
test
add
ficoml
add
or
push
adc
insb
jne
cmp
decl
stc
enter
jecxz
adc
xchg
cmp
sub
push
add
adc
pop
jbe
stos
sbb
adc
dec
jp
inc
sbb
jbe
adc
adc
pushf
sbb
mov
mov
cltd
sbbb
xchg
imul
mov
hlt
lahf
test
insl
mov
or
mov
or
pop
enter
pop
xchg
sub
stc
dec
rcll
dec
inc
inc
lods
adc
rolb
xor
mov
arpl
xor
loope
pushf
dec
fstpl
test
push
stos
or
xchg
jmp
adc
cmp
nop
jb
aad
jg
jns
or
and
test
pushf
cltd
or
and
sbb
xchg
movsb
ffree
xor
test
cwtl
or
xchg
cmc
xchg
xchg
sub
pop
lahf
fs
test
mov
mov
ja
push
add
outsl
inc
ficomps
mov
movsb
in
subl
sahf
jl
insl
or
hlt
lret
incl
lret
jp
movsl
imul
inc
push
ret
cs
frstor
stos
dec
fcoml
jp
add
pop
add
repz
lock
into
fdivr
ret
adc
inc
fsubr
sub
cwtl
mov
in
mov
pop
xchg
fs
arpl
rcrl
push
in
sub
mov
iret
mov
daa
fs
sub
gs
xchg
orl
popa
out
add
cmp
out
lods
sbb
push
push
call
pop
cltd
pop
jae
lahf
js
xchg
push
cmpsb
inc
adc
sub
fldenv
pop
or
sti
or
pop
andb
xchg
shrb
mov
iret
sub
inc
out
jne
cmp
cmpsl
into
xor
mov
inc
adc
cmpsl
xor
xlat
mov
mov
sahf
add
fistpll
sub
or
sub
fcmovne
test
jmp
aaa
aas
lret
push
sbb
xchg
aas
std
fidivrs
iret
jnp
std
pop
cmpsl
adc
jg
icebp
mov
xchg
out
xchg
sub
repnz
cli
dec
dec
xchg
iret
push
jl
mov
loop
pop
inc
adc
inc
pop
xchg
jecxz
rcrl
movsl
addr16
jp
bound
cmp
fidivrs
xchg
and
sub
ficompl
pop
xlat
inc
cwtl
mov
fisttpll
ja
xor
insb
adc
push
and
inc
jne
sub
jbe
stos
sbb
push
jg
inc
lea
in
cmc
xchg
mov
xor
push
dec
mov
jb
pop
pop
clc
inc
dec
dec
mov
repnz
pop
mov
push
iret
inc
jbe
fisttps
fcmovu
cmp
inc
add
rcrb
sahf
or
shll
or
pop
xchg
jns
jmp
jg
dec
dec
push
mov
mov
xor
pop
fs
mov
sti
sbb
xlat
push
rolb
insb
imul
or
iret
dec
mov
push
leave
ss
std
or
mov
ret
inc
loope
push
add
rorl
notl
les
push
ret
push
mov
adc
and
push
in
lret
pop
int
add
and
aad
ljmp
rorb
sub
jae
add
and
jnp
mov
leave
jmp
clc
add
lods
imul
mov
inc
sub
cmpb
loopne
icebp
cmp
nop
test
mov
sbb
ficoml
pop
mov
pop
xorb
ret
cli
jmp
xchg
aaa
sahf
cmpsb
in
sahf
push
pop
cltd
pop
in
arpl
loop
outsl
adc
lods
andl
test
hlt
mov
xor
push
sbb
xlat
iret
aam
xor
mov
push
ds
sbb
outsl
pushf
xchg
enter
arpl
enter
aas
aam
sub
shlb
xchg
test
aad
adcb
xchg
mov
fimuls
xor
and
adc
paddsb
nop
xor
sub
aam
leave
ficomps
mov
sarb
test
fstp
xlat
sbb
mov
cmp
mov
loop
pushf
sub
adc
jbe
xor
cltd
push
mov
mov
push
dec
in
xor
cld
nop
jge
int3
sub
or
sbbb
and
jmp
sahf
or
dec
sbb
and
mov
aaa
and
dec
nop
mov
int
cmp
fs
mov
xor
cs
movsl
push
negl
jns
ja
mov
or
mov
dec
and
push
sbb
pop
jp
mov
pop
cmp
xchg
push
pop
negl
call
movsl
icebp
push
cmpsl
mov
test
stc
xchg
movsb
or
je
mov
setg
sbb
repz
sbb
jg
jl
and
cmp
ja
and
testb
stos
shlb
jp
out
mov
inc
cmpsb
sub
and
dec
and
dec
xor
sbb
jge
addr16
dec
sub
fwait
iret
mov
ja
clc
xchg
rcll
scas
repz
and
add
mov
mov
xchg
std
lahf
cli
and
push
push
xchg
xor
cmp
pop
jns
pop
mov
cs
push
push
out
xchg
test
mov
lock
mov
xchg
jmp
mov
aam
ss
jge
jne
mov
xchg
push
jmp
ss
mov
add
pusha
fs
jae
jg
xchg
in
std
in
or
test
ret
mov
in
js
mov
push
sahf
pop
mov
add
icebp
flds
popa
push
xchg
mov
cmc
lret
xchg
loope
stc
sub
sbb
mov
ss
cwtl
sbb
aam
inc
push
xor
lea
cli
xchg
or
xchg
das
inc
jg
push
into
test
data16
jp
aas
push
jne
loopne
pop
into
shr
sti
cwtl
dec
cmp
cmp
shrb
prefetch
or
or
jnp
and
jae
add
iret
mov
push
inc
push
stc
sub
clc
stos
inc
dec
sarl
sbb
lcall
push
jb
cltd
test
ljmp
mov
cmp
inc
rorl
cmp
push
imul
int
mov
push
mov
cltd
mov
add
sub
into
xor
dec
faddp
sub
ficoms
mov
push
push
add
cmp
fcomps
pusha
sub
fs
cli
fdivrs
xorb
popa
movsl
inc
cmp
pop
mov
pushf
pop
xchg
fmul
xchg
adc
sbb
aam
lock
test
in
int3
fsts
push
xor
add
mov
sub
pop
js
push
inc
pop
popfw
sub
and
pop
xchg
ja
sbb
scas
sti
cmp
sti
loop
lahf
jg
sbb
adc
mov
xor
cmp
mov
ljmp
or
mov
daa
cmp
std
and
repz
dec
test
push
xlat
jns
js
les
mov
jb
popa
lahf
inc
ja
lock
jecxz
xchg
ret
lods
jae
add
cltd
popa
cmp
es
mov
or
cmp
adc
add
pop
inc
decb
cli
jno
pop
xchg
jg
and
fistps
imul
gs
imul
orl
adc
aaa
and
pusha
in
mov
icebp
scas
xchg
push
aam
in
in
adc
xor
push
popa
movsl
mov
or
mov
inc
dec
inc
ret
inc
ror
clc
sti
push
lcall
sahf
shlb
or
adc
jge
faddl
icebp
xlat
mov
lret
mov
insb
or
cs
test
shl
inc
xchg
std
fistps
adc
mov
test
push
gs
adcl
fs
add
sbbl
or
cmp
dec
xchg
jno
enter
cli
fnsave
xlat
dec
mov
jmp
or
add
dec
out
mov
push
sbb
rcr
or
mov
rolb
aad
pop
vmovdqa
and
mov
iret
rclb
inc
mov
mov
mov
mov
loope
dec
aad
dec
mov
loopne
fidivl
fmulp
je
hlt
fs
arpl
dec
mov
push
cmp
and
das
push
pop
in
and
mov
aaa
xchg
xchg
test
cmp
out
ja
fwait
xor
mov
jp
in
pop
mov
dec
or
sbb
and
daa
stos
sub
pop
push
adc
std
jnp
mov
push
xchg
flds
icebp
xchg
jae
iret
inc
pop
nop
ret
test
mov
xchg
jns
fcompl
sub
push
jp
fimuls
imul
mov
inc
leave
mov
inc
mov
cli
mov
cmp
das
shl
sbb
pop
into
jecxz
sbb
mov
xchg
mov
lahf
iret
mov
jo
lret
loope
xchg
lods
pop
cmp
mov
cmpsb
mov
mov
nop
andl
mov
cmp
sbb
cmp
jnp
lock
add
dec
pop
in
push
mov
or
push
stos
mov
sub
into
jns
fs
xchg
cmp
aam
outsb
add
xchg
and
adc
aam
pop
cmpsl
jl
pop
shlb
push
push
jecxz
sti
mov
sub
imul
xchg
mov
nop
adc
mov
out
rol
imul
das
pop
ret
je
jp
inc
cli
mov
adcl
mov
adc
mov
loope
push
pop
jecxz
cmp
and
mov
and
call
daa
in
test
jae
cmp
jb
gs
cwtl
shrl
or
pop
push
adc
call
mov
imul
lods
mov
ljmp
cmp
cmc
sbb
and
xor
adc
pop
dec
jbe
push
test
or
ffreep
sbb
inc
cltd
in
in
jb
mov
aam
icebp
pop
jg
jno
mov
sbb
and
inc
pop
and
cltd
xor
add
stos
pop
adc
sub
or
cmp
push
inc
ret
cs
insl
addl
mov
xchg
sub
and
insb
push
add
push
pop
hlt
das
mov
shlb
mov
popl
mov
sahf
push
std
test
xchg
cmp
xchg
ds
lcall
iret
fdivl
and
and
sti
xchg
flds
bnd
popf
pop
int
mov
cs
lock
jg
lock
cmp
daa
stc
pop
loop
pop
pushf
aaa
inc
mov
cmp
lods
movsl
jmp
shlb
jge
mov
add
sbb
jo
out
push
mov
pop
adc
xor
adc
mov
push
popf
mov
in
fs
adc
out
pop
push
ljmp
lret
mov
xchg
pop
loopne
xchg
aam
add
cmp
out
in
outsb
in
mov
jnp
dec
xchg
test
and
incl
sub
mov
loop
stos
js
and
xchg
test
lock
xchg
das
mov
std
addr16
into
jg
repz
fs
xorl
jl
sarl
lcall
add
xor
xor
xchg
or
mov
test
imul
jbe
nop
dec
scas
bound
aas
pop
inc
xchg
dec
cmp
icebp
popa
or
int3
faddp
jno
enter
bound
mulb
sbb
mov
pop
sbb
stos
fdivl
xchg
ja
add
sub
or
mov
cmp
push
jmp
pusha
inc
sahf
jge
insb
xor
mov
movsl
enter
subb
xchg
or
pop
scas
sbb
and
dec
push
shrl
mov
jmp
or
sbb
scas
dec
hlt
loope
jne
stc
stos
outsb
lds
clc
and
and
data16
jb
dec
adc
xchg
sti
das
loope
int3
call
mov
xor
xor
push
push
and
dec
rolb
jns
mov
icebp
lock
in
xor
pop
aad
movsl
nop
inc
push
sub
inc
pop
inc
hlt
fdivp
xchg
test
push
shr
popf
imul
fimull
fistps
andl
mov
call
in
fs
cmp
xor
frstor
xor
push
inc
ss
fldl
sbb
imulb
xchg
cmp
push
pop
arpl
lea
lods
std
imul
dec
cmp
daa
xchg
xchg
mov
arpl
mov
rdpmc
iret
test
int3
mov
add
push
bound
xchg
mov
icebp
push
or
arpl
lea
xor
sub
andl
jb
cmp
mov
out
rcl
mov
inc
lods
test
sbb
add
xor
hlt
xchg
out
adc
outsl
cwtl
call
int3
and
mov
dec
aaa
mov
outsl
pusha
adc
xchg
mov
or
fsubrs
cltd
movsb
cmpl
xlat
add
adc
stos
cmp
dec
pop
idivb
inc
mov
insl
das
psadbw
jo
inc
jae
pop
inc
and
mov
adc
daa
cmp
mov
arpl
jae
pop
fwait
and
decl
popf
mov
or
jecxz
stos
lret
mov
cmp
pop
or
arpl
call
sub
add
cs
xchg
adc
es
int
jle
aaa
pop
call
push
xchg
scas
pop
sub
dec
and
dec
insl
fisttpll
outsl
sub
push
pusha
sbb
ljmp
arpl
xor
jmp
lea
sub
xorb
jnp
xchg
cs
mov
ljmp
sarl
je
mov
pusha
xchg
repz
dec
loop
imul
outsl
ja
scas
pop
or
andb
leave
ljmp
dec
fisubs
lahf
std
pop
dec
sub
xchg
push
push
xor
dec
int3
data16
jno
pop
pusha
add
inc
cwtl
mov
pusha
sbbl
filds
pop
jle
or
out
push
shrl
jne
and
fsubrl
fdivrs
cld
test
inc
rcrb
popa
push
mov
aam
jg
xor
in
rcrb
arpl
lds
xchg
or
insl
or
dec
sub
cmp
movsb
lret
call
jmp
xor
push
fisttpll
jns
and
iret
inc
lock
bound
inc
jae
in
jo
pop
notb
enter
mov
inc
xlat
shr
xchg
and
or
jbe
fst
add
test
inc
sub
or
pop
adc
sub
nop
xor
aas
out
mov
xchg
push
shll
dec
xor
xor
pop
xchg
adc
or
out
mov
fsubl
or
pop
cmp
cmp
outsb
xlat
jle
pop
pop
popf
pop
incb
dec
mov
cmc
imul
mov
loop
mov
sahf
dec
mov
outsb
iret
push
rclb
shlb
cmp
mov
int
cmpsb
sbb
mov
fisttpl
ror
add
and
lret
mov
xlat
sub
nop
or
outsl
mov
mov
pop
outsl
pop
aaa
ret
ja
mov
fsts
jmp
push
jl
lea
cmp
push
in
lock
jae
cld
mov
sub
int3
xor
xor
pop
mov
pop
mov
popa
pop
add
adc
stos
cs
dec
movsb
cltd
mov
mov
jp
adc
cmp
jmp
outsl
in
js
call
stos
shrl
cmp
push
mov
or
nop
call
xor
dec
aam
icebp
in
adc
leave
es
push
pop
in
add
sbb
mov
and
xlat
cmp
mov
out
jl
in
loope
mov
lahf
test
lret
subl
mov
mov
sub
mov
sahf
jae
mov
xchg
cmpl
movsb
loopne
jbe
add
sub
aad
cmc
jle
pop
imul
add
or
es
jb
mov
or
arpl
pop
jp
enter
rclb
xadd
aam
aad
test
cmp
mov
mov
lret
xchg
mov
sub
test
and
jno
inc
outsl
ss
add
dec
aas
ss
mov
or
mov
cmpsb
ss
pop
cmc
icebp
cmp
or
xchg
movsl
push
lahf
insb
push
test
mov
leave
or
push
sti
push
xor
loop
cmc
or
dec
adc
and
add
push
repnz
mov
xor
pop
shrl
jae
js
lock
dec
popa
frstpm(287
jg
movhps
mov
icebp
adc
fwait
mov
xor
jb
fld
mov
jns
adc
or
shlb
shrb
jp
mov
outsl
hlt
sarl
xor
or
nop
add
stos
sub
popa
sub
psubsw
cmp
adc
pop
add
stc
cmp
dec
pusha
mov
jmp
repz
cli
add
mov
roll
inc
and
xchg
aas
cmp
cmpsb
aad
test
sub
pop
dec
mov
fs
mov
lea
imull
xor
pop
imulb
insb
xchg
mov
mov
sti
imul
sbbb
jbe
sub
mull
xor
out
pop
xchg
pusha
jns
sbb
mov
leave
lret
pop
cmp
or
inc
aas
adc
push
in
xor
sub
adc
dec
aad
mov
hlt
fcmovnbe
mov
arpl
testl
aam
pop
pop
mov
test
adc
sbb
rorl
outsb
inc
test
sub
test
scas
mov
xchg
int
sti
sarl
add
outsb
lea
ja
test
xchg
shlb
inc
xchg
adc
and
outsl
and
pop
jbe
daa
ret
jo
shl
xchg
dec
movsl
sbb
popa
push
clc
and
fs
int3
cmpsb
out
mov
add
jne
xchg
pop
pop
xor
push
lea
mov
mov
notl
cmp
sbb
data16
mov
mov
inc
lock
pop
outsb
pop
push
mov
cmp
sbb
lods
and
sub
adc
cmp
mov
test
idivb
cmpsb
iret
stos
test
inc
lds
stc
jg
mov
shll
push
or
std
adc
push
repnz
hlt
xor
cmpsl
mov
add
in
xchg
sub
scas
sbb
test
mov
xor
or
sbb
jne
xor
pop
fs
cld
xchg
adc
adc
mov
jo
mov
dec
fldt
push
jno
or
mov
xchg
mov
fwait
pop
aad
enter
fsub
xchg
add
mov
or
repz
inc
add
repnz
sahf
and
pop
pop
ljmp
mov
inc
sub
pop
loope
cmp
leave
pop
jge
pop
js
add
movsb
shlb
hlt
mov
loope
sub
arpl
out
inc
out
mov
das
adc
sub
mov
iret
shl
xchg
loope
push
test
stc
orb
sub
sub
iret
sbb
adc
sub
daa
pop
repz
loopne
sub
fildl
fcoml
pop
push
lods
and
in
clc
lcall
and
popa
js
sbb
sbb
xchg
jne
fs
wrmsr
fbstp
clc
cs
xchg
pop
or
jno
sbb
stc
cmpsl
pop
pop
adc
pop
inc
fcoml
std
xlat
dec
xlat
bound
push
add
lret
dec
lcall
xchg
in
cmc
sbb
xchg
xor
js
cwtl
mov
int3
and
mov
fistl
incl
lret
outsl
sbb
jmp
int
bound
outsl
xchg
mov
cmp
insb
sbb
movsl
xchg
pushf
int3
inc
or
call
fiaddl
xchg
iret
jp
cmp
addl
leave
xchg
dec
cli
xchg
cmp
mov
inc
and
sub
and
repnz
call
imul
test
insl
add
adc
addl
sahf
in
adc
push
movsb
lods
ljmp
and
jg
pop
fdivl
out
cs
xchg
data16
jns
insl
aam
jmp
mov
sarb
mov
mov
lahf
inc
mov
pop
mov
jge
sbb
jns
jmp
jp
sbb
mov
jmp
roll
shr
or
inc
add
pop
leave
fs
mov
negl
sub
mov
sbb
iret
xchg
aad
jns
int
mov
xor
jle
xlat
adc
cmp
loopne
out
mov
aas
aad
fnstcw
fstl
push
jge
mov
mov
and
call
les
pop
outsl
push
sbb
and
lock
cmp
push
xchg
and
clc
or
aaa
mov
dec
sbb
fists
xor
xor
adc
sti
jp
dec
addr16
andb
in
nop
int
sbb
jl
in
ss
pop
inc
push
aaa
and
xchg
cmpsl
mov
scas
js
add
dec
imul
roll
call
inc
aaa
dec
cltd
or
push
ficompl
and
jmp
hlt
sbb
jge
pop
jl
insl
ja
mov
les
push
rolb
bnd
int3
push
cli
dec
push
push
sbb
xor
sbb
jge
call
jb
movsl
fs
cmpsb
in
inc
xor
push
mov
pop
or
ds
push
inc
push
pop
ja
test
stc
je
jge
mov
shlb
js
insb
into
and
pop
jecxz
cmpsb
push
or
lea
fmull
jmp
daa
js
out
cli
or
je
andl
test
add
xchg
cwtl
mov
jge
lock
popa
insl
out
cltd
sbb
cld
mov
xchg
hlt
jl
mov
mov
mov
adc
dec
adc
inc
adc
and
sbb
jge
ret
or
arpl
ret
push
mov
mov
fnstsw
and
out
or
push
inc
in
cwtl
leave
fcmovbe
xorb
loopne
and
xor
lods
jne
cmp
or
sub
dec
mov
inc
fsubrl
cmpsl
outsl
fldl2e
add
popf
int3
xchg
pop
adc
pop
mov
outsb
scas
setns
dec
pop
sub
sbb
inc
push
add
shrl
arpl
sub
shrl
mov
not
aas
mov
insb
insb
xor
and
cmpsb
xchg
into
cmp
mov
dec
testl
bnd
push
inc
sarl
sbbl
and
push
test
xchg
sarb
lock
negl
mov
out
ss
lods
cmp
sbb
notl
shrl
les
movsl
fwait
rcl
call
push
les
mov
cmc
push
frstor
imul
dec
ljmp
push
adc
dec
pop
divb
ja
jae
pop
jb
mov
pushf
loopne
sbb
mov
sub
and
shll
mov
ljmp
lods
adc
inc
push
push
pop
je
and
sahf
aas
jg
aam
gs
addr16
addr16
cwtl
ret
adc
mov
mov
mov
inc
fwait
jg
test
sbb
in
push
mov
dec
dec
sbb
sti
pop
mov
sbb
aad
pop
stos
xchg
scas
sbb
inc
sbb
sbb
imul
mov
xor
push
das
mov
test
add
iret
das
and
push
shrb
data16
popf
pop
inc
xchg
je
adc
testl
or
mov
add
aad
xor
pop
movsl
sub
popa
movntps
mov
scas
imul
inc
sar
and
cs
sbb
pop
imul
push
test
outsb
sub
mov
mov
mov
mov
jns
out
repnz
mov
in
dec
hlt
std
mov
xchg
mov
sub
xchg
lahf
outsb
xchg
jmp
pop
js
pop
inc
push
mov
cmp
push
sub
lods
in
jne
cmc
andl
jno
movsb
jecxz
push
sbb
pop
mov
cmp
movsl
xchg
or
sbb
xor
insl
in
xor
jnp
int3
xlat
mov
or
lock
cltd
arpl
and
icebp
int
out
mov
cltd
cmpb
test
jno
cmp
test
sub
add
roll
stos
mov
testb
sarl
enter
cwtl
inc
clc
jbe
add
push
fistl
or
xor
jp
addr16
lret
push
sbb
jle
push
jmp
movsl
push
daa
fisubrs
jno
std
lahf
jecxz
pop
pop
es
hlt
sub
mov
and
test
into
rcl
lds
cmc
aas
bound
addl
push
push
xlat
dec
fwait
or
leave
enter
loop
push
and
sub
sub
enter
mov
repz
adc
arpl
dec
sbbb
pushf
mov
pusha
das
in
push
mov
out
inc
push
jl
cmp
fnstcw
data16
mov
test
xorb
out
ja
or
loope
stc
rorb
arpl
xorb
scas
pop
pushl
imul
jb
adc
mov
popa
gs
lock
push
or
cmp
cmp
adcb
xor
pop
sub
popa
xchg
cmp
add
es
cmc
lret
mov
dec
mov
data16
dec
xchg
sti
shrl
mov
scas
aad
dec
jle
pop
xchg
pop
mov
or
jmp
jge
sub
ljmp
add
sub
sbb
inc
pop
loopne
mov
jo
bound
cwtl
fs
push
jb
sbb
into
fdivrs
mov
out
fcompl
stos
mov
ficomps
pushf
xor
jbe
adc
lcall
movsl
jmp
rcrl
sarl
sbb
mov
mov
inc
les
int3
aaa
mov
dec
push
mov
outsl
jo
add
rolb
mov
dec
stc
jp
push
xor
mov
cs
test
jg
pop
sbb
fldenv
loop
pop
push
test
out
sbb
dec
push
jno
add
pop
pushf
and
in
or
mov
jmp
sbb
mov
mov
push
xchg
idiv
push
cli
in
pop
sbbb
dec
cmpsb
xor
xor
psllw
out
push
xchg
pop
fistps
jle
xor
push
lods
lock
popa
add
rcl
pushf
and
data16
fsubrs
inc
stos
push
je
dec
mov
xor
rcll
clc
dec
mov
push
nop
call
ret
popf
sub
or
rcrb
stc
popl
push
stos
xchg
je
ret
je
dec
mov
add
jge
data16
pop
or
sub
lea
test
adc
xorl
adc
fdivl
pusha
pop
leave
or
rorl
add
cs
pusha
scas
push
mov
add
scas
cs
mov
notb
sahf
xchg
dec
in
or
andb
out
mov
jecxz
sbb
and
jecxz
into
fs
subb
shrl
inc
push
insb
add
pop
mov
and
andnps
lret
popa
push
hlt
in
bound
jns
imul
xor
leave
outsl
xor
int
adc
cmp
icebp
stc
add
mov
fistl
xchg
xor
xor
shr
pop
mov
fisttpl
pop
dec
std
fdivp
fmulp
add
push
flds
icebp
or
cmpsl
test
mov
ret
divl
inc
pop
xchg
pop
out
mov
inc
movsl
push
call
popa
jbe
push
push
pop
dec
jae
std
push
xor
push
pop
push
in
fadds
jbe
pop
lock
jo
in
push
out
pop
mov
cltd
fcoml
je
mov
cmp
xor
imul
sbb
add
scas
pop
xchg
lea
push
stc
or
sbb
loopne
or
std
pop
das
out
cmpsl
lret
fucom
cmp
add
popa
and
test
cmp
popa
sbb
or
fiadds
nop
cmp
dec
dec
sbb
shll
or
push
roll
cmp
cmp
jnp
ret
lahf
stos
xchg
xchg
dec
pop
and
jmp
roll
mov
sbb
jg
push
div
pop
hlt
into
shlb
mov
test
xchg
or
mov
out
mov
int3
aas
mov
pop
repz
sub
pop
mov
jmp
sbb
fidivrs
arpl
cmp
into
scas
dec
imul
pop
push
cmc
out
jae
cs
nop
mov
ret
data16
es
fldcw
mov
cmp
xor
inc
fistpl
mov
fucom
jmp
lods
xchg
daa
sub
subb
jp
aaa
sub
push
repnz
ret
jle
scas
cmc
cmp
sub
mov
call
ret
sahf
pop
inc
jne
std
jo
cld
insl
lret
loop
add
cmp
add
jl
pushl
stos
in
jmp
sbb
pop
test
lods
xor
leave
pop
mov
jle
mov
cmp
repnz
stos
push
jbe
arpl
stc
dec
push
push
rolb
push
and
inc
js
mov
xchg
gs
sbb
fmull
pop
cmpsl
cmc
hlt
mov
sub
insb
mov
and
lods
or
inc
orb
adc
mov
dec
sbb
inc
push
inc
fnstsw
scas
add
cs
adc
xchg
and
negb
pop
jp
xchg
leave
js
shl
mov
addr16
push
pop
sti
insl
adc
inc
mov
inc
cmp
jae
fucom
aad
ds
mov
jae
daa
shlb
mov
arpl
sbb
rep
and
jne
add
jo
movsb
into
jg
ret
bound
pop
mov
and
and
fwait
jmpw
clc
or
aad
mov
xchg
movsl
mov
jmp
popa
ss
scas
hlt
negb
mov
icebp
and
sahf
adc
mov
jne
das
cmp
cmp
dec
push
mov
cmpsl
push
dec
pop
es
in
cmp
add
call
mov
pusha
or
or
shll
cmp
iret
adc
mov
call
mov
or
adc
addr16
xor
jno
bts
int
pop
mov
xchg
lods
sub
aam
or
jecxz
jge
pop
hlt
jo
lret
pop
or
sbb
aam
adc
xchg
mov
cmc
sbb
cs
and
sub
pop
jl
movsl
jo
add
je
mov
imul
daa
js
push
push
inc
shr
cli
ror
in
es
sbb
mov
shlb
push
xor
lods
shrl
aam
sbb
mov
out
je
mov
add
jo
xorb
pop
mov
dec
push
push
or
call
in
shlb
cmc
adc
incb
push
cmc
or
insl
xchg
loopne
gs
outsl
sbb
jns
mov
jmp
shl
push
mov
adc
scas
loopne
sub
addb
or
loop
and
sbb
push
lods
mov
imul
scas
cltd
js
imul
push
inc
pop
dec
or
std
das
adc
push
iret
cmpsl
cld
adc
les
adc
xchg
xor
test
sbb
or
pop
std
cmp
es
mov
add
in
xor
mov
out
test
xor
test
shrl
outsl
jecxz
mov
sti
dec
insb
test
sbb
cmp
pop
leave
jae
xchg
adc
aas
push
or
ret
inc
imul
lock
sbb
icebp
insb
fcomp
lods
aaa
pop
jmp
push
enter
pusha
aad
push
cltd
jno
fcoms
push
mov
and
ret
mov
jbe
xchg
mov
push
xchg
push
insl
cmp
pushf
push
jmp
test
cmp
fstpt
mov
adc
add
es
pop
fldcw
mov
repnz
mov
sbb
addr16
ss
or
fsubrp
int
cmpsw
pop
add
outsb
and
cwtl
and
mov
add
cmpsb
pop
adc
mov
dec
ret
cmovs
and
in
fimuls
cld
inc
push
jecxz
les
push
andl
pop
xor
movsl
cmc
xchg
cmpl
rcr
lret
xchg
sbb
aas
fwait
imul
lret
scas
pop
xchg
jecxz
push
icebp
xchg
jns
inc
xor
das
lcall
lret
repnz
push
loop
cltd
ljmp
xlat
es
shr
ja
and
xchg
ret
arpl
cli
sub
int
pop
dec
shl
fldt
inc
mov
push
mov
mov
ret
fwait
lods
xlat
inc
xchg
dec
cli
push
mov
dec
stos
in
aaa
es
jl
mov
mov
cs
mov
lods
pop
xchg
or
int
loop
cmp
mov
push
mov
imul
push
or
insl
pushf
and
pop
rorl
dec
les
aas
jge
add
jo
shlb
or
popa
push
daa
push
in
fisttps
mov
sbb
xchg
or
loopne
dec
or
in
dec
addr16
mov
jne
int
mov
es
or
stc
leave
dec
ret
ds
repnz
shl
adc
aad
rorl
shl
or
stc
sbb
lcall
fidivrs
aad
push
mov
sub
std
inc
cmp
shll
mov
mov
idivl
mov
dec
push
cmp
mov
je
xchg
scas
or
dec
inc
mov
scas
push
ret
aam
sahf
pop
popf
xchg
mov
pop
dec
sbb
test
sbb
outsb
cli
xchg
mov
jge
mov
xchg
cmp
call
stos
jae
adc
cmp
scas
xchg
push
rol
pop
pop
xor
cwtl
mov
jns
dec
repnz
dec
cld
mov
aam
fbld
jb
mov
repz
jo
int3
dec
loope
inc
pop
in
dec
xchg
adc
pop
loop
cltd
andb
cs
push
xchg
mov
int3
cwtl
ja
lret
jnp
cmp
test
push
mov
push
push
scas
push
add
aas
dec
sub
pop
mov
test
sub
mov
pop
push
and
dec
lahf
mov
cmp
cmp
iret
ficoml
hlt
inc
ljmp
pop
inc
clc
mov
or
cmp
jnp
xchg
cwtl
pop
ss
add
loopne
imul
add
jae
xchg
mov
pop
pop
jg
mov
movsl
mov
xchg
ja
mov
dec
loope
sub
adc
mov
sub
data16
hlt
or
pop
dec
je
repz
inc
pop
inc
std
mov
push
mov
xchg
sbb
cmp
sbb
aas
mov
imul
jb
jg
or
stc
cmp
into
sub
pop
in
outsl
cltd
cmc
das
scas
mov
sbb
jns
out
scas
pop
mov
rcll
ja
rcr
mull
cs
mov
fwait
inc
sbb
jg
push
jle
dec
hlt
rolb
and
repz
cmp
fdiv
lahf
xchg
nop
pop
lret
inc
sub
push
push
cwtl
push
pop
insl
xchg
push
repnz
sub
arpl
xor
lds
mov
jo
filds
xor
adc
shll
in
dec
loopne
mov
ds
lahf
sbb
in
sub
sbb
inc
sub
mov
inc
insb
jg
mov
jns
lahf
cwtl
mov
or
and
sbb
pushl
sar
lahf
rorl
ss
jg
jb
mov
pop
xchg
cmp
movsl
xchg
cmc
push
cmp
dec
addl
out
lret
mov
insl
imul
mov
int
mov
push
out
arpl
push
cld
xchg
ret
pop
cmc
sbb
fwait
push
ficomps
mov
das
stos
cmp
jnp
out
dec
rclb
inc
fld
outsl
fldt
mov
dec
xchg
addr16
mov
pop
test
js
mov
xchg
lret
jmp
cmc
jecxz
mov
outsb
xchg
lea
mov
and
aad
sar
dec
xchg
and
adc
pushf
push
mov
insl
inc
push
push
sahf
jns
sahf
fildll
push
add
jmp
mov
pop
jp
cld
push
adc
daa
loope
mov
pusha
out
jo
ja
movb
xor
test
or
jge
adc
mov
popf
inc
rcl
add
fadd
test
xchg
aas
notb
fisttps
and
mov
rorb
mov
mov
mov
sub
pusha
add
adc
fcmovu
mov
jecxz
mov
idivl
or
pop
push
add
push
loope
cmp
adc
out
mov
outsb
mov
jb
fwait
cmpsb
std
and
mov
lret
xchg
jl
sub
cltd
pop
rcrb
xchg
cld
enter
jl
leave
popa
mov
lret
scas
jne
pop
jmp
ret
mov
xorl
das
leave
int
xor
dec
cmp
fcmovne
xchg
mov
fadds
xor
test
inc
insl
jg
pop
imul
repnz
fstl
dec
sbb
mov
stos
fistpll
add
mov
mov
lret
push
mov
nop
adc
imul
sti
push
sbb
test
ljmp
cwtl
inc
mov
mov
jp
jne
sub
and
jle
or
sbb
dec
mov
inc
shlb
jb
cmc
fstpt
jp
mov
out
adc
mov
adcb
cmp
cmp
jl
xor
cmp
cmp
in
add
sbbl
pop
pop
mov
mov
ljmp
xchg
mov
or
fmuls
xor
jns
mov
adc
repnz
jmp
shlb
pop
arpl
add
inc
fstl
cld
ret
imul
cmpl
repz
hlt
loop
cmpsb
bnd
into
pop
xchg
test
jge
arpl
outsb
test
mov
jae
int
inc
inc
mov
xlat
icebp
pop
inc
in
add
lahf
mov
jb
rcll
dec
ret
adc
mov
sub
jmp
add
das
mov
mov
dec
fisubs
push
xchg
movsl
pop
or
jl
inc
lcall
je
fucom
out
mov
jmp
xchg
mov
cmp
xchg
sbb
push
icebp
fcmovnb
loope
ja
jecxz
insl
add
inc
xchg
add
add
mov
xchg
mov
xor
mov
mov
jge
add
inc
cmp
scas
aad
test
mov
dec
popa
les
or
or
imul
inc
push
or
jnp
fbstp
add
movsl
add
lea
jae
imul
xor
push
scas
and
push
arpl
imul
mov
push
sbb
daa
dec
inc
je
mov
out
scas
cmp
pop
clc
adc
leave
xorl
in
outsb
das
stos
jmp
fadds
in
dec
and
sub
cmp
cmp
fdivl
mov
xor
lahf
shrb
test
and
sti
xchg
xor
adc
inc
cltd
repnz
and
jle
push
clc
fldt
mov
cmp
inc
aas
loop
mov
mov
and
mov
mov
xchg
pop
hlt
xchg
xchg
lcall
fsts
repnz
sbb
test
inc
scas
xchg
mov
inc
xchg
xchg
pop
into
jg
xor
test
ds
inc
aas
xor
mov
lcall
loop
adc
pusha
jg
and
xchg
fidivrs
adc
test
idiv
sbb
inc
int
dec
add
stos
adc
es
test
jne
or
adc
push
es
lds
inc
and
sub
movsb
lds
pop
cmp
xchg
cld
jp
gs
xor
imul
out
cld
js
or
imul
cmp
jbe
loope
adc
inc
adc
jmp
xlat
mov
jae
inc
out
nop
loop
ljmp
mov
xor
pop
les
shll
fs
jl
jle
rcll
jmp
inc
sbb
xchg
outsb
sbb
sbb
ja
gs
addr16
jp
movsb
or
outsb
dec
add
push
cmp
out
add
inc
push
push
jge
and
std
hlt
add
nop
sbb
aad
les
lds
ret
out
mov
rcr
dec
pop
popf
fdivl
enter
jne
jge
cmpsl
add
sbb
inc
es
scas
ja
mov
cld
loop
rcll
cmp
sbb
fmul
lret
inc
sbb
ret
inc
popa
in
mov
scas
and
push
and
rsm
dec
jb
movsb
pop
lods
adc
cmp
jmp
mov
sub
cwtl
shrb
add
xchg
stos
pop
cwtl
sub
out
aam
ret
cli
addr16
sub
or
inc
rcl
out
or
sub
mov
mov
nop
mov
sti
outsl
js
inc
jnp
sub
aam
dec
pop
dec
movsb
mov
add
dec
scas
mov
cmc
mov
dec
xor
mov
roll
pushf
out
and
xor
mov
insb
frstor
loope
iret
test
sbb
pop
testl
gs
jb
adc
out
add
dec
shrb
sbb
add
mov
fwait
sarb
sbb
push
or
rcl
cld
sub
cmp
fsubs
pop
rcrb
cli
repnz
push
xor
loope
fcoms
xchg
in
mov
jle
pop
aad
mov
stos
call
sbb
daa
loop
aaa
mov
mov
ret
lret
pop
or
testb
lret
jns,pn
jmp
in
mov
daa
inc
sarl
cld
xchg
pop
or
jae
sub
insl
fistpl
stos
les
sub
mov
cmp
outsl
sbb
cmpsb
testb
cs
jns
popf
gs
pop
ljmp
jno
or
fs
fnstcw
in
test
dec
movsb
js
cmpl
fisubl
aaa
mov
mov
stos
pextrw
cmpsl
mov
mov
jnp
mov
stos
xor
mov
xor
pop
cmp
pusha
xor
fsubl
add
push
fists
pop
mov
mov
sub
xlat
ss
jbe
dec
aaa
push
mov
or
pusha
cmp
fistps
xchg
lea
dec
inc
pop
xchg
mov
or
jmp
cltd
scas
xchg
cmp
jbe
or
or
adc
gs
roll
daa
add
mov
sbb
fstl
int
and
int3
mov
push
sub
xchg
or
push
mov
fisttps
lods
xor
push
pop
lahf
push
cmp
jl
push
call
sbbb
icebp
aas
xchg
push
subl
out
cmp
out
jnp
iret
push
inc
cmc
push
clc
sbb
repz
and
inc
lea
lds
push
scas
push
aam
mov
cltd
xchg
jo
aaa
pop
push
xor
iret
push
xchg
xlat
jmp
imull
mov
push
mov
mov
ds
setb
xchg
icebp
in
xor
loop
test
clc
or
sahf
push
dec
jle
outsb
adc
fidivs
jmp
adc
out
outsl
and
lock
or
xor
add
inc
shrl
inc
loopne
or
aas
outsl
or
push
jecxz
mov
sub
in
xchg
bound
inc
shlb
fdivl
into
mov
xor
inc
stos
inc
mov
loop
jb
push
fbld
test
in
dec
push
or
add
ss
test
jns
sub
ret
popf
out
xlat
sub
adc
shll
xor
cmpsb
xor
jns
test
mov
mull
fmul
xor
orl
push
pop
xchg
and
les
add
lods
pop
cs
jge
in
mov
mov
mov
xchg
aad
inc
insl
or
or
mov
idivb
inc
shrl
and
imul
mov
je
shl
shlw
mov
sbb
cmp
cld
inc
sbb
cmp
inc
sbb
sbb
cmpsl
dec
stc
adc
data16
push
jmp
repz
mov
aas
notb
iret
push
jo
roll
mov
xchg
xchg
push
mov
fcmovnb
mov
data16
std
insb
dec
daa
mov
out
flds
adc
sahf
test
jp
push
xchg
jmp
push
jns
pop
es
mov
scas
inc
pop
push
ret
adc
pop
inc
movsb
dec
mov
sub
bound
aaa
push
push
pop
or
shl
xchg
stc
dec
addl
mov
insl
push
cltd
cmp
outsb
and
in
sti
jmp
das
std
dec
sub
into
jo
adc
in
pop
movq
lret
mov
movsb
or
dec
dec
jno
imul
inc
sub
adc
sahf
fistpll
std
repz
bound
pop
test
fsubl
or
movsl
mov
icebp
sarb
pop
mov
cmp
xor
scas
stc
xchg
dec
int
icebp
fbstp
mov
outsl
xor
pop
add
insl
stos
imul
nop
call
jp
mov
jne
rclb
pop
pop
dec
and
ss
cmp
xor
daa
sub
mov
cwtl
fcmovnu
cld
mov
bound
xchg
insl
es
mov
andb
push
shrl
gs
repz
fs
cmp
mov
out
ret
push
inc
pop
add
testb
mov
icebp
bound
cwtl
or
std
xchg
cmpsb
sbb
aam
jne
inc
lds
xchg
xchg
das
pop
sti
jle
incb
iret
icebp
dec
leave
adc
enter
fs
sub
jmp
lds
jns
frstor
push
les
push
jg
shll
cmpb
es
adc
fs
pop
cwtl
xchg
or
dec
fcoml
fisttps
xor
lcall
mov
in
int
add
pop
leave
dec
mov
aaa
jg
lea
xchg
jl
ja
mov
shlb
outsl
lea
inc
fs
aas
call
lcall
sar
inc
scas
inc
in
ljmp
stc
dec
xlat
daa
and
mov
xchg
ror
gs
push
dec
or
mov
xchg
push
je
test
daa
jle
adc
popf
scas
lahf
cmpb
mov
push
lret
dec
or
insl
test
shl
jl
xchg
sahf
jg
sub
es
nop
mov
test
inc
mov
xor
adc
mov
mov
testl
shll
sub
cmp
jb
sub
lea
into
inc
push
clc
cltd
mov
xlat
rcl
mov
mov
in
xor
add
mov
jno
add
xor
push
mov
push
jbe
pop
pop
xor
call
loop
sub
sbb
inc
and
jmp
mov
sub
aas
push
enter
and
nop
or
loop
loopne
enter
stos
adc
cmp
call
add
cmpsb
lcall
mov
into
sbb
arpl
lahf
lcall
in
dec
lcall
lock
push
insl
out
pop
sbb
scas
shll
out
pop
xor
push
fidivl
fld
and
xchg
lahf
push
lret
ficomps
push
pushl
pop
das
add
pop
xor
nop
cld
shrb
mov
rclb
jbe
mov
mov
mov
mov
lods
jle
pop
sub
xchg
imul
pop
filds
push
hlt
jo
sbb
nop
fidivrl
xchg
mov
pop
loopne
xor
pushf
repnz
xor
xor
push
pop
cwtl
cmpb
push
pop
shrl
push
ret
mov
lock
loope
push
pusha
jno
pop
jmp
mov
sbb
lahf
cmpsl
test
inc
mov
jmp
push
or
lods
popf
mov
jmp
popa
jmp
stos
inc
mov
ret
stc
loopne
repz
sbb
sbbl
add
aaa
les
sti
pop
add
ss
or
push
push
push
fwait
sub
push
jle
dec
cvtdq2ps
jo
test
xor
rol
jmp
mov
mov
mov
or
shrl
popa
mov
mov
and
cwtl
cmp
repz
xchg
mov
or
push
jno
xchg
hlt
add
mov
popa
mov
movsl
clc
outsl
out
jecxz
push
leave
pop
mov
iret
dec
fdivrs
xor
mov
mov
mov
xor
fsubr
mov
adc
and
fistl
mov
xor
mov
popa
iret
mov
mov
jmp
mov
xor
lods
and
scas
aas
lcall
jl
lret
push
and
add
cltd
into
push
dec
inc
popf
lahf
cltd
cmpsb
cmp
push
cltd
sbb
sub
mov
inc
out
jmp
inc
adc
push
punpcklwd
inc
repz
gs
js
mov
lods
adc
mov
jge
add
dec
imul
addl
adcb
imul
mov
stos
cwtl
and
out
mov
in
dec
insl
enter
fadds
shr
push
push
cs
in
pusha
scas
sub
push
test
mov
lahf
sahf
and
sub
pop
rorl
pop
push
popa
mov
mov
mov
mov
add
add
stc
adc
push
rcrl
sbb
aaa
inc
inc
mov
iret
cli
int3
int
scas
inc
mov
mov
sub
pop
add
cmp
inc
filds
jno
sahf
insb
mov
sbb
push
lret
arpl
lcall
in
and
ja
aam
cltd
gs
imul
or
xchg
mov
test
loop
xchg
pop
aaa
insb
xor
inc
push
mov
xchg
daa
mov
xor
lods
popf
ficoms
in
jb
mov
ret
leave
inc
ret
scas
adc
arpl
xchg
sbb
pop
leave
mov
sub
into
push
push
mov
out
fcmovnu
jne
xorb
repz
ss
imull
call
mov
cltd
fisubrs
mov
xchg
jb
inc
cmp
outsb
xchg
sub
std
sar
ret
adc
rorb
or
jae
iret
sub
pop
inc
ss
pcmpgtb
and
push
lea
loope
push
dec
ds
loopne
sub
dec
stos
jmp
xchg
stc
stos
ja
inc
and
and
sub
cwtl
fidivl
scas
xor
shlb
push
es
insl
sub
lds
fcmove
xchg
fwait
into
pop
cwtl
add
shrl
adc
adc
out
xor
sbb
fidivrl
add
out
xor
mov
shrb
mov
mov
out
cwtl
movb
mov
popaw
adc
lea
adcb
mov
sub
lock
mov
mov
mov
inc
add
cmpsl
pop
bnd
mov
jl
popa
inc
cmp
dec
mov
dec
cmc
movsl
mov
sbb
mov
push
adcb
jnp
movb
sub
xor
repnz
dec
std
imul
sbb
dec
sub
pop
fmul
jg
cmp
lret
dec
push
xor
dec
daa
jno
ret
pop
jecxz
das
xor
imul
push
and
in
sti
sub
les
lods
add
fiaddl
loope
scas
gs
inc
xor
cmp
or
dec
mov
cwtl
ja
xchg
sbb
add
testb
iret
frstor
fimull
mov
inc
mov
insl
jae
addr16
test
mov
adc
xor
and
inc
ja
mov
mov
mov
pusha
dec
and
xchg
aaa
cwtl
push
xchg
xor
shll
in
mov
mov
notb
ss
xlat
mov
pop
shl
xchg
push
pop
insl
dec
aaa
andb
int
clc
add
mov
pop
scas
sar
pop
fsubr
pushf
xchg
sarl
push
dec
jle
inc
call
xchg
cli
push
dec
outsl
sub
and
jmp
xor
hlt
sti
jp
idivb
movsl
pop
test
fdivs
adc
fimuls
rcrb
stc
std
mov
push
imul
icebp
repz
insb
scas
stc
dec
cmp
and
lods
xor
test
jno
cwtl
cli
push
cmpsl
faddl
shrl
insb
push
pop
mov
add
cli
sub
jle
mov
ja
outsb
popa
in
pop
jle
dec
xchg
lods
push
ret
adc
data16
sti
lret
bswap
pop
imul
or
xchg
pop
ror
gs
scas
mov
int3
sbb
and
sub
repz
fsubrs
cmpsb
aas
fdivrl
ror
sub
sti
int
cmpl
inc
hlt
xchg
add
fmull
std
add
mov
test
mov
mov
sbb
orb
inc
sub
cs
dec
jg
imul
mov
mov
pop
enter
inc
pop
dec
pop
add
sub
sbb
sbb
sahf
jbe
cmpsl
adc
cmp
insb
lret
stc
mov
sbbb
sub
mov
sub
xor
data16
fcmovne
mov
shrl
or
pop
add
sahf
loope
lods
repnz
shlb
sbb
movsb
cmpsb
sti
adc
lods
pushf
add
es
pusha
inc
imulb
sub
cli
movsl
mov
lret
insb
out
insl
ds
aad
fnstcw
add
aaa
xchg
xchg
sbb
pop
std
lahf
xchg
mov
or
mov
adc
mov
in
neg
cmp
movsb
xchg
fucomip
mov
xor
cmp
es
jmp
mov
xchg
xchg
rclb
pop
fwait
mov
ret
sub
jb
adc
mov
xchg
jle
sarl
lods
or
arpl
inc
mov
dec
outsb
xchg
test
lods
push
adc
jmp
cmp
incb
ds
insb
outsl
xchg
sub
pusha
aaa
je
push
and
xchg
outsl
insb
mov
push
popa
push
iret
std
push
adc
test
out
clc
jnp
jl
ljmp
das
mov
fistpl
lea
jno
das
stos
inc
push
cmpsl
jge
addr16
push
mov
in
adc
int
xor
fdiv
push
push
dec
xlat
clc
scas
dec
pop
loope
push
adc
xor
outsb
inc
jp
sub
push
out
not
loope
aaa
push
push
inc
aad
pop
jmp
mov
insb
mov
xchg
test
arpl
data16
loope
leave
jo
mov
popw
pop
dec
jbe
sbbl
in
jae
push
xor
pop
xchg
adc
pop
mov
repnz
neg
dec
sub
jmp
fidivs
sti
fidivrl
mov
push
jo
mov
aas
or
jno
xchg
aad
hlt
jbe
scas
jecxz
into
mov
aam
inc
es
pop
stos
jecxz
icebp
ret
pop
or
jecxz
lods
push
ret
or
adc
lods
cmp
adc
repz
and
xchg
mov
pop
mov
test
cs
rorl
jns
out
sete
pop
add
fadds
cmp
lods
mov
aas
and
je
pop
cmpsl
mov
jo
mov
mov
movsb
mov
aaa
add
lods
lret
aam
cmpps
mov
aaa
mov
out
flds
jge
mov
mov
xor
inc
jecxz
dec
stc
adc
and
dec
mov
xchg
movsb
pusha
fbstp
mov
push
inc
les
mov
inc
jg
push
inc
cli
inc
sbb
movsb
xlat
cmpsb
inc
into
negl
dec
push
test
fistl
sub
lahf
xlat
loopne
push
into
mov
leave
pop
pop
cmp
add
or
adc
pusha
lcall
lock
fbld
lds
cmp
sbb
or
lock
and
out
and
cmp
test
andb
jmp
call
mov
or
inc
sti
lahf
mov
negb
jecxz
jg
imul
push
mov
ret
jmp
aad
stc
js
push
icebp
cmp
jb
fdivrl
pusha
xchg
inc
jecxz
outsl
lods
leave
je
sub
lds
icebp
ret
clc
arpl
or
pushf
stc
jl
sbb
scas
das
cltd
cmpsb
mov
xor
mov
test
mov
in
aad
xorl
inc
mov
inc
fdivs
ds
dec
sub
xor
push
int3
mov
mov
mov
imul
jb
xchg
imull
jle
pop
aam
ror
cmp
mov
mov
cltd
clc
das
inc
sti
cli
cltd
nop
fdivrp
insb
cmp
jns
js
jbe
cmp
xchg
repnz
mov
lods
dec
mov
in
insb
aam
sahf
movsl
inc
xor
mov
aas
aad
xor
mov
cmc
mov
adc
jmp
adc
jmp
mov
aaa
mov
int
dec
sbb
adc
add
xor
fldcw
sub
jnp
sbb
cmp
shll
mov
scas
leave
pusha
push
sbb
push
sub
xchg
pop
cld
fcmovb
jns
clc
jge
loope
ficoml
dec
dec
push
jne
inc
add
mov
popf
push
pop
add
iret
repnz
mov
out
jl
sahf
rcrl
in
lods
iret
and
mov
sbb
pop
std
in
in
movsb
lea
mov
mov
mov
push
push
into
rorl
push
sub
std
xchg
outsb
sbb
mov
jge
or
out
mov
mov
mov
test
mov
sarl
ljmp
sbb
cmp
jp
pop
rcrb
push
fidivrl
pop
imul
sbb
xchg
or
sbb
outsb
out
dec
je
inc
lret
push
pop
mov
inc
mov
push
cmpsl
sub
jno
ret
xlat
rclb
test
jb
xchg
loope
testb
in
adc
jno
mov
push
push
icebp
or
movsb
fs
inc
je
mov
pushf
cmp
aam
repnz
std
push
push
repz
mov
xor
outsb
jae
mov
cmpsb
xchg
out
push
dec
xchg
mov
shll
fistl
pop
pop
mov
mov
mov
jns
shll
test
dec
jmp
push
inc
jns
xor
test
jmp
aaa
add
fstpt
stos
insl
mov
stos
adc
sub
cld
in
hlt
notl
js
outsb
mov
jp
cmp
das
cmc
xchg
jmp
jle
das
leave
icebp
int
cmpsb
cld
jb
xchg
inc
sub
push
xor
xchg
bound
push
arpl
imul
frstor
mov
in
stc
mov
jns
pop
mov
out
scas
push
pop
sahf
test
sub
sbb
jp
jp
inc
xchg
adc
sbb
ret
popa
hlt
pop
jns
mov
cmc
sub
jnp
cltd
adc
adc
xchg
leave
rcl
cmpsl
cmpl
push
lock
insb
stos
call
rorb
sub
cmp
in
push
sarb
jno
inc
imul
and
dec
ror
add
fimull
push
adc
mov
ret
adc
jo
and
loope
and
cmp
int3
inc
hlt
or
repnz
xor
sbb
sub
lock
out
ret
cld
lods
cmp
insb
xchg
dec
mov
mov
and
ds
insl
fcomi
fisttpl
push
repnz
movsb
roll
inc
shll
cwtl
in
and
cmp
xor
fwait
movsl
push
add
incb
cmp
jmp
add
sub
mov
sub
scas
int3
lret
mov
or
orb
lods
leave
repnz
jb
xchg
std
or
mov
fwait
clc
xlat
cmp
bound
fimuls
fmulp
stc
in
std
mov
adcl
insb
mov
dec
les
xlat
sub
shrb
push
add
fdivrs
sbb
cmpb
ja
icebp
icebp
ljmp
jmp
push
mov
sbb
inc
cmpsb
pushf
daa
fdivrp
pop
bound
stos
out
push
mov
cmp
loop
xor
andl
fcompl
lds
call
mov
push
ret
aaa
sbb
arpl
repz
test
or
push
js
andb
lret
fimull
enter
shlb
mov
and
add
in
int3
jae
jno
jl
call
aam
pushw
inc
mov
xchg
sarl
fiadds
cmp
push
adc
and
outsb
inc
cmp
inc
mov
push
cmc
pushf
shll
dec
push
je
cli
lods
push
xchg
mov
or
sbbb
movsb
outsl
rorb
out
aas
sub
sub
lods
mov
or
mov
les
jl
in
call
xchg
add
iret
push
pushf
lahf
and
scas
fiaddl
inc
mov
adcl
jle
xchg
fmuls
or
hlt
push
das
pusha
loopne
lods
mov
scas
ss
outsl
shll
lods
mov
jl
or
inc
sbb
int3
shll
psubusw
pop
xchg
loop
std
jmp
nop
les
cmpsb
add
dec
cmp
xchg
mov
push
cs
mov
add
jg
cwtl
inc
movsb
adc
inc
lods
and
and
pop
jg
in
push
stc
xlat
arpl
pop
inc
pushf
movsb
inc
dec
test
adc
adc
das
jae
sub
sti
movsb
test
mov
cld
sub
enter
mov
cwtl
repz
push
xor
inc
scas
cmp
xorl
call
cwtl
movsl
push
mov
and
add
pop
push
mov
cmc
inc
loop
jne
les
std
daa
aam
fstpt
jmp
int
mov
push
jo
inc
pop
fmul
pusha
cs
pop
aas
xchg
loop
rol
sbb
lock
sarl
adc
mov
enter
and
test
mov
mov
cmc
inc
loopne
cltd
iret
dec
inc
fsubs
mov
fs
dec
ljmp
sbb
mov
pusha
imul
pop
bound
cmp
inc
jb
pop
inc
mov
fs
punpcklbw
es
pop
fwait
sub
jnp
call
stos
cmp
and
push
insb
test
jns
xchg
push
adc
fimull
fadds
adc
cli
stc
lret
or
lret
sti
cwtl
enter
add
inc
ljmp
jno
jecxz
sub
xor
and
mov
adc
test
inc
push
inc
adcb
pop
sub
sub
mov
loop
cmpsl
and
sub
dec
mull
push
or
cmc
out
gs
mov
dec
daa
cmp
negb
push
jns
bound
imul
push
hlt
out
cmp
push
inc
rcr
push
adc
mov
and
into
and
sbb
lods
faddl
outsb
das
test
scas
adc
rorb
repz
add
movsl
lret
sbb
push
jle
into
push
into
and
jp
cmpsl
xchg
imul
shlb
mov
adc
xchg
ljmp
mov
dec
jle
push
xor
aaa
popa
mov
dec
or
dec
ror
data16
jns
es
test
dec
mov
mov
mov
std
lods
scas
lds
mov
andl
inc
mov
or
pop
std
sbb
jmp
mov
icebp
mov
and
repnz
aas
imul
push
push
push
mov
jecxz
adc
sbb
je
inc
leave
or
cmp
scas
insl
es
xchg
dec
inc
dec
push
scas
aad
mov
or
and
cmp
es
mov
mov
lcall
mov
and
lea
jle
int
xchg
mov
jg
testb
mov
xlat
push
xchg
cwtl
roll
repz
sub
sub
aaa
or
lcall
int
leave
cmp
push
scas
outsb
stc
jge
cmpsb
cltd
mov
sbb
std
pop
inc
pop
loopne
sub
lods
pop
cwtl
mov
push
sub
cmp
cwtl
shll
dec
cmpsl
xchg
lret
xor
cmp
xlat
ss
add
xchg
jo
cmp
jp
es
dec
fistl
xchg
adc
jg
or
lret
sti
pop
mov
call
out
testb
lcall
xor
sar
dec
pop
in
fdiv
mov
add
addl
inc
pushf
lods
adc
loope
dec
and
adc
shll
and
test
mov
push
jo,pt
in
mov
insb
ror
mov
out
add
in
pop
inc
scas
xor
xchg
and
out
arpl
jae
pop
fistl
inc
push
movsl
push
or
cmpsl
dec
push
lret
cmp
mov
sbb
xchg
add
ffree
and
lods
stc
push
popa
mov
aad
fbstp
ds
mov
jbe
mov
mov
mov
inc
xor
pop
jle
xchg
jae
outsl
cmp
adc
mov
aam
mov
adc
push
test
mov
mov
cltd
xor
xchg
cmp
mov
push
fidivs
mov
push
sbb
fmull
pop
loope
cmp
es
push
jge
in
iret
leave
xchg
mov
pusha
jle
dec
out
dec
adc
pop
jge
sbb
hlt
out
sarb
pop
jne
lahf
xor
enter
aam
mov
jbe
and
adc
cmpsl
ds
mov
sarb
add
ret
push
lret
or
lods
rorb
pop
push
push
insb
jo
insb
dec
push
fnsave
or
jmp
aad
jnp
lock
and
into
push
jns
int
int3
xchg
gs
xchg
mov
mov
mov
into
sahf
gs
aaa
inc
es
repz
push
xlat
pop
pop
js
hlt
call
mov
jo
and
mov
sti
scas
mov
addr16
pop
sub
rcll
ljmp
out
add
cs
inc
ljmp
in
aaa
sbb
out
push
mov
sahf
cmp
adc
data16
xchg
lock
add
cli
ss
mov
movsb
pushf
push
and
adc
test
imul
scas
out
scas
fisttps
cmp
mov
iret
lods
out
inc
xor
push
movsb
mov
push
fisubl
mov
das
repnz
insl
jne
pop
iret
in
pop
mov
ret
subb
call
pop
mov
push
mov
add
and
in
inc
add
jbe
inc
jo
sarb
lea
dec
adc
push
scas
test
not
mov
mov
cmp
cmpsb
dec
jnp
push
add
rolb
scas
lcall
sbb
das
jl
jecxz
ret
xor
cltd
push
testb
push
cltd
jbe
test
popf
push
jecxz
add
mov
mov
inc
sbb
gs
clc
sti
repnz
scas
adc
or
mov
push
and
aas
mov
or
sub
jb
add
xchg
dec
mov
adc
xchg
aad
out
fisttpl
fimuls
lods
sbb
fldcw
insl
sbb
rolb
popa
or
xchg
xchg
mov
inc
inc
stc
ja
hlt
push
stos
add
orl
mov
sub
sbb
pop
pop
dec
cmp
sbbb
popf
mov
inc
inc
aaa
test
or
iret
mov
jns
lods
or
xchg
xchg
cmc
mov
and
psrad
pop
lock
pop
mov
and
movsb
inc
xchg
ja
push
inc
jecxz
jnp
mov
dec
lock
push
cltd
das
mov
sub
or
int
mov
mov
movsb
out
inc
mov
repnz
xchg
outsb
jmp
stc
jg
dec
xor
push
call
xor
test
cwtl
xchg
lret
cli
sub
add
mov
adc
mov
fwait
stos
cmp
cmpsb
sbb
mov
das
dec
stos
jecxz
jnp
sub
imul
pop
mov
sbb
negl
lds
loop
sti
add
orl
add
xchg
stos
cltd
lods
xchg
divb
pop
dec
and
lods
xchg
and
popf
ljmp
inc
sbb
push
int
cmp
sub
mov
dec
jg
xor
cmp
or
jg
mov
in
xchg
xchg
cmp
mov
bound
mov
loop
les
jne
xchg
insl
xor
mov
sbb
insl
adc
lcall
dec
imul
cmp
repnz
hlt
sarl
mov
and
sub
repnz
rorb
mov
cltd
adc
into
mov
xor
push
mov
sbb
jg
shrb
xchg
jb
sbbl
cmp
inc
dec
hlt
and
jo
cmpb
stc
outsb
pop
or
mov
push
je
xlat
inc
or
cs
imul
jg
rcrl
pop
test
cmp
push
pop
dec
push
dec
inc
cmp
popf
cmp
fstps
aad
xor
test
jp
call
ljmp
fstpl
addr16
ds
push
hlt
mov
rcrb
dec
dec
xchg
xchg
sub
add
in
inc
fdivr
pop
loope
cmc
dec
fucomp
push
bound
cli
mov
iret
sub
pushf
int
xchg
in
pushf
xchg
push
addr16
setl
std
mov
roll
loop
xchg
shll
in
fs
adc
push
idivb
in
xor
outsb
stc
aam
xchg
mov
cmc
test
sti
lret
push
iret
jge
or
inc
and
pop
jns
insb
cs
test
jecxz
lea
pop
dec
aad
push
inc
inc
jg
push
and
push
cmp
xchg
outsl
call
mov
rorl
movsl
test
cmpsb
in
mov
mulb
ja
jle
xor
or
inc
xor
pop
jg
arpl
cmp
and
rcr
std
or
push
adc
bound
cs
add
sarb
clc
shl
or
dec
mov
cmp
cmp
pop
sti
aam
inc
sub
dec
cmp
shlb
push
leave
dec
and
pop
cmp
rcrl
mov
pop
inc
movsl
es
cld
mov
sahf
dec
imul
fisttpl
xlat
jmp
mov
mov
inc
jno
int3
lret
push
add
cmp
cmp
or
fisttpl
fiadds
aad
sahf
fldenv
jnp
or
pop
and
sub
insl
std
icebp
sub
xchg
mov
stos
jl
mov
in
xchg
lahf
das
mov
aas
sub
nop
test
test
mov
jp
jne
jne
or
dec
mov
or
adc
scas
into
adc
outsl
insb
sub
adc
add
dec
imul
sti
std
lahf
in
ret
or
adc
pusha
inc
divb
mov
push
inc
insb
push
js
sbb
out
lret
or
push
mov
je
xlat
lcall
test
fisttpll
out
stos
jle
out
cltd
mov
outsl
call
repnz
or
cmp
push
fcos
enter
cmp
or
jno
mov
hlt
push
ljmp
xor
xor
daa
shlb
sti
sbb
add
stos
test
and
es
push
push
leave
lcall
and
or
leave
ret
mov
dec
or
loop
mov
out
jecxz
adc
mov
add
cmp
push
mov
arpl
jecxz
in
push
dec
mov
shlb
pop
xor
in
mov
sarb
pop
pop
sti
pop
xchg
xor
mov
mov
aaa
sbb
insb
fisubl
aad
clc
or
lahf
jl
inc
clc
add
add
mov
daa
xchg
pop
outsb
or
mov
gs
dec
sbbb
push
or
fwait
ja
cmp
rcl
lahf
inc
js
add
dec
inc
push
test
or
rorb
cmp
pop
scas
or
cmp
push
mov
es
out
adc
xchg
loop
dec
and
push
pushf
dec
sbb
xchg
repnz
add
sahf
gs
dec
out
xchg
push
xchg
inc
mov
mov
aad
sub
or
stos
cltd
cmpl
mov
add
add
sub
aaa
les
insb
jbe
dec
sub
adc
out
xor
pop
fnstcw
xor
jns
imul
pushl
lods
sbb
xchg
out
int3
inc
inc
test
sbbl
in
aad
aas
sahf
outsb
mov
xor
mov
lds
out
push
sub
dec
rclb
jo
push
aad
push
in
inc
mov
inc
cmp
pop
fsubs
out
aas
cmp
mov
ljmp
lret
loope
push
push
mov
cmp
lods
jnp
push
cmpsl
jae
lock
cmp
call
shr
test
loop
xchg
arpl
int
lock
jae
test
push
dec
inc
fisttpl
inc
outsl
nop
rorl
daa
jo
or
pop
dec
xor
in
imul
jb
ret
xlat
or
push
lret
cmc
les
sbb
cmp
fisttps
xchg
dec
sbb
jp
rorb
cmp
xchg
mov
sbb
jmp
mov
dec
push
push
pop
inc
fidivs
loopne
sbb
rcrb
scas
mov
dec
sbb
add
mov
out
mov
cmc
add
aam
push
stos
aas
and
into
cmp
clc
sbb
pop
stos
pusha
fsubs
fsub
adc
out
cmp
fsubrs
pop
pusha
pop
xchg
mov
mov
adc
test
movsl
imul
xchg
mov
pop
pop
in
xchg
scas
inc
hlt
push
lcall
aaa
or
aad
std
cs
test
scas
sub
test
test
add
arpl
xchg
popa
movb
test
adc
faddl
dec
and
fsubr
arpl
pop
test
mov
xor
outsb
js
pop
push
mov
xchg
inc
xchg
and
push
call
cs
out
inc
addr16
mov
bound
push
popf
or
jnp
adcb
pushf
fwait
in
jmp
pop
incb
adc
stc
push
and
mov
pop
add
xor
cmp
add
mov
lods
mov
sbb
cwtl
cmp
or
movsl
xchg
push
in
and
sub
sbb
mov
lods
sbb
xor
fdivr
push
dec
cmc
pop
fimull
mov
push
dec
pop
fbld
xor
test
jns
call
loopne
aaa
popa
xchg
sub
outsl
out
data16
in
enter
mov
push
push
jb
test
mull
xchg
aaa
inc
jae
push
popf
out
push
push
mov
xor
push
inc
rorb
hlt
fnstenv
es
mov
stc
push
dec
aas
mov
pop
jns
dec
mov
jb
mov
enter
push
mov
adc
jne
jb
push
or
jo
pop
sti
sar
xchg
andl
hlt
cmp
or
push
add
and
pop
lret
and
xchg
ret
in
test
outsb
in
jnp
ja
inc
and
idiv
inc
sbb
adc
jb
fistps
add
outsl
add
imul
int3
cmp
sbb
call
sbb
nop
dec
xchg
jbe
cld
pusha
cmp
fsubs
dec
or
mov
push
jl
inc
add
mov
jns
cmpsb
cltd
cmpsl
lods
push
jmp
js
fidivs
push
icebp
je
dec
mov
push
mov
mov
dec
outsb
xor
ret
jp
push
xor
cltd
mov
push
dec
ljmp
xor
mov
mov
sub
and
decl
mov
sbb
mov
inc
aas
aas
dec
add
mov
mov
mov
mov
add
cmpsb
div
clc
jne
out
mov
push
push
fwait
addl
out
rorl
push
sub
testb
call
lock
push
add
mov
ja
out
stc
mov
mov
dec
imul
sbb
add
daa
cmp
cmp
xchg
cmp
dec
pop
push
cmpsl
pop
cmp
xchg
hlt
xor
aam
es
insb
mov
ret
scas
ss
cli
jno
lds
jns
xor
testl
inc
mov
jmp
xchg
pop
cs
cmp
push
out
mov
ja
lret
mov
add
adc
adc
clc
mov
jg
mov
push
sub
inc
fldt
js
dec
sub
pop
add
loopne
inc
jp
gs
cmc
pop
loope
mov
rcl
push
testl
in
cli
xor
mov
lret
fldt
dec
push
fistpll
dec
lods
adc
inc
dec
sbb
les
mov
faddl
push
out
sub
xor
and
pop
loop
sub
fcomps
icebp
mov
jae
cmp
subl
loop
jmp
mov
or
and
aad
iret
mov
mov
mov
jae
cmpsb
je
jmp
ret
inc
and
sub
mov
orb
aad
icebp
loope
push
jnp
push
jge
jmp
scas
add
mov
fs
fs
mov
sub
js
sbb
int
xor
xlat
cltd
or
adc
xor
xchg
test
enter
or
jmp
insl
addb
mov
sub
movb
and
mov
mov
pop
jo
lods
adc
and
lret
icebp
ljmp
fcmovnu
or
push
cmp
aad
data16
or
sbb
sbb
mov
lea
test
or
movsl
das
inc
cld
mov
cld
insb
xchg
xchg
inc
dec
shlb
stos
sub
mov
cs
jae
cltd
sbb
ja
and
jne,pn
sbb
or
mov
mov
stc
pop
ret
sub
in
jmp
cmp
mov
push
loopne
pop
sbb
push
lahf
add
rorl
into
out
and
lds
pushf
lcall
call
lret
inc
popf
and
xlat
cltd
or
cmp
inc
jmp
sub
int
cmp
jne
shl
loopne
pop
xchg
js
ljmp
xchg
aad
push
mov
push
out
pop
and
repz
push
ret
mov
add
and
test
cs
mov
arpl
das
ret
ds
xchg
cmc
or
xor
leave
or
add
stos
mov
test
hlt
mov
or
xchg
cltd
inc
inc
pop
fcmovb
push
and
dec
mov
adc
ljmp
jmp
jae
mov
cmp
inc
stos
mov
fsubrp
out
imul
pop
rorb
std
lret
rcrl
aaa
pop
sub
test
out
scas
dec
sbb
mov
inc
inc
ficoml
xchg
mov
std
pop
mov
xchg
imul
mov
jne
jg
cmp
daa
mov
out
loop
adc
mov
xchg
fldt
cmp
xchg
pop
inc
ja
or
inc
into
xchg
lods
outsl
sbb
test
add
and
jbe
xchg
call
pop
loopne
fsubl
pop
shll
dec
xchg
pop
lea
gs
inc
inc
push
stc
aas
lret
pushf
dec
rcrb
jl
xchg
out
ss
mov
sub
push
xor
dec
test
fistpl
inc
in
std
outsl
mov
inc
notb
lahf
dec
or
stos
cmp
dec
xor
testl
hlt
add
repz
pop
fstpl
out
mov
push
gs
stos
cmp
sub
xchg
xchg
test
xor
stos
lds
gs
add
xchg
insl
mov
das
addl
xor
lahf
andl
fdivs
push
sbb
pop
ds
test
push
cmp
add
movsl
aad
or
dec
dec
notb
adc
cmp
push
aaa
jnp
sub
push
dec
xchg
add
dec
mov
stos
dec
push
cmp
add
add
test
mov
push
mov
ffree
lds
xchg
insb
xchg
imull
add
cs
xchg
xchg
adcb
ret
push
sub
imul
xor
mov
iret
dec
jae
cli
adc
movsb
mov
mov
mov
imul
xchg
pop
outsb
repz
in
xchg
adc
push
lret
xchg
aad
rclb
and
pop
jo
push
icebp
xlat
jno
scas
mov
les
dec
and
testb
std
mov
add
fwait
rcl
mov
push
negb
out
pop
insl
mov
jno
pop
push
mov
dec
jo
fs
cmpsb
nop
dec
fldenv
add
int3
push
cli
test
fwait
stc
int3
inc
mov
mov
pop
xchg
nop
mov
and
fucomp
mov
pusha
xorl
adc
mov
xor
gs
xor
xchg
mov
jb
sbb
or
jp
sbb
push
loopne
ficomps
push
pusha
jne
inc
mov
out
cmovns
lock
sub
xor
sbb
xchg
jno
add
mov
ret
mov
repnz
repz
popf
xor
mov
rclb
xchg
add
fwait
sub
jmp
pop
jl
add
repz
scas
sbb
out
jg
arpl
sbb
mov
inc
pop
lds
or
inc
jb
cli
inc
jle
push
mov
out
or
stc
cmp
gs
mov
jno
orl
and
xchg
jo
jbe
sbb
add
cltd
xchg
cmp
ret
sub
movb
mov
cmp
rorl
xchg
js
push
jg
adc
sbb
cmc
inc
cld
sub
cli
outsb
and
frstor
into
mov
daa
cmpsl
lea
xorl
loop
sub
inc
sub
adc
pop
mov
loop
or
pop
mov
jo
scas
insb
fiadds
mov
imul
add
cld
xchg
xchg
push
adc
ja
aam
sbb
clc
push
sbb
and
sub
iret
inc
flds
hlt
hlt
xchg
filds
setge
dec
jns
loopne
sub
les
adc
fisubs
mov
jno
push
sarl
pop
sbb
addr16
jns
outsb
jo
data16
jb
shr
arpl
mov
push
jne
jmp
mov
cs
leave
xchg
pop
and
aad
jnp
mov
inc
test
loop
icebp
icebp
cli
or
das
dec
lret
mov
lret
incl
shl
sbb
cwtd
jae
sarb
cmc
mov
push
mov
jecxz
hlt
hlt
mov
adc
add
inc
sub
lahf
test
fs
pop
ret
inc
sub
sti
sti
xchg
jge
dec
mov
jmp
push
js
cmp
inc
cwtl
or
or
mov
jno
mov
push
mov
movsb
push
out
inc
inc
out
mov
bound
jne
adc
mov
fcoms
int
mov
sbb
cmp
sbb
or
decl
adc
jne
mov
lock
add
mov
sbb
and
lea
sti
push
dec
fnstsw
fsubl
push
mov
xchg
cmpsb
cmp
and
scas
xchg
ret
pop
gs
cmpsl
ds
call
xchg
xchg
mov
xchg
insl
movsl
inc
test
sbb
sbbb
out
fs
dec
jb
push
xor
push
lcall
lret
aam
add
and
pop
push
ljmp
popf
xchg
mov
push
or
sub
jmp
push
nop
jbe
aad
push
les
lods
fidivl
int
inc
out
rclb
lahf
lods
push
cmp
or
xor
add
call
pop
cmp
xchg
and
dec
addr16
push
and
int
sub
out
mov
jle
jo
xor
xor
sti
repz
stc
inc
out
mov
add
mov
mov
xchg
add
pop
ret
sub
cmpl
mov
clc
addr16
and
adcl
add
fucom
sub
fstpt
jno
cld
mov
fstpl
inc
sti
ss
or
pusha
lcall
movsb
jmp
lock
xchg
push
dec
mov
test
sub
repnz
lock
jmp
sti
push
ljmp
movsb
aas
ja
adc
or
add
mov
or
clc
rcrb
ret
pop
leave
cmp
xchg
push
pop
push
mov
mov
jns
sbb
loopne
arpl
mov
repz
rclb
lea
dec
fwait
bound
je
movups
ljmp
enter
inc
inc
mov
cltd
and
testb
stc
es
dec
or
mov
adc
push
rorl
xor
inc
dec
fisubs
mov
or
cld
in
fs
les
cmp
and
faddl
lret
out
sbb
iret
jmp
ss
mov
mov
push
inc
int3
add
sub
xor
xchg
sub
and
popa
test
test
mov
push
mov
xchg
sub
xchg
pop
dec
jg
scas
in
nop
mov
ja
pop
mov
ds
mov
aaa
xor
out
push
std
add
sbb
call
xor
xchg
xorb
js
mov
inc
mov
xor
call
mov
mov
test
cmp
jno
dec
fisubs
sti
and
lret
xlat
ja
pop
mov
rcrl
push
repz
sahf
xor
insb
jae
lret
shrb
sub
cmp
loope
mov
or
xchg
jg
or
dec
arpl
enter
pushf
push
lahf
stos
dec
shll
mov
in
movsl
fidivrs
jmp
cmc
lret
shl
mov
sarl
jmp
sbb
in
cmpsb
jae
mov
cmp
jae
sbb
enter
add
cmp
pop
cmp
outsl
jmp
inc
sbb
addr16
and
rcr
inc
xchg
jmp
jle
fnstenv
xor
sub
test
jne
and
test
mov
xor
inc
mov
jnp
in
xor
outsb
add
cltd
and
ret
inc
test
sub
outsl
jne
xor
adcl
sbbb
adc
fwait
negl
mov
inc
dec
pop
fisttps
pop
out
outsl
push
int3
adc
repz
call
sub
or
xor
xor
nop
mov
fs
int
int3
outsl
adc
pop
mov
cmpsb
pop
xor
into
arpl
ss
mov
mov
leave
cltd
cmp
loop
xlat
sbb
hlt
jb
in
pop
sbb
out
sub
les
inc
loop
xor
add
cwtl
fistps
and
pop
sbb
mov
stos
data16
mov
mov
jge
pop
cmpsl
inc
cmp
cltd
fcmovnb
and
insb
fdivrl
aad
insb
jbe
fwait
dec
dec
lret
cmpsl
fisttps
jae
inc
iret
sub
xor
icebp
dec
sub
jl
mov
notl
pop
jns
cs
push
aam
cmp
and
adc
cmp
andb
add
or
test
pop
cmc
xchg
adcb
dec
mov
in
in
into
xchg
xchg
fistpl
test
push
sarb
adc
orl
insl
jnp
in
test
out
loopne
jno
inc
xchg
mov
popa
aad
test
dec
push
in
inc
or
or
or
xor
jne
lock
mov
das
add
das
and
js
mov
test
push
sahf
dec
push
adc
lea
lods
outsl
bound
adc
jnp
or
jo
mov
loopne
sub
jne
inc
test
dec
mov
fimuls
das
or
sub
push
add
cmpsl
dec
inc
lods
mov
movsl
pushf
outsl
cmp
pop
andl
pop
gs
or
lock
dec
jne
or
sbb
sbb
push
test
fidivl
pop
push
idivl
or
lret
ds
cmp
cmp
adc
sar
sub
jge
mov
mov
dec
repz
mov
add
loopne
cmp
cwtl
mov
pop
aas
sahf
daa
xchg
dec
sbb
xchg
movsl
subb
xchg
clc
addb
fwait
sub
outsl
dec
clc
cmp
jnp
jne
push
mov
test
push
into
faddp
aad
in
xor
dec
or
clc
sbb
cmc
dec
xorb
adc
int3
pop
cmovbe
mov
mov
push
xorl
mov
mov
lret
mov
icebp
add
inc
jae
aam
shlb
sub
jle
cs
fistpl
mov
or
fdivrp
repnz
decb
cmp
mov
daa
adc
fidivrl
mov
mov
lds
jmp
jne
jno
inc
insl
adc
push
adc
sub
dec
mov
ret
mov
shrb
sub
leave
stos
out
xlat
loop
ljmp
cld
pop
incb
aad
xor
dec
dec
cmpsb
and
cmp
mov
test
in
push
aaa
inc
insb
mov
or
add
mov
dec
cmp
fdivrp
call
jle
sbb
push
mov
cmp
and
sub
cld
pop
pop
lods
in
lds
mov
ret
fstps
pop
in
add
cmp
lcall
mov
dec
jnp
iret
hlt
dec
dec
mov
mov
add
fs
sub
test
sub
bound
lods
test
sbb
stc
jbe
xorl
lahf
dec
mov
cmpl
filds
push
test
jmp
mov
pop
fmulp
xchg
cmp
aam
mov
fisttpll
mov
xchg
lahf
or
bound
xor
push
pushl
inc
rolb
cmp
loop
mov
mov
fcomps
enter
cltd
movsl
inc
xchg
inc
stos
nop
and
push
xchg
out
pop
jo
jge
mov
cmp
push
incl
cmp
sbbb
push
pop
ret
pop
inc
lret
xchg
fstpt
sub
adc
push
jg
ds
aam
dec
in
aas
push
pop
std
pop
shlb
mov
je
sbb
push
cli
popf
int
stos
jl
pop
decb
shrl
outsb
and
inc
fwait
ds
add
xor
pop
mov
sbb
sbb
fs
out
mov
mov
sarb
out
enter
mov
or
or
xrelease
or
and
std
sbb
lret
push
arpl
test
adc
popf
sub
jg
mov
pop
rcr
inc
cmp
sbb
lret
fdecstp
add
push
mov
daa
mov
insl
ret
popf
jae
dec
fcmove
mulb
sbb
cmp
std
mov
inc
jecxz
insl
les
sbb
sbbb
adc
icebp
in
scas
mov
ret
popf
sar
jge
add
pop
shll
adc
xchg
frstor
cmp
popf
rcll
test
aad
mov
addl
xchg
popa
sti
call
xor
mull
aam
dec
cmpb
xor
adc
out
jmp
jmp
xor
bswap
push
dec
pop
insb
in
icebp
jl
movsb
hlt
mov
pop
mov
orl
mov
test
mov
push
mulb
rorl
add
cmpsb
jmp
jns
adc
and
sbb
push
xor
stos
sub
inc
push
cmpsl
mov
andl
sub
fidivrs
gs
xchg
insl
pusha
cwtl
icebp
pop
pop
dec
and
xor
cli
jle
add
sahf
mov
js
into
into
cli
cmp
out
pop
jge
add
mov
cmp
aad
das
loop
scas
push
pop
pop
dec
lcall
mov
push
fs
jae
inc
jno
stos
mov
enter
mov
leave
inc
das
fstpl
push
outsl
inc
repnz
push
lret
jb
out
lods
mov
push
jmp
sti
stos
jns
repnz
out
xor
inc
fs
push
dec
cld
adcl
cmp
mov
push
dec
jnp
xchg
lods
mov
adc
mov
in
sub
cmp
xchg
ss
stos
shll
sbb
mov
cmp
mov
lods
add
xchg
dec
sbb
out
cmpsl
ja
jle
inc
push
cmp
sub
sbb
mov
daa
push
sub
and
in
fisttpll
rclb
sbb
movsb
pop
cmc
es
push
loope
leave
push
out
les
push
pusha
jg
or
push
adc
shrb
jnp
mov
adc
insl
test
mov
insl
loop
adc
cmp
lods
lock
and
mov
cli
xlat
rcrl
sarb
and
or
adc
fnstenv
out
fmuls
int
scas
push
fisubrl
btr
insb
fidivrl
xor
je
push
push
mov
stos
adc
mov
push
mov
outsl
and
xchg
inc
or
les
push
inc
stc
xor
shrb
mov
rcll
xchg
xchg
xchg
jne
sti
or
mov
mov
sub
lea
sub
mov
and
in
add
ljmp
cmp
outsl
push
ljmp
std
xor
sub
mov
rol
repz
push
jb
js
sub
adc
clc
lcall
adc
jbe
call
pop
iret
imul
dec
test
xlat
lea
mov
inc
jnp
and
xor
in
or
pop
sub
lds
ret
push
rorb
cmp
push
leave
lods
inc
es
into
lods
fiadds
lcall
cmp
or
lahf
rorl
addl
je
jp
sbb
adc
inc
shrb
std
fcomi
pushf
mov
jg
addr16
sub
jecxz
push
movsb
int3
jle
add
pop
pushf
mov
cld
clc
loop
ljmp
fs
adc
scas
insb
xorl
cmp
cmp
mov
fistps
mov
sti
jae
into
jecxz
fs
outsl
xchg
int3
inc
ljmp
push
or
out
push
mov
xchg
pop
mov
loopne
js
sti
cvtps2pi
pand
or
inc
mov
sub
out
push
movsl
adc
jae
jp
pop
daa
test
into
movsb
mov
aad
adc
jnp
call
fstps
push
cmpw
je
mulb
cmpsb
sub
xchg
std
xchg
pop
push
loope
test
jecxz
mov
cmp
in
add
mov
inc
std
aam
sbb
ds
gs
cli
hlt
bound
push
scas
add
lods
cmpsl
sbb
push
lahf
mov
sbb
mov
push
pop
sbb
pop
icebp
push
push
adc
and
pop
orps
out
sbb
xchg
aad
push
ja
dec
sub
jg
cli
je
mull
push
lds
aaa
or
pop
sub
mov
jb
or
cltd
inc
inc
add
jo
loopne
imul
jo
cld
cmp
arpl
push
aad
mov
cmpb
dec
push
sbb
adc
cmp
cmc
pop
push
push
mov
dec
dec
mov
add
jne
or
push
jo
add
push
cmp
mov
cmp
ljmp
mov
xchg
scas
pop
aas
aam
bnd
fwait
ret
mov
aaa
jns
xlat
mov
dec
mul
mov
push
movsb
cwtl
div
ds
mov
sub
aas
and
fxch
adc
aam
xor
mov
adc
filds
dec
nop
push
nop
cmpsb
aas
sub
pusha
dec
mov
cmc
lods
pop
jne
shl
inc
lds
xor
lods
cli
test
lea
packssdw
or
bound
lahf
xor
adc
fwait
add
int3
sti
aam
aas
push
scas
sbb
jge
add
pop
cmpsl
mov
xor
cmc
imul
sbb
inc
daa
ja
jmp
cmp
sarl
sbb
push
push
add
out
mov
rol
nop
outsl
jae
lods
rep
cmp
xchg
cmp
mov
dec
push
sbb
xor
shll
inc
sti
sbb
stc
xlat
ror
pop
cli
les
mov
dec
push
test
cltd
pop
mov
insl
cmc
rorl
mov
shlb
mul
imul
mov
out
pop
lods
sti
mov
in
leave
sbb
sub
cld
iret
mov
or
add
pop
jp
subl
mov
xchg
fists
jbe
jp
add
mov
mov
leave
repz
xlat
push
cmp
loopne
dec
sub
jge
dec
addr16
iret
shl
cmpb
outsb
lods
out
jmp
jae
dec
inc
sbb
dec
rcll
insb
lret
sub
sahf
jnp
sub
int3
sbb
rcrb
push
push
jmp
aaa
cmp
cmc
xchg
ss
out
fistps
cmp
jns
pop
push
mov
pop
pop
cmp
clc
in
jb
push
mov
outsb
jbe
jns
mov
jbe
mov
sbb
aad
iret
loopne
xchg
insl
push
scas
xchg
pop
daa
xor
sbb
cld
adc
repnz
mov
dec
fstpl
ljmp
mov
and
test
mov
lea
cltd
aam
sub
dec
push
scas
dec
repz
sub
cli
mov
mov
mov
imul
jmp
inc
ds
ret
jns
das
jae
int3
subb
push
mov
pop
inc
jl
arpl
push
test
nop
insb
lods
sbb
inc
push
idivl
xchg
sbb
xchg
jl
das
push
int3
shlb
js
pop
sub
sbb
int3
je
imul
cs
lea
push
xor
jl
pop
adc
jg
fbstp
into
and
ficoms
mov
es
xlat
mov
insb
into
shr
inc
sti
fimuls
dec
clc
lret
sub
pop
nop
cmpl
inc
lret
push
ljmp
cld
inc
and
leave
or
js
js
pop
iret
out
xor
bound
aas
push
cmp
sub
mov
lret
cltd
inc
mov
pop
cwtl
rorb
orb
rcrl
pop
loop
xchg
vpor
addr16
dec
lds
cmp
pusha
leave
dec
xchg
xor
imul
btc
xchg
clc
ds
cmp
lds
in
push
lahf
pop
scas
imul
or
mov
mov
int3
pop
inc
and
aaa
sub
mov
jae
or
mov
mov
pop
push
orb
pop
jbe
or
push
movsb
push
sub
sbb
dec
add
das
jle
mov
cmpsb
aas
mov
icebp
test
mov
out
mov
fsubrl
or
rcl
lea
sbb
sub
pop
popf
data16
ljmp
xchg
ljmp
xchg
int3
xchg
mov
imul
cltd
ds
fistpll
push
mov
jnp
test
push
xor
and
es
out
cmpsl
rcr
add
outsb
pushf
xor
mov
fstps
cmp
jne
pop
popf
inc
sbb
insl
imul
popa
jmp
out
pop
mov
ds
mov
fs
or
test
cmpl
pop
or
hlt
outsb
xchg
jae
mov
add
aam
push
pop
inc
scas
fcompl
imul
ja
mov
xor
out
xchg
scas
outsb
mov
mov
out
xchg
fsubrp
dec
mov
add
add
popa
cs
popf
sub
out
call
sub
fs
inc
clc
es
fistl
pop
out
pop
cmp
sub
sub
lods
lahf
lahf
inc
inc
mov
cld
loopne
sub
dec
shll
mov
jg
cmp
push
lret
push
loope
jbe
dec
fwait
jp
xchg
into
ret
adc
sbb
dec
aas
es
jge
sbb
or
xchg
subb
lock
cltd
inc
add
push
lahf
jecxz
jnp
xchg
sbb
push
loop
jle
and
ds
mov
fcoms
mov
movsb
and
inc
clc
xorl
mov
bound
or
loopne
cltd
cmpsb
dec
add
push
mov
add
icebp
fcmovnu
and
pop
roll
insl
inc
mov
gs
mov
jmp
fisttpl
pushf
lods
jp
pushf
call
mov
push
fistl
leave
bound
pavgw
dec
pop
cmp
rcrb
or
popf
cmc
lods
push
inc
or
repz
out
pop
imul
cmpb
jns
std
mov
sahf
aad
pop
cld
mov
jge
xchg
and
xor
cmp
mov
push
jecxz
jecxz
xchg
cmp
jecxz
shlb
xor
xor
adc
mov
into
mov
and
sub
push
test
insb
jl
jb
jle
xchg
pop
insl
and
push
mov
add
loop
cmp
push
xchg
les
pop
xchg
pop
ss
and
cmpsb
lods
fnsave
mov
cmp
jne
in
pop
jp
inc
cwtl
das
xor
in
and
sbb
in
inc
sub
mov
stc
fbstp
std
fnsave
sub
and
sbb
mov
call
inc
push
fidivrs
adc
arpl
jg
ja
inc
and
into
sti
aas
mov
mov
jg
xchg
and
and
hlt
rolb
out
xchg
adc
jge
data16
inc
inc
icebp
adc
push
adc
fisubrl
pop
scas
fdivl
xor
or
cmp
cs
shlb
mov
mov
jnp
pushf
jbe
mov
sub
jmp
adc
and
je
cmp
sbb
pop
mov
push
mov
fildl
xchg
addr16
pop
pop
fimull
mov
notl
hlt
mov
xlat
xor
and
stos
adc
jp
pusha
lods
inc
mov
aam
jb
inc
pop
push
push
mov
or
jae
xchg
pusha
sub
popf
pop
aad
sbb
mov
jbe
ljmp
repz
adc
mov
aaa
jns
lret
outsl
adc
pop
or
scas
js
jmp
mov
loopne
xor
pop
xchg
loop
mov
leave
gs
and
jp
pusha
repz
and
inc
test
loop
push
xchg
lret
aas
cld
test
movsb
add
mov
fs
in
xor
bound
shll
ss
leave
sti
mov
ljmp
push
lods
not
popf
pop
adc
jl
aam
stos
sub
inc
adc
mov
loopne
mov
push
pop
ljmp
daa
arpl
gs
jno
sub
lret
dec
pop
dec
rcr
mov
mov
jp
mov
xchg
test
or
mov
sbb
test
sbb
cmp
fbstp
bound
fwait
dec
mov
jbe
push
jne
cmpsl
xchg
stos
inc
mov
mov
dec
push
xor
xor
sub
mull
jmp
fsubl
mov
shlb
fcompl
or
roll
pop
mov
cmpsl
sbb
xlat
jl
int
mov
bound
mov
out
repz
cmpsl
or
popa
sub
pop
movsl
in
push
pop
data16
in
mov
jecxz
mov
int3
shrl
mov
mov
enter
and
jb
ss
add
push
sub
test
mov
rcrb
outsb
xchg
lock
popa
push
in
stc
inc
mov
xlat
dec
and
adc
jbe
sbb
mov
inc
lahf
lods
inc
xorl
movl
mov
jg
adc
insl
jns
xchg
push
push
dec
cmp
arpl
sbb
out
arpl
loop
cwtl
pop
cmp
add
jle
inc
andl
cmpb
outsb
xor
sahf
lret
ss
cmp
mov
fcos
jae
xchg
push
call
jbe
sub
dec
fdivl
add
or
pop
push
lods
xchg
out
push
scas
xchg
arpl
arpl
icebp
cmp
mov
xlat
or
inc
mov
leave
jno
mov
cmp
xchg
lea
xor
ss
aam
shrl
add
cs
adc
in
push
test
inc
sub
es
xchg
repnz
mov
push
xchg
pop
xorb
xchg
add
loope
xor
inc
xor
fwait
ljmp
mov
addr16
mov
and
add
xor
and
adc
push
pop
xor
js
jp
push
xchg
mov
sub
fstpl
and
lock
fwait
bound
and
sbb
scas
inc
fcomp
repz
test
bnd
subb
cld
pop
les
adc
repnz
pusha
ret
and
xor
insb
mov
mov
push
lds
andl
rcl
lock
in
push
in
hlt
mov
jns
push
mov
fldcw
or
and
test
adc
push
sbb
pop
loopne
mov
mov
pop
fidivl
push
and
movsb
cs
dec
adc
iret
data16
in
nop
in
in
inc
mov
dec
fucomip
cmp
addr16
mov
mov
mov
arpl
mov
insl
sti
mov
adc
sbb
incl
push
mov
jnp
in
movsl
lret
enter
scas
loop
push
ja
jmp
mov
fwait
jbe
push
xlat
sbb
xchg
fwait
push
cmpsb
push
lock
leave
fldenv
jmp
in
inc
test
loopne
inc
push
popf
sti
andl
xlat
jp
mov
popf
dec
add
test
xor
sbb
xor
mov
iret
clc
add
or
cmc
and
mov
les
cmp
add
inc
or
mov
xchg
pop
shl
lcall
and
push
sbb
sti
jb
sub
sarl
xchg
aas
aam
jl
jl
dec
clc
dec
stc
xor
sub
aas
push
mov
push
cmp
xchg
int
adc
lahf
and
in
pop
pop
sbb
shll
mov
mov
dec
adc
xor
mov
dec
outsl
xchg
mov
insb
add
cmp
xchg
pop
sub
or
cmc
push
insb
add
js
lods
mov
sbbb
jmp
mov
adc
inc
jecxz
test
sahf
jg
mov
fidivrl
scas
sbb
out
xchg
inc
xchg
cmc
push
lock
xchg
cmp
lret
movsb
rcrb
or
mov
fisubrs
pop
sub
lea
je
sbb
push
divb
addr16
or
mov
and
and
jno
outsb
xchg
pop
mov
cmp
shrl
in
test
in
jae
sbb
add
lret
adc
mov
shlb
dec
push
dec
xchg
in
imul
adc
das
int
xor
lds
sarl
test
rcll
xchg
push
ret
adcb
adc
jb
cmp
ljmp
push
bound
cli
sub
add
adc
loop
mov
xor
cmp
or
jge
out
mov
cmpsl
adc
clc
jb
mov
das
add
xchg
cmp
inc
adc
inc
and
mov
fs
sbb
or
push
mov
mov
jmp
in
js
in
je
or
int3
andl
ss
and
pop
fsubl
jle
rolb
pushf
mov
xchg
or
push
adc
mov
sub
outsb
stos
in
jg
lret
adc
clc
gs
in
mov
ss
adc
mov
dec
sbb
sub
frstor
pop
pop
mov
popa
clc
sahf
jge
pop
fwait
and
lahf
out
inc
jnp
repnz
sub
add
adc
xchg
mov
iret
je
cwtl
dec
rcl
hlt
cmc
je
lret
pop
cltd
leave
push
dec
lret
je,pn
add
cmpl
add
int3
aaa
jmp
sar
cmpsl
pushf
mov
rcll
sub
add
cmp
cli
xchg
cld
nop
rorb
in
popf
popa
mov
mov
rclb
mov
ds
mov
js
scas
xor
fdivrs
out
pop
call
into
push
fwait
dec
push
cmp
js
xor
cmp
call
adc
pop
and
mov
out
icebp
cld
and
sbb
mov
cmc
out
inc
inc
pop
cmp
jge
js
mov
push
or
arpl
movsl
stos
sahf
inc
lea
fs
cmp
stc
xor
xchg
test
xchg
adcl
outsb
addb
xor
jnp
pop
out
xor
xchg
js
jle
push
imul
cltd
pop
xchg
sub
popa
in
lds
inc
sbb
outsl
fcompl
pop
fwait
cltd
mov
inc
enter
or
xchg
xor
testl
mov
sbb
lret
add
mov
jg
adc
movsb
rolb
xor
lea
pop
dec
push
push
test
imul
mov
jmp
pop
data16
xchg
inc
inc
lods
fldt
mov
push
fprem
ss
inc
push
in
inc
push
das
dec
imul
jecxz
orl
aad
int
loope
jbe
out
popa
cmc
add
out
jge
jle
test
inc
sbb
xor
inc
jle
add
jns
xlat
inc
test
pop
pop
add
aam
adc
mov
insb
call
in
ljmp
push
in
jg
jns
pop
ds
into
fstps
and
pusha
icebp
cli
mov
or
push
repnz
inc
pop
sbb
cmpsl
sub
pusha
out
mov
cltd
and
insb
gs
mov
dec
add
sub
sub
mov
loope
xor
das
shll
sbbb
sbb
cltd
xlat
test
push
cmpsb
jg
add
test
mov
or
data16
leave
fs
adc
xor
out
sub
adc
les
or
aam
sbb
iret
xchg
mov
pushf
in
or
and
pusha
call
cmp
ljmp
adc
fucomip
jno
aaa
es
jp
mov
pop
xchg
jge
mov
inc
aam
sbb
sar
das
jns
daa
insb
pop
cmp
stc
cltd
pop
sub
inc
push
jl
dec
es
xchg
jns
or
push
es
hlt
out
imul
adc
dec
lods
in
push
jo
push
gs
in
das
xor
add
pushf
sbb
mov
push
mov
and
xor
fs
fwait
adcl
mov
cmp
rol
or
jns
nop
les
push
sbb
dec
repz
outsb
fisttps
pushf
lret
testl
bound
cmp
cmp
pop
pop
divl
sub
xor
add
push
sub
jno
stos
push
jo
loop
cld
scas
loopne
push
shlb
fisubrs
in
pop
ret
cmp
mov
pop
cli
pop
les
pop
out
fdivrs
pop
cmp
jl
cltd
test
push
mov
fmul
mov
adc
imul
sub
ss
xor
push
inc
cmpsb
shrb
fsub
xor
or
and
mov
in
xchg
jb
pushf
mov
cs
push
nop
loope
stos
cld
mov
daa
cmp
push
sarl
adc
mov
aas
imul
pusha
xchg
jg
lods
xor
mov
sar
loop
mov
or
into
cmp
fstpt
cmc
mov
pop
outsb
inc
leave
cmpsb
ret
scas
shlb
lcall
out
cmp
pop
mov
dec
lcall
xor
ret
push
rcr
mov
ss
sub
add
frstor
repz
es
stc
xor
xor
leave
dec
inc
dec
push
add
in
pop
cmp
adc
rcrb
sbb
jmp
xor
sbb
outsb
sub
ljmp
cmp
xchg
sbb
add
outsl
hlt
ja
mov
and
push
je
mov
out
popa
fidivs
sbb
test
sti
push
iret
das
outsl
in
mov
inc
xor
repz
in
xchg
roll
or
add
and
rcrb
adc
dec
jne
fimuls
jo
test
sub
cld
cli
or
call
lret
rcrb
lcall
pop
aad
jle
inc
or
xchg
js
ljmp
jp
jne
add
xchg
jecxz
mov
cld
stos
ret
pop
jmp
or
in
sbb
mov
add
sub
test
push
daa
push
jno
add
fbld
inc
stos
adc
push
xchg
pop
or
mov
sub
and
dec
xor
icebp
push
sbb
jmp
and
addr16
push
frstor
inc
xor
inc
mov
loop
cmpsl
sbb
mov
inc
push
and
mov
test
add
pushf
add
mov
outsb
pop
adc
outsb
and
xchg
sub
pusha
ror
xor
mov
mov
xlat
call
mov
cwtl
mov
repnz
jo
add
mov
mov
shl
fisttps
adc
mov
fcompl
add
outsb
sbb
outsb
and
push
sahf
ja
dec
outsb
sbb
je
jae
addr16
dec
mov
pop
fidivrl
mov
adc
inc
imul
or
pushf
fistpl
sub
inc
fsub
vpsubb
addr16
mov
test
mov
movsb
mov
ficoms
negb
and
stos
insb
lods
inc
lds
pop
test
faddl
testb
dec
dec
fucomp
push
int3
int
jne
mov
pop
lods
divb
cld
mov
sbb
inc
add
in
mull
sbb
push
sub
jg
ds
shr
xor
jle
pop
add
ds
lock
push
ja
fdivs
dec
push
mov
in
xlat
lods
xchg
not
pop
ljmp
fwait
dec
pop
add
xchg
loop
mov
mov
dec
cmp
fisubrl
mov
xchg
data16
cmp
cmpxchg
adc
dec
mov
adc
insb
in
dec
daa
leave
clc
jnp
xorl
cmp
cmpsb
cmp
inc
test
jg
ret
testb
fsubs
ficompl
int3
mov
pop
push
jb,pt
fs
cli
scas
adc
testl
popf
adc
std
cmp
jno
int3
xchg
push
in
pop
jmp
or
rorb
or
pusha
push
shl
mov
int3
pop
xchg
and
jg
addl
cmp
xchg
mov
xchg
into
gs
cmpsb
in
lret
and
bound
lods
sti
cwtl
divl
scas
push
stos
imul
cmp
subps
arpl
push
adc
mulb
xor
pop
inc
enter
hlt
fisttpll
aaa
pop
xor
ljmp
mov
stos
les
xorl
shl
jns
ret
nop
mov
int3
inc
int
jecxz
call
push
and
mov
sbb
fadds
or
fs
cmpsl
lods
fwait
mov
xchg
rcll
popa
xchg
and
adc
shl
dec
and
fimull
subl
push
cld
je
pop
outsb
pusha
fsts
mov
aaa
mov
jl
cmpsb
in
in
jecxz
fadds
mov
popf
mov
cwtl
mov
lret
test
out
mov
in
sub
adc
jecxz
mov
in
inc
jecxz
jnp
shlb
mov
push
or
or
scas
pop
shll
jl
mov
inc
pop
mov
aaa
or
inc
iret
int
fistpll
movsb
shll
add
int3
xchg
jmp
js
mov
jnp
out
lds
out
cmp
mov
out
pop
dec
and
sub
inc
xor
divl
cmpsb
fsubrl
paddusw
test
outsl
cmp
jne
decb
imul
push
cwtl
mov
mov
xchg
dec
fwait
mov
orb
xor
nop
lahf
lds
push
pop
xchg
and
pushf
push
jo
jp
or
xor
hlt
test
or
sub
push
sub
shl
sahf
popa
mov
mov
dec
jne
das
jb
adc
jno
ror
mov
inc
mov
push
rclb
adc
jo
mov
mov
mov
int3
hlt
mov
xchg
fwait
repnz
cwtl
sar
fbstp
mov
xchg
adc
mov
scas
movsl
stc
jb
push
dec
dec
mov
or
dec
and
mov
mov
inc
in
add
mov
xchg
repz
sarb
test
or
mov
cmp
xchg
cmp
jns
lock
lock
cmpl
mov
xlat
pop
jle
mov
jne
shrl
xor
fucomi
cmp
iret
sahf
xor
ficoml
fdivrs
repz
add
test
pop
in
in
imul
mov
sar
xchg
or
mov
mov
sbb
lods
imul
jge
popf
out
scas
jecxz
fsubrl
stos
pop
push
pop
pushf
mov
pop
mov
add
pop
cmc
movsl
and
jle
pop
mov
xor
jge
push
ljmp
add
jmp
xor
subb
imul
push
arpl
pop
mov
sbb
sbb
xor
dec
mov
inc
fdiv
inc
adc
jp
stc
add
xchg
xor
sub
je
dec
jae
pop
push
jno
pushf
lret
les
add
mov
add
sub
inc
push
or
inc
ljmp
pop
mov
loopne
jne
sub
lods
cmp
sbb
mov
fcoml
je
mov
stos
mov
in
lods
mov
adc
mov
mov
adc
mov
add
out
jmp
mov
pop
jmp
cwtl
insl
rorl
into
orb
hlt
push
pop
pop
insb
xorb
xchg
inc
inc
cmc
lds
or
mov
subl
add
adc
push
sahf
scas
mov
ja
mov
inc
scas
xchg
cli
adc
push
ret
cs
mov
or
sbb
gs
pop
xchg
and
push
bswap
inc
xchg
jle
and
test
inc
aas
fisttps
xorl
out
stc
pop
jo
push
adc
dec
lret
jl
or
xchg
repnz
iret
movsl
in
in
push
or
loopne
or
adc
cmp
aas
inc
sbb
cmp
mov
pop
into
test
dec
mov
jns
ret
add
outsl
das
icebp
pop
pop
push
stos
popf
imul
jmp
adc
sbb
les
and
inc
in
mov
jg
and
xchg
jle
hlt
shrb
pushf
stos
ljmp
xor
push
imul
xorl
or
loope
rolb
sti
jno
jle
pop
xchg
and
outsl
dec
jo
jnp
sbb
fs
dec
mov
xor
pop
cmp
icebp
bound
out
jle
add
mov
hlt
pop
insb
loopne
addr16
jecxz
loopne
test
xor
lahf
in
lcall
aad
sti
ljmp
sti
call
in
int3
sbb
insl
mov
mov
xchg
sub
in
cmp
mov
in
mov
push
push
xchg
cltd
adc
push
adc
imul
iret
inc
cmp
mov
mov
ds
xor
dec
mov
and
adc
nop
mov
leave
mov
add
xchg
sarb
jo
sti
mov
fmul
xchg
enter
fcmove
es
pop
outsl
in
xor
fwait
add
pushf
shll
fimuls
ja
filds
enter
adcl
jbe
fdivr
add
arpl
sbb
andb
fmul
aam
lret
mov
dec
es
fsubs
mov
lock
aam
gs
addb
dec
push
mov
mov
or
out
lods
cmpsl
icebp
jns
pusha
shrl
pop
sti
and
fiaddl
ds
mov
imul
xchg
pop
mov
stos
bound
insl
aam
jp
or
nop
dec
adc
shll
daa
pop
jb,pn
aad
xor
mov
pop
imul
in
fldcw
jnp
enter
ja
addb
xchg
outsl
inc
lock
sub
pop
mov
aaa
pushf
lods
lret
into
mov
add
aam
adc
ret
pop
add
push
mov
inc
push
adc
stc
rcr
in
js
mov
call
ja
mov
repz
cmpsl
aad
in
and
xchg
rcr
inc
cmp
rcl
pop
mov
orl
xor
dec
inc
push
or
pop
xchg
push
arpl
or
or
lahf
mov
test
jl
scas
push
dec
ljmp
xchg
mov
shlb
out
jg
xchg
mov
in
push
gs
cmpsl
out
or
mov
or
mov
sub
xchg
int
scas
cli
sti
lods
mov
outsl
cmpsl
xor
mov
and
inc
movsl
mov
repnz
imull
outsb
dec
fdivrp
movsl
mov
cmp
jno
in
adc
push
mov
leave
stos
and
sbb
bound
dec
mov
dec
xchg
scas
std
mov
cmp
jbe
add
inc
sar
push
loopne
in
leave
loop
jnp
fs
shlb
imul
mov
bound
sbb
mov
push
rorb
inc
dec
in
pop
dec
inc
sub
add
or
sub
dec
mov
repnz
dec
enter
sub
add
sti
xor
std
stc
sbb
jb
or
scas
mov
inc
inc
imul
js
rorl
test
sub
adc
push
mov
mov
repz
stos
ss
dec
gs
stc
dec
mov
jne
push
jnp
stos
loop
fs
insb
jge
xorl
mov
mul
pop
or
push
or
data16
jge
pop
stos
int
das
sbb
adc
sbb
xchg
mov
and
sar
ret
ss
movsb
jno
dec
mov
out
inc
push
dec
mov
inc
jle
icebp
int3
scas
dec
jecxz
and
sbb
push
es
ljmp
xchg
bound
sub
pop
fwait
test
push
xchg
mov
loope
fldenv
push
mov
mov
or
xor
xor
jle
pop
lret
jg
cmc
leave
cmp
push
sbb
iret
xchg
repz
jne
push
insb
mov
or
xchg
xorps
daa
ficomps
adc
lcall
jg
lods
xchg
lock
jbe
loop
sbb
mov
xchg
pop
mov
sbb
movsb
jmp
jno
mov
xchg
mov
pop
mov
pop
add
jae
subb
push
test
test
ret
dec
xchg
sub
iret
test
test
dec
outsl
addr16
bnd
aaa
or
in
sub
imul
dec
pop
insb
std
and
inc
rcr
push
cmpsl
out
push
pop
pop
ret
add
push
imul
inc
and
dec
rcrl
lret
mov
add
pop
sbb
andl
jae
add
iret
mov
inc
push
sbb
loopne
std
push
out
dec
popf
std
icebp
addb
insl
xchg
adcl
js
test
xor
das
xor
cmp
jmp
mov
inc
movsl
cmc
adc
dec
outsb
test
push
mov
lods
movsl
sbb
push
add
xor
lods
mov
xchg
hlt
ljmp
outsl
mov
lahf
cmp
in
fs
pop
daa
mov
mov
jo
xchg
pop
dec
xchg
ja
out
jp
lock
jecxz
pop
sbb
enter
jns
push
sbb
mov
jb
stos
jmp
loope
stc
and
fnstenv
sub
ffreep
xchg
ficompl
or
sti
scas
daa
push
and
adc
dec
mov
ret
sbb
jns
xor
jl
xchg
out
mov
dec
mov
dec
int3
mov
dec
xchg
lahf
push
or
push
pop
adc
adc
nop
addr16
gs
fs
stos
out
xlat
aad
push
pop
push
ja
sarl
mov
movsl
sub
sbb
sbb
xor
mov
jmp
mov
pop
dec
scas
idivl
xor
icebp
fldt
mov
leave
fldt
rorb
dec
cmc
lods
xchg
sbb
test
sub
pop
dec
adc
cmp
cmpsb
dec
push
xchg
mov
xor
out
cmp
cltd
bound
fidivrl
lods
xchg
cld
mov
jnp
inc
mov
loopne
pop
mov
xchg
mov
ss
xor
jns
idivl
lock
mov
sub
mov
mov
xchg
hlt
mov
loope
mov
popa
popf
mov
dec
jp
aam
dec
scas
hlt
add
xchg
sbb
shrl
sar
mov
test
or
mov
fistpl
xor
add
jp
sbb
cmc
lea
xor
dec
sbb
mov
xchg
pusha
add
jae
sub
loope
pop
mov
mov
ret
mov
or
bound
mov
es
pop
pushf
sti
xor
dec
jg
sti
es
loopne
sub
ljmp
daa
adc
lock
dec
xchg
sbb
mov
adc
leave
mov
cmpb
add
shlb
addr16
mov
adc
mov
and
pop
js
cmc
push
in
jae
add
xchg
adc
rclb
dec
and
dec
xchg
or
pushf
adc
testl
fbld
nop
pop
cwtl
push
js
mov
inc
sbb
xor
add
mulb
dec
inc
lahf
push
mov
ret
push
fcmovnb
addr16
rcl
movsl
sahf
sub
iret
add
dec
jnp
pushf
inc
xor
xchg
lret
inc
xor
mov
test
or
adc
scas
shlb
aaa
or
lods
inc
dec
pop
xor
mov
mov
cmp
sub
pop
subb
iret
push
roll
inc
pushf
testl
mov
sub
xor
jp
push
nop
or
jg
push
cmpl
cmp
inc
dec
sti
jbe
fidivrl
cmpsb
fwait
mov
push
stos
push
lods
pop
fnstsw
adc
rol
cmpsb
lods
push
aas
loop
aad
addr16
movb
mov
fistl
lods
inc
insb
xchg
dec
in
sub
xor
sub
xchg
loop
arpl
or
or
push
pop
fidivs
jp
ss
rcll
adc
sub
mov
jmp
leave
add
inc
cltd
js
into
inc
push
iret
push
insb
add
sub
fnstcw
shrl
cli
in
frstor
leave
sti
jne
jg
arpl
and
imul
sub
scas
into
imul
jp
push
popf
das
jno
push
sbb
adc
les
add
in
and
ret
cld
dec
push
enter
push
sbb
mov
stos
push
gs
aam
mov
test
mov
inc
xchg
xchg
dec
or
sub
mov
es
mov
inc
dec
mov
cmp
push
insl
fdivp
jnp
int
mov
xchg
mov
inc
mov
rcrl
mov
sbb
je
outsl
scas
adc
mov
and
enter
shll
je
stc
inc
jge
push
pop
gs
aas
or
push
xchg
ss
cmp
mov
jg
cmp
jno
pusha
dec
add
rorb
inc
in
pushf
das
aam
fwait
mov
imul
mov
insb
sbb
mov
iret
dec
pop
mov
lcall
insl
sub
into
lahf
dec
or
sarl
fstl
js
jecxz
sbbl
dec
adc
or
xchg
or
setbe
mov
jl
lret
dec
test
add
test
cmp
push
lret
test
mov
scas
loope
jl
cs
pop
xor
adc
or
ds
pop
dec
jmp
fidivrl
inc
jo
xor
jle
mov
mov
nop
mov
pop
imul
scas
push
lods
loop
add
adc
pop
push
inc
jbe
mov
sbb
xchg
inc
xchg
sbb
add
in
dec
das
mov
mul
cmp
pop
mov
xchg
jp
sarl
adc
hlt
cs
cmpl
xchg
dec
add
mov
inc
dec
lcall
repnz
inc
shlb
les
out
cmp
fbld
mov
ja
mov
daa
mov
mov
test
xchg
jnp
in
inc
loope
jb
sbb
fistps
lahf
adc
call
jp
mov
xchg
ljmp
xor
and
sub
mov
jle
faddl
inc
iret
xchg
test
rcrl
icebp
cmp
rcll
loopne
test
pop
shr
out
punpckldq
mov
cmpsb
dec
pop
pop
push
cmp
jg
or
and
lock
out
std
cmp
mov
fidivrs
cld
je
lret
cmpb
fcmovne
fidivrs
push
cmp
call
divb
rcrb
jae
out
and
xor
ljmp
std
in
outsl
cmc
cld
mov
incb
add
scas
pop
push
xor
std
jecxz
mov
aas
or
insb
into
sahf
call
dec
sbb
sub
mov
insb
pusha
nop
mov
mov
dec
dec
vpmaddwd
ljmp
cltd
pop
mov
mov
xor
stos
or
adc
gs
add
jge
jl
pop
sahf
push
scas
bnd
std
shll
clc
mov
std
inc
add
iret
insb
pop
pop
in
xor
idiv
adc
pusha
fdivl
dec
jp
or
test
cli
ljmp
push
adc
jecxz
bound
popa
loop
pop
inc
leave
loopne
adc
adc
push
fsubrs
push
lods
inc
xchg
pop
xchg
gs
lock
sbb
xor
aam
mov
ret
jae
or
es
push
roll
inc
flds
mov
inc
inc
out
incb
cmp
pop
sbb
mov
mov
xchg
aaa
out
xchg
call
push
push
es
cmp
enter
ja
jno
push
inc
cmp
xchg
cmp
and
in
jb
test
and
movsb
mov
les
nopl
xchg
add
push
xchg
pop
or
sbb
push
lret
inc
mov
jp
jns
out
mov
xchg
xchg
mov
aaa
popf
push
xchg
inc
in
into
popf
and
mov
inc
xchg
jns
shl
push
jne
jecxz
js
dec
jno
fwait
xchg
add
je
call
enter
lret
jl
xchg
jl
hlt
xor
fld
or
mov
idivl
sar
jmp
or
adc
ss
xor
push
subl
sbb
cs
lahf
fs
push
xchg
sbb
sbb
aaa
xchg
addr16
xchg
dec
in
xor
lods
mov
cli
aas
push
aaa
or
add
fisttpl
int
outsl
lahf
rcrb
sub
or
js
push
xor
cld
lret
or
push
push
rcrl
ss
addl
jnp
lret
dec
fbstp
sub
mov
inc
std
call
mov
aam
insl
sahf
xor
insl
movsl
ja
daa
insl
testl
push
mov
inc
bound
lods
jne
das
mov
inc
insl
mov
jae,pn
outsb
push
sub
inc
xchg
lds
mov
sub
mov
lods
push
fs
jbe
jge
outsb
xor
cmc
jmp
das
arpl
jnp
add
sti
sub
jl
jae
sbb
imul
negb
es
cmpsl
xchg
loope
gs
inc
leave
push
mov
rcrb
outsl
insb
xor
mov
ja
pop
add
enter
jecxz
lahf
data16
pop
xchg
outsb
mov
aaa
dec
xor
cmp
mov
mov
mov
and
cld
icebp
ja
pop
leave
jl
pop
inc
sbb
test
mov
push
inc
cmp
push
cld
inc
nop
cmp
pop
pop
xchg
imul
out
mov
xor
jl
adc
in
adc
cltd
xor
pop
sub
push
sub
push
pop
lret
insb
sub
mov
cmp
inc
sub
jns
jae
and
stos
mov
lea
fdiv
jno
mov
inc
out
add
ss
std
in
pop
adc
dec
jl
addr16
add
lock
mov
fwait
jp
out
out
dec
sbb
popf
dec
jecxz
push
les
add
sbb
add
aad
aam
push
jo
fildll
push
mov
or
sub
icebp
test
mov
inc
mov
xchg
mov
shrb
in
jle
adc
and
dec
aas
in
imul
out
cmp
pushf
fxch
sub
test
mov
adc
mul
cli
fwait
xor
int
decl
imul
mov
pushf
dec
sbb
aam
sub
mov
repnz
cmc
les
les
adc
stos
sub
xlat
jne
loopne
ds
dec
aaa
and
loope
in
cmp
lods
stos
clc
in
adc
and
sub
push
lock
and
mov
pop
into
adc
xchg
lods
jge
adc
lods
shll
add
or
jle
dec
ret
fcomi
xchg
gs
ror
js
xchg
clc
test
sub
test
pushf
out
add
out
mov
mov
cmc
into
cmp
mov
push
loopne
mov
adc
int3
imul
cmp
sbbb
repnz
mov
es
cmc
pusha
and
push
jmp
pusha
or
call
pop
xorl
pushf
in
clc
mov
leave
dec
stos
les
loope
pop
xchg
dec
pop
push
iret
aas
imull
adc
icebp
push
pop
cmpsb
cmp
in
mov
addr16
xor
mov
enter
bound
sub
movzwl
out
adc
pop
clc
jbe
mov
or
rcll
dec
fs
xchg
cmp
sbb
push
mov
fnsave
sub
outsb
verw
push
add
dec
out
dec
adc
fsubrl
mov
ljmp
mov
mov
es
lea
sbb
sub
pop
hlt
test
iret
add
lahf
popa
mov
pop
ret
mov
imul
jle
data16
xor
mov
mov
dec
nopl
inc
insl
mov
call
sbb
outsl
mov
int3
fwait
gs
or
mov
mov
push
test
adc
loopne
jl
inc
bound
iret
xchg
or
mov
jbe
mov
xchg
mov
xchg
dec
push
add
mov
daa
insl
push
xor
xchg
push
and
cmpsl
jmp
in
repnz
or
mov
pop
and
adc
sub
sub
popf
stos
pop
je
andl
or
xor
sub
stos
sbb
jno
cmpsb
out
xor
or
xor
ror
shll
imul
ljmp
mov
fildll
out
mov
mov
lret
les
xor
in
aaa
adc
sub
mov
cli
scas
stos
push
and
aad
shll
pop
fisubrl
or
mov
inc
dec
les
mov
jge
ja
in
stc
inc
jg
fisubl
lret
push
mov
cmp
adc
out
aaa
and
outsl
push
adc
fcmovnb
dec
movsb
inc
sub
dec
lcall
pop
mov
push
xchg
mov
mov
pop
clc
lds
fisubrl
mov
jns
mov
pusha
movsb
lods
stos
dec
dec
mov
dec
sub
jg
mov
cmpsl
lods
call
sti
inc
rcrb
out
xchg
pop
add
jmp
mov
xchg
jno
int3
cmpsl
inc
fisubl
sbb
dec
and
fisttpl
divl
xchg
jp
adc
loope
aad
hlt
rclb
les
je
mov
fistpl
int
js
mov
lds
push
in
or
cltd
stos
xchg
or
and
xchg
lret
test
and
aaa
jle
fs
sbb
fwait
and
mov
decb
enter
test
cltd
inc
fwait
push
int
test
test
jp
jp
pop
mov
dec
cmpsb
jg
add
adc
xchg
mov
nop
and
add
cmpsb
dec
xor
lret
sbb
out
ss
dec
pop
add
pop
loop
ret
fcomp
flds
cmp
movsb
shrb
jmp
cmp
addr16
gs
add
aaa
fisubs
loope
cmp
out
pop
negb
xchg
xchg
or
fisttps
ror
hlt
aam
add
cli
push
fcoms
sub
rcr
outsb
xchg
js
and
das
xchg
push
dec
test
sub
adc
out
test
mov
test
dec
push
cmp
in
jae
inc
xchg
jb
pop
cs
fistpll
lcall
jl
push
mov
mov
mov
stos
int3
out
pop
daa
in
fucomip
sub
dec
sbb
jmp
test
int3
sahf
imul
fcoml
bound
rcrb
adc
insb
in
push
push
ret
xchg
int
scas
or
inc
sbb
dec
inc
nop
adc
push
sub
icebp
dec
pushfw
pop
and
lcall
in
mov
popf
insb
out
sti
jle
add
mov
clc
jg
enter
movsb
inc
push
or
out
adc
imul
insb
insb
shll
pusha
xchg
lcall
enter
clc
int
test
xchg
in
fldt
pop
pop
cmp
xchg
add
push
mov
lods
push
in
xorb
rol
test
adc
adc
mov
mov
leave
push
sbb
lea
jge
add
cli
sbb
fsubl
das
jmp
jne
loopne
mov
shl
shll
mov
add
mov
mov
fdivrs
ja
lret
outsb
repnz
adc
pop
or
cltd
je
pop
sub
inc
imull
pushf
mov
push
pop
testl
fcmovne
lret
push
add
dec
mov
sub
jb
in
imul
lret
in
mov
aaa
test
mov
jbe
sub
jne
outsl
jne
outsb
out
negl
in
scas
xchg
mov
call
mov
adc
notb
cmp
sub
aam
jle
pop
outsl
xchg
pop
adc
orb
fcmovbe
faddl
stos
or
add
mov
adc
xchg
xchg
sbb
cli
xlat
and
daa
scas
xlat
fstps
dec
push
lods
mov
cli
lea
cmpsl
sub
leave
sbb
or
rcrb
nop
dec
out
sub
insb
cmpsl
adc
imul
jg
test
in
add
adc
fnstcw
fdivl
ss
push
mov
sub
lock
pushf
mov
inc
add
xchg
jnp
xchg
adc
fistps
popa
inc
jg
xor
xor
stos
in
sub
enter
xchg
adc
jl
call
insl
int
rclb
xor
mov
repnz
sub
rcr
popf
stos
mov
mov
sbb
lret
mov
testb
sbb
mov
and
pop
mov
test
and
xlat
and
mov
cmpsb
inc
pop
add
xor
dec
dec
daa
xor
jl
mov
mov
mov
daa
subl
movsl
mov
sbb
sahf
fwait
and
int3
mov
sbb
jbe
jl
cmpsb
mov
xchg
pushw
push
movsl
cmp
nop
xchg
sbb
mov
bound
popa
push
into
or
adc
jg
test
push
test
sub
sbb
les
fisttpll
out
hlt
sub
test
cmp
adc
jle
into
or
inc
cmp
cmp
pop
int
mov
dec
fnstenv
pop
xor
dec
jge
mov
mov
xchg
repz
sbb
lahf
hlt
nop
pop
out
outsb
mull
cmp
js
sahf
std
sbb
jbe
pop
je
mov
sbb
xor
pusha
mov
pop
lahf
sub
out
movsl
sub
mov
pop
dec
icebp
sub
out
dec
jmp
or
repnz
mov
cmc
imul
imul
cwtl
sbb
dec
add
ljmp
cld
cmp
fdivrp
sbb
sbb
fisttpll
xchg
int3
psraw
add
adc
loopne
cmpsb
mov
loopne
fsubl
dec
popf
cmp
mov
jge
enter
aas
popf
outsl
push
push
add
mov
out
addb
xchg
into
js
sub
in
dec
xor
movsb
cmc
inc
aad
subb
inc
fwait
or
out
int3
iret
das
bound
or
test
inc
fnsave
insl
jb
and
sub
jmp
sbb
pushf
aad
outsl
mov
pop
clc
repz
mov
imul
pop
mov
fistps
fistpl
jecxz
test
sub
or
cli
sti
cmp
cmpsl
adc
mov
mov
in
cmp
adc
mov
push
push
cltd
lds
jl
mov
sbb
mov
sub
icebp
pop
iret
je
xor
dec
push
mov
xchg
xor
adc
cli
cld
pop
shlb
jne
mov
adc
cmp
cmpsl
out
rol
xchg
aad
popa
je
mov
sub
xor
cltd
mov
dec
cmp
push
into
or
cmp
pop
sbb
popa
lods
movsb
out
rorb
rclb
setp
addr16
icebp
adc
adc
aam
adc
js
jb
mov
cmp
icebp
push
je
sub
enter
jecxz
pop
xchg
xor
or
stos
cld
clc
push
mov
dec
inc
cwtl
push
fs
jns
enter
in
nop
imul
and
mov
sub
in
or
outsb
js
inc
cmpsb
enter
aad
adc
divb
mov
dec
sub
repz
push
fidivrs
mov
lods
test
mov
ret
ret
pop
lods
fnstcw
lret
push
lds
out
dec
jne
into
mov
xchg
sbb
lret
mov
sbb
xchg
lea
dec
fcmove
or
test
rorb
pop
add
xchg
adc
aaa
inc
rolb
mov
push
add
sar
adc
lods
add
xchg
sbb
pop
movsb
rcl
arpl
sbb
lods
sub
ret
outsl
std
shrl
and
pop
or
pop
lds
cmc
in
mov
mov
lock
hlt
pop
sub
push
icebp
jle
insb
sar
jns
add
sarl
popf
sbb
xor
lcall
test
cmpsl
cwtl
fwait
hlt
push
xchg
in
cli
pop
push
lret
nop
add
stos
sub
insl
insl
movq
mov
test
add
cmpsb
xlat
sarb
clc
adc
popa
nop
out
pop
jno
xchg
jl
call
out
push
daa
jmp
ror
jle
dec
sub
push
dec
mov
jns
fidivrl
sub
enter
sbb
hlt
dec
stos
lock
xor
pop
mov
loope
jae
add
into
mov
jno
xor
jl
pop
inc
movsl
inc
or
sbb
dec
imull
in
pop
mov
cmp
cld
subb
out
js
fcmovbe
dec
mov
imul
movsl
lret
nop
cmp
js
xchg
pop
xor
and
lret
xchg
leave
add
or
aas
fimull
out
ret
dec
add
stos
mov
out
mov
pop
push
sub
cmp
insl
cwtl
mov
cmpsb
sbb
adc
mov
jmp
cmp
dec
imul
ja
dec
hlt
sub
push
sti
clc
outsb
sbb
test
mov
mov
jno
xor
adc
lcall
jle
lret
jne
push
sahf
test
cmp
into
loopne
inc
push
or
das
test
pop
notb
mov
mov
mov
jb
xchg
popa
xchg
cmp
hlt
adc
mov
xchg
mov
cltd
mov
mov
lcall
adc
dec
daa
jnp
dec
daa
outsb
in
ss
inc
cmp
lcall
ffree
sub
test
addl
adc
mov
pop
enter
push
push
inc
in
sbb
pop
dec
bound
fxch
mov
push
je
sub
add
mov
and
push
fdivrl
inc
jae
inc
adc
test
subl
je
testl
mov
inc
mov
scas
mov
and
das
sub
subb
ss
jne
and
loope
or
stos
xchg
push
adc
sub
rorb
adc
fwait
push
out
ficoml
adc
mov
xor
movsl
xchg
int3
sub
and
clc
push
add
cmp
mov
inc
fisubrs
jge
rcrb
push
ljmp
xchg
and
xor
mov
out
push
add
dec
daa
test
xor
add
mov
push
leave
orb
js
repnz
inc
dec
lods
mov
bound
clc
int3
int
cmp
pop
cmp
mov
call
testb
sub
lcall
loop
out
and
mov
add
inc
xchg
xchg
mov
dec
and
xor
ret
add
andl
pop
push
nop
mov
ljmp
or
sub
mov
outsl
jns
incl
pop
mov
ficoml
int3
test
pop
inc
popf
sub
std
cmp
ss
std
sbbb
push
and
xchg
mov
std
dec
repnz
push
cmp
iret
cmpsl
bound
sahf
out
mov
cltd
mov
call
add
xor
adc
jmp
mov
out
rcrl
adc
aam
cltd
mov
xchg
push
cmp
mov
sub
fcmovbe
out
je
push
pop
push
sbb
in
cmpsb
xchg
gs
out
xchg
pusha
sbb
jecxz
lock
xchg
adc
push
xor
push
dec
jae
nop
xlat
xor
xchg
cmp
daa
das
push
xor
sbb
mov
aaa
and
dec
dec
sbb
mov
mov
pusha
adc
and
sbb
jmp
lahf
test
pop
mov
dec
inc
cmp
cmp
outsl
jg
inc
ds
arpl
pusha
and
ret
lcall
ds
mov
roll
cmpl
ret
orl
scas
sbb
dec
shr
dec
test
xchg
jae
clc
mov
hlt
xchg
mov
push
pop
mov
and
ja
push
dec
add
pop
cmp
lcall
xor
inc
lods
mov
jae
jp
data16
mov
jae
dec
pop
dec
ljmp
jbe
jmp
mov
xchg
jbe
into
mov
lods
bound
adc
lret
push
cmpsb
pop
push
daa
mov
in
mov
sbb
mov
cmp
ljmp
stos
mov
xchg
ds
mov
test
fnstsw
lea
loope
lds
aad
stc
mov
sbb
clc
pop
stos
cmpsl
xlat
xor
dec
pop
adc
pop
xchg
aam
and
cmp
jmp
xchg
jge
loop
push
pop
pop
jg
rorl
jno
inc
adc
test
sbb
xor
inc
cmpsl
movsb
jl
mov
leave
mov
and
outsb
js
int
loope
out
lock
imul
inc
stos
mov
or
dec
and
mov
scas
push
mov
aad
inc
xchg
pop
mov
add
pop
mov
xchg
fs
sub
into
and
mov
orb
aad
pop
and
loop
jo
imul
or
pop
arpl
xchg
clc
popa
aad
cmpsb
lret
adc
push
adc
mov
adc
xchg
test
jbe
and
lods
push
cwtl
pop
sti
push
mov
cli
in
inc
pop
sbb
or
add
repz
pushf
call
out
mov
shlb
repnz
icebp
pop
cmpsb
sub
push
rclb
pusha
push
or
aam
clc
sub
adc
pop
es
jbe
lods
das
dec
sbb
sbb
inc
cmp
loop
es
jno
cmp
lds
into
xor
push
je
xchg
aaa
cmpsl
aad
in
movsb
jecxz
int3
ljmp
imul
imul
orl
mov
or
pop
inc
mov
ret
fidivrl
outsl
inc
sbb
fcomi
cmc
ds
sahf
dec
cs
js
in
mov
ljmp
push
loop
lahf
bound
xchg
sbb
jae
hlt
xor
or
mov
cmp
test
sbb
int
out
out
mov
movsl
dec
pop
and
pop
xor
push
mov
pop
ret
lret
cmp
xchg
fistpl
hlt
add
pop
jne
aas
mov
mov
add
xor
pop
stc
jnp,pt
inc
sti
out
dec
jge
jmp
and
in
push
ljmp
inc
pop
int3
mov
mov
pop
dec
andb
cmp
sbb
mov
arpl
bound
push
lods
xchg
xor
scas
mov
mov
mov
dec
pushf
push
lret
aam
fcoms
lret
mov
adc
aas
rcll
or
push
stos
push
push
inc
or
mov
fwait
int3
insb
push
ss
aaa
lds
fadds
dec
xchg
xchg
xchg
cwtl
and
push
into
imull
cmp
xorb
arpl
fiadds
mov
pop
adc
test
pop
sbb
jns
pusha
in
sbb
addl
test
fstps
xor
ret
xor
mov
jp
stc
add
sub
pop
xchg
adc
add
test
push
repnz
hlt
xchg
and
out
js
or
add
cmp
rcl
iret
xchg
data16
fistl
lods
outsb
pushf
pop
in
xor
dec
mov
js
in
dec
add
jp
or
out
pop
adc
mov
mov
sub
ja
mov
nop
push
or
lea
jb
jl
rcl
shlb
in
jmp
inc
lcall
imul
inc
jb
mov
fisubrs
lea
sub
mov
loopne
push
leave
push
ffree
fs
test
int3
mov
adc
arpl
popf
pop
inc
fidivrs
rclb
scas
imul
xrelease
xchg
xor
adc
imul
dec
stc
sub
mov
movaps
out
bound
repz
add
inc
inc
leave
push
jg
leave
fs
mov
mov
cmp
or
fmull
xchg
mov
cmp
add
pop
mov
push
push
cmpb
mov
test
test
cmp
in
sbb
rcrb
xchg
mov
xor
mov
xor
jnp
push
xor
mov
sti
pop
cmc
dec
inc
movsl
sub
dec
gs
repz
repnz
shll
xchg
repz
aam
out
sub
scas
loopne
add
push
mov
adc
ror
ret
and
mov
cmp
test
lea
pop
jno
cmp
push
sahf
out
sarb
mov
test
adc
or
fucomip
jg
dec
out
in
rclb
mov
loop
movsl
add
push
pop
mov
insb
mov
add
sbb
std
sahf
repnz
das
xchg
pop
cmp
test
cmp
in
fs
xor
scas
pusha
ja
movb
mov
pop
int3
jbe
cmpsb
ficoml
add
insl
sub
mov
xchg
mov
dec
sbb
arpl
inc
and
or
shll
inc
fadds
fisubl
adc
adc
dec
inc
mov
mov
push
pop
es
inc
loopne
in
aas
mov
mov
aad
sub
into
sub
xor
add
repz
mov
lret
sbb
fistpl
pop
sahf
mov
int
gs
scas
xor
call
dec
jne
add
mov
xchg
rorl
cmp
insb
xor
jno
aas
std
dec
into
xor
daa
sbb
sub
sub
mov
sub
jmp
ljmp
push
je
in
sahf
add
lods
faddl
add
mov
adc
add
insl
jbe
mov
xlat
imul
add
test
sbb
repz
jg
les
mov
sti
adc
insb
dec
sbb
call
adcb
and
jp
enter
sar
push
movsb
movsl
mov
shlb
shl
push
int
cltd
cmp
cmp
sub
bound
push
in
xor
dec
bound
pop
out
xchg
push
movsb
and
mov
push
in
xchg
xor
inc
addr16
dec
or
mov
cmpl
and
mov
xchg
inc
popf
test
stos
mov
jge
sbb
aas
mov
mov
ljmp
imul
imul
pop
pop
cmpsb
xor
push
lahf
xor
out
dec
xor
push
repz
pusha
push
pushf
dec
movsb
adc
fisubrs
pop
ds
or
out
xor
xchg
xchg
aad
add
mov
mov
sbb
sbb
sub
int
xchg
loop
or
xor
xor
xor
mov
pusha
jbe
mov
lds
mov
jns
push
mov
icebp
add
jmp
dec
mov
stos
push
jmp
arpl
mov
imul
in
adc
nop
sub
sbb
xchg
dec
loop
loopne
sahf
lahf
pop
xchg
lods
dec
ret
dec
jle
cli
dec
gs
lods
jno
jmp
repz
jecxz
ret
or
out
fsts
movsl
pop
adc
or
mov
jmp
add
fs
imul
fldt
hlt
cmc
push
mov
sbb
jb
sbb
xchg
lods
loopne
pop
inc
push
xorb
pushf
enter
adc
xchg
push
rorb
push
mov
dec
add
xor
pop
daa
mov
adc
inc
shl
inc
test
push
ss
scas
lods
das
push
fcoms
ror
or
pop
rcrb
inc
mov
sub
push
jne
adc
ret
orl
popf
xor
imul
repz
shl
popa
jo
pop
cltd
fwait
dec
push
push
rcll
loop
enter
inc
inc
loop
xor
cmp
in
add
test
jmp
cmpsb
out
inc
es
push
or
pop
cli
jmp
lahf
fcomi
mov
sub
lock
gs
dec
mov
pop
cltd
faddl
fs
xor
cmp
je
fsubr
lds
and
pusha
mov
mov
inc
shlb
xchg
dec
pop
sbb
adc
mov
fdiv
xchg
mov
fwait
jge
or
fs
sti
jp
pop
inc
pop
sbb
int3
mov
inc
in
and
scas
test
push
test
xchg
cmpb
lahf
cmpsb
out
ret
inc
mov
cmp
pop
data16
jmp
and
push
ret
out
aas
mov
nop
mov
icebp
push
rol
mull
mov
cmc
mull
ds
or
jl
inc
mov
sub
push
mov
push
dec
loop
inc
sbb
add
divb
push
call
push
movsb
xchg
xor
mov
push
push
add
cmp
adc
mov
adc
out
shll
cmp
cwtl
movsl
add
sub
adc
push
lods
xchg
pop
iret
outsb
mov
pop
andl
psubsb
jecxz
in
dec
jno
inc
mov
cwtl
ret
push
loopne
loop
adc
add
mov
or
mov
or
jg
pop
or
and
stos
shll
jge
scas
gs
fildl
fnstenv
adc
loop
aas
lods
pop
dec
insb
pop
mov
sti
frstor
out
in
int
ss
dec
out
lret
mov
aaa
icebp
rcll
dec
push
shll
ficoml
dec
mov
cmp
sbb
sub
jecxz
imul
std
idivb
leave
sbb
cmp
and
lret
add
roll
sbb
xor
xor
and
push
sar
fildll
push
scas
sbb
push
popf
sti
out
fcomp
notb
cmpsb
mov
mov
sbb
sbb
cmc
xor
loope
fisttps
mov
aad
and
inc
dec
lds
inc
cmpl
mov
sahf
loopne
mov
jmp
jle
pop
xlat
stos
dec
fwait
jno
xchg
jns
cmp
push
xchg
mov
and
pop
jo
out
pop
mov
ror
add
jg
jecxz
ficompl
sbb
call
jp
pop
inc
ret
pop
add
inc
adc
sub
jmp
movsb
sub
dec
or
add
pop
cwtl
jbe
xor
and
mov
lcall
fistps
pop
iret
pop
cmp
adc
dec
inc
decl
inc
mov
or
adcl
std
jge
jmp
xchg
dec
mov
jns
push
int3
mov
loop
pop
mov
xchg
pop
cmp
ret
mov
stc
popf
lods
jle
fsubs
mov
sbbl
daa
dec
push
pop
pop
inc
roll
test
xchg
pop
dec
test
adc
or
adc
nop
mov
icebp
push
cmc
cmp
call
cmpsb
pop
sbb
ja
fimull
adc
inc
lcall
mov
imul
mov
mov
stc
daa
lret
add
add
scas
out
mov
pop
sahf
movsl
mov
insl
mov
fxam
add
or
aam
popl
dec
mull
cld
jnp
xchg
push
add
filds
mov
jg
xchg
pop
xor
mov
push
in
ja
loope
ret
iret
inc
adc
popf
pop
lahf
lock
ret
xchg
gs
cmc
mov
mov
sahf
cwtl
adc
scas
mov
sub
fcmovbe
fsubl
test
jae
les
mov
push
and
pop
mov
jae
aaa
leave
mov
pop
mov
pusha
mov
fisubl
xchg
jnp
adc
fidivs
out
in
stos
aad
out
dec
add
jnp
and
jnp
iret
jo
pop
outsb
outsb
loopne
push
mov
xchg
jmp
stos
std
lcall
jb
divl
incl
cmp
rol
cmpb
push
in
cmp
and
sbb
int3
push
out
fildl
icebp
sub
xor
test
ljmp
pop
repnz
mov
mov
sbb
jg
rorb
jecxz
lds
dec
add
push
dec
vmread
std
sub
jno
cmpl
mov
mov
xchg
or
push
stos
in
fsubl
add
repnz
out
sub
sub
push
mov
in
mov
fldcw
lret
jno
sbbl
xor
and
adc
mov
hlt
mov
test
clc
add
xor
mov
js
jmp
mov
sub
pusha
cmp
inc
cs
lcall
pop
and
sub
pop
lds
xchg
add
push
push
mov
nop
pop
jg
xchg
jno
leave
jae
cld
or
push
or
mov
dec
stc
xchg
out
inc
push
ds
mov
xchg
das
add
into
rol
jns
add
xor
mov
cmp
jns
jp
dec
mov
push
loop
das
fisttpll
outsb
hlt
add
cli
fildll
fdivr
add
jg
aas
inc
cmp
and
push
aaa
pop
fdivrl
int3
outsb
decl
cwtl
push
inc
xchg
sub
mov
xor
aad
enter
inc
and
fdiv
jae
inc
push
xor
inc
push
sbb
lods
mov
or
lret
test
and
aaa
jmp
sbb
dec
mul
dec
sub
fsubr
cli
ljmp
fisubl
mov
cmc
jnp
shll
pop
les
inc
popf
mov
cmp
js,pt
mov
cmpl
cmp
pop
fildll
fistps
bound
inc
fists
ficompl
loope
dec
pop
or
inc
in
inc
mov
mov
pop
pop
pop
xchg
call
pop
ret
insb
push
lea
push
aam
mov
sub
or
pop
xor
cmp
jl
inc
mov
cld
call
jecxz
mov
ja
jle
or
rcrl
imul
push
inc
cmp
pop
rcrl
loop
push
inc
xor
mov
mov
pop
iret
cmp
pop
cs
mov
push
mov
test
sbb
je
push
mov
pop
jle
sbb
add
jns
pop
iret
insb
and
cmp
adc
sub
jo
out
jecxz
in
mov
stos
adc
insl
push
adc
ret
inc
arpl
stc
in
add
sub
imul
stc
leave
lret
jp
xor
aad
xlat
jle
fdivrp
cld
out
xchg
dec
mov
inc
mov
sahf
mov
push
test
test
out
imul
pop
fcompl
adc
jge
cmc
cmpsl
pop
or
adc
rcr
adc
into
mov
xchg
pop
sub
addl
cwtl
fsubl
cwtl
popf
fadd
insl
cs
xchg
inc
adc
imul
jle
scas
pop
mov
repz
inc
dec
cmpsl
shll
iret
popf
pop
test
daa
loope
imul
psubw
add
insb
xchg
pop
jne
push
mov
cmc
inc
stos
mov
pop
xor
push
and
inc
adc
sbb
mov
pop
outsb
fnstsw
xor
sub
or
add
aas
or
mov
add
or
test
and
mov
add
loope
cmpsl
push
lods
enter
imull
mov
cmc
jb
xchg
mov
inc
into
or
lods
lods
jmp
aam
push
or
cmpsl
in
cli
dec
xchg
push
jns
sub
jae
imul
scas
imul
dec
or
rcrl
inc
inc
mov
mov
fisubs
adc
inc
sbb
dec
in
cli
notl
push
rorb
in
sub
je
xchg
pop
xor
mov
cmp
adc
out
fdivp
jl
in
rolb
nop
or
jns
aas
test
adc
xchg
popf
mov
ja
testb
lahf
arpl
xchg
push
inc
jo
daa
sahf
push
lret
xor
leave
or
sub
jbe
incl
dec
fldcw
nop
and
cltd
test
adc
lock
outsl
iret
stc
mov
push
xor
adc
and
int
pop
jno
xor
mov
pop
les
push
sbbl
sub
adc
push
dec
pop
cmp
imul
imul
mov
js
repnz
gs
xchg
ret
mov
mov
xchg
and
mov
mov
sbb
sbb
sbb
repnz
mov
and
fimull
imul
pop
std
gs
mov
push
inc
or
inc
cwtl
insb
push
sbbb
addr16
pop
push
pop
hlt
and
xchg
dec
aam
push
les
push
jb
pop
push
stc
fsubrp
outsl
mov
idivb
xor
call
sbb
scas
and
movsb
test
sub
push
fwait
jno
and
pusha
dec
push
into
dec
pop
aas
mov
or
mov
pop
pop
movsl
push
xchg
lahf
outsl
jp
xchg
fmull
mov
pop
jmp
divb
and
fnsave
shl
call
leave
shlb
xchg
int3
mov
adc
lods
sub
rcrb
mov
ljmp
mov
fwait
mov
aas
mov
push
clc
cmp
adc
jp
mov
lods
scas
cmpsb
and
outsl
lea
and
mov
jle
adc
iret
jo
mov
das
adc
pop
inc
dec
xchg
or
mov
repnz
es
pop
jae
cmp
jge
cwtl
sbb
xchg
dec
fld
sbb
cmp
mov
fldenv
pop
scas
and
movsl
push
out
shr
jp
popf
sbb
in
jmp
lahf
ljmp
sub
clc
lods
and
push
std
pop
aas
fisubs
pop
xor
roll
cmpsb
and
int3
int
ja
pop
push
mov
inc
cmp
int
lods
insl
xlat
aam
leave
popf
clc
xlat
ljmp
jmp
inc
iret
jnp
sbb
rolb
and
inc
rcll
mov
or
xchg
loopne
push
out
scas
stos
inc
lret
call
int
sarl
add
fcmovu
aaa
pop
out
xor
mov
leave
dec
sarb
jo
hlt
mov
mov
call
sub
sub
or
xlat
sub
dec
jmp
or
xchg
test
shll
pushl
add
ja
sub
mov
xor
jne
popl
test
xlat
add
test
icebp
outsb
sub
imul
cmpsl
and
push
stos
ljmp
or
jl
in
ja
xlat
lock
daa
icebp
js
cmpsb
add
or
aas
inc
loope
jns
sub
and
pushf
negl
pop
jge
in
sbb
jnp
fisubrl
pop
jmp
mov
ss
scas
cmp
call
shll
stos
sub
mov
and
xor
hlt
dec
xchg
out
add
pop
push
lods
pop
xlat
loop
call
sub
sarl
lret
test
jmp
jge
test
cld
sarb
movsl
shll
je
or
imul
das
aaa
lods
js
cmp
loopne
cmp
cmpl
sub
push
push
and
mov
in
hlt
sti
or
mov
and
inc
adc
pop
jle
in
stos
loop
or
daa
xor
mov
push
mov
repnz
addb
inc
mov
std
jp
andl
mov
xor
js
jmp
xchg
push
mov
rcrb
ret
or
xor
adc
and
push
xchg
mov
sub
add
ret
pop
push
dec
sub
pavgw
aaa
sbb
xor
lods
cmp
and
out
out
mov
add
inc
push
push
and
and
ja
sbb
sbb
je
mov
icebp
or
loop
mov
mov
sub
jns
cmp
inc
addb
or
sahf
sti
in
inc
negl
push
sub
addl
sub
outsb
pusha
pop
loope
adc
push
xchg
movsb
sub
mov
jo
cmp
das
push
sbb
leave
aaa
aam
push
loopne
dec
mov
aas
outsb
out
movsl
jle
lock
jl
sbb
rclb
mov
push
or
dec
jno
movsb
push
inc
fisttpll
out
in
mov
push
repnz
or
cmp
mov
add
call
mov
mov
out
sub
mov
jne
lret
push
xor
sarl
sbbb
mov
push
js
xor
pop
jae
sub
mov
jbe
pop
push
inc
enter
xchg
dec
mov
or
fisttpll
sbb
jbe
sahf
fsubl
xor
daa
xchg
fdivs
sti
sub
adcl
notb
mov
fidivrs
jmp
cld
call
stc
mov
sub
jno
jge
fisubrl
jo
arpl
add
mov
testb
add
rorb
push
loopne
leave
add
addr16
adc
lods
mov
pusha
fistpll
sahf
movsl
lcall
pop
and
mov
fsubl
or
lret
or
addr16
cmp
mov
and
stos
es
aad
dec
dec
data16
pop
insl
repz
and
cmpsl
test
mov
nop
lock
aad
int
hlt
outsb
cld
outsl
icebp
jge
into
or
out
enter
mov
cmp
push
dec
cmp
inc
outsb
jb
pop
inc
xchg
jp
sub
push
cmp
and
or
jle
call
mov
pop
mov
es
lcall
xor
ret
add
fcomps
push
jg
out
push
aaa
ret
stos
mov
lock
sbb
push
push
and
das
xor
nop
into
inc
mov
insl
icebp
fistps
es
sub
icebp
jl
stc
cwtl
rcrb
fdiv
int
cmp
je
mov
test
pop
add
xor
mov
call
cmp
sub
inc
popa
stos
hlt
sub
jae
shll
imul
fidivrl
push
sarl
push
mov
repnz
pop
enter
pop
jge
imul
repz
push
mov
testl
xchg
inc
mov
xlat
cwtl
sub
xlat
pop
push
hlt
cltd
push
mov
lcall
add
mov
push
insl
movsb
repnz
mov
lock
dec
daa
cli
push
lock
aad
stos
test
jg
jo
jae
test
adc
xor
xor
pop
mov
das
gs
inc
jno
daa
js
pop
dec
cmp
and
xor
pusha
mov
fldcw
jns
in
data16
push
into
lret
or
sub
pop
fidivl
enter
mov
xchg
jle
andl
xchg
jecxz
out
mov
push
add
push
or
mov
sub
fs
adc
stos
pop
cmpl
jg
cmc
nop
inc
pop
xchg
jnp
cmp
aad
mov
xor
js
xchg
lcall
and
stc
daa
xor
cwtl
insl
faddp
push
push
lods
pop
into
sti
in
or
daa
addb
cmp
cmp
loop
scas
jb
pop
faddl
inc
pop
xor
lds
xor
pop
lret
mov
adc
mov
inc
stos
test
push
fiaddl
les
int3
pop
gs
arpl
sahf
leave
push
rorl
mov
mov
iret
push
mov
mov
fdivp
es
jb
xchg
nop
daa
or
mov
mov
jge
ljmp
add
mov
jge
outsb
test
cmp
cltd
cmp
data16
addb
imul
jnp
xchg
xchg
fs
inc
enter
cld
sbb
cli
sti
push
xor
lds
mov
cmc
lret
fadds
rclb
sahf
incb
pop
repnz
mov
or
inc
rcrb
rcr
cwtl
inc
repnz
push
mov
test
or
and
push
mov
pop
call
sub
cmc
mov
insb
sub
jae
outsl
xor
int3
xorl
xor
mov
loopne
mov
ljmp
clc
cmp
pushf
mov
pop
cwtl
loopne
push
jle
data16
out
and
mov
dec
cmp
adc
fistpll
call
inc
cltd
jnp
cmp
out
add
xor
aam
fists
inc
adc
ja
jb
lret
xor
xchg
ljmp
xchg
adc
scas
mov
stc
movsb
cltd
cmc
dec
repz
sbb
mov
stos
xchg
inc
sub
iret
and
mov
cltd
iret
sub
imul
push
lock
loop
sbb
shrb
push
in
and
adc
inc
sahf
cmp
arpl
mov
cmc
mov
mov
and
rolb
sarb
sbb
mov
pop
jno
inc
lret
cs
inc
push
fildl
or
imul
inc
mov
fidivl
mov
mov
xchg
inc
aas
cmp
inc
fs
xchg
pop
daa
and
stc
sub
das
push
cmpsl
inc
sbb
insl
sti
cmpsl
sbb
add
icebp
adc
cmpsl
cmpsl
mov
fistpll
ljmp
sbb
mov
xchg
jnp
xor
dec
lcall
pop
inc
pop
scas
fidivl
mov
push
test
call
or
xchg
rcll
sti
scas
int
pop
movl
xorb
or
mov
popa
xchg
cmp
sub
inc
loop
cwtl
jns
popf
inc
sub
sbb
or
or
in
lods
lret
and
ret
xor
leave
icebp
aas
fisubrl
test
cmp
addl
pop
and
and
lcall
addr16
xor
movsb
xor
aas
adc
es
ljmp
lret
rcrl
jp
into
pop
pusha
pop
jmp
adc
lods
fadds
pop
mov
popa
jmp
int
mov
mov
scas
ja
mov
je
push
adc
fistl
add
pop
lret
push
clc
cltd
out
jp
pop
je
pop
fwait
iret
xor
dec
adc
and
mov
imul
outsb
mov
popa
inc
mov
push
push
sbb
xchg
in
cmpsl
inc
test
sbb
pusha
std
inc
ja
mov
cmc
push
pushf
dec
rolb
loopne
push
adc
jge
xor
dec
daa
fmull
adc
add
enter
jle
jnp
lret
sbbb
xchg
cmp
int
bound
es
xchg
popa
fisubl
xor
add
test
xor
jg
mov
loop
nop
or
imul
or
adc
xor
mov
rcrb
ds
mov
xlat
jne
repnz
sti
xchg
ret
cli
and
or
add
push
cmpsb
and
add
push
mov
cmp
rcll
out
xchg
dec
mov
int3
nop
push
ror
pop
iret
jbe
xor
push
push
movsb
jns
js
xlat
leave
notl
and
in
mov
div
sahf
test
es
aas
fwait
jns
lret
xchg
psubsb
jns
in
mov
or
add
out
lds
adc
sbb
inc
push
ja
aad
sub
aas
fadds
xchg
popf
mov
gs
adc
adc
sbb
jle
sub
sub
jae
adc
xor
lcall
inc
je
test
mov
add
pushf
xchg
xor
add
mov
xchg
xchg
cs
cmp
sbb
lret
mov
mov
aam
push
fsubrs
fnsave
adc
mov
pop
mov
filds
adc
pusha
adcb
sbb
sub
mov
cmp
or
push
mov
addr16
sti
movsl
jae
and
rcrb
loope
dec
arpl
aaa
hlt
mov
xor
pop
inc
into
daa
sub
ficoml
and
cmpsl
mov
pusha
add
cmpsb
pop
int3
adc
loop
das
sbb
int
mov
push
sbb
sbb
adc
mov
pop
jb
pop
pop
fbld
fdivrl
adc
jge
ja
mov
xor
sub
xor
ret
mov
pop
cmp
sbb
fsts
imul
fnstcw
jb
stc
aas
testl
lock
insl
fcoml
xor
jb
aam
xor
xor
jp
mov
mov
aaa
xor
mov
mov
loop
out
jg
mov
jecxz
mov
fsts
stc
mov
xchg
cmpsl
lret
sti
and
and
pop
roll
xorl
pop
aas
std
lret
fistl
pop
shr
push
lret
push
pushf
and
jge
mov
sbb
add
hlt
add
je
and
push
int3
fimuls
fsubrl
rcrb
pop
push
or
nop
movsb
fs
adcb
jmp
pop
test
lock
push
sub
cmpsl
scas
push
lds
fisttpl
fcmovbe
mov
inc
sbb
add
nop
push
insl
dec
mov
ret
jg
ret
js
subb
les
js
rorb
xor
int3
xchg
cmpsl
mov
push
or
xorl
push
mov
sbbl
stos
call
xor
shlb
mov
loop
lods
test
mov
mov
aas
loopne
xlat
xor
cwtl
test
push
ret
xchg
xor
pop
out
xlat
test
cmpsb
ss
xor
sub
daa
push
pop
in
data16
xor
cmp
fadds
addb
and
sbb
or
lahf
xor
mov
test
cmp
mov
jne
xor
jbe
ret
pop
repnz
in
jecxz
es
sbb
mov
test
movsl
notb
xchg
push
mov
mov
je
push
bsr
hlt
shlb
test
repz
repz
iret
repnz
stc
sub
dec
fsubs
jmp
in
shll
ficoml
and
mov
fcomps
mov
inc
das
mov
add
cmp
nop
xchg
notl
mov
sbb
clc
shrb
inc
js
outsb
push
call
and
scas
push
scas
in
in
enter
pop
loop
mov
xorl
inc
lahf
sbb
inc
addr16
stc
xchg
cmc
sbb
mov
and
inc
lods
jo
loopne
mov
push
sub
aam
lock
nop
sub
mov
cmpsl
aad
jge
cwtl
outsb
jb
outsl
mov
adc
push
shll
shll
sub
xor
jo
inc
pusha
mov
inc
pop
adc
pop
cmpsl
sbb
and
mov
enter
popa
dec
jnp
jp
outsl
pop
flds
sub
add
lods
pusha
into
inc
pop
sub
mov
hlt
pushf
mov
roll
sub
loopne
scas
fiaddl
lcall
ret
test
mov
pop
ljmp
xchg
ds
cltd
addr16
push
shr
sub
aad
sub
cmp
and
and
mov
mov
scas
gs
push
or
stos
das
rcr
add
fdivp
cmp
jge
and
adc
jge
adc
or
mov
test
adc
jne
dec
dec
xor
sarl
jnp
sub
push
mov
mov
outsb
pop
loop
in
pop
sbb
pop
scas
jne,pt
pushf
ljmp
fdivrl
dec
inc
imul
outsb
cmp
test
mov
arpl
add
out
sub
sahf
mov
hlt
scas
call
clc
cmc
sbb
and
andb
jecxz
mov
aaa
inc
das
or
rorb
div
and
jmp
daa
mov
inc
and
lret
adc
cmp
mov
dec
xchg
movsb
jge
fwait
cmc
js
fldt
into
mov
or
mov
lret
rcl
test
mov
mov
xchg
xchg
pop
push
push
mov
xor
push
bswap
hlt
sbb
push
cmp
or
sub
xor
pop
add
mov
movsl
jmp
or
and
jl
cld
jl
imul
xchg
cmp
fistpll
out
sbb
je
dec
stos
movb
add
or
orl
sbb
adc
out
inc
and
sbb
ret
popf
cs
sbb
inc
jo
test
and
and
cwtl
mov
pushf
cmp
imul
lods
sub
pop
xchg
jae
fstpl
fwait
dec
add
lods
mov
jnp
cmpb
int
push
cmpsl
jecxz
pop
outsl
stos
fidivs
inc
int
add
push
js
aad
das
pop
mov
lahf
enter
mov
ja
popa
out
stc
or
popf
movsl
fildl
pop
popa
mov
outsb
fnstsw
cwtl
mov
add
jge
ljmp
inc
enter
pop
push
sub
pop
je
cmp
inc
inc
or
jae
xchg
fisubrs
xchg
std
in
cli
xchg
push
filds
sbb
nop
outsl
pushf
pop
sbbl
aas
jbe
jge
sbb
dec
ret
addb
fstps
cltd
into
faddl
mov
pop
nop
xor
dec
out
je
stc
pop
cli
pop
xor
pop
in
ds
idivl
out
stos
incl
cltd
pop
loopne
and
fs
sub
and
mov
ret
arpl
jae
mov
inc
mov
mov
cltd
subl
enter
insl
mov
xchg
push
cli
add
add
jae
xlat
ds
xchg
mov
jbe
aas
repz
cli
pop
xchg
out
loope
aad
rcrl
or
fcoml
sub
push
cmp
jno
dec
add
jae
loopne
lods
mov
xor
inc
out
push
xor
xor
outsl
jl
iret
pop
shrb
adc
mov
mov
stos
jmp
mov
mov
jmp
pop
mov
ljmp
mov
scas
imul
inc
sbb
pushl
adc
ret
lds
adc
hlt
in
lret
mov
int
inc
loop
pushf
mov
adc
popa
sbb
in
cmpsb
sub
sub
or
or
jns
sbb
or
int
jle
push
adc
cld
pop
sbbl
push
xchg
cld
xchg
pop
stc
and
loopne
and
xchg
aas
std
lods
inc
or
sbb
mov
mov
sbb
sbb
mov
imul
sub
push
mov
xor
rcl
cli
rclb
push
mov
lret
arpl
mov
rcrl
cmp
int
pusha
mov
pop
je
idiv
loopne
hlt
xchg
ret
hlt
out
dec
push
inc
mov
mov
mov
inc
push
add
push
xlat
push
inc
jne
sbb
mov
sbbl
addr16
andl
inc
and
fidivrl
mov
jge
inc
lods
jecxz
pop
cwtl
push
sbb
cmc
aas
std
mov
gs
notl
rorl
int
dec
cmp
stos
outsl
fisttps
loopne
movsb
nop
inc
daa
sub
in
mov
sub
int
add
push
nop
stc
jne
sbb
lock
mov
outsb
inc
push
stos
and
dec
jnp
sbb
adc
xor
ror
add
xor
xor
mov
fwait
shll
arpl
subb
nop
shrl
std
cs
addr16
jmp
lret
orl
mov
aad
in
out
mov
xchg
pusha
add
sub
xchg
out
cmp
notl
push
mov
mov
pusha
loopne
ds
daa
stos
push
sti
adc
pop
cmpsl
jle
stos
jle
push
lcall
jle
mov
or
pusha
and
push
test
shlb
gs
adc
test
inc
in
adc
and
cli
and
and
and
mov
cltd
and
mov
push
outsl
push
js
add
mov
fcoml
xor
ret
dec
call
sbb
or
cld
xor
je
and
or
cld
mov
testb
jb
mov
in
dec
push
shll
lock
cmpsb
fucompp
pop
adc
mov
sub
nop
mov
add
jbe
jp
mov
pusha
inc
stc
pop
andb
cmp
rol
jns
cmpsl
xchg
and
outsl
mov
jbe
inc
mov
jae
iret
xchg
fucom
fimull
out
sarl
jno
mov
fs
je
inc
jbe
add
hlt
xor
xchg
arpl
or
or
in
mov
jbe
sbb
dec
cmp
fisttpl
loope
and
jbe
pop
jnp
adc
and
dec
sbb
jecxz
mov
push
pop
sbb
mov
out
xor
inc
pop
or
jb
sti
mov
inc
push
fwait
cmpsl
pop
jge
sub
insl
fldt
popa
xor
push
in
cli
loope
cmp
dec
sbb
pop
pop
les
push
fldenv
cwtl
sub
lods
cmpsb
ret
mov
mov
movsb
adc
out
sbb
imulb
add
mov
xor
xlat
int3
cmp
jmp
sahf
cmc
push
ficompl
sbb
sahf
sub
les
mov
fbld
inc
in
mov
mov
in
dec
out
aam
xchg
and
ret
out
hlt
push
xchg
inc
lret
and
push
pop
jmp
pop
cmp
xlat
subb
adc
mov
rcll
or
rcll
daa
xor
xchg
dec
les
mov
xchg
test
fisubs
lock
pushf
add
in
hlt
out
leave
push
inc
lahf
movsl
lret
pop
jl
hlt
cs
fwait
dec
jmp
and
sbb
pop
daa
jnp
gs
and
ret
outsb
out
sub
sbb
push
sti
loopne
dec
cmp
inc
mov
add
sub
ja
popf
ret
aaa
popf
inc
movsl
xchg
add
insb
mov
jbe
inc
movsb
sahf
mov
ret
icebp
mov
xor
jno
out
lds
adc
dec
fucomip
movhps
pop
cmp
xchg
pushf
jecxz
xchg
mov
jle
cmp
cli
cmp
repz
test
jae
stos
jae
sub
cmpsl
adc
jecxz
out
xor
jmp
jns
shlb
shr
xlat
cmpsl
pop
mov
mov
outsl
cmpsb
or
ret
pop
sub
cmp
fildl
lret
div
xor
cmp
adc
aam
dec
inc
cmp
insb
out
lret
mov
dec
adc
mulb
inc
cmp
push
pop
mov
inc
push
mov
adc
jge
cli
insl
sarb
rclb
imul
adc
jne
add
out
adc
loopne
xchg
sarl
mov
lcall
dec
imul
aam
stos
pop
adc
int
dec
and
dec
pop
xchg
fnstcw
cmp
fwait
inc
cld
out
loope
cmp
daa
jae
mov
pop
mov
std
jb
enter
and
test
xor
adc
jbe
mov
jbe
xchg
dec
cld
push
decl
mov
xor
sub
xor
or
mov
jp
cmp
inc
jns
cmp
jae
mov
add
out
cmpsl
out
xchg
mov
jmp
sarb
mov
icebp
call
xor
popa
in
or
adc
lahf
xchg
cmp
jecxz
xchg
push
bswap
addr16
scas
jmp
xor
mov
mov
cmp
push
push
dec
outsl
jge
cs
std
cli
push
in
aad
sbb
aad
push
incb
movsb
push
add
xor
imul
mov
push
arpl
mov
lahf
frstor
icebp
bnd
dec
loopne
lcall
scas
je
mov
fninit
ret
jp
js
mov
notb
xor
jb
mov
xchg
dec
arpl
aaa
repz
inc
add
or
add
inc
or
mov
adc
sub
push
aas
arpl
xlat
dec
ljmp
mov
pop
out
lret
pop
gs
xchg
push
add
shlb
cltd
into
jbe
hlt
push
and
shll
cmpsl
jns
or
test
sub
lds
test
sbb
jnp
insb
vmaxps
sbb
mov
testb
aas
cmp
pop
xchg
sub
xchg
push
shrl
test
mov
and
pop
jmp
push
scas
mov
xchg
shrb
sub
arpl
cmp
std
pop
dec
cmp
out
inc
jo
push
in
pop
flds
clc
dec
shl
aas
pop
fsincos
jge
mov
push
dec
sub
pushf
sbb
rcll
imul
jnp
xchg
or
fbld
sbb
out
jmp
sbb
out
xchg
push
xchg
jo
sbb
movsl
fbstp
push
movsl
xchg
fisttps
es
out
hlt
int3
call
sti
cld
mov
mov
mov
outsb
sbb
imul
and
loope
or
out
mov
xor
inc
inc
cmp
pop
sub
es
mov
je
ret
mov
inc
push
add
popa
testb
mov
lods
ret
adc
xor
pop
imul
push
int3
test
inc
push
jle
fs
test
pop
jne
ret
xor
mov
add
cmpsl
dec
cmp
lcall
leave
in
addr16
call
mov
jb
out
sub
cmp
jns
pmulhw
loop
and
icebp
out
pop
mov
stc
outsl
pop
push
dec
push
pop
test
lock
fsubr
push
dec
push
xor
bswap
scas
rcrl
cmp
jbe
lahf
sahf
stc
sbb
repz
mov
ja
loopne
popf
fcoms
xorl
xor
sbb
jge
insl
mov
out
jg
cmp
push
and
mov
sbb
int
pusha
lret
popf
mov
pop
xor
xorb
xor
mov
jbe
inc
int3
xchg
dec
jno
repnz
in
imul
inc
fstps
inc
push
jo
out
je
cs
jnp
sbb
scas
das
sbb
js
pop
xchg
jno
shrb
aas
xchg
or
cmc
xor
pop
les
and
add
pusha
pop
inc
mov
mov
aam
dec
repz
push
mov
mov
xor
outsl
push
pop
in
nop
sub
cmp
ficomps
test
lods
xchg
mov
inc
je
je
leave
rorl
hlt
stos
negl
jns
jb
add
mov
pop
es
inc
push
mov
or
mov
sti
mov
and
mov
add
mov
add
jmp
fcompl
ljmp
das
mov
adc
xor
lods
cmpsl
jmp
fidivl
movsb
imul
mov
jp
stos
xacquire
into
jecxz
sbb
or
imul
lret
popa
or
imull
test
sarl
push
cmp
data16
in
dec
mov
fcoml
mov
add
and
jns
jne
test
in
cmp
fdivp
push
push
scas
in
dec
iret
lock
cmp
ficompl
jl
mov
dec
scas
sbb
cltd
add
xchg
loop
lds
xor
dec
push
in
adc
cmp
and
add
shl
cmp
sub
bound
in
outsb
pop
xchg
std
xchg
push
arpl
fimull
inc
cmpsl
cld
mov
fcoms
and
subb
ja
inc
in
leave
sti
xchg
negl
std
cli
push
jae
adc
test
inc
rorb
mov
xchg
xchg
lahf
xor
mov
pop
adcb
pop
mov
ret
fs
hlt
mov
lds
fs
mulb
mov
imul
mov
mov
or
std
test
sbb
adc
and
sahf
mov
enter
jno
das
push
repz
xchg
push
iret
jbe
pop
shlb
repnz
jne
test
test
repz
xor
scas
int3
dec
mov
pop
sbb
ror
es
mov
fdivs
adc
fdivr
or
pop
sbb
pop
rcrl
pop
mov
fidivl
cmpsb
hlt
push
sarl
adc
mov
pusha
sub
movsl
jmp
les
or
mov
sahf
sbb
dec
mov
ja
addb
aad
xchg
stos
cld
lret
or
pop
cmp
data16
jg
out
sub
stc
pop
cmp
sbb
dec
lret
or
data16
xor
add
xchg
in
adc
sbb
or
or
jge
push
decb
scas
lds
mov
sbb
icebp
movsl
xchg
mov
clc
ror
mov
or
mov
mov
push
xor
sbb
pop
jbe
cmp
mov
shlb
push
stos
jge
xor
lcall
ffree
mov
pop
mov
dec
and
or
sbb
cs
inc
into
scas
add
push
stc
xchg
enter
dec
sahf
incl
sbb
jmp
test
scas
sar
jns
loope
and
jg
sti
mov
ljmp
or
pop
mov
pop
push
cmpsl
adc
into
imul
mov
mov
and
xor
dec
mov
in
fdivr
cmp
rcr
fisttpl
push
ja
mov
jmp
fidivl
push
dec
push
and
hlt
jg
push
mov
or
xchg
add
mov
rcr
les
fisttpl
and
mov
or
push
add
jnp
cmp
xchg
pop
dec
xor
jo
gs
inc
mov
stos
out
popf
inc
leave
rcr
sbb
hlt
pop
push
loope
adc
adc
cmpsl
mov
int3
xchg
and
push
rcrl
pushf
call
xchg
cmp
arpl
mov
dec
sub
xor
stos
sbb
sbb
push
push
lret
rorl
xor
fildl
xchg
pop
mov
arpl
mov
shll
cmp
pop
fwait
cmp
das
cmp
mov
fmul
jns
pop
adc
int3
aam
pop
fs
ret
sub
push
adc
pop
mov
or
xor
or
iret
subl
cli
addr16
lock
jmp
shl
xchg
ds
xlat
sbb
pop
stos
cli
mov
cwtl
dec
cmp
pop
mov
xor
cltd
sahf
and
in
and
sbb
lods
mov
sub
shll
cmp
fs
push
xchg
pop
xchg
jbe
sub
mov
push
add
jle
sub
xor
push
push
addb
test
or
push
hlt
cld
jb
out
fsubl
or
andb
or
test
shrl
cmc
mov
hlt
xchg
push
jne
inc
ljmp
sbb
sbb
js
fildl
cld
xor
addr16
adc
adc
push
sbb
insl
scas
inc
mov
sbb
stos
push
cmpsl
scas
arpl
mov
ret
jmp
loope
mov
popf
mov
jg
sarb
stos
xor
cwtl
lock
adc
scas
dec
push
test
and
dec
cltd
mov
sarl
insb
mov
dec
xor
and
mov
rcr
and
mov
push
scas
or
mov
test
push
push
mov
jne
jle
pop
pop
inc
mov
xchg
arpl
mov
add
in
xor
loopne
lret
xor
cmp
out
sbb
dec
ds
add
jbe
sub
das
push
push
cltd
insl
push
lret
in
xchg
ficoml
mov
or
pop
push
fdivrs
jge
hlt
mov
sbb
jle
pusha
dec
jb
testb
es
rcll
lahf
xchg
out
mov
mov
adc
xlat
add
popf
leave
jmp
xchg
push
push
mov
mov
push
dec
in
pushw
out
mov
mov
pop
cli
mov
jmp
jns
and
sbb
out
push
mov
lret
cmp
or
sti
mov
arpl
and
insb
or
lods
fistps
sahf
sbb
in
push
imul
fs
mov
into
lret
xchg
mov
std
sbb
and
in
dec
iret
mov
lahf
outsl
mov
cmp
cmp
xchg
xlat
fs
sbb
test
push
mov
hlt
in
ficoms
jmp
sbb
sbb
cwtl
mov
test
xchg
repz
mov
sbb
in
and
insl
jae
sub
push
imul
mov
push
xchg
add
dec
inc
shl
in
lret
mov
and
mov
lahf
call
inc
mov
xorb
and
inc
sub
fcoml
dec
das
dec
addr16
das
xor
loope
xchg
mov
mov
pop
icebp
push
sbb
adc
fldcw
hlt
std
push
jnp
mov
loopne,pt
xchg
push
push
addb
push
dec
or
sahf
lods
mov
pop
test
sub
aas
cwtl
xor
out
jl
iret
sbb
iret
jne
add
idiv
lods
sub
test
mov
cmp
xchg
mov
sbb
push
xchg
cmp
psubq
xchg
mov
cwtl
jo
rol
bound
add
fs
jmp
rcrb
lods
pushf
push
cmp
addl
cltd
pop
fldl
sti
jnp
jno
dec
adc
cmpsb
xchg
dec
outsl
lds
lcall
pop
adc
jae
test
arpl
dec
cmp
pop
pop
rcrl
repz
add
xchg
pop
cmp
jae
out
inc
pop
mov
xor
inc
movsb
mov
out
jg
into
jg
cmp
icebp
out
xchg
xor
jo
stos
movb
pop
inc
sbb
add
push
jb
and
aas
xchg
and
int
scas
lret
pop
dec
xchg
sbb
mov
pop
push
mov
cwtl
adc
lahf
jmp
mov
dec
dec
movsb
sub
insl
out
xchg
push
dec
jae
adcl
mov
lret
or
jle
filds
pop
iret
enter
pop
pop
and
movsb
in
sub
aas
insl
and
loope
scas
repnz
lods
test
cld
mov
aad
out
std
add
or
mov
gs
mov
sub
jge
inc
ret
lret
popa
test
loopne
test
jl
mov
sub
xor
mov
arpl
sub
and
jae
push
mov
xchg
inc
cmp
outsb
cmpsb
jns
push
sbb
fs
xor
adcl
jge
xchg
fdivrl
jecxz
aas
cld
test
daa
xchg
pop
jae
xchg
stc
insl
push
mov
jne
dec
dec
fidivrs
lds
cmp
int3
fstpl
push
pop
or
mov
pop
pop
lcall
push
push
call
cltd
je
aas
dec
fsubl
adc
jno
mov
pop
mov
sbb
or
sub
sbb
xor
mov
pop
ljmp
enter
push
in
in
popl
pushf
xor
iret
add
pushf
sbb
push
daa
sbb
add
aaa
sti
lods
ficomps
push
push
test
cwtl
inc
dec
aas
pop
mov
xlat
hlt
xor
ss
loop
aas
pop
mov
mov
push
lock
in
or
pop
cwtl
pmulhw
roll
push
fwait
sbb
push
loope
popa
and
lret
xor
jg
jnp
dec
jmp
loop
fldt
push
lret
cld
rcrb
mov
push
ret
mov
xchg
sbb
lods
popf
test
in
in
jne
pop
aas
fsubl
cs
jg
add
xchg
test
dec
hlt
jecxz
or
push
dec
or
fnstcw
cmpxchg
pusha
repz
xlat
inc
push
or
jbe
ret
push
push
mov
push
lock
mov
adc
nop
adc
mov
out
loope
or
aas
test
test
inc
cmp
sti
shrl
scas
lods
dec
mov
and
and
mov
push
fstpl
mov
sbb
inc
loopne
gs
sbb
fldt
mov
leave
fmulp
fists
xlat
aad
rorl
push
arpl
push
pushf
adcl
movsl
in
insb
movsb
stc
xchg
xchg
call
daa
and
cli
les
cmp
jne,pt
fs
add
pop
xchg
shrl
aad
fsubl
mov
icebp
sub
inc
push
mov
or
mov
inc
in
add
xchg
icebp
fiaddl
pop
and
ficoml
out
xchg
daa
jle
mov
int3
lret
dec
xor
jmp
mov
daa
leave
jnp
jecxz
push
sbb
fcmovnbe
xchg
inc
and
sub
mov
movsl
xchg
arpl
dec
lcall
adc
add
add
push
imul
fld
mov
mov
out
mov
movsb
pop
jg
outsl
orb
in
into
cld
jnp
mov
repnz
push
jge
popf
cmp
into
lods
and
xchg
add
jns
popf
push
push
mov
orl
fbld
jne
test
fldt
pop
inc
pop
or
icebp
push
and
sub
dec
lahf
lcall
xor
dec
fsts
popf
pmaddwd
ja
shr
pop
cltd
or
fadds
sbb
push
sbb
pop
push
mov
and
mov
pop
stos
mov
jb
mov
lods
and
inc
sbb
cmp
sbb
js
call
mov
sahf
int
fisubrs
rcrl
das
orl
cmp
push
shll
movsl
push
in
or
mov
shll
imul
mov
push
jp
scas
cmp
jnp
ja
dec
xchg
pop
lods
adc
repz
aas
dec
xchg
test
test
xchg
cmc
into
inc
scas
rorl
jle
jno
xor
int3
gs
fwait
shll
pop
imul
cmp
nop
and
in
popf
sub
jle
jecxz
adc
adc
and
hlt
test
xor
adc
fdivs
mov
dec
outsl
arpl
scas
insl
sahf
outsb
sub
mov
sbb
addl
push
mov
dec
xchg
std
sbb
add
mov
cltd
mov
popa
in
sbb
test
cmpsl
dec
sarb
fs
sub
daa
mov
fcmovnu
pop
iret
scas
mov
aas
fnstcw
xchg
add
lret
js
and
mov
push
aam
int
xor
into
push
les
push
mov
jle
sbb
mov
and
aaa
inc
push
out
xor
add
mov
int
or
outsb
ljmp
mov
push
sbb
stos
mov
add
cld
sub
sbb
push
and
div
insb
lahf
sbb
inc
sbb
jle
inc
cmp
inc
imul
outsb
sub
lret
xor
sub
outsb
or
add
or
inc
inc
ret
testl
int
xor
xchg
push
mov
imul
jne
gs
pop
hlt
roll
lahf
ror
xor
sti
push
or
mov
fists
xor
jno
sbb
cmp
movsl
xchg
ja
push
lds
cmp
sub
or
popf
jne
jne
cwtl
add
jb
and
or
dec
xor
add
mov
jns
xor
test
mov
dec
cwtl
aam
test
shll
push
push
mov
lds
push
jg
jecxz
in
adc
lret
mov
mov
jno
xorb
xchg
xchg
popa
fists
add
mov
xchg
imul
neg
xchg
or
cli
inc
cmp
jge
cmp
mulb
jmp
les
push
push
mov
lahf
jne
push
push
lahf
out
sbb
sbb
test
das
in
xor
lds
lea
addr16
xchg
pushf
out
enter
flds
lods
incb
rolb
mov
enter
in
js
mov
loop
pop
jge
stos
out
pop
in
push
inc
iret
popa
hlt
mov
clc
xchg
cmp
and
cmc
or
test
jp
es
sbb
sahf
pop
les
sti
ret
sbb
in
pop
push
std
add
xor
fcoml
fists
pop
cs
mov
push
jne
push
int3
or
jle
dec
jg
adc
gs
cmpsl
sub
lods
in
test
xchg
sar
hlt
loop
and
and
pop
mov
and
xor
loope
sbb
sub
imul
hlt
lods
jne
xchg
mov
pusha
inc
scas
aam
xchg
es
out
push
push
ljmp
mov
adc
add
jns
loopne
sbb
adc
mov
lret
mov
mov
sbb
cltd
lret
xor
mov
xor
xchg
pop
pop
addr16
mov
xor
xor
inc
xchg
int3
or
mov
in
pusha
inc
and
inc
xchg
jmp
ror
jb
addr16
orl
adc
or
xor
cmpb
pop
adc
mov
sbb
jp
add
fidivrs
xor
mov
adcl
sub
loope
sbb
mov
pop
mov
jns
int
push
dec
out
fcmovu
addr16
sub
and
mov
clc
aad
stos
push
iret
lods
push
xor
mov
cld
pop
cs
cltd
lea
sbb
mov
jle
cmp
cmp
sub
push
ljmp
cmp
xchg
add
cltd
push
stos
or
pop
xchg
sub
ljmp
jmp
cmp
popa
xchg
or
iret
mov
out
or
outsl
test
and
and
fdivr
add
sub
mov
das
test
outsl
sahf
adc
push
mov
daa
cmp
pop
jecxz
and
fistpl
cmp
push
mov
jp
das
xor
xor
ljmp
pop
cwtl
out
stos
inc
mov
push
sub
inc
scas
push
and
mov
into
rcll
testb
pop
in
js
mov
pushf
dec
clc
bnd
repnz
xchg
je
ds
lds
stos
xor
and
out
mov
jge
repz
dec
popf
ret
mov
fwait
in
aam
cwtl
mov
outsl
adc
mov
andps
in
jne
std
pop
adc
aaa
dec
cltd
sub
mov
repnz
dec
adc
hlt
sahf
sub
adc
mov
pop
push
fwait
and
inc
dec
add
jl
lahf
jnp
daa
adcb
add
das
mov
xchg
jns
jo
pop
or
add
mov
les
sti
mov
jns
stos
in
lahf
enter
adc
or
ljmp
mov
in
dec
fistpll
and
ret
cmp
mov
push
adc
push
out
ficompl
bound
test
std
pop
cmp
arpl
insb
mov
mov
sahf
push
jae
jns
es
int3
test
stos
and
std
mov
ret
pop
mov
cltd
inc
and
or
mov
pop
jns
inc
imul
ret
mov
pop
cltd
cmc
loop
jae
popa
out
mov
leave
mov
mov
inc
mov
add
sbb
pop
rcl
movsl
push
fcomps
addr16
push
notb
rolb
mov
stos
push
or
push
xlat
mov
sbb
fiaddl
push
rcrb
pop
push
jns
push
int3
and
add
fistl
out
fidivl
in
out
xchg
test
hlt
hlt
or
xor
cltd
lahf
rorl
lea
cltd
call
sub
cmpb
add
sbb
lret
push
outsl
mov
mov
lret
sti
xchg
jbe
mov
rcrb
stc
ss
mov
dec
fcomps
gs
mov
jp
loope
movsl
and
pop
imull
cwtl
add
fcomip
pop
lock
sub
movsl
inc
adc
mov
or
fstp
inc
jg
xor
sbb
dec
fcoms
hlt
pop
pop
xor
out
xchg
sbb
sbb
mov
sahf
lcall
outsl
mov
das
xor
and
test
mov
int3
ss
je
adc
loop
xchg
dec
lahf
aas
jno
pop
aam
fisttps
daa
xchg
arpl
imul
adc
and
test
xchg
lcall
and
push
lock
mov
sbbl
pushf
in
inc
jecxz
add
lret
pushf
mov
add
adc
nop
pop
in
pop
stos
mov
or
ret
inc
inc
popf
xadd
leave
and
lods
ret
cmp
mov
mov
xchg
rcrb
pop
std
scas
xor
xchg
jb
imul
sbb
push
dec
lea
push
insb
sub
out
popf
and
or
call
mov
xchg
adc
fstpl
cli
leave
pop
sbb
and
cs
out
cwtl
adc
lea
hlt
vpunpckhwd
call
push
mov
ja
push
into
cmp
dec
ds
lods
les
xchg
arpl
stos
mov
jbe
mov
inc
lahf
movsb
mov
push
fwait
or
gs
dec
xchg
fisttpl
add
jl
iret
sbb
das
adc
outsb
push
aas
negb
cmp
bound
fwait
pop
sub
scas
pop
clc
inc
mov
xchg
shlb
xchg
in
xlat
mov
mov
int3
ja
adc
call
iret
xchg
or
pop
lahf
mov
add
int3
imul
fimull
iret
popf
cmp
loope
xlat
pop
xchg
pop
lahf
lds
sahf
movsl
push
cmpsb
and
add
cmp
inc
jmp
xor
sub
sub
mov
xchg
test
jl
sbb
loop
imul
fisttpll
push
add
mov
adc
sub
mov
mov
mov
cmp
push
mov
enter
sub
or
int3
dec
pop
movb
pop
fst
inc
mov
xor
call
popf
mov
je
inc
pop
mov
and
das
mov
dec
pop
jle
sbb
aam
push
aas
cmp
cmp
mov
add
jle
push
adcb
push
popf
movl
bnd
out
pop
pop
xor
fwait
push
aaa
clc
shlb
std
repz
mov
xchg
xor
cli
dec
loopne
mov
sahf
and
sbbl
cwtl
test
ret
mov
xor
xor
add
xor
repz
xchg
dec
popa
inc
adcb
aad
jmp
push
outsb
jnp
mov
jmp
mov
loopne
popa
into
dec
cmpb
sub
rorl
bound
call
cmp
popf
and
pop
sti
mov
pop
xchg
push
jp
movsb
sbb
xchg
jmp
mov
dec
rcrl
adc
xlat
adc
and
ficompl
lea
push
jl
xchg
add
sbb
inc
push
cltd
out
adc
stc
cmp
pop
dec
jo
cmp
pop
ljmp
sbb
sbb
mov
mov
sub
lret
mov
sub
sub
lcall
dec
sub
shlb
cmp
push
or
push
dec
in
lods
lods
mov
ret
lods
lds
scas
sbb
xor
xor
add
sarb
cmp
pop
add
mov
out
push
mov
cwtl
xchg
adc
cli
and
ret
xchg
test
stos
mov
aam
mov
cmp
xor
fs
repnz
or
std
ret
ret
jmp
sub
shrl
loope
pushf
sbb
out
sbb
xchg
jns
scas
inc
adc
jnp
out
xchg
dec
inc
sbb
into
outsl
notb
cmp
or
xor
xchg
sbb
fwait
mov
ret
sub
xor
inc
sahf
xor
xchg
cmp
pusha
scas
xor
xor
scas
cmpl
and
sahf
sbb
jne
sti
sar
xor
sbb
xor
inc
push
push
test
int3
cli
cmp
and
les
clc
and
in
and
movsl
fs
in
movsb
mov
add
dec
out
fadds
movsl
xchg
shlb
test
sbb
xchg
or
fldenv
push
mov
push
pop
sbb
mov
jnp
fdivrs
fsub
cmp
add
rcll
mov
xchg
cmp
aaa
adc
icebp
sub
inc
push
lods
or
pop
jo
sarl
sub
in
cmpsl
int
in
frstor
xchg
in
lods
push
add
lods
inc
les
je
repnz
and
mov
and
popf
sub
mov
lret
ds
dec
sub
dec
imul
jp
push
call
dec
insl
cltd
inc
not
mov
push
insb
cmp
loope
fbld
in
dec
jmp
mov
mov
in
ss
fcomip
cmp
jge
sbb
std
mov
jno
and
dec
cmp
sbbb
pop
fld
incb
imul
xor
iret
call
mov
loop
subb
subb
xchg
dec
lods
jb
or
int3
bound
movd
sub
pop
loopne
fdivrl
repnz
aas
jmp
push
outsl
sbb
or
mov
inc
xchg
fnstcw
rcrb
ret
aam
cmp
rcl
fucomi
movsl
stos
inc
inc
pop
sahf
cmpsb
mov
shll
repz
push
sub
addr16
mov
movsl
xchg
push
and
mov
mov
inc
mov
dec
les
out
ljmp
or
ds
int
rclb
dec
mov
test
push
arpl
pop
in
in
cwtl
cmpsl
xor
or
clc
shlb
insb
insb
fistl
jne
leave
or
mov
bnd
shll
adc
lret
push
out
push
jl
jp
idiv
xchg
pop
lea
jno
lcall
call
dec
push
xor
xor
cltd
dec
pushf
dec
mov
push
int
mov
outsb
sti
push
popf
push
ljmp
movsl
in
push
outsl
sbb
sub
mov
ljmp
jbe
pop
push
fldt
push
fmul
pop
pop
push
rclb
jmp
lods
rclb
pop
mov
outsl
imul
bound
fdivrs
jg
scas
xchg
inc
mov
lods
lods
jns
insb
cld
mov
shrb
in
sub
inc
lds
test
outsl
push
cltd
add
ljmp
xchg
xchg
mov
aam
inc
ss
jle
sbb
repz
xchg
push
push
xchg
mov
lcall
sub
addl
adc
inc
mov
sub
inc
jno
jecxz
int
fiadds
daa
out
add
outsb
cmp
mov
ja
les
leave
add
aad
jns
jnp
dec
inc
cmp
fcmove
lret
mov
mov
ja
lahf
jmp
mov
je
sub
outsb
lret
xchg
mov
mov
pop
sti
loop
lret
push
aaa
in
xchg
lret
xchg
dec
jl
addr16
arpl
popf
fsubrl
sbb
xchg
aas
mov
lods
pusha
push
push
sbb
mov
dec
je
xchg
xor
xor
es
sti
das
mov
and
mov
sbb
mov
in
mov
inc
loope
jnp
xchg
std
std
das
aaa
xchg
xchg
mov
jno
sub
add
xor
mov
enter
or
repnz
mov
cmc
bound
leave
mov
jns
add
aas
dec
xor
jns
sbb
out
cmp
int
ja
sbb
cmp
and
bound
in
addr16
sbb
jg
push
or
jae
js
and
pop
test
pop
mov
cmpsb
push
negb
sbb
outsl
xchg
imul
mov
xor
adc
loopne
stc
mov
lds
push
mov
in
test
xchg
rorl
and
data16
loope
jmp
adc
in
ret
fimuls
fildll
scas
adc
fucomi
pop
lods
dec
movsb
push
push
adc
mov
popf
or
sbb
inc
out
dec
fs
mov
or
adc
inc
gs
lahf
imulb
jno
in
sbb
jmp
fidivrl
daa
call
xor
xchg
add
stos
push
xor
movsl
adc
test
test
and
aas
insl
add
lahf
fwait
inc
insb
mov
push
js
mov
mov
jno
lods
aaa
loopne
popa
nop
mov
jnp
sub
pop
xchg
in
shrb
mov
jmp
pop
loopne
std
mov
sbb
in
mov
push
insl
mov
add
xor
pop
pusha
outsl
xchg
aas
movsb
test
push
clc
ljmp
mov
cmpsb
jle
push
je
aas
sub
sub
test
mov
daa
test
jl
jmp
imul
mov
cmpsb
pushf
fbstp
inc
or
and
and
mov
dec
mov
or
xchg
mov
jecxz
repz
mov
lahf
movsb
or
fcomip
push
dec
out
push
test
pop
push
pop
inc
into
fnsave
mov
sar
dec
push
add
daa
nop
imul
cmp
mov
lods
inc
pusha
and
nop
jmp
and
lahf
or
scas
lock
cmc
ljmp
xchg
jne
xchg
mov
gs
gs
cmp
mov
add
sbb
nop
bound
in
and
pop
xor
popa
arpl
scas
pop
icebp
in
push
mov
or
add
sbb
orb
adc
pusha
adc
std
inc
inc
dec
xchg
push
jmp
mov
mov
mov
sbb
inc
cmp
je
and
push
cmp
loop
aad
sub
clc
ja
dec
mov
inc
jnp
fidivs
arpl
rol
mov
into
insb
add
sbb
sbb
dec
in
xchg
mov
std
pop
and
fldl
ret
test
test
mov
in
inc
sbb
inc
out
mov
jae
fcoms
into
xor
lds
daa
test
cmp
jae
mov
ss
jmp
in
ljmp
jecxz
mov
fs
rol
push
shlb
mov
add
mov
outsl
xor
test
and
sub
jbe
add
xchg
mov
in
mov
dec
outsl
stc
sti
inc
add
and
mov
imul
hlt
mov
std
jp
jnp
mov
imul
iret
xchg
test
imul
xrelease
cmp
dec
insl
adc
test
and
xor
shlb
mov
adc
inc
inc
and
xor
lret
inc
lea
or
mov
loop
sub
insb
mov
xor
fs
sbb
xchg
or
pop
xchg
push
xchg
dec
push
mov
mov
shrl
js
mov
lea
in
jbe
mov
xchg
xor
cmp
fisubl
outsl
dec
jnp
ja
repz
sub
pop
dec
mov
pop
pop
adc
dec
pop
pop
daa
sbb
jle
das
adc
rorb
sub
sbb
adc
sub
push
jbe
push
aad
in
icebp
jle
cli
cmp
lods
movsl
data16
jnp
jecxz
or
dec
xor
outsb
int
pop
push
sbb
das
lahf
fwait
push
sti
call
push
jecxz
shrd
out
scas
push
pop
call
outsb
xor
jbe
test
xchg
jne
pushf
pop
in
pushf
sbb
or
pop
ljmp
aad
cwtl
call
out
inc
jnp
cs
adc
pop
inc
in
xchg
xor
mov
xorl
pop
push
insb
arpl
mov
pop
or
enter
lods
mov
frstor
inc
xor
aam
push
push
pop
xchg
and
shl
fmuls
je
addr16
xor
shrl
mov
lea
or
shrb
adc
test
cmp
movsl
mov
xchg
fdivr
fiadds
mov
lods
pop
cli
or
call
loope
or
sub
loopne
mov
jge
add
jle
ds
lcall
pop
in
sbb
xor
xlat
lods
inc
mov
and
js
aam
bound
xor
xor
inc
cli
push
mov
mov
dec
ret
fistps
cmp
inc
lahf
ja
in
push
and
cltd
shll
cli
aad
fildll
jle
shll
sub
pop
in
sahf
sbb
mov
sbb
call
pop
sti
push
fnstsw
cmp
aam
adc
orb
idivb
mov
cmp
insb
lahf
ja
sub
xchg
mov
add
inc
mov
aas
push
and
pop
hlt
shrl
shr
sub
fs
xor
cmp
xchg
pop
lea
adc
sub
sbb
arpl
jge
mov
cmp
stos
push
jne
jne
outsb
push
movsl
push
ret
daa
and
call
pop
add
pop
mov
in
out
inc
sub
push
sahf
pusha
push
lods
sub
adc
pop
xchg
test
pop
sub
adc
lcall
call
fstps
popa
xor
les
xor
cmp
pop
stos
in
scas
stos
out
sarl
cmp
rcrl
mov
in
fisubrl
inc
adc
xor
or
mov
pop
cmp
push
in
enter
pushf
clc
outsb
subb
fcomps
lret
mov
mov
js
push
and
lods
cmp
cmpsl
ret
xchg
fs
push
xchg
jecxz
lahf
inc
push
mov
mov
roll
mov
sbb
jecxz
xor
or
ds
mov
js
movsb
push
mov
jno
mov
or
push
lret
ret
add
bound
adc
orl
cmc
out
into
push
and
jae
lock
stos
dec
popa
shll
test
mov
sub
jb
jae
inc
xor
lock
test
inc
jb
rcll
out
in
push
in
leave
out
stos
xchg
pusha
pushf
fs
cltd
add
sub
mov
shrb
lret
inc
push
stc
pop
or
mov
out
dec
out
in
xchg
mov
mov
jns
xchg
js
outsb
mov
rcll
out
andl
std
pop
inc
jno
scas
push
cmpsb
sub
ljmp
orb
cwtl
rorl
add
sub
fcmove
aaa
cli
gs
cmpsl
adc
or
pop
insb
cs
mov
test
mov
ja
sub
and
xchg
mov
jns
sub
scas
adc
enter
ja
jle
mov
stc
mov
sub
scas
je
mov
cmpsb
cmc
adc
xchg
je
xchg
mov
or
adcl
movsl
adc
dec
and
lret
arpl
lods
pop
jge
sbb
mov
shr
andb
xor
in
xchg
aam
cmp
stc
jo
pop
cli
jmp
lahf
fiaddl
lret
jp
and
mov
dec
or
mov
pop
cld
in
imul
insb
ret
push
jo
out
lret
jle
jbe
inc
faddl
rorb
add
fldcw
or
cmpb
sbb
mov
or
outsb
jge
imul
pop
bound
sbb
jg
mov
sub
jle
testl
xor
hlt
and
out
cmp
arpl
into
add
aas
ret
or
movb
incb
dec
into
ja
sbb
lods
sub
pop
adc
pop
in
mov
cmc
or
jns
push
sarb
ds
mov
mov
fucomp
or
fs
push
cmp
loope
imul
mov
daa
lods
lahf
and
aas
mov
cmc
fldenv
mov
mov
dec
mov
es
gs
and
ret
leave
idivl
xchg
cmp
sahf
cmp
mov
dec
adc
pop
dec
test
jle
gs
sarb
xor
cmp
in
call
jb
push
and
pushf
push
enter
sub
sbb
dec
out
insl
lret
popl
jg
xchg
lds
dec
adc
jnp
pushf
loop
pop
jo
mov
into
inc
fsts
inc
jbe
or
adc
sbb
loopne
clc
lods
mov
pop
std
and
mov
mov
aas
push
gs
mov
inc
sti
loop
mov
mov
dec
jb
sub
mov
xchg
mov
xchg
pop
pop
xor
xor
insl
into
add
pop
mov
mov
icebp
test
jge
xor
rcrl
push
scas
xchg
pop
and
push
jbe
or
xchg
cwtl
cmp
and
into
stc
cmp
add
cmp
shrl
jg
cs
mov
sub
inc
xchg
movsl
scas
lret
xchg
fcomp
jnp
dec
add
sar
push
jge
repz
inc
or
or
sbb
jecxz
xchg
ret
cli
adc
jbe
pop
imul
add
fmuls
ficoms
pop
push
es
cmp
ljmp
pop
stos
int3
lds
in
sub
push
mov
dec
fcmovnb
rcl
mov
cmp
adc
icebp
mov
cltd
dec
jmp
arpl
subb
inc
jmp
ds
xchg
ljmp
sti
jl
enter
mov
inc
test
stos
push
sti
fistpll
jae
pop
pop
ja
clc
dec
xor
rcrl
mov
inc
jne
inc
xchg
lds
sbb
mov
cmp
leave
xchg
das
imul
mov
dec
repz
enter
cwtl
dec
push
push
push
inc
sbb
jle
aas
popa
and
cmp
cmpsl
xorb
push
push
push
sbb
mov
dec
cmp
lahf
in
aaa
mov
aas
cmp
sbb
push
ds
dec
inc
mov
mov
and
bnd
mov
imul
mov
aad
fstps
addr16
sbb
sbb
xchg
sub
add
popf
aam
leave
xor
pop
lret
mov
sbb
jb
mov
adc
dec
push
fdivp
rorl
mov
push
cltd
jb
dec
orl
and
cmp
dec
cld
insl
rorb
xchg
fwait
mov
lods
movsb
mov
pop
adc
leave
test
or
push
sbbl
fs
jns
mov
fldl
stos
mov
adc
outsb
sbb
mov
mov
push
push
xlat
fdivrl
mov
mov
push
mov
imul
outsb
push
loop
dec
fwait
cmp
or
xor
adc
sub
scas
cli
and
ficomps
or
jle
sarl
mov
add
scas
js
clc
daa
leave
hlt
pop
movsb
icebp
out
sub
sbb
push
mov
nop
scas
sub
shll
enter
outsb
jle
shll
pop
xchg
mov
sub
xor
sub
mov
fnsave
sbb
pcmpeqd
mov
mov
jge
jl
stos
inc
out
dec
mov
mov
gs
popa
fdivr
xor
stos
imul
das
jo
mov
dec
xchg
mov
pop
ret
cmp
inc
push
bound
adc
jecxz
fcoms
test
or
lcall
mov
out
mov
xchg
pop
repnz
not
out
push
mov
jae
xchg
jecxz
fisubl
pop
movb
push
data16
sub
subb
fiaddl
enter
addr16
sub
js
mov
outsl
out
dec
bound
out
pop
je
cmpsb
xchg
int3
mov
js
or
je
and
arpl
mov
popl
push
das
jbe
mov
lahf
lret
into
lea
divb
in
push
or
xor
lock
cli
sub
sbb
inc
pop
scas
arpl
cmp
sub
sub
hlt
stos
movsb
iret
cmp
mov
in
aas
xchg
and
pop
mov
out
xor
inc
mov
cmp
pop
popa
fsubl
rclb
jecxz
fcmovnu
fstpl
into
pop
sbb
fwait
stc
ds
test
testb
scas
jb
test
adc
pop
loopne
fwait
or
inc
push
dec
push
and
fisttpll
mov
jae
pop
cs
push
sti
and
jp
imul
in
outsb
add
call
in
jnp
mov
call
and
cmp
dec
in
pop
insb
rolb
pop
pop
clc
insl
or
sti
or
cmp
cmp
push
orl
leave
sti
mov
pop
roll
mov
cltd
outsb
mov
mov
jge
in
push
mov
jle
jno
int3
stc
mov
xor
fiaddl
rcl
and
jno
scas
and
inc
aas
mov
mov
jnp
loopne
pop
addr16
insl
xchg
aad
in
insb
mov
cmp
adc
adc
inc
fistps
int
push
loop
aas
xchg
hlt
fisubrs
cmpsb
pop
loopne
cmpsb
xlat
test
jl
mov
leave
pop
xchg
mov
pop
pop
dec
sub
nop
dec
into
sbb
adc
test
jecxz
push
mov
out
inc
or
scas
adc
inc
insl
pusha
ljmp
ret
mov
pop
add
adc
pop
pop
out
cmp
push
dec
pop
scas
ljmp
add
add
mov
dec
sbb
ljmp
out
add
lahf
test
cmpsb
xchg
mov
jbe
in
loopne
ss
or
enter
aam
or
push
sti
push
sbb
test
aad
les
mov
push
mov
cmp
push
inc
cmp
push
popf
mov
jp
fistps
dec
inc
repz
adc
push
iret
xor
add
sti
cmc
psrlq
mov
cwtl
xchg
dec
pusha
jbe
cmp
jge
movsb
and
mov
out
push
jnp
and
pushf
inc
adc
push
popa
in
inc
movsb
add
jns
xchg
hlt
loope
addr16
jae
push
fnsave
cmp
lock
jnp
lcall
mov
and
push
lcall
mov
pusha
inc
mov
cmpb
cld
sbb
jns
es
jmp
xlat
cli
cmpsb
or
scas
push
je
or
fsubrs
data16
jecxz
inc
xlat
roll
or
aas
imul
dec
loopne
pop
test
sti
push
icebp
shlb
dec
sub
and
or
push
and
inc
cltd
rclb
mov
push
cwtl
int3
sbb
mov
push
or
stc
inc
inc
xor
outsb
inc
add
andb
push
inc
adc
out
add
das
mov
xchg
sub
nop
lret
out
lods
pop
rcrb
mov
movsl
sub
iret
ds
shlb
andl
xlat
mov
lods
pop
cmp
jae
and
xor
rorb
data16
popa
cmp
lahf
mov
cwtl
push
pop
pop
pop
mov
or
or
cmpsl
lock
outsl
lds
jne
insb
aam
and
ret
cli
jno
sbbb
sbb
mov
mov
xchg
mov
jecxz
out
or
cli
mov
xchg
add
test
add
add
push
mov
jnp
iret
mov
lods
sti
rol
mov
xchg
in
ret
imul
nop
shr
cli
jnp
iret
mov
arpl
enter
sbb
inc
dec
ret
cmp
add
lret
push
or
jae
mov
mull
arpl
pop
jmp
mov
jle
add
sahf
sbb
mov
test
xchg
cmp
jmp
decb
mov
movsl
pop
pop
test
push
sub
lea
cmp
rclb
mov
mov
sbb
mov
adc
fs
add
mov
sbb
andl
pop
lods
mov
bound
mov
clc
adc
ja
leave
pop
mov
imul
mov
sub
and
pop
ret
in
test
lea
aas
jne
adc
ljmp
fsubl
sub
or
ds
pop
out
jl
or
sub
inc
pop
ret
lock
dec
push
pushf
ljmp
adc
push
inc
lea
repnz
xlat
push
mov
mov
out
dec
in
outsl
jb
inc
dec
pop
sbb
push
mov
pop
in
push
mov
int3
mov
repz
out
push
cmp
insl
fcomps
ret
les
lcall
dec
iret
scas
push
mov
fwait
push
dec
addr16
fcoml
cmp
add
lods
fnsave
cli
mov
xchg
xchg
mov
add
or
aad
popl
xchg
bound
xchg
subb
addl
in
out
dec
cmp
repz
lcall
adc
movsl
lock
cld
push
mov
cld
insl
ss
test
fs
stc
jb
popa
adc
call
jnp
lahf
and
out
into
test
gs
sub
or
aam
pop
call
bound
xor
bound
repnz
addl
outsl
jbe
mov
jae
loop
mov
shl
mov
insb
ficomps
push
jl
mov
jmp
aad
sub
enter
or
ret
dec
inc
aaa
rorb
mov
push
jns
cmp
xor
inc
pop
pop
mov
cmp
popf
sbb
lea
or
stos
xor
lret
scas
lods
jne
movsl
xor
nop
sarb
xor
xchg
jecxz
shll
or
ficoms
js
adc
cmp
leave
bound
add
mov
out
push
adc
clc
aam
pusha
jg
pop
mov
adc
sbb
rorb
repz
jmp
jo
insl
dec
js
xchg
cld
sti
and
push
sbb
lea
inc
add
ljmp
fisttps
jnp
jl
test
incl
test
adc
push
jae
push
xchg
int3
pop
adc
sahf
or
mov
shrl
rcr
mov
inc
dec
sbb
and
lods
clc
callw
insb
jb
ja
out
and
sbb
cltd
ljmp
rolb
cmc
push
adc
pusha
add
in
daa
pop
sub
test
xchg
mov
les
cmp
pop
xchg
out
mov
jbe
sub
pop
aad
fxtract
aad
jmp
test
xchg
xadd
int
xor
dec
dec
pop
add
sbb
adc
dec
pop
repz
stos
scas
cmp
insb
cwtl
jl
pop
sahf
ror
lcall
sub
dec
jp
add
inc
test
lea
cmpsl
push
inc
adc
adcb
fbld
push
push
fs
aam
sub
dec
xorb
cmc
ret
loop
fadds
test
push
jo
js
std
sub
xchg
in
pop
sub
lods
pop
outsl
lea
mov
push
ds
cmp
xlat
jbe
jbe
fwait
push
and
test
popa
test
push
dec
mov
shll
jnp
rorl
or
mov
pop
je
shrb
xchg
pop
call
mov
cmp
add
jbe
sbb
lock
push
sbb
mov
loop
fisttpll
out
adc
je
mov
sbb
test
ja
push
out
call
pop
repz
clc
popa
and
stc
jo
shl
add
dec
imul
lret
cld
scas
testl
aad
mov
test
mov
and
add
xor
push
mov
sbb
cmp
mov
cmpsb
mov
adc
enter
fwait
inc
mov
sub
mov
xlat
dec
xchg
outsb
dec
or
out
dec
cmp
repnz
mov
sahf
lahf
addl
out
push
leave
adc
push
stos
fimull
cmpsb
jp
ds
aaa
lds
cmp
js
jp
lock
adc
ds
lahf
bound
in
insl
jge
adc
int3
lods
shlb
mulb
sbb
inc
lds
adc
aad
mov
push
stc
pop
inc
push
repz
mov
dec
xchg
sub
pusha
mov
mov
ljmp
add
scas
es
push
insb
popa
decl
lahf
push
inc
or
lret
stos
ds
pushf
in
popf
mov
push
test
test
mov
lcall
dec
mov
stos
inc
leave
mov
jecxz
lcall
jae
ja
cltd
jnp
arpl
cmp
daa
or
push
repz
xchg
inc
xchg
sahf
inc
shrb
jns
push
push
sbbb
pusha
loopne
cmp
pop
insl
inc
and
cmp
jb,pn
push
add
repnz
test
mov
mov
adc
mov
add
cmp
add
push
test
jns
inc
pop
sbb
pop
data16
or
stos
mov
dec
or
rclb
xchg
sahf
adc
fadd
in
inc
mov
repz
jae
setb
dec
mov
int3
pop
pop
sbb
sbb
setbe
je
les
inc
xor
lret
daa
adc
lcall
ds
cmp
pop
enter
mov
je
xor
mov
faddl
xchg
loop
aas
dec
iret
fwait
xchg
jnp
mov
cmpsl
ja
mov
ja
add
mov
xchg
mov
jecxz
in
je
jb
push
dec
gs
push
lods
dec
dec
sti
dec
push
cmp
fwait
dec
sub
add
ljmp
cmp
scas
arpl
mov
out
sub
cmp
shlb
ret
xlat
dec
mull
aam
xchg
loopne
sti
mov
sbb
hlt
or
pop
jecxz
mov
or
jl
mov
push
mov
sub
and
iret
dec
cld
aaa
sub
push
xchg
or
dec
shl
mov
mov
jb
xor
in
dec
mov
push
cmp
fdivp
inc
xor
lret
jnp
idivl
cmpsb
pop
cmp
push
stos
mov
or
push
ret
orl
adc
pusha
cmc
push
pop
sbb
es
into
mov
adc
pop
dec
mov
dec
adc
jno
or
push
fnop
push
cwtl
xchg
insl
and
mov
jo
push
dec
adc
lods
mov
inc
incb
aas
jge
dec
insl
push
xchg
adc
pop
cmpsl
pop
cmp
or
hlt
jecxz
test
mov
and
add
mov
test
xchg
sub
dec
dec
add
cmp
shll
xor
cs
ds
sub
jmp
inc
xchg
div
pop
arpl
lock
shll
xor
jne
cmp
dec
push
enter
xor
lahf
popw
test
dec
push
test
test
das
repz
jno
mov
and
jmp
add
push
jl
out
pop
test
cli
mov
cli
dec
mov
popl
test
bound
repz
jecxz
push
jno
adc
mov
push
or
fisubs
sub
bound
insl
cmp
int
dec
pop
mov
xorb
sbb
outsb
adc
fidivrs
out
inc
mov
nop
movl
pop
dec
repnz
sub
sar
xchg
cli
sub
mov
stos
sub
popa
mov
scas
aaa
ss
cmpsl
cld
xchg
aaa
pop
jge
push
sbbb
pop
lods
mov
push
push
mov
fsts
out
icebp
mov
movups
rolb
push
jo
loope
xor
sub
xchg
fistpl
fistpl
jl
loopne
popa
imul
push
dec
inc
xchg
sub
xchg
dec
rcrl
test
out
push
or
xor
mov
mov
dec
and
ret
add
sub
lea
push
pop
push
fs
mov
mov
and
addr16
stos
mov
jmp
cmpsl
addr16
sub
pop
insb
daa
add
pop
rorb
lea
pop
pushf
inc
ror
repnz
scas
mov
loopne
jmp
xlat
add
sbb
sub
and
stos
mov
fnstcw
idiv
nop
es
mov
sub
adc
sbb
ficoml
jo
ret
aaa
scas
pmaddwd
pop
mov
mov
mov
in
divl
xchg
mov
adcl
aaa
xorb
sub
fwait
jg
popf
jg
cmp
addb
cmpsb
leave
or
jne
cwtl
movsb
dec
es
out
iret
dec
sti
mov
jb
xchg
bound
fs
adc
outsb
inc
pushf
adc
add
add
test
jmp
daa
jg
add
push
lret
popa
push
dec
inc
mov
and
pop
clc
push
xor
mov
repz
jnp
sbb
shlb
mov
jmp
lret
sbb
jmp
and
cmpsl
insb
and
sbb
sub
cmpsl
mov
pop
lds
mov
or
out
xor
imul
cmc
pop
pop
adc
jl
cmpsb
push
xchg
mov
jp
xchg
lret
push
sbb
test
nop
imul
loopne
and
xchg
mov
bsf
scas
into
mov
fcmovbe
xorl
sub
jae
jns
daa
aad
movd
xacquire
xor
iret
jno
popa
fs
arpl
das
xchg
loop
cmpsl
fidivl
xchg
add
xor
jecxz
sub
movsb
stos
iret
xor
inc
add
pop
sbb
adc
push
add
pop
cmp
mov
pop
mov
pop
insb
sbb
xchg
fiaddl
mov
push
push
mov
jae
mov
setno
adc
sbb
lods
sbb
xor
add
nop
add
dec
jp
in
scas
push
pop
inc
mov
ror
pop
mov
test
insb
cmc
adcl
ja
jo
xchg
clc
jae
and
pop
iret
fcmovnu
or
jnp
xchg
jns
push
cmpsb
xchg
xor
sahf
inc
sub
push
dec
insb
addr16
jecxz
adc
dec
push
sbb
adc
inc
and
cmp
xchg
icebp
mov
xor
lcall
cmpsl
loope
imulb
ds
push
aas
xor
cmpsb
add
sbb
insb
ret
sub
pusha
sub
dec
jno
lea
sbb
xchg
data16
dec
shlb
cmpsb
sbb
mov
push
mov
aas
push
int3
add
loop
jb
mov
jp
js
push
fwait
ror
and
xlat
ljmp
imulb
pop
dec
outsb
fiaddl
es
jecxz
adc
outsl
jae
pusha
xchg
sahf
mov
mov
add
pop
dec
mov
out
push
pop
jle
fisubrs
inc
scas
andb
push
fstpl
aas
pop
xchg
rcrb
cltd
xor
fcmovu
data16
and
xor
repz
cmp
test
mov
clc
and
aas
cltd
negb
sub
sub
push
xchg
sub
leave
jmp
jmp
push
mov
shlb
mov
das
mov
push
adc
pop
xchg
imul
inc
xchg
cmp
mov
in
mov
movsb
or
cmp
mov
arpl
stc
jp
loopne
outsb
data16
cmpl
dec
cmp
scas
fmuls
jno
or
jge
scas
sub
mov
sahf
mov
pop
aaa
fistps
test
mull
stc
lock
xchg
add
jne
xor
fcoml
fwait
xchg
lret
lcall
mov
and
jmp
cmp
das
stos
clc
mov
mov
xlat
and
jo
adc
jne
dec
sbb
pop
mov
lcall
add
ror
cld
insb
and
dec
ja
lret
mov
sti
int3
pop
mov
mov
rorl
jp
test
jns
xor
xor
jecxz
xchg
ficompl
mov
imul
ljmp
ljmp
mov
fs
jbe
add
sbb
lds
insl
dec
ss
lods
cmp
jnp
xor
aad
out
mov
xor
pop
stos
mov
leave
nop
pop
dec
test
leave
adc
icebp
out
push
mov
adc
vunpcklpd
inc
ds
mov
dec
outsl
jnp
inc
or
adc
data16
xor
sbb
movb
sbb
insb
and
and
pusha
in
lahf
gs
loopne
int3
jns
jo
fisubrl
xor
push
es
aad
jne
and
enter
in
push
mov
pop
ss
nop
scas
lcall
sar
pop
push
push
xchg
pop
fwait
insb
out
mov
mov
arpl
push
ror
mov
test
ltr
mov
cmc
sub
fldenv
push
ss
dec
dec
jne
cmp
mov
push
lds
sub
ret
out
mov
popa
test
dec
shl
loopne
xchg
cmpsl
cmp
fucomp
sub
pop
add
push
sbb
lcall
mov
inc
out
pushf
mov
inc
jo
mov
cmp
dec
or
jnp
inc
scas
xchg
sub
sub
cmp
jno
inc
or
js
loopne
imulb
int
add
xchg
add
pop
mov
mov
sub
sub
scas
sub
in
aaa
mov
aad
daa
pusha
xor
cltd
dec
jns
pop
shll
shlb
mov
mov
mov
push
fiadds
jno
jb
pop
or
lock
ss
jmp
adc
push
shlb
mov
jnp
into
mov
jno
aad
fsubs
mov
mov
mov
pop
or
cmp
dec
or
decb
jnp
into
std
xchg
pop
aam
jns
xchg
stos
cmpsl
int
and
dec
mov
adc
sbb
fdivs
andl
pop
aam
fst
out
mov
mov
sub
xchg
aas
imul
dec
stos
cmp
xor
add
daa
push
mov
xor
sbbl
leave
xlat
pop
jecxz
mov
push
stos
jl
outsb
imul
adc
jmp
sahf
inc
push
and
mov
sbb
stc
cmp
or
lcall
pop
add
hlt
jne
imul
sti
jns
lods
leave
movsl
push
rorl
stc
mov
pop
cli
mov
into
xchg
aas
jmp
cmpsl
pop
mov
dec
push
sqrtps
lds
rcrl
fwait
adc
jbe
cmp
repz
shlb
out
push
das
gs
sbb
xchg
inc
mov
or
lods
jne
jns
lods
inc
xor
xor
scas
or
movsb
mov
fdivs
push
push
sub
add
sbb
lods
jg
lods
and
test
imul
in
outsl
aam
dec
call
xchg
xor
cmp
test
push
or
cmc
popw
lcall
in
lods
adc
add
inc
xchg
mov
mov
sbb
loop
loop
rorb
adc
dec
sbb
push
jno
pop
xchg
add
add
rorl
stos
pop
pop
mov
push
dec
xchg
sub
jne
sahf
je
bound
jl
fadds
mov
push
mov
jl
lcall
aas
lea
cwtl
dec
mov
mov
into
jg
add
stc
push
in
sbb
out
sub
pop
mov
into
inc
inc
jl
enter
mov
leave
cli
je
cmp
out
adc
cmp
iret
mov
in
sbb
add
cmp
pop
jge
push
inc
mov
or
xor
outsb
cmp
inc
inc
push
push
call
jno
imul
and
pop
pop
pushl
lcall
js
cmp
mov
or
adc
into
mov
movsl
and
jne
inc
movsb
xchg
sbb
adc
inc
call
pop
into
fstpt
mov
dec
shr
aas
mov
cwtl
pop
mov
dec
insl
xor
or
mov
mov
inc
stc
lahf
push
push
dec
ficoml
inc
sbb
xchg
cmp
lods
shlb
xorb
jno
in
addb
mov
inc
dec
rorb
in
sbb
call
test
addl
sbb
repnz
ljmp
xlat
mov
mov
cld
icebp
pop
add
popa
xchg
je
mov
mov
test
enter
inc
mov
adc
sub
ja
push
fwait
std
and
jbe
add
popf
mov
xor
sub
xchg
cli
inc
jmp
daa
adc
add
jl
jno
lock
sub
fcomps
push
sbb
dec
mov
lods
sbb
sahf
test
in
mov
test
pop
shll
ret
faddp
xor
cmp
test
ret
into
jne
andb
cltd
push
push
into
add
cmp
and
lahf
int
xchg
add
fmuls
and
mov
les
ret
add
cltd
mov
cmp
xor
or
movb
insb
lahf
pusha
sarl
push
ret
add
pushf
fs
and
bound
xchg
arpl
sahf
mov
jmp
xchg
rol
cli
outsb
mov
aaa
or
decl
aam
mov
out
sub
mov
xchg
add
jle
adcb
shll
dec
mov
xchg
cmp
aam
mov
push
test
adc
jmp
mov
mov
leave
test
test
adc
loopne
push
inc
push
dec
add
adc
jae
shufps
dec
aad
add
cltd
ret
test
leave
outsl
push
fldenv
cwtl
and
xchg
push
pushf
ret
into
push
mov
xor
aaa
mov
xor
lods
aad
cli
insl
dec
test
push
into
int3
xor
cwtl
je
loop
and
movsl
xorb
mov
push
xchg
xchg
lock
aaa
jbe
jg
arpl
in
test
jno
mov
jne
push
pop
xor
push
sbb
ret
inc
sbb
out
mov
jecxz
sub
inc
in
enter
test
aaa
and
mov
pop
xchg
and
push
add
lds
mov
fstpt
std
into
in
movsb
xor
cli
add
cs
scas
mov
mov
mov
pop
xlat
jp
outsb
outsl
cwtl
addr16
scas
es
mov
sub
xor
mov
enter
loop
jae
stos
inc
sti
data16
inc
push
sub
xor
pop
ljmp
mov
or
nop
or
sub
cs
je
data16
mov
add
add
add
push
cmpsl
jne
jnp
and
pop
ret
lahf
mov
dec
cs
mov
jle
in
pop
and
andl
inc
scas
jg
repz
dec
sub
les
sub
push
insl
add
arpl
adc
jbe
jo
test
and
out
loop
jns
and
mov
popa
ficomps
mov
adc
cmp
iret
pop
or
push
ljmp
adc
add
jbe
xor
js
xor
adc
mov
adc
jo
dec
cmp
stos
aam
das
cmpl
jg
movsl
aam
inc
sarb
lahf
fnstenv
sarl
stos
or
loop
fistl
pop
mov
movb
and
push
xchg
movsb
std
ret
mov
std
add
pop
adc
int
xchg
pop
cli
lret
mov
cld
test
dec
cmpsl
in
xchg
pop
sahf
js
ffreep
cmp
lock
xor
insb
int3
push
jne
jne
ret
movsb
or
pop
stos
mov
scas
xor
cmp
shl
fmull
ja
addl
push
and
mov
inc
adc
scas
pop
push
popf
pop
insl
pop
mov
divl
cld
out
lahf
aaa
mov
xchg
outsl
xchg
aad
xchg
sub
negl
inc
enter
aam
push
fwait
cmp
pop
aad
add
into
dec
inc
dec
outsl
sarl
dec
icebp
jbe
sub
mov
push
cli
jg
sub
jns
pop
dec
xor
ficompl
xor
test
rcr
cmc
loopne
out
push
in
cs
shrl
mov
stos
loop
inc
js
aaa
dec
jns
pcmpgtd
sbb
mov
push
cli
jecxz
imul
and
jmp
sub
iret
adc
insb
mov
int
and
ja
bound
cltd
adc
stos
mov
fisubs
imul
mov
pop
movb
jns
pop
dec
fistl
loope
movlps
aad
or
mov
xchg
flds
imul
push
xor
lds
popa
fwait
pop
roll
outsb
and
adc
inc
xor
fsubrs
xchg
mov
imul
mov
int
mov
mov
adc
arpl
out
cmp
shlb
scas
cli
data16
sbb
rorl
and
dec
incl
rcrb
inc
ret
data16
and
aam
pop
pop
mov
cmp
cmp
inc
lds
cmp
cmp
cld
sar
mov
jno
out
fisubrs
push
arpl
shlb
mov
jp
jge
mov
jb
hlt
push
sub
mov
stos
push
data16
pmaddwd
mov
pop
in
or
je
lods
out
adc
jecxz
xorl
adc
movsl
push
cmc
inc
or
cli
dec
sbbl
lods
je
mov
out
fstpl
out
fstpl
pop
das
mov
fdivr
lret
popl
push
xchg
negl
lods
push
jmp
mov
mov
stos
lret
shrl
dec
mov
and
jns
pop
lods
mov
outsb
mov
push
inc
cmp
rclb
and
or
inc
notb
pop
lock
cli
std
jecxz
repz
inc
jne
insb
es
iret
add
clc
test
xlat
jnp
popa
push
test
mov
mov
iret
cmp
call
cmp
outsl
push
jle
bnd
ja
test
mov
arpl
mov
jbe
pop
push
adc
lret
ljmp
mov
dec
repz
addr16
adc
and
dec
scas
pop
into
mov
dec
sub
stos
fiadds
js
aas
mov
insb
jbe
xor
into
push
push
in
fs
das
adc
shr
push
cmp
push
jae
mov
mov
aaa
outsl
jl
mov
pushf
mov
andl
sbb
and
inc
lret
movsb
jp,pt
mov
leave
jg
test
cmp
stos
cltd
sub
mov
xor
cmp
pop
add
jge
xor
sbb
mov
insb
fs
loop
outsl
push
sahf
adc
mov
fidivrl
inc
fs
dec
pop
lahf
lods
cmpsb
and
arpl
xor
repz
mov
xchg
cmpsb
js
jg
scas
xchg
xor
andl
mov
cmp
cltd
out
loope
mov
shrb
sbb
aas
dec
leave
fidivrl
fldenv
or
push
mov
xchg
xor
fdiv
xchg
mov
cmp
das
add
xor
or
xchg
jg
shll
jge
test
jb
js
sbb
dec
stos
dec
movsl
cmp
aas
or
fdivr
dec
cmp
or
movsl
mov
add
xchg
cmc
add
mov
negl
jecxz
pushf
jnp
mov
jb
aas
add
scas
jno
jmp
scas
mov
mov
pop
arpl
or
cmp
insl
adc
push
pusha
shl
adc
pushf
in
sbb
out
adc
jecxz
enter
pop
adc
rol
add
test
in
dec
inc
sub
daa
jle
je
push
out
pop
xchg
mov
icebp
cmpsb
repz
roll
or
ss
xor
cmp
mov
ret
push
cmpsl
jbe
mov
push
lods
ret
enter
imul
dec
shlb
inc
popa
sbbl
sub
dec
shlb
mov
fcmovbe
push
cmp
cmp
ret
or
mov
dec
iret
iret
adc
int
cmpsb
cmpsl
jae
push
call
jb
xchg
pop
popa
aaa
loopne
adc
cmpsl
xor
gs
in
sbb
icebp
addr16
stos
xor
das
pop
popf
lods
xor
mov
jo
int3
jecxz
cmc
test
nop
fldl
in
rorb
pop
add
comiss
jge
jb
ljmp
enter
rcll
ja
cmpb
mov
push
push
lea
inc
push
jo
data16
into
jbe
insb
inc
mov
sub
add
push
shrb
into
addr16
aaa
mov
outsl
inc
jae
inc
inc
mov
and
inc
stos
pop
dec
cmc
pushf
stos
inc
jns
mov
lds
cltd
fwait
adc
lret
push
loopne
mov
cmp
add
jo
clc
fstpt
out
mov
neg
imul
ret
test
movsb
jae
gs
lahf
mov
inc
popa
mov
and
inc
sub
test
pop
xchg
or
scas
and
mov
dec
insb
loopne
mov
mov
pushf
imul
push
fistpl
leave
xchg
int
aam
pop
push
repnz
pop
ret
push
push
clc
dec
lea
dec
xor
bound
adc
outsb
and
push
mov
cmpsl
lcall
pop
test
fwait
movsl
xor
hlt
std
gs
cmp
xor
sbb
clc
inc
add
jns
jne
or
cmc
push
cmp
adc
sbb
push
cmpsl
push
xchg
andl
popl
jo
hlt
es
push
bound
sbb
andl
sbb
fs
enter
daa
in
dec
hlt
xchg
jp
cmpsb
add
out
cld
xchg
mov
bound
pop
jo
pop
mov
or
lods
lret
dec
pushf
xchg
xchg
jns
push
jbe
inc
pushf
add
pop
cli
stos
fstpl
int3
fiadds
mov
lock
mov
xor
adc
cmpsb
pushf
sub
es
cwtl
xchg
insl
push
sub
pop
or
int3
xor
imul
xchg
push
cmp
outsb
dec
mov
scas
push
or
adc
addr16
aam
mov
or
xor
sbb
fnstsw
test
adcb
sub
pop
or
shlb
js
sbb
cmp
jmp
insl
mov
mov
fs
jg
fcmovnu
push
mov
repz
fwait
dec
lret
stos
lds
lcall
dec
icebp
cld
pop
dec
fdivrl
popf
out
adc
cwtl
mov
movsl
jnp
and
push
lret
enter
int
dec
loope
or
pushf
ror
xchg
cmp
xlat
xor
inc
xchg
dec
inc
movsb
out
mov
iret
das
adc
shl
call
outsb
adc
and
add
cmp
sbb
and
das
cmp
inc
jp
popa
sub
xorb
es
or
or
test
push
mov
or
mov
repz
and
add
out
subb
rorb
mov
mov
fstps
cmp
inc
mov
out
xchg
sbb
and
stc
and
lock
and
sbb
fld1
jmp
gs
lcall
xor
lret
dec
lods
add
aas
stos
mov
push
push
jo
dec
xor
pop
lock
mov
lock
in
fcoms
push
mov
cld
mov
mov
outsl
jg
popf
xchg
lods
imul
dec
or
mov
add
mov
test
movsb
pop
push
fistps
jne
aam
idivl
les
inc
or
inc
sbb
aad
je
jne
in
inc
lods
add
xchg
jge
xor
fcomp
sbb
jmp
lods
sbb
scas
xchg
pop
je
in
xor
hlt
dec
xchg
movsl
cltd
jl
sbb
test
fs
pop
mov
mov
cltd
push
gs
mov
orb
fwait
out
dec
into
mov
inc
mov
jo
lock
and
out
dec
xor
pusha
roll
sub
xor
movsb
fimuls
inc
jmp
in
dec
pop
jnp
push
xor
mov
aaa
inc
cmp
idivl
call
add
jo
sub
fwait
out
mov
adc
add
pop
jns
push
test
notl
fwait
adc
das
insb
cmpsb
insl
pop
xchg
outsb
scas
cmp
mov
int3
pop
add
lret
xchg
stc
out
cmp
ja
xchg
outsb
mov
inc
mov
les
mov
nop
mov
lock
mov
in
psubb
and
std
xor
xchg
insl
xchg
out
movsb
sbb
arpl
pop
lret
add
inc
insb
sti
sarl
popa
jnp
pop
jg
sub
gs
fidivs
cld
xchg
roll
mov
outsb
sbb
pop
test
in
push
inc
push
mov
lea
inc
loope
cltd
pop
out
arpl
loope
push
fdivr
push
sub
arpl
out
stos
jb
aad
rcrb
ret
adc
dec
dec
imull
inc
xlat
rcll
xor
pushf
add
cmp
xchg
repz
stc
jo
dec
sti
cmc
adc
aam
add
shl
cwtl
mov
lcall
in
ss
jo
mov
imul
sub
in
mov
adcl
xchg
cmp
pushf
adc
jmp
inc
mov
out
mov
andl
pop
xlat
and
dec
test
push
xor
enter
sbb
cli
xchg
stc
push
jl
bound
xchg
test
mov
jb
push
ret
dec
mov
xchg
cmp
and
in
ret
adc
lock
in
fdivrs
pop
popa
mov
out
leave
cmp
clc
sbb
xlat
mov
sbb
adc
les
daa
loop
jmp
cmpsb
outsl
sbb
pushf
mov
hlt
mov
push
in
mov
mov
adc
outsl
push
data16
jo
push
inc
sbbb
lods
loop
fwait
or
jae
xchg
in
mov
icebp
call
inc
scas
push
cltd
xchg
adc
pushl
movsb
push
shl
mov
pop
pop
jb
cld
in
das
andl
inc
xorl
add
dec
xor
mov
lds
das
mov
pushf
add
jb
jecxz
popa
jb
loopne
adc
jmp
cmp
fs
dec
dec
notb
xor
pop
ret
jns
adc
mov
mov
push
cmpsb
mov
add
lcall
jmp
push
push
insl
pop
push
cmp
dec
sub
mov
mov
jae
or
xor
testb
stos
jb
fildll
mov
and
mov
jae
ja
jno
xchg
in
adc
sub
jb
repnz
jae
out
int
pop
pop
into
lcall
adc
int3
sbb
subl
and
cli
je
mov
cmc
xchg
jecxz
pusha
fidivl
pop
sbb
int3
ljmp
lods
sbb
xor
out
out
adc
or
push
and
push
cwtl
cmpsl
cltd
cltd
aad
sbb
imulb
mov
push
mov
mov
jo
arpl
or
test
mov
inc
aam
call
ret
rorl
mov
jbe
roll
jnp
outsb
pop
hlt
or
ds
inc
stos
add
adc
fstl
int
sub
rol
mov
pop
daa
mov
inc
dec
lods
fiadds
pop
inc
jno
xchg
xor
int3
adc
aas
test
sub
inc
lret
mov
movsb
aam
xor
insl
dec
pop
fnstsw
jne
sub
and
in
icebp
sbb
adc
xchg
outsb
push
dec
popa
call
std
notb
pop
test
pop
popf
sbb
std
daa
add
stos
sbb
sarb
xchg
das
push
aaa
cli
add
push
fs
or
push
inc
inc
les
xchg
sbbl
das
adc
in
aad
push
xlat
pop
int
leave
jno
mov
add
xchg
mov
scas
pop
sbb
repz
stos
mov
mov
lcall
xlat
push
dec
mov
inc
mov
dec
scas
stc
add
push
push
push
movsb
pusha
lea
das
xchg
fsubrs
getsec
sbb
je
aaa
int3
into
inc
daa
stos
test
stos
fwait
loopne
lock
dec
xchg
pop
sbb
mov
xchg
adc
into
repz
daa
shrl
and
fdivrl
adc
inc
lock
mov
nop
scas
fwait
push
mov
mov
dec
movsb
jle
pop
in
jo
jo
clc
rol
xchg
dec
repz
pusha
rol
adc
bnd
xor
repz
jno
push
aam
mov
push
mov
mov
add
out
rcll
push
ret
les
fwait
subl
cmp
pop
gs
pop
add
popa
test
inc
movsb
inc
cmp
mov
jnp
pop
push
popf
sub
add
mov
in
dec
adc
jecxz
hlt
test
xchg
cmp
popf
arpl
fmull
push
xor
ret
sub
mov
cwtl
call
cmc
outsl
add
mov
mov
std
push
sbb
xlat
cmpsl
pusha
and
sub
ljmp
cli
pop
sub
sbb
push
sub
loope
sub
cli
rcl
add
pop
mov
lock
mov
jg
mov
cmp
decb
test
and
ljmp
mov
mov
jg
sahf
inc
sub
lahf
scas
je
iret
xchg
jecxz
adc
test
inc
mov
pop
ja
sbb
inc
idivl
shl
mov
cltd
sar
sub
mov
sub
daa
rol
jle
add
lahf
cmpsb
andl
aam
lock
out
aad
inc
rclb
not
jae
data16
push
cmp
jb
xsave
xchg
jbe
repnz
dec
dec
pop
push
fs
cmpsl
inc
insb
push
cmp
mov
xlat
inc
xlat
cmpsl
sub
mov
push
sub
mov
or
push
int3
xor
or
xchg
jmp
cwtl
xchg
jle
fistpl
addr16
es
push
fildl
adcl
cmc
xor
push
adc
add
lods
fldcw
mov
jl
ss
xor
xor
xchg
inc
test
mov
das
divl
sbb
sbbl
or
call
mov
and
stos
xchg
mov
loope
mov
das
mov
xlat
or
and
jmp
and
paddw
mov
fsts
inc
and
test
dec
sub
aaa
mov
cmc
push
push
or
test
mov
jnp
aas
andb
sbb
in
leave
or
dec
cwtl
cld
adc
out
mov
fs
pop
jnp
sbb
push
test
outsl
push
loopne
cmp
loop
cmc
mov
pop
mov
cli
jb
fcoms
and
adc
outsb
jge
out
adc
popf
sti
je
dec
cmc
rcr
repnz
pop
lods
mov
out
iret
lods
jecxz
daa
dec
dec
imulb
pop
cmp
mov
push
pop
push
subl
or
lret
iret
push
popf
inc
xor
fidivs
cmp
cmp
mov
mov
aad
pushf
or
inc
xor
rcll
imul
lahf
mov
sub
sub
pminub
fbld
mov
or
xor
test
mov
mov
cmpsl
aas
cs
mov
dec
pop
out
push
dec
sbb
nop
in
es
dec
bound
mov
and
and
xchg
sub
cli
call
push
mov
fiaddl
insb
arpl
iret
orb
jecxz
sbb
mov
into
and
push
bound
xchg
xchg
lds
and
mov
shrl
mov
cmc
data16
ret
out
or
sub
inc
and
xor
test
mov
add
stc
dec
sbb
adc
jae
jge
pop
fsubrs
outsb
lods
push
fwait
shl
aaa
data16
lahf
scas
loopne
lea
out
lea
mov
into
test
push
pop
fistpll
lods
imul
or
js
push
pushf
adcl
mov
std
loop
mov
dec
jb
pop
fsubs
dec
cmpsb
mov
cwtl
adc
cltd
push
sub
fs
imul
shrb
dec
pop
or
pop
lods
xchg
aad
insb
repnz
pop
jbe
roll
into
mov
pop
xor
jge
xor
out
fiadds
sbb
pop
repz
mov
or
add
aas
pop
sbb
ja
mov
int
lea
push
lock
or
in
inc
insl
popf
lods
pop
outsl
loope
mov
pop
dec
jp
mov
fs
jb
adc
mov
stos
sub
pop
inc
pop
sti
repnz
sbb
test
mov
movsb
dec
fidivs
aad
outsl
or
les
stos
add
cwtl
lock
cmpsl
insl
sub
mov
mov
or
jecxz
jg
mov
mov
pop
pusha
xor
pop
sub
push
sbb
aam
pop
in
lods
pop
icebp
and
jne
cmp
jno
xor
cld
into
mov
insl
inc
out
das
xor
inc
mov
inc
movsl
sbb
cmpl
out
repz
je
into
mov
sbb
mov
push
mov
daa
divl
lahf
mov
add
sahf
mov
lods
sub
fwait
jg
sbb
jecxz
mov
or
sub
cld
sub
fisttpl
cmp
xchg
rorl
negl
mov
add
loop
xchg
dec
jl
divb
sub
fimull
call
and
ret
xchg
out
sbb
mov
cmpsb
inc
jne
das
test
lcall
popf
orl
into
cmc
imul
insb
orl
in
mov
ret
dec
xchg
inc
fcomi
or
push
into
dec
sbb
adc
popa
add
xor
stos
arpl
add
dec
mov
inc
dec
adc
inc
push
test
jne
sahf
push
int
dec
ret
and
add
sbbb
loope
xlat
stc
sub
ss
adc
push
mov
sbbl
into
sbb
sub
inc
call
pushf
scas
ds
es
outsl
jl
and
aam
aam
mov
ror
add
jp
std
push
xor
mov
push
fldenv
dec
ror
xlat
pop
pcmpgtd
jl
je
aam
imul
jle
push
mov
mov
ret
xor
cmpsl
in
repnz
das
cmp
sbbl
sub
scas
pop
push
xor
mov
jg
adc
outsb
jmp
xor
xchg
adc
pop
out
lds
xor
pop
insb
push
inc
pop
in
or
test
enter
cmp
aad
clc
sub
cmp
shl
xchg
lret
mov
in
outsb
and
dec
test
sbb
mov
pop
jmp
xchg
fisubl
cmc
mov
mov
fsubrs
mov
or
adc
ret
jg
push
and
mov
cwtl
addr16
loopne
in
data16
fcmovne
in
mov
daa
pop
dec
insb
mov
xchg
push
sbb
addl
mov
bound
stos
fdivs
cmp
or
mov
or
lock
test
and
test
ja
call
arpl
mov
pop
mov
into
aad
ret
sti
mov
xchg
push
push
xor
or
fdivs
push
sbb
xor
aam
popa
lock
js
push
lock
pushf
cs
pop
sahf
dec
jle
xchg
js
jnp
mov
sub
jnp
fistps
mov
dec
sbb
xor
jno
push
mov
mov
mov
and
or
les
inc
popf
imul
test
out
push
pushw
inc
dec
mul
inc
out
ds
push
lds
mov
stc
lret
xor
sbb
int
mov
iret
dec
mov
pop
shl
pop
fadds
sbb
mov
cmp
push
jecxz
jae
mov
cmpsl
pop
and
aas
push
cmp
push
icebp
xlat
mov
clc
mov
int3
gs
pop
ds
mov
enter
ret
push
insl
ss
fucomi
repz
dec
mov
mov
sub
jns
pop
add
push
xor
xor
xchg
mull
lret
iret
jle
inc
bound
adc
shlb
mov
jl
mov
scas
push
cmp
cmp
mov
fldcw
adc
loope
orl
push
mov
mov
adc
aam
nop
pop
push
xchg
inc
lcall
es
xor
repz
ja
xor
pop
add
sub
in
mov
sub
or
les
xchg
es
mov
nop
into
aam
dec
int3
adc
mov
add
mov
adc
into
out
push
dec
mov
sbb
xor
xor
mov
or
and
adc
lret
or
mov
cmp
es
inc
mov
jb
add
shl
xor
aam
mov
inc
mov
jmp
aaa
popf
leave
mov
jne
xor
push
adc
test
idivb
mov
sub
loopne
out
int
movsb
jne
sar
pushf
xchg
mov
mov
inc
orb
loope
mov
jb
shrl
mov
test
adc
out
es
jns
cmp
push
iret
lea
cwtl
aas
outsb
jnp
lret
aam
dec
mov
jae
and
fwait
bound
push
mov
push
pop
xchg
cmp
mov
cmpsl
add
and
dec
movsb
arpl
xor
fdivrp
mov
fisubl
push
xlat
and
mov
movsl
adc
das
inc
jmp
add
sub
stc
scas
or
icebp
icebp
xchg
not
negl
pop
or
mov
rcrl
mov
adc
shll
pop
inc
or
jg,pn
sbb
or
sarb
rcll
xchg
movsl
dec
push
into
inc
dec
fiaddl
lcall
and
lds
mov
sti
add
mov
mov
push
enter
insb
sub
mull
in
xor
scas
fmuls
int3
push
pop
insb
cmpl
cwtl
insl
rclb
popa
sti
adc
insl
and
or
mov
nop
mov
adc
dec
inc
cmp
jge
ljmp
dec
pusha
cwtl
sub
pop
imul
imul
adc
sub
imul
aad
add
scas
sub
std
call
pop
push
pop
repz
lea
pop
dec
leave
xor
mov
jnp
in
out
inc
int
push
stc
cli
rol
hlt
xor
fists
imul
jbe
mov
in
mov
and
sub
scas
add
xchg
jo
cs
dec
xchg
lock
and
jns
clc
jno
xchg
jg
xor
aaa
pop
and
in
pusha
xor
in
mov
arpl
mov
insb
jne
adc
mov
push
dec
add
or
fimuls
inc
imul
dec
cmp
push
in
int
pop
insl
push
jnp
jl
arpl
add
xchg
in
imul
inc
je
pusha
jns
jns
mov
pop
insb
jne
in
sbb
jbe
sub
cld
ss
mov
push
and
gs
test
mov
xor
adc
in
pop
negb
repz
jl
test
pop
cli
repnz
xchg
sarb
dec
xor
cltd
scas
ret
xchg
xchg
mov
in
out
jl
pop
pop
dec
or
fistps
loope
leave
xor
aad
rol
jno
pop
dec
ret
jge
lret
hlt
adc
rcrb
xchg
adc
add
ret
dec
insb
jno
in
add
js
leave
ja
in
jecxz
movsl
dec
sahf
sub
push
and
fstpt
adc
adc
sbb
cmp
test
ret
into
dec
xchg
imul
cmp
das
xor
mov
sahf
adcl
mov
cltd
pop
sarl
fldenv
fstl
dec
push
mov
enter
sub
adc
cmp
loopne
cwtl
loop
mov
dec
push
test
aam
adc
js
sbb
cmc
lahf
xchg
in
and
lods
aaa
fstpl
call
jecxz
push
iret
jnp
dec
sbb
cli
mov
and
stos
sub
fistpl
cmp
fsubs
pushf
popf
sbb
pop
lods
cmpsb
mov
mov
paddw
mov
out
mov
jge
cwtl
mov
js
xchg
aas
je
jle
mov
push
cmp
or
sub
js
outsl
xor
mov
lods
addr16
inc
sub
xor
in
mov
es
seta
xlat
or
ret
lds
jns
es
loop
mov
dec
out
or
cmpsb
cwtl
push
sub
mov
and
fstl
dec
inc
rcll
jb
dec
or
jp
in
pop
mov
pop
test
enter
je
pushf
jae
jbe
out
and
mov
rolb
sbb
js
mov
inc
scas
jecxz
pop
dec
xchg
aam
stos
mov
andl
adc
or
and
loop
inc
pushf
xchg
and
fnsave
inc
pop
cli
xchg
fs
push
std
aas
in
push
ss
push
dec
push
rcl
clc
ja
inc
cmp
sti
aaa
dec
cmp
cmpsb
mov
loopne
insl
pop
imul
leave
sbb
imul
rcrl
jge
dec
mov
dec
pop
jecxz
xchg
mov
mov
lcall
dec
push
push
push
sarl
pushf
lods
int3
cmpsl
dec
insb
in
test
addb
addb
iret
fisttpl
jne
jae
test
ljmp
cld
push
loop
jae
js
data16
daa
lret
dec
mov
icebp
and
outsb
sub
rol
mov
xor
cmp
movsl
mov
pushf
addb
xor
ds
test
pop
cld
cli
test
push
push
and
in
pop
ret
ja
sbb
popf
mov
mov
ja
jnp
les
xchg
dec
fdivrs
test
mov
and
inc
push
es
sahf
xorb
pop
xchg
mov
or
int
dec
add
jne
rcll
pop
dec
jb
sbb
dec
arpl
adc
into
sub
xchg
ret
shlb
ret
mov
cmp
sbb
sbb
adc
int
icebp
rcrb
xchg
xchg
inc
or
sub
inc
sbb
hlt
dec
lret
test
movsb
in
push
incl
lods
popf
jp
fnstsw
push
aad
and
mov
dec
jle
roll
add
push
fidivrs
mov
test
jns
sti
arpl
push
sbb
aam
push
jae
nop
mov
dec
int
adc
xor
sbb
aad
cmc
popf
xchg
inc
xor
dec
fwait
adc
inc
les
call
adc
mov
or
adc
and
xor
add
lock
xor
adc
js
call
fimuls
add
dec
push
int3
xchg
dec
loop
cmp
mov
dec
dec
cmp
ljmp
lret
jbe
fsubrs
pusha
inc
pop
xchg
pop
or
negl
pop
cmp
dec
push
pop
mov
sti
jns
cmp
add
popa
cmp
popf
and
sbb
pop
pop
aas
rcrb
mov
inc
or
test
add
xlat
mov
inc
push
mov
xchg
push
inc
or
es
adc
jnp
xor
lods
pop
rclb
xor
xor
dec
xor
clc
or
ret
xchg
pop
xor
jae
sbb
in
jnp
test
jg
in
nop
add
xorb
inc
lods
testb
mov
add
jp
scas
xor
lods
sub
leave
shrl
mov
loop
mov
or
js
xchg
jmp
mov
clc
into
pushf
sbb
sbb
sub
push
je
fisubs
or
ret
idiv
dec
jmp
cmp
sbb
add
dec
push
std
sbb
das
fcmovnu
add
lret
std
repz
mov
pop
mov
adc
mov
jae
and
xchg
or
jecxz
daa
leave
cmpsb
jno
divb
cmc
jg
or
pop
pop
and
lods
out
mulps
xlat
cwtl
shrb
or
jg
add
xlat
sbb
lea
mov
mov
lea
je
jne
fimull
xchg
cmp
adc
mov
repz
lods
xchg
and
outsl
adc
push
xor
mov
out
jg
ficoms
jmp
iret
test
rorl
fistl
cmp
dec
arpl
push
push
scas
dec
push
xchg
fdivrs
xchg
mov
cmp
mov
xor
xadd
pop
sarb
xor
mov
dec
leave
cltd
out
push
and
xchg
add
pop
cmpsl
sbb
dec
jp
add
mov
dec
sub
cli
pop
xchg
scas
jbe
push
dec
es
shrl
ja
adc
data16
bound
bound
in
or
dec
dec
ret
pop
sahf
add
dec
jl
sub
fists
inc
shr
dec
movsl
in
out
ret
call
out
dec
lahf
aad
jne
xor
fwait
inc
js
pop
sbb
mov
sti
les
sbb
repnz
pushf
jge
scas
mov
sti
popf
test
insl
insb
dec
sub
push
in
lcall
pop
gs
xlat
xor
notb
or
sbb
test
stos
outsb
xchg
mov
dec
loop
popf
pop
in
nop
mulb
ja
inc
mov
outsl
add
pop
call
push
test
cld
xor
popf
xchg
inc
adc
or
test
mov
aaa
pop
ds
aad
inc
pop
inc
cmp
inc
or
loope
inc
imul
dec
dec
mov
je
add
testl
cmp
lret
icebp
push
lahf
jae
jmp
add
push
push
test
outsl
cmpsb
cmp
add
adcl
scas
mov
cld
icebp
inc
sbb
dec
sarl
orl
cwtl
rcrl
cld
pop
and
adc
mov
xor
mov
in
test
fadds
push
mov
pop
mov
loope
sbb
rcll
repnz
push
mov
sub
mov
gs
inc
mull
xor
or
sub
out
sbb
push
lret
cwtl
push
xchg
mov
jmp
xor
lret
or
jne
lcall
ds
cmp
mov
and
add
jns
inc
subl
dec
nop
cmp
jns
and
enter
or
rolb
filds
inc
pop
and
mov
xchg
mov
dec
inc
loopne
out
test
shr
jp
add
xchg
dec
push
movsl
and
push
adc
lods
mov
stc
shrb
pop
add
and
cs
dec
adc
mov
ret
mov
addr16
mov
sbb
out
add
outsb
xor
icebp
push
and
sbbb
lea
aas
dec
sub
mov
mov
cmpb
fcoml
addb
push
test
mov
mov
push
aas
sub
test
stos
cli
sub
outsb
iret
mov
popa
sub
stos
mov
sbb
fs
aam
xchg
rcl
test
jbe
in
push
aas
in
mull
or
mov
add
sbb
cmpl
adc
sub
shrb
and
push
xlat
mov
lret
or
cmp
mov
scas
jb
movsb
sbb
push
fldcw
mov
dec
dec
xor
icebp
pop
cmp
int
inc
sub
dec
inc
fistps
aad
push
lret
cwtl
lahf
mov
sbb
in
into
das
jnp
loop
adc
inc
insb
iret
mov
mov
outsb
stc
outsb
out
fcompl
mov
shll
inc
push
sbb
sbb
inc
hlt
fwait
dec
sub
or
add
dec
mov
pop
jecxz
in
xchg
cld
pop
and
pop
leave
pop
inc
mov
cld
cmp
and
inc
loope
es
fbstp
test
mov
jae
rorb
mov
pop
xor
mov
lock
xor
out
cltd
dec
dec
shlb
ja
outsb
gs
into
jl
sub
add
test
incb
sti
loop
mov
aam
setnp
mov
cltd
in
push
and
shrb
xor
scas
pop
sub
jo
sarl
call
pushl
insb
add
ficompl
repz
inc
jbe
dec
and
test
fnstsw
inc
imul
add
jge
inc
sbb
punpcklbw
ret
in
add
flds
in
cmpsb
cmpsb
lret
pop
aaa
dec
lret
and
fcmovbe
mov
add
dec
and
pop
dec
inc
nop
or
das
and
repz
ds
fs
push
cs
mov
mov
pop
loopne
inc
push
pop
dec
pop
out
adc
lods
fwait
push
in
cmp
sbb
lds
ljmp
gs
movsl
pop
scas
pop
inc
icebp
cltd
add
mov
xor
std
shrb
pop
test
xchg
aad
sub
mov
lret
jg
out
cmovae
in
icebp
or
fucomi
aad
xorl
push
dec
jge
cli
icebp
inc
aam
push
xor
loope
sub
out
lock
dec
addl
out
jecxz
jbe
jle
rcrl
cltd
mov
fdivs
mov
push
xor
sub
pop
movsl
mov
aas
lds
call
aas
mov
stos
pop
sbb
mov
pop
xchg
fwait
ja
mov
mov
inc
cltd
sub
scas
xor
pop
daa
mov
out
mov
pop
xchg
fmulp
mov
mov
outsl
cmp
jae
or
add
pop
xchg
sarb
xchg
pop
into
xor
and
push
loopne
inc
data16
and
fdivl
ds
add
xchg
xchg
sbb
iret
dec
jp
jne
aad
test
fmull
je
inc
cmp
jecxz
push
stos
icebp
push
cmpsl
dec
test
adc
push
sub
or
add
cmc
out
sbb
push
test
mov
leave
or
mov
mov
test
sbb
mov
aas
mov
xor
stos
and
js
mov
rcll
jae
xchg
sub
and
int
stc
inc
in
nop
shrl
gs
pop
adc
and
jnp
cmp
push
mov
adc
std
iret
shlb
out
lock
inc
call
int3
pop
js
sub
bnd
lds
out
cmpsl
and
leave
fmull
add
cli
in
int3
adc
adcb
sbb
and
xchg
jmp
roll
mov
inc
mov
loop
sbb
mov
adc
xchg
gs
mov
adcb
push
push
insb
call
xchg
leave
shl
les
mov
rcrb
fsubrs
or
cmp
adc
hlt
jo
lds
dec
mov
inc
sbb
mov
xchg
cli
and
ss
sub
xchg
dec
lcallw
aas
inc
popa
popf
pop
lods
jae
gs
sbb
movsb
int3
mov
out
aam
jle
jno
in
jo
mov
test
lods
jle
push
push
add
mov
cmpl
xor
cli
outsl
nop
mov
sbb
pop
lcall
loopne
and
call
test
sub
sbb
inc
dec
movsl
pop
add
inc
dec
insl
out
jnp
inc
sub
jge
jge
jo
aam
mov
sbb
je
jnp
movsl
push
pop
std
pop
iret
cmp
orb
add
adc
cmp
mov
cltd
mov
xchg
mov
adc
popf
clc
mov
movsl
mov
mov
pop
sub
out
enter
cmp
test
jb
xchg
sbb
cmp
aas
push
xchg
fwait
outsl
inc
xor
rclb
sub
pop
add
jge
xchg
das
js
push
pop
add
pop
dec
xor
sbb
shl
pxor
mov
add
mov
sub
mov
xor
cmp
pop
dec
inc
cmpsl
pop
pop
pop
shrb
xchg
sahf
dec
cmp
mov
dec
pop
inc
mov
daa
dec
or
divl
bound
mov
nop
mov
mov
sbb
cmp
stc
adc
sbb
inc
mov
add
std
xor
test
stos
cwtl
test
ret
mov
mov
outsl
dec
stos
adc
add
xor
loop
push
jno
xorl
xor
mov
out
dec
adc
je
pop
and
ficompl
pop
icebp
lret
pop
rclb
call
daa
test
fimuls
sbb
xor
xor
in
mov
push
mov
mov
jmp
push
andl
lret
popa
mov
or
jmp
js
xor
mov
sub
sub
push
lods
sbb
loop
fnstenv
cmc
pop
fmuls
enter
shl
in
fcompl
mov
cmp
test
xor
adc
test
popa
outsb
xlat
repnz
cmpsb
xchg
mov
pop
cmp
lahf
mov
xchg
jo
in
cmp
xchg
cmp
in
pop
stc
push
push
and
addl
pop
sbb
pop
mov
lea
sub
jno
clc
mov
and
test
nop
je
pop
inc
lcall
mov
sbb
popa
sbb
fst
sbb
imul
cltd
mov
icebp
repnz
test
xchg
cltd
add
mov
outsl
cwtl
das
mov
push
scas
inc
arpl
repnz
push
lret
outsl
cmp
mov
in
in
test
dec
mov
sahf
xchg
sarl
enter
pop
fimull
xchg
cmc
out
xor
les
lock
mov
int3
xchg
inc
xchg
adc
imul
aam
jg
push
push
in
push
jg
push
mov
cli
into
jecxz
xchg
cltd
add
inc
out
pushf
dec
or
jg
pop
les
add
out
adc
add
icebp
xchg
cmp
jmp
xchg
lret
jle
movsb
shrb
out
decl
dec
jnp
xlat
repnz
dec
jl
aas
into
lods
out
xchg
dec
jge
xchg
jo
cs
aam
mov
cmc
enter
xlat
insl
add
adc
test
add
repz
pop
arpl
and
int3
mov
je
ljmp
cmpsl
mov
hlt
lcall
out
in
rcrl
out
clc
xchg
je
test
adc
popf
xor
cmp
inc
jmp
loope
xchg
dec
into
insl
daa
mov
xor
shl
push
push
sti
call
or
lret
xor
xchg
mov
jecxz
fldl
dec
ljmp
xor
out
fadd
les
test
clc
sub
and
aaa
leave
fimull
and
mov
aad
jmp
test
lret
inc
push
xchg
sbb
mov
jl
out
or
mov
dec
insl
lea
pusha
dec
fcom
imul
jae
dec
mov
push
mov
outsb
mov
stos
pop
test
stos
push
ficomps
sbb
rclb
fs
lods
inc
mov
cli
bound
pop
mov
push
call
jo
sub
xor
sbb
jle
push
jl
push
push
pop
mov
leave
nop
pushf
sub
mov
mov
jb
stos
or
mov
adc
lahf
mov
lock
jecxz
jl
leave
xchg
jno
std
sub
sub
cs
adc
stc
mov
or
fcomi
scas
xlat
sar
loope
lea
sbb
adc
pusha
adcl
jno
adc
xchg
dec
sbb
xchg
fcmovne
int3
in
jmp
mov
sub
push
subb
or
push
mov
mov
sbb
jae
xor
and
lock
mov
mov
push
xchg
out
xchg
pop
inc
ljmp
test
mov
xchg
cltd
cmp
dec
push
pop
sub
sub
out
push
mov
mov
mov
je
test
xor
scas
xchg
xchg
test
cs
and
push
mov
sti
or
inc
lods
jnp
mov
int
nop
data16
mov
xchg
je
sbb
sub
adc
lds
fldenv
enter
xlat
dec
jmp
in
mov
in
cmp
lahf
jnp
mov
pop
aad
pop
dec
push
mov
jmp
xor
fwait
sub
outsb
repnz
jge
and
jno
fildl
enter
pcmpgtb
mov
loop
repnz
jl
jl
ret
decl
popa
mov
dec
lea
inc
call
pop
into
lret
mov
mov
lret
mov
enter
stos
pusha
jns
push
lret
pop
xchg
inc
mov
add
mov
jge
cmp
jmp
cltd
insl
sbb
loop
shrl
dec
dec
imul
dec
xorb
xchg
nop
xor
cmp
rclb
idiv
pop
mov
sbb
mov
sub
or
mov
mov
adc
pushf
sbb
add
into
in
xor
nop
xor
cli
push
fsubrs
mov
insl
fistps
mov
dec
jbe
add
sbb
dec
jb
lods
inc
mov
dec
jnp
es
aad
pop
jae
dec
outsb
mov
clc
mov
sbb
add
xchg
xor
nop
ja
xor
out
push
fdivrp
repnz
cmp
jns
dec
idiv
fidivs
rorl
add
mov
and
xchg
or
clc
xor
es
jmp
dec
cli
pop
xor
mov
fdivrl
call
stc
jae
mov
xchg
mov
int3
inc
dec
mov
inc
mov
dec
push
lahf
mov
das
fdivs
jne
aam
cltd
out
pusha
push
faddl
mov
xor
xorl
or
gs
lock
cltd
lahf
xor
sbb
push
ds
or
adc
push
xchg
int3
iret
pop
addr16
stos
lahf
les
jl
test
pop
gs
adc
pop
fimuls
es
mov
pop
pop
mov
or
pop
cmp
addb
icebp
sub
in
mov
dec
fidivs
jno
movsl
xchg
imul
mov
inc
mov
roll
std
xor
test
fisttpll
xchg
lcall
cld
stos
cmp
push
xchg
stos
cmp
pop
inc
lret
or
adc
sub
jae
mov
xor
mov
test
dec
sbb
leave
movl
mov
mov
fcompl
push
inc
mov
ljmp
aaa
int
add
imul
push
lods
rcrl
ss
mov
mov
ret
cs
and
cld
into
inc
aaa
in
stc
movsb
sbb
in
dec
cmp
repz
jo
mov
mov
mov
shlb
out
mov
pop
sub
mov
gs
jp
hlt
jl
andb
cmp
xchg
xchg
push
lods
pop
mov
ja
sub
testl
dec
shll
sarl
xor
sbb
xor
lock
mov
rcll
ds
pop
mov
rol
adc
mov
in
xchg
out
jne
xor
jmp
ret
jno
adc
stos
adc
add
mov
lret
imul
jae
push
popf
push
fbld
fists
test
into
pop
aam
gs
out
pop
call
in
xchg
loopne
imul
test
add
or
jno
dec
js
flds
cmpsb
int3
shl
rcll
lret
dec
mov
xchg
pop
mov
adc
add
sbb
add
xor
dec
inc
jnp
lcall
mov
push
sub
imul
inc
mov
les
inc
pop
movsl
adc
scas
jmp
inc
push
loop
push
adc
cld
out
jmp
add
in
bound
dec
and
popf
mov
jbe
lods
in
popa
sarb
xchg
xor
mov
mov
xchg
shlb
adc
cmp
stos
out
dec
jg
mov
xor
jp
pop
cmp
shl
les
lcall
and
rcrl
add
cmpsl
push
pop
xchg
aas
imul
fcoml
pop
ss
fsubs
dec
and
jg
cmp
iret
mov
and
js
add
xchg
jo
sbb
test
adc
test
jns
gs
lock
sbb
divb
and
or
push
xchg
mov
xorl
or
nop
pop
add
gs
ret
mov
dec
dec
cli
adc
sub
stos
add
or
cmp
mov
push
jbe
jmp
ds
mov
inc
or
outsb
es
pop
pop
adcb
xchg
test
xchg
mov
mov
loope
xor
add
push
inc
aaa
xor
hlt
arpl
push
xchg
mov
or
aad
or
fstpt
fstp
xchg
subl
sub
cmc
push
mov
jmp
lcall
add
and
sbb
iret
in
mov
lret
sub
cwtl
popf
dec
cli
test
lea
pushf
push
cmc
lret
pop
inc
pop
mov
pop
iret
inc
lret
push
cld
pop
cwtl
cltd
mov
pushf
push
shll
lea
inc
dec
xor
lahf
in
fsubrp
imul
sub
std
xor
xor
xor
mov
xchg
jo
mov
jp
leave
push
push
fwait
cmp
mov
arpl
push
lret
enter
jne
scas
cmp
adc
push
mov
stos
in
call
int3
add
xchg
fsubl
inc
ja
outsl
arpl
mov
orb
push
or
cmc
cmpsb
insb
xchg
and
adc
pop
dec
xchg
xchg
iret
fs
mov
pop
cltd
mov
lret
jmp
mov
mov
mov
movsl
stos
mov
movsb
scas
test
mov
xchg
push
inc
fsubl
xchg
outsl
rcrb
jle
push
and
dec
idivb
jmp
dec
sbb
lcall
add
out
mov
sub
push
cmpsl
adc
lods
push
jne
push
iret
mov
mov
in
scas
in
adc
jg
rorb
cmp
fbld
outsl
out
inc
je
xchg
push
xchg
push
push
push
mov
jecxz
es
xor
fcomi
push
push
fidivs
mov
popa
jl
addr16
dec
cld
loop
jae
mov
pop
and
scas
icebp
push
mov
jl
clc
enter
test
cltd
ja
mov
loope
pop
sub
loope
adc
adc
mov
add
mov
ret
and
ret
hlt
sbb
push
xlat
inc
and
mov
test
aam
lock
movsb
in
rclb
repz
scas
lahf
ja
out
pop
js
in
mov
in
test
or
orl
in
idivb
out
lods
push
out
outsl
call
rcl
inc
insb
dec
insb
std
andl
mov
pop
outsb
mov
pop
outsl
jmp
out
jbe
xchg
pop
cld
mov
sti
fbstp
jne
add
dec
hlt
xchg
roll
xchg
repz
ret
gs
cmpsl
lret
xchg
adc
inc
ja
push
gs
xchg
andl
out
fbstp
fmulp
out
sbb
sub
pop
addr16
icebp
inc
xor
jge
insl
mov
leave
jle
stc
insb
xchg
or
ljmp
sub
jl
cmp
sub
cs
pop
inc
and
sahf
int3
into
adc
mov
mov
fs
and
xchg
call
jmp
jnp
mov
cmp
jb
mov
clc
jmp
sub
push
dec
js
push
cld
cwtl
pop
inc
push
inc
fxch
pop
stos
mov
inc
push
dec
fdivrs
mov
jl
call
ds
ja
cmp
inc
lcall
repz
pop
loope
loope
jne
cmp
cmc
cmp
popf
rclb
pop
in
mov
xchg
mov
scas
adc
arpl
call
inc
xor
cmc
inc
xor
rclb
movsl
xor
test
mov
mov
mov
xchg
scas
cmc
jno
mov
and
outsb
fs
mov
sub
data16
push
mov
out
pop
jle
jmp
stc
xor
jns
xor
xchg
arpl
dec
jmp
lods
aaa
loopne
xchg
xchg
and
jle
inc
sbb
outsl
and
aam
jmp
and
push
arpl
lret
sub
and
xchg
sbb
loope
mov
jne
cmpsl
popf
gs
ret
jle
mov
dec
jb
sub
add
dec
out
push
mov
leave
adc
pop
ret
sbb
nop
scas
push
cmc
push
in
inc
repnz
xchg
dec
sahf
mov
data16
stos
out
mov
int3
dec
and
pop
cmp
icebp
test
arpl
pop
aas
adc
pop
pop
aas
stos
jno
out
dec
jle
fdiv
loope
lea
push
in
fsubp
jge
push
push
inc
ds
dec
jne
gs
out
cmpsb
arpl
aam
dec
inc
or
jecxz
push
pop
xchg
dec
mov
add
in
gs
repz
imul
jle
mov
mov
jmp
repz
pop
jno
sti
add
rdtsc
in
pop
sysenter
add
je
outsb
ja
push
inc
rclb
or
add
arpl
gs
sbb
into
mov
inc
in
test
cmpsb
mov
mov
mov
xchg
push
xor
push
cmp
loope
pop
push
mov
xchg
sbb
and
push
aam
xor
imul
into
insb
jecxz
hlt
in
sbb
jp
pop
std
fs
and
and
std
push
arpl
jno
cmpsb
and
adc
rolb
shrb
adc
les
xchg
mov
dec
jb
or
dec
dec
xor
insb
out
enter
or
insl
inc
je
push
pop
inc
pop
xor
bnd
lea
mov
xchg
xchg
loope
testb
mov
xchg
dec
mov
std
out
xor
btc
jno
inc
cwtl
mov
mov
xchg
cld
into
dec
xchg
cmp
sbb
scas
lcall
inc
jmp
and
inc
roll
jo
icebp
dec
mov
xor
mov
inc
add
shrl
cmp
xor
nop
xchg
rcrl
or
test
std
test
adc
ret
dec
addr16
inc
mov
ljmp
or
enter
mov
and
sub
inc
aas
jmp
cltd
leave
pop
repnz
and
mov
dec
adc
inc
sub
subb
fbstp
dec
pushf
sub
push
pop
mov
arpl
inc
shll
pop
arpl
insb
nop
xor
cwtl
leave
mov
pop
movsl
push
fs
sub
outsl
cmc
out
inc
shll
int3
mov
test
dec
mov
fidivs
int3
push
dec
inc
mov
ret
insl
lret
push
gs
adc
shrb
ss
addr16
loop
add
jge
subl
andps
mov
out
mov
icebp
mov
push
and
xchg
xchg
sub
loope
les
fldcw
jge
ja
jno
leave
dec
icebp
xchg
sub
fwait
cwtl
lock
in
fs
lcall
sbb
inc
inc
push
pop
dec
push
jg
int3
mov
pop
sarb
cs
out
cs
jno
push
push
mov
mov
mov
mov
push
cmp
push
pop
jge
push
jne
loop
mov
fcomip
pop
adc
dec
mov
dec
xchg
inc
xchg
fcomps
inc
pop
cmp
mov
xor
lcall
sub
shll
cmp
lds
add
rorl
jnp
cwtl
enter
das
xchg
jmp
xchg
stos
movsl
movsb
out
hlt
push
out
into
rolb
adc
inc
aad
test
push
popl
test
mov
mov
std
int
and
clc
add
ficomps
ret
and
loopne
aad
mov
loope
mov
int3
shll
stc
and
sbbl
sbb
mov
insb
fldcw
loopne
sbb
and
int
sub
js
je
mov
sbbl
push
insl
fs
xchg
mov
xlat
hlt
leave
mov
pop
jno
add
xor
inc
scas
mov
loopne
or
mov
push
std
push
sbb
testl
jns
int3
and
and
testb
add
mov
jo
pop
dec
sti
lods
cs
jno
jge
add
loopne
outsl
cmp
out
cmpsb
add
add
movsb
fdivl
mov
pop
dec
sbb
mov
sub
hlt
lea
mov
flds
ficompl
addr16
bound
popl
mov
adc
icebp
mov
repz
xor
icebp
pop
mov
out
sub
shlb
inc
cmp
xchg
inc
in
sub
lds
push
mov
cmpsl
sbb
out
ret
xchg
sub
adc
jbe
lods
enter
push
jecxz
xchg
addr16
mov
inc
loop
bnd
push
sti
pop
pushf
shlb
out
out
xlat
leave
add
jae
cmpsb
sbb
add
add
sub
fcom
adcb
add
or
push
and
xor
psubsb
imul
mov
pusha
push
push
ret
mov
sbb
and
pop
aas
mov
adc
sub
pop
dec
mov
test
push
cmp
xor
cmp
push
sub
leave
mov
test
xchg
push
popa
mov
enter
cmp
sub
and
mov
mov
loope
sub
insb
and
dec
xchg
pop
push
in
mov
cmpsb
mov
popa
cmc
mov
xchg
xchg
pop
aam
and
int
rorl
popf
push
push
push
push
pop
les
dec
sbb
push
push
lahf
adc
push
pop
inc
dec
test
divl
inc
cld
jle
mov
mov
stc
sub
sub
push
or
imul
imull
xchg
sti
dec
in
cs
imul
pop
outsl
lods
frstor
xor
jbe
xor
cld
test
clc
xchg
push
inc
negl
fldenv
xchg
sarb
or
pop
sbb
daa
cmc
outsb
cmp
fstp
out
mov
lcall
push
xor
scas
mov
arpl
xchg
fsts
mov
int
push
fcomip
inc
xchg
test
pop
mov
push
testb
push
cmpsb
xchg
je
sub
aad
in
arpl
repnz
insl
add
mov
es
xchg
fdivrs
in
adc
fmul
in
out
fwait
loop
lea
and
or
dec
aam
mov
add
mov
add
imul
xchg
pop
lret
test
sbb
mov
scas
popa
sub
dec
lret
leave
sahf
test
dec
aam
push
out
push
imul
lahf
repz
mov
pop
popa
clc
sub
test
add
inc
sub
xor
mov
nop
adc
call
das
fwait
adc
mov
add
ret
dec
xor
jb
pop
jmp
lock
sbb
stos
adc
enter
cld
leave
je
mov
imul
mov
scas
xchg
add
ja
pop
lock
jns
fs
outsb
jae
lcall
addb
les
add
sub
mov
cmp
leave
sub
mov
lock
mov
adc
mov
cmpsb
out
call
xchg
shrl
pop
push
push
test
mov
sub
push
fisttpll
sub
repz
sahf
xlat
push
mov
inc
outsb
sbb
and
push
xchg
jg
lahf
sub
mov
sub
dec
xchg
mov
xchg
sbb
jae
xor
mov
test
mov
lcall
rolb
xor
sahf
jecxz
jle
mov
test
insb
add
cltd
ret
pop
sub
dec
fnstcw
addb
mov
js
xchg
push
and
fsubl
sbb
aad
icebp
js
psraw
xchg
cmp
and
sbb
popf
fimuls
repz
pop
or
push
test
ja
inc
pop
mov
cmp
sti
dec
ds
fadds
ljmp
xchg
fisttpll
fiaddl
fdivr
insb
jl
adc
imul
adc
ret
sbb
popl
shrb
mov
ficomps
loopne
push
add
mov
push
test
sbb
push
mov
imul
xor
insb
lea
popf
popf
mov
insl
inc
inc
mov
add
call
fisubrl
cltd
xorl
out
outsl
dec
jmp
pop
sti
ss
in
fstps
sub
cmp
mull
icebp
ds
rcrb
dec
dec
out
and
aas
test
dec
shrb
xlat
jg
push
js
pop
or
arpl
neg
cmp
add
push
clc
xchg
dec
loope
insl
ficompl
mov
jmp
sbb
sbb
fdivrl
cmp
lds
pop
cmp
jmp
xor
divl
lcall
ret
mov
pop
addr16
sbb
pop
xchg
lods
int
inc
mov
inc
mov
inc
insb
in
imul
fmulp
inc
jb
mov
xchg
mov
nop
scas
addr16
mov
adc
test
nop
mov
inc
jns
shll
jo
sbb
popa
cmp
loop
fadds
pop
lods
imul
xchg
jne
cmpsb
mov
mov
sahf
lods
ja
mov
sub
cmp
insl
cmp
stc
xor
xchg
leave
js
shrl
pusha
xchg
jnp
xchg
lcall
fidivs
lret
scas
xor
adc
les
aaa
sbb
cmpl
sbb
mov
maskmovq
idivl
rorl
add
enter
push
mov
pop
icebp
or
cmpsb
sub
hlt
incl
jb
lret
mov
xor
pop
popf
outsl
mov
inc
push
orb
repnz
cltd
jg
dec
pop
xor
sbb
sahf
ret
dec
pop
cmp
lcall
mov
xor
or
test
and
in
sub
xlat
pop
push
cmpsb
lcall
mov
sarl
jbe
ficoms
mov
fsubrs
jge
lods
shlb
adcl
das
adc
mov
or
imul
sbb
xchg
push
xlat
dec
jb
hlt
xchg
adc
fwait
cmpsl
adc
pop
mov
lods
lds
iret
jnp
ss
or
and
ja
lock
or
cmp
je
stc
or
call
cmpsb
ljmp
int3
sbb
orl
jns
dec
mov
xchg
ret
fdivrs
out
inc
push
lods
ror
out
sbb
mov
imul
test
in
fstpt
push
pop
push
mov
jmp
adc
mov
mov
mov
and
inc
mov
push
inc
mulb
mov
push
lods
popf
nop
or
xor
cwtl
add
in
in
mov
dec
mov
into
imul
nop
rcrb
and
stc
sub
pop
sbb
call
sub
and
inc
mov
xchg
les
dec
cmp
sub
lcall
mov
stos
shrl
mov
pop
cli
cmp
cwtl
xchg
cmp
bound
xchg
icebp
es
mov
adc
inc
sbb
jnp
mov
or
int
shl
cmc
pusha
hlt
mov
cmp
push
and
pusha
lods
adc
sbb
pop
fdivs
jecxz
in
std
and
pop
iret
mov
sbb
ret
inc
sub
mov
loope
mov
mov
jmp
sub
xchg
cltd
adc
movsl
fcoms
push
aam
jno
dec
pop
mov
jmp
out
icebp
pop
inc
or
and
shlb
xchg
gs
loope
push
cmp
adc
xchg
sahf
outsl
aam
and
ss
sbb
adc
popl
mov
psllq
out
pop
jae
or
dec
jge
cmpsb
imul
loope
add
loopne
mov
or
mov
clc
aas
sbb
jmp
pusha
mov
insb
xchg
push
mov
xor
das
insl
fldcw
in
pop
inc
xor
bound
push
pushf
or
sub
cld
mov
pop
xchg
fs
clc
fsubp
inc
xorb
sahf
jg
fnsave
ljmp
ljmp
cmp
mov
or
xchg
insb
cmp
adc
inc
adc
add
cwtl
repz
call
adc
pushf
mov
jp
hlt
out
pop
xor
sbb
sbb
mov
jle
flds
push
cld
cmp
push
jo
pop
fidivrs
sbb
xchg
rorb
popf
insl
mov
cmp
insb
lods
mov
mov
inc
xchg
stos
fistl
cmp
scas
mov
andb
adc
daa
xchg
sbbb
mov
lret
adc
push
and
push
mov
in
jp
push
pop
jg
mov
insb
pop
arpl
lcall
inc
testb
cmp
addl
int3
jp
xchg
enter
mov
xchg
sahf
sbb
jmp
cmpb
and
ljmp
jb
mov
ja
sarb
in
in
add
repz
jecxz
xor
xor
sbb
ret
les
out
lock
xor
or
xchg
mov
popa
push
jae
xor
andl
adc
mov
inc
push
inc
fwait
xor
add
arpl
sub
mov
xor
adc
sub
jp
add
pop
mov
lret
shl
or
xchg
inc
jno
imull
add
xchg
push
or
dec
ret
popa
and
xlat
mov
shrl
xchg
loope
push
cmp
inc
jns
cld
repnz
push
dec
jo
pop
jo
mov
cmc
cmpl
inc
imul
cmp
rep
movsb
adc
stos
dec
mov
inc
xchg
add
imul
into
pop
jle
popa
inc
inc
ljmp
sub
icebp
jbe
inc
inc
xchg
dec
sub
sub
push
mov
sarl
push
into
imul
pusha
sbbb
jle
push
decb
mov
push
hlt
adc
sbb
jno
push
xor
pop
stc
jl
pop
inc
lcall
test
sbb
jbe
lret
add
ret
mov
repz
stc
xor
add
inc
and
jo
inc
add
addr16
and
fistpll
gs
pop
cmp
sub
into
sarl
and
mov
cltd
lock
popf
out
out
sbb
popa
test
int
adc
mov
clc
sub
dec
addb
leave
sbb
addr16
push
ljmp
mov
push
jg
dec
fcmove
mov
push
cmpsb
nop
mov
outsb
dec
or
loop
enter
test
cmp
mov
pusha
jmp
mov
cmp
pop
push
shl
paddb
add
fsubs
pop
fisttpl
or
insb
mov
dec
pusha
insb
inc
aam
mov
cmp
mov
sbb
fiadds
sub
jle
push
arpl
mov
lcall
shrl
cld
stos
cmp
mov
repz
stos
mov
xchg
pop
pop
dec
xchg
not
les
inc
fsubl
call
push
add
adc
xchg
mov
mov
dec
arpl
cld
sub
nop
loopne
mov
pop
jle
mov
sbb
lods
cmp
mov
imul
mov
repz
adcl
inc
dec
enter
movsl
adc
cmc
popa
mov
mov
call
arpl
int3
cmpsb
cwtl
cli
jns
cwtl
loop
gs
push
fs
jne,pt
jg
mov
idiv
mov
pop
mov
es
scas
bound
mov
pop
jge
push
pop
mov
in
cmp
jnp
pop
ret
add
sbb
insb
cwtl
mov
ljmp
mov
dec
inc
push
pop
ret
hlt
sub
mov
sahf
out
dec
ret
int
in
inc
in
mov
lods
pop
in
xchg
mov
xor
bound
or
loopne
jne
dec
movsl
je
xor
and
cmpsb
stos
leave
push
into
jle
cmp
popf
gs
aam
mov
push
add
cld
dec
movsl
mov
push
cmp
push
sbb
inc
xchg
insb
or
in
jmp
repz
lret
xchg
imul
adc
data16
popa
or
push
push
mov
push
lahf
ret
xorb
xor
loop
or
add
mov
add
popf
fwait
adc
aas
add
mov
mov
sar
dec
std
mov
adc
mov
outsl
pop
iret
lahf
mov
imul
lock
cld
loopne
adc
lcall
inc
sbb
int3
fstl
jb
test
das
ss
or
lret
fdivs
hlt
xor
dec
es
movsb
loop
xchg
hlt
jle
dec
mov
or
movsl
ret
and
and
mov
addr16
sarl
mov
adc
shll
cwtl
lcall
pop
es
push
notb
ja
nop
and
pop
in
mov
xchg
leave
xor
pop
jl
out
neg
xchg
dec
cld
ljmp
ficoms
inc
sub
jl
cmp
fldt
mov
sahf
or
and
mov
xchg
sub
xlat
cmc
sub
add
and
push
repnz
arpl
pop
pusha
add
push
daa
not
cmp
int
int3
push
and
or
sub
mov
std
mov
out
repz
mov
lea
jp
in
jnp
arpl
cli
mov
push
fwait
loope
fidivl
out
int3
mov
lods
fs
insl
insl
cmpsl
or
sti
icebp
addr16
jl
mov
aam
push
out
adc
fcomps
jbe
subl
or
insb
enter
jg
scas
fstpl
jmp
fwait
movsl
movl
fwait
mov
gs
push
popf
pop
iret
push
jecxz
jl
outsb
inc
call
sahf
pop
inc
push
in
xorb
ss
pop
cmp
adc
dec
and
inc
xor
xor
mov
pop
mov
movsb
mov
jno
sub
xchg
mov
xchg
pop
lret
test
xor
pop
ficomps
scas
push
fsubl
in
push
mov
add
clc
add
cmp
mov
pop
and
nop
hlt
es
sub
sbb
pop
adc
ja
and
rorl
mov
push
std
cmp
sub
in
jmp
inc
jo
jl
pop
dec
xor
pusha
mov
mov
jle
inc
inc
jl
inc
adc
mov
in
and
jns
out
movl
adc
bsr
xor
mov
dec
adc
push
ret
or
jl
in
cld
stos
push
loop
xchg
imul
adc
push
adc
dec
sbb
mov
fst
fdivrl
fwait
lods
cltd
dec
push
xchg
fdivl
cmp
pusha
call
call
mov
mov
lret
mov
cmpsl
sub
arpl
dec
stos
mov
lods
into
adc
xchg
les
sbb
mov
clc
xchg
mov
pop
in
jae
xor
outsb
bound
pop
sub
lcall
cmpsl
lret
or
cmc
mov
pop
pop
pushf
mov
addb
out
or
daa
cld
scas
cmc
flds
std
call
xchg
outsl
negb
mov
das
cmp
aas
sbb
imul
out
xchg
int3
faddl
aam
dec
jl
mov
jb
lds
insb
imul
ficoml
fcomps
mov
mov
or
addl
push
inc
cmpsb
fbstp
int
add
test
push
mov
xchg
mov
push
xchg
xor
push
jge
xor
jnp
xor
ljmp
pop
ja,pn
push
rcr
aas
and
sarl
stc
push
pop
call
push
stos
and
fsubrs
das
xchg
jp
aam
adc
xor
cs
add
pop
ja
cmc
pushf
call
cmpsl
call
fistpl
xor
test
sub
adc
and
adc
jmp
sti
push
insb
mov
roll
loopne
xor
addb
cltd
insb
dec
roll
sbbl
xchg
inc
out
shrb
xlat
lock
xorl
mov
pop
jge
inc
mov
loope
ss
xchg
push
mov
seta
or
lods
loop
stc
sbb
out
lcall
leave
sub
test
fstl
ss
ds
pop
mov
test
jecxz
xor
pop
leave
and
lock
flds
dec
or
in
pop
test
fs
mov
inc
and
mov
xchg
mov
sbb
insb
orb
test
or
aas
fistps
xor
jle
or
in
inc
out
sbb
and
sbb
inc
mov
xchg
mov
pusha
icebp
jmp
push
movsl
mov
xor
pop
leave
dec
mov
ljmp
push
out
arpl
into
shrb
xchg
sub
jnp
bound
stos
pop
jne
je
push
loop
mov
cwtl
inc
mov
test
bt
mov
xrelease
sahf
jb
enter
cli
rcrl
test
hlt
add
out
jmp
cmpsl
pop
das
mov
outsl
push
push
daa
push
mov
adcl
cmpsb
loope
jo
clc
pop
jmp
dec
dec
ja
data16
inc
lret
adc
add
jnp
jns
pop
insb
cmp
repnz
out
or
xor
arpl
cmp
push
cltd
mov
adc
mov
repnz
sti
subb
rolb
xchg
in
sub
sub
aaa
mov
jle
fmuls
movsb
jmp
add
popf
and
popa
cmp
ret
outsl
pop
clc
pop
aaa
sahf
mov
and
cwtl
xor
xchg
or
jmp
imul
adc
arpl
shufps
in
int
push
jo
gs
scas
mov
lods
hlt
cmp
lret
out
and
popa
fisubrl
mov
push
cmpsb
mov
aam
rorb
fistps
test
jnp
jmp
call
pop
or
fisttpl
into
add
rorb
aam
xchg
lods
leave
loop
stos
pop
pop
or
das
add
or
mov
or
and
mov
push
pop
jns
jb
sbb
sbb
or
pop
shrl
ret
push
lods
pop
sbb
push
repnz
xchg
xchg
xchg
jno
inc
jb
icebp
and
add
mov
fwait
aad
mov
leave
jmp
jbe
int3
mov
xchg
fidivs
bswap
imul
dec
xchg
mov
popf
jge
loope
clc
aad
enter
movsb
xchg
push
clc
data16
idivb
inc
lods
pop
shl
xor
xchg
mov
stc
iret
into
fcomps
fwait
mov
loopne
push
ficoms
cmp
les
add
sub
idivl
add
mov
cmc
pop
xlat
inc
cmp
dec
ljmp
inc
inc
mov
std
stc
stos
mov
mov
pop
adc
or
mov
push
iret
mov
daa
nop
mov
sbb
aas
xlat
imulb
xor
lea
call
or
xchg
pop
stc
xchg
cmp
call
push
jno
adc
xchg
ret
mov
popa
subb
jge
out
mov
int3
jge
dec
push
mov
or
or
insl
aad
push
push
mov
jbe
sbb
push
sub
inc
dec
icebp
enter
aad
imul
dec
mov
mov
orb
jnp
arpl
out
dec
add
lcall
adc
push
jb
enter
mov
jnp
push
rorl
lea
loop
pop
jo
push
xor
or
fwait
les
lret
and
lea
aam
add
dec
adc
fiadds
push
push
jb
sub
addr16
jb
test
sbb
ja
bound
in
pop
lcall
mov
xchg
movsb
sub
or
int
or
pop
iret
ret
jno
int
push
jl
add
pop
imul
mov
daa
xor
xor
sub
aam
hlt
xchg
cmp
and
gs
xchg
mov
push
sub
out
sbb
fwait
mov
or
sub
fisttpl
sbb
adc
out
sbb
push
je
rcl
mov
lods
pushf
inc
ret
cmpsl
in
jmp
cmc
or
xor
ficoml
idivb
ficoml
mov
adc
sbb
add
cmp
cmp
pop
push
adc
ss
jle
pop
or
out
insl
sub
push
sub
xor
fnsave
sbb
jl
clc
ret
mov
fstp
sti
adc
incb
rcl
pop
cmp
sbb
add
jmp
stos
lret
sbb
mov
std
cmp
daa
test
loop
outsl
xlat
test
cmp
mov
xchg
aam
popa
icebp
mov
jae
test
clc
divb
sub
call
push
lods
shll
insb
dec
push
adc
frstor
dec
and
sarb
aam
movsl
xchg
sbb
sti
into
in
xor
jmp
sar
imul
lods
xor
frstor
pop
roll
outsb
jmp
cli
xlat
sbb
sti
and
int3
cmpsl
cmp
stos
adc
dec
je
shll
mov
or
rcrl
lods
adc
std
pop
scas
icebp
adc
pop
test
pusha
out
call
dec
mov
sub
dec
jb
enter
outsl
andnps
and
andb
ljmp
ja
mov
or
ja
xor
scas
faddl
mov
xor
in
xchg
sub
xor
jmp
lret
cmp
cmp
cmpsb
fwait
pusha
cmp
xchg
arpl
cmp
out
loopne
mov
aam
gs
cmpsl
aas
ror
sbbb
lods
arpl
jmp
pop
fisubl
sahf
cmp
adc
ficoml
sbb
pop
es
and
pop
sub
mov
or
fucomi
jl
shrb
add
pop
jecxz
movsl
or
out
pop
inc
jge
push
mov
cmpsl
mov
dec
in
pop
and
adc
ss
mov
inc
hlt
fs
jmp
sub
or
jno
add
js
cmp
mov
xchg
cmp
int3
std
adcl
subb
insb
repnz
add
fnsave
cld
mov
mov
js
push
sarl
in
loope
or
and
pusha
add
andl
sbb
fiaddl
test
push
sbb
mov
pop
adc
mov
mov
mov
dec
adc
jno
jae
imul
xchg
popa
xchg
and
pop
in
cmp
mov
test
mov
roll
pop
jae
dec
add
xchg
sbbb
fnstcw
test
pop
lock
inc
or
vunpcklpd
out
es
jb
add
pushl
aas
mov
std
stos
add
test
mov
sbb
aam
movsl
hlt
in
pop
push
inc
add
add
orb
icebp
dec
das
jge
sub
gs
jl
add
lds
fs
or
pop
jmp
dec
add
mov
and
lds
mov
push
testb
inc
ret
lea
pop
stos
jl
imul
pushl
pushl
adc
xlat
sub
or
xchg
lock
cli
sub
pop
ret
push
jae
pop
fxch
mov
dec
mov
cld
paddd
add
test
dec
dec
in
xchg
hlt
or
adc
mov
repz
add
jae
stos
cwtl
add
sub
popa
clc
das
and
ljmp
subb
repz
xor
push
jge
jae
sub
std
clc
dec
jecxz
sub
sbb
pop
inc
ljmp
sti
ror
jge
das
mov
ljmp
jp
adc
sarl
or
leave
aas
adc
enter
or
jnp
jns
fstl
mov
jecxz
lahf
movsl
es
sbb
sub
jbe
out
popa
aam
xlat
addb
and
daa
pushf
int
xchg
pop
scas
enter
mov
jecxz
insb
mov
loope
cmpsb
pusha
sbb
cwtl
jp
loope
pop
into
fsts
sub
insb
push
xchg
stos
inc
pop
fimull
push
dec
add
dec
push
in
lahf
dec
xchg
lret
mov
mov
add
mov
shlb
mov
outsl
outsl
dec
and
jb
arpl
push
mov
push
push
sarl
fs
mov
adc
sbb
pop
adc
pop
addr16
mov
sarl
dec
sbb
and
es
insb
pop
repnz
mov
stos
cmp
pop
mov
lret
or
enter
int
jb
fwait
or
cli
fwait
xor
das
sub
dec
xchg
scas
xor
jnp
add
fidivl
sub
lcall
inc
cmp
mov
mov
andl
div
xor
test
mov
and
aam
or
pop
ret
notl
pop
into
daa
mov
cli
adc
ror
mov
jo
into
enter
fisubrs
flds
push
push
mov
push
dec
sbb
int
aaa
mov
or
cmp
xor
pop
push
je
jecxz
pop
inc
or
lods
aas
pop
dec
push
hlt
shlb
pop
aad
sbb
lahf
incb
adc
loop
push
sbb
aaa
fstpl
mov
adc
and
cwtl
std
or
adc
and
cmp
and
sub
inc
lcall
das
aad
fisttps
andl
jmp
in
mov
aam
dec
jne
ljmp
push
jge
leave
jecxz
dec
push
shr
dec
shlb
push
jge
mov
cmc
push
mov
fidivrs
std
inc
and
dec
xor
xchg
cmpsl
push
in
dec
pop
jl
pop
cmpsb
mull
adc
mov
and
int
outsl
clc
push
xchg
jmp
pop
hlt
les
popa
xchg
and
push
fadds
shlb
mov
mov
test
jno
sbbb
jmp
and
and
push
pop
sub
add
push
or
js
push
fpatan
cmp
mov
inc
xor
xchg
and
sub
in
out
aaa
xorb
add
lods
pusha
test
lret
pop
sub
sbb
jne
sbb
ja
lods
dec
bound
sub
xor
add
in
clc
adc
push
inc
adc
in
jo
or
fidivs
popa
das
pop
loopne
cmp
jle
jno
adc
adc
popa
stos
aas
jb
mov
mov
adc
fidivs
xchg
xor
and
fdivrp
cli
sbb
pop
into
imul
xchg
mov
addr16
movsl
add
push
data16
and
imull
xchg
xlat
xchg
shrl
cs
mov
imul
adc
sbb
and
adc
roll
adc
jo
shrl
cmpsl
loopne
dec
pop
enter
out
add
ja
je
and
cmp
fwait
and
and
stos
add
xor
inc
in
sbb
aas
adc
sbb
jno
hlt
pushf
pop
inc
dec
std
mov
push
add
xchg
mov
lds
ljmp
inc
popa
nop
adc
jo
test
adc
out
bndldx
arpl
or
dec
popl
cmp
aam
sub
outsl
push
ljmp
xor
fbstp
sub
into
out
test
push
mov
int
jecxz
movsl
sbb
jmp
and
inc
xchg
add
test
iret
and
bound
xchg
mov
imul
xchg
in
jg
fwait
jb
dec
adc
push
repnz
and
icebp
inc
adc
hlt
mov
xchg
mov
fisubl
xor
icebp
sub
sub
popf
push
cmp
test
mov
and
or
dec
ja
repz
push
jecxz
mov
mov
dec
mov
sbb
shll
inc
mov
lret
or
dec
fisubrl
dec
lods
fdivl
imul
flds
leave
sbb
add
mov
inc
stos
aad
xchg
lods
imul
sbbl
dec
jg
aaa
imul
dec
icebp
lahf
popf
sahf
push
mov
repz
add
mov
mov
outsl
faddl
adc
add
or
pop
jle
fstl
movsl
adc
outsb
dec
xor
mov
xchg
fisubrs
clc
call
orb
scas
or
out
rcrl
cmpsl
out
jecxz
rorb
lods
push
jbe
hlt
inc
add
clc
mull
sahf
fistl
lea
sbb
jae
pushf
cltd
fcomi
outsl
mov
stos
xor
mov
inc
imul
sub
pop
xor
sbb
mov
divl
push
mov
adc
daa
pop
inc
stc
cmp
rcll
pop
pop
loopne
lock
fwait
pop
sub
pusha
orl
and
xor
xor
sbb
cmp
sbb
pop
sub
and
push
pop
push
mov
inc
push
adc
add
inc
mov
and
push
jno
negb
je
and
stc
pop
sub
add
inc
pop
sub
gs
cmp
aam
mov
cmp
push
lds
hlt
add
mov
xor
pop
xchg
cmp
daa
int
push
in
clc
or
data16
jl
sub
shrl
sub
ss
in
ss
mov
mov
pop
test
jp
aaa
mov
mov
xor
mov
idivl
ja,pt
das
or
push
mov
cmpsl
bound
pop
loope
or
pop
adc
xchg
mov
mov
jmp
pop
je
mov
xchg
fdivl
cmpl
add
fdivp
int
dec
pop
bound
xor
imul
iret
out
push
lret
cmpsl
pop
test
orb
in
push
fnstcw
inc
rorb
mov
int3
mov
xchg
xor
iret
xchg
sahf
ret
test
inc
xchg
je
mov
mov
gs
fsts
leave
mov
add
cmpsl
xchg
xlat
add
in
pushf
addr16
sbb
repz
int3
je
and
cs
jecxz
shlb
and
outsl
dec
push
test
pop
or
mov
inc
add
mov
jb
or
insb
call
push
cli
push
es
sbb
aaa
push
sub
sub
inc
cmp
mov
jmp
les
inc
or
and
dec
jbe
xchg
cltd
in
insl
and
push
xor
jo
mov
sarb
popf
xor
push
movsb
mov
dec
pop
in
pop
fwait
les
mov
test
inc
add
adc
into
lds
xchg
dec
in
push
fwait
pop
sbb
jbe
push
dec
adc
or
ret
out
div
adcb
mov
push
cwtl
adc
in
sub
in
cmp
adc
clc
shr
mov
aaa
test
outsl
fcmovne
shrb
jg
mov
jae
jmp
pop
out
xchg
leave
inc
adc
pop
adc
push
loop
push
mov
js
sbb
or
jne
bound
fists
insb
xor
decl
push
cwtl
jo
es
or
pop
inc
pusha
and
idivl
lret
push
or
test
into
into
jo
loopne
cmpsb
repnz
js
or
stos
push
fdiv
adc
inc
jge
jne
ljmp
dec
cmp
cmp
jno
divb
add
test
ds
repnz
xchg
pushf
adc
std
inc
xchg
imul
dec
mov
in
mov
mov
pop
fcomip
imul
dec
fadds
shl
jne
push
inc
jl
jb
cmp
jo
inc
mov
cmp
sbb
add
lock
push
js
add
jb
jl
dec
insb
cs
inc
mov
pop
sbb
popf
popf
data16
mov
fwait
add
xlat
in
push
inc
sub
rcrb
sbb
fisubl
sbb
mov
movsb
subl
mov
add
and
outsb
arpl
hlt
pop
mov
inc
push
mov
cmp
mov
mov
jl
xlat
xor
lret
test
mov
pushf
dec
or
fwait
popf
lods
les
mov
jmp
push
in
cli
sub
mov
mov
ret
mov
popa
out
loop
iret
jle
fists
xchg
mov
mov
push
xchg
mov
idivl
sarl
fisubs
pop
pop
arpl
dec
fwait
les
test
sub
jno
adc
out
stc
rcl
cmp
add
push
dec
or
push
aad
mov
pop
jae
xchg
cmp
icebp
pop
dec
xor
add
cmpsb
nop
icebp
xor
loopne
testb
mov
mov
push
pop
jmp
leave
cmp
stos
adc
add
movsl
sub
xor
xchg
xlat
cmp
inc
int3
fdivrl
cwtl
jle
mov
add
in
jp
test
jns
rorl
xchg
sub
imul
mov
rorb
jnp
shll
dec
cmp
push
xchg
inc
fistps
test
addb
pop
in
or
dec
mov
imul
pop
sahf
xchg
pop
lahf
ret
inc
outsb
push
inc
push
mov
jmp
icebp
adc
cs
call
xor
inc
add
mov
enter
jnp
push
mov
push
jbe
loope
stos
or
cmp
dec
insl
add
adc
jmp
jg
dec
mov
ss
pop
mov
jns
push
sub
cmpsl
push
xchg
lea
sbb
dec
in
lods
je
cmp
rcrl
gs
sub
out
loopne
cmp
jae
and
add
lods
cmp
mov
aas
add
mov
addr16
xchg
or
mov
mov
fisttpl
cwtl
roll
test
mov
fistps
out
das
fwait
lret
add
lods
mov
sbb
cmp
cs
xchg
pop
mov
add
les
adcb
aaa
fcmovu
rcl
idivl
cmpsl
stc
inc
mov
sbb
shlb
andl
stos
nop
insl
scas
testl
fidivl
decb
pop
or
popa
imul
mov
leave
sbb
add
inc
lcall
shr
xor
int
jge
adc
mov
jnp
arpl
inc
xor
and
push
adc
ss
push
mov
cmp
xchg
mov
add
jp
out
push
fnstenv
mov
adc
loope
popl
and
scas
mov
mov
lea
mov
mov
adc
sub
push
xor
jecxz
popf
jle
or
push
rcrl
dec
mov
mov
mov
fidivs
shll
cmpsl
and
sub
sti
adc
pop
and
push
stos
mov
lock
pusha
pop
imul
push
jle
mov
test
inc
sbb
repz
sbb
and
lods
fwait
pushl
push
in
mov
jmp
in
inc
test
xor
pop
aaa
push
fistl
inc
arpl
and
inc
fs
add
into
cmp
add
adc
jb
sub
pop
lea
push
add
adc
cltd
fildll
outsb
mov
add
sub
xchg
push
fnstcw
mov
sti
jg
shll
clc
aas
fs
xor
and
subb
rolb
add
ret
sbb
idivl
stos
jl
xchg
jne
int
sbb
mov
adc
mov
shr
out
cmp
push
out
and
mov
jne
filds
stc
add
into
xchg
orb
stc
mov
das
xlat
adc
sahf
push
enter
mov
out
pop
movl
movsb
sub
sar
xchg
add
xchg
in
sbb
xor
or
inc
fildll
dec
mov
out
pop
adc
fisttpl
mov
daa
cmp
add
mov
and
hlt
adc
push
std
push
mov
push
dec
lcall
xchg
push
mov
lock
push
subl
dec
scas
xor
pop
dec
cld
scas
dec
jmp
adc
or
xchg
iret
pop
xor
dec
or
out
jbe
test
xchg
or
imul
sbb
push
call
lods
pusha
scas
dec
and
inc
loope
mov
test
xor
xchg
pop
sub
fcmovbe
add
mov
jp
ds
pop
stc
add
mov
stc
mov
or
xchg
das
sub
jg
sbb
data16
pop
sub
adc
cltd
mov
cmp
stc
leave
ret
cld
mov
rcrb
lret
call
and
adc
inc
aam
jmp
fidivl
outsl
add
jae
ljmp
add
repz
xor
inc
lods
xor
mov
sub
fidivl
pop
dec
xchg
loope
mov
movsb
popa
mov
test
cmp
int
mov
mov
test
xor
enter
inc
and
sbb
jecxz
mov
pop
arpl
mov
or
adc
pop
jae
cmp
je
jae
cs
adc
or
sbb
fmul
ret
les
clc
lahf
aam
and
xchg
xchg
mov
in
add
in
adc
and
and
cmpsl
jno
jns
sub
fsubl
adc
addr16
pop
jns
imul
mov
movsb
and
push
jmp
dec
ret
repz
rolb
push
xchg
jmp
imul
shll
cmpsl
inc
mov
jge
jb
ljmp
psrld
hlt
int
xchg
pop
fdiv
pop
out
sub
fdivs
fmul
lds
mov
clc
test
jle
jnp
add
and
or
lock
push
int3
mov
pushf
ficoml
mov
mov
out
pop
lock
cwtl
push
jnp
sbb
xchg
sub
push
xchg
push
sbb
xor
mov
loope
fldl
ss
fidivrl
call
icebp
inc
mov
ljmp
pop
addr16
mov
nop
mov
jmp
popf
dec
gs
xchg
lods
and
jge
jmp
pop
fisttpll
or
outsl
sub
add
sub
push
cs
das
clc
dec
mov
xor
ret
aam
jmp
push
popa
sub
nop
cmp
pop
popa
jg
cmp
call
gs
pop
dec
pop
hlt
inc
xlat
orb
push
mov
jecxz
cmc
or
das
fldt
mov
aas
fstpt
cmp
sub
xor
repz
in
push
cmpsl
dec
arpl
repz
das
pushf
mov
dec
xchg
jp
not
out
jle
push
imul
in
mov
gs
incl
pushf
ret
arpl
out
loope
gs
mov
jne
cwtl
jmp
jb
cmp
cmpsb
jnp
jge
pop
shl
stos
push
pop
xchg
repz
cmpsl
aad
push
mov
imul
fcmovbe
je
fsubs
lods
lea
jns
popf
sarl
cmp
adc
jae
push
fcompl
xchg
ljmp
sbb
pushf
imul
outsb
xchg
pop
fimull
lea
cmp
inc
daa
ss
in
imull
out
scas
cmp
pop
and
sub
repz
push
mov
shr
add
jnp
call
jb
ficompl
loop
aas
push
les
or
push
sbb
scas
lret
mov
lods
out
std
int3
pop
mov
ficompl
inc
add
test
sahf
dec
data16
xchg
inc
test
mov
cmpb
shl
add
add
popa
gs
test
in
sub
jmp
in
mov
js
repz
pop
int
arpl
and
addb
out
jge
cmp
sub
add
repnz
std
mov
pop
xchg
or
ror
fildll
shlb
in
int
cmp
push
insb
mov
and
mov
inc
pop
add
xor
and
push
dec
sub
or
push
xchg
stos
sbb
push
jge
pop
and
mov
adc
hlt
adc
mov
sub
push
dec
int3
dec
cmp
outsl
rclb
add
outsl
bnd
or
dec
out
sbb
cmp
and
insb
mov
ret
adc
sbb
xor
xchg
cwtl
dec
or
sbb
pop
js
cmp
add
ja
inc
mov
xchg
dec
popf
sbb
lea
xor
test
imul
daa
sbb
stc
les
mov
xor
dec
aaa
lock
jmp
test
cltd
dec
cmp
sbb
shlb
jae
push
test
pop
stos
lahf
jmp
xchg
movsl
out
cmpl
sahf
imul
sub
lock
movsl
jge
rcll
aad
das
hlt
mov
cmpsl
add
dec
mov
pop
adcl
clc
dec
das
xor
xor
xor
mov
mov
lock
int
scas
ja
icebp
bsf
jp
dec
mov
xor
lret
imul
je
sub
repnz
adc
jecxz
test
test
stc
xchg
push
loopne
jg
jge
lahf
inc
mov
nop
leave
pop
shrb
jns
ret
insl
cmpsb
sbb
push
xor
dec
mov
add
or
mov
sti
and
insl
std
and
or
outsl
testl
sbb
cmp
aad
sbb
jge
mov
adc
xlat
scas
enter
pusha
stos
mov
jmp
inc
rcrl
cmp
loope
outsb
sub
ret
mov
shlb
push
rorb
jno
inc
out
stos
and
jnp
xchg
cmp
arpl
imul
ret
jmp
and
int3
leave
jb
dec
mov
repz
fs
push
jmp
js
mov
xchg
push
xor
push
xchg
insb
push
mov
dec
fdivs
inc
stc
aam
fists
mov
stc
in
push
fmul
test
scas
fldt
inc
cmp
xchg
mov
mov
push
xor
and
xchg
clc
scas
and
ds
rolb
push
fmul
or
dec
jbe
inc
push
iret
or
adc
in
mov
mov
loopne
popf
mov
sub
jg
fldl
mov
jl
mov
adc
andb
jecxz
add
sti
dec
pop
inc
sub
lock
xor
test
xchg
cmp
aas
add
cld
mov
pushf
xchg
add
cmp
ret
pop
adcl
push
shrb
out
int
push
in
jb
ja
out
jp
mov
pusha
addr16
adc
jb
cmp
imulb
xor
sub
bound
lods
lea
outsl
sub
cmc
mov
jne
adc
in
pop
mov
fbstp
add
lods
push
shll
mov
cwtl
inc
scas
xorl
out
add
mov
ficoml
mov
or
or
call
mov
popf
and
sbb
mov
mov
repz
inc
into
cmp
in
clc
pop
aaa
or
adc
addr16
pop
dec
mov
xor
add
jb
xor
scas
insb
fistpll
and
dec
outsb
std
daa
inc
mov
push
sbb
sti
and
mov
jnp
pusha
mov
mov
mov
sbb
pop
push
pop
adcl
idivb
into
cmc
cmc
mov
or
std
clc
mov
paddw
daa
inc
add
push
pusha
cmp
adcl
mov
sub
loopne
push
in
sbb
push
mov
adcl
outsb
cmp
mov
or
cmp
gs
inc
jnp
mov
aaa
cmpsl
sbb
push
jmp
jne
loopne
sub
testb
cld
movsb
push
or
inc
mov
in
loope
shlb
dec
fscale
outsb
sub
jle
dec
mov
int3
jg
xor
lods
adc
popf
cmpsb
push
xchg
push
xchg
sub
jns
stos
aad
jge
mov
inc
insb
pop
sbb
mov
in
movl
popa
and
xchg
xlat
push
fistl
and
cmp
fisubs
aad
scas
mov
ljmp
insl
xchg
ret
shll
mov
mov
into
mov
popf
sub
fwait
xchg
icebp
xor
pusha
ret
mov
idiv
mov
add
shl
insb
jecxz
adc
std
or
or
push
jmp
inc
ret
mov
shrl
mov
mov
push
daa
add
shrl
push
push
iret
lods
push
addr16
xorb
xorl
jns
leave
mov
iret
push
sbb
jnp
outsb
cmp
jnp
xor
aas
out
sahf
je
into
xor
insl
jg
xchg
pop
jp
push
loope
fcompl
shl
mov
mov
inc
mov
ljmp
mov
stos
adc
js
cmpl
rcr
sbb
jl
xchg
or
leave
cld
test
cmp
push
or
test
sbb
push
repz
es
sub
iret
mov
decb
mov
pop
pop
mov
js
push
xchg
arpl
rcr
cmp
mov
cmp
add
add
add
xchg
xor
adc
out
out
mov
scas
xchg
sub
add
jno,pn
in
push
ffreep
push
sahf
mov
das
jo
mov
ljmp
loope
jecxz
inc
gs
inc
fs
loop
cwtl
push
xor
push
imul
sarl
bound
jmp
mov
int3
dec
gs
pop
xchg
adc
insl
and
ljmp
aaa
pop
aas
xchg
jbe
arpl
cmp
mov
xchg
dec
loop
hlt
shlb
pop
insl
pop
call
fstl
stos
sbb
dec
and
aam
push
cmp
mov
dec
rolb
add
hlt
popf
shrb
outsl
shrb
mov
xor
pop
out
xlat
jbe
dec
mov
int3
into
xchg
jns
mov
addl
lds
sbb
movsb
fldcw
divb
jo
jo
mov
cmpb
mov
call
push
pop
inc
imul
in
in
fistpll
insl
dec
cmpsl
pusha
mov
sbb
mov
sahf
xchg
sub
push
jmp
std
xor
push
imul
lcall
scas
nop
sbb
xchg
insl
es
cmpl
xorl
lcall
and
and
sbb
movsl
out
jmp
mov
and
sbb
xchg
inc
aaa
icebp
or
rcl
ffreep
pushf
or
dec
in
cld
jb
xchg
cmpsl
loop
or
or
dec
dec
or
lds
out
push
fnop
push
cmpsl
sub
xchg
add
xchg
adc
push
sub
sub
cmp
pop
push
inc
mov
mov
mov
jl
cld
outsl
mov
cmp
push
pop
ds
sbb
push
mov
fistpl
xchg
ret
inc
mov
loope
clc
pop
iret
rclb
push
or
or
xchg
sbb
test
jecxz
inc
or
mov
mov
in
jb
xchg
std
mov
add
mov
filds
loope
int
cwtl
div
or
xchg
insb
int
dec
mov
lods
mov
inc
mov
scas
lods
and
icebp
add
adc
push
jb
stos
pop
cmpsl
outsl
aaa
or
movsb
dec
mov
or
mov
fistpll
pusha
fisubrl
xchg
sbb
movsl
dec
ret
mov
popa
xchg
jnp
fstl
dec
mov
es
frstor
push
xchg
xchg
scas
arpl
aam
add
push
or
xor
fnstenv
int
pop
mov
push
mov
sbb
sub
cmp
push
das
cmp
add
cmp
sub
aaa
daa
mov
ljmp
mov
ja
fs
test
scas
cmp
es
inc
je
rolb
jno
xchg
sub
rcll
std
ds
icebp
mov
test
sub
pusha
in
pop
and
imul
mov
pop
push
leave
add
fisttps
pop
jl
lods
push
das
cmpb
ds
and
dec
lcall
je
xchg
outsl
out
dec
iret
push
ret
cmp
push
mov
mov
lock
dec
fildll
insl
inc
ret
and
sbb
dec
test
jae
je
mov
subb
xor
xor
sahf
xchg
mov
push
jb
jb
mov
iret
sbb
jb
pop
cmp
xor
mov
sub
push
push
test
insb
repnz
or
mov
les
into
shlb
xor
add
inc
rcll
cmc
and
sub
out
loop
popa
into
or
cltd
or
inc
pop
sbb
add
inc
lea
push
sub
cmp
call
out
pushf
xchg
lcall
mov
popa
mov
rcr
aam
pop
ret
sub
data16
lds
outsb
pop
das
xchg
cmp
lods
sbb
or
stos
cld
incl
mov
ret
push
lahf
pop
push
adc
add
stos
pop
and
call
cmp
sar
xlat
pop
pop
jl
mov
pop
push
ja,pn
inc
push
je
adc
sahf
add
or
mov
inc
jns
ljmp
in
in
scas
pop
dec
fcompl
lret
mov
jbe
mov
pop
mov
cli
sub
push
ss
bound
loope
and
pop
xor
lods
push
sbbl
sub
or
inc
lods
stc
xchg
das
dec
inc
and
xor
add
sbb
fistpl
xchg
xchg
insl
pop
xor
testl
push
ss
xor
das
xchg
jl
mov
and
stos
or
sub
stc
pusha
jb
mov
add
popa
push
mov
mov
inc
adc
jmp
adc
test
pop
mov
adc
ja
cs
out
insb
sub
mov
lret
mov
sub
mov
out
lods
lods
test
mov
fwait
xor
xchg
addl
add
xor
inc
scas
inc
gs
xchg
cld
lods
and
add
imul
in
mov
outsb
scas
test
xchg
push
or
mov
sbb
and
out
les
mov
aas
and
xor
dec
push
stos
jne
cmpsl
lods
loopne
lds
je
push
sbb
jns
sbbl
pop
pop
cli
inc
xchg
xchg
xlat
stc
shlb
jmp
aad
mov
jno
adc
fwait
bswap
lea
aad
add
repz
lret
sbb
mov
imul
shlb
xor
andl
sahf
mov
outsl
push
jecxz
jmp
les
xchg
adc
into
fisubl
lods
stc
ds
jnp
jne
dec
loope
popa
xlat
xchg
ss
icebp
je
sub
das
pop
stos
iret
shl
mov
sub
insl
and
cmp
fistps
insl
je
jp
pop
ffreep
or
mov
pop
xchg
lahf
mov
push
mov
pop
fidivl
test
ljmp
sbb
mov
adc
jg
xchg
mov
negl
push
fs
cwtl
inc
mov
fildll
adc
add
xor
fmull
int3
xor
dec
mov
imul
fnstenv
cmp
shll
add
jno
sub
hlt
xor
and
dec
sub
fsubs
repz
xor
sahf
push
mov
mov
pop
push
xchg
sbb
mov
pop
jge
adc
clc
movsb
mov
mov
mov
fwait
jnp
fistpll
lea
rcr
fisttpl
pop
testb
jae
jle
and
mov
fcomps
mov
jbe
add
mov
adc
xor
jg
mov
inc
pop
stos
les
ret
or
xchg
enter
pop
pop
jae
mov
jmp
fildl
cltd
pop
sarl
sbb
das
and
pop
je
dec
jns
mov
pop
popa
jnp
les
jb
xchg
jo
or
les
push
insl
lret
loope
or
mov
arpl
dec
cwtl
clc
insl
lods
xchg
pop
addr16
or
xchg
leave
out
bound
cmovge
mov
adc
cld
adc
sbb
loop
in
cmp
ds
test
sub
fwait
inc
lock
dec
xor
lcall
ja
data16
lods
mov
xchg
add
push
jecxz
es
sub
pop
push
fcomps
jp
movsl
in
dec
cmp
rcrb
mov
in
scas
sbb
cli
push
mov
push
ja
data16
dec
inc
out
inc
xlat
sub
cmc
dec
mov
nop
cmp
inc
test
and
stos
pop
inc
aad
jns
outsb
inc
inc
into
xor
mov
xchg
push
push
xchg
mov
jp
and
scas
or
sub
jp
outsb
in
popa
lods
mov
adc
or
adc
scas
sub
cwtl
daa
outsl
pop
movsb
pusha
sahf
sbb
mov
repnz
in
jne
stc
add
push
int3
xor
in
push
popa
or
jecxz
stc
shlb
sbb
inc
inc
sub
cmpsl
cs
std
ljmp
jnp
ret
mov
mov
sahf
push
jmp
xchg
pop
sahf
faddl
aam
sub
rol
loop
adc
xchg
sbb
repz
add
cmp
inc
test
xchg
xor
aam
add
lods
jno
push
addl
out
xlat
fmuls
cmc
mov
add
xchg
iretw
scas
in
lock
cmc
shll
lret
les
or
jmp
out
jg
cld
push
push
cmpsb
popa
jae
fucom
or
push
ret
jnp
fs
inc
cmp
jns
pusha
icebp
roll
cmpsl
nop
movsl
cmp
mov
dec
int3
push
jg
not
cwtl
cmpsb
and
test
adc
or
call
sahf
gs
lret
mov
call
jae
aaa
pop
mov
testb
adc
shll
leave
and
xchg
aaa
inc
in
push
sub
pop
filds
sahf
sbb
jbe
mov
ret
dec
xor
push
add
push
xlat
dec
cli
cld
test
mov
xchg
adc
adc
dec
sub
inc
jo
push
mov
xchg
fs
pop
sub
add
cmp
std
mov
hlt
sub
rorb
clc
push
or
xchg
daa
mov
xchg
daa
inc
mov
push
cmpsb
aam
xor
adc
sbb
fs
jno
pusha
fcoms
rcll
or
and
outsb
cltd
sbb
sub
outsl
data16
lcall
sub
inc
xor
jae
fs
subl
pushf
xchg
loopne
lahf
out
iret
push
adc
les
mov
pop
test
unpckhps
xlat
subl
jnp
test
loope
in
jg
lock
pop
push
cmc
and
insb
jmp
push
jno
pop
inc
lret
out
dec
cmc
in
add
inc
imul
jb
push
gs
pop
push
dec
jo
mov
sub
xlat
mov
imul
push
add
std
popf
adc
std
add
xor
cmpxchg
jbe
mov
ficompl
jge
sahf
cli
pop
repz
enter
mov
or
dec
mov
push
jg
ljmp
ret
xor
out
xor
and
lret
pop
add
lods
int3
sbb
push
hlt
jecxz
test
add
mov
mov
enter
and
jne
push
mov
pop
dec
aad
int3
dec
stos
idiv
sbb
and
jae
jb
xor
addr16
and
inc
add
push
push
and
push
sahf
xchg
mov
or
lods
je
and
bound
in
rcl
or
movsb
ss
movsl
subb
xchg
rolb
pop
in
popf
adc
push
push
dec
and
es
inc
mov
lcall
sub
or
jae
adc
mov
aam
mov
aam
jne
inc
pop
cmp
mov
stos
or
lods
adcl
and
les
add
mov
int
rorl
int3
sbb
int
jno
or
lahf
add
fs
in
xor
inc
imul
stc
push
movsb
in
popf
iret
outsb
mov
repz
add
mov
icebp
add
mov
inc
sbb
push
daa
dec
cld
stos
adc
imul
and
lret
outsb
cmp
es
mov
and
insb
mov
cmpsl
mov
fsubrp
insb
push
sub
push
pop
xchg
ret
ss
loop
pushf
push
or
mov
and
mov
gs
sub
cld
ficoms
jb
add
in
cwtl
and
daa
clc
inc
aaa
call
adc
lods
xchg
cwtl
dec
inc
jae
pop
mov
imul
fdivrs
int3
ret
mov
adc
adc
mov
andb
aas
adc
pop
pop
xor
mov
std
les
sub
cmp
popf
jecxz
push
in
frstor
mov
xchg
xor
inc
inc
dec
sub
sbb
es
push
sbb
loope
push
push
xchg
inc
push
pop
cmc
sbb
mov
cmpsl
jg
xchg
xchg
clts
movsb
movsl
lret
dec
in
xchg
pop
mov
xor
push
push
adcl
mov
fsubp
fimuls
out
je
dec
cmp
fdiv
mov
adc
adc
int3
dec
call
lods
mov
insb
mov
sub
mov
in
mov
lds
dec
scas
pushf
movsb
mov
js
arpl
fucom
test
dec
pop
subb
add
mov
inc
and
iret
test
mov
pop
adc
xchg
sbbl
cwtl
aas
out
aam
cmp
lods
ret
mov
sbb
repz
mov
imul
mov
aaa
add
and
and
inc
dec
stos
gs
adc
jne
lods
test
sub
and
push
add
xlat
cwtl
dec
in
push
lock
out
inc
jg
stc
push
push
sarb
xchg
and
mov
mov
pop
pop
push
xchg
pop
and
fs
cltd
outsl
iret
test
jnp
rcrl
push
shrb
inc
jmp
and
loop
lods
mov
inc
aaa
jecxz
inc
arpl
lods
xor
mov
sbb
pushf
adc
dec
mov
rorb
dec
inc
xor
sbb
xor
in
movb
das
jne
mull
sbb
pop
fcompl
jbe
nop
xchg
dec
pop
sub
cli
push
lret
xor
ret
and
cmp
xor
jecxz
push
mov
lret
xor
add
and
out
dec
and
push
call
pop
bound
movsb
mov
test
jg
mov
jge
fnstcw
movsb
ljmp
loope
push
repnz
ret
dec
and
jo
xchg
stos
repz
inc
ret
loopne
aad
xor
andl
sar
lds
jbe
fcmovb
xchg
iret
loope
das
out
sbb
xchg
mov
in
scas
loopne
mov
loopne
cmp
mov
loope
dec
aam
addb
jae
out
stos
gs
dec
sub
aam
roll
out
adc
sub
or
lea
jns
pop
sbb
inc
push
aas
cmpsb
pop
push
sbbl
fistpll
ret
and
adc
mov
mov
xlat
inc
ret
and
cmp
push
call
jne
das
sbb
and
in
jp
rorl
es
bound
jbe
je
test
pushf
pop
push
xchg
push
mov
and
divl
leave
pop
sbb
jbe
sub
test
jg
xor
cmp
dec
adc
jg
shlb
sub
jb
inc
jno
insl
sbb
add
and
or
cmp
mov
xlat
test
xchg
pop
inc
or
dec
test
sub
mov
fdivrp
or
sbb
or
jb
sub
cmp
mov
aas
in
loope
dec
lea
icebp
cwtl
mov
sub
test
ret
xchg
dec
sbb
outsl
iret
sbb
mov
cmp
adc
mov
lea
xchg
xlat
ljmp
in
ret
mov
pop
ret
out
or
push
push
andb
mov
xor
add
in
mov
mov
jmp
out
jae
mov
mov
inc
andl
cmp
fwait
call
and
outsb
lods
imul
and
pop
loop
cli
jns
mov
pushf
je
xor
mov
push
pop
mov
cmp
push
add
ret
adc
inc
jecxz
lret
les
add
rorb
stos
stos
inc
add
mov
and
pop
cs
jbe
jg
imul
fs
int
insb
aaa
xor
cmp
and
ret
in
jns
mov
movsl
cmpsb
mov
insb
clc
out
xor
and
fldcw
popl
mov
loope
add
iret
push
mov
cli
addr16
pushf
stos
lock
cld
popf
push
js
sub
cltd
push
inc
stos
repz
in
out
shrl
push
daa
xchg
cmpsl
xor
loope
pop
insb
rcrl
xchg
xchg
mov
jge
sub
fstl
inc
or
ds
ss
cmp
pop
mov
rcl
je
adc
mov
jp
ret
pushf
inc
iret
sub
jo
imul
mov
test
jge
pop
push
jmp
nop
pushf
xchg
arpl
cmpsb
arpl
xchg
inc
in
test
aam
mov
push
mov
add
add
lock
sub
xchg
mov
fucom
xchg
sbb
iret
stc
cli
mov
or
jmp
mov
mov
xor
jnp
movsl
loop
cmp
aad
mov
ret
ljmp
xchg
push
lahf
in
repnz
orb
arpl
cmpsb
mov
rorl
test
sub
mov
lds
push
clc
aad
xor
push
repnz
jno
jo
xor
aam
and
jp
in
insl
int3
mov
mov
push
test
sub
sar
std
fidivrs
aad
lret
jne
push
ljmp
jb
add
mov
loopne
mov
out
fcompl
inc
sbb
xor
jmp
mov
or
in
test
or
lea
sahf
fwait
xlat
lret
test
mov
pop
es
loopne
icebp
dec
fisubl
bound
push
mov
mov
fsts
popf
cld
data16
inc
fst
and
jp
aad
sbb
dec
sbb
repz
dec
arpl
imul
cmp
xchg
hlt
in
jb
scas
sbbb
dec
mov
mov
clc
loope
test
shrb
sbb
mov
movsl
imul
jno
mov
cmp
inc
movsl
xchg
loopne
icebp
pop
inc
xor
inc
cmc
add
mov
sbb
insb
xor
mov
xlat
mov
iret
pop
adc
inc
add
je
test
sarl
loopne
inc
scas
cmp
cs
jns
jecxz
jne
jle
fidivl
cmp
jecxz
loope
mov
inc
js
cmp
arpl
or
ja
pop
flds
pop
jno
int
int
sub
out
insl
fnstcw
in
mov
icebp
or
and
addr16
mov
rolb
aas
rorb
or
sub
jp
ret
leave
inc
fsubrl
ss
scas
sub
iret
in
pop
dec
lods
pushf
inc
and
sub
push
jmp
in
add
xlat
push
jbe
movsl
sbb
fisttpl
lods
cmpsl
mov
inc
subb
cmp
sbbl
std
mov
sbb
sti
hlt
pop
cli
out
push
aad
mov
adc
and
ljmp
mov
call
negl
sub
orb
mov
push
sub
aas
push
mov
push
icebp
add
jns
out
bound
std
inc
imul
test
sub
add
movsl
sub
loope
in
int
sub
add
cld
rep
iret
inc
jg
dec
das
cld
ds
push
out
inc
imul
test
adc
aaa
repnz
or
mov
xchg
cmc
mov
test
sbbl
cmp
enter
mov
xchg
jp
fwait
add
lods
push
call
popf
fmuls
icebp
inc
push
js
aam
ja
in
les
jb
es
push
shrl
dec
inc
add
hlt
mov
fwait
mov
xchg
popf
jno
outsl
hlt
cmc
push
je
adc
fisubrs
adc
pusha
aaa
jl,pt
test
outsl
add
add
aas
rsqrtps
sub
cmpsl
adc
lcall
out
fidivs
add
or
add
gs
jg
dec
xchg
cmpsl
mov
add
popa
mov
icebp
sub
insb
dec
ljmp
fimull
rclb
cltd
ja
adc
or
rcl
loopne
ja
loope
mov
movsb
mov
pop
hlt
test
out
cmp
xchg
pop
addb
mov
jg
dec
mov
hlt
mov
ret
in
jge
mov
mov
xor
inc
not
jle
pop
stos
repnz
bound
movsl
pop
ret
inc
push
iret
mov
sahf
jge
push
or
and
aas
pop
mov
mov
sahf
push
inc
and
xchg
fsubl
jne
xchg
iret
divb
pop
in
mov
stos
dec
cmp
rcrl
sub
adc
lods
push
mov
and
lock
sbb
xchg
into
pusha
scas
xor
or
data16
xor
and
mov
jno
inc
gs
mov
aam
and
call
aaa
enter
int3
push
mov
cwtl
sti
mov
xor
and
mov
outsb
lock
loop
int3
cmp
inc
add
cld
adc
scas
movsl
pop
mov
fistps
idiv
or
mov
fstp
dec
push
cmpsb
mov
and
std
and
lret
xchg
dec
pop
inc
decb
and
jb
xchg
xlat
es
xor
and
push
aaa
ss
pop
sbb
xor
push
inc
push
mov
jl
jmp
cmp
xor
and
mov
idivb
mov
ficomps
je
mov
bound
int3
clc
pop
push
faddl
fs
cmpsb
xlat
sbb
pop
mov
and
mov
outsl
xchg
lock
cmp
lock
popl
insb
fucom
lea
cmp
in
cmp
mov
mov
cmp
mov
push
sub
psubsb
add
pop
sub
push
xorl
sub
sub
hlt
cmp
pop
jge
mov
aas
sbb
sahf
cmp
push
loope
aad
push
in
cld
leave
ret
xchg
dec
add
push
push
cli
pop
ret
pop
shl
push
cmp
and
lahf
mov
cmp
jne
or
sub
mov
scas
sub
sub
jbe
jle
mov
das
pop
stc
out
je
or
cld
adc
xor
or
push
push
loopne
test
xchg
pushf
mov
add
andb
jbe
jns
adc
enter
ljmp
in
xlat
xchg
adc
mov
xor
call
jle
xor
cs
lock
xchg
cwtl
mov
mov
fbstp
cmp
add
or
aas
ljmp
sub
jnp
out
jne
mov
xchg
inc
jle
mov
push
mov
adc
sub
pop
cmpsb
jae
movsb
jne
data16
fs
and
das
sub
mov
pop
das
sbb
inc
sti
xorl
sbb
xlat
pop
fmul
inc
inc
cmpsl
push
outsb
pop
into
sbb
xchg
mov
imulb
pop
sub
jae
scas
xchg
les
loop
inc
inc
rorl
pop
and
or
fists
repnz
icebp
dec
shrl
xchg
add
aam
jb
sahf
push
out
push
insl
cmp
xchg
jne
sbb
mov
xor
jns
outsb
mov
mov
outsb
jge
push
push
clc
pop
mulb
sbb
fs
cmp
pop
insl
stc
or
pop
call
shll
and
movsb
xlat
jmp
xchg
fdivs
xchg
lret
loopne
sub
xchg
cmp
pop
mov
stos
pop
cmp
mov
add
iret
inc
mov
dec
xchg
xchg
sbb
clc
insl
mov
mov
lock
lds
jl
clc
push
std
shl
out
pop
dec
and
iret
mov
sbb
push
mov
dec
cmp
xchg
xlat
in
inc
adc
jmp
add
outsl
insb
jne
sbb
add
add
int3
pop
and
les
int3
sti
rcrb
jl
movsb
mov
sub
pop
xorl
imul
cmp
loop
push
fs
jns
sub
int
and
xor
cmpsl
cmp
pop
jb
dec
dec
call
sti
movl
lret
xchg
test
or
sahf
mov
adc
mov
rorl
fwait
pop
loope
insb
shll
loopne
push
aam
jge
pop
aas
stc
jle
fcmove
mull
mov
fists
xor
mov
cwtl
inc
cmp
sub
insl
scas
and
pop
sbb
mov
fists
jb
fsubs
rcrl
int
pop
or
sub
xchg
dec
cmp
data16
fadd
inc
stos
jl
scas
dec
imul
adc
ficomps
push
in
enter
lock
lahf
and
test
mov
ljmp
pop
cld
lret
arpl
arpl
sbb
insl
pushf
faddl
lea
out
js
and
cmp
data16
out
push
xchg
and
or
xor
push
and
out
inc
add
xchg
data16
stos
add
xchg
test
testl
xchg
fdiv
or
imul
pop
loopne
jle
es
js
cmpsl
xor
nop
int
sarl
jae
adc
sbb
arpl
push
hlt
in
andb
inc
add
mov
scas
xor
pop
fwait
or
cmp
je
jl
mov
xchg
mov
pop
mov
imul
adcl
inc
adc
add
xchg
xchg
test
inc
repnz
sub
xor
pop
mov
gs
inc
mov
hlt
je,pt
repz
es
mov
mov
push
or
mov
xchg
stos
lahf
dec
in
sahf
sub
push
add
in
rorb
ret
orl
pushf
cltd
pop
cmp
out
pop
cmp
fadd
aaa
daa
cmc
jle
add
outsl
mov
out
sahf
int
cmp
cmpsb
xchg
loopne
xlat
lret
adc
mov
mov
movsb
or
call
jle
in
pop
cltd
mov
bound
pushf
add
or
in
mov
push
sub
jo
pop
icebp
xchg
inc
dec
add
std
in
push
cwtl
mull
xchg
scas
fistpll
cmp
and
mov
imul
jecxz
sub
xor
loope,pn
fdivl
add
arpl
mov
cli
imul
pop
inc
rorl
pop
mov
call
pop
adc
add
jge
cs
push
mov
push
sub
subl
mov
les
lock
mov
movsb
mov
jmp
jp
pop
xor
cmpb
push
or
pop
add
icebp
or
hlt
and
mov
sub
ret
mov
pop
sub
fs
stos
push
lea
lcall
call
mov
lcall
aaa
je
ficoms
cmp
in
push
adc
fidivrl
jbe
sbb
pusha
and
jp
jne
data16
xchg
pop
xchg
xor
inc
adc
mov
jg
mov
cs
loop
outsb
cmp
and
dec
cmp
das
out
nop
lock
std
adc
in
inc
xor
cmpsl
dec
push
stos
inc
dec
add
repnz
fs
mov
sub
loope
rolb
repnz
dec
sbb
pusha
repz
mov
xor
out
rcl
cmp
imul
cltd
fmuls
push
push
mov
loopne
and
cmp
or
xchg
mov
jnp
mov
rorb
rcr
adc
dec
movsb
cs
sub
lret
push
test
popf
inc
cmp
xchg
adc
pushf
mov
lods
push
xchg
mov
jns
shrb
push
mov
hlt
fs
pop
test
mov
leave
adc
out
mov
jbe
sbb
and
das
inc
sti
push
aas
pop
add
jb
mov
mov
js
orb
xchg
addr16
push
ret
insl
jae
xlat
mov
cli
lods
dec
je
mov
mov
xchg
repz
das
out
sti
pop
sub
xchg
mov
sub
or
lock
outsb
and
loop
pusha
mov
and
js
jmp
push
adc
mov
sbb
xor
sbb
push
mov
jmp
xor
jp
adc
insb
sub
or
fildl
push
lret
add
outsb
jmp
adc
sub
cmp
sbb
xchg
loope
shlb
xor
cmc
push
inc
xlat
xchg
sub
inc
lods
mov
movsb
jl
cmp
sahf
andl
fstpt
rcll
arpl
rcr
or
cmp
xchg
inc
fcoms
pusha
push
into
adc
fsts
gs
jmp
lcall
pop
insl
cmp
mov
movsl
in
jp
mov
pushf
ljmp
out
call
pop
notb
jle
push
das
adc
daa
scas
jl
push
xor
lock
data16
rcrl
push
jmp
and
movb
xchg
roll
xchg
push
xchg
push
mov
andl
jecxz
jg
xor
adc
fwait
cmp
test
insl
push
jle
pop
pop
sub
push
mov
mov
jnp
in
xchg
cltd
add
lret
sbb
adc
cmp
jl
jae
std
lods
jae
push
sbb
or
cltd
imul
inc
mov
xchg
iret
xchg
cmp
jecxz
cmp
lock
push
mov
js
dec
mov
sarb
leave
jecxz
xchg
lret
repnz
xchg
mov
repnz
dec
mov
lcall
rorl
sub
lock
cmp
incl
sahf
push
push
or
sub
dec
add
imul
mov
mov
xorb
sub
sbb
push
dec
fisttpl
xor
pop
and
mov
jno
das
das
mov
in
lds
dec
jmp
and
addb
sub
jmp
dec
or
and
dec
insb
testl
jge
arpl
adc
in
mov
daa
nop
sub
jmp
push
and
jns
shrl
mov
daa
fisubl
jle
and
adc
adc
icebp
bound
jle
xchg
jp
pop
sahf
cmp
mov
xor
mov
fildll
add
push
inc
and
nop
dec
xchg
jne
test
scas
mov
jo
xor
clc
adc
mov
in
adc
xchg
das
mov
jle
mov
dec
cli
enter
or
mov
ljmp
or
pop
pop
mov
fadds
je
cmc
mov
sbb
ja
inc
insl
mov
jns
dec
fcmove
int3
ret
lds
adcb
and
adc
push
jge
loop
jle
push
pop
cmp
ja
mov
mov
es
out
mov
cmp
mov
dec
mov
dec
push
push
repz
pcmpeqd
leave
out
xor
dec
push
fsubs
lahf
out
adc
fdivr
push
fisttps
in
add
or
jp
dec
dec
ss
and
decb
mov
sub
aad
aam
xor
mov
stos
sbb
lcall
popf
cli
sarl
mov
mov
mov
jg
out
imul
lret
lea
lcall
xlat
cltd
sbb
jp
das
cmp
pop
cmp
cltd
and
inc
mov
lock
lods
jno
cwtl
aaa
outsb
inc
jp
fidivrs
movsl
lcall
pop
add
repnz
jno
cmp
sbb
mov
test
jbe
sahf
fs
pop
popf
scas
dec
push
mov
push
call
mov
jl
add
ljmp
aam
push
cmp
or
pop
jbe
mov
out
hlt
repnz
int3
xor
loope
dec
loopne
stc
iret
cmp
mov
clc
push
xor
popa
fwait
inc
lods
arpl
push
pushf
jb
inc
adc
hlt
mov
mov
xor
insb
cmp
in
icebp
mov
sub
lea
lock
push
cmc
jbe
cmc
out
mov
sbb
shrb
push
insl
sarb
xchg
pusha
adc
xor
in
inc
and
addr16
iret
mov
pop
push
outsb
cmp
sub
add
mov
imul
and
mov
popaw
and
mov
pop
mov
xor
xchg
addr16
xchg
push
iret
test
xchg
enter
fnstsw
std
lea
push
pop
clc
pop
jg
xor
push
fimull
dec
rorb
mov
dec
mov
leave
out
lea
in
cltd
push
adc
aad
out
imul
adc
fs
or
jbe
in
xchg
push
mov
sub
test
stc
stos
adc
sbb
cmp
insl
and
mov
jp
add
inc
test
bound
pop
lret
pop
rcll
cmp
bound
mov
inc
ds
mov
inc
std
fisttps
or
sbb
bound
mov
fadd
int
test
jp
xchg
outsl
ret
mov
test
mov
mov
mov
inc
fbld
ret
gs
fst
loopne
inc
inc
pop
sub
push
xor
into
push
cltd
cmp
or
gs
leave
dec
minps
jne
or
jle
adc
fimuls
ljmp
pusha
ret
rol
scas
sub
xorb
out
ss
insl
fs
mov
pop
popa
mov
inc
out
add
aam
popf
in
mov
push
jns
cmpsl
ficoms
xchg
outsb
outsl
jmp
push
jns
jbe
movsb
cmp
push
jno
and
ret
pop
in
cmpsl
cmpsl
in
jnp
pop
int3
sahf
rcl
add
iret
sarb
mov
leave
push
mov
test
lock
mov
xchg
testb
mov
mov
cltd
pop
dec
jae
xchg
mov
jno
stc
jns
mov
pop
lret
sbb
xchg
rcll
incb
dec
in
and
xor
dec
xor
mov
movzwl
sub
cmpsb
ja
or
dec
jns
jo
sbb
pop
xchg
mov
mov
dec
mov
push
push
push
dec
aam
shll
addr16
popf
lods
push
push
fdivs
push
int
xlat
test
in
imul
xchg
or
mov
fcomps
push
lods
xchg
ja
push
je
mov
shll
sbb
ficoml
xor
test
imul
orl
push
scas
loope
and
jge
lret
adc
imul
js
xchg
sub
or
sub
leave
mov
mov
in
movsl
mov
scas
lds
xchg
out
mov
sbb
fs
pop
clc
dec
jae
jmp
dec
jb
test
int
popf
sbb
daa
inc
fsubl
js
bound
scas
mov
mov
imul
and
inc
insl
mov
sahf
mov
jnp
adcb
push
incl
mov
jmp
test
ljmp
pop
mov
pop
sbb
lret
in
cmp
insb
mov
mov
mov
or
cmp
test
fdivrs
stc
jg
in
aas
in
xor
pushf
imul
and
push
movsb
popa
cmp
xor
cmp
mov
jge
out
xchg
in
ret
fst
jo
mov
mov
mov
in
aas
mov
sbb
or
scas
push
lds
icebp
cmp
sub
lahf
repnz
xlat
jmp
mov
mov
xchg
add
push
xchg
add
jne
addb
fbld
xchg
std
push
xchg
mov
add
jnp
rorl
rolb
sub
shl
int3
leave
dec
inc
loop
pop
fnsave
xchg
lahf
test
adc
jle
stos
je
and
adc
insb
dec
aas
push
or
test
sub
rcll
adcl
enter
popf
and
ljmp
ror
rorb
jge
sbb
aas
push
out
sub
xchg
xor
xchg
rcr
xor
lods
cmp
lret
jecxz
int
adc
rcrl
jo
mov
lcall
jp
stc
push
mov
in
inc
mov
aaa
std
push
cmp
push
daa
jo
pop
push
adc
cmp
xorb
dec
sub
cli
dec
push
xor
negl
in
mov
outsb
gs
lret
jmp
xlat
xor
cmp
inc
adc
cmp
vmovlhps
int
mov
cmc
dec
inc
in
jle
inc
mov
nop
sub
xchg
xchg
xchg
sti
push
sbb
ja
jae
cmp
fs
mov
fsubs
or
xor
pop
add
pop
jmp
lcall
ja
push
pop
aaa
repz
sbb
xlat
push
mov
sahf
ljmp
jbe
loope
cmp
push
lret
inc
sbb
in
mov
mov
adc
stc
jecxz
ja
pop
stos
add
mov
xor
dec
jmp
sahf
in
leave
dec
sbb
mov
cs
mov
mov
pop
lcall
mov
mov
add
clc
xchg
rclb
pop
pop
das
mov
popa
test
rclb
shll
in
in
sbb
ret
and
xor
cli
enter
in
shlb
lods
inc
jae
adc
mov
pop
lods
inc
cmpsb
sbb
stos
jae
dec
push
lahf
loop
clc
je
and
push
pop
sub
pop
dec
je
shll
pushf
sbb
mov
adc
or
test
cmp
imul
ret
add
ret
xchg
pop
icebp
std
test
lds
insb
and
push
pop
mov
aaa
clc
xor
adc
and
pushf
adc
xchg
adc
scas
insl
push
and
les
jecxz
push
and
clc
adc
dec
sub
jecxz
lods
fbld
adc
xor
jp
rcrl
push
push
lea
scas
cmc
and
out
dec
sahf
mov
loopne
hlt
addl
mov
xor
dec
ret
inc
sahf
fidivrs
out
iret
xchg
loope
sarb
pop
push
mov
sub
mov
lahf
xor
cmp
fadds
in
stos
pop
sbb
jg
pop
mov
inc
mov
xor
fcomp
add
filds
lods
sbb
enter
push
xchg
mov
push
mov
pop
imul
je
jno
sbb
call
std
sbb
cltd
push
int
inc
lcall
repnz
inc
insl
in
cwtl
int3
cli
mov
ljmp
sub
rclb
dec
imul
pop
clc
or
insb
fcoms
fwait
insb
je
inc
mov
sbb
inc
cmp
xchg
jmp
or
gs
adc
out
aam
imul
out
out
idiv
fwait
mov
fcmove
or
mov
popa
ret
cli
xchg
movsb
inc
repnz
pop
jb
adc
orl
insl
push
out
pop
mov
and
jns
add
cmp
iret
notl
xor
es
enter
stos
das
inc
jnp
cwtl
test
inc
pop
xchg
mov
sub
test
lock
repnz
incb
jo
cmp
je
dec
dec
push
addr16
cmpl
repz
sbb
jns
dec
jnp
jno
or
es
add
fwait
test
sub
mov
mov
insb
fcomps
imul
mov
jnp
das
jne
adc
sub
test
and
addr16
or
jo
mov
movsb
sbb
adc
lea
sub
xchg
adc
push
jb
dec
pop
jp
or
insb
call
and
jge
xchg
push
lret
jmp
or
mov
dec
cwtl
inc
movsb
cltd
scas
dec
sbb
js
sarb
inc
das
sti
pusha
dec
icebp
lods
inc
jmp
or
adc
insl
mov
outsb
loop
lods
repnz
sub
pop
mov
in
adc
xchg
ret
cli
cmp
cltd
out
add
add
inc
clc
mull
leave
add
xchg
repnz
out
dec
ficoms
jb
mov
loope
xor
in
push
ja
jb
rolb
jg
cltd
rcrl
pop
add
fstpt
push
mov
cld
mov
jae
xchg
jp
repz
scas
test
xor
pop
dec
add
adc
pop
daa
push
xchg
push
mov
shl
js
les
xor
add
sub
xlat
mov
rclb
mov
pusha
push
aad
pop
inc
dec
mov
mov
pushf
xchg
xorl
movsb
test
mov
int3
xchg
loop
into
movsl
xchg
cmp
jbe
outsl
in
loope
scas
out
inc
js
in
lcall
sbb
hlt
jnp
imulb
mov
stos
sbb
or
adc
mov
lods
movsl
cltd
mov
xchg
add
cmp
dec
pop
xchg
in
xchg
loop
arpl
fadd
popf
lret
xor
mov
xchg
lahf
scas
fs
daa
xor
or
hlt
dec
or
add
jge
mov
inc
mov
jns
sbb
imul
inc
fdivs
inc
cmp
jae
mov
lods
jno
rcl
icebp
test
jl
clc
addr16
add
inc
std
jl
xor
pop
out
pop
data16
jae
arpl
xor
call
addr16
into
mov
mov
aaa
mov
test
push
xchg
int3
cltd
lods
iret
sbb
or
je
xchg
push
jp
test
add
adc
popf
add
pop
pop
jns
xor
shlb
imul
fldt
push
pop
stos
scas
les
lret
hlt
hlt
mov
sbb
xor
mov
xchg
fsubl
lea
adc
cmp
scas
xor
inc
in
enter
loopne
dec
jecxz
push
mov
mov
jmp
fwait
xlat
push
fwait
mov
sti
mov
ja
mov
pusha
adc
shl
cmp
push
or
movsl
add
jbe
ffreep
sub
into
sub
mov
jne
sbb
insb
cmc
leave
cmc
icebp
adc
fwait
xor
jge
inc
and
mov
sub
fldt
inc
ja
push
push
pushf
mov
adc
xchg
add
imul
pop
ja
cwtl
mov
xchg
sahf
push
pop
or
mov
popa
fisubrl
push
les
repz
pusha
push
pop
mov
dec
and
jo
and
sub
out
xor
mov
push
and
mov
mov
das
fstpt
shl
test
or
xchg
xchg
jae
push
and
stc
fs
adc
lock
loopne
mov
push
mov
push
test
rcl
bound
int
jno
mov
shl
xlat
lock
std
jae
pop
arpl
addb
inc
pushf
int3
push
push
les
mov
adc
adc
scas
pop
cmp
jb
mov
mov
cmp
in
jl
xor
jmp
movsb
aam
hlt
pop
hlt
xchg
push
popa
add
lock
jb
loopne
adc
cmp
push
mov
pop
jno
and
test
xchg
repnz
dec
and
and
dec
lods
das
pop
dec
fcmovne
lods
mov
fidivl
jo
popf
sub
pop
inc
shll
loop
popf
fwait
xchg
fisubrl
ss
iret
out
cmp
iret
addl
xchg
add
cmpsb
imul
pop
sub
xor
mov
push
out
mov
sub
jg
xchg
popf
xchg
jne
push
mov
rolb
mov
cmp
fldl
push
sar
inc
push
and
push
addr16
push
inc
inc
push
and
pusha
pop
xchg
lods
jecxz
lods
xchg
xchg
sahf
daa
mov
and
shrl
inc
out
push
push
xchg
insb
std
test
push
sub
or
mov
stc
nop
roll
jl
xchg
je
pop
cmpsl
pop
fdivl
out
cwtl
push
and
pop
mov
jbe
cmp
xor
hlt
aad
dec
dec
mov
or
adc
jne
shll
shl
pop
subb
sbb
xor
mov
fnstenv
jbe
sahf
loop
jno
inc
jae
mov
addr16
cmpsb
jno
ret
icebp
jno
mov
std
xor
and
add
mov
jbe
loopne
push
adc
xchg
sti
xlat
lret
aaa
jo
jne
outsl
or
xor
aad
fidivs
adc
mov
movsl
scas
cmp
iret
or
popf
xor
sub
jbe
movsb
cmpb
fsubl
or
aaa
xor
and
data16
push
outsl
stc
mov
aam
jnp
clc
in
xchg
mov
jns
xor
push
cs
in
out
dec
jns
dec
xor
sub
sbb
jmpw
mov
lret
add
or
mov
or
mov
sub
imul
insb
adc
inc
js
mov
or
fidivl
aad
fmull
stos
jns
dec
adc
ja
daa
scas
pop
cmp
enter
adc
mov
popa
aaa
mov
mov
dec
dec
arpl
lret
dec
pop
adcl
adc
in
fs
sub
divl
scas
aam
addr16
xchg
mov
mov
pop
mulb
leave
sarb
testb
sbb
ja
xchg
lcall
ja
mov
pop
jmp
iret
popf
stos
movsb
scas
push
push
repnz
mov
adc
es
push
pop
dec
pushf
mov
xchg
jecxz
int3
test
in
pop
mov
mov
fildl
data16
jmp
fs
out
dec
call
push
test
ljmp
jmp
jge
xor
arpl
pusha
cltd
xor
icebp
ljmp
stc
mov
xchg
dec
mov
cmp
push
ret
lret
sbb
je
jmp
inc
push
dec
lds
push
pop
sti
mov
inc
out
loop
mov
loop
push
cs
outsl
mov
les
shrb
inc
inc
je
pop
pop
hlt
cmp
pop
cmc
fstps
jnp
out
push
sub
cmp
daa
push
sub
add
sub
xchg
xor
xor
es
mov
pushf
push
jo
push
inc
adc
out
daa
inc
sub
dec
and
outsl
sub
lahf
xchg
adc
xchg
mov
jg
mov
mov
sbb
mov
je
repz
pop
aam
movsl
jmp
dec
inc
dec
lret
mov
and
push
lcall
adc
dec
inc
fdivrl
mov
mov
mov
movsb
lret
adc
repnz
inc
pusha
or
cmp
sbb
sub
js
xchg
dec
adc
add
es
jg
xor
jnp
nop
mov
stos
paddusb
adc
nop
mov
xchg
inc
pop
xchg
pop
rep
xor
aad
out
fisttpll
xchg
test
js
adc
out
xchg
das
scas
adc
lret
fistpl
add
fdivrl
mov
std
push
lock
pop
imul
push
dec
sub
push
andb
cmp
rcl
adc
movsb
roll
xor
ljmp
rclb
sub
push
fwait
ljmp
lcall
mov
out
push
push
mov
push
testb
sahf
arpl
cmp
lcall
test
xchg
mov
jo
ljmp
and
out
inc
adc
scas
cmp
sbb
cli
clc
xchg
and
xor
dec
dec
pop
dec
sti
mov
dec
push
cmp
lea
cld
ret
xchg
in
xchg
jnp
pop
xchg
pop
pmulhw
cmpsl
mov
loope
sbb
push
stos
pop
aaa
cmp
adc
repnz
mov
sub
push
xchg
cmp
stos
dec
mov
push
add
loope
push
sub
add
cmpsb
js,pt
push
hlt
sbb
add
fbstp
mov
mov
aam
push
pop
imul
test
pushf
cmpsl
in
cli
pop
pop
faddp
iret
sahf
xchg
rcrl
into
int
imul
into
adc
jo
push
sub
mov
fs
test
movb
pop
and
insl
mov
jne
out
rolb
jns
cwtl
inc
sub
sbbb
movsl
cmp
cmp
mov
leave
punpckhbw
adc
dec
push
ds
cli
idivl
push
fidivrs
popf
pop
cmpsl
mov
dec
push
inc
es
scas
push
dec
imul
jp
and
inc
ret
sbb
outsb
xchg
flds
inc
dec
inc
pop
xlat
pop
mov
mov
in
fidivs
jmp
aam
in
or
dec
adc
ffree
test
je
cmp
inc
subl
mov
aas
and
xlat
cmp
xor
es
and
test
mov
sti
cltd
in
and
fldenv
xor
es
mov
std
inc
ret
mov
pop
jge
cs
jno
cmp
dec
leave
fldenv
addr16
imul
decl
inc
in
add
inc
mov
int3
sbb
stos
pop
push
add
sub
out
int3
loopne
add
adc
out
fldenv
xchg
dec
xor
ljmp
fimull
clc
outsl
mov
mull
sbb
mov
pop
sbb
mov
out
sub
push
movsb
dec
pop
push
inc
dec
inc
mov
into
cmp
loopne
ret
cmc
mulb
jo
int3
cmp
add
add
int
and
lcall
insl
stos
enter
cltd
adc
jnp
out
ja
mov
push
dec
stos
mov
sahf
inc
mov
mov
or
popa
lods
jns
push
dec
or
dec
or
xor
je
inc
ja
imul
mov
or
add
repz
stos
stc
fdiv
dec
clc
stos
enter
movsb
and
inc
adc
dec
addb
jae
dec
inc
mov
data16
loope
mov
and
and
add
xchg
jmp
int3
mov
or
test
orb
cmp
and
lahf
fistps
cli
in
push
je
std
add
in
pop
lods
enter
in
dec
xchg
jno
cmpsl
mov
ucomiss
xchg
jno
pop
cmpsl
xchg
testl
das
iret
in
jae
inc
push
stos
test
jge
dec
sbb
and
jbe
inc
fwait
cmp
scas
aas
int3
add
xlat
test
pop
hlt
dec
out
mov
pop
xchg
shrb
or
mov
push
cmpsb
inc
fcompl
arpl
cltd
jns
popf
mov
aam
or
mov
fadds
data16
adc
movsl
ja
lahf
jo
pop
lock
and
outsb
int3
jmp
mov
mov
mov
mov
stc
imul
outsb
adc
in
loope
data16
divb
cmp
push
sub
pop
out
bound
es
xor
push
fsubrl
xchg
stc
sti
scas
jp
cmpsl
xchg
inc
inc
lods
sbb
adc
xchg
push
fs
lcall
xor
loope
xchg
jge
lahf
pop
dec
sub
push
push
out
sub
stos
sub
mov
movsb
es
push
and
shlb
and
pop
cmp
loope
mov
sub
call
lret
push
dec
push
aaa
addr16
adc
fs
aad
scas
xchg
aam
mov
loop
ljmp
cltd
insl
addr16
jmp
push
lds
jnp
jle
jp
hlt
addb
insb
fwait
fs
mov
mov
dec
and
sbb
and
insb
outsb
dec
push
int3
jl
jecxz
lock
jle
xchg
pop
in
aam
or
aad
sbb
test
jae
std
in
into
icebp
lea
jo
pop
and
mov
xor
ret
sbb
das
inc
inc
adc
mov
daa
cmp
jb
mov
addl
and
in
push
test
sbb
pusha
jae
and
xchg
pop
lahf
icebp
xlat
pop
or
sub
push
nop
xlat
push
call
adc
xor
mov
pop
bound
or
cwtl
mov
lds
scas
add
fiadds
add
mov
mov
push
fsubrl
and
std
jno
loop
mov
loope
aad
arpl
sbb
cmp
mov
xchg
add
xchg
pop
xor
cmp
aad
pushf
push
popa
xchg
fstpt
in
mov
test
jmp
js
int
cmp
fnstcw
movb
xchg
jle
clc
icebp
inc
mov
add
inc
xchg
adc
lds
inc
jne
sub
lock
imul
sub
call
inc
add
sub
mov
out
dec
jmp
ds
pop
les
mov
ror
ret
nop
mov
aam
xchg
test
addr16
lods
mov
mov
ss
xchg
or
test
std
call
movsb
push
mov
loopne
imul
push
push
mov
dec
mov
popf
popf
sbb
sub
xchg
mov
fistl
sub
jecxz
js
sub
cmp
aaa
sti
mov
cmc
in
cmp
lock
adc
inc
jp
bnd
rsm
jmp
pusha
cmp
daa
lock
mov
hlt
and
cmpsb
lret
rolb
xor
mov
xor
cltd
mov
ljmp
adc
xor
xchg
jg
adc
sbb
shll
pop
gs
fcompl
imul
mov
dec
jp
stos
daa
pop
ds
dec
dec
mov
and
mov
les
cmpsb
jo
gs
lret
sub
xor
sbb
inc
xorl
adc
dec
pop
stos
cli
fdivrp
testb
das
mov
push
sub
leave
lods
les
in
je
adc
push
and
gs
je
sbb
inc
sarl
sub
cwtl
aad
add
xor
leave
inc
sub
std
xchg
sbb
in
sbb
inc
mov
sarl
dec
xor
sub
je
cmpsb
cmp
test
pavgb
and
gs
fdivs
push
in
test
xchg
sbb
jle
adc
in
xchg
js
in
and
push
jb
xor
xchg
scas
mov
outsb
mov
rolb
xor
repnz
xchg
ss
dec
sbb
data16
sub
outsl
scas
jnp
icebp
mov
mov
lea
xor
sti
push
mov
mov
dec
pushf
pop
xchg
and
out
test
mov
out
mov
jae
mov
jnp
testl
test
mov
xchg
call
imul
mov
ret
jno
inc
push
pop
push
jp
out
jo
xchg
push
ror
pop
testb
dec
push
dec
ror
repz
add
adc
cld
imul
sub
adc
push
test
adc
mov
lock
add
fcoms
insl
sub
test
das
rolb
cwtl
in
or
mov
dec
sbb
xorb
cmpsb
sub
mov
mov
adc
cmpl
push
jnp
outsb
shrb
inc
push
test
mov
lds
sub
lcall
hlt
mov
cld
sbb
pop
popf
xchg
jl
ja
minps
movsl
add
jmp
lds
pop
sahf
adc
cli
iret
sarl
jnp
pop
mov
and
bound
cli
dec
out
mov
cli
dec
jg
push
add
mov
bound
sub
pushf
imul
insb
mov
repz
in
adc
sbb
pop
cmp
addb
dec
sub
inc
inc
jne
sar
mov
fdiv
sbb
push
decl
sbb
icebp
xor
dec
mov
out
cld
mov
icebp
and
dec
sub
push
ljmp
mov
mov
and
in
imul
lcall
iret
or
repz
in
outsb
das
jp
je
icebp
and
pop
push
ktestw
mov
push
add
rcll
and
lea
dec
and
mov
push
and
xlat
jle
test
mov
xchg
aad
sub
cwtl
dec
test
mov
and
and
mov
rep
sub
cmpsb
mov
call
aad
jl
xor
mov
loop
sbb
loopne
icebp
and
sbb
push
stc
data16
in
out
hlt
pop
clc
mov
cmpl
movsb
test
inc
stc
lds
shlb
jb
push
mov
jge
imul
loope
idivl
and
xchg
xchg
mov
xchg
fldenv
mov
sbb
lahf
pop
lea
push
mov
sti
jp
mov
shr
fsts
and
mov
xchg
fwait
xor
and
lds
and
add
cmc
and
dec
cmp
nop
xchg
xor
out
int3
mov
sbb
push
inc
outsb
cld
pop
jmp
rorb
jno
and
mov
outsl
pop
mov
nop
adc
push
inc
push
enter
push
iret
fcomps
jo
pushf
cmp
cmp
in
aaa
or
and
in
ss
jp
lret
stc
adc
pushf
add
cmpsl
out
jns
push
adc
je
xor
dec
pop
loopne
jl
in
jns
dec
push
loop
js
lods
pop
in
outsl
jecxz
pop
shll
cmpsl
adc
adc
xchg
lret
imulb
subb
imul
sub
push
aad
cld
push
pop
jne
int3
lock
sub
out
mov
call
lea
mov
lods
cwtl
or
gs
xor
aas
sub
movsl
xor
outsb
jp
jl
ds
dec
popa
aam
pusha
in
sub
rcl
outsb
gs
out
int
or
jg
fisubrs
jge
daa
xor
arpl
popa
add
nop
dec
leave
sti
cmp
pushl
cmp
sbb
mov
mov
cmp
mov
push
mov
pslld
call
repnz
xchg
gs
lea
test
pop
pushf
insb
pmulhuw
scas
push
cmp
jmp
leave
sub
cmpsb
pop
sbb
inc
sub
decl
sub
rcrl
pop
xor
shll
hlt
jbe
idivl
push
rcrb
xchg
sbbl
cmpsl
lret
dec
inc
insb
and
pop
std
cmp
mov
bound
jp
push
push
lcall
fsubrp
sub
add
out
push
lods
jo
aad
jmp
mov
xor
lcall
jnp
mov
rclb
mov
int3
push
xchg
jecxz
mov
jne
adc
xlat
adc
jle
adc
push
cmp
cmc
cwtl
cmovl
pop
mov
in
adc
mov
and
stos
mov
sbb
aam
scas
jbe
mov
icebp
dec
pop
push
lea
div
test
push
mov
imul
ss
out
test
or
fcmovb
adc
icebp
inc
out
sbb
mov
mov
xor
inc
xor
xchg
jns
and
hlt
test
dec
out
in
pop
dec
xchg
sub
sti
dec
mov
test
jb
aas
lret
pop
xchg
lcall
les
arpl
les
or
test
outsl
lret
adc
mov
fldt
sbb
inc
repz
xchg
int3
cmp
jmp
sarb
mov
js
xchg
dec
sbb
lcall
pop
int3
xchg
loopne
jge
outsl
or
test
sub
xor
aaa
outsl
imul
sbb
xor
mov
frstor
add
mov
imul
fistpll
call
push
xchg
sbb
inc
xchg
aaa
dec
dec
lock
pop
notl
mov
lret
jg
cmp
pop
pop
add
sbb
repnz
fwait
cmpsb
in
sbb
pop
iret
out
sub
iret
inc
xchg
scas
push
ds
lods
push
out
in
inc
jge
inc
lahf
psubsw
inc
cmpsl
fcoml
mov
jne
pushl
sahf
jbe
xor
or
cs
push
aaa
jne
and
mov
out
mov
mov
jnp
mov
aas
and
psrad
pop
je
addr16
mov
dec
aam
cli
mov
ficoml
aaa
pushf
test
test
add
mov
jmp
or
mov
into
jbe
or
sub
popf
dec
jle
inc
into
cmp
iret
cmpsl
decb
popf
dec
cmpsl
cltd
scas
pop
jle
loope
lea
cmpb
pop
or
imul
mov
xchg
fdivrp
mov
fincstp
push
paddb
push
mov
fstps
pop
shll
jbe
out
sub
inc
mov
in
mov
pop
dec
cmp
cmpsb
movsl
ficompl
cmpsb
or
jb
inc
push
add
movsl
jne
inc
add
negb
jg
inc
pushf
push
loop
push
scas
mov
aas
iret
adc
mov
jle
cmp
imul
sahf
jg
aam
sbb
incb
loop
aas
shlb
mov
ret
subb
or
push
movsb
addr16
adc
in
imul
fisttps
divl
push
fcmovnbe
adc
push
add
and
dec
cmpsl
cwtl
fisubs
jl
sub
shrl
sarb
sub
ss
jp
std
dec
cmp
cld
repz
cld
pushl
fwait
lcall
adc
pop
lds
jo
and
sahf
stos
fidivrs
fnstcw
rolb
xchg
lahf
xchg
push
flds
js
iret
sti
mov
dec
pop
inc
mov
adc
in
cli
jp
push
pop
movsb
notb
and
add
push
sarl
sub
add
and
mov
jno
cmp
scas
jmp
xor
and
and
outsl
repnz
icebp
sub
dec
mov
mov
push
add
mov
sub
mov
in
in
in
jmp
mov
je
pop
push
adc
scas
cmp
add
clc
repz
xor
add
imul
pop
pop
mov
test
cld
jg
shlb
xchg
std
mov
out
cmp
shrb
aam
sub
jo
cmp
loop
jle
cmc
jne
lods
sub
push
dec
mov
pop
insl
cmp
dec
or
clc
sbb
push
cmpsl
adc
adc
mov
sbb
pusha
adc
pop
sub
stos
movsl
inc
pop
rol
sbb
outsb
out
lods
rep
jno
ja
mov
hlt
lods
mov
cmpb
xchg
icebp
rorl
inc
cltd
fwait
in
testb
orb
mov
iret
mov
inc
jb
cmpb
dec
jo
jg
notl
cmp
fldl
mov
gs
in
mov
in
fiadds
pop
inc
mov
nop
cmpsl
pop
mov
fcmovnbe
inc
add
outsl
cld
js
int3
adc
pusha
ds
shrl
mov
sbb
cmp
sbb
in
sbb
jp
fdivrl
iret
xchg
or
xchg
push
divl
enter
dec
subl
int3
mov
jae
dec
mov
mov
bound
mov
adc
aaa
xchg
sti
jb,pt
fstpt
mov
xor
sbb
call
mov
xchg
mov
inc
out
arpl
aad
sbb
sbb
jo
cs
fstps
mov
in
jbe
movsb
arpl
pusha
mov
add
add
sbb
and
and
stc
push
or
sbb
mov
pusha
lds
ret
inc
and
dec
and
jg
push
clc
movsb
fdivrl
mov
xor
adc
xor
frstor
pop
sub
cld
or
scas
dec
insl
pop
insb
sub
aas
push
add
test
mov
sbb
add
mov
inc
pop
mov
fidivs
in
sub
push
sub
xor
xchg
add
mov
pop
stos
sub
adc
leave
mov
jge
testl
ss
rclb
xchg
outsl
cli
xchg
pminsw
jl
cmpsl
call
leave
dec
add
pop
movsl
scas
mov
cltd
fcompl
mov
mov
mov
mov
hlt
in
ss
stos
movsb
loopne
clc
ficoml
add
xchg
repz
or
mov
sbb
push
stos
push
xor
xchg
push
mov
push
or
mov
je
adc
pop
push
pop
sti
push
cmc
adcb
adc
movsb
fisubrl
and
jge
into
cs
sbb
addr16
out
xor
jnp
push
shrb
roll
ljmp
add
sub
movhlps
pop
lea
daa
shr
call
out
cmp
xchg
xchg
push
or
psllw
mov
push
pop
lret
or
jb
jecxz
jbe
int3
cld
mov
shrb
or
imul
add
shr
jae
int3
les
add
fdivr
dec
ss
cs
and
sub
cmp
out
jno
push
clc
push
inc
stos
out
cmpsl
sarl
adc
lret
cmp
mov
aad
outsb
or
adc
ffree
pop
sub
jp
into
pushfw
pop
adc
aaa
jbe
jl
jns
repz
mov
jmp
mov
fisttpll
and
inc
rcrl
orl
jecxz
dec
repz
fsts
push
test
pop
pop
lock
push
stos
inc
shll
fiadds
lock
int3
rolb
cmp
push
outsl
out
sub
mov
inc
pop
add
xor
jecxz
push
mov
stos
adc
rclb
mov
int3
cs
notb
sarl
repnz
cmp
lahf
in
sbbb
ja
mov
test
insl
inc
insl
adc
in
mov
mov
fldcw
jnp
mov
sub
push
dec
in
add
leave
into
hlt
scas
adc
adc
pop
les
mov
sti
rcr
lock
lds
xchg
ss
add
std
jo
cmpsb
aas
das
jmp
cmp
or
rorl
adc
popa
test
repz
mov
in
dec
negb
xchg
cmp
rol
popf
mov
mov
xor
dec
lea
xor
mov
inc
xlat
in
push
jne
xchg
or
andb
jle
das
lods
ds
pop
mov
jmp
xor
xor
push
cmpsb
mov
in
push
sub
xor
xchg
dec
xor
ss
mov
test
in
sbb
xor
and
xchg
jg
ret
cmpsl
mov
loopne
xchg
iret
cmp
pop
xor
das
cltd
ds
pushf
movsb
mov
push
ret
inc
jl
ffreep
cmp
popa
push
cmovo
fldl
jecxz
add
mov
test
mov
xchg
ds
int3
loope
int
xchg
dec
jo
xchg
in
pop
jbe
imul
mov
cs
dec
and
pop
jbe
xchg
lahf
lock
mov
ljmp
push
outsb
flds
inc
push
jo
or
push
add
xor
gs
push
mov
jns
lock
sahf
fsubrp
cmpsb
ret
mov
imul
popf
fsubrp
xor
xchg
imul
mov
jge
pop
les
into
xchg
ficomps
pop
loop
xlat
out
daa
mov
lock
add
push
mov
jne
add
dec
popa
std
xchg
mov
pop
lahf
xchg
loopne
rcrl
adc
lock
mov
daa
mov
xchg
int3
lea
pop
push
das
xchg
pop
mov
leave
scas
sub
sbb
pusha
scas
insb
mov
insb
shll
enter
inc
or
xor
arpl
inc
scas
and
les
test
pop
sbb
movsl
sub
push
push
mov
ljmp
insl
mov
sbb
int3
pop
fnstcw
mov
sub
adc
js,pn
cwtl
mov
outsb
sbb
cmc
mov
aad
cmp
mov
or
lahf
leave
jmp
loopne
pop
adc
push
aas
femms
scas
clc
and
mov
inc
xchg
or
sbb
je
jle
test
mov
adc
adc
popf
or
dec
f2xm1
mov
mov
pop
push
pop
andb
test
mov
out
push
mov
ljmp
outsl
jecxz
adcl
mov
push
les
cmp
and
in
cmp
sub
jns
mov
jno
dec
xchg
pusha
sbb
pop
and
push
fldl
sbb
in
jnp
bound
xor
shll
or
push
jle
lds
xor
bnd
push
int
sbb
lret
xchg
lret
sub
fwait
scas
popa
jnp
push
test
movsl
inc
stc
dec
data16
ja
js
sub
testl
push
loope
cmp
sbb
cmpsb
popa
dec
mov
rolb
int3
das
mov
or
stc
stos
adc
out
scas
or
sbb
xor
mov
int
stos
filds
lret
sub
es
jb
std
outsl
mov
loop
js
aam
aaa
push
sarb
add
popf
aam
sub
test
sub
jbe
cwtl
imul
jmp
pop
mov
clc
fcompl
popa
es
inc
adc
fisubl
inc
insb
sbb
ja
xor
imulb
push
xor
aas
inc
cmp
xor
ja
xchg
pop
dec
and
inc
mov
xor
xor
inc
repnz
icebp
imul
pop
out
cmp
lahf
pop
mov
fildll
pop
mov
popl
sbb
mov
mov
inc
shr
inc
fimuls
xor
mov
cmp
and
daa
push
jge
or
notl
dec
fistl
or
fwait
xchg
or
xchg
fs
add
in
add
add
not
lret
mov
pminub
jle
push
cld
xor
jbe
pop
sub
push
sbb
test
rclb
push
push
lock
scas
loope
and
push
incl
mov
in
or
xor
iret
cld
cmp
out
out
aas
push
push
adc
pop
fdivs
cmc
inc
lahf
adc
cltd
lds
push
mov
out
pop
scas
xor
insl
sbb
rolb
notb
ret
pop
jo
mov
fs
outsb
mov
add
sbb
cltd
inc
push
or
cs
insl
lock
shlb
icebp
mov
ss
pop
shrl
movsb
push
lret
mov
mov
mov
cli
stc
sbb
test
aad
sub
out
xchg
cld
fcmovb
sub
movsl
movsb
mov
mov
flds
ret
shlb
loope
lds
cmpb
mov
shrb
dec
push
aas
push
pop
scas
adc
sbb
sub
mov
dec
in
lods
nop
dec
loope
mov
sub
jp
xchg
mov
test
addr16
rclb
in
inc
add
stos
popf
lret
fisttpll
hlt
loopne
popa
jg
gs
dec
ds
repz
sub
and
lods
repnz
mov
lcall
sub
call
mov
push
sti
inc
sar
out
std
aas
xchg
popa
call
xor
push
mov
add
and
pop
es
fs
fidivrl
cmp
cld
jp
fsubl
xchg
xchg
pop
sbb
fisttpll
in
fs
btsl
movsb
mov
mov
dec
arpl
mov
das
fdivrs
sbbb
jnp
mov
sti
cmp
sub
cltd
inc
fdivrl
inc
movsl
add
decl
inc
mov
in
xchg
arpl
dec
push
pusha
jmp
jmp
xchg
incl
stc
push
lods
sub
fsub
imul
std
cmp
xor
popa
jmp
in
jno
mov
mov
lea
fwait
cmpsb
mov
cmp
pop
adc
fwait
cmp
push
jns
mov
testb
jne
pop
rorb
insb
fcompl
jbe
rcr
orb
lret
xor
inc
cmpb
or
mov
sahf
out
mov
int
inc
mov
add
aas
xchg
cltd
push
push
dec
cs
pop
mov
dec
bound
sub
out
dec
icebp
mov
mov
andb
xor
fwait
je
les
clc
mov
inc
sub
lret
and
mov
or
test
jo
pop
cmp
lahf
jne
sbb
fcoms
jns
push
std
push
fs
push
int3
mov
iret
std
add
xchg
cltd
mov
flds
dec
outsb
cli
inc
rcll
out
push
das
lret
mov
cs
pop
aad
push
push
jo
xchg
pop
js
aam
add
nop
iret
sub
cli
xchg
dec
and
cmp
cmp
pushf
das
fildll
iret
orb
test
lahf
test
jl
aad
sahf
jecxz
adc
mov
das
sub
mov
sub
inc
mov
std
rolb
jbe
adc
daa
mov
xor
repnz
dec
inc
cli
es
or
outsb
popf
jb
pop
or
xchg
or
jno
idivl
mov
inc
and
adc
fimuls
int3
pop
lcall
pop
addr16
inc
cmp
pop
bound
push
mov
cmpsb
or
inc
das
imul
push
rorb
push
lock
push
and
dec
test
xor
mov
push
dec
push
pop
ficompl
mov
mov
enter
popa
sub
nop
cs
mov
inc
add
mov
fdivrp
fdivp
cmc
sbb
adc
sub
repz
jno
adc
in
arpl
sub
lret
aad
sub
pushf
call
jnp
rclb
pop
imul
sbb
jae
xchg
xchg
jp
sbb
xchg
or
pusha
adc
and
push
xchg
inc
outsb
xchg
pop
cmpsl
mov
lea
xor
push
jp
sub
xor
ss
jo
cmp
mov
inc
lahf
xchg
mov
lahf
jl
inc
ds
shll
sti
mov
mov
mov
adc
sahf
dec
rcll
lret
push
mov
jnp
fnsave
mov
xor
mov
adc
lahf
add
mov
xor
pop
fsubrl
mov
dec
icebp
adc
cmp
jns
add
test
outsb
lds
or
lock
sub
jns
xchg
repz
pop
ja
pop
xchg
mov
das
mov
xlat
mov
lods
leave
in
jbe
xchg
movsl
jge
insl
or
fucomp
jl
fldt
adc
dec
adc
mov
cmp
push
inc
out
js
ficompl
adc
bound
pushf
scas
lods
push
push
push
nop
pop
es
leave
js
movsl
lods
das
scas
loope
adc
push
mov
stc
cs
adc
push
fmull
mov
push
dec
in
imul
in
pusha
jno
in
xchg
shlb
mov
rcl
sbb
leave
std
add
cmpsl
std
sbb
mov
cmp
adc
jno
fsubrs
scas
addr16
mov
in
xlat
sbb
repnz
xor
dec
xor
daa
out
jnp
or
es
mov
add
test
and
call
pop
add
adc
mov
sti
push
arpl
popa
out
nop
inc
push
popa
test
sub
or
mov
and
lods
ss
add
jbe
and
out
sub
pop
push
int3
sbb
jo
mov
jo
dec
fisttps
jb
movsl
fnstsw
nop
addr16
mov
xchg
jae
js
notb
mov
dec
add
outsb
push
imul
imul
leave
jb
je
xor
cld
push
pop
cmp
xor
xchg
or
shrl
or
lret
sbb
ja
minps
loope
movsb
test
cmp
enter
scas
pop
test
fadds
add
test
or
mov
add
inc
popfw
cld
ljmp
mov
pop
lods
lcall
ds
pop
mov
cmpl
fdivrs
jecxz,pt
jne
mov
es
dec
inc
or
dec
lds
push
sub
add
dec
sub
push
and
fwait
xchg
enter
fdivl
fcmovnbe
call
jmp
dec
push
ljmp
addr16
sub
mov
xorb
arpl
push
jge
adc
pop
mov
add
or
arpl
in
mov
test
aad
jb
or
and
cmp
jae
cmp
cmp
dec
sahf
add
vpcmpgtw
scas
pop
pop
and
mov
jmp
sahf
mov
pusha
cld
inc
mov
imul
ret
and
sahf
and
cmpsl
push
adc
push
or
je
dec
fildll
push
mov
jb
ja
mov
icebp
jg
mov
dec
push
ljmp
and
xor
imul
popf
sbb
dec
push
les
add
dec
stos
clc
lock
xor
jg
fcoml
shrl
xchg
dec
xchg
xchg
bound
cwtl
bswap
movsl
sbb
add
xor
aas
pop
data16
out
mov
xchg
fcomip
and
fisubl
clc
das
aam
sti
aam
jg
add
ret
test
aas
mov
xchg
aam
stc
shrb
mov
outsl
cmpsl
or
jmp
xor
xor
pop
dec
fwait
pop
xchg
xor
ficoms
test
dec
cmc
jno
adc
in
insl
add
push
leave
inc
pop
sbb
inc
mov
adc
pop
movsl
into
loope
sbb
es
xchg
jns
in
call
sbb
dec
sub
cmp
subl
sarl
jmp
sti
popl
push
int
sub
sub
mov
jl
or
bswap
scas
into
insl
xor
clc
adc
mov
sub
leave
test
fstpl
scas
add
inc
adc
xor
cmp
inc
mov
pop
jnp
inc
xor
push
shl
std
cld
fbld
js
rclb
lods
fnstsw
pop
dec
sbb
jbe
push
sub
fistpl
int3
push
xchg
hlt
xor
daa
aas
cmp
push
xor
mov
in
xchg
out
add
cmp
push
adc
int
add
add
insl
dec
stos
sbb
in
orb
jp
mov
fimull
adc
test
ss
call
shll
jecxz
push
sbb
fcoms
les
sbb
loop
filds
cltd
mov
and
push
cmp
inc
mov
add
mov
sbb
addl
cmp
dec
in
lahf
and
int3
in
jge
cmp
mov
out
fidivrs
roll
decl
outsl
inc
xchg
mov
pop
dec
int3
pop
and
mov
std
jmp
mov
dec
or
and
cmc
sub
repz
add
test
stos
cmp
xor
cmpsb
cmc
icebp
inc
ss
shrl
mov
pushf
mov
dec
cmp
daa
mov
push
dec
iret
cmp
mov
clc
into
mov
jo
dec
les
jle
ficoms
ret
xchg
dec
lret
les
pop
push
sbb
dec
cmp
or
push
js
sbb
cmc
lods
bound
hlt
loope
cwtl
fistps
jge
hlt
xor
loop
cmc
sub
and
scas
icebp
pop
adc
inc
sub
out
inc
cld
push
adc
rcr
sub
enter
xchg
das
pop
add
stos
sub
mov
scas
mov
xchg
sub
decl
inc
out
and
add
lds
sbb
mov
sbb
cmp
loop
test
imul
out
aad
xchg
xchg
or
pushf
clc
dec
and
cwtl
lods
cmp
call
enter
jecxz
std
movsb
cli
pusha
xor
lahf
ss
movsb
mov
das
mov
outsl
fidivl
mov
bound
pop
fbstp
pop
rorl
iret
mov
xchg
andl
mov
sbb
enter
sbb
out
jle
icebp
imul
in
or
sbb
cmp
das
pop
aas
jg
mov
and
popa
aam
push
mov
addr16
in
mov
jo
xchg
idivb
add
dec
shlb
inc
and
dec
ss
inc
test
inc
sub
mov
cmp
sbb
or
mov
notb
dec
jns
and
movsl
mov
sub
aam
in
push
test
mov
outsl
or
mov
in
lahf
adc
stos
orl
lds
gs
shrb
cmovno
push
or
xlat
dec
or
push
pop
jb
dec
loop
fs
add
mov
out
lock
and
adc
arpl
xchg
lret
sub
scas
test
add
das
mov
popa
or
repz
shl
outsl
add
mov
shrl
push
rolb
dec
or
sbbb
and
shl
bound
and
shlw
je
sbb
call
jle
aad
sbb
outsl
rcll
insb
popf
lahf
push
loopne
lods
ljmp
or
scas
movl
adc
iret
cmpsl
push
push
xor
dec
lock
adc
inc
jmp
xchg
sub
mov
xor
int
lock
and
mov
xchg
loop
push
xchg
mov
clc
sbb
inc
pop
jne
aam
pop
or
out
push
loopne
and
and
xchg
push
xchg
or
jmp
js
mov
loope
fdivrl
xor
xchg
xchg
ljmp
push
adc
int3
jg
mov
lds
rolb
cs
xlat
mov
push
cmp
cwtl
sahf
insl
fsubl
jb
push
insl
push
lahf
out
leave
or
in
or
jmp
cmp
int
out
sbb
mov
popa
add
mov
call
pusha
inc
xchg
rorb
push
jo
cltd
push
js
pop
test
dec
js
fcoml
imul
dec
mov
pusha
addr16
mov
lock
cli
push
fs
lods
cltd
jecxz
or
mov
and
sahf
xchg
movsb
jnp
aas
or
fldl2e
les
lock
rcrl
insb
cmpsb
mov
xchg
push
leave
fcomip
in
lret
adc
js
into
shr
js
fldl
sub
xchg
fdivp
push
pop
repnz
cmp
out
add
sub
push
mov
sub
gs
cli
pop
mov
dec
dec
jmp
notb
mov
dec
cmp
stc
mov
sub
or
push
sbb
inc
mov
push
cld
xor
bound
test
aam
cwtl
dec
cmp
in
push
add
outsl
xor
mov
ret
adc
sbb
cli
cmpsl
pop
jg
insb
popl
sbb
add
push
scas
test
and
out
fxch
sub
add
in
mov
and
cmp
fsts
lret
mov
das
inc
inc
xchg
stc
in
imul
pop
aas
pop
test
or
and
jp
xchg
and
mov
jb
ss
adc
cmp
xchg
dec
mov
ljmp
aad
inc
fwait
xor
and
xchg
scas
xchg
shll
popa
data16
jnp
fadd
jmp
jle
in
ja
push
shlb
adc
mov
scas
call
cmc
mov
insb
addr16
aam
add
enter
mov
cmp
bound
mov
pop
das
xchg
out
in
mov
ja
mov
mov
test
dec
pop
push
add
lahf
cmp
xchg
data16
mov
fs
add
addr16
lahf
test
test
leave
pusha
jecxz
jns
clc
mov
outsl
fidivrs
rcll
sbb
dec
test
pusha
mov
jl
lds
jg
xchg
lahf
pop
fdivs
mov
and
pop
xchg
jo
idivb
ret
ljmp
outsb
cs
pusha
fisttps
scas
jb
aas
push
push
fimull
stos
repnz
xor
sub
pop
mov
cwtl
dec
mov
ja
ss
cmp
shl
lock
add
xor
fidivrs
mov
movsb
mov
lods
out
pminsw
xor
xchg
xor
es
jnp
mov
and
in
inc
stc
jne
lock
sub
push
sbb
xchg
add
sub
cltd
mov
add
das
les
loopne
out
cmc
lcall
push
sub
ja
lods
sahf
into
push
in
aad
xchg
testb
ret
or
cltd
scas
mov
mov
pop
andb
dec
aas
mov
nop
xchg
lods
dec
daa
mov
fcmovnb
mov
push
xor
dec
imul
lret
rcl
cmpsb
insl
xor
sbb
shlb
movsl
cmp
mov
sahf
mov
add
cwtl
fisubs
mov
lock
fwait
xor
fldz
insl
mov
mov
scas
jo
dec
std
xor
iret
inc
sbb
sub
jl
mov
pop
sahf
lret
push
dec
or
sti
mov
pop
or
pop
push
fdivp
adc
mov
lock
xchg
add
mov
push
cmp
lret
pop
fsubp
cmp
mov
xchg
adc
inc
jnp
adc
gs
push
lock
jnp
sbbl
stc
loopne
pop
icebp
sub
xor
shl
test
mov
rcll
sbb
inc
lahf
sub
fs
jl
test
xor
fwait
xchg
cmp
push
jle
movsl
mov
sti
sahf
clc
and
data16
xor
dec
sti
add
shll
bound
push
inc
test
stos
sahf
mov
mov
xlat
xchg
jp
daa
testl
and
popf
jge
subb
fldenv
and
rorb
jnp
test
jg
cmp
je
sub
xchg
mov
xor
leave
pop
sbb
loop
arpl
inc
jle
adc
ss
mov
mov
cmp
jne
dec
ja
push
fwait
arpl
jge
xor
xor
push
pop
pop
dec
cwtl
cli
fwait
stos
inc
lahf
mov
mov
inc
mov
inc
sub
or
xlat
lcall
add
jmp
aam
pushf
adc
pcmpeqd
cwtl
dec
cs
cwtl
clc
int
mov
test
xchg
push
out
mov
dec
mov
lret
pushf
add
adc
or
dec
pop
movsb
push
sarl
dec
mov
aas
out
repz
outsb
jne
jmp
adc
shlb
push
imul
jne
dec
dec
jecxz
insl
cld
mul
cld
xchg
cwtl
sbb
adc
mov
add
andl
lret
dec
inc
xchg
stos
mov
mov
add
stos
lcall
mov
push
cmp
inc
cmpsb
sarb
test
sub
scas
daa
and
sahf
inc
test
mov
sub
push
les
jae
pop
sub
xchg
aas
jle
cwtl
and
rorl
push
jae
fdivrl
pusha
mov
arpl
dec
inc
mov
push
repz
sbb
hlt
in
in
test
cmpsb
fmull
xor
paddsb
mov
xchg
ljmp
scas
jmp
xor
adc
dec
ds
out
adc
ficomps
xor
xor
enter
or
cmp
dec
dec
jecxz
adc
mov
and
jmp
fucom
xchg
push
and
aad
js
sbb
sub
iret
mov
adc
jns
out
jne
scas
scas
lea
xchg
dec
sub
das
and
sub
dec
enter
inc
jno
comiss
ret
push
mov
add
sub
push
or
pop
enter
addr16
jle
cmp
mov
mov
jp
mov
mov
jne
jmp
shrb
mov
pushf
outsb
mov
push
or
push
lret
xchg
movl
andb
mov
pop
and
pushf
mov
mov
out
sbb
fisubrl
cmp
dec
cltd
sbb
movsl
arpl
sti
mov
cmp
adc
stc
mov
xchg
xor
iret
xorl
mov
int3
pop
dec
in
xor
shlb
sbb
das
daa
xor
xchg
lock
dec
je
or
insl
js
add
xadd
pop
icebp
jle
adc
pop
aam
gs
adc
xor
outsb
jge
mov
lahf
adc
fmuls
mov
or
xor
push
outsl
or
mov
xchg
ret
or
stos
call
inc
daa
bswap
ficoml
repnz
mov
jmp
mov
repnz
ds
popf
jb
pop
hlt
pop
fisttps
scas
je
jmp
ds
bound
mov
leave
stos
add
pop
ds
mov
push
xor
or
pop
jbe
push
adc
fcmovbe
outsl
fwait
sbb
push
aam
hlt
dec
mov
sti
push
mov
mov
gs
adc
shll
cmp
arpl
push
adc
imul
mov
inc
push
das
or
add
cmc
or
out
sbb
idivb
decl
jbe
adc
and
pop
mov
push
mov
inc
movsb
sbb
jg
out
mov
xchg
and
rorb
pop
dec
push
mov
insl
repz
add
xchg
fmull
fdivs
hlt
das
sahf
mov
ret
sbb
jp
mov
dec
fdivrl
test
jbe
pop
in
mov
call
jae
dec
sbb
jo
flds
jmp
lock
mov
xchg
jb
hlt
js
adc
jae
lds
aam
mov
or
daa
push
repnz
daa
cltd
sti
cs
pop
das
leave
iret
repnz
push
xor
xchg
mov
cmp
inc
imul
cmpsl
push
pop
std
inc
adc
pusha
mov
faddl
xchg
test
or
lock
push
cld
xor
into
loop
lcall
xor
cmp
push
test
pop
bound
cmp
xchg
stos
push
jge
popf
fcomps
stc
xlat
shlb
imul
dec
mov
iret
data16
out
rcl
insl
rcrl
pop
jne
or
or
mov
into
jns
enter
mov
jne
test
push
dec
out
lock
pop
and
sbb
jnp
fadds
push
jae
dec
test
in
pop
mov
das
xor
popa
jb
pusha
add
sub
addl
xchg
add
pusha
push
xchg
sbb
inc
aaa
loope
shlb
daa
mov
ds
push
add
or
lret
xor
ja
lret
adc
xor
pop
xchg
inc
ljmp
inc
or
cmpsb
jg
add
add
mov
int3
cld
daa
mov
pop
dec
loopne
mov
adc
call
add
sbb
push
testb
daa
sub
xchg
int
cli
jnp
pavgb
mov
je
shrb
call
xchg
dec
push
iret
mov
mov
mov
lahf
mov
rclb
xlat
pop
adc
xchg
arpl
mov
movsl
imul
mov
jo
cmc
dec
sub
roll
adc
imul
push
jl
arpl
jle
div
lret
add
fstp
test
sbb
dec
jmp
add
jg
addr16
int3
insb
mov
dec
push
imul
sbb
orb
call
cltd
rcrl
and
int3
add
sub
push
inc
scas
adc
fidivs
jne
imul
mov
addr16
jnp
mov
or
mov
in
outsl
push
jle
shl
and
flds
test
sti
fistpll
jmp
and
pop
dec
fdivr
dec
cmp
dec
cli
jns
mov
fldcw
sbb
xor
jnp
loope
orl
push
jg
fidivrs
mov
mov
adc
jmp
pop
jo
xchg
insl
call
mov
push
push
jge
mov
and
sti
sbb
shrl
or
mov
mov
in
in
mov
push
mov
and
jge
xor
cmp
inc
rorb
cmp
lret
out
icebp
mov
add
std
scas
dec
cmp
add
ljmp
lret
add
add
xor
sub
cmc
pop
hlt
pushf
add
mov
jmp
daa
sbb
pushf
fstl
pop
jp
je
stos
push
and
out
std
xchg
in
jmp
leave
pop
mov
jge
push
lods
mov
test
add
xchg
push
jb
mov
loopne
mov
lock
dec
bound
cmp
pop
roll
in
mov
push
xor
in
cltd
xor
sub
jmp
push
bound
iret
ljmp
arpl
mov
push
ss
int3
xor
js
push
iret
xor
addb
xchg
xor
dec
out
mov
sbb
xor
push
ljmp
jae
push
jnp
cs
add
push
inc
mov
mov
out
ds
cwtl
fldl
sti
fwait
test
push
xor
test
dec
sub
push
rorb
pop
mov
andb
test
call
ljmp
mov
ret
add
icebp
mov
cwtl
push
xchg
sub
jbe
lahf
add
sub
xor
sbb
and
add
sub
xorl
lock
xchg
xchg
xor
nop
movsb
cmpsl
push
ds
imul
out
je
inc
rcl
and
jnp
into
xchg
fnsave
mov
add
leave
sbb
and
cmpl
pop
dec
adc
and
lea
ljmp
push
dec
or
xchg
cmpsb
add
push
loopne
xchg
imul
adc
in
push
xchg
jmp
push
xor
pop
movsl
add
adc
jg
call
mov
ret
incb
push
dec
test
cwtl
or
in
add
aad
hlt
cmp
mov
out
fcomps
dec
movsb
pop
and
xor
push
aas
fiaddl
xlat
and
cli
enter
pop
fstps
inc
std
imulb
je
test
and
addr16
ja
mov
lcall
xor
lea
mov
xorl
bound
add
ja
call
shll
cmpsl
jge
lret
insl
pop
pop
add
aam
lods
test
mov
lcall
add
sub
inc
sahf
in
lods
or
pop
add
sbb
ret
lret
dec
testl
or
mov
mov
pop
mov
jns,pn
test
fsubs
ret
cmp
xor
xchg
mov
pop
pop
dec
cld
cwtl
mov
insl
push
mov
loope
scas
pop
xor
mov
pushf
outsl
aad
mov
les
jae
test
popa
ljmp
cmpsb
mov
dec
mov
jbe
mov
ret
lock
sbb
xlat
ss
jno
arpl
gs
stos
xchg
lods
pop
pop
mov
xchg
jle
int3
int3
mov
dec
cmc
cmp
clc
push
lret
iret
mov
push
ret
mov
jo
xor
shlb
test
lock
add
gs
out
xchg
sbb
std
pop
test
add
mov
mov
out
add
rclb
xor
sub
sub
add
loop
cld
jbe
jg
sub
sti
ficoms
lahf
into
lret
add
cmp
jl
pop
sub
and
leave
sti
or
sub
mov
mov
lock
testb
xor
mov
pop
lea
test
push
push
jo,pt
mov
jbe
push
ds
stc
or
inc
lea
ja
outsl
xlat
cltd
xor
and
sub
add
push
jmp
xor
xchg
shll
popf
movsl
lcall
idivb
mov
pop
and
push
and
mov
outsb
add
mov
ja
je
sbb
outsb
cmp
nop
pop
in
pop
push
scas
push
add
xor
sbb
lcall
loope
mov
mov
cs
dec
iret
pop
inc
js
cs
or
mov
icebp
dec
add
xchg
push
mov
cld
pop
cmp
das
mov
sub
sbb
push
push
pushf
cld
sub
rcrb
mov
jns
or
das
or
inc
xor
add
mov
mov
int
sub
mov
dec
lret
mov
lret
xchg
test
dec
sbb
add
js
push
pop
push
pop
movsl
rcl
ss
jmp
xchg
nop
jle
clc
mov
test
dec
jle
jne
jns
and
inc
mov
aaa
inc
jne
push
lea
outsb
mov
or
xor
cmp
push
and
mov
int
dec
shl
loopne
je
rorb
repnz
imul
iret
inc
addr16
jb
mov
cmp
cmp
push
dec
mov
xorb
inc
insb
and
cltd
cld
cmp
je
imul
jbe
insl
xor
aam
jo
mov
test
dec
int3
mov
xor
jl
test
fdivr
or
lahf
rcrb
icebp
orb
leave
negl
xor
pusha
dec
stos
je
and
int
imul
mov
jmp
aam
out
in
mov
mov
sub
mov
xchg
jmp
cmp
pop
popa
outsb
mov
shl
dec
mov
and
pushf
int3
enter
push
push
imul
lcall
dec
cmc
sbb
sahf
out
ss
inc
aad
dec
frstor
int3
daa
fwait
ds
sbb
shl
std
push
jnp
dec
rcrl
jmp
jo
negl
out
and
lret
int3
mov
mov
push
and
cmp
push
js
aad
es
add
push
sbb
test
gs
inc
mov
mov
lods
sub
jp
jp
shll
push
adc
lret
xchg
xchg
aaa
push
mov
imul
int3
xor
mov
mov
dec
loop
sbb
xchg
lret
pop
mov
lret
mov
int3
aam
call
test
or
xor
call
loope
psrad
fildll
roll
aam
sti
sarb
xor
inc
cmp
popa
sub
pushf
sbb
icebp
xor
repz
test
sti
xchg
sbb
or
popa
repnz
add
mov
inc
fcmove
sub
ja
mov
cld
js
sbb
lds
shrb
scas
push
cmp
and
loop
push
and
cmp
std
xchg
shrl
fldenv
push
negl
xor
mov
push
sub
fidivrl
add
fstl
dec
js
std
push
test
test
pop
arpl
cmc
cmp
jmp
dec
arpl
or
and
sahf
or
lret
mov
clc
cmp
std
scas
lcall
pop
or
pop
mov
in
xor
outsl
sbb
inc
cmp
push
movsb
mov
out
sahf
idivb
es
cmp
clc
push
mov
dec
add
jbe
cwtl
cmp
adc
mov
sahf
mov
push
add
icebp
out
int
mov
cmp
pop
mov
cmpsl
jno
cli
push
rcr
xor
ja
mov
add
jge
sbb
push
sbb
mov
les
nop
fcoml
sar
test
ljmp
dec
ljmp
mov
pop
movsb
out
pop
xchg
add
test
jecxz
ljmp
pushf
jns
lods
ss
fs
sub
mov
adcl
shrb
out
or
ja
ret
leave
or
xor
sub
cmp
movsl
sbb
sub
xor
and
sub
xchg
outsl
mov
sbb
or
cmovno
pop
bound
push
fsubrs
aas
inc
xor
adc
lahf
lret
or
mov
mov
faddl
out
cmp
inc
test
sub
cs
mov
inc
jo,pt
push
jmp
jns
cli
scas
cli
sti
loop
imul
push
and
shrb
mov
pop
mov
clc
mov
xor
xlat
inc
pop
ficompl
sub
jbe
in
test
notl
cmp
in
jno
cmp
xchg
dec
xchg
xchg
imull
mov
pop
dec
lahf
lods
lds
jle
mov
scas
test
add
sbb
outsb
jne
or
jbe
fcomps
nop
sbb
sub
cmpsb
les
dec
pop
sbb
shll
mov
push
fwait
jmp
xchg
loope
push
test
imulb
inc
mov
push
mov
rorb
mov
jmp
pop
sbb
jl
loope
sbb
nop
mov
hlt
mov
or
test
popf
sarl
test
sbb
push
xor
sbbl
sahf
hlt
jmp
nop
mov
scas
mov
jmp
out
adc
mov
xor
mov
mov
out
data16
iret
push
scas
mov
insl
lret
pandn
rcl
stos
das
cmpsl
pop
aad
pop
and
dec
sub
sub
fiaddl
pop
lret
loopne
jg
inc
jp
testl
testb
mov
stos
std
cwtl
out
sbb
in
int3
int3
pop
xor
call
push
add
mov
push
shll
test
movsb
mov
outsl
pop
pop
and
popf
cmp
dec
jg
sbb
xor
adc
aam
jo
inc
dec
and
inc
pop
pop
pop
mov
nop
and
call
das
xor
in
in
xor
mov
out
inc
dec
lahf
ret
fildl
push
fcmovne
cltd
enter
mov
nop
in
loopne
insb
aam
aad
sti
push
pop
jno
test
sub
inc
lds
stc
jo
jmp
dec
mov
ret
outsb
mov
pop
popf
sbb
xor
addr16
mov
add
xor
and
pop
mov
pop
add
fsubs
call
test
push
loopne
lea
xchg
movsl
repz
pop
push
dec
jge
dec
sahf
mov
push
push
cmp
push
outsl
pop
stc
shll
jmp
lcall
mov
jp
or
sbb
out
jae
inc
into
test
leave
pop
stos
pop
iret
stos
adc
aas
push
mov
mov
aas
in
outsl
ljmp
jno
mov
pop
pop
pop
aas
pop
dec
xor
fbstp
pop
je
in
pushf
data16
push
or
cmp
mov
or
stc
in
setno
cmpl
pop
sub
cli
mov
in
or
push
pop
icebp
decb
cmp
xor
lods
push
xchg
insb
repz
or
mov
sbb
mov
jns
push
push
dec
ficomps
in
mov
sub
mov
inc
push
jo
fidivs
outsb
fbld
jecxz
pop
inc
push
sub
push
push
mov
cltd
bound
mov
mov
lahf
call
movsl
clc
inc
insb
jnp
sarb
jo
es
and
sti
mov
cmp
leave
fs
daa
jg
adc
ds
pop
add
xor
cwtl
pop
lahf
pop
and
sbb
xchg
lahf
mov
adc
inc
clc
xor
jb
movsl
mov
aam
stos
push
mov
loopne
out
mov
stos
push
mov
ja
add
es
in
dec
lods
inc
and
xor
mov
cwtl
and
mov
push
popa
sbb
jle
imul
sub
imul
stc
mov
rcl
jmp
pusha
mov
mov
mov
push
ror
fwait
mov
sub
rol
mov
xchg
lret
pop
imul
insb
shll
xchg
inc
jns
xchg
adc
xor
lock
dec
aad
xor
push
loopne
lock
je
rorb
lds
daa
rcl
shll
int3
jle
les
in
cmpsb
les
push
xor
stos
fnsave
js
jae
mov
ret
divb
jge
hlt
jbe
fcomps
mov
or
in
ret
into
fsubs
rorl
ret
add
sub
ja
loop
jne
int
cwtl
pushf
xchg
test
or
outsb
cmp
insl
insl
mov
sahf
and
cmp
loope
xor
adc
es
mov
jge
or
out
and
call
xor
xchg
out
nop
pop
jae
add
sbb
push
and
insl
es
test
sub
fdivl
mov
aad
pop
sub
adc
sbb
pop
push
mov
push
sti
jae
arpl
mov
out
stc
pmuludq
aam
jmp
pop
inc
std
mov
cmpsb
data16
cwtl
popf
add
sbb
fmuls
push
decl
in
test
sbb
adc
mov
les
ja
clc
mov
push
dec
mov
adc
sub
add
icebp
and
out
mov
addr16
inc
outsl
movsl
and
sti
fisttpl
push
cwtl
jbe
stc
out
mov
xchg
repnz
scas
mov
in
inc
enter
xor
mov
lods
xor
es
jle
int3
cld
dec
mov
dec
aas
sbb
cmc
dec
ds
mov
adc
dec
aam
push
sub
mov
stos
lock
cwtl
adc
call
cltd
call
mov
pusha
mov
inc
in
cmp
pushf
inc
fsubr
ret
push
pop
sub
js
test
je
mov
push
movsb
mov
fwait
sub
lret
push
shr
xor
sti
aaa
xchg
and
and
add
sbb
fisttpl
inc
mov
jno
push
or
xchg
fbstp
fs
and
push
cmp
or
xchg
pop
and
mov
mov
or
lock
mov
fcmove
int
call
xor
fwait
rorb
jno
mov
test
cmp
mov
lock
fwait
xchg
lods
mov
jae
addr16
call
mov
add
out
and
add
jle
sarl
sahf
jge
add
popa
out
add
jnp
push
fidivl
fsubr
mov
jmp
xchg
adc
sub
adc
xor
pop
ret
sbb
stos
pop
jno
shll
mov
hlt
test
xchg
cmp
test
lea
inc
loope
sub
aam
sahf
xor
loop
push
loop
fisubs
jnp
sbb
mov
filds
loope
daa
fiaddl
cwtl
icebp
test
jg
mov
out
or
or
jle
mov
jmp
popf
push
inc
lahf
ja
mov
xor
std
sbb
hlt
aad
fs
js
or
cmp
cld
jl
pop
bnd
sahf
ret
dec
rolb
xchg
je
test
div
inc
hlt
adc
jo
fimuls
add
dec
xchg
es
es
aad
testb
clc
mov
push
inc
lods
cltd
test
xor
or
fstps
dec
mov
ja
cli
cmp
fadds
and
scas
leave
pop
sub
jecxz
push
ret
cmp
notb
jp
sti
aaa
jecxz
outsb
inc
lret
out
jae
aas
aam
and
jmp
dec
sbb
adc
jo
jne
pop
add
lds
pop
jg
or
aaa
ret
and
je
fnstcw
push
pusha
and
gs
and
push
arpl
ds
mov
add
in
xchg
push
and
sbb
xchg
mov
inc
leave
popa
testb
or
jne
test
mov
xor
dec
mov
dec
mov
sbb
inc
scas
test
scas
push
es
lods
cmc
push
xor
in
xor
insl
xor
gs
outsb
fwait
js
iret
mov
rcrb
pop
mov
add
jns
mov
js
xchg
sarb
sub
inc
lcall
and
arpl
imul
and
xor
imulb
jno
inc
rcll
sbb
out
pusha
and
lret
fwait
add
fyl2x
dec
repz
xchg
lods
pop
test
xchg
ficoms
les
clc
xor
ja
das
jbe
xchg
cmpsl
call
stc
pop
xor
imulb
movsb
rol
cli
js
lret
jecxz
movsl
cmpsb
jge
ljmp
and
stc
mov
adc
ss
xchg
jecxz
in
mov
or
xor
push
icebp
sti
rclb
xchg
pop
pop
out
pop
fs
shl
pop
mov
cmpsb
je
out
jp
test
push
jnp
add
insb
ds
jae
push
pop
iret
xchg
outsl
or
mov
pop
imul
out
jo
les
les
dec
jl
inc
inc
adc
aam
pop
cmc
sbb
lds
or
insb
sub
ljmp
pop
cmc
inc
xchg
roll
mov
mov
mov
cmp
and
push
adc
add
lock
xchg
pop
jno
arpl
call
adc
lods
idiv
cmp
mov
sahf
fldenv
and
xlat
test
jno
jno
fildl
mov
or
or
insl
mov
pop
test
sbb
lods
ja
ret
imul
dec
mov
jmp
nop
lods
addr16
ss
push
fs
push
insb
push
sub
ss
mov
sub
push
xchg
pop
jb
loopne
mov
inc
repz
popa
lret
test
adc
pop
lret
imul
inc
cmp
push
sub
xchg
loopne
xor
ja
lret
push
pop
mov
mov
adc
pop
nop
outsb
fucomp
mov
int
inc
xchg
das
inc
pop
or
sahf
fcomps
fisubrs
stos
push
mov
jae
xchg
aas
inc
push
mov
in
lods
out
sbb
dec
xlat
mov
inc
push
out
adc
xchg
movsb
add
bound
into
rorb
sbb
jge
incb
adc
jno
add
int3
scas
or
mov
dec
xor
fs
push
bound
adc
decl
ficompl
roll
push
mov
pop
pop
xor
movsb
sub
cmpb
push
sub
xchg
in
fsts
push
or
movsb
fstps
dec
inc
sti
adc
dec
fnstsw
inc
inc
lods
daa
outsl
add
loope
push
xchg
lcall
and
pop
jo
mov
movsl
hlt
add
shrl
cld
xor
sub
pop
sbb
pop
divb
pop
cli
xabort
push
dec
xchg
fnstsw
sub
push
scas
pop
dec
enter
loopne
lock
xlat
add
mov
or
stc
fld
xchg
and
xor
mov
outsb
mov
jb
in
loop
push
push
inc
pop
xor
push
lret
dec
fucomp
cli
mov
pop
sub
insl
aad
add
mov
sbb
decb
sbb
std
mov
pop
adc
add
mov
test
ljmp
imul
test
outsb
push
adcb
dec
ds
adc
daa
ficoml
jmp
mov
imul
inc
inc
jp
aas
xchg
movaps
into
setbe
in
in
popf
popf
out
cltd
aam
mov
mov
pop
jecxz
stc
add
daa
nop
in
inc
sbb
push
pop
rep
sbb
jb
inc
lret
mov
cwtl
jmp
mov
or
adc
dec
stos
mov
decl
pop
aaa
in
mov
push
scas
insl
in
xchg
dec
jecxz
sbb
pusha
cs
aam
mov
cmp
dec
ror
out
and
xchg
bound
ja
cwtl
iret
push
add
fs
or
and
ret
mov
addb
sub
movsb
pop
sbb
fs
xchg
lcall
mov
dec
sub
jp
test
inc
out
xorb
ret
push
imul
bnd
aas
iret
test
enter
imul
clc
push
std
in
bnd
push
out
iret
push
mov
and
hlt
and
adc
outsb
imul
xchg
push
cmp
lahf
test
xor
in
aaa
adc
fidivrs
or
clc
jb
aas
dec
mov
cmp
mov
out
jg
and
mov
int
rcll
mov
pop
pop
pop
repnz
js
mov
addl
ds
xchg
icebp
xlat
iret
in
imul
cs
adc
dec
dec
dec
inc
adc
sbb
pop
or
jb
push
ficoms
rorl
rclb
inc
mov
inc
pop
sahf
pop
inc
add
aam
sub
ret
cmc
mov
lahf
int3
sbb
cmpl
sbb
push
repnz
fstp
test
iret
jge
mov
sbb
pop
xchg
js
inc
push
mov
cmp
inc
leave
cmp
cld
fsts
mov
dec
mull
fsts
jnp
mov
scas
mov
out
fcmovbe
in
stos
les
mull
jbe
jnp
lods
pop
leave
popa
push
iret
addr16
xor
gs
mov
push
loop
jb
cmp
sarl
rcr
add
add
int3
mov
fsubl
xchg
lods
gs
sbb
movsl
inc
test
fwait
into
mov
pop
repnz
mov
push
pop
fcoms
push
pop
xchg
dec
adc
ja
jecxz
test
stos
mov
pop
sbb
xor
repz
leave
call
push
add
add
xor
inc
add
loope
add
cmpb
cmp
fistpll
xchg
popa
pop
xor
mov
jl
loopne
jae
push
mov
or
push
loop
push
aas
xchg
lock
js
xor
std
jbe
clc
ss
or
cmp
scas
jle
push
cltd
pop
mov
mov
sbb
push
jmp
lret
fwait
jo
cmp
data16
in
loopne
popf
push
nop
mov
aad
iret
lret
sbb
rep
cli
dec
call
out
addr16
and
out
jle
dec
pop
nop
ja
and
repnz
jmp
inc
cmp
add
in
sbb
jbe
add
outsl
mov
test
call
push
loop
add
lcall
and
inc
mov
jb
inc
add
push
call
inc
inc
mov
out
mov
out
stos
out
push
ret
test
jl
std
sbb
add
test
movsl
push
lcall
mov
adc
pop
jl
out
and
xchg
lds
popf
mov
ja
stos
dec
push
xchg
cmp
test
mov
popa
push
in
add
mov
pslld
pop
sbb
push
xchg
push
sbbb
inc
shrb
jl
or
shll
in
mov
adc
fildll
jecxz
push
lds
mov
xor
jg
aam
inc
into
jl
xor
aas
cmp
jl
je
sub
daa
aam
push
push
mov
repz
icebp
pop
shll
cmp
adc
pop
push
dec
fmul
mov
ljmp
or
out
adc
cmpl
fxch
xchg
shll
pop
and
xor
insb
mov
xor
inc
cltd
mov
data16
mov
int3
xchg
clc
xchg
mov
mov
fisttpl
stos
je
xor
sub
iret
out
mov
aad
lret
sub
and
test
adc
adc
in
aad
and
out
je
adc
xchg
adc
jmp
sbb
xchg
popa
pop
es
xchg
mov
lods
push
repnz
aaa
aam
ret
xor
vaddsubpd
or
push
enter
or
test
push
push
adc
xor
out
cmp
sub
aam
cmpsl
cmc
push
ljmp
xchg
and
mul
jnp
jbe
sar
mov
sub
mov
xchg
leave
notb
insl
leave
sbb
xor
adc
adcb
sbb
ret
es
sbb
lea
fwait
icebp
pop
imul
sub
stos
lahf
out
jg
jg
rep
outsl
push
hlt
mov
add
sub
rcrl
sbb
outsl
dec
cmp
sub
add
jge
out
adc
dec
test
popf
cs
in
out
iret
xchg
das
jno
in
cmpsl
and
cmc
das
outsb
repz
xchg
mov
add
lock
in
stos
shl
scas
cld
fmull
cmpsb
mov
out
adc
fcmovne
lock
mov
add
orb
outsb
clc
inc
jns
mov
jno
pop
mov
jl
mov
leavew
mov
inc
xchg
enter
insl
add
mov
push
pop
jecxz
and
or
icebp
jae
aaa
fildll
mov
sbb
lret
cltd
shlb
loopne
loop
aaa
sub
ret
es
jnp
and
fucomip
mov
sbb
loopne
or
pop
leave
sub
mov
add
add
mov
repnz
cmp
cmc
jb
negb
cltd
scas
mov
das
es
or
test
mov
jns
add
jae
or
imulb
gs
ljmp
cmp
and
xor
pop
into
test
push
outsl
xor
add
fmull
cmp
mov
mov
sbb
sub
addr16
push
scas
hlt
adc
test
lods
push
jg
push
mov
iret
adc
or
cmc
ds
jb
inc
lcall
insb
adc
sti
ficomps
in
sub
cmp
and
mov
fists
lds
shll
aas
xchg
xor
ds
and
push
lea
fsubrs
mov
xchg
sti
loop
cltd
jno
movsl
sbb
ja
loop
popa
cli
xchg
xor
out
movsb
or
fimuls
in
sti
insb
bound
shll
testl
push
jg
stc
xchg
jns
addb
pop
mov
push
or
int
lea
or
sbb
xchg
sbb
insl
stos
popf
loope
jp
cmpl
and
addr16
out
dec
addr16
xchg
aas
sbb
push
lret
lods
fists
push
icebp
clc
push
push
add
repz
cmp
jg
bound
dec
xchg
out
mov
inc
call
or
jl
loop
repnz
mov
pop
ja
insb
adc
lds
or
mov
ja
aad
out
push
and
stos
sub
aaa
movsl
and
loop
jmp
mov
daa
daa
aaa
adc
stc
shlb
jnp
in
add
cmp
stc
inc
pop
push
xor
fs
cmpsl
dec
push
jmp
push
cld
sbb
jae
push
stos
ljmp
mov
lret
lock
fst
push
fiadds
aad
mov
lret
pop
lret
outsl
mov
movsl
shrb
ljmp
xchg
data16
and
fsubs
dec
mov
xchg
test
dec
push
idiv
popa
jnp
out
push
out
mov
sub
fimuls
shrl
push
imul
push
pusha
sub
lods
sub
cmpsb
and
loope
out
lock
add
loop
pop
mov
jl
lahf
jg
pop
cli
lods
mov
jge
pushf
lcall
pop
adc
test
sete
push
add
sub
inc
jae
aam
pop
imul
push
in
cltd
cltd
in
cwtl
sbb
fcomi
cmp
mov
fs
jg
inc
movsl
fwait
leave
aad
lock
fcomip
cmp
sbb
in
sar
testl
test
mov
mov
dec
xchg
xor
fs
sub
in
and
aas
adc
testb
lods
push
add
mov
lea
push
fidivrs
testl
roll
andl
das
mov
inc
add
xchg
mov
push
jae
sub
jmp
mov
std
movsl
bound
push
inc
sub
pop
pusha
or
mov
or
jbe
mov
jno
xor
enter
ljmp
mov
or
sub
jo
test
imul
repnz
sahf
leave
in
insl
or
jnp
and
popa
dec
jne
lock
adc
repz
sbb
stos
jbe
sti
ljmp
sbb
sub
xor
sub
push
cmp
cmp
push
bound
loop
popa
adc
inc
jg
jl
or
inc
jmp
push
roll
jmp
int
cmp
mov
loopne
inc
mov
mov
das
aaa
lods
cmp
lds
sub
mov
outsb
mov
aas
sarb
enter
jns
imul
negb
jnp
aaa
lret
dec
stos
jge
push
loope
jp
mov
or
cld
inc
aaa
repz
cmp
out
mov
mov
xchg
aas
daa
shlb
dec
sbb
imul
add
rcll
jbe
andl
and
sbb
lods
pop
clc
outsb
mov
push
lret
dec
sub
push
fwait
das
nop
add
ss
adc
adc
xor
pushf
mov
mov
fs
jle
scas
popf
mov
divl
xchg
in
mov
sub
dec
adc
push
insb
dec
outsl
cs
mov
mov
pop
je
insb
jecxz
aaa
sbb
shrl
stc
add
sub
popa
inc
adc
je
cmp
dec
fwait
int3
cli
and
or
in
fsts
in
aaa
imul
ret
std
pop
gs
stos
das
adc
ret
mov
pop
pop
jns
into
fldenv
jmp
xchg
lock
insb
ret
cmp
xchg
lods
mov
lods
dec
mov
sub
mov
and
lea
mov
mov
and
das
std
xchg
jmp
cmpsl
int3
insb
ds
test
pop
cmp
xchg
dec
rcr
sbb
mov
jnp
lret
mov
bound
jg
clc
pusha
adc
enter
push
fisttpll
adc
xchg
jl
add
iret
push
js
inc
ljmp
insl
mov
mov
mov
stos
mov
leave
pop
xchg
stc
jb
sbb
loopne
mov
test
gs
nop
pop
mov
enter
daa
ljmp
cmp
fnstcw
ja
insl
ja
stos
mov
bound
testl
std
pop
imul
es
jp
mov
push
repnz
fnstsw
popa
cwtl
mov
inc
pop
stos
fcomip
ret
out
call
and
push
movsb
mov
sbb
fldcw
push
leave
out
inc
cmp
sub
mov
and
je
jo
clc
xchg
sub
inc
jp
out
ret
cli
or
xlat
repnz
cmpsb
rorb
aad
push
std
cmp
jmp
repnz
adc
mov
pop
cmc
cmp
mov
inc
ds
push
dec
inc
mov
jne
sarb
cmc
xchg
push
jne
pop
mov
inc
fistpl
mov
mov
hlt
mov
sub
mov
leave
cmp
in
nop
add
out
iret
jge
xchg
ja
adc
mov
inc
adc
mov
pop
add
mov
jo
cmp
enter
fildll
xchg
inc
push
cmp
shll
call
movsl
fistpl
dec
movsl
push
sbb
mov
call
fcompl
and
ds
adc
xchg
xor
xchg
pop
xchg
sbb
aad
adc
call
push
sub
or
sub
mov
in
dec
lcall
xlat
xor
movsb
push
sbb
lds
jle
inc
jmp
dec
jne
arpl
or
mov
ljmp
push
es
insb
cmc
xor
fcompl
loop
mov
ja
ds
dec
xor
xchg
add
jmp
repnz
lcall
arpl
cmp
push
jl
int3
push
mov
or
lods
pop
push
adc
jmp
mov
mov
xchg
leave
cmp
popf
fiaddl
clc
mov
data16
xor
dec
and
fildll
mov
push
mov
push
loop
add
repz
add
cmpb
xor
imul
insb
dec
scas
push
mov
pop
out
dec
pop
pusha
orb
lahf
test
pop
mov
in
fists
aad
pop
cwtl
xchg
loop
sbb
sahf
stos
ja
and
sub
jecxz
jecxz
xchg
xlat
ljmp
pusha
pop
cli
jno
mov
mov
jnp
repz
and
gs
xchg
lahf
sbbl
xchg
ja
in
jnp
vpor
divl
je
cmp
js
ljmp
out
js
sbb
scas
and
push
mov
dec
mov
arpl
test
aaa
adcl
orl
or
sub
push
call
adc
mov
push
adc
pop
test
mov
fnsave
pop
mov
icebp
popf
xor
mov
xchg
pop
inc
cli
inc
or
mov
mov
mov
jnp
pushw
pop
adc
aam
in
dec
adc
jge
or
pop
scas
sbb
scas
xlat
jbe
mov
addb
sti
daa
lods
hlt
fwait
test
rorl
mov
push
push
orl
jnp
in
xchg
xchg
dec
xlat
sbb
push
sti
orb
test
mov
fcomps
stos
in
inc
fidivrs
cmc
or
pop
jne
test
ljmp
lret
jge
jns
mov
xchg
js
out
in
mov
jmp
push
inc
leave
sti
lds
aas
mov
orb
add
or
bound
scas
adc
lock
inc
mov
xchg
xor
sbb
leave
or
ud0
sahf
cs
or
lock
in
out
or
or
or
sub
jne
pop
rcrb
or
sbb
lret
jg
adc
mov
adc
hlt
ds
loop
mov
sub
mov
jg
cltd
mov
jge
out
jg
add
or
or
sub
sti
clc
push
sahf
xchg
or
out
int
fsub
mov
xlat
mov
hlt
nop
jecxz
aad
shlb
inc
ret
lret
and
dec
mov
leave
dec
fmul
mov
adc
dec
and
and
jmp
pop
outsb
xor
js
dec
xchg
add
jmp
adc
or
pop
sbb
iret
push
outsb
stos
test
and
shrb
das
ficoml
scas
xchg
adcl
jb
adc
scas
iret
outsl
imul
add
mov
add
or
and
iret
inc
rorb
dec
je
adc
pop
aaa
mov
in
notl
fdivr
movb
inc
and
ficompl
cmp
dec
mov
arpl
jle
cmpsl
sub
ret
sbb
cmp
mov
mov
mov
ror
repnz
sti
into
insl
mov
mov
cmp
mov
mov
lods
mov
out
mov
xor
jns
add
fbstp
lcall
jb
insl
sbb
insb
sub
repz
iret
or
mov
jae
imul
pop
pop
out
icebp
push
jmp
or
sub
jl
pop
lock
rcrl
les
test
lods
pop
add
stos
sub
sbb
adc
aad
ds
cmc
jbe
ljmp
fwait
or
outsb
mov
mov
dec
js
ficomps
dec
jns
jno
pop
ret
or
push
lock
imul
mov
inc
jb
jle
xchg
jp
int3
loope
jnp
icebp
inc
pop
xlat
or
sbb
lds
outsl
jg
sbb
dec
lret
mov
nop
push
push
dec
int
aas
add
ljmp
inc
pop
or
push
mov
movsbl
dec
lret
stos
inc
xchg
inc
mov
loopne
jp
arpl
loope
sub
sub
insl
sbb
lods
mov
arpl
daa
jb
cmp
pusha
or
xchg
test
stos
jno
mov
xor
jmp
lds
sub
cmp
dec
hlt
loop
xchg
sbb
movsl
ljmp
push
push
push
mov
das
pop
xchg
insl
sub
arpl
andb
jp
push
test
imul
pop
cmp
cmp
fcoms
mov
pop
and
xor
push
inc
lods
fcmovbe
xchg
xor
je
or
repz
sub
jne
insb
enter
lods
push
xchg
inc
xchg
mov
rcr
dec
cmpsl
push
fisubs
in
mov
xor
ds
mov
in
ljmp
hlt
push
mov
xchg
sub
addr16
out
mov
ret
cltd
dec
dec
mov
lods
call
outsb
mov
jo
fs
jne
push
pusha
negb
fiaddl
stc
cwtl
ja
data16
dec
push
orb
jg
in
cwtl
aad
xchg
ficomps
add
leave
loope
add
enter
jne
out
jne
xor
fs
scas
arpl
test
in
jne
scas
jle
rolb
in
pop
jecxz
lcall
mov
insl
jecxz
sub
pop
popf
popf
adc
mov
std
dec
push
cli
lret
push
and
das
jae
mov
mov
cmp
xchg
sbb
sub
jecxz
pop
jns
mov
popf
out
data16
xchg
test
pop
rorl
leave
mov
lods
cmp
inc
test
bound
push
dec
scas
push
jle
jl
shll
imul
pop
push
jmp
mov
scas
jo
or
std
jecxz
add
fdivrl
out
mov
repz
cmpsb
hlt
lea
xor
sti
jg
dec
aad
xchg
mov
leave
cmp
sub
movsb
aam
sarb
add
sbb
jle
jle
nop
inc
inc
scas
xchg
mov
shlb
or
mov
lret
xchg
jne
dec
and
jb
mov
xor
arpl
xor
dec
call
mov
out
lea
or
cmp
bswap
out
inc
fsubrp
mov
pop
mov
fdivl
and
add
xchg
fnstenv
mov
mov
popf
jb
dec
jg
sbb
or
fstl
mov
cmp
sub
cli
pop
lcall
pop
mov
dec
stc
pop
out
xchg
icebp
movsb
xor
and
adc
push
mov
es
pushf
ljmp
enter
sub
mov
sub
mov
test
mov
sbb
gs
daa
dec
xor
insb
jnp
push
sahf
popf
popf
sub
xlat
jmp
sbb
in
icebp
and
fisttpl
fstl
out
iret
lock
jle
in
cmp
jne
mov
dec
dec
ds
add
jbe
fstl
or
sub
insl
ljmp
dec
mov
stos
and
add
push
addl
xchg
mov
jae
icebp
and
and
andb
xor
jno
aam
cld
mov
andl
es
ret
mov
cmpsb
adc
out
sbb
sbb
mov
xor
iret
dec
jl
push
pop
or
mov
or
rcll
jg
inc
arpl
lods
ds
cmp
movsl
fwait
cli
mov
lahf
fwait
push
sub
hlt
or
cmp
and
arpl
pop
int3
test
lcall
jnp
sti
sub
push
xchg
adc
loope
pop
lods
scas
imul
cmp
movsb
nop
int
bound
std
iret
into
mov
xor
jno
mov
adc
push
pop
pushf
xchg
sbb
and
add
emms
cwtl
sbb
mov
shll
in
push
dec
mov
jae
xlat
and
movsb
pop
inc
aam
movl
jmp
and
or
xchg
jmp
aam
add
mov
push
or
adc
roll
cli
das
sub
jns
cmp
leave
repnz
in
ficompl
sbb
push
xchg
shrb
ss
push
jle
xlat
inc
jo
adc
fisubs
lcall
cmp
xor
out
adc
jae
lahf
push
std
jmp
pop
scas
sub
cmpsb
ret
push
mov
cld
dec
jmp
rol
dec
pushaw
add
lods
jae
fsubl
jle
mov
repz
fbstp
bound
and
mov
pop
cmp
adc
mov
loope
lret
jae
out
ficoms
into
push
fildl
lret
pop
jne
inc
sbb
xchg
repz
fs
adc
sbbb
cs
aam
ljmp
movsb
les
fidivrs
mov
in
fists
inc
lret
cmpsl
fnstcw
add
and
imul
dec
or
inc
cs
xor
adc
sub
rorb
jmp
enter
sbb
aaa
stc
popa
in
aad
imul
sbb
dec
nop
xchg
push
stc
imul
and
movsl
add
rclb
into
stc
lahf
in
mov
sbb
test
fwait
mov
and
dec
xchg
and
dec
pop
mov
cmpsb
mov
jns
inc
push
lret
sub
or
pop
jl
xor
push
and
outsl
add
aam
outsb
repnz
test
fnstcw
cmp
outsb
inc
fisubl
lds
mov
xchg
cmp
sub
outsl
inc
cmpsl
dec
stos
mov
sbb
in
adc
xchg
adc
andb
xchg
inc
iret
inc
cmp
std
pop
inc
cmpsb
adc
dec
push
dec
loope
pop
sbb
sub
loopne
dec
mov
lea
fldl2t
push
call
add
sahf
jle
xor
sahf
adc
cmp
and
popa
xlat
xor
mov
outsl
inc
or
and
enter
aaa
xchg
insb
scas
into
stos
push
jnp
pop
inc
jae
decl
std
xchg
adc
or
xchg
adc
insb
call
js
mov
xchg
dec
ret
out
scas
rcrb
stc
push
fsts
sbb
and
into
lods
xchg
outsb
xchg
and
lds
dec
mov
outsl
mov
inc
or
in
std
mov
pop
sbb
in
gs
sbb
fcoms
mov
jae
push
stos
cmc
mov
sub
or
adc
or
decb
fcoms
mov
es
adc
cmp
xor
jb
dec
xchg
mov
sbb
popf
cli
mov
and
stc
jno
fiadds
add
mov
test
jbe
mov
dec
dec
mov
lods
mov
dec
mov
push
dec
push
enter
dec
leave
mov
mov
addr16
dec
and
jl
pop
mov
cmp
lcall
xchg
sub
mov
and
cltd
daa
in
mov
stc
lret
lret
int
fdivs
mov
or
insl
das
cmp
mov
fcom
outsb
mov
dec
addr16
adc
mov
jbe
cmp
fstps
xor
dec
aaa
mov
dec
repnz
mov
or
lret
sar
adc
mov
int3
iret
jle
mov
adc
scas
test
add
push
mov
sbb
rclb
lods
shrl
std
ljmp
mov
mov
in
or
sub
jbe
cli
jp
mov
mov
lock
push
icebp
jns
fmull
xor
lret
repz
xchg
int3
sbb
aaa
daa
cld
xchg
or
sbb
adc
jge
mov
popf
jle
push
dec
jecxz
jno
dec
and
adc
test
repnz
mov
mov
sub
pushf
dec
cmp
add
mov
dec
fwait
into
add
mov
stc
xchg
fiadds
mov
cmpsb
xchg
add
pop
movsl
cmp
hlt
cmp
lods
cmp
jno
add
jl
fmuls
jne
out
push
int3
add
test
into
dec
add
into
iret
iret
ret
nop
adc
or
mov
rol
shrl
cmp
aaa
or
lea
and
sbb
jns
xchg
sbb
ret
jno
cmpsl
or
arpl
fstps
xor
jne
clc
inc
mov
pop
cmpsl
push
lods
out
roll
pop
inc
lods
cwtl
movsb
in
fwait
add
sbb
or
fwait
mov
cwtl
mov
sbb
mov
fcompl
xor
inc
and
ret
add
push
lods
dec
xor
fcmove
add
pop
pop
pop
aad
xor
push
arpl
sbb
ljmp
mov
xlat
jecxz
inc
push
xlat
int
ret
pop
lret
pop
out
fwait
and
loope
mov
mov
lods
cmp
add
cmp
add
bnd
mov
pop
add
lods
loop
imul
fcomi
push
in
movsl
loop
xor
inc
push
or
je
xchg
dec
fldenv
popa
pop
std
jnp
add
inc
lret
mov
cwtl
je
mov
comiss
lods
in
pop
cmp
hlt
push
out
jp
inc
loope
cmp
mov
popa
mov
loope
fs
inc
jo
andb
iret
repz
test
jne
mov
fs
add
cmp
int3
fwait
jp
popf
adc
or
or
jne
push
jae
mov
pop
call
sbb
adc
pop
std
cld
jb
js
dec
jge
loopne
cmp
jl
xor
test
jo
std
lods
jmp
cld
movsl
cmp
xor
push
cmpsl
nop
pop
out
mov
xor
adc
ljmp
add
jl
push
jl
pop
data16
xor
inc
cmp
ss
or
and
fs
idiv
xlat
stos
cld
mov
mov
fs
mov
inc
xchg
jge,pn
dec
push
out
mov
out
fstpt
fisubl
out
xchg
sarb
add
mov
pusha
sti
popf
imul
sbb
sahf
pusha
lods
int3
and
sbb
mov
xchg
pop
addl
xchg
jge
cmpb
test
adc
jl
lods
push
mov
or
pop
dec
jae
mov
xor
loope
sub
stos
sti
xchg
dec
scas
xchg
or
and
pushf
pusha
pushf
sub
int
lcall
pop
in
loop
stos
les
push
mov
ficomps
mov
ss
sub
fdivl
aaa
ja
pusha
out
cvttps2pi
insb
sahf
shlb
dec
jle
lret
xchg
ljmp
aam
scas
xor
pop
fstpl
cmpsl
loopne
and
dec
ret
stos
mov
test
push
addr16
push
xor
mov
pushf
xor
cli
arpl
add
and
cli
and
icebp
aam
mov
adc
out
lods
adcb
add
cwtl
and
repz
xor
rorb
mov
push
int3
jl
jl
in
xor
popf
jbe
push
out
insb
in
insb
scas
addr16
xor
pop
aad
jmp
jns
std
addr16
movhps
je
add
repz
mov
push
mov
push
xchg
push
cmpsb
push
pushf
add
xor
stos
push
dec
jp
out
rclb
push
mov
adcb
mov
lahf
loopne
dec
cltd
or
bound
aas
sahf
sub
ljmp
cmc
cltd
xor
or
and
xchg
sub
mov
xchg
cmp
popa
push
aaa
inc
fs
cmc
xor
pop
iret
cmp
sub
xor
scas
adc
push
mov
dec
hlt
push
loopnew
nop
cmpsb
xor
popa
jbe
movsb
sbb
outsb
push
hlt
pop
xor
subl
inc
int3
adc
dec
cld
jnp
aas
dec
cwtl
sbb
xchg
mov
jmp
and
adc
or
popf
addr16
out
pop
push
ret
fldcw
mov
les
loop
inc
cmpb
test
dec
sub
cwtl
lret
pushf
push
mov
jns
jnp
andl
addb
mov
lock
movsb
stos
clc
cmpsl
out
push
lahf
adc
negb
jp
js
shr
jle
xor
shr
mov
mov
lods
divl
out
xchg
push
roll
dec
pop
jnp
in
sub
jb
rcr
call
pusha
gs
stos
sub
ficompl
cmp
lcall
adc
fisubs
data16
pushf
add
aam
cld
ljmp
lods
in
fnsave
imul
adc
stc
sub
cwtl
popa
xorb
sub
int3
adc
fidivrl
dec
addl
mov
cmp
inc
xchg
movsl
xor
out
inc
push
xchg
fs
je
pop
cli
pop
or
test
pop
lods
dec
loop
lret
insb
add
hlt
notl
inc
mov
int
mov
push
pop
add
jnp
jb
and
decb
lds
data16
adc
insl
nopl
push
cmp
mov
mov
stos
inc
pop
out
addr16
sub
aaa
mov
jbe
in
fcoml
in
xchg
mov
lea
mov
jle
ret
cmpsb
sti
sub
cld
push
mov
imul
lcall
imul
or
fldln2
sbb
pop
adc
jne
pop
scas
sbb
sub
cltd
mov
and
mov
mov
insl
clc
cmc
push
xchg
mov
pop
cmpsb
or
cmpl
pop
jno
push
inc
loop
popf
jns
popf
movsl
iret
adcb
inc
jbe
jg
mov
pop
pop
out
test
ja
out
cli
xchg
jbe,pn
imul
into
push
fucomp
mov
sub
je
aas
and
jnp
mov
cs
xchg
mov
aad
lcall
xchg
out
jae
inc
and
ds
fisubrs
fs
int3
mov
xchg
test
insl
fildll
and
fistpl
lret
fcmovnbe
test
rcrb
popf
addb
jnp
pop
sbb
xor
stc
add
fsubrs
test
push
out
lret
xchg
repz
data16
insb
scas
sub
xor
xchg
sbb
jns
inc
fists
lret
lock
pop
sar
idivl
mov
push
mov
shll
push
cli
cli
icebp
pop
or
mov
test
inc
aad
mov
xchg
pop
push
andl
repnz
dec
shl
stos
lret
inc
pop
mov
push
cmp
add
aas
dec
mov
ds
pop
mov
inc
inc
xor
es
push
cld
sub
jnp
dec
mov
pop
xchg
lret
jne
or
pop
shrb
std
xchg
sub
push
das
test
mov
ficompl
inc
and
fwait
sbb
xlat
mov
ss
cmp
mov
loop
xchg
cmp
outsb
sbb
xchg
pop
jmp
dec
test
or
fcmovu
movsl
dec
inc
jl
add
incb
outsl
sbb
sbb
xchg
movsb
ret
or
push
pop
in
icebp
xor
aam
data16
or
jp
cmp
add
mov
test
sbb
dec
push
je
xchg
sub
inc
push
shrb
test
or
mov
jns
push
idivb
cmp
push
inc
dec
inc
xchg
xchg
imul
lock
je
lahf
jp
and
lret
cmpsb
xchg
movsb
enter
dec
jecxz
clc
and
clc
lock
sbb
outsb
push
pop
int
sub
test
scas
in
rorl
out
imul
hlt
inc
mov
das
outsb
aam
divb
or
xor
inc
push
mov
push
cld
movsl
add
es
pop
movsl
aad
aam
inc
jb
and
das
sbb
hlt
jnp
out
inc
insb
addr16
les
xchg
aad
outsl
mov
lahf
pushl
loop
in
movsl
sbb
in
cmpsl
sbb
in
jne
sub
or
repz
push
hlt
or
xchg
adc
inc
adc
add
arpl
xchg
enter
ret
adc
jbe
push
add
inc
mov
xchg
adc
sbb
js
pop
shlb
mov
mov
cltd
or
xchg
jbe
ret
xchg
sbb
push
pushf
arpl
mov
mov
cmp
jp
inc
push
ret
cmp
adc
fwait
push
jns
lcall
test
jbe
dec
or
in
cmp
cld
leave
jno
push
cmpsb
pop
test
mov
in
inc
clc
hlt
push
insb
adc
pop
push
out
push
pop
cltd
and
mov
dec
ret
call
fisttps
lods
repz
in
and
imul
jge
push
testb
ror
stos
push
icebp
dec
mov
test
daa
xchg
xor
and
inc
push
dec
int3
mov
sbb
js
dec
aaa
inc
bound
adc
neg
xor
outsl
sarl
fdivs
xchg
xor
bound
dec
frstor
movsb
xchg
and
mov
push
ffree
jae
ds
fimuls
in
xor
inc
pop
mov
mov
lock
push
adc
imul
inc
jle
or
lea
sbb
jae,pn
pop
aaa
mov
dec
ljmp
jne
push
mov
push
lahf
dec
pop
xor
int
push
or
jno
xchg
ss
add
xchg
sbb
fistpll
push
sub
ds
sub
setbe
pop
icebp
subb
pslld
fwait
xchg
cli
sbb
jl
push
pop
or
test
jnp
sbb
iret
das
xchg
adc
dec
out
cltd
mov
leave
pop
cltd
inc
mov
std
and
ficoms
jmp
adc
xor
clc
mov
outsl
and
stos
mov
movsb
daa
jb
lods
aam
imul
or
xor
jo
roll
inc
mov
mov
cmp
in
cmc
loopne
pop
and
int
cld
ds
and
fucom
adc
je
mov
jbe
mov
fadd
cmp
push
cltd
pop
insb
cld
ds
mov
and
xor
insl
pop
incb
sub
push
out
cltd
rcl
adc
jno
test
in
cmp
xor
xor
pop
pop
push
xor
clc
pushf
cmp
sahf
les
xlat
jno
cmp
out
les
pop
adc
popa
dec
dec
push
adc
cmp
xor
fldcw
xchg
test
xor
addb
imul
movsl
imul
push
push
fdivr
es
je
sbb
shl
lods
sbb
decb
sbb
jo
mov
push
push
mov
js
sti
dec
clc
or
int
jbe
sub
mov
push
cltd
xor
xchg
mov
cld
cmp
aam
xor
clc
loopne
loop
cmp
ljmp
lahf
lods
cmc
jge
mov
jecxz
aam
cvttps2pi
mov
enter
dec
aad
jp
push
in
pushf
adc
loopne
scas
inc
sub
outsl
fimuls
out
xchg
fisubs
sub
inc
push
mov
aaa
fnsave
mov
int3
xorl
adc
lods
and
rcrl
stos
daa
sbb
jnp
push
pop
adc
loopne
jnp
pop
int
jo
cld
jle
movsl
pop
movsl
rolb
and
mov
xchg
ljmp
sahf
sahf
nop
jmp
sbb
loop
xchg
test
test
stos
out
xchg
mov
xor
push
jns
pop
sbb
add
sub
mov
jge
stos
test
stos
imul
pop
jb
mov
lds
cli
mov
jle
sahf
or
pop
sti
xor
out
in
cli
dec
lret
mov
pop
insb
and
filds
ja
xchg
inc
push
imul
inc
movsl
jns
sbb
repnz
or
inc
or
sti
inc
sub
mov
jnp
mov
jmp
mov
dec
lods
es
iret
movsl
cmp
lea
test
pushl
or
fdivrl
inc
xor
mov
lahf
test
sub
and
add
xor
ljmp
add
mov
jmp
lds
mov
mov
icebp
jne
cmc
xchg
mov
cmpb
adc
stc
pop
add
xchg
je
jo
sbb
sub
or
dec
pop
repz
sbb
jns
inc
inc
into
cli
roll
fistps
pop
sbb
inc
cwtl
sbb
in
jg
cmovno
mov
inc
cmp
mov
mov
sahf
cmpsl
and
sbb
jle
mov
in
jp
iret
int
jns
rcr
mov
or
bound
jg
imul
pop
pop
fmuls
bound
mov
sub
inc
sub
fdivrs
leave
cld
cs
pusha
pushf
mov
out
testl
insl
or
out
out
inc
xchg
cwtl
enter
div
inc
xchg
leave
sarb
out
pop
jno
add
mov
mov
popa
inc
fimull
in
or
jge
or
add
mov
pop
or
ja
xor
jb
stc
sub
pop
cld
or
lock
outsb
and
pop
mov
pop
pushf
jmp
stos
js
mov
sub
mov
dec
outsb
outsb
cwtl
jle
mov
lods
inc
jnp
imul
cld
call
pusha
std
pop
sti
fprem
push
invd
lods
xchg
inc
cmp
lock
or
lret
scas
xlat
outsl
imul
pusha
cs
inc
scas
sbb
cltd
lds
mov
dec
push
mov
shll
cmp
daa
jecxz
pop
or
jne
pop
in
je
cltd
inc
xchg
das
pminub
mov
mov
push
out
mov
sub
mov
sbb
lds
test
jne
inc
adc
rorl
insb
cmp
outsb
idivb
sub
pop
mov
pop
or
pop
sarb
jmp
loop
jno
popa
test
push
inc
or
lcall
xlat
sbb
nop
fistps
or
or
rcrb
add
adc
imul
mov
jno
xchg
outsb
xor
repnz
stc
adc
aad
or
lds
xchg
test
iret
aam
xor
idivb
cld
fs
cmp
nopl
cmp
mov
mov
fwait
sub
xchg
cmc
jb
sub
or
push
push
mov
jbe
add
test
test
scas
ds
jne
into
insb
mov
imul
pusha
or
in
incb
shll
les
xor
adc
cwtl
movlps
cmpsl
dec
adc
pop
mov
adc
sbb
mov
inc
insb
xor
divb
push
jmp
loop
pop
ret
mov
push
sub
inc
leave
dec
or
ljmp
lea
mov
jmp
push
pop
sbb
or
ficomps
push
hlt
inc
or
and
sub
push
push
and
ja
shlb
cmp
mov
imul
jo
push
pop
test
mov
jle
sbb
and
jge
shrb
out
not
rcrl
mov
mov
pop
xchg
xor
jg
fldcw
out
inc
mov
cmp
fwait
aaa
xor
pop
mov
jns
outsl
rol
mov
push
and
sub
out
add
roll
pop
shlb
sbb
dec
sahf
cmp
repz
push
inc
dec
lea
xchg
inc
push
lods
cmpsl
cmp
cmp
mov
push
xor
test
lock
popf
subb
sub
push
outsl
pop
scas
or
mov
stc
repz
jl
sbb
lcall
mov
cmp
out
xor
add
jp
inc
pushf
btc
jb
fwait
imul
cltd
outsb
jecxz
sub
adc
mov
cwtl
pop
push
push
das
jns
adc
cs
lds
push
ficoml
dec
mov
sub
xor
jle
test
jmp
mov
pop
mov
int
jmp
xor
push
pop
arpl
je
mov
mov
lods
ja
je
stc
adc
mov
jne
xchg
shll
lahf
fsubrs
movsb
shll
inc
scas
dec
xchg
push
jle
sbb
cmpsb
das
inc
rclb
fistps
adc
and
out
mov
jle
cli
cs
out
repz
adc
data16
sub
popf
aad
push
in
xchg
stc
lock
clc
sub
jb
ljmp
xor
jae
jbe
jb
adc
cmp
popa
ljmp
sub
sbb
addb
mov
xor
out
pushl
mov
push
cltd
loopne
out
pop
adc
repnz
cmp
clc
xor
xchg
add
test
out
cs
or
pop
jecxz
ja
test
mov
mov
outsl
imul
aam
xor
pop
test
cmp
div
mov
cld
push
jecxz
mov
push
adc
rorl
xchg
enter
push
mov
adc
mov
std
into
sbb
push
fisubl
jle
shll
jmp
cmpxchg
jne
std
insl
fistl
cltd
outsb
cltd
rcrl
xor
stc
or
and
or
into
lods
cmpsb
cmp
adc
iret
and
adc
cmp
dec
divl
mov
fstl
inc
push
mov
loop
sbb
xor
movsl
push
std
jl
pop
cwtl
mov
mov
and
mov
pop
nop
and
lcall
jge
into
mov
cwtl
jge
push
les
mov
inc
mov
adc
inc
stos
movsl
add
test
sti
inc
ljmp
inc
sbb
lret
test
insl
cmp
mov
int3
jne
mov
icebp
adc
mov
mov
out
imul
pop
mov
std
dec
jns
mov
test
push
jmp
and
lcall
mov
or
stos
inc
xadd
mov
mov
call
pcmpgtd
cld
adc
jl
sub
mov
or
mov
inc
pop
xchg
mov
shlb
in
or
xchg
cltd
js
mov
rcr
hlt
or
sbb
int
lds
stos
fildll
les
xchg
sbb
adcl
rclb
adc
push
push
loop
sbb
mov
pop
into
cmp
jnp
jno
jp
mov
sbb
cli
cmp
data16
xlat
add
aam
adc
pop
outsl
enter
add
mov
ljmp
pushf
out
xchg
js
cmpsb
mov
sub
in
ret
shrb
imul
inc
push
lock
dec
test
je
sbb
mov
mov
push
lds
mov
in
in
imul
subl
fnstsw
xor
iret
pusha
pushf
aas
adc
repz
scas
xchg
leave
popa
dec
add
lods
pop
lods
std
xlat
shll
pop
icebp
cld
or
daa
popa
xorl
sub
push
mov
xchg
scas
sbb
jg
xchg
adc
pushfw
xchg
shll
inc
jmp
jne
jbe
adc
lcall
mov
dec
pop
test
mov
jmp
pusha
inc
gs
xor
adc
and
ja
mov
pop
cmp
orl
es
jle
inc
push
mov
dec
call
mov
out
je
pop
xor
sbb
jbe
pop
fcomps
pop
or
xchg
and
pusha
fistpll
pushf
out
es
ds
pop
pop
add
pusha
xchg
cmp
repnz
and
xlat
mov
icebp
outsl
mov
out
ja
std
and
inc
pop
ljmp
jae
pop
xor
pop
jb
and
arpl
mov
push
inc
out
inc
push
sub
popl
mov
and
adc
movsl
add
or
and
xchg
test
lods
add
xchg
mov
sbb
fdivr
fstpt
xor
mov
mov
loope
adc
mov
loope
fisubl
popf
or
std
sub
ljmp
mov
cmpsl
loop
imul
call
mov
daa
lahf
pushf
fmul
cmp
jg
add
jb
call
push
mov
insb
sti
or
leave
sarl
and
mov
push
dec
repz
loopne
int
xor
xor
sti
sarb
jae
xchg
jle
jg
aas
cltd
push
xor
pop
lcall
push
sahf
xchg
add
scas
popf
mov
adc
mov
enter
and
push
adc
ds
js
sbb
push
mov
fwait
adc
ja
mov
mov
ficoml
inc
in
add
mov
xor
stos
xchg
mov
decb
mov
das
out
shll
xchg
cmp
sarl
ljmp
pop
shr
jno
aaa
imul
nop
shll
shrb
psrld
pop
pop
iret
xor
dec
or
shrb
mov
dec
in
cmp
sub
jp
xchg
clc
inc
fistpll
or
push
add
sub
shlb
popf
pop
in
lcall
outsb
inc
fwait
inc
cmpsl
lret
mov
jnp
jg,pt
aam
cld
sub
sbb
mov
push
fsubr
push
clc
inc
jg
mov
rorl
xchg
sbb
lcall
fsubl
jne
xor
adc
mov
lods
loopne
into
movsl
sbb
arpl
push
insl
or
push
inc
cmp
mov
sti
fdivr
or
inc
fisubl
fidivs
cli
jno
faddl
inc
mov
adc
sbb
dec
mov
inc
mov
push
sbb
cltd
filds
arpl
in
jnp
cmp
ja
fcoms
xchg
add
jnp
test
mov
mov
or
adc
mov
push
sbb
pop
adc
sbbl
mov
adc
mov
cltd
mov
repnz
add
loop
mov
push
inc
and
jno
iret
mov
xchg
dec
pop
test
in
daa
push
inc
jno
or
or
push
add
mov
mov
mov
jecxz
sub
sub
mov
jecxz
hlt
push
sub
or
xor
daa
movsb
sub
fsubr
xchg
cmp
or
cltd
nop
pushf
nop
sbb
lods
std
cmp
shll
push
inc
ss
dec
dec
test
int
sbb
scas
loop
cld
push
inc
or
xlat
scas
jne
push
and
inc
je
push
dec
adc
add
ss
cmc
imul
sti
in
fcmovb
inc
xlat
imul
cmpsl
and
in
mov
es
in
inc
xchg
xchg
push
into
fnstsw
cld
mov
mov
pop
ret
sub
mov
les
loop
pop
jge
iret
es
movsl
loopne
mov
cmp
mov
push
gs
xchg
mov
inc
insl
lea
hlt
add
fisttpl
imul
pop
push
sbb
fisttps
dec
out
gs
inc
arpl
dec
clc
addr16
frstor
shrb
mov
adc
shlb
xor
out
push
cmp
xor
jle
sti
push
xorl
es
pop
xchg
sub
sub
jmp
dec
stos
push
xchg
and
add
scas
push
movsb
add
pop
inc
fstpl
and
and
xchg
es
or
js
call
sbb
adc
lock
loop
call
lea
loop
lock
push
movsb
daa
in
cltd
add
add
sbb
jb
add
mov
cmpsl
push
nop
in
out
push
push
sti
and
or
lods
test
xorb
mov
pop
int
stos
movsl
lock
add
es
outsl
cld
mov
rcll
lods
neg
push
adc
jle
push
pop
out
loope
cmc
int3
pop
call
lds
arpl
xchg
popa
xor
push
movsl
xor
cmp
push
stc
leave
push
and
xchg
push
mov
sbb
cmp
sub
and
pop
jmp
xor
gs
les
add
add
jo
mov
inc
enter
mov
mov
xchg
lods
xchg
rclb
mov
icebp
imul
push
inc
cmp
and
pushf
test
test
data16
add
dec
cmp
adc
jns
fwait
adc
ja
push
jbe
sbb
add
mov
add
inc
in
jge
mov
cwtl
pop
mov
lret
jb
xchg
ret
nop
stc
mov
mov
bound
xor
leave
or
cmc
push
je
fdivl
cmovnp
sub
stos
ret
cmpb
xlat
sbb
mov
or
insl
mov
inc
rol
push
enter
lret
ljmp
mov
adcb
shrb
add
adc
jnp
jecxz
push
sbb
fs
xchg
scas
jge
dec
add
or
sbb
mov
fstp
ja
sub
push
out
cltd
and
or
ljmp
repnz
xchg
es
mov
enter
out
xor
xchg
mov
pop
movsb
imulb
lret
cmp
add
fcoml
test
cwtl
das
mov
cmp
cmp
lock
jo
add
mov
out
arpl
push
xchg
dec
imul
cmp
sbb
mov
ror
lahf
add
cld
dec
js
xchg
mov
pusha
dec
or
fisttps
ret
insb
aaa
lods
into
movl
mov
inc
inc
adc
stos
insb
mov
jg
addb
adc
pop
imul
iret
xlat
test
jb
sub
mov
ret
xchg
in
cwtl
dec
add
in
ret
fsubs
add
movsb
push
xor
cs
shll
cmc
out
clc
push
mov
mov
popa
xchg
add
sbb
jge
jmp
jae
cmpsb
dec
mov
hlt
dec
xchg
sbb
jg
scas
mov
jnp
fldenv
adc
in
mov
cmp
jmp
mov
je
or
movsb
lods
xchg
lret
cltd
inc
lea
or
pushf
jle
loope
arpl
mov
imul
mov
push
cmpsb
mov
and
dec
aad
mov
lods
sbb
imul
nop
xor
lret
dec
push
pop
int
add
cmp
pusha
in
divl
fdivl
and
cmp
ss
ret
adc
add
push
pop
mov
push
aad
stos
xor
loopne
mov
rol
loop
and
xlat
push
xchg
cmp
dec
in
lods
aam
imul
cmp
sbb
rorl
or
adc
jle
or
inc
mov
sub
es
add
test
lods
mov
pop
mov
mov
jae
fcom
or
push
add
inc
inc
out
cwtl
pop
lahf
rcr
and
sarl
add
push
mov
adc
pop
aaa
jmp
jmp
lods
cmp
pop
inc
inc
jb
pushf
imul
popf
aam
test
pop
and
sahf
imul
pop
pop
xchg
adc
push
push
jecxz
xchg
shrl
daa
std
and
sub
mov
adc
inc
pop
gs
in
push
lret
adc
popa
cmp
sub
jne
sbb
dec
push
and
int3
cwtl
mov
jns
rcr
and
je
dec
cltd
dec
xor
cli
sub
int
subb
push
test
xchg
pop
fidivs
xor
mov
nop
int
lcall
cmp
xchg
in
mov
sub
push
test
outsb
jp
adc
fiaddl
cli
sbb
and
sub
rcll
cmp
cltd
je
lcall
dec
cwtl
dec
sti
and
mov
out
and
mov
out
and
dec
outsl
scas
mov
cmpsl
jne
dec
dec
mov
int
push
leave
imul
sbbb
rol
jb
hlt
inc
aam
gs
dec
sahf
lds
icebp
pop
movsl
mov
imulb
shrb
clc
shrl
lea
mov
push
out
dec
or
clc
stc
and
adc
stos
pop
mov
mov
out
cwtl
loopne
mov
mov
scas
dec
repnz
mov
cmpsl
sub
push
arpl
inc
cwtl
sub
and
lret
lahf
xor
jo
fnstenv
pop
mov
imul
pop
dec
xchg
decl
adc
add
xorb
inc
lahf
pop
into
mov
adc
xor
mov
addb
jmp
test
inc
out
fs
fdivs
shlb
rorl
test
lcall
sbb
mov
adc
cwtl
mov
cltd
into
das
fisubrs
imulb
or
mov
dec
in
sbb
jbe
jbe
cs
sbbl
adc
aaa
notl
inc
add
scas
or
fstl
add
fldenv
scas
cwtl
jge
mov
adc
lret
xchg
mov
mov
xchg
loop
fcoms
je
psrlw
dec
in
xchg
arpl
jecxz
mov
lods
mov
push
icebp
xchg
mov
stos
sahf
mov
cmp
or
cmp
fcmovne
push
xor
cmp
mov
dec
xor
jmp
xchg
repz
scas
push
inc
mov
pusha
push
scas
sub
sbb
mov
pop
sahf
ret
adc
jnp
xor
pop
and
push
popa
adc
sbb
imul
xchg
dec
test
cli
ljmp
test
ret
aam
popa
xor
pusha
ss
xchg
popf
cmpsb
push
ret
sub
lcall
lods
xor
cmp
scas
jb
test
popf
loopne
std
pop
into
add
loope
dec
pop
fidivs
movsl
adc
std
mov
pop
xchg
cmp
iret
push
cwtl
lock
andb
mov
subl
sti
rcll
loopne
or
leave
sbbb
into
ret
push
cmpb
lret
jbe
cmpsl
dec
xchg
outsl
movntps
dec
xor
cmp
insl
and
pop
into
notl
adc
test
dec
scas
push
xor
pop
cmp
jnp
fnstsw
sbb
jo
cmp
rcrb
xorb
inc
loop
rolb
arpl
jg
bound
out
insb
or
imul
adc
jo
sbb
sbb
icebp
mov
dec
mov
aas
daa
lds
xchg
mov
or
jmp
fmuls
dec
sbb
push
repnz
ss
or
sub
out
jle
out
jbe
cmp
jnp
gs
cmp
adc
fxam
dec
mov
cmp
sahf
jo
xchg
cwtl
sub
test
mov
cli
fsubl
push
lds
xor
into
adc
jns
cmp
jmp
xchg
shlb
sbbl
aad
dec
xchg
ret
movsl
add
xor
hlt
cpuid
mov
pop
fistpll
imul
arpl
bnd
arpl
les
jl
xchg
lods
subb
pop
cmp
mov
xchg
mul
inc
jae
pop
mov
je
lock
mov
arpl
adc
push
and
jge
pop
and
lret
adc
mov
into
jecxz
jl
sub
fiadds
mov
push
sbb
stos
das
push
push
pop
mov
mov
sbb
xchg
cmp
sub
sbb
sub
or
fmuls
stc
adc
sarl
inc
cmpsl
leave
ret
push
dec
stos
bound
mov
bound
jp
stos
mov
shll
xor
lcall
testb
cmpsl
xchg
jne
sub
scas
dec
scas
sub
xorb
cmp
pop
pop
subb
and
cli
fistpll
sub
scas
add
stc
xchg
add
and
adc
mov
push
add
and
inc
xchg
mov
ja
insb
stos
testl
adc
int3
xchg
lods
cmp
andb
add
dec
loopne
pop
mov
and
andb
and
jno
xor
dec
jle
fsubs
fildll
aad
fcompl
mov
and
arpl
int
inc
adc
or
call
lcall
inc
add
push
arpl
sar
mov
fildl
dec
imul
sbb
ljmp
insl
arpl
sbb
pop
jle
adc
outsl
or
xchg
mov
cld
rcrl
iret
sbb
pop
call
dec
test
into
sti
jnp
fs
dec
mov
pushf
jle
test
jne
mov
fucomp
push
jno
in
cmp
std
and
sbb
fidivl
outsl
sub
jo
adc
repnz
inc
xor
mov
add
jbe
cwtl
shr
shrl
out
outsl
cwtl
push
or
out
out
and
mov
jae
nop
andl
push
fcomps
outsb
mov
jge
sub
xor
scas
mov
mov
mov
dec
movsl
push
test
mov
or
sbb
mov
scas
cmpsb
pop
sbbb
movsb
loop
popa
movsb
pop
sbb
push
fiaddl
mov
pop
push
xchg
xor
and
repnz
or
repz
mov
cli
lret
push
insl
lahf
movd
mov
sub
out
imul
out
inc
inc
mov
loope
and
adc
fsub
mov
imulb
lds
test
into
jge
xor
pop
pop
jae
sbb
xlat
imul
jnp
lock
popf
mov
push
scas
or
inc
cli
inc
pop
inc
pop
sahf
jno
and
fs
cld
dec
pop
nop
sbb
kandw
mov
in
sub
xchg
lcall
dec
sub
jnp
pop
loopne
add
or
dec
ss
mov
sbb
sub
lock
ljmp
stos
and
loop
into
shrw
scas
outsb
pop
mov
pop
jmp
cmpl
xor
daa
or
cwtl
sti
pop
aam
sub
std
jecxz
dec
inc
sbb
fmull
mov
ljmp
sbb
sbb
inc
pop
lock
push
cmpsb
lock
pop
in
pop
aad
mov
lock
movsb
adc
jge
dec
mov
cmp
out
sbb
je
jno
dec
rcrl
adc
or
les
out
sub
inc
mov
das
cmc
enter
push
pop
enter
sub
add
xchg
mov
je
pop
sub
aad
mov
jo
popf
mov
decb
nop
fimull
or
jb
jns
xchg
dec
out
cwtl
xlat
hlt
lods
out
sbb
dec
ret
inc
sbb
aaa
sub
enter
mov
mov
je
lods
loop
lret
xchg
add
std
xchg
mov
mov
xchg
sbb
cltd
ss
or
pop
insl
mov
lret
movsl
mov
sbb
rcrl
lods
div
cmp
sahf
inc
xor
ja
decb
push
pop
nop
ja
mov
inc
test
jp
lret
dec
cltd
jnp
cmp
add
adc
xlat
bswap
and
subb
dec
mov
push
push
je
xchg
push
mov
pop
fstpt
or
mov
inc
stc
or
jp
pop
ljmp
sbb
lds
aas
int
xchg
adc
fistps
jbe
pop
inc
das
ds
push
pop
cmpsl
insb
repz
mov
mov
adc
adc
jne
mov
cmp
loop
or
addr16
cld
mov
in
lret
cmp
orb
aas
movsb
aaa
sbb
sub
jb
push
mov
daa
in
dec
mov
jnp
mov
in
mov
cmp
adc
jne
dec
jmp
inc
or
adc
jbe
and
mov
bound
xchg
cli
mov
xchg
arpl
jns
pop
adc
pop
inc
cmp
sbb
mov
sbb
cwtl
xor
test
lds
or
jne
add
dec
add
pop
iret
pop
fs
cmp
aad
ja
mov
adc
or
add
repz
add
repz
adc
inc
mov
add
lea
nop
and
sbb
js
pop
xchg
fs
xor
dec
mov
mov
mov
jmp
fsubrs
out
mov
adc
mov
lds
cmp
arpl
push
test
sub
mov
inc
pop
mov
ss
adc
push
jg
jb
repnz
negb
xchg
mov
inc
in
insb
std
inc
xorb
stc
cmpsl
sub
inc
cmp
aad
jmp
and
mov
jae
fcoms
push
les
mov
push
dec
push
cmpsb
pusha
daa
adc
out
mov
push
ret
data16
push
sub
stc
movsb
jle
dec
ja
daa
into
imul
sarb
jp
je
jg
xchg
pop
ljmp
mov
ja
int
jg
dec
mov
aas
pop
fimuls
add
mov
mov
nop
call
xchg
xchg
xor
mov
dec
nop
inc
aad
jne
daa
in
outsl
and
jmp
scas
dec
adc
mov
fiaddl
lcall
lret
and
mov
das
aaa
test
cmp
inc
pop
pop
and
mov
pop
daa
dec
repnz
das
mov
jecxz
aam
or
add
lds
roll
pop
std
cmp
pop
jmp
jecxz
cmpl
adc
adc
es
icebp
push
ds
cltd
shrb
lret
xor
mov
movsl
pop
test
cmp
popf
adc
test
in
mov
mov
lock
cmpsb
lcall
sbb
lock
jmp
insb
fists
popa
cmp
pop
sbb
pop
insb
sub
inc
data16
xchg
or
dec
mov
aaa
arpl
lea
xchg
out
adc
mov
fs
leave
inc
sub
adc
inc
orb
aas
test
loope
sti
jmp
decb
jae
sbb
test
sub
ja
or
mov
add
xchg
sub
push
xor
xor
jg
lds
jmp
rol
jge
mov
out
out
aaa
dec
stc
mov
xor
lods
inc
fisttpll
aad
jne
scas
and
mov
mov
daa
dec
mov
imul
mov
iret
pop
mov
lock
das
cmpsb
mov
out
js
pop
sub
cmp
pop
fs
pop
movsb
xor
mov
jo
dec
fwait
add
mov
xchg
clc
les
jecxz
dec
lretw
or
or
mov
cmp
outsl
xor
mov
and
cmpsb
daa
dec
ret
test
lods
mov
rcl
xor
sub
or
das
sti
sub
and
inc
test
sub
jecxz
int3
cld
and
in
and
notl
xor
sub
jnp
add
test
sub
xchg
inc
mov
xchg
and
in
xor
lods
and
loopne
mov
push
movsb
outsb
aam
popf
stc
cmp
jge
or
cs
push
pushf
inc
test
repnz
inc
cld
pop
lods
mov
repnz
sbb
xchg
xchg
enter
push
pusha
push
xlat
daa
jnp
pop
pop
fucom
loopne
mov
ret
cs
cmpb
lock
push
add
pop
adcl
stc
inc
mov
lret
sbb
cld
jns
pop
loopne
cmp
push
push
pop
cmpsl
mov
fisubs
xor
leave
dec
je
mov
mov
je
inc
ret
scas
adc
std
lahf
xor
push
rol
pop
jbe
mov
sub
mov
and
in
cmova
push
cwtl
jae
call
adc
dec
call
cmc
popa
mov
aad
mov
cmp
sub
call
jge
testb
rclb
adc
dec
fwait
dec
cmpsl
pusha
pop
and
mov
cli
push
btr
add
cmp
jmp
xlat
insl
insl
lds
ret
cmc
mov
push
fisubrs
cld
mov
pop
es
add
ret
ja
insl
and
cs
ljmp
std
ja
pop
push
or
sbb
inc
inc
xorl
adc
scas
negb
sub
mov
push
add
mov
mov
test
mov
ds
lock
xchg
dec
xchg
mov
rcrb
int3
jnp
test
inc
leave
xor
in
mov
inc
xchg
xor
js
fs
stos
add
aam
popa
shlb
in
inc
sbb
jbe
mov
mov
lret
inc
mov
lahf
icebp
inc
pop
mov
jae
inc
mov
fsub
popf
add
add
fld
adc
adc
sbb
int
mov
lock
jge
push
sub
incb
add
adc
fstpt
and
xor
popa
cltd
jp
scas
push
addl
hlt
and
imul
mov
pop
fists
orb
fsubl
jno
jae
add
repz
jno
lfs
xchg
pop
mov
mov
out
xor
jnp
xor
imul
loopne
mov
daa
mov
arpl
mov
push
inc
push
ljmp
inc
or
lea
pop
jl
aam
mov
dec
inc
aad
rol
jge
dec
push
mov
cwtl
gs
mov
lock
mov
cmp
sahf
scas
stos
lods
push
into
add
and
adc
adc
ret
cmpb
ret
pop
into
out
dec
test
sub
cmp
aaa
cmp
icebp
sub
inc
xchg
jae
push
adc
cli
mov
sbb
out
sbb
mov
mov
nop
sbb
mov
in
sub
adc
pop
mov
lret
in
gs
mov
movsl
mov
mov
stos
mov
xor
push
jo
out
dec
subl
pop
fs
jo
scas
in
rcr
lret
cwtl
shll
js
and
inc
inc
or
xchg
scas
mov
add
popa
es
lea
push
lcall
ret
cmp
rcrb
fists
repnz
cmpl
xchg
pop
xor
dec
fsubrs
adc
pusha
test
in
rclb
std
aas
mov
sti
xchg
lds
adc
pop
sahf
mov
call
ds
jne
push
mov
lods
cmp
xor
mov
mov
cmp
add
loope
icebp
cmpsb
sbb
movsl
loopne
leave
fmul
xchg
cmp
mov
mov
inc
sbb
push
cs
in
dec
fnstenv
xor
push
jmp
jg
mov
mov
mov
mov
fdivrl
addl
and
xchg
adc
push
jnp
pop
cwtl
shlb
out
jp
rol
out
enter
hlt
adc
jge
sbb
adc
pop
cli
xchg
dec
cmp
or
jp
mov
cltd
leave
sbb
pop
cmpsl
ret
fsubs
dec
repz
outsl
sub
movsl
ja
daa
pop
xchg
dec
imul
imul
adc
inc
ss
aam
xchg
adc
sub
inc
stos
dec
sub
mov
adc
lahf
test
ja,pn
xor
call
imul
sbb
popa
insb
mov
dec
and
adc
dec
add
cmc
pop
pop
xchg
hlt
hlt
push
popa
popf
scas
jae
lret
cmpsl
inc
inc
sbb
mov
outsl
cmc
fcoml
insl
pop
mov
in
popf
and
loope
or
or
or
push
mov
push
inc
xor
push
xchg
xlat
xchg
arpl
mov
ret
popa
cmp
std
pusha
inc
dec
adc
xchg
or
movsl
mov
mul
jmp
and
jg
bound
dec
int
lahf
fidivs
dec
enter
lret
sub
stos
jg
add
mov
pop
sub
xchg
pop
pop
or
inc
xlat
or
nop
cli
jecxz
mov
std
or
aaa
push
mov
roll
pop
cwtl
pop
xchg
sbb
push
dec
mov
jecxz
jne
xchg
imul
xor
dec
jmp
std
jmp
sahf
xchg
mov
jno
aas
pop
adc
adc
and
cs
std
cmc
and
cmp
popa
insl
and
imul
aad
push
jb
pushf
pop
xchg
std
mov
mov
in
dec
scas
and
sahf
int3
popf
dec
into
sbb
fldenv
sub
cli
or
ret
sub
loopne
mulb
inc
add
pop
xchg
push
inc
mov
inc
mov
jae
test
xlat
and
insl
adc
into
jns
xchg
ds
call
popf
leave
cmp
or
lretw
ret
mov
xor
fistl
arpl
jne
cmpsb
imul
fisttpll
jb
in
les
shr
jns
aaa
and
xchg
mov
stc
inc
icebp
fildl
cmp
and
ret
xchg
fisttpl
sub
xor
add
adc
fsubl
sbb
mov
test
dec
mov
test
mov
add
jmp
insl
int
insb
dec
bound
inc
sbb
fbstp
mov
sub
out
and
ds
fidivrs
pop
pop
cwtl
cmp
xor
dec
test
call
fucom
fldenv
mov
test
xchg
pushf
push
sti
mov
lods
shrb
ficompl
or
jmp
cmp
pop
daa
dec
test
cltd
mov
sbbl
scas
add
imul
lds
cli
ds
outsb
inc
repz
sbb
repz
leave
scas
insl
xchg
inc
sub
xlat
mov
push
jnp
pop
and
dec
push
rorb
cld
movb
push
repz
stos
push
outsb
inc
in
addr16
pop
or
addr16
xchg
push
adc
or
insl
and
into
or
lret
cmp
movsb
push
adc
xchg
push
into
cwtl
out
jp
mov
rcrl
pop
scas
adcl
push
push
sub
sub
sub
int
and
das
xor
mov
out
arpl
pop
fwait
sub
xor
cmpsl
cld
es
inc
shrb
and
dec
dec
sub
call
dec
insb
pop
mov
xor
addr16
mov
cwtl
push
cltd
xchg
sti
aaa
outsb
hlt
jmp
inc
bound
fldlg2
scas
loope
add
jle
inc
dec
inc
aam
jg
xchg
insb
mov
pushf
push
out
imul
test
inc
push
ds
dec
loopne
dec
fcmovb
shlb
das
sbb
push
call
add
scas
lahf
cld
arpl
into
ds
or
cs
es
jnp
mov
das
idivb
cmp
add
jne
data16
jnp
pusha
dec
addb
mov
xchg
jecxz
sarb
push
xor
jg
fs
push
aad
push
aam
in
mov
jbe
popf
ljmp
sub
lret
add
mov
mov
add
mov
int
popa
cmpsl
xchg
out
fnsave
dec
jns
test
pop
xchg
mov
pop
jmp
sub
xor
xor
xor
cld
out
repnz
dec
loop
shll
xchg
shrl
or
test
test
sarl
es
es
sbbl
sbb
jae
jmp
jb
push
and
fadds
cs
sub
dec
arpl
movsl
or
orb
jb
mov
ss
mov
ret
xor
add
or
ds
xor
out
sbb
inc
repz
mov
frstor
add
mov
mov
add
repnz
scas
arpl
adc
enter
jne
fidivrl
dec
repz
leave
xchg
add
jge
pop
jg
and
mov
sbb
jns
dec
inc
leave
mov
mov
adc
cmp
in
and
dec
je
lods
iret
into
mov
push
mov
pop
or
imul
lods
es
adc
mov
add
in
push
cmpsb
in
cltd
divb
lret
push
jae
aam
xchg
and
cmpsb
cmp
call
jmp
xchg
mov
lock
lret
or
sti
std
test
sub
popa
jae
fcmove
enter
inc
inc
and
clc
and
les
mov
das
sar
mov
dec
sub
xchg
les
jecxz
dec
pusha
sbb
dec
out
lret
iret
sbb
dec
scas
fwait
cmp
mov
and
xor
pushf
push
mov
aas
add
dec
stos
mov
xor
push
sub
jmp
popf
sub
in
mov
or
mov
cmp
fcmove
ret
push
aaa
cwtl
or
test
jecxz
jnp
dec
mov
jnp
jne
dec
xor
pusha
xchg
syscall
cmpb
stos
lock
and
cwtl
adc
cltd
test
mov
dec
push
js
scas
xorb
or
add
loopne
in
repnz
push
sar
mov
jp
or
ret
xchg
sub
pop
lods
out
or
daa
insl
cmpsb
insb
ret
pop
mov
stos
xlat
in
sub
out
xchg
and
scas
cmc
mov
dec
movsl
insb
fisubrs
fimuls
rclb
lea
rcr
sub
ret
add
cmpsb
pop
mov
dec
addb
mov
dec
add
push
pop
push
divb
adc
xor
cld
mov
xchg
loope
test
pop
adc
dec
mov
test
pop
dec
lock
pushl
xchg
push
rorb
cmp
mov
scas
jp
cld
sahf
add
sbb
push
in
or
mov
xchg
xchg
add
js
adc
push
insb
push
ja
mov
mov
inc
inc
and
data16
jne
clc
cmpl
in
in
outsb
jb
sub
xchg
test
push
ljmp
pop
mov
ja
jecxz
out
das
imul
sub
or
mov
clc
adcl
and
inc
sub
jle
or
arpl
sub
pop
clc
loope
arpl
es
push
test
mov
bound
mov
or
aas
es
mov
mov
in
pop
ds
dec
jp
xor
shl
push
xchg
pop
std
cmp
stos
out
inc
add
addr16
push
addl
inc
inc
aas
mov
mov
pop
cmp
sahf
sub
xchg
pop
pop
popa
and
ret
sahf
and
push
rol
or
sbb
sarb
scas
and
imul
and
lret
push
and
fs
loopne
or
stos
cmp
pop
or
mov
and
loop
adc
pop
jnp
sbb
cli
jne
scas
mov
mov
cmp
incb
sbb
xchg
in
pop
lahf
pushf
xchg
cs
mov
jne
sbb
sub
in
scas
out
pusha
inc
or
das
leave
push
nop
sub
testl
mov
cmp
sub
xchg
insb
icebp
adc
daa
or
cli
mov
sarl
jbe
dec
and
fisttps
xlat
jl,pt
mov
mov
push
in
movsl
in
mull
pop
test
dec
mov
cmp
inc
inc
mov
xor
xchg
xchg
int3
fsubs
cmp
push
aad
aam
addr16
sub
cmp
outsl
mov
jns
call
clc
je
sub
jmp
rorb
pop
out
cmpsl
push
cmp
sbb
push
je
xor
jno
mov
dec
ja
jg
jno
fisttpl
sub
sub
pop
out
push
and
add
in
sbb
inc
inc
sar
jnp
out
mov
enter
push
add
and
jg
add
xor
mov
dec
mov
cmc
lea
push
sbb
jg
test
or
leave
fwait
imul
notb
dec
cli
push
in
mov
sbb
lcall
cmp
pop
clc
rolb
in
imul
repnz
mov
gs
add
push
cwtl
xor
mov
push
ret
sbb
mov
mov
outsb
ss
mov
flds
xor
fisubrs
and
out
dec
mov
lcall
shll
out
loop
lret
je
xor
lahf
adc
jle
adc
out
out
int
shrb
hlt
inc
lods
mov
out
inc
mov
pop
loop
adc
clc
add
loope
xchg
pop
out
cmpsl
cmpsb
mov
mov
add
jo
test
and
push
lret
mov
inc
cmc
scas
lret
mov
cmp
jbe
inc
dec
push
xlat
in
xchg
jg
mov
add
inc
push
cmp
xchg
lods
dec
dec
mov
sub
cmpsl
addl
pop
dec
mov
cs
mov
mov
loopne
inc
jl
sub
mov
jne
xchg
decb
aas
icebp
fdecstp
pop
aad
int
xchg
stc
pop
mov
orl
pop
jbe
sub
sbb
jns
xchg
push
jecxz
xlat
add
rcrl
mov
sub
mov
ja
push
push
or
xor
jmp
cmp
add
sbb
imul
xacquire
call
mov
add
test
or
or
jmp
mov
loope
insl
jns
scas
pop
lods
adc
add
adc
cmp
iret
adc
jnp
call
sub
js
fsubs
push
lcall
lcall
add
repnz
pop
cltd
popa
mov
add
sbb
pop
push
sbbl
inc
lods
ss
cmc
enter
das
inc
cpuid
xchg
jge
lret
fcmovbe
xchg
lret
pop
insl
xor
xchg
jbe
imul
pop
xor
mov
gs
mov
mov
ss
das
mov
arpl
scas
cli
or
cmp
hlt
ret
push
lods
sub
aad
rorl
ret
fidivs
inc
pop
int3
iret
adc
push
or
mov
cmp
filds
add
jle
xorl
fcoml
repz
movsl
cmp
dec
sbbl
adc
shr
adc
jg
out
aam
cmc
jae
setns
stos
or
and
sub
jb
xor
lock
push
add
and
push
scas
enter
es
mov
cmpsl
adc
mov
mov
adc
in
out
inc
int3
aaa
out
fcmovnu
insb
sub
cmp
imul
mov
out
inc
jg
mov
xchg
xor
xchg
and
inc
sahf
mov
push
lods
hlt
or
inc
inc
pop
pop
or
lods
ret
add
pusha
cmp
iret
sbb
dec
cmp
div
sti
cmpsb
xchg
push
ja
mov
out
out
and
xor
lahf
sbb
sbb
lahf
fsubrl
jmp
in
add
lahf
mov
cmp
lods
mov
push
xchg
pop
fistpl
ret
jns
cli
leave
les
imul
push
rclb
mov
mov
add
adc
bound
cli
outsb
rol
out
add
adc
jae
xor
int3
mov
and
sti
std
pushf
sti
jnp
mov
cmc
in
or
push
dec
add
lret
pusha
push
mov
sar
mov
pusha
subl
mov
pushf
inc
jno
fwait
shr
add
imul
je
cli
and
push
sub
xchg
mov
insl
cmpsl
clc
xor
clc
call
hlt
rclb
cmp
loopew
repz
push
inc
mov
lods
or
mov
scas
mov
rcll
mov
add
cmp
xchg
lea
lods
movsb
xor
xchg
rorb
loopne
test
sub
shrb
inc
xchg
xchg
sub
xor
dec
loop
jnp
dec
enter
cmp
xchg
sbb
jae
sub
ljmp
pushf
cli
pop
dec
clc
push
fnstenv
imul
adc
test
sbb
pop
sbb
cmp
in
movsl
lods
dec
movsl
inc
dec
insl
sbb
out
aas
daa
mov
dec
sahf
mov
push
outsl
mov
push
ficoml
icebp
fstps
inc
daa
jo
sub
int
jg
cli
jbe
insb
push
mov
roll
xchg
jb
jb
ret
push
movsl
sub
iret
jg
mov
enter
out
sbb
and
jne
shrl
stos
imul
fcomp
std
and
mov
mov
push
cmp
bound
xchg
stos
test
int3
pushf
push
jnp
pusha
inc
and
or
mov
mov
std
or
mov
fmuls
cwtl
mov
jne
mov
push
mov
and
inc
mov
cmp
sub
shll
cmp
rcrl
nop
frstor
fwait
icebp
ret
lret
sub
jge
sub
mov
daa
sar
cmpsb
sub
xchg
repnz
out
dec
fbld
mov
adc
sub
pop
mov
icebp
mov
into
orl
adc
cld
sub
mov
push
mov
or
pop
pop
or
icebp
mov
and
insl
js
shl
cmp
sub
movsl
jb
hlt
adc
sub
loope
hlt
inc
push
push
xchg
scas
xchg
and
aam
sbb
jne
add
xchg
int
mov
incb
movsl
pop
je
les
not
pop
loope
fwait
push
lods
pop
in
lods
sbb
cwtl
dec
fnstsw
dec
in
sbb
sbb
nop
loope
js
pop
jo
daa
or
cmp
aad
jb
push
lret
mov
mov
jo
das
fists
mov
xchg
es
add
aas
mov
inc
mov
ljmp
xadd
movsb
xchg
cmp
imul
or
andl
bound
lret
mov
push
inc
lret
clc
xor
insb
mov
mov
add
outsb
push
push
pop
cmp
pop
icebp
xor
and
mov
movb
loopne
xchg
leave
xor
sti
xchg
ljmp
divb
pop
add
dec
mov
mov
hlt
xchg
mov
cmc
aam
loope
call
daa
and
gs
xchg
xor
mov
test
jp
adc
dec
ja
js
loopne
jmp
negl
sbb
outsl
jb
imul
lcall
pop
sti
jns
add
dec
or
cmp
stos
lods
and
mov
repnz
imul
sub
dec
add
dec
push
pop
xor
cmp
xchg
inc
rcrb
daa
test
dec
mov
xchg
stc
xchg
loopne
cs
clc
adc
jp
jnp
jp
imul
cs
ret
add
adc
sbb
mov
jge
jno
inc
dec
mov
sbbb
dec
push
push
dec
lea
outsl
push
ret
ss
add
std
out
or
int
repz
jle
xchg
incb
test
mov
xor
fsubrl
inc
aam
xchg
mov
add
ret
lock
push
je
mov
fidivrs
dec
push
loop
pop
fsubr
sti
mov
mov
sbb
test
addr16
pop
loopne
mov
out
mov
fidivs
adc
mov
jae
test
lcall
popf
push
cmp
push
pop
in
cmp
aad
xchg
out
aam
xchg
cmpsl
ja
inc
incb
mov
call
xchg
orl
scas
and
mov
in
mov
jns
cmc
aad
mov
leave
push
je
sub
mov
lods
sbb
outsl
shll
fistl
mov
cmpsb
stos
fstp
das
xor
pop
pop
mov
jmp
call
xchg
mov
popf
bound
stos
pop
lahf
ss
or
lea
cmpsb
xor
out
inc
aad
mov
mov
ficompl
repnz
mov
or
mov
push
imul
mov
imul
or
scas
add
andl
and
mov
mov
aam
sub
push
rorl
leave
out
push
inc
cmpsb
sahf
scas
leave
xchg
lea
insb
xchg
addb
mov
cltd
aad
xlat
xorl
pop
or
fbstp
sbb
cmp
mov
xchg
cmp
lahf
jl
and
mov
pop
nop
negb
mov
loope
stos
test
shll
fisubs
loope
rcll
cmp
pop
cmp
in
and
fcomp
mov
in
fcompl
clc
dec
or
mov
arpl
js
icebp
add
xlat
inc
ret
push
daa
mov
xor
jl
xlat
push
adcb
lret
test
xchg
imul
jne
aam
pop
inc
jle
jae
ja
daa
xchg
mov
out
popf
xor
daa
dec
in
jl
aad
cltd
inc
ret
mov
inc
push
sbb
in
pop
out
stc
test
fimull
and
jns
repnz
jb
test
xchg
push
pop
fs
pop
lret
dec
fs
dec
jmp
cli
mov
or
icebp
imul
sahf
pushf
push
je
lods
jnp
aas
cmpsb
fsts
adc
mov
xchg
pop
add
add
mov
xlat
inc
sub
gs
data16
xor
insl
or
or
aas
daa
or
add
outsb
dec
mov
pushf
push
xor
adc
movsl
and
cwtl
push
int3
push
pop
les
stos
or
and
jecxz
mov
inc
addb
mov
mov
push
cmpsb
cmpsb
loope
dec
pusha
pusha
out
mov
repnz
inc
xor
fistpll
push
loope
push
dec
cmp
push
aaa
pop
xorb
or
mov
fwait
push
lods
shrb
addr16
aad
sub
add
xor
fwait
xchg
xor
jno
inc
or
ss
mov
cltd
mov
sbb
push
gs
clc
pop
loopne
cltd
pop
ret
sub
cmpsb
jns
xor
cmpsb
inc
adc
sahf
bound
inc
enter
lods
subb
bound
mov
dec
icebp
xchg
sub
leave
push
mov
mov
rcr
mov
gs
das
and
clc
pop
aaa
mov
mov
lds
and
ds
std
shrb
jmp
mov
ret
rol
test
sbb
pusha
add
fistl
push
aad
fadd
popf
and
mov
cmpsl
dec
cld
jbe
xchg
dec
js
into
popa
mov
xlat
les
mov
popf
es
lret
xlat
cmp
or
jge
lds
movsl
sahf
adc
mov
idivb
dec
shll
insl
adcb
fnsave
rcll
push
jge
mov
scas
cmc
test
xor
inc
adcb
in
jnp
inc
pop
out
jle
xchg
shrb
pusha
test
dec
jne
xchg
adc
popa
bound
outsl
out
fisttpl
arpl
insl
dec
pushf
adc
pop
ljmp
dec
daa
dec
inc
jecxz
lcall
pop
or
adc
lea
lahf
in
repnz
add
out
push
jnp
sbb
pop
add
cmp
imul
jmp
xchg
aas
sub
inc
sbb
lahf
lcall
jle
ficompl
aam
push
arpl
pusha
jl
inc
push
add
out
data16
scas
lods
repnz
ret
jne
mov
inc
aas
out
jns
push
popf
push
das
inc
pushf
adc
out
xchg
stos
push
bound
rorl
mov
inc
testl
imul
jbe
inc
mov
sahf
sar
fldl
cmp
mov
xor
jmp
mov
jns
inc
test
or
inc
imul
clc
dec
jg
nop
notb
dec
push
inc
stos
lock
test
enter
jb
mov
dec
add
push
jl
mov
es
push
or
pop
pop
shlb
pop
popa
and
rcll
jb
jecxz
test
cli
xor
cmp
rol
imul
sbb
lods
ret
adc
insb
push
pop
fidivrs
jbe
repnz
push
inc
dec
insl
iret
ficompl
ret
sub
add
out
das
mov
jae
inc
jle
xor
divl
cmp
xchg
nop
sub
jmp
pop
inc
mov
sbb
popa
sbb
push
int3
pusha
scas
sarb
jnp
mov
fildl
pop
adc
movsl
cmp
adc
arpl
push
stos
jg
push
inc
in
lret
cmp
sub
dec
push
sub
xchg
ret
adc
stc
clc
dec
stos
ret
jne
xchg
fdivs
sbb
pop
sar
scas
aaa
lods
sub
jae
rorl
pop
mov
push
pop
aaa
push
mov
clc
inc
dec
jge
push
out
icebp
sbb
xchg
mov
fsubl
rorb
aad
dec
mov
jae
mov
adc
cwtl
int3
cltd
mov
in
adc
js
enter
xchg
add
cmc
ja
pop
jmp
xor
ror
adc
lods
adc
pusha
jecxz
leave
out
je
jp
cwtl
mov
push
jp
add
sbb
mov
pop
and
fdivrs
mov
push
out
dec
jnp
adc
aam
lods
cmp
or
sbb
mov
cmp
and
push
push
mov
andb
dec
mov
ret
test
fsubrl
cltd
loopne
data16
xor
test
pop
sbb
es
or
imul
mov
mov
into
inc
jnp,pt
out
or
inc
jmp
jmp
ficompl
in
mov
inc
fdivr
adc
lock
pop
cmpsb
fmull
mov
mov
dec
subl
sub
pop
adc
push
or
cmp
sub
mov
xchg
imul
adc
cmp
popf
out
jl
das
cmc
loope
jb
test
mov
lcall
xlat
pop
mov
adc
xchg
jp
xorb
lods
hlt
add
leave
jge
jbe
or
jb
xor
jne
mov
pop
jl
sub
ljmp
cmp
cmp
add
mov
and
or
push
loope
cmpsb
pop
call
push
mov
adc
push
ret
xlat
hlt
push
pop
and
es
outsb
mov
sbb
xlat
mov
push
push
cmp
loop
add
int3
xor
enter
call
push
cmp
mov
jl
jno
or
ss
mov
cs
mov
test
push
ds
bound
sbb
popf
sub
pop
test
cli
jbe
and
jae
cmp
clc
nop
cltd
push
and
sbb
push
mov
sbb
lret
and
popa
test
mov
lcall
jbe
dec
pop
mov
test
push
in
popf
sbb
xor
int
xchg
sbb
fincstp
push
lcall
pop
in
lahf
ja
fbstp
movsl
loop
les
xchg
inc
test
push
fdiv
das
adc
popf
int3
add
das
add
and
jno
shrl
clc
scas
mov
test
in
add
in
dec
cmpsl
data16
sub
add
mov
orl
pop
rorl
adc
out
mov
xchg
mov
jae
xor
sub
lock
xor
push
cmc
sub
scas
popa
test
and
lcall
push
add
sub
jmp
sub
enter
out
push
push
les
fs
fbstp
jbe
adc
and
in
sti
flds
add
xchg
or
rcrb
jo
jecxz
add
rorl
icebp
dec
iret
sub
or
fsubrs
jbe
scas
aaa
lods
jmp
adc
xchg
mov
inc
iret
xor
xchg
fldt
out
adc
sub
bound
push
or
jle
and
cmp
dec
mov
pushf
adc
inc
outsb
and
jbe
lcall
mov
outsb
cmpsb
pop
add
pop
adc
stos
push
mov
clc
dec
cs
rorb
ret
inc
in
inc
inc
cwtl
cmp
aam
xor
sub
and
push
fwait
pusha
sbb
push
inc
mov
push
inc
inc
and
loope
cwtl
or
into
or
aaa
cmp
pop
leave
adc
sub
stc
push
arpl
or
jb
addr16
mov
pop
imul
mov
add
jg
imull
loopne
push
lds
jp
cvtpi2ps
mov
dec
int
clc
mov
inc
cmpsl
test
stos
imul
jle
mov
adc
xchg
xchg
shll
or
outsl
xchg
push
icebp
lret
mov
fsubp
aaa
xchg
or
mov
add
cwtl
cs
in
pop
sbb
arpl
pop
popa
pcmpgtw
pusha
in
jbe
inc
adc
fwait
or
out
mov
ret
outsb
enter
mov
dec
cwtl
int
mov
sbb
sbb
fdivrs
adc
cmp
ljmp
jle
and
jmp
insl
lods
rcll
adc
loope
pop
push
icebp
in
fcmovb
movsb
mov
cmp
in
jbe
loopne
sub
sub
mov
cmp
fldz
iret
jecxz
leave
stc
jns
or
cmc
jecxz
leave
push
fimull
pop
mov
push
lds
rcrl
mov
jp
ljmp
dec
xchg
adc
and
into
sub
lods
pop
jae
xor
int
push
repnz
mov
fdivrs
mov
xchg
sub
sub
shlb
arpl
adc
jae
div
popf
sbb
jno
jecxz
inc
fs
repz
sti
inc
pop
ds
or
ficompl
push
in
clc
repz
mov
in
sti
jle
test
cmp
pop
dec
fs
mov
pop
popf
out
rorb
andl
in
jg
addl
addr16
test
jne
dec
jl
mov
das
and
arpl
pop
mov
mov
insl
mov
int
push
inc
sbb
push
sub
test
pop
repnz
and
cld
and
sbb
stc
stc
dec
inc
std
call
dec
push
cmc
jnp
add
icebp
jl
sbb
adc
xor
mov
push
jno
mov
mov
xor
pushf
sti
cli
jb
push
sti
or
add
pop
add
pop
sub
mov
mov
js
jbe
movl
test
jle
sbb
mov
push
dec
outsb
xor
add
mov
sbb
arpl
fidivrl
and
sub
dec
cmpsl
sbb
add
gs
add
dec
adc
mov
jg
fisubl
xchg
stos
jns
dec
xor
lea
mov
enter
rorl
jns
cwtl
mov
fimuls
mov
sbbb
shll
in
and
test
outsb
int
sbb
sbb
sub
test
mov
test
xor
out
iret
fwait
es
out
inc
inc
cmp
jmp
lahf
inc
js
fwait
in
xchg
mov
insb
mov
sbb
or
insb
add
popa
push
ljmp
push
ss
push
pop
add
addr16
scas
cld
dec
cmp
ja
jno
mov
ljmp
sbb
mov
cmp
push
fstps
mov
jo
repz
cmc
xchg
imul
and
mov
dec
adc
mov
subl
stos
xchg
or
dec
ret
fldenv
movsl
je
jge
shrb
movsb
sub
stc
iret
adc
cmp
sbb
sbb
push
lock
push
ds
aaa
dec
sbb
lcall
push
fbld
jge
pop
cli
or
xor
loopne
mov
mov
cmp
mov
mov
int
add
xor
sbb
jg
mov
xchg
xchg
and
fstps
imul
add
hlt
push
addl
cli
sub
cwtl
loope
xchg
xor
scas
int3
addl
push
mov
test
mov
lret
push
mov
lret
test
jae
enter
fcoms
adc
pusha
sbb
bound
test
cmp
aad
fdivr
out
pop
loopne
enter
sbb
paddq
push
and
push
push
xchg
ljmp
lahf
aas
mov
loopne
sti
xchg
push
mov
stos
out
imul
loope
sbb
mov
shlb
xchg
mov
and
jo
push
rcl
aad
lods
add
mov
imul
dec
aad
dec
or
inc
inc
es
adc
push
xor
and
leave
test
iret
jl
adc
pop
mov
mov
push
aad
lds
aam
clc
cmp
mov
push
xor
outsl
hlt
shrl
sub
nop
xchg
sbb
pop
adc
cwtl
jbe
lds
dec
scas
mov
add
push
lcall
out
nop
mov
push
mov
xlat
jl
or
out
cmp
faddl
xor
aam
orb
dec
jle
fs
in
dec
cmp
or
clc
inc
cli
fildll
mov
cmpsb
mov
aad
loop
test
sbb
and
enter
push
outsb
je
cltd
daa
xchg
or
imul
test
lock
test
adc
fildl
mov
push
or
adc
aad
xorb
iret
cld
sbb
add
mov
das
xor
adc
dec
icebp
ffreep
in
lods
sahf
rorb
scas
dec
lods
inc
out
add
call
and
add
mov
fnstsw
insb
fwait
movsl
bound
stos
es
xchg
out
pop
jo
out
cmpb
aas
ret
test
loop
lret
xchg
aam
adc
insb
lock
mov
add
mov
jbe
leave
xchg
xchg
mov
test
pop
ds
enter
sbb
or
mov
add
pusha
mov
leave
dec
into
push
mov
and
push
addr16
cs
add
adc
and
mov
test
xchg
jmp
stc
lods
add
cmp
mov
lds
adc
out
sbb
in
loop
mov
sbb
jo
dec
mov
sahf
stos
data16
shrl
jge
mov
adc
and
mov
sahf
fwait
outsb
jnp
jb
data16
mov
repz
inc
jecxz
add
adc
sub
in
adc
and
clc
cmp
mov
xor
push
and
add
fwait
outsl
es
stc
sti
les
xor
adc
lods
cltd
dec
hsubpd
jp
sub
mov
xchg
push
pop
mov
stc
pusha
mov
stos
subl
cmp
xchg
mov
shr
xchg
bound
outsb
hlt
xor
int3
not
insb
inc
mov
loop
pushf
xlat
out
pop
xchg
sub
mov
jae
test
aad
pop
push
loopne
mov
pop
mov
jg
fmulp
decb
mov
pop
std
xchg
push
call
jmp
cmpsb
sub
push
pushf
sub
mov
incl
cmpl
inc
lret
addb
int
mov
sbb
dec
sti
xchg
jp
daa
push
lret
xchg
int
inc
and
data16
jecxz
mov
arpl
stc
mov
stc
int
cmp
mov
push
fucomp
xor
xchg
shl
dec
and
loopne
cmc
nop
test
push
fsub
andl
rclb
push
and
push
cmp
jns
or
mov
rorl
lea
mov
add
mov
mov
fwait
test
pop
mov
sbb
into
jae
adc
inc
scas
and
aaa
pop
and
insb
sti
jge
xchg
pop
aam
push
stos
push
jno
push
in
cmpsl
int3
scas
mov
adc
or
push
push
lock
call
gs
pop
loope
sbb
negb
hlt
mov
int3
pop
push
pushf
xor
cmc
lret
xchg
mov
xchg
es
cmp
push
addl
lods
dec
out
out
imull
cld
popa
fcomip
xor
shrb
fisttpll
mov
mov
push
xor
idivl
movsl
or
lret
jo,pn
pusha
and
inc
pop
push
xchg
popa
fadd
test
sub
scas
rorb
push
fwait
jne
lcall
std
push
pop
mov
call
cld
aad
mov
or
mov
not
mov
aaa
xchg
jo
push
dec
pushf
insb
int3
add
ja
in
cmovge
xchg
idivb
adc
lock
push
dec
into
std
xchg
ljmp
pop
jns
and
sub
jnp
popa
cmpsb
cmpsb
push
dec
loope
jne
call
ret
jecxz
mov
push
cmp
outsl
insl
je
cld
cltd
xor
pop
dec
je
xchg
dec
gs
cmp
xchg
insb
jo
push
fistps
mov
push
insb
and
or
cmp
and
cmpl
lcall
dec
jbe
mov
in
mov
sbb
iret
xchg
sar
add
jecxz
mov
sbb
je
or
das
cmp
xor
cmpsl
inc
fldt
or
add
or
jae
lds
and
add
push
jo
and
cld
cmp
fidivs
repnz
shl
and
xchg
sbb
imul
stos
mov
out
hlt
jle
ljmp
enter
jmp
or
aad
cmp
popf
lock
test
cmp
pop
ljmp
dec
cli
or
adcl
imul
int3
jno
icebp
int
sbb
pop
push
push
mov
inc
mov
and
mov
add
pop
dec
push
add
xor
add
scas
pop
insb
add
jns
fsts
dec
in
mov
sbbl
lods
jo
push
cmp
pop
outsb
lock
mov
mov
mov
call
bound
xchg
das
xor
lock
sub
mov
outsl
push
hlt
aas
xchg
cld
cmpsl
push
fs
mov
add
in
jb
push
je
cwtl
pusha
sub
icebp
sub
xor
out
fldl
adc
dec
sbb
xor
or
movsb
ds
stos
inc
loope
or
sub
outsl
movl
fs
mov
xchg
out
mov
insl
movsb
daa
es
push
testl
cmp
pop
int3
jge
neg
fwait
adc
jle
dec
add
in
cmpsb
sub
mov
test
sub
mov
cltd
or
mov
inc
jge
mov
clc
popa
or
lods
cmp
cmp
dec
or
lcall
insl
and
sub
scas
insl
and
cmp
cmpsb
dec
pushf
sahf
jp
sbb
pop
test
daa
mov
mov
subps
out
dec
add
data16
and
es
sub
rcrb
jno
aam
dec
loope
lds
pop
mov
in
mov
jb
fdivl
cmp
pop
add
fwait
hlt
mov
mov
xchg
inc
ss
repnz
jmp
out
jbe
loopne
subl
loopne
loopne
jp
jle
packssdw
push
pop
push
ror
pusha
fs
gs
hlt
and
in
dec
sub
repnz
sbb
and
dec
mov
lret
sub
dec
mov
sbb
push
repnz
mov
push
xor
mov
jo
nop
pop
push
xor
decl
push
mov
add
in
inc
out
je
stc
and
xchg
mov
ret
xorb
mov
test
loop
and
lahf
xchg
cwtl
cli
cwtl
fld
std
ds
jge
test
inc
mov
pop
cwtl
outsl
pop
push
or
pop
adc
push
jbe
push
jnp
add
mov
xchg
ds
andl
push
clc
cmc
andb
dec
xchg
or
lock
pop
aad
in
aas
dec
inc
mov
pop
push
sbb
fcoms
hlt
push
push
xchg
inc
cmp
pop
or
imul
add
int3
adc
push
insl
dec
scas
stos
xchg
pusha
sarl
sub
arpl
stc
ljmp
std
sub
aaa
and
int
fwait
std
ds
adc
andb
dec
sub
or
addr16
push
nop
mov
fxch
mov
cwtl
xor
dec
cmp
dec
iret
push
dec
test
rclb
mov
xor
inc
inc
and
and
jno
sub
fnstcw
add
mov
push
cs
shrl
ss
pop
lea
xchg
arpl
out
mov
mov
push
lahf
xor
iret
in
fwait
sub
jge
std
cmp
int
push
lea
aaa
inc
ret
mov
into
stos
test
mov
mov
dec
xchg
jns
xchg
dec
and
push
push
call
and
dec
push
cmp
mov
and
add
sub
push
popa
cmp
into
popf
negb
int3
lea
xchg
mov
mov
sub
add
mov
out
push
xor
call
xchg
fcomi
push
data16
test
outsl
mov
pop
push
les
xchg
mov
imul
inc
rcrb
movsb
or
shrl
sbb
mov
repnz
or
pushf
mov
pop
mov
stc
outsl
ret
xchg
arpl
stc
cmp
mov
bound
cmpsb
mov
inc
inc
jne
push
imul
repnz
adc
in
sbb
jne
les
insl
mov
fwait
cwtl
xor
cmpsb
rorb
fs
or
xchg
stos
xor
inc
enter
fcoms
les
cmpsl
mov
push
pop
pop
shr
and
rcll
ds
enter
push
lds
cmpl
fdivl
fdivrp
push
pop
cmpsl
inc
add
roll
pop
push
test
es
fnstcw
jne
lcall
and
pop
mov
cmpsb
fwait
mov
or
xlat
push
inc
fldenv
std
shlb
dec
sub
adcb
dec
insl
test
fdivl
das
mov
xchg
pop
xor
cmp
mov
pop
add
push
call
sbb
jmp
push
hlt
je
mov
sar
mov
mov
push
dec
rep
lds
xor
call
or
fnstcw
inc
rcrl
sub
stc
xchg
cli
and
mov
jb
push
sbb
or
dec
jb
lods
jb
cmpl
loopne
movsl
push
ret
mov
jo
adc
mov
sub
xor
mov
scas
fnstenv
push
pop
in
mov
dec
ret
in
xor
pop
lock
int3
push
fwait
dec
jns
add
or
xlat
jp
test
cmpsb
mov
jmp
cmp
mov
push
dec
add
mov
aad
std
push
pushf
pop
popa
mov
dec
test
frstor
pop
in
push
std
and
jg
lds
mov
fsubrs
jns
mov
mov
mov
xor
adc
mov
jle
fisttps
sub
test
rcll
cli
mov
add
jle
mov
ficompl
in
mov
leave
cmp
inc
xlat
sbb
adc
pop
push
or
mov
pop
and
mov
push
mov
or
dec
test
jmp
jmp
pop
rorl
push
dec
xchg
js
jecxz
scas
pop
push
pusha
test
mov
out
lret
dec
sbb
dec
lock
jne
mov
xor
imul
push
sub
and
iret
pop
shll
adc
jno
cltd
insb
icebp
cmp
popa
out
mov
pop
inc
subl
mov
mov
push
cmp
movsl
cmp
jo
outsl
cmp
dec
es
push
icebp
mov
and
push
adc
sbb
lds
hlt
adc
xchg
cld
push
adc
je
lcall
cmp
or
cmpb
repnz
into
jae
add
jp
aad
xchg
pop
add
push
mov
inc
push
iret
push
cmp
inc
test
or
xchg
sbb
pop
jb
push
xor
xchg
lea
rcrb
xchg
aas
adc
add
imul
cmp
out
dec
ret
inc
fwait
push
mov
js
loopne
pop
adc
in
adc
fcom
pushf
xchg
out
mov
xchg
inc
mov
aam
dec
subps
out
dec
jp
or
sahf
jge
scas
aaa
pop
and
pop
sbb
inc
sahf
lods
or
xchg
fwait
dec
mov
xchg
add
mov
ljmp
dec
xchg
bound
inc
xchg
out
add
sar
int3
jl
adc
xor
push
mov
addr16
sahf
jg
imul
push
jecxz
xchg
mov
and
shr
gs
mov
aas
sahf
dec
mov
in
stos
fcomip
nop
ja
push
lcall
ficompl
mov
xor
fchs
mov
inc
push
jo
jno
cmp
and
addb
mov
xor
shr
jnp
aam
repnz
sub
or
loop
aaa
lea
int3
push
repnz
cwtl
in
data16
jns
sbb
daa
adc
mov
loopne
fwait
xor
pop
or
xchg
ja
adc
cmpsb
jle
sub
mov
arpl
pop
dec
mov
pop
push
aaa
test
ret
pop
fdivs
or
jmp
aas
sti
test
or
push
ss
icebp
push
in
jle
sahf
out
or
data16
or
push
and
mov
xchg
jno
stos
add
lods
xorb
add
add
cmpsl
and
mov
sbb
test
sar
rcrl
jle
cmp
leave
popf
outsl
push
mov
outsl
jecxz
int3
mov
adc
push
lock
popa
ds
mov
outsl
mov
ja
push
or
sub
jae
mov
pop
shlb
sbb
and
jl
cmp
orl
shr
jne
jl
cmp
sub
jae
mov
push
adc
aad
je
and
sbb
ds
cwtl
sbb
lret
add
xor
sahf
loope
cs
outsl
rorb
jge
dec
adc
push
notb
pushl
imul
test
sbbb
cld
sbb
push
gs
out
test
cmc
xor
call
lret
fnsave
push
in
push
jg
cmp
jno
push
aas
or
mov
cmpsl
pushf
popf
lea
into
and
outsb
mov
sub
mov
shr
movsl
push
sbb
cmp
daa
jo
hlt
adc
xchg
push
jg
dec
js
ficoms
inc
repz
cmp
shl
cld
gs
mov
inc
in
mov
pop
sbb
lahf
mov
mov
jg
cs
push
imul
pop
dec
inc
aas
sub
pop
mov
cmc
cmp
pop
clc
mov
add
call
fsubs
ja
pop
call
sahf
cmp
ret
test
mov
cwtl
out
movsb
stos
mov
mov
jnp
scas
lcall
fs
je
inc
mulb
add
mov
popa
xchg
adc
or
push
sbb
in
insl
movsb
cltd
xchg
int3
or
cmc
xchg
loop
out
cld
push
mov
lret
mov
fnsave
lcall
sbb
lods
pop
xchg
sbb
test
jmp
in
icebp
jne
imul
mov
mov
out
mov
mov
aaa
add
shrb
popf
xchg
pop
mov
xchg
clc
mov
into
xchg
jae
xor
jg
push
in
hlt
sbb
lahf
cmc
in
jmp
das
imul
xchg
pop
loop
imul
push
and
stos
gs
fwait
mov
popf
jge
ja
gs
jl,pn
aam
adc
mov
mov
push
xchg
dec
push
push
jnp
cwtl
insb
cmc
mov
dec
psubw
xlat
scas
cld
dec
out
xchg
mov
int3
sub
aam
pop
fidivs
loopne
or
mov
push
mov
dec
push
jp
cmpsl
shl
mov
dec
mov
lret
xchg
pop
ljmp
arpl
inc
call
addr16
push
jge
dec
fcomps
hlt
call
xor
stos
rorl
mov
mov
mov
sub
push
mov
mov
rorb
push
inc
movsb
mov
or
jno
test
or
out
xchg
or
imul
insb
xor
das
sbb
out
dec
lret
je
adc
and
sub
jo
into
fcoml
mov
aam
mov
iret
dec
cli
pop
sbb
lock
lahf
jno
bsf
bound
mov
lock
mov
pop
sub
push
lods
jl
stos
mov
repnz
jo
sbb
xor
cmp
cld
cltd
push
hlt
sub
xor
outsb
imul
xor
insl
or
and
inc
add
push
xchg
mov
jno
jg
scas
pop
test
xchg
je
dec
and
adc
imul
adc
add
fldt
xchg
mov
xlat
arpl
xchg
sti
lretw
jmp
cs
jmp
pop
lea
imul
mov
inc
popa
loop
data16
fs
and
jno
stc
movsl
xor
and
cmp
push
in
imul
out
sbb
ds
pop
aad
fdivrl
test
xchg
cmp
adcw
cmp
mov
mov
inc
mov
pop
or
pop
mov
sbb
and
gs
inc
in
into
icebp
stos
cmp
jbe
mov
mov
int3
scas
jmp
and
xor
aaa
sbb
mov
add
lahf
inc
mov
mov
incb
mov
mov
lods
and
testb
nop
daa
mov
mov
or
jo
mov
jnp
sahf
aaa
dec
andl
dec
ficompl
fidivrs
inc
xor
jbe
xchg
mov
sbb
mov
sub
jbe
xchg
mov
pop
in
lds
inc
push
and
fildl
dec
mov
mov
loope
cmpsb
scas
lret
inc
shlb
cmpb
jo
fiadds
jp
xor
xor
pop
shr
rolb
sub
jmp
out
fldt
sub
mov
mov
les
push
in
cmp
repnz
arpl
cs
jle
aaa
mov
push
lods
push
mov
fimull
fidivrl
mull
mov
aas
das
mov
loope
in
mov
notb
xchg
add
push
push
dec
imul
xor
sub
mov
inc
in
xor
jo
sub
repz
iret
je
adc
std
cmc
test
or
xchg
movsl
pop
inc
lahf
dec
or
pop
insb
and
imul
cltd
xor
xor
sub
jle
mov
pop
cli
dec
mov
cs
cltd
popa
or
sti
push
jge
mov
mov
popa
test
or
js
and
inc
xchg
out
cmc
test
inc
push
lea
jp
push
xchg
jmp
dec
daa
mov
movsb
ja
imull
test
inc
in
mov
jmp
jg
sbb
xlat
push
sbb
ljmp
dec
dec
add
push
imul
mov
mov
jl
les
cmc
pop
and
pop
add
mov
mov
lds
sub
jg
jecxz
sbb
dec
shll
push
add
cs
gs
aad
or
pop
lds
stos
push
out
mov
jae
adc
xchg
dec
test
xchg
ret
or
mov
mov
add
out
xchg
loope
iret
push
les
pop
cmpb
rclb
stc
cmp
mov
push
xchg
dec
add
push
sub
leave
mov
cmpsb
dec
inc
jle
outsl
dec
jne
icebp
xchg
dec
jns
popf
jbe
jecxz
int3
clc
jl
mov
jno
orl
shlb
addr16
mov
scas
int
mov
xor
stc
jb
mov
imul
mov
add
or
cwtl
xor
icebp
out
in
bound
push
dec
push
jg
nop
inc
pop
sbb
test
inc
add
push
int3
sub
out
xchg
out
int3
pop
jle
add
pop
push
inc
js
popf
or
mov
mov
inc
dec
into
sub
cmp
dec
inc
inc
xor
inc
lret
add
cmp
icebp
test
cmp
or
inc
movnti
pop
sub
and
pusha
pop
pop
inc
lds
push
fldt
push
dec
aas
adc
andb
sahf
mov
pop
push
out
jmp
orb
mov
jb
mov
movsb
fwait
inc
leave
hlt
nop
imul
add
fs
mov
hlt
push
test
push
mov
mov
and
jp
pop
or
andl
mov
stos
mov
test
pop
repz
je
test
out
and
testb
jno
mov
cmc
xchg
adc
in
jecxz
data16
dec
cmpsl
popl
jns
in
and
mov
xchg
and
fisubs
push
sti
jae
pop
subl
mov
and
jmp
loope
adc
jmp
rcrb
push
adc
loop
pop
out
test
scas
lea
insb
jnp
xchg
cmpsl
les
fstps
pushf
mov
cmp
ljmp
jbe
popa
ljmp
mov
dec
add
push
sub
sbb
xchg
dec
adc
sub
ds
pushf
fildll
jnp
sbb
sbb
lods
adc
add
inc
pop
lea
lock
inc
jle
mov
imul
rorb
mov
andl
mov
cli
stos
out
xor
rcl
dec
xor
add
into
in
rcrb
xchg
fcomps
jp
sub
push
mov
dec
ss
sbb
or
lds
ret
iret
lea
inc
mov
pop
je,pn
stos
jp
imul
aas
ficompl
notb
sbb
ret
cmp
mov
adcb
cmp
mov
les
shl
mov
imul
dec
dec
jle
icebp
insl
jb
in
negb
int3
mov
dec
sbb
jle
daa
xor
outsl
rorl
sub
mov
jge
inc
and
lods
cmp
xchg
xchg
xchg
outsl
jnp
outsb
test
xchg
sbbb
insb
insb
mov
into
outsl
cmp
call
hlt
cmpsb
popa
sub
xor
imul
dec
sarb
out
fsubr
or
dec
popa
js
fadd
insb
jmp
dec
pop
test
mov
jno
cmpsb
and
and
sbb
cwtl
xor
inc
rol
das
leave
push
pop
add
jle
lds
mov
and
sbb
es
js
inc
add
push
push
nop
gs
dec
in
mov
insl
cmp
imul
addr16
lods
pop
cld
jb
push
in
sbb
mov
out
xor
or
jecxz
ret
cwtl
jge
daa
pop
sbb
movsb
sub
jb
outsb
outsb
lret
sbb
or
ret
jl
dec
movsl
jo
imul
mov
add
pop
sub
ds
jnp
push
leave
mov
inc
inc
mov
inc
pop
mov
push
dec
divl
add
dec
xorb
dec
mov
shrb
in
data16
mov
mov
into
or
dec
cs
lods
mov
mov
arpl
or
cmp
jo
xor
and
pushf
mov
jecxz
xchg
in
daa
sub
shll
push
push
repz
sti
repnz
xchg
aad
div
divb
jmp
pop
mov
jnp
adc
sbb
cmp
cmc
xor
cmp
test
push
es
xchg
mov
out
jne
pop
cmp
inc
mov
js
subb
fimull
mov
dec
xchg
sbb
jp
sbb
lock
add
fdivrs
stos
or
testb
mov
push
sbb
ret
popa
test
imul
pushf
popf
test
pop
fistps
hlt
dec
jmp
mov
or
xor
mov
hlt
fsubrl
push
stos
ja
hlt
shrb
andl
pop
movsl
shr
repnz
clc
arpl
insb
xchg
xor
xlat
test
jno,pn
xchg
pop
loope
xchg
icebp
jns
nop
mov
fs
adc
inc
icebp
mov
adc
pop
jne
pop
mov
mov
pusha
lds
in
inc
xor
add
ss
loop
push
imul
inc
lds
adc
insb
loopne
or
cmpsb
popf
dec
sahf
fidivl
gs
push
mov
pop
mov
dec
mov
movsl
fstl
xchg
pop
out
mov
sbb
scas
pcmpgtd
lea
sub
dec
pop
jg
dec
adc
imul
push
pop
jle
and
movsl
cli
xchg
adc
repz
lods
cmp
hlt
add
rcl
leave
mov
jge
pop
dec
or
cltd
fmull
in
xchg
inc
inc
sub
call
xchg
leave
mov
pushf
rcl
sbb
mov
mov
test
and
movsl
xlat
and
add
or
enter
xchg
xor
jnp
dec
adc
mov
test
push
add
xchg
mov
jge
mov
outsb
xchg
lret
dec
xchg
out
loop
cmp
mov
in
addb
cs
dec
cwtl
in
adc
push
clc
mov
leave
imul
dec
inc
hlt
mov
lea
push
ret
mov
in
add
call
arpl
pop
pop
fsubs
lret
sub
mov
clc
push
inc
into
test
sub
jmp
xor
mov
push
mov
mov
push
in
sub
repz
push
sbb
cmp
jecxz
outsl
es
dec
out
shll
jp
push
iret
xchg
repnz
fs
pop
lea
xor
inc
or
lods
jmp
aam
xchg
mov
mov
sub
int3
popf
jno
cmp
xchg
push
push
xlat
cmp
leave
sar
xchg
es
daa
js
xor
fst
js
outsb
inc
jp
lods
in
xchg
jg
push
cmp
fisubrl
icebp
test
push
adc
outsl
scas
dec
mov
jg
cwtl
adc
fists
ret
or
mov
lret
mov
push
call
mov
dec
test
mov
xor
jg
movsb
insb
out
lock
lods
xchg
add
fistl
rol
in
insl
lret
out
daa
pop
sbb
es
enter
xchg
bnd
out
pop
push
inc
xor
sahf
xor
jecxz
jp
push
subl
cld
mov
pop
je
push
push
mov
pop
fcmovne
dec
popf
ficoml
jmp
arpl
jns
xchg
adc
mov
movsb
jl
pusha
in
sub
xchg
mov
inc
int
or
cmpsb
rclb
icebp
sub
and
cmpsl
push
dec
stos
inc
out
add
or
insb
jmp
pushf
call
ret
ja
xchg
add
sbb
and
jnp
shrb
xor
imul
xorb
cmp
outsb
testl
mov
repz
cmp
push
xor
mov
pop
test
mov
mov
out
in
stos
sub
jle
movsl
inc
xor
push
inc
inc
push
clc
je
fwait
out
pusha
cwtl
out
aad
mov
loop
sarb
aad
mov
jno
inc
aas
xchg
sti
jns
bound
adc
aas
test
fldenv
aad
out
cltd
outsb
jecxz
sbb
stos
loop
loop
adcl
shlb
mov
popf
or
hlt
lds
jae
fwait
ret
bound
popa
jl
das
or
es
push
int
loopne
and
xchg
cmp
in
jl
adc
or
fcmovbe
popf
mov
xchg
jns
ret
in
out
xchg
jecxz
call
dec
jb
enter
stos
insl
or
inc
sub
lcall
push
mov
inc
adc
ffree
shl
push
fpatan
add
jp
inc
and
insl
ja
ljmp
or
pop
sbbl
mov
mov
jnp
sub
mov
or
mov
icebp
in
xchg
jns
or
xor
adc
sarl
stos
out
aas
inc
fdivrl
push
test
jecxz
int3
xchg
outsl
nop
daa
sub
fwait
mov
xor
sbb
mov
ret
mov
adc
es
scas
pop
mov
lods
or
sarb
ja
mov
nop
icebp
mov
adc
iret
pushf
sbb
mov
mov
push
sbb
mov
xchg
addr16
dec
stos
adc
js
mov
enter
les
clc
sub
mov
add
dec
insb
fidivrs
ret
adc
lea
cmp
outsl
mov
add
rol
mov
add
dec
lods
lock
inc
push
movsl
push
adc
lock
mov
add
imul
pop
cmp
push
pop
push
add
fwait
mov
es
jg
je
mov
enter
push
and
shll
mov
popf
or
in
cmpsb
out
jle
cld
and
push
push
or
inc
pop
and
inc
lcall
jl
adc
sbb
in
jmp
stc
lods
fbstp
fbstp
movsl
jp
ret
cltd
mov
xchg
pop
adc
sahf
dec
sbb
aad
inc
mov
xor
sti
jge
rolb
rcrb
repnz
xchg
addr16
flds
inc
add
pushl
and
popf
add
je
jg
add
and
insb
lcall
jl
jle
jmp
jle
and
nop
cwtl
cmp
mov
and
mov
pop
cmp
mov
inc
in
xchg
add
scas
into
fwait
shrb
rcrb
jb
xchg
cmp
pop
xor
mov
and
fwait
aad
cmc
cmp
aad
clc
inc
mov
dec
jmp
gs
xchg
popa
ja
fabs
sub
mov
inc
imul
jl
fidivs
push
add
movsl
cli
cld
jg
ljmp
inc
jl
pushf
or
jns
mov
pop
stos
nop
data16
lret
jg
dec
pop
sub
sub
and
out
mov
xlat
call
jo
rorl
cwtl
mov
sub
dec
push
addr16
push
mov
jb
mov
movsl
out
orb
sbb
ficompl
aas
fistpll
ljmp
xchg
enter
mov
iret
cbtw
jns
jge
out
es
std
pop
cwtl
dec
add
cld
jle
mov
lock
int3
pusha
roll
sbb
xchg
push
mov
pop
xor
popf
mov
out
inc
jns
pop
push
sub
and
repnz
mov
and
xchg
ja
xorl
fildll
xor
mov
mov
jl
std
enter
int
cmpsl
jb
pop
add
or
push
sti
adc
sbb
jne
dec
jmp
lea
sub
andb
jo
sahf
inc
and
mov
lock
lahf
push
lcall
xchg
add
ret
pop
leave
cwtl
movsl
mov
divb
test
mov
ja
push
jnp
jnp
test
in
lods
lcall
xlat
and
mov
sub
sbb
lret
int
into
jl
inc
or
sbb
rcll
push
jge
das
mov
fwait
add
push
lods
and
aad
into
mov
xor
std
add
add
into
and
pop
les
mov
pop
into
adc
push
aam
xor
and
and
jecxz
adc
mov
and
xlat
aam
xchg
push
sub
iret
inc
lret
aam
mov
or
push
lock
inc
mov
rolb
in
or
pop
jl
daa
stos
rclb
sub
mov
mov
pop
fmuls
repz
popf
jo
mov
and
mov
into
lea
outsl
roll
orl
sbb
jns
and
cmpsb
adc
in
cmp
push
and
mov
repz
xchg
outsb
lret
add
jne
or
inc
inc
out
in
stos
push
adc
jge
xchg
xchg
add
sbb
jbe
inc
mov
dec
lods
xor
cmp
loopne
sbb
jge
aad
lods
divl
pushf
notb
mov
fcomps
sub
adc
mov
or
cli
dec
sbb
cmp
push
into
mov
fcmovnb
or
outsb
mov
push
pop
pushf
adc
lret
hlt
test
lret
push
xchg
lods
fdiv
out
add
mov
repnz
aad
adc
sbb
lret
in
das
mov
lahf
aaa
bound
sub
cmp
jne
cwtl
dec
pop
xorb
xorb
mov
stc
adc
gs
loope
xchg
aaa
jge
dec
cmpsb
shl
push
sar
movl
jno
and
mov
jle
sbb
xchg
inc
mov
test
rolb
or
js
inc
mov
xor
mov
inc
lds
std
inc
jne
aas
popf
add
je
mov
loop
sar
ja
mov
jge
fnstsw
inc
and
mov
icebp
nopl
and
xor
dec
cmpsl
stos
jo
lcall
mov
inc
jo
and
dec
out
fstpt
cmc
aaa
or
lods
ds
or
lret
push
dec
adc
sbb
jnp
xchg
call
adc
add
popf
loop
mov
outsl
daa
clc
test
push
fcomp
pusha
dec
mov
jo
adc
mov
call
jl
neg
mov
rol
push
imul
xchg
adc
je
int
clc
xchg
out
fldenv
xor
dec
ljmp
test
aas
mov
or
dec
xor
lds
scas
fildll
aam
xchg
in
loop
add
popf
insl
pop
sbb
rorl
pop
sbb
xchg
mov
adc
xor
repz
iret
and
jl
cmpl
sti
std
fmuls
gs
inc
sbb
sub
fistps
inc
jecxz
cs
inc
jmp
cwtl
decl
out
xchg
shlb
pop
aas
push
jle
test
xchg
cwtl
or
pop
fstps
jg
lahf
enter
xor
add
jb
rolb
cld
das
pop
enter
les
mov
fyl2x
ds
movsb
int3
pop
mov
imul
ret
and
jge
les
in
jns
mov
sbb
lock
mov
push
nop
outsb
pop
stc
xchg
pop
xchg
test
xchg
jae,pn
xchg
inc
in
sbb
dec
xor
loopne
mov
dec
mov
popa
iret
rol
mov
test
addb
dec
jg
das
js
mov
dec
mov
in
dec
jno
dec
xchg
xchg
xchg
cli
pop
mov
fadds
jno
aaa
pop
mov
icebp
test
in
cmp
std
jecxz
dec
sub
xchg
dec
sub
mov
mov
test
bound
insl
roll
ds
pop
jp
xchg
dec
iret
push
and
loope
and
adc
push
lods
jo
mov
push
dec
mov
and
sub
imul
data16
xchg
nop
adc
mov
adc
push
insl
pop
notb
sub
sub
icebp
sub
movsl
mov
std
loope
add
push
adc
mov
push
std
add
dec
push
cs
dec
push
add
imul
jle
xor
jmp
jno
in
shl
stos
pop
das
cmc
add
inc
js
into
test
aaa
lock
inc
mov
mov
in
int
fcomps
cmp
adc
and
pop
mov
cmp
lret
mov
fbstp
movsl
lock
and
xchg
push
jecxz
cmp
gs
or
dec
cli
push
sub
adc
xchg
add
das
xchg
cmp
cmp
xor
movsb
dec
push
push
test
mov
inc
jne
xchg
dec
sbb
jmp
and
jmp
jo
fimuls
jbe
sbb
out
mov
push
xchg
mov
add
jecxz
mov
mov
lret
add
push
enter
sub
out
inc
mov
xchg
sti
add
dec
lods
cmpsb
or
loope
ja
inc
shlb
inc
xchg
mov
mov
pop
in
cmp
pop
and
fcmovb
pushf
int3
inc
or
imul
sub
jbe
rcr
and
jmp
sbb
dec
pop
call
arpl
dec
jge
clc
out
xor
inc
nop
inc
pusha
scas
cli
int
sub
mov
in
cmc
test
test
sub
jae
mov
or
sbb
mov
outsb
xchg
dec
mov
xchg
cltd
inc
mov
jno
in
ja
inc
icebp
test
push
loope
xchg
movsb
adc
xor
xlat
rcll
les
fs
jle
outsb
pop
push
outsb
arpl
fwait
lods
jge
and
flds
ss
fistpl
add
xchg
adc
cmpsb
das
push
insl
aad
mov
addb
push
cmp
cmp
lahf
jl
aas
inc
testl
dec
mov
lock
sub
loopne
push
xrelease
ljmp
into
fnstenv
gs
dec
ljmp
xor
dec
add
sub
mov
repz
mov
pop
cmp
inc
lret
xchg
jmp
push
mov
lahf
stc
or
push
ret
hlt
dec
insb
or
xchg
xchg
loop
mov
push
adc
dec
mov
call
sarb
push
dec
mov
orb
stos
sbb
ja
xchg
jno
jne
mov
push
or
das
loop
dec
loope
test
lret
ret
sub
fmuls
and
je
add
jmp
loope
pop
mov
addr16
ss
pop
jmp
jmp
cmp
pop
rorl
or
mov
pop
mov
es
mov
dec
xchg
push
mov
loopne
subb
mov
push
subl
push
and
pop
sti
pop
loopne
push
jbe
clc
push
mov
cmpsl
jnp
sarl
into
pop
sub
mov
add
dec
loopne
lods
mov
movzwl
cli
insl
int
clc
hlt
pushf
pop
adc
and
mov
adc
inc
pop
or
cwtl
mov
mov
ja
jno
sub
iret
test
add
push
aam
jmp
scas
ljmp
and
jbe
idivl
sbb
es
add
popa
fcomi
or
and
frstor
iret
clc
pop
ljmp
jne
xlat
fstps
addb
and
mov
xor
in
lock
jge
jo
pop
sub
mov
jp
xor
cs
sub
jno
repnz
sbb
dec
mov
dec
mov
faddp
sbb
add
outsb
subl
stos
outsl
jbe
enter
add
xchg
ret
fs
outsb
out
cli
in
pop
stc
cmp
push
pop
inc
mov
adc
fiadds
xchg
mov
dec
push
sbb
call
mov
push
jle
xchg
scas
insb
cmp
inc
push
pop
iret
pusha
mov
mov
mov
lods
jbe
jns
movsb
adc
sub
fisttpll
inc
mov
add
add
std
int
mov
addr16
and
mov
push
cmc
je
add
add
loope
aas
jp
adc
test
pop
arpl
sbb
sub
insb
aaa
cmp
hlt
dec
andb
dec
int3
stc
add
mov
jnp
test
mov
shlb
bnd
jbe
shlb
fdivs
add
test
add
test
mov
fsubl
repz
aaa
xor
xor
jecxz
aam
ljmp
push
push
cmp
movsl
add
int3
in
cwtl
cmc
clts
cmpb
out
adc
inc
mov
cs
mov
adc
mov
sub
xchg
jnp
xchg
push
repnz
enter
arpl
stos
and
sub
adc
and
imul
test
mov
or
mov
imul
clc
inc
xor
cmp
lods
push
push
repz
dec
mov
adc
lret
cmp
sbb
lods
loop
xlat
in
es
int
push
cmpsl
mov
enter
rcrb
dec
je
lahf
cmpsl
xor
insl
loop
scas
lods
lock
pusha
ljmp
or
push
test
sub
aam
push
stos
mov
fdivrl
pop
lea
iret
rclb
inc
dec
aam
movsb
cli
andl
sbb
lahf
rorb
scas
xchg
mov
xchg
mov
jbe
or
jecxz
sbb
lcall
test
icebp
idivb
cltd
mov
mov
inc
addr16
clc
and
test
mov
lea
dec
daa
arpl
mov
imul
pop
jb
popf
loop
push
mov
adc
mov
cwtl
mov
or
or
js
pop
jmp
add
and
bound
aas
out
mov
sti
sub
mov
aam
pop
dec
xchg
mov
mov
sarb
adc
pushf
enter
cmp
pushf
jmp
sbb
inc
cmp
leave
lods
cld
or
js
cmpsb
outsb
dec
fimuls
jno
inc
jmp
adc
aam
int3
cwtl
adc
jecxz
xchg
dec
cmc
mov
leave
lahf
jle
adc
fwait
add
lds
jns
dec
cltd
cmp
fstpt
xlat
ja
sbb
lods
cmp
movsb
popf
inc
mov
jne
sbb
aam
or
icebp
xchg
pusha
inc
add
mov
mov
bound
mov
adc
fiaddl
pop
aaa
xor
adc
sbb
cmp
mov
fisubs
push
std
loope
adcb
insl
fnsave
fiadds
shrb
or
arpl
fistpl
adc
push
mov
mov
mov
jns
and
std
and
or
xor
in
xor
pop
dec
shlb
out
inc
adc
test
ljmp
pop
mov
add
insl
icebp
stos
js
add
insb
sub
data16
fdivr
push
sbb
push
dec
pop
test
mov
pop
dec
lods
lods
xchg
sbb
push
sti
mov
or
out
jge
pop
dec
fsubs
flds
testl
mov
fs
push
push
jge
in
out
cli
jnp
mov
push
popa
cld
daa
jo
shll
mov
ds
out
ds
inc
xchg
lret
loopne
shrb
jmp
cld
inc
not
xchg
loope
scas
jge
inc
ja
inc
aaa
loop
mov
mov
jmp
mov
xchg
test
inc
mov
mov
add
xlat
xlat
push
sarl
shl
and
mov
xlat
xor
or
sub
pop
imul
rorb
mov
imul
stc
popa
movl
cmp
mov
cmpsl
dec
arpl
cltd
jl
jno
shlb
loopne
sub
mov
cmpb
mov
jno
mov
or
mov
in
icebp
test
stc
sub
pusha
js
cli
mov
inc
aas
add
xlat
or
shlb
shrl
outsl
inc
push
mov
push
xlat
jbe
sub
or
sbb
pop
xchg
cmp
cmp
je
fs
lock
mov
rcll
sub
or
jae
fdivrp
dec
je
pop
jp
lcall
ffree
dec
cli
mov
lods
or
jmp
jno
xlat
add
addr16
in
insb
fnstsw
push
lea
sbb
es
cmp
das
cmp
mov
in
enter
jecxz
out
and
add
xchg
fisttpl
xor
mov
scas
pop
outsb
cltd
sbb
pusha
mov
push
cmc
mov
fisttpll
jne
pop
mov
lea
or
mov
cs
aaa
mov
movsl
pop
pop
push
ret
inc
sub
shrb
neg
lods
out
push
jmp
jg
loope
fdivl
outsl
sbb
push
inc
imul
ds
ret
js
pop
dec
ficompl
pop
xor
push
sub
jae
adc
fcomip
sbb
cmp
dec
cmp
rcrb
sbb
mov
and
int
lods
arpl
lahf
fsubl
ss
cld
inc
enter
push
jl
xor
xorl
int
cwtl
jle,pn
gs
popf
adc
les
ljmp
xchg
add
sbb
stc
sarl
sbb
stc
out
mov
and
xchg
packuswb
adc
into
adc
scas
jg
jns
mov
faddl
jg
lods
sub
jp
add
ret
je
outsb
sub
xchg
ljmp
mov
hlt
adc
mov
shrl
push
push
sahf
pop
pop
jbe
sub
sbb
enter
xchg
fsts
cmp
pop
pop
lods
out
popa
adc
jge
ljmp
arpl
mov
mov
jbe
cmp
and
xchg
add
jg
jae
mov
push
jae
push
popa
xor
in
lds
icebp
ficoms
test
pop
jo
pop
cmp
stos
mov
scas
push
aad
xchg
inc
inc
fadd
out
mov
cmpsb
inc
lock
aaa
xchg
test
fstl
sbb
push
orl
loope
xor
jae
ds
adc
xor
mov
mov
ja
xchg
outsb
dec
rorl
inc
orl
sahf
aas
gs
mov
daa
add
fisubl
inc
insl
rcll
insb
or
pop
lods
add
adcb
and
add
sbb
icebp
cmp
jg
push
xor
sbb
jns
dec
repz
fisttpl
jbe
xor
shlb
cmc
mov
add
sub
insl
xchg
mov
cltd
daa
jl
xor
stc
scas
std
or
xchg
ja
pushf
icebp
cmpsb
cli
push
add
shlb
repz
jecxz
inc
test
xchg
cmc
cmp
jo
adc
mov
or
xchg
sbb
pmullw
clc
or
aam
int
and
mov
mov
mov
out
or
pop
pop
mov
mov
loopne
fwait
mov
jle
mov
push
aaa
call
lea
push
arpl
movsb
sbb
jge
mov
or
inc
setno
mov
stos
andb
jns
xor
addr16
xchg
hlt
ljmp
jmp
je
fsqrt
cmpsl
idivb
pop
nop
mov
jns
xor
fstp
pop
pop
imul
add
push
jl
sbb
mov
icebp
ljmp
xchg
scas
aaa
push
mov
out
mov
mov
repnz
gs
add
imul
or
mov
shr
sbb
cmp
pop
sub
mov
xlat
sti
outsb
or
aad
fwait
addr16
test
fisttpll
xor
ret
adc
inc
stc
lds
mov
jbe
test
add
outsb
mov
dec
cltd
lcall
fidivl
dec
clc
sahf
ffree
jecxz
cmpsb
adc
push
inc
and
je
sti
sti
or
and
xchg
aaa
insl
and
jne
xor
aad
in
popa
dec
mov
movsb
pop
dec
loop
fsub
mov
jecxz
xchg
pop
enter
xor
cmp
jo
xchg
pop
adc
adc
out
shr
jecxz
sub
and
xor
stos
jl
cwtl
negb
inc
sbb
mov
and
pop
or
xor
stos
das
adc
inc
xor
and
into
xor
neg
inc
gs
mov
push
or
and
dec
cmpb
lock
icebp
jbe
outsl
or
shll
dec
dec
jno
out
add
sbb
sarb
lods
jg
in
bswap
mov
es
mov
jecxz
in
dec
call
hlt
pop
pop
and
jne
push
sbb
nop
int3
add
int3
jno
mov
lret
ss
xchg
movsb
xor
je
mov
sub
sahf
jge
xchg
mov
push
inc
cmp
xchg
xor
ja
mov
sbb
mov
lret
and
inc
arpl
insb
and
inc
sbb
pop
push
inc
sbb
pop
dec
push
inc
sub
mov
call
std
xchg
movsb
dec
or
loop
loop
test
jecxz
or
outsb
push
mov
adc
inc
xchg
sbb
shlb
xchg
xchg
gs
pop
xor
mov
mov
adc
in
xchg
push
xchg
imul
fs
cmp
xor
mov
add
stos
int3
out
dec
insb
dec
sti
and
fwait
jae
int
ss
jle
icebp
iret
dec
enter
mov
shrl
jg
mov
pop
xor
push
and
iret
sub
pop
cmp
xchg
pop
add
or
push
mov
aam
lcall
jbe
add
cmp
mov
std
mov
hlt
add
pop
mov
add
fdivr
dec
adc
or
fwait
push
fdivrl
stos
int
dec
xor
xchg
adc
mov
insl
rorb
aas
ljmp
cltd
cmp
dec
and
cmp
aam
outsb
and
jae
mov
loopne
add
jo
inc
pop
lods
inc
inc
or
out
xchg
push
mov
mov
pop
cli
loop
loop
mov
jge
mov
scas
scas
loop
mov
dec
pop
fsubl
mov
mov
into
sub
test
xor
fwait
insb
push
pop
add
mov
outsl
pop
or
pop
sub
leave
pop
ja
loop
mov
fldcw
outsb
mov
mov
fsubrp
jbe
xor
std
in
sbb
loopne
cmp
mov
xchg
add
cmp
cmp
vsqrtps
push
loopne
mov
xor
setb
adc
jnp
lret
sub
insb
les
leave
pop
lods
pop
add
adc
imul
gs
xor
add
mov
scas
fwait
popa
in
or
adc
iret
jle
add
lods
and
xchg
test
mov
lods
jg
push
mov
sahf
cmp
sub
xor
pushf
repnz
and
xlat
gs
adc
pop
fimuls
cs
test
adc
outsl
icebp
or
test
in
jae
dec
xor
addr16
jmp
fcompl
inc
jb
icebp
out
xchg
leave
es
pop
outsl
gs
es
into
dec
out
inc
add
or
mov
pop
pop
rclb
xchg
push
mov
and
mov
cmc
adc
sub
add
jae
jmp
sub
jb
xor
sahf
push
jg
cmc
mov
push
push
inc
stos
icebp
jle
push
jae
popf
adc
xor
pop
inc
mov
mov
outsb
dec
je
cvtdq2ps
out
xchg
arpl
sahf
nop
or
addb
jb
add
xlat
enter
out
dec
jbe
fnstcw
pop
cwtl
add
movsl
fistpll
pop
jge
imul
loope
data16
inc
das
and
les
in
pop
jo
sar
dec
jge
dec
les
jp
cli
popa
add
int3
insb
mov
xchg
in
stc
or
fstpt
sub
lret
stc
outsb
adc
icebp
inc
nop
jb
pop
idivb
mov
and
test
cmpsl
dec
mov
mov
push
jbe
sbb
loope
scas
std
push
cmpsl
pop
outsl
cmp
xchg
add
or
mov
lcall
cmp
rdpmc
inc
jge
push
jne
push
aaa
std
dec
out
pop
xlat
lock
lods
sti
sbb
out
dec
call
lea
int
ret
jnp
aam
adc
jne
or
shlb
sarb
mov
les
hlt
sub
inc
sbb
aas
jo
sub
pop
push
fldt
icebp
in
and
rclb
sbb
fxam
xor
stos
mov
dec
sti
repnz
fmuls
cmc
cmp
push
fnsetpm(287
xchg
push
les
cmp
cmp
add
mov
lock
fsub
pusha
sbb
aas
js
fldt
add
adc
add
pop
sub
xchg
sub
xchg
out
sub
ds
pop
fdivrs
sbb
sub
or
push
stos
inc
sub
fbld
testl
ja
mov
fnstcw
jns
repnz
enter
ret
fisttps
cmp
out
cmp
pop
in
cwtl
lret
sbb
pusha
ljmp
cli
mov
pop
add
inc
sbb
ret
xchg
gs
lock
les
repz
and
mov
adc
cmp
jmp
inc
subl
adc
xchg
repnz
jmp
mov
mov
jb
in
pop
sahf
out
xchg
pusha
das
jns
and
cwtl
loopne
and
enter
imul
roll
dec
add
cmp
ja
push
xorb
inc
push
shrl
push
cmc
jno
pop
fsubr
lret
aas
in
mov
cmp
inc
jle
sti
lock
jb
jo
ror
int
ror
sar
or
shlb
xchg
test
lods
push
adc
sbb
inc
jg
dec
xor
adc
ljmp
cwtl
pop
cld
xacquire
mov
in
lret
and
ds
aaa
cli
dec
in
leave
ret
fnstenv
aaa
push
push
or
xorl
pop
test
push
sbb
add
dec
lds
cmpsl
sbb
pop
adc
pop
jge
scas
test
adc
cld
xlat
in
fwait
negb
ficompl
pop
lret
or
push
mov
mov
clc
xchg
vpand
adc
jne
aas
ret
jge
jb
hlt
inc
mov
in
push
fwait
hlt
xchg
add
repnz
dec
mov
add
fimull
sub
add
push
mov
mov
in
gs
scas
insb
push
clc
xchg
adc
cmp
push
out
and
xchg
cmpsl
fst
fidivrl
ja
mov
or
icebp
scas
lds
shlb
iret
pop
dec
add
xchg
xchg
cmp
mov
in
stos
or
inc
sbb
mov
jecxz
fs
jnp
mov
mov
mov
fwait
inc
jae
inc
xchg
push
imul
aas
lahf
and
pop
push
xor
test
and
sbb
xchg
jbe
mov
andl
mov
jmp
fldenv
daa
mov
jmp
mov
cmp
shll
inc
and
push
aas
rol
imul
push
mov
cltd
loop
xchg
inc
push
sbb
jb
fidivl
cmp
in
addr16
sub
or
mov
xor
mov
enter
xchg
bound
inc
fldl
add
addr16
jecxz
popa
mov
test
lcall
mov
pushf
fidivrl
dec
push
cmpsl
inc
dec
sar
scas
out
insl
orl
sub
pop
mov
dec
cli
loop
fisttps
adc
aas
adc
mov
sbb
loop
jne
scas
sbb
xlat
popf
xor
inc
das
cmp
sbb
push
ljmp
add
xlat
sbb
jmp
inc
mov
aaa
jmp
push
lds
nop
repnz
push
jecxz
pusha
push
mov
test
test
mov
push
in
push
outsb
cmp
push
mov
xchg
or
jg
lods
inc
or
add
sbb
dec
loopne
ja
xchg
adc
outsb
jne
lahf
jb
or
sahf
lahf
enter
xchg
cmp
lret
mov
fiaddl
loope,pt
xor
test
xlat
push
add
jae
pushf
imul
xchg
and
lcall
nop
cmp
fmulp
jo
js
cwtl
mov
xchg
jl
mov
aam
push
cwtl
enter
leave
and
decl
sbb
xor
lods
es
leave
add
in
sti
jne
test
sbbl
mov
or
loop
movsb
mov
stos
arpl
push
fnsave
fldcw
mov
jge
push
mov
mov
dec
sbb
mov
cli
stos
push
in
mov
mov
test
cmp
mov
ljmp
repz
rcrl
cwtl
mov
mov
orb
stos
add
push
or
jbe
mov
lods
xchg
mov
mov
hlt
pop
in
cltd
movsl
add
push
shlb
push
push
push
mov
aaa
rol
and
in
shll
aas
sbb
ds
mov
stos
jae
cltd
dec
ret
dec
enter
ret
pushf
cmpsl
inc
adc
fldt
cmp
or
int3
add
in
or
out
das
pop
leave
jg
jl
jp
into
pop
push
jnp
test
pop
mov
push
pop
test
outsl
sub
xchg
dec
mov
xor
movsb
push
dec
decl
cmp
andl
imul
ja
xchg
push
cmp
inc
ljmp
mov
mov
push
xchg
and
inc
das
movq
add
fistl
push
pop
stos
lcall
adc
jno
xor
jbe
enter
xchg
add
jb
mov
mov
das
xlat
push
out
xchg
daa
push
sub
stc
loop
je
add
dec
pop
sub
push
jbe
lret
jmp
mov
enter
cmp
aad
in
int3
das
xorb
testb
inc
mov
cli
mov
xchg
sub
lds
adc
scas
shrl
or
pusha
jne
in
or
aad
push
adc
cmc
sbb
mov
shlb
push
jne
xchg
xor
sbb
pop
sub
adc
arpl
faddl
adc
xchg
adc
pop
cmp
lret
and
mov
data16
inc
fstpt
lock
fsubr
adc
mulb
mov
pop
jns
cmp
pushf
xor
adc
pop
in
pop
sbb
mov
lds
jae
cmp
das
cmpsb
sbb
add
pop
test
dec
loop
lcall
icebp
mov
loopne
imul
or
dec
mov
fisttpll
outsb
fstpl
movsl
sub
jl
xor
pop
fs
cmpb
insl
or
sub
dec
imul
mov
aas
xchg
stos
mov
repnz
push
movsb
push
enter
repz
jno
lahf
cltd
mov
mov
sub
cmp
leave
mov
dec
jmp
cmp
inc
fdiv
cld
inc
insl
adc
dec
fcos
pushf
enter
mov
outsb
pop
test
push
idivb
data16
fdivr
jmp
xor
cs
jnp
xor
or
scas
ficompl
mov
hlt
in
scas
leave
iret
test
push
test
out
and
sub
xchg
stos
lahf
mov
popf
or
popf
jl
repz
adc
adc
pop
out
jb
mov
lods
arpl
bound
adc
sbb
push
xchg
sarb
add
in
les
or
mov
divl
aaa
ret
dec
jp
cmpsl
mov
std
das
inc
jmp
add
pop
out
jae
jg
ds
dec
imul
ja
lahf
ret
xchg
ds
mov
jmp
sub
fwait
out
rorl
and
pop
lret
xor
sub
fists
mov
out
fmul
orb
aas
mov
dec
pop
xor
insb
aaa
push
arpl
mov
fcompl
aas
jmp
test
sbb
test
stos
sahf
xor
jle
xchg
out
cmc
ret
push
mov
scas
xchg
inc
mov
xor
xor
test
pop
mov
push
loopne
loope
xchg
frstor
shlb
rcll
jl
jecxz
dec
mov
jne
sbb
push
jbe
pop
cmp
ljmp
and
lcall
sub
fs
jae
aas
sbb
and
hlt
mov
hlt
mov
dec
dec
inc
outsl
mov
insb
ja
int3
mov
add
mov
mov
jp
mov
mov
xor
rcrl
repnz
lods
mov
pop
fcoms
lret
adc
scas
jle
mov
sahf
rcll
push
or
inc
dec
sarl
add
mov
add
stos
sahf
sub
roll
enter
mov
sub
push
movsl
fs
arpl
mov
dec
jmp
dec
out
xchg
movsb
fildl
mov
fiadds
gs
loope
dec
jl
leave
mov
jecxz,pn
repz
and
xlat
dec
xorb
call
pop
xor
stc
jne
leave
mov
xor
and
bound
loopne
mov
mov
test
sub
push
xchg
ror
mov
add
rcrb
sub
push
pop
movsb
les
lods
notl
jo
xlat
or
xlat
cld
push
in
mov
ljmp
and
inc
xchg
fwait
mov
cmc
inc
test
pop
ds
push
das
aad
mov
mov
rorl
test
xchg
stos
cs
aam
pop
icebp
jb
cmp
roll
mov
push
cmp
push
je
push
sahf
test
imul
add
jb
scas
fildl
mov
enter
jo
lcall
scas
mov
lds
lds
dec
scas
mov
lds
or
mulb
test
pop
or
jae
mov
movsl
sahf
imul
xchg
jne
or
adc
das
andl
cwtl
leave
push
dec
sahf
repnz
rclb
inc
mov
cmp
jle
jno
xlat
mov
leave
scas
cli
or
cmpsb
lcall
je
je
in
mov
fs
call
mov
sbb
adc
out
mov
cld
mov
mov
add
adc
ret
out
adc
cmc
inc
jl
jnp
xchg
jp
jne
cmp
cmp
imul
repnz
hlt
ret
mov
pop
dec
inc
inc
loope
cmpsb
sahf
aas
ljmp
sbb
mov
push
sarb
rcrb
fsubs
shll
inc
loop
jge
outsb
dec
lods
jne
sti
inc
icebp
cmp
loopne
mov
out
out
adc
mov
add
aad
in
push
xchg
jle
jmp
cmp
jbe
jl
mov
data16
cmpl
sahf
push
rorb
mov
fyl2xp1
sub
es
mov
jg
jae
jb
pop
call
out
mov
outsb
dec
mov
out
lahf
sub
pop
and
sbb
testl
sub
cmpl
mov
inc
das
inc
ds
fnsave
lahf
sub
in
pop
out
cltd
mov
and
lea
xor
adcl
adc
shrb
lds
lahf
rorl
scas
fs
into
fidivs
jns
mov
dec
or
shlb
stc
inc
out
pop
into
rcll
fxch
pop
popf
popf
sbb
cmp
add
mov
xor
or
cld
loopne
push
aam
pop
mov
cld
std
push
cmp
hlt
jg
jbe
sub
add
scas
cmp
out
xchg
adc
lret
mov
dec
cld
mov
push
pop
xchg
jl
inc
aas
cmp
and
ljmp
cmpsl
cld
push
or
out
push
pop
mov
xchg
out
jno
pop
xchg
scas
mov
fdiv
or
adc
sbb
mov
sbb
cltd
mov
mov
xchg
and
pop
and
sti
lds
pop
jns
lods
lret
fistl
jne
repnz
popa
out
push
shrb
int
out
mov
lock
xor
adc
dec
aas
xchg
sbb
mov
out
mov
mov
iret
sbb
dec
loop
imul
ds
les
int3
jae
push
mov
mov
dec
imul
push
inc
test
add
cmpsb
mov
xor
push
or
cmp
push
mov
lods
inc
iret
cmpsb
fs
repz
imul
js
pop
movsb
mov
jge
roll
jb
sbb
add
or
loop
dec
mov
stos
mov
jle
sbb
cmp
xchg
iret
sub
or
mov
xor
xchg
pop
gs
jbe
xchg
mov
adc
jae
xchg
cwtl
scas
sbb
in
and
aaa
mov
jl
mov
rcll
mov
add
push
pushf
mov
push
ds
in
mov
adc
fsubl
ret
mov
and
xor
sbb
jle
xor
cmp
pop
pop
pop
js
dec
jmp
stos
mov
ss
xor
jo
xor
pop
cmc
inc
in
push
test
addr16
clc
aad
iret
nop
mov
insb
dec
xor
dec
push
cmp
dec
push
xchg
add
call
cmpb
jmp
scas
fsubr
data16
cld
cmpsb
ja
lret
insb
pop
adc
adc
ds
sub
cltd
das
and
mov
jae
mov
out
push
add
cwtl
imul
cmp
mov
push
repz
pop
mov
dec
inc
mov
adc
aas
push
push
mov
mov
jge
jnp
cwtl
jo
cld
inc
push
adc
push
jae
cmpsb
and
gs
imul
daa
xchg
out
ror
or
mov
jecxz
ret
mov
imul
inc
int3
in
rcrb
aas
cs
mov
xchg
mov
fmull
xchg
cmpsl
icebp
test
mov
push
add
dec
mov
push
in
sub
push
xchg
push
scas
jp
add
add
test
ja
mov
sbb
jns
and
movsl
sub
jg
fcoml
push
mov
lahf
fldcw
jge
cwtl
xchg
jb
xchg
jmp
xor
or
sub
and
popf
dec
out
dec
mov
pop
or
xchg
sbb
xor
ja
out
in
addb
push
clc
xor
andb
je
xor
iret
mov
add
add
dec
insl
and
repz
js
stc
mov
mov
testl
in
insl
lods
mov
pop
repnz
jno
in
lret
and
enter
and
pop
lret
in
ds
loopne
add
mov
fldt
scas
jg
loopne
ss
jl
dec
bound
xor
into
mov
aad
lea
mov
call
sti
test
jbe
es
dec
sarl
stos
popa
mov
pop
sub
jbe
cwtl
push
sti
push
enter
push
lock
ss
inc
leave
dec
int3
fstpl
xchg
arpl
sahf
mov
xchg
pop
shll
inc
adc
jge
push
cwtl
stos
lret
add
insl
dec
push
adc
lds
mov
call
and
mov
inc
jne
lret
jp
pop
mov
mov
data16
pop
dec
jecxz
or
loopne
movsl
xchg
and
aaa
xrelease
lds
add
repnz
pop
out
lock
add
inc
sub
mov
sbb
dec
sub
cmpsb
sti
and
push
repnz
gs
jb
addb
xor
mov
mov
gs
dec
mov
notl
xor
mov
sahf
or
pop
push
push
out
fisubrl
inc
call
or
push
pop
bound
dec
push
test
sbb
add
adc
jns
xchg
call
rorl
enter
aaa
jne
rorl
shrl
scas
jb
pop
adc
fwait
pop
cmp
xlat
mov
adc
sbb
mov
aas
in
pop
jmp
jnp
daa
leave
fiaddl
rcll
add
sbb
loopne
ljmp
jbe
inc
jg
pop
and
push
pusha
testb
pop
adc
fbstp
enter
out
loope
jb
test
out
inc
pop
movsl
mov
mov
repnz
aam
loopne
ja
iret
mov
pop
mov
enter
lret
adc
cltd
outsl
lret
ret
popa
pop
insl
sbb
ret
mov
mov
sub
sub
mov
stos
sub
std
test
xchg
add
scas
rep
sbb
jmp
cmp
stos
mov
rcrl
stos
pop
loop
out
das
pop
int3
aaa
ret
and
cmp
push
out
ret
push
popa
imul
xchg
mov
add
aas
mov
cli
jns
sbb
lret
fbld
add
and
xchg
out
rcrl
imul
pusha
push
push
scas
adc
dec
jns
mov
jg
add
test
int
mov
ud1
stos
mov
jo
pop
movsb
in
imul
jp
jno
outsb
and
pop
cltd
jno
stos
mov
sahf
pop
jmp
in
inc
andl
jnp
sbb
or
icebp
stos
cmpsl
push
mov
inc
aam
push
jb
jns
lock
pop
jo
xchg
fstl
test
push
and
call
push
cld
sub
loop
lods
pop
fwait
push
out
shlb
mov
jmp
dec
adc
jecxz
or
mov
lret
push
jg
lcall
pop
pushl
mov
lcall
call
jl
repz
jne
inc
sti
aaa
data16
add
push
cmc
xchg
mov
inc
sub
cmpsb
sub
or
sub
sbb
adcl
addr16
loopne
sbb
scas
aas
push
jb
dec
push
ljmp
xchg
cmp
push
push
cmp
cmp
js
or
mov
mov
bound
add
mov
xchg
shr
fnstcw
add
cs
es
loop
repnz
int
loop
mov
scas
mov
leave
pop
daa
pop
in
and
orb
inc
rcrl
in
dec
cmpsb
jo
push
adc
pop
mov
add
xchg
int3
sbb
sbb
mov
xor
add
fisttpl
fsubl
xchg
mov
push
mov
arpl
repz
mov
mov
bound
mov
push
call
jae
or
adc
out
sbbb
jae
jns
dec
adc
ret
bound
and
dec
adc
sahf
pop
es
int3
cmp
mov
pop
pop
cltd
push
cmpl
je
out
push
cld
mov
ret
shl
leave
fcomps
mov
das
xor
arpl
mov
mov
xor
pusha
out
mov
push
aam
test
pop
add
pop
subb
ja
or
les
push
add
nop
sbb
xorb
insl
mov
jns
add
jmp
mov
enter
or
fdivl
sbb
aam
out
cmp
aam
jno
shrb
jmp
mov
ret
sub
rol
mov
out
or
xlat
pop
jge
cmp
call
nop
jnp
jmp
or
ss
jno
and
jmp
dec
shrb
dec
sti
xor
adc
shlb
jbe,pn
test
adc
adc
lahf
pop
mov
iret
sbb
mov
outsb
sbb
pop
mov
mov
mov
mov
cmpsl
test
xor
test
push
push
movsb
sahf
push
nop
popf
mov
ljmp
push
lret
push
mov
and
ds
lods
lods
or
sbb
insl
cwtl
pop
mov
cli
xor
mov
lds
push
aas
lret
and
inc
and
sbb
jmp
inc
or
inc
mov
sti
mov
mov
pop
push
cmp
fadds
mov
stos
test
jbe
cwtl
out
rolb
sbb
sbb
jmp
push
out
push
out
jo
lcall
in
push
mov
sbb
mov
jne
mov
cwtl
outsb
sub
dec
inc
mov
jnp
fisubrl
pop
adc
adc
bound
and
jb
aas
mov
fisttpll
dec
dec
inc
and
mov
mov
gs
ljmp
add
xor
fwait
jl
rcll
jns
push
enter
stos
jg
inc
mov
xorb
push
mov
inc
cmp
cltd
in
mov
leave
add
ljmp
adc
bound
xchg
jae
sbb
ret
iret
daa
mov
pushf
fstl
add
sti
push
xor
or
dec
cwtl
or
push
pop
jno
mov
mov
pop
decb
add
or
mov
imul
sbb
jo
cmc
cmpsb
mov
lods
mov
movsb
jo
cmpsl
test
xchg
cmpsb
or
pushl
fwait
mov
xchg
gs
add
sbb
std
pop
je
test
push
rcrb
arpl
and
push
dec
mov
fcmovu
js
clc
movsl
es
test
lea
aad
dec
mull
mov
jecxz
or
cwtl
cwtl
mov
and
or
lret
dec
aam
cmpsb
dec
pop
sbb
loopne
mov
xor
movsb
sbb
data16
rorl
cmc
push
fdecstp
mov
push
outsl
pop
jns
fwait
add
popf
and
push
cmp
sub
jmp
aaa
push
cmpsl
add
xchg
fucomp
fmul
sub
push
jo
jl
int3
imul
rol
xchg
or
adcb
pusha
and
lds
push
andl
xchg
inc
mov
adc
add
js
dec
cs
inc
sysexit
sbb
lret
jo
outsl
scas
jbe
sub
inc
data16
push
push
lcall
fstpt
in
rcll
aaa
leave
stos
pusha
add
sub
pop
mulb
jae
dec
mov
dec
in
push
cwtl
sbb
mov
mov
outsl
pop
ror
and
cmp
js
fdivr
xchg
ja
mov
or
cmp
in
fstp
cld
mov
movsl
inc
fcom
mov
in
insl
jns
push
pop
sub
cmp
cmp
or
push
stc
bound
orb
adc
fsubl
lcall
xor
and
pop
xor
call
adcb
xor
or
lods
xchg
jne
adc
nop
cmp
popf
leave
insl
idivb
pop
and
jp
mov
lods
in
lea
xlat
mov
aam
movsl
sbb
xor
in
mov
jns
push
jb
sbb
das
aam
or
jmp
ror
dec
cs
shrl
xor
leave
jmp
push
push
mov
mov
jb
mov
and
sbb
imul
xor
sub
mov
and
aam
xor
xchg
push
imul
bound
lods
rcll
cmpsl
pop
popf
push
push
add
dec
pop
add
jb
dec
mov
out
jns
fidivs
sub
jmp
jmp
ret
xchg
push
sahf
adcl
mov
cmp
mov
int3
sbb
stos
mov
or
inc
int3
dec
jmp
das
sbb
xchg
test
or
xor
outsl
adc
mov
ss
push
dec
daa
int
pop
xchg
pop
cli
fstps
lcall
xlat
stos
xchg
and
jle
cmovs
lea
jne
loop
and
ljmp
or
sbb
lahf
cmp
cmp
in
cmp
lcall
movl
mov
cmc
enter
clc
pop
xchg
enter
mov
jle
jb
xchg
sbb
enter
xchg
icebp
pop
test
pop
arpl
sbb
and
fwait
rolb
fisttps
scas
outsl
mov
adc
jo
mov
ss
sub
and
mov
addr16
inc
add
pop
jl
inc
les
bound
xlat
add
lds
dec
jo
pop
ss
cmp
bnd
movsl
push
arpl
mov
out
cld
popf
test
jp
fisttpll
aad
pusha
bound
imul
mov
or
xor
cmp
addr16
mov
dec
pop
dec
and
int3
pop
add
pop
sub
repz
jne
test
pop
das
in
rclb
movsl
xchg
mov
idiv
insb
sub
cmp
xchg
arpl
rorl
mov
adc
arpl
pop
mov
arpl
pusha
in
fists
pusha
stos
push
addr16
mov
jne
mov
ja
add
int3
outsb
imul
aas
cmp
add
push
fs
dec
mov
xchg
mov
int3
push
icebp
loopne
ljmp
pop
clc
rolb
push
sahf
outsl
xchg
inc
adc
pop
lods
or
sbb
mov
orps
and
xchg
jno
es
out
sub
movsb
ret
sar
mov
push
jae
add
dec
cmp
dec
xor
xchg
dec
push
xchg
ficompl
cmp
rcrb
lcall
outsl
jp
push
outsb
incb
icebp
sbb
push
mov
push
inc
aad
mov
push
pusha
stc
test
inc
sbb
pop
or
loope
insb
cmpsl
loope
imul
pop
cmp
dec
lret
mov
repnz
cmpsl
xchg
jmp
mov
mov
popf
ret
inc
in
add
push
add
or
repz
stos
xor
jnp
jmp
mov
mov
loop
outsb
xor
cli
mov
mulb
clc
jp
sub
sbb
adc
jle
xchg
push
and
mov
pop
daa
sbb
loope
outsl
sbb
push
enter
int
cmp
xchg
into
daa
roll
lret
movsb
push
ds
ss
xchg
inc
mov
push
sarl
outsl
cmp
or
cli
insl
xor
pop
push
lret
xor
adcl
cmp
pop
lret
jb
stc
add
cmp
jae
push
rorl
jno
adc
decl
movsb
loop
cld
out
dec
mov
fimuls
jmp
dec
xchg
cld
fsubrs
mov
push
or
fnstenv
enter
pop
xchg
sbb
push
rorl
adc
push
mov
push
pop
cmc
arpl
leave
push
lahf
pop
cltd
les
aaa
xchg
mov
xchg
inc
xchg
nop
mov
adc
daa
push
xchg
ret
lods
inc
add
pop
fnstenv
mov
mov
mov
addl
push
div
sub
jmp
dec
sbb
rol
mov
cltd
imull
adc
leave
sti
sarb
cmp
lret
out
jg
cmpsb
jns
xchg
popf
jnp
push
jp
rclb
adc
jns
xlat
mov
mov
jns
xor
sub
sbb
xchg
mov
inc
mov
inc
add
aad
nop
inc
jns
lahf
push
aad
mov
scas
pop
faddp
sub
loopne
in
pusha
mov
mov
push
lock
pop
jecxz
ljmp
fdivs
ja
mov
cmp
adc
mov
add
push
sahf
fwait
and
shlb
ret
xor
fs
jge
and
jge
lcall
xchg
in
arpl
je
roll
int3
mov
or
dec
sub
rolb
fcoms
pop
adc
sub
push
add
inc
scas
jge
stc
xchg
xchg
in
cmp
test
cld
cmp
int3
and
pop
cmp
add
add
jle
xlat
lods
movsb
shlb
std
jle
mov
scas
imul
stos
addr16
inc
leave
push
adc
mov
roll
sti
adc
fdivs
pop
add
rcrl
push
push
push
inc
mov
aad
adc
inc
adc
sti
xlat
adcb
lret
lret
pusha
mov
pop
push
push
icebp
inc
pop
add
popa
jb
jo
mov
jno
pop
daa
insb
mov
and
sub
out
xchg
and
lods
and
notl
jb
cmp
cmpsl
imul
pop
mov
loop
xor
sbb
int3
add
es
jp
sbb
daa
jns
sub
mov
ret
xor
cmp
mov
lods
mov
dec
pop
and
mov
pop
add
xchg
adc
shr
xor
rorl
mov
es
mov
and
pmuludq
fisttps
mov
mov
aaa
cs
adc
lea
movsl
outsb
fwait
enter
roll
loope
pop
adc
jne
repz
test
inc
lock
xor
pop
fidivs
push
add
pushf
loop
out
jge
cmp
iret
add
cmp
dec
sbb
sub
andl
push
sbb
and
mov
dec
or
pop
pop
addr16
loop
popa
pop
ljmp
inc
iret
pop
ds
cmp
leave
mov
pop
lds
mov
mov
sub
pop
push
cmpsl
pushf
xor
pop
jo
aam
mov
or
sbb
std
sub
add
out
mov
inc
mov
dec
pop
jb
std
stos
inc
pop
fcmovb
push
sarl
sub
push
jno
cltd
xor
xchg
arpl
push
push
cli
idivb
xor
ret
xchg
jbe
movsl
mov
cmp
sbb
addl
jmp
mov
add
push
mov
out
out
jno
cwtl
bound
pusha
xchg
push
jbe
cmp
leave
add
push
mov
mov
pusha
cmp
and
adc
sti
lods
loop
xchg
dec
xchg
mov
call
mov
roll
daa
lods
ret
lods
dec
push
add
pusha
mov
dec
jecxz
inc
xor
stc
xchg
xor
fwait
dec
shlb
mov
dec
push
xchg
movl
jp
sbb
or
push
push
mov
data16
adc
call
into
mov
add
test
insb
shll
mov
pop
and
test
add
outsb
insl
popf
call
inc
into
xor
rol
imul
fisttpl
in
pop
push
in
dec
mov
loope
in
mov
and
xchg
jle
loope
adc
int3
dec
mov
mov
sbb
rorl
sbb
nop
in
jp
in
lcall
scas
mov
jp
mov
cmpsl
incl
stos
dec
lcall
dec
sub
mov
in
jmp
popf
mov
pop
jbe
stos
stos
fdivrs
data16
xchg
cltd
incb
push
sbb
jae
cmp
imull
inc
cmpsb
into
ljmp
std
adc
rcrl
mov
mov
push
fwait
aas
xchg
mov
pop
xorb
test
loope
jno
sti
sub
cmp
jae
outsl
loopne
or
mov
jcxz
adc
rclb
push
cltd
pop
gs
je
ret
xchg
mov
push
dec
arpl
int3
cmc
mov
push
and
out
pop
out
cli
adc
and
int3
sbb
add
jns
imul
jecxz
mov
xlat
cld
into
imul
xchg
add
inc
nop
jno
loop
and
mov
xor
iret
or
and
pop
or
push
xor
inc
popa
leave
lret
scas
sub
cmp
inc
loope
fwait
push
sti
das
cltd
and
cwtl
sub
cmc
mov
adc
mov
jg
jmp
into
mov
adc
jecxz
enter
sbb
int3
mov
push
iret
jge
sub
pop
mov
lahf
cmp
xor
inc
pop
mov
sbb
scas
inc
xorl
clc
ss
sti
inc
or
rol
dec
shlb
mov
jo
in
rorb
dec
aad
lods
repnz
nop
or
or
in
out
or
mov
mov
inc
rcr
add
test
in
cmp
shlb
jmp
cmp
mov
arpl
cmp
adc
mov
sub
ret
loop
push
and
cwtl
sub
or
fwait
lds
and
sub
sub
xchg
xchg
dec
mov
xor
xor
stos
adc
pop
scas
push
and
mov
jmp
mov
push
jns
dec
xor
ljmp
loopne
cmp
dec
cmp
adc
ret
inc
lock
mov
add
ret
scas
loope
loopne
bound
cmp
cmc
bound
dec
aas
mov
rol
lods
sbb
imul
inc
sbb
xlat
loopne
mov
inc
scas
aam
pop
jae
xchg
dec
mov
ror
pop
ljmp
imul
mov
js
test
fwait
das
subl
sub
jae
inc
xchg
das
jne
test
xchg
adc
inc
lods
in
lods
sbb
sub
mov
or
lds
sbb
repz
push
mov
aaa
mov
cmp
and
push
mov
jne
aas
jo
imul
loope
cltd
xchg
lahf
inc
add
movsb
mov
cmc
iret
cmp
jmp
mov
sub
push
lds
pop
jg
inc
leave
dec
enter
fistpl
sti
lods
idivl
xor
inc
mov
outsl
fnsave
mov
jge
sbb
adc
imulb
inc
dec
in
lcall
mov
pop
mov
lcall
repnz
movsl
mov
xchg
movsl
jl
and
jnp
stos
sub
cmp
sub
out
cli
jecxz
sbb
cmp
negl
mov
fisubs
mov
out
loopne
repz
inc
pop
inc
jno
insb
into
xchg
or
sahf
adc
sbb
xchg
inc
sub
cmpb
pop
pop
dec
jns
inc
fisubrs
inc
inc
and
mov
aaa
add
repz
cmpsl
pop
mov
push
addb
jecxz
xchg
pusha
sbb
sbb
push
int
daa
out
ljmp
mov
aaa
mov
lea
rcl
sbb
shll
mov
sub
pop
and
jo
inc
mov
ja
cmp
pop
sbb
xchg
mov
into
mov
mov
out
inc
popa
push
popf
mov
mov
push
xor
mov
push
cmpsb
jle
sti
cli
sub
pop
sti
addr16
xchg
mov
lods
pop
mov
ret
mov
jae
ret
mov
out
pushf
jns
repz
ds
adc
lahf
dec
stos
mov
shl
pop
jno
pop
lods
dec
movsl
add
ss
jbe
das
mov
xor
insb
pop
jmp
mov
dec
out
movb
dec
jno
inc
add
mov
dec
gs
inc
fiadds
push
add
inc
aad
inc
pop
stos
dec
jo
mov
cmp
adc
gs
imul
fstps
and
mov
xor
fcmovnbe
loope
add
dec
clc
pusha
mov
or
cmp
add
mov
mov
push
and
jmp
push
inc
dec
cltd
xlat
loopne
roll
mov
ljmp
and
sub
and
imul
pop
gs
mov
jb
fldcw
cmc
mov
mov
push
es
pushl
and
mov
inc
call
ja
lea
pop
scas
icebp
lahf
xorl
leave
adc
mov
jae
in
fistpll
mov
mov
cmpsl
fistps
or
inc
xor
inc
hlt
movsl
adc
xlat
and
lds
iret
test
mov
adcl
fs
enter
cmp
adc
hlt
mov
mov
cwtl
test
js
inc
cmp
fs
shrb
xchg
outsb
jecxz
push
mov
xchg
jle
inc
or
xchg
mov
dec
cmp
cmp
push
push
lods
rcr
and
fistpl
inc
js
lds
and
sbb
cld
hlt
pop
and
mov
cld
inc
push
nop
out
out
cmpsb
xchg
push
mov
xor
pop
xorb
lds
movsl
fldlg2
xchg
ljmp
push
bound
decb
popf
push
sub
movsl
add
out
add
decb
adc
aaa
mov
sub
xor
push
push
xchg
std
mov
daa
push
jns
jb
lea
mov
clc
psubd
pushf
dec
ljmp
or
std
int
mov
mov
js
dec
call
mov
fwait
push
stc
xorl
mov
mov
sarl
jnp
push
fisttps
sub
xchg
mov
cmpsb
cmpsb
push
outsl
inc
jg
pop
pop
adc
pop
idivb
push
mov
push
fildl
in
loope
sbb
pop
loopne
dec
andb
pushf
adc
sahf
inc
mov
fisttps
mov
nop
test
jle
shl
ss
xor
xor
and
pushl
pop
fiaddl
movsb
popa
jmp
xor
int3
out
lock
lea
sub
jecxz
gs
lahf
shlb
add
xchg
cmpsb
and
pop
xchg
jae
and
insb
sbb
mov
adc
aam
adc
lcall
ds
shrb
cmp
mov
es
sub
in
fs
loop
and
push
and
push
mov
in
xor
mov
dec
sbb
sahf
xor
xchg
jns
jmp
outsl
push
cmp
adc
inc
cmp
rorl
and
sbb
sbb
ds
roll
dec
push
mov
jns
sbb
mov
ror
in
stc
aas
in
xor
or
leave
push
loopne
sbb
aad
xchg
or
mov
pusha
pop
inc
push
and
dec
fs
pop
loope
mov
add
xor
jl
test
pop
fbld
andb
sbb
or
stos
sub
or
subl
fdivp
pop
push
leave
mov
sbb
pop
out
pusha
shlb
sbb
mov
mov
cmp
fadds
pop
aad
xchg
icebp
dec
mov
outsb
aam
ljmpw
loopne
roll
push
movsb
aam
mov
clc
xchg
mov
sbb
add
arpl
pusha
adc
loopne
mov
jnp
push
sub
push
push
andb
lahf
scas
jp
outsb
push
fucomi
cli
push
movsb
int
xchg
mov
add
lret
out
mov
sbb
pop
pop
loopne
adc
inc
jg
fldcw
out
push
mov
or
shll
imul
xor
std
push
jecxz
jnp
popf
cltd
mov
cld
mov
cli
movsb
and
test
jl
pop
xchg
lcall
sbb
cmpsl
aad
pop
mov
mov
jae
mov
cmc
lahf
shll
test
call
inc
add
shrb
dec
mov
fs
pop
xorb
cwtl
cwtl
sub
jnp
mov
mov
and
mov
insl
dec
mov
mov
in
stos
mov
sbb
pop
fstpt
sbb
scas
jnp
xchg
ret
fisubs
repz
cmpsb
mov
out
jecxz
lretw
loopne
jg
jno
inc
or
aad
xchg
fsubrl
mov
ficoms
mov
mov
pop
imul
js
inc
inc
pop
inc
rcrl
add
rcl
scas
mov
out
movsl
push
mov
jecxz
adc
and
sbb
sub
and
mov
cmp
out
xchg
cmp
or
sbb
pop
jne
dec
cwtl
fld
or
push
rcl
push
inc
movsb
cmp
out
push
gs
mov
sbb
rcr
fcoms
pop
adc
pop
scas
jmp
push
jne
mov
adc
inc
cmpsl
mov
test
inc
les
and
xchg
je
inc
cmp
data16
repnz
cmp
push
xchg
jg
lods
ljmp
jb
inc
sub
and
or
push
and
cmp
hlt
cmp
loope
and
add
mov
and
inc
adc
mov
sbb
pop
push
sbb
sub
sbb
push
arpl
mov
out
ret
push
push
mov
mov
inc
out
pushf
scas
cld
and
adc
pop
popa
add
je
mov
je
jb
mov
daa
mov
fsts
fcoms
sarb
sub
jmp
cmp
pop
xchg
inc
into
cmp
inc
subl
cli
jle
cmp
fsubr
push
dec
loope
push
je
xchg
shlb
sbb
rcrb
jns
mov
or
stc
cli
and
pusha
outsl
pop
cmp
mov
inc
sub
imul
or
dec
jecxz
subl
xchg
popf
push
cmp
sarl
loope
push
loope
sahf
call
movsb
scas
pop
imull
inc
jb
and
jecxz
pop
into
dec
jb
sbb
aas
addb
fnsave
stos
divb
cmpsb
call
fistpll
adc
mov
fisubrs
sub
sbb
ret
mov
out
push
movsl
das
sahf
loope
or
shll
int3
stos
inc
out
adc
outsb
or
nop
test
fisttpl
xlat
sti
inc
xchg
movb
pop
jno
fadd
or
push
mov
out
pusha
cltd
mov
push
jae
fsubrs
or
add
xchg
xchg
jg
out
testb
add
inc
jbe
pop
and
gs
in
orl
mov
imul
inc
incl
dec
xchg
inc
outsb
push
jecxz
lods
jecxz
or
lock
in
xlat
xor
int3
sbb
and
ss
cmpsl
jg
mov
xor
ret
push
in
cmp
jmp
repnz
leave
aas
sub
loope
xchg
lcall
sub
push
mov
enter
fnstsw
addr16
sbb
xchg
je
add
jnp
pushf
lods
movsl
xor
loopne
je
jle
jmp
scas
es
jns
mov
subb
and
je
jle
fwait
push
dec
out
hlt
aam
inc
mov
add
adc
mov
mov
dec
fxch
adc
fs
mov
inc
jae
mov
xor
cmp
push
out
xchg
cs
add
mov
shll
xor
mov
arpl
rclb
bound
lcall
mov
pop
xor
div
mov
push
das
das
mov
mov
jns
adcl
adc
sub
xchg
dec
outsb
jmp
xchg
or
mov
imul
xchg
rcrb
outsb
sub
lea
test
push
fimuls
rolb
sbb
loope
inc
sti
xchg
mov
mov
dec
lahf
enter
pop
cmp
mov
adc
aaa
add
add
xchg
add
data16
push
inc
and
add
add
and
je
in
fdivr
addr16
call
mov
adcl
mov
sbb
xchg
sbbb
xchg
mov
loop
push
jp
xor
icebp
push
and
clc
mov
mov
push
fs
jns
nop
lods
adc
movsl
pop
dec
and
jge
mov
mov
mov
cmp
adc
out
fadds
lods
xor
pop
add
mov
jne
jle
jae
push
dec
test
mov
pop
add
repz
ja
out
movsb
dec
mov
xchg
sti
xchg
push
pop
mov
cmp
sbb
and
xchg
addr16
cmp
pushf
xchg
pop
xchg
ja
movaps
dec
test
enter
or
std
cwtl
loopne
mov
jle
pop
cld
mov
mov
jb
rorl
sub
push
mov
cmp
and
in
and
mov
ja
jb
pop
xchg
cmpb
movsb
mov
cmc
or
popf
xor
lods
dec
aam
in
xorl
push
pusha
xchg
and
adc
out
arpl
loope
in
mov
lds
jle
pop
out
stos
or
nop
leave
shrb
in
fcomps
test
sti
sub
pop
jge
pshufw
rcrb
out
push
lods
jle
sub
out
pop
cmp
subb
xchg
ss
dec
or
mov
cld
aad
push
test
scas
ss
bnd
fdivrl
addr16
and
mov
adc
inc
jae,pn
mov
push
rol
jle
out
and
xor
inc
aad
inc
or
daa
jmp
nop
adc
arpl
jmp
mov
add
in
jge
sub
lgdtl
mov
mov
xchg
movsl
mov
aaa
cmp
inc
jbe
xchg
out
sub
test
insl
fiaddl
mov
mov
ret
push
fcomps
xchg
cs
and
in
inc
pop
add
add
scas
mov
ds
add
fdivl
pop
out
pusha
in
ja
call
add
lret
es
call
xlat
movb
test
jp
in
xor
test
or
jg
ficomps
imul
cmp
repnz
lahf
push
call
lods
and
fs
and
cmovb
iret
mov
pusha
js
std
fxam
lcall
cmp
popf
cmp
xchg
popf
mov
aaa
rorl
arpl
rolb
xlat
jp
and
dec
or
push
xlat
in
mov
popa
lods
popf
rorb
dec
sbb
call
xchg
inc
fsubrl
sub
lods
ja
xor
jnp
xor
cltd
jecxz
xor
add
cltd
mov
movsb
int3
mov
cmp
sbb
dec
loope
imul
mov
mov
pop
insl
push
push
adc
mov
sbb
outsb
outsl
push
jl
xor
or
outsl
push
out
mov
lahf
bound
add
add
xor
or
inc
adc
add
sub
or
insb
stc
data16
in
std
mov
stc
outsb
mov
add
jae
mov
out
push
jle
xchg
pop
jmp
jecxz
push
std
pop
cmp
repz
lods
jecxz
inc
pop
cmp
xlat
mov
sbb
ds
stc
add
mov
inc
cmp
bound
jecxz
push
xchg
mov
dec
test
test
repnz
sbb
mov
adc
ficoml
pushw
lock
movsl
mov
jbe
or
jne
imul
in
adc
sub
pop
ljmp
cmpsb
mov
pop
or
jmp
xor
fistpl
mov
cmc
sub
fidivrs
inc
push
dec
int3
mov
decb
add
push
push
roll
repz
or
lods
cmp
or
mov
sub
pop
xor
movsl
lret
sbb
dec
insb
scas
jecxz
sub
daa
in
xlat
stos
dec
adc
shr
pop
les
mov
lret
add
and
jg,pt
inc
lret
jecxz
mov
push
fwait
jns
inc
xchg
pop
outsl
xor
out
insl
in
xchg
fistpll
pop
fs
pop
icebp
dec
jp
dec
adc
mov
in
xlat
pop
push
adc
fidivrl
cmpsl
data16
adc
mov
arpl
lods
dec
pop
pop
pop
outsb
mov
jge
sbb
and
mov
and
out
inc
cmp
inc
inc
es
push
into
xor
cmp
xchg
cwtl
sbb
jae
cmpsl
test
test
jnp
mov
jp
into
xor
and
popa
bnd
and
cmp
sub
into
jns
lock
out
pop
out
movsb
xchg
add
dec
daa
jmp
cs
and
cli
sbb
ljmp
push
pop
repnz
inc
jp
sbb
std
mov
xor
cmpsb
cld
lea
and
adc
push
cmp
movswl
bnd
iret
pop
fchs
push
or
add
jle
test
and
enter
loopne
add
cmp
idivl
aad
add
sbb
lcall
mov
mov
call
adc
push
xchg
lods
dec
mov
adc
in
fstpt
mov
cmp
clc
xchg
mov
jnp
dec
insl
sub
loopne
add
pusha
pusha
jg,pt
inc
push
dec
popa
inc
cmp
mov
repnz
mov
inc
fnsave
dec
sbb
push
inc
ret
adc
scas
adc
xor
dec
pop
ret
aam
sbb
dec
lods
mov
lock
jb
fchs
rep
xor
int3
dec
lods
in
or
and
repz
and
pop
mov
in
stos
dec
fs
pushf
mov
mov
sti
xor
fcmovb
pop
sti
push
jmp
sub
mov
adc
mov
lods
pop
dec
or
xchg
mov
sbb
mov
mov
mov
xchg
sbb
cmp
out
and
add
mov
xor
call
cld
jo
jno
add
sti
inc
xlat
fidivrl
push
movsl
sti
adc
push
loopne
push
test
push
xor
ja
hlt
cltd
push
gs
jl
ret
icebp
dec
mov
daa
aaa
inc
lods
into
xchg
clc
enter
xchg
or
in
push
jbe
fldlg2
mov
or
jbe
scas
shrb
roll
pusha
jnp
pop
adcb
dec
xchg
sub
fs
nop
imul
pop
mov
sub
dec
repz
dec
jle
add
xchg
sub
testl
xrelease
fiaddl
roll
mov
out
xor
or
es
and
ret
cmp
imul
stc
jae
push
jbe
pop
lahf
cs
or
movsb
and
imul
mov
mov
nop
loopne
cmpsl
addr16
pop
dec
mov
cld
push
lcall
cmp
lods
push
xchg
pop
pop
cvttps2pi
data16
jo
mov
push
pop
subl
cwtl
or
cltd
popa
std
jbe
add
je
sub
mov
stc
add
ljmp
lea
xchg
sbb
sub
xchg
jae
popf
add
xlat
mov
ret
jo
lret
mov
popa
rolb
pop
out
pop
aad
mov
push
xchg
push
mov
clc
mov
inc
or
fcmove
inc
cltd
iret
adc
fwait
loop
xor
stos
aaa
stos
dec
rclb
mov
xchg
xor
je
pop
add
std
dec
ja
adc
mov
jae
cltd
pusha
sbb
jno
and
int
outsl
xor
sbb
icebp
cmc
xchg
cmp
fwait
jae
iret
xor
xor
inc
sub
jnp
mov
stos
out
fdivrp
ljmp
sahf
jae
mov
xchg
enter
mov
ljmp
stc
jle
mov
and
and
pop
add
sub
add
scas
sarl
lods
mov
or
push
popa
in
ljmp
out
pop
dec
mov
dec
pop
negl
bt
xor
cmpsl
add
cmp
in
lock
or
lods
lock
jge
inc
mov
lcall
les
mov
xor
shrb
add
adc
push
loopne
outsb
add
xor
inc
fcomi
js
test
inc
xchg
inc
in
jo
outsb
mov
add
sahf
enter
dec
xor
out
xlat
inc
cmpsl
addr16
cmpsb
cmp
cli
lea
inc
mov
and
idivb
sub
mov
cmp
inc
inc
rcr
adc
sbb
icebp
int3
imul
cltd
xchg
and
dec
dec
mov
adc
out
mov
out
adc
sahf
adc
adc
out
sbb
sub
push
je
inc
leave
loopne
adc
mov
nop
dec
in
jnp
cmp
jne
ret
push
pusha
mov
lret
push
jne
idivb
incl
mov
icebp
inc
ds
in
ficompl
imul
ss
mov
push
or
dec
lret
xchg
jb
outsb
sub
xor
mov
push
out
add
push
push
bound
jb
adc
or
enter
cmp
lcall
mov
dec
cmp
repz
sbb
dec
je
push
jg
push
and
pop
repnz
mov
lea
or
jecxz
call
ret
push
jle
mov
mov
pop
mov
push
clc
out
mov
mov
lds
mov
cld
sub
jecxz
sub
mov
push
pop
mov
lds
loopne
mov
pop
shlb
xchg
mov
cmp
push
pop
hlt
mov
mov
dec
cwtl
sbb
adcl
pop
fidivs
jle
call
fmuls
aaa
int3
pop
es
nop
arpl
cmp
cld
cwtl
mov
mov
das
adc
mov
xchg
in
popa
fsubl
and
cmp
push
push
cli
cmp
xchg
dec
push
push
test
addr16
add
and
inc
push
sbb
cmp
mov
cwtl
jo
jl
mov
mov
sti
lds
jb
addr16
push
sbbb
adc
or
mov
sub
fwait
mov
cmpsl
pop
dec
cwtl
aad
es
xor
addr16
hlt
push
jnp
lods
out
or
enter
sbb
xchg
pushf
pop
xor
or
xchg
aaa
insl
enter
add
push
int
sbbl
pusha
xchg
sbb
sbb
dec
xor
imul
mov
movzbl
or
mov
cmp
mov
and
leave
mov
shrb
or
sub
sub
out
dec
fiaddl
xchg
mov
pop
push
mov
insl
cmpsl
lods
inc
mov
mov
jno
push
xchg
into
lds
out
imul
rcrl
xor
cld
lea
in
and
sub
outsb
mov
les
loope
xlat
mov
shrb
ja
mov
pushl
add
jb
addr16
pop
jmp
out
cld
out
ljmp
xor
and
xor
repnz
psraw
test
movsb
cmp
dec
addr16
jmp
faddl
fs
lock
jg
out
push
test
mov
pmullw
pop
jns
movsb
das
or
andb
cmp
test
jns
sbb
aad
cmpsb
push
dec
ficompl
pop
push
jl
pop
icebp
mov
sub
pop
in
jae
stos
dec
jmp
mov
pushf
push
jg
rorl
push
pop
xchg
sbb
test
gs
iret
int3
lods
or
sub
jge
insb
xchg
shlb
add
add
cmpsb
or
push
mov
mov
sub
or
lret
imul
pop
inc
fsub
sbb
dec
sub
repz
xchg
pop
es
xchg
dec
mov
imul
icebp
jns
sub
aaa
in
dec
push
inc
mov
cmp
lods
sbb
out
addr16
push
inc
lahf
xchg
bound
jns
and
xchg
jecxz
lret
sub
xchg
pop
pop
ret
daa
bound
sub
jns
lret
xor
xchg
mov
rcll
dec
xlat
sahf
into
jmp
je
pop
push
fistl
aam
sahf
or
stos
cmp
lods
imull
cmp
rcrl
xchg
lcall
sbb
fadds
cmp
fidivrl
rcl
dec
mov
sbb
inc
mov
push
or
daa
xchg
add
pop
pop
jbe
mov
addr16
and
jo
sub
mov
jmp
cmp
xbegin
or
ja
cmp
outsb
lds
xchg
and
add
pop
cmp
scas
in
push
icebp
cmpsl
sub
xor
pushf
mov
xor
out
inc
xchg
mov
add
enter
jp
loopne
stos
and
xchg
mov
and
divb
xor
xor
mov
out
in
insl
aas
add
jmp
pop
mov
cmp
dec
adc
stc
mov
sbb
mov
add
les
rcll
and
xor
xchg
nop
inc
mov
mov
jl
test
and
jnp
loopne
pop
and
sub
pushf
mov
subb
jge
aaa
sub
add
and
mov
out
bound
push
ret
sar
out
loope
pop
adc
cwtl
mov
hlt
mov
push
xchg
out
insl
push
imul
negb
outsl
fsub
and
and
pop
jecxz
xchg
mov
aas
xchg
test
xchg
jnp
add
sub
in
xor
in
pop
enter
ds
xchg
mov
in
mov
cmpsl
sub
outsb
inc
ss
fldl
mov
push
sub
rcl
stc
pop
dec
pop
gs
xor
pop
cltd
xchg
les
fcomps
pusha
push
xchg
fisttpll
mov
dec
mov
loop
in
cmc
rclb
or
inc
dec
xor
cmpsb
ret
sbb
scas
and
jg
loop
leave
push
inc
addl
nop
adc
in
xchg
or
mov
adc
cmp
push
leave
fldenv
dec
fucomp
movsb
inc
push
shlb
inc
int
push
jns
jle
popf
xor
in
inc
add
arpl
outsl
cmp
leave
push
inc
mov
dec
sub
ficompl
adc
xchg
push
fistpl
push
and
sbb
push
jno
in
push
inc
xor
push
cmp
inc
cmc
jmp
or
out
fisttps
les
inc
or
mov
js
icebp
into
stos
jmp
insl
or
pushf
fcompl
lea
in
pop
cld
dec
xor
aaa
jmp
mov
push
mov
outsb
dec
lea
or
jne
loop
cmp
and
sbb
mov
movsb
push
mov
in
mov
test
lea
loop
call
arpl
stc
lcall
push
jns
xchg
std
xor
fisttps
or
cwtl
cld
gs
add
inc
mov
jne
ss
xchg
daa
xor
lahf
pop
aaa
or
push
nop
pusha
aaa
into
pushf
lahf
inc
sub
cmp
push
fmull
mov
data16
add
xchg
adc
test
xor
add
outsb
fldl
or
jecxz
imul
pop
cmc
and
hlt
push
sarl
lcall
push
addr16
adc
repnz
cwtl
mov
mov
jno
dec
jo
pop
add
mov
dec
add
lcall
pop
xchg
jmp
push
rcr
mov
inc
mov
movd
orl
notb
sbb
mov
pusha
sub
mov
push
mov
mov
jg
popa
and
daa
mov
pop
addb
fcmove
out
push
data16
fdiv
inc
gs
arpl
adc
mov
loop
es
xchg
lock
ja
dec
ss
xor
stc
iret
cmpsl
inc
xor
imul
stos
xor
hlt
daa
jg
dec
cmc
lods
jmp
push
out
adc
cld
aad
lret
out
stos
sbb
into
inc
mov
movsl
sti
lods
lds
or
mov
jp
pusha
daa
xor
test
fdiv
and
rcl
in
icebp
into
jl
add
dec
sbbl
lock
mov
push
sbb
inc
subl
ljmp
xchg
jle
xor
mov
push
shlb
or
in
roll
cmpsb
popf
mov
mov
pop
cltd
pop
xchg
mov
lret
cmp
pop
rcrl
xor
lret
dec
xchg
adc
ja
push
dec
in
xor
jecxz
jb
testb
nop
clc
ljmp
push
jnp
aad
jl
mov
pusha
bound
stos
mov
mov
int
fldl
adc
adc
pop
adc
hlt
pop
push
in
ljmp
in
inc
sbb
movsl
popa
pushf
orl
arpl
shlb
fwait
jne
xchg
movsl
scas
imul
test
xchg
push
adc
sub
insb
repz
js
mov
xchg
jmp
mov
pusha
ss
scas
dec
arpl
in
das
std
test
push
adcl
push
sbb
inc
jmp
cmp
pop
cmpsl
mov
pop
push
stos
int3
pop
stos
sub
mov
sbb
imul
push
push
or
jmp
std
pop
rcl
sub
int3
lahf
js
jl
mov
nop
xchg
hlt
loopne
arpl
cmp
push
push
lods
loope
fwait
mov
cmp
xor
mov
mov
inc
sbbb
pop
pop
add
xchg
jp
lods
jne
cmp
add
sti
aaa
mov
rcrl
pop
inc
iret
lods
mov
rcr
cmp
jmp
mov
pop
xor
test
jg
aam
mov
pushf
scas
cmp
jns
mov
out
repz
in
in
push
mov
les
add
shlb
pusha
dec
loopne
fiadds
push
fidivs
mov
cmp
rorb
pop
mov
enter
movsb
mov
xlat
popf
xchg
es
mov
push
out
mov
jle
mov
lahf
inc
fsubrl
sti
mov
fs
lret
ss
popf
add
xchg
mov
mov
das
in
cmp
mov
mov
dec
out
icebp
cltd
imull
xor
iret
dec
sub
cmp
call
out
xchg
xchg
mov
cmp
adc
mov
push
fsts
adc
rcll
adc
xchg
pop
das
scas
mov
push
fwait
aaa
cwtl
sub
cwtl
xchg
ja
push
mov
add
jb
mov
mov
in
gs
scas
jns
adcl
mov
adc
pop
js
sbb
sbb
mov
jns
aam
movsb
pop
add
dec
dec
adc
scas
sub
jecxz
mov
aad
out
sahf
push
jo
jae
stos
test
cltd
shll
std
cltd
aas
cmpsl
scas
ja
jmp
scas
stos
cmc
pop
aam
call
dec
cld
xor
jge
insl
cmpsb
ss
orl
test
and
clc
fs
pop
into
jge
into
cwtl
out
imul
lods
sarl
xchg
cltd
mov
and
mov
mov
int
inc
in
shll
xor
pusha
outsl
fdivp
fwait
jb
xchg
pop
sarb
stc
test
xchg
pop
mov
stc
adc
pop
inc
stc
pop
cmpsb
mov
push
cmp
jl
fildll
je
shl
adc
inc
lods
mov
pop
mov
lahf
dec
sti
mov
cltd
mov
inc
pop
sub
add
xor
sbb
movaps
imul
movsl
jo
outsl
call
xchg
xchg
jb
xchg
in
daa
add
inc
xchg
cltd
lcall
sbb
jp
popa
ret
es
cwtl
repnz
mov
rcr
in
aam
xchg
mov
movsl
shlb
lret
outsb
rclb
dec
outsb
xchg
inc
aaa
lea
or
adc
or
daa
adcb
out
push
cmp
adc
cmp
pusha
dec
inc
pop
mov
mov
push
es
mov
lea
mov
pusha
or
mov
sub
mov
das
sbb
jns
aad
jp
pop
cmp
fwait
cmc
stos
lahf
outsl
sbb
inc
cmp
push
push
mov
dec
sub
int
sbb
nop
out
bound
mov
je
add
test
xor
sbb
es
inc
or
jecxz
xor
sbb
data16
push
pop
sub
sub
inc
repnz
jno
mov
push
pop
sbb
sub
orb
mov
enter
mov
and
out
repz
cmp
subl
shlb
dec
pop
push
call
sub
bound
fdivrl
push
icebp
jge
daa
cltd
mov
lods
fldt
popf
mov
and
xorl
sarb
mov
dec
sub
fldl2t
jle
xor
push
xor
sbb
dec
sbb
ret
jno
pop
xor
and
cs
js
mov
xchg
pop
ss
inc
int
dec
pusha
imull
xchg
in
xchg
jle
popa
jae
dec
scas
and
xchg
shrl
pop
mov
gs
enter
out
jo
mov
gs
pop
push
adc
xor
push
push
repnz
sahf
jecxz
lret
out
jle
mov
ret
fs
insb
in
gs
sbb
mov
fdivs
mov
call
test
push
or
add
pop
cmp
pop
jg
addl
sti
cmp
fiaddl
lcall
or
vmread
rcl
and
dec
inc
cmp
sbb
pop
je
cld
cmpsb
push
mov
cmpsb
loopne
data16
inc
insl
loop
pop
scas
les
in
lahf
mov
and
jmp
add
xor
mov
push
or
jns
mov
fs
repz
gs
mov
pop
fldcw
sahf
in
cld
das
pusha
pop
test
push
addr16
imul
shlb
or
sub
cs
dec
jmp
outsb
mov
sub
inc
jl
lcall
scas
andl
lds
aaa
cmp
ja
pusha
adc
and
mov
scas
fcmovbe
xorl
pop
scas
imulb
dec
and
das
dec
push
ljmp
pop
lret
push
leave
mov
scas
fidivs
mov
jl
rorl
cltd
int
cmc
movsb
popf
adc
jb
imul
mov
and
dec
rorb
jmp
dec
dec
movsb
xlat
scas
mov
cmp
loope
mov
push
add
loopne
dec
inc
rcl
test
mov
jp
jle
aad
lret
inc
rclb
dec
loope
test
pop
xchg
add
jno
ret
ret
stos
mov
pop
mov
or
leave
adc
leave
mov
xchg
into
mov
cld
push
sbb
jg
jg
mov
push
ja
sar
outsl
xor
push
adc
jp
xchg
dec
test
clc
xchg
and
hlt
cwtl
call
sbb
sub
fs
daa
sub
cmp
push
sub
add
add
add
push
out
scas
mov
fsubs
jns
test
mov
push
jmp
or
dec
lret
stos
jae
mov
push
popl
iret
addr16
xchg
lret
in
jl
mov
lret
jne
sub
in
mov
nop
push
pushf
pop
xor
mov
insb
xor
and
int
dec
push
test
xchg
cmpsl
jmp
std
mov
mov
mov
xchg
and
sub
imul
add
inc
ret
enter
test
add
mov
cmp
sub
push
lret
shl
xchg
jne
ljmp
adc
add
lcall
out
jge
imul
clc
shll
and
imul
shlb
faddl
xchg
sub
lock
dec
scas
mov
stos
jmp
mov
push
add
inc
mov
mov
xor
fimull
icebp
mov
inc
movsl
out
scas
cmp
outsb
test
and
xchg
or
mov
jb
xor
xlat
mov
icebp
pop
mov
test
repnz
dec
ret
rcl
xor
outsl
sub
das
test
stos
outsb
hlt
and
xchg
imul
jo
xor
in
jne
lea
iret
push
cmp
scas
pop
scas
stos
adc
std
aam
scas
mov
dec
cmc
imul
push
xor
dec
insl
mov
sub
push
test
cmp
xchg
orb
divb
xchg
mov
in
fistps
sub
adc
jmp
ja
add
mov
in
rorb
repnz
inc
adc
icebp
das
cmpsb
insl
mov
xchg
sbb
mov
and
and
movsb
testb
jns
or
lret
roll
dec
ljmp
mov
es
pop
sbb
cltd
es
xlat
pop
icebp
insb
xchg
jb
sub
push
mov
push
mov
ljmp
push
faddl
pop
mov
repz
dec
inc
repz
mov
xchg
add
pop
rcrb
pop
xor
dec
popf
mov
jbe
loop
je
iret
jmp
sahf
andps
mov
in
lods
xchg
push
dec
mov
call
sub
dec
lds
aaa
je
add
inc
and
mov
push
sub
int
iret
jo
dec
sub
add
out
and
sbbl
fs
sub
xchg
bound
jmp
pop
push
dec
push
and
addb
in
mov
imul
and
add
subb
movsb
push
int3
dec
hlt
sbb
jl
pop
iret
and
shl
rcrl
adc
xchg
adc
out
clc
mov
insb
jbe
cld
movsb
or
dec
mov
cli
aas
call
dec
and
push
xor
mov
jg
imul
in
pop
rclb
dec
fistpl
nop
mov
out
add
xchg
cwtl
imul
xor
outsl
fs
push
jae
mov
mov
ja
aad
xchg
push
ljmp
push
add
push
push
hlt
sahf
stc
push
scas
out
xchg
cmp
hlt
push
sub
inc
adc
hlt
cmp
xor
mov
jp
fwait
wbinvd
and
mov
aas
xor
mov
xchg
shl
xor
dec
pop
or
pop
data16
push
imul
sbb
roll
mov
sbb
int3
imul
mov
dec
pop
xchg
mov
pop
cmp
in
int
jg
popf
jae
aas
orl
ds
imul
jnp
push
cmp
dec
inc
das
enter
push
sbb
ja
xor
cli
aam
pop
cmpsb
push
sub
push
jg
sti
adc
sbb
pause
leave
mov
out
sub
sub
aad
mov
push
ljmp
inc
pop
ss
jo
adc
adc
vpshufd
movsl
fstps
dec
fistps
cmp
or
ss
fucomi
aad
dec
jb
cmp
pop
mov
xchg
mov
data16
fs
cld
cmp
scas
xchg
test
repnz
hlt
and
dec
mov
add
xorl
adc
movd
dec
pop
add
loopne
cmc
imul
push
outsb
cmp
pop
and
jnp
sub
push
jbe
dec
jp
add
and
cwtl
movsl
jnp
mov
subl
shll
and
fstpt
and
push
add
pop
sub
int
sub
stos
xor
fstl
popf
mov
movsl
or
insb
iret
push
pop
inc
jg
cmp
jae
pusha
aaa
outsb
in
sarb
sahf
outsb
mov
xchg
loop
mov
mov
and
pop
cmp
dec
push
push
sahf
fwait
out
inc
or
insl
sub
xor
jbe
sub
jp
mov
ret
or
clc
adc
insb
into
cmp
mov
jnp
scas
movq
add
jb
add
pop
int3
mov
loope
jnp
push
ds
cwtl
fwait
mov
rcl
push
bound
pop
mov
je
das
pop
pop
mov
push
mov
and
je
jno
sub
fisttps
sbb
lahf
pop
jg
add
scas
lcall
fldenv
std
and
xchg
push
inc
into
test
and
mov
pop
jb
stos
repz
push
divb
pop
cld
lods
jl
stos
mov
or
and
idivl
fisttpll
icebp
nop
ret
popf
jbe
jbe
shlb
pop
lds
lds
sub
adc
stos
leave
fdivs
sbb
in
inc
xor
push
sub
movl
lea
stos
insb
fsubr
andb
xchg
or
or
sahf
xchg
adc
xchg
cmp
mov
push
sub
jg
push
mov
push
cmp
lahf
jb
xor
leave
fisubrs
adc
cwtl
pop
pop
lret
subl
insl
jns
cltd
xor
cltd
mov
movsb
lea
call
fs
pop
insl
sbb
sub
jge
aad
loope
out
sahf
inc
inc
les
das
enter
mov
or
mov
mov
add
xchg
xor
cmp
lret
jg
xchg
icebp
jp
mov
adc
push
into
inc
xor
mov
sub
or
rorl
mov
scas
jmp
pop
inc
push
bound
imul
lret
stos
out
and
and
cmp
xchg
adc
sbbl
bound
pop
int3
add
or
or
in
adc
popa
das
hlt
ja
xchg
sbb
ljmp
jb
imul
nop
pop
and
push
pop
mov
in
adc
fsubs
in
lret
les
adc
mov
jge
mov
mov
jle
and
test
roll
loop
mov
inc
push
lods
jecxz
es
jle
push
push
lret
fs
mov
repz
lret
sbb
jbe
xor
xchg
pop
stos
cmp
mov
lret
xchg
lea
push
push
aas
push
xor
push
or
out
flds
sti
mov
ss
lret
pop
cmpsb
inc
out
mov
push
movsb
push
jmp
mov
shr
xchg
xor
test
pop
xor
gs
xchg
addb
hlt
xchg
push
pop
jle
dec
dec
mov
mov
sbbl
loopne
add
sub
push
and
push
inc
mov
movsb
shll
push
jb
inc
sbb
pcmpeqw
lret
adc
pop
inc
loopne
pop
xor
icebp
push
sbb
jne
out
mov
jne
add
sub
push
fisttpl
scas
ret
mov
add
xchg
dec
push
nop
inc
dec
mov
mov
xchg
pop
or
sbb
mov
xchg
cmp
adcl
or
lock
adcb
out
cmp
cwtl
cmp
lock
adc
mov
push
jecxz
xchg
addr16
push
mov
arpl
frstor
adc
bound
mov
clc
sub
sbb
das
cwtl
loop
ljmp
decl
mov
test
insb
adc
xchg
filds
popl
push
inc
sti
add
mov
add
mov
add
xor
and
insb
adc
push
add
cmp
cs
inc
push
cli
mov
push
aas
sarl
pusha
pop
sub
push
pop
test
in
loopne
hlt
or
loope
jne
mov
leave
psadbw
lcall
jbe
jle
xchg
adc
xchg
mov
sbb
call
in
aas
inc
inc
lds
xor
pop
cmp
rorl
pop
mov
mov
jns
popa
sub
dec
jg
add
cld
jb
pop
outsl
jecxz
clc
mov
imulb
jecxz
inc
xor
push
dec
sub
pop
sub
cmpsl
cltd
xor
sbb
jmp
adc
out
arpl
jl
test
dec
jmp
xlat
xchg
mov
je
lock
jge
xchg
mov
scas
call
push
lcall
and
daa
movsb
jo
or
push
mov
mov
add
xchg
pop
xor
daa
jecxz
scas
imul
push
mov
imul
bound
test
mov
fs
cwtl
stos
out
pushl
or
data16
out
aas
xchg
insb
mov
imul
jmp
push
imul
nop
call
lods
pop
stc
mov
movl
dec
mov
movsb
aaa
lret
daa
cmp
test
dec
lret
das
outsb
pusha
lcall
out
pop
push
hlt
lea
aad
scas
sahf
push
in
add
imul
xorb
pop
adc
loop
xchg
adcb
jne
mov
ljmp
sbb
pusha
or
xor
and
lock
adc
mov
fcompl
sub
nop
aaa
sub
xor
pop
rcrl
sbb
mov
mov
cmpsb
dec
movsb
out
out
mov
mov
cltd
sbb
ret
pushf
rolb
add
adc
jno
pusha
clc
push
loope
cmp
add
sbb
cmp
pop
dec
fisubs
pushf
mov
sti
mov
cmpsb
push
mov
inc
fldl2e
push
adc
leave
pop
push
mov
pop
cli
arpl
mov
xchg
and
ja
cs
aad
dec
sub
or
stos
cmpsl
mov
mov
cmp
pop
stos
stos
mov
cmp
sub
add
and
cmp
imul
xchg
fldl
sbb
loope
jp
addr16
mov
idivl
and
jno
cmp
in
sub
mov
mov
lret
push
mov
lahf
addr16
add
icebp
pushf
mov
cmpsb
test
mov
shll
pushf
jg
cmp
stc
cmp
aad
lahf
mov
lock
sbb
bswap
add
adc
repz
sarl
dec
add
mov
lahf
mov
jno
aad
xor
pop
xor
xor
sub
sbb
ficomps
js
mov
push
jecxz
and
sub
xor
push
icebp
mov
iret
sbb
insb
push
cmp
or
xor
shlb
inc
out
mov
shll
ss
jle
pop
shl
mov
lods
sbbl
mov
ljmp
call
pop
leave
cs
inc
mov
mov
fsubrs
mov
xchg
cmpsb
xor
and
sahf
mov
testb
roll
cld
in
popf
cs
inc
dec
push
aam
pusha
inc
addl
shl
ljmp
xor
dec
mov
xor
insl
push
jmp
push
ss
mov
aam
and
icebp
mov
push
pop
iret
dec
mov
int3
xchg
xchg
cwtl
xchg
int3
jno
or
cli
and
test
and
lea
jbe
lods
ret
and
pop
dec
jmp
and
fbld
insl
cli
stc
xor
mov
jnp
cmp
dec
ret
call
inc
movsb
shrb
inc
jbe
and
inc
enter
sub
ret
jb
mov
xchg
xchg
xor
mov
dec
mov
and
shlb
fbld
jmp
mov
ret
cmc
push
mov
lret
push
imul
sub
lods
out
xchg
push
mov
push
pop
xchg
sub
in
mov
inc
dec
mov
repnz
in
and
outsb
inc
scas
int3
push
stos
add
and
addr16
out
popf
adc
sarb
outsb
add
pop
shlb
add
sbb
jle
stos
add
cmpsl
movsb
addr16
cli
cmpsl
out
fadds
jge
pop
sahf
push
repz
ja
lods
cmc
ljmp
jge
add
iret
or
cli
mov
ljmp
add
dec
jl
add
adc
dec
hlt
insb
mov
or
cld
int
mov
mov
jl
sarl
sahf
sbb
pop
push
out
xchg
in
xor
jns
sub
and
push
rcll
sbb
pushf
in
movsb
mov
push
push
int3
jae
jg
test
mov
loop
fstpl
xor
aaa
push
inc
dec
xor
jns
iret
lods
or
pop
daa
into
cld
pusha
sbb
sti
pop
jmp
test
in
repz
cltd
fdivrp
jecxz
jnp
cmpsl
mov
pop
push
sbb
sbb
pop
pop
jno
int
out
outsb
mov
rcrl
sub
push
mov
outsl
clc
in
cld
sub
lret
add
and
in
xchg
or
outsb
push
enter
jge
pop
and
outsl
into
push
jecxz
pop
inc
leave
sub
push
xor
xchg
leave
jae
and
cmp
daa
fdivrl
inc
inc
and
cmp
jo
loop
fwait
imul
mov
lds
push
rcrb
out
pop
nop
or
les
push
add
mov
mov
movsb
dec
mov
cmpsb
push
xor
mov
sub
fstp
or
sub
bnd
outsl
shlb
cmpb
mov
sub
pop
add
add
aaa
in
and
dec
out
call
xchg
dec
je
push
sbb
mov
sahf
sbb
fdivr
sbb
pusha
push
jle
add
test
dec
std
inc
adc
add
jmp
orl
push
jae
ds
jmp
icebp
mov
push
ja
push
ret
imul
mov
mov
jle
lds
in
push
mov
sub
jl
movsb
mov
js
jl
inc
in
imul
hlt
cltd
dec
lea
pop
inc
pop
or
fwait
cmp
ret
xor
out
add
ret
mov
mov
fs
dec
popf
push
pop
inc
loopne
out
es
mov
pop
xlat
xor
adc
inc
mov
lret
imul
call
loopne
adc
sub
jp
sub
pop
decb
sub
cmp
inc
sarb
mov
imul
push
aad
or
stos
inc
inc
repz
cmp
cmp
and
inc
inc
cmp
lcall
xor
or
jo
int
movsb
mov
pop
mov
xorb
cli
sbb
movsl
hlt
popa
lret
out
rcl
ret
popa
out
ss
mov
or
mov
pop
mov
sub
add
lock
add
ret
mov
imul
or
push
adc
inc
dec
out
clc
dec
mov
mov
push
test
stos
dec
sti
xchg
shrl
gs
mov
dec
push
cmc
mov
ror
cmpb
sbb
xchg
fstl
mov
das
cmpsl
pop
jle
rcrl
pop
add
hlt
rcll
mov
push
push
stc
jl
push
in
out
push
add
pop
jmp
mov
mov
punpcklwd
sbb
shll
lods
and
pop
in
sbb
push
mov
in
pop
jg
pop
mov
out
xor
je
sbbb
mov
cmpsl
mov
call
add
imul
mov
push
inc
pop
push
cmpb
xor
scas
cmp
sti
add
xchg
pop
divl
out
leave
iret
cld
jecxz
mov
test
sarb
lods
mov
fbstp
sub
push
jge
sub
add
mov
outsb
or
pop
test
adc
scas
lods
stos
xchg
dec
jno
or
jnp
xor
jne
and
inc
movsl
push
lock
in
xlat
mov
arpl
fisubl
mov
lret
aam
dec
sarb
movsb
cmp
xchg
sbb
outsl
sbbl
int
xor
dec
nop
pmaxub
popa
or
cmp
xchg
and
cmp
lods
push
imull
popa
jno
bound
xchg
cmp
cmp
jbe
and
clc
leave
push
push
repnz
pop
into
das
in
cmc
fldcw
and
mov
xor
mov
shl
push
cwtl
sub
jno
aaa
jle
and
aam
mov
mov
in
pop
aaa
pop
mov
shlb
fs
int3
or
sub
out
or
mov
sarl
js
cmp
and
addl
jns
cmc
cmp
pop
mov
push
pop
xor
stos
fnstenv
call
in
addb
out
cs
jns
cld
int3
lods
push
int3
lods
dec
mov
jecxz
pop
add
or
push
jge
mov
push
lcall
jecxz
imul
sbb
jl
adc
adc
jbe
sti
push
in
mov
push
mov
sub
pop
lock
or
xor
call
sub
adc
xor
push
or
adc
scas
and
int3
sti
movsl
jecxz
sti
sub
addr16
sahf
mov
sub
outsb
cmp
stc
cmp
repnz
add
add
lcall
aas
mov
aam
and
mov
adc
insb
movsl
dec
mov
sarl
mov
out
push
lret
mov
aaa
mov
xchg
xchg
shl
mov
adc
lods
loope
popa
shlb
clc
xchg
and
add
outsb
lcall
cmp
and
movsb
call
dec
ret
shrl
push
adc
sbb
push
jg
dec
or
mov
cmp
pop
out
jbe
lock
leave
xchg
jg
sarl
sub
lods
jp
dec
ljmp
js
bound
mov
cmpsl
fsubs
mov
sahf
and
lods
lods
dec
fnstcw
jb
js
adc
cmp
test
and
dec
pop
sbb
and
push
popf
mov
stc
cmpsb
inc
push
fadd
xchg
and
inc
jno
sbb
iret
out
in
add
jge
sub
xor
fs
or
sub
cmp
int
dec
jne
push
cmpsl
adc
in
stos
and
push
popa
mov
lret
push
imul
push
mov
and
dec
cli
fadds
gs
and
mov
cmp
enter
in
mov
shlb
pop
pusha
pop
pop
mov
cmpsl
cli
jne
xchg
xor
stos
jmp
lahf
insb
mov
xchg
pushf
es
inc
sbb
sbb
jb
add
push
loope
cmp
dec
fwait
mov
or
push
aad
cmp
sbbb
hlt
pop
scas
pop
or
int3
fstpl
mov
repnz
and
or
cmp
pusha
rcl
iret
ret
arpl
sub
sub
xchg
out
hlt
xchg
pop
pop
test
add
mov
and
xchg
cmp
sub
std
sbb
jmp
and
fmuls
in
mov
jl
inc
test
xor
dec
xor
mov
jge
mov
adc
add
jb
pop
fcoml
dec
in
xchg
dec
fadds
xor
mov
push
jmp
and
adc
stos
popf
and
pop
sub
jp
sbb
lds
adc
pusha
fldcw
imul
dec
xor
pop
sbb
nop
xchg
push
mov
fnstsw
sti
mov
scas
in
lods
pop
in
clc
imul
out
dec
cli
inc
jge
sarl
push
push
xor
test
jno
pusha
or
icebp
imulb
sbb
jmp
lds
cli
xor
cmp
popf
fcmove
lods
pop
ret
jle
lock
mov
insb
lods
xor
jae
fwait
imul
lcall
sbb
popa
xchg
sahf
inc
inc
insl
add
push
push
testl
into
sbb
mov
jno
mov
call
pusha
or
xchg
fdivl
xchg
cmp
loopne
or
jo
mov
jbe
cmc
adc
add
fcom
mov
pop
pop
out
cmp
repz
insl
xchg
xchg
pop
adc
aam
shrb
fwait
sub
sbbl
in
clc
aas
in
xor
rcll
cmp
mov
inc
sbb
push
xchg
iret
mov
lods
test
inc
jge
jmp
push
cltd
movsl
fnstsw
push
jbe
std
push
sahf
cli
xlat
ret
cmpsl
in
xor
data16
cld
insl
xor
jl
lods
faddp
pop
insl
dec
aaa
sub
pop
sbb
pop
mov
mov
shlb
arpl
jae
mov
or
stos
es
lret
je
dec
leave
pop
mov
mov
cs
cmp
xor
sub
fmul
mov
jo
scas
sub
in
iret
sbb
daa
push
fistl
movsb
cmpsb
pop
add
bound
jmp
jb
addr16
inc
mov
dec
jns
and
fnstsw
outsb
lods
ret
js
adcb
dec
dec
pop
enter
sub
mov
insb
testb
xor
mov
fdiv
loopne
movsb
scas
loopne
pop
or
add
cmp
pop
mov
addr16
rcll
lret
push
and
scas
sbb
cltd
mov
and
in
and
push
push
out
mov
ja
push
leave
xchg
sarl
frstor
push
lret
pop
pop
ja
jne
lahf
sub
mov
push
push
inc
pop
and
imul
imul
into
push
fnsave
xor
pop
xchg
add
in
push
and
mov
xor
sub
xchg
insl
das
adc
mov
fidivl
pop
xor
push
insb
test
xor
mov
mov
dec
jbe
pusha
stc
leave
sub
xorb
sbb
push
cmp
sub
adc
movsb
or
push
pop
push
shll
lea
bound
pop
roll
ret
jnp
rcr
pop
dec
cmp
clc
jb
mov
data16
xchg
adc
push
xor
lods
fwait
or
sbb
icebp
arpl
scas
inc
and
fiaddl
into
push
add
scas
xchg
or
jnp
jmp
addb
out
das
adc
add
mov
int3
jne
mov
jecxz
repz
out
xchg
jmp
icebp
stos
ja
adc
adc
pop
jmp
lea
jp
cmpsb
fcmovb
pop
test
jecxz
je
pop
repz
adc
rcrb
cmp
ror
push
push
jge
mov
add
pop
dec
sbb
adc
cwtl
cld
loop
inc
mov
fisubs
aad
push
icebp
push
ljmp
lods
fiadds
jg
jno
add
scas
push
stc
add
add
sti
push
sti
out
or
ret
lcall
xchg
jg
dec
cmp
add
iret
out
mov
pop
pop
arpl
push
cmpsl
popa
or
mov
adc
add
aaa
outsb
lds
cmp
outsb
jge
push
sbb
cmp
jecxz
or
add
std
add
mul
addr16
sbb
mov
xor
mov
aad
add
cli
xorl
dec
jbe
push
lahf
sub
pop
cs
mov
stc
add
dec
loop
sub
push
dec
cld
clc
mov
es
inc
dec
xor
movsl
pop
pop
leave
mov
mov
mov
stc
mov
pop
clc
dec
fs
xchg
hlt
xchg
mov
sti
and
and
lahf
stos
loope
adc
dec
mov
jne
out
xchg
pop
pop
out
shrl
repnz
dec
jae
mov
pop
jecxz
jns
jmp
xor
jmp
cltd
and
std
in
iret
dec
sub
gs
addr16
mov
stc
xchg
sbb
dec
and
lea
pop
push
jns
ret
sti
dec
fbstp
mov
lock
pop
popf
mov
icebp
mov
out
fistps
mov
push
out
mov
mov
lock
adc
xchg
popa
sbb
pop
sub
mov
leave
mov
daa
rorb
sbb
jae
and
fwait
mul
sbb
mov
sub
fsubrl
je
mov
leave
ss
dec
cmp
outsl
push
sbb
sti
adc
mov
test
dec
lahf
and
sarb
xlat
xchg
jns
int
xor
adc
stos
push
mov
hlt
movsb
daa
js
push
xor
in
mov
inc
mov
bound
or
push
cli
mov
lcall
enter
push
outsb
je
inc
aam
repnz
out
fcoml
nop
syscall
out
pop
out
add
adc
addr16
xchg
sub
in
pushf
rclb
mov
nop
add
push
jo
mov
adc
arpl
pop
sbb
adc
mov
divl
ss
int3
and
add
imul
xchg
repnz
mov
ficomps
jecxz
inc
gs
lods
dec
mov
jb
jl
push
sbbb
mov
sub
stos
xor
popa
lret
push
ficoml
cmp
mov
std
adc
dec
mov
pop
stc
inc
movsl
nop
cltd
jb
imul
pop
pushf
push
pop
ljmp
or
mov
aad
and
or
mov
and
pop
and
or
test
xorl
lret
repnz
xchg
inc
cwtl
ss
mov
rclb
mov
push
pop
outsl
out
jl
daa
and
mov
mov
mov
xchg
mov
cmp
test
xchg
out
lret
adc
mov
sti
mov
inc
jecxz
test
gs
jne
aam
loopne
in
sbb
sti
das
push
insl
push
mov
pop
sub
mov
fiaddl
xchg
mov
cwtl
inc
xchg
jg
mov
mov
xchg
add
sub
inc
cmp
mov
daa
mov
or
mov
xchg
out
push
jge
adc
xchg
jg
fimuls
mov
or
pop
out
pop
pop
pop
adc
sub
pop
call
lcall
push
mov
jmp
ljmp
xchg
inc
hlt
inc
mov
adc
adc
idivb
push
fiadds
add
inc
popa
jle
or
repz
ret
push
jbe
mov
das
mov
fbstp
xor
test
mov
push
mov
cmpsl
icebp
je
mov
sub
pop
xchg
lods
ficoms
shlb
sub
sbb
mov
outsl
dec
sub
iret
dec
sub
inc
jmp
cli
xchg
leave
adc
push
outsl
mov
mov
xor
scas
int
jno
dec
bound
pop
lods
cmp
mov
add
insb
jo
inc
int
inc
mov
sub
adc
cld
clc
mov
cli
negl
sbb
test
fldl
push
add
jmp
outsb
gs
subb
xchg
dec
std
pop
or
in
add
mov
pop
cltd
roll
mov
cltd
xchg
mov
test
fnstsw
shrb
lds
xor
adc
sbb
sbb
mov
nop
nop
leave
test
add
fdivr
adc
hlt
mov
addb
lahf
adc
mov
push
hlt
stos
incl
std
push
in
shlb
idivl
push
loope
sbb
push
imul
fiadds
insl
rorl
and
jo
pop
pusha
popa
sarl
sub
stos
xor
hlt
fs
sbb
lds
mov
pop
jae
mov
aad
repnz
pop
jae
push
arpl
push
in
xorb
inc
in
daa
aaa
cli
jg
xchg
pusha
pop
loopne
insb
or
dec
movsl
and
int
push
pop
stc
iret
sub
and
rorl
ret
stos
xor
sbb
sbb
adc
xchg
out
out
mov
mov
cltd
dec
test
sahf
popa
insb
movsb
out
or
xor
fstpl
shrl
hlt
divb
fiaddl
pop
fcompl
jno
fyl2xp1
mov
aad
cs
lods
je
in
mov
gs
xorb
divb
aas
dec
push
adc
adc
or
daa
cmp
fsubrs
xor
in
adc
sub
ja
into
leave
test
aaa
xchg
jmp
inc
and
in
lds
add
out
lods
sbb
sbb
push
adc
inc
and
mov
icebp
push
ja
aam
test
test
ljmp
stos
dec
lea
dec
arpl
or
mov
adc
fbstp
push
sbb
xor
xchg
jge
aad
jge
cmp
repnz
sbb
and
in
push
jmp
mov
cli
or
sbb
push
cmp
cmp
sub
pop
xchg
inc
shr
sbb
jmp
imul
inc
lock
idivb
xor
jg
mov
aaa
adc
mov
or
pop
sti
mov
adc
or
pop
sti
xchg
gs
and
aad
mov
fwait
mov
fdivl
add
or
or
mov
data16
mov
mov
cmp
jg
fidivs
shrb
jge
inc
push
fwait
lds
mov
adc
or
jg
jno
int
out
jge
push
push
out
data16
mov
mov
mov
mov
gs
jp
in
dec
mov
xchg
iret
mov
test
dec
ds
pop
sti
mov
das
inc
addr16
xchg
cmp
out
pop
cmp
xor
push
add
call
lock
push
ret
adc
subl
add
adc
fcoml
jnp
adc
lods
lods
cmp
mov
sti
push
ljmp
test
ljmp
sbb
insb
or
adc
test
xchg
mov
or
mov
push
das
in
cmc
jp
mov
mov
xchg
popl
ss
inc
das
pop
pushf
fdivs
fldenv
adc
add
jmp
cmp
clc
add
cmp
out
push
insb
sarl
push
jp
pop
call
push
adc
jo
adcb
sahf
or
lcall
cli
xchg
mov
xor
stc
xchg
popa
les
js
xchg
setg
xor
ffreep
xor
sti
adc
or
scas
jne
pop
in
jnp
push
push
push
mov
xor
add
lret
in
mov
xchg
movsb
adc
cmp
add
loope
es
mov
mov
sbbb
mov
xchg
lea
dec
jns
mov
int
cmpsl
mov
ss
cmp
sahf
mov
sahf
ffreep
adc
pop
mov
pop
std
and
clc
aad
dec
adc
out
xchg
add
arpl
aam
clc
push
je
inc
out
mov
push
lahf
adc
push
je
push
test
test
push
mov
jns
loope
jae
pop
insb
or
lcall
pop
loopne
or
jb
inc
fwait
incl
xor
idiv
les
aam
nop
stos
add
out
xor
mov
mov
xchg
jb
imul
lods
add
sub
pop
inc
and
daa
pop
xchg
lock
jns
inc
lcall
pop
lret
lret
jp
add
pop
adc
sub
xor
mov
js
outsl
mov
lret
push
push
mov
jecxz
notl
mov
adc
idiv
mov
inc
sbb
dec
jle
push
xor
push
adc
lods
jg
and
mov
mov
cmp
jbe
cmp
inc
sbb
aas
fcomps
cmpb
dec
mov
jno
adc
out
lds
sbb
dec
sub
adc
test
out
pop
idivb
add
jl
and
repnz
cmp
repz
sbb
sub
ret
xor
xchg
jb
aas
push
inc
cmp
mov
test
pop
sarl
stos
cli
fisttps
hlt
in
call
xchg
ds
and
pop
cwtl
pop
popa
adc
ja
in
add
adcb
cmp
fs
inc
xor
jmp
jno
mov
add
push
daa
pop
sbb
mov
xor
jecxz
push
sbb
pop
and
sbb
int3
cltd
or
pop
daa
mov
mov
iret
bound
jb
jb
data16
scas
outsb
int
or
ret
push
sub
in
lret
pop
test
in
sti
xor
jns
push
in
addr16
adc
cltd
shll
jno
xchg
jl
adc
lahf
add
out
jp
cs
cltd
mov
dec
jne
sub
xor
xchg
pop
xor
cmp
pop
arpl
lahf
mov
push
test
add
sub
add
mov
sub
mov
adc
test
rol
jnp,pn
sbb
xchg
adc
add
mov
aam
out
dec
shl
jb
or
cmp
mov
inc
rol
add
add
push
in
inc
mov
cmp
pop
xlat
les
std
out
inc
cmp
repnz
jmp
fistl
lock
mov
int
arpl
mov
test
add
jno
scas
adcl
rolb
jne
scas
sub
clc
mov
aas
movsl
xor
sbb
scas
mov
sahf
ret
mov
jne
adc
dec
repz
rol
add
cld
mov
mov
jmp
cmpsb
mov
or
inc
mov
arpl
or
cltd
mov
pop
xchg
ja
jns
test
movsl
xchg
or
out
jae
popf
lret
pop
xor
cmp
jb
ja
sbb
xorl
sub
inc
ljmp
xlat
test
cmc
and
fldenv
jae
arpl
sahf
xor
leave
je
jl
jecxz
mov
jae
jmp
mov
cli
inc
jg
cmp
lods
lods
pop
data16
and
int3
xlat
push
fucomi
mov
inc
movsl
stos
mov
adc
dec
add
stos
test
push
arpl
pushl
cli
shrb
push
ret
sbb
out
mov
xchg
aam
push
and
xor
jg
fst
roll
push
jp
ror
std
int3
dec
rolb
loope
jg
add
scas
stos
mov
add
and
sbb
fists
xchg
popa
lahf
xchg
js
test
dec
nop
ret
int
jne
jae
test
fldl
jmp
jg
fcoml
dec
or
lock
rolb
mov
add
movsl
or
fdivrs
dec
push
outsl
cwtl
mov
fucomi
ret
adc
or
ret
in
sbb
popf
out
pop
and
sbb
data16
leave
std
shll
pushf
add
xchg
add
data16
jb
push
push
cmpsb
je
sub
loope
movsb
aas
out
add
repz
jecxz
mov
and
jmp
jp
fsubrl
aas
add
sbb
pop
push
repz
push
sub
push
push
flds
ret
cmp
add
jo
pop
add
dec
test
stc
dec
jmp
stos
xchg
loopne
cli
cmp
sahf
push
mov
sbb
fsts
imul
lock
xor
push
mov
out
add
outsb
loopne
inc
jmp
es
icebp
sbbl
int
or
mov
mov
cmc
push
xchg
mov
fsubrs
push
pop
pushf
ljmp
pop
fbstp
adc
dec
cmp
xor
push
and
negl
repnz
loopne
xchg
add
jno
xor
cmp
shl
aam
imul
enter
sahf
adc
sbb
fs
test
ror
push
aad
mov
dec
sub
lcall
mov
in
xor
adc
lods
push
mov
xchg
and
test
and
rclb
or
mov
or
test
jb
jmp
xchg
aad
sub
scas
int3
scas
mov
mov
adc
xchg
mov
insb
hlt
das
and
icebp
adc
mov
call
mov
inc
idivb
js
insl
cltd
sbb
enter
cmp
lahf
cmp
movsb
cwtl
fs
jb
dec
fisttpl
push
sub
sbb
mov
movsb
popf
dec
lods
mov
popf
fcompl
idivb
dec
sbb
and
push
iret
out
add
aad
js
shlb
lahf
and
roll
sahf
sahf
ljmp
cmp
jle,pn
jecxz
sbb
mov
cmp
outsb
sbb
cmp
add
sbb
and
scas
fldcw
insl
mov
ss
cmpsb
je
or
in
add
xchg
into
cmp
arpl
add
in
lcall
pop
or
ja
jne
mov
xor
in
mov
jp
jnp
and
cwtl
movsb
ja
je
aaa
jbe
inc
fs
mov
pop
movsl
loope
loopne
sub
insl
add
push
dec
lcall
fdiv
cwtl
imul
pop
pop
fwait
adc
ret
push
jp
xchg
mov
inc
int
adc
xor
pop
lret
add
cmp
push
dec
in
add
push
push
fdivrs
dec
insb
imul
test
xor
pop
fcmovb
daa
jmp
jne
lcall
fimull
or
xchg
data16
repz
stc
outsl
pop
cwtl
xor
fdivl
ja
or
sarb
jnp
in
mov
das
je,pn
adc
dec
cltd
scas
jb
adc
push
jge
ljmp
xor
imulb
clc
sub
arpl
fidivrl
icebp
push
push
push
rdmsr
mov
fdivs
mov
sahf
mov
push
data16
dec
xchg
sub
fsubr
mov
out
mov
adc
inc
sbb
sarb
out
push
mov
and
and
out
bound
in
lds
out
push
test
sbb
and
mov
popa
and
jnp
push
int3
pushf
adc
mov
data16
mov
js
fiaddl
in
int3
dec
jmp
push
inc
push
ficoms
and
xchg
aas
inc
or
mov
imul
pop
xchg
jbe
sahf
cwtl
sbb
mov
sub
fstps
jl
lods
les
cmpsb
push
dec
xchg
repz
cmp
mov
cltd
push
jmp
stos
add
jp
dec
ret
fnstsw
push
cmp
sub
xchg
mov
jne
dec
sti
mov
xchg
movsb
enter
xor
xor
lret
sbb
in
popa
cmp
dec
leave
ror
push
mov
inc
roll
sub
add
dec
call
jle
jecxz
sbb
movsb
leave
lds
outsb
loope
jno
inc
or
sbb
shrl
fs
jo
mov
or
add
inc
adc
mov
pop
pusha
mov
mov
pop
cs
dec
arpl
mov
inc
jns
cli
jbe
ds
jecxz
test
pop
in
pop
push
int
dec
outsb
ss
repnz
push
lahf
rorb
ja
outsl
add
out
jno
adc
pop
mov
dec
ljmp
out
call
movsl
pop
pop
jnp
cmp
sub
stc
lods
xchg
cmp
and
sbb
out
pop
shlb
pop
addr16
movsb
jl
flds
jecxz
mov
push
xor
movsb
stos
push
xchg
add
push
popa
dec
cli
xor
sbb
mov
test
xchg
xchg
sbb
mov
xor
dec
sarl
shlb
cmp
enter
push
repz
in
shlb
rorb
xchg
push
xlat
jbe
cmc
fdivs
xchg
jo
nop
leave
add
inc
iret
inc
and
sahf
xor
loopne
pop
and
jbe
adc
je,pt
sub
sub
dec
in
or
jns
dec
mov
aad
cmp
jns
xchg
inc
cmp
loop
fnstcw
mov
sbb
mov
scas
cmp
les
leave
test
je
pop
dec
cltd
pop
lds
data16
mov
mov
push
xchg
xchg
xor
lahf
mov
pop
mov
inc
leave
sub
fdivl
shlb
push
pushf
inc
inc
addr16
lea
lds
xorb
ret
loopne
ja
xchg
leave
in
movb
mov
jmp
mov
outsb
inc
push
add
pusha
sbbb
and
adc
mov
lcall
sbbb
inc
add
cltd
in
popf
out
lret
push
jns
cmpsb
xchg
and
lds
mov
xor
fsubl
in
lahf
cmp
int
ljmp
fnstenv
cmp
cltd
xchg
sub
divb
leave
adc
repz
xlat
sub
pop
jp
inc
add
mov
jmp
ja
divl
adc
sbbl
out
add
pop
lahf
test
jo
in
cwtl
xor
jmp
lea
mov
hlt
lds
xor
outsb
mov
stos
sub
jns
mov
mov
ficoms
fisubs
test
js
pop
in
push
add
mov
mov
outsl
cmpsb
mov
adc
test
movsl
movsb
dec
movsb
lods
lahf
test
xchg
sub
xor
rolb
clc
fldcw
aas
movl
ljmp
pop
mov
lea
mov
shrl
cmp
fmuls
adcb
aam
fbld
xchg
lret
out
inc
subb
mov
mov
movb
pop
adcl
sbb
push
addb
sub
xor
into
cmp
and
cmp
ss
jge
js
jnp
rclb
js
data16
das
clc
shll
les
test
mov
or
cmp
jp
dec
scas
test
push
push
sub
rorb
dec
adc
scas
adcb
stc
add
data16
pop
jg
ds
loopne
xchg
ret
mov
inc
popa
sbb
arpl
enter
inc
jg
je
jl
and
not
dec
dec
add
leave
adc
mov
std
inc
jl
cmpsb
ss
in
ds
leave
cmp
cmpsl
mov
or
stos
iret
lahf
add
inc
pop
data16
add
jp
mov
test
sub
cmp
cmp
shlb
pop
idivb
inc
scas
cmp
inc
divl
mov
cmp
jns
out
cmp
sbb
scas
cld
outsb
cwtl
ffreep
divb
cltd
pop
add
shrb
loop
cli
outsl
cmp
dec
pop
mov
cltd
or
pop
mov
mov
xchg
xchg
add
outsb
inc
jns
mov
leave
add
addr16
sbb
mov
pop
jp
fucom
jmp
jo
inc
dec
scas
das
or
rcll
pop
pop
cltd
cwtl
cmp
inc
shrb
lahf
jmp
xchg
cmp
movsl
mov
arpl
mov
into
aad
pop
movsb
into
fs
out
iret
rcr
adc
popa
ret
pop
adc
movsb
mov
xor
mov
mov
imul
loopne
sub
enter
je
dec
and
call
and
mov
test
mov
imul
nop
orl
mov
pop
push
add
sti
sub
jo
setne
scas
pop
out
cmp
adc
pop
cmp
sbb
stos
or
xchg
clc
inc
dec
pop
or
dec
cmp
pop
push
iret
pop
imul
jp
pop
or
inc
dec
out
lods
shrl
mov
mulb
scas
push
adcl
or
xor
repnz
and
sub
testl
mov
call
dec
outsl
fimuls
mov
rcrb
adc
inc
rcl
push
mov
mov
push
lock
sbb
outsb
popf
or
xchg
lods
nop
push
or
add
gs
push
jge
insb
fidivrl
fisubs
shll
iret
or
add
rol
inc
xor
not
aaa
xchg
dec
rorl
mov
aam
inc
sbb
cmp
pop
loope
stos
hlt
pop
pop
dec
fistpll
jno
lahf
inc
add
and
das
push
cs
inc
repz
and
sahf
pop
loope
loope
sbb
push
loope
xor
sbb
sub
or
add
stos
stos
push
aaa
sbbl
test
dec
in
scas
std
fdivrl
mov
enter
sbb
cltd
popf
mov
xchg
hlt
pop
jecxz
in
enter
hlt
inc
test
jnp
sbb
into
xor
in
dec
push
cmc
mov
xchg
pop
sbb
jp
sti
push
int
xchg
adc
fwait
lds
outsl
pop
or
jae
cld
add
test
enter
shrl
hlt
cmp
sbb
outsl
mov
sbb
mov
aad
shll
add
sbb
bswap
sub
mov
dec
test
outsl
jmp
lret
jnp
xchg
jl
pop
cmp
inc
imul
mov
shll
mov
mov
sbb
push
lret
mov
xchg
dec
sbb
aas
ret
sbb
pop
add
pushf
and
xlat
loope
push
inc
lahf
sahf
push
sbb
stos
or
mov
cmp
mov
jge
stos
call
mov
mov
lock
xchg
push
jno
adc
sbb
sub
push
imul
mov
sbbl
xor
xchg
jno
mov
mov
ret
xlat
jg
xchg
clc
cmp
xchg
fdivrl
xchg
vpmaddwd
sbb
and
test
sub
xchg
mov
out
xchg
mov
fstps
push
add
lahf
jb
out
xlat
cmc
mov
push
test
mov
or
adc
test
or
jne
mov
jb
xor
aad
fucom
or
xchg
cmpsb
roll
inc
add
pop
jle
jmp
orb
fisttps
fidivl
lea
lock
mov
lea
sbb
cmp
jno
dec
sub
cmp
in
aad
adc
out
dec
jns
js
in
ds
ret
cmpsb
push
xchg
cmpsb
loope
adc
mov
xor
insl
push
imul
inc
lods
cli
or
adcl
sub
mov
add
movsl
jmp
decl
xchg
daa
push
mov
sbb
lcall
add
push
decb
and
jmp
ljmp
imul
add
ret
cmp
mov
testl
cmp
negb
mov
cli
cmpsl
lcall
or
into
jl
inc
adc
movsb
or
jae
cmpsb
js
jbe
pushf
mov
mov
pop
dec
rcll
addr16
or
xor
les
xorl
push
jns
into
rolb
inc
or
sub
clc
xchg
bound
inc
orl
jno
shll
cmp
ss
add
subl
cmp
das
or
ss
mov
push
jnp
repz
loop
inc
xchg
inc
fs
inc
push
dec
xchg
cld
xchg
sbb
gs
cmpsb
je
jecxz
push
mov
xchg
mov
in
sbb
adc
sub
aaa
xor
cmc
cltd
setns
fcoms
adc
loope
subl
and
xchg
adc
adc
mov
shll
xor
pusha
xchg
push
dec
cmp
stos
cmp
pop
push
jbe
or
pop
or
xlat
jo
jnp
ret
imul
vmovsd
movb
xlat
jb
pop
lds
mov
rorl
lods
xlat
inc
cli
icebp
scas
inc
sub
push
xor
adc
mov
mov
adc
enter
sahf
mov
jae
inc
fistpll
cli
mov
les
mov
push
mov
mov
scas
push
mov
jmp
mov
jbe
add
adcb
rol
inc
sbb
dec
xor
cmp
cmpsl
fbstp
add
out
mov
or
lret
jae
jae
xchg
push
fisubrl
xchg
mov
notb
cwtl
cmpsl
shll
push
and
and
cmpsb
mov
imul
mov
insb
xor
xchg
aaa
out
test
and
shl
mov
inc
adc
lcall
add
mov
push
add
sbb
xchg
iret
lods
orl
mov
ss
xor
jns
in
push
inc
rorl
test
pop
ljmp
rorb
pop
popa
jns
mov
repnz
fs
cli
pop
popa
inc
mov
fwait
dec
push
aaa
insl
cwtl
jecxz
adcb
mov
in
fiadds
shl
outsl
pop
ds
daa
rep
and
and
jle
stos
xchg
test
sbbb
xchg
loopne
pop
cmp
ret
adc
les
ljmp
xchg
jnp
std
arpl
dec
cli
popf
sbb
pop
mov
in
movsb
mov
xchg
xor
and
insl
jg
jmp
mov
in
xchg
loop
neg
gs
aas
loope
pop
fsub
or
das
lods
push
mov
xor
sub
pop
xchg
inc
lods
aam
mov
mov
std
adc
push
sbb
mov
js
sbb
jge
mov
lret
dec
std
mov
outsl
cmpsl
lahf
push
pop
jecxz
jne
mov
test
mov
inc
add
jmp
mov
and
fwait
outsb
push
lea
adc
push
mov
popf
lret
les
test
sbb
jno
ret
lods
adc
movb
mov
sub
pop
push
nop
andb
scas
mov
psubusb
mov
sub
mov
mov
xor
mov
cmp
arpl
popa
les
fwait
pop
ja
jo
dec
pop
les
cmp
xor
imull
subb
push
shrl
sub
das
shrb
cmpsl
push
imul
xchg
nop
aam
dec
jg
popa
scas
pop
mov
decl
mov
daa
ret
rclb
mov
cwtl
pop
shrb
sbb
inc
sarl
imul
mov
fbld
mov
or
jp
sbb
cwtl
pushf
iret
and
fnsave
mov
loopne
or
cmp
aas
orl
jmp
test
repz
ret
add
pop
imul
mov
fadd
icebp
lret
push
mov
movhlps
cwtl
jbe
push
pop
in
pop
shlb
out
stc
push
fistpl
lea
mov
cmp
xor
mov
nop
and
popf
or
sub
aam
push
mov
jae
cmp
mov
push
loopne
sbb
xchg
inc
repnz
xor
test
mov
mov
test
add
out
lea
ret
pop
cli
adc
iret
fbstp
in
fcos
popa
sahf
xor
and
sti
pop
cmp
rolb
iret
sub
xchg
leave
jne
sahf
rorl
dec
std
das
js
and
lcall
mov
sbb
jp
iret
enter
xchg
in
int
in
add
out
mov
popf
mov
stos
push
test
in
pusha
cmpl
or
pushf
sarb
test
jbe
in
xchg
inc
std
out
jns
pop
ljmp
lcall
pusha
jo
jb
mov
inc
cwtl
es
inc
insl
sub
ret
pop
sbb
js
xor
sbb
in
sti
outsb
jb
std
addr16
popf
or
cmc
and
sub
push
sbb
xor
xchg
or
push
pop
testb
movsb
jl
xor
fmull
sbb
iret
out
adc
push
sbb
shlb
int3
add
xchg
cwtl
xchg
aaa
mov
xchg
mov
and
sub
adc
dec
hlt
shlb
stos
fnstcw
outsl
das
mov
sahf
inc
cwtl
sub
mov
repnz
cmp
dec
mov
aas
pop
dec
fdivrs
cmpsb
fwait
jp
out
mov
pop
das
cmp
shll
stc
fldenv
mov
mov
pop
es
fdivs
fldl
mov
aaa
xor
jno
mov
jle
mov
nop
in
push
dec
pop
cmpl
jae
mov
mov
pop
sub
inc
mov
mov
fnstenv
jae
xchg
xor
inc
sbb
int
cmp
fisttpll
jo
adc
outsb
aaa
xor
pushf
fwait
out
into
add
and
inc
shr
jmp
or
loopne
and
mov
aaa
add
mov
into
sbb
lock
js
cmp
daa
mov
jnp
xchg
movsl
push
adc
and
fs
and
jge
dec
push
inc
int
lahf
mov
jge
dec
call
fdivrl
jnp
lock
shll
xor
or
mov
in
jl
jmp
insl
out
adc
out
stos
mov
movsl
xor
lock
mov
xchg
cmp
cmp
ret
mov
in
jle
push
push
sub
call
xor
aam
aaa
stos
sbb
adc
inc
ret
divl
inc
test
repz
jns
ljmp
push
adc
push
mov
fidivs
mov
popa
jmp
in
enter
subl
mov
shl
sub
jl
test
stos
sbb
push
ret
aaa
jne
push
insl
mov
insb
dec
shrl
jecxz
pop
or
mov
inc
push
shrb
ljmp
mov
xor
mov
push
repz
and
inc
lret
dec
add
jp
pop
jne
lcall
mov
or
push
mov
jbe
sarb
pop
or
or
stos
test
jmp
call
insb
call
outsb
push
ljmp
stos
lcall
mov
adc
pushw
adc
gs
in
dec
faddl
pop
push
insb
push
mov
mov
test
add
fsubrl
sub
cmp
adc
push
mov
out
push
mov
mov
sbb
daa
scas
cltd
mov
sbb
jne
jmp
push
xchg
adcl
jo
jmp
pop
dec
outsl
inc
or
add
fcmove
or
dec
js
data16
das
cmp
cmp
pushl
push
inc
sub
fsub
cmp
mov
mov
sub
add
jae
dec
jns
add
adc
cmp
cltd
movsb
and
and
mov
ret
sahf
sbb
in
outsl
add
sub
mov
mov
jns
pop
call
dec
lret
or
incb
jb
push
mov
mov
cmp
lahf
test
mov
inc
xchg
add
int
mov
inc
cs
jne
int
imul
into
sub
inc
nop
xor
pop
dec
xchg
inc
push
lds
cmp
mov
jno
jmp
or
or
xchg
call
out
fidivrl
and
pop
mov
push
inc
cld
ret
in
popa
adc
int3
sti
imul
and
mov
adc
ret
jae
out
in
and
jl
lock
push
mov
sbb
ljmp
inc
sub
mov
cmpsl
pop
sbb
inc
and
push
mov
dec
icebp
ja
push
test
add
aaa
lret
xchg
jbe
or
into
xchg
dec
push
lea
lahf
cmp
shlb
mov
int
cmp
jl
mov
cmc
movsb
cmp
pushf
sbb
sub
insb
lods
mov
std
dec
arpl
mov
push
adcb
dec
cwtl
sub
mov
pop
idivl
push
mov
push
jg
fidivrl
ret
ss
pushf
in
xor
jmp
hlt
in
insl
push
fldenv
or
sub
enter
sbb
fisubl
jmp
mov
notw
cmp
roll
cmpsb
cmp
ret
and
scas
push
je
sub
mov
mov
fucom
dec
aad
into
push
js
cmp
add
sbb
sbb
lds
adc
or
mov
dec
xchg
pop
adc
push
jns
add
lods
jo
into
adc
jmp
jmp
ds
or
clc
push
sbb
hlt
stos
inc
mov
rolb
stc
mov
add
imul
fwait
jmp
outsl
inc
dec
cli
jb,pt
pop
sub
inc
sub
cmp
call
push
enter
js
out
ja
push
jne
xlat
mov
mov
in
dec
cmp
arpl
in
lcall
xchg
lds
mov
pop
sbb
jne
xor
or
add
adc
jno
dec
inc
pop
mov
scas
mov
into
cld
xchg
cmc
pop
pop
xchg
std
int
sub
dec
xor
stc
mov
mov
pop
add
ja
in
jge
jae
push
or
mov
sbb
fwait
xchg
mov
jae
xchg
test
loopne
ds
and
stos
mov
sub
push
arpl
xchg
pusha
add
mov
fiadds
pop
loop
je
and
aad
movsl
xchg
gs
xchg
out
adc
dec
sbbb
inc
inc
mov
loop
nop
mov
scas
jne
aam
neg
sbb
scas
aam
dec
inc
je
pop
ret
mov
dec
sub
cwtl
rcll
jp
in
cmp
pop
jecxz
test
cmpsl
lods
mov
and
fcomi
add
movb
shrb
pop
mov
jne
and
hlt
dec
mov
cmp
sbb
adc
adc
mov
aaa
mov
dec
xor
lock
dec
insb
lret
lahf
push
dec
sbb
pop
sbb
repnz
xchg
rolb
sti
ret
outsl
sub
adc
das
and
shrl
in
mov
call
mov
icebp
mov
add
dec
lock
jae
fwait
test
cs
push
inc
test
repz
sub
scas
push
push
scas
lahf
mov
mov
pop
inc
ja
roll
cmpsl
aad
xchg
lahf
push
insl
push
in
les
loopne
push
incl
dec
mov
xor
mov
movsl
add
fwait
les
adc
xchg
adc
out
or
and
mov
mov
data16
ja
pop
cwtl
inc
jp
sub
shlb
sahf
adc
clc
push
cmp
jo
cmp
in
mov
xor
cmpsb
inc
jns
xchg
jle
cmp
out
leave
lods
dec
pop
gs
bound
push
jae
iret
add
cmp
mov
shll
xchg
push
sbb
pop
cmp
push
clc
xchg
mov
out
in
cs
lea
outsb
clc
inc
jg
push
xor
inc
add
xor
add
xor
ds
push
cmpsl
jb
push
cld
test
inc
ljmp
sbb
jecxz
cmpl
inc
mov
sub
insb
push
loope
push
push
dec
insl
js
jle
xchg
clc
xchg
dec
loope
or
mov
jns
pop
lret
mov
add
dec
insb
inc
xchg
lods
and
lea
imul
dec
add
xor
in
scas
inc
pop
in
cwtl
xchg
add
leave
jp
les
lahf
ja
push
mov
add
pop
jno
outsb
lret
push
mov
cmpsl
lret
stos
mov
jno
fwait
jl
jg
xchg
xorb
dec
cmp
aam
stos
push
mov
leave
xchg
xchg
ljmp
push
cmpsl
into
test
movsb
inc
mov
inc
fistl
xor
imul
lahf
mov
les
push
jl
sbb
pop
inc
add
movsb
sbb
sbb
sbb
shlb
pop
cmp
rcrl
cmpsl
sbb
loop
jecxz
inc
test
pushf
rorl
push
mov
xchg
dec
imul
shrl
out
xchg
pop
xchg
xchg
mov
jae
push
insb
mov
mov
fstpl
mov
and
sbb
movl
mov
in
pop
cmp
ret
or
repnz
rcrl
dec
xchg
or
push
pop
and
lock
sub
mov
cmp
cmpl
lods
fimull
mov
cwtl
xchg
push
xor
lock
xor
push
lret
fstpt
xor
xchg
in
pusha
fstpl
mov
pop
je
inc
negl
decb
xchg
andl
jae
and
sahf
jg
push
jns
mov
add
inc
cs
int
dec
stc
cwtl
loopne
fwait
jno
and
sbb
incl
js
xchg
lods
psrld
mov
sarb
repz
xchg
cmp
cmp
movsb
jle
lcall
sbb
js
or
test
sbb
insb
aas
adc
scas
add
mov
jmp
dec
mov
cwtl
push
lods
leave
lock
push
and
movsl
jnp
adc
jne
insb
add
stos
or
aaa
rcrb
inc
lcall
movsb
cmp
outsl
mov
das
mov
lahf
imul
cmpsb
mov
add
js
movsb
sub
pop
mov
in
rcrb
out
inc
jb
sahf
test
pop
jne
dec
adc
or
repnz
leave
ret
add
les
fstpt
test
add
andl
xchg
arpl
push
dec
fdivrs
add
leave
xchg
test
mov
das
jp
pop
loopne
test
inc
pop
and
nop
rcrl
or
popf
mov
in
mov
cld
jo
pop
inc
stos
sti
mov
cmpl
rorb
movsl
mov
test
inc
push
xchg
sub
dec
inc
pop
push
loopne
xor
pop
or
test
lea
call
filds
push
inc
jns
xchg
mov
stos
jl
in
aam
or
inc
push
inc
xchg
arpl
pop
jb
or
fiaddl
and
xchg
dec
or
pop
fcoml
and
inc
fiaddl
add
sub
in
cmp
jp
sbb
dec
lods
push
rcll
loopne
gs
mov
sub
int
xchg
clc
xchg
or
data16
lcall
and
and
cmp
xchg
lret
adc
adc
inc
in
aad
movsl
mov
ss
or
addr16
inc
dec
mov
jns
pop
addr16
pop
movsl
lock
aad
sbb
pop
icebp
jno
jns
cmp
dec
sti
test
js
in
jg
sbb
hlt
jecxz
cmpsl
test
sarb
and
out
pusha
cmc
xor
mov
adc
dec
orb
out
sub
pop
inc
and
stos
test
movb
mov
push
insl
gs
sub
lods
lahf
xchg
rorb
inc
push
subl
pusha
dec
push
frstor
lea
xor
outsl
sbb
sarb
dec
cmp
push
mov
xchg
xor
sbb
add
aam
pop
pusha
loopne
out
or
in
lret
arpl
or
scas
ja
push
popf
xchg
pop
mov
adc
or
adc
subb
sub
and
pop
fmuls
fs
leave
icebp
xchg
pop
scas
call
mov
inc
push
add
dec
xor
inc
mov
fsubs
xor
inc
push
outsb
arpl
call
into
mov
dec
lcall
mov
xchg
mov
cltd
xor
mov
mov
sbb
bound
test
js
repnz
movsl
mov
add
test
xlat
pop
mov
aam
andb
pop
in
rcr
jae
xchg
push
mov
sbb
icebp
sbb
dec
je
cmpsl
xor
jl
pushf
mov
cwtl
or
rcrb
mov
push
jno
sbb
and
aas
insl
push
test
add
push
sub
xchg
cmpsb
mov
dec
leave
lea
cs
xor
popa
gs
sub
and
jnp
add
pop
dec
sbb
fisttps
movsl
pusha
test
ljmp
mov
pop
xor
addl
push
fdiv
sbb
pop
cmp
pop
mov
or
fnstcw
inc
and
inc
cmp
pusha
push
bound
call
scas
jle
mov
mov
sub
mov
mov
jmp
lret
cmp
inc
iret
sub
in
cs
iret
mov
add
imul
sbb
rcrb
mov
xchg
push
cmp
sub
cmc
in
and
call
xor
loop
addr16
mov
mov
dec
cmp
testl
sub
adc
xchg
ret
mov
les
cmp
add
std
sbb
jmp
inc
pusha
sbb
or
les
mov
adc
test
aas
xchg
dec
mov
sahf
fldenv
jle
mov
fimuls
movsl
inc
jp
mov
lahf
jns
xor
outsb
xchg
imul
call
lock
imul
icebp
push
leave
loopne
mov
sub
in
nop
scas
mov
in
mov
test
aaa
js
cmpsl
stc
adc
sub
inc
and
scas
ss
sub
push
sub
jnp
mov
scas
aam
jg
js
xor
pop
mov
lock
mov
cmpsl
scas
stc
lcall
cwtl
cld
cwtl
cmp
imul
mov
les
loope
cmpsb
andb
xor
shl
jbe
mov
cmp
shlb
or
out
pop
xor
daa
pop
aas
stos
fidivrl
scas
aas
sub
and
call
shl
cmp
push
adc
jnp
xchg
or
repnz
js
cmpsb
push
fcmovu
fisubl
mov
xor
add
enter
pop
xor
ret
lahf
or
dec
movsb
jecxz
into
scas
fdivrs
push
enter
repz
or
jns
push
xchg
add
bound
cmpl
mov
jge
repnz
sub
or
mov
rcl
mov
dec
hlt
cmc
sbb
and
adc
dec
test
fimull
push
repz
push
iret
push
data16
mov
sub
or
orl
nop
jae
pop
dec
pop
imul
sbb
xchg
push
cmp
pop
imul
pop
std
or
shll
xor
push
pop
dec
and
pop
and
sbb
xchg
out
ds
leave
push
pop
push
dec
jmp
fstl
icebp
pop
hlt
rolb
ds
je
cwtl
mov
add
fs
mov
and
mov
int
andl
pop
xchg
mov
pop
repz
add
push
jnp
cmp
or
mov
out
fisttps
rcll
mov
int
and
int
sbb
pop
dec
cmp
repz
push
hlt
push
mov
outsb
jno
dec
mov
in
sbbl
cmpsl
out
dec
test
adc
mov
repz
stc
xor
push
loope
sbb
repz
std
adc
ss
inc
xor
or
jmp
js
ret
hlt
push
fstpl
cmp
in
mull
aam
fmuls
add
xchg
inc
fs
pop
dec
outsb
test
pushf
push
es
pop
in
lock
sbb
cmpsl
dec
lock
xor
pop
sbb
mov
or
inc
shl
fs
fcmovb
repnz
insb
setns
in
sub
ss
andb
mov
lcall
pusha
mov
push
cmc
shl
mov
jnp
cmp
mov
jle
mov
lret
sbb
mov
stc
sbb
or
mov
or
xor
adc
adc
in
add
fs
gs
mov
mov
clc
jge
ss
xchg
dec
mov
pop
or
pop
inc
adc
dec
inc
dec
push
test
dec
lahf
sub
cmp
test
shl
ss
enter
ucomiss
mov
iret
cmc
sahf
loopne
or
or
mov
out
daa
mov
cmpsl
add
push
lods
push
pop
out
add
pop
rcr
in
jg
add
call
jb
sbb
xlat
and
jmp
ds
cmp
inc
pop
cmp
pop
imul
in
shrb
out
and
test
negl
and
gs
cld
dec
mov
in
cld
cld
push
shll
into
orl
ljmp
mov
scas
mov
mov
incb
cmpsb
jl
stos
jnp
inc
out
mov
scas
pop
popa
mov
mov
dec
jno
jae
lods
adc
push
je
xor
jg
mov
adc
push
sub
mov
lods
hlt
pop
add
adc
mov
inc
push
adc
rorb
jl
dec
shll
repnz
jns
inc
mov
mov
adc
sbb
inc
xor
jne
sub
sbb
xchg
or
nop
inc
dec
inc
subl
mov
sub
inc
adc
xchg
pop
mov
xchg
in
xchg
pop
lret
inc
and
mov
outsb
pop
xchg
xchg
std
aaa
jle
andl
daa
xchg
pusha
mov
in
sub
cmovno
jmp
arpl
call
out
and
fs
in
and
xor
mov
fwait
xor
sti
imul
pusha
mov
out
test
mov
sub
adc
test
insl
pushf
pop
addr16
stos
out
setg
cmp
lds
fisubrl
mov
pop
stos
rorl
push
sbb
hlt
jnp,pt
jg
movsb
add
rcrl
add
push
mov
jnp
test
and
loope
test
xor
cmpsb
lods
pushf
or
adc
xor
icebp
mov
mov
cs
ljmp
mov
mov
add
leave
movsb
fsubs
mov
pop
inc
dec
and
jns
insl
minps
jl
cmp
jns
pop
pop
inc
fldl
jg
data16
mov
add
iret
and
negl
mov
lret
xlat
sarl
out
stos
jo
divl
loope,pt
popa
add
call
lahf
nop
ret
push
sbb
mov
xor
dec
or
bound
call
jg
jo
stos
push
pop
movsb
push
not
xlat
addr16
mov
push
cli
mov
mov
enter
add
add
shll
or
or
das
pushf
out
aam
lods
and
andl
adc
icebp
popf
push
add
add
sub
insl
xlat
inc
jae
psubq
xchg
or
xchg
fisubs
lock
popf
cmp
ds
cwtl
adc
mov
mov
jns
sbb
mov
cmp
sub
adc
cmpsl
testb
jne
imul
mov
les
addr16
pop
sbb
loope
xlat
push
rcrl
gs
push
dec
xchg
and
shlb
insl
scas
push
pop
pusha
mov
and
in
xchg
jae
mov
out
xchg
dec
inc
sbb
cmp
cmp
sarl
dec
push
jecxz
lock
and
lret
mov
sbb
push
dec
xor
push
das
das
jno
mov
les
mov
mov
mov
mov
sbb
repz
cwtl
push
xchg
dec
pop
add
movsb
fnstsw
jbe
pop
cltd
das
pop
jae
mov
xor
aam
test
dec
fs
cmp
mov
jl
sub
adc
xchg
sbb
jle
ljmp
dec
pop
inc
inc
les
decl
fcompl
jne
jnp
xor
roll
cltd
loope
addr16
jae
push
mov
xor
jmp
loopne
stc
fsubl
aam
push
sub
loopne
lea
leave
fcos
mov
or
adc
inc
les
es
jp
ljmp
mov
cmp
push
sbb
adc
mov
adc
pop
push
xchg
or
and
cmc
sub
mov
push
add
sbb
ret
cld
lods
js
lods
dec
arpl
push
cmp
pop
pop
push
pushf
jmp
cli
bound
cld
mov
jbe
cmp
fdivrs
or
push
test
inc
add
inc
lret
gs
shrl
pop
push
push
jno
jmp
cltd
xor
aas
movl
leave
sbb
mov
fsubl
xchg
idivb
inc
into
fs
xchg
sbb
mov
aam
mov
pop
cmpsb
xchg
test
js
dec
pusha
mov
addb
outsb
fdivl
lret
lods
bound
mov
aad
sahf
adc
popl
addr16
mov
fiaddl
out
jns
mov
pop
cmp
cmp
pop
out
xlat
and
and
xchg
fbld
push
xor
rcrl
out
cmc
xchg
push
leave
add
xor
pop
sub
ficoms
mov
packssdw
mov
lahf
xlat
test
aas
fdivs
cld
test
lret
and
pushf
stos
inc
ret
cltd
adc
daa
xchg
das
pop
pop
repz
outsb
repz
jo
sbb
add
cli
loop
adc
pusha
popf
sub
outsb
add
jle
inc
push
dec
xor
xor
jno
out
lock
bound
or
pusha
xchg
fs
pop
js
sbb
scas
lahf
insb
inc
fstl
or
pop
cmp
adc
call
pushl
lret
inc
adcb
cmc
dec
movsl
ljmp
jnp
leave
fsts
iret
pop
shlb
rclb
sub
pushf
sbb
jne
adc
adc
sub
cmp
pop
lea
mov
mov
mov
orl
sahf
js
jns
cltd
xchg
sub
xchg
mov
leave
gs
mov
imul
xchg
negl
jp
lret
sub
xor
call
adc
daa
scas
mov
repz
sahf
rclb
push
lret
inc
mov
sub
pop
pushf
movlps
int3
rorl
mov
inc
mov
jg
xchg
push
stc
sarb
fisubl
fwait
mov
les
jns
xlat
xor
xorl
sbb
jmp
push
inc
pop
outsl
lods
mov
iret
loop
mov
in
inc
adc
dec
xchg
jecxz
mov
mov
push
sub
pusha
scas
jecxz
push
test
cmp
sbb
sbb
insl
pop
xor
jg
fistpl
sbb
fwait
cs
cmc
les
cmp
dec
cmc
mov
adc
mov
pop
or
in
gs
push
lret
inc
xchg
inc
data16
cli
movsb
cmp
movsb
mov
add
xchg
and
xor
and
es
sub
add
imul
clc
jnp
cltd
sub
stc
cmp
xchg
pop
repnz
mov
sti
outsb
out
jbe
movsl
stos
push
jecxz
lock
cli
scas
outsl
or
call
sub
je
lcall
xchg
imul
cmpb
push
mov
mov
fmull
fmulp
loope
mov
ja
jns
aas
std
outsb
setae
sub
sbb
clc
stos
cld
mov
fcmovu
dec
mov
sub
mov
xlat
flds
lods
push
dec
rcl
jns
adc
clc
push
adc
add
xchg
dec
adc
pop
nop
mov
pop
bound
push
sub
shl
push
lret
mov
ret
je
gs
xor
mov
mov
add
aad
inc
shll
dec
orb
sub
out
add
scas
cmp
push
mov
mov
iret
inc
in
jnp
jae
jecxz
out
gs
push
jno
pop
mov
repz
fdivrl
pop
orb
sbb
and
pop
jecxz
xchg
inc
int
adc
loop
adc
mov
push
cmp
adc
loop
leave
and
xor
adc
sub
gs
or
je
outsl
inc
cmp
dec
icebp
cmp
xchg
cmp
inc
fstps
outsb
jae
ret
cmpsb
faddl
push
sarb
push
mov
mov
dec
inc
cwtl
clc
mov
sbb
in
pop
push
pop
pop
iret
mov
in
bound
inc
mov
xor
jg
cwtl
mov
add
and
test
leave
sbb
add
in
fs
jmp
insb
std
ficomps
ss
stc
ret
lahf
inc
mov
rcrl
xchg
lret
aad
xor
loop
hlt
cltd
xchg
jb
xor
out
shr
dec
and
shrb
pusha
shlb
jno
loop
dec
sbb
repnz
outsl
out
xchg
pop
inc
sbb
jl
mov
pop
and
mov
shlb
add
dec
jnp
rolb
jmp
dec
fiadds
push
shl
dec
insl
stos
mov
icebp
mov
cmp
or
pusha
add
jo
xor
cltd
mov
mov
scas
dec
roll
cmpb
out
mov
aas
jo
sti
lock
mov
and
xor
cs
jb
in
out
daa
scas
cmc
lahf
rorl
dec
sub
or
mov
arpl
mov
push
push
or
lds
setbe
push
adc
push
adc
sbb
les
bound
pop
push
pop
xor
ss
add
cmp
adc
sbb
or
cmp
mov
xor
dec
cmpsb
jno
call
mov
push
mov
iret
cmp
mov
or
push
loop
cmp
xchg
pop
xor
fsubrs
aaa
sbb
pop
xchg
adc
repz
lss
and
cwtl
ja
sub
lcall
sub
test
mov
shrb
dec
and
daa
jg
and
insl
out
es
scas
push
aas
push
out
jns
in
xor
decl
lea
jp
popf
test
or
xor
push
mov
dec
push
lcall
aas
dec
push
xchg
or
addr16
je
enter
nop
jmp
sbb
jge
stos
push
push
sbb
out
jge
psubsb
ss
nop
scas
aaa
lock
pop
in
leave
aaa
xor
push
les
test
outsl
dec
pand
arpl
jge
pop
mov
lods
xor
test
xchg
ds
inc
fwait
std
bound
das
insb
mov
ja
pop
pop
push
pop
or
jg
neg
cli
stos
fs
fstl
or
rcl
sub
insb
loope
mov
popf
leave
into
into
mov
addb
daa
push
fsts
mov
sahf
jae
xchg
mov
add
xlat
push
sbb
ror
xlat
sbb
lock
mov
movsbl
xlat
cmp
sub
jae
ror
cltd
dec
negl
shll
pop
fstl
repnz
mov
out
xchg
addr16
jl
xchg
dec
add
mov
jne
push
mov
or
push
ret
cli
jae
push
and
mov
push
mov
sub
pop
cltd
lret
push
sti
xor
outsl
push
push
lock
and
inc
in
xor
sub
mov
shlb
sbb
xorb
ja
push
sbb
lods
fs
cmp
cmpsb
jnp
xchg
insl
hlt
fcmovnu
cltd
push
mov
mov
cli
shlb
lret
stc
mov
mov
xchg
jle
jl
divl
loopne
test
inc
loopne
adc
mov
pop
ds
mov
push
or
xor
cld
xchg
adc
testb
or
push
inc
sub
in
jb
adc
shlb
iret
pop
xor
sub
loope
sub
lret
push
pop
cmc
lcall
jae
and
or
mov
sub
jno
mov
jmp
xlat
mov
sti
gs
dec
jp
cltd
loopne
cmp
aad
adc
mov
out
jecxz
popf
cmpsl
jg
fdivs
jo
imul
std
dec
xchg
adc
repz
add
xchg
jbe
lods
sbb
idiv
addr16
and
ss
inc
mov
call
mov
mov
sub
in
xchg
jge
adc
inc
fimull
or
icebp
incl
adc
push
sti
xchg
rolb
scas
call
push
addr16
lret
loopne
movsb
outsb
mov
xchg
bound
in
scas
jo
lahf
loopne
xor
out
ret
aam
jbe
pop
sub
jge
in
insl
xor
cwtl
cmp
fisttps
jns
push
mov
in
test
roll
xchg
inc
mov
adc
hlt
repz
lea
jo
arpl
add
mov
mov
movsl
push
add
mov
cli
pushf
xchg
and
shlb
lods
cmp
jmp
or
or
cmpsb
dec
pop
mov
sahf
sbb
pop
cmp
mov
and
imul
cmp
push
cwtl
xor
inc
adc
mov
fcoml
lods
cs
sub
cmp
aas
cmp
push
sub
sti
inc
jns
lret
in
negl
xor
out
adc
pop
lahf
or
push
insb
mov
inc
arpl
xor
jns
jae
test
adc
fstpl
int
or
je
fistl
cmpsl
movb
dec
lods
mov
div
sub
inc
sbb
je
add
call
pop
std
jmp
scas
mov
fstl
jnp
daa
in
fistpll
shll
mov
stc
mov
xlat
cs
divl
inc
scas
shrl
js
adc
xchg
test
xor
test
aam
daa
pop
mov
mov
scas
sbb
pop
test
cmp
sbbb
jo
sub
hlt
or
push
scas
pop
es
pop
push
mov
and
pop
xchg
jne
das
jno
adc
inc
dec
imul
shll
mov
xchg
xor
movzwl
dec
ret
inc
dec
mov
stc
sbb
les
fdivs
fidivl
jecxz
mov
ret
mov
jmp
fwait
pushf
subl
cmp
popa
jecxz
js
loop
inc
cmp
ja
andb
xchg
mov
fiaddl
xor
mov
push
inc
clc
mov
jo
movsb
addr16
xchg
sbb
push
rcrl
mov
enter
in
mov
int3
scas
cmp
adc
sub
out
cmc
adc
mov
lds
adc
leave
dec
add
ja
jl
loopne
adc
jbe
test
xchg
in
xchg
sti
lods
cld
fs
and
pop
mov
out
imul
mov
cmp
add
and
jno
int
mov
xor
mov
push
mov
and
and
cs
pop
out
push
in
cli
mov
xchg
sbb
ret
mov
cld
xchg
js
lods
mov
inc
dec
push
into
in
fstps
les
into
fwait
cmpl
sbbb
add
inc
pusha
jecxz
negb
fadds
mov
stc
imul
ds
push
and
test
pop
sti
or
push
inc
insl
dec
pop
stc
adc
jg
mov
xchg
mov
mov
xor
sbb
sti
rol
ret
inc
sbb
pop
je
pop
xacquire
pop
xchg
ret
daa
les
and
lods
jmp
loope
push
and
add
sbb
mov
ljmp
testl
mov
mov
cmp
stc
cmp
inc
adc
aaa
push
rcrl
push
jno
pop
sar
outsl
das
adc
outsb
loop
mov
gs
sti
scas
in
xchg
push
test
movsl
sub
dec
fwait
cmpsl
or
lods
fidivs
push
jle
in
subb
or
int3
adc
mov
pop
inc
arpl
dec
movsb
sbb
cmp
sahf
lahf
sub
pop
sbb
jecxz
ror
lock
imul
xor
mov
jmp
scas
push
fistl
xor
jbe
mov
stos
call
and
push
es
or
push
popa
rcrb
imul
ljmp
jne
fdivr
dec
mov
pop
hlt
pop
out
mov
call
dec
dec
sbb
cmp
push
push
cmpb
dec
cmpsl
mov
loope
adc
cmpsb
xor
inc
dec
lea
movsb
sub
mov
and
jmp
or
mov
adc
inc
sbb
mov
sbb
icebp
dec
add
jmp
rolb
lahf
aas
pushl
popf
std
and
or
rorb
fnstenv
aaa
dec
out
mov
mov
ret
fidivrl
sub
fisubl
lahf
negl
xor
pop
nop
cmp
cmpsb
dec
xchg
shl
mov
lahf
sbb
test
orb
loope
sbb
in
lret
jb
ret
mov
dec
sub
push
xor
jp
aad
outsl
rcr
cmp
test
pop
call
adc
mov
fxch
es
or
xchg
mov
and
mov
xor
ja
sub
pop
dec
lcall
jno
je
stos
fisttps
and
fistpll
pop
cmpb
data16
sub
jnp
movsl
mov
and
lret
cld
rorl
int
inc
xor
out
scas
lahf
sti
dec
popl
out
pop
sbb
fs
mov
mov
jne
xchg
and
jg
mov
xchg
mov
cli
stos
int
push
adc
sub
cmp
push
mov
jne
sub
rcll
mov
pop
sub
jp
ret
ret
mov
push
and
lahf
repz
or
pop
sub
mov
cmpsb
lods
rol
cli
xlat
mov
loopne
push
shll
std
stc
sub
sub
jnp
test
repz
push
addr16
pop
ljmp
and
sbb
aaa
in
paddq
and
lcall
pop
pushf
out
ret
gs
dec
jecxz
ljmp
sbb
dec
imul
test
icebp
push
sub
movsl
jae
add
jnp
out
cmp
xor
push
bound
or
test
ds
out
fnsave
dec
aam
mov
inc
sbb
jle
lret
mov
or
push
or
enter
mov
lods
mov
push
pusha
mov
fstpt
cmpsb
out
adc
iret
aam
lods
into
sbb
xor
mov
iret
mov
jno
stos
movsl
mov
imul
std
mov
sub
push
mov
lods
cwtl
mov
pop
out
mov
mov
cmpsb
popa
icebp
cmpsb
sbb
add
int
mov
pop
xor
movsl
out
mulb
decl
mov
leave
nop
xor
les
cmp
push
xor
and
pop
xor
fadds
lret
scas
push
jmp
gs
arpl
jo
bound
jl
jmp
in
dec
andl
aad
test
stos
sahf
inc
lock
mov
aaa
sub
xor
shlb
mov
ret
cmpl
shrd
pop
xor
push
mov
sbb
xor
xchg
fs
lds
testl
into
push
mov
std
or
dec
inc
gs
lea
jecxz
cs
mov
repz
arpl
mov
xchg
xchg
mov
int3
jecxz
inc
and
adc
inc
cltd
lret
nop
pusha
add
add
xlat
adc
inc
in
push
jnp
push
insb
mov
into
jg
or
inc
adc
mov
mov
mov
mov
cmpb
cmp
out
pop
outsl
cltd
push
ret
std
or
insl
adc
xchg
insb
lds
js
into
xchg
mov
cs
mov
inc
ljmp
lods
inc
ja
das
aas
or
xor
popf
test
in
dec
lcall
mov
outsl
push
mov
jns
inc
pop
lahf
fwait
in
fnstcw
lret
pop
add
pop
icebp
mov
xchg
jns
push
or
jge
getsec
sub
cld
iret
pop
fwait
add
test
adc
lcall
insb
push
cmp
mov
push
scas
adc
pushf
gs
ja
hlt
nop
imul
pop
out
push
mov
aas
mov
jmp
bswap
jo
imul
stos
addr16
pop
inc
add
fidivs
push
cmpsb
or
jae
jns
and
mov
test
loop
cwtl
pop
daa
fcoml
fcmovnbe
lcall
or
mov
pop
mov
mov
es
ja
mov
and
inc
fmulp
fstpt
pop
pop
test
bound
pop
xchg
jle
jge
push
incl
mov
fstps
loope
hlt
incb
and
scas
es
xor
sbb
or
jge
xor
add
subb
dec
sub
rolb
rcl
cmpsl
add
daa
push
andl
shll
leave
xor
popa
jmp
lret
jbe
or
imul
mov
jecxz
jmp
fdivrl
jb
inc
mov
shr
jmp
stos
cltd
sbb
inc
test
dec
mov
fldenv
and
in
lock
lea
mov
mov
sbb
scas
mov
mull
mov
sbb
and
xchg
mulb
ss
pop
push
xchg
es
das
mov
pop
xchg
mov
pushf
enter
fs
scas
xorb
roll
pop
mov
push
add
mov
shl
in
push
testb
mov
push
and
nop
in
mov
scas
dec
mov
inc
fsubrs
cwtl
clc
scas
jle
cs
push
pop
mov
lcall
cmp
pop
mull
mov
push
dec
inc
dec
loop
dec
push
dec
and
inc
adc
sub
mul
repz
or
into
add
jl
push
sbb
into
scas
lds
dec
push
stos
sbb
pop
rcr
xchg
aad
dec
jp
pop
mov
cmp
std
or
lock
cmp
mov
lret
dec
mov
add
cmp
lods
inc
scas
pop
fisttpl
lods
push
fdivrs
mov
and
adc
imull
adcb
cwtl
popf
int
push
cwtl
inc
adc
popl
cltd
xor
leave
sahf
fcmovne
int
sbb
mov
icebp
sbb
add
push
mov
stos
mov
lds
data16
popa
push
mov
lret
xchg
cmp
mov
jb
divb
jnp
dec
es
pop
pop
sub
jl
mov
or
sub
add
jge
dec
loop
dec
leave
sbbl
negl
xor
xchg
mov
stc
lods
nop
loopne
xchg
lahf
xor
push
mov
gs
push
jge
pop
cmp
lahf
iret
sub
sub
mov
sbb
xchg
imul
mov
loope,pt
fldl
mov
mov
dec
sti
jmp
adc
fistpl
xchg
dec
jne
sbb
jecxz
mov
out
xchg
xor
jb
fs
pusha
scas
sub
xchg
ret
cli
testb
sub
lock
adc
adc
jno
mov
pop
xchg
push
fistps
mov
test
xlat
sar
mov
mov
xchg
arpl
repnz
imul
pop
dec
mov
inc
loope
popf
push
mov
test
nop
add
call
les
in
push
mov
adc
sbb
ljmp
movsl
in
push
lret
cmpsb
push
fdivs
ret
sahf
xchg
inc
xchg
mov
jne
movsl
fstp
push
push
dec
and
rorl
inc
mov
sbb
notb
stos
pusha
dec
add
stc
repz
ret
in
mov
movsl
rcl
adc
insb
pop
push
sahf
jg
or
mov
cmp
insb
push
xor
adc
ret
hlt
cwtl
lods
cmpsl
inc
hlt
mov
repnz
or
xchg
mov
xor
sbb
add
lock
fs
sbb
fimuls
test
clc
cmp
cmp
pop
jns
sub
cs
pop
outsl
inc
jbe
cmp
cld
adc
inc
lcall
jae
faddl
in
mov
lret
jmp
cltd
push
data16
loope
add
and
add
cmp
stos
jl
int3
pop
jl
jo
and
outsl
mov
push
pop
shlb
jno
mov
stc
or
aaa
xchg
icebp
ss
sbb
add
push
mov
jecxz
out
popf
mov
jno
bound
rolb
arpl
cmp
test
out
jae
add
xchg
sarb
scas
ffree
inc
fcomps
or
sbb
jge
popf
lret
lcall
adc
dec
hlt
adc
mov
xor
add
dec
insb
leave
outsl
sbb
mov
pop
incl
cmp
jg
pop
repnz
sbb
ret
test
loop
insb
fwait
sub
push
xor
inc
push
lock
jb
xor
les
in
jne
shrb
xor
loop
arpl
ret
cmc
sub
sub
adc
divb
xorb
and
xchg
hlt
adc
adc
cmp
insb
daa
rcrb
icebp
sub
push
jno
sbb
rcl
mov
movsl
in
xchg
les
add
inc
movl
shl
cmp
push
into
mov
movsl
repz
sub
adc
push
lret
mov
dec
sub
xor
ss
in
and
data16
xor
mov
push
and
inc
orps
out
jne
repnz
out
je
or
jmp
jae
lret
jge
rcl
sub
xchg
rcll
repnz
gs
lods
outsl
repnz
fstpt
sahf
xchg
loop
into
xchg
xorb
pop
cmpsb
sub
xchg
in
push
xor
mov
ja
jae
out
sahf
lret
xor
mov
mov
xchg
pusha
mov
sti
mov
fs
ss
mov
pop
addr16
fiaddl
sahf
pop
fadds
daa
rorl
bound
dec
mov
cmpsb
lahf
nop
test
adc
push
ret
mov
pop
aam
adc
scas
iret
or
add
pop
bnd
inc
iret
dec
jg
sub
adc
loopne
imul
inc
cltd
mov
out
xor
test
mov
pop
mov
lods
mov
push
enter
in
pop
xor
mov
pushf
jbe
cli
jecxz
adc
mov
pop
shll
cltd
dec
push
inc
cmpsb
clc
subl
xchg
testl
inc
stos
jns
int3
popf
mov
jl
xchg
scas
gs
inc
dec
and
cmpsb
ljmp
pop
jge
je
mov
cs
push
stos
cld
fstpt
arpl
aam
repnz
push
mov
mov
ds
cmpsb
mov
jge
fimull
in
xchg
push
adc
jns
jno
lock
sahf
sbb
mov
push
cmp
call
test
dec
mov
inc
movl
or
sbb
cli
sbb
repnz
sub
mov
cmp
jae
and
mov
inc
lods
mov
dec
mov
ss
cmp
loopne
fildl
hlt
test
mov
pop
mov
sub
dec
add
fs
xor
mov
fcoms
adc
insb
mov
add
andl
outsl
rclb
inc
jp
movsb
pop
or
jl
mov
adc
add
mov
cmpsb
scas
shrl
sub
push
mov
fmuls
mov
adc
popa
and
jo
pusha
sbb
vorps
sub
push
xorb
enter
les
movsb
popa
adc
and
or
inc
fsubr
sbb
and
enter
inc
pop
mov
dec
push
xchg
or
cmp
sub
push
int3
cmp
push
and
popf
adc
add
rorb
add
jecxz
mov
jmp
or
lods
fsts
ror
cmp
cwtl
iret
insb
dec
lods
pop
jmp
dec
insb
adcb
adc
in
cmpsl
xor
mov
mov
mov
jno
pusha
cmpsl
add
aaa
pop
mov
dec
add
test
lea
pop
inc
xor
cld
sub
inc
stos
aaa
jecxz
pushf
insb
int3
pop
in
or
mov
lds
mov
hlt
mov
shr
sti
pop
adc
sbb
std
popa
or
mov
lcall
in
xchg
popf
adc
mov
adc
jb
or
arpl
ja
pop
mov
pop
or
fs
sarb
adc
jmp
les
xchg
cs
in
and
ret
loope
lock
cmpsl
sbb
iret
adc
dec
lea
loopne
leave
hlt
loope
rcl
jle
enter
push
fwait
dec
aas
xor
outsb
scas
sub
inc
mov
das
insl
aaa
mov
mov
mov
mov
cmp
arpl
mov
stc
push
movsb
pop
enter
xor
pop
or
cld
sarl
out
call
into
scas
lret
mov
sub
adc
testb
popf
xorl
int3
cld
add
sti
stc
or
arpl
lret
mov
neg
es
jecxz
je
js
cmp
fistps
in
mov
js
jns
push
adc
test
mov
lods
inc
out
sub
xor
in
sbb
sbb
sbb
repnz
add
stos
push
out
loopne
fisttpl
jl
mov
lock
adc
stos
adc
dec
pop
adc
in
dec
stos
fisttpll
cmp
mov
sub
stos
mov
lods
nop
pop
into
ja
cmc
cwtl
rclb
jb
mov
sbb
ss
and
enter
decb
daa
push
jbe
push
repnz
repnz
push
jae
fcompl
cmp
mov
lea
movsl
mov
insb
in
fs
popf
aas
jnp
adc
push
mov
add
mov
outsl
rcr
ss
xchg
mov
mov
xor
push
inc
pop
fmuls
mov
insb
push
inc
test
in
add
xor
fs
and
clc
mov
sub
leave
sbb
cli
test
adc
insb
icebp
es
push
mov
jge
or
mov
adc
test
aad
fisttpl
shlb
cmpsb
pop
lock
outsl
mov
and
fcoml
pop
insl
xorl
mov
addr16
orb
jns
mov
ret
xlat
cs
mov
lret
aam
add
and
rcll
insb
xchg
pop
dec
push
adc
in
mov
movsl
je
mov
or
mov
dec
mov
fwait
int
out
inc
scas
sahf
sub
jno
push
daa
dec
lods
xchg
divl
jge
adc
clc
stc
in
fsubs
inc
mov
scas
jne
mov
adc
out
lret
fadds
ret
inc
out
cs
in
stos
and
adc
mov
addl
hlt
xor
lret
pop
sbb
mov
xchg
andl
sbb
sbb
push
sbb
and
mov
arpl
jmp
dec
cmpsb
cld
sbb
mov
repnz
popf
xchg
aad
mov
sub
mov
pop
jl
fs
cli
mov
inc
mov
pop
fs
jae
inc
cwtl
add
rorb
add
xor
and
ds
mov
int3
push
mov
dec
nop
or
mov
in
pop
cmp
sub
ljmp
or
adc
xor
jnp
dec
add
sbb
enter
stos
mov
bound
add
inc
stos
pop
mov
and
lods
xor
movsb
pop
out
jge
out
xchg
pop
jl
jl
xor
xor
jle
and
sbb
dec
mov
inc
movsb
xor
mulb
lret
adc
jecxz
push
adc
repz
lods
cmpsl
movsl
fnsave
mov
mulb
sub
and
fidivs
movsl
insl
xor
pop
sbb
sbb
outsb
mov
mov
dec
adcb
xchg
dec
xchg
xchg
xchg
xchg
leave
lcall
xor
jb
jge
dec
out
mov
xchg
popf
or
js
loopne
jo
inc
scas
lret
pop
testb
xchg
cmpb
hlt
push
xor
andb
pop
je
mov
mov
mov
outsl
inc
call
mov
cld
xchg
scas
ja
lcall
inc
fsubp
sub
dec
mov
mov
in
mov
movl
cmpsl
gs
mov
rolb
xchg
and
rorl
int
ss
push
xor
adc
push
call
cld
inc
rcrb
ja
inc
icebp
ljmp
cmp
mov
sahf
pop
stc
std
call
cmc
je
dec
fs
mov
xchg
aam
testb
movsl
nop
cmpb
jb
xchg
popf
or
push
mov
push
mov
sub
test
movsb
push
or
and
icebp
fcompl
cld
adc
aaa
sarb
cmp
lea
arpl
xchg
rcll
push
mov
jle
pop
dec
aas
pop
mov
sub
inc
mov
sub
mov
xchg
push
dec
nop
inc
cld
lea
mov
sub
sub
fcmovne
and
mov
repnz
or
mov
stos
sub
or
sbb
push
cwtl
lea
inc
mov
test
dec
jo
jg
scas
or
sahf
lods
push
push
dec
mov
sbb
aad
scas
dec
stos
cs
adc
movsl
xor
loopne
ljmp
and
or
fistl
dec
daa
adc
or
aam
inc
sti
aas
jbe
xchg
fsts
sarb
mov
push
sbb
ja
lahf
push
xor
cmpsb
jmp
out
or
mov
mov
scas
xor
test
inc
xor
mov
jbe
lods
push
sub
adc
push
and
in
push
xorl
fisttps
push
or
mov
push
dec
cs
imulb
push
ja
fwait
mov
subl
ret
pop
addr16
out
sub
mov
test
mov
xlat
aas
outsb
stos
and
xor
daa
dec
pop
ret
inc
sbb
lea
inc
loop
pop
popa
adc
outsl
pushf
xor
mov
mov
popa
das
or
dec
dec
cltd
shll
std
fucomp
sbb
dec
mov
push
fcomps
dec
ja
ljmp
inc
jbe
imul
in
mov
fcoml
mov
sbb
lock
inc
mov
lock
cmp
shlb
xlat
aaa
pop
cmp
cs
fstl
pushf
pop
inc
nop
movsb
fidivrs
aam
mov
jle
outsb
aaa
lock
les
dec
fisubl
mov
mov
daa
outsl
stos
pop
iret
xlat
inc
push
mov
cs
loop
repz
mov
and
clc
cmpsl
jl
sub
call
cwtl
and
cmpsb
push
and
lods
fwait
add
xorb
pop
mov
adc
in
cli
pop
pop
subl
rcrl
xchg
add
jmp
mov
loop
pusha
jns
les
int
adc
inc
stc
jb
add
pop
iret
fwait
cmp
cmp
hlt
pop
das
in
lcall
movsl
sbb
sahf
outsb
jecxz
fisubrs
icebp
lcall
mulb
mov
into
jns
jle
aaa
in
dec
es
mov
pushf
dec
add
in
enter
scas
xchg
rcrl
dec
imul
mov
pop
lahf
cwtl
fucomip
jle
lock
pslld
sbb
js
loopne
dec
stos
push
mov
xor
ffree
sub
jp
mov
js
xor
js
push
jne
mov
adc
loopne
int
stos
push
mov
push
sahf
jg,pn
adc
fwait
daa
in
imulb
insb
mov
pop
in
jbe
sbb
push
push
inc
popf
movsl
xor
ljmp
imull
loope
enter
ja
cmc
in
and
and
sub
arpl
or
xor
or
and
nop
xchg
sub
mov
popa
es
invlpg
fisttps
clc
and
in
cmpsb
cld
mov
js
je
inc
cli
mov
sub
jne
or
fmuls
sarb
adc
mov
pop
outsl
out
and
sahf
lock
es
inc
arpl
pop
int3
repz
jno
jge
lahf
inc
and
cmc
mov
fnstsw
adc
ljmp
mov
and
loop
jb
popf
sbb
cli
or
adc
and
adc
jnp
or
pop
cmpsb
test
mov
jl
pop
daa
or
lret
ret
dec
loope
jnp
jmp
add
in
push
jecxz
jecxz
inc
mov
dec
andb
mov
movsl
ds
pushf
jg
xchg
out
xchg
dec
scas
xor
frndint
mov
mov
outsl
icebp
cmp
rorb
je
xor
push
cltd
adc
loope
clc
es
pop
test
inc
cmpsl
push
push
jns
fisubs
repnz
mov
scas
xlat
loop
idivb
jbe
xchg
addl
scas
push
in
xchg
jl
xchg
sub
add
lret
ret
and
fsts
es
mov
adc
stos
aad
fmul
movsl
add
roll
cltd
add
das
stos
enter
mov
lods
test
pusha
jle
pop
sub
pop
push
jo
mov
push
xchg
push
mov
ss
fnstcw
imul
or
inc
mov
pop
adc
sbb
outsl
in
icebp
lret
cli
mov
pavgb
mov
inc
pop
cmc
in
js
adc
shl
pop
sti
fwait
lds
xchg
adc
mov
push
jp
mull
mov
adcl
out
xor
lea
incb
mov
enter
pop
xchg
xchg
fwait
pop
cmpsb
mov
sub
rclb
sahf
mov
and
sub
jge
adc
push
addr16
mov
inc
ret
adc
cli
mov
inc
in
loopne
mov
fcmovnbe
out
dec
out
mov
push
mov
mov
dec
rcl
push
inc
xor
in
xor
pop
and
das
test
xor
mov
fldcw
outsb
dec
mov
push
loopne
sarl
adc
test
sar
and
loope
subb
int
xchg
and
test
mov
xor
lods
out
jle
insl
pop
or
outsl
psraw
fdivl
inc
mov
mov
adc
jbe
dec
jnp
lods
push
sti
fnstsw
and
in
lret
out
jmp
jnp
cmc
xor
inc
or
mov
xor
lahf
dec
test
loop
rol
frstor
or
or
fcompl
xchg
data16
fucomp
xchg
push
xchg
pop
adc
or
sti
jbe
push
popf
add
dec
inc
ret
xor
xchg
sbb
xlat
jmp
outsl
shrb
jae
inc
ret
cmp
push
pop
jbe
icebp
ficoml
shl
cmpb
fwait
mov
push
push
leave
cmc
out
pusha
mov
and
push
out
and
fwait
jo
clc
sub
leave
push
dec
insl
dec
push
mov
sub
lds
pop
iret
mulb
nop
in
and
test
sub
push
sti
push
inc
mov
sub
xchg
xor
pop
inc
arpl
push
insb
push
xchg
clc
lcall
adc
mov
loopne
push
mov
in
pop
mov
sbb
shlb
jl
les
in
jnp
adc
add
aam
out
test
pop
jbe
stc
adc
bound
lods
movsb
push
fidivrs
or
add
in
cli
lods
inc
add
imul
push
sub
mov
xor
addr16
or
push
push
inc
sbb
push
lret
lcall
das
nop
add
mov
xchg
pusha
jmp
mov
gs
jbe
mov
dec
stc
cmp
jne
or
lahf
andl
xchg
movsl
jle
push
sti
xor
jae
mov
inc
xor
sub
dec
jge
cmc
jb
mov
neg
push
shrl
xchg
pop
add
out
cmpsb
dec
xor
mov
jecxz
adc
mov
adc
ret
test
push
out
mov
lock
pop
push
mov
adcb
and
xor
outsb
or
add
mov
and
mov
fsincos
das
and
or
mov
ss
xchg
scas
or
sbb
mov
sar
nop
aad
pop
test
and
mov
cmp
pop
mov
pop
mov
jg
insb
dec
and
jb
push
jecxz
xor
into
lods
test
inc
pop
imul
dec
push
scas
icebp
pop
add
rolb
adc
popf
xchg
adc
std
push
cmc
cld
mov
je
ret
jp
and
imul
or
rol
fisttpl
cmp
leave
loop
rolb
mov
out
leave
push
xor
addl
dec
mov
cmp
xorl
dec
dec
pop
shl
push
sar
aaa
loope
movb
mov
mov
shll
sbb
stc
mov
mov
pop
fldt
das
inc
loope
in
pop
aam
xchg
pop
movsl
sbb
cld
xor
cmp
add
push
in
xchg
add
add
add
pop
push
mov
mov
inc
hlt
pop
jbe
cmpsl
and
pop
sub
pop
scas
xor
into
xor
mov
scas
insb
or
cmp
push
sbb
sbb
loope
popf
dec
mov
cmpsl
mov
adc
aad
mov
cs
mov
ds
int3
sbb
enter
dec
nop
jp
ljmp
cmp
cli
dec
push
cmp
out
fistps
dec
fldl
or
mov
inc
popa
jl
mov
cwtl
ja
adc
es
clc
sbb
lret
cmp
mov
aad
jns
dec
lcall
inc
js
or
pop
jae
mov
mov
xchg
sti
flds
cmp
and
mov
jae
pushf
test
sti
popf
sub
scas
nop
sub
jmp
or
imul
andb
sub
mov
xchg
xlat
js
xchg
das
sarl
clc
jbe
sti
sarb
dec
outsl
loop
rcrb
cmc
mov
fcompl
or
lock
hlt
or
inc
cs
mov
push
ret
push
cmp
xchg
in
add
notb
mov
cmpsl
movsb
bound
filds
jbe
test
xlat
mov
sbb
jbe
pusha
loop
mov
mov
aam
mov
cmp
ljmp
sbb
push
push
out
add
nop
jp
inc
add
lea
int
pop
cmp
inc
mov
adc
jg
dec
add
test
out
mov
add
mov
in
pop
push
and
lods
or
into
dec
scas
iret
ja
add
das
rorl
fs
sub
inc
movsl
dec
sbb
pop
xlat
sbb
cmpsb
sbb
js
mov
inc
pushf
or
xlat
jne
push
lret
sub
movsl
dec
stos
xor
mov
repnz
popf
cmpsb
in
xor
mov
enter
mov
adc
bound
sbb
add
sahf
dec
pop
sub
rclb
in
dec
orb
mov
push
ss
icebp
inc
mov
repnz
call
cmp
out
pop
ja
cli
cmp
gs
and
ret
ret
and
gs
loop
jg
mov
rcr
call
aad
loopne
stos
mov
xor
sbb
test
xchg
pop
or
xor
gs
scas
pop
test
aam
sub
adc
or
scas
movsb
int3
xchg
push
push
sbb
das
jnp,pt
xchg
mov
cmp
call
incl
push
cmpl
pushf
in
sti
out
nop
mov
daa
push
repnz
jle
mov
ret
mov
mov
and
icebp
out
fiaddl
pop
dec
cs
mov
movsb
and
inc
das
pop
mov
lods
inc
mov
xchg
sub
push
hlt
sub
insl
popa
jge
sti
ss
jecxz
cmp
or
std
inc
dec
sbb
pop
fiaddl
push
sub
mov
and
mov
inc
pop
pop
aaa
enter
sub
ss
inc
iret
or
dec
jge
sbb
push
cmpsl
mov
cmp
popa
int3
xor
lods
mov
mov
xchg
aaa
mov
and
cmp
jbe
xchg
push
xor
sbb
jnp
mov
sahf
into
sbbb
adc
outsl
daa
xor
mov
iret
aam
repz
ds
mov
adc
and
add
xor
mov
movsb
mov
inc
cmp
push
testl
in
js
in
or
jecxz
add
loope
push
movl
push
orl
loopne
mov
aad
jp
xchg
test
push
jle
lds
push
ljmp
add
loop
cwtl
and
out
popf
xor
adcb
cmp
pushf
sub
jo
lret
fcmove
ret
xchg
inc
stos
rcl
cmpsl
adcb
or
in
enter
jbe
mov
leave
aam
ljmp
add
sbb
lcall
mov
addr16
loop
add
mov
jmp
inc
outsl
fimuls
movsl
rcl
outsb
test
xchg
int
and
cmp
fcmovnu
in
lcall
xchg
or
adcl
pop
subl
inc
or
aad
pop
mov
adc
mov
or
subb
je
arpl
inc
fistl
jnp
sub
jle,pt
xor
mov
arpl
mov
daa
out
push
lcall
xchg
inc
push
pop
sbb
frstor
sbb
mov
ss
inc
xchg
adc
ljmp
pop
dec
or
or
fldt
es
sbb
mov
popf
cmp
enter
in
cmp
clc
gs
or
mulb
inc
mov
xchg
aas
or
push
dec
jle
repz
ret
xor
add
fistl
lahf
ds
jg
lods
scas
mov
mov
xchg
sarl
mov
mov
fisubrs
add
and
mov
pop
inc
inc
in
pop
daa
fidivrs
push
push
dec
lea
aad
inc
rol
pushf
sbb
push
xor
aam
cmpb
rcrl
sub
std
lret
das
pop
push
call
aas
shlb
sub
sub
ds
mov
sub
mov
mov
mov
test
mov
in
scas
invd
fldl
in
ljmp
push
add
movsb
pop
mov
outsl
insb
pop
cmp
push
insl
rolb
in
sti
outsb
pop
aam
imul
mov
sbb
cmpb
sbb
popf
int
xor
lds
cmpl
fistps
cmp
adc
mov
stc
lds
push
shll
les
xor
popf
and
jns
icebp
and
jmp
nop
cmp
sbb
push
jmp
xchg
aad
into
pop
cmp
add
les
mov
test
insb
fwait
sbb
in
pop
add
mov
data16
xor
out
test
pop
mov
repnz
mov
roll
lds
add
inc
daa
sbb
xchg
ficoms
fcmovbe
mov
jb
xchg
mov
adc
arpl
or
pop
lods
int
or
popf
in
xchg
push
into
jae
stos
jns
mov
mov
cmp
scas
inc
push
fs
hlt
fisubs
cmp
adc
pushf
sarl
ljmp
rcrl
jg
dec
push
sub
fsubrs
xor
repnz
repz
mov
or
and
pop
mov
jge
call
or
jle
lock
pop
mov
jmp
push
push
int
sti
leave
lea
sbb
aam
sub
push
xchg
shr
in
xor
or
xchg
mov
aas
jnp
incl
in
add
rcr
add
jae
cld
mov
scas
and
pop
outsl
js
in
sbb
out
pop
sub
mov
lcall
scas
push
cmp
outsl
icebp
inc
pusha
inc
es
gs
loope
sti
jne
push
xor
aad
jge
mov
scas
loope
xchg
push
jo
add
pusha
mov
push
out
daa
cmp
push
addl
lock
mov
clc
mulb
push
sarb
dec
cmp
enter
call
jle
gs
daa
mov
fmul
out
dec
stos
xor
jno
mov
dec
inc
xchg
lock
dec
push
inc
fcoml
mov
rcrl
imul
insb
mov
icebp
lret
pop
jbe
xchg
sarb
aas
pop
test
in
dec
add
movsl
sahf
jp
cmp
sti
add
dec
mov
fimull
out
push
xchg
pusha
jle
xchg
mov
lock
fisubrs
sub
enter
dec
test
pop
or
jl
pop
xchg
aas
xor
sub
rolb
jg
ret
add
loope
dec
test
insl
daa
ret
mov
pop
out
hlt
lods
mov
inc
and
push
test
pop
mov
scas
xchg
das
push
div
dec
clc
sbb
jnp
sbb
pop
dec
inc
sbb
jp
pop
in
aad
repnz
out
sub
loop
xchg
in
stc
dec
xchg
add
bound
addr16
mov
inc
int3
incb
test
xorl
push
dec
cmc
inc
mov
mov
scas
ds
int3
xor
push
lret
cmpsb
push
pop
mov
iret
sbb
mov
enter
paddusb
sbb
add
adcb
daa
scas
jo
jg
lcall
lahf
lods
add
sbb
adcb
sub
lds
cmp
loopne
in
mov
push
fidivrl
les
ljmp
xchg
mov
scas
fbld
pop
mov
iret
sbb
lock
mov
adc
lds
cmp
mov
sahf
mov
hlt
jb
adcb
push
mov
icebp
and
les
stos
jb
pavgw
dec
int
lcall
sbb
scas
ret
mov
sahf
mov
outsl
xchg
jmp
xchg
add
push
mov
cmc
mov
push
fidivrs
push
inc
lea
mov
fwait
push
jnp
popa
adcb
ss
stos
sub
sahf
pop
sbb
mov
xchg
mov
dec
cmc
stos
jle
pop
dec
aam
sub
xchg
mov
xchg
xor
aad
or
inc
xor
xchg
hlt
and
xchg
roll
psubd
xchg
adc
loopne
xor
sbb
mov
fidivs
lds
cmp
rolb
add
dec
xor
lahf
add
mov
jecxz
add
scas
mov
out
adc
cmp
enter
fmuls
push
test
test
mov
ljmp
ficoms
popw
cmp
inc
jle
mov
jecxz
push
outsl
inc
pop
or
pop
jbe
clc
popa
pop
out
hlt
pop
lds
popa
mov
mov
jecxz
sub
xchg
adc
outsb
sbb
xchg
cltd
aaa
aaa
fcomps
sub
mov
call
out
ja
shlb
cmpsl
lahf
push
pop
jmp
shl
pop
push
adc
test
cltd
loope
bound
mov
and
pop
in
and
cmc
mov
shll
mov
push
mov
shlb
jo
sub
pop
fnstsw
test
jo
addr16
xchg
int
pushf
xchg
dec
xor
test
fistps
mov
sbb
push
add
popa
pop
jnp
or
and
add
mov
and
mov
pop
and
sahf
mov
fcomi
outsb
outsl
cld
aaa
movsb
xor
xlat
or
inc
cmp
fwait
repz
cmp
fadds
dec
jge
iret
push
cmp
ljmp
cs
pop
adc
insb
imulb
ds
or
lret
mov
cld
shl
cld
scas
fsubrs
out
or
inc
mov
mov
test
adc
test
popf
ret
decl
sti
pop
cs
jge
adc
push
aad
lock
push
ficomps
ss
push
fwait
push
stos
outsl
sbb
call
sub
fiaddl
shlb
lcall
popa
sbb
lahf
clc
sbb
push
sahf
pop
fiadds
pop
sub
pop
repnz
fs
mov
out
push
dec
sbb
es
push
pop
sub
movb
dec
aas
fwait
aaa
add
push
shll
loopne
pop
jns
mov
scas
sub
push
mov
adc
inc
jbe
ds
lea
test
inc
mov
insl
jg
outsb
lret
shll
dec
push
xor
dec
mov
loopne
test
jl
and
pushf
and
or
nop
push
jecxz
adc
mov
in
jge
cld
popf
insl
mov
push
push
testb
push
xor
and
dec
dec
inc
rol
add
adc
adc
xchg
xchg
cmp
fsub
add
enter
pop
jns
fstpl
pop
add
and
jge
mov
jae
outsb
pop
jge
add
lds
jbe
fs
rorl
pop
jnp
cmpsl
jnp
cmp
ficoms
daa
subb
xchg
pushf
xor
adc
pop
jl
incl
mov
js
add
leave
test
pop
loope
pop
mov
jbe
or
cld
mov
add
mov
xrstors
hlt
jg
dec
fsubs
xchg
xor
inc
ret
ficoms
sbb
pop
out
stos
sub
lret
mov
sub
cld
inc
inc
push
dec
lock
mov
inc
and
ss
jno
std
jnp
jp
mov
jnp
xor
fsubl
iret
mov
or
jbe
adc
push
pop
or
movntq
xor
add
pmaxub
dec
or
mov
push
xor
mov
les
ss
js
push
leave
icebp
mov
pop
adc
jno
mov
jo
and
adc
lds
push
int3
enter
in
push
shrb
pop
adc
test
fdivp
xor
inc
in
cmp
push
rcl
pop
adc
daa
mov
dec
in
mov
inc
mov
xchg
daa
and
loope
in
sahf
inc
in
icebp
adc
pop
add
cmp
lret
push
es
aam
popf
repz
bound
inc
and
pop
and
sbb
adc
mov
mov
push
int3
pop
mov
and
xchg
sub
sub
lret
mov
pop
push
sahf
stos
pop
mov
int3
or
push
in
bound
mov
mov
xor
shlb
mov
pop
das
xchg
xchg
bound
ja
mov
add
lods
or
rep
pop
add
inc
or
outsb
lret
out
js
bound
in
mov
es
cld
mov
push
ficompl
dec
xchg
add
sahf
cmc
xlat
jne
cmp
rcr
sarb
bound
idivb
mov
cmc
adc
lcall
lods
movb
pusha
bswap
pop
fcompl
fbld
ja
mov
xor
cmp
cmp
sbbb
xor
lods
fnstcw
cli
add
adc
and
add
push
fldt
xchg
push
std
call
mov
xchg
fiaddl
fnsave
movsb
xchg
popf
lret
add
jl
fnsave
add
jb
dec
cmp
sbb
xor
cmp
push
pop
lret
fdivrs
sbb
dec
xchg
fwait
sub
mov
imul
cmpsl
dec
in
sub
mov
dec
dec
lods
hlt
scas
sbb
out
add
and
xlat
lea
adc
pop
stos
mov
dec
xchg
and
popf
fwait
add
aam
jecxz
loop
cmpsl
inc
leave
mov
addr16
into
shlb
lods
roll
cmpsb
mov
dec
xchg
xor
and
pop
ss
cmpsl
mov
push
mov
xchg
enter
leave
xor
xlat
xor
repz
popf
test
loopne
stos
inc
sahf
push
and
mov
mov
and
lods
subl
mov
mov
rorb
mov
movsb
add
shr
sbb
or
pop
xor
jne
cmpsb
std
mov
mov
dec
dec
push
mov
push
sbb
jecxz
adc
jl
cmp
xchg
out
pop
out
les
stc
lcall
movsl
in
xor
outsl
lahf
clc
inc
xacquire
std
out
out
mov
pop
nop
sub
fnstsw
out
lret
imul
jb
stc
and
xor
cli
pop
jl
pop
push
test
lret
sub
xchg
cmpsl
mov
jne
imul
ret
and
loope
mov
es
and
sbb
or
jo
lret
and
cmpsl
lret
pop
sub
cmp
rorb
or
jecxz
std
jns
pop
cmp
ficoml
pushf
jl
mov
adc
stos
pop
cmp
or
xchg
cwtl
out
mov
mov
addr16
pop
jno
cmp
mov
bound
fwait
xor
pusha
pop
dec
inc
cs
rcll
cli
push
or
sbb
adc
jmp
pop
push
int3
push
out
enter
sbb
out
xchg
repz
push
fwait
in
sub
mov
and
scas
inc
add
in
or
aas
cmp
inc
xor
mov
mov
movsb
mov
jnp
dec
sbb
xor
add
lds
add
mov
or
sub
mov
xor
movsb
add
lret
stos
fsubl
push
mov
fstpt
push
gs
jo
jae
dec
push
and
xor
pop
shll
pop
inc
cmpl
or
mov
sub
push
fnsave
sbb
les
pop
push
gs
out
call
jmp
iret
push
in
xchg
mov
out
std
lcall
jnp
clc
movsb
hlt
adc
jno
sarl
frstor
insl
jo
push
pushl
test
push
mov
imul
inc
xchg
mov
mov
gs
decb
ljmp
pop
push
sbb
insl
jp
mov
repnz
out
rcr
jnp
mov
mull
mov
push
jns
sub
jb
scas
hlt
cwtl
jae
and
rol
sub
rcrb
xchg
aaa
les
hlt
push
and
cmp
stos
pop
cltd
test
mov
dec
mov
xlat
jle
cltd
arpl
lahf
xor
mov
adc
sub
sbb
std
pop
test
daa
rcrl
xlat
jmp
out
mov
pusha
inc
insl
jns
movsl
mov
lock
fwait
in
mov
sbb
xorb
jp
idivb
xchg
xchg
dec
movsl
pop
push
mov
xorb
pop
mov
stos
push
sbb
pop
mov
sbb
jecxz
jnp
scas
sub
lock
fnstcw
mov
inc
mov
ficompl
pop
lret
jg
adc
mov
test
mov
inc
mov
js
ret
cmp
jbe
ja
cltd
pop
fstps
mov
mov
les
iret
inc
and
test
in
shrl
jge
sarb
xchg
data16
mov
loope
jl
mulb
mov
sub
cwtl
dec
push
fidivrs
scas
adc
and
inc
ja
jp
dec
shr
movsb
xor
int
jae
lahf
add
call
jb
int
jb
ficoml
shrl
outsb
not
lods
aaa
test
or
cmpsl
into
orb
and
dec
jl
push
in
push
mov
ret
adc
adc
cmp
adc
arpl
and
dec
xor
xor
stos
mov
mov
push
imul
cltd
mov
push
mov
scas
rol
jno
sbb
nop
mov
daa
shld
aaa
inc
sbb
inc
jecxz
add
aam
add
adc
aaa
inc
insb
mov
or
cmpsl
outsl
repnz
fnsave
xchg
popl
hlt
insl
add
out
xchg
jmp
mov
loop
enter
ret
cmp
mov
ss
cltd
add
dec
pop
movsb
iret
cmp
sbb
mov
in
or
jg
mov
xor
sbb
xchg
stc
shll
or
adc
push
in
push
idivl
sub
mov
sbb
mov
das
sbb
adc
pop
pop
out
adc
imul
cmp
xchg
aas
lret
addb
je
mov
mov
fwait
cmpsl
sti
je
popa
hlt
nop
adc
loopne
mov
jp
test
mov
cmp
xor
mov
movsl
inc
data16
pop
lds
jo
push
sbb
aam
cmc
data16
je
loopne
and
push
xchg
lods
mov
add
adc
mov
or
inc
cmp
mov
add
push
pop
test
inc
sub
aas
fcomps
icebp
pop
scas
rcrb
add
sti
pop
outsb
mov
jmp
pop
lret
jnp
lock
push
pop
or
cmp
or
inc
jnp
sub
sub
jg
jo
test
int3
add
push
test
stos
arpl
mov
and
or
push
xlat
xor
xchg
pop
sub
leave
ror
in
int
imul
pop
or
sub
or
and
aas
mov
repz
pushf
aad
push
mov
les
pop
pop
xchg
jle
sbb
out
sbb
jno
out
xchg
inc
pop
dec
arpl
int
mov
mov
jecxz
sahf
xor
cli
ljmp
jge
popa
ret
ss
andb
rcpps
sbb
sbb
adc
mov
add
mov
push
mov
and
into
pop
adc
xor
jne
jmp
jecxz
sub
test
or
daa
adc
or
xor
pop
cmpb
imul
adc
inc
popf
pop
scas
addr16
pop
sub
ficoms
mov
mov
jno
pusha
mov
mov
je
dec
push
ds
adc
jnp
inc
stos
inc
sub
adc
lcall
adc
es
scas
inc
stos
sbb
add
sub
push
aaa
push
xchg
jns
pop
shrl
sti
fwait
sub
and
jbe
inc
imul
repz
pop
in
pop
push
imul
stc
cltd
inc
mov
mov
dec
insb
jp
daa
xchg
testl
fstps
mov
ror
out
pop
sar
movsl
xor
pop
sbb
mov
inc
aas
fdivp
jns
sub
fcompl
add
das
pop
rorl
scas
sti
mov
mov
pop
sub
inc
jge
push
popa
dec
pop
fsubrl
jns
insl
into
pop
aad
imulb
push
pop
push
mov
xchg
and
je
xlat
jnp
sbb
xchg
and
mov
mov
jmp
cli
movsl
enter
je
out
or
jbe
mov
shl
call
mov
push
mov
sbb
push
data16
ficoms
cmpsb
push
subl
rcl
inc
jo
repz
mov
fs
sub
jo
jmp
cmpsb
xor
addr16
xor
mov
jle
gs
ret
int
xor
lret
cmp
sub
push
sbb
sbb
outsb
sbb
negl
dec
push
lret
xchg
sbb
inc
inc
jo
mov
out
sub
push
jns
or
jp
jmp
and
xor
xlat
imul
test
or
rorb
pop
add
in
mov
xor
stc
lds
pusha
push
pusha
out
push
ret
into
fbld
xchg
inc
call
sbb
mov
out
lods
jmp
stos
jne
insl
nop
or
test
adc
test
xor
cmpsb
pop
xor
rclb
adc
in
adcl
push
jmp
xchg
lret
add
mov
inc
mov
loopne
pop
jge
add
mov
mov
in
loopne
mov
adc
in
jmp
add
std
not
cmp
movsb
push
jl
jecxz
lea
jge
into
idivl
dec
or
or
mov
pop
iret
sti
pop
inc
into
outsl
add
jecxz
cmp
add
fcoms
add
mov
and
insl
sub
cltd
mov
jae
loop
mov
sub
imul
sti
sbb
jge
pop
inc
pop
fbld
ljmp
jge
and
sbb
xor
add
and
mov
outsl
xor
and
pop
cltd
rorl
sub
cmpsl
les
and
push
in
subb
push
mov
mov
movsl
push
int3
dec
mov
arpl
sub
ret
mov
mov
jne
adcb
test
jge
sub
jb
push
bound
and
ljmp
jmp
sbb
inc
mov
call
or
cmp
mov
sbb
int
imulb
cli
test
mov
fbstp
lcall
xor
push
repz
jmp
popf
adc
aam
and
add
mov
add
mov
pop
aaa
mov
push
xchg
push
mov
jmp
and
data16
ficoml
mov
outsb
pushf
jb
insb
jbe
pop
inc
inc
pop
fwait
je
cmp
xchg
rol
inc
fistl
fisubrl
inc
adc
sbb
pmaddwd
mov
mov
mov
push
fs
xor
mov
js
dec
loope
push
stc
add
les
out
int3
xchg
push
inc
in
lods
or
enter
leave
xor
dec
icebp
sbb
outsb
cmp
mov
or
inc
jne
or
rdpmc
add
cmpsb
not
cli
in
xchg
ljmp
fdivrs
sub
aad
mov
std
test
or
and
inc
mov
call
es
mov
dec
sbb
fnstsw
insb
addr16
leave
jb
pop
pop
filds
lods
xchg
ficoms
push
pop
xchg
lods
cmpsb
in
sub
mov
cmp
stos
and
or
jb
movsb
aas
mov
and
imul
dec
xchg
sahf
rorl
cmc
sbb
into
loopne
push
ja
jnp
xchg
inc
mov
movsl
adc
js
stos
aas
gs
dec
adc
scas
cmp
sub
loope
inc
add
cld
mov
push
lret
shrb
mov
mov
and
pushf
xchg
and
sbb
jb
loopne
insl
push
roll
and
rcr
ficoml
cmp
mov
jl
enter
mov
jb
jp
push
xchg
mov
xor
rolb
mov
push
and
sub
icebp
lea
outsb
cltd
mull
ljmp
mov
aam
pop
inc
push
dec
cmp
mov
popf
or
pusha
stc
mov
or
loop
cs
mov
cmpl
sub
lret
cld
lahf
pop
mov
mov
or
xchg
cmp
test
pop
push
insb
xor
mov
js
adc
inc
push
dec
mov
add
dec
les
xchg
in
mov
ret
pop
mov
mov
ss
xor
shlb
lret
xor
xor
lahf
mov
stos
addr16
cmp
cld
push
les
sub
adc
lea
out
mov
repnz
rolb
jp
test
ljmp
push
lcall
in
push
imul
sti
lods
jnp
mov
out
or
ja
pop
push
bound
shrl
test
outsl
mov
popf
jp
sti
outsl
shll
push
lret
push
cmp
mov
push
test
orb
mov
inc
push
and
sbb
pop
sub
stos
sub
push
or
and
jg
mov
pusha
xchg
ffreep
mov
or
in
inc
daa
pop
cmpsl
je
inc
fwait
sahf
push
loope
imul
cs
mov
aas
xchg
adc
adc
int
jb
mov
je
adc
lock
pop
jp
mov
roll
iret
xor
mov
pop
adc
jns
sbb
cli
scas
test
lcall
incb
rclb
and
faddl
add
cli
sub
out
fimuls
cli
jle
negb
pop
dec
mov
inc
jecxz
js
dec
nop
dec
mov
add
pop
pop
pop
sub
jns
das
sti
push
call
cmp
xor
pcmpeqb
jb
jmp
fidivs
push
xchg
test
push
sbbb
mov
cmp
repnz
sarl
fildl
cmpsl
sbb
sub
adc
idiv
lret
and
mov
xchg
js
fistpl
pop
and
sbb
dec
or
jp
add
add
repz
ret
mov
add
stos
and
insb
push
divl
inc
adc
sub
dec
push
mov
lea
sti
bound
push
jp
and
std
scas
mov
dec
testl
lret
outsl
mov
xchg
cli
pusha
xchg
pop
outsb
call
lcall
popf
shll
add
jmp
fidivrl
xchg
sti
imul
push
push
pop
xor
das
push
adc
adc
fwait
lsl
in
pop
xor
mov
xor
xor
inc
pop
gs
lret
inc
and
xor
loope
fldcw
shr
popf
fdivrl
orb
mov
xchg
fwait
and
inc
inc
cmpsb
push
mov
mov
popf
or
dec
cmp
sbb
gs
idivl
sub
or
pop
and
and
xchg
scas
rorb
sub
xor
xchg
insb
add
jle
test
clc
pop
jae
jns
jo
movsb
out
cmc
sahf
or
cmpsl
movsl
out
loop
enter
lret
push
pop
xchg
jp
sub
stos
jb
xor
sub
test
fimuls
mov
pop
cmp
xchg
sub
pop
daa
pop
ss
call
decb
mov
daa
dec
xchg
data16
cmc
mov
push
mov
nop
shlb
shrb
in
sbb
pop
sahf
mov
push
cmp
push
xor
stc
jns
sbb
push
mov
movsb
ja
dec
xchg
xchg
pop
or
test
dec
imull
or
xchg
mov
iret
push
mov
add
hlt
popa
push
mov
stc
clc
inc
ja
mov
lret
lock
arpl
ret
pop
pop
fistl
repz
push
cs
testb
call
jnp
cld
cs
mov
lcall
jno
pushf
xchg
push
iret
cli
lods
dec
mov
insb
fiaddl
and
lahf
cmpsb
dec
imul
dec
push
add
jnp
cmp
scas
sbb
adc
pop
mov
pop
mov
aam
bound
mov
mov
lea
dec
out
mov
inc
imul
pushf
jmp
fldl
add
xlat
insb
loope
sbb
pop
add
pop
test
data16
shrl
outsl
lahf
pop
pop
inc
inc
popf
cld
push
or
mov
repz
add
lret
addr16
repz
adc
pop
inc
test
icebp
jg
add
cs
testl
cld
js
cltd
sub
lcall
mov
pop
jge
fmul
sbb
inc
pushf
jge
pop
xchg
mov
int3
xchg
xlat
outsl
mov
sbb
ljmp
pop
mov
or
sti
jb
out
sbb
sub
jmp
outsl
cmpsb
movsl
subb
aad
or
movsl
test
imul
mov
dec
lods
cs
fldenv
push
mov
inc
xor
pop
aam
add
inc
inc
jg
sbbl
cltd
cmc
fisubrl
sub
push
or
imul
mov
decl
push
jo
icebp
pusha
outsb
or
sbb
jbe
push
int
jb
lret
test
inc
adc
mov
inc
movsb
sbb
adc
inc
sub
scas
or
inc
stos
jge
mulb
push
jns
icebp
push
add
xacquire
fsubr
iret
jbe
addr16
js
sub
dec
ja
fmuls
divl
adc
adc
mov
xor
lret
movl
les
stos
push
push
ja
inc
adc
dec
pop
and
cmc
inc
shlb
fwait
cltd
jbe
dec
andl
inc
sub
pop
pop
inc
scas
ret
in
or
sahf
ficoms
movsl
add
notb
inc
dec
push
jl
jmp
pop
push
outsl
jbe
and
ficompl
in
cmp
mov
adc
adcb
ret
das
xchg
mov
mov
pop
in
sbb
or
dec
sbb
test
lds
sbb
xor
call
imul
imul
mov
sub
ljmp
enter
sub
cmp
ret
movsb
fidivrs
subb
mov
gs
lock
jp
pushf
inc
mov
lds
mov
ja
pop
in
pop
test
push
pop
mov
fld
xor
test
cmp
loopne
in
ss
gs
xor
out
or
loopne
inc
inc
hlt
lcall
sub
jae
loop
lahf
roll
stos
repnz
add
lea
sbb
mov
pop
mov
add
push
incb
cmp
pop
inc
sub
push
ja
hlt
jns
clc
sub
mov
jns
mov
xchg
adc
xchg
popa
mov
xchg
add
int
pop
lahf
push
shll
xlat
add
add
in
call
ret
sbb
jbe
add
inc
loope
adc
call
dec
jnp
push
jns
fwait
pop
and
loopne
sti
push
aas
jo
mov
mov
leave
lret
and
rolb
cmpsb
sub
mov
inc
icebp
stos
push
mov
push
movsb
daa
lret
add
mov
int
leave
xor
push
pop
aaa
jo
test
dec
mov
rorb
dec
stc
pushf
js
xchg
xchg
fs
in
gs
xchg
mov
stos
in
jae
add
clc
outsb
ja
inc
sarb
mov
dec
xlat
mov
out
push
cli
mov
ja
dec
movsb
mov
ss
dec
mov
pop
jecxz
adc
dec
imul
xchg
or
jmp
lcall
in
daa
jns
ja
fnstsw
insl
test
outsb
rcrl
xor
inc
xor
mov
sbb
addr16
movl
mov
fdivrl
es
dec
lods
shlb
inc
in
and
lods
adc
rol
xor
push
xchg
loop
hlt
pop
pop
and
mov
fwait
push
aaa
loope
xor
lea
movsb
sbb
rolb
ffreep
and
aas
pop
dec
in
mov
scas
repz
jmp
iret
jl
addl
nop
mov
pusha
cmp
inc
les
iret
push
lea
scas
fwait
lea
pushf
add
fimull
or
mov
jnp
sbb
aas
mov
rorl
or
dec
mov
loope
ljmp
or
loope
sub
test
aad
fiaddl
movsb
hlt
push
loope
std
mov
inc
ljmp
dec
xor
inc
inc
aad
insb
iret
jmp
jmp
mov
aaa
inc
cs
stos
pusha
jnp
sub
mov
testl
arpl
cli
or
push
cmp
fmuls
leave
xchg
adc
lret
push
je
jns
dec
inc
xlat
outsl
mov
movsb
push
movsl
std
push
or
mov
xor
aaa
dec
jb
out
and
pop
xor
test
push
mov
sub
jecxz
imul
pop
push
daa
inc
add
lock
gs
dec
sub
das
test
call
mov
cmp
push
ficoml
in
sub
outsb
lahf
jae
cmc
push
or
inc
push
int
popf
inc
jp
in
adc
lcall
js
movsl
add
adc
jl
inc
daa
adc
pop
jmp
iret
shl
mov
jmp
xor
inc
mov
add
movsl
lret
aad
mov
xchg
xchg
les
and
jno
ljmp
cmp
sbb
xor
popa
cmpsl
sar
cmpsl
mov
xchg
out
fistpll
popf
aam
xchg
mov
into
cmp
addl
sbb
icebp
stos
cltd
js
pop
rorb
stos
mov
lods
sbb
adc
int
xchg
jnp
ficomps
jmp
popf
sbb
push
mulb
adc
sti
mov
sub
xchg
add
pop
cwtl
pop
mov
or
mov
hlt
ja
mov
aas
jge
pop
lds
jp
fs
mov
xchg
sbb
jnp
aad
sbb
mov
cmpsl
dec
push
outsb
repnz
popf
sub
icebp
mov
aaa
inc
inc
jbe
push
fs
dec
setbe
subb
add
in
mov
mov
adc
xchg
rolb
xchg
out
xor
mov
mov
cmp
lahf
fdivs
sti
or
mov
push
lcall
lea
mov
xchg
inc
sub
mov
dec
pop
adc
push
jg
daa
roll
sub
mov
add
or
pop
out
daa
xor
sbb
sub
xorl
lods
adc
out
add
rcll
std
xor
jp
xor
icebp
fs
xchg
xchg
push
xor
and
push
shll
scas
jns
mov
cli
adcb
xor
mov
sbb
adc
rolb
add
repz
jno
out
loopne
xchg
xchg
xor
movsl
cmc
sub
lret
aaa
mov
lret
enterw
pop
mov
enter
repz
xor
jmp
dec
mov
push
push
shl
mov
stc
inc
jns
jg
sub
adc
sub
sub
mov
mov
dec
testb
aaa
or
arpl
push
inc
data16
addr16
jp
sub
pop
adc
inc
int3
pop
inc
or
jo
mov
int
sbb
cmp
cmp
adc
add
mov
filds
dec
insl
xchg
lock
imul
clc
add
push
lret
mov
ret
fwait
mov
stos
mov
jmp
call
or
adc
pop
aas
das
or
or
push
shrl
jb
fcoms
enter
rorb
mov
jl
push
rcrb
inc
cli
and
and
push
insl
pop
and
jnp
hlt
popf
jg
leave
push
push
mov
xchg
in
pop
lea
lret
inc
cltd
add
and
shlb
outsb
ja
rorb
dec
or
jae
inc
dec
adc
aam
scas
outsb
das
loope
mov
or
jle
add
rorl
lea
in
add
jb
icebp
enter
jmp
inc
inc
shrl
ja
jno
popf
pop
repz
dec
pushf
cs
mov
cld
add
add
lods
xchg
cmpsb
push
lcall
test
push
pushf
inc
and
lods
push
cmp
pop
and
sti
fistps
in
push
or
lea
outsb
iret
hlt
push
test
jge
int
adc
pop
jbe
std
in
xchg
lds
mov
repz
jg
pushf
mov
movl
repnz
push
outsl
xor
es
xor
lret
pop
pop
dec
scas
and
jmp
xchg
and
mov
lea
push
or
mov
mov
mov
sub
in
popf
fbld
pop
jns
loopne
cmp
sub
mov
mov
xchg
lahf
pop
cmp
mov
cltd
mov
push
in
fmul
mov
mov
roll
pusha
mov
inc
fs
xchg
and
imul
inc
cltd
test
pop
pop
aaa
dec
pop
adcb
fiadds
rolb
push
jae
push
cmp
xchg
sub
daa
lds
hlt
movsl
mov
or
cmp
jae
xchg
add
inc
pop
xor
xchg
jle
daa
sar
sub
mov
arpl
aam
jl
push
xchg
add
mov
cmp
cltd
push
push
xchg
jb
mov
aam
ret
mov
sbb
xor
sbb
lock
aas
leave
cmp
int3
mov
sub
adc
or
std
inc
fucomp
lods
push
cmp
add
hlt
lret
push
lcall
daa
dec
mov
and
dec
or
pop
push
les
or
jns
mov
cmpsb
jnp
out
push
mov
add
loop
movsb
lods
push
int
lret
and
dec
xlat
dec
lcall
sbb
clc
outsb
popf
rorb
lret
aam
out
push
cmc
mov
inc
mov
fsubrs
cmpsb
sbb
and
and
lea
iret
jp
scas
clc
jno
dec
sbbb
adc
add
mov
test
xor
fists
pushf
adc
pusha
sbb
add
pop
dec
jne
pop
pop
sbb
cwtl
into
pop
imul
and
inc
sbb
lods
shrl
imul
fs
fstpl
mov
test
movsl
xorb
jecxz
jnp
xchg
pop
ja
fbld
popa
cld
mov
je
js
cs
ja
test
sbb
push
mov
or
fldl
mov
mov
popa
mul
jmp
ret
push
add
rol
xor
xchg
dec
xchg
push
lcall
mov
or
test
out
inc
mov
addr16
mov
add
fisttps
sti
cmp
das
mov
fiaddl
test
imul
and
scas
pop
test
xchg
jmpw
or
es
cmp
sarb
sub
rclb
sbb
iret
jmp
test
hlt
loopne
pop
mov
mov
insb
clc
js
stos
sub
mov
pop
fnsave
push
shrb
pop
cmpsb
outsl
scas
fidivrs
mov
xor
ficompl
xchg
cmp
add
aam
sti
mov
aaa
mov
jp
xchg
div
test
mov
dec
addr16
mov
jg
push
frstor
sub
push
xchg
mov
add
xor
jg
insb
arpl
lods
lcall
outsl
pop
jbe
out
push
divb
push
pslld
out
stos
sbb
cli
jne
lret
adc
shr
or
out
and
lods
xor
cmp
movsl
scas
mov
sub
es
nop
in
xchg
in
and
pop
mov
or
mov
jg
data16
pop
push
add
aad
imul
or
int3
cmp
inc
mov
mov
pusha
test
cmp
popf
xor
popf
mov
lds
lods
mov
lds
add
mov
dec
mov
jns
shll
rolb
in
std
aaa
shlb
mul
sub
mov
rep
dec
mov
test
dec
adc
adc
stos
jne
inc
sub
int3
shll
pop
popf
arpl
jg
jmp
push
jg
aaa
imul
adc
or
out
jo
mov
movb
js
iret
in
std
in
or
cmpsb
aaa
sbb
push
fwait
cwtl
mov
shlb
rorb
inc
push
adc
sarl
cld
cmc
push
imul
iret
into
fwait
push
add
add
jg
pop
add
jae
sbb
push
mov
inc
stos
popa
int3
add
add
fcompl
or
mov
pushf
cmp
inc
sbb
jbe
test
pop
sub
mov
jl
dec
subl
mov
outsb
mov
inc
inc
mov
lcall
leave
test
stos
icebp
jo
ljmp
push
pop
lcall
rol
pop
vmptrst
out
cs
rorl
or
mov
rcll
jp
sbb
xchg
cmp
int
and
adc
shlb
xor
mov
xor
loop
scas
leave
ljmp
jae
mov
xchg
lods
cs
sahf
dec
pusha
pop
sarb
popa
int3
pushf
adc
jb
sub
lods
movsb
mov
xor
or
shrd
call
ss
fmul
pop
sahf
mov
adc
mov
aas
cmp
sub
push
test
sbb
ljmp
xlat
rcrl
hlt
inc
jge
push
and
ds
and
push
rcll
or
outsb
jmp
mov
nop
and
push
mov
mov
loope,pt
stos
jno
push
xor
and
popa
out
pop
icebp
push
outsl
movsl
dec
arpl
xor
pop
out
clc
cli
cmp
stc
imul
scas
imul
push
cltd
aam
jecxz
dec
push
jns
inc
mov
mov
and
fucomi
cmp
es
cmova
pop
dec
icebp
rcrb
xchg
js
mov
ficomps
in
int3
stos
hlt
jbe
xor
and
adc
mov
add
add
pop
dec
in
xchg
icebp
cmp
lret
dec
lds
push
jae
idiv
leave
iret
das
jmp
adc
in
xchg
lcall
iret
fsubrs
mov
xchg
jo
xchg
add
push
push
or
movsb
std
arpl
mov
fmuls
aam
fs
dec
dec
nop
enter
mov
pop
std
adc
pop
rcrl
pop
adc
jb
ljmp
add
pop
sbb
mov
hlt
jnp
mov
out
jnp
icebp
pop
pop
adc
mov
shll
cmpsl
fldl
dec
aam
cmp
aas
insb
out
test
dec
hlt
sbb
xor
lret
or
incl
sbb
add
in
outsl
out
setne
sbb
lcall
jmp
nop
jp
inc
arpl
out
cltd
ror
iret
mov
or
mov
aas
inc
jl
jmp
mov
lahf
gs
in
cmpl
call
adc
inc
cmp
pop
mov
lret
lret
cmp
or
fimull
inc
push
cmp
cmc
es
inc
sbb
add
and
fnstcw
popf
jp
adc
add
xor
inc
lret
xlat
hlt
mov
xor
adc
fistpll
ss
lods
mov
shlb
adcb
sarl
push
push
sub
repnz
xchg
sub
hlt
js
jae
push
or
data16
cmp
mov
and
into
xchg
mov
xor
and
xchg
push
xchg
fwait
mov
push
cvtps2pi
pop
jno
in
pop
shl
and
mov
lods
pop
xchg
mov
stos
add
or
xor
leave
hlt
pop
sbb
por
mov
dec
adc
dec
out
ja
imul
mov
out
cmp
jp
fcoms
test
cmpsl
in
rolb
test
pop
sbb
dec
fnstenv
loopne
movsl
xor
fwait
xchg
add
jecxz
dec
sub
lods
icebp
cmp
pop
xchg
jg
xchg
push
fisttpll
lock
adc
cmp
cmpsl
or
mov
repnz
pop
hlt
add
das
imulb
pop
push
push
inc
aad
rcrb
push
push
mov
je
gs
xlat
mov
dec
movsb
lahf
adc
imul
cmp
imul
cld
and
or
fsub
push
icebp
mov
add
push
push
js
or
xor
mov
mov
fdivr
call
rorb
imul
push
adc
dec
divb
xor
jecxz
int3
jmp
aad
gs
sbb
sar
dec
and
add
sbb
jecxz
or
inc
repz
aas
push
test
arpl
jo
loop
insb
icebp
cmp
aas
mov
inc
mov
or
in
sub
sbb
test
jno
cmp
sti
or
sbb
xchg
adc
rcll
sbb
lock
inc
ret
dec
mov
adc
imul
jns
or
aaa
jl
add
pop
jl
gs
jns
pop
ja
mov
jno
lods
int3
imul
jnp
fsubrs
scas
cli
popa
push
mov
xchg
ret
andl
xchg
mov
mov
adc
movsb
lret
out
pop
add
add
and
cmp
repz
stos
cmc
add
addr16
in
fidivl
and
and
je
xchg
imul
mov
add
jo
add
subl
fcmovne
sbb
icebp
mov
movsl
test
iret
int3
sbb
pop
sti
xor
jecxz
fmull
jecxz
out
sbb
mov
lret
movsl
aad
lcall
add
xchg
inc
sarb
inc
adc
mov
pop
and
adc
ret
int
sbb
xchg
stos
dec
push
ds
jno
push
rcrl
test
lock
pushf
mov
cmp
cmp
popa
in
sahf
inc
sarl
imul
lea
aam
sub
repz
inc
addr16
and
push
ljmp
push
mov
or
add
xor
sub
iret
sahf
xor
mov
mov
fwait
dec
gs
and
popf
push
jecxz
fidivs
xchg
mov
mov
out
aad
push
push
outsb
aas
addb
dec
pushf
fdivl
dec
sub
mov
out
sub
lcall
mov
jle
ljmp
lret
xor
push
push
mov
popf
sbb
add
dec
push
jnp
outsl
pusha
iret
ficoml
pusha
xlat
pop
ja
mov
sub
adc
leave
sti
or
adc
les
ret
aas
sbb
inc
push
jg
iret
jg
lods
pop
outsb
data16
cwtl
lss
pop
cmp
pop
insb
push
fisttps
pop
data16
cmc
xor
orl
add
mov
enter
mov
aaa
call
jb
pand
xchg
mov
dec
inc
cwtl
push
xchg
bound
pop
cmp
push
cld
enter
xor
dec
mov
inc
pop
aam
mov
into
shl
or
cwtl
insl
js
jg
movsb
subl
xchg
cwtl
add
xchg
mov
imul
pop
or
xchg
and
insl
adc
call
adc
push
jae
stc
or
dec
dec
or
mov
sub
arpl
jno
inc
mov
jae
xor
aas
cld
aad
push
fsubr
daa
popa
adc
lret
mov
stos
das
ljmp
call
dec
rcrl
push
scas
in
jbe
push
ljmp
dec
les
mov
aaa
mov
stc
push
xor
scas
add
jb
sbb
shlb
or
xchg
jnp
jae
dec
xor
jg
jbe
adc
cmp
sbb
pushl
cmp
jmp
adc
pop
fsts
test
das
mov
clc
pop
scas
fisubrs
cmp
movlhps
sub
aas
push
xchg
xor
jae
inc
dec
xor
popf
xlat
push
pushf
mov
adc
test
jb
jmp
mov
stos
or
imul
sarl
mov
ret
fbld
mov
fisubl
adc
into
in
loope
lahf
inc
ficomps
mov
insb
mov
mov
pop
add
fnstenv
andb
xchg
mov
sub
sahf
add
and
cmpb
pop
pop
and
ficoms
in
and
cltd
or
int3
mov
add
aam
xor
jecxz
ds
xor
dec
xchg
sub
and
cs
imul
jb
xchg
mov
mov
andb
cmp
repnz
fistl
lret
cltd
insb
push
movsl
out
add
lret
mov
pop
sub
mov
jg
shrb
mov
ret
pop
and
dec
lods
cmp
fnsave
std
cmp
out
mov
mov
roll
sub
inc
lcall
outsb
cmp
pop
mov
lahf
mov
faddl
outsb
mulb
cwtl
sbb
icebp
pop
sub
pushf
mov
mov
ret
dec
sahf
mov
arpl
cmc
pop
cmp
fwait
inc
dec
jae
dec
sub
sahf
sbb
out
pop
repz
out
sub
cmp
inc
xchg
add
jae
lcall
push
dec
mov
fisttpll
aaa
mov
and
push
or
fildll
push
inc
sub
jp
test
xor
mov
mov
dec
pop
mov
mov
addr16
jl
fidivl
push
in
dec
jns
mov
lahf
push
pop
ret
xchg
call
sahf
icebp
dec
pop
xchg
cmp
pop
iret
test
push
in
cmp
mov
ror
mov
aaa
dec
enter
fs
pushf
mov
imul
out
sbb
loope
inc
movsb
les
out
pop
mov
out
sahf
pop
call
and
or
mov
sti
lock
mov
in
push
mov
or
iret
add
insb
dec
sub
sarb
add
jecxz
rorb
stc
mov
les
js
jg
jae
or
xchg
arpl
lret
movsl
lcall
int3
rol
loop
in
std
sub
xchg
mov
pop
int
mov
xor
mov
pusha
jns
mov
dec
dec
xchg
pusha
std
inc
lret
mov
mov
push
dec
mov
sub
pop
cmp
je
rclb
mov
xor
jb
mov
fs
clc
sbb
push
inc
daa
das
rcrb
lahf
pop
aaa
push
xor
jmp
mov
xor
dec
leave
cmp
movsb
mov
pop
adc
add
sub
fildll
xchg
aad
add
fsubr
outsl
imulb
and
adc
and
mov
in
dec
pop
mov
arpl
shlb
ljmp
decb
out
adc
int
hlt
sarl
inc
ficoms
int3
dec
dec
mov
xchg
test
xchg
jp
lea
and
xchg
mov
push
push
add
rcrl
stc
mov
dec
add
fwait
push
in
adcl
popa
mov
sbb
stc
call
inc
stos
movsl
out
ljmp
dec
sti
pop
sbb
daa
xor
imul
je
rol
cld
dec
mov
ret
or
adc
out
xchg
addr16
sub
adc
dec
mov
sbb
or
iret
push
loop
mov
xchg
sbb
sbb
adc
sub
in
adc
int3
jns
sar
pop
push
mov
cmp
scas
ljmp
in
xchg
dec
ret
into
je
es
lret
outsl
pop
outsl
cmp
pop
lcall
ret
push
push
test
inc
xlat
idiv
clc
xor
loope
ror
dec
fnstcw
mov
loope
and
adc
cmpsl
aam
mov
sbb
inc
push
sbb
cld
dec
test
lock
xchg
adc
cwtl
out
pop
pop
mov
adc
movl
add
repz
push
lea
sub
into
movsb
pushf
cmp
sbb
insb
pop
shlb
mov
cwtl
push
mov
push
push
mov
cs
js
adc
jg
mov
sub
shrb
fbstp
pop
das
ret
int
lcall
push
fsubs
sti
ss
jge
xchg
in
outsb
jnp
fcmovb
mov
in
dec
xchg
js
dec
mov
mov
scas
pop
jp
stos
fmull
mov
push
fsub
xor
stos
aam
or
push
pop
mov
push
cltd
aas
into
insb
pushf
lcall
jmp
popa
fistpl
pop
sub
add
dec
jg
ja
lds
jl
adc
inc
test
popf
or
imul
out
xor
sub
inc
mov
inc
push
lods
out
cmp
popa
popf
adc
fdivp
and
xor
ret
cmp
pop
js
cwtl
cmp
orl
inc
mov
pop
or
bnd
stos
ret
flds
xchg
scas
sub
dec
test
popa
in
jge
inc
fmuls
or
pop
add
cmpsl
arpl
jb
roll
jp
ret
pop
mov
inc
inc
xorl
int
adc
scas
push
and
push
stos
fistpl
mov
inc
aas
lods
stos
push
and
movsl
mov
rcll
add
pop
rorl
cmp
mov
xchg
fiaddl
xor
jne
push
rorl
in
inc
fisttpl
pop
pop
dec
je
xlat
cli
fnstsw
aas
into
add
jne
cmpsl
jmp
mov
leave
fcoml
mov
or
or
cmp
pop
adc
pop
inc
mov
adcb
std
cmp
jle
gs
cmp
sbb
lods
hlt
mov
int
pop
cltd
or
jo
imul
loope
xlat
and
cltd
jle
scas
je
insb
mov
adc
mov
aam
mov
int3
aad
lods
add
pop
popf
shl
cmc
mov
das
lods
outsb
or
test
jnp
or
adcl
ljmp
fwait
cmc
lahf
pushf
call
mov
inc
mov
test
stos
loop
mov
adc
mov
fisubrl
jno
adc
xchg
test
ret
mov
movsb
jae
xor
mov
and
jl
push
ret
mov
or
bound
jae
and
dec
xchg
call
leave
test
mov
inc
cmp
inc
into
pop
popa
sahf
push
lret
xchg
or
cmp
jbe
leave
mov
aaa
or
pop
insl
adc
jl
inc
xor
scas
push
push
loopne
xchg
mov
pop
push
es
xlat
insl
ret
data16
dec
fwait
addr16
or
cmpsb
inc
aaa
lcall
adc
test
aaa
push
leave
insl
call
dec
rcll
mov
mov
sub
out
fisubs
jl
andb
and
js
inc
sti
movsl
cmp
notl
clc
jl
pusha
sub
or
xor
jmp
push
cli
loop
adc
xchg
in
inc
outsb
movsl
mov
lret
mov
mov
push
dec
in
xchg
mov
adc
ror
out
lock
loopne
fnstsw
lcall
loopne
xor
inc
movsb
xchg
sbb
into
sbbl
cwtl
fs
xchg
test
jecxz
lret
push
pop
test
push
pop
mov
inc
sub
mov
arpl
sbb
adc
in
sub
mov
jae
mov
inc
nop
icebp
insb
sbb
ljmp
sti
xorl
fsubrs
icebp
lods
stos
pop
loopnew
pop
test
mov
dec
jns
fwait
lods
pusha
mov
shr
hlt
jae
mov
fsubrl
out
lret
std
inc
adc
inc
js
jmp
push
ficoms
data16
inc
add
roll
enter
push
adc
sbb
shlb
lret
mov
adc
jns
xchg
sti
test
roll
and
call
cld
dec
sahf
stos
sub
lret
dec
in
inc
add
inc
add
je
inc
jl
push
dec
insb
and
les
mov
xor
in
mov
in
xor
cld
mov
dec
shl
pop
mov
rol
sbb
jle
dec
dec
cmpsl
mov
sarl
lcall
add
out
outsb
scas
mov
test
sub
std
inc
cmp
or
and
repz
popa
inc
jbe
push
jno
je
ds
test
sbbb
xchg
loopne
out
and
mov
adc
push
jg
rcr
test
jg
je
sub
mov
out
mov
sub
xchg
cmp
and
cld
jmp
jmp
loop
dec
push
fisttpl
xchg
es
push
push
add
arpl
into
ds
inc
push
and
pop
bound
jns
faddl
out
mov
xor
int
shrb
bound
ljmp
scas
dec
das
push
and
mov
jge
cmp
lret
jp
addr16
in
into
notl
xor
scas
mov
rolb
cwtl
or
adc
lods
popa
je
clc
mov
xchg
data16
sbb
dec
leave
mov
mov
and
aas
sub
fs
arpl
imul
xor
dec
fsub
jecxz
fwait
in
adc
mov
jg
dec
and
jecxz
fwait
fs
mov
pop
jb
popf
bound
jne
jg
aaa
mov
dec
ja
imul
mov
jp
stos
das
scas
pop
inc
cmp
sbb
sbb
in
jg
test
cmp
jns
xchg
sahf
out
enter
test
cmp
pusha
pop
scas
or
es
stos
inc
sbb
dec
jo
xchg
xchg
mul
adc
cmp
test
sar
mov
aaa
lds
push
xor
popf
inc
mov
int
adc
fs
inc
cli
orb
jo
dec
gs
nop
mov
shll
imul
dec
test
sbb
fidivl
ss
nop
xor
jno
ret
mov
insl
lods
pop
ret
pop
cmp
mov
aad
xor
add
repnz
ss
push
push
imul
pusha
movsl
fdivs
dec
aam
cmp
pop
and
add
mov
scas
out
shrl
cmp
shll
dec
mov
adc
mov
jmp
cmp
jmp
mov
insb
lock
cmp
adc
cmp
sbb
cmpsl
mov
mov
push
pushf
lods
dec
jb
aaa
insl
rcrl
xor
sbb
or
mov
lret
outsb
pop
arpl
add
push
cs
psubusb
nop
bnd
jmp
lret
mov
fsubs
in
mov
push
jae
push
push
pushf
cs
into
pop
lods
push
push
inc
mov
cwtl
in
mov
jp
or
jle
clc
xor
mov
xchg
adc
lret
cmp
and
xor
and
pop
clc
xor
fs
dec
mov
jno
stos
mov
lcall
in
ret
scas
mov
jo
pop
jl
mov
adc
add
cmp
cmpsb
ss
call
sti
adc
sbb
and
inc
adc
cli
lds
inc
jp
cmp
xchg
mov
rolb
fbld
mov
pop
out
sti
cmpsl
pop
sub
loop
test
push
mov
test
sahf
sti
lods
or
jnp
push
jp
sub
jmp
push
mov
xor
cltd
jl
jmp
ds
fsubp
mov
decb
jl
sub
repnz
lods
inc
sbb
sbb
jb
xor
push
sub
fidivl
sbb
cltd
scas
mov
dec
sbb
cld
jmp
fwait
fs
rorl
insl
addr16
or
cli
test
pop
sbb
mov
lretw
or
dec
imul
sub
pop
mov
cmpsb
sub
mov
das
and
fwait
sbb
mov
sub
adc
gs
xor
mov
aad
daa
mov
xchg
jae
loope
or
jns
movsb
inc
dec
daa
sbb
dec
jp
test
aam
jno
push
push
shl
popf
insb
xor
lret
sbb
pop
out
rcrl
inc
test
or
jp
xchg
pop
or
cmp
in
sahf
push
test
or
mov
cmp
adc
jge
gs
push
mulb
out
push
xor
push
push
inc
rorl
jbe
clc
mov
pop
or
adc
jmp
mov
subb
adc
cmpsb
or
pop
fwait
and
adc
dec
mov
stos
sbb
xchg
and
mov
sub
rcll
xchg
xor
sahf
clc
sub
pop
sub
ljmp
pop
ds
cmp
push
test
loop
jp
add
mov
je
pop
mov
push
push
rol
iret
shlb
test
jo
or
enter
add
jne
pop
jno
or
and
pop
dec
jno
neg
sbb
das
sahf
dec
cmp
cmp
jmp
or
cmp
daa
mov
add
and
pop
cmpsl
sbb
call
loopne
lret
sbb
arpl
dec
mov
pop
faddp
stc
lcall
clc
add
clc
in
push
sahf
add
out
push
mov
lods
movsl
rorb
mov
or
in
jp
addr16
mov
imul
mov
and
jnp
dec
cld
rol
in
cmpsl
mov
adc
jge
push
gs
cld
roll
mov
pop
scas
rcl
or
cmp
data16
lret
dec
add
cmp
add
push
and
inc
in
in
xor
pop
mov
sbb
popa
dec
scas
mov
lret
enter
mov
hlt
xor
jge
in
loope
cmpl
cmpsb
daa
repnz
sbb
sub
popf
sub
or
enter
sub
adc
xchg
jmp
adc
or
pop
sub
xchg
mov
lods
sub
inc
cld
popa
sbb
mov
push
les
lret
add
mov
cmpsl
scas
pop
daa
push
xor
inc
sub
shlb
fnstenv
les
jne
inc
rcll
lods
stc
aas
push
push
pop
mov
xchg
cltd
pop
fnstenv
arpl
sub
xlat
push
roll
pusha
icebp
xchg
push
sahf
stos
out
xchg
cmp
std
test
sti
mov
shlb
sbb
ja
ds
cmc
cld
pop
pop
sarl
xor
cmp
inc
cli
mov
push
out
mov
jge
enter
mov
lods
bound
mov
jl
add
testl
push
push
pop
inc
adc
cld
adc
popf
int3
dec
xchg
pop
jne
xchg
xlat
ret
shlb
mov
in
outsb
negb
call
xchg
test
test
clc
aam
xchg
pop
aad
sbb
fwait
test
and
mov
rcrl
xchg
push
enter
enter
mov
fdivs
dec
mov
das
outsb
mov
push
mov
add
pushf
mov
fstl
icebp
xor
pop
mov
xor
dec
imul
adc
xchg
adc
adc
mov
incl
and
mov
push
daa
loope
rcrl
fdivl
jl
and
aas
loope
clc
rcrl
cmp
in
mov
lret
int
ja
xor
inc
lcall
and
sbb
cmp
cmp
adc
push
jp
mov
pop
fstps
in
inc
pop
jg
or
xor
mov
ja
hlt
subl
call
cmp
imul
insl
jns
test
push
ret
out
jb
sar
cmp
faddl
into
adc
dec
rcr
int
gs
aad
and
push
std
imul
push
lcall
cmp
outsl
mov
jp
mov
pop
add
loope
sbbb
mov
hlt
lret
mov
outsb
outsb
sbb
rcll
imul
and
clc
mov
cmp
lods
xor
inc
or
rcll
pop
mov
out
pushf
push
and
dec
mov
push
inc
int
inc
inc
dec
dec
les
lea
test
xlat
pop
push
adc
mov
fisubrs
lods
repz
in
sahf
xchg
lahf
cmc
sub
jge
dec
int3
es
jmp
fistpl
test
push
adc
cs
mov
ret
and
xor
xor
adc
inc
pusha
lret
dec
stos
gs
jg
lret
dec
sahf
ds
jno
and
imul
push
popa
inc
xchg
test
mov
or
jge
mov
mov
push
jae
daa
in
pusha
dec
push
inc
shlb
lret
mov
cmc
ret
outsl
inc
les
test
movsb
mov
pusha
xchg
out
pop
xlat
push
iret
cmp
sub
push
xor
test
inc
xchg
pop
or
lods
mov
sub
dec
inc
jns
mov
es
sbb
xchg
xchg
sbb
clc
jmp
outsl
sub
sbb
jbe
in
lock
cmp
inc
icebp
fadds
mov
aas
pop
inc
and
jne
repnz
pop
lcall
adc
scas
inc
mov
cmp
insl
out
and
fsubrs
fbld
pop
xor
aad
je
inc
sub
int
mov
push
and
scas
cmp
jne
adc
push
fucomi
nop
in
or
stos
enter
int3
mov
imul
mov
cwtl
mov
mov
dec
dec
or
cmp
dec
nop
data16
cwtl
fcomi
jno
or
scas
mov
mov
mov
lahf
fmulp
out
push
and
ja
push
cmp
mov
scas
sbb
movsb
xor
mov
cmp
cmp
fimuls
xor
dec
sub
fiaddl
roll
scas
sbb
cli
inc
push
cmovb
cmp
sbbb
fildll
fwait
pop
pop
xor
jbe
bound
mov
icebp
pusha
pushf
aaa
mov
sub
pop
mov
mov
or
stos
push
sti
movb
xchg
push
and
or
mov
xchg
lret
stos
fisttpll
repnz
mov
pop
fidivrs
cmc
xchg
mov
call
mov
ret
dec
xor
xor
jg
adc
rorb
leave
dec
int
loopne
scas
add
jecxz
dec
sbb
mov
mov
lcall
mov
adc
rolb
pop
sub
pop
jge
loop
xchg
mov
mov
jne
les
mov
jg
out
dec
jl
jnp
inc
out
and
sub
push
add
in
cmp
sub
mov
ds
popl
lahf
jo
adc
mov
pushf
mov
jl
lea
and
sub
xchg
data16
mov
int
push
out
sbb
dec
jb
cltd
xor
or
insb
cmp
std
lret
scas
cmp
aam
sbb
xor
or
cmp
dec
cmc
inc
loopne
movsl
and
cmp
add
into
mov
add
mov
sbb
cltd
mov
inc
insb
das
xor
jle
mov
ss
xor
cmp
jnp
mov
pop
xchg
test
cli
jg
sbb
xlat
test
sarl
pop
and
push
cmp
loop
outsb
sub
pop
xchg
mov
mov
mov
sbb
lret
lret
xchg
or
int
addr16
decl
fsubr
adc
clc
jl
imul
ror
mov
sub
leave
cld
add
jo
jge
cmp
fimuls
or
pop
mov
push
scas
and
cltd
cmpb
rcrb
leave
jle
or
mov
pop
inc
sub
scas
sbb
in
outsb
sub
push
cmp
roll
cmp
shrl
ficompl
data16
cmp
aad
outsb
loopne
lret
and
dec
inc
pop
daa
dec
sbb
or
lahf
adcb
es
adc
test
sub
shll
out
stc
cmp
insb
push
dec
out
fidivl
push
testl
movsb
mov
pop
ss
dec
cld
mov
sub
in
pusha
shr
into
fwait
scas
xchg
js
pop
mov
rcll
cld
pop
xor
and
sbbl
aam
shrl
jmp
out
mov
stc
test
mov
mul
push
inc
jne
hlt
and
xorl
movsl
mov
mov
or
cltd
movsb
jae
fistl
loop
jns
outsb
dec
and
in
mov
mov
ret
shrb
jle
testb
scas
mov
inc
sahf
xchg
call
pop
jbe
inc
adc
ret
adc
mov
push
xor
fwait
stos
sub
and
push
ret
cld
in
mov
cltd
cmp
stos
jae
jp
imul
addr16
xchg
int3
adc
adc
mov
cli
mov
sbb
push
mov
test
and
hlt
bound
adc
pop
and
movsb
les
aam
fsub
push
pop
jp
mov
push
lock
pop
shr
mov
mov
sub
negb
mov
int3
shlb
cwtl
jbe
mov
xchg
cltd
mov
cs
dec
nop
rorl
push
add
ficoml
rcl
aaa
stos
mov
incl
xchg
shrl
fdivrs
pop
imul
add
add
aam
js
jmp
mov
adc
fdiv
add
xchg
mov
lret
pop
les
xchg
loope
adcb
data16
scas
adc
xor
jmp
cmp
dec
dec
sub
xchg
and
pop
xchg
inc
clc
mov
ret
in
jnp
outsl
shll
push
subl
or
push
lds
sbb
cmp
mov
movsb
jae
push
add
in
andb
push
cmc
adc
mov
ds
pop
and
xlat
test
cmp
pop
mov
loop,pn
mov
dec
and
lret
cmp
mov
test
hlt
add
loope
sti
pop
dec
mov
push
add
pop
dec
xor
dec
jmp
cli
push
cli
cltd
loope
out
jno
mov
les
sub
jmp
adc
ret
imul
imul
mov
pop
roll
and
jg
ja
sub
and
mov
adc
mov
or
cwtl
jecxz
xchg
fsubrs
pop
lock
test
jg
sub
jmp
pop
mov
sub
pop
or
cmp
incb
movl
sbb
out
adc
add
in
and
std
shl
sub
hlt
sbb
push
into
fldcw
cltd
or
cs
cltd
or
xchg
jge
dec
popa
js
test
stc
inc
mov
rolb
hlt
mov
out
jg
inc
adc
xchg
add
ss
add
sub
cmc
sbb
aaa
scas
dec
xchg
dec
stos
adc
sub
ret
pop
insb
pop
loopne
mov
cmpsb
sbb
push
fwait
stos
test
jge
lcall
andb
popf
cmp
data16
xor
inc
adc
adc
inc
lahf
mov
inc
inc
enter
jns
imul
xor
ror
pop
inc
xor
mov
sub
pop
xchg
dec
fwait
pop
and
mov
xchg
out
lret
sbb
ss
ror
push
lret
add
fwait
stos
sub
mov
es
mov
in
add
outsl
scas
sbb
adc
adc
int3
push
xor
ja
hlt
mov
into
idivb
dec
push
outsl
or
xchg
sbb
mov
repnz
push
repz
dec
mov
mov
lds
cltd
sub
minps
pop
aad
sub
mov
adcl
es
adc
outsb
lea
test
inc
push
push
iret
bound
mov
xor
ljmp
jecxz
or
jmp
push
aas
mov
mov
sub
dec
enter
jno
aam
sub
xchg
push
lods
enter
jne
sbb
js
ror
mov
test
sub
leave
shl
addr16
sbb
pop
cmc
pop
adc
insl
xchg
push
push
xchg
lret
xor
jmp
mov
stos
pop
mov
mov
add
cmc
sbb
fisubrl
lret
or
pop
fnstcw
jle
mov
cmpsb
sbb
xchg
mov
xchg
daa
dec
stos
out
sbb
xor
and
icebp
sub
aad
cmp
arpl
aaa
mov
pop
push
mov
out
add
andb
dec
js
adc
fcmovbe
test
push
or
jl
xor
int3
jmp
jns
js
clc
mov
pop
mov
inc
cld
pop
nop
aam
sbb
lahf
pop
push
or
mov
sbb
sbb
mov
pop
les
xor
bound
and
cltd
xor
dec
jbe
aad
fcompl
mov
cmp
dec
les
dec
icebp
pmaxub
add
jmp
xlat
jecxz
mov
mov
mov
insb
xchg
inc
inc
sub
jl
pushf
ror
lea
mov
push
xchg
repz
out
jnp
sub
jns
lods
push
imul
movsb
inc
sub
adc
sub
fcmovnu
inc
les
cmp
sbb
xchg
pop
dec
pop
xchg
sub
push
out
lret
sahf
xor
push
xor
pop
pop
mov
xchg
dec
inc
lahf
jb
sbb
sbb
bound
xlat
in
push
cmp
xchg
or
mov
xchg
test
out
xor
push
mov
or
push
aam
in
inc
mov
push
sub
fcoms
fcomps
popf
dec
push
cmc
rorl
add
scas
rcll
loope
push
cmp
bound
xchg
sub
ja
or
sarb
push
pop
lods
inc
mov
push
jl
aad
fisubrs
push
adc
mov
cmp
insl
mov
lcall
mov
jne
mov
scas
and
incb
into
inc
cmpl
sub
orl
mov
ret
mov
subb
loope
dec
sbb
pop
jge
xor
pop
dec
inc
xchg
pop
mov
push
aas
xlat
loop
in
scas
movsl
js
adc
cmp
stos
push
mov
inc
jno
xor
sbb
mov
das
dec
jbe
insl
inc
ficoml
mov
shlb
jge
dec
xchg
subb
inc
mov
adcb
xchg
push
repnz
fcom
xchg
pop
add
xor
cwtl
enter
fdivs
mov
pushf
mov
mov
rcl
mov
or
add
data16
int
add
jnp
dec
arpl
cmp
insl
jmp
xor
or
scas
cmp
std
rcrb
xor
dec
imull
mov
xor
and
mul
xchg
out
mov
sbb
fldt
inc
pop
pop
scas
negl
jo
adc
aam
pop
mov
push
mov
insb
outsb
out
push
mov
fwait
leave
xor
add
adc
daa
pop
jns
and
xchg
jo
loop
xchg
dec
out
sub
insb
add
movsb
mov
addr16
add
jns
sub
cmpsb
cmp
xchg
hlt
sub
pop
xchg
movsl
add
stos
push
adc
lret
jmp
mov
test
movsl
sbb
push
idiv
paddusb
rclb
std
repz
aam
insl
insl
adc
fsubrs
sbb
fwait
jbe
push
movsl
sub
push
lods
mov
ficoml
push
sbb
inc
or
sbb
cmpsb
pop
data16
and
imul
xor
and
cmp
fldt
push
insl
push
push
mov
xchg
sub
rcrl
icebp
lret
push
mov
mov
mov
in
mov
sub
sub
sub
in
popf
sti
fcmovnb
mov
stc
jne
lret
hlt
mov
inc
movsl
inc
inc
dec
mov
mov
into
in
pop
push
and
push
pop
int3
mov
xchg
push
push
into
mov
jnp
punpcklwd
xchg
dec
rorw
push
xor
dec
mov
sub
jne
fmul
shll
jecxz
popa
lahf
sub
mov
push
xchg
mov
cvtps2pi
sbb
mov
push
jmp
repnz
push
out
sub
sub
xor
adc
inc
cmpsb
pop
and
push
add
inc
push
mov
adc
xchg
movsb
ljmp
push
push
inc
mov
aad
mov
add
push
pushl
sbb
inc
mov
sbb
cmp
roll
add
stos
xor
sub
or
jge
dec
push
ficompl
add
lods
pop
movsl
test
push
loopne
xor
in
stos
inc
add
loopne
cmpsl
fsts
les
pop
enter
aas
andb
jecxz
ja
ds
sub
mov
sarb
mov
xor
or
cmp
jnp
jb
rsqrtps
add
xor
out
repz
push
adc
fs
mov
div
inc
stos
jecxz
cli
mov
shlb
sub
repnz
sub
push
fstp
insl
xchg
and
push
bound
in
sbbl
cli
out
ret
fistpl
rorb
jg
dec
pop
inc
xchg
icebp
jnp
hlt
xor
push
mov
shlb
out
add
xchg
and
lds
mov
add
aaa
mov
js
fwait
xchg
push
dec
outsl
sub
stc
add
or
jmp
inc
jno
push
xor
sbb
pop
imul
repnz
ds
jae
jecxz
mov
insb
imul
rcrb
xlat
push
fimull
mov
add
in
out
and
jbe
jnp
xchg
mov
je
jae
lods
sbb
loope
data16
jp
or
sahf
sbb
adc
adc
mov
in
pop
jg
fcoml
ja
jbe
and
push
mov
pushf
dec
push
popf
lds
jne
pushf
adcb
or
add
push
jecxz
jnp
movb
pusha
test
sub
jne
lea
mov
in
pop
fcoml
cmpsl
jmp
mov
arpl
add
notb
lods
push
xchg
scas
xor
or
enter
xchg
cmc
push
cltd
sub
pushf
adcl
mov
xorb
lock
imul
pop
xchg
int3
and
lods
mov
xchg
inc
mov
jae
jecxz
dec
mov
jp
sbb
insl
fcmovnbe
dec
je
jl
popa
scas
imul
xchg
out
mov
xchg
shr
inc
pop
xor
enter
ret
mov
rcrb
adc
push
jbe
repnz
mov
jnp
cltd
adc
xchg
lods
lret
imul
add
adc
and
dec
push
add
push
and
mov
sub
int
out
lcall
sub
lds
mov
push
and
das
fidivl
xchg
sar
mov
repnz
and
sti
push
imul
or
icebp
sbb
loope
adc
inc
jp
in
pushf
pop
shlb
pop
ljmp
cmp
ss
add
push
mov
adc
jbe
or
sbb
dec
and
in
ljmp
jbe
adc
ljmp
adc
call
imul
sbb
outsl
sbb
nop
mov
aaa
ljmp
and
jnp
mov
aas
lods
loopne
adc
sbb
lret
or
mov
xchg
stos
dec
pop
xchg
jl
jmp
or
fsubrp
fadds
mov
outsl
popf
mov
add
pop
adc
pushf
inc
lds
mov
jle
inc
xor
roll
test
movzbl
add
hlt
rorb
popa
or
push
or
scas
sbb
lret
sbb
push
aaa
xlat
jno
push
adc
push
ret
into
je
cli
push
push
vphaddubq
shl
pop
mov
sbb
push
sub
adc
or
scas
cmp
push
push
in
inc
ret
imulb
roll
out
pop
mov
cmp
push
imul
repnz
data16
andl
xor
xchg
ficoml
pop
cmpsl
cmp
les
fmuls
lea
aad
popa
push
pop
lock
push
inc
ljmp
imul
cmpsb
stc
add
cwtl
or
repnz
dec
or
and
cs
inc
stos
rorb
sbb
pop
push
sbb
push
ficoml
out
loop
cwtl
imul
xchg
dec
push
inc
cmp
and
not
fimull
xor
push
jbe
pop
or
cmp
lret
aad
mul
jnp
adc
notb
jmp
dec
sbb
mov
jb
add
jecxz
jmp
mov
mov
popl
xor
and
subl
cld
stos
or
emms
test
sbb
push
push
jle
xchg
mov
lds
mov
and
loop
mov
xor
in
fnsave
xchg
loopne
shrl
popf
or
repz
fwait
add
adc
sub
push
mov
push
pop
mov
push
lds
stos
clc
jecxz
add
inc
jmp
insl
and
pop
loopne
dec
stc
pop
sti
negl
or
and
dec
sti
in
jns
pop
or
mov
stos
lret
add
lds
sub
lock
lods
push
xlat
sbb
sbb
rcll
ret
repnz
push
ss
inc
mov
sarb
adc
inc
jb
push
inc
mov
push
in
mov
sbb
jmp
jne
out
sbb
iret
test
loopne
test
aad
loope
and
add
mov
mov
mov
test
add
push
push
push
and
lds
jbe
push
scas
xchg
cmp
jbe
push
xchg
cmp
adc
int
sub
xor
mov
push
int3
inc
add
call
sbb
stc
inc
aam
inc
inc
out
fadd
cld
mov
movsl
icebp
and
sbb
mov
dec
mov
mov
jle
dec
popf
pusha
jle
add
adcb
or
adcl
jle
xchg
lea
je
xchg
arpl
pusha
add
dec
call
orl
cld
add
lds
bound
lock
leave
aas
gs
jg
sahf
fadds
cltd
into
call
lea
xchg
sub
xchg
mov
push
daa
push
aad
das
jp
jmp
xchg
lods
jecxz
sub
out
in
or
xor
xchg
test
imul
lock
jno
lahf
jns
sbb
push
addr16
cmpsl
xchg
insl
inc
rcll
and
leave
mov
jp
iret
dec
pop
push
mov
daa
sub
jge
cli
sti
mov
dec
push
mov
out
ds
dec
iret
pop
mov
or
add
mov
add
lret
push
push
rolb
sub
sti
mov
push
pop
push
scas
xlat
inc
out
push
jnp
inc
and
or
and
aas
push
cltd
xor
xchg
negl
add
push
cmp
and
or
mov
jb
xor
mov
insl
pop
adc
aaa
pop
inc
aad
cwtl
and
loop
outsb
inc
add
mov
xchg
sub
mov
sbb
mov
loopne
add
mov
leave
push
imul
jmp
loope
arpl
or
add
paddusb
dec
lret
int
dec
out
jae
fsubl
mov
cltd
adc
add
and
jle
loope
hlt
test
sub
outsb
jl
out
dec
xchg
adc
adcb
mov
dec
xchg
test
je
icebp
shrb
add
cs
and
ss
mov
dec
jns
cs
jmp
jbe
jbe
cmc
mov
xchg
pop
mov
xor
and
movsl
mov
dec
out
fcoml
pop
arpl
mov
xchg
les
divb
std
dec
int3
and
pop
repz
cltd
pop
mov
xor
xchg
sub
ret
jge
mov
sti
xchg
dec
push
add
or
outsb
movsb
mov
popa
mov
pop
inc
xor
es
fdiv
lods
or
pop
push
dec
cmp
lods
sub
jno
jecxz
jg
xchg
xchg
and
or
aad
pop
ds
cmp
dec
xchg
les
sbb
ljmp
pop
fisttpl
adc
ret
popf
cltd
addr16
dec
shlb
lods
clc
faddl
xchg
fmuls
dec
adc
adc
fs
mov
movsl
nop
shlb
jbe
dec
lods
xchg
mov
or
orb
xor
das
mov
xchg
jg
fsubr
push
mov
adc
loop
and
adc
js
icebp
add
sbb
adcl
pop
mov
pop
adc
ja
adc
divl
and
mov
test
lahf
mov
test
mov
outsb
clc
cld
xchg
xlat
fwait
imul
dec
mov
push
out
sub
adc
inc
mov
out
sbb
shll
sub
dec
in
or
cli
push
ret
mov
andl
push
jo
jno
and
ffreep
inc
aas
test
mov
movsl
stos
cli
and
pop
pushf
cmpsb
imul
xor
rorb
xchg
test
xlat
daa
lahf
and
insl
xor
sub
mul
cmp
xchg
int
jbe
sub
ret
stos
and
pushf
rorl
jmp
jl
jge
dec
dec
jp
iret
mov
insl
inc
xchg
add
decl
shr
sub
bound
and
imul
fadd
jge
pop
loopne
ljmp
xchg
adcb
js
adc
mov
mov
in
out
xchg
cwtl
xchg
cmp
into
push
sbb
in
jb
ljmp
out
cmpsb
lods
repz
popf
in
jecxz
cmp
cmpsl
push
adc
in
enter
test
mov
scas
mov
or
cmp
mov
faddl
pop
aam
loop
popf
in
sbb
jp
call
adc
insb
mov
add
cmp
push
xor
mov
lcall
fwait
xor
js
add
out
imul
sbb
push
pop
sbb
sub
pop
stos
sbb
hlt
data16
pop
xchg
movsl
ss
ljmp
loop
mov
cwtl
scas
ljmp
mov
fs
imul
xchg
cwtl
mov
mov
mov
imul
out
mov
ja
out
lea
sti
push
xchg
pop
mov
je
icebp
andb
lods
mov
ffree
ss
pusha
loop
push
int
sahf
cli
inc
je
sub
sbb
pop
or
dec
outsl
mov
sbb
shr
sub
pop
mov
lods
loopne,pt
lahf
repnz
mov
add
xlat
sub
jle
and
push
mov
inc
enter
out
mov
movsl
hlt
pop
pushl
popf
in
imul
sub
gs
js
xchg
push
mov
and
cmpsl
mov
insb
or
stc
popf
aas
adc
jle
pop
mov
push
xchg
call
aaa
ds
jp
clc
push
mov
fs
jo
pusha
fprem
lods
rcrl
jnp
cmpsl
jp
sub
daa
inc
nop
add
cmc
mov
add
popa
mov
gs
ja
push
lods
xor
push
and
test
jmp
testl
out
sbb
test
jns
cltd
adcl
scas
sbb
std
jl
cmp
outsb
jne
jae
jbe
xor
inc
dec
stos
mov
jecxz
cmp
xor
aas
rclb
cwtl
in
test
cld
roll
inc
adc
push
mov
scas
adc
jge
daa
inc
or
orb
pop
cmp
test
add
lods
int
vpshufhw
jp
imul
negb
pop
hlt
xor
das
pop
jno
pop
ja
jge
int
mov
clc
popf
jp
push
xchg
pop
dec
cmp
loopne
sub
cwtl
shlb
add
jo
sub
sbb
cmp
addr16
int
xchg
push
add
mov
pop
mov
xchg
dec
inc
xchg
lods
mov
in
fmul
andb
sbb
call
aad
jnp
xor
xchg
cs
mov
fsub
insl
xlat
and
jl
sub
add
jnp
push
push
movsb
pop
repz
pop
stos
cmpsl
lret
xorl
ret
daa
mov
xor
mov
and
cmp
and
sub
cwtl
lahf
push
xor
push
sub
jno
loop
fdivrl
xchg
sub
adc
sbb
lahf
and
xchg
jne
cmc
pop
sti
fucomp
mov
enter
divb
inc
mov
call
jmp
jmp
add
xchg
mov
stos
mov
adc
jb
fisttps
repnz
cmp
jnp
stos
jo
adc
xchg
jmp
mov
pop
sbb
xchg
aam
push
std
roll
lods
ja
pop
inc
aaa
sbb
mov
or
lcall
cltd
cltd
xchg
sub
sub
jl
jecxz
push
fmull
jle
fs
jmp
push
dec
sbb
aad
mov
je
inc
outsb
movsb
inc
jnp
cwtl
dec
pop
mov
fsubr
sub
cmp
in
gs
push
cmp
in
sub
mov
pop
xchg
dec
xor
std
lret
lds
fsin
jae
aas
mov
cmpl
enter
inc
rorb
pop
ret
jl
fsin
mov
xchg
popf
push
mov
sti
leave
push
icebp
pop
and
mov
das
xchg
mov
enter
pop
pop
stc
cld
lock
es
insl
sbb
popf
mov
ret
sar
pop
dec
pop
and
push
cmp
add
push
fs
bound
orb
xlat
mov
mov
mov
xchg
cmpsb
mov
lret
mov
xor
push
jl
out
push
pop
adc
sahf
xor
cmpsb
push
ret
lods
push
add
pop
xchg
mov
push
or
mov
cmp
fwait
movsb
insl
sub
rcr
inc
sbbb
and
pop
mov
mov
hlt
clc
lret
jmp
lea
fcmovu
dec
pop
push
fwait
aaa
xor
cmp
mov
mov
fbstp
inc
jns
or
lahf
jne
add
push
mov
pop
add
js
int3
jb
xor
mov
sbb
inc
mov
cld
cmp
adc
lcall
mov
lcall
jns
rcrl
sbb
test
stos
xchg
imul
sbb
pusha
and
push
fwait
ljmp
mov
or
jnp
imul
imul
mov
addr16
xor
dec
pop
clc
lods
idivl
insb
push
stos
push
xlat
mov
imul
or
sbb
notb
jle
adc
je
mov
add
inc
mov
mov
dec
adc
test
mov
adc
incb
mov
dec
insl
push
int3
jp
push
mov
xchg
jb
fwait
cmp
clc
jmp
cli
xor
out
fisubl
mov
outsb
sub
dec
pop
xor
cli
aam
roll
aas
icebp
and
imul
jle
add
cmp
hlt
xlat
cmpl
add
inc
lret
stos
pop
cwtl
fldcw
out
jmp
lret
test
xor
nop
sub
js
pop
repz
std
jbe
ljmp
mov
popa
daa
cmp
dec
std
loop
push
insl
cmp
jae
enter
fldenv
aam
mov
mov
push
daa
pop
ret
push
loope
loopne
rolb
call
xor
cmp
outsb
adc
cli
sub
pop
mov
ret
push
cmp
add
ljmp
in
xchg
enter
in
rol
jmp
add
lea
dec
cmpl
movsl
gs
xchg
sub
in
push
or
imul
das
out
mov
mov
jmp
stos
in
fnsave
mov
mov
lods
dec
add
repnz
add
adc
pushf
dec
mov
cvtps2pd
jns
dec
mov
jmp
decb
mov
push
aad
int3
mov
xchg
sbb
mov
in
jne
or
xchg
icebp
dec
add
test
aas
mov
icebp
or
adc
into
ja
scas
sti
mov
and
mov
test
inc
clc
out
adc
fnstcw
out
repnz
or
mov
push
jp
add
pusha
jl
dec
int3
sbb
fnstcw
pop
jge
and
add
mov
cmpsl
loopne
pop
pop
test
or
lods
mov
xor
pop
lret
shlb
pop
inc
push
pop
cmp
mov
pop
jbe
scas
push
out
cs
mov
cmp
ljmp
mov
mov
mov
jmp
add
mov
mov
sub
adc
stos
sbb
push
idiv
lods
cmpsb
int3
shr
push
lods
dec
pushf
xor
loope
int
cwtl
inc
das
xchg
fs
cmp
lahf
notl
inc
ds
sub
arpl
mov
inc
in
int
insl
push
mov
mov
shlb
sub
mov
cmp
es
inc
xor
dec
xor
leave
movsl
cmpsl
scas
aaa
out
and
fdiv
inc
mov
mov
outsl
insl
stos
push
pushl
addr16
aaa
movl
subb
in
pop
insb
mov
lods
mov
mov
and
mov
adc
test
filds
mov
ljmp
inc
push
shrl
pop
out
or
out
mov
mov
jp
dec
jbe
call
inc
test
mov
jge
mov
mov
cmpb
cltd
jo
mov
push
cmc
push
jno
pop
loop
test
cld
jne
insb
jge
arpl
scas
push
sti
and
jg
pop
fdivrs
push
inc
movsl
push
in
mov
fndisi(8087
sbb
scas
stos
sbb
repz
daa
test
out
mov
inc
gs
aad
adc
enter
xor
lcall
xor
test
dec
jbe
sub
enter
cltd
idivb
push
cld
inc
and
repnz
ja
push
aam
cmp
addr16
ret
lret
and
pop
scas
arpl
in
push
sbb
rclb
les
mov
xchg
shlb
xlat
orl
je
stos
les
cs
push
push
cmp
mov
imul
fmulp
or
xor
jo
sbbl
sub
das
adc
and
mov
mov
mov
in
add
sbb
xchg
jne
test
mov
into
js
in
inc
ja
add
je
loopne
jmp
xchg
mov
popf
add
loop
out
adc
ret
lods
clc
mov
jecxz
and
ret
test
pop
cltd
sbb
jb
fldl
add
loopne
aad
jle
cmpsl
add
jno
insb
hlt
sbb
sbb
hlt
cs
push
popa
je
rcr
pop
xor
mov
xchg
push
test
cs
fisubrl
lea
or
jp
mov
popa
movsb
aam
xchg
fs
popf
lret
cmpsb
inc
dec
xchg
inc
mov
insb
insl
test
adcl
xor
fucompp
lahf
popa
pusha
jp
push
xchg
stc
xchg
add
dec
aad
cmc
shlb
outsb
push
adc
aam
dec
jmp
cmp
lret
call
pop
faddl
rolb
ss
adc
pop
xchg
scas
and
mov
fldenv
push
dec
xlat
mov
add
add
enter
sub
std
frstor
sbb
push
hlt
call
aam
push
out
shlb
sahf
dec
insl
or
inc
adc
mov
mov
adc
inc
cmp
mov
outsl
out
mov
insl
test
lret
shrb
add
loopne
lret
lds
in
mov
shll
ja
mov
jle
outsl
ljmp
push
mov
adc
cs
adc
ds
enter
push
fidivs
push
adc
ss
sbb
fildl
pop
popf
out
mulb
leave
pop
xor
lret
pop
ljmp
in
and
dec
jno
mov
lret
adc
xchg
cli
or
mov
inc
int3
mov
push
jnp
mov
or
push
frstor
movb
fstl
out
jb
jb
add
in
mov
call
int3
in
add
jae
dec
xchg
repz
loop
out
push
sbb
jae
cmp
popa
aaa
xor
pop
in
sbb
xchg
adc
rclb
dec
mov
pushf
push
cmc
fdivrs
mov
addr16
or
add
jae
cmp
js
mov
pop
and
fistps
pushf
push
lods
aaa
imul
add
mov
data16
or
aam
mov
pop
push
jo
mov
xor
jbe
cmp
xor
jns
es
shr
xchg
movb
nop
push
sub
cltd
inc
cs
and
jl
movsb
and
or
lahf
repnz
add
xor
in
adc
outsb
fistl
popa
add
cld
into
add
sub
pushf
into
dec
and
or
lock
mov
jg
jne
xchg
pushf
imul
inc
xor
fsubrs
ds
pop
jmp
mov
mov
mov
adc
jno
test
jb
mov
popl
xor
xchg
shr
jmp
push
sbb
loop
out
jbe
adc
add
ds
fildll
xchg
fidivs
mov
xor
dec
movsb
mov
xor
xchg
sbb
cmp
in
push
adc
fnstsw
pop
dec
push
pop
pop
push
mov
sbb
fsubrl
aaa
iret
test
sub
pop
or
mov
rcrl
fcmovu
or
inc
inc
sub
or
scas
xor
mov
filds
ds
shr
add
sti
mov
arpl
roll
lock
xchg
jo
std
enter
cltd
cwtl
imul
into
jp
and
das
sbb
xchg
sbb
mov
clc
ds
push
jmp
lea
mov
adc
andb
movsb
xchg
shrb
loop
push
out
out
lahf
jmp
sub
call
call
mov
popa
mov
roll
cmp
mov
and
ss
push
test
cltd
cmp
mov
and
insl
test
addr16
jmp
push
push
push
lcall
mov
cmp
lahf
dec
dec
stc
and
mov
adc
les
cmp
push
mov
mov
leave
pop
jge
imull
in
aaa
xorb
ds
test
xor
push
rcr
orl
inc
mov
push
stc
lea
cmp
add
mov
shll
lods
mov
jae
sub
xchg
or
push
adc
jl
std
push
into
jmp
clc
sahf
add
lahf
adc
xchg
sbb
mov
cltd
and
mov
xchg
mov
enter
gs
loope
mov
fildl
xor
je,pt
and
fimull
in
add
js
scas
push
aaa
push
les
loope
xchg
and
or
push
aam
and
jge
mov
pop
cwtl
cwtl
jno
cltd
sub
push
add
hlt
sbb
cli
clc
jl
push
ss
or
fwait
sbb
lds
adc
cmc
in
inc
pusha
lods
mov
push
pop
sub
arpl
addl
add
data16
movsb
cmp
dec
in
sub
cltd
dec
mov
cmpl
mov
sub
xchg
xor
mov
sahf
pop
xchg
fisubrs
xor
js
jno
pushf
insb
mov
mov
or
addr16
mov
push
xchg
cli
loope
lahf
aaa
enter
adc
pop
push
lods
insl
cmpb
push
mov
jmp
pushf
mov
or
cmp
add
outsl
mov
xor
xor
fisubs
lods
adc
fwait
xor
stc
mov
icebp
lods
pop
rclb
pop
mov
rcrl
fsubrs
add
addr16
popa
pop
popf
mov
mov
and
roll
popf
pushf
or
sahf
cmp
cmp
int
int
aad
mov
sbb
inc
bound
je
shll
clc
cmpl
and
xchg
xor
addb
inc
inc
mov
and
and
mov
push
xchg
nop
fs
or
or
dec
call
push
mov
add
pop
dec
xlat
or
xor
addl
in
ret
jo
xor
and
sub
ljmp
leave
dec
mov
push
ja
push
mov
pop
pop
fmull
std
xchg
mov
push
inc
into
stos
arpl
in
adc
xor
jb
and
loopne
mov
rcll
dec
test
ss
imul
push
mov
xor
jae
jp
dec
sti
pop
test
mov
mov
pop
inc
adc
lret
movl
or
xlat
movsl
into
pop
incb
inc
mov
xlat
cmp
inc
xchg
push
insb
addl
cmp
xchg
sbbl
je
xchg
xor
scas
cmp
add
push
mov
cmp
out
adc
lods
out
sbb
ret
sub
imul
and
sbb
out
mov
inc
ljmp
jp
inc
aaa
jne
test
or
push
cmpb
repz
sti
add
sbb
lret
xor
xchg
cmp
sub
jmp
cmp
testl
testl
test
jno
jae
jns
mov
add
cmp
pusha
and
ret
dec
xchg
lret
cmp
fdivs
mov
xchg
outsb
cmpsb
pusha
in
mov
mull
mov
fiadds
mov
loope
sub
cmp
pop
sub
outsl
clc
dec
mov
xor
or
dec
sbb
pushf
sub
psrad
fcomip
rclb
add
lods
jo
fildll
mov
cld
push
mov
sbb
repz
sub
cltd
mov
adcl
lods
xor
loopne
mov
jmp
jne
pmaxub
outsb
mov
cmp
adc
dec
mov
mov
jns
xor
xor
lds
lock
push
xchg
pop
lret
int3
lock
js
inc
lret
jecxz
stc
popf
out
pop
outsb
or
testb
xchg
imul
repz
mulb
mov
jmp
cltd
sub
mov
call
mov
test
and
jns
cwtl
insb
scas
pop
aas
jbe
cmc
xchg
enter
sbb
imul
or
push
sti
fisubrs
cmp
pop
mov
mov
sbb
dec
cltd
mov
sub
loope
test
adc
sbb
jg
pushf
test
push
lods
int
xchg
jge
jbe
jmp
in
mov
inc
mov
fsubr
push
or
jbe
cmpsb
add
mov
inc
lret
mov
icebp
mov
and
and
dec
faddl
lret
sbb
mov
jp
push
push
mulb
adc
popf
sub
inc
mov
cmpl
cmpsl
and
je
out
roll
or
xchg
adc
mov
rorb
sbb
dec
mov
xor
xor
sbbb
pop
ds
adc
and
pop
push
jle
fwait
and
cs
or
pop
imul
adc
mov
inc
dec
jl
cmpb
pop
mov
aaa
inc
add
or
enter
pop
mov
pop
call
in
cltd
imul
imul
inc
mov
sti
add
mov
adc
sbb
xchg
dec
movsl
jne
mov
sub
jge
fimull
cmp
and
les
es
insl
fdivrs
jmp
dec
mov
add
xchg
lahf
subb
jmp
int
jmp
cmpb
es
fisubs
repnz
cltd
push
fildll
inc
in
add
jb
outsb
mov
fbld
lcall
rcll
push
outsl
push
jge
js
out
inc
jp
push
xchg
xchg
push
jle
cmp
dec
mov
pop
inc
pop
ret
fld
lret
ss
jp
repz
or
push
sbb
push
je
and
add
add
test
inc
imul
mov
cli
sub
rorb
aaa
sub
lret
pop
sub
xchg
mov
dec
cmp
call
jecxz
scas
xor
mov
xor
mov
gs
cmc
test
shrl
lods
mov
xchg
popf
xchg
sub
jnp
daa
cmc
mov
sub
decb
test
lar
add
lcall
inc
pop
mov
dec
xchg
aaa
cmpsl
arpl
inc
bound
dec
dec
shrb
and
cs
test
adc
sub
mov
test
dec
xchg
or
rcrb
movsb
mov
fsubs
cmp
mov
and
cwtl
cmpsb
out
inc
shll
sbb
mov
nop
push
lret
hlt
mov
rcrl
outsl
mov
shl
jl
jmp
in
inc
aas
lods
in
shl
or
mov
pop
push
push
xor
scas
push
sbb
scas
mov
loope
sub
popf
dec
xchg
cli
mov
mov
mov
and
add
rolb
jmp
add
lock
repz
hlt
mov
cmc
cmc
dec
xchg
loopne
adc
test
andb
sub
jecxz
jecxz
hlt
rcll
jbe
inc
cltd
xor
sbb
ret
stos
fsubs
outsb
mov
test
test
xor
mov
cmp
addr16
ds
sbb
imul
jns
mov
push
and
jae
fsubp
das
daa
aad
sub
mov
stos
mov
shl
cmpsl
mov
sbb
js
mov
cmc
iret
fwait
mov
pushf
popf
dec
sub
mov
shlb
int3
adc
in
loop
mov
add
sub
mov
into
jecxz
sbb
add
mov
or
fsubs
jmp
inc
mov
cld
mov
fcomip
adc
mov
pop
or
subl
sbbb
cmp
sub
call
pop
add
xor
jnp
mov
or
push
sti
lcall
lret
pop
jle
and
gs
imul
lret
rcl
lret
lret
push
jne
iret
pushf
xchg
cmc
inc
cmpsl
xchg
mov
in
into
sbb
ljmp
cmp
xor
sarl
cmc
push
add
sbb
lods
outsl
lods
imul
pop
fidivs
push
xchg
movsl
stos
inc
icebp
pop
jge
repnz
stc
adc
jmp
adc
mov
xorl
dec
cmc
add
cmovp
outsl
aam
jmp
test
adc
adc
enter
add
dec
das
jb
loopne
sbb
and
aas
icebp
aaa
xor
inc
push
testb
mov
les
shlb
int3
inc
sub
stos
lods
aas
adc
jg
fisubrs
sbbb
sahf
pusha
cmpsb
jg
nop
mov
or
jo
push
mov
mov
pop
outsb
stos
icebp
outsb
mov
arpl
pop
imul
test
repz
fistl
jp
jge
inc
sbb
std
cmp
cmc
mov
nop
fisttpll
push
fidivrs
inc
lahf
cld
aam
sub
out
shlb
fs
jmp
out
popa
stos
into
jecxz
imul
mov
out
jns
movsl
movsl
push
pop
ret
jmp
xchg
repnz
out
pop
jbe
or
js
loope
out
cmp
push
out
or
iret
push
lcall
add
mov
test
arpl
js,pn
call
into
loopne
repnz
cmp
mov
sarl
daa
cmp
icebp
mov
out
fwait
mov
sbb
rolb
rol
dec
cmpsb
jbe
mov
lea
sbb
shrl
pusha
jmp
add
mov
aaa
adc
aad
jmp
cmp
lods
addl
test
pushf
push
and
mov
adc
aas
test
outsb
push
jmp
lods
mov
jb
arpl
sarb
inc
incl
mov
xor
or
out
xor
push
adc
jg
out
jne
bound
jae
and
scas
popa
in
push
sbb
inc
inc
xor
jns
xchg
icebp
fsubrs
mov
lds
loopne
testl
fwait
repz
jnp
ret
punpcklwd
inc
stos
or
data16
mov
jb
or
fwait
cs
mov
sahf
mov
mov
ljmp
mov
je
popa
sub
push
jae
dec
loop
xlat
mov
aam
into
outsb
mov
xlat
lock
mov
loopne
add
gs
adc
dec
push
cmp
clc
pop
mov
add
jb
aad
popa
pop
movsb
push
push
ret
test
mov
loop
mov
push
mov
out
jo
enter
and
ret
fs
sbb
sbbb
aaa
dec
mov
xor
jp
push
sbb
jns
stos
repnz
leave
cmp
loopne
roll
or
aad
cmp
test
fbld
inc
sti
push
xor
mov
and
or
mov
stc
fidivrl
sub
dec
dec
inc
out
sbb
ficomps
mov
cmpsb
and
push
rclb
inc
call
push
int3
xor
or
sahf
cwtl
lock
call
ja
push
jp
or
pop
xchg
xor
push
jmp
shrb
sbb
dec
ret
pop
xchg
sub
popa
insl
cltd
call
adc
xor
sbb
aam
out
push
push
pop
subb
shl
cld
test
jb
adc
jle
icebp
xor
jle
add
int
cmp
das
outsl
into
lahf
cmp
les
jne
stos
dec
cmp
dec
call
lcall
lahf
ret
cli
orb
sub
jp
sub
sbb
xchg
aam
lcall
inc
cmpsl
divb
stos
pop
xor
sub
pusha
jbe
mov
lea
and
sahf
std
jnp
xlat
mov
hlt
loope
lods
cmp
and
hlt
adc
cltd
outsb
scas
cltd
rcll
lretw
iret
inc
sub
out
sbb
or
shl
fwait
xor
and
mov
cmpsl
or
mov
pusha
lock
or
and
sti
insl
das
mov
les
pusha
in
jne
pop
cmp
sbb
mov
xchg
push
sbb
mov
in
pop
pop
inc
xor
adc
ljmp
mov
push
inc
jecxz
mov
and
push
xchg
je
lock
imul
sub
and
inc
mov
dec
mov
cltd
ljmp
mov
movsl
stc
adc
das
inc
cmpsb
xchg
mov
xor
add
mov
jg
xchg
mov
push
std
mov
idivl
loop
cmpsl
dec
loopne
pusha
test
push
insl
add
mov
cmp
stos
add
aam
shrb
push
xchg
int
movsb
cld
or
fs
lcall
mov
pop
lods
lret
in
cmp
pop
xor
sbb
ja
pop
imul
iret
cld
cwtl
mov
int
xchg
pop
iret
and
and
sub
mov
mov
das
mov
mov
jae
dec
mov
or
testb
outsb
jge,pt
mov
jle
arpl
pusha
fs
inc
mov
mov
pop
stos
hlt
jae,pt
mov
push
jnp
push
and
xor
loop
dec
xchg
movsl
arpl
or
or
cltd
jp
scas
add
jg
mov
data16
ljmp
das
dec
in
out
and
cmp
stc
adc
sti
sbb
imul
push
leave
xor
popa
stos
mov
ret
add
and
imul
hlt
pop
lret
cmp
pop
add
mov
mov
adc
fmul
push
pop
inc
adcb
pop
cmpl
sar
inc
in
repnz
xchg
or
xor
jns
addr16
out
cmp
sbb
insl
push
jp
adc
mov
dec
cmp
mov
sub
mov
xchg
dec
stos
mov
or
pop
dec
scas
sbb
les
cld
mov
imul
xlat
jp
mov
lret
cmp
nop
fisttps
lds
or
and
lods
shrl
inc
js
or
sub
xor
gs
cmp
sbb
cmp
loopne
cmp
fs
outsl
in
jb
or
lock
mov
cmp
mov
jno
adc
js
sbb
je
push
adc
out
mov
out
in
adc
jae
add
popa
inc
movsl
adc
add
int3
int
es
faddl
data16
xor
jno
test
jo
sbb
popa
in
bound
fs
mov
bound
dec
fcompl
mov
mov
sbb
sbb
test
insl
mov
ret
jge
dec
xlat
imul
inc
sbb
or
inc
aad
in
push
fwait
pop
les
push
addr16
cmpsl
iret
cmp
mov
pop
daa
push
int
mov
pop
pop
push
hlt
sub
xor
stc
nop
xchg
ja
jns
lea
popf
mov
insl
ret
subb
push
push
test
inc
test
jne
scas
pop
xchg
scas
mov
imul
xlat
pop
mov
mov
sbb
inc
mov
std
enter
fwait
ja
fwait
dec
scas
mull
test
xor
mov
ficomps
mov
pop
enter
repz
in
or
shll
cld
sub
push
lds
test
popa
or
out
cmc
loopne
cmpsl
adc
jno
insl
pusha
les
pop
sub
adc
loopne
pop
cmpsb
fwait
adc
iret
iret
cmp
js
lret
add
mov
adc
cmp
mov
daa
pop
mov
hlt
ja
or
xor
out
push
xchg
mov
pop
inc
fcom
mov
rclb
mov
std
repz
fstl
xlat
inc
xor
pushf
in
sub
shll
stos
das
cmp
pushf
rcll
div
xchg
inc
test
jmp
adc
mov
sub
push
sbb
sbb
std
or
into
mov
pop
jg
mov
jo
lds
lods
lds
jp
mov
dec
jle
rcrl
xchg
out
xor
jns
sub
pop
sub
jo
mov
hlt
stc
imul
pop
pop
aad
in
pop
shrl
lods
cltd
shll
cltd
shrl
xor
pusha
and
arpl
lcall
inc
insb
xchg
dec
push
into
and
sbb
loope
aas
xor
push
mov
cmc
or
movsb
loope
mull
rcr
pop
les
add
inc
xchg
in
inc
mov
mov
dec
je
jo
test
inc
xchg
fidivrs
push
rcl
enter
lods
test
push
mov
shll
push
fs
int
insl
jbe
pop
lock
lcall
cmpsl
shlb
add
adc
loop
jae
jne
and
mov
mov
pop
mov
cli
push
mov
mov
mov
xchg
xchg
push
roll
push
std
psubusw
xor
loopne
pop
insb
sti
sub
dec
enter
mov
inc
pop
popa
in
cmp
addl
mov
jecxz
sbbl
lret
mov
mov
ret
xchg
cmp
xchg
jp
ja
sub
mov
push
sub
stc
outsl
test
xor
dec
jo
mov
pop
outsb
sub
or
cwtl
mov
outsb
adc
hlt
cmp
out
js
add
xlat
or
sbb
das
sahf
das
mov
cltd
sub
dec
int3
sbb
xchg
out
or
fiaddl
loopne
cmp
out
fnsave
or
mov
cli
cmp
mov
lcall
into
cwtl
pop
xchg
mov
mov
or
jp
mov
outsb
pushf
push
aaa
and
out
hlt
cs
out
lds
aaa
cmp
pop
outsb
jbe
insb
scas
mov
daa
mov
mov
sti
mov
sbb
cmp
gs
clc
sbb
and
scas
mov
fsubrs
sbb
insl
xorl
xchg
jl
rep
enter
insl
lea
shlb
jae
inc
pop
mov
add
jle
mov
push
shrl
mov
call
jbe
mov
jns
xor
faddl
fstpl
sbb
mov
mov
sarb
enter
rorl
in
xor
sub
dec
lods
int3
std
daa
dec
call
mov
outsl
xor
mov
mov
jae
sahf
in
xor
daa
push
jbe
aas
inc
insl
push
rol
js
sbb
popf
ja
rol
mov
dec
add
mov
stos
xor
lret
add
fwait
mov
dec
adc
cmp
stos
inc
cmpsb
lock
pop
les
aam
or
hlt
mov
roll
scas
mov
jne
sub
lods
shr
call
adc
and
jbe
xchg
push
mov
in
int3
arpl
fstpt
jno
scas
stos
scas
es
sbb
xor
jnp
lods
aad
cmp
pop
cmpb
insl
faddp
xchg
icebp
ret
xchg
xchg
sub
pushf
add
jle
push
sub
sub
xchg
in
mov
fucomi
or
pop
aas
jp
mov
stc
inc
leave
fsubrl
aaa
fcompl
mov
push
lods
jns
sahf
adc
loop
push
stc
sbb
xor
jnp
pop
enter
bound
out
hlt
repnz
xor
sbb
xor
adc
jp
inc
adc
mov
aaa
xchg
idivb
sbb
xor
inc
jmp
and
and
addr16
ja
inc
mov
xchg
outsl
xchg
and
cwtl
enter
js
push
jp
std
roll
mov
pop
leave
jle
in
hlt
shl
sarl
movsl
scas
cmp
movsl
data16
andl
lock
mov
shlb
lods
pushf
and
je
inc
rorl
mov
xchg
push
or
cli
adc
mov
hlt
and
incb
inc
cmp
ljmp
mov
iret
pop
gs
push
loopne
divps
sub
push
pop
jmp
dec
aam
shl
testb
adc
test
pop
stos
dec
pop
mov
vprotq
or
aas
add
arpl
add
push
leave
pop
jg
lods
leave
aas
push
xlat
xchg
into
dec
mov
stc
fisttpll
insb
jge
popf
shrl
cs
aas
push
sub
aaa
mov
add
xor
xor
mov
bound
ret
in
xchg
lea
push
xor
cmp
out
test
les
dec
jns
jl
cmpsb
jns
bound
and
mov
cmp
push
xchg
popf
mov
jle
mov
imul
xchg
ret
xor
mov
mov
or
lea
mov
les
jno
loop
mov
jne
fwait
sbb
jle
adc
in
outsl
imul
adcb
call
in
mov
out
fninit
adc
sbb
push
mov
fs
pushf
js
sub
and
call
loope
lds
pop
ds
adc
inc
ss
dec
push
into
jns
sub
rcrl
jno
xlat
insl
addr16
out
xchg
nop
test
dec
sbb
sbb
mov
mov
adc
xchg
jg
in
cmp
les
fwait
mov
or
lret
jmp
ja
jp
mov
scas
ror
or
sub
and
mov
sub
icebp
xchg
or
rolb
mov
fbld
push
add
shl
aad
inc
xchg
or
jmp
dec
lds
add
insb
js
cwtl
sti
rcrb
inc
test
push
dec
fists
or
jbe
cmp
fimull
pop
jbe
rcll
lods
cltd
lock
inc
sbb
adc
rclb
test
jae
dec
xchg
loopne
lock
jbe
fwait
stos
fcomi
cmpsb
pop
dec
sub
mov
xor
repz
jecxz
add
cmp
lods
mov
add
cmp
insl
decl
mov
and
jne
inc
push
outsl
dec
mov
iret
out
xor
jo
popf
pop
test
loop,pn
xlat
mov
jo
jge
pushf
cmpsb
push
insl
popa
cmpsl
icebp
pop
addr16
out
icebp
iret
xor
pop
test
mov
adc
and
xchg
in
xchg
in
ret
pop
or
fdivr
cmp
lea
jl
push
aam
mov
jb,pn
aas
xchg
leave
popa
pop
push
pusha
inc
test
sub
aaa
adc
mov
cmp
adcl
enter
fcmovnbe
lcall
shrb
xchg
mov
ret
adc
cmp
adcl
add
dec
adc
sti
in
stc
mov
fsubl
movsb
mov
mov
pop
inc
les
and
mov
out
mov
sbb
jnp
dec
push
aaa
cltd
pop
nop
iret
lcall
push
scas
lcall
adc
jge
cmp
lods
aam
jmp
sub
push
fldpi
js
mov
mov
add
fistl
push
dec
lods
xlat
lea
sbb
jo
sbb
lahf
xchg
test
jg
les
fcoml
mov
pop
mov
jp
push
xor
sub
icebp
mov
push
xor
jecxz
daa
add
js
sub
xchg
pushf
mov
cmpsl
push
out
jmp
jecxz
leave
div
jo
add
inc
outsb
imul
dec
add
pop
mov
mov
inc
push
hlt
shl
pop
inc
jno
das
cmp
por
rolb
mov
jle
jo
and
sbb
add
and
mov
test
mov
push
sbb
adc
dec
lcall
ret
pop
xlat
dec
xor
add
daa
mov
mov
xchg
pusha
int3
sub
jo
gs
cmp
lret
xchg
lret
cmc
incb
mov
insb
mov
or
or
lret
xchg
mov
mov
sub
and
jmp
fisttpl
inc
stos
js
sbb
arpl
imul
loope
in
mov
or
or
je
shrl
fistl
mov
push
xor
lock
loop
daa
push
add
addr16
jo
rcll
mov
and
ret
mov
inc
mov
scas
pop
test
jno
mov
and
fsubrl
jl
xchg
dec
xor
pop
push
and
inc
loop
mov
jnp
cwtl
mov
in
adc
fs
adc
insl
push
jg
cld
lea
dec
bound
mov
cld
loope
fimuls
adc
pop
in
aad
gs
sbb
dec
pushf
lret
pop
stc
jl
jno
enter
mov
cwtl
mov
mov
xor
cmp
add
insl
iretw
inc
mov
xchg
shrl
or
outsl
negb
stos
inc
jmp
jne
ljmp
fsubrl
cmp
popa
daa
add
add
sbb
xor
mov
cmp
lods
xor
pop
jns
ror
jns
or
add
jne
pop
lret
mov
outsl
je
mov
jno
ftst
rclb
fiadds
mov
push
adc
xor
sbb
cmp
jp
sbb
leave
test
imul
hlt
lcall
jmp
ljmp
pop
notb
repz
leave
lret
iret
pop
lods
adc
mov
mov
repz
mov
call
push
cwtl
push
or
cmp
and
push
ret
movsb
in
aaa
movsl
clc
and
mov
xchg
fxch
mov
ljmp
mov
loopw
jge
jne
lea
loope
dec
mov
jno
dec
iret
mov
out
adc
dec
mov
push
stc
das
jo
fs
ja
addr16
push
mov
jb
ljmp
pop
cmp
jecxz
xor
mov
adcb
test
fstpt
call
mov
fidivl
jnp
das
add
push
out
inc
jmp
aas
xor
sarb
bound
cltd
dec
adc
ljmp
push
dec
push
jns
sbb
push
push
jmp
jbe
jmp
dec
pop
xchg
mov
cmpsb
dec
cld
fisttpll
mov
imul
lahf
dec
cmp
nop
mov
jmp
icebp
in
xor
cld
jae
mov
jo
jmp
les
adc
jbe
cld
inc
sbb
xlat
jbe
lds
jg
dec
insb
sub
sub
pop
inc
mov
andb
aas
jbe
pop
and
pop
xchg
jl
sbb
mov
pop
inc
in
sbb
push
cwtl
inc
in
pop
pop
imul
outsl
jnp
out
sbb
out
mov
aam
outsl
std
test
cmp
xchg
bound
lods
not
pusha
fsubs
mov
xchg
add
or
nop
push
test
add
push
push
xchg
pop
lcall
shll
or
je
pop
fsubs
ds
setp
pop
xorl
add
mov
in
jecxz
test
xchg
xchg
fisubl
fcmove
xor
mov
mov
or
add
cmp
cmovnp
or
pushf
sbb
push
call
push
add
mov
aas
das
lds
mov
jae
pop
popf
jg
xchg
or
or
mov
push
push
insl
xor
adc
rorb
stos
or
sbb
shll
outsb
or
fbstp
ljmp
iret
mov
cli
lret
sub
push
lds
jecxz
movsb
movsl
cltd
jno
add
push
dec
ficoms
out
call
or
hlt
jne
add
in
mov
imul
into
mov
lcall
into
jg
mov
pusha
ja
xchg
fldpi
cmpsb
cmp
jp
jno
aam
hlt
lahf
lret
inc
aas
xchg
hlt
xchg
pop
mov
xchg
cmp
scas
sbb
and
mov
xchg
aaa
lret
in
push
mov
mov
jecxz
hlt
jmp
adc
clc
push
cmp
pop
mov
adc
lea
imul
stos
rorl
fists
aam
dec
and
mov
mov
push
pop
sub
mov
xchg
adc
inc
pop
fdivrs
dec
roll
push
add
out
xor
adc
jp
adc
negl
pop
out
dec
ja
add
push
sbb
mov
sub
addr16
mov
ret
and
das
jp
adc
jg
movsl
pop
dec
lock
jno
xor
jbe
jle
cmpsb
add
je
cmp
push
pop
insl
fbld
out
loop
ficoms
xor
cmpsb
sub
out
insl
xchg
adc
sub
pop
scas
dec
sub
add
fchs
ss
mov
push
aad
test
lret
jl
pop
mov
xor
mov
pop
add
and
mov
mov
cmp
clc
pusha
jmp
jle
sub
sub
daa
sub
sub
out
les
mov
pop
push
lods
inc
lret
mov
cmpsb
repnz
aad
leave
cmp
push
sbb
dec
nop
jne
out
outsl
xchg
add
jge
cmc
dec
fisttps
mov
sub
stc
mov
repz
adc
or
mov
leave
bound
ret
jne
ret
push
cmp
imul
nop
sub
push
lret
dec
das
subl
sahf
jne
or
and
out
scas
add
inc
clc
and
and
pop
inc
es
mov
lods
in
or
jl
xor
mov
cmc
shll
mov
neg
in
fisubrl
sbb
sbb
cmp
pop
bound
jl
int3
popf
mov
movsl
dec
cmpsl
arpl
insl
daa
mov
mov
dec
orb
mov
sahf
inc
jbe
mov
stc
ret
xchg
ja
adc
stos
cmp
or
jbe
jle
loop
mov
mov
arpl
fldcw
sub
gs
xlat
hlt
push
fiadds
in
cmp
lock
dec
fisttps
push
cltd
aas
sub
dec
inc
imul
gs
pushf
lcall
and
push
dec
inc
dec
and
cmp
mov
in
aam
insb
dec
inc
jae
shrb
and
shll
test
and
rcl
int3
push
mov
or
cmpsb
cmp
cs
mov
sti
insb
push
dec
out
pop
and
hlt
sub
push
fstl
or
shll
setge
jns
js
pop
push
fdiv
adc
mov
and
mov
hlt
mov
sbb
js
xchg
rcr
push
aam
stc
divl
push
push
mov
cmp
push
loopne
mov
stos
bound
adcb
pop
dec
mov
xlat
out
sub
movsl
push
add
popa
mov
push
cltd
sub
cltd
sbb
pop
push
push
stos
aad
push
push
loop
inc
or
ficomps
ljmp
dec
in
mov
xchg
ds
out
jmp
xchg
negb
and
sti
pop
and
xor
push
dec
stc
cmc
sub
pop
rcrb
push
xchg
inc
in
or
mov
cs
test
push
mov
and
pushf
adc
cmp
out
push
inc
bsr
lahf
cwtl
ljmp
repnz
fstps
mov
sbbl
test
xchg
sbb
sbb
in
insl
jne
imul
inc
adc
mov
scas
add
jmp
xchg
and
xchg
cmp
xchg
jg
jb
xor
jle
and
sbb
dec
loopne
stc
rolb
or
sbb
inc
jbe
pop
mov
push
push
ror
mov
mull
adc
enter
stos
fisubl
cmpb
mov
push
mov
cwtl
adc
and
lret
cmpsl
loopne
imul
nop
insl
sub
sub
sarl
sub
inc
fnstcw
xor
jmp
lcall
xchg
xchg
aaa
aas
push
js
and
push
inc
xchg
mov
mov
cwtl
and
lcall
stc
xchg
je
mov
push
cmp
popf
fldt
xchg
mov
pop
mov
adc
inc
jmp
mov
xor
in
sub
mov
dec
inc
pop
bound
jle
mov
mul
pop
and
lret
inc
int
mov
mov
mov
cmp
mov
adcl
sbb
add
inc
fldcw
mov
dec
mov
imul
stos
popf
cltd
and
dec
or
cmp
inc
jb
mov
sbb
cmp
push
js
sub
cmp
mov
mov
clc
push
mov
mulb
aad
popa
aad
xor
cmp
ret
clc
mov
incb
inc
mov
mov
or
xor
leave
mov
xchg
lods
sub
ja
lds
shll
stc
lods
adc
jns
mov
add
pop
jg
inc
dec
mov
movsb
sti
lea
loopne
outsb
int
lods
add
leave
fistl
pop
neg
cmc
ficoml
insl
lds
inc
mov
lods
std
stc
xor
jb
bound
jae
out
fistps
flds
cwtl
cmp
movsl
push
and
ja
popf
xor
lcall
jmp
adc
lret
orl
sub
jns
out
into
adc
bnd
mulb
test
mov
mov
sub
loopne
insl
scas
lock
cvtpi2ps
bound
cmp
pop
inc
ds
xchg
adc
inc
add
hlt
inc
fwait
lods
cmc
in
inc
stc
or
pop
add
shl
mov
icebp
cs
mov
push
lret
stos
lcall
mov
insb
mov
ret
iret
or
sbb
push
dec
shll
and
jp
push
push
fiadds
xlat
jmp
sbb
int3
lods
xor
mov
and
push
enter
pop
std
cmova
push
xchg
sahf
and
dec
mov
loop
mov
cli
mov
pushf
cmpsb
and
lret
push
mov
mov
lahf
insl
cmp
mov
mov
lahf
push
sub
or
push
ret
inc
stc
push
mov
and
pushf
loope
sbb
orb
xchg
ja
repz
lcall
sbb
mov
and
inc
jno
mov
push
pop
fcmovnu
divb
sub
inc
pop
imul
add
xor
idivl
or
daa
jno
pop
mov
pop
mov
in
call
cli
stos
jp
out
jmp
das
lea
pop
pop
jle
mov
mov
pop
mov
pop
xchg
ljmp
adc
leave
or
shlb
mov
and
lea
test
jns
es
into
lret
or
test
dec
fsubr
cmp
and
adc
jbe
popa
cmp
jne
repnz
xorl
jae
or
outsb
aaa
lods
and
or
je
sub
bound
and
ja
and
pop
and
cmpsb
and
dec
icebp
push
pop
sub
jmp
data16
dec
dec
test
xchg
jo
cmp
jmp
mov
mov
add
jp
ds
fisubs
movsb
pop
and
pusha
cmp
push
jg
pop
pop
pop
inc
pop
mov
testl
xchg
mov
jg
fidivl
push
rcr
push
sarb
jle
jnp
cmp
shrb
xchg
mov
mov
inc
xchg
jo
sarb
movsb
mov
out
fsubs
mov
sbb
or
outsl
hlt
pop
add
daa
aaa
pop
lcall
mov
cli
or
mov
test
cmp
mov
test
and
rorl
insl
mov
or
out
fsubl
in
test
inc
addr16
es
out
fs
or
incb
sbb
test
inc
dec
maxps
stos
rcll
pop
jp
or
and
pop
pop
inc
xchg
xchg
int3
mov
push
scas
popa
sahf
flds
cmp
and
movsb
and
in
or
dec
add
fldcw
xchg
mov
out
pop
add
xor
fisttps
push
pop
jb
jge
sbb
mov
enter
jb,pt
inc
into
mov
and
jbe
sub
mov
pop
fidivrl
loope
sbb
cld
mov
cmpsb
pop
push
scas
fildll
cli
daa
ret
out
mov
imul
push
lock
jp
out
sub
or
sbb
sub
sbb
xor
mov
enter
loope
loopne
cmpsl
stc
push
jne
mov
and
cmpl
jecxz
cld
or
mov
mov
lods
jp
daa
popf
add
sub
lods
jb
push
lods
jns
movsl
inc
and
dec
lret
xchg
scas
sub
icebp
pusha
or
sub
out
mov
popf
pop
pop
mov
sahf
add
sub
inc
mov
test
out
pusha
push
arpl
xchg
fstl
test
jle
arpl
in
enter
fwait
notb
cli
jge
invd
outsb
mov
jnp
xchg
cmp
jle
mov
cwtl
je
sub
mov
hlt
bound
mov
or
es
xchg
cmp
mov
add
mov
inc
xchg
out
fs
test
stos
sub
dec
dec
divb
xor
mov
out
lods
pop
cmpsb
mov
outsb
adc
aaa
sub
sbb
ja
out
leave
insb
jge
push
andl
in
push
mov
sahf
inc
rolb
inc
ljmp
pushf
movsb
mov
sbb
push
jecxz
inc
iret
bnd
sub
pop
incb
xor
cmpsl
or
inc
jne
lea
or
dec
jg
andl
and
mov
jns
push
sbb
movsl
mov
cmp
pop
ss
pop
push
and
add
ficoml
sahf
dec
sub
push
daa
popa
mov
cmpsb
xchg
fucomip
pop
push
bound
cmp
clc
dec
dec
jge
mov
decb
jecxz
push
cld
cwtl
dec
rcl
dec
pop
xchg
loopne
mov
mov
jp
test
pusha
dec
sarb
mov
xchg
inc
mov
in
pushf
mov
dec
xchg
mov
add
aam
cld
pop
cmp
pop
rorb
mov
inc
sub
movsl
mov
mov
repnz
mov
jne
and
cmpsl
icebp
push
cmp
and
or
or
pop
pop
pushf
jne
or
pusha
inc
and
push
loopne
adc
dec
cmp
fmuls
or
adc
mov
push
xchg
mov
shrb
lcall
jno
imul
rorb
lds
add
scas
sub
dec
push
outsb
cmpl
sub
out
fadds
add
mov
add
add
cmc
test
dec
add
hlt
and
push
jg
fwait
scas
inc
and
rorb
idivb
adc
jp
xor
les
push
mov
pop
inc
out
addb
sbb
cmp
iret
out
xchg
pop
adc
mov
jl
adc
rcl
mov
add
pop
lcall
js
pushf
mov
sbb
pop
mov
cltd
sbb
adc
daa
notb
arpl
xor
aad
mov
add
imul
in
std
jle
jecxz
rcrb
sub
jnp
mov
xchg
fiadds
xorl
jmp
pop
ja
imul
xchg
dec
fchs
mov
jg
lds
inc
lret
test
adc
mov
shl
and
add
mov
dec
xlat
shrb
jl
into
adc
push
mov
jne
mov
test
lret
jle
mov
cmp
jmp
adc
in
push
int3
adc
js
and
ret
jecxz
inc
call
push
xchg
push
xchg
mov
mov
dec
in
pop
andb
mov
jne
addr16
cmpsl
adc
add
fcmove
push
es
and
into
xchg
dec
aam
out
repnz
cld
mov
shll
mov
cmp
pop
call
pop
pop
rcrl
mov
repnz
scas
mov
pop
mov
daa
ret
mov
mov
lcall
aad
leave
imul
mov
sbb
and
unpckhps
jnp
dec
xlat
cs
mov
lcall
push
mov
and
mov
and
jge
jbe
jle
lret
stos
adc
add
mov
int
jl
push
call
shl
pop
mov
adc
mov
ret
mov
jecxz
bound
je
mov
ljmp
pop
test
xorl
cmp
sti
repnz
inc
pushf
xor
pop
es
add
pop
push
jae
adc
icebp
out
leave
adcb
pop
mov
roll
nop
addr16
repnz
gs
mov
or
mov
cmp
mov
into
inc
and
xchg
mov
rcl
mov
fbstp
into
xor
mov
xor
inc
push
xor
and
cmpsb
sub
xchg
movsl
jns
jnp
xor
mov
popa
sahf
push
shrl
fstpt
inc
in
rorb
mov
jnp
add
xchg
fcomps
sub
pop
inc
mov
or
cmp
adc
xchg
xor
mov
fmull
je
aad
movsl
dec
xor
mov
gs
leave
test
fmul
aas
mov
pop
sub
mov
sub
jno
call
ljmp
cli
add
mov
sub
push
push
adc
cmpsb
lods
ljmp
ds
push
je
aam
clc
addr16
mov
mov
stos
adc
imul
push
sub
aaa
fnsave
push
dec
xor
push
xchg
add
jle
notb
aas
cmp
or
add
mov
xchg
imull
in
mov
dec
lahf
xor
icebp
cmp
pop
arpl
push
push
push
pushf
addl
imul
sub
adc
fidivrl
and
push
add
jns
and
jp
addr16
sub
add
mov
jg
pop
dec
xchg
arpl
shll
inc
or
xchg
push
xor
xchg
hlt
add
jnp
add
ljmp
adcl
mov
std
jo
aas
sub
sbbl
ljmp
inc
sbb
leave
inc
xlat
je
sbb
lods
mov
shufps
std
inc
loopne
mov
add
mov
sub
jbe
mov
pop
rclb
ret
and
cwtl
cltd
insl
pop
xchg
lahf
push
xchg
std
je
ss
pop
cltd
clc
andb
xchg
iret
imul
jecxz
lret
and
sbb
dec
lahf
inc
mov
fcomip
jecxz
mov
lock
jno
imul
es
iret
inc
mov
inc
inc
into
popa
mov
mov
pop
pop
sbb
in
sbb
and
pop
xchg
sahf
cmpsl
stc
dec
xor
fidivl
mov
bound
adc
push
das
xor
in
pop
mov
mov
in
call
sub
into
adc
mov
iret
adc
xchg
add
mov
dec
adc
loopne
inc
inc
push
fisttpl
lret
sbb
in
jne
mov
inc
test
out
std
les
dec
dec
push
and
and
cmp
mov
xchg
lea
mov
mov
sbb
insb
sti
bound
and
jb
push
repz
pmulhw
pop
lret
inc
xchg
mov
les
xchg
out
jmp
and
int
push
jbe
dec
pop
pusha
xor
mov
out
cmp
test
mov
mov
jo
cmpsl
jp
dec
movsb
outsb
sbb
pop
adc
cwtl
pop
push
cld
in
pop
pusha
shl
not
stc
and
inc
orb
in
push
lret
stos
loopne
ds
jne
dec
fisubrs
or
add
aad
adc
pop
xlat
stc
xorl
adc
test
dec
rorl
fwait
or
jne
pop
negb
mov
mov
lods
mov
les
adc
sbb
push
sbb
and
lock
mov
orl
mov
push
jbe
mov
push
fwait
cmp
mov
mov
aam
data16
les
mov
sub
adc
iret
push
bound
mov
push
mov
rorb
orl
mov
xor
or
in
pop
or
stos
pop
jp
movsl
cmp
pusha
push
xor
inc
jmp
mov
jecxz
pop
je
mov
xor
jo
test
adc
negb
sbb
iret
mov
xchg
sub
push
adc
mov
call
mov
add
sub
int
xchg
xorl
pop
mov
sub
pop
jno
movsb
in
mov
inc
and
popf
aad
shufps
sub
sub
lret
add
aas
shll
jno
in
cmp
rcrl
xchg
inc
cmp
mov
loope
xchg
out
or
mov
mov
cmpl
or
push
fdivs
cmp
lods
pop
and
sub
mov
insb
sbb
push
out
sub
movsl
and
adc
dec
enter
pop
pop
cs
cmp
mov
lods
sbb
cli
cld
fistps
cmpsb
fiadds
in
pop
loop
std
pushf
popa
lods
sbb
mov
stc
in
sahf
gs
push
fsubl
sti
rclb
and
push
insb
movsl
dec
push
xchg
or
int
test
inc
or
sub
xchg
test
sbb
push
inc
hlt
fs
aaa
sbbl
jmp
rcll
ficoml
fistpll
pop
pushf
ds
out
add
ret
mov
das
insl
or
icebp
inc
out
testl
cmp
sbb
aad
push
jmp
test
pop
dec
and
xchg
ja
aad
xchg
lods
mov
or
lock
pop
inc
inc
loopne
mov
adc
push
test
dec
xchg
scas
out
in
aaa
sub
aad
mul
or
cmpsb
and
push
pop
pop
cli
cmp
stc
test
xor
fiaddl
adc
icebp
and
push
jae
hlt
push
sbb
scas
lcall
cmp
cmp
pop
ljmp
nop
nop
xchg
es
inc
imul
adc
fcoms
cmp
mov
or
das
sti
iret
push
mov
jbe
push
mov
insb
mov
out
jb
hlt
and
fadds
das
scas
pusha
test
xchg
and
mov
sbb
inc
adc
pop
push
jb
sbb
lds
mov
sahf
adc
pop
or
rorb
ds
xorb
cmpsb
repnz
imul
pop
add
jmp
or
out
bswap
je
nop
sub
ss
out
les
push
das
int3
fiaddl
push
iret
add
imul
arpl
sbb
rcl
test
addr16
shlb
ret
lret
sub
addr16
dec
ss
sub
iret
insl
int3
push
fbld
mov
mov
imul
xchg
dec
out
cmpl
push
pushf
dec
shll
dec
lds
rorl
clc
sbbl
push
jmp
mov
ds
add
mov
mov
pop
bound
imul
mov
popf
inc
push
out
pop
out
mov
and
sbb
lea
jp
sub
jne
inc
jecxz
mov
out
xor
xor
cmp
loopne
loop
out
jns
adc
aas
std
das
shr
push
movsb
inc
rolb
ja
push
lahf
cmp
or
mov
jae
ret
addr16
aas
popa
rorl
add
sbb
cwtl
addr16
add
jl
push
loop
cmp
icebp
lock
or
pop
movl
xor
sbb
add
pop
shl
std
or
xor
jns
paddusw
xchg
xorb
mov
jo
les
inc
psubw
jle
insb
fstp
aad
mov
out
int3
fidivl
cmc
cld
jg
mov
add
cld
test
jmp
push
sbb
xchg
or
mov
aam
lahf
jecxz
lret
popa
ret
xor
popf
pop
imul
lahf
movsl
jne
mov
fs
test
lea
xchg
mov
cmpsb
lods
xlat
inc
push
icebp
pushf
cmp
xlat
lods
mov
xor
sar
adc
mov
out
mov
xchg
cltd
xchg
pop
mov
pop
pusha
mov
and
in
cmc
adc
movsl
add
sub
into
mov
jo
stc
xor
nop
cmp
xchg
mov
in
lret
lret
sbb
push
xor
popa
pop
out
sti
mov
pop
jo
pop
lcall
and
mov
leave
leave
icebp
xor
pop
sub
dec
cmpsb
adc
and
push
fistps
sub
xchg
ljmp
cltd
and
bnd
jo
dec
cmp
test
push
push
jg
add
mov
pop
jne
pop
inc
lcall
mov
fidivrs
mov
icebp
sahf
adc
adc
push
mov
pop
test
dec
and
dec
cmp
cmp
pushf
je
outsb
xchg
push
rcrl
push
mov
cltd
test
lcall
sbb
repnz
xor
mov
mov
scas
pop
stos
sbb
and
jge
sub
std
lods
pop
xchg
and
xor
adcb
xchg
adcb
xor
and
dec
lret
xor
pop
or
sbb
jb
cwtl
xchg
fmull
mov
je
scas
dec
add
xlat
lcall
cmpsl
push
xchg
dec
sub
mov
scas
mov
mov
ret
xor
push
ja
mov
jae
mov
sub
fldt
mov
and
movsb
fucom
cwtl
iret
sbb
icebp
out
lds
push
xchg
ror
pop
and
or
dec
dec
pop
jp
mov
ret
jp
mov
testl
ss
cmp
fucomip
jp
addr16
xchg
jle
xlat
or
aaa
xchg
xchg
add
and
xor
push
imul
add
push
jns
jo
les
cmp
cmp
adc
add
mov
ret
aam
lahf
gs
cltd
sbb
shrl
pop
sub
cwtl
out
cmp
push
pop
and
lock
add
lret
movsl
test
mov
std
out
lock
lea
nop
cmp
xor
cmpsl
pop
popa
add
xor
xchg
and
jle
dec
enter
mov
mov
iret
mov
push
cmp
lret
jl
in
dec
insl
subl
ja
mov
or
stos
fs
lds
sti
xlat
in
mov
pop
ss
jnp
inc
push
xchg
push
or
repz
sti
or
ds
fisttps
and
mov
sub
icebp
push
xchg
sub
cwtl
mov
sub
mov
lods
or
hlt
jmp
adc
lcall
insb
push
xchg
jb
add
rcll
iret
in
mov
xchg
rorl
addr16
jns
sbb
xor
sbb
xlat
jecxz
rcrl
push
ss
mov
sub
in
add
ficompl
mov
pushf
lahf
gs
inc
ret
sarb
push
jne
push
sub
pop
add
add
add
mov
xor
out
push
xchg
lods
lods
hlt
les
sub
pushf
repz
fidivl
clc
jecxz
lods
fiadds
imul
icebp
mov
xor
mov
sbb
jb
gs
inc
imul
data16
push
test
add
shl
scas
sti
inc
mov
or
add
cmp
iret
dec
sbb
add
mov
lock
jmp
mov
repnz
jmp
push
sub
mov
add
mov
aam
mov
cmp
in
test
movsb
adc
dec
repnz
xchg
sbb
ljmp
mov
dec
push
push
lods
and
jl
and
jle
push
imull
add
pop
xor
pop
inc
aaa
inc
mov
dec
or
in
push
int
lret
int3
sub
inc
mov
jp
sub
bound
repz
add
sub
xor
lods
jmp
mov
gs
dec
mov
cmp
add
mov
jo
xchg
dec
jg
or
data16
int3
data16
repz
inc
sahf
mov
jno
jecxz
ljmp
xor
lock
int3
pusha
daa
mov
adc
btc
rolb
js
pop
ficompl
mov
xor
ljmp
mov
or
push
fs
xor
daa
ja
xor
add
in
inc
add
add
dec
js
mov
cltd
outsl
les
xlat
mull
mul
add
inc
test
sbb
imul
cmp
sub
sarl
xchg
dec
leave
imul
imul
inc
shrl
ret
mov
jecxz
cwtl
push
inc
pop
xor
icebp
sarb
pop
sub
pop
mov
cmp
sub
sbb
subl
test
out
mov
push
shr
adc
dec
fdiv
out
xchg
popf
call
mov
cmp
sub
add
jb
addr16
dec
ret
jle
lcall
jecxz
dec
and
int3
pop
insl
fnstcw
cmpsl
test
mov
mov
in
sarb
outsl
inc
mov
jmp
aad
rol
adc
or
push
out
inc
test
push
push
mov
push
cmp
in
stos
les
pop
jb
pop
jne
xlat
shlb
lods
icebp
ret
repz
lds
scas
mov
out
push
loop
jmp
repz
scas
mov
cmc
enter
mov
outsl
ret
xchg
mov
imull
call
aam
out
aam
xchg
imulb
push
pop
mov
mov
jae
sti
inc
jl
sti
ds
out
mov
cmp
inc
call
add
out
roll
adc
xchg
push
sub
sbbb
fs
mov
sbb
push
adc
mov
mov
sub
inc
roll
add
pop
call
stc
rcrl
xchg
stc
mov
movb
pusha
adc
mov
mov
cli
lahf
shl
fs
fcoml
xchg
pop
jle
cmc
cmp
out
insl
mov
xchg
xor
sti
mov
sub
int3
sub
fdivr
jbe
icebp
int
push
jo
ficoml
and
push
add
hlt
adc
out
jbe
outsb
ds
subl
xor
add
sbb
rcll
aam
data16
lods
ficoms
sub
das
mov
test
les
icebp
pshufw
das
sub
pushf
push
std
xchg
popa
mov
addb
in
pop
pop
sbb
scas
push
cmpsl
mov
js
mov
pop
sarl
adc
addb
popf
enter
lahf
into
ja
sahf
lcall
push
mov
in
std
cmpsl
rorb
cld
mov
inc
sti
add
outsl
ds
mov
ljmp
bnd
xorb
push
cmpsb
std
test
enter
dec
ljmp
je
pusha
leave
je
inc
mov
mov
cmp
push
cmp
mov
addr16
push
xlat
shll
add
iret
jmp
add
cmp
cltd
cmpsb
adc
imul
lret
shr
out
inc
call
popf
jno
ljmp
cmc
mov
jbe
cwtl
stos
not
stc
stc
int3
cwtl
in
in
dec
cmp
mov
adc
and
xchg
jo
xlat
js
adc
loope
into
xchg
jecxz
fists
out
or
sahf
jge
popf
mov
sbb
call
jnp
imul
fidivrs
add
xchg
jp
inc
loopne
int3
or
pop
mov
gs
fdivl
mov
ja
data16
iret
jmp
push
inc
xor
add
sbb
lds
adc
rcrl
inc
inc
sbb
insl
mov
fs
push
sbb
mov
loopne
fs
lock
fisubrl
sbb
mov
lcall
adc
popf
jo
enter
sti
out
outsl
mov
push
je
fwait
sahf
or
mov
cmp
pop
mov
cmp
nop
cltd
js
ret
popa
sbb
inc
lock
jecxz
and
adc
movsl
pop
fdiv
cmc
mov
sahf
or
ja
mov
or
scas
mov
cmpsb
xchg
scas
outsb
ja
stos
into
or
js
int3
lods
fistl
in
jno
xlat
into
sub
aas
push
leave
mov
or
xchg
pop
repnz
push
nop
cmc
adc
inc
dec
push
mov
jp
idiv
jle
cld
ret
sub
pop
jbe
test
movsb
and
mov
jns
mov
ja
mov
mov
es
jbe
call
pop
int3
xor
push
outsb
pop
sbb
addr16
pop
sbb
pop
aaa
pop
add
pop
push
shrl
test
push
adcb
pop
cmc
arpl
imul
scas
gs
incl
ss
push
dec
push
arpl
mov
test
int
out
movl
or
std
inc
enter
dec
and
and
or
fadds
and
pop
push
pop
pop
fistl
jbe
xor
sbb
clc
adc
rep
dec
jnp
ret
insl
out
pop
inc
fs
loop
push
pushf
stos
jg
sub
stos
adc
jbe
add
loop
rorw
push
xchg
and
adc
fnstenv
mov
mov
jo
sbb
lret
cmpsb
cmp
inc
push
dec
inc
jle
mov
mov
aas
dec
jb
mov
pop
sbb
mov
daa
sub
lahf
push
rcll
add
movsb
or
adc
lret
xchg
movsl
clc
into
adc
popa
fwait
lods
inc
add
xor
pusha
xchg
mov
push
and
xor
and
mov
movsl
mov
and
mov
pop
xchg
jns
inc
cmpsl
jbe
add
jmp
popf
aad
stos
xorb
xchg
icebp
dec
fistl
inc
dec
push
fidivrs
pop
jge
scas
mov
lret
cmc
mov
mov
mov
dec
mov
push
jg
mov
lock
jmp
clc
xchg
cmpsl
sbb
xchg
loop
lods
fwait
jbe
dec
cmp
stc
jne
adc
cmp
rcr
fs
nop
sahf
rcrb
dec
mov
enter
add
add
pop
or
cltd
iret
fmuls
dec
cld
js
loope
addr16
inc
mov
bound
pop
or
imul
xchg
rcrb
fbstp
aad
orl
fdivr
dec
aam
lock
xor
insb
xor
pop
sbb
and
push
jns
push
out
cmp
mov
into
add
cmp
and
stos
inc
jmp
xor
bound
pop
adc
cmp
push
xor
ljmp
mov
fstl
mov
les
stc
mov
jg
in
dec
mull
ljmp
mov
ret
xchg
call
movsb
cld
jmp
int3
outsl
dec
sub
xlat
xchg
mov
sahf
ds
jne
add
pop
cmp
pop
cwtl
mov
push
sbb
mov
loop
dec
xchg
jb
sub
inc
enter
fld1
out
cltd
and
cs
cmp
les
or
mov
jp
adc
pop
test
pop
jmp
std
mov
mov
cmpsl
xor
sti
sub
jecxz
fdivl
dec
mov
adc
enter
pop
fdivs
outsb
fcoms
add
sub
push
push
sbb
negl
enter
xor
cmp
mov
push
pop
pop
ja
push
pusha
hlt
dec
push
outsb
icebp
cmp
jmp
imul
fwait
lds
cmp
sbb
xchg
push
pop
inc
or
js
in
lods
aam
ret
les
mov
mov
cmp
dec
aaa
mov
add
pop
jns
cmp
sbb
mov
jo
shll
lcall
fdivl
sub
fcompl
shll
xchg
and
add
aaa
ds
push
test
or
sub
pop
fisubl
or
cli
push
push
cmp
push
leave
in
ffree
shll
imul
in
mov
cmpsl
xchg
les
out
mov
lret
cmpsb
pop
mov
push
ljmp
pop
push
mov
stc
ret
mov
adc
rcrl
or
mov
push
jmp
jbe
int3
mov
out
pop
nop
sub
insb
in
movsb
push
ss
in
mov
shlb
sbb
jmp
sbb
data16
lds
pop
xchg
test
fmuls
or
mov
lret
outsb
or
mov
xchg
pushf
cwtl
sub
fmull
imul
mov
stos
std
test
fnstsw
cmpsl
adc
jne
cmp
inc
lods
test
jecxz
sub
std
mov
or
jge
in
ret
xchg
mov
xor
jae
inc
lea
gs
lret
adc
cli
ja
and
js
mov
pop
dec
inc
into
push
scas
adc
inc
dec
outsb
mov
insb
test
loope
jne
cwtl
sarb
stos
pop
push
gs
add
sub
cmp
jno
dec
pop
insb
das
aam
popa
jecxz
test
stos
mov
enter
adc
in
aam
xor
jo
insl
jle
inc
xchg
jo
int3
repz
pop
inc
repz
sahf
rcrl
or
jb
mov
mov
mov
negl
out
lock
out
test
mov
xor
fisttps
xor
gs
push
orb
cmp
and
and
movsl
fisubrs
dec
jl
sahf
cwtl
fiaddl
push
or
cltd
in
add
add
sbb
fdivrp
dec
aad
lret
pushf
nop
jl
push
std
adc
flds
sbb
xchg
nop
stos
cltd
fisttps
into
ffree
int
es
jnp
cmpsl
mov
xchg
testl
mov
cmpb
mov
std
xlat
pop
imul
jnp
cmp
mov
push
inc
cmp
fnstcw
mov
inc
out
add
mov
movsl
popl
jmp
flds
fnsave
cmp
pop
jo
imul
lahf
pop
push
daa
outsb
scas
pop
ds
loope
add
xor
mov
sbb
or
xor
insl
shl
popf
sbb
nop
sub
stos
test
inc
je
jl
or
pop
loopne
sub
fadds
mov
pop
or
inc
jmp
xchg
into
sahf
outsl
add
xor
pushf
repz
int
xor
sbb
xlat
jle
dec
cwtl
cld
mov
adc
imul
enter
js
adc
and
in
pusha
lcall
cmpb
idivb
add
pop
push
xchg
lods
push
decl
mov
xchg
orb
pushf
js
std
inc
pop
inc
sub
mov
call
loopne
test
sbb
cld
sub
push
je
popf
mov
and
mov
mov
adc
cmp
cmp
sub
ljmp
stos
aam
inc
pop
sbbb
pop
in
jmp
mov
mov
les
addr16
rcl
jne
pop
dec
xlat
sbb
push
pop
xor
es
popf
ljmp
cltd
cmp
mov
mov
movsl
inc
pop
fnstenv
cmp
je
pusha
lods
outsl
push
pusha
mov
and
sub
or
jmp
fldcw
mov
push
imul
cmp
or
inc
push
sbb
push
lahf
out
push
cwtl
cwtl
cmc
mov
fbld
push
repnz
or
xor
xchg
inc
loope
sbb
xchg
push
test
in
cmc
inc
test
dec
fldpi
shrl
dec
inc
cmp
push
xlat
xchg
cmp
and
push
icebp
cmp
dec
cmp
lods
jno
xchg
out
mov
mov
mov
ret
lds
sbb
fisubrs
pusha
inc
mov
xchg
pop
and
mov
leavew
lcall
cmp
in
push
lds
orl
ja
inc
push
mov
dec
push
push
lock
es
aad
data16
xchg
cld
test
xchg
pop
addr16
cmp
pusha
sbb
jb
std
clc
icebp
outsl
dec
scas
nop
jae
cmp
out
or
xor
sub
push
jns
sbb
xchg
fdiv
int3
jmp
dec
xor
jmp
stos
push
cmp
aas
addl
dec
mov
cmp
imul
mov
jg
pop
cmp
pusha
push
fsts
cs
jg
or
and
out
dec
cmpl
adc
adc
int3
out
outsl
cmp
cmpsb
je
cmp
fs
push
lcall
push
xchg
leave
inc
mov
mov
jp
inc
add
daa
imul
aaa
lods
push
fildl
or
int
aad
inc
outsb
sbb
push
repz
mov
movsb
ret
or
dec
leave
adc
inc
adc
sbb
inc
in
out
xchg
pop
fldenv
insb
xlat
mov
test
iret
scas
or
loop
mov
jge
pusha
cmp
fisubl
inc
push
jae
and
mov
jmp
cmp
sbb
testb
or
ret
testl
adc
notb
mov
repnz
sahf
add
dec
inc
les
fisubrl
inc
ljmp
pop
out
out
push
sbb
dec
call
or
repnz
mov
xchg
xchg
and
cmp
mov
das
cmp
int3
subb
adc
cmpsl
pop
insl
lds
sti
sahf
loopne
add
icebp
jl
sbb
sarb
insl
into
aas
sbb
cmp
ljmp
ss
add
data16
insl
pusha
lea
in
shll
scas
test
xor
repz
aam
loope
rcrl
lret
adcl
popf
mov
and
and
fldt
popl
cwtl
cmpsb
leave
dec
in
mov
ret
jno
gs
sub
mov
xchg
push
cli
jne
and
insb
mov
fldt
xor
shll
and
mov
push
inc
lods
xchg
sub
ja
xlat
sub
imul
hlt
pop
and
fiaddl
loopne
orb
outsl
popa
int
es
addr16
movsb
sub
or
sahf
mov
pop
jo
jmp
mov
cmp
lds
call
sbb
mov
sub
shr
out
stos
movl
stc
add
dec
add
pop
cmp
jo
pop
pop
sbb
xchg
ljmp
int
sbb
sub
in
aam
dec
and
and
xchg
sub
sti
xor
int
ret
sbb
loop
test
xchg
cwtl
xchg
sti
movsb
mov
or
cmp
out
lods
in
xor
push
adc
push
add
incb
ficoms
rcl
stc
lret
push
jp
mov
subl
test
xchg
mov
jl
andl
fistps
mov
hlt
jecxz
jo
out
pop
rolb
stc
ss
mov
les
idiv
js
outsb
call
fcmovu
mov
sbb
push
jbe
pop
dec
insb
js
fs
repz
xor
daa
out
mov
pop
out
das
out
aas
mov
mov
sti
sbb
xchg
mov
divl
mul
std
arpl
in
filds
stos
imul
fcompl
lret
and
mov
push
loopne
pop
add
mov
mov
jno
cmp
test
outsb
imulb
insl
cmp
add
jg
insb
pop
sbbl
jb
out
fbstp
aad
dec
pop
mov
inc
mov
jnp
dec
repnz
inc
jg
out
push
inc
sbb
xor
inc
pushf
cmp
push
iret
inc
mov
lahf
adc
repz
cmp
mov
push
popf
inc
fwait
stos
add
push
push
outsl
cmovge
aad
dec
nop
movq
loope
dec
xor
outsb
aam
arpl
popf
xchg
cs
xor
imul
mov
mov
sbb
movsb
xor
and
add
push
leave
lret
pop
insl
pop
hlt
shll
xor
out
movsl
negb
cs
shrb
sub
stc
fistpl
movsl
add
pop
les
xchg
lret
imul
int
rcrb
adc
push
dec
jo
jge
stos
aam
es
mov
out
or
add
lahf
pop
pop
fcoml
das
mov
or
in
mov
pop
mov
push
xchg
pop
pushf
push
sbb
pop
pop
or
dec
mov
mov
out
xor
or
cmc
pop
ret
dec
xchg
scas
cmp
addb
call
xchg
jp
into
aad
add
sub
jns
pop
inc
shl
stos
xchg
cmp
pop
or
push
push
or
mov
mov
jecxz
stos
dec
jo
push
or
add
xchg
in
clc
stos
aam
push
out
add
jnp
sub
out
aam
xchg
mov
imul
inc
add
inc
lods
adc
scas
lcall
lock
or
mov
jae
mov
sbb
or
dec
lods
leave
std
cmp
ljmp
arpl
cs
fnstcw
pop
inc
loopne
mov
inc
insb
dec
pop
xor
int3
jae
pushf
mov
adc
cltd
xchg
dec
repnz
xchg
sarl
mov
cmp
lods
mov
fdivl
sarb
ret
mov
mov
icebp
inc
pop
into
sbb
mov
std
out
out
pandn
sbb
push
lcall
fldl
mov
scas
push
push
ja
mov
sub
mov
ret
xchg
inc
mov
in
das
cmp
push
fnstcw
scas
pushf
sbb
mov
and
sub
call
push
sbb
movsb
movsl
popf
test
push
mov
mov
pop
mov
add
imul
cwtl
or
icebp
or
cmp
out
subl
mov
std
mov
mov
mov
inc
fiadds
cmp
sub
icebp
inc
js
shll
stc
ret
sbb
push
lods
push
dec
addr16
mov
sbb
and
adc
inc
lods
std
sbb
pop
jb
stc
mov
es
mov
mov
arpl
pop
call
stc
push
jb
xchg
outsb
sti
mov
sbb
cwtl
and
or
mov
clc
inc
sub
xor
add
cmp
jne
xchg
in
dec
xchg
lods
aaa
sbb
aaa
fxch
movsl
ficoms
pop
dec
add
rcl
pusha
jo
mull
jp
imul
cmp
jne
dec
inc
or
jp
mov
mov
sbb
inc
je
or
mov
xchg
push
cld
mov
lret
test
mov
js
adc
or
testb
sahf
xchg
jnp
mov
pop
nop
sbb
jecxz
les
roll
jae
out
fiadds
adc
sbb
sub
xor
cmpsb
les
sub
dec
dec
int3
sub
cltd
mov
addr16
fsts
dec
jg
push
in
rorb
jb
test
cmc
aas
faddl
in
adc
pop
inc
dec
std
les
nop
sub
les
lcall
cmp
insb
pusha
xchg
stos
push
rolb
dec
dec
pop
scas
test
jl
or
es
pusha
into
mov
mov
cmc
jecxz
sub
jb
ja
ss
jne
xor
pop
out
in
fmull
jecxz
mov
cli
test
adcl
cs
lret
imull
les
repz
pop
pop
pusha
or
mov
push
test
imul
lret
add
ljmp
cltd
mov
rorb
jl
adcb
add
sub
mov
ljmp
mov
or
mov
mov
mov
imul
adc
sub
pop
ljmp
pop
dec
mov
andb
jmp
mov
jmp
fucomp
fs
sbb
inc
movsl
dec
xor
test
insl
xchg
ds
pop
xor
inc
adc
in
mov
imul
cmp
dec
xchg
push
sbb
leave
leave
pavgb
sub
xchg
pop
cwtl
push
sbb
movsl
dec
pusha
rcll
xchg
pop
xor
gs
repz
cs
testb
pop
adc
lock
pop
hlt
aam
arpl
mov
ret
xlat
flds
xor
ret
push
ds
jae
jbe
popa
mov
std
jmp
mov
sti
fistl
push
xor
inc
lret
jg
mov
sbb
jmp
fstps
ret
lret
adc
daa
insl
nop
mov
fs
stc
push
ss
pushl
pusha
fildl
jmp
icebp
mov
or
mov
repz
jne
xorl
rcr
jp
push
push
mov
in
and
inc
xor
pop
sub
xor
icebp
mov
jp
mov
frstor
push
mov
ficoms
cmp
sar
dec
or
lret
loope
pushf
test
es
pop
lea
insl
aaa
push
andb
sub
cmp
sub
jle
xchg
xor
stc
sti
mov
or
push
cmp
sub
inc
mov
mov
dec
idivb
mov
inc
mov
cmp
shl
mov
lahf
adc
jmp
outsb
pusha
inc
xlat
ucomiss
mov
stc
in
adc
adc
aam
pusha
or
inc
dec
add
rclb
cmc
inc
and
jmp
inc
xor
jmp
cld
pop
in
fnsave
es
in
sub
jecxz
xor
xor
rorl
ret
push
lock
adc
jle
dec
mov
or
add
push
cmp
push
lret
inc
imul
and
xchg
jne
pop
inc
scas
xchg
clc
push
dec
mov
add
es
in
orb
mov
insl
outsl
jmp
or
sub
mov
dec
lahf
pushf
out
xor
xchg
xchg
or
pop
xor
jnp
rcl
push
std
loope
out
jl
scas
cld
pop
test
aas
and
push
cmpl
jbe
mov
idivl
inc
pop
ret
int
push
pop
lock
push
mov
fcoms
shl
sbb
jo
xchg
int3
jp
sub
pop
cmp
ds
adcl
ljmp
jne
mov
or
notb
std
dec
andb
xor
mov
lods
fmul
fisttps
xor
sahf
mov
imul
mov
dec
inc
jecxz
sub
cld
push
popf
outsl
xchg
mov
jl
popa
inc
mov
mov
adc
in
aas
pop
xchg
inc
pop
ljmp
test
sbb
sbb
jmp
mov
mov
jge
adc
inc
mov
jne
roll
clc
cmc
pop
iret
xchg
sbb
dec
lcall
inc
xchg
push
cs
ds
decl
pop
inc
jno
cmp
adc
mov
mov
lcall
ficoms
dec
sub
lock
xchg
add
iret
dec
push
stos
inc
push
or
xor
js
scas
notb
pop
push
lods
inc
stc
mov
xchg
jbe
fmull
cwtl
aad
pusha
dec
iret
mov
fidivl
xorb
add
sub
cltd
xchg
push
sub
push
popa
sbb
enter
insb
jl
pop
enter
jle
push
aad
insb
arpl
mov
rcll
jns
ja
mov
cltd
and
sub
cmp
imul
out
lock
dec
ret
cmc
sub
jp
insb
cltd
xchg
dec
sbb
push
fnstcw
ss
scas
ret
dec
out
push
mov
push
dec
cltd
inc
push
imul
jnp
and
lret
ss
add
packsswb
lcall
movsl
cmp
mov
pop
push
iret
cmp
insb
popf
call
xchg
mov
lahf
dec
out
in
pushl
ret
scas
mov
mov
das
pop
in
addr16
pushl
push
test
pop
add
incl
mov
add
or
rcrl
mov
lea
aaa
lock
dec
or
fists
inc
lea
fwait
call
sarl
cld
loopne
fldt
inc
dec
popa
mov
push
test
mov
shll
and
and
mov
jmp
mov
loop
lods
pop
and
xchg
push
xor
sbb
adc
jmp
mov
addl
cltd
insb
sub
int
movsl
xchg
jbe
inc
pop
daa
enter
pop
jnp
jo
jmp
arpl
repz
pop
jle
mov
sahf
les
push
daa
mov
out
int
or
scas
fcmovnu
or
xor
pop
sbb
das
data16
outsb
add
je
nop
insb
xor
fcmovne
sub
dec
jg
shll
daa
movsl
pushf
add
mov
xlat
sarb
lods
xor
jb
in
ja
mov
fisttpl
pop
out
sbb
pop
fcomip
or
push
xchg
mov
orb
imul
dec
jne
mov
add
data16
or
in
dec
xorb
xor
mov
js
dec
cltd
outsl
cmp
mov
mov
jo
push
cld
aam
rol
ljmp
leave
dec
pop
ljmp
insb
jge
mov
cmpsl
lock
addb
pop
vrsqrt14ps
cld
imul
mov
ret
lret
cmc
mov
lahf
test
rcll
jns
aas
test
add
stc
push
mov
xchg
mull
lret
inc
or
call
push
ret
jp
and
cwtl
testl
jnp
pop
mov
sbbb
mov
repz
fs
mov
push
xchg
lods
fmul
dec
psubusw
mov
cmp
ds
cli
jne
in
inc
push
and
lea
jo
jbe
mov
roll
add
ljmp
aas
ret
jo
mov
in
sti
insb
pop
cmp
push
mov
sbb
jne
inc
push
ljmp
sub
aad
adc
or
mov
clc
pop
jle
imul
lods
negl
outsl
dec
or
arpl
daa
dec
mov
rolb
nop
imul
mov
into
lret
cmp
jbe
out
cltd
ss
or
sahf
pop
das
loopne
mov
fisttpl
call
cli
fwait
push
inc
roll
popf
push
mov
mov
outsb
jae
push
cli
mov
call
xlat
jns
jecxz
sub
ret
lods
xor
add
out
ds
nop
cld
mov
pop
data16
int
mov
cmpsb
cmp
jbe
xor
icebp
push
mov
sbbb
outsb
mov
sub
out
push
sbb
mov
xlat
push
xchg
mov
daa
and
shlb
loop
xor
sarb
lods
xchg
test
dec
stos
mov
cmp
jnp
inc
repz
ljmp
and
inc
mov
aad
lahf
outsl
fsts
jns
xchg
repz
rolb
push
push
lods
mov
push
add
mov
jge
shl
js
mov
sbb
scas
dec
sbb
popa
stc
mov
pop
test
push
jmp
jp
or
mov
mov
aad
push
imul
xchg
les
pusha
daa
pop
mov
cmp
popa
pusha
xor
mov
lcall
mov
add
sbb
nop
or
sub
in
in
inc
fidivrs
mov
repz
mov
orb
jecxz
cmpsb
xlat
add
mov
stos
daa
lret
and
xlat
sti
pop
inc
out
mov
mov
je
int3
fsubr
mov
lods
push
xor
cwtl
fdivr
cmp
push
and
xchg
and
fcomip
sbb
cli
sahf
cmc
ja
add
push
sub
add
and
hlt
sub
mov
jnp
pop
sbb
pop
inc
cli
out
popa
push
push
nop
push
out
out
and
fistpl
incb
icebp
ja
inc
xchg
cld
ds
imul
stos
out
icebp
mov
and
das
jg
push
inc
and
jecxz
mov
dec
push
ret
mov
mov
or
jge
cwtl
lahf
add
adc
int3
lds
mov
clc
aas
nop
dec
movsb
pop
cltd
or
lcall
adc
pop
jmp
je
push
aaa
pop
cmp
pop
imul
jecxz
or
lods
mov
inc
lds
pop
mov
cmp
mov
lahf
xor
adc
cmc
inc
es
xor
loope
mov
sahf
inc
push
std
cmc
mov
sub
push
mov
daa
fstl
fistps
cmp
cmp
js
add
xchg
lret
insl
fldpi
cltd
cmp
lds
xchg
jl
mov
sti
out
roll
cmp
pop
ja
popl
dec
hlt
ja
outsl
inc
and
daa
loopne
shll
xchg
adc
aam
xchg
scas
pop
roll
add
stos
mov
and
push
cmp
out
add
push
mov
mov
fs
xor
out
scas
pop
mov
sti
pop
sbb
xor
mov
stc
xchg
pop
lods
lret
ljmp
dec
lcall
add
sub
setbe
adc
mov
rolb
or
mul
in
imul
je
add
cmc
add
jl
data16
lods
outsl
sti
cmp
hlt
icebp
inc
stos
mov
sbb
repnz
push
cmp
test
mov
mov
or
iret
pusha
fmull
push
mov
rcrl
dec
cltd
pop
xchg
pop
mov
lods
xchg
push
lods
cld
pop
add
jb
jbe
movsl
sbb
xor
stos
push
fmull
cmp
daa
das
lea
hlt
jl
loope
sbbl
and
mov
negl
ret
cmc
mov
sub
pop
inc
pop
test
movsb
mov
sbb
push
daa
cmc
loop
add
add
sbb
lods
sarl
ret
mov
mov
shl
cltd
mov
out
inc
jns
neg
ss
frstor
dec
aad
inc
cli
xchg
inc
sti
cmc
adc
cwtl
add
pop
int3
push
aaa
fcompl
out
cli
arpl
sbb
mov
push
push
call
inc
in
xchg
std
sbb
xchg
sti
loopne
xchg
sub
jns
adc
jo
shrb
jbe
xor
inc
into
lock
inc
mov
jne
xchg
lcall
push
out
jge
jno
test
ja
fists
adc
push
insl
xchg
ja
xchg
ljmp
leave
aaa
dec
or
pop
lds
inc
inc
pop
iret
mov
xchg
add
clc
clc
cwtl
arpl
arpl
icebp
repz
loopne
add
sahf
xchg
cmp
jg
dec
aaa
aas
pop
sub
sbb
sub
mov
into
push
pop
movsl
and
in
mov
fnstcw
xchg
mov
jo
sbb
fcos
subb
xor
pusha
cmp
jb
mov
movnti
xor
repz
add
mov
test
fsubs
mov
test
sub
jecxz
scas
aaa
mov
mov
stos
dec
in
xor
fsubp
sbb
add
mov
addr16
es
add
stc
dec
xchg
jmp
cltd
sub
xchg
mov
sahf
mov
mov
pop
push
and
je
fisubs
nop
push
sbb
mov
ret
rclb
push
sti
sbbb
mov
lock
rorb
imul
adc
cmp
dec
jg
xchg
neg
add
push
repnz
mov
cmp
sub
push
enterw
int3
and
sub
dec
jge
aaa
shrl
pop
ss
sub
fimull
xor
test
jg
in
pop
push
jnp
xchg
mov
lods
dec
adc
inc
imul
mov
mov
mov
mov
dec
mov
push
loopne
inc
add
pop
mov
gs
inc
test
sub
inc
mulb
mov
stos
fidivl
jne
mov
je
xor
inc
adc
mov
in
aaa
repnz
aam
dec
cli
mov
cs
data16
xor
pop
call
mov
enter
imulb
sbb
mov
pop
pop
fildl
mov
int
and
xchg
mov
fidivs
pop
xor
ljmp
cmp
adc
jbe
pop
dec
xchg
shll
rorl
pop
add
imul
push
pop
les
outsl
jbe
jb
inc
jb
jbe
mov
sub
push
lods
push
lret
jns
sbb
aaa
mov
imul
dec
sbb
hlt
pop
es
jbe
mov
sbb
clc
mov
leave
pop
sti
lea
sub
cmp
aaa
fsubrs
fisubs
cmpsl
pop
insb
rolb
sbb
mov
insl
fiaddl
pop
stc
mov
int
or
sahf
aam
addl
out
das
scas
push
fldl2e
popf
div
imul
sbb
pop
jb
enter
mov
pop
outsb
rorl
and
and
xlat
faddl
pop
test
add
in
icebp
enter
subl
pop
add
mov
and
fsubl
mov
popf
sysret
fucomi
clc
cmc
add
pop
mov
cmpsb
mov
or
adc
dec
mov
pushf
scas
dec
adc
inc
lods
xchg
std
shlb
fmull
cmpsl
and
xor
lods
xor
push
out
ret
add
shrb
jae
and
das
movsl
mov
jb
imul
xor
jmp
add
shll
fldt
je
sbb
xor
inc
sub
sahf
stc
jg
dec
adc
mov
out
xor
test
pop
movsb
int
xor
or
repz
pop
imul
sub
inc
pop
xchg
jae
adc
subl
cmp
push
cmp
sub
in
pop
mov
dec
shrl
loope
mov
sub
cmc
nop
xchg
ja
cld
cli
xchg
pop
inc
mov
push
fsts
cmpb
push
out
and
fstpl
mov
jp
test
dec
mov
pusha
jmp
repnz
xchg
out
loope
jbe
ljmp
pusha
push
repz
jo
jg
popf
xchg
enter
xor
xor
std
cmpsb
lcall
mov
ljmp
sbb
inc
test
enter
out
fwait
sbb
in
sahf
cmp
fldenv
mov
jl
mov
imul
lahf
std
sub
dec
mov
sbb
sub
dec
jns
pop
lcall
pop
std
push
push
xchg
and
push
push
fs
shl
push
or
incl
mov
add
sbb
pusha
cmp
dec
mov
data16
xor
iret
xchg
ret
mov
xchg
cmp
mov
mov
jo
insb
add
or
cmpsb
in
in
sahf
add
fwait
push
xchg
aad
arpl
sub
jg
ss
mov
push
cmpsb
call
pop
dec
jae
iret
xor
sahf
lods
out
or
mov
jb
mov
lods
ds
sub
notb
jmp
in
leave
test
inc
lods
out
dec
dec
arpl
xchg
out
jb
ss
ret
add
repnz
inc
inc
sub
enter
xor
sbb
out
cmpsb
cld
cmc
scas
or
dec
lcall
pop
and
inc
inc
popf
aaa
int3
shl
adc
cmp
mov
fcmove
insl
aam
ja
and
mov
cmc
fs
add
jo
scas
nop
movsb
sub
bound
lods
or
and
fwait
rcr
adc
inc
pop
jb
and
pop
dec
test
fiaddl
shlb
dec
loopne
lods
shlb
mov
add
bound
jg
cmpb
pop
pop
shr
js
sbb
pop
sub
shrl
cmc
filds
pusha
aas
add
pop
mov
inc
jle
stos
sub
mov
out
sbb
mov
add
cltd
mov
lahf
mov
movsl
xor
or
inc
add
repz
sahf
mov
popa
sbb
mov
add
dec
scas
in
sub
push
push
xchg
inc
inc
in
cmp
xor
es
xchg
sti
and
sarb
fwait
scas
call
loope
int3
mov
fninit
cld
jmp
bound
imul
mov
test
pop
or
inc
addb
cmp
push
repz
imul
inc
xor
adc
fstl
jl
pop
sbb
inc
lcall
out
loop
jecxz
xor
jp
push
out
gs
cmpsl
pop
lds
test
fldt
rcll
test
mov
sub
pop
ret
mov
iret
mov
movsl
sbb
sub
mov
dec
jns
push
sbb
push
mov
or
xchg
xchg
test
or
sti
dec
ret
sub
adc
and
ficoms
int3
repnz
ret
inc
jg
leave
add
ja
sub
or
inc
popf
pop
mov
inc
js
cmp
push
inc
or
stc
push
adc
arpl
xchg
aam
xor
push
inc
xor
pop
xchg
cld
xchg
push
lret
jbe
jne
dec
adc
arpl
mov
divb
sub
sub
add
mov
pop
loope
jne
sbb
adc
mov
xor
xor
add
andl
xor
or
scas
adc
pusha
cltd
xchg
jg
mov
inc
fsubrl
sub
mov
shl
fwait
jge
lock
pop
pop
mov
add
sbb
jecxz
mov
jle
jl
pushf
mov
imul
xchg
sub
int3
jle
call
or
movsl
hlt
int3
dec
or
mov
pop
mov
insl
push
fiadds
sub
dec
shll
test
insl
in
subb
mov
cmp
stc
jno
xchg
mov
mov
mov
in
push
mov
clc
ficoms
repz
xchg
mov
int3
mov
cmp
and
nop
mov
andb
dec
frstor
ja
lds
jo
rolb
push
pop
push
daa
and
adc
rcll
mov
mov
xor
xchg
popa
test
adc
fsubr
shll
and
adc
lds
imul
lods
pop
xchg
insb
fisubs
daa
pop
ja
cwtl
movsl
xchg
push
jno
add
add
test
pop
into
push
push
bound
mov
dec
push
jecxz
inc
jae
mov
adc
and
sub
and
cmpsl
rorl
out
ret
pop
sub
js
lock
fbstp
arpl
repz
sub
sub
test
xchg
pop
sub
inc
xchg
adc
incb
adc
je
bound
lds
or
cwtl
and
sbb
jae
in
pop
mov
dec
in
lods
jg
sub
mov
pop
inc
mov
sbb
fdivrl
xchg
mov
std
jbe
push
cld
push
clc
call
sti
pop
bnd
mov
in
aas
cli
dec
pop
inc
pop
add
dec
arpl
push
ja
mov
cmp
adc
push
mov
inc
add
repnz
add
or
stos
shl
sub
pop
minps
jmp
outsb
outsb
sbb
enter
xor
push
lret
cs
xchg
mov
sub
pop
fadd
mov
lret
push
movsl
xchg
roll
je
sbb
inc
leave
mov
xor
dec
fwait
sbb
stos
cmpl
popf
jnp
mov
inc
popf
jbe
cmp
lds
stc
fsub
dec
in
dec
xchg
insb
push
push
push
loop
and
loopew
mov
aad
icebp
xchg
sbb
enter
mov
and
lahf
mov
jb
psrlq
xorb
stc
movsl
cmp
push
test
int3
adc
lock
jp
int3
fimull
or
push
out
pop
sti
fnstcw
push
mov
cmp
inc
xchg
mov
xor
testl
cmpsb
or
arpl
notb
push
out
lret
mov
pop
pusha
adc
or
mov
out
jae
sub
or
pop
out
dec
aaa
fs
popf
ja
mov
addr16
out
xor
inc
fwait
adc
sub
push
push
test
jge
pushf
and
jp
adc
fists
sarb
popf
and
in
sub
sub
les
out
add
cmp
arpl
mov
std
out
mov
jge
mov
sub
sbb
call
push
xor
or
inc
addr16
cmpsb
sbb
loope
jo
ffreep
notb
addr16
cmp
pop
fs
push
or
jae
mov
xchg
jecxz
sahf
out
or
sti
fsubrs
or
fwait
mov
mov
testl
or
push
sbb
or
push
push
hlt
shlb
jmp
test
push
cwtl
cmp
aaa
test
mov
jb
dec
push
insb
sub
roll
xchg
dec
fs
std
push
rcll
jne
seto
push
sbb
cli
add
stos
pop
lahf
test
in
pop
das
fstp
aaa
push
cmp
daa
faddl
or
aam
pop
cmp
dec
or
arpl
fimuls
inc
mov
pop
cmp
mov
cmpsl
mov
inc
rorl
stos
mov
dec
iret
inc
add
aaa
es
es
adc
call
add
push
stos
cmp
jo
sti
fcoms
ret
pop
or
lods
xchg
fwait
xchg
popf
mov
mov
mov
jl
adcb
jnp
mov
pushf
sti
jg
adc
push
adc
rclb
xor
cmp
adc
and
or
xchg
pop
test
fcom
jo
movsl
std
mov
sahf
call
loop
xchg
dec
clc
shl
mov
add
outsl
scas
in
cs
adc
xchg
imul
or
sbb
cli
sbb
and
mov
imul
and
loope
stc
jecxz
xchg
int3
outsl
cmp
scas
or
incb
mov
sub
xchg
inc
add
in
and
cltd
sbb
aaa
aad
ja
dec
mov
or
cld
push
pop
sub
out
repz
into
push
mull
xchg
pop
test
inc
fiaddl
out
popa
repnz
dec
repnz
rcr
lds
sti
lods
jp
arpl
fidivrl
adc
popa
std
inc
add
mov
sbb
cmc
mov
out
pop
mov
xchg
call
mov
xchg
mov
inc
jae
roll
push
incl
jb
fs
cmp
xchg
lds
mov
push
pop
mov
jne
das
rcrl
fisubs
inc
pop
push
adc
pop
hlt
test
xchg
or
push
xor
arpl
out
icebp
inc
jg
in
cmp
sub
call
adc
jno
pop
imulb
pop
mov
repz
push
fmull
es
fisubs
fincstp
and
es
int
les
xchg
mov
int3
push
push
xor
xor
addr16
inc
cwtl
xchg
movsb
lret
rcrb
pop
mov
sysret
out
xchg
mov
jg
loope
jge
sbb
mov
imul
push
push
fildl
fimuls
test
ja
subb
movsb
cmc
or
cld
movsl
fldl
mov
mov
hlt
pop
lds
notl
cs
mov
js
sbb
fninit
ja
xlat
shll
jns
daa
andb
adc
movsl
sbb
cwtl
sti
push
es
lea
add
jae
mov
and
dec
jbe
es
mov
dec
shl
clc
nop
fucom
dec
shrb
js
mov
mov
out
xchg
pop
in
cmp
add
inc
jb
sbb
adc
enter
popa
push
jl
nop
xor
int3
data16
ret
jno
push
jl
mov
andb
dec
mov
sub
pop
ljmp
mov
imul
push
add
cmpb
push
sti
test
cmpsb
stc
stos
ss
cmp
adc
mov
mov
test
xchg
popw
inc
cmpsb
scas
ret
pop
pop
ds
jae
add
xchg
subl
cmpsb
std
mov
jb
inc
loop
popa
push
sahf
mov
push
mov
subb
movsl
xchg
jne
int
mov
jecxz
sbb
cld
sbb
jge
push
mov
cltd
loope
mov
push
adcl
dec
mov
dec
inc
cmp
mov
cmc
int3
in
pop
add
mov
pop
inc
xchg
pushf
sbb
seta
dec
inc
mov
shrl
aad
xor
stos
mov
push
out
cmp
loope
movsl
cli
roll
jp
jno
mov
or
dec
cmp
dec
pushf
sub
mov
xchg
clc
mov
push
inc
orb
mov
mov
xor
jae
jg
push
xchg
pop
jo
outsb
inc
dec
scas
adc
push
les
xchg
xor
loopne
sub
test
data16
pop
jg
adcl
enter
dec
int3
sbb
and
insl
cmp
subb
fisubrs
mov
sub
fcoml
loop
inc
mov
add
lock
mov
in
xchg
xor
shrb
inc
inc
orl
cmpsb
pop
xor
mov
popf
aad
mov
stos
je
push
and
ret
dec
nop
jne
enter
scas
dec
lret
fistpll
in
pop
mov
test
mov
sub
into
jl
xor
xchg
cmp
sti
clc
adc
mov
lock
push
push
lock
loope
nop
testl
out
rcll
ret
pop
cmp
cli
int3
movsl
mov
push
adc
push
sbb
sub
or
mov
imul
cmp
out
xlat
lret
test
lahf
divb
jns
lcall
loope
cwtl
iret
sub
push
test
pop
sbb
cmp
mov
xor
loopne
movsb
call
jmp
sbb
aam
jl
cwtl
sub
pop
std
add
out
faddl
mov
imulb
pusha
xor
xchg
fst
cmp
jns
test
xorl
and
and
push
outsl
add
sbb
cmc
std
lock
dec
mov
or
or
mov
fdivrl
pop
pop
shll
rcll
repnz
mov
and
inc
mov
stc
xchg
sbb
sbb
fdivs
fucomip
and
pop
adc
pop
iret
mov
add
outsb
add
mov
push
mov
xchg
ljmp
mov
cmp
jo
mov
add
insl
mov
xchg
sbb
jae
inc
push
pop
cli
push
lret
lods
in
in
add
nop
adc
xchg
movb
xchg
rolb
dec
mov
lahf
jne
pusha
mov
in
aas
push
push
int
push
leave
add
inc
notl
pop
ret
jno
jle
shrl
jo
dec
or
xchg
pop
and
xchg
cmc
xlat
mov
or
push
and
cmp
push
mov
dec
pop
jno
sbb
jmp
mov
int3
imul
setns
pop
sahf
push
aad
incb
cmpsb
int3
cmp
aaa
iret
loop
adc
pop
mov
adc
sub
lret
mov
je
sub
jp
jg
ss
mov
xchg
adc
sti
cmp
les
mov
insl
inc
mov
sub
mov
enter
lds
mov
jns
or
add
testb
std
sbb
cmp
scas
pusha
in
fnsave
sbb
insl
dec
sub
xor
ror
imul
jnp
ds
sbb
in
cmp
sub
mov
push
cmp
clc
out
jl
xchg
in
loope
jae
fistpl
in
aas
add
scas
dec
sti
pop
dec
fwait
icebp
sbb
mov
mov
clc
repz
pop
loop
jmp
andb
out
int
push
hlt
mov
xor
mov
mov
pop
add
test
jl
push
ret
hlt
cmp
and
add
loop
push
xor
scas
mov
inc
cmp
enter
cmp
popa
setle
mov
lock
push
lcall
jl
mov
inc
mov
sti
fs
shlb
insb
push
sbb
adc
push
xor
cmpsb
out
push
dec
adc
xor
pop
or
movl
push
lcall
mov
inc
cmpsb
popf
fidivrl
push
icebp
testb
jge
sti
mov
and
int3
push
fnstcw
lcall
lods
jo
mulb
movsb
cmc
cmp
fildll
mov
mov
fdivr
xchg
mov
jl
mov
insl
fiaddl
pop
aaa
arpl
adc
mov
ja
and
mov
and
sbb
stos
cmp
add
adc
repz
mov
xor
mov
cli
out
sahf
iret
lods
pushf
xor
aaa
fs
ret
jmp
out
scas
cmp
repnz
aas
std
in
pause
aad
mov
pop
popf
push
xchg
in
sub
in
jno
iret
inc
arpl
test
and
and
jnp
arpl
xchg
sub
aad
insl
cmpsb
lock
lret
jl
sbb
xchg
dec
arpl
sahf
fldt
or
call
push
ss
arpl
sbb
lock
mov
push
mov
outsl
mov
imul
pop
sbb
outsl
daa
loopne
inc
dec
inc
shr
mov
insb
dec
stos
in
ret
cmpsl
in
mov
sar
xchg
xchg
mov
or
cs
xor
lods
jp
push
cmp
pushf
xchg
test
cmp
pop
cmpsb
jcxz
das
mov
mov
out
or
and
jbe
jno
repnz
xchg
xor
cmp
arpl
pop
add
or
cmp
mov
popf
xor
ss
lock
mov
mov
xor
fisttpll
or
outsl
pusha
lcall
xchg
cwtl
shll
mov
popf
adc
jecxz
lods
jns
mov
inc
cli
sbb
inc
dec
movsl
dec
test
loopne
in
stc
popf
cmpsb
sbb
mov
addr16
inc
stc
hlt
fiaddl
cmc
sub
or
xchg
push
add
pop
insl
insb
pop
push
addr16
ret
jmp
adc
stc
es
mov
sbb
pop
and
push
stos
lock
push
cmp
and
ljmp
mov
adc
mov
scas
stos
xchg
dec
addl
lods
sub
xor
fcoml
mov
cmpsl
mov
jg
fsubs
mov
adc
and
dec
adc
cmpsb
js
in
clc
shl
mov
pop
dec
rorb
jmp
test
and
cmc
dec
out
fucomp
call
jle
loope
mov
push
sbb
fwait
inc
jmp
je
cltd
decb
aam
push
dec
adc
loop
sub
mov
jge
or
pop
popa
dec
fidivs
or
jp
lcall
jb
rcr
ret
out
cs
push
stos
cmp
mov
ret
jl
add
je
pop
jge
mov
outsl
in
out
dec
call
mov
dec
push
push
add
cmp
aad
push
fdiv
lock
xor
jne
addl
pop
aaa
arpl
pop
int3
mov
xchg
leave
sbb
in
push
roll
iret
loop
out
and
mov
sbb
pop
sub
das
daa
push
sbb
imul
lods
sti
pop
adc
fwait
pop
repnz
scas
sbb
jmp
test
cld
add
jle
std
add
or
mov
mov
sub
lods
add
adc
je
daa
cmc
dec
pop
mov
jbe
push
repz
sbb
adc
xlat
adc
cs
pop
sbb
xor
mov
pop
loope
cmp
popa
es
das
mov
mov
mov
mov
adc
sub
test
std
das
xor
pop
movsl
mov
test
mov
mov
push
outsl
adcb
adc
sbb
adc
push
push
scas
repz
cmpsl
notb
shrb
mov
cs
mov
lcall
push
out
jbe
push
fbstp
into
je
add
imul
xor
push
pop
adc
mov
push
out
lcall
inc
pop
iret
jmp
push
test
outsb
jnp
jg
vcvtsi2ss
shll
dec
adc
fwait
cmp
rcrb
mov
icebp
jp
cmp
xchg
mov
in
test
jae
mov
hlt
outsb
shlb
dec
mov
in
cmp
aaa
arpl
fdivrl
dec
into
sub
enter
add
fdivl
lods
xor
arpl
lods
or
adc
imul
jecxz
mov
imul
mov
add
inc
mov
fnstsw
in
xor
fstp
adc
jns
je
and
dec
cld
rcrl
ret
shlb
int3
mov
sbb
sbb
fldenv
xchg
sub
mov
mov
cmp
ljmp
and
shrb
mov
jp
xchg
push
stos
xchg
mov
ss
dec
icebp
add
dec
pushw
std
and
jae
andl
sub
sub
inc
lcall
add
mov
sbb
adc
fsubrl
addr16
addr16
pushf
sbb
cmpsb
dec
sub
scas
mov
adc
cmp
push
add
cltd
inc
aad
popf
xor
xor
movsl
sub
lods
pop
inc
inc
ret
xorl
inc
cs
and
adc
xchg
mov
cmp
xor
cmp
sbb
cmp
cmp
pop
cld
std
repz
aam
popf
stos
lcall
jmp
lahf
adc
mov
pop
call
jbe
pop
cwtl
mov
xlat
dec
aaa
dec
jae
aam
or
into
pop
mov
or
mov
add
add
loopne
jne
mov
xchg
hlt
and
and
dec
xchg
repz
cmp
pop
sarl
mov
and
sahf
sub
insb
imul
fsubrs
fcmovb
ds
dec
fstpl
inc
shrb
adc
lea
test
int3
dec
stos
das
push
xlat
mov
pop
fisttpl
aad
rep
pop
adc
sbb
xchg
dec
lock
out
loopne
test
int
out
mov
pop
loop
xor
add
std
and
xchg
or
or
testl
nop
pop
testl
stos
xor
and
mov
loopne
mov
popa
sbb
aas
xlat
sub
xor
jbe
ss
les
ret
add
leave
push
cmp
mov
pop
sti
rcll
sub
mov
int
stos
inc
cmp
xchg
jnp
add
cmp
pop
push
lds
sbb
jle
iret
insb
insl
push
cli
js
loop
sbb
jb
xor
dec
add
in
es
jne
mov
or
mov
dec
or
lret
inc
stos
push
std
aaa
inc
lds
popa
js
dec
add
sti
daa
pop
cmp
movsl
jle
adc
sub
inc
cmpsb
mov
pop
in
lret
mov
push
insl
inc
leave
jae
movsb
ret
js
push
adc
xor
sbb
fimull
push
jae
cmpb
xchg
mov
mov
aas
jle
scas
jl
jg
movsb
sbb
cmp
pop
pop
mov
fisttpl
sbb
bound
cmpsl
pushf
lea
push
inc
sub
nop
lcall
out
pop
lcall
push
repz
inc
rolb
dec
sti
xchg
cmpsb
push
enter
and
fucomi
out
mov
and
xchg
push
mov
jmp
mov
mov
clc
loope
push
in
lret
dec
pop
or
int
dec
mov
rclb
jmp
aad
mov
inc
fcmovb
dec
mov
sub
shll
in
mov
push
popf
mov
out
stos
fwait
pop
cmp
imulb
jg
mov
pop
add
imulb
pop
lret
sub
and
stos
adc
decl
fsubrp
mov
jno
mov
imul
in
scas
adc
nop
out
es
ret
mov
push
mov
in
cld
stos
xchg
enter
jl
mov
dec
xchg
pushf
fisubrs
sbb
cmp
lea
sar
out
popf
sub
or
push
leave
xchg
filds
mov
and
js
lods
mov
sbb
xchg
or
movsb
mov
popa
pop
mov
mov
fldl
fcom
mov
ret
jbe
adc
fwait
das
aad
in
push
popa
xor
adc
subb
sahf
fcomps
decb
leave
dec
xchg
or
add
rolb
or
pop
or
mov
xor
std
icebp
rcrl
or
push
adc
mov
xlat
cmp
aas
stc
mov
jae
sub
mov
stc
jmp
icebp
pop
pop
sub
out
lahf
add
push
cs
mov
xor
cli
call
nop
outsl
test
pop
jbe
mov
push
xchg
sbbl
dec
aam
push
orb
cmp
dec
xchg
inc
sti
cmp
and
push
pop
ljmp
inc
mov
js
or
pop
ljmp
sti
mov
test
lds
add
out
push
inc
into
fstp
fstps
push
jle
sub
movsb
pop
enter
mov
dec
out
idivl
mov
aad
push
add
inc
into
sbb
stos
add
lret
scas
inc
sbb
imul
add
nop
xchg
clc
and
mov
test
stos
pop
imulb
cmp
inc
fyl2x
lahf
testl
jno
jmp
mov
cmpsb
icebp
jo
mov
push
outsl
add
es
mov
sub
movsl
mov
loope
cmc
fildll
jl
jecxz
andb
or
in
push
jp
jp
sti
push
mov
clc
sbbl
mov
add
add
xchg
jns
push
cli
jg
jb
jne
push
rorl
test
lods
ret
icebp
imul
xchg
lods
dec
nop
in
sarb
add
mov
pushf
loop
test
mov
and
repnz
inc
gs
dec
jno
add
aas
inc
pushf
out
mov
adc
inc
sahf
sub
cmp
add
pop
loop
cmpsb
mov
mov
vhsubps
push
stos
mov
push
aam
inc
sub
frstpm(287
scas
xchg
sub
imul
pusha
add
data16
mov
outsb
inc
jecxz
lea
fldcw
add
pop
fldt
xor
push
frstor
arpl
lods
lock
lds
lods
mov
jnp
aaa
mov
add
push
data16
mov
adc
and
scas
pop
icebp
or
mov
das
adc
cld
std
incb
rorl
xchg
dec
insb
out
sub
mov
rcr
pop
pop
lcall
push
sub
xor
arpl
popa
imul
mov
popa
add
xor
xor
loopne
jne
lahf
mov
xorb
repnz
cmpsb
ret
int3
add
cmp
add
mov
mov
ljmp
xchg
and
dec
fwait
jmp
lcall
stc
imul
loopne
aas
inc
jb
dec
or
inc
adc
call
jbe
fiadds
mov
pop
sahf
add
push
cmp
xor
inc
in
aad
arpl
mov
pop
xchg
dec
inc
jo
sahf
lods
sbb
out
xchg
and
lods
test
movsb
arpl
dec
pop
aad
mov
inc
int3
mov
fyl2xp1
lods
cmp
xor
into
test
scas
push
adcb
in
and
sub
adc
sub
lret
lcall
call
push
stos
adc
mov
xorl
enter
int3
push
add
ds
test
int
mov
pop
jb
lahf
lahf
outsb
xchg
add
shrd
stos
insb
xor
pop
push
bnd
xchg
pop
and
sbb
jnp
icebp
aaa
daa
sbb
idiv
or
mov
mov
imul
inc
mov
inc
mov
daa
sbb
and
pop
ds
pop
pop
xchg
ret
mov
dec
cmc
inc
jecxz
je
jo
sub
pop
mov
loop
mov
pop
aad
jae
fcmove
movsb
adc
andb
cmp
sub
frstor
jecxz
push
push
repz
adc
mov
push
adc
jno
and
or
sbb
and
mov
test
test
adc
sbb
mov
dec
jp
adc
hlt
cmp
nop
or
mov
cmovl
adc
scas
pop
pusha
and
les
ret
pop
mov
nop
loope
add
adc
movsb
pop
xor
adc
inc
movsl
clc
dec
mov
int
cmc
imul
mov
adc
js
xchg
aaa
sub
adc
xchg
test
mul
mov
wrmsr
shll
out
mov
sub
adc
lods
push
lahf
push
sbb
fwait
xchg
int3
test
xchg
push
mov
fwait
shll
or
inc
sbb
or
fcoms
rcll
adc
mov
inc
add
aad
pop
lret
fldenv
scas
add
je
mov
dec
or
cli
lea
or
adc
das
mov
mov
jbe
xchg
in
ds
scas
cmp
ffree
rclb
jg
xchg
mov
pop
mov
mov
rorb
mov
mov
sbb
mov
mov
aam
gs
je
mov
ret
add
and
inc
movl
shll
test
je
mov
mov
push
push
push
jl,pn
mov
mov
push
stos
sbb
jnp
mov
mov
and
adc
adc
test
ja
and
xor
aas
lock
dec
mov
sahf
add
sub
push
out
pop
jp
ljmp
cli
fistl
je
xchg
test
inc
jne
inc
mov
shl
lahf
mov
lods
cmp
add
add
call
inc
and
or
mov
test
sahf
mov
xor
lret
sbb
add
mov
test
iret
jns
xchg
sbb
cmp
xchg
in
jg
jns
cltd
pop
rcrl
dec
mov
xchg
push
push
xchg
cmp
xor
adc
test
mov
cmc
jo
sub
sbb
jo
mov
arpl
lret
adc
lock
mov
imul
ds
jge
pop
std
push
add
sbb
cmp
andb
pop
adc
adc
out
sub
cmp
pop
dec
movsl
pushf
cli
movsb
lods
dec
fwait
in
stos
xchg
push
add
inc
in
outsb
aad
test
popa
push
push
cli
test
ds
push
clc
stc
xchg
std
fcoms
in
fdivl
aam
sbb
pusha
int
outsb
push
repnz
and
mov
cmp
sbb
lods
jae
mov
rcrb
aas
push
or
or
adc
sbb
push
jl
push
pop
cs
sbb
int
ret
dec
es
cmp
iret
testb
push
pop
sub
jae
sbb
inc
fistps
adc
js
nop
int3
xchg
test
pop
jge
push
arpl
sub
xor
mov
daa
scas
aaa
pop
imul
inc
jle
lods
xlat
cli
loopne
jmp
enter
jmp
subb
pop
cmp
insb
cmpsl
nop
xor
mov
xor
add
dec
add
add
data16
or
sahf
and
fidivrs
test
ffree
dec
clc
lds
xor
sub
xor
cmc
leave
jl
dec
scas
and
sbb
stos
jnp
adc
test
sbb
jmp
mov
mulb
gs
test
pop
push
inc
xchg
sbb
mov
jae
and
push
shll
test
orl
vpmaxsb
push
xor
enter
jp
pop
cmp
out
js
or
stc
fisttpl
dec
lds
jae
shll
jns
jae
mov
repz
outsb
test
repnz
xchg
sbb
je
in
mov
int3
cmp
stos
sbb
add
jmp
insb
mov
das
call
ficoms
test
sub
push
or
loope
sbb
ss
lds
mov
jle
lds
fisttps
inc
dec
out
mov
flds
testl
fwait
bound
je
sbb
push
ds
push
andb
inc
or
lcall
int
inc
das
daa
push
stc
mov
mov
jno
test
call
fstpl
nop
inc
lcall
andl
ds
out
xchg
push
and
popf
sub
cli
jbe
dec
cmp
add
or
jg
dec
stos
sbb
mov
lds
iret
inc
bound
fdivs
shl
inc
sbb
xchg
cmp
push
negb
cmp
js
mov
sbb
push
pop
jb
inc
or
mov
out
jnp
fs
dec
dec
ljmp
xchg
mov
sti
arpl
test
dec
xchg
push
push
fmul
mov
push
fcmovnu
loope
test
add
outsl
jge
bound
xor
jbe
jb
imul
mov
les
mov
ret
jmp
fcoms
call
into
and
jg
jo
in
dec
stc
mov
push
je
loope
xchg
cmc
cs
push
dec
mov
dec
dec
mov
or
ljmp
pusha
aam
xor
cltd
enter
push
imul
dec
xchg
fcomip
outsb
std
subl
pop
pushf
outsb
ja
ljmp
stos
in
cmp
mov
inc
sbb
and
xchg
jno
mov
inc
lds
test
rolb
dec
andl
sub
aaa
sbbb
fdivs
adc
les
in
cltd
loopne
push
push
fistpll
out
mov
fs
mov
stos
push
icebp
push
xchg
ret
jmp
push
sbb
inc
inc
mov
aad
jecxz
std
cmp
lcall
loope
call
sbb
out
jo
gs
xlat
lret
sub
jae
dec
outsl
or
push
adc
xor
add
leave
mov
out
mov
int3
rorl
or
in
mov
pop
or
mov
jl
inc
fldcw
or
aad
jbe
adcb
lods
and
rcll
in
mov
add
lea
shlb
inc
jo
xchg
loopne
aam
aaa
lea
aas
and
fisttpl
pop
stc
pop
std
adcb
push
orb
push
int
sbb
and
sarl
cmp
pop
repz
xor
ja
adc
sbb
jmp
sub
adc
repnz
aad
into
aam
sahf
sbb
push
and
ret
cs
ret
pop
aaa
inc
ss
cmp
fwait
mov
and
mov
fadd
inc
xorb
mov
int3
int3
push
ja
arpl
xchg
xor
mov
jbe
adc
cmp
xor
lock
loop
ret
adc
inc
loope
in
stc
jno
bound
aam
hlt
test
cmp
mov
popf
push
sub
fs
lret
mov
mov
push
leave
adc
push
ret
mov
out
mov
cli
pop
je
insb
repz
inc
js
lds
sarl
mov
fisttpl
aad
pop
push
jmp
imul
push
ljmp
mov
sub
ret
cli
jecxz
jle
add
xchg
xchg
lret
movsl
dec
insl
and
push
cwtl
popf
mov
push
and
mov
xchg
testl
jae
push
sub
hlt
stos
les
in
sbb
nop
in
fsubrs
inc
sbb
mov
mov
in
mov
pop
mov
push
mov
mov
and
adc
mov
dec
jge
ss
sbb
sbb
iret
pop
mov
pop
sbb
js
rcrb
test
test
push
mov
jg
stc
xor
xor
cmp
jbe
fstpl
pop
cmp
imul
push
mov
lds
mov
stos
jg
jne
xchg
dec
cld
rorl
xchg
push
mov
rcrb
push
sub
pop
mov
sub
and
movsb
or
lcall
outsl
aas
mov
call
push
inc
adc
testl
mov
dec
and
mov
stos
cmp
cmpsl
fcmovnbe
inc
lds
jnp
arpl
cmpl
out
mov
jbe
mov
dec
push
mov
hlt
jmp
sbb
lret
int
rcll
repnz
jne
push
or
out
shrb
inc
xchg
xchg
bound
push
into
push
dec
sub
jne
lock
jge
inc
scas
cmp
data16
movsb
add
addr16
and
stc
push
bound
int
sbb
push
test
out
loop
pushf
lea
pop
jae
popa
mov
icebp
pop
xchg
and
mov
xor
pop
pop
or
rorl
jmp
xor
lcall
xlat
lods
jl
daa
or
nop
lret
dec
js
pop
mov
cmp
mov
sti
repnz
sarl
ds
inc
mov
insl
pop
cmp
decl
shlb
xchg
out
outsl
push
in
mov
dec
adcb
lds
hlt
xchg
xlat
adcl
or
mov
pop
std
mov
xorl
jno
cltd
outsl
fcomps
jmp
nop
push
push
icebp
xor
sti
in
in
ret
or
cli
mov
fwait
sarl
lods
push
daa
push
adcl
cmp
mov
clc
fdivrl
cmpsb
dec
fstpl
insb
pop
pushf
adc
dec
add
mov
mov
dec
rol
add
fistpll
fcmovnb
sub
ljmp
mov
pushf
pop
cmp
and
pop
paddq
ss
jg
mov
test
lods
push
push
xchg
scas
ss
jno
inc
mov
xor
dec
cmpsb
cld
mov
jns,pn
ljmp
or
cmp
fst
adc
inc
shlb
pop
aaa
mov
popf
sub
jecxz
push
stos
cli
mov
sbb
mov
loope
jbe
mov
popf
lods
mov
hlt
ljmp
cmp
test
icebp
data16
in
xchg
and
movsb
mov
inc
bound
sub
int3
pop
jno
dec
lcall
and
icebp
xchg
clc
and
fsubr
and
jne
jne
push
dec
or
pop
in
push
jo
jge
movsl
xorb
sbb
mov
pop
mov
mov
test
gs
rcrb
hlt
lahf
mov
dec
arpl
xchg
mov
and
jmp
stos
pop
inc
insb
mov
cmovb
push
and
inc
rorb
int
sub
pop
mov
xchg
dec
cmpb
push
inc
cmc
inc
decl
mov
jb
out
mov
adc
or
mov
add
sbb
clc
bound
jno
xlat
mov
imul
lcall
and
push
push
xor
or
clc
mov
iret
imul
imul
popf
xcrypt-cfb
cmpsl
and
or
ret
pop
ret
push
mov
pusha
cwtl
mov
dec
std
cmpxchg
out
popf
movsl
and
adcb
scas
sbb
imul
repz
cmpsl
pop
test
push
jl
cli
mov
je
pop
rolb
out
jg
sub
lret
push
mov
push
int
push
pop
sarb
adc
or
je
cltd
inc
adc
repnz
leave
push
jnp
cwtl
mov
imul
in
jae
cmp
fucom
mov
jmp
lret
cmp
push
cmp
mov
call
inc
jmp
mov
add
xchg
jne
sub
sbb
repnz
pop
popa
push
pop
cmp
jae
sbb
push
scas
sbb
call
xchg
pop
jo
push
inc
test
mov
sbb
pop
dec
stos
rcll
sbb
mov
rcrl
sbb
push
inc
pop
jb
mov
jns
xchg
add
lds
aas
and
fldcw
in
sub
repnz
jge
test
add
and
cwtl
pop
sub
in
xchg
cmp
inc
test
jmp
add
pop
sbb
sbb
repz
repz
outsb
adc
int
out
in
popa
dec
outsl
add
out
pop
loop
nop
ret
ret
js
iret
xchg
in
outsb
sbb
and
sbb
pop
ret
scas
jl
addr16
pop
sbb
imul
aad
repz
mov
bound
call
xchg
xchg
outsb
lret
mov
push
std
cmpsl
xchg
cmp
fldenv
mov
lret
jg
fiadds
adc
out
mov
ljmp
jnp
cmp
std
cmp
jbe
loopne
les
movsb
gs
and
addl
jle
jmp
mov
mov
mov
push
stc
jl
jl
push
movsb
pusha
xor
dec
xor
addr16
loop
pop
mov
call
insb
sti
stos
dec
arpl
testb
hlt
jb
orl
hlt
add
mov
inc
in
rolb
in
cmc
ss
movsb
push
in
lods
clc
adc
pushf
sbb
xchg
sbb
addr16
lret
insb
ja
call
jecxz
dec
mov
test
sti
pop
ficoml
movsb
test
jle
cmc
mov
adc
mov
ja
xorl
imul
sahf
in
fwait
adc
mov
js
arpl
fwait
xchg
cmc
out
push
rolb
mov
inc
inc
imul
jnp
movsl
push
aas
jns
cli
push
mov
repnz
orl
add
sti
mov
inc
jns
jo
cmp
mov
xchg
mov
jns
das
jmp
pushf
pop
in
pop
push
push
xor
imul
sub
cmp
daa
pop
mov
mov
fidivrs
movsl
fsubrp
aaa
cmp
xor
inc
push
sub
jle
insl
cmp
inc
lret
mov
cld
lahf
fsubl
jo
jb
lahf
adc
or
addr16
into
adc
std
sbb
pop
mov
inc
or
cmp
inc
rcll
cmpsb
int
fsubp
call
rclb
xor
nop
adc
scas
test
in
add
addr16
mov
or
dec
push
inc
das
push
xlat
iret
pop
xlat
int3
cmp
mov
jl
dec
dec
mov
lret
orb
mov
dec
movsb
mov
sbb
sub
mov
lret
arpl
test
jge
rclb
mov
dec
jo
movsl
xor
add
cmpsb
mov
cmp
or
hlt
pop
inc
outsb
insb
popa
mov
stos
and
xor
adc
test
jle
sahf
cwtl
hlt
lcall
jnp
rorb
adc
repz
orb
jmp
sub
mov
cmp
dec
dec
jne
sbb
inc
loop
das
adc
loop
loop
dec
mov
lcall
inc
shl
xchg
pop
bound
jne
fistpl
cltd
test
jg
jne,pt
mov
popf
ja
xchg
jg
aam
jnp
sub
mov
jl
pop
shr
pop
enter
repz
sub
sbbl
and
das
lods
outsb
and
inc
outsb
orl
fnstsw
fsubs
dec
andl
adcb
stc
ljmp
cmp
mov
roll
mov
mov
or
ficomps
jno
or
mov
insb
jno
inc
sbb
movsl
ret
and
fwait
mov
lret
xchg
add
pop
lret
in
aad
push
push
push
mov
daa
out
loope
loop
sub
xbegin
in
push
mov
orl
push
fs
adc
pop
stos
add
and
popa
hlt
adc
xchg
cli
sbb
or
adc
cmpb
dec
mov
xchg
imul
insb
jne
or
cltd
xchg
pusha
hlt
mov
outsb
aam
xchg
or
pop
xchg
mov
fdecstp
pop
pop
cmp
call
fdivl
jge
xchg
push
pop
pop
test
cmpsl
push
mov
cmc
jns
test
push
movsl
lods
pop
loope
sti
test
sub
mov
or
in
cld
test
jns
or
xchg
xlat
add
nop
xchg
and
mov
aaa
scas
jno
dec
sub
addr16
push
push
xor
cmp
dec
add
mov
int
mov
sbb
mov
push
cmpsb
in
daa
push
or
or
scas
jl
outsb
ret
test
adc
jl
test
adc
les
xor
and
ret
push
outsb
loop
push
adc
data16
mov
jb
xchg
mov
rolb
mov
adc
in
test
pop
ret
push
daa
add
adc
fwait
je
jbe
scas
fnstsw
clc
mov
es
mov
int
add
inc
std
jae
pop
dec
inc
ret
jbe
lods
dec
lret
dec
xor
inc
cmc
xchg
cmpsb
add
sbb
dec
fsubrs
xchg
aas
dec
jns
je
xcrypt-ecb
cmpsl
or
lds
inc
jmp
cmp
mov
or
inc
and
jae
fidivrl
shr
xor
push
inc
cltd
int3
int3
jg
or
jo
mov
sbb
popa
xorb
lock
and
mov
and
jl
je
xor
test
and
add
add
push
lods
lods
cmp
clc
jo
xchg
inc
sbb
fs
mov
inc
je
dec
push
into
aam
and
in
jo
repnz
data16
mov
xor
loop
icebp
lods
fstps
jle
adc
decb
push
adc
mov
jbe
ret
clc
pop
nop
test
out
push
mov
test
je
jmp
mov
leave
aad
push
pop
imul
nop
adc
cmp
lods
ja
ret
out
ret
jbe
jns
stos
test
cmc
xchg
adcl
mulb
mov
mov
lds
lret
or
enter
and
repnz
mov
popf
and
pop
add
adcb
jb
lods
stc
push
repnz
in
in
arpl
testl
aaa
push
stos
jp
push
fidivrl
mov
mov
and
jg
pop
rcll
adc
jnp
inc
sbb
popa
push
lods
xchg
and
sub
aas
sbb
mov
inc
xor
jb
shl
cmp
incb
test
gs
xor
sub
push
jne
out
pop
sbb
hlt
mov
cli
into
lods
pushf
xchg
test
mov
and
stos
data16
lahf
or
xor
shlb
pop
dec
sbb
push
sub
cmpsb
daa
push
mov
mov
push
dec
jecxz
aam
inc
adc
sbb
fwait
and
inc
outsb
cmp
inc
mov
mov
fistpll
aaa
mov
dec
fists
jne
sbb
insl
mov
roll
ret
xchg
dec
xchg
addr16
xchg
jno
sbb
arpl
dec
jae
out
enter
mov
jle
insl
dec
or
xlat
scas
inc
aas
cmp
hlt
xor
mov
movsl
dec
je
xor
inc
push
scas
adc
inc
outsl
sahf
notl
fiadds
imul
mov
xor
mov
bound
fbld
in
out
dec
nop
into
push
popa
adc
mov
jg
dec
adc
ja
out
mov
pop
nop
bound
in
pop
mov
leave
xor
loope
popf
dec
subl
jecxz
je
and
repnz
sbb
enter
cmpsb
add
fstpt
and
xchg
imulb
dec
stos
dec
cmp
sub
pop
jmp
ret
or
cli
push
cltd
push
repnz
mov
jmp
sbb
loop
loop
jge
out
and
push
or
pop
cmp
test
mov
mov
inc
addb
clc
je
dec
nop
inc
shll
xor
cmpsl
mov
add
push
mul
inc
in
push
lret
shrl
andb
es
push
mov
jle
jmp
lcall
push
cmc
mov
dec
popa
inc
cmp
pop
jl
std
in
shlb
ret
mov
and
pop
add
xor
je
mov
jae
ficompl
adc
mov
push
mov
lock
ficomps
out
sbb
pop
orl
add
lds
cmp
test
pushf
dec
adc
mov
mov
inc
xchg
ss
out
subl
out
sub
stos
dec
jbe
ljmp
cmp
inc
subb
jno
pop
les
cmpsb
xchg
cmp
sar
sbb
push
das
sbb
out
xlat
ljmp
stos
jg
scas
push
pop
pop
fisubrl
xlat
out
sub
fisubrl
into
xor
out
push
inc
add
dec
mov
jp
pushf
or
fildll
ret
xor
pop
dec
pop
rclb
fstpt
jge
inc
notb
incl
push
cmp
std
lahf
mov
insb
aad
inc
sbb
cs
ficoml
cli
jbe
out
js
lods
sub
xchg
pushf
sub
push
loopne
sbb
cld
mov
sub
daa
dec
mov
push
in
aaa
in
sub
and
push
dec
add
or
jecxz
xor
add
push
jo
lahf
outsb
loopne
clc
inc
jo
fsubrs
test
mov
enter
jbe
inc
push
shlb
inc
shl
add
out
arpl
mov
cmp
fisubl
mov
mov
aas
xlat
jl
jnp
xchg
test
lods
pop
rcrl
test
sti
xor
outsb
mov
mov
ljmp
xchg
je
test
popf
xlat
sbb
loope
scas
cmp
aaa
lods
popf
mov
loop
stos
inc
xor
mov
xchg
aaa
push
fldenv
lods
adc
ja
cmpl
pop
cmp
inc
mov
aad
xor
sub
aam
xchg
push
int3
pop
cmc
aam
inc
push
js
jo
sbb
push
mov
outsl
xor
mov
inc
les
test
mov
xlat
jmp
bound
outsl
and
fndisi(8087
das
test
mov
in
pop
push
xor
out
fcmove
dec
push
push
jo
jb
cmp
jns
cltd
sub
pop
leave
clc
xchg
rcrb
cmp
rorl
sbb
push
enter
mov
mov
and
mov
mulb
jl
adc
push
sbb
xor
rclb
orb
loope
mov
mov
jae
repnz
fistpl
or
incb
cld
lds
addr16
popf
repz
fcompp
dec
shlb
cmc
add
mov
mov
push
outsl
inc
push
aam
xchg
dec
jge
jb
cld
enter
xchg
adc
mov
out
pop
loope
sbb
pop
fwait
inc
roll
pop
fdivr
test
sbb
mov
cli
and
ficoml
sbb
je
insb
sub
lcall
mov
nop
cmpb
add
ret
fildl
mov
cmpsl
scas
mov
xor
pop
sub
test
jg
das
pop
fdivrs
mov
pusha
adc
rorb
dec
push
jmp
push
neg
lods
xlat
jle
in
xchg
fs
mov
inc
ja
das
inc
les
xchg
dec
stos
ss
bound
rolb
jb
push
xchg
add
xchg
pop
movsb
movsl
std
ret
dec
aad
shrb
sbb
add
xorb
fs
js
pop
icebp
in
mov
fildll
es
ljmp
fldt
lcall
jnp
jl
dec
xchg
cltd
cmp
push
ljmp
sub
or
add
push
mov
pop
insl
mov
out
or
xchg
test
lock
cmp
cmpl
sub
jecxz
les
data16
mov
cmp
nop
jne
pop
add
xchg
hlt
jnp
and
hlt
in
das
cmpsl
sub
cmp
xchg
adc
xor
push
aas
inc
mov
or
repnz
out
push
push
aas
fwait
mov
in
rcl
and
stos
cmp
jle
call
adc
xchg
rolb
cmp
lods
stc
jne
xchg
jl
cmpsb
mov
in
popa
fucom
daa
jge
mov
and
mov
lods
push
sub
push
lea
pop
outsl
xchg
cli
add
xchg
scas
ds
mul
and
mov
mov
ds
sub
inc
jns
lret
enter
sbb
push
lds
sbb
push
mov
paddw
cmp
cmc
loope
out
dec
dec
out
dec
mov
outsl
sbb
pop
xchg
xor
fs
lahf
jmp
imul
fdivl
mov
test
mov
int3
decl
mov
nop
sbb
mov
ficoml
out
cs
jae
outsb
sbb
jp
int3
xchg
dec
mov
leave
js
or
mov
jo
xadd
jl
add
decb
std
adc
xlat
lar
mull
push
loopne
fs
addr16
enter
mov
xlat
cmp
push
ss
fldl
jmp
and
pop
stos
imul
mov
arpl
into
dec
jae
and
ret
jbe
clc
or
push
ljmp
sub
out
jge
push
shlb
jne
push
call
lret
ljmp
pusha
popa
popf
stc
xor
std
shlb
xor
xchg
cltd
inc
mov
jae
jl
imul
addr16
lods
and
pop
aas
mov
std
ja
loope
mov
sub
jg
sbb
std
jmp
push
mov
fstpt
sbb
dec
xor
cs
es
filds
iret
popf
popa
es
dec
popa
mov
dec
mov
jmp
or
pop
jne
aad
push
repz
cmp
std
movsl
and
dec
xchg
int3
popa
imul
enter
sar
xor
es
mov
sti
mov
xchg
jbe
fists
rol
pop
add
ss
push
sahf
add
xor
add
push
and
sbb
aad
inc
mov
add
lock
popa
mov
ja
and
jp
jg
fadd
int3
and
repnz
lcall
inc
mov
dec
rorl
push
pop
and
ss
sar
push
test
es
scas
cmp
je
orb
sbb
mov
push
out
cmpsl
insb
stos
inc
loopne
into
cmpsl
cmp
xor
ds
enter
add
sbb
sub
mov
and
mov
push
xchg
test
orb
adc
cli
pop
ja
jb
je
cmp
gs
sbb
mov
and
leave
cld
je
sbb
sub
inc
lea
movsb
int
lcall
movsb
adc
fimull
push
push
mov
fwait
into
aaa
ret
cmp
imul
inc
mov
adcl
add
out
gs
movsl
movsb
push
out
mov
add
pop
or
iret
push
es
sbb
mov
adc
movsb
cmp
mov
leave
mov
rcll
or
insl
shll
pop
incl
jl
cmc
dec
mov
xchg
lds
push
sbb
push
out
mov
mov
insb
pop
and
mov
lea
mov
mov
imul
in
into
and
adc
js
xchg
js
and
jge
ljmp
sti
test
test
stos
adc
test
inc
and
js
jp
aaa
pop
leave
push
mov
cmc
xchg
ja
int
and
daa
cmp
out
mov
in
xlat
test
jae
fistpl
out
cmpb
or
fwait
xor
xlat
fcoms
cld
add
and
pop
jp
fdiv
or
or
pop
or
jmp
lods
call
push
sbb
inc
sub
cmp
mov
adc
jg
xor
xchg
in
enter
jecxz
pop
pop
dec
cmpsb
mov
insb
test
dec
mov
adc
xlat
pushf
jno
mov
cld
aas
test
cmp
cld
bound
jp
pushf
mov
loope
sbb
cli
loop
not
fs
movsl
bnd
hlt
push
xlat
lods
add
fsubrs
mov
les
and
sbb
jb
sub
push
lcall
lcall
int3
movsb
clc
out
in
cmpsl
xchg
mov
lods
and
ud2
rorl
or
jp
jnp
pop
shlb
in
mov
stc
mov
nop
or
push
mov
jg
push
mov
mov
push
repz
jno
jae
push
mov
ret
jns
stos
inc
aas
inc
std
or
ds
movsb
lahf
in
outsb
in
cmp
into
push
mov
push
push
std
ret
ds
xorb
pop
stc
arpl
jnp
and
aad
or
push
stos
divl
cmp
adc
dec
push
mov
hlt
out
fyl2xp1
mov
bound
add
notb
and
inc
lods
or
sbb
arpl
repnz
mov
dec
js
mov
jmp
lods
fstps
nop
mov
pop
sbb
insl
pop
or
sets
jae
bound
cwtl
sti
mov
fsubr
insl
stos
jge
int
lret
nop
xchg
xchg
nop
sbb
data16
adc
cs
xchg
adc
sarl
push
pushf
jmp
jecxz
repz
jb
movsb
das
push
into
ret
cltd
outsb
jae
jne
pop
cmp
lret
jnp
dec
xor
push
popf
xchg
xor
inc
fdivr
pop
stc
xchg
mov
shl
pop
mov
push
test
mov
ss
add
stos
inc
rcrb
push
lods
cwtl
add
or
fwait
push
outsl
mov
or
scas
sbb
dec
sbb
jo
neg
pop
mov
imul
ja
mov
insl
sahf
jnp
sbb
iret
cmp
ret
out
add
pop
sbb
mov
lds
pusha
ret
inc
and
mov
out
ljmp
cmp
cmp
aas
addb
addr16
ds
mov
mov
mov
pushf
icebp
mov
mov
jl
sbb
mov
cmp
push
cmpsl
out
mov
in
cld
lcall
xchg
arpl
orw
xor
daa
iret
mov
or
push
ja
fstpt
sub
adc
lret
inc
xor
lahf
mov
cli
and
int
push
in
mov
push
xor
frstor
jae
jp
sbb
or
ljmp
xor
fistl
cmc
mov
ja
int
sbb
adc
mov
and
lods
jecxz
or
aaa
ret
mov
push
jmp
fistps
mov
test
push
or
insl
jmp
int3
sub
dec
loope
loopne
or
push
adc
out
repnz
cwtl
mov
aas
mov
jge
pop
dec
sahf
sti
mov
addr16
std
sti
and
repz
sbb
or
sbb
pop
ljmp
popa
sbb
xchg
stos
jp
push
fadds
inc
sbb
ret
pop
mov
mov
cmpsl
mov
int
lahf
sbb
insl
jbe
loope
dec
add
into
pop
inc
gs
jae
mov
mov
xchg
je
push
inc
push
cmpsl
aam
nop
fcompl
aad
insb
push
jne
arpl
sbb
out
cld
addr16
and
cwtl
add
data16
and
push
out
rcrl
data16
push
pop
or
out
popf
movsb
loopne
cli
test
push
jbe
shlb
fsubrs
insb
int3
xor
enter
jae
mov
jmp
dec
or
push
adc
xor
out
xor
in
cmp
ret
sub
fwait
mov
pop
xchg
dec
cmp
mov
out
rcl
shll
mov
scas
sub
lock
jnp
xor
lds
cmp
call
xchg
inc
mull
mov
roll
aaa
mov
mov
mov
and
lock
rcrb
stos
jae
xlat
aas
xchg
mov
mov
dec
mov
iret
imul
fs
aam
mov
and
add
push
roll
or
iret
bound
stos
icebp
daa
cmpb
sbb
push
cmc
cltd
pushf
push
movsb
push
xchg
mov
xor
ljmp
mov
xchg
jp
es
outsb
adc
adc
icebp
inc
out
xor
sub
jns
jmp
aaa
mov
inc
push
in
sub
movsl
loope
das
or
jns
sub
fldz
mov
js
mov
fimuls
dec
cmp
jg
pop
lds
add
mov
arpl
adc
cs
adcb
adc
cmp
or
jl
pop
push
inc
xor
ret
out
mov
cmp
sbb
dec
inc
daa
jge
imul
lret
add
push
sbb
pusha
stos
push
mov
adc
jge
mov
in
loop
lret
dec
pop
adc
fstpl
ficomps
xor
adc
and
fs
xchg
mov
and
adc
jle
test
je
xchg
cmc
es
rclb
js
imul
and
mov
mov
scas
ss
push
xchg
jo
and
loopne
or
sbb
nop
cmp
pop
stos
insb
lret
stos
push
or
scas
subl
aad
push
sbbl
inc
jae
adc
or
cmp
xchg
cmp
mov
das
in
jns
in
popf
inc
xchg
mov
sub
add
out
cmc
lcall
aam
cli
pop
clc
es
jg
dec
cli
dec
pop
fcoml
jae
xchg
shll
out
insb
jmpw
cmp
scas
and
insl
icebp
pop
add
adc
popa
jl
mov
popf
and
sub
pop
out
fiaddl
adc
lret
std
cld
adc
pop
pusha
ds
bound
sarl
scas
imul
dec
push
jbe
sti
or
fsts
add
sub
mov
xor
push
or
and
or
sub
push
test
pop
pop
mov
inc
mov
fcoms
divl
add
arpl
and
add
rol
push
es
and
xor
test
pop
movsl
mov
aas
cs
push
das
hlt
js
fcmovb
jb
fwait
xchg
xor
adc
shl
cmp
fisttpll
mov
imul
fists
mov
jl
push
dec
lret
int3
xor
outsb
and
mov
imul
xor
add
push
shrb
push
andb
aad
jne
push
cwtl
dec
and
sub
scas
xorl
std
adc
jbe
in
push
mov
fistpll
sti
dec
pop
dec
jae
xchg
aad
jmp
arpl
ficoms
push
xchg
inc
cmp
fs
mov
js
xor
cmp
xchg
inc
lods
pop
mov
mov
or
ret
or
jno
lahf
in
imul
out
aad
adc
fbstp
adc
daa
data16
adc
dec
or
fnsave
mov
dec
cwtl
mov
sbb
mov
pop
mov
roll
push
cs
mov
mov
in
mov
aas
dec
cmp
inc
sub
mov
aaa
subb
mov
cmp
repnz
pop
xchg
add
and
jb
gs
mov
nop
movsl
xor
inc
push
xor
jne
repz
adc
es
shr
std
xor
mov
aam
ss
bound
xchg
mov
es
bound
mov
or
mov
hlt
push
mov
add
subl
fnstcw
push
mov
sub
insb
sarb
jp
lcall
and
mov
ret
icebp
test
inc
lods
fwait
shlb
add
fs
mov
sbb
test
imul
out
adc
fdivl
dec
mov
ficoms
pop
inc
je
bound
fmull
adc
and
pop
pop
add
jl
fildll
inc
sarb
lret
in
lods
subb
out
dec
sbb
in
imul
test
push
mov
cli
mov
enter
gs
mov
mov
ret
dec
stos
inc
and
jno
cltd
and
add
mov
popf
xchg
imul
repnz
cld
shrb
cmc
mov
jmp
ds
cwtl
aam
push
pop
mov
sbb
mov
jno
setg
dec
push
dec
stc
in
rorl
mov
jle
psllq
popf
pop
daa
pop
mov
cmp
out
clc
je
jae
push
mov
shll
mov
pop
jg
mov
cmp
add
aaa
lret
sub
addr16
mov
movsb
fs
lahf
sbb
mov
pop
inc
inc
js
ficoml
in
dec
repz
out
mov
sbb
aaa
push
cmc
pop
sub
orl
sub
xlat
stos
cmc
dec
or
mov
inc
jno
jmp
mov
les
loope
inc
sbb
aad
mov
sub
sbb
or
or
and
call
popf
je
push
inc
jecxz
and
sbb
sbb
mov
scas
and
or
jb
icebp
cmp
lea
aad
inc
jmp
aaa
aad
adc
subl
sbb
addb
xor
cmp
mov
aam
jne
xor
dec
cld
dec
cwtl
push
add
dec
je
call
inc
aad
pop
out
scas
sbb
test
cltd
data16
andb
lea
shll
jg
xchg
cmp
hlt
pop
add
sbb
sbb
add
in
imull
jg
pop
mov
or
xor
es
or
clc
push
outsl
ljmp
xchg
xor
loop
shl
enter
sub
ljmp
sbb
arpl
inc
fs
adc
push
or
mov
push
imul
fidivl
subb
push
in
push
insl
rorb
cwtl
sub
xor
push
shrb
xchg
push
scas
test
pop
flds
xchg
out
mov
pop
cmp
sub
pop
vpand
popf
lea
push
dec
xchg
jb
lea
jb
nop
test
shrl
jbe
sti
stos
movsl
hlt
cli
leave
test
jo
out
popa
jb
add
pop
jns
cmc
sub
jno
inc
cmp
imul
je
cmc
cmp
xchg
cli
rcll
cltd
dec
andl
ret
jne
add
cmp
in
stos
cmp
sbb
cmp
add
cmp
test
jns
outsb
in
push
cs
mov
ja
and
nop
sbb
mov
xor
lcall
xor
xor
inc
jmp
ja
in
out
test
push
mov
mov
jmp
mov
test
test
jp
call
loope
pop
cmp
adc
cmpsl
aaa
adc
je
mov
sub
icebp
jmp
mov
sub
jo
xchg
xor
adc
xor
out
mov
ja
cmp
test
or
jb
sub
ja
aas
add
les
push
xchg
mov
fisttpl
das
jb
leave
pop
mov
inc
mov
and
fsts
cwtl
js
loopne
or
xchg
mov
inc
push
shr
lcall
cmc
inc
repnz
pop
aaa
pushf
inc
xlat
leave
out
es
std
xchg
fisubrs
scas
or
xlat
rcl
out
add
stos
adcl
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
fsubrs
popa
mov
daa
outsl
outsb
fistps
fwait
pop
dec
out
and
icebp
test
les
mov
add
mov
in
dec
iret
sub
aad
dec
mov
lods
add
fisttpll
bound
cli
stos
lret
orb
xchg
cwtl
sub
insl
jb
jno
popa
iret
lahf
fcomps
xor
iret
dec
out
mov
xchg
aas
dec
jae
stc
test
sub
cmp
shl
mov
fs
xor
sbb
cmp
jno
sbb
or
push
rcrb
xchg
add
xchg
jne
dec
jge
lea
les
fs
into
dec
faddl
jno
and
ss
jne
into
iret
fcoms
adc
jp
fdivs
stos
je
push
les
insl
dec
popl
jge
mov
push
xchg
popa
push
jae
dec
in
mov
sub
gs
xor
or
hlt
imul
sarl
loop
test
mov
cs
push
sub
mov
add
or
addl
das
xchg
push
xor
dec
hlt
stc
adc
dec
jg
inc
jge
mov
stc
scas
adc
test
outsb
push
mov
push
rcll
mov
cmpl
and
nop
jp
jne
push
stc
pushf
and
inc
mov
sbb
test
lret
push
shll
jl
stos
sub
xchg
jne
imul
setae
icebp
mov
sbb
scas
popf
inc
add
stc
mov
shll
aas
jp
jb
sarl
pop
ja
mov
or
imul
orb
xchg
push
push
mov
or
les
ret
dec
popa
and
bnd
jge
adc
ljmp
mov
dec
stc
call
mov
out
push
jns
inc
jl
mov
push
fmull
inc
ret
jg
mov
gs
sub
inc
fldenv
inc
adc
jb
jnp
sti
cmc
lret
pop
dec
in
shl
movsl
rcrb
push
mov
dec
imul
xchg
insb
push
rorl
hlt
pop
test
dec
js
sbb
int
pop
jo
or
adc
sbb
pop
in
push
sbb
adc
lret
cmp
or
mov
scas
aaa
pop
out
jecxz
rolb
jo
stos
xchg
in
into
in
es
push
inc
jecxz
test
fiadds
add
dec
stos
lods
xor
mov
adc
cmp
dec
jbe
jle
mov
bound
js
push
out
jnp
pop
jbe
fistpll
xor
push
sub
add
sbb
xor
fimuls
push
pop
push
mov
dec
mov
sub
dec
cld
add
sub
cmp
mov
mov
cs
jge
adc
inc
adc
out
jle
scas
bound
lret
leave
aaa
int3
repz
inc
bound
imul
add
mov
data16
fldenv
lcall
insb
sub
scas
sbb
dec
sbb
and
add
mov
pop
sbb
in
cmp
pop
sub
cld
icebp
insb
mov
lret
mov
jae
sbb
mov
pop
jne
fwait
repz
fadd
push
cmp
mov
mov
shrl
push
popf
out
mov
mov
repnz
push
mov
loope,pt
je
sbb
push
sarb
mov
pop
push
das
fcoms
pop
xor
addr16
mov
aas
fsubl
sbb
jle
rcll
shr
test
add
fstl
add
push
insl
iret
mov
lret
frstor
call
push
and
out
mov
outsb
vmulps
in
xor
mov
fnstenv
sbb
add
push
push
in
hlt
popa
fcmovne
inc
into
out
loope
clc
popa
mov
pop
mov
ret
xor
sbb
fcmovnbe
push
cmc
dec
in
sbb
xor
xchg
mov
rcll
jnp
lock
stc
lds
ret
dec
cmp
icebp
fadd
mov
inc
pop
push
inc
pop
popl
aad
push
stos
shl
cmpps
mov
int3
or
mov
mov
mov
cmp
rorb
xchg
xor
mov
sub
sub
add
pop
sbb
cltd
out
and
clc
shrl
jns
lahf
ja
lret
ret
fstpl
mov
cwtl
adc
out
into
inc
inc
dec
mov
mov
jae
cmpsb
fsubl
add
fldt
or
mov
cmp
sub
sbb
dec
loopne
mov
inc
pop
sub
sub
dec
call
dec
iret
push
in
add
inc
adc
out
out
out
jnp
popa
adc
and
add
cwtl
outsb
xchg
js
jbe
xor
mov
shlb
mov
out
add
test
loopne
xor
fldl2e
jo
push
lods
fs
fdivl
dec
aas
rcr
sbb
push
push
rorl
ljmp
loope
dec
jmp
pop
xchg
sbb
adcb
sub
cmpsl
imul
inc
jbe
mov
pop
lods
scas
pop
es
lods
mov
pushf
adc
inc
mov
mov
dec
insl
ja
loopne
loope
sbb
bound
pop
sbb
cltd
enter
mov
seta
ret
mov
xchg
pusha
lret
mov
shlb
incb
cmp
je
lods
mov
inc
cmp
dec
pop
out
mov
lods
cmp
shlb
xchg
jb
jle
mov
xchg
scas
jnp
sub
cltd
sub
rcl
add
sub
outsb
ret
push
sub
mov
and
mov
test
mov
aaa
addr16
or
push
inc
es
dec
pop
jp
mov
dec
in
push
xchg
call
loopne
nop
loopne
psubsw
cmp
fsts
daa
retw
es
jno
mov
jb
mov
jnp
cmc
pop
pusha
aam
sbb
jb
in
filds
push
int
popf
stos
divb
inc
lret
jne
sub
jnp
mov
fdivs
inc
push
je
inc
fsubr
mov
cmp
ret
jns
loope
popf
add
cmp
pop
xchg
ret
jns
fs
sub
xchg
fiadds
popa
stos
leave
addl
lea
nop
mov
repnz
repz
lods
ret
push
mov
pusha
xor
and
lock
adc
and
add
fisttpll
lret
jne
fdivrs
js
ja
rcrb
mov
test
out
movsb
test
test
sub
inc
cld
adc
test
lds
fs
and
mov
xor
addb
mov
mov
in
lret
pusha
sti
xchg
inc
in
add
lods
outsb
movsl
imul
out
pushl
addr16
pop
int3
ret
insb
push
add
jg
sahf
jo
xchg
sub
pop
pop
mov
inc
pop
push
loop
lods
or
stc
mov
mov
mov
jbe
xor
shrb
or
jno
push
jae
mov
out
shll
push
push
lret
cmp
lock
inc
jns
stc
sbb
cmp
shll
sbb
daa
push
mov
adc
adc
in
fiaddl
xchg
push
jecxz
xor
sbb
xchg
xlat
xchg
push
lods
xchg
xchg
dec
or
icebp
cmpsb
lret
and
push
dec
popa
jecxz
sbb
dec
aaa
ret
mov
and
xor
mov
scas
lahf
out
push
mov
decl
push
nop
test
push
dec
scas
and
or
out
lcall
stc
mov
add
jmp
adc
dec
mov
pop
inc
imul
adc
mov
mov
nop
add
sbb
and
rcl
sahf
jecxz
cmp
fbstp
and
add
mov
push
shlb
arpl
sti
ret
jp
shrl
cmp
xlat
daa
add
das
mov
pop
das
xchg
sub
sahf
lcall
sahf
in
mov
clc
push
or
ss
xchg
dec
xchg
test
pop
pop
sub
mov
ret
lcall
or
xor
nop
ljmp
repz
scas
mov
add
push
push
mov
pop
fbstp
dec
fistps
dec
push
fst
pop
outsb
inc
mov
dec
ds
mov
cmpsl
cld
pop
bound
scas
inc
sub
and
stc
sbb
out
mov
jne
loop
in
add
sbb
sbb
sbb
les
xor
fldcw
cmpb
cmp
push
stos
jno
pop
inc
push
adc
dec
xchg
xor
dec
add
lahf
sub
pusha
in
jbe
jmp
test
pop
mov
inc
inc
fst
xor
repnz
mov
stos
push
mov
dec
dec
cmp
ffreep
xchg
xchg
loopne
sbb
mov
push
ret
dec
notb
fadds
sub
divl
les
insb
or
shl
leave
pop
fdivrs
mov
lret
or
or
mov
inc
push
stc
push
fbstp
movsl
dec
xchg
jb
inc
sarb
mov
xchg
arpl
mov
cmp
js
bound
fs
call
jb
sti
mov
mov
or
jb
bound
xchg
sub
fistpll
jo
ds
xor
push
push
loop
out
into
push
insl
xchg
sarb
sahf
sub
rol
lds
or
adc
adc
fptan
je
call
pop
inc
or
inc
jmp
dec
arpl
mov
out
jmp
mov
and
in
cmp
push
jo
testb
insb
sar
enter
ja
aad
xlat
fistpl
mov
cmp
xlat
cmp
and
cwtl
cwtl
sub
mov
sbb
call
mov
gs
adc
icebp
hlt
mov
jecxz
shlb
arpl
clc
adc
les
aad
pusha
xorb
fisubs
clc
dec
cmc
mov
and
test
sti
add
pop
imul
or
inc
int
pop
lods
cmpsb
nop
ret
xchg
xor
jl
hlt
adc
mov
add
out
or
sub
xor
sbb
in
fnstsw
xorb
testb
cmpsl
lahf
add
mov
or
je
pop
outsb
cli
cmp
lods
imul
sub
aam
insl
sub
imul
sbb
sbb
outsb
stos
into
jae
scas
cmp
int3
add
push
cwtl
xchg
lock
nop
notl
inc
inc
jecxz
fwait
sub
lret
iret
rcl
repz
cmpsl
mov
popf
mov
faddl
sbb
fiaddl
inc
imul
fs
outsl
mov
out
sarb
or
or
inc
inc
scas
fs
cmp
decb
mov
push
int
aas
xor
pop
fs
sti
and
std
push
adc
push
jp
lcall
or
or
stos
fmuls
ljmp
xchg
aaa
push
mov
jle
add
inc
shll
loopne
mov
xorl
push
int3
dec
in
stc
push
stos
push
nop
fdivs
jno
in
inc
inc
and
mov
xchg
ret
repz
xor
faddp
inc
ja
jg
repz
inc
jb
mov
jg
insb
lret
adc
push
mov
lcall
movsb
dec
mov
xor
sub
in
ret
adc
cwtl
mov
cld
stos
std
mov
fstpt
or
iret
sub
je
mov
inc
or
ds
aad
inc
dec
stos
mov
sub
cmpsl
push
mov
test
movsl
jge
xchg
xchg
mov
cmp
stos
cmp
mov
sub
arpl
cltd
mov
add
in
sbb
dec
push
ret
sti
lret
lea
test
mov
std
jge
push
sti
loope
jnp
sub
addb
xchg
stos
dec
loop
lea
jns
lret
inc
mov
ss
dec
fnclex
xchg
cmp
cld
insl
lds
add
add
add
add
inc
xchg
and
sub
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
shrb
outsb
add
outsb
add
