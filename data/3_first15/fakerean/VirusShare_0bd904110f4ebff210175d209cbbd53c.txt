push
mov
sub
push
call
mov
cmpl
jne
mov
mov
pushl
mov
mov
call
pop
mov
dec
mov
cmp
je
movl
mov
imul
mov
mov
imul
mov
mov
add
mov
jmp
push
call
mov
leave
ret
push
mov
push
push
mov
mov
inc
xor
mov
mov
cmp
jne
mov
add
mov
mov
mov
div
imul
or
sub
mov
mov
xor
inc
jmp
mov
add
push
mov
push
add
pop
mov
div
mov
pop
sub
shl
mov
shr
or
sub
imul
mov
or
pop
pop
pop
ret
int3
or
and
fisttpll
add
jge
cld
push
test
inc
jp
pop
leave
popa
mov
movsl
jle
dec
mov
sbb
andb
xor
jecxz
jb
add
cmp
sub
jecxz
test
inc
xchg
add
ds
or
cli
add
mov
push
and
add
dec
add
cld
sub
divb
popa
push
jne
stc
cld
xchg
mov
xchg
push
or
stos
add
cmp
sbb
inc
insb
negb
in
les
loope
cld
push
add
inc
mov
push
clc
jecxz
ds
pop
and
xchg
cmp
hlt
add
add
add
or
and
add
xchg
cmp
push
out
xchg
lahf
inc
insl
mov
dec
mov
and
or
or
push
repz
test
loop
rolb
shr
enter
jb
enter
sub
add
pop
cmc
mov
inc
lret
mov
add
fsub
or
dec
adc
add
shrb
inc
add
das
lock
add
xchg
xchg
jg
mov
adcl
shrb
imul
xor
in
cmp
push
xchg
and
mov
insl
out
lods
inc
jl
jne
out
imul
mov
pop
inc
jmp
add
sti
scas
add
gs
in
cmp
push
and
push
dec
jecxz
cmp
popf
inc
gs
popf
push
lret
mov
enter
xchg
pop
pop
adc
fimull
xchg
mov
add
and
push
add
or
mov
push
add
je
jle
clc
lds
xchg
ret
sbbb
add
pop
inc
pop
add
inc
add
and
rcr
add
jne
add
out
test
push
add
add
mov
loop
in
dec
ret
stc
and
shr
mov
push
test
fs
aam
add
aam
data16
mov
addr16
dec
outsl
add
popf
and
mov
adc
int3
aas
xor
repz
lea
cmpsl
out
stc
movl
mov
stos
lret
add
inc
add
add
test
add
in
shll
pop
ret
sub
cmp
dec
sti
lahf
sbb
push
mov
sbb
cli
jl
test
push
pop
pop
and
fiaddl
add
and
adc
add
xor
add
jnp
mov
inc
dec
test
mov
add
ret
push
pop
sbb
jecxz
or
fstps
dec
nop
jge
sahf
enter
mov
mov
pop
aam
pop
scas
push
nop
adcl
addr16
push
add
ss
ljmp
inc
xchg
add
dec
aad
xchg
repnz
popf
repz
leave
add
jmp
jno
add
adc
xor
test
lods
xchg
push
fcmovnb
inc
shlb
and
push
loop
test
mov
pop
sbb
inc
dec
fisttps
xor
pop
into
add
adc
aas
ljmp
cmp
stc
add
sub
inc
call
add
jle
gs
pop
lret
jo
stos
int3
mov
pop
call
jge
mov
stos
inc
add
out
add
mov
sbb
xor
mov
dec
lods
push
sub
call
fistps
nop
or
add
in
out
xchg
jmp
lret
ret
imul
movsl
mov
add
fsts
ret
in
pushf
inc
enter
add
stc
add
jp
jne
out
daa
mov
out
mov
cmpl
add
pop
add
jne
adc
adc
in
cmp
and
cmc
sbb
pop
add
fs
je,pn
mov
add
test
push
mov
pop
jnp
idivb
push
adc
lahf
sub
add
ljmp
xchg
jbe
cld
lock
adc
addb
cmp
add
mov
adc
mov
inc
pop
sbb
in
push
add
mov
lret
mov
inc
xchg
mov
add
add
testb
repnz
lods
inc
sbb
mov
add
xor
push
push
add
sub
jne
mov
mov
xorl
sub
mov
add
add
adc
adc
and
mov
xchg
sbb
lea
lret
into
movsl
sub
repnz
add
push
push
andb
dec
mov
stos
cmp
or
imul
mov
mov
push
jl
add
add
mov
aam
fwait
lock
lcall
xchg
js
pop
sti
or
push
sbb
pop
pusha
lock
repnz
sub
ror
mov
xchg
jg
pop
xor
in
pushf
cltd
sub
mov
pop
sub
dec
xor
add
shrb
add
mov
enter
add
mov
xor
sbb
test
hlt
packsswb
and
xchg
jp
hlt
add
dec
lods
ja
add
test
insl
or
shll
or
and
cmp
and
adc
inc
add
adc
cltd
in
mov
sarb
roll
sub
sbb
popa
dec
dec
sbb
xchg
lcall
mov
add
fs
pop
add
jle
or
ficomps
hlt
hlt
fwait
je
cmp
sti
sti
mov
pop
push
pop
mov
call
cmp
or
sub
pop
mov
add
dec
cs
xchg
dec
dec
mov
sub
push
lods
mov
push
loop
jo
add
bound
xchg
add
loop
and
inc
movb
xchg
imul
popa
sahf
xchg
jge
clc
add
inc
dec
scas
add
ds
add
hlt
ret
push
xchg
adc
sub
roll
lods
dec
push
pop
xor
add
gs
jmp
fwait
inc
fiaddl
xchg
in
or
or
jp,pn
inc
mov
sbb
jg
loopne
js
cmpsl
shrb
mov
ret
adc
mov
lods
fistps
and
cmp
ss
add
add
add
mov
and
push
test
in
cmpsl
mov
add
jnp
lahf
xchg
push
cmp
inc
outsb
push
enter
sub
jle
and
call
mov
or
adc
sub
in
dec
adc
es
and
cmp
mov
es
pop
add
aad
add
push
add
stos
cmp
push
mov
inc
sub
nop
arpl
jecxz
arpl
lds
inc
jl
add
push
push
adc
xor
add
int
push
add
pop
dec
push
movsb
test
dec
scas
int3
dec
dec
test
sbb
dec
jns
add
nop
stc
pop
icebp
add
add
pop
cmp
andl
mov
add
fldenv
std
rcrl
add
cld
fisubl
xchg
mov
or
add
push
les
jne
add
data16
icebp
inc
add
push
popf
add
push
rorb
xchg
xor
add
mov
pop
sbb
popa
xchg
mov
mov
inc
mov
cld
cwtl
xchg
jle
mov
out
pop
jp
push
js
in
inc
sbb
icebp
loopne
int3
call
rcll
xor
jbe
cmp
ja
add
lock
and
xchg
push
bound
les
push
cld
sub
lods
jg
repnz
iret
jecxz
add
xchg
loopne
xor
pusha
mov
inc
add
cmp
mov
nop
add
jmp
mov
scas
mov
andb
mov
addr16
cltd
mov
js
stos
cmp
push
adcb
mov
cmp
mov
push
add
add
cmp
adc
cltd
orb
xchg
into
stos
mov
add
into
inc
jbe
sub
pop
out
push
adc
adc
cmp
xchg
add
dec
fidivrl
xor
imul
orb
movsl
add
mov
xchg
cmc
leave
push
push
or
add
and
inc
popa
sarl
mov
xor
lcall
add
dec
sub
dec
add
sarl
js
mov
out
dec
popa
jp
ljmp
iret
outsl
in
push
sbb
push
imul
xchg
es
add
int3
inc
in
mov
int
hlt
js
add
xchg
jg
inc
xchg
jl
sbb
xor
adc
pop
jo
add
ds
add
insl
mov
pop
jno
pop
lret
pusha
pop
in
adc
jo
pop
popf
sahf
lds
test
mov
fcompl
dec
fcmovnbe
push
jle
fmuls
lock
adc
push
scas
push
movsb
mov
dec
push
lods
add
or
dec
aaa
adcl
jns
cmp
mov
jle
pop
xorb
add
add
loop
xor
pop
jmp
jl
and
std
in
mov
sub
cli
mov
int3
xor
xchg
testl
add
cmpb
insb
mov
pop
lea
add
xor
icebp
or
pop
pop
xor
loopne
test
into
outsb
add
das
adc
hlt
inc
stos
sti
jb
test
and
ret
test
imul
push
add
bound
bnd
mov
add
stos
add
dec
lea
add
xor
xchg
dec
mov
iret
pop
xchg
adc
sub
add
dec
jmp
in
and
ficompl
and
mov
add
add
pop
pop
hlt
add
cwtl
xor
cltd
shrb
int
popf
movsb
sbb
daa
dec
push
xchg
mov
das
cmp
mov
stos
mov
lock
mov
rorb
xchg
push
fcoms
mov
test
in
inc
rcll
jno
sbb
and
sbb
gs
lea
or
imul
adc
ljmp
fistps
cli
add
push
and
mov
cld
paddsb
imul
xchg
test
mov
add
mov
ret
jns
addl
adc
xor
jbe
pop
shll
fwait
and
adc
pop
jb
xlat
push
push
pop
xchg
movsl
inc
insb
sbb
movsl
mov
add
aaa
add
aad
pop
push
cmp
sbb
xchg
adc
outsl
sarl
rorb
add
roll
pop
jp
add
cs
pushf
out
imul
sub
cmp
push
fimull
out
sub
out
xchg
jg
mov
rol
jp
xchg
add
jl
lret
lret
loop
mov
loop
repnz
xor
inc
push
and
subl
xor
mov
scas
push
mov
out
stc
pop
mov
std
pop
xchg
sub
push
mov
and
add
test
jge
pop
mov
cmp
jnp
pop
jp
xchg
imul
std
loope
push
and
mov
out
xor
mov
ds
repz
maskmovq
notl
lcall
xlat
add
add
out
mov
cmc
andb
ja
cmp
cli
add
es
pop
mov
shl
int
add
add
add
cs
mov
mov
push
push
sub
imul
pop
pop
or
addr16
loope
out
js
add
add
lds
push
out
sub
pop
xor
aam
mov
adc
outsl
or
mov
jp
into
mov
test
ljmp
mov
sub
xor
mov
add
add
mov
cmp
addr16
lcallw
dec
add
aaa
cmp
dec
mov
sar
add
aas
imul
cmp
fstpt
stc
inc
add
sub
js
cmpsl
fstpt
inc
int3
scas
call
push
lods
ret
out
pusha
add
enter
rcrl
mov
add
out
adc
popa
mov
add
imul
loope
adc
inc
adc
adc
adcl
mov
sahf
dec
cwtl
sbb
add
ja
ds
lods
add
inc
bound
int
das
and
adcl
idiv
and
and
jnp
mov
loope
mov
jmp
push
or
outsb
inc
addb
std
mov
jg
ljmp
jns
push
mov
inc
lcall
add
add
pop
push
ret
pop
jmp
push
or
aad
add
xchg
add
or
xchg
pop
in
adc
xlat
std
xchg
stc
adc
mov
add
insl
add
xor
adc
aad
hlt
js
xor
add
js
dec
addr16
sub
push
inc
jl
xchg
scas
add
add
push
sbb
push
pop
mov
xor
cmp
in
add
cwtl
cltd
test
pop
pop
addr16
leave
cmpsb
sbb
lcall
inc
jno
mov
cmp
rorb
fisubrs
adc
cld
daa
fsubrl
add
mov
addr16
pop
dec
add
sarb
sbb
and
enter
sub
gs
lods
add
add
inc
jb
push
cmpsb
sbb
add
sub
sbb
mov
pop
leave
adc
fdivrs
adc
repz
add
lahf
mov
fwait
add
dec
sub
sub
scas
xchg
mov
icebp
mov
hlt
xchg
adc
bound
and
addl
dec
lret
add
mov
in
mov
mov
jle
test
addl
cmp
fs
inc
hlt
or
rcll
lret
xor
jnp
dec
leave
push
sahf
add
jge
dec
and
scas
loope
sbb
inc
dec
and
loope
inc
flds
imul
add
loopne
cwtl
pop
pushf
enter
push
xchg
mov
jl
clc
add
lea
add
dec
add
stos
cmp
lret
pop
mov
mov
ret
mull
popf
push
xor
mulb
in
pop
pop
dec
sbb
inc
push
cmp
scas
cmp
call
xor
dec
inc
stc
into
insb
xchg
and
shll
rorl
loopne
add
in
std
mov
cld
repnz
aam
jae
pop
fcompl
mov
mov
cmp
lods
ret
sub
sbb
lcall
mov
bound
push
repnz
outsb
xor
mov
xchg
xchg
jmp
cwtl
lahf
inc
xorb
ljmp
or
imul
int3
lahf
mov
cmpsl
jns
inc
pop
ljmp
outsb
cltd
mov
mov
es
xor
scas
fidivs
fs
push
mov
add
pop
lcall
out
ss
scas
xchg
cwtl
and
push
add
mov
insl
push
leave
add
sub
push
in
mov
cmpsl
sub
imul
xor
dec
mov
movsb
mov
mov
cwtl
outsb
aaa
jnp
or
int3
add
gs
add
add
cs
pop
lea
leave
dec
xor
mov
das
gs
dec
mov
or
dec
or
inc
add
and
add
insb
add
and
insl
int
jg
cmpsl
add
push
out
addr16
add
xchg
push
mov
adcb
adc
fst
add
and
cmp
out
fwait
gs
adc
mov
stc
adc
movb
loopne
cs
dec
imul
jge
push
pushf
add
cs
mov
jns
xchg
fildll
mov
push
push
lods
addr16
adc
ja
cmc
add
lds
xor
pusha
inc
fstpt
shlb
imul
flds
mov
add
xchg
add
pushw
pop
add
in
push
adc
adc
add
add
cmc
add
out
jae
mov
add
add
add
std
add
mov
das
roll
mov
int
inc
xchg
add
leave
add
mov
loopne
addl
pop
jecxz
shl
shrb
int3
and
mov
mov
add
stc
ds
arpl
mov
je
push
es
sub
shl
xor
or
test
jns
subl
adc
lods
fidivl
push
add
cmpsb
ljmp
jmp
push
add
xor
mov
ds
mov
aaa
adc
mov
add
in
gs
adc
ret
movsl
mov
xor
lret
sahf
test
sub
lret
movsl
xor
pop
mov
dec
pop
cmp
sub
sbb
add
push
rcll
push
jbe
adc
xlat
cmpsl
icebp
addr16
mov
imul
push
adc
pop
mov
neg
dec
incl
pop
aas
imul
xchg
je
es
cmp
dec
xchg
out
mov
jge
rcl
cli
movsl
in
sbb
popf
push
lods
roll
xchg
push
arpl
pushf
nop
jmp
add
into
and
div
sbb
movsb
inc
pop
add
and
bound
repnz
out
xchg
add
orl
add
aaa
cmc
cmpl
enter
inc
cs
adc
jecxz
arpl
rcll
lret
fiadds
xlat
mov
jns
inc
or
addl
aaa
fisubrl
add
addr16
sbb
cld
arpl
test
cmc
popl
mov
cmp
out
fbstp
add
add
inc
movsb
add
add
pop
jb
add
add
add
sbb
cltd
xlat
jo
or
dec
add
jmp
test
or
inc
push
and
fwait
ret
add
jg
std
insb
inc
cltd
mov
cmc
push
add
stos
push
add
mov
add
out
gs
inc
jmp
xchg
adc
loop
ret
add
insl
mov
pop
ljmp
hlt
add
in
pop
adc
dec
bound
xlat
int3
popf
ret
cmp
jns
mov
inc
and
and
mov
push
xor
sbb
ret
int3
das
xor
add
in
cmp
or
arpl
xchg
add
jo
pushf
add
aad
stc
push
cli
sub
adc
fcmovnbe
add
das
push
mov
xor
in
test
pop
sub
jg
faddl
push
out
es
sub
push
add
dec
push
add
lret
or
shlb
in
fstpt
add
dec
mov
jo
imul
cwtl
or
jnp
xchg
jne
and
adc
inc
arpl
add
int
rcr
std
rep
inc
and
mov
push
popf
movsl
sbb
adc
arpl
pushf
mov
jge
and
xor
push
sub
add
mov
add
clc
stc
xor
cltd
jg
orb
and
add
popa
filds
outsl
inc
mov
cmpsb
popf
stos
test
push
add
cli
and
jo
adc
adc
lahf
lock
ds
push
out
mov
add
bound
enter
mov
mov
dec
icebp
jecxz
sahf
dec
push
les
ficompl
addb
xor
ret
jae
stc
inc
jo
cmp
inc
add
cmpsb
add
rcrl
adc
cmp
xchg
loop
add
dec
dec
add
mov
lock
enter
fs
fidivl
xor
fisttps
and
fildll
insl
leave
xchg
adc
add
aad
sahf
pusha
lock
ds
add
push
add
xor
add
pop
lret
sbb
cmp
mov
mov
dec
int3
mov
sbb
dec
mov
add
inc
fwait
stos
xor
out
insb
fchs
xchg
mov
add
xor
push
mov
xor
pusha
add
mov
push
arpl
xchg
jg
adc
mov
bound
fildl
jo
jg
in
ljmp
add
lcall
add
js
fistps
test
fisubrl
dec
sbb
int3
imul
xor
int3
aaa
insb
add
jbe
divb
pop
and
mov
jmp
add
loope
add
adc
push
cmpsl
xor
mov
cltd
xchg
insl
push
xchg
add
xor
xlat
add
sbb
pop
xchg
leave
daa
jmp
add
stc
hlt
movb
fidivl
ret
push
mov
mov
mov
adc
cmp
mov
lret
sbb
xchg
add
clc
jo
flds
inc
out
mov
add
pop
mov
adc
into
mov
cmp
mov
jg
test
movsl
add
fildll
pop
pop
jae
xchg
ret
jge
shll
fnstenv
sub
imul
xchg
push
inc
or
add
and
in
clc
sbb
subb
jl
sub
sar
inc
sti
inc
outsl
loopne
shl
add
add
mov
mov
mov
cmc
cltd
and
xchg
out
dec
mov
popf
jb
loopne
or
aaa
aas
dec
std
xor
dec
loop
push
rolb
popa
mov
mov
leave
mov
stc
mov
jge
lock
mov
sbb
adc
mov
push
mov
mov
in
or
pop
sbb
dec
pop
incl
mov
icebp
sub
xchg
add
pop
sbb
fimull
mov
add
cmpsb
gs
cld
mov
fists
call
inc
add
dec
inc
add
subb
add
fiadds
flds
popa
pusha
pop
jmp
sbb
add
out
add
cld
or
xor
jmp
jae
dec
imul
inc
add
xchg
add
repnz
lock
add
daa
sbb
add
sbb
push
das
cld
pop
lds
add
jae
lock
adc
test
ret
pushf
es
xchg
wbinvd
mov
out
mov
dec
pop
shll
pop
xor
or
add
movsb
aaa
outsl
test
jo
cmp
sub
cmp
add
or
sti
sub
xor
cmpsb
aam
or
push
lahf
mov
sahf
mov
call
xor
movsb
add
sbb
add
fsubs
adc
movl
add
fsts
push
xor
jno
push
stc
xchg
sti
add
jno
mov
jne
sahf
fldenv
xor
outsb
and
in
cwtl
enter
pop
loop
test
ss
xchg
sub
push
add
jg
jb
mov
add
add
sbb
clc
cmp
add
sti
add
jns
fnstcw
sbb
mov
add
mov
das
loope
sub
or
mov
cwtl
and
mov
lds
scas
xor
pop
jle
push
mov
add
cwtl
add
dec
ja
in
push
add
xchg
mov
insl
add
repnz
cmp
aas
inc
sti
clc
enter
and
ds
or
mov
or
pushf
pop
int
add
xchg
shll
xchg
ss
add
add
add
aas
xorl
int3
sub
fisubl
sbb
lods
movsb
xchg
lret
divl
dec
call
add
test
and
push
push
daa
cld
mov
inc
scas
xchg
pop
jmp
das
xchg
or
adc
mov
jnp
xchg
test
pop
add
lret
stos
or
xor
add
adc
sub
test
js
push
mov
inc
jns
in
rcll
pop
icebp
insl
fisubl
testb
jmp
add
adc
int3
inc
into
popl
add
fwait
push
fs
jmp
jg
sti
sbb
scas
inc
lods
push
mov
pop
fucomip
xchg
mov
iret
lock
xchg
jl
cmpsb
adc
pop
jl
add
cli
sub
or
sbb
movl
add
pop
xchg
add
jb
pushf
xchg
mov
cltd
lahf
mov
jns
dec
jb
fcoml
sbb
add
xchg
dec
push
in
mov
pop
jg
ficoml
cmp
iret
out
jb
add
add
add
inc
jnp
sub
add
idivb
xchg
add
in
cmp
cmp
add
fstl
mov
add
add
ljmp
or
out
mov
fdivp
lock
mov
cmp
mov
popa
push
add
add
push
lds
cmpsl
jb
xchg
repnz
xchg
ss
call
or
cmpsb
adc
std
push
les
xor
rclb
or
or
gs
xchg
push
push
xor
lret
add
cld
cmp
add
pop
add
cmp
shll
sub
test
push
xchg
xor
cmp
stos
add
vpcmpgtd
iret
movsb
and
and
add
jae
lea
inc
jmp
loopne
pop
mov
cmp
xchg
jns
iret
sahf
mov
push
imul
xor
add
adc
stos
cmpsl
js
jo
loopne
mov
imulb
mov
add
sub
sub
mov
aas
insb
cltd
roll
jo
loop
loopne
dec
jl
pop
add
aad
call
add
mov
sub
add
mov
jb
rcrl
pushf
mov
sti
push
lds
loopne
pop
subb
nopl
push
add
mov
scas
enter
add
fadds
js
idivb
push
aad
fwait
ret
pushf
xor
int
hlt
cs
jmp
xchg
add
cmp
cmp
pop
add
int3
adc
push
scas
ja
out
mov
adc
sub
add
mov
add
ds
data16
jb
mov
jle
add
add
lahf
pop
ret
loopne
orb
push
ja
sub
pop
mov
movsb
inc
cmp
mov
add
mov
insl
fimuls
sbb
lock
cmc
imul
jp
ret
sbb
xorl
mov
mov
push
add
pop
mov
fcoms
and
pop
or
inc
sub
add
rorb
xchg
cmp
jcxz
stos
roll
pop
leave
rorl
clc
cmpsb
arpl
pop
shl
je
push
lods
and
push
lds
cli
out
and
test
ret
pop
int
adc
jmp
add
xor
movsb
fwait
jbe
add
test
pop
mov
add
iret
call
fcmove
xchg
xchg
inc
add
jecxz
mov
pop
test
test
push
mov
mov
pop
add
in
sbb
jge
jno
add
push
outsl
mov
icebp
xchg
sarl
repz
test
cmp
push
mov
pusha
add
mov
outsl
jnp
add
popa
add
xchg
push
add
fisubrs
jae
sbb
arpl
paddb
in
sub
mov
and
jmp
jge
mov
int
dec
dec
adc
aad
xchg
loopne
or
fstpl
mov
inc
or
sub
and
lods
inc
mov
add
leave
jne
dec
xchg
dec
das
cmp
cmc
sbb
mov
insl
popf
push
add
xchg
cmc
iret
mov
aad
add
xchg
testl
jl
add
mov
fldl
inc
add
sub
xchg
push
add
push
jbe
add
dec
adc
mov
push
cli
mov
or
add
lds
add
insl
pop
jo
pop
cmp
xchg
mov
jecxz
push
roll
mov
cmpsl
mov
cltd
mov
xchg
xchg
movsb
and
shrb
scas
add
fdivrl
and
shll
inc
dec
out
add
xchg
int3
or
sbbl
stos
enter
pop
popf
and
and
add
mov
sub
in
mov
cmp
ss
or
xor
lcall
xchg
sub
pop
push
cmpsb
repz
add
mov
push
add
out
adc
and
jo
lret
andb
dec
mov
xor
wbinvd
dec
addl
adc
test
imul
out
decl
fsts
sub
and
mov
mov
scas
mov
push
add
repnz
xchg
outsl
add
addb
ljmp
xchg
add
add
push
xlat
mov
ja
cmpsb
jnp
adc
jge
xor
movl
mov
sarb
push
ss
cmp
lds
into
inc
inc
push
inc
sub
lds
cmp
xor
dec
decb
roll
lock
add
pop
rcl
and
cmp
es
push
push
cmc
inc
inc
fs
add
or
jnp
hlt
add
and
or
pop
inc
popa
sbb
or
cmc
xchg
push
lods
rcl
push
mov
xchg
jmp
cmpsb
mov
cmp
gs
cli
in
fcoms
out
or
add
xor
or
aad
pop
stos
sbb
mov
xor
movsb
xchg
int3
jns
jmp
and
xor
pusha
jns
pop
cmp
test
cmpsl
loop
cmpsb
lock
ja
xorl
xchg
sub
push
add
jnp
xor
add
fwait
or
jge
and
mov
mov
add
gs
loopne
pusha
hlt
jg
push
pop
leave
lea
jbe
add
jl
imul
lcall
jns
sub
mov
xchg
mov
ret
inc
ljmp
outsb
bound
insl
std
or
shlb
das
loop
icebp
ja
out
je
sub
ret
mov
jge
add
mov
xor
ss
jns
incl
out
add
and
or
xchg
ja
adc
test
cld
cmc
pop
jge
jbe
push
imul
out
out
add
pop
mov
ret
data16
sbb
fwait
jge
jo
call
add
jnp
push
mov
add
add
add
mov
addb
loopne
scas
inc
add
pop
lret
clc
fimuls
push
xor
mov
xchg
mov
lea
jno
sbb
sti
je
sahf
cli
mov
add
push
fisubs
call
arpl
add
xchg
mov
jns
cmp
add
neg
mov
add
jb
mov
mov
js
nop
rolb
add
arpl
sub
gs
add
in
push
pop
add
push
pop
mov
or
test
out
mov
cltd
sbb
in
test
mov
mov
add
or
pop
aam
cli
hlt
rcr
adc
sub
pop
and
dec
inc
sbb
xor
pop
cmp
nop
je
sbb
loopne
addr16
pop
test
sub
popf
mov
movsb
andl
xlat
push
mov
jb
or
sbb
movsb
or
jp
in
in
mov
mov
in
scas
or
xchg
and
sbb
lods
add
sub
gs
stos
nop
xchg
jns
mull
dec
and
sub
shl
fstps
add
or
dec
loope
add
scas
sub
add
jb
rol
jne
es
pop
call
pop
mov
scas
fldenv
jno
scas
mov
adc
sub
xchg
and
dec
mov
push
imul
rcr
leave
jne
out
pop
mov
rorl
sbb
pop
lock
sbb
dec
push
aam
pop
pusha
lret
add
add
pop
xchg
dec
mov
mov
rcrb
shrl
dec
aas
add
cmp
ss
jb
add
push
and
or
xlat
jae
test
inc
cmp
xchg
or
fucomi
int
fldl
xchg
int3
loop
test
shrl
push
iret
xchg
adc
inc
out
les
push
sbb
cli
mov
inc
rcl
aaa
mov
jmp
mov
mov
aam
add
mov
lea
mov
repnz
fcomps
mov
test
clc
subb
popa
cmp
int3
dec
into
fisubs
add
out
mov
outsl
insl
es
jp
cmp
inc
add
add
push
adc
insl
call
and
mov
test
sahf
imul
cld
outsb
or
loopne
cmpsl
cltd
mov
add
in
mov
into
pushf
jns
dec
mov
xchg
ret
jne
add
negb
add
push
mov
int3
pop
sbb
dec
or
in
add
aaa
loope
push
push
add
pmulhuw
stos
cld
sub
insl
je
pop
into
cmp
fdivrs
jb
mov
xchg
addl
repz
dec
cli
in
mov
lods
repnz
add
xor
jae
add
fucomp
pop
jge
jmp
sbb
or
pushf
sub
aaa
movsb
pop
jge
pop
add
jmp
add
lods
idiv
aas
or
xorl
add
add
hlt
cmp
add
dec
ror
loopne
stos
xchg
inc
rcll
sub
add
sldt
mov
into
xlat
movb
cmp
scas
les
mov
jle
jmp
xor
and
ret
xor
sbb
add
cld
flds
jb
andb
add
test
mov
xchg
push
hlt
js
mov
xor
mov
pop
xchg
add
sbb
dec
sub
add
test
mov
aam
inc
mov
xchg
xchg
pop
sti
add
add
add
mov
add
mov
add
push
std
cmpl
add
lea
jnp
add
pop
stos
add
and
lahf
sbb
adc
add
cmp
imul
movsl
inc
add
push
out
dec
divb
mov
lods
out
xor
ror
inc
add
jp
scas
enter
icebp
pop
add
lds
mov
scas
mov
adc
mov
call
adc
add
andb
stos
addl
loop
loop
pusha
sbb
iret
xchg
inc
add
rolb
repz
sub
add
add
xor
aas
lods
mov
xlat
repnz
call
or
in
lret
int3
iret
pop
fcomp
aaa
call
pusha
xchg
out
lds
xchg
dec
adc
xchg
icebp
movsb
adc
add
add
and
adcb
jno
add
pushf
mov
sbb
and
pop
and
pop
stc
inc
bswap
jb
push
and
sub
psubw
pop
xlat
dec
lock
rcl
dec
subb
add
ja
sbb
hlt
xchg
and
arpl
push
adc
push
scas
xlat
loopne
incb
add
ljmp
aam
adc
sbb
cmc
inc
add
gs
inc
shll
add
add
int
inc
xor
jbe
andb
xchg
sub
push
test
jp
stc
add
sub
fcompl
and
iret
inc
pop
je
dec
into
test
xor
push
dec
sub
loopne
push
pushf
ljmp
shlb
xor
xor
push
mov
xchg
dec
ss
pop
ret
cmpsb
mov
sub
cmp
in
fs
je
lahf
test
movsb
scas
filds
cmpsl
aam
mov
fwait
int
add
dec
cmp
push
jnp
push
fcos
dec
ljmp
fisttpll
inc
mov
int3
sub
mov
and
cmpsb
jbe
jmp
pop
ret
add
and
stos
roll
mov
sub
cmp
add
ljmp
add
add
fstp
stos
stc
cmp
ljmp
push
rolb
mov
dec
push
shl
sbb
add
dec
shll
pop
dec
mov
or
pop
stos
mov
xor
in
ljmp
inc
add
or
lock
pop
or
loop
add
stos
and
es
daa
jmp
xchg
mov
mov
test
jge
sahf
nop
and
add
pop
les
adc
or
int
mov
xlat
jg
jo
sub
push
mov
cmp
add
fcompl
add
daa
ljmp
or
nop
inc
and
out
sbb
mov
sub
mov
add
clc
popf
xor
sub
or
lock
inc
aam
jns
mov
jecxz
mov
dec
xchg
jne,pn
les
push
je
and
out
jb
mov
mov
ret
icebp
repnz
rcll
xor
loop
ficoms
add
int
add
inc
sbb
test
mov
and
mov
mov
add
scas
je
pop
fcoms
sub
push
cmc
mov
adc
jae
xor
mov
jns
aam
fldl
scas
lahf
add
inc
fwait
add
add
orl
mov
add
pop
in
gs
ja
stos
insb
inc
in
iret
and
xchg
add
fcoml
nop
mov
add
push
js
xchg
cmpsl
cmp
jb,pn
inc
add
stos
fldz
add
decl
test
jp
inc
xorl
jne
sub
pop
inc
aaa
push
movsl
add
cmpb
cmp
sbb
mov
lahf
mov
or
push
adc
das
jecxz,pt
xor
add
jno
shl
add
dec
call
sub
scas
jle
add
xor
hlt
mov
sbb
js
add
push
fwait
icebp
ja
or
out
fsts
jo
int3
lcall
add
incl
and
add
out
dec
sbb
xchg
in
sbb
out
xchg
pusha
inc
js
dec
lea
mov
nop
dec
jle
add
hlt
pop
mov
add
rol
ja
ret
roll
dec
cmp
fistl
dec
fisttpll
push
outsb
dec
daa
add
scas
sbb
and
test
cltd
add
push
pusha
neg
lret
xchg
mov
push
add
ja
adc
clc
push
sub
add
sbb
add
ret
fldcw
roll
insl
jb
stc
cmp
add
rcll
push
sti
add
xor
repnz
and
movsb
das
and
and
sbbb
sub
xor
dec
mov
push
dec
cmpb
or
je
add
fstps
mov
icebp
movsb
or
std
or
fmuls
js
or
lret
sub
mov
sub
ss
clc
ret
cli
flds
inc
js
or
int3
std
ficompl
jg
mov
not
inc
jl
mov
fcompl
mov
fcomps
add
imul
add
adc
jge
mov
jl
adc
das
call
int3
push
jle
fisttps
sti
adc
sub
add
scas
pop
lahf
sbb
sbb
sub
add
lock
lahf
mov
push
mov
sbb
xor
or
test
xchg
add
adc
stos
jno
aas
mov
int3
mov
sarb
out
and
pop
push
add
mov
fadds
mov
loop
lds
sbb
sahf
shll
cmp
adc
mov
imul
lea
stc
movsb
add
clc
add
mov
imul
jle
fldt
test
repz
add
arpl
cmp
push
add
roll
daa
or
mov
mov
dec
mov
sub
mov
jb
jnp
pop
int
addr16
or
rcrl
inc
ret
cs
push
mov
dec
pop
mov
sbb
add
add
dec
xor
add
sub
mov
lahf
cmp
in
add
and
xchg
int3
xchg
inc
add
std
fstpt
xor
sbb
jo
xchg
dec
pusha
stc
popf
push
nop
xor
loope
xor
xchg
fcmovnbe
mov
cmp
mov
shll
xchg
adc
enter
jl
aaa
daa
sbb
cmp
test
cmc
dec
mov
mov
and
push
decb
jno
xor
inc
pop
adc
mov
mov
rol
or
pop
or
add
fwait
adcl
clc
mov
cmpsl
orb
ds
add
xchg
pop
lret
mov
dec
lods
push
rcl
je
dec
dec
sub
ja
add
inc
fldl
push
add
std
adc
cwtl
or
mov
mov
xchg
dec
push
jge
movsb
mov
pop
push
inc
popa
or
arpl
int
xor
sbb
jno
mov
cmc
fwait
cmp
add
outsb
push
inc
adc
das
loopne
add
mov
outsb
mov
out
add
aaa
push
test
fidivl
xchg
push
sbb
stos
sub
mov
imul
push
sahf
aas
jne
adc
adc
repz
add
arpl
repz
dec
lock
xchg
fmull
test
fistl
mov
add
jmp
inc
add
enter
into
add
xchg
cmpsb
test
add
icebp
inc
ja
js
inc
add
xlat
sub
orl
nop
jb
cmp
mov
adc
std
mov
add
and
ja
or
pop
clc
sti
test
add
xchg
jae
sbb
cltd
loop
add
sbb
pop
pop
and
fneni(8087
sbb
daa
movsl
push
xor
setno
push
pop
add
lret
push
inc
negb
lods
push
rol
add
or
sub
divl
add
std
repnz
xchg
scas
rorl
add
inc
in
add
mov
ret
add
fadds
xor
cmp
push
adc
lock
rorl
jl
aaa
lahf
dec
loopne
pop
sub
add
movsl
jle
jne
sub
pop
mov
push
cs
jbe
js
mov
jo
xor
ds
in
push
daa
add
popa
pop
les
rcll
cmp
rcrl
mov
lahf
mov
add
enter
cmp
add
addl
loopne
loope
xchg
dec
mov
and
pop
stos
inc
sarb
dec
shll
add
fbstp
test
lret
pusha
add
imull
pop
ret
std
add
stos
add
add
push
jle
iret
mov
jge
jecxz
inc
mov
fdivl
pop
fsubrs
mov
sub
pop
into
clc
lods
pop
or
and
jns
aam
push
or
int
dec
add
fs
xchg
mov
xchg
cwtl
and
roll
pop
sub
lcall
pop
lret
adc
hlt
ss
arpl
lret
jge
movsl
aad
int3
jne
jge
sbb
add
mov
cld
pop
mov
lcall
out
add
mov
int3
xchg
bound
inc
jge
push
jb
and
ljmp
mov
mov
les
cwtl
xchg
sub
push
adc
xchg
movsl
add
mov
and
mov
dec
mov
nop
or
std
fcomip
jns
add
inc
xor
add
sbb
dec
dec
xor
pop
mov
dec
scas
lret
push
test
and
stos
mov
mov
out
adc
pushf
add
add
popf
push
stc
cwtl
xor
cwtl
or
add
movsb
in
mov
xor
mov
roll
call
xlat
push
cwtl
ficompl
push
add
mov
add
sar
push
ret
cwtl
jo
add
pop
adc
sbb
icebp
ret
and
jb
sbb
mov
xchg
out
jg
dec
mov
add
inc
scas
add
lock
mov
mov
add
lcall
aam
jecxz
bound
fwait
add
faddl
inc
dec
rolb
rcrl
jmp
add
add
popa
mov
movb
shrb
pop
mov
xchg
mov
adc
cmp
dec
jns
pop
vmovhps
mov
je
push
std
push
rolb
push
xor
loop
lahf
jg
push
and
adc
mov
shll
cltd
sahf
pop
xchg
fcmovnb
jge
add
push
dec
add
adc
jbe
add
std
or
dec
loopne
inc
repnz
mov
cmp
fisubl
repnz
or
sub
int
cld
cmp
les
jnp
mov
mov
or
sbb
sbb
jb
test
clc
and
mov
aaa
popa
add
sahf
or
add
iret
push
jl
in
cmc
adc
and
aad
and
cs
imul
out
loope
mov
sbb
adcb
add
movsb
mov
stos
xlat
add
lods
xchg
shll
outsb
and
sbb
lret
sbb
iret
add
mov
push
movsw
cmpsb
cwtl
adc
push
inc
jge
pusha
adc
roll
fdivs
or
xchg
aam
xor
xchg
inc
dec
xor
or
xor
mov
push
mov
sub
imul
dec
add
aas
add
enter
das
daa
iret
add
fcoml
ljmp
add
addb
adc
push
in
xor
add
inc
mov
or
stc
fdivl
pop
push
add
outsl
pop
mov
add
fdivl
pop
aad
add
add
add
jge
int
cmp
iret
cmpsb
repnz
test
decb
scas
and
push
dec
gs
out
sbb
into
sub
ja
jae
in
add
xchg
mov
sbb
add
mov
movsl
outsb
sbb
out
add
fidivs
lahf
mov
out
scas
mov
notl
pop
insb
pop
mov
es
icebp
pop
js
ret
or
aam
cmpsb
je
cmp
or
rcll
or
fdivs
jge
ds
add
movsl
add
in
cmc
inc
sub
or
inc
sbb
or
cmp
xchg
add
stos
daa
insl
pop
scas
jge
pop
jle
cmp
mov
push
add
roll
scas
cltd
cmp
adc
sbb
mov
push
fisubrl
rcl
mov
mov
sti
sti
mov
cmp
sub
pmaddwd
mov
loopne
stos
pop
xchg
xlat
push
jnp
outsb
imul
add
mov
xor
or
jl
out
jg
jmp
xchg
inc
add
imul
fcmovnbe
outsb
js
repz
aam
cmp
add
xchg
dec
add
add
mov
scas
mov
add
cmp
pop
add
iret
mov
inc
shrb
inc
or
icebp
jno
lahf
jecxz
xor
out
lcall
xchg
imul
xchg
sub
dec
push
dec
push
inc
push
adc
add
rcrb
xchg
cmp
mov
pop
jmp
or
and
in
cmp
mov
inc
testl
mov
dec
mov
add
lret
or
add
mov
add
cmpl
sub
rorb
add
jmp
mov
cmp
adc
loopne
je
add
jno
jnp
add
mov
dec
jle
push
mov
lods
pop
xchg
inc
repz
jno
mov
decb
imul
lret
in
pushl
aaa
into
fs
xchg
shrb
pop
leave
fadds
mov
subb
pop
add
push
inc
in
ja
enter
push
dec
repz
add
and
mov
std
arpl
mov
dec
pop
les
daa
mov
push
sub
movsl
pop
jbe
add
stos
inc
popf
movsl
add
fsubl
add
les
sub
mov
enter
roll
pop
jo
push
jno
adc
add
lret
and
movhps
test
enter
and
add
adc
sub
add
out
add
adc
sbb
inc
add
sbb
mov
scas
push
nop
add
mov
add
add
sbb
cmpl
pop
sbb
xchg
add
jl
test
push
not
sub
imul
and
cld
sub
inc
pop
add
lret
push
pop
sbb
pop
popf
and
mov
add
sbb
iret
stos
aaa
fcompl
push
pop
in
fdivp
stos
les
push
pop
arpl
add
jbe
mov
sub
push
mov
or
pop
filds
lds
aam
stos
mov
mov
mov
push
add
cmp
sarl
test
aaa
dec
lret
mov
push
mov
out
ficomps
add
mov
add
insl
mov
loop
xor
ficompl
cmpsl
ret
jecxz
sbb
rcrb
add
dec
add
int3
add
addl
mov
inc
adc
aad
add
jg
inc
mov
lods
gs
add
mov
setge
addl
inc
xor
add
add
cli
add
aas
adc
add
push
stos
test
loopne
fs
add
pusha
add
int3
es
scas
test
cmpsl
adc
mov
lods
out
stos
add
pop
sub
add
jg
pop
or
sub
rorb
shrb
insb
inc
add
sbb
xchg
mov
adc
sub
icebp
lret
pop
push
or
std
xchg
push
adc
dec
mov
mov
sub
inc
mov
jne
push
cmpsl
or
jb
jmp
repz
xor
add
or
push
popf
xor
add
mov
jg
sub
clc
fmul
add
lret
fcmovnb
add
mov
jbe
in
lcall
pop
ja
shrb
imul
je
mov
inc
mov
dec
fwait
iret
jns
dec
pop
xor
xchg
fsubrl
cld
cli
xlat
and
ret
sbb
jns
xchg
add
add
add
repnz
dec
sub
cmp
add
lea
mov
es
dec
ret
add
sub
fs
pop
add
mov
xor
out
xchg
cmp
ds
popl
inc
or
xchg
sbb
ljmp
pop
imul
add
dec
inc
out
jle
add
add
imulb
cmp
fnstenv
sbb
add
nop
aaa
jp
cmp
imul
lods
and
lahf
fsubrs
fdivrl
inc
add
nop
popl
add
nop
mov
hlt
insl
mov
aaa
or
sbb
pop
ficoml
adc
mov
fwait
jge
incl
push
out
mov
mov
add
push
add
and
add
mov
stos
jl
popf
lock
cmc
and
add
in
jge
fisttps
xchg
shll
sarl
add
out
pop
iret
shr
jnp
add
add
stos
add
lods
cld
xor
mov
stos
stos
fxch
out
inc
jmp
pop
nop
sbb
xchg
mov
pusha
negl
or
cmpsl
add
add
add
js
das
xor
in
jecxz
test
inc
jg
test
jne
or
add
leave
cs
add
ret
xor
das
sbb
or
loope
out
adc
add
sub
test
es
adc
or
shll
add
lock
imul
push
pop
in
xchg
mov
and
or
je
sub
nop
add
in
cs
fcompl
jle
mov
pop
mov
sub
mov
out
or
push
jbe
cld
test
adc
sbb
out
xchg
dec
sub
insl
test
add
int3
jmp
cmp
cmp
sahf
subb
push
xor
mov
adc
xchg
add
jp
add
sub
lods
cmpsb
dec
sub
or
xchg
cli
jecxz
pop
mov
movsl
adc
mov
ljmp
mov
fadds
dec
sbb
adc
mov
push
add
mov
cwtl
mov
ret
popf
fiaddl
xchg
and
addr16
inc
les
mov
add
ja
repz
jge
sub
ret
xchg
ja
pop
or
cmp
jae,pn
add
loopne
fstpl
loop
rorl
test
fs
std
hlt
aaa
fidivs
sub
xchg
mov
add
xchg
add
add
xchg
jbe
push
int3
pop
imul
xor
add
sahf
shlb
mov
lcall
aam
fnstcw
int3
sub
and
and
cmp
inc
add
enter
push
sub
rclb
mov
je
mov
iret
mov
jecxz
mov
or
add
gs
cmpb
adc
xchg
mov
out
xchg
pop
adc
lods
inc
push
iret
test
paddw
push
xchg
loopne
mov
imul
ret
sub
adc
adc
adc
add
jecxz
dec
cmpsb
ret
xchg
out
cmp
and
dec
popf
add
sbb
adc
mov
jge
dec
cmp
leave
push
sub
mov
imul
scas
popa
lds
aad
fucomi
call
data16
call
pop
push
and
loope
mov
cmp
mov
fbld
push
frstor
enter
push
jle
jnp
cmp
sub
std
push
add
cmp
add
fcmovnb
push
sbb
or
adc
lcall
aad
fdivs
sub
fdivrl
pop
sub
rcrl
imul
dec
jae
sbb
aad
dec
add
outsb
dec
mov
scas
xor
es
loope
add
gs
xchg
cmp
leave
add
add
loop
mov
xchg
add
sub
add
dec
add
sub
std
and
add
jg
jo
xchg
push
lock
stos
jno
inc
add
push
inc
add
lea
aad
mov
inc
cmpsl
jl
imul
sbbb
mov
jo
fmull
pop
adc
fs
xor
dec
ja
nop
loope
dec
imul
add
frstor
bound
sahf
xor
mov
pop
or
add
ds
es
stos
ret
push
add
insb
mov
pushf
dec
out
test
or
pop
mov
popa
sarb
add
jmp
sbb
sarl
push
mov
repnz
jl
lret
adc
sbb
xchg
adc
test
xor
movsl
mov
inc
je
dec
pop
sbb
cmp
sbb
outsb
push
sub
cmp
insb
rorl
add
sbbb
cmpl
data16
out
addr16
sbb
dec
fiadds
pop
jae
idiv
gs
daa
add
xchg
outsl
adc
sbb
sbb
inc
inc
lods
inc
and
frstor
xchg
rol
imul
add
dec
add
hlt
in
mov
push
shrl
add
mov
lahf
jo
repnz
jp
add
aaa
mov
frstor
into
add
testl
jno
pop
mov
dec
adc
mov
adc
insb
adc
xor
pop
lods
mov
mov
or
std
dec
mov
sbb
cmp
insl
outsl
and
add
in
add
mov
cltd
mov
inc
add
add
mov
mov
xlat
outsb
xorb
cmpsb
pop
and
roll
add
add
xchg
scas
add
inc
sub
stc
or
sbb
shrl
in
and
inc
lret
dec
mov
add
insl
jmp
les
ret
jno
sbb
add
pop
test
jl
xor
push
loop
daa
mov
call
cmp
sub
push
enter
add
imul
mov
mov
dec
mov
adc
in
sahf
aas
scas
inc
xchg
xor
jg
jnp
inc
dec
jae
push
mov
add
pop
xor
test
notl
jmp
lods
push
dec
iret
cwtl
jo
jns
mov
sub
shr
pushf
lcall
add
imul
mov
and
aam
jecxz
mov
mov
inc
cmc
mov
scas
push
xchg
incl
aaa
dec
jl
pusha
sti
les
xlat
shrl
into
mov
movsl
push
inc
dec
push
xchg
jo
outsl
xchg
jmp
add
sarl
clc
dec
das
lea
imul
or
flds
leave
into
lret
lods
into
push
and
mov
int
dec
cs
pop
adc
pop
sbb
in
pop
pop
add
xor
xchg
sub
cmpsl
add
add
mov
stos
or
ret
dec
jl
inc
sbb
sub
push
repnz
inc
int
add
out
add
and
repz
xchg
sti
add
daa
clc
fdivp
add
xchg
inc
fcmovnbe
jp
std
out
test
dec
ret
movsl
inc
mov
cld
popa
stos
push
xor
push
or
xor
fldl
divb
jg
xor
cli
test
jecxz
pusha
xor
pop
xor
add
jnp
add
ds
leave
js
or
xchg
push
mov
test
outsb
shlb
ja
movsl
or
dec
jmp
dec
pop
add
xchg
cmp
lahf
add
adc
inc
add
test
adc
pop
jno
add
int
aad
push
pop
lock
iret
add
icebp
mov
fimull
xchg
adc
shl
xchg
inc
gs
or
cli
lcall
inc
fcmove
add
rolb
mov
or
push
aaa
add
inc
add
add
pusha
sbb
mov
nop
and
jmp
lds
arpl
ret
pushl
cmp
mov
das
or
mov
test
add
xor
add
mov
es
pop
fdivrs
push
leave
shlb
add
call
pop
cmpsb
jg
sbb
mov
bound
out
imul
mov
jbe
cmp
andb
add
add
aaa
cli
rcl
cld
test
add
enter
jmp
mov
syscall
add
sbb
push
add
inc
loop
xor
cmpsb
mov
les
adc
ret
cmp
mov
add
add
je
adc
cmp
and
pushl
or
fs
aad
jle
outsl
mov
sahf
cmp
push
push
clc
xchg
mov
insb
aam
add
pop
mov
bound
pop
add
fsts
add
stos
adc
out
cli
pop
cmp
xlat
or
add
add
imulb
fs
iret
xchg
int
cmpsl
fs
xchg
cmp
incl
add
fwait
add
inc
icebp
mov
add
out
and
add
mov
lret
cmp
bound
mov
lods
cmp
rcrb
mov
gs
fiaddl
cs
icebp
call
outsl
xor
add
imul
repz
xchg
enter
roll
daa
in
sarb
je
fnsave
sub
lahf
and
addr16
sbb
add
push
add
jmp
push
jno
testl
xchg
adc
jae
cmpsl
jmp
jns
out
testb
adc
repz
lods
pop
insl
pushf
inc
into
add
mov
add
mov
fidivs
dec
and
add
dec
add
push
pop
xchg
adc
xor
insb
xchg
mov
add
jecxz
fcoml
mov
hlt
lods
dec
mov
movsb
lock
aam
lret
test
test
adcl
add
push
and
stos
mov
outsl
or
cld
add
lea
mov
loope
xchg
or
fsubl
cmp
add
data16
aaa
rcrb
pusha
je
je
push
fdivs
cld
dec
enter
push
jg
stos
int
jle
add
shlb
dec
mov
adc
or
aam
insb
xor
inc
push
add
popf
popf
mov
arpl
ds
pop
xor
sbb
xor
mov
push
add
adc
add
pop
jbe
cltd
negb
xor
ljmp
hlt
inc
inc
push
aaa
dec
xchg
or
lret
repz
add
add
fildl
sbb
push
lahf
and
jns
roll
fs
sub
orb
mov
or
scas
into
pop
in
psraw
pop
imul
sbb
cmp
xor
add
ret
loop
add
jecxz
pop
adc
jns
rcrl
cmp
dec
add
push
inc
mov
pop
faddl
xchg
sbb
or
sbb
push
arpl
stos
out
and
add
add
mov
je
or
sahf
hlt
imul
rorb
add
add
inc
scas
add
in
mov
dec
and
mov
xchg
add
push
outsb
jne
sub
push
add
fdivl
mov
xor
add
mov
test
stos
jmp
mov
lret
cmp
aaa
lret
push
lds
sub
push
in
mov
icebp
push
out
and
sbb
and
inc
jnp
mull
xor
movb
pushf
add
sub
aas
push
rcll
inc
mov
adc
xor
int
pop
les
fldcw
pop
inc
add
xor
or
jecxz
push
sub
and
clc
dec
add
push
sahf
pop
xlat
cli
pop
and
cmpsl
es
lods
inc
pop
lea
leave
mov
enter
in
xlat
and
rcrl
sbb
jle
cmp
add
cli
or
add
mov
inc
fldcw
pop
and
add
lret
push
fstpl
and
and
outsl
add
push
xlat
or
out
scas
and
pushf
pop
jo
sbb
ljmp
in
les
mov
clc
xlat
cmpsb
outsb
adc
add
data16
repz
cmp
fldenv
push
rcr
mov
sbb
pop
dec
outsl
mov
dec
xchg
dec
mov
add
add
aad
lock
xor
cmp
xchg
arpl
mov
add
movsb
add
xlat
sbb
cmp
imul
jmp
fcoms
mov
xor
out
or
test
mov
and
add
mov
rolb
lock
add
push
add
and
nop
sbb
adcb
enter
mov
arpl
pop
pop
mov
popf
cmp
sbb
addr16
pushf
imul
out
fwait
les
pop
inc
or
push
jae
push
add
sub
mov
inc
xor
lods
fmuls
sub
jp
mov
or
pusha
sbb
out
std
inc
loopne
scas
cmp
pop
pop
mov
mov
mov
xchg
xchg
sbb
push
mov
cltd
pushl
mov
fs
test
xor
movl
pop
pop
inc
fs
adc
popf
stc
mov
pop
ret
push
mov
sub
sti
js
or
sub
cmp
fstl
imul
mov
test
test
ja
sbb
push
movsl
add
add
mov
imul
add
sbb
adc
lock
jns
dec
ljmp
in
lea
loope
testb
mov
aaa
fadd
gs
lds
out
add
add
sarb
imul
in
dec
cmc
push
je
popa
and
add
and
testl
add
sbb
andb
ror
pop
dec
out
add
push
jmp
or
adc
add
push
fbld
jno
nop
cmp
mov
add
lcall
popf
scas
adc
and
add
fwait
imul
dec
jge
jbe
sbbb
pop
fisubrl
movl
adc
xor
out
inc
add
xor
ds
test
sbb
insl
aaa
dec
inc
nop
mov
push
add
lea
sub
xchg
jo
mov
cmp
pop
cwtl
mov
push
arpl
add
rcrb
pop
jl
adc
std
imul
adc
pop
adc
dec
mov
test
add
out
jge
leave
mov
adc
aaa
xchg
dec
out
add
movsb
ficoml
fidivrs
stos
add
push
mov
movsb
sbb
pop
push
int3
sub
push
add
ja
jbe
stc
mov
outsb
jb
cs
outsb
xchg
mull
push
aam
mov
adc
or
add
add
ret
repnz
gs
scas
sbb
mov
push
int
inc
bound
in
mov
push
dec
or
push
sbb
add
push
into
adc
ds
loope
enter
fidivrs
rcll
outsl
flds
add
ja
mov
push
xchg
rcl
xchg
add
lea
add
dec
clc
add
sahf
aad
mov
pop
lock
bound
pop
mov
adc
cmovo
pop
mov
leave
fsubr
cmp
xchg
push
sti
mov
mov
mov
or
sub
sbb
jno
xor
add
sub
dec
ret
mov
stc
mov
add
fucom
add
ljmp
mov
fwait
xchg
adc
inc
insb
xchg
adc
adc
adc
and
xor
cs
ret
icebp
rep
cmp
fwait
or
and
pop
mov
lods
js
mov
je
or
push
mov
add
dec
dec
into
cmc
outsl
cltd
cli
jecxz
pop
sbbl
insl
cmp
mov
fwait
add
jno
test
or
add
inc
sub
mov
jne
push
les
ja
jg
sarb
roll
and
cmp
jecxz
push
call
in
jl
fwait
cmp
pop
daa
imul
je
push
add
add
lcall
pop
out
add
mov
and
jg
test
inc
add
into
pusha
jns
mov
jle
hlt
xchg
add
or
out
popf
pop
out
in
add
push
mov
add
xor
pop
popa
pop
xlat
lods
fisubrl
push
xchg
mov
add
bound
adc
fmul
insl
in
outsb
jg
sbb
jae
mov
pop
add
decl
pop
push
test
add
add
jbe
lock
lcall
or
xor
int
mov
adc
push
ficoml
inc
int3
pop
lret
add
add
xor
gs
mov
std
dec
mov
xor
add
xlat
sub
enter
pop
mov
das
add
in
je
popfw
call
add
mov
int
jne
outsl
in
lret
pop
jno
les
xchg
test
pop
add
cmp
icebp
push
test
jae
or
pop
mov
add
push
jl
mov
fidivl
lds
push
adc
jmp
stos
mov
repnz
add
loope
add
loopne
inc
push
outsl
scas
rorl
inc
push
dec
add
add
adc
sub
out
cmp
shl
out
jle
add
add
cs
jecxz
out
mov
scas
pop
clc
fnstenv
sbb
mov
int
lret
push
dec
xor
ds
pop
dec
movl
addr16
jbe
out
sub
cmp
sahf
daa
lock
stos
mov
js
rcll
bound
inc
orb
out
cmp
jbe
movsb
add
mov
jne
mov
lods
scas
jge
add
add
out
add
test
add
dec
daa
pop
cwtl
in
mov
enter
xchg
loope
int3
pop
sbb
pop
adc
je
xchg
mov
mov
add
movsb
addr16
push
addb
push
pop
xchg
pop
loopne
fwait
dec
hlt
inc
xchg
jno
inc
push
xchg
sbb
hlt
add
and
sbb
jae
add
add
or
add
jecxz
movsl
rolb
push
xor
arpl
add
sub
or
inc
jmp
aaa
mov
loopne
pop
imul
cmpsb
je
push
imul
test
pop
in
ror
add
arpl
xorps
int
stos
add
pop
add
pop
mov
test
dec
int3
test
ficoml
add
sub
mov
mov
add
les
cmc
sbb
and
cmc
outsl
add
adc
ds
cwtl
jnp
inc
add
inc
insb
add
xchg
ljmp
jne
add
shr
ja
arpl
inc
xor
lret
add
add
repnz
mov
je
add
sbb
sbb
out
push
ret
outsb
dec
push
add
mov
mov
dec
sub
adc
lcall
imul
mov
sub
add
sbb
xchg
push
mov
pop
addr16
xor
stos
pusha
or
dec
inc
adc
int3
add
repnz
xchg
add
or
sub
sub
imul
aas
stos
dec
test
sub
test
ret
es
divl
add
cmp
call
lahf
pop
scas
loop
insl
xchg
inc
lret
imul
and
mov
fimull
push
jnp
insl
add
xchg
test
mov
call
jno
dec
add
popf
fimull
inc
add
adc
jecxz
dec
dec
test
scas
mov
inc
jecxz
cmp
ret
lret
jmp
aas
inc
shl
add
scas
fwait
mov
pop
jbe
aad
sbb
lret
pushf
insb
mov
add
js
idivl
sub
xor
loop
out
es
add
test
add
adc
lret
ljmp
cmp
xchg
inc
or
lock
sbb
add
ds
out
jp
or
mov
add
adc
sahf
je
or
cwtl
das
loopne
add
and
test
mov
sub
jnp
mov
cmp
pop
or
icebp
mov
rclb
cmp
add
fistpll
addr16
repz
sti
faddl
xchg
inc
sbb
pop
cmc
xchg
add
punpckhbw
inc
fbld
nop
dec
xchg
add
add
rcll
and
add
aaa
dec
loopne
add
iret
int
cmp
add
mov
scas
cmp
outsb
add
dec
push
add
mull
sub
shll
imul
push
push
sahf
xor
push
or
and
sub
add
outsb
pop
mov
sbb
add
push
cmp
prefetch
jg
cmpsl
or
lahf
add
dec
shrl
int
mov
stos
cmpsl
xor
lret
push
add
xor
xor
icebp
push
xchg
pop
test
push
pop
sbb
cmp
cmp
pop
xor
add
jbe
jg
cli
cwtl
roll
imul
sub
gs
cmp
sarl
xchg
test
out
fcoml
dec
fdiv
mov
mov
test
test
and
add
add
xchg
ds
cs
add
cmpsl
in
ret
loop
outsl
inc
and
add
movl
icebp
loopne
mov
ficoms
inc
push
push
or
test
push
cltd
xor
aad
add
push
pop
push
test
push
into
cmp
add
shll
in
je
out
ret
js
xor
ret
data16
stos
dec
xor
add
mov
pop
inc
add
sbb
stos
adc
sbb
adc
rolb
cli
mov
insl
leave
xchg
sub
sti
add
cmp
outsb
or
ds
jae
cmc
cmp
sub
push
inc
lods
xchg
mov
lock
add
lods
add
sbb
cmp
adc
push
mov
es
mov
push
or
loopne
inc
out
movb
jne
lcall
push
adc
push
les
addr16
jmp
mov
jns
and
adc
mov
mov
mov
in
addr16
repnz
nop
testb
outsl
das
enter
std
push
out
aad
fstps
lcall
jnp
repnz
jp
lret
add
add
lds
incl
mov
or
aas
pushl
shrb
aas
fimuls
mov
incl
push
add
and
push
pusha
stos
dec
pop
xorl
push
sub
das
repnz
xchg
xchg
add
add
xchg
push
jge
ss
and
out
js
jno
inc
lods
icebp
addr16
mov
sahf
out
out
mov
outsb
out
daa
add
fcmovnu
hlt
adc
add
lahf
mov
mov
subb
icebp
push
ss
and
inc
std
push
inc
add
outsl
and
fdivl
push
and
cmp
sbb
jg
cmpsb
or
subl
or
add
ret
mov
out
mov
flds
add
or
add
cmp
mov
outsl
push
fstps
jne
inc
jo
pop
add
incl
mov
into
dec
int3
inc
out
xlat
jo
les
les
jge
scas
mov
cmp
ret
add
mov
jno
add
lret
lcall
bound
daa
add
sub
mov
mov
push
sbb
jo
mov
jo
or
pop
add
pop
add
movsb
leave
inc
adc
xchg
xchg
add
fsubl
inc
mov
pop
aas
leave
or
out
addr16
mov
xor
add
cmp
push
lcall
in
int3
lahf
dec
fs
push
sub
inc
xchg
daa
mov
push
lods
ljmp
in
lret
ds
mov
add
and
xor
add
adc
ficomps
xlat
dec
loope
jnp
sbb
mov
xchg
inc
arpl
pop
popa
loopne
and
add
ljmp
add
or
push
xchg
add
jg
sbb
js
xor
mov
mov
cltd
aam
cltd
je
call
dec
and
testl
adc
scas
add
aas
or
mov
rcl
stc
mov
imulb
repz
add
mov
scas
addb
das
shrl
and
addr16
xor
mov
jp
add
and
iret
adc
cmp
rcrl
roll
aaa
add
mov
cs
xchg
push
ret
lds
jbe
adc
insb
push
sar
repnz
add
dec
mov
jge
push
xchg
mov
add
xor
enter
insb
aas
add
clc
stos
divb
cld
subl
mov
popf
push
push
push
jmp
jo
lea
test
in
cmpsl
jecxz
dec
add
lcall
test
xchg
sub
ret
out
flds
add
arpl
imul
mov
jns
add
add
xlat
sti
add
ljmp
jmp
aas
add
sbb
adc
stos
in
or
insb
cmp
and
nop
leave
mov
sbb
add
jg
in
add
jecxz
cs
mov
inc
into
add
and
aam
cltd
and
adc
xchg
lds
mov
shl
xchg
cmpsb
lock
add
sub
pop
mov
cmc
repz
mov
cmp
ja
aam
das
adc
sub
add
mov
ja
in
lahf
dec
mov
xlat
sbb
cld
clc
rcrl
adc
cld
es
jne
popf
mov
cmp
or
cmc
arpl
in
dec
into
arpl
std
push
mov
and
inc
mov
cmpsb
cmp
cs
dec
push
jb
xchg
mov
std
sbb
or
decl
out
xor
or
movsl
jmp
mov
mov
shll
adc
dec
out
add
pop
fstl
cmp
into
push
gs
inc
ds
add
jmp
add
dec
cmp
push
adc
lcall
or
jno
adc
lret
jmp
fwait
sbb
sub
rorb
or
mov
dec
lods
push
xor
jae
xchg
stos
ljmp
or
ljmp
add
test
inc
xchg
adc
leave
xchg
add
call
repnz
js
mov
sub
into
add
flds
mov
ret
push
xchg
addl
sub
xlat
std
repnz
test
xor
sub
mov
ds
dec
fmull
testl
push
in
das
aam
sbb
dec
add
xor
add
pop
outsb
mov
mov
pop
movsb
jecxz
in
push
xchg
addb
or
pop
xor
add
aam
add
scas
nop
jge
mov
sti
leave
std
add
ss
dec
fs
dec
add
mov
insb
sbb
fcoml
mov
dec
inc
mov
cmp
add
add
xchg
inc
sub
insl
push
ja
push
mov
pause
int3
or
js
pop
clc
and
push
js
cmpsl
push
cwtl
data16
daa
or
push
int
jb
add
pusha
outsb
daa
add
movb
dec
push
les
push
mov
add
roll
add
jg
shlb
je
adc
add
inc
xchg
hlt
or
iret
jp
jo
add
fildl
add
outsl
jb
or
test
fxch
add
jns
xchg
daa
add
loop
cmp
jmp
inc
inc
mov
add
ficoms
mov
push
add
pop
sub
dec
icebp
ss
mov
loopne
push
add
pop
clc
in
and
adc
mov
out
jo
mov
mov
pop
js
jno
jne
lret
fadds
dec
sbb
cmpl
pop
push
lahf
add
or
sbb
notb
mov
lods
out
ss
push
cld
xchg
movsl
and
pusha
jp
sub
out
mov
lock
lods
add
or
leave
inc
inc
pop
mov
cmpsl
inc
pop
and
imul
rcrl
inc
jp
pop
inc
nop
cwtl
mov
icebp
pop
test
imul
cmp
in
cmp
in
fcos
test
or
xor
add
out
shlb
cmc
xor
stos
popa
movsl
add
xchg
xor
inc
inc
xchg
cmp
addr16
add
dec
aad
xor
fidivrl
jo
push
dec
stos
push
add
or
mov
adc
mov
repz
dec
mov
push
mov
mov
jl
insl
add
cmp
adc
fdivl
jecxz
push
scas
scas
add
in
add
push
dec
movsl
scas
dec
and
call
xchg
sub
fisttpl
lods
push
cmp
jp
movsl
add
and
add
jg
cmp
decl
add
stos
sbb
or
jno
dec
loop
inc
xor
cli
ficoms
sbb
lret
or
sbb
jecxz
cld
xchg
inc
pushf
aas
push
incb
arpl
loopne
pop
mov
xlat
add
ds
fadds
inc
mov
mov
sbbl
mov
mov
jle
xlat
data16
mov
insb
loopne
pop
jmp
stos
aad
dec
sbb
cmpsl
mov
je
dec
mov
add
pusha
xorb
negl
sub
mov
cli
mov
loop
jno
lahf
inc
loopne
pop
into
and
add
mov
xchg
roll
push
fiaddl
or
lret
loope
aad
mul
or
movsl
add
mov
dec
daa
insl
aaa
leave
adc
inc
in
jecxz
and
xchg
mov
dec
mov
dec
dec
cwtl
fdivrs
dec
jle
sub
pushl
xlat
and
mov
adc
or
add
out
enter
in
cmp
adc
rcrl
mulb
out
lret
pop
addb
push
repnz
repnz
mov
add
shl
ret
enter
mov
mov
outsb
add
arpl
dec
xchg
test
add
or
mov
pop
sbb
xchg
cmp
add
sti
bound
movsb
jl
add
shlb
leave
testb
pop
and
adc
inc
add
inc
add
push
mov
pushf
sti
xor
fcompl
pop
fs
or
inc
adc
dec
push
adc
ss
in
rcrl
inc
sub
xchg
xor
mov
outsl
pop
mov
std
fwait
sti
ret
xlat
fwait
pop
inc
sbb
jg
and
jno
jb
movsb
rcrl
popf
add
xchg
add
scas
lock
test
out
push
fsubrl
mov
outsb
push
add
ds
mov
xchg
xor
xchg
add
push
and
dec
or
add
jle
add
sub
adc
cmp
add
daa
pop
jmp
inc
add
loope
jg
add
sub
add
iret
repz
mov
add
rolb
sahf
sbb
xchg
aas
enter
push
mov
pop
or
add
jb
and
sbb
pop
arpl
std
hlt
jne
add
dec
gs
mov
xor
hlt
add
movsb
loopew
sub
jmp
arpl
inc
inc
call
lods
dec
pop
dec
or
add
popf
clc
jo
push
mov
test
xor
pop
fidivl
and
mov
add
push
sub
rclb
or
sub
nop
pop
adc
mov
in
cmpsl
js
jne
jae
mov
adc
call
xor
push
xchg
fwait
adc
and
mov
sbb
pop
mov
stos
push
outsb
and
push
xchg
add
icebp
inc
jnp,pt
ljmp
jmp
mov
pop
xlat
push
dec
dec
stos
mov
iret
pop
pop
jecxz
femms
push
lret
and
sub
xor
mov
icebp
xchg
cmpsb
roll
sahf
add
xchg
popa
and
mov
jp,pn
int
jmp
pop
jne
jae
mov
inc
imul
ds
xchg
sub
pop
pop
dec
add
add
mov
lahf
lret
mov
mov
aas
mov
cmp
add
xchg
test
sub
add
dec
ja
xchg
push
add
push
pushf
cmp
jne
out
and
je
adc
add
dec
shll
std
inc
rcrl
mov
jg
cmp
sbbb
sti
mov
adc
rol
add
je
sahf
mov
pop
mov
jo
imul
lcall
punpckldq
mov
pop
mov
add
add
outsl
or
sub
ret
jne
andb
mov
sbb
sbb
pop
pop
add
lcall
xor
push
mov
movb
jp
pushf
sbbb
jmp
and
out
jne
cmp
in
mov
pop
pushf
movsb
mov
push
pop
sahf
sbb
mov
mov
add
jl
sub
xor
add
jp
push
test
adc
push
cmp
scas
add
add
inc
push
jns
push
xor
push
mov
pop
mov
dec
lds
mov
into
mov
cmp
addb
jecxz
add
mov
add
shr
ljmp
stos
je
and
add
hlt
mov
pusha
lock
pop
cmp
dec
jae
gs
fst
hlt
cmp
stc
add
or
dec
cmp
jb
add
arpl
stos
lock
pop
sub
and
jecxz
cld
repnz
push
shll
mov
mov
cltd
mov
adc
add
xchg
hlt
in
out
sahf
aam
addr16
pop
push
dec
add
sub
mov
or
push
loopne
xchg
add
push
scas
stos
in
add
dec
aaa
lcall
jbe
shll
push
in
dec
add
int3
xchg
clc
jns
sub
ja
push
sbb
pop
jecxz
mov
outsl
jo
dec
xor
aam
cltd
inc
mov
popf
cmp
add
push
pop
xor
inc
xor
addb
sub
in
aam
sub
or
popa
adcb
mov
xchg
lods
in
mov
push
hlt
bound
out
iret
xor
xchg
pop
aas
negl
add
enter
mov
jecxz
add
popf
add
add
xchg
jg
jle
cmpsb
fistps
test
add
lcall
push
out
jno
fstps
insl
out
or
icebp
and
push
add
mov
scas
adc
pop
ljmp
mov
fnsave
sbb
rolb
jns
clc
aas
es
or
jno
add
cmp
xchg
xchg
fcoml
les
fbld
push
mov
icebp
mov
cmp
dec
push
inc
cld
stos
add
mov
add
xor
push
leave
divl
pop
add
pop
xchg
pop
sbb
ret
add
adc
mov
xchg
stos
push
or
mov
sub
rolb
inc
and
dec
dec
dec
push
ljmp
add
scas
xor
arpl
add
inc
add
iret
or
out
pushf
push
jbe
gs
loopne
jns
cmp
outsb
pusha
stos
cmpb
es
fistpl
nop
data16
mov
lret
add
cli
roll
pusha
out
flds
das
insl
fwait
sub
fcompl
fs
lds
push
add
insl
cmp
dec
add
add
jl
mov
roll
jge
fldenv
xor
int3
sub
sbb
push
mov
ja,pt
and
mov
add
adc
dec
add
es
add
fisubl
scas
sub
arpl
and
mov
popa
sbb
mov
pushf
xor
add
and
xchg
or
mov
pop
mov
xlat
mulb
lock
adc
fucom
repz
mov
in
inc
das
mov
sbb
jae
mov
repnz
int
or
add
add
mov
cmp
mov
pop
mov
cmp
pop
shll
and
pusha
jg
shlb
pushf
inc
lcall
jnp
mov
in
push
pusha
add
repnz
dec
adc
mov
int3
les
and
dec
dec
enter
mov
push
movsl
enter
xchg
stc
insb
pop
rolb
in
enter
add
push
push
pop
add
insl
xchg
push
adc
adc
dec
fwait
rcrb
inc
movsb
shll
js
shlb
add
add
in
fwait
and
add
ret
ds
xor
fisttpll
xor
push
bound
ljmp
decl
xchg
mov
push
in
sub
add
jp
testl
xor
or
int
xchg
sub
xor
iret
add
shll
add
into
cs
pop
xor
movb
lock
hlt
les
sbb
xchg
sbb
add
jecxz
or
outsb
mov
into
scas
iret
push
sub
jbe
icebp
cmp
and
add
mov
jo
or
loop
inc
add
add
xchg
jge
adc
clc
nop
and
jl
out
jns
mov
pop
sbb
xor
or
insb
aad
mov
xor
push
mov
jle
aam
mov
mov
lcall
jno
shl
jns
les
mov
sti
mov
repz
inc
push
ss
sub
push
push
pop
and
das
or
pop
adc
int3
pop
call
mov
add
mov
adc
imul
addl
loop
pop
xor
pushf
clc
in
hlt
arpl
xor
nop
cs
fadd
sub
js
mov
push
sub
and
movsl
and
sub
ljmp
cltd
cmp
imul
addl
hlt
add
jae
adc
pop
push
jmp
mov
xchg
pop
jne
flds
add
add
xor
mov
add
inc
or
add
rcrb
add
jle
xchg
push
in
mov
push
add
lcall
fildl
and
or
xor
les
add
ret
orl
cmp
mov
inc
test
sahf
pop
lods
ret
mov
jecxz
rolb
clc
push
loopew
lds
loop
add
std
in
push
cmpb
outsb
adc
fs
mov
mov
sub
and
pop
arpl
jns
mov
and
lcall
movsl
cmp
add
and
add
add
add
lods
adc
push
inc
mov
cwtl
add
repz
ss
mov
outsb
scas
mov
iret
xor
jnp
out
aas
add
scas
xchg
mov
sbb
fstps
lret
pop
cmp
and
cmp
jae
pop
loope
sti
test
add
xor
loopne
inc
xchg
xor
mov
cltd
xchg
mov
pop
mov
jb
pusha
fldenv
cs
outsb
sub
jp
jno
out
sbb
jmp
sub
push
jl
push
adc
mov
jmp
cmp
nop
jmp
pop
movsl
xchg
movsl
fwait
verw
rol
xchg
lcall
xchg
cmp
jl
stc
or
add
push
mov
popa
and
stos
ret
xor
push
jge
jo
push
add
cs
push
add
mov
sar
mov
push
stos
mov
inc
addl
add
or
pop
outsl
xor
and
daa
rolb
iret
imul
xchg
dec
jnp,pn
adc
push
add
add
aam
add
std
movsl
dec
rorl
jno
mov
pop
data16
jae
fcmovnbe
xor
les
mov
pushl
bound
mov
mov
test
mov
imul
or
aad
add
in
push
xchg
enter
insb
aam
jg
dec
fldenv
add
xchg
lods
xlat
and
and
add
xchg
cmp
fsubrl
std
fdivs
push
lods
fists
fwait
out
inc
cli
mov
in
and
icebp
divb
mov
jecxz
rcll
test
adc
add
repnz
repnz
jecxz
outsl
repnz
out
push
scas
pushl
cmp
dec
jo
iret
popf
lcall
add
add
enter
push
or
add
popa
addl
cli
jo
sbb
or
into
mov
out
add
push
dec
push
roll
fadds
mov
xorl
jl
jle
or
out
xchg
fidivrl
sbb
jae
push
idivb
mov
add
adc
and
into
add
lock
out
out
jns
sete
adc
pop
xor
pop
jo
mov
mov
out
add
mov
mov
sbb
adc
add
add
cltd
fsubp
dec
loope
and
add
cmp
dec
add
movsb
or
ficompl
aad
mov
add
test
bsf
sbb
pop
push
pop
or
add
jb
push
in
xchg
lret
push
add
iret
xchg
jecxz
fs
sbb
scas
pusha
stos
stc
dec
loopne
ret
imul
negb
fldcw
cmp
aas
push
mov
bound
into
adc
push
pop
pusha
jge
pop
repnz
jae
cs
or
push
xchg
ror
xchg
dec
jae
mov
add
xchg
lea
ds
push
add
lock
adc
inc
sbb
call
scas
packuswb
ljmp
testb
sub
or
add
mov
repnz
jl
mov
push
push
mov
add
movsl
rcrl
mov
sbb
mov
lahf
add
out
xor
test
cltd
pop
push
repz
xchg
pop
add
ljmp
in
fucomi
add
cmc
xor
cltd
inc
outsl
mov
sub
add
push
adc
call
subb
push
sti
xor
ja
fcomp
mov
jb
add
jp
pop
pop
add
add
loope
je
mov
mov
xor
enter
sub
cld
fnsave
xlat
inc
push
pop
sub
push
push
sahf
sbb
add
punpcklbw
movsb
daa
pop
shlb
add
rcl
fistpll
loope
aad
mov
sbb
mov
mov
add
xchg
mov
insb
stc
push
xchg
out
lods
add
and
fcomps
sub
into
add
add
dec
mov
shrb
mov
je
xchg
das
sbb
mov
inc
add
xor
shlb
and
mov
sub
add
adc
xor
aaa
xchg
mov
cmp
addr16
sti
inc
add
je
in
dec
xchg
sub
outsb
mov
push
sti
test
add
mov
add
fbstp
sahf
sub
jg
loope
hlt
test
mov
pop
add
sub
or
jbe
int3
add
fs
data16
adc
stc
addr16
sti
inc
adc
pop
gs
hlt
push
jg
imul
xchg
jns
pop
dec
sbb
addb
dec
lock
mov
out
sub
pop
add
scas
add
add
lods
pop
add
sarb
inc
pushf
imul
fldl
movl
pusha
leave
shr
sub
imul
push
lret
repnz
add
nop
sub
xchg
mov
mov
sub
in
push
sarb
outsl
sbb
cmp
xor
push
stos
cmp
add
pop
into
out
imul
mov
mov
jl
add
add
loopne
lods
and
in
incl
adc
add
cmp
test
add
movl
enter
xor
shrb
dec
mov
leave
adc
xchg
inc
lods
push
lods
mov
mov
bound
and
scas
mov
outsl
lds
inc
add
outsb
add
xorl
sub
inc
dec
add
cmp
data16
repnz
jb
dec
mov
add
xchg
adc
aad
aaa
fisubl
aam
inc
iret
and
xor
das
push
lret
add
aas
lahf
fldenv
xchg
popf
aas
add
cmpl
push
jge
mov
pop
outsb
mov
cltd
das
sub
pop
inc
and
xor
jge
push
ficoms
in
movsb
inc
dec
xchg
add
xlat
add
mov
jle
push
mov
fs
mov
fnsave
jecxz
mov
push
sub
push
and
sbb
shr
repz
dec
subb
mov
mov
jl
fcoms
add
sahf
pusha
jne
mov
mov
push
jmp
or
lea
sbb
add
lock
enter
add
pop
lods
sub
add
je
inc
rep
int3
icebp
xor
add
sub
add
pop
scas
add
repnz
out
fisttps
lahf
jg
imul
test
jle
aaa
cmp
in
push
cld
test
icebp
inc
push
push
ss
lret
test
mov
xchg
sbb
fdivrs
xor
lds
repz
cmp
pop
add
jns
push
mov
push
loope
mov
mov
and
repz
sbb
pop
mov
jbe
dec
xchg
out
dec
fwait
in
imull
add
jo
int3
jmp
push
repz
jmp
repnz
cmp
mov
test
aam
aaa
dec
imul
aad
cmp
aas
pop
mov
xchg
imul
gs
sub
sbb
scas
adc
pop
add
mov
push
jg
ret
mov
jne
test
push
stos
stos
sub
imul
incl
and
mov
les
daa
sub
add
inc
cmp
pop
insl
pop
sbb
insb
jl
jle
adc
jl
aam
movsb
icebp
add
cmp
scas
pop
cmpsl
clc
add
shrl
sub
addb
cld
and
pop
mov
push
stc
xor
outsb
jns
loopne
add
loope
inc
call
ss
jmp
or
xor
jmp
popa
cmp
pop
pop
mov
dec
adc
sub
add
inc
enter
xchg
ja
add
mov
enter
andl
cmc
add
sbb
sbb
mov
add
jae
std
add
jno
out
add
scas
xchg
xor
nop
out
xchg
sbbb
es
movsl
aaa
gs
mov
gs
mov
inc
pop
xor
popl
mov
xor
es
cmpsl
sub
jo
add
nop
repz
cmova
lahf
lods
xor
adc
scas
push
dec
add
aam
mov
jnp
add
stos
jmp
mov
add
push
mov
in
add
xor
sbb
xor
ljmp
or
jecxz
sub
add
je
sub
sub
aas
repnz
dec
mov
out
daa
push
jg
testb
xor
mov
add
movsl
les
mov
sbb
add
dec
push
cmp
daa
ret
mov
add
mov
sub
repnz
jp
lahf
imul
xchg
mov
and
stos
and
aam
flds
lcall
in
fisttpll
inc
jbe
fnstcw
addb
mov
sbb
pop
arpl
mov
cmp
ja
pop
daa
repnz
das
add
cmp
mov
mov
ret
fs
jmp
jb
jno
les
add
add
add
and
stos
jge
mov
stos
fadd
lock
add
aam
add
outsl
add
fs
mov
fwait
add
push
or
add
dec
aas
lods
push
scas
or
xchg
mov
or
pop
cmpsl
insl
mov
and
and
mov
inc
jl
pusha
imulb
cmp
repz
mov
dec
and
sbb
aas
push
cmpl
arpl
pop
je
mov
outsb
add
dec
add
add
repnz
shr
or
xor
jmp
mov
add
add
ss
and
cmp
dec
push
inc
pop
icebp
jge
lods
rorl
cli
leave
add
sbb
mov
add
xchg
repz
cli
push
aaa
ss
add
sub
adc
mov
cwtl
mov
jmp
stc
movb
mov
scas
cmp
pop
push
jg
cmp
pop
scas
mov
das
or
dec
add
in
mov
cmc
xchg
add
dec
cltd
mov
cs
sbbb
add
xchg
idivb
mov
out
out
mov
cmc
xchg
add
movsl
gs
mov
inc
aad
and
addr16
out
sbb
int
add
xchg
push
jae
push
add
je
dec
in
shrl
lcall
and
mov
subl
sarl
add
sbb
fcmovu
or
cmp
jae
sbb
cld
add
aas
xor
jmp
add
jle
or
cltd
push
sbb
add
repnz
jb
leave
outsl
in
sbb
cmp
test
inc
mov
add
clc
mov
popa
dec
imul
sub
xchg
and
add
mov
inc
mov
js,pt
mov
mov
in
add
sti
sub
mov
xlat
mov
xchg
mov
add
lea
add
inc
enter
arpl
es
add
push
pop
data16
or
fwait
ds
lea
add
js
mov
fs
je
aad
mov
add
dec
pop
orb
lds
add
xchg
cwtl
add
and
notl
and
add
lret
addb
add
bound
mov
out
jp
cmp
inc
mov
add
movsb
out
jbe
push
enter
jge
in
add
pop
jmp
xor
es
repnz
pop
nop
mov
fcompl
aad
daa
jno
xchg
inc
pop
cmpsl
add
xchg
cmova
add
clc
jmp
ret
add
int
ret
push
test
xchg
inc
sbb
cli
test
jmp
loopne
negb
and
nop
mov
lret
or
popf
cs
sub
movb
inc
incb
add
xchg
mov
dec
add
pop
dec
sub
add
pop
rorb
add
jb
cli
loopne
jnp
test
inc
cld
ret
stos
sbb
add
shll
add
into
cmp
jl
jb
add
mov
lret
xor
int
lret
cmp
push
out
add
dec
int3
js
fldcw
pop
lock
lods
das
movsb
mov
adc
adc
daa
add
xor
filds
jns
cmp
cmp
rclb
add
pop
mov
leave
push
push
mov
add
or
in
cmpsl
sti
mov
shlb
inc
mov
mov
add
aad
dec
loop
mov
xlat
call
call
and
xlat
add
pop
or
cld
mov
jp
mov
sbb
add
jbe
nop
sti
add
aam
cmp
pop
add
out
mov
or
mov
mov
ja
dec
decl
scas
leave
add
xor
mov
mov
lret
push
add
xchg
add
jge
and
insb
stos
iret
add
aas
inc
add
dec
xchg
iret
dec
fiadds
jp
or
stos
add
jmp
cld
xchg
and
nop
xlat
sub
lods
arpl
mov
sbb
pop
pop
add
lahf
push
mov
outsb
loop
pop
pop
stos
mov
jns
add
add
cmpsb
mov
inc
in
add
push
aas
imul
in
test
pushl
add
lcall
sub
stc
jl
push
negb
mov
call
inc
pop
or
enter
sub
leave
shr
mov
push
fcompl
iret
mov
add
add
fwait
mov
jg
pop
call
add
and
mov
or
test
jae
call
pushf
add
divb
andb
pop
imul
in
mov
pop
test
adc
xchg
xchg
insl
mov
es
push
imul
mov
sub
xor
lcall
jmp
es
clc
ja
outsb
shl
push
cmpsl
inc
add
add
xor
icebp
nop
push
inc
out
fiaddl
roll
and
out
xchg
add
mov
push
push
push
push
int
jmp
cwtl
cwtl
sbb
in
mov
pop
outsb
dec
cltd
call
sbb
add
outsb
das
nop
andb
adc
xor
test
in
mov
ret
icebp
imul
outsb
into
adc
pop
sbb
ljmp
jg
xchg
cmpsb
pop
or
add
aam
movsl
add
or
fwait
jl
out
ret
or
push
add
pop
add
loop
dec
add
push
jae
inc
mov
adc
scas
mov
adc
xchg
addb
fimuls
xchg
insl
dec
add
inc
ljmp
add
loope
ds
sarb
add
push
imul
jle
inc
pop
mov
pop
mov
xor
or
cmp
rcrl
imulb
mov
dec
cli
rcl
stos
mov
inc
leave
cmp
add
jno
scas
fs
push
inc
xor
xchg
test
add
outsb
repnz
xor
loopne
add
cmp
cs
add
pop
mov
or
add
mov
xchg
repz
xor
push
add
xor
sbb
xorb
pop
add
push
gs
add
xlat
or
push
es
sub
xchg
sub
call
mov
push
push
and
outsb
pop
clc
clc
mov
sub
test
jns
add
xor
outsb
dec
aas
rclb
add
movsb
jmp
dec
pop
mov
pushf
add
das
dec
xchg
or
lcall
ret
pop
add
jg
push
repz
imul
je
cmpsb
and
mov
add
push
pop
add
into
pop
daa
rcrl
add
hlt
mov
or
sbb
mov
es
std
std
pop
outsb
bound
add
add
cmp
ror
je
mov
pop
sub
aaa
mov
scas
inc
add
xor
inc
mov
sub
in
mov
mov
jmp
in
arpl
or
out
xor
arpl
or
cmp
outsl
shl
loop
sahf
dec
sub
and
and
adc
mov
add
clc
xor
dec
sub
ds
mov
and
jge
data16
movsb
cmp
add
movsb
cmp
add
jbe
or
mov
mov
xchg
xchg
inc
pop
jmp
arpl
dec
mov
in
add
sbb
add
xor
in
ss
inc
arpl
jno
enter
imul
cmpl
inc
jl
add
loope
lods
into
mov
pop
out
test
daa
lahf
mov
call
pusha
rcr
orl
insb
add
mov
loope
adc
xor
and
push
pop
dec
es
xor
or
cmp
std
mov
sahf
fs
mov
fst
fwait
test
ja
mov
jno
test
popf
inc
and
xchg
mov
jns
out
sub
jle
sub
push
sub
hlt
jb
xchg
jb,pn
jno
adc
add
movsl
xor
in
insl
dec
adc
add
push
add
mov
iret
or
add
add
cmp
repz
add
roll
add
add
test
test
cmc
push
ljmp
add
jp
cmp
add
mov
add
cmpsw
mov
xor
xor
push
inc
add
cmpsl
lock
test
and
orb
mov
push
mov
out
mov
mov
mov
cmpsb
sbb
add
sub
add
cmp
push
fisttpll
movsl
lcall
pop
rcrl
push
xor
dec
mov
int
mov
jle
test
shl
test
sbbl
inc
stos
cs
int
xor
ficoms
sub
sub
sbb
mov
adc
mov
jns
adc
ds
mov
mov
mov
test
xchg
add
pop
mov
add
out
repz
push
add
mov
sbb
dec
icebp
dec
xor
push
imul
out
fimull
xchg
sub
testb
xchg
dec
mov
mov
lahf
dec
adc
shlb
mov
mov
mov
ljmp
add
jo
outsb
insb
out
movsl
pop
push
sub
lds
xchg
add
add
jmp
ds
sbb
clc
dec
cmp
test
mov
and
aaa
xor
fldenv
dec
push
jge
inc
add
lret
scas
dec
inc
mov
jne
sub
call
xor
pop
pop
mov
add
push
inc
mov
aas
pop
out
cld
jb
inc
aaa
xlat
popa
addr16
loop
push
sar
push
xchg
push
incb
dec
jmp
xchg
dec
and
gs
add
nop
dec
xor
xchg
jb
das
cmpsb
ss
jno
rcr
cmpsl
dec
pop
lret
push
mov
and
fdivrs
and
pop
imul
adc
lcall
sub
jbe
add
add
adc
fldcw
pcmpgtb
push
shl
je
add
inc
mov
add
ljmp
add
mov
dec
pop
add
jg
jnp
mov
add
sub
mov
rorl
repnz
adc
sub
fwait
insb
roll
scas
add
dec
sub
decl
jo
jmp
inc
ljmp
xor
push
imul
adc
arpl
xchg
mov
aam
fs
fwait
ja
sub
incl
cmpsl
xor
fcompl
xor
dec
movsl
bnd
imul
inc
mov
or
add
mov
jge
mov
add
aaa
xchg
sub
nop
xchg
repnz
movsb
mov
shrl
sbb
adc
sub
pop
pop
int
add
mov
icebp
ds
sbb
add
movsl
pop
sbb
inc
add
jo
jb
mov
mov
popa
mov
dec
ret
or
test
add
and
movsl
add
ss
xchg
inc
sbb
mov
rorl
rolb
xor
out
mov
push
sar
scas
adc
xchg
inc
sbb
cmpsb
pop
jae
push
adcl
add
jbe
mov
shl
adc
mov
in
sub
das
inc
and
dec
add
cmp
int
add
sub
add
fstl
cld
jns
dec
adc
jne
insb
mov
push
in
adc
popf
aaa
mov
pop
pushf
jnp
lret
jmp
rorb
push
inc
out
ret
js
xor
add
stc
loopne
bound
dec
mov
in
add
stos
inc
and
cld
addb
pop
add
adc
pop
inc
xchg
jno
outsb
out
je
aas
add
mov
mov
popa
inc
sbb
out
cmc
bound
mov
dec
mov
pusha
mov
push
or
scas
adc
and
sbb
push
pusha
nop
mov
orb
cmp
in
and
arpl
jmp
mov
add
out
cmp
les
rorl
jne
push
sub
fisubrs
sbb
add
cmp
xchg
xchg
mov
add
inc
mov
loopne
or
adc
adc
lret
pop
jle
sbb
add
or
pop
inc
cwtl
push
nop
out
pop
xchg
out
dec
mov
add
jbe
add
xor
mov
fdecstp
push
aad
test
loope
and
sub
add
or
mov
ret
mov
pop
push
pop
adc
xchg
pop
outsl
sub
mov
adc
int3
cmpsb
and
push
sbb
pop
cmpsb
outsl
dec
fbld
add
cwtl
iret
loop
cmpsb
add
mov
dec
add
test
dec
and
sbb
add
clc
jb
icebp
test
mov
or
add
mov
cmpsl
pop
pop
shr
xchg
xchg
push
cs
js
dec
dec
mov
xlat
fldenv
cmp
inc
cltd
xchg
in
aad
in
xchg
sahf
cld
jbe
add
mov
iret
pop
lods
daa
push
das
testl
add
lods
arpl
pop
cltd
xchg
jmp
add
cmp
adc
arpl
ret
add
lret
pop
imul
ret
add
add
xorb
add
sub
lcall
mov
pop
sbb
xchg
or
mov
sbb
clc
jp
faddl
push
dec
push
xor
out
inc
mov
neg
sahf
xchg
cmc
push
dec
fldl
add
lret
sub
inc
nop
jmp
mov
dec
add
mull
pusha
push
jp
sbb
pop
hlt
lcall
nop
add
and
add
pusha
jg
add
cmpsl
daa
or
daa
mov
aam
lea
fidivrl
movsl
add
in
dec
stos
sub
inc
mov
filds
shll
leave
add
add
mov
pop
add
add
push
xchg
jmp
loopne
or
outsl
add
sub
add
test
sarl
insb
inc
pop
fistl
and
aam
std
xchg
add
mov
mov
add
nop
cli
push
jg
mov
rolb
push
loop
enter
jecxz
sbbb
lret
stos
cltd
add
push
fadds
push
btl
insl
push
mov
aaa
cmc
cmp
loop
or
add
add
sbb
lock
inc
ds
mov
out
sbb
push
add
insb
inc
push
adc
lahf
dec
test
add
inc
or
push
jbe
out
mov
xor
push
or
in
insl
sub
mov
add
insl
psrld
cmp
push
popa
dec
in
pop
xchg
cwtl
push
and
jmp
xorl
pop
test
xor
xor
jmp
push
xchg
movb
cmp
roll
into
sarl
sbb
icebp
fisubl
pop
mov
out
jg
bound
test
adc
call
leave
dec
mov
ja
inc
mov
add
sbb
aaa
aas
js
fadds
aas
xchg
rcrb
cmp
add
cmp
jns
rcrl
jbe
icebp
xor
add
jmp
rcrl
sub
xor
enter
arpl
pop
dec
lods
cmp
loope
iret
out
inc
jns
xor
icebp
std
iret
rclb
add
sbb
arpl
popa
push
inc
add
mov
int3
push
push
mov
aas
gs
cmp
popf
jne
int
mov
scas
cmp
xchg
or
push
rcll
aad
pushl
nop
jne
mov
in
sub
push
das
lret
mov
push
insl
das
jb
cmp
push
call
mov
cmpb
mov
rcl
pushf
xor
stc
add
pop
jle
add
cmpsl
inc
jbe
cwtl
lcall
lahf
add
fsubl
or
shll
inc
arpl
add
scas
or
pop
lret
call
adc
add
push
mov
cmpsb
push
add
in
mov
push
inc
pop
push
xchg
mov
je
insl
insb
add
mov
add
xchg
add
rorb
inc
dec
mov
incl
call
cwtl
cli
popa
mov
xchg
clc
test
sub
sbb
outsl
pop
gs
and
shrb
mov
add
push
out
sbb
ljmp
nop
movb
adc
jecxz
fimuls
adc
cmc
push
or
push
enter
xchg
push
pop
add
adc
imul
mov
jmp
xchg
mov
sub
repnz
loope
jnp
movsb
cmpl
mov
pop
mov
pop
inc
push
mov
jle
push
inc
clc
int3
pop
in
dec
outsb
cmp
rorb
mov
lods
cmp
cmpsb
mov
fimull
sbb
push
adc
mov
subl
adc
dec
adc
lods
and
sbb
stc
xor
add
push
push
popa
pop
add
and
jnp
dec
pop
cs
leave
mov
lds
mov
leave
xchg
repnz
mov
jp
sbb
adc
ds
lahf
add
pop
cmc
addl
push
movb
bound
inc
mov
add
movsb
or
jmp
adc
jle
dec
sub
or
add
shr
push
es
cwtl
stos
clc
addr16
push
cld
idiv
or
aaa
test
stos
mov
add
fmuls
or
mov
jmp
add
add
jecxz
lret
add
dec
ret
dec
cld
jg
xor
int
rcr
imul
into
and
jbe
mov
add
rcl
int3
test
cmc
aam
movsl
cmpsl
add
add
loop
or
pop
add
aas
xchg
subl
ret
and
and
das
add
repnz
add
xchg
shrb
add
test
mov
testb
pop
loop
pop
repnz
sti
hlt
add
aam
jmp
std
add
loop
sarb
mov
out
pop
push
xchg
sbb
nop
icebp
add
jb
add
loope
xor
pop
add
mov
sub
fbld
lock
decl
call
sbb
dec
and
and
mov
inc
jnp
fldenv
pop
cmc
lds
xor
inc
rolb
and
sub
lods
add
ficoml
incl
jge
or
add
push
cmp
add
int
add
insb
nop
hlt
mov
sub
or
jmp
add
lcall
mov
xor
insl
inc
shrl
dec
cmp
call
pop
ret
add
lret
jnp
push
repz
cmp
shrl
jmp
pushf
pop
movsl
scas
pop
testl
lods
into
mov
push
push
pop
add
aam
loop
das
add
push
test
sub
cmpsb
out
aad
push
or
sub
lcall
test
neg
xor
aad
aas
add
jb
call
cmpsb
xor
push
out
adc
add
add
and
xchg
in
enter
mov
cld
jae
adc
adc
pusha
fdiv
test
test
mov
fwait
into
clc
into
xchg
dec
add
xchg
stc
movsl
mov
das
shrl
lock
inc
add
xor
xlat
outsl
cmp
jmp
mov
add
mov
enter
inc
jmp
int3
jg
fwait
xor
rorb
inc
inc
gs
ficompl
jmp
mov
stos
inc
mov
int
mov
and
and
add
lock
lock
movsb
sub
jbe
lcall
or
out
hlt
add
ffree
roll
jl
cmp
add
pop
in
and
mov
pop
stc
sbb
or
add
cli
mov
push
xor
pop
mov
mov
jae
push
xor
dec
cs
fnsave
loope
fadds
insl
cltd
dec
add
jae
sub
fwait
das
lahf
add
push
jno
sub
daa
es
sbb
ljmp
negb
xchg
or
popl
add
bnd
adc
inc
cmp
push
mov
add
ror
cmp
mov
and
mov
int
es
and
add
imul
add
or
inc
pop
pop
add
adc
add
daa
push
out
test
or
add
fildl
add
adc
ret
add
dec
js
inc
push
add
add
add
sub
mov
fdivs
or
ss
enter
enter
cmp
loope
jecxz
ucomiss
mov
or
add
sbb
movsb
add
cmc
pop
fisttps
mov
std
mov
add
test
ret
les
xchg
and
adc
aad
ds
cltd
iret
scas
enter
pop
add
ds
repnz
cmc
xchg
daa
cmp
inc
jmp
or
outsl
and
lods
jecxz
push
jle
stos
ja
lea
loop
hlt
add
add
add
nop
js
mov
and
outsl
xor
xchg
lcall
add
mov
ret
mov
push
out
sub
pop
mov
mov
pushf
jecxz
lret
out
xor
or
add
inc
or
aam
test
lcall
adc
inc
mov
jge
outsl
jnp
inc
push
loop
sahf
fistps
add
stos
sub
add
out
popl
sarb
jecxz
lldt
repz
dec
popa
imul
push
push
out
add
pushf
lods
add
test
dec
add
jbe
movsl
in
adc
mov
cltd
sub
fldl
cs
mov
sahf
sub
add
cltd
xor
jp
mov
ficompl
xor
push
inc
repz
stc
out
cwtl
outsl
sub
jecxz
push
add
pushf
and
jnp
sub
inc
mov
cli
xchg
add
out
jb
inc
rorl
mov
add
iret
inc
loopne
enter
jmp
les
fmuls
mov
cmpsb
pop
and
mov
repz
add
rclb
pop
mov
in
xchg
jne
lea
inc
pop
add
push
lea
jno
and
push
push
repz
aaa
popf
and
call
xlat
sti
sbb
mov
jg
inc
mov
xor
cltd
push
ss
ds
jbe
mov
add
or
sahf
into
outsb
shlb
aam
push
add
and
push
pop
imul
cmc
pop
inc
adc
inc
pop
std
out
idiv
ljmp
jno
imul
add
dec
push
mov
fdivl
add
lods
call
sub
mov
sahf
pop
cmpsb
jne
xor
xor
jp
imul
dec
call
cld
xchg
pop
mov
xor
adc
cltd
xchg
dec
add
pop
mov
repnz
xor
cmp
repnz
lods
xor
add
add
jb
cltd
jg
in
shll
into
add
je
and
mov
das
xlat
outsl
cmp
pop
inc
and
jmp
test
xchg
nop
in
es
dec
loopne
repz
int3
adc
aas
vsubss
sti
sub
add
repz
xor
lret
mov
aas
push
hlt
fsubrl
cld
mov
mov
psubusw
jnp
pushf
add
jbe
pop
in
sbb
pop
pop
add
xor
repz
inc
in
les
mov
pop
add
or
call
add
lods
outsl
add
push
mov
testl
and
inc
jo
add
mov
mov
in
je
sub
test
fcmovnbe
movsb
mov
jnp
push
lea
fs
pop
sub
imul
xor
mov
xchg
and
xchg
dec
mov
mov
pop
add
jb
and
xor
faddl
or
adc
stc
fstpl
and
push
xchg
loope
out
inc
add
cmpsl
mov
iret
sbb
dec
mov
pop
or
mov
movsb
rolb
xchg
jo
and
sub
scas
jno
mov
pop
ret
mov
mov
roll
xor
mov
xor
out
cli
mov
inc
xchg
insb
add
push
add
xchg
hlt
ret
mov
inc
adc
test
xchg
in
mov
outsb
pop
sbb
stc
stos
insl
jno
push
addl
dec
jle
cmp
add
das
fsubp
int
repnz
hlt
pop
xchg
cmpb
cltd
and
push
sbb
out
jp
mov
or
stos
jmp
sarb
jge
add
xchg
xor
fs
pop
xor
mov
push
data16
add
add
in
lret
imul
sti
in
pop
sub
fiaddl
dec
ret
xor
hlt
xor
lcall
ja
mov
add
push
cltd
and
fimull
fnstenv
jae
mov
mul
cmp
push
mov
insl
mov
hlt
in
sbb
leave
das
fiadds
rolb
sti
mov
xor
adc
xor
add
pop
or
push
xchg
mov
jb
inc
adc
insb
mov
mov
jns
cmpl
das
xor
jnp
or
mov
or
add
add
enter
les
xchg
sbb
push
outsb
rolb
and
add
incb
out
add
sti
add
daa
add
stos
call
adc
push
call
xlat
fimuls
pop
jne
ja
add
shrb
rcrb
loopne
fidivrs
mov
push
ffree
popf
fildl
cmp
add
ror
imul
test
test
add
jnp
jbe
add
call
fsubrl
add
add
in
fisubrs
cs
stc
adc
xor
mov
subl
rcll
andl
xchg
push
pop
mov
push
or
inc
xchg
daa
imul
imul
xchg
pop
add
xor
icebp
clc
add
mov
add
dec
xor
add
xchg
xlat
nop
cli
fcmovb
push
js
pop
sbb
bound
pop
dec
lret
cmpl
fdivs
pop
xchg
pop
add
adc
pop
xchg
add
add
sbb
push
add
add
xchg
popa
fisttps
cmpsb
add
into
scas
jp
cmp
cwtl
pop
int3
divb
dec
xor
fs
or
inc
add
inc
add
lret
cmp
das
ficoms
cld
gs
add
sbb
in
and
mov
fisttpl
out
lds
out
insb
sub
loope
daa
outsl
add
push
jne
in
add
dec
jmp
mov
push
popa
mov
mov
jecxz
negl
adc
out
push
add
jl
mov
arpl
sbb
mov
fistpl
gs
ja
add
add
int3
jl
push
add
scas
adc
add
rol
fsts
mov
jno
sbb
sub
test
xor
and
pop
push
xor
sbb
in
outsl
cmp
test
mov
inc
std
mov
add
xlat
push
xor
jp
dec
add
mov
pop
mov
in
nop
bound
ds
and
xchg
add
fimull
mov
mov
dec
sub
mov
cmp
adc
test
pusha
xchg
adc
sub
dec
mov
pop
or
leave
push
adcb
mov
inc
decl
fisttpll
add
push
add
inc
adc
andb
gs
lods
std
add
dec
add
movsl
fcomps
xchg
outsb
dec
dec
push
mov
inc
je
int3
mov
pusha
or
pop
int
add
pop
ficoml
mov
add
xlat
stos
cld
mov
stos
mov
lcall
add
leave
loope
out
lret
jo
hlt
jmp
std
clc
mov
loop
into
lea
shl
or
xchg
push
test
or
push
mov
adc
ja
lcall
mov
add
sbb
stos
outsb
icebp
call
jae
call
mov
mov
outsb
push
int
and
add
mov
sbb
pop
into
sbb
sbb
jg
pop
inc
lcall
xchg
add
fwait
sbb
xchg
mov
push
daa
ret
inc
scas
mov
mov
lret
ds
sbb
cmp
pop
loop
jae
xchg
cmpl
add
add
movsb
jo
inc
test
inc
mov
or
addr16
and
stc
into
mov
out
mov
rcl
xor
jnp
je
inc
stos
add
movsl
fcompl
in
add
xlat
add
pop
test
jae
inc
add
inc
xor
lcall
push
jp
add
filds
add
mov
sarl
add
cmpps
mov
push
insb
int
or
call
add
xor
scas
add
add
dec
xchg
repz
xor
add
dec
xor
dec
mov
pop
xor
daa
add
ss
sbb
sahf
add
inc
das
cmpsl
mov
jns
inc
jge
insl
dec
outsl
ret
or
shlb
cmpsl
cli
push
and
push
xchg
cltd
xor
inc
push
add
aas
call
and
dec
push
mov
dec
and
inc
pushf
add
cmp
sti
mov
add
xchg
je
add
fwait
ror
inc
adc
adc
xor
cs
push
insl
or
out
xchg
lock
inc
enter
bnd
out
xor
test
add
mov
out
and
testb
enter
add
pushf
and
pop
dec
and
adc
sbbl
inc
add
add
add
xchg
inc
dec
das
and
loopne
cmp
add
js
stos
inc
lea
or
addr16
add
pop
mov
cli
ja
add
int3
dec
loope
gs
add
add
dec
mov
les
lods
sti
aad
inc
rcrl
add
lret
cmc
mov
sbb
daa
xor
push
lret
push
bound
and
leave
dec
add
sub
pop
test
add
je
js
push
push
mov
lds
xchg
loop
sub
adc
daa
cmp
jno
inc
push
adc
xchg
movsb
jnp
mov
fadds
mov
pop
gs
sbb
jl
aas
or
push
add
xchg
pop
int
aad
scas
andl
sub
test
add
repnz
pop
mov
bound
test
in
add
sbb
adc
cmp
mov
add
sub
and
mov
shl
and
rclb
push
popf
xor
int3
add
mov
outsl
test
dec
js
cld
mov
add
add
repnz
jns
and
es
push
rclb
in
outsl
xchg
add
xlat
out
add
xor
repz
out
cmpsb
add
jge
test
push
dec
cmp
dec
adc
loop
xchg
stos
xor
dec
pop
jns
mov
add
and
xchg
dec
mov
mov
std
add
sub
mov
mov
roll
add
cmp
mov
pusha
mov
or
inc
pop
xchg
push
mov
xor
outsb
ret
ljmp
jno
je
adc
xor
popa
scas
int
fs
imul
sub
cmpsl
ss
push
repz
mov
cmpl
add
inc
inc
aam
andl
int3
mov
dec
mov
dec
jmp
inc
sahf
jge
xchg
mov
add
decl
dec
xchg
pop
or
or
and
add
cmc
test
in
push
pop
or
jne
ja
loopne
push
lret
add
int
xchg
push
jp
dec
adc
ljmp
pop
jnp
cmp
pop
add
push
add
mov
jge
mov
mov
or
cmc
inc
add
sub
sbb
jmp
out
and
pop
inc
imul
sbb
mov
cmp
cmc
ds
add
mov
iret
in
jbe
filds
into
outsl
add
push
notb
sub
sbb
mov
xchg
test
insl
add
mov
aam
outsl
test
mov
out
push
jp
inc
push
clc
dec
test
or
loop
pop
popf
mov
push
add
pop
shll
mov
fiadds
dec
lret
stos
cmpsl
sbb
mov
pop
sbb
add
stc
mov
add
cld
add
add
and
loop
push
dec
add
add
lret
inc
sbb
fidivs
pop
jb
mov
inc
movnti
mov
push
add
loope
ja
and
les
sbb
loopne
pop
inc
mov
pop
mov
add
jge
out
add
mov
adc
mov
mov
adc
dec
add
jmp
fs
mov
insl
aam
incb
shll
das
jp
loopne
xor
mov
jmp
mov
mov
jb
xor
gs
mov
es
lret
pop
xchg
pop
lret
xchg
or
out
adc
iret
dec
dec
add
incl
jne
xor
add
pop
cld
int3
xor
pop
push
sbb
jg
jno
cltd
sub
inc
mov
add
int3
add
push
repnz
cmpsl
inc
das
ret
add
stos
ja
mov
mov
xchg
dec
stos
inc
loope
aas
jnp
inc
mov
xchg
push
jb
cmp
ret
mov
add
pusha
loope
dec
movsb
mov
adc
outsb
add
in
jnp
or
mov
fldl
in
or
jo
add
xchg
jnp
sbb
add
push
pop
dec
movsl
jae
push
add
mov
aad
adc
jne
add
xchg
adc
cld
es
iret
sub
shlb
in
mov
ds
fbld
mov
inc
mov
pop
in
fs
addr16
adc
add
scas
lret
jnp
les
jge
xchg
mov
cltd
dec
add
dec
mov
dec
jne
xchg
sti
cmp
lods
add
add
xchg
into
ret
arpl
jnp
sbb
insl
sub
add
and
bsf
add
loope
je
aad
xor
imul
push
or
cwtl
into
cmc
jmp
xlat
not
add
fwait
jp
flds
push
add
int3
mov
and
bound
cmc
arpl
subl
inc
adc
bound
jmp
mov
jl
sbb
cmp
xchg
add
rcl
jmp
cmp
mov
sbb
add
sahf
sbb
mov
jo
mov
lods
add
xchg
cmp
lds
cmp
stos
inc
jnp
ljmp
jns
xlat
add
jbe
adc
cmp
add
roll
inc
out
cmp
lock
cmc
jbe
insb
dec
xor
in
arpl
or
inc
dec
ja
adc
push
add
push
addb
mov
movsl
and
sti
adc
add
mov
mov
mov
mov
mov
cmc
pop
push
add
lock
xchg
lds
test
aas
adc
inc
lods
inc
push
fldcw
ja
xlat
lods
add
fcom
and
sbbb
sbb
popf
out
push
fs
repnz
add
cmp
imul
add
das
int3
mov
add
das
in
pop
xchg
push
push
mov
popa
push
into
popf
pop
ret
data16
rclb
in
je
stc
inc
add
in
and
xor
sbb
or
cmp
dec
sbb
arpl
sbb
ja
sbb
add
sub
jnp
imul
add
aaa
pop
dec
cmp
inc
inc
mov
fnstcw
add
jne
dec
imul
add
out
insb
push
and
sub
mov
hlt
sub
add
popf
push
loop
jl
inc
call
lcall
add
jmp
fsubrp
adc
mov
xor
dec
sbbb
dec
xchg
mov
xlat
std
add
xor
out
add
imul
add
pop
fnstsw
dec
add
pop
add
pop
inc
lcall
push
mov
pop
add
mov
sbb
mov
push
cltd
mov
sub
push
cltd
aas
in
adcb
add
ltr
fldl
jge
cltd
pop
daa
push
dec
call
ret
popf
repz
divb
mov
push
cmp
sub
push
xor
out
mov
pusha
add
ret
mov
mov
pop
stc
lock
fisubrl
adc
hlt
enter
mov
gs
inc
in
xchg
imul
shl
andl
test
add
add
outsb
jg
aas
or
pop
dec
cli
sbb
xchg
xor
outsl
out
and
movsl
xor
push
jns
jl
push
and
popa
xor
pop
dec
fwait
insb
push
xchg
dec
in
rclb
cld
add
push
lret
mov
in
icebp
adc
f2xm1
mov
clc
jmp
inc
push
loopne
add
dec
shlb
jmp
add
inc
pushf
testb
roll
dec
and
push
or
jg
aaa
imul
add
push
add
pop
test
pop
rolb
movsl
negb
add
dec
add
mov
push
adc
add
push
push
mov
cmc
and
sub
dec
adc
sti
xor
mov
pop
xchg
lcall
stos
cmp
aas
or
sub
push
add
sarb
nop
cmpsl
dec
pop
jae
in
dec
popa
or
inc
std
insb
sub
incl
shl
loope
dec
push
imul
iret
xlat
add
lock
mov
cwtl
and
add
pop
ret
pop
push
cli
hlt
jae
mov
inc
add
iret
call
mov
mov
cmp
pop
mov
cmp
icebp
mov
xor
lret
add
or
add
lcall
push
das
mov
sbb
roll
sahf
repnz
in
pop
mov
add
into
loop
pop
cmp
lret
mov
jbe
and
pop
push
scas
xlat
push
push
pop
repz
dec
or
dec
rcll
jg
sub
and
int
inc
cmp
adc
cmp
pop
adc
in
inc
scas
in
dec
sbb
add
xchg
jo
je
jmp
fildll
fnstcw
ret
movsl
pop
into
add
lret
sbb
mov
add
add
xor
mov
add
aas
in
mov
add
cmp
lods
aad
mov
ret
mov
movsb
inc
test
sbb
push
cmc
jno
add
add
xor
in
fstpl
cltd
stc
sub
jmp
je
in
push
rclb
in
add
or
movsl
push
pop
aas
inc
dec
in
jle
and
push
add
adc
popf
in
push
outsb
push
adc
out
sti
mov
mov
cltd
or
jl
mov
add
repz
push
jmp
mov
js
jns
xchg
add
jo,pn
xchg
int3
adc
imul
aad
push
xor
idiv
dec
add
repnz
fcompl
mov
rolb
xchg
or
add
adc
add
in
push
adc
add
adc
mov
imul
dec
pusha
cmp
sbb
jecxz
and
nop
adc
add
add
mov
pushf
popl
or
fsubrp
mov
or
cld
mov
addr16
add
add
mov
addr16
out
in
mov
out
loope
cwtl
jle
bound
jl
jno
add
mov
xor
ja
iret
sbb
and
jo
into
addr16
popa
add
xor
aad
xchg
mov
dec
pop
divl
in
mul
mov
jp
fidivs
je
fwait
outsb
add
cmp
loopne
lret
push
cmc
push
add
jmp
roll
push
mov
cmc
pop
pusha
xchg
add
mov
fwait
sbb
mov
cld
add
mov
scas
mov
or
jge
add
mov
xchg
pop
loope
jmp
inc
ljmp
pushw
dec
ficomps
fidivrl
inc
cwtl
push
mov
add
sub
dec
repz
dec
stos
push
cmpsl
lods
outsb
sarb
in
bound
push
fwait
jg
sbb
fadds
add
mov
mov
add
inc
fwait
or
adc
sbb
test
xor
std
mov
dec
data16
push
sub
add
pop
add
xor
sub
and
jp
jecxz
ss
jle
xchg
icebp
inc
rorl
jl
or
cmp
shlb
pusha
in
pop
jle
lret
sbbb
push
mov
push
add
xchg
mov
je
push
and
and
inc
mov
bound
test
push
std
loopne
and
adc
and
add
add
dec
dec
inc
add
mov
rol
xor
aaa
lock
repz
push
sbb
jmp
lds
repnz
push
insb
cld
jmp
fidivl
jmp
cli
adc
xchg
add
mov
call
mov
push
add
add
xor
add
call
test
add
push
pop
fistpl
rcrb
xor
and
mov
mov
sbb
adc
add
add
subl
push
jecxz
into
mov
and
push
subl
sub
shlb
xor
add
mov
push
mov
sub
jmp
mov
inc
jb
cmp
movsb
mov
jg
iret
shr
sbb
add
pusha
cltd
adc
outsl
cmp
mov
int
xchg
pop
pop
mov
repz
xchg
jp
cmpsl
stos
sbb
movsl
mov
icebp
dec
mov
mov
add
enter
leave
stos
sub
xchg
mov
daa
jae
sbb
mov
xchg
lcall
mov
addl
add
inc
or
std
cmp
mov
pusha
add
xchg
pop
nop
xchg
iret
add
bound
jmp
pusha
or
imul
add
add
dec
sub
mov
cld
aam
add
sub
mov
jp
or
je
add
push
push
mov
sbb
inc
jle
push
push
ljmp
pop
add
roll
mov
subb
fwait
mov
jo
and
call
nop
adc
xor
out
jecxz
rcrb
mov
add
ror
cmpb
add
aad
outsb
xchg
add
pop
test
sahf
lods
add
sbb
mov
sbb
push
mov
pop
add
mov
data16
shll
out
cmpsb
jmp
mov
pop
pop
test
inc
popf
fsubl
je
addr16
push
and
jo
pop
and
and
clc
into
jo
dec
xchg
leave
mov
cwtl
int
sub
scas
cmp
in
push
add
sahf
jmp
inc
add
lret
enter
loope
sbb
ja
add
scas
xchg
jbe
mov
shlb
leave
popa
xor
push
daa
cmp
gs
shrl
cmp
mov
inc
cmp
add
or
add
cmc
jno
or
cmp
cli
into
inc
stc
add
push
pop
or
pop
and
inc
jle
pop
sub
int
add
pusha
je,pt
lea
push
es
cmpsl
and
stos
inc
icebp
add
in
arpl
jle
aaa
add
push
mov
dec
add
filds
pushf
ja
push
xchg
inc
dec
fistpl
loop
test
lcall
test
mov
add
fsub
es
cmp
call
inc
aas
in
outsl
enter
or
outsb
test
inc
stos
in
cmp
add
fwait
test
push
sti
add
mov
pusha
rorb
sbb
pusha
add
std
mov
add
xchg
inc
leave
mov
inc
out
cli
jnp
add
stos
ret
shrl
add
jl
jne
jae
jmp
loop
fcmovb
es
dec
out
popa
add
add
sbb
ja
out
pusha
dec
xorl
add
hlt
add
inc
or
xorl
add
add
in
lock
add
cltd
dec
js
lock
js
inc
insl
adc
add
or
ja
in
outsl
mov
aaa
jno
inc
mov
add
fcomps
or
inc
pushf
out
sahf
test
mov
sbb
xlat
pop
jle
add
stc
dec
adc
int
xor
cmp
sbb
in
xor
aaa
pop
leave
jno
test
add
push
stos
gs
push
jle
popf
add
ja
repz
pop
jnp
test
in
push
cmpsb
pop
lea
sub
enter
repz
cmpl
adc
les
inc
xchg
sahf
ljmp
nop
cmp
dec
cmpsb
sbb
mov
hlt
add
fwait
pushf
cmpsb
jae
mov
std
ficompl
inc
mov
stos
pop
cmp
subl
mov
push
rol
sbb
xor
rcrb
in
sbb
int
pop
lods
jmp
mov
xor
movsl
add
into
mov
inc
inc
test
add
fiadds
add
sub
mov
jmp
popa
mov
or
mov
sahf
mov
in
xor
lods
sbb
mov
addr16
cmpsb
pop
and
daa
leave
rcrl
cmc
clc
sti
mov
ja
xchg
xchg
in
idivb
mov
test
add
pop
adc
sbb
in
jmp
rolb
adc
jle
or
outsl
push
adc
add
inc
dec
add
and
test
fst
and
mov
or
cmp
das
fs
adc
add
imul
xchg
pop
add
add
rolb
sub
rorl
add
fcmovu
adc
and
push
out
sbb
dec
sub
pop
xchg
add
sbb
add
add
nop
mov
sbb
jb
add
xlat
fwait
sub
daa
fcmovne
dec
mov
mov
sbb
inc
pop
leave
imul
fnstcw
sahf
ljmp
mov
sarb
cmovp
ficompl
jle
outsl
add
test
stos
loope
and
aas
add
pop
aaa
cs
inc
pushf
fnstenv
test
pop
pop
cs
rorl
fisubs
push
loop
jbe
testl
inc
aad
or
cmp
adc
mov
repnz
pop
lahf
jg
lret
mov
call
test
sub
xchg
pop
push
jmp
cltd
cmp
call
imul
jne
std
into
out
out
add
xor
inc
pop
movsb
nop
dec
repz
getsec
sahf
add
inc
adc
jns
call
jnp
xor
cmc
je
data16
jo
cli
push
xor
pop
fmull
mov
rcl
into
and
loope
xor
adc
mov
das
sbb
add
add
jl
es
rorl
insb
ret
pop
mov
xchg
mov
xchg
sbb
xchg
imul
or
sub
and
pusha
add
xchg
fistpll
add
icebp
xchg
adc
or
lret
je
bound
xchg
in
or
xchg
cmp
xchg
fistl
mov
add
btr
dec
push
cmp
xor
cmc
or
fidivs
shlb
dec
push
cmp
add
mov
mov
add
out
and
ljmp
adc
in
movb
mov
cli
fcmovu
and
xchg
addl
scas
lcall
push
add
mov
fdivrs
add
inc
adc
add
mov
inc
icebp
dec
pop
dec
push
mov
jmp
lods
add
in
sbb
mov
scas
movsl
xor
inc
add
sbb
aam
test
add
sbb
sti
add
mov
scas
add
lods
add
daa
push
add
out
hlt
add
ja
jecxz
jae
mov
push
subb
movsl
in
rolb
clc
sbb
daa
push
movsb
loope
mov
outsl
pop
imul
int
jo
push
xchg
and
pop
push
add
lods
jp
loop
xor
std
cmp
push
add
adc
mov
or
add
sub
sbb
bound
fcompl
mov
in
lahf
ret
mov
scas
or
push
loop
push
mov
test
cmc
xor
loop
sbb
nop
xchg
add
xchg
lea
jae
cmp
fnop
mov
jbe
xor
lods
scas
xor
cmp
mov
sub
ljmp
push
movsl
dec
inc
sub
cmp
add
add
test
jnp
loope
leave
cld
add
mov
adc
push
or
sbb
lea
add
call
fdivl
fdiv
test
add
sbb
ficomps
jmp
es
shrb
inc
add
mov
add
sbb
movb
nop
jnp
incl
in
mov
cmpsl
adc
and
push
pop
inc
sahf
fdivs
xchg
insl
imul
add
xor
loop
in
inc
add
add
xchg
nop
pop
aad
dec
cmp
mov
adc
sahf
icebp
pusha
add
and
add
inc
outsl
ss
aam
ja
test
push
push
daa
outsl
in
xor
or
sarb
cmpsb
inc
add
stc
add
xchg
sbbb
imul
push
jmp
add
je
mov
sbb
dec
sub
inc
arpl
or
inc
movsl
mov
xchg
nop
loope
pop
lds
push
add
jo
iret
add
inc
add
jnp
push
pop
lock
jl
nop
and
inc
mov
dec
mov
imul
xor
pop
pop
mov
mov
jbe
daa
add
stos
outsl
lret
or
lods
cmp
lret
sbb
jge
mov
dec
sub
pusha
mov
xor
je
jns
and
call
mov
cmpsl
xchg
imul
mov
test
fwait
add
pop
iret
into
xchg
xchg
add
jge
add
test
aam
jl
out
or
or
sahf
cs
cs
addb
pop
jle
aas
push
lret
or
faddl
cwtl
cvttps2pi
cwtl
push
push
test
dec
add
lds
mov
imul
push
test
mov
cmp
cltd
cmp
inc
add
mov
mov
xchg
sub
xchg
insl
and
sub
arpl
div
add
push
pop
sti
add
lds
sar
ss
enter
cli
fcoml
cmpsb
add
fcompl
inc
sub
push
aaa
pop
add
nop
jno
mov
jg
orb
sub
add
stos
aam
mov
insb
sub
cmp
and
add
xchg
xchg
sub
push
scas
mov
jecxz
xor
xchg
add
enter
test
fst
push
sub
dec
cmpsl
push
pop
xor
filds
lret
cwtl
lret
add
fsubrs
add
xchg
sbb
lods
scas
jno
add
mov
scas
aad
add
or
jl
out
xor
sub
cmpsl
icebp
sub
add
jl
jae
xchg
mov
lock
inc
mov
push
xchg
test
add
push
shlb
sub
pop
mov
mov
les
insb
test
imul
or
mov
mov
mov
push
repnz
hlt
push
add
aaa
nop
sub
mov
xchg
popa
sbb
and
ret
cltd
add
xchg
jl
or
add
sub
pop
add
lahf
pusha
adc
dec
frstor
xlat
pop
xchg
clc
add
push
or
or
and
arpl
lcall
ret
cmpsb
addl
adcl
lcall
adc
gs
cmp
aaa
negb
sti
out
mov
dec
fiaddl
divl
add
outsb
cmpl
pop
loope
push
mov
mov
iret
jne
dec
or
adc
rcl
pop
or
inc
mov
jle
xor
add
pop
or
adc
add
pop
sub
add
xchg
add
test
cltd
jb
js
jge
pushf
add
popa
ss
pop
add
into
add
mov
mov
sub
pop
xchg
dec
sbb
test
mov
stos
and
push
sti
pop
imul
xlat
rolb
pushf
jl
mov
inc
nop
cmp
mov
pop
add
mov
add
xchg
lods
sub
fwait
sub
jp
fdivrp
sbb
dec
fnstenv
add
imull
pop
cwtl
xchg
mov
mov
dec
add
mov
add
fistl
ret
or
jecxz
jb
inc
call
xlat
mov
adc
cld
add
jecxz
lods
jmp
xlat
mov
inc
mov
and
daa
inc
movsl
add
call
push
or
push
sub
xchg
sbb
mov
mov
mov
pop
arpl
lods
cld
inc
add
push
add
fcos
stc
jp
add
filds
xchg
xchg
add
std
add
shlb
fiaddl
dec
xchg
loopne
sub
add
add
xchg
shlb
add
pusha
mov
cmpsb
dec
mov
mov
out
loope
jmp
pop
dec
je
add
bnd
movsl
fisttpl
sub
je
add
imul
hlt
xchg
pop
inc
cmp
sub
push
pop
xor
test
jmp
push
dec
or
pop
add
add
adc
std
addr16
push
dec
stos
loope
mov
add
lock
dec
mov
add
shlb
mov
gs
out
fsubr
cmp
neg
lock
jnp
cli
jle
cmp
or
mov
mov
mov
cli
add
add
hlt
add
fs
mov
xor
cltd
or
add
jbe
push
push
pop
sub
inc
mov
jmp
pop
push
sbbb
loopne
adc
push
fisubs
outsb
cli
and
pop
jae
into
mov
test
cmpsl
sbb
jae
cwtl
in
fsubr
adc
push
fistl
or
inc
pushf
add
mov
push
cmp
push
dec
sbb
lret
mov
pop
ds
pushw
or
pusha
add
rorl
adcb
add
out
fwait
subb
and
lret
data16
lret
in
or
sub
cmp
scas
add
xchg
dec
leave
xchg
leave
into
add
dec
imul
test
add
flds
rolb
cmc
inc
sub
les
sbb
inc
roll
fisttpll
fmulp
scas
js
dec
icebp
xchg
add
sbb
aad
repz
fsubl
pop
sbb
jb
add
and
lods
mov
xlat
ja
imul
dec
loope
add
jg
cltd
fwait
and
scas
fwait
or
dec
mov
and
or
movsl
adc
cmp
int
les
addb
rorl
add
addl
sub
inc
mov
push
test
aas
add
add
mov
mov
das
adc
inc
add
nop
leave
pop
js
jg
call
lahf
mov
xor
mov
push
icebp
adc
stos
rolb
xchg
hlt
sub
jmp
fwait
or
mov
and
mov
cmp
dec
stos
aad
cmp
adcl
iret
jnp
mov
mov
daa
addr16
sbb
mov
test
xchg
mov
cld
sub
and
test
fs
sbb
pop
ds
stos
icebp
frstor
mov
push
pop
bound
jl
push
and
xchg
or
mov
mov
ja
inc
inc
cmc
insl
or
add
push
xchg
mov
cmpsl
lock
mov
iret
int3
jge
fcmovnb
inc
add
inc
add
add
add
roll
add
add
add
push
in
xor
mov
stc
out
icebp
add
push
stos
add
dec
xchg
add
fists
dec
into
not
sub
jle
in
add
push
gs
mov
aas
add
imul
push
sarb
popl
sarl
add
jg
mov
leave
push
inc
or
arpl
repz
add
push
pop
movsb
cmp
mov
add
in
imul
loope
lea
add
and
add
sbb
enter
adc
fists
jmp
iret
popf
in
fs
out
pusha
lret
aad
xor
pop
add
dec
mov
cmp
push
sbb
dec
out
in
mov
or
mov
mov
pop
cli
dec
mov
out
cmc
mov
js
out
lods
add
jne
cmp
daa
add
mov
lods
or
pop
push
dec
push
push
add
add
outsl
pop
add
push
mov
sub
add
xchg
add
mov
dec
xchg
cmp
dec
testl
sti
scas
rcl
jae
lods
inc
fcmove
sti
sbb
add
sbb
fsubrl
jno
lcall
fildl
sti
enter
push
lret
adc
ret
int
rol
fadds
pop
mov
mov
jns
pop
dec
std
cmp
adc
inc
iret
sub
test
add
orb
popa
adc
fidivrs
sti
fldcw
inc
jmp
jnp
add
je
and
push
rolw
sbb
add
xchg
in
jle
pop
mov
mov
mov
dec
js
push
mov
inc
inc
push
bound
pop
add
int
jne
sub
das
dec
pusha
stos
jmp
pop
dec
aad
xor
dec
push
lods
push
mov
shrl
xlat
or
mov
fdivrl
stos
add
sub
add
inc
mov
loop
loope
pop
cltd
dec
sbb
cmp
lds
xor
aad
mov
jnp
jnp
add
ja
testb
arpl
sti
adc
jns
icebp
sahf
fstpt
cmp
xor
and
or
push
xchg
or
into
lea
aas
mov
mov
cmp
jecxz
jg
add
incl
mov
mov
add
and
fistl
mov
cmp
lds
fisubrl
push
push
stos
mov
jecxz
or
into
stc
sti
inc
gs
pop
and
add
xchg
sub
xchg
jnp
push
xchg
scas
out
in
add
push
jmp
sub
lret
and
aas
sub
and
fiadds
push
daa
adc
add
mov
iret
mov
pushf
add
orps
les
lret
mov
gs
fcoml
sbb
mov
js
add
inc
adc
add
add
loope
sti
push
sbb
xor
and
ficompl
sub
arpl
lret
and
std
push
push
xchg
pop
dec
and
sub
push
scas
jge
addr16
stos
cmp
pop
sub
xor
xor
popa
adc
insb
mov
xor
int
jle
cmp
push
int
xor
leave
push
cmp
pop
rcll
fistl
jecxz
ljmpw
add
dec
pop
jo
push
sahf
data16
insl
jne
cmpb
int3
jno
test
inc
imul
add
movsb
jnp
ss
jmp
repnz
cmp
ret
sub
mov
test
or
xchg
aas
push
cmp
adc
push
pop
inc
add
cld
push
cmpsb
add
pushf
xchg
mov
imul
and
add
inc
inc
xorb
into
add
dec
arpl
jae
cmp
jle
popf
cmp
stos
iret
mov
test
rcrb
jge
leavew
xchg
mov
enter
bswap
sub
add
lret
dec
outsl
add
fsubs
clc
mov
sahf
out
pop
cmp
ja
aad
add
add
mov
sub
cmp
test
or
xor
je
xor
pushf
add
mov
fdiv
push
imul
lea
adc
jg
add
add
scas
hlt
mov
sbb
mov
mov
add
popf
add
outsb
or
and
outsl
cmp
stos
pop
jmp
inc
sub
pop
sbb
sbb
inc
push
add
push
jmp
or
xor
outsb
in
xchg
jmp
cmpsb
adc
roll
cmpsb
pop
add
popf
gs
xchg
adc
jb
xchg
aas
jnp
or
aam
cmpsl
pop
leave
stos
stos
push
inc
out
ss
push
adc
sbb
std
add
ljmp
mov
add
sbb
into
sarl
cmpsl
bound
aam
xchg
lds
test
add
hlt
xchg
stos
inc
xchg
addr16
fcompl
or
jbe
pop
add
add
pop
jns
call
add
pushf
push
popf
icebp
pop
test
adc
in
or
pop
fbstp
outsl
pusha
inc
mov
adc
loop
imul
pop
leave
xor
jge
mov
cmp
add
out
xchg
stc
stc
adc
fiadds
sti
lcall
movaps
fildl
pushf
add
add
add
add
pop
add
insb
test
xchg
inc
jmp
cwtl
push
cmp
ja
mov
xor
adc
pop
stc
mov
adc
arpl
std
adc
mov
ret
push
and
ret
add
add
cltd
jno
inc
dec
aaa
repz
shrb
cmpsb
mov
mov
xor
mov
and
pop
push
cmp
jnp
cmp
cmpsl
xor
pop
cld
push
stc
inc
and
and
incb
add
in
push
mov
fucomip
push
testb
out
fsubs
into
repz
je
inc
das
lods
insb
popf
mov
mov
pop
into
in
hlt
xor
mov
and
inc
outsl
push
test
or
add
stc
mov
cmc
in
fists
hlt
inc
mov
jb
jge
sahf
pop
lret
add
or
add
jb
stc
icebp
push
and
jae
icebp
xchg
in
cwtl
lcall
dec
daa
lahf
js
jl
mov
push
lea
leave
sub
and
sbb
lea
negb
add
mov
jl
adc
fsubl
xor
sahf
jl
and
hlt
xchg
xor
lcall
loopne
popl
jmp
repz
leave
mov
cmp
testb
mov
xor
data16
hlt
mov
lahf
vdivss
add
xor
inc
add
je
and
mov
shrb
subl
pop
inc
pop
inc
xchg
pusha
jmp
fiaddl
insb
xchg
add
fucomip
je
popf
rcl
mov
add
cmpsb
xor
decb
js
add
scas
xor
clc
fwait
push
imul
mov
sub
lcall
out
add
jle
mov
lods
rolb
aas
xchg
iret
cmp
pusha
popa
sahf
or
loope
lods
dec
int3
push
adc
pop
fwait
sub
lret
aad
adc
cs
add
ficompl
adc
fidivrl
adc
add
add
iret
add
lea
mov
mov
ss
ds
adc
test
add
add
leave
mov
jge
fwait
divb
bound
loopne
dec
aas
jp
mov
add
jmp
scas
mov
mov
scas
lods
jnp
add
or
add
fidivs
add
jge
pop
nop
add
jg
add
int
jne
add
pop
fiadds
add
mov
es
jb
cld
stc
ret
xlat
push
nop
nop
fadds
push
jecxz
fs
ja
push
mov
jp
add
sti
dec
fisubs
add
mov
incl
add
xor
add
dec
push
and
mov
test
aas
adc
mov
pop
sarl
idiv
xor
dec
lock
pushf
lods
cmp
mov
add
mov
cmp
sub
imul
and
addl
aam
int
ficomps
mov
inc
imul
ja
add
mul
orl
add
sub
and
dec
shll
mov
xchg
sub
lods
in
pop
leave
inc
inc
sbb
jo
scas
sbb
js
pushf
jecxz
and
adcl
sub
fistpl
add
pop
adc
sub
xchg
repnz
pop
stc
add
stc
pop
fists
cmp
cltd
in
jo
scas
add
cld
out
incb
jmp
xchg
enter
pop
lcall
inc
or
jnp
add
pushf
add
mov
sarl
cmpsl
or
ror
dec
cmp
xchg
pop
add
push
jg
cld
jl
aaa
add
sbb
add
add
repz
gs
adc
mov
add
add
out
mov
add
pushl
mov
jecxz
int
rorl
fldt
das
dec
fneni(8087
cltd
sub
bound
adc
mov
nop
xor
mov
dec
adc
popf
add
pop
test
bound
int
dec
data16
aas
cmc
add
jae
ljmp
fcom
sbb
add
lret
or
mov
mov
add
xor
lret
push
add
cmpsl
in
xchg
ja
inc
out
sysret
lods
cmp
pop
inc
pop
daa
test
add
popf
mov
scas
jo
mov
inc
fcoml
gs
cmp
cmp
imul
in
sub
pop
cmp
mov
stos
int3
xchg
rorb
xchg
mov
out
stos
jnp
dec
or
out
add
push
fnsave
dec
enter
ds
pop
testb
movsl
mov
adc
and
add
push
or
lock
jne
sub
stc
add
stos
fwait
mov
push
mov
sub
roll
cmpsb
nop
cmp
xchg
pop
and
cld
sub
repnz
add
push
adc
add
sub
add
into
lret
or
sub
push
ss
xor
mov
movsl
jns
shlb
add
and
test
mov
add
roll
into
pop
and
mul
jo
rcl
add
add
clc
lret
adc
mov
gs
sbb
aaa
jns
and
add
sub
push
lret
push
push
inc
pop
add
out
vrcpss
push
jne
jmp
scas
jnp
cmp
sub
shll
sbb
and
push
xor
data16
outsb
fld
mov
jns
add
xchg
rcl
cld
or
addb
add
stc
outsl
in
add
mov
bound
mov
in
adcl
mov
mov
cmp
mov
pushf
add
inc
lods
dec
add
add
int
pop
movsl
pop
clc
inc
icebp
stos
dec
mov
sub
mov
lods
lea
add
fs
add
call
jb
sbb
push
fwait
push
jns
xchg
repz
sub
ss
push
add
adc
or
stos
enter
filds
scas
sub
sbb
xchg
dec
pusha
adc
fdivs
movsl
sub
mov
imulb
andb
fs
test
inc
std
ds
sbb
cmp
and
test
repz
mov
inc
sub
out
sbb
ret
jnp
pop
jle
mov
fcoml
out
stos
add
add
sbb
in
xor
and
jno
mov
popf
std
and
cwtl
inc
add
add
jge
pop
sbb
pop
add
dec
xchg
enter
lds
add
lds
inc
stos
pop
std
dec
dec
push
cmp
movsb
or
add
add
pop
mov
mov
pop
jb
sbb
mov
add
leave
push
cmp
cltd
test
arpl
xchg
sti
sub
mov
popf
mov
leave
aad
fadds
scas
jle
sti
add
inc
mov
movsl
aad
imul
add
lds
outsb
xchg
mov
dec
call
out
mov
ja
icebp
and
pop
imul
aam
mov
pop
sub
pop
jle
repnz
pushf
jno
incl
ficoml
add
pop
dec
cmc
frstor
stc
add
xchg
dec
lahf
add
xchg
mov
lock
sub
cwtl
std
xchg
push
scas
test
add
push
call
in
mov
movsb
int
aas
jmp
xor
ds
sub
add
movsl
add
add
repz
xchg
stos
clc
dec
push
pop
add
dec
addl
scas
cli
dec
ljmp
fists
hlt
dec
adc
fsts
and
mov
int3
mov
sub
nop
add
and
or
pop
cmpsl
mov
movsb
adc
adc
shrb
je
add
adc
lods
hlt
je
push
jb
push
jp
add
cmp
iret
incl
xchg
aas
and
inc
mov
cmp
fisubs
add
cmp
add
incl
jne
icebp
pop
aad
iret
loope
add
lret
pop
lret
xchg
dec
call
push
dec
mov
push
jp
ret
xchg
mov
and
sub
add
mov
add
adc
hlt
sarb
repnz
nop
or
scas
test
mov
add
xlat
dec
add
jle
xchg
hlt
cmp
push
add
inc
jno
stc
add
jmp
insb
add
push
push
arpl
add
mov
jecxz
add
add
sub
iret
add
push
aas
add
pusha
add
dec
loope
mov
push
mov
mov
xlat
and
insb
push
stc
dec
fcmovne
add
jne
cli
and
outsb
loopne
push
sub
add
sbb
jbe
xor
cmp
push
mov
sub
push
jo
js
jge
pop
cmp
xor
lret
pusha
pop
mov
and
ret
fldt
sub
jmp
pop
daa
mov
dec
xchg
cmp
xchg
movsl
or
js
adc
mov
inc
addl
push
sti
in
pop
icebp
add
mov
add
repz
insl
add
dec
clc
scas
ret
pop
xor
imul
jno
jo
mov
cmp
cwtl
out
lahf
fadds
push
pusha
imul
es
dec
push
inc
push
adc
daa
shlb
mov
xlat
cmpsb
cmp
roll
popa
cwtl
pop
cmp
mov
scas
hlt
pop
mov
sbb
shll
pop
div
fildl
sub
add
mov
jmp
test
shl
out
outsb
pop
cmp
pop
imul
decl
insl
add
cmc
sub
cmpsl
adc
loope
xor
lds
hlt
punpckhwd
and
xchg
pop
cld
scas
pop
add
ja
jnp
lgs
insb
cld
cmpsb
xchg
pop
push
dec
add
test
popf
mov
add
aas
pop
push
xchg
imull
call
ljmp
iret
ret
inc
jg
add
stos
aam
ret
jno
inc
stos
or
push
add
add
sbb
xlat
mov
out
mov
pop
cmp
jmp
jb
or
les
loop
test
add
xchg
inc
sub
add
in
int
cmp
mov
inc
sbb
aad
add
mov
test
pop
scas
mov
add
fiaddl
cwtl
pop
mov
xchg
push
into
sub
xor
mov
pop
mov
push
movsl
lods
mov
mov
mov
xor
add
movsb
or
or
xlat
jp
add
out
cmp
pop
test
int
mov
mov
jnp
lock
push
inc
add
add
cmp
in
ret
mov
dec
push
jp
mov
dec
add
or
dec
inc
int3
lds
sbb
sbb
outsl
shl
add
repnz
mov
fsubrs
stos
test
shll
jge
add
loop
pop
les
add
add
adc
jmp
mov
jno
fisubl
cmc
add
adc
add
mov
pop
js
orl
jnp
js
ret
sub
add
loop
dec
andb
cmp
js
dec
pop
cmp
add
pop
jp
ret
or
add
ljmp
xchg
jge
int
jecxz
fstpt
sbb
insb
repnz
out
ja
imul
push
xchg
loop
int
scas
xchg
clc
add
scas
mov
add
or
das
cmc
add
and
popf
add
mov
out
cwtl
add
pop
mov
in
loop
gs
cmp
lods
mov
cmp
add
push
ds
xor
cmc
sub
ret
addr16
sbb
add
add
add
int3
out
jb
lea
ja
in
cmpsl
cmpsl
pop
fwait
leave
mov
xchg
dec
in
pop
test
xlat
scas
data16
push
lock
add
add
sbb
pushf
fiaddl
and
add
dec
aaa
cmc
adc
stos
mov
push
mov
xor
add
inc
or
xor
iret
pushf
mov
imul
adc
aas
outsb
adc
inc
cmpsb
or
sti
push
pop
xor
vmwrite
cmp
xor
sbb
inc
stos
push
lret
xchg
pop
add
or
dec
stc
test
mov
imul
bound
inc
insb
lret
cmp
push
and
dec
push
scas
out
xor
ljmp
lods
mov
pop
jg
xor
sub
xor
dec
into
add
gs
imul
outsl
and
cmp
stos
adc
add
std
pop
arpl
push
add
jno
xchg
add
inc
cmpsl
add
jmp
pop
add
mov
jge
and
jg
insb
xchg
add
out
jae
andl
inc
movsb
mov
add
mov
and
fistl
push
cmp
xchg
cmp
dec
fcmove
mov
add
stos
inc
fldt
mov
out
adc
mov
mov
les
push
and
lods
sub
pusha
pop
sbb
or
jnp
daa
dec
or
mov
and
xlat
mov
sub
add
dec
add
in
add
jb
pop
add
clc
xor
inc
data16
dec
sarb
call
jmp
stc
xor
mov
sub
add
xchg
or
insl
push
dec
sub
pop
cmp
hlt
add
mov
xor
shlb
mov
pop
fs
push
ljmp
push
mov
jp
add
or
mov
fwait
push
mov
sbbl
sbb
pushf
cmpsb
sbb
cwtl
lods
enter
dec
pop
call
int3
and
mov
jg
clc
sti
mov
and
or
and
mov
sar
call
mov
lock
inc
and
nop
mov
xlat
add
insb
and
jecxz
or
or
mov
add
push
push
pop
mov
arpl
pusha
add
xchg
sub
imul
xchg
and
add
jecxz
fbld
divl
cmp
mov
imul
and
ljmp
push
jnp
mov
add
mov
inc
ss
add
mov
lods
jb
add
pop
loopne
insb
fcomp
shll
jns
xchg
loope,pt
ljmp
jge
add
adc
add
add
xchg
and
mov
and
and
add
nop
add
inc
cmp
jge
cmc
pop
dec
in
in
out
and
clc
sub
xor
adc
xor
jl
ror
add
cmpsb
mov
cmp
mov
fsubrs
push
cmp
xchg
popa
clc
je
pop
mov
call
mov
jae
fldenv
aas
pop
mov
jge
push
inc
lret
dec
sahf
and
mov
testl
cmp
and
les
jmp
repz
pop
push
mov
sahf
daa
in
test
bound
in
or
and
rcll
push
xor
dec
xlat
cmp
sub
bound
xchg
repz
insb
push
inc
ss
mov
pusha
xchg
aas
mov
stc
scas
add
ds
std
in
dec
daa
jns
add
mov
add
jbe
adc
aaa
loope
in
add
insb
ss
and
call
les
call
cltd
add
int3
lcall
add
push
add
jmp
pop
iret
push
cmp
movsl
outsb
cs
cmp
or
push
jnp
loopne
fisttpl
add
cltd
addb
jbe
mov
add
js
xor
nop
popa
loop
scas
fdivrs
je
lea
sbb
jnp
mov
andl
push
jno
add
xor
inc
lds
sub
mov
stc
jns
cmc
popa
pop
out
or
sub
movsb
cwtl
jl
dec
in
rcll
add
and
xlat
into
pushf
pop
cmp
sbb
sub
push
dec
inc
faddl
movl
add
repnz
das
mov
pop
inc
add
pop
dec
jo
dec
insl
sub
and
lds
leave
clc
imul
add
pop
cli
mov
mov
push
mov
xchg
xor
stos
push
pop
dec
jbe
push
addr16
lcall
shlb
das
inc
in
jp
je
jecxz
push
add
pushf
xchg
mov
pop
int
cmp
imul
mov
filds
cs
movsl
and
jo
add
lods
xorb
dec
fcmovnb
mov
xlat
or
sarl
jecxz
jle
fwait
sub
push
mov
add
fadds
inc
int3
int
add
clc
sub
mov
mov
dec
call
and
cmp
mov
fimuls
subb
hlt
mov
fldl2e
sub
lods
push
add
sbb
and
and
in
or
and
inc
cwtl
push
and
movsb
test
daa
dec
call
xor
jo
jecxz
xchg
jo
mov
sarb
cld
mov
mov
jno
fs
sub
add
or
inc
rorw
dec
xor
movsl
jge
loopne
xchg
push
jo
add
seta
outsb
add
arpl
pusha
xchg
xor
add
pop
add
icebp
fnstcw
or
stos
stos
fcomp
xor
push
sbb
fs
adc
mov
loop
jns
jns
add
imulb
jo
jno
pop
fiadds
adc
push
orb
xchg
pop
pop
ja
nop
push
loope
jo
movsl
add
repz
add
popf
mov
xchg
add
add
scas
lcall
lods
add
mov
push
cli
aaa
cmp
mov
and
xorl
loop
rcr
inc
pop
ficoml
dec
mov
ljmp
adc
lahf
inc
mov
and
add
lds
inc
cmp
push
mov
jb
mov
dec
aad
mov
pop
loope
loop
outsb
push
dec
jb
data16
and
push
into
andb
in
pop
incb
sbb
add
add
or
pop
mov
nop
hlt
fs
lds
mov
xchg
add
and
insl
xchg
mov
scas
xorb
in
ja
pusha
outsb
or
in
ss
inc
imul
dec
imul
jl
cld
stos
add
push
movsl
dec
jmp
rolb
mov
add
pop
cli
gs
in
cmpsb
xchg
mov
push
in
push
and
xchg
mov
pop
bound
push
lods
cltd
pop
jo
jmp
imul
xchg
aad
push
or
add
or
or
pop
sbb
jae
dec
cmp
insl
scas
mov
mov
push
mov
xlat
ljmp
pop
loop
outsl
add
mov
mov
adcl
clc
dec
or
movb
in
out
shl
add
data16
jg
pop
outsl
push
and
inc
add
add
cwtl
xor
lea
add
sub
mov
cli
imul
jp
mov
and
xchg
sub
movsb
xor
jp
leave
xor
lods
xor
stc
jl
cmp
pop
iret
xchg
leave
mov
fnstenv
roll
sub
inc
jmp
adcb
test
cmpsl
xor
add
test
mov
ret
jo
movl
in
add
pop
dec
lock
ret
out
mov
xchg
pusha
insb
xchg
fiadds
scas
repnz
outsb
sub
fldl
xor
ja
push
push
ds
jnp
and
les
popf
pop
mov
pop
xchg
or
arpl
test
leave
sub
xor
sarb
leave
xor
lds
or
add
jb
mov
add
adc
mov
xor
cmpsb
xor
add
jnp
add
aad
pop
add
sbb
jns
adc
js
push
cs
scas
push
sub
sbb
push
iret
mov
mov
mov
mov
scas
xchg
les
lods
mov
sbb
push
xchg
test
inc
adc
fmul
out
sub
fwait
pop
cmpsl
inc
add
data16
cmp
pop
icebp
orl
pop
jmp
cwtl
adc
fiaddl
jo
push
or
jne
sbb
add
sbb
adc
ja
mov
idiv
and
outsb
ror
jb
pop
mov
or
and
mov
repnz
dec
xchg
xlat
js
not
ja
cwtl
mov
lock
test
adc
mov
xchg
sbb
outsb
add
imul
inc
sub
mov
mov
adc
add
mov
push
jb
outsb
mov
popa
sahf
cmpsl
pop
sub
or
jg
arpl
cmp
mov
lahf
fistps
jg
out
fsubrs
add
pop
cmpsb
fdivs
push
add
repz
rcll
sub
mov
pop
outsl
lock
push
xchg
dec
repz
push
add
add
xchg
mov
add
push
sub
add
mov
cld
jp
lea
and
call
or
cld
inc
popa
cmpsl
sub
push
repz
and
add
in
xchg
clc
ja
push
sbb
add
xor
push
push
add
push
pop
stos
test
mov
lahf
pusha
pop
dec
jp
cmc
fimuls
xchg
lea
dec
sub
add
dec
xchg
mov
repz
fiaddl
sbb
xchg
mov
iret
push
jnp
lahf
xor
add
and
mov
or
in
cmp
add
mov
in
stos
lahf
or
orl
in
pop
fdivl
cmp
cs
testl
add
orb
mov
movsl
cltd
inc
dec
cs
xor
aaa
mov
pop
out
mov
add
xchg
jge
pusha
xor
mov
lds
aam
mov
mov
ss
add
cmp
add
roll
add
add
pop
in
cmc
ljmp
clc
mov
xchg
add
dec
ficomps
ret
dec
popa
xchg
enter
cmpsb
mov
cwtl
xor
mov
stc
sti
sbb
lcall
cmp
cmp
xor
mov
add
imul
cld
lret
dec
sarb
inc
imul
add
adc
pop
bound
xchg
test
cmc
sub
sub
xchg
mov
ja
outsl
sub
rcl
add
mov
mov
xchg
hlt
daa
rdpmc
inc
add
or
cmp
add
aam
add
cmp
sub
adc
sbb
mov
xor
xlat
mov
xchg
insl
sub
js
lods
rcl
sub
lret
add
rcl
int3
lea
add
stos
push
mov
add
jae
cmc
mov
loop
lock
push
add
pop
in
ret
jne
jmp
loop
pop
mov
lcall
fisubl
es
insl
mov
xor
repz
les
ret
test
push
and
dec
and
pop
fidivl
or
jmp
fwait
nop
push
jo
jmp
test
push
rcll
mov
call
fadds
incl
add
or
add
pop
mov
fiaddl
add
aas
ret
les
stos
lds
jae
dec
rcrb
jp
ljmp
pop
add
test
popa
mov
sub
xchg
hlt
jl
xchg
es
xchg
stos
add
out
bound
icebp
mov
das
xchg
rolb
jp
lret
or
push
mov
sub
cmpsb
mov
cmc
push
pop
adc
jno
mov
subl
aad
jl
ss
mov
add
inc
pop
je
int3
dec
arpl
cmc
iret
sub
dec
imul
xchg
pusha
or
adc
pop
inc
nop
inc
add
aaa
loop
in
ret
sub
adc
mov
cmp
mov
pop
add
sub
fistps
xor
and
addr16
add
pop
in
cmc
jo
pop
add
add
aas
inc
or
cmpsb
mov
mov
adc
push
gs
jno
mov
mov
jbe
jecxz
mov
jo
push
in
sbb
stos
add
ret
cs
cs
lcallw
js
rol
inc
mov
int
pop
add
inc
in
sahf
xorl
cmpsb
scas
add
mov
xchg
cld
and
add
out
dec
ja
inc
notb
mov
jb
rorl
aad
xor
pop
push
in
jae
mov
roll
das
loope
cmp
arpl
cmpsb
ret
push
ret
incl
dec
add
es
sti
pop
popa
sbb
test
jno
adc
xor
adc
icebp
scas
shlb
out
mov
inc
stos
push
adc
push
inc
mov
and
repnz
pop
cmp
mov
xor
ficoms
inc
divl
xchg
xor
add
dec
lock
dec
movsb
aas
jp
and
lahf
call
add
sub
ret
pop
xchg
movb
stos
out
ficoml
mov
xchg
subl
add
and
add
jg
and
mov
insb
jb
fsubrs
inc
arpl
clc
test
or
xchg
mov
add
mov
mov
sbb
aam
mov
mov
fimull
aad
stos
pop
fcoms
lods
test
inc
test
in
jbe
or
pop
je
test
or
scas
add
lods
add
aad
insb
add
add
add
or
jns
clc
out
push
cmp
mov
mov
mov
sub
jns
mov
push
repz
dec
rclb
aam
ljmp
add
mov
dec
inc
pop
mov
mov
push
mov
sbb
std
shll
testb
mov
sub
popa
or
aad
mov
sbb
or
jg
icebp
cmpl
out
movsl
clc
cld
or
lret
jge
pop
cltd
mov
and
mov
adc
fstl
addb
fisubrs
xor
pop
add
jbe
mov
mov
add
sub
pop
mov
add
xor
jmp
xor
test
adc
add
js
fildl
enter
add
xlat
inc
or
ds
add
addl
imull
cmc
pop
shll
js
add
iret
push
and
mov
push
add
ss
add
jle
inc
adc
adc
aas
add
rep
sub
cmpsb
pop
cmp
mov
cmp
cmp
adc
scas
cmp
mov
mov
sti
jnp
fcmovbe
push
das
add
jecxz
cmp
scas
lods
jp
mov
inc
dec
add
out
dec
loopne
sub
inc
mov
ret
mov
xchg
adc
imul
lret
cmpsl
mov
pushf
pop
sub
mov
xor
mov
and
jae
movl
int
jno
test
das
add
nop
dec
lock
test
loopne
pop
jae
xchg
adc
ja
test
das
add
add
adc
inc
adc
push
out
sti
or
rolb
ss
add
jo
jbe
enter
mov
loopne
lods
lods
sub
sti
mov
or
popa
inc
sbb
push
aas
lea
rcl
xlat
add
mov
aaa
cmp
aas
js
mov
std
fildll
push
pop
xchg
pop
xchg
cmpl
sbb
xor
cltd
mov
mov
loope
icebp
xor
dec
addb
addr16
inc
push
mov
sub
mov
cmp
mov
mov
jp
loope
or
pop
shrb
pop
fdiv
inc
mov
inc
stos
lds
fcomp
adc
add
sub
push
mov
sbb
xlat
rcr
push
mov
fisubrs
push
movsl
and
dec
cmp
fwait
add
xlat
stos
adc
xchg
gs
or
jne
mov
add
jne
in
in
call
mov
add
shlb
movsb
prefetcht0
adc
mov
iret
add
es
flds
mov
loopne
insb
sbb
cmp
out
mov
jmp
inc
out
js
int
pop
out
repz
je
add
hlt
add
leave
bound
mov
add
or
jle
jns
aas
scas
pop
test
ds
jmp
mov
cmpsb
jg
dec
in
jo
stc
mov
dec
mov
add
adc
xchg
inc
add
fs
stc
mov
cwtl
loopne
dec
cltd
push
outsb
aad
mov
cwtl
mov
add
inc
jecxz
mov
jo
cs
push
ja
xor
xchg
push
xchg
scas
sub
add
test
stc
push
mov
pop
xor
sbb
addr16
call
jno
inc
mov
movsb
fcom
sbb
shl
sub
sarb
add
in
cmp
push
lret
out
add
or
loop
jbe
loopne
add
mov
push
xchg
ja
mov
add
add
pop
add
add
add
in
xor
and
pop
mov
pop
sub
jnp
mov
mov
es
int
add
push
mov
loop
ret
sbb
es
dec
js
out
addr16
fisubrs
leave
xchg
cmp
jbe
xor
mov
jecxz
jmp
lahf
dec
add
xor
inc
add
insl
adc
sub
jg
adc
je
xlat
sti
dec
dec
outsl
and
xchg
and
popf
and
lret
hlt
adc
and
test
mov
lods
add
inc
push
cli
out
jne
ja
pop
insb
dec
push
mov
add
and
push
fisttps
sbb
scas
or
inc
add
mov
add
popa
outsb
mov
fadds
dec
cli
sbb
push
and
stos
dec
jnp
repz
cmp
popf
mov
or
mov
pop
out
xlat
pop
mov
sub
add
roll
das
sub
orl
imul
mov
inc
pop
out
dec
enter
mov
mov
jae
fwait
cmp
ljmp
inc
movl
xor
mov
add
mov
in
inc
dec
mov
sbb
pop
jecxz
ja
cmp
xor
jns
jno
dec
inc
push
add
scas
pop
xor
pusha
jp
sub
cmpsl
xchg
test
pop
add
data16
cmpsl
jmp
sti
add
xor
add
imul
xor
lcall
stc
push
daa
add
jno
jb
jl
mov
rolb
add
subb
shlb
call
rcl
aam
jne
add
mov
add
jle
js
push
cmp
dec
mov
notb
lcall
mov
lret
cmp
cld
dec
andb
cltd
repnz
or
mov
mov
add
push
add
jo
add
lcall
ljmp
push
push
jge
mov
push
fadds
inc
iret
lock
daa
jo
nop
bound
loop
in
sar
call
adc
jae
repz
add
clc
jno
test
mov
js
pop
add
mov
jae
jmp
pop
sahf
adc
sbb
mov
cmpsb
imull
mov
rclb
add
xchg
add
sbb
sahf
sub
aad
scas
add
in
push
mov
mov
pop
mov
add
add
add
sahf
push
mov
rclb
int3
test
ds
icebp
xchg
jbe
mov
sti
loope
jl
xchg
xorl
add
cmpsb
in
nop
pop
test
jecxz
in
popf
popa
dec
add
and
sbb
ss
mov
dec
out
or
add
movsl
push
add
and
cld
scas
sub
add
andb
adc
adc
shlb
xchg
push
aad
test
je
fisttps
and
add
jb
push
sub
mov
cmpsb
jp
xchg
and
add
add
fnstenv
cmp
mov
mov
adc
push
aad
rcl
add
and
arpl
jb
pop
sbb
aaa
and
add
adc
and
sub
push
and
push
lods
or
add
and
dec
add
addl
fldl
roll
cmp
cmp
add
int
lods
cmpsb
nop
call
mov
test
add
mov
cmp
dec
fs
jns
adc
out
xlat
mov
outsb
cwtl
add
mov
pushf
lock
mov
std
cmc
addl
mov
cmpsb
stos
jnp
cs
mov
das
imul
xor
jmp
fsubrl
xor
ss
add
mov
cltd
stos
hlt
lret
sahf
mov
and
pop
inc
jb
incb
add
mov
repnz
popa
mov
in
lds
in
add
imul
pushl
mov
mov
mov
xor
scas
add
iret
mov
outsb
out
das
movsb
mov
push
jle
adcb
pop
dec
adc
leave
jae
add
xor
sbb
mov
inc
icebp
mov
fs
aad
xchg
lods
sub
rcll
inc
nop
mov
cmp
lahf
outsl
scas
lods
std
test
cmc
adc
add
cmp
aas
dec
push
mov
cltd
add
jb
adc
incl
cltd
aad
push
add
jmp
push
push
aad
add
inc
lds
fdivrs
sub
jg
add
pop
cs
daa
add
sbb
add
mov
loope
sbbb
mov
shl
enter
push
xor
push
stos
mov
mov
aam
pop
loope
scas
fisttpl
adc
repnz
mov
or
push
add
or
iret
out
jecxz
jnp
fisttpll
mov
cmpb
in
jns
pop
jns
add
loope
shlb
sbb
test
mov
add
add
stos
loope
and
lret
loopne
adc
xchg
or
lahf
in
push
mov
jmp
pop
mov
lcall
dec
push
mov
sti
test
add
filds
sahf
sarl
ret
add
push
inc
add
es
xor
jmp
cld
xor
push
add
dec
add
push
cltd
add
fistps
add
xlat
cmp
cs
shll
dec
mov
xor
mov
insl
repnz
insl
sub
jo
add
out
imul
stos
scas
lods
shll
scas
adc
cmpsl
mov
and
inc
xchg
pmullw
aaa
add
cmc
or
mov
add
loop
stos
insb
xchg
add
pushf
enter
mov
mov
call
je
push
jae
dec
mov
add
or
icebp
dec
dec
push
jbe
cli
or
mov
sbb
sbb
add
movsb
mulb
or
pop
sahf
add
data16
xor
inc
fwait
xchg
imul
lock
xchg
push
or
sbb
mov
je
roll
adc
push
fs
xchg
add
leave
sti
dec
movsl
cmc
dec
lock
lods
adc
mov
jmp
cmp
sub
stc
aas
add
ja
xchg
mov
std
scas
add
xor
cmp
imul
jmp
lahf
push
nop
add
mov
scas
mov
lods
ror
data16
add
arpl
add
adc
add
add
sub
pusha
pushf
mov
scas
aaa
test
test
push
cmp
or
pop
setl
jmp
xor
nop
sbb
cmpsb
push
dec
add
add
rorb
sbb
leave
sub
jns
sub
xor
fildl
es
xor
xchg
add
push
fs
aas
dec
decb
sbb
ret
leave
cmp
and
push
ss
mov
push
lahf
cmpsb
pop
mov
adc
and
std
jge
mov
or
vphadduwq
pop
inc
outsb
and
out
sub
lods
and
lret
sbb
mov
imul
repnz
push
sub
and
cmc
xlat
mov
std
mov
in
cld
js
add
aas
add
inc
push
inc
xor
out
imul
mov
into
and
fimull
ret
negl
mov
xchg
sbb
lea
lret
rorb
add
mov
or
fmull
mov
das
jle
add
rcrl
jle
std
insl
mov
push
icebp
incb
add
mov
pop
xchg
pop
aas
nop
xchg
xor
jmp
imul
ljmp
shr
lea
std
mov
adc
fcmove
hlt
fdivs
subl
sub
stos
sbb
mov
mov
push
xor
outsb
mov
pop
add
dec
xchg
add
xchg
mov
sbb
adc
icebp
sbb
adc
add
jg
sahf
clc
mov
ret
add
popa
sub
loopne
roll
pusha
sub
cs
jmp
mov
arpl
push
rclb
je
insl
icebp
les
shlb
mov
add
fwait
loope
pop
es
mov
pop
add
hlt
test
sub
add
or
mov
pop
jg
sti
lds
jle
jp
repnz
cmp
call
xlat
mov
push
mov
cltd
in
decl
dec
cmp
mov
or
inc
xlat
popf
scas
xor
loope
pop
and
std
insl
add
adc
jbe
ret
xchg
add
fs
out
lea
xor
pop
fsin
pop
mov
lret
pop
insb
jae
out
test
aaa
push
fs
inc
add
sbb
dec
or
jle
std
add
pop
pop
test
add
cld
pushf
fldl
xor
push
insb
add
add
pop
arpl
cs
add
call
shlb
inc
dec
leave
add
pop
andb
xor
add
clc
add
lods
sbb
les
in
out
stos
cmp
add
add
hlt
jae
int
ror
insb
mov
movsb
aas
insb
mov
jnp
movsl
out
jne
out
orl
xchg
sbb
mov
pop
add
add
cmp
lea
xchg
xchg
adc
xor
jns
mov
add
inc
push
ja
xor
sbb
add
popa
mov
int
nop
push
call
icebp
faddl
or
mov
cltd
jns
cmp
and
addr16
leave
enter
push
adc
aas
scas
scas
inc
movl
add
inc
cmp
shrb
pop
outsl
pop
add
or
or
shl
leave
lods
inc
out
dec
add
jno
inc
mov
add
add
cmp
cmpsl
popf
fldl
or
add
jle
add
inc
lock
mov
xchg
add
into
or
mov
adc
ret
mov
cmpsl
add
or
xchg
add
mov
add
sub
xor
js
lret
or
icebp
mov
in
clc
xchg
stos
mov
add
lahf
addr16
int
mov
mov
lahf
mov
ljmp
cmp
fs
incb
add
stos
out
in
mov
mov
and
jnp
add
jbe
add
dec
or
out
adc
sbb
push
or
test
lcall
and
push
pop
repz
in
stc
aas
mov
jmp
add
dec
ltr
dec
push
stc
jecxz
dec
cmp
test
add
add
xchg
andb
adc
xor
add
mov
mov
xor
add
lret
jmp
fildl
pusha
mov
or
xchg
mov
mul
jge
xchg
add
pop
leave
aam
mov
lcall
sub
and
mov
push
jl
pop
add
test
mov
push
dec
into
loope
pop
xor
out
test
insl
jbe
or
jb
add
faddl
aas
out
je
inc
dec
add
lods
mulb
imul
fsubrl
jmp
mov
xor
mov
iret
cld
add
add
insl
sarl
dec
popa
sub
lcall
icebp
jp
aad
mov
cmp
sub
into
jg
mov
xchg
popa
dec
pusha
inc
sub
adc
mov
xor
mov
pop
sub
push
xchg
and
cmpsb
cli
aaa
sub
xchg
and
cmp
adc
sub
sarl
fs
in
cmp
push
test
popf
sahf
add
mov
repnz
add
adc
push
add
bound
lret
or
sbb
jg
call
push
add
push
rorl
add
add
mov
mov
push
inc
add
inc
sub
dec
addb
pop
testb
imul
jno
xchg
cmpsl
inc
dec
test
sub
hlt
add
arpl
psubusw
addb
pop
jl
pusha
pop
jp
hlt
inc
fisubs
inc
xlat
xor
das
jns
loop
cmp
fbstp
push
cs
out
or
pusha
mov
iret
sub
inc
in
xor
popa
jle
adc
sahf
adc
pop
dec
sub
adc
stc
fcomi
nop
and
jg
repnz
add
or
mov
add
lahf
lret
add
or
adc
adc
repnz
xor
loope
bound
add
jp
xchg
lret
movb
incb
add
vpsrad
cli
inc
cs
inc
lcall
ja
stc
push
add
mov
dec
add
sub
clc
push
out
int
repz
mov
cli
divb
mov
mov
movsl
enter
lds
cmp
lods
mov
xchg
call
ret
lcall
xor
insb
push
add
mov
sub
add
shll
les
add
pop
loop
andb
pop
decb
xchg
add
jo,pn
addr16
xchg
int
add
xor
ljmp
je
sbb
sub
out
insb
bnd
pop
pop
pop
add
jp
mov
inc
add
add
dec
cmp
and
bound
sbb
inc
add
test
jmp
sahf
loop
push
ja
cmp
pop
fs
faddl
pop
cmc
rcrb
pop
fdivr
gs
imul
aam
ds
jmp
scas
loopne
div
gs
ss
aam
push
add
lock
dec
mov
add
and
out
stos
out
test
lds
jmp
dec
lcall
daa
jge
pop
and
xlat
mov
jae
pop
gs
cs
fcmovb
jo
stc
mov
or
or
rorb
xchg
add
xchg
nop
or
out
scas
into
jle
out
and
inc
jp
mov
jne
push
icebp
push
and
mov
mov
leave
ret
dec
in
sub
aad
cltd
stos
icebp
sbb
add
add
mov
call
xchg
lods
dec
dec
add
in
scas
cld
sub
icebp
stos
movsl
and
add
or
rcr
mov
pop
or
sbb
inc
sbb
call
and
add
mov
push
orb
mov
fstpl
add
push
add
jbe
addb
lods
iret
mov
xor
ss
push
lea
cmc
lcall
scas
sahf
push
add
push
add
das
jmp
repnz
mov
add
dec
das
ja
dec
aaa
adc
dec
jno
push
outsl
fcom
insb
inc
out
and
mov
inc
jbe
xor
mov
xor
jge
sahf
cwtl
icebp
add
push
test
jg
add
es
push
xchg
les
insb
imul
shrl
inc
dec
scas
push
add
popa
outsl
movsb
mov
jo
push
daa
mov
movsl
dec
xor
or
add
in
add
outsl
fists
rcrl
push
dec
add
jbe
test
pop
js
cltd
cmp
bound
add
and
jmp
test
xor
pop
add
add
xchg
add
sub
mov
or
ds
arpl
add
lods
jns
and
dec
test
push
xor
xor
lea
test
mov
loop
test
jmp
or
push
add
sub
lods
addl
lock
sbb
add
aam
sbb
and
add
outsb
cmp
enter
mov
add
push
fwait
and
push
push
xchg
mov
or
sahf
cmpsl
add
into
filds
mov
xor
aam
fucomp
mov
andl
sahf
or
testb
sub
test
mov
add
mov
in
sbb
push
jo
cld
push
fsts
jne
pop
add
xorl
mov
scas
lods
mov
add
mov
imul
test
jnp
mov
popf
sub
add
bound
and
xor
xchg
adc
repz
sbb
in
fidivrs
test
pop
push
xor
jne
cmc
and
add
cmp
rcl
xchg
cmp
add
loopne
dec
xor
pop
popf
add
jl
add
adc
pusha
fmull
xor
cmpsb
add
xchg
mov
repnz
mov
imul
push
icebp
lds
jne
add
pushf
inc
sbb
jge
inc
mov
cmpsb
add
cld
dec
inc
jge
inc
jns
or
int3
mov
cs
sub
stc
in
roll
outsl
add
repz
leave
stos
lahf
add
xor
xchg
jno
pusha
sahf
xchg
dec
insb
add
mov
pop
add
mov
inc
clc
out
push
mov
xchg
dec
mov
fnstsw
rcrb
pop
insb
xchg
add
add
mov
std
jno
add
pop
sbb
ljmp
or
add
push
pusha
in
pusha
pop
outsl
jae
lea
push
xchg
pop
mov
dec
mov
cmp
cwtl
or
aad
xorb
xlat
pop
movsb
cmp
ja
inc
fwait
xlat
cmp
adc
pop
mov
push
imul
mov
xchg
inc
add
dec
or
jne
mov
call
add
stos
insb
fwait
add
divb
push
lcall
jae
xchg
in
imul
div
add
out
sbbl
inc
sub
and
inc
dec
outsb
add
adc
push
lock
fimuls
add
add
xor
je
add
out
in
fisubrl
arpl
add
adc
push
lahf
pop
cmp
add
daa
push
push
fs
daa
add
mov
jbe
and
jl
mov
call
jle
add
stos
mov
xor
add
fisubl
std
jns
add
add
aas
mov
lea
insl
lock
rcl
cld
pop
add
clc
dec
ret
or
adc
inc
xchg
es
adc
push
jle
mov
add
push
dec
js
inc
or
movsl
in
fistpl
scas
xor
mov
jle
xchg
dec
out
loopne
mov
inc
pop
call
adc
cmpsb
rcll
cmc
mov
lret
pop
push
dec
cmc
outsl
daa
movsl
add
add
dec
fstpt
aas
sub
inc
pop
add
xchg
mov
inc
add
test
xchg
gs
or
fwait
add
mov
jl
add
lcall
adc
jge
mov
and
add
sub
pop
outsb
cmpsb
in
jg
lock
int3
imul
sbb
dec
iret
add
call
addr16
add
ss
sub
jno
or
hlt
mov
push
add
mov
xchg
dec
cmp
jo
lds
add
xchg
add
inc
jl
outsb
mov
jns
pop
pop
mov
dec
or
inc
push
pop
push
add
add
add
fiadds
filds
test
inc
stc
int3
add
push
fnstsw
lea
or
mov
sub
popf
push
outsb
sbb
and
gs
enter
or
fdivrp
add
cld
add
fidivl
and
xchg
mov
adc
jns
mov
daa
out
dec
and
test
add
insl
cmc
push
jge
xchg
fdivr
add
push
and
int
cs
aas
adc
cld
pop
jo
data16
mov
nop
sub
inc
dec
lods
hlt
sarl
les
aas
sub
cmpsl
lock
lods
lahf
rcrl
mov
add
iret
jnp
lea
pusha
push
cmpsb
mov
fadd
and
divl
cmp
sbb
test
sub
iret
add
hlt
mov
fmuls
orb
xor
add
mov
out
scas
test
fistl
inc
jnp
cli
add
lods
cmpsl
jmp
dec
lret
rolb
lods
add
sarl
jo
xchg
dec
sbb
push
or
or
lahf
mov
mov
or
jmp
in
test
test
jmp
mov
add
int3
cmp
aam
add
cmpsb
mov
add
cmpsl
lds
add
add
movsl
call
xorb
sbb
mov
in
add
mov
sub
ud0
ret
pop
mov
inc
and
fisttps
push
jg
pushf
shr
add
popf
add
addb
andb
clc
or
lods
in
and
cmpsb
out
imul
scas
cmp
outsl
lock
ss
daa
add
shlb
sbb
cli
stos
insl
sbb
mov
in
pop
stos
cli
ja
shlb
mov
in
push
bound
mov
jno
inc
adc
jae
cli
int
add
push
add
arpl
pop
add
cmpsb
inc
ret
fcmovbe
stos
sahf
arpl
lret
fnstenv
stos
push
cmp
enter
xchg
xchg
add
xchg
mov
sbb
fstpt
ret
sbb
in
mov
mov
inc
pop
iret
and
add
lods
xchg
add
ret
lea
into
sbb
out
inc
cwtl
inc
mov
sub
add
outsb
sbb
shl
jnp
add
aas
aad
lods
jbe
insb
jecxz
add
ss
mov
cltd
sub
add
dec
fdivrl
int3
das
xchg
clc
lods
mov
test
pushf
out
cmp
pushf
push
lods
aaa
and
add
xchg
xchg
scas
stos
shrl
push
mov
in
or
psubb
stc
mov
enter
cmp
push
rorb
in
cmc
insb
in
add
cmp
sub
add
push
fwait
ds
pop
add
pop
rolb
adc
jb
xor
test
adc
add
ret
jb
xchg
or
inc
cmp
add
mov
imul
roll
lret
rolb
cmc
add
dec
add
mov
add
or
cmp
sbb
cwtl
pop
ja
jge
mov
add
clc
or
pop
add
push
inc
add
and
mov
dec
jnp
cmp
inc
ljmp
xchg
flds
sub
lcall
imul
jo
lock
fdivs
jecxz
test
ss
or
add
fimuls
dec
add
rcrl
mov
xchg
pop
pop
add
lea
movsb
pop
add
imul
test
dec
imul
mov
std
pop
xchg
ljmp
and
sub
cli
add
mov
add
stc
inc
test
mov
arpl
cmp
push
testb
add
xor
pop
push
mov
ret
cmp
dec
test
push
add
outsb
pop
or
jl
dec
insl
xchg
inc
sub
add
add
pop
fidivrl
in
mov
cmp
scas
popa
add
cmp
dec
std
lods
adc
ljmp
xor
jnp
dec
jbe
mov
inc
jnp,pn
mov
cmp
lret
add
and
repz
add
xchg
out
sub
pop
enter
xchg
pop
test
ret
dec
sbbl
insb
neg
out
out
and
xchg
sub
add
inc
daa
or
or
movl
or
scas
movsb
pop
push
mov
imul
jb
mov
add
lock
adc
fiaddl
adc
in
push
push
sbb
mov
scas
lock
jge
jnp
sbb
add
subl
mov
aaa
mov
gs
xor
push
mov
pop
add
stc
push
xchg
movl
icebp
cmp
test
push
sti
adc
ds
pushf
dec
adc
adcb
xor
scas
add
dec
adc
xchg
in
cmpb
sub
lock
sbb
add
cmpsl
std
cmp
jno
cli
pop
push
addr16
inc
cli
or
xor
dec
and
popl
aam
bound
xchg
rolb
imul
xchg
or
xor
jge
adc
push
loopne
nop
lock
pop
mov
mov
mov
lea
xor
mov
fcoms
pop
add
stos
loopne
inc
mov
ds
dec
out
lahf
fiaddl
cmpb
lock
jo
and
adc
mov
push
mov
bound
je
fistps
pusha
add
faddl
add
pop
insl
jp
negl
add
inc
sti
push
fs
and
mov
sbb
gs
sub
andl
cmpsl
pop
or
mov
jnp
cs
mov
sbb
inc
movsl
stc
add
daa
cltd
pop
lret
faddl
xchg
adc
sbb
mov
and
xor
jmp
mov
cli
xchg
xlat
add
scas
repz
add
mov
lods
test
sbb
inc
pop
mov
lcall
sbb
push
iret
pushf
sub
rol
mov
les
push
add
jp
xor
outsb
lods
rcl
out
imul
adc
ljmp
mov
xchg
jbe
inc
xchg
mov
aad
add
xorb
adc
inc
lods
hlt
pop
jecxz
add
sbb
and
popf
sub
aaa
icebp
shlb
dec
add
add
jno
or
xor
aas
jbe
popa
add
out
mov
out
push
jnp
mov
xlat
cmp
jae
add
lock
inc
mov
pop
dec
xor
scas
sub
lahf
mov
and
test
pop
mov
test
add
out
or
ds
dec
imul
inc
add
pop
cltd
in
scas
or
ss
dec
push
xchg
xchg
mov
movsb
mov
inc
add
data16
jecxz
rcrl
pop
mov
add
mov
stos
add
and
add
in
add
dec
das
and
mov
fwait
xchg
push
dec
mov
mov
mov
jmp
adcl
es
sbb
pushf
jle
mov
add
xor
xchg
mov
or
add
xchg
pushf
xor
push
lcall
es
popf
sbb
push
mov
xchg
xchg
outsb
jne
pop
rolb
es
lods
inc
push
push
or
add
dec
xor
sbb
sub
loope
mov
push
ret
gs
pop
add
mov
rclb
adc
ljmp
outsb
cmp
movsb
fists
cmp
add
add
lods
push
xchg
loope
lock
iret
clc
popl
in
int3
add
sbb
push
data16
cli
pop
cmc
mov
lcall
pop
scas
aam
xchg
repnz
xor
leave
mov
and
in
ja
mov
or
add
xor
push
cmc
gs
cs
cmp
je
add
popa
sbb
push
push
pop
xlat
push
movsl
mov
int3
add
pop
add
or
loopne
popf
mov
out
gs
mov
aad
add
add
cli
scas
add
or
jo
mov
add
adc
iret
mul
nop
lret
dec
rolb
pop
push
xor
stos
add
movsb
repz
mov
in
xor
lahf
andb
mov
and
outsb
dec
add
cmpsl
mov
mov
leave
aaa
pmuludq
add
mov
push
add
xor
mov
mov
test
dec
push
mov
dec
movsl
add
ds
pop
lret
mov
jg
lahf
xor
frstor
pop
sub
movsb
add
insb
mov
mov
testb
std
mov
xlat
sbb
in
out
movsb
popa
mov
mov
dec
scas
mov
and
add
mov
lret
add
or
push
in
push
outsl
fldl
add
int
pop
pop
lock
dec
fdivrp
jecxz
pop
jg
mov
int3
and
lret
add
adc
ss
sub
mov
jb
add
push
test
push
push
or
in
pop
push
dec
cmp
add
push
sub
pop
cmp
mov
xor
sub
mov
mov
arpl
mov
sbb
dec
inc
testb
jno
sub
idiv
fnstsw
add
add
xor
popf
iret
int
and
outsb
adc
add
mov
mov
cmpsl
cmpsb
add
add
jle
add
sbb
push
scas
adc
mov
test
push
stos
fstpt
rclb
subb
lret
outsl
dec
xchg
nop
add
or
fiadds
add
pop
add
incl
lds
dec
add
lock
nop
inc
add
sub
ja
jns
or
add
mov
lahf
clc
lahf
insl
inc
add
bound
mov
out
sahf
shrb
loopne
test
dec
mov
incl
insb
jno
cmp
int
mov
sti
mov
or
push
or
xchg
outsl
into
sub
testb
fidivrs
popf
fwait
addr16
lret
adc
adc
cli
insb
pop
scas
dec
pushf
fdivrl
insb
mov
push
lahf
add
add
cmp
dec
rcrb
cmpsl
iret
adc
shrb
sbb
sub
pop
mov
lods
es
xchg
xchg
mov
dec
add
jbe
loope
stos
arpl
mov
mov
xchg
fdivrs
int3
rcrl
xorl
push
mov
inc
repz
jle
cmp
movsl
mov
insb
jno
cmp
add
jp
sahf
mov
push
xchg
jmp
jne
inc
shll
jge
aam
sub
out
jg
adc
rol
out
stos
pop
in
and
loope
sti
pop
add
adcb
mov
mov
out
sti
push
xor
and
push
dec
les
outsl
les
mov
push
into
push
push
xchg
out
faddl
inc
push
out
bound
inc
or
add
popa
and
insb
push
jne
jns
sbb
add
clc
sarb
inc
adc
sar
jl
aas
das
jno
cli
fisubl
pop
sbb
add
enter
or
fistl
add
push
aas
jecxz
js
dec
xor
dec
imul
or
mov
rolb
jmp
mov
dec
inc
pop
adc
mov
pop
jp
push
or
add
push
test
sub
push
adc
pop
inc
xor
je
add
add
push
push
add
dec
push
mov
psrad
insb
sbb
jl
mov
pop
xchg
add
rcr
xor
inc
dec
cmp
enter
cmp
test
sub
pop
add
add
or
add
sahf
fsubrl
lods
gs
ret
call
cwtl
arpl
adc
movsl
sbb
int
out
or
pop
jecxz
inc
cwtl
mov
insl
ljmp
ret
aad
xor
int3
xor
andl
fs
mov
movsb
lahf
mov
lret
jbe
test
enter
stos
mov
roll
lds
popa
add
jne
inc
subl
mov
rorb
dec
jg
fnsave
ret
lret
scas
sbb
outsl
lds
mov
cmp
lods
sub
or
jns
test
fwait
pop
push
dec
mov
lret
adcb
cmpsl
cmpsl
das
inc
mov
cli
sbb
popf
ficompl
gs
or
out
or
add
shlb
or
lods
mov
add
fcomp
add
arpl
xchg
lock
push
loopne
fbstp
out
push
inc
sbb
inc
xchg
lahf
lret
add
movsl
add
xchg
add
outsl
rolb
outsl
xor
imul
adc
loop
add
and
lret
inc
dec
dec
add
gs
push
xor
jo
cltd
or
push
outsl
test
aad
pusha
popa
fwait
popf
mov
add
loopne
pop
mov
fistl
xchg
sbb
lret
inc
repnz
addr16
scas
fs
sbb
add
mov
insb
inc
mov
mov
xchg
push
add
sub
dec
dec
into
adc
lcall
sahf
in
add
pop
inc
adc
dec
pushf
test
scas
push
pop
mov
sahf
mov
jns
and
and
sbb
lcall
out
lret
out
stos
lea
add
xlat
rol
neg
in
xchg
lock
push
xchg
xchg
add
data16
pop
cli
dec
and
stc
in
jge
mov
lret
iret
xor
into
add
fsts
dec
sahf
push
mov
jmp
pop
lock
jbe
mov
ret
lret
jne
add
adc
and
push
add
xor
jne
aaa
dec
icebp
mov
lahf
add
xchg
lds
mov
xor
hlt
add
fs
sbb
add
jmp
jb
add
divb
mov
js
loope
into
mov
add
push
cmpsb
mov
aaa
mov
sbb
mov
icebp
fisttpll
cmp
bound
stos
add
dec
dec
enter
dec
pop
dec
scas
add
xchg
xchg
fwait
ret
and
mov
add
clc
dec
out
into
setp
push
adc
jnp
mov
mov
aas
xlat
loop
mov
loope
push
dec
popa
add
popf
pop
dec
mov
nop
adc
mov
pop
cmp
enter
push
sub
mov
popa
enter
push
mov
xchg
add
push
out
shrl
dec
jp
xlat
mov
jl
xchg
push
je
sub
xor
mov
das
outsl
xor
xchg
fiadds
xor
add
fucomi
mov
push
sahf
loope
push
clc
ret
stc
dec
adc
adc
outsl
fistpl
mov
aam
rclb
out
push
fstl
jecxz
and
pop
fcmovnbe
inc
jecxz
add
xchg
cltd
cmpsb
jg
or
sahf
std
lds
sbb
add
sub
aad
adc
mov
lcall
jmp
add
cmp
xchg
lahf
or
sti
out
clc
pop
hlt
adc
lock
out
push
pcmpeqd
mov
sub
sbb
and
ja
loopne
mov
call
or
lret
enter
inc
cmc
repnz
icebp
hlt
inc
dec
psubusb
pop
std
scas
imul
pop
cmpl
lahf
mov
mov
cmp
mov
sbb
fistpll
dec
mov
loop
idivb
in
imul
push
jg
cli
cmc
jmp
les
ret
push
loopne
jae
xchg
push
bnd
pop
mov
cmc
push
movsl
xchg
mov
add
pop
adc
push
pusha
add
mov
add
cli
cmp
jl
stos
xor
mov
rcll
jge
xchg
add
int
in
add
add
je
lret
add
scas
cmp
das
push
mov
add
dec
mov
xchg
pushf
pop
fldl
xchg
xor
mov
or
add
mov
lahf
sti
mov
rcrl
scas
lods
pop
inc
popf
push
data16
mov
mov
movsb
mov
dec
push
push
stos
pop
sub
jmp
movsb
rcrl
outsb
iret
std
jns
das
and
push
ffreep
pusha
add
idivl
add
fucom
mov
pop
aas
add
lahf
lock
lret
adc
imul
add
jg
push
jle
cli
sub
popf
enter
dec
out
scas
or
add
out
lcall
jmp
ficompl
sbb
int3
orl
dec
into
and
out
sub
pop
sub
aas
adc
push
push
add
xor
ljmp
add
hlt
inc
cwtl
adc
aam
aam
mov
dec
movsl
daa
jns
scas
or
sub
stc
adc
pop
push
into
jo
sbb
aas
add
in
push
sbbl
les
push
ljmp
adc
dec
push
mov
add
dec
cmc
imul
inc
mov
ds
cmpb
pop
test
bound
sub
add
xor
in
mov
movsb
out
add
sub
dec
stos
repz
repnz
pop
pop
in
add
lods
aad
lods
mov
and
loope
test
add
jmp
push
popa
add
faddl
dec
scas
mov
dec
lret
mov
std
test
adc
scas
pop
enter
aaa
mov
loopne
add
and
xchg
fiadds
and
xchg
outsb
dec
popa
add
jl
mov
add
lock
test
in
add
pushf
add
pusha
pop
mov
add
stc
gs
fnstsw
and
in
jl
ja
stos
xor
and
dec
stc
out
cs
sub
mov
out
adc
popa
and
lret
popa
pmulhw
sbb
iret
outsb
add
in
jno
fcoms
xor
adcb
mov
sar
in
xchg
or
addl
cmp
rorl
mov
stc
adc
xchg
xor
lock
scas
add
lcall
mov
insb
ficompl
or
sbb
push
sti
add
mov
add
mov
or
scas
inc
add
outsb
push
xchg
mov
jnp
xchg
jno
xchg
ret
fmul
add
cmp
add
jp
lret
loopne
aaa
inc
aad
mov
add
fcmovu
push
mov
nop
fldl
iret
jmp
mov
sub
ror
mov
jns
and
mov
lea
push
fimuls
lret
faddp
loope
ror
push
jno
and
or
scas
or
out
out
bound
cmc
xchg
add
popf
xchg
mov
ret
movsl
xchg
xchg
jnp
jl
fisttps
push
mov
les
data16
add
or
jecxz
scas
push
mov
mov
adc
add
dec
cwtl
mov
add
dec
add
xchg
hlt
pop
test
add
or
leave
mov
iret
push
cmp
addr16
add
jb
dec
jp
jg
or
xor
mov
pop
cmpsb
dec
add
jl
push
mov
stc
pop
fcoml
nop
jle
test
in
add
mov
fildl
cld
mov
iret
mov
fisubl
add
stc
cltd
andb
pusha
mov
and
imul
dec
add
push
xchg
jnp
rorl
push
push
xchg
lcall
add
xchg
and
jns
aaa
insl
inc
sahf
mov
test
fiadds
cwtl
idivl
sbb
dec
mov
jl
add
mov
test
inc
mov
addb
and
pop
pop
int
stos
negb
pop
inc
fldenv
and
aaa
mov
imul
sub
xchg
lahf
dec
inc
pop
push
jae
pop
add
pusha
push
sbb
stos
popa
jnp
mov
fcomi
adc
sub
cli
ret
xor
jp
jno
add
lods
add
add
sahf
add
movsl
flds
sbbl
insb
add
and
add
loop
adc
add
in
out
xchg
mov
int3
add
aad
and
lret
shr
stos
add
jg
push
mov
sti
mov
jae
xchg
sub
push
mov
out
loopne
jne
xchg
add
jae
mov
stos
mov
mov
pushf
and
in
jbe
fldt
mov
adc
int3
mov
jne
sub
jae
add
insb
push
cmpsb
mov
mov
int
int
call
jecxz
adc
cmp
adc
testb
mov
std
cmp
out
push
lcall
andb
outsl
pop
in
in
lret
add
xchg
add
push
mov
int
sub
movb
push
add
test
sub
dec
xchg
add
fimuls
mov
push
outsl
cld
testb
dec
mov
in
xchg
popf
push
mov
cli
cli
pop
lret
push
jp
mov
incb
dec
out
data16
and
add
hlt
pop
mov
sbb
xchg
add
out
lock
fwait
push
mov
loope
mov
add
dec
add
iret
push
aaa
std
sbb
add
inc
pop
leave
std
or
fldcw
dec
adc
mov
pop
xchg
bnd
mov
inc
lret
push
sar
add
stc
outsb
pop
add
arpl
ja
adc
test
outsb
cmp
repnz
gs
inc
rcrl
and
lcall
push
push
roll
cli
jo
and
cmp
fcmovnb
bound
icebp
lret
lret
out
or
xor
pop
mov
jne
inc
or
repz
add
int3
lock
push
out
push
jle
cmp
das
mov
jae
pop
call
gs
repz
scas
test
outsl
sub
aas
into
adc
mov
or
stc
out
jae
addr16
jns
push
out
lods
pop
adc
pop
sbb
aad
adc
mov
notb
pop
xchg
jns
jae
inc
pop
xlat
xchg
ret
ret
or
pushf
ja
push
add
xchg
test
enter
pusha
dec
stc
mov
sti
es
jmp
dec
iret
pop
and
xor
xchg
dec
push
fdivp
jl
out
mov
xor
shl
aaa
mov
mov
out
xor
andb
jmp
sub
add
pop
shrb
mov
mov
mov
adc
mov
cmc
jbe
scas
jae
mov
add
jno
js
dec
pop
xor
add
pop
bound
inc
and
test
add
push
inc
add
sub
popa
cmp
add
or
sub
jbe
xchg
in
leave
add
mov
lock
cmp
add
add
push
insl
popf
push
aas
mov
pop
and
inc
rcrb
decl
iret
insl
and
mov
movsl
xor
loop
shlb
push
add
mov
jmp
add
cmpsl
sbb
test
out
cwtl
mov
ror
mov
push
sbb
cwtl
jmp
mov
mov
dec
push
adc
push
push
insb
add
mov
xor
mov
aaa
jbe
mov
jmp
mov
add
xchg
sub
jns
inc
jno
aad
popf
sbb
xchg
fdivrl
mov
xor
push
loope
sub
pusha
bound
int3
daa
pop
cmp
and
push
sub
js
inc
loop
pushf
int3
jae
add
pop
std
inc
leave
clc
neg
mov
outsb
jne
fmull
add
pop
test
subb
repnz
adc
xchg
push
aas
lret
andl
aam
push
in
add
sub
jnp
and
daa
add
ljmp
jmp
mov
jg
hlt
icebp
xor
sbb
add
push
imul
insb
fisttps
fwait
fs
iret
mov
std
cld
inc
add
dec
inc
adc
jecxz
imul
push
xchg
sti
cmp
call
lock
popa
fisubs
stc
xchg
mov
inc
in
add
xchg
fiadds
or
repnz
stos
jl
add
mov
add
add
cwtl
bound
loop
sub
xchg
call
cmp
push
outsl
call
stos
cmp
mov
mov
push
jbe
sub
cmpsl
leave
jmp
cwtl
leave
add
pusha
inc
shrl
sbb
dec
adc
or
cmp
push
push
mov
out
add
jae
scas
mov
arpl
ror
hlt
pop
iret
mov
mov
add
ficoms
in
add
sub
lahf
mov
add
add
add
fidivrs
lea
xor
repz
out
jmp
jo
daa
add
inc
xchg
add
add
jge
fsubrl
scas
lea
repz
mov
test
add
pop
add
popf
add
jbe
in
xchg
call
push
inc
or
fildll
out
mov
shr
mov
inc
lcall
sahf
sub
sbb
jb
in
jne
lea
cmp
jl
add
mov
xor
cs
fisttpl
in
mov
popf
test
enter
add
or
or
add
cmp
add
xchg
add
lods
pop
aas
bound
gs
push
js,pn
js
js
jne
into
adc
add
adcb
xlat
fisubrl
aaa
xchg
lret
iret
fildl
imul
mov
shll
mov
sti
add
fisubrs
movsb
sarl
mov
cmp
xchg
xor
inc
shrb
loop
and
or
add
lcall
add
mov
push
sub
cmp
mov
push
notl
mov
testb
and
or
clc
adc
jno
das
sbb
lret
into
add
loope
add
mov
fildll
gs
int
xor
rolb
sub
scas
std
scas
add
loope
mov
fcoms
jo
push
in
mov
sbbb
xchg
cmp
test
enter
push
mov
pop
add
cltd
pop
mov
in
loop
adc
ja
xchg
iret
add
mov
mov
add
cs
dec
insb
inc
call
add
push
rolb
int3
mov
andb
in
xor
mov
push
jnp
dec
adc
mov
or
rorb
and
nopl
add
cmp
rclb
pushl
pop
adc
or
cmp
mov
pop
lods
jp
sti
or
jno
dec
inc
out
mov
outsl
adc
or
mov
enter
rorb
rcrb
add
std
test
add
push
mov
pop
add
push
mov
loope
add
xor
inc
cmp
out
fcmovbe
into
add
push
xor
inc
mov
push
imul
mov
push
jno
scas
pop
push
or
lods
push
out
cs
cmp
out
outsl
out
shlb
scas
cld
ds
add
les
xor
sbb
enter
outsb
and
lds
lds
ljmp
xchg
sbb
rolb
inc
add
pop
pushf
lods
add
add
popf
jb
cltd
int3
sbb
nop
or
add
mov
add
cmc
movsb
in
xchg
stos
mov
or
push
xlat
push
xlat
add
xor
or
je
push
and
jns
jnp
xchg
addb
mov
jg
jnp
sub
inc
aas
sbb
lods
xor
notl
xor
mov
fisttpll
sarb
cmp
xchg
iret
cmpsl
xchg
dec
mov
push
sbb
push
mov
sbb
or
add
add
cwtl
mov
movsl
add
imul
incl
add
popa
cmp
incl
adc
jle
repz
add
pusha
jb
xchg
lcall
or
roll
add
inc
push
mov
mov
sbb
es
mull
pop
inc
xchg
xor
add
clc
mov
aas
adc
jne
push
outsl
jge
nop
cld
outsl
fs
mov
addr16
push
jmp
or
cmp
lcall
xchg
hlt
jle
ret
pop
daa
adc
add
add
les
fstpt
lahf
cmp
inc
pop
andb
ss
push
arpl
add
fiaddl
out
mov
mov
rorl
repnz
ljmp
jbe
push
jo
aaa
add
sub
loope
cmp
out
neg
dec
mov
jbe
xchg
pop
js
mov
add
rcl
icebp
incl
iret
jb
add
add
sbb
lcall
outsb
out
push
sub
cli
and
loope
fs
xlat
sub
mov
fwait
sub
ret
call
cmp
or
lret
or
enter
xlat
add
jnp
add
adc
popf
jmp
test
pop
sub
mov
movsl
decl
xor
add
sbb
mov
in
cwtl
or
add
xor
add
add
clc
xchg
and
scas
inc
imul
pusha
add
fsubrs
shlb
or
into
add
cli
mov
mov
in
pop
push
divl
outsl
into
test
mov
addl
xor
pushf
or
inc
mov
mov
or
add
cmpsb
into
mov
popf
scas
ljmp
cmpsl
loope
popa
fisubrl
jo
add
add
mov
mov
add
movsl
jg
push
mov
add
nop
jo
test
add
push
imul
aaa
in
add
add
js
or
mov
aad
jb
push
ss
out
int
repz
in
lock
add
mov
push
insb
mov
popf
mov
jno
cmp
add
dec
sbb
inc
mov
lcall
lods
ret
add
iret
pop
out
add
or
mov
mov
std
jle
sub
add
lahf
pop
outsl
dec
cli
inc
sub
mov
lock
xchg
repnz
mov
jmp
lds
jno
pop
xorb
test
jle
cltd
dec
add
cs
stos
mov
clc
dec
lea
lds
adc
inc
mov
mov
test
stc
aas
lods
cmp
pop
shlb
rolb
mov
fidivrs
sub
in
sbb
mov
pop
popf
add
cmp
ja
and
stos
sub
add
push
push
mov
sahf
cmpsb
jbe
cmc
push
dec
lcall
ror
jle
insl
iret
mov
jbe
jecxz
add
repnz
iret
outsb
outsl
add
push
pushf
loope
std
jmp
sbb
cmpsl
jle
in
mov
xchg
sub
and
ja
stos
jmp
sbb
pop
mov
pop
outsl
and
aam
add
sbb
add
aam
add
test
jnp
loop
add
add
aaa
pop
mov
cmp
sub
xor
lds
dec
add
xchg
pop
xchg
movsb
mov
dec
iret
add
inc
add
add
mov
outsl
loop
cltd
mov
ljmp
lea
mov
out
add
movl
add
in
ljmp
or
rcrb
sbb
sub
loope
mov
js
xchg
scas
bound
dec
sbb
jle
insl
pushf
outsl
add
sub
arpl
ss
push
in
add
pop
lcall
test
pop
ljmp
push
fwait
push
in
ret
and
and
mov
jbe
add
and
imul
or
dec
repnz
cmpsb
das
jecxz
in
push
inc
cmp
cs
shl
xchg
dec
test
fs
mov
jne
lock
flds
mov
dec
call
fnstsw
daa
arpl
adc
stos
sti
mov
and
dec
dec
add
test
mov
jmp
pop
push
aad
pushf
push
sub
in
fnstsw
jb
outsb
rcrl
jge
mov
test
xor
push
fwait
mov
pop
add
cmp
jmp
fisubl
mov
pop
mov
xor
das
xor
xchg
or
mov
leave
mov
xchg
xchg
lcall
imul
add
fdivs
inc
int
sbb
inc
and
pushf
nop
xchg
or
xor
adcb
stos
or
pusha
stos
hlt
add
jnp
scas
pop
movsb
pop
fwait
add
push
icebp
sbb
ficoms
xor
mov
mov
add
add
xor
lret
and
sahf
sbb
mov
add
mov
addl
dec
lock
ret
xchg
mov
mov
icebp
push
push
ret
mov
mov
es
add
mov
sub
roll
cld
xor
jbe
data16
cmp
in
mov
stos
leave
test
into
adc
out
arpl
add
xchg
add
xchg
adc
add
pop
pop
push
xchg
sub
dec
adc
dec
les
push
bound
sub
es
inc
add
fcmovnbe
aam
fistpl
and
aam
push
andl
repnz
jbe
dec
repz
lahf
adc
in
mov
mov
mov
mov
into
mov
jae
fwait
fs
repz
mov
sbb
jg
int
pop
incb
cmc
sbb
inc
inc
loop
das
test
out
push
add
test
cmc
cltd
cmp
xchg
divb
enter
adc
pop
add
add
mov
mov
jbe
movsb
aam
add
add
xor
add
mov
lret
jle
jbe
in
je
lret
jbe
cwtl
xor
pop
push
jge
insb
mov
lret
mov
xchg
mov
out
mov
add
mov
add
pop
shrl
popa
mov
enter
cld
aas
xorl
add
pop
inc
add
add
sbb
hlt
sbb
mov
inc
mov
pop
inc
mov
lcall
add
adc
and
pop
enter
mov
cltd
cmp
out
dec
cld
mov
and
inc
pop
xchg
into
rcl
rcl
stos
data16
mov
shlb
inc
std
test
push
add
js
stc
lods
sahf
adc
dec
inc
shr
mov
rorl
cli
lcall
adc
repz
cltd
leave
cmp
fdiv
std
movsb
or
push
addb
push
in
es
rolb
sti
and
sub
fsubl
aaa
enter
fidivl
mov
and
imul
or
subl
pop
movsb
cltd
cli
lret
jecxz
xchg
clc
push
mov
sbb
repnz
mov
adc
fnstcw
call
xchg
xor
add
push
sbb
sub
and
add
jno
in
lods
add
mov
cmp
or
and
mov
xchg
sub
add
push
inc
add
dec
inc
mov
add
mov
loop
mov
daa
pop
or
ja
pop
push
fistl
push
add
push
addr16
add
jo
jns
push
cmpsb
sub
rorl
add
xor
add
data16
sub
mov
fcompl
mov
sub
adc
or
icebp
push
aas
test
loop
mov
inc
add
add
cmpl
inc
mov
rorb
fcmovbe
xor
dec
daa
icebp
adc
lret
jl
lock
sub
jno
xchg
add
push
push
mov
add
jo
movsb
incb
ror
or
jae
add
xchg
out
adc
sbb
mov
out
pushf
movsl
push
xor
and
std
shll
adc
add
or
inc
call
jno
jo
fildl
add
add
or
adc
lock
int3
dec
add
out
or
sub
sahf
add
gs
xchg
mov
ret
lods
imul
into
shrl
sbb
sub
add
and
cmp
add
sub
add
pop
mov
add
leave
test
mov
popf
adc
mov
outsb
and
dec
cli
dec
movsb
ljmp
fs
sbb
or
outsl
insl
mov
cltd
sbb
and
jle
cmp
add
js
push
add
ljmp
les
add
jmp
aad
sbb
je
call
ret
clc
es
loope
in
adc
lds
ret
mov
xchg
stc
add
ret
cld
test
inc
or
cmp
jg
stos
cmp
xchg
xchg
inc
pop
xchg
shl
push
xor
out
add
sbb
dec
arpl
add
negl
pop
ja
add
cs
cmp
add
sbb
inc
xor
test
add
cld
sub
mov
sub
in
add
dec
inc
push
ss
push
add
mov
add
mov
lret
add
lods
ret
xchg
xchg
mov
xchg
mov
mov
ja
add
movb
inc
movsl
test
pop
aaa
mov
inc
add
push
cwtl
insl
out
sarb
xchg
push
repnz
cmp
or
inc
call
fcompl
mov
ror
js
jo
dec
rclb
dec
xchg
sbb
lock
lock
adc
scas
add
cli
mov
mov
dec
add
rcrl
jbe
dec
cmp
clc
adc
mov
jns
in
mov
inc
test
push
add
mov
jo
xchg
rorl
mov
dec
lock
lret
pop
xchg
dec
fiaddl
xchg
cmp
jb
add
rolb
fnstenv
movsl
sbb
xor
or
sbb
out
movsl
jecxz
repnz
sahf
add
inc
cld
pop
pop
stos
cltd
mov
ret
lret
fmuls
fwait
dec
mov
insb
xchg
mov
dec
push
cmp
mov
fiadds
aam
or
add
mov
and
aaa
mov
add
add
pop
jmp
in
mov
iret
add
loop
push
fsubrl
repz
pop
andb
or
addl
jecxz
jo
repnz
push
mov
addr16
repz
cmp
or
addl
adc
jle
arpl
aam
add
clc
and
or
lds
outsl
fstps
mov
jne
icebp
push
rclb
mov
repz
in
addb
aad
xchg
insl
scas
mov
pop
icebp
rcrl
test
fadd
pop
add
mov
add
clc
add
cmp
cmc
add
andl
std
repz
loop
enter
mov
and
repz
mov
push
in
lds
les
cltd
add
and
jnp
shlb
rorb
outsb
push
in
or
lods
cmp
add
add
dec
add
jmp
lcall
jecxz
push
enter
cmp
push
faddl
ja
inc
add
hlt
cmp
pushf
mov
add
push
pop
add
mov
aam
mov
push
clc
out
mov
lea
jle
add
outsl
xor
cmp
xchg
cmp
pop
rolb
iret
xlat
add
xchg
cmp
add
mov
icebp
movsl
call
bound
xchg
fildl
xchg
add
and
adc
add
clc
aas
jge
jns
mov
mov
xorl
sahf
add
jb
add
sarb
jae
frstor
out
sub
mov
fsubrs
add
push
push
addb
insb
lret
adc
jne
jns
popl
add
stos
movsl
mov
js,pt
add
xor
add
push
shlb
adc
add
jecxz
aad
scas
outsb
stos
leave
push
and
pop
and
movsb
push
mov
add
adc
jle
hlt
fisttps
das
xchg
add
ss
pop
add
insb
sarl
cmp
fstp
add
cmp
sub
inc
or
dec
mov
ljmp
and
addb
test
push
pop
test
or
pop
pop
add
xor
pushf
add
shr
add
test
out
mov
push
repnz
out
push
dec
hlt
popf
test
cwtl
sbb
mov
dec
ja
call
adc
and
xlat
mov
les
mov
test
sub
ja
shrb
push
add
xchg
mov
addr16
imul
sbb
add
bound
jge
add
movq
mov
aad
cs
xchg
pop
jle
arpl
int3
insb
add
or
sub
stos
stc
int3
jb
xchg
mov
nop
mov
jmp
addr16
add
leave
stos
mov
leave
dec
mov
shr
in
cs
cmp
cmp
add
dec
pmuludq
xchg
ret
push
pop
leavew
stos
nop
jge
push
rcll
daa
inc
out
xlat
pop
insb
into
sub
mov
xchg
jg
shl
add
aaa
add
pusha
popf
bound
add
push
inc
icebp
dec
aaa
test
stos
popf
dec
push
ror
sub
jmp
sbb
sbb
dec
or
mov
pop
out
xchg
rcrl
xchg
xor
pop
pop
push
stos
outsl
dec
fxch
mov
std
mull
lods
jne
sbb
addr16
jnp
mov
cli
push
adc
xchg
sbb
cmp
fsubrl
push
jbe
sub
cwtl
pop
out
add
loope
pop
pushl
inc
inc
insb
add
push
jae
inc
push
xchg
aas
xchg
into
js
or
mov
lahf
cmpsl
mov
nop
add
xchg
cltd
ret
mov
xor
pop
fs
iret
mov
sbb
mov
cli
add
xchg
cmp
add
in
xor
pop
shll
inc
jmp
enter
and
adc
movsl
ret
cmpsb
push
xchg
add
mov
ficoms
or
jnp
jo
jnp
add
pop
sbb
mov
imul
sti
sub
repz
mov
sbbb
inc
sbb
cmp
dec
arpl
inc
nop
mov
or
push
ja
sbb
and
lea
sbb
add
in
nop
push
maskmovq
idivl
jno
add
add
adc
xlat
lret
sub
fdivl
sub
push
test
es
repz
add
int3
add
notl
fildl
loope
add
inc
xchg
pop
cmp
iret
and
sub
aam
stos
daa
add
sbb
in
bound
repnz
jne
out
add
add
cmc
test
shrl
gs
test
pop
or
jno
test
adc
enter
pop
test
adc
stos
xchg
clc
and
xor
mov
icebp
add
adc
push
call
dec
clc
aam
jne
push
sbb
and
push
push
pushf
rcr
add
inc
xor
fwait
xchg
outsb
xor
jg
mov
jmp
popf
pop
repz
jle
lea
sub
fildl
mov
shll
mov
sbb
or
dec
or
inc
adc
pop
sahf
cli
sbb
fistpl
sbb
pop
and
and
pop
out
inc
pop
fnstenv
pop
mov
lds
icebp
daa
push
or
int
mov
cmp
lahf
pop
cmp
jp
fmuls
inc
push
cmp
cmp
xchg
outsb
int
rol
sbb
insl
and
add
mov
dec
jle
add
call
add
mov
mov
outsl
clc
or
adc
pop
pop
out
add
addr16
ficomps
sbb
dec
xchg
jbe
cwtl
or
add
test
ret
outsb
add
loop
mov
imul
sbb
xchg
jecxz
test
loop
mov
loope
add
mov
or
adc
adc
pop
add
xchg
cmpb
outsl
cmp
out
and
clc
add
cmp
fidivrl
sti
les
jl
xor
in
xchg
xchg
push
mov
dec
mov
xabort
add
push
mov
sbb
lahf
jno
vmwrite
push
xchg
push
mov
cwtl
ja
jne
popa
outsl
ret
add
inc
aas
in
push
jbe
jns
inc
or
insl
mov
jae
or
jge
sub
sahf
ljmp
sarl
arpl
add
sbb
lods
add
fadds
or
clc
mov
inc
fs
dec
xchg
lret
les
dec
negb
and
fistl
sub
mov
ljmp
dec
test
and
sbb
lahf
jns
cmpsl
dec
int3
add
out
mov
adc
sbb
leave
dec
movsl
cltd
arpl
leave
push
adc
mov
xlat
xchg
jbe
cmp
ret
push
icebp
add
and
scas
add
roll
hlt
sub
add
adc
subps
mov
sub
mov
xor
jecxz
ds
cmp
mov
xor
inc
hlt
push
xor
movsb
mov
add
mov
inc
mov
jne
and
add
in
xchg
es
jns
jb
popa
pop
push
loopne
repz
jg
jle
inc
push
jbe
aas
mov
ja
fmuls
shlb
mov
add
add
add
repz
add
add
add
pop
pop
add
add
add
push
jo
sbb
pop
mov
sbb
mov
add
adc
xchg
cmp
jb
rcrb
lea
scas
or
xchg
imul
adc
inc
xchg
lock
sbb
jnp
xchg
pushf
sbb
ja
sub
daa
fisubrs
jle
pop
notb
push
sbb
cli
mov
mov
jge
add
fdivrs
int
fistl
add
pop
ljmp
mov
int
inc
add
movsl
mov
pusha
sub
testb
dec
mov
fistl
fmul
xchg
add
int3
mov
add
add
imul
xor
jnp
aam
pop
cmp
rorb
add
sti
dec
scas
push
add
int
push
fucom
jmp
das
fidivl
es
pusha
lock
adc
adc
push
lock
notl
dec
add
xlat
sbb
scas
cmp
pop
mov
fimuls
push
adc
loopne
xor
lret
mov
aaa
or
ja
repnz
add
hlt
add
adc
fwait
inc
add
daa
add
or
mov
rcrb
jnp
mov
loope
push
or
daa
rorb
jge
add
add
lock
sub
and
mov
add
or
mov
insl
add
mov
add
and
mov
rdpmc
test
jecxz
inc
adc
fwait
inc
rcll
das
mov
pop
out
mov
and
cmp
shll
adc
in
mov
mov
fnstcw
jp
fnstsw
adc
push
jns
cmpsl
repz
popl
push
sbb
sub
pop
loop
cmpsl
scas
sbb
leave
jge
dec
add
mov
in
in
cwtl
xchg
ljmp
pop
adc
fldl
or
sub
outsb
mov
mov
repz
add
das
stos
call
add
ret
or
inc
loop
loop
scas
xor
je
cmc
cmp
int
pop
add
pushf
jmp
imul
dec
inc
add
mov
enter
and
jle
mov
out
arpl
test
and
test
in
xlat
mov
sub
inc
jge
stos
test
jb
rcr
jge
pop
in
push
dec
fistps
lds
pop
fs
xchg
lea
add
vphaddbq
arpl
out
push
sbb
lea
pop
mov
icebp
mov
cmp
xchg
popa
inc
push
icebp
into
add
test
or
pop
fwait
insb
int3
arpl
sbb
add
jne
mov
in
mov
cmp
cmp
jo
aaa
adc
add
rcll
setae
add
lret
mov
mov
jl
pop
cmp
lods
cmc
in
mov
fnstsw
pop
cmpsl
push
imul
data16
fs
lret
pop
stos
jecxz
add
movsb
xchg
add
add
jbe
xor
pop
adc
je
test
fnstsw
pop
cmpb
push
fidivrl
xor
mov
add
sbb
dec
cmp
pop
pop
mov
dec
out
sti
fdivs
cli
or
gs
hlt
jno
dec
fs
lahf
js
mov
sar
jge
out
mov
add
pop
mov
mov
push
fisubl
add
add
cmp
outsl
addl
cli
hlt
arpl
loop
add
add
mov
sbb
push
rclb
pushl
scas
dec
add
call
add
scas
dec
repz
in
fcmovnb
stc
push
test
push
or
or
lret
sbb
fcomps
cmp
dec
cli
in
popf
cmp
movsl
dec
daa
inc
sub
add
xchg
add
inc
jne
test
adc
add
lods
sbb
mov
enter
imul
mov
mov
add
xorb
push
xor
mov
mov
sbb
jmp
add
mov
ds
xchg
or
jl
movb
mov
pop
sub
test
mov
test
nop
testl
lock
cmpsb
pop
sbb
push
lret
push
mov
mov
and
add
test
and
jle
fmuls
xchg
mov
ja
mov
xchg
fsubp
fistpll
out
xlat
insb
arpl
pop
jecxz
cli
add
out
fs
aam
and
lea
add
xor
xlat
je
mov
adc
ss
mov
add
pushl
or
fnstenv
inc
cwtl
sub
fnstcw
inc
fsubl
mov
in
xchg
xchg
inc
pop
in
subb
add
mov
fistps
jecxz
aad
add
mov
movsl
jl
iret
xlat
inc
pop
cwtl
pop
or
jp
sarb
push
or
and
add
test
je
out
andb
cwtl
add
arpl
mov
dec
add
mov
fisttps
andb
jnp
add
cld
fldl
mov
rorb
rcrl
clc
push
popf
inc
pop
daa
cmpsl
xchg
shrl
lret
add
lds
xchg
pop
cmc
cmp
cld
fadds
scas
jmp
mov
jo
jmp
mov
mov
int
push
aas
sub
add
fstl
jecxz
fs
lret
inc
insl
or
push
mov
decb
rcrb
mov
jns
ljmp
add
fwait
pop
jmp
add
xlat
mov
outsl
pushf
or
push
or
imul
cmp
shlb
sbb
in
push
add
lods
add
xchg
push
mov
mov
mov
jg
jg
add
or
loop
pusha
jno
mov
rol
enter
mov
cs
sub
inc
out
mov
je
xchg
iret
add
fiaddl
out
inc
insl
or
out
adc
scas
lret
add
pop
int3
mov
push
pop
jae
add
bound
jns
or
xchg
pop
dec
add
sahf
fdivrl
das
and
and
sahf
add
cmp
imul
pushl
ret
fcoms
ror
test
incl
xor
add
push
xor
add
fnstsw
add
xchg
dec
into
xchg
clc
nop
pop
xchg
filds
int
mov
test
inc
mov
mov
cld
push
inc
dec
sub
ror
xorb
xor
and
sub
add
jnp
sbb
add
enter
xchg
inc
addr16
adcl
pop
inc
in
mov
in
add
insb
dec
xchg
sbb
pop
push
sarl
or
add
lcall
outsl
add
lret
cs
ja
cli
pop
add
xor
mov
clc
int3
or
lock
loope
rclb
les
arpl
pop
dec
add
fsubrl
dec
js
sub
add
and
out
out
sub
adc
inc
xor
pop
add
add
fwait
and
push
mov
and
cmp
and
out
call
dec
cmpsl
jo
add
mov
add
fnstcw
add
jl
aas
dec
adc
lcall
stos
mov
mov
pop
aas
push
cmp
mov
add
xor
add
mov
je
push
mov
add
subb
ljmp
add
mov
mov
pop
pop
ja
loope
push
cmp
and
pop
out
xchg
xchg
aam
clc
add
mov
mov
fmuls
push
mov
cld
cmp
fs
jbe
mov
and
adc
lods
mov
notl
lcall
or
add
pop
jno
cmp
nop
scas
xchg
push
pop
outsl
lods
sub
add
pop
mov
inc
add
add
pop
dec
leave
mov
int
jne
adc
mov
jecxz
mov
test
mov
fsubr
push
in
iret
fildl
and
cs
cmp
add
jmp
mov
xor
outsl
add
gs
pop
mov
mov
jo
arpl
jecxz
add
add
aad
push
mov
cmc
ljmp
mov
add
add
nop
add
mov
sahf
push
imul
pcmpeqw
cmp
or
sbb
lcall
scas
or
push
out
add
mov
inc
daa
addr16
add
push
push
int3
decb
add
or
mov
inc
nop
fwait
xchg
jge
mov
aas
xchg
sbb
movl
sahf
mov
adc
or
inc
subb
clc
xchg
push
inc
mov
and
insb
and
rcr
xchg
pop
xchg
push
stos
imul
push
int3
mov
cmpsl
decb
mov
push
outsb
imul
mov
mov
mov
outsb
imul
in
xor
jae
cmp
push
lea
inc
test
mov
stc
cmpsl
out
out
iret
sub
fnsave
adc
enter
movsl
subl
add
fcomps
dec
push
add
cwtl
mov
dec
sub
filds
inc
es
call
das
sar
fldcw
jae
sar
addb
cs
mov
push
or
daa
add
das
push
pop
aas
loop
incl
dec
and
mov
divb
test
mov
pop
je
sbbl
jmp
add
inc
and
paddd
mov
mov
push
mov
add
mov
or
jns
mov
dec
push
aaa
inc
scas
xor
cli
js
mov
jbe
lock
add
push
add
shrb
jge
pusha
das
repz
and
jg
mov
popa
sbb
mov
arpl
jmp
aad
jmp
lods
cs
cmp
aad
inc
and
add
lock
push
lods
call
test
dec
movsb
and
jno
add
jl
mov
enter
sbb
sbb
add
popa
add
cmpsb
jge
lret
lret
add
sbb
dec
or
add
das
pushf
inc
push
pop
push
stc
push
mov
or
cwtl
pop
mov
xor
push
lahf
jmp
and
lahf
jge
push
leave
jne
in
lret
fsubs
nop
fsub
inc
add
xchg
enter
call
push
and
shrb
add
add
xor
or
push
push
ret
dec
fadd
cmp
adc
in
mov
jg
sub
sahf
lods
xor
pop
sti
cs
addr16
push
cmp
mov
xor
xchg
cmc
ljmp
lds
sbb
add
xchg
xchg
mov
loop
outsl
test
stos
test
ljmp
test
gs
add
subb
popf
test
sbb
cwtl
xchg
push
or
push
mov
dec
push
mov
das
ljmp
add
stc
pop
and
add
mov
sahf
stos
mov
sti
mov
mov
xchg
sbb
mov
add
inc
pop
js
cmc
ljmp
pop
cltd
push
pop
inc
mov
fs
rclb
add
or
add
push
and
jno
stos
sarb
pushf
mov
pop
and
fdivp
les
pop
loopne
dec
sub
in
scas
push
cmc
lock
nop
and
xchg
inc
ffree
ss
cltd
pop
test
dec
fadds
inc
cli
push
jbe
cmc
dec
cmp
xchg
in
cmp
cmp
cmpsb
adc
add
cmp
das
jle
sarl
add
cmp
enter
adc
dec
xchg
in
pop
in
test
mov
adc
sbb
xor
mov
or
roll
addb
sub
cmpsl
add
cltd
add
jmp
scas
sub
dec
add
dec
dec
sbbl
pushf
das
cmp
jg
mov
mov
push
arpl
push
loopne
jae
xor
add
sub
mov
cmc
mov
cmp
add
fidivs
gs
mov
or
in
dec
pop
sbb
add
pop
sub
or
roll
pop
repnz
imul
mov
std
push
or
sbb
shll
in
xchg
pop
sub
test
outsb
inc
pop
add
lret
xchg
dec
cld
mov
mov
add
loop
sub
test
add
fimull
push
mov
in
icebp
cmp
push
push
out
call
push
xchg
insb
sub
je
xor
jb
fiadds
fimuls
in
js
cmpsl
mov
add
fistl
fistl
add
clc
sarl
cmp
add
call
fcmovb
mov
in
adc
and
mov
stc
fsubl
es
es
xchg
ret
pop
test
add
push
lds
fdivl
gs
test
mov
add
pop
imulb
popf
in
sub
lods
or
dec
es
mov
scas
mov
es
ljmp
iret
roll
lret
pop
push
push
sahf
sahf
ror
jae
repz
and
add
xor
mov
xor
ja
jge
mov
decl
push
xorl
adcb
jg
add
push
adc
shl
das
inc
push
cltd
in
and
xchg
jg
dec
mov
lods
jge
push
mov
inc
movsl
lcall
sbb
test
mov
pop
mulb
jo
push
add
add
add
insw
ss
jp
mov
cmpsb
mov
push
das
je
mov
add
xor
pop
sub
lods
es
xor
test
add
jp
mov
pop
xchg
gs
repz
fsubr
popa
loopne
test
mov
hlt
xlat
or
dec
int
into
add
ljmp
sbb
jnp
je
cmpsl
rcrb
xchg
add
sbb
xor
ss
scas
in
sub
repnz
inc
pop
sti
jge
cli
add
jb
jmp
lds
jmp
xchg
loop
fisttpll
orl
adc
add
sbb
pop
cmpsl
sti
rclb
notb
jnp
fisubrl
xchg
outsb
mov
out
add
shlb
pop
rol
mov
add
lock
xchg
or
into
add
cmp
dec
push
jnp
mov
sub
out
cli
dec
push
push
add
jnp
or
addb
cmp
test
into
xor
repnz
add
sub
jae,pt
push
xchg
or
sub
add
push
enter
push
pop
clc
js
xor
pop
sbbl
adc
push
dec
repnz
add
push
inc
mov
je
inc
pop
in
jmp
iret
push
stos
cmc
and
enter
enter
mov
add
jge
mov
mov
outsl
daa
repnz
shrb
pushf
adc
push
mov
or
cmc
mov
jo
iret
outsl
out
mov
addl
xchg
jmp
insl
dec
pop
or
add
adc
cmp
and
mov
xor
pop
and
cmp
ss
xchg
jnp
add
jp
mov
lods
notb
bound
and
je
add
rolb
in
add
add
mov
inc
orl
xchg
mov
or
pop
push
cmp
mov
push
ret
nop
push
push
jg
out
test
add
pop
add
hlt
hlt
jno
fdivrl
mov
and
add
out
and
movsb
add
pop
xrelease
mov
jnp
add
mov
pusha
add
dec
add
add
jbe
add
adc
push
incl
call
insb
mov
push
negl
loopne
push
mov
sbb
mov
sub
mov
pop
pop
and
add
xor
clc
inc
cltd
mov
xor
inc
es
loop
sub
adc
inc
clc
mov
mov
mov
lea
insb
dec
jle
jno
jecxz
xchg
aaa
in
lock
ss
cltd
pop
push
in
adc
std
ud1
clc
lods
dec
cmp
adc
arpl
dec
shrl
pop
mov
add
cmp
xchg
pop
cmpsl
xchg
dec
ret
add
decl
adc
jns
icebp
sahf
push
add
mov
aas
cltd
push
test
lds
add
push
cs
lea
dec
add
frstor
inc
inc
stos
add
les
sub
xorb
xorb
jns
inc
push
mov
ljmp
fsubr
decl
fildll
and
add
xchg
fldcw
int3
mov
outsl
dec
jl
jg
push
add
pop
inc
pop
dec
and
add
xchg
pop
sbb
out
cli
mov
mov
lea
jg
stos
ret
icebp
ja
jmp
test
pop
xchg
xchg
or
xchg
lret
sub
mov
dec
ds
mov
add
in
fldcw
add
cmp
je
and
stos
pop
jbe
add
rcl
mov
xlat
mov
rorl
push
rcrb
stc
cmp
inc
or
push
jnp
mov
xchg
add
jle
mov
jmp
pop
push
jne
xor
add
push
mov
cs
out
test
iret
push
push
add
dec
sti
loope
in
inc
or
cmp
out
mov
inc
ja
lcall
sub
xchg
mov
sbb
movsb
push
lea
loopne
psrad
mov
ds
mov
add
popa
pushf
daa
pushf
inc
mov
jno
mov
push
add
fcoms
sub
mov
push
jo
mov
cld
mov
imul
lea
gs
inc
repnz
add
repnz
jp
cmp
roll
add
add
call
mov
pop
fcoml
jp
push
jmp
mov
mov
lods
jecxz
lret
xchg
enter
outsl
jnp
mov
push
xor
lret
int3
pushf
pop
or
and
clc
and
les
xchg
mov
pop
mov
cmc
cmp
add
stos
pop
fstpl
sbbl
mov
sbb
push
xchg
lea
inc
fdivrl
pusha
es
add
cltd
xchg
xchg
and
jae
outsl
in
jae
jns
or
jl
inc
call
cmp
add
pop
pop
mov
ret
xchg
ret
in
inc
aad
sbb
test
mov
lods
cmp
pop
pop
sub
iret
and
cmp
add
cmp
mov
mov
fstpl
out
and
leave
orb
push
add
mov
jo
movsl
outsb
sarl
mov
adc
and
inc
inc
sbb
add
add
shl
jnp
sub
out
scas
push
stos
pop
xor
mov
push
rdmsr
cwtl
mov
inc
loope
test
cltd
add
cmp
aas
xchg
or
sub
add
jns
and
and
enter
repz
shlb
add
inc
popf
push
cmpsb
int
lahf
pop
ret
int3
mov
add
ret
std
xorl
mov
cli
dec
dec
rcpps
ss
loope
addl
inc
xchg
jmp
push
jae
push
jg
out
cmpsl
dec
mov
and
add
add
xchg
stos
nop
pop
aam
jno
mov
cwtl
loope
lea
std
push
add
fs
jecxz
fsub
loop
nop
mov
stos
filds
imul
adc
jl
jle
jb
dec
add
add
ljmp
push
dec
test
dec
addr16
fildll
mov
dec
or
add
sti
mov
xor
ljmp
sbb
in
xchg
popa
adc
xchg
mov
xor
add
mov
pop
cmp
mov
jae
into
mov
mov
xchg
dec
in
mov
xchg
pop
bound
scas
add
cmp
fwait
nop
pop
dec
mov
add
scas
pop
mov
adc
imul
in
call
and
orb
pop
jo
jb
push
hlt
orb
in
mov
sbb
adc
sbb
add
stc
or
sub
cltd
xchg
test
mov
lea
add
inc
xchg
sbb
inc
mov
mov
lock
add
adc
push
testb
fstpt
add
mov
rorb
xor
add
add
cli
nop
pop
clc
or
mov
lret
subb
inc
push
mov
xlat
add
lcall
in
mov
xor
pop
pop
int3
mov
mov
mov
jecxz
mov
int
lahf
movsb
test
std
mov
mov
fcoms
out
xor
mov
add
jmp
mov
pusha
xchg
les
in
xlat
xchg
mov
jge
stos
rclb
jns
shrl
icebp
jae
or
notb
test
loop
push
notl
add
dec
fdivr
mov
aas
fs
fsubl
sahf
fmull
scas
adc
out
xchg
add
int
jbe
xchg
push
out
cmp
subl
add
mov
lock
cmp
sti
lret
add
iret
into
mov
sub
mov
add
xchg
inc
xor
or
adc
pushf
fs
mov
xorl
cmpsl
add
inc
pop
add
push
int
xchg
add
sbb
mov
loop
cmp
add
jne
dec
ds
ljmp
mov
icebp
add
enter
js
and
dec
orb
in
imul
pop
fwait
in
movsl
lahf
daa
mov
imul
or
add
js
lret
mov
pop
dec
mov
pop
stos
adc
or
test
fadds
inc
add
call
cmp
mov
jmp
lcall
xchg
sub
dec
addr16
mov
andb
xor
adc
add
in
sbb
jge
inc
pop
xor
dec
sbb
add
add
dec
test
push
cli
add
add
cld
inc
into
in
xlat
add
push
cmp
mov
sub
sbb
xor
sbb
shl
add
sarl
push
cmp
testb
mov
sub
fisttpl
fdivr
add
dec
sti
ja
iret
test
das
call
add
nop
or
int
mov
push
nop
add
fdivrl
lea
add
push
mov
dec
mov
push
rorb
and
nop
xor
mov
or
pop
mov
jl
aad
add
jbe
mov
add
lods
pop
adc
mov
mov
jb
lods
push
jne
cmp
stc
add
xchg
scas
lret
outsl
mov
shrb
adc
mov
pop
dec
sub
cmp
xchg
pushf
in
mov
dec
dec
add
sub
jbe
push
mov
pop
xchg
or
mov
lods
cmp
push
out
les
mov
push
imul
xlat
inc
aas
jne
hlt
add
and
lock
addr16
ret
popa
cli
add
stos
shl
sbb
aas
add
jae
cwtl
dec
push
add
icebp
mov
ret
std
lea
add
jl
rclb
add
adc
fisttpll
sub
add
scas
mov
sub
and
cmp
popa
jge
cmp
imul
test
jle
insb
std
mov
add
add
loop
sti
leave
and
add
cmp
leave
push
insl
rolb
cmp
add
jg
cmp
xchg
and
mov
pop
jecxz
icebp
adc
lret
xlat
aaa
outsl
pop
fldl
fsubrl
lds
mov
test
loope
jnp
dec
repnz
daa
divb
lahf
repnz
loope
jbe
aam
hlt
imul
cwtl
flds
loope
in
cmpsb
imul
jg
pop
add
mov
popl
mov
pop
add
es
inc
adc
lcall
jecxz
ficoml
pushf
aam
cld
mov
add
fnstsw
inc
subb
shr
rcrb
add
add
dec
add
xchg
xor
jecxz
dec
add
rcll
div
mov
or
cmp
push
sbb
pop
mov
and
adc
nop
out
js
push
pusha
pop
lea
addr16
add
data16
adc
aad
jno
fs
cli
movsl
mov
or
jne
out
sbb
lea
adc
test
jno
add
filds
jne
add
cmp
sub
or
add
out
in
adc
aaa
mov
add
and
mov
add
mov
xchg
loop
mov
xchg
dec
mov
push
mov
push
push
cmp
in
or
sahf
stc
fwait
jge
jae
xchg
jb
add
scas
or
dec
test
pop
dec
aaa
dec
adc
cmpsl
das
enter
into
cmp
sbb
das
mov
push
iret
push
ret
dec
ja
fadds
ja
add
pop
add
rcrb
cmp
adc
and
inc
or
mov
int
xlat
push
loop
add
outsl
adcl
push
jl
push
xorb
inc
insl
mov
imul
outsl
inc
lret
shll
ljmp
ss
xchg
xchg
sbb
mov
es
inc
pop
mov
cmp
or
icebp
add
lods
mov
pop
outsb
pop
fmull
fidivrs
or
push
in
inc
shll
adc
aam
cltd
popfw
add
test
xchg
loopnew
rorb
mov
inc
imul
pop
add
mov
add
scas
clc
lahf
xor
fnsave
incl
mov
pop
add
test
jg
lods
pop
scas
aaa
and
das
sahf
rclb
adc
xchg
jle
arpl
inc
add
shld
pshufw
mov
inc
fildll
pop
in
mov
push
clc
mov
fimull
push
add
movsl
lds
scas
insb
movsb
mov
mov
add
pop
subb
les
inc
mov
in
jmp
mov
cmp
xchg
add
or
hlt
inc
inc
insb
lods
jge
fs
push
mov
sub
add
fdivs
ret
test
mov
push
ds
dec
ret
push
add
imul
pop
cld
cmp
add
xlat
sbb
push
mov
mov
pusha
pop
into
js
lock
dec
lahf
in
clc
add
popf
iret
stos
push
xor
js
push
mov
adc
rorb
xchg
dec
dec
popa
push
push
shrl
and
rcrl
dec
mov
out
or
cwtl
add
mov
test
add
out
xchg
test
push
movsb
fsubl
jb
pop
test
jl
pop
mov
fistl
inc
jae
add
lds
out
xchg
mov
add
inc
inc
into
in
cmp
mov
xchg
fisttpll
sbb
xlat
sahf
jl
lock
mov
ja
daa
int
and
shlb
add
adc
sbb
jge
xchg
xchg
ret
mov
ret
aam
dec
add
add
lds
jo
test
test
dec
cmp
push
push
xlat
es
mov
outsb
add
ds
mov
adc
and
add
pop
jae
into
pop
or
iret
xor
lds
inc
sub
cld
loopne
cmpsb
add
lock
rorl
add
push
ljmp
add
out
out
lods
xchg
or
jle
mov
cli
mov
xchg
or
stos
add
add
mov
jno
sub
xor
jmp
add
loope
insl
add
out
add
pushf
xchg
or
inc
push
pop
nop
mov
add
add
test
push
in
lret
test
shll
icebp
nop
xchg
lahf
insl
pop
jg
aad
stos
inc
add
pop
mov
int3
xchg
int3
test
call
and
xchg
ja
sbb
adc
cwtl
xchg
in
add
ret
add
pop
pop
lret
cltd
ret
stos
mov
mov
out
out
out
movsb
pop
add
add
add
dec
add
mov
dec
lds
push
int
inc
jmp
add
add
mov
pop
insl
xchg
push
mov
dec
mov
pop
ret
xchg
outsl
cmp
lock
imul
jbe
add
mov
lods
test
inc
fiaddl
popf
push
cltd
cmpsb
add
dec
xor
stc
mov
sbb
push
jmp
loopne
pop
imul
add
imul
cmc
cmp
jl
add
and
add
leave
in
test
jnp
ret
mov
add
xchg
out
and
or
int
fimull
inc
pop
sub
mov
pop
add
outsl
scas
jo
sub
pushf
rcl
sarb
cmp
dec
shll
mov
sub
sbb
pusha
mov
xor
scas
mov
add
jo
jmp
scas
insb
push
scas
outsb
mov
bound
xor
jb
out
data16
push
fdivl
add
int3
insl
test
fwait
xor
lods
jo
xor
jae
sarl
jo
push
leave
sbb
xchg
jl
dec
or
mov
adc
add
ja
mov
xchg
mov
mov
mov
dec
in
mov
inc
lret
push
icebp
xchg
xor
or
push
enter
mov
add
popa
and
jle
add
pop
jne
add
add
push
ret
insl
stc
add
dec
pop
movsb
out
loope
push
mov
pop
aaa
icebp
and
cli
jno
shrl
push
add
test
mov
imul
idivb
and
sbb
loop
std
sub
nop
pop
into
xlat
mov
pop
es
sub
icebp
mov
add
pop
lret
adc
lds
movsb
imul
data16
leave
xor
hlt
add
fistpll
mov
push
sbb
jp
and
jb
mov
jne
not
adc
mov
pop
test
xchg
fists
add
je
mov
jp
and
scas
sti
mov
rorb
mov
clc
out
mov
add
jmp
pop
mov
aas
es
ret
lods
les
and
cwtl
loop
add
sbb
push
add
cltd
not
mov
xor
fmuls
and
or
add
or
lcall
add
repnz
mov
sub
es
sbb
scas
mov
scas
fldenv
shll
add
lea
fwait
add
aaa
xor
popf
sbb
sbb
add
js
cwtl
add
push
jecxz
mov
inc
push
jne
xchg
adc
lcall
cmpsb
or
lret
xchg
fbld
push
clc
hlt
push
mov
pop
jmp
mov
rcll
add
and
jmp
and
fiaddl
test
aam
shrl
mov
pop
hlt
out
cli
lds
lcall
cmp
mov
inc
inc
add
pop
sbb
cmpsl
shrb
aaa
jbe
fcomip
inc
add
add
mov
loope
scas
or
and
cmp
add
xchg
mov
popa
sbb
cmp
lods
fcoms
adc
repz
mov
mov
in
mov
xchg
sub
fldenv
jb
cmpsl
outsb
imul
xchg
adc
sub
jb
fistps
stc
pop
add
add
ja
rcr
ljmp
hlt
mov
or
add
add
push
cmp
arpl
mov
and
mov
mov
and
and
repnz
mov
dec
gs
movsl
stc
test
insb
push
cmpsl
out
pop
mov
ja
dec
in
push
mov
outsb
sbb
sub
nop
push
testb
mov
jno
in
add
jne
repnz
leave
add
jl
xchg
pusha
mov
adc
pop
adc
out
es
add
addb
addb
das
cs
inc
lock
fdivrs
div
popf
sbb
es
inc
jae
jmp
pop
sbb
rcll
das
cwtl
dec
ljmp
mov
in
mov
sahf
insl
sahf
jecxz
and
xlat
fiaddl
ss
ds
pop
mov
push
xor
and
jecxz
add
mov
and
push
lcall
add
icebp
movsl
xchg
not
jecxz
mov
repnz
out
add
or
xchg
add
pop
jns
adc
and
jns
push
pop
ljmp
cmpsl
add
imull
int
add
out
mov
fwait
movsb
push
add
in
enter
add
pop
add
push
fldenv
cld
rcrl
add
adcl
inc
xchg
iret
inc
cmpsb
sub
sahf
sub
lea
scas
ret
lea
xchg
pop
ret
jecxz
push
in
dec
add
jecxz
rcll
imulb
es
lahf
repnz
and
sub
jl
aam
ja
addb
ret
fnstcw
mov
sub
and
ret
ret
loopne
cmp
in
mov
xor
mov
mov
cmp
mov
outsb
adc
rol
mov
jl
pop
ds
out
sbb
push
sti
lahf
jb
adc
mov
pop
es
add
fbld
cmpsb
add
ja
cmp
xchg
jg
jb
add
sbb
movsb
mov
jbe
xorl
wrmsr
jg
xchg
mov
test
push
lock
dec
inc
stc
xor
sub
flds
mov
inc
add
dec
xorl
mov
pop
sbb
sub
mov
dec
or
xchg
mov
lods
bound
dec
int
aas
arpl
je
mov
addr16
cmp
cmpsb
push
sbb
std
dec
fildl
rcrl
cmp
inc
or
mov
adc
es
or
push
mov
lahf
js
add
add
sbb
mov
das
imul
add
add
in
or
adc
add
nop
dec
push
add
push
outsb
adc
fwait
xchg
push
ljmp
sbb
stos
sub
inc
push
mov
in
push
in
int3
cmp
sarl
inc
fwait
rorb
lea
lahf
sbb
jns
test
xor
loopne
fsub
jecxz
sbb
popf
in
add
iret
icebp
fdivs
mov
in
mov
cmovb
xlat
pop
imul
pop
dec
mov
ret
add
inc
ret
fs
xor
dec
xchg
jge
add
cmc
push
inc
mov
mov
pop
add
mov
cmc
add
arpl
stos
add
push
loop
adc
test
xor
cmp
cmp
or
mov
cmp
sbbl
lds
or
iret
push
test
pop
push
dec
lahf
insl
lds
aas
xchg
xor
xor
popa
xor
mov
mov
in
pop
je
hlt
out
fucomip
jnp
pop
icebp
or
subb
sbb
pusha
rcll
and
loop
in
xor
insl
leave
add
pop
and
mov
xchg
dec
add
pop
pop
repnz
ds
add
leave
xchg
mov
push
pushf
call
rclb
mov
push
dec
xchg
out
shrb
dec
push
ds
popf
loop
sub
cmc
std
jno
push
lock
outsb
sub
adc
inc
adc
rorl
jl
adc
sbb
rcrb
mov
add
pop
or
gs
cli
mov
call
add
sahf
sub
push
add
jbe
add
call
pop
mov
mov
aam
fcoms
sub
add
aam
xchg
and
pcmpgtw
push
gs
add
xor
cmp
mov
dec
add
arpl
lea
mov
sbb
call
sbb
cs
fwait
mov
lea
sub
ficoml
mulb
pop
repnz
stos
add
push
data16
fisttpl
testb
push
sbb
fnstenv
or
xchg
sti
mov
adc
lea
jp
cmp
js
add
sti
pushl
and
rclb
jbe
arpl
cmpsl
daa
loopne
ss
or
dec
or
pop
das
jp
sbb
dec
add
mov
adc
push
arpl
mov
loopne
jg
insl
pop
movsl
ljmp
dec
push
xorl
sarl
jge
adc
std
incl
xlat
push
out
loope
icebp
sbb
cmp
pop
loopne
mov
jae
xor
loopne
das
xchg
pop
scas
punpcklwd
cmp
cmp
jb
add
stc
mov
jno
sbb
and
add
iret
lock
stc
cld
sub
cld
inc
push
pushf
add
mov
movsl
add
xchg
andl
rol
add
arpl
lds
fiadds
call
add
xlat
push
sub
aad
mov
loope
mov
test
cmpsb
jle
pop
popf
mov
int3
ret
out
aad
add
xor
adc
lods
mov
inc
add
inc
lds
in
fmuls
push
stos
or
sub
dec
add
push
test
addb
pushf
sub
xor
push
xor
adc
movb
push
mov
arpl
out
dec
cli
aad
xchg
sub
rclb
fwait
or
dec
adc
xchg
and
ja
cli
subl
add
mov
jo
mov
cltd
and
pop
pusha
cltd
mov
cmc
xor
sbb
pusha
pop
push
mov
fldl
push
daa
mov
xor
ja
xor
fiadds
cwtl
sbb
scas
pop
fcmovu
pop
int
add
stos
repz
stos
lcall
inc
or
popf
add
xchg
add
inc
out
mov
or
cmpl
mov
fcmovnu
add
or
lods
vmovdqu
lahf
push
and
or
push
pop
jle
jae
push
in
or
out
inc
pop
sbb
and
test
dec
mov
call
fbstp
cmp
xlat
sbb
xor
jg
popl
fisttps
insb
rcrl
ljmp
sbb
inc
mov
add
loope
aam
es
dec
add
popf
mov
add
sub
sub
adc
xchg
push
sub
jle
inc
loope
filds
sbb
dec
mov
pop
add
jae
ret
ss
xchg
cmp
sbb
arpl
loope
repnz
dec
cmp
je
add
add
sbb
jbe
aad
and
lods
pop
lahf
jb
ljmp
adc
enter
cmc
les
lret
or
push
xor
sub
shrl
bound
pop
fs
push
xchg
add
adc
sub
or
sbb
and
into
inc
xchg
add
daa
add
leave
add
mov
pop
movsl
cltd
dec
xchg
cmpsb
insl
push
add
sbb
sub
sbb
fistpl
add
push
leave
dec
mov
lods
pop
pmulhw
xchg
les
ret
test
and
sbb
push
sarl
enter
add
ljmp
mov
nop
sti
icebp
leave
ja
subb
and
jg
les
push
mov
add
and
subl
adc
data16
xchg
cli
add
fldl
cli
das
ret
int
push
cmp
and
stc
out
jle
call
jl
sub
mov
shrl
insl
lret
mov
push
or
add
ficompl
movsb
aam
push
xchg
les
lds
ja
rclb
mov
rcrb
in
insb
xchg
sti
iret
mov
push
add
xchg
jge
mov
or
daa
or
sub
jnp
add
lret
or
repnz
mov
call
ffree
add
iret
repnz
gs
xor
pop
test
popf
movsl
cli
in
jg
ss
cmp
rcrb
xchg
lds
out
push
sub
sahf
cmpsl
xchg
cltd
mov
push
adc
lods
fisttps
push
add
cwtl
xchg
add
add
rcl
mov
call
add
push
inc
adc
fbstp
aam
sbbl
lret
jecxz
inc
mov
mov
test
add
addr16
xchg
pop
pop
cmp
dec
xor
jp
cmpsb
rsqrtps
lea
and
push
add
add
add
jne
lcall
pop
imul
sub
pop
pop
or
add
add
test
and
popf
stos
sub
sbb
scas
pop
add
adc
jge
jo
into
push
jl
adc
jne
mov
inc
add
add
jg
sub
imul
lahf
loop
and
loop
inc
push
mov
sub
outsl
inc
xchg
add
inc
cld
xor
cwtl
gs
xor
ja,pn
add
push
or
jno
icebp
sbb
and
or
adc
cmp
mov
pusha
mov
lds
add
or
add
inc
call
out
sub
fistl
xchg
sub
add
fsubl
arpl
mov
lret
pop
and
pop
int3
jmp
sbb
mov
flds
add
push
daa
std
jp
adc
jle
pushf
inc
xchg
jmp
stos
and
dec
ss
in
fs
inc
add
cltd
je
add
cmp
jb
push
pop
fdivrs
or
push
mov
test
fisubl
sbb
add
adc
add
jns
pop
roll
nop
inc
xchg
add
push
add
and
dec
dec
jne
lods
push
aam
mov
mov
fs
add
sbb
or
test
ljmp
sbb
rcrb
pop
cmp
dec
cs
jp
rcr
out
mov
add
or
lods
out
int3
aad
push
cs
ret
sarl
loope
sub
push
mov
and
pop
bnd
inc
stc
sub
xor
mov
add
scas
and
pop
push
shl
xchg
add
aaa
mov
nop
dec
pop
inc
faddl
add
jl,pn
cmpsb
mov
or
add
mov
lret
add
fpatan
jo
cmp
sbb
push
ljmp
push
clc
addl
add
das
sarl
int3
scas
or
sbb
aaa
jle
jl
test
rorb
outsl
inc
lcall
cli
add
pop
xchg
iret
int3
xor
mov
sub
gs
cltd
add
add
jne
repz
and
and
mov
mov
and
xor
add
data16
in
dec
add
aad
mov
std
xchg
inc
pop
lods
std
push
daa
sbb
jo
mov
in
cltd
add
sub
mov
xor
lods
pop
add
adc
punpckhdq
ret
pop
js
insb
cmc
mov
ljmp
into
movb
jnp
push
inc
imul
faddp
or
pushf
push
sub
gs
sub
mov
movsl
inc
sbb
repnz
sbb
out
ss
call
je
cld
sub
add
add
pop
call
ljmp
ret
inc
add
add
xor
mov
fnstsw
adc
mov
rorl
inc
mov
lret
lods
mov
sbb
mul
and
sbb
test
dec
pusha
add
xlat
add
call
jge
jle
xchg
add
xchg
arpl
dec
pop
mov
push
lahf
xor
outsb
jnp
add
or
popf
test
fdivl
add
pushf
int
lea
xchg
dec
inc
out
seta
jge
add
push
add
rcl
jbe
lcall
ljmp
sub
pop
xchg
add
jnp
cmp
shl
addr16
xchg
cltd
std
and
push
add
pop
mov
xchg
mov
xchg
fdivrl
loop
outsl
repnz
mov
flds
outsb
lcallw
hlt
movsl
cld
or
sbb
les
add
popf
mov
out
add
lcall
jecxz
xor
int3
jnp
sbb
fs
push
xor
mov
add
ret
clc
out
shr
shl
cld
add
add
je
xor
adc
xchg
add
pop
and
inc
sbb
loope
scas
std
cld
imul
mov
push
sub
jmp
add
frstor
add
xchg
add
pop
jbe
inc
sub
jp
jg
push
mov
je
add
cmp
push
push
sbb
pop
aas
pop
cld
shl
add
and
cmpsb
sub
insb
loop
notl
insb
or
adc
pop
in
pop
scas
dec
loop
adc
in
pop
incl
cmp
pop
sbb
push
add
dec
decb
push
add
jo
push
dec
iret
jae
addb
icebp
dec
ret
imulb
add
cs
fcoms
mov
add
and
ljmp
cmp
push
imul
adc
sub
fnsaves
add
add
mov
pop
mov
int3
jl
hlt
add
add
call
sub
cwtd
push
fnstenv
outsb
push
stc
lret
out
inc
fimull
inc
aaa
xchg
push
in
xchg
xchg
add
and
cld
into
pop
cld
mov
or
ret
outsl
fdivs
repnz
jo
loopne
mov
and
data16
add
xchg
pop
pop
add
add
cmp
je
xor
out
add
aas
cmp
into
negb
in
jo
mov
les
add
pop
scas
jae
ja
mov
orl
sub
jge
stc
add
rorb
add
mov
arpl
jecxz
lret
mov
sbb
add
loopne
mov
mov
mov
out
cmc
add
xor
bound
jnp
int3
sbb
in
xchg
stos
ficoms
xchg
push
xchg
pusha
dec
decb
fldenv
cld
scas
or
add
mov
stc
cmp
les
mov
mov
xchg
sub
into
add
xlat
pop
jp
pcmpgtw
jge
filds
push
pop
call
ljmp
movsl
push
push
fsubp
ljmp
sub
cmp
sub
cmpb
sarl
int
aas
imul
shll
in
and
mov
out
push
enter
loopne
imul
out
push
mov
mov
lea
jmp
dec
mov
add
pushf
jp
fildl
add
mov
add
fnstsw
bound
jecxz
aaa
xchg
aad
bsr
je
inc
push
add
jns
add
cmpsb
add
jo
lahf
neg
and
cltd
add
xchg
xchg
sbb
mov
add
cmpsl
in
pop
dec
shlb
bound
popf
xor
gs
xor
mov
add
pop
icebp
dec
and
cmpsb
aaa
lea
fwait
push
inc
xorl
icebp
sub
push
imul
test
push
sbb
sub
or
mov
lret
dec
clc
mov
aas
sub
pop
jl
ss
je
je
adc
sti
jle
dec
jl
dec
inc
negb
mov
sbb
xchg
outsl
mov
popa
push
pushf
mov
negb
sbb
mov
ret
lret
sub
adc
jmp
loopne
inc
icebp
mov
add
enter
loope
push
lahf
jecxz
or
fiaddl
jne
push
pop
add
jecxz
mov
inc
mov
cs
push
shrl
dec
movsl
xlat
fbld
ss
enter
ss
ret
imull
mov
jnp
cmp
inc
dec
mov
xlat
dec
mov
dec
mov
ficomps
mov
xlat
jmp
mov
pop
xor
add
xchg
sub
add
add
or
stc
xchg
test
mov
in
xchg
int
or
mov
fs
rclb
and
call
add
add
pop
mov
or
test
mov
push
daa
cmp
push
test
sahf
and
outsb
lds
loopne
insl
das
mov
das
movsb
data16
pop
mov
or
mov
mov
sub
add
add
loopne
and
and
xchg
int
stc
push
inc
lret
push
mov
mov
and
lret
cmp
add
cmp
adc
dec
xor
imul
add
or
ficoms
outsb
cmp
mov
dec
loope
add
cltd
mov
clc
lea
sbb
push
shlb
jns
pop
mov
mov
movsb
stos
out
or
adc
pusha
xchg
and
or
mov
mov
xchg
jb
add
jle
test
pop
pop
mov
stos
mov
aaa
test
call
add
test
rcr
jae
cmc
push
in
add
rcl
pop
outsb
add
push
loope
jg
dec
push
scas
inc
je
rcr
fldcw
add
sub
imul
push
cmpb
testb
les
and
jecxz
add
call
mov
dec
in
xchg
cmp
xchg
test
cs
lcall
add
ja
icebp
jle
push
mov
pop
add
fistpll
cmpsl
jmp
cmp
fisubrs
inc
and
and
ret
dec
and
ljmp
push
add
jne
cmp
das
mov
add
pushf
aam
jmp
sbb
imul
cmp
xchg
sub
aas
inc
mov
push
xchg
push
pop
testl
lahf
pop
add
jmp
sub
xlat
mov
add
add
fistps
sahf
lea
ss
sahf
daa
add
movsl
add
pushl
pushl
loopne
ret
add
mov
mov
push
mov
out
ret
nop
add
add
add
pop
mov
or
push
gs
push
aam
pslld
lret
sub
add
push
addr16
add
test
imul
in
leave
rcrl
mov
es
dec
or
pop
ret
cmpsl
push
inc
shlb
or
fcomps
add
mov
jle
inc
inc
in
mov
cli
sbb
add
jbe
js
in
movsl
je
xchg
ret
sbb
int3
iret
out
add
or
inc
mov
stos
out
popa
in
js
sbb
movsb
add
sbb
cmp
mov
int
adc
jbe
add
je
jo
pop
lods
leave
test
into
xchg
test
adc
pop
xchg
cmp
daa
inc
mov
add
sbb
dec
inc
popf
add
jnp
test
roll
or
mov
repnz
inc
fisttpll
mov
push
mov
xor
js
outsl
jns
sbb
fcoml
add
mov
xor
in
add
adc
jecxz
call
ja
add
movsb
aam
je
add
mov
and
jl
and
adc
and
inc
roll
outsl
mov
xor
dec
cmc
pop
push
test
dec
fiadds
sti
pop
push
mov
rolb
mov
pusha
add
loop
stos
fbld
lock
add
sub
mov
xor
pushf
fiadds
cwtl
and
push
sub
push
mov
mov
test
loop
jne
jl
jns
movsl
movsb
cmp
leave
adcb
insb
cltd
test
mov
mov
cmp
lea
mov
push
inc
mov
dec
stos
pop
mov
je
je
fsubrs
xchg
mov
add
cmpsl
aas
xlat
push
add
mov
popa
xchg
lret
mov
xor
add
inc
dec
lods
das
mov
movnti
iret
icebp
lds
fxam
outsb
hlt
add
ret
xor
pop
lods
add
bound
jle
ss
enter
rorl
sbb
cmpl
push
mov
mov
out
movb
scas
mov
lcall
mov
xchg
mov
dec
add
mov
push
ss
jl
leave
fldl
out
push
or
sbb
js
mov
xor
mov
lea
imul
stos
and
pop
add
pop
jg
inc
dec
adc
fisubl
inc
add
adc
add
stc
enter
add
ja
fdivl
push
cmp
sbb
pop
jb
aam
jmp
add
shrl
xchg
lods
inc
jecxz
hlt
mov
push
cwtl
je
out
push
imul
push
mov
push
cld
sbb
and
addl
outsl
outsb
push
mov
add
mov
sbb
mov
imul
add
xchg
push
imul
scas
mov
add
add
call
sarb
cmp
bound
cmp
sbb
and
loope
dec
cli
arpl
lahf
packsswb
pushf
rep
out
scas
jmp
jo
out
and
add
inc
jg
ret
jl
nop
aas
dec
cmpw
adc
xchg
cmp
xor
je
outsl
xchg
push
add
lods
add
sub
mov
inc
mov
outsl
adc
outsl
gs
fbstp
out
notl
shrb
stc
mulb
jmp
cmpsl
xchg
fs
fs
add
sbb
push
test
das
add
jb
cmp
hlt
je
inc
sbbb
add
imul
mov
sub
push
adc
jp
add
sub
les
bnd
mov
imul
divb
pop
push
inc
mov
dec
test
add
xor
divl
mov
inc
and
daa
fdivp
cmpsl
xchg
scas
je
xchg
fisubrl
mov
or
aad
jae
jl
add
cmp
adc
in
pop
push
jno
xchg
mov
cmpsb
and
pop
sbb
lea
dec
ficoml
movl
out
test
add
mov
mov
decl
pusha
pusha
jns
sbb
cwtl
sub
imul
mov
insl
jbe
and
sbb
pusha
out
loope
mov
xchg
aad
dec
arpl
rclb
add
stc
add
lcall
hlt
adc
add
incb
sbb
add
dec
cld
inc
mov
and
inc
push
push
or
idivl
fistl
fisubl
inc
mov
test
cmp
pop
cmp
cmp
dec
pop
mov
mov
xchg
xor
xchg
xchg
mov
pop
out
cmp
rcrb
subl
mov
movl
xor
fsubs
rol
and
lret
lds
outsl
cmp
jns
sub
test
lock
jg
call
hlt
add
cmp
sub
roll
add
stos
and
es
sbb
push
add
ljmp
push
adc
pop
fadds
add
repz
imul
add
je
insl
data16
rcrl
add
popf
fs
jp
jle
xlat
je
in
jne
jl
int
sti
pop
sti
les
xlat
add
test
cmc
insl
je
test
and
loopne
fcmovne
dec
pushf
push
in
mov
mov
xchg
aam
add
dec
test
mov
rolb
imul
cwtl
push
movsb
in
mov
add
mov
inc
sub
iret
add
add
mov
or
inc
add
sub
add
loop
xor
add
add
rcrl
add
add
stos
sub
or
pop
adc
dec
add
movb
fsubr
stos
xchg
sub
bound
call
test
lret
dec
or
sub
jae
jae
mov
jb
push
push
sbb
add
xchg
popa
adc
sub
repz
push
jne
leave
mov
mov
mov
add
add
cmp
aad
add
leave
orl
mov
aad
repnz
loope
cmpsb
roll
add
sarb
repz
push
mov
out
pop
addr16
jge
int
add
push
cs
lcall
cwtl
pop
and
xor
dec
addr16
xchg
jl
xchg
fs
xor
imul
inc
mov
sub
mov
pushf
out
leave
push
hlt
mov
mov
test
sub
push
andb
sbb
dec
insl
xchg
or
inc
roll
and
fildl
iret
jecxz
bound
or
mov
jmp
loope
xorl
and
or
mov
in
add
add
out
in
or
sub
lods
push
outsl
notb
inc
xor
add
call
mov
xor
gs
stc
add
hlt
enter
mov
insb
lret
enter
sbb
stos
pop
gs
inc
add
or
add
pop
fstpl
iret
js
addr16
sub
inc
cmp
int3
xchg
mov
and
cmp
loopne
insl
jb
inc
pop
mov
push
dec
cmc
je
pop
repz
in
mov
loope
lcall
add
addb
test
push
jmp
sub
vcvttss2si
jl
dec
add
add
dec
outsl
or
push
shll
lock
add
scas
add
jnp
imul
leave
and
imul
add
leave
out
mov
lcall
dec
xchg
lahf
mov
cltd
sub
and
incb
add
dec
cmp
jno
pcmpeqb
cmp
shll
xor
daa
movsb
jne
and
subb
rcrl
dec
gs
xlat
leave
sbb
mov
mov
cmp
pop
mov
adc
jg
xor
arpl
push
mov
mov
jmp
xor
outsb
jb
or
dec
sbb
pop
push
rolb
cmp
sbb
repz
pop
rcrl
iret
xchg
or
xchg
ret
lds
lock
inc
arpl
fadds
cmpsb
add
cmp
fiadds
cs
add
adc
int
inc
xchg
loopew
hlt
push
mov
sahf
push
and
lahf
mov
mov
pop
add
sub
imul
xor
mov
sub
fdivrl
rorb
pusha
int
jo
mov
mov
addr16
or
scas
jp
add
in
add
mov
lods
call
test
push
scas
adc
add
mov
mov
sar
mov
movsl
or
test
movl
and
lea
repnz
pop
insb
add
xchg
dec
add
fdivl
sbb
jae
rcll
mov
add
sub
popa
cld
mov
cld
into
mov
call
call
jg
mov
inc
aad
mov
mov
insb
rcrb
hlt
and
movsl
ret
fidivrl
add
mov
loope
add
inc
add
mov
inc
mov
dec
add
mov
push
and
aaa
cmp
cmpsb
js
or
or
mov
in
sub
repnz
bound
push
mov
mov
adc
mov
inc
xor
aaa
push
imul
add
push
add
int
addr16
and
dec
call
negb
xor
mov
add
inc
and
insb
mov
ds
stc
pop
imul
xor
jno
pop
rcrb
add
mov
mov
inc
stos
add
jne
fildll
arpl
inc
insl
fstpt
ret
sbb
jno
jb
fisttpll
inc
inc
addl
add
mov
nop
jmp
loop
jp
add
mov
xor
add
push
scas
add
mov
mov
mov
add
cmp
adc
add
xchg
or
sbb
inc
fucomi
lret
out
imul
pop
gs
ja
xchg
mov
mov
and
inc
jne
cwtl
add
outsb
cld
and
cld
push
pop
push
xchg
add
addb
or
push
iret
in
rcrb
loope
sbb
lret
xor
lcall
stos
loop
fcoms
push
xor
test
xorl
add
add
xor
jp
jge
cli
mov
push
and
mov
into
inc
sub
in
aaa
pushf
mov
xchg
push
mov
outsb
sti
lcall
jp
lods
xchg
sub
sbb
out
jae
sbb
pop
add
cmp
call
lret
js
ljmp
fwait
imul
cmpsl
jge
out
inc
insb
mov
mov
sbb
mov
insl
xchg
popa
mov
negl
int
repz
add
inc
inc
dec
jle
add
push
or
cmpsl
add
add
push
shrl
adc
add
jmp
int
add
out
inc
add
push
mov
nop
jecxz
dec
or
cld
dec
cmp
in
cmp
add
add
lea
in
cmpsl
xlat
out
jg
ja
iret
fsubl
fcmovbe
pop
jno
fisttpll
add
aas
pop
push
jo
jo
cmp
mov
test
jo
mov
jns
je
add
add
lock
gs
jmp
sti
add
in
xor
xchg
ds
adc
fadds
lods
stos
iret
insb
inc
test
into
or
jbe
cmp
push
xchg
add
and
xchg
outsb
push
pop
ja
movsb
arpl
push
mov
addl
push
xchg
xchg
add
or
xor
popf
cltd
aam
jle
pushf
xchg
jnp
out
xchg
paddsw
mov
sbb
fst
data16
jle
add
cld
iret
add
and
add
push
add
popl
add
or
jb
xchg
add
lds
xor
dec
popf
jne
dec
sub
cmpsl
mov
add
add
push
pop
out
test
andl
push
stos
nop
out
sub
pop
sbb
sbb
add
or
add
mov
fstpl
sahf
mov
inc
inc
dec
shlb
fildl
mov
add
push
stc
push
add
jns
xchg
popa
push
into
sub
mov
inc
into
data16
call
aam
int
pop
pop
outsb
pop
push
insl
pop
push
push
mov
mov
add
mov
enter
add
sub
clc
sbb
add
dec
lar
inc
mov
inc
cmc
push
notb
in
testl
mov
mov
les
add
xchg
dec
fnstsw
sbb
addb
xor
fildll
mov
sub
mov
lock
xlat
add
jmp
repnz
add
pop
add
shll
shl
pop
ljmp
lea
xchg
sub
inc
push
jecxz
mov
add
mov
xchg
in
pop
xlat
cmc
icebp
in
jnp
cmp
mov
ds
fcoml
cmpsb
inc
fmull
and
aas
nop
loopne
push
lock
push
cli
push
aad
mov
outsb
sbb
cmp
sub
mov
sbb
popa
push
sub
lods
add
add
or
enter
add
popa
xlat
add
cwtl
out
subb
cmpsl
fsubp
out
add
inc
add
mov
ficomps
dec
sub
ret
jecxz
xor
sbb
xlat
inc
fnstcw
jne
add
add
jnp
xchg
jo
test
sbb
mov
pop
das
push
lods
cmp
push
rorl
lea
pop
jg
ficompl
add
sub
inc
jae
lret
pop
sub
cltd
gs
or
mov
aas
mov
sub
popa
dec
add
jle
mov
xchg
pop
cwtl
fildll
das
xchg
adc
ja
ret
stos
and
out
inc
fsubrp
sbb
push
stos
pop
sbb
add
scas
add
mov
or
adcb
scas
mov
and
dec
mov
mov
add
popf
push
fwait
and
add
cmp
inc
fcmove
mov
add
adc
push
push
cmp
mov
cmp
sub
mov
inc
adc
fimuls
inc
or
add
add
cmpsb
add
ret
add
out
fstpt
rcl
ja
mov
add
jp
cmpsl
mov
loop
scas
add
arpl
int3
xor
es
addr16
testl
hlt
xor
ss
cmp
adc
add
sub
pavgw
dec
in
into
mov
dec
xchg
add
inc
popa
add
push
rol
xchg
dec
adc
insb
jne
or
in
dec
test
out
mov
icebp
repnz
and
test
add
push
or
in
fbld
das
cmpsl
or
sbb
insl
add
mov
incl
outsb
das
add
jns
jp
and
pop
cmp
maskmovq
ds
mov
or
rcrb
cmp
add
add
dec
add
outsb
mov
inc
push
fisubl
inc
sbb
cmpb
add
mov
xchg
es
out
cmp
outsl
xor
int
aam
rclb
inc
pop
xor
lahf
xchg
cmovle
arpl
push
sub
ds
out
scas
cltd
adc
dec
int3
hlt
cli
xor
xor
dec
or
pop
repnz
mov
add
insl
add
rorl
cs
divb
push
popa
add
adc
adcl
imul
enter
lret
popa
pop
fldt
push
jbe
fildll
test
cwtl
insb
addl
pusha
sub
das
add
movsb
pop
or
adc
push
in
jg
jb
hlt
adc
ret
add
inc
fwait
inc
les
mov
jl
fidivrl
fcomps
cs
or
adc
cmp
je
icebp
bound
add
add
mov
cmp
shlb
int3
loope
lcall
mov
setp
mov
insl
cmpsl
add
test
xor
add
jnp
aas
add
add
sbbb
add
add
in
add
inc
or
div
ljmp
scas
mov
inc
shr
add
inc
aam
add
add
mov
rolb
mov
jns
and
rcrb
sbb
ss
subb
pop
xchg
loop
lret
add
add
and
xchg
push
add
jmp
cmp
mov
cli
repz
hlt
push
add
leave
fadds
jbe
out
imul
add
mov
scas
mov
add
outsb
out
jb
mov
mov
das
test
clc
sub
je
in
lods
add
inc
inc
scas
mov
mov
jg
test
in
xchg
pop
pusha
daa
das
fwait
and
insl
and
push
adc
and
add
add
out
mov
adc
mov
insl
pop
inc
aas
xchg
mov
fistpll
push
add
jns
repnz
adc
mov
mov
call
lahf
add
xlat
test
into
inc
data16
add
insl
xor
movsb
je
das
inc
cmp
ds
dec
add
mov
sub
icebp
fldcw
test
and
add
jl
out
xor
fcomps
lret
or
dec
add
lahf
push
jbe
leave
subb
cmp
jge
ja
ror
xchg
sbb
push
repnz
xchg
in
mov
rcrb
dec
jle
sarl
loope
mov
fisubrs
sarl
xchg
pop
aam
sar
mov
sbb
sbb
addl
inc
int
xchg
jg
cmp
mov
mov
xchg
add
adc
pop
das
lods
add
pop
test
cli
divb
add
andl
int
rcll
add
xor
add
mov
push
in
or
je
punpcklwd
add
sub
pop
popa
cli
int3
adc
inc
sbb
pop
add
mov
adc
push
lea
leave
and
dec
mov
mov
fs
or
out
or
sbb
in
cmp
stc
jno
inc
jmp
cmp
inc
dec
add
jbe
repnz
cmp
sbb
add
xor
xor
add
and
mov
lret
add
sbb
out
mov
sti
decb
jne
jnp
xchg
push
xlat
add
aas
sahf
xchg
fldt
jge
mov
sbb
mov
pop
aam
adc
add
lahf
push
adc
les
cmpsl
jno
shrb
sub
sarl
scas
mov
push
ret
das
test
xor
nop
mov
push
add
inc
sbb
cmpsl
lock
sub
add
stc
sbb
jbe
fcomi
ret
aas
adc
dec
inc
mov
jb
mov
inc
cmpsb
adc
lcall
in
shll
call
add
mov
dec
mov
mov
icebp
add
mov
mov
orl
add
orb
cmp
stos
gs
pop
inc
andb
add
and
xchg
mov
inc
add
or
lret
jmp
jg
mov
out
push
movsb
add
add
lcall
jmp
addr16
sub
aaa
fbstp
inc
testb
fcmovbe
pop
xchg
xor
mov
mov
xchg
cmp
fdivrs
xchg
cmp
xchg
decl
add
add
fmull
push
fdivrp
add
mov
dec
add
add
pop
sub
ss
mov
call
mov
fnstcw
sub
adc
in
lock
andb
mov
aaa
mov
cmovae
lods
add
xor
repz
fcomps
stc
add
ret
cmpsb
mov
lods
loope
mov
mov
add
push
push
test
out
or
mov
push
push
cmp
mov
insl
add
add
xchg
add
add
cltd
add
mov
cmpsl
xor
mov
push
int
movl
fidivl
stos
adcb
mov
add
cs
arpl
out
dec
jl
mov
adc
cwtl
pop
mov
notl
jl
mov
jecxz
sbb
call
cmp
adc
sbb
cmp
cmc
pop
andb
mov
cmpsb
fwait
cmc
lods
add
lods
push
in
add
push
add
mov
lds
stos
xchg
fwait
or
std
shrb
clc
add
mov
pop
aam
cmc
pop
mov
loop
shl
in
add
xchg
jl
push
jg
std
add
and
test
pushf
incb
pushl
jnp
loopne
addb
aad
jns
add
and
ljmp
test
loope
call
jg
xchg
adc
jl
cs
js
pushf
and
add
mov
rorb
and
dec
je
shll
pop
pop
mov
pusha
pop
or
mov
inc
mov
push
inc
add
add
popf
data16
jle
push
and
pop
imul
stos
repnz
ror
cmp
dec
daa
sbb
scas
push
leave
dec
jg
into
fcomps
mov
stos
ficomps
pop
xor
stc
cmpsl
je
add
adc
mov
push
aaa
unpcklps
push
add
lock
inc
test
ret
add
dec
mov
int
es
pop
js
mov
mov
movsl
pop
and
addr16
mov
sbb
mov
roll
les
mull
mov
orb
dec
notl
add
and
sar
fimull
loopne
push
sarb
add
addb
out
inc
rolb
pop
and
mul
jo
xchg
and
push
mov
clc
sbbb
pop
mov
or
fld
add
mov
jp
add
repnz
cmp
add
and
in
pop
add
xorps
aad
sbb
or
xchg
add
stos
mov
cwtl
test
into
add
xchg
mov
jb
adc
cmovne
fwait
mov
enter
jp
or
pop
add
push
fimull
push
add
arpl
adc
das
mov
test
mov
lret
add
icebp
cmp
pusha
and
add
mov
xor
aad
add
xchg
lcall
add
cld
fstpl
cmp
inc
js
xchg
add
dec
add
add
rcll
les
mov
std
int3
push
push
add
push
fdivl
leave
xchg
lds
cmp
jg
ret
jecxz
in
insl
push
sub
scas
add
int
addr16
push
test
lea
mov
lret
xchg
es
or
das
mov
lret
rclb
mov
mov
ja
clc
sbb
js
sbb
dec
jae
push
xor
mov
stc
hlt
add
add
movsb
inc
mov
xchg
xlat
in
mov
mov
movsl
cmp
lahf
ds
pop
xchg
fstpl
push
cmp
psllq
into
lret
cmpsb
imul
sarb
insb
shl
dec
or
loop
out
aas
sub
testl
lods
es
adc
les
je
aaa
and
aaa
push
jmp
mov
cmp
adc
add
add
add
popf
pop
ja
pop
add
xchg
mov
sub
fnsave
hlt
sub
adc
sahf
cmp
orl
cmp
fistpll
bound
or
pop
in
into
int
xchg
stos
daa
mov
aad
xchg
push
lea
fcoml
sbb
mov
add
je
sub
repnz
lods
adc
xchg
xchg
or
add
xor
and
push
adc
add
loop
dec
cmpsl
add
int
mov
leave
aas
inc
arpl
add
les
inc
faddl
fs
xchg
fwait
aas
outsb
into
repz
sub
ja
movsb
lcall
inc
sub
ss
inc
add
dec
inc
imul
push
pop
add
push
cld
push
mov
hlt
or
or
stos
pop
sub
pop
rolb
mov
repz
mov
sub
sub
and
inc
outsb
popf
loope
xor
les
outsb
stos
xchg
add
stc
cmp
add
and
jl
push
xchg
mov
mov
fs
sub
push
xor
or
push
jbe
xchg
sub
das
cs
movsl
xchg
aam
incb
leave
cmp
add
add
inc
dec
and
xchg
dec
pushl
sub
add
insb
and
pop
adc
add
add
mov
pop
pop
cli
jns
xchg
insl
js
add
and
push
daa
xchg
das
adc
add
test
shrl
bound
xchg
xor
test
stos
mov
dec
add
lret
jb
sub
cmp
jp
dec
clc
mov
mov
lods
cmp
adc
js
mov
jne
push
and
or
and
push
xchg
cmc
mov
add
jnp
sub
test
scas
adc
aad
fstpt
jl
popf
jne
xchg
scas
add
inc
cmp
add
adc
pop
fcompl
push
ret
mov
mov
rcl
test
call
adc
jae
sub
sahf
ss
cltd
mov
hlt
lds
pushf
hlt
and
mov
int
clc
repz
aam
shrl
ret
aad
test
add
mov
movb
mov
xor
mov
fwait
jns
rolb
add
pop
inc
xor
fisubs
pop
scas
and
imul
push
mov
inc
push
fcomip
test
or
icebp
pop
pop
out
add
push
xor
push
dec
insb
xchg
add
push
add
out
lock
test
rcll
jno
loope
xor
ss
sahf
pop
int3
jbe
add
mov
movsl
fisttps
cmp
in
pop
movsl
int
arpl
add
sub
cld
inc
xchg
test
out
and
jg
cmp
es
add
repz
cld
popf
cld
pop
andb
xor
push
mov
or
mov
sbb
sahf
add
add
imul
xchg
xchg
add
mov
hlt
adc
mov
leave
jp
mov
mov
int3
scas
in
lods
and
or
xchg
inc
pusha
sub
loopne
cmp
xor
pop
out
stos
or
xchg
cmc
jne
add
call
aad
mov
mov
mov
mov
adc
cld
adc
push
mov
mov
inc
cmp
into
xlat
dec
mov
call
add
xlat
repz
rcrl
icebp
dec
insl
dec
movsb
xchg
xor
sub
lods
xor
and
rorl
adc
pop
mov
popf
enter
gs
adc
or
movsb
xor
int
and
lcall
insb
std
test
addl
push
xchg
mov
fdivl
sarb
repz
push
sbb
nop
cmp
ret
repnz
pushw
mov
iret
inc
mov
popa
add
test
mov
jns
sbb
sub
into
pushf
in
stos
pop
dec
js
cmc
mov
bound
mov
mov
mov
fiadds
mov
cmc
es
addl
xchg
divl
adc
leave
add
add
pop
inc
sbb
push
subl
sbb
push
cmpsl
add
cmp
or
add
add
sub
lea
sarl
aad
test
imul
roll
add
roll
in
xchg
sbb
roll
stos
jge
inc
mov
sbb
sti
loop
pop
pop
daa
fcmovu
adc
arpl
inc
add
mov
insl
mov
lret
add
sahf
testl
push
pop
xchg
mov
pop
repnz
fstl
push
mov
push
stos
push
jns
add
cmp
adc
repz
cmp
mov
movsl
xchg
push
add
movl
das
lea
xor
mov
loop
add
pop
addl
pop
and
add
jg
xchg
or
xchg
outsl
add
sub
enter
out
and
loop
inc
or
fisubrs
lcall
jns
add
cmc
es
sub
pushf
aas
dec
ja
jle
xor
push
rolb
xchg
loopne
inc
rclb
add
mov
movl
add
push
in
cmc
xor
inc
add
mov
jo
cmpsl
negl
mov
dec
mov
xchg
cmp
mov
pop
xchg
adc
sbb
add
sbb
test
movsb
int
jbe
hlt
aaa
sbb
xchg
add
add
lods
adc
dec
xor
add
or
or
jbe
add
push
mov
ja
dec
rolb
stos
into
into
and
hlt
or
incl
cltd
xlat
cmp
lods
mov
lods
aaa
std
fistpll
push
and
xlat
decb
hlt
jl
rorb
stos
xorb
rep
jns
pop
pop
sbb
push
lret
and
scas
das
ss
jg
aam
sub
jmp
daa
mov
add
add
jb
add
add
jp
sahf
mov
add
mov
add
cld
jl
nop
into
loope
inc
mov
add
test
mov
mov
in
in
sbb
mov
add
mov
nop
incl
cmc
sahf
inc
popa
and
dec
jns
adc
xor
or
cwtl
cmp
mov
cli
add
popl
xchg
je
xchg
mov
adc
call
iret
adc
mov
xchg
divl
dec
and
pop
mov
aam
add
gs
mov
sub
hlt
push
add
scas
sbb
add
sbb
sub
lahf
cs
iret
in
rorl
outsl
jp
ja
push
in
aas
stc
push
mov
xorb
repz
add
cmp
sbb
mov
xchg
mov
add
dec
cltd
test
aam
imul
outsl
push
inc
add
add
mov
sub
add
mov
ja
push
lahf
cltd
push
in
jmp
xor
and
setnp
add
adc
out
mov
fbstp
js
in
dec
add
mov
push
push
cwtl
add
mov
push
mov
cmp
aaa
pop
rorl
add
repnz
xorb
xor
jbe
sub
out
pop
nop
add
sub
lahf
mov
xchg
xchg
add
cmpsb
loopne
or
ret
xlat
inc
std
cmp
aam
add
pop
fnstsw
mov
cmp
pushf
ja
divb
xor
cmpsl
and
shrb
fcompl
icebp
or
sbb
arpl
dec
mov
lret
loopne
repnz
or
pop
ja
jns
mov
popf
in
add
int
pop
lds
mov
sub
imul
jb
ffree
clc
jge
add
mov
jecxz
dec
jbe
cmpsl
add
cli
sub
sub
mov
dec
adc
cmpsb
inc
xchg
aaa
roll
dec
rorl
dec
cmp
push
dec
xor
cmp
add
adc
mov
add
rorb
lock
mov
add
call
or
adc
mov
ja
dec
add
in
inc
ret
and
push
fbstp
push
mov
insl
ffreep
mov
adc
in
sub
les
mov
pop
sub
add
pusha
xchg
ljmp
dec
jmp
fwait
mov
les
les
outsb
cmp
push
cli
nop
and
cmc
adc
mov
leave
push
adc
data16
cs
cmp
sti
rolb
inc
in
add
sbb
jne
or
mov
cs
xor
jmp
jbe
int3
popa
jge,pn
arpl
mov
dec
sbb
adc
sahf
mov
add
xchg
sahf
fldl
sub
inc
or
add
mov
lret
pop
icebp
lret
fstpl
sub
pusha
in
mov
das
add
xor
fnstenv
das
cmp
or
adc
and
adcb
and
sub
pop
mov
add
xor
push
push
fs
add
lea
xchg
loope
pop
daa
cld
ret
push
push
push
hlt
std
cmc
test
jns
dec
pop
mov
movsl
insl
es
mov
cld
and
mov
mov
jbe
cmpsb
jne
xlat
pop
pop
sahf
out
shll
sti
pop
jno
aaa
movsb
push
dec
or
dec
pop
xchg
arpl
repnz
int3
mov
dec
dec
imul
mov
sbb
inc
add
scas
xlat
add
mov
in
in
movb
sbb
adc
xor
test
sarl
dec
cmp
aas
shl
add
jo
out
inc
add
ret
xor
outsl
add
leave
call
add
push
add
inc
adc
arpl
mov
insb
shll
xor
dec
test
loope
insl
lods
and
sbb
std
cmp
rclb
mov
out
mov
mov
mov
add
int
push
add
loopne
jb
and
mov
cmp
xor
cmp
sub
rcr
add
stos
fcompl
lret
sbb
cmp
dec
mov
lea
filds
sbb
popf
fsubrs
cmpsl
mov
add
pushf
ficompl
sbb
loope
lods
mov
shll
mov
mov
scas
xchg
mov
pop
scas
popf
add
cs
push
add
cmp
add
inc
add
dec
inc
adc
fadds
outsl
outsb
mov
negb
add
mov
ljmp
jne
add
mov
scas
iret
xor
stos
add
mov
sbb
jge
add
out
xchg
ja
test
mov
movsl
push
adc
imul
pop
mov
sarb
out
add
xchg
in
mov
gs
push
inc
mov
mov
pop
mov
xor
verr
cmpsb
push
stos
out
out
loopne
cmpsb
incb
push
add
push
test
jge
mov
inc
test
iret
fdivs
adc
add
stc
or
mov
adc
add
lahf
sub
scas
hlt
add
cs
pop
sar
test
add
loop
idivl
cmp
in
and
jl
xor
cmpsl
call
lock
fsubr
frstor
jo
mov
cmp
jnp
cmp
push
rcll
or
add
sbbl
cltd
rclb
cwtl
xchg
aas
ds
sbbl
xchg
jne
hlt
xchg
jg
stos
add
bound
lods
jmp
adc
sbb
cmp
or
repz
je
add
cwtl
mov
hlt
mov
jb
jle
addr16
mov
scas
push
lahf
rorb
mov
movsb
test
dec
pop
data16
loope
mov
sub
dec
daa
and
fcoms
dec
fwait
xchg
pop
lods
inc
xor
iret
or
cmp
fdivr
stos
jl
rcrb
cwtl
sbb
mov
and
mov
cmpsb
ret
and
jns
out
mov
jg
xchg
dec
push
fiaddl
mov
add
jne
add
mov
mov
mov
stc
add
insb
add
xchg
mov
fstpt
push
std
and
outsl
add
rcrl
mov
stc
mov
inc
mov
aad
sbbb
cmpl
sub
add
ljmp
inc
cltd
sub
push
in
add
add
scas
add
sub
fstps
xor
int3
fiadds
fwait
mov
mov
fisttpll
add
lahf
lcall
push
xor
outsl
bound
leave
mov
out
push
add
fs
dec
scas
xchg
mov
je
movsl
mov
sbb
call
xor
push
add
add
loopne
hlt
lret
sbb
add
xchg
add
inc
repnz
subl
mov
xchg
int
mov
in
add
add
iret
faddl
in
outsl
popa
adc
mov
dec
adc
fistpll
jl
out
lods
pop
add
dec
pop
ds
mov
cmp
mov
divps
int
ds
mov
add
into
push
out
xor
add
and
push
add
insb
test
test
pop
sub
sub
jl
lds
xlat
cli
add
in
and
mov
pop
push
mov
xchg
mov
test
dec
inc
aam
add
and
add
pop
jge
shlb
xor
lds
add
inc
insl
adc
dec
arpl
popf
cmp
dec
add
in
jecxz
lcall
add
dec
popf
pop
push
enter
add
std
ja
ja
add
cmp
repz
ss
jo
cmpsl
add
inc
or
imul
add
mov
insl
mov
cmp
push
add
rorl
xchg
insl
or
insb
cmpsl
xchg
sbb
outsb
aam
arpl
cmpsb
and
push
cmp
jmp
insb
into
out
sti
ret
lret
xor
add
and
lret
pop
and
inc
arpl
movsl
mov
in
aas
out
jne
xor
insb
rorl
insl
out
adc
orb
ret
xor
hlt
pop
xor
add
cmp
jbe
lods
cli
add
jnp
xchg
test
ret
mov
insl
addb
push
adc
sti
sti
add
pop
push
das
leave
imul
ja
cmpsb
adc
stos
shll
adc
cli
mov
dec
hlt
push
shlb
lea
test
loop
nop
and
add
ljmp
lahf
and
add
not
adc
into
cwtl
cmp
testb
push
sub
das
scas
jl
push
and
icebp
mov
daa
mov
out
pop
fwait
cmpsl
xchg
add
add
add
decb
or
fstpl
out
sbb
xor
push
cmp
lds
in
ljmp
loope
test
cli
push
sub
add
pusha
push
lods
scas
push
nop
dec
pop
add
in
es
inc
je
and
stos
int
sbb
in
dec
jp
faddl
ret
add
add
jnp
jbe
adc
jno
mov
xchg
lahf
inc
sub
faddl
cli
jo
adc
mov
insl
sahf
aam
inc
mov
cmpb
cmp
icebp
add
js
shll
lods
jnp
inc
adc
pop
or
and
mov
lds
nop
cmc
push
arpl
dec
add
inc
ds
jg
subb
divb
add
jno
push
sub
xchg
xchg
loopne
add
imul
je
hlt
repz
and
sub
add
outsw
popf
iret
or
std
pop
test
add
add
cmp
add
lods
mov
cld
jmp
repz
loope
add
add
pop
add
pop
add
aad
mov
add
ret
jg
xchg
lock
mov
add
loop
xchg
subb
mov
arpl
out
mov
add
and
cmp
push
mov
inc
out
pop
dec
dec
sub
insb
adc
orl
aam
enter
add
mov
xchg
push
cmc
mov
add
lea
mov
or
mov
jecxz
outsl
add
in
inc
sbb
popf
movsl
gs
add
inc
lods
sub
mov
das
movsb
jl
xchg
pop
lods
add
cld
add
aam
stc
js
mov
and
scas
iret
ja
les
movsb
lahf
cmp
inc
pop
add
add
fisttpll
add
lods
sbbl
outsl
loopne
sbb
pop
adc
sub
inc
push
aam
dec
pop
shll
iret
repnz
jb
test
xchg
mov
jb
dec
pop
cmpsl
fadds
or
sahf
fwait
jnp
push
sub
sbb
mov
rcrb
sbb
ljmp
add
jnp
and
jmp
stos
push
xchg
add
jmp
pop
cmp
imul
add
xor
add
pop
xlat
out
or
dec
inc
rcrb
pop
mov
mov
ret
add
test
and
notb
addl
mov
dec
rolb
lcall
jnp
cmpl
add
xchg
sbb
add
fadds
add
mov
int3
test
add
mov
sub
insl
sbb
xlat
xchg
repz
lcall
xchg
xchg
mov
scas
or
mov
adc
sbb
fmuls
lcall
and
push
bound
movsl
mov
add
xchg
pop
out
jae
icebp
or
jmp
subb
add
pop
inc
repz
loop
pop
ret
pop
or
mov
jle
or
push
and
lret
add
jo
inc
and
add
out
test
fstps
imul
pusha
test
mov
sbb
mov
es
xchg
mov
shll
cmp
hlt
sbb
jecxz
adc
cmp
push
push
jmp
loopne
clc
js
and
push
mov
int
add
stos
add
mov
lods
add
add
push
mov
jge
js
in
mov
aas
insl
sub
add
push
call
sub
stos
daa
mov
add
dec
rorl
test
pushl
sbb
mov
dec
rolb
pop
icebp
rorl
xchg
int
add
mov
push
dec
add
adc
xchg
xlat
fcmovnu
add
xlat
iret
mov
loop
add
adcl
add
addb
inc
ret
add
jecxz
pop
add
add
or
xchg
loop
arpl
cli
ficomps
test
sti
jne
ds
dec
push
add
pop
icebp
xor
fadds
adc
dec
ss
push
sbb
enter
popaw
mov
add
add
mov
mov
sub
xor
mov
sub
add
ficoms
les
sub
cs
xlat
adcb
cltd
dec
movsl
cmp
dec
sbb
sub
adc
inc
or
hlt
mov
lods
call
add
jno
or
jg
add
gs
scas
push
mov
cwtl
ret
out
inc
add
pop
pop
rcll
jl
arpl
add
sub
and
xchg
fwait
or
das
cmp
test
ja
jbe
cltd
lock
leave
push
sub
in
xorl
fs
loopne
xor
mov
cmpsb
lahf
cmp
sbb
fcoml
or
pop
jp
mov
add
jne
popa
add
imul
test
in
cmp
ljmp
jle
shlb
stc
xchg
mov
ja
repnz
xchg
inc
add
mov
xchg
mov
lret
iret
fldl
jle
pusha
popf
and
rclb
inc
add
cmp
cmpsl
pop
test
add
aad
cs
mov
mov
fabs
mov
add
mov
push
rcrl
int
jecxz
jb
mov
gs
imul
loopne
fucomi
jbe
nop
xlat
imul
out
jnp
xchg
jo
push
sti
pop
push
pop
add
pushl
add
mov
icebp
push
cmp
lahf
cwtl
dec
push
loope
stc
test
outsb
and
movsl
data16
lea
aaa
push
lcall
or
andb
imul
imulb
mov
pop
mov
or
and
or
imul
sub
es
subb
aaa
push
rolb
gs
repz
mov
dec
aad
jl
inc
insl
xchg
adc
xchg
cmpsb
ljmp
cmpb
sbb
add
dec
xor
push
jp
inc
xchg
mov
pop
mov
push
add
inc
outsb
pop
sahf
xor
addr16
xor
mov
jl
xor
fbstp
mov
add
cmpsb
inc
pushf
xchg
test
mov
sbb
lods
lea
pop
cs
cli
enter
cs
lds
and
xchg
and
add
dec
inc
out
lcall
mov
add
jl
inc
add
in
sbb
add
in
cli
sub
push
enter
addl
cli
out
or
push
xchg
push
and
lea
test
decb
add
or
lret
sbb
mov
loope
and
pop
sub
add
pop
sar
mov
xor
test
cmp
in
pop
add
stos
lcall
jno
add
sub
mov
and
add
or
ficoml
inc
insb
hlt
adc
dec
rol
push
cmp
add
xlat
and
test
cmc
push
pop
imul
push
xchg
or
add
add
xlat
in
pop
idivb
add
xor
lods
jnp
add
add
arpl
rcl
sarb
adc
add
repz
cmp
pop
lods
fwait
iret
add
enter
xchg
add
dec
lods
push
mov
push
push
inc
ret
enter
mov
popf
sub
adc
jo
dec
push
push
jl
in
pop
decl
add
push
imul
aad
sti
add
dec
jl
cs
adc
je
mov
mull
push
stc
insl
loope
in
int3
pop
inc
and
nop
subl
sub
enter
add
leave
js
jl
incl
pop
cmp
out
lds
insl
inc
jecxz
cwtl
inc
mov
add
sbb
fwait
stos
jmp
add
fbstp
add
mov
push
outsl
mov
fs
add
out
sbb
xchg
mov
cmp
sbb
inc
add
add
inc
jl
mov
ss
adc
xchg
in
inc
inc
push
cld
imul
cltd
loopne
fs
sti
jae
pop
push
cmp
and
cmp
jb
add
mov
xor
and
das
add
mov
mov
cmpsl
inc
andl
sbb
fists
add
shlb
xor
adc
nop
das
int
xor
add
and
lret
mov
les
add
sub
add
cmp
insl
enter
ret
fwait
add
lret
mov
cmp
int3
jns
lret
enter
jnp
mov
popa
test
add
rcrl
ljmp
lret
sbb
inc
call
add
add
push
stos
shll
std
sahf
icebp
pop
repnz
mov
mov
pusha
add
add
dec
in
dec
add
fstl
pop
into
mov
sarb
jp
inc
lret
outsb
aaa
add
mov
and
scas
inc
xchg
int3
addb
mov
push
testb
mov
push
add
daa
scas
mov
out
das
add
add
pop
repnz
mov
jnp
inc
inc
rolb
fsub
sarl
push
loop
sbb
or
jae
mov
add
push
jae
ds
sub
jne
pop
sti
pop
icebp
pop
dec
test
jle
add
fbld
pop
jecxz
aaa
aad
mov
enter
sub
cmc
xchg
outsl
mov
jg
sub
adc
aas
mov
jae
mov
push
in
mov
xor
jae
add
inc
fdivrl
cmp
add
jle
ss
mov
add
xchg
aas
cltd
dec
add
sbb
dec
std
add
cmpsl
push
jbe
icebp
in
add
shl
add
add
xchg
decb
shlb
pop
dec
xchg
mull
sbb
add
or
testb
in
inc
sub
cmp
jmp
out
lods
and
fisubs
cmp
xor
imul
push
popa
cltd
dec
test
push
ja
lods
call
cs
xchg
ljmp
sbbb
movsb
add
or
jl
jbe
out
xchg
add
and
clc
xchg
add
cmpsb
push
mov
add
add
add
dec
jae
icebp
test
clc
xor
jne
dec
sti
inc
movsb
jne
ljmp
nop
and
daa
lock
adc
push
mov
fisubl
fwait
inc
and
lea
movsl
jmp
or
jp
arpl
mov
add
ds
add
add
es
jmp
or
testb
add
add
mov
jno
jge
movl
xor
jnp
outsl
pop
popf
testl
ja
das
int3
jge
sbb
mov
push
loopne
in
pop
jne
scas
sub
add
les
xor
add
movsl
scas
and
add
aaa
adc
mov
jl
sbb
pop
add
add
xchg
dec
je
push
pop
mov
pop
mov
lcall
add
cmp
add
cltd
call
mov
add
mov
fbstp
call
inc
adc
push
outsl
add
push
add
add
add
flds
out
xchg
cmp
outsb
add
es
adc
in
add
inc
and
fcompl
aam
dec
lret
pop
rcrb
xor
push
xchg
cmp
mov
add
mov
push
dec
fsubrs
cli
sub
and
rclb
xor
fdivrl
sbb
nop
jae
fstpt
loopne
jo
ja
insl
or
lods
sub
popf
jl
lret
mov
outsb
mov
add
xor
push
xor
bound
jno
daa
outsl
and
in
sahf
fmulp
in
adc
xchg
jl
adc
push
add
mov
jl
jns,pn
add
out
add
enter
add
insl
xchg
daa
ljmp
popa
jl
or
add
jno
arpl
xor
mov
loope
adc
mov
mov
stos
mov
mov
xorl
loopne
or
xchg
cli
inc
add
icebp
lcall
or
add
add
xchg
daa
jae
add
fmull
mov
ja
xor
imul
mov
addr16
xor
add
fwait
mov
mov
xor
pusha
cwtl
jecxz
or
and
test
add
mov
in
repnz
jne
mov
add
adc
test
add
filds
add
push
jae
add
data16
dec
repz
pop
cmp
jnp
dec
out
add
or
lret
push
xor
push
push
lds
adc
add
sbb
sub
popa
outsb
push
and
adc
add
fwait
dec
jle
add
in
addr16
xchg
addl
adc
scas
add
fcmovnu
ljmp
mov
xchg
mov
cmp
mov
mov
in
xchg
rorb
std
pop
push
add
xchg
cmc
pop
adc
add
into
xor
push
mov
add
mov
dec
xor
andl
insl
roll
sub
add
stos
add
lds
cmpsl
xchg
jb
adc
add
das
pop
add
push
fisubrl
add
xlat
rolb
sbb
mov
lcall
sub
das
inc
push
add
sahf
scas
inc
add
inc
pushl
and
roll
in
pusha
lds
pop
data16
pushf
add
pop
inc
repnz
fcomps
or
and
lret
mov
test
mov
push
pop
mov
dec
fistl
cld
mov
dec
std
inc
lock
repz
ss
pop
popf
cmp
in
inc
mov
flds
mov
add
xchg
cld
push
ljmp
push
jge
sub
inc
aaa
or
loopne
xlat
in
ret
enter
sub
js
fsts
mov
push
stos
mov
push
int
mov
test
dec
iret
jno
in
sbbb
jne
mov
shrb
test
push
daa
ss
movsb
gs
mov
push
lahf
iret
scas
fs
int
ja
add
add
mov
lods
mov
cltd
shll
cmp
stc
add
add
int3
pop
fbld
sahf
push
mov
mov
push
js
jae
test
shrl
add
fildl
mov
pop
lods
dec
insb
or
scas
add
add
aas
push
and
inc
lock
xchg
nop
fistpl
int3
das
and
mov
add
mov
cmp
xchg
test
xchg
xchg
sub
idiv
mov
fimull
nop
pop
add
jmp
inc
push
ficoml
shlb
pop
js
rol
icebp
stc
dec
jecxz
rorb
pusha
sub
int3
and
mov
in
daa
sub
cmc
nop
jbe
sub
add
jle
add
cwtl
mov
cld
enter
xchg
push
adc
je
pop
loopne
clc
or
adc
mov
scas
movsl
testb
xor
std
movl
xchg
lea
outsl
dec
popa
out
int
jne
inc
sub
out
add
out
lods
sbb
mov
cmp
inc
lahf
popa
mov
popa
xchg
or
and
popf
sti
mov
lds
mov
add
mov
adc
daa
inc
mov
adc
shlb
or
fadds
jbe
add
adc
mov
fldt
fisubrs
dec
inc
mov
daa
lahf
jecxz
and
jne
scas
leave
sub
add
pop
adc
xlat
add
sbb
aam
push
mov
into
ds
mov
sbb
enter
es
and
dec
insl
lret
fwait
add
push
cli
inc
jg
add
mov
test
dec
pop
lds
add
ret
int3
mov
inc
fcoms
xchg
gs
add
push
sbb
cli
adc
pop
mov
pop
mov
jnp
int
dec
js
add
jmp
cmp
add
lds
xchg
insl
dec
push
in
mov
mulb
loope
test
add
inc
dec
repz
push
jnp
lods
scas
mov
mov
shr
jg
cwtl
inc
adc
rcrl
cmpsb
mov
jnp
add
cli
lahf
in
push
test
pop
roll
lcall
inc
push
dec
add
lock
dec
pop
adc
xor
movsb
insb
sbb
sbb
add
arpl
ja
daa
or
ret
cmpsl
vpcmpeqd
xor
rolb
or
inc
addb
insl
repz
insl
int
or
les
scas
movsl
cmp
mov
popf
xchg
test
add
add
push
and
sbb
fbstp
mov
clc
sbbb
pop
mov
jmp
jno
add
ja
dec
dec
add
dec
shlb
fcmovb
rcl
jecxz
mov
out
bound
loopne
sub
or
sub
jno
jae
aam
lret
stos
xchg
xchg
fstps
inc
mov
lods
cmp
orl
jl
repnz
je
or
xor
imul
aad
sub
lods
mov
adc
fnsave
std
sub
add
adc
ret
push
and
xor
sbb
push
xor
pusha
arpl
sub
mov
adc
push
inc
aad
arpl
out
testb
fdivrl
in
outsb
sub
jb
add
lret
dec
das
xchg
push
cmpsb
lret
cmp
mov
or
jg
pop
hlt
and
sub
sbb
fsts
jmp
and
add
movsb
jmp
mov
sub
ljmp
add
popa
int
out
sub
loopne
sahf
repz
das
adc
dec
add
mov
lods
imul
inc
mov
mov
xor
bound
fs
mov
lcall
dec
add
add
add
cmpsl
js
filds
add
mov
testb
xor
shl
jg
add
rcll
push
jbe
add
into
scas
push
aaa
ljmp
xchg
mov
popf
insb
inc
add
cmp
xchg
leave
scas
imul
pop
add
or
insl
ret
mov
sub
into
std
add
neg
push
dec
testb
push
lea
inc
data16
mov
cwtl
adc
add
je
decl
gs
add
add
add
out
stos
in
xchg
inc
enter
and
add
mov
test
jns
push
sbb
mov
sbb
ds
dec
sete
inc
bound
cmp
mov
add
mov
pop
divl
cli
call
cld
cmp
sub
scas
and
outsl
bound
lahf
sbb
add
mov
xchg
mov
pop
out
add
mov
insl
add
sarb
lahf
out
mov
sbb
add
pop
add
iret
add
rcrl
ljmp
xlat
pushf
mov
ret
daa
cli
add
fmull
cli
xlat
mov
fwait
and
jp
ficoml
test
cltd
leave
sbb
and
mov
lcall
addl
popf
add
or
add
jl
jbe
cmpsl
add
popf
or
stos
xchg
jle
pop
call
outsl
stos
mov
incl
jbe
les
loope
sar
lea
lock
xor
dec
push
inc
icebp
scas
xlat
pushf
add
orb
iretw
in
dec
mov
add
xor
dec
add
push
jnp
adc
sub
pop
dec
xor
lahf
loopne
repz
loope
sub
mov
cmp
adc
or
outsl
add
add
sub
cmc
jl
pop
call
out
daa
int
scas
xor
popf
and
or
popa
xorb
lods
pop
mov
pop
imull
xlat
int
inc
sbbl
sub
mov
xorps
cltd
fstpt
dec
sbb
dec
push
pop
outsl
add
and
push
out
add
cmp
shll
add
xchg
inc
popa
popa
add
leave
cmpsb
or
sub
das
aaa
pusha
sbb
add
mov
jae
repz
add
cltd
inc
icebp
adc
ffreep
mov
mov
mov
lock
mov
add
out
mov
les
gs
imul
mov
imul
inc
out
pushf
cmp
add
rolb
inc
dec
mov
fnsave
inc
fisttpl
sub
aas
or
add
repnz
pop
in
mov
fnsave
bound
lret
int
pop
nop
sbb
inc
call
ret
fiadds
imul
outsl
lds
dec
push
loope
mov
loope
add
jge
fldcw
ss
mov
out
inc
fwait
dec
cmp
add
xor
add
aam
dec
and
cmp
mov
scas
cmp
repnz
sti
inc
js
add
add
xchg
sub
push
inc
push
lahf
mov
adc
mov
shlb
les
lcall
mov
inc
rcrl
sbb
stos
mov
int3
add
adc
and
out
inc
int
mov
fwait
pop
jns
call
repnz
pop
daa
jo
jle
push
daa
fiadds
fimuls
gs
add
pop
push
xchg
aaa
cld
mov
ds
add
in
xor
add
pop
fdivs
or
test
cld
les
xchg
and
pushl
add
fcompl
pushf
mov
mov
sarl
xchg
fst
pop
jns
cmp
lret
jg
cmp
test
add
test
cmpb
loop
into
add
cmp
movsl
jecxz
mov
out
jmp
pop
cmp
jno
add
jp
jle
adc
aas
cltd
or
mov
insl
push
rol
or
or
add
bound
ss
jo
pand
into
fcmovu
lret
add
add
and
pop
loope
cltd
add
sbb
inc
scas
cmp
add
pushf
mov
mov
add
or
adc
fs
sbb
aad
lods
adc
or
lahf
lret
push
lods
inc
jo
push
add
or
adc
out
pop
popa
add
mov
scas
popa
add
jmp
nop
dec
xor
dec
mov
push
add
lcall
aas
sbb
movsl
adc
mov
cwtl
lds
cwtl
inc
mov
pop
xchg
aad
adc
add
enter
or
mov
daa
les
in
mov
jp
jns
rolb
rolb
xchg
or
in
cmp
lret
add
aaa
stos
sub
lock
pop
aad
jne
mov
hlt
or
jecxz
leave
add
inc
push
in
jnp
and
jno
arpl
add
jp
fdivp
imul
mov
popl
add
adc
fiaddl
and
inc
daa
fmuls
fists
incl
cmp
roll
add
call
movsb
popf
inc
xor
push
pop
ss
adc
push
push
les
add
lcall
add
xchg
in
popf
faddp
xor
decl
mov
jb
icebp
jl
add
out
stos
fwait
sub
push
add
les
jo
pop
insl
movsl
insl
lods
and
mov
mov
cmp
inc
jle
mov
ds
adc
inc
mov
add
cld
test
jo
jp
inc
dec
add
popa
out
xchg
dec
adcl
out
jge
inc
out
loope
lds
adc
cltd
jmp
inc
in
pop
das
int3
cs
sbb
rolb
cmp
push
jno
add
pop
fdivl
pushl
int
iret
lahf
fisubs
test
cmp
add
adcl
xchg
cli
data16
jp
adc
jmp
lcall
push
mov
incb
out
scas
pop
add
inc
in
rcr
je
lret
test
aas
ljmp
das
pop
add
cmp
add
and
int
add
sbb
popa
add
pushf
jg
gs
xchg
dec
int3
add
xchg
xor
in
rolb
push
xchg
sti
outsb
sub
rol
loopne
cli
cltd
iret
mov
loopne
jmp
jge
fdivr
add
adc
aam
push
bound
adc
imul
or
fsubr
add
xchg
add
push
push
outsb
dec
add
scas
mov
cmp
arpl
imul
je
pop
cmp
mov
xchg
mov
xchg
cmc
cwtl
cmpsl
ret
xchg
fcomps
fwait
outsl
jl
pusha
hlt
fwait
push
das
icebp
adc
push
dec
cmp
add
popl
xor
das
imul
pop
pop
lcall
testl
mov
es
add
mov
test
cli
ljmp
push
xor
push
or
push
add
jbe
add
fadds
imul
add
int
test
cmp
popf
aaa
call
faddp
or
loop
pop
in
and
cld
notb
or
or
daa
bound
scas
sbbl
imul
fwait
aaa
roll
push
add
and
add
fisubs
inc
push
dec
rclb
imul
dec
add
pop
sub
es
imul
pop
ss
cmp
cmp
pop
xchg
jne
insl
lret
add
repnz
pop
out
and
scas
mov
sub
popl
mov
imul
mov
iret
insb
sbbl
mov
pop
mov
and
xor
cmpsb
aad
fs
mov
addr16
dec
roll
sub
rorl
jnp
jb
arpl
cs
cmp
add
or
xchg
out
cmp
mov
inc
xor
inc
jo
add
adc
outsb
movsb
add
test
gs
add
xor
and
mov
jnp
add
add
imul
add
jo
shr
mov
jl
add
push
cltd
mov
roll
xchg
call
arpl
sbb
dec
mov
sub
jnp
es
in
cmp
inc
add
add
mov
jnp
or
add
test
add
scas
lods
cmpsb
pop
jge
cmp
movsb
sahf
lcall
cmp
pop
xor
cli
imul
push
pop
mov
pusha
int3
cs
adc
int3
data16
lret
rorl
or
jns
and
xchg
jne
or
lahf
inc
ja
out
jl
add
inc
fisttpll
sbb
cmp
cld
f2xm1
cmpsb
ds
pop
mov
push
lret
ror
js
add
pop
inc
enter
fs
or
fs
insb
cmpsl
push
popf
mov
jo
fcoms
jo
mov
mov
xchg
add
pop
add
push
mov
jns
gs
add
rcr
mov
xchg
inc
add
dec
clc
jnp
or
popf
push
mov
test
mov
mov
ss
repz
leave
imul
gs
sahf
rorb
ret
and
icebp
add
sub
sub
add
xchg
arpl
icebp
sbb
ja
add
jae
es
les
sbbb
xor
inc
jno
inc
mov
sbb
cmc
mov
pop
add
sti
and
daa
add
clc
call
add
fwait
mov
adc
cmp
fnstenv
add
aad
push
and
pop
cmp
or
aam
jae
repz
inc
ja
push
xchg
mov
mov
pop
pop
aas
add
add
arpl
xor
sahf
add
out
mov
or
add
xchg
xchg
adc
stos
adc
xor
stc
hlt
hlt
add
out
addr16
and
mov
test
shrb
mov
sub
shll
mov
notb
jle
sbbb
add
in
data16
inc
daa
popa
lret
movl
pushf
les
inc
pop
aam
xor
push
jle
data16
enter
sti
stos
add
ss
data16
ljmp
add
pop
shll
lcall
xchg
inc
and
jl
jae
push
out
add
xchg
aas
out
mov
loop
inc
push
out
add
add
rcl
add
dec
dec
xchg
and
aas
movsb
add
add
add
fidivrl
aaa
adc
mov
cli
jg
add
pop
sbb
idivl
inc
xchg
inc
push
add
fs
sahf
add
xchg
mov
subl
cltd
adc
lcall
push
push
repnz
cmc
repz
mov
das
mov
mov
out
or
bound
dec
mov
add
inc
or
push
outsl
mov
ss
xchg
mov
fildll
add
cmp
ret
inc
movl
xchg
xor
lcall
test
outsl
cwtl
xor
jns
or
adc
sbb
mov
xchg
xchg
add
lods
jb
xor
sbb
dec
loop
fidivl
xchg
out
iret
sbb
add
add
pop
and
mov
and
fdivrp
mov
scas
add
xchg
sbb
iret
jge
add
cld
mov
fdivs
mov
es
into
and
inc
ss
loop
or
fwait
sbb
add
pop
les
dec
add
jbe
xlat
out
in
or
jle
ret
in
lea
add
shr
repz
push
div
add
cmovae
sub
clc
inc
imul
push
adc
inc
dec
jmp
stos
mov
divl
dec
out
shl
and
in
enter
dec
sub
add
add
pop
subb
lret
add
push
movsl
cmp
mov
xchg
ljmp
out
mov
xor
aas
aas
sub
xor
in
xor
xchg
add
mov
add
ret
dec
cmpsl
sub
mov
sub
and
sub
push
push
xor
dec
lcall
sub
mov
and
add
pusha
roll
subl
imul
sbb
xor
ret
adc
push
add
mov
xchg
xor
out
push
fildl
sti
add
inc
in
loope
dec
jle
xor
jo
sbb
add
mov
orb
push
loope
and
mov
add
les
cmp
jmp
add
add
imul
add
pop
dec
sbb
shlb
in
add
or
js
in
lret
add
stos
jns
aam
outsb
data16
lcall
or
ret
setl
add
inc
add
inc
das
sbb
lret
and
push
out
mov
std
bnd
mov
mov
adc
leave
popf
pop
adc
das
aas
in
xor
xchg
lret
jge
popf
jae
xor
adc
fsubr
and
add
aaa
clc
add
mov
repnz
add
bound
iret
push
in
cmpsb
add
shll
push
out
in
loop
mov
lds
inc
ja
clc
jno
fs
lock
jle
nop
out
pop
mov
add
fstl
test
in
adc
xchg
mov
ss
lret
mov
loopne
popa
out
pushf
arpl
out
add
test
mov
rcrb
fistpll
gs
mov
mov
inc
stc
and
mov
xor
push
xchg
add
mov
push
jp
imul
lea
xchg
xor
ficoms
cld
jge
arpl
xor
add
dec
add
lret
add
sub
jmp
cs
cmp
add
ds
nop
cmp
pop
daa
stos
je
dec
add
and
mov
in
shlb
sahf
sbb
fucomip
loope
sarl
aas
sub
push
or
stos
inc
pop
jge
pushf
inc
lods
out
in
jne
scas
rol
and
in
mov
add
and
fwait
aad
loopne
fstpl
outsl
in
add
sbb
repz
cmp
mov
fs
xchg
add
inc
test
pop
or
mov
dec
cmc
int3
jae
call
add
add
cli
pop
outsb
aas
icebp
xor
loope
mov
lahf
jmp
push
mov
into
shl
jp
jno
jnp
gs
or
dec
sub
dec
add
subb
sbb
inc
pusha
pushf
out
pcmpgtw
or
es
push
cli
add
dec
lret
fwait
add
xor
cmp
addr16
add
lret
shr
dec
and
dec
stos
mov
sbb
adc
pusha
xor
add
inc
clc
fldt
cld
jo
repnz
cmp
inc
scas
add
adc
sbb
in
out
inc
aam
add
xor
pop
pop
mov
std
add
add
xchg
rcr
jl
lea
mov
add
jno
nop
orb
mov
iret
add
in
das
les
add
pop
and
cmp
lock
and
repnz
test
nop
mov
jp
iret
mov
xor
pop
add
pusha
arpl
mov
ret
scas
mov
add
add
mov
cmp
inc
mov
jns
pop
add
and
in
mov
push
outsl
add
outsb
xor
cli
mov
stos
adc
pmullw
jno
and
push
jo
jo
popf
pushf
jo
mov
sbb
int
scas
cli
add
insl
aas
lock
adc
popf
jle
cmp
nop
sti
add
imul
sub
bnd
lret
lock
pop
and
pop
rcll
add
xchg
and
das
add
mov
mov
stc
sub
adc
cwtl
int3
pop
jmp
mov
inc
add
les
bound
sbb
icebp
cmp
mov
add
sbb
cwtl
sbb
xor
arpl
dec
mov
cld
cltd
inc
sub
xor
add
loopne
fadds
in
jge
xchg
addl
add
add
add
cs
fadds
sub
fld
sub
insb
dec
ja
aam
pop
sbb
rorb
xorb
cmp
cwtl
pop
mov
lret
add
dec
popa
sbbl
pop
leave
idivl
ljmp
popa
inc
push
loopne
push
cmp
mov
push
dec
mov
movsl
pop
pop
mov
add
push
cmpsb
cmp
sbb
push
jecxz
add
add
fst
call
imul
movsl
insb
enter
loope
cmc
mov
sahf
pop
sub
cmp
out
fst
jbe
ds
dec
pushf
stos
rclb
jo
xchg
jbe
inc
adc
add
mov
enter
ja
lret
jg
aad
stos
add
mov
testl
xor
out
lcall
in
adcb
inc
arpl
mov
movsl
clc
loope
out
or
add
jecxz
and
add
xchg
mov
cli
shll
cld
imul
jae
lock
push
inc
test
add
add
pop
subl
insl
or
push
fidivl
mov
adc
xor
addr16
jno
add
add
loope
inc
fwait
fwait
add
scas
popf
mov
sarb
push
sbb
dec
arpl
test
adc
add
lea
xchg
out
jge
mov
pop
or
ljmp
rorl
mov
xchg
inc
loope
mov
pushf
stc
push
out
add
je
add
dec
mov
add
fs
add
dec
outsl
cmpl
pop
jle
add
mov
mov
sub
push
add
sbb
icebp
ficoms
or
out
add
push
lahf
cwtl
mov
repz
sbb
cwtl
and
loopne
or
in
mov
add
imul
cmp
cmc
xor
js
sbb
mov
inc
sub
jnp
jle
fwait
insl
jno
or
cs
mov
adc
cli
negl
in
popa
or
in
xlat
add
in
cs
mov
in
pop
in
mov
and
pop
dec
sub
push
js
movb
pop
sub
xor
add
mov
std
rorb
mov
cs
dec
lods
mov
loopne
mov
test
imul
cmp
cmpsb
rorb
add
push
daa
loop
add
push
sub
scas
jno
out
mov
jecxz
arpl
fstpl
sbb
nop
imul
xor
js
add
rcrl
adc
repz
dec
fs
test
and
and
fcmovbe
rclb
lock
dec
mov
subl
add
or
xor
aas
fistpll
das
repnz
xchg
out
add
pop
addl
sbb
add
mov
pushf
cltd
mov
sar
ljmp
in
jmp
push
lods
jmp
cmpsl
and
push
dec
into
xchg
dec
ja
add
inc
cmc
mov
sub
add
sub
push
add
add
mov
adc
jl
add
repz
int3
movsb
rolb
add
nop
add
push
rolb
cld
inc
cmpsl
pop
rolb
pop
add
ja
add
dec
fcmovnu
mov
repz
adc
jbe
loopne
enter
imul
cmp
jo
shr
shll
xor
lea
outsl
jle
add
popa
mov
fisubrs
dec
add
scas
lea
cmp
jle
push
cmp
rcrl
add
add
repz
in
dec
dec
lods
add
aam
mov
lret
mov
mov
les
imul
into
mov
xchg
pop
pop
popa
or
mov
testl
outsb
loope
enter
repz
shrl
dec
xchg
sar
mov
arpl
or
add
sub
sbb
jns
je
xchg
or
add
cmpsl
jnp
dec
jnp
nop
adc
sub
aam
adc
ficompl
add
cmpsl
pop
jns
cmpb
ja
dec
sbb
sbb
add
rcll
jo
inc
mov
add
pop
mov
sbb
repz
jns
sub
int
or
xchg
pop
ja
fdivr
add
movl
add
out
leave
rolb
xchg
mov
inc
ficoml
cltd
popf
add
xor
mov
adc
xor
insb
sub
mov
fistps
shrl
add
flds
lret
pop
mov
icebp
xchg
sbb
add
jp
sbb
rcrl
sub
inc
cmpsb
mov
test
les
mov
cli
or
insl
cs
inc
mov
int3
ljmp
push
sub
out
adc
ret
adc
xor
cmp
mov
add
mov
dec
or
fwait
sbb
add
je
add
jns
nop
cmp
mov
loopne
pop
xchg
iret
movsb
aas
add
add
sti
add
paddsb
mov
sahf
in
fiaddl
fs
int
sahf
adc
push
inc
sub
adc
add
add
or
add
cmpsl
mov
mov
movl
mov
fstp
add
in
mov
scas
xchg
das
mov
xchg
jp
scas
call
sub
shrl
mov
adc
pusha
add
xchg
notl
add
add
dec
dec
lcall
stc
test
daa
pop
push
inc
ja
and
mov
ds
and
add
add
jne
loope
add
add
daa
into
lods
push
bound
fists
push
add
push
dec
dec
pop
add
mov
mov
daa
test
movsl
jo
and
xchg
push
mov
xchg
stc
adc
jno
repnz
push
xchg
mov
mov
cli
mov
and
xchg
mov
js
fdivr
pop
repnz
cld
cmp
in
call
pop
scas
add
test
stos
mov
or
xchg
dec
and
loopne
jg
imul
sub
out
fmuls
pop
pop
in
pop
mov
push
hlt
jne
push
cli
xorb
xchg
mov
push
add
jecxz
push
in
cmp
clc
inc
repz
fdivrp
repz
mov
in
lods
lahf
add
stc
arpl
add
adc
lock
inc
lret
std
fmull
push
jecxz
fildl
and
xor
fnstsw
push
pop
sbb
xchg
add
rcr
add
shlb
add
lods
dec
xor
or
icebp
mov
into
movsl
mov
add
adc
dec
scas
lods
jbe
add
mov
mov
cli
mov
inc
mov
loope
cltd
in
mov
xor
sub
loop
inc
addr16
sub
andl
xor
filds
add
lods
stos
daa
add
jo
mov
mov
inc
divl
pop
inc
insl
data16
adcb
add
jns
mov
sbbb
jnp
push
mov
add
stos
add
out
data16
add
add
or
jecxz
mov
mov
xchg
ret
and
das
inc
repz
or
cmp
into
add
xchg
je
add
sahf
cmp
pop
jle
or
add
add
aas
mov
jecxz
mov
lret
out
fstpt
test
add
add
lock
add
enter
orl
add
ds
ljmp
out
push
cmpsb
add
push
xchg
lds
inc
jnp
push
mov
loopne
jae
push
lcall
add
cmp
mov
outsl
add
cld
call
fsubr
mov
jge
js
rorb
pop
lahf
sahf
cmp
cmp
decl
jo
pop
mov
mov
cmp
mov
mov
ljmp
xchg
dec
inc
and
mov
add
xchg
lret
jecxz
ret
and
pavgb
push
mov
jne
ret
test
jne
add
fisttpll
loop
pushf
pop
add
sti
mov
outsl
cmc
lock
and
push
pop
orb
inc
loopne
inc
xor
xchg
add
or
or
jmp
xchg
jb
cmpsl
add
cwtl
test
clc
insl
imul
add
xor
lcall
pop
sub
jmp
mov
xadd
repnz
dec
leave
bound
pop
and
ret
add
inc
mov
sti
repz
dec
movsb
scas
repz
movsl
xchg
lock
jp
movsl
xor
call
add
scas
jbe
xchg
pop
lcall
push
mov
shrl
dec
cmc
pop
add
popf
push
dec
lret
mov
add
sub
dec
xchg
adc
enter
pop
orb
fisubl
push
add
mov
push
add
fsincos
loope
out
pop
movsl
sub
es
sub
rolb
inc
out
adc
add
dec
and
jg
dec
cmp
filds
cmp
sub
sbb
and
imul
mov
xor
mov
test
movsb
mov
lods
filds
push
jl
adc
add
je
add
xchg
lock
fmuls
int3
negb
push
cwtl
add
or
add
pop
jle
add
mov
dec
push
mov
mov
xor
inc
mov
sahf
loope
das
lret
dec
adc
mov
cmp
outsl
xor
inc
ficoml
dec
sahf
js
add
and
dec
out
mov
lret
add
add
add
mov
dec
lcall
daa
xor
mov
xchg
and
or
add
inc
xchg
pop
dec
aam
sbb
fidivl
add
xor
ret
add
add
sbb
pop
xchg
leave
fdivrs
iret
divb
cmp
imul
iret
adc
aam
xchg
sub
scas
xchg
cli
jle
add
dec
add
test
out
add
xchg
sbbb
mov
sahf
decl
add
outsb
mov
add
pop
and
and
mov
push
or
add
rcrl
insb
movb
mov
fs
lcall
mov
mov
ja
fisttpl
aas
ljmp
fstpt
add
add
push
out
add
jo
add
outsl
adc
dec
call
inc
or
nop
pause
popa
cs
cwtl
sti
push
movsb
jge
add
cmp
stos
push
pusha
cmpsl
push
js
shll
rcrb
add
add
add
and
ret
sbb
or
xor
test
adc
add
xchg
inc
sub
mov
inc
add
sahf
ljmp
add
add
add
add
push
repz
xlat
repz
push
add
data16
add
dec
in
mov
cmp
mov
and
add
mov
and
push
add
fldt
sub
lret
sahf
iret
xor
sub
clc
xchg
or
fdivrl
sbb
repz
inc
in
pop
add
lock
jp
add
jns
out
rclb
lret
daa
add
cmpsb
add
jecxz
sbb
popf
ds
rolb
jp
iret
icebp
dec
or
mov
add
je
in
push
push
arpl
inc
pop
sbb
out
add
xor
bnd
mov
insb
xor
lods
pushl
pop
cmpsb
rorb
outsl
pop
xchg
mov
jge
daa
arpl
xchg
rorb
out
add
ret
movsl
sbb
repz
lret
pop
addr16
imul
add
dec
mov
cld
inc
lock
dec
fdivrl
out
int
push
out
pop
pop
andw
inc
jae
lahf
into
stos
loop
outsl
add
sub
add
int
sahf
sub
sbb
pop
fildl
mov
xchg
add
mov
dec
mov
add
cmpsb
xor
leave
mov
mov
add
ds
mov
lods
add
test
add
sbb
jae
jb
dec
movsb
add
loopne
jne
jle
dec
je
ror
xchg
push
mov
mov
sbb
test
out
cmovle
and
xor
add
fiaddl
push
lds
mov
addr16
jae
popf
cmp
loopne
add
sub
add
lds
add
mov
add
wbinvd
jne
and
pop
movsb
cwtl
jp
rcrb
pushf
ja
fcomps
mov
int3
sahf
test
fldenv
orl
push
lahf
arpl
jnp
mov
xor
lea
pop
add
sahf
dec
dec
cwtl
mov
xor
lds
add
pop
mov
cmpsb
call
out
adc
dec
inc
dec
add
add
jl
pop
dec
in
pop
xchg
mov
lahf
repz
pop
xchg
das
mov
cmp
push
jge
mov
push
add
add
lock
hlt
hlt
sbb
or
ds
or
lret
mov
insb
xchg
add
xchg
xor
rolb
dec
mov
sbb
icebp
jo
xchg
jle
aas
lret
lods
mov
push
jnp
mov
ljmp
jb
dec
popf
add
mov
jg
add
jmp
and
inc
mov
mov
xlat
repz
hlt
daa
cmp
add
mov
shlb
loopne
sub
and
into
das
enter
or
call
fildl
add
mov
add
add
inc
lret
loop
cmp
loopne
sbb
sub
xor
push
jl
pop
cmpsb
out
or
sbb
add
lcall
jne
imul
jmp
bound
cmpsb
js
mov
imul
jle
mov
inc
add
pop
out
es
iret
xchg
andl
roll
sbb
mov
mov
int3
jne
add
pushf
adc
xchg
inc
xchg
test
add
lcall
repnz
mov
scas
mov
adc
add
int3
pop
out
mov
mov
adc
mov
cwtl
daa
or
add
mov
jp
jl
and
loopne
repz
mov
mov
stc
aaa
repnz
or
outsl
stc
inc
addr16
cmp
repnz
add
dec
add
mov
xchg
add
adc
xor
jno
add
add
pop
ret
popl
repz
call
jg
add
pop
cltd
scas
xor
cmpsb
mov
and
dec
push
divb
popf
adc
mov
cmpsl
cmp
jne
scas
inc
mov
add
shll
or
jmp
int
dec
mov
ds
cmp
lret
in
and
add
push
add
jg
lock
cmp
xor
or
add
into
and
jbe
add
sahf
push
cmp
sti
aas
sbb
dec
in
icebp
pop
mov
data16
mov
cmp
out
add
loopne
loopne
std
xor
scas
mov
cmp
sub
test
jo
insb
or
jg
fildll
xchg
mov
jbe
imul
cmp
add
jns
lea
inc
and
loopne
and
orl
lcall
in
jge
pop
add
or
sub
jecxz
aam
lds
cli
lea
cmp
inc
sbb
adc
push
lods
mov
not
cmp
fdiv
dec
add
arpl
fwait
outsl
jno
out
cwtl
dec
dec
mov
adc
adc
push
add
jge
clc
js
sbb
adc
mov
popa
gs
lock
test
sub
push
and
movsb
lret
inc
add
or
ja
out
mov
cmp
call
orb
push
cmpl
pushf
add
in
call
adc
shl
xor
mov
in
ja
dec
pop
xchg
mov
add
je
add
add
add
or
pop
dec
push
add
data16
rcrl
test
arpl
popf
cmp
sbb
clc
cmp
jnp
stos
and
add
push
push
cmp
xor
add
adc
add
lods
add
adc
push
movsb
inc
push
xor
mov
icebp
cli
imul
cmp
sbb
mov
sub
hlt
iret
mov
in
sbb
jnp
xor
adc
mov
xchg
dec
es
shlb
movsb
pop
dec
adc
add
addr16
rorb
add
mov
cmp
add
mov
xchg
cmp
adc
push
gs
cmp
add
jg
inc
into
test
add
and
push
add
das
mov
add
test
mov
ljmp
les
sub
jbe
out
inc
in
mov
stos
in
push
call
cmp
add
loope
fisubl
xchg
mov
dec
cmpsb
sti
aaa
add
add
xchg
mov
add
add
or
lret
fs
jmp
test
push
xchg
enter
into
add
shrb
pop
out
add
sti
mulb
iret
idiv
mov
fsub
add
or
push
inc
mov
or
in
jmp
inc
dec
sbb
fidivrs
js
out
jmp
sti
insb
ret
mov
cltd
movsb
das
pop
add
sbb
cltd
add
push
in
and
inc
icebp
not
xchg
out
cmpsl
in
out
out
lods
dec
sbb
lods
pop
enter
addb
ja
add
sbb
sub
call
mov
sub
daa
loop
pop
cmc
add
jp
mov
dec
jno
jns
add
adc
jnp
test
adc
xorb
mov
add
sarl
icebp
gs
cmpsb
add
rclb
mov
lds
pop
mov
cmp
stc
mov
hlt
lock
pop
cmp
add
imul
jp
xor
int
jbe
cmp
arpl
dec
sbb
push
out
and
aaa
sub
sub
ja
mov
sbb
add
gs
add
fdivrs
je
push
mov
and
or
in
cmpsl
sub
stos
cmc
push
out
add
mov
test
hlt
push
pop
subl
add
fdivrp
jp
pop
scas
insl
mov
out
ss
dec
in
add
add
arpl
jl
add
and
push
add
xor
add
cmp
jns
leave
sbb
sbb
add
xchg
jmp
add
femms
jns
imul
sub
lret
movsb
or
cmp
jg
and
sbb
and
cmp
pop
cmp
add
mov
movsl
scas
add
jg
mov
cwtl
mov
cmpsl
popf
or
test
ret
stc
in
xor
pop
mov
cmp
dec
fdiv
xchg
or
loope
add
movsb
testl
sub
pop
mov
stos
outsl
xchg
cwtl
decb
mov
and
mov
fstl
sub
pop
inc
pop
mov
rcl
jge
inc
int3
leave
mov
out
arpl
dec
in
or
xchg
fdivs
sbb
mov
lcall
push
ret
fiaddl
xchg
stos
inc
lock
aam
or
pop
add
mov
adc
adc
out
jp
add
int3
int3
jmp
sbb
add
add
and
lock
fs
inc
mov
add
add
mov
dec
int
mov
mov
xor
shlb
sahf
push
rolb
xor
das
inc
ja
insb
mov
notb
pop
push
mov
out
imul
add
cmc
ljmp
in
jge
decl
mov
movsl
push
test
add
add
sbb
add
mov
outsb
push
add
call
pop
into
cmp
xchg
shll
cmp
roll
push
xchg
sbb
add
sbb
ret
leave
fwait
push
mov
pop
push
or
scas
add
fsubr
add
test
add
adc
jo
sub
inc
into
add
push
adc
fbstp
mov
mov
fsubs
mov
xchg
xor
lret
sub
inc
aaa
dec
add
cmp
popf
fadds
cltd
adc
add
mov
roll
jo
push
jnp
fldl
aas
dec
mov
pop
imul
fsubl
add
outsl
or
inc
pop
test
xchg
add
push
insl
int3
pop
test
xchg
mov
inc
lahf
jmp
ret
into
cmp
pop
mov
jmp
mov
mov
mov
xor
aas
or
add
mov
cmp
cmp
jne
ret
adc
cmp
pop
mov
add
push
or
push
adc
add
jae
pop
mov
xorb
loopne
in
xchg
mov
adc
dec
or
add
ret
sub
add
dec
push
add
ss
je
gs
add
xlat
sbb
mov
add
arpl
push
mov
cli
cmc
sbb
int3
divl
add
mov
add
scas
enter
xchg
or
imul
xchg
cmp
mov
add
out
sub
or
push
adc
mov
pop
add
test
xor
push
xor
repz
add
xchg
inc
jbe
mov
adc
add
add
mov
sbb
mov
pop
xchg
loope
or
inc
mov
sahf
pop
xchg
dec
mov
outsb
push
addr16
js
lods
jne
add
adc
out
lock
les
jl
mov
sub
shll
dec
test
xchg
mov
lret
arpl
iret
or
pop
xchg
push
add
xchg
call
dec
fsubrs
je
add
test
movsb
cmp
add
xchg
or
and
mov
das
or
cs
sbb
inc
outsb
pop
inc
or
rclb
shll
add
jle
push
sbb
add
imul
mov
dec
add
cs
outsl
cltd
add
sbb
fwait
pop
jo
mov
or
cmpsb
and
lahf
dec
xchg
add
adc
cmp
or
sub
fyl2x
insb
or
add
mov
int3
fadds
rclb
call
add
mov
pop
sub
test
iret
push
jo
cmp
sub
scas
adc
in
sub
jnp
xlat
fnstcw
ja
inc
repnz
cmp
dec
push
cld
sub
pop
cmpsb
call
pop
push
xchg
add
xchg
movsl
orl
fidivl
imul
mov
mov
add
mov
arpl
shl
std
push
xor
out
jne
popa
cmp
ret
cmp
aas
add
add
mov
imul
xorb
lret
sbb
loope
call
jge
cltd
or
or
and
testl
add
fsubrl
jae
aad
popf
out
rclb
arpl
das
mov
cltd
jmp
cmp
les
negb
lret
dec
jb
pop
add
mov
cmp
cli
pop
cmp
mov
mov
sbb
fldcw
xor
inc
js
xchg
push
xor
loope
xchg
sbb
or
add
imul
in
add
mov
jecxz
or
imul
cwtl
sub
dec
stc
push
xchg
jbe
xor
lds
mov
sahf
cmp
inc
aad
xchg
scas
cmc
mov
add
xchg
and
mov
xor
xlat
out
hlt
cmpb
xor
push
and
ret
jecxz
arpl
mov
xchg
lret
xchg
add
xchg
lret
fsubs
mov
adc
xor
stos
fisubl
jp
popw
or
popf
out
xor
mov
lcall
fstpl
fadd
insl
insb
arpl
push
mov
jl
push
shrb
pop
out
scas
lods
sbb
mov
cmpsl
je
jp
lret
jo
add
jp
aad
dec
rorb
xlat
dec
mov
ss
add
inc
pop
shrb
adc
dec
mov
pop
jg
jecxz
add
sub
les
add
push
fldl
jmp
add
add
add
lea
bound
add
xor
lcall
xchg
add
jg
mov
mov
add
aas
mov
nop
add
xor
jo
add
push
jp
inc
fwait
lods
cmp
adc
xor
loope
test
mov
pop
loop
popa
aad
pop
mov
xchg
ret
lret
add
lcall
add
pushf
aad
imul
cmp
fwait
rcrb
add
cmc
std
sbb
jno
ja
and
inc
mov
pop
dec
add
insl
xchg
ja
lahf
add
mov
or
decl
mov
mov
add
imul
push
mov
popf
sub
xchg
or
out
mov
outsl
cmpsl
pusha
mov
int3
or
mov
add
xchg
jmp
mov
cmc
jle
sbb
ret
test
das
add
push
and
mov
add
adc
mov
add
cmp
clc
int3
jnp
add
ds
test
or
adc
dec
icebp
sar
cld
fcomp
sbb
mov
add
add
inc
lds
mov
xchg
andb
pop
rcll
fnsave
rcr
inc
mov
add
pop
pop
in
adc
add
sub
push
xor
shll
sbb
repz
add
xor
and
bound
cld
add
push
jns
xchg
movsl
sbb
dec
movsl
pop
ljmp
inc
mov
sbb
push
add
mov
popa
pop
popf
push
test
sub
fisubs
add
dec
mov
push
outsl
mov
cmp
or
das
mov
js
pop
cmpb
or
stc
mov
imulb
popl
in
add
xchg
call
or
adcb
addl
lods
xor
subb
subb
scas
jae
dec
or
cmp
pop
mov
mov
into
add
add
shl
fcoml
inc
pop
scas
test
jge
imul
and
jg
xchg
aaa
in
xchg
jmp
xor
mov
or
loop
mov
mov
mov
pushf
and
inc
jne
jnp
add
ljmp
nop
cmp
arpl
xchg
rolb
jg
lods
insb
insb
pop
outsb
into
imul
loopne
add
adc
cwtl
add
insb
xchg
fldt
sahf
arpl
push
add
lcall
pop
outsl
add
mov
cld
sbb
mov
test
mov
pushf
xor
stos
std
push
and
xor
sub
xor
test
cwtl
pushl
add
lds
lret
push
and
mov
jae
add
add
push
add
xor
scas
das
mov
dec
add
aad
hlt
fstl
add
call
adc
cltd
cmc
iret
adc
mov
jbe
movsl
add
adc
cmp
imul
icebp
dec
mov
cmpsl
jge
jmp
push
sti
repnz
dec
enter
jge
inc
pop
andl
rcrb
mov
add
push
sti
sti
arpl
lcall
inc
jne
inc
iret
sbb
adc
dec
mov
inc
dec
add
ja
leave
cmp
imul
hlt
shlb
mov
sahf
sub
add
xor
mov
dec
addb
cmp
jmp
inc
filds
ljmp
mov
cmpsl
aaa
add
notl
mov
pushf
push
and
add
ja
int3
xchg
outsl
fmul
adc
xor
add
jb
add
inc
iret
sti
lock
add
jge
cmp
sbb
in
test
ja
add
mov
push
bound
data16
dec
cli
jl
add
in
xor
push
xchg
ljmp
sub
push
pop
lock
test
cmpb
ficompl
sub
scas
dec
inc
stos
and
jbe
xor
add
xor
clc
mov
pop
mov
je
add
das
daa
sbb
add
push
repz
or
sub
test
jno
xchg
pop
jge
add
arpl
xlat
out
or
dec
add
add
aas
jns
vpshufb
inc
andb
add
inc
dec
add
fistpll
lea
scas
decl
mov
or
xchg
lds
or
mov
inc
shl
or
int
clc
add
std
ret
lds
in
stc
fisubs
call
add
in
in
scas
sti
add
add
pop
aad
movl
jnp
loope
mov
and
mov
sub
dec
ja
arpl
mov
and
sbb
cmp
iret
fnstcw
xchg
inc
mov
cmp
lahf
gs
push
in
add
lods
mov
or
clc
add
aaa
in
add
mov
mov
xchg
out
shlb
xchg
sub
sbb
pop
icebp
hlt
add
nop
test
roll
add
jb
mov
das
bound
pushf
jle
sbb
adc
es
cmpsb
push
mov
je
push
dec
add
add
sbb
or
ret
sbb
adc
arpl
insl
outsl
jg
pop
or
stos
lahf
add
mov
movsl
mov
inc
xor
daa
das
mov
lret
dec
or
cs
or
add
mov
sbb
mov
lods
dec
add
aam
push
add
ljmp
dec
in
add
test
subl
adc
data16
cwtl
mov
mov
add
dec
mov
stc
popa
int3
sub
xchg
nop
xchg
push
loope
mov
mov
add
mov
pop
outsl
test
fs
scas
xor
xchg
outsb
pop
or
add
add
jl
xor
ja
cmp
test
dec
je
negb
test
shll
icebp
add
negb
adc
push
jp
add
mov
in
jns
mov
add
dec
bound
add
inc
xor
add
mov
mov
mov
dec
xchg
iret
popf
adc
add
loopne
test
jl
add
sbb
inc
inc
add
in
pop
inc
and
syscall
movb
cmc
fmul
push
int
roll
lahf
pop
mov
push
xor
dec
cmp
add
xchg
cmp
outsb
mov
stos
adc
mov
add
add
jge
dec
stc
adc
lret
outsl
imul
popf
data16
cmp
pop
cwtl
pop
cmp
or
dec
scas
add
xchg
lods
call
test
mov
xlat
addb
rclb
xor
inc
outsl
inc
cwtl
cmpsb
sub
inc
lods
ds
das
inc
sub
addb
sbb
les
add
insl
add
jmp
ljmp
in
sahf
jnp
inc
mov
pop
pmuludq
add
nop
add
push
int3
add
sbb
adc
mov
dec
adc
out
add
in
divl
loopne
adc
add
add
ljmp
rcr
add
ret
mov
out
icebp
mov
add
sub
push
xor
lods
data16
xchg
out
imul
imul
lock
lret
add
add
aad
notl
dec
cltd
pop
movsl
rorb
in
lret
pop
add
ret
fdivrl
mov
out
xor
sub
roll
dec
ret
mov
add
enter
push
lea
fbstp
cmp
add
push
add
add
add
and
lcall
imul
insb
cwtl
pop
fiaddl
pop
loop
mov
xchg
add
in
dec
cmp
add
sub
xchg
pushf
jne
insb
push
add
sub
pop
adc
jbe
pop
jmp
loope
sub
add
cmp
inc
push
stos
ret
xchg
push
add
shlb
enter
or
in
shl
xchg
push
fwait
test
mov
ja
cmpsl
into
cs
pop
ficoms
dec
jmp
fistpll
pop
add
xor
add
jg
and
ljmp
cli
mov
push
or
adc
dec
sub
daa
pop
jg
push
lea
add
mov
and
cmp
in
jnp
in
add
pop
rolb
push
cmp
lahf
adc
add
leave
mov
cltd
in
imul
orb
int
pop
jae
test
mov
mov
or
sub
add
dec
or
jnp
mov
insl
cmp
mov
enter
xor
rolb
push
add
lret
shlb
add
ds
or
sbb
add
mov
pop
repnz
cli
jns
inc
ja
sbb
aam
cmc
add
xor
mov
jo
ret
adc
ja
pop
xchg
ljmp
mov
jg
aam
pop
call
popa
leave
push
rcrl
add
shl
pushf
lahf
mov
test
dec
mov
popf
popf
fwait
sub
xchg
inc
push
scas
mov
shlb
ja
test
shrl
cmp
mov
movsb
add
jecxz
xor
ja
leave
nop
int
add
fistl
cli
leave
push
jp
lret
xchg
repz
push
and
ja
bound
mov
ret
incl
shll
jp
add
imul
movsl
add
bound
push
fstpl
idiv
inc
mov
xchg
add
add
xchg
lock
clc
adc
dec
mov
std
jnp
fsub
jbe
scas
cld
inc
or
and
ret
add
str
inc
cmp
push
inc
movsb
aad
add
cmp
xor
mov
mov
inc
inc
cli
pop
lret
call
add
sub
pop
cltd
mov
sbb
ficoms
sti
mov
mov
and
cwtl
pop
aas
mov
cltd
pop
out
add
add
jle
mov
fwait
sti
daa
dec
loopne
je
clc
shrl
jbe
add
enter
ret
sbb
mov
daa
dec
add
xchg
ret
cmp
push
pop
test
jne
sub
lods
outsb
into
lahf
push
flds
call
and
mov
dec
cmp
sbb
les
cltd
or
and
mov
mov
add
clc
int3
stos
arpl
fistl
xor
adc
xchg
gs
xor
cmpsb
fs
xchg
jnp
jne
jne
lds
je
out
loope
xchg
mov
test
arpl
pushf
leave
cmpsb
add
sub
js
ror
inc
and
cmp
add
inc
add
push
jb
fs
add
pop
fstl
mov
lea
sbb
ds
dec
xor
sbb
xor
pop
add
sub
pop
pushf
mov
loopne
negb
fadds
cmpsl
sub
imul
jbe
jle
ret
pop
insl
inc
add
mov
lret
subb
orl
scas
cmp
rcr
jne
cmp
repz
push
adc
and
sbb
pop
push
inc
pushf
push
and
mov
mov
xor
out
daa
sahf
icebp
mov
sbb
add
jbe
dec
lock
mov
xlat
mov
fisubrl
and
nop
stos
jo
inc
xor
xchg
push
lcall
inc
mov
lahf
iret
out
shll
xor
aas
shl
scas
mov
push
push
or
test
xchg
pop
clc
adcb
jle
aam
jns
lret
and
pushf
int3
push
add
push
add
aam
cld
int
shlb
sahf
push
dec
push
jae
repz
loope
leave
adc
cmpsl
add
jg
cmc
insl
adc
aad
push
sub
jns
icebp
gs
stos
cmp
sub
stos
pop
lcall
xor
mov
rcr
mov
imul
sarb
ja
xchg
int3
push
push
jns
or
int
pop
add
push
sub
notl
int
adc
shl
roll
movl
push
pop
xlat
jb
movsb
out
pop
leave
push
dec
ret
add
gs
lcall
and
js
cltd
cmp
and
pop
jge
cmc
add
add
bound
inc
or
jge
add
push
cmp
mov
add
inc
mov
xor
sub
push
filds
ficoms
das
int3
push
popf
dec
fwait
pop
and
add
mov
popf
mov
sub
jmp
fwait
jb
add
jb
and
lret
popa
scas
mov
gs
and
dec
add
jo
aam
add
pop
mov
jecxz
mov
mov
mov
add
lods
fistpll
add
aaa
leave
cli
stc
jno
push
out
sub
or
icebp
aam
mov
insb
pop
rolb
mov
jg
cwtl
pop
adc
cmp
push
push
out
pop
mov
inc
jmp
push
jnp
add
mov
int3
sti
and
icebp
sbb
insl
shlb
sbb
imul
je
repnz
arpl
enter
adc
int3
cmpsl
ret
inc
fdivr
stos
dec
pop
icebp
xchg
aad
xor
imul
mov
ds
xchg
cmp
xchg
or
add
subl
lds
addb
js
pop
add
or
cwtl
subl
push
popf
sbb
mov
xchg
jns
push
ret
out
dec
xor
cld
jmp
mov
xor
mov
inc
call
sub
pop
add
cld
mov
gs
jnp
inc
mov
je
int3
divl
push
add
loope
sub
imul
leave
jo
adc
adc
mov
mov
sti
inc
ljmp
push
mov
or
ss
sub
je
out
add
rol
jo
mov
icebp
sbb
loopne
inc
test
push
fdivrs
aaa
xchg
xchg
popa
shll
cmp
adc
popf
adc
shll
add
or
in
and
xchg
jp
and
popa
push
outsl
pop
shll
loop
push
insl
and
lret
call
daa
xor
test
int
fldenv
sub
aaa
or
mov
pop
out
xchg
icebp
adc
xor
or
add
inc
push
xor
add
popa
pop
cmc
int
mov
and
push
sbb
sbb
clc
dec
inc
pop
jb
add
cmpsb
hlt
dec
mov
inc
mov
lods
push
push
push
add
lcall
enter
add
aaa
es
add
lock
shlb
mov
add
mov
add
inc
dec
push
js
repz
loop
jge
gs
pop
add
cld
test
push
or
add
sub
jb
jnp
int
add
jnp
xchg
cmpsl
add
test
jo
jl
jno
popf
aaa
movb
jae
movsl
xchg
dec
jno
adc
mov
divl
push
xor
int3
test
not
and
test
pop
ret
in
sbb
cli
popf
add
sbb
mov
jne
outsl
incl
add
loope
imul
mov
cmp
ret
filds
es
push
xchg
outsl
lahf
sbb
dec
cld
cmp
add
inc
mov
mov
mov
add
add
xchg
sahf
and
pop
shrl
and
add
mov
xchg
insb
aad
add
jae
and
xchg
xchg
xor
mov
stc
ja
mov
data16
cmp
subb
adc
loope
jne
add
mov
int3
int3
movaps
les
push
mov
rcrb
out
das
add
xor
adc
shrb
push
roll
mov
cmp
xor
inc
arpl
jmp
popf
add
loopne
dec
cmp
cltd
outsl
xor
jmp
pop
add
cmpsb
mov
lock
mov
mov
cmp
push
cs
add
cli
nop
popf
inc
cmp
and
setbe
lcall
add
add
ja
pop
adc
stos
push
pushf
addl
filds
fcmovnb
add
push
std
aaa
xchg
je
movsl
sub
xchg
jecxz
pusha
add
pop
lods
sbb
xchg
fimuls
inc
ss
add
inc
fsts
sub
in
loopne
cmp
aam
test
outsl
scas
hlt
xor
inc
push
ffreep
dec
stos
icebp
sbb
div
pushf
fs
mov
insb
jne
cmc
in
pop
imul
repz
daa
mov
add
movd
jle
inc
mov
in
mov
insl
xor
clc
jge
pop
dec
mov
idiv
cmpb
sub
cltd
ljmp
ret
lods
add
adc
imul
xor
dec
in
pop
push
push
mov
and
in
subl
and
jmp
popa
xor
das
cmp
add
pop
xchg
lea
jns
xchg
iret
fwait
shll
pop
stos
loope
inc
jns
call
outsb
push
add
inc
cltd
add
add
add
gs
pop
fistpl
in
enter
add
xor
int
add
nop
roll
imul
xlat
sbb
mov
ds
clc
xor
jp
ljmp
mov
data16
scas
cmpl
inc
dec
mov
sub
lock
es
inc
enter
addr16
cmpsb
mov
ljmp
test
mov
test
pop
push
aad
incl
adc
insb
add
or
dec
jo
iret
jp
fdivrp
les
cmc
add
imul
add
dec
lcall
and
push
clc
xchg
and
loopne
and
adc
add
in
bound
je
sub
and
lea
fs
and
scas
outsl
xchg
add
mov
cwtl
jge
xchg
pop
std
bound
xchg
or
insb
mov
int3
pop
test
add
andl
mov
icebp
addl
push
out
cmp
scas
xor
push
pop
inc
add
jl
jb
aas
das
fs
popa
adc
stos
cmp
jl
rcll
fiaddl
add
std
add
addb
lds
or
gs
mov
xor
outsb
inc
jp
jae
lea
testl
nopl
add
jle
mov
and
les
or
pop
lock
mov
jge
add
jecxz
aad
in
sub
jmp
push
int3
push
jb
fwait
pop
add
loope
imul
sub
into
add
nop
notl
pop
cmp
pop
repnz
cmp
push
mov
inc
add
aam
adc
add
mov
scas
fiaddl
add
and
dec
icebp
adc
shl
mov
out
mov
sub
aad
js
inc
push
push
xchg
movsl
cs
sub
mov
push
sbb
xchg
sub
sbb
and
add
movl
push
and
mov
mov
inc
lods
leave
add
add
sbb
and
jno
dec
add
out
insl
dec
arpl
adc
ret
mov
push
jae
add
mov
sbb
xor
jae
xchg
mov
adc
mov
sbb
pop
icebp
in
leave
jbe
out
std
adc
cmpb
add
int
cmp
jo
add
aaa
adcb
mov
mov
imul
xor
incl
nop
xor
xchg
clc
and
add
popl
jo
add
sbb
mov
xchg
mov
xchg
pop
add
daa
lahf
sub
adc
lods
jnp
data16
shll
xor
repnz
icebp
cwtl
fisubs
xor
add
or
das
in
xchg
pusha
and
jns
jae,pt
inc
pop
in
fisttpll
stos
out
stos
xchg
outsl
fadds
dec
xchg
jge
add
adc
add
int3
sub
push
push
dec
lret
mov
sbbl
sub
jle
icebp
or
aad
test
std
pusha
sti
mov
insl
jge
pop
inc
in
add
add
add
cmp
mov
pop
imul
movsl
cmp
cmp
mov
push
push
scas
hlt
shl
push
es
dec
loop
dec
xor
push
repz
xchg
jo
jl
add
cli
scas
add
jmp
outsl
cmp
lods
pop
sbb
mov
sub
out
mov
sarb
adc
jle
xlat
call
mov
add
inc
lock
add
stos
hlt
inc
ret
add
sbbb
movsl
xchg
jmp
xchg
icebp
mov
fdivr
xor
lds
insb
add
mov
add
sbb
mov
imul
in
rorl
in
and
ficoml
sti
push
inc
mov
jmp
roll
add
mov
jne
hlt
imul
mov
and
or
jnp
mov
jns
pop
nop
js
sbb
sbb
hlt
aaa
cmpsl
xor
dec
push
jl
gs
insl
aad
dec
mov
mov
xchg
das
add
mov
add
push
js
ret
cmp
aad
push
mov
add
addr16
out
ret
test
inc
push
push
mov
xorl
jl
jne
mov
sbb
add
sub
aam
in
push
stos
push
ds
test
pop
pop
mov
inc
add
sub
cli
int3
and
je
es
mov
push
dec
or
mov
movsb
movsl
dec
inc
mov
repnz
mov
out
mov
loop
pusha
emms
test
xchg
and
inc
fisubl
add
pop
in
orb
dec
bound
lods
call
out
std
add
jnp
mov
mov
movsl
jle
cmp
daa
xchg
loope
add
sqrtps
mov
ljmp
int3
xor
add
mov
xchg
add
adc
int
push
mov
les
mov
cmp
sub
add
lods
jnp
out
dec
cmp
mov
dec
add
orb
fsts
or
push
xchg
push
add
and
int3
mov
dec
lret
add
outsl
enterw
add
jle
push
loope
rolb
stc
cmpsb
in
or
add
test
ja
xchg
jb
cwtl
add
out
pop
ficoms
aas
lds
xlat
or
es
lock
add
sub
lcall
shll
sti
or
push
add
mov
into
sub
xor
daa
or
push
ss
pop
add
in
js
push
add
add
shll
ljmp
xchg
pop
insl
jo
lea
dec
add
push
pusha
and
and
add
push
aad
mov
sbb
test
mov
cs
push
push
dec
test
inc
ds
cli
xchg
mov
rorb
cmp
das
inc
js
push
test
xchg
test
in
or
int3
cmpsl
popa
mov
cwtl
add
xchg
lock
icebp
cmp
mov
fisttps
xlat
shlb
inc
xor
adc
clc
sub
adc
jge
pop
in
in
dec
push
adc
arpl
add
add
push
and
dec
mov
sub
add
xchg
gs
icebp
ret
mov
pop
and
jnp
incb
and
cmp
add
popa
push
sbb
pop
fwait
xorb
push
cs
push
add
outsb
or
pop
inc
dec
aad
mov
out
mov
add
add
cmp
ret
and
ds
fstpt
or
push
jo
int
cli
pop
fiaddl
xor
push
fidivrs
popa
mov
into
in
ja
in
lret
add
mov
dec
mov
mov
sbb
arpl
xchg
inc
mov
sbb
popa
pop
add
sub
add
or
incb
popf
enter
lret
adc
sahf
add
adc
mov
dec
jle
ret
add
jmp
adc
out
mov
add
aas
sarl
mov
insl
xor
mov
and
bound
sahf
dec
mov
push
jecxz
and
and
add
mov
in
mov
mov
add
inc
jb
push
xchg
jmp
add
mov
or
sbb
pop
ror
jne
dec
push
les
mov
add
xchg
or
fwait
mov
xchg
out
mov
jno
pop
mov
aas
fwait
inc
jecxz
sahf
cltd
lea
or
lret
mov
sbb
adc
add
fldt
mov
or
jnp
jecxz
pop
loope
gs
mov
mov
cwtl
pop
imul
and
push
fsubr
dec
adc
pushf
scas
add
ja
xchg
fs
outsb
jnp
stc
mov
rorl
push
sub
imul
lahf
xor
ficompl
xor
jmp
pop
imul
add
dec
sub
add
mov
sti
mov
add
or
xor
push
cmp
jmp
mov
jnp
cmp
dec
add
mov
bound
cld
jp
adc
jp
test
jns
scas
adc
mov
push
xor
int
add
push
xchg
loopne
push
inc
add
pop
cmp
mov
dec
sbb
lcall
adc
mov
or
dec
popf
jno
jecxz
lds
cltd
fadds
bound
stos
mov
push
xchg
xor
push
sub
pop
sbb
stc
and
add
add
xchg
xchg
in
push
mov
lods
or
or
lret
nop
mov
and
shll
xor
jb
inc
stos
dec
cmp
insb
stc
jp
dec
push
outsl
add
call
in
push
xlat
popf
add
fdivl
inc
adc
in
and
pop
cmc
jl
add
into
push
lds
sub
icebp
add
xor
jmp
fs
sbb
arpl
out
fwait
shlb
xor
add
sbbl
out
dec
pop
xorl
push
sub
leave
mov
iret
fcoml
mov
and
lcall
dec
pop
push
mov
movsb
add
pop
mov
sbb
into
ret
stc
fstpt
cmp
pop
lds
inc
jnp
pop
mov
xchg
xor
add
and
adc
mov
mov
adc
add
add
push
jb
pop
andl
pusha
push
xor
jp
add
repnz
enter
push
add
ljmp
add
add
pop
dec
icebp
add
cld
movsb
iret
jmp
cmpsl
add
sbb
jmp
dec
dec
sbb
add
xchg
add
add
jno
lret
sub
clc
inc
sbb
rorl
roll
loop
clc
adc
mov
out
sti
data16
adc
xor
xchg
call
sahf
and
outsb
outsb
xor
jecxz
repz
sar
inc
mov
lret
in
and
cmp
mov
sahf
pop
and
cmpsb
add
loop
mov
xor
inc
mov
push
mov
xor
add
adc
rcl
xorl
mov
jge
inc
inc
roll
dec
inc
cmpsl
dec
mov
sti
mov
dec
shrb
xor
test
loope
into
faddl
add
push
hlt
xchg
add
je
xchg
dec
aaa
jp
sbb
cmp
mov
xchg
pop
lret
sbb
and
push
int
add
dec
xchg
xor
pushf
adc
push
les
shl
mov
mov
push
cld
jo
push
mov
scas
dec
jae
dec
add
dec
insl
push
mov
xchg
inc
cli
add
jb
test
jne
clc
fldl
data16
lods
cmp
les
in
mov
insb
xchg
or
add
lahf
cmc
push
or
filds
insl
test
and
jp
and
inc
add
cwtl
push
xor
sub
pusha
ret
add
add
jp
shrl
add
xchg
pusha
and
jne
int3
add
adc
cs
mov
lcall
imul
mov
cwtl
add
cmp
fistl
mov
in
adc
repz
or
add
mov
push
sti
outsb
je
add
pop
mov
test
fadds
mov
fstpt
add
repz
das
push
andb
fisttpll
js
fs
loopne
mov
dec
add
outsl
inc
idivl
clc
es
push
cmp
aas
aaa
fimull
lret
or
clc
lds
out
adc
mov
add
pop
dec
lret
push
adc
sub
scas
add
fdiv
les
jg
test
mov
gs
and
cwtl
jnp
push
push
lea
mov
clc
dec
pop
inc
adc
xorl
mov
add
mov
mov
popf
in
pop
dec
cli
incb
aas
in
inc
hlt
sti
push
movsl
fdivrl
mov
push
jmp
jmp
dec
xorb
cltd
mov
dec
add
ljmp
pop
add
add
sbb
push
insb
jno
out
adc
jecxz
pop
rcrl
cmp
dec
loop
xor
rolb
cld
test
add
xchg
jne
lea
icebp
in
push
js
xlat
add
int3
cmc
add
add
add
jecxz
test
sub
add
out
sub
jmp
sar
movsb
scas
jl
sub
movsb
pop
sub
pop
add
insl
std
stos
add
jmp
adc
sub
push
xchg
and
jmp
orb
fistpl
dec
fs
xchg
add
aam
in
jle
pop
shlb
rcrb
push
ds
jns
inc
ficoms
ljmp
cwtl
mov
mov
dec
xchg
xchg
mov
and
and
cltd
aaa
cmpsl
inc
add
jns
or
jge
jb
hlt
lcall
pop
ftst
jecxz
jo
add
xchg
js
ja
add
pop
jbe
dec
dec
or
movsb
push
cmpsb
sub
push
out
add
pop
adcb
add
dec
jno
scas
push
sub
sti
mov
dec
ss
mov
jae
out
lods
mov
pushf
add
adc
inc
in
in
jae
cmp
xor
stos
leave
add
movsl
xor
jl
repnz
pop
sbb
mov
andl
int3
jb
mov
ja
imul
add
fidivrl
in
mov
add
sub
inc
fwait
xlat
ja
mov
lahf
or
adc
fidivrs
imul
or
xchg
lock
push
lahf
incl
mov
insb
inc
or
push
sub
arpl
dec
in
and
mov
adc
dec
fisubrl
and
out
xchg
loopne
imul
inc
jmp
int
movsl
inc
mov
mov
movsb
or
add
lcall
jmp
sub
ljmp
lcall
std
xchg
cmp
push
pushf
mov
popa
adc
std
sbb
xchg
fwait
testb
movsb
sub
stc
repnz
add
jl
add
xor
orl
outsl
pop
or
and
mov
mov
fistpll
inc
pusha
cmpsb
push
test
xor
bound
jmp
lods
lock
mov
aaa
aam
push
imul
push
int
sti
fcomi
or
add
ljmp
ja
loopne
or
sbb
loope
mov
cltd
inc
in
rorb
clc
cmp
mov
shll
imul
mov
ret
fs
xor
fwait
add
bnd
test
add
add
add
mov
daa
add
cmp
in
add
adc
dec
jae
pushf
sub
add
xlat
js
psraw
inc
adcl
mov
and
add
jne
xor
rcrl
xchg
mov
jmp
shll
push
mov
popa
and
or
lret
mov
in
mov
mov
xor
jg
cwtl
out
sbb
mov
icebp
mov
pop
mov
sbb
add
adc
scas
xchg
sub
sbb
dec
out
pusha
aad
ret
xchg
or
xor
push
or
sub
add
or
xchg
pop
inc
dec
add
pop
inc
je
cmp
jg
aam
xor
sti
add
lret
lods
mov
sbbb
add
add
add
add
adc
sub
mov
pushl
int
fcompl
cmpsb
jns
mov
mov
test
mov
shrb
xchg
xchg
lret
roll
add
xchg
mov
mov
cmpsl
push
xchg
mov
in
lods
orl
add
fadds
pusha
aad
inc
out
pop
nop
incb
xor
pop
and
add
mov
jo
push
scas
sub
imul
dec
xor
pop
in
int3
xchg
push
inc
or
add
sub
push
adc
xchg
add
add
sbb
cmp
add
fldt
mov
jg
inc
fistl
cmp
cmp
xlat
pusha
add
mov
xor
daa
out
jne
pusha
mov
popf
cmpb
ja
add
dec
xchg
push
push
push
add
rorl
jne
jae
pop
sbb
icebp
js
add
mov
pop
cltd
add
lock
pop
sbb
ret
stc
hlt
loopne
push
cmp
add
add
call
in
pusha
scas
xor
aaa
insb
lret
push
in
cmpsb
add
mov
in
mov
sbb
in
das
sub
test
sub
or
add
testl
enter
aam
inc
push
lods
scas
or
shlb
dec
pop
and
rclb
gs
xchg
cmp
sbbl
pop
fstp
incb
fstps
mov
add
fisubrs
add
pop
popf
daa
outsl
cmp
cmp
add
dec
add
lret
add
mov
outsl
pusha
enter
shrl
int3
addl
std
fdivrs
test
andb
push
xor
stc
ret
sub
lods
inc
ret
mov
add
incb
bound
cmpsb
jle
outsl
sahf
loop
mov
push
sahf
sahf
ja,pn
mov
mov
cwtl
sahf
jg
cmp
std
js
xchg
jne
add
add
lock
cmc
sub
jge
sbb
mov
out
jmp
jp
stos
jmp
js
pop
add
test
xchg
pop
jecxz
cli
adc
out
jle
inc
std
out
sub
pop
pop
js
mov
dec
or
jg
cmpsb
and
rclb
jns
test
std
pop
shrb
add
sbb
add
cmp
add
int
pop
sbb
push
jb
cmp
add
int3
dec
xlat
mov
insb
cmp
popa
add
add
adc
inc
adc
add
fists
sbb
and
mov
inc
int
push
adc
adc
cwtl
add
push
fxch
adc
xor
inc
dec
sahf
jnp
push
lock
push
inc
xchg
flds
cli
xchg
inc
lret
xor
out
inc
xchg
add
and
addl
cmc
jnp
addr16
mov
add
xchg
sub
cmp
add
sarb
movsl
add
in
sub
sub
add
add
mov
cmp
adc
push
xor
sahf
out
fidivrs
add
loope
pop
pop
pop
or
dec
aam
add
cs
cmp
add
arpl
loop
lcall
imul
orl
jnp
add
int
out
or
je
movsl
fs
add
add
pop
popa
inc
ret
mov
stc
pop
jle
push
movsb
outsl
hlt
mov
in
test
mov
xchg
push
add
in
xchg
add
lods
push
test
sub
addr16
les
and
and
fiaddl
flds
xor
jg
xchg
fwait
add
std
bound
in
popf
add
in
or
xor
mov
sub
pop
shr
and
imul
pop
test
sub
mov
call
jmp
shr
or
cmp
jne
jo
mov
arpl
mov
andl
cmc
in
ret
dec
sub
jb
push
add
stos
add
mov
xchg
add
repnz
xor
or
inc
mov
jmp
and
inc
mov
sub
pop
test
ret
sub
xlat
push
and
push
mov
jge
adc
lock
add
stos
out
cwtl
dec
std
pop
mov
imul
mov
push
mov
out
imul
jp
incb
stos
movsb
push
out
and
adc
add
and
cmp
lcall
inc
in
loope
push
mov
call
and
cmc
daa
push
jp
adc
ljmp
pop
add
push
inc
jl
mov
lea
add
push
insl
xor
fstpl
and
add
in
jmp
mov
lock
add
xchg
movd
xchg
adc
mov
aad
pop
add
sbb
add
mov
int3
jno
aas
out
scas
jge
mov
aad
stos
dec
int3
cmp
add
jle
loop
sarb
fsts
push
pop
cmp
loopne
add
xchg
dec
and
push
lahf
cmp
imul
xor
js
call
jb
xchg
enter
adc
push
sbbl
outsl
mov
xchg
cld
add
or
and
arpl
add
add
xor
imull
and
fimuls
ljmp
cwtl
cmpsl
pop
mov
add
cltd
pop
stc
mov
inc
mov
sbb
push
jne
inc
pop
mov
mov
mov
stos
jl
and
adc
add
adcl
mov
push
or
bound
lahf
adc
push
jmp
testl
mov
fmull
in
fnstsw
mov
add
push
inc
popf
mov
xchg
lods
pop
add
lods
scas
sahf
loop
filds
and
lcall
cltd
add
imulb
bound
jmp
popa
add
mov
hlt
cmp
add
shrl
jns
scas
push
and
test
test
call
add
xchg
adc
xchg
xor
orb
cmp
jno
xor
cmc
cld
sub
test
mov
mov
adc
mov
push
out
add
in
scas
data16
pop
imul
xchg
add
mov
js
fnstsw
xor
pusha
fstpt
outsl
push
fmull
js
mov
mov
mov
not
scas
and
xchg
mov
add
dec
or
inc
movsb
sub
sub
add
lds
add
loope
xor
mov
inc
add
outsb
data16
push
mov
xor
fisubrs
jmp
and
sub
push
mov
inc
cmp
in
add
aam
aam
add
std
sbb
fsub
ja
fiadds
aad
sbb
inc
add
inc
arpl
xchg
lret
adc
movsl
out
and
sub
add
jnp
into
jo
stc
lods
xlat
test
fstps
jo
lock
aas
jno
lods
pop
add
mov
imul
inc
push
mov
sbb
mov
into
cwtl
loopne
pop
icebp
pop
cltd
dec
inc
add
aas
movsl
push
popa
lods
add
dec
add
push
scas
xchg
add
rolb
dec
enter
lods
loopne
sub
pop
iret
xor
aas
mov
mov
int
cli
movsb
movsl
xor
mov
cs
flds
cltd
mov
movsl
jns
xor
dec
loopne
dec
ret
add
and
nop
xor
pop
jmp
jne
scas
jge
leave
fcomps
faddl
add
mov
call
rcrb
out
bound
cmp
add
in
lock
dec
insb
out
sub
dec
insl
and
xchg
test
jae
sbb
mov
add
fcmovnb
icebp
add
fldl
fcoml
ss
js
add
sub
mov
inc
fiadds
sbb
dec
loopne
stc
aas
shlb
jl
add
jae
lcall
add
xchg
add
mov
add
mov
push
fiaddl
pop
outsb
sbb
cs
push
mov
test
dec
stos
xchg
pop
addl
cmp
add
cmpsb
mov
fadds
dec
dec
inc
fs
mov
or
pop
movsb
icebp
or
adc
leave
cmp
xor
sbb
push
rolb
enter
push
fadds
push
sub
cmovno
xor
xor
jp
jp
cmp
sub
ret
push
cmp
mov
es
inc
outsb
add
push
repz
jns
mov
adc
enter
ja
aad
or
insl
outsl
ret
add
scas
scas
jae
inc
lcall
mov
mov
stos
lcall
or
add
cmc
or
add
cmpsl
mov
add
sti
lods
enter
insb
jns
cs
xchg
add
pop
test
xchg
inc
addl
jecxz
out
mov
hlt
xchg
cmc
je
add
cld
aas
sahf
daa
lcall
jmp
mov
jmp
mov
add
mov
cmc
adc
mov
add
mov
aas
mov
xchg
mov
and
mov
cld
test
movsb
mov
pop
shll
add
sub
adc
add
je
pop
cmpsb
push
out
ljmp
push
jmp
mov
add
mov
xor
mov
jecxz
pop
add
or
sbb
jo
mov
movsb
pop
adc
movsl
repnz
in
sub
notb
add
xchg
add
out
mov
fsts
mov
inc
cltd
add
pop
add
push
std
mov
aaa
xchg
adc
hlt
daa
mov
hlt
lods
mov
test
or
mov
cli
mov
push
rcrb
cmp
jl
add
scas
mov
mov
call
mov
xor
mov
xchg
dec
lods
nop
jns
pop
jo
cmpsl
mov
mov
sub
test
add
outsb
add
ss
cmp
add
inc
mov
decb
mov
push
movsb
add
xchg
and
lds
mov
adc
mov
xor
ret
fdiv
mov
ret
repnz
lahf
push
out
imul
int
into
or
iret
mov
sti
popl
out
out
add
pop
xchg
mov
mov
pop
test
aaa
xor
cmpsl
aas
cmp
fwait
add
push
outsb
daa
fsubl
dec
xor
mov
cmpsl
dec
lods
sub
fimull
pop
mov
xchg
jl
mov
lods
test
add
lods
adc
dec
imul
add
add
insl
add
pop
inc
add
call
hlt
add
sbb
xor
cmp
imul
sub
mov
xchg
ljmp
jmp
push
mov
add
mov
mov
add
add
or
xchg
fidivl
add
je
ror
push
jo
dec
leave
enter
add
pop
shl
pusha
rcr
imul
in
mov
push
cmp
sbb
xchg
faddl
add
sti
aad
jns
xchg
imul
rcll
loope
lods
addr16
out
jno
jl
pop
mov
andb
dec
xchg
adc
add
mov
add
orb
cmpsb
pop
daa
stc
ret
lret
hlt
aam
int3
cmpsl
fildl
iret
jg
aaa
out
enter
les
mov
insl
cltd
pop
out
clc
add
push
addr16
jecxz
cmc
scas
xor
jae
add
add
call
inc
sub
mov
jo
jmp
lods
pop
lods
add
lahf
or
mov
test
daa
sti
add
clc
xlat
dec
cltd
out
fidivl
add
push
push
pushl
sbb
mull
fwait
sbb
add
pusha
popf
cltd
outsb
push
movl
pop
add
push
lds
mov
jnp
pop
mov
xlat
jge
addr16
add
ss
jb
dec
outsb
pop
mov
cmp
inc
test
push
cltd
add
dec
sti
and
mov
imul
inc
add
mov
sbb
xor
pusha
fldl
lcall
fldl
sub
ficoml
call
add
mov
xor
push
cmp
mov
push
sbb
pop
test
and
lahf
scas
add
scas
out
jmp
add
sbbl
cwtl
pop
sub
or
repz
mov
lret
push
lret
mov
popa
insb
fiaddl
imul
inc
cmp
sub
rcrl
sbb
adc
xorb
inc
mov
add
lahf
cltd
add
xchg
add
dec
push
and
clc
adc
add
repz
push
pop
aad
mov
add
bound
ss
movsl
aas
push
cld
pop
dec
add
jae
cmp
cmp
pop
cmpsl
lea
add
jo
cltd
fwait
loop
jae
push
add
aad
mov
cmp
dec
xchg
sub
shlb
fisubs
jle
jne
adc
dec
sub
inc
push
mov
ficoms
cmc
add
mov
push
in
xor
fiaddl
pop
add
cmp
inc
in
fwait
add
scas
loop
addl
dec
jl
mov
cltd
xor
inc
dec
and
add
clc
add
add
sbb
push
add
daa
jbe
add
add
add
andb
jecxz
xor
add
sarb
or
dec
push
sahf
push
adc
mov
jecxz
pop
mov
push
jg
clc
jb
sbb
pop
fsubrl
pop
cmp
inc
and
inc
sbb
addl
verr
imul
lahf
outsb
add
movsb
cmp
mov
mov
cmpsb
cli
cld
cmp
adc
fisubl
adcl
cmp
scas
lret
mov
pusha
sbb
cmp
xchg
popa
inc
xor
mov
dec
hlt
add
and
xor
dec
and
pop
aam
sbb
movsl
add
push
cmp
dec
loop
add
in
fs
popa
in
inc
push
add
xchg
test
dec
add
and
aas
inc
imul
in
pop
add
mov
lcall
lock
sub
faddl
add
les
pushf
cmp
sub
pop
add
dec
jo,pn
out
aad
xchg
add
stc
xor
cmpsb
sub
add
adcb
ds
dec
xor
nop
test
mov
jg
push
mov
cmp
pushf
and
mov
sahf
aad
add
jl
andb
sub
mov
ljmp
push
dec
aas
mov
out
jno
sub
jne,pt
adc
popf
dec
movsl
nop
inc
sub
inc
mov
xchg
pop
push
ja
add
aad
jle
and
xor
add
adc
inc
out
add
inc
pop
pop
insl
popa
movsl
cwtl
pop
add
add
sbb
xlat
jb
mov
cmp
and
xor
adc
loope
out
jecxz
test
rcrl
add
mov
mov
in
pop
mov
pop
jl
std
cmpsl
sub
and
fbstp
jb
add
aaa
mov
inc
mov
jbe
dec
int
cmp
ret
inc
sub
addb
mov
pushf
cmp
pop
pop
or
jl
mov
pop
popf
iret
inc
test
mov
insl
mov
iret
out
xchg
pop
cli
out
lcall
jne
cmp
rolb
sub
mov
inc
adc
xchg
outsl
add
or
cmpsb
jb
rorb
pusha
imul
rcrl
imul
imulb
or
mov
xchg
mov
or
xor
andb
pushf
sti
jge
dec
mov
sar
dec
add
verw
popf
sbb
lea
cs
pop
mov
sub
pop
ljmp
fwait
idivb
lock
xchg
xchg
mov
add
outsb
jo
adc
sub
pop
setae
loopne
js
call
mov
xchg
add
hlt
mov
mov
sbb
mov
mov
adc
pop
jmp
inc
dec
xchg
repz
cs
add
jmp
ljmp
lock
or
sub
push
sbb
leave
xor
sub
add
lods
iret
cmp
mov
push
scas
sub
adc
shrb
add
lods
pushf
cmp
push
add
inc
inc
or
add
lahf
and
aad
sarl
hlt
scas
in
lea
xchg
xor
sbb
add
gs
call
push
xlat
into
call
mov
xchg
xor
sub
add
add
and
repz
mov
ljmp
test
jp
inc
xor
xchg
outsl
mov
jl
decl
add
add
lock
push
mov
push
mov
cmp
lods
iret
mov
mov
mov
and
ret
scas
or
rcrl
lahf
and
add
test
add
add
inc
gs
xor
pop
sahf
test
inc
push
inc
pop
scas
add
push
test
add
push
in
hlt
movsb
or
out
sbb
cmpsl
xchg
iret
int3
push
jp
add
adc
xor
pop
enter
leave
add
lods
cmpsb
jns
fnstsw
into
cli
add
addb
or
aam
int3
fildll
stc
inc
mov
add
and
jne
outsb
test
mov
je
ss
or
lods
rol
mov
cmp
and
xchg
push
jmp
ror
movsl
add
mov
or
pop
mov
pop
ret
add
xor
jb
addl
push
mov
incl
subb
inc
jns
jg
push
mov
cli
lods
jae
dec
lret
cmovae
xchg
cmp
xchg
jb
pusha
rcll
dec
xchg
and
add
jg
push
push
insb
xor
clc
dec
cmp
jae
push
xchg
cli
lahf
adc
sub
xchg
cmc
add
ret
xchg
jae
push
lds
add
mov
add
cmp
jbe
inc
sbb
mov
int
xor
pop
inc
cltd
cmp
cmp
push
add
sbb
mov
adc
sub
pop
push
mov
divb
add
cmp
dec
jge
jl
push
or
dec
ja
cmp
mov
imul
xor
in
adc
and
je
andb
jecxz
mov
loop
or
stc
pop
adc
add
out
repnz
fs
jae
lret
add
lea
pop
mov
add
pop
testb
and
fwait
out
add
mov
imull
dec
clc
iret
jmp
and
add
sub
push
add
mov
test
std
repnz
push
loopne
sbb
add
xchg
out
pop
orb
add
flds
fdivrs
sub
out
or
out
mov
and
add
sbb
cmp
lcall
push
aaa
insb
push
inc
mov
out
add
push
sbb
add
out
data16
jmp
repnz
invd
outsl
outsb
and
sub
pop
cmpl
add
aas
or
mov
mov
jne
lret
push
add
testb
scas
push
cmp
cmpsl
pop
mov
add
cmpsl
fwait
sub
in
jb
mov
mov
addl
jns
xchg
jecxz
xor
lret
jae
arpl
mov
bound
cli
xchg
add
or
add
pop
pop
and
scas
popf
add
lods
jge
inc
add
repz
pop
add
add
fnstsw
ds
sub
adc
jne
add
pop
cmpsl
cwtl
es
sub
aaa
test
mov
in
ljmp
add
incl
mov
add
ret
ret
xlat
mov
in
fcoml
push
mov
shlb
xor
cmp
ret
mov
in
cmpb
push
scas
dec
mov
shl
rorl
jno
jns
je
lods
add
adc
adc
xchg
roll
xlat
add
add
fnstsw
add
push
ja
push
add
fists
add
aas
ja
or
je
ljmp
icebp
add
mov
lret
push
add
aaa
add
mov
pop
out
jbe
add
mov
cmp
cmp
ss
jmp
mov
rolw
add
ret
xchg
add
pop
jne
cmp
ret
pop
add
popa
mov
jle
pop
add
jge
push
mov
shlb
push
movl
nop
dec
push
test
add
add
pop
filds
mov
ljmp
jmp
pop
add
mov
cmp
add
pop
sub
mulb
push
and
or
sbb
pop
test
clc
mov
and
xchg
faddp
sbb
jmp
gs
jae
cmovp
stos
out
cmpsb
add
push
mov
rorl
mov
mov
xchg
jle
cmp
add
inc
add
ja
dec
or
pop
out
loope
push
dec
call
ljmp
add
pop
mov
pusha
sti
add
xor
mov
push
pusha
jb
and
add
outsl
add
dec
je
es
xchg
xor
pop
stos
fsubl
out
sub
xor
lahf
sub
or
negb
les
jne
enter
pop
add
hlt
add
push
push
inc
loopne
jae
cmpsb
xor
dec
mov
aad
mov
and
inc
add
add
mov
imul
sarb
or
int
mov
adc
xor
adc
add
and
pop
add
push
fucomp
fwait
ljmp
pop
xlat
pop
jg
out
out
fsub
sub
inc
adc
and
aas
push
lds
int3
add
add
mov
add
sub
sub
adc
lds
add
dec
mov
testb
jae
neg
sbb
int3
dec
mov
iret
dec
xchg
stc
pop
jle
dec
je
test
mov
fisubl
imul
mov
sub
pop
aaa
add
ljmp
add
loop
lret
je
sbb
add
aad
and
add
cmp
jl
addb
add
cmpsl
ljmp
arpl
and
movsb
les
push
push
or
je
jne
add
sub
daa
incl
out
add
xchg
mov
add
stos
ret
adc
icebp
or
xor
push
int
leave
jns
cmp
push
mov
add
xor
jle
add
repnz
pop
in
pop
cli
out
xchg
int3
pop
ja
lret
push
jmp
mov
cmp
fs
cmc
add
cmp
fistps
pop
dec
out
dec
insb
fistpl
push
adc
mov
dec
mov
sbb
daa
out
filds
js
xchg
dec
int
jmp
pop
in
dec
jle
lea
or
mov
push
dec
lods
mov
add
or
jb
add
push
jbe
add
add
sub
xor
out
inc
sub
addr16
ja
mov
add
and
cmp
mov
ja
testl
hlt
jp
and
lods
std
into
pop
inc
outsb
mov
mov
xchg
bswap
pop
imul
or
fstpl
xorl
orl
sti
sub
push
lret
jecxz
lret
jne
inc
adc
add
xor
inc
mov
js
dec
push
fsqrt
add
xor
pop
insb
xchg
sti
mov
xchg
addl
sarl
xchg
jo
jns
popl
dec
das
lcall
add
and
adc
ds
push
jge
rcll
mov
mov
sbb
inc
jne
cli
ss
push
mov
and
add
leave
inc
testb
jbe
or
xchg
int3
fadds
push
jne
cmp
or
loope
jo
pmulhuw
cmp
add
sahf
fisubrl
daa
outsb
ds
filds
repnz
push
add
sarb
jnp
mov
sbb
das
dec
fcoms
divl
and
mov
xchg
bound
mov
insb
int
pop
xor
push
insb
pusha
mov
cld
cmpsb
or
and
mov
ljmp
push
add
testl
add
sbbb
mov
sub
push
mov
or
push
sub
aam
repz
pop
and
pop
mov
add
repnz
ljmp
js
pop
out
pop
sub
xorl
add
enter
push
call
xchg
or
sahf
or
xor
add
jae
xor
scas
cwtl
jmp
add
dec
fwait
ljmp
add
lret
mov
add
adc
add
pushf
addr16
add
inc
xchg
inc
adc
xchg
pop
push
shl
ror
xchg
flds
pop
push
xchg
ficompl
int3
sub
mov
test
add
mov
push
add
pop
add
push
flds
imul
jl
inc
push
push
repz
mov
outsb
cmp
xchg
je
add
test
les
cmp
mov
cmc
mov
and
lret
pop
and
clc
call
popa
jmp
out
jns
stos
sub
adc
add
mov
fsubs
mov
sti
lock
mov
push
mov
mov
repz
adc
xor
lea
imul
repz
sub
movsl
pop
lcall
add
sbb
outsb
js
sbb
mov
push
mov
inc
stc
test
clc
int
loop
push
and
xchg
xchg
test
add
ficoml
js
test
inc
imul
testl
sub
xor
and
ret
and
mov
push
nop
leave
jno
cld
cld
popf
dec
pop
movsl
nop
stos
xlat
int
repnz
push
xchg
mov
sbb
or
pop
rcrl
in
xchg
lcall
mov
popf
sub
or
orl
and
dec
and
push
std
mov
jb
cmp
test
cmpsb
je
popa
je
inc
pop
out
dec
add
mov
fs
scas
incb
aaa
cwtl
mov
or
shrl
jo
fbstp
sbb
dec
dec
inc
lods
cmpsl
repz
add
cmpsb
inc
or
aaa
in
mov
cmp
pop
into
sub
xchg
or
adc
mov
sub
push
out
stos
data16
add
mov
in
mov
mov
jge
test
aam
out
adc
repnz
fistpl
add
cmovg
lcall
mov
movsb
bound
es
add
add
pop
mov
dec
sbb
add
add
push
insb
lods
lods
jle
daa
lret
js
dec
push
je
loope
sub
mov
cmpsl
push
loop
jo
int
xor
loopne
fisubrl
add
loope
lods
xchg
stos
add
das
insb
sbb
adc
mov
cltd
out
add
das
push
sbb
daa
jecxz
out
daa
pop
add
dec
in
cltd
outsl
popa
hlt
add
add
or
adc
mov
addl
pop
shll
xor
push
or
divl
repnz
js
lods
add
dec
inc
adc
inc
clc
pop
sub
add
dec
inc
pop
mov
xor
bound
and
jbe
add
add
inc
stos
dec
adc
arpl
pminub
ljmp
sub
xchg
sub
add
out
mov
cltd
push
jbe
and
add
pop
xchg
jo
push
gs
sub
rorl
jo
sbb
add
sub
pusha
mov
call
scas
movsb
add
pop
outsb
xchg
mov
lock
push
rcl
hlt
pop
fcmovu
add
stos
mov
and
stc
mov
imul
mov
jno
jp
jmp
push
add
lods
mov
les
xor
gs
int
mov
outsl
push
xchg
lcall
mov
aad
icebp
lods
loopne
mov
mov
inc
add
add
jge
negl
or
jae
and
je
leave
enter
add
cmp
subb
dec
adcl
shl
push
subl
dec
stos
je
jnp
out
adc
addr16
mov
xchg
test
inc
add
xchg
dec
xor
or
cmpsl
out
fs
cld
idivl
sub
or
std
adc
mov
pop
ret
push
pop
in
imul
xor
and
mov
dec
dec
stos
cmpsb
cmp
mov
pop
loope
inc
lds
in
xor
adc
lahf
pop
cli
push
xor
cwtl
incb
cmp
dec
xor
push
cmp
adc
loope
testb
fiadds
ss
hlt
pop
loop
outsb
test
and
inc
adc
pop
push
cmc
jp
test
inc
into
cmp
mov
add
or
add
movsb
pop
mov
rclb
and
aad
jb
mov
push
outsl
cmp
adc
in
mov
jle
push
jb
add
cmpsb
sub
shl
fildll
add
outsb
shrb
shlb
add
and
or
popa
out
dec
rolb
mov
add
add
movsl
div
cmpb
and
lcall
push
insb
ss
jle
mov
or
arpl
push
lahf
call
add
lcall
mov
sub
dec
cmc
out
add
cwtl
fiadds
inc
dec
divb
aas
mov
lea
mov
add
xor
out
or
fcomps
lahf
mov
fnstsw
arpl
popf
or
dec
push
loopne
lahf
loopne
and
in
add
es
stos
inc
in
add
pop
nop
ficomps
xor
mov
add
add
insl
push
in
cmp
mov
add
mov
aam
xlat
lds
adc
dec
loop
lret
shr
data16
push
pop
std
push
push
mov
push
mov
add
jae
popl
nop
mov
jbe
jno
pop
xlat
imul
fiaddl
std
insb
sbb
jno
cmc
push
jmp
inc
jb
dec
les
test
cwtl
xchg
insl
inc
je
pop
roll
cmp
ret
mul
pop
cmp
imul
xchg
cmpsl
add
out
add
aam
arpl
movsb
add
push
dec
adc
add
sub
clc
aaa
mov
dec
add
lret
data16
jle
xor
jb
js
cmp
jb
lock
add
lret
and
jns
add
divb
mov
add
mov
out
mov
pop
add
push
ret
jle
mov
and
js
mov
dec
adc
xchg
sub
ss
cmpsl
shrb
js
or
jl
lahf
xchg
pop
push
imul
jae
lahf
popf
cmc
and
cmp
lods
aaa
sbb
inc
mull
std
ds
mov
cmp
add
fisttpll
push
loop
and
dec
movsl
cmp
jle
out
adc
add
add
jb
dec
movsb
shll
add
pushw
pusha
mov
sub
addr16
cmp
sub
add
adc
or
lahf
add
in
and
lea
shrb
mov
cli
cmp
or
adc
sub
les
aas
mov
dec
mov
movsl
std
push
imul
das
jl
ljmp
aad
add
notl
dec
dec
xor
xchg
cmp
push
in
jp
add
js
jns
sbb
lock
jne
add
orb
shrl
mov
pop
popa
imul
add
dec
sbb
cmp
inc
dec
inc
aaa
out
inc
dec
insb
push
cmc
pop
daa
xor
andb
ret
sub
lock
bound
add
inc
cmp
ds
addr16
push
jp
add
jle
xlat
xchg
jge
jp
gs
sub
mov
test
push
test
push
add
mov
pushf
cmp
and
xchg
iret
fiadds
jp
popa
imul
shrb
add
mov
lods
lret
dec
jmp
ja
adc
add
rorb
xor
add
gs
cs
imul
and
push
movsl
test
pop
lock
out
add
add
nop
mov
add
cmp
pop
mov
xor
loope
test
pop
inc
outsl
clc
iret
xchg
xchg
cmp
test
add
fwait
mov
jp
add
pop
outsb
xor
add
jno
daa
mov
popf
mov
ret
cmpsb
fcomi
push
xchg
clc
jg
dec
cmc
rolb
pop
imul
xlat
je
int
inc
push
push
es
or
gs
pop
sbb
add
inc
mov
push
lea
xchg
roll
add
push
add
pop
divb
add
jae
lock
and
add
sti
pusha
mov
leave
sub
mov
dec
pop
sbb
mov
inc
in
add
sahf
cmp
push
dec
lret
or
or
inc
xlat
and
cltd
dec
dec
call
xor
rclb
add
mov
add
loopne
pop
ret
hlt
das
arpl
fnsave
roll
rcl
mov
cmp
out
mov
ljmp
add
inc
mov
sub
mov
mov
xchg
aam
loope
mov
mov
mov
add
or
inc
mov
out
data16
dec
cmp
mov
add
in
sub
in
fldt
jbe
loopne
xor
stos
sub
xor
sub
mov
aam
jp
pop
decb
ds
cmc
xchg
in
aaa
push
je
mov
add
dec
add
imul
adc
push
adc
adc
sub
cmpsl
mov
mov
dec
add
mov
mov
cs
xchg
int3
mov
and
lds
enter
mov
int3
mov
add
into
add
add
cld
mov
push
sbb
idiv
add
mov
sub
add
into
mov
dec
stos
loopne
sub
in
dec
popf
outsl
add
push
push
cmp
xchg
sub
jb
jmp
bound
push
add
sti
adc
add
jmp
pop
mov
aam
popa
and
sub
push
add
mov
dec
loop
mov
add
arpl
into
inc
lock
mov
pop
mov
push
xor
push
mov
mov
push
xor
data16
pop
jno
add
or
push
loop
out
cli
xor
fstps
outsl
dec
xlat
call
xor
push
inc
pushf
data16
icebp
testl
movsb
outsl
scas
mov
int
filds
jnp
leave
shrb
add
mov
adc
cltd
add
add
add
jbe
repz
mov
pop
xor
add
mov
lahf
fldlg2
lods
sub
ja
push
jbe
test
add
fs
outsl
shl
fsubl
test
mov
xor
lahf
dec
push
fcomp
sub
fstp
pop
pop
adc
mov
xchg
arpl
xchg
imul
lret
stc
arpl
mov
dec
xchg
push
pusha
lret
mov
pusha
dec
aas
fs
push
mov
in
inc
in
cs
int3
add
insl
in
outsl
mov
mov
pop
adcb
fmull
adc
neg
shlb
dec
clc
mov
leave
in
lds
pop
mov
movsb
ret
repz
mov
or
rcl
stos
into
lods
lret
aas
xor
loopne
and
lock
xchg
add
int3
push
enter
push
pop
adc
mov
xchg
dec
hlt
ss
sahf
add
add
mov
sbb
xchg
cmp
decb
lock
mov
mov
push
stos
loopne
xor
pop
add
pop
pop
loop
sbb
movsb
jnp
lock
add
add
and
popf
xchg
dec
dec
stc
test
out
add
add
inc
add
add
or
pop
fxch
enter
popf
data16
mov
add
nop
mov
jmp
pop
lds
mov
ja
stc
and
push
int
or
dec
outsl
dec
js
dec
push
es
mov
call
push
mov
fwait
bound
add
jecxz
outsl
loope
pop
insl
and
mov
cld
push
gs
or
xor
pop
fadds
mov
add
adc
sub
fiadds
orb
mov
call
and
aas
and
mov
add
jns
int
fimull
inc
push
sub
dec
xchg
add
cmp
mov
xchg
xlat
mov
inc
push
shll
into
push
pop
add
cmpsb
fdivl
push
mov
xor
add
subl
fsubrl
icebp
insl
mov
rorl
add
ss
lds
dec
adc
or
shl
imul
xor
jne
xor
pop
out
lods
mov
add
iret
cwtl
mov
andl
stc
cld
or
xchg
rcrb
add
add
lock
inc
dec
dec
xor
add
mov
mov
shrl
push
insb
pushf
stos
add
xchg
fs
or
mov
mov
add
lahf
pop
into
adc
and
xor
ljmp
add
ret
add
lods
and
out
inc
jle
cmp
push
add
jge
fiadds
lcall
sbb
or
pop
xchg
sahf
shlb
dec
aas
xchg
sub
push
adc
mov
inc
add
mov
mov
or
aas
loop
xor
aam
push
loop
sub
dec
movsl
lods
enter
push
sub
add
pop
mov
xlat
ss
push
cmc
pop
jb
ds
cwtl
add
dec
insb
les
cwtl
xor
cmp
xor
stc
mov
fucom
xchg
ds
repz
mov
inc
add
repz
sbb
js
test
push
adc
fwait
pop
fiadds
fs
add
sbb
push
test
add
loope
ret
daa
in
jbe
in
repz
jo
push
jl
and
xchg
add
add
leave
or
mov
adc
test
cs
mov
je
mov
mov
add
lret
inc
cmp
sbb
jle
push
lds
sbb
xchg
add
sub
jg
in
cmpsl
add
xchg
lahf
in
fcoms
ficoms
fadds
mov
xor
xchg
into
cwtl
in
cld
and
jns
cmp
inc
movsb
stos
andl
add
pushf
jns
and
xchg
push
adc
lock
push
ficoml
mov
xlat
repz
hlt
mov
in
cs
lahf
add
mov
push
push
add
add
push
pop
mov
test
jl
add
nop
push
inc
adc
xchg
in
mov
shlb
mov
je,pt
data16
and
daa
ret
or
dec
sub
cmpsb
add
nop
add
xor
jge
jae
xchg
mov
std
push
and
add
add
jo
lods
fcompl
cmc
add
add
mov
rcrb
andl
ret
es
add
ds
add
inc
popf
addl
adc
or
add
dec
xlat
push
xlat
mov
bound
lock
bound
jbe
addr16
das
add
and
idivl
or
pop
sbb
nop
push
add
pop
cwtl
add
out
mov
add
jmp
mov
push
in
repnz
cli
dec
xor
jno
sbb
or
dec
repnz
mov
fiaddl
pusha
push
and
call
xor
in
mov
add
roll
inc
aad
jmp
mov
imul
and
mov
fcomip
pop
loop
in
adc
sub
xchg
pop
xor
int3
in
jno
js
xchg
das
add
sbb
jl
jb
js
jae
push
xchg
lea
outsl
sbb
cmp
cmp
sbb
mov
sub
das
test
inc
mov
stc
shrb
or
icebp
aaa
inc
roll
xchg
push
lcall
push
xor
add
cmpl
incb
fstl
cld
jmp
mov
movsl
fcmovu
and
movzwl
in
negl
jb
ret
mov
ss
cmp
sub
enter
add
add
inc
mov
mov
sbb
aam
stos
rolb
add
data16
cld
mov
sbb
lds
rcll
in
sahf
fldcw
push
int
out
fisubs
xor
sub
leave
add
jp
adcb
or
pop
cmp
pop
cld
push
xchg
nop
in
aad
jmp
subb
in
data16
in
xor
mov
jle
inc
pop
pop
add
loopne
and
xor
and
cmp
pushf
faddl
std
stos
push
cmp
mov
and
daa
dec
jbe
add
push
and
inc
dec
jno
and
xchg
pop
add
and
push
aaa
dec
add
movsl
out
sub
inc
mov
add
out
pop
jge
mov
and
inc
mov
jge
xorb
ljmp
add
add
dec
push
in
sub
mov
rorb
push
jb
mov
js
iret
add
jne
lea
scas
pushf
add
ds
jne
push
bound
nop
lahf
aad
add
or
int3
lahf
aam
dec
push
cld
mov
jecxz
pusha
adc
int
xchg
cmp
jns
or
add
sbb
jge
scas
or
loope
fmuls
xor
mov
xchg
cmp
ret
negl
xor
stc
ficoms
pop
mov
xor
data16
sub
icebp
adc
sub
mov
int
jns
xlat
incb
pop
inc
mov
flds
daa
cmc
add
rcll
inc
xchg
rcrl
imul
imul
pusha
movb
jne
cmpl
push
mov
enter
mov
mov
inc
jl
or
mov
cwtl
lea
mov
push
ljmp
cmp
jecxz
test
adc
inc
or
dec
add
or
add
adc
repz
fcoms
cmp
sub
and
add
lcall
mov
cmp
jbe
je
leave
inc
push
lcall
push
lds
sbb
jo
jnp
add
lret
push
je
add
pop
out
mov
mov
mov
and
sbb
xor
xchg
push
or
pop
push
js
popa
imul
add
dec
test
fdivrp
cmp
test
xchg
inc
pop
sbb
xor
cmp
xchg
clc
push
jo
jbe
dec
aad
sub
inc
sub
jbe
gs
scas
mov
pop
rsqrtps
jmp
test
and
mov
add
add
mov
inc
mov
xorb
stos
aaa
pop
adc
shlb
dec
ljmp
adcl
dec
push
xchg
sub
cld
cmc
add
jne
inc
sbb
in
sbb
add
sahf
push
mov
mov
and
lea
out
out
shr
dec
lock
xor
sbb
sub
mov
ljmp
mov
push
sbb
loope
pop
mov
xchg
pop
fucomp
push
out
stc
gs
out
sbb
test
lret
mull
sti
lods
aaa
cmp
lahf
or
js
and
test
mov
inc
add
dec
call
fidivrl
mov
jo
std
or
xchg
pop
mov
lds
jle
add
aad
dec
cmp
cmp
lock
aam
fstl
mov
jecxz
push
jle
add
adc
xchg
or
ficompl
mov
pop
insl
add
cmpsb
add
add
dec
push
pop
sub
punpckhwd
pop
sarb
scas
testb
or
addl
les
and
jb
movsl
movsl
jnp
jnp
rol
aad
inc
lahf
fs
jns
inc
pop
mov
loopne
movsl
int
es
fisttpll
add
lret
jmp
xlat
out
add
scas
les
jge
pop
mov
xor
jp
sub
xchg
dec
or
loopne
xor
insl
mov
repz
add
xor
and
add
and
pop
addl
add
es
adcb
aad
int
xchg
shr
xchg
mov
mov
mov
inc
pop
jg
xor
xchg
or
rolb
je
add
add
mov
add
rcrl
loopne
outsl
add
in
popl
test
jge
lret
nop
lods
push
sbb
or
add
cwtl
mov
sub
cwtl
mov
out
xchg
repz
adc
jo
sbb
ficompl
inc
ja
inc
mov
rorl
stos
enter
fstp
test
shll
inc
jo
sbb
push
sub
jnp
orb
call
xor
or
add
in
rcrb
xor
sbbl
popf
add
pushf
in
inc
loop
add
mov
xchg
add
add
sahf
xchg
push
xorl
push
sbb
incb
xor
jo
clc
add
pop
test
push
push
pop
xor
mov
mov
sbb
or
jnp
or
int3
adcl
sahf
ja
rorl
movsb
add
in
leave
mov
ds
enter
loope
leave
pusha
inc
inc
jecxz
jbe
loopne
test
push
or
das
shrl
pop
inc
jp
and
les
add
iret
inc
inc
rcl
fldcw
fs
lods
mov
and
push
lcall
sbb
cmp
sti
or
push
add
pop
push
adc
aad
enter
sub
or
push
cmpsl
lcall
clc
mov
cmc
shll
fiadds
adc
push
pop
js
lret
ss
stc
add
sarl
in
add
pop
sbb
movsb
add
nop
into
out
sub
mov
loopne
xchg
and
jmp
mov
add
cwtl
lcall
fstl
mov
mov
sub
cwtl
and
xchg
jl
jecxz
out
xor
pop
and
stos
dec
push
pop
mov
jecxz
outsl
mov
in
out
lcall
inc
push
and
jge
dec
push
xchg
dec
movzwl
add
push
scas
adc
out
mov
mov
push
arpl
jbe
enterw
arpl
push
push
repz
call
jnp
ds
dec
outsb
add
lcall
fistpl
fcoml
add
push
jns
jle
test
lock
pop
sbb
ja
sub
fnsave
roll
ja
pop
adc
jge
mov
iret
dec
stc
stc
sti
sbb
mov
cmp
cmp
out
movsb
test
jns
and
xor
addb
push
push
wrmsr
add
cbtw
xor
scas
popa
lock
mov
jle
push
or
mov
mov
add
and
setb
pop
test
in
stos
pop
push
xchg
add
repnz
iret
scas
in
add
pop
dec
mov
ja
pop
mov
jge
adc
lret
add
mov
mov
and
lea
setb
ret
ret
jge
daa
in
mov
nop
repnz
add
push
mov
or
xchg
fildl
in
popa
fiadds
xor
mov
push
and
mov
adc
xchg
std
call
xchg
jnp
sub
adc
and
add
mov
ret
add
fistpll
jbe
sub
jp
into
repnz
testb
mov
jnp
xor
nop
and
in
sub
jo
sub
sbb
adcl
pop
stos
add
inc
pop
add
pusha
add
ficompl
mov
xor
subl
in
cs
aam
push
js
add
movsl
andl
mov
icebp
roll
lcall
jno
outsl
add
or
add
cmpsb
repz
jb
daa
and
push
fbstp
mov
in
jo
loopne
andb
int3
jge
enter
add
push
xor
lret
mov
daa
and
jge
mov
push
imul
add
dec
lahf
bound
add
add
imul
mov
push
xchg
mov
loope
ret
add
pop
cmc
pop
inc
rolb
sti
mov
rcll
imul
ret
int3
loopne
ja
add
add
add
pop
icebp
lds
repnz
das
add
xchg
sub
movsb
xor
cmp
mov
sbb
aad
sub
fstps
test
xor
cmpsb
push
sarb
fsubrl
je
push
mov
aad
int
mov
jge
fimuls
mov
notl
xchg
in
mov
cmp
mov
mov
popf
jge
lret
imul
lds
rcrl
push
imul
and
daa
or
mov
rcll
cs
xchg
push
jl
dec
daa
dec
dec
clc
lret
cmpsb
scas
fildl
add
cwtl
and
pop
mov
mull
arpl
cs
dec
bound
into
test
lods
inc
mov
fisttpl
fldenv
add
add
mov
jno
test
sti
ret
out
ret
lahf
add
shlb
and
aaa
scas
shlb
xor
orb
push
jg
push
dec
lcall
fstl
add
imul
ret
or
inc
add
or
mov
sahf
mov
push
repnz
add
xor
adc
out
in
xchg
jb
leave
jmp
test
lods
rcrl
leave
mov
dec
test
jmp
mov
mov
testl
mov
push
popf
lret
mov
pop
clc
add
je
add
stc
add
or
push
cltd
gs
fwait
pop
and
rorb
or
add
sbb
or
jbe
sbb
hlt
xchg
aaa
popa
mov
push
fdivrp
sub
and
int
jb
scas
lods
push
jmp
stos
in
outsl
push
mov
push
test
xchg
stc
je
dec
xchg
and
or
jne
ror
jno
mov
and
lret
pop
call
popa
pop
stos
movb
push
loopne
loop
pusha
sbb
xor
call
aam
fnop
iret
stc
pusha
andb
adc
xchg
in
sbb
cmp
add
jge
xor
out
push
lret
jb
dec
int3
mov
mov
mov
or
scas
jl
xchg
pop
mov
jno
jl
mov
dec
pop
add
jnp
bound
es
cmp
stos
mov
insl
add
int
add
add
cwtl
adc
ret
test
add
mov
add
aaa
or
jo
lea
iret
add
jo
rcrb
dec
or
add
cmpl
cmc
add
jo
pop
add
lret
inc
dec
add
or
addl
scas
bound
cli
add
sbb
sub
or
push
and
loope
aad
mov
xor
cs
sub
sub
mov
ss
add
stos
add
pop
adc
push
ret
xor
je
cmp
adc
xchg
sub
push
loop
dec
addl
or
int3
push
cmp
imul
mov
xchg
pop
js
dec
jae
insl
repz
sub
lahf
ljmp
adc
jp
push
jmp
push
inc
icebp
push
add
xor
int
daa
inc
mov
mov
data16
pop
in
sbb
xor
inc
jl
cmpsl
jnp
xor
pop
pop
add
or
xor
mov
push
add
arpl
fisubrl
sbb
add
add
sbb
mov
fdivl
shrb
neg
fists
mov
call
leave
sbb
add
mov
out
std
sbb
sbb
insb
out
mov
mov
stos
jno
ret
outsb
cmp
jg
movsl
pushf
je
push
and
outsl
sbb
cmp
std
cmpsl
in
int3
xor
or
xor
das
lret
pop
ja
sahf
sahf
add
cld
xchg
test
xchg
push
pop
pushf
mov
cmp
xorl
rol
in
ret
jb
dec
mov
dec
aam
add
mov
xor
cmp
pop
add
jg
mov
mov
jle
lahf
sbb
push
xchg
xor
lea
icebp
mov
add
nop
sarl
or
fsts
or
add
or
dec
push
pop
and
add
cmp
add
scas
mov
mov
add
das
in
add
repnz
bound
js
cmpsl
pop
mov
out
pusha
repnz
jae
add
in
inc
fidivrs
xchg
outsb
cmp
mov
sub
mov
add
repz
pushf
and
jno
pop
cwtl
xchg
push
xor
das
sahf
add
cmpsl
scas
mov
movsb
gs
mov
pusha
or
jnp
add
mov
xchg
pushl
mov
jnp
jmp
orl
pusha
shr
ss
cmpl
insb
nop
test
adc
jmp
mov
pop
sub
loope
add
adc
ja
mov
mov
and
insl
mov
je
ja
jp
mov
adc
inc
nop
ja
add
push
iret
or
addr16
push
ret
mov
pop
add
or
inc
inc
push
cmc
jne
data16
push
dec
add
lcall
movsl
das
and
decb
and
cmpsl
mov
out
push
jmp
popl
dec
outsl
cltd
stc
cmp
addr16
std
xor
in
push
or
push
jmp
rol
dec
aas
ds
call
pop
les
add
adc
xor
addb
and
int3
xchg
shll
sbb
in
pop
cli
or
jge
add
negl
jne
add
testb
mov
add
or
mov
dec
cwtl
data16
push
and
inc
inc
xchg
repnz
loop
arpl
xorl
mov
xchg
mov
cmp
scas
jle
add
dec
sub
mov
sub
lcall
xor
inc
jge
inc
push
add
push
mov
mov
rorl
fadd
add
fnstcw
in
mov
cmp
int3
cmc
pop
pop
stos
pop
mov
add
xchg
scas
arpl
add
dec
inc
addb
add
inc
mov
jb
add
fiaddl
sbb
add
fidivrs
jne
pop
push
sbb
jnp
add
adc
adc
sbb
and
dec
gs
add
insb
mov
jge
jecxz
jb
out
aaa
dec
inc
orb
jae
daa
mov
inc
sub
add
outsb
in
sub
and
iret
gs
xor
shl
stc
xor
sub
clc
test
nop
mov
sub
mov
in
add
add
pop
or
jecxz
repnz
add
sub
ljmp
jo
mov
jns
or
add
jno
cmp
add
add
rorl
mov
dec
cmp
xor
add
dec
in
pop
loopw
lea
movsl
test
add
outsl
rolb
mov
in
sbb
add
stc
and
inc
pop
cmpsl
add
lahf
mov
or
aaa
cmp
dec
cmpsb
scas
adc
cmp
addb
clc
mov
and
mov
loopne
sub
fldcw
sarb
and
mov
pop
jg
adc
mov
add
movb
aas
add
cs
jbe
aam
sub
mov
scas
xor
ret
decb
aaa
jb
mov
sub
xor
sti
and
inc
out
cli
lock
rclb
in
xor
mov
in
push
and
fildl
add
out
mov
xchg
and
in
add
fdivrs
add
in
xchg
push
add
sub
cmp
add
lea
arpl
jne
add
add
repnz
pop
pop
xor
xchg
xchg
inc
in
cvtdq2ps
push
out
test
sbb
aam
inc
dec
inc
loope
pop
sti
add
std
and
rcll
lahf
cmc
sub
mov
jb
xchg
hlt
int
test
inc
dec
clc
stos
ja
out
cwtl
mov
ficompl
push
add
or
out
lock
outsb
inc
inc
into
jge
jge
inc
mov
into
fwait
jnp
add
fcmovnu
lds
mov
mov
or
dec
int
mov
test
lret
out
pop
xor
mov
xchg
xchg
and
stos
push
adc
pusha
ret
dec
lea
in
cmp
icebp
in
jg
daa
xor
add
push
icebp
fs
ret
aam
daa
xchg
xor
sub
dec
out
sti
int
and
add
mov
sub
add
pop
add
cmp
mov
jne
pop
xor
inc
sbb
dec
xchg
jl
pusha
leave
cli
xor
mov
mov
cmp
xor
fildl
mov
xlat
stos
popa
push
pop
add
and
shl
pop
pop
mov
jns
test
clc
xchg
add
xor
sub
faddl
ss
inc
ljmp
mov
or
or
fisttpl
adc
sbb
pop
lea
sub
add
aam
add
push
in
mov
push
sbb
adcl
pop
cmp
and
mov
or
data16
dec
jb
inc
push
or
nop
pop
repz
fisubs
mov
xchg
add
adc
mov
add
insb
push
push
ret
push
out
add
xchg
ja
nop
out
add
xor
rolb
fdivs
mov
sub
mov
add
aam
leave
test
or
or
fsubl
dec
sbb
xor
std
add
clc
mov
test
and
add
cmp
sti
aam
dec
mov
pop
or
add
sbb
sbb
add
dec
cmp
xor
fbstp
lds
push
push
or
fistpll
in
jl
repnz
cltd
lcall
mov
xchg
mov
jb
inc
iret
or
or
dec
add
cltd
stos
scas
xchg
sbb
testb
sub
add
mov
jne
pop
and
insb
sbb
mov
or
mov
loopne
add
mov
jae
arpl
testb
sbb
add
add
stos
push
xor
jnp
icebp
pop
mov
ret
dec
xor
movsl
jbe
dec
push
jecxz
dec
pop
dec
dec
push
test
jp
mov
cmpsl
push
lret
mov
ja
dec
cmpsb
pop
lds
adc
sbb
fists
mov
outsb
add
adc
and
aaa
pop
iret
inc
je
jb
push
orb
jle
sub
ret
aas
repz
or
sbb
dec
fists
lods
mov
pop
in
cmp
lcall
testb
ss
push
cs
ds
mov
out
stos
pusha
lahf
fmull
in
adc
jecxz
cmpsl
test
pop
int3
cmp
add
mov
test
xor
inc
pop
jae
add
ja
pop
push
add
xchg
xchg
inc
jnp
fisubl
aas
add
negb
iret
add
push
sbb
add
push
jns
jle
sub
sbb
pop
ljmp
push
imul
mov
insb
and
mov
cmpb
xchg
mov
scas
xlat
inc
adc
pop
push
add
mov
iret
ret
out
mov
push
loopne
pop
push
jae
mov
inc
add
stos
out
popf
je
lock
loope
xchg
add
pop
imul
fst
addr16
mov
add
mov
call
pop
or
pop
xor
add
xabort
mov
or
pop
mov
fcmovne
jmp
sub
xchg
push
xor
popf
or
inc
mov
sbb
arpl
add
pusha
in
or
pusha
insl
int3
jns
arpl
jnp
add
add
xchg
jns
add
and
sub
mov
mov
loop
inc
imul
loop
sbb
adc
cmp
pop
push
ja
dec
ja
dec
or
sbb
movsb
mov
add
popa
jp
mov
inc
add
or
scas
enter
push
add
mov
loop
xor
add
adcl
mov
roll
arpl
daa
jns
sbb
leave
iret
int3
adc
or
mov
jg
add
add
mov
addl
sub
add
movsl
sub
cmp
int3
gs
push
xchg
push
fidivrs
add
outsl
push
cmc
loope
and
mov
dec
cmp
cli
loopne
popa
add
in
int3
pop
int
add
movsl
pop
add
popf
call
pop
int3
mov
mov
mov
jmp
icebp
mov
insl
scas
outsb
int3
jg
adc
pop
test
into
fidivs
mov
es
add
jmp
xchg
fcompl
inc
inc
push
mov
aam
fcoml
xor
roll
add
jb
xor
pop
mov
fs
inc
push
mov
rcrl
pop
mov
imul
fnstsw
out
nop
sub
lcall
popa
daa
inc
add
add
add
adc
add
dec
into
imul
stc
push
bound
and
or
out
addr16
loopne
in
out
ljmp
aad
sub
cs
test
fcmove
popa
jb
push
out
cs
pop
mov
rcr
or
sbb
inc
sbb
mov
mov
dec
mov
cmp
xor
jns
and
pusha
add
xlat
jo
test
loop
inc
jns
push
add
into
pop
xchg
add
mov
gs
addr16
mov
push
mov
mov
sbb
rolb
and
xchg
loope
add
push
add
add
arpl
mov
sbb
push
or
jno
add
into
xor
popa
popa
loopne
sub
leave
iret
add
fwait
sbb
lods
jb
ret
adc
inc
adc
cmp
insl
push
movsb
fwait
les
in
lods
add
cld
fistpll
mov
rcrb
lds
imul
xchg
add
shlb
into
inc
mov
std
add
in
adc
mov
push
add
imul
insl
add
cmp
add
push
sub
cmp
add
pop
cli
or
fdivrp
cs
sahf
dec
fcompl
add
ljmp
xchg
add
xchg
adc
inc
jo
add
jne
mov
mov
add
or
mov
inc
mov
xchg
in
in
ret
mov
add
icebp
cmp
xchg
fucomi
out
xor
mov
add
mov
out
hlt
and
insl
xchg
jmp
sub
inc
inc
das
and
jb
mov
movsl
das
repnz
in
add
xor
jecxz
jnp
add
insb
popa
icebp
cmp
cmp
add
nop
or
xchg
cmp
push
cmp
lods
sbb
pop
cmp
out
outsb
add
push
pop
add
sbb
add
lods
flds
sbb
xor
adc
test
xchg
icebp
adc
push
sub
or
add
roll
jecxz
int
arpl
xorb
je
mov
push
lods
cmp
cmp
pop
mov
add
arpl
daa
dec
ja
dec
adc
imul
aaa
loop
push
sahf
rcrb
add
or
inc
jge
push
sub
mov
test
add
mov
jp
pusha
or
int3
adc
jge
add
pop
aam
outsl
or
push
add
pop
add
rcl
lldt
cmp
inc
cmpb
sbb
push
and
adc
fwait
subl
jnp
or
pusha
cwtl
xchg
sahf
push
add
add
dec
fdivr
pop
test
inc
dec
shrb
xor
stos
xor
cs
pop
mov
and
jae
outsl
out
xor
xor
mov
mov
or
cs
cli
jge
int
mov
js
lods
movsb
adc
mov
inc
cmc
lahf
and
pop
aad
out
sbb
mov
cmp
adc
loopne
sbb
sub
repz
add
movsb
sub
fdivp
fucomi
mov
sar
pop
movsb
jecxz
out
test
decb
je
sub
add
push
fcompl
mov
pop
push
inc
or
dec
clc
arpl
shlb
sbb
pop
dec
push
ja
enter
lea
je
call
shll
cld
icebp
repz
or
push
sahf
cld
add
dec
stos
inc
xlat
sub
repz
add
inc
jne
clc
lods
push
add
dec
pop
test
loope
inc
dec
add
mov
lds
into
mov
xor
dec
mov
and
sub
sti
and
out
pop
sbb
xchg
add
mov
jmp
cli
pop
or
cmpsb
add
inc
dec
xlat
add
mov
int3
xchg
cli
call
outsb
push
aas
mov
pop
leave
gs
inc
cs
inc
mov
push
add
movsb
cli
pop
enter
pop
cmp
inc
gs
push
in
adc
call
inc
in
addb
xor
xchg
inc
cmc
pop
test
out
sub
mov
sbb
aas
pop
xor
es
out
test
fldt
lret
jo
add
or
push
inc
aad
add
into
mov
in
mov
add
adc
add
outsl
sub
add
add
mul
xor
mov
fidivs
xchg
pop
test
add
and
negl
popf
cmc
and
dec
mov
iret
cmpsb
mov
jno
mov
jmp
gs
fst
out
ds
mov
lret
dec
icebp
enter
pop
add
inc
nop
das
jmp
sbbl
rclb
rclb
addl
sub
es
push
test
xchg
jmp
pop
dec
xlat
ret
mull
dec
xlat
add
lea
outsb
mov
pop
add
inc
test
mov
cmp
icebp
lock
push
push
int3
sarl
xor
xor
cmp
sub
mov
inc
out
mov
pop
pop
test
dec
dec
stos
jae
adc
and
int3
cmp
loop
add
loopne
in
fadds
pop
sub
add
mov
imul
fildl
xchg
test
popa
insb
stos
sub
mov
cmp
es
loop
enter
xor
dec
dec
inc
mov
mov
data16
inc
roll
fwait
mov
arpl
add
jge
pop
add
adc
jg
push
sub
pushf
mov
add
mov
arpl
jo
add
mov
mov
je
aam
mov
insb
hlt
aam
inc
fadd
hlt
filds
pop
fbld
sbb
repz
repz
mov
add
mov
mov
lods
mov
clc
cmp
dec
pop
push
mov
lcall
mov
jno
cmp
mov
test
push
mov
cltd
adc
shl
decl
pop
add
add
jmp
es
fdivp
add
mov
jl
xor
gs
pop
add
xchg
cs
int
pop
sbb
lea
shl
mov
outsb
sbb
add
add
push
push
pop
or
out
inc
add
and
pop
mov
add
mov
aas
enter
xchg
jg
and
and
push
test
xchg
andb
lock
flds
mov
push
lret
fmuls
lahf
sarl
add
in
sbb
and
and
push
cwtl
pop
fidivl
leave
clc
lcall
insl
shrb
add
push
fdivp
add
ja
rclb
pop
fsubs
test
lock
sbb
mov
add
inc
add
xchg
push
jae
loop
ss
pop
out
add
xorb
insb
negb
mov
xor
mov
insb
movsb
xchg
mov
sub
sub
loope
faddl
insb
in
xchg
cmpsb
lods
ljmp
push
sarb
inc
add
sbb
aad
jle
add
inc
add
add
std
xchg
das
xor
rcll
jae
push
add
or
jno
xchg
loope
add
mov
jle
sub
lret
push
les
or
cmp
repz
inc
inc
add
push
lret
mov
jnp
inc
lds
pop
sti
cmp
xor
out
in
mov
daa
repz
lods
sub
adc
mov
rcr
add
add
filds
adc
mov
push
add
add
cld
outsb
out
jno
pop
repnz
mov
cmp
or
pop
std
cmc
add
loope
mov
push
ljmp
xor
push
add
adc
daa
mov
add
mov
pop
adc
mov
mov
outsb
shll
mov
shll
stos
mov
aaa
es
daa
mov
inc
ss
mov
out
mov
jns
adc
push
stos
sahf
push
add
aad
ficompl
mov
sub
pop
out
adc
movsb
std
mov
pop
inc
jno
or
stc
push
aas
pushf
es
and
cmp
and
fcmovnu
stos
jae
xchg
dec
cmpsl
add
push
sbb
or
call
jge
add
mov
add
push
mov
add
mov
jle
jb
mov
push
flds
add
fsubl
ret
add
fisubl
fstpt
aaa
sarl
mov
daa
pop
movaps
ret
adcb
scas
add
push
and
sbb
fxch
mov
fwait
pop
cmp
sub
xor
add
out
decl
shrb
jae
sbb
jbe
je
xor
and
xchg
mov
je
mov
out
fcom
sarl
push
jl
pcmpgtd
in
adc
add
call
dec
fiaddl
filds
dec
sbb
push
pop
in
add
add
in
cmp
jge
push
add
arpl
add
mov
add
adc
je
add
mov
movsl
push
mov
leave
subb
add
inc
xor
in
jmp
inc
mov
not
xor
fsubs
scas
cmc
lods
test
loop
xor
stos
iret
das
int3
aas
mov
add
clc
sbb
daa
adc
mov
add
negb
inc
or
add
add
std
stos
mov
daa
movsl
sub
test
outsl
mov
pop
nop
jle
add
add
gs
jle
ss
add
mov
dec
cmp
mov
fildl
fs
push
push
js
shll
adc
stos
mov
addr16
loope
aad
jo
add
leave
mov
mov
test
lcall
rcl
sbb
sbb
mov
add
call
sub
xchg
sub
rclb
js
scas
pusha
push
add
data16
adc
mov
add
add
sub
aas
repz
cmc
push
xchg
and
test
je
pop
mov
pop
add
sbb
xchg
imul
inc
dec
repnz
dec
dec
jnp
mov
jg
xchg
mov
insb
jge
std
dec
sbb
cltd
push
mov
and
ror
inc
add
add
pop
lret
scas
loopne
push
mov
ret
daa
mov
adc
out
add
scas
negl
pushf
fcmovne
pop
and
data16
outsl
popa
mulb
cld
fwait
and
or
pop
add
mov
push
jp
pop
nop
jp
sbb
movb
int
aas
ret
lahf
movl
push
in
sahf
add
jns
mov
icebp
pop
add
sub
scas
test
inc
outsl
cmp
pop
cmp
ds
lds
dec
stos
cmc
add
sbb
mov
adc
xor
push
adc
adc
outsb
aaa
push
mov
add
std
mov
std
add
xor
insl
pop
cltd
roll
and
xor
mov
xchg
push
mov
add
jge
push
arpl
push
mov
lds
lcall
adc
mov
mov
add
push
xor
push
push
or
add
mov
cld
sti
jnp
push
lret
mov
je
mov
push
xchg
add
lahf
aas
push
lea
mov
leave
test
pop
out
mov
and
not
rolb
cmp
push
adc
addl
filds
xchg
xor
inc
mov
push
bound
aaa
cwtl
sbb
jg
out
or
mov
pop
dec
lds
pop
dec
into
sub
stos
insl
bound
jne
add
mov
add
cmc
out
int3
clc
add
and
iret
and
or
add
xchg
pop
in
cli
into
or
sbb
inc
out
sbb
gs
jne
in
je
enter
add
fnstenv
les
push
sahf
and
mov
cmpsb
push
jns
push
push
movsl
push
loope
repnz
std
or
notb
jno
mov
add
mov
mov
rolb
shl
push
dec
jbe
ret
daa
add
mov
imul
mov
insl
mov
mov
pushf
pop
cmpb
jmp
add
mov
mov
cmpsb
pop
sub
pop
mov
add
jne
lret
ds
fsubrl
jmp
repz
enter
scas
xlat
jbe
add
adcb
sbb
jnp
cmp
pop
js
add
pop
jle
ret
mov
mov
es
sbb
sbb
insl
leave
mov
mov
add
cmp
clc
mov
int3
icebp
clc
xchg
cld
insb
sub
jno
int3
ret
inc
outsl
fiadds
outsl
cmpsl
addb
cmp
lds
lock
imul
dec
and
sub
mov
dec
rclb
add
fadds
add
hlt
mov
add
adc
add
jmp
mov
jle
and
cltd
js
iret
add
dec
push
push
mov
sub
in
mov
aas
cmp
pop
mov
xchg
mov
movsl
pop
and
add
call
or
ds
jne
mov
push
add
js
or
xor
scas
add
push
lods
jmp
negl
cmp
mov
mov
mov
in
add
enter
xor
mov
loope
or
out
mov
mov
push
popf
rclb
shll
gs
daa
popa
fildl
push
call
xchg
aaa
aam
sbb
in
xchg
jecxz
jmp
mov
cmpsl
mov
mov
mov
mov
pusha
mov
nop
push
push
xlat
leave
xor
pop
popf
jle
jge
mov
icebp
mov
roll
out
roll
and
add
jb
and
add
pop
pop
xchg
lods
add
dec
jae
add
add
dec
or
xchg
jg
ljmp
mov
sbb
add
rcl
ljmp
jge
mov
add
xor
xchg
test
xchg
int
cmp
subb
ffreep
and
inc
add
and
or
int3
lods
je
stos
into
jno
mov
insl
stos
sub
shlb
in
mov
sti
ss
les
lret
cmp
push
xchg
rolb
add
stc
arpl
add
and
es
daa
mov
jns
jmp
insb
cs
add
int
pusha
outsb
xor
fadds
mov
adc
dec
pop
and
rcrb
push
daa
roll
or
std
enter
mov
call
jl
je
test
pusha
push
aad
scas
add
xchg
cli
sub
mov
sbb
in
add
and
add
mov
push
add
sbb
cmpsl
and
push
pop
jmp
fmull
push
js
in
in
add
clc
ljmp
jns
add
sbb
add
dec
rcll
ss
addl
pop
addr16
and
sbb
gs
mov
add
cmp
add
add
lods
jmp
stc
pusha
or
testl
add
inc
adc
xchg
or
xor
enter
sbb
cmc
fistps
add
inc
push
fcomip
in
in
or
insb
imul
mov
aad
stos
mov
aam
icebp
dec
push
and
xorl
lea
not
repz
xchg
mov
and
and
and
shrb
sub
adc
cmp
mov
sbb
sbb
js
add
fistl
or
enter
cmc
inc
add
sub
lret
mov
mov
stos
jp
fldenv
sbb
jg
inc
push
and
ja
jno
inc
pusha
push
outsl
and
addr16
hlt
mov
add
call
and
jb
out
mov
add
jecxz
push
jb
stc
scas
ret
inc
jp
loop
popf
sbb
jb
js
int
jecxz
and
mov
add
int3
pop
popa
push
adc
sub
ret
xchg
daa
xor
add
add
popa
mov
sub
xchg
out
aaa
ficoml
dec
lea
and
dec
add
movq
push
int
and
jmp
mov
sti
fisttpl
mov
add
out
add
and
in
mov
ljmp
or
sbb
push
inc
stc
add
shl
les
push
lock
push
push
je
push
push
jp
in
lea
and
add
add
mov
add
or
add
ss
adc
lods
std
xchg
cwtl
scas
push
add
outsl
sub
add
pushf
xchg
leave
mov
add
negl
in
jl
xchg
add
add
js
addl
not
xor
addl
js
inc
or
mov
add
add
fdivrs
add
out
mov
mov
psllq
or
je
outsl
xor
sub
pop
cmp
xchg
xchg
mov
movsl
ror
insb
das
and
push
fst
fcmovbe
and
mov
cmp
xchg
cmpb
and
add
fcoml
sub
in
adc
outsb
and
mov
adc
and
les
daa
xchg
cmc
mov
inc
dec
out
jnp
or
stos
lahf
mov
movsl
adc
ds
cs
dec
int3
add
lret
repz
xor
aam
or
das
jbe
in
add
divl
ret
insl
loopne
add
add
pop
or
add
fdivrp
sub
sbb
add
and
lods
andl
or
pop
addr16
mov
into
out
icebp
mov
mov
daa
ja
cmp
add
push
mov
dec
pop
push
xchg
xchg
and
add
aad
push
repnz
mov
pop
jae
inc
sarb
mov
xor
add
shr
add
test
and
jnp
and
movsb
add
xchg
fldenv
paddusb
mov
mov
add
aas
mov
mov
cltd
pop
adc
mov
fidivrl
add
popf
push
sub
imul
test
leave
sbb
jb
loopne
cld
add
mov
mov
add
std
aaa
shr
fidivl
mov
sub
outsb
mov
dec
cmc
out
rcll
push
add
lahf
test
std
into
push
hlt
add
add
das
add
shrl
insb
iret
add
loop
inc
add
fdivrs
adc
and
out
dec
inc
into
mov
xor
test
lret
mov
lds
scas
xor
repnz
lock
jge
jmp
cmp
lods
pop
pop
mov
or
dec
jecxz
sbb
pop
and
inc
sub
add
sbb
mov
mov
divl
mov
ds
add
ret
mov
add
mov
mov
in
add
aaa
mov
loop
xchg
dec
adc
mov
adc
daa
add
insb
cltd
sub
add
add
pop
mov
icebp
cmp
call
pop
je
inc
sti
ficomps
mov
push
js
jmp
cmp
push
and
add
mov
shl
xor
fistps
inc
add
lds
inc
adc
push
lcall
stos
stos
sti
xor
jae
in
adc
add
iret
mov
dec
cld
mov
nop
int3
pop
js
cmpsb
sub
add
adc
movsl
and
jo
shll
lods
cmp
pop
blcs
add
lea
sub
insb
add
xlat
ds
pop
push
std
mov
add
lods
pop
in
xchg
inc
adc
and
push
mov
jae
add
stos
pop
add
add
call
loopne
clc
inc
jns
mov
sub
sbb
adc
adc
xor
out
in
daa
cwtl
add
add
mov
nop
cmp
loopne
subb
xchg
movl
sbb
daa
out
add
jbe
and
lahf
outsl
cld
fsubl
sbb
clc
add
dec
pushf
out
in
popf
sub
fdivl
pop
fwait
inc
mov
lods
ds
sarl
add
mov
and
add
sub
icebp
mov
flds
lods
in
add
aam
pop
jne
jnp
dec
sete
inc
add
movsb
mov
sub
in
mov
add
xchg
push
lcall
roll
add
jl
rolb
mov
je
mov
repz
rorb
jbe
sub
xlat
out
lret
sub
pop
cmpsb
push
push
add
xor
mov
or
ret
sbb
cmp
push
aas
popa
imul
mov
xchg
test
sbb
add
dec
fldt
lcall
push
sar
mov
jg
add
add
pand
inc
sbb
push
add
mov
js
and
adc
out
rcll
xchg
add
jge
xor
cld
cmp
add
push
aaa
icebp
mov
je
cld
dec
add
out
ds
jno,pt
adc
cmp
shll
add
addr16
sbb
cmp
mov
pop
push
inc
repz
pop
imul
cmp
clc
sbb
lods
pop
repz
sbb
adc
push
popf
jge
pop
add
repz
les
jae
pusha
je
add
andl
sbb
or
jecxz
cld
mov
push
xchg
jnp
lret
cmp
pop
outsb
add
popa
test
inc
js
cmp
addb
add
decl
push
cmp
mov
cmp
mov
xor
fwait
add
xchg
mov
mov
in
mov
add
dec
xchg
js
add
nop
mov
jmp
mov
int
ret
movsl
jge
mov
jno
jns
fwait
add
push
and
aam
or
xor
in
lret
adc
mov
jge
fbld
xchg
jnp
ret
xlat
add
sbb
sbb
lahf
adc
xchg
ss
dec
pushf
sbb
push
inc
int3
imul
sbb
test
es
dec
jle
push
add
pop
lcall
add
dec
cltd
repnz
inc
add
lea
data16
rcr
add
imul
jg
negb
rcrl
xchg
aam
mov
adc
add
jg
or
fldt
sub
jnp
iret
loopne
add
push
xor
aam
add
jb
or
sahf
daa
ret
imul
loop
xchg
adc
clc
inc
std
sahf
in
sub
lock
hlt
pop
fcomps
xchg
jns
aaa
call
dec
add
dec
add
sti
inc
scas
sub
dec
scas
dec
mov
and
inc
add
add
mov
imul
cmp
mov
in
xchg
add
mov
mov
add
inc
insb
fcomps
pop
sbb
jmp
add
int
cmp
mov
or
loopne
cmpl
and
add
xchg
xchg
in
les
add
pop
call
push
push
xor
fs
or
cwtl
xchg
mov
push
sbb
cmp
mov
mov
es
outsl
and
cwtl
push
or
dec
imull
dec
jne
push
mov
imul
popf
mov
sub
add
test
andl
scas
mov
mov
test
cmpsb
fwait
add
add
adc
sahf
sbb
ret
int
enter
ss
xchg
add
dec
repnz
push
ljmp
pusha
add
pop
sub
nop
sbb
loope
cmpsb
lock
or
pop
lcall
mov
test
repnz
xor
xor
pop
pop
cmp
add
pop
clc
cltd
pop
aas
mov
in
sbb
sbbl
push
mov
push
add
mov
dec
dec
jb
mov
mov
fucomip
add
add
fadd
fildl
push
sub
icebp
in
add
and
notl
xchg
sahf
jne
insl
ja
cmp
sarb
divl
sar
repnz
loopne
int
rolb
adc
icebp
inc
add
stos
adc
xor
inc
push
pop
jecxz
add
jns
jge
sarl
shrl
js
jno
add
out
xchg
add
rcrl
pop
mov
sub
insl
xor
popf
adc
fwait
inc
add
jmp
enter
outsl
add
push
ja
xchg
jbe
xor
add
add
and
outsb
xchg
addb
in
pop
repnz
push
dec
fisubrl
add
or
dec
fnstcw
mov
clc
movsb
outsb
enter
jns
xchg
insl
push
add
mov
out
sbb
mov
and
add
cld
leave
mov
cmp
mov
inc
dec
add
ret
inc
xchg
sub
mov
lods
xor
mov
add
je
pop
jae
sbb
roll
add
mov
pop
rcr
mov
aad
stos
arpl
dec
mov
stos
xor
rol
push
lret
cmc
movsl
arpl
adc
adc
mov
ds
test
mov
cmp
ja
aam
out
pop
ljmp
sti
lea
sbb
psrld
add
cmp
push
ljmp
stos
add
inc
sbb
lods
imul
daa
imul
mov
cmp
push
fldcw
add
push
loop
add
add
aaa
push
mov
pop
int
xchg
daa
sub
repz
mov
pop
sub
sbb
add
mov
gs
cmpsl
ja
mov
add
add
xchg
jge
outsb
cmc
adc
test
xlat
repnz
sbb
int3
add
mov
lcall
sbb
adc
rclb
jae
mov
and
jo
adc
clc
test
in
pop
push
add
add
cmp
lods
jb
mov
mov
into
mov
rep
mov
out
mov
pushf
repnz
mov
push
add
or
ficoms
mov
pushf
mov
and
add
xchg
adc
and
xor
out
push
push
cmpl
scas
xor
adc
mov
or
adc
jns
sqrtps
push
fdivp
push
fisubrs
add
add
and
add
add
sti
add
fisubs
imul
test
enter
loopne
pop
or
outsb
rcrb
rclb
add
pusha
lret
andb
jo
sub
dec
rcrb
xor
mov
std
in
inc
pop
hlt
ss
mov
test
jno
inc
inc
les
rcrb
cmp
inc
xlat
or
movb
mov
push
or
mov
leave
dec
lock
bound
add
mov
mov
pop
and
cmpsl
roll
arpl
add
pusha
std
roll
xor
sub
movsl
int3
or
sbb
lods
add
dec
cmp
push
icebp
add
popa
mov
push
and
rorb
icebp
xchg
cmp
call
adc
and
push
sbb
pop
aad
clc
ss
iret
mov
inc
scas
aaa
popa
pop
adc
mov
cmp
mov
dec
add
or
push
mov
adc
sub
cmp
in
js
fwait
cs
pop
pop
leave
push
sarb
fdivrl
add
cli
pop
fsubrs
dec
inc
lret
mov
mov
mov
daa
add
mov
add
inc
add
jecxz
add
loope
imul
jne
mov
xor
cwtl
sub
jne
daa
add
dec
addr16
dec
and
insl
mov
cmp
imul
xchg
mov
lret
imull
adc
xchg
add
divb
cmp
add
jnp
adc
jmp
and
imul
mov
inc
xor
jne
stc
mov
cwtl
cltd
push
mov
cmp
jl
out
repnz
sub
xchg
mov
cmpsl
xor
mov
xchg
add
mov
cli
jecxz
data16
ja
adc
sub
fildl
xchg
lret
xchg
add
dec
adc
ret
xor
inc
ffree
in
jge
stos
cmp
cmpsl
mov
mov
in
dec
popa
aad
adc
rcl
out
adc
arpl
inc
arpl
and
popf
inc
ficoml
add
add
cld
mov
push
subb
mov
push
mov
scas
adc
inc
sti
mov
push
xchg
lcall
clc
adc
xlat
add
xor
test
jae
xchg
cmp
adc
outsl
add
out
sbb
lcall
jl
dec
add
push
lret
repnz
cltd
push
shl
add
stos
bound
xchg
xor
ret
outsl
mov
lret
and
scas
lahf
inc
push
in
mov
cwtl
es
xchg
filds
js
lds
push
cmp
cmc
mov
sti
and
mov
add
lret
inc
mov
jne
add
mov
push
mov
xlat
cli
jnp
pop
add
inc
nop
sti
mov
icebp
in
mov
icebp
cmp
add
ja
bound
int
stos
add
and
jbe
pop
add
inc
mov
add
add
inc
gs
mov
jns
xchg
push
mov
outsl
js
dec
add
inc
adc
cmpsl
add
pusha
sub
add
or
add
pop
mov
rorb
sub
mov
or
inc
add
dec
xchg
movsl
sete
std
push
stos
add
mov
rcrb
jmp
and
sub
add
push
call
ret
stc
push
sbb
daa
or
mull
cmp
sbb
xchg
scas
sub
shrl
repz
mov
xchg
pusha
add
ja
pop
xchg
popa
sub
out
xchg
xor
push
cli
push
in
xor
mov
add
or
pusha
sti
cltd
add
add
js
popf
xchg
pop
mov
xchg
add
jns
or
repnz
dec
sub
out
movsb
imul
repz
out
pop
lret
pop
sbb
sbb
out
xor
js
sbb
mov
lret
out
sub
mov
mov
pop
shr
shlb
and
jmp
mov
push
push
mov
test
and
xor
adc
push
mov
jp
pop
iret
pusha
add
dec
fildl
adc
jb
jo
in
jmp
add
or
and
inc
add
movntq
test
xor
sbbb
ficoms
inc
inc
xor
mov
add
or
sub
int3
sbb
shll
dec
pop
ss
ret
sub
add
mov
std
lret
ret
aas
jae
mov
js
stos
mov
jl
jge
and
insb
dec
cltd
dec
enter
jns
scas
dec
jo,pn
or
fadd
dec
cmc
cmp
xchg
dec
or
out
sub
sbbb
shlb
popa
stc
xchg
stos
add
repz
add
add
cmp
add
mov
add
dec
pop
xchg
xchg
sti
hlt
cs
add
and
pop
push
int
add
and
add
mov
dec
xor
sbb
cltd
cmp
push
lret
arpl
cmpsb
bound
ljmp
adc
and
cld
das
cmp
pop
jg
add
xchg
sub
int
clc
cmp
or
cmpsb
mov
lods
mov
mov
pop
fs
loop
inc
mov
fcoml
rcll
push
cmp
add
jb
add
cmp
lods
or
add
add
lret
imul
add
fisubl
cmp
ror
daa
add
jnp
mov
xor
cvtps2pd
pop
popa
adc
add
add
cli
loope
fidivs
ffree
mov
bound
mov
cmp
mov
pop
das
and
data16
mov
sbb
test
pop
out
mov
fdivr
pushf
or
in
add
adc
jg
pop
ja
push
pop
sub
les
pop
fwait
cmp
test
add
out
add
adc
push
imul
js
add
dec
and
lods
and
mov
inc
shr
and
add
add
xor
push
or
mov
add
mov
enter
xlat
jae
mov
into
out
inc
movsl
inc
aad
pop
into
add
daa
add
in
mov
add
fmul
add
jmp
inc
popf
pop
testb
repz
pop
xchg
sbb
mov
cmpsl
int
xchg
pop
mov
lock
xchg
fldenv
pop
push
out
add
add
clc
aad
or
fisubrl
dec
movsl
loope
add
adc
add
mov
cld
gs
mov
inc
clc
cmp
or
stos
push
add
lock
jl
test
mov
out
stos
in
ljmp
sub
es
add
lret
push
sarl
icebp
outsl
daa
inc
dec
jp
mov
and
inc
jae
add
jbe
pop
push
push
into
cwtl
jle
cs
mov
dec
add
outsb
xor
add
popa
fildl
or
mov
cmp
add
test
add
cmp
int
dec
pop
hlt
popa
mov
fstps
add
mov
inc
orb
lret
cmpsb
loope
lock
das
insb
scas
fcomp
sahf
inc
and
mov
out
pop
les
add
loop
cmp
data16
sbb
cmc
xor
loope
iret
mov
test
pop
dec
test
js
rcll
inc
xor
add
insb
aas
ret
cmp
push
ret
push
popa
sub
cmp
add
popa
push
jl
loopne
add
data16
shll
pop
subb
lret
aas
dec
dec
orb
add
es
inc
loop
xchg
add
out
add
mov
add
lods
stc
mov
hlt
js
add
push
stos
cmpsl
ret
test
mov
add
aam
emms
adc
addl
mov
fdivs
out
scas
cwtl
adc
insb
xchg
stos
lea
xor
and
fwait
pop
add
clc
jg
jmp
sub
rorb
in
mov
pusha
inc
push
stos
push
bound
jl
adc
sahf
cmp
loope
outsb
loopne
jne
notb
inc
mov
mov
sbb
hlt
and
out
add
sub
add
inc
or
push
stos
bound
movsl
mov
clc
jae
mov
jne
in
sub
fmull
loop
xchg
ja
bound
adc
add
icebp
shll
push
adc
add
add
ss
jmp
test
add
mov
popf
lahf
dec
add
sbb
mov
add
jl
sub
mov
aaa
imul
in
add
outsb
bound
in
movsl
add
dec
push
fdiv
es
sub
mov
ret
sbb
mov
in
jo
xor
cli
push
ret
int3
or
push
xchg
ret
mov
lret
ret
inc
or
in
add
loope
loop
mov
ret
push
dec
stos
add
xor
mov
dec
inc
add
add
jo
jg
add
jb
cmp
mov
scas
loope
loope
cmp
jmp
jo
xchg
fimuls
hlt
jmp
sti
and
add
cmpsb
xor
jecxz
add
pop
les
call
or
adc
mov
in
mov
mov
add
incl
out
add
cmc
lcall
xchg
dec
andb
dec
pusha
inc
inc
pop
decl
add
outsb
mov
jbe
cs
aam
mov
pop
pop
inc
cmpsb
add
pop
inc
cmp
call
dec
push
fadds
add
xor
xchg
and
xor
in
test
jnp
pop
popl
sub
out
loopne
cli
add
mov
xchg
pushf
or
cmp
sbb
dec
xchg
lcall
cmp
or
fs
movsb
sbb
ret
inc
xchg
xchg
push
push
stos
jbe
aad
or
or
xchg
pushl
std
aaa
mov
fimuls
int3
aas
add
dec
dec
and
jg
adc
or
nop
dec
movsl
insb
faddl
aad
pop
stc
mov
lods
inc
lea
ret
push
fldcw
stc
mov
xchg
pop
in
fdiv
xlat
lcall
add
add
or
pushf
orl
fwait
pushf
jns
sub
xlat
int3
aaa
push
push
movsb
test
sbb
mov
mov
xchg
inc
cmp
dec
adc
cmp
add
ret
cmp
jge
hlt
xor
sbb
aaa
push
stc
dec
jo
in
jp
or
add
xor
or
jge
in
loop
inc
or
sbb
imul
cld
add
push
fninit
movsl
rcll
mov
xchg
jno
mov
add
jmp
sbb
mov
roll
lods
fidivs
add
mov
and
inc
add
xchg
add
pop
jg
xlat
add
pop
adc
add
pop
xor
mov
rcrb
sti
xor
cmp
stos
sub
xlat
xor
mov
inc
xor
xchg
add
fstps
adc
inc
adc
inc
add
lea
xor
add
dec
out
int
stc
adc
push
fiaddl
dec
add
clc
fs
push
jbe
jno
sub
out
add
adc
mov
mov
push
loope
fldt
mov
mov
movl
add
or
shrb
mov
loope
push
push
scas
jne
jo
mov
rcl
dec
add
rclb
arpl
sbb
xor
add
add
cmp
jb
imul
aad
adc
add
movsb
imul
imul
rcr
push
xor
loop
adc
outsl
push
rorb
push
cmc
lock
push
sahf
in
leave
jp
xchg
data16
mov
dec
or
cwtl
inc
push
lods
ds
outsl
std
clc
mov
add
std
imul
jmp
stos
jmp
push
add
push
adc
cmp
lds
dec
shl
pop
push
xor
mov
push
jbe
add
nop
pop
pop
add
scas
jns
inc
test
xchg
les
cld
loopne
adc
xchg
mov
cmpsl
loope
pop
push
jle
bound
sahf
inc
add
fwait
aaa
pushf
and
incl
movsl
add
mov
jbe
outsb
lods
add
int
dec
pop
sbb
sar
je
jo
scas
lcall
pop
inc
add
xchg
das
push
and
add
xchg
ja
hlt
aaa
add
push
bound
jle
mov
cmp
aas
call
inc
add
cmp
mov
in
mov
lods
add
aam
xor
add
imul
mov
mov
arpl
add
mov
cmp
mov
movb
div
daa
fidivrs
lcall
aas
dec
int
add
sbb
scas
mov
ds
xor
lret
add
js
stos
fwait
inc
test
dec
aam
test
lock
fstl
loope
fistpl
or
add
aas
ja
fcompl
outsl
push
mov
sub
adc
pop
in
cs
xchg
xchg
inc
cmp
in
test
mov
arpl
stos
je
mov
ret
cmp
loopne
bound
inc
mov
add
shll
sbb
fbstp
js
mov
out
es
jmp
sbb
sti
aam
sbb
add
mov
cwtl
stos
ret
pusha
add
inc
mov
mov
jo
push
outsb
add
add
je
in
lcall
pop
push
lods
mov
cmpsl
xlat
popa
mov
dec
push
inc
fs
add
cltd
ds
xchg
add
addr16
ljmp
cmp
add
cmp
das
decb
jl
ds
fldcw
in
dec
lcall
es
addr16
scas
or
pusha
fiadds
pop
or
int
ds
call
cmpsl
inc
ret
add
loope
add
test
add
pop
or
jne
cmp
inc
add
add
lahf
jmp
or
jae
sub
in
vcvtdq2ps
jae
mov
jae
incb
testl
test
xor
push
sar
stos
jp
shl
movsl
mov
cmpsb
inc
jo
xor
add
push
or
sbb
dec
adc
imul
inc
cmp
xchg
cli
sub
xchg
fistpl
test
inc
add
sti
outsb
dec
stc
add
jmp
roll
scas
jp
ljmp
adc
xor
or
cmp
jge
rcll
add
iret
dec
push
sbb
imul
rolb
imul
push
add
xchg
cmovl
dec
pusha
mov
inc
jge
in
cmpsl
test
ret
add
add
pop
xor
movsb
addb
xor
loop
jmp
ret
add
test
add
repz
stos
xchg
push
xchg
sbb
data16
popf
out
dec
add
aam
add
in
sbb
rcrl
stos
sbb
repnz
pop
loop
cmp
and
mov
push
jb
pop
pop
mov
dec
je
mov
test
xor
stc
mov
add
rolb
cltd
ds
pop
mov
or
cmp
fucomp
cmpsb
aad
jnp
or
int
in
fisubs
add
ds
sbb
mov
cmp
sub
int
rclb
add
je
test
outsb
mov
cmc
pop
pop
lea
mov
mov
add
mov
cmpsl
ror
add
add
repnz
xchg
stos
mov
rcl
stos
bound
jge
pushf
stos
cmc
cmpsl
roll
sub
pause
popa
shrb
pop
dec
add
xorb
ss
add
es
test
cltd
into
scas
sti
mov
stos
imul
imul
mov
aaa
sbb
imul
ljmp
mov
les
or
push
dec
leave
cld
mov
popf
dec
or
jns
movb
and
sahf
ficoml
add
bound
scas
popa
lret
and
mov
jo
add
push
cltd
add
scas
add
stos
xlat
aas
add
add
inc
mov
repz
or
sbb
clc
lahf
aam
xor
sahf
add
add
and
inc
out
dec
mov
mov
mov
repnz
push
incl
stc
xor
std
mov
nop
fisttps
pop
jg
push
mov
testl
inc
aas
xchg
pop
mov
xchg
xchg
sub
testb
loopne
lret
mov
jge
dec
mov
lds
fwait
hlt
mov
cmc
mov
pop
mov
and
fldl
jnp
mov
add
inc
nop
jbe
mov
dec
xor
mov
lahf
lret
sub
les
lea
mov
mul
and
jo
xchg
cmp
frstpm(287
sub
pop
sub
cmp
mov
add
add
jle
lods
sti
repz
add
jne
or
mov
jl
mov
mov
add
mov
push
add
hlt
in
cld
sahf
aam
iret
loopne
fxch
pop
dec
push
movsb
out
jecxz
rcrl
xchg
mov
xchg
fldcw
les
push
add
add
lods
and
orl
lods
imul
sarb
push
jb
lods
insl
push
fstpl
lcall
add
add
in
jo
lcall
adc
cmpl
jg
xorl
sbb
lods
shll
dec
adc
add
add
or
sub
sbb
outsb
add
ds
mov
bound
pop
dec
sub
mov
add
fs
add
xor
jle
sti
cmp
xor
xchg
or
outsl
push
push
call
jns
mov
mov
push
cli
cmp
add
adc
mov
shl
xor
mov
sar
mov
loopne
push
push
fidivrl
mov
cld
cli
rcrb
add
adc
jo
add
add
cmp
mov
add
add
into
add
sub
sbb
mov
hlt
push
test
add
pop
icebp
add
and
and
mov
shrb
mov
xor
and
or
fsubl
dec
inc
test
mov
sub
add
inc
sub
push
scas
pop
cmp
add
stos
add
frstor
mov
fsubrp
pop
aaa
pushf
jl
add
adc
mov
hlt
sti
lock
mull
icebp
faddl
sbb
dec
or
cmpsb
add
push
cmpsb
dec
pop
cmc
js
adc
cwtl
cwtl
cmp
pop
out
sub
rcll
mov
mov
mov
stos
add
mov
sub
pop
and
bound
sti
enter
pushf
jo
jg
shll
add
or
arpl
adc
aam
int
adc
jno
xor
sbb
mov
fidivrl
cli
and
inc
pop
repz
rolb
daa
int3
mov
push
sub
clc
out
and
repz
mov
push
push
pushf
xchg
or
sbb
insb
add
pop
pop
repnz
dec
mov
out
sub
repz
mov
xchg
adc
roll
daa
adc
mov
pop
cmp
mov
cltd
outsl
popf
or
push
scas
mov
shlb
push
jbe
mov
sub
add
les
add
scas
adc
loop
mov
cwtl
add
arpl
xor
jg
lds
ret
push
movsl
mov
pop
push
leave
sub
aaa
add
movsb
mov
aas
addr16
lods
or
bound
xor
jns
pop
cmp
xor
sub
dec
and
add
xchg
mov
and
lret
adc
mov
jmp
ret
add
jns
xor
xor
or
out
xor
clc
add
std
andl
jge
nop
jecxz
jge
repz
into
pop
mov
cmp
add
mov
inc
and
aad
das
add
stc
xchg
cltd
and
xchg
ret
jl
or
jbe
in
add
sysexit
add
ret
push
cs
pop
test
and
xor
push
bound
icebp
insb
add
cld
inc
js
ljmp
add
rolb
dec
test
push
cmp
xchg
dec
mov
and
mov
add
sbb
popa
dec
adc
jo
lods
xor
cmpb
add
es
add
jns
testb
ja
push
mov
cwtl
call
push
lret
mov
xchg
les
lahf
lret
jg
mov
pop
add
push
pop
xlat
clc
nop
jmp
dec
jge
outsb
cs
lea
pop
aam
inc
or
addl
inc
mov
jmp
int3
clc
mov
stos
imul
lea
jo
call
mov
sarb
or
or
mov
ret
add
popa
dec
mov
not
in
aad
fs
outsl
add
outsl
jnp
cmp
cwtl
pop
add
fmuls
dec
popf
inc
loope
add
lcall
xor
fcmovnbe
push
cmp
gs
mov
movsb
jb
mov
sbb
iret
add
movsb
sub
mov
jns
add
sbb
xchg
dec
test
incb
stc
mov
rolb
cmpsb
sbb
out
add
cmp
jp
popa
add
xchg
jge
mov
int
pop
outsb
daa
add
cmp
xchg
inc
and
shll
popf
sahf
add
or
nop
add
jecxz
and
hlt
call
dec
dec
mov
movsl
mov
xchg
rcr
out
mov
xchg
in
add
mov
dec
popa
jge
cmc
inc
xchg
jb
jo
cmpsb
movsb
scas
jmp
xchg
cld
add
or
dec
add
xor
and
out
int3
inc
rcrl
xchg
mov
sub
test
lcall
cltd
rolb
adc
cmp
inc
aad
mov
cmp
push
call
vpmaddwd
push
gs
test
pop
jo
popf
add
jl
test
out
dec
pop
mov
test
and
mov
rcrl
je
mov
inc
push
stos
lea
not
pop
add
lds
lods
in
das
inc
pop
push
shl
xor
dec
and
or
or
inc
loope
mov
cmpsl
pop
mov
aaa
hlt
add
repnz
mov
icebp
rorb
mov
mov
inc
push
mov
je
mov
mov
push
pop
add
add
add
inc
inc
sbb
es
ss
cld
sbb
add
pop
cmp
push
push
add
mov
xchg
push
mov
out
adc
push
cmp
out
lock
jb
pop
pusha
nop
add
add
add
insl
neg
lcall
call
fildl
rcll
adc
add
jl
mov
push
and
shl
push
jmp
stos
enter
add
aam
add
fwait
or
xchg
fiadds
or
adc
iret
daa
ljmp
add
movsb
fisubl
xchg
sub
add
adc
dec
xor
scas
or
shlb
and
ret
stos
shll
push
cmp
pop
mov
ja
das
jae
xchg
add
xor
not
xor
xor
scas
inc
jp
or
mov
dec
xchg
jle
or
in
lea
add
rorl
add
lock
mov
jo
ljmp
and
lret
outsl
bnd
pop
stc
orb
add
test
sbb
add
push
add
xchg
movsl
ss
lds
and
jle
push
nop
adc
xor
push
mov
loopne
sbb
add
cmp
xor
cmpsl
mov
sbb
test
ljmp
popf
push
stc
sarl
rorb
xchg
jmp
testb
insb
or
adcb
pop
stos
mov
in
push
idivb
inc
push
push
leave
push
lahf
add
rcr
add
cltd
inc
jo
pop
xchg
jle
mov
sahf
out
icebp
add
push
mov
rolb
cs
jl
pop
pop
cmpsb
outsl
adc
jnp
cmp
rorl
rol
add
in
ss
sub
mov
xchg
cmp
cld
sub
add
dec
and
ss
push
or
sbb
or
mov
jo
rorl
xorb
int3
add
add
shll
aaa
daa
cs
pop
mov
xchg
push
sub
xor
dec
add
out
mov
out
mov
jge
sub
sti
in
add
cmc
mov
aad
xor
cmpsb
add
aaa
das
and
repz
or
pop
jo
add
sub
leave
fmuls
into
repz
das
xchg
movsb
incb
in
nop
inc
les
dec
pop
cmp
into
into
and
out
dec
cmpsb
cli
and
push
mov
shll
jnp
xchg
popf
add
or
pop
mov
shrb
insl
sub
pop
mov
aas
cmp
loop
add
cs
xor
inc
ret
xchg
jl
jmp
js
inc
je
sbb
mov
cli
mov
mov
dec
push
dec
dec
lds
add
dec
add
lds
js
add
add
jg
and
jns
mov
sbbb
hlt
push
mov
sahf
jge
or
jae
jmp
test
js
gs
shr
das
push
pop
xor
lods
popl
sub
lret
sbb
out
add
jg
cli
add
push
aam
mov
fidivrl
pop
addr16
add
add
js
lea
mov
roll
sbbb
pop
mov
add
add
je
orl
enter
jns
testl
add
cs
es
cmpsb
lock
js
xor
sub
jae
test
or
add
lahf
mov
aaa
shl
fsts
pushf
push
xorl
mov
adc
add
adc
idiv
das
add
jne
lock
pop
fsubrs
sti
add
add
xor
xchg
pop
dec
je
mov
imul
shll
xor
push
dec
sahf
loopne
fcom
fadds
insl
add
scas
push
cmpsb
mov
mov
cmpsl
pop
inc
jg
xorl
and
pop
cmpsb
push
and
sub
add
add
add
popf
adc
mov
mov
dec
jmp
cmp
and
lret
cmovle
loop
inc
push
xchg
out
fadds
nop
stos
add
adc
cli
sbb
jae
sub
jecxz
add
sub
movsl
xor
cli
lahf
add
dec
mov
add
xchg
gs
insl
lock
xchg
mov
cmpsl
or
rcll
sbb
xor
mov
push
das
cld
movsb
mov
mov
push
add
or
cmpsl
add
iret
mov
xchg
cli
addl
xor
mov
push
inc
cld
add
push
cmp
pop
sub
es
test
mov
jbe
mov
add
sub
push
add
jns
dec
call
or
dec
stos
mov
adc
xchg
add
inc
repz
ds
and
adc
mov
js
icebp
les
add
jb
insl
sbb
add
stos
cltd
daa
fs
cld
xchg
into
and
jo
aas
add
inc
adc
stos
xchg
dec
in
mov
lods
add
add
add
add
in
movl
add
pushf
scas
mov
add
pop
add
adc
lods
sub
scas
pop
enter
pop
outsb
mov
dec
enter
inc
pop
incb
cmc
sbb
test
imul
add
push
jecxz
and
add
mov
add
add
push
mov
les
jle
imul
stos
fstl
mov
add
pop
gs
cmc
and
push
loopne
rclb
rorl
jno
sbb
xor
mov
mov
in
mov
sbb
jne
insl
stc
xor
sub
push
pop
add
lods
pushf
pop
ja
repz
sub
cmp
mov
cmp
pop
cmpsl
mov
aas
outsb
aas
out
inc
jmp
jmp
and
push
bound
or
and
adc
jno
mov
jge
sbb
popf
mov
add
and
mov
pop
addr16
data16
loope
push
clc
ret
adc
lret
inc
test
into
push
adc
fwait
push
or
insl
std
je
pop
push
cmp
and
lret
jb
dec
movsb
aam
add
inc
flds
je
or
push
clc
pop
mov
in
divl
mov
xor
sbb
pushf
stc
ljmp
mov
mov
les
rorb
mov
mov
sub
push
loope
es
add
add
or
xlat
xlat
subl
in
test
xor
mov
mov
jno
outsb
sub
push
mov
adc
push
ret
sub
add
xchg
or
adc
add
xchg
cmpsb
in
iret
pushf
sbb
iret
arpl
icebp
repnz
cmpsb
push
mov
cmp
add
push
mov
pop
gs
pop
push
cmpsb
lret
xor
xor
and
outsb
idivb
dec
lds
mov
add
push
stos
xchg
xchg
aaa
out
pushf
in
mov
inc
pushf
add
jo
vpunpckhqdq
ds
add
cmp
add
xchg
test
jb
cmpsl
rcrb
js
je
jb
mov
mov
aas
icebp
inc
add
sti
mov
insl
lods
gs
inc
xchg
call
jne
gs
jge
mov
xlat
iret
lcall
lcall
aas
mov
and
lods
mov
mov
in
add
cs
push
out
ret
test
fs
push
int3
add
mov
xor
or
xlat
mov
xor
push
and
xchg
mov
daa
cmp
and
jbe
insb
xchg
push
add
scas
mov
jle
add
add
loopne
ja
popa
divl
push
sub
aam
leave
jb
mov
push
add
addl
jp
ljmp
shll
roll
adc
add
fildl
pop
sbb
push
adc
xchg
xor
xor
icebp
aad
test
or
jmp
sub
mov
call
mov
mov
mov
jle
int3
out
stos
add
add
insb
es
jmp
push
add
mov
repnz
xchg
cmpsl
movsb
dec
add
add
add
add
or
out
into
add
fidivs
push
and
adc
test
xor
ljmp
js
stos
cmp
push
js
fmuls
or
ja
push
jo
gs
sub
es
aaa
pop
pop
cmpsb
testl
lods
mov
add
pop
add
pop
maskmovq
divl
inc
add
xor
lea
mov
gs
cmp
mov
stc
arpl
sub
pop
lea
jp
mov
mov
in
mov
mov
jecxz
adc
pop
mov
and
hlt
push
outsl
bound
ds
and
xchg
jnp
inc
aad
add
xchg
ret
fildl
rcrb
pop
mov
sub
cmp
fdivl
into
push
xor
add
add
rolb
fs
rolb
lcall
add
out
xor
stc
add
repz
jmp
add
jo
lea
sbb
mov
add
inc
inc
and
mov
add
bound
cmp
adc
mov
pop
mov
jecxz
and
add
fisubl
fildl
push
nop
dec
inc
xor
testl
dec
repnz
out
outsl
jmp
inc
daa
dec
add
jb
xchg
lock
mov
push
arpl
cmp
push
outsl
dec
fidivl
shrb
int
adc
mov
fisubs
lods
jle
stc
pop
xchg
clc
lret
cli
ss
shrl
scas
scas
cmp
add
in
ljmp
add
pop
fimull
push
mov
mov
xor
rol
dec
push
pop
push
adc
mov
jmp
aas
mov
xchg
out
cmp
push
jg
enter
mov
sbb
inc
add
insb
fnsave
add
lods
sbb
daa
loopne
std
xor
add
ret
inc
push
dec
loope
test
sbb
pop
pop
adc
aad
cltd
sub
rolb
mov
test
movsl
pop
mov
jmp
dec
sub
add
stos
scas
add
outsb
aad
sbb
add
lods
push
test
out
jns
jo
mov
rcrb
mov
inc
add
push
sbb
in
movsb
inc
sub
jno
sti
out
ret
mov
mov
je
out
push
xlat
fucomip
xor
or
in
insb
push
push
add
add
shl
mov
pop
add
pop
cmp
and
xchg
shl
in
sarb
jne
add
imul
fsubrl
js
pop
add
add
ds
in
arpl
push
add
add
or
and
sbb
mov
jmp
hlt
jg
pop
sbb
pop
icebp
das
cmp
push
push
pop
inc
data16
inc
mov
mov
or
mov
push
add
mov
add
jne
insb
push
iret
stc
cmc
xor
add
add
sahf
sbb
popa
sbb
scas
xor
add
leave
lea
and
insb
jl
leave
mov
arpl
jns
dec
xchg
jbe
and
xchg
xor
mov
add
xchg
into
add
shlb
and
pusha
adc
lock
inc
hlt
outsb
rcrb
das
xchg
ds
dec
pop
insl
in
fs
mov
xchg
pushl
xchg
push
fld
loopne
inc
sbb
add
dec
jle
mov
je
in
cmp
push
pop
add
push
int3
fsubr
add
add
and
fcmovne
addb
add
scas
xorb
cmp
jb
or
inc
jb
inc
inc
out
or
out
sbb
imul
ss
and
aas
xor
aas
stos
dec
xchg
ja
mov
jns
adc
adcb
inc
icebp
data16
add
add
or
mov
push
jmp
xchg
loopne
loop
and
ret
mov
fisttpl
inc
pop
mov
and
adc
in
mov
push
mov
cmp
mov
jns
lea
sub
sbb
je
sub
in
adc
pop
js
jmp
sub
cmp
add
fmuls
sub
cmpb
or
in
fildl
call
jno
sub
push
cmc
and
sub
and
outsl
push
add
and
daa
mov
add
xchg
mov
pop
adc
fiadds
hlt
movsl
cmpsb
add
lahf
cli
add
mov
pop
vmwrite
into
sbb
incb
lret
mov
insl
std
mov
pusha
xchg
add
add
pop
outsl
jns
xchg
in
and
cltd
outsl
in
insl
ds
out
add
inc
push
call
add
add
fstl
add
hlt
add
bound
add
add
in
sub
pushf
lea
pushf
repz
divl
das
dec
add
inc
add
xor
and
aam
lods
mov
xor
add
out
fcmovnu
in
xchg
push
pop
add
pop
mov
xchg
xlat
scas
ds
pop
xorl
ss
or
xchg
inc
lock
inc
clc
int3
add
xchg
sub
inc
pop
inc
inc
xor
int
pop
add
push
sbb
inc
xor
call
push
add
mov
push
add
pop
in
jge
sub
add
cld
xor
inc
add
addr16
adc
and
xchg
xchg
mov
fildl
mov
jge
repz
sbb
and
xchg
insl
jb
or
inc
rcr
xor
sahf
add
xor
inc
push
add
push
lret
sbb
inc
test
std
jmp
in
incb
add
mov
mov
ficoml
lods
inc
ljmp
shrb
in
out
fimuls
add
sbb
sbb
iret
inc
jg
mov
jo
fcom
mov
or
add
pop
add
push
mov
add
push
jne
mov
mov
ds
xor
add
or
sbb
daa
pop
test
add
mov
and
mov
in
addl
loope
insb
xchg
rcl
pop
pusha
pop
lret
daa
adc
jmp
add
sub
and
pop
pop
repnz
nop
lock
insl
andb
jne
push
mov
out
out
jo
pop
add
sbb
ret
fadds
xor
pop
or
add
inc
call
add
add
mov
inc
cmp
ret
inc
jbe
repnz
into
lods
rol
pop
stos
adc
leave
sub
mov
adc
mov
cli
cmp
shrb
jnp
mov
sbb
cmp
rorl
inc
test
add
insb
sbb
jns
push
push
gs
push
fstl
xchg
bound
pop
mov
frstor
cwtl
into
xor
aas
ja
frstor
fisubrl
repnz
loop
clc
mov
jg
and
add
jmp
scas
ret
cmc
add
sub
cmc
lods
cli
insb
test
js
cmpsl
jno
xor
mov
mov
mov
mov
add
inc
sub
mov
icebp
push
sti
add
sti
mov
mov
add
add
filds
pcmpgtd
xchg
mov
icebp
cld
push
xchg
in
mov
mov
pop
adc
pop
fsts
inc
int3
xchg
shlb
cmp
ret
out
aad
test
mov
mov
flds
sub
pop
add
mov
aam
push
int
push
add
pop
mov
mov
sub
push
test
and
dec
xchg
dec
inc
imul
bound
out
gs
mov
fistpll
aaa
dec
xchg
pop
enter
std
imul
daa
mov
test
xor
add
jmp
sub
add
xorl
jb
mov
sbb
push
add
inc
cmp
mov
push
xchg
sbb
or
add
orl
dec
imul
jb
lods
enter
xchg
and
jmp
cltd
pop
and
sbb
fwait
mov
movsb
jmp
mov
loopne
add
fisttpl
in
cmp
dec
lock
add
das
pop
lahf
insl
add
inc
add
push
add
push
add
cmp
add
imul
jnp
rcr
mov
xor
mov
cmp
imul
shl
xchg
jmp
xchg
cs
sbb
dec
cmovnp
in
cld
dec
hlt
add
add
add
out
cmp
pop
push
cli
xor
dec
cwtl
xor
add
cld
or
mov
cmc
sub
add
dec
push
add
sub
push
add
out
call
enter
cmpsl
pushf
ds
bound
mov
push
imul
pop
rorl
pop
jnp
add
sub
sub
inc
out
xchg
sti
xchg
testl
push
add
sahf
cmp
jge
sub
or
fnsave
inc
push
outsl
pop
lds
dec
aas
cmp
jp
movsb
add
add
jp
repnz
mov
xor
mov
in
bound
jmp
mov
gs
pushf
mov
mov
mov
rcll
add
sub
cmp
add
imul
mov
sbb
mov
test
mov
ficompl
jns
and
pushf
int
add
pop
insb
nop
mov
sbb
aas
add
jo
add
add
mov
adc
rcrb
iret
ja
out
cmp
test
insb
dec
xchg
add
add
hlt
add
dec
cld
pusha
mov
stos
add
pusha
outsb
sub
fiaddl
mov
mulb
sub
movsl
sahf
testb
or
pushl
mov
push
xchg
shrb
ret
push
repnz
test
outsl
inc
or
cmc
xchg
add
mov
mov
popa
push
lds
ret
push
sub
repz
cmp
inc
add
movsb
aaa
in
sbb
popf
jge
jbe
lods
das
jae
xchg
mov
jno
xchg
loop,pn
xor
in
jecxz
roll
int
jns
popa
add
out
fisubrs
lods
xchg
pusha
dec
jb
and
mov
gs
add
pop
into
push
jns
stc
fdivrp
adc
decb
addr16
cltd
daa
push
add
sti
pop
dec
cmp
xchg
leave
sub
das
out
pop
mov
iret
dec
and
hlt
clc
fidivrs
cmp
jmp
add
add
notl
rcrb
inc
lods
repnz
add
mov
xor
clc
fcomps
lods
dec
shrl
hlt
pop
testl
addr16
roll
bound
xchg
sub
xchg
add
fidivrl
mov
test
jmp
pop
push
add
nop
xor
imul
orl
inc
repz
xor
int3
add
or
pop
jo
xchg
icebp
sub
xchg
lods
fstl
adcb
sub
adc
rol
cs
mov
add
sbb
add
enter
vorps
dec
or
orb
loopne
insl
add
inc
dec
ss
add
test
mov
repz
das
shl
popf
add
test
test
int
pop
fnstenv
or
pop
cmp
add
add
in
addb
jge
and
testb
xchg
xchg
inc
cmp
jo
iret
mov
lods
or
and
or
push
sub
movsb
loop
daa
sbb
nop
add
add
mov
jp
xchg
add
aas
loope
lock
xchg
stc
xchg
jmp
mov
jnp
enter
dec
imul
loopne
imul
sbb
add
and
sbb
sbb
xchg
lea
bound
jo
add
loope
lret
xor
xchg
sbb
add
add
mov
mov
sbb
out
push
les
xchg
adc
cli
nop
cmc
stc
fsincos
sub
bound
test
mov
jmp
add
adc
add
test
xchg
add
or
movb
scas
imul
add
int3
lods
fwait
pop
lods
inc
int3
sub
lea
loopne
push
adc
push
std
fs
cs
cmp
out
push
pop
hlt
add
pusha
cmp
int
add
ret
sarl
jmp
sub
jl
sbb
cwtl
ja
ja
push
mov
add
outsb
pop
cmp
bound
and
iret
imul
pop
adc
repnz
add
insb
dec
push
cmp
arpl
dec
push
not
add
sub
aas
aam
and
inc
std
mov
movsb
add
mov
mov
add
popf
fs
add
add
jl
popf
mov
pop
xor
das
into
cmc
rolb
jge
add
add
movsl
movsl
and
adc
movsb
xor
movsl
sub
inc
imul
loop
inc
pop
push
popa
push
int3
pop
pop
orl
lcall
fiadds
mov
pop
push
stos
jp
pop
and
mov
imul
cwtl
pop
xchg
pop
fldl
mov
repz
into
cwtl
das
leave
add
repz
add
insl
scas
or
add
les
cmp
jmp
pop
es
lds
sub
jo
dec
stc
add
mov
loope
jmp
test
sbb
lds
jl
mov
jmp
add
mov
loope
int
stos
pop
and
jecxz
add
addr16
push
sbb
adc
lahf
into
pop
adc
mov
cld
fisttps
inc
bound
movsb
aas
es
jbe
xor
fdivp
pop
xor
fimuls
add
mov
mov
test
loopne
pop
or
fwait
sub
roll
inc
mov
or
mov
sbb
pop
cmp
or
lea
outsl
std
cmp
or
adc
arpl
sbb
add
add
add
adc
rorl
add
push
stos
sub
xchg
add
dec
lea
jnp
sbb
cli
scas
push
insb
mov
pop
les
test
rolb
into
aas
aad
scas
xchg
ljmp
pop
jae
shl
int3
jnp
add
popa
dec
dec
push
shrb
ljmp
andl
pop
add
add
sbb
push
cmp
jo
cmp
rorb
dec
loopne
pop
sub
nop
cmp
mov
ljmp
add
mov
insb
mov
jecxz
les
ja
push
insl
pop
dec
add
mov
push
lret
lret
dec
add
je
addb
mov
hlt
xor
mov
fsubl
cmp
ret
clc
push
dec
push
jbe
sarb
or
jb
or
xchg
inc
ss
pusha
add
mov
mov
hlt
repnz
adc
and
push
movhps
mov
mov
mov
add
cmp
mulb
add
in
fwait
sbb
pop
pop
jmp
faddl
jecxz
rcrl
cltd
or
sbb
add
push
push
lods
cmp
dec
push
mov
lcall
pusha
cli
js
add
jno
xchg
adc
cmp
jbe
pushf
out
pop
sub
or
dec
imul
sub
jnp
repz
imul
lret
aas
xor
and
ds
imul
aad
push
pop
clc
popf
sub
ret
push
bound
adc
test
lret
push
add
jle
adc
push
jl
jmp
add
movsb
and
lods
dec
movl
push
add
inc
sbb
stos
lcall
mov
adc
add
or
jae
rcrb
push
mov
pop
out
adc
push
iret
cltd
sbb
pop
fbld
add
xor
adc
add
outsb
loop
cmpb
cs
inc
loope
stos
mov
jmp
shlb
jne
push
mov
jl
add
jmp
xchg
add
loopne
add
cmp
aam
or
in
fwait
push
jns
outsl
imul
pusha
pushf
stos
loop
xchg
lcall
sbbl
and
int3
test
fwait
bound
push
js
add
and
fdivrs
insl
add
add
add
xor
paddsb
xchg
xchg
pop
bound
mov
jno
sbb
pusha
jns
pop
sub
mov
jp
push
or
addr16
xor
outsl
add
jnp
bound
pop
xlat
mov
data16
add
sarb
add
mov
add
sub
jno
pop
js
pop
iret
mov
dec
cmp
inc
add
push
in
dec
adc
ret
adc
mov
push
cmpsb
add
out
adc
mov
and
xor
test
subl
inc
xor
add
insl
push
or
popl
sbb
loopne
test
je
loopne
dec
outsl
jns
cmp
dec
mov
push
add
imul
xchg
xchg
das
out
xchg
addb
mov
sbb
add
rclb
pop
js
jbe
js
inc
pop
add
jmp
lods
jb,pn
scas
mov
loop
gs
xchg
and
jmp
ret
inc
add
aad
movb
inc
movb
dec
insb
add
mov
inc
sub
mov
ljmp
xchg
add
bnd
jle
out
out
loope
add
add
push
and
add
lret
repz
xchg
xchg
jbe
inc
subb
dec
push
add
jnp
leave
sbb
fs
inc
and
mov
inc
popf
or
addb
lods
pop
lea
dec
test
pop
lea
jle
or
xor
or
xchg
pop
inc
or
cld
enter
push
jns
loope
add
mov
int
inc
xchg
inc
js
add
xor
loopne
add
xchg
or
pop
filds
cmp
ficoml
inc
xor
push
or
divb
and
jg
xor
int3
xor
xchg
mov
insl
mov
shrl
in
mov
and
je
mov
leave
rolb
roll
add
mov
xor
xchg
shr
sub
mov
sub
cli
sub
sbb
lods
mov
flds
mov
pop
cmc
mov
add
jbe
cmp
or
imul
arpl
cltd
sahf
in
mov
add
jecxz
int
inc
in
sub
mov
add
add
push
and
xlat
repz
jp
rcll
outsl
scas
jno
hlt
add
insb
add
inc
int
movsb
int
or
dec
lahf
and
add
loopne
popf
repz
insb
adc
push
push
stc
jg
shll
fnstenv
cs
or
loop
or
das
mov
add
cld
mov
fs
add
shrl
xor
test
mov
sti
dec
sti
ljmp
mov
icebp
movsl
dec
roll
push
inc
xchg
add
mov
sub
add
cmc
inc
xchg
mov
sub
mov
jnp
jno
or
test
mov
mov
mov
pop
xchg
jno
jmp
jge
movsl
mov
xor
leave
int
push
or
out
mov
push
cwtl
mov
inc
in
lods
je
jle
shrl
testl
nop
cli
je
mov
mov
xlat
and
or
and
cmp
or
fwait
jl
aam
iret
popf
add
test
add
jle
adc
pop
pop
add
jne
out
add
or
roll
mov
add
mov
adc
xor
in
in
sub
xor
int
sbb
outsb
adc
sbb
stos
fbld
dec
dec
xchg
rol
dec
cmc
cmp
push
add
mov
sub
push
mov
push
inc
jae
pop
add
mov
push
jae
push
mov
mov
add
mov
stos
cmpl
cmc
dec
xor
xor
add
nop
push
jo
mov
mov
hlt
mov
dec
add
aad
movsl
insb
mov
jae
fiaddl
fisubl
mov
mov
and
clc
sbb
lahf
repz
add
add
cmpsb
jae
jmp
test
jnp
jp
push
idiv
push
sbb
dec
or
push
cmpsl
fcoml
iret
add
fistpl
add
push
mov
outsb
mov
xor
ret
sbb
add
mov
sub
xlat
movsb
add
inc
adc
dec
nop
fcomps
pop
adc
add
aam
ja
pop
push
push
mov
or
ret
mov
pop
cmpsb
test
pushf
mov
or
cmpsb
aas
stc
fsub
mov
shll
cmpsl
das
pop
mov
call
jbe
fstpl
adc
mov
mov
repnz
mov
mov
pop
mov
add
test
jno
test
and
push
push
mov
jnp
repnz
out
mov
cltd
fildl
cmc
leave
cmpsb
pushf
mov
pop
mov
jecxz
in
sub
add
mov
jg
shll
jbe
adc
jns
jp
test
mov
xchg
push
add
mov
cli
stos
pop
add
dec
sub
es
aaa
xchg
add
pop
xchg
and
outsl
les
int
or
pop
cmpsb
mov
add
cmpsb
cmp
scas
fnstenv
dec
add
mov
cli
push
push
xor
std
ret
add
xchg
addb
mov
sbb
push
in
push
add
pusha
clc
xor
add
add
add
push
add
mov
jle
xor
mov
movsl
sbb
stos
push
mov
aam
mov
cmp
loopne
ret
std
xor
shl
cltd
lock
iret
pop
dec
adc
je
cmp
idivb
mov
push
add
jnp
sub
or
les
xchg
add
rcrb
gs
fildll
adc
add
leave
xor
hlt
add
pop
mov
add
add
fstpt
rclb
andb
adc
push
push
xchg
lods
xchg
mov
xchg
stc
mov
rorb
out
mov
cwtl
fld
mov
adc
sbb
xchg
add
aam
cwtl
cmc
bound
les
out
repz
xor
jo
or
inc
iret
cmp
xorb
imull
ret
dec
add
dec
sub
sub
inc
add
in
or
pop
jecxz
dec
rcr
sub
xchg
adc
dec
iret
repz
daa
xor
fmull
inc
mov
lea
sar
loopne
ljmp
jno
cmp
dec
aas
adc
mov
sbb
fists
lds
ds
push
popf
add
add
inc
call
add
pop
sar
out
adc
sahf
mov
dec
int
inc
mov
or
push
xchg
dec
inc
stos
xchg
stc
movb
push
push
test
fcompl
stc
push
and
add
js
pop
sbb
mov
or
push
and
add
stc
add
idivl
mov
aam
and
mov
push
jl
pop
les
scas
test
mov
add
xchg
loop
jmp
jb
cmp
jg,pn
popa
sub
adc
shlb
inc
test
add
ret
imul
mov
cmp
inc
test
add
mov
sub
outsl
mov
ret
add
sub
fs
xchg
jmp
repz
in
jp
jns
jnp
dec
xor
mov
add
enter
int3
lcall
mov
add
stos
cmpsb
fildl
add
mov
or
jle
add
fstp
faddl
mov
ja
mov
outsl
add
test
scas
mov
outsl
xchg
icebp
jg
jecxz
aas
cmc
andl
add
push
mov
xchg
lret
or
repz
adc
arpl
or
insl
rolb
xchg
lcall
add
mov
outsb
adc
repz
inc
inc
pop
add
pop
mov
cmp
xchg
loopne
or
fnop
jp
xchg
add
add
ss
push
rcll
or
add
push
add
int3
leave
and
mul
flds
rcr
add
mov
add
xchg
jo
stos
int3
cmp
push
fistps
jne
sbb
enter
push
stos
xor
inc
jg
test
mov
xchg
cld
outsb
cld
idivl
inc
xor
fsubs
pushf
adc
xor
dec
sub
sbb
sbb
clc
add
repnz
adc
sub
hlt
mov
call
daa
test
add
cmp
orb
arpl
add
jns
clc
and
std
inc
subb
add
cld
add
in
ja
stc
jb
mov
add
add
add
test
push
cmpsl
jb
push
sbb
jmp
or
lods
aas
dec
jbe
mov
aas
cltd
push
sahf
sahf
sbb
insb
cs
repnz
lods
jle
dec
movsl
add
add
jnp
sbb
lods
sub
add
push
cmp
xchg
pop
rolb
push
or
clc
jmp
dec
stc
outsb
insl
ret
hlt
push
mov
xor
sbb
insb
add
push
shrb
xchg
sbb
mov
mov
dec
jne
outsb
and
pop
jp
aam
mov
push
mov
jmp
pop
call
movsl
out
cmp
jns
test
icebp
sbb
out
xchg
nop
sbb
sbb
sarl
mov
mov
dec
mov
inc
dec
pop
lock
test
insb
loop
arpl
dec
pushf
cmp
and
out
add
leave
pop
add
adcb
pop
movsl
lock
mov
leave
and
dec
or
out
or
mov
daa
jecxz
lea
call
icebp
cmp
jmp
in
mov
xchg
xor
xlat
add
jbe
out
pop
xor
push
inc
stos
fs
shrl
adc
xorb
push
decl
loope
imul
jl
shll
adcl
std
xor
pop
dec
add
mov
jne
jb
sar
sbb
add
inc
lret
jb
push
xchg
jmp
in
jae
call
scas
mov
add
cmc
add
push
mov
in
dec
mov
js
add
loope
int3
rorl
call
or
add
aaa
mov
add
fisttpll
out
add
movsl
inc
xchg
mov
add
ljmp
ja
pop
and
mov
arpl
and
add
stos
les
pop
push
loopne
out
add
dec
add
lahf
or
cld
sbb
orb
xlat
ret
imul
add
cwtl
jae
gs
push
testb
gs
icebp
mov
faddl
sub
add
aad
pop
jne
or
or
mov
add
mov
fnstcw
scas
jg
insl
dec
lcall
clc
fdivrs
inc
xor
dec
dec
test
jnp
fisubrs
add
les
add
jne
add
add
push
jne
add
stos
pop
inc
out
add
int
pop
movsl
decl
out
cld
jo
or
fmulp
stos
adc
add
sbb
aaa
xchg
mov
int3
push
popf
or
jae
jl
mov
push
decl
add
add
test
add
jns
test
cltd
cmp
add
mov
add
ret
jmp
add
xchg
jecxz
xchg
lret
loop
and
pop
sbb
inc
fisubl
int
js
jbe
sbb
in
jp
in
inc
xor
lods
nop
gs
aam
add
mov
or
cmp
adc
lret
and
xor
frstor
andl
add
inc
mov
dec
jb
cmp
inc
incl
lahf
cltd
cmpsl
nop
jg
fstpl
add
dec
cli
pusha
imul
fsubrs
test
int
jge
jg
mov
int3
fsub
add
ret
sub
add
jle
pop
jmp
lea
mov
hlt
mov
lods
xchg
in
sbb
inc
dec
cmp
mov
andb
stc
out
mov
verw
rcrl
fld
and
pop
xchg
dec
clc
and
int3
outsb
popf
movsl
sti
and
inc
cmc
mov
test
test
cmp
cld
or
sbb
out
js
or
mov
xchg
stos
dec
push
dec
das
pop
scas
fimull
roll
xchg
sub
dec
lahf
add
add
jbe
mov
push
mov
xchg
pop
fs
add
int3
je
or
mov
mov
sbb
adc
or
cltd
in
aad
popa
or
xor
cltd
out
add
vshufpd
jg
jmp
arpl
clc
ljmp
cli
out
mov
add
lret
add
jmp
divb
xor
dec
or
std
cmp
rcrb
sub
aaa
popa
dec
push
lods
shl
stos
or
insb
aam
addr16
lcall
inc
das
add
lock
fiaddl
lcall
fwait
es
push
jmp
push
jne
add
rorl
cld
aaa
call
push
sub
add
push
push
cmpsl
push
lcall
pop
cltd
pop
xchg
inc
mov
mov
repnz
imul
aad
xchg
cwtl
add
sub
arpl
push
enter
add
sarb
add
dec
scas
add
sub
pop
aam
in
xchg
fiaddl
movsb
and
mov
jb
flds
add
in
int3
adc
js
add
stc
int3
mov
add
xor
cmp
bound
adc
mov
xchg
daa
xchg
add
mov
cwtl
pusha
cmpsl
and
test
cmp
imul
fs
ja
add
cmp
test
and
cld
adc
andb
jnp
add
fstl
and
mov
add
inc
loope
inc
dec
jp
insl
incl
lods
pop
push
jo
cmc
add
and
lds
das
leave
ror
xchg
les
in
xlat
movsl
add
pop
scas
pop
adc
int3
mov
fsubs
and
mov
dec
std
add
add
mov
notl
add
nop
lret
xchg
push
mov
xchg
push
inc
mov
cmp
fsubrs
push
and
mov
dec
call
push
xchg
xchg
adc
call
jnp
out
sbb
pop
add
or
icebp
push
icebp
xchg
xor
jge
jle
outsb
into
pop
test
jbe
fisttpl
push
jns
sub
mov
or
add
dec
test
jns
out
cmc
xchg
xor
pop
push
sti
imul
stos
mov
or
sbb
scas
dec
test
faddl
add
pop
pop
test
sub
mov
add
loope
loope
and
and
fcoml
ljmp
pop
adc
adc
push
xchg
mov
push
sbb
pop
push
push
inc
cmpsb
addr16
aas
add
add
sbb
lods
push
jmp
xchg
mov
dec
jno
push
das
data16
add
popf
divb
lock
jg
jg
and
adc
pop
inc
rorb
in
mov
jne
mov
sub
bound
movsb
scas
dec
and
add
jbe
mov
mov
mov
fnstcw
mulb
adc
mov
sti
push
jle
ss
add
or
mov
ficomps
jle
fnsave
mov
movsl
add
add
xor
icebp
xlat
dec
addr16
sub
add
jae
test
aaa
push
add
sub
xor
out
leave
pop
je
imul
pop
jl
sub
mov
or
dec
cmpsl
jae
xchg
mov
das
sbb
adc
loope
fcomip
adc
push
jg
lea
dec
mov
adc
data16
mov
hlt
xchg
dec
push
roll
pop
popl
inc
rcll
cmc
mov
aas
adc
xchg
sub
rolb
pushf
out
xchg
in
add
dec
lahf
shl
stc
roll
mov
mov
shl
push
mov
xor
mov
cmp
push
pushf
addb
or
sub
test
ffree
shl
inc
lea
lea
add
xor
adc
xor
push
sahf
pop
jle
mov
xor
stos
mov
mov
fidivl
add
je
bound
mov
ds
sti
push
pop
enter
ficoms
repz
fcmovnbe
ret
dec
sub
subl
xchg
fnstenv
hlt
jo
add
mov
add
nop
pop
daa
rcl
xchg
or
sahf
cmp
pop
cmp
add
and
roll
es
cmp
into
pop
popf
xchg
nop
pop
add
xchg
aaa
sbb
sti
test
or
sahf
xor
in
aaa
mov
push
shrl
xlat
dec
jmp
xchg
add
shll
out
scas
inc
sbb
into
insl
hlt
in
test
dec
push
orl
es
shll
adc
inc
cld
jo
outsl
nop
add
clc
xor
outsl
add
sbb
add
add
bound
mov
pop
add
pushf
fisttpll
adc
loope
xor
cli
adc
sahf
movsl
mov
add
invd
lret
clc
jns
loop
rcr
push
push
lea
xor
xchg
dec
jnp
cmp
ffreep
add
test
ja
jnp
dec
adc
ret
pop
add
addr16
mov
jns
cwtl
bound
adc
inc
xchg
jl
sub
add
or
clc
scas
xchg
ret
xor
scas
pop
lret
inc
js
sbb
push
cmp
rclb
clc
js
popa
or
outsl
dec
scas
pop
add
out
mov
pop
dec
sub
mov
add
mov
jo
jbe
inc
add
push
enter
xchg
insl
test
push
ljmp
sbb
aad
xchg
mov
lods
pop
cltd
movsl
lret
add
popf
add
ret
int3
xchg
xor
fwait
fwait
and
insl
jp
and
testb
orb
repz
mov
loopne
xchg
or
aas
push
add
sbb
jno
in
xchg
je
adcb
push
push
fldenv
jmp
ljmp
adc
icebp
lods
adc
dec
addb
add
xchg
mov
and
movsl
adc
shll
aad
pop
in
dec
dec
lods
add
popa
out
aad
add
add
popa
xchg
outsb
cmpsb
push
dec
add
cmp
inc
imul
outsl
xor
shrl
pop
mov
scas
jge
sbb
out
and
sub
push
sbb
ficomps
mov
lds
lcall
out
popa
in
lcall
dec
mov
jmp
add
xchg
mov
dec
xor
add
push
cmp
mov
cmc
das
inc
sub
cmp
fildl
repnz
es
add
test
and
lcall
sbbl
xor
cwtl
ret
dec
add
mov
lret
in
inc
add
jae
insl
pop
stos
mov
aam
mov
cmp
add
test
add
pop
sbb
push
stos
rcll
add
fists
mov
loopnew
and
mov
add
cli
add
pop
inc
push
cli
icebp
pop
cmp
xchg
aad
or
sub
daa
pop
test
push
add
lea
lds
mov
je
lea
inc
add
test
pop
push
xchg
fiaddl
cmpsl
pop
add
and
add
nop
xchg
xlat
aas
pop
out
movsb
sbb
test
adcl
clc
fldl
pop
mov
xor
inc
std
popa
add
pusha
mov
add
pop
xchg
cli
cmc
and
add
jp
jg
data16
ljmp
cltd
inc
push
push
lods
add
mov
lcall
leave
sbb
sub
lret
xor
stos
adc
or
cli
add
and
mov
jae
push
mov
fmull
stos
sub
add
add
sbb
adc
lock
ja
jp
mov
sbb
mov
pop
inc
xchg
leave
ja
jo
mov
icebp
sbb
je
inc
mov
test
pop
filds
test
push
xor
nop
mov
add
incb
loop
add
xchg
jbe
add
cmpsb
imul
jecxz
fs
filds
in
xlat
outsl
jno
lcall
icebp
cmp
call
mov
or
mov
mov
cmp
ret
cmp
or
mov
fnstsw
add
shr
loopne
and
out
adc
mov
shr
add
int3
aad
inc
cmp
movsb
add
not
push
addr16
pop
adc
adc
nop
dec
cmp
inc
cmp
pusha
fldl
push
pop
fbld
cli
bound
jnp
enter
or
xor
subb
lods
jge
add
xchg
sub
iret
adc
sub
jnp
movntq
out
jbe
or
aad
mov
lock
sbb
negb
into
mov
cwtl
add
add
sbb
add
xchg
mov
mov
stos
add
aad
jmp
sbb
insb
jecxz
add
or
add
push
leave
mov
add
xchg
repnz
insl
add
mov
add
add
mov
add
in
push
and
mov
cmc
cmc
stc
out
xchg
pusha
sub
ret
mov
pop
xor
jp
inc
adc
addb
shr
inc
pop
or
add
or
cld
add
push
xor
or
sahf
mov
rcl
adc
mov
mov
shl
fabs
cmp
add
mov
xchg
dec
add
pop
out
cmp
mov
mov
bound
popf
test
cli
add
xchg
add
movsb
jne
das
xor
mov
sti
dec
mov
cltd
aas
add
popa
cli
insl
jbe
shufps
scas
aad
jae
and
scas
dec
mov
lret
cmpsb
add
es
cld
lret
shll
into
add
push
add
lods
adc
sub
ficomps
je
inc
jp
pop
in
addl
fdiv
xlat
stos
xorl
movsl
pop
xchg
and
mov
push
or
xchg
mov
add
xlat
inc
jl
aad
arpl
inc
jle
and
pushf
jp
roll
loope
fisubrl
mov
inc
aaa
mov
or
jo
das
inc
xor
test
pop
inc
add
or
push
pushf
or
inc
mov
aad
add
into
loopne
jle
sub
lock
aad
int3
add
mov
sub
add
dec
jno
or
xorb
sub
mov
add
stos
add
or
mov
mov
mov
sbb
add
sub
jns
adcb
xor
scas
add
ret
mov
adc
add
pop
mov
dec
jns
cmc
fstps
outsb
loope
pushf
add
push
xchg
sub
sti
add
ficomps
pop
and
push
mov
lahf
js
mov
ret
add
jl
add
push
mov
jae
mov
xchg
xchg
gs
imul
mov
nop
leave
std
out
and
ds
cmpl
dec
sbb
mov
jbe
mov
out
jecxz
or
jnp
insb
mov
adc
addl
fimull
rclb
ret
mov
je
jne
pop
push
es
add
and
xchg
add
inc
ja
aad
out
decl
cmp
jo
mov
add
add
dec
outsb
stc
aam
pushf
faddl
add
pop
xchg
jne
outsl
outsb
cmp
pop
inc
pop
mov
sub
icebp
jg
xor
insl
mov
stos
lods
add
sbb
bnd
mov
cmpsb
sbb
lds
movsb
aaa
divb
lea
sahf
mov
add
mov
dec
lock
loop
lods
lods
incl
lcall
add
iret
xlat
cmp
fadds
movsl
mov
jno
std
les
pop
pop
cmc
insl
sahf
dec
ja
out
sahf
insl
imul
fstp
xor
ss
pusha
inc
cmp
or
repnz
push
movsl
dec
xor
shll
xchg
sbb
rcrb
add
daa
add
popa
gs
mull
repnz
fstl
jle
dec
dec
fwait
inc
xchg
add
popf
add
jne
mov
push
jge
sahf
bnd
xchg
loopne
les
push
push
add
in
sub
aad
in
std
mov
xchg
js
xor
add
xor
fwait
mov
add
lahf
xchg
mov
add
stos
or
and
pop
xchg
pop
pop
pop
cmp
push
sbb
jbe
pop
push
aas
add
xchg
and
fisubrl
xchg
mov
inc
dec
fimull
shlb
imul
xchg
mov
inc
add
jo
mov
lahf
or
lcall
es
mov
addl
lcall
popa
lods
mov
inc
lret
sbb
mov
rolb
in
xadd
ja
pop
rcrl
push
add
add
xor
sarl
stos
popf
pop
lea
or
std
add
xor
dec
add
or
jle
and
lcall
mov
xorb
sub
cmp
popa
add
dec
dec
or
cmp
inc
adcl
adc
jbe
rcrl
and
push
or
test
scas
jl
cmp
dec
out
xlat
push
in
das
sbbl
sti
add
add
xor
xchg
push
mov
and
pop
fisttpl
add
add
fstpl
push
scas
add
add
sbb
xor
cmp
js
fcompl
push
arpl
xchg
add
packuswb
fldt
jmp
mov
adc
scas
jmp
xchg
test
popa
sti
shlb
pop
add
cmc
cmpsl
adc
arpl
rolb
pop
in
add
inc
fdivrs
stos
dec
jl
inc
add
mov
sub
repnz
sti
rorb
mov
sub
outsl
sub
lahf
lret
imul
mov
mov
sub
test
add
fadds
cwtl
addb
cmc
mov
push
xchg
fbld
sub
xlat
mov
stos
push
pop
inc
mov
in
add
rcrl
push
pop
jl
testl
lahf
add
or
xchg
inc
bound
adc
cmp
pop
jge
dec
jo
jae
adc
sbb
adc
push
dec
arpl
cmp
cmpsb
pop
add
xor
add
test
jge,pt
sti
movl
jae
popa
mov
add
fwait
jg
dec
add
into
ss
addr16
stc
out
adc
add
mov
insb
data16
jno
sub
mov
dec
clc
addr16
data16
sub
push
mov
adc
nop
jb
mov
add
mov
fdivrs
movb
jb
fnstcw
mov
dec
xor
pop
bound
or
testb
or
push
add
pop
sbb
outsb
fs
lahf
mov
sbb
hlt
mov
je
xchg
sub
call
cwtl
lcall
roll
add
xor
dec
mov
sub
or
pop
and
add
repz
roll
xchg
pop
icebp
pop
push
and
loop
add
imul
add
aas
addr16
filds
pop
jae
outsb
add
in
add
icebp
lret
push
add
add
push
fldenv
leave
jb
add
mov
add
inc
hlt
push
xor
pop
sbb
lock
fiaddl
negl
add
adc
inc
stos
loopne
ffreep
adc
xchg
jmp
in
pop
rorl
out
sub
pop
add
in
push
jnp
xor
lock
clc
rolb
pop
xchg
push
aam
pop
addr16
jle
rcrb
dec
gs
cltd
pop
sub
or
dec
bound
fwait
add
test
add
xor
test
sub
mov
or
mov
aam
imul
xor
imul
das
and
push
xchg
or
call
int
dec
loopne
xorb
mov
mov
cld
sbb
cld
sub
popf
xchg
iret
test
or
lret
gs
rcl
outsb
mov
out
adc
adc
mov
mov
or
ret
mov
movsb
or
aad
mov
mov
add
add
mov
or
mov
sub
add
incl
xchg
sub
add
mov
cli
testl
pusha
js
xchg
xchg
sub
mov
sub
enter
jg
aaa
nop
and
into
imul
aas
add
mov
push
aas
imul
push
adc
cmp
pusha
push
je
mov
outsl
adc
scas
mov
js
inc
iret
dec
xor
inc
and
lahf
and
mov
mov
dec
add
add
jb
pop
aad
sbb
stc
iret
and
push
xchg
add
shrb
add
mov
in
jg
in
pushl
xor
or
pushf
mov
xchg
out
add
sbb
or
aad
lods
add
or
lret
mov
xchg
mov
cmp
mov
inc
add
sub
jmp
add
les
pop
xchg
xor
cmpsl
push
or
cwtl
add
mov
nop
fdivs
loop
fidivrs
subl
pop
ret
inc
pop
adc
lods
out
ljmp
add
ljmp
pop
subl
add
jmp
cmc
add
shlb
outsl
xchg
and
push
sahf
sub
popl
add
fdivrs
lds
pop
add
adc
add
fnstenv
add
aad
push
pop
loopne
add
popa
or
stos
pminub
in
mov
and
dec
add
int
cmpl
add
jns
add
add
push
mov
mov
xchg
xchg
xchg
addr16
xchg
stos
add
sub
ja
mov
add
add
push
mov
push
shl
imul
rorb
add
out
into
mov
mov
inc
ret
xlat
andb
sbb
mov
popf
cmpsb
pop
jnp
adc
data16
rcll
push
pop
sti
mov
jbe
inc
lods
fmul
push
stc
jmp
mov
fs
aaa
dec
xor
sub
adc
mov
add
sub
add
fsubr
add
std
add
fdivs
add
mov
aam
xchg
out
rol
mov
inc
add
mov
in
ficoml
push
cli
cmp
rcll
dec
xchg
fadds
stc
addr16
xchg
repz
movb
push
xchg
xor
lea
mov
cmovle
in
vpsadbw
add
mov
testl
add
fisttpll
js
and
test
jmp
and
incb
mov
shrb
push
lods
xchg
xchg
add
push
pop
add
loope
jne
test
xchg
fdivp
dec
add
xor
add
jg
sub
lock
adc
add
inc
mov
fstps
leave
mov
mov
imul
test
ljmp
ret
fidivrl
add
sbb
je
mov
mov
dec
lods
add
mov
pushf
fiadds
add
xchg
mov
dec
pop
bnd
cmp
out
xchg
adc
adc
ret
outsl
inc
push
es
inc
mov
dec
push
cltd
loope
pop
push
hlt
xor
xor
mov
xchg
bound
insl
test
rcrb
flds
add
pop
add
out
call
push
int
dec
les
cmp
push
add
sbb
cmp
adc
ret
sub
jecxz
shll
adc
add
push
fs
add
jmp
cmp
jmp
in
mov
xor
jg
inc
std
add
mov
mov
add
pop
testl
nop
adc
push
cmp
test
dec
fwait
cmp
pusha
rcrl
xlat
mov
jg
mov
repz
pop
xor
add
imul
pop
xchg
test
xchg
rclb
aaa
dec
scas
or
loope
out
int3
pop
add
add
imul
jb
adc
dec
popl
sub
dec
push
cmp
add
fmul
popl
push
add
std
rorb
mov
mov
cmp
mov
xchg
pop
dec
or
or
test
in
add
xchg
lret
xor
in
add
mov
out
sub
pop
push
cmpb
add
mov
mov
jo
adc
insb
adc
pop
std
or
mov
cmpsl
xor
mov
rcll
aad
shll
shrb
jbe
movsb
add
xor
sub
add
cmp
cmp
scas
mov
add
add
xchg
out
push
sbb
imul
bound
xorl
mov
out
iret
pop
lock
movsl
jecxz
inc
loopne
dec
jmp
lea
xor
or
cmp
cltd
aas
in
add
xchg
daa
adc
ret
je
add
popa
xchg
cli
sbbb
fsubrs
repz
stos
pop
mov
fwait
xchg
stc
pop
mov
cltd
fbstp
das
ret
imul
or
inc
pop
xor
fdivs
rcll
mov
mov
adc
mov
in
imul
add
cld
cmpsl
push
sub
lods
jle
js
test
fisubrs
mov
in
jmp
push
fbld
cs
insb
mov
add
add
add
sub
add
mov
sub
adc
adc
add
sub
scas
je
mov
cmc
fcmovne
add
int3
cmpsl
push
xchg
xchg
cmp
push
sbb
mov
pop
jbe
adc
add
repz
add
test
mov
repz
out
or
das
sti
sbb
xor
pop
scas
add
bound
push
xchg
in
cmp
sub
ret
dec
in
ja
es
loopne
imul
pop
sbb
pop
xor
fistpll
xchg
jge
jmp
add
mov
cwtl
fs
aas
push
test
mov
pop
popf
or
xchg
or
push
push
outsb
in
push
add
push
inc
mov
rol
dec
enter
pop
add
lock
fwait
add
sahf
pop
loope
sub
add
int
sbb
jle
cmpsl
add
adc
inc
mov
aad
ds
add
or
int3
es
iret
sbb
add
adc
add
and
fadds
dec
mov
test
outsl
cmp
add
sbb
in
les
add
or
ret
mov
inc
cmpsl
nop
hlt
jns
ss
jecxz
mov
adc
movsl
xor
mov
add
icebp
inc
in
xchg
jle
cmpsl
mov
out
ltr
pop
mov
shl
ja
lods
inc
or
mov
movsb
pop
out
cwtl
push
repnz
jbe
test
ret
pop
pop
inc
fs
dec
adc
adc
and
icebp
xchg
jne
das
inc
dec
int
jns
push
movsl
cmpsb
hlt
int3
sbb
shrb
cmp
add
mov
dec
rorb
xor
inc
in
sub
push
repnz
inc
in
and
mov
mov
push
xchg
xor
and
push
scas
sub
adcl
mov
jo
in
mov
jne
add
inc
lds
or
in
add
sahf
add
pop
inc
sub
cltd
int3
jne
int3
add
add
addr16
mov
data16
xor
jnp
add
xchg
es
or
and
add
and
push
xchg
and
jbe
add
xchg
in
push
cwtl
dec
ret
js
mov
push
sbb
push
popa
sbb
jne
jns
mov
mov
cmp
fdivrs
mov
lods
pop
sbb
negb
add
fcmovne
inc
and
mov
les
xchg
push
jbe
pop
stos
xor
fisttps
fnstsw
je
mov
jns
lock
add
mov
xor
inc
push
scas
std
imul
ljmp
daa
mov
stc
out
xchg
scas
cwtl
pop
mov
jp
mov
fiaddl
add
insb
add
adc
or
ss
test
rcrl
jecxz
pop
sbb
jle
xchg
test
shll
cmp
xchg
adc
rcr
mov
in
mov
daa
out
add
pop
add
pop
and
inc
cmp
add
lcall
mov
mov
sbb
dec
sahf
add
jmp
test
mov
add
ja
scas
push
mov
daa
mov
mov
mov
push
inc
xchg
or
ljmp
into
pop
je
push
fiadds
push
cmp
fldenv
fiadds
imul
into
add
sub
lahf
shr
pop
sbb
popa
ja
push
cmp
fst
fdivrp
add
mov
xlat
jp
jle
loop
xchg
call
push
ret
outsb
add
test
cvtps2pi
imul
sar
add
gs
gs
std
adc
and
xor
mov
cmp
xchg
cmp
into
lods
adc
lods
out
loop
or
pop
sub
add
fisubrs
push
sub
jle
sbb
imul
mov
pop
cmp
push
and
addr16
addb
dec
xchg
sbb
in
mov
rcrb
xchg
rcrb
ficomps
outsb
dec
add
mov
add
filds
leave
add
add
clc
inc
test
xadd
mov
lock
jmp
mov
mov
add
pop
push
lcall
insb
mov
adc
add
cmc
add
jg
xchg
dec
leave
sbb
jle
add
mov
movsb
xorb
pop
jne
fsubs
lcall
mov
sbb
stos
push
popa
movsl
xor
es
sahf
inc
stos
add
mov
sbb
je
les
xor
enter
pusha
rclb
and
inc
add
outsl
xor
jg
xor
int3
movl
or
mov
jae
jmp
mov
ret
outsl
xchg
pop
addr16
fldenv
repnz
popa
shl
outsl
add
push
mov
xchg
fstl
jnp
push
sub
add
add
lods
sub
insb
or
xor
loopne
and
push
hlt
call
dec
cmp
sub
add
fucomip
lret
pop
mov
repnz
xchg
add
dec
add
dec
mov
cltd
mov
add
std
outsb
and
pop
jns
lock
and
jecxz
repnz
inc
cltd
mov
jae
cmp
fwait
or
dec
mov
popa
jl
ret
orl
xchg
jnp
xor
ret
add
xchg
adc
stos
mov
inc
ds
int
jne
dec
xchg
cmpsl
and
inc
jp
mov
outsl
add
inc
loop
mov
mov
mov
rclb
pusha
shl
bnd
call
outsl
jnp
gs
cld
dec
push
adc
and
int3
dec
xor
add
mov
sbb
add
add
add
lahf
das
outsb
pop
loope
pushf
pop
and
adcl
loop
and
dec
or
mov
fs
sbb
roll
push
sbb
xchg
fcomp
mov
cmpsl
pop
push
insl
adc
flds
popa
rclb
call
add
pop
add
add
out
push
mov
and
sub
fidivrs
xchg
addr16
ret
ss
ret
inc
movsb
enter
xchg
out
or
aad
cltd
mov
or
jle
test
add
mov
push
or
enter
popf
mov
gs
popf
and
jae
outsb
adc
insb
mov
xchg
das
add
mov
inc
adc
jns
mov
int
sub
inc
mov
mov
xor
ss
bound
push
xchg
lcall
jl
mov
xchg
rcll
popa
in
out
cli
pushf
movsl
pushw
cmp
fbstp
lock
xor
jo
mov
push
lods
daa
fmuls
add
mov
sub
dec
mov
lea
in
scas
xlat
pop
cmp
add
xchg
pop
add
loope
test
xchg
sbb
in
aas
hlt
sbb
cmc
addr16
out
js
fcoml
out
mov
jmp
fidivrl
push
imul
mov
jmp
imul
mov
lods
cmp
add
mov
cld
mov
loop
add
aad
cltd
or
rcl
ss
mov
push
push
aad
add
mov
cmpsb
fiaddl
loope
mov
lcall
mov
insl
fists
cld
add
push
imul
je
insb
add
mov
dec
aam
xlat
mov
adc
jecxz
dec
out
dec
loopne
push
adc
ljmp
sbb
xor
mov
push
xorb
add
add
cmpsb
jbe
repnz
out
imul
aas
lahf
test
jo
jl
jmp
jnp
inc
mov
imul
das
fadds
cmp
fsubrs
jmp
add
cld
mov
pushl
cmp
rcr
mov
mov
or
in
shrl
or
jbe
aam
mov
mov
xor
cwtl
jae
arpl
in
outsl
cmc
add
add
shrb
rcll
add
out
mov
add
inc
mov
xor
add
add
mov
push
out
push
or
add
daa
xchg
jle
jp
pop
aad
or
ljmp
imul
pop
jge
mov
inc
jg
add
mov
pushf
fisttpll
push
test
mov
jmp
aas
cmovl
mov
notl
mov
out
test
add
push
fs
into
test
pop
add
or
int3
cmp
cmp
shl
pop
imul
mov
cmp
clc
push
jp,pn
repnz
mov
dec
or
shl
add
cltd
mov
sbb
add
lret
mov
mov
inc
scas
ljmp
pop
js
sub
and
xor
and
mov
shlb
mov
fiadds
add
test
push
pushf
xchg
and
sub
adc
enter
mov
xchg
adc
rcll
js
lahf
push
stos
pop
out
xchg
sub
xchg
mov
subb
jecxz
or
in
xchg
cmp
lahf
int
mov
sub
repnz
repz
push
mov
cmp
imul
movsb
or
pop
pushf
add
jbe
insb
xlat
jge
cld
add
fisubrl
sbb
sub
add
xchg
or
add
mov
or
cmc
cmp
lret
sbb
mov
icebp
fidivrl
test
cmp
fdivl
cmp
out
mov
xor
leave
lods
mov
sub
in
arpl
add
add
arpl
xchg
mov
lret
and
mov
push
xchg
arpl
inc
push
call
adc
add
xor
xlat
sbb
sti
or
movsb
jnp
add
xchg
lea
xchg
xor
add
pusha
cltd
pusha
pop
dec
xor
sbb
add
cmp
add
cmp
adc
cmp
shlb
mov
stc
nop
test
add
mov
jg
cmpsl
mov
test
inc
jge
sbb
adc
add
mov
pop
add
add
ja
js
cmc
xchg
add
push
push
lds
cld
add
daa
loop
aam
mov
fdivr
call
fwait
add
xorb
or
mov
add
fdiv
jae
add
or
and
jo
cmc
sub
outsl
jno
int3
testl
xor
icebp
cs
push
add
pusha
movsb
cmp
inc
lods
fiaddl
inc
pop
or
mov
mov
cmp
push
cltd
cltd
add
nop
xor
cmpsl
aam
mov
dec
loop
mov
xchg
fdiv
imul
add
andb
or
pop
mov
mov
cltd
shl
dec
movsl
fiadds
push
cmp
wbinvd
and
and
add
push
xchg
sub
lods
add
pop
add
add
mov
aaa
add
push
mov
lock
roll
into
jnp
jne
add
sbb
or
leave
out
shll
mov
pop
lahf
addb
add
lret
mov
mov
pop
in
adc
cmp
add
pop
scas
xchg
stc
dec
add
xor
nop
rol
cmp
fsts
mov
mov
dec
mov
inc
inc
cwtl
cmp
add
push
pop
inc
fildl
cs
aam
in
fwait
ss
les
fmull
jno
xchg
xchg
push
in
jecxz
push
data16
fs
and
test
into
add
mov
jmp
mov
add
pushf
push
pop
xor
fildl
cmp
sub
add
add
fbstp
addr16
dec
clc
jne
cltd
push
jg
aam
ljmp
stc
aam
cltd
loopne
jns
xor
clc
bound
jno
pop
aaa
add
or
add
fnstenv
add
pop
cmp
or
mov
repz
jae
mov
push
lret
xchg
test
in
dec
dec
test
fidivrl
jecxz
and
inc
xchg
faddl
and
adc
mov
fmuls
add
ficompl
js
mov
add
push
dec
mov
add
das
inc
add
loope
mov
insb
fadds
popa
jge
roll
std
mull
xor
repnz
dec
fstpl
jno
mov
cmpl
cmp
insb
nop
push
loope
cmpl
or
or
loopne
mov
std
add
pop
out
jae
dec
outsl
sub
or
scas
movsb
adcl
data16
mov
add
pop
ss
addr16
sub
lds
movb
pusha
and
jmp
fidivl
add
inc
cmp
add
cltd
jo
jg
fwait
xor
test
scas
stos
ja
std
push
ret
popl
lock
cmc
idivb
xchg
cmc
inc
xchg
mov
fildll
xchg
sub
stos
push
and
push
xchg
add
add
push
inc
mov
lock
xor
or
cmpsb
popf
pop
mov
lea
in
js
testb
add
xchg
iret
jb
jp
xchg
int
jl
add
inc
inc
data16
jl
sub
gs
push
mov
cmp
adc
fbld
mov
scas
cmpsb
sub
mov
insl
mov
test
add
mov
in
int3
sub
lret
jge
jmp
sbb
push
roll
insb
or
sbbb
push
jns
mov
insb
stc
sbb
fldt
add
mov
xlat
mov
psubd
add
mov
mov
mov
lret
daa
cmc
mov
adc
add
pop
and
push
xchg
and
pop
ss
mov
test
into
lds
cltd
add
in
out
add
out
jne
jne
loop
dec
and
outsb
fcmovbe
divl
iret
mov
jl
mov
mov
add
jne
mov
push
add
jecxz
sahf
js
mov
popf
movsb
push
jmp
mov
sub
mov
add
and
add
cmpsb
mov
addr16
cmc
sbb
push
lock
adc
push
popf
add
and
pop
push
divl
xchg
push
out
fs
mov
pop
inc
mov
addb
and
sbb
adc
xor
jnp
ficoms
sti
data16
sbb
add
mov
push
xchg
pop
outsb
sub
push
and
nop
jecxz
loope
jp
lock
test
cmpsb
xchg
testb
test
inc
fdivrs
sbb
lret
dec
jb
push
das
dec
pop
pushf
in
sbb
add
mov
push
mov
js
xor
xlat
lea
cmp
xchg
movb
in
jecxz
icebp
or
add
in
outsb
add
rcll
sub
cmp
int
cmpsb
aam
xchg
incb
jmp
sti
add
sub
data16
faddl
sbb
or
fistl
ds
or
pop
mov
xchg
aam
jmp
mov
xchg
test
mulb
shll
mov
pop
and
lret
ja
imul
jns
out
or
or
adc
add
cmpsl
mov
sbb
rcrb
add
jg
and
dec
dec
xlat
shlb
add
leave
xor
das
daa
cmp
movsl
insb
ljmp
push
sbb
shrl
mov
add
jl
xchg
cltd
sbb
lea
sub
shr
pop
add
push
test
mov
mov
cmp
push
int
pop
ss
push
jne
add
clc
sub
add
push
fdivr
dec
js
mov
dec
sbb
add
cs
sbb
lods
sbb
add
or
test
push
movsl
xchg
pmaddwd
mov
jmp
outsl
and
ja
add
lea
es
repz
add
add
cmp
leave
and
lods
fs
or
aad
mov
dec
insl
mov
rcl
sub
xor
lds
pop
outsl
ret
push
mov
cmp
cmpsl
add
loope
xor
pop
data16
sub
fcoml
push
lods
rcll
test
inc
sub
pop
push
in
mov
push
add
cmp
add
loop
or
add
mov
ret
inc
ret
add
or
and
mov
bound
inc
stos
add
dec
add
add
xchg
sti
add
xchg
and
out
add
lock
mov
int3
add
push
sbb
xchg
xor
cmc
adc
int
xchg
push
add
iret
add
add
add
test
xchg
push
cli
mov
insb
iret
insb
jp
in
lock
add
fisubrs
faddp
jne
add
scas
mov
mov
push
cltd
and
pop
aas
push
das
xchg
mov
adc
inc
inc
inc
nop
nop
inc
lods
jae
add
jmp
add
sub
fs
add
push
daa
jle
filds
nop
gs
cmp
and
add
jl
pop
shl
cmpl
mov
aaa
addr16
add
inc
gs
add
add
sahf
shrb
xor
inc
add
popa
into
adc
sbb
sahf
mov
xchg
sub
lret
sahf
imul
cmpsl
shl
addr16
pop
es
cwtl
inc
lahf
mov
add
fadds
inc
fildl
imul
add
rolb
out
push
or
out
mov
movsl
test
mov
fiaddl
out
loope
cmc
jnp
sbb
bound
mov
sbb
sub
add
ret
into
push
add
inc
inc
sub
popa
add
mov
add
add
mov
sub
ffree
pop
inc
jb
pushf
sbb
or
pushf
sub
gs
and
add
js
lcall
stos
inc
cmp
mov
aam
das
dec
mov
pop
dec
push
push
fdivr
ret
inc
leave
sub
xor
push
push
imul
xchg
add
cwtl
jecxz
add
mov
call
inc
outsb
add
loopne
xor
adc
mov
insl
js
mov
daa
add
out
cs
add
and
dec
add
shl
mov
pop
or
rcl
lahf
out
notl
and
fwait
push
sbb
mov
scas
in
cmp
push
add
int
mov
in
jb
inc
jg
in
int3
es
xchg
enter
shrl
xor
outsl
rolb
add
push
mov
and
pop
pop
ret
loopne
fnstcw
add
loopne
mov
add
jne
aam
cmc
add
inc
add
fnsave
js
fmuls
xor
xlat
add
push
add
out
xchg
call
xchg
pop
ljmp
loopne
test
xor
lret
ret
mov
push
cmp
arpl
fwait
int3
mov
add
subb
lock
or
por
lds
clc
add
push
fcompl
rorb
in
test
fs
or
aas
or
mov
sti
cmp
inc
ss
leave
dec
pop
add
add
stos
xor
jmp
dec
inc
add
cmp
cmc
popf
pop
jge
push
add
dec
out
mov
mov
or
jno
add
repnz
arpl
icebp
sub
xor
out
les
pop
add
scas
lods
or
fisubrs
test
or
add
cmpxchg
pop
rclb
push
mov
mov
dec
dec
cmp
mov
or
cmp
cli
das
roll
add
scas
mov
push
add
loopne
rorb
inc
push
mov
xchg
jecxz
add
jp
xor
and
cs
sarl
pop
ljmp
push
adc
adc
es
leave
in
roll
stos
push
out
stos
add
je
fnstsw
or
sub
mov
popf
adc
cmp
xor
push
mov
pop
insl
lcall
add
lcall
negb
fcmovbe
repnz
data16
push
lret
mov
ja
add
jne
psllw
mov
mov
pop
add
daa
add
cli
mov
inc
ja
sub
orl
jge
pop
push
loop
cmp
fsub
add
dec
lret
arpl
ror
jmp
out
jmp
int3
push
push
pop
shll
inc
cmp
lods
mov
jmp
add
add
repnz
add
mov
rcrl
mov
dec
jg
mov
test
lcall
sub
mov
mov
push
das
cmp
fsubrs
test
es
je
outsl
mov
scas
sarb
cmp
add
pushl
push
pop
add
jl
push
push
insl
icebp
outsb
decb
arpl
mov
fwait
add
ret
fdiv
mov
xor
inc
push
lret
add
mov
mov
fmuls
scas
jge
add
mov
sti
pop
stc
and
mov
add
loope
ja
dec
jmp
es
and
push
sub
aam
and
jge
int
mov
xor
add
and
lock
lcall
pop
ret
jae
cmp
and
fcompl
xchg
jecxz
pop
scas
jl
jno
add
mov
xlat
movsb
push
imull
filds
or
or
cmp
add
mov
popf
mov
daa
imul
cmp
or
and
mov
mull
add
roll
add
xor
icebp
xor
icebp
in
jp
int3
add
stc
add
add
daa
lahf
clc
out
dec
push
andl
mov
cmp
mov
outsl
or
mov
sbb
iret
push
es
ret
pushf
aas
sbb
pop
sbb
add
add
fbstp
adc
loopne
cwtl
rorl
je
in
sub
add
mov
loope
jae
int3
jecxz
pusha
lods
xchg
inc
add
adcl
sub
das
xlat
std
mov
push
cld
add
jle
test
fcoms
stc
aas
lods
add
add
inc
cli
add
into
mov
mov
adc
mov
std
mov
add
das
test
dec
lods
jg
add
out
adc
push
xor
mov
fiadds
mov
test
add
jae
mov
dec
out
xchg
mov
loop
add
dec
add
dec
add
jecxz
xor
push
es
xor
add
pop
outsl
dec
dec
arpl
xor
xor
pusha
sbb
daa
add
or
xchg
int3
popa
cs
mov
jbe
pop
sbb
pop
lret
addr16
ror
inc
test
add
mov
scas
iret
push
add
and
dec
and
add
push
add
inc
add
jmp
dec
jl
cmp
into
movsl
add
xchg
xorb
mov
cmp
aaa
sub
and
lret
and
and
cmpl
add
jl
pushf
arpl
je
xlat
aad
dec
pop
xchg
push
faddl
iret
ss
jo
fcmove
mov
das
pop
movsl
stos
nop
jae
jp
mov
call
inc
mov
add
mov
mov
arpl
lcall
sub
dec
sbb
pop
add
movsl
lods
add
lods
xor
push
inc
ret
pop
scas
adcl
push
mov
iret
aad
mov
ret
or
ss
fstps
stos
jp
movl
or
dec
fbld
jl
inc
aas
inc
add
sub
addr16
add
negl
mov
mov
int3
lods
divb
mov
add
lods
cmp
pop
and
inc
dec
dec
out
gs
movsl
add
insb
out
mov
test
aam
dec
sub
aaa
fwait
into
sarl
xor
inc
lahf
xor
dec
je
testl
dec
outsl
dec
mov
lahf
icebp
xor
lahf
je
out
test
movsb
add
add
jl
push
out
dec
in
test
fistl
mov
leave
jnp
fwait
cltd
clc
pop
push
add
movb
add
out
in
faddl
cmp
sub
add
mov
outsb
rcrl
push
bnd
rcl
lret
jp
test
xor
mov
jne
sbb
and
mov
add
sti
mov
lret
out
adc
xchg
dec
in
xchg
jle
add
movsb
add
mov
in
in
mov
mov
arpl
xor
add
push
add
out
fwait
add
loope
xchg
fadd
inc
test
push
addb
mov
in
cld
sbb
jb
add
xchg
sbb
test
jmp
adc
loop,pn
pushf
adc
jnp
sbb
add
add
fidivrs
out
add
inc
jae
mov
add
jne
mov
inc
lret
jg
jge
dec
jle
dec
mov
adc
in
add
mov
jbe
dec
dec
mov
out
push
or
dec
or
jecxz
xor
test
add
or
div
imul
sub
or
movsl
test
stc
fs
roll
loopne
mov
iret
cmp
push
dec
add
or
and
cmp
xchg
mov
and
and
cmp
fcomi
lahf
mov
mov
mov
cmp
push
add
add
out
das
cwtl
insl
fstl
cmp
ds
push
jge
incl
xchg
or
jg
add
dec
add
mov
sub
mov
movsb
cmp
cwtl
inc
mov
sbb
cwtl
ret
cmp
shrb
inc
xor
je
shll
sbbb
add
mov
mov
jo
cli
mov
sbb
inc
aad
sbb
sti
mov
lcall
lds
inc
sahf
movsb
inc
mov
xchg
jnp
add
mov
imul
in
add
test
or
test
add
jb
clc
lcall
repnz
dec
insb
mov
jae
mov
mov
popl
sbb
adc
add
jle
lock
mov
mov
xchg
ss
fldl2e
pushf
fisubrs
xchg
negb
mov
ljmp
rorb
lock
sbb
sar
aad
fistpll
fstpl
int
fidivs
mov
add
test
arpl
pop
mov
sub
mov
pop
cwtl
clc
add
push
rclb
enter
scas
pop
add
mov
mov
scas
and
add
mov
scas
sbb
and
in
inc
inc
les
loop
xor
xchg
push
scas
inc
leave
push
pusha
add
lcall
cmp
mov
xchg
repz
mov
out
pop
xchg
add
push
ret
mov
sbb
push
add
add
sub
add
ss
or
or
push
push
xor
jmp
mov
in
add
scas
jne
rcr
push
mov
addr16
add
insl
adc
insb
jno
adc
add
add
cmpsb
add
mov
shll
push
xor
jl
testl
xchg
add
icebp
push
inc
adc
pop
sbb
mov
filds
es
stos
mov
add
repz
hlt
sub
mov
mov
popa
mov
inc
mov
push
push
add
ret
sbb
scas
adc
scas
xlat
add
dec
popa
add
cltd
add
push
jo
push
push
lcall
fstpt
jp
push
lret
sub
add
and
stos
imul
addl
cmpsl
xchg
sub
or
pmaxsw
xor
jmp
lods
les
std
jge
xchg
pop
fnsave
push
adc
pop
ss
jp
out
push
aaa
outsb
shrb
adc
mov
cmpsb
mov
cmp
xlat
cmc
cmp
outsb
push
push
cli
insl
jnp
or
mov
rolb
cmp
add
scas
push
add
or
xchg
enter
scas
scas
stos
jnp
sbb
mov
flds
or
iret
cmpsb
inc
jp
ds
push
lcall
jb
mov
js
cmc
enter
mov
cmpl
cmp
out
adc
cmp
xor
pop
mov
mov
insb
ffree
pop
add
add
and
add
call
fadds
sti
lea
dec
push
xchg
cmp
sbb
pop
mov
dec
ret
testl
add
data16
fcmovnu
cwtl
inc
xor
pusha
sub
sub
sbb
inc
and
or
sbb
or
xor
fnstenv
mov
test
add
sarb
push
pop
push
fadd
data16
add
je
arpl
add
mov
add
in
lock
out
sbb
inc
rcrl
shlb
inc
sub
xor
lds
jge
pop
out
dec
mov
in
jmp
add
stos
fcoms
aad
lea
mov
scas
inc
rolb
flds
add
ror
pop
arpl
insl
out
and
push
aad
adc
add
push
jge
ljmp
dec
in
push
xor
xchg
sbb
dec
fmull
dec
addb
push
sbb
lcall
pop
and
fnsave
sti
loop
std
inc
mov
adc
push
orl
lcall
dec
or
pop
push
add
cwtl
push
adc
xorps
jp
lcall
int3
sub
mov
mov
add
into
add
add
insb
add
pushf
cli
add
or
addb
mov
clc
lahf
lret
mov
add
push
dec
pushf
mov
push
aaa
cmpsl
or
pop
cltd
and
lods
mov
loopne
lret
int3
mov
movb
dec
arpl
xlat
pusha
or
cmpsl
pop
add
mov
lret
insl
dec
hlt
cmp
test
inc
pop
add
pop
or
enter
add
xchg
inc
in
add
verr
add
mulb
ljmp
insl
xor
lods
push
repnz
fdivr
shrl
dec
cmp
insb
add
idiv
add
xchg
sub
cltd
xor
sbb
jmp
test
jp
add
test
add
inc
mov
lock
dec
ret
ljmp
mov
js
xlat
aas
push
iret
adc
pop
cmp
sbb
mov
mov
mov
in
jb
imul
js
mov
mov
adc
xchg
mov
jnp
mov
aam
jne
pushf
rclb
or
imul
mov
mov
xlat
or
add
add
adc
sahf
ret
sarb
mov
test
mov
cli
repz
mov
cmp
inc
cmpsl
xchg
js
xor
mov
ret
push
mov
jne
add
movsb
aad
add
test
cmc
add
add
fistpll
mov
in
xor
out
ret
lcall
add
mov
stos
sbb
loopne
iret
sbb
sahf
mov
lcall
pop
pop
shll
xor
sub
pop
sti
adc
cltd
popf
lock
sbb
push
jno
push
inc
xor
inc
pop
sahf
lods
mov
jge
add
mov
and
mov
enter
xor
sub
gs
inc
ds
clc
add
sbb
pushl
ficompl
cli
mov
and
jb
sub
xor
adc
fistpll
push
iret
repnz
stc
add
aam
pop
nop
and
lea
adc
add
or
mov
nop
push
xchg
push
test
addr16
in
add
mov
cmp
lret
fistpl
sbb
dec
jae
pop
into
add
out
es
or
mov
push
insl
addl
jnp
inc
and
sub
jns
fwait
shr
lods
in
or
add
or
cmp
mov
stos
lock
js
add
fstl
cmp
ds
into
cmp
lea
mov
loopne
cs
mov
sub
xor
mov
in
inc
aas
xor
push
iret
cwtl
sub
mov
jmp
mov
bound
call
add
icebp
mov
or
cmp
inc
and
sbb
imul
pop
adc
pop
testb
push
sti
xchg
aas
enter
pushf
cld
cld
sbb
add
mov
and
adc
adc
loope
pop
int3
mov
mov
push
cmp
cmpsl
sbb
pop
neg
mov
dec
rclb
imul
xchg
xchg
scas
hlt
mov
xor
lret
cmpsl
add
imul
lods
popa
mov
jmp
fdiv
inc
mov
add
lds
fdiv
push
mov
mov
jmp
icebp
lret
popf
jp
fstl
sub
adc
inc
push
inc
subl
lds
cmp
add
aaa
xlat
fistl
mov
add
movsb
js
mov
sbb
pop
jno
pcmpgtd
test
loope
fidivl
push
movsl
lds
sub
or
inc
xor
in
mov
pop
pop
mov
sbb
xchg
jno
add
sarb
lcall
in
inc
xchg
movl
inc
ljmp
out
jb
dec
sub
sbb
mov
in
nop
ret
or
adc
sbb
add
call
pop
push
push
add
int3
inc
jnp
ret
test
sbb
add
xchg
outsl
daa
loope
roll
loope
add
push
fisttpl
fdivs
add
xchg
test
enter
ja
test
ds
jge
mov
decl
cmp
push
test
xor
mov
mov
lods
and
sub
insl
push
xchg
fcomip
mov
add
lret
repz
popa
imul
lcall
pop
dec
negl
add
fs
je
sbb
sbb
mov
xor
push
inc
cs
or
lahf
or
dec
repnz
enter
sbb
add
or
add
in
or
push
push
jb
dec
add
loopne
or
add
hlt
mov
faddl
or
add
xor
or
rol
xchg
mov
add
divl
pop
cli
sub
jg
mov
inc
jo
and
cmpsl
cmpsb
incl
inc
cltd
mov
call
out
enter
rorl
xor
aam
loopne
mov
adc
fldt
xor
bound
add
rcl
clc
and
clc
in
aad
movsb
in
mov
es
add
cmp
subl
cwtl
insb
cli
aad
test
stc
mov
enter
fldl
repnz
cmp
mov
cmp
lods
xor
mov
push
inc
out
insl
pop
push
push
mov
xor
add
add
jle
push
add
or
pop
push
je
hlt
iret
rorb
push
pop
std
cmp
in
mov
fdivrs
cmpsb
xor
and
add
add
add
add
in
into
jno
fstl
pusha
into
sub
cmp
add
fists
clc
fisubrl
xchg
xchg
push
pop
pop
aam
pushf
aad
push
leave
adc
sti
hlt
mov
xor
loopne
push
into
jo
add
sarb
xchg
cmpsl
notl
cld
dec
add
pop
pusha
add
cmp
in
test
shr
lds
std
icebp
or
dec
dec
dec
xor
in
add
out
and
push
or
mov
xor
shrl
add
fsubrs
cs
in
xchg
pop
mov
cmp
mov
push
inc
xor
sub
mov
arpl
and
sbb
sbb
mov
add
out
inc
lods
add
in
add
add
int3
jecxz
sub
ficoms
js
jns
add
add
inc
test
jmp
mov
jbe
jmp
arpl
push
add
xor
add
add
pop
and
inc
repz
insb
stos
mov
xchg
add
mov
dec
cmpl
mov
lcall
sub
jae
adc
dec
cmp
inc
xor
insb
lahf
mov
out
or
imul
jo
add
push
add
cmp
jb,pt
cwtl
in
mov
add
dec
popa
xor
std
cmpsb
sub
sahf
scas
mov
sub
inc
add
push
add
lds
jno
or
dec
jecxz
cld
xor
mov
cli
xchg
xor
jecxz
daa
xchg
ja
loopne
add
cli
out
fldenv
cmp
xchg
add
mov
and
adcl
inc
lcall
inc
imul
popf
lcall
adc
add
mov
insb
out
inc
push
adcb
lock
xchg
repz
pop
shll
pop
out
cld
int
aaa
not
push
push
inc
leave
leave
mov
dec
push
sub
fcoml
inc
test
push
add
cs
push
arpl
rcll
xchg
mov
add
mov
lock
lret
jbe
add
add
lret
add
xchg
lret
add
push
add
dec
dec
xlat
and
ss
jae
mov
add
sbb
cmc
aad
add
mov
xchg
es
aas
jne
scas
add
stc
or
lds
pop
loop
mov
fstp
sahf
fidivrl
ljmp
jne
add
pop
mov
outsl
push
cmpsb
pop
movl
dec
fnstenv
mov
clc
add
push
mov
dec
out
inc
repnz
in
mov
call
decl
add
jae
in
xor
pushf
add
daa
adc
cmp
loopne
test
loop
add
mov
out
jle
mov
mov
rcll
push
or
push
or
fwait
and
mov
daa
pop
ja
or
push
xor
imul
notb
add
fxch
loopne
cmp
add
sbb
addb
mov
sahf
adc
fidivrs
cmp
xor
add
push
adc
add
out
daa
mov
add
lods
add
sbb
mov
inc
inc
add
add
add
and
imul
add
cmp
mov
mov
mov
sarl
fldcw
out
dec
add
fidivs
mov
add
add
lock
sbb
js
xlat
adc
sub
mov
xor
aas
jl
push
adc
in
mov
push
daa
test
xlat
imulb
cmp
lock
insb
push
rcl
pushf
adc
cmc
test
add
insb
xchg
aas
sub
mov
add
sti
scas
mov
cmpsl
jae
sti
jl
pop
in
test
lldt
es
es
or
xor
aaa
push
stos
lcall
add
lds
out
adc
mov
adc
cmc
sarl
mov
dec
lret
stos
sahf
cmpl
inc
jge
lret
or
push
int
mov
jp
cmp
gs
rol
add
iret
mov
lock
xchg
xlat
int
and
jle
lds
xchg
adc
mov
outsb
add
sbb
scas
cmpsl
pop
sub
nop
push
xchg
sahf
add
sub
fimull
mov
pusha
mov
sub
xor
idivb
aas
out
jecxz
loopne
int3
sbb
enter
out
loop
mov
loopne
jecxz
pop
call
imull
xchg
aam
adc
int
cmpsl
lahf
jno
test
lea
pop
push
jg
neg
das
dec
arpl
mov
xchg
int3
in
push
add
push
imul
je
arpl
cmp
fsubl
sar
mov
push
dec
lock
and
add
stos
sti
pushf
stos
gs
xchg
arpl
adc
xchg
out
inc
push
add
adc
mov
shll
daa
js
and
cmpsb
lock
push
lods
popa
mov
xchg
mov
in
dec
outsb
nop
imull
aam
jg
mov
bnd
shlb
xchg
inc
fsubrl
mov
sub
pushf
add
add
int
push
sbb
aam
int3
pop
sub
push
fwait
and
dec
rolb
in
iret
repz
lret
xchg
adc
cmp
jo
movsl
and
lahf
lods
sub
mov
add
arpl
xchg
cmc
test
add
or
mov
in
dec
movsb
xchg
add
pop
outsb
std
jne
dec
mov
das
inc
jmp
fldl
imul
mov
push
cli
push
lret
push
push
add
add
in
lret
sub
cs
push
pushf
push
in
int
testl
test
cmp
xchg
repz
add
add
cld
lcall
adc
xchg
sahf
inc
pop
movsb
jnp
sub
mov
mov
shll
mov
xchg
dec
inc
and
push
icebp
jge
cwtl
into
and
icebp
jmp
add
ljmp
pop
ror
xchg
inc
add
je
iret
push
test
xchg
adc
xchg
sub
in
ss
dec
dec
and
sub
ja
loope
xor
ret
xor
push
out
test
inc
mov
in
jp
pop
out
add
sbb
sar
pop
fiaddl
in
mov
sbb
fnsave
andb
fiaddl
add
ss
mov
mov
mov
xor
ret
fdecstp
mov
inc
and
test
jb
repnz
cmp
les
add
jecxz
mov
cmpsb
rorb
js
imul
lea
add
add
imul
add
sbb
cmp
mov
ret
adc
jge
mov
add
dec
scas
incb
fisubl
add
add
add
idivl
repnz
jnp
andl
mov
mov
mov
add
neg
adc
and
xchg
mov
pop
xchg
add
inc
mov
cmpsl
push
push
inc
es
jns
rclb
insl
movsb
add
or
addl
loop
sahf
sub
dec
or
pop
imul
adc
xor
mov
pushf
stos
out
ss
fs
sub
dec
mov
xor
push
jb
loope
jg
scas
add
adc
jb
add
out
add
mov
imul
or
add
sbb
repz
das
clc
shl
add
fwait
and
inc
cmp
mov
in
push
rcrb
outsl
das
inc
mov
push
stos
xchg
nop
pop
xlat
aas
hlt
std
add
xor
adc
push
cmp
roll
jge
xchg
outsb
cmp
ja
mov
push
scas
out
mov
add
jge
movsb
or
pop
lods
xchg
add
adc
mov
fs
xor
cwtl
fiaddl
negb
div
push
add
fiaddl
mov
data16
inc
sbb
mov
fidivrs
inc
shlb
inc
push
testb
fidivrs
or
outsl
push
icebp
shl
repnz
push
add
jl
addr16
les
sub
push
mov
out
add
or
nop
pop
pop
cmp
xor
fdivr
fildll
xchg
fwait
push
pop
pop
add
sub
inc
inc
add
xchg
xor
mov
lea
add
adc
lea
in
pop
shlb
mov
cld
sbb
xchg
cs
and
mov
ljmp
imul
cwtl
aas
stc
add
cmpsb
fisubrs
mov
push
and
mov
lea
mov
push
jae
mov
enter
mov
sub
jae
adc
shl
or
loop
repnz
push
push
mov
insl
cmpsl
sbb
add
pushl
in
pop
add
inc
fldt
xor
fwait
sub
or
hlt
sahf
push
in
add
sub
bnd
adc
pop
imul
lahf
and
lock
or
add
shlb
mov
test
cmp
mov
jae
loop
lds
sub
push
pop
scas
gs
or
mov
jnp
test
mov
ja
add
inc
ljmp
stos
add
mov
sub
add
ret
sbb
add
pop
imul
push
inc
mov
and
add
hlt
mov
add
add
cmp
icebp
subl
push
add
jne
filds
icebp
push
sbb
push
inc
mov
xchg
sbb
les
adc
pop
cld
lret
or
out
ss
push
inc
inc
aad
or
int3
inc
add
testl
pop
shrd
bound
cmp
cmp
mov
shlb
aaa
adc
out
cs
sbbl
out
clc
fidivrs
add
mov
sahf
inc
mov
mov
pop
sub
mov
push
pop
jne
jne
int
sub
in
adc
pop
jae
addl
add
lcall
dec
push
mov
clc
add
outsl
or
andb
xor
push
xchg
ret
cld
mov
inc
in
mov
negb
popf
repnz
add
ja
ljmp
push
xor
insl
mov
js
cwtl
rcll
jmp
inc
int3
adc
mov
repnz
repz
xchg
das
xor
fwait
mov
cmp
shr
ljmpw
adc
mov
popf
add
inc
sub
shll
xchg
mov
mov
les
mov
mov
xlat
fsubs
popf
dec
fcoml
push
xorl
rcrb
xchg
in
js
imul
push
stc
xchg
and
or
mov
xor
mov
stos
out
cmp
push
popf
xor
sub
rorb
cmp
add
sub
jo
jno
jp
add
inc
xchg
dec
sbbl
mov
cmp
rcll
nop
cli
add
ficoml
add
std
fbstp
jne
adc
add
add
ljmp
push
xor
pop
add
leave
icebp
std
dec
push
sarb
cmc
test
and
fadds
push
push
mov
add
lock
in
pop
mov
add
addb
clc
sub
push
lds
mov
add
pusha
xor
push
daa
sbb
cld
es
or
adc
mov
leave
mov
xchg
adcl
add
add
pop
fdivrl
sub
dec
mov
pushf
xor
jne
mov
push
fisubrs
sahf
leave
out
sarl
dec
inc
repnz
add
xor
lahf
push
shr
xchg
shll
clc
adc
add
mov
xchg
repz
dec
andl
push
and
inc
xchg
sub
icebp
mov
movsl
pop
add
adc
mov
push
xor
sub
fwait
jo
add
sub
add
jbe
fisubrs
andb
adc
mov
movsb
mov
std
cmc
dec
std
cld
mov
xchg
out
add
inc
test
or
push
cmp
xor
inc
gs
mulb
subl
fldt
sbbl
ret
or
sub
faddl
fs
xlat
pop
ret
pop
ja
cs
add
xor
add
add
push
add
orb
nop
and
lret
xchg
scas
xchg
ret
popa
pusha
xchg
insb
jns
mov
mov
xchg
inc
sub
mov
out
pop
xor
dec
and
sahf
xchg
nop
shrd
xchg
sbb
nop
cmpsb
aam
xchg
or
add
out
mov
xchg
pushf
xlat
iret
cmp
xor
cltd
mov
mov
scas
jbe
aam
lods
sub
inc
jbe
ja
addb
daa
ja
jecxz
cmpsb
jnp
inc
test
adc
xchg
fsubrl
decl
nop
cmp
push
roll
push
xor
cld
addr16
shr
aas
add
xchg
shl
fs
add
or
add
push
add
mov
gs
cmc
out
sbb
pop
dec
test
mov
add
add
push
and
add
frstor
lods
adc
int3
push
xor
push
mov
push
add
add
imul
bound
add
mov
mov
cltd
sbb
add
mov
ja
mov
and
filds
out
stc
shll
mov
jo
sub
xchg
and
in
add
cmp
inc
mov
test
es
pop
out
sub
xor
into
stos
inc
add
adc
push
and
sub
or
pop
add
inc
mov
xchg
mov
ficomps
add
test
add
mov
test
test
push
add
adc
adc
mov
or
aam
xor
sub
das
adc
dec
pop
pop
push
popa
xchg
dec
xor
push
or
adc
sub
mov
movsb
pop
mov
out
shll
push
shrl
js
add
add
xor
xor
ret
lds
pop
inc
aad
movsl
jnp
mov
sbb
stos
cmpsl
pop
jno
dec
insb
sbb
roll
push
sub
and
add
mov
call
lahf
dec
fmull
push
or
mov
cmpsl
enter
add
adc
sub
jne
add
into
push
push
daa
cmp
test
mov
xor
jno
push
add
in
mov
push
dec
int
cs
int
push
and
adc
pushf
fwait
lcall
test
xor
mov
mov
movb
dec
jle
xor
mov
xlat
ficoms
add
mov
push
add
decl
jmp
cmp
dec
xchg
add
lret
orb
insb
mov
push
lret
out
daa
inc
push
xchg
xchg
dec
pop
pop
mov
inc
enter
outsl
and
add
push
popa
cmc
das
or
xchg
mov
and
mov
jne
cmp
sbb
test
adc
lret
xor
pop
in
inc
in
xchg
mov
xchg
das
int
xor
fisubl
push
test
mov
dec
shlb
roll
clc
push
push
inc
add
setns
in
mov
scas
cmp
mov
mov
stc
stos
aam
add
and
push
add
xor
rcrl
out
test
ja
inc
ds
xor
sbb
ds
rcl
dec
mov
mov
pop
lock
adc
imul
jp
add
arpl
movsb
iret
xor
jl
mov
repnz
xor
xchg
cmp
push
shll
mov
xor
push
cmc
jbe
adc
lret
mov
les
add
inc
jle
inc
sbb
or
shll
das
push
push
add
je
mov
test
add
mov
das
dec
xlat
add
mov
sbb
cmp
sbb
dec
lahf
xchg
das
push
leave
xchg
test
gs
clc
xchg
jne
add
jns
add
add
sbbb
data16
add
mov
leave
pop
add
jecxz
insb
add
pop
jp
faddl
mov
and
add
inc
test
xchg
gs
pusha
pop
mov
jecxz
dec
add
divb
push
lea
rorb
mov
push
add
loopne
add
adc
in
stos
push
lods
lahf
pop
testb
add
mov
frstor
inc
enter
in
add
and
add
xchg
pop
mov
rol
arpl
adc
xor
jnp
fdivl
pusha
fists
mov
push
lds
xchg
imul
add
pop
or
icebp
rcr
pop
sahf
shlb
mov
ja
jl
pop
push
ja
cld
xchg
andl
mov
insl
bound
stos
int3
xchg
mov
test
loope
add
notb
mov
and
xor
jle
mov
pop
pop
push
add
dec
repnz
pop
cltd
push
hlt
push
add
push
add
or
xchg
mov
sub
shl
or
cmova
add
and
hlt
sti
jle
ss
or
loope
addl
cmp
cmp
lock
pop
jmp
mov
mov
or
adc
int
cmp
jo
popf
and
push
jmp
popa
data16
push
repz
adc
ret
and
cmp
out
adc
stos
push
das
dec
mov
data16
sbb
dec
add
sub
iret
sbb
adc
mov
mov
clc
jl
das
pop
push
pop
add
push
add
hlt
jns
sbb
pop
imul
add
add
stos
jmp
push
mov
add
outsb
std
push
cmp
sub
adc
xlat
cmp
mov
sub
imul
call
pushf
add
and
mov
and
jnp
ja
pop
aaa
xor
daa
test
jg
add
stc
add
add
jo
lret
add
jb
stos
fwait
mov
push
inc
pop
sub
inc
add
push
jnp
aas
push
jmp
rorl
ja
fwait
inc
add
pop
in
and
addl
dec
stc
loope
xor
scas
pop
ret
aaa
scas
mov
jns
outsb
mov
arpl
out
loope
mov
dec
arpl
xchg
cmc
iret
aaa
mov
and
cmpsl
jne
in
pop
add
stos
mov
nop
jo
sbb
repnz
cmp
push
and
pop
out
aad
cmp
push
pusha
daa
inc
cltd
pusha
and
fs
adc
pusha
aam
pop
dec
test
je
cli
lods
mov
add
lcall
clc
jp
adc
mov
add
outsl
clc
add
and
xchg
dec
mov
mov
lds
sahf
sub
add
mov
pop
out
pop
roll
adc
jmp
in
xchg
lods
xchg
rcrl
cmp
adc
cmp
mov
sub
jle
add
dec
mov
inc
mov
imul
push
scas
popf
push
mov
hlt
lcall
in
je
mov
push
push
pop
and
in
ret
aad
iret
rolb
adc
push
xor
jge
xchg
xchg
sub
add
cmpsb
add
in
mov
and
test
fisttpll
adc
lret
stos
mov
movl
shr
or
add
frstor
push
fdivrs
push
add
outsb
pop
iret
mov
call
add
in
lods
push
stos
inc
jecxz
add
mov
in
dec
jge
add
lock
pop
out
add
dec
sbb
fistl
xor
frstor
and
add
cmc
out
out
add
add
popa
add
mov
lret
jecxz
add
mov
sub
pushf
daa
cwtl
fisttpll
xorb
jmp
pushf
std
add
add
add
add
sbb
mov
popf
out
xor
lahf
mov
push
add
lcall
ljmp
pop
adc
xor
testl
rorl
mov
fcomp
in
dec
call
add
adc
jo
adc
push
lock
sub
out
add
sub
xor
mov
mov
xchg
add
cmp
or
test
stos
fst
test
add
divb
xchg
leave
mov
mov
pop
push
je
add
loop
pop
push
adc
push
pop
add
jg
cmc
add
out
aam
jb
insl
aam
fdivrp
mov
fisubl
or
outsb
dec
xchg
das
movsl
lret
adc
lods
lods
mov
xor
lea
shl
cmp
je
add
and
add
and
cmp
add
scas
jbe
push
imulb
or
dec
inc
add
call
sub
bound
cmp
sub
push
movsl
incb
xchg
enter
cmp
add
sub
shll
in
and
xchg
repz
les
jecxz
add
sbb
inc
pop
sub
mov
adc
add
scas
das
in
adc
scas
mov
push
inc
jecxz
mov
push
out
xchg
popl
daa
mov
sti
or
add
das
in
xor
cli
das
jmp
sbb
and
xchg
cmpsb
mov
ficoml
imul
cmc
mov
and
adc
add
mov
loope
shlb
les
mov
sbb
mov
call
and
shlb
inc
xor
add
adc
aad
add
mov
call
pop
movsb
fmulp
js
int3
add
mov
ret
adc
and
cmpb
pop
fs
adc
pop
push
sub
mov
cmp
cmp
shll
sahf
aam
pop
aam
or
add
ret
rolb
mov
repnz
sarl
xchg
xlat
loopne
jnp
lret
add
mov
add
int
jl
orb
jg
lods
andps
push
outsb
cmpsl
jge
or
push
mov
jo
pop
test
add
scas
sub
pop
data16
push
outsb
cmpsl
adcb
cld
jbe
add
xchg
inc
xchg
pushf
xchg
and
add
stos
fmul
mov
clc
jne
fadds
add
dec
cmp
mov
shlb
sub
popa
sub
daa
mov
push
imull
mov
add
gs
and
in
pop
daa
xchg
icebp
add
in
into
pushf
ret
sbb
push
out
push
ja
pushl
fwait
loopne
inc
pop
shlb
into
cmpsb
sub
adc
pop
lcall
push
xchg
dec
jo
mov
clc
jne
sbb
sbb
popf
jbe
aaa
insb
outsb
dec
ret
jae
cltd
push
adc
int
xor
mov
inc
cmp
add
mov
lock
push
or
add
popa
xchg
xor
popa
stc
popa
pop
cmp
push
bswap
add
or
fbstp
cmp
pop
jno
lods
add
xchg
mov
xchg
xchg
ret
lods
aad
add
push
loop
pop
or
or
push
add
das
and
add
roll
ss
add
dec
sub
repnz
lods
icebp
mov
push
mov
pop
sbb
jns
test
mov
push
and
pusha
scas
incl
cwtl
addr16
rcrl
lret
hlt
sahf
adc
jo
loop
mov
cmc
sub
mov
mov
pop
add
imul
pop
jb
add
insl
xchg
lret
push
mov
or
lods
int
icebp
xchg
ja
fdivr
inc
incb
xchg
lods
test
mov
push
dec
jns
mov
push
xchg
jns
jmp
loope
xor
call
add
fisubs
dec
cmp
adc
dec
nop
adcb
movsb
test
test
dec
mov
mov
enter
pop
cmp
fstl
cmp
and
dec
ja
fadd
aaa
in
add
mov
incb
jg
sbb
xlat
lods
sarl
sbb
xor
add
add
dec
aam
adc
imul
test
mov
pop
push
xchg
and
sub
adc
add
sahf
or
idivl
jnp
add
stos
cmpb
mov
mov
add
xor
lret
mov
pop
subb
leave
add
es
add
inc
mov
cwtl
add
jp
push
cwtl
lahf
iret
lock
and
sbb
call
mov
add
inc
add
insb
xchg
xchg
jne
fs
js
mov
cltd
imul
imul
mov
sub
or
add
mov
add
pushf
adc
mov
push
jecxz
add
inc
push
push
add
pop
in
dec
xor
and
add
repz
cmp
push
bound
add
pop
mov
sub
add
aad
incl
cltd
or
aam
bound
inc
rcl
in
mov
or
ljmp
cmp
jp
dec
jnp
nop
sbb
loop
add
jns
stos
add
sbb
int3
inc
pop
in
adc
stos
xor
lret
arpl
pop
cltd
add
jp
stc
push
cmpsl
in
pop
adc
mov
mov
sbb
add
test
and
jo
adc
lcall
adc
jle
mov
or
xchg
add
add
pop
cld
push
add
icebp
inc
add
pushf
add
add
outsb
rcr
out
add
add
and
insl
add
mov
adc
outsb
sbb
add
sbb
inc
adc
test
fdivl
into
dec
jne
inc
in
jbe
xor
imul
dec
and
je
add
push
xchg
push
mov
pop
pop
dec
jle
repz
rcl
stc
shrl
mov
add
insb
sbb
xor
add
int
xorl
shl
loop
jne
inc
push
sbbl
mov
push
inc
call
lret
mov
add
pop
lret
sub
sub
add
cmp
mov
aam
jmp
pop
and
pop
cli
sbb
push
les
stos
sub
cs
fdivrl
mov
addr16
fdivr
add
mov
aaa
lret
shll
jl
out
gs
and
sub
inc
xchg
add
out
sub
mov
jge
adc
mov
imul
notl
js
stc
pushf
dec
add
lret
arpl
sub
jge
repz
mov
mov
add
in
jo
out
and
inc
push
dec
inc
push
shlb
mov
dec
scas
shrb
cmp
add
sarb
push
fdivl
stc
adc
mov
add
mov
mov
aam
pop
push
ret
and
xor
and
cld
add
fisttpll
rolb
mov
jl
orl
out
inc
lods
xlat
out
sbb
clc
xor
push
pop
adc
cli
fiadds
cmpsb
cmc
sbb
and
addb
add
in
add
movsb
lock
add
scas
sti
loop
cld
data16
or
int3
jmp
add
inc
lods
jnp
in
xchg
lods
dec
sbb
sti
pop
rcrb
mov
sub
ja
jl
add
fnstsw
je
jo
out
repz
cmpl
xor
scas
add
mov
pushf
std
mov
mov
mov
daa
or
cld
mov
xchg
push
add
jmp
pusha
sbb
test
dec
push
pop
mov
shlb
sbb
xor
and
push
insl
add
outsl
roll
mov
xlat
add
jge
jne
adc
nop
aas
xor
insb
test
aaa
mov
xchg
roll
add
cli
test
filds
fnstsw
fsubrs
orb
push
mov
add
js
add
jle
mov
mov
insb
fcompl
xchg
lock
lret
pushf
inc
xchg
adc
and
or
mov
ret
test
or
inc
mov
imulb
dec
push
push
insb
popa
int
cmp
verr
pop
push
sub
jl
push
add
and
cmp
and
mov
scas
inc
sbb
movsb
mov
fxch
mov
hlt
push
loopne
and
xchg
fwait
add
pop
enter
add
lcall
sub
add
cltd
into
sbb
int
add
mov
add
mov
cmp
lret
jecxz
dec
enter
jle
push
add
fbstp
mov
mov
adc
xlat
adc
ljmp
pop
pop
mov
sbb
sbb
iret
adc
inc
adc
rclb
xor
in
sbb
arpl
popf
pop
call
and
fistps
inc
xchg
add
aad
pop
jmp
in
and
mov
push
mov
add
jbe
add
sub
test
sub
adc
mov
push
nop
xlat
mov
icebp
test
in
xchg
flds
lret
add
xchg
and
aas
xchg
pop
mov
add
add
dec
lods
ret
add
jg
dec
scas
push
push
or
movsl
cmp
jns
test
nop
or
dec
sub
add
sub
and
mov
rorl
ret
nop
or
push
and
add
outsb
add
jo
out
xor
jns
jg
ja
shrl
cmp
lea
cmp
mov
dec
aad
loopne
xor
out
and
pop
pop
pop
pop
sub
int
or
jne
sbb
dec
sbb
add
inc
mov
stos
jno
xor
add
jecxz
push
xchg
xor
xor
jge
data16
or
mov
jg
add
hlt
or
add
sahf
mov
in
movsb
sbb
filds
or
popf
mov
sbbl
mov
insl
mov
add
jo
lret
flds
push
push
roll
test
mov
add
repz
clc
movsb
push
add
repz
outsl
pop
bound
imul
push
sbb
add
add
lock
fimuls
sub
and
lret
iret
push
outsl
jp
adc
movsb
stc
add
rolb
add
push
subl
add
fiadds
test
insl
cmpb
pop
and
mov
push
xlat
pop
test
insb
xchg
out
push
add
add
xchg
outsb
in
jecxz
add
aam
xor
sub
loopne
ds
stc
jmp
add
nop
aam
test
addb
mov
add
lret
pop
into
in
sub
inc
pop
pusha
or
inc
sarb
inc
add
jo
sti
or
jmp
or
dec
mov
adc
sub
mov
push
loop
pop
movsl
add
rcr
adc
xchg
fisttps
sbb
lock
pop
mov
les
xchg
sub
mov
mov
inc
out
and
scas
push
lret
mov
cld
sbbl
sbbb
out
sub
bound
pop
cli
jo
imul
pop
add
icebp
sbb
xor
icebp
push
addr16
dec
movsb
jge
add
lcall
cs
xchg
andb
lahf
add
add
mov
dec
and
add
jbe
addl
lret
push
lods
mov
xchg
negl
test
dec
std
mov
fmulp
mov
xchg
add
add
push
sub
pop
in
lods
xlat
xchg
xchg
in
mov
jmp
xor
das
adc
add
push
lods
cmp
sub
jg
dec
loope
and
push
pop
push
out
pop
dec
pop
sbb
xchg
out
jle
in
add
inc
lret
jl
lds
or
into
jbe
add
add
sub
adc
outsl
push
icebp
add
dec
sti
add
test
shll
popa
add
sub
sub
fs
mov
pop
pop
ja
cmp
sarb
scas
dec
pop
rorb
xor
sbb
dec
rol
out
cld
scas
ret
sbb
and
ja
subl
mov
or
dec
push
mov
mov
in
add
dec
ljmp
pusha
jl
dec
js
dec
xchg
imul
stos
mov
pushf
jae
add
ffree
mov
ja
mov
add
xchg
out
cmp
xor
add
sub
int
mov
add
cmp
mov
lock
cmp
mov
jp
add
loop
in
push
mov
movsl
inc
pop
push
mov
lods
add
fildl
mov
and
nop
add
scas
mov
or
mov
add
dec
jp
cmp
mov
jg
je
sbbb
mov
mov
push
loope
stos
outsb
and
adc
inc
out
pop
repz
movb
test
jmp
sbb
mov
subl
ds
nop
mov
insb
mov
gs
loop
arpl
dec
ret
cwtl
jno
add
jno
mov
mov
sahf
fmull
add
jae
or
jbe
dec
adc
cld
mov
or
roll
cmp
cmp
lret
stos
popa
add
mov
adc
mov
pop
repnz
mov
and
imul
and
push
xor
mov
mov
jecxz
or
dec
pop
in
push
mov
insb
sbb
out
jo
mov
leave
arpl
cmp
ja
xchg
pop
imul
add
icebp
xor
pushf
unpcklps
outsl
js
std
ljmp
aam
jg
subl
test
inc
cmc
inc
cli
add
fnstsw
bound
mov
pop
add
cmpsb
lret
pop
test
lds
cmpsl
sbb
xor
shlb
add
fistpl
shlb
addl
jecxz
leave
ret
movsl
movsb
imul
add
imul
ja
pop
xor
fnstcw
lea
fldcw
iret
movsb
into
iret
stc
pop
out
add
add
les
out
add
mov
xor
mov
lds
lret
test
and
jecxz
movsb
movsb
xor
out
lcall
jo
icebp
add
jbe
adc
add
push
movsl
rcrl
and
and
and
push
lods
dec
icebp
iret
cltd
add
fldt
outsb
addl
jle
inc
outsb
sahf
cs
sub
out
sbb
jg
pop
icebp
add
repz
xchg
add
sub
push
out
mov
movsb
push
or
xor
mov
or
jl
jg
popa
push
mov
cmpsb
and
push
dec
or
sbb
sbb
sbb
xchg
fwait
lahf
mov
cld
lock
insb
outsl
movl
cs
fisubrl
mov
insl
shl
call
push
popf
jl
das
xor
mov
add
dec
mov
gs
jle
int3
aaa
popa
pop
mov
adc
xchg
jp
repnz
pop
add
dec
inc
lahf
mov
pop
loopne
xor
mov
dec
xchg
fwait
mov
test
popf
rol
add
adc
das
scas
add
inc
test
push
lret
movswl
cs
enter
mov
lcall
inc
and
mov
inc
add
and
loopne
add
push
push
push
jp
mov
sbb
add
cmp
ret
stos
and
dec
mov
int
jne,pn
fwait
push
mov
add
and
out
add
dec
pusha
jg
xchg
imul
add
dec
mov
jl
mov
mov
lods
mov
mov
mov
in
dec
push
add
mov
pushf
or
gs
in
add
sbb
in
jne
and
add
andb
ja
jno
icebp
add
lret
cld
nop
scas
enter
ret
test
ljmp
ret
sub
adc
sub
xor
imul
mov
add
sub
stos
insb
jb
dec
xchg
mov
xchg
pop
incl
jno
fucomip
push
enter
mov
mov
push
fbld
enter
lret
ds
mov
les
add
repnz
pop
add
es
add
push
imul
sbb
mov
stos
in
add
dec
stos
scas
xchg
cmc
push
je
in
das
and
add
ret
inc
loope
xor
nop
push
imul
pusha
add
mov
ror
jge
sbb
into
xchg
cs
xchg
cld
sbb
movb
adc
in
data16
insl
add
push
add
xor
inc
pop
lods
mov
add
repz
lods
test
adc
add
cmp
push
jg
mov
ds
enter
rolb
dec
aam
sahf
add
dec
cltd
add
nop
add
fisubrs
orl
cmp
bound
or
and
hlt
out
jno
jbe
pop
aad
add
lret
outsl
xchg
add
repz
add
fwait
cmp
scas
loope
xor
xchg
ret
mov
dec
add
mov
mov
mov
subb
jo
jae
jg
addr16
add
jne
pop
push
add
rolb
adc
and
jle
popf
jns
xchg
mov
loopne
inc
in
orl
or
lret
adc
in
ret
fidivrs
and
add
jns
hlt
pop
pop
add
xchg
js
and
or
jns
lock
mov
dec
jl
pop
xchg
jl
test
inc
mov
insb
add
pop
sbb
sub
out
push
lea
fists
popa
pop
sbb
xor
outsl
pop
adc
cmpsb
mov
lret
jnp
shrl
mov
jmp
sbb
sub
adc
and
lahf
add
aaa
out
out
pusha
loope
inc
push
pusha
xchg
cmc
dec
stc
add
sti
cmc
mov
in
icebp
lds
jl
ja
cmp
or
pop
inc
jo
add
add
nop
push
lret
out
int
fadd
das
fldl
dec
inc
fstpt
xor
int
sub
mov
and
cmp
adc
mov
add
insb
in
add
gs
fidivrl
movsb
mov
push
xchg
mov
pop
movsb
stc
add
out
lds
arpl
cmc
jb
mov
ja
cmp
adc
popf
adc
lret
xchg
push
cmp
daa
fstpl
shrl
cmp
jb
sahf
add
xor
test
add
mov
cld
cmc
dec
jno
add
mov
adc
iret
pop
add
add
add
jns
inc
mov
and
add
lock
fsubl
into
and
mov
xor
xchg
mov
pushf
pop
sbb
in
cmp
sbbb
jg
imul
fisttpll
adc
scas
dec
add
sbb
push
xchg
pop
add
add
add
incb
rolb
sbb
xlat
out
dec
sarb
incb
dec
add
add
fwait
sub
add
loop
add
cs
and
pop
add
pop
mov
inc
or
cmc
add
aaa
add
sub
lods
xchg
add
pop
jle
js
and
fimull
push
loop
xchg
cmpsl
add
adc
cmp
aaa
add
mov
xchg
mov
mov
xor
adc
cmp
in
mov
test
icebp
add
lcall
cli
cltd
cmpsl
lods
jns
std
add
out
movb
inc
add
jb
sub
pop
std
add
inc
in
out
mov
pop
test
and
std
add
mov
dec
fwait
adc
fs
pop
call
rcr
pop
test
clc
fildl
enter
sub
cmp
sub
sbb
mov
add
sub
xor
imul
adc
out
aam
fwait
and
pop
adcl
dec
xchg
notb
cmp
mov
lock
negb
add
jne
jno
push
cmp
mov
sbb
ds
sub
inc
ror
mov
dec
std
mov
mov
mull
cwtl
dec
fs
js
repnz
movsl
pop
fldcw
sbb
sub
add
iret
pop
lods
out
add
xchg
rcrb
and
mov
sbb
insl
test
jno
push
and
jns
movl
out
loop
pushf
sub
fs
popf
jp
add
cli
jg
xchg
and
sahf
adc
push
andb
lret
xor
and
jg
mov
adc
mov
add
popa
insb
mov
add
add
dec
push
cmp
out
adc
loope
sarl
stos
dec
push
outsl
pop
dec
out
dec
lock
out
leave
push
pop
out
sub
push
pop
dec
mov
xor
stos
cmpsb
add
out
and
lcall
imul
push
add
nop
dec
xchg
pop
or
iret
dec
push
int
cmp
inc
push
jnp
sbb
pushf
test
add
gs
scas
clc
add
xchg
lods
mov
mov
mov
and
mov
popf
xor
mov
out
jae
xchg
adc
test
inc
adc
stos
aad
mov
insb
add
daa
add
push
out
add
add
ss
test
jnp
mov
mov
lret
pop
sub
adc
add
dec
rolb
lods
dec
addr16
fsubl
sub
add
pop
add
jg
inc
cmpsl
add
daa
loopne
sub
inc
in
rclb
dec
push
cmp
jl
fsubr
xchg
popf
inc
dec
int3
add
push
test
adc
add
outsb
mulb
pushf
push
inc
or
daa
lea
test
sub
loope
jo
mov
int3
out
cmp
in
dec
aad
and
outsb
inc
call
std
cmc
add
arpl
push
adc
push
xchg
iret
pop
aaa
cmp
sub
aam
gs
mov
and
pushf
ret
mov
jge
aam
inc
push
xor
inc
fnstcw
add
add
cmp
add
xlat
imul
imul
pushf
or
ds
movsb
dec
cli
add
add
sti
add
adc
out
aam
test
mov
lea
add
add
add
and
imul
push
out
daa
fisubs
add
inc
dec
dec
test
jo
push
stos
sub
stos
sbb
notb
mov
cmp
or
lods
add
mov
pop
add
push
push
or
cmp
ret
insb
xor
xchg
add
loop
add
mov
inc
divl
xchg
pop
ljmp
and
add
test
add
mov
xchg
fnstenv
push
sub
fstp
leave
pop
and
mov
xchg
mov
mov
mov
add
je
inc
mov
mov
mov
add
push
fs
xchg
daa
mov
gs
add
mov
push
mov
out
mov
mov
mov
jbe
insb
xchg
inc
fistps
mulb
ret
sub
cmp
arpl
sbb
xlat
pop
jbe
mov
lret
push
in
add
dec
out
sahf
xchg
loopne
shrb
pop
dec
mov
test
add
add
pop
add
fidivrl
dec
xor
loop
add
mov
subb
in
loopne
faddl
cwtl
push
sub
push
mov
mov
mov
xchg
arpl
cltd
cmp
xchg
es
fimull
lds
dec
stc
add
test
rcll
sub
xchg
jb
push
or
push
sub
add
insl
loopne
ret
mov
mov
aas
aas
xlat
xchg
or
jo
dec
lahf
jmp
aaa
sbb
outsb
stos
and
aam
mov
pop
outsb
pop
imul
add
xchg
ficoml
add
or
mov
fs
in
adc
shll
ja
in
mov
pop
lret
cld
add
add
lret
add
xchg
je
sarl
mov
dec
sub
insb
xchg
dec
out
insb
fcmovu
icebp
adc
mov
jp
add
repz
sub
into
sub
enter
lahf
push
cmp
sbb
xchg
mov
inc
or
mov
or
xchg
cld
sub
arpl
or
push
push
add
adc
mov
faddl
dec
popa
mov
mov
inc
aaa
shrl
movsb
lret
jne
add
les
lcall
into
lock
not
ret
mov
sti
pushf
sub
add
loopne
rcrl
push
pop
leave
jecxz
cmpsl
add
and
push
enter
rcrl
pushl
inc
faddl
sbb
lock
outsl
lret
outsl
test
ljmp
loop
add
push
and
daa
or
std
pop
sub
movsl
imul
jae
cltd
dec
jns
inc
add
add
adcl
sbb
pop
mov
mov
add
push
adc
sti
in
add
stc
add
push
nop
jno
addr16
stos
sti
adc
mov
inc
add
aas
cmp
jge
cwtl
vpsubsb
dec
add
add
add
call
pop
ljmp
scas
add
pop
enter
add
int3
inc
jle
ret
add
push
mov
and
sub
mov
mov
dec
pushf
pop
sub
jne
sbb
inc
jb
lods
sahf
sbb
out
add
icebp
sub
add
in
cmpsb
movsb
lea
xchg
cli
push
xor
xchg
pavgw
xchg
inc
pop
xchg
sub
es
dec
fistpll
push
loopne
sub
xor
dec
push
add
sub
add
add
clc
popa
xchg
adc
and
add
inc
nop
lcall
insl
das
lods
add
cmp
rcr
cltd
out
ja
or
aas
aad
or
imul
mov
xchg
inc
add
mov
and
xchg
adcb
dec
aas
or
sbb
mov
xchg
ss
out
mov
add
add
xchg
pop
xchg
or
faddl
cmp
push
add
jne
pop
out
add
repz
int3
add
add
movsl
adc
cmpsl
pop
repnz
divl
clc
out
mov
push
pusha
ja
add
add
sti
into
mov
add
adc
les
mov
sub
add
add
cmp
shrl
and
cli
jl
sbbl
repz
or
and
pop
lods
mov
xchg
push
in
sub
incl
fidivrl
inc
sahf
push
sub
xorl
sbb
stos
or
add
push
daa
pop
push
inc
or
add
arpl
add
lods
inc
add
mov
inc
add
mov
pop
and
xchg
cmp
sub
mov
int3
inc
mov
inc
fldenv
inc
js
add
add
lahf
int3
loop
sbb
xchg
mov
mov
loop
add
idiv
sub
pop
push
jnp
stos
xor
add
and
xor
fldenv
cs
lcall
pusha
popf
pop
pop
add
fiadds
addr16
inc
loop
call
jmp
dec
loope
mov
fnstsw
enter
inc
ja
inc
xchg
jo
dec
les
adc
push
iret
pop
cwtl
jns
lret
aas
insb
outsb
hlt
jnp
js
int3
stc
dec
xor
add
fldcw
mov
push
jbe
adc
inc
mov
in
mov
xchg
push
add
adc
jae
cltd
push
test
and
lods
enterw
icebp
pop
push
add
cmpsl
push
push
mov
jp
add
aas
loopne
repz
sbb
fidivs
ljmp
mov
scas
mov
push
mov
out
or
add
pop
test
push
cmp
ds
jbe
add
or
jbe
xor
or
fldcw
es
add
cmp
sbb
mov
xchg
sbb
xchg
sahf
mov
mov
sti
shlb
jbe
pop
aaa
adcl
add
push
jbe
jmp
pop
mov
add
jecxz
clc
xchg
sti
sub
daa
shl
sbb
add
out
cmc
fldl
sub
stos
std
add
add
push
mov
sub
mov
adc
adc
ljmp
outsb
mov
lock
mov
pop
mov
movsl
stos
xlat
es
cmc
add
adc
shrb
mov
add
jb
cmp
sub
sbb
add
mov
outsl
je
insl
mov
daa
push
and
or
sub
cmp
add
or
jns
sbb
stos
push
mov
xchg
jo
in
cltd
push
and
outsl
insl
stos
sahf
add
out
mov
push
test
out
xchg
or
loopne
add
ret
jl
push
lods
jge
sti
xor
mov
pop
add
out
popf
roll
bound
xlat
dec
stc
inc
add
into
push
jnp
cmpsb
mov
mov
adc
cmp
add
or
mov
inc
std
lea
mov
add
jns
mov
mov
lds
mov
es
jle
mov
add
out
lock
aad
add
add
inc
push
xchg
add
popf
jno
mov
pop
xor
sbb
add
inc
insb
push
pop
mulb
js
pop
out
add
and
mov
add
mov
dec
loop
call
sub
decb
add
lret
jg
pop
popa
sahf
sub
pop
cmp
lahf
lret
dec
pop
mov
cmp
cmp
ret
push
or
add
cmp
mov
xchg
scas
pop
icebp
add
testl
pop
add
int
enter
and
pop
mov
and
push
arpl
ss
adc
sub
mov
adc
xor
sub
mov
xor
fsubrl
daa
out
cmp
sarl
idivb
insb
add
out
or
aaa
mov
xchg
pop
mov
jl
leave
push
sub
cmp
mov
iret
xchg
scas
inc
add
subl
hlt
adc
jo
xor
dec
cli
int3
hlt
shrl
shrl
inc
mov
dec
inc
push
ret
xchg
data16
lahf
mov
xchg
add
cltd
mov
das
jae
xor
or
dec
and
movsb
dec
mov
in
push
cmpsl
out
cmp
in
cmpsb
add
jae
out
lea
or
rolb
add
add
add
scas
mov
cli
inc
in
sahf
jae
adc
mov
call
outsb
add
add
push
femms
js
out
and
ja
fidivrs
mov
inc
mov
inc
xor
call
cmp
rorl
in
icebp
mov
addb
xchg
inc
imul
add
sub
outsl
rolb
add
popf
add
mov
push
jle
out
add
cmpsb
lret
adc
jg
inc
inc
sub
pop
ss
ds
add
xor
idivb
lock
ds
leave
outsl
and
cmp
scas
add
dec
lret
push
pop
dec
std
or
and
test
movsb
adc
and
dec
add
jl
mulb
mov
inc
mov
insl
sti
movsb
mov
mov
and
pop
lret
add
pushl
add
imul
push
repz
lret
pop
mov
sbb
adc
and
repz
scas
cmpl
cwtl
out
lcall
jno
dec
cld
push
je
cli
ret
fsubl
mov
inc
bound
inc
add
pop
aad
enter
xchg
or
push
orl
sub
call
and
inc
mov
out
mov
dec
jmp
add
testl
jo
mov
rcll
movsb
jecxz
pop
loopne
add
mov
push
js
pop
jbe
sub
aam
bound
cmp
add
scas
jge
cmpl
popa
fpatan
lcall
push
lods
xor
xchg
ljmp
cmpsl
mov
cmp
fcmovne
stc
jl
jae
adc
aaa
outsl
mov
pop
pushf
add
cmp
addr16
mov
add
add
out
in
inc
xchg
mov
pop
mov
daa
movsb
add
fidivs
mov
movb
cli
pop
outsl
fs
imul
add
icebp
xchg
leave
nop
daa
outsl
mov
mov
jo
xchg
push
sub
sbb
push
int3
adc
rolb
shl
stc
lods
fldenv
pusha
iret
fdivr
arpl
xor
repnz
icebp
add
or
pushf
filds
jae
test
mov
scas
jbe
mov
nop
fucomip
add
pop
sub
dec
in
mov
sbb
test
mov
mov
ret
fdivr
ret
scas
pop
cld
hlt
es
inc
jns
and
sti
outsb
imul
sbb
sbb
clc
cmp
inc
ss
rcll
into
push
xchg
jo
jmp
lds
loop
cld
jg
sbb
inc
rolb
xchg
add
cmp
mov
mov
jns
sahf
adc
negl
or
fs
mov
and
jne
push
dec
mov
repnz
mov
aas
in
mov
sbb
add
inc
jne
mov
adc
or
sbb
adc
push
sub
jecxz
stc
inc
repnz
mov
cmp
and
xor
cmp
sbb
fildl
mov
sbb
mov
mov
push
add
dec
jg
sbb
inc
mov
mov
gs
scas
lahf
mov
adc
cmp
pop
fldt
sbb
aas
dec
and
lods
lahf
push
mov
jne
cmp
inc
scas
test
test
adc
pop
scas
add
pop
testb
mov
push
add
out
lret
jno
sbb
add
add
mov
jmp
xor
bound
stos
add
sub
mov
add
add
test
xorb
jl
shrl
outsl
out
mov
bnd
gs
cwtl
adc
js
sahf
scas
scas
add
push
add
cmc
sbb
dec
dec
loop
add
add
pop
je
and
mov
daa
nop
dec
jl
push
add
addl
iret
rcrb
add
fcomi
in
adc
add
jae
dec
int
shl
push
add
jge
pop
shrb
les
mov
imul
addb
mov
add
xchg
push
sbb
inc
pop
push
sub
and
sbb
icebp
movb
jle
insb
iret
jb
lret
or
inc
je
das
test
add
rorb
xor
push
mov
mov
mov
test
insb
ja
xor
inc
mov
mov
pop
add
aas
rcrb
or
add
lcall
mov
movsl
cwtl
test
xchg
mov
ds
lcall
or
or
lret
cmp
and
fisttpl
shrl
sub
nop
ja
cmc
dec
aas
out
cmp
in
inc
adc
addr16
mov
sbb
adc
subl
out
lea
add
out
mov
addr16
add
rolb
lret
xchg
pop
icebp
lds
iret
add
leave
clts
incl
pop
out
mov
cmp
lcall
add
fimuls
add
in
or
in
xchg
jle
inc
call
inc
rclb
add
clc
sub
dec
adcb
stos
add
in
push
mov
jo
add
inc
sbb
dec
and
dec
push
fwait
pop
ja
dec
sub
das
stos
dec
push
ficompl
stos
cmp
out
cmpb
fcmove
xchg
add
ja
insb
scas
ret
add
stc
mov
repz
lock
adc
lods
mov
pop
int
mov
add
add
mov
push
in
mov
push
xor
lods
data16
pop
fisttpl
ret
or
add
and
dec
inc
aas
outsb
mov
jns
add
pop
push
add
mov
bound
adc
notb
or
mov
insl
or
mov
cmpsl
sbb
in
movsl
outsl
xchg
inc
lock
cmp
xor
mov
add
push
add
jb
sbb
mov
cmp
mov
jb
lea
lods
add
mov
add
sbb
or
add
push
cmp
add
enter
mov
mov
lcall
add
call
and
test
ret
add
push
mov
loope
cs
mov
shrl
add
ja
call
jg
pop
addl
movb
cli
sub
int
std
cmp
and
loope
lods
add
cli
cmp
add
mov
jo
mov
pop
dec
mov
adc
nop
dec
jo
cmc
push
inc
jmp
add
rol
jge
jge,pt
cmp
stos
adcl
ss
add
mov
add
add
fildl
arpl
lods
dec
frstor
mov
loopne
std
ret
into
or
add
jge
pop
loopne
cli
mov
repz
insb
push
insl
mov
lret
xchg
add
sub
mov
lea
jb
pop
xchg
xchg
xchg
popf
inc
repnz
add
incl
je
ja
inc
je
dec
dec
repnz
dec
sub
push
movb
lcall
push
inc
test
sbbb
cmpsb
lahf
idivl
rcrl
loope
out
call
adc
or
fcomp
bnd
adc
incl
add
fdivrl
xchg
fisubl
das
mov
dec
adc
ja
mov
add
dec
enter
cltd
inc
add
pop
cs
shll
xchg
add
add
adc
stos
movsb
jle
arpl
add
negb
into
out
push
add
lds
or
mov
pop
loope
rdpmc
mov
movsb
dec
in
cmp
dec
and
jle
xchg
pop
push
mov
loop
dec
add
jbe
pop
inc
fmuls
daa
in
mov
notb
mov
mulb
leave
mov
push
add
dec
or
adcl
xchg
inc
add
les
les
push
add
mov
cmp
out
orl
fidivs
mov
pop
sbb
pop
stc
dec
pop
ss
cmc
insl
jne
in
dec
pop
inc
ret
add
test
lret
lods
add
ja
xchg
adc
xchg
icebp
lret
loopne
add
add
dec
lcall
fcmovb
stos
mov
daa
mov
sbb
dec
dec
ss
add
jmp
je
push
movsb
mov
xchg
ljmp
test
test
add
pop
pop
cmp
cmp
pushf
add
add
add
dec
scas
mov
mov
inc
scas
cmp
cmc
jae
cmp
loopne
push
sahf
cmp
jmp
push
mov
sbb
daa
mov
xor
cwtl
and
push
cmpb
fiaddl
js
push
andl
xor
mov
jmp
add
or
or
nop
pop
pusha
jp
add
ds
mov
cld
jle
cltd
dec
sbb
mov
or
aad
dec
pop
mov
add
add
xor
movsl
outsl
add
push
sbb
inc
dec
out
sahf
jmp
xor
jo
je,pt
ljmp
mov
and
xor
dec
cmpsb
cwtl
hlt
add
mov
add
jnp,pt
rolb
lret
or
adc
add
iret
cmc
add
jnp
and
add
popf
pop
testb
rcrl
push
aaa
popf
push
jne
jb
repnz
mov
or
mov
push
into
jle
cmpsb
out
mov
sub
cmp
add
mov
sbb
inc
clc
ljmp
jge
es
or
clc
pushf
imul
add
jbe
mov
icebp
cltd
movsl
lret
int
pop
outsb
xchg
sbb
jo
xor
add
cmp
into
jmp
mov
inc
inc
sub
frstor
imulb
roll
out
out
add
mov
sub
sarl
sub
cwtl
repnz
das
leave
fs
add
lret
jmp
mov
ljmp
ds
inc
hlt
pop
push
in
stos
mov
sbb
add
nop
imul
mov
add
jns
and
lret
push
ret
incl
adc
pop
xchg
outsb
imul
pop
mov
push
pop
jnp
ljmp
add
push
js
pop
add
and
mov
xchg
cli
add
jl
mov
push
aam
lea
and
gs
pop
push
pop
and
scas
add
add
rcll
xlat
fldcw
pop
fisttpl
ss
and
add
imul
insb
lahf
or
xor
cmp
test
subb
dec
sub
push
test
dec
dec
and
pusha
js
rclb
mov
mov
pop
enter
adc
popa
test
mov
add
aam
adc
jle
mov
outsb
add
stos
lea
movsl
in
jns
pop
insb
pop
jl
mov
sub
sbb
ds
in
bound
add
icebp
jecxz
fidivs
push
rcrl
fstl
add
add
pop
push
or
push
mov
mov
incl
dec
mov
pop
or
add
inc
mov
mov
inc
lock
bnd
stc
outsl
data16
aad
cltd
sbbb
add
imul
jecxz
out
leave
cld
pop
mov
mov
pop
jecxz
fiaddl
lea
adc
bound
arpl
lods
dec
and
ret
ret
add
add
mov
add
mov
testl
lea
mov
add
add
add
inc
hlt
adcb
insl
cmp
xchg
sbb
mov
shll
jl
jle
mov
ret
rcrl
jecxz
js
add
std
scas
add
divl
pop
adc
test
rolb
incw
inc
push
and
ds
cmp
add
dec
jg
roll
jo
and
lds
scas
pop
push
add
sbb
outsl
sbb
and
add
imul
and
add
in
nop
addr16
cmp
add
pop
shl
arpl
add
add
xlat
stos
xor
add
add
or
sbb
call
or
mov
cwtl
arpl
jb
inc
dec
out
push
xchg
xchg
add
add
xchg
add
adc
les
aam
mov
ja
rorl
fs
add
add
add
or
enter
add
fstpl
sbb
push
mov
xor
and
insl
outsb
sahf
popa
and
xlat
push
and
bound
std
nop
mov
pop
add
lds
mov
and
and
push
mov
sub
push
pushf
add
add
and
jne
stos
popf
mov
mov
insl
dec
cmpsb
out
xlat
mov
push
and
jle
push
arpl
dec
stos
xchg
pop
push
aaa
sub
icebp
push
push
movl
xchg
int3
fs
gs
or
fdivr
int
push
mov
test
sti
or
out
add
sbb
mov
into
notl
mov
outsb
nop
add
mov
add
xor
addb
stc
jge
dec
mov
pop
lods
and
fld
dec
adc
and
jle
icebp
xchg
imul
mov
add
pop
nop
add
dec
jae
inc
mov
test
xchg
popa
pop
roll
and
mov
mov
pop
cmp
pop
cmp
cmp
push
jae
dec
mov
addl
mov
dec
pop
ljmp
clc
dec
pop
ds
std
stc
cli
aad
pop
outsl
out
lcall
scas
int
mov
ja
pop
in
aaa
sbb
lods
xchg
cmp
loop
push
stos
sub
pop
or
fidivs
insl
scas
xchg
add
inc
pop
in
pop
sbb
and
cli
add
push
mov
sbb
ljmp
icebp
stos
or
ret
orl
mov
add
fiadds
ret
int3
xchg
pop
inc
add
sahf
rolb
xor
mov
insb
inc
pop
adc
add
call
add
ret
cmp
add
imul
xor
push
lea
aad
ds
cmp
mov
sub
mov
leave
sbb
add
add
mov
clc
outsb
aad
jns
scas
pop
outsl
test
push
cmp
add
xor
mov
sbb
push
cmpl
js
jecxz
lea
mov
pop
call
push
mov
mov
ret
in
inc
int3
inc
push
mov
cltd
and
push
push
movsb
flds
enter
push
mov
sub
add
pop
jb
sti
jo
imul
in
insl
iret
mov
sbb
out
lret
sub
mov
inc
cs
jns
fisttps
and
incl
into
repz
pushf
jmp
jecxz
jmp
xchg
pop
lods
and
push
dec
push
shrb
sbb
or
clc
into
in
xchg
out
jo
add
ds
xor
push
sub
jns
xor
out
fidivs
bound
test
xchg
inc
out
in
or
cld
push
add
xor
mov
mov
out
mov
shlb
jmp
sub
add
add
pop
add
or
inc
sahf
in
xor
lahf
xlat
push
xchg
fists
das
popf
int
shlb
int
retw
lcall
dec
dec
fst
add
cmpb
or
lahf
mov
imul
fildll
add
gs
test
dec
js
in
repnz
jbe
push
add
out
test
pop
jno
test
add
inc
xor
inc
insl
sahf
leave
imul
in
into
add
pop
inc
stc
add
test
cmpsl
xchg
je
jecxz
mov
leave
sub
add
sbb
leave
jnp
jl
or
sbb
sbb
jecxz
insb
cmpsl
nop
cli
xlat
mov
aam
cwtl
push
stos
add
add
imul
lea
aam
call
add
jl
xchg
add
add
inc
push
pushl
xchg
imul
into
fpatan
movsb
out
jmp
stos
imul
fsubs
pop
inc
cmpsl
ss
add
add
add
leave
test
pushf
add
cmp
mov
push
pop
shlb
mov
in
out
movsl
outsl
mov
sub
stos
idivb
add
dec
pop
jecxz
and
and
cmc
inc
mov
add
test
xorb
mov
cli
mov
pop
push
loop
into
push
test
inc
add
in
rcrl
mov
fcomps
call
add
pusha
cmpsl
or
add
test
imul
jns
dec
mov
adc
add
pop
cmp
xchg
add
sub
sub
dec
adc
scas
mov
xchg
inc
dec
add
negl
adc
push
push
insb
insl
mov
add
add
add
push
jp
adc
stos
sub
subl
add
dec
add
jae
ret
inc
push
inc
lods
push
cmpsl
add
jge
jp
sbb
xor
gs
add
stc
fadds
lcall
jmp
movsb
cmpsb
je
add
int3
adc
inc
call
add
es
repz
clc
fcom
add
les
nop
inc
push
add
push
xchg
incl
aas
ljmp
pop
shl
jo
outsl
adc
into
xchg
add
shl
mov
mov
jns
dec
ljmp
gs
pop
xorb
sbb
add
cmc
stc
adc
xchg
mov
mov
sub
add
movsl
xchg
jge
into
jmp
mov
aad
lea
adc
adc
add
imul
movsb
jp
dec
cmc
sub
insl
jp
js
push
pop
lods
bound
shl
lret
paddd
add
js
mov
shll
lea
cmc
add
repnz
xchg
loopne
lea
inc
push
pop
jae,pn
aad
into
jl
dec
cli
out
mov
jo
jae
add
and
add
cltd
pop
xchg
lahf
dec
cmp
jno
jle
ja
adc
sahf
in
jae
in
mov
cmp
test
aaa
add
inc
push
out
pop
clc
add
imul
movsl
xlat
dec
inc
lahf
mov
xlat
mov
cwtl
pop
jmp
xchg
push
es
xor
lods
sub
out
xchg
jmp
mov
lahf
add
jnp
repz
mov
mov
mov
mov
hlt
mov
sub
jmp
into
mov
mov
mov
dec
and
push
inc
mov
pop
out
add
mov
dec
cs
or
pushf
mov
ret
mov
in
pop
pop
jl
mull
mov
mov
jl
dec
pop
lcall
out
dec
daa
xchg
jmp
sarb
push
mov
ds
mov
fadds
dec
negb
es
dec
add
scas
in
fsubrs
fiaddl
jle
filds
clc
push
pop
push
dec
push
in
lock
mov
or
jo
add
sbb
rorb
sbb
xor
mov
movsl
lods
popa
fwait
stos
sub
in
or
out
test
test
inc
aam
pop
outsl
aam
pop
add
jmp
andl
sti
fiadds
pop
add
cld
push
ret
sbb
jo
pop
and
mov
mov
int
jne
mov
add
or
popf
movsl
fidivl
add
inc
cmp
add
out
mov
push
sub
scas
movsb
sbb
sbb
negl
dec
stos
fists
jne
mov
std
add
add
sbb
das
hlt
neg
mov
repz
shrb
cmp
mov
pop
mov
pop
outsb
mov
out
je
adc
add
add
add
xchg
shlb
lahf
xchg
sbb
and
cs
or
aaa
mov
push
xchg
out
fs
pop
xlat
add
xor
inc
add
xchg
mov
adc
daa
add
and
and
imulb
stc
repz
ss
pop
nop
jno
pop
or
xchg
arpl
subb
push
xchg
imul
inc
add
and
xlat
sub
mov
pop
dec
in
mov
popl
std
lods
pop
cld
add
dec
add
dec
add
add
mov
mov
ret
sub
jle,pn
in
cmp
orb
xchg
sub
dec
add
add
and
adc
mov
sub
lods
add
add
sbb
subl
pushf
lods
addr16
xchg
gs
movsb
mov
iret
and
out
ljmp
push
add
lahf
jmp
xchg
dec
jb
add
fbld
rolb
int
sbb
out
add
inc
push
add
inc
push
enter
sti
adc
mov
sbb
add
push
xor
movsl
jg
bound
xor
push
imul
sub
add
les
dec
jb
mov
lcall
mov
adc
fisubrl
mov
sbbl
mov
mov
stos
fidivrl
loop
or
lock
mov
add
inc
popa
xchg
loope
cld
pusha
sti
sub
jbe
fcoml
add
fmuls
cli
mov
mov
aas
imul
mov
and
adc
dec
xchg
div
pushf
enter
popa
dec
push
and
xchg
jns
add
add
sti
int
add
test
mov
add
test
jbe
dec
mov
add
add
add
add
xchg
fistl
and
add
fildll
incb
sub
scas
mov
add
loope
imul
outsb
add
or
das
out
nop
aam
mov
sbb
mov
incl
xchg
ret
add
push
inc
add
add
adc
data16
pop
pop
je
int3
push
fstl
cmp
dec
jne
mov
jne
add
push
ret
push
push
xor
popf
add
shll
add
mov
inc
pop
cltd
int3
and
fs
fbstp
sub
aas
sbb
add
arpl
cmp
aas
pop
clc
mov
outsb
jge
add
cmpl
jg
mov
sub
cltd
in
adc
jb
add
stc
sub
sub
cmp
das
dec
stc
jge
out
hlt
cmp
jl
add
rcll
faddl
push
add
cs
push
dec
test
lods
ret
add
fcmovu
iret
rcl
and
aad
pop
imull
cmc
les
xlat
add
push
add
pop
sti
xor
jecxz
mov
jae
gs
xor
jbe
sahf
lods
dec
dec
mov
sub
jl
sub
call
sbb
pop
lds
inc
cld
push
inc
add
imul
push
mov
movsl
xchg
jno
in
or
out
pop
popa
mov
push
fwait
repz
loope
xchg
cmp
jecxz
mov
add
pop
out
add
stos
sbb
stos
fcom
jae
movsb
lds
scas
add
cmp
repnz
sbb
fnstsw
push
lock
fadds
test
mov
add
out
xchg
fdivr
pop
clc
jmp
add
arpl
call
and
push
lldt
roll
mov
ljmp
sbb
daa
mov
int3
add
pop
fidivs
sbb
ja
addr16
cmp
mov
cmp
mov
bound
stc
pushw
xchg
jae
adc
lods
mov
sarb
out
or
xchg
mov
sbb
fldln2
inc
idivb
pop
stos
cmc
ds
add
add
negb
dec
into
loopne
out
stos
xor
fsts
pop
add
sar
add
fs
repnz
hlt
rolb
testb
xchg
pushf
pop
stos
pushf
sub
scas
xor
push
pop
jmp
or
stos
jle
mov
fcompl
arpl
aam
cmp
shrb
int3
cmpsb
adc
cmp
pop
fbstp
mov
mov
mov
js
lcall
sbb
arpl
add
add
dec
xor
add
and
add
stos
jecxz
xchg
mov
push
sarl
mov
test
fstpl
pop
and
add
pushf
pop
ret
std
icebp
pusha
mov
dec
xor
dec
das
fldl
xlat
psubusw
push
lods
enter
add
rclb
ljmp
push
std
push
movsb
add
adc
jp
sbb
add
iret
or
std
sub
loopne
enter
push
dec
add
lods
dec
mov
icebp
mov
push
pop
or
aaa
pop
imul
je
push
ret
sub
sub
mov
xchg
stos
push
lcall
push
fcoms
repz
shlb
add
mov
push
test
fdiv
add
mov
loop
add
ficoms
dec
in
adc
push
add
dec
cmp
cs
jns
jbe
lret
jne
loope
dec
inc
scas
gs
push
pop
xlat
add
jp
rol
insb
mov
adc
and
cli
mov
add
add
jbe
mov
and
adc
and
adc
mov
negl
mov
sbb
and
jge
add
or
jmp
outsl
or
adc
popf
inc
cmpsl
inc
add
dec
cmc
xor
in
push
add
addr16
push
mov
loopne
dec
test
iret
int
mov
add
or
notb
xchg
ss
out
out
mov
push
in
int
lock
push
add
mov
fwait
add
out
push
insl
add
jg
scas
icebp
add
and
cmc
lret
mov
loop
mov
jo
mov
int3
es
hlt
mov
xchg
cmpsl
in
frstor
in
or
jl
push
lahf
adc
subl
in
xchg
nop
jecxz
gs
mov
imul
pop
xor
cmp
pop
add
add
inc
add
cmp
repnz
push
lock
sub
sar
in
jns
addr16
out
test
roll
jnp
push
xchg
push
stos
adc
lret
jb,pn
sbb
sbb
adc
push
clc
mov
and
mov
daa
shrb
dec
or
adc
xchg
test
adc
aaa
lret
call
test
fs
outsb
ret
das
xor
int3
ret
push
sahf
rclb
xchg
jne
add
scas
inc
pop
jo
add
add
les
and
add
inc
cwtl
add
mov
scas
dec
jle
or
mov
mov
call
mov
test
mov
pop
cs
out
push
and
lcall
popf
iret
xor
imul
idivl
notl
popa
incl
add
lret
add
test
inc
insb
lret
out
xchg
sti
push
and
cwtl
js
sbb
add
fmuls
mov
aaa
xor
cmpsl
pop
ja
mov
sarl
fistl
cmp
push
pop
arpl
mull
outsl
dec
add
mov
adc
mov
or
pushf
movq
jecxz
into
and
xor
sub
push
stc
xchg
mov
js
cld
jbe
mov
jl
shll
enter
inc
out
mov
mov
out
pop
xchg
cmpsb
pop
xchg
in
andl
inc
lret
add
xor
or
add
das
xor
sbb
shrb
add
aad
in
jno
xor
fldenv
clc
imul
pop
sbb
in
movsl
popf
rolb
adc
pop
pop
hlt
movsl
lods
aam
add
lods
xchg
int
pop
push
add
inc
std
sub
int
xor
lahf
test
or
pop
or
add
mov
push
mov
jne
inc
test
sub
sti
fs
movsb
scas
out
and
test
adc
xchg
add
fiadds
mov
jge
jmp
and
iretw
add
adc
push
mov
mov
cld
and
add
add
adc
push
sarb
pop
add
mov
repz
es
decl
xchg
test
dec
mov
pusha
mov
jo
inc
fs
outsb
nop
add
loope
sub
gs
xchg
stos
jnp
add
add
in
mov
xchg
add
cmpsl
mov
adc
lahf
mov
inc
inc
mov
add
mulps
fsincos
adc
ja
cwtl
imul
cwtl
and
push
call
movsb
aam
das
add
in
mov
cmp
clc
inc
ret
jb
adc
aam
push
sahf
movsb
js
cmpsb
xchg
jbe
scas
outsl
and
roll
push
addb
roll
add
imul
add
inc
mov
addb
cmp
pop
cli
push
insb
mov
pushf
mov
jg
lods
dec
popf
add
push
daa
adc
dec
sbb
sarl
fnsave
in
add
inc
add
leave
popa
dec
add
cmp
inc
add
test
push
out
adc
xor
mov
sarb
mov
pop
jl
rolb
clc
jle
add
sub
jae
pop
push
push
mov
clc
gs
filds
hlt
aas
hlt
add
loop
adc
fiadds
sbb
mov
and
xchg
dec
dec
imul
das
add
loopne
pusha
fxch
imul
pop
popf
aas
sub
or
sub
out
add
add
add
push
jae
cli
cmc
pop
mov
add
ja
pop
lcall
push
add
pop
push
mov
add
pusha
xor
int3
cmp
sbb
adc
inc
mulb
in
adc
add
push
fildl
ret
push
dec
add
xor
jo
pusha
mov
add
inc
std
out
xlat
jbe
jmp
mov
insb
add
sub
adc
pop
and
sub
xchg
iret
je
cmpsl
adc
hlt
mov
add
xchg
mov
cmc
adc
out
adc
das
out
lret
imulb
rcll
ficoms
cmp
incl
jmp
cmpsb
dec
mov
dec
cmpsl
cmp
xchg
popa
movsb
cmp
out
imul
ljmp
lds
or
and
xchg
ret
stos
decl
jns
pop
shrl
and
pop
inc
and
rcll
std
xchg
cmp
movsb
pop
repz
popa
bound
add
daa
jae
xchg
jmp
mov
imul
clc
xor
add
jae
fadds
mov
fstpl
daa
mov
outsb
in
cmp
rclb
fadds
add
icebp
push
stos
cmp
int
adc
push
jl
xchg
sbb
xchg
inc
in
jae
ret
sub
sbb
cmc
fidivrs
aam
lock
and
sbb
aad
inc
xlat
mov
and
inc
dec
in
int3
mov
mov
aas
fbstp
dec
test
loop
scas
adc
push
xor
nop
adc
and
and
incl
psubb
add
in
fstl
pop
xor
mov
dec
push
je
out
pop
add
or
adc
int
popf
je
xchg
push
stc
aaa
data16
pop
add
daa
sbb
jne
addr16
or
lock
cmp
push
popl
adc
stc
add
pushf
add
aam
lahf
out
add
sub
mov
sub
enter
and
pop
mull
enter
ja
push
mov
es
pop
push
or
mov
cmpsl
jl
jae
jbe
mov
dec
pop
sbb
add
js
enter
loope
test
daa
loope
pop
jl
aad
aaa
jmp
adc
iret
int
mov
adc
add
sub
aas
cmc
es
jecxz
loopne
stos
in
xor
xchg
gs
cmp
inc
xchg
je
push
add
mov
push
xchg
ds
cmp
mov
sub
ficoml
popa
ds
ficomps
mov
add
xchg
cmp
add
cwtl
mov
movsl
push
fwait
movsb
stc
xor
adc
jbe
cli
inc
test
jl
loope
add
in
mov
add
and
fisubrl
push
and
inc
jns
inc
lcall
pop
jge
filds
push
stos
jge
add
and
mov
and
out
imul
add
int
xchg
mov
mov
and
bound
mov
sahf
add
test
xor
add
stc
movsl
inc
add
bound
mov
lcall
mov
mov
stc
repz
add
sub
lods
mov
xchg
pop
imul
dec
xor
pop
mov
adc
std
hlt
adc
cwtl
repnz
imul
out
add
push
mov
test
rep
sbb
xchg
movsb
sub
je
add
inc
adc
add
fstl
addl
add
fs
loop
pop
push
testb
mov
dec
mov
sub
aam
xchg
jp
mov
mov
add
into
adc
lods
ret
fisubrs
or
popa
add
xchg
ficoml
test
sub
data16
notb
mov
pushf
push
movd
inc
test
icebp
arpl
add
sub
add
gs
dec
lea
mov
loop
fwait
xor
xchg
add
fmull
mov
stos
add
sbb
imul
aam
push
inc
mov
out
pop
add
add
sahf
into
dec
mov
es
mov
sbb
mov
inc
jo
add
add
add
cwtl
ljmp
dec
add
rolb
xchg
inc
testl
adc
and
and
sarl
in
hlt
inc
adc
add
das
sbb
aas
stos
add
in
pop
add
adc
push
andb
data16
pop
inc
sbb
stc
add
test
arpl
pop
leave
add
sbb
cmp
mov
cltd
aas
or
insl
filds
and
mov
scas
add
fisubl
mov
adcb
adc
xor
sbb
jl
hlt
add
xchg
sbb
cmp
add
and
add
stc
fnstsw
and
push
add
shll
mov
mov
inc
pop
jmp
and
inc
sub
dec
sub
mov
push
sbb
jecxz
movsl
fsin
movsl
push
dec
adc
sub
sbb
pop
jb
repz
xor
add
add
jg
cmpsl
gs
push
add
mov
dec
ss
push
enter
inc
xor
and
sub
into
add
sbb
add
inc
cmpsl
fdivrl
in
imul
jnp
fdivl
add
mov
bnd
cli
xchg
sbb
add
pushf
add
orl
xchg
popa
add
xor
jle
fsubr
sbb
repnz
and
aas
jns
data16
xor
jecxz
pop
mov
sub
cmc
addb
mov
push
dec
aam
fcomip
jnp
in
mov
aaa
mov
sti
insl
push
lahf
lea
xchg
outsb
dec
outsb
popf
xchg
in
stos
and
arpl
add
movsl
add
mul
lea
add
push
jl
loop
add
mov
ret
sbb
mov
roll
and
loop
test
sub
pop
and
pop
loopne
cltd
fmul
sub
xchg
mov
nop
lock
add
xchg
add
dec
cwtl
sub
mov
and
fidivs
push
cmpsl
mov
jg
rorb
repz
aad
push
xchg
cmpsb
mov
popf
and
push
mov
sbb
adc
inc
fs
add
js
dec
movsl
sbb
call
or
add
jg
data16
push
cmpsl
xchg
add
jecxz
add
and
imul
dec
add
insb
neg
lahf
sub
inc
sbb
fs
rcrl
jb
add
rorb
mov
ljmp
pop
xor
adc
je
sub
jnp
jp
fidivs
sbb
int
aam
inc
add
xor
stos
xor
repz
loope
xor
pop
shrb
jb
mov
add
fldl
add
movsb
cmpsl
lock
repnz
and
rol
xchg
dec
or
call
imul
roll
fs
or
adc
push
cmc
sahf
addb
xchg
xchg
adc
add
movsb
inc
mov
jo
jne
push
add
test
outsb
shrb
pushf
imul
pop
popf
sbb
or
faddl
add
push
add
add
cmpl
mov
test
enter
xor
push
sbb
test
add
inc
push
mov
push
or
dec
ljmp
cltd
xlat
ffree
or
push
mov
mov
jnp
in
add
cmp
push
cmpl
ja
jae
adc
jo
jns
es
vmread
add
jb
push
push
arpl
mov
dec
pop
fs
add
xchg
or
jo
js
rolb
sbb
xchg
add
hlt
ret
add
add
fucomi
ret
jecxz
mov
cmpsb
cmp
mov
dec
cs
filds
cmp
and
daa
test
fiadds
shlb
pop
loope
jne
and
sub
in
add
inc
add
es
pop
add
mov
push
pop
in
pop
mov
stos
hlt
mov
int
add
cltd
test
addr16
mov
out
add
add
scas
push
xchg
int3
jnp
inc
nop
jns
jg
mov
decb
stc
mov
aad
add
push
scas
and
out
and
das
out
sub
inc
xchg
or
push
and
jmp
jmp
inc
test
fisttpl
sbb
jl
cmp
ja
aam
add
mov
cmp
add
add
cmp
lods
mov
enter
jae
in
add
push
add
pop
fistpll
add
cmp
or
or
js
out
add
add
push
aas
and
enter
mov
pusha
jl
scas
dec
add
adc
outsb
mov
pushf
popa
sbb
sbb
iret
dec
loopne
mov
push
mov
or
incb
add
or
stos
xor
adc
test
dec
int3
add
add
dec
add
jns
pushf
rclb
lods
add
mov
jg
xorb
movsl
add
into
jmp
out
add
xlat
and
pusha
imul
and
cmp
cmp
into
jmp
mov
jbe
scas
add
inc
add
outsb
andb
imul
mov
dec
xchg
mov
xchg
filds
mov
arpl
mov
pop
les
shrl
add
aad
movsl
cmpsl
outsl
push
bound
add
jns
and
lods
outsb
stos
movb
rol
stos
or
adc
dec
icebp
aad
test
add
jmp
jne
sbb
enter
pop
or
push
push
stos
jmp
dec
push
lds
imul
sahf
das
mov
mov
std
mov
mov
push
andb
pop
mov
stc
dec
and
aas
inc
stos
scas
mov
inc
mov
out
mov
jno
outsl
lds
mov
outsl
xor
push
adc
mov
je
notb
int3
rcl
jb
pop
in
and
add
mov
aam
jb,pn
xor
sbb
fcmovnbe
aad
mov
out
scas
aad
or
add
adc
cmp
jns
sbb
dec
lea
aam
rorl
loope
fidivrs
stos
dec
xchg
leave
sbb
cmpsb
or
shrl
sub
call
repz
inc
ja
jle
mov
orb
add
jg
mov
rcl
dec
movaps
into
jns
xchg
add
cs
add
js
jp
test
je
add
jnp
xchg
push
fcomi
xchg
repz
lods
mov
test
mov
in
add
xor
add
pushf
std
nop
icebp
add
cmpsl
add
ret
mov
adc
add
jl
mov
mov
test
jno
add
xchg
movsb
jne
repz
xchg
subps
dec
add
jp
mov
sbb
xor
sub
push
xchg
fsts
clc
mov
add
bound
and
add
mov
add
inc
xchg
ljmp
loop
mov
mov
nop
adc
adc
cmp
inc
in
ss
iret
subb
push
lods
xor
pop
in
add
out
xchg
popf
filds
shlb
shl
push
test
or
add
into
jb
outsl
adcb
mov
add
in
add
xchg
das
sub
jp
ja
les
push
mov
or
lcall
fisubs
stc
xchg
gs
add
cmpsb
jg
mov
add
add
dec
push
and
mov
add
int
incb
testb
pop
add
add
jb
add
clc
push
xorb
xchg
and
xlat
popf
repz
xor
adc
lods
jecxz
andl
fistpll
cmpb
mov
loope
add
subb
add
add
push
mov
iret
xchg
pusha
in
add
jae
push
pop
loop
popf
add
out
and
jg
add
inc
imul
push
lds
jae
mov
aam
push
dec
add
add
or
mov
fdivr
rcrl
cli
js
fisubrs
stc
pop
inc
xor
sbb
push
mov
pop
jns
insl
dec
jo
fldl
jne
xchg
aaa
incb
sbb
xor
nop
pop
or
push
dec
pop
mov
add
and
cli
imul
scas
xor
iret
roll
js
add
sbb
popa
cmp
adc
scas
ja
jb
push
add
add
cmp
pop
add
icebp
cmpsb
ljmp
inc
flds
daa
pop
and
dec
stos
out
sbb
pop
rorl
inc
push
xor
out
aad
pusha
lods
sahf
pushf
fdivs
jg
jnp
sub
xchg
mov
js
cmp
cmp
ss
inc
dec
add
cwtl
cmc
lock
and
mov
js
sbb
rorb
fcomps
addl
sub
jl
sbb
mov
xor
add
sbb
add
add
add
sub
hlt
loopne
jmp
adc
fwait
repnz
xor
or
out
xchg
add
les
sbb
pop
test
push
test
fwait
mov
shrl
insl
or
movsb
inc
add
enter
xorb
inc
jge
add
inc
mov
sub
scas
les
or
mull
cmp
cld
je
lahf
aas
ja
push
sub
test
ljmp
inc
add
xchg
movsl
mov
inc
in
push
xchg
add
push
nop
lahf
repz
insl
sbb
pop
rolb
outsl
add
dec
cld
add
xor
push
js
and
pop
mov
adc
add
jne,pn
mul
pop
jno
shr
add
flds
add
mov
xor
fwait
xchg
gs
add
cmpsl
daa
push
lret
lds
ret
xor
adc
jno
fisubrl
sti
mov
gs
add
pop
inc
fistps
add
sahf
je
les
xlat
aas
jge
test
filds
into
add
push
push
or
dec
jnp
add
mov
addl
sub
fsts
pop
mov
lods
sbb
jnp
testl
or
xchg
cmpsb
xchg
bound
dec
int3
add
jno
fcmovnb
sbb
int3
adcb
test
stc
jg
jmp
add
cltd
stc
add
push
es
mov
cld
or
imul
mov
cwtl
push
add
jae
sub
inc
aaa
enter
cli
push
pushf
mov
jbe
in
push
cmp
pop
and
loopne
jecxz
push
push
and
jl
popa
int
and
enter
jmp
ds
cli
ds
out
and
out
pop
dec
add
lods
add
mov
and
mov
jbe
call
cmp
mov
and
cmp
mov
pop
mov
inc
push
or
mov
mulb
xchg
js,pt
inc
and
and
out
pop
lock
mulb
mov
fs
push
add
out
outsb
js
mov
add
dec
jmp
loope
popf
push
jle
add
cmc
sub
sbb
hlt
add
sar
cmp
add
mov
nop
add
in
cmp
sbb
movsb
add
add
lock
mov
add
aas
add
xchg
shlb
les
jno
add
mov
xor
js
xchg
loope
adc
inc
and
jns
mov
cmp
aas
mov
inc
rcr
loopne
aas
cltd
fnsave
sbb
xchg
adc
jecxz
aam
push
add
jne
pop
lret
add
mov
or
aas
add
stos
dec
inc
outsl
push
popa
repz
pusha
push
mov
sarb
cmp
jge
insb
and
popf
std
cmp
or
enter
sbbb
and
adc
add
dec
les
fisubl
out
jno
mov
ret
pop
jmp
dec
bound
mov
mov
sbb
jbe
in
add
repnz
ds
in
in
or
adc
mov
inc
lods
cmp
stc
pop
pop
cli
add
popl
add
lock
test
add
enter
xor
lods
inc
das
out
add
xor
pop
movb
push
add
in
or
jns
imul
adc
mov
push
loop
add
es
add
push
outsb
adc
test
nop
inc
push
sbb
add
addr16
jge
fisubrs
push
add
cltd
pop
movsb
sti
or
mov
loope
sbb
push
add
mov
jnp
cmpsb
lods
jle
repz
scas
sbb
rcll
mov
test
lret
sbb
outsb
jge
jne
push
gs
ljmp
cmp
sbb
fadds
loopne
or
adc
andl
jb
mov
add
inc
xor
cmp
mov
in
mov
add
push
dec
std
xor
insl
testb
mov
mov
add
add
jae
jo
mov
push
mov
add
out
out
mov
mov
dec
icebp
xor
test
push
lahf
popf
in
cs
arpl
pushf
add
stc
xor
or
jb
addr16
jmp
mov
test
xchg
movsl
push
subl
or
shll
add
cmpl
add
aad
add
mov
stos
xor
push
adc
pop
inc
sbb
or
shll
ret
xchg
xchg
out
shl
mov
mov
xchg
js
call
pusha
add
pop
movsb
or
add
xchg
decb
inc
dec
dec
mov
xlat
xchg
ret
add
mov
movsb
stos
lock
pop
iret
and
in
mov
cmp
mov
leave
in
into
pop
sub
jns
mov
add
add
or
cmovae
mov
scas
and
fildl
add
jno
dec
mov
ljmp
jmp
orl
mov
add
shlb
sbb
cmp
mov
add
sbb
addl
push
nop
fisttps
cld
out
xor
lcall
mov
jnp
call
popf
fidivs
adc
push
es
fidivrl
test
call
outsb
push
loop
add
xor
es
nop
or
add
out
adcl
pushf
imul
test
mov
popa
push
and
lods
inc
ljmp
pop
cli
and
sahf
add
or
dec
imul
enter
xchg
cmpb
push
and
cmp
faddl
ror
fldl
dec
cmp
dec
repz
or
lcall
cmc
jo
push
mov
jne
mov
daa
fimuls
insb
xchg
insl
loope
push
push
sar
jb
out
pop
sub
pop
jns
leave
inc
sbb
pavgb
mov
push
pusha
xchg
add
add
pop
fisttps
sub
jb
into
cmpsl
push
or
aad
push
add
add
cmc
jle
adc
push
outsb
mov
push
add
cmpb
jecxz
mov
fucomp
notl
sbb
lods
lods
lahf
pop
pop
sahf
mov
cmp
testl
cs
rcr
movsb
cmp
rcr
repnz
xor
add
sub
dec
xor
sub
jb
sub
add
pop
les
scas
mov
and
mov
xchg
dec
xchg
movsb
aas
add
mov
shll
rcrl
mov
xchg
mov
out
add
push
cmp
or
std
loope
pop
mov
xchg
add
bnd
push
and
add
xchg
lret
cmpsb
js
arpl
movb
add
addr16
adc
dec
mov
xchg
add
mov
mov
popl
arpl
in
add
mov
mov
das
int3
xchg
rorl
mov
add
mov
sub
mov
jge
pop
inc
hlt
mov
push
push
outsl
sub
fwait
xchg
sub
xchg
imul
mov
xor
inc
cwtl
pop
add
sahf
arpl
pop
push
lahf
shr
call
mov
nop
pop
lcall
out
pop
negl
adc
insl
pop
add
jne
pop
in
rolb
ret
mov
shrl
loope
clc
cmp
orl
jecxz
mov
adc
add
push
insl
fsubs
mov
xchg
xor
repz
mov
push
fiadds
cmp
enter
mov
xchg
or
xor
repz
dec
xor
mov
les
mov
sbbb
add
dec
aaa
pop
je
addr16
rcll
add
adc
push
and
mov
mov
aaa
out
pop
bound
add
add
imul
scas
addr16
xor
pop
ret
push
add
dec
add
xchg
xor
dec
inc
sub
add
leave
test
aam
inc
pop
cmp
shrb
add
testb
notb
sahf
jae
mov
daa
adc
jp
cwtl
popl
stos
add
fildl
mov
jo
push
adc
add
rol
dec
call
sub
cmp
popf
pop
or
js
shrl
mov
test
ss
sbb
add
daa
sbb
lds
xchg
dec
stos
pop
pushl
loop
cmp
adc
rcrb
rorb
es
movsb
mov
adc
jp
or
xor
mov
jb
sarl
sahf
push
xor
mov
push
ret
fistpll
pop
jl
mov
jmp
and
call
sbb
vpsllw
subl
and
bound
and
add
add
pop
dec
add
imulb
aaa
push
mov
sub
out
lods
mov
cltd
or
dec
jg
push
jg
mov
mov
push
popf
aas
or
xor
adc
popa
std
inc
add
pusha
mov
add
jae
pop
sub
mov
call
lret
add
mov
xchg
dec
add
bound
decl
daa
add
dec
push
add
or
lea
xor
outsl
inc
mov
ret
cmp
add
aaa
rol
add
sub
rorl
dec
loope
push
loopne
js
ljmp
sub
add
cli
movsb
push
loopne
add
sub
dec
add
mov
sarb
mov
mov
add
adc
loope
mov
jne
enter
mov
jg
mov
cmpsb
push
add
data16
push
mov
test
add
cmp
inc
add
mov
jne
mov
test
jb
fiaddl
insb
popf
scas
dec
pushf
test
jmp
fsts
add
xor
push
dec
mov
les
xchg
add
lods
cmp
call
xlat
ret
lock
movsb
das
aad
add
or
inc
sbb
pop
mov
out
jbe
lret
mov
gs
jns
lock
mov
stc
ss
clc
pushf
jmp
mov
aam
sti
stos
sub
jg
sbb
push
mov
pop
xchg
or
and
pushf
add
sub
dec
and
xchg
xchg
cmp
inc
mov
xor
je
fsubrl
add
add
mov
stos
add
outsl
daa
pop
enter
jae
lea
mov
push
repz
dec
add
add
mov
pop
xlat
cmp
add
je
push
mov
mov
lock
xchg
pop
xchg
movsl
pop
inc
cmpb
in
dec
enter
iret
push
dec
test
in
mov
ljmp
movsb
push
dec
xchg
or
inc
cmp
inc
add
ss
ja
roll
push
pusha
aas
ds
jae
rcr
insl
movsb
add
mov
aam
in
xchg
push
xor
add
and
jb
adc
pop
loope
cld
push
fildl
call
ss
mov
in
mov
jp
enter
or
gs
ljmp
add
fcmovnbe
add
xchg
mov
nop
int3
jl
enter
add
mov
fildl
cmpsb
imulb
test
xlat
leave
in
mov
sub
push
js
xor
xchg
outsl
repnz
push
sub
loop
and
imul
xchg
xor
lea
rcll
into
stos
lcall
pusha
add
test
add
sbb
push
mov
fidivrs
add
cmpsl
jmp
mov
ds
leave
out
pushf
cmp
mov
xchg
fldl
jbe
mov
jb
fldl
add
cmpsl
rorl
enter
jp
jl
or
bound
cs
or
cmpsb
pop
arpl
ss
ljmp
std
aaa
mov
jns
leave
xchg
adc
add
mov
negb
push
xor
cmc
in
pop
out
jbe
gs
pop
scas
xor
mov
mov
bound
jecxz
rorb
pop
add
addr16
adc
pop
mov
xchg
sub
test
xchg
dec
int
xchg
xor
sbb
sbb
movsl
mov
xchg
xchg
outsl
add
rorl
scas
xchg
xchg
jns
sbb
cmp
push
mov
nop
rcrb
mov
cmp
add
sub
add
fs
outsl
js
lods
lret
fwait
testl
or
mov
add
mov
adc
sub
aaa
lahf
mov
cmp
or
xor
cmp
cli
outsb
lret
inc
insb
filds
and
mov
add
jp
fwait
mov
adc
add
mov
jb
fistps
adc
loop
lock
ret
out
js
pop
sub
xor
mov
push
add
mov
mov
mov
and
inc
add
sub
sub
add
fnsave
out
dec
push
jge
sti
sbb
push
pop
add
jne
pop
daa
in
scas
in
les
cmpsb
jbe
add
and
dec
in
lea
sub
enter
inc
mov
push
repnz
add
test
jp
lods
decb
sbb
cmp
jge
sbb
fidivrs
mov
jg
push
xchg
pop
mov
das
push
cltd
push
sub
xchg
sbb
add
add
add
in
and
lea
push
sbb
roll
jns
dec
out
mov
mov
ljmp
aaa
popf
roll
xchg
pop
fsubrl
lea
iret
jae
jnp
bswap
rcrb
pop
in
xor
mov
nop
push
xlat
xchg
int3
rcl
adcb
pop
lcall
testb
or
fs
push
cwtl
push
add
lcall
dec
adc
mov
dec
lcall
stos
pop
fstpl
into
filds
and
push
mov
lods
fmuls
xor
add
lcall
adc
nop
cmpsl
rolb
mov
cld
imul
orb
stos
add
fcompl
cld
add
test
aam
add
mov
add
test
push
aaa
jl
scas
inc
pop
sbb
push
add
jge
add
xlat
jl
jle
mov
mov
or
add
add
fbld
addr16
jno
lods
xchg
fiadds
dec
pop
pop
loop
sbb
in
mov
pop
sub
das
enter
adc
clc
add
sahf
mov
inc
test
sbb
nop
push
aad
jae
insl
bound
fsts
pop
mov
stos
sbb
fs
cli
add
out
call
push
enter
xchg
mov
leave
jae
ja
jl
pop
ljmp
fwait
xchg
xor
cli
daa
mov
push
jne
adc
adc
xor
insb
push
add
adc
jae
inc
dec
push
test
dec
xor
out
adc
shll
push
xchg
and
add
icebp
add
mov
cmp
add
mov
push
ficoml
add
mov
ret
push
shlb
sub
jmp
ds
in
pop
cmpsl
icebp
movsl
and
pop
aad
jg
inc
sbb
repz
scas
pop
xchg
dec
mov
in
push
mov
push
xchg
pop
scas
mov
not
pushf
add
mov
add
add
addr16
ror
add
mov
add
addr16
adc
aaa
mov
mov
arpl
jle
sbb
mov
int3
add
mov
outsl
xchg
jmp
or
stc
notl
cwtl
dec
test
cs
stc
xor
mov
popa
xor
add
subl
into
cmpsb
shlb
insb
dec
xchg
shll
pop
and
pop
cmc
sub
sti
arpl
pop
movsb
or
jmp
mov
test
push
mov
test
dec
or
mov
mov
dec
mov
cmc
add
or
pop
rorb
push
ud1
mov
jo
testb
xchg
xchg
xor
mov
pop
movsb
push
insl
out
ljmp
and
pop
arpl
cli
rcll
sbb
inc
mov
test
push
mov
sbb
add
negb
aad
xchg
mov
cmp
sub
add
add
jae
test
jl
xlat
add
xor
sbb
push
es
jnp
xchg
dec
add
add
mov
jbe
js
js
in
xchg
repz
jg
mov
push
jecxz
mov
daa
outsl
shll
add
add
mov
and
in
clc
xchg
add
out
xchg
mov
lods
fildll
cwtl
lcall
sub
jbe
add
bound
cmp
leave
xchg
cmp
add
pop
sbb
push
out
jbe
addr16
and
or
loop
xchg
ss
fidivrs
add
addb
mov
push
mov
into
scas
xchg
das
std
mov
cltd
fstpl
loopne
dec
arpl
sar
std
call
fiaddl
dec
mov
rolb
js
pusha
push
add
repz
inc
adc
add
enter
sub
loop
mov
xchg
adc
movb
push
add
repnz
adc
pop
jb
jnp
jnp
sub
sub
sbbl
repnz
add
dec
or
inc
cs
add
cmp
sbb
add
push
mov
adc
add
pop
add
fildl
push
push
outsl
insb
imulb
cli
sub
jae
dec
arpl
adc
sbb
mov
push
dec
stos
adc
adcb
cld
inc
pop
dec
pop
leave
in
or
sbb
add
lret
cmp
inc
pop
add
push
fistl
dec
aad
std
mov
pop
fstpt
and
dec
shrl
lods
add
cmp
popf
or
inc
add
lods
push
add
mov
cmpl
in
inc
por
add
in
push
test
fsubl
sti
xchg
sub
xchg
dec
mov
nop
scas
out
add
or
dec
mov
sti
repz
adc
mov
push
mov
xchg
jmp
mov
jmp
push
stc
pop
cmp
popa
dec
roll
push
push
add
inc
stos
add
adc
mov
aad
mov
sbb
popl
jg
pxor
jge
imul
in
test
adc
mov
negb
or
add
divb
repz
aas
iret
call
add
sbb
push
std
jl
repz
push
shll
xchg
sbb
icebp
push
mov
xchg
fldcw
fildll
scas
repz
subb
mov
add
pop
fmull
and
mov
out
clc
inc
or
add
add
xor
mov
or
and
adc
add
xchg
sub
and
scas
aas
pushl
lods
out
jns
jns
leave
adcl
es
frstor
mov
in
leave
add
insl
adc
and
mov
mov
imul
out
dec
pop
lahf
lcall
mov
ljmp
ljmp
leave
adc
add
clc
add
testb
pop
add
movsb
xor
mov
stc
pop
fldl
into
add
push
addl
and
jmp
test
dec
mov
pop
xchg
rcrl
or
cmpsl
roll
insl
mov
hlt
add
xchg
push
pushf
jge
les
add
cmpsl
into
add
nop
add
mov
jle
sbb
in
add
cmp
xor
or
mov
mov
int3
add
xchg
xchg
cld
jle
mov
jns
in
pusha
pop
insl
inc
add
mov
inc
cmp
pop
mov
pop
sbb
xchg
loope
mov
or
insl
das
imul
mov
add
or
sbb
jecxz
js
in
scas
add
and
inc
ret
inc
and
mov
repz
repnz
nop
sbb
add
in
mov
cmc
ret
loopne
xor
lcall
mov
pop
movsl
repz
add
inc
daa
repnz
std
add
cmp
aaa
outsb
jmp
mov
jmp
test
in
cwtl
and
nop
xchg
inc
push
and
sbb
and
add
sub
push
xor
mov
iret
cmp
add
cmp
int
cmp
aad
mov
cmp
fistps
mov
push
rorb
xlat
out
inc
or
add
add
or
or
mov
xor
cmp
lea
or
cmpsl
jl
call
jl
add
mov
xlat
out
cli
add
subb
or
das
add
mov
outsl
push
ds
ds
xchg
inc
jo
or
xor
jo
xchg
cmpsl
sbb
stc
and
cmpb
xchg
scas
xchg
add
lea
lret
scas
cmpsl
dec
movsb
mov
or
pop
adc
mov
push
mov
or
ret
ret
adc
jmp
jge
add
jno
pop
add
fs
and
cld
jo
adc
sbb
mov
add
xchg
xor
inc
pop
jnp
jae
inc
ljmp
movb
loope
cmp
pop
fisttpl
mov
cmp
xchg
and
lods
popa
pop
popf
leave
adc
add
xchg
pop
pop
pop
pushf
lret
imul
fcomps
push
and
gs
into
add
inc
jmp
xchg
prefetch
add
mov
sub
cmp
fwait
outsl
or
mov
xchg
add
add
dec
jne
cmp
shll
in
imul
test
insb
fdivl
cs
insl
scas
cli
mov
mov
std
or
add
shll
into
pop
in
adc
add
mov
add
pop
dec
jp
js
rcrl
je
add
inc
orl
movsl
sbb
testl
mov
add
fildll
pushf
sti
mov
sti
out
scas
movsb
jb
sbb
int3
mov
push
arpl
add
test
stc
or
shll
cmc
dec
std
ret
adc
pop
pop
push
mov
gs
sub
xor
mov
push
stos
xchg
sbb
in
cld
dec
add
cltd
xorl
std
lods
xchg
add
and
add
cmp
add
addr16
mov
adc
fsubrl
hlt
and
cmp
loop
in
cli
push
insb
xchg
pop
inc
jnp
sbb
mov
imul
cmp
xor
cld
jp
les
push
sbb
push
mov
mov
mov
mov
and
and
xor
bound
adc
popf
mov
xchg
sub
mov
or
dec
lods
in
fisttpll
jmp
lds
pop
xor
fstpl
cltd
pop
push
add
decb
hlt
lret
add
add
add
add
add
in
imul
inc
scas
mov
mov
in
mov
fimull
adc
lahf
jne
out
lret
sub
call
mov
cwtl
cltd
cmpsl
movsb
add
lock
add
sub
pop
jp
add
test
ja
scas
add
xchg
fadd
xor
jmp
push
and
or
popa
shll
nop
mov
cmp
pop
add
xchg
jmp
aam
jne
or
out
inc
mov
jg
add
fnstcw
jbe
addl
dec
insb
push
xor
adc
xor
ss
add
sub
filds
mov
xchg
fdiv
fdivrs
iret
sbb
ljmp
xor
inc
test
mov
push
pop
repz
sub
xor
subl
cli
push
loope
aam
lods
popl
movsb
jecxz
mov
push
and
add
testl
je
sbb
loopne
add
xor
pop
push
scas
ret
les
add
dec
mov
mov
jecxz
popa
mov
mov
ret
outsb
add
jb
push
or
or
int
cld
int3
fs
cmp
outsl
mov
add
xor
sub
stos
in
add
lods
in
jmp
rcrb
mov
in
push
inc
add
cmp
addr16
sbb
ss
ja
negl
mov
mov
push
imul
pop
int3
xor
xchg
jmp
flds
sbb
adc
test
cmpsl
stos
int
add
pusha
xor
lret
xchg
les
sbb
add
mov
add
faddl
adc
dec
jge
mov
jecxz
dec
imul
shrb
and
stc
add
rolb
popa
pop
mov
je
sub
mov
add
rorb
jecxz
push
inc
data16
cwtl
add
lds
popf
jnp
pusha
add
xchg
add
loopne
movsb
add
je
nop
add
and
adc
mov
xchg
movsl
cmp
pop
sub
ljmp
orl
mov
add
mov
mov
lds
sub
add
and
add
jecxz
and
pop
push
loop
test
test
xor
mov
inc
add
xchg
sub
add
inc
retw
mov
or
mov
ja
mov
call
pop
jae
sub
insb
add
fwait
add
data16
cmpsb
nop
fwait
add
adcl
fidivs
scas
xchg
dec
sbb
jl
nop
add
cli
add
pop
and
mov
or
les
xor
jl
call
or
cmp
lods
xor
cmpsb
icebp
movb
hlt
cltd
fists
pop
xor
add
xlat
jnp
adc
sub
xlat
jns
cmp
add
push
adc
in
xor
sub
inc
push
sub
mov
sti
rolb
popf
mov
jl
xor
cmp
iret
lock
mov
test
mov
andl
repnz
mov
xor
nop
adc
pop
add
ret
cmp
cmp
adc
pop
stos
loopne
cmpsl
sahf
fisttpl
cmp
imul
mov
xchg
in
jno
aaa
push
add
add
outsb
dec
add
or
jp
data16
aam
mov
and
cmp
rolb
lods
cmp
test
and
add
pusha
aam
std
mov
mov
pushl
std
jo
add
or
dec
shlb
cltd
in
iret
sub
push
dec
imul
and
push
xor
ljmp
jnp
add
cld
dec
mov
and
ja
movsb
cld
dec
jg
push
add
out
push
add
lcall
sahf
add
cltd
mov
xorl
fsub
add
jmp
test
add
and
add
add
ss
addr16
cli
dec
jge
pop
add
jge
add
nop
out
aas
xor
sbb
inc
sbb
lahf
jecxz
xchg
fistl
out
dec
mov
cli
ficompl
mov
gs
mov
or
mov
inc
jne
repz
push
and
iret
test
mov
or
hlt
lock
and
shrl
ficoml
cmc
xlat
or
fnsave
push
pop
xor
les
das
push
xchg
add
add
sbb
dec
push
pop
and
jno
mov
jno
pop
dec
fadds
icebp
add
enter
jae
push
add
call
mov
adc
pop
fsubrl
add
ret
inc
mov
stc
push
add
scas
das
aaa
adc
ret
add
repnz
icebp
jmp
scas
shl
fcmovnb
push
mov
mov
push
daa
add
mov
ja
cmpsl
sahf
nop
xchg
ror
rclb
enter
addb
inc
add
out
dec
adc
dec
push
push
hlt
inc
mov
bound
fists
pop
dec
or
shlb
cld
push
mov
xchg
leave
lods
and
mov
xlat
ret
or
out
sbb
xlat
sbb
fbld
fcmovnb
xor
hlt
dec
xor
add
fwait
mov
jle
insl
bound
add
add
imul
add
sbb
add
fs
clc
mov
xor
add
add
xchg
jle
xlat
push
dec
dec
add
sub
in
inc
repz
outsb
or
cmp
cwtl
aas
add
mov
aaa
mov
subl
jle
push
aad
and
icebp
imulb
add
mov
and
stos
rorb
aad
inc
call
filds
mov
loopne
ds
lret
out
adc
add
mov
push
mov
mov
mov
mov
add
inc
add
movb
mov
mov
sbb
out
pop
icebp
lods
xor
jno
out
pop
bound
ds
lcall
xchg
add
icebp
movsl
repz
add
pop
xchg
fmull
xor
ja
mov
lret
jno
mov
jno
or
xor
push
insb
jl
cli
icebp
jmp
add
insb
jno
and
int3
add
or
and
aam
pop
or
ds
pop
stos
mov
fcmovne
sub
clc
xchg
out
ja
push
jp
adc
aam
jge
adcb
std
mov
mov
ficoms
sbb
xchg
stos
jp
leave
xor
xchg
lods
or
repnz
add
roll
cmp
lds
ret
loope
xchg
clc
sub
add
ja
cmp
pop
in
add
das
iret
inc
scas
mov
add
xor
jp
incl
cwtl
add
xor
test
mov
and
rcl
cmpsb
testb
ds
mov
sahf
lods
and
aam
int3
inc
mov
xchg
cmp
mov
or
leave
jmp
shlb
scas
mov
cmp
add
push
mov
add
lcall
dec
mov
orl
bound
pop
ljmp
scas
cltd
mull
xchg
sub
pop
inc
mov
out
std
add
scas
adc
sub
inc
nop
push
inc
in
sbb
std
lret
push
mov
movsl
jb
jnp
popf
out
rorb
add
fwait
cld
push
hlt
pop
push
add
shl
mov
repz
cmp
add
mov
cmp
test
sub
mov
leave
mov
cmp
lret
mov
jp
dec
mov
adc
xchg
adc
xchg
push
mov
mov
dec
pop
dec
jl
mov
jg
fdivp
clc
mov
cmp
add
call
pop
pop
rcr
jnp
in
jg
sub
es
jmp
or
sub
pusha
mov
add
push
add
rclb
into
stos
loop
add
xor
push
and
mov
inc
and
mov
add
add
add
add
or
xchg
or
mov
jo
mov
push
xchg
subl
aam
add
add
add
or
cltd
push
push
pop
arpl
push
mov
adc
lea
ja
pusha
testb
adc
push
cwtl
mov
mov
fwait
repnz
and
cmp
les
aaa
mov
fildl
sbb
pushf
std
add
xchg
out
lods
add
add
std
pop
xor
xchg
leave
pop
iret
mov
bound
dec
sbb
add
add
aaa
pop
orb
into
out
int
loopne
jg
test
cli
xor
std
jns
push
cmpsb
pop
nop
xor
mov
dec
test
mov
imul
stc
pop
dec
xchg
daa
push
push
add
xor
ljmp
aas
add
out
add
stos
ljmp
jae
push
jbe
add
fistps
xchg
add
mov
lret
lret
fstp
rolb
push
jecxz
xor
je
mov
testb
sub
xchg
clc
pop
push
push
cwtl
in
add
test
repnz
add
add
hlt
insl
sbb
pushf
dec
out
add
decl
pop
outsb
push
jnp
push
adc
pop
xor
sub
add
xchg
push
stos
push
jl
add
add
add
scas
lods
push
xor
aaa
loop
add
scas
sub
jl
add
add
push
add
cmpl
add
cmpsb
jne
push
pop
mov
pushf
ret
icebp
sbb
fmull
adc
std
xchg
or
jl
int3
daa
add
mov
or
repz
mov
add
add
mulb
fnsave
in
add
std
cmpl
mov
je
test
xlat
fs
test
adc
xlat
jg
in
dec
push
push
dec
push
cwtl
or
add
adc
pop
push
aas
scas
mov
loop
jecxz
test
adc
imul
add
out
sub
mov
mov
push
xchg
xlat
into
addr16
add
in
lods
fmul
mov
xlat
es
repz
pop
test
and
clc
outsl
sbb
invlpg
xchg
outsb
or
lcall
xlat
lea
clc
pop
pop
test
pushf
rcrb
pop
ljmp
bound
lds
xchg
lahf
test
in
rcl
jne
sbb
cmp
jecxz
fwait
cld
add
add
fldl
sub
fldl
fidivrl
cmpl
add
imul
iret
or
xchg
add
aad
add
les
push
push
jo
int3
fdivr
add
xor
movl
inc
in
and
add
and
xor
sbb
addr16
fwait
xchg
add
cs
outsl
pushf
lods
add
arpl
add
ljmp
xchg
xchg
add
add
jnp
xchg
fwait
jne
sub
xlat
add
imul
inc
cwtl
cmp
adc
cmc
repz
cmp
in
rol
out
dec
test
mov
xor
jmp
ret
adc
ret
lret
mov
ficomps
add
cmpsl
scas
sti
orl
imull
inc
push
jmp
mov
add
adc
clc
cmpl
mov
cltd
test
fistpll
popa
jle
addb
add
clc
rcrb
ret
push
add
mov
out
in
inc
xor
scas
jno
sub
push
inc
imul
jecxz
pushf
mov
xchg
lret
aad
movsl
cwtl
add
push
jno
insl
add
mov
dec
mov
movsb
mov
jne
pusha
adc
ja
ficoml
cmp
or
add
pop
fidivrs
mov
xlat
int3
xor
add
add
aam
in
shl
and
cmp
fs
jae
mov
dec
cmc
add
jecxz
mov
push
push
mov
jge
loope
xchg
add
jne
das
cmc
push
add
or
adc
imul
jp
test
int3
mov
add
xchg
adcb
jg
iret
mov
notl
mov
rcrb
cld
fisttps
addr16
inc
test
scas
cmpsl
mov
fistpl
add
mov
rclb
mov
or
js
pop
adc
pop
sti
inc
jo
push
out
ds
inc
lcall
frstor
mov
ret
sbb
cmpsb
inc
mov
dec
stos
mov
mov
jns
push
add
stc
jbe
cwtl
add
sarl
in
mov
js
add
ja
cmp
je
mov
mov
ret
push
add
or
jo
add
add
xor
xchg
sbb
js
xchg
out
cmp
cmpsb
inc
ret
xchg
push
cmp
leave
cmp
movsl
push
mov
xchg
add
adc
mov
lods
test
andl
addr16
out
add
inc
movsl
popf
mov
and
sub
movsb
enter
mov
xor
filds
jae
add
loop
add
mov
sbb
mov
adc
in
sub
arpl
or
push
popa
and
clc
in
xor
push
insl
add
addb
rol
add
xor
je
movsb
sar
shll
out
pop
aad
out
and
mov
jne
lock
add
and
cmpsl
cltd
mov
add
lea
push
sti
lret
and
add
popa
jne
jmp
add
inc
add
mov
add
mov
adc
push
mov
add
mov
cmp
fildl
push
adc
imul
add
repz
loop
fisubs
and
push
mov
sub
mov
jo
cld
add
mov
test
adc
gs
cld
frstor
movl
stc
and
mov
cmp
pop
arpl
out
and
loope
push
mov
lock
jge
xchg
dec
or
jo
jae
add
mov
jbe
rorl
je
jae
hlt
insl
inc
push
popa
add
xor
stos
or
lods
sahf
mov
add
cmp
mov
ret
xchg
push
sbb
jmp
add
out
dec
cmc
add
mov
sub
fs
xchg
or
mov
sub
xchg
arpl
pop
pop
push
xchg
or
lret
in
or
and
xor
insb
lods
or
mov
push
add
jl
roll
mov
xchg
pushf
jae
add
clc
mov
je
dec
add
ficoms
mov
push
xchg
sti
adc
rolb
add
sub
mov
lret
push
call
push
jge
rcr
cltd
add
add
cmp
add
and
jnp
mov
xor
bound
mov
sub
cmpsb
scas
cmpsl
xchg
aaa
add
mov
add
adc
repz
push
add
cli
out
inc
add
daa
repz
add
sbb
fstps
push
ret
mov
testl
inc
mov
clc
ja
mov
pop
mov
outsb
test
addr16
pop
sbb
les
mov
addr16
or
popa
add
xor
rorl
repz
nop
push
inc
fcmovnb
inc
pop
add
adc
mov
into
enter
aas
add
inc
outsb
sti
or
dec
pop
sbb
popa
mov
inc
add
or
pop
mov
outsl
jle
icebp
mov
jb
and
adc
pop
prefetcht1
call
mov
jb
int
test
aaa
lds
data16
mull
test
dec
dec
and
insl
add
inc
stos
test
inc
xchg
push
push
adc
jecxz
call
push
ja
out
in
or
push
cmpb
add
dec
out
sbb
push
lret
imull
add
fisubrl
inc
add
ficomps
scas
mov
cwtl
cld
lcall
add
inc
add
rorb
imull
lds
jmp
sarb
pushf
add
add
cmc
jne
xor
sub
mov
in
mov
add
push
push
scas
and
mov
dec
pop
scas
mov
sbbb
jbe
jne
add
dec
and
lods
add
mov
es
insl
sub
das
in
mov
and
nop
nop
std
mov
sbbb
mov
je
mov
pop
in
add
roll
fcoms
push
add
int
ljmp
dec
scas
add
jecxz
jb
push
inc
in
mov
xchg
clc
jmp
test
gs
shll
movsl
add
xchg
loopw
add
cmp
repz
lahf
add
pop
push
cmp
jmp
push
mov
sub
or
jle
in
loop
leave
pop
mov
les
cmp
mov
mov
jne
add
faddl
out
lcall
gs
pop
mov
jl
jnp
xchg
xlat
ss
dec
jo
popa
repnz
movsb
cmp
hlt
out
mov
hlt
add
divl
add
scas
mov
xchg
addr16
stos
add
adc
add
scas
add
or
cmpsl
add
jbe
scas
mov
push
and
xchg
add
iret
cmp
lret
jl
jmp
cmp
xlat
insb
add
in
out
aam
sub
out
mov
add
js
push
add
or
popa
jl
cwtl
add
or
imul
add
add
xchg
mov
or
pop
push
add
gs
ret
adc
adc
mov
mov
jnp
xchg
mov
lods
mov
pop
dec
xchg
add
ss
add
push
dec
push
arpl
mov
addr16
inc
pop
aas
mov
leave
out
add
add
mov
push
xchg
mov
mov
test
add
push
or
inc
adc
cmp
mov
xor
scas
adc
xlat
out
fwait
into
inc
and
ss
sub
mov
push
mov
xchg
cld
xor
inc
push
xchg
jl
inc
pop
jo
push
aas
mov
sub
sbb
add
dec
fwait
push
daa
roll
scas
movsl
dec
dec
add
outsl
or
push
movsl
rorl
jp
jmp
add
sbb
pop
jb
mov
jbe
pop
pop
lret
or
sub
add
add
add
mov
test
imul
push
int
adc
test
xchg
add
sbb
call
xchg
movsl
imul
jl
jne
adc
add
fistps
cmc
jae
ja
add
lods
add
call
add
clc
popa
xchg
dec
popa
dec
mov
test
out
jbe
shrl
sbbb
popf
cld
xchg
jno
js
jne
xor
out
jo
push
in
ret
cmp
nop
jno
imull
xlat
xor
das
imul
xor
inc
xchg
jg
xorb
fldenv
inc
mov
and
out
adc
mov
cs
add
jl
add
sbb
les
or
push
bound
mov
shrb
dec
jg
cld
xchg
mov
push
arpl
stos
jecxz
dec
and
lret
daa
sub
or
in
add
inc
out
or
call
das
add
insl
push
lods
jbe
dec
sbb
pop
push
inc
jmp
repz
iret
dec
cmpsb
fmull
sbb
cmp
cltd
push
insl
xor
mov
popf
mov
jmp
lret
nop
dec
in
fnsave
add
mov
mov
jecxz
pop
ds
repnz
jo
add
xor
add
lcall
lea
push
or
lds
arpl
in
cmp
shll
add
add
jae
movsb
pop
and
cld
cld
incl
adcl
stc
std
jo
lahf
aam
mov
add
mov
add
cmp
mov
add
aaa
sbb
and
sahf
mov
pop
add
add
push
jnp
stos
xchg
ret
sarl
pop
nop
pop
pop
filds
push
cmp
add
and
adc
inc
mov
decb
push
add
jns
push
add
jmp
xlat
movsb
xchg
ret
inc
fs
push
jo
movsl
fbstp
add
cmp
dec
pop
arpl
push
or
aam
jne
inc
cmp
ds
push
shlb
xchg
jbe
addl
jecxz
or
mulb
push
pop
jne
add
push
in
add
push
les
mov
and
pop
cltd
cs
pusha
icebp
mov
add
mov
jns
popf
mov
jns
sub
imul
lcall
add
sub
leave
xor
and
pop
dec
xor
mov
jno
mov
add
dec
add
jge
push
out
push
add
pop
aas
pop
scas
fildll
sbb
scas
jle
mov
sbb
sbb
shl
xchg
and
mov
in
and
push
arpl
movsb
push
pop
xchg
pop
cwtl
loopne
shll
call
xor
jne
mov
or
add
and
add
es
push
in
lock
add
insl
add
add
mov
cmc
stos
sbb
add
nop
rcrb
sub
out
or
loopne
je
add
test
data16
adc
mov
icebp
cltd
pushf
rol
xor
mov
js
jmp
xor
test
daa
int
mov
and
xor
xlat
call
clc
cmpsb
mov
cs
shl
jno
test
add
popf
xchg
xor
adc
push
dec
mov
das
inc
ljmp
push
ds
pop
test
out
cmp
pop
push
push
movb
or
lods
testb
add
push
sbb
dec
dec
mov
jmp
add
xor
mov
fstp
cmp
and
dec
hlt
xchg
jecxz
dec
mov
mov
sbb
xchg
jb
push
add
outsb
nop
add
jle
add
mov
inc
add
xor
add
add
out
dec
add
shlb
out
mov
mov
or
adc
fs
lret
pushf
sbb
std
imul
xor
ds
shll
dec
popa
loop
xor
cwtl
cwtl
pop
aaa
jg
and
movsl
xor
push
test
int
call
test
cwtl
fwait
add
jb
dec
or
dec
mov
jnp
loopne
mov
dec
and
pop
test
mov
fidivrs
add
mov
mov
or
ja
bound
aad
mov
lea
push
cmp
inc
sbb
lret
xlat
xchg
test
lcall
scas
xor
aaa
add
imul
fldenv
add
cmc
cmp
add
add
xchg
fisttpl
mov
add
aaa
je
adc
shrl
call
xorl
and
imul
nop
push
sub
inc
inc
mov
das
gs
add
sub
xchg
mov
pop
lock
sbb
scas
loope
push
lea
loop
enter
or
dec
cmp
jb
cmp
add
pop
sbb
addr16
cmp
sub
and
mov
lcall
jns
fisubrl
pop
push
test
cmpsb
mov
movsb
and
bound
js
mov
paddd
cltd
adc
icebp
iret
jb
dec
into
iret
jl
jb
or
add
stos
mov
add
jp
and
and
xchg
add
and
insl
push
out
add
jbe
sbb
xchg
repz
out
jnp
jle
rclb
mov
mov
jb
aaa
movsb
insb
clc
mov
jns
shlb
lahf
std
fcoms
inc
dec
shll
incb
add
add
test
iret
jle
sbb
pusha
add
xlat
loope
add
adc
inc
cmp
clc
inc
add
add
inc
or
dec
mov
xor
add
add
lret
add
popa
fs
add
sub
jl
jecxz
pop
pusha
inc
xlat
add
sbb
stos
xor
sarb
push
imul
mov
add
cmpsl
add
pop
push
rolb
pop
scas
ja
cltd
insb
leave
add
es
xchg
push
pop
inc
aam
in
sbb
add
pop
sub
sub
out
aas
pop
sbb
add
pop
add
push
add
xor
mov
add
or
push
lods
es
imul
je
sub
or
inc
add
mov
lds
jne
insb
mov
sub
fsubrs
add
sub
mov
or
mov
outsb
inc
fadd
sbb
cs
cmpsb
call
mov
or
aaa
repnz
js
cwtl
mov
es
sbb
insl
test
scas
mov
add
cmp
push
xor
fidivl
add
xor
repz
aas
fisttpl
jp
xchg
jb
rcll
adc
jmp
inc
mov
call
lea
sbb
add
stos
mov
imul
jbe
in
push
mov
lret
pop
adc
rclb
pop
mov
data16
push
idivl
pop
add
ret
data16
aam
pop
repz
push
sub
stos
aaa
inc
mov
add
subl
jno
inc
pushf
add
les
sub
sbb
mov
in
mov
test
pusha
mov
incl
add
outsl
inc
rorb
sub
inc
insl
leave
loopne
jp
addb
rcrl
inc
jecxz
cmp
incb
or
out
cltd
pop
sub
cmc
lds
add
test
jge
pop
hlt
das
pop
outsl
push
xchg
ss
fnstsw
popa
cs
xchg
aas
xor
adc
add
add
cmp
jecxz
sub
scas
pop
push
mov
mov
testb
dec
cmp
imul
lret
sbbl
mov
add
and
stos
dec
add
add
dec
outsl
movsl
cltd
cmc
in
test
pop
mov
push
std
push
jne
mov
add
pop
dec
add
jno
add
fs
sarl
add
mov
cmp
jns
push
jp
aad
sbb
and
aam
jne
pop
xchg
push
jns
arpl
ret
xchg
add
test
mov
sub
mov
sbb
sub
mov
push
rclb
scas
dec
dec
fucomi
sub
jle
add
movsb
jg
inc
inc
jg
nop
clc
jae
add
xchg
enter
fidivs
jne
mov
popl
out
repnz
sarl
mov
movsl
shll
mov
mov
cmp
mov
es
inc
add
mov
nop
add
adc
adc
mull
pushf
push
mov
int
add
mov
in
push
add
aaa
pop
data16
mov
pushw
int
cmp
std
xchg
and
aaa
add
add
add
push
jge
inc
pop
xchg
mov
push
leave
jg
les
mov
std
sub
and
in
add
push
aaa
add
add
push
push
inc
ret
xchg
add
add
dec
cli
xchg
sbb
iret
insl
shr
imul
lcall
rcrl
dec
ficomps
stos
cmp
int
cmc
out
daa
hlt
xchg
int3
cmpsl
and
in
lret
ja
daa
and
aas
inc
out
jp
test
inc
aam
inc
ja
flds
dec
push
add
or
shll
jns
jecxz
jns
cmp
in
mov
dec
roll
jl
jl
dec
add
mov
testb
adc
insl
stos
gs
push
fxch
ds
sbb
sbb
mov
xchg
pop
iret
cld
push
mov
roll
neg
addl
sub
mov
ja
pop
addr16
pop
aad
lock
sub
xor
cmp
pop
xchg
into
sti
mov
push
xor
ds
mov
pushf
jno
sub
xchg
dec
inc
add
mov
insl
fsubl
add
sti
in
push
mov
aad
pop
dec
adc
repz
dec
in
and
out
xor
and
aad
imul
mov
dec
add
push
movsb
addr16
inc
adc
add
addl
loop
sub
loopne
jo
push
jo
adc
stos
js
add
imul
add
add
divl
fidivs
add
cwtl
dec
push
int
call
and
fists
adc
pop
out
jmp
pop
call
ss
iret
test
outsl
test
push
xchg
daa
neg
fdivs
lret
mov
aaa
inc
loopne
sbb
lcall
test
test
cmpsb
or
insb
lock
mov
jecxz
add
orb
cmp
mov
add
inc
jns
lcall
frstor
orb
or
mov
add
adc
pop
push
fcomip
inc
xchg
sub
xchg
add
adc
sub
add
mov
gs
and
sub
push
arpl
int
pusha
lds
adc
arpl
jecxz
lret
push
fwait
add
pop
sub
xor
mov
das
loop
mov
sbb
xchg
xor
nop
cmp
jb
add
add
inc
push
adc
in
jg
leave
dec
enter
mov
sahf
enter
sbb
mov
cmpsb
fcom
bound
xor
ss
add
cmp
sahf
ret
ljmp
and
add
sub
dec
add
dec
gs
jne
call
mov
bound
leave
xchg
sbb
int
popf
adc
cmp
mov
mov
add
jns
mov
jnp
xchg
add
outsl
pop
js
sbb
xor
fsubl
mov
and
adcl
mov
add
push
sbb
das
leave
adc
mov
sti
lret
rcl
mov
add
jns
daa
inc
jns
add
popa
sbb
xchg
imul
call
je
mov
mov
iret
dec
stos
mov
out
xor
mov
rolb
icebp
aaa
lret
mov
imul
inc
pop
lods
call
clc
adc
stos
mov
cmpsb
add
jb
cmp
icebp
imul
push
add
in
add
inc
ret
mov
std
je
or
fwait
aas
popa
shl
add
std
imul
ljmp
add
aaa
ss
or
test
add
pop
mov
ret
bnd
add
pop
test
jnp
add
mov
mov
lock
push
fiaddl
push
mov
js
adc
pop
clc
push
imul
add
jg
add
cmp
sbb
add
xchg
mov
jb
movsl
cs
adc
mov
or
cmpsb
mov
insb
sbb
ffreep
data16
out
or
arpl
pop
push
adc
fldl
add
mov
fstps
lock
fimull
pop
outsl
dec
sbb
mov
pop
jl
inc
pop
es
sub
fildll
inc
add
xchg
add
loop
add
outsb
dec
cmp
test
je
pop
push
dec
jns
jle
icebp
lahf
sbb
in
in
incl
neg
int3
mov
bound
and
dec
sub
leave
fstpt
cwtl
pop
int3
data16
sbb
inc
sarb
inc
xor
jne
mov
fwait
fs
insb
mov
shlb
and
pop
inc
aas
pop
push
lods
adc
add
stos
inc
add
mov
sub
hlt
pop
push
call
loope
add
and
sbb
shll
movsb
ljmp
add
add
js
add
das
roll
cli
pop
adc
out
mov
add
in
and
inc
add
dec
inc
iret
add
sarb
sahf
shlb
movsb
sbbl
aad
sub
mov
lcall
loop
mov
xchg
pop
add
lahf
and
ljmp
aam
xor
add
mov
xchg
stos
xchg
dec
inc
xchg
adc
outsb
sub
pop
addl
push
xor
pop
fsubrs
fldenv
sbb
push
adc
pusha
loope
inc
mov
push
hlt
add
shlb
add
icebp
add
call
mov
jo
loope
mov
cmp
cmp
adc
dec
adcb
lds
into
mov
inc
add
lods
sbb
clc
jnp
lret
int3
sub
add
clc
sahf
or
mov
inc
sti
test
xchg
cmp
mov
sub
out
fnstsw
add
out
fs
inc
cmpl
sub
jmp
xor
xchg
leave
aas
or
insb
push
dec
add
in
lahf
sbb
and
add
sbb
and
cmpsb
add
call
jp
ds
lods
mov
jb
mov
lock
or
cld
jno
inc
repz
and
add
sarl
add
xchg
arpl
push
push
popf
mov
or
dec
lea
xchg
mov
jns
dec
movl
scas
push
jo
add
cmp
inc
insl
das
xchg
fwait
add
mov
mov
pushf
or
push
das
test
jns
xor
xchg
scas
hlt
xlat
mov
fimull
mov
test
jmp
mov
add
or
jae
jg
xor
outsb
gs
inc
xlat
push
mov
add
xor
sub
adc
or
sti
jne
loope
xor
roll
mov
lret
inc
sahf
scas
adc
jne
sub
push
lcall
add
lahf
push
dec
and
in
adc
test
add
push
add
mov
inc
std
les
xchg
mov
push
mov
add
dec
rorb
mov
xchg
test
pop
add
mov
jno
outsl
mov
jmp
cmp
push
shlb
add
pop
rcll
xlat
mov
and
cmp
or
iret
or
push
adc
or
xor
adc
jmp
xor
testl
mov
pop
and
aad
inc
inc
rcl
sub
pop
subb
pop
xor
add
movsb
js
xor
xchg
add
imul
je
out
mov
dec
add
pop
out
mov
popf
xor
xchg
out
and
pop
dec
add
in
pop
xchg
fs
ret
addr16
cwtl
add
add
add
mov
cmp
icebp
jmp
xlat
mov
imul
aas
pop
mov
fcomps
mov
xchg
xor
arpl
lock
add
or
sbb
add
mov
sbb
push
imul
ret
cmpl
hlt
out
add
xchg
jle
jo
adc
sbb
xor
pop
mov
xchg
push
mov
jl
push
add
mov
nop
push
or
jp
cld
lods
xchg
subb
push
or
xchg
jge
mov
push
add
jecxz
push
sti
shlb
andl
adc
sub
add
sbb
and
repz
pushf
push
jno
inc
daa
fdivrs
mov
daa
scas
outsl
xor
inc
sbb
mov
les
daa
jo
addb
sub
jg
push
push
mov
orb
add
fsubp
inc
xchg
ret
cld
sti
adc
testb
roll
sbb
insl
mov
aaa
ret
sbb
outsb
test
xchg
popa
hlt
jg
imulb
push
mov
xor
push
dec
dec
xchg
cmpsl
push
inc
add
sbb
test
addr16
sarl
adc
push
push
mov
pushf
stos
inc
test
pop
es
inc
add
mov
push
mov
and
mov
push
push
shrb
rorl
xchg
add
add
pop
aad
cmpsb
js
and
lock
lock
and
add
ja
lahf
mov
push
je
test
push
cmp
add
inc
arpl
add
xchg
add
ss
enter
mov
mov
xchg
add
lcall
cwtl
add
jno
decb
insb
cmp
ret
jb
push
push
mov
xchg
dec
cltd
out
fcmovnu
pop
push
dec
jecxz
mov
jae
loope
add
int
jle
jne
pop
jno
add
sbb
bound
pop
add
cmpsl
push
and
push
or
nop
daa
int
loopne
stc
xor
sub
add
stos
ljmp
pop
push
lret
add
cmp
pop
pop
movsl
sub
scas
jmp
inc
clc
aam
add
into
addl
stc
jbe
inc
ret
jg
mov
xchg
andb
mov
pop
jl
sti
fs
data16
xchg
xchg
sub
add
sbb
imul
ss
jo
int3
mulb
add
cmp
mov
mov
movsl
arpl
mov
in
mov
sbb
call
aam
add
dec
cmp
pop
add
sahf
dec
es
xchg
sbb
cwtl
mov
int3
add
call
dec
imul
pop
dec
adc
mov
dec
iret
outsb
aaa
pop
mov
sahf
cmp
adc
and
pushf
gs
push
rol
iret
pushf
xor
flds
out
repnz
lods
hlt
fistpll
dec
loope
daa
fstpl
fs
mov
cmp
in
inc
into
mov
add
gs
inc
je
push
cli
add
jl
dec
rorb
add
adc
jbe
and
push
add
iret
sbb
mov
mov
int
fwait
js
sub
sbb
fldcw
cmpsl
jnp
xchg
cmpsb
leave
das
jnp
aas
fisubs
sub
mull
push
test
fcompl
push
icebp
add
ss
add
int
mov
lods
lods
add
jb
iret
add
int
xchg
js
jle
lahf
aas
loopne
sbb
test
fstl
push
xor
lods
cmpb
add
cltd
movsl
rorb
xchg
mov
cwtl
add
fucomip
dec
sbb
xor
push
test
jmp
jle
add
add
rolb
xor
add
lret
pop
movsb
push
dec
xor
sub
mov
push
aad
ljmp
gs
lcall
rcl
jbe
repnz
mov
add
incl
sbb
cmp
or
fisttps
sbb
adc
sbb
add
pop
int
shll
test
lods
or
lret
pop
dec
xor
add
inc
pop
add
add
xchg
gs
add
fdivs
mov
or
ds
loop
shrl
add
mov
sbb
movsb
pop
or
push
outsl
aaa
sarb
adc
ja
sbb
test
add
mov
inc
add
jmp
jg
add
test
and
and
mov
add
or
test
loope
aaa
xor
int
push
mov
mov
xchg
or
lahf
or
test
int3
adc
push
or
mov
sti
hlt
sub
mov
add
sbb
test
sbb
fwait
sar
xor
jno
push
sbb
psubd
cld
sub
repnz
xor
add
or
shll
xor
add
pop
xor
dec
add
sbb
add
fwait
movsb
push
adc
or
inc
iret
inc
add
push
pop
mov
imul
add
mov
mov
xchg
mov
lahf
ljmp
inc
out
pop
cld
mov
jbe
sub
and
int
imul
rolb
push
stc
fs
inc
add
add
sbbb
pop
popa
jbe
in
push
int
add
cwtl
loop
xor
push
mov
cmpsb
pop
mov
pop
notb
mov
and
pop
pop
in
jae
out
das
add
ret
sbb
adc
gs
pop
sbb
mov
test
hlt
cmp
ss
adcb
testb
mov
jne
inc
xor
sbbb
jg
pushf
frstor
pushf
cmp
scas
pop
cmp
cmp
movsb
ds
inc
pop
out
not
movsb
dec
mov
dec
mov
arpl
inc
jmp
movsl
mov
jecxz
js
int
xor
fadds
push
and
mov
fs
lea
mov
add
mov
push
pop
sbb
and
hlt
andb
fdivrs
add
xor
jne
dec
sbb
add
lods
add
xchg
push
jl
enter
rep
xlat
mov
xchg
lods
je
aam
cmp
mov
es
lahf
dec
sti
mov
jl
cmpsl
into
es
push
stc
jne
into
mov
sub
in
add
pop
xor
cmc
fcmovnb
or
cli
pop
imul
sbb
add
add
adc
add
cmp
sub
jg
sbb
mov
and
xchg
mov
je
je
add
scas
dec
add
and
xchg
sahf
ret
and
arpl
test
xchg
insb
push
daa
or
adc
mov
sbb
mov
mov
les
leave
ljmp
cmc
repnz
cmpsl
jmp
add
in
xor
pop
lret
cli
adc
mov
fs
add
fwait
adc
mov
mov
xor
and
jo
adc
add
add
pop
mov
fstl
js
fistl
pop
and
stos
cmc
dec
test
mov
xchg
cmpsb
je
cmp
aad
addl
sbb
shll
sub
add
cmpsl
fs
stos
stc
arpl
data16
out
jge
lahf
pop
loope
cmp
inc
lods
xchg
lcall
adc
adc
nop
inc
add
or
mov
sbb
imul
or
push
pushl
and
fs
sbb
mov
or
add
rolb
mov
stos
inc
mov
movsl
mov
jmp
fcmovb
mov
mov
sbb
rcrb
add
add
sti
or
test
add
xorl
xchg
push
stc
jbe
lret
mov
popl
dec
stos
mov
inc
rcrb
imul
adc
and
mov
add
data16
fsubrl
pop
outsb
sub
jmp
dec
mov
pop
cmp
lcall
add
cmp
push
jne
int3
test
pop
out
aam
roll
cwtl
add
movsl
sub
inc
testl
scas
mov
push
shl
mov
aas
nop
lods
pop
lds
add
nop
fisubl
sub
cmpsl
sbb
mov
outsb
mull
out
or
repz
das
cld
mov
pusha
ret
sbb
popa
and
mov
mull
pop
push
imul
xchg
ja
fs
incl
lcall
lret
dec
jbe
dec
add
jg
lock
or
dec
nop
add
add
xchg
out
push
adcb
imul
mov
cld
mov
pop
stos
add
lret
outsl
mov
xchg
sbb
sub
cmp
es
mov
add
cmpl
int
in
push
ljmp
ljmp
addb
xchg
mov
into
add
insl
ret
mov
in
pop
hlt
jl
mov
add
jl
mov
add
cmp
fldenv
add
std
je
add
jg
xor
aam
add
ljmp
scas
das
mov
loope
inc
push
jg
jo
pushl
fcomp
repz
push
sbb
lds
add
fiadds
rorl
xlat
xchg
push
add
add
inc
test
pop
test
jmp
add
mov
pop
ds
xor
pop
jmp
sbb
lcall
imul
inc
jns
push
cmp
and
or
sldt
add
test
or
popa
popf
aas
or
add
add
mov
add
jb
int
lods
js
imul
fstpt
les
lods
xchg
outsb
jmp
add
loop
jge
cwtl
mov
add
arpl
add
adc
xor
jns
dec
add
leave
hlt
xor
pop
lods
sbbb
jns
lahf
jae
add
stc
dec
fdivp
gs
pop
mov
cmp
imul
aad
call
add
add
shll
push
sbb
shrl
add
sbb
jne
lret
jle
stos
cs
clc
icebp
call
or
stos
pop
mov
jno
add
nop
test
mov
fwait
ljmp
mov
lea
xchg
fwait
cmp
sub
push
sbb
push
add
push
aam
in
scas
test
jb
or
pop
sahf
cld
das
aam
jnp
fnstsw
xchg
xlat
jo
in
and
cs
mov
repz
add
bound
sbb
cli
mov
lret
fildll
addl
mov
add
adc
dec
push
add
dec
cmp
pushl
or
jnp
and
lret
ss
push
xchg
inc
jbe
lret
movsl
test
jp
mov
fisttpll
aam
jns
popa
or
lahf
movsb
mov
stc
inc
or
or
or
cmp
add
mov
mov
cmp
mov
icebp
out
fdivrl
pop
fs
mov
jnp
jo
int3
jge
popa
lret
xchg
out
mov
xor
and
out
xchg
xchg
dec
inc
rcr
in
pop
sub
cmc
sbb
mov
loope
xchg
dec
jbe
jno
mov
xor
out
les
pushf
sbb
push
pop
xor
les
imul
shrd
xchg
lret
pop
out
lcall
in
xor
in
lcall
out
add
push
add
lock
push
out
mov
add
mov
sbb
cmpsb
mov
inc
pushw
and
push
pop
adc
jne
sahf
movl
outsl
add
mov
fldcw
add
xlat
shlb
mov
mov
pop
aam
lret
mov
ss
xchg
mov
push
out
and
and
push
daa
hlt
mov
pop
fsubr
mov
push
mov
out
ljmp
out
sbb
cmp
push
repnz
sub
sub
movsb
imul
es
xor
cmp
cmp
incl
aaa
shll
jl
ret
outsl
dec
inc
lea
push
iret
or
enter
push
out
pusha
add
add
pushf
push
mov
pop
fmuls
pop
add
dec
jne
or
imul
mov
pop
lea
test
cwtl
sbb
push
xor
pop
add
add
ds
std
ds
cmp
cmp
rorb
insl
add
dec
add
push
repz
add
je
divps
jne
mov
add
repz
add
or
aam
sahf
dec
iret
addr16
popa
scas
push
jae
pop
dec
inc
adcl
popf
cwtl
ss
je
adc
jecxz
xchg
and
push
ja
mov
sub
cs
jge
mov
push
mov
add
sub
and
movsb
add
insl
sub
add
xchg
scas
call
aas
aad
mov
add
sti
and
cmc
or
mulb
inc
push
in
push
movsb
mov
pushf
cmp
test
push
sub
mov
add
and
add
scas
ja
mov
cs
mov
cmpsb
lahf
jmp
push
or
shl
adcl
pop
add
sub
cmp
mov
pop
into
sti
jp
add
out
or
push
or
dec
inc
pop
negl
mov
jb
xchg
je
ficompl
mov
add
lret
test
ss
jmp
sahf
cmp
orl
into
stc
adc
cld
add
add
mov
dec
cltd
push
lods
jg
adc
mov
mov
lretw
inc
fldcw
sub
jb
out
shrb
loop
add
pop
lahf
sbb
outsl
xor
movsb
rcrl
add
jmp
mov
mov
aaa
and
lock
div
add
sbb
add
dec
mov
push
inc
push
mov
add
adc
cmpsb
imul
dec
enter
hlt
sub
cli
fbld
jns
cli
sub
pop
push
add
in
mov
add
fldt
adc
lret
mov
in
loope
dec
mov
push
decl
popa
mov
dec
out
stc
and
pusha
add
fstp
sti
inc
mov
sbb
rorl
mov
jge
mov
incl
lcall
sub
dec
leave
fwait
mov
fwait
add
cmp
in
test
sbb
cmp
enter
add
mov
add
hlt
pop
lods
gs
cmp
adc
mov
js
popf
rorb
aas
cmovl
dec
cli
add
int3
aad
sub
je
jbe
dec
and
jmp
lods
add
jno
sub
add
mov
sub
sbb
bound
dec
jecxz
outsb
dec
inc
mov
jmp
mov
add
les
adc
cmp
cmpxchg
int
add
or
push
test
fadds
movsl
mov
ret
add
xchg
aam
cmp
test
inc
or
sar
lret
pusha
push
push
test
lcall
pop
add
fsubl
in
icebp
push
cmp
les
pop
inc
mov
rorl
int
inc
add
idivl
add
and
fidivrl
nop
adc
xchg
inc
dec
add
mov
loope
push
pop
out
hlt
cmp
add
mov
test
dec
das
addl
jmp
xchg
outsb
jbe
mov
xchg
or
xlat
cmp
add
bound
sbb
xor
push
pop
add
cld
test
test
add
push
flds
stos
cmpsl
add
jecxz
inc
stc
dec
aas
repnz
out
fnstenv
xchg
cmp
add
int
add
add
push
cli
sub
cmpsl
add
lret
clc
mov
repnz
lods
jle
or
sbb
xorl
add
dec
pushf
add
jge
inc
xchg
sbb
and
scas
mov
jp
push
and
repnz
fldl
sbb
adc
clc
dec
lods
sbb
add
sub
push
ficoms
xor
lock
out
jbe
and
inc
xor
and
hlt
outsl
sbbl
jb
stc
dec
pop
pop
test
jb
out
popf
repnz
fcmovu
andb
or
xchg
lock
add
add
iret
addl
aaa
lcall
jno
je
inc
in
mov
jp
insl
out
or
popa
bound
sub
adc
xor
lea
out
mov
xor
push
stos
and
push
inc
mov
mov
repz
insl
cmp
add
xchg
add
dec
push
dec
push
or
lods
mov
add
jmp
cli
xchg
or
inc
jg
mov
push
inc
xchg
xor
sbb
sub
mov
outsb
and
dec
mov
push
jns
mov
cmp
add
loopne
and
sbb
xchg
addl
cmpsb
add
and
pusha
dec
lcall
std
mov
out
cmp
lret
mov
sub
test
ljmp
aas
jmp
add
xchg
fcmovne
add
mov
dec
sahf
insl
add
gs
cld
mov
mov
jp
repnz
sub
movsl
movsb
adc
jno
sub
mov
and
pusha
mov
popf
dec
add
gs
cmp
std
mov
testb
push
icebp
movsb
xor
add
cwtl
mov
and
mov
add
add
add
popa
jbe
add
add
popa
int3
mov
std
mov
negl
insb
mov
orl
add
adc
and
cmp
arpl
push
add
mov
outsb
int3
pop
add
jmp
add
outsl
imul
outsb
mov
cld
inc
addl
stc
data16
scas
add
add
inc
push
rcll
in
sti
xlat
ljmp
jno
sub
test
sar
cs
add
inc
mov
lret
and
bound
repnz
add
xchg
pop
xor
lock
xchg
jno
popl
sbb
fdivr
iret
adc
fidivl
les
test
enter
sbb
fisubl
outsl
roll
iret
int
jle
sbb
fwait
and
xor
icebp
scas
sub
fisttpll
bound
rcrb
add
xchg
add
inc
mov
aas
loopne
adc
js
add
sbb
insl
fsts
adc
jbe
xchg
lret
add
pop
mov
lds
add
inc
out
add
fldl
repnz
shl
in
xor
sti
push
ja
ret
std
add
ret
into
shrb
cwtl
ficoms
outsb
jl
ret
add
in
and
leave
outsb
push
inc
popa
xor
dec
int
add
fisttpll
xchg
orb
fcompl
pusha
in
fs
mov
jns
add
repnz
inc
xchg
xor
or
mov
inc
or
push
sbb
pop
dec
pop
inc
stc
xor
adc
dec
cmc
pop
sub
inc
in
bound
cmpsl
js
adcl
add
mov
test
mov
into
add
pop
ret
mov
cmp
xchg
pop
fwait
add
leave
add
std
add
addb
push
push
sti
stc
mov
adc
dec
fildl
nop
add
or
or
icebp
outsb
cmp
add
ds
jnp
add
adc
cmp
dec
mov
mov
hlt
add
aam
jp
push
or
ret
out
out
mov
pusha
mov
or
mov
adc
or
lcall
or
xchg
sbb
jns
pusha
lods
or
aas
or
int3
add
in
rolb
outsb
xor
jo
mov
add
dec
xor
add
adc
testb
adc
dec
push
pop
jp
imul
jo
add
adc
pop
outsl
sahf
pop
sbb
das
add
jle
sbb
je
jle
jge
insl
sbb
sahf
insb
mov
push
pop
add
imul
add
xchg
dec
add
testl
shll
loopne
add
xchg
loope
adc
cltd
fsubs
je
shll
mov
cli
popa
call
ret
inc
roll
rorb
lds
adc
mov
fstps
or
loope
xor
push
add
pop
aas
jmp
cmp
or
adc
ljmp
inc
mov
push
push
cli
gs
nop
ja
sub
dec
lahf
int
xchg
push
add
roll
add
sar
insb
add
rorl
or
insb
cmc
and
cmpsl
das
lods
add
dec
cltd
mov
adc
mov
dec
aad
pop
add
and
rcr
mov
ja
adc
xchg
inc
add
mov
push
mull
leave
shr
loope
fisubl
lret
push
fnsave
sbb
pop
lcall
fwait
mov
int3
dec
bound
xlat
mov
jle
mov
rcl
cmpsb
or
stos
mov
and
cwtl
adc
dec
xchg
xchg
lods
dec
push
add
std
pop
mov
mov
cmp
adc
ror
lcall
mov
and
addb
enter
mov
inc
mov
and
daa
test
shll
add
add
cmc
add
fsub
sbb
add
jns
pop
dec
out
cmp
out
jp
cmp
mov
les
rolb
fcoml
cwtl
add
or
dec
dec
push
je
add
into
xor
mov
pushf
inc
or
jge
add
add
sub
add
add
insb
mov
div
popl
inc
xchg
imul
add
stc
fcoms
adc
mov
ficoms
addb
stc
stos
add
sub
mov
inc
inc
scas
jb
or
rcr
shlb
arpl
pop
mov
scas
test
aaa
mov
or
and
mov
sub
scas
cmp
or
mov
lock
stos
test
add
test
xor
icebp
or
sbb
jns
es
push
iret
cwtl
add
stc
add
das
push
ficoms
xchg
out
mov
stc
add
mov
test
daa
push
mov
cmp
mov
inc
sahf
jbe
movsb
pop
adc
and
xchg
xorl
add
scas
mov
pop
pop
mov
bound
popa
dec
aaa
adc
or
xlat
pop
idivb
and
loop
outsb
lods
pop
add
lret
gs
mov
dec
add
sahf
mov
imul
fsubrs
sbb
pop
leave
sbb
insb
and
xchg
jnp
fsubl
bnd
mov
and
add
push
cmp
js
bound
js
xchg
insb
loopne
aaa
add
mov
cli
cmp
rsm
add
enter
imul
insl
sub
les
call
test
lea
add
xchg
mov
pop
xchg
aas
add
iret
adc
pop
call
or
daa
rolb
fldl
inc
test
jmp
push
add
add
or
popa
add
pop
test
stos
pop
sub
mov
cmp
add
xchg
and
jl
and
ret
rolb
mov
shrd
cmp
incb
into
jnp
mov
mov
jno
xor
xor
fldl
push
add
xor
add
dec
push
pop
popa
test
or
lret
add
add
call
add
add
loope
mov
jmp
cmp
pop
sbb
sbb
adc
test
std
cs
push
sub
pop
pop
lock
std
pop
gs
lock
xchg
test
in
aad
push
jnp
or
not
inc
scas
xchg
in
mov
xor
cltd
push
jl
mov
mov
jg
ficompl
sar
inc
call
mov
mov
sub
inc
or
push
jnp
add
out
add
cmp
or
xor
or
pop
cmp
add
push
enter
or
cltd
push
jb
and
sub
lcall
add
adc
in
cmpb
test
add
push
jmp
mov
daa
inc
xchg
mov
or
add
dec
inc
push
fdiv
pop
aaa
xchg
or
scas
insb
xchg
movsl
add
add
add
lret
dec
pop
pop
arpl
and
add
add
nop
or
nop
pop
push
scas
jno
mov
add
add
lahf
rolb
add
mov
add
test
fisttps
sbb
stos
inc
sub
inc
ret
sbb
mov
or
cmc
cmc
or
jno
and
sub
add
jmp
inc
and
cs
jl
lods
out
out
and
adcb
xor
mov
addb
cld
or
faddl
push
negb
mov
add
ljmp
loop
pop
adc
sbb
push
sarl
sbb
push
fldcw
jno
cmp
mov
jp
jns
das
push
add
enter
add
add
cmc
push
adc
fcom
jne
icebp
pop
mov
movsb
loop
xchg
cmpsl
cmp
std
mov
cmpsb
add
xchg
lock
add
rcl
mov
push
mov
int
test
lock
xchg
pop
test
leave
out
push
xchg
jp
fwait
add
push
mov
lods
mov
test
add
and
xlat
test
sbb
stos
ss
mov
xchg
push
or
add
push
out
incl
add
xchg
outsb
mov
fs
mov
pop
dec
cld
rclb
add
xor
xchg
insl
rcr
cld
jmp
lods
cli
push
add
mov
cmp
enter
adc
adc
lea
push
and
mov
fwait
add
jmp
jle
lret
pop
movsl
add
lret
jp
xor
addr16
les
sub
add
jle
lahf
ss
sbb
add
clc
filds
sbb
fisttps
or
pop
add
int
dec
mov
fdivrs
xor
ret
cmp
pop
in
mov
and
pop
jmp
fistpll
scas
imul
stos
loop
loopne
push
sub
mov
add
mov
nop
adc
mov
cli
or
push
adc
insl
lock
aas
and
rol
orb
push
and
rcll
scas
imul
in
mov
xchg
pop
scas
pop
fwait
push
dec
in
loopne
mov
or
add
push
inc
inc
lods
add
lds
inc
jl
leave
jl
add
cmc
xor
leave
loopne
cwtl
and
mov
and
aad
inc
xchg
push
push
lret
add
sbb
add
lods
cmpsl
mov
add
stc
jle
pop
sbb
cmp
in
outsb
mov
lahf
incb
xor
ljmp
mov
loop
mov
adc
jg
inc
pop
push
xchg
push
mov
pop
xor
xor
add
jp
mov
out
cmp
mov
ljmp
test
flds
xchg
fsubrs
mov
cmp
jns
addr16
push
jmp
dec
mov
push
xchg
add
mov
add
add
add
xchg
or
add
leave
mov
push
movsb
add
ja
pop
ret
push
jmp
bound
bound
or
add
in
clc
pop
std
add
fidivrs
add
pop
iret
daa
sub
jp
je
mov
aad
adc
or
push
je
loop
inc
divb
cltd
pop
filds
das
jb
xchg
ret
and
push
hlt
mov
mov
fsts
cmpsb
test
cli
int
add
mull
cmc
dec
jg
add
pop
shlb
out
add
add
xchg
push
mov
adc
add
jae
add
pop
add
or
add
js
pop
add
outsl
lock
add
inc
jmp
stos
add
jle
idivl
jg
add
ss
inc
dec
push
mov
add
and
mov
mov
cmp
xorl
ret
push
add
or
jne
push
roll
jl
pop
inc
dec
fcomp
dec
cmp
or
mov
push
add
or
icebp
xchg
sbb
scas
add
or
add
out
jl
sub
cmp
sahf
fldt
outsb
ja
add
cs
test
jnp
sbb
sbb
sub
loope
cli
or
loopne
cmp
mov
mov
mov
sub
aaa
cli
adc
mov
and
mov
lock
fdivl
pop
movsb
or
shlb
shlb
pop
mov
or
dec
cmp
sbb
lcall
dec
fiadds
push
fsubr
or
pop
pop
add
add
fwait
lea
outsl
inc
mov
dec
mov
rorb
sbb
cmp
mov
pop
fldt
je
out
xchg
push
ljmp
aad
mov
inc
push
nop
fidivrl
inc
mov
in
cmpsb
push
pop
insl
pop
push
outsb
dec
adcl
ret
add
scas
add
lods
imul
add
fldenv
stos
rorb
pop
scas
add
xor
pop
inc
cld
pop
pop
xor
movsl
std
in
xchg
push
lret
inc
xchg
rol
xchg
xor
add
add
lahf
add
jne
or
and
pop
jae
ret
push
add
mov
add
add
add
mov
mov
cmp
xor
inc
dec
add
shlb
sahf
daa
sbbb
push
mov
jecxz
cmp
xchg
sub
add
xor
or
or
sub
xlat
bound
xchg
or
add
mov
aam
jno
mov
mov
add
inc
add
fs
mov
sbb
movb
add
xchg
adc
daa
add
sub
jb
rclb
aas
adc
stos
dec
imul
pop
xlat
hlt
in
inc
cld
mov
mov
out
mov
inc
popa
mov
or
add
add
clc
push
out
mov
mov
add
cmpsb
loope
ret
in
add
pop
outsb
das
cmp
js
add
cld
shl
jb
or
test
aam
jl
repz
lahf
push
rcll
arpl
mov
dec
aaa
or
and
push
in
lods
jbe
mov
ja
das
pusha
lcall
mov
setnp
test
add
loopne
repz
cld
nop
test
pop
mov
adc
lcall
dec
add
add
add
sbb
mov
pop
dec
add
ret
add
repnz
sbb
xchg
push
push
mov
loop
sub
stos
cmpsb
sbb
adc
pop
repz
lret
outsl
add
daa
push
clc
push
das
loope
adc
jg
pop
add
push
adc
stos
rcrl
das
pop
adc
sub
mov
pop
je
and
jnp
push
pop
pop
lds
shr
ss
adc
jge
out
lret
pop
xchg
pop
mov
ljmp
ret
inc
jmp
xchg
rcll
mov
imul
fisubrs
add
cmpsl
add
popf
mov
ds
pop
dec
cmpsb
mov
arpl
out
add
fucom
lahf
pop
xor
push
adc
pop
flds
std
inc
add
add
scas
popf
add
ret
mov
aad
popa
push
push
mov
stos
or
in
bnd
add
test
mov
lret
mov
adc
mov
ja
test
add
inc
pop
mov
or
je
data16
int
jecxz
mov
int3
pushf
andb
add
push
lods
jb
push
mov
push
mov
jbe
movsb
cli
add
adc
jne
or
pop
ss
inc
nop
aas
les
roll
or
clc
scas
out
push
inc
push
jne
add
mov
add
push
adc
imul
add
pop
flds
repz
add
mov
lods
cmp
repnz
fxch
sbb
idiv
mov
cmp
cmpsl
mov
push
add
shl
movsb
rcl
add
push
jo
pop
sahf
mov
add
gs
lea
and
fbld
movsb
rorb
pushf
sbb
xchg
repz
addb
mov
scas
arpl
add
rolb
pop
xchg
jbe
xchg
movsl
cltd
jae
jp
insl
in
cmpsb
add
jno
out
add
push
shll
mov
xchg
mov
or
cmp
add
arpl
aaa
addl
xor
out
pop
add
dec
out
ret
mov
int
sub
and
add
or
lea
push
push
jbe
pop
lahf
repz
add
jg
fisubrs
mov
in
pop
xor
add
mov
clc
fiadds
cmp
in
add
adc
xorl
jmp
pusha
sahf
out
xor
pop
sti
adc
in
movsb
std
jns
inc
idivb
add
add
inc
xchg
add
mov
mov
xor
xor
bound
dec
add
add
dec
dec
mov
das
jnp
imul
pop
cmp
or
mov
xchg
js
cmc
rol
daa
and
pop
sbb
and
hlt
add
inc
aad
mov
xor
out
cmp
mov
mov
or
jle
scas
cmpsb
mov
inc
scas
cmp
in
repz
popf
add
add
fwait
insb
das
outsl
sbb
mov
jle
push
add
sub
jmp
push
lods
add
int
pop
imul
rolb
fldcw
xlat
jmp
add
pop
mov
nop
sbb
mov
xor
rolb
push
and
push
xchg
in
test
sbb
mov
mov
push
mov
nop
lods
ret
inc
add
ficompl
jo
lods
add
sub
imul
add
dec
clc
mov
mov
add
sti
cld
adc
mov
leave
mov
cltd
mov
jno
stc
xlat
mov
push
jmp
mov
or
addb
repz
lea
lds
and
dec
push
dec
jg
pop
xor
jne
mov
push
add
or
push
xchg
jge
fstp
xor
sti
jnp,pt
call
xchg
inc
jo
and
adc
fdivs
js
inc
add
ret
sahf
push
je
add
inc
stc
out
lfs
decl
sbb
je
add
inc
clc
adc
pop
xlat
pop
mov
xchg
cmpsb
les
pop
into
sub
mov
sub
mov
insl
sbb
adc
pop
aam
in
push
lahf
sub
jne
push
dec
fwait
lret
mov
pop
xchg
push
pop
xchg
lods
fcomi
ja
pop
jecxz
adc
ret
xchg
add
les
jb
jmp
inc
jge
stc
out
push
in
mov
sti
or
xchg
daa
jno
popf
or
int3
mov
je
outsl
xor
stos
bound
bound
push
ds
add
icebp
lea
les
aas
mov
add
lret
test
in
inc
adc
or
arpl
lea
sub
lock
scas
add
int
jmp
lahf
dec
lret
xor
ljmp
gs
mov
sub
mov
stos
cmp
add
das
popf
add
mov
lea
mov
jbe
add
dec
add
jnp
sub
push
shl
jne
outsb
and
push
add
jae
test
fcoml
add
pop
jle
add
ja
stos
jne
repz
add
popa
loop
sbb
xchg
pusha
fst
ljmp
add
outsb
add
add
cmc
arpl
dec
popl
add
outsb
add
jecxz
data16
loope
cmp
add
push
or
push
add
add
lret
add
aaa
push
jl
into
mull
movsb
pop
in
lcall
xchg
stc
movsb
cmpsb
mov
and
sarb
jl
sub
mov
add
xchg
add
in
sahf
shl
loopne
rorl
dec
add
adc
mov
outsb
mov
sub
push
outsl
add
jge
xchg
std
and
sbb
xchg
lret
outsl
lahf
pop
fcmovne
sbb
dec
mov
outsl
pop
add
add
pop
add
repnz
mov
mov
ret
das
ret
pusha
jl
jns
add
jl
mov
mov
ds
ret
jle
jo
dec
add
add
fisubrl
mov
xchg
orb
mov
fnstcw
add
or
xchg
and
idivb
clc
lret
add
add
fildl
add
or
fcmovu
push
add
push
mov
add
mov
flds
daa
adcb
xor
or
fs
xchg
popa
iret
and
mov
jnp
pushf
fimuls
imul
mov
stos
subb
cli
or
fldl
xor
and
testb
add
sub
add
xor
ljmp
rcrb
add
addb
out
dec
jae
add
gs
pop
hlt
mov
add
inc
add
fnstcw
jbe
test
adc
add
mov
std
int
int
ss
adc
jg
cld
adc
inc
out
xchg
fidivrl
in
dec
push
outsb
add
fildl
cmpsb
enter
pop
jbe
out
jnp
inc
stos
lea
enter
or
ss
adc
aaa
int3
fsubrs
dec
rcrb
xchg
or
rolb
inc
and
xor
ja
cmp
add
lcall
add
mov
push
das
add
add
ret
mov
insb
adc
sbb
adc
in
cvtdq2ps
adc
mov
pop
testl
sbb
daa
clc
mov
out
pop
insl
in
cltd
in
dec
mov
test
hlt
add
int
roll
rorl
rcll
pop
loope
in
test
jp
xchg
clc
in
out
sbb
pop
inc
jl
jmp
mov
aas
shrl
mov
adc
mov
cs
mov
cmpl
call
fisttpll
clc
dec
test
sahf
sahf
add
cmp
add
sbb
nop
cmpsl
cmp
call
add
rcl
test
xchg
fisubrl
add
fildl
pushf
fsub
adc
mov
pop
jl
pop
inc
pop
test
mov
push
and
icebp
add
das
mov
lahf
fidivs
and
mov
xchg
das
and
dec
push
inc
les
adc
xor
sub
iret
pusha
sbb
adc
into
mov
or
in
xchg
push
cmpsl
bound
sub
fisubrs
sbb
cmpsl
bt
mov
mov
xlat
add
mov
shrl
outsb
lock
test
sbb
aas
xchg
gs
adc
sbb
loope
sahf
inc
fidivrs
in
sub
xchg
mov
sbb
push
adc
mov
ret
pop
cwtl
nop
adc
and
mov
int3
call
test
and
mov
shlb
neg
jge
jno
xchg
mov
add
sub
ss
add
pop
ja
subl
inc
arpl
stc
in
repz
jmp
mov
mov
and
mov
push
inc
inc
push
lods
xor
sarl
loop
int3
mov
cltd
dec
mov
sub
push
dec
fs
inc
xchg
mov
sub
mov
bnd
in
sti
out
sbb
fsubrs
add
add
dec
test
outsb
shl
adc
jo
add
pop
cltd
jbe
cmpsb
test
add
fcoms
and
add
push
popa
add
add
push
jecxz
cltd
ret
scas
cmp
mov
sub
xor
ja
stos
fwait
out
testl
mov
mov
add
add
movsl
out
mov
test
pop
arpl
test
jl,pn
add
inc
bound
jecxz
push
fmulp
ss
je
stos
popl
cli
push
outsl
xor
add
mov
add
js,pt
add
mov
cmp
adc
push
sbb
pop
jg
push
adc
add
dec
add
lret
inc
frstor
cld
xor
mov
ja
add
adc
frstor
outsl
adc
aaa
shlb
shlb
cmpsb
jb
fsubrl
add
test
mov
add
dec
out
push
add
add
lock
cmp
mov
bound
inc
std
mov
add
sbb
xor
pop
negb
sbb
adcl
and
ds
or
or
std
adc
scas
jae
lret
pop
dec
cs
mov
aas
lret
push
or
adc
imul
sarb
loop
or
push
jecxz
stos
fwait
jne
push
popf
loopne
sub
xchg
mov
into
add
mov
or
les
rolb
fwait
sahf
mov
jecxz
mov
or
addr16
xchg
mov
mov
lea
xchg
mov
sub
daa
les
add
add
dec
add
clc
fsubs
data16
lock
xchg
add
push
leave
or
sarb
icebp
ss
aad
fnsave
sub
repnz
sub
mov
in
add
xor
jmp
dec
adc
xor
sbb
jae
lret
add
in
sbb
icebp
add
push
mov
add
movsb
xor
cld
aaa
dec
cli
or
jge
mov
push
jl
lret
mov
lcall
jns
push
add
dec
cs
add
mov
jne
mov
call
xchg
lret
lea
std
aad
jo
jbe
jle
fbstp
das
scas
in
mov
sub
xchg
std
adc
fidivrs
cli
mov
aad
lahf
cwtl
aam
fs
add
sbb
aaa
outsl
out
push
xchg
imul
cmp
or
into
mov
bound
mov
jmp
push
arpl
jmp
cmp
loope
test
mov
push
add
dec
loop
in
inc
rolb
test
sbb
sbb
mov
lds
xchg
decb
dec
imul
pop
cwtl
mov
add
cmpsl
add
xlat
pop
jle
jecxz
loopne
loope
or
aas
rcrl
xor
arpl
cmp
lea
in
lret
jbe
loope
in
xorb
jno
or
fs
xchg
jnp
adc
mov
add
ds
xlat
mov
ljmp
xchg
in
adc
jle
stos
xlat
jnp
push
loopne
inc
aam
bound
dec
ja
lods
add
sbb
popf
sub
or
mov
stos
add
add
cmpsl
sub
xor
sub
sub
pop
sub
imul
add
fwait
iret
test
je
dec
scas
jp
pop
add
fcoms
push
aad
xchg
out
stos
pushl
add
mov
cmpsb
mov
daa
mov
jne
dec
sub
imul
xchg
jno
loope
aaa
mov
daa
push
lea
add
scas
push
sbb
add
dec
mov
cmp
add
icebp
mov
insl
outsl
add
add
mov
sbb
mov
xor
pop
cs
lsl
das
into
subb
cmp
add
lret
loopne
faddl
jae
pop
push
add
repnz
push
add
mov
add
xchg
daa
cmp
dec
and
out
addr16
add
xor
jne
test
or
pop
push
add
pop
inc
pop
dec
daa
in
cmp
movl
insl
mov
fmull
mov
stos
pop
xchg
inc
mov
cmpl
add
jns
mov
pop
sbb
add
sbb
adc
mul
and
push
cld
and
shl
xchg
dec
fs
fwait
jns
daa
js
and
cwtl
push
sbb
fisttps
adc
sahf
incl
add
xor
insb
or
testb
popf
add
pop
movsb
and
bound
fs
adc
push
bound
pop
pop
outsb
adc
test
mov
lcall
lret
aaa
movsb
dec
int
xchg
or
out
sbb
int
mov
cmp
movsb
jo
data16
dec
pop
lds
xor
test
je
jae
pushf
pop
add
int3
cmp
lea
cmp
loopne
neg
popf
and
jge
mov
js
add
pop
repnz
mov
out
out
imul
movups
data16
add
jnp
mov
mov
mov
xor
push
mov
lea
mov
pop
and
imul
inc
sbb
loop
lods
notb
add
rorb
or
add
add
leave
je
lds
adc
add
push
dec
and
adc
fwait
jp
inc
pop
add
sbb
clc
add
rolb
jecxz
jmp
pushf
jmp
cmp
or
orl
fisttpll
fnstcw
repnz
push
jle
cmpl
int3
sbb
add
mov
cmc
pushf
imul
sbb
inc
lret
pop
add
fldt
daa
int3
ja
test
into
aaa
inc
fs
add
pop
inc
sbbb
testb
gs
and
sub
fwait
mov
or
push
dec
pop
movsl
mov
insb
or
imul
sbb
mov
lret
scas
hlt
ljmp
sub
sub
xor
mov
ret
xor
fdivrs
xchg
add
add
insb
adc
add
mov
filds
shr
adc
pop
pushf
aaa
dec
lock
add
xor
or
xor
add
jle
dec
cmp
shlb
add
mov
adc
add
add
xchg
in
lahf
add
jnp
inc
jns
xor
mov
ds
dec
sub
in
repz
add
mov
add
mov
and
inc
add
sub
lret
addr16
and
push
iret
push
mov
cmp
push
pop
pop
or
data16
xor
leave
push
fidivrl
mov
das
jb
cli
orl
loope
dec
push
push
dec
add
push
lea
add
pushf
loope
ds
inc
push
fisubs
push
or
jne
push
dec
pop
push
mov
add
in
dec
mov
mov
iret
scas
push
mov
mov
cmp
sbbb
js
xor
push
scas
or
lock
mov
aam
movsl
pop
repz
add
mov
add
cmp
in
adc
clc
xchg
jnp
sub
in
adc
aaa
filds
lock
cmpsl
push
aaa
xor
mov
pop
inc
in
insb
xchg
sbb
adc
iret
in
and
ja
jns
push
push
push
data16
movsl
test
xor
add
fisubrs
fildll
xor
jl
add
adc
iret
add
sub
call
addr16
outsb
push
or
ret
dec
cmpsb
inc
imul
pusha
dec
xchg
mov
stos
add
and
add
mov
loopne
sbb
movsb
js
jle
jmp
push
fsubrs
push
aad
aam
pop
ja
in
jl
rcrb
mov
mov
or
add
cmp
shlb
iret
out
adc
mov
inc
ds
mov
xor
xor
mov
and
aad
fdivr
aaa
jmp
add
add
jns
dec
add
js
lea
les
adc
andb
mov
icebp
push
test
and
orl
add
cmp
inc
dec
pop
cmc
cmpsb
dec
loope
repnz
jbe
out
adc
or
cwtl
addr16
xchg
mov
and
push
xor
or
hlt
cmp
sbb
addb
cmp
add
daa
mov
aam
imul
addl
incb
mov
fcomps
cwtl
movsb
jmp
daa
xchg
nop
nop
adc
aas
xorl
push
sbb
xchg
xor
icebp
sub
ror
pop
add
mov
xchg
lds
lret
jp
sbb
lahf
xlat
mov
jo
nop
lret
xchg
dec
and
add
loope
jb
addb
nop
mov
push
addr16
ljmp
fcmove
or
xor
andb
jmp
cs
cmp
push
das
in
idivl
loope
dec
dec
mov
stc
lock
mov
std
xchg
sbb
mov
scas
sub
iret
add
add
lods
push
fneni(8087
sub
sbb
scas
int
and
or
ja
fstpt
mov
sub
movsb
andb
mov
and
int
imull
cmpsl
imul
ds
outsb
in
or
jg
push
cmc
adc
scas
fsts
xchg
lods
fcmove
fbld
add
lods
sbb
mov
ja
and
adcb
push
add
mov
imul
fdivr
add
in
in
sbb
push
add
push
add
fnstsw
sbb
insl
data16
fisubrs
clc
addl
xlat
jp
add
imull
sti
mov
in
or
cmpsl
mov
push
into
jns
add
adc
sbb
fiaddl
lcall
inc
add
lods
fstps
add
mov
add
into
ljmp
cmp
xchg
mov
incl
or
and
inc
jge
in
add
push
push
xchg
sub
int
mov
lods
add
in
mov
ss
add
pop
or
call
ret
sti
jbe
fstpt
fiaddl
aas
jae
aas
sbb
arpl
jae
mov
jno
dec
arpl
or
dec
add
mov
scas
cmpsl
lods
ret
arpl
add
popa
pushw
jl
jo
push
sbb
jnp
stc
in
in
enter
cmc
cmpsb
rcll
add
mov
and
int
xchg
insl
inc
insb
push
mov
sub
push
cmp
and
xchg
sbb
jbe
push
outsb
inc
js
nop
or
cmp
mov
daa
mov
push
out
int3
shrb
pop
rclb
xor
daa
cld
rolb
fucomp
xorb
scas
sbb
push
jae
inc
fadds
je
push
push
scas
lds
lret
or
insb
mov
xchg
pop
add
sub
arpl
add
aaa
sbb
nop
aaa
push
xor
or
jo
adc
mov
xor
xor
push
pop
xchg
pop
int3
add
mov
mov
arpl
aaa
repz
jp
das
add
in
mov
imul
jmp
add
mov
pop
xor
cmp
mov
add
repnz
cmp
inc
icebp
and
mov
mov
add
xor
add
out
test
aaa
sbb
add
cmp
in
int
lret
dec
lds
jmp
mov
sbbl
pop
dec
stos
outsb
movb
cs
adc
mov
testl
std
push
aam
mov
dec
and
mov
hlt
dec
adc
out
sub
add
xchg
xchg
xchg
or
out
jne
dec
cld
add
fwait
sub
xlat
sub
add
call
inc
add
add
add
rcr
xlat
pop
mov
mov
mov
mov
cmp
push
mov
cmp
insb
push
pushf
lods
sbb
jb
mov
adc
adc
pop
cmc
sti
push
scas
lock
add
mov
jo
sub
cmpsb
mov
push
push
or
cmp
fildll
mov
int
push
pop
push
inc
adc
add
in
aas
sti
add
ret
les
aas
popa
inc
int3
sbb
pop
lods
jge
add
xchg
filds
adc
cli
pop
bswap
mov
inc
jp
imul
dec
jecxz
or
dec
pop
jae
pop
mov
push
mov
test
mov
in
mov
orb
in
push
add
clc
dec
test
or
iret
int3
sub
add
ss
es
ljmp
pop
mov
ret
jno
lahf
out
pop
add
gs
loope
insl
lret
xor
shll
addl
test
add
divl
out
add
aam
add
mov
push
insb
pushf
adc
or
addr16
dec
cmp
sbb
or
test
xor
adc
and
ja
jecxz
decl
mov
push
scas
and
add
cmpsl
out
fs
mov
mov
adc
shll
arpl
add
cld
fucomip
mov
out
popf
add
int
push
pop
out
sbb
orb
pop
dec
push
scas
call
jmp
cmp
add
push
lret
dec
mov
push
add
mov
jo
popa
inc
pop
adc
sub
sub
pop
cld
dec
add
mov
push
pop
shll
sub
xor
add
mov
mov
fisttps
add
push
add
imul
push
mov
and
jmp
cltd
stos
lcall
movsb
inc
cmp
outsb
lock
mov
fwait
jae
pop
pop
packsswb
mov
mov
stc
mov
jnp
ljmp
mov
std
or
add
lcall
adc
jne
popf
or
dec
mov
ret
mov
jmp
add
rorl
inc
hlt
nop
inc
cmp
mov
mov
add
ret
mov
stos
mov
incl
mov
das
mov
inc
rep
popa
fcoml
inc
adc
mov
imul
cmp
inc
mov
mov
movsl
das
scas
es
lcall
sti
add
cltd
push
data16
add
out
mov
incb
push
mov
fwait
xlat
mov
lods
dec
add
adc
jae
inc
mov
push
in
jae
fidivs
int3
push
add
lea
sub
push
fiadds
add
divl
add
add
pop
fldt
mov
sti
adc
aad
add
push
sti
cmp
test
add
or
cmp
pusha
mov
stos
add
dec
cli
inc
and
es
inc
jne
cld
cld
xchg
psubusb
jno
outsl
clc
jp
mov
mov
add
rolb
ret
jmp
xchg
in
jbe
imul
mov
xchg
and
jmp
fisubrs
jmp
filds
call
inc
fisttps
ja
and
sub
jecxz
sbb
mov
std
pushf
inc
mov
ds
inc
mov
push
rcll
cmpsl
out
shlb
lods
add
pop
mov
sti
push
add
xchg
sbb
add
lahf
lods
xor
jmp
aaa
mov
call
movsl
mov
or
rorl
or
clc
mov
stc
lock
cmp
jns
jb
loopne
stc
cmpsb
mov
adc
push
sub
rcll
pop
cmp
inc
fcmovu
dec
sub
push
push
push
lods
pop
out
adc
pop
mov
and
dec
dec
inc
or
jmp
mov
jo
or
add
add
or
add
dec
xor
addr16
sbb
ja
jae
dec
cwtl
cld
out
mov
inc
add
aaa
out
cmp
mov
lock
stos
je
push
int
incb
sub
jnp
inc
jno
outsl
cwtl
inc
lret
scas
sub
dec
iret
xorl
add
cmp
movsb
add
xchg
out
in
scas
sub
and
mov
icebp
fiaddl
add
imul
int3
jae
add
add
adc
adc
fcompl
adc
sbb
fadd
movsl
in
scas
pop
jns
or
aaa
aam
call
add
jo
das
jecxz
stos
inc
mov
jge
add
leave
or
ja
inc
cmp
iret
in
or
cltd
xchg
add
cld
jbe
dec
lret
xchg
mov
mov
es
popa
add
inc
xor
je
int
dec
pusha
prefetchwt1
imul
mov
pop
xor
int
fistpl
jmp
push
cmp
sbb
loope
movsb
xlat
sbb
pop
pushf
sbb
add
add
aam
push
mov
adc
test
fistl
xchg
add
movsl
add
rolb
pop
jae
das
out
add
mov
lods
push
not
adc
rcr
cltd
add
addb
adc
aas
cmp
loop
mov
mov
add
mov
inc
mov
pop
add
cmp
add
rolb
mov
pop
int3
sub
jmp
icebp
jmp
push
push
cli
push
inc
int3
sbb
js
into
push
dec
pop
aad
fsubrs
add
jno
aam
mov
dec
mov
mov
stc
cs
cld
pop
pop
test
rorl
sub
mov
xor
add
test
adc
leave
sahf
xchg
add
pop
dec
add
lret
jle
pop
lcall
or
call
je
fnstenv
mov
fstl
enter
ja
add
movsl
push
add
pop
daa
xchg
pop
and
mov
or
add
fs
aas
pop
lods
add
filds
or
sub
out
xor
mov
outsb
sbb
mov
push
push
sti
scas
daa
test
fsubrp
add
or
xchg
mov
and
add
pop
fldcw
arpl
push
cmp
jne
dec
add
mov
add
lods
scas
pushf
cltd
jne
cli
xchg
test
mov
mov
fcompl
mov
cmpsl
test
stos
leave
add
add
addr16
sbb
push
pop
dec
outsl
add
repnz
adc
or
xchg
inc
popf
inc
or
rclb
outsl
fdivrs
in
loopne
popa
add
add
and
and
push
dec
xchg
test
js
xorl
xchg
repz
jle
push
loopne
add
jnp
or
mov
dec
jmp
push
sahf
incb
rcrl
dec
mov
dec
icebp
push
test
lcall
cld
sub
pushl
inc
add
inc
cli
outsl
rcl
mov
cmp
xchg
jae
inc
lock
add
add
sbb
or
mov
inc
in
inc
test
jae
add
add
xlat
sbb
cwtl
add
out
jbe
test
mov
leave
push
rol
stos
mov
push
add
or
add
or
add
movsb
add
push
and
push
lcall
iret
mov
sub
add
daa
outsb
test
scas
fbld
mov
xchg
imul
mov
mov
lcall
movsb
filds
add
add
and
add
or
and
out
add
rcl
and
rorl
mov
mov
int
decb
cltd
add
inc
lret
add
sbb
ja
int3
pop
add
std
aad
jge
add
push
add
add
stc
lods
ss
push
mov
add
add
add
fildl
ja
mov
or
xor
pop
jnp
call
xlat
jo
add
pop
jmp
sbb
cmp
mov
cmp
sbb
cmpb
mov
or
fcoms
loop
pop
and
jmp
sub
mov
iret
push
outsl
aad
add
movb
add
pop
pusha
incb
out
xchg
mov
ljmp
int
sbb
pushf
imul
inc
adc
test
xor
repnz
jmp
xor
lret
ret
add
mov
scas
rolb
lock
mov
clc
popf
ret
dec
or
push
sub
enter
adc
mov
dec
mov
push
add
mov
add
xchg
icebp
jp
push
jmp
test
inc
mov
add
shl
cmp
imul
jmp
out
shl
in
loop
inc
jb
push
lds
outsl
jo
pop
jecxz
aad
testb
cmp
add
mov
sbb
cltd
ja
and
inc
mov
test
outsl
add
xchg
out
add
inc
push
fadds
sub
mov
pusha
inc
or
aaa
push
mov
rcll
jo
xchg
pop
movsl
subl
lret
mov
pop
jl
roll
dec
enter
push
pop
sub
add
flds
mov
jno
rcrl
jge
xor
mov
shll
or
sbb
mov
push
ljmp
ljmp
mov
movl
add
push
test
test
incb
test
stos
ficoml
xor
jp
insb
cltd
mov
repz
inc
cmp
shrl
xor
and
mov
mov
fs
int3
out
das
sarb
add
shrb
out
clc
xor
cmp
pop
inc
addb
inc
addr16
hlt
add
fcomps
mov
stc
imul
and
cmp
add
pop
xor
push
mov
fcomp
jg
test
jo
ror
adc
negb
in
add
pop
repz
into
cli
je
inc
add
add
jo
mov
mov
in
lea
mov
xchg
mov
push
inc
arpl
xchg
in
mov
jle
scas
mov
add
fstp
and
sbb
or
mov
mov
add
cld
test
fldenv
adc
dec
mov
pop
or
mov
out
mov
pop
iret
rcrl
pop
ja
inc
in
rorb
or
data16
test
mov
xchg
pop
lret
daa
pop
push
ljmp
lods
jle
mov
dec
adc
aas
add
inc
inc
out
mov
sahf
das
lods
mov
add
pop
mov
icebp
inc
or
mov
outsb
pop
arpl
mov
lret
daa
cs
insl
lret
push
ss
gs
or
popf
add
call
fldenv
leave
push
and
div
es
mov
and
xchg
stos
iret
add
roll
mov
mov
mov
pop
pop
mov
bound
inc
add
arpl
fs
dec
mov
sahf
xlat
xor
mov
mov
jne
inc
jbe
mov
fisubrl
inc
add
mov
sub
push
lods
shlb
adc
movsb
outsb
mov
leave
test
jb
js
add
lea
filds
cmp
xchg
sub
lahf
in
fwait
pop
and
in
adc
sub
lods
mov
mov
cmc
stos
addb
inc
mov
and
and
inc
mov
shr
sbb
cmc
inc
mov
push
xchg
mov
lock
inc
push
inc
fbld
lret
pop
xor
popf
and
hlt
sarb
cwtl
lcall
in
dec
cltd
fdivl
in
addb
outsb
add
cmp
push
add
lret
add
jge
mov
std
add
mov
xor
xchg
xchg
mov
arpl
mov
in
lahf
xchg
xchg
leave
push
xor
add
cmpsb
dec
ds
mov
add
add
xchg
or
sub
mov
leave
ja
sbb
cmp
jns,pt
xor
sbb
stos
xchg
aad
pop
cmp
xor
xchg
or
add
sbb
inc
add
sbb
jno
and
pop
inc
lret
add
bound
mov
adcl
jge
fldt
sbb
outsb
lahf
aam
jl
mov
adc
test
dec
push
out
cmp
outsl
cwtl
ljmp
add
test
call
in
in
inc
jle
adc
mov
mov
mov
cld
push
adc
sub
call
push
fisubrs
jle
jg
add
push
enter
imul
fbstp
xor
xchg
jge
add
lods
dec
add
nop
cmpsl
sbb
or
pop
jbe
inc
stos
and
aas
aam
imul
mov
push
outsb
repz
mov
dec
add
imul
daa
lret
insl
add
adc
pop
pop
add
test
mov
add
push
leave
repz
sarl
mov
mov
adc
aaa
out
in
fstps
xchg
aam
inc
addb
cli
mov
fildl
inc
shll
outsb
loope
adc
or
fdivs
dec
imul
xchg
xor
adc
std
mov
xor
mov
lahf
jno
or
shll
stos
popa
or
add
dec
enter
xchg
sbb
fcom
ret
pop
ret
test
add
add
add
incb
inc
add
or
ret
lcall
lret
hlt
insl
stc
subl
lds
push
inc
repnz
xchg
enter
pop
cmp
or
data16
mul
test
lods
inc
rol
push
pop
movl
popf
xor
pop
mov
add
mov
and
insb
jnp
ret
add
pop
imul
movsl
aam
xor
cltd
mov
jno
aas
push
dec
mov
je
add
mov
add
dec
or
cmp
xchg
inc
adc
jnp
fiadds
lods
mov
and
mov
add
jge
in
mov
insl
or
xchg
add
in
outsb
push
outsb
outsl
lea
inc
movsb
jl
push
insb
call
inc
sub
mov
mov
pushf
jge
add
icebp
enter
ret
pushf
fst
stos
push
scas
in
dec
jle
inc
imul
cltd
mov
or
ret
fimuls
pop
xor
add
fimuls
add
dec
add
mov
stos
lods
add
cmp
pop
xor
xchg
add
add
dec
daa
inc
sar
stos
add
or
testb
les
into
jb
and
add
sbb
stos
cs
rcrb
jno
xchg
xchg
sarl
inc
mov
paddw
mov
lds
movsb
std
mov
movsb
push
jg
sbb
int3
add
xchg
add
lret
jns
pop
daa
push
or
add
adc
pop
mull
paddsb
sub
add
push
lahf
inc
in
add
stos
sbb
ljmp
mov
mov
popw
test
loop
fsubrs
divl
jno
pop
das
psubusb
add
inc
sbb
cltd
push
dec
fwait
push
fisubrl
lods
in
frstor
lret
jbe
fsubl
inc
cmp
out
adc
popf
xor
pop
jo
loope
xchg
and
jne
loop
movsl
add
mov
fnstenv
stos
or
pushf
jmp
gs
cmp
movl
xchg
fcomip
in
pop
test
add
rol
mov
int3
test
movsl
sub
clc
lds
cmp
add
push
out
push
xor
or
jb
fwait
sbb
push
dec
xchg
nop
iret
xchg
sar
mov
jecxz
jg
rolb
add
ficompl
xchg
pop
sbb
out
add
adc
pusha
xor
rolb
lcall
frstor
std
cwtl
out
lock
loop
push
lock
jns
inc
adc
pop
add
add
fs
out
fwait
mov
aam
stc
rorb
sti
fnstcw
out
imull
aad
lea
add
sbb
or
icebp
add
fildll
adc
cmp
pop
add
sti
addr16
insb
mov
sbb
mov
shrb
sarl
add
mov
fcmovu
loope
movsb
adc
rolb
xor
mov
pop
push
or
add
lret
dec
mov
lock
and
xchg
or
adcb
and
leave
mov
shll
add
dec
pop
add
mov
jmp
add
xchg
adc
jno
das
sub
pop
add
sub
clc
stc
mov
mov
and
sbb
inc
data16
mov
repnz
nop
push
stos
outsb
add
push
icebp
inc
mov
xor
arpl
add
jns
sub
lret
sbb
and
adc
jbe
leave
arpl
hlt
int3
xchg
dec
movsl
movl
adc
lds
nop
add
mov
loopne
mov
mov
in
add
aad
pop
inc
add
jae
mov
cmp
pop
lods
or
sbb
aam
xor
adc
test
sbb
xchg
fmul
sti
add
enter
movsb
xchg
sbb
mov
addl
lods
fstpt
int
push
pop
lds
enter
lods
adc
push
or
ds
lcall
cli
add
hlt
inc
and
fstps
clc
mov
dec
add
movsl
cmp
into
fsubp
add
jno
bound
sahf
xor
cmpsb
cmp
jne
xchg
add
aam
xchg
xchg
cmp
push
lods
add
fdivrl
mov
mov
jo
dec
sar
pushf
pop
push
add
rorb
lret
sub
push
xor
movsl
jle
test
pop
xchg
add
test
sub
push
je
scas
push
fstl
and
test
add
adc
add
shll
jne
or
out
xchg
into
sub
out
push
push
in
sbb
cmp
fadds
popa
push
cld
jb
dec
mov
gs
pushf
push
insb
mov
rolb
into
mov
add
fisttpl
push
mov
add
push
stc
loop,pt
sub
add
xor
push
ficoms
jmp
sub
dec
mov
mov
add
add
cmp
call
push
dec
rolb
sub
hlt
mov
in
add
jge
idivb
in
xchg
jbe
ja
mov
movsl
std
or
xor
add
add
or
cmp
inc
jle
es
ljmp
pop
jle
stos
adc
mov
push
orb
xchg
icebp
add
add
xor
dec
stc
sbb
inc
add
scas
dec
cmp
push
add
inc
inc
cmp
push
iret
cli
loopne
mov
add
push
fwait
push
add
xor
orl
xor
add
and
jo
leave
mov
ja
xor
fildll
jb
inc
cmp
add
inc
jge
pop
sub
mov
inc
imul
mov
scas
jae
push
lea
mov
je
movsb
test
pop
adc
mov
mov
xor
sub
inc
mov
shlb
cmp
jmp
fsubrl
ficomps
mov
fstpt
ret
cld
xchg
mov
je
pop
in
xor
ficomps
add
cs
cmp
out
fidivs
popl
nop
cmp
out
and
push
add
sbb
dec
jmp
incl
in
jl
adc
in
in
add
aad
sub
mov
add
pushf
out
jl
movb
push
lcall
add
lret
sbb
clc
add
jne
jne
add
mov
addr16
insl
popa
inc
add
ret
mov
imul
inc
test
xchg
aam
add
inc
mov
rorl
pop
daa
push
xchg
lret
cmp
rolb
adc
rolb
imulb
add
lods
test
cli
or
lock
xor
push
test
add
jp
mov
pop
das
sub
or
add
add
push
ss
roll
jb
xchg
mov
and
testl
cmpsl
iret
imul
fiaddl
fwait
sahf
push
lret
arpl
ret
pop
pop
repz
repnz
jp
mov
fdivl
sbb
push
mov
ja
jge
sahf
and
mov
jp
xor
lcall
jo
popf
adcb
add
loopne
push
fnstcw
cmp
aam
pop
mov
add
jo
ss
push
push
out
push
dec
test
sbb
xchg
and
add
notl
mov
ret
shl
adc
and
sub
cs
into
rolb
xor
mov
pop
add
ret
xchg
cli
sbb
pop
int3
test
inc
shrl
in
jns
dec
dec
cmpsb
add
daa
ds
pop
jl
in
outsl
pop
and
sub
inc
sbb
es
lds
hlt
outsl
inc
mov
lret
cmpl
call
pop
mov
jo
or
fcomps
xor
cmc
xchg
sahf
dec
mov
cmpsb
movsl
scas
fisubrs
bnd
pop
hlt
rdpmc
add
cmc
sbb
add
fisttpl
add
add
or
mov
adc
pmaxub
sbb
inc
inc
jp
js
cmpsb
cmp
sbb
ret
repnz
mov
push
addb
adc
imul
push
lods
stc
jae
imul
sub
and
sbb
and
cli
scas
and
push
inc
mov
mov
and
cmp
sbb
aad
loopne
in
addl
pop
in
scas
mov
dec
and
pop
mov
stos
cmp
dec
dec
push
mov
add
iret
pop
sub
and
inc
out
cmp
into
je
sbb
add
jo
xchg
xor
mov
movapd
lds
inc
cli
add
or
icebp
add
fildl
lret
add
xor
imul
inc
stos
fcoml
mov
or
jge
repnz
jl
push
cmp
rorl
pop
sbb
pop
cmp
mov
dec
in
inc
pop
add
les
mov
ja
mov
sbb
push
add
inc
or
lds
shrb
nop
stc
sahf
mov
or
fnstcw
fidivrl
iret
pop
adc
popf
sub
and
test
xor
fwait
dec
cmp
jb
and
or
mov
dec
add
xor
add
mov
pusha
add
andb
ja
outsl
xor
cmc
or
mov
mov
int3
push
das
dec
loopne
pop
or
mov
popf
mov
lret
mov
add
repnz
mov
jg
enter
and
sbb
nop
add
rclb
inc
or
out
out
add
add
mov
data16
mov
add
cmp
mov
nop
mul
mov
sbb
mov
je
mov
cmp
mov
out
add
fnstsw
addr16
dec
or
jg
and
aaa
add
test
mov
and
icebp
jecxz
out
and
lret
mov
pop
push
out
int
or
imul
jle
sub
mov
stos
mov
and
aad
loopne
xor
pop
mov
shl
cmpsb
jns
cmc
inc
enter
add
out
lahf
push
and
sbb
add
add
sbb
clc
xor
push
push
mov
or
lret
pop
cld
int3
inc
lret
cmpsl
xor
mov
repnz
add
and
mov
xor
outsl
sub
das
mov
cmpsb
add
test
lods
push
into
loop
mov
pop
inc
dec
jo
int
sub
inc
add
jnp
push
stc
dec
jle
popf
and
or
mov
push
push
fs
arpl
lds
sub
test
xchg
testb
imul
scas
fcmovu
jae
jl
dec
aas
dec
stos
add
shl
pop
inc
aam
sahf
add
enter
pop
shl
ljmp
das
pushf
notb
jnp
or
xor
xor
movb
ret
out
push
push
inc
addr16
adc
cmpsl
sub
add
mov
pop
add
in
fucomp
pushf
cs
adc
cli
fwait
inc
xchg
xor
stc
ret
and
arpl
movsl
call
add
ficoml
xchg
pop
decb
pop
push
loopne
fcompl
dec
sahf
sbb
jno
mov
add
lock
mov
xchg
sub
pop
cmpsl
loope
sahf
jmp
mov
sub
xlat
movsl
push
mov
test
or
lds
das
sub
push
push
xchg
pop
mov
push
aam
mov
das
inc
mov
ds
and
push
jbe
fs
and
dec
mov
ret
xchg
insl
add
imul
add
mov
enter
lcall
inc
rolb
sti
sbb
xor
mov
clc
sbb
leave
loope
add
sub
cmp
push
pop
or
add
inc
fidivs
xchg
pop
insb
data16
pop
xchg
pop
sub
daa
push
das
add
adc
leave
xorb
aad
cmp
clc
and
add
xchg
sub
jae
add
dec
push
int3
adc
push
lea
filds
add
fistpll
mov
out
js
int3
outsl
push
add
lret
and
or
cmp
jnp
jns
mov
adc
dec
jne
add
mov
dec
inc
mov
addb
dec
push
lds
arpl
push
xchg
inc
add
add
add
xor
ss
movl
ja
add
pushf
xor
fstl
cltd
xchg
addb
add
xor
popf
sbb
ja
leave
je
out
and
adc
pushf
je
adc
andb
stos
mov
add
sbb
xor
jae
int3
cmc
xchg
cli
jo
mov
incb
sbb
or
imul
cwtl
daa
sbb
add
pop
sbb
cmp
jo
or
xor
add
sbb
ljmp
ret
test
and
add
add
add
enter
nop
dec
popf
add
addr16
sarw
fstp
scas
pop
lods
or
xchg
mov
aam
dec
add
xor
sbb
andl
mov
mov
add
stc
jo
pop
in
out
add
ret
or
add
pop
lock
adc
and
push
jb
inc
mov
or
adc
cwtl
jbe
pop
and
stos
lret
lcall
into
int
fiaddl
bound
test
mov
stos
pop
lock
add
rorb
insb
adc
in
jmp
add
cmpsl
jne
outsb
pop
in
sti
pop
add
add
ficoms
ljmp
dec
cmc
add
mov
enter
lock
aam
or
pop
ds
cli
cltd
add
add
inc
cld
inc
add
addl
jl
cmp
cli
lret
es
sub
movsb
xlat
push
rclb
imul
ds
adc
std
insl
jb
push
pop
outsb
push
push
ret
mov
and
mov
loopne
and
sbb
mov
insl
cmp
sub
popa
xchg
add
sub
rorl
sbb
out
push
sub
out
scas
inc
mov
mov
mov
mov
int
cli
scas
leave
mov
andb
fwait
cmp
shrb
inc
in
or
push
cli
add
leave
add
cmpsb
inc
push
fmuls
testb
add
cld
adc
lods
and
cmpl
es
adc
add
cmpsb
fs
fcoml
mov
sub
add
add
lock
xchg
jnp
adc
mov
movb
push
cmp
cmp
and
push
push
mov
pop
test
add
bound
ficoms
mov
fdivrp
mov
leave
popa
xor
jecxz
iret
ret
inc
add
addb
cltd
push
add
jp
mov
jmp
ret
cmp
shlb
sbb
aam
jnp
add
ret
or
out
xchg
xchg
fstl
push
sbb
ljmp
cmp
lahf
repz
notw
add
rcrl
out
jb
xchg
mov
mov
and
nop/reserved
sti
mov
jle
push
jge
movsl
push
mov
js
test
scas
push
sahf
inc
push
push
xor
sub
xor
subb
xchg
pusha
hlt
mov
nop
xor
sub
pushf
test
repz
or
push
mov
xor
xchg
sahf
sbb
std
adc
jl
push
jg
jle
pop
mov
and
xchg
idiv
add
add
cmp
mov
jne
add
or
rclb
cmp
sbb
fists
or
pop
inc
jecxz
aaa
mov
gs
in
push
sub
rcr
sub
loop
or
jno
inc
add
jo
cmp
pushf
push
cli
aam
jecxz
stos
test
push
push
add
cwtl
loopne
pop
xor
jbe
add
ret
push
adc
add
std
test
lcall
add
dec
or
ss
mov
aas
in
inc
in
inc
aad
cmp
push
out
mov
fldl
test
repnz
leave
in
jecxz
dec
call
jge
sbb
scas
xchg
mov
insl
repnz
repz
imul
lods
fmull
ds
nop
hlt
pop
je
jp
mov
add
sbb
daa
adc
add
subb
inc
nop
mov
lea
in
jp
or
aam
and
add
sub
add
dec
repz
and
jecxz
jl
test
data16
xor
aad
sbb
in
imul
dec
fistpll
inc
and
cli
cli
mov
add
or
jmp
mov
jmp
inc
jecxz
test
dec
das
ss
fwait
mov
arpl
push
cltd
cmc
jb
inc
out
scas
cmp
push
into
dec
and
dec
or
test
push
pop
fwait
cmp
xlat
sarl
addb
add
add
add
inc
outsb
lcall
inc
add
insl
push
ja
xchg
and
movsb
fdecstp
aam
jae
add
mov
add
add
bnd
mov
xor
xor
cmc
lcall
inc
lds
push
test
adc
fdivrs
xor
jns
cmp
das
inc
cli
jns
or
pop
dec
add
sbb
add
sbb
adc
push
pop
arpl
or
add
and
jecxz
dec
ret
mov
mov
mov
jbe
or
and
fsubp
mov
xchg
mov
inc
add
inc
sub
and
xchg
sbb
es
es
mov
stc
xchg
cmp
lods
pop
test
add
mov
cmpsl
xchg
out
iret
loopne
repnz
jmp
sahf
test
ffreep
xor
xor
jo
jp
mov
add
add
mov
popa
jp
sub
jmp
fnstenv
fadd
add
fisubs
in
push
aas
dec
lret
imull
hlt
lahf
and
inc
fnstenv
sbb
in
add
sbb
add
fisubs
push
mov
orb
or
adc
imul
movsb
push
add
ss
add
xorl
test
adc
addr16
mov
rcrl
xorl
push
cltd
jbe
xor
stos
inc
xchg
jecxz
data16
stc
sbb
dec
movb
or
xchg
sbb
sub
inc
jbe
or
aam
jecxz
incb
das
xor
lods
dec
lock
lcall
add
cmpsb
add
stos
or
dec
fld
and
push
gs
add
mov
lds
in
jo
or
es
mov
mov
push
sub
add
and
inc
xchg
sub
sahf
add
mov
add
add
shll
cs
dec
mov
or
pop
lea
cwtl
rcll
flds
jg
into
sbb
and
lods
cmp
cmp
roll
add
mov
in
out
rcrl
xchg
adc
cld
mov
jns
xchg
ret
shll
or
inc
decl
push
push
lcall
dec
sbb
mov
loopne
sub
pop
setb
add
add
cmp
loope
mov
inc
roll
scas
sub
xorl
mov
xor
int
sub
xlat
adc
sbb
cli
add
mov
pop
fsubrl
and
xor
rclb
int
sub
cmc
add
insb
jmp
pop
imul
call
not
push
mov
add
data16
xor
cmpsl
adc
xorb
inc
outsb
sub
add
fcmovnbe
dec
sbb
repnz
mov
inc
scas
mov
mov
xor
hlt
cmp
dec
sub
add
adc
mov
push
pop
dec
mov
xchg
fs
or
cmp
rorb
pop
and
cmp
pop
inc
dec
jnp
aaa
add
push
jnp
mov
cmpsb
mov
mov
sbb
into
add
fildl
sti
movsl
clc
add
xchg
pop
jo
mov
incl
js
loope
fidivl
dec
lock
insb
andl
addr16
or
push
out
jns
aam
in
sahf
cs
mov
popa
cmp
cmp
xor
or
sahf
jecxz
repz
xchg
push
cmp
push
mov
loopne
test
sub
add
sub
and
pop
xchg
pop
pop
lock
lgs
gs
or
mov
push
inc
add
rolb
pusha
pop
js
out
mov
add
push
add
xchg
and
xchg
push
jae
cmp
fcomps
andb
xchg
push
pop
and
push
add
aaa
add
and
insb
pushf
mov
sbbl
push
test
and
add
out
loop
adc
std
mov
mov
test
and
mov
sti
jns
into
dec
repz
int3
mov
flds
cmp
jne
data16
lods
lods
in
in
sbb
xchg
xchg
mov
sub
stos
xchg
dec
mov
pop
mov
mov
add
push
add
push
inc
movsb
mov
mov
jo
mov
rclb
add
sbbb
loop
pusha
add
pusha
jle
xor
and
xchg
testb
mov
jns
call
popf
add
push
ret
dec
leave
out
bound
add
xor
lahf
jne
pop
div
adc
xchg
cmc
lret
xor
jbe
cld
dec
in
fisubl
add
loope
movsl
dec
xchg
mov
in
lods
dec
xchg
xor
adc
sahf
add
add
dec
and
repnz
and
movsl
cmc
adc
or
out
adc
outsl
popl
scas
mov
jle
faddl
out
or
fcmovnbe
add
jns
inc
daa
aas
mov
add
push
movsl
ds
iret
ja
loopne
dec
add
pusha
add
push
int
fsubrs
or
int
and
add
mov
fldenv
stc
and
out
add
adc
movsb
inc
xor
add
sbb
lea
inc
bound
dec
fstpt
add
addl
push
add
test
and
add
rcrl
add
sub
js
lcall
lods
xorl
inc
in
movsl
roll
daa
add
dec
push
jecxz
add
std
jg
jb
xorb
cmp
add
jb
pop
ja
sub
rcll
mov
add
sbb
add
mov
nop
icebp
push
sub
add
in
mov
mov
int3
mov
mov
or
movsb
cmp
push
add
mov
outsl
test
int
imul
inc
dec
test
or
hlt
stos
aaa
jb
imul
inc
jl
call
shr
jg
cwtl
stc
jnp
add
aam
mov
mov
scas
pop
mov
test
xchg
testb
pop
mov
daa
xchg
xchg
outsb
add
iret
nop
add
iret
sbb
movsl
div
and
pushf
sub
add
sahf
loope
ljmp
int
mov
les
add
ss
leave
fdivs
ljmp
add
pop
ret
or
outsl
lods
mov
sub
xor
jg
testb
cltd
add
jbe
xchg
sete
xchg
push
add
add
ds
shrb
push
add
add
sahf
int
mov
push
or
add
xchg
xchg
jl
ss
and
ss
jmp
push
add
sub
add
loope
xor
xor
es
cld
or
jl
addr16
add
add
add
repz
daa
dec
addb
imul
sbb
adc
popa
pop
loopne
std
pusha
insb
xor
jno
adc
dec
shrb
adc
loop
rclb
daa
add
lods
fldl
add
in
jp
mov
add
jns
sbb
imul
dec
loop
scas
add
xchg
jo
mov
outsl
adc
or
out
cmpsb
sbb
insl
movl
adc
push
dec
or
add
push
lods
test
pop
push
add
sbb
ja
mov
and
bound
filds
cltd
jne
pop
in
out
je
aas
pushf
cltd
je
movsl
shlb
or
sbb
add
inc
and
cmp
pusha
add
xor
addl
jo
add
test
imull
repz
faddl
xor
daa
push
aaa
je
sbb
dec
ret
push
inc
jmp
push
loop
sub
add
jne
add
sbb
ljmp
lods
and
ficomps
dec
lret
mov
adc
dec
jne
je
mov
loope
in
add
add
enter
inc
add
add
pop
dec
mov
mov
insl
xor
xor
xchg
test
adc
lods
sub
movsl
aas
sbb
lods
cmpsl
sbb
add
add
pop
fs
mov
jns
add
sub
sub
jb
jns
pop
push
das
mov
cwtl
out
test
inc
inc
push
int3
add
dec
xchg
add
cmp
cmp
cld
lret
fucomip
lahf
jle
dec
jmp
push
in
mov
into
xchg
sbb
cmp
shll
adc
pop
add
jno
push
mov
movsb
and
pop
scas
xchg
mov
fdivl
insl
aas
push
sti
cwtl
jne
out
mov
ret
jne
cmp
sbb
addl
cmp
lahf
mov
jp
add
add
and
jo
mov
xlat
sbb
pusha
cmp
mov
mov
int
adc
xchg
iret
jmp
pop
add
mov
cmp
addr16
xchg
jmp
add
pop
clc
sar
imull
add
aaa
cld
mov
xor
xchg
cmpsl
add
add
mov
pop
sbb
xor
push
sub
inc
ja
sbb
movsl
mov
pushf
nop
sub
andb
pusha
out
pushf
mov
aad
shl
iret
cmp
es
xor
xchg
push
call
xchg
out
imul
lea
repz
popf
add
out
inc
sbb
pop
call
out
xor
add
nop
add
adc
pop
mov
dec
hlt
inc
pop
js
test
mov
decl
dec
lea
adc
xchg
test
push
das
aas
pop
shl
pusha
dec
cmp
ljmp
or
dec
sbb
sub
aaa
leave
jle
les
or
push
dec
iret
mov
jo
add
das
icebp
xchg
or
int3
jp
or
cwtl
xchg
cmp
dec
fmulp
and
pop
push
add
mov
fadd
xor
add
xor
mov
sub
das
je
mov
mov
in
shrl
fcmovnb
jge
lea
addl
divb
in
dec
jnp
popa
xchg
adcb
add
mov
add
mov
aas
dec
jmp
cmp
dec
bound
add
dec
shll
popa
or
xchg
fcomps
call
mov
mov
nop
mov
mov
pop
jmp
sbb
shll
pop
scas
ss
icebp
push
arpl
xor
mov
add
in
jne
sbb
aas
shll
lock
pop
cli
hlt
sub
pop
scas
mov
stos
mov
stos
push
fidivrl
loope
mov
outsl
int
ret
fiaddl
jecxz
fnstsw
cmpsb
or
push
ds
push
mov
iret
push
sbb
adc
xorb
mov
mov
add
or
push
dec
mov
into
pusha
gs
sub
pop
and
out
pushf
mov
stos
out
add
inc
scas
inc
and
dec
jp
add
push
fwait
push
add
repnz
cli
cmpsb
repz
mov
sarb
jne
mov
cmp
daa
adc
popf
dec
xlat
push
popf
sbb
mov
push
add
outsb
push
or
out
mov
aad
mov
add
test
movsb
mov
sbbl
pop
jno
frstor
add
adc
sti
lcall
mov
and
fwait
inc
dec
mov
lock
sbb
or
push
ljmp
mov
cmpsb
inc
sub
add
cmp
or
mov
icebp
add
mov
in
call
push
add
pop
addl
cmp
ss
test
xchg
imul
jecxz
push
ds
or
loopne
jno
mov
dec
adcl
cmp
sti
cmc
lds
inc
sbb
iret
or
popa
add
pop
jp
mov
push
add
xor
adcb
mov
notb
push
adc
fstps
push
movnti
mov
jno
add
out
xchg
insl
dec
add
aam
sub
add
pop
add
mov
sub
sbb
ficompl
mov
or
mov
cmc
hlt
popa
paddb
cmp
js
arpl
add
call
xchg
icebp
setg
lds
jbe
cmp
lcall
xchg
jnp
in
jo
mov
in
fwait
push
push
sbb
call
push
ficoml
shll
add
stos
inc
xlat
fdivl
mov
sub
inc
test
testl
adc
cmc
rorb
adc
fisubrl
gs
ljmp
mov
je
js
pusha
push
push
and
cs
jg
add
add
mov
adc
lock
popa
mov
movsl
faddl
cmpsb
dec
fbld
add
rep
scas
add
push
dec
and
xchg
mov
dec
mov
or
ja
mov
mov
mov
or
adcl
jo
add
fdivr
cltd
push
and
fsubs
test
cmpsb
out
mov
mov
sub
lret
inc
stos
mov
loopne
scas
cmpsb
out
mov
icebp
jbe
frstpm(287
insb
mov
mov
dec
jmp
sbb
test
add
call
xlat
mov
mov
add
mov
add
call
add
popa
loopne
sarl
outsl
pop
cs
ficoml
cmpsl
mov
icebp
lods
inc
mov
jbe
scas
mov
sub
adc
mov
fwait
add
mov
pusha
stc
daa
mov
lret
mov
adc
pop
repz
mov
cltd
shlb
add
add
fisttpl
test
outsl
fsubl
mov
fistps
dec
ficoms
add
add
add
dec
adc
dec
pop
pusha
inc
lods
push
xchg
add
and
addr16
mov
jns
push
movsb
mov
fdivrp
testb
add
ret
pop
into
sbb
cwtl
add
add
sbb
cmpsl
popa
mov
or
add
xor
pop
mov
movsb
in
addr16
push
inc
add
sub
xchg
mov
adc
scas
push
jnp
iret
push
jb
aaa
add
cmpsl
repz
jae
idiv
add
push
mov
stos
xchg
cmp
popa
and
mov
popf
sub
mov
pop
stos
enter
xlat
cmc
add
leave
rolb
addl
jge,pt
add
or
nop
push
add
xchg
jne
dec
add
add
adc
out
jb
inc
pusha
cmp
outsl
stos
pushf
push
loope
mov
add
add
add
shlb
cwtl
cmp
aaa
adc
add
xchg
add
cmpsb
sbb
jbe
push
mov
or
int
andb
fcompl
stc
fidivl
add
mov
add
test
gs
mov
mov
mov
sti
jae
jecxz
xchg
inc
add
dec
shrb
test
cmc
arpl
divl
xchg
hlt
mov
and
inc
cmc
inc
sbb
je
xchg
sbb
push
xor
sbb
add
xor
sbb
add
clc
add
add
ja
push
or
nop
sbb
mov
dec
addb
lret
mov
push
push
add
xor
add
jnp
ss
bound
std
jmp
mov
add
xchg
add
repnz
aaa
pop
inc
push
addr16
sahf
xchg
arpl
imul
cmp
push
jp
shll
fwait
add
adc
push
outsb
int
call
out
mov
jmp
es
fmuls
into
add
mov
sbb
sub
xor
jle
sub
lock
or
cmp
xor
out
add
imul
iret
sub
pop
xchg
dec
mov
daa
sub
xchg
pop
fdivl
sbb
jae
adc
lock
jae
cmp
cmp
and
adc
shl
shll
add
add
jae
jecxz
lds
or
popa
gs
sub
fsubr
push
mov
dec
mov
in
xchg
add
cltd
jge
adc
icebp
sub
cmpsl
int
outsb
add
xor
jecxz
inc
pop
xor
sbbl
sarl
jp
rorl
adc
jg
loopne
add
or
loopne
int
pop
mov
dec
cli
add
and
int
pop
jb
cld
add
adc
out
in
sarb
add
lods
pop
add
add
pushf
add
push
jbe
sbb
jmp
xchg
push
cmpsl
neg
inc
mov
mov
loopne
jle
sbb
pop
pop
ret
mov
push
verw
and
add
xchg
hlt
loop
fimull
push
and
cmpsb
xchg
insl
fwait
mov
std
sahf
sbb
xor
mov
cmp
in
jmp
out
das
adc
pop
push
pop
das
and
out
mov
jl
dec
inc
imul
add
out
add
arpl
pop
mov
scas
jecxz
nop
jbe
add
mov
add
in
xlat
and
or
je
push
add
dec
popa
aad
pusha
add
out
fidivrs
sahf
pop
cmpsl
jecxz
fs
es
jge
roll
mov
roll
rcll
dec
xor
and
dec
and
inc
dec
popa
xchg
mov
das
inc
mov
mov
add
mov
and
mov
inc
loop
push
loopne
cld
cltd
jmp
jmp
lea
sub
test
inc
xchg
sub
add
les
popf
push
xchg
xchg
add
cltd
add
ljmp
add
mov
cwtl
lcall
xchg
xor
sub
push
pop
fcmovnbe
divl
test
mov
xor
add
repnz
int
bnd
jp
push
add
pushf
pop
pmaxsw
mov
adc
enter
xchg
pop
add
testb
std
add
mov
sub
lahf
and
jb
movsl
movsl
jbe
add
xor
ljmp
pop
aam
and
std
sub
repnz
in
xor
leave
dec
int3
inc
mov
add
cmp
push
popf
add
add
jo
sub
add
testb
xchg
mov
sahf
testb
jg
lods
sbb
push
xchg
aad
push
dec
push
sub
adc
adc
jb
call
mov
sbb
test
jbe
add
add
inc
decb
in
cli
cltd
mov
insb
mov
daa
xorl
lods
add
aad
je
std
je
hlt
ret
push
mov
inc
add
mov
cmp
ret
scas
jp
jl
gs
sbb
leave
mov
fwait
ret
cmp
cmpsb
or
cwtl
inc
or
push
movsb
enter
inc
fdivr
inc
jecxz
add
push
loop
pop
andl
or
inc
iret
add
subl
ret
and
inc
rorb
call
aaa
xchg
mov
loope
xchg
dec
int3
or
jl
enter
cmp
mov
push
mov
das
movsb
adc
jl
mov
lret
cli
add
sub
cwtl
mov
mov
mov
pop
pop
insb
inc
test
add
lret
jecxz
outsb
notl
test
cmp
leave
add
inc
mov
filds
jno
dec
cmp
fwait
cltd
jae
add
inc
xchg
shrb
and
imul
call
das
add
mov
popl
iret
mov
push
sbb
dec
das
push
push
das
aad
sub
adc
adc
sbb
ja
jp
ljmp
sub
daa
fldl
cs
add
cltd
sahf
add
outsb
jne
xchg
outsl
inc
inc
cmp
pop
lods
dec
add
in
cmp
test
xchg
adc
sbb
mov
fidivs
xchg
xchg
xor
adc
fadds
pop
or
dec
lret
jbe
popa
push
lea
pop
stos
add
cmp
mov
and
scas
jnp
sti
insb
sbb
add
es
flds
fwait
mov
fbld
popa
stc
jo
inc
imul
sub
adc
sub
and
lret
in
push
add
dec
popa
xor
icebp
cmc
cmc
jecxz
insb
xor
add
test
inc
xor
lods
stos
in
inc
pop
ret
jns
pop
pop
add
sub
inc
scas
movl
mov
call
xor
add
add
inc
sbb
pusha
call
test
enter
fstp
mov
arpl
and
stos
xor
push
daa
lret
iret
dec
push
xor
mov
adc
dec
fldl
imul
sbb
or
xchg
push
arpl
add
stos
lock
mov
int
outsb
or
mov
push
stos
aad
stos
mov
push
mov
jle
xchg
jne
mov
mov
and
mov
inc
filds
popa
add
add
mov
sbb
and
jb
jne
ja
sbb
fiadds
add
xchg
and
insl
add
pusha
scas
xchg
xchg
notb
add
xchg
bnd
dec
mov
shl
out
cwtl
mov
gs
mov
and
imul
ja
cmp
mov
test
sub
popa
mov
lahf
sahf
mov
movb
push
add
mov
pop
js
cmp
push
cmp
xchg
incl
add
mov
rcll
gs
xchg
andl
gs
ficoml
lret
imul
push
sub
lret
aad
scas
mov
pop
loopne
push
inc
aad
or
andb
mov
mov
or
add
add
lods
mov
fnsave
dec
inc
xchg
ret
movsl
add
mov
and
movsb
lock
push
cmpsl
movsl
sbb
adc
xchg
and
xor
xchg
in
sbb
je
int
cmp
dec
cld
mov
stos
ret
pushfw
push
push
les
cmp
nop
xor
or
arpl
cmp
cltd
movsl
mov
movb
xor
jne
xlat
cmp
cmp
push
xlat
xchg
cltd
mov
fcomps
jl
ret
lahf
icebp
imul
std
aad
add
inc
mov
incb
fdivl
shll
push
jns
test
das
push
inc
cmp
push
xchg
mov
push
add
imul
xchg
rcll
lret
fcomps
xchg
in
jne
clc
repnz
subb
add
mov
dec
jl
push
jle
and
dec
dec
and
jae
into
adc
scas
jns
out
stos
add
leave
inc
sub
xchg
dec
adcb
pop
mov
fdivs
jno
push
bound
add
add
xchg
movb
stos
push
imul
add
mov
rorb
mov
pop
push
pop
fnstsw
inc
or
mov
in
dec
mov
call
lcall
insb
mov
imul
nop
cld
sbb
sbb
in
clc
inc
jge
scas
cmp
lea
aad
add
aaa
cmp
pcmpeqw
cmpsl
je,pt
cld
loopne
cwtl
inc
jns
push
and
pop
fdivr
pop
sbb
inc
pop
jae
cmp
add
dec
xor
push
jnp
test
xchg
in
pop
lock
rcll
in
jp
cs
xchg
fsubrs
cli
in
or
sbb
push
cmp
xor
data16
pop
add
repz
sahf
sbb
enter
adc
dec
cmpsb
or
or
cmp
clc
jae
mov
push
in
mov
flds
inc
pop
popa
daa
cmp
push
mov
mov
imul
gs
mov
add
test
inc
cwtl
loope
push
xor
call
push
cmpsb
add
scas
shrl
add
sbb
cmp
jb
test
add
fldt
add
add
pop
lea
sbb
mov
add
xchg
push
push
je
jge
ds
out
aas
cli
ljmp
jle
add
add
js
cmp
in
test
fbld
pushf
cmc
std
mov
pushf
inc
push
bound
shll
inc
sub
jbe
mov
push
rolb
inc
in
imul
jns
add
or
push
das
ds
pushl
jl
jbe
push
in
mov
rcrb
ljmp
lods
push
add
jg
push
pop
xor
aam
xor
stos
scas
add
cmp
pushf
call
pop
mov
dec
inc
ret
push
adc
add
push
xchg
cltd
ret
mov
subl
scas
xorl
sti
adc
enter
inc
cmpss
mov
scas
leave
cmpsb
aad
and
clc
fnstcw
dec
in
and
xchg
jecxz
adc
fisubl
mov
add
ja
cwtl
add
pop
ret
sub
test
push
mov
jg
lds
scas
adc
add
cld
outsl
cmp
lea
xchg
push
mov
add
mov
add
test
dec
add
loopne
cmp
jne
repz
sub
add
addr16
mov
aam
fwait
push
add
pop
arpl
jl
es
mov
push
and
dec
or
xchg
cld
sahf
add
and
xor
mov
mov
in
push
out
xor
in
add
mov
xor
mov
and
pop
lods
cmpb
adc
cmc
pop
adc
add
js
dec
fmuls
add
fwait
outsl
fsubp
jbe
inc
dec
iret
int3
in
cmpsl
pusha
inc
mov
dec
xor
filds
mov
xor
fcoms
cwtl
lods
fistps
test
xchg
mov
pushf
loope
cmp
dec
pop
dec
jno
push
pop
inc
test
out
mov
pop
cwtl
or
icebp
push
lds
aad
jg
adc
push
push
pop
or
dec
inc
cmp
xor
xchg
mov
cmovg
jnp
and
pop
fwait
add
sub
add
ja
jns
loope
out
mov
jbe
push
add
cmp
jmp
clc
out
imul
leave
jmp
push
lds
and
movsb
aad
push
inc
or
lret
repz
push
pop
sbb
fldl
jle
cmpsb
rorl
daa
repz
jae
lock
or
add
add
mov
inc
xchg
add
xor
add
mov
sbb
mov
dec
add
xor
pop
cmc
jl
scas
mov
ja
dec
jae
xchg
fstpl
push
inc
push
adc
jns
xorl
ret
adc
movsl
sarl
subb
add
sub
pop
add
cs
fstl
dec
movsl
movsl
add
add
pop
stos
jb
daa
fs
sbb
cmp
add
cmp
ficompl
or
add
pushf
add
mov
std
cmpsb
add
dec
xor
xchg
popf
mov
add
fwait
aaa
and
or
add
out
mov
push
sub
lods
jns
xor
dec
mov
inc
pop
or
adc
mov
arpl
pop
test
lock
adc
mov
and
jns
insb
pop
sub
enter
sub
add
push
add
xchg
or
mov
push
jl
sbbb
fsubs
pop
mov
or
add
inc
push
popa
mov
xchg
imul
ret
pusha
add
adc
mov
es
out
push
dec
fnstcw
iret
dec
mov
add
mov
aas
je
jge
pop
daa
push
insl
cmp
pop
sub
add
imul
sub
xchg
sub
aaa
mov
sarl
and
jo
xor
cld
insb
push
dec
mov
cld
sub
in
dec
dec
sbb
fcoml
movsb
push
push
push
movsl
xor
xchg
xchg
push
and
cmp
xor
add
ja
cli
push
add
pop
std
push
mov
dec
jl
stc
sahf
adc
xor
add
mov
call
add
lock
add
add
mov
mov
les
dec
das
cs
add
add
insl
icebp
add
add
gs
jp
cld
add
outsl
repnz
cmovs
ret
add
push
and
pop
lods
and
incl
repnz
dec
jp
test
push
lcall
push
add
pop
movsb
mov
jb
sar
out
add
mov
out
in
mov
adc
xchg
or
iret
pop
xorb
daa
pop
add
or
or
imul
add
incb
sbb
psadbw
sti
jecxz
mov
add
into
cmp
mov
inc
fwait
add
add
mov
and
add
add
xchg
andb
enter
cmp
xchg
fwait
lahf
and
sbb
cmp
add
sub
mov
pop
xor
icebp
mov
nop
add
inc
imul
and
decl
jge
add
xchg
push
or
cmpsb
imul
cmp
mov
loop
push
pop
fs
add
fistpll
cli
fidivrs
mov
cmp
in
popa
pushf
sbb
mov
test
add
push
inc
cmp
and
bound
pmaxub
add
outsb
into
in
pop
test
pushl
inc
add
ja
mov
mov
xchg
mov
dec
xchg
xchg
xor
add
xor
notb
dec
xlat
outsb
push
lods
adc
and
add
cltd
jl
cwtl
cmp
cmp
adc
xor
roll
movsl
lcall
adc
add
pop
in
fwait
cmp
sbb
ljmp
fs
jbe
inc
xor
mov
add
popf
mov
leave
jne
stos
and
into
cmp
add
ret
repz
inc
jg
inc
inc
mov
cmp
std
add
cwtl
mov
add
mov
or
dec
pop
aas
add
outsb
inc
pop
push
cs
xorb
lret
mov
lods
bound
add
test
xchg
cmp
pusha
jl
pop
mov
ret
lcall
pop
add
mov
int3
mov
scas
and
sbb
stos
out
ret
fsubs
insl
jb
xchg
or
outsb
test
xchg
mov
insb
js
push
lret
inc
adc
push
and
out
jp
jae
xor
lahf
dec
cltd
incb
mov
cmc
adc
and
stc
dec
xor
mov
dec
push
adc
sti
mov
nop
clc
inc
mov
inc
fsts
push
sub
aam
cmc
add
lods
mov
or
imul
dec
dec
xor
cmpsl
or
adc
add
inc
push
nop
mov
mov
mov
dec
imul
imul
and
cs
push
pusha
outsb
xchg
and
int3
cs
jmp
out
cmp
mov
insl
jnp
push
shl
add
and
inc
cltd
adc
jl
cmpb
mov
stos
data16
jo
mov
in
mov
jmp
jmp
insb
jecxz
cwtl
mov
jg
inc
imul
test
data16
pop
cmpsb
and
add
xor
jle
add
mov
dec
sub
ja
mov
lahf
mov
cld
pop
push
jae
in
adc
jl
sbb
bound
mov
jmp
adc
sbb
aaa
rol
aas
lods
rorb
inc
notl
push
and
ja
adc
in
addb
push
jno
add
loop
push
aaa
ljmp
aam
pop
xchg
cwtl
paddd
xchg
cmp
add
jb
xor
sbb
or
cmp
sahf
orb
das
adc
xchg
inc
mov
mov
inc
add
je
add
mov
outsb
xchg
fwait
inc
xor
mov
mov
dec
out
lret
lret
xor
pop
addl
mov
pop
stos
cwtl
popa
mov
mov
mov
jmp
add
add
popa
dec
mov
lcall
arpl
jne
push
or
adc
loopne
insl
xor
push
xor
and
mov
jl
inc
jle
push
imul
sub
sub
mov
ret
inc
mov
cmp
test
push
jmp
sbb
sbb
sbb
mov
add
push
outsl
incb
sbb
mov
jl
dec
add
xchg
xor
mov
fistps
mov
push
in
add
sub
dec
fsubrl
xchg
call
jecxz
fisttpl
cltd
xchg
aas
add
call
sub
add
add
adc
push
pop
pop
in
pop
push
dec
loope
lods
loop
roll
push
jp
into
mov
push
cs
dec
mov
cli
je,pn
int3
xor
fsub
mov
jnp
cmp
sbb
mov
mov
stos
sub
leave
xchg
xlat
cmpps
add
push
cwtl
jle
jne
add
add
leave
lds
pop
cmp
lcall
sarb
loope
mov
cs
cmp
sbb
jg
pop
loope
add
dec
stos
or
jnp
jne
in
xchg
aaa
and
outsl
dec
mov
mov
push
add
inc
add
addb
mov
add
je
add
ss
adc
scas
sub
sbb
movsl
mov
jp
fldenv
jmp
arpl
mov
add
xchg
dec
add
inc
inc
aaa
add
movsl
jbe
stos
sub
shrl
add
xlat
call
xchg
stos
lret
cmp
fs
mov
call
mov
mov
stos
sbb
testb
dec
xchg
pop
xchg
enter
xor
mov
lock
mov
shrb
loope
fcomi
imul
int
push
add
loope
hlt
push
es
ror
or
jl
sbbl
mov
or
das
mov
xor
lcall
inc
aam
sbb
pop
add
int3
inc
mov
cmp
fs
xor
cmovns
sbb
ss
add
movsb
pop
jle
insb
jbe
jecxz
dec
mov
sbb
sbb
xchg
and
stc
outsl
mov
mov
mov
pop
mov
fnstcw
add
sbb
outsl
xchg
or
add
mov
dec
adc
dec
and
cmp
lret
xchg
push
dec
push
cmpsl
add
rclb
jne
xorb
dec
div
mov
into
push
mov
xor
das
xchg
add
mov
sub
rcl
xchg
aad
push
mov
jp
lcall
setle
cmpsb
xor
cld
test
pop
movsl
inc
mov
pop
clc
push
scas
add
add
sbb
add
ss
outsl
std
sub
jbe
add
add
popf
add
test
add
out
add
cmpsl
add
sub
cmp
cmpsl
jmp
mov
jle
or
push
out
dec
pop
inc
pop
out
data16
mov
sub
jmp
rcll
pop
dec
pushf
inc
movsl
sbb
and
jl
mov
cli
mov
adc
dec
sbb
cmp
inc
lds
sahf
mul
add
stos
repz
cmp
mov
cmp
out
sub
out
add
adcb
add
push
rol
cmc
push
or
push
add
js
scas
jg
inc
movsl
lcall
daa
add
pop
and
insb
mov
or
call
cmc
mov
xchg
jo
xchg
xchg
lock
rcl
rolb
xor
lods
ret
push
pushf
enter
negl
mov
mov
fwait
xchg
and
mov
mov
push
xchg
pop
mov
stos
push
arpl
add
les
out
imul
jle
mov
dec
mov
jbe
mov
ss
dec
xchg
in
xor
mov
sub
pop
rorb
jns
andl
sbb
push
rcll
xor
and
push
or
out
aaa
fwait
dec
add
cs
mov
and
inc
add
add
xchg
xchg
inc
add
xor
mov
xorb
add
idivl
inc
pop
test
out
push
add
addb
add
mov
dec
stos
push
sti
inc
cwtl
cmp
pop
or
push
out
mov
add
ljmp
lahf
notb
ret
mov
add
psubb
pop
dec
cmp
xor
mov
outsb
sub
xlat
add
cmp
loope
push
jae
jmp
test
add
insb
add
call
add
add
pop
shrb
and
gs
clc
int
lcall
das
jg
out
in
aaa
scas
or
decl
mov
add
mov
sbb
add
jne
dec
xchg
cmp
jge
das
aas
push
xchg
rcrl
aas
adc
xchg
sub
bound
xor
or
inc
add
add
adc
mov
dec
adc
int
add
mov
cmovp
xor
dec
jmp
dec
xor
or
add
popf
daa
in
movsb
xor
lods
mov
xchg
arpl
add
fdivs
cmp
pop
dec
in
clc
push
mov
cmpsb
imul
jp
bound
mov
stos
sub
mov
add
sub
lock
loopne
repz
mov
add
add
pop
es
mov
xorb
jno
push
sub
add
stc
fdivrl
mov
xor
in
iret
add
popa
mov
stc
shrb
shl
pop
scas
fldt
mov
add
in
push
pushf
mov
int3
dec
sbb
mov
test
or
pop
add
lahf
push
int
cld
cld
mov
inc
adc
push
pop
xor
sti
mov
mov
pop
in
mov
adc
pusha
mov
add
int
mov
dec
push
testl
add
push
repz
pop
inc
jp
mov
add
test
loopne
cmp
ljmp
pop
mov
push
sti
test
adc
add
repnz
push
xchg
rcll
out
cmc
test
aaa
jne
sbb
jge
add
shlb
cld
sahf
push
ret
inc
or
call
cld
xlat
sbb
jb
add
negb
pop
pop
loop
cmp
repz
mov
jmp
inc
cmp
mov
pop
andl
aam
aam
fsubl
daa
dec
add
outsl
roll
mov
add
lods
push
add
mov
repnz
pop
das
jp
addr16
mov
mov
gs
filds
sbb
jp
cmpsb
call
push
jne
hlt
in
jnp
popa
add
add
sbb
or
xchg
cmp
scas
addr16
add
mov
imul
jmp
addr16
push
add
jecxz
lods
add
mov
jl
add
cli
call
out
in
mov
and
jne
add
call
addl
out
adc
add
push
out
add
pushf
cmpsl
mov
xlat
clc
imul
add
add
pminub
or
ds
add
sub
pushf
mov
out
add
dec
mov
inc
cld
gs
addl
mov
and
push
mov
mov
sub
imulb
mov
mov
xchg
ja
pushf
sahf
add
xlat
pop
push
out
inc
mov
add
pop
jb
xchg
loop
inc
mov
in
pop
add
lret
xchg
pushf
add
enter
add
outsl
test
out
int
inc
add
push
push
adc
push
xchg
cli
test
popf
adc
pushf
jb
nop
lods
das
add
or
cwtl
sub
xor
xorb
daa
xchg
cmp
push
inc
andb
daa
data16
pop
sbb
adc
and
in
jmp
jae
popf
inc
add
add
out
incl
add
xchg
ret
dec
add
aaa
rcr
push
jne
and
rcl
adc
mov
mov
lock
push
xor
and
inc
add
jl
sub
mov
pusha
xlat
pop
out
xlat
xorb
in
mov
pop
outsl
xchg
xchg
shrb
in
mov
add
push
pop
jnp
push
test
hlt
cmp
frndint
cmc
ljmp
jl
add
push
sbb
mov
bound
shrl
jne
lods
pop
inc
push
cmp
xchg
ss
mov
addb
les
dec
pop
add
mov
xor
dec
dec
xorb
aad
push
arpl
adc
mov
add
pop
add
in
inc
cld
add
int3
mov
js
movsl
stos
enter
add
in
or
lods
das
mov
add
lret
ffreep
mov
add
cmp
test
loopne
or
mov
and
test
pop
pushf
sbb
daa
rolb
cmp
lcall
repnz
pusha
icebp
out
mov
xchg
and
sub
inc
sbb
ret
xchg
mov
mov
subb
ret
std
pusha
sbb
xor
lret
pop
pop
sbb
jns
jle
jp
mov
bound
mov
push
jle
and
mov
xor
sbb
jb
mov
push
mov
add
cmp
dec
mov
lea
add
ds
aaa
cld
mov
shl
jo
mov
out
and
mov
push
shll
adc
popf
sub
addr16
dec
je
imul
and
dec
lea
mov
fistps
cmc
aad
loope
add
test
mov
add
mov
jo
sbb
addr16
stos
into
xchg
add
adc
jns
mov
xchg
push
add
mov
add
and
data16
mov
cwtl
aas
pushf
lock
das
xchg
inc
cmp
add
sti
add
ret
inc
mov
fldl
xchg
mov
lahf
jle
enter
je
push
fisubl
andl
mov
pusha
dec
or
add
insb
into
mov
popf
pop
into
push
add
lret
out
out
add
out
das
push
loope
add
jnp
ficoms
insb
lahf
add
dec
add
jno
cmpsb
xchg
test
cmp
dec
and
popf
out
add
out
lods
sub
adc
mov
ljmp
hlt
push
mov
dec
mov
lahf
or
add
push
int3
mov
cld
inc
push
xchg
ret
xor
popa
add
and
fcmovb
dec
bound
in
addb
cmp
jne
std
and
add
fmul
and
push
test
pop
mov
fisubs
enter
dec
out
jmp
push
dec
shl
lcall
sub
or
pop
add
xchg
in
pop
add
push
das
xlat
cli
adc
pop
pop
pushf
or
int3
fst
cld
mov
cmpsb
lods
call
sbb
clc
out
mov
or
xor
mov
cwtl
cltd
mov
push
out
imul
cmp
scas
pop
push
pop
or
mov
push
aaa
mov
mov
outsl
lret
scas
aam
pop
sub
or
mov
dec
into
fdivr
aas
dec
dec
push
xor
loope
inc
add
stos
shl
pop
add
or
add
push
rclb
imul
mov
inc
icebp
stc
cmp
mov
aam
hlt
xchg
or
mov
inc
out
sahf
inc
pop
aad
add
adc
hlt
add
inc
loop
push
inc
jbe
adc
xor
pop
and
imul
popf
add
loopne
lret
orb
mov
shrl
or
mov
jp
addl
pop
mov
push
xor
dec
mov
xchg
sbb
add
fs
fdivrl
push
clc
mov
inc
xchg
addl
xchg
add
stc
fwait
cmpsl
and
and
xor
in
jo
add
popf
sbb
cmc
dec
imul
pushf
add
fimuls
cltd
imul
sub
cmp
push
rcrl
mov
mov
inc
mov
xor
in
fwait
jno
mov
scas
cmp
out
lss
push
pop
jb
int
rolb
cwtl
dec
sbb
lods
insb
adc
pop
std
lea
push
adcb
or
repz
js
mov
mov
add
jo
add
add
shlb
xor
add
xchg
xor
lock
pop
add
add
loop
xchg
leave
mov
out
mov
mov
push
mov
cmp
add
add
pusha
adc
xchg
and
xchg
sar
cmp
inc
xor
dec
rclb
xchg
je
scas
jns
add
add
dec
add
fisubl
jo
sarb
les
jns
rolb
lea
lods
add
scas
or
fs
add
add
and
das
cltd
imull
inc
add
push
repnz
sub
out
aaa
dec
mov
and
scas
xor
jl
add
insl
dec
scas
jne
xchg
add
aas
outsl
lods
xchg
stc
lret
or
std
mov
add
and
aas
sub
fdivrs
cmpsl
pop
and
inc
in
roll
add
xchg
rorl
nop
fiadds
jno
pop
or
sbb
stos
repnz
ss
in
pushf
sub
call
movsb
roll
test
and
or
push
mov
out
jmp
mov
mov
sbb
stc
jg
xchg
outsl
mov
sub
into
cmp
xchg
in
sar
ds
jmp
xchg
and
cwtl
outsl
movsl
sbb
dec
and
outsl
cmp
int
fsubrl
fnstsw
ret
xchg
add
popf
lcall
cltd
xchg
and
test
inc
mov
mov
fistpll
rorl
lds
pop
push
and
dec
inc
add
inc
push
loope
out
ss
cmp
adc
sti
loopne
mov
loope
xor
jae
call
mov
and
scas
jge
into
xchg
adc
or
int3
scas
stos
cmp
out
loopne
sti
add
outsb
add
std
mov
dec
cld
aas
cmpsb
adc
out
push
aam
push
imul
push
pop
imul
xchg
push
cmp
shl
pop
cmp
jl
sbb
xor
das
repz
call
add
adc
enter
push
add
mov
jnp
add
jmp
test
add
add
add
jecxz
add
push
xor
test
ss
mov
jp
add
insl
stos
dec
pop
mov
jl
mov
in
lcall
ss
mov
ficoml
or
sub
aas
insl
add
xor
push
dec
sub
xchg
icebp
cmp
daa
mov
ljmp
js
sti
mov
sbb
fldcw
loopne
jle
inc
mov
and
movzbl
sarb
push
sub
gs
sbb
or
xchg
repz
mov
sub
scas
adc
xorb
add
xchg
adc
cmp
adc
lods
xchg
sbb
test
mov
test
repz
ret
xor
push
fs
je
xchg
test
dec
xor
or
add
lldt
aam
aaa
lds
pop
adc
push
push
push
sub
ljmp
sbb
out
add
and
xor
pop
dec
in
fwait
mov
jmp
test
pop
lret
out
mov
dec
mov
movsb
into
in
sub
test
call
in
icebp
jl
cli
pop
or
sub
mov
xlat
add
rorb
add
xchg
cmp
test
sti
call
add
adc
test
or
loopne
imul
mov
out
xor
xchg
ret
dec
ljmp
sbb
sub
add
add
adc
add
xchg
lret
or
lret
lcall
inc
mov
and
mov
mov
add
stc
jbe
and
add
incl
jg
outsb
dec
lahf
mov
push
ret
pop
out
adc
xchg
test
jae
cmc
into
stos
mov
lret
stc
inc
leave
int
push
imul
out
jle
add
add
pop
jmp
add
cmpsb
jge
or
cmp
lret
xchg
xchg
mov
mov
jle
inc
in
mov
scas
push
push
ror
notb
inc
ljmp
subb
cwtl
jb
fs
ja
and
pop
enter
test
add
punpckhbw
sbb
sbb
cmpsl
mov
xlat
push
mov
cmpsb
sub
lret
xchg
adcl
add
insb
mov
push
add
movsl
dec
addr16
jno
shr
stos
add
push
sub
popa
call
push
lret
push
cld
xchg
sbb
repnz
jp
pop
sbb
push
mov
hlt
jge
adc
ljmp
cmpsl
je
fs
mov
or
rcrb
push
testb
pop
loopne
movsb
mov
lds
jne
xlat
rol
xchg
pop
sahf
push
xchg
adc
fwait
cmpsl
das
add
sub
cmp
fldt
add
dec
rcr
repz
and
jns
pop
dec
jp
cmp
push
push
jmp
fildll
push
mov
nop
shl
movsl
xchg
or
pushl
orb
add
push
push
lods
inc
jmp
popf
arpl
mov
add
add
test
sub
adc
ror
in
or
clc
mov
loopne
aas
into
fidivs
movsb
in
fwait
out
test
add
add
inc
dec
lahf
mov
enter
xor
add
push
adc
mov
inc
xchg
or
jl
fisubs
fldcw
fbstp
push
into
inc
movsb
sub
sbb
push
nop
or
les
in
or
add
sub
xor
mov
add
adc
loope
push
mov
xor
or
inc
mov
hlt
push
pop
flds
in
test
mov
inc
xchg
adc
insb
dec
xchg
enter
aaa
popf
and
clc
jns
add
popa
test
mov
mov
mov
add
mov
rolb
sti
push
imul
mov
mov
add
xchg
andl
jle
in
mov
xor
add
insb
sub
add
add
mov
out
into
test
rolb
repnz
cld
cli
scas
mov
enter
repnz
inc
xlat
add
pop
das
jne
push
cwtl
test
dec
bswap
and
ds
je
xchg
cli
push
push
out
adc
bswap
sbb
mov
pop
inc
mov
fldl
in
cld
mov
pop
mov
mov
nop
aas
pop
mov
mov
sub
sbb
cmp
adcl
out
pop
jecxz
push
cwtl
xchg
rol
dec
sub
add
lret
ss
ret
ljmp
fdivrl
popf
ret
mov
push
outsb
inc
xchg
and
xchg
sub
inc
push
lret
fstpl
mov
jbe
inc
leave
pop
mov
xchg
add
in
inc
pop
add
push
das
pop
cwtl
shrl
fimull
pushf
test
add
sub
lea
jb
or
xor
mov
pushf
jge
sbb
pop
adc
pop
out
jmp
cmp
loop
inc
add
or
add
xor
scas
dec
sub
sbb
mov
and
fiaddl
push
mov
and
xchg
or
jno
cmp
add
popf
inc
add
mov
lcall
mov
addl
pop
pop
scas
int
or
pushf
add
xchg
sub
sbb
inc
push
or
out
fisubl
les
loopne
push
or
add
cmpsl
das
pop
cld
jns
cmpsl
push
mov
in
int
mov
cmp
mov
pop
push
inc
cwtl
and
add
fildl
add
xchg
fadds
fisttps
xchg
cmpl
in
mov
add
and
mov
out
sub
pushf
push
mov
call
push
jge
mov
adc
cs
movsb
movsb
cmpsb
mov
jae
pusha
cmpsl
lcall
test
push
sti
jmp
pop
shrl
mov
inc
mov
ret
dec
aad
xor
lcall
arpl
mov
sub
sbb
aam
aaa
leave
sbb
dec
int3
sbb
testl
xchg
ja
addr16
pusha
xor
inc
inc
xchg
loopne
xor
add
add
dec
jge
bound
jbe
inc
fisttps
rolb
mov
adc
scas
dec
testb
add
mov
adc
push
test
cs
add
jae
push
fwait
adc
ljmp
roll
add
flds
cmc
rclw
sub
sbb
out
xchg
fs
cmp
mov
jo
sbb
sbb
lea
xor
add
mov
fnstcw
cwtl
scas
add
or
jae
call
jecxz
add
mov
cmpb
add
lods
jl
scas
inc
pop
push
xchg
pop
add
add
add
add
ja
imul
fnstenv
cld
data16
mov
icebp
mov
pop
iret
clc
addr16
jo
add
add
add
mov
add
sub
add
je
push
xor
mov
pop
sub
add
cmp
imul
add
or
daa
xor
xor
es
sbb
mov
cmp
gs
loopne
fwait
outsb
mov
cmp
in
cmp
xchg
dec
dec
lret
pop
add
or
push
add
gs
add
cmpsb
pop
push
sbb
mov
popl
dec
ja
iret
and
insl
andb
push
test
push
add
cwtl
fistpl
add
push
add
push
leave
add
cmc
ret
mov
sar
popf
mov
orl
mov
mov
js
xchg
add
add
orb
fiadds
xchg
negb
in
test
sub
clc
je
jno
jmp
xchg
hlt
out
add
pop
sar
add
mov
add
mov
pop
dec
mov
or
stc
pop
pop
dec
add
ret
adc
mov
cltd
lret
cld
insl
dec
lret
les
data16
adc
sbb
andl
push
lcall
xchg
nop
das
rcll
mov
sbb
pop
push
popf
in
in
add
imul
enter
out
jnp
fwait
dec
xchg
cpuid
jae
dec
insl
test
add
movb
lods
push
mov
mov
mov
add
outsb
sbb
nop
test
dec
cmp
inc
testl
cld
ja
ficomps
pushf
add
repnz
mov
cli
xchg
daa
and
mov
in
and
push
sbb
jns
mov
sbb
sub
cmp
mov
add
leave
daa
icebp
xchg
sbb
daa
lret
and
mov
add
push
pop
add
fsubr
popa
add
clc
mov
add
inc
and
out
pop
movsl
mov
scas
add
xor
and
negb
pop
add
inc
cs
shl
rol
pop
ja
and
inc
xorb
inc
jl
and
add
lds
lret
cmc
ds
cmpsl
add
mov
cmp
sbb
jbe
addr16
inc
lock
pop
pushf
insl
je
mov
mov
mov
cmp
or
or
pop
mov
jnp
adc
cmp
mov
mov
repnz
xor
fsubl
shrl
add
cmp
sub
scas
add
sbb
sbb
ja
push
int
popf
scas
aas
mov
fs
or
rorl
pushf
jmp
xchg
rcrl
sub
andb
stos
xor
fisttpll
mov
loope
sbb
loope
out
cmp
push
sbb
push
add
adc
mov
leave
cmp
imul
cmp
push
outsb
mov
add
mov
and
iret
push
cmpsb
mov
rorl
js
fcompl
jle
add
add
and
fwait
sbb
icebp
jns
add
jmp
inc
jle
push
xchg
and
test
outsl
and
sub
xlat
fld
mov
scas
cmp
addb
insl
add
in
jbe
mov
loope
sub
mov
ja
add
push
inc
xor
stc
jp
push
les
xor
iret
jp
sub
arpl
or
push
add
inc
js
mov
or
adc
cmp
mov
imul
push
and
out
mov
gs
add
in
loop
pop
das
daa
ljmp
dec
xchg
fistps
dec
aad
cs
xchg
leave
cmp
jmp
lret
clc
xchg
sbb
sbb
jb
mov
inc
es
adc
mov
jle
push
rcll
das
rolb
add
cmp
add
xor
dec
test
lcall
pop
imul
sub
test
jmp
mov
out
xchg
add
jg
xlat
js
xor
sub
jp
aas
jae
mov
jne
pop
ficomps
mov
hlt
mov
inc
xchg
or
jno
divb
cld
into
or
lock
add
pop
jae
pop
inc
out
insl
fs
adc
pushf
mov
adc
add
xor
push
mov
mov
push
mov
cltd
push
or
push
jg
jl
pop
xchg
jbe
add
aaa
mov
push
pushf
lods
push
popa
add
fcmovnb
int
cmp
add
xor
jo
mov
sbb
pop
sub
inc
dec
stos
jne
adc
lcall
mov
mov
roll
test
xor
add
and
sbb
add
dec
add
push
adc
mov
inc
inc
xor
xchg
adc
jbe
lock
add
out
sub
adc
lods
mov
add
and
shrl
xchg
mov
sbb
push
mov
mov
inc
add
inc
mov
scas
adc
addr16
aad
dec
pop
insl
arpl
sub
sub
adc
sub
ret
xor
sbb
pop
push
fnsave
sbb
mov
fisubs
adc
aam
mov
inc
add
pop
fldcw
cmp
or
mov
push
add
xchg
out
add
inc
dec
fs
in
or
movl
movsb
dec
daa
mov
add
dec
inc
or
add
mov
pop
pusha
mov
lods
daa
mov
outsl
sbb
or
in
jl
fs
or
mov
mov
jo
jmp
loop
fsub
xchg
lret
sarl
mov
orb
xor
or
dec
inc
push
add
cmp
fs
push
into
cmc
aaa
js
lods
and
push
sbb
mov
add
std
jg
repz
out
mov
push
xor
incb
cwtl
pop
pop
inc
ret
sahf
mov
repz
clc
movsb
or
fistpl
inc
add
add
mov
sbb
cmp
in
mov
sub
test
xchg
push
cmp
jecxz
sbb
fdivrl
lods
inc
xor
insb
and
insb
add
or
mov
add
add
lods
mov
aaa
sbb
inc
cmpsl
dec
addl
pop
popa
xchg
les
mov
in
mov
pop
test
iret
daa
add
aas
pushf
or
fidivrs
mov
das
call
jo
mov
addr16
aad
dec
xchg
mov
jb
scas
add
test
jmp
popa
out
es
cli
xchg
orl
dec
or
and
lds
jnp
fwait
test
out
and
pop
shl
mov
jp
jb
jl
add
testl
fsubrs
sub
insl
test
pusha
lret
aaa
mov
or
aam
add
add
xchg
add
fildll
mov
jo
fimull
push
dec
test
out
adc
lret
inc
xor
cmp
pop
in
rcr
jl
inc
xchg
dec
dec
dec
add
xor
or
cmpsl
lock
test
sbb
inc
jmp
dec
test
add
mov
shll
fs
inc
lods
insl
mov
add
mov
jo
stos
fldz
add
in
data16
cmpl
sbb
lds
add
popf
xor
fldenv
push
loopne
push
dec
clc
mov
pop
ret
sti
lss
movsb
dec
sti
fadds
hlt
enter
imul
and
xor
add
ja
frstor
jbe
rorb
cmp
adc
sbb
add
add
aam
cmp
roll
xchg
add
push
add
pop
pop
punpcklbw
dec
add
mov
fstpl
movsl
push
fadds
push
dec
jecxz
cmp
aas
add
add
mov
pop
mov
and
add
es
ljmp
sbb
add
sub
jle
mov
cltd
mov
mov
cmpsb
or
push
ret
sub
jbe
into
sub
mov
push
packuswb
testb
push
sbb
lret
sbb
add
sahf
xor
add
fcomp
lea
jg
in
mov
es
add
mov
jmp
cmp
dec
xor
js
stc
data16
push
adc
cmp
aad
mov
add
mov
mov
jge
lea
xchg
add
mov
and
xlat
jo
cmp
push
xchg
add
lds
loope
test
add
sub
xor
pop
xorl
jecxz
lea
loopne
jne
add
jb
loopne
aam
jmp
test
xchg
fnstsw
add
repz
mov
jne
mov
imul
iret
hlt
sahf
sub
addl
fcomps
fistpl
add
cmp
iret
out
addr16
scas
mov
xchg
push
mov
mov
in
loope
shl
mov
inc
out
inc
pop
cltd
adc
jle
xchg
xor
test
cmp
push
pop
add
sbb
insb
mov
test
add
arpl
dec
fbld
xlat
and
das
fwait
dec
xchg
mov
jo
sahf
bound
add
iret
add
dec
push
adc
fstpt
in
cmpsl
jmp
add
int3
in
faddl
js
dec
add
out
add
mov
dec
ja
inc
and
push
cmp
fnstenv
dec
popf
pop
sub
subl
dec
mov
xor
jg
fsubrl
pop
bnd
xchg
in
shrl
pop
adc
in
or
sub
gs
pushf
add
sbb
jmp
jecxz
ret
gs
sbb
push
push
xchg
repnz
cmp
push
jbe
dec
fstpt
push
out
push
je
jns
es
mov
mov
cmp
sbb
jbe
js
and
or
cmp
in
iret
push
in
mov
fistpll
outsb
popf
pop
ret
mov
cld
add
xor
gs
notb
mov
mov
and
jp
stos
adc
stos
add
stc
stc
sub
fbld
cwtl
filds
adc
jle
test
repz
push
xchg
loope
push
fcomp
xchg
call
push
ljmp
std
std
mov
mov
stos
inc
iret
dec
int3
cmp
mov
xchg
call
movsb
add
or
repnz
sbb
inc
enter
ss
mov
popa
push
repnz
push
adc
gs
insl
jge
das
sub
movsl
sldt
mov
fldenv
cld
lods
test
jg
and
ljmp
sbb
jp
jno
add
mov
push
sbb
sub
scas
sub
inc
pop
push
iret
push
cwtl
inc
loop
pop
pop
sub
xor
ljmp
repnz
test
rolb
pop
clc
ret
imul
mov
or
dec
insb
stc
cmp
cmpsl
mov
lcall
sbb
or
int
or
and
notb
fstl
lret
add
or
mov
add
jns
cmp
das
adc
lods
stos
xchg
mov
sbb
add
stos
add
adc
jge
mov
sahf
mov
adc
loop
fidivrs
push
push
xchg
add
ret
std
subl
cmpsl
aaa
leave
leave
jl
insl
mov
out
adc
dec
popf
popf
in
outsb
jp
movl
scas
jecxz
inc
pushf
mov
push
or
pop
add
jae
add
add
add
mov
popa
push
pop
push
sub
arpl
and
add
cmc
orl
mov
das
faddl
hlt
bnd
neg
sub
fs
xchg
xchg
in
loope
push
imul
insl
sub
or
add
pusha
xchg
in
movsl
in
jle
mov
and
or
dec
add
lods
scas
scas
add
shrb
cmpsb
js
pop
add
pop
cmp
mov
pushf
andl
add
leave
inc
cld
jns
ja
lret
outsb
mov
sldt
cmp
or
call
fs
lcall
dec
mov
sbb
inc
push
stos
inc
dec
xchg
xorl
jl
add
push
push
mov
sbb
lret
rcll
or
bound
adc
ljmp
lds
fsubs
adc
outsl
mov
imul
stc
popf
in
dec
jp
pop
sbb
das
jl
push
add
xor
add
push
lret
add
pop
imul
jecxz
jnp
js
data16
scas
jmp
dec
jo
xlat
lcall
jno
cmp
push
and
lds
ret
sub
pop
addr16
jecxz
jecxz
fadd
je
mov
aad
into
add
add
mov
sti
sub
fdivr
xchg
cmp
pop
cmpb
add
mov
xor
add
add
xor
sub
lret
add
scas
arpl
add
rolb
iret
fucomi
cmp
arpl
add
dec
iret
lock
sub
aam
mov
inc
add
adc
rorl
subb
pop
movsl
sbb
pop
test
add
aas
lods
xor
jnp
xchg
cld
sbb
lret
lcall
xchg
or
fisttps
and
lret
nop
pop
adc
outsl
cmpl
and
outsb
ret
sub
insb
inc
mov
push
mov
cmc
add
gs
sti
jno
cltd
pop
cmc
xchg
int3
mov
mov
imul
lock
jb
pop
add
mov
leave
andb
test
ret
add
shl
or
add
inc
lods
inc
sbb
push
movsl
stos
imul
pushf
cli
mov
inc
std
and
loop
lahf
dec
out
xor
divb
add
mov
movsl
add
roll
rcrb
pop
jmp
aas
addl
les
ss
pop
add
loopne
or
add
aas
xor
xor
xorb
lcall
xchg
outsb
inc
dec
out
adc
pushf
push
je
cwtl
push
push
mov
mov
xchg
ret
in
sub
mov
xchg
mov
lods
das
xchg
mov
stc
cmp
jecxz
outsb
add
inc
jge
ljmp
lock
scas
fnstenv
xor
lods
outsl
xchg
test
add
ss
dec
insb
pop
sub
push
nop
xor
add
jno
movsb
js
add
sub
aad
add
push
loop
xchg
add
cmp
aam
cld
inc
pop
add
mov
xchg
add
std
pusha
test
scas
bound
mov
popf
xor
pushf
shll
lret
dec
std
rcrb
add
or
pushf
sub
jns
cmpsl
sbb
mov
decl
inc
add
ficoms
push
iret
push
lea
nop
push
cwtl
cmp
jp
sub
fwait
add
dec
add
inc
xlat
add
adcb
add
inc
jecxz
rorl
scas
mov
and
mov
mov
mov
stos
in
lock
push
mov
cmp
inc
add
cld
and
filds
pop
add
subb
nop
aas
lea
and
js
or
xchg
sub
rol
inc
push
mov
mov
in
arpl
movsb
or
add
fcomps
mov
jmp
aas
add
jae
and
cmp
jle
std
fisttpll
nop
inc
inc
rorl
inc
outsb
push
ficoml
xchg
scas
push
stos
sarb
add
inc
nop
testb
fidivl
jecxz
mov
testb
repnz
shll
lret
add
mov
gs
lods
sbb
push
add
mov
lret
add
adc
push
and
std
jecxz
add
push
dec
jbe
fdivr
cld
jns
xchg
mov
das
mov
mov
cmpb
add
mov
movsb
in
lock
cwtl
fdivl
aaa
out
shrb
add
je
dec
or
mov
arpl
mov
int
add
ja
repnz
xor
jl
iret
lods
inc
lds
pop
test
mulb
mov
test
dec
mov
inc
leave
xchg
xchg
ret
xchg
fstpt
mov
aaa
pop
sub
jns
pusha
ret
add
sub
and
jmp
ss
pop
adc
cld
sahf
ret
test
cli
add
arpl
jb
sbb
fidivrs
sbb
sti
inc
add
mov
cmp
inc
inc
shll
out
or
jecxz
mov
dec
xlat
stos
add
insl
iret
cmpsb
outsl
imul
add
cltd
pop
out
push
mov
notl
and
push
add
pop
push
int3
movsb
jl
xor
dec
sub
mov
cltd
loope
mov
fbld
jl
mov
stos
scas
int3
sldt
cmpsb
add
jae
and
mov
test
ja
iret
push
fadds
ss
xor
xchg
and
and
pop
add
inc
pop
ret
mov
dec
xchg
add
sub
cmp
and
adc
mov
in
push
hlt
loopne
add
out
jl
stos
and
pop
mov
xor
addb
imul
popf
add
xchg
scas
pop
mov
mov
add
jnp
dec
into
push
pop
xchg
test
lods
cmpsb
add
sbb
les
repz
xchg
add
nop
fstps
stc
mov
bound
and
push
daa
mov
add
push
pop
add
mov
add
adc
sub
ja
loopne
ret
and
imul
and
jecxz
jo
add
fwait
int
sbb
cltd
fsubrl
shr
xchg
add
mov
mov
inc
add
loope
andl
js
out
outsb
aam
xor
pop
xchg
add
add
jp
add
push
pop
and
add
or
add
fdivrl
add
sub
cmp
xchg
rolb
xchg
add
add
lea
adc
xor
push
cs
xlat
add
mov
sbb
push
aas
out
lock
int3
adc
adc
cli
ret
mov
add
jle
xchg
push
out
add
popa
stos
adc
and
iret
adc
in
inc
cli
std
mov
cs
add
jl
add
pop
push
loop
lret
into
sahf
add
jbe
sub
xchg
or
bsf
xchg
or
mov
lahf
fs
and
mov
shlb
loope
in
test
movb
scas
outsl
xchg
xchg
sub
sbb
and
scas
add
ljmp
adc
cmp
ss
and
clc
fiaddl
sub
dec
mov
out
adc
xchg
pop
xor
sti
int3
add
and
call
sbb
iret
pop
loop
and
ficomps
pop
outsb
jmp
lods
adc
sub
add
push
repnz
pop
or
pop
lret
aaa
add
sbb
xlat
add
jbe
or
cmp
dec
out
push
and
imul
das
setne
jg
aas
add
mov
xchg
imul
cmp
mov
loopne
xor
imull
imul
lea
mov
in
test
cmp
pop
cmp
lahf
push
push
mov
fwait
ljmp
out
push
add
arpl
pop
add
push
mov
pop
dec
lret
loopne
pop
dec
inc
mov
scas
pusha
mov
pushf
sti
add
cmp
sbb
shrl
pop
adc
sbb
mov
scas
add
test
jno
hlt
sbb
adc
idiv
and
jle
pop
xlat
sbb
xchg
pop
jmp
sub
je
inc
lods
dec
mov
lods
iret
adc
out
shll
xor
je
xchg
xchg
mov
scas
jno
jno
sub
mov
and
pop
aad
lahf
xchg
cld
add
loope
xchg
roll
lahf
inc
shrl
add
inc
jb
push
into
mov
add
lret
mov
mov
clc
add
movsl
add
push
cmpsb
push
cmp
dec
push
sbb
and
and
out
fdivs
and
test
push
sub
movl
add
in
incb
push
cmp
add
fbld
popf
mov
imull
enter
mov
outsb
outsb
les
add
inc
pop
insl
adc
cli
inc
lcall
push
je,pt
out
nop
sbb
addr16
mov
rclb
stc
fstl
aas
push
hlt
jne
loop
std
lods
add
adc
inc
repz
xor
out
negl
aam
add
lret
in
sbb
fiaddl
cmpsb
push
int3
adc
sbb
add
das
or
jecxz
jnp
add
dec
aas
cltd
clc
push
sub
sar
stos
rcl
sub
sahf
insl
jl
cmp
je
pop
lock
jge
add
repnz
mov
jl
jp
mov
aam
xchg
repnz
inc
add
movsb
jae
es
jecxz
pop
add
mov
jne
add
idiv
mov
sbb
shr
add
mov
fstpt
add
add
sub
sbb
or
sarl
and
inc
cli
add
cmp
loope
stos
fwait
xchg
cld
mov
lcall
sbb
add
jae
subb
in
add
punpckhwd
inc
xor
push
fcoms
xchg
rclb
mov
fwait
xchg
scas
fcomp
add
cwtl
inc
cmp
imul
add
xchg
xor
mov
sbb
lock
jp
push
sub
mov
xchg
inc
xchg
and
shrb
pop
rorl
js
js
je
sarl
in
outsl
lea
add
dec
or
add
stc
pop
xor
or
rclb
xor
mov
add
inc
mov
stos
lret
rcrb
in
out
loope
add
hlt
sbb
dec
nop
lret
sbbb
aad
xor
add
jmp
pop
mov
fstpl
and
xchg
inc
loope
add
cmp
inc
enter
inc
sbb
jne
adc
cmc
and
xchg
dec
pop
xor
xchg
nop
add
or
or
sub
sahf
push
jmp
mov
or
jne
jnp
add
insb
rcll
adc
sti
das
das
add
add
xor
imul
add
jbe
pop
and
adc
jecxz
insl
adc
andl
and
loop
je
test
cmp
mov
add
scas
inc
mov
ljmp
outsb
je
mov
shlb
pop
andl
gs
cli
std
xchg
push
imul
sbb
popa
mov
repz
inc
xchg
mov
pop
ret
mov
iret
loope
fstl
adc
repz
sub
add
and
add
int
dec
pop
call
add
xchg
push
push
lods
lds
pop
push
dec
add
sbb
aad
mov
push
hlt
push
das
ljmp
ja
aaa
cs
insl
add
filds
imul
adc
loopne
add
mov
jns
or
lret
test
sahf
outsl
mov
loopne
into
in
cmp
adc
mov
mov
lret
add
inc
insl
lcall
sbb
in
inc
cmp
sbb
add
mov
push
stc
adc
xor
add
add
dec
push
sbb
insl
cmp
xchg
sbb
cmp
add
dec
xchg
add
jb
lret
xlat
fdiv
cmp
pop
mov
ljmp
add
stos
rcrb
pop
pushf
fwait
sti
sbbb
push
pop
test
add
int
mov
orb
lods
mov
xor
push
int3
mov
sti
cmc
adc
pop
andb
push
out
add
cmp
jns
sbb
out
cld
popf
in
add
sbbb
pop
daa
popf
mov
les
imul
add
icebp
mov
pop
nop
jae
mov
ja
imul
cli
jge
inc
iret
add
fbstp
jbe
adc
cmc
adc
mov
pop
leave
adc
add
out
xchg
pushf
test
jns,pn
sbb
push
inc
mov
mov
push
add
or
mov
cmp
pop
sub
xchg
xchg
rcrb
cs
add
out
adc
aaa
pop
add
pop
test
or
xlat
xor
out
jp
adc
movsl
jnp
adc
cmp
fimuls
mov
add
or
jp
insb
sbb
or
push
je
cmp
aaa
lret
add
add
cmpsb
dec
gs
fsubs
xor
aaa
test
cwtl
and
push
cld
hlt
xchg
inc
add
lods
xor
push
mov
insb
dec
push
mov
int3
push
adc
jge
or
icebp
add
xchg
jecxz
jl
push
add
pushf
fsts
lret
shlb
dec
xchg
ljmp
test
pop
mov
mov
and
aam
arpl
sbb
mov
dec
pop
lds
jbe
mov
dec
xor
jle
idiv
push
cmpsl
add
cli
lock
cs
mov
popa
lret
inc
lfs
test
aad
add
mov
add
outsb
jl
sbb
lods
push
in
loope
test
push
icebp
pop
bound
adc
rcll
iret
into
sbb
add
xchg
xchg
out
gs
pop
cmp
aaa
add
repz
jb
and
sub
pushf
push
jge
std
stos
push
mov
xchg
movsb
add
call
adcl
je
imul
fwait
pop
add
cltd
pusha
stos
add
hlt
sbbl
les
js
cs
mov
faddl
mov
xchg
jns
inc
push
xchg
add
add
cmpsl
add
and
out
xchg
mov
cmp
dec
and
mov
jae
ja
pop
add
pop
or
or
in
xchg
xchg
clc
add
mov
int3
ja
jbe
sarb
add
push
add
shll
das
testb
sub
fwait
clc
pop
sbb
popa
stos
xchg
mov
sub
add
xchg
add
cmp
sub
daa
pushl
mov
mov
or
inc
dec
repz
add
outsb
idivl
push
std
mov
insb
cmp
je
idivl
add
xchg
push
js
dec
jp
insb
xor
add
add
dec
add
pop
mov
cmpsb
xchg
rorb
push
fimull
movsl
lahf
adc
rcrb
iret
push
xchg
into
inc
mov
add
fmuls
and
dec
ds
adc
sub
fsubrl
dec
push
mov
or
push
test
sbb
arpl
icebp
iret
add
and
test
add
mov
mov
add
add
or
xor
add
jle
sub
ret
fnstenv
test
cmp
mov
lods
lret
mov
add
stc
inc
pop
add
test
xchg
into
testb
pop
mov
xor
add
adc
xor
nop
xchg
mov
sbb
inc
push
sbb
add
mov
add
data16
in
add
dec
sub
mov
add
out
xor
insb
jb
add
pop
mov
hlt
cmp
ret
dec
inc
imul
add
cmc
xor
pop
test
push
sahf
xchg
decl
sub
jb
push
pop
xchg
int
dec
add
scas
push
jmp
add
mov
sub
pop
cmp
add
pusha
idivl
inc
ficoms
sub
enter
mov
fbstp
cwtl
jb
sub
add
add
movsl
xchg
paddsb
or
add
lds
imull
cli
in
ss
loope
cld
push
xchg
outsl
es
jnp
outsb
repnz
mov
push
cmp
jbe
xlat
shlb
testb
push
stos
adc
pop
jae
fldcw
xchg
pushl
in
jp
or
mov
or
ja
push
sti
jp
jno
bound
push
adc
frstor
outsb
push
lods
ret
sub
jmp
shll
pop
mov
nop
push
iret
add
fsubp
push
imul
pop
imul
mov
aas
xchg
enter
push
repnz
cmp
pop
imul
push
imul
add
add
dec
add
xchg
xchg
lret
faddl
mov
in
cmp
loopne
xchg
jle
mov
jo
or
iret
sbb
and
add
adc
mov
cmpxchg
add
add
adc
push
pop
aaa
aad
mov
add
add
pusha
mov
jnp
mov
or
xor
fwait
movsb
add
loope
mov
movsl
cli
nop
out
and
add
mov
inc
pop
push
add
inc
lahf
int
xchg
xor
in
nop
stc
subb
inc
jns
xchg
add
ljmp
mov
incb
cmpsb
mov
inc
inc
xor
push
inc
mov
pop
or
mov
xor
aam
mov
in
jno
sbb
xchg
jno
insb
and
mov
inc
or
stc
nop
xor
test
outsb
fcoml
insb
mov
xchg
mov
insl
mov
lret
sub
inc
fidivrl
cmpsb
pop
clc
xchg
sbb
mov
pop
adc
mov
push
and
pop
mov
cmpsl
adc
jg
add
out
mov
cwtl
add
rol
shll
aam
jns
ret
inc
negl
or
mov
or
pop
pusha
add
push
test
mov
and
dec
pop
inc
fsubr
and
and
out
iret
ljmp
scas
add
sbb
imul
jns
push
pop
cld
add
sub
add
notl
inc
mov
js
push
gs
and
or
cmpsb
fstl
mov
mov
insl
mov
cmp
push
mov
cmp
mov
add
push
push
cmpsb
and
dec
or
lret
add
jnp
ret
out
add
mov
test
daa
dec
sub
xor
jns
js
add
movsl
dec
sub
push
data16
add
testl
xchg
cmp
daa
and
fcomps
inc
shl
mov
mov
mov
addr16
inc
incb
xchg
cmp
divb
push
shll
and
std
cli
push
xchg
sarl
push
add
cmp
lret
add
cmp
push
shl
out
pop
push
jmp
rolb
mov
pop
push
adc
bound
xchg
ret
pop
jmp
push
popa
lea
stos
mov
jae
out
dec
add
ret
or
aaa
and
mov
into
lock
xor
roll
cmc
and
cmp
pop
es
and
add
mov
ljmp
pop
add
xlat
cmp
fdivs
pop
xchg
cmp
icebp
faddl
add
fisubrs
cwtl
xchg
add
sbb
ds
dec
lea
inc
in
addl
out
pop
jge
pop
aaa
adc
add
lahf
stos
stos
inc
adc
sub
int
add
xor
add
push
dec
insl
fwait
sbb
xchg
out
add
jp
push
add
xchg
imul
cmc
add
insl
pop
lret
aad
ret
dec
mov
int3
mov
or
add
fs
xor
mov
stos
add
xchg
dec
sahf
cmp
ja
jo
out
push
lods
jno
imul
xor
es
or
or
jmp
jecxz
xor
cmp
lods
stos
mov
add
sub
push
mov
xor
out
imul
roll
js
into
add
incb
outsb
add
add
inc
stc
add
data16
rcrl
std
xchg
cli
or
mov
outsl
les
js
xor
mov
push
add
jmp
xchg
sbb
xor
loopne
clc
and
ret
add
icebp
pusha
sub
testl
out
add
int3
jmp
dec
sub
ds
les
add
jp
sbbb
ds
ss
add
insl
loop
adc
add
outsl
inc
aas
mov
mov
and
pop
loop
inc
cmp
add
or
ljmp
fnstsw
mov
pop
xchg
pop
and
out
decb
add
popa
mov
add
mov
adc
jno
add
shll
xchg
or
out
xchg
arpl
ret
rolb
dec
add
gs
sbb
pop
mov
cmc
xchg
movsl
in
and
jne
cmc
mov
lock
cmp
add
lea
scas
mov
bound
ljmp
je
cmp
movlps
aam
and
add
repz
leave
cmp
xlat
pop
std
aas
mov
push
pop
cli
add
mov
pop
cli
scas
jae
dec
pop
in
cmp
or
scas
les
int3
test
addr16
push
mov
add
add
pop
movsl
inc
aaa
push
in
or
or
int
xor
adc
sar
adc
pop
xchg
sub
jb
lcall
add
add
iret
jl
sub
add
jecxz
dec
inc
lds
adc
lcall
popf
dec
push
decb
add
add
or
add
scas
inc
jecxz
jge
and
or
ja
add
dec
dec
imul
add
bound
into
mov
jmp
out
add
popf
add
jae,pt
mov
ss
lret
ret
cmp
leave
rcrb
lods
mov
fwait
pop
inc
xorl
fs
pop
sub
xchg
test
or
or
movsb
idivb
xor
jmp
sbb
test
in
add
cmpb
int
cltd
repz
cmp
mov
pop
test
dec
add
adc
mov
cmpb
loopne
into
and
push
test
and
push
push
mov
cli
mov
push
cmpsl
push
pop
sub
and
and
scas
stos
pop
cmpsl
jns
jbe
mov
sbb
adc
sbb
pop
and
and
nop
cmp
mov
push
sbb
outsb
cmp
push
out
mov
in
stc
push
je
xor
bound
addr16
adc
adc
cwtl
addb
call
enter
in
add
push
add
add
lods
xchg
call
cmp
mov
sub
enter
pusha
enter
dec
add
xor
add
pop
popa
lret
jecxz
push
mov
in
out
push
popa
daa
add
aad
cmp
mov
ror
mov
add
cmpsb
xlat
nop
mov
inc
push
test
int
stc
cmp
sbb
add
pop
ss
sub
xchg
add
dec
movsl
sbb
dec
mov
jle
fcoms
jmp
xchg
negl
xchg
insb
rcrl
jno
outsl
add
add
outsb
and
cmp
xchg
int3
pop
jnp
push
push
sbb
xor
jge
add
add
cld
add
pop
enter
pushl
fildl
adc
ficompl
je
jbe
pusha
xchg
cmpsl
sub
dec
wbinvd
pop
imul
dec
shl
add
mov
xor
xchg
fwait
roll
insl
xor
xor
inc
sub
sub
or
das
aaa
push
xchg
jo
push
stos
add
jo
mov
and
int3
into
add
jl
les
insb
stos
shl
xorb
test
xchg
sbb
bound
rcrl
or
xchg
rorb
push
inc
adc
enter
sub
out
add
enter
pop
add
inc
add
cmp
xor
cs
mov
mov
sub
add
cmp
inc
adc
dec
or
xchg
jne
test
mov
and
mov
xor
push
lds
jmp
insb
jb
xor
pop
iret
ss
clc
ljmp
out
decb
movsb
cld
pandn
sbb
pop
out
xchg
jo
out
add
icebp
fadds
add
inc
xor
or
xchg
pop
sahf
movsl
pop
mov
out
mov
add
or
mov
mov
addr16
dec
bound
leave
insl
cmp
add
jnp
jle
xor
adc
or
cmpsb
or
mov
ljmp
aad
subl
xor
cmpsb
cmpsb
sti
in
jne
xchg
add
add
xchg
dec
cmpb
xchg
decl
cmp
fbld
and
stc
inc
xchg
pop
jbe
cmpsb
test
add
pinsrw
add
sahf
xlat
mov
or
mov
inc
sub
aaa
sub
sub
and
pop
inc
mov
add
jmp
xor
sub
stos
lahf
mov
das
test
test
jg
adc
add
pusha
pop
sbb
scas
xlat
pusha
lock
jnp
shll
addr16
xchg
dec
jnp
psubd
jp
sbb
lds
test
addr16
mov
lret
jne
or
ficoml
mov
mov
lods
lea
push
pop
int
enter
add
jnp
mov
push
imul
cld
int3
test
dec
je
das
divb
fsubrl
adc
pop
jno
jge
xor
fidivs
clc
imul
push
sbb
sbb
mov
cwtl
cmpsl
jmp
add
out
insb
pop
fdivr
roll
mov
aam
add
push
mov
add
add
mov
xchg
shll
add
int
movsb
subl
mov
sub
push
and
dec
lret
add
cmp
in
dec
es
aam
mov
add
inc
mov
test
enter
add
add
sub
mov
xchg
pop
or
xchg
ret
cmpsl
cmpsb
cs
sbbb
aam
push
cltd
dec
cmpsl
add
popa
out
in
int3
into
or
jge
scas
mov
in
add
stos
data16
in
jo
dec
add
stos
ljmp
pop
push
dec
insl
pushf
sbb
add
icebp
inc
push
mov
jmp
scas
lea
scas
fadds
mov
xchg
ljmp
or
xchg
adc
adc
and
inc
outsl
ss
add
test
push
sbb
add
cmp
add
lcall
out
add
cli
xchg
adc
dec
fsubs
push
inc
jmp
xchg
sbb
mov
shl
sti
push
sbb
fisubrs
xchg
dec
pusha
es
pop
cmp
push
sub
aad
xchg
push
outsb
sbb
add
or
xor
fs
add
test
mov
ret
mov
sub
cmp
lods
sbb
xor
faddl
xor
cmpsb
movsb
add
push
adc
add
lea
cld
xor
inc
or
cmp
xchg
ret
xor
jo
lods
sub
ret
cmc
roll
aad
ret
jno
in
lods
push
or
roll
cld
icebp
test
lods
addr16
fiadds
mov
add
test
dec
jo
cld
aad
push
repz
add
xor
xchg
outsb
xchg
xchg
xchg
add
dec
fcomi
mov
sbb
mov
inc
jmp
arpl
add
sub
or
fiadds
xor
in
icebp
mov
push
inc
jmp
add
jecxz
repz
sti
cld
repz
sbb
adc
bound
jg
mov
out
xchg
cwtl
mov
cmpsl
lahf
ja
cmp
sub
and
xchg
xlat
xchg
add
lcall
or
enter
in
mov
xor
xchg
ror
loop
loopne
jo
pop
or
add
les
ret
cmp
pop
add
outsl
mov
sahf
cwtl
push
xchg
iret
stc
mov
mov
add
test
sub
dec
gs
xchg
stos
add
xchg
add
push
mov
rclb
xchg
insb
pushf
cmpsl
in
sbb
pop
mov
inc
add
sbb
pop
add
mov
jle
cld
lods
mov
int3
inc
jmp
push
daa
stc
cld
xchg
cmp
adc
sbb
add
das
outsb
test
jl
lods
add
mov
pop
aaa
incl
adc
lret
pop
test
pop
jo
push
jge
arpl
adc
mov
aas
shll
fdivl
wbinvd
dec
test
jns
mov
cwtl
xlat
in
in
xchg
int3
jo
fildl
mov
cs
add
pop
in
and
and
add
into
imul
aaa
fwait
and
sbb
push
loope
add
add
pop
inc
mov
add
sbb
add
data16
and
xor
pop
and
add
lcall
insb
or
movsb
xor
and
adc
clc
jmp
fwait
fs
mov
inc
jo
xchg
repz
adc
out
and
add
fildll
popa
push
jecxz
leave
sbb
pushf
jns
lahf
ljmp
popa
cmp
sbb
clc
mov
sti
mov
pop
rclb
xor
fistpll
xor
and
aad
call
or
mov
sbb
xor
cmc
ret
bound
push
test
add
ficoms
xor
sub
repz
jne
add
mov
in
std
add
dec
mov
sub
cmc
cs
mov
push
push
outsb
and
enter
testl
cmp
push
ret
loope
movsl
outsb
mov
push
add
fwait
add
test
add
push
xchg
dec
aam
les
xchg
mov
cmc
mov
lock
fwait
push
mov
adc
fcomi
add
repz
mov
sbb
sbb
jl
lods
movsb
mov
test
adc
adc
cmp
inc
pop
cmp
cmp
jl
adc
mov
adc
nop
ds
insl
jle
pushf
inc
mov
out
insl
jnp
mov
out
push
add
dec
loopne
in
addr16
mov
pop
pop
add
mov
test
lret
cmc
ret
cmp
inc
inc
mov
jnp
xchg
jo
or
leave
aad
int
lods
dec
sbb
add
jnp
dec
sub
jbe
cmp
imul
push
mov
clc
sbb
pushf
add
in
imul
mov
dec
or
cld
jge
add
sub
cmp
shrl
add
pop
in
out
xchg
cmp
sub
add
dec
jae
push
add
inc
in
fdivr
add
xor
adc
test
sub
mov
mov
mov
or
movlps
cmp
adc
adc
jge
mov
faddl
fiadds
cs
push
add
jmp
dec
push
fdivr
cmc
ds
mov
mov
imul
js
cmpsl
jecxz
and
add
fwait
and
lcall
test
push
je
sldt
ret
pop
stos
je
xchg
icebp
stc
add
pusha
and
mov
mov
jnp
xorl
pop
cmp
mov
ljmp
sahf
and
sub
mov
sbb
cmc
pop
add
mov
add
push
xchg
mov
les
push
stc
loop
push
iret
and
or
add
push
xchg
dec
or
push
in
daa
int
lods
stos
cmpb
cmpsb
lds
mov
sub
push
mov
adc
outsl
jnp
add
cwtl
push
enter
jge
mov
add
add
fimuls
xchg
cmp
lea
stos
aad
cwtl
notl
adc
mov
ret
dec
or
inc
inc
outsl
xchg
adc
loope
sub
gs
jle
cmc
test
inc
fcomps
and
sub
mov
jp
mov
xor
addb
jnp
popa
ja
loop
jnp
lods
fwait
or
stc
inc
xor
jae
xchg
cli
sarb
repnz
rcrl
mov
cmp
insb
mov
push
mov
arpl
scas
mov
xor
rorb
adcb
pop
inc
xor
pop
cmpsb
xor
sub
outsl
clc
sbb
add
add
adc
add
fwait
dec
hlt
inc
mov
adc
sbb
sbb
adc
imul
push
add
pop
inc
and
add
and
sub
or
xchg
xchg
dec
call
in
sarb
sbb
xor
insb
out
push
fisttps
or
or
into
stos
add
fwait
mov
aad
cmc
divl
xor
roll
add
mov
xchg
xor
push
mov
ss
sbb
add
loopne
outsl
mov
iret
pushf
aas
xor
cmp
mov
xchg
mov
mov
int
xor
cmp
fwait
mov
add
dec
imul
add
pop
std
sbb
pop
hlt
xchg
repz
mov
mov
loope
push
rolb
mov
inc
inc
es
add
ss
xchg
add
cmpsb
xor
movsb
dec
fucomip
xchg
in
jae
mov
push
out
adc
arpl
add
jbe
test
jge
rolb
add
add
pop
addr16
mov
mov
in
fsubr
jo
hlt
push
mov
jbe
lea
add
es
mov
jg
add
adc
sub
lahf
adc
movsl
add
push
lods
popf
and
aad
scas
xor
xchg
pushl
jl
mov
ffreep
pop
mov
mov
test
sbb
ficompl
xor
inc
cmp
add
lds
xchg
test
hlt
cmpsl
je
mov
dec
jl
push
loopne
in
fistpll
mov
cs
xor
and
popf
or
ss
add
stc
add
cmpsb
out
cli
addl
dec
mov
add
add
lret
adc
add
adc
data16
dec
in
jo
mov
sbb
mov
push
mov
iret
lods
sbb
add
and
pop
fists
les
rcr
jbe
mov
add
add
pop
loop
enter
push
shll
les
cld
mov
mov
pop
stc
ja
cmpsb
xchg
sbb
and
insl
or
mov
shll
adc
testb
dec
jno
add
cmp
lock
in
dec
add
add
test
mov
js
dec
adc
inc
shll
jge
dec
mov
inc
imul
clc
or
mov
mov
fisttpl
bound
add
adc
add
add
int3
mov
mov
shll
add
gs
aad
add
push
xor
push
jg
add
push
sub
ja
sbb
repnz
push
testb
sbb
lds
jmp
sbb
leave
pop
sub
call
mov
xor
adc
sti
lods
pop
mov
add
add
rcrb
or
push
pop
adc
nop
out
jecxz
xor
mov
cmp
cmc
push
lods
sbb
xchg
pop
in
int3
add
add
ret
jl
cmc
pop
jo
inc
add
push
sbb
mov
fcmovne
pop
mov
int
mov
aas
rorl
dec
mov
pop
jecxz
push
fnstenv
mov
out
xchg
sbb
leave
cltd
push
add
icebp
add
xchg
lods
add
sbbb
ss
push
xor
xor
pop
rolb
test
loopne
jbe
sahf
jnp
outsb
jns
add
mov
addr16
inc
xchg
mov
addr16
xchg
mov
in
loope
dec
sbb
xor
add
in
pop
sti
xchg
arpl
jnp
fs
cmp
ljmp
mov
or
imull
fwait
inc
inc
sbbb
iret
add
jle
jg
adc
inc
or
mov
jmp
or
add
cmc
mov
push
adc
pop
inc
adc
lahf
add
add
sub
inc
mov
in
add
dec
les
mov
xchg
xchg
ss
sbb
addr16
fistpl
mov
cmp
pop
sub
lahf
add
js
sub
test
push
dec
stc
js
std
test
test
mov
jb
dec
dec
inc
arpl
rorl
ljmp
xchg
fs
mov
sub
add
lods
rcr
pop
nop
mov
pop
sbb
sbb
inc
mov
rolb
decl
pop
rolb
test
lds
adc
shl
into
clc
pop
andb
pop
pop
add
rorl
cld
push
imul
mov
ja
xchg
add
pop
sub
jnp
sbb
sbb
dec
in
jnp
xor
and
mov
mulb
or
jo
mov
fld
sbb
flds
mov
insb
fs
fiadds
adc
sub
rorl
dec
mov
add
add
out
cli
fwait
xchg
iret
rolb
pop
fwait
push
mov
or
add
fidivrl
adc
loope
jnp
daa
mov
add
cld
push
subb
lods
cmpsl
mov
mov
aam
sbb
daa
push
xor
sub
movsb
clc
mov
push
into
stc
lds
out
add
mov
xor
mov
jmp
xchg
mov
add
loope
sub
mov
dec
mov
lcall
fs
call
movsb
or
lea
sub
and
gs
sub
add
pushf
sub
mov
adc
or
cli
add
mov
add
or
sub
jge
or
int
in
ret
add
jp
ret
jbe
mov
movsb
pop
mov
testl
or
popl
push
dec
pushf
jae
loope
das
sbb
jl
pop
adc
sbb
out
mov
out
sbb
lock
js
add
mov
out
add
bound
mov
jbe
mov
scas
mov
mov
outsl
jbe
daa
pop
cld
add
add
aad
lret
lret
push
arpl
int3
inc
sbb
xchg
xor
mulb
cmc
or
jg
fs
mov
push
dec
psubb
dec
scas
xchg
jnp
add
dec
cmp
stos
rolb
xorb
add
ret
cmpsl
cmp
arpl
xor
xchg
call
mov
add
mov
xchg
add
cmpsl
adc
repnz
in
arpl
mov
test
loope
add
dec
cwtl
bound
mov
xor
fwait
int3
aam
test
jbe
xchg
mov
repnz
ret
pop
add
cld
dec
in
inc
and
lea
imul
fisubrl
stos
dec
adc
or
sub
das
je
mov
add
repz
jge
dec
adc
jne
insb
jb
rcrl
push
incb
adc
jmp
inc
mov
lock
inc
pop
pop
mov
add
add
aaa
jl
icebp
add
subl
add
xchg
daa
aam
les
inc
out
mov
push
xchg
sbb
stc
inc
pusha
iret
insl
in
sbb
inc
repz
stos
mov
popf
sbb
add
push
add
shlb
stos
insb
xchg
or
outsb
sub
lds
ljmp
xlat
cltd
xorps
cmp
jb
pusha
add
sub
outsb
sbb
jnp
inc
scas
push
ficomps
add
jno
in
out
adc
add
add
sbb
repz
or
and
scas
add
or
xchg
cmp
sbb
repz
xor
add
adcl
push
sbb
or
cwtl
stos
pushw
std
mov
adc
or
and
and
fidivl
mov
cs
arpl
fimuls
dec
push
lret
dec
ret
adc
rolb
adc
ret
sub
xor
add
add
aad
dec
sub
fistps
icebp
pusha
jno
out
lahf
pop
xchg
pusha
out
jmp
lods
pop
mov
cs
adc
cltd
jno
or
lcall
and
adc
nop
inc
xor
dec
push
mov
pop
mov
mov
push
scas
or
add
push
jnp
jo
js
push
cmp
dec
pop
lock
push
fildll
pop
ret
out
fiaddl
or
adc
mov
cmp
jnp
loope
movsb
hlt
add
push
rcr
dec
orb
imul
les
lea
and
rcrl
xchg
js
add
or
stos
or
add
add
add
lods
inc
add
cltd
and
jg
add
mov
mov
imul
mov
add
dec
rcrl
jne
add
lahf
movl
sub
ds
cltd
fnstcw
mov
cs
push
pop
test
or
mov
insb
out
sbb
pslld
cmp
add
stos
sbb
scas
ljmp
mov
push
ss
sbb
test
or
icebp
jns
inc
rorl
loop
adc
pop
add
lock
imul
roll
popf
int
test
punpckhwd
add
add
mov
add
stos
mov
add
add
adc
fisttps
dec
imul
fsubrp
popf
fwait
cmp
pusha
add
outsl
fdivp
xchg
mov
add
clc
sub
in
sahf
jp
fldl
mov
addb
add
mov
int3
mov
add
add
call
fists
incl
outsl
mov
lds
jmp
push
add
xchg
movsb
dec
and
insl
mov
sbb
xchg
add
adc
jae
push
bound
aaa
pop
add
mov
lods
or
cmc
mov
add
add
xor
add
aad
add
inc
aam
cmp
enter
adc
call
fstp
dec
sar
aad
mov
ret
out
jb
xchg
in
and
add
xchg
orb
cmp
xchg
xchg
ss
call
lods
movsb
cs
mov
mov
cmp
jmp
ds
fistpl
xor
je
pop
out
cmp
repnz
fdivl
xchg
push
pop
mov
je
ffreep
andl
ja
xchg
lret
andl
lea
add
hlt
out
mov
enter
xor
lret
jbe
loope
pop
pop
sti
pop
negl
xor
mov
add
add
mov
movsb
add
popa
cltd
jp
xor
notb
popa
cmp
int3
pop
insl
or
aas
fs
add
ljmp
cmpsb
dec
mov
pop
cltd
and
in
add
insl
push
and
adc
cmp
push
loope
ljmp
outsb
push
sub
shlb
add
pop
lea
iret
rolb
sar
mov
js
loop
je
mov
inc
add
pop
adc
xchg
or
add
push
jns
ftst
sub
mov
in
mov
roll
push
jmp
leave
scas
enter
inc
orb
out
rorb
add
add
cmp
inc
lahf
iret
push
xor
lret
add
xor
cmpsl
inc
add
xor
pop
iret
cltd
pop
aas
lds
outsb
add
or
xor
add
add
movsb
add
jnp
mov
inc
je
jle
push
and
cmpsb
adc
loope
add
cmp
loop
xchg
dec
and
xor
mov
inc
scas
test
mov
sahf
iret
lods
jg
daa
add
sub
outsb
rclb
int3
pop
add
adc
test
push
pop
xor
int
push
lock
mov
add
add
or
add
sub
cwtl
adc
add
pop
dec
xor
xchg
fidivrl
mov
ss
jne
sbb
fiadds
add
pop
xor
mov
push
inc
fcmovbe
and
lret
jbe
stos
sbb
pop
pop
push
cwtl
jnp
addr16
add
in
add
pop
jle
add
add
add
test
push
in
add
adc
push
scas
mov
stos
popl
ljmp
push
fstpl
add
sub
cmpsl
aad
jnp
cld
jnp
cs
call
popf
jnp
mov
mov
les
dec
in
mov
fdivrs
mov
mov
lcall
call
pop
in
sub
jmp
and
sbb
push
mov
add
inc
gs
stos
loop
outsl
inc
test
and
mov
ss
jae
imul
test
and
pop
xchg
out
dec
sub
sbb
adc
xchg
mov
push
dec
enter
add
cld
add
add
and
stos
add
in
add
dec
lods
jb
mov
mov
fs
lcall
add
lcall
add
mov
cmpb
rcrb
sarl
out
jp
add
mov
lods
fstps
and
mov
xchg
pop
imul
repz
cmp
xchg
and
jno
sub
inc
gs
add
add
xchg
jne
xor
mov
movsl
mov
or
cmp
xchg
jnp
mov
imul
arpl
xchg
mov
jmp
lods
xchg
pop
movsb
pop
addr16
add
loope
add
fs
lcall
add
push
and
push
jns
mov
xchg
mov
fildl
out
add
xor
or
or
je
sub
fisubrs
adcb
mov
mov
orb
js
add
sub
add
cmp
adc
sub
ret
mov
dec
test
xchg
jmp
add
push
test
cwtl
jecxz
add
sbb
add
xor
add
outsb
mov
fsubr
inc
dec
add
into
mov
cmp
jg
xor
mov
enter
mov
scas
inc
push
out
addl
xchg
mov
xor
inc
pop
leave
and
jae
iret
cmp
add
test
adc
mov
add
dec
jo
popa
push
or
fcmovb
cmpl
push
or
mov
and
dec
add
imul
mov
dec
mov
sbb
arpl
mov
mov
insb
or
push
push
mov
in
xchg
rcr
pop
imul
insb
and
mov
les
call
movsb
add
pop
mov
lcall
sarb
addl
test
pop
add
push
data16
das
shlb
out
pop
lret
out
std
add
test
xor
add
stos
add
dec
dec
xchg
sbb
xlat
cli
dec
or
mov
in
js
push
push
fnsave
pop
pop
mov
out
scas
pop
dec
daa
ret
push
pop
jmp
jmp
mov
jnp
scas
cs
orl
aad
mov
push
test
jno
sbb
add
cmp
add
dec
cld
movsb
mov
sbb
adcl
mov
int3
mov
in
cmc
adc
pop
pop
adc
sti
push
shlb
add
outsb
pop
mov
shl
out
fcompl
push
je
fnsave
scas
jo
push
sahf
pop
in
sbb
inc
cmp
aad
pop
add
mov
dec
and
or
xchg
les
inc
pop
int
jns
jecxz
lods
sbb
add
pop
and
fcmovne
jo
popf
dec
add
or
mov
add
lock
ja
fnstenv
push
mov
repnz
pop
pop
ret
add
out
xor
js
jns
repz
lahf
mov
sti
pop
ljmp
add
in
repnz
add
cmp
hlt
nop
inc
push
xor
roll
push
ret
add
mov
pop
fnsetpm(287
cmpsl
and
into
inc
bound
arpl
in
sub
push
add
add
inc
repz
pop
mov
inc
in
push
inc
outsb
and
mov
in
leave
imul
dec
sti
jb
outsb
iret
pop
in
and
mov
add
add
stos
xchg
dec
iret
mov
mov
jo
bound
adc
pop
sahf
out
jecxz
add
movsl
scas
addb
sbbb
rcll
loop
push
or
clc
mov
mov
push
add
xor
add
loop
movsl
sbb
xor
mov
add
add
fisubs
rcr
mov
cmp
pusha
xchg
add
shll
dec
sti
sbb
add
inc
mov
ja
cmpb
mov
cmp
test
clc
jne
insl
pop
cmpsb
add
ljmp
repnz
xchg
dec
sbb
or
add
outsl
pop
shl
add
or
dec
rcrl
and
jecxz
sbb
add
add
mov
cmp
lret
jecxz
add
ljmp
rclb
push
stos
fdivr
aam
jo
adc
add
add
ljmp
xchg
popl
shrl
out
faddl
cmpsb
jne
jns
popl
mov
lods
adc
into
jg
mov
jp
dec
push
ret
adc
dec
mov
rcpps
call
adc
into
mov
insb
mov
add
sub
add
mov
aaa
jne
incb
cld
pop
push
adc
std
lret
mov
ret
out
rcll
outsb
add
pop
add
ret
cmpsl
pushf
fidivrs
add
add
or
incl
es
pop
loop,pn
repnz
adc
cwtl
pushf
mov
mov
outsb
mov
fadd
aas
sahf
roll
out
add
adc
pushf
xchg
dec
fdivrs
rorb
sbb
add
mov
loope
lds
add
stc
imul
es
call
xor
scas
fs
adc
int3
ret
xchg
jbe
test
andb
fwait
cmpb
dec
mov
cmpl
addr16
sbb
mov
push
add
add
xchg
sti
add
dec
or
push
scas
push
add
lods
jl
add
je
and
add
inc
sbbl
lods
or
cmp
sbb
out
cmp
popa
dec
daa
into
mov
lods
jmp
scas
jne
xchg
popa
inc
push
cmpsb
mov
pop
jge
aam
ds
pushl
xor
lret
flds
inc
dec
movsb
shrl
mov
mov
rcll
jo
push
jmp
leave
into
mov
movl
imul
inc
mov
cmp
pushf
mov
test
jge
adc
mov
in
sub
jne
sahf
call
xor
push
cli
xor
mov
stc
cli
add
icebp
add
add
mov
mov
arpl
aas
aaa
out
sahf
stc
ret
aad
push
fiaddl
and
repz
and
call
sti
and
aaa
data16
and
addb
sub
sub
add
cmpsl
jmp
cmpsb
je
push
push
push
lods
jp
add
mov
ret
cmp
pop
imul
add
jmp
cmp
cmp
fstpl
inc
fcomps
call
cmp
ret
jle
mov
push
adc
lods
add
xchg
ret
fadds
sub
pop
imul
test
push
outsb
push
add
fists
add
divl
sbb
clc
add
add
pop
adc
xor
cmc
cmp
iret
jmp
cmp
lret
pop
mov
pop
or
es
in
mov
arpl
fnstsw
dec
sets
add
cld
out
jl
daa
add
and
mov
add
lcall
movaps
mov
push
mov
fs
pop
push
and
nop
lcall
add
inc
movsb
adc
popl
pop
jmp
push
loopne
repnz
cmp
sub
cmp
movsl
pusha
add
add
xor
add
repnz
sub
call
lea
pop
or
mov
ss
add
sbb
add
pop
movsl
dec
icebp
std
push
cmp
aaa
pop
out
sbb
inc
ja
clc
adc
cmc
mov
orb
mov
movsb
cmc
pop
insb
sub
notl
int
mov
in
adc
lret
pop
xchg
sahf
arpl
roll
push
add
mov
add
xchg
add
je
adc
imul
cmc
xchg
out
ja
test
sahf
sar
insb
mov
sub
movsb
cmpsl
xor
das
arpl
mov
aaa
push
adc
jno
enter
add
fsubrl
and
jo
or
sub
aaa
movsb
mov
clc
cmp
adc
pop
addr16
imul
ficompl
cmpsb
mov
movsb
add
dec
dec
cmp
ljmp
int3
aas
cmp
mov
mov
jno
das
and
add
int
xchg
sbb
mov
pop
xor
and
xor
xor
pusha
dec
ret
and
add
xchg
mov
inc
subb
rcr
sbb
add
mov
push
mov
push
mov
cli
mov
and
cld
mov
outsl
fstps
fiadds
adc
fs
sub
mov
iret
repnz
gs
or
mull
mov
pop
ret
dec
mov
mov
xor
add
add
iret
jnp
pop
xlat
aas
add
in
add
lret
jae
mov
stos
and
push
mov
jb
sub
inc
xor
lahf
add
push
lahf
scas
rcrb
mov
jno
lcall
mov
fwait
sti
in
push
inc
mov
fs
dec
sbb
pop
inc
sub
or
lock
test
push
in
or
jl
add
sub
add
rcl
add
pop
xor
pushf
or
add
sub
test
pop
in
add
push
mov
inc
lcall
xchg
push
pop
add
sub
insl
pop
mov
stos
jo
inc
cmp
adc
iret
mov
ret
ljmp
pop
push
test
iret
addps
xor
scas
xchg
loop
add
jnp
jmp
pop
pop
pop
add
test
cmp
xchg
pushl
xor
jno
inc
in
into
test
xor
call
cmp
add
aas
lcall
aad
cmp
cmpsl
fists
shl
fbld
sbb
jne
mov
mov
or
sar
xchg
cmp
lea
jno
sbb
xor
dec
lret
mov
pop
add
ja
push
incl
cli
mov
pusha
pop
int
or
mov
xchg
add
push
sbb
push
inc
jb
lods
dec
call
lret
mov
stc
shrl
add
hlt
xchg
push
fistpl
orl
jnp
and
jecxz
imul
dec
pop
mov
popa
fwait
stos
jmp
cmp
sbb
pop
pop
push
jmp
add
xor
inc
cmpsl
sub
test
imul
sub
add
pop
xor
add
outsb
das
mov
inc
xlat
lods
idivl
lcall
shl
mov
or
stc
add
xchg
jno
ja
pop
cmp
cmp
sub
fptan
movsl
scas
mov
movsb
sub
add
dec
sub
outsl
xchg
in
ss
imul
and
sub
jmp
in
jno
cmp
out
daa
rcr
test
jecxz
jmp
inc
lea
roll
sub
aam
rolb
and
insb
add
mov
rcrb
add
add
mov
push
leave
sti
and
dec
lahf
leave
iret
sbbb
adc
icebp
pusha
mov
add
xchg
add
imul
adc
in
mov
add
pop
andl
adc
xor
out
sbb
les
cld
dec
pop
test
bnd
loope
mov
in
cmp
pop
xor
cmp
pop
aam
movsl
dec
js
or
add
sub
jns
pop
repnz
mov
dec
xor
sbb
add
test
and
mov
bound
mov
dec
adcl
int
gs
lret
add
mov
out
mov
mov
aam
lods
adc
sub
loope
daa
cmp
add
add
jb
fincstp
sub
fstl
cmpsb
adcl
pop
mov
pop
jecxz
add
sahf
adcl
lock
loope
and
push
jae
dec
add
pop
pop
add
xchg
movsl
dec
sub
inc
mov
lcall
add
shlb
xor
cmp
mov
add
or
xor
mov
add
ss
addl
hlt
loope
ret
nop
imul
loopne
movsb
ret
add
insb
pop
xchg
lea
cwtl
fs
sbb
xchg
orl
cmp
mov
and
inc
add
inc
add
addr16
in
push
lret
adc
xchg
mov
pop
add
jb
xor
mov
in
xchg
sbb
outsl
fisttps
cs
xchg
xor
js
mov
sbb
and
add
inc
add
add
addl
cmp
sbbb
clc
mov
ss
ss
iret
repz
imulb
push
push
repz
stc
adc
mov
fs
hlt
add
in
lcall
xchg
xchg
jns
call
cmp
adc
inc
add
jbe
insl
xchg
inc
ss
add
push
adc
or
sub
fildl
push
loop
mov
lea
xchg
jbe
loopne
sti
lods
push
mov
xchg
pop
push
ljmp
dec
fnstenv
add
sub
frstor
mov
jbe
pop
mov
pushf
imul
pushf
mov
cmp
es
push
mov
cmc
arpl
add
xlat
sbb
lea
inc
enter
ficomps
repz
and
xlat
out
lods
in
mov
mov
dec
je
add
xchg
xchg
outsl
push
pop
mov
push
mov
pop
xor
add
cmp
enter
aas
xchg
push
mov
mov
xor
pop
lods
add
pop
add
xchg
test
jns
sub
cmp
xor
notb
imul
stc
pushf
loop
add
pop
pop
add
cmpsl
sub
fdivp
dec
sub
pushaw
push
inc
add
jl
add
mov
lret
cld
cli
and
mov
mov
cld
push
push
add
fdivs
mov
mov
sbb
or
popf
lahf
cmc
orb
fwait
loopne
push
negl
or
push
push
pop
aad
xor
imul
stos
enter
or
adc
in
dec
call
out
add
sahf
fdivl
out
rorb
sarl
fwait
mov
dec
mov
and
cli
xchg
lods
cld
out
mov
mov
mov
movsl
fisttpll
cmc
shll
dec
aam
rcl
dec
data16
aad
call
insl
add
mov
in
fildl
fs
aas
cld
jb
nop
mov
mov
out
outsb
add
fcompl
push
shl
sub
mov
enter
cmp
out
fiaddl
jb
sbb
scas
into
mov
aas
sub
add
xchg
scas
sub
enter
jno
test
jp
shll
xchg
jl
loope
subl
cmp
mov
out
mov
or
pop
add
and
cmp
popf
in
call
popa
ss
pop
sub
jno
popa
push
pusha
mul
xchg
mov
fs
sbb
test
into
mov
mov
adc
xchg
das
jne
repz
add
and
xchg
enter
xchg
add
xchg
mov
or
stos
ret
frstor
xchg
jg
mov
iret
mov
int3
jmp
int
xor
push
icebp
add
or
mov
add
and
push
jbe
add
sbb
or
jae
mov
daa
add
inc
and
outsl
insb
inc
outsl
pusha
pop
mov
stos
out
mov
push
in
mov
jb,pn
arpl
dec
inc
mov
cmp
arpl
dec
jle
add
sub
cmp
lret
jbe
ljmp
add
add
fsubp
dec
or
adc
cld
lods
or
cmp
testl
add
add
mov
sti
xor
leave
mov
add
push
rcr
addr16
cwtl
add
push
inc
add
add
out
aas
enter
stc
test
movsl
adc
mov
inc
mov
add
jmp
jecxz
pusha
mov
in
cmc
mov
loope
cltd
fisttpll
fsubl
pop
xor
add
push
add
add
sbb
cmp
add
mov
pop
mov
sti
fisubrl
ljmp
lahf
xor
dec
jbe
testb
mov
sahf
jne
mov
add
int
ret
adc
dec
add
add
arpl
sbb
sub
or
mov
cmp
jmp
js
loopne
and
out
leave
push
add
lcall
pop
inc
mov
add
or
fstps
outsb
mov
xchg
dec
jb
icebp
mov
cmp
add
dec
sub
lds
das
add
xor
or
je
jecxz
bound
and
add
scas
mov
cmp
rcl
in
or
xor
mov
movsb
test
xchg
in
xchg
pop
xchg
popa
add
pop
mov
mov
jne
xchg
stc
dec
add
cld
inc
nop
imul
cmp
push
rclb
out
inc
mov
in
mov
pop
bound
pop
adc
inc
setbe
iret
xchg
mov
mov
add
or
rcl
xchg
inc
add
fdivrl
sar
mov
roll
mov
mov
lret
add
or
dec
into
add
andb
sub
int3
stos
pushf
xor
test
inc
in
and
adc
scas
add
adc
dec
add
jmp
stos
jge
popa
add
hlt
jg
hlt
mov
int
push
cld
cmpsl
lods
add
fldenv
add
mov
add
dec
and
data16
push
es
in
add
lcall
aam
imul
dec
jmp
in
in
stc
add
in
push
int
int3
add
add
sbb
jmp
lock
movsb
inc
and
cs
add
in
repz
frstor
mov
jge
add
jge
rcrb
ljmp
mov
inc
repz
inc
pusha
add
hlt
pop
addb
sub
test
adc
test
daa
add
mov
mov
add
xchg
out
add
adc
push
add
cld
sbb
xchg
sarl
pushf
sti
push
cmp
out
xor
daa
pop
pop
leave
add
ljmp
add
xor
pushf
pop
je
dec
lret
cmp
xor
cmp
ljmp
popf
or
add
add
in
fildl
xchg
sub
inc
negl
mov
xchg
ficoml
cmp
push
add
mov
shrb
arpl
sbb
dec
cmp
nop
movsb
mov
sub
and
cld
aaa
push
bound
xchg
scas
add
popa
pop
inc
jp
je
mov
jns
out
push
cli
out
ss
pusha
cmp
test
add
jge
lret
gs
add
fwait
popf
xchg
test
insl
add
cmpsb
xchg
lods
xchg
pop
inc
mov
jo
sbb
sbb
xchg
mov
inc
out
inc
fildll
cltd
stos
add
scas
ret
adc
subl
jmp
adc
cmc
in
mov
bound
mov
xchg
cmp
push
ret
or
clc
dec
jg
and
cmp
cmpsl
fstpl
inc
in
and
mov
xchg
ljmp
add
xor
rolb
add
adc
scas
lock
and
add
sbb
pop
and
add
arpl
cmc
inc
dec
add
cmpsb
cmp
add
and
roll
scas
add
xor
xor
adc
mov
subb
mov
pop
mov
dec
push
mov
subl
xor
lds
dec
jmp
addl
test
pop
sbb
sub
imul
fwait
add
and
adc
mov
sub
loopne
sbb
pop
repz
xchg
jp,pn
sbb
enter
fstl
xor
add
inc
dec
jns
cs
sbb
in
add
or
pop
in
in
ds
add
add
inc
sbb
imul
and
iret
imul
pushf
testl
outsb
inc
xchg
add
inc
add
lahf
dec
popf
dec
mov
and
mov
xlat
push
testb
sub
into
jp
push
clc
test
adc
clc
fdivrs
es
mov
arpl
fs
sub
sub
mov
sub
loope
lahf
and
or
jno
add
pop
ret
jg
and
adcb
inc
sbb
mov
lds
or
fsubr
xchg
or
negl
sbb
aam
lds
into
aaa
sub
pop
es
add
add
add
lock
jne
pusha
enter
push
adc
and
xor
std
sbb
pop
lret
add
lods
les
aam
lret
add
inc
ds
push
pop
gs
cld
mov
sahf
dec
jp
cmpsl
insl
jns
add
add
mov
fstps
add
push
adc
pop
sbb
in
aas
dec
mov
js
adc
aaa
or
cli
sub
cmp
mov
mov
leave
jecxz
mov
outsl
sbb
ss
cli
dec
in
es
in
mov
int
lods
jge
add
cmpsl
jl
sarl
mov
std
bound
inc
and
add
jne
cmp
sarl
mov
lret
push
in
dec
add
loop
push
pusha
push
mov
imul
lock
mov
outsb
dec
call
pop
jae
add
int3
adc
dec
loope
in
fistpl
pop
dec
xor
dec
idivb
push
scas
dec
xchg
adc
sti
fwait
mov
cmp
out
dec
std
rcr
add
divl
add
add
add
pushf
jp
push
mov
aad
in
data16
fmul
jge
dec
andb
dec
scas
dec
dec
fcomps
sahf
cs
ret
js
jo
or
mov
call
add
scas
jne
or
xor
lret
mov
rolb
add
jecxz
lods
jge
ja
scas
es
hlt
es
pop
sbb
cmpsb
add
jp
pop
cs
lret
mov
mov
mov
sub
imul
test
jg
sbb
testb
gs
rcr
pop
xchg
idivb
xor
cli
out
jle
popf
jno
push
cmp
fildll
push
mov
cld
mov
jno
xchg
add
inc
push
cmp
push
into
sbb
sbb
add
ljmp
add
sahf
add
outsb
leavew
addr16
es
sahf
arpl
add
jb
push
push
add
insb
nop
add
jns
xchg
rcrb
or
mov
imul
je
in
movsl
out
iret
dec
sub
into
ret
pusha
in
add
lods
mov
pushf
add
xchg
mov
sbb
sub
and
add
mov
mov
incl
repz
dec
push
add
rolb
or
mov
in
dec
cld
lret
mov
jle
xchg
cmp
pusha
xchg
add
clc
call
adc
adc
xor
pop
pusha
inc
popf
fidivrs
sbb
add
add
into
mov
fadd
loope
push
aad
int
daa
inc
stos
dec
scas
ja
clc
add
push
jl,pt
cmpsb
sbb
jno
test
fnstsw
js
mov
push
inc
mov
cmp
in
mov
add
jp
leave
add
mov
test
xchg
or
pop
jno
stos
repnz
nop
add
call
and
sub
pop
mov
or
ja
adc
mov
lods
sbb
imull
add
sub
xor
stos
iret
xor
imul
ss
add
iret
cmp
std
mov
ficompl
xor
push
xor
push
ret
inc
xor
jo
aaa
or
into
jmp
push
aas
jmp
lahf
das
cltd
aaa
sub
std
add
jge
test
xor
cld
aam
mov
sub
xchg
repz
add
fcoms
adc
xor
jno
cwtl
add
test
add
dec
mov
cmp
inc
pop
dec
test
lods
sub
sti
push
mov
scas
icebp
in
push
lret
dec
inc
fildl
ljmp
jmp
adc
std
sahf
push
nop
fcos
addr16
xchg
cwtl
or
adc
mov
daa
lret
psrad
cmpsb
inc
cmp
push
mov
cmpsb
shll
pop
xchg
or
divb
xor
xchg
mov
icebp
fildll
and
iret
aam
dec
push
push
ret
loopne
into
push
gs
add
xor
push
add
adc
xor
cwtl
flds
add
testl
adc
fidivrs
inc
sub
mov
dec
repnz
sarl
ret
push
pop
ficoms
adc
pop
cld
shr
mov
icebp
into
mov
sub
inc
call
add
jl
lcall
add
rcl
cmpsl
mov
jecxz
pop
test
mov
jl
fwait
and
add
repnz
fistpll
push
cltd
int
dec
and
cld
test
mov
add
add
int3
or
mov
dec
inc
jns
inc
xor
ss
xor
mov
repnz
arpl
jmp
xlat
and
mov
cmp
leave
jg
xchg
sub
mov
inc
das
loop
out
jno
addl
scas
sub
mov
lcall
subl
xchg
mov
fucomi
push
add
mov
fidivrl
dec
pop
test
add
sbb
mov
push
shl
add
sub
mull
add
pop
popf
daa
inc
lea
data16
add
lds
sub
cmp
popa
fisubrl
jo
add
add
cli
jnp
push
dec
mov
out
lahf
lock
icebp
pop
fidivs
imul
add
jo
cmp
add
pop
aas
movsb
fisttpll
adcl
adc
ds
and
add
xlat
lods
pop
sub
cli
in
int3
add
and
jno
or
xor
dec
inc
pushf
pop
in
cmpsb
fwait
jnp
imul
enter
cli
sub
jb
mov
inc
add
jae
mov
test
iret
sbb
test
cmp
mov
push
push
sahf
cmp
pop
push
and
lods
and
mov
mov
mov
pop
paddq
iret
pop
inc
cld
shll
inc
pmaddwd
cmpb
add
movsb
and
mov
aad
ss
mov
push
mov
fsubrs
cmp
add
add
inc
jbe
pop
add
addb
lcall
mov
mov
adcb
leave
adc
lea
jle
cmp
add
adc
lret
fwait
enter
pushf
inc
adc
mov
add
add
in
add
or
jno
jge
sub
add
pop
adc
and
roll
pushf
cmpsl
push
add
push
mov
imul
pushf
ror
pop
jge
imul
jge
mov
sub
mov
addr16
pop
inc
and
push
stos
fs
iret
jge
out
xchg
xlat
add
out
jg
add
aad
xchg
dec
mov
and
add
xor
mov
cmpsl
or
inc
push
int3
std
and
xchg
mov
bound
jp
adc
dec
add
fstpl
xchg
inc
add
push
in
cmp
add
add
cs
add
inc
sbb
add
add
pop
sub
dec
rorl
inc
sbb
fs
add
mov
mov
push
ret
dec
mov
std
mov
add
fimull
add
fs
cmpsl
or
gs
mov
pop
mov
cmp
adc
xchg
add
add
loopne
nop
fcompl
popf
sbb
xor
sbb
mov
add
sbb
jp
add
and
ret
adc
inc
xor
cli
xor
cmpb
add
bound
imul
xlat
add
inc
inc
hlt
rcll
xchg
test
sub
lods
sbb
xor
into
inc
inc
add
ss
add
fidivl
cmpsl
and
lea
popf
adc
adcl
and
inc
addl
pop
pop
mov
leave
int3
xchg
into
fscale
add
push
add
stos
jb
call
popa
inc
test
outsb
insl
jnp
movb
sbb
in
mov
cltd
add
sarl
push
adc
xorl
jmp
dec
gs
daa
jg
imul
add
int
std
or
repnz
mov
add
xchg
and
fiadds
mov
add
ds
add
add
cmp
mov
push
mov
pop
rcrb
test
fiaddl
mov
enter
sbb
arpl
dec
and
gs
flds
and
aad
cmp
add
add
or
call
fimuls
ret
mov
xor
dec
dec
test
cmp
out
jns
icebp
add
add
mov
fstpl
push
or
or
addr16
cld
jle
je
nop
rorb
cmp
inc
movsl
mov
push
sbb
out
push
xlat
iret
sahf
insb
and
add
clc
pop
cmp
insw
shlb
add
xchg
leave
push
or
mov
repnz
jmp
and
dec
push
push
add
outsb
push
aaa
inc
aaa
mov
ss
fistpll
mov
mov
pop
inc
jno
sbbb
fisubs
xchg
mov
stc
ljmp
xor
xchg
clc
and
jle
xchg
mov
pop
inc
iret
jecxz
pop
mov
jns
mov
push
jae
and
jl
or
inc
push
fwait
ds
cld
inc
pop
jmp
int3
inc
and
push
xchg
mov
out
out
ret
or
jg
test
sbb
insb
pop
scas
gs
int
pop
xor
cltd
leave
movsb
lock
sub
push
test
mov
cmc
mov
or
arpl
jne
fwait
pop
push
sti
jno
mov
jne
push
clc
les
adc
ds
fmuls
das
daa
jo
addr16
aad
lock
mov
add
and
dec
repz
inc
clc
and
add
dec
cld
clc
pop
or
sbb
mov
push
push
xlat
sub
loopne
out
pushf
sub
fildl
je
push
pop
cmc
cmc
dec
psrld
pop
add
sar
das
add
adc
pusha
testl
imul
cs
add
xchg
add
mov
inc
xor
cmp
int
pop
dec
enter
adc
pusha
inc
add
mov
subl
and
adc
cmpb
sbb
jnp
jmp
add
cmp
lods
out
push
xchg
out
pop
sub
roll
push
icebp
bound
movsl
adc
mov
add
int
add
mov
ret
repnz
orl
pushl
add
fwait
cmpsb
add
cmp
aas
and
xor
adc
pop
xor
inc
xor
ja,pt
cmp
xlat
gs
mov
pop
sub
mov
bound
sbb
mov
bound
mov
cmpsl
or
mov
aaa
in
push
jnp
cmp
sbb
adc
jp
cmp
jle
mov
lods
test
subl
loope
jge
js
jb
cld
jnp
mov
out
jmp
push
add
push
inc
sub
into
or
ljmp
loop
push
lds
jns
ja
mov
hlt
pop
dec
xchg
bound
scas
push
add
test
jle
mov
movsl
xchg
adc
fldt
test
sbb
add
es
negb
ja
add
cld
push
in
push
out
imul
jae
push
sbb
lock
jns
rcll
neg
mov
xor
jns
rclb
xchg
cmpsl
mov
push
add
jb
scas
pop
xchg
bound
mov
xor
sbb
mov
inc
mov
adc
movsl
insb
out
cmc
out
inc
fwait
bound
xchg
sub
imul
cltd
push
sarb
iret
in
dec
sbb
sarb
mov
sbbb
jp
ror
nop
jge
ret
xchg
mov
add
mov
enter
jg
mov
xor
xchg
scas
rep
or
jle
pop
add
enter
mov
sbb
mov
add
stos
add
ja
mov
add
add
fwait
es
fsubrp
xlat
nop
pop
add
mov
inc
lods
xor
jo
adc
jo
fcmove
inc
mov
add
xchg
mov
fcomps
movsb
add
add
lods
or
jbe
pushf
fnstenv
add
xchg
cmp
ret
aas
sahf
loope
add
into
cli
movl
push
decb
mov
adc
jo
adc
and
rol
mov
add
lahf
ja
fstl
and
fs
xchg
push
mov
test
xor
lods
or
push
scas
jbe
push
sbb
jne
sarb
cmp
lock
pusha
in
jae
push
test
jo
inc
or
mov
lods
and
mov
add
cmp
ja
leave
add
cmpsl
pop
lahf
sub
mov
pop
add
add
fs
jnp
pop
pop
inc
mov
ljmp
push
sbb
xchg
mov
add
sbb
cmp
es
sar
mov
add
jl
fistps
lahf
std
inc
xchg
aas
add
add
sub
and
notb
loopne
mov
pop
jl
inc
addl
jne
mov
stos
fisttpll
push
decl
gs
mov
add
frstor
adc
push
cmpsb
mov
mov
lock
adc
icebp
sub
outsb
fadds
jb
lods
add
scas
add
and
sahf
lret
add
pop
jle
ljmp
icebp
mov
out
aaa
push
xlat
inc
inc
out
xchg
imul
pop
push
mov
inc
imull
cmpsb
int
das
jo
and
lret
fadds
push
add
imul
add
pop
add
dec
dec
add
jns
repz
cmpsb
dec
loop
add
mov
mov
sub
aam
in
add
outsb
rorl
xor
mov
push
cltd
sar
mov
push
xchg
add
mov
sbb
add
add
inc
xor
cmpsl
add
loope
push
mov
repnz
addb
add
imul
or
add
cmp
orl
out
adc
add
xor
jbe
imul
or
mov
inc
mov
mov
jmp
xchg
mov
push
or
pop
add
out
cwtl
sbb
add
add
loopne
inc
rolb
push
test
fadd
adc
add
push
inc
and
add
sarb
enter
fldl
xor
into
jp
insl
ja
popf
pop
das
sbb
and
jno
mov
js
add
adc
in
inc
pusha
dec
lcall
test
sti
hlt
aam
mov
lods
jo
inc
mov
jp
inc
add
sub
add
lea
dec
lret
cmp
aam
and
call
add
jno
push
mov
push
dec
and
shll
mov
cmp
add
mov
icebp
js
adc
cmp
xchg
sbb
imul
xchg
inc
xor
sbb
xor
call
dec
inc
push
inc
or
xchg
lods
popf
mov
jbe
cs
mov
leave
in
xor
out
jb
xchg
jbe
mov
mov
push
add
in
lock
inc
gs
fs
mov
push
inc
xchg
add
xor
test
fildl
and
leave
dec
fisubrs
popf
sbb
adc
mov
fcomi
inc
mov
jne
outsb
dec
mov
lods
aam
mov
add
cmc
sbb
push
fmuls
add
push
bound
jp
xor
jbe
push
xadd
and
sbb
add
push
jns
adc
push
and
xorl
hlt
in
or
push
add
or
push
cmp
test
mov
ret
xchg
lret
fadds
add
popf
jno
add
xchg
into
add
cmp
adc
xchg
dec
rorb
rorl
mov
push
pop
xchg
jnp
and
add
icebp
xchg
mov
jne
sbb
imul
push
fdivl
jae
mov
das
pop
insl
sub
idivb
in
cmp
push
test
fcomi
pop
ret
jbe
rorb
cmp
mov
add
mov
add
push
add
rorl
jp
aaa
dec
cmc
lock
dec
popa
add
inc
adc
add
lahf
or
and
loope
add
adc
aas
adc
jb
add
dec
sub
mov
xchg
adc
imul
jnp
mov
popa
and
lcall
mov
inc
imul
adc
inc
leave
mov
test
cli
daa
mov
mov
mov
inc
cltd
mov
pop
push
andb
aas
cmp
add
in
push
jge
push
and
jp
mull
xchg
enter
add
test
mov
fidivrl
mov
fs
jecxz
gs
mull
sub
adc
jmp
sbb
test
add
fwait
hlt
cld
xchg
in
jae
gs
dec
sub
inc
aam
lock
mov
lret
scas
adcl
out
sub
arpl
das
imul
fnstcw
movsb
shrb
add
lret
fs
or
add
jbe
pusha
sbb
cmp
add
and
cmpsb
insl
scas
inc
in
rolb
sbb
add
sub
dec
daa
and
lea
mov
ja
dec
add
out
addl
dec
cmp
cmp
mov
add
in
ljmp
std
aad
stos
jmp
sbb
xor
int
ds
inc
aad
add
inc
dec
ret
repnz
ja
les
cltd
jmp
push
add
jns
lcall
dec
add
cli
push
jle
pop
adc
imulb
scas
sti
push
fildll
fs
sub
mov
sbb
push
push
mov
mov
add
pusha
add
aad
mov
mov
xchg
or
lds
or
dec
stc
lahf
popa
jae
inc
and
andl
in
mov
jl
sbbl
jge
nop
sbb
mov
dec
sbb
lahf
xchg
fdivr
jb
add
jo
xor
add
cmp
add
mov
mov
jb
xchg
mov
cmp
sub
mov
mov
push
jo
sbb
gs
jne
notb
push
mov
pop
dec
add
cmp
push
std
loopne
mov
test
fs
sub
repz
out
lods
pop
push
outsl
sbb
js
out
or
mov
rcll
cmp
std
in
add
movl
dec
add
in
filds
add
enter
adc
jo
jl
shr
mov
iret
int3
pop
sbb
push
aad
in
fstpl
pop
rolb
add
call
pusha
fisubrl
in
pusha
sub
dec
test
mov
push
mov
movsl
cmp
rorb
and
add
lahf
inc
test
or
imul
dec
adc
mov
dec
test
push
add
or
xorb
add
loop
add
shlb
dec
daa
sub
cld
mov
sti
loope
orb
ret
add
mov
sbb
or
pop
add
and
sbb
cmp
hlt
in
mov
mov
shlb
dec
inc
add
mov
add
mov
aas
add
iret
add
dec
push
mov
das
orl
add
cmp
aas
or
ret
adc
in
xchg
jb
and
inc
rorl
add
push
push
add
add
test
add
call
dec
outsl
pop
sbb
pop
mov
add
cmp
ret
negl
mov
cli
out
push
bound
cmp
loop
add
lock
sahf
hlt
hlt
mov
in
fistps
das
sti
sub
in
icebp
clc
adc
fisubrs
clc
jno
mov
mov
mov
leave
inc
fsubrs
add
push
int
inc
inc
add
or
push
mov
lods
add
add
lock
adc
ret
dec
lock
lods
mov
mov
insb
add
into
pop
add
mov
add
jae
dec
mov
inc
or
jmp
xchg
cmp
xchg
add
push
xchg
fldcw
stc
rcrl
rcr
xor
insb
pop
enter
cmp
pop
roll
dec
roll
xor
cwtl
add
das
negl
add
and
dec
iret
aaa
mov
fldcw
pop
cli
pop
pop
mov
out
outsb
mov
pusha
push
lahf
push
xor
shrl
jl
loopne
inc
out
mov
jo
add
hlt
add
ret
ljmp
stos
test
outsb
cmp
in
push
pop
in
inc
pusha
add
pop
ljmp
cmpsb
pop
lea
int
jp
leave
push
test
scas
adc
fsub
ror
jae
add
imul
dec
int3
cmp
mov
scas
sub
lods
inc
or
xlat
ljmp
stos
mov
incl
jne
and
add
add
addb
pop
push
repz
out
roll
pusha
mov
aam
dec
add
or
mov
vpxor
mov
lcallw
ljmp
int3
in
mov
adc
cmpsb
xor
lea
pop
xor
jns
pop
push
push
adc
mov
pop
dec
xor
je
shlb
rorb
cltd
ret
roll
xor
or
ret
lahf
popf
jo
push
mov
add
shr
inc
sub
push
das
or
push
pop
faddl
cld
mov
add
lcall
inc
incl
andl
mov
pop
in
movsl
iret
fiaddl
jae
mov
and
sbb
xchg
daa
mov
imul
xor
and
in
sbb
add
or
scas
sub
add
xor
subl
cld
icebp
dec
xchg
imul
es
stc
add
add
jp
insl
movsl
add
add
xchg
imulb
dec
in
enter
lock
push
lahf
xchg
testl
pop
mov
ljmp
fwait
imul
or
or
adc
daa
mov
mov
out
popa
aaa
fisubs
add
loop
pop
add
shll
sbb
pop
faddl
hlt
int3
sub
sub
iret
xchg
fmuls
lret
adc
add
xchg
fdivr
jp
lods
pop
and
push
test
testb
mov
sub
test
movsb
sbb
add
jnp
rolb
adc
add
xchg
push
pop
pop
or
pop
fldt
jge
stos
arpl
fisubs
fadds
jecxz
jge
mov
movsb
add
push
popa
mov
adc
mov
xchg
subb
mov
andl
add
repnz
pop
ljmp
add
in
mov
ret
les
mov
adc
add
dec
mov
lock
gs
adc
jae
shlb
and
and
lods
imul
xchg
pop
jnp
sub
dec
fists
or
imul
cld
xor
xchg
aas
movsl
fmulp
sub
jo
add
mov
jnp
imul
xchg
mov
add
stos
xorb
int
pop
or
pop
test
fstpt
scas
and
lret
lds
mov
sub
cmp
adc
mov
jmp
xor
cmp
adc
and
jo
pop
sti
dec
std
add
or
jae,pn
dec
int
dec
add
int
lret
test
push
enter
xchg
adc
add
xchg
add
jno
inc
cmp
or
movsl
push
adc
test
mov
test
iret
add
xor
jl
jmp
jmp
clc
arpl
add
sbb
cltd
addb
jmp
cli
rorl
testb
lds
sub
xor
pop
jecxz
jne
add
or
in
pop
jo
stos
mov
insl
shl
subb
add
add
cmc
push
and
add
xchg
in
sbb
jge
inc
pop
cmp
ficoms
dec
xchg
mov
push
cmp
jno
sub
cmpsl
bound
or
sub
add
add
push
dec
cmp
or
scas
in
ljmp
orl
rclb
arpl
add
sub
jne
repnz
push
lods
das
popf
push
add
test
push
xchg
out
add
lahf
loop
lods
or
aaa
jb
jmp
push
sub
lcall
in
rcrb
outsb
add
xchg
outsb
sbb
dec
jmp
mov
add
jle
xor
xor
enter
adc
mov
int3
mov
mov
out
add
push
xchg
out
push
sbb
mov
mov
sub
xchg
mov
pop
pop
pop
jle
ror
jecxz
lods
faddp
push
shll
aad
mov
leave
repnz
ret
xchg
xchg
outsb
in
mov
xor
mov
out
jns
fistps
loopne
xchg
stos
add
pop
xor
dec
jmp
jge
lods
mov
cli
mov
into
ljmp
pop
inc
loopne
stos
psrld
add
push
and
or
sbb
nop
xorl
xorb
in
leave
mov
movsb
int
pop
and
lcall
xchg
lret
decb
add
pop
dec
stos
inc
push
lahf
cmp
add
aaa
sub
mov
mov
jmp
fdivr
push
icebp
dec
cmpsl
cmp
sub
cld
fsubs
aad
leave
dec
dec
mov
xor
mov
cmp
inc
pop
add
jb
out
inc
imul
dec
ljmp
pusha
lcall
leave
lds
cmpsb
xor
xor
or
outsl
mov
popf
add
cld
xchg
jmp
dec
sbb
jmp
add
js
mov
add
fbld
inc
test
add
push
mov
insl
mulb
push
push
addb
test
mov
adcl
or
sbb
mov
aam
in
dec
or
stos
mov
nop
das
xor
ds
sbbl
adc
cmp
inc
or
add
jne
xchg
xchg
mov
enter
je
push
data16
dec
jno
xchg
sbb
cmpsb
mov
add
mull
pop
in
lock
ret
lret
cmp
cmpsl
xchg
leave
daa
add
mov
movsb
pop
add
lret
popf
cmpb
nop
mov
nop
cs
add
mov
aas
mov
cmp
mov
pop
add
imul
lds
out
push
dec
aas
sub
sbb
xchg
mov
push
jg
popf
dec
insb
cli
jbe
pop
inc
add
and
fcomi
or
outsl
hlt
pop
mov
pop
test
push
imul
dec
cmp
std
fcmovnb
xor
test
sbb
jge
mov
cld
mov
sti
cmp
jns
pop
xor
fwait
cld
test
sbb
inc
cli
in
inc
shl
jb
dec
stos
pop
mov
pop
mov
sub
ret
sub
xor
add
js
push
out
push
sbb
lods
jp
nop
push
dec
cmpsl
pop
push
ja
dec
add
xchg
popa
imul
aas
inc
push
cmpsb
cmp
ljmp
inc
mov
mov
push
mov
jbe
lods
adc
jmp
mov
add
add
outsl
insl
jno
mov
mov
mov
pop
sbb
jmp
and
addr16
xor
sti
fs
imul
push
jo
rorb
cmp
xor
mov
adc
push
lods
push
adc
cli
orl
or
sub
jmp
ja
inc
jg
je
jg
or
outsb
outsb
push
cmp
lret
xor
cmp
add
enter
popf
outsb
mov
cs
pusha
push
std
mov
jle
mov
aam
xchg
inc
cmp
mov
repz
rorb
fcomps
cli
fnstenv
xchg
repnz
sbbb
push
add
sbb
dec
mov
test
leave
decb
or
in
fidivs
loop
xchg
cmpsl
mov
xchg
bound
loope
fadds
push
addr16
and
roll
mov
imulb
dec
mov
xchg
pushf
lock
fxch
loope
mov
sbb
cmp
xchg
js
push
add
and
push
mov
push
xor
mov
xchg
and
dec
mov
sbb
pop
aam
and
ret
fldenv
sub
mov
es
sub
adc
dec
test
mov
pop
mov
cld
in
es
jno
dec
mov
mov
ja
insb
push
add
add
dec
pop
or
in
and
mov
imul
mov
or
pusha
cmpsl
outsb
dec
xor
ltr
mov
lcall
ret
jbe
push
mov
insb
jmp
aas
xchg
push
enter
mulb
xor
flds
push
lods
stos
data16
in
shlb
fidivrl
cmp
in
push
jnp
repnz
add
and
mov
add
add
sbb
scas
mov
cmc
int
movsl
add
hlt
mov
outsl
add
nop
inc
imul
test
push
or
ss
aas
jnp
cmp
hlt
dec
cld
or
jne
mov
fsubs
and
lcall
and
cmp
lods
dec
xchg
xor
lret
sub
pop
cmp
add
add
pop
push
mov
mov
sti
hlt
add
xchg
ja
cltd
pop
jo
mov
lahf
push
das
pop
sub
ss
addb
fldl
cltd
mov
and
inc
cmp
clc
test
xor
es
dec
inc
push
sbb
add
stos
cld
xchg
sbb
dec
push
arpl
test
mov
and
jg
xor
pop
jo
fimull
ss
ljmp
mov
iret
jnp
add
incl
int3
xchg
popf
mov
push
in
icebp
out
rcll
cmpsb
dec
add
lahf
scas
sarl
add
bound
ret
and
lds
verr
jno
mov
test
push
xchg
inc
aad
test
and
pop
add
push
mov
es
dec
pushl
fwait
pushf
and
push
xchg
add
jae
add
int3
mov
adc
testl
jb
mov
cmp
fildl
out
mov
jmp
fwait
adc
scas
xchg
idivl
mov
hlt
inc
hlt
cld
mov
adcl
add
dec
ret
insb
jge
ja
adc
add
cmp
and
loope
and
mov
add
adc
jne
push
pop
xchg
in
ds
add
fdivs
test
std
xor
rol
xor
pop
fsub
adc
lret
sbb
lcall
mov
js
add
inc
adc
fadds
addb
and
jge
daa
addr16
filds
lods
hlt
andb
mov
shll
hlt
push
inc
ret
xchg
adc
adc
pop
inc
sub
ret
xor
adc
sub
aad
add
sbb
or
in
or
cmp
mov
daa
ja
fadd
hlt
add
fdivrs
pop
daa
lds
cltd
xor
in
push
xchg
push
pop
pusha
fwait
xchg
imul
jecxz
test
loopne
jmp
repnz
add
fldenv
pop
repnz
adc
jns
add
sub
ds
pusha
cltd
push
mov
mov
loope
add
add
pop
fcmovnbe
push
add
pop
in
out
sti
adc
testb
and
and
jp
enter
mov
sub
mov
add
mov
xor
hlt
add
xor
and
add
add
aam
shrl
mov
pop
pop
int
in
xor
popf
xor
dec
rclb
mov
dec
cs
jnp
pop
xor
sbb
mov
shlb
inc
cltd
fsub
add
test
xor
xchg
push
jns
clc
jmp
inc
add
mov
ljmp
add
ss
fists
jne
cwtl
adcl
sbb
stc
xor
adc
outsb
add
sbb
cmp
jp
aaa
push
into
add
or
add
iret
fidivs
lret
int3
orl
sti
stc
mov
int3
cmp
aaa
add
sti
pop
jno
arpl
inc
shlb
lret
fsubs
mov
xor
cmp
out
in
push
xor
mov
lret
js
add
sub
pop
add
fiaddl
cld
cld
aam
gs
shlw
mov
fbstp
jbe
inc
add
das
stos
adc
sbb
mov
pop
dec
add
repnz
fs
inc
add
mov
or
xchg
cld
fldt
jnp
jle
rorb
push
pop
jecxz
repz
popa
xor
dec
aaa
sarb
enter
scas
pop
fwait
mov
or
inc
decl
shld
mov
or
push
add
incl
ds
ja
and
add
inc
lods
mov
std
dec
mov
mov
dec
rorb
and
jp
add
jmp
cmp
pop
mov
shlb
mov
add
testb
jecxz
push
jno
add
fiadds
fsubs
push
push
mov
xchg
stos
out
add
push
rolb
test
fs
shl
std
packssdw
lods
push
mov
cmp
out
push
cld
jmp
jo
imul
ficoms
cwtl
roll
sub
scas
sti
add
int
aaa
add
ss
subl
ljmp
xor
dec
shrl
iret
push
and
add
pop
add
push
iret
fistpl
in
add
clc
jb
in
add
inc
cld
adc
stos
sub
jmp
xlat
pop
sub
scas
adc
inc
adc
add
or
xor
pop
fisubrs
mov
mov
add
jl
pushf
and
jno
add
aaa
add
add
fnsave
insb
lret
and
inc
or
repz
push
mov
addb
or
and
aad
or
dec
add
mov
inc
xor
sub
ljmp
mov
lahf
sbb
push
fistpl
jno
frstor
pop
scas
and
aam
adc
sbb
xor
add
sub
mov
inc
xchg
pusha
mov
jb
ret
sahf
pop
lea
mov
stc
pop
imul
das
lds
faddl
lock
js
gs
repnz
sti
leave
cwtl
popa
enter
mov
cs
mov
pop
aad
sub
add
addl
adc
mov
movsl
fisubrs
ljmp
jle
mov
mov
sub
mov
dec
mov
aam
jmp
jne
in
push
ja
jb
js
pop
daa
adc
test
dec
out
xchg
jp
sub
inc
mov
cmc
cwtl
out
in
and
out
jmp
xchg
rolb
out
add
xor
add
incl
pop
pop
movsl
add
stc
and
cmpsb
mov
sbb
jne
adc
or
cmp
xchg
jbe
mov
rol
jmp
lock
lock
adc
cmpsl
cltd
push
out
xchg
rorb
sub
jb
add
adc
dec
enter
andl
sbb
push
lret
jne
and
jge
or
mov
sub
add
jne
cmp
inc
inc
add
sub
adc
and
hlt
lods
sub
mov
pop
push
je
int
mov
sub
add
rolb
out
loope
movb
imul
test
mov
pop
xchg
loope
call
mov
mov
pop
add
aaa
cmp
fmuls
lahf
out
mov
ret
pop
cmpl
add
add
and
sub
cltd
outsl
jg
jne
out
pop
add
loop
xor
loope
jecxz
dec
nop
movl
sbb
and
push
lret
test
xchg
mov
movsl
add
inc
repz
aad
push
adc
insl
dec
add
shll
hlt
cmp
cmpsl
mov
mov
xor
jle
xchg
add
or
popa
repnz
mov
dec
insl
sub
test
add
arpl
cli
mov
push
inc
mov
add
cmp
lods
lcall
add
in
xchg
jp
sarl
leave
scas
push
sahf
imul
shll
negl
je
out
lock
add
add
dec
arpl
scas
mov
divb
xor
add
add
push
push
decb
insb
inc
pop
ret
loopne
xchg
adc
sub
push
xchg
loopne
add
or
or
or
xlat
add
test
int
adc
loope
outsl
nop
and
inc
mov
dec
or
push
jle
lahf
aaa
jne
imul
lock
jb
add
lds
out
lods
idivl
push
and
and
dec
call
xor
lock
addr16
pop
sbb
cmpsl
jo
mov
mov
int3
inc
sub
push
mov
dec
pop
mov
cwtl
mov
jle
stos
fadds
or
and
cmp
jle
jo
add
jb
inc
cmp
lahf
inc
push
iret
cwtl
iret
fcoms
inc
int
add
jp
jne
je
xlat
sub
fwait
shrb
cld
jg
xor
jp
mov
mov
out
mov
add
mov
pop
sbbb
in
call
push
sub
or
and
popa
in
out
add
or
mov
out
add
or
pop
daa
dec
cmc
pushf
test
daa
adc
or
adc
ret
fsub
test
psrad
push
push
call
sub
xor
push
push
ss
pop
add
dec
popf
pop
pop
testb
push
lods
js
sub
add
int
push
add
push
add
cmpsb
rclb
add
pop
inc
pop
cmpsl
out
cmp
mov
xor
add
and
add
sub
icebp
pop
popa
add
add
sub
stos
add
add
in
cmpsl
jb
xor
and
mov
arpl
stos
incb
jne
push
dec
cmp
pushl
lods
push
repz
add
add
xchg
add
lea
add
cltd
fcmovnbe
dec
pop
sub
add
std
cli
sub
shll
int
sti
imul
stos
stc
and
pop
andb
lahf
subl
insl
cmp
xchg
lds
fwait
clc
aas
arpl
cwtl
add
mov
insb
add
leave
mov
pusha
jbe
mov
dec
xor
sub
cmpsb
jle
ljmp
xor
mov
pop
jne,pn
adc
pop
daa
mov
jno
jne
sbb
mov
and
sub
repz
xchg
aaa
std
dec
sub
xor
push
rol
pop
inc
sbb
add
mov
setnp
cmc
inc
add
cmpsl
pop
cli
cs
inc
add
sbb
stos
ret
in
cltd
faddl
mov
mov
add
rcl
and
scas
push
add
cmp
push
pop
ret
add
xchg
in
lods
add
dec
out
shlb
mov
repz
or
lahf
push
addb
and
adc
test
pop
push
test
lret
outsl
je
sarb
into
fildll
push
fimull
mov
mov
xor
or
ja
add
imul
in
cld
fwait
add
add
push
fadd
in
out
insl
or
aad
sahf
mov
mov
push
or
fisubrl
stos
or
cmp
lea
push
push
or
push
outsl
mov
dec
fisubrs
cmp
mov
out
rorb
cmpsl
jo
adc
jecxz
testl
push
pop
jnp
jnp
add
sbb
jmp
loop
ja
iret
mov
inc
icebp
push
or
bound
dec
gs
fisubl
scas
mov
or
sub
hlt
dec
nop
lods
jno
adc
jbe
test
adc
leave
stos
dec
xchg
add
dec
inc
outsb
pop
in
add
push
mov
in
or
sbb
repnz
add
fistps
in
pop
pop
dec
clc
jb
and
push
das
adc
xchg
pop
nop
stos
push
pslld
stc
test
out
push
pop
scas
adc
or
push
dec
pop
out
bound
icebp
mov
ror
or
sbb
add
or
dec
jecxz
add
xchg
sbb
mov
aad
xlat
or
mov
das
add
mov
movsl
push
inc
cmp
adc
test
xor
cwtl
push
pop
rcl
dec
push
pop
pushf
mov
imul
lods
pop
aas
sarb
add
out
leave
ja
xchg
movd
lock
add
add
inc
xchg
mov
xor
movsl
adc
dec
ljmp
mov
jbe
sti
divps
add
xchg
or
in
or
xchg
push
pusha
mov
add
out
jmp
add
pop
and
lods
inc
rcrl
add
push
xchg
pusha
cmp
pop
jne
loop
add
add
lods
daa
enter
ljmp
inc
mov
add
cmp
int3
fisubs
dec
mov
push
push
in
jg
jno
inc
jle
stos
add
fwait
ret
mov
cmp
xchg
xchg
add
mov
enter
add
pop
pop
jo
cmp
movsb
cmp
mov
and
cli
add
lahf
test
testb
adcb
push
add
mov
stc
pop
insb
mov
add
cmc
out
sub
adc
inc
pop
pop
push
ds
mov
cmp
jg
xor
add
test
les
add
leave
push
pushl
push
lods
jbe
add
pop
mov
fwait
add
inc
out
push
inc
jg
out
jne
add
push
jp
add
sub
fiaddl
xor
pop
cmp
testb
addl
cmp
les
les
add
addb
inc
andb
mov
add
or
jge
ja
pop
jo
adc
xor
data16
inc
cmp
scas
xchg
add
cmp
add
mov
xor
aam
sbb
xchg
sub
hlt
inc
push
sub
pop
bnd
add
mov
fmuls
add
pop
outsb
loopne
push
ljmp
push
add
dec
out
loope
push
inc
add
iret
insb
imul
gs
mov
leave
push
mov
lds
fcmovnbe
subl
push
add
clc
lds
lahf
pop
std
mov
xor
mov
adc
add
jne
lods
xor
je
xchg
call
jg
cmp
fs
sub
ret
push
outsl
add
js
mov
mov
add
in
cmpsb
outsl
jecxz
and
aaa
xor
popa
lock
xor
outsb
inc
mov
fimull
pop
test
popa
mov
ficomps
push
mov
aaa
call
mov
fwait
push
sbb
icebp
pop
iret
cltd
lock
std
mov
out
and
mov
mov
shrb
lods
mov
filds
pop
mov
push
inc
scas
addb
add
inc
xor
add
xchg
out
lcall
hlt
jl
add
orb
outsb
iret
std
or
add
inc
mov
xchg
stos
sub
jo
jle
or
add
inc
xlat
ret
into
add
sub
test
fdivrl
push
das
xchg
add
std
push
sarl
push
push
sbb
xlat
and
popa
pushf
add
or
lret
stos
int
add
xor
insl
xchg
jp
add
in
add
int
mov
cmp
push
mov
add
mov
lods
fidivrl
cmp
add
add
test
add
rep
add
mov
jnp
loop
pop
dec
push
ja
xchg
ret
fldt
in
mov
arpl
inc
mov
shlb
pop
in
leave
mov
sbb
in
and
jne
loope
or
cmc
scas
dec
mov
pop
clc
or
or
pop
mov
xor
rclb
imul
xchg
das
mov
fldenv
add
add
xor
xchg
arpl
xchg
movb
ret
nop
roll
repnz
xor
mov
clc
or
cmp
sahf
fldenv
add
aad
xor
jmp
rolb
insl
into
nop
std
roll
test
xchg
mov
inc
cmp
push
scas
sti
pop
fsubrs
stc
mov
cld
int3
lret
jl
cmp
mov
xchg
imul
and
loope
pop
add
dec
cli
mov
jns
jge
add
pop
add
js
push
mov
xor
add
mov
in
xchg
add
pushf
popf
push
inc
jle
add
mov
mov
in
add
and
sbb
in
mov
xor
push
fnsave
nop
adc
iret
sbbb
push
orl
lcall
add
xor
mov
mov
test
sub
or
fnsave
add
ds
xchg
mov
mov
scas
popa
push
add
mov
mov
aas
jne
adc
dec
push
add
xchg
pop
add
add
pop
xchg
jmp
mov
sti
sahf
add
incb
ss
lods
enter
pop
sti
aad
add
xor
add
pop
mulb
adc
insl
adc
lahf
push
inc
pop
inc
jg
nop
rcl
cmp
test
pop
mov
xorl
mov
pushf
test
and
jp
push
insb
lret
add
stos
leave
lods
push
lock
add
jg
cmc
mov
add
pushf
sbb
sbb
sub
rorl
mov
jecxz
scas
mov
pop
inc
or
sub
add
cmp
pop
std
fwait
mov
add
xchg
add
pop
les
addr16
add
dec
add
scas
loop
lods
insl
or
call
nop
in
mov
push
add
inc
int
mov
ret
pop
test
lds
movsl
add
lods
mov
fs
movsb
cld
nop
xor
pop
pushf
mov
sbb
pop
out
shl
imul
dec
cmp
shll
jmp
adc
mov
bound
nop
jnp
push
cs
xor
lods
fnstsw
push
mov
stos
push
lds
icebp
cli
add
pop
xchg
aaa
xor
nop
pop
mov
lret
frstor
cmp
add
cld
cld
scas
std
lret
leave
hlt
aad
jmp
or
dec
add
iret
jecxz
rcrl
add
inc
jge
inc
imul
out
adc
daa
mov
add
xchg
cmpsb
pop
dec
aam
int3
sbb
in
addr16
outsl
bound
add
add
jecxz
dec
daa
imul
mov
out
mov
push
lahf
mov
cwtl
std
arpl
cmp
popf
jmp
loop
dec
mov
jge
mov
xchg
sbb
cmp
or
xor
add
iret
sahf
shll
sub
mov
or
fs
pop
in
or
push
push
out
inc
lcall
ljmpw
and
ds
clc
out
pop
mov
inc
xchg
pushl
adcb
xchg
inc
insb
in
daa
aaa
add
and
dec
and
repnz
jne
stos
or
jbe
insb
or
xor
test
call
add
add
or
add
jecxz
imul
add
xor
mov
popa
sldt
add
bound
inc
mov
arpl
mov
pop
jmp
lock
ror
das
mov
push
add
roll
pop
add
pop
in
out
in
gs
and
ja
add
dec
cmp
sbbl
xchg
loope
mov
mov
fiadds
jl
push
cmc
leave
pinsrw
flds
add
mov
xor
add
lret
jge
lods
out
shlb
and
add
xchg
das
insb
jb
ret
dec
push
in
mov
and
xchg
pop
inc
push
xor
pushf
sub
mov
add
cs
iret
mov
push
xor
mov
pop
add
pop
mov
imul
sub
or
add
add
xor
cmp
je
insl
setbe
xor
dec
add
and
and
mov
xchg
cli
test
cwtl
addl
mov
std
add
pushw
mov
add
mov
pop
out
mov
push
sbb
and
sub
das
add
aad
subb
cmp
popa
or
add
pop
dec
mov
sahf
sub
lods
out
mov
mov
fstl
inc
je
add
aas
add
mov
lea
pop
in
pop
xchg
into
adc
add
in
pop
xchg
rcr
add
add
add
faddp
xchg
push
add
roll
mov
lret
add
add
ss
jp
flds
jns
lds
dec
lds
aad
je
mov
shr
mov
add
fcomip
and
test
push
mov
pop
stos
mov
fidivs
add
jno
xor
js
shlb
jmp
rcl
dec
hlt
and
repnz
jle
out
xor
jno,pt
xchg
mov
mov
imul
in
cmp
fadds
sbb
testl
ret
or
lret
pop
add
cld
hlt
aad
mov
add
lock
sbb
divb
xchg
add
sub
movsb
add
nop
dec
push
pop
stos
test
mov
sbb
adc
shrl
jl
add
adc
stos
and
add
je
pop
adc
push
ret
add
int
push
jge
fsubl
fistpl
pop
xor
loopne
or
inc
sbb
rcrb
or
jo
ja
hlt
dec
xor
into
sbb
xchg
pop
fldcw
fsubl
in
xor
dec
mov
and
jecxz
fists
pop
loope
repz
rolb
mov
jns
cmpsl
test
je
push
mov
adc
pop
mov
ljmp
in
jle
or
sbb
push
jp
xor
and
add
cli
popf
add
push
push
imul
ficoml
add
lret
loope
add
test
fld
stos
cmc
sub
add
sti
add
xor
sbb
add
jns
sbb
mov
cmpsb
jle
js
mov
jecxz
xchg
add
sub
scas
ss
adc
les
fistpll
cwtl
add
jbe
nop
and
add
imul
jle
add
lds
xchg
pop
cmp
out
mov
add
cmp
leave
jecxz
sahf
sbb
scas
lods
push
arpl
sbb
fiaddl
pop
cmp
sub
xchg
mov
pop
ficoml
out
pop
in
lahf
pop
neg
pop
clc
add
iret
add
into
ja
add
xchg
orb
jnp
dec
push
adc
pop
jb
stc
leave
adcl
rolb
dec
and
int
push
and
rolb
mov
xchg
ss
xchg
test
mov
and
pop
repz
fldt
dec
add
add
xor
adc
mov
add
movsl
push
jecxz
in
inc
add
dec
mov
or
dec
or
push
hlt
testb
xchg
inc
cli
add
aas
mov
dec
mov
movsb
add
sbb
add
jo
fidivrs
jmp
pop
int3
pop
pop
add
loop
inc
xor
add
xchg
pop
xchg
enter
call
out
add
cmp
mov
xchg
pop
add
mov
lods
lods
add
shlb
pop
mov
push
popa
jno
inc
sub
xor
stos
imul
ljmp
add
add
in
jns
push
add
add
and
jl
cmp
mov
mov
inc
xchg
jae
mov
fnstsw
push
cmpsl
jle
cs
or
or
push
mov
shrb
imul
ret
imul
cmc
pop
add
add
mov
cmp
mov
and
sbb
cmp
sub
addb
add
add
sbb
mov
inc
aaa
sbb
add
push
dec
fiadds
jecxz
mov
sub
mov
add
add
xchg
xchg
and
inc
ds
sub
jne
add
add
cwtl
push
movsb
xlat
xchg
jb
loope
aam
add
lock
scas
or
mov
jne
and
icebp
lret
add
jo
adc
xchg
scas
cmp
int3
insb
sub
mov
add
and
xchg
inc
and
fidivrl
into
jg
jb
test
adc
bound
mov
rcrb
mov
xlat
jns
jb
ficoml
or
mov
outsl
dec
pop
lret
test
sbb
sbb
enterw
sub
or
pushf
add
stos
jg
xor
cmp
and
and
outsl
push
inc
or
jecxz
outsb
pusha
mov
je
mov
movsl
imul
jg
xchg
stc
cltd
ss
mov
sub
dec
mov
xor
add
imul
jle
add
out
jne
addr16
dec
leave
add
jecxz
daa
jb
add
or
lret
mov
jmp
lods
fwait
push
jne
dec
test
adcb
pushf
loopne
andb
stos
fldl
cmp
sbb
call
cmp
les
xor
stos
add
add
pusha
in
adc
test
cmpsl
fs
cmp
xor
or
lea
add
sub
shl
xchg
push
or
xor
in
mov
test
jns
cmovs
dec
mov
pop
or
or
mov
inc
imul
test
inc
jbe
sbb
cltd
add
dec
test
add
push
xorl
pop
addb
aam
sub
push
jns
ja
pop
add
sub
push
sbb
dec
and
add
rcll
inc
fiaddl
inc
shl
ljmp
push
loop
out
jge
loope
cld
dec
dec
pushf
cmp
sbb
movsb
fisttps
ror
lds
adc
shl
outsb
cmpsb
add
pop
xchg
add
add
mov
push
and
ret
out
std
dec
add
add
add
mov
dec
and
lds
add
add
enter
jns
add
rcll
add
add
lcall
xor
rolb
jns
ficoms
popf
cmpsb
sbb
arpl
cmp
jo
into
dec
add
add
js
push
int3
ds
ret
jmp
add
xor
dec
lea
and
pop
sar
adc
dec
or
and
add
mov
mov
das
inc
aas
out
adc
add
add
adc
jno
add
mov
jnp
xor
sahf
xor
add
jae
fistl
inc
push
faddl
xor
xchg
repnz
loopne
add
xor
jl
imul
and
pop
lods
je
cmpsl
add
sbb
in
out
or
jns
add
xor
ds
pop
add
stc
dec
nop
cmp
xchg
pop
dec
out
push
jg
mov
sti
pop
pop
mov
push
mov
push
cmp
hlt
mov
mov
jno
xchg
in
nop
out
add
sub
arpl
filds
test
and
in
cmp
pop
mov
sub
fmulp
in
or
sub
push
aam
mov
mov
xor
movsb
push
lret
sub
cmp
divl
mov
dec
cli
sti
pop
cmpsb
les
pop
stc
mov
adc
adc
stos
add
cmp
ret
xchg
cmpsl
leave
aas
add
and
add
pop
and
ljmp
mov
out
and
cmc
jmp
leave
inc
xor
movsb
pop
add
dec
mov
movsl
outsb
icebp
int3
aam
mov
add
fwait
xor
aad
mov
inc
lods
icebp
xor
lds
add
cltd
inc
mov
test
add
rcrl
and
incb
mov
outsl
mov
loop
add
repz
call
cmp
mov
sub
leave
xchg
testl
sub
cmp
mov
enter
inc
outsl
push
rcrl
mov
add
enter
mov
lret
push
and
cs
push
xchg
bswap
sub
rcrb
ss
movsb
in
add
scas
aad
stc
add
es
xor
mov
mov
xor
pop
add
add
das
add
add
iret
outsb
into
cli
addr16
add
lods
idivl
lds
jg
jecxz
out
and
aam
xchg
and
outsb
add
jnp
cmp
add
shr
fbld
mov
dec
popl
add
push
mov
push
std
dec
scas
out
mov
fdivrl
add
mov
sbb
inc
icebp
test
dec
les
xchg
sub
cwtl
push
cltd
and
add
or
push
push
push
jmp
mov
add
push
pusha
add
ret
sub
movsl
test
flds
bound
inc
or
dec
cwtl
fiaddl
loopne
incl
cmp
lret
push
cmpsb
mov
cltd
and
mov
xor
mov
cmp
sub
inc
mov
mov
into
lea
mov
int3
push
pop
mul
push
mov
mov
add
sti
in
and
mov
mov
adc
stos
cmp
adc
dec
adcb
mov
jno
xlat
add
cmpsb
aaa
or
mov
mov
add
dec
push
jmp
xor
push
xchg
in
sub
in
push
mov
movb
adc
fisttps
xor
mov
leave
mov
mov
add
inc
push
add
mov
xor
stc
nop
in
mov
push
and
dec
mov
jge
in
sub
cmp
mov
in
ja
push
mov
pop
fildl
pusha
aam
push
sbbl
and
jmp
scas
pop
inc
rcll
sub
push
add
cmpb
and
sub
pop
andl
inc
push
push
nop
cltd
shrl
je
ss
imull
sub
loopne
push
add
add
inc
mov
outsb
xor
lods
xchg
lcall
jnp
xor
or
incb
test
push
mov
sub
push
out
ja
testl
ret
push
dec
push
pop
cltd
xchg
fwait
and
and
inc
add
sahf
pop
stc
ja
pop
dec
outsl
and
and
pushf
push
xchg
imul
ds
dec
pop
int3
mov
movsl
dec
sub
jo
mov
pop
roll
mov
cmp
add
pop
ret
push
cli
aaa
hlt
lret
popf
fiaddl
xor
dec
pop
cmp
jb
popa
cwtl
shrb
add
add
xchg
ja
pop
int3
mov
xor
shll
cwtl
xchg
xchg
out
push
pop
and
mov
mov
cmp
jne
mov
inc
loopne
mov
sbb
xor
mov
scas
out
fadds
je
les
add
inc
mov
lret
adc
mov
cmp
or
add
imull
scas
sub
fcomi
adc
cmc
add
mov
dec
sub
pushf
mov
jg
mov
mov
add
icebp
mov
mov
rolb
mov
arpl
jb
push
adc
sti
xchg
dec
subb
mov
pusha
mov
add
dec
in
mov
nop
pop
shl
add
lea
push
mov
pop
jmp
mov
arpl
aaa
inc
xchg
loope
push
mov
sbb
add
lret
cmp
jp
hlt
lock
xor
cmp
les
adc
in
pop
inc
mov
pop
add
mov
ljmp
add
cmp
roll
mov
dec
pop
fisttpll
xchg
push
pop
mov
pusha
andl
add
add
nop
cwtl
lds
test
dec
push
mov
sbb
ffreep
or
mov
jno
pop
xchg
dec
cmpsb
test
xchg
add
outsl
fstps
or
sbb
cmp
sbb
incl
movl
push
fisttpll
mov
add
pop
and
daa
dec
mov
add
incl
aam
mov
pop
xchg
and
cmp
aad
sub
int
jl
mov
mov
pop
mov
push
mov
xor
xor
adc
outsb
sbb
imul
aaa
inc
fstpl
stos
add
or
push
add
adc
cmp
sbb
sub
lds
scas
push
andb
insl
add
cwtl
inc
lods
jecxz
dec
ljmp
pop
test
test
sub
add
ret
push
xchg
mov
sti
enter
lahf
roll
sub
adcb
sarl
adc
aam
ficompl
ret
ret
and
add
push
cmp
cmp
sarl
xor
xorb
push
cltd
jbe
repz
adc
add
mov
xchg
mov
fisttps
loop
js
iret
add
dec
addr16
int
push
loope
push
icebp
pusha
jge
nop
int
pop
jmp
je
sbb
or
mov
cli
hlt
push
push
bound
jno
xchg
cltd
push
pop
fs
in
fld
ja
push
fs
daa
mov
push
xchg
fwait
inc
rcrb
lret
pop
sub
sbb
add
xchg
pop
lret
and
mov
ja
jmp
pop
pushf
test
call
movsb
xor
adc
xchg
push
es
rol
push
je
call
orb
cmp
pop
push
mov
add
sbb
add
fiaddl
dec
enter
add
outsb
add
mov
cmp
je
pushl
add
xor
rcl
cmp
pop
lods
pop
xchg
and
js
popa
inc
fwait
jbe
aad
dec
xor
push
fldenv
xchg
cmp
cli
data16
les
inc
cmpsl
lret
jle
inc
adc
add
add
push
subl
jg
sbb
xor
and
xor
mov
xchg
lahf
push
add
dec
and
lock
pop
xchg
fisttpll
sbb
iret
sbb
pop
aas
js
popf
or
sub
bound
add
sub
or
mov
and
fdiv
mov
add
or
pop
jmp
mov
pusha
shlb
push
inc
xor
popa
add
or
js
sbb
in
fs
rolb
adc
pop
pop
aad
mov
stc
mov
std
mov
ret
fsubl
fs
and
outsb
loop
add
lods
inc
fs
lods
call
sbb
add
cmpb
into
cmp
sub
out
inc
test
fiaddl
add
aas
mov
pop
add
add
mov
outsl
popf
pusha
pushf
jge
or
out
les
mov
rcl
dec
fwait
sub
cwtl
mov
dec
into
fs
lods
mov
or
jo
ja
fildl
pop
add
xchg
mov
cmp
sbb
jnp
sub
shlb
lock
fmuls
mov
out
push
repz
or
lret
icebp
repnz
js
test
sbb
jbe
popf
inc
loop
pop
or
pusha
add
sbb
add
jp
in
ja
mov
icebp
mov
int
leave
arpl
sub
sbb
jbe
jmp
cmc
imul
ss
add
push
ds
stc
adc
sub
sbb
xorb
mov
mov
rcrl
popa
lock
imul
xchg
xchg
popa
stos
add
pusha
in
push
mov
ja
data16
daa
push
add
sub
inc
stc
insl
mov
in
add
rclb
jl
mov
or
test
sbb
movsb
add
movsl
les
adc
add
inc
cwtl
sti
inc
and
sbb
arpl
shl
jp
hlt
add
sub
daa
ficoml
stc
jmp
fstl
push
add
mov
mov
repz
aad
jp
outsl
jg
fcmovbe
loop
jb
outsl
movl
mov
hlt
add
jbe
add
gs
xchg
std
add
cltd
pop
fildl
mov
scas
mov
jp
add
cltd
icebp
mov
incb
stos
sbb
fdivrl
jbe
add
xor
pushf
add
cwtl
mov
rep
add
movsl
mov
dec
jne
add
rolb
inc
inc
lea
add
cmp
inc
leave
lret
es
popa
cmp
loop
mov
or
pushf
andl
dec
sbb
pusha
insb
arpl
rolb
add
or
or
xchg
aaa
inc
mov
cmp
lods
addr16
push
imulb
add
shrb
sbb
test
sub
inc
pop
add
and
add
add
xor
xor
sti
inc
mov
cmpsl
dec
push
push
dec
inc
lods
push
add
add
lea
addr16
add
sub
cmp
adc
lock
sbb
dec
repnz
mov
filds
mov
gs
jmp
xchg
and
push
add
sbb
shl
ja
lahf
lea
add
dec
in
add
mov
adc
faddl
mov
lahf
mov
mov
xchg
add
inc
inc
ja
lret
mov
adc
int
adcl
add
test
mov
jns
mov
mov
dec
xchg
mov
nop
stos
icebp
incb
sbb
les
ja
negl
and
ret
push
add
sub
les
fildll
je
push
add
xchg
leave
shl
out
cs
mov
add
or
popa
cs
add
xchg
je
fwait
ja
imul
xchg
subb
mov
jo
sar
ret
jp
xorl
pushf
mov
mov
js
adcl
inc
dec
push
cmpl
loope
in
out
movb
ret
add
test
pop
mov
rcr
add
js
scas
pop
aaa
cmp
adc
pop
push
adc
dec
mov
into
and
aad
mov
push
add
mov
xorb
or
les
cmp
adc
push
data16
ljmp
and
imul
or
push
cmp
sbb
add
add
stos
shll
add
iret
sub
or
lods
sub
cmpsb
dec
and
in
int3
jae
xlat
mov
mov
je
add
popl
divb
add
les
inc
outsb
nop
add
add
sbb
jb
test
cmc
sar
push
sahf
insl
or
add
cwtl
rorb
dec
shl
aam
pop
sbb
add
push
fsubp
mov
add
loop
sbb
jmp
inc
insl
pop
testb
les
or
add
fldl2e
adc
pop
cs
xor
aam
dec
jbe
inc
mov
sub
dec
xor
jns
int
push
jbe
mov
addr16
out
add
and
or
mov
aas
add
mov
adc
add
lods
ror
push
lcall
jnp
movsl
adc
add
add
mov
or
cmpsl
cmp
lahf
xor
pop
add
fdivrl
cmpsl
std
add
xor
test
push
pop
std
xor
movl
add
test
gs
sbb
add
sti
mov
xor
fs
mov
pop
jmp
hlt
int
lret
sti
mov
in
mov
sahf
scas
lahf
pop
lods
xor
cwtl
and
adc
lahf
add
sub
fmul
scas
aad
add
fisttpl
xor
cwtl
mov
add
repnz
jge
outsl
cmp
dec
lea
add
sbb
in
pop
pop
addr16
add
lret
pop
sarb
or
push
add
imul
test
incl
shlb
add
add
dec
add
scas
add
ficompl
xor
mov
adc
jnp
mov
jnp
stos
aad
int
and
add
and
add
jmp
movsb
pop
add
int
add
mov
pop
daa
sbb
data16
in
mov
sbbb
inc
loopne
sarl
adc
and
adc
js
add
call
fs
fs
lcall
mov
or
cld
jne
sbb
dec
outsb
add
pop
mov
push
dec
je
imul
sbb
add
cmp
sahf
imul
jmp
and
ja
inc
dec
jne
jge
add
scas
cli
pushf
ljmp
inc
stc
ret
jl
hlt
outsl
movsb
inc
adcb
adc
insb
fwait
popf
push
dec
xchg
cmp
loop
aas
mov
push
loop
aaa
int
add
mov
les
jl
sbb
sti
push
int
aaa
adc
lds
data16
cld
aad
adcl
add
or
mov
dec
je
add
push
add
or
sar
mov
pop
add
cld
sbb
add
mov
lock
addb
idivb
pop
or
cli
add
test
pop
push
push
add
pop
insl
pop
cs
xchg
fnstenv
sbb
jg
fisubrs
cmp
sldt
jb
aam
pushf
sub
sti
mov
std
std
roll
popa
add
cld
push
ret
xor
lds
mov
in
into
add
shlb
push
inc
gs
mov
cwtl
and
and
loopne
mov
add
jne
dec
cmc
into
add
sbb
xchg
popa
bound
mov
mov
inc
fldl
inc
adc
add
mov
mov
add
and
dec
pop
pop
pusha
sub
flds
ret
mov
orl
pop
scas
add
nop
xchg
into
bound
cmp
imul
jle
jmp
es
sub
cmp
call
and
sti
sbb
add
xchg
call
dec
xor
adc
jne
imul
sar
out
add
sbb
loop
or
pusha
sbb
clc
add
dec
je
add
cwtl
push
sub
add
shrl
xor
out
out
lret
add
jp
adc
inc
inc
jp
add
inc
es
dec
push
test
into
sahf
adc
xchg
mov
add
pusha
cmpsb
add
fmul
add
mov
addr16
int
loopne
and
jnp
dec
or
add
pop
aas
lods
add
add
test
popa
adc
sub
pop
push
or
daa
mov
sub
scas
in
push
dec
pushl
add
aam
lods
add
inc
jg
xor
mov
pop
cmp
sub
orl
push
popa
ljmp
xor
sarl
ds
scas
ret
jge
jmp
arpl
pop
inc
movsb
imul
xor
pushf
mov
jge
dec
insb
push
sahf
das
mov
aaa
push
dec
cmc
mov
add
sub
cld
xchg
pop
ljmp
iret
push
sub
add
mov
add
add
int
lods
nop
add
mov
roll
rorl
in
enter
push
test
push
enter
lea
popa
fnstcw
add
add
lret
movsb
out
jnp
icebp
test
in
push
lcall
xor
je
inc
out
jecxz
add
mov
adc
jne
mov
add
repnz
add
mov
jne
or
push
aas
pop
mull
inc
add
mov
add
add
jne
pop
xor
add
adc
dec
lea
loop
fsubrs
std
dec
insl
cltd
push
and
lock
fldcw
add
pop
dec
stc
shll
scas
inc
daa
push
shll
push
sbb
and
aas
repnz
sub
cmp
ret
cmpsb
je
pop
xchg
lret
xchg
cld
mov
pop
fiaddl
add
add
add
stos
into
push
add
out
lods
sbb
pop
inc
mov
das
mov
and
popf
or
arpl
pop
mov
add
movsl
rolb
add
or
data16
adc
mov
add
cltd
push
xlat
movb
jge
mov
push
sbb
stos
icebp
add
add
mov
adc
inc
je
sbb
xchg
dec
add
sub
inc
xor
int
xchg
mov
out
jle
pop
dec
rolb
inc
mov
mov
mov
xlat
mov
push
add
add
jb
jmp
and
in
mov
sub
mov
sbb
xor
pop
test
pop
add
xchg
leave
ljmp
popf
in
fwait
loope
ret
pusha
repnz
xor
ljmp
push
adc
cwtl
test
add
sbb
inc
js
inc
mov
lcall
fcomip
add
jmp
aam
das
bound
mov
dec
fiadds
mov
fadds
les
mov
jge
enter
cmp
incl
mov
sub
js
add
dec
sbb
push
in
adc
cmp
mov
mov
add
fdivl
orl
cmp
aad
es
loopne
divb
add
ja
clc
or
push
pop
mov
mov
imul
orl
stc
mov
sbb
inc
sub
inc
dec
ret
dec
add
jle
aaa
lret
mov
mov
add
into
test
imull
adc
add
add
aas
dec
push
stc
jmp
xchg
ret
cmp
insb
pop
adc
mov
add
stos
mov
imul
fs
push
jp
sbb
mov
add
cmp
pusha
add
lock
add
lcall
mov
sub
push
fnop
mov
iret
cli
push
mov
clc
xor
std
imul
lds
test
add
mov
xor
mov
and
inc
stc
mov
dec
repz
dec
dec
xor
and
sti
insb
push
in
add
mov
lock
xorl
or
jl
shrl
mov
cwtl
xor
cmpsl
xchg
ss
push
and
out
inc
mov
imul
jae
jle
add
sbb
xor
mov
push
add
orb
mov
pop
repz
add
lods
cmc
and
sahf
lods
out
cmp
dec
lods
adc
popf
xchg
out
add
xchg
adc
pop
int
and
mov
aas
add
jo
and
cmpsl
xor
out
add
xchg
and
daa
cmp
aaa
insl
and
in
adc
addr16
xor
sbb
gs
and
in
lahf
out
icebp
add
xchg
es
rclb
xor
push
scas
mov
jp
and
cld
movb
rcll
add
cld
mov
add
mov
gs
arpl
pop
movb
add
pop
xchg
mov
or
add
fadd
push
push
in
mov
cmpsw
mov
jge
sub
jmp
fwait
addr16
int3
add
fsub
mov
mov
cs
insl
push
mov
cmp
nop
lret
hlt
data16
cmp
les
add
pusha
and
mov
pop
add
insb
xchg
add
add
push
in
int
add
sti
ja
jmp
fdivs
or
sti
mov
push
mov
adc
lods
test
sbb
add
mov
mov
mov
ds
mov
xchg
dec
and
add
dec
lret
xchg
cmc
clc
add
imul
cmp
add
push
ds
ds
mov
stos
or
mov
jle
adc
push
push
icebp
sbb
xor
je
cmp
adc
mov
mov
in
pop
test
xlat
dec
xor
nopl
loopne
mov
std
add
fidivl
int3
xor
add
testb
hlt
xlat
push
push
repnz
inc
add
push
std
les
xchg
push
add
negl
add
sbb
add
mov
ja
sti
pop
mov
lods
add
cmp
xor
dec
push
sarb
pusha
inc
shlb
xor
add
or
test
pop
cmp
sub
or
jnp
jae
test
outsl
add
add
scas
push
in
adc
mov
pop
mov
sub
out
dec
loope
mov
xchg
add
add
or
mov
add
mov
pushf
mov
add
aaa
add
pop
outsb
pop
das
jl
icebp
jecxz
jecxz
add
aas
pop
and
fbld
test
jmp
icebp
bound
movsb
int
arpl
inc
cltd
add
pop
inc
cli
mov
sub
or
shlb
pop
xor
ret
out
mov
add
mov
pop
dec
dec
xor
mov
gs
adc
dec
xor
cmp
ss
rorl
add
adc
popa
add
hlt
in
pshufw
xchg
add
orps
cltd
int3
cmp
push
aas
aad
jae
fldt
mov
inc
add
pushf
arpl
inc
xchg
std
aaa
lret
inc
ret
xor
in
add
addr16
stos
push
test
jmp
mov
das
inc
movnti
fisubl
outsl
hlt
xchg
cmp
adc
in
in
cmp
push
push
xchg
pop
mov
std
ljmp
cs
je
push
sub
add
add
jb
pop
xchg
iret
mov
je
or
jp
xor
aad
dec
pop
push
fsubp
ds
cli
add
push
xlat
div
push
adc
rcll
adc
adc
rcl
and
cwtl
inc
daa
xchg
cmpsb
rcrl
cltd
icebp
mov
pop
add
pop
pop
mov
xchg
pop
std
movsb
and
inc
inc
imul
jns
lods
add
sbb
mov
add
aaa
add
xor
cmpsl
xlat
fs
aam
in
cmpsb
xchg
mov
sbb
cmp
pusha
nop
mov
ljmp
mov
push
loop
mov
rol
lret
mov
xchg
xchg
mov
jo
or
ficoml
and
fs
roll
ret
xor
and
add
inc
or
in
sub
add
ja
mov
xchg
add
lods
mov
mov
add
xchg
and
cmp
mov
sbb
add
add
push
add
incb
adc
xor
in
push
push
bound
xchg
add
popa
add
aas
inc
jg
jp
in
pop
insl
push
stos
inc
dec
jbe
add
cmpsl
call
ret
pop
mov
push
pop
cld
xlat
arpl
fs
je
aas
sahf
aas
cltd
cli
add
or
and
icebp
xlat
popf
cwtl
push
int3
jmp
add
aaa
shrb
andl
push
out
mov
mov
cmp
fistps
push
ljmp
add
xchg
add
mov
add
push
jnp
scas
fnstcw
fwait
xorb
ret
pop
dec
bound
fdivrl
mov
in
push
mov
sbb
sub
mov
mov
aam
add
add
ret
lds
fsubl
lds
jne
jne
ja
lret
add
rorl
jns
ljmp
xor
cmc
mov
sahf
jbe
push
pop
xor
insl
xor
das
lcall
cmp
pushf
push
jmp
fsubrl
loope
popf
push
fdivrs
nop
testl
jmp
mov
scas
scas
add
dec
nop
xchg
out
ds
arpl
call
clc
imul
or
mov
shrl
icebp
ljmp
add
or
mov
cmp
jo
mov
xlat
out
add
roll
out
mov
cmp
push
ffreep
and
add
call
mov
sub
cmpsb
repz
add
stos
add
push
addr16
push
add
mov
repz
sbb
pop
faddl
ret
outsb
jge
inc
bound
mov
in
shl
mov
mov
mov
xorb
add
add
adc
jle
aam
cmpsb
flds
push
inc
loop
shr
mov
mov
in
jno
add
nop
xchg
leave
cwtl
shlb
push
jns
aad
push
ret
sbb
nop
inc
push
stos
mov
push
fldenv
sub
adc
and
inc
arpl
add
daa
add
repnz
sbbl
xchg
lahf
mov
stc
push
inc
pop
lahf
fs
push
rcrl
fdivs
add
xor
pop
inc
adc
subb
ret
mov
or
sbb
inc
cld
add
aas
push
pop
sahf
je
out
add
test
repz
scas
test
xchg
jecxz
or
test
add
mov
cmc
jne
sub
cmp
out
adc
pusha
mov
out
insl
add
jne
test
jl
mov
mov
popa
pusha
enter
nop
into
in
mov
imulb
pop
add
fistpl
sarb
clc
cmp
add
and
xchg
sbb
outsb
sub
push
imul
add
or
xchg
xchg
sub
add
inc
ljmp
mov
add
xor
pop
scas
cmc
popa
mov
sub
lret
test
test
and
mov
icebp
test
cmp
mov
es
popa
inc
fistpll
mov
add
hlt
roll
jno
mov
mov
sbb
add
jecxz
mov
push
cmp
adc
hlt
jmp
aam
sub
mov
pop
add
into
inc
cmp
or
pop
out
out
call
jge
mov
aaa
add
pop
cmpsl
and
and
cmp
bound
data16
mov
add
push
mov
push
daa
or
mov
mov
mov
shl
push
mov
add
test
inc
jb
inc
orl
xchg
xchg
cmp
ret
ror
pop
sub
add
fwait
mov
inc
daa
inc
dec
lds
icebp
push
or
push
int3
jno
add
inc
add
adc
pop
int
xchg
jno
xchg
sbb
in
mov
sbbb
in
test
dec
add
inc
push
cmp
daa
popf
sbb
mov
pop
mov
divl
pmullw
add
push
add
scas
sub
add
std
mov
jno
add
xchg
add
imul
xchg
push
lret
add
xchg
js
addr16
cmpl
sbbb
data16
into
std
stos
lock
jecxz
add
mov
add
out
mov
push
xor
fildll
mov
add
jbe
cli
rorl
xor
add
les
lret
push
add
add
mov
xor
pop
popa
stc
cltd
roll
xchg
xchg
push
fdivrp
push
jle
jae
or
add
add
sub
add
push
jnp
dec
pop
adc
sbbl
pop
pop
xchg
add
add
out
sub
sbb
hlt
dec
lods
hlt
inc
mov
or
mov
bound
addr16
stos
cmpsb
cmp
inc
mov
mov
roll
add
inc
in
add
dec
pop
add
dec
repz
xchg
and
js
into
mov
lret
jg
mov
rolb
jecxz
jecxz
add
adc
loop
cld
and
xor
push
addr16
cmp
add
loop
push
pop
cmp
dec
xor
ds
lods
movsl
add
out
aas
iret
add
aas
imul
mov
int3
int
xchg
mov
insl
sbbl
add
xor
mov
das
mov
test
add
lret
cwtl
add
add
add
mov
add
pop
adc
mov
fdivrl
sub
sub
rorb
lcall
clc
mov
sbb
roll
call
adc
xchg
jne
in
cmp
mov
add
out
dec
and
fcmove
sub
out
xchg
xor
int3
add
mov
adcb
insl
xchg
xor
mov
xchg
inc
mov
int3
inc
lret
popw
cmp
cmpsb
xlat
mov
push
fs
adc
ljmp
inc
inc
jbe
cmc
mov
movb
add
mov
lret
add
outsb
fisubs
adc
bound
and
add
lcall
out
and
push
mov
cmc
loop
jo
sub
xchg
inc
mov
add
or
addr16
add
and
jo
and
push
pop
add
add
sub
aad
test
inc
or
out
cmpsl
add
and
push
fldl
pop
push
stos
add
cmp
add
pop
orl
xchg
add
dec
test
add
sahf
cs
cmp
fildll
xchg
dec
stc
clc
cli
lods
add
dec
mov
dec
xchg
add
mov
bswap
sbb
sub
lcall
loope
sub
hlt
or
jno
xchg
fidivs
jp
mov
cmpl
loopne
push
in
add
xor
pop
in
jmp
xor
sub
or
fisubrs
sbbb
add
or
push
es
pop
mov
das
mov
xor
loope
shrl
xchg
subl
sbb
push
in
hlt
data16
add
out
xchg
cmpsb
push
mov
scas
bound
jge
shr
adc
inc
inc
inc
add
scas
sub
xor
and
jnp
stos
mov
adc
les
add
dec
jge
mov
cmc
or
pop
cmp
mov
incl
pushf
aas
repnz
adc
mov
mov
int
popf
sub
hlt
push
pop
inc
jle
or
fidivrl
stc
sub
mov
push
aas
sub
jns
enter
add
sub
shlb
ret
xor
pop
sahf
testl
add
idiv
mov
sub
xchg
sub
sbb
xchg
sbb
and
xchg
add
mov
cwtl
stos
rol
pslld
add
xor
sub
inc
add
fs
daa
sbbl
es
repz
lea
lcall
push
adc
sahf
dec
test
adc
pop
fisubrl
movsb
pop
pop
daa
in
pushf
sub
dec
faddl
jle
sahf
jae
adc
add
xor
cmp
pop
add
cli
es
decl
cmpb
flds
pop
push
mov
mov
dec
stos
imul
rep
and
hlt
inc
shrb
shlb
repz
jg
mov
pop
jno
icebp
aad
mov
bound
lahf
add
inc
int3
push
cmp
mov
push
pop
xchg
cs
adc
cmp
addb
pop
sub
inc
adc
test
mov
out
xor
test
dec
jb
cwtl
fsub
imul
push
jl
mov
xchg
adc
insb
pop
pop
cmp
pop
mov
xchg
popf
pop
std
add
or
cwtl
or
adc
int
push
inc
mov
stos
cmpsw
mov
repz
call
mov
mov
xor
add
adc
int
lret
add
or
pushf
pop
add
in
dec
aas
jne
or
sub
dec
dec
mov
cmp
add
pop
loopne
xchg
test
inc
xchg
xchg
std
add
xor
add
dec
fisttps
arpl
dec
inc
sbb
mov
arpl
inc
cwtl
cmp
push
xor
add
leave
or
test
cltd
inc
push
dec
jmp
dec
mov
ret
mov
bound
mov
and
add
sti
dec
sti
mov
cwtl
xchg
fidivrs
xchg
mov
mov
or
mov
pop
les
add
xchg
jl
rolb
incb
pop
cmp
xor
into
fs
add
test
mov
pop
sahf
dec
fld
lods
divl
inc
dec
dec
lock
xorb
scas
add
movsb
imul
icebp
mov
inc
mov
add
sub
mov
push
inc
dec
lock
dec
testl
test
insb
cmp
stos
add
leave
js
aaa
xor
mov
push
add
sahf
out
cmp
or
inc
cmp
mov
test
add
add
xlat
push
lock
add
cmp
ja
add
mov
sbb
fsubp
pushf
push
hlt
inc
subb
scas
loope
mov
in
shl
mov
add
mov
shll
popa
adc
push
add
sub
or
into
xor
dec
dec
out
es
mov
add
mov
movb
push
bound
add
pop
add
sub
cmp
mull
in
mov
out
sub
popf
inc
cmp
pusha
jne
nop
cmpsb
add
add
dec
and
testb
add
pop
pop
push
add
add
mov
and
mov
or
lea
xlat
pop
push
loope
jae
ds
cmp
adc
jo
lds
dec
cli
aad
mov
adc
rolb
push
pop
fidivrl
dec
jae
cmp
inc
and
add
es
inc
xchg
lock
push
ljmp
loope
test
loope
loop
jnp
sbb
push
sub
add
push
cs
xlat
mov
jmp
lods
sbb
fldcw
into
push
hlt
cld
sti
fdivs
fwait
mov
pop
inc
hlt
sub
dec
adc
lret
fcmovnb
ja
xchg
pop
out
mov
leave
aad
cwtl
sahf
repz
inc
icebp
push
stos
out
sahf
test
iret
cltd
jnp
jl
inc
je
lcall
jbe
sub
daa
push
xchg
dec
and
test
fcompl
lret
popf
xchg
stos
xor
mov
sbb
push
jb
insb
out
inc
ret
stc
bound
add
add
cmp
xor
add
inc
jmp
sar
push
add
add
das
adc
and
add
dec
or
std
or
fldcw
pop
arpl
fnstenv
mov
adc
dec
cmpsb
inc
lcall
pop
sub
ret
arpl
pop
sbb
mov
in
fcompl
cmp
and
popa
sbb
cmp
push
mov
cmp
movsl
inc
push
arpl
ret
stc
jge
add
sti
pop
inc
add
mov
sti
leave
in
pushw
cmp
mov
ds
ret
xlat
dec
test
add
add
jne
mov
sub
xchg
or
das
mov
rcl
pop
mov
sub
std
push
stos
movsl
cmp
inc
add
aad
scas
test
out
iret
mov
add
jnp
jne
add
add
pop
test
mov
pusha
xchg
mov
mov
jae
xchg
fidivrl
mov
mov
test
loope
incb
add
pop
add
inc
sub
aaa
xor
and
sub
arpl
leave
cwtl
mov
dec
add
out
rorl
fistpll
mov
aad
or
sub
unpckhps
shlb
in
add
test
pusha
pop
add
frstor
add
mov
sbb
or
mov
jl
xchg
sbb
mov
cmp
adc
mov
pop
jmp
or
int
jne
dec
push
insb
or
add
mov
sbb
xor
push
sub
ss
ljmp
sub
insl
mov
mov
mov
or
dec
jecxz
cmp
mov
out
pop
fistl
push
adc
add
es
add
mov
push
fwait
stos
mov
test
scas
cmp
mov
add
add
ljmp
inc
rcll
xchg
sbb
jae
cli
lea
lods
pop
pop
pop
mov
fcmove
fimull
outsl
xchg
call
mov
push
push
popf
addr16
xchg
mov
incl
pop
mov
mov
shrb
add
fdivrs
mov
out
add
test
add
add
xchg
call
dec
push
stc
ljmp
pusha
mov
ljmp
jmp
test
pushf
sub
daa
out
add
pop
add
add
lods
add
mov
pop
roll
push
pop
repz
dec
sbb
pop
lea
jg
mov
mov
dec
clc
push
in
mov
int3
int
fistps
out
ror
cmp
enter
hlt
push
add
call
xlat
cvttps2pi
add
bound
sub
add
cld
mov
lods
js
push
mov
sbb
inc
lds
ret
sub
aas
push
pop
je
push
out
shrl
repz
and
push
das
sbb
je
adc
or
add
push
ljmp
mov
push
jb
add
cmp
das
cwtl
mov
pop
add
dec
lcall
scas
inc
push
gs
xchg
add
mov
les
mov
or
push
stc
dec
pushf
inc
fistl
sub
mov
jmp
adc
out
nop
add
out
push
cmp
cmp
cmp
add
inc
jp
loopne
mov
push
fcmovu
cmp
push
lret
lahf
aas
and
movsl
loope
and
mov
xchg
sub
add
lods
fcmovnb
pop
jnp
pop
inc
sti
scas
add
roll
jecxz
mov
enter
jecxz
out
mov
sti
cmp
xor
std
in
and
into
push
fldcw
cmp
add
sti
outsl
int3
movsl
xchg
xchg
lods
aad
mov
mov
xor
cmp
jmp
call
outsb
lods
dec
andl
mov
or
jmp
xchg
adc
fcompl
sbb
fldcw
pushf
es
mov
pusha
push
jge
je
lock
or
mov
and
adc
decl
out
les
dec
ret
mov
in
in
jecxz
cwtl
movsl
pop
jb
mov
mov
add
adc
mov
stos
mov
icebp
mov
andl
lret
fimull
pop
stos
xlat
lds
and
fidivs
rclb
add
ja
sbb
push
mov
cwtl
sbb
pop
cmpsb
ret
stos
daa
pop
mov
adc
mov
and
push
jmp
insl
add
add
bound
and
add
cmp
out
and
dec
add
add
cmpsb
pop
or
jno
jno
add
fs
in
loop
inc
lea
add
mov
mov
arpl
adc
mov
pop
push
sbb
pushf
add
add
stc
mov
jne
fldcw
lret
cmpsl
loope
shrl
push
stos
bound
fldt
add
inc
mov
leave
jp
add
fsubs
add
or
outsb
lea
sub
loopew
rcrl
jae
stc
push
in
add
xor
or
add
jno
ficompl
out
add
mov
xor
push
adc
sti
shr
jbe
scas
jnp
out
dec
fs
cmpsl
mov
and
inc
add
pop
cli
fmuls
cs
cmp
dec
add
sub
enter
pusha
push
cmp
cli
mov
stos
sbb
adc
icebp
sbb
mov
mov
or
cmp
hlt
add
cltd
adc
mov
imul
pusha
sbb
incb
jnp
mov
pushl
jge
jnp
or
repz
fistpl
sub
addr16
sbb
popa
popa
sbb
enter
sbb
das
mov
addl
mov
mov
jle
jns
std
stos
xchg
out
push
sbb
add
jns
lcall
push
mov
repz
and
stos
aad
mov
xor
ror
arpl
add
repnz
rcl
dec
lret
neg
mov
sar
lea
mov
adc
push
or
ficoml
add
add
add
loopne
scas
rol
xor
icebp
out
mov
xor
lret
mov
es
ret
pushf
mov
subl
mov
add
sbb
sub
stos
xlat
mov
loopne
push
add
rcr
sbb
jnp
sbb
xchg
sahf
mov
repnz
outsl
add
insb
mov
add
xor
inc
add
aad
mov
add
mov
dec
xchg
mov
rcrl
inc
fwait
dec
flds
xchg
jp
add
pop
mov
jle
test
add
add
outsb
mov
cmp
bound
and
add
pop
int
add
ds
mov
lds
add
push
or
shll
add
xlat
js
or
xor
mov
addb
pop
pop
add
push
dec
jno
mov
xor
loop
dec
jle
das
push
xchg
add
lahf
dec
jmp
or
xlat
or
add
add
or
in
das
add
fs
bound
inc
pushf
jns
xchg
adc
adc
jo
movsl
and
popa
xor
mov
fs
inc
loopne
shll
sub
add
sbb
mov
xchg
adcl
loope
cwtl
gs
inc
add
add
add
test
sbb
dec
add
enter
cmpsb
sub
mov
mov
inc
add
mov
mov
mov
adc
lds
add
test
mov
xchg
and
mov
jle
imul
add
pop
mov
sbb
push
xchg
popa
mov
outsl
add
xor
fwait
mov
ljmp
mov
int3
movl
cmp
and
push
pushf
and
sahf
fsubs
xor
call
add
sub
out
or
stos
mov
lea
adc
sbb
and
jbe
pop
cld
add
repnz
and
pop
push
insb
gs
xorl
cmpsl
mov
out
add
jecxz
iret
dec
call
jp
jb
sub
push
and
jl
and
outsb
push
aas
xor
mov
cmp
icebp
fsubs
xor
pop
out
xorb
imul
sub
in
imul
sub
int
add
xchg
sbb
sub
hlt
adc
cwtl
push
dec
iret
mov
fstpt
inc
negl
xchg
loopne
std
pop
inc
mov
push
jnp
push
sub
rolb
dec
lret
add
sub
or
imul
jo
int3
imul
xchg
outsl
popa
xor
push
add
stos
inc
or
loopne
movsl
jg
add
rolb
push
xor
sub
std
adc
sub
popl
ret
ret
test
add
pop
mov
clc
rcrl
clc
test
mov
add
lret
shlb
mov
scas
add
sarl
xor
jbe
clc
pushf
mov
sub
pop
clc
in
into
mov
jns
jne
pop
push
mov
or
mov
xor
repz
ret
filds
mov
sub
lods
dec
add
pop
mov
add
mov
push
in
dec
mov
add
dec
jno
jmp
add
mov
fisubrs
dec
xchg
add
mov
dec
into
ret
imul
mov
mov
add
stos
scas
repz
sbb
inc
cmpsl
fs
arpl
xchg
xchg
cld
add
add
cli
sahf
sbb
add
inc
jmp
sub
cltd
cmp
inc
add
pop
add
push
pop
fs
mov
mov
cmp
pop
and
jo
add
mov
rorl
dec
ss
pop
xchg
insb
mov
add
dec
add
adc
pop
dec
add
icebp
inc
add
dec
add
aas
jecxz
arpl
lret
ret
movb
inc
add
jbe
jmp
rcrb
mov
xchg
cmpsb
cltd
loope
sub
loopew
lock
add
dec
push
or
inc
adc
mov
dec
outsb
add
pop
add
lds
adc
inc
loope
movb
movsb
fldl
adc
outsl
cltd
es
sti
jne
or
xor
lea
ljmp
in
movsl
incl
mov
xchg
imul
xor
cmpsl
adc
test
mov
mov
sar
xchg
cmp
mov
dec
shlb
push
jne
jg
push
or
inc
mov
pop
roll
dec
dec
std
mov
xor
or
mov
sub
add
adc
lods
fmull
loop
loopne
mov
mov
add
add
fistpll
and
mov
xchg
adc
add
fldl
imul
mov
xchg
out
add
or
dec
in
sbb
jle
imul
inc
int
pop
stos
add
pop
add
xchg
ret
leave
cmp
cmpsb
and
xchg
rolb
arpl
lcall
sub
inc
mov
fildl
lret
rolb
cmp
cltd
mov
loope
dec
jno
popa
push
jno
lcall
mov
add
stos
popa
cltd
cld
icebp
stos
mov
cld
dec
jo
push
aaa
in
in
test
mov
lret
fldt
movsl
daa
inc
mov
test
and
jmp
es
mov
xchg
lcall
or
or
add
shll
xchg
pop
cmp
fnstenv
das
lea
cld
push
in
test
frstor
int3
rorl
les
fs
xlat
dec
push
ljmp
jb
bound
xor
sahf
sub
xchg
add
inc
fs
add
dec
lods
ret
pusha
jg
testb
dec
movsb
add
sub
add
daa
add
fdivs
add
push
imul
je
dec
add
add
inc
into
pop
sbb
in
sbb
add
aas
inc
pusha
cld
pushf
imul
pop
mov
dec
xor
enter
cmpsb
nop
addl
and
aas
jge
fiadds
xlat
cld
je
popa
and
or
xchg
mov
jne
lahf
cmpsb
xchg
shrl
hlt
mov
add
sub
outsl
adc
lods
mov
fst
out
std
inc
mov
cmpsb
push
and
cmp
and
outsl
shrb
adc
add
jle
push
or
jb
add
cmpsl
add
das
idivb
jae
jbe
xchg
lahf
insl
jp
in
rclb
add
fcoml
ss
sbb
rolb
mov
adc
call
repz
movsl
push
in
lods
pop
subb
mov
sti
add
fcmovnu
mov
fs
add
mov
cmpsl
and
inc
and
and
and
or
stos
add
data16
add
xor
xor
sar
push
rclb
jge
arpl
std
mov
cmc
ret
add
and
mov
dec
sub
fcmovne
push
jns
cmp
add
sub
add
add
push
xlat
xchg
mov
incl
iret
mov
jecxz
add
ret
inc
push
mov
in
sahf
or
push
mov
iret
outsb
mov
in
mov
adc
push
add
add
fstp
mov
scas
mov
sub
add
adc
add
ljmp
xor
pop
fwait
or
add
clc
mov
out
jbe
add
pop
add
inc
xchg
shl
and
inc
cmp
mov
mov
add
shll
adc
int
dec
lds
mov
lock
out
add
lock
adc
f2xm1
push
add
and
add
stos
add
cmp
push
add
les
add
mov
add
mov
dec
stos
xor
cmpl
mov
add
loopne
sub
or
push
in
xchg
mov
mov
lea
icebp
sbb
add
lret
aas
jg
xor
add
add
aam
push
adc
dec
jne
test
insl
arpl
mov
cmp
jge
das
xor
adc
pop
fisttpl
mov
in
repz
imul
and
adc
push
imul
inc
testb
mov
gs
add
in
aam
xchg
int
or
push
dec
pop
cwtl
push
and
je
insb
mov
flds
rdtsc
add
clc
add
mov
in
jb
xchg
cmpsl
outsl
btl
test
add
and
lods
ds
dec
das
add
or
and
out
sti
xorb
add
mov
subl
mov
push
pop
aas
into
mov
fmull
aas
cmpsl
js
fbld
mov
dec
jb
cs
psubsb
xor
ret
in
push
in
push
cmp
frstor
and
jecxz
js
mov
orl
sub
xor
or
fisubs
add
pop
adc
pop
in
lcall
mov
inc
sysenter
adc
jnp
push
cmc
push
add
push
loopne
mov
push
shr
xchg
movsl
push
mov
add
ror
loop
inc
je
xchg
cmp
jo
out
mov
add
dec
iret
sub
imul
scas
iret
mov
test
cmp
add
push
or
jmp
subl
outsb
movl
pop
add
cli
mov
and
push
push
mov
inc
adc
sbb
cs
cmpsl
test
or
stos
out
imul
sub
add
xchg
add
pop
sahf
out
roll
xorl
mov
add
add
inc
add
mov
or
inc
loopne
sbb
nop
or
add
and
call
lods
add
andb
mov
cli
mov
popf
pop
and
add
loopne
adc
flds
dec
or
add
out
jp
xchg
mov
outsb
out
add
mov
call
pushf
xchg
dec
cmp
cmp
xlat
rorl
in
and
adc
test
std
jp
into
incl
push
cmp
inc
icebp
cmp
rclb
add
insb
cwtl
push
mov
inc
xchg
int
push
xchg
jns
andw
or
jle
test
outsl
add
cmpsb
add
sahf
jle
lret
in
cmp
mov
sub
sbbl
cmpsl
cli
in
rcll
inc
or
mov
into
add
aam
pop
and
mov
mov
sbb
insl
xchg
jo
xchg
lret
sub
and
sbb
cmp
nop
sahf
jne
ljmp
aas
lock
sahf
push
adc
dec
pinsrw
cmp
sbb
add
xor
testl
cmp
leave
sub
lret
mov
add
popf
lock
jno
jno
lcall
test
add
std
mov
outsl
add
imul
and
cld
sbb
fistpl
pop
cmpl
jp
cmp
fbld
aad
popf
sub
add
or
fldcw
out
xorl
clc
sub
jae
and
and
mov
add
push
jne
cmp
push
mov
cmpsl
aaa
pop
inc
add
sahf
add
mov
fdivs
ja
bt
mov
add
mov
sbb
or
test
imul
sbb
in
adc
stos
rolb
add
das
shlb
insl
imul
aas
test
xor
out
rorb
and
fwait
lret
xor
testb
aam
ds
cmc
popa
lret
pop
stos
ljmp
xlat
aam
xor
cmp
imul
std
lcall
push
adc
ret
push
xor
inc
data16
cmp
pop
daa
add
outsl
cs
mov
gs
in
nop
xlat
cmp
lcall
add
and
adc
add
add
dec
cltd
xor
push
cmp
incl
repnz
jnp
pop
test
addl
add
mov
push
ds
rcll
add
dec
xchg
das
sub
aas
cmp
cmp
loop
addr16
das
add
lret
add
xchg
aad
cltd
incl
push
repnz
cmp
push
push
mov
jnp
ret
sub
xchg
inc
push
int
scas
gs
data16
jmp
add
sub
lahf
call
mov
jge
jmp
add
outsl
cmp
jbe
adcl
js
insb
sub
or
test
test
enter
xorb
sbbl
enter
adc
mov
and
add
add
adc
pop
mov
mov
dec
add
mov
clc
xchg
xchg
and
mov
insb
add
sub
pop
push
sub
xchg
xor
std
sub
mov
das
mov
sub
insl
icebp
adc
mov
pop
ds
cwtl
aaa
sbb
daa
add
mov
nop
pop
or
inc
gs
int3
mov
jnp
mov
dec
mov
iret
push
mov
or
add
test
add
in
popf
mov
jns
cli
movsb
mov
add
mov
daa
mov
fdivrl
pop
sub
sahf
movsb
aad
cmp
mov
add
outsb
push
cmpsl
out
pop
mov
cltd
jmp
adc
lds
pop
in
jne
mov
jge,pn
jle
loop
add
fcmove
pop
test
add
pop
addb
fdivrl
std
fsubrs
xlat
pop
shll
mov
dec
add
sbb
mov
xor
xor
sub
jl
mov
and
add
int3
mov
mov
add
sbb
add
lods
jae
cmp
mov
aaa
mov
btr
add
jno
jo
outsl
and
fcomi
add
inc
dec
mov
shrb
das
add
incb
inc
popa
add
xchg
leave
mov
mov
aaa
inc
mov
inc
add
int3
test
add
push
mov
xor
add
or
sub
imul
rclb
adc
xorb
mov
movsb
ret
repz
vxorpd
mov
add
push
pop
add
dec
jmp
ret
jno
jae
jge
jg
sub
sbbb
sbb
dec
popf
push
enter
xchg
pop
add
insl
int3
rorl
jl
gs
ljmp
incl
loope
ret
fwait
mov
inc
add
dec
push
lods
daa
pop
call
rcrl
add
and
dec
xchg
fst
dec
hlt
mov
sbb
in
daa
add
pop
adc
push
add
popf
js
les
subl
aad
xor
lock
and
in
vsubps
iret
xchg
pop
call
bound
insl
add
and
popf
mov
bound
push
xchg
add
scas
add
pop
push
dec
sbb
adc
dec
lods
daa
lds
data16
jmp
rclb
cmc
cmp
add
mov
mov
loop
fcompp
ret
push
mov
dec
add
out
insl
add
bswap
add
cli
cmp
add
add
test
in
mov
mov
adcl
cltd
add
movsl
out
aad
je
dec
or
mov
add
movl
and
sbb
imul
imul
add
outsl
push
sti
mov
inc
sub
scas
mov
sub
hlt
adc
leave
hlt
sahf
add
loop
pushf
test
add
pop
add
daa
jne
jbe
test
and
jbe
add
sub
sbb
aam
xchg
cmc
ret
es
movsl
cmp
add
inc
fwait
sub
mov
repz
sahf
insl
xchg
hlt
aas
cwtl
addr16
sbb
imul
negl
mov
mov
mov
dec
bound
gs
inc
fxrstor
arpl
or
flds
scas
insl
add
xor
test
imul
push
outsl
lahf
call
rcl
cwtl
xchg
dec
outsb
cmp
addr16
jecxz
out
xor
add
cmp
pusha
mov
inc
sbb
jb
fdivl
xor
inc
arpl
outsl
xor
into
push
cltd
push
in
adc
jmp
std
sub
add
push
or
ljmp
cmp
add
push
hlt
lods
xchg
js
repnz
and
stc
mov
add
jae
leave
bound
repz
add
fwait
jne
xchg
pushf
dec
add
cmpsl
jnp
outsl
add
lock
stc
aam
add
mov
repz
mov
fwait
insl
out
out
dec
xchg
stos
lret
add
inc
or
sbb
mov
lock
lods
test
out
push
test
pop
mov
jmp
inc
and
add
jno
add
sbb
push
mov
je
or
xchg
push
movsb
and
filds
mov
xchg
push
das
or
mov
in
cmp
or
out
mov
pop
sbb
popf
fidivl
fsubp
sti
mov
inc
std
add
call
xchg
inc
xchg
push
out
or
xor
add
mov
add
xchg
scas
stc
push
jge
xchg
pop
push
pop
or
pop
hlt
or
add
mov
sbb
mov
mov
add
add
add
xchg
lds
hlt
add
inc
movsb
mov
push
add
push
inc
leave
dec
cmp
fdivs
ja
push
popf
add
aad
jae
or
pop
faddl
push
or
cli
in
js
pop
mov
xchg
cmp
dec
mov
jno
cld
jge
rcrl
jge
add
mov
int
lods
mov
add
adc
bound
and
clc
and
inc
add
mov
out
add
xchg
xor
sub
in
rclb
ud1
mov
in
stos
sbb
inc
and
das
pop
adc
push
xchg
popf
add
pop
sti
pushf
pop
add
movsb
adc
adc
add
mov
add
and
iret
add
adc
sbbl
bound
cltd
rorl
shll
adc
jb
mov
jo
outsl
in
je
jno
int3
or
insl
push
aad
outsb
add
in
adc
mov
call
es
mov
adc
add
popa
fdivrp
int3
inc
add
pop
jno
add
jmp
fisttpll
mov
cmp
sbb
dec
div
push
movsb
add
mov
jl
and
cmpb
fisttpl
dec
add
js
insl
xchg
int3
add
sti
xor
ret
and
repz
jmp
jae
ja
mov
mov
fwait
ja
cld
jae
rolb
push
cmp
or
pop
add
cwtl
rcrb
ja
add
jle
add
jl
adc
sti
loopne
cmp
inc
add
dec
test
push
sahf
mov
fldenv
jb
push
mov
adc
add
mov
mov
add
cmpsl
cmp
adc
push
jle
pop
cli
add
xchg
rorb
aam
lcall
push
add
jbe
pop
dec
adc
adc
pop
jecxz
loope
shll
mov
jmp
pop
icebp
nop
orb
sbb
negb
mov
pop
call
cmpsb
add
cmp
add
pop
sub
scas
jbe
test
add
cmc
insl
and
jecxz
int3
mov
pop
jecxz
xchg
xchg
and
mov
in
jecxz
jg
or
push
pop
xor
iret
add
lea
mov
jecxz
push
pop
decl
pop
push
push
inc
addr16
out
mov
add
int3
add
cs
mov
xor
mov
loopne
xchg
cmpsl
mov
rcll
add
add
cmp
jecxz
sbb
lret
std
add
lret
xchg
inc
or
push
sbb
or
sub
call
lret
adc
push
lds
add
cmp
fimuls
push
leave
add
scas
adc
push
ds
ljmp
xchg
idivl
adc
pop
mov
push
cmp
mov
mov
mov
testb
sbb
mov
lods
jg
jae
xchg
jmp
ret
and
mov
mov
repnz
pop
fidivrl
dec
push
dec
xor
mov
add
xchg
xor
sub
jge
add
test
gs
xor
mov
js
add
or
scas
fisubl
fisttpl
inc
js
and
add
cld
mov
add
movsl
mov
push
mov
mov
or
fstl
ds
pushf
out
insl
xor
pusha
jae
mov
repz
add
adc
ficomps
mov
and
add
sbb
add
adc
ss
dec
add
out
jmp
xlat
sbb
test
pop
sub
lods
cs
xor
sub
sub
scas
in
push
repnz
subl
sub
dec
cmp
push
lahf
fdivs
outsl
ss
gs
dec
decb
mov
inc
push
pushf
movsb
cltd
push
ja
mov
sub
xorb
arpl
roll
mov
mov
or
xchg
sbb
out
pop
cmp
and
stos
mov
je
sbb
cmp
mov
out
arpl
sti
add
test
out
xchg
js
inc
jge
xchg
out
mov
out
add
sbb
sub
add
adc
fsubl
add
nop
mov
popa
add
js
pop
aas
xor
loope
mov
sbbl
fidivrl
mov
js
adc
pop
sbb
test
loop
in
outsb
hlt
outsl
sbb
arpl
mov
push
aam
rcr
dec
pop
push
jnp
pop
aad
push
push
mov
hlt
add
add
pop
ret
sbb
xchg
mov
inc
lds
in
mov
add
xchg
test
mov
add
js
stos
add
add
lea
lret
js
sub
push
loope
pop
xchg
cmp
cltd
add
adc
push
add
mov
andl
fs
rcrl
cmp
sbb
ja
add
cltd
fxch
adc
push
aas
cmp
or
ficomps
add
mov
fs
jo
std
mov
and
sar
pop
gs
stos
dec
xchg
int
sbbl
test
add
ret
lcall
sub
cltd
mov
aas
ret
pop
cli
sbb
movsb
mov
mov
bound
pushf
and
loopne
add
cltd
scas
mov
ljmp
adc
add
add
add
lret
dec
sbb
mov
cwtl
add
pop
xlat
fistpll
mov
fldt
mov
stos
sti
aam
and
and
dec
jnp
ret
and
mov
adc
or
mov
ficoml
js
fmuls
or
pop
mov
jle
rcl
add
test
push
lds
fwait
add
cmp
or
push
cwtl
out
movsl
jo
inc
jmp
sub
jg
jo
stc
xchg
pop
sub
mov
add
add
es
pop
add
add
and
stos
enter
mov
xorb
nop
std
daa
add
add
add
fdivl
dec
in
add
push
add
pop
and
bound
jecxz
dec
or
aad
gs
jle
lahf
or
sbb
nop
and
mov
dec
nop
popf
fiaddl
dec
add
ljmp
ds
idivl
lahf
data16
cmc
push
jecxz
fwait
sbb
dec
int3
mov
push
cmc
sahf
xchg
jno
mov
pusha
jne
adc
xchg
add
add
xor
popa
add
imul
pop
add
iret
push
hlt
adc
or
repnz
fiaddl
push
add
mov
mov
lds
mov
push
loop
shll
imul
add
inc
nop
mov
aaa
in
and
rcr
cmp
das
mov
sub
mov
sub
pop
add
add
add
add
add
mov
mov
xchg
jbe
incb
icebp
aam
push
add
cmp
scas
test
cli
loope
mov
ja
push
pop
jo
cmp
rcrb
adc
cmp
xchg
mov
ja
jl
inc
dec
fs
add
adc
push
push
repnz
inc
ss
and
cltd
movsl
add
sbb
fdivl
push
loopne
push
cmp
je
xor
sahf
push
xchg
xor
or
sbb
sub
sub
outsb
jb
mov
xchg
xor
lods
mov
xlat
ss
pop
aam
aas
cli
xor
lods
rcll
movsb
xchg
adc
gs
or
in
and
jnp
fnsave
adc
mov
jo
jno
sub
jecxz
add
mov
jmp
add
mov
jge
xor
add
xor
inc
dec
rolb
xchg
fyl2xp1
out
rcll
fbstp
insl
xchg
loopne
bound
add
stc
mov
add
mov
push
imul
aam
inc
add
jle
lahf
mov
mov
pop
mov
out
jae
adc
insb
sbb
add
lahf
out
push
cmpsl
cld
sub
xlat
sti
hlt
or
cmp
cld
mov
in
and
mov
pushf
sbb
in
jbe
test
cmp
jmp
in
movsb
ljmp
add
mov
mov
dec
xlat
or
add
std
sti
add
mov
mov
fucom
add
mov
enter
jge
into
jne
jl
xor
loop
or
sahf
sbb
or
mov
or
fildll
out
jne
pop
loopne
ret
fidivrl
stos
rcrb
jge
sub
and
dec
dec
rolb
pop
push
cli
pop
xchg
cmp
movsb
bound
pop
inc
add
mov
leave
fs
shll
sbb
out
lcall
xor
call
call
add
add
stos
cmp
fadds
xor
dec
inc
pop
mov
add
fidivrs
in
nop
lods
gs
sahf
or
dec
fldpi
out
and
testb
inc
and
sub
add
mov
shlb
sbb
adc
fisttpll
outsl
push
outsb
insl
mov
xchg
mov
mov
outsb
test
popf
rolb
add
and
adc
adc
arpl
jmp
adc
add
cmpsb
lods
pushfw
arpl
aad
enter
out
jo
ljmp
gs
notb
pop
lcall
mov
mov
fisubrl
sbb
add
sbb
rcrl
js
dec
pusha
repnz
in
fbld
fists
outsb
dec
out
sub
outsl
sub
inc
dec
pop
sbb
cmp
hlt
adc
push
hlt
add
add
loop
outsb
xchg
imull
add
call
mov
mov
das
not
lcall
mov
lret
mov
push
daa
inc
push
sbb
divb
stos
push
cmc
sar
add
mov
push
add
xor
pop
pop
shll
or
out
add
lock
jecxz
inc
lock
mov
pop
cltd
sbb
pushw
popa
push
add
add
add
shlb
push
inc
push
jge
pop
cmc
adc
repnz
movups
push
scas
out
add
add
and
pop
inc
outsb
leave
movsb
cwtl
mov
push
inc
inc
fidivl
mov
mov
mov
push
adc
popa
push
insl
jno
imul
fnstenv
xor
fmul
add
icebp
cmpsl
fdivl
mov
pop
or
mov
imul
notl
cld
and
repz
shll
push
scas
bound
jae
xchg
aam
push
jns
sbb
cld
mov
stos
jnp
incl
add
inc
mov
xchg
xlat
mov
pop
push
add
xchg
rcr
clc
push
push
ret
sbb
mov
int
mov
add
push
push
in
add
add
pop
cwtl
or
add
test
insl
add
cmp
jne
add
cmp
jo
sbb
popf
loopne
push
cld
les
mov
pop
lock
aam
cmp
adc
add
jecxz
pop
fcmovnbe
addr16
mov
mov
lcall
sub
loopne
jl
xor
inc
sbb
inc
mov
jae
inc
dec
test
cmp
pusha
xchg
adc
outsb
push
gs
pop
divb
sub
lret
xor
mov
add
mov
jno
push
shl
pop
pop
push
lock
cmp
dec
dec
sub
into
loope
xchg
add
mov
xor
jp
sub
pop
addr16
xchg
pop
xor
sahf
test
or
gs
jno
jo
orb
lock
push
xor
xor
inc
mov
mov
add
test
xor
jo
and
cmpsb
add
mov
lcall
xchg
bound
adc
push
and
ja
out
in
sbb
add
addr16
mov
add
jl
xchg
rolb
aam
adc
mov
lcall
dec
jnp
dec
push
sbb
mov
mov
add
dec
aam
or
loop
add
cmp
cwtl
stc
inc
mov
adc
add
push
pop
incb
dec
mov
add
nop
push
jg
add
pop
add
adc
jne
imulb
add
fnstsw
pop
lsl
out
lret
out
sub
adc
into
clc
sbb
or
push
add
call
mov
pop
add
cwtl
dec
in
testl
or
das
jb
mov
inc
add
jle
lock
mov
push
outsl
lcall
iret
push
add
enter
hlt
mov
insb
cmpsl
pop
add
cmpsb
add
cli
scas
insb
aad
das
add
rcrb
dec
mov
test
add
and
cmp
add
aam
inc
pop
pop
rcrb
mov
ret
add
mov
and
pop
xchg
adc
push
in
add
or
mov
jmp
sar
or
hlt
shll
inc
and
nop
mov
cmpsb
dec
pop
popf
ret
andl
mov
mov
jbe
sbb
nop
mov
fldenv
jo
scas
push
xchg
or
ja
icebp
into
out
mov
adc
push
fs
sub
add
inc
pop
mov
test
enter
dec
add
out
dec
inc
xchg
cmpsl
mov
push
aam
xor
xlat
mov
jno
aaa
mov
sbb
add
in
pop
push
movsl
jb
push
push
fdivrl
repz
mov
inc
ljmp
push
pop
adc
xchg
fsubl
addb
or
mov
push
xor
push
add
shlb
jnp
fwait
push
fiadds
mov
add
outsb
nop
aas
and
cmp
addr16
loope
mov
ss
lea
xchg
test
popa
xor
add
dec
mov
adc
lcall
or
jg
push
pop
sbb
add
orb
jae
ret
sbb
sub
mov
lret
lret
and
sbb
xor
fwait
push
mov
ja
xor
test
int
jge
in
add
pop
add
lldt
out
xlat
xchg
cmp
cmp
add
add
push
mov
push
push
pop
pop
push
xchg
add
sub
cmp
lret
test
mov
and
push
movsb
add
add
jg
jae
mov
mov
jg
push
insb
in
ss
push
and
push
mov
xor
cwtl
xchg
add
repz
sti
fdivrs
mov
mov
adc
das
cltd
mov
mov
in
arpl
das
fmulp
inc
stos
inc
add
js
add
stos
test
fldt
sahf
add
push
lcall
out
maskmovq
testl
dec
loopne
adc
jmp
cmp
or
add
xchg
pusha
add
sub
cmpsl
push
idivb
bound
add
add
lods
xlat
mov
ret
push
push
int
aaa
mov
jl
xor
clc
aaa
pop
jb
jae
mov
xchg
mov
int
push
into
sbb
push
outsb
add
les
bsf
pop
push
shrb
icebp
imulb
mov
xor
jle
js
int3
subb
fsub
or
inc
adc
add
dec
test
sbb
fcom
mov
in
and
sahf
mov
in
scas
rcrl
jle
sub
dec
mov
add
dec
push
stc
or
insl
add
jnp
add
ljmp
cltd
out
add
mov
cwtl
or
popa
push
add
ja
lahf
xor
xor
cmc
and
dec
sti
aas
cmp
es
jno
sub
add
add
xchg
addb
push
scas
inc
add
insb
add
jl
test
rolb
mov
add
add
xchg
mov
sbb
inc
push
in
push
test
inc
mov
out
cmpb
jo
mov
cmp
xchg
adc
sub
push
add
add
xor
out
jp
insb
sub
jmp
pop
rcll
das
add
mov
in
int
call
sbb
xchg
dec
mov
icebp
cmpsl
add
sub
push
outsl
shll
scas
xchg
test
ja
sub
in
mov
inc
mov
cmpb
mov
add
jge
aad
stos
ds
cmp
jg
xchg
xchg
das
dec
loop
nop
push
loope
gs
scas
push
pop
cmp
add
push
icebp
cmc
fwait
xor
test
xor
flds
push
xchg
add
jbe
pop
fwait
sbb
add
dec
mov
test
leave
insl
jno
push
enter
push
dec
fdivrs
outsb
scas
xchg
test
movsl
add
mov
add
pop
ficomps
sub
bound
add
outsl
or
imul
adc
icebp
cmp
lea
jg
roll
fnstenv
and
sbb
push
cmp
imul
add
pushf
adc
mov
mov
adc
mov
ja
hlt
add
jl
out
push
lock
into
adc
js
jp
mov
rcll
roll
lock
add
add
js
sub
ficoms
mov
mov
movsb
dec
xor
xchg
ret
adc
add
ds
sar
or
fs
adc
add
mov
leave
xor
nop
add
out
add
adc
xchg
adc
xor
loopne
lret
out
mov
add
mov
arpl
movsl
xchg
cmc
fldl
lahf
sub
pop
xchg
sahf
dec
lret
sub
jge
adc
loop
mov
xchg
fwait
paddd
or
or
fwait
sub
mov
ss
add
dec
daa
cmp
jge
add
push
negb
test
rcrl
fistl
mov
mov
pop
xor
mov
add
imul
add
mov
and
sub
scas
sbb
and
jno
adc
mov
daa
popf
add
rorl
fstpt
out
add
mov
mov
aas
inc
cmp
mov
add
or
add
cli
push
xor
ja
rsm
add
push
xchg
imul
add
sti
cs
test
mov
add
and
lods
add
mov
loopne
inc
dec
jmp
movsb
mov
aas
inc
dec
sbb
push
push
mov
int3
clc
xchg
add
and
add
pop
int
push
mov
stc
adc
shl
fadds
mov
xor
dec
sbb
lea
fisubrs
mov
cmp
dec
jle
xor
enter
sbb
add
or
add
loopne
adc
outsb
jecxz
addr16
cmpl
lods
and
add
imul
stos
and
push
xchg
inc
add
fdivs
sub
jle
mov
push
std
movsl
scas
int3
int3
add
cmp
xlat
stos
ret
or
dec
mov
lar
lahf
outsl
add
add
xchg
add
arpl
lea
add
insl
imul
orl
adcl
mov
dec
adc
adc
add
jns
mov
aam
cmpsb
add
int
sbb
dec
loope
xchg
jl
fwait
pop
push
mov
ss
push
xor
add
add
popf
mov
cmpsl
cmpl
movsb
sbb
and
push
das
mov
sbb
inc
and
mov
jle
cltd
add
std
mov
cltd
out
lea
and
mov
mov
add
stc
aaa
add
push
int
add
pop
and
push
fcmovnb
in
cmp
jns
add
jno
add
dec
mov
stos
clc
das
stos
add
outsl
xchg
insb
sahf
cmpsb
fildl
outsb
add
adc
sub
adc
adc
cmp
addr16
leave
xchg
mov
inc
xorb
and
addl
add
add
and
dec
daa
or
add
shr
inc
test
mov
add
iret
and
add
add
fcomps
adc
shl
xchg
xor
add
xlat
out
pop
xchg
dec
add
inc
sub
andb
push
fmul
pushl
mov
movsl
adc
int
mov
sub
cmpsb
or
je
mov
push
mov
cmpsb
filds
add
mov
lods
or
add
hlt
add
orl
jp
shll
add
cli
cmp
adc
add
sbb
mov
ljmp
add
mov
push
add
fiaddl
cmp
lret
push
add
ret
add
test
mov
mov
mov
test
inc
adc
repnz
loop
mov
cmpsl
in
cmpsl
iret
dec
add
and
cli
mov
in
adc
dec
or
push
or
pop
lret
jmp
lds
int3
mov
in
xor
push
je
test
test
rolb
scas
outsb
je
sub
in
adc
fildl
jmp
xlat
jns
push
out
cwtl
shrb
add
pop
sbb
jg
scas
js
test
shrl
xor
adc
fiadds
cmpsl
ja
sti
lret
sbb
xchg
jg
ss
mov
xor
push
and
insl
mov
pusha
pop
xchg
fidivl
sub
decb
sub
cwtl
add
inc
sub
mov
adc
sub
push
mov
add
cmpsl
stos
fs
add
push
xlat
cmp
adc
sbb
insb
pop
push
inc
rclb
shlb
and
mov
push
leave
jmp
fcomip
sub
add
fbld
jecxz
jge
add
xchg
cmpsl
jae
jae
add
in
inc
aas
and
es
lcall
xor
push
fnstcw
es
pusha
add
andl
inc
iret
or
inc
cmp
lret
faddl
add
xor
xchg
je
out
xchg
jge
jp
and
xor
or
dec
xchg
popf
test
je
jae
hlt
add
mov
cmpsb
add
ret
idivb
shl
rcrl
add
or
adc
in
mov
pop
sbb
mov
lahf
shl
es
cmpsb
xor
hlt
outsl
cmp
in
pop
xor
add
sahf
dec
fildl
and
xchg
sbb
sbb
cwtl
ss
or
dec
inc
fcom
xchg
add
out
dec
sub
les
xchg
and
mov
inc
xor
push
insl
arpl
lret
xchg
lea
add
popf
in
add
push
fdivl
jno
sbb
call
fsts
mov
add
leave
lods
add
mov
sahf
mov
inc
gs
mov
std
and
int
pop
repz
jno
xchg
jmp
xchg
or
jge
inc
inc
andl
jl
cld
mov
pop
or
dec
xchg
repnz
sub
mov
add
aad
xor
ss
push
pop
aad
mov
je
push
add
adc
fstl
mov
add
jo
push
xchg
add
jbe
lahf
loopne
in
lldt
mov
mov
repnz
das
jl
xchg
add
inc
sar
mov
roll
inc
mov
push
nop
cwtl
mov
xchg
mov
sub
xor
jmp
ljmp
popa
ljmp
add
jae
sti
add
cmp
pop
lahf
add
push
lcall
icebp
mov
push
push
adc
push
lahf
inc
add
shl
adc
testl
outsl
pop
add
roll
jmp
jg
lret
fmuls
cmp
testl
cmp
popf
cmp
push
lcall
inc
mov
xor
add
pop
loope
movb
xor
lds
fwait
das
mov
pushw
aam
nop
lods
push
inc
add
sbb
jle
add
and
jmp
push
jne
dec
stc
mov
cltd
repnz
lahf
sbbl
dec
stos
fisttps
dec
add
lds
add
mov
inc
movsl
mov
test
sti
lods
add
jb
add
ret
cmp
push
cmpsb
cmc
and
mov
les
xchg
jecxz
scas
lcall
insl
add
leave
ja
mov
ret
hlt
dec
shrb
stos
andl
jg
sbb
js
repz
cs
mov
or
mov
push
xor
inc
adc
sbb
lcall
jb
icebp
add
sub
jmp
ror
repnz
pop
enter
jecxz
add
loope
sti
push
mov
lahf
add
movsb
sbb
jge
fcmovnbe
push
add
movsb
push
movsl
mov
call
add
cmp
lahf
push
into
lods
mull
int3
add
mov
test
and
mov
enter
push
jmp
add
push
stc
jg
push
dec
daa
cld
xor
cs
mov
add
fsts
xchg
add
int
cmpb
inc
pop
jo
enter
subl
out
add
push
push
mov
cmp
fisttpll
add
add
or
lods
mov
imul
sbb
imul
add
subb
xchg
jle
xchg
insb
dec
fucom
cmpsl
cmc
lock
cmp
in
pop
nop
xchg
ja
lcall
push
adc
adc
mov
dec
lds
push
in
lcall
fsubrl
je
mov
adc
add
ljmp
test
xchg
inc
call
stc
mov
add
xchg
icebp
adc
mov
cmp
cmp
push
sub
xorl
pop
sub
mov
add
add
adc
jp
inc
outsl
add
mov
add
in
add
mov
mov
jg
shl
insb
ds
push
xor
pushf
inc
add
insl
repz
cs
adc
add
add
push
push
ja
and
add
shl
jge
push
add
push
xchg
mov
xor
dec
add
fs
xor
stos
cmp
sub
dec
pop
shlb
fdivp
mov
sbb
add
loope
add
lea
loop
loop
jb
adc
mov
in
ffree
cmp
pop
nop
frstor
mov
shrb
repnz
fimull
add
js
inc
xor
and
out
sub
fisubrs
aam
ret
jo
in
pop
jne
pushf
pop
inc
mov
mov
mov
sub
outsl
push
dec
xchg
fs
or
stos
test
xorl
add
cwtl
cmc
xlat
movsb
jb
fsubr
fildl
jp
mov
add
leave
inc
cltd
mov
sub
ds
dec
xor
add
mov
add
and
adc
stc
cmp
add
jo
lahf
add
gs
int
cmc
insl
adc
mov
fs
jae
mov
push
les
add
add
jmp
jl
add
bound
dec
int3
jecxz
sbb
mov
dec
sti
add
add
inc
pop
fmulp
mov
ljmp
xlat
xor
imul
lods
subb
add
lods
inc
push
std
mov
por
mov
jbe
add
pushf
mov
xchg
jns
cmp
inc
inc
fiadds
mov
lock
rcl
add
add
push
mov
push
or
bnd
xchg
mov
mov
cmp
xor
das
adc
js
ret
dec
in
xor
fistl
shll
and
mov
sub
dec
leave
negb
roll
rorb
jbe
mov
jno
add
sbb
rclb
aas
fs
sbb
pop
add
adc
int
dec
sub
es
and
ficoms
test
sbb
xor
dec
in
inc
dec
negb
xor
scas
pushl
adc
in
lods
cwtl
dec
gs
sub
jns
fs
sbb
fdivl
jb
inc
mov
ja
stc
out
enter
or
add
sbb
out
lahf
fmull
arpl
pop
and
insb
dec
add
inc
mov
xchg
mov
in
push
pop
mov
adc
pcmpgtd
cmp
pop
arpl
sbb
filds
cmp
adc
pop
iret
jnp
xchg
aaa
mov
xor
adc
add
mov
repnz
mov
pusha
and
mov
jne
dec
loop
inc
cmpsl
in
cmp
inc
je
xor
pusha
cltd
adc
jnp
add
ljmp
fcmovnu
jb
iret
addr16
add
imul
lret
add
pop
movsb
add
xchg
int
ret
mov
push
outsl
sub
iret
inc
or
add
add
sbb
std
xor
cmp
sub
add
and
ja
add
cli
in
into
punpckldq
push
push
sub
xor
sbb
adc
enter
inc
dec
addr16
jae
add
pop
int3
out
inc
mov
add
xor
aam
pop
mov
mov
insb
fildl
fldl
std
cmp
mov
mov
add
add
sahf
push
ficoml
add
js
jbe
les
sti
push
pop
push
in
mov
adc
cmp
add
aam
add
fdiv
push
and
aas
loope
mov
xchg
dec
cmc
jb
add
jno
xor
xchg
fisubl
icebp
add
sbb
push
icebp
cmp
call
dec
and
push
sbb
add
imul
add
stos
jmp
fsubp
pop
ret
movsl
hlt
lcall
pop
loopne
sub
xchg
andnps
sbb
and
int3
stos
cld
add
aaa
out
push
into
lods
cli
add
test
mov
jae
sbb
add
push
mov
fsubrl
cmc
popl
xchg
mov
push
xor
jno
das
data16
xorb
scas
dec
cmp
popf
add
aad
mov
lret
sbb
clc
fstl
cmp
inc
inc
clc
stos
xchg
sub
jle
sbb
leave
or
and
imul
insl
cmp
pop
adc
mov
fisubrs
pop
popf
popl
sbbl
daa
add
out
rorb
inc
mov
lea
mov
mov
mov
or
add
add
or
and
add
mov
push
push
pusha
push
ljmp
cmpsb
mov
test
xchg
mov
repnz
dec
leave
pop
add
lret
dec
xor
cmp
insb
add
cmpb
push
mov
sti
dec
cmpsb
mov
inc
cld
cmpsl
pusha
dec
add
repz
popa
pop
push
movzbl
arpl
call
mov
or
sub
mov
xchg
cltd
rcl
sbb
jmp
pop
nop
cltd
lret
jmp
sub
shll
push
add
out
lret
mov
jae
mov
cld
sbb
shll
add
nop
add
les
or
sub
gs
jle
insb
mov
push
pop
add
mov
subb
add
add
jle
fldl
test
test
cmpsl
xchg
xchg
add
add
inc
sbb
fnstcw
call
js
scas
lret
pop
push
insb
add
and
js
addr16
mov
add
add
cmpl
pop
pop
sub
lea
push
adc
mov
cmp
adc
ds
sbbb
add
dec
jns
lea
loop
loop
test
sbb
les
jmp
xor
inc
rcll
add
lret
pop
lock
jp
pop
loopne
rolb
arpl
ljmp
sbb
lret
cmc
add
mov
pop
cmp
sbb
notb
pushl
std
pop
push
sbb
xor
xor
add
xorps
push
cmp
xchg
repz
pop
insl
dec
jecxz
outsw
dec
dec
mov
xchg
push
jp
jl
lret
rclb
test
testb
stos
mov
dec
popf
icebp
adc
jne
jbe
pop
pop
lods
mov
push
adc
mov
and
pusha
xor
add
mov
in
cmp
test
xor
sub
sub
mov
jae
mov
ss
ss
lods
add
or
dec
loope
add
js
mov
xor
and
push
sbb
inc
sbb
or
dec
cli
jb
add
mov
dec
call
adc
inc
sub
filds
inc
mov
cmp
subb
clc
sub
stos
add
add
jl
cmp
mov
add
into
daa
mov
out
add
je
repz
mov
jle
shl
dec
leave
push
xor
adc
mov
gs
out
and
dec
stos
cmp
mov
add
mov
aam
and
sub
mov
push
jbe
scas
rclb
add
inc
mov
add
jae
push
add
sub
mov
leave
mov
sbb
les
nop
jnp
mov
sbb
test
mov
dec
pop
push
icebp
stc
sarb
pushf
shrl
sbb
stc
adc
lret
lret
ljmp
cltd
scas
cs
lock
push
inc
pop
sbb
add
scas
mov
cmp
imul
cltd
pop
out
mov
jle
sbb
popf
add
inc
xor
lret
add
inc
mov
xchg
add
jo
mov
sub
sbb
dec
or
xor
pop
add
dec
in
add
aas
in
adc
das
insb
fidivs
bound
dec
dec
and
sub
cmp
std
pop
aam
mul
adc
scas
cmp
jg
data16
imul
fidivrs
push
add
cmp
out
mov
imul
dec
lds
pop
popa
js
ret
in
mov
pop
inc
jmp
test
mov
mov
dec
xchg
add
add
inc
jae
xlat
arpl
shrl
jle
and
jnp
test
mov
fidivrl
add
ds
mov
mov
mov
pop
int
out
insb
xchg
mov
jo
add
adcb
add
xchg
lock
dec
push
repz
add
sbb
popf
xor
sarl
in
push
adc
xor
movsl
lds
lock
and
add
add
fimuls
int3
loop
cmp
mov
add
cmc
add
push
pop
mov
daa
std
dec
add
cld
les
pop
add
mov
jle
or
pusha
inc
and
pop
or
xchg
mov
mov
and
rol
movsl
xchg
push
add
xor
mov
add
add
mov
adc
popf
mov
out
repz
test
jo
push
mov
and
fistl
add
jns
add
aas
aaa
sub
incb
jne
out
popa
pusha
sbb
jns
mov
imul
xchg
ss
cmpsl
cmp
inc
sub
add
jmp
cmp
dec
adc
xchg
xor
add
insb
push
lods
xor
add
mov
push
cwtl
cmp
sbb
mov
test
into
mov
dec
sub
adc
cmp
pop
jnp
ret
inc
addr16
cmc
jmp
add
mov
add
xchg
pop
jge
out
push
mov
out
js
mov
adc
std
adc
xchg
aaa
shll
jns
clc
and
add
adc
sub
pushf
add
sub
sarl
in
and
fs
insl
mov
push
jns
das
xor
add
add
dec
adc
ret
out
loope
inc
add
sbb
or
dec
je
push
nop
push
in
or
add
cmp
mov
in
dec
sub
dec
xchg
pop
push
jle
mov
pop
aas
shlb
adc
or
adc
mov
adc
xor
shr
out
nop
data16
add
pop
sub
stos
mov
cmp
leave
loope
mov
jl
mov
fmuls
inc
iret
or
cmp
pop
sbb
pushf
sbb
outsb
pop
sarl
add
and
inc
stos
cs
and
or
cli
inc
negb
fildl
add
add
mov
aam
aas
rclb
mov
mov
push
add
push
pop
fwait
roll
jne
jb
loopne
test
stos
dec
pop
push
adc
jle
inc
inc
push
idiv
leave
jg
add
call
add
add
xor
loopne
push
add
imul
add
pop
push
push
rorl
cld
pusha
ja
pop
mov
jge
jbe
sbb
decl
fstpt
cwtl
fiaddl
dec
mov
fld
add
repz
fs
mov
xchg
add
sbb
ljmp
cmp
xchg
and
sahf
mov
fwait
loop
inc
add
loop
mov
add
std
fmuls
push
add
add
xchg
add
dec
insb
pusha
add
repnz
ja
sahf
pusha
pop
mov
mov
and
pop
ds
scas
add
inc
dec
lret
add
adc
pop
and
mov
lcall
pushf
add
les
pop
adc
fildl
xorb
out
mov
add
or
call
jecxz
adc
add
imul
add
cmp
stos
mov
sub
add
out
xchg
add
or
mov
mov
mov
dec
sbb
cld
mov
or
add
fsubs
xor
push
lock
ret
xor
add
dec
mov
jmp
lock
dec
and
xchg
aaa
call
add
push
dec
rclb
xor
add
add
js
je
stc
add
xchg
jp
mov
ljmp
xor
arpl
push
xor
nop
push
adc
pop
pop
sbb
xor
xor
movsb
loopne
sbb
stc
movsl
test
mov
cltd
aad
jge
insl
push
decl
push
shll
add
mov
and
pop
and
test
add
add
cmp
rolb
add
sub
loopne
mov
jo
in
or
mov
mov
push
and
int3
fisubs
jp
push
jmp
mov
push
add
pop
ss
jb
movsb
cmp
test
push
pushf
pop
ffree
add
out
sub
and
dec
xchg
xor
push
jecxz
lds
xchg
add
lods
fadds
mov
jle
push
scas
fildll
add
add
pop
sti
add
add
sub
stc
insl
pop
push
aas
push
outsl
mov
pop
cmp
add
add
add
cmpsl
add
sbb
xchg
add
in
into
stos
jae
ja
and
add
mov
mov
or
cs
in
add
sarb
cli
test
xchg
loop
lods
int3
push
cmp
das
cli
aas
ffree
repnz
enter
mov
add
repz
inc
rolb
push
cwtl
loop
cmpl
and
lods
negl
jne
lcall
arpl
in
mul
sbb
addb
pop
push
xchg
add
dec
or
ret
inc
cld
inc
and
add
add
or
adc
gs
add
mov
fisubrl
cltd
test
add
imul
adc
fcompl
cmp
and
xchg
aas
inc
ja
rcl
jg
roll
fisubs
dec
movnti
add
sub
aad
push
add
aas
xchg
dec
xor
dec
dec
test
push
pop
adc
pop
stc
xchg
pop
fldl
inc
xor
cli
mov
xchg
push
ss
pop
jl
adcb
rolb
jg
fistpl
push
inc
int3
mov
mov
cltd
add
ret
xlat
add
in
clc
loopne
fwait
add
rolb
jg
scas
add
adc
mov
outsl
faddp
add
cwtl
push
mov
imul
sbb
cmpsl
mov
lret
xor
aas
add
cmp
add
outsb
xchg
adc
cs
mov
mov
cmp
mov
sub
popf
xchg
inc
pop
jge
jo
movl
push
xor
add
jg
pop
jo
nop
xchg
adc
hlt
adc
jmp
dec
std
jle
shll
add
ds
xchg
outsl
push
push
add
jg
rcrb
xchg
stos
add
push
in
fisubrs
adc
pop
je
jne
sub
bnd
lods
sbb
mov
mov
fidivl
jle
add
mov
les
cli
pop
iret
mov
sbb
inc
mov
add
or
test
push
push
test
adc
daa
call
repz
mov
add
add
add
push
cmp
add
jmp
shlb
add
push
ror
pop
add
stos
or
out
push
sbb
jno
subb
bound
inc
aad
mov
mov
and
daa
popa
fdivs
movsl
sbb
dec
add
dec
push
gs
push
mov
cmpsl
std
add
inc
mov
push
mov
in
add
bound
xchg
loop
fsubr
iret
jg
cmpsl
jl
mov
inc
iret
in
dec
sub
inc
mov
mov
mov
jmp
jmp
filds
sbb
hlt
popa
js
adc
pop
add
movsb
cmp
es
push
ffreep
or
adc
shll
pcmpeqw
push
mov
rolb
scas
dec
lret
loope
nop
arpl
pop
sti
cmp
pop
loopne
jns
mov
and
xchg
into
popf
pop
test
lcall
scas
mov
mov
pop
stos
adc
test
fdivr
add
cmp
add
jo
repnz
cmpsl
jno
repz
add
test
add
mov
and
adc
pop
inc
leave
add
scas
arpl
dec
inc
ss
or
add
add
orb
cld
or
or
add
je
imul
cli
jnp
cmp
and
adcl
pop
cmpl
jge
icebp
add
ret
jbe
pop
mov
arpl
int
add
das
jbe
addl
dec
loop
sub
jp
outsb
inc
xor
movsl
jo
push
add
jo
jp
or
divb
ds
ss
testb
test
and
ficompl
imul
dec
mov
dec
clc
pop
sbb
inc
les
sub
rcrb
adc
add
lahf
and
aaa
iret
mov
dec
or
add
or
xchg
inc
add
ror
pop
lods
test
dec
fs
ljmp
or
daa
aaa
fistpl
push
les
mov
out
aam
js
sbb
adcl
xor
sbb
mov
push
add
shrl
or
pop
into
add
cmc
adc
sahf
insl
adc
ret
outsb
dec
enter
stos
or
and
xchg
inc
adc
daa
pop
lret
mov
rcl
push
ds
mov
movsb
movsl
mov
add
sbb
mov
push
add
sbb
jmp
ds
xchg
xchg
jno
jbe
xor
lret
lret
or
ret
cmp
xchg
jg
gs
andb
repz
mov
mov
pop
ret
xor
xchg
ss
and
test
test
add
add
sub
popf
loope
add
cmp
add
mov
test
repnz
scas
cmpl
jmp
add
enter
inc
roll
add
lds
pop
es
jnp
int3
movsl
pusha
loop
popa
aas
in
ds
jb
sbb
add
or
jb
adc
pop
mov
mov
aaa
pop
xchg
lock
jae
rcl
idivl
or
adc
jne
dec
and
cwtl
xchg
sub
sar
popa
sbb
insl
sbb
scas
addr16
pop
jo
inc
pop
jne
add
cmp
subb
inc
fxch
adc
inc
and
ja
incb
inc
jmp
insb
cwtl
and
dec
loop
sbb
add
push
imul
xor
aad
ljmp
pop
pushf
mov
mov
cmp
pop
cs
xchg
jg
and
mull
inc
cwtl
mov
adc
dec
mov
outsl
inc
inc
fwait
mov
push
popl
sbb
cmp
mov
xor
mov
mov
dec
add
inc
add
add
lods
orb
int3
and
push
cmp
push
adcb
cs
mov
xlat
bound
sbb
divb
hlt
xor
sahf
in
cwtl
adc
cmpsl
lahf
push
mov
icebp
in
lods
add
out
dec
xor
ret
xchg
scas
and
add
mov
pop
shlb
pop
cmp
xchg
mov
stos
add
lods
lret
lods
xchg
loope
cmp
add
push
push
cmp
int3
cld
add
mov
or
pop
mov
movsb
test
jp
sbb
xor
xchg
jg
repz
lock
xor
fbstp
rolb
fwait
hlt
xchg
add
dec
vpmuludq
add
sbbl
cwtl
mov
mov
add
lods
pushf
or
call
leave
xchg
dec
sbb
push
xchg
mov
cmc
add
mov
jae
push
adc
ret
dec
jns
aad
jmp
mov
push
adc
sbb
push
repnz
add
sbb
sbb
add
xor
hlt
mov
mov
loope
add
flds
sub
adc
dec
jnp
pop
add
sub
stc
push
jns
pop
and
xor
fs
repz
mov
jne
sub
pop
mov
xor
xchg
in
sub
add
mov
ljmp
jp
cld
add
loope
std
aaa
or
sahf
addr16
or
push
scas
sbb
call
test
push
cmp
bound
sbb
dec
and
out
xchg
sar
jae
dec
adc
pop
push
mov
jb
movsb
push
sbb
inc
push
jg
adc
push
add
das
add
arpl
push
add
in
lret
movsb
dec
pop
xorb
jbe
fcompl
xchg
inc
out
mov
xchg
dec
mov
add
ficoml
icebp
out
push
in
int3
out
popa
aad
inc
pop
movsl
out
outsl
test
xchg
cwtl
imul
mov
add
out
leave
cld
imul
jb
cmp
push
addr16
inc
or
xorb
movsl
pop
lret
subb
push
repz
push
add
sub
mov
shrb
sarb
jp
mov
pop
insb
jnp
mov
mov
inc
jno
negl
push
movsb
xchg
inc
xlat
scas
fxch
and
dec
push
popa
into
hlt
adc
jg
jbe
mov
mov
inc
pop
mov
inc
cmp
enter
inc
inc
and
arpl
movsb
out
mov
pop
arpl
ret
jbe
or
cmp
das
data16
add
in
pop
in
mov
push
fisubrs
push
lds
int3
clc
sti
add
outsl
mov
rorb
adc
inc
out
adc
call
inc
ss
dec
dec
dec
rorl
lcall
mov
push
xchg
ret
inc
loop
pop
jno
mov
imul
lret
add
aaa
adc
xlat
push
addr16
cmc
gs
and
mov
cmpsl
cmp
incl
test
mov
mov
inc
cltd
ret
xor
gs
ds
add
xor
jae
aad
jp
add
outsb
xor
sbb
xchg
stos
sub
cs
mov
notl
add
lods
xlat
xor
into
div
pop
loop
jecxz
xor
sbb
add
push
cmp
ret
cs
add
mov
jecxz
mov
pop
xchg
add
mov
adc
dec
ret
xchg
insb
add
add
dec
xor
andl
mov
jg
sub
mov
push
das
xor
dec
je
fadd
or
add
add
popa
jg
jae
add
xchg
movsb
loop
inc
sub
add
clc
cltd
add
jg
js
pop
cwtl
cmp
sbb
mov
setl
xchg
cmp
aaa
mov
push
jb
jl
outsl
lea
xor
pop
mov
xorps
push
lds
mov
push
push
jae
cli
cmp
verw
dec
scas
shlb
sbb
icebp
lods
cmc
add
xor
in
xchg
add
add
add
inc
cmp
inc
and
mov
fwait
js
adc
add
add
je
add
inc
cs
add
xor
jecxz
jnp
es
stc
add
xor
mov
add
and
in
dec
in
mov
inc
adc
adc
xchg
cmp
inc
xchg
jp
sub
notl
lcall
fwait
xor
loopne
inc
jne
lds
add
pop
aam
nop
push
ret
jns
add
mov
fdivs
add
rcll
push
cmp
int
push
mov
sti
insb
and
add
pop
repz
adc
addr16
dec
or
lds
in
cli
xchg
je
and
inc
push
add
push
pop
jbe
shll
scas
cmp
add
cli
sbb
add
movsb
lds
das
add
lds
leave
or
in
repz
lret
aad
shl
idivl
sbb
fadd
and
cmp
add
add
add
mov
rcrl
add
bound
jnp
add
add
push
jg
std
mov
lret
inc
pop
add
mov
std
imul
mov
and
jge
add
out
or
inc
dec
outsb
dec
add
mov
sbb
scas
push
loope
scas
xchg
adc
inc
push
pop
cmp
popa
sub
pop
add
mov
xchg
xchg
mov
loop
lds
xchg
stc
aam
mov
and
cmpsb
icebp
push
add
test
movb
into
and
clc
xor
add
mov
adc
into
out
add
push
scas
add
ljmp
xor
add
add
lock
arpl
add
out
jg
add
add
mov
icebp
ss
ja
xor
fwait
into
mov
out
xor
adc
jl
mov
push
mov
xor
add
loope
sbb
xorb
in
stos
aam
mov
jg
xor
int
pop
or
popf
add
lret
and
daa
insb
mov
outsl
add
jnp
push
xor
jecxz
mov
xlat
inc
daa
test
ret
pop
call
add
jns
popa
push
rcrb
pop
sub
add
xor
iret
out
inc
xor
push
xor
jmp
pop
lods
add
jnp
inc
mov
ror
mov
outsb
add
xchg
lret
mov
imul
ja
sti
add
or
sub
or
lea
add
repnz
cwtl
lret
jb
jb
dec
inc
xor
out
nop
leave
out
ret
cmp
lahf
mov
jl
scas
lret
pushf
mov
insb
fs
loop
add
add
add
inc
xor
or
adc
or
push
lcall
add
add
incb
pop
lods
mov
and
pop
cmp
mov
xchg
xchg
sbb
mov
cmp
and
stos
jbe
out
xchg
xchg
call
lock
lcall
add
mov
inc
inc
add
or
add
mov
or
in
xchg
mov
xchg
fs
xchg
stc
shll
cmp
xor
jp
dec
push
call
mov
inc
jl
or
dec
push
cmp
add
sbb
inc
inc
xor
adc
rcrb
add
xchg
add
xor
icebp
ljmp
pop
jle
les
mov
mov
push
jne
cwtl
mulb
xchg
and
jnp
mov
xchg
outsb
pushf
inc
inc
mov
dec
sbb
in
add
jp
sbb
out
mov
pop
mov
in
fs
rcl
icebp
push
xor
mov
pop
ret
or
xchg
loop
lcall
jb
and
cmpsb
movl
or
mov
add
jp
pop
push
push
jns
add
jl
movsb
lcall
add
ror
xchg
imul
aas
ret
jecxz
gs
xchg
or
aad
pop
lret
cmp
add
push
mov
fsubrp
mov
or
int3
cwtl
lret
xchg
sar
aas
inc
fdivrl
add
leave
add
add
in
daa
cmp
jge
mov
lcall
xchg
push
push
repnz
rolb
cwtl
or
pop
adc
add
lods
leave
adc
cmpsb
addr16
jecxz
dec
iret
push
pop
add
je
push
jo
cmp
mov
sbb
scas
xchg
in
into
add
add
popa
outsl
ja
jl
cmp
pop
jmp
ljmp
dec
push
or
loopne
sub
test
mov
push
xor
mov
mov
divb
xchg
incb
sub
sub
push
lods
inc
add
and
ret
fbld
orl
push
jae
mov
add
add
add
insb
add
js
std
pop
push
testb
nop
sub
roll
adc
or
add
and
jno
mov
add
cmpsl
imul
int
in
xlat
or
sbb
dec
popf
inc
int
add
mov
mov
das
enter
testb
mov
add
add
jb
movsl
mov
subl
scas
lret
lods
mov
push
add
cli
out
and
push
mov
lods
call
push
pop
add
mov
out
or
mov
enter
mov
sbb
pop
out
add
cs
dec
test
cli
cltd
scas
inc
mov
add
xchg
pop
mov
fdivl
std
adc
mov
lods
mov
dec
in
cmp
xchg
pop
mov
aaa
xor
repnz
jns
daa
add
das
push
outsl
test
dec
js
add
les
add
stos
imul
ss
dec
fisttpll
mov
push
lock
or
add
fs
cs
ljmp
push
and
cmpsl
lret
mov
pop
pushf
jno
movb
inc
imul
cwtl
in
mov
mov
pop
xchg
xor
xchg
add
sbb
outsb
cmp
add
sbb
cmpsb
test
icebp
push
cwtl
mov
pop
addb
sub
icebp
std
adc
adc
mov
pop
je
mov
lods
inc
aad
fs
pop
nop
lahf
mov
xor
mov
dec
outsl
sub
lds
jb
push
lock
sbb
add
mov
je
imul
jmp
fadd
in
add
les
sbb
lcall
jae
daa
pop
add
jle
dec
jns
pop
cld
add
jg
jns
dec
fildl
cmpl
and
mov
sub
fadds
mov
sbb
inc
dec
adc
mov
or
data16
clc
rolb
imul
push
aas
cmp
cmp
daa
fcomps
add
push
fisubrs
test
add
insl
inc
cwtl
sbb
mov
in
ljmp
loopne
jle
daa
fwait
and
jo
out
sbb
icebp
push
push
std
push
test
rcrb
lods
outsb
rolb
je
add
outsb
cmpsl
push
mov
cmp
leave
fdivr
jnp
or
fdivl
add
sti
sub
add
xor
jnp
jnp
loope
add
jle
xor
adc
jle
mov
cmp
ret
ret
lret
xchg
push
out
push
mov
add
icebp
xor
in
jmp
pop
inc
scas
or
fisttpl
repnz
clc
test
push
loope
add
add
stos
dec
ret
add
pop
jae
add
shlb
jl
sub
je
scas
fildll
fwait
cwtl
add
xlat
leave
cmc
mov
cmp
add
dec
int
cmpsb
or
rclb
cmp
leave
adc
rorb
sub
pop
pop
xor
sti
jle
int3
dec
adc
adc
add
inc
add
jle
xchg
add
movsb
mov
adc
and
add
and
ret
enter
mov
push
shr
xor
inc
imul
xchg
cmp
mov
insb
enter
xchg
rorl
out
pop
repz
arpl
xchg
lock
add
xor
push
mov
cmp
insl
cli
decl
cmc
mov
cmp
insl
jnp
and
daa
pop
xor
stos
mov
mov
adc
sbb
ljmp
add
add
xor
in
lds
fistpl
movsb
sar
cmp
mov
pop
dec
btr
std
mov
cltd
mov
sbb
jne
and
cwtl
mov
dec
jle
push
add
sbb
pop
xor
add
push
je
shll
add
nop
popf
mull
test
xchg
sub
mov
jg
orl
add
roll
shr
js
mov
or
cmp
dec
filds
outsb
or
mov
mov
xor
inc
lret
shr
xor
scas
dec
int3
mov
cmc
insb
das
loope
fisubl
aad
mov
and
jmp
cmc
add
add
pop
sub
leave
leave
test
add
gs
ja
push
scas
ret
adc
or
jo
outsb
or
lcall
cs
ljmp
push
nop
jge
inc
xchg
add
lock
and
xchg
mov
inc
add
add
add
add
outsl
or
nopl
les
mov
mov
push
sub
inc
dec
dec
cmp
adc
outsl
mov
leave
imul
gs
cmp
pop
scas
add
push
pop
mov
adc
stos
add
and
jns
rol
or
and
and
cltd
sbb
cmp
cmp
lock
cmp
pop
fsts
jmp
aas
pop
sub
sti
incl
or
fdivrl
aad
cmp
ljmp
fs
pop
clc
mov
sub
add
aas
cs
ret
add
adc
inc
mov
int3
mov
leave
out
add
dec
pop
call
into
inc
loop
ficoml
add
mov
stos
leave
add
movsl
sub
imul
cli
popa
push
pop
dec
add
scas
aaa
into
scas
cmpsl
xchg
ret
adc
xchg
loopne
sub
inc
or
ds
rolb
push
add
jecxz
inc
push
sbb
loop
jo
dec
push
add
dec
pop
subl
mov
fsub
mov
or
mov
add
adc
mov
mov
jg
mov
lcall
pop
dec
mov
add
outsb
inc
add
adc
add
add
imul
dec
aaa
add
push
and
pop
dec
imull
lret
inc
push
icebp
in
sub
clc
lods
xchg
int
lcall
pusha
mov
shrl
dec
push
lcall
stos
clc
push
sbb
sbb
adc
dec
dec
xchg
lret
sbb
and
call
xlat
or
xchg
scas
aas
and
shrb
xor
dec
loopne
and
add
xchg
or
add
jg
repz
insl
push
std
sub
sbb
mov
aas
cmp
mov
lret
fisubrs
lret
mov
jns
add
insl
icebp
mov
enter
out
adc
mov
iret
aaa
adc
lock
mov
dec
mov
adc
cld
lea
std
add
add
pop
insb
mov
adcb
sbb
and
lock
stos
incl
roll
pop
loopne
inc
cmp
in
mov
mov
cwtl
scas
mov
cltd
and
leave
and
sbb
xchg
sbb
jb
ret
xchg
xchg
xchg
out
jecxz
sbb
jo
pop
pushf
add
repnz
xor
cld
add
add
add
inc
in
nop
test
push
mov
jmp
test
clc
add
aad
sbb
setge
fsubrl
aam
push
xchg
adc
add
pop
mov
sub
and
jp
adc
hlt
popl
cwtl
sub
ret
rorb
dec
fistl
xor
mov
repnz
push
rcr
rolb
stos
cs
push
add
push
shl
out
scas
xchg
out
stos
add
add
scas
filds
inc
sbb
xchg
push
addb
add
dec
pop
ret
mov
push
arpl
jp
std
adc
and
loopne
push
out
das
add
scas
add
in
orl
mov
inc
mov
lds
repz
hlt
pop
xchg
add
jb
es
testb
in
mov
insl
inc
add
xchg
aad
roll
mov
insb
cmp
mov
push
sti
mov
or
add
testl
js
sub
add
xchg
push
cmp
jle
sub
xor
push
cmp
jns
xor
lcall
mov
pusha
sub
add
fldl
mov
jo
stc
roll
jmp
add
mov
cwtl
lods
daa
sbb
lds
rol
stos
pop
mov
add
dec
repnz
xor
ret
cmp
mov
adc
add
lahf
popa
lret
mov
sbb
lods
mov
filds
mov
verr
imul
add
insb
in
add
daa
or
decl
cld
arpl
in
sbb
inc
icebp
imul
xor
and
add
adc
add
repnz
adc
or
jo
add
aaa
int
cmp
jae
adc
sbb
mov
inc
outsb
jge
add
jl
je
xchg
push
add
and
sub
into
cmp
adc
jbe
std
jbe
dec
xor
insb
jb
push
ret
pop
adc
xor
test
mov
sub
add
xchg
scas
add
std
pop
call
cld
pop
repz
sbb
jbe
add
jp
movsl
push
sbb
enter
sub
loop
jecxz
in
repnz
aaa
jge
jp
mul
mov
es
xor
inc
sub
sub
xchg
pop
ss
pop
adc
xlat
jnp
frstor
lcall
xchg
lret
xorl
adc
fwait
jmp
lock
repz
add
aad
mov
xor
test
ja
clc
add
dec
stos
arpl
push
xlat
mov
xchg
shl
jbe
add
pop
out
pop
scas
adc
sub
std
adc
add
push
add
mov
lock
push
adc
into
sub
push
mov
or
icebp
decl
adc
add
cwtl
xchg
subb
dec
test
inc
xor
mov
add
sti
sbb
sbb
sahf
das
mov
loope
out
add
sub
adc
cltd
stos
mov
sbb
fdivl
testl
in
mov
pop
aad
dec
mov
fildl
mov
cmpsb
push
pop
das
int3
dec
sub
jns
mov
push
aaa
add
dec
stos
or
and
add
nop
add
jnp
mov
push
mov
call
add
jo
into
inc
jle
aas
jbe
ds
sbb
aad
mov
mov
and
sub
out
jno
test
cmc
adc
inc
sub
or
dec
add
add
imul
mov
out
bound
incl
aad
or
xor
add
adc
scas
xchg
and
incb
sbb
push
ljmp
add
sbb
fs
loopne
sbb
lahf
mov
je
sbb
add
or
das
add
mov
jno
jbe
push
add
fists
into
lcall
mov
add
add
popf
andl
fucom
or
cmp
add
jp
jb
add
sub
push
outsb
jmp
or
xchg
std
cmp
sti
shrb
add
add
aad
lods
addr16
mull
jb
add
inc
test
mov
popf
enter
call
pop
xchg
pusha
push
cmp
inc
int
insl
xchg
mov
sub
mov
aas
push
add
jbe
stos
mov
inc
and
add
add
int3
and
stos
dec
sub
jecxz
mov
xchg
add
aas
icebp
push
and
mov
rorb
in
cmpsl
roll
mov
cmp
aad
push
pop
adc
subl
pusha
mov
lret
adc
mov
insl
jne
lods
cli
or
shl
cmpsl
out
add
stos
cmc
add
add
add
xchg
add
mov
and
rcrb
and
add
scas
mov
fildll
into
adc
cmpl
sbb
sub
jno
lds
pop
xchg
inc
mov
add
fdivrl
inc
and
lret
ret
testb
test
fdivrs
es
add
push
sbb
mov
add
sub
loop
add
mov
inc
dec
or
add
mov
pop
add
fcmovnu
inc
scas
add
push
mov
arpl
adc
inc
mov
add
aaa
pusha
xchg
incb
aad
outsb
sub
insb
add
pop
mov
jo
dec
or
mov
repnz
add
repnz
jae
dec
movsl
xchg
mov
mov
jae
mov
fimuls
adc
fs
in
cwtl
add
icebp
fdivs
mov
movb
add
out
loope
imul
stos
test
rol
ja
sbb
mov
roll
fdivrs
and
push
mov
and
std
xchg
clc
mov
add
sbb
push
pop
inc
sbb
add
mov
jle
sub
hlt
xor
add
xor
mov
dec
iret
mov
pop
push
mov
jbe
or
add
sbb
jbe
and
add
push
add
xchg
add
loope
lcall
stos
inc
xor
pop
mov
adc
test
add
pop
ss
in
mov
pop
push
ret
orl
pop
pop
sahf
icebp
fucomip
push
xchg
cmp
mov
sub
clc
adc
jmp
int
add
repz
inc
jge
pop
push
not
push
iret
add
dec
sti
xor
call
dec
adc
inc
mov
push
pop
ret
je
add
shl
jne
mov
jbe
or
add
push
div
pop
cmc
ret
dec
fisttpl
outsl
in
mov
sbb
adc
mov
add
or
dec
imul
push
push
pop
lret
add
loope
cmp
cmpsb
sbb
int3
dec
and
fcomps
lahf
push
push
and
inc
cmc
shll
add
add
ja
add
int
add
cld
push
xchg
inc
shl
je
adc
daa
cltd
mov
inc
fcoml
add
xor
dec
push
fcmovb
adc
add
and
insb
daa
jbe
js
add
iret
test
fbstp
sbb
decl
aaa
imul
mov
iret
add
sbbl
ficoms
adc
pop
xor
test
test
mov
sub
add
andb
into
add
test
pop
adc
push
cmp
inc
add
aam
mov
xchg
flds
sub
gs
pop
pusha
push
int
dec
add
mov
push
cld
aam
movb
pop
clc
sub
insb
cltd
and
ds
imul
and
fldl
fcomip
mov
inc
test
stc
sub
push
enter
push
adc
out
cs
aam
cwtl
insb
add
push
addl
push
add
add
push
subl
jae
fistpl
push
xlat
outsl
pop
loope
add
or
aaa
sub
and
add
lahf
insb
add
mov
movsb
in
int3
jo
add
or
ror
add
sahf
add
pop
jno
shlb
flds
loop
out
out
add
bound
outsl
movsb
mov
test
cs
pop
add
stos
pop
sub
push
mov
mov
sahf
adc
ret
ds
cmpsl
shlb
pusha
push
lahf
add
xchg
mov
pop
outsb
mov
int3
les
xchg
push
in
sbb
sbb
mov
sbb
mov
pop
mov
mov
add
add
pop
cltd
mov
or
push
cmpsl
cmp
dec
cmp
or
inc
lcall
ret
pop
xchg
mov
add
pop
sub
test
cli
pop
cld
loope
cmp
mov
mov
and
sahf
pop
jae
jbe
xor
add
adc
mov
add
inc
ds
scas
push
cli
push
xor
mov
jl
push
pop
gs
movsb
add
lahf
adcl
push
fimuls
and
mov
rcll
movsl
or
imul
mov
mov
mov
test
test
pop
rolb
sub
ret
adc
mov
test
rclb
hlt
leave
or
inc
test
fldl
leave
pop
daa
and
adc
push
xor
stos
or
pop
outsb
cmp
sti
or
or
pushf
push
or
inc
lret
sbb
mov
jecxz
popf
inc
bound
test
je
fldl
ret
add
and
filds
add
test
fbld
out
lods
sbb
and
cmp
and
pop
sub
out
dec
add
add
inc
fs
sbb
jp
cmpl
cmp
frstor
adc
std
std
sahf
xchg
out
cld
add
mov
ss
ljmp
insl
add
pop
mov
add
pop
mov
les
cmp
jo
add
mov
xchg
test
lret
mov
gs
mov
bound
add
add
shlb
mov
mov
out
pop
pop
or
cwtl
xor
out
or
or
cli
out
add
and
push
mov
rcll
add
adc
lret
push
jecxz
lcall
std
outsb
xor
inc
pop
pop
cmp
cwtl
pop
mov
sbb
mov
push
cmp
add
jo
scas
test
mov
add
pop
inc
aaa
iret
nop
add
push
xchg
fucomp
imul
mov
sti
lcall
and
mov
add
mov
loope
add
push
cmpsb
lret
shrb
jo
lods
call
popf
fwait
popfw
fadds
push
ljmp
fwait
or
rorl
mov
cmp
add
fdivp
mov
cmp
jmp
je
std
loop
sbb
shlb
stc
and
inc
add
out
xchg
int3
xor
lds
jl
cmpsl
dec
or
mov
cmp
sbb
cmp
aaa
lea
xchg
mov
add
jmp
js
cmc
add
add
stos
and
adc
in
adc
jb
push
arpl
jmp
jne
aam
lods
dec
or
add
mov
add
fistpl
mov
cld
outsb
xchg
fisttps
iret
xlat
add
sti
insb
add
cmp
mov
mov
pop
verw
outsb
mov
es
xchg
xor
xlat
call
add
jmp
lret
dec
cmpl
pop
lret
jmp
lock
jg
add
jb
test
loop
scas
add
cmp
xchg
jg
rclb
inc
jmp
pop
add
leavew
mov
xchg
dec
xchg
testb
pop
mov
mov
pop
sub
aas
lods
mov
add
imul
mov
repz
xor
cmpb
es
xor
or
xchg
aaa
stos
jnp
mov
jmp
dec
jl
jmp
mov
lock
ficompl
pushl
push
push
xor
es
push
xor
pusha
pop
int
xor
lds
mov
arpl
lock
lods
pop
pop
inc
mov
jge
movsl
sbb
out
popf
mov
testb
push
stos
xor
sbb
fwait
mov
inc
adc
ja
divl
rcrl
dec
imul
push
and
popa
pop
add
mov
push
xchg
lock
cmp
mov
test
adc
out
lea
jge
jns
adc
add
or
sarb
sarb
add
push
in
mov
add
rolb
push
and
adc
cs
sbb
jb
test
pop
add
lock
xchg
sbb
stc
xchg
insb
dec
mov
lret
add
mov
jns
add
fdivr
adc
sti
push
dec
outsl
inc
jo
add
iret
jecxz
es
cmp
sbb
ljmp
mov
xchg
sahf
jns
mov
out
divl
adcl
shlb
mov
jl
shrl
push
gs
aam
inc
xor
pop
cmc
add
in
xchg
mov
sbb
jbe
jge
cmp
andb
push
imul
lahf
mov
nop
repnz
add
das
int
aaa
es
jne
inc
sbb
mov
mov
js
ret
aas
xchg
mov
pop
inc
or
das
push
add
push
cmc
add
sub
mov
add
add
jmp
je
or
mov
pop
mov
xchg
inc
pop
test
shlb
mov
ljmp
dec
lret
testl
pop
xchg
sub
add
fsubp
pop
lods
xchg
inc
mov
jmp
add
fdivrs
lock
cwtl
sub
mov
insb
incl
fistpl
fists
add
xor
mov
inc
add
stos
ret
or
icebp
mov
iret
jp
push
jecxz
cli
cmc
fstl
out
sahf
ror
pop
add
cmp
hlt
add
pcmpgtw
add
add
add
adc
cmc
xchg
xor
add
xor
lock
mov
mov
adc
in
xchg
add
dec
leave
mov
les
xor
leave
add
movsl
stc
add
add
jbe
mov
int3
popa
sub
add
std
arpl
call
pop
sbb
movsb
jno
xor
cmp
popa
loope
clc
inc
xchg
cmc
ret
dec
lock
scas
gs
xchg
mov
pop
add
jne
add
add
xchg
in
add
movsl
call
mov
add
aas
pop
cmp
inc
sarl
push
cwtl
mov
je
cmpsb
and
nop
sbb
mulb
jb
rcrl
pusha
jl
mov
pop
add
fstl
add
xor
cld
outsb
add
rcll
mov
add
adc
cli
xchg
dec
cld
add
call
sbb
add
add
out
sub
movsb
adc
clc
cmc
cmp
sbb
and
push
add
shrl
add
hlt
add
pop
hlt
add
inc
or
add
cmp
jmp
mov
push
xorb
mov
add
push
dec
sub
add
icebp
xchg
test
add
push
loope
or
pop
inc
or
js
out
imul
add
sub
les
jns
mov
add
cmp
sub
sbb
jo
mov
add
mov
loope
outsl
cmpsl
dec
xor
add
inc
xor
and
fcoml
add
adc
sub
cmp
mov
loope
add
loopne
mov
dec
and
fmull
xchg
and
add
mov
aam
stc
add
pushf
xor
popa
dec
add
cmpsb
push
add
mov
hlt
inc
inc
test
pop
adc
mov
das
cmpsl
dec
dec
int3
mov
push
call
fistpll
xchg
scas
call
mov
push
add
insb
mov
in
add
hlt
ret
repnz
add
sbb
adc
sti
dec
push
add
inc
rolb
jb
xor
lods
pop
roll
mov
add
push
jge
data16
and
jl
jno
outsb
jnp
outsb
aad
xor
inc
out
aam
push
add
jb
cmpl
sub
or
stc
mov
pop
sahf
lds
shr
sbb
adc
test
nop
mov
add
roll
add
aaa
in
jne
notb
nop
jg
jnp
lahf
pop
push
sub
aam
dec
xchg
out
fucomi
or
jle
inc
leave
xor
lcall
add
sub
add
ds
push
or
add
out
add
sbb
mov
sti
repz
lea
add
jl
add
pop
dec
jns
xor
insb
adc
fs
mov
add
fistl
scas
add
jne
aaa
stos
je
sbb
pop
int3
push
in
xchg
outsl
cwtl
dec
add
jl
xor
pop
cltd
xchg
rcll
ret
clc
add
je
add
gs
jecxz
push
push
xor
push
push
jmp
movsb
outsl
jl
adc
dec
fisttps
xlat
clc
mulps
imul
movl
js
and
add
jb
pop
xchg
into
pop
sub
int
and
dec
cmc
aad
dec
add
and
cmc
add
xor
adc
movsb
pop
sub
push
por
scas
xor
add
in
stos
imul
cltd
out
call
fiaddl
hlt
mov
lods
aad
and
fstpt
scas
mov
push
out
mov
cld
or
out
pop
sub
daa
dec
inc
sbb
push
icebp
imul
push
leave
add
daa
sbb
ljmp
cmc
add
das
jns
pop
cld
add
jo
add
push
bound
jg
add
mov
xor
adc
sub
inc
cmpl
fnsave
jl
xchg
inc
gs
shrb
movsl
pop
push
je
add
rol
cmp
add
adc
sbb
xchg
mov
or
mov
movsb
je
dec
inc
push
xchg
sub
add
and
enter
jge
xchg
cmp
add
jge
xchg
pop
pop
andb
idivb
jbe
cmp
lea
sarl
xchg
jnp
push
add
outsl
xchg
pop
inc
mov
jle
add
mov
or
lods
lahf
std
or
dec
dec
and
cmp
test
pop
push
in
adc
inc
push
xchg
mov
movl
nop
add
mov
mov
adc
or
ljmp
subb
addl
mov
into
pop
aad
lods
push
jb
cli
xor
pusha
gs
add
cmp
and
add
cli
fisubrs
pop
push
ja
insb
adc
dec
mov
icebp
add
fidivl
jmp
fistpl
outsl
inc
inc
add
sub
mov
leave
rcll
pop
data16
push
nop
inc
pop
shl
xor
or
add
adc
xchg
ret
pop
add
jns
adc
xchg
add
mov
cli
iret
and
cmp
sbb
and
pop
into
jle
cmp
aas
into
insb
mov
cmp
add
push
add
test
add
cltd
into
dec
test
into
aaa
fwait
and
daa
push
pushf
ds
inc
jmp
mov
add
leave
je
and
je
dec
fdivrl
mov
insb
insl
cli
mov
adc
jp
sbbl
pushf
inc
lahf
add
sbb
lahf
js
push
mov
cmp
mov
repnz
sub
int3
mov
jae
or
test
or
outsl
or
sbb
in
xchg
xchg
add
lds
add
sbb
mov
fiaddl
pcmpeqb
cmpsl
ret
gs
dec
gs
or
divl
aad
movsb
and
add
add
add
jp
call
mov
verr
les
fnstenv
inc
push
push
test
cmp
std
or
add
cld
sub
add
sbb
jne
adc
int3
imull
xchg
xor
call
add
cmp
scas
mov
mov
call
mov
pop
sbb
mov
outsl
add
add
add
popf
add
xchg
xor
call
test
fiaddl
loopne
jne
cmpxchg
mov
repz
xchg
or
sti
jns
pop
clc
add
cmpsb
add
sahf
pslld
xlat
std
inc
out
fs
adcb
jnp
repnz
mov
jo
js
stc
xor
mov
sbb
lahf
fwait
adc
sbb
data16
mov
int3
xchg
adc
add
add
push
mov
pop
stos
in
cmp
pop
pop
jge
add
mov
push
push
cmp
call
add
add
cmp
stc
xor
cmp
fistl
js
popa
mov
cmp
stos
xor
add
jne
jmp
sub
rcrl
push
jno
dec
jmp
loopne
or
push
ret
scas
lahf
xor
inc
sbb
mov
or
mov
xchg
add
pop
cmp
fldl
lea
add
add
data16
or
jb
inc
daa
std
out
ja
add
cmp
push
cwtl
stos
push
dec
inc
add
test
push
lods
js
mov
pushf
xchg
add
push
pop
mov
add
pushf
mov
or
fiaddl
jl
mov
outsb
pop
dec
test
and
les
inc
inc
xchg
xchg
nop
sub
les
test
cmp
nop
lahf
pop
mov
out
add
roll
cmp
and
je
addb
cmp
int3
dec
lahf
nop
lret
xor
add
push
jnp
fsubl
lock
outsb
add
les
lock
xchg
arpl
or
inc
ud2
lret
add
test
push
mov
xor
push
add
movb
or
out
movsl
add
scas
xchg
pop
std
lea
and
inc
add
or
mov
pop
push
sbb
roll
pop
add
std
leave
pop
and
ret
ds
add
test
add
stc
loope
aam
sbb
and
push
sarl
cmc
int3
cltd
sahf
pop
adc
cli
or
xor
jl
mov
add
flds
sub
push
pusha
add
sbb
pop
out
repnz
and
mov
dec
insl
fildl
ds
jmp
add
mov
xor
adc
xchg
add
mov
fmulp
cwtl
and
call
pushf
cmc
aad
ljmp
outsb
adc
jl
roll
ljmp
add
es
into
cmp
aaa
mov
mov
xchg
add
test
ficoms
xchg
sbb
push
add
add
jno
adc
jo
add
jbe
cmpsl
int
test
ret
push
lret
insb
mov
xor
xor
add
roll
lock
add
cmc
mov
xchg
addl
stc
stos
in
push
movsl
or
test
dec
jecxz
negb
divb
mov
inc
mov
pop
rorl
gs
sbb
int
sbb
ret
pop
pop
sahf
push
push
push
das
sub
mov
push
dec
xchg
lods
push
jl
add
jmp
or
xchg
xbegin
flds
jmp
stc
inc
daa
std
fwait
or
pop
ret
leave
jg
lret
xchg
iret
adc
sub
aaa
add
call
sbb
jmp
push
add
adc
into
dec
inc
sub
inc
scas
fisubs
leave
sub
add
out
sbb
icebp
mov
add
ss
add
add
push
add
add
lea
mov
aaa
jp
push
and
and
insl
inc
jns
mov
lcall
pop
xor
stos
pop
adc
inc
adc
add
mov
jns
ds
or
pop
cwtl
xchg
fs
cmp
xorb
out
add
loope
mov
xor
xor
mov
adc
mov
mov
and
je
inc
gs
push
leave
push
xchg
jp
dec
push
cld
into
dec
pusha
pop
gs
mov
mov
cld
xchg
adc
dec
dec
jnp
sbb
dec
pusha
mov
into
imul
jo
cmp
out
into
add
in
adc
add
push
dec
imul
add
ljmp
popf
sti
inc
mov
aas
push
movsb
xchg
ljmp
inc
daa
lods
cmp
mov
out
add
mov
lret
shll
jns
xor
add
das
stc
xor
dec
xchg
inc
dec
jae
lods
cwtl
pop
add
add
loop
repz
ljmp
sub
dec
in
push
or
sbb
xor
fcoml
gs
out
sub
jl
outsl
dec
mov
lock
pop
mov
ucomiss
sbb
repnz
lds
inc
nop
ret
add
add
cmp
jnp
clc
sbb
adc
push
mov
add
add
jae
and
sbb
push
jbe
add
xchg
add
mull
push
xchg
clc
hlt
mov
add
mov
stos
das
leave
add
cmp
std
or
enter
adc
out
cwtl
out
pop
push
mov
push
add
cmp
dec
add
loop
cmp
sbb
fldt
jne
movsb
icebp
fistl
push
jae
lret
ljmp
inc
lds
add
and
lods
loope
pop
ja
add
add
xor
pop
das
mov
jns
idivl
mov
rclb
mov
leave
ret
decl
addr16
mov
bound
not
inc
stc
shlb
lahf
dec
xor
hlt
mov
sub
aas
ss
dec
sahf
cmp
in
or
lcall
jae
fimull
enter
add
gs
and
popf
mov
fnstsw
push
dec
daa
scas
or
ds
divl
mov
xchg
shll
sahf
outsb
pop
and
add
and
sub
and
mov
ret
or
sub
pop
sbb
adcl
adc
aas
mov
js
cmp
roll
cmp
aam
mov
sub
dec
shlb
repnz
add
insb
pop
pop
dec
or
jns
add
add
push
popa
xchg
mov
sub
sbb
in
pop
push
sbb
stos
mov
add
pop
mov
inc
outsb
shrl
mov
push
out
scas
cs
icebp
ss
xchg
mov
add
xchg
cmc
add
inc
loope
or
callw
or
mov
in
scas
add
dec
imul
stos
bnd
and
pusha
aam
add
push
push
push
add
and
test
jo
cmp
sarb
jle
jmp
ss
mov
adc
lods
add
mov
cs
mov
es
fdivs
loopne,pn
inc
ja
insl
sbb
sbb
out
xchg
in
pop
xor
popf
fsubr
xor
movsl
mov
sbb
xchg
mov
xorb
insl
pop
xor
inc
testb
sahf
je
enter
add
daa
jge
arpl
shlb
xchg
int
mov
mov
filds
pop
movswl
outsb
aas
add
xchg
aas
mov
ret
mov
das
aas
xchg
mov
jns
mov
fwait
lcall
lret
xchg
xchg
xor
xlat
or
xor
std
or
iret
jnp
sub
adc
dec
hlt
test
push
sahf
push
add
push
cs
test
jbe
add
and
sbb
lods
inc
test
push
or
or
sbb
xor
imull
insb
bound
aam
ficompl
call
addr16
leave
add
out
mov
mov
lret
jno
movl
scas
mov
cmp
jno
out
dec
and
dec
add
add
or
jbe
add
fnstenv
cmp
jbe
mov
add
mov
mov
sarl
inc
jmp
add
ud0
divl
int3
faddl
sbb
insb
jne
pushf
adc
sub
add
mov
popf
loope
mov
xchg
stos
jae
xor
cmpsb
repnz
push
adc
lahf
shl
add
sub
adc
add
xor
jmp
pop
loop
push
add
rcll
clc
je
cmpsb
icebp
cmpsb
icebp
adc
dec
pop
push
movb
adc
sub
scas
mov
add
gs
add
and
mov
push
add
clc
sbb
mov
fxch
lahf
and
leave
sub
add
das
insb
xor
xor
and
imul
test
fldl
add
mov
dec
adc
push
andb
sbb
inc
add
rorl
fbld
fbstp
jmp
test
jne
mov
add
pop
pcmpgtw
ror
mov
add
add
mov
jb
lds
std
add
xchg
popa
call
arpl
mov
outsb
sub
lods
stos
pusha
add
lods
ret
xchg
or
aas
dec
mov
ljmp
sub
push
insl
add
push
repz
push
mov
in
int
pop
sar
mov
pop
pusha
enter
sbb
lret
pushf
cmp
inc
jns
hlt
mov
jb
mov
push
sub
mov
stos
adc
mov
fadds
leave
xchg
lcall
fcmovne
arpl
pop
enter
push
flds
arpl
add
add
sub
or
lods
repz
incl
push
sbbb
outsb
andb
dec
roll
push
dec
lods
fiadds
mov
mov
xor
sbb
xlat
ja
jmp
popf
cmp
cwtl
mov
add
sub
pop
sub
add
pushf
fs
push
and
lahf
incb
lods
ds
addb
mov
add
pop
mov
insb
fsts
xor
rcrb
iret
or
incl
cmp
jg
dec
cmp
cld
fcomps
loopne
add
push
add
lret
xor
out
push
dec
lea
mov
in
out
lea
adc
add
xchg
add
add
dec
add
cmc
adc
xor
inc
fs
int
dec
out
sub
dec
incl
mov
xor
mov
push
add
mov
push
add
mov
add
mov
xor
loope
arpl
jg
and
out
sub
repnz
pusha
add
in
push
adc
repz
into
push
stc
add
sub
sub
pushf
imul
shl
inc
mov
add
cmpsb
xor
add
sbb
xchg
fcoml
imul
or
outsb
adc
incb
or
pop
mov
aad
ljmp
test
push
push
iret
push
sbb
add
in
popf
sbb
xor
je
inc
cli
jne
test
cmp
mov
aad
les
push
into
icebp
faddl
fbstp
jb
lods
inc
movsl
cld
mov
test
cmpb
fsubrs
dec
pusha
pop
cmc
add
lods
gs
adc
lods
cmp
ret
add
stos
in
and
push
push
iret
adc
and
add
repnz
push
test
jne
and
dec
mov
loopne
mov
jae
mov
push
fstp
push
sub
jo
orb
jmp
jnp
inc
sti
repnz
jae
ljmp
sbb
xor
adc
rcrl
inc
ret
pop
sbb
mov
ret
xchg
push
push
xchg
add
adc
xchg
arpl
dec
movsl
mov
cmp
in
pop
sbb
cmpsb
add
cmc
or
and
add
add
cs
mov
mov
or
clc
lea
or
imul
mov
sbb
mov
insl
cwtl
pop
sub
test
dec
out
jnp
cli
cld
inc
lds
mov
add
sahf
and
xorl
or
in
xor
test
sbb
add
pop
pop
sub
xchg
lea
sbb
inc
add
addr16
xchg
jle
sarl
inc
iret
lcall
xchg
adc
add
xchg
insb
das
sbb
add
jbe
in
stos
test
mov
or
fldenv
popf
ljmp
addr16
int
xchg
ret
mov
xchg
push
nop
cmp
enter
add
xchg
mov
add
icebp
mov
loopne
test
in
inc
rolb
repz
mov
jno
popl
pop
sub
icebp
add
popa
stos
lods
pop
sub
in
cmp
or
pop
and
add
jmp
add
add
xorb
mov
push
aaa
and
and
fucomip
jo
add
cmpsb
push
data16
lcall
dec
and
and
aad
jle
add
movsb
xor
push
sub
push
add
add
bnd
sbb
imul
or
lea
add
addr16
clc
cmp
inc
or
cmpsl
add
clc
sub
push
sbb
repnz
cltd
push
pop
daa
test
pop
lcall
push
lcall
cmp
fiaddl
sub
jae
xchg
test
jne
push
enter
inc
jb
push
pop
xor
xor
lock
mov
xor
jb
sub
sbb
sbb
add
mov
orl
xchg
xchg
jae
push
xor
push
flds
push
sbb
lret
pop
cmp
jo
sub
dec
into
outsl
sub
and
jo
add
in
and
mov
lret
cmp
insl
mov
push
mov
lods
lock
into
dec
idiv
push
mov
repz
pop
add
inc
dec
add
cs
pop
mov
out
pop
push
and
out
insl
mov
cwtl
add
xor
push
lds
out
lahf
add
adc
mov
mov
aas
mov
pop
sbbb
insb
test
aad
xchg
add
mov
xor
pop
xor
jae
add
enter
xchg
aad
outsl
add
cmp
xor
and
mov
pop
sub
xchg
imul
adc
mov
xchg
mov
repz
testl
pusha
inc
mov
pop
mov
sahf
lock
dec
mov
jge
fincstp
push
and
mov
xchg
fnstsw
ljmp
fldl
push
ja
jnp
dec
test
add
inc
xchg
insl
adc
sub
mov
test
jmp
jae
or
cmp
leave
sbb
pop
and
test
cmpsl
in
add
and
xchg
fimuls
repz
scas
push
jecxz
addb
dec
and
notl
ret
imul
add
add
dec
add
js
jge
mov
std
jp
push
test
jne
aaa
adcl
lret
ljmp
sbb
das
add
jnp
cwtl
push
sbb
xchg
fidivs
adc
mov
pop
hlt
arpl
add
jb
jmp
lods
shll
add
push
cmp
test
jge
stos
sbb
in
xlat
inc
jl
in
add
or
lods
mov
mov
les
lock
sub
stc
and
sbb
adc
add
cld
fcompl
enter
sahf
mov
mov
clc
mov
aad
mov
ret
fs
push
cli
popa
icebp
cs
sar
sbbl
dec
mov
and
addb
add
movsl
fwait
xchg
pop
nop
aaa
gs
pmulhuw
sub
pop
sbb
loop
pop
xchg
cmp
jne
in
loope
testb
add
cmp
jns
jl
call
dec
adc
mov
out
jae
push
lods
inc
cltd
pop
cmc
pop
push
out
es
lods
test
dec
mov
adc
imul
loopne
repz
add
xchg
fwait
mov
pop
or
ret
jae
daa
lret
mov
js
outsl
ds
lods
mov
lret
mov
cmc
mov
jecxz
add
incl
stos
insb
sbb
mov
mov
lods
lea
add
adc
mov
mov
in
gs
jmp
movsl
in
inc
test
xchg
loope
add
mov
mov
fildll
jnp
repnz
lret
dec
sub
add
inc
and
sub
movsl
add
push
push
fimull
pop
sahf
push
iret
push
in
mov
push
add
lret
ss
clc
jmp
sbb
inc
jp
les
mov
cmpsb
jg
add
mov
arpl
cltd
clc
dec
jb
add
pop
nop
adc
xchg
cmpsl
sub
aad
ret
xor
push
pop
add
lcall
jl
adc
fs
fs
add
mov
pushf
cmp
out
mov
push
mov
or
incl
cmc
imul
push
and
mov
add
fists
inc
cmpsl
inc
cmpsl
mov
hlt
hlt
fiadds
jmp
mov
arpl
xchg
loope
daa
mov
pop
and
mov
out
hlt
jecxz
cltd
leave
inc
out
call
lock
sub
mov
pop
arpl
sahf
nop
add
jecxz
shll
push
add
add
movsl
call
shll
inc
in
and
sbb
dec
fldl
jge
add
jg
mov
mov
aam
pop
jl
or
scas
mov
push
mov
fstps
pop
mov
xor
adc
insb
aam
sbb
cmp
stc
shll
xor
je
xor
inc
not
pushf
je
mov
ficoms
add
xchg
mov
xchg
xchg
xor
mov
add
out
and
scas
jbe
imul
sub
add
sbb
pop
stos
popa
inc
incl
add
aas
ret
xchg
es
out
leave
int3
add
jns
std
add
loope
xor
add
shl
cwtl
mov
fsubrp
add
pop
xchg
inc
jb
pop
jo
push
dec
adc
xchg
outsl
sbb
arpl
leave
lds
xor
jge
pop
xor
xor
fstps
dec
push
pop
jae
mov
jne
sub
call
mov
stc
push
push
rolb
add
add
addr16
cmp
jae
pop
rcrl
pop
jl
add
xlat
arpl
cld
pop
mov
pop
cmp
add
push
test
jp
test
scas
arpl
fsub
pushf
test
cmp
jbe
sub
add
mov
push
pop
shrl
add
add
add
or
add
or
inc
cmp
mov
call
sbb
push
or
add
dec
add
clc
sbb
add
mov
ret
jmp
push
add
add
push
xchg
sub
das
shrl
clc
shll
lret
add
call
fwait
in
add
mov
mov
sahf
cltd
aam
sub
add
lret
loop
daa
je
inc
icebp
xor
or
xchg
dec
aas
movups
in
or
or
or
imul
int
xchg
sub
push
add
xchg
ja
mov
rorb
adc
shrl
sub
xchg
stos
js
mov
xor
xlat
inc
shll
and
cld
and
cmp
ficoms
cld
xchg
inc
pop
xchg
adc
inc
push
and
loopne
add
data16
in
enter
dec
xchg
xor
xchg
scas
jecxz
mov
dec
insl
dec
dec
pop
rcr
jl
test
inc
std
popa
add
mov
xchg
fucomp
add
pushf
jmp
push
add
inc
mov
jbe
test
fwait
jbe
push
and
dec
jnp
sub
mov
cwtl
lcall
aaa
push
jno
add
lret
jne
mov
push
jecxz
call
mov
clc
out
cmp
andl
mov
cmp
sub
add
add
stos
cli
xchg
pop
int
and
das
push
xchg
jp
jne
and
jecxz
fsubrl
push
sub
pop
es
push
sbb
aad
adc
test
ja
daa
roll
je
inc
add
leave
stc
add
jp
test
or
loope
add
dec
notl
push
cmp
push
lcall
inc
mov
das
inc
adc
mov
iret
xor
sbb
mov
sarb
mov
add
and
pop
add
lret
dec
outsb
call
scas
dec
cmp
sub
add
mov
bound
loop
sbb
xchg
into
add
xor
mov
cwtl
or
rorb
into
mov
cli
popa
add
lea
aam
in
stos
xchg
fwait
popf
mov
xor
add
ljmp
testl
enter
dec
in
add
mov
sub
cmpsb
je
xor
or
add
push
dec
and
mov
add
xlat
popa
lea
add
and
ds
in
das
pop
mov
add
add
mov
popa
imul
cmpsl
xchg
add
nop
push
pop
pop
jb
cmpb
sub
imul
xor
aam
adc
cmc
add
mov
mov
xor
into
in
stos
inc
jb
mov
insb
and
popa
sub
sub
clc
cmp
test
xchg
icebp
add
inc
cmp
imul
mov
mov
jg
push
add
jg
add
mov
cld
jae
pop
add
hlt
add
or
stc
mov
push
cmpsb
mov
push
add
inc
pop
aas
inc
lds
lods
push
and
in
aaa
insl
adc
scas
es
xchg
ljmp
inc
mov
inc
and
mov
shlb
inc
adc
jge
xchg
and
test
add
hlt
imul
test
std
js
add
sub
mov
xor
cmp
add
hlt
push
les
jecxz
cs
inc
sbb
mov
and
sbb
add
rclb
add
jge
pusha
call
lahf
fstl
repnz
out
lds
fiaddl
jb
in
or
or
loopne
fstl
jecxz
aas
mov
decl
imul
mov
mov
add
jo
mov
xchg
subb
cmc
jns
mov
add
icebp
mov
mov
aam
xchg
lds
sbb
out
sub
add
mov
ficoms
add
aas
addr16
mov
and
push
pop
push
in
std
addr16
add
add
push
sbb
nop
add
cmp
mov
or
shl
ret
lret
adc
dec
pop
inc
jl
mov
in
cltd
push
or
cli
add
in
xorb
add
addr16
cmp
add
cmp
pop
sbb
adc
add
lods
imul
add
sbb
jno
add
flds
add
jl
mov
outsl
ss
mov
adcb
push
outsb
outsb
or
sbb
mov
jae
movsl
pop
out
xlat
test
cs
jbe
push
scas
sahf
add
add
movsb
adc
ds
push
add
xchg
sti
mov
add
fs
mov
mov
hlt
mulb
pop
or
push
jno
or
push
mov
adc
les
add
dec
or
push
cwtl
push
pop
adc
mov
add
sub
rolb
push
xlat
insb
add
adc
fistl
add
std
cmpsl
or
call
add
js
pushf
inc
add
jg
insl
xor
add
jp
add
dec
clc
filds
fstp
cmp
dec
in
rolb
add
pop
mov
loop
iret
ret
ret
xchg
mov
lods
push
and
push
pusha
sahf
xchg
dec
or
fwait
jl
sbb
mov
insb
add
pop
inc
cli
add
cs
dec
cmp
les
jmp
fimull
mov
add
rcl
add
and
scas
dec
repz
movsb
outsl
test
test
jae
cmp
xchg
cs
add
rolb
pop
repnz
dec
sbb
cmp
pop
call
stos
push
lret
fsubrs
cmp
xor
adc
cmpsl
mov
adc
mov
ret
fnstsw
or
jmp
pushf
mov
add
fsubrs
cld
sub
js
xor
sbb
lahf
xchg
pop
cs
mov
pushf
testl
add
add
add
lcall
in
push
sbb
loop
ss
add
inc
cltd
or
lock
dec
mov
out
out
push
insb
push
mov
cmp
mov
pushf
js
data16
add
outsl
aad
push
add
and
dec
and
enter
add
or
xor
add
decl
jmp
cli
sub
popa
add
or
outsb
fildl
mov
xchg
xchg
pop
movsl
sti
pop
mov
cli
sahf
mov
adc
fldcw
jo
and
cld
das
pop
outsl
add
push
iret
and
les
mov
jmp
push
cwtl
data16
das
xorl
fisubl
test
pop
rcrl
je
jno
mov
loopne
sbb
inc
aas
outsl
ljmp
dec
pop
ret
aaa
mov
add
cmp
jno
lcall
fwait
cli
test
jmp
adc
push
mov
add
adc
fsubrs
push
add
mov
xchg
aaa
mov
push
mov
cli
xchg
add
and
push
cmp
and
add
shrl
xlat
leave
into
std
dec
and
out
test
out
cld
or
sub
mov
add
into
outsl
pop
cmp
mov
mov
pop
xorl
lea
ja
sti
test
insl
shlb
sbb
add
add
int
ja
outsb
sbb
stos
rcrl
ficomps
xchg
mov
pop
repz
add
dec
adc
add
add
jnp
repz
pusha
add
sar
ss
in
jp
mov
add
std
inc
push
pop
pop
sbb
add
ss
addl
out
mov
sub
inc
movsl
movsb
decb
add
vmwrite
cmp
jl
outsl
outsb
add
jg
add
pushf
mov
divl
not
push
pop
dec
jg
stos
inc
rclb
sub
flds
sbb
push
and
sbb
orb
cmc
push
mov
mov
rclb
test
dec
add
jl
push
aad
arpl
int
cmc
pop
outsl
mov
mov
mov
push
repnz
push
mov
incl
jl
xchg
jecxz
mov
loope
push
subl
stos
notl
push
dec
and
out
in
jbe
sub
add
mov
push
stc
aad
xchg
jns
mov
mov
ret
clc
leave
scas
pop
add
and
mov
test
cmp
outsb
cltd
pop
add
add
or
push
push
sub
jae
or
dec
sti
mov
add
repnz
dec
testb
repnz
sahf
mov
pusha
sti
enter
lahf
add
repz
movsl
jl
add
popf
dec
add
stos
add
into
ljmp
cmc
xchg
jmp
add
add
push
ljmp
clc
jb
pop
add
cltd
sub
fmuls
int3
pop
xchg
outsl
dec
xor
or
dec
subb
lds
push
jne
call
jge
mov
fistps
add
sub
aam
xor
imul
cmc
or
or
in
add
lods
mov
testl
and
xchg
cltd
stos
mov
and
xor
sub
in
pop
sbb
dec
add
lahf
and
fldt
xor
mov
sub
addl
add
sbb
str
xor
mov
add
add
hlt
into
cmpb
jne
movsb
jl
dec
and
ret
mov
adc
pop
lret
jne
mov
aad
insb
push
jbe
incl
lret
inc
sbb
into
mov
add
leave
and
add
sub
repnz
add
add
add
nop
and
and
xchg
lahf
jg
mov
xchg
mov
add
in
cmp
cld
in
mov
cmp
cli
out
popf
lret
int3
push
mov
fisttps
popa
sub
dec
sbb
lods
pop
add
add
push
mov
loopne
push
imulb
pop
push
inc
pop
cwtl
mov
sahf
mov
and
iret
popa
stc
add
add
add
sahf
xor
dec
arpl
iret
in
movsb
movsb
shll
mov
mov
add
sbb
inc
fstpt
fimuls
dec
push
loop
stos
icebp
ja
clc
jb
loope
dec
mov
jg
stos
out
sbb
push
pop
cltd
data16
pop
pop
jecxz
sbb
add
repnz
aam
add
iret
icebp
jae
pop
xlat
or
loopne
iret
test
xchg
add
mov
dec
xchg
mov
idivl
call
bound
lock
out
lea
xchg
out
or
jae
add
je
add
and
sbb
mulb
lret
inc
add
imul
inc
mov
jg
mov
push
add
push
popw
pop
jp
jle
fs
xorl
pop
arpl
lea
push
ficompl
sub
movsb
mov
add
sub
iret
mov
mov
enter
or
or
adc
inc
mov
push
fld
add
push
cwtl
push
in
fildl
add
jbe
repz
stos
shlb
rcrb
add
stos
lret
frstor
movsl
xlat
loop
loope
jbe
out
mull
test
mov
add
pop
repnz
loop
dec
cmp
pause
sahf
or
inc
jge
cmp
and
add
inc
pop
imul
add
mov
cld
sbb
xchg
mov
sub
and
sahf
pop
pop
add
addb
mov
sbb
mov
in
pop
mov
test
shll
mov
jb
cmp
inc
js
jmp
fs
stc
adc
add
sbb
je
fs
add
mov
in
int3
movsb
adc
icebp
loopne
adc
lock
adc
aas
sub
xchg
mov
sub
pop
mov
je
nop
iret
aad
stos
out
or
scas
push
cmpsl
into
lods
push
xchg
scas
scas
sbb
movsl
imul
aad
pop
add
dec
rorl
or
outsl
pop
sub
fs
mov
stos
movsl
daa
aam
mov
mov
cld
pop
mov
cmp
sti
adc
pop
add
test
or
adc
add
mov
add
loop
testl
push
aam
xchg
xlat
sub
mov
xchg
insb
shll
popa
cmp
add
lret
mov
ret
xchg
inc
lods
mov
cmp
jge
or
clc
add
clc
inc
cli
in
xchg
xchg
hlt
sub
aas
xchg
clc
or
add
lods
or
add
push
andl
ret
shlb
xchg
mov
inc
mov
into
fmul
dec
push
cmpsl
mov
xlat
loop
and
ljmp
andb
movl
or
add
add
mov
xor
sub
cltd
cli
inc
cmp
fisubrs
mov
cwtl
pop
test
jge
fldl
insb
dec
andl
dec
cli
leave
mov
jge
pop
jo
push
lret
shlb
daa
inc
cmp
add
shrl
les
pop
add
mov
cmp
add
aam
mov
add
add
inc
cmp
jne
pop
jmp
xor
fildl
bound
cmp
outsb
mov
or
mov
jmp
daa
shrl
and
push
add
outsb
cli
sub
dec
adc
ret
mov
mov
sbb
rcrl
add
inc
mov
adc
mov
loopne
add
cld
push
pushf
cmp
aam
outsb
call
pop
push
dec
jmp
mov
cld
add
inc
stos
sbb
popa
add
scas
dec
add
test
out
sbb
push
cmc
int3
xchg
add
pop
jge
rcll
fstpl
cwtl
and
popf
cmp
shrl
shll
cld
fisttpl
mov
ficompl
lret
add
add
lds
add
ficompl
add
inc
lock
add
enter
jle
push
jecxz
inc
xchg
dec
push
pop
loope
mov
push
or
jecxz
cmp
fadd
test
add
add
push
mov
pop
jbe
movb
inc
add
mov
push
insb
sub
roll
add
cmp
gs
into
aaa
push
addl
fsubrs
andb
pop
add
cmp
sbb
xor
sub
lods
jl
mov
insl
mov
or
shlb
dec
call
shr
pop
lods
in
sub
and
bnd
inc
inc
movsl
scas
test
inc
sub
or
jno
fcmovnbe
add
lahf
subb
addl
ljmp
jns
add
iret
lret
je
xor
dec
mov
iret
jmp
lret
or
loop
add
call
ljmp
add
cwtl
adc
mov
add
dec
dec
lret
mov
repnz
fistl
and
pop
test
push
push
in
mov
add
or
pavgb
cwtl
rcrl
fstpl
ja
lock
inc
xchg
push
jbe
or
and
xchg
repnz
push
inc
dec
pop
ror
roll
adc
cmp
repz
jb
out
mov
cmc
popa
cmc
popf
enter
sub
imul
add
adc
add
cld
mov
xlat
xor
or
in
arpl
repz
pushw
movsl
adc
fcompl
xchg
mov
nop
aam
pop
repz
scas
out
mov
add
add
jp
push
faddp
pop
fstl
cmpl
arpl
inc
jns
mov
pop
dec
mov
jae
add
gs
mov
fsts
ret
lds
mov
inc
ja
mov
andb
xor
sbb
in
and
jecxz
cmp
adc
pop
and
subl
pop
cmp
jmp
jnp
add
pop
lods
pminub
in
nop
mov
add
mov
or
add
add
data16
push
and
sbb
insb
ja
imul
jbe
jns
imul
bound
cmp
jg
inc
push
mov
add
add
add
pop
push
js
icebp
mov
xorl
popl
jns
jmp
not
add
xchg
push
fdiv
lock
subl
fldenv
jo
mov
jne
mov
push
adc
pop
out
add
xor
jmp
cmp
pop
lock
lock
cmp
aam
fneni(8087
push
pop
push
add
imul
mov
fistpl
pop
int
inc
mov
mov
mov
dec
add
adc
cld
sub
in
mov
sbb
sar
push
mov
or
lock
imul
xchg
test
adc
sub
out
xor
fwait
xlat
pop
daa
dec
in
jle
and
int3
push
notb
mov
mov
pop
add
cwtl
xchg
aaa
push
test
mov
jbe
add
popf
add
hlt
mov
repz
jmp
gs
lods
outsb
add
push
sbb
mov
ja
movsb
in
movsb
inc
add
add
in
push
add
add
aam
sbb
or
add
pop
sbb
sbb
cmp
xchg
aas
pop
add
pop
push
or
out
add
push
add
loopne
push
sub
insl
add
sti
pop
ds
mov
dec
mov
icebp
push
and
mov
push
jnp
cmp
jne
mov
lock
dec
mov
ror
in
mov
mov
je
mov
dec
add
sbb
sbb
xor
lahf
repz
add
arpl
fnstcw
test
add
ffreep
mov
push
hlt
xchg
out
dec
sub
cld
xor
mov
pushf
rorl
dec
add
jb
lock
add
aad
jecxz
popa
cmc
gs
les
addl
divb
add
xchg
and
add
add
in
pop
add
or
roll
mov
pusha
fdivrs
rorl
mov
jg
and
pop
add
mov
xlat
jnp
mov
jnp
stc
mov
popf
sub
push
daa
mov
incl
pushf
into
lods
or
add
and
and
sbb
xlat
mov
add
lcall
mov
mov
xchg
cmc
scas
xchg
jecxz
and
dec
mov
sbbb
push
xor
out
outsl
fldl
add
mov
xor
call
sbb
add
test
mov
inc
daa
insb
jns
cmp
dec
or
and
ja
out
add
xor
pop
xchg
sub
sahf
rolb
sbb
out
and
mov
daa
add
or
test
push
add
movsl
add
add
sbb
pusha
out
adc
add
cmp
repnz
mov
incl
jno
push
sbb
add
ljmp
insb
fwait
sub
lcall
push
xrelease
mov
mov
mov
xor
add
pusha
fdivrl
scas
pop
dec
adc
xor
add
sbb
in
movsl
ret
icebp
add
call
int
add
xor
mov
and
in
add
fwait
sbb
add
popf
lods
sub
leave
sbb
outsl
in
sbb
das
sbb
mov
mov
int
cmpsb
inc
out
push
shll
rol
jb
mov
sub
adc
negl
jge
jo
test
lods
add
add
aas
mov
ret
aam
cmpsl
push
mov
pop
cld
mov
insl
out
fwait
sbb
ljmp
inc
inc
repz
jns
test
xchg
inc
add
in
and
jne
pop
cmp
rorb
add
push
pop
xchg
add
ret
pop
nop
jge
and
mov
xor
pop
int
sbb
mov
ljmp
mov
mov
add
push
add
xor
or
jg
sahf
sarl
mov
leave
add
icebp
pop
cltd
add
and
repz
inc
cmc
cmp
sahf
jne
iret
in
sbb
xchg
cld
cmp
mov
add
fisttpll
and
mov
fiadds
mov
mov
inc
gs
out
mov
mov
inc
inc
adc
rdtsc
clc
imul
ja
jb
mov
push
and
mov
pop
xor
adc
mov
and
push
lock
or
adc
adc
das
ja
mov
leave
adc
mov
pushf
add
loop
inc
sti
shr
lods
outsb
call
test
pushf
scas
lret
push
push
add
jge
lret
aas
and
add
sub
jo
pop
push
rorl
dec
aam
xchg
cmp
mov
dec
test
hlt
iret
insl
les
stos
add
sbb
xor
xor
mov
push
addr16
out
push
xor
pop
das
addr16
push
fs
nop
dec
push
xchg
push
fs
je
mov
popa
cmp
xchg
std
sbb
push
dec
add
xor
stos
movsl
cmp
mov
jo
add
sahf
nop
in
mov
sahf
daa
add
fistps
inc
pop
subb
add
mov
or
sbb
fcoms
push
fidivrs
mov
xchg
mov
loope
adc
xchg
imul
mov
add
xor
add
xchg
pop
push
add
inc
cwtl
mov
add
jle
cmp
les
add
aam
mov
adc
cmpsl
into
pop
fs
cmp
fucomp
lods
add
call
addb
push
add
imul
cmp
fdivr
jmp
test
pop
test
dec
out
fcoml
add
adc
pop
jp
icebp
jne
xchg
scas
add
arpl
mov
roll
add
fnstenv
popa
and
cmc
clc
ficomps
mov
fisttpll
mov
lret
inc
xor
jno
and
adc
lds
adc
mov
pop
imul
into
psubq
fsubrs
orb
aaa
hlt
in
fisubs
pop
add
add
cld
pop
popl
cmp
pop
and
out
xchg
add
aaa
lock
ss
add
xchg
mov
fwait
mov
dec
dec
arpl
xchg
sbb
cmp
call
mov
pop
add
dec
ret
pop
xor
xchg
ss
data16
add
in
addl
add
cmp
mov
mov
inc
sub
push
mov
icebp
push
add
test
fsubs
mov
fbstp
lods
enter
loop
and
push
jp
dec
jb
popa
dec
cwtl
push
dec
add
test
out
movsl
dec
int
std
insl
fcoms
movsl
scas
pop
out
movsb
pop
jbe
mov
outsl
pusha
add
xchg
mov
fwait
or
out
out
pop
mov
mov
lds
ficompl
outsl
mov
pushl
insb
inc
lock
mulb
aas
jae
pop
add
sub
cmp
iret
mov
add
or
movzwl
jl
fucomi
mov
mov
in
mov
mov
frstor
or
fldcw
lds
push
insl
sbb
inc
add
loop
inc
es
mov
jecxz
mov
aam
cwtl
fiaddl
orb
add
mov
notl
movsl
pop
icebp
push
aam
fcmovu
xchg
lods
int
xor
fst
daa
sub
xchg
call
rcr
jbe
leave
add
xchg
iret
adc
add
loope
cmp
push
lods
sub
pusha
add
dec
sbbb
out
pop
out
mov
arpl
jp
outsb
xchg
mov
mov
sarl
je
fcoml
movsb
frstor
jmp
mov
enter
sub
pop
mov
adc
hlt
xchg
xor
cmc
roll
lock
stos
addb
rcl
sub
popf
add
pop
lret
fxch
ja
and
pop
ja
sub
add
add
adc
and
mov
add
sub
cmpl
loope
dec
in
sub
push
inc
fistpl
aaa
add
add
adc
xchg
orl
add
xor
adc
cmc
xchg
or
mov
add
mov
push
add
test
pop
push
mov
ret
sbb
test
or
bound
jne
test
xor
leave
inc
inc
sub
xchg
insl
jbe
bound
std
sti
mov
add
out
icebp
mov
in
or
repnz
pop
cmp
movsb
fisttpl
pop
add
xchg
popa
jae
push
lahf
xchg
push
test
add
loope
and
push
mov
and
out
cld
mov
mov
lods
sbb
pushw
cmp
inc
mov
fwait
jmp
or
mov
popf
sub
in
mov
sbb
cmpsb
xor
and
repz
cmp
mov
aaa
push
pop
loopne
adc
mov
loop
push
out
les
rolb
js
lds
push
dec
call
scas
les
mov
mov
testb
mov
add
mov
faddl
mov
add
sub
loopne
inc
mov
hlt
sub
lock
inc
mov
mov
push
ror
stos
mov
push
movsb
and
icebp
push
gs
int
inc
pop
outsl
inc
fdiv
xchg
add
sub
fdivl
bound
pop
loopne
inc
lods
movsl
into
mov
and
jne
xchg
mov
add
lcall
add
repz
lods
add
mov
jbe
into
fldenv
jmp
pop
jbe
iret
mov
push
add
mov
ror
add
gs
add
fists
cmpsl
sbb
or
clc
add
insl
mov
aas
scas
loope
daa
popa
dec
add
cmc
pop
loop
add
das
inc
push
je
jnp
aas
add
xchg
fiaddl
rolb
scas
testb
cmp
shll
adc
sbb
jl
mov
call
cld
add
push
cmp
mov
jnp
or
fld
lahf
pop
pop
pop
pop
adc
ljmp
mov
les
fs
adc
push
dec
mov
xorl
fs
inc
add
add
dec
add
cmp
add
rclb
rclb
mov
inc
jnp
fists
push
lret
arpl
xchg
test
mov
adc
adc
ja
inc
mul
inc
ljmp
lock
gs
dec
add
mov
test
add
arpl
or
faddl
cmpsb
adc
sub
push
test
cmp
xchg
ss
dec
inc
mov
rcrl
sbb
aaa
sbb
mov
scas
add
cmpsb
test
add
mulb
stos
push
ja
mov
add
push
sub
lahf
aad
movsl
mov
in
mov
push
orb
iret
cwtl
push
shlb
lahf
and
add
pop
add
pop
stos
lods
add
push
adcl
arpl
cmp
add
pushf
enter
sbb
fisubrl
add
sub
fnsave
lods
inc
in
mov
nop
sub
mov
mov
in
lahf
cld
add
mov
imul
icebp
fs
pop
jle
lahf
mov
add
sub
mov
adc
repz
cmp
inc
add
ret
add
cmpsl
push
scas
add
lret
mov
out
mov
pop
jecxz
cmpsl
xor
or
cli
xchg
mov
cmp
inc
add
bound
pop
pop
push
dec
ja
push
jmp
cmp
pushf
mov
shrb
add
mov
lds
jns
xor
cmp
jmp
lahf
xor
add
pop
mov
cmpsb
sbb
xchg
dec
inc
add
ret
push
inc
rorl
xchg
psubb
and
xchg
add
push
add
mov
jle
jge
fdivl
add
cmpsl
filds
mov
test
xor
lods
adc
xlat
dec
jbe
jp
dec
inc
pop
leave
test
add
inc
xor
imul
ljmp
fbld
mov
inc
ss
adc
ret
dec
xchg
pop
mov
sub
mov
movsl
daa
inc
and
xor
xchg
cld
add
xchg
sahf
push
add
mov
mov
dec
cmc
pop
imul
sbb
test
notw
test
lods
lret
in
faddl
inc
inc
hlt
add
xor
out
add
pop
mov
dec
jb
push
xchg
cmc
jo
addl
jo
outsb
add
shll
ret
test
jbe
or
cli
imul
sbb
add
add
out
fnstsw
mov
add
mov
cld
cs
lods
add
shll
fwait
inc
ja
jecxz
pop
push
negb
add
jns
inc
inc
jnp
adc
mov
and
push
stos
je
std
scas
xor
roll
pop
les
lcall
jo
pop
loop
stos
lahf
add
je
xchg
jae
push
add
adc
orb
lods
mov
mov
and
pop
test
sub
push
repnz
add
shll
pop
cmp
add
adc
test
dec
loope
push
push
cwtl
and
add
cmp
pushf
dec
lods
add
inc
jno
dec
adc
inc
adc
xchg
ja
pop
jp
xchg
add
mov
dec
jl
and
xlat
das
aam
ljmp
lods
add
mov
sbb
out
push
or
orl
sbb
fs
add
lods
leave
fwait
add
jno
add
fidivl
jbe
imul
push
hlt
jae
inc
mov
ljmp
sub
push
jo
mov
outsl
cs
pop
shlb
mov
test
stc
je
call
add
add
add
or
sub
icebp
pop
mov
mov
outsb
lock
cs
dec
add
push
and
lret
pop
aad
adc
pop
adc
and
rcl
loope
push
xchg
push
adc
push
jae
mov
jns
jge
push
out
shlb
repz
xor
add
shrl
pop
iret
xchg
arpl
xchg
fimuls
add
xor
add
inc
loope
and
adc
lods
mov
xor
mov
mov
add
test
cmc
pop
mov
push
out
ds
ffree
clc
and
cld
femms
push
push
mov
mov
dec
mov
lods
and
es
lock
add
add
out
and
cltd
das
pop
std
lahf
or
shll
add
mov
inc
mov
je
ret
shrl
dec
fsts
aam
add
enter
jae
xchg
out
add
mov
sbb
jg
dec
add
insl
cld
mov
fwait
clc
mov
mov
mov
lods
rolb
and
mov
stos
negl
mov
and
es
js
adc
imul
sbb
add
add
pushf
or
mov
jne
das
jp
jecxz
push
repnz
cwtl
into
mov
dec
imul
adc
add
inc
mov
cmp
push
ret
scas
mov
testl
push
mov
out
mov
or
jge,pt
das
std
adc
repz
jmp
sub
sbb
str
mov
lret
je
mov
jle
icebp
pop
addr16
xor
bnd
fsts
in
jecxz
xchg
push
mov
pop
fiaddl
cld
push
mov
lds
dec
add
mov
pop
mov
dec
push
adcb
adc
std
mov
adc
dec
xchg
push
incl
or
dec
mov
ret
arpl
push
xchg
sbb
movsl
jg
mov
add
in
pop
inc
mov
testb
lea
add
lods
std
cmp
mov
mov
mov
imul
or
adc
rclb
add
mov
mov
mov
outsb
sti
mov
addr16
add
lods
push
hlt
pop
mov
repnz
incl
icebp
pop
inc
sbb
push
xchg
lock
fwait
je
add
push
sbb
push
add
add
shll
repnz
xbegin
ds
sub
aam
jl
xor
jns
or
icebp
fdivrs
jne
push
repz
xchg
fisubrl
or
mov
push
movsb
jmp
mov
in
mov
add
inc
pop
xchg
nop
add
arpl
mov
jecxz
inc
inc
lcall
jb
fsts
addb
jb
cmp
dec
jmp
aaa
add
aam
lea
rclb
into
sbb
xchg
ja
cmp
mov
add
pop
pop
int3
mov
adc
add
xor
or
loope
lret
jle
inc
add
sbb
xor
mov
xor
and
into
mov
test
cld
movsb
add
xor
cli
stos
imul
fcmovnb
or
cmpsl
repz
push
fwait
jmp
add
xchg
mov
call
xchg
insb
inc
sub
rcrb
cld
adc
and
lahf
test
test
jo
cmp
xor
and
and
imul
add
popf
mov
out
push
pusha
jo
cmp
pop
mov
lea
ficompl
movsb
cli
pop
pop
hlt
jg
xor
faddp
mov
test
xor
and
push
add
mov
test
lahf
add
repnz
add
inc
add
and
pop
and
bound
mov
xchg
add
add
ret
sub
faddl
xor
roll
xchg
aaa
movsb
rolb
inc
add
add
sbb
cltd
add
cltd
xchg
imul
mov
or
jne
insb
js
xchg
sti
incb
mov
mov
imul
outsl
fidivrs
fmul
add
popf
push
cltd
jno
xchg
loope
stos
addr16
add
emms
loopne
daa
add
xor
lret
add
loop
pop
sub
aaa
in
rolb
imul
pop
mov
mov
mov
test
mov
les
adc
and
push
jne
push
dec
rol
xlat
add
in
mov
movsl
pop
repz
mov
and
jge
pop
ljmp
xlat
test
dec
or
mov
imul
cmp
sub
xor
push
add
das
sbb
dec
mov
add
cli
jge
add
pop
fwait
pop
cs
pusha
xor
lods
push
jmp
mov
pop
xchg
dec
cmp
xchg
xchg
and
xchg
jo
mov
mov
pop
or
add
std
add
popl
add
sub
fdivrl
cwtl
in
lahf
push
add
add
add
clc
dec
inc
pop
adc
pop
adc
rcrb
fs
fnsave
xor
bound
add
mov
cmpsb
cmpps
jae
dec
inc
cmp
add
xchg
jecxz
ficoms
out
mov
push
mov
jb
cld
bnd
lods
add
pop
push
or
loope
jno
add
cs
add
pop
inc
dec
mov
inc
pop
rcr
jb
inc
rcll
push
fstpt
in
jbe
xchg
mov
mov
mov
mov
push
arpl
and
mov
hlt
loopne
cltd
mov
repz
mov
lahf
es
ja
fs
stc
js
jo
push
mov
inc
dec
or
xor
sub
in
dec
test
in
loop
enter
lahf
es
mov
dec
add
movsl
push
xor
sbb
loope
mov
mov
xchg
mov
aas
pop
roll
add
popl
add
dec
add
jmp
or
or
adc
loope
mov
stos
add
sbb
data16
push
cmp
imul
pop
sub
and
add
das
ret
pop
in
test
scas
or
mov
pop
je
cmp
lds
mov
addr16
rcll
aad
cmp
mov
or
mov
leave
cld
mov
add
add
lcall
sub
fistpll
add
cmpsb
dec
enter
sbb
mulb
scas
and
cmp
sub
mov
add
mov
fsubrl
loopne
inc
roll
cmp
pop
sub
es
cmpb
add
add
sub
or
lret
inc
mov
jns
les
jmp
in
sarb
push
lldt
arpl
adc
dec
int
jbe
adc
add
inc
adc
sahf
xlat
or
or
inc
daa
stos
cld
scas
aam
test
fldenv
cmpl
mov
mov
xor
add
cwtl
mov
add
lret
fiaddl
push
add
mov
test
jbe
enter
push
mov
stos
insl
cmp
pusha
and
imul
mov
pxor
sub
jnp
outsb
xchg
jp
pop
inc
in
imul
iret
inc
xchg
clc
fsubrl
mov
mov
lods
in
int
mov
in
ja
mulb
gs
mov
daa
add
adc
sub
repnz
fsts
sbb
std
xor
xor
push
jnp
sub
sbb
fcmovnbe
sub
push
mov
add
sub
cmpsl
push
push
fwait
aam
imulb
add
filds
mov
pop
out
push
int3
add
push
dec
shr
loopne
add
bsf
cmp
dec
sbb
add
jae
in
pop
lods
mov
pushf
mov
mov
push
mov
add
pop
pop
mov
xor
adc
int3
arpl
add
jmp
xchg
add
add
add
add
or
xor
cmp
repnz
cmp
outsl
jno
gs
stos
jb
rorb
add
mov
fs
inc
loopne
sbb
pop
mov
dec
rcr
add
icebp
sbb
mov
mov
cmpsl
cmp
clc
sub
mov
rorl
fstps
sbb
add
mov
dec
imul
push
add
or
inc
add
mov
and
inc
add
jmp
loope
leave
les
daa
pop
xchg
xor
pop
sub
sub
mov
xchg
xor
jno
rolb
fdivl
js
push
mov
in
sub
cli
mov
cmp
lcall
sbb
add
jnp
addr16
hlt
cmp
sub
mov
test
xor
xor
out
int
cltd
repz
mov
pop
lcall
fistpll
sbb
pop
mov
lds
add
mov
hlt
leave
add
add
in
xor
adc
adc
or
push
aam
inc
jp
dec
inc
test
and
sub
mov
lea
iret
orb
add
or
pop
out
aad
cltd
ret
in
popf
mov
push
push
add
movl
into
mov
test
movsb
lock
add
and
pop
gs
dec
push
fsubrs
adc
xor
mov
xchg
les
stos
and
or
jne
cmp
lea
mov
imul
sarl
scas
pushf
clc
add
cld
cmpsb
pop
mov
cmp
test
push
es
add
add
cld
fwait
int
sbb
mov
movsl
stos
adc
in
mov
dec
mov
stos
push
imul
sahf
sbb
in
les
out
mov
loop
jno
jle
dec
push
and
push
add
jg
jb
mov
mov
subl
cmp
sbb
sub
or
push
mov
std
jne
or
jl
ucomiss
test
fs
stos
xor
andl
mov
sub
add
sbb
ret
pop
je
sti
push
fists
cmp
fwait
push
xchg
xor
add
or
jmp
shl
mov
fwait
pop
lds
addr16
push
movsb
sbb
push
mov
or
cmpsb
add
inc
popa
divl
js
jo
xlat
jp
add
add
mov
cmc
stos
add
jbe
out
je
jno
pop
test
sub
call
sbb
mov
daa
imul
movsb
add
test
movsb
inc
repnz
pop
imul
cmp
insb
dec
or
lds
roll
and
add
pop
jno
cmp
or
cwtl
leave
scas
les
add
loope
mov
add
push
rolb
add
push
cmp
add
cmp
pop
insl
inc
imul
mov
mov
push
push
cmc
xchg
movsl
arpl
iret
imul
cltd
add
ljmp
cmp
add
mov
pop
cli
std
imul
push
in
push
cmp
stc
and
imul
stos
jmp
dec
inc
mov
pop
push
mov
push
sbb
mov
fists
xlat
cmpsl
aam
pop
mov
mov
jb
adc
dec
mov
xchg
xlat
or
in
int
pop
call
jno
cltd
loop
and
add
push
test
and
lcall
xchg
enter
testb
xchg
dec
sbb
add
xlat
pop
push
and
dec
mov
js
nop
sbb
or
lret
gs
sti
cmpsb
add
movsl
call
jne
add
ret
add
test
aam
and
and
popf
lret
cli
add
or
xor
mov
mov
fadds
addr16
popf
sub
or
dec
pusha
lock
fxch
xor
xor
fwait
add
stos
jl
add
loope
sub
stc
loopne
xchg
push
push
roll
rol
xchg
lds
outsb
xchg
mov
aas
cmp
addr16
pushf
imul
add
loope
movsb
pop
cmp
ret
cmp
add
faddl
dec
ljmp
sti
mov
negb
leave
jno
jae
pop
mov
sbb
add
pop
mov
repz
daa
stc
add
or
cmp
and
add
push
pop
pushf
and
mov
add
outsb
xor
cmc
push
xchg
lods
cli
iret
pop
mov
push
adc
fldt
movsb
xor
adc
add
cld
arpl
cmp
ja
idiv
dec
add
mov
mov
add
icebp
scas
or
pop
jne
mov
inc
dec
or
in
mov
push
ss
lcall
lock
lea
xchg
mov
mov
std
out
cmc
icebp
mov
jge
and
ds
xor
outsb
jmp
sti
sbb
ja
jp
sbb
mov
cmp
in
aaa
jne
cld
cmp
daa
in
mov
add
mov
sbb
xchg
pop
push
dec
js
push
sbb
add
das
in
mov
lret
pop
jg
lahf
sbb
daa
and
js
pop
sub
hlt
xor
fdivrl
adc
fwait
dec
pop
push
pop
repz
cmpsb
mov
sub
movups
loop
mov
jbe
stc
push
sbb
fld1
int
mov
xor
lea
add
pop
add
daa
or
push
push
bnd
add
push
scas
int
sub
inc
fsubr
ljmp
mov
jecxz
jno
fsubrl
nop
add
xor
cmp
add
out
adc
call
sbb
jbe
xor
lods
push
xchg
movb
jecxz
pushf
sahf
in
testl
je
add
movl
mov
cltd
das
and
push
jo
das
cmp
add
lcall
or
sub
inc
pop
insl
cmp
sti
or
pop
add
add
mov
cltd
fsub
add
ficompl
inc
test
add
shlb
lods
inc
sub
aam
std
lret
ffree
add
cmp
xchg
and
repnz
inc
add
add
pop
jmp
bound
adcb
mov
jge
fstpl
roll
add
mov
fs
sti
repz
xchg
mov
jne
scas
push
lock
aam
leave
sub
imul
dec
loop
push
dec
add
mov
rclb
xor
pop
push
cmpsb
ret
stos
xor
imul
inc
or
icebp
inc
in
jl
and
ja
repz
arpl
fisttpll
add
add
test
test
sbb
or
sub
dec
jnp
xor
add
push
repz
bound
lds
clc
xchg
adc
pop
pop
popa
popa
cwtl
jl
cmc
add
leave
lahf
or
stos
insl
xchg
cmp
loop
add
or
jno
dec
push
dec
stc
and
adc
add
xor
inc
jb
add
rcll
fmul
xchg
scas
or
pop
mov
fdivs
sub
push
xchg
or
jl
xchg
fiadds
lock
fdivl
xlat
cmpsb
add
lcall
inc
xchg
test
pop
movsl
lds
in
add
and
jns
mov
cwtl
jl
gs
fisttpl
xor
outsl
mov
imul
jp
mov
adc
test
inc
jnp
push
cmc
repz
testb
add
sarl
mov
adcl
push
xor
lahf
adc
add
push
pop
adc
popa
inc
jbe
add
repnz
repnz
in
jecxz
inc
or
dec
stos
sub
jne
adc
das
xchg
or
mov
pop
fdivrl
mov
clc
in
repnz
cmp
js
add
outsl
sbb
push
mov
int3
add
jb
inc
xchg
xchg
leavew
insb
fiaddl
jae
inc
rolb
into
lock
xor
sub
mov
daa
lods
test
out
outsl
fwait
loope
add
add
add
imul
lret
adc
push
mov
pop
cmp
movsl
mov
loop
gs
sbb
add
add
cs
shll
je
or
xchg
fiadds
test
gs
jb
jbe
not
dec
pop
adc
incl
add
cmp
pusha
push
mov
mov
xchg
and
out
gs
mov
dec
add
or
pop
mov
es
pop
addl
into
push
cmp
push
ljmp
mov
jmp
dec
push
sti
das
je,pn
je
cli
sbb
mov
mov
std
push
scas
push
add
out
push
push
cli
repz
insl
add
xlat
mov
inc
sarl
pop
lea
push
fistl
dec
pop
add
xchg
popf
push
sub
push
mov
cli
loope
int
jae
stos
filds
xchg
imul
loop
mov
pop
out
in
and
fwait
mov
dec
cltd
or
add
or
mov
lahf
stc
repnz
xchg
sub
popa
cld
add
and
cmp
mov
and
push
arpl
jecxz
pusha
insb
adc
ret
int
pop
or
pop
xor
movsl
push
popa
jl
lea
ltr
add
add
xor
push
add
jno
mov
or
adc
and
jne
adc
add
je
and
fsub
push
imul
mov
pop
add
add
push
scas
push
adc
mov
clc
xlat
xor
adc
sbb
daa
sahf
sub
mov
lret
aam
or
jmp
sbbb
movsb
outsl
mov
movsb
push
test
iret
jmp
push
or
in
mov
movb
sbb
push
xchg
std
in
popa
add
popa
out
jo
hlt
sbb
fninit
rclb
cmpsl
jg
jno
mov
cmpsl
jge
leave
cmp
loope
mov
out
adc
pusha
xor
and
or
jle
add
in
mov
cmp
movsb
out
mov
add
xchg
add
inc
mov
push
add
imul
in
or
repz
sahf
aad
jp
adcl
test
sub
lahf
mov
fiadds
mov
add
inc
pop
gs
adc
decb
sbb
subb
cltd
and
es
or
add
popa
test
xor
xchg
push
filds
shrl
in
or
loope
cmpsl
and
fld
test
out
mov
mov
sub
mov
rorb
and
sahf
in
xor
adc
dec
fnstcw
out
pop
jns
add
mov
and
jne
and
les
shlb
add
rcrb
and
dec
mov
jb
les
scas
stc
rolb
dec
sti
pop
jg
xor
popa
cmp
dec
pop
lcall
or
mov
xor
fnstcw
stos
mov
out
add
bound
fidivrl
sub
ljmp
scas
push
aad
add
inc
push
add
add
inc
xchg
aas
stc
aas
sbb
xchg
mov
idivl
shrb
stos
add
lock
add
adc
mov
add
push
roll
dec
fwait
jecxz
dec
sbb
mov
std
cmpsl
daa
sbb
incl
popa
add
push
cmpb
scas
pop
mov
push
adc
dec
insl
sbb
dec
mov
push
mov
in
rclb
daa
add
mov
mov
cmpsl
daa
mov
outsl
lret
mov
fs
add
mov
adc
fs
xor
into
cwtl
add
push
sbb
into
mov
mov
mov
mov
outsl
sarb
xchg
add
push
xchg
push
dec
dec
aaa
rcrl
test
pushf
add
insb
xor
cwtl
lcall
ja
adc
cmp
imul
sbb
pop
pusha
lret
sbb
push
fnsave
ret
ds
loopne
int
fisubl
out
sti
or
in
sbb
pusha
dec
adc
orb
add
fldl
movl
aad
xchg
hlt
jl
repz
add
sbb
fists
inc
add
mov
add
mov
test
lds
dec
pop
push
aam
mov
sbb
fsubr
lahf
cld
lds
xor
cmpsb
cmp
call
out
bnd
add
mov
and
add
insl
ret
add
gs
dec
dec
cltd
test
jecxz
into
xor
add
mov
xor
add
arpl
or
pusha
cltd
imulb
scas
inc
mov
or
roll
dec
pop
movsl
and
inc
add
into
jbe
pop
cmp
jns
cmp
jmp
add
jnp
sub
jl
fsubl
js
sti
cmpsl
loope
add
xchg
orl
movsb
jge
test
push
setno
ret
test
pusha
pop
js
rcrl
cs
pop
push
jns
add
pop
aaa
add
xchg
popa
lock
pop
push
push
add
pop
mov
add
and
xlat
f2xm1
js
cmpsl
fcmove
or
iret
ds
inc
mov
data16
jg
repz
lcall
cwtl
push
loopne
jmp
ret
jno
add
aas
cmp
add
mov
push
ret
lret
dec
mov
pop
incl
cli
icebp
imul
pop
add
lods
cmp
add
add
add
sahf
push
xchg
lock
sti
dec
jle
cltd
scas
subl
mov
push
add
add
sarl
repz
cs
or
add
lahf
pop
test
mov
out
add
cld
lods
add
or
pop
pop
out
mov
adc
fcmovbe
mov
add
and
sbb
xchg
sub
inc
jle
mov
sub
pop
mov
jne
mov
cwtl
mov
add
aas
dec
add
add
dec
dec
cld
adc
xchg
jg
data16
fs
je
jecxz
imul
cmpsl
std
sub
jnp
cld
xor
dec
or
lds
outsb
imul
test
ss
pop
inc
pop
push
push
cmovae
sahf
mov
xchg
add
mov
push
and
in
sbb
add
lods
aas
add
bnd
mov
sub
adc
clc
pusha
push
jb
jmp
sub
mov
dec
adc
test
cmpb
mov
repz
mov
loope
or
loope
dec
daa
inc
movsl
xor
jae
add
dec
fs
loopne
add
fdiv
mov
adc
fxch
mov
aaa
inc
adc
mov
out
aam
or
mov
xor
jns
jmp
iret
jbe
in
lods
push
stc
mov
pop
outsl
inc
leave
inc
ljmp
add
negb
push
xchg
test
cmpsl
sbb
add
fstpt
nop
dec
addl
sti
pop
dec
packssdw
cmp
fstpl
add
mov
cwtl
in
add
aam
xchg
std
hlt
inc
pop
mov
daa
add
or
std
fnstenv
mov
movl
add
sub
jnp
lcall
jl
pusha
push
cli
rcr
cli
mov
add
jle
jge
or
popa
out
pop
or
fdivr
cltd
mov
andb
add
xlat
add
sbb
jae
xor
js
mov
xor
pop
add
mov
jns
push
cltd
add
jo
xchg
out
mov
sbb
mov
cld
orl
mov
lds
pop
mov
jl
aad
leave
add
cwtl
mov
pop
push
out
xor
into
into
cmp
gs
mov
push
and
cmp
jg
add
sarb
sub
xor
mov
or
loop
push
movsb
push
and
adc
dec
cmc
fsubrs
or
dec
loop
loop
nop
sbb
add
das
mov
es
insl
les
or
test
in
jo
push
das
sbb
add
jmp
cmp
insb
cwtl
adc
fsubrp
add
movsb
in
lret
out
pop
add
adc
arpl
jmp
cli
pop
pop
loope
dec
add
jle
in
add
pop
xchg
in
std
gs
cmp
sub
xor
inc
xlat
xorb
enter
flds
add
add
add
outsb
data16
sbb
jbe
inc
add
mov
sbb
xchg
jns
pushf
xor
iret
out
jecxz
icebp
add
mov
lret
pop
mulb
cmpb
or
add
sbb
jle
push
add
mov
pop
les
das
push
cs
in
movsl
adc
rol
pop
lock
movsb
sub
mov
mov
jbe
pop
in
inc
push
pop
imul
cmp
or
sbb
cmp
pop
rorb
xlat
inc
mov
inc
or
lahf
inc
out
mulb
and
in
and
outsl
sti
outsb
dec
fwait
inc
and
xor
add
scas
jbe
jne
stos
and
add
and
nop
adc
jae
lret
jecxz
mov
adc
add
or
and
fwait
cld
sub
dec
aaa
inc
dec
jnp
and
add
ds
xchg
xlat
negb
lock
in
movsb
loope
ucomiss
test
mov
jne
adc
pusha
xchg
inc
sub
mov
bound
je
aam
xchg
shll
xchg
inc
popf
rcrl
js
lds
mov
fsubl
add
daa
or
fcomi
leave
imul
dec
addr16
dec
addl
add
add
jmp
pushf
xor
je
sub
inc
arpl
std
add
scas
or
sbb
xchg
shrl
lret
adc
dec
dec
mov
imul
in
pop
add
pop
mov
out
fists
pop
pop
or
adc
out
rcrl
cmp
mov
cmp
hlt
fistl
dec
push
or
mov
std
aaa
inc
add
sub
mov
enter
dec
lret
mov
add
xlat
dec
mov
add
push
xchg
dec
arpl
shrb
ficompl
jg
stc
pop
pop
in
mov
add
movsb
add
pop
test
xor
mov
dec
add
jg
adc
mov
jno
and
out
add
inc
xor
mov
dec
and
inc
xor
xchg
addr16
rcr
pop
pop
xor
add
inc
add
lret
mov
xchg
and
sub
hlt
adcb
sarl
aad
xchg
or
loope
add
xchg
fcmovnbe
xor
cltd
mov
add
adc
xor
int3
and
add
add
inc
add
xor
jecxz
jnp
fidivrs
xchg
insl
bound
mov
push
add
iret
sub
cmp
stos
mov
sbb
fxch
mov
jb
jnp
jp
mov
pop
adc
sahf
imul
push
inc
es
adcb
cwtl
sbb
adc
mov
pop
fwait
pusha
jge
sub
aaa
inc
push
pop
push
mov
insb
pop
sub
enter
repz
sub
add
dec
inc
add
enter
jo
hlt
mov
sub
clc
rorl
cmp
test
std
mov
stos
or
fnstsw
xor
sbb
mov
rorb
ja
ljmp
lods
in
movsl
aas
pop
add
pushf
inc
ds
mov
les
sarb
sub
push
popa
cld
sti
lret
mov
iret
cmp
shl
stos
mov
es
sub
lcall
cmpb
lock
stos
dec
inc
or
pop
add
cmpsl
sahf
sub
pop
test
add
imul
dec
jb
add
or
xor
rcl
inc
repnz
aas
add
or
out
pop
scas
pop
add
aaa
push
mov
cmp
mov
mov
mov
nop
pop
inc
mov
xchg
cmc
add
adc
popf
aas
mov
and
mov
test
addr16
cmp
sarl
push
push
mov
lcall
mov
and
inc
orl
add
dec
insl
jge
push
mov
aas
stc
dec
in
push
dec
enter
add
mov
pop
and
mov
mov
lods
dec
or
xor
cmp
addb
pop
fcompl
aam
push
add
out
out
mov
and
add
push
push
add
int
orb
lahf
push
outsb
inc
aad
jge
xor
addb
out
mov
ret
jo
dec
lcall
repnz
aad
adc
sti
dec
daa
js
scas
jle
add
add
pop
xchg
push
xchg
inc
ljmp
lret
addb
push
js
shll
dec
aaa
mov
xor
movsb
adc
aaa
iret
popf
out
mov
add
sbb
add
divl
mov
or
dec
shll
adc
sub
scas
mov
mov
jae
mov
or
add
lds
add
add
outsb
rcrl
jns
lahf
jne
xchg
add
xor
stc
add
push
xchg
rorl
pop
mov
lcall
sbb
mov
lds
lcall
lea
add
jno
icebp
mov
lahf
adc
mov
add
mov
ss
pushl
ja
add
mov
cmpsl
push
ds
arpl
mov
xchg
into
pop
movsl
daa
les
and
jno
lahf
js
cmp
pop
pop
pusha
ret
loopne
and
push
or
faddl
faddl
inc
sbb
mov
andl
jg
bound
loop
loope
stos
push
xor
test
mov
insl
pop
jno
mov
inc
mov
add
add
add
cwtl
out
mov
adc
push
ljmp
into
mov
add
mov
pop
cmp
out
pop
test
icebp
sub
xlat
xchg
mov
jno
out
jns
adc
xor
das
xchg
imul
add
aas
ret
inc
pop
daa
movsb
insb
cli
adc
pop
fs
out
sub
xor
and
negb
cmpsb
add
aaa
movsb
out
sub
push
rolb
ljmp
movsb
inc
adc
lret
fldl
movsb
lahf
dec
sbb
cmp
mov
mov
add
out
stos
add
jp
cli
xchg
mov
adcl
daa
push
pop
xchg
cli
ficomps
iret
push
cld
cli
sahf
mov
mov
pop
sub
mov
add
mov
add
je
mov
jbe
add
subb
jle
jno
jne
out
add
add
pop
add
add
inc
divl
mov
fs
shlb
pop
arpl
loop
movsb
jecxz
cmp
popf
adc
hlt
add
mov
inc
jae
rclb
pop
lcall
add
or
in
in
add
sbb
add
jne
rcr
jp
sub
mov
dec
sbb
gs
pcmpgtw
xlat
xor
test
outsb
push
pop
jl
xor
add
jle
add
int
cmp
mov
adc
mov
enter
push
scas
adc
xchg
add
add
mov
sub
sub
ret
cmp
xchg
sarb
jge
push
xor
sbb
cmp
and
cmp
add
push
mov
push
push
cmp
add
fldl
pop
aaa
and
adcb
dec
lea
leave
push
pop
in
out
adc
add
jle
int3
mov
clc
sbb
outsb
std
popa
int3
subl
and
adc
cmpsl
push
add
outsb
addb
push
fistpll
mov
outsb
pop
add
cmp
add
aas
je
or
ret
out
lcall
arpl
add
cmp
mov
pop
sub
add
inc
sbb
push
push
dec
pop
out
mov
inc
jno
jle
push
loop
adc
outsb
push
add
loope
mov
cwtl
push
sub
roll
movsb
notl
clc
ljmp
add
dec
add
bound
insl
xchg
stc
sti
sahf
mov
add
shr
cwtl
add
sbb
js
imul
loope
add
iret
roll
add
and
decb
add
add
sbb
jo
test
sahf
roll
pop
loope
insl
push
mov
mov
dec
mov
push
xchg
insb
jle
lea
mov
sub
push
xchg
shrl
add
inc
into
rsqrtps
adc
decb
fisttpl
testb
pop
leave
out
push
in
fwait
cmpsl
push
ffreep
mov
out
outsl
add
lret
ret
add
imul
cmc
fxtract
pop
and
sbb
jno
stos
std
add
xchg
xchg
lcall
je
adc
aas
push
jns
into
sbb
pop
insl
push
and
fiaddl
jl
pop
jnp
xchg
mov
pop
test
adc
mov
sbb
test
imul
dec
loop
fwait
out
cld
pop
mov
lods
push
pop
lds
pop
pop
gs
mov
call
add
in
adc
add
add
sub
mov
repnz
test
and
push
mov
sahf
push
gs
push
inc
shll
sub
mov
gs
mov
pop
daa
push
insb
dec
xor
mov
adcb
add
clc
mov
fwait
mov
fs
mov
mov
cs
dec
or
xchg
aad
stos
cmpsl
xor
sbb
mov
jp
jmp
sar
fwait
xchg
dec
xor
les
hlt
sub
inc
adc
jnp
sbb
adc
sbb
mov
mov
or
subl
dec
jmp
es
aaa
add
add
adc
xchg
push
in
mov
or
xor
push
stos
ret
cltd
aam
add
mov
sbb
mov
lcall
lret
push
add
fs
mov
xchg
add
inc
add
add
leave
cmp
mov
in
or
repz
pusha
mov
jbe
rcrl
pop
add
sub
out
std
push
pushl
loope
repnz
sbb
scas
ret
cmp
add
dec
aas
add
sub
mov
xchg
add
jmp
pop
nop
xor
lahf
and
aad
xchg
jg
add
push
mov
iret
mov
mov
add
mov
lldt
xchg
mov
pop
jg
ret
pop
or
daa
test
mov
popf
sub
push
add
xor
push
or
and
mov
xor
test
data16
xor
mov
mov
das
mov
pushf
sbb
xor
rorb
xchg
shl
lret
mov
or
popa
rcll
pop
test
or
xor
push
push
std
loopne
jecxz
jle
lods
adc
test
enter
sti
sti
cwtl
and
jns
add
or
mov
mov
subb
add
mov
jae
aas
cli
lods
jp
xlat
pop
push
loope
mov
je
adc
fbstp
add
inc
outsb
in
push
inc
pop
pop
mov
cmp
cltd
dec
pop
adc
add
jae
out
subl
dec
mov
lods
roll
stc
lds
xchg
mov
or
lea
sbb
lahf
jbe
add
faddp
xchg
push
mul
or
insb
movsb
cmp
mov
pop
hlt
int3
out
enter
or
dec
push
add
stos
sti
sub
dec
sub
push
stos
pop
and
push
xor
add
lahf
cld
call
adc
fnsave
mov
add
cmpsb
fldenv
adc
mov
and
fsts
add
push
ljmp
cmp
mov
inc
adc
int
insl
out
cmpsb
das
repz
add
add
push
sbb
outsb
add
adc
or
add
out
inc
push
dec
stos
add
ret
fwait
add
fistpll
push
add
sahf
int3
inc
clc
addr16
push
test
pop
cmp
outsb
add
mov
aas
add
ret
pushf
push
loop
xchg
jge
addr16
adc
or
je
xchg
xor
sbb
fdiv
scas
movsl
xchg
push
lea
pop
das
incl
xor
leave
dec
add
adc
les
add
clc
adc
jmp
mov
xor
push
nop
dec
rclb
lret
add
or
repnz
cmp
sub
notb
add
frstor
mov
icebp
ljmp
sbb
xor
sahf
jns
lods
lock
enter
inc
jp
rorl
rorb
lahf
jae
adc
mov
test
leave
or
jnp
push
je
addr16
idiv
loopne
inc
ss
ret
in
add
in
sbb
popf
gs
mov
mov
mov
in
add
add
pop
mov
add
pusha
add
mov
sub
add
add
and
mov
dec
push
cmpsl
add
xchg
pop
cmp
sub
int3
jl
or
outsb
cmp
stos
or
int
and
jp
jbe
shrb
xchg
xor
hlt
int3
cmc
add
mov
ss
xchg
das
adc
movsl
add
aas
cmp
sbb
push
mulb
xorl
add
sub
mov
stc
imul
add
cmpsl
hlt
sub
xor
scas
jne
test
loope
repz
pop
lcall
les
fwait
mov
idivb
test
je
aas
push
add
out
ror
adc
dec
fdivrp
add
sbb
add
pop
adc
add
add
add
xor
mov
rclb
insl
call
js
mov
lea
cmp
xor
jge
xchg
aas
insb
pop
jb
sbb
sub
push
aad
mov
fstl
mov
fcmovbe
add
add
mov
dec
iret
add
dec
xchg
mov
mov
fwait
sbb
mov
xor
aaa
push
add
inc
mov
in
test
jg
in
pop
mov
xor
mov
jp
movsb
sbb
jb
mov
inc
stos
hlt
cwtl
sub
and
mov
movb
jae
int3
lret
ljmp
fcmovb
sbb
mov
insl
cwtl
stc
pop
in
xchg
mov
into
adc
mov
lea
arpl
dec
and
jno
rcl
or
movsb
xor
pop
in
mov
adc
add
fisubrl
cmp
inc
push
xchg
cltd
in
sub
adc
out
xchg
insl
mov
dec
aam
into
test
inc
fadds
test
or
ja
jl
xchg
xchg
testb
add
imul
in
adc
mov
aam
xchg
mov
or
dec
insl
cmp
out
out
jl
imul
add
xchg
repz
mov
scas
lods
inc
add
insb
or
add
dec
add
cld
jge
call
jne
add
mov
negl
xor
out
imul
lock
jmp
push
test
cwtl
decl
pop
sbb
fwait
jno
sub
bound
cmpsb
mov
xor
fldcw
adc
mov
mov
repnz
sti
fnsave
in
dec
dec
inc
xor
add
add
xor
sub
push
lcall
push
popa
dec
pushf
mov
inc
xchg
cmp
sub
pop
cli
and
xchg
mov
cltd
add
push
mov
xor
cmpsb
dec
dec
cs
cmpsl
pop
call
rcrb
mov
popa
je
adcl
inc
or
mov
leave
popf
pop
loope
or
dec
test
sar
push
ret
jnp
mov
fisubl
sub
adc
ja
sbb
negl
mov
mov
pusha
add
inc
loopne
je
dec
inc
test
and
aad
je
add
add
mov
sub
fnstsw
ja
dec
cmc
out
pop
int
mov
add
dec
jl
jns
add
sbb
ret
add
call
dec
add
push
repz
mov
mov
cmp
fwait
jae
jae
xor
xor
adcb
push
add
nop
movsb
lret
mov
pop
pop
test
xor
sar
aas
incb
jae
dec
ret
fidivrs
cmp
popf
sar
iret
andl
aad
aam
pop
xor
add
add
mov
shll
lahf
add
sub
loopne
mov
fisubl
aam
xchg
dec
push
ror
jno
ficoml
add
cmp
cmp
jns
mov
and
add
lret
and
pop
mul
add
add
add
inc
pop
aam
add
pop
add
imul
sarb
pop
cs
cltd
add
jmp
mov
pop
add
mov
scas
add
inc
je
int
jb
movsl
jmp
pop
add
mov
push
cmpsb
popa
jmp
out
rcl
pusha
mov
std
add
movl
mov
adc
dec
ss
add
idivb
test
sbb
aas
mov
lock
jmp
push
mov
jb
lcall
push
mov
aaa
in
das
jl
or
into
daa
add
sub
popa
add
pop
sbb
push
sarl
sub
hlt
and
xor
push
cmp
add
mov
cmp
test
or
pop
iret
test
xor
mov
mov
dec
ret
mov
xchg
cli
pusha
and
or
mov
push
cmp
adc
dec
add
adc
lret
shrl
ja
sub
shlb
add
loope
inc
clc
call
scas
scas
lds
or
and
test
add
shlb
jecxz
ret
mov
shll
in
cmc
jo
push
pop
xchg
pop
add
bsr
cmp
fists
test
add
dec
loopne
fcmovnbe
add
mov
xchg
stc
dec
add
aad
xor
cmc
sub
popl
or
lcall
int3
imul
pushf
fiaddl
insl
cs
inc
lods
jmp
xlat
xchg
bound
jbe
jae
call
mov
flds
xchg
aad
mov
or
aam
pop
sub
jo
loop
jl
ja
and
xor
mov
mov
xchg
sbb
add
test
fildll
rcrl
xchg
cltd
in
mov
call
push
push
jae
movsl
add
repz
fisubrl
push
xor
inc
pop
inc
scas
pop
add
sti
or
nop
inc
in
popa
lods
pop
push
add
lods
mov
add
pusha
orb
aaa
lods
jg
orl
sbb
ret
data16
add
nop
daa
fistps
adc
int
out
lret
pop
inc
dec
cmp
sub
test
sbb
jns
insl
out
xlat
and
add
mov
ret
test
cli
adc
out
add
enter
mov
add
xor
sub
addb
push
fincstp
xchg
sub
dec
add
test
jb
aad
jns
js
inc
add
rcrl
or
add
adc
leave
loopne
mov
add
adc
cs
sarb
add
add
nop
out
in
lds
imul
dec
fistpll
pop
out
ja
pop
enter
mov
xchg
add
add
sbb
adc
mov
add
in
in
adcb
inc
add
addr16
inc
jecxz
sbb
in
jne
cmp
test
neg
lret
and
add
xorl
dec
lds
or
adc
xor
arpl
test
mov
dec
icebp
inc
sbb
addb
pop
and
insl
dec
xlat
mov
add
xor
or
sbb
cmp
dec
ret
xchg
lea
or
in
or
cmp
dec
xlat
pop
xlat
adc
add
in
shl
in
mov
cwtl
dec
add
push
lods
push
inc
mov
in
divb
mov
insb
adc
mov
adc
add
or
add
pop
dec
sbb
add
add
inc
call
ret
rclb
popa
lds
jl
fcmovnu
push
insl
daa
mov
jae
add
sarl
add
add
adc
gs
sbb
enter
movsb
mov
repz
add
adc
xchg
sti
mov
sub
push
ss
mov
repnz
int3
ja
sub
inc
mov
mov
mov
into
cltd
mov
sbb
or
mov
shlb
add
cmp
lcall
or
jbe
xor
fstpl
add
loopne
cmp
lret
add
std
push
sbb
stc
shll
sbb
imul
inc
andl
out
jecxz
sti
pop
cmpsl
dec
jl
movsl
inc
cld
cmp
dec
lods
fst
mov
test
adc
add
aam
jbe
dec
jmp
data16
lret
cmpsl
add
push
add
sbb
add
add
mov
xorb
cmp
add
imul
cltd
push
rolb
shlb
lcall
xchg
sbb
incb
nop
pop
push
cmpsb
push
jg
push
add
imul
push
pop
add
and
fldt
fldcw
push
andl
insb
jno
or
add
movsl
pop
mov
cmp
mov
scas
add
inc
xchg
mov
stos
mov
aas
xchg
dec
pop
or
dec
mov
sbb
leave
test
xor
ds
dec
push
xchg
cltd
sub
scas
jo
lret
dec
push
mov
daa
int
inc
movsb
movsl
add
pop
and
add
pop
icebp
push
add
add
mov
outsl
mov
sub
or
rclb
lock
add
dec
xchg
cmp
rcrl
movl
pop
or
cmpsb
xor
and
jbe
xchg
fucomip
xchg
in
rcrl
pop
clc
pop
pop
clc
mov
mov
add
push
push
pop
push
xor
mov
sbbl
push
fwait
mov
cmc
mov
pop
xchg
cmpsl
dec
mov
mov
mov
loopne
clc
je
dec
stos
pop
cmp
jbe
cmpsl
and
repnz
add
addr16
jg
orl
test
add
insl
adc
dec
je
xor
ja
add
fidivs
xchg
adc
ljmp
xor
repz
push
sbb
and
cmp
inc
sbb
mov
mov
imul
add
outsl
dec
scas
adc
js
cmp
aas
repz
inc
jae
or
pop
mov
lea
stos
or
push
and
arpl
aas
and
add
jae
test
fdivr
lods
jp
lock
sub
in
in
aad
add
push
pop
fistpl
add
cltd
jno
stc
pop
adc
add
jne
inc
mov
xchg
ret
xchg
sahf
icebp
out
sub
pusha
add
dec
sahf
jmp
mov
addr16
add
jns
xchg
iret
push
mov
in
mov
and
push
add
test
cmp
adc
cmp
add
jle
jp
mov
adc
sbb
cld
add
pop
cmp
mov
call
push
sub
or
sub
add
jae
pop
nop
lahf
lret
add
dec
fbld
aad
xchg
inc
aas
test
sub
mov
ja
in
fldl
fadd
call
and
xor
sbb
outsl
loopne
push
bound
cmpsb
xchg
vmread
adc
aam
push
pusha
cmp
add
lret
shl
lods
cmp
jnp
cli
push
not
mov
cltd
jecxz
loopne
fstp
dec
jmp
xchg
or
mov
add
iret
or
cmp
add
mov
pop
adc
ja
add
dec
add
push
in
das
insb
add
int
inc
jmp
or
mov
repz
xchg
hlt
inc
add
sahf
ret
test
pushf
call
lods
and
scas
adc
inc
mov
and
xchg
mov
cs
mov
je
jp
call
out
scas
or
cli
xchg
mov
lret
adc
or
sub
xor
pop
cmpsb
popf
daa
shll
sbb
sub
fildl
xor
cmpsl
add
jo
push
add
shl
cmpsl
xchg
mov
lar
imul
inc
cmp
addb
add
dec
loopne
cmc
cmp
cwtl
push
xchg
scas
push
call
xor
out
stc
popa
repz
test
xchg
sbb
cmp
add
lods
jmp
aas
pop
lea
mov
add
lret
mov
pop
jno
inc
repnz
push
in
gs
pop
mov
inc
dec
mov
fsub
pop
les
add
or
jb
inc
dec
cs
adc
pop
pop
cmp
add
fildll
add
inc
sbb
cli
add
add
test
inc
shrl
daa
jecxz
add
inc
ret
or
mov
mov
add
lea
mov
sbb
push
out
mov
ss
inc
jne
xchg
mov
popl
std
or
inc
push
mov
pop
cmc
pop
mov
dec
jno
mov
outsl
filds
add
call
test
bound
repz
xchg
jl
lock
add
and
add
nop
pop
push
push
cmpl
lock
jae
ja
add
pusha
adc
push
test
jbe
add
xchg
jmp
add
xchg
add
xchg
push
jl
loopne
aaa
push
dec
aam
adc
mov
jecxz
add
jnp
cmp
fildl
repnz
insl
mov
in
mov
adc
xor
xor
sbb
sub
stos
inc
mov
ret
xlat
out
into
mov
xor
add
scas
and
xorl
cmpsb
push
repz
insb
call
or
pop
push
xor
ret
cmpsb
push
sub
adc
xor
xchg
in
dec
sub
movsb
xor
in
cmpsl
nop
or
mov
add
mov
inc
cwtl
or
push
push
or
lcall
add
dec
push
outsl
dec
add
or
iret
mov
mov
or
out
data16
test
or
mov
not
pop
xor
lret
jb
std
inc
fwait
daa
cli
add
ret
fcoml
mov
scas
sti
xchg
xchg
dec
xchg
mov
add
str
mov
add
sbb
fcoml
fldenv
xchg
xchg
es
or
pop
inc
add
mov
mov
mov
repz
incl
jmp
jno
in
pushf
data16
clc
sub
xor
adc
aas
add
test
sbb
add
outsb
lret
mov
imul
jb
decl
pop
jl
lret
add
stc
add
mov
add
mov
jne
sbb
or
mov
or
jp
cmpsb
cli
imul
je
arpl
mov
fstl
pop
in
push
jmp
popf
movsb
addr16
sbb
ja
or
and
das
sbb
test
cwtl
jp
jb
adc
mov
stc
pop
push
mov
dec
fiadds
push
mov
fcoms
adc
movsl
incb
dec
and
pushf
adc
bound
sti
xchg
cltd
std
pop
push
add
adc
and
popa
repz
daa
adc
popa
das
sbbb
and
leave
nop
insl
leave
incl
sahf
dec
add
mov
ja
pop
add
cmp
add
mov
xchg
pop
lahf
fcompl
xor
mov
clc
or
xchg
jno
add
add
out
dec
add
ret
push
add
roll
xorl
mov
dec
stos
decb
mov
mov
push
lock
jnp
jb
popa
mov
add
enter
cmp
pusha
shrl
add
or
int
arpl
divl
add
jle
add
repz
pushf
adc
mov
and
shrb
lret
xor
adc
add
inc
or
add
jnp
add
movsb
fildl
leave
xchg
jns
and
test
insl
add
cmp
mov
nop
add
jne
sub
scas
add
xor
test
jmp
cmp
add
sub
dec
in
add
adc
shll
mov
pop
inc
daa
sub
ss
jmp
add
cwtl
sbb
and
repnz
addl
inc
add
jmp
jo
pop
pop
lods
add
je
int
inc
push
xchg
inc
out
loopne
js
in
lret
sbb
xor
into
loope
add
ja
add
jle
aam
outsb
repnz
push
fsubl
mov
sbb
adc
xchg
outsb
pop
push
pop
aam
mov
aaa
cmp
pop
icebp
xlat
add
xor
mov
add
aas
gs
filds
sbbb
sbb
xchg
ja
mov
mov
cmp
sub
stos
dec
cmpsl
mov
std
xor
lcall
in
or
jne
out
xchg
xchg
es
mov
xchg
pop
add
push
xor
into
add
mov
enter
push
xchg
or
cmp
clc
ficoml
int
lds
popf
mov
addl
add
ds
lock
add
jmp
lds
movsb
add
xchg
cmc
cmp
pop
mov
shrb
adc
mov
icebp
push
fimull
out
std
dec
sbb
add
xchg
adc
pop
sub
lods
or
jne
or
mov
stc
movl
xchg
into
adc
movsb
dec
fnstenv
mov
lret
js
std
push
xor
stos
adc
stos
add
push
loop
mov
mov
repz
adc
dec
aam
into
jge
out
pop
push
in
lods
xor
add
int3
add
sub
cmc
out
dec
add
mov
stc
add
pop
lods
rcrb
mov
lcall
pop
mov
jo
mov
push
ret
sahf
cmp
lret
je
xor
mov
push
jge
or
cmp
js
and
flds
mov
sahf
push
nop
xchg
jl
inc
jmp
out
cs
rol
add
shrl
sub
add
sarb
mov
add
sbb
outsb
push
add
push
into
rcrl
je
ljmp
sub
sbb
ljmp
das
outsb
pushf
arpl
aas
dec
out
dec
and
xor
jae
lea
mov
adc
jp
sbb
add
push
shr
inc
test
in
fdiv
decl
mov
je
outsb
testb
jmp
insl
movsb
sbb
add
mov
lock
sbb
shll
mov
rclb
dec
xor
xor
mov
pop
add
sbb
jge
cmpsb
sub
notl
call
stos
xlat
daa
pop
mov
add
add
ror
loop
repnz
add
in
lret
inc
adc
push
stos
sub
aaa
push
divb
cmpsb
cmp
mov
data16
test
pop
pusha
pop
cltd
clc
sbb
add
inc
push
add
rcr
xor
in
add
mov
jecxz
mov
mov
inc
mov
fiadds
or
add
push
sub
dec
and
adc
scas
les
addr16
js
aam
sub
outsl
adc
jae
sub
mov
add
inc
mov
test
lods
testl
aad
and
out
inc
mov
jg
in
pop
mov
test
push
pop
pop
xchg
jle
sbb
add
xor
dec
sahf
rorl
inc
sti
repnz
xlat
int3
push
icebp
cmp
jle
dec
cmp
inc
push
lea
iret
fdivrl
ds
jg
into
xchg
enter
mov
sub
std
mov
add
movsl
and
mov
in
adc
dec
add
cltd
and
fidivl
sbb
or
pop
popa
dec
dec
add
mov
mov
into
fsubs
add
jns
mov
pop
ss
lods
aam
clc
add
adc
shlb
inc
adc
xchg
movsb
dec
sbb
adc
hlt
int3
jo
add
fistpll
lret
and
jl
bound
xor
mov
sub
sbb
sub
cwtl
and
call
in
bound
add
ficompl
stc
mov
xchg
imul
push
out
ret
dec
add
push
xor
mov
push
lods
inc
xchg
out
mov
mov
push
push
loope
mov
popa
lret
sub
push
add
ja
int3
add
out
scas
out
jno
or
mov
rcr
cs
test
outsl
ljmp
rcr
and
in
cmp
daa
sbb
enter
dec
inc
dec
arpl
cmp
push
jle
push
in
fnsave
dec
and
repz
fcom
dec
inc
loop
cmpl
push
mov
or
es
add
sbbl
data16
incl
mulb
cmp
xchg
insl
cs
pusha
jg
stc
push
faddp
int
sbb
movsb
rclb
add
insl
push
add
test
xchg
push
add
sub
or
add
inc
pop
push
roll
sarb
mov
scas
shlb
clc
sub
inc
sbb
fwait
pop
aam
imul
jg
add
sar
mov
cltd
mov
sbb
int3
pop
jb
add
test
aas
push
lea
enter
cmp
xor
inc
call
add
cld
movsl
add
call
movb
fdivl
cmp
add
inc
cli
cld
add
mov
insb
enter
sub
cmpsb
inc
pop
test
fsts
out
adcb
inc
bndldx
push
pop
or
and
and
add
add
add
fidivs
inc
mov
in
mov
add
dec
jmp
add
adc
pop
sti
add
test
imul
add
inc
xor
std
ret
leave
pop
mov
idivl
jl
stos
stc
pop
add
pushf
mov
jg
xchg
lods
mov
shll
add
pop
mov
scas
mov
hlt
aam
shll
sbb
daa
cld
push
sub
and
cwtl
mov
stos
icebp
mov
orl
rorl
xor
cmp
push
cmp
sbb
cwtl
test
repz
or
out
pop
lcall
sub
add
in
jmp
lret
mov
ljmp
xor
jno
add
push
adc
pop
scas
add
iret
data16
inc
push
sub
ds
jo
or
add
push
add
mov
inc
fistpll
jmp
add
cmp
xchg
int3
fildl
pop
mov
ljmp
roll
pop
sbb
cmp
pop
dec
inc
add
sub
les
add
bound
add
out
jmp
mov
into
bound
xor
add
ret
scas
pop
iret
cmp
inc
cmp
rcrb
cmp
sbb
mov
xchg
dec
push
scas
enter
in
pop
or
aam
mov
mov
sub
lret
mov
lock
push
aam
xchg
jmp
lret
jb
inc
lea
aam
shlb
addr16
out
xor
add
lea
push
sub
mov
push
xchg
add
daa
push
jmp
scas
mov
jb
les
idivl
cs
les
je
mov
lds
shll
lods
arpl
xor
push
jbe
stos
add
xchg
push
push
sbbb
mov
incb
shll
test
mov
xlat
mov
xchg
jecxz
add
sbb
int3
dec
mov
add
jno
stc
movsl
cmpsl
cli
fdivrs
mov
scas
mov
notb
push
cltd
cmp
xor
add
arpl
aas
cmp
incl
mov
fcoms
out
pop
add
dec
fcoms
mov
or
je
in
lret
jne
adc
pusha
or
add
aas
xor
pop
ljmp
xchg
add
fs
fsubr
jecxz
vunpcklps
sbb
add
in
dec
repnz
clc
sub
fnstcw
or
lods
mov
or
je
lods
dec
cwtl
dec
inc
pop
jge
push
add
orl
test
mov
or
decl
xor
das
leave
or
mov
out
movsl
mov
mov
and
inc
add
imul
lock
mov
cmc
pop
push
xchg
mov
daa
aam
pop
add
pop
push
outsb
ljmp
add
push
cmp
and
mov
lds
adc
jbe
cmc
adc
and
add
stc
sub
arpl
add
test
push
or
add
pushf
xchg
inc
add
lahf
imul
icebp
pop
ljmp
jnp
xor
aaa
xchg
addb
xchg
ja
push
xchg
jg
push
iret
pop
scas
fadds
inc
cs
jnp
add
jns
add
inc
outsl
mov
pop
or
push
out
add
add
movsb
jp
xchg
sbb
jae
lahf
popf
stc
mov
ljmp
cld
in
cmpb
pop
xchg
aam
add
dec
out
sti
fisubrl
mov
xor
fwait
repz
fisubl
xchg
pop
xchg
or
hlt
call
inc
ljmp
or
outsb
loopne
mov
bnd
or
lods
cmp
sahf
insb
jl
push
call
and
mov
pop
bound
add
aaa
fisttpll
sbb
push
pop
jmp
loop
add
add
clc
sbb
sub
sti
add
lcall
insb
sahf
int
aaa
fmul
jno
shlb
jne
mov
mov
stos
jecxz
jmp
mov
xchg
add
add
inc
add
xchg
lds
mov
inc
orb
nop
mov
pop
xor
sarb
xlat
add
cld
xchg
jl
in
add
arpl
outsl
mov
loop
sti
add
mov
pop
jae
cld
outsb
lods
xchg
cmpsb
in
mov
enter
test
js
add
in
push
movsb
mov
xchg
inc
mov
jle
pop
add
test
or
hlt
jbe
jmp
jae
fisttpll
cmc
add
lret
popa
push
ss
sti
cmp
test
push
push
mov
hlt
pop
mov
sub
sub
mov
mov
stos
sub
add
aam
jae
dec
nop
pop
xchg
inc
xchg
mov
or
std
stos
sub
movsl
add
mov
mov
xor
push
inc
dec
inc
std
ret
fwait
dec
or
dec
add
call
xchg
sub
add
add
scas
in
or
add
sub
sub
pop
xor
push
repz
mov
pop
outsl
bound
scas
lds
xor
jo
lahf
inc
xor
or
mov
add
mov
push
xchg
int3
pop
lods
stc
jb
addb
mov
cmpsb
in
fbld
int
icebp
or
in
test
cmp
lcall
xor
sahf
add
jmp
daa
sti
inc
xor
or
inc
lock
add
mov
add
data16
cmp
les
cld
movl
les
add
bound
xor
cmp
push
sub
fimull
sbb
fwait
aam
xor
aas
orl
add
lea
push
push
arpl
jecxz
sahf
andl
int
js
mov
int3
add
sbb
aas
mov
add
mov
shlb
shlb
call
int3
sbb
lods
and
and
ds
int3
cmp
dec
shr
ljmp
mov
add
lock
in
nop
in
add
add
popa
mov
decb
adc
push
es
lock
or
ret
add
mov
mov
into
pop
insb
and
test
movsl
mov
xchg
xor
cwtl
mov
pop
push
mov
ljmp
cltd
inc
jp
sahf
xor
testl
and
in
and
das
ret
xchg
mov
jne
jp
out
or
enter
jecxz
or
xchg
jle
adc
jmp
xchg
add
cmp
pop
cmp
pop
xlat
cmp
xor
push
lahf
mov
and
mov
les
cmpsb
add
jle
push
cli
daa
add
sub
inc
inc
insl
mov
add
add
insl
xor
add
aad
xchg
mov
inc
or
outsb
cmp
jne
mov
push
cmp
add
imul
add
mov
in
xchg
cmp
xchg
push
xlat
mov
mov
mov
push
mov
mov
sbb
aas
jp
xchg
test
loope
nop
ficoml
lcall
ret
outsb
inc
push
push
ss
int3
sbb
mov
arpl
jns
cltd
outsl
outsl
adcl
jne
stos
mov
sub
push
fistl
mov
stc
hlt
inc
push
or
sbb
mov
sbb
dec
mov
in
fdivl
enter
jmp
add
leave
insl
xor
orl
shll
cmpsb
aad
sahf
add
mull
jne
push
jb
sahf
or
mov
lods
cmp
sbb
cli
cmpsl
loop
xchg
shll
shlb
shll
push
add
xchg
scas
sub
daa
movsl
decb
add
add
hlt
lock
xor
les
mov
repnz
push
sub
je
pop
add
mov
cltd
mov
mov
push
rolb
xor
dec
jmp
or
push
mov
incb
out
or
mov
inc
pusha
mov
orl
cmp
add
sbb
mov
mov
imul
in
mov
incl
scas
mov
inc
add
inc
add
adc
or
je
jge
mov
sub
leave
and
xchg
pop
xorl
pop
ret
stos
jns
pop
push
push
shlb
out
and
aad
test
add
addl
lods
das
int
xchg
hlt
dec
sbb
cmpsl
jo
sbb
icebp
mov
cld
dec
jae
add
push
in
orl
loop
nop
into
push
div
lods
mov
out
test
push
shr
test
gs
lea
mov
rorb
and
add
or
aaa
das
jle
mov
mov
and
cli
mov
inc
or
sbb
add
sub
add
add
pop
dec
fnclex
add
add
ljmp
flds
add
add
xor
pushf
mov
pop
sub
mov
leave
and
inc
mov
pop
js
add
lods
push
push
add
xchg
hlt
cmp
add
sub
aas
add
dec
pop
out
out
iret
dec
or
add
push
dec
daa
leave
mov
and
fs
aas
pop
scas
add
add
mov
daa
lret
add
jb
daa
add
popa
or
cmp
pop
stos
add
les
cmp
or
sahf
imul
icebp
dec
xor
inc
adc
gs
dec
scas
mov
test
lcall
xor
dec
jno
cmc
xchg
xchg
push
dec
fldl
cld
xor
int3
push
and
or
scas
mov
out
cltd
dec
mov
push
add
mov
test
daa
add
popl
lahf
xchg
fsubrl
dec
fldpi
dec
add
jne
add
mov
cmpsl
add
pop
dec
fisttps
fs
adc
xlat
mull
or
cltd
mov
sub
dec
and
mov
out
cmp
inc
jmp
sbb
in
repz
cmpsl
cmp
hlt
inc
inc
add
xchg
sub
mov
cmpsl
fwait
xor
pop
bound
je
inc
inc
data16
je
jp
jb
sub
inc
add
inc
mov
das
sbb
lcall
addr16
mov
or
push
fcomps
pop
fildl
cld
pushf
sar
jmp
jo
ljmp
das
hlt
jbe
lcall
es
and
or
js
sub
adc
xlat
cmp
push
lods
pop
in
std
push
test
mov
push
out
out
test
mov
xlat
add
cmp
repnz
add
jl
xchg
or
add
gs
add
push
inc
cmc
out
mov
xchg
pop
add
sub
dec
xchg
push
cmp
scas
xchg
mov
popa
out
bound
sar
jp
scas
adc
lret
insl
xor
popa
xchg
cmp
pop
or
xchg
dec
sar
xor
loop
xchg
mov
adc
testl
dec
xchg
xchg
push
add
fstpt
cmp
sub
rorb
and
pop
out
push
cmp
in
add
movsl
fdivrp
sub
lods
add
lret
add
cmpl
pop
pop
adc
inc
or
xchg
jle
jp
add
stos
sub
in
pop
adc
add
pop
inc
stos
add
or
loop
cmp
mov
out
ds
jecxz
mov
mov
scas
es
sub
mov
xchg
loopne
ss
repnz
adc
pop
adc
xchg
jmp
shr
rolb
sahf
arpl
cmc
mov
jmp
adc
imul
inc
and
add
pop
data16
fists
xor
adc
lret
pushf
clc
imul
push
and
ss
dec
xchg
ret
jns
mov
es
xchg
inc
test
cmpsb
mov
int
inc
inc
cmp
xorb
ret
push
sti
mov
repnz
inc
mov
dec
or
dec
fs
add
xchg
out
add
enter
dec
outsl
add
loop
mov
dec
push
inc
add
add
xchg
sub
add
add
sarl
inc
jmp
or
inc
dec
sti
inc
in
repnz
lods
hlt
push
and
repz
mov
shrl
js
mov
sbbb
push
sub
sub
add
dec
lret
jb
shrl
sub
lret
add
pop
mov
ss
je
xor
mov
xchg
push
jbe
int
xchg
add
and
lea
jmp
add
inc
xor
dec
pop
mov
add
sar
stos
roll
nop
fsubrl
add
add
in
mov
loopne
mov
push
cmp
push
add
add
add
xchg
mov
dec
mov
frstor
push
pop
jb
jns
cmp
in
fnstsw
pushw
mov
mov
shlb
xor
dec
or
popa
push
add
xor
stos
fstl
mov
or
cli
pop
ret
dec
push
mov
add
arpl
jb
push
aas
inc
push
sub
inc
mov
int
cld
xchg
add
jge
jmp
decb
add
mul
mov
mov
jg
xor
lahf
das
insl
out
push
adc
ja
sbb
jo
test
ret
push
adc
sub
mov
aad
cli
pop
enter
out
enter
push
jnp
cld
mov
sahf
push
inc
ja
jp
lcall
movsl
das
xchg
fistps
fadds
sti
jnp
je
orl
or
sahf
push
pop
dec
xchg
add
add
mov
mov
add
ud1
add
mov
cli
xchg
sbb
pop
cltd
dec
test
or
loope
or
mov
add
test
jg
sub
pop
jnp
in
inc
mov
jbe
add
add
cmc
add
dec
push
jg
sub
mov
movsl
mov
mov
mov
divl
jle,pn
shll
loopne
subb
inc
jp
data16
push
jbe
int
imul
incl
add
test
icebp
sbb
sti
mov
incb
inc
jbe
or
jne
aam
adc
test
sbb
daa
pop
add
out
xorb
sbb
in
outsb
cmp
pop
test
dec
in
aas
mov
sahf
xor
les
data16
in
add
push
xor
fsubr
out
push
stos
out
aam
jl
loope
add
and
ror
out
sbb
filds
inc
xor
mov
xor
in
add
xchg
iret
or
mov
ja
lahf
pop
dec
add
rcr
lods
adcb
cmp
adc
pop
add
add
movsb
or
repnz
scas
cmp
sub
in
pusha
lahf
psllq
add
pop
lret
jecxz
and
lret
rorl
out
sbb
adc
push
push
push
dec
das
sbb
xor
cmp
into
out
mov
push
sub
mov
pushf
cmp
movsb
jle
stc
inc
xor
mov
dec
lcall
shll
add
add
and
incl
mov
mov
sti
sub
clc
aas
mov
xor
mov
je
add
pop
addb
add
shr
pop
dec
add
adc
cmp
mov
int
xchg
sub
inc
push
xchg
sti
push
add
jo
lock
mov
jne
shrl
rcrl
and
idivl
cmp
mov
add
adc
jge
popa
jle
xchg
add
jno
scas
fildll
loopne
inc
sahf
xlat
testb
lea
test
and
dec
loop
cltd
adc
jp
jne
xor
out
xchg
movb
inc
mov
xchg
fwait
sub
cs
mov
aad
je
inc
pop
mov
push
mov
mov
add
sbb
add
pop
das
pop
add
dec
ret
lea
and
xor
hlt
jae
lods
mov
pop
dec
hlt
and
xchg
xor
add
mov
add
mov
fidivl
and
mov
stc
mov
mov
mov
icebp
nop
and
repnz
cli
mov
add
inc
cmp
or
add
or
sbb
das
cmp
lock
add
add
test
loopne
or
xor
cli
adc
xchg
mov
push
repnz
add
mov
popf
mov
and
and
mov
jg
nop
jb
repz
mov
lret
xchg
xchg
dec
sysenter
pop
inc
jmp
loopne
imul
add
cwtl
jne
jle
jo
add
ljmp
mov
mov
mov
mov
pop
add
add
xchg
mov
dec
cmpsb
mov
and
mov
int3
xchg
fsubs
mov
aas
cmpsl
inc
arpl
jecxz
or
loope
jl
pop
cmp
insl
xor
xchg
add
and
inc
pushf
pushf
int
mov
repnz
out
sarb
pop
push
or
push
add
insl
add
aas
sbb
jmp
add
icebp
add
xchg
push
add
jno
sbb
addr16
and
addb
aas
imul
orb
outsb
out
jne
sub
mov
int
add
mov
and
add
ds
loope
cmp
add
sbb
sahf
dec
imul
popf
push
nop
push
sub
std
sahf
jge
ss
sti
inc
sub
insl
shl
fwait
mov
pop
xor
sahf
js
sub
outsb
pop
jb
push
add
mov
and
xlat
push
mov
lret
sbb
pop
scas
mov
and
push
mov
or
sub
shll
dec
sbb
pop
jne
inc
fadd
scas
adc
lea
popa
lods
add
sbb
insl
das
sti
fs
out
mov
pop
into
jg
push
jg
popa
fwait
and
add
cmpb
rol
in
pop
lcall
pop
dec
sahf
sti
jno
ror
ret
add
popa
sbb
and
push
test
add
push
addr16
add
sbb
add
adc
nop
cmpsb
or
add
add
jle
adc
stos
mov
push
test
test
iret
mov
cwtl
sbb
mov
push
xchg
cmp
cmp
push
cmp
mov
add
ja
or
add
test
and
and
pop
xor
nop
jae
cs
cmpxchg
jno
push
add
add
test
repz
xchg
or
push
add
cwtl
lcall
add
adc
cmp
dec
xchg
scas
add
mov
push
jp
sub
add
loopne
mov
pop
push
mov
cmp
cvtpi2ps
xchg
fdivrl
cmpsb
ret
pop
dec
cmp
jo
mov
lret
add
or
mov
lahf
fiadds
ret
sbb
ds
clc
fidivs
push
xorb
xchg
les
dec
and
lds
movl
mov
jmp
sub
mov
mov
insb
lods
aam
jg
xchg
jg
clc
mov
mov
jg
sbb
in
xchg
xor
loope
stos
out
int3
loope
cwtl
push
push
popa
mov
imull
xchg
pop
daa
inc
lds
cmp
gs
dec
repz
add
dec
mov
in
mov
vmwrite
xor
stos
adc
outsl
add
add
inc
and
and
and
hlt
cltd
adc
bound
into
es
pop
add
nop
js
push
mov
xchg
add
xchg
inc
mov
shlb
roll
int3
sub
cmc
pop
mov
add
into
add
add
sub
outsl
push
adc
xchg
add
les
jo
icebp
ss
inc
ja
js
es
add
push
outsb
push
jle
into
xor
mov
push
mov
jp
add
fldl
add
icebp
sub
lahf
mov
test
rolb
and
arpl
rcrb
add
add
loope
jmp
popa
flds
fnstcw
in
xlat
add
int
xor
mov
in
jl
subb
add
mov
cmp
sub
mov
fistps
test
jg
dec
dec
rclb
cwtl
jecxz
js
xchg
mov
in
jno
cmp
jae
inc
lret
out
nop
adc
or
out
dec
adc
jecxz
movsb
jns
outsl
lahf
cmpsb
mov
pusha
mov
dec
add
add
inc
mov
sahf
push
lahf
aaa
cltd
data16
dec
inc
cwtl
add
dec
fldcw
add
adc
pop
mov
xor
daa
cwtl
inc
xor
sbb
pop
pusha
idivl
inc
mov
xchg
fisubl
xor
mov
push
add
sub
sbb
test
les
lahf
xchg
test
repz
out
xor
inc
popf
test
add
xchg
xchg
ds
add
push
cmp
outsl
cmpsb
test
sub
cmpsl
or
test
xchg
addb
adc
cmpsb
push
ret
adc
repz
add
push
push
adc
push
jne
dec
push
add
insb
push
sbbl
add
sbb
lahf
aas
fcomps
in
sbb
gs
push
push
or
or
aam
aas
lds
gs
cltd
outsl
xchg
and
pop
add
cli
add
out
mov
adc
wbinvd
mov
ss
pop
mov
outsb
testl
mov
sub
pop
pop
test
cmpsl
add
push
cld
mov
cld
mov
pop
aaa
inc
add
ret
mov
mov
sbb
and
lea
pop
cmp
lods
sbb
inc
lcall
inc
ljmp
xor
cmp
or
push
sbb
sahf
stos
mov
jmp
sbb
fsts
add
pushf
inc
inc
dec
adc
xor
mov
jae
sahf
test
push
jmp
or
push
pop
call
fwait
aas
ret
add
int
shlb
mov
repz
sahf
idivl
cmpsb
aas
mov
insl
mov
scas
imul
insb
and
dec
cmpsl
dec
sar
cmpsl
add
daa
aad
push
pusha
cli
movsl
fs
mov
dec
bound
into
insl
fmuls
xchg
xchg
outsb
insb
notb
add
xor
sbb
xchg
add
es
mov
movsl
call
pushf
aad
add
pop
xlat
or
mov
scas
add
mov
push
ret
flds
cmp
lds
scas
xor
fimuls
movsb
fldl
mov
xchg
outsl
push
xchg
cmp
dec
add
sub
and
add
add
loope
add
xor
mov
add
sub
int
adcl
lret
jmp
add
and
outsl
lret
add
cmp
dec
dec
out
and
inc
push
shrl
cli
pop
add
cmpsb
pop
inc
icebp
push
jne
mov
cmp
and
and
mov
filds
addb
dec
jg
lods
cmp
sbb
mov
outsl
mov
jns
daa
dec
outsb
ja
add
mov
int3
xor
add
aas
mov
mov
push
fldz
mov
into
jne
iret
jb
shl
pop
sti
sbb
inc
shlb
jg
movsb
mov
sbb
push
aaa
mov
cmpsb
sub
mov
fcmovnb
leave
add
mov
std
dec
add
fnstsw
lea
aaa
pop
add
out
xchg
stos
add
sarl
mov
push
mov
jge
ret
nop
in
mov
fwait
insb
jne
mov
mov
xor
scas
lods
xchg
sub
or
xchg
jae
xchg
aas
test
push
sbb
les
push
lcall
xchg
pop
mov
aad
lcall
xor
rclb
xlat
icebp
lret
or
out
and
fidivrs
add
fldt
add
and
addr16
shll
sbb
push
cmp
ds
fisubrl
cmp
xchg
sarb
andl
cli
add
pop
xor
pushf
fdivl
aad
jbe
test
adc
pushf
imul
test
dec
stos
add
jmp
add
add
xchg
lock
movsb
mov
iret
lahf
loop
bnd
gs
lods
cmp
enter
and
mov
cmpsl
rorl
mov
dec
cmc
inc
and
loopne
imul
insl
add
xor
mov
sbb
add
cs
shll
es
jno
push
test
lea
add
lock
xchg
or
adc
xchg
add
lcall
out
push
insl
xchg
out
inc
jo
push
pop
add
bswap
out
add
shlb
scas
sbb
test
repz
in
add
test
movl
add
add
add
insl
cmp
in
mov
push
cmpsl
add
push
fcom
add
and
sbb
mov
shl
push
xchg
ja
xchg
rolb
push
dec
add
xchg
push
jmp
add
cmp
in
popa
movl
ret
inc
das
stc
mov
out
enter
jbe
into
pop
pushf
scas
mov
sub
dec
cs
or
push
mov
mov
xlat
xchg
sub
mov
mov
sub
cmp
fs
shrb
sbb
mov
push
xor
imul
jecxz
xchg
dec
jns
xor
xchg
vpunpckldq
pop
pop
scas
cli
dec
ret
cltd
hlt
xchg
push
data16
add
flds
test
mov
cmp
cmp
inc
mov
inc
add
add
out
imul
mov
popa
mov
fcomi
rolb
in
out
or
sbbb
add
pop
jns
ret
lods
scas
stos
imul
add
cmc
or
xchg
negb
jnp
cltd
pop
test
fadds
in
mov
and
cmc
add
movsl
push
addb
sub
and
mov
inc
int3
das
cld
icebp
push
retw
or
add
xchg
sbb
mov
push
and
out
aad
add
ss
inc
jbe
mov
add
jge
pushf
pop
sub
cmp
lcall
add
xor
or
es
out
out
lahf
jo
into
add
fidivrl
ret
scas
sub
adc
mov
cmp
add
add
push
stc
fdivrs
stos
lods
sbb
das
mov
inc
add
aad
push
fcompl
cmpsl
insb
gs
loop
stc
jecxz
int3
insb
add
xchg
lret
mov
iret
ja
inc
fcoms
add
jb
mov
into
xor
sub
jmp
test
push
add
stc
clc
add
jno
sub
movsb
add
xlat
add
stos
imul
mov
movsl
and
xchg
fwait
les
mov
adc
cmp
xor
inc
add
pop
data16
icebp
add
cmp
jae
pushf
aaa
jg
inc
fcmovnb
loope
sub
mov
mov
add
ja
aam
fdivr
and
jbe
push
mov
sub
jmp
xchg
xchg
lods
shlb
test
mov
outsb
jl
dec
lcall
insl
addb
add
adc
add
mov
fsubs
add
lret
fimull
sbb
push
push
into
addr16
ljmp
add
out
movsl
enter
pop
roll
pop
sahf
aam
sub
sbb
cmp
cli
mov
test
adcb
jo
cmp
addr16
hlt
add
add
push
lret
sbb
add
fmull
mov
mov
lret
and
push
inc
adc
push
pop
mov
mov
jmp
ljmp
js
xchg
push
push
mov
cmpb
test
cmc
push
pop
gs
lods
lods
add
add
pop
or
int3
push
inc
sub
ret
pop
mov
popa
add
scas
mov
mov
xchg
and
pop
sbb
andb
push
ret
lock
cmpsb
mov
addr16
mov
xor
loopne
cmpl
jae
mov
push
mov
outsl
push
inc
in
add
aaa
cmpsb
es
lods
mov
jo
mov
dec
dec
dec
in
mov
add
mov
jns
lods
pop
add
incb
es
lret
cmp
add
cltd
aad
mov
xor
shll
imull
inc
int
inc
dec
inc
test
cltd
add
lahf
std
leave
jmp
les
stos
add
inc
les
mov
cmp
cmp
push
adc
mov
add
fcmovne
repz
mov
movsb
popf
mov
adc
inc
dec
mov
jne
dec
dec
pop
rcr
mov
movsl
push
in
jp
into
pushf
and
std
add
iret
dec
push
popf
mov
cmp
or
test
int
mov
scas
les
xchg
lahf
push
mov
jge
lcall
inc
movsl
cmpsl
push
nop
mov
addr16
add
sbb
push
add
or
push
push
in
sbb
in
add
or
test
daa
pop
loop
fxch
sbb
loope
add
mov
push
and
dec
and
nop
scas
and
xchg
add
add
test
dec
add
or
xchg
dec
sub
icebp
add
vpaddusb
add
push
cmp
fsubs
sbb
pusha
je
mov
outsb
sahf
int
add
jno
add
add
or
and
mov
divl
pop
sbb
lock
mov
xchg
pop
cmp
dec
jmp
cmp
xchg
jge
inc
pusha
fiaddl
rclb
dec
pop
mov
in
sub
pop
add
jecxz
push
xor
and
popf
and
mov
dec
sub
add
dec
push
rolb
test
mov
test
ss
add
jl
or
xor
push
lds
inc
pop
mov
add
mov
int3
push
jecxz
mov
stc
pop
enter
adc
add
cmp
fsub
fcoms
cld
fidivrs
iret
xor
add
add
shlb
jo
mov
jmp
jle
add
adc
mov
out
jbe
pop
sahf
push
fs
stc
insb
lods
mov
lds
add
fisubs
pop
sahf
call
call
mov
scas
pop
add
or
jbe
stos
inc
cli
fs
jnp
push
scas
add
pop
xor
cwtl
arpl
adc
inc
inc
adc
inc
into
loopne
call
insb
cmpsl
stos
xchg
test
and
mov
cmp
sub
xor
rol
pop
fs
sbb
xor
ficoms
ja
ds
leave
nop
jl
xchg
cmp
das
mov
ret
decl
ret
push
sub
std
les
ljmp
add
cmc
das
fs
scas
std
ret
push
push
mov
loopne
movsl
push
popf
add
and
test
stc
lcall
push
add
pop
dec
iret
add
mov
ss
jge
mov
int
or
jns
ret
add
fstpt
and
pusha
push
add
cmp
xchg
jae
mov
add
repz
add
in
xchg
cmpsl
dec
cld
pushf
add
add
and
hlt
iret
inc
add
cmpsb
test
mov
push
or
adc
jno
shlb
xchg
add
mov
and
adc
add
push
mov
sbb
fimull
sbb
fdecstp
jbe
adc
cmp
push
int
ror
mov
xchg
aam
push
js
or
pop
or
int
mull
cli
push
inc
rorb
shrb
pushf
data16
lret
imulb
in
lods
repz
mov
mov
add
movsl
outsl
push
arpl
push
sbb
xchg
sub
mov
cmc
dec
movsb
mov
or
jnp
mov
or
lock
push
pop
dec
add
addl
pop
xor
ja
out
test
xor
out
aaa
je
in
leave
popa
push
jnp
xor
imul
sbb
arpl
stos
inc
insb
lahf
data16
sbb
pusha
and
mov
and
cmp
std
push
pushf
daa
out
int3
pop
mov
fs
sti
pop
mov
sarb
dec
repz
sbb
cmp
push
inc
and
mov
jg
jle
add
push
insl
popa
push
add
cmp
adc
add
iret
cwtl
dec
adc
xor
loopne
imul
sub
das
test
fisubrl
and
push
das
add
gs
stos
dec
adc
mov
loope
add
test
add
insb
add
and
cmp
sbb
push
jp
add
test
cmp
aaa
add
rcrl
cmpsb
mov
das
push
pop
dec
int3
or
xchg
add
pop
data16
xchg
rolb
push
add
std
test
incb
enter
or
nop
mov
insl
cltd
aas
push
aad
sbb
je
lret
jmp
jno
fiadds
jecxz
add
shl
add
lock
add
xor
mov
mov
psubsb
subl
adc
mov
or
fiaddl
pmullw
jo
jle
inc
add
or
je
jno
push
dec
shlb
pop
add
data16
cmpsb
xor
push
add
sub
std
nop
inc
dec
int
lock
inc
fwait
pop
mov
lcall
scas
add
lds
sahf
cmp
mov
fstpl
add
xchg
push
xchg
ret
int
mov
adc
sahf
fst
or
push
cwtl
jno
cmpsb
jns
loope
test
cmp
xor
mov
scas
xor
aad
clc
fcomi
hlt
nop
cltd
pusha
out
iret
adc
pushf
popa
dec
cli
leave
pop
add
sub
aas
adc
cmp
das
imul
cmp
cli
inc
mov
stc
xor
test
fstps
xchg
add
loope
add
mov
add
pop
add
rcl
add
bound
xor
dec
lock
pushf
mov
xchg
add
xor
cli
add
jnp
add
hlt
add
pop
stos
mov
push
add
add
cltd
cwtl
pop
gs
mov
add
add
jae
fwait
shrb
push
xor
add
ja
leave
out
aad
loop
jnp
mov
cmp
push
sbb
add
lods
stc
add
inc
mov
add
add
cwtl
aaa
adc
push
pushf
mov
pop
repz
lods
push
add
pop
mov
mov
rolb
cmp
daa
imul
icebp
or
outsl
mov
add
mov
mov
add
add
jle
testl
mov
xorb
call
mov
test
and
movsb
add
sbb
push
jne
insl
test
push
mov
faddl
jnp
adc
or
mov
push
outsb
inc
xlat
add
addr16
sbb
out
dec
add
xchg
mov
mov
cmpsl
sub
xlat
sbb
jb
dec
je
mov
mov
and
adc
je
pop
add
out
cld
adc
mov
call
inc
mov
imul
in
pop
loopne
rol
add
add
xor
ljmp
cmp
sbb
and
aaa
push
mov
aad
xor
mov
hlt
mov
sub
dec
add
xor
push
xchg
or
fwait
inc
and
sti
lods
or
add
xchg
outsb
mov
push
mov
cmc
jae
adc
sub
jbe
jae
add
inc
test
push
fs
add
push
cmp
dec
imul
mov
dec
in
into
mov
inc
or
adc
lret
cli
fsubl
ror
lcall
cli
add
pop
nop
mov
jns
fwait
out
pusha
out
repz
xor
fadd
and
sti
jae
int
cmp
xor
roll
cmpb
add
add
into
push
pop
filds
out
out
outsl
xchg
xchg
scas
fldenv
lcall
sub
in
cwtl
lds
jnp
mov
add
dec
push
mov
cmp
in
inc
cs
add
mov
movsl
sub
fbstp
mov
hlt
pop
jbe
add
outsl
add
mov
popa
das
jo
and
jecxz
dec
jb
outsl
mov
inc
mov
orl
add
mov
adc
insb
loope
dec
in
jp
add
add
xchg
iret
or
dec
jae
cld
xor
jecxz
or
xor
sbb
add
hlt
outsb
cmp
movsb
add
pushl
cli
in
mov
cmp
mov
les
jo
add
inc
dec
add
subb
jae
mov
mov
jb
xchg
sbbl
mov
cmp
adc
in
lret
inc
dec
jno
movsl
hlt
and
stc
inc
nop
in
lds
cs
iret
and
pop
add
push
mov
adc
jbe
jns
stos
xchg
sbb
mov
xchg
divb
dec
enter
das
dec
orb
xorb
mov
sbb
je
outsl
xor
clc
xor
outsb
jle
sbb
dec
sub
stc
popf
cmp
add
shr
addl
push
sub
stc
add
inc
insl
in
adc
cmc
add
out
lods
xchg
push
nop
mov
stos
push
rorl
xchg
sub
xor
mov
xor
test
call
je
add
in
jns
mov
or
repnz
les
add
pushl
fwait
enter
xchg
add
shl
pop
out
in
sbb
jo
test
rclb
fs
push
mov
add
ljmp
gs
and
add
std
push
jmp
add
xor
mov
in
cltd
push
xor
ljmp
addb
movsl
mov
repnz
ljmp
insl
pusha
mov
xchg
ret
xchg
cmpsw
sbb
add
cmp
out
lea
inc
cmp
mov
xor
push
and
mov
or
inc
dec
or
xchg
cmpsl
xchg
and
fs
adc
push
or
in
add
test
xchg
je
std
int3
adc
fld1
cmp
adc
push
cmp
adc
call
xor
inc
add
jg
mov
popa
jo
mov
inc
add
imul
pop
fwait
mov
mov
mov
push
mov
test
lret
adc
or
lods
jns
insl
add
test
add
ret
jno
rep
adc
add
lds
mov
enter
add
imul
in
cmp
add
je
cli
movsl
bound
add
jmp
jle
jg
ret
out
inc
loope
mov
xor
or
mov
sbb
insl
add
inc
mov
cmpsl
ret
push
pop
hlt
mov
outsl
add
ret
lock
nop
and
ficompl
clc
hlt
push
cs
add
mov
inc
jge
add
inc
xchg
pop
adc
fwait
push
add
or
test
add
or
lods
out
bound
filds
dec
inc
jecxz
pop
cmpsl
and
mov
imul
add
lods
int
jb
mov
add
movsb
push
jae
inc
nop
outsb
movsb
add
mov
pop
cmp
add
cmc
xor
add
sub
ret
add
sub
notb
fucomp
arpl
add
add
repz
push
jecxz
or
inc
je
jmp
ljmp
mov
jns
inc
or
add
push
shlb
xchg
in
mov
lods
rolb
add
cmp
fcoms
nop
push
adc
sub
adc
or
add
adc
and
push
sbb
add
imul
clc
sub
lret
and
mov
inc
int
adcl
sbb
lea
std
rcl
inc
inc
add
sbb
in
movsl
xor
mov
cld
and
imul
in
insb
sbb
pop
pop
out
mov
stos
daa
in
add
fildll
divb
fldcw
aas
pushf
xchg
rorl
or
test
xchg
and
add
adc
stc
ljmp
stos
outsl
pop
outsl
and
pushf
push
movsl
movsb
xchg
out
add
inc
xor
sub
jb
addl
dec
xlat
mov
add
les
dec
push
jne
mov
fisubrl
dec
xchg
xor
orl
mov
cmpl
mov
in
lea
mov
cmp
pop
dec
int3
fs
dec
sbb
mov
add
add
mov
adc
pop
xor
push
orl
pop
into
xor
jp
add
add
fistpl
leave
add
xchg
pop
shl
je
and
stos
fdiv
test
xor
arpl
xorl
xchg
in
jl
xchg
inc
add
sbb
sub
sub
ds
fsubs
loop
repnz
fwait
nop
add
into
push
and
rcl
cmp
loop
cli
jp
add
test
stos
cmp
xor
gs
nop
inc
add
les
add
jb
or
mov
pop
rclb
sub
call
in
clc
mov
pop
mul
ret
or
fiadds
jb
xchg
xchg
inc
outsl
pop
adc
add
and
mov
loop
and
cmp
or
rcrb
fs
xor
mov
call
mov
jnp
mov
movsb
sbb
push
push
add
jp
jecxz
fiadds
ret
in
add
data16
mov
stos
lret
bound
inc
repnz
jo
clc
pop
gs
out
fadds
scas
adc
jmp
sbb
cmpsl
loopne
add
fs
repnz
push
and
popa
rcrb
add
inc
push
jno
push
je
aam
cmp
test
outsl
call
call
inc
inc
rol
jecxz
repnz
add
movsb
lret
pcmpeqb
pop
aaa
addl
test
es
loope
shll
xor
add
mov
fbld
add
mov
fimuls
xor
jp
loopne
or
test
or
add
add
add
sub
add
in
add
testl
dec
outsl
insb
push
cmp
jnp
push
adc
test
pop
stos
add
jae
inc
xchg
imul
cmpsb
push
ret
cmp
or
cmp
mov
call
cmp
inc
cmp
push
popf
lret
fstpl
rorb
jmp
xchg
stc
cmp
pop
mov
dec
add
inc
pop
out
ret
leave
rolb
add
test
repz
or
jl
jae
cli
xchg
cmp
jmp
sbb
inc
outsb
fstps
xchg
imul
xchg
inc
int3
roll
insb
sbb
push
mov
sbb
in
add
outsb
leave
or
or
jg
rcll
clc
outsl
sbb
pop
cmp
fs
cli
sti
leave
add
stc
sub
sarl
sub
add
in
and
mov
xor
push
adc
pop
stos
push
push
es
dec
sbb
outsw
cwtl
ret
mov
mov
stos
clc
lahf
add
cmc
in
xor
lcall
int
insl
mov
mov
and
xlat
xchg
inc
add
mov
and
lret
add
xor
cmp
jbe
sbbl
je
mov
test
popa
and
enter
outsb
enter
test
clc
xor
add
push
mov
pop
or
bnd
aad
mov
addb
mov
cltd
add
daa
stos
mov
addr16
scas
or
cld
imul
adc
ret
push
push
xor
add
xor
lock
push
add
sahf
xchg
pop
mov
cmp
jb
pop
add
add
push
lock
jnp
xlat
and
push
mov
hlt
sarb
mov
sbb
push
stos
repz
cmp
lret
pop
mov
sub
out
pop
jo
jae
sbb
cmp
icebp
pop
lds
mov
inc
and
loopne
imul
lret
add
fisttpl
inc
push
pop
test
pop
aam
fs
ror
jge
fdiv
divl
xor
mov
mov
push
add
jle
rolb
pop
js
pop
jle
mov
sbb
xor
add
popa
xchg
sbb
roll
jmp
push
pop
add
ds
add
xchg
inc
pop
in
inc
add
ret
mov
insl
out
stos
setl
add
loop
outsb
add
mov
gs
jnp
int3
sahf
add
add
adc
les
mov
mov
imul
fidivl
lock
pop
sarl
lahf
jno
das
lahf
out
pop
in
lods
addb
inc
lods
cmp
in
sub
or
dec
addr16
or
pop
add
add
push
movsl
mov
pop
in
dec
stc
popa
pop
xor
or
repz
sarl
addr16
pop
sub
add
jbe
add
lods
je
pop
and
mov
pop
mov
shr
adc
mov
adc
sub
sub
xchg
xchg
loopne
push
pushf
lds
mov
dec
cmc
call
sbb
inc
daa
sub
xchg
in
dec
jmp
lods
mov
push
and
push
sbb
add
addl
data16
pop
xor
push
mov
inc
and
push
dec
mov
sub
rcr
fnstenv
push
push
and
add
sti
in
push
inc
mov
xchg
ret
fwait
add
roll
mov
push
add
inc
add
add
mov
cmp
xchg
mov
cmp
and
mov
mov
add
mov
lret
imul
fldenv
adc
cmp
add
add
outsb
hlt
inc
dec
adc
pop
mov
out
mov
inc
mov
mov
push
cmpsb
sub
rclb
int
add
cmp
icebp
pop
lret
cli
cli
outsb
decl
add
cwtl
xchg
fdivs
jns
clc
cmp
out
push
int
xchg
xorb
cmp
cld
jne
add
lahf
fdivp
lahf
bound
mov
inc
lret
les
mov
fcomps
sub
cmp
add
add
sbb
xchg
jg
push
push
scas
mov
cmp
push
mov
xchg
mov
in
ss
mov
cltd
nop
xor
xchg
mov
jecxz
push
and
ret
pop
stos
bound
pushl
push
mov
adc
insl
add
inc
fs
out
inc
pop
fldl
lret
test
push
and
out
test
movl
insl
pusha
mov
add
jge
or
loope
insb
add
popf
hlt
add
mov
add
lock
sbb
dec
push
and
roll
xchg
mov
pushf
and
arpl
bound
adc
lock
and
movl
cmp
stos
mov
xchg
jnp
add
add
dec
cli
gs
and
adc
ret
test
adc
push
add
jb
xor
sub
sub
shll
mov
add
adc
cwtl
les
dec
scas
or
pusha
fmull
cmp
adc
push
ss
and
mov
hlt
jge
jmp
std
xor
dec
mov
xchg
in
jl
cmpsb
fisubl
add
ja
mov
add
mov
pop
loopne
in
sub
push
xchg
add
aas
sub
je
cwtl
add
mov
out
aad
fsubrl
std
add
mov
scas
mov
jle
inc
inc
setno
add
push
inc
mov
mov
pop
jg
es
adc
outsb
add
xor
scas
shlb
mov
jle
aad
outsl
push
inc
add
loop
int3
sub
ljmp
inc
xchg
and
mov
scas
or
in
imul
add
cld
add
inc
xor
pop
inc
insl
popa
and
enter
dec
das
inc
setle
in
jg
jecxz
sti
xchg
and
outsb
lahf
int3
test
adc
sahf
int3
sahf
cli
add
push
pop
xchg
testb
xor
jns
xchg
sbb
cmp
cmp
pusha
cwtl
add
fmul
mov
clc
pop
mov
in
je
jmp
fldt
sub
sub
jbe
mov
bound
add
addr16
and
or
in
cltd
cli
fs
sbb
xlat
xlat
stos
in
xor
orl
add
xchg
or
jl
daa
das
arpl
dec
push
ljmp
cmc
sub
es
dec
add
pop
dec
xor
mov
push
cltd
out
xor
sbb
sub
adc
fbld
xorl
lods
pop
push
pop
in
fstl
lret
push
aaa
or
loop
or
data16
cmp
dec
xchg
or
push
not
aas
in
sub
int
cmc
xor
mov
in
scas
js
jge
add
jl
sti
sub
adc
les
pop
add
sub
mov
jle
inc
pop
int
outsl
sbb
mov
push
jl
aad
dec
sub
adc
inc
xchg
pop
lahf
push
jbe
mov
add
popa
outsl
std
adc
aaa
fbld
inc
push
sbb
mov
sbb
arpl
mov
test
add
mov
iret
cmpsb
mov
ds
in
outsb
cmp
add
outsl
repnz
sub
fadds
mov
js
loope
out
jp
xor
cmp
cmp
dec
aas
pop
lock
mov
dec
xchg
and
pop
or
test
push
iret
mov
xor
loop
mov
lock
pop
lea
stc
sbb
jp
inc
inc
mov
pusha
push
jne
mov
adc
out
dec
iret
jae
mov
cmp
insb
sbb
ja
mov
sbb
jge
shrl
jb
push
pop
pop
xor
inc
clc
cmp
decb
mov
add
sub
fimull
and
sbb
push
outsl
pop
mov
fsqrt
sbb
add
pop
xchg
sarb
nop
add
out
xchg
lahf
inc
adc
or
mov
in
out
sbb
icebp
xchg
imul
cmc
cltd
dec
adc
dec
adc
pop
iret
repz
mov
cmc
or
inc
test
jmp
xchg
add
add
fldenv
fadds
das
iret
insl
mov
adc
cmpsb
fs
mov
movb
pop
mov
adc
mov
dec
adc
lds
in
add
dec
mov
mov
push
loope
pop
adc
insl
repz
dec
add
movsb
lret
sub
aam
arpl
jno
es
inc
sub
jno
push
and
cmp
jge
push
add
repnz
insb
add
inc
jne
add
jns
jo
or
popf
add
push
popa
push
add
call
stos
xchg
cmpsl
jmp
outsb
clc
or
xchg
mov
xchg
xchg
add
lea
fwait
add
insl
call
cmp
or
add
pop
sub
dec
cmp
mov
cwtl
or
cmc
and
test
or
mov
add
add
addr16
mov
clc
cmp
mov
push
lcall
pop
scas
pop
adc
mov
xchg
int3
xchg
mov
cmp
jo
sbb
xor
mov
or
add
add
cmpsb
lret
pop
dec
push
mov
and
pop
add
dec
mov
cmc
sbb
sbb
sti
push
add
gs
cmovle
mov
and
popf
loop
jge
and
dec
add
addr16
imul
mov
add
xchg
out
adc
stos
adc
fs
ja
ret
cmpsl
adc
jp
jnp
imul
mov
outsl
push
int3
push
push
test
fimull
add
add
add
lds
lods
es
cmpsl
jg
dec
pop
push
popa
mov
ret
pusha
inc
mov
loopne
and
mov
mov
fs
int
ss
repnz
xchg
fwait
hlt
ljmp
xor
or
adc
add
xchg
mov
mov
mov
stos
inc
sub
and
cld
pop
nop
repnz
ljmp
adc
add
popf
lret
sbb
sar
loop
mov
push
je
stc
cwtl
das
push
mov
cli
xchg
add
mov
testl
scas
add
mov
sbb
jno
pop
fnstsw
add
xchg
dec
rol
int
pop
add
mov
add
out
mov
cwtl
jmp
mov
sbb
adc
lock
scas
gs
stos
stos
or
cmp
enter
ja
fstps
pop
add
add
mov
addb
pop
pop
pop
adcb
inc
mov
stos
adc
mov
imul
xchg
push
mov
dec
enter
add
jbe
push
dec
insl
jbe
push
lea
push
pushf
cmpsb
add
push
mov
nop
add
enter
lock
push
subb
add
cli
stos
add
add
test
add
add
ja
jnp
cmpsb
cmp
gs
enter
xor
fdivs
pop
popf
and
outsb
xlat
fs
push
insl
pop
adc
lock
les
or
add
je
out
lcall
xchg
jg
test
and
leave
pop
insl
lahf
sahf
std
sub
xchg
dec
mov
xor
xor
mov
add
add
outsb
fisttpl
xchg
cmp
stc
imul
imul
jb
jmp
sub
sbb
pop
jnp
dec
les
psadbw
lret
mov
lods
adc
loop
cmp
sub
xchg
fisubrl
mov
cs
lret
or
pushf
jae
push
rep
add
add
push
stos
mov
hlt
mov
cmpsb
sub
data16
test
add
cltd
pop
push
in
adc
call
jge
cmp
rclb
movsb
pmullw
add
cs
notb
xor
lahf
adc
in
mov
test
mov
xor
lods
or
shrb
pop
adc
fldt
push
inc
aam
lods
pop
push
add
jmp
jbe
adc
int
les
inc
gs
cmp
into
xchg
sub
lds
inc
enter
lods
inc
lahf
sbb
add
add
cmp
stc
popl
pop
dec
jbe
out
push
jge
adc
mov
jns
pop
pop
xchg
test
das
dec
shll
rcrb
loop
fcomp
and
pop
push
repz
popf
jae
cmp
jecxz
push
in
sbb
push
adc
int3
test
add
mov
stos
mov
push
mov
add
daa
xor
stc
pop
add
stos
xchg
int
and
xchg
add
cmc
mov
int3
add
add
test
xchg
sbb
inc
mov
jecxz
jbe
cmp
setae
pop
incl
or
jne
jno
hlt
push
cmc
push
and
cmp
ljmp
sub
push
mov
aaa
shll
or
and
jp
add
and
inc
add
iret
add
jecxz
add
repnz
xchg
jns
xchg
add
and
cwtl
xor
adc
add
adc
and
adc
hlt
jle
push
dec
mov
cld
daa
mov
push
xor
leave
pop
shr
push
or
insl
jbe
cmp
dec
mov
add
push
lret
mov
fsubrp
ret
addr16
add
xchg
rcr
pop
jo
leave
xor
jp
lock
enter
jo
mov
bound
mov
mov
sub
fdivrl
mov
scas
cmp
mov
fwait
jl
js
call
mov
mov
mov
sarl
out
pop
push
jbe
push
pop
js
mov
push
hlt
lds
xchg
inc
mov
aaa
push
cld
push
xchg
mov
std
pop
iret
movsl
jle
int3
ja
loop
addr16
out
or
outsl
push
dec
adc
jae
push
push
mov
jnp
mov
pop
mov
add
movsl
add
cmp
mov
push
adc
dec
stos
loop
insl
push
xor
xor
push
add
mov
and
mov
in
push
and
push
add
dec
inc
push
sarb
push
jl
rorb
mov
movsb
xchg
sub
add
mov
sbb
jp
out
insl
das
inc
jg
out
je
dec
lahf
je
add
or
mov
add
add
xor
add
iret
adc
fidivs
add
xchg
fwait
inc
push
ficoml
sub
xor
in
add
mov
adcb
pushf
adc
mov
ds
push
add
cmp
or
push
add
dec
movsl
pop
lret
add
add
cmp
add
jns
mov
mov
sbb
bound
daa
test
cmp
mov
cld
mov
jns
xchg
ret
call
jge
adc
scas
jbe
sub
add
int
inc
jl
pusha
add
je
fnstenv
jns
aam
mov
lahf
cld
dec
push
add
sbb
add
add
jp
and
pop
add
jo,pn
mov
add
inc
jle
ljmp
fdiv
push
popf
mov
fldenv
push
nop
pop
mov
arpl
mov
push
dec
sbb
push
xor
dec
mov
lods
add
or
or
add
mov
xchg
pusha
imul
test
int
inc
out
mov
xchg
add
sbbl
insl
lahf
pop
or
or
push
adc
ret
mov
lods
cld
or
shll
xchg
cld
cmp
pusha
adc
jns
cld
xchg
jl
jg
xchg
sbb
jnp
cmp
push
sbb
hlt
lock
cltd
add
stos
out
xlat
sub
pop
repz
sbb
je
ret
xorl
fs
jbe
jae
pop
adc
filds
xor
dec
fnstcw
cmp
mov
ret
or
jmp
mul
sbb
xor
mov
jl
xor
push
mov
cmp
xchg
negb
stc
repz
push
jmp
push
and
imull
movsl
push
out
repz
push
inc
mov
jne
cltd
lahf
adc
sub
sahf
xor
cmp
xchg
sbb
fwait
fwait
imul
pop
add
add
cmp
adc
sub
xor
pop
push
in
jne
pop
and
inc
and
xchg
add
pop
outsl
sbb
sti
push
push
add
pop
ljmp
xchg
shll
fwait
cmpsb
sub
fidivl
dec
cmpsb
pop
dec
mov
pop
fsts
add
fisubl
rcll
iret
rcr
mov
lods
dec
mov
add
bound
mov
and
int3
jns
and
sbb
addr16
xor
adc
jae
int3
adc
loop
sahf
movsl
pop
jmp
xlat
pop
sub
adc
mov
jae
cmp
sbb
pop
push
dec
add
or
add
mov
pushf
andb
outsl
lcall
cli
mov
dec
add
and
cltd
mov
mov
mov
pop
inc
popa
add
mov
std
xchg
dec
cmp
in
pop
push
ds
push
xchg
adc
adc
add
pop
loop
test
into
cs
ds
add
popf
jecxz
std
add
inc
movsb
lds
add
filds
xchg
popa
inc
aam
sub
adcb
xchg
xchg
mov
jno
jne
jae
int
aam
lds
lret
push
add
in
xchg
decl
xor
add
mov
std
lret
bound
mov
lret
or
les
sbb
lock
or
add
dec
inc
lock
push
push
sti
dec
loope
pop
lret
mov
lea
mov
fwait
and
pop
or
insb
or
dec
jb
les
inc
test
mov
inc
add
sub
mov
add
push
sti
dec
add
scas
imul
add
mov
mov
jmp
push
mov
cmp
pop
lahf
xchg
xchg
xlat
cmp
adc
inc
stos
and
push
out
lahf
lock
cmp
popf
xchg
into
sbb
addb
das
jne
test
jno
inc
pop
xor
mov
out
jg
lods
out
push
add
lret
div
mov
jge
xchg
sub
xchg
add
xchg
testl
pop
imul
dec
xchg
or
adc
cld
pop
add
add
mov
movsb
loop
or
push
mov
jg
add
add
add
shrl
cmp
in
ret
loop
aas
loop
add
adcl
or
mov
popf
cltd
and
stos
dec
test
scas
out
lods
aam
or
test
dec
add
jg
xchg
out
xchg
xchg
xor
add
insb
enter
adc
jmp
ret
cmp
cmp
inc
fstps
clc
mov
daa
xor
jb
pop
in
push
dec
idiv
add
arpl
add
dec
push
xor
arpl
mov
imul
sub
cld
orb
push
lods
xchg
cmpsl
sbb
test
mov
inc
jmp
leave
cmp
cmpsb
mov
add
inc
inc
mov
cli
or
movsw
add
rorl
test
into
out
mov
sub
dec
loopne
aam
mov
adc
in
or
inc
xor
add
test
xor
add
in
or
add
sub
xchg
test
outsb
andb
and
pushf
jle
mov
sbb
cmc
nop
mov
jno
mov
lock
imull
xchg
xchg
lahf
fs
cmp
lret
aas
push
lret
add
dec
mov
cmc
test
scas
sub
and
pop
add
popa
pop
stc
bound
push
pop
idiv
xchg
xchg
cmpsb
int
push
mov
ljmp
push
push
nop
nop
sti
xor
add
sbb
push
sahf
add
and
inc
add
dec
adcl
mov
xchg
mov
push
pop
mov
add
test
hlt
lea
mov
cli
jnp
stos
and
shlb
jb
jl
adc
enter
lret
and
shl
mov
into
jge
inc
mov
dec
sbb
stos
push
jecxz
clc
loopne
mov
cmp
lea
add
add
psubsb
sub
notb
add
frstor
mov
pop
jae
insb
add
shll
stos
les
add
out
adc
add
mov
jecxz
mov
sub
bound
stos
imul
jge
fistl
dec
adc
mov
and
stc
push
add
int3
mov
xchg
cmpsl
ret
lret
jo
dec
outsl
add
ljmp
fadds
push
js
xchg
decb
pop
out
in
pop
dec
add
cmp
fs
jge
aas
dec
pushf
or
insl
fidivl
call
mov
jge
mov
out
mov
mov
and
mov
shll
arpl
xor
add
dec
xorl
jge
sub
shlb
sti
mov
xchg
pop
pop
mov
int3
sbb
dec
inc
loope
stc
pusha
setbe
jns
verw
and
adc
add
rcll
mov
ret
push
xchg
aam
push
adcb
mov
add
jge
mov
lods
inc
stc
fwait
nop
movsl
out
jns
pop
push
addb
fsubrs
int3
arpl
and
lods
addr16
or
jb
adc
outsl
add
or
fcompl
sub
or
xor
jl
cmp
pop
add
dec
inc
sbb
stc
out
dec
and
sbb
mov
inc
out
cs
movsb
leave
test
jae
es
jg
test
dec
pusha
test
inc
or
loopne
mov
sbb
cmpsl
add
mov
push
pop
dec
addl
xchg
inc
inc
add
xchg
add
mov
xchg
aaa
add
es
adc
insl
aas
lret
in
mov
inc
jne
ret
adc
dec
sub
iret
add
or
sbbl
add
inc
mov
iret
and
lcall
or
push
das
clc
add
push
ficoml
mov
add
sbb
or
mov
dec
mov
das
dec
adc
jl
pop
fsubp
adc
lea
mov
and
mov
in
xchg
jno
adc
jmp
add
out
jbe
mov
xchg
mov
and
aas
pop
jmp
add
sbb
loop
jbe
pop
ds
pop
aaa
pop
add
dec
add
insb
add
jne
xor
ret
dec
add
das
mov
and
mov
frstor
mov
jno
and
insb
pop
sub
fmull
out
stc
data16
sarl
cwtl
sub
sbb
sbb
push
test
shrl
loope
call
xchg
add
and
pop
hlt
dec
xchg
sbbb
dec
incb
add
jle
push
cmpb
pop
jne
fiaddl
pusha
test
mov
mov
push
adc
repz
or
mov
add
scas
xor
mov
popw
cmp
std
push
add
bound
or
ss
lret
add
dec
jecxz
sub
add
aas
rolb
push
xchg
jmp
lea
push
push
bound
and
int
pop
movl
scas
add
pop
mov
dec
sub
pop
mov
sub
and
mov
les
call
add
jmp
or
imul
or
xor
mov
and
in
stos
cmp
scas
movsl
pop
jle
popf
add
movsb
inc
cmp
mov
add
inc
test
fnstenv
jmp
testl
bound
add
movsb
les
xor
add
mov
testl
in
jmp
sbb
icebp
add
inc
sbb
aam
mov
cmpsb
arpl
jge
sub
in
inc
mov
mov
insl
iret
lds
push
mov
push
sahf
jnp
cwtl
out
mov
pop
pop
mov
fbstp
fildl
std
aas
xchg
add
bound
jecxz
icebp
jmp
jle
mov
pop
sub
xor
fdivs
int3
or
mov
mov
jge
add
sub
jmp
xchg
lcall
mov
jae
rorb
and
mov
and
add
pushf
sahf
cltd
jb
das
push
xor
data16
or
mov
xchg
js
js
sbb
adc
pop
add
mov
sahf
fdivs
xchg
add
in
lcall
push
add
inc
ret
jnp
add
add
add
push
add
add
scas
scas
scas
pop
loop
mov
sub
popf
inc
pop
mov
js
daa
push
fidivrl
outsb
call
cmp
mov
pop
fmuls
shrl
stc
pop
jbe
testl
add
les
push
int3
add
jb
lret
neg
loop
lds
xchg
xor
call
pusha
push
inc
xchg
mov
loope
push
lahf
jl
and
push
sahf
call
mov
cmpsb
cmp
jge
cwtl
xor
push
lds
add
js
cmpsl
aad
fisttps
add
cmp
jnp
xchg
lods
pop
add
stos
stos
loopne
sbb
mov
xchg
add
add
out
mov
xor
inc
xor
sbb
push
call
sbb
jmp
add
insl
add
push
nop
mov
bound
add
jge
gs
jno
sahf
fsubrp
cmpl
mov
fildll
roll
or
pop
add
jno
mov
bnd
sbb
lods
aaa
sahf
xchg
insb
add
add
das
popa
add
add
fcoms
in
pop
aam
mov
lock
cmp
fdivl
scas
jle
out
add
js
popa
pushf
add
fimull
xrelease
lret
xchg
cwtl
aas
nop
and
mov
movsb
ret
add
in
neg
cltd
mov
out
jp
jo
mov
pop
lods
and
jae
add
pop
add
shrl
sub
outsl
xor
push
fimuls
rolb
cld
js
pop
jp
xor
int
lock
mov
add
lret
jmp
repnz
and
gs
add
push
arpl
sbb
push
xor
ret
add
cs
repnz
rcr
adc
shlb
push
sbb
jle
icebp
push
sbb
aaa
adc
mov
mov
xor
outsl
mov
mov
adc
sub
cmp
in
mov
cwtl
pop
xchg
scas
pop
jp
mov
xor
lods
out
lea
jns
and
aaa
mov
cli
jae
push
cmovg
add
in
mov
lahf
push
les
insl
mov
xor
jmp
pmulhuw
mov
sub
cmc
jns
mov
xchg
add
ret
mov
lcall
add
mov
inc
sub
mov
jmp
or
mov
call
or
inc
push
sub
add
iret
pop
mov
sbb
sub
jne
add
pusha
popa
or
sbb
add
push
inc
int3
in
dec
pop
das
push
dec
xlat
or
scas
adc
add
in
mov
lock
sub
daa
je
xor
movsb
sbb
popf
clc
outsl
inc
pop
jl
mov
fwait
call
xor
int3
or
shr
jg
add
fwait
cwtl
mov
cwtl
xor
and
and
fildl
out
xchg
lods
sahf
dec
outsl
and
add
popf
push
adcl
xor
jecxz
and
sub
push
add
outsb
popa
pop
ret
lret
add
movsb
add
add
mov
testb
dec
inc
lahf
loop
mov
jb
add
int3
add
add
push
insb
mov
jbe,pn
mov
and
add
jbe
mov
sub
es
outsl
rcll
lret
jo
repnz
cmc
xchg
jecxz
and
out
xchg
pop
xor
xchg
divl
add
and
mov
mov
jecxz
add
cld
lret
and
or
lahf
sbb
adc
outsb
aam
cmp
lods
inc
cmp
add
inc
add
add
mov
repnz
add
arpl
loopne
ret
push
add
push
fmulp
xor
fwait
jo
or
jg
cmpb
push
lahf
pop
add
addl
lock
scas
enter
xor
nop
mov
pop
add
push
repz
push
cltd
dec
add
aaa
adc
inc
add
add
jbe
mov
lcall
fdivrs
sbb
mov
mov
popf
arpl
lret
cmpb
jmp
mov
imul
ljmp
pop
loope
and
xor
fldenv
cmp
ss
add
push
push
mov
stos
test
icebp
sbb
stos
adc
addb
ja
sbb
dec
lods
jo
loop
mov
hlt
cmp
xor
sub
mov
stos
jo
cmp
mov
dec
out
stc
mov
loopne
rcrb
addl
pop
cmp
pop
sarb
xchg
adc
sahf
xchg
std
sub
sbbb
rcr
stos
push
or
or
inc
int3
fcompl
dec
lods
mov
movsb
pop
fdivrl
push
add
out
adc
pop
add
adc
cmp
inc
test
fisttps
cmp
sarl
adc
aaa
adc
mov
arpl
jnp
and
jb
subl
add
pop
push
movsl
add
push
add
add
push
xor
out
dec
cmp
adc
pop
sbb
fidivl
add
cs
xchg
sub
int
nop
aas
add
xchg
loopne
arpl
insl
mov
jmp
sbb
inc
scas
add
in
sub
mov
add
adcb
outsl
leave
sti
out
push
pop
pop
cwtl
add
mov
out
jle
cmp
and
xchg
jno
dec
add
lods
aad
dec
mov
int3
xchg
xor
arpl
fisubs
mov
jns
and
xchg
pop
dec
mov
stos
add
lcall
sahf
imul
add
jmp
xchg
rcr
adc
dec
lcall
call
pop
mov
jg
xor
iret
add
gs
shll
pop
ljmp
inc
stos
lds
sub
pusha
aaa
jecxz
out
push
xchg
lcall
cmp
andl
lock
hlt
add
mov
pop
sub
sbb
mov
cmp
cmc
and
stos
adc
add
jns
fdivrl
leave
adc
lock
sbbb
xor
add
sub
add
jne
add
push
lods
push
mov
cli
add
scas
add
sahf
sldt
mov
lock
add
rolb
sti
and
push
out
fldt
in
andb
gs
dec
xor
inc
lahf
stos
dec
pop
add
repnz
sub
inc
mov
out
push
and
and
lock
test
push
lret
or
sarl
dec
enter
lods
lock
addr16
jmp
out
mov
jle
pop
inc
ret
pop
push
cmpsb
gs
jns
xlat
cld
out
into
add
adc
aam
aas
fcomps
add
inc
pop
xchg
in
xor
mov
in
ret
bound
mov
push
sub
mov
or
sbb
pop
fwait
mov
xchg
loop
stos
jne
or
push
stos
fwait
push
and
sbb
mov
mov
or
incb
mov
ja
adc
jecxz
mov
jl
repz
imul
les
mov
cwtl
repnz
dec
add
in
pop
xchg
add
mov
add
fucomp
lcall
cli
iret
push
pop
and
jnp
les
push
int
clc
cmpsb
add
insl
pop
push
cmc
add
mov
xlat
shll
rclb
sub
fcoml
lahf
mov
test
sahf
lret
jb
popa
fisubs
add
enter
in
and
and
fstpt
pop
jp
ficoml
add
inc
mov
ret
sub
add
and
mov
mov
push
push
push
and
bndstx
leave
fmull
int
and
pop
cld
pusha
mov
inc
jnp
dec
stc
inc
add
jbe
lds
stos
xlat
mov
lods
rcrl
add
sti
mov
add
dec
xchg
xchg
lret
repz
lahf
jle
adc
add
sarl
add
into
add
sub
sub
xor
int3
jg
outsl
data16
stos
mov
pop
add
or
mov
push
add
xor
pop
cli
mov
cmp
or
inc
fildl
xchg
int3
mov
pop
or
lods
add
int
add
data16
or
dec
add
mov
inc
jbe
pop
mov
cs
xor
xchg
jns
add
add
lret
arpl
lods
cltd
rorb
fwait
adc
sarl
mov
jle
and
in
jbe
or
aad
int
xchg
mov
jmp
push
jb
adc
add
cltd
add
xlat
sub
adc
jne
pop
movsb
jno
jno
pop
outsb
add
inc
jl
repz
data16
sahf
add
and
xor
ljmpw
sbb
mov
add
sub
repnz
aas
aad
insb
iret
fsubrs
mov
push
xor
jp
mov
add
mov
pop
into
add
out
add
xchg
in
mov
cli
inc
loope,pn
test
repnz
loope
xor
enter
sbb
lret
in
add
movsb
hlt
mov
add
pushf
dec
sbb
hlt
dec
cmp
mov
sub
outsb
jbe
push
add
jns
xor
add
push
mov
cwtl
jp
in
jo
xor
nop
add
add
adc
movsl
sub
push
mov
incl
lods
push
iret
sbb
push
sbb
xor
aas
sub
xchg
add
push
into
shll
and
in
add
iret
and
es
out
add
ja
pusha
inc
mov
add
jg
inc
popa
add
movl
les
lods
add
mov
sbbl
outsb
je
xor
ret
add
and
sbb
sub
adc
add
sti
lcall
xchg
sahf
inc
pop
xor
mov
and
movsl
xchg
pop
dec
add
push
stos
aam
iret
inc
ret
cmpsb
add
sub
stc
lret
ja
fldl
push
or
mov
cmpsb
sarb
bound
test
and
ret
jnp
sbb
gs
mov
and
aad
jbe
fdivrl
shl
les
xchg
arpl
outsl
addb
call
pop
add
inc
ret
pop
out
xchg
xchg
pushf
mov
pop
push
jmp
sahf
adc
or
es
test
hlt
cmp
adc
mov
push
insl
divb
mov
scas
pop
dec
bound
mov
lds
inc
sahf
xor
pushf
sub
or
add
mov
jns
fbld
aas
aas
je
pop
rcll
or
fildl
les
lea
test
mov
cmp
or
test
add
arpl
jge
add
cmpsb
call
cmc
scas
into
pop
and
gs
xor
arpl
add
daa
xorb
rorl
xor
jge
cmp
daa
push
cmp
sbb
aaa
fildl
sub
adc
sarb
test
scas
loope
add
int
mov
mov
sti
lret
incl
add
mov
xchg
shrl
jo
pop
mov
lods
jg
inc
dec
dec
popf
mov
outsb
jmp
add
lods
and
cmp
jae
push
and
lea
mov
mov
jl
fwait
imul
loope
xchg
les
cmpsb
pop
add
sbb
cwtl
movl
addr16
test
cwtl
sbb
pop
mov
nop
addb
mov
xchg
repz
iret
add
les
int
add
or
adc
mov
add
inc
cmp
in
repnz
adc
push
push
test
fistps
out
repnz
cltd
popa
lcall
bound
and
mov
add
sub
sub
add
fs
add
and
add
xlat
sub
aam
xchg
push
push
push
xchg
nop
jns
mov
cmp
add
mov
inc
push
shrl
rcrl
jbe
addr16
jg
es
pop
mov
dec
xchg
add
add
ret
jno
xchg
in
add
xor
mov
lods
add
pop
popf
pop
mov
pop
aas
push
push
xchg
jp
ljmp
jge
mov
push
insl
ja
fimuls
mov
imul
lods
add
into
adc
pop
or
push
roll
xor
lcall
push
inc
jg
jmp
out
mov
jle
mov
stos
fs
test
add
mov
xchg
jl
cmp
fildl
shrl
add
xchg
add
dec
add
mov
sarb
jle
add
lds
inc
rorl
inc
add
xchg
xchg
enter
mov
ret
lock
sbb
add
lds
scas
cmp
add
shll
jge
jp
cmpsl
aam
jb
add
mov
test
cmpsl
out
out
test
mov
add
ljmp
fmul
mov
add
repnz
adc
popf
xchg
int
loopne
hlt
add
sbb
xchg
ret
jno
mov
ss
sti
mov
subl
mov
mov
add
jb
jne
cmp
and
jl
mov
and
insb
cltd
jecxz
jnp
ss
int
sti
popf
fdivr
cmp
xchg
xor
leave
int
push
push
cs
icebp
movsl
push
repz
lds
test
add
enter
pusha
sbb
fistpl
jb
and
mov
xchg
fisubrs
add
ret
hlt
in
inc
xor
push
jg
add
mov
add
mov
mov
inc
push
imul
xor
and
sub
out
fs
add
cmp
lods
out
xchg
mul
sbb
push
cwtl
cld
aas
je
cmpsl
cmp
sub
dec
or
mov
fsts
fdivs
hlt
cwtl
out
ret
sub
insb
jnp
push
add
int3
adc
add
out
jo
cmpsb
dec
mov
mov
sub
sub
outsb
mov
lods
aam
dec
sub
jns
or
jne
cmp
test
xchg
sbb
icebp
sbb
or
push
add
add
adc
or
inc
loopne
and
sbbb
fmull
stos
xor
fstpt
iret
stos
ficoms
or
ja
scas
add
pop
call
xchg
insl
lret
pop
sub
jnp
push
aad
push
mov
cmc
test
add
sahf
jg
scas
add
or
notb
nopl
filds
or
inc
adc
adc
xchg
incl
or
mov
fsubp
jecxz
adc
rorb
scas
push
and
add
pop
jmp
mov
add
js
add
xor
nop
nop
xchg
xor
jge
sub
je
out
faddl
js
test
xchg
or
mov
ljmp
dec
jmp
adc
add
jno
dec
jb
add
jge
add
add
cmpsb
sahf
pop
cmp
jae
add
into
fistps
outsb
hlt
push
cmp
negl
fucompp
dec
jno
pop
and
jnp
les
es
push
movl
cmp
std
shrb
repnz
sbb
adc
cwtl
and
test
daa
gs
sub
pushf
fists
pop
aam
xchg
mov
jmp
pop
repnz
add
or
xchg
dec
add
cmp
add
fsubl
das
jns
data16
push
sub
dec
iret
or
xor
sub
dec
push
fwait
pop
mov
add
or
test
xor
push
mov
inc
call
hlt
jne
lods
jne
mov
imul
out
lods
out
out
test
inc
loope
popf
and
setp
inc
mov
add
xchg
ret
fwait
pushf
push
and
add
add
push
out
shll
push
jge
cmpsl
pop
cmp
sbb
inc
mov
mov
shll
rdmsr
stc
pop
pop
add
in
and
push
or
and
cmpsb
mov
add
inc
add
cmc
inc
sti
lds
dec
mov
add
add
lods
cmp
insl
popf
pop
stos
cmp
out
cs
mov
dec
stos
mov
jg
lret
inc
cmp
sub
test
iret
sbb
pop
add
inc
pop
pushf
dec
outsb
lea
add
jnp
sub
lea
insb
add
mov
dec
shll
dec
jbe
insl
pushl
pop
pop
add
mov
movsl
xchg
loopne
ljmp
out
stos
cmpsl
in
sub
cmp
imul
xchg
push
mov
insl
fcmove
rolb
ret
testb
jae
sub
add
ds
pusha
mov
sub
xor
push
in
sbb
inc
jp
add
dec
xor
movsl
sti
inc
cld
aam
into
icebp
lds
stc
daa
sbb
inc
or
mov
mov
mov
mov
or
mov
sub
sub
data16
fwait
pop
arpl
addb
add
stos
ret
add
sahf
daa
add
xchg
jmp
and
pop
dec
mov
pop
xchg
stos
add
inc
and
mov
sbb
add
movsl
mov
xorb
add
out
inc
and
cmp
test
std
stos
mov
cmp
adc
push
pop
add
arpl
mov
fdivrl
adc
std
or
mov
call
lock
sub
dec
str
insl
in
push
xchg
movsl
xchg
test
mov
add
inc
sub
out
xor
jp
mov
pop
add
add
dec
mov
xchg
icebp
ret
xchg
or
push
add
add
cmp
inc
add
mov
int
push
aad
ss
js
mov
bound
fisubrl
data16
adc
xchg
add
mov
outsl
pop
cmp
add
int3
add
inc
popf
adc
lock
pop
nop
ja
add
and
push
adc
aas
inc
or
xchg
out
shll
mov
call
mov
add
lret
mov
pop
pop
in
add
pop
mov
adc
mov
add
mov
aaa
mov
loop
jno
out
rorb
add
sub
mov
sti
pop
insb
add
lret
dec
out
test
pop
inc
add
cmp
out
jbe
sti
and
cli
xor
mov
and
sbb
shrb
inc
insb
rorl
in
lahf
dec
pop
aas
xor
jns
leave
scas
add
and
and
ror
mov
frstor
jae
push
stos
aam
lods
pushf
sbb
cmp
and
imul
lds
add
adc
add
cmp
sahf
xchg
lods
lods
inc
mov
fsubrl
test
outsl
lcall
xchg
push
xlat
pop
or
dec
add
outsl
pop
xchg
nop
addr16
adc
loopne
inc
xchg
icebp
out
mov
add
mov
imul
add
js
inc
inc
rolb
or
inc
sbb
push
inc
push
test
or
mov
push
and
cltd
aaa
ret
mov
jno
mov
pushf
push
jnp
sub
xchg
jge
mov
mov
test
cmp
in
pop
add
adc
add
add
lcall
mov
jns
lds
cmp
add
fcmovbe
sbb
inc
cltd
fcom
push
mov
mov
dec
sbb
add
jecxz
mov
mov
inc
js
sbb
add
je
int3
pusha
js
jno
lock
scas
xchg
jne
aam
adc
pop
out
cs
mov
jg
mov
andb
les
push
add
mov
pop
add
adc
mov
or
insl
sbb
movsb
iret
aam
add
sbb
gs
loop
fndisi(8087
rcrl
in
xor
add
ror
add
insl
fdivrs
lock
fwait
xor
mov
and
lcall
test
sbb
sbb
push
cmpsl
faddp
addr16
out
add
xor
cltd
insl
xchg
pushf
roll
iret
add
jg
scas
test
add
and
sub
mov
scas
push
inc
out
and
popl
add
cwtl
push
or
fcompl
inc
mov
mov
repz
inc
cmc
xorb
inc
add
xor
and
loope
mov
out
sbb
dec
pop
dec
aaa
push
or
pop
add
xchg
mov
shrb
push
outsl
adc
sbb
add
jne
mov
hlt
out
xor
scas
cmc
inc
aam
add
cmp
mov
or
popa
cld
fcoms
les
ret
add
add
in
push
xor
add
add
add
scas
dec
mov
add
subb
lcall
loopne
xor
decl
inc
and
std
xor
ret
pop
call
ljmp
add
std
sbb
mov
jp
xor
adc
mov
enter
scas
add
fistl
cmp
outsb
xchg
add
lea
xor
jmp
cmc
mov
mov
add
lcall
mov
sbb
out
les
xor
bound
jns
dec
mov
jg
sub
pop
in
mov
test
sbb
cmp
lret
daa
mov
ret
mov
rolb
nop
and
inc
icebp
push
jge
sub
add
cmp
xor
leave
testb
xchg
add
cld
lods
mov
add
or
mov
pop
inc
ds
or
push
icebp
dec
fucom
xor
add
dec
fsub
sbb
in
add
xor
pusha
add
ss
push
push
daa
add
add
push
add
fadds
lods
xor
arpl
ja
les
jmp
jb
mov
out
stos
enter
xchg
dec
sahf
pop
pop
add
pop
out
add
or
in
add
nop
cmpb
aaa
cwtl
arpl
dec
popf
outsl
push
jb
cmp
inc
xor
mov
sti
cld
fistl
stc
jnp
mov
dec
fiaddl
mov
incl
ret
add
les
dec
add
xorl
add
and
add
daa
mov
fcmovnbe
push
pop
push
push
addl
sub
cmp
push
jbe
mov
std
lea
mov
add
adc
jmp
in
add
test
out
mov
mov
push
xchg
pop
mov
xchg
jo
sbb
add
aas
jmp
cmp
popf
outsl
addb
mov
mov
rcll
out
xor
in
jbe
test
add
cmpsb
pop
sbb
pop
ss
shrl
rolb
or
cmp
aam
inc
scas
cmpsl
sbb
enter
mov
dec
push
cmc
dec
add
leave
add
push
or
inc
dec
stos
mov
sub
add
mov
stos
inc
daa
data16
add
test
jae
jle
cmp
mov
test
fcomps
outsb
aam
movsl
add
fs
xor
lock
js
imul
dec
inc
and
std
add
rclb
cmpsl
sub
outsb
adc
add
xchg
jb
and
cld
push
jne
es
pop
add
add
js
jne
jb
add
outsb
test
or
subb
je
jae
jno
push
loop
gs
cmpsb
iret
sub
in
add
adc
dec
ljmp
jnp
sub
xchg
mov
data16
mov
push
aam
mov
jo
xchg
xor
mov
xchg
je
xchg
or
ja
cs
cltd
ljmp
and
inc
sbb
sub
adc
add
mov
mov
dec
push
mov
imul
xor
adc
push
test
xlat
mov
pushf
daa
jp
aad
pop
add
mov
cmc
iret
lahf
mov
stos
mov
xchg
add
add
je
dec
int
push
ss
add
pop
test
inc
in
add
cmpsl
add
mov
repnz
pushf
pop
loopne
xor
or
lea
and
out
mov
lahf
xchg
das
lahf
stos
popa
cmp
mov
lods
push
push
jo
jne
add
add
add
mov
mov
add
mov
inc
aam
add
arpl
cmp
stos
jmp
and
mov
enter
fs
arpl
call
lcall
sbb
roll
cld
mov
and
hlt
lahf
mov
pop
in
mov
adcb
cs
or
stc
mov
xor
sub
pushf
cmpsl
mov
push
sbb
stos
push
xor
or
sub
test
out
cmc
mov
sbb
in
das
or
cmp
pop
add
clc
out
mov
push
sub
dec
push
xchg
rcr
jle
mov
daa
mov
lret
cwtl
cwtl
add
aaa
jg
jmp
mov
xchg
adc
dec
fisubl
movsb
cmovb
mov
jns
jp
icebp
nop
rolb
xchg
push
aam
scas
mov
push
popf
add
xchg
add
xchg
add
adc
out
jbe
cmpsl
lret
jbe
insb
sub
or
ret
pop
inc
sbb
cld
push
shrl
jl
data16
adc
and
adc
out
in
add
addr16
test
incl
mov
cs
add
mov
jle
movsl
cmc
lds
hlt
mov
adc
sub
inc
adc
js
add
idiv
movsl
fisubrs
add
outsl
jecxz
or
in
jle
divl
push
add
insl
adc
xchg
outsb
dec
ror
dec
inc
cld
jge
fcomp
add
cmpsb
jns
movsl
xchg
jmp
arpl
add
add
and
add
stos
addps
dec
adc
mov
add
lret
pop
inc
mov
inc
jg
push
add
in
xor
lods
dec
pop
push
xlat
add
xchg
cmpsb
push
sub
mov
jbe
jns
inc
add
mov
inc
mov
add
or
jg
pop
jp
mov
push
cmpsl
dec
ss
pusha
loope
les
imul
add
or
adc
lret
jecxz
and
push
and
inc
cli
loope
mov
into
es
push
ret
movsl
xchg
movsb
mov
add
loop
cmpsl
add
imul
jns
sti
jecxz
fstpt
mov
push
orl
mov
lret
ret
mov
pushf
xor
cmp
addr16
ljmp
cmp
fs
add
rolb
hlt
in
xchg
and
jno
push
out
iret
inc
movsl
jnp
pop
je
lret
cmp
insb
hlt
adc
xchg
in
insl
push
jb
lods
stos
sahf
cli
and
in
call
ficomps
or
inc
stos
mov
add
or
or
mov
mov
add
sbb
add
add
shrl
sbb
hlt
adc
mov
mov
pop
add
loopne
push
repz
add
sahf
and
push
les
or
mov
dec
loop
fucom
inc
insb
icebp
jle
ss
add
out
xchg
mov
jbe
pushf
data16
sahf
sub
scas
imulb
lret
inc
cmc
mov
dec
pusha
ja
inc
cmp
mov
test
cmp
mov
or
sti
sarl
sbb
ret
jns
loope
adc
leave
nop
cli
outsl
add
pop
call
hlt
and
jle
push
rcrb
outsl
cmc
push
dec
sub
mov
call
cli
pusha
sub
adc
xor
nop
sahf
testl
pop
dec
fcomps
test
sbb
push
pop
loopne
scas
sarl
ja
mov
pop
test
bound
shlb
pop
fwait
test
ss
cmpl
xchg
cmpsl
sbb
or
jp,pn
scas
xchg
jne
fsubrl
sbbl
mov
mov
sub
add
add
lret
lcall
mov
sbb
out
fwait
and
add
mov
call
adc
jge
scas
sub
or
sbb
xor
in
out
add
outsb
scas
adc
jno
cmp
adc
out
sti
fidivrs
rcll
cmp
cld
stos
ss
ljmp
hlt
scas
xchg
add
shlb
jb
xchg
dec
adc
and
sub
shrl
lcall
mov
repnz
xor
jge
mov
add
adc
fnsave
jmp
adc
out
notl
xor
hlt
add
pop
push
movl
add
in
cmpsb
sub
lods
cmc
or
pop
jp
je
and
js
rorb
rcrb
dec
mulb
stc
mov
insl
dec
adc
movsl
push
push
pop
stc
pop
cmpsl
sahf
mov
pop
lods
sub
iret
repnz
add
insb
aam
add
adc
add
push
pop
add
bound
addb
xor
clc
adc
dec
dec
push
popf
repnz
add
loop
rcl
out
movb
add
mov
add
loopne
jae
stc
sub
daa
add
or
scas
ret
adc
stos
adc
and
cmp
sub
mov
stc
dec
jb
xlat
into
sbb
cmc
cmpl
add
mov
int3
icebp
call
sbb
mov
adc
jb
lea
mov
or
cmpsb
jecxz
add
xor
daa
fnsave
sbb
add
gs
les
pop
icebp
add
out
outsl
popa
fscale
add
scas
cmp
push
and
movsl
mov
mov
adc
js
gs
mov
outsb
add
test
xchg
inc
lret
filds
and
xor
cmp
xorl
out
jno
shrl
xchg
pop
call
cmp
cmp
sub
cmp
push
daa
jecxz
xchg
fidivrs
inc
sub
ret
fsubrl
jb
mov
fdiv
in
mov
cld
bound
scas
xchg
fwait
sub
pop
sbb
cmp
subl
mov
xchg
and
xchg
xchg
mov
shlb
pop
lcall
fisttpll
adc
ret
dec
add
pop
add
negl
mov
add
jl
xchg
sbb
sub
add
add
mov
jl
pop
nop
add
xchg
xchg
imul
aad
loop
out
jo
push
sbb
add
xchg
iret
les
xchg
popa
jno
add
mov
out
jmp
xchg
pusha
adc
or
movsl
inc
add
shlb
lret
add
mov
add
or
add
xchg
add
push
lods
pop
mov
fiaddl
xchg
adc
pop
out
and
hlt
push
ss
movl
pusha
xor
jb
pop
out
jnp
push
sub
fstps
stc
xor
stos
nop
mov
adc
or
jmp
sarb
mov
fidivrl
mov
add
loop
xor
xchg
mov
ret
add
sbb
movsb
outsl
add
sub
lcall
mov
add
outsb
loop
popa
cmc
loop
dec
cld
test
xor
loop
fs
or
sbb
add
test
lret
fldl
movsb
cld
xchg
or
add
push
vpand
add
out
add
sahf
lock
mov
outsb
aam
jge
xchg
cs
inc
in
into
dec
dec
lock
int
pop
push
add
adc
sarl
aad
jl
xchg
fwait
mov
jnp
push
cmpsb
cmp
add
mov
xchg
mov
call
ret
movsl
out
es
push
enter
push
pop
inc
add
adcb
fiadds
lods
jnp
lock
add
xchg
nop
lds
shrl
push
in
les
and
pop
dec
ljmp
push
divl
js
ret
push
je
cmpsl
xchg
loopne
ret
in
xor
dec
xchg
pop
xchg
push
addr16
adc
inc
icebp
sub
and
push
insl
xchg
mov
adc
sbb
call
jns
imul
mov
mov
push
fsts
aam
fwait
add
dec
aas
rcr
add
sbb
add
mov
in
add
loopne
std
add
ror
mov
cmpsb
add
pop
sbb
jo
sahf
roll
pop
push
cmc
inc
add
mov
cmc
mov
mov
jp
dec
ret
sub
shlb
jecxz
cmp
add
out
mov
inc
jmp
aas
fcoml
mov
cmpsl
lret
pop
adc
add
rcll
sbb
ljmp
jmp
add
je
add
add
rcrb
mov
stos
testb
stos
sub
or
sbb
test
lret
rorl
add
test
add
movsb
or
xchg
push
jle
pop
add
in
xor
sbb
scas
ljmp
add
mov
mov
jnp
add
xchg
repz
or
add
inc
pusha
enter
mov
bound
mov
ret
add
push
mov
je
imul
fidivs
mov
dec
xor
add
insb
sbb
incb
lock
add
sbb
pop
jge
pop
push
cld
mov
ds
mov
das
insb
push
mov
add
fwait
in
ss
in
insl
sub
mov
adc
mov
and
mov
lea
iret
insb
cld
add
inc
clc
fisubs
adc
dec
cltd
sub
inc
fistps
sbb
xchg
xor
out
into
mov
ret
shlb
dec
dec
jno
mov
push
inc
mov
xchg
out
inc
push
mov
es
lods
add
pop
inc
fisttpl
loopne
push
out
int
or
mov
mov
jbe
repnz
mov
jle
mov
jmp
sub
xchg
or
cmp
add
cmpsl
negl
xor
sub
xchg
push
push
arpl
push
add
xchg
icebp
sub
add
cmpsb
xchg
fldenv
cltd
in
call
lock
je
loop
mov
mov
rorl
add
jbe
test
popf
popf
lahf
popf
cmp
add
ret
insl
xchg
sub
or
leave
int3
xchg
imull
aad
lahf
pop
bt
ret
push
push
mov
addr16
loopne
repnz
inc
sahf
addr16
ljmp
jb
push
nop
mov
outsb
ja
outsl
push
push
dec
add
push
add
inc
pop
icebp
pop
pop
icebp
jno
lahf
mov
ljmp
fcmovnu
ror
dec
sub
mov
cli
daa
jae
cmc
inc
xchg
mov
sbb
dec
mov
ja
ja
pop
pop
incl
cltd
mov
out
xor
int
mov
sbb
jne
sbb
loope
int
sub
movsb
pop
bound
add
adc
xlat
inc
sub
adc
dec
ret
jb
sub
aas
scas
stos
pop
or
lods
dec
jge
das
sub
das
add
dec
mov
out
cmp
pushf
add
rclb
push
push
idivb
fwait
lods
enter
nop
pushf
ds
in
inc
jns
gs
dec
lea
jbe
and
loope
stos
add
inc
mov
mov
pop
pushf
xor
xor
les
test
outsl
adc
lods
in
add
shrb
pop
sbb
pop
inc
add
and
jge
scas
jecxz
push
push
aam
test
andl
leave
add
orb
mov
in
adc
lret
jmp
cli
mov
lret
test
pop
dec
repnz
test
pop
xlat
push
adc
push
mov
add
es
jne
into
sbb
fs
and
mov
xchg
popa
jmp
or
cmp
or
jle
xchg
pop
or
xchg
mov
sar
ret
arpl
xchg
inc
je
out
mov
add
mov
loopne
into
sbb
mov
sbb
int
mov
add
or
jg
lcall
repnz
aam
ss
inc
xchg
stos
mov
push
gs
fucomp
push
sbb
les
loop
add
ret
out
cli
aaa
mov
xchg
js
push
pop
pop
insb
out
and
cmp
sbb
add
scas
scas
sbb
add
add
add
gs
cmc
in
mov
push
dec
aam
push
or
sbb
arpl
fstl
mov
mov
fwait
add
daa
pop
loop
adc
fildll
sub
sbb
push
subl
popf
notb
mov
fists
xor
jmp
push
jbe
push
mov
dec
test
or
mov
lods
jne
add
mov
lods
adc
clc
popa
imul
out
xchg
mov
pop
xor
add
inc
cmp
mov
add
negl
add
or
out
adc
add
or
pushf
add
xchg
mov
lcall
push
xor
out
mov
xchg
mov
push
cmp
pusha
pop
out
fbld
add
jp
ljmp
mov
add
and
jmp
in
inc
cmp
push
cmp
cmp
adc
sub
in
test
add
mov
clc
and
add
add
xchg
outsl
push
mov
xor
fs
lret
lds
jg
lcall
jo
sub
and
mov
and
imul
gs
fs
in
jge
popf
movsl
inc
mov
add
mov
mov
sbb
test
in
loopne
xchg
cmp
aad
add
add
subb
jnp
xor
cmpsl
popf
sbb
testl
dec
mov
shr
fistpll
dec
push
inc
adc
sbb
pop
xchg
sub
xor
pop
add
cltd
add
sub
cmp
test
ds
lock
xlat
and
mov
jmp
out
clc
sub
jno
iret
ret
add
cmp
pop
mov
imul
lods
leave
fistpl
adc
shll
insb
ret
scas
in
push
jns
out
xor
mov
jns
test
xchg
test
stos
dec
loop
cmpsb
sahf
xchg
gs
mov
pop
dec
xchg
mov
mov
push
mov
cmc
jp
repz
add
out
add
in
add
call
aam
lock
add
aam
jo
icebp
push
sbb
out
cmp
mov
or
mov
insl
sahf
cmc
addl
shlb
lret
in
repnz
sub
dec
adc
inc
xlat
hlt
add
add
scas
sbb
push
xor
and
dec
rorb
add
xor
push
and
and
inc
and
cmpsl
and
add
fldt
test
in
je
sub
ljmp
mov
bound
or
mov
dec
mov
mov
arpl
and
xor
fiadds
add
sti
add
pop
pop
jmp
xchg
fxch
mov
aaa
sub
aam
bound
dec
or
out
addr16
mov
mov
loop
add
adc
out
lret
push
and
add
inc
stos
fstl
xor
add
xchg
sub
xor
negb
add
mov
lret
in
inc
and
std
gs
in
add
jne
add
fsubrl
sub
loopne
mov
or
add
cmp
push
add
shlb
jo
sub
xchg
push
sbb
xor
imul
inc
pop
add
cmc
add
or
js
rcrb
lret
mov
ficompl
bound
std
fcmovu
adc
lcall
add
outsb
add
cli
and
insl
lahf
fisttpll
call
mov
adc
add
or
mov
out
rcrl
pusha
adc
add
inc
or
ljmp
jge
cs
add
inc
xchg
xor
repnz
cmp
push
mov
dec
adc
xor
sub
or
sub
dec
cmpsl
in
in
outsb
fadds
add
popf
add
inc
repz
and
dec
into
lret
sub
jl
and
add
pop
dec
adc
add
add
sub
sahf
sbb
in
jno
call
add
mov
ds
stc
jp
lds
test
inc
sbb
ffreep
mov
shr
cld
cmp
inc
pusha
pop
and
ljmp
push
repz
test
pop
bnd
push
in
cwtl
mov
lret
arpl
add
cmp
add
fildl
lds
or
add
add
ret
js
fcomi
adc
inc
stos
add
add
add
gs
inc
mov
mov
add
std
pop
pop
xchg
sub
leave
addr16
mov
imul
lea
arpl
dec
and
in
sbb
mov
mov
add
into
les
out
lods
push
add
stos
cmc
icebp
int3
add
movb
aad
lahf
and
mov
mov
addb
lods
mov
fdiv
mov
sarl
sbb
ss
or
adc
insb
lock
add
xchg
mov
das
jl
jo
pop
add
fstp
ficomps
daa
add
call
shlb
and
and
lret
aaa
shlb
or
dec
hlt
jle
testl
xor
test
enter
jmp
add
outsl
out
sub
shl
into
test
add
pop
xor
icebp
sub
fcmove
mov
lods
push
sarb
xor
scas
daa
jg
adc
negb
loop
faddp
xchg
xchg
pop
inc
push
in
stos
loopne
gs
mov
rcrb
pop
inc
lret
or
enter
pusha
push
dec
lods
cmp
aas
adc
aad
add
test
popf
mov
add
dec
jb
out
pusha
jecxz
cli
iret
inc
sub
add
mov
pop
iret
cmp
add
test
pop
xchg
cld
inc
cmpsb
lret
ret
lcall
xor
es
and
aaa
and
mov
mov
cld
stc
cmp
movsb
add
or
aas
fldcw
out
ret
mov
mov
fldt
jge
pop
inc
pushf
loope
pop
add
adc
loope
dec
daa
fs
scas
push
insl
orb
xor
add
mov
jne
mov
inc
sbb
add
movsl
str
xor
stc
ja
ss
fsubrs
jmp
add
inc
xor
negb
repnz
out
enter
adc
push
jbe
loop
adc
into
test
xchg
rorb
in
xchg
jg
lret
rorl
and
ljmp
push
add
arpl
xor
ja
add
xchg
cmp
mov
add
push
cmp
push
add
ret
std
jbe
fisubs
xor
addr16
push
dec
jo
mov
xchg
cld
inc
add
mov
mov
adc
sbb
add
cwtl
aas
in
add
add
jb
test
fistps
fnstenv
test
fiaddl
leave
dec
xchg
and
add
xchg
adc
cwtl
dec
pop
jge
cs
inc
or
and
icebp
pop
add
xchg
xchg
inc
ds
push
outsl
lds
mov
out
or
xor
sbb
fadds
cs
negb
add
pushf
push
xchg
xchg
inc
add
call
inc
mov
adc
ljmp
in
scas
and
adc
jmp
icebp
js
add
add
rolb
add
in
andl
dec
mov
xor
cmp
jns
add
add
lret
and
sbb
jecxz
lea
dec
fbld
add
adc
push
jmp
rorl
les
or
and
and
and
jl
add
add
lds
xorl
mull
pop
xor
add
ds
mov
into
je
pusha
mov
adc
and
mov
adcb
jae,pt
inc
out
inc
xchg
add
cs
mov
fwait
jb
mov
movsb
mov
sub
sbb
adc
and
add
les
cmpl
mov
or
jmp
inc
imul
push
mov
add
add
pushf
out
add
sub
ficoms
pop
cmovno
mov
add
push
stos
cmp
mov
hlt
out
sub
lret
addr16
js
std
fistps
pop
cmpsb
out
push
pop
mov
xchg
add
dec
pop
loope
pop
and
out
inc
orl
cmp
dec
pop
mov
mov
xchg
add
in
xor
or
shl
shl
and
rclb
aas
cmpsl
fcompl
push
inc
scas
dec
adc
sub
adc
popf
lods
xor
test
pushf
xor
lds
adc
push
xchg
addr16
les
ret
jcxz
xchg
enter
ljmp
shlb
out
hlt
lds
lock
inc
push
mov
fnsave
dec
mov
pop
cs
inc
pop
sub
xor
fwait
add
addl
cmp
fnstcw
pop
xchg
sbbl
popa
ljmp
cmp
jge
roll
dec
in
add
inc
dec
dec
shll
ja
mov
cmc
fidivrs
in
inc
rol
inc
add
add
repz
test
in
add
leave
subl
pop
and
add
pop
shl
fldl
add
hlt
es
dec
clc
sub
sub
enter
aas
inc
push
jge
daa
or
lret
push
mov
mov
lds
push
xchg
and
std
test
add
inc
cmp
outsl
std
lret
xor
call
jbe
or
xor
pop
jmp
cmp
pop
xor
es
add
in
xchg
push
bound
jno
add
fmul
lds
inc
jnp
add
movsb
cmp
dec
bound
test
out
inc
cmp
mov
add
je
pop
call
cwtl
xchg
cmp
imull
push
jbe
xor
out
and
mov
dec
fistpll
cli
add
pop
shl
add
imul
add
dec
jle
mov
inc
pop
add
and
das
fwait
mov
cmp
xchg
mov
adc
insb
xchg
xor
int
dec
inc
add
pop
add
pop
repz
sbb
or
sub
xchg
in
stos
pop
xor
add
sahf
add
jbe
fldt
dec
mov
xchg
add
repnz
mul
imul
and
and
nop
aas
add
es
dec
cmp
or
mov
sub
lahf
cmpl
inc
sbb
mov
fcompl
cmp
jnp
jl
das
push
xchg
push
and
xchg
xor
push
mov
jge
add
add
mov
out
add
add
test
cmp
aam
ss
dec
fisttps
aad
or
xchg
inc
mov
add
shlb
jb
xchg
xchg
jbe
xor
fiaddl
add
int
sub
leave
lcall
fsubp
fs
shrb
inc
mov
and
movl
pop
nop
jns
dec
pusha
add
outsl
push
pop
jge
data16
ljmp
xchg
or
andl
ror
add
or
decl
xchg
jo
loopne
mov
sbb
sub
cmp
sub
fistpll
jl
add
push
mov
xchg
sbb
rol
cwtl
add
fisubrl
rcl
loopne
mov
ja
dec
rcrl
xlat
pop
pop
scas
mov
and
cmp
movsb
popf
cmp
insl
jl
add
push
add
fstp
sahf
add
lret
movsb
sbb
pop
mov
lcall
add
mov
adc
add
inc
int3
add
mov
sti
add
add
imul
ds
and
fnstenv
mov
into
or
lods
in
pushf
xor
add
add
add
pop
adc
push
xchg
std
and
cmpsl
aam
add
or
cmp
mov
popa
leave
xor
and
mov
enter
les
mov
dec
add
cmp
mov
or
cs
aaa
push
xchg
arpl
fimuls
aaa
or
shl
mov
aaa
fdivl
aam
in
mov
mov
sub
add
inc
sbb
sahf
sbb
adc
test
add
mov
push
push
xchg
clc
push
lods
je
std
jmp
addb
push
mov
int
in
mov
adc
add
and
sbb
push
cwtl
outsb
add
xchg
or
add
inc
push
ja
jns
cmp
push
aad
test
add
inc
add
dec
mov
xchg
mov
pop
sbb
jg
or
cmpsl
cmp
xchg
stos
mov
nop
mov
arpl
inc
sbb
add
add
imul
lea
push
inc
mov
pop
jae
mov
popa
add
mov
repnz
fwait
aaa
xchg
test
dec
mov
ret
adc
int
add
movsl
mov
add
in
sti
mov
push
xchg
or
dec
das
stc
jge
jb
popa
out
mov
inc
arpl
cltd
xor
add
ss
add
arpl
test
jns
adc
xor
add
xor
jae
jne
adc
cmpsl
icebp
mov
push
xchg
sbb
ret
lahf
je
filds
push
mov
loope
pop
mov
xor
clc
add
mov
add
rolb
push
movlps
pushf
jo
insb
add
filds
pop
loop
xor
ss
out
push
mov
mov
push
ffreep
add
lcall
punpcklbw
aad
sbb
inc
or
imul
cwtl
jae
add
inc
flds
lods
add
test
inc
fucomi
divb
sbb
fwait
jno
sahf
das
add
inc
inc
clc
idivl
stos
call
lret
es
mov
aas
mov
cli
loopne
int
repnz
shll
call
adcb
lret
xor
add
pop
out
lods
or
out
mov
push
rcrl
or
out
and
cs
adc
bound
jg
in
ret
sbb
xor
jns
cltd
test
call
ret
shll
sub
addb
rorb
js
int3
dec
sbb
push
mov
mov
jecxz
mov
in
fcomps
xor
inc
inc
jnp
push
or
xor
test
iret
call
inc
inc
jns
inc
popa
js
add
xor
fisttps
push
add
xor
or
fstp
testl
add
jne
sbb
fs
add
repnz
aaa
dec
dec
aad
add
repz
add
inc
jb
push
icebp
cs
dec
adc
add
icebp
xchg
fildll
jno
outsb
add
inc
stos
add
mov
mov
jo
jno
or
jno
ja
mov
lock
dec
mov
pop
add
inc
dec
outsl
or
sbb
sub
test
xor
jnp
roll
cmp
pop
mov
push
lea
xchg
mov
xchg
insb
jb
dec
movsb
add
pop
adc
fdivs
std
mov
inc
and
push
sbb
push
dec
xor
add
add
jne
mov
icebp
add
sub
lods
je
lret
jecxz
push
ds
ret
adc
test
aam
dec
in
repz
test
ljmp
add
adc
scas
push
inc
mov
out
roll
add
cltd
add
add
jl
cmp
push
ja
das
rcr
cltd
adc
cmp
jmp
dec
inc
add
js
subb
mov
in
add
pushf
pop
mov
sub
dec
lods
lcall
mov
clc
add
mov
cwtl
xchg
subb
or
ljmp
push
jmp
cmc
loopne
loope
scas
lcall
add
popf
decl
icebp
add
and
std
shll
cmpsl
add
lea
pop
push
add
xchg
jnp
add
xlat
or
leave
mov
and
add
das
xchg
jecxz
sbb
mov
call
popf
enter
mov
sbb
pop
leave
xchg
cmpsb
arpl
add
jp
aas
idivl
xor
pcmpgtd
cmp
xor
mov
mov
movsb
mov
mov
and
ds
into
out
or
les
cli
sub
add
adcb
push
test
aas
icebp
adc
add
mov
hlt
dec
out
aaa
add
rolb
fbstp
mov
and
and
popf
and
mov
add
pop
add
xorb
fisubrl
jo
int
push
jle
loopne
inc
stos
add
fwait
xor
arpl
shl
shr
pop
push
js
cwtl
sahf
loope
adc
add
test
adc
mov
cmp
lods
jnp
inc
xor
push
pop
jno
pusha
mov
dec
inc
testl
mov
xor
sbb
xlat
xorb
js
xchg
sti
movl
add
sub
stos
jge
sbb
mov
jle
iret
das
mov
mov
lret
es
aam
jb
mov
mov
nop
mov
push
add
je
mov
adc
daa
popf
jno
pop
adc
push
cmp
jns
adc
ds
addr16
xchg
arpl
push
add
in
mov
test
sub
aaa
stos
and
or
xor
xchg
mov
test
por
scas
mov
mov
push
dec
inc
dec
in
popa
add
jne
pop
cs
cmpsl
add
push
stos
mov
loop
add
addb
mov
add
ss
push
ljmp
inc
mov
xchg
xor
and
popl
add
les
add
inc
in
sub
inc
verr
notb
jno
sub
mov
test
loop
call
add
aad
repz
int
popf
andb
ret
scas
push
sub
nop
ljmp
sub
repz
xchg
add
push
xor
nop
fnstenv
and
xchg
outsl
push
add
mov
jecxz
pop
movl
add
sub
std
loopne
mov
clc
out
add
cwtl
mov
out
arpl
scas
push
enter
add
jbe
mov
xlat
and
adc
add
pop
jecxz
repz
cmp
stos
push
mov
lock
testl
jo
xchg
pop
cmpsb
out
filds
push
mov
fldenv
pop
in
mov
scas
jbe
int3
lea
and
add
pop
filds
je
pushf
popf
emms
xlat
add
sbb
xchg
js
cmp
xor
rolb
jns
adc
pop
out
add
or
cmp
adc
cmp
add
xchg
jge
cmp
pusha
push
add
dec
push
xlat
std
ret
add
cmpsb
cmp
pushf
cmp
out
sbb
push
and
add
ja
out
push
and
outsl
mov
icebp
add
test
xor
ss
pop
pop
jg
stc
inc
insb
cmpsl
sbb
dec
pop
cmpsb
or
aam
add
adc
cmp
adc
sbb
add
leave
sbb
jae
cwtl
cmp
inc
pop
xlat
fwait
ret
mov
sub
call
and
add
insl
mov
dec
movsl
rorb
push
pop
movsl
xchg
ljmp
cli
lret
mov
insl
push
jge
mov
add
cmp
mov
mov
mov
imul
sbb
aam
sbb
xchg
dec
push
mov
pop
insb
sub
xor
imul
mov
push
xor
adc
mov
test
into
insb
add
add
mov
ja
push
fidivs
loop
pop
jne
push
push
ja
mov
jmp
cmp
add
filds
mov
push
xchg
mov
iret
push
push
pop
scas
mov
xor
icebp
imul
cmp
add
add
repnz
sub
fildll
jl
xor
mov
xchg
pop
xor
xchg
add
cmp
imul
stos
cmc
push
leave
mov
adc
cmp
add
add
sub
hlt
sarl
add
add
call
add
arpl
add
mov
and
dec
add
aam
orb
xchg
pop
test
test
mov
push
xor
mov
pop
adc
xor
addb
fidivl
xor
movsl
pop
fsubs
outsb
rcrl
adc
lods
mov
addr16
mov
cmpsl
push
gs
test
pop
xor
das
push
ret
int
std
add
sbbb
fcmovbe
les
in
and
mull
mov
cmpl
sbb
stc
push
or
add
rclb
pop
and
stos
inc
test
push
aaa
pusha
pop
xor
add
xor
test
lret
je
or
enter
out
push
xchg
int3
movsb
cltd
inc
bnd
add
add
mov
jl
dec
repnz
add
leave
mov
loope
mov
add
or
out
popa
mov
int3
mov
jbe
sbb
gs
jmp
push
lock
sub
lds
sub
xchg
int3
xchg
in
in
jnp
jno
jno
sbb
imul
jle
pop
stc
mov
jbe
or
xchg
mov
notl
test
sarb
xlat
cwtl
cs
mov
add
push
test
dec
insb
std
jbe
mov
sbb
dec
sahf
xchg
add
pop
loope
push
lock
jp
add
add
pop
hlt
scas
lea
clc
mov
add
push
mov
mov
pushf
cwtl
pusha
inc
mulb
push
stos
pop
xor
pop
aad
inc
clc
imul
cmp
fdivrl
daa
pop
adcb
cli
jmp
mov
push
inc
add
sarb
ret
dec
out
fidivs
add
inc
add
add
or
sbbb
fndisi(8087
pop
xchg
das
lret
stos
stos
add
inc
cmc
js
incb
sbbl
scas
bound
push
jae
test
add
push
add
and
add
dec
jns
into
xchg
add
sub
add
cli
or
vshufpd
lock
fcmove
jmp
outsl
mov
movsb
add
or
xor
push
push
sti
add
add
xor
add
ljmp
add
add
loopne
dec
add
imul
add
cmpl
aaa
iret
cs
fcmovnu
inc
cmpsl
jno
in
mov
imul
dec
push
jb
add
es
int3
add
stos
or
addl
sub
adc
sub
pop
lret
add
add
ja
mov
add
stos
push
je
or
inc
push
xchg
fmuls
cmpsl
ret
leave
ljmp
add
clc
es
push
sub
fsubs
inc
xchg
and
inc
mov
adc
popf
cmp
lods
imul
cmc
and
xor
fs
imulb
xchg
cmp
add
ja
add
or
hlt
lret
jb
ss
ret
inc
add
xchg
in
xchg
inc
mov
add
and
or
and
test
pop
sbb
les
mov
cld
xorl
pop
push
in
and
xor
int3
cmp
dec
daa
mov
and
cmp
in
jae
in
xor
mov
insb
clc
hlt
fcmovb
dec
cs
push
jnp
pop
je
and
mov
cmp
add
iret
push
mov
add
sub
lock
cmpsl
jl
icebp
add
sub
add
pop
mov
mov
mov
clc
xchg
cmp
inc
inc
mov
and
in
mov
syscall
xlat
leave
add
xor
and
xchg
add
roll
movsl
clc
shlb
cld
cmp
pop
pop
stos
sbb
test
inc
adc
pusha
add
jne
mov
and
lcall
add
add
mov
add
mov
pusha
scas
xor
ret
test
lea
mov
cmp
testl
adc
in
iret
pushf
cmc
add
sarl
inc
mov
pushl
scas
jb
test
rcr
push
pop
pop
adc
sarb
ret
xor
add
shufps
xor
and
or
dec
mov
outsb
xor
jns
in
bound
fdivs
inc
mov
pop
pop
pop
inc
add
mov
xor
pop
xor
mov
push
int
jmp
pushf
mov
add
add
or
push
jp
and
mov
mov
add
in
sub
push
in
fmuls
inc
int3
xchg
or
add
add
test
fldcw
hlt
adc
call
mov
mov
cld
xchg
mov
xchg
mov
pop
dec
xchg
repz
cmp
push
data16
out
stos
loopne
stos
repnz
ja
inc
das
imul
into
add
imul
sbb
fisttps
shlb
sbb
add
adc
add
movsl
leave
addr16
testl
aam
inc
and
aaa
loope
aad
mov
test
fistpll
adc
dec
sub
jae
insl
mov
add
and
sub
add
in
into
and
sbb
nop
mov
inc
lcall
flds
movsl
pop
gs
mov
pusha
mull
sar
cmc
dec
xor
orb
into
out
xchg
jmp
xchg
ficoml
loopne
jne
xor
sub
test
push
ja
scas
inc
inc
or
xlat
pop
mull
cmpsb
dec
inc
rclb
ds
stc
pop
ret
add
flds
push
mov
or
xchg
inc
xchg
lods
sahf
int
ljmp
cmp
inc
les
xor
cmp
iret
out
mov
orb
add
add
movsb
into
inc
call
or
inc
mulb
xor
mov
jecxz
push
or
push
add
test
jg
push
in
pusha
dec
cmpsb
add
scas
fidivrs
push
cmp
rolb
push
enter
in
aad
add
popf
test
fidivrl
dec
sub
mov
mov
sti
clc
add
lods
add
push
iret
mov
inc
pop
mov
add
mulb
mov
sub
filds
jmp
add
push
xor
and
mul
insb
rolb
and
popa
scas
pusha
add
pop
add
adc
push
les
xlat
inc
movsl
lea
in
out
sfence
push
mov
jge
mov
insl
or
sub
jb
mov
xor
cmp
xor
adc
gs
pop
push
add
push
cmp
leave
orl
sub
push
pop
loopne
push
jbe
jne
lcall
imul
nop
add
inc
push
add
rcll
fdivl
iret
adc
cmp
test
and
ret
ret
and
add
fists
mov
add
add
cmpsb
stos
cltd
test
mov
les
dec
mov
add
mull
xor
mov
push
fildl
xchg
mov
loope
cmp
add
inc
pop
cmp
out
inc
xchg
rclb
add
ljmp
add
popf
xor
sub
test
lods
int3
jns
mov
cmp
add
cmp
jno
shll
mov
call
or
or
xchg
add
xor
dec
lret
add
popa
js
sbb
fcom
sub
mov
adc
pop
ret
add
ss
pop
out
mov
dec
add
push
fadds
mov
lea
mov
or
add
mov
mov
out
push
add
pop
call
add
lcall
ja
add
mov
ja
push
add
test
mov
add
outsl
cmp
push
dec
out
push
add
mov
fmuls
mov
insl
add
add
rcrb
mov
call
rclb
sub
sbb
xor
inc
fadd
add
mov
mov
add
lods
jecxz
or
pop
add
xor
mov
stos
sbbb
and
cltd
lea
mov
cmpl
and
sub
leave
add
add
lcall
pop
xor
cmpsl
std
les
int3
sahf
fadds
add
mov
fcomip
add
stc
adc
pop
cmpsb
cmpsl
aas
stos
insb
inc
sub
leave
mov
and
lods
fistl
or
fidivrl
insb
jge
shr
lock
pop
push
xor
enter
and
add
std
add
aas
in
sahf
fcoml
popa
jns
int
cmpsl
pop
int3
not
mov
push
test
add
aas
lock
rcll
cmc
mov
xchg
addr16
lcall
or
mov
add
cmp
lcall
add
icebp
mov
sbb
jp
cs
add
lock
fs
rcrl
out
add
in
daa
cmp
add
lods
mov
stos
add
xchg
adc
loop
dec
stc
fwait
aaa
xchg
jecxz
xor
gs
int
mov
and
mov
push
fcom
call
ljmp
xchg
or
fistpll
subb
push
pop
mov
lahf
sub
fwait
dec
xor
jp
cmp
lds
jl
aam
faddl
ljmp
into
cmp
add
add
repnz
dec
push
or
cmp
add
addl
xchg
outsb
ja
call
add
dec
pop
xor
and
lahf
fwait
orb
mov
xor
pop
mov
jge
mov
add
leave
cs
sub
inc
pushf
jne
mov
je
into
push
js
stos
jno
ret
sbb
mov
repnz
sub
lcall
dec
fstpt
mov
dec
stos
xor
push
mov
movsl
xor
imul
mov
ss
notl
cwtl
bound
add
lret
sbb
aam
dec
mov
adc
xchg
push
xor
add
push
adc
data16
scas
jge
lcall
mov
mov
xor
bnd
adc
push
or
mov
sti
pop
xchg
adcb
mov
bound
sahf
sub
push
add
xor
cwtl
cli
cmp
scas
add
mull
xor
clc
pop
in
add
jle
sub
mov
aas
pop
inc
jno
sbb
mov
or
xor
jg
repz
jl
and
outsl
add
pop
xor
mov
pop
xor
inc
xchg
mov
es
jae
imul
fmuls
push
lods
xchg
data16
lea
rorb
fnstsw
mov
repnz
or
push
jp
lcall
mov
in
dec
xchg
xor
testb
adc
cmp
add
sbb
mov
mov
aas
pop
mov
xor
in
push
insl
fildl
dec
out
aad
inc
stos
call
sbb
int3
dec
gs
push
pop
mov
daa
jae
add
xlat
loopne,pn
push
xchg
or
int
lret
test
pop
inc
in
xchg
ret
jo
popa
xchg
mov
sbb
xchg
cmpsl
je
andb
lret
xchg
nop
xor
lahf
xor
cmp
ja
ja
sbb
movsb
sbb
mov
mov
inc
mov
repz
and
sbb
cwtl
clc
dec
and
add
cltd
fnstsw
jle
arpl
insb
add
mov
or
adc
leave
sub
outsb
cmpsb
mov
jmp
stos
divb
repnz
adc
ret
cmpsb
add
sbbl
xchg
dec
ret
shll
push
icebp
jle
lds
push
sti
xor
mov
nop
imul
xor
xlat
daa
scas
js
add
ds
daa
jns
push
test
sbb
adc
add
pop
cmp
cmp
pusha
pop
scas
cs
push
xor
xchg
dec
loope
scas
inc
cld
outsb
xchg
xchg
mov
xlat
test
xchg
fildll
cltd
out
iret
and
or
div
xor
push
sarl
pop
add
cmc
popf
arpl
outsb
ljmp
xchg
add
xor
es
mov
xchg
jo
pop
push
mov
xor
mov
and
hlt
je
add
mulb
loop
push
hlt
ja
sahf
ret
test
packuswb
outsb
inc
aaa
mov
into
ret
pusha
add
in
mov
sbb
mov
xchg
fimuls
pop
add
mov
dec
pop
repnz
jae
test
fisttps
loopne
ret
es
xor
cltd
jp
xchg
cmp
mov
dec
sub
sbb
imul
pusha
leave
mov
into
xor
add
add
mov
popa
fs
insb
jb
push
push
aad
add
add
fmull
test
arpl
call
rcr
xor
dec
arpl
stc
pop
dec
xchg
push
add
xor
xor
arpl
and
xorl
lods
jns
fisttpll
dec
shrb
into
xchg
mov
jno
andl
sbb
add
dec
ja
in
xchg
or
mov
dec
aas
add
xor
adc
in
mov
cmp
sub
mov
sahf
mov
sbb
gs
fcmovne
push
out
xor
cmpsb
add
popa
push
dec
xlat
push
add
ds
aad
adc
enter
mov
lret
test
and
jnp
add
add
rolb
sub
or
test
push
add
pop
mov
and
icebp
addb
testb
in
leave
fldt
repnz
fwait
pop
adc
movsl
sbb
in
xchg
add
rclb
dec
int
les
add
xorb
in
call
push
rolb
add
xchg
sub
adc
mov
cmp
loope
cmc
sub
daa
out
orl
add
leave
and
push
dec
jg
scas
aas
clc
inc
pop
incl
sahf
pop
pop
or
xchg
clc
aam
mov
and
sbb
and
push
je
jns
add
sti
xchg
enter
imul
and
cmpsb
test
jbe
loope
daa
fst
add
xlat
add
sbb
add
lods
dec
lock
test
push
sahf
arpl
inc
add
ds
and
adc
pop
jp
loop
cltd
push
and
xchg
into
mov
dec
gs
nop
xchg
insl
adcl
adc
ficoms
out
xor
punpcklwd
add
lods
mov
cmp
scas
iret
push
imul
out
add
in
mov
mov
push
lret
mov
add
or
sub
cli
out
insb
push
out
sbb
or
pop
adc
jmp
inc
lea
pusha
out
cmp
or
mov
xor
pop
test
sahf
cmc
inc
sub
rclb
or
outsl
push
lods
std
push
cmp
push
dec
ss
xor
add
cmc
enter
mov
sub
xchg
adc
pop
stos
and
mov
or
mov
mov
or
xchg
in
add
and
xor
cmp
jb
or
rolb
fnclex
cmc
out
adc
mov
pop
push
xlat
in
insb
sub
jb
daa
adc
std
or
out
xchg
cmp
lods
pushl
mov
movsb
dec
jl
cmp
clc
sbb
push
lds
loopne
inc
mov
sub
adc
cmp
mov
dec
mov
mul
add
push
push
cmp
test
and
ja
es
pop
mov
xor
push
jl
cld
mov
clc
mov
xchg
cwtl
fwait
add
enter
mov
ret
test
or
icebp
dec
movsb
mov
add
les
outsb
adcb
bound
out
inc
out
outsl
out
shlb
pop
scas
jle
push
sbb
jns
xor
mov
jp
das
lods
jp
or
filds
mov
jge
cltd
mov
add
out
clc
cmpb
adc
add
pusha
lock
repnz
adc
mov
and
mov
pop
xchg
ja
fmull
fwait
jecxz
lcall
add
mov
jle
push
dec
add
xor
aam
jo
mov
in
xchg
adc
adc
add
repnz
aaa
add
movsl
lcall
jmp
cmp
cmp
jl
je
add
xor
add
push
inc
and
inc
lret
stos
and
fisubl
add
lods
xchg
mov
jne
xchg
add
add
popf
dec
out
pop
sub
push
mov
and
aad
jne
add
data16
push
sub
sbb
add
mov
incl
add
jp
nop
add
jnp
add
or
pop
out
mov
pop
or
je
call
paddsw
inc
xchg
std
jl
or
add
jl
sti
add
mov
shrb
pushf
dec
and
shll
popa
push
jno
xchg
pop
jnp
xchg
mov
js
lea
imull
xchg
fcomi
pop
nop
push
add
dec
ret
mov
add
push
mov
pusha
sti
filds
sarl
xor
jo
sahf
mov
add
sub
add
push
add
add
jle
mov
pop
cmpsl
ret
lret
ds
iret
cli
inc
lahf
ds
xor
pop
ror
roll
test
add
sbb
test
fisubl
faddl
iret
ja
jl
sbbb
ljmp
sbb
loop,pn
jle
pop
jnp
dec
mov
in
add
xchg
js
fsts
fwait
push
cmp
xchg
lds
ss
repnz
fmuls
cli
add
xor
test
addr16
adc
sbb
bound
out
cwtl
jnp
add
sbb
addr16
aas
test
inc
push
aad
movsl
add
gs
jno
filds
rolb
add
mov
jge
or
mov
js
xchg
xlat
jp
xchg
inc
sub
jmp
arpl
fldenv
cwtl
cmp
clc
add
mov
ljmp
lods
cld
jns
sub
std
add
mov
push
dec
fsubrs
or
add
pusha
jns
mov
mov
fisttpl
cli
pusha
mov
mov
ja
dec
xor
mov
push
inc
addr16
dec
dec
add
divl
lcall
or
divl
push
fbstp
mov
inc
lahf
call
dec
stos
pushl
data16
fsts
sub
pop
sub
cmp
lds
icebp
call
xlat
add
daa
push
dec
add
add
or
sbb
xor
aas
aam
popf
rcll
xor
adc
lods
or
add
daa
push
fcom
ss
imul
mov
in
adc
stos
and
push
and
xchg
lods
add
add
les
jecxz
das
pop
test
fcmovnb
fstps
fsubs
in
imul
stos
sbb
js
xchg
or
fdivrl
dec
adc
add
xchg
add
iret
mov
inc
add
dec
out
outsl
ljmp
fisubrl
addr16
in
or
mov
mov
xchg
and
lods
aam
mov
in
pop
into
pop
aaa
inc
add
cmp
cmp
rcl
and
push
adc
dec
xchg
leave
push
shll
hlt
scas
mov
sahf
inc
cmp
rolb
push
iret
mov
addr16
loope
pop
mov
and
rolb
loop
cmpl
add
dec
push
xchg
jl
mov
mov
scas
or
out
outsl
and
aad
jo
xchg
loopne
inc
push
fimull
add
xchg
xor
test
inc
jp
repnz
jge
xchg
cmpsb
dec
add
jo
add
cmc
bound
push
out
enter
dec
mov
test
jmp
add
pop
iret
add
pop
xor
fucomi
sahf
mov
shll
test
add
add
fs
xchg
lahf
mov
jecxz
enter
mov
inc
jo
lcall
mov
sub
xor
xchg
add
mov
adc
push
mov
and
jmp
push
push
movsl
mov
jle
popf
sbb
sub
adc
repnz
scas
inc
aad
adc
jge
xor
ss
les
mov
xor
fcmovnbe
jg
jne
jge
add
shlb
push
mov
cmp
xlat
mov
add
mov
sub
ficoms
outsl
jle
cli
test
outsl
mov
mov
xor
lock
mov
add
sbb
les
ja
pop
in
pop
mov
test
lcall
cmp
lcall
or
dec
test
push
pushaw
and
inc
cmp
push
pop
mov
add
loope
scas
aaa
add
out
mov
arpl
add
stos
or
xchg
iret
int3
outsl
repnz
daa
push
adc
adc
fiaddl
push
mov
clc
lea
clc
int
fldcw
scas
mov
jmp
out
test
divl
and
mov
movsl
test
xor
shl
pop
push
adc
add
js
sarb
jge
gs
add
data16
xlat
lcall
push
sbb
sbb
sbb
dec
push
add
cmpsb
sub
in
xchg
push
jg
mov
add
cmp
jno
fbstp
sub
popl
pop
add
add
aaa
pop
add
or
xor
sbb
jbe
adc
scas
inc
pshufw
pop
ficomps
adc
push
add
mov
pop
outsb
cmp
aam
f2xm1
jl
fldl
add
push
cmpsl
push
jp
cmpb
cwtl
dec
repz
mov
imul
shll
push
xchg
mov
add
pop
lea
in
jg
pop
xor
aam
mov
or
repnz
xchg
in
iret
add
faddl
out
fisubrl
mov
mov
mov
sub
insl
test
or
mov
sahf
outsb
push
inc
pop
out
add
mov
int
aas
mov
add
andb
movsl
scas
mov
pop
pop
mov
shrb
je
into
mov
in
lret
jno
xorl
pop
sarb
xor
aaa
dec
xchg
fbstp
fcoms
sbb
addr16
push
lret
push
add
xchg
mov
add
cmp
lahf
cmp
mov
pop
xchg
cltd
shr
sub
add
outsb
push
add
sub
lock
mov
add
cmp
dec
add
adc
sub
and
xor
pop
add
popf
jl
push
push
push
jecxz
jbe
add
scas
pop
shlb
jmp
sub
add
insl
popf
aam
and
cli
push
lea
fmuls
sub
jg
jno
call
fcoml
enter
scas
or
popa
jnp
add
addr16
xor
jecxz
loope
and
jnp
rorl
jge
fcomps
sti
mov
push
sub
add
jle
iret
mov
jns
test
xor
jne
push
sub
movsb
into
lea
add
mov
int
and
cmp
jmp
or
sbbl
add
daa
mov
sbb
leave
fidivl
dec
jne
test
cmp
dec
loope
add
add
add
ss
mov
add
add
mov
mov
pop
mov
dec
stos
sub
add
jne
mov
cmpsl
add
lret
lea
or
mov
mov
sub
add
add
insb
repnz
fstps
ret
jge
xchg
testb
jge
add
aaa
js
sub
and
push
add
aam
sub
adc
pop
xchg
aad
jmp
xchg
sbbb
push
test
lcall
psrlq
inc
leave
cltd
sbb
add
into
mov
or
add
mov
ljmp
shrl
jno
loope
dec
test
bound
js
add
icebp
aas
loopne
push
lahf
movsb
lods
inc
add
or
mov
add
cmpsb
cmpl
repz
xor
lock
out
sub
xor
je
and
mov
pop
cs
lcall
pop
cmp
add
push
loop
hlt
jmp
data16
push
or
add
push
popa
add
fwait
sub
in
mov
fsub
dec
addl
adc
xlat
push
mov
dec
xlat
cmp
lcall
jne
jo
ss
outsl
xchg
aas
push
setle
mov
xor
movsb
sbb
fmul
mov
push
and
sbb
sbb
and
mov
out
inc
popa
fmuls
add
sub
adc
dec
test
add
in
iret
mov
or
fs
add
rol
add
subb
insb
add
insb
jns
add
lahf
xor
xlat
rclb
cmp
js
call
rolb
dec
outsl
inc
inc
jns
cltd
xchg
add
aaa
sub
rorb
ljmp
xchg
xchg
out
flds
cmp
pop
or
dec
cltd
add
jg
sub
out
scas
dec
cmpb
jno
add
pop
xor
mov
add
xor
sar
xchg
push
mov
call
pop
enter
testb
mov
rcrb
push
dec
add
push
add
repz
cmc
xor
dec
xchg
sti
rcr
rorb
xchg
fs
cmp
push
in
add
sub
and
xchg
inc
sbb
mov
leave
mov
inc
sbb
ret
lret
add
add
adc
sub
das
xchg
dec
repnz
stos
imul
jo
mov
sbb
iret
or
shrl
movsb
adc
sub
outsl
outsl
aaa
in
int
lods
push
jae,pn
push
xor
ds
sbb
jle
and
add
push
sti
xlat
mov
dec
and
add
pop
incl
cwtl
aaa
sbb
mov
inc
imul
cmpb
add
testl
add
pop
inc
imul
sti
fldl
add
add
cwtl
inc
lcall
cld
std
enter
inc
negl
mov
jge
loopne
mov
inc
lret
jp
push
mov
sbb
sti
jo
xor
add
mov
pop
enter
add
jae
mov
xchg
fldl2t
add
and
xor
sub
cmp
repnz
out
cmc
dec
mov
sub
loop
in
sbb
mov
or
adc
pop
adc
lret
ljmp
sbb
pop
add
mov
add
add
and
hlt
pop
add
cs
push
sub
adc
add
xlat
xchg
shll
sarb
push
aas
mov
dec
lock
shlb
inc
in
mov
push
adc
xchg
sub
mov
mov
push
jae,pt
mov
imul
xlat
mov
test
in
add
xchg
aam
repz
push
or
mov
push
fwait
xor
push
je
mov
mov
mov
add
scas
cmc
xchg
stos
xor
add
jecxz
out
push
dec
adc
adc
int3
and
add
mov
mov
and
shl
add
add
loope
sub
sub
sbb
rolb
dec
or
insl
test
xchg
orb
pop
ror
inc
sbb
addl
test
push
push
scas
add
sahf
jns
or
add
xchg
push
push
jmp
fisttps
push
inc
and
xchg
xchg
add
xor
xchg
push
lahf
popf
pop
pop
inc
and
popf
push
pusha
jp
rcrb
lods
add
push
mov
cmp
cmp
mov
pusha
xchg
jae
and
sarl
cmp
das
add
jb
sbb
clc
dec
ja
add
xchg
je
cmp
push
xchg
movsb
add
dec
xcrypt-ofb
cmpsl
stos
cmp
lods
xchg
xor
les
les
push
lea
push
nop
mov
imul
shrl
adc
cli
ja
loope
fidivl
jge
jnp,pt
cmp
jle
into
fidivs
movsl
inc
mov
out
gs
push
imul
xchg
cld
push
mov
jno
add
add
sub
and
adcl
fdivrs
mov
or
xchg
adc
dec
sldt
lock
andb
js
inc
lods
test
in
out
sbb
adc
dec
add
fsubl
add
push
jo
sbb
adc
jae
pusha
jnp
add
loopne
xor
jns
add
mov
sub
cmp
stc
push
lcall
add
gs
shrb
adc
mov
xor
cmp
test
xchg
gs
mov
movsl
push
xchg
fadds
faddl
scas
dec
cwtl
cmpl
lods
std
jno
aam
lods
lret
jb
bt
sarb
fwait
addr16
mov
sbb
and
int3
incb
pop
fcomp
call
inc
adc
jg
sub
icebp
jns
add
add
test
loop
push
ljmp
and
or
mov
xchg
popa
pop
sti
icebp
add
pop
in
sub
js
imul
mov
add
sub
sbb
mov
mov
mov
int3
xchg
add
cmp
add
push
add
mov
add
daa
roll
add
pushf
repnz
add
test
scas
xor
adc
add
fsubs
pop
sub
or
add
and
fsub
add
stos
rorl
pusha
ljmp
shl
lds
jo
sub
or
jns
xor
mov
test
mov
dec
mov
xor
and
mov
loop
push
push
xchg
xor
shrd
jp
leave
negb
add
inc
sub
pop
push
in
inc
movsl
mov
xor
add
test
add
add
mov
pop
test
xor
and
jmp
jmp
add
mov
cmp
iret
dec
mov
scas
add
cltd
in
popa
add
or
sub
inc
stos
fdivrl
fnstenv
lds
mov
out
in
shl
out
xchg
pop
add
push
fldenv
cltd
popa
cmc
rorb
rolb
out
add
cltd
mov
scas
jl
mov
jb
imulb
icebp
out
add
popf
fmuls
xor
sti
out
imul
xchg
push
icebp
cmc
fidivs
mov
mov
dec
add
daa
sti
das
and
shlb
add
mov
loop
insb
jns
jmp
inc
cld
add
insb
xor
sbb
mov
loop,pt
add
test
jl
jne
leave
cltd
jge
xor
imul
aad
and
das
xchg
or
ja
jmp
lret
cmp
rol
into
add
loop
int3
decl
movsl
loop
lods
mov
xor
adc
cmp
add
hlt
movsl
pop
dec
ds
in
jbe
js
xor
subl
add
jp
jp
cmp
sti
pop
push
ds
jne
outsl
mov
or
test
sbb
mov
fs
sahf
shll
xor
ja
pop
mov
fs
add
add
jmp
leave
sub
rorb
shll
jae
rcr
add
cmp
add
mov
fildll
icebp
or
test
add
js
pop
jbe
ss
mov
scas
ficomps
dec
cs
arpl
adc
jl
xchg
out
inc
ja
jne
fildll
jne
pop
push
ds
adc
repz
stos
out
jmp
fldl
lret
xor
cmp
clc
and
jle
mov
fwait
push
filds
lods
mov
cmpsb
push
mov
mov
pop
add
and
or
movsl
andl
push
out
add
lods
lret
jp
adc
or
mov
pop
sbb
xchg
cmp
jecxz
imulb
cli
push
stc
push
pop
cld
cmc
popf
sbb
jecxz
stos
imul
add
divl
daa
aam
mov
arpl
sub
out
jno
add
add
xchg
add
jg
xor
ret
fildl
movsl
and
and
test
and
jno
sub
xorb
pop
or
jo
sahf
outsl
dec
jbe
dec
mov
fbstp
jmp
mov
loop
add
jno
push
ret
inc
add
pop
push
outsl
xchg
jg
cltd
push
inc
cmp
enter
cltd
dec
je
add
inc
arpl
xchg
loopne
jo
jae
das
add
inc
and
add
mov
shlb
cld
stc
add
jo
insb
dec
mov
outsb
dec
ret
xchg
mov
cmpsl
sbb
adc
insb
ljmp
mov
dec
mov
ret
jne
jbe
arpl
adc
or
in
push
std
aam
jo
lret
jne
sbbl
sbb
pop
push
repz
sar
pop
mov
out
add
adc
call
push
jae
xchg
sahf
das
fs
shlb
mov
push
add
cld
add
lds
repz
sbb
mov
jp
repz
jle
aam
std
shrl
sti
movsl
leave
mov
repnz
mov
out
dec
movsb
xchg
lock
mov
scas
push
and
xchg
lock
cmp
add
jecxz
je
add
xchg
add
scas
sub
repz
jbe
xchg
fcmovnu
or
xchg
and
out
adc
fimuls
xor
test
mov
dec
mov
cmc
mov
into
lret
lds
sti
push
jmp
popa
lret
or
xor
int
stc
add
insb
or
pcmpgtd
inc
fmull
or
clc
or
dec
mov
add
add
into
cmp
movsb
in
xchg
hlt
add
push
mov
cmp
mov
scas
test
insl
orb
xor
adc
or
dec
or
ficoml
js
ja
incb
mov
aam
lds
mov
dec
mov
unpckhps
and
add
and
push
dec
aas
pop
add
dec
dec
stc
pop
add
ss
cld
dec
out
rolb
or
mov
cmp
lock
xor
jnp
jbe
dec
sbb
sahf
cmp
inc
pop
adc
xchg
add
dec
daa
lcall
loopne
inc
and
out
sub
pop
cmp
add
add
and
jecxz
xchg
dec
imul
shll
stos
sub
into
mov
cli
sbb
lss
sub
jo
pop
sarb
aaa
push
jg
enter
inc
fisttpl
push
out
mov
imul
pop
jecxz
scas
add
mov
adc
cld
ret
xor
nop
add
inc
imul
mulb
aad
pushf
and
pop
lds
adc
rcll
fcmovb
cwtl
je
push
adc
call
mov
add
cmpsb
or
mov
into
bound
or
cmpsl
ja
jg
mov
in
ret
lds
ja
std
loope
incb
add
mov
mov
data16
sbb
test
push
hlt
mov
and
inc
push
ret
jae
insl
add
dec
add
jl
lahf
adc
repz
sbb
cmp
xchg
lret
xor
add
xchg
shl
add
or
ljmp
roll
jb
in
mov
inc
add
inc
cmp
lahf
fnstcw
xor
scas
add
jmp
stc
dec
pop
dec
imul
mov
and
fnstenv
cmc
fcoml
pop
orl
xchg
sbb
pop
shl
add
mov
repnz
mov
push
mov
idivl
imul
cmpsl
jp
jl
dec
andl
ds
adc
test
and
add
addb
mov
push
xor
jmp
or
scas
or
xlat
les
lds
jl
xchg
mov
cmp
inc
and
fists
pop
jmp
filds
inc
push
addb
adc
sub
dec
add
pop
aad
int
cltd
cmp
cmp
sbb
adc
mov
jbe
dec
add
dec
stos
xchg
jp
pop
push
lret
pop
add
pop
xchg
sub
add
stos
add
fsub
xor
dec
call
lds
ljmp
aad
sub
pop
inc
xchg
insb
imul
mov
daa
fcoml
jnp
popl
stos
sub
mov
dec
ret
sbb
mov
mov
scas
push
xchg
test
xlat
cmovne
add
xchg
add
fisttpll
std
sub
test
fldenv
sub
flds
xchg
xchg
fimuls
add
mov
fmuls
adc
sahf
mov
dec
push
mov
cwtl
push
pop
or
add
and
mov
xchg
data16
call
dec
sbb
mov
and
cmp
mov
jp
add
imul
add
mov
out
pusha
xchg
xor
addl
fst
test
inc
pop
adc
push
xor
ds
insb
add
sti
adc
inc
add
xchg
inc
and
mov
mov
xor
push
mov
rorb
popl
ret
push
add
lcall
or
dec
jns
lods
mov
dec
jbe
out
stc
fdivrs
sbb
inc
sub
mulb
rclb
add
cli
shl
roll
jp
nop
je
fcoml
jge
pushl
pop
mov
sub
data16
mov
cmp
jne
testb
out
movsl
dec
mov
ljmp
das
loope
mov
clc
mov
fdiv
sbb
scas
mov
add
pop
jne
scas
imul
sbb
jge
roll
int
mov
add
inc
add
and
cmp
xor
aad
inc
ss
ror
call
and
sub
fs
mov
hlt
popf
add
inc
sub
addl
add
cmp
fsubrl
jb
stc
and
xchg
test
icebp
test
and
dec
xchg
mov
addr16
lret
sub
loopne
push
fs
sbb
je
sbb
call
in
mov
add
pop
add
sbb
hlt
and
sar
pushf
shrb
loopne
pop
xor
into
jbe
sbb
mov
add
cmp
loop
into
pop
hlt
add
daa
push
add
scas
adc
iret
fbstp
pop
imul
mov
rcr
add
int
add
hlt
ljmp
adc
mov
daa
add
js
hlt
das
add
dec
jo
pop
pop
jnp
mov
sbb
xchg
into
stos
js
aad
dec
in
add
add
imul
mov
loop
mov
add
test
aas
and
pop
fistps
test
or
add
sti
arpl
ret
lahf
sub
js
sti
cmp
ja
bound
xchg
cmc
sbb
leave
sub
sbbb
xchg
mov
inc
lods
mov
add
add
movsl
lock
enter
mov
mov
or
jge
xchg
add
cmp
inc
xlat
jl
cmp
pxor
mov
push
cmp
lock
cmp
rorl
pop
xor
and
jmp
repz
out
inc
push
loopne
inc
pop
bound
je
aas
pop
dec
push
mov
push
inc
dec
xlat
je
and
jmp
add
fsubrl
stos
out
jmp
pop
call
test
xchg
add
fadds
add
fadds
mov
cltd
fidivrs
loope
je
lret
add
adc
sbb
add
cwtl
inc
stos
add
add
sub
out
sti
lods
insb
loop
ficoms
pusha
popf
cmp
xchg
mov
stc
jl
leave
pop
sbb
add
and
rcr
sbb
stos
loope
add
pop
js
sbb
add
js
dec
flds
daa
mov
clc
adc
pop
add
lock
xor
scas
jmp
mov
add
rorl
in
dec
pop
push
dec
sbb
test
mov
inc
mov
pop
in
pop
popf
fdivs
cld
mov
aad
fucomp
aad
arpl
insl
add
insl
add
add
add
cmp
mov
or
cmp
add
sub
in
mov
xchg
jle
and
lods
jnp
mov
shl
sbb
add
jle
sbb
mov
xchg
ret
jbe
dec
bound
add
lret
ror
jmp
adc
xor
and
aaa
add
mov
push
or
mov
insb
fdivs
pop
inc
ljmp
cltd
cmc
pop
mov
fidivrs
aas
xchg
scas
sbb
cmp
jmp
fwait
popf
pcmpeqd
add
pop
outsl
or
mov
loop
ds
add
and
xlat
gs
add
mov
repz
pusha
test
jbe
xchg
sub
jg
sbb
aas
add
add
add
mov
rcl
popa
sub
dec
adc
sbb
xchg
ret
loopne
or
daa
andb
add
mov
add
pop
jg
in
jno
dec
mov
lds
pop
inc
mov
jb
cmc
ja
fildl
adc
adcb
jb
lds
ljmp
add
sar
ror
loope
pop
mov
add
and
popf
push
scas
cmpsb
add
xor
jbe
pop
fistpll
iret
inc
pop
out
jnp
loop
incl
fwait
sub
mov
ret
cmp
movsb
add
mov
shlb
sub
cmp
nop
add
int3
insl
add
jns
mov
loopne
frstor
sbb
add
ljmp
bound
sub
fstpt
xchg
mov
ret
loopne
and
cld
cmp
sahf
scas
mov
push
jmp
repnz
and
add
add
repnz
mov
adc
xorps
add
push
mov
inc
add
jne
push
fmulp
int3
fcmovnbe
lcall
icebp
or
arpl
add
adc
sbb
clc
les
mov
xorb
or
cli
mov
ret
add
pop
call
mov
add
add
pop
rolb
icebp
pop
mov
mov
in
cmc
and
pusha
out
add
inc
movsb
inc
add
aaa
fwait
and
loopne
into
mov
lret
inc
adc
adc
mov
imul
or
jno
adc
jo
ds
sti
dec
cmp
shll
fistl
jp
cwtl
mov
mov
add
stc
jo
push
add
and
addb
sarb
nop
xchg
mov
pop
add
out
mov
cmp
add
add
xchg
push
xor
stos
add
in
fs
add
add
lcall
xchg
or
mov
lret
aaa
insb
pop
sub
cmp
cmc
adcb
mov
orl
jmp
add
and
jnp
popa
in
inc
add
xor
sbb
pop
lret
bnd
jp
sarl
mov
outsl
adc
dec
pop
add
add
pop
aad
outsb
add
mov
pop
add
pop
ja
sahf
push
cmp
xchg
movaps
pop
flds
or
add
jecxz
dec
jle
cmp
repnz
lea
fstps
xor
push
lcall
rorb
lock
mov
nop
dec
jno
mov
scas
pushf
cmp
andb
mov
ljmp
jl
pop
lret
insb
dec
inc
push
mov
out
in
xor
ds
mov
xorb
cmp
cltd
dec
or
inc
mov
pop
sub
repnz
jl
sar
in
and
xchg
jle
and
push
cmp
inc
inc
lcall
movsl
orl
mov
jnp
add
lret
jbe
pop
aas
cli
inc
testb
add
push
inc
rcrb
adc
mov
mov
inc
adc
movsl
lcall
out
sti
add
dec
mov
popf
ljmp
aam
and
dec
mov
xor
imul
ret
cltd
std
mov
outsb
shrl
cmp
inc
sbb
sub
out
xchg
jnp
js
sub
shr
adc
ds
mov
test
add
inc
xchg
in
test
cmp
or
dec
fisubrl
pushf
jmp
inc
ljmp
add
cmc
test
xlat
add
add
adc
std
lods
adc
fists
inc
xchg
rcr
and
shrb
adc
xchg
dec
popa
popf
add
and
mov
hlt
sbb
div
mov
out
add
mov
cmp
clc
mov
push
cmc
add
pushl
sub
adc
mov
inc
in
mov
jmp
imul
fsubs
test
mov
cwtl
cmp
mov
pop
into
cmp
jns
xchg
enter
mov
test
call
sti
or
sub
dec
into
call
clc
lea
loopne
lods
pop
jmp
sbb
testl
dec
lret
and
imul
js
lahf
xor
incb
pop
inc
add
scas
add
mov
add
or
ret
cmp
repnz
inc
mov
add
add
pop
and
insl
add
pusha
and
mov
call
mov
push
mov
jmp
push
cmp
cmc
sbb
cltd
cmp
add
lea
push
inc
dec
gs
jno
xchg
add
adc
add
add
movsl
iret
imul
push
ljmp
sti
dec
mov
mov
pop
or
add
sbb
cmp
mov
in
mov
and
sbb
jno
shrl
sbb
int
subb
inc
icebp
and
add
mov
push
rorb
test
adc
pop
movsl
add
xor
sbb
inc
pusha
mov
cmp
mov
test
leave
push
ds
out
cwtl
fldcw
lea
and
pop
xchg
cmp
decl
jmp
pop
lahf
cmp
inc
add
cmc
sub
stos
rolb
aad
xchg
out
add
pop
outsb
cmpsb
jae
ret
test
add
sub
fs
loopne
inc
jo
pop
mov
outsb
jno
sbb
repz
jge
push
mov
and
scas
sub
cmpsl
loopne
je
enter
dec
cli
mov
add
xchg
mov
inc
aaa
subb
sub
sbb
fstpl
filds
fmul
lret
mov
adc
sub
lods
mov
or
sti
addr16
mov
cmc
add
or
lock
sbb
and
xor
int3
add
add
jle
jg
xor
mov
rcl
jnp
test
cmp
and
fildl
roll
loope
idivb
pop
inc
pop
clc
es
xlat
pop
xchg
aaa
sub
inc
push
pop
xchg
inc
mov
ljmp
out
jns
rorl
test
mov
cltd
and
str
jae
pop
or
mov
add
test
lahf
enter
insl
fs
jmp
add
cmp
lea
or
ds
jg
jns
lret
add
mov
call
iret
jle
cmpsb
testl
and
pop
out
add
mov
xor
cmpsl
das
jg
lea
and
dec
adc
sbb
movsb
xchg
jbe
push
out
add
mov
add
test
adc
jne
les
adc
outsl
xchg
ja
add
pop
lret
mov
add
gs
xchg
cltd
addr16
fdivrl
add
jle
dec
ljmp
rorb
inc
dec
sqrtps
call
test
iret
mov
adc
adc
xor
and
aam
add
jb
cmpsl
das
cmc
xchg
stc
cltd
mov
mov
call
and
add
push
add
sub
xchg
aas
inc
pop
mov
xchg
movsl
ss
cmp
lret
pop
fdivr
bound
and
dec
in
mov
fldl
mov
repnz
or
int3
mov
push
popa
test
xchg
or
xor
lret
pop
xchg
add
add
data16
add
xchg
adc
dec
sbbb
add
aas
dec
fisttpl
sbb
xchg
in
adc
cmp
cld
out
jmp
pop
add
pop
scas
mov
adc
add
cmp
int
jns
sub
mov
jp
add
push
fs
in
add
pop
sbb
shll
mov
push
or
adc
lea
sub
xor
std
pop
push
out
add
cmp
popf
cmpsb
mov
fsts
mov
pop
cmp
shll
jno
cli
lods
pop
imul
and
add
ss
stos
pop
mov
mov
fstps
leave
into
faddl
xchg
add
add
bound
stc
nop
cli
adc
and
mov
repz
aad
dec
mov
add
push
add
pop
lret
cmp
sub
sbb
test
lods
add
stos
std
push
in
hlt
sbb
lods
mov
xlat
lahf
cmp
adc
lock
dec
les
dec
xor
je
xor
jle
jnp
hlt
movsl
cmp
ja
out
aaa
imul
sbb
pop
movaps
jl
lds
mov
jb
repz
sub
xor
popf
je
out
pop
mov
loopne
add
mov
xchg
fwait
add
scas
outsb
inc
xchg
out
fxch
xchg
lods
imul
mov
popa
outsb
in
add
loop
scas
push
add
or
fsubrl
insl
add
std
inc
test
xchg
lret
ss
roll
adc
mov
fldt
jns
mov
mov
jbe
add
pop
dec
xchg
add
jg
das
add
lods
fnstcw
jno
cli
hlt
cmpsl
mov
add
popf
inc
xor
pop
es
inc
adc
fs
idivl
incb
push
cs
add
ficoms
sar
add
pop
imul
lahf
cs
fs
push
scas
mov
sbb
stos
sub
call
ret
add
pop
iret
add
xchg
mov
mov
movsl
cmpsl
arpl
mov
add
pop
inc
bswap
lahf
pop
into
adc
mov
sub
jne
imul
cmc
push
cs
push
out
mov
dec
adc
ret
add
ss
inc
dec
inc
add
stc
inc
dec
mov
cmc
insb
je
out
add
inc
and
xchg
jno
mov
adc
sub
lea
add
sarb
cmp
in
jg
xchg
sbb
jg
adc
jecxz
cmp
and
jg
mov
xlat
xlat
cmp
movsl
add
leave
rcrb
xor
mov
loop
xchg
mov
xchg
movsl
pop
fdiv
cli
movsl
xchg
fmul
addl
mov
and
ljmp
push
std
loopne
repz
icebp
jle
sub
cwtl
jl
sbb
add
or
add
hlt
popa
bnd
cmc
out
out
adc
xchg
aaa
cmp
pusha
outsb
jne
decb
jecxz
mov
leave
add
push
add
sbb
bound
loope
lret
xchg
dec
fsubr
nop
dec
xor
add
cmc
ficoms
add
adc
and
mov
cmp
xor
mov
add
push
test
sub
add
stos
push
cwtl
add
pop
xchg
push
xchg
lcall
xchg
leave
rolb
test
xorl
jp
in
add
test
mov
xor
mov
mov
dec
cmc
push
movsl
xchg
inc
pusha
pusha
cmp
cmp
jb
mov
das
cmp
loopne
mov
das
lret
loopne
add
repnz
js
loop
add
outsb
lret
adc
ljmpw
subl
test
in
dec
stc
add
xchg
adc
shlb
sub
push
std
js
les
out
xor
add
cli
int
sub
push
aad
xor
sbb
ret
ficoms
dec
call
push
add
cmp
jge
std
add
int
stc
sbb
mov
or
fnsave
adc
fs
xor
add
cs
mov
add
pop
dec
jns
ss
or
ds
add
cmp
movsb
cmp
rcrl
pop
and
cmc
and
cld
adc
out
sub
ficoms
in
cmp
add
leave
add
and
out
addl
lds
sub
mov
jno
adc
add
loope
pop
mov
xor
add
icebp
push
int3
jecxz
mov
dec
cmp
add
stos
dec
jl
xor
jb
ds
std
mov
mov
aad
test
xchg
inc
and
clc
lret
cltd
in
add
and
mov
orb
xchg
mov
js
push
ror
sub
pop
pop
add
out
jmp
add
fdivrp
daa
pop
mov
daa
ds
mov
in
loopne
stc
xchg
add
add
lods
cs
push
movsb
cmp
pushf
mov
incb
jecxz
test
insb
mov
andl
jmp
bound
cltd
add
inc
inc
inc
divl
popl
adc
inc
mov
incb
out
stc
stos
out
dec
inc
fildll
cmp
add
xchg
test
cwtl
push
add
jmp
dec
in
xchg
or
push
mov
sub
mov
shrb
jecxz
jae
add
imul
sub
add
jne
popa
movsl
outsl
notl
add
in
add
lods
add
fists
jnp
push
pop
out
dec
insb
jnp
add
ds
mov
inc
jne
jle
push
test
adc
jl
adc
add
jae
add
scas
out
fidivl
cmp
int
clc
xor
or
add
jmp
mov
sbb
outsb
call
stos
add
and
jecxz
add
in
push
lret
push
xor
add
or
lcall
add
arpl
xor
in
sub
lcall
pop
mov
aad
cmc
and
fidivl
stos
add
dec
add
jb
add
add
xlat
popa
aam
add
dec
push
cmp
fstpt
add
repz
fucom
xchg
leave
inc
inc
fiadds
sbb
fdivrl
or
repnz
sbb
les
imul
jae
push
sarb
xchg
xchg
aam
mov
loop
adc
loopne
cld
add
add
or
and
cmp
lds
inc
jg
test
pop
fcoml
jne
mov
fwait
add
pop
jb
shll
push
mov
cli
pop
fcoml
xchg
sub
cld
sahf
adc
xchg
mov
xchg
pop
sub
push
add
cld
in
sarl
pop
or
xor
sar
loopne
ret
xchg
pause
adc
xchg
movb
dec
xor
jno
lret
fsubr
cmc
or
and
movsb
mov
mov
xchg
sbb
and
jp
sahf
pop
push
add
and
addr16
movb
cmp
jno
xor
xchg
decl
sahf
cmpsl
mov
je
sub
mov
cmpsl
sbb
inc
rorl
jno
sti
mov
enter
gs
mov
sbb
insl
xchg
add
add
jl
aaa
xor
mov
inc
mov
lods
xorb
and
cmpl
push
cmp
dec
xchg
add
das
shlb
iret
popf
adc
inc
stos
arpl
cs
add
ljmp
jmp
dec
push
pop
mov
lret
dec
rcl
addr16
shl
xchg
ja
testl
add
add
add
mov
add
inc
ja
fdivrp
lods
cmpb
add
push
into
mov
add
imul
cmp
sub
mov
cltd
ja
add
jp
add
jp
add
pop
inc
lret
add
xchg
mov
fisubrl
nop
mov
sbbb
xchg
in
push
repnz
add
cmc
rcr
mov
ds
rcrb
add
and
mov
adc
push
mov
adc
cmp
mov
add
mov
sbb
or
xor
sbb
fsubrs
mov
sub
cmp
mov
gs
mov
dec
shrb
imul
data16
addl
mov
fisubl
jb
fildl
adc
sub
arpl
test
dec
or
jecxz
cmpsl
sub
cmp
xor
sbb
push
fiaddl
ret
mov
imul
loope
add
add
in
fcompl
jl
call
shlb
pop
xchg
fiaddl
dec
add
dec
mov
or
popa
sbbl
outsb
addb
mov
or
jne
arpl
xlat
inc
or
ret
add
gs
mov
and
out
leave
cs
divl
mov
sub
adc
push
into
xor
or
xchg
daa
xor
shlb
add
or
add
add
xor
inc
and
das
lds
mov
lock
lea
jne
push
lret
add
ret
fdivrp
mov
stos
and
pop
ret
nop
cwtl
xorl
pop
mov
sub
xchg
movsl
cmp
sub
dec
push
sarb
sbb
cld
pop
add
xchg
dec
aad
iret
test
sbb
sahf
add
dec
movl
mov
add
sub
cs
push
dec
stc
popf
in
cli
push
xor
dec
and
mov
stos
pusha
adcb
mov
lahf
xor
out
xchg
sub
repnz
adc
in
mov
push
les
add
stos
test
test
sbb
add
imul
push
mov
push
dec
dec
inc
fs
mov
shll
cs
add
pusha
push
pop
insl
xchg
roll
cmp
test
cs
push
test
mov
nop
add
dec
jmp
inc
ljmp
cld
and
pop
add
jge
inc
xchg
arpl
aaa
pop
pop
sbb
inc
or
scas
jg
les
jmp
dec
jo
lods
add
or
fldt
push
icebp
lds
jle
faddl
mov
cwtl
cmp
jb
adc
mov
int3
xor
push
sub
ss
add
pop
clc
filds
dec
mov
imul
data16
mov
add
lds
ret
scas
inc
jno
mov
inc
push
int3
iret
xchg
arpl
add
fcmovnb
decl
adc
cmpsl
pop
adc
jl
add
cmp
add
xchg
popa
add
mov
jmp
jmp
push
add
leave
or
pop
or
hlt
add
add
push
add
add
and
mov
cmp
cmp
mov
repnz
aad
pop
jg
sub
ds
cs
repz
pop
push
add
cmc
mov
enter
loopne
sbb
std
dec
add
add
jmp
add
add
add
cwtl
les
in
add
inc
add
mov
test
xchg
xor
je
stos
pop
push
cli
xor
cmp
mov
push
mov
add
loop,pn
sub
cltd
mov
mov
add
cs
mov
mov
std
sub
cmp
mov
fsubrs
leave
cmp
test
sahf
dec
mov
add
test
inc
pop
sub
add
insl
pop
in
push
idivb
icebp
mov
add
cmp
jecxz
mov
subb
fists
adc
mov
xor
sub
mov
and
push
add
jl
jbe
and
aad
andl
pop
push
cmpsl
or
sbb
add
shl
popf
cmp
push
imul
add
add
push
push
cld
jl
jns
popa
lret
hlt
test
cmp
mov
cs
out
inc
ficoml
jmp
sbb
scas
cmp
insb
dec
jmp
and
dec
add
negb
sub
xchg
fisubl
cwtl
pusha
iret
imull
add
xchg
into
mov
or
aam
cwtl
add
jmp
es
push
mov
enter
xchg
xor
pop
lods
add
mov
aad
mov
popf
rcrl
add
cltd
pandn
adc
dec
adc
nop
jg
gs
inc
inc
dec
mov
test
jnp
int
cmovg
scas
je
insb
dec
inc
mov
add
mov
mov
sub
jnp
add
inc
adc
loopne
push
jnp
jae
arpl
add
aam
rcll
cli
or
faddp
jl
sbb
push
xchg
mov
add
mov
cmp
ret
sahf
test
push
xlat
mov
stc
inc
fwait
push
sub
in
shrl
icebp
pushf
pop
sbb
leave
ret
cmp
rolb
add
int3
add
or
scas
out
inc
leave
and
aaa
push
imul
dec
imul
and
add
sbb
add
hlt
add
xor
adc
xchg
add
mov
xchg
shrl
add
jl
lock
add
sbb
xor
or
orb
aam
pop
xchg
in
add
push
and
in
jno
add
sbb
push
pop
outsl
jne
xchg
cmp
sbb
mov
cmp
pop
pop
add
or
lock
inc
ret
ret
jl
test
jnp
add
cwtl
les
fdivs
mov
or
out
outsb
mov
xchg
cmpl
pop
mov
pusha
les
add
aaa
push
add
pop
stc
add
add
mov
xchg
or
imul
lds
mov
add
ds
sbb
or
mov
dec
ljmp
mov
pop
arpl
mov
shlb
lea
adc
sbb
movsl
ret
mov
fwait
add
lahf
sbb
ja
repz
pop
lret
cmp
mov
inc
jne
xor
rcrl
xor
js
addb
dec
mov
popf
je
mov
idivl
lods
in
add
dec
add
xor
add
sub
adc
sti
inc
outsl
faddl
jno
sub
sub
sbb
inc
xchg
ds
in
scas
inc
mov
loop
xor
lds
add
push
add
xchg
fwait
add
stos
mov
pop
repz
imul
mov
mov
sbb
test
or
int
cli
fidivrl
mov
test
pop
jg
lods
in
add
test
mov
pop
push
adc
addb
pop
and
push
cltd
insl
cli
cmp
add
sub
add
fdivrs
fisubrl
jmp
mov
sub
mov
mov
add
mov
repnz
or
lds
ljmp
inc
jno
aam
add
cld
sbb
xchg
xchg
mov
imul
test
mov
mov
add
cmp
leave
cs
pop
lods
jl
cli
ss
pop
rolb
and
push
stos
dec
adc
stc
xchg
scas
loop
notb
pop
dec
popf
mov
pop
jns
inc
cmp
add
add
jne
jp
dec
sbb
inc
pusha
pop
in
add
lods
in
imul
or
push
out
mov
jl
outsb
sar
or
cmp
dec
sub
cmp
lods
sbb
xchg
fildll
int3
push
testl
ja
add
sub
cmp
pop
call
stos
add
fdivrl
movl
ror
xchg
adc
clc
hlt
idivl
loope
or
mov
fisubrl
or
pop
and
loop
lret
pop
sub
cltd
out
mov
dec
add
xlat
mov
inc
iret
loop
jecxz
cs
add
int3
add
out
add
sub
add
jg
test
mov
repnz
mov
ret
or
add
jge
and
shlb
push
enter
ljmp
xor
ret
adc
and
cmp
add
fcoms
pop
push
lret
hlt
add
mov
cli
add
orl
add
aam
jecxz
nop
jg
ljmp
mov
jecxz
or
dec
fldt
popf
push
jl
and
pop
in
mov
repnz
xor
pop
pop
mov
jl
in
mov
jmp
sub
pop
add
jle
mov
nop
sub
xor
push
faddl
out
aas
insb
aad
and
sti
test
xchg
rcrb
loopne
mov
bound
add
decb
lods
rcl
ja
add
add
sub
push
push
dec
rcl
mov
ljmp
sub
cmp
adc
idivl
inc
add
pop
sbb
outsb
mov
sub
push
pop
xor
rorl
imul
fiadds
push
cmp
lods
cmp
scas
push
rorl
int
pop
test
add
rcll
mov
in
ja
mov
leave
popf
testb
dec
or
std
aas
mov
setne
lret
aaa
dec
pop
add
lcall
cs
or
add
cmpsl
sarb
pop
inc
cmpsb
loope
and
ja
xor
ret
in
xchg
mov
push
push
out
pop
inc
iret
hlt
add
mov
cmpb
and
cwtl
jnp
xor
sti
repz
xorb
add
xchg
mov
mov
ret
xlat
in
xchg
stc
xor
ret
out
rorl
sub
outsb
outsb
sbb
sbb
popf
imul
popa
xor
pop
pop
sarl
shll
in
pushl
not
andb
mov
popl
xchg
lret
fwait
mov
out
js
jl
add
into
les
lods
xor
movsb
cld
xchg
fs
add
and
mov
movsl
aam
jmp
mov
or
dec
add
jb
add
fdivrl
cltd
repz
sbb
mov
add
cltd
bound
dec
xchg
pushf
icebp
lods
sti
pop
cmp
mov
mov
into
pop
sbb
sub
icebp
add
gs
sub
xchg
sbb
xlat
xchg
stc
jns
adc
add
cmpsb
das
sahf
gs
mov
add
sbb
mov
dec
add
outsb
shll
push
sub
les
clc
outsb
stc
test
sti
cmp
out
minps
xchg
dec
sahf
fwait
aam
test
or
aad
aam
test
arpl
rolb
fsubs
cwtl
adc
sbb
roll
out
aas
cmp
push
das
push
xor
add
mov
sub
arpl
lock
popl
repnz
shll
outsl
add
jno
inc
ret
ss
sub
negb
mov
inc
cmp
sub
inc
pop
jo
add
ds
std
stos
cld
add
jp
add
sbb
add
cwtl
mov
addr16
stos
lods
jbe
push
aaa
into
mov
mov
mov
mov
sti
sahf
mov
aas
inc
cmp
dec
scas
inc
lods
mov
cmpl
test
cmp
data16
jnp
and
jno
push
mov
arpl
push
es
fwait
sbb
adc
iret
stos
push
pop
addb
mov
xorl
out
sbb
add
add
cltd
add
mov
movsb
push
in
xchg
push
sub
add
cltd
push
add
aad
shrl
pop
add
hlt
or
jge
nop
ficoml
out
iret
aad
xorb
add
into
mov
sbb
mov
int
sbb
dec
mov
jnp
lods
imul
sub
cli
pop
or
test
lods
iret
imul
jns
adc
add
aad
push
mov
xor
pop
add
mov
add
icebp
and
je
dec
mov
sub
lods
adc
add
nop
sbb
rcrb
lret
xor
in
pop
add
scas
sbb
pop
test
sub
cmp
push
cwtl
adc
in
push
clc
xor
sub
stc
fidivs
in
mov
mov
mov
add
insl
push
add
mov
cmp
push
inc
js
test
add
adc
adc
insl
addb
hlt
ja
add
mov
xor
gs
ret
pop
push
and
add
add
mov
outsl
add
jns
push
jecxz
xor
mov
add
sub
add
mov
push
loope
sbb
add
rolb
add
into
sahf
sbb
std
mov
add
lds
push
or
sbb
or
push
insl
add
mov
mov
xchg
push
add
aas
xor
int3
push
ja
cmp
inc
add
in
push
test
loop
cmp
adc
pop
ret
int
jnp
add
popf
jg
jno
push
sbb
lock
into
mov
push
cmpb
xchg
mov
push
or
les
repz
inc
cltd
addb
jno
shl
pop
jnp
lahf
lods
adc
fidivl
mov
xchg
or
cmp
dec
outsb
ficoms
add
xor
cmp
mov
add
add
ja
mov
mov
repnz
mov
cmp
sbb
dec
sbb
fcomp
jl
enter
jp
call
xchg
or
jne
ret
sub
jl
ret
add
add
jg
scas
sbbb
inc
adc
add
rol
jg
cmp
push
ljmp
sub
push
sbb
insl
jnp
push
cmpsb
jp
xchg
insl
cmp
cmp
loope
popf
adc
in
jo
or
mov
loopne
lret
fistps
adc
je
roll
call
add
movsb
arpl
push
adc
adc
insb
adc
cmp
mov
fmuls
pop
xlat
xchg
pushf
add
push
push
in
je
add
ret
cmp
jbe
cmp
mov
add
scas
cvttps2pi
or
cltd
popa
outsl
mov
testl
ljmp
inc
mov
sar
cmp
jno
xchg
rep
jne
lds
filds
mov
fcomip
push
add
jle
sub
jbe
dec
add
adc
or
cmp
mov
dec
nop
stc
dec
shrb
mov
add
push
imul
notl
sbb
dec
cmp
xlat
mov
add
add
adc
xor
add
iret
out
leave
gs
gs
call
inc
pop
lods
pop
repnz
add
inc
loope
add
sub
mov
and
mov
sbb
movb
pop
stos
add
cli
orl
test
mov
inc
push
and
push
aam
sti
popf
and
xchg
aas
daa
sbb
sbb
outsl
addr16
loopne
mov
add
inc
cld
mov
dec
gs
mov
stc
add
xchg
sub
mov
mov
mov
jno
mov
jns
inc
out
jae
sarb
mov
mov
dec
add
leave
and
or
mov
inc
popf
daa
mov
lds
add
leave
adc
add
push
aaa
xchg
cmc
loope
pop
and
add
int3
mov
arpl
sti
mov
jg
out
sbb
repz
pop
xor
aam
gs
jge
ljmp
ret
ja
xchg
in
mov
sbb
jp
outsb
jns
add
cmc
push
dec
fsubrs
mov
pop
dec
xlat
pop
int3
mull
mov
bound
lcall
dec
sbb
fstl
arpl
mov
enter
out
aas
faddp
jp
das
sti
or
scas
pop
push
std
push
fs
or
or
add
call
je
cmp
das
xchg
insb
pop
inc
sbb
mov
mov
dec
mov
jl
inc
mov
lcall
aaa
stos
jmp
pop
test
cmp
jnp
xchg
test
fsub
in
inc
xchg
incb
or
rorl
aam
add
mov
mov
lret
cltd
add
jo
popf
mov
sahf
sbb
js
xor
xor
jecxz
add
add
dec
dec
mov
mov
add
cmp
aam
jp
or
push
ret
adc
xchg
cmp
add
xor
imul
fwait
dec
cmc
or
add
lods
sbb
jns
add
orl
pop
out
jo
in
push
jge
fisubs
push
mov
add
lds
inc
sub
or
and
call
push
outsl
mov
cmp
mov
xchg
aas
dec
add
jbe
jnp
pop
add
ret
inc
xor
jno
imul
mov
sub
push
call
stos
xchg
sarb
pop
cs
das
add
add
push
stos
repz
xchg
imul
mov
out
push
sbb
jnp
rcl
std
dec
adc
add
add
out
mov
push
das
iret
push
xor
inc
sbb
scas
ret
push
mov
push
inc
push
sbb
and
jne
push
dec
jb
xor
stos
insb
insl
dec
sbb
int
adc
sbb
aaa
cmp
shll
out
inc
xor
cli
outsl
cmpsb
cs
dec
dec
add
mov
dec
pusha
adc
push
rcr
add
ss
pop
xlat
xchg
call
fmull
xor
or
sbb
push
test
in
mov
add
mov
push
dec
pop
add
mov
iret
cs
es
inc
xchg
adc
bound
cmpsb
aam
jg
mov
and
rolb
movsb
adc
mov
int
pop
jl
inc
rclb
xchg
add
lret
xchg
xchg
jbe
or
out
bound
sub
jo
lret
movsl
arpl
push
dec
add
cmp
mov
test
add
out
inc
add
sbb
cmpsl
add
sti
fmulp
insb
pushf
hlt
test
pop
add
fidivrl
add
test
ss
inc
add
shl
xor
bound
ret
out
sub
stos
pop
leave
push
dec
aaa
sbb
jle
add
out
vmwrite
add
scas
jecxz
mov
push
sub
jbe
add
xor
mov
add
sbb
and
sub
faddp
add
idiv
jb
pop
stos
aad
dec
ja
adc
xchg
jp
sbb
xchg
and
fwait
les
adc
inc
in
sbb
inc
cmpsl
jne
gs
stc
test
push
test
push
pop
mov
push
movsb
pop
mov
mov
test
ja
jae
mov
dec
mov
nop
roll
sbb
lcall
mov
push
add
jp
test
mov
push
jae
mov
add
scas
aaa
xchg
nop
mov
scas
pop
dec
add
ss
or
lea
leave
unpckhps
stc
inc
dec
dec
add
add
cmp
dec
xchg
es
in
mov
leave
sub
int
fidivrl
hlt
sub
mov
lock
jmp
jno
jns
js
add
loop
push
out
add
jae
cwtl
scas
add
cmp
or
sbb
adc
mov
lods
mov
lods
mov
xchg
mov
and
fstpt
and
jno
dec
mov
jne
push
les
sbb
add
add
cmp
sarb
loopne
cmp
pusha
ja
pop
adc
cmpsl
in
out
mov
push
sbb
addb
push
test
pushf
xchg
mov
movsb
fsubs
insl
cmp
and
inc
jno
pop
cmc
dec
jo
add
mov
mov
fwait
inc
mov
sbb
sbb
add
addr16
add
and
clc
icebp
cmp
cmc
xchg
add
clc
lret
jne
add
sub
ret
add
add
cltd
test
ret
add
pop
ret
add
ret
add
adc
adc
mov
adc
add
mov
test
or
cmp
add
ss
jae
test
sbb
xor
or
mov
rcrl
add
jno
mov
sub
mov
lret
or
movl
cmp
inc
pop
add
jo
add
adc
add
out
in
or
mov
xchg
xchg
fwait
add
push
sbbb
jns
mov
add
add
scas
je
sub
das
jge
dec
mov
mov
loop
adc
jno
dec
mov
dec
popf
or
adc
cmp
mov
fisttps
movsb
pushf
add
mulb
sbb
xchg
add
movsb
add
in
jp
and
mov
and
adc
push
xchg
insb
in
jne
insl
test
dec
cmc
jp
add
mov
cmp
lret
dec
jecxz
jle
shll
add
les
das
test
pop
je
and
sbb
xchg
fstpl
into
jne
xor
xchg
xor
adc
lea
xlat
jb
jg
mov
inc
xchg
pop
inc
push
and
cmp
mov
arpl
imul
fadds
mov
sbb
push
xor
test
aam
daa
std
or
add
decl
sahf
mov
movsl
mov
pop
mov
jbe
cld
stos
movsb
xchg
or
pop
add
adc
add
mov
sbbl
out
repz
out
lock
ja
shrl
dec
add
xor
scas
into
mov
sub
lret
fldt
popf
in
add
sub
xchg
es
or
movsl
je
cmp
xchg
mov
push
rolb
jne
jecxz
sbb
adc
pop
icebp
xchg
push
insb
stos
pop
mov
add
ljmp
add
inc
jnp
jp
icebp
mov
sar
add
dec
imul
mov
push
fimull
jb
mov
dec
std
dec
cmp
dec
dec
xor
scas
jp
add
mov
aad
mov
dec
adc
pusha
mov
jp
popf
pop
fwait
loop
mov
aaa
jbe
mov
movd
leave
nopl
lcall
lcall
push
rorl
addl
pop
add
cvtps2pi
mov
dec
sbb
loop
sbb
fists
fdiv
add
je
cmp
popf
or
mov
je
popf
sbb
mov
push
cli
stos
xor
add
jno
call
clc
dec
call
inc
lret
filds
cld
add
dec
inc
stos
ja
stos
add
int
or
adc
or
inc
in
cmp
add
inc
cmpsb
ret
sub
iret
mov
ret
mov
cmpsb
or
dec
add
pop
cltd
xorb
arpl
jmp
and
jl
testb
rolb
cs
lds
repz
add
scas
lods
lcall
nop
pop
xchg
stos
dec
xchg
mov
outsb
sbb
sbb
add
adc
imul
loop
adc
mov
hlt
or
cmp
mov
add
aam
mov
sub
repnz
bound
push
mov
push
mov
dec
enter
fwait
cmp
popf
pop
mov
sbb
idivl
add
arpl
lahf
adc
inc
xchg
pop
sub
push
inc
lds
jg
xor
insb
jne
xchg
das
jae
cwtl
fdivrl
xchg
bound
cmp
mov
pushaw
aam
jecxz
out
cli
scas
enter
into
dec
mov
cmc
mov
std
fbstp
push
inc
mov
mov
xchg
in
mov
xor
shrl
adc
out
add
outsb
and
pop
in
add
mov
xor
cmp
pusha
add
jg
clc
pop
add
sbb
mov
cmpsl
pop
test
add
push
cltd
and
add
mov
movsb
fiadds
sbb
sbb
mov
out
adc
sbb
sub
stos
pop
inc
inc
dec
jl
sub
mov
mov
test
inc
mov
int3
xor
idiv
add
enter
sub
or
xor
popa
in
push
dec
daa
mov
cmp
add
or
add
jl
xor
data16
xor
daa
ljmp
add
pushf
mov
js
dec
adc
cmpsl
jle
loop
dec
add
pusha
add
push
push
and
cmp
jp
sarb
adc
push
add
cli
orl
ss
inc
inc
push
cmp
pop
sbb
dec
mov
shll
fsub
mov
jnp
add
inc
inc
rclb
mov
nop
add
test
fidivrs
xchg
mov
pavgb
sbb
mov
adc
sub
movsl
inc
push
mov
lahf
pusha
cs
aam
in
jmp
push
pop
cld
xchg
inc
mov
arpl
pop
lods
andb
mov
and
dec
std
or
add
add
das
add
or
jle
arpl
into
mov
fs
mov
xchg
pop
xchg
sbb
mov
or
jne
mov
and
cmp
inc
in
jno
popf
hlt
decb
or
or
add
pushf
add
stc
xorl
or
adc
sub
stc
cmp
fcomp
cltd
push
fst
pop
fucom
fcomp
mov
mov
popa
ljmp
mov
cmp
shl
out
fisttps
test
xor
cld
mov
push
cmpsb
ja
add
idivl
decl
adc
mov
test
test
xchg
mov
cli
push
out
fs
inc
jnp
xchg
mov
outsl
xor
int3
add
adc
xor
adcl
dec
inc
arpl
out
and
jnp
test
enter
push
add
mov
cmp
add
cmc
and
inc
lret
adc
fisttpl
mov
add
add
loop
fucomi
int
mov
mov
cmpsb
jo
add
push
adc
jne
stc
jg
inc
add
fidivs
out
or
daa
scas
out
or
add
add
jecxz
clc
bound
insl
test
and
add
push
rclb
fadd
add
add
aam
mull
add
add
popf
mov
jmp
arpl
pop
sbbl
lret
sub
and
sbb
shrb
sbb
fdivl
insb
inc
test
sahf
out
push
cmp
add
negl
jp
add
data16
mov
imul
pop
xchg
cmc
bound
push
add
mov
dec
stos
adc
repz
xor
loopne
inc
jnp
addl
add
test
inc
and
fiadds
mov
lds
add
pop
lret
out
js
lea
mov
add
xor
add
push
pop
test
mov
push
fdivl
pop
sub
add
add
sbb
sbb
cmp
loop
mov
dec
add
pop
js
add
mov
test
sbb
in
mov
mov
loopne
out
add
push
add
xor
mov
int
add
int
shll
add
push
imul
nop
test
jbe
fwait
hlt
or
rorl
jmp
add
jecxz
push
fnstenv
outsl
add
inc
es
ja
mov
mov
or
add
and
add
xchg
sahf
xchg
inc
loope
aaa
mov
jnp
fstpt
call
lods
add
push
pop
sub
mov
inc
hlt
and
test
and
sub
mov
ds
lret
leave
mov
or
pop
gs
push
jns
in
call
add
sub
add
adc
jo
test
das
cmp
push
add
lock
inc
adc
hlt
lock
mov
mov
pusha
sbb
int
mov
mov
jae
arpl
notb
sbb
sub
inc
pusha
jmp
or
sbb
sbb
mov
js
pop
add
popa
dec
outsb
adc
add
mov
pushf
arpl
add
jo
mov
dec
add
ljmp
addr16
test
jns
xchg
lods
das
sub
mov
rclb
jle
push
out
outsl
js
push
sub
and
inc
or
je
stos
mov
movsb
jmp
scas
jne
cmp
cmp
push
mov
inc
pop
std
mov
in
xchg
idiv
sub
in
imul
jmp
jne
jmp
out
aam
add
mov
fs
cmpl
pusha
testl
mov
mov
ret
loopne
mov
xor
incl
xor
ret
sti
fcmovnbe
mov
ret
fcmove
add
lea
test
pop
popa
ljmp
jp
pop
add
aam
andl
lret
popf
call
cltd
pushf
pop
in
push
iret
imul
mov
inc
push
ss
adc
into
out
pop
movsb
outsb
mov
mov
push
cmc
sub
add
inc
aad
xorl
faddl
inc
loopne
inc
jecxz
in
sahf
sub
dec
add
popf
mov
scas
outsl
icebp
scas
add
rolb
and
cmp
sbb
pop
mov
xchg
inc
jb
cmp
call
lock
sub
and
mov
push
and
dec
inc
rol
add
aas
loope
aaa
sahf
jne
adc
aaa
shrb
repnz
inc
add
popa
scas
pop
sbb
rcll
cmp
pop
jbe
or
add
mov
xchg
inc
or
mov
in
fisttpll
push
sub
xchg
sub
xor
fdivp
add
aaa
rorb
ficoms
outsl
sbb
mov
push
sub
add
mov
ds
movsl
or
sti
jb
mov
mull
icebp
inc
pop
jmp
push
add
addr16
cmp
add
xchg
shl
stos
push
es
enter
inc
dec
add
shlb
push
jno
outsl
add
test
fs
lods
cwtl
loop
add
in
rorl
jb
mov
pop
add
repz
add
xor
or
je
inc
add
xchg
jns
mov
movsl
xlat
pop
iret
jbe
add
repnz
pop
mov
adc
pop
xor
scas
jo
test
sub
fdivr
pandn
inc
mov
arpl
aaa
shlb
icebp
xchg
add
inc
sbb
loope
das
lods
mov
xor
cmp
dec
push
addr16
add
add
shll
mov
sar
add
add
pop
decb
jne
mov
add
shll
add
add
jno
daa
or
sbb
add
adc
lods
incb
daa
pushf
std
jo
lods
push
imul
int3
popa
insl
or
int
push
cmpl
add
leave
push
inc
sbb
mov
in
inc
dec
pop
and
cli
and
sub
fs
cmp
mov
lods
xchg
mov
clc
add
jp
dec
out
add
arpl
out
mov
dec
addb
pushf
add
mov
add
dec
f2xm1
sti
and
and
mov
fcmove
pop
sbb
mov
mov
jge
mov
push
lret
aad
jnp
test
push
mov
in
mov
les
jg
adc
jne
adc
out
je
out
adc
add
inc
hlt
cmp
das
insb
aaa
xchg
scas
sbb
iret
popa
pop
fsubrs
clc
icebp
or
dec
sub
add
mov
add
cs
xor
adc
xchg
fistpll
mov
mov
incb
mov
adc
sub
push
add
pusha
loopne
xor
in
lret
xor
mov
lahf
push
xor
add
testl
cmc
push
sbb
adc
gs
and
les
inc
mov
add
rcll
in
mov
cmp
pop
pusha
inc
mov
and
add
mov
repz
add
xlat
int
pop
movsb
add
and
dec
std
mov
scas
jl
scas
xor
movsl
fwait
mov
and
hlt
add
mov
and
jnp
and
pop
dec
hlt
lret
sub
stos
out
dec
mov
add
pop
lds
das
mov
mov
dec
in
xor
dec
ret
jg
mov
in
jg
add
add
add
lret
insb
adc
ret
sub
stc
add
movsl
pushf
inc
flds
push
fadd
push
test
pop
and
push
inc
jge
add
test
xchg
cmc
and
rcr
add
data16
aad
hlt
in
into
call
cmp
push
mov
jns
dec
add
mov
mul
dec
add
add
sbb
repnz
xchg
ja
add
add
stos
and
adc
insl
cmp
sub
std
mov
sahf
sbb
and
fwait
imul
add
mov
add
pop
and
je
cld
mov
call
movsl
jle
push
loopne
mov
xchg
lret
inc
xor
or
call
or
xor
iret
and
mov
jle
dec
add
lahf
out
jge
add
test
pushf
jo
dec
cli
and
out
fistpl
notl
mov
or
add
dec
fdivp
fildl
add
sbbl
cmp
pop
ret
xor
push
and
push
xor
flds
jmp
fmuls
dec
or
sub
xchg
pop
lods
lahf
add
mov
add
push
daa
xchg
and
gs
dec
js
das
roll
or
xchg
aam
xchg
pop
and
ret
mull
std
and
and
jge
jno
sbb
cltd
xor
sbb
mov
insb
out
popf
add
pop
shlb
cmp
mov
add
dec
push
adcl
xchg
mov
push
test
shll
cwtl
push
mov
add
movsl
cmp
popa
add
mov
movsb
push
mov
push
fbstp
push
subl
mov
enter
add
int
test
pop
insb
inc
add
pop
push
mov
loopne
cmpsb
ficoms
insb
adc
movsl
fst
fs
mov
lods
jg
out
lret
clc
xlat
or
add
add
mov
pop
cmp
inc
jg
ja
aam
dec
flds
sub
nop
movsl
rclb
imul
jl
xorl
ror
add
mov
add
stos
mov
fsubrs
iret
subb
pop
lret
adc
icebp
jbe
stos
inc
or
mov
fldcw
add
pop
lock
data16
inc
inc
and
add
sub
mov
add
or
add
pusha
pushf
stc
mov
push
xchg
test
inc
add
xchg
push
xor
add
jnp
xchg
jg
push
inc
adc
add
mov
add
cmpsb
pusha
cmp
add
add
sub
dec
cmp
or
and
or
push
cmc
xor
mov
add
stos
ds
dec
jo
imul
mov
out
inc
mov
lea
lret
stos
in
imul
add
sub
inc
pop
and
sti
rcl
mov
repz
add
cwtl
cld
xchg
cld
adc
mov
cmpsl
repnz
mov
xor
mov
and
xorb
mov
rcl
sti
das
xchg
orl
mov
out
ret
rcr
ds
add
pop
add
add
mov
pop
ljmp
int
dec
mov
cmc
int
push
adc
mov
sub
popf
stos
mov
jno
xor
call
out
push
ds
jne
sbb
adc
xor
jo
sahf
addl
xchg
push
lea
test
xchg
lret
test
rolb
push
mov
dec
adc
mov
inc
sub
ficoms
cmp
inc
das
cs
in
jle
mov
xchg
es
pop
cmp
add
push
xchg
stos
mov
jg
rcll
mov
loope
decl
shll
add
movsl
stos
mov
xchg
subl
test
stos
mov
xor
xchg
mov
jmp
int
into
jne
or
insb
add
add
icebp
and
inc
cs
pushf
mov
ret
mov
pop
push
add
pop
lock
clc
mov
add
ljmp
adc
inc
mov
cmp
add
fisttpll
mov
add
mov
inc
rol
push
jl
ret
leave
mov
hlt
adc
jnp
add
hlt
repz
and
dec
aaa
movsl
ret
test
out
arpl
dec
movsb
add
pop
movb
xchg
add
popf
les
loop
lds
mov
add
les
in
mov
ja
movsl
clc
pusha
out
sbb
jmp
add
fisubrs
add
inc
mov
mul
add
imul
add
mov
pop
sti
out
xchg
add
inc
cmp
mov
call
adc
into
add
lcall
cli
xchg
push
add
and
adc
adc
jp
sbb
insb
rclb
int3
les
clc
scas
and
loopne
mov
dec
add
leave
fidivrl
mov
mov
cld
dec
cmpsl
inc
aas
jge
inc
repz
aas
cmc
ret
test
scas
pop
mov
dec
push
sub
mov
loopne
sbb
pop
mov
fbld
cmpb
mov
and
mov
jae
movsl
aas
jbe
in
fcoms
dec
ja
in
add
mov
fnstenv
data16
add
or
xlat
add
mov
arpl
loope
js
mov
in
outsl
or
pop
add
rcr
test
mov
xor
cmp
pop
xchg
movsb
les
ret
mov
lea
or
mov
outsl
pop
cmc
in
pop
fwait
aam
pusha
ds
add
or
jg
imul
cmp
mov
xchg
addr16
xchg
push
lahf
lods
cmp
call
add
mov
popf
pop
mov
add
mov
fmuls
cmp
dec
cmp
jbe
pop
icebp
inc
ret
jmp
inc
enter
ret
dec
fsub
mov
push
jno
ds
pop
pop
ret
mov
xor
out
jle
inc
or
and
push
add
add
faddl
frstor
rolb
push
inc
std
dec
add
mov
mov
fwait
int
aaa
sub
add
ret
pop
je
jg
stc
les
inc
mov
cmp
cli
mov
lahf
mov
fimull
mov
push
insl
roll
test
dec
xor
add
testb
jbe
jp
lret
inc
pop
dec
stos
push
mov
xlat
lret
sarl
shlb
dec
lret
mov
pop
mov
push
fsubrl
mov
dec
outsl
popf
sub
sub
add
push
adc
rcrl
adc
lods
add
addb
sub
inc
imul
xor
mov
push
adc
and
fldl
inc
in
pop
fdivrl
fwait
jecxz
and
mov
mov
ljmp
lahf
mov
push
lret
aam
sbb
cmpsl
xchg
scas
arpl
loopne
or
xlat
dec
push
inc
hlt
add
nop
dec
test
sub
dec
test
xor
int
fsubrs
aad
repnz
add
inc
add
sbb
xchg
aam
inc
add
jns
fcmovne
or
and
ljmp
inc
mov
cs
fstl
push
mov
xor
movsl
ja
pop
lds
sbb
push
aad
sbb
mov
jle
sbb
movb
lret
hlt
jns
add
gs
sub
sbb
add
pop
stos
data16
jecxz
sub
push
pop
sahf
add
jne
lock
push
or
out
xchg
inc
sbb
cmp
jmp
insb
and
aam
ret
add
pop
or
fwait
mov
lock
ds
aaa
lret
pop
cmp
jmp
test
xchg
xchg
rcrl
das
in
pop
mov
add
hlt
decl
inc
popa
dec
test
repnz
fcoms
enter
mov
sbb
sbb
or
mov
mov
adc
lret
sub
enter
enter
or
xchg
shrl
add
mov
mov
jo
mov
push
xor
push
adc
nop
lret
test
mov
roll
movsl
push
loop
xchg
jl
adc
les
ds
dec
mov
dec
cli
xor
jb
add
popa
sbbl
pop
add
mov
lret
dec
and
mov
or
add
dec
add
add
mov
add
add
add
sub
in
add
xor
add
jns
cmc
imul
lock
or
call
mov
cmc
and
stos
cld
push
add
jae
mov
jnp
xchg
ja
xor
cmp
lea
jg
popa
sub
icebp
and
or
add
cld
rcrl
pop
dec
ficoms
jbe
lods
add
dec
xchg
addl
jbe,pt
xchg
add
sbb
jg
mov
xchg
add
jnp
ss
sbb
cld
push
mov
mov
mov
pop
sbb
jae
stos
cmpsl
and
adc
or
sub
push
add
sbb
cs
addr16
jge
shll
iret
nop
adc
aam
lret
push
push
inc
jecxz
pop
jno
add
mov
xchg
xchg
dec
mov
and
pop
imul
in
add
sbb
xchg
stos
sub
ja
sahf
fcomps
pop
jl
aaa
or
lock
shll
jbe
jno
ret
dec
fidivrs
icebp
add
inc
xor
add
nop
xchg
js
cmpsb
verr
jno
shl
jecxz
pushf
pop
mov
cmpsb
push
xchg
pop
sbb
ja
ljmp
add
and
int
and
lds
mov
in
add
mov
sbb
arpl
repnz
outsb
adc
cld
mov
add
hlt
xchg
mov
lahf
fiaddl
sbb
lods
xchg
push
push
ja
dec
dec
xorl
pop
repz
std
repz
cld
out
xchg
fs
in
ljmp
xor
push
iret
adc
and
sub
inc
add
add
mov
cmp
fisttps
cmp
outsb
lret
loope
mov
ds
and
cmpsl
cmp
cltd
and
push
add
push
pop
in
pop
add
jo
xchg
fldl
and
imul
add
divb
dec
sbb
bound
or
jecxz
out
into
mov
inc
sbb
outsl
lahf
inc
push
in
push
icebp
push
cmp
dec
insb
pushf
call
add
lahf
loop
lcall
loop
dec
sbb
in
or
xchg
fcomps
test
cmp
imul
xorl
dec
xor
inc
cmp
xchg
cwtl
mov
incl
repz
sti
add
xchg
fdivrl
in
aad
pop
mov
fldl
ljmp
shrl
fisubl
jmp
push
add
aam
xlat
aam
das
mov
push
add
push
addb
add
repnz
and
test
sbb
add
xor
sub
add
outsl
les
popf
xchg
rolb
mov
add
sbb
add
xlat
push
xlat
fs
dec
push
or
xchg
add
or
mov
fwait
add
and
xor
loope
sar
and
add
gs
mov
ror
pop
cmp
sub
js
sbb
mov
test
adc
int
cwtl
sbb
jecxz
adc
add
repnz
fiadds
mov
inc
iret
shll
xchg
push
andb
add
out
xor
ja
adc
pop
cmp
adc
add
movsl
mov
insb
dec
and
roll
icebp
mov
sub
pop
add
add
lcall
jbe
xchg
test
data16
jmp
fiadds
mov
and
mov
add
mov
rcll
push
call
int3
cmp
dec
inc
lods
add
test
arpl
or
data16
mov
and
xor
cltd
cli
addb
pusha
add
std
cmc
ljmp
outsl
out
sub
addr16
dec
adc
lret
mov
test
in
push
pop
add
scas
pop
test
add
add
inc
cmpl
enter
jbe
cmpsb
xor
int
add
and
fisttps
push
jno
fiadds
mov
add
mov
rcrb
pop
and
dec
dec
ljmp
cmp
pop
aaa
xchg
icebp
push
les
mov
test
mov
jecxz
sub
das
push
mov
sub
nop
xchg
jle
fsubrl
call
add
xor
jnp
add
cltd
mov
sti
xor
sbb
dec
imul
popa
call
test
or
add
loopne
add
push
mov
add
pop
mov
inc
add
adc
dec
int
lcall
pusha
push
jl
loope
lcall
xchg
mov
xchg
out
jo
push
lret
test
jae
jmp
add
dec
mov
add
jmp
add
test
push
push
add
stos
adc
sbb
lods
mov
inc
sahf
cbtw
mov
in
push
add
sbb
in
out
out
imul
inc
dec
or
lods
insb
jno
aas
mov
add
out
fisubrs
lock
ret
add
inc
sbb
sub
add
or
mov
add
imul
and
add
fs
pop
xchg
ljmp
xor
xor
icebp
nop
add
pusha
fs
xor
push
out
outsb
inc
stc
mov
loop
ljmp
fnstenv
push
cmovbe
out
jb
push
dec
int
mov
repz
imull
pop
out
ret
xchg
daa
jl
mov
mov
and
mov
std
out
cmpsb
mov
pop
mov
pusha
sbb
push
repnz
push
flds
add
pushf
cmc
add
jg
test
fimull
aad
jl
test
and
les
out
lods
adcl
mov
adc
mov
arpl
mov
repz
fidivrl
call
add
and
stos
cmp
jnp
cmp
mov
jnp
adc
sub
jbe
sub
je
aad
aas
mov
nop
stos
out
in
jle
addr16
data16
push
fdivrs
push
repnz
sub
mov
shrl
sbb
xor
add
jp
sbb
les
daa
gs
inc
mov
push
sbbl
add
enter
and
imul
jae
fcomps
jb
shll
mov
fimuls
pop
cmpb
je
jnp
popf
enter
inc
push
xor
push
cwtl
test
and
std
ret
test
push
xchg
dec
mov
jmp
shll
call
add
dec
add
ljmp
adc
pop
and
cmp
mov
lcall
push
adc
inc
int3
jbe
cmpsb
decb
lods
sub
hlt
out
stos
out
std
lock
and
xor
add
add
mov
add
out
lods
loopne
cwtl
add
add
shl
push
stc
push
fiaddl
add
daa
fmuls
push
push
ja
loopne
add
dec
lods
mov
add
and
mov
lret
mov
or
sahf
ss
mov
mov
fadds
out
in
inc
inc
xchg
out
sub
jecxz
andl
mov
in
jb
mov
push
xor
roll
xor
sub
ljmp
xchg
ret
ljmp
popf
mov
and
ret
push
add
push
cs
ds
dec
gs
ljmp
sbb
add
ret
jbe
add
xor
or
scas
pop
add
add
mov
lods
sub
ficomps
adcb
cmp
jo
pop
xor
add
xchg
movsl
pop
push
pop
in
outsb
and
add
ljmp
jo
push
das
mov
lock
jg
mov
sub
add
sbb
add
jle
add
xchg
scas
fcomi
xor
sahf
adc
push
ljmp
and
inc
and
iret
pop
pushf
shlb
add
outsl
add
add
inc
cltd
ffree
out
jbe
add
iret
into
int
leave
scas
into
loop
lods
adc
ret
add
loopne
out
jae
mov
rcrb
repnz
enter
pushf
mov
add
add
pop
test
inc
out
aam
sti
push
test
adc
push
adc
or
add
sbb
mov
mov
xchg
adc
add
das
dec
in
mov
call
push
pop
mov
push
adc
stos
xchg
xchg
push
insl
mov
scas
pextrw
xor
adcb
icebp
test
ret
inc
push
push
add
xchg
and
repnz
mov
pop
leave
mov
sbb
and
cmp
dec
cs
fwait
xor
pop
shll
add
gs
sbb
lahf
add
cmp
jb
jmp
mov
les
adc
jp
outsb
jnp
add
or
notb
add
pop
call
pop
sub
cmp
xor
loopne
add
mov
pusha
sahf
xchg
fs
das
insl
lahf
cmp
std
mov
or
movsl
dec
add
cmp
movsl
inc
movl
stos
mov
jae
cmc
orb
or
adc
stos
mov
inc
pop
push
mov
pop
test
push
pop
scas
lock
sbbb
sbb
dec
das
sbb
std
push
xor
and
xchg
jne
call
xor
outsl
ss
dec
jnp
mov
xor
add
test
fwait
push
dec
xchg
js
cmpsl
fisubrs
jge
ret
call
sbb
cli
ss
stos
dec
cmp
and
inc
cld
mov
add
jne
js
sub
movsb
nop
and
dec
add
mov
scas
shl
jg
into
xchg
insb
xchg
icebp
cmp
mov
pushf
cmp
xchg
mov
shlb
pusha
dec
nop
add
aas
push
pop
sub
adc
lahf
adc
loope
das
and
enter
test
testb
push
pop
in
pushf
pop
adc
fisubrl
add
les
add
inc
jne
mov
jo
in
bound
sar
out
xor
cmc
movsl
dec
xor
add
popa
js
pusha
cmc
aaa
add
pop
int3
test
add
push
popl
sbb
push
std
add
incb
int3
sub
hlt
add
xchg
dec
sbb
mov
test
jo
ljmp
xor
pusha
scas
xor
lds
fsubr
jbe
add
insl
jbe
hlt
aaa
xor
out
ljmp
loopne
xchg
rcrl
add
test
fmull
mov
imul
insl
sti
fsubl
pop
xor
push
push
jbe
sbb
clc
or
scas
jno
push
jg
or
cmp
add
in
loop
and
add
adc
fisttpl
add
loopne
mov
xor
and
outsl
pop
cltd
cmp
fwait
movsl
sbb
cmc
add
popa
loope
fildl
jns
dec
mov
push
rcl
mov
fs
push
adc
mov
add
pushf
jne
enter
lcall
mov
dec
out
leave
or
mov
xchg
test
jno
lret
int
and
push
rorb
mov
shl
add
pop
andb
lcall
jb
dec
aas
cs
xor
add
jae
roll
or
mov
sahf
lods
or
and
xchg
ret
jno,pn
fimull
imul
ja
hlt
fistps
out
xchg
addl
test
aaa
mov
jne
sub
xchg
enter
aad
dec
dec
pop
cmp
pushf
mov
mov
repnz
pop
insl
mov
loop
xor
add
cwtl
push
sahf
push
pop
add
or
stc
rcrb
push
aad
mov
jle
pop
dec
pop
dec
fidivrl
js
enter
xor
dec
pop
out
out
mov
sti
and
sahf
dec
mov
fldl
fsubr
push
add
dec
imull
int3
inc
fwait
add
push
or
add
fldcw
pop
xchg
outsb
jmp
stos
pop
cmpsl
sar
lahf
aas
lea
mov
add
mov
sub
lahf
mov
dec
and
scas
jns
in
add
push
push
mov
jp
fsubr
add
xor
inc
xor
or
xor
out
out
jl
add
xlat
mov
bound
jb
sub
test
add
sbb
into
jmp
xor
and
cmpl
test
dec
inc
lods
push
pop
add
add
push
jp
mov
jo
rcl
mov
lds
jg
dec
fucomip
sarb
add
sbbl
andl
cmc
decb
out
inc
or
ss
xchg
inc
cmp
subl
mov
or
fidivl
test
pop
repnz
or
mov
dec
add
in
mov
add
or
sarb
pop
add
add
xchg
loopne
or
add
test
and
ret
les
add
jp
jl
fcmovb
pop
cmp
add
hlt
sub
lret
lods
push
faddl
add
imul
mov
hlt
cmpsb
jg
clc
add
mov
mov
xchg
cmp
cltd
fsts
add
rcrl
testb
sub
pop
mov
cmc
jb
ja
inc
cs
int3
or
add
into
jo
imul
out
cmpsb
movsl
aas
ljmp
gs
test
pop
scas
gs
bound
cmp
sbb
dec
sub
adc
dec
or
mov
cmpl
ret
cltd
sbb
stc
mov
int
add
mov
mov
jecxz
lods
mov
repnz
aad
add
iret
mov
es
dec
add
data16
jne
push
add
add
sahf
xor
cmp
push
add
xchg
in
add
dec
cs
je
adc
sub
aas
mov
pop
add
mov
aad
jp
orl
call
or
and
add
sti
mov
test
mov
mov
push
push
mov
sub
push
add
lret
ljmp
push
add
aaa
sbbl
add
jl
pop
push
cmp
jle
mov
xor
and
cltd
insb
cmp
jg
jns
adc
pop
fadds
cmpsl
dec
fwait
add
pop
add
out
add
inc
push
add
jmp
pushf
cld
fwait
test
push
or
adc
or
or
push
and
adc
add
xchg
pusha
repnz
je
add
xchg
scas
add
push
mov
addl
jmp
test
stos
mov
mov
bswap
adc
add
pop
or
je
add
jmp
ficompl
mov
adc
mov
and
rorb
andb
fdiv
dec
jmp
push
mov
jl
mov
adc
add
adc
das
xlat
xchg
or
popf
popf
stos
call
enter
mov
test
sahf
or
add
enter
jp
sub
scas
hlt
frstor
cmc
adc
add
push
aam
adc
addr16
push
push
mov
or
les
add
pop
mov
mov
in
xchg
add
in
jns
xchg
and
into
cmp
fs
lea
testb
or
cmc
mov
leave
shll
cld
jecxz
add
adc
add
shll
repnz
icebp
je
divb
fwait
sbb
movsb
das
mov
push
add
pop
mov
outsl
or
jno
loop
hlt
xor
cmp
fiaddl
push
dec
jno
call
jbe
clc
cmp
leave
sti
leave
lret
ds
in
xor
cmp
dec
or
imul
idivl
lret
stos
lahf
push
aaa
test
xor
scas
aas
dec
and
xchg
fisttpl
shrl
es
mov
add
add
adc
mov
xchg
add
dec
repz
inc
clc
add
adc
std
add
into
test
sbb
xchg
cmp
or
dec
mov
mov
sti
outsl
sbb
cmp
dec
pop
jns
into
in
in
or
adc
add
sbb
xchg
adc
inc
setg
lret
or
add
sbbb
or
xor
jl
xchg
outsb
jle
add
sahf
add
mov
aam
cmp
out
add
and
pop
dec
add
jmp
push
inc
dec
dec
add
mov
iret
mov
insl
fmuls
add
jecxz
add
arpl
imul
jmp
sbb
jg
lods
add
out
ret
loope
add
mov
sbb
xchg
ds
fsubs
pushf
xchg
dec
xchg
pop
repnz
xchg
add
pop
push
xor
lea
jae
xchg
add
insb
add
sahf
add
add
clc
xor
add
mov
int3
xor
je
test
mov
loope
push
jecxz
and
imul
out
ja
push
cmc
or
std
add
add
push
or
pop
xor
addb
fcompl
cld
xchg
add
add
jb
cmp
ret
and
add
jb
cli
sbb
xchg
add
vpcmpgtd
mov
sbb
addl
add
xor
or
pop
xchg
popa
or
stos
fstp
push
and
pop
fstps
adc
leave
jg
mov
add
inc
sub
jmp
ljmp
sbb
mov
jb
xchg
jmp
iret
pop
hlt
call
push
imull
jecxz
hlt
mov
cmc
into
push
xor
cmp
bnd
mov
sub
shlb
arpl
mov
addb
mov
jae
mov
sub
mov
xchg
xorb
out
xchg
ret
sahf
jno
xchg
jg
repz
mov
out
xlat
add
add
call
jg
adc
xchg
hlt
jne
out
mov
or
adc
add
test
mov
adc
cmp
int
jb
addl
add
push
jb
jno
inc
scas
add
xchg
mov
stc
cmc
imul
ss
jae
ljmp
lock
sahf
lcall
add
movsb
add
xor
lcall
mov
cld
add
cmp
aas
lods
mov
arpl
add
push
push
gs
dec
rcr
daa
aad
sub
add
xchg
mov
jb
lcall
sbb
enter
imul
add
repz
inc
pop
lods
add
leave
mov
in
push
jg
mov
mov
lcall
inc
add
push
lock
loop
adc
addr16
mov
adc
add
adc
fisttpll
xchg
add
and
pop
pop
loopne
sub
xor
clc
adcb
stos
mov
dec
cs
clc
cmp
pop
xor
flds
aas
icebp
adc
dec
ljmp
add
cmp
ja
push
xlat
adc
stos
test
ljmp
xchg
push
shlb
xchg
mov
out
aaa
mov
sbb
incb
xchg
push
add
add
mov
xchg
add
sub
pushf
into
ret
sbb
add
sub
add
add
pop
cmp
xchg
push
cmpsl
mov
mov
cmp
ss
dec
mov
mov
scas
std
dec
pop
xchg
sbbb
xchg
es
add
faddp
movsb
dec
or
testb
push
loopne
jno
lods
add
addw
hlt
fsubrp
movsl
jne
bound
not
js
ss
fdivr
outsl
addr16
add
mov
and
add
aaa
popl
outsb
insb
inc
ret
inc
leave
push
add
adc
ja
sbb
or
clc
or
enter
sti
add
add
dec
out
add
insb
push
add
popf
stos
stos
mov
and
jge
aas
inc
dec
or
enter
cmc
cmpsb
inc
mov
add
andl
dec
enter
les
repnz
inc
out
fcomp
std
add
jge
lods
xlat
dec
cmp
jp
das
pusha
adc
sbb
imul
imul
popf
dec
push
popf
inc
fisubs
pusha
dec
insb
xor
int3
add
aas
xor
daa
cmp
mov
sar
aad
insb
test
add
or
xchg
add
add
mov
adc
in
or
inc
mov
mov
jecxz
outsb
ds
sahf
pushf
adc
lods
and
xchg
inc
mov
dec
xor
adc
cltd
sti
das
add
mov
xchg
add
pushf
mov
dec
sub
into
fsub
loope
mov
test
mov
adc
mov
xor
xlat
add
add
add
push
addb
jle
inc
fimuls
into
cs
dec
shlb
push
lret
cmc
push
xlat
jo
jne
rcll
add
mov
ss
push
xchg
push
pop
outsl
add
enter
lods
shlb
cld
and
xchg
in
push
in
mov
add
add
das
pop
out
dec
cli
scas
xor
das
adc
jbe
adc
popa
adcl
pushf
add
nop
pop
add
fimuls
mov
das
add
xchg
pop
sub
push
insl
rol
add
mov
orb
xor
sbb
fidivrl
xchg
add
rorl
pop
add
out
shr
insb
cwtl
sbbl
pop
jg
ret
mov
std
mov
pop
or
xchg
in
jbe
lods
sub
dec
and
jno
jmp
fisubl
lcall
js
add
call
add
mov
inc
gs
popa
call
inc
int
add
cmc
imul
jo
add
mov
flds
loope
movsl
xchg
psraw
out
add
mov
push
xchg
dec
mov
fildl
rorl
mov
add
sub
daa
adc
out
xchg
fldt
add
gs
mov
cmp
xchg
and
push
cs
cmp
push
out
add
add
out
lcall
lcall
adc
lds
add
loope
out
push
add
jl
cmp
fcmovnu
jg
iret
cli
repz
lahf
mov
imul
sbb
cld
xchg
inc
fadds
or
ret
aas
add
int3
gs
sub
inc
leave
fwait
pop
nop
in
add
arpl
lds
outsb
or
cmp
mov
loop
ljmp
popa
jle
lret
dec
ret
jge
insl
push
add
lcall
xlat
push
add
repz
imul
jno
mov
pop
push
mov
xlat
sbb
mov
test
mov
cmpsl
pop
jae
ret
js
xchg
mov
mov
fmull
mov
aas
add
enter
rorb
adc
movsl
rcrl
lahf
fsubs
add
jno
lret
add
stc
aaa
sbb
or
lret
add
addb
icebp
leave
add
addl
dec
movb
lea
sub
fs
insl
test
clc
les
nop
mov
xchg
xchg
iret
cld
sbb
iret
sub
mov
sbb
adc
mov
cmp
dec
call
push
fnstsw
and
aam
lock
pop
test
add
clc
sbb
rcr
lahf
addb
xlat
lahf
inc
andl
jg
adc
add
dec
testl
movsb
stos
cmp
jb
xchg
and
inc
mov
and
push
inc
ficoml
sti
sahf
add
add
popf
xchg
xchg
and
xchg
shlb
lret
sub
add
add
bound
xchg
mov
xlat
popf
mov
pop
add
and
cli
lock
push
xchg
out
inc
jb
inc
add
dec
inc
fwait
test
dec
or
mov
pop
xor
add
jb
push
push
inc
dec
subb
lds
cmp
cmpsl
xchg
popa
jns
cmpsl
imul
inc
es
add
pop
jp
lcall
sbb
je
sbb
push
int
fsts
mov
sbb
in
mov
xorb
test
xchg
je
flds
aad
push
icebp
outsb
adc
pop
dec
nop
int3
jp
add
and
dec
sarb
test
mov
xor
leave
mov
mov
jbe
lock
sbb
jae
mov
dec
jmp
jnp
add
dec
push
ret
out
gs
add
lret
add
sbb
xor
add
mov
mov
push
add
enter
jnp
addl
push
inc
fsubrl
mov
daa
shll
jmp
push
stos
mov
mov
fidivrl
incb
jne
repz
mov
daa
and
xchg
data16
test
mov
mov
imul
cmp
push
data16
and
mov
les
mov
or
lods
inc
pop
dec
sbbl
out
adc
outsl
je
aam
shl
pop
inc
mov
ds
in
pop
inc
jl
inc
add
aaa
dec
ret
mov
add
add
clc
add
cmp
imull
ja
jae
adc
outsb
add
mov
lret
das
lea
rorb
jno
push
push
cmp
shl
sbb
push
sub
xor
lea
pop
sub
int
pusha
roll
ljmp
cli
mov
bound
mov
or
adc
jo
outsl
pop
test
cld
add
lcall
xor
cli
ss
sahf
in
xchg
dec
add
jbe
add
mov
jecxz
aas
sti
sub
addr16
cmpsl
into
mov
xor
jp
cmp
pushf
xor
add
push
lahf
sub
jb
dec
add
nop
fisttpll
add
movsl
push
pop
loope
and
push
add
jbe
jae
add
lret
adc
das
cltd
cmpsb
and
imul
out
add
out
testl
jb
adc
in
add
mov
jne
in
cmp
mov
jbe
sti
outsb
inc
xor
xor
rep
cwtl
lahf
xchg
mov
and
and
idivl
push
and
jmp
lods
pop
push
add
clc
mov
pop
mov
mov
adc
mov
mov
sub
jl
mov
js
pop
mov
mov
dec
jae
sub
sbb
xor
or
inc
pop
mov
and
mov
dec
add
insb
add
inc
and
jg
out
and
push
adc
daa
and
mov
std
aaa
adc
mov
sub
adc
outsl
add
xor
xchg
sbb
and
add
add
or
adc
mov
in
dec
or
xchg
aaa
jmp
into
mov
cmp
daa
sub
or
mov
add
in
sbb
adc
loope
add
jge
dec
pusha
fists
jge
das
push
test
xchg
test
loopne
or
push
out
push
add
test
ret
out
out
mov
into
aam
inc
inc
and
mov
sbb
pop
and
bnd
xlat
sti
repz
test
or
or
and
pop
jne
add
cmp
adc
mov
lret
push
sub
lock
movsl
jle
rcrl
pop
add
sub
xchg
pop
int3
mov
outsb
inc
sbb
jle
jle
add
ja
mov
das
cs
add
mov
lea
xchg
lock
mov
lock
inc
nop
dec
dec
out
push
add
add
add
lret
adc
scas
mov
add
cmp
lahf
mov
mov
test
push
or
fldenv
in
popa
add
push
rcrb
fdivrl
stos
push
rclb
popa
cs
sub
dec
sub
test
xor
pop
fcoml
daa
mov
jnp
fwait
cwtl
jle
inc
mov
push
pop
add
popa
test
add
and
mov
gs
sub
lock
jp
mov
jecxz
push
mov
stos
repz
out
inc
jg
dec
sub
movsb
dec
add
mov
pop
lds
mov
cmp
mov
and
push
mov
outsl
push
and
aas
mov
sbb
add
popl
sbb
cld
imul
xor
push
mov
in
gs
cmp
and
add
scas
into
xor
mov
cwtl
mov
mov
sub
jle
nop
mov
adc
xor
iret
add
mov
sahf
push
and
cs
loope
adc
mov
mov
ds
mov
mov
adc
xchg
incl
aas
push
push
pop
or
dec
pop
cmc
cmpsb
add
aaa
add
mov
jl
inc
adc
loopne
addl
add
jp
xlat
fldcw
inc
add
push
add
add
jmp
filds
cwtl
push
pop
mov
xchg
leave
sbb
add
push
pop
sbb
add
test
popf
sub
jbe
aaa
movsl
cmpsb
and
jnp
sbb
push
push
test
fisttpl
aaa
add
cs
dec
add
xchg
add
and
xchg
sahf
cmp
inc
push
jb
into
cmpsl
and
adc
aas
push
xor
xor
sub
dec
jnp
aas
adc
std
nop
add
add
fmuls
push
sub
push
aam
sbb
or
cmp
mov
scas
pop
leave
pop
sub
lea
add
jecxz
push
mov
dec
sbb
aam
lea
push
mov
inc
dec
xor
out
out
pop
clc
out
es
imul
fisttpll
sbb
mov
jo
sub
fs
adc
xchg
out
ret
addr16
adc
test
xor
xchg
bound
inc
mov
mov
jle
push
add
inc
ss
mov
pop
sbb
stos
add
outsl
mov
cli
inc
dec
xchg
andl
lret
mov
mov
pop
push
or
add
push
inc
mov
lods
leave
sub
pop
push
mov
mov
mov
pop
mov
or
pusha
push
and
cli
addl
iret
cmp
test
jae
adc
mov
add
add
jnp
jne
es
pop
out
xlat
in
push
ret
lock
jbe
call
inc
loope
push
aas
add
pop
adc
add
adc
sub
xor
rolb
xor
mov
enter
push
ret
xchg
jbe
outsl
dec
sbb
lret
jne
mov
je
sub
iret
cmp
pushf
test
jp
jo
or
jno
mov
inc
imul
fs
jmp
mov
push
fildl
mov
add
cmpsl
cli
and
push
add
mulb
push
cmp
movsl
push
pop
lods
jg
out
jp
into
pop
mov
and
add
add
add
test
enter
mov
add
push
test
ret
cmp
ljmp
lret
ja
mov
mov
add
leave
and
add
cld
add
fdivs
jl
andl
jno
stos
daa
inc
mov
stos
int
dec
mov
jnp
sbb
call
xchg
leave
rcll
push
or
sub
xor
sub
mov
push
popa
daa
in
xchg
sbb
mov
pop
fwait
repz
repnz
push
in
lret
pusha
int
sub
lret
movsb
cwtl
or
sbb
scas
add
pusha
xor
mov
imul
sbb
xor
lret
sahf
rol
push
int
jl
sarl
js
cmp
pop
bound
xchg
and
mov
loop
mov
lret
jp
dec
push
xor
add
add
cmpsl
inc
repz
add
sbb
std
loope
add
ja
mov
sbb
ret
add
jae
mov
test
add
stos
loop
fcomps
add
loope
fidivrl
jmp
mov
iret
ljmp
movb
dec
mov
cmp
sbb
mov
nop
cwtl
xchg
jae
jmp
nop
data16
insb
xchg
xchg
fidivs
or
and
loopne
arpl
jbe
add
outsb
cmc
loop
ret
shll
mov
mov
movsl
fdivrp
roll
add
or
mov
push
out
cld
fimull
inc
add
scas
push
jg
add
mov
sarb
sub
add
and
push
push
pop
jmp
add
and
fstps
sbb
insb
out
mov
ss
xchg
push
push
rcl
xor
add
xor
push
pop
add
push
xchg
or
fadds
mov
mov
fcomip
loope,pt
lret
test
out
out
mov
cwtl
xor
or
xchg
mov
loope
cli
lret
mov
xchg
das
pop
cmp
pop
lock
cmpl
and
sbb
ret
adc
mov
add
sub
add
lret
push
add
jbe
lea
pop
mov
fmull
push
mov
clc
addr16
test
jecxz
pop
in
ret
add
pusha
fdivr
xchg
add
out
mov
in
sbb
bound
call
fldcw
mov
rcll
test
insl
repz
in
fcmovnu
add
jmp
add
scas
push
add
leave
or
pusha
xor
jnp
cli
inc
add
pop
clc
mov
inc
arpl
sti
jmp
icebp
icebp
mov
adc
inc
orl
test
test
add
icebp
push
stos
sub
test
mov
sub
lea
sbb
xchg
sub
adc
icebp
adc
arpl
add
and
in
xchg
push
push
adc
out
in
in
imul
inc
roll
sub
cmp
push
dec
fwait
and
out
mov
push
insl
inc
std
lea
mov
fwait
mov
imul
cmp
out
jg
jle
std
xor
add
movsb
adc
jo
mov
xlat
dec
add
sahf
mov
add
push
mov
shrb
sbb
mov
push
add
xor
fxtract
or
xchg
popf
repnz
jge
push
cmpsl
sbb
sbb
test
xor
push
mov
and
mov
dec
mov
adc
or
push
jb
in
sbb
pop
xchg
movb
mov
imull
mov
mov
dec
fildl
leave
mov
push
mov
out
out
adc
inc
insb
add
push
and
sub
mov
xchg
add
xchg
leave
mov
ljmp
mov
enter
out
in
jns
mov
dec
aam
test
scas
inc
lods
add
cmp
ljmp
or
data16
inc
xchg
and
movsb
xchg
add
dec
insl
sub
push
call
dec
fcmove
jg
out
lods
clc
push
xchg
pop
mov
xchg
sbb
out
das
cs
mov
test
ja
jle
add
pop
inc
add
lcall
sub
push
jo
adc
xchg
aaa
mov
push
js
or
mov
sub
sbb
aad
loopne
lods
in
scas
imulb
pushf
addr16
push
shll
add
xchg
into
pop
add
mov
in
xlat
push
sub
jns
cmpsl
mov
sub
add
popf
lret
or
std
xchg
cmpsl
cmp
mov
sub
sti
jg
xor
pop
xor
add
pop
xor
xchg
add
pop
sbb
push
mov
outsb
cmc
mov
sub
and
in
adc
sahf
ret
dec
sbb
xor
sub
call
fistpll
jge
repnz
add
pop
jmp
xchg
dec
aas
push
inc
pop
mov
and
add
jl
pop
mov
xor
add
inc
cwtl
mov
insl
add
sbb
insl
std
jg
jecxz
movsb
cmpl
add
jno
pop
fiadds
sbb
mov
mov
sahf
stos
sbb
add
mov
add
outsl
fildl
xchg
adc
adc
add
stos
loope
sbb
es
inc
add
fmull
and
xchg
push
nop
adc
movsb
xor
lcall
add
push
mov
mov
inc
call
xchg
fs
dec
shr
adc
imul
loop
mov
adc
orl
inc
pop
inc
mov
mov
cmc
js
add
add
push
scas
je
xchg
rcl
pop
js
cmpsl
mov
nop
cmpsb
insl
in
mov
int
bound
pushf
adc
inc
push
das
add
mov
gs
sahf
andl
or
scas
add
mov
add
sbb
cs
sbb
jb
jnp
out
mov
add
shr
xchg
pop
jecxz
add
jecxz
jmp
test
and
mov
add
sbb
cmc
incl
lock
out
cmp
je
push
add
scas
jbe
js
imul
pop
cmpsb
cltd
stos
or
imul
dec
push
negl
jmp
jle
mov
push
xchg
adc
xchg
pop
out
pop
inc
sbb
in
cmp
out
add
mov
adc
in
mov
adc
add
mov
arpl
enter
cmp
add
sti
push
sub
add
mov
bound
add
or
shlb
jl
jecxz
lret
adc
add
add
ljmp
iret
fnstcw
jmp
or
mov
icebp
add
in
add
adc
xor
in
ds
jo
sub
lahf
repnz
add
lock
aam
cmpsb
or
js
imul
adc
stos
push
pop
andb
in
cmpsb
loope
xor
xor
add
push
xchg
lea
inc
fnsetpm(287
mov
dec
out
rcrl
ljmp
pop
inc
cmpsb
stc
ficomps
popf
stc
cmp
pop
jmp
scas
mov
add
pusha
sub
lret
xchg
dec
ljmp
cmpsb
mov
clc
sti
dec
aas
sub
add
add
xor
out
scas
je
je
ds
pop
xchg
inc
pusha
cmp
xor
popa
mov
movsb
jbe
es
stos
rolb
mov
stos
mov
clc
add
add
popa
addl
jecxz
cmp
jg
xor
mov
in
ss
movsl
sahf
add
in
cmp
push
add
mov
add
xor
xchg
add
mov
cmp
adc
jne
jle
push
jecxz
lods
adc
mov
dec
mov
jnp
mov
mov
mov
test
or
mov
mov
mov
incl
add
jmp
popl
add
ret
jns
inc
ljmp
jns
add
std
cmpsl
pop
mov
je
enter
fwait
add
insb
sbb
lret
jg
dec
xchg
lea
mov
xchg
mov
push
adc
add
jo
jmp
ret
push
lahf
scas
adc
std
add
dec
js
stos
loope
fldl
mov
lds
cli
cmp
loopne
push
jnp
aaa
pop
iret
stc
mov
jo
repz
dec
dec
mov
daa
xor
cmp
mov
mov
cmpsl
scas
inc
fs
xchg
pop
in
jl
and
add
ja
mov
stc
mov
sub
lcall
mov
xor
mov
stos
add
lret
out
add
shlb
push
sbb
pop
loop
inc
movsl
add
imul
std
add
xor
popa
add
fwait
sarl
data16
insl
lcall
ds
xchg
jl
aaa
pop
cmp
bound
js
push
addl
subb
pop
xchg
pop
inc
add
and
out
lea
sahf
mov
loopne
lahf
xorl
testb
orl
push
jl
add
scas
mov
rcll
out
mov
cmpsl
les
jmp
fdiv
inc
xor
lahf
push
mov
into
popl
xor
aad
add
in
mov
les
dec
aam
add
adc
push
test
or
jl
jbe
push
cmp
aad
mov
mov
mov
shrb
rorb
push
inc
mov
pop
incb
fdivs
add
add
das
mov
clc
inc
add
xor
add
rcr
inc
movsb
push
loopne
out
sbb
mov
js
sahf
add
bound
pop
mov
mov
add
shl
dec
xchg
add
pop
lods
repz
add
nop
xor
sbb
mov
add
test
pusha
rol
add
mov
xlat
jne
add
push
and
movsl
roll
aas
push
push
mov
xor
add
add
in
sbb
cli
adc
pop
mov
xchg
stos
ja
faddl
test
mov
sbb
shlb
iret
insb
test
jge
inc
push
cmp
insb
lods
arpl
fcmovnu
dec
add
stc
adc
sbb
dec
add
cmp
cmp
sti
clc
dec
sbb
inc
sbb
call
int3
negl
arpl
loop
jae
xor
lock
fwait
jb
insb
add
repz
adc
popa
add
jg
arpl
lahf
inc
jge
fimuls
xor
ss
ss
adc
movsb
add
add
xchg
fisttpl
scas
fiaddl
add
repnz
jge
ja
mov
cmc
lea
inc
cli
pop
and
pop
lds
mov
jecxz
xchg
orb
enter
jns
loopne
and
pop
sar
movsl
mov
movsl
clc
jecxz
fisttpll
mov
and
sbb
push
and
xchg
and
ret
stos
lds
inc
xor
xlat
lds
add
inc
aas
mov
sbb
dec
out
mov
dec
pop
arpl
jmp
push
bound
icebp
push
pusha
stos
inc
arpl
add
cmp
or
addr16
arpl
ljmp
aad
mov
out
jne
arpl
mov
cmp
add
jg
mov
cmp
mov
and
out
and
test
or
add
data16
lea
stc
push
add
mov
xlat
ljmp
popa
jno
add
or
cmp
sub
stos
add
and
ret
or
je
sarb
pop
push
and
sbb
inc
sti
add
push
cmp
shlb
xchg
outsl
pop
cmpsl
dec
xlat
insl
push
add
mov
mov
cmp
add
push
mov
out
sub
add
cmp
adc
cmpsl
xor
xchg
cwtl
inc
ds
lcall
add
icebp
bound
std
mov
rclb
sbb
jp,pt
and
add
lods
mov
pushf
ret
jl
fwait
cmp
add
inc
add
push
or
lock
dec
rcrl
aas
cmpsb
cld
out
add
sahf
add
cwtl
je
xor
insl
addb
es
sbb
jae
imul
jmp
jmp
enter
cli
cmp
cwtl
ret
in
cmp
mov
push
jne
pop
movsb
outsl
add
jp
sbb
sub
xchg
shl
inc
sbb
or
stos
repz
sbb
add
adc
vmovaps
test
xlat
mov
nop
inc
fs
ss
jb
fnsave
dec
mov
je
daa
cmp
push
sbb
xor
cltd
mov
cli
sub
je
lods
scas
mov
rolb
mov
sub
pop
add
cld
sub
imul
test
inc
dec
jle
fs
add
sar
sbb
loopne
subb
add
add
std
cwtl
in
scas
movl
push
mov
call
or
mov
or
jb
out
popf
and
shll
fsubrl
and
inc
mov
xchg
pusha
inc
xchg
adc
pop
fcoml
cmpsl
aam
mov
repz
mov
jle
inc
sub
fwait
daa
pushf
into
pop
outsb
mov
pop
inc
mov
aas
xor
js
jecxz
ret
lret
cmp
xchg
clc
pop
jb
repz
sub
add
mov
push
push
adc
test
add
dec
push
mov
xchg
mov
push
pop
inc
jp
test
call
out
outsb
pop
mov
or
or
xor
fs
clc
jmp
add
sbb
mov
or
mov
xorb
pop
imull
cmp
push
or
cmp
insb
pop
pusha
add
cmpl
and
repnz
rcpps
shl
js
or
push
dec
gs
incl
pop
aad
jl
out
ja
cmpsl
sub
popa
gs
add
inc
dec
fimull
add
scas
push
por
dec
jl
imul
daa
pop
dec
cs
pop
xor
pushf
movsl
jno
addb
add
add
in
ds
outsb
int3
add
aad
rolb
inc
and
add
add
jns
bound
xchg
fprem
int3
dec
push
or
mov
xchg
in
dec
jo
mov
mov
add
mov
js
push
stos
ljmp
xchg
inc
test
xor
lds
ret
arpl
sbb
imul
pop
clc
and
lret
or
dec
jmp
repnz
iret
incl
sub
jnp
add
sub
sub
movsb
std
addr16
test
mov
cmpsl
or
xor
repz
lds
adc
inc
insl
jne
rcrb
loop
or
and
out
mov
cmp
nop
jl
lea
test
add
xor
rolb
mov
in
add
or
xsavec
fiadds
or
adc
fsubr
sbb
pop
loope
iretw
std
or
sbb
mov
ret
hlt
mov
pop
add
xor
add
push
xor
or
pusha
add
add
add
add
and
call
mov
shl
dec
cwtl
icebp
lahf
ljmp
mov
pop
mov
push
mov
or
pop
xchg
mov
push
mov
aaa
or
inc
jle
movsl
or
in
stc
adcb
mov
dec
cmp
mov
xchg
jne
and
aaa
fwait
mov
jae
add
sub
stos
xchg
aaa
cmp
cltd
gs
ds
enter
mov
imul
add
xchg
inc
push
sarb
test
testb
jnp
xor
jecxz
jle
in
lock
imul
loopne
mov
icebp
add
adc
clc
and
inc
xor
fmuls
xor
outsb
lods
xchg
jmp
mov
mov
cmp
add
fidivs
rorl
mov
dec
dec
cs
rcrb
cmp
call
push
popf
push
jg
adc
movsl
lret
lock
push
mov
mov
into
push
cli
add
lock
xchg
xchg
add
mov
ja
lods
push
cmc
jbe
adc
rcrb
ljmp
lret
pop
jno
mov
jbe
cli
stos
cwtl
xchg
sub
xor
repz
mov
in
add
imul
jno
je
sbb
pop
std
add
scas
imul
fs
cwtl
mov
ljmp
xchg
sub
cmp
cmp
movsl
mov
es
inc
jns
pop
js
ret
pop
fistpl
dec
repnz
shrb
and
add
ds
add
scas
les
out
daa
pop
xchg
add
imul
out
dec
mov
or
xchg
lahf
aam
stos
cmp
stc
sub
fisubl
sub
and
and
push
out
cmpsl
lret
sbb
or
in
loopne
mov
dec
inc
loopne
int
or
mov
mov
push
aad
sbb
aas
pop
or
dec
stc
test
leave
testl
loopne
sbb
mov
mov
sbb
sub
bound
inc
add
out
imul
push
add
jbe
add
andb
add
cmpsl
icebp
jb
mov
add
mov
ja
arpl
pop
in
add
or
bound
js
jns
inc
sahf
ljmp
decl
into
popf
cmp
fdivp
mov
rorb
jp
scas
fcoml
adcl
arpl
add
in
jne
aam
in
add
aad
clc
mov
dec
in
jle
testb
popf
fdivrs
dec
or
cltd
inc
test
add
adc
adc
in
add
xor
pop
out
inc
xlat
leave
push
and
es
pop
aaa
or
insl
jno
jno
mov
fiaddl
mov
inc
push
push
add
xor
add
adc
sub
mov
loope
std
shl
pop
lret
and
add
jmp
sub
repnz
push
int
push
push
xor
in
data16
std
push
out
hlt
jbe
sub
mov
add
jge
sub
and
add
xor
jecxz
xor
add
fs
push
xor
dec
add
cmp
add
lret
movsb
mov
rorb
add
sti
xor
mov
rclb
or
adc
or
std
sarb
add
dec
pop
and
fldcw
sbb
repz
cmp
mov
cmpsl
mov
xchg
aam
sahf
out
xlat
mov
cmp
and
sub
jl
sbb
push
imul
mov
or
lods
in
and
push
dec
fwait
dec
inc
inc
xchg
push
jmp
add
movsl
or
adc
xor
sahf
insb
js
fcmovnu
sbb
jne
aas
lea
sbb
cmp
adc
nop
ja
stc
fists
mov
pop
pusha
xor
cltd
loopne
pop
int3
test
adc
cld
in
inc
pop
loop
out
out
dec
hlt
ss
sub
sti
add
sub
inc
jo
push
aad
rcrl
push
scas
jmp
add
mov
xchg
xor
xor
cmc
iret
mov
adc
or
dec
mov
cmc
jmp
and
or
add
mov
mov
stc
loopne
add
adc
sbb
ret
cltd
adc
pop
lods
popa
fdivr
fs
xor
lods
aad
stc
push
push
jno
arpl
jo
cmp
add
pushf
arpl
scas
test
sub
gs
lret
mov
gs
fsub
add
lea
push
mov
add
sub
pop
inc
push
mov
adc
sbb
mov
fnstenv
xchg
lods
mov
xor
icebp
inc
dec
xchg
mov
pop
xchg
call
inc
xchg
std
mov
xchg
mov
test
cmp
and
add
dec
sub
mov
jl
jl
cmp
cmp
inc
popf
jnp
sbb
pushf
jmp
mov
sti
and
pop
cmpb
push
lcall
mov
or
pushf
int
adc
inc
sub
add
pop
pop
cmc
cmp
bound
sub
add
jo
js
add
sub
insb
adc
xor
add
pushf
sub
pushf
mov
ficoms
hlt
add
int
pusha
ret
bound
jnp
sbb
push
add
adc
pop
arpl
fs
aaa
or
gs
xor
or
add
imul
inc
jge
inc
sbb
fstl
fs
cmc
sbb
lahf
rcrl
pushf
add
shl
leave
sbb
leave
inc
lods
cld
xor
pop
mov
add
dec
mov
add
lock
and
and
aaa
adc
arpl
cmpsl
pop
rcll
jp
or
lcall
addl
add
rorb
add
cmc
aas
int3
enter
adc
pusha
mov
cmpsb
push
adc
rcrl
addr16
add
lea
add
int
lock
jb
jmp
in
push
fisttpll
mov
lods
or
add
sbb
out
push
pop
sub
call
hlt
sbb
xchg
xchg
push
jns
in
add
xchg
imul
cmc
fwait
icebp
add
push
add
or
dec
cmp
out
xchg
das
inc
outsb
xchg
fwait
addr16
daa
mov
in
jl
add
repnz
jmp
mov
loopne
or
cmp
sub
pop
adc
push
fistps
jno
cmpsl
icebp
add
adc
cltd
add
outsb
mov
add
dec
loop
jo
roll
add
ficoml
add
inc
add
sbb
fldenv
imul
sub
cmp
insb
in
dec
and
xor
inc
dec
roll
push
mov
cs
das
jne
push
cld
jmp
cltd
aaa
add
and
push
pop
jl
repnz
add
sbb
scas
fwait
and
aad
shrl
shrl
add
jp
or
pop
pop
jge
pop
negb
add
pop
pop
cmpsb
pop
daa
je
fimuls
inc
xchg
fcmovnbe
fsts
out
dec
mov
ret
aad
add
cmp
xor
inc
fdivs
jg
inc
jns
push
push
add
adc
add
pop
addl
push
repz
lret
into
cmpb
or
pop
hlt
imull
xlat
mov
sbb
or
lahf
cld
ljmp
sbb
rcrb
test
icebp
add
jmp
mov
pop
fidivs
int
or
jo
lea
push
xlat
jb
sub
adc
in
add
fdiv
jno
rcrl
mov
and
lock
adc
push
lds
adc
vshufps
mov
pusha
push
nop
add
pop
and
movsl
add
or
cmp
sbb
push
jb
add
fcoml
sbb
ror
sub
and
sub
pushl
mov
ds
in
into
scas
adc
add
add
fimuls
add
add
fs
aam
push
jl
cmp
mov
add
xor
stos
outsl
mov
xchg
outsb
jp
sbbl
iret
imul
and
add
add
mov
xor
and
mov
les
sub
repz
add
pop
inc
mov
push
fwait
clc
mov
add
cmpsb
jae
mov
push
xorl
test
jae
loope
pop
add
popa
lods
mov
xchg
push
push
dec
es
or
or
jl
repz
icebp
mov
mov
fs
in
cmp
sahf
mov
add
fbld
add
add
jg
add
ljmp
jne
mov
sbb
insb
test
repz
je
out
test
inc
and
int
push
int
pop
mov
add
hlt
dec
test
jle
jmp
sub
adc
xor
ret
or
pushf
sbb
dec
sbb
fsubrs
lcall
add
scas
ret
mov
push
xor
pop
sub
inc
push
out
inc
das
mov
fstps
js
lods
repz
cmpsb
out
inc
addr16
imul
mov
addb
lcall
cltd
daa
add
je
add
add
pop
std
add
ds
xor
cli
push
lock
or
iret
shll
cmp
jecxz
mov
clc
fs
sub
inc
xor
shrl
add
rolb
ret
bnd
dec
popf
or
mov
es
xchg
bound
clc
test
jns
mov
in
mov
push
jge
out
adc
add
sarl
xchg
lods
pop
stos
add
notb
out
and
sbb
leave
aas
lods
loop
popf
pushf
hlt
cs
sub
dec
les
sub
fs
gs
pop
setae
ss
inc
lds
adc
pop
shrb
bound
scas
dec
xchg
and
add
add
xor
ficoml
loope
xor
shlb
sub
jns
int
clc
testl
repz
sbb
sbb
pop
mov
stos
push
int3
pop
js
inc
negb
add
xchg
call
lcall
or
sub
push
imul
lahf
test
stos
cwtl
jle
out
xchg
cmc
gs
jne
jb
cmpb
add
jae
mov
cmp
add
adc
mov
lods
mov
out
fiadds
mov
mov
add
bound
inc
popl
lret
popf
dec
imul
xor
jg
sub
sbb
inc
popa
stos
aaa
roll
mov
add
pushf
shrl
add
jne
mov
sub
fldcw
shrl
subb
and
add
add
popa
dec
cmpsl
insb
std
xor
cmovle
sbb
orl
fdivs
jl
mov
jae
push
lods
and
dec
hlt
out
add
mov
ds
int3
mov
rcll
jno
cs
add
xorl
xchg
pop
push
call
pop
push
sub
sbb
jno
mov
mov
test
sbb
cmc
shrb
incb
cmp
jo
or
dec
add
stc
and
in
add
dec
enter
cmp
sbb
add
xor
push
xor
push
jp
fcoms
sbb
ds
jmp
jns
mov
lret
repz
mov
add
xchg
push
jg
stc
aam
and
sub
test
dec
mov
push
add
addl
xchg
mov
add
ljmp
jecxz
sub
imul
movsb
add
aam
lahf
mov
sbb
jecxz
adcl
ja
inc
rcll
sbb
scas
or
lock
test
negl
or
test
mov
mov
push
repnz
cmp
ljmp
loope
or
add
mov
sbb
fisubrs
subb
icebp
inc
mov
push
fucomi
xor
add
push
in
lret
add
sub
mov
add
in
int
push
clc
lock
cmp
stos
pop
jg
test
and
mov
jmp
mov
pop
adc
mov
cmpsb
popf
add
add
aaa
fbstp
mov
enter
cmp
mov
add
sbb
mov
pop
add
push
pop
test
add
gs
sahf
or
decb
add
add
loopne
mov
imul
xchg
bound
push
mov
mov
loop
push
inc
daa
in
shlb
fsts
pop
cmc
cmp
add
pop
add
cltd
pop
call
mov
dec
mov
sbb
int
jmp
popa
xor
aaa
out
insb
add
add
dec
enter
mov
lds
inc
mov
mov
or
jo
push
xchg
add
movsb
jne
push
jle
scas
cmp
stc
xchg
dec
bnd
add
fdivl
inc
dec
lahf
sbb
mov
aam
jp
xchg
pop
das
inc
out
das
add
js
push
jnp
cmp
adc
fsubrl
lds
add
fdivrp
push
sub
add
xchg
aam
gs
fmuls
mov
xchg
inc
ds
jecxz
ss
dec
cltd
leave
sti
ja
incl
cwtl
sahf
xlat
push
add
flds
mov
aad
mov
pop
mov
inc
pop
lods
push
sbb
pop
loope
mov
pop
sbb
nop
mov
cmp
add
adc
add
jno
or
call
icebp
repz
fwait
repz
sub
fs
stc
shl
jecxz
push
insb
add
jns
add
stos
sbb
sbb
sti
sbb
add
push
sub
shl
pop
or
mov
adcl
add
jmp
push
add
rorb
roll
add
cmp
mov
jns
push
adc
push
mov
notl
int3
mov
mov
sbb
gs
mov
inc
test
aad
add
add
imul
and
xchg
ljmp
roll
dec
mov
inc
dec
jg
and
addl
lods
add
aad
jno
add
cmpsb
mov
adc
mov
cld
ja
je
jns
cs
andl
dec
and
test
cwtl
mov
cwtl
rcrl
xchg
mov
jnp
aad
fiaddl
das
pop
push
push
leave
add
sub
adc
push
cmp
ss
and
adc
mov
movsl
sub
mov
inc
ljmp
js
or
mov
aaa
xor
rol
push
push
mov
pop
scas
aad
lea
imul
inc
je
add
push
xlat
out
pop
jb
jecxz
mov
inc
or
xlat
bound
ret
xor
leave
sub
pusha
lds
mov
bound
arpl
adc
dec
addl
cmp
call
push
jge
in
scas
or
cmp
xchg
mov
rclb
xchg
adc
xchg
mov
jbe
or
inc
push
test
add
pop
test
adc
inc
icebp
push
dec
ret
mov
or
mov
leave
mov
test
xor
scas
imul
add
inc
lea
push
dec
xor
push
jae
les
lret
xor
leave
add
mov
jae
adc
mov
sub
fsubrs
lock
ret
ja
jg
cltd
ret
cmp
pop
add
adcb
add
jge
xchg
lret
lock
ficoms
mull
cmc
dec
adc
or
loop
xorb
push
jae
cs
ds
ret
sti
jnp
icebp
into
lock
addr16
inc
int3
aam
mov
dec
and
jecxz
pop
inc
or
icebp
jno
je
ffree
pop
iret
inc
pop
outsb
lret
jl
dec
jge
sub
dec
ret
inc
imul
xor
xchg
mov
sub
push
push
pop
jb
arpl
rcll
inc
add
add
leave
pop
lea
add
popl
daa
cwtl
mov
add
pop
add
outsl
cvtdq2ps
sub
pop
jecxz
push
mov
inc
add
inc
fxch
cwtl
push
sub
and
add
iret
addb
pop
lods
dec
add
popa
loope
nop
test
adc
push
aad
push
pop
jmp
push
or
gs
in
ljmp
pop
int
add
test
rorb
inc
add
stc
andb
xlat
mov
inc
push
mov
sbb
push
jl
movsl
and
jmp
inc
pop
lahf
jmp
add
and
add
fstl
roll
mov
lods
add
add
add
or
in
idivl
lret
jbe
test
inc
add
add
cwtl
xor
jl
mov
push
jp
sbb
push
ret
and
fisubs
jmp
push
cld
mov
jnp
addr16
cli
in
loop
shlb
mov
ja
arpl
clc
xchg
xchg
mov
and
mov
xchg
testl
in
test
sub
pop
shll
xor
das
cmpsb
dec
call
js
jo
xor
jae
mov
mov
or
aam
xchg
add
sbb
cmp
cmp
pop
call
lock
fdivl
icebp
mov
cmp
stos
leave
out
push
mov
adc
gs
sti
notb
std
cltd
les
out
repz
fidivrs
adc
inc
fs
addb
aad
data16
push
and
adc
subl
add
dec
pop
dec
sub
repz
in
push
data16
lret
add
mov
jge
fwait
xlat
jecxz
pop
mov
ja
cmpsb
mov
adc
sub
mov
mov
sbb
inc
les
mov
sub
pop
jns
sub
loopne
ret
aam
and
inc
mov
jmp
lcall
add
icebp
pop
push
pop
mov
dec
sbb
jmp
push
popa
cmp
inc
gs
movsl
lahf
andl
pop
sarl
dec
pop
add
cmpsb
add
xchg
shl
fisubl
cmpsb
push
add
stos
mov
gs
jg
lock
cltd
sbb
cmp
pushl
mov
add
sub
mov
push
xchg
xchg
add
add
add
fldt
jmp
outsl
adc
popa
jecxz
outsl
clc
mov
fs
jae
xchg
scas
mov
lock
aam
aaa
mov
arpl
add
xor
add
mov
rol
add
add
in
rcrb
fchs
add
sbb
sbb
push
mov
mov
adc
cmp
cli
out
mov
icebp
mov
stc
xchg
and
inc
test
nop
fadds
add
fidivs
xchg
jle
add
fidivl
add
lahf
in
dec
mov
sbb
sub
test
push
lcall
in
mov
add
dec
ljmp
dec
lcall
lods
sbb
scas
jge
mov
mov
imulb
cmp
mov
mov
loope
xchg
movb
dec
pushf
mov
xchg
outsb
cmc
sbb
and
sbb
stc
dec
stos
ds
sbb
cmp
xorb
daa
ds
push
add
cmp
mov
dec
lds
out
cli
mov
sub
adc
psrad
add
add
es
cltd
cmp
stc
sbb
aad
push
push
adc
mov
dec
nop
fsubs
aaa
or
data16
leave
loop
jo
repnz
mov
xchg
mov
mov
xor
dec
into
add
loope
fidivrs
iret
call
andb
movsb
insb
push
out
popf
adc
fcmovnb
gs
cmp
xor
push
out
test
pop
ss
mov
or
mov
aas
add
dec
xchg
jl
mov
mov
ret
in
arpl
stos
aam
adc
jns
dec
test
add
ret
adc
sbb
lahf
rdpmc
xchg
sar
cmp
test
aaa
mov
add
push
xor
push
outsl
xchg
jae
mov
mov
xor
mov
dec
sub
push
or
ljmp
iret
dec
nop
subl
rcrb
or
mov
cmp
sub
in
je
int
push
add
mov
arpl
cli
xor
ret
push
daa
cmc
add
add
mov
fucom
arpl
ljmp
sti
out
arpl
aas
loopne
dec
mov
push
mov
sbb
mov
xor
shl
int
jo
hlt
or
mov
add
cmpl
push
mov
ficomps
sbb
incl
add
shlb
adc
xor
add
in
push
pop
push
add
repnz
push
rolb
enter
sahf
mov
lret
adc
ffree
arpl
call
fld
lods
jne
js
jne
mov
push
lret
sub
je
ds
les
xchg
test
inc
mul
cmp
mov
es
or
add
ss
ljmp
sahf
sbb
mov
add
add
jne
add
call
and
rclb
sbb
aas
push
stos
mov
mov
daa
xor
dec
xlat
cmpsb
push
iret
enter
sbb
sub
add
shl
xor
call
cmp
push
add
sbb
or
cmpsl
scas
lret
sub
jo
fisubrs
jg
scas
leave
mov
jl
pop
lahf
adc
fimull
out
scas
pop
incb
cmp
xchg
test
add
loopne
add
xor
mov
add
and
aad
add
dec
add
sub
jae
data16
pop
add
cmp
outsb
lock
cltd
add
fdivrl
cmp
lret
xchg
jp
mov
cmc
sbb
xchg
push
add
lods
add
push
xor
cmp
mov
push
inc
in
ljmp
cmp
add
dec
outsl
lret
orb
inc
stos
test
mov
testb
xchg
sti
dec
lret
scas
push
fisubrl
xor
int
pusha
adc
xchg
mov
add
xor
add
xlat
or
add
push
mov
scas
data16
pop
data16
in
cmp
add
add
jecxz
dec
ss
popf
idivl
ds
mov
loop
and
pop
add
jns
pusha
lret
es
imul
add
add
lods
out
das
in
iret
int3
adc
movsb
pop
add
cwtl
aaa
jnp
inc
lock
hlt
add
add
lret
test
lods
xchg
adc
fisubrs
xchg
imul
ss
fnstsw
insb
rclb
jne
inc
inc
adc
add
push
sub
jb
mov
fidivl
hlt
icebp
sarl
or
adc
lock
jnp
xor
add
mov
mov
add
dec
call
add
dec
jbe
pop
popa
cmp
pop
add
int
cmpsl
cmp
or
fsubr
gs
fisubl
faddl
lcall
xchg
mov
test
subb
testb
add
into
jbe
inc
add
add
fmuls
dec
shrb
inc
mov
sbb
push
xor
fistps
xorb
sub
xchg
jns
push
stc
jg
aam
aam
fildll
in
roll
decb
jns
xor
jecxz
inc
and
mov
or
lret
paddq
jno
dec
jl
cmp
popa
dec
push
dec
push
push
inc
in
add
gs
xchg
icebp
inc
cwtl
dec
fcomps
or
fmull
jns
inc
leave
sub
jb
bound
cmp
lds
and
lods
stos
lret
sbb
loopne
jp
adc
jbe
sbb
pop
hlt
rolb
scas
sub
jb
or
mov
sub
sub
sub
stc
dec
add
or
call
aad
enter
in
aad
add
hlt
cld
ror
out
xor
adc
gs
insb
push
cmp
mov
or
xchg
sti
jl
jp
shll
jmp
out
sub
or
mov
ljmp
repz
int3
lock
clc
dec
mov
add
cmp
adc
addb
lods
and
imul
das
cmc
fisttps
arpl
leave
scas
fcoml
pop
ret
xor
sub
aas
adc
fcomps
sti
and
jge
add
addr16
fimuls
pop
cli
and
add
inc
pushf
inc
inc
xor
or
in
mov
push
xchg
cltd
dec
call
mov
inc
mov
jg
mov
add
and
outsl
mov
pop
mov
in
out
enter
xor
lock
jns
jae
pop
mov
shr
std
imul
pusha
sbb
add
dec
adc
push
push
jg
push
loope
pop
add
ljmp
mov
add
lods
loope
test
xchg
enter
sahf
add
cwtl
loopne
pop
divb
xchg
cmp
sub
out
and
std
inc
scas
stos
lods
clc
pop
sub
pop
dec
jle
add
inc
mov
neg
nop
jb
push
mov
bound
xor
add
add
and
fisttpll
mov
xor
rolb
sarb
lds
roll
data16
iret
fiaddl
movsb
jbe
enter
jae
dec
add
or
int
jo
or
fisubrl
popf
mov
pop
sti
out
cmp
mov
jo
pop
push
add
roll
jl
pop
inc
push
add
mov
movl
jge
popa
xor
push
mov
enter
les
out
incb
mov
push
cmpsb
je
push
mov
popa
jg
jno
fistpll
push
jne
add
fisttpll
bnd
shll
enter
insl
dec
sub
dec
int
push
aaa
pop
fidivrs
lock
popa
pusha
imul
add
add
std
sbb
xchg
xchg
xchg
jns
inc
dec
lea
jb
mov
add
jmp
inc
pop
hlt
mov
loopne
add
in
or
pop
ja
fistl
sbb
std
int3
int
scas
cmp
fistl
jle
shr
add
cmp
and
mov
push
xor
cmp
loope
add
and
add
lock
dec
add
cmp
ja
fcompl
add
loop
and
add
mov
or
sbb
aam
lret
in
ljmp
out
mov
mov
pop
dec
jnp
sub
inc
into
cmp
xor
xchg
orl
leave
ret
add
add
xor
imul
sbb
sub
mov
es
add
aaa
mov
loopne
jne
mov
lea
std
jb
push
mov
xchg
lods
mov
adcl
repnz
sti
enter
outsl
jge
stos
inc
fs
mov
jns
es
das
and
jne
stc
sub
add
adc
mov
adc
inc
sbb
mov
testb
xchg
outsb
and
bound
cmpb
add
push
mov
outsl
in
mov
jo
mov
popf
add
repnz
or
mov
daa
sbb
fidivrl
mov
nop
and
ror
and
cmc
jge
inc
inc
adc
pusha
add
lds
push
add
add
jge
add
repnz
ret
dec
mov
out
in
add
into
pop
stos
mov
adc
jno
adc
pop
lods
ja
insb
add
jle
dec
dec
fisttpll
arpl
into
js
js
pop
out
jno
mov
mov
and
push
insb
mov
shrl
and
dec
inc
loop
dec
sbb
out
pop
lods
add
hlt
pop
out
mov
cwtl
sbb
xor
divb
xchg
sub
sbb
jmp
jbe
jge
add
nop
mov
sahf
mov
sbb
aas
sub
leave
add
xchg
insb
mov
lods
in
mov
idivb
adc
imul
sbb
push
dec
add
add
inc
jb
rcll
movsl
add
lret
jl
mov
inc
cmpsl
add
in
aaa
or
jo
fists
sti
dec
cmp
jge
call
addl
add
and
push
jl
ret
out
mov
mov
shll
gs
in
add
jecxz
dec
loopne
mov
js
adc
enter
scas
and
jmp
xorl
pop
push
fsubs
adc
stc
inc
adc
xor
push
imul
imul
pop
push
sbb
fldenv
add
ljmp
sbb
add
mov
addl
sub
push
jle
add
push
mov
mov
fstpt
mov
and
jge
add
add
add
mov
xlat
bound
add
xchg
push
dec
pop
incl
sti
or
mov
pop
in
add
adc
out
repz
or
cmpsb
xor
bound
jl
add
dec
jb
mov
ret
shr
ljmp
int3
popf
push
cmp
aad
and
rcll
sub
jae
sub
mov
add
test
pusha
cmp
push
call
add
mov
in
bound
add
add
outsb
aad
add
add
mov
or
cltd
int
pop
shl
xlat
inc
lahf
add
or
test
iret
add
add
shl
push
add
cmpsl
outsl
scas
and
mov
lahf
cmpsb
jg
inc
loop
jmp
pop
xor
lea
rcll
inc
pop
data16
or
sub
push
mov
lock
cmp
mov
add
adc
jne
fsts
dec
mov
mov
aad
push
call
add
popa
or
repnz
outsl
or
add
sub
lcall
outsb
add
sahf
and
jo
add
dec
pop
rcrl
dec
add
mov
xor
sti
ds
push
cwtl
and
mov
cmc
ja
jmp
call
add
stos
rcr
cmp
aam
pushf
mov
add
imul
loop
and
pop
cmp
lods
mov
pop
stos
add
not
lock
or
clc
mov
test
adc
test
pop
pop
mov
add
jo
bound
scas
push
movsb
shlb
jbe
xlat
mov
fwait
sub
sbb
push
jp
sbb
mov
out
loope
loope
pop
jnp
add
sbb
popl
shlb
xchg
inc
fcmovb
mov
aas
xor
jbe
mov
or
mov
add
jnp
mov
ficompl
dec
xchg
roll
mov
xchg
cld
movsb
addb
cs
xor
out
popf
ja
xor
add
pop
stc
jge
mov
out
mov
and
dec
push
jno
iret
ljmp
arpl
lahf
dec
mov
xchg
jae
pop
das
pop
lds
fcomps
adc
mov
sbb
gs
jg
orl
lods
xchg
in
jbe
or
cmp
call
adc
mov
imul
cld
push
add
sub
and
jp
mov
dec
jmp
out
add
push
jne
mov
test
add
push
inc
scas
repz
or
cmpsb
sbb
or
add
lret
in
mov
bound
push
aas
jp
sbb
ret
ret
iret
mov
es
adcl
xchg
and
pop
mov
add
fidivrs
movsb
mov
shrl
add
fnsave
inc
mulb
frstor
sahf
icebp
add
add
sbb
cmpsl
jge
stos
xor
lods
mov
xor
js
cmp
cltd
or
add
xor
pusha
scas
dec
add
int3
lcall
add
dec
add
add
in
push
fdivr
adc
inc
mov
jge
ret
loop
test
aas
or
leave
fwait
imul
or
shrb
cmc
add
js
bound
jle
mov
push
cli
in
add
and
inc
insl
pop
loop
add
cmpsb
rorb
sub
gs
sti
daa
push
mov
mov
push
in
push
movsl
add
movsl
mov
sbb
out
or
mov
andl
mov
mov
mov
loop
push
sbb
lcall
add
xchg
dec
mov
sarb
or
add
sbb
jg
in
add
mov
sub
jp
mov
pop
adc
mov
cmp
xchg
test
mov
sub
mov
xor
xor
daa
push
mov
add
lcall
fldt
pushf
xor
js
pop
add
pop
jmp
ja
pop
repnz
clc
mov
cmp
dec
add
add
mov
sub
adc
push
sti
sbb
rcrb
addl
push
mov
mov
add
dec
fcomps
dec
add
or
enter
andl
fadds
push
jb
push
jecxz
inc
add
add
mov
sbb
stc
subb
repz
or
call
cmp
sub
sub
daa
repz
sub
sahf
mov
sti
jb
imul
inc
and
xchg
sbb
add
jbe
in
mov
jne
sbb
dec
push
sbb
pushf
enter
xor
jmp
add
imul
in
clc
call
daa
loope
lea
add
jmp
push
add
js
pop
and
push
jbe
pop
push
data16
sub
jb
push
sub
mov
adc
cmp
inc
push
add
dec
dec
sub
push
adc
cmp
inc
add
or
daa
insb
cmp
pop
fisubrs
dec
add
hlt
adc
mov
str
imul
je
add
into
add
push
adc
push
xor
stos
sbb
lods
fisttps
out
andb
aaa
dec
or
add
rcr
not
mov
out
mov
aam
shrb
rcr
xor
jb
nop
ss
and
jno
mov
fwait
pop
sarb
aad
imul
mov
adc
push
mov
cltd
mov
cmp
call
insl
jae
xchg
inc
or
aad
outsl
fmull
sub
inc
fimull
adc
push
adc
divl
add
dec
mov
pop
stc
daa
das
add
and
aaa
cli
cwtl
add
mov
add
mov
repz
sub
std
or
ljmp
push
add
mov
in
enter
lock
sahf
sbb
sub
add
stc
js
aam
pop
ja
imulb
sub
jne
xchg
add
ret
in
add
mov
jle
cmp
cmp
sahf
add
repnz
cmc
ret
sahf
adc
subb
add
jne
add
jne
flds
ss
movsb
ljmp
test
or
add
jg
inc
pop
and
lock
push
mov
push
mov
cmp
sbb
aas
fisubs
int3
adc
or
mov
jecxz
cmpb
add
mov
jecxz
test
jp
adc
or
mov
into
xchg
andl
inc
mov
cmp
jecxz
subb
xor
adcl
pop
inc
push
jle
fiaddl
add
jmp
ja
add
and
jge
xchg
jge
or
and
push
je
xor
push
mov
xchg
leave
pop
adc
std
mov
pusha
inc
jp
leave
out
lods
sub
imul
cmpsl
int
repnz
mov
inc
enter
mov
aaa
hlt
mov
popa
inc
add
push
cmp
push
add
mov
mov
add
imul
add
cs
fsubrs
test
push
and
add
sub
xor
pop
int3
insb
add
inc
cmc
add
xchg
mov
scas
iret
dec
hlt
shll
xchg
lds
dec
xchg
add
jmp
outsl
add
cmpsl
in
pop
fcmovne
aam
adc
popa
in
mov
pop
push
out
cs
dec
xor
mov
push
mov
out
popa
xor
xchg
adc
enter
fcmovnbe
cmp
push
mov
movsl
jmp
xor
test
mov
add
sbb
add
inc
js
or
es
sbb
divl
cmc
icebp
xchg
or
lock
lock
jecxz
lock
jle
cld
cmp
aaa
in
cmp
jns
add
loopne
adc
xor
add
fcoml
sub
aaa
stos
hlt
mov
mov
mov
pop
ret
jae
out
add
stos
shll
call
mov
mov
outsl
mov
add
mov
stc
stos
add
cmpl
enter
fstp
jge
add
dec
and
clc
cmp
add
add
push
insb
in
pop
in
inc
mov
xor
sbb
sbb
ret
outsb
add
push
in
lahf
xchg
lods
loopne
or
fwait
sub
scas
outsb
repnz
nop
addl
jp
push
and
pop
dec
mov
jge
xlat
push
sub
sbb
lcall
cli
dec
mov
aas
ss
add
adc
aad
add
int
popa
xor
dec
mov
add
lret
mov
add
or
fdivr
stos
fcmovu
idivl
add
andb
push
test
ret
outsl
mov
popa
out
or
cmpl
add
pop
xchg
mov
shll
scas
adc
rol
xchg
gs
rcll
inc
pop
cmc
outsb
enter
rorb
jl
data16
sub
inc
add
stos
add
int3
shll
xor
jae
outsl
inc
repnz
dec
or
adcl
pushf
arpl
ljmp
stos
cld
aaa
or
add
jecxz
rolb
xchg
ja
ljmp
xchg
test
rcrb
clc
xchg
fidivs
mov
pop
jmp
jno
lahf
clc
sbb
mov
imul
xchg
xchg
rorl
jg,pn
mov
sub
add
mov
rolb
icebp
aad
mov
cld
fisubrl
push
shll
add
jno
mov
ficoml
xchg
jne
inc
or
cmp
cmp
add
aam
add
fistl
inc
nop
sub
stos
jo
lods
loope
and
in
ret
adc
addl
dec
lahf
gs
add
and
movl
in
cmpsl
fwait
add
fldenv
xchg
push
mov
popf
mov
or
out
mov
ss
mov
cmp
movsl
inc
stos
push
and
inc
rorl
mov
aaa
outsl
xchg
xchg
xchg
push
repz
xor
and
xchg
push
pop
outsb
xchg
cld
adc
add
cmp
test
mov
mov
lea
dec
and
xchg
and
add
cld
mov
fsubs
movsb
pop
push
adc
clc
mov
add
add
xor
cmc
add
xchg
mov
lods
cmpl
repz
or
add
push
xor
arpl
add
leave
add
mov
xchg
lods
mov
xlat
sub
cmp
fisubl
xor
mov
filds
xor
aad
adc
sbb
cmp
mov
add
out
sub
outsb
push
jb
icebp
inc
cltd
jp
mov
add
icebp
enter
mov
gs
sub
xchg
lods
dec
sti
cmp
sbb
add
jecxz
repz
add
inc
or
fistl
and
aas
in
add
xorl
sub
testb
adc
aad
addl
nop
in
imul
adc
mov
push
das
inc
push
std
push
push
imul
es
pop
mov
add
add
outsb
and
pop
test
testl
cli
fisubrl
inc
adcl
or
jmp
jmp
test
adc
outsb
cmp
and
xor
mov
fimuls
inc
xor
sub
xchg
push
ljmp
aam
cld
jmp
fnstenv
or
dec
add
push
sub
shlb
scas
dec
jno
repnz
sahf
aam
add
inc
int
add
mov
out
push
mov
add
arpl
adc
popa
addr16
js
pop
inc
sub
shlb
mov
xlat
hlt
out
clc
in
lods
sbb
cmpsl
inc
pop
sarl
add
pop
sub
add
loope
add
mov
repz
adc
add
mov
lock
cmp
faddl
cmp
mov
inc
sti
ret
xor
repz
jmp
dec
jmp
adc
mov
add
add
cmpsb
inc
push
and
inc
lahf
movsb
in
add
out
or
sbb
fstps
scas
js
and
sub
ds
push
fs
loope
add
push
pop
mul
test
sub
rcll
sub
add
insb
icebp
daa
push
mov
mov
or
aad
jae
test
rolb
mov
add
pop
add
push
addr16
add
test
sbb
jecxz
mov
cmc
and
inc
add
mov
popa
jo
jb
push
loope
jl
data16
jecxz
or
loope
fnsave
fwait
pop
sub
movsl
sbb
fs
outsl
mov
das
mov
inc
inc
mov
xchg
mov
in
mov
aad
sub
jbe
pop
or
movsl
xchg
out
jl
add
frstor
push
loopne
fwait
into
adcl
sbb
jecxz
into
fcompl
push
out
fchs
pop
xor
push
loopne
or
mov
mov
sti
dec
out
andb
mov
int3
jo
sbb
cmp
push
lret
and
lahf
fadds
repz
in
xor
add
lock
xor
jp
add
add
mov
pop
cmp
outsb
add
xchg
movsb
adc
jb
out
push
ja
out
aam
lret
inc
js
push
and
in
fwait
in
mov
add
test
or
loopne
xor
add
testb
fs
xlat
arpl
cmp
mov
mov
add
adc
jmp
fnsave
add
jecxz
in
mov
loop
jne
push
and
loope
add
dec
gs
push
adc
xor
loop
pop
add
enter
and
xchg
add
loop
mov
and
roll
add
mov
xor
sub
out
mov
fidivrs
stos
mov
or
mov
loope
add
or
mov
sub
leave
cmp
js
mov
aaa
jg
test
add
sbb
add
les
jae
mov
cmp
movsl
aaa
push
bound
test
lret
in
xor
das
push
mov
test
add
movsl
add
rorl
cmp
mov
mov
jnp
ret
testl
inc
mov
xchg
and
add
movl
addl
jnp
dec
mov
ret
inc
push
repnz
in
push
adc
mov
adc
stos
mov
sti
mov
dec
sub
add
loope
mov
sbb
lock
arpl
dec
add
cmpsl
call
push
test
scas
fs
push
jecxz
ficoml
sbb
and
push
clc
mov
pop
outsb
and
mov
enter
test
insb
outsl
mov
in
mov
daa
add
or
jae
das
push
fcmovnu
pop
adc
xor
cmp
inc
aaa
add
or
in
idivl
ss
mov
push
mov
dec
push
mov
out
mov
jecxz
in
push
xorl
add
lret
add
sub
inc
loope
or
dec
insl
ss
cmp
push
sbb
dec
icebp
xor
cmp
mov
rol
fsub
dec
jle
inc
or
fs
sub
lret
cs
mov
lods
test
add
ja
add
jne
lcall
jmp
lret
mov
add
rcrb
mov
adc
push
push
cli
pop
and
pop
ja
xor
and
add
xlat
mov
out
pop
add
popf
ret
mov
mov
inc
add
mov
fisttps
scas
xchg
mov
push
mov
mov
movsb
mov
stos
mov
daa
nop
pop
xchg
fstpt
add
loope
in
push
add
and
dec
jne
mov
movsl
mov
out
jecxz
out
mov
rolb
mov
and
jg
fmul
fsubrs
push
and
adc
add
jbe
imulb
mov
add
call
push
popa
pop
add
add
add
cmp
sub
mov
adc
shlb
mov
jl
in
inc
jo,pn
dec
add
cmp
fisubl
pop
inc
popf
js
and
lds
xor
das
adcl
int3
add
add
data16
add
scas
add
cmp
dec
or
cmc
test
dec
add
xor
mov
dec
mov
xchg
push
push
mov
xchg
test
jnp
loope
push
in
mov
adc
movl
cmp
cmp
movsl
jmp
cmp
cld
data16
sub
lock
stos
dec
hlt
aas
pop
sub
in
pop
jg
aas
push
push
int3
movsl
or
mov
addr16
mulb
sub
ret
add
cmpsb
sub
ljmp
mov
or
push
or
add
xchg
nop
dec
add
xchg
mov
inc
cmp
sub
sub
outsl
add
push
pop
pop
lds
pop
subb
push
xor
mov
push
insl
inc
and
shlb
inc
jo
leave
sub
sub
cmp
dec
xchg
jbe
call
addb
cmp
shl
sbb
mov
aas
dec
data16
arpl
pop
stc
arpl
mov
inc
add
xor
add
mov
add
addr16
cmp
sbb
mov
fsubl
mov
jo
xchg
and
xlat
dec
lret
je
loop
sbb
filds
add
lock
cmp
sbb
cmpsb
jno
or
fstps
ret
adc
push
mov
roll
pop
mov
test
popa
sub
jbe
repnz
push
jbe
xchg
aam
xor
pop
push
vpunpckhqdq
testl
xchg
push
add
in
repz
add
inc
int3
xor
dec
push
stos
push
lea
sbb
rcrl
and
mov
mov
movsl
or
andb
pextrw
psrad
imulb
pushf
dec
lcall
add
add
dec
cld
add
mov
leave
loope
js
mov
cmpsb
movsb
ficompl
jecxz
add
cmpsb
jge
les
jp
cs
xor
or
push
sub
stos
mov
sti
jno
in
cmp
mov
push
mov
pushf
sbb
addb
jbe
jb
xor
sbb
nop
adc
jmp
insl
icebp
cmc
int
add
cmp
negl
rclb
mov
cmp
add
lret
push
mov
jb
fistps
push
addb
arpl
dec
insl
jecxz
lldt
mov
cli
adc
cmpsl
mov
or
mov
push
ja
add
je
cmc
adc
rcll
movsl
xchg
add
call
and
int
or
lods
inc
mov
mov
fistpll
jb
cmp
sub
dec
mov
inc
notb
sub
in
loop
incb
into
fmuls
pop
add
cltd
orb
ficoml
sub
cs
add
out
in
sbb
add
add
hlt
add
mov
xor
xorl
inc
jecxz
jge
mov
jl
mov
xor
push
fildll
int3
mov
mov
inc
cs
btr
add
add
pop
xchg
icebp
or
add
push
daa
xor
daa
fidivrs
adc
add
add
stc
xchg
add
xchg
cmp
cmpsb
mul
sub
sbb
lea
xchg
and
sub
add
aas
arpl
inc
cmpl
inc
cmp
adc
call
add
add
jne
push
int3
and
cmp
in
pop
mov
decb
lahf
inc
loope
adcl
out
loop
repnz
mov
push
inc
call
or
add
out
add
addr16
lds
fmul
xchg
mov
dec
ds
or
mov
das
push
in
add
test
mov
popf
add
mov
or
sub
cmp
jae
jle
mov
push
in
xchg
inc
inc
mov
and
clc
cmp
repz
dec
add
jne
mov
and
out
adc
inc
push
sbb
daa
lret
jnp
iret
aam
adc
sbb
and
add
fildll
adc
pop
inc
lret
outsl
fisttps
mov
sub
lret
mov
add
pop
loop
sbb
insl
add
cmp
add
xchg
lret
outsl
pop
or
stos
adc
cs
movl
test
loopne
lret
add
pop
icebp
clc
add
cltd
sub
outsb
cld
insl
add
or
jg
push
add
cmpsb
add
xchg
xor
cmpsl
int3
jmp
add
nop
mov
push
jo
pop
lods
add
or
pop
jne
push
adc
in
lahf
loopne
add
pop
mov
adc
repnz
fwait
into
xchg
cmp
aam
call
outsl
push
mov
push
and
stc
or
and
cmpsl
dec
sti
mov
test
cmp
mov
jl,pn
iret
sbb
pop
xor
jecxz
aaa
rorb
jle
mov
scas
inc
mov
mov
sti
lea
push
add
ret
pop
int
outsl
jl
lock
push
dec
aas
add
js
adc
cmp
mov
mov
mov
pop
and
pop
ficompl
adc
fstl
mov
stos
adc
push
mov
sbb
jbe
cmpsl
jp
cwtl
sub
aas
pop
push
bound
lods
fwait
add
add
loop
test
add
adc
leave
jo
ss
xchg
pop
lea
add
mov
add
and
xchg
leave
ds
aad
jno
xor
leave
out
dec
mov
into
adc
mov
sbb
jecxz
add
jo
idiv
or
cmp
cmc
in
mov
hlt
jns
pop
add
jmp
mov
cli
divl
jo
imul
add
push
lret
xchg
fcmovne
dec
add
clc
mov
les
push
loopne
loop
add
ret
add
mov
outsb
add
mov
push
dec
cmp
pusha
add
outsl
add
cli
addl
mov
mov
ja
js
pop
add
popf
mov
adcl
js
ficoms
jne
es
insl
mov
ljmp
ljmp
pop
scas
icebp
mov
adc
cmp
lds
or
push
add
dec
rcrb
xchg
mov
push
aaa
xchg
hlt
and
push
into
jb
out
andb
mov
adc
sbb
add
jp
lods
push
jo
xchg
mov
inc
out
loop
add
and
orb
add
lret
cli
pop
pop
das
jmp
roll
xchg
inc
fsubrl
mov
arpl
lods
fsts
out
movsl
add
mov
pop
or
mov
iret
scas
enter
adc
and
fidivl
sbb
mov
mov
stos
mov
daa
jbe
mov
mov
das
out
add
cmp
push
sbb
adc
lret
inc
push
in
retw
stos
out
dec
rolb
mov
inc
and
jecxz
loop
jp
xchg
xor
mulb
pop
add
ds
arpl
pop
and
lcall
jmp
xchg
cmp
mov
mov
dec
sahf
ret
je
ja
jmp
imul
testl
insl
repz
jo
or
xchg
pop
sbbl
dec
aad
jp
sbb
xor
add
mov
mov
mov
loop
leave
inc
xchg
cmpsb
add
loop
xor
add
stos
aad
insb
push
out
mov
and
pop
outsl
scas
fsub
xchg
iret
out
add
out
xor
out
or
lret
cwtl
rclb
adc
lds
add
cld
rorb
pop
sbbb
and
mov
xor
ja
dec
and
fstpl
add
mov
cld
mov
aam
inc
insl
add
fisubrs
add
shl
pop
add
or
add
dec
fldl
out
out
or
add
add
mov
mov
sbb
add
out
fsts
mov
push
or
loopne
jmp
ret
imul
or
or
add
push
in
or
jmp
sahf
gs
dec
jp
stos
cmp
ss
add
jge
push
popa
or
add
sbb
xchg
adc
lret
add
push
iret
int
fcompl
sub
jecxz
aaa
mov
xor
in
pop
imul
mov
and
xchg
xchg
mov
or
sbb
mov
cmc
lcall
mov
push
push
jle
add
sub
pop
fldt
cmpsb
cmp
push
insb
add
lock
call
aad
mov
xor
je
dec
test
add
or
add
fisubl
mov
movsl
call
shl
bound
xor
push
xchg
add
add
or
xchg
mov
out
sbb
lret
and
inc
scas
scas
gs
pop
pop
add
jno
cmp
fwait
pop
jle
fs
mov
sbbl
call
lea
inc
pusha
mov
insl
stos
xchg
add
add
leave
es
out
xchg
outsl
loop
aas
rclb
or
xchg
add
lret
xchg
adc
stos
xor
cwtl
pop
push
roll
or
fs
cld
xor
pop
xchg
xor
add
cmp
sbb
movsl
xchg
loope
adc
je
sub
mov
imul
jbe
pop
and
mov
in
or
fwait
pop
cmp
aas
mov
adc
mov
mov
aaa
sbb
nop
arpl
mov
xchg
jle
jns
mov
xor
mov
lods
jmp
inc
mov
popf
add
in
sub
mov
cwtl
add
scas
mov
inc
xchg
jo
mov
test
mov
jmp
cwtl
xchg
or
inc
pop
js
xlat
aam
and
bound
les
jo
xor
arpl
jp
push
add
add
cmp
and
and
adc
jno
jl
call
fwait
sub
sub
add
mov
mov
icebp
jnp
cmp
xor
mov
add
jmp
mov
mov
xor
popf
sahf
cld
inc
sub
inc
add
add
int3
xor
or
mov
jmp
cmp
add
add
stos
jp
jp
out
add
and
jecxz
xor
push
enter
jmp
adc
push
or
xor
out
stos
lcall
add
add
inc
aam
sbb
push
lea
mov
aad
out
add
xchg
scas
adc
repz
arpl
mov
jl
add
fmull
pop
add
add
aaa
das
xlat
xlat
or
jl
loopne
sub
sbb
dec
push
mov
sbb
hlt
out
xor
xchg
push
adc
ja
lods
add
and
sbbl
and
aad
pop
fwait
mov
inc
jne
sub
jle
or
mov
inc
sub
leave
adc
cmpsb
insb
push
xchg
mov
dec
and
add
fsts
add
add
xchg
aaa
and
sub
imul
jg
xor
mov
mov
jp
inc
push
push
aas
out
pop
dec
cmpb
repz
loopne
xchg
push
add
inc
sarl
pop
mov
pop
imul
lea
mov
pop
dec
dec
add
or
in
push
aam
lock
xor
jg
sub
xchg
xchg
add
xchg
mov
inc
scas
add
dec
in
adc
xchg
xor
add
jbe
hlt
imul
add
lahf
add
sub
movsl
mov
xor
adc
mov
mov
push
add
fs
xlat
clc
sti
push
clc
mov
ljmp
mov
xchg
mov
ret
addr16
add
shrl
add
out
xchg
pushl
insb
je
enter
imull
ljmp
fistl
lret
jo
call
fcomps
in
pushf
push
cmp
xor
cld
js
mov
sahf
test
inc
adc
inc
mov
fwait
popa
ss
cmc
fnstenv
add
push
xor
adc
stos
in
jecxz
jge
cmp
fdiv
sahf
pop
aam
mov
repnz
mov
mov
dec
gs
cwtl
jo
rolb
jae
add
jbe
rolb
lds
push
sti
sbb
dec
mulb
inc
add
fdivr
push
add
mov
and
dec
sub
add
or
and
xor
fldl
ficoms
loop
dec
or
dec
insb
imulb
cli
ret
add
cmp
lret
inc
and
mov
ja
popf
pop
push
mov
lods
or
pop
fxch
or
mov
and
push
jno
dec
adc
fcomps
fdivrs
add
outsb
inc
nop
rorb
stos
add
add
movsl
mov
and
mov
enter
adc
inc
add
shrl
test
fisubl
push
jns
jmp
shll
add
fbstp
sbb
dec
push
add
inc
int
scas
sbb
and
jp
inc
xchg
pop
lcall
ret
mov
mov
add
and
adc
sbb
testb
js
ret
jge
add
add
stos
mov
imul
pop
inc
in
in
pop
mov
fistl
repnz
pop
ljmp
aam
test
jp
mov
xchg
add
jnp
arpl
add
add
dec
fsubrs
xor
dec
mov
pop
popl
push
pop
push
sbb
xchg
sub
and
push
mov
rclb
or
push
jae
xor
arpl
pop
adc
add
jp
cmp
and
cltd
pushf
pushf
fwait
loop
sbb
push
push
pop
add
or
jne
test
lods
stos
add
mov
sub
mov
pop
lds
loopne
lret
push
lea
sub
cwtl
pop
shlb
cmpsl
jp
out
add
and
and
dec
pushf
jb
fisubrs
addb
pop
ss
mov
ljmp
lock
xchg
stos
ss
mov
add
sti
add
movl
ljmp
and
lods
inc
mov
lods
leave
mov
add
add
inc
pop
test
cld
push
mov
mov
add
in
repnz
jae
adc
jb
add
imul
add
lds
jle
shrb
fwait
add
fldenv
mov
or
pop
adc
iret
pop
pop
and
dec
and
lret
inc
dec
and
lds
sub
add
adc
add
sub
loope
popf
inc
adc
repz
movsb
jl
or
sahf
cmp
pop
int3
out
call
nop
jns
push
mov
subl
adc
outsl
add
lock
scas
jne
nop
aam
push
dec
inc
xchg
sarl
and
add
lock
rcll
sub
bound
testl
add
call
les
add
push
cmpl
cmpsl
scas
or
mov
nop
dec
mov
fmull
out
mov
add
and
cmp
mov
mov
pop
sub
aam
ljmp
inc
add
jmp
pop
roll
sbb
inc
scas
stc
jmp
add
fidivl
add
repnz
jne
leave
push
mov
repz
add
test
andl
loope
dec
psrlq
test
jmp
int3
sbb
inc
add
ret
inc
and
mov
dec
sub
imul
add
test
mov
fcmovnbe
out
add
or
movsb
or
sub
xchg
inc
jo
lahf
adc
adc
mov
aad
pop
pop
insl
je
adcl
pop
cmpsl
into
aas
xchg
shr
jp
into
in
call
and
outsl
add
repnz
test
leave
popf
add
mov
cmp
add
icebp
add
idivl
sarb
xor
fistpll
add
and
mov
bound
xchg
push
jne
mov
cltd
jnp
and
inc
lods
jo
sbb
loope
cmp
mov
test
add
test
add
add
dec
pop
push
outsb
cli
add
pushf
int3
addb
ljmp
pop
lret
clc
or
filds
jp
add
dec
push
sub
dec
inc
nop
movsl
popa
add
sbb
add
and
sti
add
testl
movsb
dec
push
decb
mov
mov
cld
adc
sti
xchg
or
hlt
cmpsl
adc
or
cmc
jle,pt
add
sbb
outsl
xchg
add
leave
sub
std
jae
inc
add
in
lret
inc
dec
jne
dec
mov
add
mov
aas
testl
mov
xor
jo
int3
mov
and
and
sbb
add
or
cltd
jns
sahf
cmc
clc
xchg
loop
into
xor
add
shl
cmp
mov
xor
neg
pop
sahf
mov
sub
out
add
dec
cli
stos
xor
pusha
jp
ficomps
jg
add
add
outsb
cwtl
mov
xor
es
inc
cmp
dec
jp
xchg
cli
and
lods
lea
push
scas
jbe
je
jne
outsb
imul
test
mov
stc
mov
inc
add
add
adc
ret
cmp
mov
ret
jne
add
add
out
aam
insl
leave
repz
pop
les
add
push
aas
stc
push
out
negb
add
in
sbb
xchg
aaa
pop
scas
dec
jae
push
out
mov
xchg
lret
imul
and
inc
out
mov
pop
out
fbld
jmp
filds
cmp
push
sbb
sbb
add
sub
mov
add
lret
enter
add
insl
add
pop
and
add
imul
es
ja
or
pop
jnp
sub
cmp
sbb
mov
sbb
push
xchg
data16
mov
rolb
shlb
dec
nop
shlb
pop
add
iret
add
add
cmp
stos
add
push
lds
add
cmc
pop
add
cs
add
sub
iret
enter
mov
cmp
jp
dec
lock
sub
inc
and
add
in
jae
add
dec
pop
mov
add
and
xlat
jns
cli
xchg
add
in
inc
sbb
mov
add
lea
add
cmp
jo
dec
add
sar
xchg
je
add
sbb
add
mov
adc
fcmove
mov
cltd
orb
xchg
leave
add
cmpsb
push
jo
jp
jle
sub
ja
daa
into
mov
jmp
add
jle
add
add
ja
and
add
push
jg
dec
push
sahf
jno
phaddw
je
hlt
testl
mov
and
arpl
das
and
inc
movsl
xchg
add
mov
xchg
iret
repnz
pop
repnz
scas
fisubl
mov
jmp
sbb
adc
mov
mov
lds
popa
out
movb
push
or
pop
push
lods
stc
out
pop
test
sti
inc
out
insb
lock
add
pop
pop
popf
pop
push
cld
test
out
cmpsl
mov
add
push
dec
add
aaa
lods
aas
inc
test
std
adc
sahf
fcompl
dec
pushf
jmp
es
int
or
loope
cmc
dec
les
imul
cmpsb
cmp
in
fsts
dec
jns
jl
lcall
mov
ljmp
and
inc
add
xchg
pop
dec
add
jge
mov
repz
ja
insl
jbe
sahf
xor
out
loop
mov
loopne
add
fsts
xchg
xchg
cmp
add
mov
mov
and
jle
out
lcall
cmc
adc
xorb
push
aad
rorb
in
int
push
cwtl
daa
add
mov
add
jne
add
push
ljmp
and
xor
lea
pop
adc
cwtl
rcrl
xchg
incl
inc
mov
add
mov
inc
pushf
jnp
lea
pusha
jb
push
test
out
adc
jp
sti
add
adc
pusha
pop
lods
adc
mov
or
movsb
jnp
test
in
lock
add
pop
xlat
add
rolb
add
mov
push
xchg
fildll
jg
loop
lahf
dec
inc
mov
pop
lea
or
add
push
ficoml
push
dec
ret
popf
inc
inc
scas
jo
push
pop
addb
mov
aas
cmp
or
lock
hlt
push
add
jne
xchg
xchg
sbb
loopne
mov
mov
fwait
add
pop
bound
xchg
cmp
ret
push
int
inc
pop
pop
inc
mov
sub
out
outsl
push
mov
arpl
or
add
loop
pusha
sbb
dec
stc
push
dec
test
nop
jp
insb
add
pop
jo
add
lcall
mov
add
stos
mov
std
loopne
mov
loop
loope
cld
jecxz
mov
scas
or
pop
jecxz
add
cmpsl
add
pop
mov
iret
push
aad
fs
das
xchg
jbe
cmp
test
movb
enter
arpl
pusha
xor
add
mov
dec
mov
inc
push
sbb
sbb
popf
adc
popf
sahf
dec
dec
loope
out
je
jle
add
xor
stos
xchg
lcall
loope
adc
add
scas
das
jl
loope
shl
fnstcw
cli
lock
scas
sahf
push
dec
js
sbb
push
insl
pop
loop
adc
rorb
enter
cld
imul
pusha
pop
scas
jnp
or
lock
pop
shlb
and
jl
pop
sub
inc
cmp
cmp
fwait
or
xchg
shr
jl
insl
pop
pop
sti
mov
sub
mov
jecxz
cmp
push
fnstcw
inc
ficoml
add
add
pop
or
add
cmp
into
cmc
mov
adc
rorl
ljmp
mov
dec
xchg
jge
ret
dec
int3
pop
mov
add
add
dec
stc
in
lock
push
pop
out
test
mov
rolb
xchg
ss
push
in
push
add
jbe
sbb
sbb
sub
jne
jle
mov
or
cli
add
inc
icebp
aam
mov
or
push
push
inc
adc
push
add
pop
mov
mov
in
int
addl
mov
lret
inc
enter
mov
incl
or
add
arpl
fisubrs
inc
and
adc
test
mov
outsl
cmp
in
and
pop
dec
mov
mov
adc
add
scas
outsl
test
outsb
ljmp
in
dec
sbb
decl
jge
nop
cmp
dec
jns
mov
repnz
in
jle
inc
lods
mov
imul
popf
in
xchg
xor
xchg
pop
fsts
add
sbb
mov
push
lret
test
jp
shl
add
mov
fcomps
popa
mov
in
call
jp
or
inc
arpl
cmp
adc
dec
insl
add
imul
int
pop
inc
cmp
aad
sbb
scas
cmp
icebp
idivl
mov
push
adc
or
mov
aas
pop
xor
cmpl
mov
fstpl
call
push
push
roll
adc
stos
lret
add
out
iret
nop
and
jmp
das
insb
lret
jne
mov
sbb
push
mov
push
add
adc
cmp
add
test
out
lods
lea
test
push
sbb
xor
add
xchg
or
hlt
add
in
jno
in
sti
repz
lds
mov
inc
add
movsb
mov
data16
push
pushf
and
push
adc
mov
mov
cmp
adc
lods
cmp
and
add
dec
add
inc
push
mov
scas
sbb
popa
jne
add
add
add
xchg
add
cli
fistpl
sub
call
mov
jae
ret
sbb
aad
insb
jl
cmp
add
insl
add
pop
xchg
fs
jnp,pn
lret
roll
pop
xor
pop
add
pusha
jl
add
cltd
divb
mov
and
leave
mov
and
or
mov
jp
ficompl
adc
add
jbe
push
xchg
xor
cmp
mov
mov
add
push
mov
pop
mov
int3
xchg
mov
mov
xor
data16
sub
cmp
test
das
cld
in
aas
inc
add
mov
push
sbb
xchg
rclb
jg
add
or
push
push
add
stc
cmpsl
punpcklwd
mov
jne
add
dec
push
jge
rcrb
sbb
aam
pushf
add
push
add
shl
mov
push
mov
lds
add
pop
pusha
js
xlat
outsl
je
cmp
hlt
sub
jmp
dec
sub
cmc
fdivs
scas
stos
repnz
xchg
mov
add
pop
mov
movsl
sbbl
jmp
fnstcw
jnp
and
mov
xchg
int
add
adc
ds
add
test
repnz
push
test
dec
xchg
jb
sbb
xchg
daa
test
mov
ret
mov
add
xor
push
scas
add
fildl
mov
call
adc
add
js
aas
push
mov
dec
push
add
cmp
or
add
mov
test
lock
and
mov
add
add
movsl
sbb
or
pop
cmc
cli
and
cltd
sub
xor
mov
call
add
mov
sahf
sub
in
dec
lret
add
or
pop
add
jp
cld
fsqrt
cmp
jg
andb
data16
push
add
stos
pop
out
sub
push
and
inc
add
push
fiadds
cmp
mov
das
cmc
push
aam
fwait
out
push
js
add
repz
adc
xor
gs
or
jecxz
cwtl
mov
add
insb
imul
pusha
add
push
jp
mov
add
pusha
repz
pop
inc
popf
cwtl
loope
scas
in
lahf
ljmp
add
push
out
add
xor
mov
push
movsb
sub
cmp
mov
lock
pop
jo
popa
push
add
rolb
fistl
or
int
mov
insb
xchg
sub
jle
sti
popf
pop
cld
lahf
inc
addb
pop
push
push
inc
add
or
pop
jb
out
push
pop
aam
xchg
aam
out
stc
pop
test
and
insl
and
addb
cmc
add
sub
roll
movsb
dec
pop
add
add
sub
mov
test
sbb
outsl
and
imul
es
pop
add
cmc
out
mov
cmp
push
out
jmp
add
les
fcomi
cmp
scas
jae
inc
test
or
ror
add
inc
xchg
subl
fadds
jo
xor
pop
fmull
push
add
add
pop
add
adc
fistl
add
imul
push
dec
jns
cmp
inc
pop
scas
loop
adc
add
add
pop
sarl
add
jmp
dec
lods
cmpsl
lret
dec
int
inc
push
xchg
sub
in
fiaddl
or
rcr
mov
mov
in
pop
stos
test
pop
test
cmpsb
inc
rorl
and
mov
xchg
xchg
xchg
mov
dec
mov
fdiv
fs
push
hlt
das
adc
int
pop
sbb
pinsrw
in
add
clc
pop
loopne
inc
add
and
xchg
add
mov
cld
pushf
leave
push
int
push
fisubrs
bound
jne
popf
pop
add
sub
cwtl
repnz
and
sbb
jbe
or
sbb
lods
dec
ja
outsl
jbe
cld
cmp
pop
jb
xor
fcompl
add
xchg
dec
mov
aam
std
pop
add
in
add
fistl
adc
and
push
mov
adc
or
aaa
enter
fstpl
mov
aad
adc
add
xor
loopne,pn
add
mov
fwait
cld
aad
pop
rcrl
fstl
cmp
pop
or
mov
xor
adc
and
or
jl
xchg
or
es
xchg
add
inc
mov
out
lea
in
jmp
cmpsl
add
rolb
or
lret
popa
and
lret
fdivl
push
mov
add
ficomps
cmpsb
faddp
jae
or
sbb
adc
pop
lods
inc
mov
sub
xor
icebp
lea
flds
pop
aad
int
mov
int3
mov
mov
inc
cwtl
insb
push
hlt
das
pop
add
or
icebp
and
lods
dec
cmpsb
pushf
dec
add
mov
in
push
xor
outsb
dec
shll
ljmp
push
add
enter
dec
enter
jl
outsl
push
mov
imul
dec
js
test
cmpsb
subb
add
pandn
dec
out
add
cmc
adc
cmp
scas
jg
inc
add
sub
add
lret
dec
mov
aas
shrl
and
xor
push
mov
or
test
add
push
lods
fldt
sahf
inc
adc
pop
add
and
inc
add
testl
push
fildll
test
push
outsl
test
mov
and
add
sti
lret
or
movsl
add
or
adc
inc
mov
jb
xlat
inc
cmp
rorl
jmp
popa
push
add
mov
aad
sarl
loope
or
jbe
fcmovnu
xchg
movb
or
inc
xchg
int
add
sub
aaa
pop
scas
cmp
mov
pop
popa
add
into
jae
adc
lret
push
jae
inc
in
add
push
fsubrs
pop
out
dec
aad
cli
add
dec
inc
fsubl
sti
jg
xlat
adc
lods
adc
test
mov
inc
mov
xor
add
mov
outsl
clc
dec
inc
add
cld
add
mov
add
push
pop
mov
sub
mov
xor
popf
mov
das
add
and
mov
cli
sbb
jecxz
sbb
das
xchg
data16
iret
xchg
dec
or
icebp
jg
fistpl
cmp
push
push
add
insl
or
call
pushf
leave
dec
mov
dec
cmp
ja
popf
ljmp
mov
out
push
push
mov
xor
pop
in
xor
mov
xor
push
fcomps
pop
jecxz
stos
push
add
and
pop
and
cmp
dec
or
ja
cwtl
mov
jns
sbb
inc
adc
hlt
jecxz
jno
xchg
lret
ja
mov
shrb
aaa
les
sarb
add
inc
pop
jmp
imul
popa
inc
adc
mov
sbb
outsb
cmp
push
mov
mulb
out
push
xchg
outsb
repz
into
stc
int
add
ret
arpl
sub
out
xor
add
sbb
lret
arpl
add
aam
bound
negb
ja
add
push
mov
add
xor
or
ss
and
add
in
jno
pop
push
push
aad
or
lods
add
jo
pusha
loopne
negb
fiaddl
push
add
clc
lret
sahf
sub
arpl
les
add
sbb
js
mov
repz
add
sbb
inc
into
sbb
shll
xchg
jge
push
movsb
rorl
mov
imul
pop
cmp
addr16
ret
xchg
cwtl
arpl
pop
bound
jmp
nop
dec
add
add
adc
setl
jp
addr16
sub
mov
xchg
mov
aas
int
inc
int3
sar
jge
inc
dec
add
mov
outsb
rcrb
add
inc
or
xchg
inc
xchg
xchg
push
dec
add
imul
xor
add
mov
cmp
sbb
sbb
mov
cli
pusha
rolb
lret
stos
sarl
je
sub
sbb
ljmp
loope
pop
jnp
add
daa
js
sar
mov
jp
push
add
push
sbb
cmp
jge
aas
sub
xchg
test
mov
jle
and
sbb
ror
mov
or
dec
cmp
add
bound
lock
lcall
repz
jecxz
cmp
rorl
mov
pshufw
in
jns
cmp
sub
push
outsl
mov
jmp
ret
popf
pop
lock
jmp
mov
adc
int3
mov
pop
outsb
gs
cwtl
cmp
ja
repnz
lock
jb
and
mov
outsb
stc
xchg
andb
sub
jge
xor
push
lret
shlb
jle
sub
mov
add
pop
or
loop
mov
mov
outsb
divsd
fstpl
lea
sbb
add
add
cwtl
mov
dec
test
pusha
xchg
or
in
aaa
and
sub
jo
dec
adc
popf
fldenv
aaa
mov
insb
add
dec
mov
sbb
sbb
aam
add
roll
pop
jns
sub
test
out
shlb
ja
loope
xchg
jo
leave
test
imul
sub
jg
mov
push
int
cli
add
scas
rcr
push
xchg
mov
add
push
in
add
in
repz
dec
negl
dec
adc
and
cmp
out
sbb
ret
jecxz
jb
xchg
adc
xor
add
mov
test
faddl
mov
andl
lea
lea
addr16
xor
pop
fildll
out
into
add
shr
add
jns
and
push
int3
mov
or
inc
inc
add
add
mov
sahf
and
sub
inc
cmc
mov
cmp
inc
in
add
lods
add
mov
add
add
jecxz
add
shrl
inc
lcall
sarb
bound
xchg
sub
xchg
mov
add
fadds
in
pop
fdiv
lods
cmc
repz
insl
add
clc
xor
lcall
movsb
adc
sub
jo
pop
inc
sahf
add
dec
and
mov
enter
lret
or
and
push
push
jl
data16
add
ljmp
pusha
adc
lret
mov
pop
xchg
dec
add
ret
aad
dec
and
add
add
lcall
pop
cs
dec
xchg
inc
jbe
in
push
add
push
cltd
jmp
repz
dec
test
jecxz
dec
dec
ds
inc
xor
incb
mov
sbb
cld
mov
add
add
pop
or
roll
rcl
push
xor
push
pop
adc
xor
cwtl
mov
adc
pusha
popa
lods
push
or
in
outsb
popa
jp
push
add
mov
lret
fldcw
jg
std
repnz
ss
mov
scas
sbb
movsl
fabs
clc
adc
aam
iret
sbb
pop
add
pop
add
fisubrl
lods
ja
jo
insb
dec
cmc
xorl
or
jmp
xchg
les
pop
or
xor
xor
leave
int
inc
repz
add
daa
ret
insl
ret
jnp
jno
mov
pop
aam
jmp
jnp
xor
add
add
push
nop
push
dec
mov
out
add
dec
in
addb
faddl
aaa
pop
or
insl
add
adc
rcrl
cli
test
frstor
mov
rcll
push
testb
mov
adc
movsl
ja
add
enter
xchg
gs
lret
les
lret
sub
dec
outsl
in
rorl
add
pop
jl
repz
shll
std
jmp
jp
fxtract
push
add
ffreep
movsb
add
xchg
mov
add
aam
add
add
add
testl
lea
lahf
fcoml
cmp
loope
testl
jle
mov
sub
xchg
repnz
aaa
out
stos
add
and
dec
lcall
inc
add
xchg
jno
scas
pop
lods
push
sbb
inc
arpl
add
rcrl
push
xor
mov
mov
push
pop
pop
jne
sbb
add
imul
or
add
dec
ja
add
scas
add
decl
mov
push
mov
and
stos
lea
adc
or
pusha
add
fbstp
xor
pushl
cs
outsl
xlat
jl
dec
out
shll
sub
js
xchg
push
add
add
das
dec
rcl
sbb
test
mov
roll
mov
adcb
repnz
aaa
xchg
mov
addl
add
and
lret
mov
movsl
iret
add
in
movsl
loop
imul
int
iret
jmp
fsubs
mov
add
rolb
sti
es
js
es
add
ljmp
jg
and
add
pusha
repz
xchg
push
xorl
lcall
jmp
pop
sahf
xlat
daa
adcl
adc
mov
sub
and
lods
xor
add
push
pop
imul
int3
std
add
inc
mov
add
outsb
add
dec
adc
mov
dec
mov
mov
stos
xchg
je
add
jg
xchg
aad
jne
roll
ja
and
cmpl
jmp
xlat
add
jmp
inc
lahf
fildll
adc
mov
or
shlb
test
push
hlt
and
in
mov
jle
into
popl
cwtl
cmp
ljmp
or
xchg
insb
dec
add
in
mov
push
roll
add
dec
add
push
mov
loopne
lods
pusha
adc
add
add
jno
dec
and
jae
add
adc
cli
std
add
mov
repz
mov
adc
out
mov
and
dec
cwtl
into
push
or
sbbb
pop
addr16
jbe
jb
mov
hlt
jmp
xchg
push
add
add
icebp
movsb
jns
insl
int
pop
and
add
cmp
in
cli
out
int3
push
icebp
mov
outsl
inc
dec
inc
push
and
js
cld
daa
jge
cmp
adc
ds
push
mov
jmp
out
xchg
push
ficoms
xlat
jo
sti
test
movsl
andb
test
negb
xchg
add
sub
in
cmp
add
lods
orb
push
add
stos
xor
popa
addr16
pusha
pop
add
fldl
shrb
test
dec
sbb
mov
leave
pop
pop
shll
sahf
and
cmpsl
icebp
jge
mov
add
lcall
sahf
inc
inc
popf
cs
fcmovb
add
cld
pop
test
add
lods
sbb
loope
and
outsb
testb
inc
adc
in
cs
xor
xchg
mov
mov
mov
loopne
insl
jne
and
dec
cmc
pop
fs
std
or
push
aam
inc
xor
pop
enter
std
imul
je
xchg
jns
popf
movl
mov
stos
mov
or
cmp
dec
dec
repnz
dec
loop
push
rcll
pop
subb
and
adcb
mov
jmp
ss
mov
mov
pop
lcall
and
adc
add
inc
loope
add
stc
lcall
pop
xchg
clc
lods
add
and
in
sbb
scas
dec
mov
movl
push
cmp
pop
adc
pop
dec
jnp
add
popl
dec
dec
cli
mov
adc
xchg
pop
push
mov
iret
iret
cmp
fistps
add
add
mov
divl
repnz
lahf
cmp
push
xor
mov
sbb
xchg
xchg
cmp
mov
xchg
xchg
icebp
add
insl
pop
pop
xchg
sub
js
pop
pop
add
leave
or
incb
inc
je
mov
pusha
inc
sti
adc
hlt
lds
pushf
dec
add
inc
roll
adc
mov
sbb
shr
jbe
out
or
bound
mov
movsl
std
add
add
es
and
insl
mov
add
sbb
rcll
sbb
sub
insb
xchg
xor
lods
cli
je
or
add
test
mov
xchg
fistl
imul
xchg
add
jle
inc
in
stos
add
lea
fstpt
cmp
sbb
dec
xchg
pop
mov
dec
test
sub
mov
and
int3
or
hlt
cmpsl
bound
cmc
stc
stos
clc
add
testb
mov
lods
aaa
testb
mov
jecxz
ss
add
aas
jmp
adc
sbb
mov
xchg
or
and
pop
mov
xor
sbb
movb
int
dec
pop
std
test
push
movsl
pop
push
jo
or
and
jmp
jae
jnp
push
mov
insl
jmp
mov
add
fadds
add
mov
loopne
jp
xchg
clc
inc
add
adc
push
push
pop
leave
add
dec
mov
mov
andb
xor
arpl
stc
pop
hlt
cmpsl
fiaddl
add
pop
add
cmp
lds
and
stos
push
pop
lgs
inc
ret
aad
lock
popa
push
add
sbb
xor
sbb
sbb
inc
outsl
pop
add
add
loop
mov
fidivs
add
adc
pusha
push
mov
pop
add
or
xchg
in
pop
jnp
repnz
loope
and
and
jbe
xorl
sub
mov
or
cltd
mov
add
or
xlat
fisttpll
mov
leave
dec
xchg
pop
add
inc
ds
and
aas
dec
out
pop
add
sbb
add
add
and
xchg
out
add
pop
or
in
out
adc
add
test
test
js
test
popa
js
sbb
popa
push
xchg
adc
jg
icebp
test
ljmp
jge
mov
add
clc
repz
jo
rcrl
fsubs
cmp
aad
mov
rol
nop
insl
bound
ja
out
xor
xchg
dec
jg
add
cmc
loopne
std
xlat
or
mov
add
mov
test
mov
das
xor
and
rorb
mov
sti
loop,pt
and
cwtl
incl
adcl
mov
add
jle
jmp
add
dec
call
lds
nop
rorb
jnp
negb
and
inc
test
mov
mov
popl
add
popf
sbb
push
xchg
outsl
sbb
pop
adc
add
or
inc
shrb
add
pop
add
addl
xchg
out
adc
into
add
pop
push
out
test
leave
and
lret
add
fnstenv
mov
cld
xchg
mov
sub
dec
xchg
fwait
shrb
ljmp
movsl
xor
adc
repz
add
mov
pusha
dec
daa
xchg
xor
xor
mov
jns
add
add
pop
call
mov
add
push
xchg
shr
test
or
xchg
in
jno
xlat
cmp
aad
lret
add
pop
mov
xor
mov
pcmpeqw
add
add
rcll
gs
mov
movb
and
add
in
stos
test
test
add
cmp
int3
decl
sub
pusha
add
add
jno
add
repnz
add
movl
add
mov
jp
lret
mov
fisttps
sbb
xchg
pop
shl
aas
cmp
add
inc
fchs
movsb
int
jae
shrb
jno
ficomps
adc
int
movsb
pop
ljmp
lds
sbb
mov
repz
fcoml
icebp
fsubl
gs
mov
rcrl
jae
cmc
add
add
pop
adc
add
popa
lret
divl
ror
add
jnp
test
loopne
or
adcl
xchg
add
add
or
sbb
orl
rcl
pop
xchg
jns
lods
cmp
add
adc
add
in
mov
and
orb
jmp
scas
or
inc
pop
cmpb
jb
mov
into
pop
out
xor
pop
loope
pop
stos
dec
mov
add
adc
fbld
add
sub
cmpsb
xor
repz
rorl
js
dec
or
rcr
mov
fldt
jmp
lock
adc
add
jbe
jbe
roll
or
jp
add
cltd
push
repnz
arpl
pushf
shr
mov
int
xchg
xlat
popl
push
cmp
js
pop
test
xchg
hlt
add
jmp
addr16
add
inc
data16
hlt
jp
mov
inc
fwait
add
cwtl
sub
add
add
cmp
enter
test
mov
gs
jp
mov
out
add
dec
int
mov
sub
or
shl
mov
outsl
popf
or
in
push
xchg
add
testb
xchg
daa
shll
add
in
inc
push
scas
add
enter
push
push
jo
mov
jo
out
and
fisubrs
and
inc
push
bsf
iret
aas
in
pop
sbb
ret
scas
sub
imul
inc
pop
xchg
dec
dec
fsubrp
add
or
xchg
data16
xchg
adc
incb
call
je
or
lods
movsb
jmp
fcmovbe
insb
mov
sbb
sub
les
inc
ss
test
add
cmp
bound
add
ljmp
xchg
xchg
daa
adc
dec
sar
lea
jno
xor
fidivrl
rcrl
jns
xchg
mov
add
lcall
mov
dec
rorb
add
xor
push
cmpsb
pop
ss
xchg
rcrb
push
test
mov
cmp
or
add
arpl
sbb
aas
mov
add
sbb
mov
ret
or
stc
cld
xor
jecxz
add
movsb
movsl
inc
std
dec
pop
xor
mov
mov
icebp
add
leave
xor
add
add
add
fdivl
inc
jg
movl
adc
mov
negb
and
mov
mov
insb
add
fcomip
and
mov
lcall
mov
out
filds
mov
cwtl
addr16
pop
pushf
divl
and
lock
push
add
inc
dec
outsl
pop
inc
js
add
push
adc
push
mov
ljmp
aas
cwtl
lret
shrb
ds
jecxz
xor
sub
mov
les
xor
mov
jecxz
out
cmp
das
packsswb
addl
andl
adc
ficoms
gs
aaa
push
add
and
and
add
mov
pop
call
pop
notl
gs
xor
aas
pop
or
dec
or
shr
or
fstps
add
addb
sub
add
push
adc
sbb
xchg
out
push
cmp
adc
pop
jp
mov
cmpsl
mov
testb
aam
scas
sarb
add
rcll
out
xchg
pop
add
cmp
sub
mov
xchg
cmp
jl
sbb
cli
dec
fildl
mov
dec
mov
add
cli
and
pusha
fildll
pop
cli
nop
call
xchg
loope
add
cmp
lea
and
mov
lcall
repnz
imul
ja
aad
lret
jne
and
sbb
pop
mov
cld
add
push
lret
xor
or
add
lahf
mov
jo
add
movsb
add
les
loopne
cmp
inc
out
orl
mov
xchg
ja
mov
add
cmpsb
mov
add
jae
add
arpl
push
scas
and
xchg
mov
sub
jns
in
cmp
sub
addl
sub
xchg
adc
mov
jg
arpl
rclb
add
push
add
mov
dec
push
add
adc
add
mov
add
push
push
mov
rcrb
into
les
add
lds
add
add
sbb
inc
mov
cmp
or
mov
stos
ljmp
fcomps
sub
leave
mov
push
sti
xor
cmp
jmp
cmp
sbb
sbb
or
iret
cltd
addr16
dec
lcall
inc
jg
int3
add
popf
stc
sub
fwait
shlb
fstps
jle
outsb
das
add
jae
fwait
mov
push
bound
add
xlat
aam
test
popa
dec
movsb
mov
out
xchg
push
cli
into
xchg
lea
in
mov
push
int3
cwtl
push
pusha
test
std
adc
add
sub
push
ja
add
pop
shll
jecxz
jns
push
jge
insl
adc
jle
adcb
and
adc
add
push
movb
iret
out
jno
sub
add
pop
mov
pop
pop
add
pop
jg
shr
in
mov
incb
data16
push
int
mov
xchg
cmp
sub
sti
cmpsl
test
test
mov
out
fisttpll
jg
fisttps
test
loope
hlt
and
mov
cmp
mov
add
adc
mov
rorl
mov
add
mov
inc
add
or
mov
stos
loope
or
test
push
lret
mov
sbb
add
in
add
add
sbb
int
mov
dec
add
add
mov
test
mov
cwtl
fwait
arpl
into
add
jns
add
sbb
pop
aas
adc
in
or
fbld
jb
push
xchg
pop
pop
inc
add
cmp
and
cmpsl
pop
pusha
add
cld
or
ds
nop
int
push
out
imul
jo
js
adc
push
setno
das
out
and
daa
test
adc
iret
dec
fsub
std
stos
add
and
cmp
cli
out
insb
ret
mov
add
in
inc
cmpsl
pop
mov
cmp
and
in
dec
cld
push
cmp
add
xchg
sldt
sbb
psubusw
dec
mov
mov
mov
jb
cmp
mov
fucomi
pop
add
sbb
pop
andb
mov
lahf
fwait
hlt
jbe
notl
dec
adcb
testb
adc
cmpl
jno
mov
mov
jecxz
loop
ret
add
mov
adc
push
add
fwait
pop
jg
cltd
mov
add
js
stc
mulb
cmpsb
testb
xchg
fidivs
cmc
lret
es
lods
ja
pusha
add
add
sub
pop
mov
mov
adc
rolb
aaa
jns
test
movsl
xor
sub
jo
push
nop
sub
sub
add
sbb
add
bound
add
add
out
pop
dec
cmp
and
mov
adc
cmp
xchg
mov
cltd
popa
dec
add
jb
popf
test
test
cmpsl
add
mov
into
mov
jmp
sbb
push
ljmp
dec
rcl
sbb
or
mulb
add
cmp
shrl
or
adc
sbb
sub
js
mov
ret
xchg
sub
lock
push
pusha
ss
jg
and
or
rcr
lods
jle
js
xchg
xor
dec
sub
pand
lcall
flds
inc
arpl
rorb
ljmp
xlat
adc
dec
mov
xor
dec
push
add
outsl
testl
add
mov
je
jmp
mov
add
es
inc
xorl
fiadds
inc
adcb
test
add
mov
add
jg
jp
xchg
bound
mov
or
mov
cmp
inc
or
iret
mov
lret
add
repz
add
add
add
popa
xchg
and
shlb
es
add
mov
mov
subb
addl
mov
mov
nop
iret
jmp
sbb
daa
push
pusha
or
inc
test
loope
cld
mov
loop
pop
xchg
sahf
arpl
sarb
xchg
mov
fcompl
jns
xchg
hlt
addr16
test
iret
push
push
js
add
fmull
push
dec
add
pop
inc
mov
and
shll
ret
add
xchg
and
sbb
das
popf
jg
cltd
add
adc
add
add
xor
mov
and
leave
xchg
sti
out
stc
and
cltd
dec
sub
cs
inc
insb
xchg
insb
loope
push
push
push
adc
dec
popa
int3
sub
cmc
pop
mov
and
and
sub
in
dec
dec
xchg
sbb
and
push
jne
fs
push
fidivrs
cmpsl
or
cmp
add
sbb
insb
add
mov
jp
js
pop
fsub
inc
shr
lods
insl
push
add
add
xor
adc
push
jmp
pop
fld
xor
hlt
mov
dec
sbb
fsts
data16
in
mov
mov
add
sbb
ficoml
lahf
mov
xor
and
cwtl
fisttpl
popa
push
cmpsl
push
xlat
dec
ss
and
push
push
pop
stc
jbe
add
push
lock
and
jmp
mov
ficoml
test
inc
jnp
pusha
mov
in
lahf
mov
adc
adc
adc
add
std
mov
add
add
dec
fiaddl
add
out
add
inc
cli
nop
arpl
add
fcoms
pusha
inc
add
add
xchg
add
sub
lahf
mov
push
mov
push
cld
or
mov
cli
jb
mov
xchg
inc
add
mov
mov
in
movb
int
sbb
pop
mov
call
add
pusha
in
or
fstl
jne
mov
add
jmp
popf
iret
dec
cmpsb
pop
adc
push
jno
hlt
mov
add
pushf
xor
mov
imul
stos
cmp
out
push
iret
leave
loope
and
mov
adc
add
sub
icebp
pusha
sbb
add
leave
add
add
in
aas
hlt
rcrl
rcr
cmp
cmp
fcompl
fnstcw
mov
sub
into
sub
sbb
cmp
pop
jge
cmp
xor
and
out
cmp
inc
cmp
xchg
sahf
add
jmp
xchg
add
xor
add
jb
sub
repnz
mov
and
dec
add
pop
push
jle
lock
mov
jp
mov
mov
in
cwtl
push
loopne
add
add
lahf
dec
xor
jmp
jno
mov
out
jae
icebp
push
aad
pop
out
inc
sbb
mov
das
mov
add
add
and
push
jno
sub
mov
inc
pop
loop
xchg
lods
mov
inc
add
xchg
xor
xor
xor
push
sub
dec
fwait
mov
sti
clc
lret
dec
lret
sub
fidivl
pop
jne
inc
sbb
lahf
jbe
imul
adc
popf
out
ret
lret
lock
sbb
or
push
cs
loop
jae
stos
imul
cs
mov
dec
fwait
push
inc
pop
fildl
dec
inc
push
ss
cwtl
xor
jge
and
mov
and
std
cld
xchg
shl
movsb
add
or
push
xor
add
pop
jp
in
xorl
pop
scas
inc
xor
addb
js
sub
mov
testl
mov
xchg
jb
addr16
ljmp
pushf
xchg
mov
jle
mov
add
xchg
push
repnz
stc
in
js
dec
mov
add
jnp
mov
in
add
hlt
xchg
stc
sbb
sbb
add
add
add
dec
adc
mov
les
add
cs
add
mov
int
add
push
sub
scas
and
je
pop
and
ljmp
test
mov
jmp
movsl
mov
dec
or
push
gs
sbb
dec
mov
xorb
ja
mov
shrl
dec
aam
xor
cmp
dec
lock
add
arpl
and
jae
push
popf
mov
jbe
stos
push
faddl
push
insb
int
push
jne
add
cli
add
jle
es
int3
mov
fldenv
imul
daa
lret
mov
cmpsl
push
leave
adc
xchg
data16
add
pop
push
ja
sbb
fldenv
or
jl
subb
sbb
into
movsb
push
add
icebp
test
dec
fisttps
lds
loope
popf
xor
fmull
jae
daa
xchg
leave
dec
adc
imul
add
nop
inc
push
cmpsb
insl
ss
sub
add
xchg
add
mov
lock
jecxz
sub
pop
icebp
add
lret
add
mov
pop
das
jg
pop
fwait
add
addr16
adc
and
inc
cmp
or
add
loope
and
mov
dec
xlat
call
push
mov
jmp
add
call
sbb
or
adcb
push
mov
pushf
cmp
adc
mov
jp
push
fildl
cmc
xor
mov
outsb
push
in
cld
lock
jnp
pushf
fistl
and
enter
xchg
jp
stc
cltd
ret
and
scas
push
pop
pop
adc
call
movsb
or
lret
dec
add
gs
and
lcall
xchg
add
bound
push
out
push
fnsave
mov
or
dec
add
add
test
int
loopne
fwait
mov
sub
mov
or
loop
aad
popf
filds
stc
adc
pop
sbb
mov
sahf
or
bound
mov
mov
add
arpl
and
add
lea
fisubl
ljmp
mov
mov
insl
test
adc
stos
xor
pop
inc
add
in
sahf
out
jmp
out
les
jbe
pop
mov
cmp
jg
sub
adc
adc
mov
add
clc
lods
mov
jmp
xchg
enter
mov
inc
sbb
inc
sbb
push
leave
add
push
push
inc
in
mov
push
add
mov
add
add
sub
sbb
xor
lahf
push
inc
icebp
dec
jecxz
pop
femms
mov
jl
push
cmc
jne
lds
xor
outsl
sbb
jne
pop
lds
sub
stos
int3
add
aad
lcall
add
mov
add
leave
add
or
cmpsl
push
add
inc
fistps
dec
inc
fiadds
fisttpll
xor
cltd
nop
in
out
push
inc
mov
cmp
lret
cmp
cmp
sub
add
jmp
sub
xor
sub
push
stos
jl
sbb
pushl
xor
adc
add
subb
push
xchg
scas
js
add
imulb
add
add
push
test
xor
add
pop
jle
stc
jecxz,pt
std
mov
movsb
rcl
arpl
add
loope
dec
add
add
loop
aam
fcoml
mov
xor
mov
popa
imul
icebp
les
add
outsl
sub
lods
popa
inc
fmull
stos
mov
mov
xchg
mov
cwtl
dec
fcomps
cmc
imul
xchg
mov
sbb
into
xor
add
scas
sbb
lods
incl
call
mov
xor
xorl
jne
pop
mov
push
pop
sbb
add
popa
sbb
mov
xor
leave
sbb
jae
mov
outsl
or
fdivl
dec
cmp
ja
dec
add
add
xchg
mov
clc
mov
jge
add
jmp
mov
add
pop
pusha
jb
pop
cmp
jae
imul
bound
fistpl
push
cmp
jecxz
pop
enter
push
pop
add
xchg
mov
cmpsb
push
data16
dec
add
incl
lds
mov
mov
jmp
mov
add
mov
sub
xlat
add
pop
sub
xchg
xlat
repnz
cmp
and
test
rolb
add
jb
xchg
jno
lods
mov
lahf
outsb
negl
and
loope
ret
jp
sbb
mov
mov
xor
out
out
add
mov
or
fs
cmp
push
sub
add
lcall
in
outsl
dec
sub
pop
xor
and
loop
sub
js
in
xchg
es
xor
hlt
ror
shl
jae
frstor
inc
push
jmp
or
and
ret
mov
dec
xchg
inc
call
fimuls
nop
dec
std
push
pushf
cwtl
ja
xchg
aas
mov
cltd
mov
clc
add
push
or
xchg
dec
xor
push
push
xor
mov
test
pop
mov
cli
push
in
inc
out
push
xor
addr16
out
inc
jmp
or
mov
sbbb
bound
mov
in
arpl
dec
test
data16
add
sbb
pop
add
add
pushf
sub
cli
std
add
sub
cmp
pop
add
mov
mov
dec
movsb
movsl
jge
jle
dec
sahf
loop
les
jne
fdivl
mov
cld
add
shrl
leave
mov
pop
mov
jb
inc
mov
and
add
dec
mov
adc
add
popf
jno
cmp
jle
dec
jo
xlat
or
jb
add
xlat
flds
dec
scas
movl
mov
inc
fs
into
cmovo
jns
repz
flds
stos
sbb
lea
lock
add
push
xchg
cmpsb
gs
insb
dec
adcb
dec
sub
sub
xor
and
sbb
xchg
sub
leave
push
add
jb
out
data16
enter
ljmp
mov
imul
lock
repnz
ljmp
lock
mov
adc
pop
test
int
mov
add
pop
add
jle
or
insl
enter
or
cmp
inc
push
jmp
dec
in
shll
loopne
add
insl
nop
clc
jnp
lods
leave
stos
iret
movsl
mov
in
sub
movsl
mov
mov
xor
push
add
mov
test
cmp
rorl
mov
xchg
aam
insb
das
cmp
xor
or
cmpsb
lds
lahf
add
and
lods
mov
bound
cmp
insb
in
adc
pop
arpl
mov
les
sbb
cvtpi2ps
daa
sub
sti
pop
lods
mov
adc
outsl
imul
xor
mov
movsb
lret
les
push
jb
gs
adcb
cwtl
adc
out
xchg
movsb
addr16
add
sub
or
fiaddl
lock
xlat
mov
dec
inc
cmpb
cmp
pop
insb
in
cltd
mov
add
inc
scas
rol
pop
jmp
lcall
xchg
imul
pop
add
movl
mov
add
adc
test
subl
incb
outsl
dec
mov
pop
or
add
pop
adc
add
int
and
sbbb
mov
add
out
cltd
adc
adcb
add
jns
mov
and
adc
into
loop
or
push
shrl
xchg
xor
or
mov
push
pop
cli
das
add
xor
shr
js
hlt
inc
push
jns
pop
xchg
mov
dec
insl
dec
pop
icebp
mov
pop
ficomps
cmc
int3
movb
mov
imul
mov
add
jmp
xor
sub
xchg
and
add
int3
sub
add
stos
mov
repnz
cmp
xchg
loope
data16
lret
inc
mov
gs
lods
jp
notb
mov
into
add
jmp
xchg
rorb
or
inc
test
xchg
adcl
cs
pop
add
adc
pusha
mov
loope
xlat
add
lea
xor
test
add
cmp
xchg
lahf
es
cmp
pop
jbe
inc
outsl
xchg
mov
jmp
xchg
test
cmp
fsubrs
ss
rcrl
mov
pop
loopne
add
das
pop
out
loope
sub
mov
xlat
mov
add
call
add
push
add
aas
data16
ficoml
jecxz
jle
pop
mov
jno
add
mov
cmpsb
sub
push
cmpsl
adc
sub
mov
fcomp
mov
mov
pop
add
add
subl
inc
pop
popf
subb
out
mov
outsl
aam
dec
jne
jne
jae
jmp
rcpps
ret
in
mov
and
sbb
push
out
lods
adc
loope
jmp
add
into
push
mov
sti
cmp
mov
test
adc
jno
div
sbb
fs
aam
mov
popa
lahf
inc
or
xchg
loope
fistps
fdivs
decb
cli
sub
jne
mov
jl
sarl
add
sub
stos
add
add
push
mov
adc
add
mov
push
add
shlb
pop
add
sti
adc
xchg
add
xchg
add
sarb
and
mov
dec
js
sub
leave
std
in
nop
loopne
flds
mov
ret
repz
add
inc
mov
add
sbb
mov
shll
or
pushf
lret
push
fnstenv
icebp
or
sbb
rcll
add
pop
lods
lahf
xor
in
fstpl
out
jp
test
and
add
icebp
fcomps
push
fcmovnb
repz
lock
add
or
inc
mov
add
sub
int
mov
pop
cltd
sbb
test
je
inc
dec
scas
lock
push
xorb
fnstcw
ficomps
or
mov
mov
sub
jb
pop
push
jb
add
bound
in
ds
add
jne
data16
mov
add
push
std
and
loop
add
mov
mov
popf
mov
out
repz
es
clc
icebp
xchg
cs
adc
xchg
mov
xchg
mov
mov
jg
jg
xchg
dec
mov
les
js
dec
cwtl
inc
popf
or
push
mov
mov
popa
gs
adc
mov
faddl
pushl
and
rcll
mov
inc
in
add
insl
or
push
adc
movsl
mov
stos
mov
add
add
jmp
fidivs
sti
pop
pop
add
xor
inc
jb
inc
das
in
stc
in
sarl
arpl
add
add
ret
add
out
xchg
add
xor
aaa
xchg
sbb
add
ret
inc
scas
js
or
xor
adc
icebp
cmc
cmp
push
lods
ds
xor
inc
add
punpckhwd
cld
or
fadds
push
mov
daa
inc
jmp
lods
sbb
rcrb
fistpll
pop
mov
lcall
les
subb
pop
addb
movsb
sbb
fcmove
pusha
mov
add
adc
sahf
mov
mov
xchg
add
xchg
add
dec
adc
fstpt
fs
dec
rolb
sub
test
inc
and
push
int
stc
inc
or
add
pop
mov
xchg
or
repz
std
shll
out
push
mov
repz
outsl
push
add
mov
mov
notl
rorl
cmp
pop
lods
mov
stos
add
test
push
mov
push
js
dec
add
imul
cmc
fucomi
jl
outsl
add
pop
dec
add
lret
xor
mov
bound
jg
and
int3
sub
test
jno
xchg
or
in
xorb
data16
mov
sahf
cmp
cmp
add
xor
stc
sti
fnstenv
mov
enter
push
jle
outsb
add
fs
or
popf
add
jp
shld
cmp
pop
adcl
mov
push
add
aad
sbbl
mov
shl
int
cmp
add
xlat
mov
cmp
or
jbe
inc
aam
add
sub
test
ss
dec
push
pusha
cmp
cltd
mov
iret
shrl
insl
js
pop
xor
clc
hlt
add
pop
fmuls
lret
mov
push
or
sub
pop
cmp
add
sbb
je
mov
sbb
mov
push
pop
add
or
jmp
cmp
xchg
jmp
or
cld
xchg
dec
pop
mov
sub
sbb
and
sbb
sub
inc
fs
or
mov
pextrw
std
inc
mov
pop
adc
mov
xor
std
imul
jmp
mov
cmc
lods
push
mov
leave
add
push
and
js
shll
add
movsl
sbb
adc
inc
xchg
int
movsb
or
push
rorb
jmp
outsl
cltd
jo
and
or
add
xor
add
mov
mov
sti
iret
out
rcl
aaa
sahf
jmp
sbb
cmp
add
adc
enter
mov
push
out
int
rol
data16
mov
mov
xor
add
stos
jbe
daa
int3
push
mov
jno
inc
pop
stos
cmpsb
les
xchg
add
jno
add
add
and
shl
fldl
outsl
cmpsb
push
mov
js
fcompl
aas
adc
in
adc
loope
lds
xchg
pop
cli
pop
shlb
int
pop
jno
iret
cltd
adc
fdivrs
jecxz
sub
iret
or
cmpsb
fcoml
mov
xor
cwtl
add
or
adc
mov
daa
outsl
inc
scas
mov
cmp
or
stc
jo
add
add
scas
faddl
out
xor
add
out
push
sti
shufps
xchg
fnstcw
jno
jecxz
jge
inc
inc
xchg
mov
cwtl
ficompl
push
xchg
lret
fld
stos
xchg
jns
int3
cld
stos
dec
popa
mov
push
iret
fwait
loope
inc
fistl
gs
rcr
adc
rclb
push
rcl
imul
jns
icebp
loopne
add
sbb
or
das
jl
bound
mov
mov
imul
pop
add
add
fs
loope
pusha
outsl
imul
mov
sub
jnp
cmp
icebp
dec
decl
gs
ja
cmp
movsb
push
and
movsl
out
shll
movb
in
push
negb
add
jg
and
lods
cli
jb
stc
faddp
gs
nop
add
in
or
es
out
lret
ret
fwait
add
in
adc
add
jmp
fwait
lods
sahf
popa
add
inc
inc
sbb
icebp
std
jae
sbb
mov
mov
mov
jle
add
or
setns
cwtl
es
xor
xor
lods
jbe
sbb
lds
pop
push
mov
dec
scas
cmpsl
dec
stc
add
sub
test
inc
push
cmpsl
adc
add
sti
inc
jbe
test
and
add
push
xchg
xor
outsl
stos
add
ss
mov
addr16
mov
imulb
add
xor
pop
sbb
jae
jb
sub
add
int
inc
insl
cld
adc
mov
lods
push
jno
mov
fwait
add
icebp
xchg
paddq
cmc
add
cmp
add
cmp
les
mov
adc
add
loopne
add
push
xor
addr16
mov
or
xor
xchg
mov
rcrb
les
pop
dec
dec
jno
mov
add
lahf
add
arpl
std
insl
call
std
int3
je
mov
add
add
out
cli
adc
add
push
jns
add
add
cmpsl
aas
out
ja
sub
sarb
jg
sub
push
fdivrl
push
add
je
cmpsb
cli
andl
shlb
inc
inc
jmp
mov
and
lods
inc
mov
xchg
xchg
xlat
push
push
pop
cmp
fs
xchg
mov
addr16
adc
cmp
add
pop
adc
jge
add
data16
or
in
aad
add
test
jl
inc
mov
and
pop
rclb
push
xor
push
push
and
jcxz
fadd
inc
add
add
pop
xchg
aam
mov
cmp
prefetchnta
popl
jg
add
es
adc
mov
sub
mov
push
jno
and
ss
lret
xchg
lds
or
mov
sar
iret
test
cmp
lret
loope
filds
or
inc
movl
or
xor
jecxz
add
jb
and
add
jmp
add
in
inc
fcompl
scas
mov
dec
mov
cmp
aas
insl
cwtl
xchg
mov
clc
mov
cwtl
add
mov
xor
cmpsl
jae
cmp
inc
inc
push
lret
xchg
out
add
jae
imul
add
insb
add
mov
clc
xor
outsl
mov
sub
cmp
addr16
mov
push
add
ss
add
popa
test
add
jne
xchg
das
add
add
mov
add
out
add
es
stos
clc
into
push
clc
pushf
and
lcall
scas
rcl
pop
push
and
lret
rol
popw
and
xchg
rorl
mov
test
inc
xchg
sub
cltd
fwait
imul
cs
cmp
add
adc
or
inc
test
and
dec
inc
add
test
xchg
add
cltd
mov
lock
and
cmp
mov
and
push
out
pop
jne
jno
jecxz
push
pop
lahf
out
js
and
push
outsl
addr16
add
cmp
or
pand
je
sbb
jl
xchg
cmp
cmovnp
jno
mov
mov
add
add
jae
fcomi
jge
mov
cmp
repz
jb
pushf
adc
mov
add
add
add
hlt
rolb
rorl
add
inc
add
ljmp
cmc
lds
enter
andl
dec
jl
add
ljmp
mov
lods
int
mov
imul
inc
inc
add
mov
movsl
push
mov
xchg
xor
inc
mov
add
shll
sub
test
testb
sti
dec
lret
in
add
loop
mov
sbb
add
push
mov
push
xor
mov
mov
sahf
push
xor
push
push
in
imul
shrl
add
push
cld
je
inc
push
cmpsb
std
adc
lahf
push
sbb
add
xchg
and
daa
push
enter
pop
cmp
jae
sahf
xor
ret
es
out
push
out
inc
add
js
push
sbb
leave
xor
and
add
add
stos
mov
add
mov
push
inc
xor
imul
inc
mov
jle
push
stos
cs
std
sahf
sub
fmulp
push
lea
dec
nop
inc
add
cltd
xchg
jmp
sti
dec
inc
or
mov
fdivrp
rcrl
add
faddp
cltd
add
jbe
or
lret
test
cmpsl
int
add
loopne
sbb
clc
fs
cmp
push
jae
call
sar
dec
or
es
and
add
xchg
xchg
mov
sbb
mov
add
rcll
aad
xchg
and
adcb
flds
jbe
xchg
adc
repnz
inc
aad
inc
ds
ss
call
loopne
andb
mov
mov
push
add
add
sbb
das
mov
out
aaa
nop
add
outsb
out
mov
xchg
fwait
mov
test
cmpsl
into
xchg
xor
xchg
sbb
icebp
mov
mov
ljmp
push
add
xchg
sub
rclb
xor
outsb
xchg
repnz
jle
cmp
pusha
sub
or
imul
std
add
pop
mov
movsl
test
lock
cmc
mov
stos
pop
std
data16
movsl
cmp
sub
push
sub
add
scas
or
pop
mov
xor
in
lcall
and
add
add
jb
cs
inc
adc
stos
aas
sub
push
inc
add
add
inc
cltd
xchg
add
clc
fsubs
fldenv
pop
addl
pushl
call
mov
or
jp
mov
orl
mov
incl
push
add
movsl
mov
call
popa
movsl
sub
and
call
add
sarb
das
mov
add
scas
add
add
add
push
push
sti
add
rorb
lods
inc
push
sub
es
lcall
cmp
stos
add
loop
shl
mov
add
sub
lcall
hlt
or
or
dec
add
jo
pop
fcoms
dec
xor
sub
jg
pop
test
xchg
xchg
sub
add
mov
push
out
xchg
dec
add
add
lahf
repz
ds
inc
outsb
or
sub
jmp
imul
pop
dec
cmp
lods
xchg
adc
add
rcll
lcall
push
jae
popa
jbe
inc
call
add
aas
add
lcall
jmp
mov
or
scas
jbe
add
sub
sub
xchg
xchg
pushf
movb
add
ret
push
fsubs
aam
add
xchg
repz
ljmp
lahf
jno
add
lods
sbb
jmp
push
fmul
insb
push
int
push
push
add
rcll
add
clc
int
sub
mov
pop
add
cmpsl
dec
add
jns
xchg
xorl
push
push
sub
inc
push
mov
addr16
mov
sbb
dec
addr16
mov
inc
adc
push
push
mov
mov
lods
add
and
or
inc
addb
loop
daa
aad
mov
mov
addl
subb
mov
pop
in
mov
incl
inc
clc
xor
insb
pop
and
sub
dec
add
mov
cmp
out
lcall
add
pop
mov
mov
and
adc
sti
xchg
pop
mov
xlat
sub
pop
inc
fwait
shll
xor
add
stos
lods
mov
sub
jo
mov
mov
inc
adc
rclb
in
add
shrl
jb
ss
mov
mov
insl
pop
stc
ja
sub
xlat
in
and
jmp
add
stos
add
mov
in
pushw
ret
call
xchg
add
and
fs
lock
loopne
orb
loopne
fnstenv
mov
cmp
jl
pop
fprem
jne
jae
jmp
mov
nop
stc
test
add
jb
sbb
dec
imul
add
adc
xchg
pop
out
das
add
inc
add
and
outsb
cmp
adc
fs
cmc
cmp
or
movsb
xor
xor
add
jno
ljmp
repz
cmc
orl
leave
add
lock
mov
add
cmpsb
icebp
negb
clc
imul
ds
stos
aam
orl
xchg
xor
xorb
push
enter
mov
clc
ljmp
xorl
adc
jae
or
out
or
ret
dec
mov
orl
add
stos
bound
xor
add
add
mov
adc
mov
hlt
cmp
sub
fwait
pop
sub
in
xchg
mov
add
jecxz
adc
fcompl
push
add
icebp
popf
add
dec
add
mov
in
mov
addl
iret
pushf
mov
scas
dec
push
nop
add
cmp
jg
or
js
push
enter
jp
packsswb
das
int
adc
pop
add
mov
iret
das
clc
jg
shrl
jl
les
inc
and
push
adc
ret
xor
clc
je
and
cli
mov
ljmp
lea
fisubrs
ret
std
adc
icebp
cmp
out
iret
pop
add
cmp
aam
xor
out
cmp
inc
lcall
cwtl
pop
cmc
arpl
ss
pop
add
add
add
lss
xor
mov
gs
jge
mov
mov
inc
cmp
ret
mov
xor
mov
add
add
andb
test
adc
fsts
test
sarb
push
out
rcr
sbb
dec
mov
sub
aad
pop
pop
jmp
cs
ret
add
inc
push
es
jp
jae
cmp
shll
lock
and
add
mov
outsb
inc
or
xchg
outsb
mov
leave
xor
xchg
xchg
jg
xchg
jmp
adc
hlt
ss
repz
push
hlt
roll
adc
xchg
mov
add
movsb
into
iret
addb
and
or
mov
and
add
xchg
rcll
mov
std
push
pop
jl
push
add
xor
out
xor
movsl
add
lds
call
pop
add
and
dec
jg
ja
lret
rcll
jno
insl
xor
dec
out
jno
and
ljmp
dec
and
mov
insb
lcall
add
shlb
fwait
push
sub
add
outsl
lret
mov
dec
mov
mov
jmp
stos
int3
add
lock
cmp
loopne
xchg
shrb
js
xchg
stos
bound
fwait
sub
std
sbb
mov
cmp
mov
mov
popf
xor
lret
push
xor
add
daa
mov
jbe
in
outsb
adc
sbb
dec
mov
ss
xor
inc
dec
sbb
fidivs
ds
pop
xor
add
xor
je
push
mov
xor
sbb
pusha
xchg
in
lahf
js
cld
hlt
mov
movsb
jbe
jo
stos
test
movl
inc
scas
add
xor
test
adc
and
out
xchg
das
fcomip
add
add
mov
lret
jmp
inc
mov
rolb
sahf
add
int
xchg
and
xchg
and
mov
push
xchg
jg
lret
xchg
dec
pop
inc
push
and
add
fadds
jp
inc
sub
jb
add
jle
push
mov
dec
xchg
call
inc
xacquire
in
mov
fs
ja
lcall
addl
pop
ds
and
int3
into
add
addr16
jl
stc
adc
push
jb
inc
shrl
jnp
mov
fldenv
add
mov
jbe
xor
add
lret
dec
add
add
bound
loopne
xchg
push
inc
add
cmp
orl
jp
xorb
pop
and
lods
addl
xor
and
push
call
xchg
std
inc
incb
mov
push
pushf
pusha
repz
adcb
movsb
pop
mov
inc
in
mov
fcoml
inc
push
and
add
ret
clc
mov
fildl
mov
add
pop
mov
cltd
movsb
mov
insb
add
out
in
cmpsb
or
scas
add
push
and
lcall
inc
push
cmp
stos
push
and
out
xchg
jo
mov
push
add
push
pop
dec
push
fs
cmpsl
jnp
add
aaa
scas
cmpsb
pusha
xchg
cmp
lods
leave
sbb
lahf
inc
add
xor
and
into
dec
js
push
add
in
push
mov
sub
and
subb
jg
push
insl
inc
movsl
inc
xor
push
int
rolb
ss
int
xor
test
add
rol
xor
out
xor
std
inc
cmp
dec
mov
popa
cld
scas
jns
or
cmp
xor
pop
inc
sbb
xchg
lods
negb
cli
xchg
jl
mov
and
jmp
adc
sub
in
imul
insl
cltd
cmp
dec
add
inc
jnp
dec
movsl
or
daa
mov
psubb
cmp
in
fs
or
mov
inc
mov
add
inc
add
mov
xor
movsb
dec
or
aam
clc
mov
sbbb
mov
jle
lea
lcall
scas
in
push
insb
mov
jne
sub
xor
push
mov
cmpsb
sbb
popa
inc
sub
sub
mov
dec
popa
jae
add
cld
hlt
shlb
popf
cmp
jmp
xchg
nop
add
enter
fisubrl
repz
xchg
stos
add
cmc
cmc
mov
add
xchg
aad
call
pop
xor
mov
sarb
sub
xorb
pop
adc
push
ltr
iret
mov
push
jecxz
mov
inc
mov
jnp
adc
mov
inc
stc
dec
add
cli
add
imul
fstps
jne
stos
push
add
push
inc
inc
loopne
mov
incl
lds
xchg
mov
add
rorb
add
insb
incb
add
loope
adc
add
loop
jl
stos
jns
pop
mov
adc
popa
icebp
add
cltd
shrb
add
xor
fcoms
cmpsb
fildl
and
sarl
je
push
insb
ds
dec
pop
add
addr16
fstl
push
out
test
add
testl
jle
pop
fwait
dec
lea
add
and
pop
lahf
sbb
jns
dec
lds
stos
mov
add
add
aas
iret
test
xchg
add
aaa
stc
add
mov
xchg
imul
xor
sub
pop
pop
pop
adc
mov
jmp
sub
and
cmpsl
scas
xor
mov
sub
sbb
int3
add
pop
mov
sbb
pop
aam
mov
jns
test
xchg
pop
inc
mov
loopne
in
xor
sub
add
xlat
imul
repz
cmp
sbb
bound
push
jnp
loop
mov
push
leavew
mov
jbe
xorb
sub
pushf
inc
xchg
fwait
sub
jae
outsb
scas
int3
lret
clc
aad
out
outsb
leave
pushf
push
je
adc
mov
pop
mov
scas
jo
add
push
jae
loope
int3
lcall
mov
hlt
mov
nop
or
int3
xor
incb
mov
in
adc
shrb
jae
fsubr
adc
sbb
ror
sbb
dec
add
clc
mov
xchg
mov
jp
jl
int3
or
dec
add
push
sbb
aam
xchg
mov
inc
xchg
inc
add
cmp
cs
add
push
push
sbb
arpl
add
rcrl
ret
inc
jl
sbb
fldcw
flds
xchg
dec
fidivrs
push
push
fisttpl
dec
ja
leave
aas
lods
push
add
in
cld
pop
nop
cmp
add
lods
dec
movsb
cmpsb
ss
add
stos
xchg
popa
sub
inc
jo
aad
mov
dec
jns
jg
outsl
jmp
adc
jns
int3
sub
shll
add
push
insb
xchg
add
jp
add
and
add
sti
and
enter
cmp
push
dec
xchg
inc
push
add
push
add
shll
imul
add
scas
add
add
inc
push
adc
mov
cmpsl
std
jg
pop
xchg
rcrb
loope
das
arpl
pop
fcompl
adc
mov
jns
cli
les
sti
inc
inc
mov
sub
cmc
xor
jae
xor
add
sti
xor
ss
lock
push
push
in
mov
inc
or
add
sub
into
popa
add
dec
mov
ror
movl
call
or
inc
imul
dec
aam
ljmp
jp
scas
ljmp
pop
jmp
dec
gs
or
pop
sahf
cmp
cmp
fistps
jle
push
rorb
ss
sahf
add
pop
jno
icebp
xchg
mov
mov
fstl
add
cltd
dec
cmpsb
add
jecxz
out
and
insb
push
mov
mov
sbb
xchg
fisubl
cmp
add
inc
inc
lahf
jmp
cmc
jnp
pop
add
jno
pop
les
add
add
or
stos
push
pop
or
xor
sbb
add
add
add
hlt
scas
sahf
inc
ret
sarl
add
add
pop
add
cli
movaps
mov
je
int3
sub
icebp
fcmove
mov
add
add
add
jp
jmp
pop
sub
mov
es
add
lret
scas
lret
xlat
ss
sub
pop
add
pop
add
cmp
mov
cltd
push
add
lret
sahf
push
xchg
xchg
stc
fwait
pop
ja
sub
fbld
jns
sbb
inc
ljmp
mov
and
xchg
lcall
mov
out
flds
ljmp
shl
mov
mov
cmpsb
inc
scas
add
add
add
ds
xlat
or
orl
cwtl
dec
xor
scas
add
jmp
std
fnstcw
fmull
inc
out
repz
loop
test
orb
jnp
xor
subl
or
in
add
jp
mov
adc
xchg
lcall
out
mov
xor
add
adc
add
add
test
pop
add
out
jno
jae
cwtl
popf
mov
pop
shrb
sbb
or
or
jne
call
add
cli
cmc
je
mov
sbb
sbb
jle
fstpt
jmp
es
subb
push
cmp
incl
add
movsl
cmp
mov
sub
add
fbld
mov
les
adc
xor
and
add
pop
out
std
int3
decb
add
mov
push
xlat
out
pop
jno
dec
and
jp
mov
inc
in
dec
popf
mov
push
loopne
mov
aaa
and
mov
xchg
lods
loop
dec
sbb
popf
xor
or
cmp
ficoml
bound
add
mov
adc
pop
test
icebp
inc
dec
leave
cs
scas
inc
sbbl
flds
movsl
movsb
pop
jmp
lret
imul
insb
call
push
roll
mov
adc
stos
out
cs
mov
std
hlt
pop
aad
pop
add
cwtl
enter
add
add
push
nop
add
cltd
dec
jge
mov
mov
mov
or
in
jb
lods
dec
jno
cmpsl
push
fs
mov
lds
mov
cli
fistl
cmp
int
jne
out
add
push
push
push
sarl
jne
sub
mov
int
mov
add
push
inc
dec
js
stos
xchg
js
cs
add
xlat
sbb
cmpsb
jle
mov
cmp
into
or
data16
mov
pop
nopl
popf
ja
int
add
imul
add
push
test
cmp
rolb
dec
pusha
add
cli
push
add
xor
add
js
add
lock
sub
xchg
sub
xor
add
aaa
xor
sub
xor
imul
push
adc
sbb
das
lods
mov
push
mov
repz
and
lods
jge
std
lret
ds
fisttpl
add
pop
pusha
and
add
fdivl
add
out
stos
mov
add
dec
inc
dec
cmpsb
ror
cmpb
push
leave
leave
xchg
pushf
jmp
inc
dec
loop
notl
or
repz
or
fisubl
in
sub
adcl
xchg
jle
popf
out
add
pop
xor
aad
pop
jmp
mov
inc
jae
pop
into
mov
int3
in
cmp
add
inc
jns
push
xchg
jns
mov
in
fisttps
add
hlt
cld
mov
cmp
adc
add
and
pushf
das
leave
jnp
mov
imul
add
movsb
jg
repnz
fldt
cmp
dec
push
les
je
iret
add
add
mov
add
sbb
adc
jo
fldcw
lcall
add
gs
dec
lds
push
scas
xchg
lret
sbb
jmp
adc
push
xor
cmpsb
jns
pop
jbe
mov
jbe
add
inc
int3
and
mov
dec
pop
ret
hlt
pop
out
cmp
call
dec
or
xor
repnz
loopne
add
movsl
ds
cmp
mov
jecxz
lret
xchg
lret
xor
imul
and
lahf
mov
jmp
xchg
push
pop
mov
enter
arpl
push
push
mov
aas
add
and
lret
aad
xchg
mov
push
int3
sub
xchg
add
xor
cmp
xchg
cwtl
mov
add
push
push
xchg
cwtl
sbb
mov
push
test
scas
mov
mov
xor
imul
outsl
mov
cmp
jo
xchg
insb
cmpsb
pusha
and
pop
push
cmp
das
imul
adc
add
ret
lret
ds
sbb
js
add
daa
adc
std
repz
pop
cli
mov
push
testb
mov
addr16
add
jmp
les
std
xor
ret
mov
je
pop
jbe
add
dec
ds
arpl
dec
xchg
movsl
js
mov
popa
jecxz
add
roll
inc
adc
mov
fsubs
loopne
sbb
xchg
clc
je
add
pop
and
cmp
aaa
testl
mulb
sub
jb
fcoms
add
dec
loope
add
jne
mov
jne
fwait
add
mov
stc
dec
sahf
jmp
mov
mov
mov
add
add
test
cmp
add
adc
enter
mov
imul
arpl
adc
scas
and
stos
nop
shlb
clc
insl
ret
xor
jno
dec
fnstsw
dec
ljmp
sbb
ror
mov
add
lods
dec
add
imul
int
clc
fnsave
xsha256
cmpsb
adc
cmp
call
add
push
test
and
mov
std
into
add
and
push
add
loopne
in
nop
or
adc
lcall
out
jp
movsl
lret
mov
mov
out
loopne
add
add
movsb
push
mov
add
mov
pop
mov
andb
dec
out
adc
add
movb
add
clc
xor
jp
mov
data16
xchg
pop
fwait
cmp
fsubl
add
frstor
sbb
pop
ss
push
mov
pop
push
adc
sub
roll
out
mov
sbbb
incb
insb
ljmp
push
jo
push
push
pop
dec
mov
cmp
incl
mov
xchg
lahf
add
sub
lock
xlat
push
adc
out
mov
xchg
insb
dec
jno
sbb
adc
xchg
movsl
pop
sub
addr16
fs
sbb
push
cmp
jle
js
incl
or
pop
scas
mov
int3
shlb
ret
add
add
mov
sub
add
movsb
jle
cwtl
sub
and
out
arpl
cmc
loop
cmp
xor
cld
lock
sbb
add
fisubrl
push
adc
mov
add
pop
inc
cli
jecxz
add
fdivl
push
gs
mov
add
cmp
mov
push
push
aad
in
in
ljmp
add
stos
mov
ror
mov
loop
clc
push
pop
adcl
cmc
shl
pushl
lcall
and
push
pop
sbb
inc
push
jo
aaa
jb
mov
aad
and
cmp
add
push
add
mov
aas
push
add
mov
lds
out
je
bound
decb
icebp
mov
aaa
in
test
xchg
int
lret
pop
cmp
xchg
lret
add
jge
sub
pop
lret
icebp
add
iret
aaa
fwait
pop
cwtl
in
mov
movl
add
movsl
stos
sbb
fwait
and
lahf
je
jl
or
xor
dec
outsl
popf
sub
icebp
fisttps
inc
mov
stos
and
ffree
cmp
popf
xor
out
cltd
aas
movb
sldt
cmp
cmp
add
loop
rclb
mov
jb
xchg
add
xlat
jb
add
test
ja
pop
out
xor
in
adc
ljmp
add
cmp
xchg
inc
jp
movb
pop
add
xchg
or
dec
repnz
jb
add
ja
scas
test
icebp
aad
mov
in
in
mov
sub
shrl
add
inc
testb
add
sub
cltd
lea
aaa
sbb
iret
repz
movsb
loop
hlt
das
inc
dec
scas
fs
push
je
jbe
dec
cs
incl
loop
lcall
push
data16
sahf
hlt
sti
dec
insb
rorb
cmpsl
pusha
jb
js
add
bound
mov
mov
aam
xlat
xchg
jo
rol
faddl
adc
jl
dec
data16
sub
add
pop
flds
hlt
sahf
js
or
mov
cmp
pusha
lds
xor
mov
adc
lods
mov
cmpb
outsl
ljmp
stos
popa
bound
dec
sbb
pop
add
mov
jl
jbe
scas
lret
repz
shlb
inc
pop
rcrl
add
int3
ucomiss
mov
xchg
sub
mov
int3
and
xlat
jl
aam
sub
sub
lods
pusha
mov
xor
outsb
pop
push
xor
outsl
adc
aaa
nop
add
mov
ss
lods
cmp
ss
fs
xor
inc
xor
add
inc
pop
faddl
stos
loopne
add
or
or
cmp
pop
lret
add
ljmp
aad
sbb
fwait
adc
cmp
push
jmp
enter
popa
mov
push
sarl
rcrb
xchg
add
sbb
add
imul
roll
xchg
mov
insl
and
inc
jno
push
std
mov
add
lcall
in
xchg
sbb
cmp
xor
dec
hlt
outsb
pop
ret
jecxz
mov
out
xchg
das
add
hlt
arpl
sub
dec
in
cmp
mov
outsl
add
xchg
outsb
cltd
lcall
xor
fwait
pop
adc
add
fstps
pusha
dec
roll
jbe
mov
popf
repnz
inc
adc
xchg
fwait
imulb
xor
add
xchg
movaps
cmp
call
xchg
outsl
xchg
lret
scas
or
add
enter
cmpsb
popa
inc
movsl
add
jmp
add
pop
cmp
dec
add
insb
in
add
ret
ret
mov
sub
je
push
add
iret
leave
xchg
jmp
lret
mov
in
jb
mov
sbb
out
mov
ds
add
and
sti
xchg
push
inc
jg
insb
fdivrs
dec
lret
dec
popl
mov
lods
loop
sbb
aaa
add
fldcw
pop
pop
loop
bound
nop
shll
xchg
leave
loope
fisubrl
jno
mov
data16
fisubrl
imulb
mov
add
insl
lods
xorb
sbb
andb
cmp
add
mov
loopne
je
mov
inc
pusha
cmp
fildl
lea
aam
xchg
jns
jae
fwait
mov
push
pusha
sbb
add
mov
push
mov
leave
gs
add
adc
cwtl
arpl
popf
fcmovnu
jb
or
pusha
mov
and
mov
out
mov
or
jge
cmp
sbb
out
jns
jbe
ret
lds
jae
mov
jne
add
mov
and
add
test
lock
push
sbb
pop
sub
add
out
add
lret
mov
loope
mov
js
mov
mov
add
cmp
or
fbld
pusha
pop
fldl
fwait
jnp
lcall
sub
adc
sbb
imul
push
ds
dec
mov
push
arpl
pop
sbb
jo
int
add
inc
mov
sahf
mov
jecxz
or
push
mov
sbb
adc
test
push
icebp
mov
ljmp
inc
cld
arpl
icebp
ret
or
mov
or
shrl
mov
xor
enter
push
add
movsl
or
cmp
les
sbb
sti
xchg
or
insb
ss
sub
inc
sbb
jge
stos
add
fiadds
adc
test
sub
mov
mov
cmp
jbe
add
xchg
pop
nop
mov
jmp
inc
cwtl
mov
mov
sub
imul
stc
je
inc
fadds
mov
add
movsb
add
jbe
sub
lret
andb
mov
or
mov
sbb
cltd
jecxz
ret
movsb
pop
xchg
add
sbbb
inc
adc
stc
add
cmp
jnp
add
add
xchg
mov
and
and
jbe
pop
add
testl
sub
out
fcoml
or
sbbl
in
pusha
es
mov
push
mov
leave
sub
sub
push
clts
add
shll
xchg
xor
sbb
add
pusha
add
mov
mov
imul
add
movsl
cmpsl
mov
xor
lock
jl
cmp
loopne
add
push
flds
test
ret
sahf
sbb
es
add
xor
xchg
sub
aas
inc
cmpsb
jmp
loop
loope
mov
add
int
dec
sbb
imul
and
scas
popa
std
cmp
in
jne
in
mov
jl
inc
gs
jns
mov
leave
or
add
xchg
in
jecxz
adc
outsb
lea
dec
scas
inc
inc
stos
adc
rcrl
jecxz
ljmp
negb
stos
scas
mov
mov
imulb
add
fwait
pop
push
cmp
aad
and
push
icebp
call
hlt
xchg
cmp
cli
and
mov
add
aam
or
lock
adc
sub
out
add
pop
cmp
add
sub
pop
sarb
repz
jmp
arpl
pop
cmp
lds
mov
push
xor
and
add
loope
adc
pusha
push
lods
add
mov
out
ss
adc
aaa
inc
pop
test
shll
andl
aam
hlt
int3
lret
shll
and
in
lret
jl
add
scas
add
jl
adc
test
rcr
orb
mov
mov
pushf
scas
int3
addr16
cmp
inc
lods
mov
add
jge
dec
mov
adc
sarb
push
lret
outsb
add
mov
jge
push
pusha
push
hlt
scas
push
and
repnz
add
adc
pop
loope
aaa
add
clc
stos
xor
insb
gs
or
mov
or
jae
add
inc
stos
shl
ret
scas
inc
mov
loope
popa
add
leave
add
outsl
daa
jmp
filds
xchg
out
inc
outsl
add
test
aam
push
mov
add
lcall
mov
xor
add
mov
gs
pop
nop
inc
xchg
add
xchg
or
outsl
pop
popl
repnz
ftst
mov
in
jno
add
iret
push
cltd
sbb
sti
adc
testb
cwtl
fwait
mov
and
cltd
xor
aas
push
xor
sbb
data16
or
pop
push
pop
or
and
scas
dec
xchg
addr16
adc
aaa
sbb
ljmp
pop
lahf
popl
push
call
mov
add
cmp
out
or
dec
sub
add
push
or
lret
mov
jne
xor
out
add
loopne
add
add
aam
add
aam
add
or
mov
push
push
movsl
mov
call
lock
mulb
test
aas
add
flds
ds
and
add
lock
pushl
lcall
or
mov
and
mov
lods
cmpsb
and
inc
mov
pop
add
sbb
inc
in
rol
pop
add
push
xor
xor
add
test
jno
std
xchg
sub
inc
rorb
push
sub
pop
test
xor
andb
add
cmp
jmp
mov
dec
xchg
int3
aam
add
pop
pop
xor
insl
fidivrl
pop
xor
ja
add
and
xor
jcxz
js
add
int
dec
push
in
adc
addl
idivl
cmp
add
in
add
call
xchg
pop
fmull
pop
jo
add
add
movsb
push
jge
mov
lret
lea
and
and
idivl
outsl
xor
hlt
mov
cmp
outsb
inc
mov
daa
in
movb
xchg
push
mov
xor
sbb
andb
add
or
push
lock
jl
jnp
fnsave
push
adc
add
jo
out
mov
jne
nop
jecxz
idivl
das
add
test
mov
dec
dec
xor
cmp
mov
add
lock
sub
je
sbb
stos
into
in
and
push
mov
push
sbb
add
stc
loope
daa
push
rorl
and
imul
mov
inc
sti
aam
int3
test
rclb
inc
fistpll
xor
enter
stc
add
scas
testb
aad
or
push
out
ds
jle
aas
push
adc
jno
pop
add
mov
rorl
jle
add
js
or
xlat
scas
out
gs
inc
test
adc
add
cmpsb
inc
add
jns
xchg
lcall
push
jl
add
add
add
jl
mov
dec
jge
ret
mov
mov
rorl
sub
notl
adc
mov
push
or
nop
js
mov
pop
pop
mov
mov
mov
push
ss
test
fcmovne
stc
outsl
rcll
jo
js
jl
stos
or
dec
dec
mov
adc
add
inc
outsb
add
push
jne
dec
cmp
rorb
adc
push
fs
pop
out
cli
lods
iret
or
cmp
sbb
arpl
in
adc
addr16
add
push
xchg
add
push
repz
daa
ss
jb
and
ret
xchg
dec
pop
adc
adc
mov
lock
add
cmp
push
add
mov
adc
cld
mov
add
mov
insb
sub
cmp
xor
idivl
xchg
int3
imul
add
je
imul
add
jg
xchg
outsl
pop
test
mov
add
fmulp
mov
push
sub
jns
lods
lret
mov
sub
inc
das
xchg
pop
dec
sub
push
add
add
xor
add
xlat
leave
add
jo
int3
push
adc
mov
fldl
mov
das
xchg
jae
push
mov
add
pop
arpl
cmp
fwait
sub
inc
mov
add
dec
push
mov
xchg
xchg
dec
add
pop
or
loopne
orl
xor
loope
xlat
or
adc
loope
in
xorb
das
mov
push
pop
jne
and
jb
mov
dec
and
jno
add
push
hlt
testb
pop
test
sbb
mov
and
xor
mov
or
xchg
inc
mov
or
push
jmp
repz
inc
sbb
add
cmp
iret
mov
jb
iret
enter
add
iret
xchg
xchg
jmp
adc
cmc
insb
pop
arpl
add
jmp
add
and
dec
add
jg
dec
sbb
mov
mov
push
and
add
movsb
sub
mov
in
pop
sbb
enter
jge
ds
out
std
and
leave
cmp
clc
or
sbb
mov
add
or
add
add
mov
sub
pushf
mov
add
addl
ss
mov
push
mov
repnz
outsl
push
movb
add
or
cmp
mov
xor
add
scas
lcall
imul
cmc
and
jg
add
call
cmp
mov
push
cmp
insl
fstpt
dec
stc
xlat
je
add
push
lret
jne
jns
and
test
shufps
popa
mov
dec
sbb
fisubs
jne
cltd
jb
xor
and
push
pop
add
adcb
shll
sub
jl
cmc
ss
sti
aad
sbb
add
lods
add
enter
xchg
nop
jae
divb
xchg
xchg
dec
add
cwtl
mov
dec
leave
outsl
add
jbe
jmp
les
iret
mov
mov
mov
mov
addb
xchg
inc
sarl
jae
sub
add
ret
js
mov
pusha
sbb
xchg
outsb
add
lock
push
jl
push
cmp
fimull
pop
shrl
cmp
arpl
das
je
lods
inc
mov
icebp
xchg
imul
orl
add
fimull
nop
add
cmp
cmp
adc
jno
sbb
add
outsb
add
xchg
in
add
lahf
imul
dec
loope
inc
dec
or
add
adc
in
adc
sahf
je
pop
push
push
add
xchg
imul
test
repz
jo
add
scas
mov
js
xchg
int
in
repz
adc
add
dec
in
cltd
mov
cld
add
rcrb
xchg
js
xor
movsb
mov
jbe
mov
cld
aam
jbe
mov
or
test
dec
sbb
push
gs
fstps
ljmp
lea
dec
test
sbb
pop
mov
into
pop
scas
int3
push
push
scas
arpl
popf
fyl2xp1
add
movsl
pop
or
mov
add
xor
xor
add
cmp
jmp
daa
xor
into
xor
popf
push
ss
loopne
adc
cmc
sub
fwait
xor
sub
sbb
sbb
mull
mov
dec
imul
mov
repnz
pop
rcr
pop
pop
or
jle
lds
pmullw
faddp
add
shrl
mov
cmp
lret
popa
int3
cltd
mov
pop
hlt
lea
adc
or
ds
and
xchg
adc
sub
pop
icebp
rolb
pop
shlb
add
mov
leave
loopne
test
inc
add
sti
push
add
sub
lods
fwait
push
sbb
insb
fildll
add
mov
iret
jnp
ja
lods
imul
mov
push
in
sbb
outsl
inc
push
jnp
incb
mov
add
or
mov
sarb
aam
cmovnp
dec
cmp
fldl
add
add
add
ds
stos
fdivr
fcomps
enter
cmpsb
lds
movsb
cmp
addb
push
mov
jno
adc
mov
push
pop
outsb
pusha
incb
push
add
add
add
sub
add
out
add
popa
sub
xchg
out
push
sub
xor
xchg
es
inc
or
ds
jmp
mov
lods
int
fsubr
addr16
cmp
pop
iret
into
jle
jle
mov
mov
add
add
insb
push
jg
out
sbb
leave
and
rcr
lock
shll
pop
and
add
fmul
lcall
test
inc
cld
and
pop
jo
jecxz
test
mov
cwtl
add
or
sbb
add
mov
arpl
stos
jne
add
lods
rcll
popa
add
add
subl
and
sahf
pop
clc
mov
bound
repz
add
into
xor
rcl
or
mov
negb
add
push
add
sbb
xor
mov
mov
sarl
repz
shll
lds
and
lea
movsl
icebp
pop
and
xlat
aaa
cwtl
loopne
push
inc
inc
cmp
cli
loop
pop
add
mov
add
inc
xor
adc
sub
int3
add
or
mov
cli
lret
push
jne
jne
mov
adc
or
dec
testb
daa
pop
data16
add
push
imul
sub
fildl
mov
add
pop
xor
pop
xchg
and
mov
roll
mov
jae
cmp
rclb
incb
jg
pop
add
xor
out
cld
mov
les
push
push
xchg
out
sub
aad
mov
es
call
add
mov
jns
cmp
sub
pop
test
jge
outsl
out
add
aas
sahf
repz
ficomps
bound
scas
add
incb
xchg
testb
dec
sti
adc
xchg
mov
inc
mov
in
scas
stc
mov
jno
aaa
scas
pop
das
pop
int
daa
std
in
aas
and
movsl
or
std
outsl
jnp
popa
mov
flds
mov
inc
add
cmp
sub
add
dec
lods
bound
or
arpl
pop
jo
shl
and
insl
xchg
lahf
push
outsl
sbb
add
gs
inc
cmp
scas
pop
stc
clc
movsl
out
cli
inc
clc
call
fistps
pusha
enter
cli
arpl
loope
add
xchg
sbb
stos
icebp
repnz
and
int3
dec
inc
xor
add
jp
sub
or
add
push
adc
fnstenv
xlat
inc
or
sarb
ljmp
and
add
rol
sbb
add
cs
mov
repnz
movl
hlt
mov
mov
jns
xchg
rorb
xor
sbb
adc
popa
inc
pusha
mov
lods
inc
pop
sub
imul
fistpl
hlt
jo
sbb
push
jmp
pop
add
xchg
arpl
mov
stc
ja
mov
lods
fld
gs
fdivr
or
xor
shlb
inc
mov
mov
out
pop
cmp
mov
es
jnp
sarb
and
pop
adc
or
lret
cmp
ss
roll
jge
jbe
stc
and
sub
xor
inc
push
test
scas
cmc
dec
cmp
imul
int3
mov
arpl
pop
xorl
adc
js
aad
or
add
adc
inc
jmp
add
sub
in
in
outsl
or
into
add
dec
repnz
incb
add
std
add
cltd
fistl
fcomps
das
or
jno
scas
les
aad
add
bound
sarl
add
mov
test
jmp
adc
orl
pop
clc
sahf
dec
dec
nop
xchg
mov
mov
fbld
add
rorl
jg
mov
roll
clc
mov
xchg
inc
pop
ljmp
lret
add
movsl
in
gs
int
add
fs
repz
xorb
js
push
add
inc
mov
jb
pop
pop
cmpsb
add
inc
shlb
jo
or
inc
stos
add
push
mov
cmp
aam
add
lret
and
jge
in
push
incb
pop
sbb
incl
int
or
cltd
add
add
jo
insb
add
out
add
imul
jbe
push
std
cltd
rorl
cmc
and
addr16
push
addr16
lock
aas
lret
loopne
rcrb
add
mov
es
repz
push
jg
inc
sbb
in
and
enter
lcall
xor
add
xor
and
adc
movsb
aas
hlt
std
fcomp
rorb
mov
test
mov
rcrl
not
lea
xor
ljmp
jne
pop
lret
mov
lret
jl
lds
f2xm1
add
fnstsw
sbb
and
mov
add
cmpsb
gs
scas
add
scas
jb
mov
add
aas
lcall
fdivl
imul
mov
mov
orl
add
xor
icebp
lcall
nop
jmp
in
mov
cmpl
in
add
std
ret
test
inc
movsb
stos
pop
or
jle
sub
and
and
daa
jae
xor
test
hlt
into
cwtl
lods
push
idivl
jl
ds
pusha
icebp
sbb
sub
sub
jbe
xor
int
ljmp
add
adc
add
or
inc
xchg
add
ja
mull
and
sbb
inc
pop
sub
insb
jg
mov
push
jns
js
add
mov
enter
add
movb
in
insb
jmp
jns
push
iret
mov
or
add
xchg
push
lret
out
or
mov
aad
int3
pop
in
mov
mov
cs
add
lret
adc
sub
pop
dec
jne
aaa
inc
sub
push
lods
inc
cmc
cmp
outsb
adc
dec
push
jne
mulb
push
push
jge
add
xchg
dec
outsl
xchg
std
lds
fmul
sbb
mov
add
mov
fimuls
and
imul
sbb
bound
push
inc
int
inc
add
sbb
mov
jne
cmp
mov
aam
mov
jo
pop
xchg
aas
jo
daa
jmp
push
pushf
mov
fldl
mov
std
mov
jbe
add
arpl
add
cmp
int
jecxz
sti
cmp
cmp
and
in
fadds
sti
ret
push
inc
or
fmull
pushf
movsl
repz
adc
cmp
cmp
shrb
mov
xchg
add
stos
add
push
orb
add
add
add
adc
jmp
lods
add
daa
and
adc
in
add
popa
or
icebp
ljmp
dec
pop
or
addr16
xchg
add
aam
int
xor
push
sbb
std
es
add
add
shlb
scas
gs
pop
test
add
pop
adc
in
add
add
push
pop
fadds
lods
cmp
xchg
add
shlb
jecxz
or
xchg
movsl
jns
mov
jp
in
mov
outsb
dec
stc
fsubs
adc
jg
mov
add
test
or
jge
adc
movsl
add
jge
out
lcall
sub
leave
add
mov
stos
xor
loopne
add
aas
add
adc
mov
mov
mov
push
movsl
mov
repnz
mov
loope
enter
push
sahf
bound
push
dec
testb
add
dec
cmp
or
jecxz
pop
in
mov
shrl
push
sub
sahf
pop
sub
inc
call
fmuls
xor
stos
and
imul
loop
outsl
pop
cld
loop
loope
jne
mov
xor
add
xchg
push
add
test
add
insb
stos
imul
sbb
pop
icebp
nop
add
mov
inc
push
dec
sub
and
dec
jb
das
setne
jge
movsb
imul
std
add
aaa
dec
add
fildll
in
nop
xor
xor
xchg
aam
out
shr
inc
lods
movzwl
les
cmpsb
and
jae
gs
pop
outsb
mov
mov
add
orl
mov
cmp
imul
out
push
jp
add
adc
jno
push
cwtl
hlt
movsl
bound
das
pop
cltd
jmp
shll
add
xor
mov
push
mov
aaa
fsubp
add
mov
add
pop
js
mov
lds
or
data16
mov
add
mov
add
fs
addr16
and
adc
int3
xchg
add
mov
inc
mov
into
addl
push
add
das
ret
lea
sub
dec
mov
repz
cmp
mov
add
out
xchg
ljmp
icebp
add
mov
pushf
mov
mov
popf
repz
dec
inc
sahf
pop
cwtl
mov
lods
pop
pop
push
xchg
add
push
add
insl
sbb
and
dec
mov
out
test
lcall
ljmp
dec
add
rorb
scas
push
adc
mov
dec
flds
or
inc
xchg
mov
pushf
add
mov
xchg
imul
fmuls
in
mov
lods
mov
lods
add
fdivp
lcall
gs
xchg
movsl
mov
aad
pushf
push
sahf
dec
mov
xor
add
sub
mov
test
fistpl
cltd
mov
mov
adc
jb
and
lock
mov
fdivr
add
add
add
fnop
pop
xor
inc
imul
add
ret
int
dec
scas
sarb
pop
aas
pop
xchg
pop
test
pop
pop
rcl
jg
add
enter
and
add
ret
ja
jae
mov
aam
push
add
mov
jecxz
push
add
repz
aam
add
mov
aaa
add
add
pop
test
pop
xchg
pop
jle
mov
jb
or
add
add
cs
jne
div
push
push
leave
xor
jns
dec
popa
add
dec
add
mov
mov
add
inc
insl
add
fcmovb
jge
cmpsl
adc
add
pusha
add
sti
sarl
mov
popf
add
repz
ljmp
and
std
cmp
push
push
push
lock
jle
xor
pop
out
rorl
adc
pop
pushf
xor
loopne
push
inc
xor
mov
test
push
in
mov
repnz
adc
push
cmp
sub
push
adc
jle
mov
data16
pop
out
jbe
ficomps
test
scas
mov
icebp
call
pop
insl
popf
jl
or
mov
mov
xor
inc
mov
push
lods
test
cltd
mov
jns
jecxz
mov
cmp
and
sahf
jl
add
loop
jmp
test
pop
popf
mov
jle,pn
inc
xchg
sub
shlb
push
fidivs
mov
mov
lods
enter
hlt
loopne
in
push
xchg
mov
and
lock
add
inc
jae
or
or
test
popl
adc
mov
cmp
pop
movsbl
mov
sub
push
movsw
test
je
add
jle
push
loop
inc
popf
inc
cmp
or
jecxz
dec
iret
add
add
imul
out
inc
xlat
mov
mov
lea
xchg
shl
add
in
mov
nop
jecxz
cs
loopne
imul
add
call
pushf
jnp
fdivs
into
insl
dec
xchg
lea
pop
int
fnstenv
add
mov
push
test
pop
adc
aad
ret
outsb
mov
imul
imul
lcall
sti
movsb
or
subl
mov
incb
push
inc
test
fld
xchg
sub
dec
fidivrl
je
pop
shl
int
lds
xor
gs
cmpsb
fdivrs
out
add
sti
out
std
sbb
cmp
add
hlt
xor
int
add
add
lods
fisttpll
add
mov
inc
fwait
add
das
mov
out
add
outsb
cmpsb
idiv
ret
out
scas
jne
push
sahf
jae
mov
inc
or
add
mov
dec
je
add
mov
add
sub
and
movl
jp
cmp
mov
inc
inc
gs
notl
sarb
aaa
pop
jnp
stos
sub
mov
into
cltd
int3
xchg
rolb
add
icebp
out
ja
cwtl
cmpl
mov
ds
lcall
punpckldq
sub
mov
cld
and
and
hlt
or
add
push
add
insl
out
sub
daa
mov
out
add
add
pop
adc
outsl
leave
xchg
inc
jge
pop
std
ret
jmp
or
out
and
icebp
nop
inc
add
add
addr16
cmp
push
shr
xor
movsbl
add
ds
bound
shlb
imul
ret
loopne,pt
dec
orl
cmp
push
lods
mov
jno
jp
xor
mov
mov
push
and
xchg
pop
sar
enter
push
es
lret
fidivrl
arpl
flds
mov
lahf
adc
push
lods
or
cmpsb
pop
cmpsb
cmp
cmc
lcall
test
loope
movsb
or
sbb
xchg
loopne
sub
mov
xchg
sub
sub
sti
pop
lahf
and
dec
lods
add
in
inc
pop
std
push
mov
mov
and
add
sbb
inc
jb
push
push
out
jns
sbb
sub
xor
xchg
push
xlat
rolb
mov
lds
aam
cmp
in
adc
stos
xor
jg
add
insb
test
loope
mov
ds
add
and
imul
imul
add
cld
les
or
adc
and
fistl
add
imul
pop
repz
mov
cmc
sbb
lret
add
pop
inc
jbe
add
mov
daa
mov
add
jge
mov
mov
mov
in
add
stos
imul
mov
inc
inc
add
pop
popf
pop
and
xlat
enter
sahf
pop
add
jne
and
scas
and
mov
xlat
fiadds
ds
test
add
nop
nop
shrl
in
mov
pop
pop
inc
mov
xor
mov
pop
lock
add
fwait
cmpsl
cld
xchg
xlat
movsb
leave
inc
les
mov
dec
and
add
hlt
fstp
and
fmuls
daa
sahf
roll
add
dec
dec
mov
out
add
add
out
sbb
cmp
push
push
and
dec
and
adc
mov
jo
dec
xchg
lea
pop
xchg
adc
add
pop
and
pusha
enter
add
arpl
push
cmp
push
daa
and
ret
mov
or
or
out
add
jbe
aas
in
mov
or
inc
mov
out
in
add
and
repnz
xor
leave
sarb
cmc
mov
add
fcomps
fmuls
ret
add
sbb
push
scas
fs
jno
mov
out
add
adc
add
shlb
pop
add
push
mov
and
inc
or
fistpll
ret
les
xchg
popf
ljmp
mov
xchg
push
push
stos
lcallw
add
popf
cmpsb
mov
sbb
or
lock
cmp
scas
and
or
mov
and
jecxz
sub
cmpl
and
js
cmpsl
fldcw
add
jg
leave
fildl
xor
pushf
and
mov
push
pop
fs
in
cmp
dec
xor
mov
push
push
adc
lods
pop
std
lahf
sbb
aam
rclb
mov
imul
inc
jbe
inc
lcall
std
dec
mov
cmp
cli
or
add
sbb
daa
cli
jne
jne
sahf
jb
add
add
add
xor
and
sub
mov
add
outsl
push
and
mov
negl
popf
mov
add
inc
outsl
sbb
jecxz
add
fistl
frstor
mov
aam
lcall
and
rolb
add
and
lcall
cmp
add
incl
test
addb
dec
popf
xor
in
add
bound
mov
loopne
daa
into
std
inc
data16
or
into
and
and
push
mov
mov
mov
std
filds
mov
mov
fiaddl
xor
mov
leave
cmp
lods
add
xor
fstpl
leave
cwtl
jnp
int3
mov
or
data16
clc
mov
iret
add
push
stos
mov
lods
xor
mov
jae
testl
push
test
ljmp
lock
leave
clc
adc
mov
inc
repz
lahf
in
add
mov
std
or
and
pop
add
jg
incl
mov
aad
add
xor
sbb
notb
add
xchg
mov
and
neg
shrl
inc
add
add
lods
adc
in
sti
pushf
inc
loopne
testb
adc
inc
prefetchwt1
push
add
xorb
inc
xor
ret
testl
aam
add
inc
aaa
in
dec
xlat
insb
push
out
dec
or
imul
push
les
imul
movsl
repnz
sbb
inc
pop
push
mov
movsl
in
adc
cmp
les
add
jg
jb
lcall
aad
jo
adc
shll
loopne
loope
add
sbb
sbb
xor
nop
shr
jl
fmull
adc
test
pop
xor
lods
outsl
cmp
jae
adc
inc
xor
adc
sub
int3
dec
std
scas
push
mov
add
mov
dec
adc
xor
cvtps2pd
add
add
jnp
mov
mov
jb
jg
loopne
lds
shr
loop
test
sahf
mov
repz
fiadds
movsl
inc
or
add
call
lcall
add
scas
leave
imulb
mov
notl
push
jle
push
add
orl
arpl
inc
push
mov
filds
das
add
scas
add
sub
pop
push
jnp
xor
xchg
add
xchg
push
and
mov
sbb
mov
out
mov
mov
mov
xlat
lock
pop
push
jp
test
fsubrs
mov
js
add
int
add
mov
mov
push
mov
sub
iretw
divl
insl
je
cli
push
or
cmp
test
lea
cmp
adc
and
inc
cmp
and
sahf
in
mov
push
pop
test
stos
in
loopne
add
pusha
add
loop
loop
add
pop
add
and
add
xor
loopne
mov
mov
test
in
add
dec
test
cmp
ds
testb
dec
hlt
jbe
sub
mov
mov
mov
test
sub
xchg
inc
sub
sbbl
xor
ss
bound
mov
mov
push
add
jg
ds
cmp
stc
and
test
inc
ret
bound
add
shrl
lea
mov
pushf
xorl
jbe
xor
sub
fsubs
pop
fidivrl
push
mov
fimuls
jns
imul
xchg
adc
enter
jne
add
int
xchg
fs
in
sub
pop
or
mov
add
jp
inc
lret
imul
push
or
out
jne
pop
adc
inc
mov
imul
add
inc
cmc
push
mov
mov
data16
arpl
dec
mov
adc
ror
enter
jle
fildll
pop
jge
cmp
add
scas
dec
push
sbb
sbb
add
mov
filds
imul
out
repz
loopne
cmp
pushl
mov
add
jp
int
bound
mov
xchg
pop
int
pushf
movsb
jge
and
std
add
adc
jle
es
add
push
cmc
shlb
adc
arpl
negl
cwtl
sub
fwait
add
xor
cmp
movsl
xor
and
pop
jmp
jnp
sbb
push
or
add
xchg
mov
fisubrs
jbe
push
push
adc
xor
xchg
cmpsl
nop
testl
pushf
mov
adc
test
push
jg
or
add
add
jg
in
or
push
stos
in
mov
ljmp
xor
adcl
shrl
adc
loope
jl
add
add
add
xchg
in
insl
add
int
mov
inc
xchg
sub
add
and
mov
insl
pop
sub
push
pop
insl
cmpsl
add
ret
pop
jecxz
cmp
shlb
cmpsl
pop
aas
ds
mov
mov
push
mov
lret
test
sbbb
push
dec
jle
jae
inc
out
jmp
test
ret
out
nop
inc
add
sub
add
imul
mov
stc
jno
gs
and
jbe
inc
adc
sub
fisubs
idivl
mov
ftst
decl
jb
add
addb
mov
add
or
stos
mov
mov
jns
hlt
pop
push
cmpsb
das
pop
cltd
sbb
daa
sub
mov
lds
incb
mov
ja
addl
dec
xlat
es
cmp
mov
rol
mov
jnp
rol
xchg
or
movsb
push
hlt
pop
mov
adc
xor
jns
add
das
shll
or
rorl
movsl
pushf
ja
imul
cmp
inc
addl
lret
jmp
add
ja
jae
push
xor
fsts
in
xor
dec
test
lcall
mov
cmc
testb
sub
inc
cwtl
data16
xor
push
aad
mov
imul
rol
adc
push
push
jne
xchg
lret
mov
mov
pop
sub
jo
xor
cmp
fidivrl
negb
add
pop
test
in
lret
push
and
pusha
je
sub
mov
jge
pop
sar
dec
mov
fwait
stos
mov
psubd
and
insl
cmpsb
add
notl
fmull
je
push
mov
std
add
lods
js
push
jne
ljmp
test
mov
iret
stos
cltd
sbb
push
inc
cld
lahf
cmp
xor
or
add
mov
sti
stos
pusha
movsl
add
push
stos
roll
movsb
add
sbb
sub
mov
cmp
and
add
notl
xor
xlat
test
lea
mov
xchg
sbb
movsb
inc
add
aaa
repz
sub
push
fstpl
xchg
dec
and
out
daa
loope
or
add
cld
lret
imull
xchg
push
mov
jne
add
mov
add
xor
gs
es
sbb
mov
adc
push
jbe
sbb
sub
push
mov
add
push
cmp
sti
scas
fdivs
push
jo
fisubl
scas
mov
sarb
pop
lds
xchg
sti
jbe
xchg
nop
mov
out
or
mov
add
pop
or
sbb
cld
outsl
sub
cmpb
sti
mov
dec
mov
xor
shl
sbb
outsl
cmp
sarl
pushf
test
jg
or
adc
ljmp
cmpsl
xor
cmp
dec
xlat
imul
cmovb
cli
add
cmp
insl
add
sahf
jo
and
pop
push
pop
leave
leave
popf
jns
cmp
stos
pop
hlt
arpl
xor
aas
mul
sbb
nop
repz
sub
js
stos
faddl
add
adc
xlat
cltd
adc
sbb
out
rcll
add
or
je
sahf
add
lret
out
outsb
int3
dec
and
dec
rcrb
add
and
les
and
cmp
fistl
movsl
out
sbb
sbbb
dec
outsl
ret
out
test
in
push
lods
popf
mov
fs
notl
dec
add
add
mov
or
cmp
dec
ds
fcmovb
outsb
dec
jns
lods
aas
call
stc
mov
and
add
mov
xchg
addr16
mov
ret
mov
pop
adc
inc
cwtl
pop
iret
ja
shr
add
aaa
pop
xchg
push
lods
aas
xor
mov
nop
jle
pop
clc
inc
add
aas
dec
add
add
ret
in
add
jo
insl
and
loop
dec
ret
out
pop
fs
out
das
mov
push
call
mov
mov
jnp
xor
mov
xor
sub
sub
lea
lea
jle
inc
mov
movsb
ds
cmp
bound
or
add
rcll
arpl
add
adc
jo
popa
ja
in
stos
ret
add
and
int3
fsubr
pop
adc
rcl
add
jae
add
fidivrs
les
jae
outsb
xchg
adc
lcall
bound
mov
call
faddl
iret
insl
pop
bound
ret
gs
pop
sub
add
pop
outsb
lahf
icebp
je
add
aaa
je
inc
jae,pt
inc
cwtl
cmp
stos
add
add
ret
outsl
or
adc
ficomps
mov
test
mov
lds
add
xor
movsb
sbb
add
add
push
mov
dec
xchg
sub
stos
pop
shll
inc
or
loop
sub
insb
fsubl
pusha
pop
dec
out
add
jnp
pop
fmuls
and
roll
lods
push
add
add
push
icebp
inc
std
sub
jge
mov
nop
inc
test
push
icebp
push
shrb
das
mov
mov
loop
sub
les
dec
jle
stos
jne
insl
xor
dec
loope
push
in
mov
jle
mov
aad
xchg
adc
div
movl
xlat
cltd
or
out
arpl
push
pusha
jae
xlat
pop
or
xor
adc
cwtl
shlb
and
scas
mov
sbb
fstps
sub
fildll
loope
add
daa
adc
inc
icebp
cmpl
int3
jnp
lret
jg
and
dec
sahf
sub
mov
sub
fisubrs
cs
lds
sbb
out
add
cmc
pop
loopne
pop
and
pushl
add
or
add
shrl
sbb
push
sti
test
xlat
dec
sbb
or
inc
aas
cltd
push
push
mov
ja
es
mov
add
push
cmc
clc
jl
mov
insb
cwtl
enter
int
ss
mov
inc
dec
call
xor
ret
adc
in
incl
mov
addb
movsb
sbb
dec
mov
popl
mov
inc
subl
jl
aam
test
mov
dec
add
lods
ds
jecxz
roll
in
add
loop
jno
xchg
mov
test
cmp
flds
pop
and
sbb
shr
loop
in
imul
in
push
or
add
aaa
xchg
mov
mov
out
push
push
xchg
jge
ja
insb
jge
in
dec
xchg
add
ret
and
mov
int3
and
jo
add
das
push
clc
je
jmp
and
inc
in
and
leave
sahf
out
lock
and
xor
hlt
jl
add
and
xchg
out
add
push
add
dec
test
icebp
push
add
push
es
xchg
adc
jae
add
add
inc
dec
inc
mov
and
fsts
mov
sub
mov
push
pusha
outsb
outsb
and
sbb
sbb
push
gs
dec
add
adcl
lret
jg
les
hlt
cmp
ficoml
incb
fmull
adc
or
jecxz
add
out
int
mov
cmp
out
jg
push
fsubl
pop
jp
inc
pushf
sub
clc
pop
loop
call
lea
mov
add
jno
mov
pop
shlb
lcall
test
inc
inc
jns
lcall
lds
test
inc
mov
push
lods
inc
data16
xchg
subl
push
imul
ds
mov
sub
sbb
insb
pop
sub
xchg
xlat
ds
testl
xor
push
pop
or
mov
loope
js
lahf
pop
aad
in
and
add
outsl
push
orb
sub
fdivrp
xor
je
outsl
sub
pop
adc
mov
and
mov
dec
pop
movsb
sbb
jge
mov
rorl
push
add
add
mov
movsl
cltd
iret
push
add
xchg
outsl
add
add
mov
adc
and
sub
dec
cmp
sbb
shl
and
add
adc
scas
inc
shl
nop
sti
xchg
movsb
add
sub
adc
leave
and
lds
push
jp
pop
lret
mov
scas
adc
les
dec
push
arpl
xchg
ja
fmull
push
cwtl
xchg
arpl
cmp
cmp
rolb
loopne
jbe
adc
mov
jmpw
mov
iret
dec
jecxz
jae
js
rcrb
lods
mov
cmpsl
push
xchg
cmpsl
mov
jno
dec
jae
add
jle
inc
xchg
hlt
out
cmp
lret
out
lahf
cmp
xchg
mov
subl
add
adc
add
sbb
sub
lods
push
test
stos
adc
push
sub
daa
in
nop
xor
ss
add
rolb
arpl
inc
neg
mov
mov
rcrb
pop
shrl
aad
jl
add
lcall
pop
mov
gs
add
ret
mov
add
rorb
inc
cmpsl
fs
push
pop
push
arpl
lret
pop
lds
lock
scas
dec
pop
fnstcw
notl
add
aad
aam
add
iret
inc
push
daa
sbbb
mov
aam
inc
js
cmp
or
mov
out
add
cmp
lret
repnz
div
xchg
std
cltd
dec
test
mov
inc
pop
ss
ror
enter
mov
pop
test
lods
jns
dec
popa
xor
cli
add
jg
push
inc
stc
icebp
jne
sbb
push
into
jmp
test
add
lret
add
inc
or
cmp
xchg
jne
mov
sbb
popa
and
packssdw
jmp
out
add
outsb
mov
mov
decl
and
add
push
add
add
jae
dec
call
scas
push
sub
jo
push
xchg
add
or
add
add
lods
popf
sbb
dec
pop
jp
sbb
xchg
and
in
sub
pop
frstor
repnz
xor
das
sbb
test
sbb
sub
enter
outsl
or
and
sub
add
or
mov
sahf
enter
mov
cmpsl
add
or
ds
int3
mov
or
test
mov
add
ljmp
jmp
mull
push
pop
sub
leave
fwait
ds
cmpsb
lods
add
into
push
scas
fisubrs
xchg
jns
cmp
xor
inc
ja
add
leave
sub
inc
in
sbb
pop
push
pop
and
add
pop
bswap
pop
add
mov
adc
add
add
and
sbb
loope
mov
mov
cmpsl
pushf
add
inc
mov
add
lods
pop
in
jno
mov
jg
rcll
push
or
cmp
dec
jmp
xchg
je
pop
fcompl
add
dec
repnz
mov
xor
ret
add
and
add
filds
movsl
xchg
mov
sbb
add
roll
repnz
or
test
fiadds
add
push
mov
and
dec
ret
cmpsb
xchg
rorl
or
pop
ret
cmp
sbb
icebp
andb
xor
dec
jecxz
jl
test
mov
int
dec
push
push
sbb
inc
ja
jle
xlat
aaa
and
dec
and
add
add
aad
cmc
and
jno
enter
addl
inc
js
add
push
push
sahf
pusha
push
mov
add
and
add
adc
push
call
daa
pop
lret
mov
ret
push
cld
call
xor
push
movsb
in
fisubl
mov
inc
push
fiadds
addr16
int3
or
and
xor
jge
adc
cmpsb
xchg
sbb
out
cmp
xchg
pop
inc
ds
add
adc
add
rorb
mov
fs
mov
call
pop
cli
add
sbb
scas
movsb
add
cmp
xor
adc
hlt
mov
jno
add
xor
rolb
lods
jg
enter
mov
imul
lds
faddl
outsl
fwait
dec
leave
arpl
js
add
sub
shrb
inc
inc
fmul
jne
or
push
ljmp
lcall
addb
add
jns
xchg
sub
stos
sbb
add
push
xchg
cmp
add
cmpb
cmp
or
jbe
add
add
les
add
pop
out
adc
rolb
inc
call
popa
test
add
pop
xor
pop
mov
pop
into
xor
and
call
or
icebp
data16
movsl
js
mov
add
sub
add
add
push
push
jo,pn
add
outsb
shr
outsl
add
push
xor
jecxz
ret
mov
cmp
add
mov
lods
lcall
or
dec
frstpm(287
mov
add
shl
xchg
sub
data16
arpl
repz
add
aad
stos
arpl
dec
loope
push
pop
push
and
xchg
mov
add
adc
loop
mov
push
movsl
mov
pop
or
loope
add
add
fcmovu
addr16
xorb
push
jns
into
inc
iret
pop
lods
lahf
add
pop
cmpl
xor
add
iret
in
mov
call
sbb
xchg
add
mov
pushf
add
xchg
xor
jge
sub
lea
sub
decl
add
pop
cmpxchg
mov
xchg
push
mov
sti
ja
pop
jno
shll
add
add
popf
cwtl
mov
outsl
popa
fadds
cmp
lock
mov
jbe
stc
jge
pop
pop
mov
mov
xor
xchg
push
sbb
mov
mov
sub
hlt
pop
outsb
inc
xchg
mov
or
jmp
mov
and
mov
or
repnz
lods
push
sti
std
pop
add
in
aaa
adc
popa
pop
push
idiv
jg
ja
cltd
pushf
fs
push
or
cmp
xchg
and
inc
push
pop
pop
add
outsl
and
test
arpl
inc
mov
sahf
and
cld
xchg
inc
adc
xchg
jg
bound
dec
daa
adc
jno
int
jp
add
aad
dec
loop
add
sbb
fmuls
dec
daa
and
add
xor
mov
adc
add
mov
imul
xor
jg
lock
jg
bndldx
out
mov
mov
lret
movsb
pop
add
and
add
sbb
cmp
sub
test
cltd
nop
xlat
add
mov
jp
add
push
jo
pop
dec
adc
ret
pushf
popa
addr16
idivl
cwtl
push
push
pop
repnz
in
pop
add
pop
jb
pop
mov
cmp
add
push
mov
loopne
jg
sbb
inc
verr
push
dec
push
fnstsw
push
das
lcall
cmp
dec
jmp
xor
mov
pusha
into
push
rcrb
jo
fsub
ret
jnp
add
adc
arpl
movsl
xor
push
or
mov
lea
adc
push
dec
sbb
cld
adc
adc
les
mov
je
es
add
jg
jns
outsl
dec
xor
push
loopne
dec
push
push
imul
lahf
add
mov
popa
add
add
cmp
inc
xchg
add
je
xor
jmp
fldcw
andb
xchg
ret
rolb
add
sub
mov
lret
stos
mov
adc
cmp
add
xchg
ds
or
movsb
add
popf
ret
mov
adc
add
or
popf
inc
sahf
out
xchg
cmp
les
jp
mov
lods
sahf
addr16
xor
pop
push
test
add
push
adc
sti
arpl
mov
mov
xorl
shll
sbb
mov
mov
push
jo
or
inc
loop
mov
mov
xchg
push
mov
in
rclb
and
pop
mov
add
js
pop
fwait
andb
popa
rcr
scas
sub
repnz
add
add
loope
add
bnd
lods
ret
insl
push
mov
and
clc
das
and
mov
jo
push
add
add
add
mov
mov
jmp
push
dec
aaa
and
add
and
adc
xchg
out
loope
lcall
add
or
mov
cmc
dec
jl
jl
cmp
push
jmp
jb
add
add
subb
mov
cld
cmp
mov
xchg
add
iret
aam
lds
out
int3
mov
fsubr
add
fdivs
add
or
xchg
pop
add
pop
add
ja
add
fs
pop
or
mov
mov
mov
xor
mov
xchg
out
sbb
mov
push
add
bound
adc
add
mov
pop
fnsave
popf
add
add
mov
xchg
inc
or
movsb
and
and
bound
xchg
and
inc
rolb
or
xchg
xchg
mov
push
or
or
loopne
sbb
sub
scas
lods
mov
jb
nop
mov
xor
aam
jge
inc
xor
daa
jp
push
add
dec
cli
add
add
test
icebp
shll
idiv
sti
stos
ja
add
mov
test
add
call
xor
push
cli
xchg
xchg
bound
icebp
xor
xor
cmc
lods
loope
inc
push
repnz
pusha
add
add
add
daa
adc
add
out
push
scas
add
pop
in
jno
and
pop
cmc
sub
add
je
ja
xchg
lods
add
xchg
int3
jl
mov
push
outsl
xor
or
mov
jp
into
movb
add
sub
imul
add
sub
mul
or
dec
push
dec
cmp
sbb
lea
mov
rclb
jnp
icebp
sbb
or
add
call
out
ja
flds
cs
add
nop
pushf
mov
dec
or
dec
add
scas
add
call
loopne
lret
bound
mov
stos
ror
cmp
or
add
sbb
js
flds
inc
mov
jp
jne
mov
add
mov
mov
testl
dec
and
pmovmskb
dec
gs
jp
fisttps
jae
add
sarl
xchg
xchg
lea
js
mov
mov
cwtl
pop
sbb
mov
clc
insl
dec
arpl
inc
out
fistpll
lret
jle
vdivss
lock
xchg
mov
cmp
push
sub
roll
pop
pop
adc
add
ret
mov
loope
lock
lds
sbb
mov
stos
push
ljmp
cmp
pop
add
cmp
adcb
pop
imull
loope
xchg
jp
ja
dec
test
push
sbb
cmp
cmp
into
lods
aaa
movsb
mov
dec
adc
call
rcll
add
pop
iret
js
out
in
mov
or
add
mov
add
xor
test
test
lods
cmp
and
add
hlt
mov
es
add
fs
xor
cmp
sbb
nop
dec
shrb
add
icebp
pop
addr16
pop
add
dec
add
or
add
fwait
add
sbb
sub
std
xor
addr16
popa
and
mov
jno
imul
jmp
inc
pushf
js
push
jne
inc
aas
push
in
into
cmp
lahf
bound
and
pop
xor
push
test
rolb
xlat
and
popa
add
xor
lods
add
lods
push
add
or
pop
sub
or
and
pusha
int3
mov
cmc
add
and
ljmp
sub
sbb
lea
pop
mov
mov
arpl
xor
or
push
movsb
inc
jmp
ror
sbb
dec
fxam
mov
push
push
sub
mov
out
jno
out
mov
mov
add
mov
push
pop
movsl
incb
rcrl
or
xchg
repz
push
adc
mov
es
nop
mov
jge
push
jb
dec
rolb
sub
lret
jecxz
add
inc
push
in
out
test
fstpt
xchg
adc
and
mov
or
add
fmull
mov
xor
sub
pop
push
in
dec
mov
lods
shlb
xchg
hlt
fsts
mov
jbe
mov
fisttps
and
mov
jle
js
mov
icebp
repnz
mov
fbstp
push
mov
jnp
add
lcall
aas
xchg
add
hlt
xchg
in
mov
dec
cmc
dec
add
mov
add
jge
lcall
fldenv
and
cmp
jge
ljmp
cld
cwtl
mov
inc
mov
push
popl
cmpsb
test
add
int3
aad
das
shlb
adc
mov
movsl
mov
scas
mov
or
inc
mov
add
dec
mov
dec
pop
lret
je
in
add
les
push
add
mov
pop
push
in
and
xchg
stos
dec
jp
push
addr16
into
push
lock
incl
push
jo
push
inc
push
sub
or
mov
xchg
nop
add
mov
repz
inc
add
add
adc
push
lahf
or
cmpsb
sub
and
adc
dec
test
out
xor
loope
icebp
outsb
ret
jl
mov
je
mov
and
mov
test
cmp
lret
or
lds
scas
dec
lret
or
xchg
aaa
mov
cld
scas
mov
pop
jns
jno
add
xchg
cli
dec
jg
popa
pop
xlat
fimull
dec
xor
jg
fidivrl
loopne
push
or
push
ret
add
add
and
add
ja
xor
repnz
mov
lret
mov
test
outsb
aas
jnp
mov
loop
aam
mov
inc
cmovl
xor
add
pop
popf
mov
add
add
jns
cmp
aad
inc
push
add
adc
sub
jle
mov
out
xchg
pop
in
repnz
out
adc
xchg
in
xchg
das
lds
and
ja
jae
adc
es
lds
das
pop
add
add
fyl2xp1
lea
mov
int3
fsub
ds
jl
sbbb
mov
movsl
inc
push
xchg
lods
cmc
fcmovnbe
push
xchg
push
xor
test
add
lods
or
jmp
out
mov
cmpsl
out
and
in
iret
mov
pop
ret
mov
push
dec
mov
decl
inc
out
ffreep
adc
or
add
mov
add
imul
add
push
subl
jne
xchg
rolb
add
jb
lahf
outsb
add
lods
repz
add
cld
push
cs
cltd
cmc
lahf
pop
add
or
add
fsubl
aad
and
dec
ficoms
repnz
push
adc
jmp
inc
pop
inc
icebp
call
into
dec
add
sbb
repnz
jnp
pop
outsb
loope
add
xchg
push
rorb
shr
nop
data16
loop
mov
xchg
es
in
mov
add
lods
ds
add
out
ret
sbb
stos
into
add
adc
mov
fimull
pop
cmc
loopne
and
enter
mov
dec
xchg
rolb
push
adc
push
sub
pop
jns
add
xchg
add
enter
addr16
sbb
pop
add
movsl
push
lahf
popf
lret
xchg
repz
push
enter
das
fldl
rcr
std
dec
add
shll
cmpsl
outsl
adc
cld
cmp
jae
pop
mov
pop
mov
call
xchg
add
add
out
add
inc
addr16
xor
add
repz
dec
repz
lret
js
cmp
testb
dec
insb
test
imul
add
add
imul
and
add
dec
mov
es
fs
shrb
jp
arpl
dec
xor
dec
xor
push
mov
or
cmp
push
add
mov
adc
loope
push
xor
lods
cmp
bound
mov
pop
push
in
add
sbb
stos
sti
cmp
scas
mov
cmp
mov
mov
negl
add
and
sub
adc
icebp
sub
xor
mov
out
out
popf
je
repz
fstpl
cmp
insl
jge
ret
cmp
pop
mov
loope
aaa
mov
pusha
popa
daa
and
adc
inc
iret
add
xchg
cld
aam
mov
push
leave
mov
repz
aam
cmp
nop
mov
out
outsl
cltd
es
and
in
dec
xchg
data16
add
mov
stos
fnstsw
mov
mov
loop
shr
add
add
enter
cld
movsb
mov
xor
rcl
or
int
jle
push
je
push
add
add
popa
insb
xor
mov
inc
fs
je
push
enter
scas
push
arpl
xor
int3
fistps
mov
lods
and
add
add
xchg
stos
pmulhw
jo
add
xchg
mov
xor
xor
lcall
push
xlat
sub
jmp
cmc
test
arpl
test
push
jno
insl
test
test
fistps
jns
cmpl
pop
stc
add
xchg
adc
outsl
fcomps
hlt
mov
xchg
lahf
ror
sbb
add
movsb
cmpsb
mov
les
lods
add
insb
inc
dec
dec
add
jb
cmpsb
dec
imulb
push
out
xchg
sbbl
testl
jns
adc
inc
notl
les
fldt
xchg
inc
push
out
sub
ljmp
add
push
push
inc
movb
std
adc
inc
push
clc
add
mov
addl
adc
pop
push
scas
add
push
sbb
inc
shll
in
repz
shlb
lea
ret
pop
test
xchg
clc
mov
sub
xchg
adc
shlb
inc
int3
or
rcrb
jbe
xchg
push
pop
add
in
jne
pop
dec
adc
dec
sbb
js
add
loopne
xor
in
mov
add
xchg
and
addb
lgs
dec
mov
movsl
stos
mov
test
adc
mov
mov
dec
add
add
sub
xor
mov
push
sbb
imul
xor
add
sbb
leave
xchg
ror
xchg
mov
outsl
into
jp
jbe
lahf
nop
stc
add
int
fidivl
lods
mov
orl
repz
xor
lds
add
flds
jae
mov
push
mov
add
insl
aaa
stc
std
push
add
shlb
jmp
sbb
add
aad
or
pop
jns
jbe
push
add
push
push
out
xchg
fistps
push
pop
sub
cmp
aam
mov
incl
mov
jle
push
popa
out
push
add
icebp
and
cld
addb
loop
cli
sbbl
pop
enter
sbb
ss
or
scas
dec
mov
push
inc
cmp
icebp
dec
inc
inc
inc
pop
add
popa
inc
lcall
data16
xlat
sahf
test
aaa
clc
mov
xchg
xlat
stos
repnz
add
pop
push
dec
jno
cwtl
dec
add
push
pop
xor
jnp
add
xor
inc
add
jg
rolb
test
out
mov
jecxz
add
adc
lock
mov
lcall
and
loopne
inc
shr
gs
inc
xchg
scas
jp
jno
xor
adc
pusha
es
add
sarl
add
bound
mov
push
stc
add
cmc
add
je
sbb
mov
mov
imul
inc
xor
test
outsl
std
xor
pop
into
imul
mov
add
daa
add
fs
loope
xchg
add
or
rol
xchg
mov
insl
add
rorb
out
mov
iret
insb
dec
addl
mov
add
addb
test
nop
iret
cli
inc
ret
pop
std
xor
mov
pop
xor
cmp
je
xchg
cmp
mov
fiadds
push
sbb
add
jle
jbe
subl
cmp
push
jl
xchg
cmp
jecxz
insl
mov
jns
scas
xor
cli
std
arpl
ror
addl
mov
lahf
inc
fisttps
pop
jge
sub
call
cltd
popf
in
mov
inc
add
add
jno
lret
iret
mov
and
sbb
fwait
pop
lret
inc
sbb
gs
mov
push
dec
out
push
and
rcll
adc
inc
push
sub
dec
lret
push
hlt
xchg
dec
repnz
ss
and
rol
push
fs
mov
jnp
xchg
cmp
add
fstpt
movsl
nop
sub
pop
std
adc
cmp
add
shl
stos
fs
ja
jbe
xchg
push
imul
pop
xchg
dec
out
jge
mov
xchg
xchg
push
jmp
bound
and
mov
adc
sub
xor
add
add
aad
loope
out
mov
push
inc
mov
in
out
clc
pushf
sahf
adc
add
add
ljmp
ret
repz
cs
add
add
pusha
or
orb
cmc
cltd
lods
adc
mov
outsl
xchg
call
xchg
mov
mov
test
out
sti
sbb
jle
je
xchg
mov
xor
push
mov
jp
mov
xchg
cli
add
jle
cld
add
dec
scas
add
in
outsl
das
and
sub
push
jmp
bound
inc
cli
popa
daa
pop
pop
pop
dec
in
inc
mov
popf
sub
aaa
cli
loop
arpl
mov
add
push
mov
mov
sbb
xor
adc
nop
pop
icebp
stos
sarl
add
jb
lods
fisubs
adc
pop
fldlg2
enter
ss
leave
roll
fsubrs
lea
loopne
dec
xchg
sub
insb
das
pushf
fsubrs
add
sub
sahf
xlat
je
cli
jge
mov
faddl
jl
movsb
mov
cli
add
xchg
imul
add
lods
mov
mov
xor
mov
push
cmp
data16
gs
subl
xlat
push
lods
test
faddl
and
loop
adc
lcall
lcall
sbb
shlb
in
jecxz
add
mov
shl
dec
or
ss
mov
sbb
int
test
out
and
dec
leave
mov
jno
xlat
pop
scas
and
leave
add
loopne
cmp
add
add
add
loope
add
mov
ret
jo
in
jns
mov
xor
outsl
sarb
or
scas
in
mov
repz
das
nop
mov
lea
inc
dec
and
push
ret
push
dec
inc
hlt
imul
pop
add
data16
stos
dec
fisttpll
imul
and
rolb
js
push
jp
add
shll
js
add
lock
add
dec
push
and
out
shll
gs
mov
in
push
cmp
jns
rorb
stc
or
scas
sub
adc
xchg
add
jno
push
push
hlt
dec
mov
mov
push
mov
movsl
sbb
aaa
push
leave
int3
sti
add
testl
fdivl
mov
pop
add
mov
out
add
add
xchg
adc
mov
inc
clc
int3
dec
sbb
mov
push
xchg
mov
stc
sti
add
mov
xchg
mov
xchg
xchg
lods
insl
rclb
mov
sbb
and
mov
nop
mov
cmp
cld
add
add
sbb
imul
mov
lods
cmc
cmpb
ss
fs
sbb
insl
mov
pop
inc
push
add
in
ljmp
std
mov
xchg
mov
jmp
jnp
loope
in
add
adc
fisubs
push
add
sbb
add
jo
sub
cmp
cmp
mov
add
jae
jg
mov
les
mov
mov
ds
mov
add
lods
popa
call
xor
fldt
jb
lods
cs
jnp
add
sbb
das
mov
cmpsl
jp
fisubrl
push
movl
inc
mov
dec
sti
test
int
or
roll
push
out
sub
std
pop
xchg
adc
dec
cmova
clc
or
xlat
cmp
mov
sbb
add
xor
aad
sub
jno
inc
jb
mov
pop
filds
inc
cmpsb
xchg
sbbl
or
in
push
mov
xchg
arpl
lea
cmpsb
sbb
inc
es
shlb
dec
stos
mov
push
add
mov
inc
pop
popf
aas
cld
lcall
adc
pop
icebp
add
pop
push
mov
adc
pop
test
cmp
jmp
mul
jge
or
or
jl
lods
or
rol
sbb
mov
adc
adc
cmc
push
test
imul
stos
aaa
out
jmp
sbb
imul
pop
ret
push
sbb
icebp
or
mov
repnz
hlt
push
jecxz
nop
sbb
imul
mov
cld
sub
shlb
lret
cmp
std
mov
dec
add
add
add
imul
ja
add
push
outsb
mov
or
into
mov
mov
cmpsb
sbb
mov
xor
mov
in
cmp
push
aam
popf
add
xorl
lcall
and
add
and
lods
xor
jge
ja
inc
repnz
stc
mov
rcr
in
adc
add
sti
xchg
xor
xor
lea
je
test
sub
out
add
dec
psubb
dec
fstpl
jle
imul
mov
lea
add
aam
sarb
dec
push
mov
sbb
les
loopne
add
cmpsb
in
dec
shlb
popa
jp
orl
jnp
dec
sbb
sarb
jmp
add
lock
jne
lods
data16
add
popa
push
mov
mov
mov
fidivrs
xor
cmp
popf
aam
add
pop
sahf
shrb
cmp
stc
mov
in
mov
sub
xchg
and
outsb
js
into
jecxz
sbb
add
add
test
arpl
lea
jne
mov
out
test
sub
mov
enter
add
sarl
pusha
cwtl
mov
repz
xchg
xchg
mov
add
repnz
sbb
scas
add
push
sbb
mov
sub
lods
mov
js
cs
sarl
aam
xchg
jne
add
fidivl
and
cmpsl
dec
inc
orb
add
daa
bound
jp
dec
sub
mov
adc
and
push
aas
insb
pop
xorb
xor
lea
jl
cs
repnz
nop
or
aaa
cmp
mov
popa
cmp
push
or
ret
test
pop
stos
pusha
adc
stos
in
add
and
dec
adc
jne
cmp
dec
and
sub
push
imul
dec
add
mov
mov
in
mov
mov
add
add
fstpt
xor
mov
jmp
adc
into
mov
add
pop
mov
enter
xor
xchg
cltd
dec
or
jbe
add
mull
adc
icebp
xlat
lock
imul
dec
cli
sahf
out
sbb
or
mov
addl
cld
ss
int3
xchg
ficomps
add
cmp
gs
sub
jp
popl
add
loop
add
pop
bnd
fwait
popf
dec
outsl
imul
sbb
pop
mov
push
bound
dec
hlt
les
sarb
popf
inc
xchg
mov
ret
xor
and
mov
cwtl
jl
stc
add
inc
add
and
arpl
pop
out
cmp
call
repz
icebp
bound
outsb
loop
and
in
mov
pop
xchg
popa
and
in
mov
scas
mov
adc
lods
mul
pop
ret
lods
mov
and
inc
add
jno,pt
orb
insb
gs
movsb
mov
dec
ljmp
add
and
shll
into
aaa
add
int
mov
sub
push
sbb
adc
mov
dec
int3
into
sub
call
ret
in
jbe
fiadds
jmp
clc
cmp
push
inc
or
pop
add
testb
lret
and
mov
mov
rorl
xor
mov
lret
shll
push
repnz
mov
sub
cmp
or
fimull
adc
add
mov
icebp
mov
loop
aam
adc
cwtl
subl
jg
lods
mov
mov
negl
sub
icebp
xchg
add
stos
inc
ltr
adc
and
and
add
and
push
push
cmp
sub
bound
add
and
into
or
div
jb
fildl
jge
or
mov
add
lods
inc
or
test
fsubr
lods
cmp
mov
sub
into
sbb
jmp
cmp
dec
pop
dec
sub
push
stc
add
sbb
fbld
xor
lds
xlat
or
roll
sbb
and
in
push
notl
add
inc
push
out
sub
rol
lcall
add
in
sbb
jae
sbb
repz
mov
mov
add
mov
cmpsb
es
std
cltd
mov
adc
pop
rolb
neg
movsb
cmc
iret
add
fs
shrb
add
cld
scas
lea
rcl
add
mov
std
and
ds
mov
add
push
lea
lret
sar
mov
add
rcl
movsl
cli
add
or
mov
add
shll
cmp
add
cwtl
mov
mov
clc
cs
mov
xchg
ds
repnz
imul
add
cmp
mov
imul
cmp
cmp
sub
xor
add
scas
pusha
and
add
add
mov
add
enter
notb
xchg
cltd
vmwrite
mov
mov
das
cmc
sub
mov
es
dec
add
movsl
pop
arpl
cld
ret
pop
gs
or
or
faddl
add
and
xor
mov
xor
and
add
mov
push
adcb
fiadds
add
mov
add
faddl
push
pop
mov
sub
mov
add
jge
jmp
mov
pop
mov
xor
add
adcb
pushl
addb
xor
push
outsl
jle
pop
fwait
push
stc
mov
push
add
cmpsb
es
dec
sahf
mov
add
hlt
aam
add
add
dec
add
add
cltd
mov
xchg
add
or
into
adc
cmp
xchg
aaa
adc
sbb
mov
jle
rcll
dec
lea
ret
xchg
adc
icebp
xchg
out
insb
add
in
and
out
bound
insl
xor
add
cltd
sub
das
rcll
adc
add
sub
cld
setge
adc
push
mov
shr
scas
insb
add
fistl
out
outsb
push
andnps
ret
sub
or
mov
cli
add
aam
xchg
cmp
scas
pop
popf
out
sbb
push
jg
inc
add
lret
lahf
lock
cmpsl
andl
sub
mov
in
insl
adc
test
cmp
and
mov
out
sbb
stc
ja
and
sti
out
shll
fsubp
cs
add
add
add
xchg
xchg
jecxz
xchg
xor
aaa
mov
xchg
mov
fiadds
test
add
jae
sbb
cli
xchg
in
pop
ret
push
or
ficompl
shl
adc
add
dec
add
ja
and
mov
clc
fsubr
mov
xlat
adc
xchg
cltd
jae
jnp
push
sbbl
aam
push
dec
leave
fldl
xchg
int3
pop
xor
out
jp
mov
sahf
imul
test
mov
push
fimull
add
mov
sub
sub
aas
ret
push
addr16
les
adc
add
pop
mov
mov
add
enter
loop
pop
xchg
push
xor
ljmp
imull
xorb
je
mov
imul
jno
jle
out
pop
out
mov
sbb
pop
push
add
add
xor
xlat
aam
xor
xchg
add
cmp
sbb
daa
jle
or
mov
nop
jb
fdivrs
movsb
pop
sahf
push
add
add
lock
pop
rcll
sbb
jnp
scas
mov
add
std
dec
movsb
pop
add
int
das
adc
add
or
jno
cmp
xchg
out
call
dec
dec
add
and
add
daa
jo
inc
test
popf
pop
push
cmp
jg
jg
mov
adc
xchg
mov
jecxz
dec
push
adc
nop
pop
dec
cs
xorb
or
aad
stos
push
xorb
aas
cmp
cmc
xor
sub
inc
pop
outsl
add
pop
popf
mov
mov
xchg
cmc
sub
mov
les
out
lret
add
repnz
add
scas
pop
in
mov
lds
paddb
cmp
xchg
push
aad
xchg
cmp
imul
mov
out
jp
push
add
pop
sub
inc
and
push
mov
pop
outsl
and
adc
add
inc
push
sub
jp
mov
ja
pop
jbe
jne
add
xor
ljmp
das
je
inc
add
and
cmovp
fs
ljmp
scas
pushf
cwtl
dec
inc
mov
cmp
lds
add
fwait
and
ljmp
inc
dec
js
push
jp
aam
divl
push
pop
fldt
mov
les
call
test
add
stc
cmp
sbb
lock
inc
inc
add
int3
gs
xor
jns
fs
add
filds
stos
sub
add
or
push
cmc
and
sbb
push
pushf
imul
cs
mov
je
add
add
mov
movsb
in
pop
cmp
add
add
inc
add
pop
pop
mov
out
jb
out
out
add
lret
cmpsb
aad
ds
outsl
loop
test
js
cli
scas
dec
pop
jmp
xor
add
rcrb
lahf
push
cs
cltd
bnd
add
in
movsb
mov
pop
dec
fiaddl
add
add
ret
sti
adc
add
outsb
mov
add
loope
leave
cltd
lcall
xor
pop
inc
pop
and
aas
xchg
mov
pop
pop
mov
push
fcomps
mov
or
cmp
mov
push
add
dec
adc
les
cmp
pusha
aas
add
mov
jnp
or
cmp
std
lods
sub
cld
aam
imul
pop
test
add
sbb
add
jmp
pop
mov
bound
insl
push
iret
ror
addr16
cmpsl
ljmp
xlat
xchg
jbe
stos
add
das
es
add
mov
adc
cwtl
out
add
pusha
call
xor
adc
lods
pop
pop
and
in
cmc
sahf
dec
es
add
jae
add
imul
loopne
adc
inc
add
popf
pushf
insl
incl
pop
test
and
sbb
push
das
or
adc
push
add
rolb
xor
repnz
imul
add
xchg
jnp
add
xchg
fucomip
pusha
sub
data16
jns
pop
aam
gs
add
mov
int
push
popf
lods
jb
adc
iret
in
fistpll
push
push
push
cmpsb
in
xor
xchg
sub
add
fstpl
or
pop
sbb
lcall
mov
sub
repnz
xor
mov
push
xchg
addr16
add
sahf
aaa
add
mov
add
mov
mov
push
fimull
add
xchg
call
stos
fisubl
or
sub
arpl
add
lea
add
arpl
arpl
movsl
or
dec
in
lods
into
out
sub
pop
leave
cwtl
add
sub
daa
rolb
and
xchg
shl
out
add
push
pop
popa
hlt
aas
imul
or
lret
mov
pop
add
in
lret
xlat
daa
add
jle
clc
mov
into
in
sarb
jmp
jge
add
sub
mov
push
push
mov
cmc
xor
data16
arpl
push
out
pop
out
cli
xor
xlat
fisubs
es
aaa
imul
in
push
sbb
sahf
test
aaa
in
arpl
dec
jo
int
rcrl
push
ret
add
pop
mul
insl
mov
out
scas
mov
mov
add
cmp
add
cmc
clc
mov
lcall
xchg
fimuls
cmpb
pop
decb
jmp
pop
jecxz
mov
leave
dec
leave
std
add
dec
ret
out
add
imul
xor
sub
fistpll
xor
loop
pop
xchg
out
or
xor
out
mov
test
add
add
cmp
inc
cwtl
xorb
test
les
in
and
mov
inc
push
test
rcrl
add
fsubr
cmp
add
add
fisttpll
or
lret
mov
inc
add
add
mov
xlat
jbe
push
jle
inc
cli
jae
mov
arpl
mov
iret
ljmp
add
outsb
cmc
add
add
cmpsl
and
ja
dec
fcoms
add
pop
out
and
cmp
jecxz
lret
and
jle
xchg
nop
pushf
aad
adc
sti
sbb
add
in
jno
dec
sbb
jmp
cmp
or
sub
push
xor
mov
cmc
add
sub
add
fists
add
dec
sub
std
mov
inc
mov
or
cmp
sbb
add
sti
loopne
dec
inc
add
jae
jne
add
inc
out
jae
xchg
mov
dec
sbb
mov
icebp
push
and
xchg
mov
mov
add
cmp
add
pop
lea
jle
in
shrl
fldcw
jno
xchg
in
mov
dec
add
jnp
push
in
add
add
jp
pop
add
imul
jecxz
inc
out
jecxz
sbb
dec
mov
jle
jecxz
and
nop
lcall
mov
cmp
jp
repnz
movsl
and
gs
or
add
add
push
lock
mov
aas
icebp
inc
sbb
lock
je
fists
aad
dec
push
jae
fcmovne
lahf
pop
pop
aas
add
mov
icebp
int3
test
jno
pop
sub
dec
fidivl
or
inc
cwtl
jecxz
out
ret
loope
add
jmp
add
aaa
popa
aaa
leave
and
scas
inc
add
in
insb
pop
test
sbb
mov
pop
mov
lret
sbb
mov
stos
mov
xchg
and
pusha
jbe
dec
icebp
xchg
cmpsw
daa
jle
roll
mov
repnz
inc
sub
mov
pop
pop
out
cwtl
adc
flds
xor
mov
add
pop
test
xchg
and
mov
dec
add
xor
dec
pusha
mov
push
add
adc
subl
jle
fwait
movsbl
jl
mov
stos
movb
sahf
cmp
inc
dec
add
add
push
dec
sub
mov
clc
adc
or
shll
push
or
pop
sbb
sbb
add
inc
addr16
arpl
pop
and
repz
clc
jb
jbe
mov
sub
jle
es
jns
add
lret
sub
jo
adc
cmp
addl
add
adc
inc
shlb
mov
fs
aaa
mov
ffreep
add
ds
popf
gs
dec
test
fs
int
and
jno
filds
ss
push
pop
jnp
fimuls
sub
add
rcl
mov
cmp
lahf
lea
add
addb
add
clc
sub
push
jl
mov
testb
inc
fldl
mov
setp
pop
mov
lock
imul
add
cld
idiv
in
sub
test
and
popl
sbb
cmp
jae
push
and
add
and
mov
out
int
xor
inc
mov
push
repz
add
cmp
cmp
ljmp
push
push
jl
leave
test
mov
lds
nop
sub
outsl
xchg
rolb
add
and
adc
repz
push
cmp
push
xchg
pop
icebp
mov
add
aam
addr16
hlt
rcr
aas
mov
and
jb
stc
sub
mov
popf
mov
mov
stc
mov
jns
mov
pop
movzbl
pop
sbb
xor
movl
add
adc
adc
push
sbb
aad
and
es
push
stos
mov
push
fdivl
add
push
or
jbe
jnp
stc
call
loopne
jno
add
and
push
add
add
push
pop
pop
push
insb
call
dec
rcrb
cmp
mov
mov
jle
cld
js
test
in
out
repz
sbb
not
add
stos
ret
sub
add
aad
mov
inc
adc
mov
das
inc
add
clc
add
lods
lcall
jmp
dec
jne
add
scas
mov
jo
lea
jmp
dec
pushf
push
bound
cli
adc
imul
jecxz
xlat
add
clc
rcl
dec
fsts
aaa
pop
int
hlt
mov
mov
push
insb
mov
addb
test
add
add
test
xchg
cmp
add
add
mov
cld
jg
mov
popf
adc
jmp
pop
int3
ja
mov
call
movsl
std
push
add
mov
dec
inc
insl
pop
idiv
jae
mov
jbe
stc
int3
xor
inc
cmp
es
int3
xor
fwait
mov
push
push
xorb
push
jg
push
sbb
jge
sbb
xorb
add
cs
lret
sbb
sbb
adc
cmp
out
cli
das
mov
in
add
add
add
bound
cmp
mov
jb
mov
push
pop
out
inc
push
add
push
xchg
jl
cmpsb
push
mov
pop
icebp
add
add
addb
xlat
aaa
adc
lahf
push
push
test
add
jb
outsl
sbb
push
stos
mov
in
jbe
mov
mov
sub
cmp
jns
xchg
ret
pop
mov
add
dec
dec
inc
orl
xor
nop
pop
cwtl
adc
add
push
imul
mov
cli
sbb
dec
xchg
daa
hlt
rcr
dec
in
mov
les
mov
sahf
in
mov
stos
or
sub
jno
pop
mov
in
and
mov
inc
stos
mov
sbb
daa
aam
add
xor
xchg
sbb
cmp
mov
flds
ja
jb
test
jns
pop
int
push
and
adc
adc
jecxz
inc
popa
les
lret
add
mov
sub
sub
xor
fbld
push
ret
xchg
add
xchg
jmp
add
cmp
das
jmp
xchg
scas
mov
shll
sbb
out
adc
das
sbb
push
cmp
xor
adc
cmpsl
shr
enter
xor
and
mov
inc
jecxz
pop
pop
add
and
cmpsl
rorb
push
outsb
xchg
mov
lods
in
or
fdiv
mov
mov
push
jle
inc
cs
xchg
sub
lcall
js
adc
push
fs
jns
and
or
fistps
hlt
in
jl
xor
daa
jecxz
leave
pop
mov
or
mov
nop
mov
test
ret
lods
icebp
lock
loop
sub
jge
push
inc
inc
pop
fs
loop
das
sub
adc
ficoms
xor
lret
inc
call
lock
mov
inc
mov
lds
popa
lods
add
les
add
gs
icebp
add
les
out
add
sub
or
push
xchg
and
mov
test
cmc
jge
add
and
or
enter
pop
pusha
test
adc
es
add
incb
mov
lret
mov
push
mov
sub
bound
into
add
xor
or
andb
cmpb
fildl
push
jbe
das
insb
jp
fdivr
sub
xor
dec
pop
cmp
fmulp
outsb
add
push
and
lods
xchg
repz
mov
aas
sub
rcrl
sarl
pusha
lods
enter
cli
mov
mov
jb
adc
lret
add
fcoms
mov
add
insb
js
mov
push
pushf
nop
pop
ds
dec
out
cmc
call
flds
push
aaa
inc
pushf
movsl
xchg
sbb
incb
sub
es
adc
int3
cltd
mov
add
add
inc
mov
mov
lea
ret
add
ret
call
push
mov
jne
pop
filds
push
sbb
sti
in
mov
dec
aaa
mov
leave
jo
lock
mov
sbb
jl
shl
add
add
cmp
jbe
inc
pop
jge
movsb
mov
nop
adc
stc
push
push
push
adc
push
mov
inc
jmp
sbb
ficomps
scas
jo
andb
or
dec
jne
sub
sbb
xor
add
dec
icebp
add
lods
add
mov
outsl
les
or
fsubrl
xchg
jns
mov
inc
lock
loope
cwtl
clc
pushf
clc
sub
cmp
push
push
incb
xchg
adc
lahf
mov
jns
jo
sahf
addl
push
cmp
lods
fisttps
pop
sbb
shrl
ss
pop
jo
loop
rclb
in
xchg
inc
xor
popf
shll
jb
dec
fdivs
add
out
xchg
fs
push
sub
jnp
and
stos
or
mov
stos
jb
xor
or
jne
jno
mov
xchg
iret
pusha
xchg
xchg
jnp
adc
mov
inc
sub
add
flds
xchg
add
aam
mov
add
jmp
imul
popa
lea
add
add
mov
incl
das
jmp
sti
add
pop
and
and
add
stos
leave
cltd
movsl
neg
xchg
popa
add
add
nop
add
adc
lock
test
xchg
sbb
movsb
pop
jae
inc
aad
mov
add
out
aam
leave
out
js
mov
loop
mov
inc
insl
push
push
repz
arpl
mov
mov
addb
xorl
filds
dec
aam
ja
das
incb
sbb
mov
cltd
cmp
push
adc
inc
into
pop
inc
mov
dec
push
stc
push
ja
mov
ja
mov
cltd
out
add
jmp
mov
add
push
popa
mov
mov
outsb
scas
push
inc
add
add
shlb
filds
cmc
dec
mov
enter
lods
jp
xchg
xchg
push
insl
mov
fwait
xor
cltd
mov
add
or
add
mov
mov
jcxz
rolb
cmp
add
mov
pop
cmp
xchg
xchg
mov
dec
dec
and
out
xchg
repnz
add
sub
fists
adc
lods
mov
jne
mov
imul
fcoms
cs
lea
hlt
repnz
fiaddl
addr16
or
out
jb
lds
dec
add
add
std
and
fiadds
ret
cld
daa
in
cmpsl
adcb
adc
xchg
maskmovq
notl
pushf
xchg
das
pushf
hlt
add
lcall
aad
xchg
pop
ret
out
jo
jbe
in
pop
das
lds
test
repnz
xor
aaa
xchg
pop
fwait
gs
add
outsl
mov
xor
lds
mov
mov
je
mov
jnp
xorb
or
add
add
rolb
arpl
notl
mov
cmp
sti
sub
dec
sub
fwait
add
add
popf
push
leave
int
lock
faddl
jge
add
pop
mov
insb
mov
mov
push
jbe
int3
loope
cmpsl
push
lcall
jl
mov
insl
inc
pop
add
je
add
aas
icebp
add
lret
push
add
iret
xchg
sbbl
or
fwait
dec
pop
add
lcall
add
pop
in
addr16
cli
cmc
addb
loop
outsl
lea
scas
leave
and
hlt
imul
push
divb
push
sbb
bound
sarl
leave
lahf
sbb
sahf
mov
dec
test
test
enter
adc
hlt
inc
rcr
test
push
cld
jnp
jmp
jae
ds
cmpsl
sub
loop
outsb
loop
xchg
loopne
imul
adc
dec
incb
lret
mov
arpl
dec
add
add
div
add
jb
sbb
mov
lods
mov
add
push
lahf
add
leave
pop
pop
pop
sbb
nop
push
jnp
mov
sbbb
mov
inc
or
push
add
lea
mov
adc
ffreep
add
xchg
iret
insl
add
int3
add
adc
cmc
int
xor
sbb
aam
imulb
shll
pop
inc
mov
popf
icebp
add
adc
or
add
add
xor
test
dec
jle
aam
enter
cmp
arpl
aam
jl
mov
mov
addr16
push
inc
mov
mov
xchg
imul
mov
or
cwtl
adc
pop
dec
jg
jne
ret
jnp
lods
push
rorl
dec
inc
das
data16
xor
cmp
xor
pop
jecxz
clc
mov
mov
mov
cwtl
pop
add
cmp
mov
inc
insl
iret
movsb
out
add
int
add
push
nop
jnp
out
jg
clc
jl
and
xchg
lcall
mov
cmp
adc
sbb
sub
adc
cmp
xchg
in
mov
in
ret
mov
fmul
mov
sbb
iret
add
mov
rclb
inc
sbb
add
ror
inc
repz
ds
mov
cld
popf
dec
sub
xor
and
xorl
jp
xchg
dec
aas
aad
inc
jne
mov
jg
add
les
add
mov
jae
adc
mov
mov
add
add
or
sti
dec
arpl
xlat
out
add
add
push
nop
or
or
add
push
mov
add
push
mov
cmpsl
bound
les
test
pushf
popa
lahf
sbb
add
inc
inc
xchg
add
mov
and
jo
inc
add
shl
shlb
pushf
test
sbb
ror
jbe
jbe
dec
push
mov
aad
add
mov
pop
and
add
inc
pop
xor
add
push
test
shr
es
les
lea
nop
adc
data16
add
out
add
jb
inc
rcrb
push
sbb
loop
push
mov
test
add
pop
jo
or
dec
mov
add
xor
fsubl
int
mov
ds
adcb
bound
pop
add
clc
icebp
repz
sub
insb
jbe
fst
push
cmp
jl
das
sub
adc
shr
inc
cmpsl
mov
push
pop
stos
cmpsb
scas
adc
in
daa
add
add
sub
add
sub
jmp
jns
add
sbb
lcall
xor
das
lods
add
mov
mov
adc
lcall
inc
fiaddl
add
add
add
subb
sub
push
push
insb
in
xchg
cmpsb
jae
pop
pop
mov
mov
lea
push
cli
test
sbb
xchg
add
push
mov
mov
out
add
into
test
out
out
inc
shl
lea
dec
cmp
add
xor
lret
scas
push
jo
repnz
fs
mov
or
inc
xchg
or
adc
mov
insb
cli
scas
sub
repnz
jle
xchg
lods
add
cld
sbb
shll
mov
and
xorb
xlat
inc
adc
pop
pop
adc
add
aas
add
mov
addl
jecxz
add
repnz
fildl
inc
cmpsl
push
mov
dec
dec
adcb
xor
cwtl
xchg
cmpsl
or
push
mov
mov
add
pop
popa
xchg
sbb
mov
mov
jb
pop
jns
mov
dec
xor
lods
dec
stc
xor
adc
inc
inc
xor
sub
in
jg
cmp
das
add
lock
insl
int
addb
sbb
test
in
dec
add
adc
iret
leave
add
jl
out
or
outsl
jmp
das
lock
push
add
add
sbb
add
pop
sub
mov
add
inc
scas
ljmp
add
jp
int
and
and
sbb
and
or
lret
js
adc
and
jae
push
jbe
add
cmp
icebp
fwait
in
out
std
lea
dec
lret
mov
fldl
lock
sbb
lcall
adc
mov
out
lea
add
add
stc
inc
add
push
add
or
push
imul
sbb
adc
loopne
in
xor
add
xchg
add
lahf
add
insb
adc
nop
fsubp
jl
les
ja
xor
sbb
add
sbb
inc
cltd
adc
incl
into
xor
pop
jb
xchg
subl
imul
add
xor
ret
add
add
xchg
sub
daa
scas
adc
cmp
lock
mov
stos
add
dec
push
xchg
and
and
jae
pop
push
imul
ss
and
adc
int
dec
aas
inc
inc
mov
add
fisubs
cmpsl
out
fisubs
push
lds
push
pop
inc
adc
imul
js
add
add
ljmp
sahf
lea
and
jg
aaa
push
cmp
js
lret
lcall
adcb
scas
sub
adc
fstps
cs
mov
sbb
je
outsb
out
lods
roll
mov
and
in
call
jle
orl
pop
cli
lret
add
inc
mov
cld
leave
addr16
pusha
es
mov
jge
loopne
sbb
std
mov
mov
add
popf
ss
cmpsb
mov
xor
add
fistpll
movsb
mov
jge
sbb
sub
add
stos
and
insl
call
jb
fwait
roll
movsl
fcoml
add
out
mov
inc
aaa
push
and
or
incb
lcall
mov
nop
cmc
faddl
push
stos
cmp
ret
sub
mov
sub
enter
inc
fiaddl
lret
bound
arpl
insl
ret
mov
push
in
sbb
imul
fnstenv
and
xchg
ds
mov
sbb
dec
pushf
inc
imul
int
dec
lret
in
add
cld
sbb
lret
or
mov
faddl
mov
mov
or
jae
movsl
dec
insb
xlat
leave
incl
mov
lock
add
adc
add
push
dec
cmp
aaa
adc
test
ds
imulb
sub
sbb
sub
push
shl
loop,pt
das
add
mov
mov
add
sub
cmp
mov
xchg
insl
add
add
dec
push
stc
bound
dec
cmpsl
push
add
sbb
jg
mov
add
add
adc
add
sub
loope
movsb
push
inc
push
dec
xchg
test
lods
das
inc
jp
push
imul
and
aaa
arpl
pusha
xchg
jno
test
std
js
es
shrb
stos
in
jnp
add
rorw
sub
lret
lea
add
cmp
adc
fistpl
ljmp
repz
xlat
fisubrs
add
inc
and
shlb
mov
shll
cmc
jne
aam
jns
iret
fwait
push
vmovntps
add
mov
xor
push
mov
call
leave
sbb
std
aad
shll
popa
testb
or
xchg
sbb
and
jno
test
sbb
or
cmp
xor
add
pop
add
and
add
add
and
movsl
xchg
fistl
inc
das
jae
xor
scas
mov
imulb
xchg
loop
add
lea
mov
pop
inc
pop
pop
cltd
repz
add
inc
add
repz
adc
fwait
sub
mov
js
cmp
loope
cld
filds
xlat
lea
divl
mov
leave
mov
sbb
add
add
out
add
mov
jmp
push
xor
jno
xlat
mov
or
test
or
fcos
daa
jecxz
push
fsubp
mov
sbb
jno
add
sbb
sbb
add
lds
push
pop
test
add
sbb
add
add
repnz
repnz
loope
cmp
mov
add
pop
dec
data16
popa
test
jmp
pop
loopne
and
cmp
repnz
mov
add
sub
add
push
inc
mov
dec
jo
orb
pop
cmp
loope
push
xor
stos
add
rorl
loope
shl
jl
jne
jge
add
xchg
nop
and
movsl
ja
mov
dec
mov
test
add
xchg
add
pop
movsl
stc
out
push
xchg
js
push
rclb
add
xchg
xchg
loopne
pusha
add
and
fiaddl
fnstcw
sbb
adc
xchg
nop
loope
cmpsl
js
jo
test
mov
inc
addb
in
sti
push
add
shlb
gs
jg
dec
ljmp
mov
pop
aas
lea
push
mov
js
push
inc
and
mov
mov
sti
aam
aaa
hlt
addl
mov
stc
jno
xor
xchg
jnp
cmpsl
mov
xchg
jl
lret
popf
std
pop
gs
jb
or
or
mov
lret
add
fs
inc
inc
mov
or
cltd
or
in
jp
adc
insl
add
mov
add
hlt
fdivs
fldl
push
xchg
mov
pop
pop
addr16
mov
out
cli
pop
std
ds
cmp
pop
xchg
add
out
fmull
add
dec
pusha
add
add
push
push
pop
cmpsl
dec
add
pop
add
xchg
cmc
iret
stos
scas
mov
enter
mov
add
add
aad
iret
imul
mov
pop
mov
push
add
sbb
les
jecxz
scas
roll
bnd
cmc
mov
push
xchg
xchg
add
in
sub
imul
ret
pop
add
dec
add
push
or
jp
pop
in
fcompl
xchg
push
dec
sahf
addr16
and
xor
shlb
sbb
iret
outsb
jo
nop
int3
dec
add
mov
test
adc
ret
adc
cld
lea
std
divl
and
xchg
add
dec
out
sub
hlt
or
push
pop
mov
mov
and
add
sub
imulb
aam
push
lods
add
fsubrs
cli
push
push
mov
fcom
sbb
and
dec
mov
in
icebp
mov
xchg
push
inc
std
lret
fdivrl
cmp
dec
fsts
add
xchg
sub
pop
sbb
add
sub
add
push
add
addl
je
xor
sbb
add
incl
jnp
dec
in
xor
sub
gs
xor
sub
push
add
sub
das
adc
xchg
gs
ficoms
imul
loop
jl
and
pop
data16
pop
test
subb
add
mov
mov
pop
mov
prefetch
movb
mov
pushf
scas
insl
and
xor
test
mov
push
add
loope
jmp
inc
shlb
sahf
push
inc
movhlps
aas
add
ret
jns
adc
mov
sbb
dec
jbe
jp
sbb
dec
add
cmpsl
pop
adc
mov
add
sti
pop
adcb
iret
ret
or
aaa
lea
add
push
test
out
pop
dec
push
lahf
rcrl
mov
jns
movsl
imul
xchg
lods
or
sub
sarl
out
mov
pop
mov
stos
fsub
xchg
or
repz
lock
sub
add
inc
mov
std
movsl
pop
hlt
add
in
push
sahf
and
sbb
jo
cmp
cli
lcall
nop
jmp
imul
add
push
jp
insl
loop
push
les
das
inc
inc
sub
fisubs
aad
mov
add
dec
mov
pop
sarb
imul
adc
jmp
add
aam
jg
add
andb
dec
add
adc
shrb
into
add
push
xor
add
inc
or
add
add
push
xchg
pop
mov
sbb
xchg
add
mov
test
adc
loope
orl
jo
add
push
call
insl
cld
aas
add
lea
jecxz
add
pop
imul
orl
or
push
jne
mov
scas
cmpsl
inc
mov
inc
push
inc
loope
call
repnz
add
stos
jnp
or
dec
pop
pop
or
call
adc
ss
add
ret
mov
jge
cli
mov
pop
mov
or
out
mov
sbb
push
test
add
adc
cmpsb
insb
imul
imul
enter
popa
scas
push
dec
xor
sbb
lcall
scas
js
mov
cs
xor
fadds
xlat
add
mov
add
aas
adc
filds
insb
sub
roll
out
push
push
mov
add
scas
adc
jle
movb
in
outsl
mov
fisttpl
arpl
dec
scas
sbb
call
dec
movsl
cmp
das
adc
add
aaa
add
sarb
and
xchg
inc
dec
dec
push
gs
dec
jmp
add
outsb
aad
popa
mov
xor
add
fs
shlb
jmp
add
xor
bound
xor
and
fcompl
cmp
sahf
flds
xor
jae
mov
inc
add
pop
jo
out
mov
push
scas
pop
loopne
or
cltd
cld
mov
ret
loope
into
jge
add
call
mov
add
shrb
mov
rclb
ficoml
cmp
add
les
xchg
mov
push
daa
push
aas
movsb
or
and
sub
add
push
jae
ja
test
sbb
xor
jge
aad
xchg
lods
add
add
xor
dec
aam
add
jle
mov
add
mov
inc
xchg
xchg
add
add
add
jnp
je
or
adc
test
push
xor
mov
out
test
test
add
stc
test
sbb
xlat
test
out
pop
insl
xchg
fmull
arpl
adc
in
rcrl
fstps
call
or
fidivs
je
mov
mov
pop
jo
pop
in
or
incl
ret
dec
in
out
pop
add
add
sub
or
pop
rol
faddp
cmpsl
and
xlat
ret
rclb
iret
add
jno
lret
mov
or
jno
mulb
dec
fmull
dec
push
pop
xchg
add
fwait
push
inc
pusha
loopne
movsl
js
dec
xor
add
dec
xor
mov
add
jle
ljmp
mov
jnp
out
xor
sub
xchg
filds
or
jnp
jo
pop
mov
add
test
es
and
nop
insl
fisttps
inc
enter
subl
arpl
roll
mov
divl
mov
push
inc
add
bound
adc
inc
scas
and
das
pop
and
fsubl
and
ret
jp
push
int
jecxz
xchg
sahf
lahf
mov
das
xor
data16
pop
ret
xor
cs
cwtl
jnp
xor
loop
mov
adc
sti
inc
xchg
mul
xor
es
fs
inc
and
sub
xchg
jg
sub
out
jae
clc
mov
push
xchg
mov
pusha
pusha
dec
jno
add
add
mov
cmpsl
add
cwtl
movsl
inc
ficompl
sbbb
divl
dec
xchg
mov
outsb
fnstenv
mov
ret
fcoms
in
les
jnp
mov
dec
cmp
mov
push
lahf
dec
stos
fwait
jg
rclb
mov
pop
decl
add
xor
aaa
mov
push
iret
add
in
stc
dec
rclb
push
xchg
and
aam
mov
das
add
sahf
test
orl
insb
adc
lock
push
lret
jg
icebp
mov
and
clc
loop
cmp
inc
add
and
roll
mov
push
or
or
mov
mov
repnz
repz
lea
and
adc
inc
inc
jmp
add
jmp
jge
cmp
xchg
and
mov
dec
cmp
push
mov
fists
mov
flds
leave
outsb
dec
shr
pop
add
pop
sub
mov
lock
add
loop
add
or
sbb
adc
dec
adc
xor
add
jp
cmc
sub
dec
fldenv
push
stc
mov
mov
add
test
adc
add
push
out
addr16
jmp
sbb
sub
test
push
andl
push
mov
and
lods
mov
jle
cmpsl
cld
daa
incl
add
add
mov
pushf
ja
aam
mov
cld
push
imul
cmp
cmp
std
jge
pop
enter
sub
push
or
lret
das
add
fs
stc
idivb
pop
mov
pop
sbb
mov
fidivrs
into
add
mov
push
pop
sbbb
js
test
in
test
adc
lahf
and
xchg
jnp
and
or
fildl
mov
jb
leave
or
setle
cmp
les
sahf
pop
mov
sub
lret
imul
add
jb
and
cmpsl
movsl
into
subl
jl
dec
mov
inc
and
xchg
loopne
imul
sbb
dec
and
mov
call
pusha
sbb
jl
cs
add
shrl
fldt
inc
imul
fiaddl
add
add
add
lahf
cmc
dec
sbb
cmp
rorl
les
nop
jb
stos
xor
pushf
int3
xchg
mov
add
filds
xchg
pop
xchg
jp
addr16
add
loop
stos
sub
shrb
xchg
xor
mov
enter
mov
push
fsubr
lret
xchg
fistpll
or
xor
push
repz
pop
sarl
add
cmpsl
sub
sbbl
scas
mov
add
jmp
mov
xchg
mov
mov
sub
xor
xchg
add
fldl
xor
push
jb
pop
fstpt
mov
fistps
mov
lcall
popl
mov
outsb
or
dec
xchg
popf
mov
jl
nop
xor
push
or
pop
add
cmp
dec
lds
icebp
insb
pop
add
sti
mov
addb
test
cmp
or
test
clc
in
js
in
jmp
jne
inc
ja
cltd
in
bound
pop
test
testb
notb
or
push
xchg
cmp
loope
mov
sahf
push
add
int
out
fcoml
push
neg
sub
enter
shlb
add
hlt
mov
add
mov
out
add
sbb
cwtl
mov
ja
jmp
lods
add
add
add
out
repz
push
sarl
jge
fmull
in
push
inc
in
pop
out
sub
fucomi
scas
add
mov
fs
daa
dec
out
imul
int
jae
or
or
pop
pop
add
xchg
xchg
mov
xor
movsb
int
fists
in
idivb
sub
loop
jle
add
pusha
lret
mov
int
xor
lret
or
mov
rorl
add
pusha
loopne
insl
pushf
dec
jl
scas
jne
push
lds
push
insl
jae
jmp
fs
mov
push
sbb
mov
add
stos
cltd
loopne
or
add
cmp
sub
pop
add
out
add
pop
mov
mov
movsl
push
xchg
testl
lds
add
mov
push
adc
fcoml
fadds
cwtl
dec
dec
add
stos
or
sbb
adc
fcompl
icebp
pushf
fmull
add
ljmp
add
mov
jbe
lret
cmp
adc
sti
pop
jne
fists
sub
imul
inc
push
add
ret
aaa
andb
mov
insl
and
mov
fdivrs
nop
cltd
or
mov
repnz
inc
push
rorl
daa
mov
iret
fisubrl
add
rcrl
out
push
in
xchg
and
popf
dec
push
sti
sub
shlb
or
mov
loop
jmp
popf
inc
push
add
stos
aam
mov
scas
or
xor
add
inc
pop
pop
pop
add
cmp
add
jl
jg
scas
inc
add
xor
xlat
aas
add
cltd
sub
xor
dec
sub
or
imul
push
sub
sti
push
movsb
add
push
mov
dec
test
adcl
sbb
jne
add
xor
sbb
xchg
jle
push
repz
add
outsb
loope
sti
or
and
lret
add
adc
cmpsl
into
jbe
in
lock
fldl
and
pop
add
iret
adc
add
dec
stos
aas
and
cwtl
xor
cmp
add
push
push
mov
add
roll
fcompl
std
pop
mov
xor
cmpsb
mov
add
push
push
add
xor
xlat
mov
xorl
mov
cli
negl
inc
mov
sub
add
scas
cmp
xor
mov
js
inc
in
push
in
adc
adc
inc
xlat
xor
fsubrs
fnsave
mov
iret
in
out
outsb
push
and
jle
data16
add
cmp
xchg
dec
fwait
or
hlt
and
clc
cltd
jbe
hlt
jae
add
outsl
test
mov
jne
das
push
or
rcrb
xor
add
add
jnp
add
add
test
and
loop
addl
push
or
jge
shlb
xchg
push
inc
add
hlt
dec
rorb
rcl
add
sub
xor
sbb
sbb
jne
lea
jae
jecxz
xchg
add
xchg
add
sub
rcrb
sbb
popa
mov
inc
add
in
iret
arpl
add
add
in
inc
add
stc
xchg
sti
adc
cmpsb
push
pop
add
add
sub
jle
mov
sub
or
roll
or
add
inc
int
movsb
aam
addr16
push
adc
lret
test
sub
xor
add
add
inc
cmp
and
add
dec
leave
jb
add
dec
pop
test
xor
std
add
or
ret
je
cmpsb
cmp
pusha
std
dec
sbb
mov
xlat
adc
icebp
sbb
fsincos
mov
stc
incl
add
add
shll
add
pushf
dec
and
add
adc
js
mov
test
mov
int
imul
loopne
pop
and
fldl
inc
xchg
in
jmp
add
cld
xor
sbb
add
fnstsw
and
add
cmpsb
repnz
hlt
jnp
outsb
ss
cmpsl
ljmp
pushf
stos
fsubl
dec
mov
add
adc
dec
imul
cltd
sbb
push
insb
add
out
add
mov
int
add
mov
cmp
in
xchg
mov
and
pusha
pop
sub
mov
ficoms
das
xorb
dec
mov
mov
inc
pop
mov
adc
push
pushf
add
push
xchg
fsubp
inc
fstpl
shll
inc
addr16
dec
cmp
mov
cmpsl
sub
scas
push
lret
shr
or
leave
jge
lcall
data16
shrb
push
jno
jnp
add
xor
fdivrl
mov
add
repnz
je
sub
jg
jae
add
mov
mov
xchg
pop
jl
and
add
mov
aaa
rcll
test
imul
lock
xchg
cmpsb
xchg
jo
sbb
je
dec
sbb
xchg
add
loopne
or
sub
rcr
test
adc
shll
cmp
mov
testb
add
inc
add
lods
int3
mov
fidivs
jl
sbb
add
rolb
fisttps
xor
add
popf
aam
icebp
adc
ds
or
mov
jo
out
jbe
push
push
test
mov
xor
jl
dec
dec
cmpsb
add
inc
test
pusha
and
add
aam
push
shlb
es
jo
aas
lock
mov
icebp
cmpsb
fs
xor
jnp
add
test
pushl
xor
or
dec
add
push
test
mov
and
add
add
mov
movsl
mov
mov
cmpsl
in
aas
inc
out
jl
inc
add
cmp
mov
mov
fistpll
pop
inc
push
pop
mov
fistps
nop
mov
sub
inc
mov
xchg
dec
mov
out
lock
mov
sub
add
addr16
daa
add
sahf
lahf
add
and
icebp
dec
add
jecxz
or
std
sub
es
in
sbb
add
sbb
enter
add
dec
sbb
push
add
gs
popa
das
pop
cmp
and
hlt
jae
jge
aam
lret
add
jg
and
pop
mov
xchg
xor
pop
out
gs
add
insb
adc
dec
out
add
cmpb
inc
scas
dec
add
mov
add
add
pop
jp
out
push
xchg
test
decb
and
inc
cmp
xor
xchg
add
push
inc
mov
xor
mov
mov
jo
clc
add
hlt
les
out
adc
pusha
sub
aaa
gs
rcr
into
dec
dec
into
or
ret
cwtl
add
xor
fdivrl
out
pop
jg
ret
sbb
nop
pop
sub
sbb
or
and
and
fwait
push
sbb
jecxz
add
mov
cmp
xchg
mov
rorb
inc
test
cmp
scas
add
cmovns
and
xor
andl
push
dec
cmp
xlat
repz
fs
xchg
inc
or
adc
adc
call
and
bswap
cs
jg
int3
call
mov
mov
insb
mov
and
mov
push
sbb
mov
push
add
aam
rorl
jp
mov
nop
das
add
add
cwtl
je
mov
add
mov
repnz
ds
cltd
int3
fnstcw
iret
negb
jecxz
leave
lcall
popa
jl
add
mov
jg
sbb
add
inc
add
xor
cmp
inc
mov
lret
add
add
inc
cltd
and
inc
fisubrl
jne
imul
jno
and
aad
xchg
add
rolb
and
mov
aam
adc
lret
or
push
sbb
sbb
rcrb
and
cmpsl
adc
fsubrl
xchg
add
sub
std
jecxz
or
iret
dec
aas
popa
iret
mov
subl
mov
mov
mov
push
sub
mov
iret
test
xor
orl
inc
jae
pushf
add
inc
dec
push
aas
std
mov
pop
sbb
jne
add
ljmp
out
jmp
pop
mov
mov
sbb
aam
popl
rdpmc
add
popl
arpl
negb
idivb
mov
mov
jmp
int3
jmp
fiaddl
sub
add
into
popa
fsubp
pushf
leave
stos
test
add
cli
in
bsf
fdivl
es
cmpsl
jge
mov
add
stos
push
or
add
or
fsubl
xorl
add
pop
add
test
iret
nop
les
inc
jb
add
out
xchg
cs
add
jl
pop
mov
into
cli
mov
inc
inc
scas
fcmovnbe
fwait
or
test
repz
add
xchg
movsb
xchg
cmp
es
xor
xchg
addr16
xchg
add
dec
dec
nop
mov
push
mov
dec
ds
add
mov
dec
mov
shll
lahf
mov
ljmp
lret
mov
iret
mov
push
gs
js
add
push
inc
pop
addb
test
out
adc
test
loope
mov
cmp
xor
add
xchg
add
pop
mov
out
sbb
mov
xchg
xchg
out
mov
xchg
add
movsl
dec
xor
movsb
inc
imul
xchg
add
jmp
int3
xor
inc
add
inc
add
pop
inc
xchg
ficomps
adc
adc
pop
push
gs
add
mov
aaa
cmp
add
les
jecxz
test
jo
mov
add
add
xchg
pop
ret
lahf
loopne
sub
jg
enter
mov
popf
sbb
lahf
cld
mov
test
xor
add
cltd
add
mov
mov
jge
or
adc
xchg
mov
xor
add
insl
aad
mov
and
xchg
jnp
xor
sbb
leave
je
jnp
je
test
in
out
add
xor
dec
lods
pop
filds
jmp
popa
xchg
xchg
jb
adc
shrb
adc
mov
add
inc
stc
xor
xor
leave
test
sub
dec
nop
js
inc
cmc
cmpb
ljmp
dec
jo
mov
leave
cmc
incb
lret
dec
ss
ret
lret
add
stos
inc
or
jno
std
popf
adc
cmpsb
fdivr
cld
add
dec
xor
mov
jmp
dec
xor
jmp
xchg
int
mov
xchg
push
and
xor
stc
inc
xchg
jb
leave
pop
clc
xchg
sbb
cmpsb
sub
sub
test
popl
into
pushf
aaa
imul
dec
cmpsb
in
rolb
push
sbb
cwtl
mov
xor
jp
add
ret
cwtl
jb
mov
es
loop
mov
pop
xchg
xor
sub
jg
and
aaa
adc
mov
mov
leave
or
add
sbb
add
pop
je
mov
ja
adc
mov
sbb
out
add
cmp
test
push
push
mov
fidivrl
cmp
cmp
add
jns
xchg
and
insb
imul
pop
cmp
inc
subb
jl
push
ljmp
leave
inc
bound
and
adc
xchg
add
test
adc
xchg
out
jb
push
std
mov
add
rorb
lret
and
add
es
call
push
lock
sarl
add
dec
js
mov
cltd
push
shrl
cmp
out
add
jo
sub
aas
in
or
sbb
sbb
jmp
dec
mov
xor
xor
dec
add
movl
mov
test
outsl
mov
aam
test
movsl
dec
test
decb
ds
add
xchg
pmaddwd
push
sub
decl
andb
bound
mov
cmc
or
and
out
inc
xlat
inc
inc
data16
add
cmpsl
add
lock
sub
daa
aam
dec
addr16
stc
movsb
enter
fisttps
mov
shrl
sbb
inc
sbb
pause
mov
push
add
ss
rcll
ret
xor
inc
xlat
mov
outsb
mov
add
pop
sbb
int3
xor
add
aam
add
inc
dec
mov
test
jle
insb
inc
push
add
bound
jmp
and
push
add
jmp
mov
add
mov
sub
sub
inc
into
and
xor
add
stc
inc
inc
mov
in
mov
in
add
jge
shlb
std
and
sbb
mov
or
pop
cli
mov
pop
sarl
xchg
lret
ret
je
xchg
cmp
mov
cld
mov
out
cwtl
or
xchg
mov
sti
mov
mov
add
movsb
and
ror
push
cmp
insl
lahf
enter
add
add
rol
mov
mov
xchg
movb
cmpsl
add
push
stos
insb
outsb
int3
fiadds
cmp
in
or
clc
in
push
dec
jl
test
jno
or
in
out
jbe
jmp
jno
sarl
mov
loopne
sub
or
add
lahf
and
pop
daa
leave
neg
cld
shlb
clc
rclb
dec
cmp
aad
add
or
add
jo
jne
pushf
xlat
pcmpeqd
push
in
nop
in
mov
cmpsl
mov
mulb
lods
inc
or
enterw
hlt
mov
add
mov
mov
add
cmp
or
pop
xchg
add
and
popf
jnp
or
cmp
adc
mov
jb
aas
adc
xor
mov
cmp
add
and
mov
repz
or
jae
fadds
gs
xchg
shlb
add
cld
cmp
lock
lods
sar
add
sbb
inc
in
push
iret
and
sbb
cmp
lcall
cwtl
push
and
pop
adc
adc
xor
stc
ret
or
inc
test
or
dec
cmp
das
movsb
push
pop
xchg
jmp
push
inc
rol
leave
mov
movsl
lahf
fisttpl
aam
or
lds
and
sarl
imul
jo
sbb
add
inc
adcb
or
add
sub
lock
pop
cmp
xchg
mov
icebp
test
lock
pop
sub
inc
jno
push
xchg
jge
lods
add
mov
fstp
add
inc
test
out
dec
popf
lar
add
mov
int
js
rolb
pusha
and
mov
inc
sarb
inc
mov
hlt
outsb
inc
icebp
push
and
add
in
sub
rcl
add
xor
sub
lea
cmpl
mov
xchg
add
adc
icebp
jne
insl
out
add
roll
xlat
xchg
mov
mov
hlt
addr16
fcoml
and
push
lods
or
jl
insb
mov
movsb
ja
scas
mov
mov
arpl
insl
cwtl
arpl
xchg
enter
fstpt
ret
bound
mov
xchg
sub
in
js
add
add
clc
xor
add
and
lret
stos
leave
pop
and
test
jg
xchg
jnp
test
loopne
dec
xor
xor
out
loopne
dec
out
mov
xchg
nop
add
subl
or
movsb
pop
lret
ffreep
and
push
aaa
or
pusha
jecxz
dec
pushf
push
mov
cs
scas
push
xor
setg
push
arpl
jns
dec
sar
and
mov
fidivrl
lea
add
clc
mov
iret
xor
lahf
jmp
daa
cmpsl
add
xchg
adc
sbb
add
inc
sub
mov
xchg
jge
or
adc
nop
add
loop
inc
daa
mov
mov
mov
xchg
add
je
imul
cmp
jg
mov
add
xor
pushf
sub
jmp
add
mov
sub
ret
gs
iret
inc
std
in
and
iret
sub
mov
dec
inc
mov
push
mov
mov
xchg
mov
movsl
cmp
cmpsl
jmp
andl
test
push
js
dec
es
push
lds
add
pop
pushf
xchg
enter
xchg
filds
jecxz
call
cmp
shr
fstpl
add
add
sti
xor
add
add
pop
push
sub
outsl
cmp
sbb
gs
stos
or
shll
cwtl
inc
adc
xchg
cmp
pop
arpl
sbb
and
cmp
enter
mov
dec
fwait
xchg
test
pop
mov
cmc
insb
add
sub
fidivrl
add
add
shlb
ds
inc
mov
add
add
add
jo
dec
xchg
adc
clc
ds
sub
jbe
rorb
enter
sbb
mov
jb
rolb
dec
cld
in
cli
pop
mov
cmp
je
stos
outsb
aam
sbbb
jl
mov
lock
xorl
cwtl
xchg
add
mov
mov
cmpsb
mov
inc
add
and
add
aad
add
mov
ficoml
push
mov
add
in
lahf
pop
xchg
sub
dec
push
fpatan
ljmp
jns
outsl
inc
jmp
dec
jb
add
jle
xchg
xor
xchg
repz
xchg
arpl
roll
adc
fisttpll
inc
mov
dec
mov
bound
mov
jbe
mov
daa
add
and
add
xor
fmull
pmaxub
repz
push
jb
jp
push
ret
subl
jle
or
shlb
arpl
inc
outsl
pop
pop
add
test
adc
aad
xchg
xchg
add
cs
sbb
mov
jns
dec
and
mov
or
cmp
xchg
push
add
rolb
lret
lock
movsb
add
ret
lods
add
fimull
adc
xor
cmc
mov
and
inc
push
lods
adc
mov
mov
push
out
push
ja
pushf
or
and
clc
movsb
dec
loope
in
add
jbe
es
add
into
shlb
mov
sbb
adc
pcmpeqd
movsl
pushf
verr
jo
add
jb
cld
mov
dec
test
jns
add
mov
jl
inc
add
lods
idivb
inc
dec
sub
push
cwtl
popa
push
andb
fucomp
in
fcoml
jb
lret
mov
sbb
xchg
push
fwait
xor
int3
es
xchg
or
aaa
cmp
add
mov
in
dec
sbb
and
push
jmp
outsb
loop,pn
hlt
sub
jmp
ss
xchg
imul
fwait
repz
mov
xchg
sub
add
dec
iret
loop
out
add
and
add
roll
je
sub
fildl
sbbb
xchg
ss
jno
test
xchg
shll
lock
adcl
jns
add
arpl
add
cltd
pop
push
jns
out
inc
add
mov
iret
dec
add
add
lock
dec
mov
or
or
jns
add
xlat
sbb
adcb
loopne
cwtl
mov
lock
push
inc
adc
faddl
xchg
mov
push
push
daa
mov
jae
stos
push
es
inc
stos
xchg
xor
sub
notl
add
cmc
sbb
cmp
sahf
ret
stos
hlt
mov
scas
add
and
shlb
dec
jecxz
jecxz
sbb
push
in
ljmp
incl
fistpll
xor
jo
add
cli
mov
push
sub
daa
dec
int
fcomp
cltd
data16
in
sbb
dec
loope
mov
mov
ja
xor
xchg
int3
cmpsb
out
inc
push
lods
mov
or
hlt
add
inc
jb
stos
and
pop
pop
adc
or
mov
ret
xorl
out
add
mov
shl
stc
enter
lods
mov
lret
jnp
rcrl
jl
lahf
icebp
notl
adc
add
in
test
insl
sti
out
sarb
pop
and
add
add
fdivrp
mov
inc
test
addb
int
jmp
pop
cmp
cltd
jl
cmp
or
pop
pop
mov
out
or
mov
sub
imul
jbe
cld
push
xchg
or
cld
lea
add
mov
cmp
icebp
sbb
cwtl
sub
int
idivl
xchg
mov
push
stc
push
enter
add
in
jae
fimull
lret
add
je
lcall
add
sbb
cmp
jp
out
add
filds
jecxz
mov
add
xor
dec
mov
pop
mov
cmp
add
xchg
cmp
sbb
fsubr
insb
add
xor
mov
jns
xlat
lret
add
inc
movsl
xor
movsl
addb
add
add
dec
inc
cwtl
push
xor
mov
rcl
leave
dec
xchg
lret
push
fistps
push
stos
mov
fsubl
dec
dec
lret
bound
sbb
insb
sahf
clc
lret
mov
sub
ja
mov
je
ds
and
add
and
or
call
ss
jb
in
sbb
icebp
loope
rcrb
lods
pop
push
xor
dec
int3
popl
aas
mov
add
xchg
mov
cmp
or
iret
or
push
inc
test
loope
add
fldenv
in
popl
mov
cmp
cld
mov
loope
and
push
je
or
fiaddl
jnp
movsb
dec
test
jg
and
pop
ljmp
ds
jp
fwait
xlat
bound
jp
adc
in
add
xchg
sbb
dec
lahf
sub
push
push
mov
scas
fnstcw
insb
xor
cwtl
addl
ljmp
lret
sar
mov
lret
pop
fcmovbe
jno
push
popf
jo
mov
fwait
mov
ljmp
mov
ss
inc
adc
pop
add
lds
ret
out
cli
les
loop
pushf
loopne
jo
test
pushf
jns
push
sub
adc
dec
in
add
inc
push
lcall
xor
mov
mov
stc
pushf
scas
jmp
pop
pop
stc
add
cmp
add
push
push
lea
and
pop
stos
sbb
scas
shl
add
in
dec
jne
cmpsl
lods
cwtl
pop
out
add
div
dec
xchg
xor
cmp
inc
add
push
add
out
cs
push
xor
push
sbb
insb
xlat
std
int
shrb
add
stos
aaa
mov
movsb
add
loopne
push
add
cmp
jmp
cmp
out
movsl
int
jle
push
add
outsl
mov
mov
jbe
sbb
adc
pop
xor
push
roll
movsb
clc
xchg
add
sarb
stos
mull
push
cwtl
mov
cmp
jo
flds
nop
mov
orb
fcoms
ret
xchg
or
int
cli
fs
xchg
dec
cli
push
sub
jp
dec
pop
enter
mov
add
cmp
and
fwait
cmpsb
lods
mov
test
xor
pusha
add
cmp
add
add
push
push
sti
mov
mov
decb
mov
imul
iretw
ret
or
popa
mov
mov
movl
jecxz
lods
mov
jecxz
mov
jmp
jp
add
cwtl
mov
xor
add
add
push
addr16
push
pop
fcmove
sbb
in
sub
mov
jle
imull
adc
jb
in
and
int
in
imul
jne
mov
adc
jbe
pop
je
fcoml
out
in
sub
add
pop
scas
test
test
aad
movzwl
pop
pop
jmp
mov
test
xor
sbb
pushf
xor
adc
push
push
popl
xor
jecxz
andb
enter
xchg
jbe
mov
repz
dec
repnz
push
in
adc
xor
mov
lods
push
sub
pop
xchg
insl
mov
sbb
jl
leave
mov
popa
push
sbb
push
inc
addl
push
push
and
mov
mov
pop
sbb
and
sti
cwtl
jle
mov
insl
sahf
enter
lds
hlt
mov
sbb
hlt
in
mov
popa
js
cmp
xchg
mov
add
adc
pop
cltd
int
push
sub
push
add
pop
loopne
xor
mov
fiadds
adc
ret
or
add
pop
pop
bnd
clc
icebp
sub
fwait
add
arpl
in
or
inc
add
idivl
das
add
das
pusha
in
add
fcoms
fisubs
push
add
test
xchg
decl
inc
fists
sub
je
and
mov
sub
divb
cld
and
xor
outsb
pop
ljmp
add
es
mov
jae
add
mov
cmp
and
add
add
dec
mov
inc
mov
add
roll
repz
fidivs
inc
rcl
test
jo
adc
xchg
add
jnp
inc
insb
jmp
pop
pop
ret
push
into
jg
int
inc
mov
inc
mov
mov
and
sbb
cmp
imul
and
aas
and
in
cmp
sbbl
int
add
cmp
adc
push
daa
xchg
iret
and
jle
insl
lds
add
out
xor
cmp
test
lcall
pop
xor
sub
mov
roll
ja
cli
clc
push
jo
out
lods
faddp
add
push
testl
loopne
ljmp
mov
aam
adcl
push
mov
outsb
fists
out
dec
cmp
add
pop
lock
jb
insb
cmpsl
pop
repnz
inc
js
out
mov
loopne
mov
cmpb
mov
adc
inc
dec
and
jne
jb
add
inc
inc
and
mov
lods
add
add
jmp
jns
pushf
xchg
js
xchg
mov
out
and
push
outsl
arpl
arpl
mov
stc
mov
lret
xchg
out
stc
gs
mov
imul
cmp
inc
icebp
pop
and
mov
xor
add
add
sbb
insb
sbb
xchg
sub
push
pop
add
mov
daa
add
aaa
fdivl
in
add
popl
cmpsb
icebp
cmp
add
jno
popa
imul
dec
add
movsl
std
sti
cmp
rorl
fiaddl
into
fdivrs
add
bound
pop
push
inc
push
or
xor
insl
inc
xchg
cmpsb
and
pop
stos
push
cltd
cmp
popf
test
add
cli
aad
mov
cmp
or
add
add
fidivs
loope
sbb
je
cmp
sbb
nop
mov
js
bnd
inc
repz
and
int3
pop
inc
sbb
in
jno
in
in
xor
ret
inc
xchg
inc
fidivs
mov
dec
sbbl
cmp
inc
filds
test
test
ret
and
into
xchg
scas
insb
xor
mov
xor
or
mov
lret
adc
inc
push
add
add
les
xchg
insb
fidivrl
pop
xor
pop
add
nop
push
imul
add
gs
rorl
xchg
pushw
mov
fucom
pop
push
mov
inc
inc
jg
sbb
ja
sti
pop
add
insb
ljmp
add
xchg
es
mov
pop
orl
cmp
shl
xor
fiaddl
in
xchg
sub
pop
mov
jge
add
icebp
lcall
icebp
push
test
dec
and
divb
cmp
ret
or
jge
cs
int3
lea
and
jo
push
mov
jb
icebp
ds
out
loop
dec
inc
xor
std
cld
inc
aas
jecxz
out
pop
jno
pop
out
push
mov
insb
mov
add
adc
rcl
je
add
mov
and
lret
add
sbb
adc
repz
dec
lret
adc
lods
dec
sub
je
mov
sbb
add
loop
add
add
push
mov
add
mov
mov
pop
xchg
or
and
inc
dec
add
rcr
push
mov
adc
and
or
add
sub
add
add
xchg
inc
cmp
cmpsb
notl
sarl
xor
and
lea
jbe
mov
push
add
sti
rolb
sbb
ret
add
mov
add
add
inc
repnz
lds
aaa
add
rcrb
sbb
cmp
push
insl
lods
adc
std
es
add
sbb
scas
sub
xlat
cmp
lods
pop
cmp
fidivs
addr16
popf
and
xor
push
add
jae
add
cmp
test
sub
add
rcrl
call
mov
in
add
mov
add
push
xchg
jnp
out
add
testb
push
sub
sti
lret
push
insl
inc
bound
add
outsl
dec
addl
iret
xor
and
add
dec
add
je
push
sahf
faddl
jo
mov
cwtl
push
inc
lods
lock
mov
inc
xor
cmp
imul
xor
or
pop
sbb
test
jbe
inc
mov
testb
pop
xchg
out
pop
jnp
mov
leave
cmc
xchg
movsl
jecxz
cli
add
fwait
out
add
ret
pop
shrb
aad
out
sbb
out
lcall
fistps
mov
cmpl
sbb
bound
xchg
testb
add
jo
cmpsb
inc
imul
jb
sbb
pop
cmc
daa
mov
add
xchg
add
add
or
sub
int3
shrb
adc
jmp
xlat
inc
sahf
jns
mov
and
and
mov
cltd
add
mov
cmp
add
or
andb
rcl
mov
adc
in
add
fcomip
jg
imulb
addb
xor
add
push
add
mov
cmpsb
xchg
cld
ficomps
or
add
data16
fisubrs
and
add
push
sub
sbb
mov
add
loopne
push
jns
and
mov
scas
aas
push
out
or
clc
ss
mov
mov
and
mov
iret
iret
mov
ljmp
leave
jmp
fwait
and
dec
jmp
shlb
xor
mov
ss
and
mov
cld
fistpl
orb
push
dec
cmp
cs
lahf
pop
or
inc
push
and
sbb
add
outsb
lods
mov
jnp
cmpsl
dec
aad
outsl
xor
xchg
mov
mov
xor
cmp
sub
add
nop
mov
pop
mov
adcl
inc
add
inc
xlat
arpl
inc
or
cmp
add
mov
adc
fidivl
sub
mov
and
and
jmp
and
add
mov
add
stc
or
push
pop
add
imul
outsb
adcb
jp
out
xlat
fisubs
jmp
outsl
push
xchg
sub
pop
fisttps
inc
in
loop
addr16
mov
jns
push
fstl
inc
movsb
add
sub
test
cs
enter
test
pushf
push
xor
mov
mov
sub
jae
add
mov
mov
inc
popa
iret
push
add
mov
add
dec
lcall
in
fs
repnz
mov
stc
add
inc
nop
pop
rcrl
dec
sub
movsl
lret
dec
and
add
ss
dec
and
movsl
add
add
pop
movsb
jae
in
xor
xchg
roll
cmc
into
in
ljmp
pop
fnstsw
add
orl
in
pushf
add
pop
pop
repnz
mov
fcompl
cld
ret
and
push
and
outsl
adc
fbld
add
add
push
lahf
jno
pop
or
iret
int3
mov
rol
dec
cs
mov
xor
pop
pusha
push
stos
jg
icebp
cmp
stc
pop
pop
call
in
cmpsb
add
cmp
mov
or
hlt
and
mov
add
mov
push
and
inc
lret
add
sbb
stc
sbb
adc
mov
fstpl
movsb
add
mov
popa
adc
insb
add
int3
mov
fists
add
loop
mov
or
add
outsb
cmp
aad
and
incb
pop
add
andl
dec
mov
cld
adc
lods
negb
sbb
mov
aad
dec
pop
adc
add
rclb
lret
out
xor
add
pushf
sbb
xchg
int3
lods
add
and
add
xchg
xchg
mov
push
sbb
mov
xor
push
lcall
inc
add
add
adc
mov
lret
icebp
push
fwait
add
lret
into
in
mov
mov
pusha
push
add
push
add
add
js
inc
dec
adcb
xchg
add
pusha
cmp
jbe
into
mov
lods
out
fsub
jmp
addr16
add
sbb
pop
cwtl
add
lods
loopne
in
dec
cld
and
cs
fisubrs
sbb
pop
pop
cli
mov
stos
pop
xchg
inc
movsb
popf
push
mulb
ljmp
sbb
and
filds
sbb
pop
jg
inc
pop
add
add
sub
imul
aas
lods
test
pop
add
push
sbb
stc
fmull
mov
adc
lahf
ss
xor
lods
add
lea
jmp
mov
cltd
scas
xlat
sub
jmp
ror
mov
add
mov
lea
test
add
jecxz
xchg
mov
call
push
add
pop
dec
rolb
xchg
rolb
pop
add
pop
mov
mov
pop
dec
movl
jmp
cwtl
mov
cmc
sahf
orl
adc
mov
push
mov
mov
add
inc
dec
cmp
in
lods
popa
push
add
cltd
rcll
mov
inc
cmpb
dec
ret
or
pop
sub
mov
inc
push
sbb
aam
test
xlat
sbb
adc
mov
add
mov
aad
loopne
sbb
sub
inc
pop
pop
pusha
add
int
xchg
add
lret
cld
mov
fdivr
shrl
mov
scas
insb
inc
xor
and
and
shrb
xor
or
mov
xor
call
lret
flds
mov
idiv
ljmp
inc
cld
repz
mov
into
pop
in
jp
add
xchg
adc
add
sbb
jo
lock
jge
iret
in
sub
loope
add
xchg
jecxz
cltd
daa
rclb
sub
mov
inc
adc
lods
inc
in
push
cmp
aas
mov
jnp
dec
mov
add
scas
adc
pop
ss
fildll
and
add
cmp
xchg
in
outsb
rcrb
aam
jmp
add
repnz
ret
inc
imul
test
add
pop
jg
sub
cwtl
into
xlat
sbb
jne
add
add
or
pop
cltd
addb
pop
dec
daa
lds
pop
dec
fsubp
jmp
int3
xchg
pop
add
imul
scas
sbb
inc
dec
push
aas
je
sbb
mov
fs
fldenv
mov
das
push
movsb
add
push
insl
cmp
dec
xchg
jne
xchg
int
into
ss
add
jne
icebp
and
add
and
sbb
jnp
mov
mov
and
aas
lods
ja
mov
add
add
pop
cmp
or
adc
pushf
jp
push
jecxz
dec
lock
es
xlat
ss
add
push
mov
pop
in
add
adc
scas
add
testl
shrl
mov
stos
mov
mov
mov
and
cmc
cmp
pop
jne
scas
xchg
jb
dec
add
rorl
mov
mov
fistpll
lock
es
fimuls
movsb
xchg
add
xor
add
mov
dec
xor
rcll
pop
jge
pusha
test
lret
xor
mov
cmp
data16
out
inc
mov
add
dec
popf
push
pop
aaa
push
adc
iret
sbb
orb
cmp
in
jp
cs
inc
lret
mov
mov
incb
insl
pop
add
add
add
fsub
das
sbb
add
add
loopne
xchg
xor
add
inc
aam
pushf
lldt
out
orb
mov
add
pop
shrb
testb
jno
add
sub
imul
ljmp
inc
out
adc
push
and
pop
adc
add
nop
scas
fdivl
inc
push
sub
pop
aaa
xchg
add
dec
into
rcll
inc
xchg
cli
jo
pushf
rcr
push
inc
jge
xchg
pop
jge
add
popf
in
jae
test
lret
inc
loope
sub
or
cltd
add
add
or
cmp
adc
mov
adcb
test
aas
add
aas
arpl
sub
sub
cmpsl
add
ljmp
movsl
push
adc
adc
add
addr16
sub
test
clc
add
sbb
sbb
mov
adc
xor
cwtl
jb
sub
leave
cmp
pop
mov
sub
mov
sub
call
cmp
lods
mov
mov
leave
repz
jb
xchg
mov
add
out
out
not
insb
adc
mov
add
dec
or
cmpsl
dec
enter
loope
mov
sub
pop
nop
stos
jbe
inc
adcl
test
ja
testl
and
cli
lea
inc
bound
pop
in
pop
cmp
sub
add
rorb
out
movsl
pop
xchg
shrb
jne
outsl
or
mov
mov
add
cmpsl
add
adc
aam
adc
add
jl
popa
fwait
subl
outsl
add
sbb
insb
hlt
mov
sbb
int
jmp
lcall
add
imul
cmp
lret
adc
jae
sbb
std
add
std
cmpsl
leave
mov
test
adc
add
xor
jb
add
add
inc
pushf
mov
test
mov
dec
outsl
mov
xchg
push
sub
mov
lahf
mov
enter
pop
mov
or
or
cmp
fcomps
outsl
xor
cltd
add
lahf
or
shlb
cli
test
mov
loop
add
sbb
jno
add
in
add
stos
arpl
mov
cmp
imull
fdivrs
and
add
add
xor
jnp
add
xchg
popa
notl
xor
push
jns
inc
jle
pop
push
xor
test
add
mov
sub
shll
mov
lods
es
pusha
imul
mov
test
mov
lds
dec
mov
into
ds
aas
xor
xor
xchg
cltd
push
or
sbb
lods
or
movb
add
push
stos
cmpsl
jo
fnstcw
in
sbb
gs
sahf
out
xor
push
dec
lods
mov
orb
xor
fs
pop
pop
sti
mov
hlt
push
sbbl
insl
add
loopne
stc
add
in
cmp
mov
push
add
je
mov
sbbl
xchg
adc
adc
sahf
dec
pushf
imul
xor
cli
es
rorb
and
sbb
nop
cli
pop
add
sbb
xchg
add
or
add
cmp
inc
popa
mov
add
and
psraw
movb
pop
movsl
mov
add
stos
jbe
fisttps
scas
jnp
pop
add
xchg
cmp
aam
into
fcomi
dec
xlat
jnp
inc
shl
nop
mov
dec
inc
test
add
sub
cmp
lds
jge
popf
cmpl
jecxz
dec
add
xchg
int
jg
push
add
pop
xchg
pop
enter
ja
ds
pop
jge
sbb
pop
stos
mov
push
in
or
and
mov
in
cmp
je
adc
movsb
decl
les
mov
mov
out
scas
push
add
popf
push
daa
add
jmp
cld
sbbl
add
fistpl
sub
inc
ds
add
jp
mov
inc
add
mov
add
jge
inc
adc
popa
lret
and
outsb
pop
pop
mov
jne
sbb
xor
dec
fidivs
sbb
int
xchg
leave
add
sbb
aam
pop
sub
mull
cmp
sub
or
loop
xor
mov
sub
jb
lods
pushf
in
mov
add
inc
jae
dec
mov
and
add
sub
out
test
mov
xchg
add
add
fnstsw
mov
dec
adc
jge
call
mov
bound
inc
mov
pop
and
mov
push
add
xchg
inc
mov
js
flds
outsb
push
scas
out
or
rol
in
sarl
add
sub
push
mov
aaa
mov
add
shlb
test
insl
adc
dec
pmuludq
arpl
das
add
dec
mov
pop
int
push
mov
pop
add
xor
lock
add
enter
xchg
repnz
ja
fnstenv
sarl
ret
inc
filds
aaa
iret
gs
out
syscall
push
jle
inc
aas
push
sbb
imul
mov
in
lods
push
shrl
mov
jp
xchg
mov
mov
mov
rcrl
int
sub
mov
or
add
sbb
mov
jmp
lret
mov
outsl
jbe
sub
fdivs
fs
aam
icebp
adc
mov
add
roll
mov
push
add
and
hlt
scas
or
xchg
add
xchg
mov
xchg
mov
insl
movsl
mov
cmp
push
sbb
setne
jb
dec
inc
add
mov
loopne
adc
rorl
jmp
repnz
sbb
jbe
enter
dec
fwait
add
daa
dec
sbb
iret
mov
adc
pop
addb
outsl
mov
int3
loope
sbb
adc
jp
sbb
jns
mov
pop
lcall
sbb
add
fadds
pop
add
loop
xchg
sbbb
in
shll
arpl
fmul
and
decl
xchg
popa
cmpsb
add
js
scas
in
aam
add
addr16
mov
push
inc
test
jle
sub
mov
arpl
jnp
xor
mov
mov
aas
push
xor
cmp
and
cmpsb
in
xor
xchg
mov
adc
mov
movsl
mul
jno
pop
push
mov
add
clc
jecxz
push
imul
push
pop
outsl
mov
and
xor
ret
jns
lahf
divb
or
adc
or
addl
and
sub
jecxz
stc
xchg
mov
jno
sbbb
ret
push
ret
scas
jmp
mov
dec
das
ljmp
andb
outsl
add
xchg
adc
loope
inc
out
mov
cmpsb
jno
pop
pop
jmp
and
ljmp
pusha
cs
add
out
cs
sub
inc
lahf
popf
les
outsb
das
mov
sub
lea
mov
add
ficoms
jle
adc
pop
inc
and
xchg
shrl
jmp
add
jge
xchg
and
roll
roll
jmp
add
inc
xor
pop
leave
test
push
mov
inc
cmpsl
aad
std
xchg
inc
test
mov
add
pop
inc
je
pop
pop
jl
dec
aas
add
sub
stos
add
in
xor
xor
xor
shrb
ds
adc
push
test
add
shll
or
data16
leave
out
loopne
je
std
lock
adc
clc
leave
stc
xor
pop
rcrb
shrb
mov
cmpsb
mov
loop
or
mov
lods
insl
jne
ret
cmp
add
or
js
insl
jne
add
jno
xor
adc
shld
inc
cltd
xor
aas
jne
test
add
adc
sti
add
add
lock
lret
test
fadds
pop
xor
mov
insb
cli
cld
addb
inc
dec
or
add
rcr
add
xor
inc
mov
add
and
rcrl
jns
shlb
inc
add
dec
or
fdivs
loope
enter
adc
xchg
movsl
shrb
fdiv
stc
pusha
jmp
pop
jmp
xor
andb
cltd
cltd
movsl
js
xchg
add
xchg
xchg
pop
pusha
mov
sbb
jl
xor
clc
cmpsl
imul
aas
xor
cmpsb
fistl
mov
ss
or
call
add
insl
cmp
jg
mov
jge
mov
pushf
push
push
clc
cltd
cmp
adc
jmp
divl
pushf
add
pop
jne
aad
or
cld
dec
pop
mov
jbe
icebp
add
nop
add
cltd
scas
cwtl
jg
mov
inc
push
xchg
ret
fidivrs
or
dec
adc
dec
subb
and
mov
xchg
sub
aas
pop
adc
xchg
adcb
mov
loop
notb
mov
mov
add
jmp
shlb
sbb
aad
mov
cmpsb
fisttps
pushf
push
sbb
imul
and
pop
cwtl
xor
add
imul
jb
movsl
inc
outsb
clc
fdivrl
xor
in
ret
dec
push
add
in
scas
mov
xchg
push
jns
pushf
push
rolb
adc
leave
gs
push
mov
scas
add
xchg
xlat
sahf
add
mov
bound
add
add
mov
jns
lcall
out
sbb
cmp
add
push
or
mov
add
inc
cwtl
test
push
xor
mov
sbb
push
pop
mov
iret
mov
add
cmp
addb
repz
jno
pop
aas
jg
mov
mov
inc
sub
fistpl
mov
xchg
in
andb
out
jns
xchg
push
dec
aaa
call
sahf
enter
or
cmpsl
add
clc
shr
inc
dec
inc
pop
fstpt
aas
cmp
icebp
sub
mov
inc
mov
insl
xor
scas
inc
add
ffree
lcall
add
add
scas
add
gs
loop
or
fldl
pop
pop
divb
sbb
add
ret
fists
add
test
out
incb
adc
loopne
mov
lret
mov
add
ret
fstl
inc
nop
pop
mov
pop
xchg
pop
jbe
mov
mov
and
add
in
outsb
lods
jno
mov
jmp
lods
into
test
mov
in
clc
mov
and
testb
outsb
add
out
push
std
ds
fidivrl
negb
xor
xor
jle
xor
incb
iret
enter
add
push
adc
gs
int3
push
pop
js
sbbl
pop
push
add
test
mov
xor
test
mov
push
cwtl
pop
pop
jns
add
lahf
inc
movsl
test
orl
shlb
inc
sub
mov
jecxz
lahf
pop
out
into
ja
mov
mov
cmp
js
shl
inc
mov
cs
mov
add
push
sbb
push
daa
fstpt
sbb
add
cmpsl
push
push
and
push
or
mov
add
add
jecxz
repz
cli
jp
popa
int
mov
push
sub
movsl
scas
mov
push
fucomp
out
pop
inc
adc
or
jb
pop
dec
test
push
and
xor
and
movsl
mov
and
dec
scas
fwait
mov
addl
test
inc
cmpsl
test
aaa
xor
or
add
nop
push
mov
fwait
icebp
mov
bound
add
adc
rcrb
shl
push
adc
leave
movb
sahf
cs
cmp
rclb
cs
andl
aaa
and
das
add
mov
nop
loopne
call
nop
scas
cmpsb
mov
ss
xchg
sub
adc
pop
add
loopne
hlt
in
pop
leave
ljmp
mov
cs
cltd
add
mov
push
stos
insl
daa
sti
add
bswap
fists
xchg
cld
jmp
mov
mov
push
push
addb
outsl
pop
add
fildl
outsb
and
mov
xchg
lods
dec
dec
stc
inc
xchg
les
mov
mov
dec
in
or
out
add
add
pop
inc
adc
jecxz
adc
and
loopne
mov
xchg
rcrl
pop
sub
jns
loop
and
and
loop
std
xor
adc
dec
add
int3
add
sbb
incb
add
inc
mov
sbb
lods
push
add
stos
cld
pop
pop
add
sub
out
cmp
dec
push
sbb
xchg
lahf
inc
test
push
ret
add
pop
sbb
hlt
js
insl
push
inc
xchg
mov
cmp
test
rcr
pop
mov
xchg
xchg
push
xchg
js
leave
xchg
and
mov
repz
popf
cmpb
xchg
add
pop
pop
dec
pop
adc
or
mov
hlt
cmpl
mov
scas
popa
fisubl
std
push
push
push
into
push
sbb
and
aam
add
leave
divb
adc
push
ret
xchg
xchg
sbb
sbb
or
mov
rorl
xchg
xor
add
stos
sbb
push
stos
jno
repnz
add
lahf
sbb
add
and
adc
lods
mov
and
out
into
les
imul
lea
rolb
rcrl
dec
sub
in
int
outsl
cwtl
mov
fcom
cmpsl
dec
es
add
in
inc
out
repnz
lock
add
add
es
add
add
add
mov
jle
adc
add
clc
js
mov
cltd
push
add
cwtl
stc
mov
insl
xchg
ljmp
xchg
mov
dec
addb
mov
std
add
push
cwtl
mov
mov
dec
or
int3
add
pop
lcall
jne
and
add
xchg
cwtl
cld
cmp
mov
xchg
push
mov
push
jg
and
mov
dec
sti
adc
add
jp
je
mov
aam
scas
mov
and
addl
adc
add
inc
in
inc
fidivs
add
lcall
cmp
pusha
pushf
mov
add
add
push
stos
cmp
fwait
xor
add
jo
jno
nop
pop
push
mov
addb
jns
lods
sbb
sbb
popa
sub
add
nop
adc
lods
lods
mov
cmp
filds
add
aam
push
sbb
add
dec
or
add
cltd
out
jecxz
or
sahf
adc
ljmp
add
xor
xchg
or
add
fsubrs
nop
in
icebp
adc
and
jnp
pusha
xor
xlat
mov
cmp
xchg
fmull
dec
scas
cs
dec
and
fxch
int3
mov
andl
cmp
and
rolb
pop
xchg
xlat
adc
mov
add
inc
add
out
add
test
jmp
or
mov
cmc
dec
roll
and
je
sub
xor
or
stos
pop
fstpl
ja
mov
les
jle
add
popf
push
push
sub
inc
in
pop
js
les
arpl
jno
mov
mov
popf
mov
mov
shlb
cli
fcompl
jne
popa
sbb
aam
cltd
inc
dec
cmc
ror
pusha
in
insb
lahf
xchg
jmp
inc
jo
testl
orl
lcall
stc
xchg
flds
insb
add
loop
and
xor
cld
sbb
dec
add
mov
sbb
int
add
push
call
test
add
lds
addr16
scas
iret
bound
jo
push
lea
ret
cmc
lods
cmp
mov
out
mov
dec
insb
jnp
add
fwait
dec
or
add
or
lock
or
shrl
repz
mov
add
jns
sub
add
int
add
lcall
les
add
adc
or
jb
jns
popf
scas
aam
pop
orl
movsl
cwtl
xor
in
fwait
adc
stos
aad
jbe
outsb
jne
fists
add
push
and
scas
fnsave
adc
dec
jo
cmp
fsubp
hlt
es
outsl
pop
daa
shlb
push
lods
xor
dec
mov
pop
out
idiv
outsl
or
add
jno
dec
jno
pop
outsl
jle
cmpsl
cmp
lahf
dec
mov
mov
mov
mov
movb
cmpsl
cltd
pop
or
add
lahf
add
daa
add
bound
dec
mull
jle
dec
pop
loope
add
mov
test
icebp
ja
stos
test
push
push
cmc
popa
loope
jno
lret
pop
enter
imul
fwait
imulb
leave
add
add
imul
lcall
sbbb
lahf
jne
frndint
push
inc
add
jp
mov
gs
shll
dec
neg
push
add
andl
andl
jne
pop
jo
and
pop
lock
xchg
out
or
mov
xor
nop
cli
leave
mov
add
add
hlt
dec
jmp
aad
add
rolb
jae,pn
push
in
and
mov
add
stos
mov
jnp
mov
and
pop
sarl
xor
cmp
adc
rorb
pushl
or
cmp
cmp
dec
test
jmp
clc
cld
cmp
add
loope
loop
adc
enter
pop
add
fdivrp
out
push
lahf
out
in
pusha
jns
push
pop
and
rcrl
inc
mov
mov
push
test
jne
pop
mov
push
adc
dec
test
outsb
shrb
add
cltd
push
imulb
inc
mov
add
add
xchg
add
pushf
in
stos
add
jbe
jmp
enter
sub
sbbb
mov
lock
roll
dec
pop
add
bound
test
incb
jg
iret
sbb
pop
inc
inc
xchg
std
xchg
mov
sub
mov
xchg
cmp
push
add
loope
fistps
and
fdivs
loopne
in
add
xchg
xor
out
jmp
jg
shlb
add
imulb
xor
inc
outsb
outsl
stc
add
mov
and
jge
inc
xchg
add
arpl
fadds
cmpsl
aaa
bound
decl
add
sbb
imul
filds
mov
fildl
xchg
pop
stos
jmp
and
add
aas
add
push
mov
xor
dec
cmc
push
jecxz
sbb
popl
and
push
jne
xchg
dec
fwait
xor
inc
in
sbb
jne
jl
ret
add
push
dec
xchg
add
aad
push
cmpsl
shlb
mov
shrl
gs
dec
mov
lahf
imul
loope
push
in
int3
xchg
add
jne
xor
add
mov
test
arpl
rorb
sub
mov
dec
push
in
ret
xchg
pop
loopne
mov
push
mov
jecxz
add
mov
pop
nop
push
loopne
push
aad
js
add
inc
cmpsb
inc
insb
scas
push
out
sbb
xchg
flds
push
add
idivl
jg
inc
mov
mov
mov
dec
sar
pop
aad
add
or
out
testl
icebp
mov
lds
sti
pause
add
popa
ret
out
mov
ss
or
add
sub
and
js
mov
mov
jle
aam
mov
xchg
ret
outsb
or
movsb
test
cmc
pushf
add
cltd
jne
pop
sub
dec
pop
add
scas
loopne
insb
insb
xor
sbb
xor
out
add
pop
int
int
testl
into
imul
jl
jmp
pop
shrb
add
in
sbbb
mov
add
sub
lods
inc
imul
sub
shlb
add
lahf
and
mov
loop
fwait
pop
ja
aaa
jno
mov
push
mov
xchg
and
push
sbb
add
add
sbb
jmp
int
cmp
xor
movsb
shrb
add
leave
inc
sub
pop
idivb
leave
enter
and
or
add
push
leave
adc
lea
ret
push
push
mov
shll
shlb
xor
fildll
xchg
push
jb
mov
call
andl
dec
xlat
push
scas
inc
xchg
pop
ficompl
hlt
movsb
mov
lcall
add
lcall
xor
pop
or
mov
add
or
cmc
cli
sbb
jae
jo
sti
ljmp
stos
dec
fsubp
mov
jne
in
cmp
mov
stos
mov
jecxz
decb
ljmp
test
mov
adc
mov
push
lds
sarl
mov
sub
inc
add
or
ret
jecxz
jae
and
adc
addr16
cmp
jae
mov
xor
loop
mov
adc
xchg
add
pop
leave
add
jp
xchg
inc
std
scas
xlat
in
adc
mov
cmp
add
stos
andb
fdivr
popf
repnz
sbb
lds
pop
add
push
and
mov
mov
ss
pushf
mov
xor
mov
out
add
cmpsl
aaa
fwait
in
pushf
add
push
pop
aas
add
xchg
xchg
testl
shrb
out
dec
cmp
add
pop
jge
movsl
clc
andl
iret
sbb
sub
inc
hlt
pop
testl
jecxz
int3
mov
add
repnz
sbb
out
sbb
dec
jle
mov
inc
js
jns
add
xor
mov
or
pop
scas
pop
fcomip
xlat
sbb
adc
stos
jmp
add
pop
xchg
repz
cmc
jbe
cmp
jno
rcl
xchg
test
mov
sub
aas
mov
sbbl
rcl
in
hlt
xor
add
scas
addr16
cmp
lea
pop
lahf
mov
sbb
mov
daa
add
fadds
xlat
fs
filds
and
pop
xchg
sub
push
sub
push
mov
fmuls
aad
sub
cs
push
sbb
cmp
add
xchg
cmp
mov
xchg
adc
inc
daa
js
sti
mov
lock
adc
incb
mov
pop
out
mov
xor
adc
stos
mov
cwtl
and
inc
repnz
in
add
xchg
popa
ret
xor
xor
jg,pt
push
repz
push
sbb
rcr
mov
pusha
cmpsb
je
and
es
sub
adcb
pusha
pop
mov
ljmp
mov
pop
imul
lock
fcoms
pop
jge
test
repz
xchg
lods
ret
xor
jl
push
fldenv
jnp
cmp
sub
adc
and
call
or
sbb
xchg
gs
stc
test
in
push
pop
inc
add
dec
xchg
jnp
and
mov
stc
push
inc
sbb
mov
add
mov
jns
stos
add
dec
jmp
fcom
jl
pop
dec
xchg
add
aam
or
xor
jae,pt
mov
sar
add
rclb
adc
out
jl
lds
incl
add
daa
push
mov
pop
mov
push
pop
stos
test
cs
sub
cld
add
inc
stos
cmp
scas
ret
shrl
cmp
aad
add
ljmp
add
std
xor
and
xchg
mov
jle
mov
add
sub
push
and
negb
add
iret
xchg
xor
dec
jae
mov
sti
inc
ret
add
add
fimull
int3
xor
mov
ret
or
testb
inc
daa
mov
or
in
insb
dec
sub
das
cltd
xchg
pop
rorl
mov
add
movsb
stos
mov
cmp
add
fcom
add
repnz
mov
test
lock
xchg
sub
pop
cmp
or
int
scas
cmpsb
imul
add
push
sub
sub
movsb
cmpsb
dec
movsl
mov
add
pop
out
add
loop
xchg
push
testb
popl
cmpsb
incb
test
xor
loope
add
jns
xor
xlat
sbb
sub
fldln2
sbb
jae
jae
jp
add
xlat
add
push
add
pop
mov
daa
xchg
aad
aad
push
icebp
and
inc
jbe
int3
in
xchg
stos
int
subl
outsl
jge
cwtl
push
mov
add
in
fiaddl
cmpsb
js
cmp
add
ret
mov
movsl
add
adc
xlat
sub
add
mov
imul
mov
and
and
pop
decb
mov
add
add
inc
daa
add
cmpsl
lods
inc
cmp
xor
dec
add
sbb
stos
adc
je
push
call
adc
ljmp
pusha
add
scas
cmpsl
fmull
inc
call
incb
incl
lock
cmp
or
out
push
mov
xor
add
xchg
add
cmp
cmp
addr16
roll
xlat
jmp
dec
sub
mov
or
mulb
add
clc
in
mov
scas
jle
cmp
inc
pop
sbb
or
mov
lcall
outsl
mov
mov
add
and
inc
add
or
add
add
add
jo
add
add
jo
push
data16
push
ja
push
add
push
notl
mov
hlt
in
xchg
push
add
cmc
imulb
repz
jbe
out
pop
mov
mov
sbb
in
jg
or
inc
mov
and
add
loope
cwtl
adc
sub
flds
jmp
mov
into
jmp
repz
stc
cli
lcall
hlt
orl
sub
add
loope
fwait
push
std
mov
ja
add
mov
mov
gs
adc
roll
stos
cld
cmpsl
mov
testl
int3
lods
add
stc
jp
mov
lds
add
sahf
aam
in
add
mov
js
inc
jg
addb
outsb
push
push
push
lods
push
in
xchg
mov
xchg
add
xchg
fcoms
cmp
outsb
mov
jl
fcoms
dec
jle
js
mov
add
mov
adc
je
jmp
std
push
and
xor
lea
das
xchg
add
gs
pushf
dec
inc
pop
lret
fcmovnbe
xor
daa
xchg
inc
pop
jne
pop
dec
xor
pop
inc
ret
inc
popf
sbbl
pop
bound
add
dec
jno
imul
sbb
pushf
add
add
add
add
aas
ret
jp
dec
cli
cltd
int3
cwtl
dec
add
sbb
test
add
jbe
add
sub
hlt
test
jp
cmp
push
push
add
jno
scas
idivb
add
jg
sbb
out
js
fimull
cli
add
mov
adc
adc
push
sub
rolb
ret
add
dec
in
rolb
cmpb
mov
fwait
ds
jle
es
idiv
xor
mov
add
cmp
xor
jne
adc
add
dec
sbb
dec
jb
in
scas
shll
repnz
add
mov
ljmp
push
add
mov
roll
mov
dec
sbb
test
jns
ljmp
xor
jp
popa
les
aam
mov
mov
test
mov
cli
lret
lcall
mov
ja
dec
mov
arpl
mov
sub
popa
std
mov
mov
cmp
jnp
je
adc
lahf
dec
movsl
sub
dec
pushf
and
fwait
insb
lods
add
add
xlat
xchg
scas
ja,pt
sarl
icebp
mov
and
or
fisttpll
sbb
fadds
add
add
int
add
mov
cltd
sbb
stos
scas
es
xchg
sub
dec
adc
out
adc
insb
loope
pop
cmc
ja
adc
xchg
cld
push
arpl
jae
popa
fstps
mov
mov
js
xor
add
fwait
cli
cltd
xchg
imul
mov
xor
les
popf
test
add
fmul
mov
add
pop
add
int3
loopne
mov
decl
fisttpl
pmaxsw
aam
add
cmp
cmp
imul
in
iret
ljmp
add
sarb
das
add
fnsave
cmpsb
xchg
lret
or
inc
shlb
sbb
push
xor
repz
pop
push
push
data16
adc
dec
add
ficoml
pop
js
jns
jo
push
add
jo
cmp
push
leave
xor
rol
das
cmpb
xchg
enter
mov
add
pop
push
ja
add
nop
in
adc
xchg
add
add
mov
jnp
mov
or
add
and
add
movb
aam
sti
add
add
sti
iret
dec
jae
pop
sub
xchg
add
xor
out
pop
lock
adc
and
pushf
mov
add
jb
dec
or
test
add
ljmp
cmpsl
mov
or
rclb
jg
mov
aam
dec
pop
shl
and
and
in
jg
lods
cmp
add
mov
push
push
add
lret
clc
test
jmp
ljmp
add
data16
mov
jp
fcom
pop
out
ja
add
mov
mov
sub
add
add
arpl
bound
not
mov
scas
movsb
sbb
push
fmuls
pusha
bound
mov
pushl
xchg
push
add
stc
lock
pop
mov
cli
roll
cld
in
int3
inc
lods
enter
and
cmpsb
fldl
insb
or
inc
call
adc
movb
and
adc
pop
jmp
push
and
add
cmp
inc
add
adc
mov
std
xchg
lods
call
add
xor
inc
pop
inc
add
sbb
mov
xlat
sub
cli
jl
outsl
and
lcall
mov
dec
lods
fs
popl
xor
mov
mov
je
cwtl
out
jae
test
mov
sbb
add
xchg
insb
cmp
jnp
sbb
dec
mov
mov
jne
xchg
xor
push
out
sub
push
pusha
add
push
cmp
mov
pop
jnp
jne
add
jg
pop
mov
stos
add
sub
push
js
mov
outsb
repnz
xchg
iret
das
sar
test
lods
out
neg
movsb
and
rolb
movsl
movl
insb
lret
or
pop
movsb
or
rcrb
push
adc
xchg
adc
mov
mov
fnstcw
add
roll
ja
insl
adc
add
roll
cmp
shlb
mov
jge
fcomip
xchg
rcll
out
sub
adc
loope
lock
sahf
cmp
add
ret
or
sub
test
aam
mov
imul
fisubs
cwtl
mov
int3
imul
pop
jle
incl
and
mov
jge
sub
ds
fsubp
adcl
test
add
orb
push
mov
mov
out
mov
lret
mov
jae
stos
lahf
test
imul
add
jecxz
pop
pop
addr16
mov
mov
outsb
mov
into
leave
mov
push
cld
leave
les
pop
add
dec
mov
adc
movsb
inc
mov
add
jns
inc
scas
test
jge
adc
push
out
add
and
pop
jae
scas
stos
test
mov
cmp
les
fidivrs
in
add
loop
push
xor
xchg
orb
jns
add
jge
push
sbb
enter
popf
and
mov
jbe
jno
scas
imul
cmp
lods
les
xor
dec
imul
cmp
mov
xchg
and
xchg
jne
loopne
lock
mov
add
sbb
pop
xchg
aad
push
shl
jge
mov
adc
ljmp
movl
stc
or
sahf
cmpsb
xchg
jg
pop
fcomps
dec
add
mov
test
je
repz
add
mov
add
mov
fisubl
add
mov
add
jae
lcall
in
bound
incl
add
pop
add
sbb
push
lods
in
aas
add
sbb
test
call
or
push
add
sbb
or
add
insl
lret
jb
adc
cmp
xchg
jo
adc
int3
imul
int3
lahf
aas
call
mov
inc
cmp
test
push
xor
lret
jmp
clc
add
mov
sti
push
sub
ror
adc
dec
andb
xchg
adc
jb
pop
pop
and
fdivr
sbb
push
data16
daa
sahf
shlb
test
dec
sbb
sub
in
sub
cltd
test
in
es
aad
add
fildl
in
xchg
out
xor
jbe
cmp
lock
push
mov
das
sub
inc
sbb
sbb
sbb
add
test
xchg
fucomi
dec
loopne
pusha
dec
jmp
lods
sti
add
ficoms
scas
popf
pop
xchg
add
je
sbb
add
push
es
adc
mov
mov
mov
xchg
into
add
repz
add
xor
out
push
roll
mov
sti
daa
ja
cmp
in
mov
push
xor
das
fidivl
aaa
mull
mov
sbb
lea
cmp
rolb
lret
dec
sarb
iret
or
adc
gs
xor
cmp
int
or
xor
repz
loopne
push
les
sbb
and
cld
and
sub
pop
insl
mov
fwait
mov
mov
mov
or
sub
ljmp
sar
test
or
push
test
xchg
push
pop
dec
into
add
sbb
das
mov
or
out
push
loopne
add
pushf
mov
cmp
outsb
add
cli
sbb
or
mov
lahf
movsl
in
and
sti
inc
mov
jb
enter
mov
lods
mov
ja
pop
adc
arpl
add
jae
lret
or
scas
mov
loop
stos
test
xor
jle
sbb
push
test
or
stc
push
daa
pop
scas
in
dec
push
int3
jnp
xor
out
sub
push
pop
pop
xchg
outsl
data16
enter
mov
add
jg
sbb
iret
sti
shlb
add
push
xchg
xchg
loopne
mov
je
stos
add
testl
inc
add
dec
inc
sub
pop
dec
fs
sbb
popf
cmp
sub
sub
add
xchg
out
aaa
push
movsb
cmp
fcoml
sub
insl
mov
or
repnz
inc
pop
out
add
xor
sub
fwait
sbb
push
stos
sbb
or
inc
js
xor
mov
sbb
loop
mov
add
jb
pop
add
outsl
adc
inc
mov
popa
add
ja
out
pushf
addr16
lock
add
test
mov
jge
mov
je
xor
add
pushf
pop
aaa
out
or
jmp
jne
das
pushf
push
cs
ficoms
or
dec
sbb
nop
add
mov
popfw
and
inc
add
add
nop
insb
pushf
mov
cld
mov
aas
add
dec
inc
aas
repz
mov
lods
adcb
das
movsb
pop
push
add
in
in
ret
les
out
dec
and
fnstenv
add
xor
pop
and
in
add
popf
lods
daa
std
push
sbb
xor
add
inc
fcomi
imul
test
into
xlat
add
mov
xchg
in
lret
push
xchg
pop
pushf
inc
pop
movsb
push
mov
add
ret
roll
in
in
roll
mov
cmpl
mov
xchg
jnp
outsl
ret
sbb
in
jmp
das
clc
scas
addr16
fldl
gs
imull
movb
jg
repnz
scas
push
jno
imul
icebp
sub
clc
lahf
mov
add
addl
stos
adc
in
push
insb
pop
dec
sti
insb
repnz
xorb
mov
and
mov
shl
popa
insb
dec
mov
movsb
jo
pop
call
and
fsubrs
sahf
and
and
add
dec
mov
sti
cmp
lahf
xchg
daa
jl
jae
push
movsl
pushl
xor
xchg
jne
mov
cmp
inc
jg
and
pop
push
adc
mov
inc
mov
sahf
inc
cld
and
popf
cli
xor
clc
inc
sbb
cmp
mov
sub
xchg
push
jl
bound
jne
mov
stos
test
sti
fwait
inc
fistpll
mov
leave
sbb
data16
adc
add
rolb
jmp
add
jp
push
xor
je
shr
add
sbb
call
xchg
out
and
sbb
icebp
and
push
test
aam
roll
repnz
xchg
test
out
fsubrl
add
iret
pop
inc
or
cmp
fcompl
mov
mov
add
mov
or
fcompl
lahf
fs
mov
adc
mulb
loop
xchg
adc
sbb
lock
add
pop
jno
xchg
jno
dec
movsl
bound
mov
pop
in
outsb
ficoms
adc
testb
hlt
push
add
dec
bound
xchg
bound
popf
in
shlb
gs
mov
add
pop
xchg
movsl
mov
out
add
add
fistps
in
add
sbb
cmpsb
loop
loop
out
add
pop
add
add
pop
jb
dec
test
test
popf
jmp
scas
lds
cltd
mov
jp
push
sub
xor
xchg
test
pop
sub
cli
sbb
add
mov
incb
add
adc
push
ret
xor
loopne
pop
jecxz
fsts
shrb
xor
add
adc
iret
das
aad
test
movl
imul
in
cli
aaa
pop
add
push
mov
xor
fcmovnb
add
or
jnp
incl
mov
je
and
ret
je
shll
jno
jbe
sahf
scas
mov
add
test
addr16
add
push
dec
out
dec
mov
cld
mov
sti
sbb
inc
pop
jle
shrl
outsb
mov
and
cmc
and
ss
xor
bound
aas
in
sub
add
out
sarb
jae
pushf
inc
push
xor
daa
aam
jl
lock
push
jmp
cmpsb
mov
adc
inc
add
mov
in
roll
dec
pop
push
sub
lcall
sub
hlt
rorl
scas
das
lahf
jge
inc
cmc
cmp
jmp
das
mov
das
mov
shrb
or
dec
dec
or
sahf
mov
fs
orl
jb
push
hlt
inc
aad
mov
test
xor
lahf
sbb
sub
pop
ficoml
add
add
adc
sub
fsubrl
scas
daa
hlt
ja
inc
pop
add
lods
ret
mov
push
leave
or
inc
movsb
testl
dec
xchg
lahf
ss
ret
sbb
jne
add
push
or
subl
inc
dec
and
loop
repnz
sub
negl
andl
ljmp
and
lcall
add
mov
sbb
aas
pop
stos
add
jecxz
insb
mov
add
pop
insl
movsb
aas
pop
fincstp
jecxz
jae
iret
nop
movsb
add
test
insb
or
xchg
outsl
jo
ret
pop
stc
cmp
xchg
mov
lods
mov
add
ror
add
add
or
gs
pop
sub
cmp
sub
sahf
sub
xchg
rol
in
sbb
int3
loopne
mov
add
add
pop
xor
sti
mov
cmp
add
adc
into
stos
add
lcall
fsts
add
push
pop
out
push
enter
sbb
add
inc
lcall
push
je
xchg
gs
ss
hlt
jle
in
lock
add
jecxz
push
cmp
fstps
sub
inc
add
or
lcall
xchg
mov
stos
ja
lea
cmp
add
jb
add
aam
jl
stos
push
movsl
je
xchg
je
outsb
push
add
je
add
das
push
or
mov
js
push
xor
jp
stos
adc
add
mov
mov
push
dec
jle
and
xor
inc
sub
xorb
mov
mov
je
cmp
adc
xchg
push
xchg
mov
add
xor
and
imul
cmpsb
mov
testl
add
mov
outsb
dec
clc
jo
pop
adc
repnz
call
push
daa
lret
adc
add
test
mov
add
aas
ss
ja
jb
faddp
inc
jle
mov
xlat
sbb
jbe
add
mov
ja
mov
out
pop
loopne
data16
push
xchg
xchg
ds
xor
and
shl
cli
mov
jge
loop
inc
xchg
clc
jbe
pop
out
add
in
add
and
mov
call
mov
nop
push
insl
imul
repz
test
decb
xchg
shlb
sbb
out
or
push
add
gs
addr16
cmp
iret
adc
push
add
test
cwtl
ror
and
dec
stos
imulb
cld
pop
movl
jo
arpl
dec
jecxz
movsb
lcall
sbb
fcomip
dec
out
test
dec
in
rcll
mov
and
popa
movsb
add
mov
loopne
mov
and
aas
rolb
enter
xor
inc
das
cmp
ret
add
add
cmp
addr16
js
insb
leave
mov
mov
adc
jnp
cmc
fcomps
inc
add
add
add
cltd
roll
sub
mov
add
mov
ret
out
add
out
mov
div
ja
add
pop
push
cli
push
addr16
adcb
in
mov
insb
test
mov
cmp
jb
sbbb
add
inc
inc
dec
ret
mov
dec
inc
dec
adc
jmp
xor
mov
push
repnz
sub
lret
mov
adc
dec
add
xchg
cmpsl
mov
inc
add
das
sbb
fldl
incb
inc
adcb
jo
mov
pop
mov
out
pop
ja
pop
xchg
ljmp
add
add
pop
adc
rorl
rolb
addr16
add
dec
jg
xor
push
sbb
add
add
cltd
fcompl
es
mov
inc
sbb
dec
mov
mov
repnz
inc
add
iret
fimuls
add
jle
iret
cwtl
or
mov
inc
xor
xchg
std
inc
lcall
dec
mov
sub
or
cmpb
push
or
push
xchg
or
ljmp
loopne
sub
xor
sbb
sub
lods
push
add
add
mov
cltd
add
add
jae
test
push
xchg
fs
in
in
mov
or
popf
test
lcall
lea
pop
fdivs
sbb
pop
repnz
hlt
outsl
jle
push
xchg
or
add
enter
jno
mov
mov
add
mov
inc
lods
sahf
stos
sub
testb
xchg
pop
add
mov
aam
xchg
push
lret
fwait
mov
adc
jo
jp
outsb
or
mov
cs
lock
mov
jle
or
jns
fidivs
idivb
xchg
mov
outsl
arpl
push
xchg
loope
sbb
stos
out
repnz
ds
jo
jo
add
andb
cmp
add
xor
test
pop
cmp
inc
add
call
pop
sbb
xor
int
adc
adc
add
sub
pop
test
push
sub
sub
not
mov
mov
inc
imul
imul
outsb
cltd
sbb
add
je
dec
or
repnz
add
and
icebp
push
scas
add
mov
lcall
mov
jl
std
shll
add
cld
dec
xor
cld
sbbb
push
xor
mov
mov
pop
xchg
mov
lea
mov
ljmp
test
js
sbb
gs
xor
int3
addl
xchg
sbb
fadds
xchg
xlat
out
adc
add
idivl
xchg
mov
jae
shl
cmc
pop
push
inc
sahf
add
roll
movsl
cmp
ffreep
push
loop
add
mov
inc
adc
or
mov
pop
js
pop
in
fdivs
cmc
adc
sbb
loope
sbb
push
jne
insb
or
stos
movsb
dec
pop
jb
jmp
les
add
orb
rcll
push
aas
inc
ret
popa
dec
push
pushf
mov
add
add
loop
cltd
rolb
jb
cmp
pusha
lcall
loop
repnz
das
lret
push
sahf
mov
ss
push
jo
xlat
xchg
aaa
loope
stos
mov
mov
loope
or
pop
in
sbb
xor
dec
cmpsl
push
icebp
push
scas
jo
inc
loopne
jge
mov
xchg
xor
inc
jl
mov
sahf
in
in
int
push
xor
inc
sub
shrb
mov
scas
jmp
and
sbb
push
fidivl
aas
jl
and
inc
push
mov
mov
sahf
lods
cli
pop
mov
dec
xor
iret
sahf
pusha
sub
mov
adc
and
add
sbbl
popf
sbb
pop
test
scas
into
mov
add
cmpsb
pop
push
xchg
mov
les
sbb
add
add
push
push
lret
icebp
sbb
jp
inc
xor
mov
mov
cmp
and
pusha
add
pop
add
das
ret
test
xchg
add
aaa
add
pop
std
push
sahf
and
insb
mov
mov
push
ret
xor
add
inc
push
addr16
push
leave
add
sub
lcall
jge
adc
addl
outsb
xchg
mov
mov
pop
arpl
mov
imul
mov
xchg
mov
in
or
lret
dec
sbbb
mov
out
pop
add
add
push
add
push
mov
and
fcmovnbe
leave
push
lahf
sub
fsts
arpl
lods
sub
sub
or
push
imul
jns
rorb
push
cmp
stc
mov
sub
add
stos
add
jae
jmp
sub
into
rorb
mov
andb
jno
sub
imull
in
iret
test
add
inc
jmp
dec
mov
pop
jae
mov
lret
add
jp
push
xchg
push
out
test
outsl
add
add
pop
mov
dec
add
mov
mov
scas
jns
adc
add
cltd
mov
inc
push
and
push
mov
ret
out
mov
pop
and
pop
pop
inc
mov
out
sbb
test
sti
dec
shrb
call
ret
add
and
ss
mov
sbb
cs
repnz
push
not
add
inc
stos
fmul
cs
fmull
xor
pushaw
add
or
scas
insb
mov
test
adcb
push
xor
mov
ret
stos
fsubrl
mov
xchg
pop
pop
pop
jb
xchg
jl
cli
jnp
outsb
out
outsb
es
fwait
rcrb
and
clc
leave
leave
jae
outsl
fcoml
push
mov
or
mov
cwtl
addb
adc
lret
xchg
daa
cmp
push
add
scas
pushf
stos
push
push
call
addl
push
push
mov
dec
dec
aas
fdivs
es
push
pop
fiaddl
or
int
test
xor
addr16
cmpsl
mov
fcmovu
jecxz
and
daa
addr16
jp
add
cltd
scas
lahf
mov
and
and
xchg
lahf
ficomps
inc
inc
std
and
or
fdivrp
aad
addr16
jne
mov
dec
push
or
push
enter
cmpsl
cmpsl
inc
xor
pop
outsl
pushf
test
xchg
std
std
js
push
push
add
fisttps
sahf
jg
sub
sub
dec
mov
mov
jmp
mov
addl
xchg
and
arpl
imul
call
rcll
pusha
rcr
cmp
sbb
lret
and
aad
outsl
outsl
out
fiaddl
int3
pop
lods
ljmp
adc
shl
dec
in
in
adc
clc
outsl
idivb
sbb
sub
and
cmc
pop
mov
pop
cmpb
jg
shrb
cmpb
inc
xchg
inc
inc
mov
cmc
cmp
or
mov
in
add
rcl
cmpsl
mov
aas
in
idiv
jae
ret
sti
int
test
sub
shr
push
adc
out
mov
dec
pop
addl
fiaddl
nop
xor
inc
cmp
pop
xchg
mov
pop
stos
cmpsb
mov
cli
fisubrs
add
test
fisttpl
jge
repnz
mov
mov
call
into
pop
andb
fs
popa
mov
out
out
lea
test
adc
xor
and
fdivrp
cmp
mov
cmc
lahf
jae
jg
cmp
out
and
out
out
aaa
leave
dec
xor
insb
pop
rcrl
push
test
lea
out
jmp
movsb
xor
les
or
stos
adc
insl
insl
pop
gs
hlt
push
addb
xor
ret
push
push
push
sub
jecxz
gs
aad
in
mov
leave
xchg
test
mov
gs
movsb
sbb
lock
test
aad
or
cmp
je
and
mov
and
and
fbstp
dec
jnp
pop
shrb
fcmovu
sub
push
sub
movsl
movsl
mov
outsb
push
stos
rcrl
in
daa
scas
mov
push
call
lea
or
xlat
ret
add
mov
or
icebp
xchg
push
push
int3
pop
mov
xchg
mov
dec
and
cmp
push
divl
xor
push
cmc
cmp
adc
adc
or
or
sbb
int
arpl
test
cmp
out
inc
in
jno
jl
loopne
jmp
jmp
mov
add
push
and
cmc
in
jle
jne
call
stc
cmpsb
cmp
jge
call
aam
push
shrb
arpl
and
jns
mov
stos
shlb
xor
aaa
push
add
mov
inc
inc
cmp
dec
dec
repnz
stc
stc
sahf
imul
mov
pop
mov
mov
jno
repz
sbb
or
jle
lds
cmpsl
lret
mov
mov
or
andb
jo
add
fisubs
les
pop
sub
cmc
notb
daa
jno
jge
fdiv
iret
iret
iret
xor
enter
inc
dec
xchg
orb
push
ja
xor
sub
sti
rcll
cmp
leave
add
sbb
pop
rorb
je
add
div
jbe
insl
out
pop
mov
mov
rol
push
mov
mov
pop
lds
adc
ret
nop
jne
xchg
xchg
inc
inc
inc
or
je
es
cs
shrb
xor
sbb
cmp
xor
mov
aas
dec
adc
out
outsl
jmp
sub
lcall
call
shlb
jnp
jbe
cltd
mov
sub
mov
ror
call
std
out
dec
es
mov
jne
add
jle
add
pop
inc
inc
xchg
popa
in
or
enter
mov
mov
insb
inc
in
aad
or
cmp
cltd
int3
imul
add
or
inc
xchg
addr16
adc
in
sbb
push
inc
inc
ret
js
pushf
pushf
xchg
xchg
cmp
cmpsb
cmpsb
cmpsb
lret
or
mov
push
rol
call
lds
lds
sahf
xchg
xchg
cwtl
push
imul
mov
pop
mov
sub
xchg
mov
cmp
lds
inc
sbbb
xor
icebp
adc
add
or
mov
sbb
lret
lret
add
call
dec
dec
jp
enter
insb
or
rcrl
pop
and
jae
ret
jne
rolb
mov
pop
or
sbb
sbb
inc
div
notl
mov
add
fisttpl
js
loop
loop
rcrb
test
mov
fdivrs
xor
xor
dec
push
add
mov
fnstsw
jg
jg
arpl
lods
dec
mov
inc
or
jbe
mov
out
mov
adc
out
push
adc
test
aas
xor
rolb
jnp
sbb
pop
gs
inc
inc
sub
lock
sbb
out
out
mov
push
cld
adc
push
push
add
pop
push
push
dec
dec
ja
mov
xchg
cmp
pop
mov
cld
cld
in
enter
call
lret
loopne
stos
sbb
or
xchg
inc
int
cmp
test
outsb
mov
stc
std
jbe
iret
iret
aad
aad
test
dec
cs
add
push
cmp
aaa
or
mov
ret
mov
jae
sti
sti
sti
xlat
mov
cwtl
cwtl
dec
push
sbb
push
mov
push
push
dec
cwtl
xor
jne
pop
lods
in
adc
movsl
cmp
pop
pop
mov
dec
mov
dec
adc
mov
add
add
ret
push
mov
lock
inc
push
sarl
scas
gs
loopne
inc
inc
jnp
cmp
iret
addl
sub
push
loop
inc
pop
mov
rcrl
sbb
jb
cmp
or
cmp
fiaddl
dec
lahf
push
pushf
fwait
push
mov
cmc
mov
cltd
cltd
mov
mov
mov
mov
or
jg
mov
nop
pop
push
dec
insb
insb
pop
inc
sbb
pop
mov
mov
inc
int3
pminsw
pop
lea
movsl
xor
movl
mov
shr
jns
push
xchg
pop
mov
mov
dec
ja
jne
jne
cs
lahf
mov
mov
xor
lods
lods
bound
pusha
scas
xor
add
es
inc
inc
pop
inc
outsl
in
pushf
sar
shrb
addr16
ljmp
scas
aad
xor
scas
ja
sub
push
pop
pop
mov
pop
js
int3
jo
enter
push
aaa
sbb
xchg
jp
push
push
and
xchg
cwtl
xchg
add
fsubs
fisttpll
test
push
lds
jecxz
jbe
std
adc
loopne
cwtl
add
repnz
cmp
jns
bnd
test
pop
ds
sbb
aad
cmpsl
lds
rol
xor
idiv
xor
sbb
sub
cs
out
gs
pop
jne
shlb
stos
stos
repz
push
push
cmc
fistps
enter
cmp
cmp
bnd
push
cmc
out
mov
lahf
lahf
cmp
mov
int3
sub
pop
imul
dec
and
rorb
sub
js
pop
aam
rorb
pop
push
push
push
lock
cmpsl
fiaddl
add
data16
mov
stc
xor
dec
adc
mov
popa
sarb
gs
adc
cmc
repz
fs
stos
jmp
jle
mov
lods
lods
lods
rolb
xlat
push
cld
and
adc
pop
lods
pop
adc
pop
pop
jns
jns
filds
insl
xchg
jno
sahf
push
xor
rcl
test
lret
lret
rorl
sbb
rolb
and
les
pop
fucomi
xor
out
gs
aad
jge
jb
cmp
mov
nop
push
push
jae
add
xor
sbb
push
xor
inc
xor
push
dec
jbe
lcall
hlt
cmp
mov
mov
or
gs
test
sti
sti
insb
sub
jne
sub
cmp
sub
jl
mov
cld
scas
and
out
inc
mov
inc
ret
sbb
and
out
out
icebp
mov
stos
xor
jno
fstpl
mov
ljmp
mov
push
addb
enter
add
add
mov
jno
mov
xor
out
in
stos
pusha
ljmp
add
shlb
xchg
mov
rclb
mov
test
sub
cmp
bound
push
shll
jg
dec
or
lret
movsl
fisttpll
imul
push
nop
jno
sbb
mov
mov
or
movsb
cmp
fstl
ja
call
ret
and
cmpsb
cmpsb
mov
cltd
test
clc
mov
cmp
push
shl
mov
fsubrs
mov
push
aas
dec
or
xchg
into
test
push
repnz
add
or
cwtl
pop
jl
pop
in
gs
mov
imul
pop
fcmovb
add
pop
loopne
roll
cmc
or
inc
or
notb
icebp
push
cmovo
enter
jb
jo
pop
lret
mov
subb
stos
mov
xor
pop
cmp
out
pop
out
decb
lock
hlt
jbe
jae
jno
in
mov
lcall
lods
repz
or
mov
sbbl
fs
adc
notb
push
or
mov
pusha
pusha
in
je
xchg
xchg
hlt
xchg
push
push
cmp
lock
call
xor
mov
mov
iret
stos
js
lahf
aaa
fwait
stos
rcl
addr16
cmp
pop
in
mov
push
jl
clc
fdivrp
xlat
xor
mov
shrb
mov
mov
jmp
ret
test
mov
sbb
adc
mov
je
mov
outsl
fucomi
or
scas
addb
cmp
sti
and
push
pusha
imul
inc
xlat
jno
pop
test
rcrb
push
push
sub
aas
stos
mov
call
lods
sahf
cmp
gs
faddl
mov
or
or
stos
mov
mov
xchg
pop
lcall
pop
mov
pop
cmp
xchg
inc
adc
adc
frstor
jp
lock
sub
xor
push
lock
fisubrs
mov
sti
clc
iret
cltd
repnz
cmc
fistpll
pop
ds
cmpsb
xchg
pcmpeqd
lock
in
inc
mov
aaa
push
sbb
shufps
jg
sbb
sbb
xchg
xor
inc
shl
adc
push
or
pop
add
jno
lea
sub
push
push
data16
pop
aas
scas
in
arpl
into
arpl
subl
push
pusha
dec
fildl
push
mov
jb
stos
enter
jp
jp
pop
jmp
pop
push
jg
aas
or
cwtl
out
pop
js
nop
cmc
jle,pn
push
cmp
insl
dec
dec
cmp
cmp
xor
jns
mov
movsb
in
popl
adc
mov
aaa
fiaddl
push
decb
pop
hlt
out
fs
push
push
int3
in
ja,pt
mov
jno
shlb
mov
mov
scas
scas
scas
cltd
sub
sahf
out
rclb
jne
push
imul
mov
mov
insb
inc
push
push
and
fs
sbb
cmc
movl
nop
mov
sub
sub
ret
jg
in
jno
or
in
mov
lahf
andb
in
in
insb
xchg
sbb
sbb
mov
xor
lods
cld
jne
repz
int3
stos
pop
pop
mov
sahf
jg
jl
xchg
xor
mov
inc
dec
xor
arpl
sub
cmp
ljmp
testb
add
sahf
push
xorl
cmp
jb
mov
cld
add
es
sub
jecxz
lahf
in
out
stos
pop
push
cli
mov
imul
out
out
mov
cmp
stos
mov
shl
sub
mov
je
lahf
movsl
call
xor
ja
dec
jmp
lret
lret
mov
inc
inc
inc
mov
or
cmp
dec
je
or
or
int3
cmp
sub
btr
test
mov
imul
or
mov
pop
lock
adc
cmp
scas
roll
jp
andl
cltd
rcll
movsb
movsb
movsl
pusha
arpl
pop
shll
mov
dec
out
jecxz
jae
sbb
sbb
lds
es
cmp
outsl
std
jnp
cmp
mov
scas
lret
xor
xor
adc
jl
clc
inc
inc
lock
push
lea
sbb
rcrb
ret
or
fidivrl
xchg
xchg
xchg
shlb
jae
sarl
push
sbbb
inc
dec
dec
inc
pop
pushf
outsb
bound
lods
pop
xor
cmp
test
sar
loop
in
jne
jecxz
push
adc
fcmovnu
mov
mov
mov
lea
scas
test
cmp
pop
adc
aad
fmul
jmp
push
sbb
inc
js
mov
xchg
ret
inc
out
bound
cmp
fsubrs
movsb
daa
sub
test
adc
cmp
mov
push
xchg
pop
ret
ret
rol
sbb
outsb
and
scas
scas
or
mov
push
in
push
xchg
cli
xchg
daa
pop
hlt
jne
add
push
and
nop
jle
or
popa
mov
outsl
pushf
pop
xlat
xlat
xlat
cmp
pop
dec
cmp
adc
push
push
into
dec
pop
es
aam
pop
cmp
xor
insb
mov
imul
push
mov
cltd
cltd
xor
fmuls
adc
outsl
subl
rcll
rol
out
add
cmp
mov
dec
dec
cmp
push
inc
fnstsw
sbb
mov
xchg
enter
fidivs
push
xor
and
rclb
aad
mov
xchg
mov
rcl
mov
mov
and
nop
pusha
js
xor
inc
inc
pop
imul
out
sti
jne
jo
adc
xchg
xchg
rcl
stos
stos
stos
sahf
rclb
jmp
movsb
push
and
push
xchg
jle
stos
stos
stos
pop
cltd
push
nop
inc
jnp
pop
jg
or
dec
out
or
out
add
ret
ret
ret
jo
je
add
fiadds
mov
sbb
and
fildl
push
add
xchg
mov
xor
pop
mov
dec
arpl
lea
insl
sahf
sahf
adc
mov
mov
lods
test
int
cltd
lret
call
gs
imul
cmp
std
xor
sbb
icebp
inc
inc
inc
sarb
sbb
ret
xor
shrl
sbb
and
out
sbb
push
test
sbb
test
fwait
sub
out
mov
cmp
jmp
popl
cltd
xchg
jno
leave
cltd
add
push
cmp
or
in
dec
js
inc
or
xlat
xor
adc
mov
pop
jge
mov
sub
add
fidivrl
movsl
lods
jo
div
xor
ja
and
jp,pn
push
movsl
cmc
jns
imul
aad
ljmp
les
inc
test
jp
or
outsl
outsl
outsl
adc
std
std
std
stc
fisttpll
mov
int
dec
nop
inc
mov
push
sets
dec
inc
mov
adc
ret
outsl
or
add
ja
into
mov
stc
or
test
lret
dec
xor
lods
lods
lods
sbb
cmp
push
jl
dec
dec
xchg
xchg
sbb
inc
dec
jg
adc
testb
lcall
icebp
icebp
rorl
movsl
cmpsl
pop
dec
push
and
cwtl
xor
cwtl
cmp
rcl
aam
enter
es
mov
mov
stos
adcb
xchg
add
mov
cmc
mov
pop
cmpsl
arpl
dec
ljmp
orb
xchg
sysret
icebp
inc
fidivs
add
xor
cs
adcl
and
in
in
inc
or
jno
mov
vmovdqa
mov
bnd
jnp
lods
add
add
xor
mov
sbb
xor
add
pop
aaa
aam
push
arpl
test
adc
jl
pop
inc
arpl
mov
pop
lods
lods
and
xchg
xchg
loopne
aam
mov
dec
stos
xor
jbe
lahf
lahf
xchg
jecxz
push
push
and
or
lock
insb
xchg
push
xchg
or
les
clc
push
jns
mov
xor
push
add
or
xor
pop
pop
out
int
stc
cmp
jno
mov
stos
adcb
mov
scas
scas
inc
sbb
movb
xor
inc
cwtl
or
movsb
xor
xor
stos
stos
dec
mov
stc
movsb
xchg
mov
int
sarb
inc
testb
inc
pop
loopne
fdivrs
mov
popa
sub
fcmove
neg
sarl
pop
pop
pop
pop
lret
cmp
imul
and
fisttps
xor
popa
pop
pop
inc
adc
sbb
sahf
push
aas
filds
jp
push
lret
sub
push
stc
insb
sahf
ds
nop
push
lahf
fnstsw
in
pop
push
scas
add
add
filds
mov
or
mov
inc
inc
in
adc
lock
pusha
div
pop
pop
and
test
jne
dec
shlb
inc
stc
add
adc
mov
test
mov
repz
add
test
push
xchg
cmp
rep
icebp
int3
sahf
in
sub
rclb
dec
dec
std
in
mov
ljmp
fdivp
lods
cmpsl
jbe
leave
and
mov
js
insb
inc
push
cmp
insb
sbb
inc
pop
je
pop
adc
cmpsb
jns
sbb
or
lahf
rol
dec
pop
ljmp
sub
add
dec
cmpsb
clc
push
pop
xchg
mov
sub
in
outsl
std
jns
push
push
mov
or
sbb
xchg
jno
cmp
cltd
fistps
ja
pop
fimuls
lcall
xchg
imul
mov
sub
xor
stos
stos
test
int3
int3
jl
push
inc
inc
xchg
dec
mov
add
inc
jne
mov
mov
mov
gs
sub
stos
sub
add
int
imul
loopne
clc
fldt
inc
in
jne
jne
fisttpl
fcmovnbe
pop
adc
and
repz
cmp
jne
test
or
cmc
shl
jecxz
cmc
mov
push
in
out
jp
or
jg
xchg
nop
lock
mov
nop
inc
rcll
mov
xor
js
push
push
pop
pop
pop
pop
mov
aad
mov
or
pop
pop
inc
div
notb
pop
lock
push
std
xchg
push
aas
inc
jmp
add
rol
mov
mov
in
cmc
bswap
lea
adc
jb
sti
add
or
and
fcmovnb
inc
pusha
rol
addr16
pop
and
mov
and
adc
inc
inc
scas
pop
or
fistps
adc
addl
cmpsb
and
sub
minps
subl
push
pop
xor
lock
std
lea
sbb
es
lahf
inc
sbb
roll
mov
popa
cmp
mov
jno
sbb
loopne
jmp
xor
rol
lods
les
std
outsl
scas
sbb
cmp
adc
arpl
aam
cmpsl
cmpsl
mov
mov
pop
jo
fdivrp
imulb
cmc
adc
fcomps
adc
fldl
je
push
in
inc
cmp
xchg
xchg
or
push
jl
sbb
jae
mov
add
add
cli
imull
cmp
ror
orb
lods
cltd
xor
or
sub
jle
cmpl
pop
bnd
jle
clc
insl
insl
mov
adc
push
push
push
dec
or
pop
ljmp
pop
shlb
leave
adc
mov
mov
addb
inc
sbb
sbb
xlat
mov
pextrw
lcall
test
cmpsl
pop
gs
idivl
pop
aam
mov
imul
repnz
nop
idivl
cli
ret
cmp
repz
dec
iret
iret
pop
pop
pop
pop
inc
lods
rcll
cltd
out
pop
stos
ret
sbb
sbb
push
jp
cmc
mov
bound
dec
and
mul
mov
or
pop
mov
addr16
dec
dec
jb
mov
in
jo
lret
jne
push
jbe
in
add
sti
sti
enter
xor
dec
test
sbb
mov
cmpb
notb
mov
cs
sbb
imul
sahf
push
xor
vminss
sub
mov
test
xlat
mov
cli
lcall
cmp
add
xchg
iret
lea
daa
sub
add
jmp
je
xchg
lret
push
xchg
and
sub
sti
adc
xor
mov
jg
jge
lods
lods
mov
jp
xchg
jns
jbe
mov
insl
insl
out
pop
leave
add
xchg
lret
add
cmpsl
js
mov
stos
xchg
jne
lds
xor
sub
std
jae
cmpsl
or
lds
or
in
int3
jnp
and
mov
scas
adc
sub
inc
push
leave
lret
shlb
ror
lret
imul
aaa
lea
fwait
or
outsl
int
xchg
push
push
push
jecxz
lcall
loop
xor
mov
loopne
orl
or
jecxz
xchg
cltd
jmp
push
scas
scas
insl
insl
es
push
push
dec
test
xchg
adc
test
mov
aaa
dec
lcall
sub
inc
inc
push
xchg
addb
notl
or
insb
subb
mov
ja
stos
hlt
fistpll
mov
jp
pop
mov
outsb
outsb
jae
fcmovu
and
sub
mov
pop
push
xchg
and
mov
ljmp
dec
dec
dec
xchg
leave
sub
je
sbb
pop
insb
and
and
pop
in
add
xor
or
sahf
add
jge
insb
fstl
cmp
jge
cs
cld
negl
stos
or
loopne
out
lods
push
sahf
ljmp
insb
cwtl
add
adc
pop
pop
cmpsl
addr16
pop
jne
and
lret
dec
lock
or
cmp
lds
dec
inc
rol
adc
ret
rorb
out
mov
jl
fimull
mov
dec
adc
lret
or
pop
inc
dec
inc
addr16
sahf
rorb
jb
jnp
adc
lds
lods
jne,pt
stc
and
pop
pop
andl
int
jge
push
subb
outsb
outsb
pop
lret
movsl
inc
test
pop
pop
xor
jl
add
mov
mov
cmp
in
loop
sub
jle
hlt
addl
sub
lods
icebp
and
cld
cltd
mov
hlt
sbb
push
push
aaa
push
scas
mov
sub
or
mov
call
lea
call
loop
pop
or
push
cmp
xor
hlt
imul
call
or
add
add
or
xchg
jl
adc
push
adc
pusha
int
sbb
out
xlat
jne
insl
mov
inc
rol
ret
jo
hlt
int3
js
sub
jl
out
push
fcmovu
fiaddl
xchg
into
pop
and
jmp
mov
mov
imul
adc
dec
push
jb
cmpsl
sbb
stc
je
add
arpl
daa
sti
jp
pop
call
pop
dec
adc
mov
pop
pop
sub
sbb
inc
or
aad
jmp
jmp
cmp
adc
leave
leave
stos
pushf
in
add
mov
ds
adc
jg
outsl
pushf
gs
add
cmp
xchg
test
push
aaa
out
rol
sti
sbb
jg
sub
sahf
insl
rcl
lods
sbb
in
push
push
ds
ds
test
cmp
mov
or
icebp
icebp
aaa
fiaddl
pop
jb
pop
sub
addr16
adc
or
push
sbb
sbb
xchg
les
orl
xchg
mov
aaa
push
push
or
or
jb
stc
adc
inc
mov
insl
dec
xchg
dec
fstpl
cmp
jl
or
sahf
scas
outsl
outsl
pop
in
outsb
ja
insb
xor
ljmp
adcl
movsl
rol
enter
gs
iret
adc
push
push
mov
adc
dec
dec
outsb
mov
inc
inc
btr
imul
mull
roll
jns
jns
xchg
mov
inc
mov
stc
sbb
loopne
test
inc
pushf
xchg
push
xor
std
stos
inc
inc
inc
jne
push
fdivrp
clc
cwtl
repz
stos
jnp
adc
imul
sub
sti
xor
push
test
adc
push
add
push
fistl
ret
sbb
xor
sahf
add
push
push
negb
and
jp
mov
movsb
push
or
xlat
xlat
sub
xchg
popl
inc
enter
mov
inc
lods
xchg
mov
dec
dec
dec
push
lret
out
dec
cmp
pop
insb
xor
lcall
nop
mov
sub
add
lds
aas
fadd
sbb
push
jae
mov
sarl
les
test
sti
xlat
mov
sahf
mov
jp
xchg
mov
push
or
shlb
sahf
mov
mov
shll
out
mov
rcr
xchg
xchg
pop
insb
mov
test
test
mov
mov
dec
mov
insb
sbb
rorl
cmpsb
sbb
jb
lock
popa
jo
subb
outsb
rcrb
adc
mov
cmp
sbb
mov
jecxz
leave
mov
mov
sub
cmpsl
adc
adc
lret
pushaw
sub
test
popa
rolb
rcl
adc
push
mov
scas
cld
loopne
sbb
repz
dec
cwtl
int
ljmp
imul
mov
cmp
ret
xchg
add
add
dec
pushf
aam
rolb
js
inc
out
inc
sbb
js
sti
pop
mov
pop
out
out
nop
dec
and
and
pushf
test
imul
jmp
cwtl
sub
mov
mov
out
loop
loop
dec
loop
repnz
mov
mov
sbb
pushf
test
test
gs
sub
fstl
lret
sarb
xchg
lods
adc
repnz
out
mov
clc
test
mov
repnz
xchg
fcmovne
add
cmp
sub
cltd
xor
add
add
mov
dec
or
lcall
fcmovb
sbb
aad
jne
inc
or
pop
pop
lret
xchg
jns
jp
inc
xchg
pop
pop
addr16
sbb
les
add
add
push
cmp
cmp
and
or
inc
cmp
inc
xchg
xchg
fildll
mov
xchg
ret
push
cmp
sub
pop
jmp
push
mov
and
sub
fcomp
mov
test
jle
sbb
clc
xor
cmpsl
cmpsl
dec
idivb
or
cmp
mov
ja
push
aaa
and
bound
dec
lea
aad
jp
or
xor
pop
xor
ret
ja
popl
and
rcr
into
addb
jae
sbb
xchg
test
test
mov
inc
inc
icebp
seto
or
sub
or
pushf
dec
sti
int3
int3
dec
fstpl
adc
fbstp
lea
ffree
call
ret
and
daa
adc
inc
adc
sahf
jne
outsl
cmc
dec
fwait
insl
sahf
leave
scas
adc
notb
mov
lds
adc
mov
cmc
inc
stc
add
cli
cli
lock
sub
sbb
bound
jb
mov
loopne
bnd
scas
in
fwait
fwait
fwait
mov
sub
rcll
nop
jp
jne
pushf
xchg
push
bound
enter
inc
cmpsl
pop
pop
inc
insl
fwait
dec
xchg
xchg
adc
sbb
push
rcr
mov
inc
fs
mov
push
orl
add
push
ljmp
adc
test
jl
pushf
inc
cmc
cmc
subb
rcr
lret
mov
mov
fcompl
les
adc
add
arpl
imul
stos
fistpll
cmp
ret
rclb
leave
xor
inc
or
push
sti
pop
je
dec
rorl
cmp
add
adc
clc
and
cmpsb
dec
js
clc
push
inc
sar
cmc
out
insl
and
mull
sbb
inc
inc
inc
xor
ds
cmp
lahf
mov
mov
clc
jne
imul
sub
cmp
iret
jne
hlt
fsubl
mov
cmp
or
pop
mov
or
int3
std
sarl
adc
pop
arpl
rcl
sbbb
pusha
shr
jle
lds
sar
dec
inc
inc
sbb
jae
sarb
out
hlt
inc
cmp
cmp
xchg
pop
je
inc
inc
idivl
xchg
or
imul
outsl
fs
or
push
push
mov
mov
movsb
or
popl
adc
je
push
ficompl
les
jge
sub
ficomps
outsb
add
mov
insl
repz
xchg
daa
adc
sbb
out
add
mov
lds
cli
xor
test
fimuls
scas
inc
movsl
insl
divl
push
add
add
add
cmc
adc
mov
ja
mov
dec
mov
imul
and
sbb
in
jae
fs
gs
shlb
dec
jg
pop
pop
gs
pop
outsl
es
push
mov
hlt
js
mov
addl
dec
push
pop
out
insb
insb
shlb
sub
jp
jbe
popa
push
mov
jo
fwait
in
pop
pop
xor
adc
pushf
cwtl
xchg
xchg
out
mov
icebp
hlt
sbb
sbbb
pop
xchg
mov
mov
repz
stos
adc
sbb
pusha
sub
iret
pushf
lret
lret
and
scas
stos
xchg
pop
cli
xchg
cmp
pop
adc
xor
xchg
xchg
imul
js
mov
jg
xchg
adc
xchg
enter
into
xor
leave
push
push
push
je
push
mov
js
push
mov
lock
imul
pop
pop
pop
add
pusha
add
xlat
lock
jne
adcl
lret
call
mov
ja,pn
cmp
movsb
and
or
xchg
clc
mov
neg
xor
test
pop
fs
add
xchg
dec
mov
sub
es
dec
dec
add
push
and
mov
add
pop
in
or
hlt
or
mov
ljmp
arpl
arpl
out
mov
dec
mov
mov
insl
insl
mov
lret
push
pop
pop
fldl
sub
dec
dec
popa
mov
ficoml
xchg
cmp
xor
out
xor
mov
mov
lods
add
inc
adc
cmp
pop
dec
rcrl
jle
jne
sbb
aam
rol
jbe
add
mov
sbb
xorl
and
xlat
stos
stos
sbb
repnz
cmc
xor
testl
pushf
insl
insl
push
or
xchg
mov
and
orl
sub
push
push
shll
aam
bound
data16
adc
daa
add
xchg
inc
inc
repnz
xchg
ja
xchg
jle
fwait
sbb
int
mov
sahf
inc
adc
mov
pop
cmc
test
dec
dec
jge
sbb
clc
clc
cmp
fsubl
or
arpl
pusha
mov
or
in
mov
rcll
addl
mov
enter
mov
outsl
adc
pop
inc
pushf
mov
cmp
adc
and
jg
jg
mov
icebp
and
or
test
sbb
jl
mov
out
out
imul
out
pop
out
fnsave
mov
lahf
clc
mov
or
jmp
lahf
pop
pop
pop
mov
or
pop
mov
xor
jmp
mov
push
lcall
test
mov
push
mov
mov
frstor
imul
pop
lret
mov
icebp
inc
mov
adc
cmc
outsl
push
in
addb
jo
ficompl
mov
lock
lods
and
aad
into
jb
xchg
xchg
adc
rol
call
subb
push
xor
inc
leave
ja
adc
push
jp
lea
in
ds
inc
push
push
push
es
in
sub
sbb
push
cmpsb
sbb
clc
mov
and
sbb
call
loopne
push
inc
lahf
pusha
roll
in
in
lret
test
hlt
jne
cmpl
jle
mov
ljmp
pop
jg
les
xchg
outsl
stos
test
push
inc
inc
loopne
out
cmpsb
dec
mov
mov
rcr
sti
cmc
into
mov
cmp
rorl
test
xchg
jg
mov
dec
sahf
enter
sbb
or
out
lds
rcl
shl
punpckhdq
jl
mov
xchg
xor
sbb
adc
jo
jecxz
scas
repnz
mov
inc
pop
push
xchg
adc
scas
fcomps
or
inc
push
dec
dec
dec
push
scas
sbb
cmp
mov
sub
lret
inc
push
cmpsb
rcl
mov
bndldx
xchg
imul
jb
adc
pop
testb
call
jp
pop
imul
jbe
jp
add
fbstp
and
mov
add
push
fs
mov
scas
dec
sub
xor
adc
sub
xchg
mov
insl
mov
mov
xchg
inc
sub
dec
sbb
sub
jb
fwait
sub
aad
pop
sub
out
mov
adcb
add
jne
mov
adc
les
aas
jle
rcll
adc
sub
jle
dec
dec
and
loopne
sbb
lods
cmp
xchg
xchg
adc
jno
loopne
imul
inc
loopne
js
lds
or
ja
jl
cmp
out
ret
in
loop
loop
icebp
sub
inc
int
je
test
enter
mov
jns
mov
jg
cmc
cs
xlat
iret
xchg
sbb
push
adc
pushf
inc
sub
sub
push
nop
xchg
inc
out
jnp
xor
mov
sub
push
insl
fistps
js
loopne
push
mov
pop
pop
shll
into
add
fistpl
jl
notl
inc
and
inc
rcl
push
call
xor
pop
mov
xchg
xor
jp
mov
popa
clc
clc
clc
in
in
lret
lret
and
and
sbb
jg
lods
dec
and
inc
test
daa
jnp
movb
mov
xchg
add
scas
repz
or
cmp
sbbb
add
xchg
cmp
cli
or
dec
xchg
outsl
outsl
mov
xchg
loop
lds
push
mov
sub
dec
mov
sarb
lcall
adc
bound
push
divb
mov
cmp
dec
jne
sub
cmp
fdiv
xor
xor
repz
insb
dec
dec
pop
lods
sbb
xchg
cltd
test
sub
xor
mov
sbb
roll
mov
xchg
inc
mov
imul
mov
lods
xor
push
sarl
xlat
sub
and
lcall
imul
pop
xchg
sbb
lahf
mov
rclb
sub
adc
xchg
mov
pop
pop
inc
push
test
mov
bound
inc
jecxz
xchg
inc
inc
aam
rolb
xchg
pop
scas
scas
scas
mov
xchg
out
sub
lret
pop
movsb
dec
dec
cmp
popa
dec
mov
jne
dec
mov
push
stos
mov
fidivs
mov
push
xadd
cltd
mov
mov
jp
jl
mov
xchg
mov
and
adcb
insl
gs
loopne
add
fsubr
aas
aas
mov
outsb
dec
and
lock
pop
mov
push
mov
push
jl
cmp
push
lret
addr16
adc
test
clc
cmp
gs
bound
cmpsb
cmpsb
mov
outsl
mov
clc
rcl
adc
daa
push
push
jae
adc
in
in
call
lahf
rcll
xchg
sar
jns
aaa
jb
xchg
xchg
out
push
aam
cmp
out
movsb
sub
cmp
aas
call
js
arpl
adc
pop
pop
outsb
push
push
movb
adc
xchg
or
imul
sti
mov
addl
lock
dec
scas
aaa
adc
fmull
cmp
dec
addl
cmp
cmpsl
lahf
and
push
pop
leave
xor
xor
rcrl
fs
push
jo
or
or
sbb
sub
mov
roll
mov
mov
sbb
out
push
ja
pop
mov
fiaddl
in
cmp
test
push
daa
sbb
pop
pop
sub
rcrb
iret
stos
and
cmc
and
dec
out
or
mov
cmpsb
cmpsb
fidivrs
adc
jnp
and
mov
add
enter
pop
rcrl
stos
jge
mov
adc
loopne
push
xchg
add
push
ds
lds
cmpsb
sbb
add
scas
scas
jne
icebp
rcl
lret
es
xlat
les
or
pop
arpl
sbb
popa
mov
inc
iretw
insb
xchg
fcmovb
adc
cmp
push
movsb
sub
sahf
int
and
vpslld
cmp
jg
iret
xchg
push
ljmp
mov
inc
xor
xchg
sbb
lock
sahf
popa
jle
mov
aad
xor
popa
pop
repnz
js
push
addb
lea
leave
loop
xor
loop
ret
daa
daa
ljmp
pop
push
push
rolb
jmp
shrb
dec
adc
jge
nop
or
shr
jbe
cmp
push
xchg
fcomps
jae
push
aam
test
pop
leave
addr16
sub
jecxz
enter
pop
test
iret
iret
jbe
and
aas
push
cmp
leave
rorl
ret
xchg
stos
dec
stos
push
cltd
ljmp
aam
aad
jbe
sub
inc
xor
push
je
or
inc
sub
rol
xchg
imul
int
aam
cmp
insb
insb
dec
stos
in
in
pop
std
push
and
push
gs
int3
imul
js
add
jle
out
mov
lds
inc
inc
push
jne
lret
sbb
lods
movsl
pop
cmpsl
jecxz
lds
sbb
jp
std
jne
arpl
popa
in
cmpsl
cmp
pop
dec
outsb
cmp
jecxz
sti
scas
adc
xor
fs
shrl
dec
push
inc
push
cmp
or
sbb
xchg
out
popa
ret
aam
repnz
lcall
push
push
ljmp
dec
lds
aaa
mov
xor
mov
fwait
mov
xor
mov
or
xor
xchg
data16
adc
adc
mov
or
jl
adc
in
fmull
mov
xor
cmc
inc
pmaddwd
pop
mov
in
lea
rcl
in
pop
pop
push
shll
jnp
dec
dec
fwait
enter
lds
shl
mov
cmp
xor
movsl
inc
xor
sub
cwtl
add
aas
dec
lcall
mov
and
mov
cmp
sbb
stos
shll
sub
push
loopne
add
mov
sahf
cmp
pop
mov
sbb
sub
dec
insl
sbb
add
push
adc
or
rolb
jl
jl
loop
lods
cli
test
push
test
inc
mov
sub
out
out
ror
sub
inc
lret
daa
scas
lahf
test
mov
dec
stos
stos
or
pop
inc
lods
lahf
lahf
cmp
ja
addl
xlat
imul
ret
and
rcrl
es
or
shlb
jne
movsl
lret
mov
push
data16
out
je
adc
jae
movsb
dec
push
push
or
xchg
ljmp
mov
push
mov
xor
cmp
push
and
sub
imul
leave
scas
sbb
jne
bnd
repnz
and
repz
pop
jns
xchg
adcl
addr16
or
jp
shlb
pushf
mov
adc
int
rcr
decb
fists
pop
push
nop
pop
jb
mov
adc
or
cmpsb
inc
xor
add
mov
jmp
add
ja
std
call
les
lret
insb
gs
mov
lret
jp
rol
xchg
inc
arpl
ds
out
cmp
mov
insb
adc
and
test
mov
add
push
add
add
jge
sti
sti
lds
adc
xor
imul
pop
lahf
mov
xchg
jp
pop
inc
inc
push
adc
adc
mov
push
or
mov
add
sarl
insb
ffreep
xchg
es
inc
mov
ja
dec
lahf
push
ja
push
test
xor
dec
add
cmc
lahf
push
push
or
push
push
mov
cmp
hlt
jmp
pop
pop
outsl
pop
imul
sti
inc
in
jge
cmpsb
call
jno
sbb
push
and
iret
lcall
mov
sbb
cmpsb
sub
fiadds
pushf
pushf
ret
sub
mov
mov
out
arpl
repz
dec
pop
stc
scas
jo
divl
mov
pop
pop
cmp
mov
sbb
shll
xchg
or
jns
jmp
mov
dec
in
jmp
ljmp
lods
mov
lock
push
push
fstl
dec
loop
sbb
lret
dec
rorb
mov
mov
push
mov
xchg
inc
out
jae
stc
push
adc
es
pusha
or
xchg
xchg
clc
in
mov
dec
jb
cs
fimuls
aas
jmp
out
jp
sbb
pop
jno
and
test
push
lds
adc
pusha
daa
movsl
cmp
mov
pop
leave
movsb
add
es
mov
dec
push
ds
xor
cmp
andnps
sbb
mov
push
jo
adc
mov
jecxz
add
movsb
adc
call
sbb
in
cmp
aaa
xor
enter
sub
cmc
mov
jo
movsb
lea
test
xchg
popa
dec
dec
push
push
pushf
in
mov
lods
dec
dec
push
ljmp
mov
out
movsb
mov
jl
sub
test
daa
iret
mov
div
xlat
and
repnz
pop
nop
sbb
inc
rolb
lret
ret
dec
lock
jae
mov
addl
rcr
into
mov
add
lds
out
cltd
test
push
imul
mov
sarb
aas
outsl
inc
fadds
push
fcomps
bound
add
je
idivb
data16
mov
addl
and
fs
shlb
mov
jle
dec
cmc
push
xor
jne
add
lock
pop
xor
lahf
mov
xor
fcmovu
adc
outsl
cld
dec
popa
adc
int
dec
dec
dec
test
rcrb
push
jle
icebp
sub
jo
movsl
mov
pop
xor
les
xor
jae
dec
sub
jmp
sbb
cltd
es
add
mov
fcoms
sbb
bound
pop
cmp
icebp
arpl
cmp
stos
inc
lea
jmp
or
repnz
rorb
and
push
movsl
movsl
and
fcompl
lods
cmp
lods
stc
sbb
pop
ljmp
test
or
mov
mov
pop
jle
cmp
xlat
out
out
addb
mov
pop
mov
inc
dec
dec
cmp
imul
push
and
test
ljmp
dec
std
std
mov
inc
inc
push
pop
test
fistpl
jg
inc
cltd
pop
fmull
int
andb
push
pop
mov
inc
mov
cmp
roll
add
dec
sbb
push
sti
pop
dec
mov
test
jne
sub
lcall
or
shlb
pop
sbb
pushf
push
cs
sahf
cli
xchg
dec
xchg
push
push
jecxz
pop
push
mov
pop
xchg
movsl
cmp
xchg
push
ds
adc
push
adc
mov
movb
sbb
out
inc
inc
sahf
sbbb
push
dec
cmp
inc
pop
pop
mov
mov
bound
insl
insl
insl
push
jecxz
sub
jecxz
xor
pop
mov
mov
mov
rcll
enter
mov
add
in
pop
sub
xchg
pop
scas
xor
xlat
mov
mov
mov
cmpl
add
fsubrp
xchg
mov
sahf
sahf
imul
test
xor
cmpsl
cmpsl
pop
sub
pop
jp
ja
int3
and
hlt
mov
movsl
fwait
movsb
inc
jmp
sub
push
jo
insl
ljmp
ds
push
inc
inc
xchg
adc
mov
jb
cmp
jg
jg
scas
lods
mov
mov
add
dec
inc
xchg
xchg
xchg
sbb
or
sub
adc
out
mov
shll
cs
movb
fidivrl
out
out
mov
and
insb
dec
call
ja
ja
lods
sbb
movl
movsb
xor
gs
cmpsb
xchg
xchg
sub
sub
fildl
in
add
sbb
rcrl
ret
adc
fs
mov
rorl
je
xchg
bound
xor
push
sub
cmpsl
ret
mov
addr16
jge
xchg
xchg
push
sub
sbb
push
push
mov
dec
pop
mov
out
insl
and
fidivs
sub
or
cmp
push
sbb
or
dec
cmp
xchg
mov
mov
andb
testl
mov
or
daa
jno
cli
sbb
int3
pop
sbb
mov
imul
jns
test
add
divl
repnz
push
aas
daa
cwtl
or
or
sarl
out
movsl
movsl
movsl
inc
mov
jnp
sbb
or
pop
pop
xchg
jge
xchg
in
int3
bound
imul
gs
push
pop
sti
imul
blcic
loopne
push
popa
insb
insb
adc
xor
movsl
div
jmp
jae
mov
outsb
ljmp
icebp
mov
aas
sahf
sahf
mov
mov
lds
insb
in
shlb
adc
aam
mov
xor
mov
sarb
push
nop
cmp
sub
rclb
cli
cli
and
sbb
arpl
data16
xor
ja
movsb
out
xchg
pop
pop
dec
jne
xor
cs
pusha
pusha
hlt
inc
cmp
mov
xchg
dec
xchg
add
icebp
add
lret
pop
xchg
mov
push
cmp
leave
mov
in
in
and
or
divb
xor
xor
popa
loop
lods
stos
out
mov
mov
push
lahf
mov
movsl
nop
mov
cmp
stos
push
xchg
mov
cmc
cltd
sbb
push
bnd
ret
ret
jne
insl
enter
outsb
fdivl
adc
pushf
ret
jnp
bound
sbb
adc
cmp
cmp
dec
sub
pop
cmp
push
add
sahf
in
ret
addl
dec
jecxz
xchg
lret
mov
fcompl
and
mov
fwait
push
js
shll
xor
dec
xlat
pop
movsl
int3
pop
pop
sti
inc
inc
inc
push
push
je
fnstsw
insl
insb
icebp
test
dec
pop
add
loopne
std
in
fwait
mov
outsl
aas
fdivrl
cmp
aas
inc
nop
jge
movsl
movsl
cmc
rclb
inc
cmp
xchg
push
sbbb
jl
jecxz
faddl
push
cmp
jb
jmp
jle
push
int3
adc
repz
mov
sub
je
repnz
push
movsb
movsb
in
insl
rcrl
fsubs
dec
dec
je
sti
mov
scas
jae
in
cmc
sub
dec
fcoml
ror
iret
cmp
jge
out
mov
ljmp
out
js
imul
scas
jecxz
imul
dec
dec
pusha
mov
jl
jb
cwtl
xchg
xchg
xchg
out
or
push
push
sbb
xchg
sub
imul
inc
push
daa
daa
loop
negl
or
dec
scas
dec
leave
repz
push
ljmp
imul
push
dec
add
int3
or
push
addr16
or
clc
mov
sub
xchg
pop
int3
add
fmul
es
mov
mov
pop
or
insl
sbb
icebp
mov
push
xchg
jl
mov
mov
stc
loop
nop
mov
ja
rorl
and
rcll
cmp
sub
ja
xchg
cmp
add
sub
into
lahf
rorl
adc
adc
insl
xchg
xor
or
cli
jle
lds
inc
nop
nop
mul
sbb
ja
cmp
xchg
enter
mov
lock
pop
pop
mov
xchg
push
in
cmc
cmc
negb
push
mov
aad
xor
dec
mov
adc
push
xor
jmp
lret
push
push
outsb
and
out
mov
or
and
jne
xor
jnp
or
int3
cli
xor
dec
dec
pushf
pushf
leave
shlb
inc
dec
popa
sbb
sbb
push
pop
mov
mov
inc
or
dec
fcoml
or
jmp
jae
jnp
int
mov
fcomp
jo
inc
jb
in
cli
xchg
jbe
sbb
stc
jbe
pop
or
rorb
dec
inc
add
push
push
addb
mov
pop
and
xor
pop
sub
mov
fcmovnbe
fmulp
dec
dec
dec
cmc
add
ret
aad
inc
push
push
daa
clc
sahf
test
aas
and
or
scas
mov
jge
stc
aaa
out
inc
aas
test
bound
jno
dec
out
in
notb
aad
jns
push
insl
filds
loop
in
repnz
stos
sub
aad
xchg
xchg
inc
mov
dec
test
jmp
ret
xchg
xchg
icebp
mov
mov
rolb
fdivs
jl
push
add
pop
jns
lret
lret
lret
lret
outsl
out
rolb
stc
aas
cmp
push
push
jle
js
pop
xor
xchg
notb
shrb
in
pop
pop
ror
mov
pop
lds
push
add
arpl
outsl
mov
xchg
mov
pop
push
sti
push
add
daa
filds
cmp
jne
mov
cmp
pop
stos
mov
arpl
les
inc
xor
sub
push
and
mov
push
push
mov
ret
jb
inc
push
mov
dec
sub
jnp
les
int3
jne
mov
sub
std
loop
shl
es
jle
mov
mov
hlt
mov
xor
xor
fstpt
xchg
ret
dec
mov
and
adc
inc
mov
push
not
add
stc
cmp
mov
out
xor
sub
imul
pop
cmp
push
xchg
sub
adc
std
call
jnp
push
fimuls
setae
and
push
js
iret
rcl
xchg
adc
hlt
aad
rcll
stos
and
push
pop
pop
pop
xchg
xchg
mov
leave
mov
cmc
int
cmpsl
mov
cwtl
mov
cmp
inc
push
sub
les
mov
adc
stc
imul
mov
lret
sub
pop
pop
sbb
xor
ret
cmp
ljmp
clc
sbb
cmpsb
jnp
jae
and
mov
pop
sub
push
jno
jle
cmpsl
pop
enter
push
push
cld
lods
lods
xchg
xchg
hlt
xchg
fs
add
out
inc
std
push
push
in
in
imul
cli
mov
fwait
movsl
movsl
int3
int3
cltd
jbe
pop
inc
fldt
jo
mov
mov
sahf
sahf
les
mov
rcll
add
lea
inc
popa
ret
pushf
cmovns
adc
ja
jne
es
mov
mov
mov
xchg
adcl
jge
dec
pop
pop
mov
xor
mov
repnz
test
js
jnp
jnp
pop
or
cmp
rcl
aam
inc
xchg
scas
adc
cmp
test
xor
dec
cmp
inc
shlb
xor
push
push
cmp
pop
xchg
xchg
xchg
test
out
mov
or
pop
mov
es
mov
xchg
mov
mov
int
mov
enter
aas
aas
mov
xchg
xchg
cs
mov
std
push
mov
fcompl
mov
outsl
mov
dec
and
sbb
sbbb
inc
jo
cmp
mov
out
mov
inc
inc
out
jge
mov
in
xor
add
dec
leave
sbb
sbb
cmp
sbb
fstpt
xchg
or
aas
repz
mov
jne
xchg
xchg
jnp
cmp
rclb
fsubs
cltd
mov
dec
imul
aad
pop
pop
add
std
fdiv
test
dec
stc
stc
cmpb
ret
sub
jne
cmp
inc
insl
or
mov
add
out
adc
sub
jmp
jne
scas
aam
cmp
dec
imul
outsl
loopne
jecxz
push
fstp
aas
aas
fildll
cmp
out
inc
jb
adcb
lock
shrb
in
inc
inc
test
mov
mov
sbb
mov
pop
push
mov
or
dec
aas
jae
fsubrl
arpl
setnp
lahf
push
adc
fidivrl
hlt
fsubs
popa
lcall
push
dec
or
shl
sub
adc
push
lods
movsb
add
mov
pop
mov
sub
in
movb
mov
xchg
les
je
rol
cmc
lret
lcall
pop
lock
cli
push
movsl
movsl
sub
and
pop
cmp
push
cmpl
jg
mov
mov
icebp
mov
add
push
push
arpl
scas
scas
xor
adc
push
push
in
fstp
insl
insl
and
jg
fildll
out
or
xor
movsl
add
icebp
pop
mov
popa
popa
popa
sub
jnp
dec
dec
or
ja
ja
mov
test
cltd
xchg
pop
les
xor
jecxz
xacquire
cmp
nop
roll
jno
into
in
push
aas
in
xchg
sub
dec
mov
mov
mov
enter
dec
or
idivl
outsb
mov
dec
mov
add
add
jne
ds
add
mov
mov
sub
or
shlb
xor
pop
lods
sbbl
daa
mov
mov
pop
pop
pop
enter
ret
jae
xlat
xlat
js
enter
lods
pop
inc
xor
mov
lods
jmp
sbbb
inc
pop
push
add
jns
and
scas
scas
jno
mov
jb
adc
cli
adc
mov
add
js
imul
ret
xchg
repnz
push
sbb
add
in
hlt
repnz
enter
ret
xchg
dec
jbe
enter
je
hlt
adc
fidivrl
into
and
ficoml
push
mov
es
xchg
pop
add
fdivs
stc
leave
lock
out
mov
adc
add
dec
dec
stos
sbb
imul
test
lds
pop
cmpsb
outsl
jg
xchg
sub
xorb
sub
cmpl
push
push
push
push
push
ret
ret
hlt
pop
or
lea
inc
cli
mov
xchg
jne
jecxz
sti
sti
in
pop
stc
xchg
imul
popa
xchg
jo
pop
cmp
ds
cmp
test
mov
daa
daa
inc
jns
jns
inc
inc
fsubl
aas
aas
fidivs
cwtl
jg
imul
bound
stos
inc
xor
sub
adc
pop
pop
push
popa
pop
pop
loop
xchg
loop
jns
xor
or
push
js
icebp
mov
cmp
mov
or
push
lahf
cmp
dec
inc
negb
push
push
sub
es
sub
sbb
pusha
jmp
cmc
xchg
mov
cmpsl
mov
test
out
push
jnp
sub
testb
in
add
mov
xor
add
lods
test
push
in
mov
adc
xchg
pop
movsb
mov
mov
ljmp
std
dec
scas
test
lret
out
stc
sub
call
pop
and
mov
aam
outsb
sbb
ror
andb
stc
push
ds
xchg
or
test
push
sbb
ljmp
gs
jns
or
test
test
sub
push
dec
xchg
and
mov
mov
xor
mov
out
movsb
xchg
stos
out
rol
add
les
add
lea
push
pop
xor
in
or
jl
jle
xchg
mov
xchg
or
aaa
mov
add
add
mov
fidivl
sarb
les
js
and
adc
cmp
cld
cmp
xchg
lcall
sbb
add
lcall
xchg
test
lret
dec
or
je
inc
push
cmp
out
dec
dec
fildll
push
push
shl
jmp
inc
fwait
lcallw
sub
push
ret
inc
inc
mov
mov
jmp
mov
test
mov
pop
adc
into
pop
inc
push
sub
mov
sti
negl
daa
stc
pop
pop
cmpsb
cmp
inc
inc
inc
sbb
je
mov
gs
cli
cli
push
sbb
adc
out
inc
outsb
outsb
jo
cmp
mov
xor
sub
jge
fsubrp
movsl
outsb
stc
mov
mov
pop
sbb
or
imul
lock
dec
inc
bound
enter
sub
cmpsl
or
arpl
cmp
lea
xlat
add
inc
inc
movsb
movsb
icebp
xchg
jp
lcall
jp
or
neg
inc
xchg
xchg
dec
mov
lret
mov
pop
pop
imul
pop
fisubrl
andb
mov
inc
inc
fistl
insb
or
in
aam
inc
out
aad
test
pushf
out
jecxz
lds
insl
loopne
pop
jo
and
xchg
sbb
add
scas
mov
cmp
sbb
sub
out
cmp
cmp
roll
xchg
mov
call
adc
mov
repnz
stos
nop
imul
mov
add
repnz
pop
pushf
icebp
ret
jnp
mov
fidivl
push
test
lret
push
cmc
jl
mov
sbbb
repz
fs
adc
jne
fs
pop
clc
xchg
lds
roll
lea
pop
out
cmp
pop
xlat
push
fstp
pop
inc
sahf
inc
mov
sub
inc
rol
pop
inc
inc
jns
shll
jp
pop
dec
dec
sub
mov
out
inc
leave
div
sbb
sub
jbe
xorl
mov
data16
loop
mov
pop
xor
rcrl
in
push
push
push
shll
cmp
push
mov
movsl
dec
cwtl
in
daa
mov
sar
daa
cwtl
pusha
pusha
add
cmp
addr16
sbb
cmp
popa
cmc
cmc
aas
imul
movsl
xchg
jl
sbb
adc
scas
xchg
into
pop
dec
xchg
xchg
repz
sarb
xor
scas
xchg
jne
sub
movsl
lods
cltd
push
push
sbb
inc
js
movsl
movsl
movsl
adc
fmuls
push
insb
jbe
int3
int3
cmp
cmp
stos
or
add
or
xchg
pop
xchg
push
loop
repnz
gs
pushf
out
jns
out
jb
outsl
push
shll
push
inc
roll
mov
cmp
sub
sub
push
push
mov
add
out
adc
pop
nop
or
push
sub
gs
jns
rclb
inc
dec
ror
movsb
jmp
push
xor
mov
dec
add
jo
jmp
test
outsl
loopne
adc
fcoml
cmpsl
cmpsl
int3
int3
shrb
mov
fstl
mov
sbb
std
jne
jl
inc
lret
add
loopne
je
mov
sbb
ja
ja
push
xchg
jnp
xor
push
ret
ret
ret
cltd
std
rol
int
add
imul
cmpsb
ljmp
push
push
or
daa
div
insl
dec
inc
into
inc
inc
test
cli
cmp
repnz
fs
ret
push
or
scas
stos
stos
push
fidivrs
add
xchg
cld
mov
xor
sbb
gs
stc
std
inc
add
fisttpll
dec
mov
test
jnp
dec
inc
sbb
jns
rcl
shlb
push
loop
pop
iret
cmc
mov
lahf
cmp
stos
pop
push
pop
adc
inc
cmp
xlat
xlat
push
fdivl
fwait
jg
push
xor
test
sbb
mov
shl
cmp
adc
push
adc
test
lods
xlat
pop
sub
pop
push
popa
out
cmpsl
cmp
jne
xor
bnd
xchg
push
popa
add
push
mov
xchg
pop
imul
sub
sbb
fs
push
push
adc
cmp
enter
lods
add
ljmp
mov
test
outsb
jnp
xor
jb
aad
lret
test
xchg
adc
add
cltd
cmp
cmp
mov
pop
mov
or
je
lds
pop
mov
addr16
ja
adc
add
scas
and
cmc
mov
push
cmp
push
or
xor
inc
in
ja
in
repnz
insl
sub
or
sub
jecxz
paddsw
pusha
pusha
lret
lret
lret
dec
push
notl
pop
jp
outsw
inc
js
sbb
add
sub
dec
es
div
cmpsl
call
and
fcomp
fcoms
lahf
sbb
inc
mov
pusha
pusha
sahf
cmp
xchg
dec
pushf
mov
test
inc
jmp
sbb
fcmovnu
dec
gs
rcl
rcll
repz
test
jle
mov
inc
pop
pop
cmc
xchg
rcl
xchg
rolb
dec
sub
cltd
aad
outsl
rorl
xchg
gs
and
nop
nop
pop
lret
push
rol
jne
inc
fwait
in
test
outsb
push
cmp
mov
mov
and
bound
jo
jo
push
jg
dec
mov
and
cwtl
cwtl
cwtl
out
add
push
in
inc
inc
stos
popa
cmpsb
out
fs
outsb
rorl
inc
stos
add
cmp
fcmove
jns
iret
les
lret
iret
mov
mov
data16
or
ret
jb
rcll
xor
cltd
out
out
imul
pop
or
pop
cmp
pop
ja
sub
iret
xchg
outsb
lcall
daa
or
mov
leave
sub
push
icebp
and
sub
push
jl
sbb
mov
xor
pushw
mov
jo
or
push
fdivp
cltd
aaa
xor
dec
repnz
and
jno
mov
pop
lahf
insb
aad
sahf
sahf
je
cmp
lea
sub
iret
mov
sbb
adc
mov
aad
fnstsw
sahf
into
test
xchg
jl
inc
xchg
shr
mulb
jmp
mov
mov
and
mov
gs
insl
push
add
ds
push
push
repnz
adc
iret
push
jg
and
xor
jno,pn
inc
mov
mov
push
mov
mov
sahf
imul
pop
adc
leave
sub
pop
mov
mov
js
lds
pop
inc
pop
adc
call
xchg
adc
inc
pop
pop
pop
inc
sbb
int3
jl
xchg
push
sub
daa
fs
mov
pusha
mov
rcl
inc
inc
sub
and
jmp
push
inc
jne
je
cmp
xchg
xchg
push
mov
sbb
mov
pop
pop
lret
stc
cwtl
lret
mov
pop
inc
inc
cmpsb
mov
mov
pushf
jmp
popl
ja
jo
add
pop
dec
dec
ljmp
lea
in
enter
rclb
pop
xor
sub
aam
fidivrl
movb
jo
mov
inc
inc
sub
jmp
clc
adc
and
insb
int
xor
dec
in
fs
imul
add
sbb
ljmp
cwtl
dec
jl
bound
xlat
dec
adc
inc
scas
cmp
ljmp
adc
insl
gs
jne
xchg
mov
scas
adc
push
sbb
push
xor
out
mov
lcall
xor
lods
repz
push
and
mov
jg
mov
lods
mov
outsl
dec
inc
xor
mov
xor
mov
mov
mov
xor
inc
rcll
in
insb
xchg
pcmpeqw
rcll
pop
jae
inc
lds
sbb
add
test
or
fbstp
cmp
arpl
stc
popa
lods
clc
xchg
pop
pop
stc
push
mov
xchg
add
push
jne
adc
mov
add
mov
cld
repnz
inc
xor
mov
outsb
outsb
jne
cmpsl
dec
mov
mov
insl
insl
dec
rorb
xchg
xor
ja
dec
mov
mov
fimull
lds
loopne
aad
sub
push
stc
push
fwait
jge
fcoml
mov
mov
and
inc
leave
push
pop
mov
mov
and
mov
cmpsl
roll
push
xchg
push
mov
insb
add
cmp
xchg
cmp
aam
sbb
pop
aam
clc
sbbb
in
push
or
and
repnz
fldl
scas
jns
jmp
cmp
push
jle
add
ret
push
fwait
push
mov
and
jmp
jne
rol
inc
mov
sbb
fs
fcomps
stc
stc
test
push
dec
dec
or
adc
test
mov
lock
inc
xchg
int3
sti
push
push
xor
xor
jno
xchg
jne
pop
mov
xchg
cltd
lods
in
add
cli
mov
push
push
mov
int
xor
xchg
push
loop
outsb
std
daa
push
or
or
or
in
cs
add
aam
xchg
test
add
lods
mov
adc
pushf
push
mov
xor
xchg
jg
outsl
cmc
loopne
mov
ret
jg
fidivl
xor
inc
leave
mov
jge
push
lret
shrl
lahf
lahf
xchg
jmp
mov
out
mov
loop
repz
jnp
ror
shlb
xor
in
aaa
sbb
movsl
into
in
push
inc
jecxz
out
and
pop
jns
mov
xor
dec
lods
push
push
idiv
mov
test
je
je
and
xor
xor
xor
test
enter
pop
and
bnd
inc
xor
stos
cmp
jno
nop
push
fbstp
mov
dec
dec
xchg
pop
ja
push
or
fisttpl
out
scas
es
push
sub
cmp
or
push
pushf
addl
xchg
mov
push
sahf
add
xor
fisubl
push
cmpsb
xor
xor
lret
bound
aam
mov
sub
inc
inc
out
sti
push
pop
pop
cs
push
push
xchg
or
xchg
pushf
pop
in
cmpsb
inc
jmp
or
out
xchg
mov
hlt
lahf
jae
or
mov
lods
mov
bound
pop
daa
nop
jl
cli
dec
dec
lds
sbb
shll
sub
push
jns
sbb
add
repz
push
mov
push
es
mov
add
insb
and
jp
test
into
pop
pop
addr16
bound
mov
orl
or
dec
ja
pushf
gs
push
push
ret
xchg
push
lea
insl
mov
cmp
dec
sub
sub
and
cmp
ds
inc
xlat
inc
cmp
sub
inc
inc
inc
lahf
xchg
cmp
outsb
test
fcmovnbe
mov
dec
inc
je
cmp
lret
lret
adc
jnp
sbb
and
lahf
push
shlb
filds
xor
adc
inc
sub
icebp
movsl
fcmovu
xor
or
aaa
cltd
lret
xlat
imul
orl
call
jbe
bound
mov
out
push
jp
dec
adc
push
or
subl
cmpsb
test
sub
mov
pop
cmc
call
xchg
scas
dec
mov
xlat
add
hlt
addr16
sub
fwait
in
mov
jl
inc
les
pushf
lret
lret
test
xor
out
and
dec
sbb
push
je
push
clc
jle
cwtl
cmpsl
or
testl
out
inc
cmp
jecxz
mov
shrl
sbb
orb
fisubs
lret
aas
pop
cmpsb
cmpsb
sti
push
mov
mov
or
add
xchg
cmp
xchg
aam
lret
enter
inc
aaa
pop
dec
push
jecxz
mov
popa
xchg
aaa
in
pop
stc
fisttpl
dec
ficompl
repz
ds
inc
jp
cwtl
shll
out
fimull
pop
or
sub
jnp
cmp
out
test
sbb
cmp
cmc
dec
int3
int3
int3
mov
imul
jbe
mov
mov
xor
pusha
pusha
xor
lea
es
pop
es
jns
mov
xor
inc
adc
ja
repz
fcomps
mov
pop
mov
pop
pop
inc
mov
not
sbb
jl
gs
push
sbb
sbb
mov
dec
inc
push
push
push
and
pop
pop
inc
fstpl
dec
enter
cmpsl
mov
cmc
push
push
mov
jns
shll
lahf
js
mov
test
xor
ja
cmp
jl
wbinvd
inc
mov
movsl
push
jne
sarb
add
nop
aaa
outsl
mov
push
push
arpl
xchg
mov
icebp
test
and
pop
roll
jo
dec
cmp
and
sti
cmpb
mov
inc
out
leave
xor
pop
lods
addl
add
add
push
xor
test
push
mov
inc
fistl
and
or
aas
aas
out
aam
lods
mov
imul
pop
pop
fidivl
push
push
roll
pop
cmp
icebp
sub
loop
push
test
sbb
sbb
push
cmpl
xlat
xlat
pop
add
mov
shrb
mov
mov
dec
dec
dec
insl
lea
mov
in
rcrl
sahf
daa
and
fnstsw
cmp
pop
jp
xor
xor
sbb
mov
add
aad
loop
inc
mov
push
push
push
push
mov
imul
aad
pop
in
adc
jns
orb
sub
fistl
out
ret
out
mov
fsubp
mov
jecxz
mov
into
fcomi
lret
fisubrl
add
adc
cmc
or
inc
inc
iret
out
add
sub
sub
cmpsl
push
xor
xlat
inc
in
or
stos
insl
pusha
data16
mov
nop
push
push
or
or
je
or
int3
cli
int
cmp
inc
pop
pop
test
shl
adc
inc
sub
push
adc
cmp
fcmovnbe
stos
pop
pop
pop
pop
les
jns
movsb
insb
jle
ret
pop
pop
sub
into
mov
ror
push
mov
adc
jle
frstor
pusha
lock
mov
dec
repz
inc
push
xchg
scas
cmp
jae
cmp
xchg
movsl
movsl
sub
xchg
ret
mov
pusha
pusha
orw
aam
lahf
aad
sub
inc
icebp
sbb
gs
div
and
pop
add
rol
stos
add
js
pop
out
jno
xor
mov
pop
pop
pop
insb
mov
push
sub
ja
xchg
ret
outsl
ja
mov
adc
lods
out
cwtl
bnd
ret
loop
rclb
mov
cmp
daa
pop
std
mov
push
ret
push
imul
xor
jmp
aas
jge
nop
add
add
leave
push
push
cli
ret
push
mov
rol
dec
test
fidivrl
aas
movsb
mov
and
sub
dec
cmp
pop
mov
jl
in
lret
test
out
cmp
inc
cmovbe
pop
in
push
shrl
ds
hlt
aam
xor
xor
cmc
mov
xchg
and
inc
out
out
pushf
rcr
fimuls
xor
cmp
out
out
lods
lods
lods
cmpsb
and
push
cmc
call
test
mov
rol
inc
jae
or
adc
add
add
outsb
pop
mov
sub
mov
xchg
clc
lahf
addl
mov
pop
push
fstl
xchg
mov
arpl
xor
sub
jmp
add
add
xor
jmp
popa
or
cwtl
mov
xor
leave
push
sbb
add
mov
or
xor
sahf
lret
shrb
outsl
outsl
push
push
or
ljmp
adc
call
add
pusha
pusha
push
js
and
mov
subw
pusha
pusha
jecxz
sahf
es
pop
pop
rcrl
rol
pop
daa
in
js
data16
fwait
lods
bound
mov
lret
inc
inc
pop
xchg
mov
enter
sbb
sbb
ret
xor
testb
dec
push
add
pop
or
pop
outsb
outsb
outsb
fs
ds
lods
mov
push
ljmp
add
repnz
push
ds
xor
and
cmp
sub
icebp
icebp
and
push
inc
mov
xchg
add
dec
sbb
test
xlat
stos
stc
and
push
insb
rcrl
lcall
loop
cmp
push
push
mov
sahf
mov
and
pop
jae
lea
mov
dec
xchg
push
stos
ljmp
jne
sub
sub
push
jo
xchg
aam
rclb
push
sbb
repz
data16
andl
adc
xchg
add
push
xchg
addl
vpunpckhqdq
call
jne
les
call
adc
repz
mov
xchg
hlt
sbb
sbb
sbb
adc
lods
mov
adc
call
testb
and
xrelease
dec
cmc
cmp
cmp
add
jmp
dec
dec
shl
mov
in
test
or
add
mov
rolb
inc
add
dec
pop
mov
cltd
es
jl
or
mov
les
add
loopne
enter
sbb
sbb
insb
stos
cmp
cld
adc
sub
cmp
push
push
push
cltd
xchg
xchg
or
dec
add
mov
lds
in
in
rorb
sbb
outsl
outsl
jle
int
pop
sbb
test
popa
popa
aaa
aaa
xlat
insb
lahf
pop
dec
mov
mov
les
sbb
fs
sbb
xor
pop
xlat
mov
push
push
add
mov
mov
jno
rcl
insl
cmpsb
cmpsb
cs
mov
int
mov
mov
std
adc
jmp
fimuls
mov
outsl
cmp
repz
mov
adc
inc
sbb
lret
add
push
push
sub
inc
cmp
aad
loop
add
mov
push
cmp
jl
cmpsb
movsb
cmp
mov
sar
lcall
pushf
pushf
pop
xchg
inc
inc
test
inc
mov
sbb
cmp
lds
adc
pop
leave
popa
popa
repnz
xchg
fbstp
sti
sbb
pushf
pushf
dec
pop
je
xor
nop
and
jge
fadd
xor
jge
cmp
lock
mov
lds
repnz
cmp
out
out
dec
sbb
add
add
inc
inc
add
jnp
fsubrl
jb
jns
jns
or
sub
xchg
xor
inc
and
sub
mov
xor
sbb
fsubrs
push
push
daa
adc
adc
sub
in
cmp
pop
jo
jo
inc
fcmove
or
clc
pop
mov
dec
lret
shrl
std
jg
movsb
jmp
mov
ficoml
sub
pop
pop
pop
repz
les
xchg
or
repz
sub
push
dec
frstor
push
jp
arpl
cmp
leave
test
lock
adc
xor
call
lahf
jg
inc
outsb
pop
sbb
outsl
or
pop
fwait
insb
ret
sub
iret
pop
mov
mov
leave
add
mov
addr16
int3
icebp
pop
jge
ret
cmp
data16
sbbl
sub
test
or
fwait
and
mov
xchg
fdivrl
add
push
out
mov
enter
loopne
cmpsb
out
ja
mov
rolb
icebp
push
cmp
notb
insl
insl
cwtl
add
pushf
aaa
clc
lods
in
scas
mov
jp
inc
in
cmp
mov
push
xchg
jbe
sbb
cltd
ret
sti
in
out
rcr
test
scas
out
mov
mov
rclb
fisubrs
ds
inc
adc
inc
shll
adc
rcl
push
push
fcomps
or
add
fwait
scas
in
cmpsl
cmpsl
mov
and
jp
jp
pop
pop
shll
sti
into
cmc
mov
inc
imul
mov
cmp
xchg
mov
push
push
outsb
stos
stos
fisttps
push
or
in
xor
bound
out
mov
cwtl
add
add
add
outsl
add
adc
and
lret
cltd
cltd
pop
pop
jmp
es
push
jae
xlat
xlat
xorb
adc
pop
add
sbb
repnz
dec
mov
pop
cs
mov
push
xor
out
mov
dec
sub
mov
stos
stos
fimuls
fldl
aad
or
inc
or
imul
aad
mov
sub
data16
in
mov
inc
ret
inc
mov
pop
stos
mov
stos
stos
push
popa
hlt
inc
arpl
adc
cs
bound
add
adcl
dec
lret
mov
cmp
mov
jnp
lock
aas
adc
std
std
std
fidivl
mov
rorb
aam
sbb
sbb
sub
xchg
testb
repz
repnz
cmp
std
stos
stos
sahf
ds
xchg
stos
pop
ja
scas
pop
sbb
inc
into
not
clc
lret
mov
push
mov
dec
dec
test
mov
or
dec
or
push
psubsw
cmp
push
pop
mov
lahf
mov
fsubrs
or
pop
pop
ret
ret
movsb
in
rclb
inc
sub
cmc
jecxz
fsubr
cmp
dec
mov
cmp
addr16
dec
pop
add
adc
xchg
pusha
mov
jmp
je
ja
jl
push
pop
fwait
push
dec
pusha
lds
pop
jae
roll
jecxz
out
arpl
roll
out
cltd
dec
push
jns
loop
loop
clc
cld
mov
inc
les
addl
sub
xor
xor
int3
int3
roll
mov
cs
inc
pop
insb
mov
test
aas
lahf
sub
jmp
xor
adc
add
dec
xor
push
rcl
jge
stos
cmpsb
lods
lods
sbb
rcl
shrb
mov
pushf
xchg
std
test
push
mov
sub
jne
xor
dec
xchg
mov
mov
push
insb
insb
add
lahf
outsl
lds
jmp
cmc
mov
push
mov
test
jae
inc
mov
sub
ja
mov
jbe
sbbl
lret
lret
add
cmp
adcl
lcall
push
push
sbb
test
cld
cld
cld
cld
cmpsb
cmpsb
shl
out
jne
push
push
rcl
mov
jecxz
insb
stos
icebp
icebp
cmp
movl
ljmp
dec
std
push
loopne
pop
add
lods
lods
xchg
adc
lcall
push
fisubs
scas
cld
outsl
outsl
sbb
xlat
ror
aad
rcrl
lods
out
lret
or
fwait
mov
push
lds
pop
aam
idiv
inc
and
bound
aad
mov
mov
push
pop
rolb
or
cmc
js
push
mov
loopne
andl
push
test
xor
shll
les
sti
addr16
aad
fimuls
or
test
sarb
or
jne
xor
xchg
test
imul
in
xchg
mov
mov
out
adc
add
out
cmp
xor
mov
lret
arpl
push
or
repnz
jg
cmpsb
inc
insb
insb
jb
or
jne
icebp
push
sub
mov
dec
in
sub
ret
jae
je
jg
mov
test
arpl
daa
mov
insl
dec
call
sbb
jecxz
aam
push
push
cmp
outsl
ja
sbb
inc
inc
xchg
ljmp
adc
addr16
dec
push
mov
sbb
ja
aam
daa
in
vpor
shrb
add
lret
mov
cmc
std
mov
cli
int
fildl
addb
mov
xlat
negl
pop
xchg
sub
xlat
inc
pusha
pusha
push
test
pop
shll
mov
sub
xor
rcll
jge
mov
sbb
mov
ja
or
mov
bound
lds
ret
adc
inc
fdivs
daa
lret
cmc
lcall
mov
daa
mov
test
nop
add
sub
push
push
push
sbb
aas
xor
mov
cli
enter
adc
lahf
pushf
adc
stos
mov
inc
lds
rolb
aaa
jle
cpuid
test
popa
aam
add
lret
xor
out
adc
sarb
aam
lret
lret
lret
xchg
cwtl
add
pop
test
add
sub
add
ds
adc
inc
in
daa
into
lret
aam
cmp
in
data16
pusha
adc
daa
push
cmp
jmp
xchg
or
into
rcll
scas
jecxz
jmp
loop
outsb
outsb
testb
inc
pop
arpl
xor
pop
lock
pop
or
movsl
mov
insb
xor
mov
in
xor
sub
pushf
pushf
dec
dec
dec
pop
and
push
lock
and
xor
xchg
or
cwtl
cli
lret
sub
xor
mov
pop
xchg
or
pushf
rcl
cmc
in
in
into
imul
sbb
fwait
fwait
mov
sub
mov
xor
in
or
push
jl
dec
dec
add
les
push
ret
xchg
xor
pop
push
pop
pop
test
or
or
fdivrl
cld
daa
cwtl
cwtl
cwtl
cwtl
cwtl
sarl
jle
rcl
jae
mov
or
ret
jg
xor
jp
aas
dec
mov
sub
mov
and
pop
mov
mov
movsl
movsl
sbb
lods
add
cmp
mov
nop
add
or
cmp
test
fiadds
pushf
add
push
jne
scas
add
inc
push
sbb
jbe
fiadds
icebp
les
je
not
add
fmull
jmp
pushf
repz
xchg
jae
pusha
pusha
lds
cmp
cmp
mov
cmc
sub
push
shrb
jne
out
popa
inc
inc
and
testl
pop
pop
call
repnz
and
jmp
fdivrp
lea
inc
jge
xchg
xchg
insb
out
mov
pop
or
fimull
ja
int3
mov
gs
jno
mov
cmpsl
lods
push
data16
out
mov
pop
pop
jg
or
jb
dec
mov
xchg
mov
rcl
cmpsb
xchg
adc
push
xchg
xchg
xchg
xchg
xchg
inc
cmp
or
cmc
push
dec
and
icebp
cmc
lods
bound
imul
lcall
cmpsl
cmpsl
test
mov
or
mov
push
dec
aas
into
dec
dec
daa
daa
ret
repz
out
inc
stos
stos
stos
and
lods
jb
jb
cmp
sub
out
push
popa
lods
cmpsl
inc
push
je
push
pop
aas
push
mov
jb
xchg
inc
cmc
pop
xchg
popa
mov
into
push
mov
ljmp
sbb
sbb
incb
push
pop
mov
jb
fwait
jno
cmpsb
xchg
pushf
pushf
daa
rcrl
jb
in
push
push
mov
sbb
jmp
fwait
xchg
adc
fstp
jb
cmc
inc
add
rcll
cmp
jmp
pop
je
jns
jae
xor
and
outsb
inc
sub
cmp
push
adc
jbe
sbb
lds
xchg
xchg
cmp
adc
pop
pop
pop
mov
hlt
int
pushf
dec
xor
dec
dec
popa
int
lds
addr16
dec
dec
dec
pop
xchg
int
mov
add
mov
adc
and
cmp
jb
sbb
arpl
vpavgw
xor
out
jmp
cmpl
cmc
cmc
fcoms
or
dec
fistps
lret
ret
outsl
stos
stos
jp
pop
pop
pop
cmp
dec
es
inc
imul
lds
lcall
inc
nop
xorb
cmp
jge
jge
shlb
ret
nop
imul
stc
inc
cmp
lcall
dec
int
dec
movsb
push
out
push
test
adcl
mov
pushf
mov
add
fldl
iret
pop
cmp
repz
jne
push
push
push
in
jl
pop
sbb
pop
cmp
inc
inc
aaa
pushf
lds
inc
icebp
clc
cmp
xchg
test
sub
xchg
aaa
cmp
jne
mov
and
xor
stos
icebp
mov
adc
pop
pop
pop
add
xchg
leave
lret
mov
sahf
xchg
xchg
xchg
cmp
xchg
jl
and
int3
int3
pop
fdivs
fcmovnu
mov
inc
mov
outsl
or
xchg
xchg
or
lret
pop
in
mov
dec
dec
jl
xchg
and
lea
or
adc
mov
loop
sub
cmp
xchg
xchg
insl
out
je,pt
cmpsb
loop
add
icebp
jnp
lds
cmp
mov
rcl
pop
mov
loop
rcl
rol
iret
outsl
test
and
stos
cmp
inc
test
mov
clc
clc
cmp
mov
cmp
mov
pop
jmp
cli
xchg
dec
jne
and
xchg
xchg
or
dec
cmp
cmp
add
xchg
test
sub
pop
outsl
push
movsb
movsb
jle
mov
lcall
or
dec
cli
andl
add
stc
and
jno
test
shrl
sub
cmp
lods
lds
aaa
cmp
cmp
sbb
inc
loopne
jmp
loopne
lock
in
arpl
dec
jg
repz
mov
mov
pop
int3
pushf
xchg
jb
rcl
sbb
jp
gs
push
push
cmpb
and
cli
rcll
ret
test
pop
pop
jmp
dec
dec
cmc
dec
jbe
xor
test
or
cmpsb
xchg
imul
push
xchg
scas
xchg
xchg
pop
pop
cmp
xchg
sub
movsb
xor
or
xlat
pop
push
push
pop
div
mov
imul
addl
out
mov
or
aaa
subl
xor
repz
cld
or
lcall
jp
pop
xor
adc
mov
inc
inc
inc
daa
mov
inc
push
loop
adc
add
adc
sahf
jne
inc
clc
sub
jecxz
pop
sahf
adc
jp
jp
dec
fmull
insl
push
fisttps
xchg
mov
dec
ljmp
sbb
jecxz
inc
inc
inc
mov
insl
in
pop
repz
lret
mov
sub
arpl
cmpsl
inc
fdivs
sbbl
push
addb
lods
pusha
push
insb
inc
cmc
outsb
xor
xorl
jle
rol
mov
fistps
and
sti
adcl
and
pcmpgtd
dec
xchg
or
adc
enter
iret
es
negl
rcl
add
rorl
xlat
mov
mov
lea
xchg
pop
sti
add
testl
stos
out
clc
nop
pop
mov
sub
xor
daa
mov
mov
lret
pop
pop
pop
pop
dec
dec
adc
movsl
sub
sub
cmp
bound
jae
mov
dec
dec
dec
jb
rcl
cmpsl
adc
adc
cmp
jg
scas
jecxz
je
test
pop
into
lock
cli
jle
jns
jmp
imul
iret
test
xor
repz
sbb
and
rcl
out
and
scas
jno
add
add
or
mov
pop
out
push
pop
test
push
or
ljmp
push
mov
dec
dec
jo
repnz
push
add
mov
aad
lds
mov
fldt
sub
adc
aam
pop
out
xlat
xlat
inc
out
jbe
repnz
subl
cmp
pop
xor
mov
and
pushf
in
and
adcl
dec
gs
pop
mov
jecxz
cmc
fs
add
push
add
jp
shlb
pushf
hlt
enter
sbb
xlat
mov
aam
cmpsl
xor
pop
jb
bound
ret
and
sub
jae
out
insl
or
inc
inc
movsb
add
pop
pop
jge
movsl
int
not
clc
mov
mov
add
cmp
xchg
int3
xor
xor
test
jns
les
inc
cmp
fbld
std
dec
insl
repz
shlb
mov
cmp
pop
pop
outsl
pop
pop
xor
sub
into
into
lahf
bound
push
cmc
mov
add
daa
mov
sbb
rcrb
ret
ret
rol
addb
aaa
mov
xchg
jl
lea
fimull
scas
iret
iret
pop
xor
idiv
sub
cmc
adc
enter
out
cmc
bound
scas
xchg
xor
jle
cmc
mov
add
ja
addr16
and
adc
lret
ret
mov
fcoml
pop
push
test
call
xchg
arpl
sbb
cmc
inc
jge
repz
pop
popa
sbb
or
aaa
aas
scas
mov
fwait
add
jbe
scas
mov
mov
mov
push
push
push
adc
jno
fcmovnb
lea
mov
mov
test
lret
xchg
repz
push
std
or
add
stos
stos
fsubrs
xlat
cltd
jo
paddsb
mov
aad
sbb
sub
lret
lret
lret
add
and
fnsave
xor
xor
xchg
jne
jne
in
ljmp
jb
or
pop
cltd
out
loop
or
mov
nop
nop
lock
and
mov
aam
pop
mov
sbb
push
into
fldt
ficompl
xchg
inc
mov
cmp
aad
aam
shll
xor
pop
and
movsl
iret
inc
jne
xor
insl
fcmovu
jne
jmp
cwtl
enter
fs
jmp
icebp
sub
inc
js
arpl
push
fidivrs
test
ret
in
lods
nop
leave
xchg
and
adc
aas
pop
repnz
pmovmskb
jecxz
pop
inc
inc
mov
cld
mov
cmc
out
mov
push
mov
mov
xor
cli
out
jno
adc
push
dec
mov
je
test
cli
inc
outsl
outsl
cld
cld
stos
cmp
jno
mov
and
adc
in
sbb
clc
adc
adc
xor
int
add
int
dec
dec
cltd
shlb
movsb
movsb
xor
push
or
jbe
aas
aas
adc
ljmp
insb
lcall
inc
push
xlat
stc
cmpsl
movsb
xor
sbb
adc
xchg
pop
or
inc
pop
lret
cwtl
jbe
int3
mov
adcl
mov
mov
sub
push
cmp
aam
mov
inc
les
arpl
sub
adc
in
jns
pusha
mov
jne
lock
add
push
ss
lret
push
outsl
pop
pop
dec
and
ret
out
mov
test
ficoms
cmp
cli
je
enter
test
inc
or
jge
adc
test
arpl
test
xchg
lods
mov
popa
popa
pusha
pusha
movsb
movsb
in
pop
pop
inc
cmpsb
fs
ret
orb
sbb
jnp
sub
push
push
mov
mov
and
mov
orl
sbb
and
cld
daa
repz
xchg
sub
insl
nop
loopne
mov
loop
dec
dec
test
rcrb
xor
adc
outsl
popf
pop
push
push
push
push
fsts
rcl
je
xchg
jge
call
cmpsb
ds
rcrl
and
test
dec
dec
add
jae
and
dec
icebp
fistps
ret
ds
cmp
and
mov
dec
out
bnd
rolb
imul
jl
push
mov
xchg
inc
aad
cmp
mov
rcrb
mov
out
push
jecxz
push
fisttpl
sbb
mov
xor
xlat
xlat
xor
xor
fwait
and
lahf
xchg
enter
daa
call
loop
hlt
inc
cmp
xchg
xchg
push
rolb
testb
xor
daa
xor
pslld
dec
shlb
nop
mov
cmp
push
iret
iret
cmpsb
push
push
push
mov
fcoms
subb
lea
add
int3
mov
inc
in
in
jg
or
xor
insb
dec
dec
inc
inc
lods
repnz
jmp
nop
nop
insb
fadd
hlt
hlt
repz
xchg
inc
clc
pusha
add
bound
or
push
pop
shlb
push
cmp
mov
nop
nop
scas
jne
jbe
es
test
jns
mov
inc
inc
stos
lods
fcomp
fcomp
mov
stos
cltd
xor
dec
mov
mov
mov
shll
lret
push
push
push
push
sbb
sub
jbe
add
sarb
mov
mov
icebp
pop
nop
cmpsl
es
imul
pop
pop
jmp
xor
pusha
sarb
pop
pop
scas
stos
shrb
add
mov
mov
in
jnp
inc
into
into
es
sbb
rclb
daa
mov
hlt
into
jns
mov
jnp
add
test
pop
or
xchg
fnstsw
or
cmpsl
insb
and
ljmp
mov
add
je
adc
jo
imul
ds
test
int3
dec
fscale
cmpsb
imul
cs
xor
ficoms
xor
xchg
sahf
sahf
add
movsl
dec
mov
js
mov
lea
in
sub
xchg
shr
xchg
outsb
outsb
xchg
xchg
sbb
mov
push
js
or
data16
out
icebp
je
popa
pop
lahf
cmpsl
cmpsl
insb
enter
mov
sar
out
lret
inc
cmp
push
divb
and
push
or
dec
xchg
and
cmpsb
jo
je
cli
mov
sti
mov
xor
arpl
xlat
pop
pop
pop
jb
addr16
hlt
cmp
repz
or
lods
lods
pop
es
cmp
pop
fwait
js
shrl
sahf
aaa
pop
seto
rol
cmc
cmc
stos
int
stos
push
lcall
mov
xor
xorb
fs
pop
pop
push
jo
mov
xchg
popf
or
repnz
lahf
add
mov
push
je
mov
inc
add
push
outsl
mov
pop
pop
jle
je
sub
cmp
andb
sbb
push
in
xor
arpl
jae
inc
jne
pop
es
cmp
add
or
test
cmp
xlat
repnz
adc
mov
add
cmp
jbe
jmp
mov
cmp
xor
jle
xor
fsubl
imul
cli
adc
cltd
cmpsl
in
lods
lods
xor
sbb
cli
sub
sbb
loop
test
in
and
adc
in
pop
mov
jle
fsts
mov
rorl
jle
mov
repz
or
sub
inc
movsl
pusha
and
jg
push
cli
stos
stos
stos
lea
rcl
icebp
jg
pop
pop
xlat
mov
add
icebp
icebp
dec
enter
mov
or
pop
pop
cmovl
lret
rclb
xchg
ret
xlat
loop
out
sbb
inc
xchg
in
lods
lock
push
push
sub
inc
ljmp
cld
jle
jle
shl
cmp
or
enter
daa
daa
bound
add
fisubs
scas
sub
loop
adc
rolb
adc
mov
mov
inc
repz
push
mov
jecxz
mov
pop
call
push
push
jmp
pop
cmp
insl
sarl
ja
ja
mov
outsl
outsl
and
daa
xchg
pop
pop
xor
xchg
xchg
jae
cmp
in
push
mov
and
notb
dec
rol
enter
mov
cmp
fcompl
adc
mov
inc
inc
mov
sub
xor
jns
repz
fildl
je
xchg
incl
dec
or
sub
lret
cmp
rol
mov
and
mov
ds
adc
bound
xor
mov
mov
pop
xlat
mov
xchg
pop
imulb
mov
mov
sbb
loopne
in
notb
jno
dec
adc
mov
inc
in
scas
ret
cs
es
mov
mov
dec
jo
jle
dec
mov
add
sahf
push
jg
outsl
xor
pop
fdivrl
push
sub
sbb
jge
and
in
xchg
int
lcall
xchg
imul
jbe
jbe
inc
mov
movsl
fcmovnu
int
inc
mov
aas
aas
pop
hlt
popf
jo
pusha
pusha
pusha
mov
sub
adc
fxch
and
mov
push
stos
shlb
sub
bound
and
mov
push
js
sub
imull
pop
lock
fcoml
pop
pop
push
xor
insb
mov
sub
jmp
shrb
sub
in
add
jle,pn
loop
repz
das
mov
push
test
adc
iret
aaa
xchg
lret
sub
pop
pop
add
pop
sahf
aaa
add
mov
or
jbe
outsl
test
dec
xor
outsb
xor
mov
mov
mov
div
lock
dec
and
rolb
cmpsb
push
bound
and
adc
cmpsb
xorb
mov
test
add
out
adc
jns
test
in
dec
sbb
sub
push
push
js
sub
stos
mov
fmull
dec
lea
repz
inc
clc
test
cld
jl
mov
jle
out
sub
out
adc
nop
jle
dec
jge
and
cld
jae
push
push
push
mov
pandn
lock
nop
and
pusha
adc
cli
cli
jmp
jno
mov
fisttpl
and
inc
mov
mov
xchg
sbb
lods
push
push
inc
out
sbb
push
push
add
mov
add
jne
std
or
inc
test
ret
fwait
pop
rclb
push
repz
push
push
xor
jns
jle
aad
cmp
call
lret
mov
js
mov
out
adc
lahf
push
push
fsubs
ds
scas
push
add
icebp
inc
pop
mov
call
mov
aaa
aaa
idivb
loopne
outsb
in
fistpll
pop
and
sarb
lcall
push
hlt
add
or
sahf
sahf
dec
pop
andb
mov
mov
sbb
xchg
inc
sbb
repnz
or
out
out
movsl
xlat
add
insl
test
out
jp
mov
test
cmp
push
inc
iret
ss
repz
mov
shr
ret
cmpsb
push
cmp
xor
mov
repz
xor
loope
jne
scas
cmp
adc
xor
fdivrs
or
cmp
cmp
fdivrs
das
ds
cs
adc
data16
stos
xlat
dec
mov
hlt
out
jno
inc
cmp
repz
mov
adc
xchg
aas
xor
and
xchg
into
sbb
cmpsb
cs
dec
dec
mov
incb
sbb
add
arpl
shrb
inc
jno
push
mov
je
shr
out
or
lds
aad
push
popa
sbb
repnz
call
loopne
or
and
xchg
popa
sahf
jge
lods
inc
dec
dec
cmp
ret
sbb
inc
xor
jae
xchg
popa
sub
jno
pop
inc
shll
inc
mov
insb
jo
lahf
lahf
stos
or
and
xchg
shlb
clc
ds
cltd
lea
ja
inc
fistps
push
out
pop
out
jl
mov
or
dec
dec
xor
imul
mov
adc
outsb
push
sub
icebp
xchg
fwait
aas
pop
orb
pop
add
hlt
fldt
dec
cmc
push
pop
pop
mov
add
dec
lods
frndint
ds
sub
mov
test
jb
icebp
mov
xor
and
mov
es
lret
lret
mov
mov
xchg
mov
mov
mov
in
mov
mov
pop
xchg
inc
ret
adc
jnp
add
insb
adc
rorb
std
jns
int
jo
push
out
test
cmp
shlb
repz
aad
aad
enter
and
pop
pop
pop
push
stos
add
sub
sub
or
inc
adc
xchg
sbb
sbb
inc
rol
pop
mov
jl
cmp
sbb
out
dec
dec
mov
cmp
jmp
xor
pop
fistl
lret
into
into
xor
aam
rcl
int
adc
pop
lds
inc
inc
xor
jecxz
push
pop
xchg
mov
and
aam
mov
cmp
dec
cmp
addr16
mov
int3
push
fldl
enter
out
lea
jae
mov
xchg
ja
mov
xchg
and
aam
ret
fstps
add
dec
lds
or
out
fsubrs
pop
bound
xor
jo
cmp
add
jno
xor
loope
mov
out
adc
out
dec
push
je
dec
das
inc
ficoms
shlb
aad
outsb
outsb
std
std
xchg
dec
dec
mov
aam
je
fwait
das
ds
sti
int3
int3
add
loopne
add
push
add
mov
mov
push
pop
pop
dec
push
movl
pop
xchg
xchg
addb
test
insb
insb
cmp
push
ret
gs
stos
push
and
mov
addr16
mov
jne
jne
pop
push
mov
jmp
sub
push
aas
incb
daa
mov
lods
lods
lahf
push
filds
jl
int
inc
aad
aad
sbb
pushf
inc
cltd
mov
xchg
aas
aas
xlat
sbb
or
mov
cmpsl
cs
add
shl
sbb
pop
pop
imul
and
jb
aad
adc
enter
fcoml
adc
ds
insb
cmpsl
push
test
jmp
ror
or
sub
stos
adc
cmp
lock
pop
dec
outsl
test
cmc
sub
imul
nop
jnp
lcall
cmp
ds
xchg
adc
xor
aas
pop
dec
dec
cmp
dec
xchg
or
icebp
enter
push
fbstp
jle
dec
dec
pusha
pop
jno
xchg
xchg
sbb
jp
mov
stos
stos
sbb
sbb
mov
push
stos
iret
xor
jbe
das
das
inc
inc
add
ret
mov
ret
pop
xchg
imul
out
inc
pop
or
push
push
xor
fnstenv
stos
decb
in
jmp
adc
shrb
cli
cli
pop
pop
stos
xchg
or
insb
shll
xchg
inc
push
sub
shl
test
or
xchg
or
adc
loopne
dec
sarl
inc
in
insl
and
jmp
inc
lahf
xchg
imul
icebp
sub
adc
dec
cmp
inc
sarl
or
or
iret
iret
sbb
jmp
and
cs
fwait
and
out
scas
or
jl
fstpt
aad
lahf
popa
je
mov
ss
in
in
jns
mov
push
push
push
insb
enter
lods
xor
dec
dec
insb
pop
pop
or
xor
xor
xor
test
and
fnstenv
jbe
push
fdivrl
mov
and
inc
jae
mov
rcrb
cs
sbb
pusha
jmp
and
fwait
fwait
push
dec
dec
in
shll
pop
pop
arpl
enter
inc
rcrb
or
subb
loope
or
xchg
adc
cld
cld
xor
movsl
and
mov
jl
jb
mov
lahf
xlat
sub
imul
cmp
or
mov
cmp
fisubrs
sub
dec
sarl
lahf
dec
push
pop
aam
push
xchg
mov
mov
dec
stos
xor
mov
adc
das
jbe
xchg
ss
jne
cmp
push
jo
push
xorl
in
push
decl
pop
shlb
ss
nop
mov
paddusb
or
rolb
iret
iret
jg
push
lahf
lahf
out
inc
inc
inc
sub
push
mov
movsl
movsl
mov
mov
sbb
nop
push
inc
adc
mov
inc
test
lock
cmc
cmpsl
int3
int3
sbb
shrb
push
push
sub
xor
pop
lret
nop
out
jnp
push
js
iret
pop
push
aas
or
or
push
sub
mov
and
mov
jns
mov
mov
push
mov
mov
and
cmpsl
cmp
jae
call
bound
mov
daa
mov
pusha
xchg
out
popa
popa
push
mov
mov
sbb
xor
sub
jle
cwtl
jnp
scas
xchg
imul
stos
imul
cwtl
jno
pop
stos
stos
xchg
xchg
mov
dec
mov
ja
xor
cld
fnstenv
xor
xlat
add
jae
jg
pop
pop
rorl
push
pop
sbb
movsl
movsl
jbe
jbe
mov
rcrl
mov
lcall
inc
dec
movsl
and
aaa
into
into
or
lcall
sbb
push
or
sbb
mov
lods
lods
fmull
bnd
enter
cltd
adc
push
mov
testb
mov
xlat
cli
imul
pop
scas
scas
imul
aam
xchg
sub
cli
push
ret
sti
sti
insb
dec
fs
out
adc
pop
add
or
enter
or
stos
pusha
pusha
or
cmp
pop
out
iret
movb
je
adc
stos
insl
je
push
mov
mov
ret
xchg
mov
jnp
jmp
repz
mov
pop
xlat
or
inc
jo
out
ja
pop
imul
mov
add
mov
jb
cmp
sbbb
mov
je
push
ret
ret
test
je
in
mov
adc
cmp
cmp
lea
iret
ret
fs
test
aam
sbb
int
faddl
movsb
xchg
dec
lret
notb
dec
fwait
xor
repnz
mov
repnz
cmpsb
jno
ret
cld
push
push
dec
jg
sbb
xor
cmpsl
fmull
cltd
movsl
ss
xor
jmp
jbe
cmp
cmp
mov
add
int
std
mov
jae
shlb
lods
sbb
orl
jno
pusha
mov
push
mov
je
dec
popf
popf
or
sub
fcomps
rclb
push
dec
test
fistpll
rclb
std
std
pusha
add
rorb
xlat
xlat
subb
lock
stos
loopne
push
aam
popf
push
sbb
xlat
roll
dec
repz
ljmp
daa
push
test
push
pop
jbe
sub
movb
popf
ss
loop
gs
pop
nop
ret
adc
mov
mov
push
lds
int
pop
push
and
adc
lods
xor
cmp
out
jo
xchg
dec
dec
lret
outsb
dec
add
inc
pop
lods
mov
iret
mov
fcmovnb
stos
popa
and
pop
xchg
push
add
inc
cmp
addr16
dec
lods
out
out
out
and
jle
sbb
insl
jo
std
clc
das
outsb
mov
fmull
mov
mov
mov
sub
jae
adc
lahf
lahf
das
das
das
lods
inc
pop
sti
jle
sarl
mov
lods
lods
push
out
inc
out
das
adc
ficoms
pop
cwtl
cwtl
decl
mov
pop
sub
popa
lret
and
in
adc
adc
lcall
psubsb
loop
xor
repz
loop
mov
xor
sub
scas
sti
loop
clc
scas
scas
push
add
jl
xor
lock
movsb
jo
mov
dec
fstpt
push
jo,pn
ds
and
out
dec
push
test
ja
jp
das
and
sbb
mov
mov
loope
or
movsl
aaa
ja
repz
xor
repz
and
je
xor
cs
pushf
pushf
inc
lods
xchg
xchg
ss
push
test
subps
cli
jnp
cli
cli
rol
lcall
inc
notb
mov
push
fcompl
cltd
cmc
loope
hlt
clc
sub
test
adc
mov
and
adc
call
jp
jnp
sbb
das
jno
pop
out
std
jge
ss
push
dec
out
out
divl
dec
sti
adc
movsb
jle
popf
xchg
or
xchg
xchg
and
out
js
sbb
push
push
jae
mov
sbb
adc
mov
nop
nop
xor
bound
xchg
fistpl
dec
lret
jmp
or
pop
lods
xor
pop
mov
lock
mov
xchg
int
cmc
jle
inc
ficomps
cmp
sub
mov
xor
cmp
sub
jge
daa
pusha
pusha
jne
push
out
cmp
dec
cmpsl
testl
add
pop
inc
or
sbb
sbbl
inc
sub
adc
mov
xchg
subb
lahf
enter
jge
pop
adc
notb
sub
pop
pop
shlb
xlat
xlat
xlat
mov
jge
jne
bound
aas
aas
inc
xchg
hlt
sbb
mov
call
jge
loope
ss
lcall
pop
add
and
push
jge
mov
mov
inc
das
idivb
ds
repz
xor
data16
mov
pushf
pushf
and
mov
xor
jo
or
xor
mov
add
jmp
and
call
in
cmp
mov
push
mov
sub
push
push
push
push
push
call
mov
push
call
mov
cmpl
jne
push
pop
xor
mov
mov
imul
mov
mov
xor
push
pop
div
mov
mov
shl
mov
mov
xor
push
pop
div
push
pop
mov
shl
mov
mov
jmp
mov
mov
mov
mov
movsl
movsl
movsl
movsb
push
push
pushl
call
mov
push
push
pushl
push
call
add
mov
mov
push
call
mov
mov
mov
pop
pop
leave
ret
