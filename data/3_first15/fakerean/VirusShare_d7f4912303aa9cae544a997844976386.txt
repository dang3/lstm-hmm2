sbb
add
mov
mov
xor
pop
xchg
or
shlb
xor
dec
out
pop
adc
inc
jge
xor
dec
scas
cmova
jne
and
inc
and
mov
sete
adc
jo
pop
out
dec
push
cltd
xor
popa
xor
pop
loopne
push
mov
adc
xchg
mov
mov
pusha
xor
rcrb
subl
xor
cli
adc
and
lock
jb
xchg
enter
cmc
cltd
xchg
adc
xor
lods
cmp
sub
mov
test
xchg
ljmp
dec
and
mov
sbb
cmp
sbb
fldl
mov
lret
fcom
lods
xchg
call
mov
push
push
js
cmp
cwtl
jno
mov
aas
cmp
cld
sub
repz
or
jl
add
cmp
sbb
and
inc
inc
sbb
pop
xchg
adc
in
add
sbb
scas
push
inc
or
pop
cmp
subl
bound
xchg
call
in
mov
xor
push
cwtl
push
lds
addr16
push
push
fcomip
mov
xor
icebp
das
jle
jns
adc
sub
pop
pop
fucomip
test
dec
push
inc
in
pushf
xchg
repz
movsb
addl
ficoms
ss
jb
inc
sbb
fcomps
shlb
jne
incl
adc
push
cmpsl
add
mov
push
and
icebp
xor
mov
push
ret
test
cmp
outsb
dec
jno
jae
testl
jl
push
lcall
imul
add
nop
push
jne
lea
jmp
ffreep
sarl
jecxz
call
xor
bound
cmp
pop
outsl
xor
jns
test
push
pop
fldl
pop
imul
inc
mov
cli
adc
shll
iret
xchg
push
mov
scas
mov
in
andb
jecxz
and
cmp
test
pushf
outsl
dec
add
push
ss
xchg
lret
jl
out
mov
ljmp
arpl
mov
xorl
sbb
add
mov
mov
ret
pop
jp
das
lods
mov
movsl
les
adcl
xchg
and
mov
je
jo
loopne
iret
fcoml
xor
cmp
cltd
fdivp
loope
sbb
jp
xchg
xchg
je
lods
std
popf
mov
pop
sbb
cmp
sub
jmp
sbb
sub
cmp
push
cmpsb
adc
cmp
mov
ja
jb
xchg
sbb
scas
jp
dec
adc
gs
add
mov
sti
push
dec
xor
loopne
mov
outsl
cmpsb
fstps
scas
mov
mov
daa
push
inc
rcrb
cld
clc
or
mov
adc
test
mov
shll
inc
outsb
xchg
xor
lahf
xchg
and
ljmp
mov
iret
adc
mov
or
repz
adc
incb
testb
sbb
pop
jle
sub
mov
scas
jl
adc
stc
dec
mov
jp
loop
xor
mov
insl
shr
add
inc
and
adc
sahf
dec
sbb
outsb
hlt
je
fmul
pop
fistps
arpl
out
fs
loopne
das
aad
inc
jno
dec
fwait
mov
jbe
or
and
or
mov
add
pop
test
jle
fs
rcll
xchg
pop
dec
gs
loopne
and
cmp
inc
lret
fisttps
fdivrp
pop
push
movsb
test
push
mov
xor
dec
push
icebp
aas
push
in
or
es
sbb
xchg
stc
imul
jns
out
jp
nop
dec
loopne
insl
xor
sbbb
scas
xorb
mov
sbb
scas
xchg
fistps
mov
aas
inc
pop
sahf
xchg
les
mov
ss
and
dec
out
pop
int3
mov
cmp
jecxz
inc
iret
sub
loopne
xchg
shlb
int3
outsl
dec
inc
xchg
inc
addr16
push
and
enter
movsl
scas
mov
lods
in
add
lds
imull
dec
lret
sbb
lea
mov
jo
xchg
and
pop
into
mov
mov
pop
cli
mov
in
nop
daa
jp
xor
xchg
sahf
lahf
inc
mov
in
and
cmc
mov
cmp
mov
sub
ficoms
nop
and
xchg
mov
mov
pop
test
push
dec
into
repnz
lahf
or
mov
sbb
mov
aad
imul
into
mov
cs
test
adc
xchg
outsl
hlt
sahf
repz
out
gs
nop
xchg
in
insl
cmp
rorb
sbb
jnp
pop
imul
je
fdiv
dec
or
xlat
cmp
aad
lret
imul
jbe
push
in
insl
cltd
and
mov
fsts
sbb
pushf
in
jecxz
pop
xchg
bound
jg
shlb
outsb
aas
iret
cmp
jns
or
stos
pop
pop
icebp
mov
xchg
push
loopne
das
sub
popf
sahf
jns
sbb
lods
ds
jmp
xchg
push
das
in
test
mov
movsl
xchg
test
scas
psrad
test
or
outsl
pop
jp
mov
fs
std
jne
loope
mov
and
push
or
and
add
mov
icebp
mov
pop
les
icebp
xchg
dec
mov
daa
jecxz
add
xchg
and
imul
ret
les
xlat
sti
ret
inc
add
in
jecxz
or
loope
dec
sub
adcb
pop
sahf
orb
mov
adc
popf
pop
mov
jb
mov
stos
pmuludq
push
and
rcll
cmp
fincstp
in
mov
repz
xchg
mov
mov
adc
xchg
fsubl
shlb
push
mov
push
mov
adc
imul
movaps
mov
cmp
notb
cmp
xchg
mov
ss
in
pop
mov
pusha
shr
mov
addr16
lret
aaa
ds
fcmovu
mov
mov
push
cmp
int
dec
mov
xchg
inc
js
mov
jmp
pand
or
mov
in
and
sbb
movsb
jnp
fistps
mov
sbb
das
inc
xchg
imul
jle
clc
push
rclb
leave
fcoml
bnd
sbb
loopne
jbe
fnsave
push
and
inc
js
movsl
fadds
jnp
das
ds
out
inc
and
adc
sahf
clc
and
mov
pop
mov
das
jg
xbegin
lods
pushf
fildll
mov
push
mov
ds
icebp
inc
test
jae
jl
fidivl
sbb
aaa
mov
popf
inc
jg
push
das
jecxz
insl
jge
mov
cmp
push
call
not
iret
xor
shrb
jo
lock
sbb
jge
testl
rorl
out
test
pop
sub
sti
fistpll
adc
mov
lret
clc
fwait
pop
jns
mov
mov
stos
push
iret
xchg
jmp
loop
popa
inc
xor
dec
dec
inc
adc
and
mov
lret
jnp
xor
rcrl
pop
sbb
mov
inc
add
adc
push
xor
xchg
and
mov
ret
xchg
pop
les
cs
mov
mov
fwait
loope
aas
stos
dec
jb,pt
pop
cwtl
mov
mov
mov
sub
lret
inc
aad
cmp
rclb
dec
cltd
mov
or
sub
cmp
push
cwtl
adc
mov
xlat
jg
frstor
pop
test
fwait
stc
nop
push
rcrb
getsec
test
jl
shll
add
loope
outsb
loop
mov
fcomps
lcall
lea
mov
xor
jl
dec
pop
sahf
shrl
mov
inc
in
call
sub
add
mov
aad
push
cli
mov
enter
aas
cs
xor
shrw
jmp
les
shrl
push
loope
lods
shlb
rcll
or
cmp
adc
inc
and
icebp
pop
lods
cmpsl
mov
test
xchg
bound
xor
xchg
jl
add
fisttpl
js
or
stos
jo
sarb
icebp
call
sub
push
jmp
loopne
or
aas
xchg
imul
add
cmp
xlat
shl
inc
mov
dec
addr16
push
dec
in
rorl
xor
aam
xchg
jl
and
dec
dec
repnz
and
pop
push
cltd
lods
sbb
jns
jnp
shrl
sub
pushf
scas
or
shll
mov
and
push
or
inc
je
inc
repz
adc
and
cmp
movsb
loopne
xor
imul
jns
pop
mov
xchg
xchg
gs
push
movsb
nop
lock
push
icebp
aad
xchg
scas
shll
push
sub
stos
ljmp
in
push
popa
jecxz
and
dec
adcb
jmp
dec
nop
sbb
scas
jo
xor
xlat
lods
or
push
pop
pop
shl
iret
push
stos
mov
fbstp
pushf
aad
dec
xchg
nop
les
pop
ja
jno
insb
jne
ja
std
jno
shrl
cmpsl
imul
mov
sub
dec
mov
inc
cltd
cwtl
cmpsb
or
xor
push
out
jmp
lds
push
xchg
test
inc
cmp
sub
mov
and
ud1
mov
out
sub
iret
mov
fstp
dec
stos
outsb
mov
adc
jno
mov
xchg
mov
push
ss
mov
fwait
pop
push
sub
dec
xor
sahf
mov
add
push
inc
xchg
movsl
xor
sbbl
stos
int3
inc
loop
fcompl
cmp
popf
and
jbe
dec
loopne
push
pusha
fcmovnbe
or
testl
mov
sbb
mov
xchg
push
lods
jmp
jg
faddl
jo
push
dec
xlat
sarb
jne
insl
or
xchg
mov
shrl
add
xor
cmp
mov
cltd
xchg
daa
pop
cmpl
sbb
mov
jns
rorl
jmp
inc
dec
xchg
mov
outsl
push
push
mov
dec
add
sub
imul
mov
out
test
and
out
jecxz
mov
lods
inc
dec
imul
and
inc
adc
lcall
push
dec
mov
loopne
loop
sbb
cs
gs
or
icebp
pop
iret
test
sbb
mov
xchg
jno
ljmp
mov
mov
pop
fisubrl
or
jo
faddl
sub
push
std
lahf
push
lret
sbb
jnp
mov
pop
rcr
imul
mov
jl
pushf
scas
add
testl
insl
addr16
clc
cli
mov
dec
cmp
or
xchg
jae
pop
adc
mov
out
fnstsw
add
ljmp
movsb
test
inc
nop
pop
jno
mov
je
mov
dec
jmp
jmp
add
lods
cmp
scas
pop
xor
cmp
pop
mov
int
out
pop
or
test
push
and
inc
shlb
mov
in
jns
jnp
rorl
lret
pop
data16
sbb
mov
jg
sub
push
aaa
dec
xor
imul
add
pop
mov
add
push
push
jno
repnz
je
cmp
insl
es
imul
in
push
push
call
adc
js
lret
ja
inc
sub
jge
int
and
inc
cmp
and
pop
pop
es
inc
cmp
mov
add
in
lahf
testl
xor
or
pop
out
sub
jno
jbe
dec
push
push
lods
stos
imulb
cmc
xchg
pop
pushf
sbb
mov
xchg
jmp
cltd
outsl
dec
jnp
out
imul
jle
adc
test
adc
fnstcw
das
call
mov
jl
idivb
jo
outsb
lods
or
icebp
call
in
push
mul
jno
ljmp
hlt
or
mov
pushf
lods
xor
test
pop
popa
movsb
daa
pop
and
pushw
pop
jns
ret
mov
sub
pop
cltd
adcb
add
jo
cmp
mov
dec
mov
movsb
cmp
nop
shll
xchg
pusha
jg
and
mov
fldcw
push
pop
decb
inc
xchg
negl
les
fsubl
cmp
fidivs
xor
jae
hlt
xlat
test
cmovle
xor
dec
clc
lea
dec
and
adc
push
mov
psubsw
es
fcmovnbe
add
cmp
dec
xor
mov
test
insb
rcrl
mov
arpl
xlat
push
xchg
movsl
sub
movsl
fcoml
push
js
adc
dec
repz
inc
jle
or
jl
jecxz
iret
in
jge
pop
loopne
popf
enter
xchg
pop
fsubrl
aas
xchg
ret
orl
cld
xor
xchg
mov
lock
sub
xor
rcll
sub
cmp
nop
xor
lods
lea
test
insl
pop
fstl
in
push
or
cld
out
fstp
jle,pt
mov
shrb
pushf
mov
shll
inc
nop
imul
cmpsb
fcoml
and
add
dec
and
leave
daa
jle
mov
xor
adc
add
push
mov
aam
and
sbb
scas
les
mov
cmp
pusha
lods
stos
negb
mov
aad
push
cmp
inc
sbb
sbb
fimuls
and
sub
int
pop
mov
sbb
mov
notb
cs
ret
mov
push
test
push
imul
idivl
add
mov
and
cltd
mov
add
push
cld
aad
aas
jae
inc
js
in
lods
mov
call
add
jl
ret
inc
mov
jbe
addr16
dec
adc
pop
add
mov
mov
mov
in
subb
lret
or
jmp
cltd
ret
js
xor
mov
xchg
add
lea
inc
fdivr
inc
pusha
repz
lock
push
arpl
int
daa
cmp
and
shll
mov
jo
xchg
sub
ret
add
xor
int
mov
inc
cmp
je
test
ss
aam
subl
pop
cmp
jno
sti
movsb
pop
adc
loopne
pop
out
inc
scas
shll
mov
mov
in
into
aas
jecxz
pop
subb
call
fwait
pop
loop
jo
dec
mov
push
inc
clc
xchg
nop
lahf
lds
dec
sub
imul
xchg
sub
adc
or
cmp
inc
nop
jno
jne
loope
movsb
repz
bound
lahf
sbb
ficompl
jnp
std
loopne
mov
add
add
xor
mov
out
test
mov
sub
in
cltd
push
inc
outsb
js
insl
pop
fsubrs
cmp
ret
xchg
jmp
push
mov
cmp
out
push
orl
aam
jg
mov
or
cmpl
faddl
push
lcall
cmc
cmc
add
cli
mov
int3
scas
cld
out
insl
data16
loope
cmp
push
jno
xor
sub
xlat
inc
out
xchg
add
pop
pop
dec
mov
jae
push
or
addr16
fldl
arpl
mov
dec
jne
adc
sarb
cmpsb
or
sti
add
lea
pop
and
adc
mov
cmc
jo
inc
cmc
push
outsb
ljmp
fs
mov
jbe
mov
sbb
pop
fdivs
cmp
movsl
jg
inc
hlt
mov
lods
jmp
sbb
xor
es
sbb
ds
jne
push
fsubr
ja
and
lahf
int
aam
hlt
sub
icebp
scas
sbb
mov
xchg
ret
inc
push
mov
mov
loope
inc
xchg
aaa
jne
popa
and
push
fcoml
xor
jbe
push
xchg
jecxz
and
add
orb
or
pop
aad
aad
in
xor
rorl
ret
sub
dec
loope
int3
test
dec
xchg
and
and
xor
imul
ljmp
dec
push
mulb
cmpsb
insb
notb
cmp
pop
xor
sbb
insl
sbb
mov
hlt
pop
adc
leave
jne
mov
mov
test
mov
pop
ja
and
arpl
out
and
imul
xchg
pushf
push
pop
shll
test
adc
jb
call
cmpsb
cmpsl
daa
jge
sarb
adc
hlt
push
or
xchg
xor
sbb
sti
inc
adc
inc
cmpsl
scas
xchg
in
sub
push
xor
jno
jg
jge
outsb
popa
add
or
dec
jecxz
aam
dec
mov
or
inc
out
pop
push
clc
mov
repz
xchg
jb
xor
pop
cmpsl
jmp
mov
lcall
mov
mov
or
fsts
in
loop
adc
sbb
cltd
mov
sub
jno
ljmp
mov
in
sbb
addr16
add
pop
push
sahf
jmp
pop
fiadds
dec
subl
sti
xchg
data16
add
jno
out
mov
lahf
outsl
mov
test
call
outsb
xchg
jmp
test
sbb
std
push
pop
push
mov
and
push
ss
inc
inc
or
cmpsb
mov
mov
and
ss
sbb
pop
std
ss
cmp
inc
xchg
addb
arpl
ja
xor
addr16
scas
xchg
out
stc
xchg
add
sbb
fadd
add
jecxz
sub
and
dec
aad
jno
or
adc
inc
leave
outsb
repz
lea
jns
sub
cli
sub
inc
jo
in
test
cmp
mov
jo
mov
in
out
xchg
pop
dec
jmp
lret
ret
pop
pop
mov
adc
js
out
cmp
shlb
cmp
loope
or
mov
out
movsb
dec
pushf
mov
popa
xlat
popa
and
fnstcw
mov
stc
and
sti
rolb
fistpl
push
jne
dec
jns
mov
jns
xor
std
sub
je
xor
insb
stc
push
pop
pop
adc
out
call
push
jbe
jmp
inc
mov
pop
out
je
xlat
mov
lods
and
pushf
mov
xchg
lahf
into
pop
pop
adc
jns
mov
push
jb
rdpmc
cld
test
int3
inc
pop
stos
cmpsb
and
cs
mov
pop
shlb
sar
cs
push
xor
adcl
cmpsb
mov
inc
lock
into
inc
cmp
fs
stos
pop
bound
stc
popf
pop
pushf
jbe
push
in
jb
sub
nop
repnz
adc
ss
mov
ss
mov
faddp
movsl
jmp
lcall
into
ss
movsb
add
mov
cmp
test
and
lods
jb
mov
ljmp
or
lret
or
jns
clc
mov
out
pop
dec
mov
js
lret
mov
je
mov
pop
dec
scas
cld
arpl
push
push
imul
loope
je
out
andb
xchg
jb
dec
divb
imul
push
inc
inc
and
sbb
clc
sahf
ret
rorb
pop
outsl
inc
fsubrs
lcall
mov
adc
incb
cmp
cmpsl
jns
ret
fwait
in
jbe
adcb
nop
fmuls
out
scas
and
and
flds
movntq
out
stos
mov
and
mov
test
xor
addr16
mov
ljmp
mov
mov
pop
mov
jne
cmc
xchg
jb
arpl
ret
insb
cmpsl
dec
arpl
repz
rcr
aad
jp
leave
cli
mov
loop
and
loopne
addr16
mov
cs
repnz
fucomi
sarb
mov
adc
out
out
addl
or
xor
mov
sahf
add
add
jae
xchg
insb
and
sbb
cmc
addr16
outsb
mov
xchg
out
into
cmpsl
dec
lods
daa
and
adc
lods
leave
mov
bound
and
in
cltd
cmc
pop
pop
or
sub
insl
iret
repnz
add
dec
xlat
push
dec
test
inc
in
xchg
push
ljmp
mov
adc
cmpsb
fwait
call
mov
inc
fisubl
dec
les
lcall
mov
enter
and
in
mov
cmp
inc
ret
mov
fistpll
mov
pop
pop
push
jl
sahf
movsl
imul
cltd
mov
cmp
fisubl
sbb
inc
sbb
aad
sbb
mov
xchg
and
xorl
or
xor
sahf
and
xor
addr16
or
loopne
data16
je
out
pminub
xchg
shl
cmpsb
lea
xor
clc
mov
aaa
cmp
aaa
rclb
shl
push
data16
ret
mov
or
push
dec
jbe
lret
mov
cltd
cmp
mov
mov
insb
mov
push
jnp
js
les
xchg
loop
cld
loope
stos
cli
inc
dec
mov
push
jmp
or
out
test
and
lret
push
arpl
sbbl
dec
outsb
in
mov
sub
jmp
pop
shrb
repnz
inc
cmp
add
mov
pop
add
sub
aas
push
getsec
shrb
xchg
push
mov
and
roll
dec
push
or
mov
push
fsubrs
rorl
mov
xchg
loop
mov
scas
sub
cwtl
icebp
nop
and
mov
sub
xchg
test
add
jmp
pushf
sub
xor
push
cmpsl
and
jns
ja
andl
dec
adcl
adc
mov
add
jne
into
aad
sub
imul
shll
lods
xor
sbb
mov
movsl
orb
mov
inc
rolb
sbb
call
in
dec
sub
dec
repz
cmp
or
movsl
in
jmp
std
in
mov
push
pop
add
xorb
mov
mov
sub
push
push
push
adc
pusha
inc
xor
je
jb
les
cmp
mov
or
les
xchg
bound
inc
lock
xor
in
and
sarb
xchg
shlb
or
xlat
push
out
jecxz
imul
mov
xchg
ret
push
and
or
sub
pop
mov
dec
xor
and
lods
cmp
xchg
frstor
xor
or
je
sti
test
and
jmp
jbe
jae
roll
inc
xor
mov
adc
push
movq
jmp
cld
lret
jb
dec
and
mov
add
mov
test
enter
in
lret
sarl
cmp
lcall
xchg
leave
add
add
stc
sbb
mov
popf
dec
out
adc
xchg
pop
sub
mov
adc
mov
sub
mov
fistl
repz
pop
movsb
sahf
iret
xchg
in
lahf
sbb
sti
mov
or
in
rcrb
fwait
mov
jle
push
and
inc
and
dec
test
int3
cmp
mov
push
aas
ret
outsl
add
push
cmp
pop
cmp
in
fdivr
fwait
push
popf
sbb
sub
icebp
lods
in
leave
mov
adc
jno
enter
dec
test
lcall
jne
ja
mov
dec
push
xchg
arpl
and
xchg
add
inc
test
int
outsl
or
and
loop
into
jbe
aam
add
or
sbb
dec
inc
imul
into
jl
mov
fbld
sahf
pop
mov
pop
jns
dec
jecxz
in
jl
mov
adc
add
stos
cmc
xchg
mov
js
mov
pop
xor
ret
push
or
ja
dec
filds
shlb
sub
stos
sub
mov
aas
outsb
pop
popf
pushf
out
adc
jmp
mov
gs
pop
push
stos
les
lret
add
and
sarl
lods
testb
aad
mov
pusha
stc
pop
fwait
adc
adc
lods
dec
sbb
repz
dec
push
xchg
repz
xor
pop
mov
shl
mov
xchg
shl
or
xor
pop
xchg
in
lahf
out
fwait
sbb
push
sar
insl
inc
inc
lret
movsb
hlt
popf
mov
push
sbb
push
xor
std
xchg
bound
loop
adc
sarl
inc
fldt
mov
inc
jae
add
lret
dec
cmp
or
mov
push
jo
jg
aaa
push
pop
mov
loope
push
or
mul
xor
jbe
sar
dec
test
dec
mov
xlat
enter
scas
iret
xor
cld
jle
push
fistpl
mov
inc
test
xor
int
hlt
mov
jns
mov
sub
mov
js
incl
xor
cmpb
jbe
mov
movsb
rcrb
xchg
mov
inc
repz
jb
xchg
or
fnsave
push
push
inc
in
movsl
mov
aaa
and
xchg
adc
fistpl
hlt
mov
mov
add
xchg
std
jg
pop
stos
stc
fsubl
sbb
xchg
mov
into
mov
or
jp
lret
scas
xchg
js
add
xor
push
xchg
xor
sbb
imul
cmpsb
sub
insl
cmp
cld
or
call
mov
lods
or
cmp
mov
outsb
popf
or
aam
jbe
fcoms
dec
sub
lahf
xor
lods
and
lret
adc
cwtl
loop
ret
push
adc
sbb
call
mov
push
mov
inc
cmp
mov
jno
pop
cli
popa
jbe
pop
pop
pop
xchg
mov
or
stos
mov
mov
xor
mov
push
loope
out
outsl
sub
sbb
xchg
js
sub
call
xchg
stos
lods
pop
fwait
clc
pusha
daa
jp
hlt
imul
repnz
ljmp
addr16
sahf
fwait
inc
jo
fs
add
push
xor
ret
or
pop
repz
clc
mov
xchg
pop
cli
in
cwtl
push
adc
movsb
ljmp
rcr
and
xchg
jns
add
pop
loopne
mov
ds
and
cltd
out
daa
jbe
idivl
js
lcall
std
dec
push
arpl
scas
sbb
dec
mov
mov
pop
out
cmp
jle
mov
adcl
loopne
js
push
imul
sub
push
adc
push
add
lock
out
cld
aad
jle
mov
test
pop
mov
iret
out
adc
test
into
int
jmp
movsb
out
gs
fnsave
sarb
push
or
push
daa
or
jns
cmp
cltd
fbld
add
cmpl
add
scas
sbb
mov
xchg
clc
push
mov
xchg
push
sub
pop
cmp
dec
xchg
notb
sub
cs
aad
aad
mov
loopew
sub
inc
push
fcoms
int
pop
dec
sub
adc
adc
push
push
sbb
ljmp
shll
andb
lahf
cltd
xor
jmp
inc
mov
pushf
lock
movsl
adc
shll
aam
mov
or
sub
je
add
add
aad
mov
loope
inc
rorb
jmp
jne
push
mov
in
sbb
inc
or
loopne
arpl
cwtl
test
adc
mov
jo
inc
fidivs
dec
cmp
lods
pop
addr16
xchg
popf
ds
ret
rcll
loope
fnstcw
mov
outsl
lock
pop
cmp
ror
outsl
pushf
data16
rcll
mov
pop
inc
roll
xor
jnp
pop
fstl
and
xchg
and
das
lret
dec
aaa
cmovo
fadd
arpl
lock
xchg
dec
rclb
add
sbb
xlat
in
jp
and
loop
cmp
orl
test
test
insl
mov
aad
lock
je
mov
adc
cmp
sbb
jmp
int
jp
enter
sub
inc
jns
mov
xchg
cmp
loopne
xor
shr
cmp
jne
push
push
js
sbbb
and
loopne
sarl
push
push
xor
inc
push
jmp
cmpsb
daa
add
cmp
int
mov
and
mov
cmpsl
or
pop
aam
pop
add
iret
inc
inc
inc
fucomip
lahf
andl
pusha
add
xchg
and
lret
sbb
cli
sub
sbb
push
add
add
pop
push
xor
xorb
inc
mov
add
and
jne
sub
pop
addr16
cmpsl
jo
in
scas
ja
mov
mov
fwait
or
rsqrtps
cltd
sbb
in
arpl
outsb
xor
or
stc
sbb
xchg
and
jne
aaa
dec
dec
add
test
pop
inc
mov
clc
stos
clc
lea
pop
divl
mov
lea
push
sbbl
das
mov
mov
lods
imul
dec
pusha
hlt
insb
and
and
mov
lahf
mov
in
jp
mov
jmp
imul
cmp
dec
subl
mov
fisubrl
jae
xor
pop
pop
stos
outsb
andnps
mov
gs
dec
mov
int
xor
push
add
shll
push
inc
xor
sbb
cmp
dec
nop
les
jns
addr16
xchg
fistps
stc
decb
loopne
push
subb
into
sub
inc
mov
enter
data16
jl
lret
stos
fnstcw
out
ds
jl
jecxz
cli
push
push
adc
fistpl
fmulp
inc
out
mov
push
outsb
ss
test
cmpsl
mov
in
adc
into
out
mov
or
test
lock
sub
in
fscale
mov
cmp
lea
and
dec
enter
or
loope
jle
inc
es
icebp
nop
loopne
add
push
pushf
ja
js
inc
pusha
outsb
bound
imul
movsb
push
mov
xchg
jle
cmpsl
mov
dec
jl
jb
into
or
cmp
repnz
or
pusha
test
imul
or
loopne
xor
pop
lcall
loope
sbb
fcmovu
sbb
cmpsb
nop
add
arpl
cmp
fnstenv
and
add
cmp
lock
ljmp
test
mov
mov
mov
test
clc
test
xor
jne
sbb
xor
sub
mov
or
push
jl
adc
pop
push
fs
mov
sbb
out
lock
cmc
fsubr
sbb
xor
lret
or
aam
outsb
adc
sub
testb
shlb
fldcw
std
fimuls
pop
js
out
cld
inc
cmp
xchg
sub
jo
sbb
mov
jae
cltd
adc
test
xchg
jp
mov
sbb
out
inc
rcl
pop
jo
dec
rcrl
inc
rcr
and
jne
and
push
sub
sbb
mov
adc
dec
rorb
inc
movsl
shlb
mov
xor
pop
ds
dec
mov
loop
xor
or
ret
lret
addr16
in
mov
ret
cmpl
jle
jecxz
cmp
addr16
pop
insl
sub
aas
pop
fs
cmp
ja
or
mov
xor
mov
cltd
mov
xchg
adc
sub
inc
nop
jl
push
aas
fsubrp
sub
mov
mov
pop
js
sbb
xchg
xchg
movsl
movsl
add
dec
in
and
out
outsl
sub
or
loop
push
cmp
sub
fdivs
mov
orl
jecxz
lret
adc
addl
bound
and
test
fldl2e
mov
sub
or
cmc
jmp
mov
test
push
add
test
lods
pop
orps
pusha
cmp
pop
arpl
mov
test
cmc
xchg
xchg
test
mov
imul
adc
pushf
push
addr16
pusha
ds
pushf
int
ds
pop
imul
fst
int
pop
enter
jmp
pop
addl
pop
rcll
cmp
jae
fsubrs
movsb
loop
mov
cmp
rcrb
pop
lds
stos
sub
dec
cmpsl
test
int3
mov
xchg
push
cmp
rcll
mov
flds
sub
mov
adc
loop
mov
call
ror
xchg
es
shlb
fisubl
sti
notb
fdivs
add
jo
dec
sbb
mov
pop
clc
cmp
pop
cwtl
icebp
adcb
cmp
jne
dec
cmp
test
dec
sbb
xor
lock
mov
push
fistpl
int
arpl
imul
push
inc
divb
ds
mov
cmc
addr16
mov
int
pusha
loope
sbb
test
pushf
mov
xchg
cmp
xor
cmpsl
ret
push
lahf
dec
into
stos
mov
pop
iret
aam
test
lahf
jne
push
cld
jno
cmp
xor
jg
jns
sbb
ret
sti
sbb
pop
fnstenv
sbb
cmpsb
jp
xchg
sbb
adc
lea
shlb
fwait
xor
mov
fldt
pop
and
in
fistl
and
das
or
pop
mov
xchg
add
popf
loop
mov
lds
sbb
jmp
jge
sub
cmpsl
gs
inc
cwtl
popa
fldt
add
jo
mov
pop
lahf
inc
dec
loope
ss
adc
mov
jbe
sub
in
cwtl
sbb
push
adc
adc
addr16
out
fsub
mov
or
ja
int3
pushf
dec
pop
or
mov
dec
test
fwait
sbb
jnp
add
xchg
repnz
fbld
fwait
lods
mov
stos
scas
stos
addr16
sub
mov
inc
test
mov
orb
or
mov
inc
mov
xor
sbb
jb
popl
sub
std
pop
imul
aam
leave
fists
jbe
outsl
leave
dec
sbb
movsl
cld
mov
dec
scas
dec
sahf
jp
jo
cs
cmp
call
maxps
jns
cs
mov
cwtl
cmc
popl
xchg
mov
stc
jae
pushf
push
inc
sbbb
es
add
iret
in
ss
inc
aad
pusha
pusha
sub
mov
mov
fidivl
xor
mov
in
iret
and
jmp
mov
push
mov
cmpl
jbe
mov
or
ja
cli
mov
jg
add
jmp
outsl
cmc
push
mov
sbb
jo
fldcw
sbb
xor
addr16
lret
push
add
and
cmp
sahf
ret
ret
pop
add
aas
clc
rcl
dec
add
or
pop
out
stos
jne
push
cmp
pop
cli
bndstx
je
push
sbb
icebp
xlat
sti
xchg
rcrb
mov
leave
into
push
test
jp
mov
lret
adc
cwtl
sti
add
rcrb
movsb
jp
lret
xchg
frstor
jmp
jb
stos
jecxz
sub
icebp
dec
mov
push
in
je
xchg
cmpsb
adc
lcall
fsubrl
add
insl
out
mov
test
xchg
lds
loop
mov
inc
aam
push
or
xchg
mov
outsb
mov
jmp
dec
push
int3
jl
rol
pop
fsubrp
sti
dec
mov
jbe
pop
jl
mov
je
or
stos
adc
pop
mov
dec
xlat
cmpsl
inc
ret
mov
jno
xlat
push
xorl
pop
mov
xlat
pop
iret
bswap
mov
mov
les
jmp
push
mov
sub
cmp
mov
and
stos
sahf
push
push
test
insl
sub
inc
roll
scas
hlt
fs
push
push
out
mov
mov
outsb
add
add
nop
dec
adc
ret
or
shll
push
std
pop
push
inc
andb
inc
lods
call
xchg
outsl
scas
scas
call
mov
and
sub
jp
xchg
xchg
das
shll
hlt
pop
dec
rol
and
je
repz
imul
insb
inc
xor
ljmp
pusha
rclb
pop
shll
aaa
xchg
mov
xchg
sub
leave
jb
andl
dec
outsb
mov
push
sbb
sub
je
loopne
pushl
pop
xchg
mov
ja
jne
sub
sbb
test
cld
inc
cltd
cld
test
out
stc
inc
mov
xchg
ljmp
sti
les
nop
mov
shlb
inc
js
pusha
pop
lods
sbb
jmp
popa
mov
sub
add
xor
xchg
rcll
aam
cmpsl
mov
cltd
das
orl
mov
sbb
push
test
movsl
out
cmp
jae
xchg
mov
pop
push
icebp
mov
push
xor
ret
orb
int3
sbb
sub
pop
jno
dec
or
lods
inc
and
orl
pop
iret
xor
push
push
sub
push
lds
and
cmpsl
add
inc
aaa
jnp
and
addr16
jl
dec
cmpsl
pop
jecxz
and
into
xchg
inc
ret
insl
idivb
fsubl
cmpsb
mov
ret
jbe
xchg
lahf
shr
sbb
push
lea
push
inc
sub
inc
adc
xor
sub
inc
ss
jns
movsb
cmp
dec
mov
or
add
xor
mov
in
push
xchg
xchg
fisttpl
sbb
push
inc
mov
push
sbb
clc
lret
dec
les
mov
pop
inc
mov
into
test
mov
mov
in
bnd
add
adc
mov
sbb
inc
pop
outsb
sbb
andb
iret
push
flds
cwtd
mov
lcall
hlt
cmp
cmpsb
xor
popf
sbb
inc
inc
cmpsl
jbe
sub
xor
call
ss
lea
cli
jmp
rclb
xlat
adc
xor
dec
pop
out
clc
stc
push
data16
cmpsb
fiadds
test
test
out
sub
fs
xchg
orl
lret
or
adc
add
jp
or
loopne
or
inc
scas
pop
xor
mov
out
test
fists
mov
or
xchg
pop
insl
and
xchg
les
out
cmp
push
pop
pop
jg
sar
cltd
inc
push
pop
ficomps
and
dec
cld
out
or
sbb
dec
inc
cli
mov
push
sbbb
cld
popf
mov
scas
in
sbb
mov
jne
dec
aas
int
leave
sub
in
out
lds
add
into
or
pop
sahf
stos
int3
xor
inc
mov
mov
das
inc
inc
sbb
jmp
data16
dec
and
dec
mov
sub
roll
cmp
add
pushf
xchg
mov
xor
pop
jo
aad
pop
add
xchg
lods
test
iret
jne
pop
mov
adc
clc
ret
push
aaa
sub
stos
or
iret
les
outsl
mov
jge
xchg
rep
cmp
leave
inc
popa
jle
cmpsb
xor
or
test
fdivs
push
sahf
cli
test
inc
inc
cmp
cmp
dec
inc
lds
xor
mov
and
cmc
xchg
int3
aaa
fistps
loopne
jo
cmpl
cmp
test
mov
sbb
hlt
and
addr16
xchg
add
sbb
sbb
pop
mov
jge
fcompl
mov
xor
xor
popf
or
jno
push
rcr
sbb
notl
inc
loope
cmpsl
cltd
fucomip
xorl
sub
nop
mov
sbb
sbb
mov
ret
filds
js
outsl
mov
cmp
sbb
dec
imul
dec
mov
xor
mov
pop
mov
mov
iret
xchg
xchg
pushf
or
pop
push
jp
pop
mov
pop
pop
or
dec
icebp
sub
xlat
leave
aam
imul
sub
out
dec
mov
pop
sahf
inc
mov
andl
ljmp
jecxz
mov
int3
sub
call
xor
sbb
cmp
js
ja
dec
or
pop
cmp
cmpsl
dec
cmp
lock
mov
mov
mov
fsubl
movsb
add
xchg
stc
mov
dec
nop
add
popf
sar
outsb
xor
lock
cld
mov
test
out
lea
and
xor
jo
pushf
filds
sub
sub
pop
fwait
or
pop
test
les
push
mov
sub
fsqrt
xchg
mov
adc
lcall
xchg
mov
lret
jl
or
cwtl
enter
sarl
push
push
out
xchg
cli
sub
icebp
int
push
insl
xor
fs
rcr
sbb
lret
lret
xor
cmp
xorb
adc
test
jge
aaa
xchg
mov
dec
loopne
not
aam
fildl
mov
xor
mov
push
adc
jns
or
fucom
dec
loop
les
xor
loopne
cmp
inc
and
adc
shl
inc
leave
inc
push
cmp
or
popa
dec
add
adc
popf
jbe
bound
and
dec
mov
lret
dec
add
mov
fs
sbb
cmp
mull
aam
dec
sbbl
xlat
stos
or
stos
mov
cmpsl
mov
lods
dec
pop
mov
adc
mov
add
mov
aaa
stos
cmp
inc
movsb
lock
dec
fists
sbb
mov
fsubp
cs
mov
jno
lods
xchg
add
scas
shll
cmp
enter
jl
ret
test
lcall
sarb
cltd
mov
out
mov
data16
inc
sub
xchg
in
and
dec
xor
dec
pop
es
mov
add
jbe
xchg
mov
xchg
out
lea
and
or
incl
iret
stc
cmp
jb
dec
mov
das
xor
repz
adc
adcb
inc
mov
push
in
push
push
push
mov
push
mov
sbb
mov
sub
adc
repz
xor
out
mov
cmp
and
addr16
mov
xchg
mov
scas
mov
fsubrl
mov
push
leave
aaa
pop
nop
xlat
xor
pop
add
leave
pop
pop
cmp
inc
lea
inc
mov
gs
movsl
fsubrs
call
inc
inc
mov
pop
test
sub
push
inc
lods
pop
mov
aas
jnp
mov
add
aad
sbb
mov
or
dec
popa
and
push
fsubl
sub
stc
popa
test
sub
hlt
sub
inc
test
push
cwtl
xor
divb
add
push
mov
shl
pop
add
frstor
movsb
fs
popa
add
into
mov
dec
lods
sub
inc
sub
cld
pop
imul
xchg
and
pop
lret
movsb
push
pusha
cmp
mov
dec
and
int3
lret
or
push
nop
mov
mov
jg
cli
mov
mov
pop
lock
xor
fistpl
xor
pusha
mov
cltd
movsb
je
stos
sbb
jo
nop
jle
rolb
sub
mov
repz
and
mov
call
ss
xchg
shlb
mov
addr16
mov
jns
mov
pop
xchg
mov
mov
inc
adc
scas
pop
or
movsl
or
clc
cmc
mov
test
and
inc
jg
std
out
rcpps
adcb
arpl
nop
cmp
xor
mov
mov
lahf
adc
inc
fistl
out
mov
movsl
aaa
and
jns
fiadds
jne
addl
jae
push
shlb
sti
xlat
push
sub
dec
mov
lcall
dec
shll
mov
lahf
inc
popf
sbb
add
rorl
xlat
pop
sbb
sarl
xor
out
repz
aad
out
add
icebp
jb
and
into
cmp
dec
adc
jg
lcall
mov
test
cmpsb
loop
cmp
mov
lret
sub
mov
in
mov
add
and
dec
imul
fisubl
imul
std
cmp
dec
je
or
fsubrl
push
pop
xchg
lods
push
imul
aad
aad
xchg
addr16
imul
and
ljmp
jae
xchg
aas
cmp
cmp
imul
mov
pusha
xor
push
mov
xor
or
mov
dec
sbb
pushf
mov
jle
test
add
in
pop
fsubr
pop
and
sub
iret
and
jp
xor
lcall
dec
add
mov
lret
daa
iret
xchg
shlb
cmpl
daa
xchg
test
cmp
push
rolb
mulps
imul
inc
stc
loopne
ljmp
aam
popf
mov
repz
dec
or
push
out
xor
add
sbbl
mov
stos
stos
and
add
add
xor
hlt
jbe
mov
lea
push
push
jns
mov
push
mov
aas
inc
out
lret
lcall
jmp
aad
adcb
jns
mov
in
loope
inc
cwtl
cmp
test
push
mov
gs
mov
jge
fs
mov
sahf
mov
and
ret
push
das
insl
sbb
in
xchg
inc
cmp
push
loope
out
rcrb
scas
dec
jg
add
mov
adc
daa
inc
add
mov
add
sub
popa
push
adc
cmp
lahf
popf
fnsave
jne
repnz
into
jp
jbe
jo
dec
cmc
cltd
sbb
loope
leave
test
mov
jo
ror
mov
stos
sbb
scas
add
xlat
test
pop
out
les
out
cmp
loope
sahf
fcoml
jbe
pop
lock
stos
shl
jmp
pop
inc
lods
test
or
mov
out
out
xor
adc
add
inc
fwait
aaa
cld
jp
or
mov
inc
fbstp
shl
sbb
push
xchg
loope
xlat
mov
sub
pop
repz
bound
pop
inc
test
inc
out
dec
mov
icebp
subb
gs
sbb
push
int3
mov
scas
lahf
or
adc
std
inc
inc
mov
xchg
jae
pop
push
in
andb
add
orb
mov
enter
cmc
jns
mov
pushf
push
lcall
fstps
or
add
pusha
push
pop
rcll
js
and
jb
inc
pop
sarl
xchg
jo
stos
xorb
loop
lock
inc
fwait
jp
mov
ret
aad
xlat
mov
std
shl
daa
inc
shrb
stos
int3
out
push
js
lahf
cwtl
ljmp
mov
ret
out
adc
test
jno
fsts
sbb
aas
nop
sahf
and
mov
cmp
xchg
sahf
lahf
inc
test
sbb
jae
push
dec
lret
lods
jp
mov
jmp
mov
push
mov
scas
adc
test
mov
push
dec
ja
lcall
xlat
lahf
pop
divl
jecxz
fcoml
data16
mov
lret
rcl
loopne
sub
cmp
testl
and
xchg
call
mov
dec
pop
sbb
test
jbe
push
rcll
rorl
push
push
dec
mov
cmp
adcb
orl
mov
add
push
mov
xchg
xor
out
fidivl
mov
stos
jg
shld
loop
in
cmpsb
xorb
mov
adc
push
std
xchg
aam
mov
fstps
shlb
jno
ret
adc
dec
pop
cmp
scas
not
fimuls
aas
fidivs
and
fwait
xchg
xchg
test
add
cmc
mov
sarl
cltd
cwtl
in
psrad
dec
ljmp
mov
push
push
lahf
and
in
or
mov
imul
adc
stos
das
add
or
inc
mov
inc
mov
mov
jns
pop
call
inc
iret
jno
mov
jo
jb
and
hlt
jnp
add
xchg
sahf
inc
popf
xor
aad
adc
cwtl
mov
jl
push
xor
fmuls
cmove
leave
bound
mov
or
and
or
lret
aam
mov
jb
outsb
movsb
scas
cmpsb
and
and
out
adc
cmp
cmpsl
outsl
jge
add
test
ret
or
inc
sbb
add
stc
pushf
ret
mov
dec
scas
push
push
jecxz
ds
push
lret
lcall
out
fidivrs
insl
fbld
mov
push
loop
mov
aam
lahf
notl
imul
outsl
jl
arpl
hlt
mov
sub
jle
sub
fmuls
adc
js
enter
mov
fimull
fnsave
sbb
out
insb
dec
fldcw
or
mov
pop
movhps
repnz
push
mov
fdivrl
push
popf
roll
insl
adc
test
xchg
add
xor
clc
dec
lret
xchg
pop
call
inc
add
mov
push
leave
cmp
or
inc
or
jl
stos
cmp
adc
add
sub
push
mov
das
xor
fistl
xchg
push
outsl
into
and
cli
mov
sti
hlt
icebp
leave
push
and
addb
ss
stos
xchg
scas
cmp
ja
stos
scas
dec
fistpl
and
mov
push
rcrl
xor
xchg
push
enter
jae
rorb
int
fsubl
repz
push
cld
fsubs
fwait
and
movsb
loope
push
in
xor
xchg
in
or
iret
jb
lret
mov
inc
out
iret
mov
add
out
lds
or
inc
adc
sbb
int
inc
cmp
xchg
adc
les
lahf
sbb
pusha
test
arpl
les
inc
pop
sub
adcb
jo
popf
mov
cmpsl
fcmovne
push
or
dec
das
jb
pop
inc
mov
xlat
mov
xor
inc
pop
jnp
sbb
mov
adc
inc
mov
push
scas
and
jo
adc
add
mov
outsb
int
push
lret
sbb
rcl
cmp
inc
jae
jmp
push
daa
ds
ret
pop
scas
adc
jg
movsl
cmc
xchg
xor
or
xchg
nop
jmp
push
or
rcrl
mov
pop
shlb
fisubrs
push
pop
mov
mov
cltd
dec
lcall
in
xchg
dec
mov
sbb
ret
orb
cli
loope
inc
jne
imul
sbb
xchg
adc
jo
inc
inc
or
mov
jmp
hlt
stc
outsl
lret
mov
insl
stos
aas
cmp
jle
gs
in
aad
jae
dec
mov
inc
cmpsb
cmp
sahf
ss
in
xor
sbb
lret
adc
pop
cld
xor
roll
jmp
jge
cmpl
call
int
scas
shrb
out
xchg
sub
fidivrs
nop
je
and
jnp
outsl
jmp
pop
stos
fmulp
cmp
movb
insb
mov
outsl
add
es
mov
cmpsb
ret
dec
lret
iret
push
sub
or
popf
jne
jbe
test
or
in
mov
cmp
int3
mov
pop
bound
xor
dec
orl
sbb
mov
xor
mov
jp
pushf
out
adc
xchg
mov
pop
call
sub
aaa
xor
sub
icebp
cmp
lcall
es
test
sbb
mov
jp
arpl
ja
xchg
mov
or
into
cmp
cwtl
mov
sarl
out
pushf
aad
movsl
imul
adc
mov
pop
jecxz
stos
jl
aaa
jnp
adc
cltd
push
jo
xor
arpl
push
movsb
mov
out
in
and
call
repz
sarb
cmp
arpl
std
cmpsb
lcall
xor
out
mov
xor
add
jns
je
push
stos
ja
xchg
enter
adc
cmp
cmpsb
addr16
add
mov
cmp
pushf
pushf
sahf
adc
and
add
jg
lahf
xchg
jno
push
xchg
push
cmc
xor
insb
push
xchg
mov
icebp
xor
sub
push
jl,pt
fsubs
mov
jg
in
int3
aaa
mov
pop
ljmp
add
sbb
cmpb
cmc
call
adc
stc
xor
mov
shlb
lret
mov
das
pop
daa
lock
and
jp
mov
add
fimull
dec
aam
mov
test
lret
fs
ja
js
add
ja
push
ds
out
hlt
and
jbe
ljmp
add
mov
test
push
cmp
sub
gs
iret
int3
push
out
sbb
lock
push
rolb
and
mov
xchg
push
enter
inc
dec
ja
and
mov
fidivl
jecxz
push
stos
cli
test
fwait
lods
in
cwtl
xchg
mov
je
jle
call
inc
fwait
or
andb
mov
pop
lahf
or
xor
sub
jbe
movb
pop
dec
dec
mov
jg
dec
sbb
cwtl
ret
or
lea
arpl
fucomip
adc
mov
mov
push
pop
inc
jbe
xlat
push
push
imul
mul
jo
iret
cmpsb
sbb
call
add
jge
jecxz
cmp
into
mov
xchg
ss
push
cmpsl
in
or
movsl
loop
call
into
sahf
inc
sub
or
sbb
or
push
push
subl
hlt
leave
aam
sub
sar
out
cmpsl
mov
jg
sub
je
xor
cmp
add
or
cmp
adc
inc
popf
xchg
push
imull
jae
and
cmpsb
dec
xchg
lcall
pop
mov
xor
inc
cmpsb
clc
insb
mov
daa
adc
pop
xchg
out
xchg
dec
inc
popa
add
xchg
push
movsb
std
push
dec
cmpsl
popf
jge
divl
or
jae
dec
dec
cmp
inc
add
into
incb
lret
rcr
fcomps
jb
xchg
iret
cld
pop
insl
insb
mov
pop
rol
mov
scas
jb
arpl
sahf
add
fwait
rcrl
mov
sub
sahf
fnstsw
add
test
sub
cwtl
mov
std
sarl
pop
aaa
add
sub
iret
cmpsb
push
jg
ja
cmpsb
mov
push
stos
sti
addb
mov
outsl
pop
fistps
xor
stos
cmp
lods
mov
and
xchg
and
cmp
push
in
arpl
int3
add
push
outsl
mov
mov
add
mov
push
push
mov
lods
int
mov
jle
and
cmp
imul
jno
push
push
shll
jle
pop
dec
xlat
outsb
test
daa
rcl
sub
sbb
into
adc
sbb
mov
xlat
outsl
insl
cmpsb
mov
gs
popf
dec
roll
sbb
lods
lock
es
pushf
mov
rolb
mov
pop
or
jecxz
scas
jb
jae
mov
loop
into
push
call
addb
movsb
cmp
fwait
cli
outsb
movl
aam
ret
sbb
xlat
dec
add
cmc
lea
andl
sub
pop
addr16
sbb
ja
iret
or
adc
push
aam
pmuludq
mov
hlt
xchg
ret
inc
jl
in
insl
mov
movsl
mov
int
pop
mov
clc
inc
add
push
inc
into
int3
xchg
shrb
mov
push
mov
pop
xchg
loop
or
inc
rorl
xchg
and
fldlg2
sti
fdivrs
in
xchg
xor
cmp
into
cltd
push
pop
adc
pushf
mov
mov
test
push
jnp
ret
mov
dec
push
daa
sahf
sbb
in
cmp
cmpl
scas
out
in
mov
pop
and
pop
dec
lds
sub
scas
sbb
sbb
jecxz
inc
add
mov
push
xchg
pop
rclb
xchg
mov
loop
mov
adc
cmc
add
and
out
dec
xchg
add
mov
shrd
imul
jno
jo
aad
or
mov
daa
ds
jns
or
in
pop
dec
push
out
roll
pop
push
lcall
adc
push
jnp
pop
add
xchg
push
inc
es
jo
data16
insb
dec
cwtl
and
push
lret
and
shr
movsb
inc
imul
sbb
nop
push
mov
test
daa
out
int3
sub
lret
xor
es
enter
je
outsb
lods
dec
cmpsb
pop
call
cld
in
cmp
js
aaa
cmc
addr16
xor
mov
cmp
int
ror
mov
fldenv
adc
xlat
inc
adc
int
pop
lahf
mov
or
mov
mov
and
incl
int3
push
mov
gs
fs
cli
add
xchg
and
mov
outsl
repz
in
lods
fsubl
xchg
rcrb
cmp
dec
jecxz
push
push
inc
push
out
fsubs
and
cmc
repnz
rcrb
and
hlt
insl
mov
inc
dec
pop
adc
arpl
testb
sbb
inc
in
nop
push
test
mov
js
add
movsl
push
mov
mov
xorb
divl
xchg
cmp
sub
lcall
jae
push
xchg
data16
jle
lahf
dec
roll
stc
js
stos
inc
faddl
popf
add
test
test
xchg
jns
cmp
inc
sub
xchg
popa
xor
mov
push
mov
repz
fisttpl
aaa
push
xchg
into
cmpsb
idivl
mov
adc
leave
in
fisubrs
xchg
lock
int3
es
cmpsb
jbe
mov
mov
movsb
xchg
or
xchg
shlb
xchg
fwait
jne
in
mov
iret
mov
dec
ss
or
loop
cmpsl
arpl
push
ja
rclb
test
push
mov
mov
mov
sub
push
adc
xor
or
add
ljmp
out
or
aaa
xor
into
dec
lret
popf
add
arpl
cmp
into
and
sbb
das
pop
sub
dec
and
or
flds
xchg
and
inc
ret
cmp
lock
cmp
les
insb
mov
push
les
xchg
lods
pop
or
mov
inc
adc
or
mov
or
or
stos
and
mov
int3
or
cmc
shrb
fdivrs
pop
sub
cmp
je
movsl
fldcw
in
addr16
rcr
jmp
xor
cmp
pop
lret
aaa
jmp
jno
add
adc
dec
inc
xorb
xchg
in
addr16
add
push
lock
sbb
xchg
mov
dec
mov
negl
les
lahf
pop
stos
jmp
xor
mov
dec
sahf
pop
jge
inc
push
xor
pushf
test
js
add
push
inc
adcl
out
jo
lcall
or
out
dec
jne
push
jne
bound
mov
inc
in
in
sbb
cmp
test
xchg
leave
popf
jg
hlt
loope
push
inc
pop
dec
sbb
sarl
ljmp
mov
dec
cmp
dec
xchg
cmc
leave
test
ret
and
jae
jb
shrb
jne
rcll
orb
adcl
out
push
test
pcmpeqd
push
add
cmp
fbld
add
dec
mov
jne
ficomps
and
fstp
mov
cltd
int3
sbb
cwtl
inc
sbb
addr16
divb
sub
or
fnclex
nop
ret
mov
cwtl
inc
jne
mov
sbb
notb
scas
sti
and
and
sbb
daa
jo
cmp
daa
cmpl
xorb
sar
inc
pop
jge
jns
mov
iret
jo
and
push
in
inc
and
push
setl
mov
out
lahf
ss
cmp
popaw
rcl
adc
jle
sbb
mov
lahf
push
in
rcll
inc
adc
mov
dec
leave
dec
lret
lcall
xchg
cltd
inc
mov
div
leave
add
xrelease
lahf
push
mov
cmpl
jno
dec
add
int3
dec
xchg
jmpw
mov
cmp
popf
xchg
outsl
out
jg
push
jp
pop
mov
lret
sbb
add
test
mov
mov
jp
test
into
pop
insb
sub
std
clc
mov
scas
mov
pop
cmc
mov
sahf
incb
js
mov
outsl
daa
fdivrs
fs
bound
rcl
inc
test
mov
nop
aas
sti
pop
inc
cmp
and
or
adc
lods
test
and
mov
andl
or
xchg
addr16
sub
cmp
dec
dec
lret
jne
inc
int
and
mov
or
sbb
jns
pop
lret
shll
in
xchg
adc
mov
flds
insl
dec
pop
test
repz
sub
std
ss
or
add
dec
ja
std
out
add
cwtl
xchg
add
xorl
push
push
out
imul
mov
dec
test
or
pop
lcall
cltd
fnsave
adc
xchg
sub
adc
adcb
jo
bound
rcll
push
xor
scas
or
jae
xor
mov
insl
push
stos
mov
mov
xor
xor
imul
adc
addr16
aam
pop
loopne
jge
dec
push
inc
mov
iret
hlt
rol
jp
aam
lock
jecxz
push
sbb
pop
out
addr16
pop
andl
sbbl
cmc
sub
inc
subl
cli
jl
inc
pusha
cmp
pop
lods
rcll
addb
and
rol
adc
mov
pop
inc
lods
dec
decb
or
stos
mov
das
mov
cld
loope
jnp
mov
jecxz
sbbb
sbb
dec
mov
int3
sbb
cmp
push
inc
rcll
sbb
adc
add
mov
add
xchg
sub
rclb
jle
pop
add
cmpsl
sub
outsb
fidivrl
adc
rorl
ret
sub
push
mov
stos
sbb
andl
sbb
dec
mov
xchg
jno
mov
inc
jo
mov
inc
inc
lds
hlt
mov
lods
test
cmp
add
aas
in
aam
pop
out
jl
push
adc
lea
lods
cmp
mov
push
mov
popa
push
fs
insl
jnp
rcll
dec
jb
jmp
das
test
scas
dec
outsb
scas
std
sub
rcl
push
mov
sbb
clc
andl
push
jmp
es
shrl
or
push
push
cmp
in
je
and
dec
cmp
movsb
mov
arpl
fwait
out
insb
test
bsf
aas
and
xor
daa
inc
clc
cmp
xchg
in
out
xchg
je
mov
repz
mov
jae
sbb
rolb
dec
and
lods
dec
or
cwtl
jmp
mov
jecxz
add
mov
or
movsl
in
stos
jle
jbe
jne
ja
jns
push
movsb
jo
sub
cli
and
movsb
sbb
mov
in
or
fstp
cmp
shlb
mov
mov
cmp
rolb
xchg
addr16
pop
push
out
add
mov
xor
adc
inc
mov
mov
outsb
mov
mov
fisttpl
pop
repz
ljmp
jns
andb
sbb
add
jl
sub
push
mov
out
mov
mov
mov
je
fucomi
mov
mov
dec
push
test
int3
mov
push
cmp
nop
push
push
in
cmpl
clc
or
sub
pushf
cmp
test
clc
push
pop
lret
adc
xor
cmp
cli
mov
or
cwtl
jbe
lods
mov
in
imull
xchg
lret
and
dec
push
fstps
movsb
das
aaa
xchg
sub
adc
push
cld
fcmovnbe
pop
movsl
outsb
jg
fistl
mov
fisttps
mov
and
dec
aam
pop
gs
push
fisubrl
push
push
pop
aad
nop
push
out
pop
mov
jmp
xchg
cs
jns
add
cld
dec
inc
repz
jae
stc
inc
sbb
push
test
std
sti
scas
cli
push
imul
int3
add
sbb
sbb
dec
lret
push
pop
int
fstps
clc
lea
sbb
jmp
xor
pop
xchg
pop
imul
dec
add
adc
push
xor
dec
mov
cmc
inc
movsb
frndint
sarl
adc
bnd
fidivrs
lret
inc
mov
popa
adc
dec
mov
inc
or
loopne
xor
push
pop
push
idivl
add
add
jecxz
push
jne
add
mov
push
push
push
test
adc
push
inc
mov
pop
add
fildll
cmpsb
loope
pop
shll
sbb
clc
add
jns
or
xor
sub
lods
jb
jb
pusha
jbe
call
mov
pop
xchg
call
xchg
mov
aam
push
add
jl
repnz
loopne
xchg
fs
pop
fildl
push
test
lods
sub
push
push
test
jne
jge
mov
fnstcw
pop
pop
sbb
push
int3
stos
ss
ret
je
loop
pop
inc
pop
push
and
popf
es
pop
fbld
xor
add
pop
adc
cmp
sbb
sub
adc
nop
xor
inc
iret
inc
ds
jns
inc
stos
cmp
fists
inc
clc
pop
pop
insl
cmp
sbb
ret
dec
sahf
std
mov
add
or
push
cmp
cld
jp
mov
fidivrs
int3
jp
xchg
pop
xor
stos
mov
iret
cmp
xchg
or
mov
inc
insl
in
mov
test
cld
bound
xchg
add
aad
xor
xorb
stos
outsb
cltd
je
pushf
pop
inc
jge
push
dec
subl
pop
or
xor
sbb
lods
fiadds
xchg
push
mov
adc
pusha
push
in
cs
insb
inc
ret
mov
xchg
in
or
pop
sub
jne
push
leave
mov
fdivrp
mov
lret
imul
push
lcall
psrlw
hlt
imul
int3
jl
mov
pop
add
insl
inc
jbe
pop
out
ret
jmp
push
mov
cmp
jo
cmc
in
std
dec
jno
cltd
and
aam
adc
jns
jp
daa
pop
mov
shl
adc
out
ret
xor
fldt
push
jae
ljmp
mov
jo
sub
pop
cltd
test
ror
dec
sahf
push
and
decb
jb
sbb
into
sbb
stos
scas
mov
xorl
into
mov
dec
cmp
mov
loop
xor
iret
and
cmpsl
sub
cmp
sbb
or
lea
mov
cmc
sub
or
ljmp
add
negb
add
in
push
dec
in
xchg
pusha
mov
ljmp
sbb
mov
jmp
jns
xchg
nop
xchg
repnz
or
adc
sub
test
or
or
ss
pop
add
clc
mov
jnp
jae
sub
test
cmp
test
int
loope
out
enter
xor
int3
leave
cmc
add
and
mov
xchg
cld
out
adc
cmpsb
insl
xor
fsubl
sub
or
sbb
stc
inc
daa
mov
mov
stc
push
mov
and
scas
push
aad
or
xchg
xor
mov
jmp
fcomps
inc
or
and
outsb
add
push
push
adc
aad
adc
push
arpl
add
je
out
in
xchg
test
or
arpl
push
movsl
fnstsw
notl
add
cs
pop
out
inc
push
mov
xchg
in
insl
adc
inc
js
or
lds
mov
mov
mov
sub
cmc
idivl
mov
cs
pop
and
fimull
fisubrl
iret
mov
gs
or
cmc
das
jbe
shr
insb
jmp
dec
shll
jns
cmpsl
rcrb
sbb
repnz
dec
js
ret
outsl
loop
jno
shl
jecxz
cmpsb
xchg
cmp
nop
jge
js
jne
sub
rclb
jecxz
je
mov
adc
out
out
fwait
or
cwtl
int
inc
adc
xchg
shrl
mov
lock
xchg
inc
lahf
daa
cmp
inc
xchg
mov
add
cmpsl
and
sti
sbb
push
adc
icebp
push
rorb
gs
mov
inc
loopne
popa
mov
inc
sbb
push
add
insl
jo
pusha
cmp
shlb
xlat
cmp
push
mov
pop
loop
pushf
inc
jl
iret
inc
mov
cmp
dec
fildl
sahf
std
inc
mov
jmp
ret
adc
mov
push
jne
inc
mov
sti
mov
jecxz
lahf
xor
cld
inc
mov
push
add
add
cmpsb
sbb
or
fwait
jbe
xchg
or
ljmp
jle
mov
sbb
ret
pop
mul
scas
lods
inc
test
inc
leave
std
mov
stc
and
and
push
ret
bound
jns
xchg
add
mov
pop
movsb
scas
xchg
fimull
inc
jecxz
sub
sub
insl
xchg
dec
pop
cltd
add
jbe
imul
scas
jno,pt
scas
adc
push
mov
push
mov
sub
mov
imul
jecxz
cmp
lods
xchg
dec
jle
and
int
pop
cmp
vfmadd213pd
mov
pop
push
mov
lods
add
sub
es
adc
mov
add
mov
jmp
int
js
xchg
sub
mov
dec
xlat
pop
sub
ret
scas
pop
xlat
lock
stos
das
push
xor
sti
xchg
jge
sub
andl
cmp
daa
loopne
cmp
test
mov
dec
adc
repnz
xor
ret
pop
stc
aaa
idivl
dec
movsb
test
icebp
mov
xchg
lret
jno
jge
in
sbb
xchg
jle
inc
mov
mov
cmp
mov
daa
inc
dec
push
cmp
repz
pop
cmpsl
setb
fldcw
mov
pop
mov
push
push
jge
xlat
addr16
jg
ficompl
in
int3
lahf
lods
test
andb
out
mov
mov
scas
stos
jbe
jno
mov
cmc
daa
mov
outsl
in
push
iret
xlat
sub
rclb
pop
mov
adc
xchg
js
push
xor
orl
lds
sub
jmp
push
jne
dec
psrlq
cmp
bound
lock
jne
inc
jne
pop
call
js
les
push
push
mov
push
sti
jge
push
popf
mov
popa
pop
sub
inc
jno
lret
jb
cmp
lods
js
bound
js
jnp
sbb
sub
push
shrl
mov
repz
sbb
sbb
inc
mov
cmp
notb
mov
adc
cmc
pushf
fnstenv
scas
loopne
dec
inc
push
dec
pop
mov
mov
test
test
lock
aaa
loope
lds
lahf
add
in
jb
xor
test
stos
shl
insb
dec
add
leave
inc
fistl
mov
notl
push
insl
call
add
fisubs
cmp
in
or
repz
mov
cmp
mov
mov
add
mov
and
cmp
mov
mov
andl
out
repnz
or
push
dec
sbb
mov
jmp
pop
jmp
js
icebp
sub
rorl
xchg
loop
std
or
cmp
push
sub
adc
cmp
lods
fsts
fcompl
push
arpl
insl
adc
dec
or
mov
cwtl
jg
addr16
jl
pop
sub
dec
scas
jp
dec
mov
adc
mov
pop
and
lret
mov
mov
cmp
xchg
icebp
fidivrs
and
xlat
mov
fnsave
mov
jno
jmp
popf
jp
je
mov
ret
es
pop
pop
jecxz
push
adc
mov
jnp
and
repnz
sbb
inc
jmp
fst
sahf
xor
mov
loope
out
dec
mov
adc
xchg
pushf
testb
scas
sub
mov
stos
subb
nop
shlb
jno
ret
add
fstpt
lds
xor
jns
adc
aaa
jbe
pop
cmp
jge
jmp
hlt
fbld
xchg
in
push
sbb
popa
and
jmp
mov
xlat
bound
cmp
mov
or
popf
jmp
mov
mov
fldcw
daa
out
adc
fisttpl
popl
and
sub
cmpsl
mov
pusha
gs
jnp
sahf
add
lret
lea
dec
jne
dec
inc
mov
add
cmp
popa
adc
andl
sarb
fs
jnp
data16
scas
inc
push
lahf
dec
out
je
push
roll
add
out
and
or
rolb
push
mov
push
push
xor
mov
lret
and
inc
lock
mov
dec
fucom
cmp
sub
repz
mov
xorb
add
sub
pop
adc
jle
mov
pop
movsb
sbb
mov
jns
dec
mov
fstpl
push
fwait
nop
sub
test
mov
mov
push
push
dec
mov
mov
stc
jno
sti
or
jge
jmp
icebp
nop
jo
outsl
mov
fadds
mul
cmp
out
fnclex
mov
xlat
jmp
mov
push
mov
ret
mov
shrb
cli
lods
adc
cmp
adcl
out
in
aaa
add
pop
ja
imul
sub
addb
cmp
js
mov
jb
jns
shr
cmc
rol
fs
je
adc
jecxz
mov
lock
push
out
dec
dec
mov
cmp
hlt
and
jne
bound
pop
add
pop
jb
adc
rclb
xlat
and
xor
pop
sbb
jb
int
adc
data16
mov
movsl
lods
pop
push
into
sub
cltd
jbe
sbb
dec
sti
enter
xchg
sbb
ficoml
mov
aas
movsl
dec
cmpb
mov
clc
test
jbe
adc
jg
and
mov
leave
mov
repz
pop
imul
inc
mov
daa
jns
sbb
daa
push
sarb
xchg
ja
outsl
mov
scas
xor
fldcw
mov
push
cmp
fwait
aam
add
test
fcmovnu
or
push
mov
xchg
dec
popl
mov
cmp
repz
push
pop
into
add
dec
sbb
out
push
add
and
in
xchg
xchg
pop
mov
mov
int3
add
mov
dec
jbe
data16
cmpl
inc
sbb
sub
stc
inc
in
and
jp
lea
pop
dec
xor
xor
sahf
jbe
arpl
mov
fisttpll
ds
movsl
out
xchg
ror
push
sbb
repnz
ret
aam
xchg
imul
mov
sub
pop
test
pusha
add
dec
mov
push
das
cwtl
imul
inc
lds
nop
cmc
xchg
or
out
rclb
out
js
jle
xchg
push
insb
dec
pop
rcrb
mov
stc
or
dec
ret
push
fisubl
adc
cmp
mov
adc
xchg
mov
add
mov
popf
ds
xor
hlt
or
outsb
mov
and
js
cmp
mov
sub
sbb
cmp
sub
out
fmull
and
stc
mov
sbb
addr16
scas
fcomip
adc
cmp
push
and
les
enter
sub
jl
inc
inc
pop
pop
out
pop
or
mov
pop
sahf
rclb
mov
sub
cmp
sub
and
std
push
pop
sbb
cmp
and
dec
sbb
lret
stos
push
loope
jno
push
lds
jmp
in
imul
and
clc
fisubs
jno
fdivrl
lcall
or
jnp
lahf
fwait
add
into
js
js
push
sbb
mov
xchg
sub
mov
dec
inc
pop
movsl
and
call
pusha
fstpt
pop
mov
cmp
iret
xor
les
push
inc
test
push
pushf
ret
dec
imul
subl
sbb
lcall
sbb
jmp
and
pop
xchg
add
rorb
pushf
push
cmpb
sub
fucomi
setge
test
inc
out
sub
jo
int3
lcall
adc
and
and
jge
ret
out
rcr
or
pushf
nop
add
lcall
or
push
in
cmp
pop
mov
sbb
lcall
mov
xorl
mov
mov
ljmp
popf
mov
push
scas
pop
jb
cwtl
adc
inc
mov
xorb
jg
hlt
adc
lock
pop
fdiv
pusha
data16
adc
aad
xchg
cmp
movsl
xchg
out
pop
add
andl
repz
cli
mov
imul
setb
jne
stos
aad
imull
lret
lea
fxtract
adc
xor
mov
leave
inc
stos
enter
xchg
stos
or
mov
sbb
and
sub
aas
jge
gs
add
js
xor
mov
repnz
sarb
add
dec
cmc
aad
jmp
aad
sub
clc
mov
scas
dec
vdivss
loopne
cmp
push
jb
pop
inc
add
scas
dec
jg
mov
js
lods
enter
int
dec
mov
scas
pop
popa
push
lods
xor
repnz
fwait
sbb
push
loop
fistpl
loop
sti
insl
push
divl
pop
mov
jbe
fsubr
sub
fsts
fnstcw
xor
stc
das
xchg
mov
adc
mov
dec
ds
fldt
cmpb
pop
mov
jnp
mov
inc
pop
mov
adc
cmpsb
jecxz
outsb
pop
clc
xor
dec
xchg
add
sub
clc
lods
inc
mov
fisubl
mov
int3
les
mov
scas
mov
andb
in
push
dec
adc
imull
mov
inc
sti
xor
inc
dec
sub
and
xor
in
fdivrs
or
or
push
dec
scas
iret
das
and
cmc
lods
mov
clc
pusha
addb
xchg
xchg
mov
out
addr16
fisubrs
cs
cmpsb
cmp
insb
mov
add
sbb
mov
xchg
add
adc
scas
fadds
inc
pop
pusha
push
insl
mov
xor
dec
fcomps
mov
sahf
adc
cmp
adc
cmpl
mov
and
jecxz
jecxz
and
mov
lcall
cmp
movsl
or
shlb
pop
lods
mov
sti
add
aad
fmuls
int3
or
lcall
mov
push
aam
push
dec
xor
cmp
fnstcw
pushw
in
add
int
jns
dec
mov
pop
fisttpl
xchg
and
imulb
mov
and
testl
cld
aam
sbbl
xor
xchg
add
bound
mov
sbb
push
cmp
pusha
xchg
and
inc
movsb
decb
or
repnz
inc
pop
ficoms
adc
sti
sbb
dec
jge
mov
jg
pop
sbb
popf
mov
aaa
out
add
mov
xor
mov
xchg
popa
adc
jl
inc
sub
scas
jecxz
repnz
aas
clc
ljmp
pop
pushf
rclb
nop
int3
stc
cmc
idivb
and
cmp
cmp
pushf
lea
aas
jnp
inc
std
jmp
and
mov
dec
data16
into
stc
filds
adc
add
incb
jb
mov
lret
aam
out
in
icebp
xor
adc
out
sbb
mov
mov
push
sahf
mov
repnz
mov
mov
dec
push
ss
movsl
ljmp
in
mov
mov
add
cmp
mov
rclb
pop
push
mov
addr16
imul
push
into
sbb
xchg
jmp
xor
sbb
loop
mov
fstl
mov
adc
in
or
stc
fstl
lods
cmp
xchg
xorl
out
sbb
or
cltd
leave
push
and
add
xchg
lcall
rcrl
les
pop
rcr
sarl
jne
addr16
aad
and
or
neg
or
popa
cltd
stos
mov
iret
push
xchg
mov
shrb
dec
xchg
and
and
cmc
stos
cmpsb
mov
dec
push
lea
adc
inc
test
sub
std
frstor
jnp
sarl
repnz
cmp
fbld
dec
push
test
pop
adc
lret
add
les
cmp
push
sbb
jle
sbb
push
dec
inc
cld
pop
mov
aad
cld
mov
xor
cltd
rorb
sbb
pop
lds
pop
cli
pop
stc
sub
cmp
aaa
sub
mov
hlt
fs
out
mov
int
fiaddl
in
mov
jecxz
cmp
sub
or
insb
js
arpl
push
xor
push
push
les
adc
jecxz
ficoms
pop
push
dec
cmp
fisttps
mov
ds
mov
cmp
out
inc
sub
rorb
or
pop
sub
cbtw
mov
pop
adc
inc
sbb
lock
cltd
loop
dec
mov
sti
cmp
outsl
jo
aam
xor
xchg
addr16
cmp
xchg
sbb
push
jmp
movsb
push
pop
int3
repz
jo
loop
mov
in
sbb
adc
dec
rcrl
stc
mov
test
cmp
or
scas
imul
xorl
push
das
inc
int3
mov
sub
inc
test
xlat
add
sub
push
dec
fwait
pop
std
and
shlb
inc
loope
rclb
and
sub
jb
es
int3
adc
dec
popf
aas
fdivrs
repnz
jnp
jecxz
pusha
in
pop
scas
negb
filds
and
jp
jae
aad
jbe
push
cmp
cld
popa
jne
pop
xchg
ret
adc
lret
stc
loope
outsb
iret
icebp
pusha
mov
sbb
imulb
pop
sbb
push
gs
and
mov
orl
adc
add
clc
jge
xor
xchg
mov
icebp
movsl
testl
push
jp
cld
mov
inc
jmp
push
jle
test
sub
xlat
imul
int3
mov
jb
xor
in
call
jecxz
push
push
mov
cwtl
sub
or
and
sbb
idiv
and
push
sbb
cwtl
adc
nop
out
mov
out
scas
lock
imul
cmpsb
mov
in
mov
cmp
enter
jmp
and
in
cmp
xchg
repz
jmp
leave
ret
mov
loope
pop
xlat
aaa
pop
adc
dec
and
and
mov
fistl
rolb
mov
jno
in
add
lsl
stos
lret
push
cltd
dec
cmp
pop
adc
cmovbe
fbstp
sub
lods
adc
lret
cmpsb
outsl
jae
cltd
int
ljmp
cwtl
repnz
pop
fisttpll
ds
lods
cli
xchg
dec
imul
fimuls
xor
jmp
pop
and
int3
pop
inc
xorl
in
sub
xchg
pop
test
loopne
cmp
loopne
frstor
aaa
and
dec
and
jmp
std
call
adc
ljmp
xchg
in
roll
mov
sub
stc
mov
sub
sbb
push
pop
std
es
std
jp
xor
mov
mov
jl
rolb
negb
iret
or
aas
cmp
or
sti
cltd
stos
dec
test
mov
test
dec
shlb
xor
leave
out
cmc
xorl
incb
icebp
out
add
imul
mov
fimuls
sbb
ljmp
and
test
push
xacquire
and
int3
sbb
pop
lea
xor
test
enter
ljmp
pop
je
xchg
cmpsl
ljmp
popa
les
arpl
sbb
lret
jle
sbbb
dec
sbb
xchg
mov
cmpsb
out
jae
add
test
jge
shll
xchg
jb
cmp
push
mov
xchg
iret
dec
dec
jg
add
or
mov
dec
cmc
inc
fdivrl
adc
dec
pop
or
sub
lcall
pop
xchg
adc
ret
jmp
ss
ja
jb
add
stc
jno
aaa
jo
sbb
cmc
dec
mov
fldl
jp
data16
movsb
movsl
sbb
push
pusha
lcall
ret
aam
jnp
out
mov
add
jmp
cmp
adc
leave
outsl
cli
cli
js
std
faddp
pop
inc
movsb
jnp
das
adcl
and
push
fisttps
dec
incb
mov
mov
icebp
lock
gs
add
adc
and
das
mov
shrl
inc
sbb
cmp
je
mov
sbb
jg
inc
and
inc
xor
push
jae
dec
mov
idiv
push
imul
xor
gs
imul
jg
jle
jnp
jb
fwait
mov
fcom
and
nop
sbb
cmc
fcompp
lods
adc
addr16
and
repnz
inc
sub
mov
ret
loop
xor
mov
in
push
sahf
jecxz
mov
enter
fimuls
ret
pushf
imul
xchg
pushf
ljmp
das
es
cs
push
xchg
mov
dec
movsl
adcb
movb
inc
in
lret
loop
hlt
fisttps
push
and
pop
add
pop
sti
fdivl
ret
fcompl
ljmp
mov
ja
mov
je
xchg
mov
mov
pop
ret
stos
mov
mov
mov
push
fldl
mov
mov
lock
out
xor
fwait
inc
push
cmpsl
xor
jge
cmp
mov
sub
dec
pop
aad
xchg
mov
sub
mov
lcall
or
ja
push
xchg
movsb
adc
jnp
lods
inc
mov
ret
repz
pop
cwtl
mov
jecxz
mov
jle
aaa
mov
fildl
inc
movsl
pop
jnp
add
adc
add
lods
add
std
sti
jbe
dec
mov
mov
in
loop
fwait
fs
iret
mov
shll
add
and
out
adc
dec
call
xlat
pushf
dec
int
aas
popa
dec
icebp
mov
int3
or
inc
cmc
xlat
jb
cmp
xchg
pusha
inc
int3
push
in
cltd
popf
pop
test
jg
jp
lock
cs
lds
jp
jecxz
push
or
fs
leave
adc
push
mov
outsb
test
aad
add
stc
lods
dec
fwait
xor
sub
cmp
shrl
sahf
xchg
das
cmpsl
inc
cs
sbb
xor
clc
bound
dec
cwtl
repz
pop
push
in
mov
jbe
mov
sub
adc
mov
test
xchg
das
cld
rcrb
jns
jno
dec
ret
lea
push
or
xor
mov
inc
dec
rep
in
cmc
jg
jmp
cli
and
dec
mov
add
call
mov
ds
adc
cld
dec
adc
enter
mov
loop
jb
push
jmp
loope
and
mov
cmp
insb
test
jecxz
cmp
shll
jge
mov
lret
xchg
xor
sub
mov
fmull
jg
ret
out
decb
loope
adc
pop
push
int
add
outsl
push
hlt
dec
sbbb
add
lret
or
ja
jle
std
xchg
mov
inc
loop
push
jno
jecxz
mov
or
sti
cmp
sub
add
jecxz
cmp
jg
filds
loopne
push
push
jecxz
push
cmpsb
fimull
push
mov
clc
fistpll
mov
popf
lret
fs
dec
repnz
cli
mov
jge
ds
sub
inc
mov
repnz
push
push
push
je
pop
int3
sbb
ret
cmp
test
gs
pusha
adc
in
dec
ljmp
dec
push
xor
daa
mov
cmpl
test
outsb
xchg
push
cmp
scas
dec
mov
xchg
inc
popf
dec
xorb
test
lds
xor
addr16
dec
gs
jge
iret
add
xchg
jecxz
std
mov
lods
xchg
push
pop
fisubrl
cmc
test
and
xor
enter
leave
mov
fldl2t
cmp
imul
shl
gs
sbb
inc
mov
mov
out
bound
jp
or
dec
outsb
jg
lds
mov
stc
xchg
ljmp
jne
faddp
pop
dec
mov
and
dec
test
inc
pop
scas
das
popa
or
fistpl
and
add
jns
sbb
or
pop
jo
cmp
inc
out
pop
and
inc
lret
or
les
add
in
movsb
jo
xchg
scas
inc
add
mov
aas
inc
jl
js
push
es
inc
xor
fldenv
lods
int
jno
mov
sub
in
fmuls
or
stos
in
mov
push
and
lea
subl
rolb
xchg
pop
mov
push
pop
dec
sti
jb
inc
jg
ja
jo
adc
cmp
lahf
jmp
test
jecxz
imul
mov
pop
int
in
out
dec
adc
sub
pushf
cmp
aas
inc
fisubl
cmp
mov
insl
aam
push
cwtl
mov
mov
adc
addr16
cwtl
sbb
in
xchg
sub
jae
jl
scas
or
xor
outsl
xchg
dec
test
sbb
ja
mov
enter
notb
in
repz
divps
xor
insl
fdivl
test
stos
pop
addr16
mov
out
or
pop
xchg
mov
cmpsb
mov
xchg
add
push
ja
add
lods
sbb
pusha
shl
jecxz
mov
mov
frstor
insb
mov
jge
mov
dec
ljmp
and
pop
faddl
xor
dec
mov
push
xor
call
data16
pop
mov
xchg
push
xor
pop
inc
in
je
push
xor
jmp
dec
xorb
xchg
mov
push
clc
xor
cmp
push
loope
aaa
jmp
push
mov
cmc
stos
jmp
dec
dec
or
data16
ljmp
dec
push
sti
rcl
fdivs
mov
int
imul
lods
cmp
js
lcall
test
dec
and
pushf
cltd
addr16
inc
and
sub
adc
in
jmp
jecxz
lods
or
test
adc
ljmp
enter
sti
ds
adc
push
add
cmpsb
xor
ficompl
cmp
sbb
jnp
je
daa
in
std
aam
in
xchg
dec
or
pop
mov
jo
cld
adc
imul
jg
sbb
outsb
xchg
jp
hlt
dec
lea
mov
ds
inc
cs
mov
lret
pop
dec
sbb
test
mov
loopne
aad
dec
pop
sbb
daa
mov
sbb
aas
mov
out
adc
cmp
jge
jb
ljmp
rep
adc
lods
jne
sbb
push
and
into
xor
inc
data16
and
push
mov
pop
shll
or
test
test
dec
push
and
mov
fdivs
mov
inc
push
mov
pop
mov
les
rcr
jge
dec
aam
scas
mov
xchg
popa
sub
std
movsb
int
sub
push
das
popf
xchg
dec
inc
shl
push
xchg
jl
mov
mov
notb
sti
mov
or
mov
movsb
arpl
scas
xchg
jmp
mov
popf
arpl
sub
inc
and
sarl
cli
ret
pusha
and
pop
je
int3
cmp
enter
inc
js
mov
xchg
testb
ret
sti
mov
shll
push
out
outsb
cltd
lret
add
mov
inc
fbld
push
movb
fwait
xchg
sub
loop
jae
dec
mov
jae
es
inc
pop
push
mov
cld
pushf
mov
imul
or
cmp
jno
push
fcoms
jl
sbbb
add
and
out
or
imul
test
cmp
adc
jmp
ret
scas
add
enter
and
arpl
ja
fwait
in
in
pop
sti
loope
and
mov
cwtl
rcrl
dec
pop
sub
jbe
dec
mov
cmp
pause
fsubrp
cltd
dec
adc
stc
sub
lods
mov
inc
es
dec
mov
stos
movl
jo
shrl
pusha
shlb
andb
test
add
stc
or
push
add
xchg
xor
xchg
in
cld
std
xlat
mov
rcrl
add
sub
rolb
out
pop
jb
jbe
pop
es
cltd
jecxz
mov
sub
mov
mov
out
mov
in
sbb
sub
frstor
data16
aad
insl
push
out
cmp
jo
aaa
mov
insl
testb
fwait
xchg
idivb
aam
lock
pop
sbbl
mov
std
jp
mov
shl
ret
cwtl
je
mov
lods
lods
into
jb
lret
fs
mov
call
pop
notl
inc
cltd
and
loopne
and
or
int
or
inc
pop
lods
idivb
jle
sahf
ret
lds
adc
mov
loopne
fidivl
jp
mov
jnp
xchg
mov
add
fstpl
ret
test
dec
add
push
insl
das
jmp
xchg
cmp
push
mov
pop
dec
orb
insb
lods
push
aas
fstl
mov
xchg
mov
sub
xor
fwait
lods
adc
mov
inc
push
cmp
fcmovne
clc
in
lds
push
ss
xchg
xchg
sub
gs
jmp
cltd
loopne
data16
icebp
lods
add
test
int
jecxz
and
jnp
and
cli
dec
hlt
inc
mov
je
int3
dec
jnp
loope
mov
test
div
xchg
sub
xor
lock
jbe
stos
add
cmpsl
sbb
pop
stos
testl
and
enter
mov
pop
mov
push
pop
std
test
sub
xlat
adc
clc
push
mov
xor
mov
lock
dec
jne
nop
dec
or
push
pop
xlat
xchg
repz
test
sub
jo
jo
and
push
add
pop
orl
testl
cltd
or
movl
adc
push
mov
cmpsb
lods
in
xor
sub
pop
pop
xor
test
mov
or
xlat
dec
int3
push
inc
leave
test
inc
add
xchg
cs
dec
add
or
popf
mov
push
jne
das
cmp
out
aas
imul
pushf
mov
nop
fsubs
inc
lcall
scas
rorl
out
andl
filds
in
gs
adc
xor
dec
dec
mov
or
or
xchg
sbb
cmp
das
scas
xchg
inc
push
jge
addr16
test
push
push
push
push
mov
shl
std
bound
pop
mov
lahf
sub
mov
in
stos
insb
fldl
stos
dec
out
pop
cmp
inc
or
mov
ja
cs
or
add
ds
adc
das
add
xchg
pop
jmp
outsl
shrl
leave
sbb
jns
aaa
and
push
outsl
ds
sub
test
loope
xor
mov
or
or
movsb
scas
and
lods
stos
cmpsl
aad
movsb
popf
cwtl
repnz
outsb
jp
inc
jnp
mov
fwait
push
mov
push
imulb
ss
mov
sbbl
mov
iret
push
jb
or
fistps
insl
or
hlt
push
xor
test
sbbl
loop
push
push
or
ljmp
mov
sbb
insb
push
jmp
out
pop
out
popa
fldl
in
popl
je
std
dec
xchg
imul
jge
lret
push
test
push
push
test
nop
mov
or
push
jecxz
fisttpll
into
pushl
dec
push
stos
repz
jnp
and
or
bound
popf
lea
mov
pop
stc
push
xchg
jnp
xor
xlat
push
or
inc
stc
mov
add
mov
notb
mov
lcall
repnz
ss
jo
int3
xchg
xchg
jbe
adc
pop
adc
cmp
daa
mov
push
test
dec
imul
push
decb
or
adc
add
jg
fnsave
std
fcompl
orb
sbb
or
ret
sbb
mov
sub
sub
and
pusha
mov
inc
push
xor
mov
add
push
mov
jp
sbb
mov
cld
sub
push
int3
cmpsb
dec
push
aam
add
mov
test
insb
adc
pop
stos
fwait
repnz
js
mov
xchg
fildl
or
ret
loope
sbb
jp
adc
cmpsl
mov
imul
std
imul
ficoms
es
sbbb
dec
test
dec
lret
cmp
cmpsb
sub
dec
mov
mov
pop
dec
popa
pop
cwtl
test
mov
push
ror
pop
jg
xchg
lods
aam
in
das
ror
mov
iret
insb
mov
cmc
jge
push
cmp
inc
clc
sub
enter
push
sbb
dec
mov
lret
push
sub
dec
clc
cmp
dec
jns
xchg
mov
or
xor
pop
lahf
test
pop
cmp
mov
movsb
adc
xchg
pop
ret
xchg
inc
xor
push
pop
xor
xchg
test
das
enter
ret
or
testl
sbb
sbb
imul
push
pop
push
sbb
sub
and
xchg
xchg
insl
xchg
xor
mov
out
add
mov
jb
mov
sub
jmp
sbb
jl
sbb
mov
and
mov
mov
pop
and
sbb
lahf
fisubrs
cmpsl
ljmp
ljmp
outsl
in
fwait
lar
push
lahf
jmp
fdivp
pop
pop
mull
mov
mov
js
stos
aad
cmp
cwtl
sub
mull
ret
adc
push
inc
loop
fs
pop
imul
lret
dec
mov
sub
divl
and
fsqrt
dec
clc
adc
sub
jl
jae
scas
dec
rclb
outsb
jecxz
push
adc
pushf
cld
mov
les
mov
je
or
ret
pusha
mov
mov
popf
lods
mov
dec
popl
pop
lds
push
leave
fists
int3
xchg
out
push
popf
fcmovne
sbb
xchg
pop
sbbb
nop
lret
xchg
inc
test
in
mov
add
ljmp
xchg
sbb
daa
or
pop
xor
lods
shll
arpl
jnp
inc
stos
add
inc
mov
loop
les
adc
xchg
dec
dec
movsb
jno
xchg
imul
add
mov
and
mov
push
jo
or
loop
dec
movsl
sub
inc
sub
shr
aam
lcall
push
testb
sub
arpl
hlt
sbb
hlt
add
mov
xlat
mov
cmp
notl
mov
pop
or
mov
sub
xchg
push
push
icebp
pop
xor
faddl
push
adc
add
lock
push
stos
sub
lahf
aam
lods
inc
and
mov
and
jno
xchg
arpl
pop
xchg
std
call
mov
rorb
pushf
mov
sbb
or
sub
adc
sbb
mov
loopne
ret
int3
lods
outsb
mov
inc
dec
nop
or
and
dec
xchg
in
jo
sahf
adc
jg
and
call
sbb
jmp
xor
cmp
mov
add
movsb
sbb
outsl
xlat
push
mov
icebp
adc
push
mov
inc
fpatan
ss
lahf
movsl
call
mov
div
aam
clc
cli
fmuls
add
pop
push
mov
or
test
push
sbb
lret
or
pop
rdtsc
inc
push
jg
in
daa
push
xchg
outsl
ror
inc
addr16
daa
ljmp
mov
cmp
enter
arpl
sbb
dec
cmp
mov
xchg
sahf
repnz
xor
mov
rorb
mov
test
ljmp
imul
adc
xchg
lea
mov
or
add
push
jae
pop
std
cmpsb
in
mov
sbb
mov
int3
add
ret
and
adcl
jmp
shll
jno
mov
cli
jb
loop
mov
imul
pop
aad
repz
or
stc
rolb
jne
inc
movsb
lcall
push
in
jne
aaa
xchg
cmovl
ljmp
pushf
or
or
scas
aas
jnp
lret
in
mov
pusha
xlat
push
xchg
mov
rolb
sti
hlt
popa
or
movsl
xchg
dec
pop
pop
in
sub
jae
int3
jne
clc
sti
ss
mov
mov
sbb
ljmp
dec
insl
cwtl
rolb
pushf
movsl
adc
call
sbb
into
into
into
popa
xlat
popf
js
jmp
out
into
aas
or
mov
enter
std
mov
add
imul
imul
shlb
sub
lcall
mov
jbe
cmpsb
mov
pop
and
fnsave
movsl
js
cmp
pusha
sbb
pop
mov
add
mov
jae
sub
loopne
fdivrs
ds
mov
into
fwait
jg
aad
jne
xor
jnp
aam
aam
xchg
inc
cmpsl
fnstsw
xlat
out
xchg
fldenv
pop
xorl
adc
and
inc
or
int
lods
jne
lret
fdivs
xchg
xchg
in
inc
int3
cmp
mov
adc
jmp
push
push
test
adc
in
mov
lds
xchg
mov
and
out
popa
mov
ret
add
mov
inc
inc
roll
loop
mov
nopl
jecxz
adc
adc
xor
in
mov
cmp
mov
scas
push
mov
fcomps
cld
mov
adcb
xchg
int
mov
mov
sbb
lock
and
nop
faddl
adc
jnp
cltd
lods
or
pop
sbb
xchg
cld
std
fdivrs
arpl
sbb
adc
xor
adc
or
jnp
xor
bound
mov
std
push
testl
and
lds
cs
mov
pop
fcmovnb
sbb
jge
addr16
insb
xor
imul
mov
repz
mov
mov
xchg
enter
shl
icebp
out
xchg
aam
sbb
xlat
sbb
jno
lods
xor
fimull
idiv
in
jns
fcomps
sti
stc
mov
ror
in
add
add
andb
dec
sbb
bound
popf
fcompl
cwtl
movsb
xor
leave
arpl
cmpsb
sbb
cwtl
xor
movsb
add
leave
jle
adc
subb
xor
dec
xchg
lock
pop
adc
sbb
mov
jo
vxorpd
test
or
jns
pop
sub
mov
jo
sbb
xchg
mov
mov
lods
gs
insb
rcrl
testl
loopne
lret
xchg
adc
xchg
push
jnp
push
cmp
add
sbb
sbb
push
gs
pop
xor
dec
sbb
xchg
or
sub
sub
mov
sbb
or
movb
push
roll
add
lahf
movsb
dec
loope
insl
int3
neg
adc
repz
dec
xchg
sub
call
sti
push
and
test
mov
dec
cmp
sbb
repnz
int
mov
jle
xor
cmp
and
mov
mov
adc
mov
cltd
lcall
dec
mov
xor
pop
out
sbb
cli
cli
les
int
stos
test
fs
pop
and
and
frstor
cmp
clc
or
stos
insl
repz
push
daa
xlat
call
shr
add
adc
jne
gs
mov
and
clc
inc
inc
stos
sbb
cmp
test
mov
inc
in
add
in
adc
push
scas
cmp
mov
daa
jp
shrl
mov
sub
out
gs
sub
push
dec
push
dec
pop
cmp
mov
lds
pop
fldenv
pop
scas
add
push
repz
addr16
cmp
xor
cmc
enter
or
push
lods
sbb
mov
shll
mov
rcll
xor
cmc
aad
imul
rorb
insb
adc
mov
adc
adc
leave
dec
stos
dec
lcall
mov
movsl
xor
inc
and
sub
insl
or
cmpsb
in
push
adc
sub
push
xorl
stc
sti
lcall
push
sbb
in
or
xor
pop
cs
dec
mov
test
mov
push
cmp
pop
sub
stc
pop
adc
add
xchg
inc
and
mov
add
mov
sub
push
jecxz
adc
mov
scas
cmp
xchg
add
xchg
in
arpl
pop
push
or
dec
insl
mov
movsl
cmp
or
dec
sbb
rcl
jge
sub
movsl
cwtl
cld
insb
add
or
stc
adc
repnz
xor
into
pushl
ret
sub
jbe
adc
das
roll
pop
xchg
cmp
das
ja
cmp
mov
enter
nop
sbb
mov
mov
int
cmp
or
sti
cld
push
mov
hlt
in
fists
jge
jno
rorb
or
leave
xchg
sbb
jo
pop
and
jl
inc
call
out
xorb
rorl
xchg
cmp
push
rol
add
cmp
pusha
inc
aam
mov
and
jg
add
iret
popf
pushf
push
loopne
bound
jae
cltd
popf
mov
outsl
sub
add
pop
adc
xor
adc
or
xlat
or
jmp
fldt
mov
fstl
push
shl
pop
sub
enter
ljmp
scas
pop
xchg
cld
dec
xor
cmc
arpl
in
lea
xchg
out
mov
add
call
jbe
popa
inc
nop
sub
xchg
stos
aad
mov
xor
jns
lret
and
add
or
in
jns
gs
sarb
jl
icebp
jb
iret
test
outsb
das
rclb
push
cs
pop
adc
in
mov
push
call
mov
inc
decb
lcall
add
pop
lret
xchg
and
cmp
mov
hlt
sbb
out
loop
movsb
in
mov
push
out
jnp
push
fsts
pop
jge
lcall
inc
xor
ljmp
dec
rcr
dec
sub
jo
or
cmp
loope
push
loopne
push
into
xor
sbb
sbb
sub
xrelease
repnz
int3
ret
sti
push
inc
inc
dec
es
dec
inc
push
in
flds
sbb
filds
jle
insl
arpl
cmp
in
lahf
js
push
mov
dec
mov
jnp
loopne
inc
lea
xchg
or
xchg
sub
icebp
jno
int
in
inc
fstpt
test
or
into
ja
adc
sub
lods
addb
jmp
ret
inc
ds
hlt
lods
cmc
outsb
xor
cli
ja
pop
cmp
adcb
call
cmp
mov
sub
imul
dec
sahf
in
out
cmp
inc
jae
test
dec
dec
inc
add
daa
lahf
daa
push
mov
aad
ret
xchg
fistps
jb
es
pop
add
xor
shl
lods
mov
push
adc
mov
outsl
mov
imul
or
cli
popf
sbb
dec
loopne
fsub
aaa
xor
pop
loope
stos
gs
in
mov
xor
sbb
fidivrs
in
in
push
mov
mov
cmpsl
cmp
mov
pop
pop
test
or
sahf
cmc
push
pop
jp
pop
xchg
test
mov
xchg
rcrl
sub
daa
mov
int3
and
sub
jle
cld
inc
inc
arpl
bound
hlt
or
push
push
xor
jmp
mov
popa
inc
sub
loop
mov
stos
cmp
inc
mov
push
rclb
inc
mov
cmp
sysexit
mov
fcmovnu
idivb
les
push
add
sub
jge
loop
ret
push
js
iret
add
lock
mov
push
push
and
flds
xchg
jb
inc
jo
insb
or
shll
mov
nop
dec
xor
fmuls
inc
dec
jns
cld
mov
ljmp
mov
mov
pop
orb
lret
je
dec
inc
lea
subl
psubusb
sti
mov
mov
push
imull
dec
out
aaa
push
fs
push
xchg
xchg
decb
mov
pop
gs
or
jno
pop
rcll
sub
jmp
rcrl
daa
fisubl
rcrb
lahf
gs
scas
xchg
and
sbbb
pusha
cmp
pop
add
dec
xor
dec
repnz
out
std
push
shrl
clc
cs
inc
lahf
mov
mov
mov
mov
push
xor
out
mov
mov
pop
xchg
mov
mov
fildll
inc
dec
inc
pop
arpl
dec
mov
das
aaa
stos
clc
loopne
in
or
cli
push
sahf
mov
test
aaa
pushl
jae
roll
and
iret
fsubs
xor
out
push
mov
leave
insb
mov
ja
mov
pop
inc
repnz
fnclex
scas
nop
lret
push
sbb
in
dec
call
or
lret
sub
mov
lea
adc
or
cwtl
fwait
lret
xchg
mov
ja
mov
pop
addr16
loopne
mov
lret
fcoml
popf
test
cwtl
sbb
push
or
in
in
xlat
or
xor
pop
xchg
mov
sub
cmp
push
or
sbb
mov
cmp
stc
es
add
rcll
loope
sbb
in
test
ds
insl
jl
subb
inc
shll
push
pop
push
add
inc
repnz
loope
lds
shlb
pop
jmp
cmp
sbb
cmp
jb
jbe
sti
cmp
add
or
pop
jecxz
decb
imulb
sahf
cltd
jg
xor
push
sbb
mov
in
cli
adc
or
push
xchg
push
bnd
jne
cmp
inc
or
adc
lcall
pop
mov
ret
xchg
cmp
test
sbb
ret
xchg
pop
fwait
mov
and
xlat
and
sahf
fstpl
fs
imul
cld
mov
out
shrl
hlt
addr16
movsl
xor
pop
jbe
popf
mov
scas
popf
stos
fisttpl
push
pop
pushf
inc
arpl
sbb
push
mov
jge
ror
mov
ljmp
sub
aaa
or
xchg
jg
aaa
mov
sbb
int3
add
and
mov
xchg
sarb
ljmp
xchg
shl
int3
in
add
into
fiadds
sub
pop
mov
mov
mov
jo
pop
lret
jp
jbe
mov
sub
lods
fcmovnu
hlt
jmp
nop
mov
aam
out
dec
stos
in
mov
pop
mov
mov
cwtl
add
jb
mov
mov
mov
push
adc
fnsave
mov
pop
jp
mov
std
add
loope,pn
push
stos
enter
lock
mov
mov
push
rorb
data16
call
dec
lret
sbb
xor
stos
xchg
push
movl
jecxz
sub
push
xor
test
jbe
test
orl
and
sbb
jmp
data16
pop
mov
outsb
sbb
insb
xor
and
mov
xchg
cmp
dec
xor
scas
cmp
push
dec
notl
dec
dec
sarl
sahf
stos
inc
popf
ds
ljmp
iret
pop
shl
sarl
es
pop
and
mov
fiadds
sbb
fbstp
adc
shrb
dec
xor
cmc
cmp
dec
ret
pop
dec
in
insb
lret
mov
outsl
insl
stos
xor
outsl
or
pop
push
or
mov
out
rcrl
push
shrl
sbb
fadd
lahf
mov
notb
into
lret
sbb
and
sbb
aaa
or
xor
push
inc
xchg
jmp
adc
sarl
mov
test
in
pop
pop
mov
cmp
jae
mov
stc
out
sub
out
imul
mov
faddl
dec
cmp
pop
jge
shll
cmp
ja
cmpsl
sub
and
sub
jp
push
out
inc
add
push
mov
xchg
jecxz
and
adc
or
mov
sbb
ficoml
xchg
mov
sbbb
mov
inc
scas
call
sbb
add
mov
sub
xchg
jne
hlt
mov
imul
pop
jo
sbb
movsb
cmc
into
jge
stc
jns
adc
notb
dec
push
and
pop
mov
pop
popa
data16
sub
mov
lods
sahf
cmp
adc
and
icebp
jnp
iret
xor
sub
or
repz
into
imul
jle
bound
rcrl
dec
push
inc
or
push
call
cmpb
sbb
add
pop
js
cltd
dec
mov
mov
pop
iret
nop
cmp
xchg
add
imul
test
popf
mov
push
or
leave
push
push
pop
in
movsb
and
jle
fistpll
scas
dec
mov
xchg
test
lds
out
lds
les
push
pop
jo
pop
cmp
mov
sbb
adc
xchg
push
add
sbb
into
mov
in
lret
lods
nop
jg
cmp
fcomps
dec
adc
sub
jns
cmp
test
mov
pop
jp
xor
inc
std
mov
adc
in
daa
arpl
sub
stos
mov
mov
ja
xor
dec
loop
pop
inc
push
cmc
je
mov
mov
mov
cmpsl
lcall
or
xchg
mov
mov
push
sbb
fsubs
dec
bt
xchg
movsl
adc
mov
fxtract
mov
popf
xchg
sbb
sahf
xchg
popf
fldl
cmp
lods
shrb
je
xchg
mov
sub
out
out
in
mov
popa
aam
mov
cli
and
xor
jl
movsl
dec
jmp
stos
shlb
xchg
sbb
test
in
loopne
lods
jae
pushf
jecxz
jne
fdivrs
ret
xchg
and
pop
mov
repnz
jge
inc
int3
cmp
lds
add
or
mov
jp
mov
pop
or
lods
and
loop
add
pop
mov
mov
xchg
repnz
jne
cmp
loopne
dec
push
pop
lahf
rolb
scas
sbb
mov
pusha
inc
aas
jg
jecxz
in
outsl
sub
fincstp
cmp
jecxz
inc
fcmovnb
xor
int
dec
sub
mov
mov
xor
rcrl
inc
fdivr
rcrb
gs
and
or
fistps
cmpsb
mov
push
xchg
in
das
loop
mov
push
sbb
push
push
adcb
or
sbb
sub
push
push
rcrb
sbb
pop
cwtl
das
cwtl
addl
dec
stos
jle
xor
sbb
int3
out
push
pop
mov
xchg
jl
jl
dec
xlat
idivl
inc
add
cmp
hlt
push
and
ja
xor
adc
or
push
jge
sbb
mov
jmp
scas
popa
test
jp
sbb
jecxz
dec
mov
xlat
inc
bound
rcl
test
aas
lahf
or
divb
xchg
inc
div
xor
xchg
pop
cmc
data16
rcrl
or
stc
push
xor
sub
jb
push
popf
xchg
or
roll
pop
fsub
mov
test
sub
adc
fs
inc
push
and
or
pusha
into
pop
mov
cmp
mov
stos
dec
push
popa
mov
xor
bound
cld
fcoml
fmuls
dec
xchg
cmc
jo
jg
aaa
fstpt
or
xchg
adc
pop
or
lea
cli
mov
lock
lcall
ret
pop
ljmp
mov
clc
lcall
popa
test
lret
sub
testb
stos
fs
pop
push
rorb
mov
pop
ret
xchg
add
or
clc
xlat
sbb
xchg
ljmp
fs
dec
shl
and
add
jg
adc
pop
pop
mov
insl
cli
cmp
lret
ja
ror
xor
xchg
or
addr16
stos
jp
dec
and
push
push
and
ficoms
test
int3
or
into
sbb
stc
mov
mov
loope
dec
repnz
xlat
notl
cmc
orl
scas
sbb
mov
add
mov
jnp
insl
lods
js
and
or
mov
jnp
ret
int3
jns
lret
aas
push
mov
and
xchg
pop
inc
mov
and
dec
scas
lahf
or
scas
mov
stc
mov
mov
loop,pt
xor
gs
cld
fs
pop
and
cmpsl
sub
cmp
fnstenv
inc
iret
pop
packsswb
jg
push
xor
loopne
inc
cli
push
pop
dec
sub
pop
sti
add
imul
and
xor
or
sbb
mov
loopne
lahf
adcl
pop
stc
push
mov
mov
fisubs
pop
pop
shlb
mov
outsl
fwait
pop
cmp
dec
and
add
repz
add
aas
ret
into
push
sbb
or
movsl
push
arpl
mov
outsb
notb
test
mov
and
in
das
inc
xchg
gs
fwait
je
lcall
lea
addl
inc
fsubl
dec
jg
aas
sub
in
xor
mov
xor
aam
inc
mov
aaa
jnp
sub
and
fwait
cmc
shr
popf
imul
xchg
bnd
jnp
jmp
iret
jnp
test
xchg
addb
scas
mov
inc
loopne
xchg
shrb
cmp
test
mov
mov
jns
lcall
fstl
pop
dec
adcl
scas
jle
mov
pop
clc
aad
fdivp
xchg
and
insb
adc
xchg
mov
stos
mov
fcompl
adc
sbb
dec
push
sub
inc
jg
mov
mov
cmp
stc
ret
test
push
inc
adc
nop
dec
mov
xchg
mov
adc
pop
ja
add
push
loop
lods
jp
dec
jns
xor
xchg
push
aas
popa
xchg
fwait
jg
mov
pop
rol
cli
mov
lods
mov
out
inc
je
mov
and
mov
insb
and
inc
push
out
mov
out
insb
aad
pop
xchg
mov
adc
hlt
int
push
fbld
jae
les
jl
xchg
dec
lea
adc
or
ret
jecxz
insw
les
mov
xorb
add
lods
dec
mov
test
xor
lds
or
mov
and
subb
loopne
in
xor
jns
aam
push
in
out
adc
scas
cmp
imul
xchg
cli
inc
push
pusha
decl
out
dec
sub
rcrb
dec
adc
and
sub
scas
inc
push
dec
je
cmpsb
cmpl
push
mov
jnp
imul
out
jno
sbb
stos
sbb
pop
jl
lock
nop
dec
sbb
xor
lret
test
and
mov
cmp
insb
inc
mov
pop
lret
and
iret
and
scas
mov
pop
repz
sbbl
loop
fldl
xchg
lret
test
xor
cltd
icebp
sub
mov
outsl
aam
insb
aad
das
xor
sub
ds
outsb
lds
jmp
es
out
lret
mov
sbb
lods
les
data16
in
or
mov
ret
dec
sbb
pusha
lock
mov
jae
add
push
and
loope
pusha
test
call
sub
xor
test
fsubl
xchg
test
inc
stos
dec
cmp
scas
mov
lods
popf
das
ss
add
aad
das
mov
fsubr
movsb
jle
jbe
fucom
mov
leave
daa
xor
out
pusha
lock
xor
pop
mov
pop
lea
cmc
pop
arpl
ret
mov
scas
mov
ret
adc
jp
push
sub
mov
ss
aaa
sti
gs
sahf
cmp
cwtl
mov
and
cmp
or
fsts
pusha
fistl
mov
iret
mov
shll
push
loope
inc
xchg
icebp
xchg
js
pop
fmulp
dec
cmc
mov
stc
xchg
fldenv
mov
movl
xor
pop
ss
fidivs
jo
loop
test
mov
cmc
inc
pusha
inc
cld
popa
push
jno
mov
jne
jo
inc
mov
imul
dec
fcomps
xlat
fdivl
dec
vmovaps
mov
or
mov
jno
or
fidivrl
dec
loop
xchg
xchg
test
push
mov
call
das
lods
mov
mov
ja
das
jno
push
aad
mov
and
and
adc
pop
xchg
rorl
inc
test
cmp
add
loopne
decb
testb
fistl
sti
adcl
pop
movsb
sub
fldl
mov
jnp
test
lock
jns
mov
push
xchg
shlb
mov
test
mov
loop
punpckhbw
xor
mov
call
jne
jg
arpl
ror
andb
cwtl
pop
fld
mov
pop
jne
outsb
adcl
rep
es
dec
xor
xor
das
in
adc
lret
lea
lods
pop
je
mov
std
jbe
mov
test
lret
test
addl
call
hlt
inc
imul
mov
xchg
jnp
cli
icebp
xchg
mov
push
ret
jb
loop
mov
fimuls
enter
imul
fadds
jbe
gs
fistps
jae
ds
pop
test
push
add
pop
std
adcl
sub
jmp
sti
fmul
push
stc
push
lea
cld
inc
aam
mov
inc
sarb
stc
mov
loop
std
inc
mov
shlb
fcmove
lcall
popa
lret
movsb
xchg
push
rcl
xchg
and
test
icebp
adc
out
sub
jnp
cs
xor
paddsb
sarl
cmpsl
pusha
push
dec
inc
xor
insb
ljmp
add
pop
dec
cmp
roll
adc
jbe
xor
adc
or
aad
popa
stos
inc
or
bound
inc
out
inc
pop
mov
xor
fsubrs
mov
add
inc
pop
out
mov
inc
mov
jne
and
xor
in
lds
push
jmp
popa
push
xchg
jnp
gs
xchg
cmc
arpl
lock
inc
aas
test
into
sbb
ret
addr16
pop
cmp
pop
mov
aad
aad
ljmp
xor
sahf
inc
ljmp
mov
xor
negl
stos
and
lret
adc
mov
notl
mov
inc
in
and
push
or
pop
mov
dec
int3
les
sub
mov
adc
xchg
add
pop
test
mov
or
sub
scas
jge
in
fiaddl
push
dec
sbb
mov
loope
jle
cld
test
pop
hlt
clc
mov
lods
dec
nop
repz
push
inc
popf
and
pop
mov
mov
adc
insb
inc
adc
in
push
into
sub
fs
pop
cmp
into
mov
pushf
sbb
enter
inc
add
lock
sbb
insl
cli
or
stos
clc
cmp
adc
movsl
sbb
dec
sub
movsl
les
insb
push
pop
pop
cli
jp
sbb
ja
divb
ljmp
or
stos
jle
sbb
pop
scas
jmp
aaa
fwait
sub
and
sbb
jbe
rcll
cmp
adcb
or
jl
cmp
je
mov
es
cmpsb
inc
mov
jo
add
cmp
mov
or
addr16
out
cmp
fs
mov
mov
outsb
and
or
pusha
cmp
cmp
std
pushf
fldcw
es
shl
daa
mov
inc
in
loopne
jle
outsb
inc
bound
mov
jmp
jge
push
xchg
aam
inc
sahf
push
xchg
ss
lret
sub
outsl
or
das
movsb
lret
testb
sub
xor
jns
rorl
fdivs
movsb
inc
ret
lahf
dec
sub
mov
jae
ds
pop
enter
xchg
ret
rcrl
push
sbb
xchg
cmp
jae
mov
xor
xchg
add
adc
repnz
shlb
dec
scas
jmp
mul
fsub
dec
gs
jne
adc
push
dec
je
shll
pop
dec
mov
xchg
cmp
sbb
mov
inc
or
dec
insb
adc
mov
dec
lock
jbe
and
fwait
addb
int
pusha
fsubs
cld
cwtl
lea
insb
ret
mov
fs
or
add
es
decl
inc
pop
sub
push
bound
or
mov
inc
jns
fcoms
sub
stc
test
or
adc
dec
inc
add
in
dec
push
mov
mov
ds
fisttps
cs
movsb
inc
adc
mov
out
loop
test
sub
cwtl
or
repnz
mov
in
les
mov
movsb
or
dec
cli
jnp
sub
fisubl
xchg
sub
lcall
and
sub
jno
push
movsb
jg
je
inc
popf
xchg
mov
test
cmpsl
mov
xor
or
cmp
nop
add
xchg
push
call
cwtl
xor
shlb
div
fisubs
daa
cmp
daa
test
arpl
jmp
mov
cmc
xor
jo
sbb
jle
lods
xorl
out
add
mov
push
call
jne
xlat
push
inc
add
subl
lock
stos
xchg
mov
fwait
pop
add
test
sti
cmp
pop
sahf
or
xorl
cltd
das
mov
stc
or
push
scas
push
push
out
outsl
outsb
mov
push
or
inc
xor
mov
jmp
pop
mov
cs
addr16
push
dec
fdivl
stos
jne
fiadds
clc
or
cmp
cmpsb
repnz
nop
orl
dec
mov
inc
xor
mov
and
in
imul
jb
add
mov
xchg
pop
and
scas
dec
jmp
adc
xchg
ja
lds
cwtl
gs
in
xor
inc
insl
lret
sbb
mov
mov
out
stos
jno
mov
mov
inc
ja
call
sub
fwait
arpl
add
mov
mov
mov
or
or
jmp
negb
mov
pusha
mov
xor
in
scas
xor
ficompl
je
rcll
push
insl
xor
jns
incb
add
outsl
cs
and
in
scas
shll
push
and
bound
mov
stos
inc
insb
aam
xor
daa
jg
pop
gs
lahf
inc
add
lret
pop
lahf
dec
pop
lret
adc
jb
sub
add
xor
pop
push
jbe
push
rorl
mov
dec
sub
stos
sti
push
leave
dec
rorb
cmp
test
adc
pop
push
and
mov
jo
mov
imul
std
xchg
mov
pushl
lcall
das
dec
jmp
pusha
movb
je
or
insl
outsb
in
cmpsl
fwait
sub
das
mov
gs
xlat
mov
pop
out
mov
xchg
fdivrs
idiv
mulb
pop
pop
adc
repnz
inc
push
jmp
iret
adc
sub
pop
lcall
xchg
xor
fdivrs
inc
js
xor
mov
fildl
mov
sub
aas
add
mov
lret
and
mov
orb
ret
mov
int
ljmp
xor
sbb
and
fwait
cmp
mov
adc
insb
test
push
frstor
mov
jl
push
cs
sub
lcall
mov
xchg
adc
adc
icebp
adc
xlat
shl
cmc
jnp
in
mov
fxch
std
and
loopne
nop
loope
push
or
xchg
jge
lret
movsl
nop
sbb
data16
push
mov
mov
inc
dec
pushf
jne
mov
rcrb
or
inc
bound
mov
mov
add
sti
cwtl
pop
add
adc
mull
dec
jmp
mov
add
daa
addr16
scas
adc
ficoml
xchg
test
lahf
pop
int
pop
icebp
mov
jge
frstor
or
dec
lcall
xor
jle
inc
rclb
mov
lds
cmp
sub
sub
jmp
out
sbb
mov
inc
insl
pushf
sbb
and
push
ljmp
sti
xor
aam
cmp
pushf
add
push
pop
ja
lea
lds
ljmp
jg
inc
repz
mov
sti
data16
adc
jns
push
xor
gs
fadds
mov
shlb
jmp
lods
lods
jns
dec
mov
sbb
jg
in
mov
cmp
fnstcw
lcall
mov
cmp
ds
dec
push
mov
call
mov
mov
or
imul
sub
pop
add
ficoml
cld
mov
mov
cmp
sbb
int3
push
ja
adc
mov
jmp
adc
xor
out
jl
xchg
loope
cmp
xor
xchg
xchg
fstpt
mov
out
outsb
test
out
fsubrs
mov
or
pusha
inc
cmp
pop
jbe
xchg
cmp
dec
sub
out
popa
pop
insl
insb
sbb
jbe
in
inc
popf
and
xchg
aam
mov
xor
add
adc
sahf
inc
mov
mov
or
lcall
and
int3
mov
jae
jo
push
insl
xlat
lcall
adc
fldl
jns
jo
dec
jge
cmpb
or
pop
jnp
cld
subb
add
dec
xchg
mov
scas
inc
mov
or
adc
mov
xchg
and
dec
sub
xor
mov
call
cmp
xchg
push
mov
pop
adc
ret
movsb
adc
loop
pop
pop
inc
cmp
sarl
xor
pop
mov
adc
pop
push
shl
rorb
jo
jb
pusha
cmp
and
push
mov
nop
fcomp
stos
dec
out
shll
sub
call
add
jns
jno
pusha
sarb
jns
popf
inc
out
out
pop
dec
int3
xchg
sub
inc
inc
push
jg
mov
ja
js
pop
aam
push
mov
aam
ss
adc
cmp
xchg
icebp
in
jbe
adc
test
ficompl
sti
pushf
scas
pop
pop
pop
insl
lcall
xor
lds
xlat
cmp
push
repz
pusha
add
jl
jecxz
cmc
andb
xchg
fwait
push
out
mov
mov
lods
sbb
adc
leave
into
inc
cld
movl
lock
mov
scas
push
or
jbe
gs
mov
inc
cmpsb
push
pop
xlat
scas
imul
repnz
gs
cmp
mov
popa
mov
es
cmc
into
and
outsb
push
push
adc
lock
cmp
sbb
or
dec
popa
jg
sahf
fcompl
repnz
shrl
mov
in
data16
mov
outsl
lods
mov
nop
je
hlt
mov
popl
sbb
inc
in
sahf
add
xchg
jl
imul
mov
jp
test
test
pop
mov
je
add
cltd
dec
sub
cmpsb
cmpsb
adc
add
call
arpl
adc
mov
ret
aaa
ret
scas
mov
xchg
aam
mov
outsb
mov
jb
lret
loope
loop
sbb
cmp
outsb
std
pop
jp
stos
lock
es
sbb
popf
push
xor
cltd
mov
out
rcr
roll
mov
repz
divl
pop
jno
ret
ss
cmp
jl
xor
repnz
sbb
mov
leave
and
or
je
mov
xchg
divl
or
mov
fstp
insb
push
ret
sahf
cltd
lcall
cmp
mov
mov
dec
scas
aam
fdivrl
pop
es
and
lods
push
rorl
fisubrs
push
cmp
push
test
rclb
sub
sahf
std
insb
sub
jmp
cmp
dec
sub
adc
mov
pushf
mov
mov
cmp
mov
push
xchg
inc
add
sub
lods
mov
mov
je
pop
leave
lds
arpl
lcall
sub
sbb
cltd
fldl
sub
inc
and
les
mov
mov
stos
inc
or
xor
jns
test
mov
and
cmp
push
fwait
jge
inc
sub
sbb
movsl
mov
cmpsb
pop
enter
mov
je
add
or
push
push
mov
dec
test
in
shl
dec
in
xor
pop
push
mov
shll
js
sbb
sarl
sahf
xchg
sbb
pop
je
stos
int
hlt
test
lea
lock
pop
and
cmp
outsb
stos
mov
adc
cli
jbe
or
aam
or
mov
push
les
shlb
cmpsl
in
lea
and
push
shlb
cmpsl
cmp
mov
popf
pop
xlat
lahf
jg
jo
test
sub
in
rorb
sub
int
xchg
mov
add
add
xor
clc
aaa
test
jno
and
les
dec
push
insl
je
cltd
xor
pop
cmc
lret
daa
sub
jecxz
cmpsl
test
dec
loopne
pushf
mov
cmp
int3
adc
jae
and
xchg
ja
sti
pusha
pop
lds
xchg
das
mov
inc
xchg
psubq
fidivrl
dec
add
icebp
dec
ss
xchg
xchg
clc
ret
outsb
mov
add
xchg
test
hlt
or
mov
adc
dec
jle
xor
call
pop
mov
or
push
lock
loope
sbb
add
dec
sub
daa
shl
sbb
fistpll
mov
lods
mov
jg
jmp
pop
mov
lods
or
cwtl
das
jecxz
jns
xchg
lret
rcl
pop
sub
outsb
imul
lea
je
add
or
pop
push
ficomps
fildll
mov
adc
int
pop
ficomps
sub
nop
or
sub
dec
jbe
dec
adc
std
inc
addr16
or
daa
lahf
stos
inc
or
ficoms
push
popa
sbb
aad
pop
push
xchg
ljmp
cmp
es
jb
mov
jmp
movsl
and
add
pop
mov
cwtl
xchg
inc
cli
push
inc
in
sub
jne
dec
sub
lds
push
mov
aam
inc
xor
pushf
dec
dec
dec
xor
add
inc
cs
popf
lods
mov
mov
adc
loope
xor
insb
and
imul
fists
lds
decl
xchg
pop
arpl
jecxz
sar
cmpsb
js
loope
mov
xchg
aas
loop
mov
mov
mov
sbb
out
int3
ret
mov
push
push
mov
or
ret
adc
rcrl
testl
ret
push
push
inc
ss
es
mov
mov
push
dec
fmull
in
popa
rol
mov
dec
sub
leave
push
push
jge
je
mov
std
jb
cld
testb
inc
repz
jne
outsl
cmpl
cmp
mov
mov
incb
in
sbb
ds
ficoml
scas
idivb
adc
jle
rolb
jge
jmp
xorl
jnp
dec
mov
add
pop
cld
jne
mov
dec
xorb
clc
mov
push
push
gs
cltd
xchg
stos
adc
mov
mov
xchg
cmp
sbbb
xchg
cmp
loopne
cmpsb
lods
out
add
loopne
cmp
sahf
ss
icebp
pop
mov
and
sbb
sbb
and
aam
cld
insb
or
adc
rol
add
iret
sbb
jl
sub
repz
clc
mov
ud0
cmp
sub
jns
cmc
jl
cmp
imul
xchg
jne
fadd
popf
mov
mov
loop
in
jp
add
int3
jo
mov
iret
adc
cmpsb
sub
adc
push
mov
mov
loope
andl
or
xchg
dec
cmp
scas
xor
sbbl
movsl
xor
xchg
and
and
iret
mov
or
mov
dec
outsl
js
or
dec
push
cmp
dec
and
pushf
jle
out
mov
outsl
jae
mov
mov
add
cmp
or
iret
mov
lock
mov
das
lock
mov
inc
scas
cmc
shrl
jecxz
jecxz
inc
fdivrs
clc
mov
jecxz
mov
add
xorl
mov
lds
andl
add
mov
sub
sub
aam
jno
cmpl
leave
push
sti
dec
loope
std
sti
or
aam
dec
popf
jle
fnstenv
imul
jl
or
fdivrl
cwtl
ficompl
xor
iret
sub
xlat
jmp
jge
cmc
inc
ds
xchg
call
adc
and
int
mov
popf
ja
scas
lcall
and
xchg
cmpsb
mov
xchg
xchg
dec
mov
cwtl
sub
fbstp
sti
sbb
sbb
and
adc
jbe
rclb
inc
imul
jmp
repnz
mov
cmpps
bound
test
iret
std
xchg
xchg
cmp
pusha
popf
pop
cmpsl
ja
insl
push
sahf
sub
inc
mov
and
inc
xchg
loopne
adc
loopne
ds
mov
push
pop
enter
out
and
sti
jb
sbb
cmp
data16
sbb
sbb
push
push
scas
or
push
push
and
stos
xchg
sti
cmp
mov
mov
lds
jge
ret
or
cmc
xchg
push
and
stc
adc
ret
in
dec
lahf
outsb
jns
pusha
cmp
frstor
ret
jo
fadds
ret
pusha
adc
adc
xchg
pop
push
pop
movsl
loop
push
clc
xchg
push
loope
cmp
cli
jno
stos
sub
pusha
fwait
aas
cs
pusha
stos
sbb
aas
sub
scas
sbb
das
sti
and
push
jmp
or
mov
dec
in
outsl
test
ret
xor
dec
mov
pop
add
int
pop
fadds
or
negl
or
pop
cmp
sub
es
lds
mov
pop
out
in
mov
jns
or
loop
fldt
pop
push
jb
mul
lods
rdpmc
mov
inc
mov
ljmp
jmp
in
dec
xor
pop
sbb
lea
xchg
add
cmp
mov
mov
pop
pop
inc
mov
xchg
or
iret
push
movsl
int
out
or
jl
je
out
inc
pop
movsl
xor
aas
push
into
or
pushf
cli
aad
cld
ja
dec
jmp
shlb
mov
push
lea
aam
cmp
fidivs
mov
mov
fwait
test
aaa
imul
repz
push
sub
mov
add
faddl
out
rcrb
push
div
mov
das
pop
fimuls
and
xchg
jge
mov
int
and
inc
mov
cltd
add
inc
push
lret
and
int
aad
rorb
lahf
loope
inc
cli
mov
pop
movsl
rorl
mov
or
mov
adc
push
test
int3
and
je
or
xchg
jae
out
rcll
mov
cwtl
repz
adc
pop
adc
pusha
lea
rol
lds
adc
cmp
and
push
movsb
and
movsb
and
adc
icebp
lahf
xchg
mov
cmpsb
mov
xchg
ss
lock
subl
in
xor
das
lods
mov
rcrb
jno
jl
add
jg
cmp
adc
xor
xorl
sbb
xchg
mov
push
or
pop
jecxz
jae
test
mov
outsb
or
pop
dec
and
mull
js
mov
test
mov
push
arpl
int
push
mov
jns
adcl
popf
movb
add
xchg
scas
mov
stc
mov
out
cld
xor
jmp
imul
or
pop
call
mov
sbb
shr
pop
adc
outsb
in
aaa
cmc
xchg
iret
es
pop
std
js
jge
adc
in
sbb
repnz
outsl
lcall
adc
fcomip
mov
cld
push
sbb
test
sub
ja
sti
hlt
mov
add
sbb
imul
push
cmc
cwtl
pop
xchg
dec
sbb
aam
or
inc
addr16
or
loop
add
lcall
mov
insl
cmovo
add
lods
pop
repnz
sub
les
xor
sub
rolb
daa
mov
push
rorb
lock
mov
int
stos
jg
xlat
mov
sbb
and
or
pop
int
ss
pop
xor
and
push
lret
push
invd
fisttpll
imull
jg
sub
jne
rclb
mov
jne
stc
out
xor
imul
loop
test
adc
lds
cmc
js
das
mov
aas
test
xchg
test
in
jl
rorb
out
mov
lret
clc
scas
pop
inc
lahf
lret
jnp
xlat
lcall
and
aad
in
xchg
and
cmp
mov
jp
pop
pop
in
dec
stos
jb
aaa
or
lock
push
jge
repnz
mov
test
push
cmpsb
jae
pusha
pop
push
mov
push
mov
push
aaa
iret
filds
add
movsl
in
enter
jo
adc
aas
loope
add
sti
shl
test
shl
fists
rclb
add
push
cmp
push
adc
pop
lahf
mov
sbb
sbb
lods
jbe
fs
in
xchg
fs
xchg
cmpsl
cltd
mov
inc
mov
les
sub
xor
jmp
imulb
popa
in
enter
mov
scas
inc
aad
out
pop
sbb
cmpsb
push
mov
out
xchg
xchg
out
repnz
sub
pop
sub
clc
adc
pushf
std
jge
add
xchg
inc
mov
mov
mov
add
cltd
add
inc
sub
imul
pop
in
cwtl
imul
scas
jp
and
dec
jge
jmp
les
insb
stos
sub
cmp
popf
pop
iret
xchg
test
aaa
aam
roll
lods
lods
adc
fisttps
popf
fmuls
and
jge
push
pop
into
pushf
into
jno
adc
dec
aad
adc
dec
lods
dec
add
in
push
stc
les
sbb
jae
inc
mov
mov
push
aaa
std
or
aam
shll
sub
cmp
cmp
lahf
sub
sahf
add
or
fcomp
and
repnz
mov
hlt
jno
push
aam
cmp
push
sbb
adc
gs
push
out
aad
inc
or
mov
outsb
testl
insb
or
pop
adc
push
lds
ss
sub
pop
in
xor
inc
cwtl
insl
jmp
mov
adc
imul
outsb
xchg
jnp
das
mov
movsl
ja
jbe
jg
adcb
pusha
and
sbbb
orl
cmp
adc
xchg
push
icebp
pushf
movsb
in
jns
and
gs
inc
lock
jo
call
fildl
stc
shl
mov
mov
cmp
pop
pop
std
mov
sub
rcrb
push
mov
inc
adc
je
stos
stc
sub
lahf
lods
xor
jbe
into
mov
xchg
ljmp
jg
loopne
testb
mov
inc
xchg
sub
rolb
je
cs
jle
out
fldcw
mov
shrb
or
call
aam
in
movd
sub
pop
jno
insb
xor
fisttpll
fnstcw
sub
mov
push
mov
lcall
xor
andl
out
xchg
push
mov
ss
mov
aad
out
push
and
push
cmp
popf
divb
out
std
scas
sub
test
stc
add
lods
enter
pop
xor
sub
aas
xchg
outsl
cmp
pop
adc
sarb
inc
into
jns
aaa
in
pop
jno
mov
jb
xchg
fildl
jp
push
scas
add
or
dec
rclb
push
mov
mov
fisttpl
dec
push
cmpb
xchg
data16
dec
sub
jmp
ds
xchg
hlt
psubd
cltd
loopne
jae
add
stos
daa
mov
rolb
mov
imul
addr16
jno
addps
add
mov
xor
or
xchg
sbb
popf
and
and
test
cmc
movsl
popf
xchg
fucomp
ljmp
leave
push
cwtl
sub
test
mov
inc
xor
pop
nop
out
mov
out
push
push
popf
outsl
cwtl
jns
int
nop
or
data16
mul
mov
shrb
dec
push
jno
es
and
sbb
popa
push
hlt
xlat
into
sbb
lahf
sub
inc
je
inc
push
mov
jne
dec
fs
mov
aad
sub
scas
je
les
popf
push
repz
ja
push
push
repnz
xor
call
inc
std
in
cld
jo
xchg
mov
inc
jmp
ret
dec
jae
imul
movsl
insb
mov
daa
les
xchg
and
xchg
sbb
mov
hlt
dec
cmp
lahf
dec
or
out
jg
add
aas
notl
data16
shlb
cmp
rolb
shlb
inc
pop
cmp
push
test
aam
lods
cld
jmp
lods
icebp
and
repnz
mov
push
sbb
mov
inc
add
push
and
lock
sti
dec
dec
jbe
notb
mov
fst
arpl
xor
dec
loope
rorb
inc
push
mov
sbb
add
sub
hlt
andb
clc
mov
cmpsl
cmp
sub
mov
rcr
enter
mov
icebp
mov
fstpt
hlt
rorl
sbb
adc
outsl
push
out
mov
push
add
test
mov
stc
push
push
sbb
stos
xchg
sbbb
sbb
push
jo
out
mov
jg
fs
or
imul
ret
nop
or
stos
xchg
xchg
and
ret
sti
sbb
pop
mov
aad
xchg
cmp
les
add
mov
mov
pop
nop
outsb
cmp
rorl
bswap
pushf
loopne
sbb
rol
lahf
adc
cmp
ja
pop
xchg
ret
ds
bound
push
cmp
dec
fs
das
dec
pop
dec
add
xorl
or
mov
mull
rolb
jle
mov
filds
int3
rcrb
dec
outsl
aaa
sub
xor
adc
push
dec
and
repz
add
xor
mov
jp
loopne
insb
mov
push
push
scas
mov
push
sbb
push
mov
dec
add
add
pushf
inc
fldenv
popf
mov
test
cmpsb
das
sub
jecxz
cmp
and
push
enter
movsl
mov
mov
sbb
xchg
mov
jmp
or
fadds
bnd
dec
inc
stos
cmp
je
andl
inc
jmp
es
jecxz
ret
cmc
daa
push
pop
pop
int3
mov
mov
mov
mov
and
push
leave
mov
cmp
std
ss
xchg
jmp
sbb
int
sbb
xlat
xor
popf
mov
pop
push
add
stos
add
dec
dec
inc
cmp
or
pop
jne
jmp
jge
daa
ret
mov
test
xorb
or
imul
out
mov
dec
add
dec
lods
pop
sti
mov
xchg
je
add
cld
push
mov
mov
std
jmp
xchg
stos
inc
sub
icebp
cmc
push
xchg
sbbl
jne
test
cmp
and
mov
mov
subl
xor
dec
jg
push
imul
add
call
jo
insb
push
and
outsl
xor
pop
and
add
ljmp
cmpsb
dec
data16
adc
std
outsb
mov
adc
mov
jo
fistl
jge
out
cld
insb
ret
fstpt
pop
push
pushf
scas
jle
push
pushf
negl
add
dec
mov
push
push
arpl
mov
mov
mov
pop
mov
inc
dec
push
pop
negl
insl
insl
xor
imul
pop
sbbl
adc
sar
mov
and
mov
fidivs
pop
xor
insl
push
jne
fsubr
inc
fsubrs
or
push
xlat
xchg
push
mov
or
mov
jo
pop
mov
xor
push
hlt
xor
xor
lds
shlb
jno
or
in
popa
xchg
pop
sbb
test
or
adc
sub
cmp
jecxz
test
and
sub
outsl
jbe
incl
cmp
fmull
xchg
mov
sarl
mov
inc
fisttpll
and
cmp
inc
push
adc
push
lcall
push
inc
jl
outsb
addr16
mov
xchg
aad
loopne
mov
rorb
mov
xchg
fistpll
cmpsl
out
cmpsl
loopne
add
adc
stos
jp
or
stc
loope
iret
sbb
roll
in
or
sub
fdivl
shl
cmpsb
aaa
repz
and
xlat
xchg
and
cmpsl
mov
sti
dec
sub
sbbb
or
insb
dec
rolb
out
ljmp
xchg
jno
mov
cmpsl
dec
insb
das
jno
mov
scas
sbb
nop
fsubs
rep
dec
push
je
cmpsb
adcl
xor
les
out
add
jmp
stos
fisttpll
scas
ljmp
test
ljmp
call
mov
test
cmpsl
es
lea
pusha
xor
mov
loop
fcom
mov
ret
inc
xor
or
cmpsb
sub
cmpsl
addb
add
jg
and
mov
sar
sahf
outsl
dec
mov
jne
cmc
xor
movsl
addr16
adc
inc
mov
addps
push
addr16
aam
nop
jp
shlb
push
icebp
xchg
lret
shlb
cld
in
xchg
in
jl
movsb
or
dec
pop
push
mov
dec
cmpsb
insb
xor
lret
xor
add
mov
dec
xor
outsb
mov
mov
out
and
xchg
repz
out
mov
push
roll
cmp
mov
sarl
cmpsb
jbe
inc
fdivr
adc
cmpsb
or
insl
repz
lret
inc
ret
cmpsb
int
xchg
cmp
sarl
or
push
mov
cwtl
sbb
sub
pop
js
outsb
lods
lods
xchg
sub
aad
ljmp
xor
mulb
mov
ret
mov
xchg
sbbl
pushf
or
sbb
mov
push
idiv
mov
jmp
lock
mov
xor
popa
fmull
out
xor
push
stos
dec
inc
aaa
test
adc
roll
mov
jle
mov
ds
or
in
mov
push
dec
out
mov
fimull
xor
lcall
pop
enter
xchg
aas
out
fs
jle
add
pop
sub
fs
stc
push
adc
add
sarl
mov
sub
xchg
mov
imul
or
push
push
xchg
out
adc
cmpl
std
dec
jno
xor
mov
mov
or
aas
xchg
mov
test
mov
stos
adc
je
test
lds
mov
and
fsubrl
sub
and
mov
or
into
ss
out
ficoml
in
adc
pop
test
and
cmp
add
and
xorl
fwait
pop
jns
notl
iret
imul
jno
rcr
and
test
pop
ss
outsb
mov
jecxz
and
lds
cmpsb
push
jmp
cmp
daa
pop
cwtl
mov
or
inc
dec
mov
mov
mov
cmp
pop
pop
dec
jb
insb
fnstsw
sub
or
push
sub
fucomp
push
loope
iret
lds
icebp
adc
pop
xor
pushl
fidivrl
movsl
adc
fwait
scas
mov
cmp
mov
int
lods
inc
dec
out
ffreep
adc
lahf
out
fstpl
notl
sub
das
cmc
push
adcb
call
sbb
hlt
or
dec
dec
mov
or
dec
xlat
or
jno
mov
fcmovne
fs
add
jne
add
dec
sub
test
mov
cmc
push
call
cmp
push
hlt
ret
movsl
push
push
vcvtsi2sd
ds
push
xor
les
adcl
xchg
enter
sar
rcrl
push
push
pop
push
in
jbe
test
das
movsl
mov
outsl
pop
hlt
xlat
lock
nop
adc
mov
jns
or
xchg
dec
rcrb
xchg
sub
mov
jl
pushl
out
or
stc
dec
ljmp
repnz
mov
ss
xchg
xchg
adc
add
mov
xor
mov
pop
lahf
jmp
or
xchg
pop
aaa
pop
sbb
and
pushf
xor
fucom
sbbb
gs
mov
loopne
sub
ds
std
mov
je
mov
jle
cmp
dec
stos
mov
dec
ss
enter
adc
dec
cmp
jb
ficomps
aad
jnp
movsb
push
lds
add
xchg
cmp
insb
jp
cmp
push
lock
mov
fnsave
add
ljmp
xorl
sub
xchg
pop
jg
mov
jecxz
jge
ja
das
clc
sahf
sbb
pop
shr
inc
adc
sbb
pop
push
push
aaa
add
inc
sbbb
dec
scas
add
jb
and
cmc
out
das
cwtl
dec
mov
nop
in
scas
testb
pop
mov
mov
xor
push
loope
pop
dec
jg
xchg
push
addr16
outsb
push
dec
shll
dec
mov
stos
and
into
ss
cmp
xor
insl
push
adc
outsb
lret
aam
sbb
movsl
dec
pushf
sbb
aas
cli
sub
je
sub
rorl
imul
pusha
mov
outsb
and
xchg
mov
or
dec
mov
out
cmp
sbb
fdivrp
ds
push
add
mov
iret
pop
sub
mov
notl
push
cmpsl
xorl
cmpsl
or
orl
sbb
and
mov
scas
rol
andb
mov
jno
and
sarl
insb
lock
add
xlat
clc
mov
notb
jg
movb
mov
xchg
lahf
shr
outsb
test
js
and
push
adc
cmpsb
push
push
dec
into
push
filds
lea
inc
clc
test
cmp
pop
pop
push
popf
call
and
jne
andb
bound
inc
mov
jb
and
cmc
gs
pop
push
cltd
pop
xor
lcall
insb
mov
inc
bound
mov
mov
enter
dec
lret
sbb
sub
mov
in
pop
pop
adc
push
stos
cwtl
dec
ja
push
bound
mov
mov
xor
cld
addl
ret
outsb
inc
arpl
cltd
sub
mov
xchg
enter
dec
inc
test
fucomi
xlat
fdivrs
mov
sbb
aaa
pop
inc
cmp
lahf
pop
mov
xchg
dec
stos
mov
aas
pop
loopne
inc
das
int
and
fisubrl
xchg
ficomps
hlt
or
sub
aad
jbe
xor
mov
mov
insb
lods
or
int3
inc
jns
stc
pop
aaa
pushf
add
test
and
xor
icebp
sub
gs
sahf
jp
jmp
or
push
rorl
sub
push
push
out
push
or
mov
lahf
or
sbb
add
ja
shlb
push
stos
jnp
jo
popf
popa
xchg
ja
test
pop
shl
jge
and
clc
cld
das
push
mov
int3
testb
loope
xchg
mov
sahf
lcall
lods
fistpll
sub
mov
add
imul
xchg
pop
xlat
out
imul
stos
lods
jno
xchg
rcll
xor
pop
orb
imul
fldl
hlt
push
sbb
xchg
xchg
insb
and
pop
jmp
test
cli
inc
lods
dec
or
xchg
xor
fdiv
test
iret
fnclex
orb
repnz
lods
js
cwtl
push
fdivrl
and
loopne
add
mov
jb
mov
leave
dec
mov
push
inc
test
enter
fwait
lcall
dec
push
test
cmp
mov
rclb
sub
push
jo
sub
sbb
aam
rcr
rclb
je
xchg
inc
push
gs
jge
pop
cmp
fdivl
xchg
andl
bound
sub
mov
inc
sub
test
inc
xchg
sarb
jne
out
les
loop
movsl
popa
int3
adc
cmp
sarl
mov
mov
push
iret
lret
lds
push
fwait
push
xchg
fadds
sbb
insl
and
mov
mov
addr16
jge
outsl
outsl
loopne
ret
dec
js
fcomp
cmp
pushf
lahf
clc
push
lock
jo
fwait
mov
mov
bound
out
ds
lods
jmp
fistpl
test
sub
add
mov
fistps
mov
rcll
or
adc
xchg
lea
jb
xchg
loope
push
xorb
sbb
pop
cmp
insl
lret
insb
or
test
jge
pop
test
mov
pop
jno
push
outsb
xor
scas
daa
mov
mov
insl
clc
lea
mov
fwait
lea
push
iret
mov
pop
pop
add
mov
aaa
rclb
cmc
cmpsl
dec
mov
add
mov
sbb
mov
and
test
cmp
jnp
sbb
adc
ds
mov
inc
adc
fisubs
dec
jge
xor
pop
ds
jle
fdivl
dec
add
leave
mov
dec
loopne
test
dec
enter
fadd
ret
xchg
push
je
mov
pavgb
sub
gs
xchg
test
pusha
out
ret
movsl
dec
sarl
fucomi
cwtl
mov
in
cs
cmp
sbb
int3
fcompl
cltd
lret
add
loope
add
out
fwait
mov
sti
xchg
sbb
mov
xlat
in
aam
popa
jmp
aas
ss
jbe
movsb
jp
rolb
popa
imul
out
mov
pop
xor
pop
and
push
adc
insl
sub
sbbl
outsl
or
sbb
mov
dec
cwtl
test
push
push
dec
mov
mov
lcall
cmp
mov
lock
jns
mov
push
aam
jnp
adc
rcl
imul
jecxz
add
mov
icebp
in
pop
aas
lods
and
xchg
cs
sti
mov
outsb
ret
push
stos
xor
into
cmpsb
insl
je
mov
mov
loopne
mov
incl
jg
mov
push
imul
imul
jns
push
push
inc
in
jecxz
inc
jmp
or
jge
movsb
xor
popa
rcrb
mov
push
fstpl
ret
addr16
inc
les
xor
jns
mov
xor
aam
xchg
fldenv
push
push
scas
mov
xchg
inc
insl
rorb
add
mov
jmp
dec
outsl
cmpsb
push
sub
push
iret
ret
sbb
push
mov
and
inc
or
pop
add
mov
leave
adc
jecxz
in
adc
aad
pushf
sahf
push
jne
iret
xlat
push
pop
dec
and
xor
cld
jg
xchg
js
or
iret
inc
bound
cmpb
daa
pop
inc
pop
push
cs
and
leave
xchg
pop
movsl
jl
pop
popa
push
mov
push
shlb
or
push
adc
scas
mov
inc
sbb
xor
and
clc
xchg
sbb
xchg
cld
inc
data16
fistpll
push
xlat
popf
or
adc
add
leave
inc
shll
adc
hlt
sbb
movsl
shr
inc
std
or
stos
push
andl
fcoms
sub
outsl
pop
adc
cmp
cmp
add
mov
pop
jne
lret
adc
popa
push
in
nop
scas
rolb
jmp
dec
xchg
mov
and
mov
lds
sub
adc
sub
jg
or
std
inc
lcall
bound
or
mov
imull
mov
test
call
dec
push
xchg
xchg
xor
push
aaa
arpl
lods
xchg
adc
fs
mov
adc
jae
mov
jle
stos
inc
lock
jno
push
aad
mov
scas
orb
lcall
mov
push
mov
enter
inc
fldcw
mov
sub
test
inc
mov
adc
or
rorl
sarl
stc
daa
push
lea
inc
inc
rcrl
adcl
dec
adc
sahf
dec
int3
dec
jne
repz
sub
xlat
pop
mov
sbb
sub
shr
pop
inc
inc
dec
mov
sbb
mov
sti
arpl
shrb
mov
loop
es
out
rcrb
jne
pop
cmpsl
ret
aad
call
pop
fwait
sbb
xchg
divb
pop
ss
sub
ss
jp
imul
xchg
popf
arpl
cmp
jmp
mov
mov
call
adc
popa
jae
sbb
setae
ret
xchg
andb
inc
in
shlb
jae
insb
pop
cmp
es
int3
add
xchg
subb
mov
jne
dec
sbb
pop
cmp
inc
dec
mov
add
xchg
add
pop
test
inc
sub
and
popa
orb
push
sbb
frstor
and
jle
fldt
and
dec
dec
jge
lods
test
lret
bswap
mov
inc
bswap
pusha
pop
push
inc
sub
mov
inc
mov
jns
aas
rcrl
xorb
and
add
xchg
push
mov
int3
push
mov
pop
xor
cmpsb
pop
push
jnp
sahf
negb
mov
roll
inc
dec
fcom
cmpb
or
pop
jnp
fisubrl
loop
and
in
adc
xchg
ret
movsl
insl
jecxz
dec
mov
fwait
stos
xor
faddl
mov
test
cld
out
mov
loopne
mov
insl
adc
mov
lods
inc
out
mov
mov
adc
add
jnp
xchg
jmp
rorl
push
jb
push
add
push
mov
mov
pop
mov
add
les
inc
inc
ljmp
int
jbe
int
sub
cmp
adc
addr16
inc
shrl
or
pop
repnz
cmc
dec
mov
bound
aas
testl
out
aad
mov
push
mov
mov
das
mov
push
inc
adc
dec
mov
hlt
fcomps
test
movsl
or
aaa
push
and
cltd
pop
and
and
mov
jns
loop
cmp
xor
aaa
daa
imul
in
cmp
add
push
and
fisttpll
imul
fwait
ds
xchg
popa
or
fwait
int3
aaa
inc
pop
aam
inc
cmp
enter
pop
lret
jns
ret
test
mov
dec
push
xor
inc
dec
inc
mov
dec
adc
sbb
enter
rcrb
es
mov
pushf
inc
sti
rorb
sbb
or
push
les
adc
mov
aam
cwtl
adc
repz
jecxz
call
jns
leave
jo
setne
stos
sbb
xchg
mov
adc
add
lret
into
xor
mov
mov
fwait
pop
lock
sti
or
aas
inc
push
jo
mov
mov
add
and
mov
popa
insw
jge,pt
jbe
xchg
pop
or
add
adc
aad
push
or
dec
fcmovnbe
std
xorb
sbb
mov
lcall
in
pop
and
xchg
lea
adcl
push
lods
arpl
push
pop
mov
popf
pop
cli
or
outsb
outsb
pop
fisubl
in
into
cmc
imul
bound
addr16
jb
fdivs
jge
sub
sbb
pop
push
push
ret
jae
or
out
mov
pusha
dec
inc
xchg
sbb
les
out
jecxz
cwtl
mov
adc
adc
pop
push
out
or
fcomps
jmp
outsb
into
push
xchg
fcomps
pop
mov
xchg
xor
ficomps
mov
adc
mov
loope
mov
push
fidivs
and
outsl
cmp
cmp
cmc
stos
jne
dec
xchg
and
dec
in
notl
xchg
pop
mov
mov
loop
push
sbbl
ja
sbb
fadd
repnz
stc
gs
arpl
ret
mov
fisubl
cmp
jmp
pop
push
mov
pop
push
mov
popf
popl
lods
xor
lret
stos
mov
lea
popa
movsb
cli
sub
xchg
jmp
push
xlat
into
imul
adc
lret
dec
xorl
ja
btrl
shrb
inc
shrb
mov
pop
mov
jecxz
mov
or
push
ret
adc
andb
out
or
dec
clc
xchg
mov
movsl
iret
jae
adc
test
iret
or
into
cmpsl
xchg
jno
fxch
stos
sub
aas
mov
movsb
or
push
outsb
into
movsb
daa
and
inc
popf
jle
jecxz
into
dec
sahf
dec
jb
mov
shl
xchg
bound
xor
outsl
push
jns
test
cli
adc
fcmove
popf
in
lahf
and
in
xchg
push
jg
popf
mov
xchg
in
and
cmp
pop
clc
inc
insl
xor
ljmp
int
jne
test
loop
lret
push
dec
icebp
or
test
mov
outsb
ret
xchg
dec
das
fistps
adc
jmp
mov
fcomp
sbb
mov
cld
dec
je
mov
out
nop
cmp
lea
push
and
hlt
fdivp
out
outsb
in
popf
add
sub
andb
inc
lods
dec
sbb
adc
fs
push
loope
faddl
sbb
lods
xor
outsl
movsb
adc
or
out
adc
adc
popa
dec
repnz
int3
fldcw
das
cmpsl
push
push
push
out
adc
jae
inc
out
loop
sub
rol
or
xor
cmp
jbe
add
pop
mov
jge
push
in
inc
ljmp
or
cmpb
adc
mov
fistps
cwtl
addr16
dec
and
stos
cmp
sbbb
enter
mov
fwait
push
mov
adc
insb
mov
pop
fdivrs
rcrl
mov
add
add
xchg
adc
add
fcomps
push
inc
jb
mov
jg
aas
les
sti
leave
dec
ds
repz
or
jge
mov
sbb
je
daa
xlat
inc
rol
push
ja
push
sub
pushf
out
jno
push
sbb
mov
sub
mov
movsb
push
xchg
mov
sub
pop
mov
dec
jle
sub
int
mov
add
scas
mov
adc
ss
movsb
mov
ret
loope
inc
je
pop
and
jno
gs
xchg
movsl
jb
cmp
mov
push
lock
inc
cmp
in
or
popf
cmp
fstp
pop
mov
add
out
xor
adc
sti
inc
jb
loope
movsl
xor
jae
dec
mov
add
lods
pop
xor
test
inc
add
jno
popf
fnstsw
sbb
shlb
aad
mov
mov
push
or
pop
fisttpll
rcrl
call
aas
lret
loope
cmp
xor
pop
loop
shr
lock
repnz
data16
int
add
inc
or
les
iret
cmp
notl
ficomps
ret
movsb
mov
lret
je
in
aas
mov
xchg
imul
inc
mov
movsb
jg
sbb
fwait
xor
sbb
xorl
adc
arpl
lea
leave
pop
aas
push
or
in
jle
jmp
jmp
popf
sbbb
or
imul
stos
mov
mov
bound
test
and
cmc
dec
and
cs
popa
pop
imull
mov
jmp
jae
in
jb
mov
decb
jns
mov
loope
into
int3
mov
das
dec
fistpll
mov
shll
push
xchg
xchg
lahf
cmp
mov
sub
adc
pop
jbe
xchg
adc
iret
stos
sbbb
jns
lds
xchg
cld
inc
dec
jns
shrl
mov
push
clc
fidivs
call
iret
sub
movsb
hlt
mov
rcrl
xor
in
and
out
jbe
lods
loope
sub
test
into
inc
hlt
arpl
xor
pop
fsubrl
pushf
shrl
mov
lahf
iret
xchg
decb
pop
adc
jl
icebp
sarb
add
pop
mov
sbb
int3
jmp
cmp
rep
cld
pop
push
jno
cmp
in
hlt
loopne
adc
rorl
daa
in
mov
dec
push
push
jge
xchg
test
insl
xchg
pop
popf
popa
add
sub
lret
roll
aaa
in
sub
cwtl
mov
shrl
mov
pop
jne
testl
jmp
test
jge
add
dec
sbb
push
int3
xchg
out
add
cmp
rclb
jg
push
rorb
adcb
pop
loopne
fistl
mov
sub
icebp
fidivs
jge
sub
movsl
mov
lret
mov
mov
test
das
adc
mov
jle
sub
sbb
pop
hlt
push
stos
add
stos
data16
pop
into
lock
pop
ficoml
xchg
imul
sbbb
stos
xchg
xchg
and
incb
es
shl
add
add
sbb
mov
push
popa
pop
inc
std
mov
push
test
pop
mov
popa
cmc
repz
rorb
jo
ss
add
xor
sbb
je
ja
into
push
sarb
adc
or
ja
mov
jb
mov
mov
sbb
addb
add
sbb
sbb
jae
out
xchg
mov
in
jecxz
std
into
out
in
push
pop
pop
sub
sbb
fmulp
fisubrs
push
cmp
movsl
in
jae
mov
xchg
dec
push
repnz
sub
add
rcr
iret
rep
mov
xchg
add
sub
imul
icebp
scas
push
adc
lods
jns
test
shlb
sarl
push
aas
mov
xchg
cmpl
popf
testl
mov
jns
repnz
sbb
sub
cmp
dec
sbb
js
adc
pusha
mov
and
test
dec
mov
hlt
push
or
mov
addb
fs
xchg
sar
dec
call
fnstcw
scas
xchg
mov
xor
mov
mov
sbb
fwait
xor
push
mov
or
js
jge
cld
mov
lock
lcall
pop
into
push
addl
inc
imull
nop
dec
sub
popf
and
jne
fs
dec
xchg
lock
ds
adc
mov
jo
lods
sbb
mov
pusha
hlt
push
loopne
jbe
cld
jo
fildll
fcompl
stos
dec
popf
xchg
adc
test
pop
ljmp
xlat
sub
cmp
ss
inc
aaa
cld
loop
sbb
push
mov
mov
mov
dec
lods
inc
lahf
inc
mov
mov
xchg
mov
jge
mov
adc
push
pop
out
or
aas
mov
ljmp
out
xor
mov
cmp
xor
and
sarb
mov
std
mov
mov
fs
push
jge
bound
test
jle
cmp
notl
xchg
shrb
cmp
jno
sub
out
dec
add
pop
dec
inc
sub
enter
stos
mov
sti
cltd
ds
out
dec
inc
xchg
nop
imul
jmp
aas
inc
sbb
xor
sbb
mov
std
mov
mov
push
mov
push
adc
std
out
pop
cltd
outsl
mov
pop
sahf
mov
shl
jne
mov
cmpsb
sbb
jae
ds
and
iret
imul
mov
outsl
ljmp
sub
add
aas
sbb
movsb
push
repnz
clc
mov
or
into
push
and
mov
lahf
cmc
mulps
js
cmp
mov
addr16
adc
aaa
cltd
mov
pop
xchg
loope
sti
mov
pusha
xor
and
mov
mov
add
push
pop
mov
cmp
ret
cmpsl
mov
js
stos
andl
mov
xchg
sub
inc
push
jmp
pushf
add
ljmp
pop
icebp
xlat
add
mov
imul
fisttps
enter
inc
sub
sub
inc
popf
nop
inc
sbbb
mov
fmull
mov
loop
mov
pop
xchg
aad
dec
rorl
lods
mov
aad
nop
jmp
leave
mul
negb
loope
pop
mov
sbb
clc
mov
cmp
iret
into
je
cmp
pop
aam
shlb
xchg
jne
int3
imul
sahf
fs
sbb
and
in
push
mov
and
dec
out
test
negb
gs
pop
and
ds
cltd
jmp
loope
ret
xchg
popa
in
pop
xor
fs
sub
dec
mov
push
stos
outsb
aas
xor
js
mov
pusha
push
push
jne
repnz
push
jo
jg
pop
cmp
jp
adc
popa
push
and
sub
dec
xor
jmp
mov
dec
add
inc
add
push
imul
lret
mov
into
sahf
dec
js
cmp
add
pop
jae
fildll
sti
lods
int
add
add
push
pop
icebp
pop
loop
xor
movsb
stc
jne
jle
sbb
pop
mov
js
ret
xor
addr16
adc
in
jecxz
cmp
and
cmc
jmp
cltd
nop
out
outsl
push
add
test
dec
sbbb
rcll
jo
push
stos
mov
fnstcw
mov
js
mov
sbb
mov
std
xor
out
lds
jg
mov
mov
fstl
mov
jne
mov
and
std
clc
rcll
in
loopne
dec
test
lret
stos
push
pop
dec
sbb
sub
cmpsl
add
jmp
ret
cmc
flds
sub
aad
sahf
xor
add
stos
pop
cmp
jae
mov
mov
insb
push
push
stos
xchg
ja
mov
repz
lock
test
cli
fisttps
negb
mov
js
aam
lods
mov
push
mov
push
jb
xchg
pop
idiv
dec
cmpsb
sbbl
mov
es
popf
hlt
dec
ja
into
and
lds
sub
pop
sarl
fwait
jns
aad
cmp
pop
test
insl
clc
in
in
dec
mov
ret
jbe
sbb
cmpsb
push
pop
lea
cmp
hlt
cmpsl
and
jecxz
sub
pop
add
inc
inc
sbb
inc
pop
mov
cli
xchg
loopne
cltd
fimuls
jge
loop
mov
lods
mov
xchg
mov
je
adc
add
sub
sbb
cmp
fstl
fmull
or
sub
push
fucomp
pop
loopne
ret
sbbl
shll
in
fistpll
in
mov
xchg
inc
cmp
arpl
xlat
push
bound
adc
mov
les
rcr
movsb
icebp
mov
lahf
lea
lcall
xchg
test
into
sub
int3
or
test
ret
test
imul
jo
mov
mov
pop
or
sub
aam
pop
inc
push
outsb
xor
jns
pop
mov
arpl
add
test
or
movsl
mov
insl
lods
jge
es
push
pop
mov
or
lods
loope
out
fidivrl
out
jle
movsl
imul
ficomps
stc
xchg
aam
in
loopne
dec
xchg
lret
mov
movsb
and
aam
and
cmp
pop
ss
call
inc
stc
sub
pop
mov
sarl
xor
and
pop
bound
lods
ljmp
cmp
cmovge
xchg
cmpb
call
xlat
les
cmp
shlb
movsb
ret
cmp
out
mov
or
jae
mov
iret
movsl
les
cmp
and
and
mov
mov
jecxz
in
outsl
push
cmp
fdivrp
dec
lods
out
adc
xchg
or
inc
mov
popa
das
mov
fs
loop
lds
add
mov
xor
dec
cmp
mov
jb
dec
jnp
pop
sub
pop
pusha
xorb
mov
fisttpl
aas
and
and
adc
cmp
add
push
cwtl
push
lds
push
inc
icebp
mov
xchg
int
and
fwait
inc
xchg
lea
pushf
jge
test
pop
add
mov
jecxz
lods
aas
jp
adc
mov
outsl
mov
jl
mov
push
out
inc
inc
add
pop
mov
pop
ret
mov
pop
inc
xor
mov
jmp
lea
outsl
cmp
mov
out
ljmp
rcr
inc
xchg
out
inc
push
or
cmp
negl
lds
outsb
ljmp
int3
inc
data16
lret
adc
push
in
jns
sub
pop
or
sub
jae
test
hlt
mov
push
add
mov
cwtl
into
cli
rorb
cmp
xchg
adc
mov
jmp
cld
pop
mov
movsl
je
push
mov
cmp
mov
lock
popf
dec
xor
jp
inc
pop
jl
iret
mov
xchg
xchg
sub
loope
out
test
xor
sbb
mov
pop
push
mov
xchg
push
shr
sub
or
xchg
lods
xchg
das
or
out
divb
repnz
push
icebp
pop
dec
sbbb
mov
setne
adc
aas
insb
stc
hlt
xchg
cmp
inc
fmull
ss
in
dec
repz
mov
jno
aaa
push
xor
pusha
jmp
sbb
xchg
shll
jae
mov
nop
xchg
xchg
gs
out
lods
stos
push
fbstp
arpl
test
pop
in
les
sub
pop
xor
stos
addr16
rol
fstpl
cmpb
rcrl
push
mov
adc
xor
outsb
into
xor
imul
mov
dec
scas
sahf
call
testb
shll
cmc
fstl
fs
outsl
clc
cmp
notl
dec
les
loop
sub
xchg
add
xor
dec
cli
std
lahf
dec
adcb
les
gs
fwait
lea
adc
mov
je
test
insb
repnz
inc
pop
ja
subb
leave
inc
push
mov
icebp
call
test
dec
pop
sti
and
into
adc
sub
sbbb
and
mov
dec
pushf
stc
adc
das
mov
fidivl
insl
mov
push
ret
in
pusha
ret
xor
sbb
rorb
mov
outsl
adc
mov
inc
pop
addr16
int
lea
mov
aam
xchg
lcall
add
aad
lea
fstpl
mov
push
gs
stos
xor
stos
pusha
pop
int
add
mov
pop
scas
sbb
js
in
aas
adc
roll
mov
dec
popf
aas
mov
outsl
pop
fucomip
add
push
push
push
mov
xchg
fstpl
inc
dec
or
cltd
mov
cs
and
push
dec
and
lret
add
xor
jb
pop
repnz
or
dec
cmpsl
jg
bound
inc
popa
cmp
xchg
rcrl
repz
ret
xor
das
jp
test
pop
mov
imul
jg
inc
mov
adc
dec
inc
jge
jmp
add
and
xchg
mov
test
in
movsb
sahf
and
sub
jle
arpl
add
xchg
nop
dec
sbb
or
fwait
out
sahf
out
and
push
add
mov
push
rcr
lods
sub
adc
lret
idivb
std
adc
jae
cltd
nop
lock
inc
ror
call
ret
sub
popa
jne
lcall
lds
sub
scas
mov
mov
and
aam
lret
addr16
jle
xor
mov
mov
or
rcr
push
cwtl
xchg
cmp
fcomp
divl
push
pop
cmpsl
data16
xor
stos
cmp
mov
gs
jnp
scas
aam
hlt
out
xor
push
sbb
cli
xchg
xchg
fsubr
jle
push
xchg
xchg
icebp
les
sarb
and
fiadds
pop
pop
ljmp
and
and
xchg
icebp
ret
jg
mov
lock
add
fs
fmul
pop
dec
call
pop
sti
jns
frstor
sub
jo
aad
adc
xchg
inc
aad
test
adc
mov
fcmovne
icebp
loope
mov
push
xor
mov
fists
js
mov
incl
mov
inc
mov
xchg
or
call
aam
adc
call
jnp
or
sbb
or
jb
cmp
dec
or
ljmp
es
mov
imul
sub
lods
leave
mov
js
sti
xchg
sub
sub
dec
fwait
xor
aad
test
sub
pop
mov
sub
dec
add
fimull
cmpsl
xor
mov
insl
sub
mov
sub
cmp
push
or
jle
inc
stos
and
mov
mov
dec
scas
or
xchg
pop
jge
push
lret
les
jmp
sbb
push
mov
and
rolb
call
mov
jmp
mov
cmpl
daa
inc
push
xor
iret
imul
fidivs
lea
sbb
imul
inc
jnp
js
pop
arpl
mov
rcrb
in
add
out
push
cld
dec
sbb
shll
inc
leave
sbb
or
rolb
push
jl
pop
xchg
lods
in
lea
pop
mov
aam
insb
mov
imul
inc
lds
aaa
popa
outsb
inc
scas
jae
fwait
push
addl
mov
jbe
cltd
insb
mov
and
lret
mov
into
imul
inc
frstor
ret
fmull
hlt
ficompl
negb
jmp
jp
pop
arpl
mov
in
sti
inc
mov
mov
sub
cmc
inc
sbb
inc
pop
ljmp
inc
popf
adc
ljmp
cld
fldenv
and
jmp
xchg
lcall
shrl
push
fsubl
hlt
mov
shrl
loopne
movsl
insb
mov
adc
push
inc
push
mov
and
pop
jle
in
push
and
imul
fldenv
xchg
pop
lret
fucom
lahf
andl
add
ss
aaa
ljmp
enter
fldenv
mov
pop
cmp
jle
mov
or
rorb
fisubrs
mov
out
mov
pushl
and
fwait
pmullw
sub
call
cmp
sarb
or
out
add
and
sbb
dec
xlat
push
mov
shlb
loope
rcl
and
subl
pop
lret
pop
and
jl
push
fcmovbe
mov
or
jns
nop
add
push
cmp
ljmp
fistpl
push
xor
icebp
cmp
or
xchg
iret
or
xchg
mov
mov
movsb
aad
mov
mov
dec
ret
loope
sti
movsl
nop
jo
or
mov
iret
movsb
das
ret
sbb
int
mov
repz
inc
add
insb
cwtl
stos
cmp
ljmp
mov
xchg
iret
xor
xor
or
cmp
dec
imul
and
out
ss
nop
push
ficompl
inc
lahf
aas
adc
aas
clc
mov
ljmp
inc
cmpl
insb
or
push
adc
stos
mov
or
fcmovbe
mov
mov
dec
es
stos
push
mov
xchg
cmp
dec
pop
clc
mov
pusha
fwait
arpl
pop
push
and
add
pop
pusha
lock
orb
jnp
pop
pushf
mov
adc
lahf
or
jno
bound
push
pop
icebp
and
lahf
outsl
outsl
nop
jl
int3
nop
mov
jns
inc
ficomps
xor
sub
loope
xchg
movsb
ds
jns
bnd
and
mov
mov
aaa
jp
je
mov
repz
inc
push
or
sub
loopne
jl
and
out
imul
ret
sbb
fdivrs
jg
cmp
test
int
repnz
out
lods
lds
and
push
stos
or
or
daa
sub
mov
push
pop
fmull
fsub
ret
add
sbb
mov
dec
inc
push
icebp
and
or
aas
adc
ret
bound
das
sbb
dec
cmp
rclb
movsl
pop
shl
shrb
fs
test
bound
lcall
push
lds
jmp
inc
int3
mov
push
inc
stc
add
dec
movsl
and
arpl
test
jo
sarl
lret
insb
xchg
mov
sub
xchg
jmp
dec
dec
jb
or
data16
fbstp
insb
lods
insb
or
xor
xchg
inc
ja
mov
dec
jp
xchg
xor
fdivrs
sbb
mov
xchg
xlat
out
and
fists
lcall
inc
xor
pop
hlt
inc
shrb
aam
dec
cs
mov
adc
mov
xchg
imulb
xor
clc
imul
mov
mov
inc
push
test
lock
add
pop
stos
cmpsb
and
xor
mov
pop
mov
clc
ja
adc
pusha
pop
or
adc
adc
imul
test
pop
fisttpl
inc
push
sbb
cmpsb
test
sar
addr16
dec
sub
xor
cltd
stc
or
movsl
mov
mov
mov
out
imul
scas
lcall
fbld
daa
sahf
jae
mov
xor
aad
push
scas
or
cmc
add
inc
movsb
inc
sbb
es
mov
in
sahf
repz
mov
bswap
and
push
in
sub
or
mov
cs
xor
roll
flds
mov
out
fstl
sub
xor
aaa
cmp
adc
stc
lcall
mov
cmc
pop
xor
sub
pop
dec
push
clc
pusha
aaa
jns
add
push
xor
mov
sub
gs
sub
push
jmp
push
dec
jb
inc
int
mov
out
pop
pushf
add
das
xchg
sahf
popa
lea
loop
mov
add
hlt
mov
add
incb
faddl
mov
inc
dec
and
jl
adc
shlb
jnp
ss
dec
fcomps
aam
lret
dec
stos
cmp
cli
jp
mov
mov
lret
int
std
xorb
cmc
in
jne
xchg
or
jae
adc
test
jne
pushaw
ss
cmp
mov
imull
cmpsb
add
test
call
inc
arpl
xchg
ljmp
xorb
test
sub
out
pop
lds
mov
loope
add
cs
and
lods
add
jmp
loop
mov
outsl
mov
inc
cmc
xchg
addl
js
xor
aad
xchg
inc
push
sub
lret
pop
aad
mov
addr16
daa
inc
push
sbb
and
scas
mov
fmuls
shrb
pop
das
xchg
iret
subb
and
mov
ljmp
movsb
mov
lock
push
add
mov
pop
push
js
mull
in
push
xor
test
fnstcw
lcall
inc
aaa
xor
aad
pop
adcl
repz
stos
mov
mov
in
dec
sbb
outsl
arpl
mov
stc
dec
nop
ds
enter
test
lds
ja
int
sub
xchg
inc
and
push
cmp
fimuls
jno
cli
imul
faddl
aad
es
cmc
jo
pop
sbb
lahf
xchg
in
jp
and
fmuls
add
push
dec
pop
cs
inc
push
or
pop
mov
cmp
pop
mov
fnstsw
jb
imul
add
cmp
mov
sub
loop
cld
adc
lock
mov
push
js
ljmp
dec
adc
pop
jle
sti
bnd
mov
pop
data16
aam
mov
inc
lret
and
mov
mov
jno
lahf
inc
xchg
add
in
sbb
loop
xor
push
movsb
in
es
cld
repnz
lds
pop
xor
scas
cmc
fsubrs
dec
push
pushl
and
jb
add
push
les
sbb
mov
jno
and
inc
mov
setae
or
out
lahf
dec
inc
popa
sbb
nop
or
in
adc
pop
cmc
push
pushf
inc
dec
popf
loopne
add
outsl
dec
mov
mov
pusha
push
and
and
fcmovbe
add
icebp
push
fsubrl
mov
mov
pop
jns
ss
add
iret
aas
pop
cmp
in
sub
add
in
pop
add
test
push
shll
stos
jg
aam
arpl
adc
rcrl
pop
daa
daa
push
pop
fstpt
rcrb
faddp
fsubrl
fidivrl
stos
repz
mov
jmp
pop
loopne
icebp
push
gs
sbb
faddl
sbb
inc
xor
jo
outsl
ret
leave
inc
out
xor
or
test
insb
inc
les
popa
or
and
sbb
test
outsl
or
call
mov
sub
sbb
insb
pop
icebp
mov
mov
repz
out
adc
pop
pop
sbb
aas
xor
andl
xor
mov
xchg
mov
cmpsb
cmp
or
js
adc
push
push
or
pushf
push
movsl
test
cmp
inc
sahf
stos
pop
je
into
movsb
cld
dec
jae
xor
push
and
cmp
adc
into
jne
sbb
mov
int
mov
pusha
fsubl
popf
pop
xor
push
pop
in
mov
mov
add
and
cmp
sahf
stos
push
repz
add
push
pop
adc
sar
push
cmp
test
sbb
xchg
aas
mov
add
add
js
dec
jl
mov
mov
dec
inc
dec
sbb
adc
aaa
jp
bound
push
mov
jp
icebp
lahf
stc
dec
sub
sub
adc
cmpsl
shl
popa
and
mov
xchg
inc
and
mov
movsl
out
outsb
pop
push
xchg
adc
out
or
cmp
sub
pusha
inc
ret
data16
pop
jb
jo
popf
out
pop
xchg
xchg
mov
inc
and
punpcklwd
aam
subb
aaa
add
lds
dec
pusha
mov
clc
xchg
test
push
xchg
test
loopne
inc
xor
mov
les
mov
add
and
mov
sbbl
push
fists
cli
sbb
xchg
sub
xor
or
sub
mov
pusha
sbb
pop
pop
scas
popf
add
adc
outsb
iret
adc
dec
inc
test
enter
lret
sti
cmp
cli
movsb
in
ret
sub
mov
sub
aas
pop
fistps
jo
subl
jb
lret
subl
roll
int3
mov
pop
pop
pushf
dec
cmpsb
sub
mov
xor
sub
not
xchg
jmp
and
xor
cmp
cmc
repnz
int3
fidivs
push
subl
xchg
push
and
data16
loopne
call
addr16
insl
fwait
movsb
cmpsl
pop
insl
push
movsb
clc
fldcw
push
icebp
xor
mov
jb
fcompl
ljmp
dec
insl
jp
orb
mov
pop
fbld
cld
aas
rcrb
popf
sbb
fneni(8087
or
cmpsb
out
sbb
loope
mov
adc
negb
sub
push
out
sub
inc
negb
add
mul
cmp
shlb
popa
xchg
leave
jnp
jnp
xlat
sbb
jno
sbb
pusha
cmp
mov
test
das
add
jae
push
pop
lods
stos
mov
fimuls
out
inc
xor
fsubr
cs
popl
out
mov
imul
push
push
ds
mov
mov
les
pop
les
adc
push
inc
int3
punpcklbw
xchg
pushf
scas
cmp
mov
fnstsw
mov
in
outsb
ljmp
fwait
pop
sbb
xchg
in
cmp
inc
stc
or
pushw
add
bound
jp
shlb
lods
pop
out
lock
fmul
sub
xchg
ds
push
outsb
insb
jp
lds
mov
jb
loopne
jg
mov
aas
mov
mov
mov
roll
jmp
pop
xchg
xor
sub
rcll
jecxz
call
dec
cli
add
clc
push
sbb
and
fisubrl
adc
cmpb
or
popf
inc
pusha
scas
test
mov
mov
pop
mov
dec
jl
repnz
mov
jne
mov
in
outsl
mov
sub
sub
mov
jb
or
push
lds
push
popa
lret
mov
cmp
insl
mov
inc
mov
sbb
dec
pop
mov
outsl
push
jns
jnp
dec
mov
call
mov
adc
fnstsw
ret
iret
sub
add
lods
rep
fildl
push
pop
push
inc
xor
dec
sub
lods
mov
dec
jl
bound
xchg
push
scas
in
cmp
xorl
push
add
in
subb
and
mov
pop
and
outsb
xorb
outsb
aam
int
out
popa
cmpsl
shlb
sub
sbb
in
lock
mov
dec
add
jb
les
mov
outsl
sti
add
or
jp
cli
test
cmpsb
pop
stos
lock
adc
push
xor
sbb
adc
lds
mov
or
ss
adc
cmp
cmpsl
xchg
rcl
add
cmp
stos
xchg
jp
mov
cmc
jp
stos
jge
out
insb
add
scas
adc
ljmp
je
mov
inc
add
mov
in
cmp
mov
add
test
lret
or
aaa
test
xchg
mov
lahf
mov
cmc
fwait
or
out
pop
jo
out
jo
mov
pop
or
push
jno
jbe
std
ja
jge
xchg
fldl
js
cmc
lret
push
insl
pop
add
aad
xchg
xor
movsl
push
inc
cmp
imul
and
or
es
adc
xor
inc
fidivs
divl
leave
jp
scas
inc
mov
orb
add
pusha
jmp
or
dec
push
lods
cltd
negb
push
ljmp
jp
push
adc
fimull
or
enter
int
test
and
sub
nop
sbb
pop
jns
adc
inc
mov
or
pop
test
lret
push
and
jne
fcmovnbe
roll
cmp
xchg
dec
fdivl
lahf
pop
in
orb
loope
or
movsb
je
cld
iret
push
fld
faddp
and
in
mov
adc
pop
sbb
jbe
clc
stos
push
jb
or
add
cwtl
fisubs
lods
mov
das
call
inc
aam
ljmp
inc
cmpsb
jne
xchg
mov
dec
jg
std
xor
lods
movsl
mov
loop
mov
cmp
and
nop
out
xchg
imul
mov
fldcw
ljmp
inc
jbe
inc
cmpsb
sbb
pop
sub
jns
push
scas
or
push
enter
dec
out
mov
xchg
pop
aas
test
fsubl
mov
inc
call
movsl
xchg
jns
sbb
adc
int3
iret
cmp
insl
adc
jg
cmpsl
add
in
xor
in
cmp
loopne
xorl
xchg
mov
jge
dec
loope
add
aam
sti
mov
mov
movb
adc
inc
scas
mov
out
jo
loope
add
dec
inc
insl
cmp
inc
push
std
sbb
push
data16
sbb
dec
inc
repz
scas
dec
insl
popf
or
mov
icebp
adc
clc
jecxz
inc
jo
adc
and
dec
das
lret
inc
xchg
mov
lret
or
pop
popf
jecxz
and
mov
movb
xchg
out
jl
in
cmpsl
rcl
mov
inc
mov
mov
int
xor
sub
and
popfw
add
xchg
out
mov
aam
das
xchg
mov
mov
addr16
test
cmpsb
out
dec
repz
loopne
xchg
ret
std
pushf
sahf
adc
jae
and
test
scas
push
test
pop
jnp
shlb
int3
cmp
cwtl
jbe
in
or
pop
aaa
pop
cmp
imul
stos
lods
add
jmp
dec
pop
or
mov
mov
adc
fdivr
inc
and
fistps
sub
add
jmp
lahf
outsb
or
gs
lea
in
fldt
ror
inc
cs
dec
adc
sar
daa
cmc
sub
lds
incl
cmp
jmp
aam
insb
jl
jne
pop
ret
ja
stc
in
aad
out
cmp
mov
xchg
xchg
jle
ficoms
imul
repnz
loop
jns
cli
enter
sub
sbb
xchg
jmp
and
rorl
imul
mov
jne
shlb
cmpsb
out
sahf
push
cmc
mov
sbb
dec
jg
adc
std
popf
xor
mov
mov
xor
xchg
jp
push
ja
ja
adc
xchg
inc
sbb
cmp
push
cmpsl
pop
mov
pop
jno
inc
cmc
sub
and
adc
xor
mull
mov
xorl
stos
imull
dec
sbb
in
scas
in
enter
or
out
ljmp
loopne
jno
cwtl
dec
dec
hlt
xchg
ret
in
dec
shl
mov
lock
outsl
sub
and
push
repz
cmpsl
or
fsts
repz
fldenv
in
jmp
push
and
and
addr16
outsb
daa
rorb
xor
push
mov
inc
scas
cmp
xor
test
cmp
leave
pop
gs
sbb
popf
aas
or
sahf
nop
ljmp
jmp
or
mov
insl
cmpsl
hlt
iret
jns
mov
cmp
dec
mov
popf
cltd
lahf
fsubrl
dec
cs
xchg
jne
cmp
je
in
loop
mov
mov
imul
insb
sbb
sub
aaa
dec
mov
or
xlat
ds
lods
cmp
jge
adc
cli
inc
repnz
cmp
rol
push
je
aad
popf
or
je
jae
and
and
push
into
je
push
pusha
cltd
popa
add
xchg
or
arpl
sub
out
mov
mov
in
mov
inc
jg
ja
adc
jl
ds
add
cs
push
xchg
mov
imul
fstpl
jns
pop
in
cwtl
test
ljmp
dec
pop
inc
repz
mov
pop
fsubs
insl
sarb
ljmp
insl
in
das
sub
jle
jmp
add
push
cmc
mov
fistpl
cltd
enter
mov
adc
aad
shrb
cmp
movb
cld
pop
xchg
test
jno
xchg
scas
push
fldt
pop
sbb
movsb
and
push
pushf
loope
xchg
push
pop
adc
xlat
or
outsl
and
inc
mov
out
stc
pushf
jle
mov
push
out
das
xor
ja
sub
fs
xchg
outsl
adc
cltd
cs
jecxz
xor
outsb
in
pusha
addl
rol
xor
outsl
pop
mov
scas
add
and
add
sub
and
mov
or
popf
lret
adc
sahf
mov
sub
imulb
and
or
scas
pop
pop
cmpsb
shl
mov
adcl
sbb
xor
xchg
push
out
and
out
or
das
sbb
popa
lret
jbe
test
sub
scas
xor
mov
adc
cld
or
add
addr16
pusha
scas
add
sbb
adc
cmp
int3
cwtl
push
and
movsl
hlt
repnz
inc
fbstp
jl
push
xlat
out
mov
test
in
mov
loop
mov
inc
jp
js
xorl
mov
adc
lcall
mov
ljmp
in
fists
jge
inc
std
mov
add
rcrb
je
dec
mov
loope
push
outsb
mov
mov
push
or
outsb
daa
paddsw
dec
jnp
mov
adc
push
ljmp
cmpps
sbb
sub
or
lcall
out
std
adc
call
daa
cmp
lods
ds
jmp
or
cld
mov
fsts
fucomip
mov
jg
jp
fwait
and
adc
sbb
jo
stos
jecxz
mov
fs
cwtl
or
adc
fmulp
xchg
aaa
fisubrl
or
iret
jmp
out
cmpsb
sbb
or
daa
pop
shr
mov
dec
pop
cmp
inc
pusha
aas
jge
aaa
jbe
clc
dec
xchg
div
lcall
insl
dec
adc
push
sub
adcb
movsb
or
ja
pop
in
mov
sbb
and
lahf
mov
mov
inc
aaa
inc
pop
mov
movsb
lcall
pop
cmpsb
insl
xor
out
js
popf
xchg
in
add
fsts
cmp
pop
pop
push
sahf
shrb
push
mov
jle
pop
add
repz
fnstenv
pop
push
bound
inc
xchg
jae
push
xor
and
clc
out
pop
pop
cmp
and
xor
adc
arpl
cmpsb
je
sub
pop
pop
xchg
mov
es
sub
aam
leave
jo
push
push
xchg
shll
mov
pop
or
sbb
out
cs
dec
cmp
fwait
jo
dec
hlt
xchg
movsl
push
adc
mov
inc
xchg
std
add
or
loopne
subl
xchg
ret
ror
cmp
adc
cli
shll
fiaddl
insb
loop
insb
pop
orb
mov
stos
sbb
les
orl
xchg
inc
sti
icebp
jg
cmp
push
pop
sub
fldcw
xchg
dec
call
dec
xor
jo
or
add
test
jl
popf
insb
sarb
xorb
add
ss
out
xchg
aaa
lcall
bound
adc
bound
test
stc
mov
lret
in
pop
fwait
gs
xor
fildll
mov
mov
les
jl
pop
add
mov
mov
sbb
dec
and
sbb
cli
fs
test
xlat
imul
lret
sub
dec
imul
lahf
scas
lret
add
rcr
test
call
sub
or
sbb
test
jg
sub
push
lods
xchg
jnp
movsl
dec
dec
pop
das
pop
lret
cld
repnz
sbb
mov
jg
add
push
add
push
xchg
cmc
xchg
and
dec
insl
cmp
pop
jp
and
insb
fists
out
pop
in
ficomps
lahf
sub
sub
mov
sub
adc
and
popa
and
iret
rcll
inc
push
mov
push
cmp
jmp
sub
repnz
and
test
or
ret
mov
das
adc
clc
mov
out
mov
xlat
xor
lret
in
cmp
dec
sub
inc
rcll
mov
out
mov
sbb
push
xorl
cmp
push
sub
mov
pop
xchg
enter
rcll
add
loope
mov
xchg
leave
cmc
es
cmp
repnz
xor
loopne
or
cmp
jno
mov
mov
inc
jae
xor
iret
jg
mov
fdivs
cmp
das
icebp
and
popa
jl
cmp
inc
mov
cmp
or
sbb
sbb
xchg
or
adc
frstor
jns
std
push
mov
movsl
cli
test
mov
sub
pop
test
rclb
fbld
jo
mov
insb
fnstcw
cmpb
lock
dec
shlb
andl
scas
pop
adc
jnp
rcll
add
cwtl
inc
push
dec
shll
testb
xor
imul
sahf
imul
andl
fsubrp
jo
mov
mov
loop
sub
mov
cwtl
add
movups
repz
test
push
pop
adcl
push
popf
je
add
loopne
ja
xor
xor
add
push
xchg
xchg
mov
int3
pop
mov
xor
out
add
cmp
lds
shlw
outsl
add
ja
dec
xchg
add
lds
movsl
ja
pushf
cltd
aaa
dec
cmpsb
leave
sar
dec
aas
jbe
or
mov
push
fwait
dec
loop
sbb
js
push
pop
pop
insb
and
inc
mov
or
cli
jecxz
in
mov
or
jae
loope
xor
popf
sub
aaa
jl
imul
pop
pop
adc
aas
mov
out
jp
xchg
lds
jns
adc
mov
jecxz
cli
xchg
mov
lret
pop
les
pop
clc
aas
inc
adc
mov
movsl
mov
cmp
mov
pop
adc
dec
cmp
pop
pop
push
es
inc
add
hlt
xor
stc
mov
push
push
insb
shlb
mov
hlt
add
xor
xchg
ja
pop
pusha
push
aad
in
push
push
lds
cmp
out
ljmp
mov
xchg
xchg
mov
outsl
stos
fistpll
add
pop
mov
cmp
xor
pop
leave
je
xor
pusha
mov
repnz
sbb
and
andl
fdivrp
ret
xlat
xchg
out
inc
and
sbb
and
into
mov
nop
or
sbb
xchg
fs
es
inc
incb
lret
sub
mov
mov
jge
nop
out
mov
mov
sub
push
cmp
inc
push
and
pop
mov
int3
scas
xchg
pushf
pop
in
xchg
xor
adc
xor
sti
iret
jle
inc
mov
cltd
push
jae
dec
arpl
jo
pop
or
scas
dec
adc
sub
or
in
mov
jae
repz
cmc
movb
pop
xor
ljmp
lods
and
mov
sub
and
aas
fldcw
stos
mov
or
fistpll
mov
adc
in
repz
add
jge
mov
bound
out
sbb
aad
sbb
fdivrs
jg
push
in
fsubl
jb
and
adc
int3
inc
pop
jmp
movsl
add
lds
cmc
lret
inc
aas
or
iret
xor
cli
push
and
stos
mov
fnstenv
sub
icebp
adc
xchg
call
lds
xor
or
pusha
or
push
mov
jmp
push
std
or
fistps
aaa
jge
dec
and
mov
mov
lock
jnp
jge
mov
push
cmp
jno
sub
push
clc
hlt
mov
cmp
xchg
xor
jns
int
jl
mov
js
dec
sbb
mul
and
lahf
inc
mov
mov
xor
movsb
add
ljmp
lods
popf
ficoms
xchg
lcall
addr16
outsb
xor
dec
jecxz
pop
mov
xchg
sbb
mov
sti
into
xchg
testb
lret
inc
les
lds
fiaddl
in
lods
and
adc
jg
dec
mov
adc
mov
es
xchg
ds
rcll
pop
loopne
call
popa
fimull
lds
fnstenv
std
mov
cli
jb
lret
mov
and
dec
xchg
sub
push
int
dec
loope
rcrl
add
fistpl
scas
sbb
loope
cld
dec
pop
test
stos
push
in
std
scas
je
mov
push
pop
xlat
outsb
mov
pop
outsl
lds
mov
outsl
cmp
icebp
push
lods
or
data16
xor
fdivs
in
pop
loope
jb
and
shrl
or
outsb
test
ret
cmp
dec
sbb
iret
adcb
clc
mov
out
and
dec
ja
xlat
test
in
fs
cmp
dec
jno
and
pushf
xchg
outsb
pop
mov
mov
rcrb
popa
sbb
or
add
fs
jne
xchg
loope
fdivp
std
int3
repz
and
xor
jno
xlat
in
xchg
mov
imul
xor
fiaddl
je
scas
leave
enter
xor
xor
inc
mov
dec
sbb
pushf
ss
and
sub
pop
aad
pop
push
int
rolb
jb
inc
or
fimull
pop
std
lret
jle
lcall
jo
movsl
aaa
sti
imulb
sbb
icebp
add
pop
into
xor
addr16
pop
mov
jno
adc
rorb
push
hlt
pop
out
fdivrl
pop
sub
cmc
jmp
in
cmp
jecxz
shll
xchg
inc
sahf
pop
push
and
pop
lret
dec
jbe
xchg
xor
inc
aam
loope
and
lods
xor
subl
mov
jb
xchg
push
xchg
pop
jle
lret
push
xchg
ja
adc
sbb
aaa
and
sub
dec
cmp
pop
andl
sbb
jl
add
xchg
and
cmc
mov
ljmp
jb
or
jbe
pop
dec
add
push
cmpsb
jae
xlat
out
and
sahf
es
cmp
fcompl
scas
adc
imul
pushf
push
push
jns
cmp
rcrl
leave
mov
dec
lcall
mov
sub
cmp
lods
fcoml
movb
add
stc
inc
mov
fmulp
psraw
xchg
pop
inc
out
mov
cmp
mov
pop
in
push
sbb
cmp
enter
xchg
jmp
arpl
jbe
and
lea
sbb
mov
shrl
lea
dec
sbbl
popf
scas
sbb
aas
andb
dec
sahf
xchg
scas
cmpsl
add
adc
jo
xor
or
jmp
cmp
lds
stos
jmp
dec
jmp
and
and
cld
inc
out
sahf
mov
mov
repz
jns
cld
nop
cwtl
sub
jae
sbb
push
xchg
mov
out
xor
lret
movsb
mov
lret
add
and
lret
jb
mov
sub
push
lret
roll
xchg
mov
outsb
stos
sub
fmull
stos
cmpl
adc
xor
negl
add
in
inc
dec
lahf
mov
jmp
pop
push
add
sub
loope
test
pop
addl
or
int
fists
popa
ja
into
out
insb
outsb
hlt
ficomps
arpl
pop
xchg
or
push
pop
out
fsubs
fstpl
in
wbinvd
scas
xor
mov
pop
mov
xor
in
lret
repnz
or
filds
jbe
rcrl
inc
mov
xchg
sub
ret
out
out
clc
xor
xor
jae
in
mov
daa
insl
popa
mov
add
mov
dec
push
push
dec
lds
push
mov
popa
sti
insb
repnz
loope
insb
push
outsl
lret
std
ja
aam
pop
je
fwait
or
and
flds
adc
ret
sub
dec
fdivr
jb
out
lods
dec
adcl
cmpb
push
in
push
pop
in
in
test
out
cli
sub
adc
lock
scas
and
shl
aas
mov
xchg
inc
ret
and
outsl
dec
pop
scas
jmp
xchg
and
bound
lods
addl
mov
jmp
push
xchg
add
ja
out
mov
out
xchg
sahf
push
cmp
or
cmp
loope
call
add
mov
jle
sahf
insl
cli
in
inc
ss
arpl
jmp
popf
addl
or
xor
and
add
pop
fsubl
push
push
out
test
push
ret
mov
cmp
call
fimull
fsubr
add
out
orl
sar
mov
ljmp
popf
sbb
xchg
xchg
arpl
sbb
fldt
xchg
cld
xchg
jecxz
add
pop
je
mov
pop
pop
and
inc
cmovns
xor
aas
sbb
jmp
mov
cltd
aam
mov
cmp
and
test
int
sbb
jne
dec
push
cmc
gs
sahf
mov
aam
rclb
push
push
or
ja
lods
jo
jmp
loope
rol
out
or
pop
testb
xor
mov
scas
adc
mov
sbb
lods
test
inc
add
cmpsl
mov
cmpsb
aas
ffreep
xor
xor
movsbl
pop
cld
pop
inc
imul
iret
jae
mov
test
xor
sbbb
mov
jns
add
lods
push
add
lahf
or
mov
sub
sub
jmp
jbe
mov
push
or
cmp
pusha
ret
sub
lock
add
mov
test
dec
sarl
adc
mov
push
jnp
scas
aad
filds
mov
shrl
and
cmp
bound
out
jb
add
jmp
stos
arpl
sub
inc
sbb
xchg
dec
addr16
mov
out
xor
mov
test
cmp
lods
les
in
shr
int
repnz
gs
lcall
addr16
mov
lahf
mov
push
jae
inc
adc
push
fnstenv
cli
mov
fidivs
inc
add
subb
add
arpl
or
test
loopne
cmc
xchg
push
ja
outsb
mov
sub
fs
je
or
ret
fsts
and
push
adc
popa
js
ret
out
add
dec
nop
adc
adc
movsb
repnz
enter
sub
clc
and
js
inc
xchg
xor
popf
dec
frstor
bound
nop
addl
mov
test
inc
sbb
stc
dec
xor
or
adc
ret
fiaddl
mov
pusha
div
lret
add
lock
iret
lahf
push
and
xor
mov
repnz
loope
loop
neg
in
repz
pop
dec
sub
enter
xchg
rorb
inc
movsl
jge
add
add
mov
cmpb
nop
cmpsb
inc
mov
shlb
pop
and
out
pop
dec
aad
push
loope
test
loop
iret
cmp
add
cmp
sti
pop
or
pop
xchg
mov
fs
cli
adc
in
adcb
stc
sub
clc
out
iret
sub
or
inc
adc
in
xlat
push
popf
xchg
add
jne
xchg
cld
mov
js
mov
push
adc
fistps
xchg
jge
sub
add
xchg
sbb
mov
icebp
fcoml
pushf
std
xor
mov
scas
movsl
enter
push
pop
leave
out
repnz
mov
int
pop
js
adc
leave
repnz
aas
test
lods
test
arpl
push
fldenv
repz
mov
pop
lcall
imull
fsubl
inc
std
adc
add
movsb
lahf
inc
outsb
xchg
test
stos
add
pop
jns
sub
or
xrelease
testl
mov
add
dec
stos
mov
int3
cmp
cwtl
mov
lret
sbb
inc
insl
rcrl
and
outsl
cld
push
outsb
and
leave
and
sub
repnz
int3
rorb
xor
ja
pop
out
mov
clc
mov
jge
psadbw
mov
out
in
dec
mov
mov
mov
dec
out
jmp
jae
pushf
adc
push
into
flds
pop
pusha
shll
dec
lret
or
add
rcrb
adc
jg,pt
popf
aas
jb
mov
add
bound
xchg
sbb
lock
jnp
cmp
lods
mov
push
std
gs
mov
lret
mov
jb
js
sub
fstps
mov
sub
jo
jmp
cmpsb
into
adc
inc
sub
rclb
pop
das
pop
scas
add
xchg
aam
sub
xchg
xchg
push
sbb
cmpsl
or
add
rcrb
sbb
loop
ret
nop
cmp
fsubl
mov
sbb
out
or
cmp
pop
in
or
add
adc
jb
imul
fisttpll
jns
das
aaa
and
jmp
daa
jge
movsl
jle
in
iret
data16
imul
adcb
outsb
ffree
das
mov
push
jp
sbb
cli
pop
pop
and
push
lock
int3
lcall
fldt
mov
js
scas
jg
in
sbb
fcomp
mov
nop
mov
bound
mov
cwtl
mov
rcrb
fpatan
add
mov
fisubs
stc
icebp
jno
cmc
les
addr16
outsl
lds
dec
push
out
out
or
dec
leave
outsl
icebp
adc
jnp
jae
out
sbb
cmp
mov
and
and
jo
dec
loopne
cmpsl
in
pop
pop
and
push
shl
in
scas
pop
mov
dec
xor
pop
bound
dec
in
inc
incb
push
out
ficomps
daa
dec
mov
mov
or
fwait
mov
mov
je
je
push
jmp
xchg
stos
add
sbb
rolb
cmp
mov
adcl
pop
push
push
adc
mov
cmpsl
fs
je
mov
addr16
test
push
aaa
inc
andb
gs
xchg
cli
jge,pt
pop
mov
mov
test
and
add
daa
xor
fsubl
xlat
pusha
push
js
lret
pusha
dec
outsb
out
rcrb
xor
or
and
repz
inc
lahf
dec
movsb
out
cmpsb
rcll
xchg
adc
pop
push
adc
cli
outsl
fs
xor
stos
cmp
jg
jmp
mov
icebp
mov
aas
jb
dec
cmpsl
xchg
jb
adc
arpl
out
xor
icebp
xchg
loop
faddp
shll
das
push
mov
jg
and
jp
fildl
sti
ljmp
mov
cmpsl
fidivs
hlt
les
lcall
call
scas
xor
add
jle
dec
pop
or
cmc
mov
mull
and
inc
outsb
fidivrl
pop
mov
les
clc
sub
ljmp
sahf
vmovntps
test
add
nop
lods
sub
inc
cli
xchg
ret
pop
mov
mov
jns
sub
bound
fadds
or
adc
ja
sti
cmp
adc
outsb
or
movl
xor
pop
xorl
flds
inc
aam
rolb
sti
pop
jb
rorb
add
icebp
jb
pop
mov
jo
inc
dec
jae
jae
push
rcl
enter
popa
adc
or
mov
jmp
adc
xchg
jmp
jecxz
and
mov
lods
neg
xlat
inc
cmp
inc
jmp
movsl
jbe
test
jns,pn
and
test
stos
and
fsubrs
mov
mov
cmpsb
push
jbe
aas
sbb
sub
pop
pop
push
pushf
mov
push
fsubl
insb
call
dec
outsb
pop
sti
add
mov
movsl
mov
or
adc
das
jno
mov
in
movsb
cmpsl
mov
mov
call
jae
xchg
mov
adc
repz
cmpsb
mov
sub
aad
fisttpl
stos
cmpsb
xor
pop
inc
mov
in
imul
mov
or
xchg
das
loopne
push
idivl
xchg
leave
or
add
or
fnstsw
mov
inc
popa
jo
xlat
ljmp
jle
stos
dec
cmc
and
gs
inc
cmpsb
push
or
mov
mov
es
fs
inc
mov
xchg
or
sub
into
ret
xor
xor
pusha
or
push
adc
call
imul
dec
add
push
dec
outsl
loopne
xchg
pop
or
cmp
push
sub
aam
mov
jmp
int3
push
jae
into
lock
mov
jns
movups
jle
push
adc
mov
jp
popf
movsb
xchg
lret
fdivrl
or
xchg
addb
inc
mov
rcrl
xchg
inc
add
test
enter
mov
mov
int3
mov
flds
pop
in
mov
sbb
sbb
sbb
and
mov
mov
ds
mov
enter
jb
sar
dec
test
add
push
loope
imulb
push
xchg
jmp
into
inc
xchg
or
xchg
and
or
insb
rcrb
aaa
sub
adc
sbbb
test
cmpsl
xchg
shlb
fisubrl
jge
cmp
jle
cmpl
mov
mov
shlb
xchg
inc
cld
fimull
fwait
lea
into
in
cmp
je
push
int3
push
mov
iret
push
aam
lock
jnp
push
test
sets
cmp
xor
fimull
sti
lds
xor
lret
lahf
ds
push
pop
inc
dec
outsl
fwait
cmp
cmpsl
fisttps
push
sub
scas
jle
or
out
push
mov
outsb
rcll
loope
or
dec
mov
jb
ds
rorb
adc
cmp
pop
iret
fisubl
mov
cmc
out
xchg
jbe
movsbl
ret
mov
shll
sti
cmp
add
cmp
xchg
mov
or
adc
mov
xchg
pusha
cwtl
mov
sti
out
test
fs
cltd
mov
test
divl
push
repnz
pusha
fnstcw
push
rorl
dec
mov
ljmp
js
and
cwtl
xchg
inc
jns
clc
mov
int
dec
lret
arpl
lods
pop
in
adc
push
cmpsb
and
sbb
les
pop
clc
hlt
push
add
and
mov
mov
add
sti
insl
xor
mov
mov
mov
cmp
sarb
jl
ljmp
aam
cmp
stos
xor
lods
mov
filds
cmpsl
stos
test
addl
dec
out
and
adc
mov
pop
movsb
or
xchg
shrb
mov
imul
xchg
jns
aas
pop
jo
rol
test
sahf
jnp
xor
sbb
ficomps
outsb
adc
push
inc
adc
cmp
sbb
sub
jnp
mov
int3
pop
and
pushf
js
push
push
xor
and
and
ret
mov
push
in
mov
push
inc
mov
push
movsb
pop
in
dec
data16
les
mov
inc
shll
and
mov
enter
push
pop
cwtl
out
xor
inc
aaa
repz
mov
adc
mov
test
xchg
dec
sub
pop
or
cmpsb
lods
int3
xchg
sbb
dec
das
add
in
adc
outsb
inc
inc
add
movsb
sbb
push
jecxz
popf
cmp
andl
ds
mov
sub
das
out
lods
shrb
and
push
nop
adc
pop
inc
in
pop
adcl
mov
or
dec
insb
test
mov
cltd
call
sti
inc
adc
out
out
icebp
dec
pushf
sub
or
jp
cli
xchg
xchg
out
xor
lea
pop
mov
fwait
iret
add
xor
xor
mov
ds
mov
or
adc
push
std
xchg
scas
inc
sbb
push
add
xchg
lret
out
popa
cmpb
lcall
pop
scas
out
rol
ds
push
arpl
push
cs
lret
test
stos
iret
jbe
psllw
mov
inc
int
mov
mov
dec
int3
cwtl
inc
add
out
orl
iret
lds
xchg
mov
icebp
out
in
and
fdivs
arpl
push
dec
movsb
imul
adcb
pop
jo
pop
fdivr
pop
flds
mov
inc
add
pop
mov
stos
mov
mov
push
loope
stos
fisubs
adc
or
lods
lods
adc
sub
lods
scas
jns
inc
test
outsb
xor
sar
sub
fsubr
leave
lcall
out
out
mov
shrb
xchg
out
xchg
pop
pop
sti
push
lahf
or
mov
lcall
mov
cmp
lret
jbe
inc
mov
pop
mov
lcall
push
ss
mov
mov
cmp
out
cli
gs
add
fcmovnu
test
mov
lods
and
int
xchg
adc
roll
inc
sahf
out
dec
inc
gs
insb
and
lods
sbb
out
and
lods
xchg
movsb
call
mov
mov
lds
out
inc
je
cs
jle
sbb
jno
mov
enter
or
lahf
push
mov
or
movsl
add
bound
pop
ss
cmpsl
sub
jns
lret
sub
xchg
pop
vpsubw
into
lods
adc
orl
xor
mov
add
sbb
fstl
mov
sbb
xchg
push
pop
int3
adc
fcoml
ja
dec
jbe
hlt
lahf
xchg
scas
cmp
sub
cmpsl
add
pop
lret
jo
mov
fcomps
mov
nop
mov
mov
push
xchg
mov
das
clc
in
into
into
xor
add
lcall
and
shll
inc
outsb
stos
inc
pop
je
mov
mov
jl
jp
jo
test
lcall
aas
push
inc
pop
ret
xchg
int
fildl
pushf
sbb
addr16
pop
push
imul
aas
mov
jno
or
cmp
push
clc
dec
xchg
mov
or
push
mov
and
cmp
test
js
out
mov
mov
inc
in
jl
and
aas
fs
cmovno
es
inc
adc
ret
mov
mov
jmp
sahf
js
sbb
add
lds
cltd
pushf
mov
out
std
repz
ss
push
push
out
scas
sti
sub
pop
push
lock
adc
addb
and
aam
sub
gs
mov
leave
stos
int3
xchg
pusha
in
xorl
ds
jno
outsl
push
jb
insb
inc
sub
sbb
xor
fimuls
ljmp
in
scas
ja
jmp
and
adc
jb
lods
leave
rcrl
insl
sbb
roll
js
pop
out
in
push
add
push
ds
add
push
pop
mov
sub
nop
xor
movsb
dec
notb
push
scas
xor
add
pop
xor
xchg
repnz
call
cmp
inc
popf
aaa
pop
pushf
xor
popa
mov
icebp
or
loop
pop
rcll
dec
dec
xor
loopne
and
push
jecxz
das
push
in
add
xchg
mov
cmp
insb
sbbb
xchg
fistl
mov
mov
popa
push
shlb
sti
test
push
shrl
shrl
sub
arpl
mov
test
and
hlt
add
lret
les
push
stos
fistl
cwtl
sbb
hlt
outsb
mov
das
and
cmc
sub
cmpsl
pop
stos
jb
das
add
js
adcl
aaa
xchg
lcall
inc
cwtl
out
insl
sahf
cmp
push
mov
jmp
in
or
or
jmp
pop
sub
ja
sub
push
je
lods
dec
jmp
sbb
mov
mov
mov
aam
sbb
fisttpl
pop
icebp
dec
sarb
jp
or
ror
xor
mov
popf
push
icebp
dec
movsl
loopne
leave
cld
inc
push
jnp
push
cmp
cmp
sub
out
mov
dec
shll
xor
loopne
pop
sti
jne
adc
movsl
fsubr
mov
lea
fwait
inc
xchg
cld
xlat
incl
mov
cli
add
sub
frstor
pop
adc
jno
iret
test
icebp
loopne
mov
sbb
outsl
push
push
or
or
bound
sbb
inc
sub
mov
dec
mov
mov
mov
fwait
pusha
test
repnz
mov
leave
cmpl
clc
inc
rcrb
int
call
mov
test
das
mov
mov
xchg
adc
rorb
jb
bound
rcrb
sub
pushf
lea
pop
inc
ds
ss
xor
outsl
out
cmpsl
ja
and
int3
mov
icebp
aam
add
movsl
jb
mov
les
adc
test
in
mov
rcrl
jbe
jmp
mov
xor
je
mov
int
add
sti
lock
in
xchg
sbb
push
mov
and
and
add
adc
aad
push
clc
jmp
mov
pop
jb
enter
enter
push
push
test
test
push
and
jle
lods
inc
es
les
inc
xchg
addr16
push
lahf
inc
jmp
jns
pop
mov
push
jno
fidivrl
add
aam
or
mov
lcall
subl
js
push
imul
mov
or
bound
push
fwait
fwait
fs
xchg
test
jle
outsl
pushf
dec
addr16
or
jnp
fsubl
mov
xchg
xchg
and
fiadds
push
jnp
fsts
ret
sbb
push
push
rorb
fwait
xchg
push
in
jmp
out
sbb
mov
sbb
popa
popf
outsl
outsb
aaa
or
xchg
hlt
pop
mov
or
push
mov
ret
mov
xchg
bnd
shrb
mov
jmp
sbb
sub
lock
or
test
outsb
add
ret
inc
std
jno
test
cmp
push
push
jecxz
lret
mov
xor
sub
bound
sbb
push
xchg
rorl
jno
rcrl
imul
cs
gs
dec
sbbb
pop
sub
jnp
sub
xchg
mov
in
pop
add
mov
rcrl
movb
std
jg
arpl
shrb
das
dec
pop
movsl
push
sub
dec
loop
mov
cwtl
xor
mov
ja
xchg
inc
cmp
addr16
roll
jb
sbb
imul
pop
and
repnz
xor
cmpsb
and
daa
test
push
jmp
repz
enter
cmp
pop
push
adc
jge
cmp
fnstcw
cmp
repz
dec
shrl
mov
cmpsb
dec
negl
jle
in
adc
jb
orl
fcoml
std
in
push
adc
fildl
aad
daa
iret
sbb
sbb
jne
add
dec
inc
pop
jbe
mov
fisttpl
dec
push
mov
imul
sub
push
jne
jbe
push
popa
and
or
lock
lock
daa
shl
scas
pop
jle
ja
pop
cltd
incb
lods
push
int3
loop
lock
ja
cmpsl
daa
add
adc
jno
pop
enter
loope
mov
pop
cmc
jns
mov
pop
mov
inc
leave
inc
inc
movsb
test
dec
stos
dec
cmp
xchg
mov
push
outsl
roll
js
add
fstpl
push
or
icebp
pushl
ror
xor
jo
int
das
push
cmp
out
inc
cs
mov
adc
or
mov
in
jns
pop
xchg
mov
push
das
mull
pop
mov
sbb
mov
push
call
dec
test
mov
or
sbb
sub
add
mov
addr16
outsl
xchg
shrl
and
push
mov
out
hlt
mov
pop
mov
ss
fisttps
adc
adc
jmp
aaa
xor
lds
jle
mov
add
xchg
shll
dec
arpl
add
inc
mov
mov
and
movsl
gs
insl
insl
mov
call
dec
stos
in
mov
loop
jns
std
movsb
fsubl
in
push
lods
enter
mov
or
cmp
notb
sbb
sub
lock
scas
pusha
pop
cmp
lahf
xor
jo
sub
dec
cmp
mov
rcrb
lahf
cmp
loopne
or
adc
push
mov
add
pop
cmp
test
addr16
adc
dec
ljmp
int3
adc
lcall
and
cmp
cmpb
or
lock
jecxz
andb
out
repz
mov
pusha
loopne
pop
and
jb
stos
xchg
mulb
push
or
sub
pusha
push
mov
jmp
mov
gs
sbbb
xor
jg
in
jnp,pn
in
xchg
lock
loopne
subl
sub
movsl
pusha
ror
data16
imul
aas
lods
aas
adc
pop
data16
rcrl
add
fst
cld
xlat
loope
cmpsl
mov
sub
push
pop
pop
int
jno
ret
repz
jbe
cs
fcmove
sub
insl
and
sti
mov
test
mov
cli
push
mov
or
notl
das
push
sbbl
mov
aam
push
adc
lods
ds
int
inc
or
push
xchg
sbb
dec
xchg
fsubrs
push
or
dec
or
movsl
incl
xor
xchg
and
cld
ljmp
insb
pop
mov
pop
jno
mov
dec
jbe
repz
push
addb
mov
jae
cmp
jp
sti
xlat
cmp
lods
lock
out
adc
imul
insb
shll
je
xchg
mov
roll
add
mov
push
add
cmp
scas
notb
jbe
mov
cwtl
xchg
mov
test
lcall
fldcw
sub
and
push
mov
sbb
pop
inc
xchg
js
push
into
out
xlat
lds
test
mov
mov
mov
cmp
and
push
in
mov
cmp
inc
cmp
jns
xchg
int
xor
out
xchg
repz
sbb
xchg
add
clc
or
push
xchg
cmp
jg
sub
sub
mov
loope
into
inc
andl
movsb
repnz
rolw
xlat
int
sub
les
pop
shll
jns
add
fisttpll
add
sbbb
jle
xchg
mov
push
mov
outsl
in
pop
scas
pop
repz
jae
xchg
fs
out
jmp
mov
mov
push
xchg
jl
adc
mov
xchg
ret
out
xor
push
sbb
mov
cltd
outsw
fistpll
add
sub
mov
adc
sahf
push
cs
loopne
insl
push
push
pusha
rolb
fisubs
out
stos
testb
add
sub
mov
ror
cmp
lahf
fmuls
and
push
sti
fmulp
ret
nop
out
dec
fiadds
add
ss
jns
pop
push
cmpsb
sub
and
inc
sbb
and
cmp
pop
xor
inc
lock
repz
mov
dec
rcll
clc
mov
rcll
pop
int3
dec
push
rcrl
xor
push
sub
sub
xchg
push
dec
push
xor
dec
and
sbb
xchg
lds
gs
xlat
add
daa
stos
test
sbb
repz
and
jbe
int3
arpl
pushf
ds
fisttps
fdivrl
mov
rcrl
mov
mov
gs
pop
inc
sub
shll
cmp
loopne
pop
jmp
add
pop
mov
js,pt
imul
dec
jmp
lea
movsl
lret
sub
xchg
and
cmpxchg
xor
and
adc
fcmovb
or
pop
jecxz
push
cld
stos
aad
rcr
push
insl
call
lods
popa
test
pop
adc
mov
mov
icebp
jae
out
sbb
mov
out
adc
lods
outsl
aas
int3
xchg
adc
loope
mov
push
mov
les
les
cmpsl
test
mov
push
movsl
in
into
gs
data16
jo
lahf
adc
xchg
pop
popa
testb
aaa
jecxz
dec
decb
sbb
or
pop
sub
sub
push
popf
pushf
push
xchg
add
insb
in
ljmp
xor
add
movsl
aam
out
ja
add
jmp
or
les
dec
cmpsl
pop
xlat
mov
subb
imul
insb
int3
je
push
dec
out
movsl
mov
mov
sbb
or
xchg
pop
xlat
and
iret
inc
sub
xchg
add
jecxz
data16
scas
mov
in
mov
xchg
iret
lock
movsb
or
cmpsl
hlt
xor
sub
xchg
xchg
jp
add
sub
pusha
push
mov
jmp
cmp
dec
leave
out
into
mov
sbb
xchg
xor
add
ds
dec
fstpt
push
and
lea
jbe
aas
push
movsl
xchg
inc
jo
dec
mov
or
cmp
jle
lret
inc
mov
cmpsl
inc
pushf
pop
movsb
push
sub
add
xchg
lods
orl
mov
pusha
in
ja
sbb
push
push
outsb
xor
xor
sub
fisubrl
inc
subb
dec
jns
mov
xchg
fucomi
aad
xor
js
fst
adc
outsl
arpl
and
push
fistpl
lods
in
sbb
push
xchg
pop
imul
pop
mov
movsb
mov
clc
sbb
jg
and
in
cmp
dec
jne
iret
cmp
cltd
popf
mov
pop
push
jbe
jl
push
cld
cwtl
ds
mov
adc
cmp
loopne
dec
inc
addr16
lcall
push
pop
cltd
push
adc
jge
sti
lds
out
mov
jp
scas
push
mov
cmc
xchg
sub
xor
dec
pop
push
xor
in
mov
cmp
or
jmp
sbb
aaa
mov
movsl
repnz
add
pop
mov
stos
in
and
cmc
dec
pop
add
mov
cli
or
xor
scas
xlat
mov
or
xchg
hlt
cmp
jo
rcr
cmpsb
pop
mov
out
out
inc
jg
aaa
pop
or
pop
cmc
out
les
in
mov
cmpsl
adc
fucomp
lret
push
ja
lcall
pop
test
imul
pop
dec
mov
adc
cwtl
popf
or
or
es
add
push
sub
aaa
dec
xchg
dec
lret
sbb
js
xchg
and
adc
jno
into
arpl
jne
sub
insb
dec
adc
sbb
call
mov
int
idivl
adc
arpl
jmp
loopne
scas
sbb
aam
fucomip
jne
jno
setge
test
arpl
into
cmpsb
fsts
add
out
pop
hlt
popf
pop
into
xchg
andl
sub
and
rorb
shr
popa
cli
sbb
packuswb
mov
mov
cmp
aas
sub
mov
lcall
idivl
in
scas
add
sbb
and
mov
and
aas
leave
inc
fstpl
pop
ficompl
inc
and
jb
xor
xor
xor
movsb
cmpsl
jge
das
cltd
lds
and
xchg
xor
clc
xchg
movsb
popf
jae
jge
xchg
data16
bound
xchg
push
add
push
jbe
adc
aam
push
lahf
fstps
pop
push
xchg
push
push
cs
mov
std
jns
aaa
into
gs
push
movsb
and
repz
push
loopne
mov
jecxz
pop
int
pusha
shrl
in
adc
clc
mov
fsubr
in
or
xor
popf
jmp
mov
pop
ficoml
inc
dec
repnz
mov
xchg
sub
call
inc
adc
hlt
rcll
out
rcrl
inc
rcl
inc
sub
test
add
xchg
and
fidivl
pushf
jno
cmp
jge
ds
sahf
popa
rorb
dec
rclb
jmp
xchg
jb
adc
out
das
fwait
mov
sub
nop
loope
orb
xor
test
inc
xchg
fstps
mov
mov
scas
in
xchg
add
mov
sbb
or
mov
scas
push
mov
cmp
in
mov
test
fsts
inc
mov
adc
sbb
cmp
pop
loope
pushf
outsb
les
xor
ret
ret
nop
add
jbe
adc
jg
mov
push
in
movsl
add
and
xchg
arpl
iret
out
dec
jo
xor
or
mov
pop
bound
xchg
xor
enter
pop
dec
push
and
out
insb
pop
adc
cmp
popa
sbb
addr16
mov
push
xchg
inc
push
clc
ret
test
sahf
jns
sub
sub
aas
ret
add
popf
push
out
faddl
int
dec
mov
loop
pop
xchg
std
jns
jno
shrb
inc
xchg
cmp
mov
add
in
push
cmc
ficoml
jnp
pop
pop
orb
test
jno
repnz
scas
in
mov
inc
bound
pusha
stos
jge
xor
addr16
jge
fstpl
sbb
pop
aaa
xor
iret
cld
lock
stos
or
idiv
xor
fimull
jp
push
test
aas
pop
xchg
divl
imul
fisttps
and
adc
stos
cld
popa
pop
loope
inc
repnz
sar
mov
dec
addl
dec
cmp
pop
fwait
addb
xor
cli
and
outsb
dec
or
negb
jl
and
pop
pusha
pop
mov
jo
inc
cwtl
xlat
mov
push
lcall
mov
ret
shlb
test
les
mov
jmp
and
arpl
loope
pop
and
add
out
xchg
adc
fstl
pop
outsb
sub
inc
sub
or
mov
bound
fnsave
lods
jp
addr16
xchg
push
fsub
adcb
push
mov
jecxz
and
mov
xchg
cmpsb
lock
dec
or
push
and
loope
cs
push
movsl
fs
push
ds
mov
pop
cwtl
jno
aaa
mov
sub
pop
negl
repnz
sti
sub
or
ret
imul
cltd
mov
dec
cmpsb
adc
sbb
push
jecxz
ret
pop
sub
cmp
dec
dec
pop
aam
fprem1
aaa
pop
cltd
cmp
lock
pop
mov
shlb
pop
or
imul
shlb
jnp
or
clc
leave
out
ja
cmc
cmp
sbb
ds
jmp
add
inc
cltd
xchg
out
in
xchg
in
out
or
cmp
scas
add
inc
clc
add
mov
cmpsl
adc
push
mov
mov
popl
mov
outsb
add
mov
mov
xchg
inc
jo
xchg
jae
cmp
incb
sbb
je
cmp
fisttps
dec
dec
mov
mov
imul
inc
xchg
out
and
lahf
mov
mov
and
lods
das
outsl
pop
dec
icebp
js
loop
adc
std
test
mov
aad
std
lock
movsb
dec
arpl
repz
xchg
dec
mov
push
ss
push
xchg
ds
mov
mov
stos
ficomps
popa
fidivrl
jge
sub
jne
lods
xlat
dec
repnz
mov
test
pop
mov
icebp
sbb
xchg
filds
sbb
pop
inc
testl
and
movsb
mov
sbb
cmp
dec
cltd
xor
adc
cmc
push
cli
mov
xchg
mov
stc
out
lahf
adc
cmp
dec
dec
ds
or
mov
movsl
dec
adc
pop
pop
mov
xchg
into
out
mov
aaa
aaa
push
in
rorb
jae
xor
ljmp
out
lds
movsl
testb
xlat
xchg
or
push
out
sbb
ss
and
xor
leave
sub
in
add
xor
push
inc
xchg
movsb
mov
inc
cmp
and
push
jb
loope
lods
mov
iret
lock
pusha
scas
mov
fidivs
nop
adc
loope
idivb
sub
cmp
push
mov
jle
movsl
test
mov
mov
xor
dec
out
cwtl
rorl
test
mov
stos
cmp
jge
pop
sbb
mov
mov
in
cmpsb
adc
adc
fld
repz
jne
or
icebp
jnp
mov
mov
push
pop
inc
lret
aad
dec
cmp
jns
out
dec
push
icebp
aas
mov
pushf
cli
mov
xor
jae
cmp
adc
lods
inc
inc
and
dec
clc
je
push
xchg
mov
xor
xchg
sbb
sub
out
pop
stos
add
pop
jbe
xor
out
add
loopne
push
cmp
pop
out
jmp
scas
pop
xchg
mov
or
out
sbb
xchg
in
dec
nop
jp
aad
lahf
and
popf
ficompl
lock
rcl
jb
sub
lcall
mov
jnp
sub
sbb
rolb
ljmp
pop
es
mov
push
mov
xlat
dec
inc
or
and
movsl
mov
ja
mov
loope
idivl
jno
pop
mov
mov
push
orl
lods
inc
mov
jae
push
mov
jb
sub
dec
pop
and
push
pop
out
cmp
mov
mov
cmp
mov
iret
dec
std
pop
jo
mov
cmpl
cmp
js
test
or
repz
xchg
mov
mov
dec
jbe
xchg
jmp
mov
es
daa
jp
xchg
out
in
aam
mov
test
andl
mov
aaa
push
add
adc
mov
push
in
add
addr16
cs
sub
add
dec
int
dec
test
cmp
dec
orl
dec
sti
dec
lods
push
pop
pushw
fs
adcb
rcl
es
xchg
or
push
jb
stos
gs
cwtl
call
call
xchg
addr16
sub
sbb
mov
mov
bound
js
bound
and
mov
test
mov
pop
push
sub
dec
scas
lods
fimull
mov
adc
push
inc
pushf
rcl
sub
xchg
jmp
in
sti
inc
fs
push
and
js
or
lods
dec
mov
leave
out
cmpsl
xor
cmp
pop
dec
push
sahf
mov
and
sbb
lods
dec
push
mov
pop
cmc
dec
iret
mov
jne
insb
xlat
out
je
popa
or
out
fchs
cmpsl
fnstsw
into
fnstenv
mov
fs
lock
roll
push
xchg
stos
inc
imul
add
dec
das
sbb
into
sub
adc
loop
out
jmp
cmp
shrl
jmp
les
pop
push
sbb
outsl
loop
and
cmpsb
aad
cmp
lock
lock
jb
xor
lahf
icebp
stc
mov
add
xor
dec
mov
shlb
xorl
arpl
mov
ret
push
shr
hlt
out
mov
stos
mov
imul
subb
shlb
loopne
popf
sbb
popf
movsb
push
push
lds
inc
push
mov
xor
stos
sbb
rcrb
mov
je
sahf
add
dec
ret
insl
push
decb
mov
pop
cmc
pop
in
lcall
mov
daa
push
adc
adc
subl
adc
lret
mov
je
call
shr
pop
inc
clc
fwait
cmpsb
jecxz
shrl
inc
cltd
sar
pop
cmc
inc
cmp
rcl
aad
aaa
lods
dec
xchg
lods
scas
or
test
push
jo
push
pushf
or
int
stos
mov
add
add
jp
fwait
data16
push
addl
adc
mov
lea
mov
int3
out
pusha
fwait
dec
outsb
mov
push
dec
ret
cmp
je
repz
out
stc
push
mov
jae
addr16
sub
outsb
mov
cld
xor
sub
mov
es
xor
aas
hlt
add
add
jo
popf
adc
push
jne
nop
xor
fsubs
dec
int3
cmp
lret
mov
jecxz
outsl
or
pushf
fnop
scas
pop
inc
movsb
xchg
in
ror
cmp
mov
xor
jne
test
loop
movsl
jmp
aaa
sub
lret
in
jb
jns
xor
cli
js
sub
dec
xchg
cmp
aad
mov
nop
out
pop
push
cltd
fadds
js
fcmovnu
inc
movsb
cmp
xchg
pusha
clc
sbb
repz
sub
jp
dec
pop
add
es
hlt
arpl
aas
and
jo
lret
in
mov
mov
push
xor
jmp
cwtl
dec
rorb
lret
cltd
mov
loopne
mov
or
push
es
inc
lahf
andb
shrl
mov
mov
add
lods
popf
ljmp
imul
jo
inc
pusha
rcrb
in
adc
sbb
pushf
add
inc
mov
push
std
outsl
push
arpl
addl
mov
jecxz
and
addr16
inc
pop
andnps
jge
pushf
daa
and
push
xor
pop
dec
or
rcll
jnp
test
push
pop
stc
jno
adc
xchg
icebp
lock
repnz
ljmp
scas
inc
lds
pop
mov
add
or
mov
outsb
cs
stc
dec
jmp
aad
popa
bound
lea
xchg
or
dec
add
or
dec
loop
inc
data16
adc
mov
cmp
xor
insl
cltd
mov
inc
mov
movsb
test
ret
xor
call
dec
popa
cwtl
popf
cmp
xchg
leave
push
mov
xor
lcall
jg
cltd
sahf
stos
mov
scas
arpl
cmp
dec
pop
int
ss
movsl
jo
mov
mov
sti
cwtl
addl
sub
and
mov
mov
mov
pushf
inc
mov
cmpsl
sub
lret
cwtl
test
pop
xchg
cmp
or
out
test
push
insl
lahf
or
shlb
hlt
cld
and
outsl
lahf
sub
jae
add
adc
movsl
adc
pop
in
push
mov
xor
cmp
imul
stos
fstpl
inc
movlps
icebp
adc
add
add
push
int
out
clc
les
into
in
or
jo
sti
mov
test
xchg
push
mov
clc
xchg
push
icebp
and
push
mov
push
and
popa
sahf
in
jae
ja
sbb
push
int3
fs
and
sbb
sbb
data16
dec
bound
sub
or
hlt
addr16
cmpsl
pop
xchg
fisttpll
into
pop
js
test
mov
inc
cld
and
xchg
push
xchg
arpl
xor
jo
jp
in
mov
test
xchg
and
xor
push
test
rcrl
inc
shrb
mov
push
push
rorb
cmp
sar
aaa
mov
cmp
pop
sti
sub
mov
jmp
or
fsubrl
cwtl
jge
mov
inc
cmp
fwait
cmp
lret
into
out
pop
push
aas
dec
nop
cmpsb
jbe
pop
pop
mov
pop
mov
and
mov
jo
lcall
addr16
popf
dec
or
pop
xor
sbb
xor
outsl
outsl
lds
ss
pushf
outsb
adc
mov
outsl
ret
movsl
add
fsubrp
add
lcall
mov
lret
lods
sbb
mov
sarl
push
aam
pop
fs
testb
scas
mov
jnp
add
enter
jle
push
stos
dec
add
adc
subl
cmc
pop
repnz
inc
inc
ss
or
stos
ds
adc
icebp
xchg
sahf
cmp
adc
inc
sub
or
dec
sbb
adc
push
mov
sti
adc
loop
stc
pop
in
mov
mov
shl
cwtl
or
mov
sbb
mov
rolb
enter
out
pop
mov
add
and
push
lret
fnstcw
jp
xchg
inc
mov
nop
sbb
das
inc
cmp
imul
pop
inc
andl
ficompl
cmpsl
add
mov
xchg
fiaddl
ja
cli
xchg
mov
loopne
fwait
and
sub
push
adc
push
lea
mov
and
std
push
pop
int3
es
add
in
jae
outsl
sub
mov
imul
je
jb
sbb
inc
xor
cltd
xor
or
scas
push
lret
insb
cwtl
cwtl
and
cmp
in
pop
xor
jo
sub
popa
outsb
jnp
xor
pop
dec
sbb
inc
inc
lea
push
mov
bound
cld
adc
dec
sub
or
push
cmp
sub
aam
data16
subb
jno
xchg
xor
in
cli
push
jno
mov
mov
xor
mull
adc
aad
in
cmp
xor
pop
enter
dec
inc
shrb
aad
shlb
mov
test
push
cltd
mulb
fwait
bnd
dec
imul
cltd
das
jo
sahf
outsl
out
add
add
insb
jbe
mov
insb
rcll
jmp
fwait
loopne
aad
sbb
inc
std
or
shrl
pop
xor
repnz
jne
in
lcall
xchg
lock
or
push
push
pop
insb
pushf
in
out
adc
fmul
fdivs
inc
ljmp
insb
and
adc
bound
popf
adc
mov
aam
clc
cmpsb
aas
arpl
loope
movups
inc
push
inc
mov
scas
test
out
pushf
lret
cmp
test
lods
pop
pop
push
daa
inc
adcb
pop
mov
and
mov
push
aam
xor
enter
ficoms
push
xor
lret
inc
rcr
arpl
pop
test
mov
mov
imul
jno
andl
test
cld
sbb
xchg
adc
mov
jb
fwait
shrl
pop
push
in
ret
enter
mov
lea
push
in
clc
add
and
cmp
sahf
or
dec
leave
or
dec
cmpsb
push
mov
movl
in
sub
test
add
clc
mov
pop
out
fldl
mov
shrl
shr
xlat
rorl
aaa
pop
repnz
fnstenv
cmp
push
je
mov
mov
jns
incl
repz
adc
xchg
mov
mov
subl
push
pop
or
adc
cmp
add
adc
xchg
pop
sub
aam
std
in
and
addl
sbb
ljmp
popa
mov
inc
push
add
neg
push
cs
mov
test
stos
adc
adc
inc
rcll
inc
push
gs
sbb
mov
mov
popf
aas
outsl
jb
push
out
pushf
loopne
xchg
arpl
shrb
push
into
cwtl
xlat
xchg
add
shrl
insl
cmpl
in
mov
outsb
pop
xor
inc
xchg
xorl
inc
jle
movsl
xor
mov
and
mov
jle
fists
ljmp
jb
out
cli
mov
in
wrmsr
pop
adc
in
mov
pop
rorl
in
fucomip
pop
mov
aas
push
enter
cmp
loopne
test
add
or
dec
or
mov
mov
test
mov
icebp
dec
pop
jecxz
push
mov
mov
add
popf
repz
inc
inc
sub
xchg
mov
subl
sub
popf
rcrl
lret
sahf
mov
xor
jns
xchg
mov
inc
out
aad
lock
jg
cmp
mov
pushf
adc
pop
and
or
cmp
and
jle
and
cmp
fsubrl
mov
inc
jae
in
or
shr
xchg
popa
hlt
jnp
icebp
mov
jg
ret
mov
adc
movsb
inc
pmaxsw
repz
jmp
clc
das
imulb
push
xlat
testb
ret
sub
sbb
sub
lret
xor
ljmp
lods
es
lds
adc
mov
mov
cld
or
outsb
andb
lods
mov
cmp
jmp
arpl
in
mov
cmp
cmpsb
sti
xchg
adc
mov
mov
lcall
pop
and
loope
dec
or
sbb
jae
inc
dec
mov
mov
cmpsb
push
mov
shrl
push
dec
out
daa
push
or
cmp
lea
stc
imul
push
jge
sub
xchg
test
dec
shlb
add
mov
mov
mov
push
mov
mov
ss
add
pop
adc
xchg
jne
adc
sahf
push
and
add
push
or
pop
insb
call
push
sbb
ret
xor
lea
addr16
jb
pop
push
cmpsb
mov
mov
adc
test
addr16
adc
push
pop
stos
out
in
fnsave
push
popa
or
bt
out
inc
testl
in
inc
xchg
iret
xchg
movsb
movsb
push
mov
adc
and
jg
lea
call
test
dec
pop
sahf
lcall
xor
pop
cmp
pop
dec
sub
xor
in
std
push
xchg
xor
or
std
mov
jge
dec
pop
test
gs
mov
leave
adcl
test
and
pop
loopne
sub
jne
add
call
test
fimull
ss
push
inc
lods
repz
pop
movsl
lret
sbb
fimull
pop
stos
aam
jne
mov
inc
push
jne
sbb
mov
xchg
into
outsb
pop
xchg
mov
hlt
add
and
dec
andb
int3
sub
scas
fsub
lock
loop
xchg
mov
sbb
ds
xchg
adc
movsl
stc
decl
bound
and
outsb
push
stc
iret
movsl
pop
dec
lret
repz
out
insb
add
imul
fdivrl
ret
jnp
adc
dec
out
push
div
inc
movsb
enter
jp
push
lret
mov
xor
xchg
arpl
cmp
push
cmp
loope
pop
lock
adc
adc
or
mov
arpl
sti
push
and
movsl
inc
sbb
test
mov
divb
cmp
add
shrl
lret
cmp
pop
negl
outsl
cwtl
jae
rcrb
or
push
shl
insl
pop
push
cld
mov
aam
dec
cmp
cli
repz
add
insl
insb
fcoml
jmp
cltd
repz
fcoml
add
sbb
repz
mov
bound
dec
pop
sub
lock
mov
pusha
and
dec
aaa
ret
pop
imul
imul
aas
mov
stc
call
inc
pop
jb
sbb
test
sbb
and
push
aaa
pop
inc
pop
push
stos
push
stos
daa
jo
inc
xchg
rcrl
int3
mov
addr16
push
cli
inc
sbb
pop
and
push
xchg
mov
cmc
test
add
iret
cld
add
pop
int
bound
daa
or
test
cmp
cmp
jmp
arpl
sub
or
mov
ljmp
xor
lret
mov
lahf
gs
jg
cmp
addl
mov
sti
insl
adc
popf
popf
inc
pop
inc
fisubrs
or
jp
out
bound
stos
mov
ljmp
xchg
sti
mov
dec
lods
out
xor
push
sahf
and
faddl
dec
nop
shrb
out
dec
and
cmpsb
mov
test
fsub
andb
lret
mov
mov
xchg
lods
enter
or
sahf
je
stos
adc
sbbb
test
mov
sub
fildl
lea
push
push
rclb
cwtl
dec
fcomps
push
add
sti
test
xchg
and
int3
fwait
jne
jno
mul
and
dec
mov
cmpsb
mov
mov
add
bound
sbb
cltd
jecxz
xchg
sbb
dec
jl
mov
inc
cmp
pop
xchg
mov
xchg
xchg
pusha
pop
mov
xor
subl
mov
xor
pop
mov
movsl
stos
fstl
mov
jb
in
sti
jnp
sub
sub
mov
sub
out
mov
cmpsb
and
daa
arpl
test
test
xorl
sbb
or
das
ljmp
pop
stos
scas
iret
jnp
or
mov
or
bnd
loopne
clc
or
xor
sub
arpl
decb
addr16
out
ds
jg
loopne
daa
mov
sbbb
mov
dec
cmp
inc
jae
jl
cmc
xchg
add
dec
mov
aad
jg
bound
imul
xchg
mov
test
insb
rorl
daa
dec
push
icebp
hlt
aas
cmp
aam
and
ljmp
xchg
negb
mov
pop
cltd
fucom
aaa
insb
xchg
lret
popf
jmp
gs
movsl
stc
fistpll
pop
pop
push
add
xchg
cvtpi2ps
inc
fwait
pusha
out
in
xchg
pop
push
aas
sub
sub
mov
cld
sahf
imul
je
cmc
popa
sahf
push
loope
mov
and
mov
rcrb
jecxz
movsb
in
xor
adc
jmp
shr
inc
or
pop
mov
push
shrb
dec
and
push
jb
js
addb
aas
mov
xchg
inc
mov
icebp
fstpl
cmpsl
stos
or
mov
jne
out
mov
xchg
movsl
xchg
shrb
hlt
pop
sub
jb
add
xor
outsl
and
xchg
push
add
stos
jmp
push
ljmp
idivl
jb
mov
loop
adcl
nop
push
sbb
stos
inc
int3
jno
roll
sbb
add
xor
cmp
jb
movsb
pop
insb
mov
xor
push
les
or
cli
data16
or
cmp
jnp
fcomps
lcall
and
gs
aaa
sbb
mov
mov
xor
xchg
clc
loop
dec
test
sbb
clc
aaa
push
adc
jne
fidivl
std
cld
xchg
ret
or
pop
test
shll
inc
shl
int
jnp
jo
jne
sub
adc
call
jbe
adc
mov
sub
and
mov
cltd
cmp
loop
dec
pop
cmp
scas
sbb
mov
js
jp
fistpl
mov
fiadds
adc
pop
jnp
in
jne
or
or
rcrb
adc
es
adc
sub
xor
lock
jle
scas
jl
cli
push
out
jno
repz
dec
add
sahf
jno
adc
arpl
mov
mov
outsl
dec
stos
adc
je
cmpsl
cmp
push
pusha
int3
adc
aaa
push
mull
xchg
xor
or
push
push
shr
pop
fldcw
add
pusha
sbb
daa
jmp
lahf
cmp
jp
insb
adc
cs
sbbl
test
pop
mov
test
shr
js
xchg
lods
out
into
sub
cwtl
cmp
cmp
fnstsw
jns
popf
mov
push
dec
fs
pop
mov
movsl
fnstenv
inc
jmp
xor
sub
cwtl
jae
gs
inc
data16
cmp
adc
fldcw
inc
into
out
cli
xchg
fwait
pop
xor
mov
inc
hlt
sub
dec
xchg
in
pop
xor
hlt
push
push
jnp
sbb
ljmp
mov
pop
sbb
iret
add
out
pop
xchg
pop
adc
mov
enter
jae
mov
in
rclb
ret
inc
in
xor
popa
lods
dec
pop
cmp
shl
imul
das
and
push
pop
xchg
fisttps
add
stos
sqrtps
ret
mov
or
les
mov
xchg
sub
pop
ret
mov
cmp
loopne
dec
stc
rcrb
cmp
repz
movb
mov
repz
mov
or
jbe
sub
push
ja
cwtl
lret
test
or
ljmp
test
call
imulb
push
jl
stos
aas
lock
jne
aas
mov
pusha
xlat
mov
push
sbb
hlt
dec
sub
leave
xchg
stos
mov
adc
mov
push
dec
bound
adc
push
add
push
sbb
bound
add
jle,pt
imul
mov
popa
xchg
mov
sub
aad
lock
mov
mov
mov
ficoms
jmp
call
shrb
das
xchg
mov
adc
mov
xlat
out
ficoml
or
insb
out
daa
not
jno
dec
mov
std
ljmp
sbb
mov
rol
inc
cltd
push
pop
lret
aad
int3
adc
jp
imul
movsb
jnp
ficomps
mov
mov
sub
pop
jno
jg
inc
xchg
xchg
mov
hlt
jle
xlat
das
in
mov
jb
mov
out
pop
aas
xchg
jne
cli
int
jbe
fisttpll
and
outsb
or
pop
adc
xor
pusha
jnp
fdivrs
pop
push
sarb
ja
call
push
aas
jno
cs
ds
movsb
jecxz
mov
icebp
stos
and
cmpsb
stos
xchg
jl
jecxz
pop
scas
push
xor
mov
mov
fbld
xor
add
dec
sub
jo
jnp
cmpl
mov
sub
fwait
hlt
fs
arpl
lea
ret
xchg
push
js
daa
inc
insl
cld
test
shll
jns
xchg
cld
ljmp
sub
rcr
loope
jnp
mov
ljmp
notb
orl
jb
push
imul
jne
popf
xlat
ret
jnp
or
adc
daa
stos
pop
test
push
popa
dec
sub
outsl
pop
mov
xor
cmp
movsl
xor
inc
mov
mov
mov
pop
add
jp
sti
mov
cmpsb
icebp
inc
push
xchg
aam
das
fwait
icebp
mov
or
mov
adc
int3
mov
out
or
inc
jo
iret
cmp
mov
mov
pop
pop
jbe
xchg
adc
decl
daa
mov
sub
std
cmc
addl
clc
jge
repz
or
bound
repnz
in
pop
fcmovu
dec
leave
pop
and
inc
mov
scas
cmp
push
inc
or
lahf
ds
sub
inc
ja
and
addr16
mov
mov
mov
mov
iret
or
and
add
popa
fstpl
add
cmp
xchg
cmp
xchg
sbb
cmp
pusha
sub
mov
faddp
aaa
js
stc
out
mov
fucomp
and
lcall
mov
sub
test
mov
and
and
inc
sbb
inc
jno
cmpsl
cmp
push
xchg
dec
pop
es
xorl
aaa
xchg
sar
inc
xor
sbb
jmp
hlt
aad
pop
cmp
push
inc
xlat
fs
cld
jp
jge
xchg
and
loop
mov
mov
sarl
loop
inc
outsl
push
jns
dec
inc
sub
add
lcall
mov
jecxz
mov
in
xchg
jp
in
push
mov
inc
xchg
mov
pop
psrlq
dec
push
pop
xor
inc
mov
mov
sti
sbb
mov
lahf
lock
push
inc
data16
inc
vmovapd
pop
pop
sbb
push
in
xchg
cmp
roll
jne
xchg
inc
enter
rolb
scas
stos
testl
call
mov
js
clc
sbb
sbb
int3
out
cmpsl
mov
hlt
xor
mov
xchg
sub
daa
push
lret
mov
jne
cmp
xchg
sbb
sub
pop
or
cwtl
cmp
sbb
inc
and
aas
mov
fiadds
and
bound
pop
insl
in
mov
frndint
pop
cltd
jb
adc
or
mov
insb
mov
add
xor
mov
mov
sub
sub
mov
cmpsl
jno
dec
xor
pop
shll
xchg
mov
xchg
adc
cli
icebp
outsl
cld
out
mov
test
xorl
push
sahf
mov
data16
inc
stos
xchg
pop
jg
or
sub
jbe
iret
sahf
fildll
mov
sbb
mov
adc
pop
mov
clc
dec
lret
cld
pop
leave
mov
and
inc
in
adc
fs
cs
sarb
frstor
call
jns
outsb
xlat
mov
and
xor
mov
icebp
xor
cmp
andl
xor
jmp
dec
lahf
inc
push
mov
adc
lock
out
daa
push
jae
imul
and
mov
push
jl
push
and
jl
mov
fsubrl
sti
dec
jnp
cmp
pop
jmp
mov
gs
int
pusha
adc
mov
lret
ljmp
in
clc
mov
in
adc
sub
xlat
aaa
xchg
xor
std
leave
push
scas
pop
fisubl
inc
negl
jns
sub
out
mov
out
imull
inc
scas
test
xchg
sahf
sbb
push
ss
inc
mov
lods
inc
inc
jb
jae
lcall
inc
stc
mov
mov
js
das
xchg
jmp
sbb
jecxz
call
cwtl
sti
out
jmp
add
clc
dec
mov
fadd
xor
outsb
cmpb
dec
arpl
popw
push
rcrb
fnsave
imul
shl
pushf
xchg
push
sub
pop
or
inc
mov
or
pop
sahf
rcll
mov
imul
and
outsl
movsb
sub
mov
and
adc
pop
add
and
jnp
and
xchg
out
add
lea
daa
xchg
xor
imul
pop
shll
nop
aas
inc
ja
or
sub
xchg
add
int3
xchg
and
call
in
fcompl
mov
lcall
inc
mov
das
iret
loope
jg
stc
and
add
int3
adc
push
lds
fdivr
dec
or
sbb
adc
mov
stos
sub
mov
fadd
dec
xor
push
mov
popf
cmpsb
push
add
lods
push
push
xchg
add
mov
loop
int
aad
push
pop
or
iret
push
xor
lcall
xchg
pop
push
fldenv
add
jb
add
jnp
xchg
mov
ror
out
and
cmpsb
rorl
adc
and
inc
pop
daa
fsubrl
jmp
xchg
xchg
test
in
and
mov
xchg
add
cmp
clc
out
fistps
test
add
insl
mov
lods
lea
sahf
sarl
sbb
pop
shll
lock
cmc
lds
pop
cmpsl
mov
int
out
rol
or
call
mov
or
and
cli
lods
mov
push
inc
pop
dec
iret
or
mov
pushf
outsl
add
clc
push
mov
or
jb
pextrw
push
add
cmp
or
stc
mov
mov
and
loopne
mov
in
and
in
hlt
into
aas
xchg
lock
daa
lds
jp
imul
cltd
int
xchg
lret
cmp
out
lcall
ja
fadds
pop
pop
loopne
cmp
push
adc
data16
mov
dec
mov
faddl
out
inc
push
mov
shl
pusha
sbb
push
inc
loope
dec
in
js
popl
cmp
lahf
inc
lret
out
jbe
or
add
push
jp
push
popa
pop
fsubs
jge
das
or
sbb
xchg
cmp
test
cmc
jne
or
inc
or
lret
jb
ss
jg
imul
xor
ljmp
shll
jbe,pn
jnp
popf
or
loopne
sbb
cltd
inc
jbe
popf
cli
mov
jne
shll
add
mov
jecxz
xchg
sub
mov
or
sahf
addr16
aas
ljmp
mov
push
mov
loop
outsl
mov
xor
add
repnz
or
scas
xor
aas
and
in
jbe
fisttps
scas
xchg
xchg
xor
ret
movsl
cmp
ds
push
scas
les
loopne
pop
inc
pop
mov
add
dec
inc
notb
and
push
mov
mov
dec
stos
mov
sbb
sub
jns
add
cmp
inc
mov
push
push
xor
gs
inc
inc
inc
push
scas
ss
sbb
call
add
sub
pop
fs
out
popa
bound
ret
pop
or
cwtl
cmp
repz
test
mov
dec
cwtl
push
aad
cli
xchg
cli
lahf
xor
in
sbbl
and
xchg
rclb
insl
pop
and
std
stc
lret
or
fistpl
loopne
popa
mov
sub
or
daa
jl
mov
dec
and
aaa
aas
sub
inc
popf
sub
insl
inc
rol
mov
stos
cmova
repnz
cltd
pop
inc
cli
das
adc
add
adc
cltd
inc
hlt
in
sbb
mov
mov
movsl
cmp
and
clc
cmp
icebp
mov
or
xorl
xor
cld
inc
xchg
xor
add
repnz
mov
mov
fs
mov
mov
ja
test
clc
jne
and
pop
aas
pop
add
xor
mov
lods
jnp
pop
jae
cwtl
in
repz
mov
cmp
mov
xor
push
imull
push
jp
mov
insb
repnz
aas
into
fcomp
pop
inc
loope
adc
and
jnp
add
ret
inc
out
test
adc
push
jno
xor
jle,pn
push
into
cmpsl
or
sbb
xchg
jne
imulb
add
loopne
or
inc
dec
clc
adc
int
jmp
out
stos
pop
pushf
inc
inc
mov
cmpsl
pusha
cmp
mov
add
adc
push
gs
push
mov
leave
xor
aam
or
enter
faddp
out
cmpsl
mov
je
inc
and
call
mov
test
mov
add
or
lea
sbb
cwtl
push
jge
iret
jnp
ljmp
popa
mov
scas
sbb
xchg
das
and
fcmovu
sbb
jmp
push
movsl
jmp
jmp
lds
stos
outsl
popa
clc
pusha
sub
add
mov
xchg
xor
sub
sub
test
outsl
add
clc
jo
pop
add
loop
pop
ja
xor
inc
test
lret
dec
or
fnstenv
lea
jo
out
sub
adc
pop
cmc
rolb
repnz
jecxz
fnstenv
aaa
push
mov
push
pusha
push
cmp
mov
aas
adc
test
sti
imulb
lcall
sub
movsl
jae
sbb
adc
sub
mov
ret
jo
push
addb
or
or
sti
cmpsb
insb
inc
push
pop
xchg
pushf
adc
outsl
ss
dec
lock
jne
jmp
sub
sub
ljmp
stc
jnp
lcall
inc
sti
addr16
inc
negb
inc
mov
jbe
or
outsl
or
mov
jle
into
in
push
aas
mov
inc
xchg
cmp
pop
icebp
repz
xchg
jecxz
jp
mov
or
cmp
idiv
adc
pop
popa
les
das
xchg
xor
sbb
sub
movsb
movsl
int
test
dec
stos
mov
cmpsl
imul
dec
mov
mov
push
fwait
xor
insl
sbb
xchg
subb
icebp
in
test
in
test
pop
das
repz
je
and
xchg
ror
dec
mov
test
ds
outsb
je
push
in
cwtl
rcll
das
inc
fisttps
pushl
fdivrl
jb
mov
out
lods
mov
push
fidivs
mov
lahf
mov
rcrl
or
mov
adc
jp
xchg
sub
adc
xchg
aam
shll
jl
andb
loop
movsl
lcall
sub
push
inc
pushf
cli
dec
mov
and
mov
scas
jb
inc
movsb
mov
mov
repz
fwait
lcall
lods
gs
and
inc
lods
jecxz
out
in
sub
cmpsb
scas
mov
and
movl
and
outsb
pop
sub
rcr
rclb
mov
fbstp
push
outsl
mov
popf
sti
mov
xchg
mov
mov
jne
jg
xchg
jae
sub
jnp
imul
lfs
cmpsl
notl
notl
mov
in
mov
insl
xchg
test
fidivl
fnsave
out
pop
outsl
mov
sbb
test
inc
pop
js
lret
lea
lahf
mov
dec
push
xor
dec
aaa
adc
addr16
fsts
imul
mov
and
adc
lds
add
ljmp
fimull
push
test
mov
xchg
mov
fdivs
dec
push
dec
mov
scas
adc
fnstsw
nop
ja
stos
cwtl
add
adc
jge
scas
fisubs
or
cli
enter
mov
pusha
outsl
icebp
daa
cmp
sbb
xchg
lods
xlat
cmp
mov
add
inc
cwtl
ds
stos
push
push
xlat
fnsave
jns
push
jecxz
ja
loop
jb
add
jl
fmull
aas
push
or
mov
xor
jns
lods
pop
fbstp
adc
sbb
and
jge
or
cmpsb
fs
icebp
push
out
les
sahf
xchg
dec
lods
jmp
mov
pop
sub
std
push
fiaddl
daa
mov
and
rol
inc
jno
into
pop
ss
test
out
int3
lcall
and
mov
sar
push
sarb
cmp
lcall
sbb
xor
out
fwait
jp
in
mov
int3
add
insl
lods
mov
mov
inc
neg
clc
je
movsb
imul
subb
int3
adc
mov
cmpsb
adc
sub
inc
in
mov
shlb
test
out
dec
lcall
aam
inc
int
div
xor
or
outsl
rorl
inc
shrb
fcomi
inc
pushf
ja
cmpsl
push
imul
mov
mov
pop
xchg
inc
sbb
adc
data16
sbb
lea
cmp
loop
jns
push
out
cwtl
hlt
sbb
adc
mov
mov
fcmovbe
stos
xor
adc
or
test
test
and
test
push
cmp
jge
dec
outsb
push
lret
xchg
dec
stos
xchg
mov
dec
mov
xorl
test
sub
push
icebp
cmp
out
leave
push
jo
arpl
iret
lock
cmp
aad
mov
aam
or
mov
dec
xchg
repz
push
push
lahf
cmp
mov
or
mov
dec
cmpb
scas
addr16
or
jmp
xchg
push
sbb
jae
fcomi
stos
roll
mov
mov
fs
and
clc
inc
testl
icebp
popa
popa
aam
push
jnp
insb
inc
es
loopne
rcr
jl
imul
scas
test
sub
adcl
mov
and
or
xchg
mov
mov
pop
and
pusha
daa
xlat
nop
xchg
or
inc
cmp
push
add
xchg
mov
pop
mov
dec
comiss
mov
and
in
in
js
mov
or
cmp
push
aas
mov
aaa
aam
sub
lods
and
movl
dec
pop
pop
js
pop
mov
fwait
addl
xor
insl
pop
push
lcall
dec
pop
pop
mov
and
int
std
addb
leave
xchg
add
mov
insl
mov
and
incl
jnp
or
or
outsl
int3
mov
popa
mov
ja
mov
jp
or
sub
movsl
pop
rol
mov
pop
dec
outsl
ljmp
rcll
in
jno
pop
adc
push
shl
lds
je
xchg
aas
lds
out
push
nop
loopne
imul
push
or
das
inc
in
mov
dec
push
insb
mov
fwait
dec
in
jp
out
lods
jl
bound
je
or
mov
pinsrw
dec
sbb
test
or
and
fisubrs
mov
cmp
push
cmp
pop
jl
stc
pop
insl
inc
sbb
sbb
jb
dec
or
pop
push
arpl
sbb
mov
sub
jo
mov
nop
push
inc
xchg
dec
adc
push
lea
jae
cmc
xor
stos
mov
jo
add
icebp
mov
fstpt
lret
xchg
push
repnz
dec
in
je
push
sbb
jno
add
and
push
sti
inc
pop
xchg
pop
dec
sub
push
fisubs
xorb
pop
insl
jl
inc
std
jb
repz
push
stos
dec
add
fstps
lds
dec
pop
push
mov
push
sbb
mov
dec
cmovg
pop
and
jns
lret
es
push
adc
pop
or
sub
push
in
push
test
rorb
jge
or
gs
fs
sbb
jno
xor
mov
popf
mov
arpl
mov
insl
int3
sub
or
adc
lods
pusha
or
icebp
sbb
shlb
test
push
rorl
mov
pop
mov
or
cmp
jns
cmp
mov
ljmp
das
ret
mov
lods
int3
mov
jnp,pt
cmpsl
lods
mov
push
jo
lret
cmc
scas
adc
dec
push
gs
adc
lock
sbb
out
sbb
loop
jg
adc
push
jnp
repnz
cld
lds
mov
xchg
scas
sbb
stos
lods
notl
popf
sahf
mov
xchg
pop
pop
ret
fs
add
lock
xchg
addb
rorb
iret
pop
das
push
push
fsubr
mov
stos
gs
or
cmp
dec
incl
dec
xor
sti
jnp
in
mov
and
mov
pusha
arpl
adc
xchg
ffree
cmp
lods
inc
push
es
jge
aad
xchg
mov
out
inc
insb
neg
outsl
mov
cmpsl
dec
lods
adc
ds
cmp
clc
out
mov
or
je
add
or
fcoms
std
jo
aad
push
icebp
insl
mov
fldenv
loopne
mov
mov
sbb
pop
xlat
mov
mov
cmpb
push
add
gs
notl
jb
decl
cli
cltd
ret
xor
adc
sub
jecxz
stc
mov
rolb
mov
addb
lock
test
clc
nop
push
hlt
jne
jb
fcomp
xchg
sub
test
test
and
std
rorl
orl
into
pop
outsb
push
mov
adc
clc
dec
sbbb
or
aaa
out
mov
sbb
leave
testl
out
mov
ret
jge
in
ss
into
mov
adc
in
lret
and
ja
mov
sarl
je
mov
test
aas
cltd
leave
outsl
cld
sub
pushf
aad
lret
clc
xchg
dec
and
int
int
or
movsb
mov
imul
push
mov
pop
enter
push
cmpb
xlat
popl
dec
pop
mov
jno
dec
or
xor
xchg
and
aaa
xchg
cltd
js
movl
aad
int
pusha
pop
bound
dec
fsubl
ljmp
dec
jl
ljmp
imul
scas
imul
jmp
fmull
mov
push
psubd
out
cs
sbb
push
dec
inc
clc
pop
std
jg
imul
fdivs
int3
cmp
in
out
xchg
mov
cld
xor
cmp
fnstenv
jmp
xchg
cmp
and
add
jne
out
int3
or
mov
fsub
or
shll
add
cwtl
xchg
int3
or
sbb
xchg
ds
mov
xor
dec
inc
and
lds
filds
jp
idivl
shll
pop
adc
sub
cs
je
and
fisttpll
lods
xor
das
cmp
jae
aas
dec
push
pop
dec
insb
data16
ja
std
mov
stos
pop
lea
or
movsl
or
sub
fsub
mov
scas
notb
cltd
stc
jo
mov
push
adc
jb
push
push
or
frstor
icebp
mov
inc
fwait
daa
lds
or
repz
adc
cmp
loop
popa
dec
push
mov
aas
dec
shl
mov
mov
out
adc
push
movl
and
mov
movsl
jg
jecxz
pushf
inc
jbe
or
xor
insl
in
arpl
out
jecxz
leave
gs
pop
arpl
loop
mov
push
js
in
mov
pop
jmp
pop
push
lods
jge
cmp
pop
cmpb
ror
adc
and
xor
push
shr
hlt
subb
mov
aad
loopne
jo
das
movl
mov
movsb
mov
cli
xor
hlt
xchg
iret
sbb
mov
lea
sarl
insb
pop
jbe
inc
clc
pop
scas
mov
loop
mov
mov
push
jp
push
and
sub
push
jecxz
cmp
imul
orb
outsb
loope
pop
test
add
xor
cmp
ret
imul
pop
ror
jb
mov
xchg
andb
test
mov
mov
jnp
pop
test
mov
lahf
outsl
cmp
mov
loopne
mov
shll
sub
std
xor
and
xchg
pop
addr16
push
fcmovb
arpl
icebp
js
in
cmpl
lahf
mov
movsb
cmpsb
xchg
inc
in
insl
daa
dec
loope
lret
mov
fisubrs
sbb
adc
jno
inc
leave
xchg
and
xchg
mov
out
sarl
fstpl
xchg
dec
fldt
cmp
or
adc
mov
in
jle
sub
fnsave
mov
mov
idivl
lea
ror
push
data16
imul
lcall
mov
fdivrl
iret
push
xchg
and
or
mov
mov
mov
and
out
sbb
test
cld
jbe
daa
jb
push
xchg
sub
loope
sahf
mov
push
push
push
call
dec
test
xlat
push
xor
pop
ja
dec
cli
pop
or
or
inc
add
adc
inc
sbb
std
mov
sub
or
add
cwtl
xchg
nop
inc
stos
mov
mov
lea
or
mov
mov
repz
jmp
xor
jl
ffreep
je
call
xor
mov
imul
xchg
int3
lock
xchg
xlat
mov
xchg
sbb
pop
stc
sub
js
push
into
es
mull
rclb
or
xor
pusha
inc
jge
sub
pop
adc
xchg
push
mov
call
xchg
and
ret
xchg
int3
hlt
in
xchg
sub
inc
icebp
mov
xchg
shll
iret
leave
xor
scas
push
popf
shlb
pop
ss
mov
sub
jnp
pop
loope
mov
xlat
aad
mov
jp
add
xor
add
das
cli
inc
add
cmp
xchg
test
xchg
ficoms
outsb
pop
dec
dec
cwtl
mov
cmpsb
out
ret
pop
adcb
out
dec
xorl
adc
cmpsl
xchg
xchg
insl
cmpsl
std
push
stos
cmp
xor
divl
dec
icebp
adc
ficoms
or
add
mov
das
or
add
cmc
xor
or
sub
shr
push
mov
push
clc
lock
setb
fsubrs
cs
inc
aad
dec
xchg
cmp
xorb
sarb
fbld
inc
jno
addr16
pop
dec
xchg
xlat
and
daa
push
dec
or
xor
mov
aam
mov
jl
add
ss
pushf
mov
and
adc
push
scas
push
stos
icebp
mov
xor
cmp
addl
cs
push
iret
push
dec
imul
pop
lahf
sbb
lds
xchg
outsb
pusha
mov
inc
cmp
mov
gs
adc
mov
mov
test
test
mov
rcl
cld
loop
loopne
lret
sbb
adc
fisubs
mov
movsb
je
mov
push
pop
xchg
jmp
mull
pop
xor
jns
mov
imul
aam
cmpsl
lcall
cmp
dec
scas
add
add
mov
jnp
dec
stc
or
mov
xor
cmp
xor
ljmp
lcall
pop
rorb
lock
nop
mov
cmp
xorl
or
iret
sbb
lods
mov
mov
mov
lret
cmpsl
lods
push
frstor
mov
mov
ljmp
mov
int
aad
dec
inc
cs
push
jnp
into
lea
popf
ds
cmpsl
call
mov
loopne
lock
mov
or
and
in
outsb
les
test
sbb
sub
movsb
gs
sub
sbb
popa
fcmovnbe
int3
mov
das
fwait
mov
mov
pop
mov
jecxz
mov
cmpsl
add
jne
xor
push
hlt
pop
iret
imul
out
inc
push
sub
aas
inc
push
mov
cmp
lret
repnz
sti
dec
inc
lock
popa
loopne
inc
mov
popf
inc
movsl
lahf
add
popa
daa
dec
cmp
mov
outsb
push
ss
mov
out
lds
in
mov
push
imul
in
mov
and
les
outsl
inc
inc
xchg
add
in
and
dec
pop
add
push
enter
mov
cmp
mov
inc
sub
je
inc
aaa
cmc
sarb
sub
push
out
pushw
xor
add
mov
sub
jbe
cwtl
cmc
mov
int
aam
aad
inc
in
arpl
xor
push
bound
add
sbb
test
dec
fidivrs
stc
aaa
mov
daa
sbb
mov
push
dec
or
es
mov
jge
scas
pop
dec
fs
roll
xchg
jge
push
movsb
in
push
je
stc
dec
sub
cld
es
mov
mov
aaa
test
xchg
rclb
rclb
mov
ficompl
sarb
rcrl
ljmp
arpl
mov
jge
lds
pop
shll
and
ja
imul
arpl
pop
jb
mov
add
cwtl
or
jbe
jnp
scas
xchg
and
push
sub
mov
imul
js
cmp
test
cld
xlat
ds
addb
sti
into
fs
or
push
scas
pushl
inc
push
fstps
add
mov
add
xchg
cmpsb
jg
and
cmc
pushl
jae
xor
pop
xor
mov
mov
mov
pop
into
out
out
arpl
cmp
pop
inc
fwait
ja
xchg
xchg
aaa
mov
or
andb
push
push
mov
cli
cmp
add
popa
into
push
mov
xchg
sub
aam
aas
ds
push
inc
pushf
jb
adc
scas
sbb
test
cmc
add
lock
xchg
inc
out
xchg
cmp
lret
inc
jp
movsb
addr16
sub
dec
or
lret
rcll
outsb
cli
mov
loop
out
push
add
int3
es
mov
pop
decb
and
sub
pop
ficoml
mov
mov
fwait
xchg
xor
imul
rorb
iret
les
xchg
lods
mov
sbb
mov
shrl
dec
xchg
mov
ljmp
aam
push
dec
mov
popa
lahf
mov
xchg
lret
dec
mov
jl
and
insl
jge
aad
mov
mov
fdivs
js
or
jle
out
sarl
jo
xchg
daa
clc
test
cmpsb
xor
pop
dec
daa
movsl
cmp
aas
iret
sbb
test
xchg
mov
pop
lock
mov
mov
sub
sub
or
push
clc
cli
popf
sub
mov
and
popf
sbb
push
adc
xor
sbb
sbb
add
out
sbb
sbb
adc
addr16
sbb
mov
fwait
lea
daa
mov
sbb
cmp
sub
mov
mov
inc
cmp
push
loope
lock
popl
mov
sbb
xor
dec
neg
jae
testl
sbbl
outsb
fwait
pop
in
push
ljmp
push
add
cmp
dec
sarb
fwait
sbb
movsb
inc
repnz
xor
mov
xchg
mov
addb
cmp
push
in
xchg
xor
xchg
stc
push
push
neg
test
and
mov
or
jb
stos
adc
push
inc
jae
mov
fdiv
loop
jle
or
cmp
jnp
out
sub
lods
jo
lret
out
add
xchg
pop
fmull
cs
jecxz
xchg
mul
imul
in
jns
scas
add
push
fistpl
xor
mov
dec
cmp
addl
xchg
dec
xor
sahf
jne
aaa
mov
outsl
cmpsl
add
xor
leave
pop
addl
test
sub
daa
or
cmpsb
jmp
rclb
pushl
cmp
sti
inc
shrb
xchg
ret
iret
sbb
das
out
xchg
xchg
mov
or
out
jbe
into
popa
in
dec
cwtl
pushf
loopne
sti
jmp
movsl
mov
lods
daa
add
pop
ss
out
mov
jb
push
stc
jne
test
cmp
mov
shll
iret
sbb
add
adc
lods
push
shll
movsl
test
mov
jp
dec
aas
enter
adc
clc
adc
cli
cmpsb
in
cwtl
push
xchg
outsb
mov
popf
mov
sbb
notb
xchg
ds
mov
rcll
jmp
lds
mov
insl
shll
adc
insb
repz
in
or
divl
add
incl
push
lcall
sub
sahf
mov
sbb
xchg
int
mov
adc
xor
xor
pop
aas
jne
jmp
ljmp
mov
lods
push
jle
dec
cmc
repnz
or
repnz
imul
cmp
xor
mov
and
mov
mov
jne
movsb
int3
loop
in
fcoms
and
and
hlt
popa
lock
mov
push
xchg
cmp
loope
shl
dec
add
dec
movsb
fdivrs
xchg
push
in
inc
ds
mov
jb
push
xchg
xor
shlb
les
dec
dec
jne
sbb
adc
push
jge
xchg
insl
outsl
lcall
in
pop
or
icebp
iret
or
stos
arpl
icebp
cmp
jp
xchg
and
or
ss
pop
add
push
fdivrl
dec
and
add
sbb
fcompl
movsl
mov
lods
lds
pop
add
and
mov
test
lods
cmpsl
add
mov
fcoml
scas
iret
in
mov
ja
mov
popa
loopne
sub
movsl
xchg
loop
leave
es
or
pushw
jo
jo
roll
mov
lods
mov
push
xchg
jl
and
inc
sbb
mov
lret
dec
lahf
sbb
test
ret
mov
shlb
xchg
inc
daa
pop
jecxz
and
lods
xchg
push
enter
xchg
xchg
pop
jl
push
inc
jae
cld
ljmp
insl
jne
je
push
negb
pop
pop
popf
pushf
jl
mov
jmp
stos
sahf
rep
mov
xchg
inc
add
push
call
lahf
or
mov
xchg
into
sub
fwait
xchg
ljmp
daa
popf
mov
sbb
inc
push
add
iret
ret
addr16
xor
push
lret
mov
or
rcr
ljmp
fcomps
push
popa
scas
sti
cmpsl
xchg
xor
mov
cmp
rolb
test
clc
popl
mov
inc
jne
push
or
aam
test
add
mov
dec
pop
aas
andl
xorl
lahf
mov
xor
and
lcall
inc
into
aam
or
add
xchg
enter
xor
mov
sti
ja
sahf
gs
mov
jbe
gs
push
fsubs
je
cmp
loopne
ret
sub
adc
les
daa
ret
jp
out
or
inc
xchg
andl
sub
jno
dec
jb
sahf
sbbb
push
mov
lahf
push
sbb
dec
sub
dec
inc
xchg
rcrb
sbb
nop
fs
dec
push
sti
leave
xchg
jge
imul
cmpsb
xchg
cmp
call
mov
arpl
fbstp
dec
out
mov
imull
mov
sub
xchg
mov
lret
les
add
cmc
js
mov
imul
gs
jge
jp
add
jle
sahf
xchg
mov
in
mov
leave
mov
daa
jae
fadd
fcoml
fwait
inc
adc
push
es
push
in
sub
cmc
jge
lret
inc
mov
std
insb
pop
push
scas
cmp
mov
pop
and
jge
mov
sahf
repz
or
sub
out
inc
push
push
and
subl
inc
fwait
and
divl
das
jo
sbb
stos
aaa
stos
out
hlt
and
cs
jo
or
push
mov
jp
gs
mov
sub
push
sar
repnz
shll
pushf
inc
cmp
adcb
pop
clts
push
out
push
cmp
in
cwtl
shlb
push
xor
rcll
cmp
lods
xchg
pop
call
inc
adc
push
and
cmp
roll
add
imul
xchg
jg
mov
push
call
and
shrl
cwtl
in
fildll
ljmp
cmp
movsl
rcr
cltd
inc
ja
mov
daa
call
pop
add
xor
xor
push
pop
ja
add
aam
mov
dec
add
pop
addr16
xchg
int
insl
idivl
xchg
pop
xlat
fistl
adcl
pop
dec
and
movsb
je
popf
stc
jp
das
std
mov
fdivrs
xlat
scas
orb
clc
mov
jns
lcall
jo
rcl
dec
sub
sub
mov
sub
push
sub
xchg
or
in
lds
adc
push
jne
adc
sub
call
push
xchg
shll
xor
xlat
cmp
cmp
imulb
test
pop
out
out
lcall
in
in
cli
bound
adc
dec
mov
and
pop
xchg
in
outsl
pop
testl
fistps
or
push
ficomps
push
pop
and
push
rcll
mov
in
mov
fdivs
hlt
mov
mov
cmp
bound
or
pushl
push
pop
adc
pop
aaa
hlt
sbb
or
cld
rcl
inc
movsb
and
dec
insl
and
jg
in
jno
cmp
paddsb
daa
sbb
pop
and
inc
fsubrp
lods
mov
pop
sarl
cmp
lods
adc
jbe
and
test
cs
stos
sub
or
xor
inc
pop
in
cmpsl
sbb
dec
cmp
int3
loope
mov
and
pusha
dec
jp
gs
pop
or
pop
jl
jle
inc
inc
push
pop
jb
sub
hlt
ds
icebp
or
ret
cmc
imul
lods
or
or
insl
aas
and
div
roll
lcall
xchg
jge
mov
xlat
or
fcmovu
arpl
cmc
xor
enter
popl
jp
fldcw
and
frstor
adc
jle
iret
sub
out
jl
loope
adc
jp
push
mov
push
test
xor
mov
cwtl
shrb
icebp
das
jg
push
jae
call
or
or
cmp
std
mov
enter
add
adc
push
std
lcall
leave
les
sahf
fadds
dec
xchg
lea
xchg
xor
mov
aam
mov
sbb
mov
movsb
fstps
mov
icebp
shlb
popa
aad
and
inc
push
das
mov
cltd
mov
test
mov
jae
mov
bound
xchg
inc
jmp
adc
cmp
icebp
int3
cmp
push
cmc
xlat
lods
fldl
test
movsl
mov
pusha
add
shlb
xchg
fldcw
jae
jne
fadds
popa
pusha
xchg
hlt
and
inc
mov
add
jecxz
adc
mov
dec
test
pop
jecxz
jo
sub
sbb
sub
push
jnp
push
dec
inc
cs
fwait
ja
push
xlat
pop
pop
sub
clc
mov
push
pop
icebp
ret
dec
mov
mov
mov
pop
or
jmp
inc
pop
bound
pushl
mov
stos
hlt
clc
gs
cwtl
jns
inc
movsl
in
popa
bound
mov
sarb
in
sub
xchg
in
arpl
and
cmpsb
mov
push
jb
mov
outsl
and
mul
mov
iret
push
nop
cwtl
jge
movsl
and
pop
cwtl
mov
das
ds
insb
repz
inc
jecxz
mov
pop
rorb
cwtl
sub
in
push
cmpsb
and
in
in
adc
lds
out
push
push
push
mov
xchg
and
xchg
hlt
pusha
mov
xor
addr16
stos
add
mull
or
jne
xchg
loop
sub
adc
sti
jo
and
fisubrs
btc
xlat
insl
or
stc
int
pop
and
aad
dec
stc
sbb
push
js
or
sahf
cmpb
fnsave
in
inc
in
push
xchg
pop
dec
bsr
add
into
sub
addl
mov
cld
dec
fs
jno
sbb
mov
push
pop
cmpsl
mov
inc
inc
das
ss
sbb
xchg
aas
iret
xchg
push
pop
sub
add
in
movsb
test
or
pop
pop
mov
xchg
xchg
pop
push
pusha
stos
fisttps
loope
and
xor
lds
popa
pusha
inc
ds
pop
adc
xor
mov
out
adc
hlt
xchg
jle
das
andl
pop
adc
xor
insb
add
inc
aas
outsl
inc
dec
stos
cmp
nop
lea
mov
mov
xor
test
test
and
movsl
bound
cmpsb
sub
cmc
in
mov
imul
adc
jmp
mov
movsl
gs
add
mov
mov
in
adc
into
in
xor
rorb
pop
adc
idiv
adc
adc
mov
insl
popa
jae
inc
dec
movsb
adc
mov
adc
daa
out
push
push
inc
sub
inc
ret
dec
xor
cmp
jae
sti
add
jle
push
xor
cs
sti
mov
sub
andl
adc
cmp
adc
sahf
xchg
push
call
adc
push
and
sahf
ja
dec
test
xor
mov
neg
imull
lret
cli
mov
mov
loop
iret
je
add
into
pop
shlb
dec
pop
sbb
out
or
push
mov
jp
out
pop
data16
cmp
int
sbb
mov
cltd
clc
or
fcmovnu
call
and
repnz
adc
push
sahf
xchg
cli
rclb
gs
popf
mov
and
repz
stos
add
pop
mov
or
addr16
jl
and
addr16
cmp
dec
shrl
bound
cld
xor
and
fs
mov
sub
addb
pop
cmp
cmp
fistpll
inc
ljmp
pusha
dec
sbb
fmull
mulb
addr16
jecxz
imull
bound
shlb
filds
sub
xor
mov
int3
xor
inc
or
pushf
pop
leave
jne
inc
fmuls
sub
inc
inc
cmp
daa
imul
xchg
into
inc
outsb
xor
sbb
cmpsb
insb
push
jg
cmp
movsl
loope
in
add
xchg
and
pop
xor
mov
dec
mov
in
mov
mov
sar
cmpsl
jb
mov
xor
xchg
iret
inc
leave
xchg
std
cmp
or
add
cmp
test
mov
xchg
pop
call
pop
test
rorb
inc
sbb
push
sbb
xchg
mov
ja
bound
or
sub
not
inc
loope
out
les
cmp
arpl
or
insl
cmp
pop
push
in
insb
mov
fwait
mov
inc
jp
sub
loope
mov
adc
hlt
ret
add
repnz
cmp
scas
ss
mov
int3
cmpsb
dec
pop
adc
lods
adc
add
pop
rcl
sbb
bound
cmp
cltd
xchg
ja
lahf
inc
inc
movsb
or
ret
xchg
testb
dec
cwtl
dec
clc
or
mov
jns
ret
push
mov
push
jmp
stos
fdiv
dec
fisttpll
stos
fidivs
inc
sbb
dec
mov
inc
fsubrp
test
mov
aas
mov
pop
push
movsl
jecxz
mov
sub
mov
leave
sub
jg
ror
jge
fcoms
lock
js
ja
flds
mov
jbe
pop
mov
xchg
clc
testl
cmp
xchg
adc
cld
adc
ja
cli
pop
je
xchg
popa
jne
mov
mov
daa
push
xor
pushf
jb
jb
xlat
stos
push
jp
sar
pop
mov
gs
popf
push
or
sti
add
inc
pusha
sub
push
jo
mov
enter
and
ficompl
repnz
push
stc
call
imul
xor
mov
iret
fcoml
addr16
hlt
xchg
mov
adcb
or
xor
sub
loopne
fs
mov
dec
test
sbb
add
cmpsb
push
adc
mov
xchg
pop
sub
clc
sbb
call
cmp
adc
sbb
arpl
divl
enter
adc
jp
andb
sbb
or
pop
out
adc
push
ja
pushf
pop
pop
jmp
adc
jmp
lea
sbb
jne
xor
repnz
out
fmuls
popa
test
aaa
in
sbb
jb
sbb
xchg
stos
or
stc
mov
mov
sbb
pusha
cmp
and
mov
daa
adc
add
mov
sbb
sub
mov
jno
xchg
fimull
xor
adcb
inc
dec
push
loope
jg
call
test
jne
lahf
mov
push
cmp
and
jp
loopne
mov
dec
sbb
mov
cmp
jmp
popf
cmpsl
inc
ret
and
inc
sbb
loopne
js
filds
repz
dec
js
jne
inc
xor
insb
mov
pop
pop
jl
mov
shl
ds
loope
sarb
xor
add
pop
out
jb
test
outsl
adc
jbe
sbb
imul
jae
aas
int3
add
lret
pop
cld
insl
dec
sahf
adc
outsb
int3
in
cmpsb
dec
cld
xor
xor
push
or
mov
pop
sti
push
jp
pop
dec
xor
fnstcw
lret
das
jmp
mov
in
cmp
sbbl
mov
pop
jp
ret
sbb
and
mov
add
test
push
xchg
into
arpl
mov
movsl
mov
inc
loopne
push
pop
movsl
inc
sub
mov
add
or
jl
daa
test
roll
sbb
push
push
movsb
sub
sahf
ror
sbb
mov
or
cmp
and
push
pop
inc
or
test
loopne
inc
push
cmc
imul
inc
mov
addr16
rcr
repz
xchg
adcl
in
sbb
dec
fst
cmpsb
push
adc
xor
adc
xor
fldl
add
in
xchg
gs
and
xor
push
mov
pop
mov
mov
test
mov
movsl
push
bound
sbb
mov
cmp
hlt
lds
daa
stos
lods
sbb
in
and
add
es
xchg
or
mov
mov
mov
cmp
cmp
out
and
push
fistl
ret
pop
mov
enter
xchg
jo
mov
mov
sub
or
out
aad
mov
cmp
add
sub
cmp
push
push
shrl
test
je
mov
push
aas
popa
sarb
out
loopne
push
or
inc
scas
adc
lods
andb
and
pusha
imul
xor
inc
sbb
mov
test
lcall
pop
fdivrp
dec
fsts
mov
loopne
xor
insb
notb
xchg
sbb
iret
sbb
push
dec
shlb
jns
std
mov
jno
insl
push
lahf
jne
movsb
pusha
mov
or
jbe
mov
sbb
jmp
or
sub
in
lods
fisubs
or
int
mov
cmp
push
adc
test
adc
pushf
push
adc
jmp
mov
lcall
test
xor
hlt
rorb
hlt
fs
or
adc
in
push
mov
outsl
push
sub
in
test
stos
dec
inc
clc
scas
iret
je
xor
sub
and
sti
arpl
fs
outsb
adc
pop
mov
inc
scas
lahf
dec
cwtl
sub
jbe
in
dec
ret
pop
mov
in
xlat
repz
xor
and
lahf
push
inc
outsb
sub
test
and
jb,pn
adcl
ds
lahf
mov
movsb
icebp
inc
cmpsb
test
lock
aas
push
cmp
ja
testl
sub
mov
sub
mov
sub
in
shll
int3
fcoml
push
fbld
pop
ret
or
cmp
push
add
or
loope
mov
lods
dec
daa
pop
shr
adc
lret
das
cmpb
lods
fs
fsin
gs
xor
movsl
add
cli
push
pushl
cs
jge
xchg
mov
in
add
arpl
xor
mov
in
mov
pop
mov
push
mov
jecxz
lahf
mov
movsl
outsl
sub
mov
push
dec
push
pop
pushf
in
mov
repz
hlt
add
enter
push
and
cmpsl
jle
aad
sbb
pop
mov
push
sub
mov
and
outsl
call
sub
xchg
xchg
loopne
push
testl
leave
push
adc
frstor
test
push
movsb
cmp
adc
cwtl
clc
test
out
repz
xchg
push
xchg
xor
loop
je
stos
out
mov
outsl
xchg
hlt
or
stos
push
xchg
mov
add
sbb
imul
inc
dec
cmpl
cmpsb
lret
ficompl
xor
adc
mov
adc
out
cmpsb
sti
test
pushf
and
test
std
cmpsl
in
pop
lods
jb
xchg
xor
rcll
cmp
dec
and
xchg
adcb
mov
int3
ret
xchg
add
test
mov
rcrl
fdivp
inc
push
shrb
test
packssdw
rcll
pushf
cmpsb
mov
push
add
inc
popf
aam
mov
xchg
cmp
xchg
mov
dec
js
out
das
add
cmp
sub
inc
fmuls
into
mov
lahf
xor
mov
push
mov
lret
pusha
sub
push
cmp
clc
sub
pop
gs
cs
push
test
mov
inc
dec
push
into
dec
mov
push
aas
pop
shr
xchg
dec
push
push
pop
jns
addr16
xor
mov
scas
and
sahf
call
pop
test
in
leave
dec
mov
in
std
push
fwait
pop
aaa
and
ja
scas
push
popa
or
fnstsw
sahf
pop
roll
jge
sbb
mov
rcrl
ss
mov
dec
inc
add
jp
data16
sti
mov
dec
pop
pushf
in
clc
das
fsubl
mov
lods
insb
add
cwtl
push
pop
shl
js
jge
adc
movsb
sbb
cld
xor
lss
sub
iret
jno,pn
xor
push
in
and
roll
in
iret
mov
xor
or
mov
or
flds
lret
push
xor
jne
push
jb
mov
sbb
jb
les
mov
in
insw
adc
mov
push
add
fstps
mov
aam
inc
sti
pop
mov
push
repnz
inc
push
movsl
hlt
mov
mov
jl
cmpsl
bound
mov
xor
imul
sub
mov
mov
xchg
arpl
cmpsl
push
lock
sub
dec
movsb
repnz
cwtl
pop
fcomps
mov
push
jp
jmp
mov
shll
pop
inc
enter
and
xchg
scas
push
cli
jp
dec
dec
je
ljmp
sti
test
xchg
loop
fistps
xor
inc
sbb
jns
addl
jecxz
loop
sub
jns
mov
pop
jns
or
cld
jp
xor
cs
jle
test
xchg
inc
xchg
xchg
int
cmp
leave
sbb
pop
rclb
out
sub
jp
mov
jg
dec
add
mov
push
adc
add
pop
pop
xor
cwtl
clc
sbb
mov
bound
jge
scas
fidivs
jbe
fwait
std
or
cltd
fdivr
cld
lea
mov
inc
add
mov
pop
push
in
pop
mov
pop
xor
es
pusha
or
std
xchg
sti
test
ret
and
clc
mov
inc
cmp
es
aaa
ret
jmp
icebp
cmp
dec
xlat
xor
shrb
mov
psrlw
rolb
cwtl
jo
mov
dec
pop
inc
ja
sub
add
insl
pop
stos
jns
adc
ficompl
inc
xchg
imul
in
cmp
adc
fldt
repz
icebp
cmp
add
jp
push
unpcklps
or
sub
filds
js
push
push
pop
stos
leave
aam
lods
sbbl
scas
aam
pop
gs
cmp
add
jmp
je
cli
popf
daa
sbb
shll
adc
dec
jno
repz
and
lret
shl
sti
fs
jne
cwtl
jecxz
ljmp
sbb
cmp
mov
scas
push
mov
or
lock
cmp
fs
leave
test
inc
into
mov
pop
sbb
cmp
lret
inc
cltd
lcall
iret
xchg
pusha
xchg
add
mov
push
inc
popf
xor
stos
fs
cmp
sti
jge
mov
enter
cmpsb
es
int
fimuls
aas
or
inc
rorl
insl
jne
xchg
pusha
sub
inc
clc
je
cli
jg
xor
xchg
adc
push
adcb
out
test
xor
out
and
dec
stc
cli
cmp
daa
ljmp
pop
xor
adc
and
data16
aam
lret
cltd
test
adc
sbb
sbb
inc
test
movsl
scas
or
mov
pop
inc
mov
inc
jp
mov
xchg
outsl
xor
jne
lds
xchg
xor
mov
sbb
daa
rcrb
mov
adc
jno
lock
test
imul
fadds
inc
pop
pushf
cmpsb
in
mov
cwtl
gs
inc
lea
push
aam
sti
sub
ja
cmp
loopne
adcb
outsl
out
mov
out
int3
pop
pusha
lods
pop
in
shrl
mov
cli
icebp
mov
add
orl
push
push
lret
push
xor
push
fs
popa
mov
or
adc
cmpsl
mov
lret
mov
dec
mov
cs
fstpl
inc
cmp
les
sub
jbe
sub
imul
xchg
xchg
out
lcall
mov
test
sbb
aad
lahf
arpl
push
push
xor
mov
repnz
iret
and
hlt
push
mov
rorb
icebp
in
pop
mov
push
outsl
int
aam
aaa
cmc
or
imul
roll
jecxz
mov
sbb
imul
mov
jmp
aad
push
xchg
fidivl
test
mov
xchg
or
and
mov
ficompl
outsb
and
sub
repz
into
inc
aaa
ljmp
inc
movsb
jb
inc
jle
or
inc
or
int
add
mov
fdivrs
dec
pop
xlat
push
mov
pushf
fisttpl
jne
es
add
pop
xchg
or
ljmp
dec
test
jg
sub
addb
jmp
sub
xchg
dec
jb
lahf
cmp
push
push
repz
xchg
mov
cmpsb
sbb
scas
dec
ret
ret
cmp
cmpsb
cwtl
xchg
stos
sbb
inc
ja
imul
iret
mov
loop
enter
cmpsb
insb
aas
xorl
xor
test
es
and
xchg
mov
jae
fcomps
cmp
inc
sub
loopne
sbb
sahf
xor
dec
insl
sub
outsb
mov
ja
insl
ret
pop
and
repz
lea
movsb
cmpb
cmp
rorl
push
jns
cmpsb
cmp
bound
cmp
mov
and
mov
dec
mov
and
fldt
cmp
sbbl
sbb
xorb
inc
dec
push
xor
dec
dec
lret
mov
mov
fmull
rcrb
scas
repz
sbb
pop
or
lcall
push
xchg
fsubs
addl
mov
push
lret
fmull
jo
inc
addr16
loopne
xchg
sbb
mov
add
cld
cmp
dec
jnp
pusha
ficoml
lahf
mov
je
mov
mov
mov
inc
movsb
jge
push
push
mov
popa
aad
int3
inc
imul
es
ffree
popa
mov
mov
pop
sub
hlt
mov
mov
aaa
xor
sbb
sbb
mov
xchg
push
test
mov
jno
mov
mov
cld
fisttps
xchg
sub
mov
pop
add
mov
pop
pop
test
mov
xchg
cmp
adcl
std
xchg
jnp
add
mov
adc
lds
jp
xchg
imul
cmp
push
xchg
inc
test
add
inc
jns
sahf
inc
or
mov
rcr
aas
xor
fists
mov
testl
and
or
xor
arpl
cmp
insb
push
sub
lods
push
sub
cltd
and
sbb
fmul
outsb
xchg
or
ds
ret
jne
dec
addl
inc
jnp
repnz
fistpll
sbb
lds
cmc
adc
sbb
add
in
testl
stos
je
adc
pop
jle
movsb
mov
push
mov
daa
sub
int
imul
add
jmp
mov
push
xor
loop
ds
sub
xchg
cmp
stc
xorb
cmp
rcll
inc
ss
mov
mov
xlat
mov
xor
sub
mov
xchg
push
cs
sti
xor
outsl
pop
pop
out
cli
push
xchg
add
jae
push
dec
in
stos
mov
dec
pop
jl
popa
push
fistpll
push
mov
xchg
cmp
roll
mov
cmpb
push
xor
cmpsl
pushf
adcb
and
nop
cld
pop
lods
xchg
xchg
jns
call
stos
test
dec
mov
rcll
ss
mov
cwtl
and
or
ljmp
or
fidivs
les
mov
out
xor
dec
sar
aad
leave
pop
push
rcrl
pushf
lea
fistpll
inc
jns
leave
bound
jb
rcll
cmp
hlt
fsubl
mov
mov
push
call
es
and
out
notl
popa
cli
inc
ret
aas
mov
loope
push
cmp
std
movsl
jno
xor
adc
mov
int3
cli
push
pop
insl
hlt
mov
mov
xor
jg
mov
sbb
les
mov
and
pop
and
int3
idiv
push
sbb
dec
or
pop
cmpsb
sbb
inc
inc
adc
lret
sub
ficoms
or
mov
out
mov
bound
inc
sbbl
shll
xor
cmp
outsb
popf
int
xor
sub
jl
dec
stos
sbb
jno
aam
jne
xor
push
xchg
jl
xchg
aas
add
xor
arpl
cmp
stc
movsb
loopne
loop
std
and
out
adc
mov
daa
lods
sbb
roll
stos
rclb
ljmp
inc
mov
popa
cwtl
cmp
shll
sub
loope
mov
pushf
jbe
cmp
loope
and
mov
lods
stc
adc
push
clc
push
int3
pop
loop
sahf
mov
movsb
mov
test
pushf
ljmp
mov
into
or
xchg
mov
scas
adc
sarb
ljmp
dec
lcall
shrb
cmp
hlt
call
mov
adc
pop
sbb
sub
mov
int3
jl
lods
xchg
rorl
inc
sub
shrb
into
das
outsb
push
insl
addr16
cmp
cmc
insb
ja
imul
and
inc
xorb
push
mov
xchg
xor
xchg
xchg
mov
cwtl
sbb
mov
xchg
stos
mov
or
xlat
inc
es
repnz
mov
xchg
fs
push
pop
in
sbb
cmpsb
cmc
fimuls
out
adc
mov
inc
mov
or
cmp
mov
and
mov
pop
aas
push
test
jb
iret
iret
pop
push
lret
je
sub
jge
movsb
mov
push
xchg
push
faddl
into
rorl
into
sub
pop
repz
pop
lock
jmp
fucom
scas
push
fstpt
jl
xor
pop
mov
add
cli
mov
mov
adc
cmpsl
faddl
dec
adc
mov
cmpsl
mov
dec
jl
inc
sbb
jp
jb
sbb
push
repz
paddsb
int
sbb
sbb
in
mov
es
mov
cs
mov
fistl
xchg
mov
test
addr16
ret
push
icebp
mov
ret
int3
movsb
imul
std
pusha
push
shrl
mov
dec
sbb
fistps
jl
hlt
imul
cmpsb
mov
mov
rcrb
scas
out
cmp
in
dec
mov
pusha
add
lahf
call
or
popa
inc
mov
mov
xchg
pop
jecxz
aam
imul
in
cltd
add
repnz
scas
stos
or
mov
inc
divl
lea
cmp
aas
dec
lcall
imul
icebp
mov
test
inc
sub
scas
fiadds
jl
jl
add
data16
ljmp
sbb
mov
dec
dec
sahf
movsl
mov
js
stos
hlt
fstpl
les
dec
rcrl
dec
in
cmpb
gs
cmp
sbb
loopne
lea
sbb
sub
inc
push
loope
outsl
sahf
jle
out
adc
in
xlat
pop
scas
sbb
daa
jmp
ret
mov
push
aas
mov
das
fucomp
repnz
mov
sti
jo
cmp
pop
dec
mov
loop
jns
xchg
xlat
cmc
jle
and
sarl
push
pop
loop
rclb
xor
bound
jb
xchg
es
test
jno
clc
push
aad
movsb
or
and
cmp
or
jnp
cltd
je
mov
ret
push
ret
pop
repnz
xor
dec
and
stc
cli
inc
mov
mov
push
insb
cmp
sbb
cwtl
movb
pop
fsubrl
jns
add
sub
shlb
lea
pop
add
roll
dec
and
sbb
pop
test
clc
fs
push
fxch
add
out
cmp
cmp
push
push
stc
sub
mull
das
test
jns
xchg
xchg
xor
rolb
add
jl
pusha
xchg
pop
jbe
insb
push
out
ja
fidivs
aaa
jo
push
in
pop
pop
mov
pop
out
push
int3
mov
jne
cwtl
movsb
fsubr
push
xor
ja
mov
adcb
lcall
mov
call
rclb
sbb
fucom
mov
pop
jle
roll
xchg
pop
movsb
andl
mov
pop
push
or
mov
in
aam
mov
cwtl
jp,pn
jae
cs
push
pop
in
lods
aam
adc
mov
lahf
xrelease
and
jmp
fiaddl
push
lock
jecxz
les
jo
jmp
jl
mov
lret
imul
mov
and
imul
dec
sbb
lds
ss
inc
xchg
inc
jno
mull
pop
dec
imul
add
cmp
ret
fstpl
push
adc
push
imul
dec
inc
fidivrs
pop
fcoml
icebp
sub
cmp
lods
jecxz
aad
clc
fstps
mov
mov
dec
int3
pop
rcll
pop
lods
xchg
loope
aad
cmpsb
orb
daa
and
enter
jge
jge
cld
mov
lret
ss
fs
pop
xchg
dec
lret
mov
push
movsl
pop
idiv
adc
inc
test
nop
xor
lods
mov
je
cmc
adc
fnclex
pop
lds
aaa
sub
test
jb
movsb
dec
add
cmp
or
xlat
lret
mov
test
popf
dec
stc
sar
jmp
fsubr
sbb
adc
or
rcrb
mov
gs
jae
xor
xlat
imul
push
data16
cmpsl
into
unpckhps
xchg
push
adc
pop
stos
fwait
push
into
inc
movl
dec
ret
les
lock
fisubs
aad
jg
and
fstpl
mov
dec
push
mov
xchg
les
lods
xor
daa
jns
pop
data16
enter
dec
xchg
or
ljmp
xor
sahf
in
gs
cmp
scas
sub
ffreep
mov
loop
xor
aam
inc
in
or
inc
sbbl
cwtl
mull
aaa
inc
in
pop
addr16
jne
sub
jge
jg
pop
in
lahf
outsl
xchg
mov
mov
xor
das
inc
cmc
js
movsb
sub
add
cmpsb
and
add
push
fwait
dec
shrl
jb
pop
popf
filds
sbb
lods
mov
daa
iret
lods
test
push
shrl
xor
push
xchg
sub
jg
popa
iret
dec
insl
lahf
mov
push
or
cld
jb
cmc
stos
adc
pushw
or
enter
stc
mov
push
ja
and
sti
pop
scas
jnp
int3
jle
mov
add
loopne
test
std
sub
daa
int
push
test
insl
fcoml
jmp
pop
cli
push
int
imul
jno
or
mov
dec
lods
sbb
add
adc
stos
adc
aad
ja
aad
mov
inc
adc
cwtl
repz
push
popf
dec
movsb
out
xchg
jnp
push
push
test
xchg
les
ja
pop
lcall
push
lret
nop
mov
push
pop
out
jo
cs
push
leave
jge
cmp
enter
mov
insb
shrl
insb
cmc
adcb
push
fsubrp
xchg
test
push
mov
dec
test
test
in
push
hlt
mov
aas
negl
ret
push
fdivl
outsl
mov
out
dec
outsb
les
in
mov
mov
jae
fisttpl
push
or
cwtl
test
sbb
push
add
popa
fstps
cmp
lahf
daa
dec
sar
mov
mov
or
insl
pop
inc
jecxz
pusha
testl
xorb
mov
in
lock
fisubl
or
pop
fstps
jbe
push
rorb
inc
cmp
jb
and
into
into
sti
dec
mov
xchg
mov
adc
mov
push
sbb
out
and
jnp
repz
adc
stos
inc
xor
adc
fdivrs
bound
inc
das
aam
fs
inc
shlb
aas
xchg
gs
lds
pop
or
in
jne
ljmp
push
cmpsb
das
inc
add
dec
ds
in
and
xchg
lock
cmp
cli
pusha
mov
inc
mov
cmp
mov
out
daa
mov
mov
popa
popa
mov
popl
into
pop
sahf
es
cmc
fisubl
push
cld
in
dec
insb
dec
push
fdivrl
gs
jge
add
cmp
les
push
jp
testb
add
fisubrs
lods
pop
jmp
popa
xchg
push
mov
es
lds
mov
pop
cmp
adc
popa
mov
adc
pop
pop
xchg
std
lock
fiaddl
das
mov
adc
dec
outsb
shrl
enter
fs
pop
and
arpl
cmp
sbb
xchg
pop
xchg
mov
mov
push
and
imull
movsb
mov
shrl
jno
mov
dec
or
stos
fisttps
out
out
fsubs
fcomp
addb
dec
int3
sub
jecxz
push
pop
dec
imul
add
inc
mov
out
add
popa
daa
out
enter
mov
fs
outsb
jle
fisttpll
out
outsb
sbb
cltd
xorb
test
cltd
push
push
fmull
pop
xor
fcom
jl
mov
shrl
daa
push
adc
call
xchg
push
jl
jns
inc
pop
gs
and
aaa
xchg
sub
ja
jmp
lcall
sub
roll
test
jmp
mov
sahf
mov
add
jne
movsl
mov
in
jae
pop
nop
lahf
xor
hlt
sub
push
and
cmpb
sbb
fmull
pushf
inc
call
sbb
jae
iret
ja
push
cld
jnp
arpl
add
cld
data16
jae
adc
pusha
jp
mov
jmp
mov
mov
cmpl
mov
adc
aam
shld
out
pop
adc
sti
scas
cwtl
mov
mov
dec
stos
leave
mov
repz
aad
and
mov
xor
jecxz
mov
in
add
sbb
jbe
ret
mov
ret
nop
lock
xlat
stc
add
ja
jb
popf
jecxz
test
mov
and
jns
iret
push
cli
lret
sti
sbb
mov
xor
aas
cmpsl
clc
out
rcrl
push
cltd
dec
cli
scas
adc
dec
xor
sub
dec
cmc
lods
mov
shlb
xchg
hlt
adcb
adc
mov
push
adc
sahf
inc
add
lcall
mov
sub
add
push
rorl
add
inc
imul
repz
fldt
push
fistpl
push
cli
les
inc
es
dec
test
or
sub
mov
bsf
fisubs
push
rclb
jno
xchg
imul
cmp
inc
insl
xor
sub
add
in
scas
mov
push
push
adc
dec
daa
mov
add
into
insb
fldcw
pop
outsl
mov
dec
dec
xchg
enter
push
mov
ret
sbbb
inc
mov
add
sahf
in
repnz
jo
jg
rcrb
jmp
imul
sub
popa
cmp
outsl
test
clflush
sub
scas
gs
xchg
mov
call
pop
insl
test
es
push
and
sbb
pusha
adc
xor
stc
or
adcb
add
enter
push
lds
sub
ret
loop
mov
popa
popf
push
xlat
push
mov
or
movsl
in
insl
cld
je
cld
test
mov
arpl
cmp
pop
subl
mov
mov
outsb
sbb
add
pushf
testl
add
scas
or
push
sub
insl
fwait
adc
aam
addr16
sbb
ret
sub
mov
es
ret
imul
pop
addl
out
pop
and
dec
jns
mov
mov
push
adc
push
inc
leave
mov
cmc
inc
jmp
in
call
xchg
cmp
pop
sbbb
call
mov
cmpsb
xchg
mov
cmp
xchg
pop
popf
mov
xchg
cwtl
cltd
pop
cmp
dec
add
inc
jnp
push
leave
pop
jae
xchg
icebp
push
arpl
je
popf
mov
sub
lcall
sub
jb
test
inc
dec
icebp
movb
clc
mov
gs
lods
push
inc
fdivs
pushl
pop
inc
gs
in
rclb
inc
aaa
mov
pusha
sbb
imul
xchg
mov
jae
lcall
mov
sbb
imul
mov
js
idivl
sub
ljmp
push
pop
inc
in
jl
dec
pusha
push
dec
inc
fstps
ljmp
mov
fdivrl
je
push
lcall
add
mov
adc
mov
or
jl
out
xchg
and
dec
or
inc
in
xchg
xor
std
inc
xor
jg
push
mov
or
sub
icebp
pop
add
int3
das
out
pop
shrb
cs
adc
fstl
add
decb
push
fnsave
cmp
mov
push
lods
rclb
data16
lods
mov
add
test
mov
inc
xor
loop
in
xchg
out
jno
test
cld
pop
or
fcom
frstor
xchg
sub
icebp
mov
decl
cwtl
cmpsb
insb
fdivs
in
xchg
iret
std
and
jmp
daa
pop
shll
push
clc
dec
inc
mov
sbb
push
xchg
cs
jge
cli
add
scas
ret
inc
lds
push
js
outsl
mov
inc
mov
mov
rcl
dec
lahf
data16
in
stos
out
imull
enter
pop
push
xor
push
bnd
adc
clc
add
movsb
ja
or
pop
mov
scas
pop
hlt
pop
jnp
pop
mov
ret
and
push
and
imul
flds
sti
aas
int
inc
push
sbb
jbe
jle
push
xor
aam
pop
adc
scas
movb
xchg
or
push
rolb
inc
insl
fwait
out
pop
mov
out
cmp
push
aaa
out
jmp
push
inc
sbb
and
mov
lcall
or
das
jnp
imul
iret
lret
in
push
clc
pop
mov
inc
data16
mov
repz
mov
mov
jne
pop
xchg
sarb
lea
in
idivl
lcall
push
cmp
dec
mov
push
iret
loope
outsl
aam
cmc
roll
mov
sbb
shrb
jmp
xchg
sbbb
push
mov
jne
ficomps
adc
and
push
push
in
sbb
cs
loope
outsl
ss
xchg
xchg
pop
fstps
enter
outsb
outsb
js
stos
and
fcmovnb
xchg
push
push
fisubs
cmpl
pop
hlt
inc
nop
or
pusha
enter
js
int
sub
pop
mov
xchg
xchg
lods
or
dec
xchg
dec
mov
rorl
cld
and
xchg
pusha
icebp
push
in
pushf
out
inc
scas
pop
mov
add
pop
mov
or
mov
lock
nop
stc
adc
pop
loop
lea
sbb
cmpsb
adc
xchg
popf
cmpl
ret
xor
jge
push
or
cmp
cmp
leave
loop
mov
cld
and
cmp
mov
jecxz
sbb
ret
rcll
jne
jl
popf
sub
bound
enter
negb
insb
mov
jno
pusha
pusha
pop
mov
gs
das
inc
jb
push
adc
jecxz
adc
cltd
mov
notl
xor
lahf
lret
dec
jb
inc
lcall
cli
sahf
jno
aaa
out
mov
mov
addr16
lret
mov
mov
test
gs
pusha
fbld
xchg
sbbb
xchg
or
outsb
cmp
sbb
inc
fcom
arpl
fbld
lods
xor
or
ret
and
repnz
and
xchg
imul
jmp
dec
sub
or
lcall
add
in
sub
and
inc
stc
stos
outsl
mov
xor
cmpsl
ror
mov
or
lods
jg
outsl
cli
stc
pop
sar
cmpb
xchg
sahf
dec
inc
xchg
and
mov
shll
jg
adc
mov
or
pop
sahf
jns
mov
inc
lds
sbbb
ds
or
loop
or
in
mov
push
mov
scas
cmpsb
hlt
push
cmp
pop
lret
xchg
mov
das
xor
out
mov
add
jmp
mov
and
dec
and
add
cmp
fmul
pop
add
inc
or
mov
out
pop
mov
lret
hlt
imul
movsl
mov
lods
cmp
mov
jecxz
adc
shll
jl
dec
lahf
dec
mov
sbb
jmp
ljmp
mov
and
outsl
dec
dec
pop
notl
scas
ficoml
imul
mov
pushf
dec
mov
loop
mov
loope
in
adc
sarb
jne
pop
dec
pop
out
and
fisttps
dec
jp
ljmp
cmpsb
mov
or
or
mov
dec
sbb
or
jp
pop
repnz
cwtl
xor
int
shl
std
pop
cwtl
inc
jp
lods
aam
jl
mov
jmp
push
or
jl
dec
jno
stc
jl
sahf
aas
push
loope,pt
push
repnz
test
mov
aaa
and
testl
lods
out
insb
xchg
adc
mov
ret
sub
aam
in
ss
jne
push
cmp
pop
jae
add
xor
adc
bound
imul
jle
mov
mov
push
lret
lret
std
test
xchg
xchg
dec
inc
and
int
pop
jmp
bound
jno
adc
mov
xor
and
iret
lods
jle
mov
mov
or
aas
cwtl
and
divb
int
xlat
mov
jp
xor
ss
mov
xchg
cltd
and
inc
sbb
mov
ja
adc
lea
mov
mov
aam
mov
mov
aaa
les
cmp
adc
std
inc
rcr
xchg
pop
js
push
das
cmp
mov
pusha
xor
mov
movsb
xlat
insl
mov
mov
cmp
mov
mov
pop
pop
pop
dec
push
test
inc
sub
jbe
or
jno,pn
adc
dec
sbb
pushf
lds
js
fwait
divb
js
inc
fcoml
adc
jg
ljmp
push
gs
cmpsl
loopne
scas
pop
cmp
outsb
dec
sub
popa
lret
sysexit
int
mov
push
lods
xchg
cwtl
fdiv
fisubrl
loope
in
andnps
scas
xorb
fimuls
sarl
loopne
xchg
test
sub
outsb
repnz
push
xor
inc
mov
xchg
xchg
mov
loope
inc
cmp
pop
mov
jge
js
bound
pop
xchg
mov
les
mov
popa
fldt
inc
stos
stc
pop
xlat
push
adc
inc
mov
testb
out
popl
js
addr16
in
sbb
insb
and
xchg
jge
adc
pop
and
or
mov
into
fidivrl
dec
ret
dec
movsb
dec
lcall
pusha
test
adc
fstpl
sbbb
push
iret
cmp
mov
lods
dec
mov
repz
rcrb
icebp
cmpsl
adc
filds
ret
inc
xor
cld
iret
cmp
pop
hlt
cmp
mov
mov
adc
lock
xchg
lea
bound
jg
js
xlat
addr16
and
sub
or
cli
xor
es
cltd
xor
pop
add
add
sub
or
pop
jp
add
push
mov
inc
shl
mov
sbbl
xchg
rorl
jecxz
push
xor
add
ljmp
daa
movl
xor
add
fiadds
enter
test
adc
push
add
aaa
add
hlt
cmp
lret
lcall
mull
inc
shrb
push
loop
sarl
pop
pop
insl
xor
sub
out
pop
mov
inc
push
enter
loopne
rcr
out
cli
lock
sbb
xlat
or
dec
sub
flds
sbb
mov
jno
imul
sbb
cmp
imul
pop
push
xor
test
adc
scas
add
mov
and
stc
orb
add
flds
mov
pop
hlt
stos
sbb
pop
imul
in
cmp
in
push
jge
and
sub
lock
bound
sbb
cmp
jge
inc
stc
aas
mov
inc
or
dec
ret
sbb
stc
push
rolb
dec
jl
cmp
xchg
xchg
gs
push
cmp
loope
and
pusha
adc
sti
scas
dec
xchg
ds
dec
push
xchg
sub
cltd
push
and
xchg
lahf
dec
int
in
lret
sub
outsl
scas
pop
out
nop
aas
cmpsl
mov
std
or
inc
dec
fs
imul
or
orl
in
mov
daa
mov
sbb
mov
mov
mov
pop
lret
int3
push
or
sti
or
or
mov
imul
mov
mov
movsl
inc
sub
mov
sbbb
out
xchg
cmc
clc
imul
stos
insl
adc
fiadds
pusha
fistpll
push
leave
jbe
inc
lcall
fsubrs
daa
nop
sub
mov
jne
sub
and
dec
xchg
popa
repz
es
jns
mov
adc
pop
mov
lds
push
inc
and
jns
cmp
scas
sub
scas
out
mov
inc
jae
mov
push
seta
cmp
out
inc
sarb
pop
ss
xchg
subb
mov
out
fnstsw
pop
inc
cltd
cmp
jns
add
mov
int3
out
add
pop
xlat
jg
arpl
mov
addps
pop
scas
mov
push
push
fdivl
movsl
in
cmp
enter
and
and
jmp
sbb
fnstenv
adc
xchg
aad
dec
std
jne
stos
sub
cmp
outsb
and
pop
inc
pop
inc
mov
fsubr
push
loop
dec
sub
xlat
push
orb
repnz
movsl
rcrl
pop
cwtl
enter
adc
aam
lds
cmp
movsl
jae
leave
test
fcmovnu
xchg
xchg
lods
pop
imul
js
or
add
pop
xchg
movsb
lods
aas
jbe
in
pop
push
push
shl
imul
dec
pop
push
push
leavew
sbb
mov
and
outsl
jae
in
sub
add
in
addb
sbb
pop
call
cmp
fldcw
cltd
pop
out
xor
jne
out
pop
jcxz
divl
sub
sub
rcll
das
mov
cld
adc
xchg
std
rcr
shll
stos
adc
fimuls
mov
dec
inc
xchg
dec
in
pop
inc
push
inc
jg
leave
cltd
jmp
push
push
and
jecxz
pop
xchg
test
add
jns
cmpsl
pop
mov
int3
add
push
mov
dec
add
and
inc
xor
lea
into
adc
mov
mov
fldl
cli
nop
rol
lahf
mov
imul
xor
das
fdivs
jge
or
sbbl
jl
roll
aad
jno
aas
or
jp
insl
dec
dec
mov
dec
test
cmp
pop
mov
or
pop
imul
xor
mov
adc
push
rcl
xor
outsl
icebp
mov
jne
adc
add
ret
movsb
adc
jne
sbb
cli
xor
es
xlat
push
pop
sub
int3
add
mov
in
std
inc
jmp
cmpsb
jecxz
and
pop
out
test
lods
jmp
mov
push
sub
xchg
lds
outsb
pop
in
mov
cmpsb
loopne
ja
jle
adc
lods
test
dec
lds
scas
xor
movl
fwait
out
sub
inc
or
mov
int3
gs
shlb
mov
mov
jns
xchg
adcl
or
std
mov
lock
cmp
or
jns
jo
pushf
mov
scas
int3
mulb
cmp
jb
mov
dec
fs
sbbl
in
xchg
mov
fsts
loopne
shll
adc
xor
dec
outsl
addr16
int3
movsb
jle
idivb
push
nop
inc
adc
push
out
dec
xor
iret
pop
sub
ret
sbb
ret
adc
daa
loope
lahf
xor
mov
lahf
aam
adc
pop
loop
fs
cmp
mov
sbb
adc
cmp
sti
inc
test
mov
repnz
popa
dec
and
mov
xchg
mov
xchg
hlt
call
xchg
aaa
clc
loope
adc
idivb
mov
fwait
ret
aad
sub
dec
push
fwait
test
filds
adc
or
push
and
stos
dec
sbb
pop
xor
push
lea
and
iret
xor
test
mov
fstpt
aas
out
xchg
clc
pusha
dec
leave
inc
scas
ss
stos
mov
pop
cmp
mov
pushf
sarb
xchg
stc
int
xchg
fwait
and
dec
push
lret
or
xchg
or
lahf
aas
xchg
inc
lahf
movsb
mov
xor
insb
fdiv
imulb
sbb
pop
xlat
xchg
or
out
out
fistl
mov
insb
jge
in
mov
data16
std
xchg
scas
aad
sbb
mov
push
cmp
pusha
iret
mov
mov
mov
sahf
imul
sbb
jl
out
rcll
js
in
xor
pop
mov
add
mov
cmc
lods
sti
roll
xlat
sbb
repnz
xchg
icebp
addr16
dec
sbb
rcr
out
dec
pop
and
fidivs
out
imul
push
sub
popa
adc
pop
push
mov
push
in
cmp
mov
xchg
jno
pop
stc
std
push
aad
push
adc
xor
inc
scas
adc
clc
push
repz
ja
shrb
add
nop
xchg
mov
popf
out
lods
and
xchg
jle
mov
xor
std
add
jne
xchg
adc
jp
shlb
aad
jmp
sub
aad
xchg
cmpsb
imul
aas
dec
jle
shll
cmp
repnz
out
arpl
mov
int
adc
movsb
stc
lret
insb
and
fsubl
cltd
or
add
lock
cmpb
jbe,pt
mov
push
mov
add
and
pop
clc
pop
xchg
dec
mov
mov
sub
imul
inc
enter
adc
mov
dec
out
lock
inc
shrw
dec
dec
leave
jge
lahf
clc
aas
or
jl
daa
js
sbb
aam
ja
paddsb
cmpsl
sbb
gs
sbb
adc
adc
cli
push
and
sbb
push
cmp
scas
shrl
rclb
mov
cltd
push
mov
sbb
imul
in
or
pop
popa
popf
or
outsl
pushf
mov
fstl
xchg
hlt
xchg
cmp
or
leave
ja
mov
inc
mov
out
adc
in
xchg
ficoml
sbb
inc
sub
xchg
filds
mov
xchg
jnp
or
lea
mov
pusha
bound
add
mov
xchg
mov
fwait
bound
lds
push
sub
sub
mov
add
test
sub
pop
scas
nop
std
push
sti
andb
mov
loop
cmc
mov
fstp
xor
aaa
sahf
lods
pop
dec
jo
jle
fwait
les
test
aas
rclb
dec
repz
pop
push
movsl
mov
test
fistpl
and
jbe
test
mov
jge
add
jae
in
mov
dec
xlat
push
sbb
jns
stc
cmp
out
fnstenv
cmp
mov
rclb
mov
or
jecxz
mov
fisttpl
scas
xchg
pop
or
mov
mov
xchg
test
xchg
pop
and
imul
loop
stc
aas
cltd
and
ss
stos
adc
lret
mov
cmc
jno
push
ja
pop
sbb
cmp
repz
pop
adc
popa
xor
stos
mov
dec
dec
out
in
sub
mov
xor
fcompl
mov
xchg
insl
ja
xchg
imul
or
mov
scas
cmp
lds
ret
lcall
push
mov
outsl
mov
loopne
sarb
lret
sar
lods
add
add
out
pop
add
adc
jecxz
add
cmc
sub
fdivs
cld
imul
ja
fdivrl
xchg
aaa
mov
imul
sub
lods
xor
mov
rorl
fwait
add
gs
cli
dec
addr16
mov
les
cltd
pop
out
and
pop
imul
icebp
pop
push
pop
adc
or
cmpsl
pop
lret
repnz
mov
mov
sub
stos
aas
adc
push
xorb
adc
imul
ljmp
mov
or
lret
cli
std
fstpl
outsb
jnp
xor
add
ja
nop
inc
out
cmp
or
xchg
in
nop
daa
in
pusha
mov
rcll
mov
push
sub
js
jmp
aad
fisttpl
cwtl
adc
mov
mov
pushf
add
test
mov
into
test
push
fsubrl
mov
sbb
push
xor
and
xchg
cmc
test
sbb
and
outsl
mov
push
xchg
ret
xchg
mov
sar
xor
mull
icebp
notb
aas
filds
sarb
push
cmp
or
in
or
and
repz
or
sub
test
xor
jmp
pop
or
or
push
in
and
dec
bound
lcall
push
inc
and
addr16
movsl
xor
cmp
out
mov
xchg
into
pushf
mov
test
arpl
cltd
ficompl
jge
push
mov
xchg
mov
jp
dec
mov
push
movsl
ljmp
mov
aaa
and
dec
ret
scas
gs
or
out
cwtl
jns
stos
pop
outsl
fcomps
xor
das
test
add
push
cmp
pop
push
xchg
mov
aad
or
sub
jnp
iret
xorl
mov
mov
jne
fwait
cld
repz
xor
jno
push
test
xchg
lods
scas
dec
dec
mov
aaa
sbb
fdivrs
cmp
mov
mov
movsl
pop
xor
sub
les
mov
je
mov
mov
pop
pop
adc
jmp
mov
cld
cmp
xor
or
add
fidivs
dec
ror
push
inc
pop
test
mov
dec
or
sub
shr
mov
mov
mov
push
mov
cwtl
mov
push
cwtl
scas
sub
insb
loopne
sahf
adc
push
xor
mov
stos
add
xlat
jnp
pop
sub
in
mov
cld
call
call
jb
shll
mov
push
das
push
fs
into
cmp
adc
std
mov
inc
lea
jae
mov
and
fs
mov
dec
icebp
loopne
sbb
mov
out
mov
das
lret
inc
mov
push
inc
cmc
mov
lahf
mov
iret
push
lea
mov
mov
xor
sbb
and
jecxz
test
dec
inc
jl
push
lcall
stos
nop
lret
add
mov
sbb
loopne
call
xchg
fnstenv
pop
inc
int
push
or
pop
sub
jl
mov
ljmp
in
mov
test
mov
mov
sbb
sub
aad
call
aas
cmp
jle
lods
mov
in
mov
or
cmp
insb
movsb
mov
pop
ret
shr
pop
jne
es
scas
int
pop
sub
xchg
push
int3
lea
sahf
js
push
sub
xor
mov
add
or
push
jmp
sarl
sahf
mov
cmp
xchg
mov
rcrl
pop
nop
or
popf
out
addr16
paddq
and
leave
out
rcrb
or
fyl2x
hlt
scas
je
sbb
fstps
sub
ficompl
faddl
ja
xchg
insl
js,pn
add
shrd
fst
jbe
das
sbb
push
fdivrl
lods
call
push
ror
jae
and
popa
dec
ret
scas
out
cmc
add
dec
sbb
movsb
xchg
lret
mov
mov
push
jne
cld
pop
js
orl
cmp
lcallw
shlb
or
push
in
add
cmp
sub
mov
pop
out
leave
imul
inc
pop
cmpsl
mov
xor
cld
xchg
out
scas
add
cs
in
xchg
push
and
shll
inc
inc
dec
xchg
popf
mov
sub
loop
outsl
pop
out
imul
icebp
sub
adc
push
or
lods
inc
push
push
lret
mov
in
mov
adc
fsubr
mov
movsl
ret
xchg
int3
cmp
push
dec
mov
jo
jmp
cld
xlat
fstpt
ds
je
mov
push
and
dec
cmp
testb
mov
data16
xlat
mov
mov
shlb
fnstenv
cltd
jns
mov
outsl
movsb
jge
sub
jmp
mulb
inc
cld
xor
mov
inc
test
incb
cmpsb
xchg
movsl
jb
adc
add
xorl
mov
cmpb
xlat
jae
adc
cld
dec
fcomp
cmpsl
fmul
repnz
lock
les
shll
pop
adc
xchg
inc
out
xor
fstpl
pop
pop
or
mov
fbstp
stc
andl
mov
pop
cmc
mov
cmpl
dec
imul
inc
mov
xor
adc
pop
fs
faddl
je
mov
rcrl
stos
xchg
daa
sti
cmpsb
lret
xor
js
cld
sbb
call
sahf
inc
xchg
pop
dec
and
mov
les
lock
fistpl
rcr
sbb
mov
sub
jae
and
or
aas
pushf
out
lret
fidivl
arpl
xchg
dec
out
cwtl
lock
dec
adc
jbe
stos
push
push
mov
push
cmp
daa
push
enter
mov
sti
and
in
rorl
cmpsb
mov
adc
dec
pop
mov
pusha
or
je
mov
data16
pop
ret
jne
iret
xor
sub
mov
push
call
lcall
nop
push
push
fs
sub
or
scas
enter
jmp
cmp
mov
das
mov
add
das
cmpsl
lcall
movsl
in
rcrw
ret
push
out
and
iret
inc
pusha
jns
ja
pop
add
mov
jge
cmpb
fwait
ja
addr16
lds
and
mov
dec
data16
add
mov
jle
addr16
std
adc
imul
push
fidivrs
popf
mov
sub
push
jge
outsb
mov
push
fistpl
cltd
push
pop
ds
xor
les
sub
lcall
sbb
jle
push
ss
repz
xor
mov
in
scas
inc
ds
push
xor
add
mov
mov
pop
cmp
jmp
es
data16
roll
mov
ljmp
push
add
and
ja
push
call
lock
add
mov
into
push
and
mov
or
and
mov
incl
decb
mov
test
clc
add
in
gs
cld
fwait
xchg
and
inc
sbb
lock
push
loop
aas
movsb
add
imul
push
mov
jge
push
jbe
jmp
lret
pop
or
inc
outsl
clc
cmp
data16
lahf
pop
sub
push
bound
cmp
lahf
inc
dec
out
mov
out
mov
je
imul
sub
push
lds
pop
xchg
ret
fs
mov
jbe
or
inc
dec
dec
sub
xor
jmp
or
jecxz
inc
xor
les
push
mov
adc
jp
cmpsb
push
test
out
rcr
lret
loopne
xchg
out
dec
xor
xlat
nop
lcall
faddl
addl
xor
inc
push
mov
cmp
insl
cmpsl
ja
sbb
cmp
loopne
idiv
leave
lret
or
loop
out
arpl
scas
push
sbb
out
bnd
sub
shll
jecxz
cmp
pop
cmc
pusha
push
xchg
mov
lods
pop
std
sbb
nop
cmpsl
pusha
cmp
or
fs
push
fmuls
pop
rorb
sarl
imul
inc
daa
cmp
mov
jb
es
mov
scas
pusha
jae
fcomps
stc
pushf
mov
jl
imull
cmp
and
xchg
popa
lahf
lods
les
xchg
push
mov
data16
mov
fstl
outsl
lock
sbbl
or
je
mov
je
jmp
adc
push
adc
mov
lcall
int
dec
and
jle
mov
pop
testl
xchg
sarl
into
iret
js
inc
stos
inc
test
lods
pop
add
or
lcall
dec
jmp
loopne
and
insb
and
xor
outsl
test
push
cli
jne
mov
ljmp
mov
stos
mov
sbb
xchg
cltd
ljmp
push
jo
stos
lret
lea
xor
mov
negl
loope
leave
push
movsl
sbb
fst
imul
dec
xor
out
mov
fst
jl
imul
jl
aam
fabs
and
icebp
and
daa
mov
sbb
mov
sti
dec
andb
mov
jno
mov
jns
cmp
xchg
leave
mov
lea
mov
sbb
push
imul
push
mov
dec
sti
int
jge
mov
inc
mov
stc
mov
das
sbb
cmp
loopne
cwtl
lea
sbb
jmp
imul
pop
mov
push
lods
stos
into
sbb
cmpsl
xchg
mov
jo
push
daa
sbb
pushf
out
out
test
push
pop
imul
test
mov
xchg
pusha
inc
mov
sub
movsb
ljmp
lods
ja
jno
lods
jo
push
cmp
or
pushf
xchg
ljmp
not
divl
imul
lea
pop
shl
aas
aam
adc
mov
mov
cmp
xchg
sbb
dec
sub
loop
in
push
push
stc
add
addr16
sub
pop
andb
loope
int
sub
pop
mov
xchg
or
scas
pop
ja
or
push
fs
dec
xchg
ficoml
dec
jne
cmpl
and
jns
es
in
push
mov
jl
fwait
add
jle
jno
add
cmp
pop
aam
sub
cmp
cmc
mov
cmp
ficomps
push
inc
outsb
dec
push
test
xor
cmpsl
aas
vshufps
movsl
test
mov
fldenv
fimuls
les
inc
cmpsb
ret
lcall
outsb
push
jge
add
in
fnstenv
pusha
push
stos
jo
cmp
inc
sbb
and
jp
popf
jno
inc
andl
xchg
outsl
arpl
out
and
jp
out
sub
dec
std
imul
mov
imul
push
add
cmpsl
and
inc
sub
jle
ret
ja
sbb
cmp
jnp
ret
mov
pop
cld
mov
add
fwait
push
and
cmpsl
mov
pop
mov
addr16
std
pop
inc
xchg
adc
aas
mov
stos
movsb
mov
xchg
fimuls
roll
dec
fs
mov
pop
mov
lods
jl
ds
iret
scas
xor
inc
rorb
js
sub
cmp
add
lods
out
mov
push
mov
sbbb
fwait
mov
push
or
leave
jb
inc
xchg
xchg
cmp
xor
xchg
adc
xor
popw
push
insb
mov
lock
stos
mov
into
push
mov
fidivrs
insl
xor
ss
stos
cmp
push
mov
and
les
mov
jle
sbb
push
xor
out
push
aam
lahf
inc
mov
fwait
cmp
aaa
adc
cmp
and
mov
ret
stc
dec
das
sbb
rcl
xor
inc
ja
and
xor
mov
fstps
mov
push
pop
je
es
mov
jl
mov
int3
pop
insb
inc
xchg
pop
shll
mov
inc
dec
mov
mov
xor
sub
cltd
js
pop
sbb
out
xchg
and
pop
dec
sbb
aad
lret
ret
mov
in
aad
xor
xchg
ss
ret
dec
and
add
and
dec
and
xchg
sub
push
push
test
mov
imul
push
push
or
popa
jns
lods
mov
jb
vhsubps
repz
fadds
lcall
push
into
and
in
imul
ds
xor
mov
pop
mov
lcall
sbb
lods
add
testl
repz
pushf
mov
fs
pop
mov
push
sbb
andl
dec
push
nopl
adc
out
push
sar
jmp
rcrb
ss
mov
movsl
sub
jge
unpckhps
adc
sbb
jae
mov
mov
jmp
lret
add
sub
lret
add
data16
cmpsb
dec
out
push
mov
pushf
pop
xchg
call
pop
xor
adc
loopne
push
fildll
fbstp
mov
loopne
and
dec
shl
jae
es
mov
fiadds
mov
pop
ret
jecxz
test
mov
gs
shlb
icebp
jnp
or
stos
mov
pop
xor
adc
pusha
sub
add
in
inc
gs
pop
pop
stos
dec
addb
pop
rcrl
lret
lahf
sti
ror
scas
adcl
movsb
pop
divl
daa
jns
jge
add
loop
and
xor
mov
leave
fldenv
dec
mov
lock
loope
push
dec
nop
sbb
sbb
xor
cmp
outsw
push
icebp
xchg
inc
rep
aam
leave
clc
push
mov
aam
outsl
xor
mov
test
je
xor
pop
pop
xorb
and
xchg
adc
mov
gs
cmp
movsl
orl
push
mov
imul
cmp
ja
mov
mov
ret
fwait
cmpsb
stos
popa
bswap
je
inc
test
fmuls
adc
dec
not
loop
jmp
xor
fstpl
arpl
inc
loop
gs
inc
mov
stc
adc
inc
pop
adc
add
mov
mov
fwait
mov
adc
jae
out
mov
dec
insl
in
pop
out
push
jae
xchg
mov
xchg
mov
lods
adc
and
adc
mov
gs
ds
mov
jb
subl
les
movaps
shr
fadd
rcrb
add
mov
std
repz
xchg
and
imul
lods
lods
pop
repz
mov
fcomps
jp
lock
int
loop
mov
sbb
dec
or
jg
inc
in
aam
lods
outsb
repz
jle
stc
sbb
fisttpl
mov
lock
adc
sub
repnz
push
push
int3
jnp
and
sbb
sbb
test
lcall
cmpsl
xor
xlat
dec
xchg
and
sti
in
sbb
mov
push
sbb
es
icebp
add
addr16
into
enter
mov
popf
movsb
pushf
mov
jbe
jle
lret
ret
out
gs
sub
pop
cmc
movsb
arpl
or
mov
xor
xor
lret
cli
movsb
adc
loopne
sti
adcl
mov
shlb
push
push
inc
sbb
enter
and
jmp
int3
mov
and
ja
pcmpeqb
mov
lret
xchg
push
fists
xorb
fcompl
or
push
and
mov
inc
arpl
test
cmpsl
movsb
cmp
sbb
adc
mov
push
loopne
mov
add
push
lcall
sbb
fs
arpl
repnz
test
clc
ljmp
cmc
cmp
into
call
mov
pop
or
rcrl
mov
ljmp
popf
add
cmp
pop
and
adc
push
lods
fdivrp
fs
jp
test
mov
sbb
lret
cmp
xchg
js
and
mov
sbb
push
dec
sub
sbb
mov
out
cli
sub
dec
pop
scas
mov
fldcw
mov
arpl
and
mov
loop
jle
in
or
xchg
fisttpl
mov
std
sub
sbb
rcl
jmp
mov
jns
or
jbe
mov
imul
loope
sbb
jne,pt
jns
lcall
adc
push
lods
mov
add
push
or
outsb
adc
xchg
inc
xchg
xlat
push
mov
jbe
jle
mov
sub
popf
pop
sti
into
movsl
or
icebp
mov
push
lahf
cmp
push
xchg
xor
lock
sub
jge
lea
jne
movsl
adc
hlt
or
pop
xchg
aam
nop
out
cmp
jnp
pop
dec
jo
jge
rcl
push
shlb
scas
adcb
mov
or
lcall
sbb
mov
hlt
sbb
aad
xorl
imul
pop
pop
iret
es
aam
pop
ficoms
loope
es
les
mov
cmp
lahf
cmc
or
ret
xchg
ljmp
pop
hlt
add
push
aas
inc
int3
or
aam
addr16
and
jbe
fsub
loop
loop
and
lea
sub
and
pop
and
lds
outsl
push
idivl
shlb
mov
mov
sub
or
dec
lcall
ds
xchg
movl
lret
leave
push
loop
out
jg
dec
std
outsb
lcall
outsl
test
repz
sub
out
mov
push
mov
xchg
cmp
add
mov
jbe
int
push
mov
or
shrb
fs
cmpsb
and
mov
lods
xchg
iret
and
insl
jmp
pop
in
movl
ret
in
dec
sub
imul
fsts
pop
in
mov
and
xchg
xor
cmpsb
inc
test
out
test
push
test
pop
mov
jecxz
adc
lea
and
and
sarl
or
sub
shl
out
fucomip
inc
into
imul
arpl
push
outsl
into
jb
adc
in
xlat
xchg
pusha
sbb
out
in
xchg
sub
ss
or
push
adc
dec
inc
iret
or
jnp
in
pop
xchg
arpl
adc
inc
lds
shlb
andb
ds
or
inc
fwait
dec
imul
out
in
loope
inc
es
andl
xor
ljmp
sbb
repz
jne
js
pop
jmp
mov
mov
cmpsb
jmp
jp
loop
jae
jmp
add
and
cmpb
fdivrl
jae
cmpsl
ret
cmpsl
cmpsl
xor
les
or
negl
fstpt
pop
ljmp
pop
out
mov
mov
xor
test
js
dec
stc
mov
xor
call
decl
loopne
mov
out
mov
and
cmp
das
bnd
jb
aaa
fs
mov
pop
cltd
aam
fsubrp
jae
inc
mov
jns
les
inc
mov
pop
mov
fsubs
add
mov
mov
mov
inc
adc
xor
insb
mov
pop
mov
cltd
mov
mov
lcall
dec
aaa
push
gs
btr
sub
jl
pop
sub
mov
sub
cmpl
outsb
dec
testl
mov
sbb
sub
push
pop
push
ret
inc
cmpsl
xchg
out
sbb
jl
lahf
jecxz
and
test
adc
sbb
sti
es
addr16
jbe
aad
outsb
stos
mov
xor
mov
add
and
mov
outsb
dec
in
dec
push
call
mov
jg
fcomip
shll
out
loopne
xchg
and
sub
out
in
loopne
cmp
mov
dec
cmp
push
aas
iret
fwait
pop
cltd
int3
add
xchg
sbb
mov
sar
or
xor
arpl
repz
andb
es
add
sbb
pushf
mov
xor
xor
ret
inc
mov
in
lds
jnp
mov
js
movsl
mov
adc
imul
jae
push
cmp
add
test
adc
stc
adcl
dec
popf
cmp
out
adc
xchg
test
test
dec
lods
push
notl
bound
stos
cli
out
mov
add
push
push
fwait
push
repz
je
call
mov
repnz
inc
adc
cmp
sbb
pushf
mov
out
mov
or
mov
push
push
std
cltd
inc
and
dec
sub
fists
add
xlat
iret
adc
mov
repnz
inc
out
mov
xchg
lds
pusha
and
sahf
sti
outsb
mov
out
loop
xor
je
fidivl
push
pusha
mov
loope
sbb
pop
ficoml
test
adc
ljmp
inc
pop
outsb
push
push
sub
xchg
adc
push
push
mov
lahf
cmp
std
cmc
iret
jb
adc
push
push
mov
cltd
call
arpl
xorb
pushf
pop
add
cmp
data16
arpl
mov
adc
add
insl
pop
xchg
daa
pop
dec
loopne
add
mov
std
cwtl
push
jg
xor
lret
adc
add
adc
mov
pop
sbb
test
call
loopne
dec
adc
pop
add
or
jmp
and
xorl
into
outsl
call
cmpsb
nop
dec
pop
lret
rcll
cmp
adc
test
xor
lods
pusha
pop
mov
enter
int
pop
out
xchg
mov
adc
mov
mov
pop
imul
pop
dec
dec
add
pop
dec
pop
inc
cs
xor
mov
fiadds
inc
adcl
insb
push
mov
sarl
ljmp
mov
mov
fcmovnb
xchg
das
mov
mov
mov
in
ja
aaa
sti
sbb
mov
adc
insl
loope
adc
ss
mov
and
cmp
sti
jbe
sbb
cmp
jecxz
mov
push
pop
mov
jbe
ljmp
or
sub
mov
xor
shll
push
mov
pop
mov
clc
ret
inc
subb
push
mov
and
fs
js
push
dec
insl
push
dec
sub
xor
lret
cmp
cld
cmp
in
mulb
int3
scas
cmp
pop
repz
adc
fucomi
xor
sbb
xorb
mov
cwtl
inc
mov
sbb
xlat
mov
cwtl
push
xlat
mov
pushf
in
mov
push
mov
cmp
jne
nop
xorb
xchg
div
hlt
xchg
adc
sub
jge
shl
dec
mov
stc
pop
out
stos
stc
xchg
adc
outsb
inc
icebp
lods
movsb
movsl
fwait
push
out
js
sub
les
out
mov
dec
jae
adc
outsb
jmp
mov
lret
or
jne
jno
cmp
mov
mov
imul
sbb
enter
shlb
adc
or
pusha
mov
dec
int3
bound
ljmp
cmp
mov
jno
test
xchg
dec
data16
mov
or
je
outsl
mov
mov
jb
sti
fbstp
adc
sub
test
xchg
inc
sbb
movsl
add
add
fdivl
in
push
jge
scas
or
pop
repz
push
push
ljmp
sahf
add
add
pushf
mov
pushl
aam
stc
sub
faddl
jl
mov
lret
cmp
adcl
rcl
les
cmp
adc
and
daa
in
mov
popa
jge
mov
fwait
std
aad
test
dec
pop
dec
fdivl
sbb
in
jno
ss
add
mov
jg
mov
aas
sbb
mov
repz
mov
xor
xor
or
in
fnsetpm(287
fsubs
jecxz
ds
adc
lret
repnz
xor
cmp
pushf
pop
mov
int
push
and
adc
scas
nop
aas
xor
lret
leave
les
inc
jns
ds
icebp
imul
cmpsb
dec
in
or
ds
add
insl
or
mov
adc
push
inc
or
sbb
pop
inc
ljmp
cld
sub
lea
and
cmp
insb
sub
pusha
xor
lock
jo
test
push
and
xor
xchg
inc
popf
jae
ret
ret
call
insb
shll
testb
dec
sub
xor
adc
adc
mov
lea
jno
pop
mov
int
cmp
mov
dec
sbb
push
pop
cld
fisubrs
stc
add
xor
popf
and
pop
jl
lcall
imul
lods
push
add
mov
push
jnp
icebp
and
adc
popf
into
sar
inc
mov
das
push
mov
inc
in
les
mov
out
xchg
lcall
or
frstor
daa
mov
sub
jo
mov
movsb
xor
cmp
movsb
mov
dec
jns
jb
sbb
push
push
cmpxchg
ljmp
and
mov
xchg
mov
and
test
jmp
insl
push
inc
inc
das
jg
adc
pop
fyl2xp1
push
sarl
xlat
or
hlt
sub
xor
adc
cmp
std
xlat
je
dec
mov
ja
pop
mov
push
test
xchg
xor
pop
pop
and
push
fisubs
mov
push
outsb
and
test
inc
ss
test
insb
loopne
ds
pop
lds
cwtl
mov
push
and
mov
push
sub
inc
or
sbb
js
mov
sbb
imul
inc
fcmovu
in
mov
int3
fcoms
pop
js
nop
popf
gs
sub
mov
data16
ret
xlat
push
rcrl
xchg
xchg
insb
dec
in
mov
cmp
jmp
lret
outsb
scas
add
gs
mov
in
xor
lock
xchg
sbbb
xchg
mov
fists
cltd
popf
lahf
and
rol
or
cmc
adc
jb
fldlg2
inc
mov
out
jmp
iret
cs
js
xor
ss
or
pop
add
int
inc
arpl
loopne
cs
pop
inc
clc
pop
and
jbe
pop
inc
lahf
stos
cltd
lcall
fsubrl
mov
std
pop
sbb
pop
and
cs
mov
add
adc
xchg
aaa
cld
aad
test
hlt
nop
sbb
outsl
add
movsl
jae
pop
add
push
jle
aad
cmp
sub
and
xchg
add
dec
sti
cli
jno
or
jne
inc
jb
call
loopne
cwtl
xor
push
add
sbbb
popf
mov
adc
or
scas
dec
les
mov
test
xor
xchg
pop
cmp
or
push
or
pusha
cli
cmp
mov
or
inc
aaa
pop
out
add
in
mov
mov
aas
shr
mov
es
leave
imul
lahf
mov
sbbb
pop
sub
and
jl
call
inc
mov
jo
xor
gs
fs
mov
push
and
iret
xchg
xchg
dec
mov
push
mov
jno
insl
mov
dec
idivl
arpl
mov
fs
es
jae
stc
xor
adc
push
cmpsl
insl
loop
jl
dec
cmp
push
js
adc
addr16
cmp
test
je
imul
out
sub
sub
arpl
mov
es
or
jmp
push
jno
lock
ja
addl
push
stos
push
push
xchg
xchg
push
push
cs
call
rorl
cwtl
rcll
lahf
xor
int3
mov
xchg
sbb
faddp
aas
lret
cli
cmp
ret
shlb
stos
dec
or
mov
dec
cli
adc
mov
or
lret
xchg
in
push
cltd
push
sbb
pop
ljmp
imul
test
jbe
pushf
mov
fmuls
fists
mov
repz
ljmp
add
add
movsl
pop
mov
lods
shlb
mov
jg
xchg
insb
jno
mov
out
mov
pop
jle
jmp
jns
sbb
sub
inc
mov
test
fnstenv
sbb
xchg
xor
aam
stos
or
pop
adc
mov
or
jle
sbb
fwait
pop
scas
int
xchg
and
or
push
inc
xlat
mov
cmpsl
inc
int
cmp
jle
shll
cmp
nop
push
push
cmc
mov
cmc
push
cmpsl
aam
cltd
mov
mov
rcrl
mov
lret
movsb
pop
mov
addl
push
cs
or
push
and
ret
mov
add
jno
fucom
pushf
pop
repnz
sub
mov
subl
add
xchg
sbb
jecxz
test
ljmp
mov
dec
xchg
adc
lahf
loop
fists
sbb
jle
inc
es
mov
icebp
movsl
adc
lcall
movsb
dec
mov
cmp
in
cmp
es
xor
cmc
in
jns
mov
xor
and
fcompl
nop
testb
and
inc
mov
pop
add
test
cmpsb
dec
out
mov
insl
popa
in
xor
fisubl
push
icebp
push
mov
fistpll
cs
sar
mov
mov
mov
or
lea
inc
pop
xlat
push
insl
ror
das
inc
lcall
mov
aam
fisubs
jb
in
xor
fidivl
je
xchg
in
jecxz
jl
js
andl
icebp
and
add
insb
std
add
or
dec
addr16
push
adc
cmp
repz
xchg
pop
sti
sbb
addr16
out
pop
in
xchg
dec
movsb
movzbl
lods
cmpsl
test
push
and
or
push
push
stc
xchg
push
or
loope
push
pushf
subl
mov
mov
arpl
lods
mov
fwait
jno
jbe
jne
adc
jbe
pop
iret
mov
sbb
dec
mov
adc
sahf
andl
shlb
jl
pop
push
subl
add
cmp
js
or
xchg
loopne
push
jle
mov
xchg
pushf
dec
and
mov
and
dec
inc
fildll
adc
mov
jne
inc
dec
xchg
cmpsl
sarl
outsb
add
inc
sahf
xchg
iret
negb
lods
arpl
add
iret
mov
sbb
mov
rcl
pop
adc
dec
pop
lds
ret
adc
outsb
xor
in
faddp
push
fidivl
pop
mov
xchg
mov
imul
xorl
jbe
std
jge
call
inc
sbb
add
inc
orl
adcb
and
out
xchg
inc
mov
mov
outsb
jmp
adc
es
lods
dec
movsb
add
gs
mov
mov
imul
add
mov
test
xor
pop
mov
movsb
mov
mov
xchg
push
loopne
pop
push
inc
xor
fwait
pop
push
stc
mov
push
or
mov
and
cld
aas
mov
mov
clc
bound
xor
fistl
fldln2
cmpb
jbe
orl
mov
sahf
push
in
incb
imul
stc
sbb
jmp
es
imul
sarl
jno
fs
pop
mov
stos
aam
scas
inc
mov
insb
jmp
xor
arpl
jno
shll
xor
hlt
or
pop
adc
xor
ftst
cmc
mov
xchg
mov
sbb
pop
mov
sahf
dec
aam
mov
repz
fcmovbe
imulb
nop
pop
xor
push
xchg
repnz
js
xchg
adc
cmp
int3
jno
or
add
push
jae
and
mov
dec
mov
fwait
pop
neg
fwait
adc
cld
test
fwait
stc
mov
add
pop
out
push
add
jno
fsubrl
push
lock
addl
push
pop
mov
adc
and
fcomi
ja
mov
in
dec
mov
xor
mov
lahf
idivl
sbbb
jle
test
loopne
jl
jbe
je
fld
scas
sub
ja
repnz
xchg
jo
cmp
inc
push
xlat
out
or
out
adc
mov
scas
push
and
cmp
mov
jno
or
sbb
aad
dec
rcrb
mov
mov
pop
pop
inc
lods
pop
nop
or
jno
shlb
imul
lret
adc
add
stos
xor
movsl
icebp
fisttps
es
mov
jmp
or
adc
mov
xchg
sbb
dec
xchg
ret
inc
mulb
adc
call
daa
cld
stos
pop
lea
sbbl
mov
shll
loope
gs
dec
xchg
or
cmpl
add
sbb
icebp
cmp
lock
cmc
cmpsb
stos
sbb
inc
scas
push
loope
or
subl
adc
dec
inc
jl
das
outsl
ficompl
push
ficomps
lock
push
sub
xchg
push
in
push
data16
movsl
inc
cs
sahf
xor
or
mov
mov
cwtl
mov
lods
repz
mov
int3
and
fists
dec
inc
icebp
lods
ljmp
idivb
loopne,pn
mov
imul
in
inc
in
fsubp
push
jnp
pushl
loopne
out
dec
mov
shl
test
cmp
cmpsl
mov
paddusb
aam
cmp
lds
sbb
push
jmp
pop
sub
xchg
fdivs
jbe
sbb
ret
daa
pop
lea
xor
jns
push
mov
mov
push
jne
mov
loope
movsb
popa
push
or
pop
stc
mov
scas
add
aad
sbb
daa
pop
stc
fnstsw
mov
cli
mov
inc
icebp
gs
xchg
mov
cltd
sbb
leave
push
mov
ficomps
jns
jge
movsl
jecxz
sub
xchg
or
ret
jno
jecxz
fimull
add
add
fisttpll
sbb
add
and
add
out
cmp
mov
sbb
das
cmp
movsb
js
ja
int
add
pushf
ljmp
ficomps
xor
sub
cmp
enter
add
xor
or
xor
popa
in
sbb
out
dec
loop
test
jp
aas
clc
add
mov
and
and
int
cs
xor
cmp
scas
pop
adc
cmp
mov
cmpb
sbb
jp
bound
cmp
movsl
rclb
cmp
adc
and
loope
push
pop
insl
pop
in
jae
xchg
jae
stos
mov
test
jl
data16
mov
decb
xor
push
push
aad
push
cli
je
cs
test
icebp
jb
lret
or
and
jg
pop
fldt
outsb
inc
xchg
jae
idivl
and
arpl
xor
push
ret
xor
dec
loope
out
sub
xlat
cmpsb
out
cmp
sub
jecxz
arpl
jb
adc
inc
pop
hlt
test
adc
es
int
sbb
lret
cwtl
ja,pt
fildll
pushf
out
je
insl
jp
imul
fcmovb
sbb
jmp
rorb
mov
cmpsb
mov
sbb
outsb
adc
inc
mov
xchg
cltd
sub
rorb
mov
hlt
lea
and
xchg
das
es
ljmp
setl
adc
add
aas
push
mov
jp
lcall
cmp
mov
sbb
cmp
packsswb
in
lock
dec
adc
jno
lcall
ret
adc
mov
loopne
mov
in
repnz
sbb
mov
and
mov
fimull
cmp
jecxz
xchg
cwtl
inc
lret
pop
sti
or
adc
fstl
mov
in
inc
jns
inc
aad
loopne
push
push
outsl
cmp
jge
outsb
xchg
cmp
out
add
out
fldcw
mov
xchg
flds
pop
ret
enter
sbb
hlt
xor
adc
xchg
jne
imulb
scas
mulb
mov
xchg
push
inc
movsb
call
aaa
popf
xchg
or
mov
jmp
mov
out
inc
and
dec
adc
arpl
inc
int
xchg
jno
jmp
rcrb
aaa
int3
mov
lea
ficomps
in
or
jne
dec
sahf
cmp
mov
mov
daa
or
xchg
negb
xchg
fnstsw
and
jb
call
addl
mov
lcall
xor
fsubs
int3
cmpsl
popf
jmp
fsubl
iret
pusha
add
testl
or
push
sahf
call
mov
sbb
jns,pn
out
imul
popa
pop
repnz
xchg
pop
adc
push
loope
int3
repnz
insl
popa
inc
shl
cmp
sbb
out
mov
push
inc
fiaddl
push
mov
subb
mov
test
sub
test
dec
aaa
pop
cmpl
add
outsb
mov
sub
and
xchg
mov
inc
stc
mov
dec
jp
imul
loopne
ja
bound
decl
and
adc
out
stos
gs
ja
aas
inc
push
cmp
out
or
xlat
ret
dec
xor
ja
insl
pop
jg
shrb
lcall
sti
mov
arpl
dec
dec
in
subl
aad
stos
and
lret
pop
or
sub
pushf
lock
pmullw
or
lea
leave
push
ror
xchg
and
hlt
dec
xchg
lret
xor
mov
out
fnsave
sbb
fxch
xlat
notb
mov
lds
and
fisttpl
lods
std
scas
xor
or
scas
shlb
ja
lret
pop
bound
aad
sub
das
or
popa
pop
pop
push
jle
push
pushf
mov
push
in
daa
xchg
test
scas
and
les
aad
icebp
insl
mov
push
mov
into
dec
push
xchg
data16
push
cli
jmp
pop
jg
pop
lret
popa
mov
jb
dec
rcll
inc
loopne
lods
ja
add
pushf
in
sbb
loop
fwait
movsl
stos
mov
je
leave
movsl
jle
into
push
repnz
mov
push
add
out
sbb
orb
jb
xor
movsb
and
jle
mov
cltd
mov
js
and
in
add
ret
push
pop
pop
pushf
add
pop
inc
sbb
mov
mov
lods
sbb
jno
mov
and
cmp
fisttps
test
stc
mov
lea
push
jo
jp
sahf
adc
xor
adc
popa
sbb
clc
xchg
xor
xchg
int3
rcl
mov
sbb
aam
fstpt
mov
cltd
pop
pop
repnz
push
or
loopne
int
mov
ds
inc
dec
mov
pop
sub
imul
popf
scas
shrb
adc
jo
push
jae
dec
shr
pop
rorl
xorl
pop
jae
jp
mov
aam
and
imul
stc
fiaddl
test
dec
mov
or
and
cmp
ret
mov
stos
shlb
lahf
adc
push
fstp
push
scas
add
movsl
int
push
lods
lea
loop
sbb
aaa
add
push
sti
imul
sub
jmp
xchg
addr16
adc
mov
inc
cmp
push
jne
icebp
and
xchg
sbb
mov
mov
or
cmp
pop
inc
ret
movsb
ja
dec
xchg
fwait
cmpsb
push
cli
insl
test
int3
inc
push
call
adc
xor
inc
xor
repnz
and
mov
jb
add
nop
popa
outsl
out
into
loope
or
scas
sahf
loopne
mov
repz
popf
inc
and
test
test
inc
imul
in
stc
pop
pop
xchg
loope
jbe
sarb
repnz
mov
insl
imul
int3
cmc
fmuls
arpl
mov
adc
inc
repz
scas
sub
sbb
mov
mov
fidivrs
xchg
stos
and
adc
mov
sbb
mov
mov
stos
push
ja
sub
xlat
sbb
es
inc
insb
cwtl
out
dec
in
inc
sub
clc
cmp
mov
sub
push
or
mov
pop
xchg
int3
cmp
sbb
xor
shl
popf
lods
dec
and
cmp
enter
jmp
jge
insl
fdivr
aaa
sbb
gs
popf
xchg
pop
sbb
pop
push
pop
push
dec
out
adcl
test
and
xchg
shlb
xchg
rcrb
cs
dec
adc
mov
mov
sub
inc
stos
jecxz
ds
test
inc
jp
in
jb
xchg
ljmp
mov
imul
dec
xlat
sti
test
xchg
int
je
jge
repz
jns
lds
arpl
xchg
int3
int3
pusha
int3
dec
sub
dec
aas
xor
lods
clc
jp
lret
mov
push
wrmsr
cwtl
addl
mov
imul
aam
xor
xor
sub
fcoms
pop
lods
or
mov
sub
movsl
clc
add
shll
adc
pop
mov
repz
adc
test
push
xor
sahf
repz
xor
stc
sbbb
xor
std
roll
or
out
and
arpl
jnp
fs
dec
xchg
int3
xor
addr16
insb
sub
rclb
pop
jbe
pmaxsw
xchg
lea
xchg
sbb
sub
or
mov
in
add
movl
subb
push
sbb
cmp
into
and
xchg
and
jbe
add
das
notb
sti
movsb
inc
xchg
rcrl
std
in
adc
and
add
xor
sub
adc
popf
popa
push
xchg
cmpsb
inc
mov
gs
pusha
sbb
rcrb
dec
pop
call
jle
mov
and
xchg
sarl
loop
jb
clc
adc
lea
punpckldq
mov
push
or
ret
rolb
stc
loopne
lea
inc
mov
push
push
jg
fs
mov
cwtl
xchg
cmp
jne
xchg
fbld
loop
out
dec
arpl
mov
js
adcb
pushw
leave
test
and
lahf
rorb
cwtl
jecxz
call
and
push
lahf
cmpsl
mov
sbb
sbb
enter
cmpsl
enter
mov
imul
aam
cmp
lahf
xchg
iret
cmp
inc
out
sahf
lcall
shl
fisubrl
ret
dec
flds
xchg
mov
lods
or
or
xchg
fstl
mov
sub
cld
push
cmp
aam
mov
push
jecxz
lds
jg
ret
scas
into
insb
jmp
sub
pop
pusha
sub
inc
fcomps
mov
sub
insb
xchg
push
pop
sbb
pop
test
jo
cmpsl
push
in
and
mov
cmp
dec
dec
inc
iret
in
pop
inc
stos
cwtl
repnz
ficoml
rcrb
push
sbb
jo
pop
mov
jb
das
sahf
data16
mov
stos
lret
sbb
aas
xor
mov
jbe
push
push
mov
nop
cmp
test
jge
inc
out
filds
mov
lret
and
outsb
popf
mov
ret
mov
mov
es
and
push
arpl
or
aas
ja
test
mov
imul
roll
adc
inc
xchg
lahf
adc
lret
jp
movsl
lods
and
aad
mov
xchg
fwait
popa
sub
mov
xchg
icebp
sbb
rcrl
push
test
insl
push
jne
insl
fistps
jge
xchg
aam
dec
arpl
dec
xchg
mov
into
mov
push
dec
subl
popa
push
mov
mov
ret
into
test
xor
inc
mov
sbb
inc
jecxz
or
pop
in
pushf
lods
outsb
pop
fcmovnbe
cmpsb
inc
pusha
mov
stos
and
imull
mov
fsub
cmp
aaa
and
jecxz
adc
cmc
pop
push
aad
fisubrl
outsl
in
adcl
ljmp
sbb
inc
or
int3
je
pop
mov
push
jmp
test
xor
xor
lea
pusha
sti
xchg
popf
sub
in
cmp
lcall
jb
scas
sbb
xchg
or
sub
sbb
xchg
cmpsb
sbb
mov
es
lcall
ljmp
out
xor
sbb
jo
psubq
into
pop
shrb
adcl
push
xlat
movsb
adcb
cmpl
mov
inc
movsb
push
les
enter
cmovle
lea
mov
in
mov
add
shlb
xor
clc
xor
mov
cmp
cmp
pop
out
aaa
pushf
mov
xor
in
shll
sbb
mov
cld
loopne
dec
push
jb
loop
pop
cmp
cmc
sarl
imul
push
daa
addr16
fcmovbe
call
fwait
imul
cli
testl
xlat
test
jmp
xchg
js
mov
jbe
out
add
mov
testb
jbe
mov
sbbb
pop
js
pop
adc
pop
or
imul
or
mov
cmp
ljmp
movsb
sahf
call
je
and
add
dec
mov
in
addr16
loope
add
push
xchg
cmp
sbb
pushf
fists
jle
jge
subb
lcall
addb
enter
inc
inc
test
js
cmp
inc
sub
psadbw
add
aad
jg
dec
jmp
pusha
pop
lahf
dec
push
adc
xor
mov
mov
pop
adc
dec
jecxz
negl
cld
lret
int
push
adc
adc
mov
dec
and
pop
cmp
sahf
shll
fnstcw
cmp
fadds
dec
cmp
adc
inc
mov
scas
in
testl
and
xor
cmp
mov
cmp
loopne
test
xchg
and
cltd
mov
and
xchg
popa
aam
fxch
out
pop
bound
jp
scas
xchg
fnstcw
test
dec
mov
sahf
xchg
add
mov
jnp
repz
out
or
mov
and
mov
dec
jnp
fstpt
ret
jne
adc
out
jl
jbe
ret
push
pop
andb
cmpsl
sbb
roll
sbb
loope
xchg
sub
add
push
inc
mov
mov
lcall
js
out
push
in
insb
sbb
mov
xor
inc
mov
mov
andb
pop
jmp
xchg
jne
jmp
fmull
cld
rclb
icebp
fdivp
ljmp
mov
sub
ljmp
out
xor
and
pop
mov
incl
cmp
push
orb
xor
and
test
push
cld
push
jge
mov
stos
xchg
sti
jmp
fldcw
sbb
popf
and
or
push
adc
or
mov
ljmp
mov
dec
enter
push
pop
int3
inc
inc
cltd
adc
js
inc
mov
addr16
adc
cmp
fimuls
jecxz
cmp
mov
inc
test
subl
cmpsb
ret
icebp
repz
xchg
mov
jns
vpmovsxwq
xchg
inc
cmp
adc
out
push
stc
xor
outsb
aaa
jns
sahf
dec
je
ja
incl
push
movsl
cmp
out
mov
divw
adc
inc
xor
mov
outsl
xor
push
adc
pop
sub
jae
pop
mov
ret
test
sbb
add
pushf
jns
rol
ljmp
add
fiadds
inc
into
xchg
mov
pop
data16
inc
call
xchg
mov
inc
pop
pusha
pop
fucompp
inc
imul
stc
aas
out
sub
imull
aas
dec
and
add
sbb
rolb
pop
adc
cmp
pop
push
inc
xchg
mov
sub
sub
push
int
mov
dec
xchg
fwait
lret
inc
test
sub
lret
mov
jp
ss
adc
mov
or
dec
dec
shrl
insb
in
add
test
xchg
push
lcall
loopne
fldcw
iret
mov
cli
cwtl
arpl
add
xlat
xchg
outsl
pop
dec
mov
jmp
and
scas
insb
adc
mov
clc
mov
dec
mov
pop
dec
ljmp
inc
inc
in
stos
add
out
inc
das
daa
scas
jp
cmp
adc
sbb
decb
and
sbbb
repnz
sub
xchg
mov
cli
jo
mov
insb
jge
sbb
pop
fadd
outsl
aaa
or
movsl
movsb
mov
outsl
inc
aad
lcall
inc
jnp
shrb
lock
mov
cmp
inc
outsl
insb
push
jbe
sub
push
iret
lods
adc
leave
cmpsb
xor
out
cmp
ret
cmp
ret
inc
aaa
mov
pop
xor
mov
mov
addb
mov
inc
lcall
fcom
ds
pop
pop
cmp
and
dec
mov
cmp
push
fwait
cmp
mov
lock
add
rclb
mov
mov
pop
sbb
gs
test
adc
pop
imul
enter
or
mov
fcmovu
inc
and
call
cmpsb
mov
xor
int
sti
mov
xchg
test
sbb
pop
jae
sub
test
cli
lea
xorb
lea
lds
scas
jp
dec
divb
jae
insl
cli
mov
outsl
push
jo
lods
inc
cmp
pop
out
dec
xchg
test
cmp
inc
add
mov
test
fcmove
dec
test
daa
loop
push
and
push
das
sahf
stos
mov
add
popa
call
pop
inc
mov
lcall
lahf
adc
mov
cmc
add
pop
in
ror
add
add
add
test
mov
jmp
xor
sbb
addr16
bound
pusha
push
mov
lahf
adc
jo
mov
sahf
xor
adc
sub
cmp
cmp
and
cld
fmull
shlb
mov
es
loopne
add
mov
adc
gs
jne
xlat
in
mov
out
dec
cmp
mov
mov
cmp
fsubrs
ret
xchg
mov
fbstp
lock
in
mov
mov
mov
sbb
push
or
xchg
lret
js
filds
mov
mov
in
cwtl
mov
pop
xchg
nop
psubw
popf
imul
xchg
aam
out
sbb
sub
jg
dec
cmp
rcl
sub
loope
mov
in
xchg
sub
push
adc
jbe
push
xlat
pop
mov
add
add
test
popa
adcb
xor
add
xor
jmp
push
jne
mov
icebp
fistps
test
mov
push
add
subl
jle
jmp
pop
cmp
adc
jb
imul
pop
inc
cmpsb
inc
ljmp
xchg
or
inc
xlat
sti
dec
cwtl
lock
pop
jg
aam
pop
xchg
jl
repz
dec
pusha
out
mov
clc
mov
mov
imul
add
fldpi
cwtl
cmp
scas
loopne
mov
pop
test
test
adc
jns
loop
xchg
repz
inc
andl
test
inc
xor
xchg
sub
sarb
push
mov
clc
aad
adc
mov
jle
cwtl
mov
rclb
icebp
xchg
jmp
push
push
cld
mov
repnz
jnp
jecxz
cmp
sub
mov
xchg
es
fisttpl
or
and
inc
xchg
cmp
out
xchg
fsubs
inc
cld
insb
into
sbb
xchg
adc
push
jnp
fistpl
cmpsl
xor
cli
mov
repz
ds
dec
inc
rorl
or
pop
in
sarl
jl
sub
popf
sbb
mov
add
addr16
mov
js
mov
mov
add
add
jnp
push
test
jle
jae
pushf
aad
pusha
scas
movsb
loope
sbb
mov
add
push
int3
enter
aad
shll
ds
cmp
cli
cmpsl
lods
addr16
cmp
cmp
hlt
xor
inc
movb
icebp
xor
push
in
ret
in
add
add
push
fs
or
cmpsb
sub
stos
mov
ret
and
and
repz
out
add
mov
fadd
pop
and
in
icebp
ljmp
adc
mov
int3
cs
sbb
jns
mov
cmc
mov
outsl
leave
dec
mov
js
dec
xchg
sub
sar
pop
and
mov
fmull
inc
out
xor
insb
pop
in
dec
jne
add
and
or
clc
dec
mov
les
push
jns
repnz
mov
xchg
mov
mov
in
push
jp
jae
fsubs
enter
out
in
inc
repnz
mov
jnp
mov
gs
rolb
add
push
add
fisubl
push
xchg
sbb
stos
xor
loope
mov
pop
out
lret
mov
cmp
cld
dec
fucomp
cmp
repz
cmp
dec
ret
xor
mov
orb
pop
mov
loopne
push
push
shrb
pop
mov
mov
enter
rol
in
repnz
fsts
dec
dec
stos
lret
js
xchg
xchg
test
cltd
adc
ss
or
into
xchg
adc
sub
mov
dec
and
pop
sbb
add
sbb
cmpb
adc
adc
xor
xor
cltd
and
sub
idiv
jmp
movsb
mov
sbb
dec
test
lahf
stos
es
and
stc
in
adc
sbb
inc
sbb
jae
mov
mov
pop
fwait
stos
loope
adcl
mov
repnz
mov
imul
pushl
rcrl
rcl
popa
shlb
adc
dec
in
fs
cmpsb
mov
cmpsl
into
jp
inc
in
mov
outsl
dec
movsb
xor
cmpsb
inc
or
lcall
mov
add
out
arpl
mov
aad
lods
lahf
inc
ljmp
dec
mov
mov
aad
cli
jecxz
adcl
mov
pop
jecxz
mov
mov
call
jg
pop
ljmp
insb
fsts
mov
cld
xchg
insl
dec
mov
pop
lahf
adc
fmul
insl
sub
lret
arpl
dec
push
and
mov
test
pusha
fstl
out
add
xchg
fs
cmc
jns
jb
jle
gs
inc
cltd
aad
imul
out
loop
mov
or
notl
xor
cmp
xchg
ljmp
outsb
mov
mov
mov
push
lea
dec
ja
mov
xor
mov
xchg
inc
pusha
hlt
popa
or
jg
sti
cmp
push
jnp
in
leave
insb
sub
test
mov
ljmp
pop
lret
and
adc
cmp
push
sarl
xlat
idiv
mov
ss
std
das
inc
sbb
and
aas
xlat
cmp
lods
push
adc
adc
out
rorl
push
xor
xor
lret
pushf
loop
mov
mov
sbb
sarb
dec
pop
movsl
push
ja
rcl
ss
adc
mov
aas
roll
jnp
cwtl
jbe
adc
into
or
pop
mov
lret
test
bound
jbe
xchg
mov
movsl
mov
pop
cli
pusha
mov
push
lcall
or
nop
stc
xchg
pop
and
scas
sub
push
mov
xchg
in
lods
lods
sub
in
sbb
inc
sbb
icebp
sbb
pop
mov
adc
xchg
pop
push
push
cli
sub
cld
out
inc
cmp
rorb
jp
adc
xor
sbb
mov
mov
pop
and
mov
rcr
mov
jo
aaa
arpl
test
hlt
jno
ret
jb
test
mov
adcb
mov
and
or
sbb
cmpsb
inc
pop
popa
daa
mov
orb
and
push
cmp
sub
push
cld
imul
leave
mov
push
lds
mov
pop
mov
daa
loop
mul
in
mov
fstpt
pop
pop
sub
xor
add
or
add
pop
pop
into
sbb
add
xchg
lods
xchg
fimuls
ljmp
lock
int3
pop
sarl
xorl
mov
out
pop
mov
push
jecxz
pop
mov
mov
jno
fimull
sahf
fwait
mov
push
aaa
jbe
inc
scas
out
sbb
cmc
cmpsb
ljmp
rclb
cmp
cmpb
repz
xchg
and
mov
stc
sub
out
push
xchg
movsl
mov
lea
sub
aam
hlt
sbb
xchg
mov
scas
and
mov
arpl
xor
pmullw
mov
iret
nop
rcrb
stc
xor
jno
mov
negb
cmpsl
push
imul
in
arpl
xchg
sahf
xchg
sbb
mulb
mov
loopne
mov
mov
sbb
hlt
jbe
add
lods
xchg
mov
and
xor
xorl
dec
aas
mov
popa
lea
xchg
loop
inc
call
lods
inc
insl
sarl
aad
mov
dec
test
and
pop
mov
cmp
add
jns
add
jmp
pop
jecxz
negl
lods
jns
mov
jmp
dec
cmpl
mov
vmovd
test
or
lods
scas
or
mov
sbb
sahf
sti
and
jmp
sti
push
fimuls
fcom
in
andb
push
add
cmc
imul
enter
pop
cmp
out
pop
dec
test
or
enter
movsl
push
push
addr16
xor
aad
sub
in
enter
clc
rorb
in
mov
in
enter
insl
add
out
insb
sbb
imul
pusha
leave
mov
in
xor
jge
add
jg
enter
inc
out
cli
dec
ljmp
test
xor
inc
jae
fadd
dec
clc
pop
inc
in
nop
fstps
mov
mov
sub
inc
lods
push
loope
dec
or
leave
pop
int3
repnz
add
push
inc
mov
bound
adc
mov
insl
pushf
xor
shl
in
popf
loop
idivl
pop
ret
scas
mov
mov
push
pop
jb
cmp
cmp
cmc
adc
lock
movsl
dec
or
in
stos
fistpll
rorb
gs
leave
push
cli
cmpl
and
jmp
mov
aaa
mov
test
sti
push
sarl
pop
push
out
mov
xchg
scas
in
xchg
mov
mov
inc
push
in
ret
xor
inc
ret
das
dec
xchg
sub
and
dec
mov
mov
push
loop
imul
inc
jmp
in
cwtl
lods
pop
or
xchg
sbbb
push
xor
std
rclb
andb
clc
mov
loop
mov
mov
adcb
sub
jno
pop
push
pop
int3
dec
in
xor
in
out
fdivrl
into
fidivrl
fmulp
xchg
out
test
xor
aad
data16
dec
repz
in
je
into
aaa
movsb
mov
pushf
jl
pusha
pop
adc
xchg
sahf
sbb
mov
dec
mov
add
in
leave
das
insl
mov
je
icebp
pop
cmpsb
loope
cmp
cld
or
mov
clc
pusha
cld
adc
imul
jecxz
repnz
es
push
in
mov
sub
dec
push
divb
inc
jbe
in
daa
inc
arpl
adc
inc
bound
xor
cmp
aam
lock
pop
test
xor
add
mov
mov
xor
jmp
xchg
jb
in
inc
fldenv
jb
out
outsl
add
out
push
cmp
ficompl
loope
cmp
movsl
pop
mov
xchg
dec
xor
pop
mov
dec
sbb
adc
movsl
imul
cmp
dec
jmp
xchg
dec
adc
pop
mov
mov
gs
push
or
repz
cmp
repnz
mov
mov
dec
arpl
lds
fbstp
xor
ret
xchg
les
jbe
rclb
stos
test
lahf
inc
mov
adc
cmp
lcall
push
and
pop
push
xor
jmp
push
lock
mov
into
mov
movsl
pusha
ljmp
mov
movsl
sub
in
cmp
jg
adc
mov
xchg
xchg
rcll
les
lret
dec
push
fcoms
mov
push
popl
shr
rorl
mov
movsb
and
xchg
dec
fildll
pop
or
xchg
aam
dec
jns
cmpsl
mov
fwait
sub
ret
sub
xchg
dec
cwtl
outsb
lods
ret
fldl
jmp
push
push
loop
lret
jnp
jns
rclb
lcall
dec
call
add
sahf
sbb
cmpsb
xor
cld
cmpsl
test
fs
into
push
in
mov
sahf
add
push
pop
je
and
push
pop
mov
insl
inc
xchg
inc
nop
mov
or
movsb
int
pop
lahf
scas
xchg
add
sub
data16
push
mov
mov
scas
and
imul
mov
int3
xor
mov
out
les
iret
into
cltd
jae
sub
popa
lret
pop
mov
shll
xor
clc
or
jg
leave
cld
xchg
ficoms
pop
mov
test
divb
cli
adc
leave
dec
dec
cmp
call
mov
cmp
add
pop
in
jb
mov
iret
adc
scas
mov
sub
movsb
es
out
leave
loope
out
leave
cmp
push
iret
adc
push
data16
and
xchg
jle
into
cld
push
rolb
shl
sub
lods
lods
and
xor
and
shrl
jo
and
pop
adc
shll
cmpl
push
cmp
push
roll
push
cmpsl
xchg
cmp
inc
lods
lods
std
add
aaa
jp
push
xor
out
push
nop
out
or
je
xchg
fadds
adc
iret
cmp
add
out
scas
fnsave
iret
ja
mov
mov
push
sti
mov
push
mov
ja,pt
mov
mov
adc
push
scas
push
and
cltd
or
sti
sbb
add
mov
and
push
or
out
outsl
mov
dec
int3
cmp
jne
ja
push
mov
es
stos
aad
jb
sub
sti
ss
lret
adc
jns
orl
xchg
jnp
lcall
mov
add
mov
jl
inc
mov
notl
fidivrl
mov
jbe
pusha
pop
pop
ret
js
call
jbe
jno
jae
movsl
ss
or
pop
or
aaa
imul
lock
and
mull
push
push
gs
mov
sub
xor
mov
pop
leave
push
pop
mov
xchg
fdiv
rol
fdivr
mov
shlb
in
leave
push
lcall
pop
rorb
dec
call
xor
lret
lea
xor
dec
sub
xchg
push
jns
inc
mov
jg
std
addl
stc
lods
faddl
int
cmpsb
inc
sahf
jle
fisttps
movsl
fiaddl
jo
cmp
push
xchg
stc
jo
jne
add
dec
lea
xor
mov
and
mov
mov
addr16
push
cld
xor
xchg
clc
xor
mov
mov
push
pop
in
sbb
add
lea
and
cmp
mov
call
dec
sahf
cmp
es
push
out
daa
fcmovne
fnsave
lret
sbb
in
mov
in
push
lea
jbe
jmp
and
mov
out
sbb
imul
das
es
sbb
fadd
ss
lods
mov
daa
sahf
test
xlat
rcll
dec
jmp
popf
push
or
stos
ljmp
test
subl
lea
icebp
pmaxsw
dec
loope
or
add
lret
dec
insb
out
xlat
push
lahf
rdpmc
jecxz
mov
inc
jle
mov
ss
or
std
pop
sbb
push
mov
ja
roll
dec
outsb
cld
mov
jg
fsubl
pop
lock
sub
jmp
loopne
cld
sbb
mov
das
push
cmp
call
scas
xor
sub
movsb
lret
fisubrl
mov
jnp
ds
sbb
mov
std
add
cmpsb
std
mov
jo
fs
add
imull
fidivrs
popa
mov
jae
lret
cld
outsb
add
pushf
ljmp
mov
xchg
cmpl
jns
dec
pop
adc
pop
cmpsb
inc
pusha
adc
rolb
into
cmp
mov
jno
fnstcw
fnstcw
loope
sbb
aam
push
xchg
dec
mov
ss
adc
mov
inc
insl
jmp
add
inc
daa
mov
cmp
cmp
adc
outsb
adc
or
cmpsl
outsl
hlt
xchg
cmpsb
push
push
jns
aaa
jbe
std
inc
add
gs
mov
mov
jns
inc
jp
loope
pop
inc
movsl
dec
incb
sub
out
ljmp
mov
lcall
push
xchg
in
mov
xor
dec
mov
mov
jg
inc
dec
lea
pop
cld
stc
add
inc
mov
loopne
ss
cmp
daa
loop
dec
pop
addr16
sub
push
or
sub
cmp
aad
xchg
mov
cs
out
movsb
jecxz
scas
cwtl
dec
test
jle
or
jnp
dec
sub
inc
inc
lahf
js
scas
sbb
aam
adc
fdivrl
push
and
addr16
xlat
out
mov
imul
nop
loopne
xchg
mov
test
jnp
inc
sub
dec
pop
lahf
jle
fmuls
sbb
xor
fcmovu
pop
or
push
cltd
scas
adc
push
movsl
in
lea
push
pop
xchg
sbb
jae
lahf
sbb
aas
pop
mov
scas
fmull
sbb
stos
add
xor
adcb
test
aam
push
sbb
repz
out
pop
scas
inc
out
lock
test
daa
pop
push
jecxz
cmc
ds
jb
das
jno
and
sub
cwtl
adc
push
sub
push
and
repnz
mov
repz
and
out
push
in
sarl
mov
movsb
mov
jmp
scas
movsb
in
data16
loop
out
mov
dec
ja
mov
sti
std
cmp
ljmp
dec
or
mov
movsb
rcr
rcrb
push
icebp
call
out
mov
mov
aaa
dec
xor
loop
dec
stc
sbb
lcall
stc
lret
xchg
xchg
loop
mov
cmp
jp
loop
orl
lods
or
sbb
push
bound
mov
xchg
shl
xchg
pop
cld
lock
pop
subb
pop
in
push
outsl
adc
dec
jl
xor
pop
enter
cltd
in
test
fimuls
push
pusha
push
push
je
dec
jecxz
mov
popa
js
inc
mov
mov
inc
mov
movsl
pop
add
cmp
fcoms
xlat
inc
sub
jns
adc
or
sbb
stc
sub
mov
adcb
dec
xor
outsl
jns
pop
notl
lds
addl
sub
cwtl
test
test
pop
inc
faddl
or
dec
mov
jecxz
sbb
stc
sbb
daa
ja
mov
filds
rorl
jno
adc
icebp
dec
xor
and
sahf
cltd
test
add
cs
sbbb
stos
dec
cmp
jp
loop
and
test
fldt
xchg
in
inc
fs
leave
jmp
inc
popf
xchg
pop
orb
shll
cmp
les
aad
jg
inc
mov
sbb
lret
pop
sahf
es
xor
sti
je
jmp
ja
push
jo
addl
pop
sahf
pop
ja
fnclex
call
test
fsts
jecxz
insb
xor
lret
cwtl
pop
in
xchg
xchg
xor
and
or
lock
in
in
in
jb
xchg
test
and
xchg
cmpsl
int
sti
mov
iret
movsl
sub
dec
jnp
movsl
and
and
cmp
or
dec
push
push
je
xor
cwtl
in
fdivrs
jmp
sti
or
dec
mov
adc
int3
popf
and
mov
sub
subl
out
fidivl
mov
int
add
loopne
jecxz
xchg
icebp
arpl
fstl
popa
xorb
arpl
inc
cmc
push
jo
jne
sahf
adc
push
out
test
mov
into
and
adc
mov
mov
mov
push
out
movl
mov
lea
mov
dec
ficoms
dec
adc
clc
fldcw
into
enter
mov
imull
push
lret
mov
hlt
pop
xchg
dec
xor
or
sbb
xor
add
push
push
inc
mov
es
sbb
sahf
test
fnstcw
lods
in
mov
inc
cltd
push
jecxz
sarb
pop
inc
mov
out
sahf
or
in
in
jmp
jbe
in
pop
xchg
cmp
je
sahf
push
and
and
mov
outsb
mov
mov
sbb
arpl
movsl
call
loopne
scas
loop
or
cwtl
imul
or
pop
dec
lea
cmpsl
xchg
push
pusha
or
adc
jnp
scas
pusha
lods
add
pop
shrb
sbb
cmp
or
mov
scas
or
aaa
rcl
mov
jmp
outsl
push
ss
into
sub
insl
jb
ja
repz
pop
scas
push
lcall
mov
std
sbb
pop
jne
fstl
mov
loop
add
fwait
jb
cmpsb
test
cltd
push
movsl
xchg
movsl
xor
mov
cmp
dec
js
aad
mov
push
enter
jb
mov
xor
sub
add
out
mov
ljmp
and
imul
fdiv
imul
jbe
negb
inc
hlt
mov
xchg
adc
pop
jp
pop
mov
inc
xor
fsubrp
pop
jno,pt
pop
or
fwait
ss
push
ss
mov
add
mov
fcoms
adc
popf
push
mov
push
scas
mov
mov
shlb
imul
jo
jmp
inc
into
add
adc
inc
push
jae,pt
mov
and
fldcw
jnp
lahf
sbb
jno
push
add
pop
icebp
xchg
add
sbb
push
es
lahf
in
scas
sub
data16
jnp
addr16
les
stos
cmc
inc
test
movsl
pop
mull
aam
jl
pop
jmp
gs
in
or
inc
and
push
mov
xlat
adc
outsl
add
cmpsb
test
scas
mov
push
inc
lods
or
inc
push
xchg
push
sbb
dec
enter
int3
sub
xchg
and
cmp
cmp
sbb
divl
mov
test
lahf
jb
das
hlt
ss
adc
mov
stos
cmp
cmove
inc
push
dec
jle
data16
stc
stos
pop
sti
es
lock
mov
jne
pop
cltd
lea
cmp
sub
imul
data16
rorl
popf
inc
dec
cs
dec
test
push
cmp
or
movsl
xor
gs
sti
cli
imull
mov
xor
mov
xchg
aam
fnsave
push
lahf
push
dec
adc
icebp
enter
pop
xor
jmp
jg
adc
cmp
je
fisubrs
mov
or
jmp
xchg
mov
add
or
loopne
or
arpl
pop
out
mov
imul
xor
jbe
and
das
test
xchg
loope
mov
hlt
test
rcrl
imul
add
cmp
add
mov
outsb
adc
pop
cmpsl
sub
dec
cmp
loopne
xorl
xor
and
imul
cmp
jnp
pop
jae
dec
and
pop
inc
shlb
adc
pop
nop
arpl
adc
xchg
std
inc
and
idivl
mov
pop
into
stos
cmpl
or
out
dec
aas
arpl
movsb
cmc
mov
outsl
xchg
bound
cmpsb
mov
sar
pop
test
or
ljmp
mov
cmp
push
mov
xchg
cmp
in
push
jecxz
vmovdqa
jns
std
cmp
adc
mov
idiv
cld
push
ljmp
and
stos
mov
mov
nop
cmp
leave
inc
pop
fdivrl
imul
data16
in
xchg
aas
cmc
inc
ret
out
out
stos
jno
mov
rolb
adc
fildll
sbb
int
sbb
push
xchg
sub
repz
dec
out
or
test
and
outsl
or
subl
bound
jp
mov
xchg
icebp
adc
out
hlt
mov
add
inc
or
jbe
addb
and
imul
mov
sub
aad
ljmp
loopne
dec
xchg
push
cmp
stos
mov
lahf
in
pop
imul
push
hlt
testb
jnp,pt
pop
out
movsl
jno
out
push
xchg
xor
adc
push
in
push
inc
jae
out
test
aas
sub
pop
xor
mov
repnz
fucom
repnz
test
in
fsubrs
add
cmp
dec
inc
push
ret
push
lret
push
cmp
push
inc
frndint
mov
cmpsl
adc
xchg
pusha
or
push
adc
shlb
loop
std
aad
in
fisttps
mov
inc
sbb
mov
inc
mov
pusha
dec
add
ja
sarl
out
xchg
jb
mov
mov
add
sbb
xor
dec
xchg
outsb
dec
dec
sti
xor
mov
and
xlat
sbb
pop
insb
lds
jle
mov
xchg
cmp
jl
rorb
jne
lahf
pop
push
nop
cmp
in
xchg
xchg
mov
cmp
out
inc
jg
sbb
dec
pushf
inc
cmc
hlt
jbe
push
push
outsl
lock
ljmp
cmp
pop
mov
imul
jle
enter
and
dec
inc
pop
push
lahf
andb
adc
enter
fwait
jecxz
rorb
dec
jge
aam
inc
ljmp
rcl
jo
xor
jp
jne
testb
sub
jecxz
xor
or
test
cmpsb
dec
fwait
pop
mov
dec
or
xchg
addr16
mov
and
lds
mov
loop
xchg
mov
mov
add
jl
jle
sub
imul
pop
push
and
mov
inc
and
gs
sbb
dec
je
mov
inc
inc
xchg
jg
push
jg
xor
mov
push
jno
pop
stc
aam
aaa
cmpsl
sbbb
addr16
stos
iret
push
rorl
adc
push
dec
and
scas
sti
inc
ret
stc
jbe
cmp
jnp
jg
push
push
pop
outsb
cli
sub
mov
adc
fisttpl
adc
movsb
orl
lcall
lods
push
es
xchg
fcmovnb
push
dec
adc
sub
data16
and
fwait
mov
xchg
inc
xor
or
out
arpl
movsl
rolb
mov
jl
icebp
lret
es
shlb
cmpl
mov
fwait
inc
sub
mov
shll
and
or
cltd
stos
push
loop
cmpb
adc
cld
jp
fstpt
mov
jg
ret
sub
pop
dec
into
xor
loope
adc
inc
out
inc
dec
or
xor
pop
mov
xchg
stos
mov
cs
xchg
cmpsb
jo
add
cwtl
add
sub
mov
jns
dec
jbe
out
filds
jae
pop
jne
mov
pop
xchg
jl
jp
cmc
xchg
icebp
or
dec
ja
fisubs
daa
loopne
lahf
rorl
jae
pushf
xchg
fcompl
fiaddl
sti
pop
mov
mov
xchg
xor
pop
xchg
jo
es
jb
test
jb
cmp
insb
test
enter
sub
imul
stc
xor
popa
add
jp,pn
sbb
dec
shll
outsl
dec
out
push
imull
andl
dec
adc
clc
or
dec
sbb
das
push
jge
jmp
sbb
gs
inc
add
mov
les
xchg
das
imul
mov
in
loope
outsb
adc
jmp
sti
xchg
popa
add
push
lock
cmpsl
aas
ss
inc
int3
dec
loope
or
lock
and
ret
je
ret
or
ret
call
mov
pop
lock
mov
xor
xchg
cmp
lret
sub
shll
lahf
xlat
and
push
xchg
pop
mov
call
xchg
mov
mov
pop
xor
or
dec
inc
inc
sbb
cltd
int
sahf
add
popa
fcompl
popf
cmpsl
cmp
cmpsb
mov
sub
js
fildll
sub
push
into
imul
and
cmp
lcall
rorl
adc
pop
mov
xchg
jp
int3
outsb
push
jmp
jbe
sarb
mov
sar
mov
into
xchg
mov
xchg
mov
cld
dec
jae
mov
lock
into
outsb
sub
cmp
mov
lods
subl
mov
mov
mov
lea
sti
sub
lods
dec
mov
nop
movsb
inc
inc
or
imul
xchg
pusha
iret
xchg
loope
pop
ja
lea
fchs
iret
push
clc
xor
xor
lods
mov
push
or
shrb
cmpsl
mov
dec
xchg
es
sbb
popl
cltd
jo
push
and
ss
jmp
aam
mov
dec
adc
js
push
xchg
jo
mov
xor
pop
dec
and
movsb
dec
lock
push
or
mov
add
cmp
mov
repz
stos
repz
icebp
aam
fbstp
xchg
ret
orb
adc
loope
cli
cwtl
xchg
in
mov
push
lret
enter
cmp
dec
push
das
xchg
and
lret
imul
test
inc
xor
loopne
cltd
out
jns
and
add
mov
or
call
xchg
mov
push
lock
push
push
mov
call
fsubs
push
stc
inc
pop
inc
shll
xchg
int3
mov
mov
or
mov
inc
xor
mov
stc
push
sbb
outsb
jae
push
mov
dec
jae
mov
pop
cs
cmp
inc
ljmp
test
adc
arpl
in
xorl
ljmp
mov
int
add
pusha
xchg
aaa
ja
sub
mov
xor
dec
out
mov
dec
adc
mov
daa
into
mov
data16
stos
pop
in
std
insb
shl
and
inc
mov
xchg
adc
xchg
pushf
outsl
sahf
lret
pop
lock
cmp
jp
mov
cmp
sub
popa
jnp
cmp
pop
loope
push
xor
std
push
cmp
icebp
mov
sbb
pop
mov
pusha
lods
std
xor
ja
mov
jnp
sti
cmpsb
ficoms
jno
xor
xor
pop
mov
fwait
cmpsl
std
push
pop
je
cmp
sbb
mov
add
xorb
adc
ja
mov
pusha
roll
and
dec
push
mov
sub
daa
cmp
aaa
imull
xchg
test
cmp
pop
out
loope
mov
fiadds
fsubl
push
fstpl
icebp
les
mov
shr
lret
es
add
stos
gs
jbe
and
mov
ret
and
in
or
sub
cs
enter
test
aad
dec
or
in
fwait
stos
outsb
ds
lret
sub
jg
and
xor
xchg
daa
sbb
inc
fdivrl
cmc
xchg
stos
clc
imul
dec
je
adc
jns
add
idivb
cli
scas
mov
mov
stos
leave
cmp
xchg
push
out
loopw
paddusb
outsl
push
dec
js
cmpsl
pop
inc
mov
nop
sbb
ss
lret
sub
add
jmp
pushf
shll
pop
and
xchg
cltd
dec
sbb
xchg
dec
xor
mov
sbb
xor
lret
mov
xchg
out
adc
add
inc
mov
sub
and
cmp
int
mov
outsl
dec
or
lret
pop
cmp
lds
push
dec
mov
scas
repz
addb
xor
bound
movsl
pop
sbb
es
sbb
stos
movsb
lods
add
sub
adc
hlt
fdivrs
push
je
cmc
and
dec
or
lds
outsl
inc
and
cmc
xor
dec
push
dec
mov
jp
inc
and
sub
fdivs
xchg
data16
testb
leave
jmp
inc
mov
loope
insl
sahf
mov
or
std
popa
and
sbb
bound
pop
rorl
insl
cwtl
pop
outsb
cmpsl
std
inc
jae
add
jnp
inc
pop
xchg
arpl
je
push
xchg
inc
imul
ss
xor
mov
and
pop
mov
lret
sbb
mov
ja
jge
outsl
jge
mov
adc
sub
rcl
pop
shll
mov
pusha
cmp
sbb
data16
jnp
xchg
push
mov
sub
or
icebp
out
mov
xorl
or
ret
stos
xor
mov
sub
fiaddl
xor
xchg
in
aad
cs
movsb
cmpl
lods
addr16
fstpl
adc
add
jne
ret
mov
sbb
faddl
inc
sbb
aam
push
xor
adc
xchg
ret
fsubr
sbb
fsubs
lock
js
push
das
cmpsb
sahf
fwait
pop
in
popf
notb
js
push
lahf
dec
lcall
out
cltd
cs
sub
push
inc
dec
push
ljmp
out
pop
pop
incl
lods
or
sbb
jge
adc
lock
loopne
inc
mov
out
cli
mov
add
sub
lds
add
mov
mov
push
xchg
pop
xor
xchg
mov
loope
cmp
inc
pusha
add
js
test
jmp
insb
les
loop
inc
jne
inc
jle
notl
out
jge
les
lret
mov
fcmove
xor
xchg
fsubp
clc
pop
xchg
cvtps2pi
xchg
pushf
jecxz
push
add
cli
pop
cmp
das
sub
cmp
pop
fcmovnu
and
push
cmpsl
adc
sub
pop
inc
push
adcl
icebp
inc
ss
aam
js
xchg
mulb
sbb
push
fsubl
cwtl
mov
fldt
mov
mov
push
mov
enter
in
push
push
mov
pop
inc
jno
mov
sbb
fisubl
and
pusha
mov
js
enter
call
aam
fstps
adc
fmull
in
xchg
repnz
push
cmpsb
mov
fildl
adc
xchg
xor
scas
push
xchg
les
mov
pop
mov
and
push
xchg
jp
add
add
jno
push
jg
js
stos
lahf
insb
pop
daa
arpl
adc
scas
imul
xchg
adc
jmp
test
imul
test
or
adc
rclb
movsb
xchg
jns
scas
iret
or
inc
cwtl
jl
mov
in
or
pop
fs
movsl
fsubs
les
or
test
int
lret
das
rcrl
jmp
pop
sbb
cmp
mov
lea
in
lods
cmpsb
and
imul
into
nop
out
inc
xchg
inc
mov
andl
mov
lods
out
mov
mov
out
rcrb
cmp
xchg
jp
outsb
or
add
inc
in
lcall
sub
xchg
fsubs
jl
lea
loope
pop
xchg
in
or
pop
inc
andb
movsl
xor
push
mov
dec
jb
dec
dec
push
loopne
cld
ret
ficompl
jg
outsl
jge
inc
add
cli
hlt
cmpsl
addr16
cmc
dec
pop
orl
rclb
cmp
push
je
movsl
push
in
cmp
sub
pushf
mov
lods
mov
pushf
jp
std
pop
scas
inc
movq
negl
aad
or
push
mov
loop
gs
icebp
push
xchg
sbb
mov
jge
test
daa
daa
sub
mov
call
pushf
mov
jge
or
icebp
pop
test
push
repz
xchg
sbb
mov
adc
out
jmp
ljmp
aad
out
sub
inc
xlat
push
bound
call
leave
sbb
scas
cltd
stos
nop
xchg
das
mov
lock
shl
movntps
dec
data16
test
adc
inc
mov
ret
jg
inc
lret
jl
out
cmp
out
mov
or
mov
popa
inc
push
sahf
push
or
sbb
adc
jo
pop
or
mov
jle
addr16
jb
out
rclb
fnstenv
clc
pop
jg
adc
jg
jns
pushf
lahf
icebp
lret
idiv
adc
push
ljmp
imul
jo
or
scas
out
mov
bound
movsl
sbb
inc
mov
aaa
jo
push
push
xchg
shll
lret
ljmp
bound
imul
aam
or
add
js
push
in
mov
std
pop
inc
adc
jp
leave
mov
sbb
rcl
or
fnstsw
add
dec
stos
cltd
out
gs
icebp
ffreep
sub
inc
nop
loopne
nop
cmpsb
jns
push
pushf
pop
dec
mov
orb
leave
push
mov
or
div
je
pushf
pop
inc
movsl
loop
je
adc
push
push
sub
in
dec
pushf
decb
loop
mov
fadd
mov
in
xor
sbb
pop
sbb
loope
xorb
inc
movsl
sub
les
cmp
mov
push
xchg
cmp
sti
and
enter
push
fildl
test
mov
sti
sbb
lret
xchg
inc
fbstp
cli
fs
sub
adc
pop
mov
sub
jno
pop
pop
pop
aaa
ds
jle
xchg
push
mov
add
fstps
or
cld
mov
dec
rolb
cmp
cs
fnstcw
sbb
gs
repz
test
in
mov
clc
push
sbb
mov
mov
and
dec
jbe
add
mov
dec
dec
inc
imul
cli
rcll
cmp
iret
into
dec
test
lods
push
mov
ljmp
loop
mov
fiaddl
or
jmp
pop
out
add
scas
push
jns
mov
push
pop
jae
std
or
fsts
aam
jnp
repz
xchg
sub
and
sti
inc
stc
fiadds
mov
inc
dec
xor
rol
jnp
add
dec
dec
xchg
rcr
ds
or
insb
aad
push
sub
and
push
or
pop
rorb
or
sub
xor
mov
xor
lcall
inc
jmp
out
mov
pop
mov
jmp
pop
mov
sbb
iret
fildl
test
dec
leave
popa
pop
nop/reserved
inc
xor
sbb
inc
fwait
dec
stos
mov
je
and
test
dec
out
pop
lods
dec
aas
xchg
pop
insl
fcmovne
std
sbb
out
inc
mov
add
test
fwait
stos
stos
decb
jle
daa
dec
int3
andl
or
fcmove
lds
outsb
shlb
cmp
pop
in
xchg
jge,pt
sub
shrl
jnp
mov
jbe
mov
cltd
add
iret
mov
cmpsl
in
push
cltd
jns
pusha
sbb
mov
pop
in
int3
pop
dec
aam
jnp
sub
lea
xchg
test
sbb
ret
inc
mov
inc
and
inc
mov
or
pop
sub
add
pop
xchg
adc
mov
out
inc
xor
dec
shlb
xor
adc
mov
repnz
xchg
pop
and
iret
xchg
in
lahf
subl
jb
les
cwtl
pop
mov
jl
ss
push
enter
adc
in
xchg
mov
sbb
inc
adcb
mov
les
pop
insb
shlb
add
adc
push
aas
fstpl
xchg
call
lods
xchg
push
cmp
xor
mov
push
sti
test
mov
rcrb
leave
rcrl
push
insb
pop
fdivs
and
mov
sbb
push
dec
and
jmp
clc
adc
or
or
add
loop
dec
xor
hlt
bound
ja
mov
sbb
cmc
addl
aam
cs
xchg
cmc
inc
cmp
in
jne
flds
mov
mov
jl
xlat
jl
dec
pop
mov
cmc
or
es
in
sub
xchg
incb
ja
jle
enter
or
mov
cmp
nop
icebp
lock
js
and
and
add
sbbl
rcrl
jnp
pop
cmc
mov
adc
sbb
out
and
and
insl
cmpsb
outsb
cmc
mov
mov
xchg
mov
xor
cmp
add
mov
or
sub
sar
jns
mov
shlb
adc
adc
mov
or
xchg
sbb
push
repnz
das
out
daa
inc
and
int3
lea
xchg
adc
mov
xchg
sub
fcmovb
shl
pop
jl
mov
stos
xchg
mov
xor
fsubr
adc
jge
jmp
testb
push
jmp
pop
mov
in
pop
xchg
push
addr16
in
fidivs
shrb
imul
mov
mov
js
fistl
faddp
loope
sti
aaa
mov
shl
test
cli
add
sub
or
sbb
pushw
aas
pop
mov
add
and
daa
push
xchg
mov
and
and
add
push
rcl
icebp
lds
aam
inc
test
filds
push
xchg
in
pop
add
lock
sub
dec
dec
adc
adc
push
dec
js
aaa
cmp
out
adc
and
fildl
in
or
dec
insb
popf
outsb
and
mov
and
cli
inc
add
pop
negb
mov
or
aad
mov
sbb
out
lcall
sub
lcall
pop
mov
test
rolb
push
fdivs
repnz
adc
sbb
adc
dec
xchg
pop
xlat
jmp
adc
push
fsub
inc
mov
aam
adc
call
or
in
outsl
cmp
sbb
sub
stc
xchg
nop
inc
stc
mov
adc
hlt
mov
jo
sub
adc
jecxz
rep
mov
sub
mov
fsubrl
test
cmp
int
std
xchg
test
jne
frstor
repz
xchg
inc
ja
jmp
or
sub
mov
ljmp
push
scas
arpl
cmp
movsb
mov
scas
xor
les
inc
sbb
lea
pusha
ret
fisubrl
sbb
dec
hlt
aas
je
clc
and
fnsave
push
jg
xchg
decl
xchg
test
xchg
outsl
lcall
jb
sahf
das
push
rcl
jno
stc
push
dec
mov
jns
lret
xchg
xor
xor
add
xchg
add
das
cli
mov
scas
psllq
jmp
mov
lods
sub
jl
je
xor
adc
jb
out
adcl
pushf
ret
add
adc
mov
push
jno
stos
push
jns
add
cmpsb
orb
and
sub
or
inc
bound
xor
sarl
loop
cmp
negl
shrl
testb
clc
out
fwait
cmp
jb
jg
push
jae
lock
insl
movsb
scas
mov
add
dec
pop
test
mov
jno
push
jbe
rcl
iret
aas
int
mov
popa
mov
add
nop
jns
int
xchg
jnp
dec
jae
xchg
fstl
mulb
and
pop
cmp
and
es
insl
inc
jbe
xchg
fwait
in
pop
add
fisttpll
call
sbb
das
push
mov
or
mov
imul
and
fmuls
mov
sub
hlt
mov
inc
push
dec
and
shlb
shlb
int
cld
dec
mov
shlb
mov
jns
xor
aaa
mov
push
lea
jl
jmp
cmp
sbb
adc
dec
sbb
dec
pop
cmpsl
xchg
fldenv
cmp
outsb
pop
mov
dec
or
push
and
push
movsl
jmp
push
fmul
in
daa
xchg
fdivrl
pop
mov
mov
adc
icebp
das
mov
mov
dec
aam
xor
push
ljmp
push
loope
cmp
or
and
fsubr
and
push
fidivl
push
push
jge
out
int3
jnp
test
sub
std
ret
call
pop
mov
subb
cmc
dec
dec
pop
sub
leave
cmp
add
out
push
out
loopne
mov
jmp
hlt
jbe
jecxz
jp
addl
dec
addr16
inc
pushf
cmp
rorl
xchg
loopne
mov
bound
inc
jle
mov
daa
sahf
out
repz
mov
arpl
or
jo
lcall
test
dec
mov
insl
cmp
add
nop
fadd
jle
xor
jae
das
bound
jae
lret
jge
adc
out
fistpl
xor
movsb
push
nop
jl
repz
sbb
std
dec
mov
and
xchg
imul
inc
cli
rcrb
lcall
mov
mov
repnz
cli
loopne
and
scas
xchg
fwait
jne
fisttpl
mov
xchg
push
xor
aaa
push
mov
test
in
jns
cs
mov
add
mov
and
arpl
pop
and
xchg
sub
and
shrb
roll
xchg
aam
dec
shlb
nop
inc
xor
or
insl
mov
mov
fildl
mov
cmp
shll
sub
addr16
xchg
xchg
push
lret
adc
cs
aaa
sub
sub
mov
xchg
adc
iret
hlt
pop
aad
cmpsb
push
imul
test
aam
out
and
imul
ror
sub
sub
into
stos
out
mov
popf
dec
jno
mov
incl
mov
add
push
je
mov
repz
outsb
xor
lcall
out
xchg
mov
ds
movsl
sub
adc
or
stos
sbb
outsl
sti
jge
mov
popa
and
dec
bswap
xchg
in
ss
ljmp
scas
sbb
into
and
push
mov
imul
mov
in
xchg
add
repz
xor
mov
mov
adc
into
inc
popa
jmp
pop
out
cmp
mov
data16
inc
sub
adc
push
sbb
imul
mov
xchg
and
fmul
or
loopne
xorl
lcall
pusha
jae
movsl
js
in
pusha
push
or
rclb
mov
add
cmpsl
and
add
dec
lcall
mov
shufps
adc
je
sti
cmp
xchg
jmp
insb
or
outsl
pop
insb
mov
sbb
push
insl
cltd
dec
test
add
xlat
adcl
aad
iret
std
mov
nop
xchg
mov
xor
add
arpl
and
sti
mov
cmp
xor
pop
imul
cmp
cmp
sbb
mov
loope
leave
xchg
and
cmp
mov
xorb
decb
inc
xor
and
out
push
push
nop
push
int3
mov
jg
jo
insb
inc
sub
inc
inc
jne
and
das
outsl
outsb
rorl
inc
xchg
int
insl
sbb
jb
mov
jno
lcall
ljmp
js
bnd
lods
fcom
call
add
mov
cmp
mov
clc
jb
push
sub
xchg
cmpl
clc
jnp
mov
ret
pop
pop
inc
cmc
mov
lcall
in
das
sbb
adc
push
cmp
dec
xor
mov
push
or
mov
mov
arpl
cld
test
jmp
pop
sbb
nop
xchg
mov
mov
add
mov
inc
iret
jg
dec
add
jecxz
shll
mov
cmp
repnz
jae
push
lods
int
mov
cmp
xor
and
lds
lahf
xchg
and
push
in
ss
hlt
dec
addr16
fstl
mov
cmp
testb
cs
daa
in
inc
xchg
xor
jae
into
aam
stos
and
xchg
bnd
pop
xlat
xor
push
jnp
cmp
jae
mov
cmp
push
push
notl
clc
out
aad
pop
jnp
xor
jge
and
mov
lea
xchg
outsb
push
mov
mov
xchg
adc
test
jg
or
mov
pop
out
call
jae
and
cmpsl
mov
sti
dec
xchg
inc
jmp
mov
loop
dec
mov
lods
bound
pop
js
outsl
loopne
clc
out
xchg
xor
mov
gs
inc
add
xor
mov
sbb
inc
inc
xchg
packuswb
mov
js
and
inc
cmp
jbe
repz
iret
xlat
ss
into
rorl
push
out
mov
and
mov
pop
movsl
imul
out
push
fmull
jnp
sbb
sbb
dec
mov
inc
pop
loop
xchg
ljmp
push
aas
jle
mov
bound
test
cld
arpl
and
test
loopne
and
add
enter
outsl
mov
dec
mov
xlat
sub
int
imull
hlt
pop
pop
popf
daa
xchg
scas
shlb
xchg
mov
sarb
ds
sub
imul
mul
cld
pushf
or
sbb
rcll
les
inc
xor
in
lods
lds
ja
pop
jne
into
insl
sbb
test
lahf
inc
jb
jo
jmp
icebp
ljmp
hlt
inc
pusha
test
rcrl
add
repnz
jno
mov
repz
mov
stos
xchg
sbb
or
pop
and
rcll
sbb
vmovshdup
cmpsl
xchg
test
adc
cmc
dec
ficoml
xchg
inc
loope
mov
xchg
mov
jb
rorb
loopne
out
bound
jbe
mov
sarl
sbb
jno
out
xor
test
in
mov
cli
iret
mov
fildll
pop
cs
pop
gs
aam
lock
xchg
mov
fadds
jnp
mov
pop
adc
stos
lret
mov
ljmp
and
int
xor
xor
adc
orb
aad
xchg
insb
scas
outsb
adcl
add
shrb
push
dec
aas
movsl
mov
shrb
inc
adc
cmp
mov
jnp
fbld
outsl
push
stos
and
mov
pop
push
aam
add
sub
addr16
outsb
push
jns
pop
fistl
insb
enter
and
in
lcall
jg
insb
jmp
inc
xor
cmpl
jmp
orb
xchg
sbb
pop
imul
out
dec
dec
or
sbb
in
jp
mov
xlat
dec
pop
cmp
test
cmp
cmpb
jb
mov
inc
nop
or
sub
hlt
outsb
push
bound
int
inc
xor
imul
pop
xor
inc
lods
xchg
add
rol
lds
pop
inc
xor
mov
push
test
out
mov
and
push
in
dec
dec
cltd
lods
dec
push
bound
pusha
es
fstpl
lret
ficoms
mov
test
sbb
sahf
imul
std
jae
mov
in
in
ss
xchg
xlat
not
movsb
mov
and
lret
cmp
jno
movsl
jne
popf
int
pop
aaa
mov
clc
sbb
adc
fstps
idivb
or
loopne
cmp
xlat
push
test
cmp
ljmp
add
ja
test
dec
push
in
mov
add
jl
sbb
jge
sti
mov
xor
xor
mov
dec
ret
int
repnz
add
lahf
push
push
push
or
mov
loopne
add
int
pushf
iret
enter
pop
xchg
sub
cmp
dec
cmc
aas
mov
aas
pop
ds
adc
rolb
mov
cmpsl
icebp
push
lret
pop
aaa
dec
inc
loopne
dec
cmpsb
stc
cmpsl
nopl
aam
and
jbe
adc
out
jecxz
or
test
add
add
sub
test
pop
fimuls
fs
inc
cmp
cmp
adc
xchg
hlt
dec
test
xchg
loopne
es
cwtl
ret
dec
jbe
shl
xchg
fisubl
push
jb
push
push
dec
dec
in
jmp
inc
nop
into
xchg
fsubrs
int3
jae
in
mov
popl
and
jge
outsl
push
or
out
xchg
xor
movsl
mov
loope
mov
xchg
fadd
push
rolb
mov
pop
or
xlat
std
push
insl
mov
and
or
movsl
add
push
call
in
sub
aad
sbbl
and
mov
pop
movsb
test
int
rcl
jg
rcr
pop
mov
divb
out
xchg
mov
lret
jecxz
or
jge
xor
jo
pusha
loope
jp
add
adc
adc
pop
push
xchg
addb
mov
decb
xor
pop
mov
pushf
ret
dec
add
push
and
jae
dec
in
movsl
ljmp
lds
dec
add
xor
je
out
in
imul
iret
stos
mov
les
dec
pushl
jmp
mov
cmc
jmp
cmp
es
int3
adc
ds
mov
out
fsub
or
jecxz
scas
mov
aas
push
repnz
push
push
dec
jle
xchg
jne
movsb
fisttps
or
push
pushf
add
jmp
in
add
in
adc
icebp
and
scas
push
jae
lcall
pop
jbe
into
pop
repz
call
mov
add
js
jp
jle
push
cmp
xchg
ret
in
push
sbb
cltd
iret
pop
roll
out
add
pusha
lock
fadds
mov
inc
cwtl
nop
jl
or
fwait
cld
repz
scas
jmp
icebp
les
sbb
cmp
vdivss
out
fstps
sti
jae
or
jne
repnz
mov
sub
pop
std
fistps
inc
test
insb
loopne
jle
outsl
pop
inc
pop
negl
adc
jmp
stc
ljmp
fadd
adc
sbb
orl
dec
push
mov
and
pop
sub
mov
repnz
pop
cmp
fwait
jecxz
mov
lahf
imul
lock
imul
outsl
jno
test
and
pop
lods
lods
lahf
aad
add
aad
es
xchg
popa
dec
jmp
dec
aam
je
xlat
inc
add
inc
pop
sbb
nop
daa
dec
push
xchg
dec
add
inc
mov
inc
into
jo
test
std
fistpll
lahf
pop
mov
dec
lods
test
mov
cmp
lds
dec
inc
js
rolb
and
dec
jmp
add
loopne
jmp
inc
outsb
idivb
jp
sbbl
fsts
lcall
dec
aad
lds
stos
and
mov
pop
ret
mov
imul
push
fsubl
loope
imul
aam
nop
pop
push
or
jo
fwait
jns
icebp
cmpsl
cmp
inc
adcl
pop
mov
cld
ljmp
test
inc
leave
jne
std
repz
enter
sub
sti
ror
xchg
fimuls
sub
cmp
mov
add
jbe
jb
dec
scas
out
leave
dec
cmp
addr16
jbe
ret
shlb
push
enter
movb
nopl
fistl
pop
or
fisttpl
fwait
adc
arpl
sub
cmc
sti
sbb
cwtl
fwait
jge
insl
cmp
stc
inc
xchg
xchg
add
pop
icebp
fstpt
js
addr16
xor
in
mov
arpl
pop
push
sti
mov
js
dec
fmull
xchg
mov
pop
popa
enter
push
add
sbb
dec
movsb
aas
stos
repz
in
pusha
sbb
sub
jge
icebp
inc
jns
test
test
cmpsb
pusha
push
call
clc
outsl
orb
mov
push
dec
inc
subb
repz
mulb
insb
cmp
pusha
inc
xorb
add
or
clc
dec
xchg
arpl
cmpsb
iret
scas
add
lret
imul
add
and
jo
add
add
add
stos
sbb
push
mov
int3
aas
iret
pop
or
dec
fld
das
mov
and
mov
xor
mov
push
in
pop
inc
ss
neg
in
inc
or
jmp
add
jbe
lods
xchg
cwtl
sub
pop
xor
test
cmpsb
mov
fs
push
ret
adc
add
popa
or
xchg
ss
out
lock
inc
add
in
pop
xor
ja
andl
xlat
push
lret
ss
int
jge
jno
fdiv
mov
fidivs
pop
add
cmp
pop
cltd
push
jmp
jbe
jbe
or
popf
jge
dec
pop
stc
and
mov
lock
mov
mov
push
mov
push
repnz
arpl
cmp
or
inc
inc
shl
pop
sub
lods
jl
addr16
aas
cmpsl
mov
inc
cmp
push
push
or
dec
icebp
cwtl
ja
imul
je
sbb
inc
mov
sbb
push
and
adc
hlt
jle
inc
pop
imul
rcll
stos
cmp
lret
mov
clc
lods
sub
test
sub
aam
mov
std
movsl
cmc
inc
and
iret
mov
jmp
adc
pop
fdiv
jge
ljmp
jns
into
inc
mov
adc
mov
leave
mov
lahf
out
cmpsb
stos
je
in
mov
pop
pop
in
dec
repz
mov
mov
loopne,pn
loope
std
sbb
cmp
out
test
popa
aad
sti
adc
dec
xlat
adc
pop
out
ja
mov
inc
ds
aas
adc
test
test
add
out
xlat
dec
lods
insl
mov
bnd
dec
add
mov
int3
pop
dec
push
jge
data16
enter
xor
xchg
xchg
jge
cmp
test
dec
mov
ja
and
jbe
bound
out
adc
inc
int3
scas
les
pop
ja
inc
dec
inc
mov
mov
aaa
cmp
jo
xor
addr16
sub
mov
ljmp
data16
mov
xchg
mov
push
test
mov
jae
lcall
ret
mov
fimuls
ja
add
jo
repnz
xchg
and
fsubrl
dec
push
loop
or
fsubr
dec
call
adc
push
mov
fidivrs
imul
cmp
cld
fwait
stos
dec
mov
aas
xchg
aaa
rcl
adc
pop
mov
in
rcrl
fiadds
lret
sub
in
pop
lcall
scas
add
mov
jl
outsb
aas
or
loope
arpl
repz
stc
stos
das
sub
shrl
popf
adc
xor
sbbl
inc
sahf
cmp
shlb
pusha
in
addr16
xor
pop
dec
shl
outsb
inc
mov
outsl
scas
xchg
addr16
fidivrs
inc
pop
jne,pn
mov
mov
mov
cmpsb
cmp
xor
pop
mov
jle
aad
dec
imul
cmp
inc
and
xchg
jl
inc
inc
inc
push
popa
cmp
add
jbe
mov
sbb
cmpsb
clc
dec
fwait
outsl
loopne
dec
nop
iret
shr
mov
mov
adc
xorb
adc
mov
xchg
mov
push
sub
xchg
pushl
fwait
pop
cmp
xor
fnsave
into
addr16
sub
sbb
adc
in
inc
jmp
cltd
cmpsb
ret
insl
aam
mov
ret
scas
hlt
xorb
outsl
ror
das
out
push
cmp
dec
addb
outsl
pop
jge
mov
mov
jns
mov
stos
mov
pop
xor
lahf
xor
xlat
jo
test
pop
xorb
outsl
call
jno
dec
inc
stc
movsl
loop
imul
inc
inc
mov
mov
push
mov
mov
inc
mov
sub
push
adc
loopne
sub
scas
pop
xchg
js
adc
cmp
das
and
fs
repnz
fs
xchg
in
cld
les
jo
cli
adc
scas
pop
pop
fistps
cmp
xchg
cwtl
and
cmp
inc
jne
sbb
xorb
mov
sub
cmp
shrl
jg
in
test
cli
mov
or
mov
pushf
dec
inc
sub
fildl
pusha
outsl
inc
mov
loopne
int
jmp
push
pop
mov
cmpsl
pop
dec
xchg
hlt
jp
push
arpl
add
lahf
ret
pop
pusha
sbb
lcall
mov
cld
mov
mov
add
mov
hlt
sbb
xor
sahf
xor
mov
je
xchg
jnp
and
dec
inc
inc
add
dec
pop
inc
mov
xor
jl
mov
addb
dec
pop
pop
push
jmp
cmc
sarb
adc
fsubrs
rcrl
das
ds
jne
bswap
clc
xchg
cmp
sbbl
mov
xor
sub
dec
mov
pop
xchg
into
sbb
stc
popa
mov
jp
xor
jns
cmpsb
pop
jne
gs
add
jg
jb
bound
pop
xlat
inc
call
inc
outsl
jl
shll
repz
aad
sbb
aam
imul
out
sti
dec
test
cmp
fcoml
adc
sub
jmp
das
pusha
das
in
jne
mov
cld
loope
insl
mov
and
cmp
test
inc
ljmp
pop
jle
sub
ja
push
ja
stc
test
dec
cltd
in
cmp
orb
cwtl
adc
sbb
pop
xorl
jo
aaa
or
jb
loop
mov
das
sti
aad
xor
repnz
lea
sbb
mov
dec
pop
shrl
and
mov
arpl
loope
dec
mov
or
out
xor
add
mov
mov
xor
in
pop
push
sbb
adc
pop
in
jae
les
imul
push
add
incl
inc
int3
adc
and
cmp
mov
adc
pop
call
inc
fcoml
mov
add
sub
int
pop
sub
lods
lahf
and
fucomi
fsubs
adc
loop
or
test
lahf
pop
mov
hlt
jge
dec
cmp
add
jne
negl
loope,pn
jbe
add
outsb
push
outsb
sbb
push
movsl
pop
divps
push
mov
pop
lret
cmp
push
fiadds
push
stc
xlat
clc
cmp
jl
ljmp
sub
sahf
adc
push
addr16
mov
sahf
add
ljmp
mov
push
and
mov
leave
push
lock
out
cmpsb
hlt
subb
or
stos
xchg
sbb
test
cmpb
ret
cmp
inc
cmp
push
jmp
jo
je
inc
icebp
setb
fisubl
ror
xchg
cli
addr16
movsl
mov
jnp
insl
fsubs
fcmovne
push
mov
lcall
dec
xchg
sub
inc
or
aad
mov
inc
int
rcrb
dec
jmp
xchg
add
stos
mov
or
std
fisubl
testl
mov
inc
mov
loop
icebp
and
xchg
adc
and
push
jo
fnstcw
stc
xor
pop
int
sti
and
mov
and
cli
xor
aas
int
sub
xlat
arpl
jbe
ja
pop
movsl
ja
cmp
dec
dec
or
ficoml
ds
cmpsb
outsl
adc
out
mov
inc
leave
xchg
scas
push
addr16
movsl
add
aas
lods
add
lock
out
push
fbld
xchg
inc
bound
inc
out
and
push
sar
neg
test
mov
mov
out
imul
arpl
xor
fnstcw
adc
call
add
xor
xor
inc
pop
push
mov
mov
mov
mov
mov
jl
mov
sub
ja
jbe
sub
pop
jmp
push
dec
icebp
cli
pop
push
ja
jge
dec
inc
jns
inc
jp
lock
fbstp
sbb
repz
adc
xchg
lcall
jbe
cmc
ret
pop
mov
ficompl
out
mov
lret
orl
jnp
cmp
clc
pop
push
pop
loope
pop
mov
hlt
fstl
inc
je
std
ljmp
in
lahf
add
mov
cmpsb
lods
mov
dec
lds
jbe
and
push
cmpsl
lea
outsl
loope
ja
mov
cmp
jbe
rolb
fisubs
pop
ljmp
inc
cmp
mov
add
jo
arpl
lods
shrl
xor
inc
dec
or
fildll
out
pop
fidivs
std
inc
dec
rorl
inc
bound
xchg
mov
or
inc
push
mov
inc
in
xor
sar
mov
pop
sbb
test
xorb
andb
rcr
fwait
dec
sti
outsb
lods
fdivrl
jge
dec
mov
out
fildl
std
fisubs
out
jp
xchg
mov
les
xchg
xchg
sbb
in
lock
lret
xchg
xchg
jo
leave
dec
xor
fs
mov
jns
stos
cmp
call
sti
jae
mov
push
scas
or
rorb
xlat
aad
xor
ret
ficoml
xor
pop
ljmp
out
dec
inc
sub
xchg
nop
mov
adc
cmp
mov
or
push
and
xor
cmpl
loope
mov
aam
or
pusha
mov
jne
push
fbstp
mov
stos
or
sbb
jnp
daa
ljmp
push
loope
aaa
inc
mov
and
aam
out
and
and
fucomp
data16
xor
imulb
pop
xor
bound
sub
and
inc
sti
test
jo
pop
push
pop
push
out
mov
out
test
sbb
outsl
and
and
es
sbb
test
imul
sti
and
mov
inc
jne
and
xchg
add
pop
mov
xchg
cmp
xor
sbb
stos
sbb
into
outsb
bound
pop
nop
clc
cmp
fstl
inc
and
adc
inc
or
xchg
mov
out
xorl
cmpsb
pop
pop
in
js
push
js
idivl
inc
data16
lahf
mov
cwtl
aad
add
push
in
orb
push
ficoml
pop
jge
xor
int3
jmp
pop
movsb
jns
jno
mov
int
xor
xor
test
mov
daa
xor
push
and
or
mov
negb
sub
iret
ja
mov
xor
jns
mov
adc
mov
lret
shlb
mov
xor
add
inc
loopne
aaa
adc
out
jp
xlat
push
mov
lret
daa
movsl
cmc
xchg
pop
add
faddl
icebp
stos
mov
sub
add
jo
jp
aas
cli
inc
lock
popf
mov
aaa
add
xor
loopne
rcl
and
xchg
cmc
sbb
sbb
mov
mov
imul
out
in
or
sub
test
mov
outsl
or
and
add
ja
jns
push
pushf
in
lahf
in
push
outsb
je
stos
mov
mov
loopne
cmpsb
shlb
pop
es
lahf
testb
xor
dec
and
loop
js
push
imul
sub
sti
das
daa
pop
xor
daa
xchg
push
pushf
pop
pushf
inc
out
pop
lret
inc
rclb
xlat
lret
fnstsw
iret
ficompl
imul
dec
mov
mov
cmp
sub
gs
cmp
scas
out
jecxz
push
or
jno
bound
push
cmp
xchg
arpl
add
mov
lea
mov
xchg
sbb
cmc
sahf
inc
aad
sarl
and
mulb
dec
lods
repnz
push
test
sbb
pop
iret
scas
push
pop
fmuls
sub
push
movsb
loopne
jb
test
std
ror
xor
clc
mov
mov
cmp
divl
mov
xchg
cwtl
mov
mov
pop
repnz
jo
mov
fsubrl
xor
in
sbb
fistpll
mov
dec
and
jp
fildl
jae
push
adc
sbb
js
cltd
mov
sbb
mov
loope
repnz
inc
loope
inc
mov
movsb
fnstcw
inc
sbbl
cmpl
push
mov
les
sbb
mov
push
roll
adc
add
das
jecxz
fsubrl
inc
mov
stos
cmp
sti
data16
in
push
in
iret
data16
addr16
js
or
int
data16
outsl
lret
sub
lcall
adcl
adc
jl
dec
mov
mov
or
jmp
iret
insb
xchg
xchg
push
xlat
xor
out
orl
mov
movsl
add
xchg
mov
lea
push
outsl
mov
out
aaa
cmc
data16
adc
inc
xchg
out
add
sub
jl
fidivrl
cmpsb
loop
adc
push
xchg
test
fxch
stos
mov
lods
pop
stos
in
push
mov
imul
jno
idivb
jnp
stc
addr16
and
xchg
and
pop
outsl
fstpt
sbb
mov
lcall
fs
mov
mov
push
popf
xchg
jmp
enter
imull
add
cmpl
mov
fidivrs
pop
mov
lea
mov
or
mov
cmp
and
test
in
stos
andl
xor
inc
or
cmp
lret
das
jl
ljmp
scas
mov
cli
xchg
inc
inc
push
mov
mov
aaa
fs
and
push
sbb
fwait
or
jnp
std
mov
popf
imul
adc
jl
ret
pop
cmpsb
xchg
dec
jecxz
lret
jbe
jge
cmp
divb
and
je
movsl
loopne
mov
cmpsb
pop
mov
sti
cli
out
xor
mov
jecxz
jmp
sbb
inc
jmp
addr16
inc
dec
jl
mov
loop
aaa
je
popf
inc
sub
pop
sahf
orb
sbb
lods
mov
xchg
sub
mov
scas
aas
inc
jecxz
out
sub
xchg
pop
add
lods
test
cmc
lds
sahf
cmp
lods
bound
xor
shl
loop
jo
popf
lahf
mov
adc
mov
xor
lret
jecxz
mov
pushf
mov
addr16
mov
dec
mov
out
jmp
sahf
cmpb
pop
lcall
xchg
mov
ss
jb
push
or
ljmp
repnz
pop
xchg
xor
push
loop
jmp
movsl
fcmovbe
movsb
inc
dec
int3
sbb
mov
mov
daa
push
and
icebp
and
insb
test
addr16
mov
push
lock
imulb
incl
pop
in
pop
shl
vminss
xor
das
xchg
imulb
mov
mov
sbb
dec
lret
inc
adc
imul
dec
lods
mov
imul
inc
xor
pop
lock
push
xchg
pop
xchg
mov
ret
xchg
push
xor
hlt
cmpsl
lahf
test
pop
push
xor
mov
fcomp
data16
repz
into
push
adcb
jp
das
cmp
pop
pop
fimuls
xchg
fmulp
push
adc
imul
sub
add
enter
mov
popf
test
negl
js
loopne
mov
inc
adc
repz
pop
push
imul
shl
jp
cmp
cli
xor
repz
and
addr16
nop
and
repnz
jne
jle
xor
push
fisubrs
cmpsb
fisttps
pop
mov
sahf
sub
cmp
push
adc
push
imul
out
adc
mov
sbb
daa
mov
adc
pop
and
pushf
mov
enter
push
outsb
ljmp
push
cli
push
add
rclb
and
and
xor
cld
mov
adc
in
mov
sub
daa
repz
ret
lcall
jbe
iret
jmp
pop
add
add
add
or
fdivs
test
pop
push
in
jne
jl
or
mov
test
cs
scas
imul
mov
cmp
loope
jb
ret
clc
xlat
mov
dec
jbe
loop
lock
adc
or
lods
scas
push
sbb
je
repnz
pop
cli
out
pusha
cwtl
adc
outsl
mov
lahf
scas
lcall
negl
push
mov
nop
inc
mov
push
and
mov
cmp
psubd
sarl
mov
jo
pop
data16
mov
pushf
aad
pop
fidivrs
sbb
fdiv
fstps
xchg
enter
and
insl
cmp
mov
and
push
and
leave
xorl
cmp
adc
mov
and
inc
shll
shll
push
inc
pop
mov
mov
andl
or
fsub
enter
mov
insb
mov
mov
cmp
mov
inc
inc
push
jl,pt
cmp
sti
push
or
push
pop
aad
mov
icebp
jne
imul
push
adc
xchg
stc
jnp
jecxz
jne
sbb
mov
repnz
sub
push
pop
adc
and
data16
push
jns
shrl
mov
xor
icebp
arpl
stos
xor
jnp
xchg
inc
movsb
mov
lahf
adc
mov
shlb
dec
xor
lods
ret
lods
add
outsb
clc
mov
lea
lahf
pusha
and
mov
and
repnz
jae
or
cmpsl
push
mov
pop
rcrl
inc
lcall
out
inc
inc
into
or
test
jle
shl
shlb
in
int
dec
je
inc
outsl
pop
add
cltd
outsb
js
cmp
out
xor
push
sub
xor
mov
shlb
loopne
xor
lods
cs
lcall
scas
xchg
pop
sbb
hlt
mov
in
addr16
mov
xor
arpl
popf
jae
sub
js
push
out
add
add
andb
dec
divl
adc
sub
sbb
pop
or
or
popa
ret
jae
shlb
lock
jl
pusha
ljmp
cmpsl
aad
and
adc
cmp
orb
std
test
in
inc
lds
xor
ljmp
repnz
jge
jg
xchg
cmp
cmp
jnp
loopne
jmp
iret
stos
jbe
loopne
sbb
fnstcw
les
fs
push
xchg
jb
mov
mov
push
js
add
stos
cmpl
add
loopne
pop
and
add
or
into
or
cmc
push
pop
adc
push
rep
aam
mov
sbb
pusha
inc
rcrl
push
not
inc
int3
adc
inc
adc
mov
sub
ja
pop
js
xlat
cmpl
cwtl
je
data16
adc
adc
xor
pop
pop
push
pop
push
das
aad
mov
call
movsl
adc
inc
cmp
adc
sti
lock
dec
add
std
test
mov
or
jno
aam
inc
pop
iret
mov
mov
add
cmpsl
xor
testb
outsl
cmp
loope
mov
scas
adc
inc
xchg
and
pop
push
or
fldenv
das
mov
xor
jl
push
adc
insl
inc
adc
or
jne
repnz
cmp
or
loope
inc
add
popf
xor
cmp
mov
push
psubusw
sub
sub
adc
pop
faddl
in
pop
out
clc
or
jbe
mov
or
in
sbb
add
aas
jmp
pop
in
lods
pushf
xchg
sub
mov
fisttps
or
inc
sahf
test
sbb
inc
xchg
cmp
rcrl
jl
or
pop
popa
pop
loope
jmp
cmp
popa
cs
sti
andb
push
dec
repz
loop
xor
and
push
dec
setno
mov
test
inc
xchg
hlt
fisubrl
lea
ds
xchg
in
push
aad
xchg
cmpsl
adc
inc
xchg
xchg
sub
subl
fcmovnbe
test
arpl
inc
je
xor
in
shrl
repnz
sub
sbb
fldl
push
mov
pop
lret
jge
sbb
popa
mov
iret
fdivl
or
int
dec
ss
cmpsl
lods
mov
fstp
push
push
add
xchg
arpl
inc
scas
in
movb
test
je
mov
flds
inc
mov
mov
mov
aaa
fsubl
in
scas
movsb
sbb
mov
mov
cmp
inc
fbld
popa
adc
dec
lahf
insb
add
sub
push
dec
arpl
adc
dec
xor
sub
sbbb
out
addr16
or
mov
outsl
mov
or
inc
adc
addr16
mov
jg
xchg
pusha
jb
div
inc
inc
or
out
adc
imul
rcrl
sbb
addr16
test
jne
adc
xchg
adcb
ja
sti
clc
mov
inc
aam
iret
cmpb
mov
inc
add
xchg
cmp
jmp
cmp
movsl
cmp
sbb
stc
mov
mov
stos
imul
enter
sub
test
stos
jl
in
pop
fnsave
daa
scas
sti
lods
arpl
cld
stos
or
call
push
dec
and
test
mov
lcall
mov
ss
imul
cmpl
daa
ja
jp
or
and
sub
sbb
scas
add
stc
pop
add
mov
popa
cwtl
pop
rorb
icebp
and
addb
xor
sub
stc
sbb
adc
jb
jmp
rcll
push
mov
test
pop
jecxz
lret
clc
in
cmc
mov
jle
lods
adc
or
or
push
pop
cmp
rorl
inc
pop
movsb
lahf
and
mov
test
jo
bound
xor
push
ret
pop
mov
jg
bound
aas
pop
adc
adc
lret
push
push
mov
mov
push
mov
jo
imul
mov
clc
and
mov
loope
cmpsl
sub
pop
mov
sti
add
test
fildl
sub
cmp
or
enter
test
cli
imul
adc
xchg
mov
sbb
insl
xchg
mov
push
aas
out
movsb
push
fidivrl
push
push
xchg
mov
xor
sti
test
fcomps
popf
icebp
stc
sbbl
push
or
movsb
inc
adcb
loope
mov
pusha
call
std
push
inc
jge
and
scas
jne
push
jmp
sub
mov
pop
mov
js
and
pop
decb
or
out
sbb
cmp
insl
xor
andb
mov
xor
clc
dec
jne
cmp
enter
test
ss
clc
arpl
xchg
lock
sub
sub
andl
shrb
mov
arpl
mov
or
daa
mov
mov
and
mov
mov
cli
or
call
xchg
addb
loop
flds
es
sbb
jmp
call
dec
loop
pop
dec
repz
dec
out
fldenv
sbb
hlt
fsubrl
push
mov
cmp
or
jnp
push
xchg
or
jae
ficompl
inc
fistpl
xchg
test
lods
fnstcw
fcoml
cld
sbb
faddl
out
notb
sarl
pop
repnz
addr16
jle
fwait
nop
push
cmp
xchg
daa
adc
aas
dec
dec
hlt
push
jae
jle
jne
rcr
push
decl
popf
ljmp
jmp
das
dec
mov
pop
hlt
ja
jecxz
fcmovbe
lea
fisubs
dec
outsl
and
inc
out
sub
faddl
jmp
loopne
movb
idivb
int3
fildll
fs
adc
in
push
mov
out
xlat
das
and
ljmp
adc
or
data16
into
and
adc
cmp
sub
xchg
cmpsl
lahf
push
dec
cmp
push
ret
je
imul
je
aas
sti
adc
int
bound
cld
das
test
jne
subl
std
jb
rep
pop
xor
mov
out
mov
lcall
scas
jb
loopne
xchg
orb
shrb
xor
sub
sub
mov
xlat
push
mov
adc
xor
dec
dec
cmp
or
add
cmpsl
add
adc
and
sti
stc
clc
xor
and
inc
sub
lcall
jmp
mov
jbe
pop
push
outsb
orl
jb
jp
pop
pop
mov
call
push
testb
fidivrl
xor
inc
lds
fcomps
fprem1
sub
outsb
mov
inc
jmp
sub
fcompl
inc
stc
lret
add
xorb
lea
or
aam
lret
jg
int3
loopne
inc
ljmp
fs
add
scas
or
daa
out
je
sti
and
lcall
cmp
repz
ja
add
xchg
inc
mov
scas
imul
insl
cmp
lret
dec
roll
inc
mov
sub
fisttpll
fildl
outsl
mov
xor
out
push
fiadds
sbb
mov
mov
xor
jae,pt
popa
nop
cmc
loopne
and
hlt
stos
pop
mov
ret
mov
mov
fidivl
and
in
bound
insb
adc
sbb
fucomi
jp
push
rorb
jne
hlt
das
pop
sbb
test
inc
mov
out
packssdw
ljmp
push
mov
mov
das
out
stos
out
shlb
in
and
mov
lret
jge
aas
mull
into
ret
std
and
dec
and
push
lods
cmp
and
call
repnz
clc
std
aam
sbb
xor
loope
into
sbb
incl
sahf
adc
das
in
sub
xorl
add
xchg
or
into
dec
shll
jecxz
shlb
add
stos
iret
fisubrl
pop
or
and
enter
cmp
push
cli
loopne
pop
jae
cld
or
or
gs
sbb
dec
jb
aaa
push
jge
adc
xchg
add
adc
and
imul
xchg
adc
or
scas
mov
fcomp
rorl
push
rcrb
and
stc
xlat
push
cmpb
es
mov
xor
mov
out
pop
lock
int
dec
xor
xor
ret
incb
xor
movsb
sti
andb
add
and
ret
mov
push
js
aaa
adc
sbb
ret
mov
testb
or
mov
lcall
inc
pop
mov
popf
xchg
lods
nop
stos
dec
mov
jbe
out
je
xor
push
sbb
mov
push
nop
sub
push
jmp
in
sbb
flds
lods
mov
aaa
mov
or
das
or
gs
xchg
and
and
mov
sub
out
ljmp
adc
xor
sub
cmp
clc
fimuls
les
add
jne
pop
adc
xor
lahf
sbbl
bound
pop
pushf
push
ljmp
mov
lods
jae
sub
aas
ret
mov
add
sub
fnstsw
ja
das
xchg
lds
fdivl
inc
xor
fidivrs
loop
push
shr
mov
ss
jbe
jmp
mov
fmuls
dec
sub
sub
xor
jle
jp
mov
inc
test
adc
pop
bound
cmpb
shr
or
test
adc
mov
cmpb
maskmovq
imull
loope
jle
adc
insl
xor
dec
std
addr16
push
mov
imul
pop
mov
pop
sbbl
jae
imul
xchg
daa
cwtl
lea
pop
sbb
insb
sarb
mov
cmc
lret
add
jmp
inc
aam
lahf
adc
sbb
sub
out
stc
mov
sub
stos
mov
int3
cmp
xorl
enter
fidivs
cmpsb
rcr
insl
out
mov
pop
xchg
cmp
sbb
movsb
jge
rclb
lret
hlt
pop
or
push
inc
push
jp
sbb
stos
das
inc
and
and
dec
inc
out
in
scas
and
push
fwait
mov
inc
pop
bound
adc
stos
loop
mov
es
popa
push
stc
pop
aam
push
and
or
loopne
cli
pop
lods
cmpb
and
mov
push
mov
jo
push
imul
out
cwtl
inc
sbb
stos
jno
outsb
jecxz
xchg
mov
mov
mov
int3
fisubrs
jae
dec
sub
inc
add
cmc
sti
xchg
pop
and
fbstp
mov
xchg
mov
sbb
cmp
adc
jb
sub
cwtl
and
push
ret
cltd
jmp
jp
push
sub
add
aas
das
dec
shrb
pop
and
and
and
or
lahf
adc
adc
and
out
sub
adc
mov
jmp
out
int3
int
fcoml
ret
adc
dec
scas
xlat
lcall
test
daa
cwtl
insb
stc
add
jp
push
and
js
fdivl
push
es
nop
push
sub
jle
repnz
lcall
mov
test
sti
inc
testl
mov
inc
fsts
in
sbb
inc
cmp
cltd
mov
out
shl
shlb
notl
mov
lcall
aad
add
push
divb
mov
mov
pusha
fcmovne
daa
mov
ret
test
or
aam
fisubs
lods
pop
out
adc
rolb
dec
movzwl
dec
stos
aam
loope
aam
aaa
mov
dec
int
lea
and
insb
addr16
icebp
adc
mov
pop
cld
leave
in
outsl
sbb
call
sbb
int
push
leave
jnp
idivl
mov
jne
sbb
test
pop
clc
lods
pop
push
jp
negb
ds
hlt
mov
fcomi
fldenv
movsl
mov
sub
inc
mov
pop
icebp
sub
movsb
stos
aam
movsb
sti
pushf
mov
mov
pop
arpl
arpl
dec
xchg
mov
pop
sti
out
mov
mov
mov
xchg
pop
dec
out
call
xor
push
iret
and
dec
or
outsb
adc
sti
sub
js
adc
fisubrl
fwait
push
or
ret
cld
lret
fadd
cmc
mov
lret
rolb
mov
mov
pop
fiadds
je
push
mov
pop
mov
repz
call
mov
dec
mov
add
sub
lods
mov
les
mov
xor
mov
test
jecxz
mov
sub
leave
lods
aaa
xchg
fcoms
mov
sub
popa
sub
sbb
loop
jne
dec
mov
js
test
and
and
jmp
js
jnp
dec
sbb
mov
xchg
ja
jb
push
insl
mov
pop
ljmp
mov
int
mov
iret
pop
cmp
in
int
mov
enter
mov
add
addl
jns
adc
xor
mov
jge
jns
lahf
sub
mov
int3
stos
fmuls
lock
test
dec
aas
jb
inc
sbb
adc
xchg
sub
jmp
pop
notl
jbe
test
mov
mov
push
fdivs
ja
push
pop
sub
mov
scas
sarl
or
inc
mov
push
inc
lahf
sahf
push
push
jb
or
mov
es
repnz
scas
insb
fninit
dec
push
enter
sarb
fwait
and
xor
pop
fneni(8087
aam
leave
cmpl
jae
loope
dec
popa
xorb
lds
icebp
mov
das
nop
mov
pop
or
xor
sbb
xchg
push
into
subb
dec
sahf
dec
arpl
jno
sub
add
insl
dec
jp
shlb
popf
dec
int
fsubrs
sbb
push
mov
loope
or
push
lods
cmpsb
jmp
stc
sbb
adc
movsl
inc
xchg
jno
pop
rorb
add
sub
or
repz
sbbb
inc
mov
sbb
aas
stos
and
int3
dec
repz
or
mov
lahf
fnstenv
aas
out
push
aaa
or
fldl
ja
outsb
mov
stc
in
sub
push
icebp
mov
mull
pop
cmp
cs
popf
iret
jmp
rorb
cs
daa
popa
push
stos
aad
loopne
mov
mov
imul
jp
xlat
xor
out
mov
add
mov
or
insl
bound
xchg
push
mov
xchg
jnp
cli
dec
test
call
mov
adc
dec
push
add
out
fidivs
movsl
loop
lods
aas
sbb
sbb
fbld
mov
pop
sub
sbbb
mov
das
sub
adc
adc
xlat
mov
xchg
loop
mov
rcl
adc
fsubrs
mov
mov
xchg
dec
mov
dec
test
and
in
jo
int
int3
and
cli
les
pop
or
mov
and
xor
cmp
cwtl
jo
pop
lret
xchg
sbb
test
inc
adc
push
pusha
lahf
xchg
push
xor
mov
popa
sbb
in
nop
mov
shrb
cmp
int
adc
insb
test
push
cs
or
loopne
push
ret
sbb
push
cmp
adc
in
xchg
repnz
push
js
push
pop
cmpsl
sbb
int3
cli
cmp
lock
mov
cli
sti
sub
push
lret
aas
push
xchg
cmp
inc
push
push
dec
xchg
cwtl
outsb
push
bound
rolb
pop
shll
dec
sub
lods
stc
popa
cmc
pop
mov
mov
jb
mov
fbstp
inc
and
sbb
mov
inc
js
mov
aas
mov
jp
push
mov
lods
pop
lret
adc
daa
mov
mov
into
mov
cltd
cmpsb
in
jnp
nop
add
xchg
xor
cmp
in
pop
xchg
or
ss
sub
adc
or
dec
jnp
push
pop
mov
dec
mov
test
pop
fists
cmp
add
jmp
sbb
insb
ljmp
cmp
aam
push
mov
xchg
sbb
imul
dec
push
cmp
pop
push
mov
sarl
xor
nop
stos
insl
cmp
mov
mov
mov
push
aaa
into
sbb
xchg
push
inc
or
xchg
into
ss
sbb
push
sub
adc
sti
jp
push
push
pop
sbbl
fwait
jbe
shrb
jbe
in
dec
ret
mov
aad
dec
lahf
movsl
pushf
ror
mov
push
lcall
loope,pt
pop
inc
mov
hlt
into
lods
fistps
xchg
iret
xchg
mov
sub
cmpsb
cltd
push
fstps
jb
jecxz
movsl
xchg
jge
in
int3
bnd
adc
outsl
push
add
cmp
and
xor
std
cmp
pop
xchg
dec
aas
insl
ficoml
sub
add
mov
adc
push
and
push
or
sbb
sub
add
adc
mov
cltd
out
shlb
xchg
cmpsl
mov
sahf
arpl
sbb
push
mov
lods
fs
in
fs
call
pop
pop
mov
int3
mov
mov
xchg
loop,pn
inc
adc
mov
pop
xchg
popa
or
in
jmp
inc
pusha
lahf
dec
pop
pop
dec
in
mov
xor
sti
outsb
push
aam
add
sbb
jae
jge
fptan
roll
push
jo
cmc
mov
add
mov
and
out
ljmp
das
push
orl
lcall
pop
inc
out
xor
add
out
mov
pop
sbb
mov
push
mov
jp
mov
sbb
fcoms
mov
mov
int
dec
fnstcw
pop
cs
pop
add
mov
insl
jae
add
jge
xchg
adc
xchg
ficoml
clc
jp
loop
inc
xor
xor
arpl
cmc
push
xchg
mov
shlb
pop
je
loop
lea
leave
or
add
or
sahf
das
pusha
cltd
xchg
push
lahf
insb
fadd
fsubr
cmc
data16
pop
xchg
pop
shll
imul
outsl
or
add
dec
ja
push
cmp
data16
xchg
fistps
fdivrl
sub
bound
push
inc
es
mov
in
cli
aad
loopne
les
rolb
cmp
push
addb
into
ret
and
dec
sub
out
daa
xor
or
data16
subb
mov
daa
mov
cmp
mov
pop
cmp
jge
test
ljmp
adc
inc
cmpsl
mov
xor
test
test
inc
xchg
pop
pushf
cmp
or
inc
mov
jne
or
or
mov
rdpmc
rclb
aad
sub
add
cli
rclb
mov
inc
xchg
test
dec
jno
jno
jecxz
or
adc
jmp
in
mov
or
in
lret
inc
jmp
xor
or
mov
arpl
mov
ds
push
loopne
test
sub
int3
xor
pop
pop
sub
lods
ss
fwait
dec
hlt
je
sbb
sub
lret
mov
pop
lds
adc
inc
pop
ljmp
xorb
pop
cmc
or
sub
fnsave
insl
ss
lods
in
jmp
repz
imul
dec
cmc
and
jg,pn
cmc
sub
mov
xor
imul
dec
jnp
pop
pop
jp
xchg
nop
xchg
repz
lea
adc
scas
sarl
cmp
insb
in
sbb
test
jg
xchg
xchg
out
gs
pop
faddp
adcl
scas
push
cmp
mov
push
mov
and
lods
daa
rep
lret
pop
imul
repnz
popf
add
and
adc
xchg
mov
push
jne
test
inc
sbb
loopne
xor
clc
rorl
cmp
call
clc
imul
repz
xor
mov
xor
adc
fucomp
ret
js
std
inc
cmpb
adc
fnstenv
jp
pop
xchg
into
mov
xor
push
jl
bound
xor
inc
jae
add
sub
push
js
in
out
jbe
pop
movsb
lock
sbb
lods
lea
lods
popa
addr16
pushf
cmp
test
aaa
dec
repz
push
fistpl
imul
push
add
mov
loopne
addr16
sub
repnz
push
out
xchg
rcr
xchg
pop
nop
jge
xchg
and
mov
mov
aas
adc
push
xlat
sbb
ljmp
test
and
mov
stos
dec
in
movsl
pop
into
pop
ss
call
sbb
jno
sbb
jae
rcrl
lds
testl
int
dec
imul
popf
icebp
add
or
inc
add
insl
mov
dec
sbb
cltd
adc
into
repnz
push
lods
xor
push
sbb
adc
and
ss
pop
mov
inc
in
aas
or
sbb
cltd
adc
add
jnp
dec
jle
sbb
dec
cli
pop
xchg
jae
insl
ljmp
mov
lahf
dec
push
ss
popf
and
sub
push
inc
inc
push
mov
pop
cli
and
out
les
dec
add
shl
jns
ss
test
inc
stc
jl
add
test
adc
scas
sahf
out
xor
aas
icebp
adc
mov
aad
add
xchg
pop
pop
movb
push
and
sti
sti
addb
testl
insb
roll
aam
inc
dec
sti
add
ds
das
push
adc
xchg
xchg
mov
ds
sahf
jbe
mov
mov
lock
adc
mov
pop
cmpsl
jecxz
sub
mov
sbb
loopne
dec
mov
repz
test
pop
das
ret
out
loop
stc
sub
jg
sti
inc
dec
mov
rcr
sbbl
pop
pop
gs
mov
and
cmc
sbb
mov
adc
mov
mov
aas
daa
cmpsb
xchg
test
js
cmpsl
mov
aaa
pop
sub
mov
decb
sarl
dec
rcll
scas
pop
ja
xchg
sbb
ret
dec
pop
pop
idivl
pop
fiaddl
xor
add
inc
push
mov
inc
imul
add
or
xchg
push
pop
inc
pusha
mov
loop
push
push
mov
inc
leave
das
aam
add
mov
or
call
fistps
jecxz
add
pop
push
shll
or
dec
ret
fcomps
inc
iret
inc
xchg
xchg
sbb
stc
shr
pop
sbb
repnz
je
outsb
ds
mov
cs
xor
lret
mov
push
ss
or
std
cmc
cmp
add
outsl
fistpll
pushf
or
xchg
lock
jmp
mov
movsb
popf
mov
pop
call
mov
in
lcall
jl
inc
subb
aam
movb
icebp
push
dec
jecxz
pop
test
mov
sub
push
movsl
andl
xor
inc
int
dec
and
fdivs
cwtl
push
inc
ljmp
sarl
add
stc
test
daa
stos
mov
cwtl
push
mov
mov
mov
pop
sbb
lcall
adc
inc
push
ror
mov
sbb
hlt
push
lret
pop
stc
xchg
xor
pop
xchg
add
lock
inc
cs
movsb
mov
push
push
ljmp
mov
aas
inc
lds
cmp
es
pop
aad
fldt
les
push
jnp
clc
mov
jae
movsl
test
push
addr16
mov
mov
cmc
roll
gs
fcmovu
das
sti
sbb
jge
mov
cmp
imul
sub
dec
mov
push
cli
fbstp
movsb
and
imul
in
mov
decl
lret
push
adc
sbb
add
fildl
fidivrl
adcb
pop
pop
sub
imul
pop
bound
leave
add
lret
sahf
fdecstp
outsb
imul
sbb
ja
push
jbe
jno
icebp
push
outsb
ret
int
mov
or
and
push
adc
add
push
push
daa
add
fistpl
insb
mov
mov
inc
add
outsb
lret
xchg
xor
data16
mov
daa
jno
jg
or
shr
push
xchg
sub
xchg
out
lahf
adc
jl
hlt
xor
jmp
pop
ret
pop
negl
xor
out
pop
cmpsl
mov
add
ret
cmpsb
adc
jns
imul
xchg
pop
mov
dec
movsl
dec
ja
push
std
int3
test
ja
or
push
or
les
sahf
insb
ljmp
aam
loop
push
sahf
xchg
or
daa
enter
jnp
or
icebp
out
jae
nop
lods
cli
ret
dec
xchg
test
cmp
inc
pop
fiadds
test
mov
outsl
mov
jp
jae
js
xorb
movsl
pop
dec
push
scas
push
js
outsb
clc
xchg
pop
aas
push
pop
push
in
aam
jb
cmp
cmp
and
mov
addl
mov
and
stos
or
mov
or
into
std
pushf
scas
shr
insl
mov
add
xor
rcrb
and
testb
jmp
fnsave
inc
sbb
and
push
addr16
sbb
xor
mov
test
and
mov
xlat
daa
add
mov
and
cmc
sbb
adc
pop
push
add
lods
repz
jp
ljmp
inc
and
test
aas
xchg
mov
mov
rorl
cmp
je
les
lcall
jp
and
ljmp
xor
push
cwtl
sub
repz
mov
and
outsl
shr
inc
in
pop
add
idivl
ds
dec
adc
xor
shrb
and
sbb
orb
outsl
sub
dec
sub
test
mov
push
sbb
push
ret
xchg
mov
lret
cmp
hlt
shrl
frstor
dec
das
js
cmpsl
mov
xor
pop
jecxz
jge
pushf
insl
xchg
in
push
cmp
mov
imul
arpl
mov
fwait
cmp
jg
loopne
daa
mov
mov
clc
inc
nop
js
leave
ret
inc
scas
cmp
sar
jb
outsl
cmp
adc
mov
hlt
push
jmp
cmp
jb
or
pop
ljmp
jno
inc
sub
lods
and
push
jne
mov
ret
sbb
aaa
hlt
repnz
test
sub
dec
outsl
es
in
test
int
sub
or
std
push
jno
pusha
sti
cmpsb
imul
mov
push
ss
movsl
pop
jns
xchg
fsubrl
sahf
or
pop
imul
cmp
or
les
xchg
push
movsb
or
add
mov
cmpsb
add
push
je
cmp
push
jns
std
sarl
js
mov
ret
in
cmpsb
ja
std
mov
sub
cmc
dec
ss
push
add
in
sbb
int
out
pop
test
sti
sub
mov
inc
mov
sub
fisubrl
pop
or
insl
add
push
pop
in
pop
ljmp
daa
addr16
scas
xchg
lahf
mov
cmp
push
data16
js
sub
arpl
mov
jns
dec
outsl
inc
ret
push
cmp
xor
ja
jb
push
hlt
arpl
scas
andl
clc
lret
mov
jmp
or
lahf
ljmp
xlat
inc
insb
pop
lret
cs
or
lock
xchg
push
in
fwait
icebp
cmp
repnz
lods
popf
movsb
call
pop
sub
je
cwtl
pop
jb
gs
mov
gs
pop
jb
incl
cmpsb
inc
dec
sbbb
loope
push
int
push
out
int3
adc
and
mov
arpl
mov
jne
or
stos
push
mov
imul
sbb
mov
push
test
aas
cmp
push
stc
int3
add
ljmp
pusha
testl
xor
xor
test
lcall
xchg
outsl
mov
loopne
sbb
ss
int
stos
or
adc
out
sbb
xchg
sbb
lods
bound
fs
iret
jge
inc
and
sub
pop
or
xor
aad
mov
push
sbb
pop
dec
xor
mov
int
dec
cmp
loopne
insl
adc
pop
test
fidivrl
popa
add
repnz
inc
cmp
dec
push
dec
mov
out
cmpsl
aaa
cmp
add
movsb
jle
sbb
sbb
inc
loop
je
cs
push
inc
or
aas
sbb
and
cmp
lds
lods
inc
nop
mov
loopne
div
in
fcoml
cli
imul
push
or
push
testl
js
lods
in
cmp
and
ja
in
jmp
aas
imul
bound
call
pop
mov
cmp
cmpsl
cli
shrl
scas
jmp
xchg
xchg
ss
sbb
dec
movsl
xchg
mov
test
cld
pop
in
mov
pop
enter
pop
jle
bound
rclb
pop
dec
lahf
ret
inc
pop
daa
enter
or
xchg
jno
xor
cmpsl
mov
adc
dec
loop
pop
mov
test
das
out
in
inc
mov
or
and
nop
sarl
sub
pushf
lds
dec
repnz
iret
insb
int
mov
std
inc
xchg
xor
sbb
push
outsb
mov
cmp
lcall
xchg
cmp
out
add
mov
sti
cmp
lret
push
out
movsl
dec
je
iret
test
fstps
mov
mov
fwait
pusha
push
cs
push
inc
cmpsb
idivb
sbb
loopne
xchg
fwait
sub
adc
data16
out
stos
cmp
pop
inc
inc
add
jle
dec
inc
gs
test
iret
or
cld
sub
je
inc
int3
add
xlat
imul
push
cmpl
je
cmp
inc
inc
and
sub
add
mov
sbb
pop
data16
imul
or
loope
addr16
add
adc
cltd
and
xchg
sub
jp
ret
sbb
push
roll
fnsave
jns
jae
and
pop
das
adc
lcall
fwait
lods
xor
insb
orb
stos
pop
sbb
or
stos
insl
pop
xlat
jp
sub
lock
jp
mov
out
dec
mov
movntps
insb
scas
mov
xor
mov
fsubs
std
aaa
lods
xchg
enter
pop
mov
aaa
mov
adc
mov
sti
rol
and
jmp
push
popf
cmp
aam
gs
cwtl
lret
lods
test
das
les
and
in
dec
push
pop
popa
dec
dec
sbb
mov
fmul
std
pop
outsl
outsl
in
cmp
mov
mov
sti
les
gs
xchg
sub
jmp
orb
fistl
ljmp
fnstenv
fmull
sub
adc
scas
js
push
sti
cmp
xchg
ja
dec
aas
arpl
aaa
cmp
xchg
int
repz
repz
xchg
int3
pop
xchg
pop
inc
push
pop
push
inc
jle
inc
xor
imul
outsb
cmp
pop
rorb
cld
or
xlat
stc
mov
inc
outsl
mov
mov
pop
sub
cmpsl
push
popa
sub
mov
sarl
pop
nop
xor
stc
mov
xor
xchg
pushf
mov
cmp
daa
arpl
clc
dec
scas
sub
sub
xor
in
dec
sub
inc
sbb
scas
ror
push
fidivl
int
push
mov
cmp
int
js
ret
inc
jg
cmpsl
cmp
pop
ud1
mov
scas
xchg
fsubs
add
icebp
mov
lret
pop
mov
shr
inc
mov
movsb
out
mov
stc
pop
mov
cld
xor
mov
in
fnstenv
cmpsb
insb
sub
push
mov
or
stos
and
scas
lock
test
mov
ja
sbb
mov
dec
fs
add
xor
and
xor
icebp
jecxz
enter
fnstsw
stos
sarb
shrb
stos
lret
mov
stos
icebp
push
into
mov
repnz
dec
pop
insb
addr16
in
aam
out
jb
add
hlt
cltd
int3
lret
sbb
stc
or
pop
cltd
add
fs
pop
mov
pusha
lcall
cs
pop
or
add
jno
mov
pop
mov
xchg
mov
xchg
jbe
lea
and
pop
jmp
pop
mov
inc
movsl
test
icebp
iret
popa
adc
adc
mov
es
icebp
daa
xor
pop
xor
dec
scas
shrb
clc
shlb
out
std
add
test
sarl
or
push
mov
out
loope
pop
aas
jp
mov
clc
cld
popa
push
sub
je
js
stc
mov
in
iret
enter
sbb
rcrb
ss
fwait
mov
mov
lds
roll
sbb
dec
enter
scas
or
iret
bound
int
sbb
jp
xor
mov
and
insb
aam
dec
mov
xchg
adc
out
or
addr16
add
jl
inc
add
pop
mov
popl
inc
cmpsb
mov
cld
out
lret
pop
push
insl
sbb
incb
jge
jb
pushf
orb
dec
push
lds
js
mov
es
in
in
mov
mov
jo
in
rcrb
mov
insb
or
mov
inc
in
cmp
xchg
fistl
into
inc
enter
mov
mov
fcomi
lret
mov
cld
fimull
pop
mov
fistps
fbstp
cwtl
inc
clc
call
pop
fdivrl
add
lret
sub
das
push
cmp
stos
andl
cs
sahf
fmul
test
ljmp
mov
mov
ds
lea
popf
ja
xchg
test
jo
lds
je
setne
dec
ja
sub
adc
adc
cmp
pop
mov
aad
cmp
lret
jo
push
fmulp
jo
out
mov
mov
leave
xor
pop
jns
sbb
xor
aam
mov
mov
leave
jnp
aad
imul
adc
dec
js
test
pusha
adc
call
sbb
ljmp
inc
out
or
add
jge
sbb
jg
dec
repz
xorb
xchg
dec
pop
mov
and
push
mov
dec
mov
xchg
and
jns
fs
out
in
mov
sub
sbb
inc
sub
mov
cmp
aam
fucomip
sub
int
pop
leave
scas
pushf
arpl
mov
mov
mov
sbb
mov
sti
test
bound
stos
sbb
out
movsl
stos
testl
rolb
movsl
icebp
cmc
mov
pop
or
je
inc
daa
jbe
test
xchg
inc
test
push
ret
cwtl
pop
or
decb
std
pop
lds
sub
cmc
nop
xor
xchg
insb
mov
jbe
cld
pop
mov
mov
negl
inc
jb
adc
pop
pmulhw
outsl
icebp
mov
add
jp
jmp
mov
test
loopne
iret
push
sbb
xchg
dec
insl
add
adc
cmp
mov
sbbl
mov
lods
jmp
repz
popa
sbb
and
xor
push
vpaddw
mov
dec
add
cmp
imul
insb
jns
and
sbb
lahf
lea
ss
mov
sbb
push
aad
popf
aas
sub
test
or
mov
cmp
mov
pop
dec
shll
mov
cmc
sub
pop
sbb
out
xchg
cmp
inc
inc
in
and
cmp
add
pop
testl
pusha
cmp
in
cltd
movsl
cltd
mov
adc
pop
or
int
cltd
xor
xchg
out
int3
repnz
nop
mov
rclb
add
bt
jecxz
jnp
lock
adc
mov
mov
out
xlat
sbb
subb
jne
test
xchg
orb
out
sarl
aad
push
push
test
lods
jecxz
scas
mov
cmpsb
sbb
je
aad
jno
sub
enter
xor
jne
test
and
sub
mov
pop
lock
int
push
loop
in
or
movsb
frstor
in
lds
lods
stc
xchg
lock
fcmovbe
loope
xchg
int3
push
mov
sbb
and
jno
roll
xchg
ds
test
cmp
aas
push
repz
out
imul
iret
sbb
push
dec
lret
out
outsl
fisttpll
fstps
les
ret
imul
bound
and
lea
dec
cmc
divl
push
fwait
popa
inc
lods
je
mov
sub
mov
jns
gs
sbbb
pop
inc
adc
scas
sbb
aam
mov
test
mov
dec
std
xchg
je
mov
jnp
dec
stc
cwtl
xor
xor
cs
cmp
int3
dec
sbb
out
idivl
inc
push
cmpsl
enter
rclb
adc
push
sub
gs
rsm
into
push
mov
add
sbb
adc
arpl
mov
push
cmp
cmpsl
jp
jmp
adc
and
shll
pop
cmp
inc
adc
fwait
cmp
fs
inc
mov
sub
or
loope
repz
xor
mov
dec
mov
xchg
repnz
insl
negb
repnz
pop
pushf
popf
or
call
push
lock
pop
jmp
adc
mov
dec
jg
push
dec
sbb
xchg
pop
jb
les
dec
mov
dec
push
inc
push
in
incb
push
mov
not
imul
mov
cmp
cltd
aad
fimuls
jl
sbb
inc
arpl
addr16
cwtl
mov
sbb
inc
mov
inc
jnp
out
jnp
into
xchg
jb
adc
pop
mov
stc
rclb
dec
sub
movsl
lret
mull
dec
xor
mov
mov
sub
cli
inc
out
add
aas
out
lock
sbb
ret
adc
jmp
xor
push
sub
in
repnz
xlat
pop
adcb
mov
adc
mov
sbb
rcl
and
mov
jmp
xchg
in
es
xchg
cli
pushf
int
ds
fs
xchg
dec
xor
stc
lret
pop
sub
jl
int
push
xlat
stos
inc
sbbb
das
sub
icebp
push
shrl
mov
pop
outsb
lret
ret
sarl
je,pt
je
addr16
test
jae
jbe
xor
lock
jmp
mov
test
xlat
push
sub
inc
sahf
pushf
sub
or
push
sbb
mov
mov
mov
testb
xor
pop
jae
scas
dec
addr16
lea
dec
adcl
push
push
inc
and
sti
mull
cmp
jbe
add
jecxz
add
data16
xor
dec
jns
lahf
mov
fisttpll
adc
cltd
js
add
xor
subl
fs
cmpsb
push
mov
cli
inc
out
adcb
cli
mov
push
nop
mov
test
mov
push
mov
lock
push
and
push
ds
lods
aad
mov
mov
outsl
ljmp
repnz
das
nop
sarb
jmp
push
lahf
ja
mov
hlt
popf
mov
pop
and
pop
int3
dec
scas
adc
or
cmp
sub
imul
out
jb
loop
xchg
aad
jg
in
pop
clc
aaa
in
jns
ss
xor
shrl
ret
xlat
mov
je
mov
cwtl
push
ficoml
mov
xchg
sub
mov
mov
aas
cld
bound
or
imul
or
jle
movsl
push
cmpsb
ja
mov
inc
fisubrs
insl
and
scas
shr
mov
cli
js
mov
sahf
mov
shrl
movsl
sbb
lds
loope
imul
sbb
pusha
xor
mov
jbe
jnp
gs
jmp
nop
addl
aam
adc
data16
inc
sbb
mov
rorl
pop
jmp
sbb
fs
stc
push
int3
sbb
or
push
aad
pop
cmc
je
sbbb
repz
fstpt
in
in
or
dec
and
stc
das
jno
cltd
int
mov
pop
clc
lret
mov
call
loopne
push
mov
xchg
fimull
mov
daa
push
mov
adc
aad
inc
adc
loop
xchg
dec
jmp
add
cmpsl
fadds
cmp
leave
sub
mov
mov
stos
and
ds
outsb
loopne
and
xchg
scas
test
lret
sub
out
scas
cmpsb
xor
popa
nop
jo
push
jae
cmc
fisubrl
push
inc
xor
pop
repz
fwait
add
pushl
mov
sub
stos
mov
sarb
xchg
or
mov
lods
stos
iret
imul
jecxz
sub
out
test
mov
mov
out
icebp
fistl
mov
nop
rcr
pop
ror
es
popf
cmp
loop
js
fwait
iret
sbb
out
xchg
mov
pop
decl
arpl
or
sub
push
pop
flds
push
mov
pop
sbb
loopne
aam
loop
stos
aaa
ja
in
add
int
adc
std
push
inc
xor
sub
repz
xchg
adc
scas
notb
pop
adc
cmp
add
sbb
pop
add
ljmp
sub
and
sbb
xchg
lods
clc
and
lods
adc
xor
or
jmp
outsl
inc
rorb
repz
dec
adc
les
fidivs
insb
cmp
lret
loop
les
sub
pushf
xchg
cwtl
les
rcrl
jo
es
stc
push
test
adc
or
mov
push
testl
or
mov
stos
cli
mov
hlt
fmul
xchg
pushf
daa
std
or
roll
xchg
cs
stos
movsb
cwtl
inc
push
lock
pop
ficoml
int3
and
inc
inc
add
mov
push
pop
sahf
cwtl
add
nop
inc
fmuls
out
lods
es
fstps
cmp
mov
jecxz
cmp
test
ljmp
dec
lods
jno,pt
cmp
inc
lahf
fimull
push
enter
pop
sub
inc
mov
movsl
mov
pop
test
cmc
lock
adc
sbb
xchg
test
adc
movsl
ds
jmp
dec
inc
fimuls
xor
cmpsb
lcall
aas
adc
je
nop
mov
repnz
ss
push
adc
test
icebp
mov
pop
test
fs
mov
dec
sbb
into
dec
inc
out
xchg
fmull
rorl
in
mov
mov
sub
out
mov
mov
xchg
rcll
loope
add
xchg
pop
aad
in
ret
test
sbb
mov
mov
add
or
sarl
jbe
fcompl
lret
lret
and
or
mov
push
dec
lds
sahf
push
jecxz
imul
in
rcr
or
fnsave
add
lods
mov
mov
xchg
mov
push
pop
ds
push
cmp
movsl
std
push
add
arpl
sub
stos
mov
out
gs
mov
dec
sub
and
dec
push
inc
mov
jbe
decl
jmp
lahf
push
adc
aam
push
mov
push
cmp
cmpsb
mov
stos
push
push
add
sub
sbb
mov
psubw
ljmp
shl
movsl
jae
adc
sbbl
sbb
stc
inc
ds
mov
nop
sbb
ss
pop
cltd
daa
leave
inc
sbb
sub
sub
imul
loopne
rcrb
jbe
add
es
les
cmp
std
dec
ja
push
dec
push
xor
adc
cmpsl
xorl
jl
pop
lahf
addl
cwtl
jp
jle
pop
adc
mov
mov
push
xchg
roll
ljmp
sub
or
sbb
sub
loope
mov
pop
push
sub
or
cmp
loope
push
pop
aad
dec
inc
movsl
jg
outsl
push
out
adc
adc
rorl
mov
aas
movsb
or
pop
mov
sbb
mov
pop
aam
mov
mov
adc
std
mov
ud2
insl
push
notb
sub
repnz
stos
adc
cmp
mov
popf
xor
adc
xchg
jge
rolb
lahf
sub
cld
pusha
mov
mov
aam
xchg
inc
lahf
outsl
mov
sete
cs
mov
ja
repnz
lea
cmp
mov
out
ret
int
lock
lds
adc
repnz
push
js
nop
mov
dec
sbb
clc
add
pushf
js
lahf
repz
ret
rcrl
or
int
adc
xchg
xchg
data16
testl
lahf
fstps
aad
mov
jle
ret
pop
push
popa
xchg
cmpb
in
loope
or
xchg
or
jb
loop
clc
mov
and
cmp
pop
xor
mov
sub
cmp
mov
sub
dec
cmp
xchg
lods
dec
sbb
jae
scas
call
inc
test
xchg
pop
mov
jbe
out
in
sub
addr16
dec
out
mov
xor
in
sbb
hlt
cmc
sbb
push
and
gs
lods
imulb
fsubrl
fld
jns
push
xchg
fcomip
out
add
stos
or
jle
js
in
imul
ror
and
ja
push
sub
arpl
xchg
into
cmp
push
dec
xchg
inc
mov
inc
push
int3
outsb
in
xor
aad
ja
mov
testb
lahf
xor
xchg
lret
rorb
xor
fldcw
fistpll
cmpsb
pusha
mov
add
les
push
lods
sti
xchg
and
frstor
jnp
lret
icebp
and
jbe
ljmp
movl
mov
aad
lds
je
es
repnz
xchg
cwtl
in
xor
addr16
jbe
sahf
fwait
adc
in
notl
dec
daa
gs
imul
leave
icebp
lds
push
xlat
jnp
jmp
sti
mov
in
repnz
lods
xchg
dec
push
mov
and
pop
xor
out
jne
lcall
dec
inc
js
adc
test
cmp
xchg
push
cmp
xchg
es
clc
pop
in
sti
test
or
int3
sbb
push
std
in
mov
mov
test
xchg
mov
xchg
push
xor
adc
or
xchg
mov
loopne
dec
ja
mov
stc
mov
ss
hlt
add
lret
fmull
rorb
enter
cltd
jbe
mov
cltd
in
lds
push
mov
inc
jp
insb
test
cmp
hlt
es
movsl
mov
sub
out
lret
stos
fwait
push
lcall
mov
pop
sbb
dec
cmp
out
and
or
mov
rorl
cld
lgs
test
lcall
out
mov
cmc
sarb
test
dec
in
xor
mov
hlt
inc
fildl
popa
out
pop
mov
cmp
or
imul
cli
jbe
add
push
out
sbb
lds
aam
loope
pushf
pop
lret
ja
bnd
xchg
cmp
pmaxsw
pop
add
sahf
mov
insl
adc
loopne
lock
mov
push
in
jns
sub
xchg
push
lcall
pop
mov
mov
pop
stos
push
rorb
shlb
sbb
jge
je
fucomi
and
cmp
jne
cld
xchg
aam
sub
stc
add
inc
inc
aas
adc
mov
les
rep
sub
out
in
addr16
inc
fwait
cmp
mov
scas
jl
hlt
pop
movsl
sub
fcomps
cmpsb
pop
nop
push
xchg
stc
hlt
pop
jmp
inc
cld
mov
mov
rcll
sbb
pushf
int
movq
pop
mov
icebp
movl
leave
jno
mov
aad
or
mov
fucomi
jle
jp
scas
rclb
js
std
mov
jle
pinsrw
insb
iret
jns
shlb
insb
cmp
cld
cwtl
and
xor
lret
ss
pop
daa
cmpsl
push
xchg
adc
pop
inc
push
mov
fldenv
pushf
or
xchg
clc
rcl
xchg
mov
insl
jno
cmp
cmp
stos
dec
cs
enter
xchg
add
iret
push
push
movsl
xchg
shll
scas
enter
or
jne
push
lods
addr16
das
shlb
mov
scas
mov
pop
fsubrp
xor
add
add
lea
clc
lea
fcomps
push
jg
fldcw
lret
lods
aas
cmp
mov
mov
outsb
xor
xchg
mov
mov
cmp
adc
dec
xchg
jp
xor
cs
add
leave
xchg
sub
sub
fwait
nop
cltd
adc
jl
fstpt
inc
mov
dec
xor
pushf
inc
sbb
or
xchg
jbe
rcr
ds
mov
daa
ret
aaa
insb
push
push
popa
lock
iret
mov
aad
fs
shr
aas
mov
cwtl
in
mov
inc
and
sub
adc
movsl
adc
nop
pushl
adc
ss
mov
xchg
lock
fmuls
jns
ja
shr
xor
iret
aad
loop
inc
subl
mov
sub
jne
fsubrl
aas
cmp
enter
es
bndstx
bound
shll
cwtl
inc
jb
enter
jge
aam
fldl
insb
ret
int
push
xchg
and
push
data16
rorb
cmc
or
ret
scas
cwtl
mov
rorb
int3
sbb
jg
icebp
pushl
dec
test
imul
or
jno
out
sub
pop
popf
xlat
popa
insl
pushf
xor
les
adcl
es
daa
and
jl
dec
cmp
cmc
and
xchg
sbb
popa
jb
dec
stc
adc
jle
flds
iret
pop
xor
sub
rorl
inc
xor
repnz
xor
jbe
mov
mov
xchg
cmp
inc
lret
faddl
testb
orl
xchg
sub
mov
int3
mov
pop
mov
mov
pop
ret
bnd
shrl
fs
loopne,pt
cmp
xchg
movsl
nop
ret
xchg
outsl
mov
dec
inc
pop
pop
sub
add
ds
rcrl
into
popl
lret
sbb
test
push
push
insl
cmpsb
sub
bswap
pop
jb
jg
in
add
lea
aad
sahf
cmp
push
sbb
push
sub
adc
jne
sbb
push
out
leave
xchg
loop
jnp
jle
cs
xchg
clc
faddp
sbb
xchg
jp
cmpsb
xlat
pop
in
sub
clc
daa
mov
fdivrs
hlt
push
std
cmpsl
mov
sbb
and
xor
xchg
cmpsb
stos
cmp
push
xlat
test
cmp
mov
sbb
data16
add
fwait
js
call
lret
popl
push
jmp
push
into
jmp
jge
pushf
or
push
cltd
adc
or
mov
or
xor
fwait
cs
test
cmpsb
loopne
ret
pop
or
dec
imul
sub
jle
pmullw
sub
dec
push
ljmp
mov
jg
mov
cmc
mov
push
rolb
inc
subl
cmp
xlat
push
outsb
in
iret
mov
arpl
cmc
divb
lods
or
dec
pushf
movsl
dec
adc
data16
mov
push
test
gs
test
movsl
dec
or
in
sbb
addl
cmp
xchg
mov
sbb
dec
push
lret
pop
fdivs
sbb
inc
inc
out
pusha
cmp
cld
into
dec
push
push
aam
addr16
in
mov
mov
lods
je
adc
bound
jp
sub
loope
push
fisubrs
mov
gs
jmp
call
sahf
fcmovb
sahf
sti
mov
icebp
shrl
fnsave
jg
and
mov
push
pop
fstps
aam
dec
lods
imul
test
std
push
clc
lds
cmp
lock
ds
popf
mov
adc
dec
cmp
cmc
addl
mov
jb
out
fimull
repz
mov
xor
push
aam
sub
cmp
std
jle
icebp
add
jg
xlat
mov
clc
jae
push
xchg
movl
inc
pop
test
icebp
js
dec
test
sub
js
scas
inc
jmp
shlb
aaa
cs
insb
sahf
adc
mov
jle
jle
ljmp
imul
jbe
stos
or
loopne
xchg
mov
das
cwtl
addl
mov
iret
imul
mov
stos
ret
xchg
stos
mov
mov
es
pop
gs
mov
mov
roll
pop
ja
nop
push
mov
popa
fisubrl
dec
pop
cmp
fs
xchg
mov
mov
jnp
loop
outsl
dec
dec
stos
test
push
mov
nopl
fwait
jle
mov
xchg
pusha
adc
movsb
xchg
cli
inc
push
es
fistl
or
lahf
adc
fmul
jno
pop
lret
mov
call
arpl
xchg
rcrl
sbb
and
insb
fdivr
nop
or
inc
fwait
or
jnp
ret
sahf
popf
sub
out
outsb
jmp
jecxz
sbb
mov
inc
and
jp
mov
sbb
scas
mov
cld
je
mov
lea
mov
loop
pop
and
mov
xchg
jae
mov
lds
xor
ja
or
mov
jp
test
push
aam
test
or
push
xor
sbb
add
xor
or
cs
mov
push
push
pop
xchg
push
aam
lock
pop
mov
icebp
sub
push
pop
lods
ret
push
and
ficomps
fwait
mov
mov
into
cli
je
pop
lret
jns
add
mov
xchg
push
jl
jno
les
dec
adc
pushf
loope
dec
mov
xor
and
imul
sub
and
mov
mov
cld
sbb
imul
sarl
sub
lret
ficoms
mov
es
cs
loop
in
cwtl
lcall
mov
out
xchg
imul
mov
sub
shrd
pop
in
sub
lret
call
aad
ljmp
mov
xlat
shl
andl
call
jle
xlat
pop
adc
jmp
movsb
clc
fwait
mov
fdivs
movsb
inc
mov
aas
push
dec
sub
mov
dec
sub
das
inc
cmp
pop
push
pop
int
ret
outsl
push
adc
popf
cs
pop
mov
push
in
jnp
xchg
adc
and
je
or
movq
and
add
fdivl
std
arpl
xchg
add
push
sbb
shll
fwait
idivb
shl
jno
orb
scas
pop
inc
out
mov
mov
out
and
push
cmp
sbb
sub
cli
jne
mov
pop
repz
hlt
pop
push
mov
and
jae
sub
rolb
inc
jl
pop
iret
daa
movsb
mov
push
jmp
scas
jno
pop
jl
xor
fldcw
ret
cmp
rcr
cvtdq2ps
lds
cmpsb
cld
mov
push
fisubs
pop
sub
das
jae
ljmp
loop
pop
push
xor
hlt
imul
push
sti
ret
pop
mov
jbe
mov
xchg
mov
dec
bound
jmp
loop
insb
mov
xlat
in
cmc
xor
inc
ret
xchg
dec
leave
leave
cwtl
xlat
xor
and
xchg
adc
and
pop
cmp
xchg
mov
inc
cmp
xor
fdivs
and
xchg
aam
sbb
cwtl
inc
lcall
js
pop
fimull
adc
fst
and
inc
lods
mov
push
ljmp
push
inc
mov
jg
ficoml
enter
jbe
cmp
cltd
mov
push
mov
pop
cmpl
xchg
xchg
push
mov
pop
push
cmp
gs
std
je
cwtl
add
mov
lods
aad
push
jmp
out
ljmp
mov
push
std
or
fwait
icebp
jne
or
push
push
push
adc
shlb
push
xlat
ret
and
popf
add
adc
insb
pop
test
or
jo
cli
fists
divl
enter
addr16
aam
out
sbb
inc
xor
jnp
and
ret
into
xor
in
leave
insb
jle
jecxz
clc
adc
dec
mov
push
pop
jl,pn
jb
xor
aad
push
adc
pop
shl
pop
push
mov
and
rolb
push
dec
xchg
add
ret
fimull
aad
adc
sarl
mov
je,pn
aad
inc
sub
xchg
cmp
sarl
cs
jg,pn
imul
loop
mov
xor
push
pop
jae
scas
mov
or
addr16
xchg
mov
push
ja
sbb
mov
outsl
inc
shl
sub
pop
pop
jp
or
and
xor
or
popf
or
lcall
test
imul
shlb
mov
sub
jge
arpl
arpl
pop
movsb
shr
in
jne
enter
out
int3
pushf
fsubr
add
push
xor
andb
les
pusha
dec
repz
int3
std
test
add
lret
pop
lcall
jns
jg
mov
jb
adc
mov
lahf
xchg
shlb
cmp
sub
shl
nop
xor
cmpsl
pop
adc
fldl
xor
pop
inc
push
xchg
and
dec
and
add
mov
inc
aad
lock
adc
push
fsts
cli
sub
sub
pop
cmc
dec
jno
mov
loopne
pop
lret
add
test
dec
into
lret
fstpl
adc
clc
int3
jmp
xchg
shlb
mov
xor
sbb
gs
aaa
inc
add
mov
cmpsl
push
pushf
loopne
icebp
cmp
dec
add
in
aas
iret
imul
adc
imul
dec
sti
popa
lret
xorb
mov
adc
xor
loope
fcomp
out
xchg
mov
ret
push
sbb
push
xchg
js
idivb
ljmp
jae
std
int3
xchg
inc
mov
inc
scas
movsb
stos
or
insb
dec
or
popa
iret
outsb
cld
lods
xor
test
mov
aam
pop
test
sbb
shlb
add
cmc
xor
mov
or
sbb
mov
pop
lea
int
mov
add
into
xchg
leave
bound
into
inc
xchg
adc
inc
in
lock
stc
pop
push
mov
daa
fimuls
and
jge
mov
sub
mov
xchg
mov
rclb
rolb
test
xchg
ffreep
scas
mov
in
jb
mov
mov
pop
xor
pcmpeqw
pop
jne
das
xchg
push
push
andb
and
mov
mov
cmp
jb
lods
mov
pop
sahf
add
pop
sbb
adc
cmp
cmp
pusha
adc
dec
outsl
shlb
xchg
lahf
sbbl
pop
mov
adc
movsb
add
in
in
add
iret
jne
jg
pop
and
inc
inc
and
lret
dec
addr16
mov
cmc
dec
xor
cmp
jmp
adc
fidivl
enter
sahf
jbe
pushf
gs
arpl
outsl
adc
inc
fcomi
jle
insl
push
fucomip
jl
in
add
push
test
pop
mov
mov
out
mov
adc
cwtl
cwtl
xor
subb
ds
aas
sbb
lock
data16
push
mov
std
xor
es
xchg
ljmp
sub
pop
adc
xor
pop
jmp
nop
lds
lret
jecxz
cld
cmp
lea
test
xor
mov
dec
aas
inc
bound
rolb
rcll
int3
sub
shr
or
rcll
sbb
pop
into
lock
mov
jmp
push
xor
cmp
sub
add
jns
add
dec
sahf
data16
sbb
insl
gs
bound
addb
adc
inc
lds
dec
jb
gs
pop
push
xor
add
in
pop
icebp
stos
jo
mov
jl
idivb
stos
sbbb
jne
jne
ret
inc
js
out
cwtl
ficomps
movsb
add
dec
idivl
rolb
fucom
popa
cmp
ret
arpl
ja
data16
push
and
addr16
ficoml
cltd
jno
dec
pop
or
add
mov
sbb
fistpll
fcmovnbe
imul
add
lock
fs
push
fldcw
pushf
dec
sub
test
movsb
js
pushf
mov
mov
mov
mov
lret
jnp
jne
mov
sbb
lahf
push
jle
xor
sub
add
iret
push
shl
jmp
les
jp
mov
int
and
ss
xchg
ret
jns
das
rclb
addb
aaa
jno
stos
cmp
shll
pushf
mov
ficoms
je
sbb
mov
inc
fisubrs
jns
popf
out
fsubs
push
gs
or
vmread
clc
and
or
fisttpl
ljmp
outsb
fwait
rcrl
outsb
push
pop
test
idiv
jae
or
jae
cmp
dec
imul
sub
push
ss
jne
cli
into
fiaddl
jl
lods
rolb
add
mov
cmp
roll
test
movl
dec
testl
ret
dec
jg
lret
sub
aas
xor
aaa
out
fwait
ds
mov
jl
aam
inc
jne
adc
ds
xor
lret
cmp
rolb
sbb
in
loopne
ljmp
outsb
in
lods
or
push
enter
stos
sti
inc
add
movsl
fwait
cmc
rcrb
cli
sub
outsl
cmp
repnz
cwtl
cmp
mov
nop
stos
aad
int3
movl
call
push
jge
loop
fsubrs
push
cltd
pop
mov
jge
cmp
mov
daa
mov
test
jns
ret
std
pop
lods
or
xor
les
int
loope
push
jle
loop
inc
sbb
jnp
lock
fldl
ja
enter
mov
and
mov
mov
loopne
repnz
adc
testl
ljmp
outsl
cmc
cmc
aaa
add
dec
mov
or
std
xchg
xchg
das
pop
xor
mov
push
sub
push
xchg
sbb
int3
ljmp
push
add
mov
or
push
and
sbb
jnp
sbb
jle
dec
call
xchg
pop
xchg
icebp
push
sbb
cmp
push
in
adc
sahf
mul
rcrl
xor
sub
stos
cmp
mov
or
xchg
mov
push
jecxz
das
xor
cmpsl
add
sub
subl
in
cmp
ljmp
mov
mov
lea
jl
pop
testl
insl
mov
xor
adc
cld
daa
and
inc
pushf
cmpsl
add
sti
and
out
adc
push
xor
xchg
inc
imul
cmp
popf
ljmp
sar
cwtl
cmpsl
icebp
repnz
mov
int3
ja
add
push
arpl
mov
xchg
xchg
iret
inc
push
loope
jno
dec
mov
sbb
in
lahf
add
push
leave
xlat
mov
dec
clc
fdiv
mov
cli
adc
sti
sbb
push
lcall
dec
push
test
sbb
jns
sahf
or
rolb
out
aam
in
sbb
mov
scas
aaa
mov
rorl
fidivl
test
push
xor
stos
sbb
pop
popf
lcall
fdivrp
addl
mov
divl
fnsave
or
sbb
cwtl
xchg
sub
and
popa
aam
inc
lods
mov
je
mov
inc
sahf
and
cmp
xchg
cvtpi2ps
int
lds
imulb
sbb
sub
push
inc
fwait
push
outsl
push
or
ljmp
clc
imul
testl
lods
cmp
push
fs
loop
jo
imul
mov
jg
push
xchg
cmp
mov
daa
aam
sbb
push
fimuls
push
out
std
cli
and
mov
pop
sub
mov
sub
jmp
add
dec
ret
sub
orb
push
sarb
push
push
lcall
outsl
xchg
push
and
aad
aad
mov
mov
sar
adc
mov
cs
enter
into
adc
mov
pop
out
in
sub
mov
outsl
repz
mov
ljmp
cmp
lods
pop
push
mov
add
mov
pop
rorb
les
fsts
std
andb
and
gs
xchg
mov
mov
shll
into
pushl
imul
xor
jmp
fwait
iret
jl
movsb
aam
sbb
sbb
inc
xchg
mov
loope
dec
icebp
xchg
add
mov
sti
xor
inc
sbb
popa
movsl
scas
imul
sbb
adc
push
pop
push
ret
cmp
ljmp
test
hlt
mov
sbb
aad
pop
mov
test
fcmovnb
stos
push
out
add
les
and
mov
les
movsb
fs
pop
icebp
in
adc
pushf
out
rcrl
or
movsl
imul
mov
xor
in
icebp
pop
pop
es
leave
add
divl
push
mov
test
andps
rolb
jae
or
push
or
outsl
xchg
mov
mov
iret
mov
ret
dec
in
std
lahf
fadds
jp
orb
adc
mov
imul
push
testb
mov
jecxz
xchg
in
jae
in
adc
mov
adc
sbb
in
outsb
and
in
dec
cltd
sub
xor
out
jno
in
xor
sub
dec
cmp
inc
adc
pusha
adc
out
lods
into
push
inc
das
les
push
xchg
jg
mov
mov
pop
int
outsl
mov
imul
mov
je
movsl
loope
insl
lds
test
mov
pop
in
outsl
pop
mov
jno
hlt
adc
mov
pop
jne
jle
mov
leave
imul
incl
pushf
mov
or
stc
jmp
std
sub
sbb
cmpsl
mov
push
dec
movsb
andb
adc
mov
jmp
xchg
pop
adcl
fsubp
stos
adc
scas
pushf
mov
dec
into
push
xchg
push
and
add
in
mov
cli
lahf
roll
fstpt
inc
xchg
xchg
pop
push
cmpsb
mov
jns
add
inc
imull
cld
mov
dec
mov
ficoml
dec
jae
pushf
push
nop
out
lcall
andl
sub
cmp
in
adc
mov
push
sbb
sbb
jnp
add
sbb
lcall
into
push
movl
dec
add
sti
mov
inc
ljmp
inc
rcll
cli
mov
jl
repz
or
sub
repz
push
jecxz
pop
inc
xchg
and
sbb
sti
ss
sbb
test
sbb
js
jl
mov
out
push
inc
outsl
adc
jmp
test
add
dec
cli
in
mov
dec
and
in
cld
movsl
mulb
jno
gs
leave
xor
stc
scas
add
mov
daa
iret
adc
adc
cmp
or
sahf
imul
rcll
lcall
mov
push
xchg
imul
loope
lret
ret
mov
hlt
pop
loopne
cmp
lods
sbb
ret
ret
push
xchg
push
shlb
in
inc
mov
dec
mov
iret
test
scas
and
add
decb
lods
fwait
add
or
mov
test
enter
out
mov
jo
pop
pop
cli
mov
ss
xor
ljmp
int3
or
xchg
lock
testb
and
xchg
cmp
popf
das
push
mov
push
sti
out
jmp
loope
dec
orl
jle
rolb
push
repnz
sub
cmp
add
mov
inc
enter
stos
push
mov
setle
lock
jo
ja
jae
nop
xor
xchg
xchg
ljmp
jnp
shlb
and
xchg
cmp
and
cs
adc
imul
dec
jnp
push
repnz
test
daa
inc
cmc
xchg
enter
pop
sbb
xor
lret
cli
xchg
jnp
pop
mov
jmp
mov
loop
sar
sbb
push
loopne
jnp
stos
and
icebp
and
xor
jnp
aaa
jnp
sbb
and
imul
dec
int3
sbbb
and
xor
ja
bnd
stc
imul
sub
cli
in
imul
mov
popl
xor
shlb
push
stc
xor
xor
mov
movsl
imul
jne
out
mov
sub
cs
clc
push
out
jle
inc
imul
jnp
stos
add
pop
cmpsl
iret
movsl
pop
popf
je
dec
hlt
push
or
dec
add
xor
insl
cmp
mov
fwait
aad
fimuls
outsl
and
div
xor
dec
sarl
adc
cmpl
push
mov
int3
cltd
je
push
inc
movb
gs
int
cld
add
sub
add
and
rclb
push
adcl
stos
jae
sbb
jmp
in
adcb
rorb
push
sti
fbstp
adc
lcall
andl
lahf
and
in
cmp
in
movb
dec
mov
stc
inc
jae
es
cltd
subl
mov
pop
pop
xor
mov
mov
sub
mov
stc
cs
mov
mov
xlat
insl
enter
pop
cmp
loope
mov
aam
cmpl
rcpps
insl
je
and
call
int3
jae
or
xlat
dec
ja
jg
mov
je
push
mov
loop
or
jb
dec
sbb
outsb
js
lret
imul
add
sub
xchg
sub
loope
and
leave
roll
stc
lods
dec
jno
lcall
pushf
shll
popf
xchg
jnp
orb
dec
andl
std
clc
dec
mov
push
xchg
lods
movsl
or
outsl
mov
nop
cmp
fidivs
xchg
push
inc
inc
aaa
aam
cmovs
push
test
fsubrl
insb
out
cs
inc
enter
jge,pt
loope
mov
mov
mov
xor
out
sbb
sbb
mov
mov
sub
xchg
movsl
ljmp
push
inc
in
push
sbb
add
jp
cli
adc
push
sub
pop
fwait
enter
jns
icebp
pop
popf
lock
outsl
mov
scas
orb
and
dec
fdiv
test
test
cmp
outsb
out
jne
xchg
cmc
lods
scas
clc
test
and
cmc
cwtl
cmc
and
imul
pop
cmpsl
push
dec
and
inc
cs
xchg
mov
push
cmp
pop
loopne
mov
sbb
mov
jno
push
push
data16
scas
mov
jno
cmp
pop
das
sbb
sub
pop
sbb
repz
gs
enter
or
cmpsb
jne
pop
inc
iret
add
push
sti
jns
xchg
sbb
push
clc
jge
imul
or
rcrl
sbb
mov
shll
push
pop
loope
cmp
ret
test
lret
xor
mov
test
mov
dec
lods
int
push
sti
rcll
or
jns
imul
fstl
push
adc
xor
xchg
daa
enter
clc
cmpsb
mov
popa
lock
or
arpl
loop
mov
mov
loopne
pop
xorl
test
ret
sub
pushf
inc
je
adc
xchg
imul
sti
fidivl
mov
mov
fisttps
shl
popa
inc
mov
mov
imul
add
imul
jbe
push
out
push
in
into
sbb
pop
xchg
ds
int3
pop
dec
repz
add
inc
mov
and
jge
stc
or
adc
mov
sub
mov
sbb
lods
sub
sti
sub
shl
inc
xchg
fidivrs
cmp
adc
cmc
in
and
dec
mov
or
jle
ds
mov
mov
sub
or
das
push
ret
dec
xor
and
pop
push
lods
test
push
dec
push
clc
cltd
inc
ja
push
push
insl
cmp
and
mov
fs
not
xchg
sbb
rolb
pop
xlat
jge
and
jl
push
testl
js
aaa
cli
xor
cmp
ljmp
inc
add
dec
mov
jg
adc
mov
dec
mov
sbb
je
and
sub
jg
insl
insb
add
dec
sbb
test
xor
sbb
sahf
call
push
push
or
rolb
adc
mov
pop
std
cwtl
add
filds
sbb
add
xchg
clc
insb
sub
add
lods
sbb
cmp
mov
jae
pop
cmp
clc
inc
pop
xor
jg
ja
or
pop
stos
dec
std
dec
mov
sub
das
jns
xchg
pop
jbe
add
clc
lret
push
mov
loop
repnz
add
fcoms
mov
or
lods
sub
fisttpll
add
addr16
call
fidivs
ficoms
aaa
aaa
fcoml
scas
sbb
add
jb
mov
rolb
cmp
sub
xchg
push
inc
push
popa
sub
pop
xchg
in
mov
mov
ficomps
and
mov
rcll
dec
dec
add
in
daa
out
fldcw
mov
es
es
stc
loope
adc
aas
xchg
mov
add
ja
mov
fbstp
adc
stos
push
mov
pushf
dec
daa
cmp
jns
push
shrb
fisttpl
mov
xchg
sub
xchg
subb
or
sahf
mov
pushf
xchg
mov
pop
sbb
xchg
loopne
mov
imul
sbb
rcrb
mov
out
lret
movl
jg
mov
out
aaa
adc
push
pop
scas
add
push
xor
inc
stos
pop
sub
adc
xchg
loope
mov
mov
sti
ds
lds
icebp
push
lock
mov
outsb
shr
mov
sahf
inc
sbb
pop
or
add
jbe
push
stos
xchg
outsl
dec
dec
push
ss
pop
and
cwtl
cmpl
loope
outsb
repz
or
pop
popf
cmc
cmpsl
inc
jle
les
mull
xchg
pop
sub
daa
cs
sub
pop
xor
lods
nop
fdivl
mov
cmp
pop
lret
in
stc
adc
jbe
push
mov
cmp
mov
jp
and
push
pop
cmpsb
out
filds
mov
add
lcall
cmp
or
popf
lods
out
xor
test
and
dec
lea
mov
bound
mov
and
mov
cmc
mov
pop
mov
dec
adc
jne
ret
fdivr
jmp
cmpb
ret
int3
pop
pop
dec
mov
dec
outsb
fwait
or
mov
dec
pop
in
dec
and
aad
aas
fs
add
bound
mov
mov
mov
fdivl
stos
addb
scas
jbe
mov
fldenv
int3
mov
xor
xchg
pop
stos
in
and
pop
push
mov
outsb
pop
xchg
icebp
cltd
das
push
fucom
jge
movsl
and
mov
lret
stos
adc
mov
lods
fidivs
sti
push
dec
mov
mov
aam
lcall
pushf
sub
enter
pop
xor
mov
mov
in
dec
test
xor
adc
xchg
shlb
fs
arpl
std
or
scas
iret
inc
sbb
mov
jns
lods
ret
stc
cmp
or
or
ja
dec
into
in
or
repz
incl
sbb
ret
or
stos
mov
cmp
xchg
aas
push
adc
mov
dec
push
cmp
mov
push
lea
mov
adc
push
mov
pop
lret
inc
das
test
jae
jecxz
imull
adc
fsubrs
push
or
test
repz
mov
ja
inc
and
inc
insb
arpl
push
jg
jl
push
lods
repz
popf
lret
fmuls
sbb
inc
repnz
dec
jmp
xor
sahf
cmp
inc
call
fs
jo
inc
push
sub
lea
push
outsb
fstps
sbb
stos
pop
hlt
loope
lcall
cmc
mov
push
inc
clc
jno
leave
lcall
mov
xor
jae
sbb
and
mov
fcomp
cmp
lret
xor
push
daa
loop
loopne
xor
jge
fsubs
loope
rorl
jg
dec
fmul
int3
add
sbb
cmp
movsl
shr
mov
loop
popa
mov
dec
icebp
test
inc
aaa
xor
in
outsl
fs
dec
aam
xor
scas
out
ljmp
icebp
out
lods
mov
rcr
xor
mov
pop
xchg
xchg
sbbb
add
fmull
ljmp
jns
sbb
mov
loopne
idivb
pop
mov
das
xor
popf
add
cld
cmp
fcomi
sub
inc
xchg
mov
in
push
adc
pop
or
aad
mov
rol
xor
adc
jo
mov
push
cmp
cmc
xchg
or
jl
push
push
push
imul
fisubrs
and
sbbl
push
fildll
addr16
push
fwait
jnp
ljmp
or
scas
xor
mov
aam
lea
mov
test
jmp
insl
dec
test
call
cld
or
nop
and
and
scas
add
pop
lret
mov
aaa
or
pop
cmp
ficomps
loopne
aad
dec
add
mov
jb
cmp
jge
xor
je
mov
aam
push
mov
rcl
jecxz
pushf
cmp
insl
sub
adc
dec
cmp
aad
int3
jge
lahf
test
je
aad
mov
dec
dec
and
jge
dec
fisttpl
xchg
mov
popa
jle
xchg
notb
add
pop
or
pop
enter
mov
in
push
fdivl
push
and
lds
ficomps
sbb
in
mov
xlat
insb
add
mov
mov
and
jge
xchg
jnp
xchg
inc
push
aaa
adc
sbb
jmp
xlat
push
push
mov
adc
repnz
sbb
and
loope
icebp
mov
xchg
mov
cwtl
jo
cmp
sbbl
cmp
dec
cli
mov
xchg
shrb
addr16
adc
sbb
orl
repz
frstor
mov
stos
lret
push
pop
pop
lahf
popa
fdivrl
dec
jno
cmp
or
jl
xor
aaa
lods
mov
daa
xor
outsl
dec
arpl
pop
jle
sbb
sbb
dec
dec
inc
mov
sbb
cmpsl
adcl
mov
pop
gs
add
xor
jg
clc
pop
inc
jns
push
sahf
mov
push
lret
jmp
in
cltd
adc
repnz
mov
add
mov
fistl
adc
enter
xchg
out
movsb
adc
clc
adc
hlt
or
mov
mov
in
out
in
leave
nop
pop
inc
mov
imulb
mov
fdivl
fists
jbe
sbb
aas
jp
fcomps
lods
mov
inc
test
or
int3
and
les
dec
dec
lret
inc
xor
xorb
cmp
in
hlt
fdivs
mov
and
pop
sub
inc
aam
jne
stos
cltd
jmp
jns
pop
adc
inc
and
add
icebp
faddl
mov
xlat
cltd
sub
lcall
mov
and
mov
call
aaa
inc
adc
push
pop
pop
test
jnp
sub
cmpsb
enter
jb
jp
pop
jle
stos
loop
or
int3
cmp
pop
in
cmpw
test
mov
popl
jle
mov
ljmp
mov
lahf
aaa
rorl
pop
fadd
hlt
adc
scas
pop
stos
icebp
dec
scas
sbb
and
xchg
or
push
mov
xor
push
sti
repnz
pop
xor
loopne
inc
add
cmp
xchg
or
test
or
movsb
inc
xchg
jle
cwtl
sub
jg
repnz
dec
outsb
sbb
subb
adc
lcall
shrb
mov
xchg
dec
mov
jo
adc
lock
or
aas
in
in
xchg
xor
hlt
xlat
sti
sbbl
xchg
faddl
sahf
test
ds
dec
push
std
sub
push
pop
adc
mov
into
test
inc
mov
mov
test
xlat
arpl
test
pop
xchg
cltd
fstpl
mov
pusha
jge
fsubs
jmp
push
sbb
xor
rclb
push
cmp
mov
inc
mov
jnp
cli
add
das
int
aad
cli
jbe
push
mov
bound
jge
rcl
fistpll
add
jge
in
jecxz
out
pusha
movsl
ret
fisubrs
int3
mov
roll
and
adc
rorb
mov
and
addr16
push
xchg
cmp
stos
subl
mov
and
add
pminsw
imul
aaa
jb
in
mov
orl
mov
jmp
std
lret
mov
dec
add
jae
cmp
fidivl
decb
sbb
mov
cmp
pop
test
sbb
fistl
sbb
jle
and
xor
add
mov
jp
or
add
push
mov
cmp
mov
or
sbb
jbe
xchg
xor
mov
aas
roll
adc
jmp
xchg
sbb
jb
ss
divb
jns
jecxz
xor
dec
pushf
pop
pop
mov
mov
xchg
xchg
xchg
mov
jle
and
bound
push
xor
hlt
mov
aam
xchg
mov
xor
bound
or
xorb
sti
xchg
sub
test
mov
cmpsb
cmp
mov
xchg
mov
movsb
inc
inc
lds
xor
inc
inc
sub
nop
adc
icebp
pop
xchg
imul
inc
cmp
test
xor
imul
mov
or
int
cmp
pop
add
inc
mov
sub
test
scas
es
out
int
jmp
cwtl
cmp
fistps
in
pop
test
mov
arpl
dec
cmp
add
int3
dec
jne
and
inc
loopne
fmuls
ja
es
aas
cmc
imul
sub
test
push
lahf
out
mov
mov
jne
jns
pop
shlb
mov
test
and
inc
or
sub
insb
mov
ret
and
data16
push
inc
lret
leave
and
mov
xchg
fistpll
mov
jnp
xchg
cli
sti
sbbl
fldt
jle
mov
fsubrs
fldcw
es
add
or
dec
out
dec
ljmp
and
test
mov
jmp
nop
jge
jnp
mov
in
mov
add
loopne
insl
mov
pop
rcl
sub
jno
lahf
xor
aas
lret
inc
jb
repz
adc
jl
dec
jecxz
incb
pop
sub
pop
daa
mov
adc
fbstp
mov
out
xchg
adc
dec
lcall
cmp
cmpsl
adc
push
aas
sahf
imul
loope
dec
jb
add
adc
cmpsb
mov
cmpsl
jne
push
adcl
xlat
enter
iret
dec
cmp
and
and
dec
mov
push
movsl
movsb
mov
xchg
add
xor
xchg
push
xchg
pop
scas
fnsave
out
fwait
mov
add
cld
inc
push
dec
sub
fisubrl
hlt
dec
dec
sub
and
mov
lret
scas
fincstp
fisttps
xchg
aaa
add
sub
popf
lods
add
adc
add
imul
xor
mov
cmc
xchg
insl
rcr
jg
mov
adc
mov
jp
ds
out
sub
mov
shll
psraw
push
js
or
leave
mov
dec
push
mov
jmp
and
out
pop
or
mov
sbb
dec
mov
push
and
sbb
repz
and
clc
outsb
adc
mov
mov
and
js
jg
cmc
inc
inc
cmp
cmc
pop
add
pop
and
jmp
loopne
pop
jecxz
inc
add
push
pop
inc
xor
xlat
mov
in
int3
jg
call
and
mov
daa
faddp
xor
inc
cmp
lds
push
sbb
loope
ret
pop
stos
push
rorb
jno
and
pop
jmp
jae
pop
aad
cmpsb
scas
push
add
jmp
push
sub
sub
aaa
daa
xor
cli
dec
adc
mov
xchg
add
cmp
lock
and
mov
pushf
fidivl
dec
adc
les
aam
in
out
je
insb
pop
lcall
fistps
cmp
enter
ret
gs
jecxz
cmpsl
ret
sarb
xlat
adc
sbb
fdivs
xchg
pop
pop
adc
mov
scas
movsb
mov
sbb
fcmovnu
loopne
sub
cli
pop
sub
push
xor
pop
push
sbb
test
ja
inc
mov
fs
cs
pop
jg
movsb
call
adc
loope
and
xor
mov
dec
cmp
cmp
cmp
scas
xor
jecxz
adc
arpl
mov
les
add
jb
jns
in
mov
add
aas
mov
mov
cltd
or
test
sub
pop
es
popf
sbb
stos
stos
sub
inc
add
sahf
pop
int
mov
ltr
sub
pop
mov
mov
push
scas
xchg
inc
adc
sub
mov
nop
adc
mov
xchg
or
add
push
sbb
adc
mov
push
add
mov
cmp
cmp
pop
sub
push
xor
repz
or
int
or
stc
gs
jo
mov
mov
insl
adc
enter
stos
pop
out
jnp
add
std
stos
adc
and
imul
stc
pop
sub
jge
pop
fbstp
ret
inc
out
shll
sbb
adc
fadd
test
pmaddwd
mov
dec
insl
jnp
lcall
cs
or
sti
jnp
rclb
out
adc
cmc
adc
test
out
mov
sub
aad
pusha
inc
or
lcall
lahf
sti
jl
xor
cmp
mov
push
lock
xchg
and
mov
add
cltd
mov
push
inc
dec
sub
es
mov
jo
int
and
dec
scas
xchg
nop
loopne
mov
icebp
fimull
sbb
sbb
faddl
xchg
jb
jns
push
rolb
iret
shrl
pop
xor
jmp
jg
xor
stc
sbb
sbb
cs
ficompl
mov
xor
xlat
rolb
lcall
push
sub
pop
add
push
enter
ret
shl
imulb
lods
xchg
ja
mov
xchg
bound
adc
loopne
pop
jge
sub
inc
cmc
popa
stos
inc
adc
push
dec
fistpll
iret
xor
popl
dec
push
test
jnp
leave
or
push
jle
or
lods
movsb
push
in
xor
frstor
and
rorb
mov
xchg
shrl
sti
inc
aaa
sbb
movl
and
adc
mov
push
adc
xor
mov
int
aaa
or
xor
sarl
es
sub
fs
out
roll
lahf
or
fimuls
incl
jne
cld
adcl
and
into
sub
mov
mov
xchg
sti
xor
into
add
sub
xorb
add
add
sub
scas
icebp
dec
add
lcall
pushf
addr16
mov
jl
jmp
mov
adc
jg
pop
fimull
xchg
adc
push
pop
sub
xor
mov
out
pop
lods
out
icebp
faddl
popa
adc
dec
out
enter
jb
push
imul
inc
jecxz
repz
and
fildl
iret
mov
adc
dec
push
cmpsb
sbb
and
dec
lock
push
or
adc
sbb
pop
call
dec
mov
jnp
shll
xchg
lahf
sbb
fimuls
xchg
add
push
sbbl
mov
out
mov
cmp
lahf
mov
ja
push
lods
leave
pop
mov
xor
sub
adc
add
xor
adc
popf
xchg
or
dec
mov
push
dec
add
and
and
in
popa
jle
xor
xor
sbb
jo
pusha
arpl
clc
repnz
and
lds
int
sub
jae
jmp
sub
push
mov
cltd
insl
sub
dec
mov
js
mov
jg
and
std
imulb
fdiv
xchg
inc
movsl
mov
loope
adc
push
nop
and
ss
jae
jge
mov
mov
and
jmp
movsb
in
stos
jnp
dec
cmp
insl
test
or
jae
inc
movsb
xchg
cmp
xchg
imul
icebp
aaa
sti
cltd
mov
notb
xlat
push
xchg
dec
lret
clc
imul
cmp
ljmp
and
mov
mov
sub
xchg
cmp
mov
shrl
test
dec
sahf
inc
in
dec
negl
in
jmp
mov
xchg
sar
notb
sub
pop
dec
enter
dec
jecxz
and
jnp
push
sbb
stos
mov
jae
fs
pop
fldt
shlb
mov
pop
iret
push
jnp
xchg
dec
test
or
loop
adc
fsubrp
xor
push
push
repz
push
add
aas
testl
or
adc
cmp
inc
int3
sub
dec
sbb
xchg
lret
enter
mov
rcrb
fcmovbe
pop
adc
int
xlat
jmp
mov
rclb
xchg
xchg
add
mov
movsb
stos
lods
stc
cld
xchg
pop
jmp
xor
call
jge
insb
lcall
es
roll
ret
mov
push
xchg
ret
and
add
mov
in
repnz
test
or
push
jp
in
out
cmp
imul
lock
fldenv
pop
dec
das
dec
cmpsb
mov
sahf
jnp
gs
xchg
js
dec
push
pusha
push
sbb
scas
leave
cmp
or
fs
ret
cmp
rolb
test
pop
in
xchg
cli
jle
ljmp
cmp
mov
cmp
or
add
test
les
push
dec
das
cltd
jmp
aam
adc
dec
or
adc
cmpsb
ljmp
jbe
orb
jge
daa
test
test
enter
cmp
enter
jnp
es
nop
sub
or
scas
fwait
aaa
pop
mov
cmpsl
jbe
mov
adc
lcall
mov
mov
in
mov
in
and
mov
aad
jb
xchg
pusha
pushf
out
int
jmp
arpl
mov
inc
cs
push
xchg
adc
aam
inc
pop
and
and
jb
mov
stos
std
sbb
ljmp
cli
pop
adcb
sub
mov
mov
es
or
dec
lods
dec
cmpl
pop
xor
mov
mov
fadds
and
sbb
dec
adc
lds
mov
or
add
push
sub
gs
or
cmc
xor
jnp
jb
daa
or
sbb
test
scas
and
inc
mov
xor
sbb
je
dec
and
or
sbb
xor
rcr
cltd
pop
aad
xor
pusha
adc
adc
fisubrl
lods
push
sti
lods
cltd
mov
adc
nop
xchg
mov
repz
xchg
in
sar
mov
sub
push
in
test
sub
in
and
push
xchg
xchg
aas
cwtl
movsb
xchg
scas
test
jne
pop
repnz
pop
repnz
sahf
in
enter
mov
lret
mov
lahf
or
xor
pop
popa
sbb
dec
pop
and
push
outsl
inc
adc
add
aam
loope
fcompl
or
in
push
rol
scas
mov
mov
cmpsb
jae
loop
dec
outsb
mov
inc
push
movsb
pop
dec
xchg
mov
insb
xchg
push
lock
fdivrp
sbb
jbe
cmp
clc
in
pop
push
insb
push
inc
pop
or
filds
pop
cmp
mov
dec
leave
mov
sahf
bound
mov
mov
and
dec
xor
mov
mov
sbb
mov
xchg
shl
sarb
lcall
and
jb
sti
cmp
xor
dec
xchg
adc
aam
js
mov
jle
add
jg
popf
adc
xchg
inc
and
das
rclb
mov
in
push
outsb
sub
push
aas
sub
dec
cmp
fmuls
ljmp
mov
inc
imul
jmp
add
test
add
jno
out
cmp
in
in
xchg
iret
icebp
jbe
sub
jp
mov
xchg
xor
rolb
inc
dec
test
js
in
jno
cmp
lds
dec
pop
dec
pop
addr16
andb
sbb
xchg
sbb
adc
inc
aad
xor
shrl
addr16
mov
fstps
lock
and
int
sbb
lret
call
cmp
pop
insb
sub
push
inc
ds
or
cwtl
mov
xor
mov
repz
insb
enter
clc
sub
ja
mov
mov
cs
lods
sbb
jl
sbb
jo
pop
mov
lock
addr16
cli
fnstcw
jl
adc
std
cltd
cmc
mov
xchg
or
mov
imul
daa
negl
jl
cmp
movsb
add
jne
jo
add
xchg
add
clc
mov
aam
popa
jns
xor
lcall
aam
mov
push
aas
sub
into
or
xor
dec
pop
fsubrs
sbb
adc
pop
mov
sbb
xorl
movsb
push
xlat
shrl
in
mov
frstor
sub
arpl
in
mov
subl
leave
dec
push
xchg
fildl
jp
mov
xchg
and
es
lods
xor
add
fcomps
pop
pop
je
pop
jmp
ret
std
out
mov
ljmp
add
cmp
sbbb
dec
lret
mov
addr16
shlb
cmp
ret
test
test
mov
push
sti
arpl
out
lods
mov
std
sbb
xchg
test
jne
xchg
es
and
stos
iret
mov
ss
or
dec
xrelease
sbb
ud1
stos
cmp
scas
cmp
nop
rcrb
pop
lea
popa
adc
mov
movsb
sbb
das
mov
sahf
loop
sbb
into
in
push
out
pusha
shrb
push
inc
mov
test
andb
outsb
sbb
outsb
insl
or
cltd
dec
mov
push
mov
and
xor
insl
push
cmpsb
fisttps
or
and
cmp
mov
ja
sbb
add
xchg
mov
pop
and
sbb
mov
es
cmp
inc
mov
push
sbb
notb
daa
call
fcmovnu
inc
inc
or
mov
adc
cwtl
jnp
mov
lret
push
adc
imulb
add
lods
pop
mov
pusha
in
push
rorl
mov
cmp
and
cmpsl
sti
int3
movd
mov
rcr
push
cmova
gs
mov
dec
add
scas
adc
mov
sub
or
cmp
pop
stos
test
cmpsb
lahf
jg
aam
popa
xor
flds
scas
push
mov
dec
scas
insl
adc
fcoms
mov
inc
sbb
dec
fidivs
pusha
sub
test
xor
cltd
add
in
aas
clc
lcall
jb
sub
or
out
xlat
scas
lret
lcall
push
xor
cli
mov
leave
push
sbb
cli
test
fisttpl
popl
xchg
cli
sub
xor
rcr
faddp
cmp
mov
inc
stc
jp
sarl
in
adc
enter
into
sbb
ret
dec
sahf
add
imul
cmp
sbb
inc
mov
add
or
in
fwait
sbb
pop
fcom
mov
dec
loop
fwait
push
js
inc
cmp
enter
push
add
sbb
shrl
enter
xor
in
dec
loope
loope
xchg
jmp
xchg
inc
into
push
ss
out
mov
mov
add
sub
fs
push
inc
xchg
popa
loop
cmpsb
mov
lds
push
xchg
repnz
pusha
pop
push
sbb
mov
mov
cmpsl
or
int
cmp
repnz
and
shrb
xlat
sub
aam
mul
fucomp
ret
pop
xchg
mov
and
push
sub
sub
fwait
or
icebp
outsl
mov
lret
push
inc
fldcw
test
ss
mov
ljmp
rorl
ljmp
lahf
stos
cmc
fs
push
hlt
or
jge
ficoms
bound
cmp
stos
dec
add
jno
pop
cmp
insb
mov
cmp
ret
xchg
add
mov
inc
inc
lret
jae
movsl
or
jne
mov
div
sbb
mov
repnz
mov
filds
dec
aaa
sbb
cltd
aam
stos
mov
push
test
mov
push
ss
outsl
and
jne
pop
xlat
in
loop
sbb
test
in
sub
mov
dec
sahf
into
sbb
cmp
shrd
cli
inc
int
xor
imul
fmuls
sub
xchg
cmp
xchg
mov
add
out
lahf
cli
rcll
rorl
out
negb
test
inc
arpl
imul
mov
in
insb
cmpsl
pop
mov
scas
loop
inc
ret
push
push
push
out
push
pop
ret
lods
jg
pusha
xchg
or
cmpsb
or
mov
aam
js
dec
push
cmpsb
js
leave
pop
popf
xor
sub
mov
sub
pop
jns
pusha
xchg
ljmp
xchg
xor
inc
cs
and
nop
xor
call
arpl
jbe
pusha
inc
mov
pusha
and
cmpsb
ss
notl
mov
sbbl
or
cwtl
dec
fbld
cmp
dec
lea
push
jnp
push
mov
cmp
inc
push
inc
or
sub
add
cmpsb
sbbl
inc
sub
add
loope
sbbb
fistps
out
add
fcomps
adc
and
and
and
jmp
jg,pn
mov
std
clc
xchg
xor
ds
in
das
pusha
adc
orl
pop
dec
add
mov
mov
outsl
out
adcb
and
mov
mov
int3
je
xor
xor
nop
and
lret
lcall
stos
ja
xchg
in
add
add
ret
je
cmp
mov
lods
cmp
icebp
or
pushw
inc
pop
sub
mov
adc
imul
add
imul
xchg
and
sub
mov
inc
cmpsl
adc
rcr
sbb
sub
dec
jb
adc
outsl
arpl
pop
push
add
mov
out
xor
frstor
insl
pop
lods
stc
cmp
loopne
mov
sbb
roll
add
cli
sub
imul
fsubl
mov
insl
add
jle
mov
xor
sub
pop
nop
aad
jns
movsl
sbb
and
inc
or
pushf
add
lea
cmp
arpl
arpl
lock
gs
fbstp
xchg
mov
adc
sar
mov
sti
sahf
mov
adc
pop
sbb
jge
in
or
sbb
int
xor
xor
call
sbb
or
mov
outsl
mov
sub
ret
mov
pop
ljmp
dec
and
jae
pusha
adc
shrb
test
outsb
repz
sub
out
out
sub
rclb
jg
xor
dec
adc
adc
pop
lock
pop
in
lods
xlat
jg
fwait
test
cmpsl
jnp
adc
fnstenv
hlt
cld
ret
ja
orl
sti
ljmp
iret
cs
jnp
push
ja
fisttpll
and
mov
fwait
rorl
and
jnp
xchg
shl
addb
cld
cmp
in
cs
xchg
mov
cmp
ret
ss
stos
jo
xlat
jl
lea
xchg
mov
mov
mov
xor
fs
adc
fnstsw
loope
inc
and
out
loop
jmp
cwtl
mov
shrb
mov
icebp
xchg
sub
std
xor
sbb
fs
xor
fldenv
aaa
popa
dec
sub
gs
push
scas
and
mov
ja
arpl
push
and
test
xchg
stc
pop
imul
mov
jmp
xor
jmp
cmp
movsl
aam
pop
loopne
xchg
bound
lret
or
xlat
sub
pop
mov
clc
je
pop
pop
mov
clc
int
push
adc
pop
jp
aas
add
loope
test
push
pusha
inc
or
xor
pop
ljmp
adc
jecxz
mov
xchg
stos
or
xchg
enter
dec
push
jle
sbb
outsl
jno
andb
xor
lea
hlt
pop
or
dec
int
push
iret
out
das
in
mov
addr16
fldcw
pop
jno
mov
and
jl
pop
pop
ret
es
stos
aas
outsl
xchg
pop
pop
push
enter
repz
mov
setae
and
cmp
lods
sbb
xor
imul
aas
rep
ss
into
jl
and
dec
pop
imul
cwtl
dec
js
sahf
mov
sub
mov
xchg
insl
jl
out
js
push
out
cwtl
test
sahf
sti
xchg
mov
loope
jns
dec
scas
clc
pop
lods
movsb
cmp
mov
xchg
xchg
bndldx
xchg
inc
iret
sub
repz
andb
xchg
xchg
adc
dec
push
shl
cmp
mov
sarl
in
scas
mov
jge
fildl
rcr
cltd
xchg
in
mov
cltd
add
lock
inc
scas
cld
jbe
jns
std
pop
mov
sub
imul
fmulp
push
test
xchg
loop
cmp
adc
pop
shrl
adc
xor
jo
add
loope
xor
push
call
aad
adc
outsb
jl
loopne
hlt
adc
in
cs
ds
xchg
stc
dec
lock
add
cmp
jge
movsl
les
sub
mov
insb
iret
mov
cli
jns
sub
jb
mov
pop
mov
inc
je
xchg
stc
mov
stos
in
add
dec
jp
xchg
cmp
call
notb
das
jmp
sub
in
xchg
push
sbb
gs
into
imul
fisttpl
adc
mov
or
lea
fmull
push
adc
scas
cmc
dec
inc
pop
jg
sbb
data16
sahf
mov
add
adc
mov
lret
xor
outsb
rcrl
dec
jp
fildl
xor
adc
adc
pop
std
clc
into
adc
adc
xchg
push
popa
addr16
lahf
cld
in
fadd
scas
fwait
mov
jbe
sub
je
fnsave
cmp
mov
mov
les
sub
push
mov
fwait
jmp
jg
and
adc
ficomps
lret
fistl
inc
mov
ds
int
es
or
dec
mov
dec
jo
adc
jmp
inc
push
repnz
dec
xchg
mov
mov
notl
cmc
mov
and
adc
xor
fwait
sub
inc
adc
out
in
push
call
and
les
cmpsl
mov
mov
jnp
inc
mov
mov
xchg
test
push
xorl
mov
xchg
push
fidivl
aaa
pop
jmp
mov
loope
jbe
jp
ds
into
inc
popa
adc
push
loope
xchg
and
mov
lret
mov
mov
repz
inc
push
add
fucom
ljmp
push
loopne
push
and
shll
mov
popa
mov
pop
add
sbb
mov
pop
repz
test
scas
or
push
fisubs
add
push
inc
sahf
sbb
jnp
outsb
gs
push
pusha
test
xchg
cmpsb
fstp
sbb
shl
js
cmpsl
movsb
add
push
shll
pop
inc
add
inc
scas
push
fs
arpl
pop
ds
and
and
inc
cmp
mov
lahf
int
cmpsl
xorl
leave
popf
fsubs
stc
pop
xchg
cmc
xor
adcl
addl
pusha
pop
mov
and
mov
sub
fwait
jmp
into
mov
push
je
xchg
movsl
loopne
and
movsb
xor
dec
outsl
loop,pt
icebp
ret
js
sahf
jns
gs
jge
rcr
xlat
add
sub
bound
into
inc
mov
fwait
and
inc
cmpsl
pop
test
test
mov
and
fstl
and
add
jl
nop
mov
xchg
push
pop
arpl
out
mov
jmp
loop
sar
nop
jbe
xlat
push
pop
mov
loopne
inc
into
fists
sbb
push
gs
add
and
es
shr
cmp
call
mov
pusha
fwait
scas
jae
add
clc
lock
mov
lds
test
jno
push
and
dec
notl
scas
dec
cmp
pop
push
push
cmpsb
sub
cmpsb
push
and
pushw
push
lahf
imull
outsb
fidivs
outsb
repnz
adc
dec
adc
fstps
pushf
cmp
fadds
push
pop
data16
inc
add
mov
pop
jne
mov
in
testl
icebp
dec
mov
sub
sbb
sub
lcall
mov
pop
mov
cmpsb
mov
jecxz
sub
lds
arpl
bound
inc
jl
fldcw
and
dec
inc
dec
and
dec
jp
lcall
mov
add
test
loop
enter
insl
xchg
mov
fisubrl
jns
cmp
cmp
ljmp
inc
mov
dec
fs
out
out
adc
cmp
mov
mov
push
test
loop
push
add
icebp
pushf
xor
movb
xchg
sbbb
xchg
and
cltd
jne
xchg
jb
adc
jecxz
cmpsl
push
shll
es
enter
repnz
push
mov
push
stos
or
inc
inc
cs
mov
cmpsb
xchg
push
test
pop
sub
int
dec
loop
add
iret
and
repnz
sub
hlt
or
sub
jb
ljmp
repz
mov
out
push
fcomip
add
pusha
jle
aaa
mov
popf
jecxz
mov
xor
cmp
sub
adc
sub
lcall
jmp
xchg
pop
icebp
mov
mov
pop
sbb
inc
stos
mov
sbb
mov
lahf
imul
adc
fldcw
xor
xor
add
dec
dec
sti
lahf
in
push
out
mov
ret
sbb
or
push
js
addr16
inc
jnp
int3
push
pop
push
and
xchg
cld
jecxz
insl
js
and
ds
in
jl
push
stc
ret
sbb
les
sti
out
sub
sbb
sbb
push
in
rcl
test
fucomip
stos
xor
and
scas
lret
xchg
scas
and
and
inc
jae
push
add
adc
xlat
stos
xchg
ja
addr16
sahf
pop
mov
lcall
cmp
mov
xor
mov
dec
call
mov
sahf
cmpsb
gs
jge
xchg
pop
xchg
out
mov
rclb
pop
repnz
std
add
mov
push
push
jle
mov
inc
jb
dec
mov
xchg
in
or
shr
stos
das
int
stos
xchg
push
in
lret
jecxz
pop
push
ret
push
sbb
testl
fldenv
shll
ds
push
add
es
js
out
adc
add
pop
or
mov
jbe
sbb
pushf
mov
fistl
cli
adcl
pop
add
pop
sti
fucomip
mov
jb
test
pop
popa
test
cmp
fbld
mov
adc
jmp
and
adc
jae
pop
add
cmpb
push
dec
and
mov
stos
mov
aas
dec
sarb
insl
in
jg
push
cmpsl
xchg
inc
ret
test
mov
adc
add
add
sarb
lock
cmp
pop
fsubrl
lea
imul
xchg
scas
cmc
fldcw
xor
lods
mov
pop
dec
icebp
int
adc
or
sarl
jns
pusha
xchg
scas
addl
fcoms
sub
addr16
call
jp
jg
pop
adc
cmpsb
xor
mov
add
sub
cmp
pop
rolb
xchg
and
rolb
push
aam
jg
mov
inc
mov
mov
roll
xchg
push
add
sub
mov
mov
ret
pop
in
imul
xor
in
dec
or
rcrl
inc
jnp
and
fildl
xorb
or
subps
adc
fnstsw
repnz
les
mov
in
mov
mov
mov
push
mov
add
push
pop
rclb
adc
int
mov
dec
xchg
mov
add
jno
aas
pop
and
sti
cld
fwait
mov
aad
movsl
sbb
cs
jmp
dec
outsl
or
test
repz
pusha
shll
pop
int3
dec
test
lcall
jl
call
pushf
or
out
or
push
les
repz
test
rcrl
mov
dec
aad
xchg
jg
fcmovnb
mov
sub
xchg
or
cld
mov
cmp
out
dec
dec
push
cli
repz
pop
imul
dec
rorb
faddl
xchg
xchg
and
imul
dec
out
pusha
sar
mov
leave
push
repnz
inc
mov
and
sbb
dec
and
dec
out
push
pop
and
cmp
mov
into
in
mov
jbe
mov
push
xchg
mov
lds
xor
sub
jecxz
shrb
mov
mov
rcrl
sub
xchg
out
cwtl
xchg
jle
cmp
daa
pop
and
and
jo
xchg
push
mov
icebp
xlat
sbb
rcrb
and
icebp
movsl
ja
inc
push
call
pop
cmp
mov
out
jae
xor
std
ret
pop
inc
dec
xor
std
fcompl
push
aad
or
jnp
repnz
adc
jle
and
aad
jnp
push
push
out
jb
mov
divb
std
loopne,pn
jge
mov
inc
test
mov
mov
dec
mov
lea
nop
push
loopne
adc
addr16
js
pop
das
hlt
or
xor
sti
fldenv
xchg
clc
sub
insl
stc
sub
in
dec
idiv
adc
push
inc
into
cmp
lods
xor
dec
sbb
in
push
adc
push
xchg
push
inc
xchg
cld
scas
sbb
mov
jne
test
pop
stos
cmovs
dec
test
add
xchg
nop
dec
insl
js
rcll
push
in
adc
insl
dec
cld
jne
sbb
fnstenv
lahf
testb
xchg
lods
jb
mov
imulb
rol
test
and
pusha
sbb
into
cmp
scas
mov
jae
sbb
push
mull
insb
sub
sbb
or
stos
fcoms
mov
add
push
xchg
pop
sub
adc
push
aas
das
ret
pop
call
lods
dec
xchg
xchg
xchg
mov
gs
push
inc
push
jbe
sub
sbb
fisttpl
and
pop
shlb
jecxz
xchg
push
pop
xchg
xchg
insl
mov
xor
ss
ljmp
gs
cmp
push
int3
jg
clc
push
fsubl
pop
mov
sbb
jb
mov
les
add
cld
fadds
adc
repz
sub
mov
and
mov
pop
adc
inc
sbb
subb
aad
push
cwtl
insl
adc
pop
pop
fucom
and
std
test
hlt
ficoml
cmc
in
mov
inc
or
inc
testl
cmp
cld
cli
or
jmp
das
enter
popf
cmp
pop
ljmp
in
xchg
mov
outsl
add
outsb
adc
sub
push
xor
je
xchg
ljmp
sub
in
sbb
fs
jle
push
stos
dec
push
push
mov
ds
inc
cwtl
adc
pop
cmc
cmp
cmp
out
jae
jmp
mov
addl
cmp
or
xchg
sarl
inc
jecxz
mov
sar
les
mov
dec
push
xor
popf
adc
fsubrp
cmpsl
addr16
je
sub
mov
lods
imul
mov
dec
fcmovbe
in
add
pop
xchg
pop
rorl
cli
push
stos
dec
pop
pop
arpl
movsl
dec
adc
push
jp
sub
and
xchg
cs
loope
add
push
dec
insl
jg
iret
xchg
stos
jle
inc
pop
fistpll
sbb
push
fld
aam
jo
lock
cmpsb
movsb
push
out
pop
icebp
or
fldcw
pusha
add
mov
out
imul
adc
sbb
jecxz
in
int
scas
xchg
pop
fimuls
lods
gs
mov
jno
or
loope
jg
dec
dec
inc
ja
mov
testb
jmp
outsb
inc
pop
inc
mov
adc
push
and
mov
gs
clc
lcall
cmp
out
push
push
pushf
test
dec
xchg
ret
dec
icebp
mulb
aam
push
iret
pop
lret
sub
adc
xor
hlt
mov
xchg
ljmp
idiv
cmc
iret
adc
testb
and
pop
sbb
imul
and
jmp
lea
cwtl
ds
push
mov
sahf
cltd
pop
pop
cs
aad
lock
rolb
ljmp
sub
pop
sub
xor
out
sub
or
xchg
cmp
nop
mov
and
pop
movsl
pop
loope
push
inc
sbb
mov
insl
xor
inc
ljmp
cmpb
dec
adc
jp
ds
jge
test
in
sbb
mov
mov
lret
pop
fistpl
sbb
in
jl
mov
ret
data16
push
lods
jae
dec
insl
mov
arpl
adc
test
jns
idivb
rcrb
movsb
shll
sbb
or
hlt
fists
push
decb
sti
mov
add
cltd
insb
out
mov
xchg
sub
arpl
call
and
push
pop
jno
lret
jbe
jnp
mov
cmp
cmc
movsl
idivb
adc
ret
pop
sbb
sub
ret
sbb
add
and
sbb
in
or
pop
insl
cmp
add
nop
cmp
hlt
movswl
iret
or
or
dec
dec
popa
pop
push
and
mov
ljmp
lods
into
cmpsl
jns
inc
add
mov
retw
jmp
mov
push
inc
fbstp
add
rorl
sub
movsb
jbe
push
xchg
lcall
xchg
jne
aas
out
movzbl
test
mov
pop
or
ljmp
icebp
sbb
or
or
test
mov
addr16
sti
mov
push
pop
pop
testl
sub
sub
out
sub
pop
jnp
xchg
lcall
xchg
jp
mov
dec
lods
mov
loope
mov
pop
mov
fdivl
scas
xchg
repz
ljmp
clc
dec
jo
popa
popf
and
push
push
fcmovnbe
lcall
es
mov
je
sbbl
leave
loop
pop
push
mov
js
add
cmp
stc
inc
lock
lahf
xchg
mov
pop
fistpll
xor
dec
sti
enter
cmp
inc
sub
movsb
repnz
roll
js
fisubrl
jnp
lods
mov
jp
jo
fcomps
out
or
pop
mov
mov
hlt
inc
stc
and
inc
xchg
cwtl
jnp
mov
ret
sbb
lret
movsl
cs
mov
adc
popf
movswl
cmc
mov
xchg
cwtl
inc
dec
inc
lret
push
and
fidivrl
rcrl
cltd
mov
mov
popl
jmp
jge
jae
movsl
jle
jb
push
fidivrs
jle
jmp
mov
cmp
jnp
xor
cmp
mov
xchg
dec
in
mov
test
dec
daa
sub
lds
mov
jle
cld
mov
pop
fld
dec
dec
add
jmp
out
hlt
andb
les
out
mov
in
xor
cmc
or
mov
mov
dec
cmp
mov
jns
es
outsb
mov
popa
call
mov
jno
cmp
stc
enter
fstl
inc
sub
push
test
shll
pusha
sar
repnz
push
push
mov
inc
in
and
cmp
jnp
loopne
xchg
insb
pop
lahf
and
cmp
repnz
push
inc
ss
add
sub
cmp
add
das
bound
or
and
outsb
in
test
sbb
xchg
cld
mov
jl
imul
pop
push
stc
jecxz
push
mov
jo
cltd
stos
dec
bound
cmpsb
ficompl
sbb
sarl
jg
and
clc
ja
cmc
pop
outsl
push
sub
ja
in
add
lods
xchg
adc
sbb
into
aaa
xchg
pop
inc
cmp
cmp
dec
adc
iret
pushf
mov
mov
xor
mov
imul
xor
xchg
cld
shll
xor
sub
arpl
sahf
popf
cmp
fstpt
imul
xor
insl
test
or
cmp
adc
mov
xor
pop
mov
enter
or
loop
imul
jnp
xor
mov
pop
xor
ret
cs
imull
pop
adc
nop
add
neg
mov
add
sti
jg
bound
cmp
dec
sbb
in
leave
cmc
xchg
rcrb
jle
jl
scas
fistpl
sbb
je
pop
xchg
inc
sbb
adc
adc
push
fnstcw
rcrb
xor
repz
sti
enter
pop
out
addr16
adc
fidivl
in
sub
ljmp
test
mov
jl
mov
testl
lret
movsl
daa
lea
rcrl
shl
ss
sbb
sahf
push
cwtl
pop
stc
add
dec
xchg
adc
sub
jecxz
and
cs
or
lret
mov
push
movsl
sbb
icebp
push
int3
int
bound
dec
fdivl
add
jno
xchg
cmp
cmp
inc
adc
xchg
jle
roll
pop
dec
testb
adc
das
push
aad
xchg
out
bound
bound
xchg
mov
lods
in
decb
jecxz
imulb
imul
or
int3
and
or
sbb
scas
push
jge
outsl
pop
inc
incl
xchg
pop
mov
jle
mov
push
clc
cltd
dec
cmp
fldt
fmulp
xchg
test
les
fdivl
popa
test
mov
add
stos
pop
sub
xchg
js
loope
mov
xor
pop
mov
add
pop
mov
psubw
les
cmp
sahf
shr
out
es
sub
stos
dec
add
adc
dec
fsubrs
fsts
jns
lock
xchg
sbb
cmc
jecxz
out
mov
aad
addr16
and
loopne
mov
jmp
ret
xchg
adc
call
dec
push
sub
iret
or
jge
mov
popa
ljmp
mov
out
outsl
inc
aam
clc
or
xlat
sahf
addr16
dec
jns
pop
inc
sub
dec
repnz
mov
in
fisubs
mov
lahf
enter
ss
stc
jne
test
xlat
filds
pop
xchg
outsb
out
mov
ret
and
sub
fldt
pop
scas
add
frstor
nop
mov
lcall
gs
gs
fnop
xacquire
cmc
jl
test
mov
js
xchg
aas
movsl
out
xor
pushf
or
lret
mov
sub
cli
mov
lcall
inc
sahf
in
scas
adc
loopne
xchg
pop
or
inc
mov
jae
xor
add
push
lods
cltd
pop
push
push
shrb
lds
push
cmp
sbb
jae
adc
hlt
pop
mov
ja
ss
pop
mov
cmp
popa
les
ret
loop
leave
int3
in
xchg
mov
cmp
or
inc
pop
dec
out
jb
pop
jno
sarl
mov
cmpsl
jnp
fldl2t
decl
or
inc
cmpsl
pop
add
lods
or
mov
lock
aaa
dec
je
pushf
jbe
and
lock
out
adc
xor
xor
mov
addr16
stos
pushf
stos
or
mov
mov
rcl
mov
ss
dec
mov
sub
pop
push
xchg
and
std
aam
movsb
dec
sub
mov
mov
dec
inc
sbb
xor
enter
mov
nop
paddsw
xchg
ret
popf
in
adc
popa
insl
fnstsw
and
pusha
fildll
cmpsl
jo
push
jb
dec
cmp
xchg
sbb
cmpsb
mov
pop
adc
rcrb
inc
lods
sbb
aas
fistl
xchg
das
lahf
add
movsl
jp
icebp
lds
or
jae
xor
out
repz
stos
sub
mov
adc
cmp
cmpsl
test
cmp
dec
loop
mov
lods
add
pop
xchg
mov
dec
outsl
mov
test
insb
out
dec
rcl
push
fwait
add
std
std
outsb
push
ljmp
add
lods
add
or
add
jb
fcompl
pop
fdivr
or
aad
lea
cltd
add
sub
ss
mov
orl
xor
fyl2xp1
ljmp
push
dec
mov
push
cwtl
js
inc
iret
mov
test
rcrl
call
adc
in
xor
movsl
repz
andl
mov
pop
jmp
cmp
iret
hlt
scas
aas
add
and
push
mov
xchg
notl
push
lret
add
mov
pop
pop
fsub
cmp
aad
loop
sub
pushf
addb
jp
testl
fsubrs
fidivs
mov
sub
mov
sbb
pop
mov
dec
bswap
sub
pusha
sub
inc
xchg
mov
lds
cmp
xor
pop
fstpl
inc
lcall
cs
jbe
daa
cmpsl
adc
icebp
mov
fldl
in
jecxz
popf
push
lahf
inc
leave
daa
and
jns
cmp
lea
mov
in
fisubs
jae
lahf
cmp
lret
sub
cmp
push
adc
cmp
and
xchg
cmp
dec
inc
xor
mov
jbe
test
add
mov
test
dec
lret
cmp
or
scas
mov
call
out
jmp
mov
fs
gs
adc
pushf
sub
lods
aaa
gs
add
mov
shll
or
pop
adc
add
pop
or
scas
repz
sbb
rcll
push
push
adc
lcall
in
xor
push
imulb
sbb
les
add
jmp
jae
dec
add
pop
adc
nop
hlt
bound
xchg
or
and
mov
mov
lock
enter
dec
enter
pop
adc
mov
in
pop
repnz
adcb
aad
outsl
mov
fnstenv
mov
imul
stos
pop
jmp
inc
fidivs
and
and
pop
dec
lods
cmpsl
cmpsl
pop
adc
dec
cmp
push
mov
sbb
mov
xchg
cmp
or
clc
and
shll
repz
mov
cmc
xor
xorl
sti
test
lcall
dec
mov
or
push
aas
mov
shll
and
add
ss
adc
aad
fcoml
ja
mov
rcrl
or
mov
cmpsb
mov
jnp
or
inc
clc
or
inc
movsb
and
xchg
pusha
outsl
sbb
repz
mov
ror
or
push
mov
push
or
mov
pop
iret
fisubrl
jno
adcb
and
cld
mov
adc
int3
je
imul
clc
push
xor
int3
das
pop
scas
and
inc
data16
pop
mov
inc
jnp
pop
mov
mov
inc
out
aas
dec
addr16
aad
mov
out
jp
xchg
pop
jp
mov
mov
push
adc
pop
in
mov
into
cld
cmp
loop
pop
in
loopne
jne
mov
push
sti
sub
mov
jl
enter
cmc
fs
cld
enter
jmp
pushf
or
fistpl
mov
cmp
mov
scas
mov
fidivs
scas
or
push
ret
cli
mov
mov
insb
or
dec
inc
or
add
mov
fidivrl
pop
jne
test
cmpl
jl
stos
subb
insb
jae
xchg
xlat
addr16
mov
xor
and
pop
jle
pop
addb
lock
sub
add
or
pop
ss
fisttps
xor
jmp
fbld
cmpsb
mov
xorl
lock
xor
imul
mov
sarb
test
mov
pop
addr16
aaa
sarb
add
test
das
jecxz
xor
adc
iret
mov
call
ja
sbb
rcll
sub
pop
jp
sub
dec
pop
jmp
scas
jns
pop
lock
sub
fbld
xchg
xchg
aaa
mov
pop
push
cmp
stos
pop
add
and
pop
test
out
cmpsl
or
mov
stc
insb
punpckhwd
mov
sub
jae
mov
divl
pop
outsl
jno
mov
ret
mov
push
xor
das
pushf
sub
xor
arpl
push
hlt
adc
nop
rolb
dec
das
pop
xchg
in
ss
push
in
mov
aam
ss
jp
adc
ljmp
xchg
lcall
sbb
pop
loopne
flds
xchg
lds
repz
mov
ret
lods
cmp
sub
sti
mov
aas
mov
inc
or
cmpsb
insl
fisubrs
cmp
xorb
pop
xchg
push
pop
insl
insl
add
call
mov
stos
jbe
xchg
sbb
push
es
inc
mov
dec
inc
movaps
adc
shl
in
inc
or
shlb
xchg
inc
out
mov
jle
outsb
test
ficoms
mov
mov
add
inc
addr16
or
adc
mov
jb
jns
pushl
aam
push
mov
popf
test
jge
jo
add
lret
or
sbb
jg
rcll
out
inc
shlb
shrb
les
and
inc
in
mov
jno
mov
loopne
in
dec
dec
pop
jecxz
clc
cltd
dec
dec
lds
pop
xchg
sub
cmp
lret
data16
inc
pop
rol
or
ss
mov
fxam
pop
lahf
mov
jge
or
ja
in
and
rorb
jecxz
lret
cs
dec
inc
xchg
jae
mulb
daa
pop
or
int3
pop
jmp
test
xchg
lret
nop
int
mov
fadd
pusha
minps
and
sub
test
hlt
jecxz
ficoms
stc
cmpsb
test
imul
inc
test
icebp
jbe
les
xchg
out
test
cmpsl
adc
sbb
xor
arpl
mov
mov
xlat
xchg
repnz
ror
inc
jns
out
cli
push
into
xchg
push
jmp
cmp
jns
repz
imul
adc
mov
jmp
add
xchg
adc
add
xchg
jnp
cmpsb
cmpb
dec
test
dec
xchg
dec
xchg
and
cwtl
sbb
pop
je
jns
out
lcall
psubw
test
in
inc
int3
push
stos
aam
and
cmpsb
imul
or
imul
add
cli
loop
dec
add
aas
mov
ds
in
dec
loope
or
xchg
pop
or
xor
mov
leave
mov
adc
lock
fistpll
test
cmc
sbb
or
jae
sahf
in
ljmp
lods
xlat
outsb
dec
add
push
and
and
pop
mov
ljmp
inc
jl
jno
das
fldt
cmp
push
xor
fmuls
in
sbb
mov
jmp
es
sbb
add
loope
in
stc
xor
movsl
and
inc
repnz
cmp
loope
xchg
jb
and
xor
je
mov
mov
das
sbb
xor
sahf
mov
rol
jmp
addr16
shrb
xchg
lods
mov
imul
adc
dec
mov
xchg
inc
and
mov
or
xchg
or
xchg
jge
pop
mov
push
iret
movsb
mov
sub
movntq
or
xchg
imul
ds
cwtl
inc
ds
mov
les
push
lret
loop
lea
push
ljmp
scas
or
in
or
pop
pop
mov
xor
mov
mov
loopne
jb
insl
cmp
sbb
fsubs
xchg
out
sbb
daa
cmp
out
or
xor
adc
push
clc
test
ss
mov
in
jne
fs
xor
dec
clc
outsb
sub
js
sarb
pop
fldenv
les
sbb
push
int
int
js
dec
hlt
imull
inc
in
sub
popa
jle
jecxz
pop
dec
in
bswap
ret
out
insb
sbb
jle
xchg
clc
push
lds
std
sbb
cmp
push
stc
idivb
arpl
out
push
imul
je
icebp
adc
loop
mov
mov
pop
sbb
in
mov
stc
shlb
popa
xchg
xchg
loop
jb
xor
iret
adc
movsb
jp
outsb
imul
pop
push
jg
call
idivl
jmp
push
xchg
xchg
push
cs
inc
ret
jns
push
jo
xchg
jno
cltd
testb
psrlq
pushf
dec
xchg
or
cwtl
inc
pop
jmp
sub
mov
pop
aam
inc
inc
ds
into
test
push
xor
mov
cmp
out
fs
push
xor
add
scas
mov
cmp
inc
inc
xchg
push
mov
jae
aad
cmp
add
and
pop
lcall
lock
sub
out
outsb
sub
inc
xor
divl
sub
hlt
jmp
and
and
fldt
xchg
pop
jns
ret
sbb
sub
push
pusha
pop
bound
leave
orl
inc
push
je
mov
dec
dec
mov
sbb
scas
cmpsl
or
inc
js
inc
movsl
mov
and
jle
aaa
inc
inc
aad
mov
sub
xor
add
or
outsb
inc
add
sahf
iret
insb
test
lods
mov
mov
jns
repnz
lahf
test
dec
das
sbb
jg
or
add
stos
ja
xchg
sub
sub
aad
mov
xchg
bound
dec
mov
loop
sbb
stos
cmp
sbb
test
scas
movsl
push
pop
add
jmp
notb
xor
push
mov
leave
mov
adc
and
xor
pop
dec
mov
ljmp
ja
loop
test
add
mov
push
daa
jp
addb
push
test
jmp
jge
dec
mov
aaa
inc
in
stc
add
fimuls
cltd
mov
jo
xor
add
pushl
aaa
pop
movsb
ret
adc
and
das
pushf
adc
dec
push
pop
aaa
mov
sub
fsts
jge
sub
aad
sbb
xchg
sbb
xchg
and
dec
and
jno
cmp
stos
fs
repnz
inc
sub
aad
fidivs
mov
leave
cmpb
jne
add
lret
mov
sbb
push
xor
dec
incb
xchg
mov
add
mov
dec
dec
pop
mov
cmp
std
pop
mov
adc
dec
das
push
or
xor
dec
outsl
pop
pop
out
or
mov
inc
stos
incl
sbb
das
xchg
scas
repz
inc
lea
xor
jle
cmc
adc
cs
and
sub
testb
push
lock
sbb
pop
push
add
das
cmp
rorb
add
jl
pop
addr16
push
popa
nop
scas
mov
add
ds
pop
imul
xor
ljmp
push
push
mov
and
cmpsl
adc
mov
sahf
xchg
dec
jl
js
mov
sub
sti
ja
into
testb
xchg
lret
sti
pop
cli
negl
jp
jns
int3
outsl
pop
add
inc
fnstenv
or
or
mov
idivl
rcrl
adc
leave
lods
cltd
mov
je
je
hlt
push
notl
mov
cmp
jle
mov
in
jnp
mov
or
mov
push
push
jle
xchg
mov
sarl
sub
pop
negl
jns
call
lock
mov
repnz
sbb
test
clc
sub
imul
push
cld
and
imul
add
sbb
mulb
add
xchg
push
movsl
xor
add
xchg
add
jns
fcmovnbe
or
std
cmp
push
daa
xchg
mov
scas
mov
mov
mov
shrb
fbstp
dec
sbbl
adc
cmp
mov
or
sub
jno
in
jp
inc
bound
and
sub
imul
mov
ficoms
jno
negb
fsubs
pusha
lret
lock
scas
or
arpl
xchg
cld
adc
sbb
or
adc
xor
pop
jae
out
push
es
or
push
lahf
mov
mov
ret
push
pop
cltd
xchg
add
xor
fnsave
daa
dec
pop
mov
outsb
loop
mov
or
mov
adc
adc
jbe
add
and
jbe
mov
sbb
jnp
push
fwait
dec
jge
or
movsl
jp
cmp
ljmp
xchg
imul
test
mov
mov
loope
pop
sbb
push
xchg
sub
mov
xor
insl
ret
xor
inc
jne
xor
or
test
inc
push
ja
push
jb
sub
stos
xor
js
xorl
push
and
dec
jb
or
cmp
sbb
sarb
fcompl
scas
mov
repz
mov
xchg
add
adc
mov
stc
jne
dec
lret
mov
aaa
pop
mov
mov
sub
test
jnp
push
movsl
mov
xchg
icebp
scas
cmpsl
mov
mov
xor
fimull
inc
hlt
mov
or
mov
xchg
data16
inc
inc
mov
mov
call
popf
lods
cs
aad
dec
shll
cmp
push
add
mov
push
arpl
xlat
and
inc
lahf
dec
int3
push
adc
add
ret
inc
add
xor
cmp
mov
xor
jmp
in
sarb
xor
add
pop
push
jl
xlat
rolb
bound
inc
xchg
jl
dec
inc
inc
lgs
rorl
fiadds
pushf
fistl
popf
iret
add
pop
out
inc
add
xchg
xor
sbb
inc
mov
outsl
push
data16
out
sub
test
push
sbb
inc
rcrl
push
mov
fwait
sbb
andl
les
dec
mov
push
pusha
add
sbb
adc
xor
inc
adc
sub
jle
dec
and
mov
roll
pop
imul
rolb
xor
fwait
jg
orl
add
pop
add
sub
mov
imul
call
les
repz
in
in
dec
in
jne
dec
xlat
jmp
push
inc
in
adc
mov
fs
adc
pushl
jb
lods
xchg
push
jle,pt
xor
cmp
adc
outsb
daa
repnz
inc
xor
cmp
cltd
mov
inc
rorb
mov
push
repz
ljmp
fstps
add
jbe
stc
add
mov
int3
sub
dec
inc
das
jns
pop
fstpl
bound
mov
inc
jmp
pop
lock
daa
or
xchg
mov
lods
jb
decb
sub
sbb
jbe
pop
adc
dec
xchg
pushf
inc
mov
mov
std
sub
and
mov
mov
push
aaa
xor
push
pusha
adc
jmp
les
mov
ret
repnz
mov
push
cmp
inc
orb
shl
xlat
mov
stos
pushf
jp
jno
in
sub
and
jmp
xlat
pushf
pop
xor
xor
mov
push
insl
ja
adc
ret
sub
test
mov
lds
adc
ljmp
popa
xchg
cltd
lret
pop
ret
outsl
iret
xor
or
lock
xlat
mov
adc
sbb
or
pop
sub
or
faddl
sti
or
inc
xchg
mov
dec
cli
rclb
adc
pop
mov
scas
sbb
mov
lcall
cld
pushf
dec
sub
mov
push
test
push
push
jnp
hlt
mov
rcrb
pop
sbb
mov
xor
mov
sbb
inc
call
ret
pop
push
push
aad
out
cmc
aas
repz
lea
sti
loop
fidivrl
mov
push
add
mov
mov
orb
jle
fadd
cli
pusha
cwtl
outsb
mov
xor
mov
and
and
dec
iret
mov
mov
mov
inc
xchg
xor
dec
and
adc
bt
addl
push
mov
outsb
mov
xchg
and
lahf
mov
lcall
shrl
in
sti
pop
xchg
mov
stos
je
filds
inc
sub
stc
xor
ja
in
out
sbb
xchg
adc
movsl
dec
mov
scas
mov
icebp
adc
inc
es
cli
jo
sti
lret
lret
mov
shl
push
cmp
dec
call
lea
pop
push
mov
sbb
test
and
mov
dec
mov
insb
popa
adc
into
xchg
je
aam
mov
adc
and
jno
mov
out
add
xchg
cmc
mov
dec
std
push
sub
fldenv
sti
bound
cld
pop
xor
in
pushf
dec
mov
xor
insl
adc
enter
stos
fs
push
sarl
and
xlat
cmc
dec
pop
jo
push
loopne
jbe
hlt
push
mov
push
movsb
pop
sti
test
scas
ja
mov
test
jb
mov
mov
leave
jecxz
cmp
xchg
sub
leave
sti
ja
inc
lret
push
test
add
enter
add
and
out
add
pcmpeqb
sbb
mov
xchg
mov
add
push
push
pop
mov
cmp
std
push
dec
mov
inc
outsb
dec
sub
ficomps
xor
cmpsb
or
xor
scas
movsl
fsubrs
movsb
test
arpl
test
ds
xchg
pop
test
sbb
scas
sub
dec
pusha
scas
inc
mov
aaa
jecxz
inc
or
aad
das
das
mov
push
mov
mov
push
fs
movsl
jno
xchg
into
popa
xchg
arpl
mov
cmc
push
cmp
out
lahf
adc
lcall
mov
pop
aam
push
xor
jo
fnsave
mov
enter
sub
in
icebp
cwtl
xor
aad
aam
push
pop
adc
mov
popa
js
or
jle
test
push
or
ljmp
stos
bound
add
sub
mov
data16
les
jbe
sbb
mov
push
xor
ret
lahf
jbe
mov
rcr
sub
or
adc
mov
jmp
xchg
inc
out
sub
idiv
jp
pushf
and
mov
and
gs
hlt
sbb
jo
adc
cli
inc
stc
jecxz
xchg
mov
or
or
cwtl
xchg
or
repnz
xchg
or
mov
je
rorb
cmp
enter
fldl
add
in
aad
inc
ss
or
mov
jp
xor
rclb
or
dec
mov
xchg
leave
cmpsl
and
pop
inc
mull
pop
je
notb
mov
pushl
lret
mov
aas
lret
pop
stos
pusha
fisttps
aad
or
xchg
es
dec
les
jae
ror
lret
mov
xchg
xor
or
imul
addb
push
scas
gs
fcmovnbe
fwait
push
pop
pop
add
stos
fnstcw
fsubrs
adc
testb
inc
hlt
lahf
or
jae
dec
jbe
insl
dec
cli
in
xor
cmp
mov
aaa
scas
pop
ss
cmpsb
iret
inc
mov
in
pushl
mov
or
scas
loope
lock
clc
out
or
imul
dec
inc
pushf
lret
enter
int3
xchg
mov
ficoms
dec
scas
cltd
imul
push
int3
je
cmc
xchg
inc
hlt
cmp
daa
sbb
mov
push
or
push
stos
repz
stos
mov
jg
dec
fwait
int
repz
xor
loope
faddl
out
lcall
test
pop
out
sti
cmpsb
mov
jno
daa
jle
test
scas
inc
iret
cmp
lgdtl
pusha
add
push
add
adc
stos
mov
jae
add
lret
movsl
add
roll
jmp
sti
mov
pop
mov
mov
xchg
adc
push
add
inc
fs
pusha
dec
movsb
dec
mov
add
sub
or
lret
lods
mov
loope
rcll
mov
push
cld
or
and
imul
xor
jnp
jmp
and
nop
push
inc
movsb
or
call
dec
fldt
mov
mov
add
icebp
add
xchg
test
aad
cld
daa
sbb
les
mov
ret
inc
and
cmp
mov
lret
or
movsb
mov
movsb
xchg
cmp
dec
outsl
sub
subb
and
ret
lret
lret
pop
daa
mov
xlat
loop
or
aaa
cmp
xor
jle
mov
jne
nop
xchg
add
cmpsb
or
in
push
and
jae
shlb
cmp
leave
add
sub
iret
mov
in
dec
and
mov
sbb
out
testl
mov
inc
fiadds
lret
jp
in
stc
in
mov
and
inc
aas
ret
subb
es
jecxz
cwtl
xchg
mov
sub
cmpsb
int
out
fldl
popl
jno
xchg
push
jp
orl
cmp
mov
add
sub
xor
stos
dec
js
clc
sti
rcl
es
into
cmpsb
int3
decl
lock
push
cmpsl
jb
lock
std
ret
inc
jno
pop
arpl
jle
xchg
punpckldq
iret
mov
dec
pop
add
enter
adc
pusha
rorl
incl
or
cmp
into
pop
xor
jmp
mov
addr16
fdivrs
fprem1
mov
rcrl
mov
mov
pop
sbb
or
mov
into
repz
add
lods
scas
mov
stos
cmp
push
xchg
or
xchg
pop
outsb
sub
pop
ja
and
incb
push
lds
rcrb
mov
scas
mov
lahf
jnp
js
bound
adc
int3
push
popf
xchg
pushf
stos
imul
add
movsb
lcall
ja
ret
das
movb
xor
push
xchg
bound
orl
pushf
shrb
push
jmp
and
jae
rcrb
aam
add
or
movsb
scas
pop
in
xchg
xor
push
lahf
and
scas
xchg
push
pop
jae
leave
cmp
lcall
jo
xchg
sbb
mov
push
mov
adc
add
repnz
or
daa
push
mov
das
outsl
call
das
mov
cwtl
fistpl
imul
xor
stos
jecxz
inc
fldenv
not
lcall
jl
and
dec
daa
scas
adc
xchg
or
jne
mov
hlt
repnz
and
ret
xor
je
or
stos
outsb
data16
and
mov
daa
pop
fcmovbe
imul
pop
push
mov
xchg
shlb
inc
push
xchg
jb
clc
pop
repz
les
test
push
add
pop
sahf
xor
mov
jecxz
popa
fisttpll
cmp
pop
mov
push
lcall
inc
and
lret
testl
js
push
push
in
int
xchg
fs
xor
xchg
and
fs
jl
mov
adc
push
jno
pusha
nop
and
mov
jnp
xchg
inc
or
mov
inc
in
sub
ja
jns
dec
mov
mov
or
insl
lea
hlt
sbb
mov
out
insl
outsl
inc
lock
scas
lret
out
pop
lds
inc
jmp
inc
leave
pop
loopne
push
testl
push
insb
cld
mov
jge
add
and
jecxz,pn
rorl
aam
test
xorl
and
cs
clc
xchg
and
dec
mov
not
js
or
icebp
mov
fadd
jbe
orb
scas
add
rorl
adc
and
mov
and
jno
leave
mov
iret
int
and
push
shll
push
cmpsl
xchg
xchg
shr
adc
enter
jmp
int
xor
sub
inc
test
fidivl
fs
imul
sub
aad
clc
cmpb
and
pusha
lds
cmp
mov
fldt
incl
lret
sub
cmovp
dec
lret
aas
addr16
adc
stos
push
notb
aam
repnz
jae
nop
adc
push
sub
xchg
mov
xchg
xor
movsb
cmp
mul
imul
ja
std
jne
dec
stos
pop
hlt
fnstcw
pop
jp
into
sub
xor
xchg
bound
lahf
gs
out
sti
pop
xchg
ffree
push
fwait
jp
push
repnz
cmpb
xchg
jb
adc
dec
bound
jge
mov
outsb
and
and
inc
ja
and
xorb
dec
mov
xchg
aas
sbb
in
jne
adc
dec
js
ss
pop
mov
adc
xor
iret
enter
jmp
sbb
in
nop
inc
pusha
push
mov
rep
int
cmpsb
cmc
ret
js
sbb
xor
sbb
add
cmpsl
cld
jae
lret
push
shl
cmp
mov
lods
orb
mov
notb
sbb
pop
cwtl
incl
push
fwait
rorl
dec
lret
mov
add
jp
or
daa
inc
dec
mov
fisubl
or
lahf
pop
sti
loop
pop
jmp
jae
dec
arpl
aad
xor
add
adc
and
jp
in
jbe
jns
or
arpl
add
clc
test
cmp
scas
push
out
pushf
pop
divl
mov
pop
sti
or
sbb
sub
inc
lea
mov
out
xchg
je
repnz
inc
stos
int
aam
lock
push
and
cmp
cmp
xchg
mov
mov
dec
inc
and
out
sub
das
jno
and
loop
pushf
pop
xchg
shr
jo
stos
dec
js
push
in
rorl
jmp
sub
insb
popa
mov
xchg
sbb
fnstcw
int
xchg
pop
pop
inc
ljmp
sub
out
frstor
mov
adc
outsb
imulb
es
lret
sub
call
add
push
lock
inc
push
push
js
pop
in
cmp
dec
xor
push
cmpsb
pop
mov
stc
clc
dec
mov
sbb
xor
add
or
cmp
jmp
mov
and
sahf
xchg
es
pushf
loopne
mov
pop
pop
sub
scas
fistps
shrl
add
pop
mov
push
imul
in
test
outsl
hlt
arpl
jbe
loop
lret
imul
fwait
mov
add
subl
mov
into
fs
sub
sbb
fcmovbe
inc
je
lea
mov
das
rolb
int
mov
repz
pop
push
jl
jmp
cmpsl
lods
dec
xor
mov
fnstcw
je
and
neg
imul
popa
xchg
aaa
sbb
lcall
and
or
es
and
and
jle
rorb
dec
sti
negl
mov
sub
dec
push
lret
or
lods
fiadds
test
lcall
cmp
mov
mov
cs
dec
and
bound
aam
lods
sbb
pop
push
arpl
push
les
sbb
aas
shll
rcll
add
dec
setne
lock
ss
cmp
pushf
dec
lret
mov
and
xchg
push
outsb
out
lods
or
and
cmp
cmp
sub
daa
test
push
popa
mov
int
cmp
int
icebp
xchg
out
fwait
gs
jmp
jge
cmp
das
cmp
shr
push
cmp
rcll
and
test
or
loopne
dec
jg
push
xchg
fwait
sub
mov
and
loope
sbb
popa
jo
sub
fildll
repz
push
andl
das
test
bound
xor
mov
mov
cld
loope
cmpsb
mov
out
inc
insl
mov
push
xor
bound
jno
xor
out
mov
outsl
pop
pop
aaa
out
xorl
movsl
adc
jb
push
push
add
sahf
mov
xchg
adc
push
sub
pop
jnp
push
loopne
faddl
cld
addb
cmp
outsl
mov
xor
xor
mov
dec
and
in
cli
in
dec
pop
pop
xor
mov
sub
inc
test
or
push
and
and
pop
jns
or
jmp
cs
repz
mov
xchg
enter
fldl
push
jno
ja
sti
sub
leave
xchg
or
cmc
fisubl
out
lcall
arpl
stos
jne
xchg
fmulp
pop
nop
faddl
setg
jae
vmread
xchg
hlt
lea
push
inc
call
iret
xor
ss
add
lock
insb
and
in
gs
mov
mov
cmp
into
out
repnz
out
sub
pop
mov
jbe
mov
push
aad
je
inc
fistpll
pop
fiadds
mov
xor
fsubr
mov
sub
or
mov
in
xor
pmaxsw
and
or
sub
mov
fadd
loop
cltd
cmp
fisubl
inc
jecxz
push
ljmp
sbb
mov
cli
mov
dec
sbb
loop
lods
adc
stos
subl
dec
pop
inc
dec
popf
add
int3
push
cli
mov
mov
pop
dec
xlat
cmc
xorb
dec
push
rcrb
movsb
sbb
jns
es
stos
cld
popf
adc
adc
adc
cmp
pop
les
adc
or
pop
xor
jl
iret
divb
dec
nop
dec
cmc
mov
out
jmp
stc
pop
lret
rol
push
das
test
mov
lret
pop
pop
mov
andl
pop
ljmp
lcall
out
in
jo
hlt
push
jae
lods
and
sub
dec
pavgw
fbld
les
pop
jb
loope
mov
mov
mov
dec
dec
leave
inc
scas
push
es
dec
adc
push
inc
cmp
pop
test
inc
icebp
sub
movsb
ja
add
shrl
cli
sub
ja
fistl
outsb
xchg
movsl
push
cmp
lret
in
sarb
das
and
aas
loope
decb
pop
mov
in
xchg
adc
lsl
mov
lds
lret
aas
add
jp
sub
xor
xchg
shrl
sbb
inc
out
es
add
movsb
xor
cmp
inc
mov
xchg
cmp
mov
clc
ds
out
jo
shl
sbb
add
mov
movsb
xor
mov
fisttps
out
xor
fisubrl
insb
lret
sub
out
push
mov
js
rcl
cmp
aaa
pusha
rorb
push
je
lds
mov
pop
dec
adc
jbe
mov
push
call
jp
out
mov
and
fsubrs
adc
ds
leave
test
insb
jg
jae
imul
xor
sub
test
xor
loop
jmp
jecxz
fcoml
push
in
mov
in
ds
sbbl
movsb
out
add
jmp
adc
sub
ja
aam
outsb
enter
stc
pop
cmp
lret
sub
add
add
loope
mov
lcall
inc
mov
sbb
pop
sbb
sub
jae
test
sub
dec
push
les
testb
mov
leave
pop
nop
pop
push
mov
mov
sbbb
stos
sub
fnsave
test
aaa
int3
data16
popl
xor
lea
jmp
dec
xor
xor
lret
lods
andb
sbb
adcb
int3
or
xor
mov
fisttpl
das
aaa
xchg
mov
push
xor
in
rorb
lock
dec
push
fdivs
cmp
jmp
repnz
sub
les
mov
movsl
cmpb
adc
jne
xchg
enter
inc
inc
xor
outsl
fisubs
pop
sub
addb
dec
js
decb
es
insl
jge
and
clc
push
cmp
mov
in
pop
sub
repz
cmpsb
aam
cltd
addr16
add
stc
mov
cmpsl
add
icebp
cmpsb
out
sbb
scas
mov
mov
jb
inc
lds
fidivl
test
bound
ss
clc
repz
test
rol
mov
pusha
mov
xchg
mov
hlt
sbb
mov
fsubr
mov
movsb
test
imul
fadds
add
leave
inc
jae
fisttpl
push
iret
aad
pop
bound
fisubs
pushf
inc
movsl
mov
fsubr
pusha
sub
push
or
cld
arpl
push
adcl
scas
sub
shlb
ja
repz
incl
xlat
add
pusha
xor
lea
call
xor
xchg
aaa
pop
push
test
faddl
aaa
mov
rol
and
roll
ljmp
iret
popa
xor
shlb
cmc
dec
out
mov
sahf
aaa
jo
pop
cmp
movsb
and
adcl
pusha
clc
jecxz
mov
cs
out
xor
pop
mov
bound
mov
jne
loopne
or
add
ljmp
xor
push
xchg
std
repnz
rcll
pop
pop
jnp
call
push
gs
dec
leave
das
pop
ljmp
lods
pop
push
fs
scas
mov
rorl
sahf
jb
aad
mov
cmp
pop
cs
mov
out
mov
or
mov
repz
inc
out
mov
pop
faddl
dec
push
je
mov
inc
mov
mov
out
pop
jecxz
jecxz
ret
xor
addr16
mov
xcrypt-ctr
cmpsl
pop
inc
imul
mov
movhps
inc
pop
data16
push
adc
imulb
sub
mov
mov
adc
mov
bound
adc
ljmp
dec
jb
sbb
mulb
jbe
repz
adc
or
bnd
lds
loope
cmp
pop
out
xchg
sbb
outsl
pop
mov
fists
stos
aas
jbe
scas
lret
mov
aam
jmp
lret
pop
and
mov
or
lds
pop
test
cmp
cmp
pushl
sbb
iret
pop
imul
int3
int3
jge
push
sbb
mov
jecxz
mov
dec
test
sarb
std
jg
adc
lea
ds
mov
mov
cmp
pop
call
pushw
cld
adc
dec
add
int3
cmp
cmp
pop
popa
jmp
in
sub
rcrb
cmp
lock
mov
sbb
mov
inc
push
xor
mov
xchg
js
xchg
and
push
hlt
inc
push
cld
idivl
icebp
out
xor
movsl
xchg
xor
lcall
in
stc
cmpl
push
add
mov
push
and
sbb
mov
aam
xor
ljmp
sbb
lods
in
test
test
xchg
cmp
xchg
hlt
lea
and
mov
sbb
pop
mov
pop
es
mov
sub
jno
sbb
cmp
xchg
lods
jle
adc
jmp
sbb
sub
test
xchg
jne
jae
push
out
pop
iret
lcall
loope
sbb
fisttps
ficoms
mov
ss
movsb
mov
push
mov
xchg
into
jecxz
repnz
lcall
enter
push
in
xchg
cmp
stc
bound
cmp
std
dec
xchg
repnz
lds
mov
push
mov
sbb
or
pop
xor
sbb
push
icebp
int3
adcl
dec
dec
inc
xchg
call
lock
jno
mov
in
int3
cwtl
jge
aam
mov
out
mov
rorl
push
add
in
inc
cmp
mov
testl
cmc
divb
roll
in
jo
cli
rcrl
out
xchg
sub
sbb
mov
in
test
add
es
es
inc
sub
xchg
insb
and
fadd
cld
lret
shlb
xchg
cmpl
fcmovnbe
jne
test
xchg
ficoms
mov
test
sbb
push
sub
mov
cltd
out
in
out
mov
shll
cmp
test
push
rorb
pop
pop
or
inc
fsubs
cmp
cs
out
pushf
and
sub
lds
dec
shl
dec
shrb
dec
sarb
sub
stos
mov
mov
push
cmp
inc
dec
xchg
pop
int3
xchg
ja
push
dec
ret
popf
mov
call
mov
mov
or
push
ljmp
push
dec
lcall
inc
xchg
sar
out
add
mov
inc
or
stos
inc
xchg
imul
or
fwait
mov
dec
adc
repnz
jg
jmp
insl
mov
jg
repz
or
out
bound
in
xchg
cli
adc
push
sbb
add
shll
cmp
ljmp
sbb
add
lcall
mov
jns
xlat
and
push
rcrl
loop
test
push
loopne
loope
mov
mov
pop
mov
push
mov
pop
mov
lahf
dec
jle
push
cmpsb
ljmp
pop
jo
or
xor
scas
push
or
mov
mov
fucomp
jl
loope
inc
out
adc
sbb
xchg
and
pop
mov
aas
push
das
pushf
fwait
mov
repz
scas
or
lret
sbb
sub
hlt
int3
mov
dec
or
dec
dec
xchg
jae
sbb
fcomps
mov
or
mov
xchg
outsl
sbb
sbbb
sub
mov
cmp
pop
ret
pop
cltd
cmpsb
adc
jl
jnp
push
mov
addb
mov
cli
mov
outsb
push
jnp
movsl
mov
cli
ss
js
jp
les
fldcw
or
add
dec
outsl
dec
cmp
and
sbb
jl
sub
dec
push
mull
arpl
dec
mov
pop
push
icebp
jno
push
out
adc
lahf
add
or
adc
and
push
out
pop
inc
xchg
adc
in
popf
or
imul
inc
cmp
cmp
mov
push
inc
dec
cmpsl
add
cld
ret
std
fwait
jnp
cmp
ja
or
bound
js
lret
sarl
sbb
pop
rclb
push
imul
pop
mov
notl
jmp
fsts
push
pusha
jns
push
pop
ljmp
and
lds
into
xor
aaa
inc
orb
jns
test
imul
push
push
push
mov
mov
sub
cmp
sub
sub
dec
in
xor
push
xchg
jo
cmp
and
inc
insb
adc
mov
adc
daa
add
imul
jnp
movsl
inc
jecxz
ret
lret
in
fisttpl
lds
jae
cmc
pop
adc
push
mov
mov
pop
test
jno
cmp
rcrl
cld
and
stos
cmp
mov
mov
or
cli
mov
sub
add
ret
int3
mov
test
pop
fmull
lahf
shlb
add
pop
jo
scas
jle
xor
sbb
add
ja
cmpsl
jmp
out
and
nop
mov
xor
lods
call
test
sbb
xchg
rorb
rep
lcall
int3
add
add
jno
xor
xchg
xchg
cmc
jecxz
or
negl
xchg
push
mov
dec
pop
enter
rcll
xchg
jne
cmp
cmp
leave
or
stos
pop
xorl
mov
cmp
inc
std
pusha
or
cs
adc
mov
mov
pop
movsb
push
and
lods
out
mov
inc
aam
or
mov
shlb
out
mov
cli
jmp
iret
jb
mov
or
adc
and
push
cmp
mov
push
je
push
jmp
jp
and
inc
xchg
sub
xorl
addr16
fldenv
xchg
dec
jle
lods
cmp
jmp
sub
out
sub
xor
lods
jb
mov
insb
xchg
jmp
xchg
and
xchg
repz
gs
or
loope
dec
pop
push
push
pop
jle
dec
jge
xor
dec
pop
cltd
je
add
xor
clc
pop
mov
imul
cld
sti
mov
repnz
cwtl
aas
sub
pop
and
add
jno
aad
jne
adc
jp
pop
cwtl
push
dec
mov
mov
loope
adc
popf
pop
add
push
ret
and
cld
gs
imul
jp
mov
inc
outsl
test
movsb
sub
dec
je
test
xchg
loope
stc
push
mov
je
shrl
sbb
testb
push
roll
ror
imul
mov
xor
mov
test
jae
loopne
xor
mov
test
adc
pushl
and
push
addr16
jp
int
jne
xchg
mov
mov
fdivrp
mov
mov
cld
in
cmc
or
xchg
sbb
mov
aam
dec
sub
movsb
test
lods
out
leave
inc
cwtl
jo
ss
in
pop
xchg
loope
out
mov
lds
mov
push
xlat
fidivl
mov
scas
je
mov
jle
jno
popf
dec
fcomp
shlb
in
notb
inc
dec
stos
pop
inc
xchg
adc
xor
dec
lods
cmpl
iret
clc
dec
cmp
hlt
sub
cs
lods
sbbl
mov
and
stc
and
pop
loope
dec
jle
pop
and
adc
aaa
shll
imul
mov
push
push
fdiv
mov
push
xor
adc
push
push
jo
cld
mov
sbb
dec
int3
push
add
pop
call
lds
xor
cli
outsl
aad
sbb
shll
pop
mov
daa
cmpsl
fucomi
lret
xor
fstl
cld
push
pop
sbb
icebp
add
rorl
xor
sbb
mov
popa
mov
jne
mov
stos
cmp
jne
dec
xor
pop
and
outsl
and
inc
mov
xchg
stc
iret
loop
ja
fisubl
out
add
mov
sbb
jmp
ljmp
pop
js
mov
imul
imul
sbb
jecxz
mov
std
stos
cli
adc
int3
hlt
pop
stos
out
in
mov
stos
lds
stos
shll
xor
and
stos
data16
push
or
dec
shll
mov
loopne
sbb
xor
fimull
xchg
dec
lods
mov
insb
mov
jl
test
sub
pop
adcb
jg
sbb
imull
ds
roll
aad
adcl
and
xor
xchg
pop
js
xchg
push
shll
add
and
jmp
repnz
push
xor
push
cmp
mov
mov
sbb
popf
mov
pop
mov
aad
mov
sti
iret
lret
subb
adc
shlb
xor
adcb
addr16
push
pmulhuw
imul
hlt
and
pop
daa
adcl
pusha
pmaddwd
xchg
xchg
and
push
fwait
sub
iret
andl
jl
enter
inc
rorl
sbb
call
push
sub
cmp
inc
inc
pop
dec
or
loope
sbb
pop
mov
pop
jbe
mov
cmp
jp
aad
mov
fdiv
mov
in
push
add
aas
pcmpeqd
xchg
popa
outsl
insl
xchg
int3
into
mov
push
mov
sbb
dec
add
aam
pop
call
call
xchg
pop
inc
push
leave
sub
enter
sbb
cmpsb
cmp
loop
loope
inc
dec
adc
js
push
xchg
out
shlb
sar
and
adc
jp
repz
sarb
sbb
das
mov
cmp
dec
das
mov
inc
stos
add
in
pop
fcoms
inc
lret
int
bound
push
sbb
xchg
dec
inc
adc
pop
mov
pop
adc
and
js
mov
cmpsl
out
mov
adc
push
insb
sbb
push
push
jp
mov
pushf
jnp
insb
inc
mov
sub
sbb
jmp
push
jg
fs
pop
add
lods
aaa
loope
out
aaa
sbb
xor
ret
xor
pop
jp
sbb
mov
push
aam
aad
jno
mov
push
and
pop
fildl
and
stc
adc
icebp
jb
pushf
jnp
into
orb
xor
inc
sarl
xor
adc
pop
push
popa
fwait
andb
pushf
pop
mov
jns
sbb
push
pop
sbb
out
cs
fs
scas
nop
push
popf
into
xor
pop
or
xor
and
cmp
nop
test
test
adc
and
inc
xchg
cmp
mov
jo
or
dec
pop
inc
sbb
inc
cmovae
sbb
sahf
cwtl
jbe
sub
in
or
subl
sub
es
rcr
cltd
mov
jae
sbb
rcrl
adc
stc
sbb
xchg
mov
fstps
ss
ficoms
je
in
fbld
mov
mov
jae
mov
test
leave
adc
leave
push
scas
fwait
mov
rol
das
xchg
mov
xor
push
mov
xchg
test
jb
gs
rep
and
leave
in
insl
pop
call
dec
mov
loope
test
jnp
nop
mov
pushf
cmp
jns
mov
adc
test
adc
fs
fwait
xchg
outsb
mov
psubw
scas
aad
out
cs
push
dec
clc
in
cwtl
mov
dec
loopne
loope
scas
mov
xchg
xchg
push
mov
mov
iret
push
adc
mov
jne
sbb
rcrb
imulb
repz
xchg
test
lock
push
inc
dec
pop
rorl
jno
jmp
push
fs
adc
mov
frstor
cmp
sub
cmpb
sti
jae
lea
cld
mov
inc
push
mov
mov
and
push
push
test
push
aad
stos
inc
cli
rclb
pop
fcoml
sbb
mov
sbb
jnp
into
test
pop
ret
inc
cmpsb
stos
enter
cli
and
push
jp
jg
pop
aaa
add
sub
mov
xorl
mov
jbe
pop
test
mov
xor
icebp
outsl
fwait
dec
test
lahf
popa
and
lahf
test
stos
or
or
dec
repnz
in
lea
sub
mov
stos
dec
pop
mov
cld
movsl
sar
push
scas
cmp
xchg
xchg
lea
imul
dec
cmp
mov
sarb
decl
hlt
fsubrl
fwait
scas
mov
in
arpl
push
aas
xor
add
or
cwtl
test
push
lret
pop
dec
stc
pop
imul
jle
jge
cwtl
jg
rcl
jge
pop
push
sbb
outsl
jmp
push
mov
push
js
aam
ds
fdivs
mov
or
jp
push
shr
xchg
lock
pop
or
push
aad
adc
pushfw
pop
dec
lret
out
aad
dec
aam
jae
stos
dec
gs
stc
adc
jge
adc
push
dec
sub
adc
lods
ja
xor
mov
mov
mov
shll
lds
out
pusha
sbb
imul
ret
mov
bound
cmp
xlat
scas
lds
inc
sbb
fcompl
int3
mov
jp
ret
jne
aam
mov
enter
mov
jecxz
imul
aaa
add
loop
movsb
add
pop
or
mov
sbb
pop
mov
sbb
mov
out
xchg
fstps
add
adc
xor
in
adc
mov
inc
das
mov
imul
in
dec
and
and
popf
and
test
repz
xchg
adc
sti
fimull
aas
or
xlat
outsl
fwait
lds
add
sbb
xchg
pop
sti
loopne
push
cmp
enter
and
scas
dec
gs
jg
push
fiaddl
mov
les
push
pushf
xor
push
jecxz
cmp
add
mov
cmc
pop
lock
jp
lods
cmpsb
inc
xchg
jns
rorb
out
rolb
out
imul
decl
mov
sub
adc
adc
popf
mov
lahf
inc
add
jo
mov
cmpsl
test
call
daa
jno
mov
mov
jmp
mov
pop
in
adc
push
and
leave
sub
test
and
divl
push
mov
jecxz
pop
mov
sbb
and
aad
in
repnz
mov
gs
je
push
fstpl
addr16
or
nop
mov
sub
push
dec
rolb
out
lods
jns
pushf
mov
jge
leave
in
xor
out
aam
inc
ffree
mov
sub
aam
movzwl
aas
jns
pop
push
repnz
add
and
nop
or
xchg
inc
push
mov
iret
lret
clc
out
rcr
inc
scas
pushl
mov
popa
ljmp
or
mov
jbe
cmp
loope
and
data16
pop
hlt
out
in
mov
sbb
cmpsl
sbb
mov
or
shlb
out
jb
mov
push
push
mov
jecxz
cltd
jb
arpl
movsb
sbb
xchg
cmp
fsubl
pusha
hlt
out
testl
inc
enter
ficoml
pushf
cmp
add
std
iret
ds
xchg
jmp
mov
test
inc
jb
sbb
fisubl
rcrb
fwait
jo
fwait
test
jecxz
popa
dec
add
xchg
adc
scas
xlat
jp
mov
gs
movsb
xchg
stos
enter
repz
pop
frstor
into
std
mov
jo
scas
dec
repnz
and
xchg
adc
test
pop
enter
jecxz
test
xor
stc
and
out
jle
mov
ja
fs
pop
jge
sbb
fwait
inc
inc
popl
mov
dec
xchg
sub
dec
insb
add
in
sbb
sahf
enter
fsubr
cmp
ret
out
cmp
mov
mov
sub
jmp
mov
add
imul
ret
sbb
aam
push
inc
pop
andb
xchg
or
lret
lock
and
pop
idivb
lea
or
jmp
fs
rcrb
filds
mov
adc
pop
hlt
adc
xchg
jns
lret
call
mov
mov
adc
int
cmp
add
es
adc
fs
cltd
in
jecxz
or
shlb
mov
pop
adc
mov
pop
popa
out
add
pop
xchg
aam
and
sub
ret
stos
aas
push
cmp
or
push
pusha
mov
call
inc
cld
lret
add
or
pop
or
ret
lret
ror
pop
fwait
dec
daa
push
js
cld
out
xor
aad
add
cmpl
mov
jno
int
ret
sub
sti
divl
sbb
and
jbe
test
xchg
incb
je
xchg
iret
inc
stc
mov
jne
adc
call
sahf
in
ljmp
jae
push
jp
cmp
mov
lods
call
or
cmp
mov
jle
or
sub
das
hlt
push
ljmp
jnp
sub
or
lret
xchg
call
ljmp
inc
or
data16
fyl2xp1
adc
movsl
call
xchg
addb
lret
jle
adc
fwait
mov
pop
sahf
das
scas
shlb
ja
add
sbb
mov
into
push
into
lock
mov
int3
aaa
mov
adc
jb
int
fcmove
enter
mov
imul
jae
add
xchg
pop
test
lods
cmp
outsb
jne
sbb
loop
enter
aam
adc
jge
aam
cltd
into
add
adc
sti
ds
push
imul
rorb
jp
sbb
inc
aad
in
push
fstpt
fs
std
pushf
mov
daa
adc
daa
add
push
sub
and
pop
jo
gs
aam
and
rcrb
mov
mov
mov
mov
scas
pop
pop
mov
pop
bnd
ds
cltd
lods
inc
mov
notl
xchg
sar
aaa
mov
or
loope
mov
push
or
sbb
or
pop
lea
std
frstor
sbb
inc
dec
inc
push
push
sbb
xchg
iret
fidivrs
lret
stos
ljmp
xchg
jb
sub
lods
adc
cmp
sub
lods
jb
mov
sahf
pop
sbb
pop
pop
shl
xor
sub
test
pop
inc
xchg
dec
xchg
lret
jecxz
xchg
xchg
inc
and
lods
int
outsb
and
cmp
fdivrl
push
adc
sbb
loopne
shlb
mov
js
pop
adc
and
enter
ds
fstpt
and
imul
jmp
bound
jl
add
icebp
push
into
shl
jmp
dec
std
out
and
nop
adc
adc
movsb
push
aas
jne
pop
mov
cld
push
jmp
mov
lahf
jg
jle
ja
inc
fwait
ret
movsl
pop
mov
aas
popa
cltd
daa
cmp
test
frstor
imul
inc
or
dec
lods
icebp
push
out
jae
scas
call
movsl
lret
xor
adc
stos
fdivs
push
xorb
mov
xchg
test
jo
cmp
inc
mov
fwait
mov
aas
xor
mov
add
fcomi
in
or
xor
sbb
push
jl
iret
je
aaa
xor
inc
xchg
loop
mov
sub
push
es
jbe
pop
andl
mov
push
mov
ret
imul
inc
push
iret
rcl
or
adc
jo
shll
fisttps
mov
ret
jns
mov
mov
inc
cwtl
jae
rcll
clc
sub
jne
pop
je
mov
jl
mov
and
fwait
and
fsubrl
scas
stos
mov
jl
adc
adc
jmp
xacquire
add
pop
fisttpll
sbb
or
cmp
adc
cwtl
movsl
push
imul
imull
cmp
xchg
xchg
sbb
rcll
xor
je
sbb
sarl
xchg
cmp
repz
push
divl
cmp
das
aaa
xchg
sarl
iret
aam
cmpsl
jno
pop
mov
push
jmp
sub
jns
inc
push
push
adc
repz
enter
cmp
xchg
shll
and
cmp
adc
pop
pop
in
dec
inc
xor
fdivs
push
xor
jle
sbb
pop
test
mov
cld
cmp
outsl
imulb
test
arpl
add
addr16
ret
xchg
scas
dec
js
testl
rolb
pushl
gs
call
out
or
xchg
test
adc
fs
adc
test
out
jns
and
xchg
mov
add
sub
out
outsl
arpl
mov
arpl
dec
pop
fadd
popa
cwtl
xlat
xchg
jns,pt
push
inc
int3
push
cmp
repz
and
repz
lods
sbbb
dec
jns
addr16
jnp
into
pop
daa
sahf
jp
pop
cli
lds
mov
lods
shlb
ljmp
ret
or
out
jo
ja
inc
jg
sbb
ljmp
fucom
jp
iret
xor
add
adc
lret
jecxz
mov
arpl
bound
mov
leave
xchg
jecxz,pt
xchg
inc
lods
mov
mov
leave
or
call
and
mov
cmp
jp
mov
adc
ss
test
jae
stc
negb
inc
imul
sub
or
jno
mov
fwait
push
push
ja
mov
mov
lock
fidivrs
scas
mov
pusha
ret
mov
iret
das
cli
lret
not
lahf
incl
stc
inc
dec
div
xor
jo
adc
rcrb
adc
fldcw
movsl
sbb
pop
out
hlt
inc
pop
push
dec
mov
xor
aas
add
pop
scas
mov
adc
push
pop
out
sub
cmp
filds
mov
push
mov
sub
cmp
cmpsb
out
faddl
inc
clc
jp
mov
je
sti
test
jmp
cmpsb
fsub
lods
jecxz
and
or
add
xchg
mov
mov
inc
push
js
pop
ss
inc
out
xor
or
into
jmp
enter
mov
outsl
test
aad
jb
lahf
mull
bound
je
mov
mov
mov
subb
in
lods
sub
mov
dec
mov
and
ret
sub
ja
lahf
jmp
dec
pop
lods
sbb
aam
shll
fnstcw
out
dec
jl
push
loope
fbstp
outsb
sub
push
sbb
adc
cs
mov
pusha
ret
sub
cmp
addr16
popa
add
mov
inc
lods
add
stos
fcomps
mov
imul
out
mov
add
les
packsswb
pop
cmp
cmp
pop
mov
out
xor
adc
dec
popw
adc
xchg
inc
add
cli
add
adc
cmc
mov
test
lahf
push
hlt
rcrb
sarl
xor
cltd
clc
mov
dec
in
pop
shl
jge
aad
es
je
push
dec
and
in
sbb
cmp
shlb
pop
leave
pop
fcoml
push
aam
dec
leave
nop
cmp
xorb
pop
jns
mov
xchg
cs
test
jne
cmp
dec
les
rcrl
pop
dec
and
adc
mov
ds
jge
cmpsl
mov
mov
push
xor
mov
mov
or
pop
sarl
xchg
ljmp
pop
and
jmp
dec
cmp
mov
add
cltd
loop
sub
or
outsb
add
and
in
inc
add
xor
addr16
xor
sti
jb
sub
mov
fadd
cmpsb
pop
scas
jmp
pop
and
movsb
cwtl
mov
dec
mov
or
ja
push
or
mov
add
stc
dec
xor
mov
mov
xor
pop
mov
jle
xchg
iret
jecxz
inc
sub
mov
adc
sbb
xchg
iret
lds
in
int
jmp
lock
add
xchg
mov
xchg
cmp
mov
xchg
add
sti
in
push
iret
mov
adc
sbb
adc
dec
cmp
cmp
adc
notl
xlat
mov
int3
mov
outsb
push
mov
or
nop
or
or
pop
or
cltd
movsb
aas
pop
sub
daa
jne
mov
lahf
xorb
pushf
jge
repnz
out
adc
mov
aad
imul
jno
xlat
popa
xlat
sub
ljmp
mov
jecxz,pt
jo
lahf
jns
jne
mov
sbb
decl
adc
mov
insl
cmp
jg
mov
movsb
std
or
test
notb
gs
pop
sbb
mov
scas
add
cli
mul
sbb
adc
stos
jb
adc
jmp
xor
fwait
jecxz
subb
mov
cmp
xchg
pop
movsl
mov
movsb
push
sub
mov
bound
adc
pusha
inc
loopne
add
jg
imul
mov
fptan
dec
mov
jae
mov
arpl
imul
or
pop
push
pusha
mov
popa
pusha
jp
sub
mov
gs
lock
and
mov
inc
scas
adc
fisubrs
ss
in
es
jae
mov
sub
push
push
inc
push
cmp
inc
mov
jo
mov
sbb
stc
inc
dec
sbb
pop
mov
mov
repnz
lret
xor
push
imul
lock
push
push
inc
xlat
or
mov
insl
or
jo
inc
add
lods
add
cmpsl
or
ret
je
add
jno
loop
mov
mov
es
lods
enter
push
sub
stos
mull
cwtl
mov
cmpsl
sti
cmp
xchg
jbe
mov
lret
mov
mov
int
add
xor
js
jno
movl
stos
sbb
loop
mov
ret
xor
sub
ds
mov
add
xor
out
mov
mov
jb
clc
out
dec
lret
mov
repnz
iret
shrb
mov
sub
push
insb
outsb
addr16
inc
fidivrl
pop
aas
add
mov
loope
xchg
sbb
in
cmc
mov
or
int3
sub
cs
insb
cmp
adc
fists
lock
xchg
sbb
cmp
sub
adc
mov
les
dec
aam
decl
jmp
in
jge
insl
sub
loope
popf
mov
arpl
out
insb
pop
stc
sub
scas
rcl
cmp
inc
push
fdivrs
sub
icebp
mov
pop
sbb
cmp
push
mov
and
dec
in
adc
adc
cmc
sbbb
sub
lcall
xor
mov
or
push
jb
dec
push
sbbb
test
inc
push
test
loop
or
enter
mov
push
cmp
push
and
mov
xor
xchg
push
jmp
repnz
cmp
ja
inc
cmp
ret
jg
js
mov
cmpsb
jne
jae
xchg
es
dec
out
pop
jbe
add
repz
loope
or
shlb
xchg
pop
out
cwtl
inc
cli
pop
cld
push
mov
dec
pop
mov
js
dec
fildl
shll
lcall
sub
mov
cmpb
out
cli
nop
cmp
add
insl
je
lock
add
test
pop
cmc
or
jno
lret
cmpsl
mov
js
xchg
and
jg
mov
and
pushf
les
push
pop
in
push
jle
ret
es
pop
js
int3
jp
aaa
mov
mov
xlat
or
or
pushf
enter
sahf
dec
cmp
cli
adc
push
lea
xchg
mov
fcompl
scas
cli
or
mov
cmc
jge
in
std
adc
or
jns
mov
cmp
xchg
je
and
mov
jmp
subl
sub
cmp
adc
or
sub
fldt
and
les
xchg
imul
jb
dec
jnp
js
cli
jne
mov
push
sahf
dec
or
cmp
jae
call
pop
xchg
cmp
hlt
add
xor
and
leave
jno
inc
jns
inc
inc
inc
in
shll
mov
pop
arpl
ret
loopne
mov
push
int3
mov
paddusb
xlat
inc
es
cmpb
stc
or
sub
xchg
xchg
push
push
jle
jb
mov
push
jl
mov
xchg
and
ljmp
int3
lods
stc
jmp
push
aaa
sub
test
pop
xchg
je
sbb
mov
test
sbb
adc
repnz
xchg
popa
jbe
inc
push
add
popa
mov
rclb
xchg
nop
je
jg
out
in
inc
xor
test
xchg
cmpsb
arpl
push
mov
pop
call
jae
sub
and
mov
fnstcw
gs
and
cli
ljmp
outsl
or
mov
hlt
fistpll
iret
push
bound
es
add
xor
cltd
repnz
mov
fadds
mov
rorl
or
les
enter
sbb
rol
pushf
mov
ret
cmpsb
sbb
out
sbb
inc
out
in
mov
pushf
inc
pop
cld
ljmp
jb
lds
pop
cmp
sbb
inc
xlat
in
mov
insb
pop
sub
sub
je
xor
int3
fmull
clc
cld
dec
les
cmp
jo
subl
dec
lods
jp
inc
adc
mov
or
imul
adc
or
je
push
jne
insl
add
mov
mov
movsb
imul
lahf
mov
movsl
push
sti
outsl
sub
syscall
add
cmp
imul
adc
aad
add
icebp
jo
sbb
mov
iret
sbbl
xchg
cmp
lcall
aas
imul
and
lea
or
jecxz
and
movl
lods
mov
je
sub
fldcw
jle
mov
xor
adc
dec
outsb
dec
mov
adc
sbb
scas
jbe
insb
or
aaa
or
pop
movsb
sbb
jmp
insl
in
push
sbb
lret
add
outsl
stos
and
js
inc
or
sbb
push
or
packssdw
mov
lds
hlt
push
push
ds
fstp
test
pusha
mov
mov
and
pop
lods
loopne
stos
stos
iret
mov
pop
rclb
xchg
add
test
cmp
xor
in
outsb
push
lret
mov
cs
xor
push
scas
adc
test
pop
int
icebp
push
sub
test
idivl
dec
sub
push
test
jae
ja
ficoml
inc
idiv
adc
push
sahf
test
mov
pop
insl
jb
mov
and
mov
test
inc
mov
hlt
add
in
stos
xchg
xchg
data16
jmp
mov
cmp
or
mov
je
mov
test
faddl
loopne
pop
loopne
gs
jae
dec
add
sbb
pop
dec
adc
jnp
stos
jge
gs
in
cmp
popf
dec
xlat
loopne
cmpsb
in
lods
mov
ss
dec
icebp
out
jb
xor
inc
ss
dec
fidivrs
add
neg
fdivl
mov
adc
or
cmpsb
pusha
ljmp
push
rcll
sarb
jle
sub
andb
jl
fcmovnbe
push
fxch
test
and
adc
sbb
push
lret
mov
fdivl
aas
sarl
leave
je
mulb
inc
sbb
sub
fidivrl
jae
adc
outsb
or
pop
mov
jno
cmp
mov
int
push
push
sarb
and
orl
adc
sub
push
add
inc
scas
aas
cmpsl
adc
mov
dec
jne
or
pop
push
sub
outsb
cli
stos
push
subb
adc
mov
add
arpl
aaa
inc
adcb
notl
pop
fwait
mov
mull
xchg
xlat
dec
cmpsl
mov
push
mov
addr16
ja
stos
out
arpl
push
fmull
adc
cmp
inc
test
jp
je
cmp
lea
fstpl
push
cmc
and
mov
mov
out
jne
and
add
mov
adc
inc
xchg
jle
dec
pop
xchg
add
xor
out
adc
pop
das
adc
pop
jge
inc
ret
pop
nop
jb
xchg
mov
cmpl
add
das
xchg
sbb
xchg
loopne
in
not
repnz
xor
fsts
mov
lods
pop
mov
lods
outsb
mov
in
loop
lds
scas
xchg
push
pushf
movd
jmp
inc
mov
add
arpl
jle
shlb
rolb
ss
into
lret
les
adc
inc
add
jne
add
arpl
lods
lods
and
shrl
lret
in
out
xor
popf
dec
pop
imul
into
mov
sbb
push
stos
mov
sahf
pop
sahf
aam
jmp
and
mov
aaa
mov
push
int
fwait
inc
aam
sub
cmp
push
pop
xchg
insb
cli
int
and
das
test
and
inc
xor
jns
xchg
sub
or
in
push
cli
jne
mov
push
fdiv
cmp
sbb
loop,pt
or
push
lret
lahf
lret
xchg
repz
je
imul
fildll
ret
aaa
and
dec
sbb
jp
test
dec
inc
lods
loopne
push
push
dec
jne
bound
and
add
push
xor
xor
fmuls
daa
dec
ds
push
and
dec
push
add
dec
and
push
sub
mov
dec
sub
loop
pop
mov
mov
cmp
mov
mov
jae
dec
or
mov
sbb
test
popa
scas
xchg
out
std
cld
rcll
xchg
in
das
xchg
lds
xchg
sarl
xchg
test
inc
mov
push
loope
test
enter
je
xor
addr16
mov
xor
sbb
push
jo
adc
pop
in
jo
cltd
mov
mov
inc
std
sub
shlb
hlt
cmp
inc
dec
sbb
loop
mov
jns
js
cmp
je
sub
dec
movsl
test
jne
pop
mov
loopne
and
inc
dec
int
aad
pop
add
mov
xchg
and
jae
out
add
and
loope
and
and
inc
in
loop
jecxz
rolb
adc
popa
test
pushl
addr16
xchg
lea
pop
idiv
sbb
mov
mov
jg
mov
ficompl
repz
pop
pop
jne
sbb
ret
or
mov
pop
movsl
jns,pt
dec
movnti
xchg
inc
lock
mov
push
lods
inc
push
mov
or
mov
popf
add
outsl
fistl
add
dec
sub
or
xchg
in
push
cli
mov
xchg
adc
cmp
lock
out
mov
and
jmp
enter
jp
mov
mov
scas
test
addr16
jp
cltd
or
fcoms
sahf
dec
xorb
mov
or
leave
pop
clc
addr16
xchg
sbb
dec
cmp
sti
cmpl
sbb
test
in
or
fsubr
fld
jl
push
cwtl
inc
sub
test
mov
dec
mov
pop
decl
add
cmp
scas
mov
loopne
rorb
inc
push
pop
fcompl
add
dec
lret
jle
outsl
lret
xchg
rcl
pop
xor
xchg
mov
lods
insb
push
shll
jg
or
xor
mov
cmp
into
mov
mov
push
testl
ret
mov
pop
adc
mov
cmp
mov
dec
rcr
or
shl
int
jo
sbb
pop
enter
call
dec
imul
sbb
lcall
dec
ret
sub
ja
xchg
sbb
icebp
loopne
ds
aas
jmp
cmp
push
jmp
cwtl
cmc
sbb
mov
pop
pop
mov
fldl
jne
pop
jno
dec
das
and
out
push
test
push
push
fiadds
insl
shrb
fnclex
cltd
fdivrs
out
xor
rorl
or
inc
mov
inc
push
xor
dec
jns
xchg
in
lret
stc
pusha
rorl
xlat
push
and
je
mov
sahf
sub
push
dec
pop
clc
test
mov
xchg
scas
dec
push
cmp
lods
xchg
jp
sbb
rorb
push
mov
cmp
add
ds
xor
sub
cli
or
jge
xlat
jle
lods
mov
test
fnstsw
inc
adc
stos
xchg
jmp
adc
adc
xchg
sbb
add
les
mov
sub
ljmp
jmp
mov
dec
cmp
mov
pop
sti
adc
lret
xchg
sahf
mov
cmp
mov
les
dec
outsl
ds
fisttpll
mov
sti
imul
andb
xchg
es
ds
jns
fcomps
notb
pusha
test
in
inc
mov
mov
pop
adc
adc
scas
int
mov
mov
adc
or
xor
shlb
inc
mov
insl
pop
pop
adc
std
jle
scas
lods
or
fmulp
cmc
mulb
andl
es
movsl
mov
sbb
negl
pusha
enter
adc
rcll
fcomps
es
sub
in
movsl
decl
sbb
cltd
pop
mov
hlt
fidivrl
ds
jae
jg
out
sub
lea
sti
xor
pop
jnp
insl
and
lcall
sti
push
in
dec
push
imul
pop
insl
cmp
outsl
icebp
pop
pop
cmp
fcmovnu
out
mov
push
push
sbb
mov
adc
mov
icebp
and
pusha
jmp
fwait
cmp
nop
adc
js
mov
inc
std
push
adc
pop
inc
pop
sub
jecxz
or
sbb
bnd
mov
ja
mov
ret
fsubrl
add
out
bound
dec
cmp
ds
jno
cmp
ret
sbb
mov
ret
out
decl
mov
fbld
aad
test
cmpsl
stos
mov
or
mov
mov
ljmp
cmp
cmpsb
aam
rol
jp
les
rclb
aam
inc
mov
scas
add
dec
outsl
lods
pop
ficompl
nop
out
out
popa
repz
fstpt
adc
popf
sbb
inc
sarb
inc
dec
pop
mov
lahf
jg
add
mov
inc
je
mov
add
dec
out
movsb
das
xor
popa
les
add
cli
xlat
sub
push
lock
sti
mov
sbb
fidivl
inc
sbb
jb
enter
fists
lcall
push
mov
and
adcb
or
shll
jl
bnd
scas
test
pop
scas
xchg
adc
push
ret
inc
loopne
nop
in
clc
jmp
sbb
fistpll
mov
mov
aas
xchg
jge
fst
leave
xchg
cmp
pusha
jns
outsb
mov
mov
dec
push
int3
hlt
and
mov
jp
sbb
xchg
loope
in
out
add
mov
mov
adc
gs
and
shlb
cmp
sub
jp
fstp
inc
adc
fidivl
add
test
out
fnstenv
sar
addl
push
ds
xor
dec
test
fs
addr16
pop
fadd
xorl
mov
iret
sti
mov
fdivl
xchg
mov
and
inc
inc
push
fdivrl
inc
in
test
lret
cmp
pop
cld
mov
mov
pop
push
inc
scas
add
ss
sub
clc
loope
mov
cmp
pop
scas
cpuid
ret
mov
mov
in
mov
cli
jmp
adc
pop
adc
pushf
cs
ficoml
std
mov
sti
and
jge
arpl
jmp
dec
jp
aam
js
insb
jne
out
jg
loopne
mov
or
mov
mov
test
mov
sub
mov
add
jb
aad
ficompl
shlb
lret
fwait
or
and
lods
sub
xchg
sbb
dec
pop
popa
testl
arpl
out
mov
mov
in
out
adc
cmp
mov
mov
sbb
les
int
xchg
inc
nop
repnz
and
into
sbb
jae
mov
pop
jne
mov
and
mov
mov
fcmovnb
lods
xchg
cltd
bnd
aas
xor
inc
sub
push
jge
and
mov
xchg
adc
push
or
push
les
jne
add
cmp
aas
insb
inc
ljmp
in
sub
mov
xor
mov
jmp
cmc
mov
out
or
sahf
scas
arpl
out
pusha
adc
sub
sahf
jns
xor
les
jecxz
mov
sti
xor
cmc
or
js
mov
js
mov
sub
add
push
insl
pop
stc
mov
mov
pop
adc
rcl
xchg
ds
aam
lret
pushf
and
pusha
movsl
jbe
inc
mov
pop
add
lock
jecxz
ret
ja
cltd
aaa
or
adc
push
dec
scas
mov
leave
and
adc
sub
jl
sub
or
lret
das
mov
adc
add
jmp
mov
mov
push
and
cmp
pavgw
cmp
mov
pop
push
adc
into
fcoml
call
pop
jecxz,pn
sub
sahf
test
or
mov
cmp
clc
xchg
pop
or
xchg
ret
mov
inc
enter
push
call
int
push
stos
inc
cmp
loope
or
in
adc
lock
repz
cmpsl
push
ret
dec
inc
aam
in
in
inc
fisttps
and
jle
mov
ret
or
sbb
bnd
cmp
aad
out
mov
mov
cmp
imul
jne
ds
aad
and
test
or
cli
lds
or
xor
xchg
cltd
pop
and
pop
adc
inc
dec
int
dec
lret
insl
jg
and
mov
clc
mov
push
xchg
cli
jbe
xor
xchg
fcompl
sbb
in
lret
dec
lahf
incl
pop
repz
adc
ret
pop
stos
jl
ficoml
addr16
add
bound
mov
out
adcb
mov
enter
imul
pop
xor
or
mov
arpl
in
hlt
scas
inc
adc
cmp
arpl
xlat
adc
ds
in
lret
sahf
sbb
stos
mov
aad
sub
repnz
push
push
sub
aad
rolw
xor
call
sub
push
leave
mov
ja
pop
jle
fsub
or
cmp
add
cmc
jb
rcrb
jl
sub
cs
popa
and
xor
insl
lds
dec
jmp
leave
jge
negb
adc
fidivs
call
clc
add
sub
pop
ss
pop
insl
sbb
lret
cmp
push
pop
adc
sbb
cmp
std
gs
or
adc
jne
enter
inc
jns
or
lods
pop
mov
les
inc
pop
stos
in
cmp
push
jns
inc
mov
gs
xor
or
iret
leave
xchg
xchg
adc
lods
mov
jne
jne
add
insl
add
sub
jge
repz
cltd
sbb
mov
push
call
idiv
and
out
ja
jne
mov
lcall
sbb
jo
and
fcompl
mov
lret
or
jge
data16
test
sub
les
push
je
inc
daa
adc
dec
dec
hlt
mov
inc
adc
push
and
adc
icebp
and
push
out
test
push
loop
cmpsl
ljmp
push
adc
lahf
and
mov
mov
xchg
cmp
fidivrs
sbb
mov
sub
sbb
fidivrl
cmp
or
addr16
in
pop
fcmovu
mov
dec
mov
andl
es
lret
mov
out
cltd
shlb
mov
out
gs
rol
loopne
sub
in
cmp
and
movsl
fs
xchg
fldcw
dec
test
punpckldq
lds
or
ja
shlb
sti
mov
jo,pt
and
leave
or
push
jg
sahf
in
push
mov
sbb
jbe
add
adc
pop
push
lret
rcl
test
xchg
push
in
and
mov
sub
adc
rcl
clc
lcall
adc
push
dec
jno
clc
mov
or
cmp
imul
push
out
sti
add
or
lahf
jbe
pop
scas
push
xchg
and
sub
jno
aad
lods
add
pop
call
sahf
push
adc
cmc
pushf
push
inc
add
repz
xchg
adc
test
stos
sti
push
nop
loope
fld
inc
add
xchg
and
out
push
es
and
cltd
shll
xchg
leave
mov
jbe
test
xchg
jae
mov
jp
out
mov
add
hlt
jo
jo
aaa
cmc
mov
push
mov
push
jp
mov
push
nop
sbb
and
or
mov
insb
push
cmc
mov
sub
out
into
xchg
ret
movsl
pop
sub
std
ret
ja
cmpsl
insl
imul
adc
out
jl
jae
inc
das
in
inc
cltd
fdiv
ret
mov
push
inc
dec
shr
jb
inc
dec
in
fnclex
xor
daa
mov
divl
add
xor
pop
inc
cmp
mov
jmp
mov
pop
sbb
dec
ljmp
aas
loopne
push
iret
ss
cwtl
mov
pusha
jp
xchg
cmp
or
mov
in
leave
daa
mov
repz
sbb
movsw
mov
jns
xor
push
mov
lret
or
add
jl
add
adc
fs
jae
je
xchg
or
or
sahf
lock
nop
jb
mov
inc
add
std
out
add
mov
addr16
jle
test
and
push
mov
inc
movsb
clc
cmp
leave
nop
mov
or
cmp
xor
sub
jne
inc
idivb
popa
dec
pop
mov
inc
bound
repz
insl
imul
cs
sbb
mov
mov
adc
jg
ror
sbb
shr
jmp
pop
sbb
adc
test
mov
or
xor
xchg
ss
loope
or
jecxz
into
pop
xor
sbb
sar
sbb
jge
cmp
or
cmp
test
aam
popf
nop
xchg
add
fs
ljmp
mov
sub
ss
test
cmp
or
in
cmp
push
and
jnp
js
popa
fstpt
add
push
mov
lahf
lret
jle
mov
mov
popf
rcl
dec
and
test
adc
pop
push
pushf
shll
ror
fsubp
dec
stc
sbbb
and
adc
fcom
ljmp
jb
lods
ljmp
inc
adc
add
add
mov
not
dec
stos
pop
inc
mov
in
jno
rolb
int
gs
jecxz
inc
or
jae
cmpl
push
movsb
es
outsl
adc
mov
sub
daa
lret
fisubrl
xor
movsl
repnz
aaa
push
pop
stos
std
xchg
insl
jb
adc
inc
xor
adc
flds
sbb
add
xor
lock
fcmovbe
mov
rol
ljmp
mov
das
jae
data16
ret
jno
cmp
rcrb
xchg
js
iret
pop
xor
dec
pop
jp
mov
roll
hlt
push
xlat
into
hlt
pop
cmp
mov
out
mov
sahf
mov
xlat
mov
pop
es
xchg
adc
push
mov
xchg
push
imul
sub
mov
dec
call
std
negl
rcrb
push
push
addr16
in
aam
pop
fistpl
imul
and
xchg
int
subl
xor
add
mov
out
icebp
pop
pusha
xchg
cmp
adc
mov
pop
mov
roll
lret
incl
and
push
stos
in
div
pushl
out
fisttps
out
push
mov
arpl
cmpl
pop
inc
mov
pop
fsts
pop
movsb
out
pop
lcall
insb
pop
xchg
mov
xlat
inc
xchg
jae
pop
and
xor
sub
inc
mov
xchg
sub
clc
les
imul
lret
cld
jmp
fisubrs
dec
mov
push
fwait
adc
int
jecxz
mov
call
jp
xor
xorb
mov
lods
out
adc
fbld
rolb
ds
leave
cmp
jmp
mov
in
add
popl
gs
jnp
mov
out
mov
sbb
imul
fldcw
cli
jmp
out
imul
or
dec
sub
data16
xor
mov
cli
cmpsl
stc
sbb
lods
mov
xchg
mov
cmc
or
adcb
push
cs
pop
lret
pop
test
mov
sub
rorl
lcall
pop
fwait
adcl
jmp
popf
xor
push
roll
pop
ljmp
call
jnp
cvtpi2ps
pop
addr16
mov
rorl
mov
mov
push
repnz
ss
arpl
sarl
push
popf
in
mov
rorb
xchg
and
lahf
icebp
sti
aad
cmp
lock
xchg
sub
sbb
fs
adc
int
add
sub
fst
test
in
xor
hlt
mov
fisubrl
or
mov
cmp
ficoml
stos
xor
adc
ffree
dec
jecxz
icebp
mov
bound
enter
jmp
sub
dec
cwtl
cmp
and
or
int3
mov
pop
out
not
sbb
mov
cmp
xor
push
mov
sub
imul
outsb
and
inc
outsl
bound
or
pop
fistpll
adc
sub
jnp
icebp
loope
data16
xchg
fdivs
push
cmp
cwtl
aad
mov
cmp
push
sub
and
movsl
movsb
cmp
sbb
test
popa
ds
or
jbe
xchg
int
pop
dec
or
cwtl
mov
or
dec
mov
mulb
mov
inc
push
inc
ljmp
push
mov
sbb
imul
into
fwait
xchg
js
mov
repnz
jo
scas
pop
shl
ss
push
lret
out
and
mov
mov
xchg
xor
aam
add
jnp
mov
push
subl
loope
mov
xchg
aas
sahf
xchg
stos
cmpsb
fisttpll
popf
cmc
cmpsl
daa
jo
jge
in
push
lock
dec
pop
jg
test
addr16
stos
and
in
and
jo
std
mov
push
cld
sti
insb
jg
sub
or
jecxz
flds
ss
pop
push
push
jge
sbb
or
push
xchg
push
push
sbb
inc
adc
not
movsb
dec
xchg
sub
mov
mov
pop
sti
xchg
fs
mov
xchg
outsl
dec
jmp
daa
mov
fwait
pushf
pop
iret
pop
mov
cwtl
rcrb
fcoml
das
popf
adc
dec
sub
aas
dec
daa
inc
mov
inc
push
add
sbb
ret
stc
lea
lods
and
sbb
adc
mov
push
dec
lcall
pop
jmp
hlt
jnp
or
sbb
jmp
cmp
mov
in
stos
and
sub
ret
xchg
add
dec
lock
mov
fdivr
dec
jle
int3
push
pop
mov
push
jae
xor
js
sahf
clc
ret
sbb
imul
pop
popa
cmp
shl
xor
cmp
sub
adc
mov
dec
mov
mov
orl
inc
or
and
ret
or
xor
outsl
in
call
fiadds
out
js
xchg
cwtl
scas
dec
push
out
mov
xchg
sub
inc
inc
lods
sarb
shrb
jnp
call
push
push
daa
adcb
cmp
repnz
pop
scas
cmp
jg
mov
cs
in
negb
jg
mov
push
xchg
es
sahf
sbb
ss
scas
in
xchg
xor
xchg
loopne
mov
jl
mov
rcrb
push
inc
fstps
inc
inc
push
jecxz
xor
rol
add
jecxz
jmp
jecxz
call
jae
mov
test
push
aad
xor
jecxz
scas
mov
and
subl
aam
dec
mov
mov
popa
push
les
pop
rorl
scas
mov
mov
hlt
mov
mov
dec
imul
nop
jb
shr
mov
mov
sbb
decb
xchg
ret
arpl
push
lods
rorb
ja
jbe
pop
jge
pop
and
movsb
xor
mov
xchg
pop
sub
lret
dec
aad
adc
cmpsb
test
insl
mov
xchg
nop
fsts
cmc
stos
adc
push
jecxz
out
filds
jecxz
sbb
mov
mov
mov
mov
test
aas
cmpsl
in
je
jle
pop
push
sub
dec
cmp
cmpsb
loopne
inc
xchg
outsl
sub
pop
add
mov
jns
pop
xchg
scas
out
not
mov
cli
push
add
push
dec
pop
xor
pop
push
js
push
lods
insb
daa
loope
xor
mov
js
cmp
fs
fs
sub
xchg
adc
clc
iret
pop
dec
xor
aaa
and
inc
lcall
push
hlt
inc
sbb
test
test
jecxz
add
push
into
fdivs
test
add
js
mov
lahf
and
es
lea
mov
pusha
into
mov
dec
add
and
or
cmp
ljmp
xorl
movb
inc
int3
cmp
xchg
fbstp
mov
xchg
jg
add
aaa
fnsave
xor
add
inc
icebp
insb
pop
ljmp
iret
scas
stc
sub
add
fwait
cmp
rcrb
cmp
nop
jg
ret
lcall
les
jecxz
jg
xchg
mov
pop
jo
sbb
lcall
dec
data16
xor
cmpsb
add
scas
daa
sbb
add
xchg
ficoms
lods
mov
testb
stc
inc
and
xchg
outsb
mov
mov
mov
pop
pop
cltd
stc
cmp
push
gs
pushf
enter
xchg
push
push
in
pop
cld
test
outsl
jge
mov
push
imul
cli
xor
out
lds
pop
push
cs
std
ffreep
xchg
or
into
imul
nop
inc
pop
and
jb
inc
dec
mov
in
rolb
ret
insb
xor
mov
mov
insb
popa
xor
pop
dec
jecxz
mov
addr16
add
adc
out
out
fs
sbb
jl
bound
movsb
pop
or
mov
push
adc
test
pop
test
cwtl
and
mov
xor
or
mov
inc
inc
out
and
dec
push
xlat
out
sbb
jbe
int
jg
adc
out
shl
jle
lods
sub
and
inc
in
bound
mov
push
ljmp
repnz
stos
icebp
push
xor
mov
ror
outsl
adc
and
mov
in
xor
push
clc
test
mov
data16
icebp
pop
pop
cs
scas
mov
mov
inc
xlat
push
pop
jmp
les
shrb
xchg
push
pop
inc
hlt
jbe
aaa
pop
loop
fmuls
stos
bound
inc
sub
dec
add
aad
scas
dec
pop
sub
inc
es
jmp
scas
cli
pop
negl
hlt
imul
inc
out
mov
imull
sub
add
shrl
push
std
jb
mov
pusha
bound
jg
mov
push
push
or
sti
push
int3
adc
jecxz
xchg
mov
or
mov
fldcw
fcompl
xor
and
aas
inc
dec
testb
inc
add
pop
movl
cmp
mov
mov
push
push
push
imul
idivb
lcall
insl
inc
inc
push
xchg
call
lret
and
pop
mov
jo
iret
out
bound
fstpt
jmp
aas
jecxz
jle
cmp
mov
leave
sbb
andl
inc
dec
lods
jns
cld
dec
shll
sti
pusha
insb
xchg
out
fsub
xor
scas
mov
cvtps2pi
and
ja
cmp
xchg
gs
adc
lahf
in
mov
outsb
arpl
ret
and
sbb
fwait
popa
in
inc
int3
xor
inc
push
and
adc
cmpsb
sti
sbb
mov
ror
rorl
adc
pop
mov
loope
sbb
adc
shrl
cmp
jbe
cmp
mov
pushf
ds
adc
mov
roll
ret
sbb
call
daa
vhaddpd
jno
adc
lods
lock
lods
fisubrs
orb
out
dec
and
mov
cmpsb
push
inc
jns
cmc
or
mov
lea
icebp
sub
xchg
sbb
xchg
jns
loope
dec
xorl
bound
inc
repnz
js
xchg
inc
mov
xor
push
xchg
es
inc
inc
ds
jmp
inc
mov
adc
pop
jb
notl
fs
add
push
lea
cld
cltd
jo
inc
call
pop
or
mov
sub
push
out
sbb
dec
dec
ja
outsb
cs
sbb
cwtl
mov
dec
sbb
mov
pop
jge
xlat
movsl
xchg
out
scas
cmpsb
pop
inc
cmp
xchg
popa
and
pushf
dec
cli
push
mov
mov
cmp
add
dec
inc
xchg
jb
icebp
cs
std
mov
add
push
mov
test
gs
cltd
sub
lods
xlat
xchg
stos
sub
fsubs
push
push
pushf
jo
pop
testb
fidivs
lret
jns
mov
stc
and
cmp
or
in
adc
mov
jge
loopne
jnp
gs
or
sbb
outsb
cmp
or
out
pop
pop
xlat
nop
js
imul
pop
mov
cmp
pop
in
cmc
ss
scas
xadd
in
imul
adc
cli
adc
push
dec
push
out
test
rol
mov
sub
outsb
xchg
and
cs
scas
mulb
push
push
push
sbb
xorl
jp
inc
push
fnstcw
push
icebp
sbb
and
jno
mov
push
sub
gs
or
fwait
sub
push
mov
or
out
add
mov
data16
mov
in
es
xchg
insb
xorb
sub
lret
out
push
ficoml
xchg
jmp
sub
jmp
lods
mov
or
std
mov
mov
mov
out
xor
jo
ror
adc
test
and
xlat
fldt
iret
lock
int3
mov
lock
bound
cld
js
out
push
pop
aas
dec
dec
xor
sub
mov
xor
cmpsl
mov
ja
mov
jno
fisttps
ret
repnz
xor
xchg
clc
and
push
out
mov
pusha
pop
lret
pmaddwd
sahf
dec
cmp
rcl
shrb
scas
mov
xor
jge
lret
jno
pop
pop
xor
lcall
jp
fildl
out
and
xor
push
cmp
rcl
jne
sub
fildl
mov
pushf
lea
adc
mov
test
mov
data16
aas
lret
shlb
push
jo
out
xchg
pushf
dec
aaa
or
or
popa
test
out
out
dec
or
das
fimuls
idiv
mov
xchg
push
aas
jmp
shrb
jae
push
push
out
mov
mov
fwait
cmp
cmp
iret
dec
or
mov
ja
in
inc
xchg
in
jg
cmpsb
inc
dec
lret
ret
lahf
hlt
pop
mov
aaa
in
lds
or
arpl
jne
cmpsb
pop
ljmp
dec
mov
and
imul
sub
out
ror
insb
or
mov
add
std
xor
push
fsubp
ret
xlat
fs
sbb
sbbl
sbb
or
adc
mov
push
cmp
or
xor
stos
add
fistpll
bound
pop
fmuls
adc
shl
bound
std
lods
and
into
aaa
hlt
cwtl
fnstsw
mov
cmpsb
out
out
sub
mov
movsl
fnsave
mov
in
cmp
adc
aam
lods
test
loope
ret
in
push
push
cmpsb
daa
test
sbb
out
xchg
fcmovnu
mov
or
or
jle
and
mov
std
or
add
shlb
dec
mov
stos
mov
jl
mov
sti
sbb
jge
mov
test
rcrl
xchg
das
jp
ret
cmpsb
and
imul
je
gs
jecxz
inc
cmpsb
sbb
inc
lret
push
lea
popa
outsl
jne
adc
popf
or
sti
js
xlat
aaa
repnz
or
inc
ja
inc
push
scas
out
sub
or
pop
arpl
testl
js
and
jmp
push
inc
rol
adc
add
lds
jb
das
add
mov
out
enter
sahf
inc
imul
add
adc
push
inc
push
out
movsl
enter
imul
add
in
bound
dec
mov
mov
dec
pusha
cmp
lods
je
mov
jecxz
xor
jnp
dec
divb
fidivrl
aaa
pop
and
inc
and
lods
mov
in
dec
sahf
mov
lret
repnz
sarb
mov
fnstsw
int3
lahf
mov
push
rclb
int3
mov
xorb
mov
jp
inc
in
in
xchg
lcall
sbb
push
lods
push
pushf
lahf
sti
hlt
in
imul
je
mov
loopne
xor
jo
and
sti
cmc
adc
mov
push
mov
xlat
ds
xchg
insb
or
cmp
dec
lds
orb
xchg
stc
enter
sbb
lea
and
and
aas
out
dec
insb
push
xchg
push
aam
push
in
aam
sub
adc
outsl
jns
js
pop
and
pop
xchg
gs
mov
jp
mov
lea
scas
pushf
aaa
jmp
mov
in
lea
pop
dec
xor
insl
xor
sti
enter
es
jne
ret
dec
sbb
dec
ror
iret
int
push
inc
mov
adc
mov
jmp
push
mov
cltd
insb
cs
cltd
adc
call
lea
inc
dec
xlat
rcrl
lcall
cmpsl
mov
cmpsb
xchg
pop
lret
outsl
jl
jle
lcall
aad
jmp
adc
enter
push
es
sub
add
insl
lods
mov
and
mov
in
fwait
lods
test
push
jmp
pushf
xor
push
cli
movsb
jecxz
jl
xchg
and
lret
jnp
push
jmp
scas
fdivs
sti
mulb
fucomi
roll
ljmp
xor
mov
in
data16
inc
xchg
xchg
rorl
iret
pop
fcomps
or
add
lea
adc
inc
mov
and
ret
sub
out
rol
mov
in
jmp
stc
xor
cli
jle
push
mov
leavew
insl
jns
xchg
hlt
push
inc
je
pop
ret
fucomi
lcall
add
inc
or
dec
inc
ja
lret
fldt
jbe
popaw
adc
scas
jno
je
mov
inc
mov
int
xor
adc
out
xchg
fwait
xchg
fistpl
cltd
and
add
jmp
add
jle
aaa
xlat
lret
jne
xor
sarb
mov
xchg
mov
cltd
mov
dec
mov
jbe
pushf
jb
mov
push
and
jae
nop
xor
cmp
jb
adc
test
push
sub
fisubrs
push
xor
fwait
mov
xchg
xor
in
stc
sbb
dec
push
lods
inc
pop
sbb
jb
xchg
or
pop
push
push
cmp
xchg
pop
jl
mov
ror
pushf
or
adc
pop
jg
xor
pop
add
mov
sbb
xchg
ljmp
or
call
adc
sbb
dec
add
adc
mov
mov
lods
jns
jno
testl
cmp
xchg
sbb
cmp
test
dec
push
das
sub
icebp
mov
jecxz
lcall
outsb
int3
ss
push
dec
int3
subb
insb
jecxz
pop
stos
ds
call
insb
inc
pop
mov
and
push
cmp
pop
or
xor
inc
inc
cmc
pusha
or
in
inc
add
clc
out
lea
push
or
repz
cwtl
mov
movsl
loopne
lret
daa
js
push
lret
inc
and
dec
adc
jae
mov
cmp
repnz
or
aas
test
mov
pushf
jmp
mov
enter
mov
outsl
or
jae
mov
adc
adc
push
sahf
in
jecxz
jne
and
jmp
sub
jb
shrl
aaa
jg,pt
lret
mul
adc
jne
and
mov
movsl
adc
dec
loope
ffreep
push
lock
sbb
mulps
and
dec
fildll
push
movsb
arpl
add
inc
xchg
insl
adc
popl
xor
loop
dec
std
cmpsl
adc
adc
xchg
sbb
jne
inc
inc
or
dec
push
sbb
mov
test
cmp
dec
push
iret
xorl
aad
push
xchg
iret
mov
nop
repnz
add
cmp
sub
jmp
loope
shll
mov
iret
scas
lahf
adc
js
inc
mov
je
mov
test
inc
jns
cs
loop
sub
ja
adc
rorb
fdivl
and
or
add
adc
insb
xchg
sbb
mov
xchg
jmp
jae
mov
aaa
pop
out
lods
fs
push
ret
clc
mov
jl
push
inc
mov
popa
ficoms
cwtl
idivl
add
mov
sar
data16
cmp
movsl
sub
js
add
jle
or
faddl
inc
stc
aam
jne
outsl
xchg
mov
sbb
sub
and
inc
es
popa
repz
ljmp
sub
int3
sahf
pop
insb
shrl
dec
aam
incb
jmp
es
sbb
sub
scas
ret
mov
xor
fisubrl
ljmp
dec
sbbb
lret
mov
fnstcw
or
xor
cmp
ja
push
xchg
xor
lret
or
mov
and
ficoms
push
test
insb
xchg
mov
rolb
test
xorl
jnp
fdivr
daa
add
lret
xchg
inc
mov
cmp
fisubs
sbb
push
pop
jb
cwtl
push
fwait
nop
lds
mov
sbb
scas
iret
xchg
push
xor
pop
cltd
dec
mov
out
push
jns
int3
fs
fcmovnu
enter
bound
adc
stos
pop
lds
dec
xor
or
adc
sbb
jno
add
cmp
push
sub
xlat
ss
cmpsb
movsb
dec
sbb
mov
xchg
xchg
je
cli
fwait
mov
lods
insb
and
not
jo
push
js
push
lods
or
pop
cmp
mov
je
jae
push
adc
in
stos
in
rclb
jg
pop
nop
and
push
add
fadds
jle
dec
mov
sahf
pop
sbb
sahf
rcrb
shlb
add
out
cltd
xchg
add
pop
sbb
das
fbstp
mov
loope
lea
sbb
mov
into
mov
xor
inc
popa
movsb
fldl
dec
inc
clc
pop
stos
dec
pushf
jp
jbe
dec
add
addr16
icebp
mov
and
push
and
push
movsl
subl
enter
call
sbb
sbb
xlat
bound
mov
push
add
inc
test
fstps
mov
add
rol
add
or
les
in
add
xor
inc
xchg
inc
test
sub
negb
jne
mov
or
mulb
js
lcall
hlt
addl
pop
jecxz
mov
dec
pop
add
in
outsl
push
mov
mov
pop
ret
ss
push
pop
popf
cmp
std
loope
jbe
sbb
cltd
and
dec
sahf
cmp
add
sbb
stos
xchg
cwtl
mull
jbe
sbb
iret
aad
aad
cmp
mov
stc
in
and
jl
or
lock
mov
jg
outsl
cmpl
cmpsb
pop
pop
pop
mov
add
adc
inc
vmulsd
lods
fldl
xor
andb
repnz
lods
cmpsl
pusha
stc
mov
push
jb
fiaddl
sub
aas
lods
cld
fsubrs
sub
popa
pop
cmp
push
mov
jae
std
fisubrs
incb
push
or
mov
xor
gs
push
and
lret
xchg
add
pop
lcall
sbb
jl
and
mov
fnsave
fwait
cmp
jmp
jg
add
mov
xchg
mov
in
stc
mov
and
nop
das
xor
jl
aad
not
sbb
xor
cli
inc
outsl
lods
mov
aam
test
popf
cmp
add
dec
xchg
pop
lret
cmp
rcll
or
out
lret
jl
test
mov
lahf
and
aaa
mov
popf
pop
add
xchg
add
xor
mov
xchg
push
jnp
pop
ret
mov
sub
sbb
popf
dec
pop
call
hlt
flds
xlat
rclb
and
adc
sbb
divl
daa
test
stos
ss
pop
lds
cmp
in
jecxz
fsubs
inc
aam
push
lock
rclb
pop
dec
into
loope
mov
push
push
and
jp
rcl
mov
adc
data16
and
xor
add
mov
sahf
xlat
adc
xorl
outsl
sbb
loopne
pop
nop
and
mov
cmc
mov
xchg
cld
jmp
scas
inc
je
push
inc
sbb
lahf
enter
xor
cmc
ficoml
fisubl
dec
in
mov
pop
dec
aas
lock
cmp
js
int3
pop
std
mov
imul
push
xchg
push
lock
enter
stos
mov
shl
adc
andl
cmpsl
dec
loope
push
adc
mov
pop
inc
mov
push
out
xor
rclb
dec
outsl
pop
cmpsl
stos
stos
xor
xor
enter
div
xlat
insb
in
lods
sarl
lock
repnz
xor
pop
jbe
mov
pop
rcrl
pop
imul
sarb
jecxz
pop
lods
or
add
sub
adc
sbb
inc
aam
test
pop
test
cld
push
loopne
sbb
aad
icebp
ljmp
fsubp
push
dec
pop
fildll
xor
push
inc
imul
leave
std
jg
repnz
cmp
aad
fstpl
lcall
mov
pop
cmp
iret
xchg
push
and
cmpb
mov
sub
xchg
adc
push
xor
loopne
push
mov
jmp
inc
pop
in
and
sbbb
notl
arpl
mov
jmp
adc
jne
movsl
iret
cmp
ficompl
popa
xchg
cmc
push
cmp
mov
mov
xlat
loopne
inc
aas
adcl
dec
fmuls
ljmp
decl
mov
adc
and
fsubrl
imul
test
jg
xor
mov
inc
xchg
fisubl
push
mov
imulb
inc
inc
adc
dec
cmp
sbb
popf
and
lahf
outsb
outsb
bound
dec
fwait
dec
icebp
fdivl
cmp
push
test
cmc
fdivr
and
repz
xor
cs
jg
stos
mulb
sbb
push
sbb
out
jle
pop
and
fiaddl
ljmp
ds
jp
mov
or
mov
lret
outsb
lock
out
push
sub
mov
data16
inc
test
mov
sahf
adc
mov
fwait
lret
ds
pop
loope
lods
add
cmp
mov
mov
mov
sbb
cld
mov
maskmovq
notl
pop
js
adc
and
mov
in
movb
repz
mov
sub
mov
mov
pop
ret
cmp
pop
or
imul
push
or
dec
cmp
add
jmp
mov
ret
pop
pop
fs
out
inc
int
imul
es
test
mov
arpl
pop
mov
xor
xlat
adc
ret
mov
mov
push
fisubs
push
jne
scas
inc
sub
mov
repz
dec
push
jbe
out
mov
and
sub
subl
add
adc
mov
add
mov
cld
aam
out
lcall
les
push
cltd
mov
icebp
ss
mov
enter
adc
mov
cmpsb
shrl
xchg
and
dec
repz
and
jo
mov
sti
loope
cmp
jg
test
jp
bound
call
pop
or
cwtl
pusha
mov
pop
xchg
jle
in
xchg
mov
outsl
xchg
cmp
or
lods
insl
push
dec
xor
lahf
xlat
out
jmp
fistpl
push
mov
pop
imul
adc
lret
pop
gs
mov
pop
xchg
arpl
mov
adc
sub
sub
push
inc
ret
pop
imul
or
mov
out
xchg
adc
scas
cli
dec
repz
and
sbb
cwtl
mov
sub
or
lahf
mov
dec
jns
lods
pushf
jne
subl
in
mov
pop
shrl
das
and
cmp
roll
xor
sbb
inc
out
and
sbb
sub
jbe
int
outsb
test
jl
add
dec
inc
test
push
sbb
in
outsb
push
sahf
ret
in
ljmp
and
sub
jb
inc
test
jbe
outsl
cs
and
mov
sbb
mov
adc
ret
std
mov
outsb
xor
test
dec
fs
mov
lahf
push
je
movsl
xchg
push
out
sub
mov
and
xlat
cmp
outsl
or
adc
into
inc
popa
jmp
cwtl
inc
dec
loop
xchg
sbb
jnp
dec
add
dec
aaa
sub
dec
shl
and
lahf
bsf
cmpsl
cli
enter
push
dec
into
cs
or
inc
jo
inc
loope
mov
and
sti
int
mov
cmpsb
ss
push
push
jmp
mov
cld
mov
mov
xor
adc
inc
les
movsl
xchg
sbb
xor
ret
inc
add
or
out
out
inc
idiv
mov
cmp
ljmp
aaa
xchg
fbld
or
cmp
sub
jo
fisubrs
mov
imul
pop
in
dec
dec
cli
mov
rorl
push
sbb
lods
jo
adcb
mov
jle
iret
push
fnstsw
push
sub
cmp
cmp
mov
call
sub
subb
push
shrb
call
fadds
mov
dec
es
mov
mov
mov
push
xchg
cmp
pop
hlt
roll
fs
pusha
jg
jo
xchg
cmp
test
push
outsl
sahf
fucomip
lods
dec
gs
mov
rcr
sub
xchg
das
loope
outsb
insl
and
xchg
rolb
out
repnz
lds
cmp
imul
add
pop
loop
xor
xor
int3
push
mov
sbb
into
mov
mov
or
mov
xor
in
push
mov
inc
push
sub
cmpsb
dec
aaa
out
js
xor
scas
push
xor
lcall
je
loopne
outsl
rcll
outsl
mov
add
in
push
lds
cli
fstpt
out
xchg
icebp
pop
push
adc
idiv
pop
inc
adc
xor
pop
rorb
cmp
and
lods
mov
sub
dec
cld
mov
pop
stos
push
ficomps
xchg
cwtl
mov
shlb
mov
xor
les
lods
or
bound
and
cld
int3
testl
out
and
push
mov
js
xor
gs
int
cmpsl
ss
lods
ljmp
insl
stos
je
ljmp
push
sbb
push
mov
pop
sbb
jge
jg
outsl
out
adc
stc
push
push
arpl
jns
jne
and
jne
push
popf
outsb
ljmp
xchg
dec
imul
gs
fnclex
mov
gs
and
push
mov
jnp
imul
jae
out
jns
sbb
mov
xor
add
add
adc
and
js
jg
mov
mov
mov
inc
leave
pop
add
loop
ss
lret
and
add
dec
pop
arpl
mov
push
test
xchg
jo
dec
xchg
insb
sub
pop
pop
sub
adc
dec
repnz
cmpsb
adc
inc
add
add
sbb
xchg
outsl
mov
and
lea
movsl
or
jg
outsl
xchg
push
mov
jg
fwait
jae
or
lods
jnp
pop
movsl
test
jl
mov
sbbl
std
imul
and
popa
dec
aad
add
inc
and
pop
adc
xchg
mov
fadd
int
in
dec
shr
int
stc
mov
sbb
push
xchg
inc
push
mov
mov
sbb
jne
xor
jne
insb
sbb
ret
mov
test
inc
xor
sbb
mov
ret
test
arpl
leave
sub
fcomps
arpl
adc
sub
push
mov
jb
clc
out
add
inc
and
insb
mov
into
call
sbb
int
push
outsl
push
pop
int
or
call
je
cmp
test
jno
pop
mov
inc
dec
push
mov
clc
subb
in
sub
shrl
cs
jl
aaa
fsubrl
cmp
mov
push
leave
ljmp
dec
xor
mov
cli
mov
fs
jne,pt
or
adc
scas
lds
add
or
sbb
movsb
xor
mov
popf
aad
mov
dec
popf
push
jmp
mov
add
pushl
inc
daa
jnp
jnp
jg
in
inc
shrb
mov
inc
fidivs
sub
insl
inc
push
lret
sahf
test
sbb
aas
call
filds
fsubs
dec
into
jne
cmpsb
mov
mov
icebp
adc
mov
push
cmc
pop
push
stc
fs
push
pop
jns
out
mov
incb
mov
inc
mov
out
fbld
jmp
add
pop
scas
sub
sarl
mov
lea
jl
xlat
mov
shll
test
aas
or
clc
int
fmuls
xchg
out
loop
sbb
jb
repz
cmp
push
push
arpl
rol
enter
lahf
xor
jae
in
jmp
lods
pusha
ds
pusha
push
pop
pop
es
repnz
pushf
adc
xchg
rorl
xor
negl
cwtl
aas
iret
les
es
pushf
jb
rclb
sbb
cmp
xchg
loopne
mov
rcrl
lcall
sub
icebp
jmp
adc
mov
dec
lcall
testl
loope
adc
lds
cmp
out
jmp
xlat
or
pop
xor
cmp
sbb
cld
fstpt
loopne
adc
lods
pushf
inc
sub
test
jnp
mov
enter
sahf
loopne
mov
push
movsb
lods
jno
jp
push
fildll
add
cmp
mov
mov
xlat
pop
jmp
cmpsb
leave
in
adc
std
jg
movsl
and
mov
sub
sub
mov
out
insb
and
mov
sub
lods
mov
rcll
xor
mov
lods
pop
push
jle
mov
idivb
mov
test
push
iret
xchg
out
xchg
into
subl
push
jg
mov
daa
sbb
fcmove
mov
xchg
and
push
or
stos
fbld
push
cmpsl
pop
pop
imul
push
fidivl
in
xchg
add
mov
or
fnstsw
push
rclb
test
mov
es
in
dec
and
xlat
pop
popa
ret
hlt
cmp
repnz
jge
addr16
add
mov
mov
mov
nop
sub
je
cmp
pop
mov
jg
cmpsb
sti
sbb
sub
or
jno
mov
inc
out
sbb
xlat
mov
add
mov
adc
fcmovu
sub
xor
jmp
decl
cmpsb
insb
mov
pop
jne
sahf
fsts
stos
mov
pop
sbbl
mov
aad
add
lods
adc
pusha
or
dec
scas
add
decb
cmpl
rcr
test
push
jecxz
add
rorb
sbb
test
dec
xlat
jnp
xorl
out
popf
das
je
ja
mov
nop
pop
mov
or
jg
and
outsb
pop
stos
outsl
into
adc
in
test
lds
insb
add
cmpsb
mov
lds
add
inc
or
push
or
jecxz
leave
insl
jl
mov
dec
push
into
shlb
mov
insl
jle
jge
mov
push
ja
stos
popl
pop
xchg
int3
sub
sub
adc
sbb
or
icebp
test
ret
add
push
ror
mov
repnz
pop
out
add
mov
movsl
imul
lock
js
loope
adc
adc
fwait
mov
jle
pop
icebp
jmp
mov
cwtl
mov
outsl
inc
mov
lock
jle
adc
mov
push
jne
popf
xor
fldl
imul
cmpb
sub
pusha
aam
jnp
xchg
cmp
aad
jecxz
loopne
sub
cmpsb
mov
scas
shrl
mov
std
xor
dec
pmulhuw
fdivr
into
push
fildl
orb
sub
lret
lock
push
scas
pop
jne
mov
shrb
repz
lret
sub
fwait
ljmp
mov
pushf
or
xlat
push
or
int
sub
loope
xorb
mov
and
sbb
addr16
cli
pop
out
js
in
mov
or
push
mov
popf
fstpt
cmp
sbb
jle
push
jbe
aad
das
cmp
push
push
mov
or
into
mov
imul
lods
imul
mov
xor
pop
arpl
mov
jmp
rcl
push
jle,pt
xchg
stc
lret
and
xchg
popl
add
lea
inc
aad
je
xchg
jns
push
sbb
and
adc
xlat
jnp
kmovb
js
mov
dec
stc
scas
inc
pushf
or
mov
push
sahf
out
jno
push
ret
or
call
scas
jp
fsubrl
cmp
call
inc
stc
lods
sub
mov
vpaddd
xor
test
mov
test
int
or
dec
lods
ljmp
adc
fstpl
into
test
icebp
cmpsb
sahf
aas
fnsave
dec
xchg
sbb
fsubp
xor
sub
cmp
in
ss
fsubrp
and
push
jbe
pusha
jno
mov
pop
stc
test
xor
lret
cmpsl
loope
add
out
daa
and
jb
xchg
fstpt
add
stos
dec
pop
pop
sbb
shl
fsubrs
inc
cmc
incl
lods
hlt
sbb
fsubrp
nop
xor
and
rcl
testl
sahf
push
cltd
dec
cwtl
pop
jg
aas
rcll
test
ds
xchg
jne
out
mov
daa
ljmp
inc
jnp
fistl
mov
pusha
fcmovbe
dec
mov
adc
ret
fbld
push
jno
adc
adc
stc
mov
test
imulb
out
jbe
rcll
stos
cwtl
lahf
aad
fcoml
mov
xor
out
xchg
addb
xorb
cltd
add
xchg
faddp
movl
or
or
cmc
xchg
xor
lock
push
xor
into
fbld
stc
call
push
sarb
into
cwtl
ss
pop
dec
arpl
shl
mov
fwait
mov
movsl
hlt
mov
inc
dec
sub
repnz
clc
enter
nop
push
sub
xchg
mov
daa
in
and
les
mov
jne
pop
add
xor
mov
shrb
ss
lds
xchg
jecxz
decl
stos
inc
pop
scas
stos
movsb
push
daa
movsb
lahf
out
push
outsl
xchg
outsl
xchg
or
or
imul
cltd
cmpsb
scas
adc
scas
jmp
lcall
lds
in
inc
add
mov
es
mov
dec
hlt
cmp
lds
push
mov
xor
lret
lret
mov
mov
sbb
pushf
mov
arpl
and
mov
push
jmp
psubsb
and
mov
pop
push
es
mov
lods
add
pop
jl
xor
int
cmp
pop
adc
mov
mov
inc
mov
dec
popf
or
cwtl
mov
mov
cld
inc
dec
ficoms
lea
mov
mov
das
mov
jecxz
inc
mov
ret
repnz
divl
xchg
into
adc
push
xchg
mov
test
lods
pop
jnp
jo
cmp
movsl
loop
jg
add
pop
aad
xor
add
out
jae
ja
cmc
or
ja
jmp
int3
sbb
xor
frstor
sub
cmc
mov
in
cwtl
test
outsb
fsubrp
mov
out
xor
int
pop
xchg
and
lahf
dec
fidivrs
test
xor
mov
jo
sub
fsubl
mov
inc
cmp
pop
xor
mov
cmp
lcall
jg
out
pushf
push
inc
lea
je
mov
out
test
stos
pop
pop
orl
out
mov
addb
add
adc
adc
mov
push
adcb
in
mov
jecxz
ja
or
call
popf
enter
notl
xchg
pop
adc
ret
mov
xchg
push
inc
aam
push
sub
pop
fistpl
mov
mov
xor
sub
cld
pop
mov
lock
xchg
out
sub
repnz
decl
out
xchg
adc
dec
pop
jb
bound
icebp
dec
clc
test
xor
bound
mov
jmp
test
xchg
cmp
dec
in
and
outsl
push
daa
pop
into
mov
jne
fcoms
js
fcompl
in
fwait
ja
and
push
push
arpl
pop
adc
sahf
dec
ljmp
dec
fisubs
stos
xor
cmp
sub
in
add
pop
add
int
push
xorb
fildl
idivb
shlb
push
imul
in
jecxz
cmc
fildl
mov
inc
sub
testb
pushf
pop
push
dec
inc
jmp
jns
jle
push
aaa
mov
sarb
mov
pop
mov
stos
outsb
jns
mov
sub
les
cmpsb
inc
sbb
xchg
mov
ds
cltd
dec
pop
scas
sti
insb
gs
cmp
cwtl
mov
gs
xlat
sub
push
out
jno
arpl
fsts
movsb
xchg
cmp
pusha
pop
xchg
pop
mov
and
popa
jo
aaa
aam
inc
jmp
inc
iret
out
adc
xadd
insl
xor
jno
mov
call
push
sarl
xchg
fstps
call
cmp
lret
xor
ror
cmc
mov
xchg
movsl
or
jns
mov
sbb
jo
mov
adc
jo
arpl
arpl
mov
sub
cld
ror
xor
stos
mov
jno
pop
in
push
jno
push
dec
add
dec
popf
push
pop
dec
lea
cmc
pop
data16
cs
add
sahf
js
mov
pop
aaa
popf
mov
sub
out
xchg
mov
mov
test
sbb
xor
dec
xchg
lods
fs
and
push
pushf
cld
and
cmp
fidivs
pop
pushl
fwait
loope
push
pop
loop
push
test
inc
mov
out
jl
das
ret
hlt
and
xlat
xor
loop
movsb
js
dec
testb
adc
add
std
cmp
mov
push
insl
es
or
mov
stos
cwtl
push
ret
xor
icebp
inc
cmp
jns
out
xor
push
sbb
sbb
dec
sub
fmul
loopne
xchg
loop
mov
sub
add
out
push
xchg
lret
shl
loop
mov
push
ja
test
imul
movaps
inc
push
jp
psllq
mov
int
sti
add
inc
push
movsb
push
or
fs
pop
pop
imul
js
cmpb
mov
mov
push
jge
outsl
lds
into
push
fdivr
stos
and
and
rorb
aas
sub
xor
push
rcrl
and
mov
jb
or
push
movsb
xchg
pushf
pop
faddl
aam
jnp
and
inc
sbb
mov
mov
mov
std
popf
cmpsb
ss
mov
dec
inc
hlt
cmp
jecxz
test
sub
adc
test
cmc
fs
sub
cmp
jb
lcallw
jne
les
mov
subb
cmpsb
mov
push
cmpsb
sub
cld
jno
dec
shll
sbb
jecxz
scas
fnsave
mov
jns
stos
push
xor
jae
mov
mov
jmp
lret
and
push
pop
int3
ret
outsb
xchg
jb
xchg
or
fstpt
jl
popl
inc
fsubr
test
ret
mov
hlt
in
lret
pusha
repz
lods
mov
jle
das
add
loope
add
mov
xchg
or
jno
push
pop
in
call
scas
mov
ja
adc
lock
mulb
xor
dec
push
cli
cltd
movsl
xchg
cmp
clc
inc
jge
scas
push
test
adc
sbb
jge
push
fadd
jb
inc
jne
fdivl
iret
repnz
xlat
lahf
cmp
hlt
cmp
icebp
xchg
icebp
in
adc
popa
xchg
mov
push
les
mov
dec
mov
add
rcll
mull
jno
sub
rol
lcallw
pusha
cwtl
and
mov
jns
push
push
lds
andb
in
sub
jae
fisttps
loope
fadds
ss
sub
out
dec
sub
sahf
add
xchg
repz
and
jne
in
inc
dec
popa
aam
lret
sysret
rcrl
cmpsb
rcl
sub
mov
fs
jo
sbbb
jno
daa
adc
push
mov
mov
movsl
or
nop
lds
lcall
or
sub
sbb
cmp
arpl
inc
in
test
pop
loop
cld
in
rorl
dec
push
adc
fs
xchg
cmpl
imul
test
out
shr
xorb
add
add
pop
or
cltd
loope
test
mov
es
xor
adc
cmp
mov
or
iret
leave
pop
xor
pop
fildl
jno
cltd
std
jo
cld
aaa
cmp
xchg
daa
pop
mov
out
in
pushf
popf
adc
jmp
and
outsb
test
ds
int
jmp
lods
sbb
mov
ja
iret
sti
or
jns
test
mov
xor
jl
cmpb
dec
mov
arpl
aas
jmp
lcall
ljmp
jecxz
and
out
nop
dec
jp
lea
cli
sti
pop
cmc
mov
out
jno
outsl
cmpsl
xor
sbb
gs
not
add
xchg
mov
lea
fsincos
out
inc
cmpb
cwtl
stc
rcll
lock
test
in
cwtl
lret
adcb
daa
xchg
test
hlt
add
js
loopne
sub
pop
das
mov
adc
in
jb
stos
jae
inc
cmp
ds
scas
and
and
pop
lods
sub
ja
dec
add
cld
sub
push
xchg
mov
mov
adc
decb
push
push
psadbw
xchg
ficoms
popa
mov
mov
dec
push
jnp
push
addl
mov
movsl
mov
pop
pop
nop
aad
jns
jmp
push
fxch
stos
jno
and
mov
and
loopne
nop
test
and
push
push
mov
out
sub
xchg
jne
push
icebp
xor
pop
test
sbb
test
pop
mov
push
pop
or
fidivrs
cmc
addl
push
sbb
in
or
cltd
test
into
dec
cs
push
push
dec
movsl
mov
lahf
lods
test
movsl
and
std
addr16
xor
push
out
jg
outsl
xor
mov
das
mov
icebp
outsb
adc
std
scas
ficomps
xchg
sbb
or
mov
push
sub
icebp
push
loopne
test
outsb
inc
mov
or
cli
lahf
or
bound
pop
pushf
jecxz,pt
cmpsl
cmpsb
adc
jge
push
pop
xlat
jecxz
dec
mov
mov
fildll
pop
dec
fwait
mov
fucomi
add
iret
mov
sbb
icebp
popf
repnz
and
sahf
cmp
test
dec
or
not
imul
cld
out
loope
test
js
jne
or
fwait
std
mov
adc
fcompl
ficomps
jo
push
and
cld
mov
mov
ret
mov
test
fadd
cmpl
xchg
adcl
inc
mov
fistl
jmp
mov
arpl
cmpb
inc
and
dec
pop
or
test
outsb
dec
cmp
popf
jmp
push
mov
sub
push
mov
jecxz
xchg
adc
cmp
xchg
inc
scas
adc
stc
mov
pop
filds
adc
dec
sub
mov
mov
cmpsl
xor
add
cmpsl
movsl
pop
cmc
xchg
dec
jle
mov
pop
test
dec
mov
cmpsb
push
sarb
adcb
lods
out
mov
sti
scas
push
mov
mov
test
popf
jb
mov
jecxz
mov
enter
stc
add
sbb
lds
ja,pn
ret
push
or
sti
icebp
iret
jl
push
cmp
jo
cmpb
dec
mov
push
and
dec
add
stos
aad
or
jmp
fmul
fcoml
addr16
cmpb
and
jnp
mov
add
or
cmp
in
and
push
push
in
fwait
pop
test
popf
imul
cwtl
adc
or
sbb
jecxz
jecxz
push
mov
dec
jmp
push
mov
repnz
mov
into
add
shlb
ret
aad
mov
xor
and
movsl
rolb
or
cmp
mov
lock
sbb
sbb
xchg
cmc
pop
ret
ret
add
lds
mov
mov
xlat
in
mov
sti
repnz
int
push
cmp
jle
sbb
pop
add
jns
or
icebp
notl
jecxz
popa
ss
push
cmp
inc
arpl
inc
push
mov
icebp
push
rcrl
inc
cld
int3
mov
sbb
inc
mov
mov
push
stos
jo
adcl
push
out
or
push
incl
jns
mov
aad
inc
or
xchg
fwait
mov
xor
int
cwtl
out
fwait
add
int
ja
loope
and
pop
leave
or
daa
into
jp
xor
xchg
repz
ljmp
in
xor
push
jnp
fidivrs
test
and
imul
mulb
xor
or
adc
das
sub
lods
aam
loopne
cmc
xchg
pop
lods
lea
mov
inc
les
cmp
push
imul
iret
push
icebp
or
xor
std
dec
pop
fisttpll
jns
push
add
sub
push
outsb
les
outsl
and
cmp
out
cmp
out
mov
repz
mov
jl
mov
in
adc
mov
cmp
shl
xchg
mov
mov
xor
push
call
hlt
xchg
add
add
into
mov
cmp
add
mov
fs
leave
mov
in
je
jo
mov
and
mov
daa
in
fldt
rclb
jb
push
mov
sbb
pushf
push
dec
sbb
mov
movsb
popf
fstps
leave
loopne
xchg
pusha
ficoms
lds
cmp
repnz
in
shlb
push
call
movsl
imulb
insb
sbb
pop
mov
repz
ret
or
pop
xchg
js
es
mov
test
dec
aam
inc
test
add
lock
enter
inc
arpl
pop
out
xor
mov
cmp
stc
fwait
into
outsl
div
aad
popa
into
repnz
mov
fnstenv
leave
dec
cli
push
lcall
les
and
mov
push
cmc
out
gs
fs
sbb
xor
loop
lds
fxtract
sub
jp
roll
das
jecxz
mov
sbbl
lret
push
int3
sbb
mov
push
gs
jns
jp
sbb
mov
iret
mov
stos
pop
pop
mov
mov
cmpsl
out
scas
and
jle
jmp
cmp
nop
sub
lock
dec
in
pop
push
imul
mov
xor
rcrb
aad
push
scas
push
mov
pop
push
loopne
sar
popa
mov
add
inc
ss
inc
adc
rolb
push
fcoml
inc
xlat
cmp
in
repnz
cmp
lds
aad
jg
mov
lea
repnz
or
sub
pusha
repz
lock
push
mov
test
or
jnp
lret
adc
mov
outsb
clc
fidivs
or
pop
or
xchg
xchg
out
fldl
push
xchg
iret
inc
cmpsl
and
rolb
shll
or
jmp
jnp
test
popf
mov
push
cmpsb
int
pop
push
movd
inc
and
inc
lock
push
ret
stos
sub
add
cmp
sbb
mov
aad
stc
lock
sbb
lahf
xor
sub
push
mov
mov
loopne
xchg
lret
lds
rcrl
push
cmp
aad
lret
clc
cmp
stos
push
mov
adc
push
test
push
xchg
ds
push
lods
addr16
add
loope
mov
fdivs
mov
push
in
push
push
sub
mov
push
in
sbb
mov
lods
aad
jl
hlt
jo
and
pop
es
xor
jmp
or
or
ror
cmp
inc
out
xchg
out
cld
jmp
in
out
test
lods
or
loope
cmp
adc
dec
cmp
fwait
scas
stos
out
dec
or
pop
pop
xor
insb
addb
loopne
loopne
jbe
rcl
jbe
leave
or
fwait
jmp
adc
and
daa
xchg
rolb
sbb
icebp
adc
rcrb
mov
and
shl
shll
inc
xor
mov
sbb
xchg
sbb
fldenv
jle
sbbl
std
xorl
adc
mov
sub
dec
pop
inc
movsl
ds
cwtl
xchg
lods
icebp
ljmp
stc
jo
inc
mov
js
mov
inc
xlat
add
cmpsb
pushf
inc
mov
cltd
ficoml
jnp
rolb
pop
iret
xor
bound
mov
std
jno
loopne
psllq
lods
es
pop
repnz
mov
pop
arpl
mov
rorl
std
ja
in
orl
dec
fs
hlt
loopne
xor
dec
and
fimuls
gs
mov
and
sti
jmp
cmpsl
insb
imul
pushf
ficomps
je
into
outsb
dec
add
nop
insb
jmp
pusha
hlt
aas
mov
mov
pop
repz
hlt
aaa
rcrl
add
sub
mov
call
les
outsl
test
mov
rclb
in
and
cld
pop
loop
out
jns
in
cmpsb
stos
add
test
and
xor
lods
xchg
sarb
inc
add
es
pop
mov
push
shlb
imul
add
les
jo
cld
lods
and
adc
loope
add
js
fbld
jp
bound
cmp
xor
fidivs
pop
cmpsb
pop
mov
push
sbb
daa
push
or
xchg
pop
ss
cmp
mov
push
shll
add
out
iret
xchg
aam
sub
sbb
and
fstpt
mov
gs
bound
loope
xlat
in
pop
bnd
xor
inc
mov
outsl
xchg
push
or
jb
scas
push
xchg
sub
das
adc
adc
std
inc
inc
adc
out
mov
fstps
jns
mov
inc
cmp
sbb
mov
out
dec
in
andb
cmp
sub
lock
inc
sub
lret
xchg
or
add
test
scas
xor
daa
push
les
push
inc
adc
cmp
sbbl
dec
push
jp
pop
rorl
cmp
adc
fdivrl
mov
mov
mov
pop
inc
jae
push
int
lea
inc
fwait
dec
xchg
int3
xchg
imul
outsl
fwait
jns
lds
jecxz
push
in
cmp
ret
jno
sub
jns
repz
rcr
adc
jne
out
addr16
into
imul
pop
int
lahf
ds
sahf
or
aas
mov
add
mov
push
dec
dec
or
push
mov
cwtl
ret
and
js
push
push
les
js
mov
dec
xlat
add
mov
xchg
mov
dec
xor
mov
push
mov
cltd
and
mov
fmull
inc
addr16
sub
test
sahf
aam
inc
jg
jle
sarb
and
aaa
fnsave
or
testb
daa
sahf
xchg
cwtl
mov
daa
dec
lock
lret
inc
mov
push
mov
mov
gs
xor
cmp
decb
idivb
cmp
cmp
fcoml
mov
icebp
inc
jle
sbbb
aaa
sbb
ret
imul
adc
fiadds
dec
xchg
rolb
rol
lret
lcall
pop
pusha
add
lahf
out
mov
daa
adc
cld
imul
mov
pushf
and
add
aam
xor
arpl
dec
icebp
outsb
fs
lret
cmp
hlt
sbb
js,pt
and
shlb
adc
out
cmp
popf
lcall
mov
mov
push
outsb
aam
insb
cmp
mov
pop
or
fldenv
mov
add
stos
pop
dec
loope
and
adc
cs
mov
mov
aas
mov
ljmp
add
adc
pop
mov
xor
sbb
sbb
sub
jns
sbb
js
sub
leave
dec
fsub
inc
inc
bound
enter
push
fsubp
jl
enter
adc
fistps
mov
mov
xchg
mov
popf
scas
repz
xor
adc
fbld
bound
sub
sarl
lds
inc
xor
outsl
aad
mov
push
loope
inc
push
push
pop
sahf
sub
dec
jecxz
enter
aam
jo
nop
cmpsb
frstor
cmp
fdivr
xlat
int
mov
outsb
roll
lods
mov
jp
sbb
sbb
pop
in
pop
scas
loope
xchg
jno
mov
loopne
std
es
aas
add
push
popf
dec
jns
push
cltd
mov
repnz
in
cmp
hlt
gs
pushf
sti
rcll
add
std
daa
pop
xchg
scas
fbstp
mov
repnz
mov
mov
inc
rcrb
cltd
les
mov
ja
vminpd
xorl
sbb
push
sbb
insb
out
push
inc
jnp
sti
and
lea
fwait
bound
mov
jle
repz
cs
inc
test
xlat
fxch
jae
push
mov
or
std
loopne
mov
inc
jl
test
cld
loopne
xchg
jge
dec
scas
cmpsl
sub
cs
das
xor
les
popf
imul
adc
xchg
clc
sbb
mov
insl
jge
insl
xchg
sahf
jmp
jb
jmp
push
pop
ja
cli
loopne
outsl
das
les
arpl
cmp
mov
hlt
adc
lret
push
mov
add
mov
add
jnp
push
mov
ret
sub
in
cmp
scas
pop
cmp
and
fs
or
add
js
iret
and
ret
ss
mov
nop
mov
sbb
adc
daa
cmp
mov
mov
lock
hlt
andb
pop
sbb
fcomps
or
les
mov
adc
cmp
inc
lea
mov
addr16
sbb
jnp
sbb
imul
inc
push
shll
js
sub
and
xor
adc
and
ror
or
or
jl
fadds
xchg
sub
cld
ficoms
mov
jb
inc
imul
push
outsb
shrb
mov
cli
cmp
jge
test
ljmp
das
into
cld
ficomps
lds
sub
inc
xlat
dec
xor
cmp
jle
cwtl
mov
sub
mov
test
icebp
rcll
jg
xlat
mov
xchg
sub
loope
push
rsqrtps
repnz
test
pop
pop
xor
sbb
std
mov
iret
incb
rclb
in
test
and
or
rcr
push
cmp
bswap
sbb
xor
aaa
push
jmp
cs
dec
fcomps
pavgb
ret
xchg
jge
adcb
lahf
dec
mov
xchg
daa
jo
mov
cli
sub
sub
icebp
in
lcall
or
frstor
push
or
dec
aad
pop
divb
std
adc
lahf
mov
cs
les
sbb
lock
enter
and
pop
inc
push
stos
mov
loope
fcomps
shlb
fnsave
and
jo
movsl
icebp
push
push
popf
or
lahf
sbb
lods
mov
jle,pt
xor
imul
adc
mov
xchg
xchg
aam
jnp
push
jne
stos
cmp
xchg
fstpl
into
sub
out
enter
jne
cwtl
xor
aaa
and
decl
fs
cwtl
hlt
mov
test
fists
xor
fimuls
lock
mov
xor
ss
cwtl
jle
lret
push
push
dec
sub
and
and
jl
adc
fwait
mov
xchg
sub
ss
lcall
jb
inc
dec
push
mov
pop
data16
clc
push
jns
je
mov
mull
xchg
xchg
cmc
xchg
push
imul
inc
fdivrl
and
and
ret
in
adc
mov
jmp
mov
fucomip
adcb
fistps
ss
leave
or
gs
js
pop
rclb
testl
xorb
decb
adc
mov
idivb
test
cmpsb
sub
mov
xor
outsl
testb
outsl
xor
add
push
xchg
js
inc
movsl
popf
call
xor
mov
push
aad
xor
dec
loop
stos
inc
push
ficoms
clc
pop
pop
jnp
fisttps
xchg
inc
popa
xchg
imul
adc
mov
xor
sub
xchg
fldt
fldenv
mov
mov
adc
mov
icebp
je
insb
adc
pushl
jl
and
jl
sbb
and
xchg
scas
call
sarb
ret
push
push
mov
aas
inc
push
fistl
push
rclb
mov
mov
jmp
nop
cmp
cmp
sbb
mov
adc
jb
cmpsl
dec
adc
aam
sahf
decl
sarb
mov
jns
call
adc
stc
sbb
xchg
movsb
imul
push
mov
insl
in
lods
das
scas
cmp
movsl
lock
mov
xchg
and
jno
outsb
lret
xchg
stc
inc
pop
out
cli
mov
xor
repnz
mov
repz
scas
repz
pop
cli
mov
and
pop
je
sub
test
insl
sub
andb
mov
mov
pop
pop
lret
clc
mov
les
pand
sub
cmp
jmp
cmpsl
cmp
jle
scas
mov
push
dec
test
imul
js
push
xor
jge
fcompl
aaa
inc
daa
jl
addb
sahf
icebp
sbb
cmpb
mov
xchg
cs
xchg
push
fldcw
inc
xlat
sub
inc
mov
push
ret
sbb
push
mov
fcomip
xchg
fistpll
jmp
les
add
xchg
mov
clc
dec
das
shrl
pop
outsb
iret
bound
ret
pop
dec
test
xor
jmp
mov
xchg
mov
ffreep
ss
pop
rorl
int
lcall
jle
adc
cs
mov
pop
bound
shll
orb
js
adc
lret
push
adc
pop
jne
cmpsl
cmpb
xor
mov
mov
and
add
and
js
cmpl
push
psrlq
add
nop
aaa
push
sub
cld
jno
outsl
pop
cmp
pop
cmp
rcl
xor
mov
cmp
push
imul
mov
lea
fisubrs
sbb
sub
imull
lahf
imul
pusha
lret
stos
lods
loop
and
xchg
jo
sub
lret
cmp
push
add
icebp
jle
xchg
call
shl
and
fs
mov
orl
fwait
loope
push
pop
push
mov
andl
jne
bound
je
add
std
mov
and
lea
sub
adc
enter
jg
int3
mov
lret
or
stos
pop
std
xchg
loopne
fmuls
inc
sbbb
hlt
scas
bnd
inc
faddp
push
push
ret
sbb
and
repnz
xchg
inc
cmpsl
pop
cmpsl
mov
adc
enter
dec
sub
xor
and
fwait
div
mov
fsubr
mov
adc
dec
ja
je
test
es
push
idivb
std
xor
and
xor
or
inc
inc
xor
or
sahf
cmc
dec
scas
dec
push
test
dec
add
or
or
das
adc
mov
cmp
and
or
in
inc
jae
and
fisubl
push
movsb
mov
divb
mov
jb
test
insb
mov
in
adc
popa
xor
int3
and
outsb
cmp
jp
inc
lahf
ret
pop
cmpsb
xchg
push
mov
movsl
test
out
loope
in
push
cmp
push
pop
mov
push
fdivl
jnp
shlb
popf
add
adc
arpl
cmp
imul
mov
push
sti
bound
icebp
aad
mov
jp
adc
xchg
jle
int3
or
movsb
adc
dec
adc
sub
push
loopne
stos
das
js
jb
pop
je
xor
xor
bnd
mov
lret
pop
mov
scas
or
in
out
cmp
push
test
mov
or
fcom
mov
outsb
lea
data16
test
or
jnp
mov
mov
sbb
lret
mov
mov
sbb
in
sub
pop
xchg
jnp,pn
add
xchg
cmpsl
or
dec
loope
add
stos
in
adc
cmpb
mov
push
mov
xor
sbb
sbb
mov
outsl
xorb
sbb
inc
inc
push
push
outsl
sti
add
in
push
cli
pop
mov
mov
lock
outsb
insl
cmpl
jne
add
movsb
mov
push
scas
inc
mov
xchg
jne
xchg
mov
pop
pusha
pushf
int
mov
je
or
int
fdivl
clc
dec
mov
mov
pop
outsl
sbb
push
negb
pop
or
sbb
sub
mov
mov
add
je
and
shrb
xchg
mov
adc
icebp
xor
pusha
je
xor
jp
mov
or
pop
enter
mov
ljmp
mov
int3
rorb
subl
jb
cld
and
nop
testl
mov
cmp
into
test
fadd
data16
xchg
cltd
xor
cmpsb
push
fwait
inc
pusha
int
aas
ss
jae
sbb
push
movb
mov
out
push
and
lods
test
leave
scas
fldln2
dec
lcall
arpl
lret
adc
cmc
mov
arpl
addl
sub
fincstp
lret
ljmp
fwait
jecxz
hlt
jae
and
pop
pop
adc
bound
sub
ss
pop
and
icebp
dec
fistps
mov
adc
int3
aad
ret
in
mov
aaa
jmp
das
test
leave
outsb
adc
lds
cltd
fcomip
out
add
add
jg
ret
xor
repnz
aas
stos
push
arpl
clc
movsb
xchg
dec
pop
push
nop
aam
pop
movsl
mov
into
cmp
shrl
xor
shl
cs
stos
pop
das
int
ds
inc
sbb
xor
shl
cmp
in
inc
mov
stc
fsubrs
test
and
or
lods
pop
fisubl
in
test
in
or
jne
push
inc
stc
push
movsb
test
mov
push
aas
idivb
mov
mov
jp
dec
xchg
push
cwtl
mov
mov
movsb
hlt
je
sbb
and
push
insl
scas
push
mov
sbb
repnz
mov
cld
add
scas
or
jno
bound
push
cld
sbb
mov
rcl
in
lret
jmp
in
sub
and
ror
in
sbb
adc
test
insl
inc
push
adc
sbb
movsb
mov
out
mov
imul
repnz
out
inc
cwtl
jns
mov
mov
test
lds
repz
jg
fimuls
shrl
test
shll
adc
scas
jo
dec
dec
mov
imull
shlb
jmp
cmpsb
xor
mov
pop
in
cltd
ret
negl
xor
cld
sahf
push
xchg
mov
jg
jge
fnsave
scas
dec
dec
lcall
pop
cmpsl
dec
fistps
xchg
inc
lret
daa
mov
adc
cli
or
xchg
inc
sbb
hlt
xor
fnstenv
dec
mov
lret
jo
mov
mov
sahf
push
ss
subb
iret
movsb
add
daa
out
popl
cs
sub
mov
mov
mov
mov
mov
sbb
loop
inc
hlt
push
fcom
jno
and
imul
test
aaa
out
shlb
sahf
sub
sub
lods
jnp
sub
sub
sbb
fdivr
or
push
jmp
xlat
push
arpl
ds
xchg
es
inc
mov
fimuls
movsb
jnp
data16
mov
cld
adc
xor
add
dec
pushf
push
mov
push
inc
idiv
les
ljmp
adc
cld
push
incb
xchg
mov
loop
and
sub
cmpsb
addb
ljmp
outsl
add
std
loopne
js
dec
shll
pushf
add
mov
stc
jecxz
inc
or
jg
ja
cs
jo
repnz
add
inc
dec
cmpsb
xchg
jns
add
mov
sub
push
iret
int
stos
xor
xchg
aad
jns
imul
int
loopne
jne
or
adc
push
std
push
es
rorl
inc
sub
mov
jg
shlb
and
sbb
mov
cmovs
xor
ret
or
dec
xchg
add
scas
sub
iret
cs
jle
mov
jle
imul
enter
add
in
cs
imul
out
jle
pop
cs
inc
mov
in
xor
jecxz
mov
fisttpl
pop
icebp
test
lret
add
mov
lods
xor
shlb
pushf
mov
push
xchg
push
jo
iret
jle
push
push
add
dec
add
jge
cmp
lret
lahf
shlb
xchg
mov
xchg
pusha
das
add
or
shlb
gs
jbe
in
jno
sbbb
fildl
stos
pop
or
popa
inc
xor
inc
mov
lods
or
leave
dec
jns
pop
in
xor
jne
xchg
add
pop
inc
pop
cmpsl
adc
je
imul
mov
pushf
dec
adcb
or
sbb
xor
lret
repz
cmp
fwait
cmp
rorb
lds
mov
cmp
clc
sbb
pop
cwtl
scas
mov
adc
hlt
popf
xor
pop
repnz
or
push
loopne
lock
ds
andl
add
or
fs
shl
xorl
ljmp
daa
mov
pop
out
into
lds
inc
sub
add
test
popa
jle
test
xchg
xor
jecxz
scas
in
out
popf
push
pop
jne
push
into
loop
rcpps
stos
enter
or
inc
sub
push
in
xor
mov
ljmp
jnp
test
adc
inc
adc
adc
xchg
rcll
test
or
dec
lock
icebp
pop
cmp
test
cltd
push
push
jo
jo
popf
andl
sbb
cs
adc
xor
dec
pop
adc
mov
lcall
sahf
pushf
and
mov
pusha
add
inc
jge
movd
dec
add
xchg
shrl
push
sub
sub
add
jg
jl
xlat
cli
sbb
mov
fucomp
hlt
scas
fsubrs
cltd
fnsave
cmpsb
mov
std
dec
mov
movsl
sub
mov
enter
fildl
dec
rorl
dec
add
out
sbb
push
pop
and
pop
test
cmpsb
push
or
lds
imul
and
std
jnp
or
dec
lds
rol
mov
cwtl
pop
sahf
test
out
and
leave
pushf
test
pop
mov
nop
imul
add
inc
xchg
sub
and
jbe
dec
std
push
push
adcb
mov
dec
and
aas
sub
test
xor
shl
add
daa
fwait
dec
ja
cmpsl
shr
adc
pop
mov
mov
insb
pop
cmpsl
mull
enter
cmp
push
sbb
sbb
mov
mov
mov
cmp
jo
mull
pop
stc
dec
int3
pop
pop
stos
icebp
xchg
addr16
gs
in
aaa
movsl
loopne
das
push
dec
cmp
or
scas
inc
addr16
arpl
dec
ljmp
lea
aam
or
mov
jb
data16
arpl
jmp
int
sbb
popa
hlt
clc
std
ja
dec
ja
popf
clc
push
je
inc
pushf
cmc
lcall
xor
aas
pop
clc
cmp
int3
inc
or
cmpsb
pop
lods
adc
adc
bound
mov
jns
cmpb
lcall
mov
xchg
pusha
push
mov
enter
jp
test
negl
int3
outsl
jle
pop
adc
xor
lahf
ljmp
lods
mov
dec
or
jmp
dec
imul
cltd
stos
xchg
mov
push
add
sbb
add
and
cmp
ret
outsl
jno
and
dec
xor
or
xor
imulb
addl
sub
mov
shll
jne
lods
in
jl
rcll
outsw
xchg
cltd
rclb
lret
cmp
mov
hlt
rolb
pusha
jg
pop
mov
ret
hlt
push
ds
mov
imul
cmpb
pop
mov
pushf
test
push
pop
insl
aad
mov
js
notl
xchg
mov
iret
jno
mov
xchg
mov
and
or
ficomps
sahf
nop
cwtl
lea
out
mov
xor
sahf
adc
xor
dec
call
les
test
push
gs
jmp
xor
and
outsl
cmpsl
jo
jnp,pn
and
cli
fdivrs
lahf
fldt
popa
aaa
dec
sbb
cmpsb
lret
push
bound
sbb
in
fdivl
xchg
mov
sub
xor
in
mov
popa
cwtl
cmp
cmp
jb
imul
and
enter
sub
loop
popa
das
lds
leave
cmp
pop
aad
loope
sub
ficomps
add
stos
adc
sbb
mov
imul
adc
roll
fmull
fisubs
dec
out
sbb
xlat
lods
aaa
add
xor
jmp
cmp
pop
dec
shrl
nop
in
jmp
add
clc
jns
out
int3
stc
sub
mov
xchg
lcall
test
jo
test
mov
mov
lret
fs
mov
pushf
push
cmpb
and
sub
addb
loopne
or
dec
mov
mov
jae
test
xor
mov
addr16
adc
fiaddl
pushf
cmpsl
mov
lahf
out
insl
or
movsl
sahf
call
dec
jb
movsb
loope
add
and
push
andl
in
imul
fwait
cltd
mov
or
jnp
out
sub
mov
aad
rolb
cmpsb
loop
fwait
aas
pop
pusha
repz
adc
adcl
inc
mov
push
loop
mov
cltd
repnz
lret
lret
jle
mov
fcom
icebp
ret
pop
nop
xchg
loope
xchg
jb
ret
in
jno
or
mov
aad
ljmp
mov
fadds
jmp
mov
stc
mov
jge
out
faddp
mov
shlb
fs
mov
scas
dec
bound
adc
loope
data16
cmc
cmove
bound
cli
into
ss
xor
adc
push
mov
and
xorl
loope
aam
inc
ret
mov
pop
cmp
mov
adc
adc
inc
jo
push
jbe
push
sbb
cmp
out
in
push
movsb
jg
into
icebp
push
adc
mov
xlat
cmp
cmc
push
sub
and
jp
jb
in
outsl
pop
shr
into
lods
jnp
push
dec
or
push
add
stos
gs
inc
mov
mov
repnz
xchg
xor
std
enter
fildll
jbe
dec
jmp
enter
xchg
add
rcr
ffreep
adc
mov
aaa
ja
jne
fldcw
sbb
jns
in
cmp
adc
nop
pop
pop
add
mov
aas
pop
call
add
adc
lahf
jle
cmp
ljmp
lods
mov
gs
pushf
push
les
add
and
test
mov
data16
shll
test
adc
inc
or
dec
cli
ret
fisttps
dec
push
test
or
in
xchg
jne
fxch
lcall
adc
fwait
test
lahf
adc
ljmp
les
jns
xchg
jmp
cwtl
arpl
popa
sub
pop
sbb
xor
add
cmpsl
out
or
test
adc
daa
lds
mov
mov
jle
mov
sub
cmpsl
cmp
jbe
mov
nop
push
push
jecxz
or
les
inc
pop
sub
loope
add
adc
incb
jecxz
stos
sub
xor
lret
ja
inc
inc
pop
sub
popf
adc
out
xchg
vmwrite
sahf
sahf
pop
sub
pop
dec
push
mov
aam
jmp
xchg
jge
sbb
imul
ja
dec
or
pusha
test
mov
and
push
cmp
cmp
xor
rorl
mov
aad
lods
mov
adc
pop
sub
push
lahf
jmp
jno
cmp
sahf
mov
or
or
jp
inc
xor
call
shll
sbb
and
or
inc
pop
and
and
inc
inc
sub
push
adc
aad
loope
sbb
sbb
mov
and
pop
pop
jecxz
outsl
lret
mov
cld
daa
stos
or
push
dec
or
ja
les
xchg
shlb
cmp
dec
cld
int
lret
cmp
push
xchg
movsl
cs
frstor
icebp
jnp
mov
aam
iret
xchg
popa
adc
xchg
jnp
pushf
and
hlt
rcl
inc
mov
adc
repz
xor
sub
xor
rorl
xlat
push
xchg
pop
xchg
repnz
xor
and
cmpsb
mov
and
lret
sub
inc
and
les
imul
fcoml
and
mov
js
aaa
add
fwait
popa
xor
js
js
adc
pushf
fcomp
mov
mov
repz
dec
dec
mov
loop
push
sbb
or
mov
jno
push
inc
rclb
je
sbb
and
nop
xor
mov
ds
rorl
inc
pop
aas
lods
jno
sar
xor
mov
test
mov
hlt
int
xlat
adc
add
cmp
int
inc
in
push
add
pop
stos
inc
add
ret
jge
fists
dec
jb
mulb
jo
push
ret
xchg
adc
jmp
jns
hlt
cltd
mov
lcall
inc
push
jl,pt
inc
lcall
mov
sbb
popf
adc
jo
mov
mov
jns
pushf
out
pop
movsb
adc
cmp
mov
daa
adc
xchg
mov
mov
push
stc
out
push
in
popa
or
sbb
incl
mov
mov
jge
push
lock
rcrl
jmp
lret
fstps
xchg
push
fisubl
push
and
jle
pop
jno
jmp
push
lahf
fdivr
ret
in
mov
cmp
and
in
sub
sbb
sbb
test
dec
push
pop
push
popf
cmp
jle
cmpsb
in
pop
inc
add
add
out
xor
lods
fwait
xchg
ret
hlt
es
mov
adc
in
lcall
jae
dec
xchg
or
or
dec
fisttps
mov
bound
iret
addb
and
jmp
xchg
mov
mov
sbb
insb
aas
int3
cmp
jnp
inc
les
movsl
fidivrs
push
push
lcall
jmp
inc
insl
or
outsl
hlt
mov
mov
sbb
adc
cmp
test
aam
nop
and
push
jle
in
dec
cld
cmp
test
push
mov
mov
mov
mov
xlat
cltd
mov
out
cli
lods
stos
ror
stc
aas
ds
pop
ljmp
sbb
insb
xlat
adc
imulb
fisubs
outsl
loop
sbb
xchg
adc
or
nop
loope
or
adc
lret
pusha
ficompl
xchg
bound
sbb
lcall
jg
pop
ret
xor
adcl
xor
fnstenv
in
cmp
dec
push
cmp
retw
or
inc
pop
sub
or
and
mov
mov
pushl
adc
ror
mov
dec
nop
or
cli
clc
jp
and
sub
jo
out
stos
es
incl
push
loope
iret
jo
push
imull
dec
mov
pop
aam
jae
gs
aaa
jns
repz
xchg
movsl
loope
jp
cmp
and
push
outsb
xchg
dec
mov
mov
or
pushf
shlb
pop
pop
lret
mov
cwtl
out
popf
into
jle
ja
add
outsl
push
out
pop
outsb
leave
sbb
dec
pusha
and
inc
bound
xchg
test
fisubrs
rorb
popf
and
stos
sub
into
mov
mov
jge
push
cs
shrb
adc
stc
jno
fiadds
mov
mov
sub
mov
fildll
test
push
or
js
ret
pop
mov
hlt
mov
fwait
and
xor
sub
xchg
push
jle
pop
mov
and
daa
sub
add
mov
movsb
rorl
es
inc
sub
xorl
or
push
sub
lea
ja
addr16
dec
and
mov
cmpsb
jl
stos
movsl
cmp
repnz
pop
subb
cmpsl
mov
dec
jno
pop
or
mov
xorl
xor
or
mov
mov
outsb
push
xchg
sbb
sar
scas
jo
xlat
sbb
loopne
jbe
loopne
lds
mov
mov
mov
jnp
jecxz
or
repz
push
dec
stos
aam
cld
cmpsl
inc
mov
cmp
outsb
sub
mov
inc
mov
out
xor
push
stos
inc
lret
sub
faddl
jns
push
into
stc
mov
push
int
lret
scas
sbb
sbb
repnz
fsubrs
and
pop
sbb
popa
jb
mov
pop
mov
jmp
fnstenv
insb
scas
rolb
mov
sbb
fadd
and
cmp
in
or
inc
pop
out
xor
cli
mov
dec
and
dec
incl
mov
enter
push
pop
filds
jae
hlt
pop
movsl
stc
insl
cli
test
into
xchg
pushf
pop
in
or
ds
test
out
lcall
or
stos
xchg
mov
mov
lods
das
mov
popf
cmp
ljmp
jae
movsl
bnd
cmp
outsl
incb
mov
sbb
pop
lahf
sub
push
jno
pop
mov
xor
mov
pop
in
scas
insb
pop
loope
int
xchg
add
shrl
mov
lods
mov
mov
insb
call
repz
fistps
xor
xchg
mov
int3
cmp
adc
jae
lahf
pop
lcall
test
pop
mov
mov
sbb
pop
lret
xchg
fistps
mov
ror
rcrl
jg
loope
inc
mov
rol
imul
std
dec
sub
xor
mov
repz
add
xor
or
adc
cmpsb
dec
mov
and
fs
mov
fiadds
mov
test
pop
cmpps
mov
and
scas
sbb
cmpsb
cmp
xchg
cmpsl
jne
bound
insb
fwait
out
les
add
out
inc
aas
and
clc
fcmovne
inc
or
insl
scas
rsqrtps
addr16
mov
aad
sub
push
mov
add
sbb
xchg
dec
mov
dec
jnp
mov
adc
iret
xchg
add
push
push
xor
add
les
push
fwait
addr16
mov
or
pop
jns
add
fs
mov
push
pop
pop
mov
dec
sbb
in
in
aas
sbb
inc
sbb
mov
mov
jecxz
sarl
scas
sub
lea
cld
outsl
mov
scas
mov
mov
and
pop
call
fwait
lahf
movsl
mov
add
aaa
in
push
jb
ret
mov
jno
jecxz
stos
lret
rcrl
xlat
jno
mov
out
addr16
leave
inc
cli
std
je
and
push
dec
adc
ret
mov
xor
adc
adc
ds
enter
or
inc
loopne
std
mov
test
shr
xchg
sbb
repz
rcrb
mov
lods
jns
jne
lcall
aam
mov
dec
fwait
out
jge
xor
fs
adc
pop
sbb
push
in
pop
pop
iret
subl
aaa
dec
int3
sbb
rcrb
divl
shll
icebp
cmp
push
sbb
js
xchg
pop
pop
js
push
xchg
stos
lods
sub
jmp
xor
cld
fucom
lods
add
int
out
and
scas
xchg
je
push
popa
pop
sub
inc
lds
mov
ret
mulb
ret
cli
decb
lods
test
inc
jne
push
xchg
add
js
push
mov
arpl
sbb
aaa
inc
in
mov
cli
aam
in
push
adc
incl
mov
add
in
and
popf
in
mov
xchg
adc
lods
ss
notb
mov
pop
xchg
and
cmpsl
mov
ds
mov
sub
cs
adc
sti
loop
xchg
nop
or
in
insl
adc
testl
mov
dec
pop
push
push
sub
int3
clc
iret
and
sbb
outsl
dec
push
xchg
sub
pop
lcall
push
adc
jp
stc
cmp
xchg
dec
dec
aas
pop
jmp
dec
call
cmp
xor
fstl
sbb
into
dec
sub
test
testb
mov
add
fmull
adc
shufps
and
ss
int3
add
add
jo
leave
push
pop
or
xor
jb
loope
pop
xor
or
or
lea
push
and
ljmp
aaa
and
loope
jbe
js
pop
adc
cwtl
or
pop
and
xchg
je
scas
xor
add
je
fs
push
pop
jmp
xchg
xchg
inc
leave
clc
mov
mov
cs
add
ss
scas
roll
sub
and
loope
push
fadds
loop
cmpsb
cli
xor
push
mov
fisubrl
cmpsb
ret
cmp
cld
xchg
cmc
rorb
mov
jb
xor
xchg
mov
inc
and
sub
fstl
lea
mov
frstor
loop
filds
sahf
mov
push
add
add
add
inc
push
mov
in
es
mov
aaa
jecxz
rorb
or
pop
sbb
mov
mov
lock
dec
xor
das
cmpsl
lock
ret
cmp
adc
push
aam
fimuls
xor
mov
mov
dec
jecxz
bswap
movsl
cwtl
or
xor
cwtl
lret
movsl
cli
push
insb
data16
or
mov
cli
scas
adc
cmp
cs
frstor
cmpsb
insl
mov
xchg
cwtl
out
mov
jmp
out
fsubrl
das
enter
jae
cmpsl
arpl
imul
xchg
sbb
arpl
and
flds
xchg
je
enter
mov
mov
fdivl
stos
dec
daa
insl
jp
push
sub
cmp
movl
dec
gs
ficoml
jl
inc
ss
add
inc
call
mov
fcomip
fnstsw
add
shll
jbe
xor
cmp
and
arpl
dec
out
rcll
add
xor
pushf
ret
mov
push
loopne
rcrb
and
mov
outsl
int3
and
xchg
incb
bnd
dec
dec
lock
jmp
sub
xchg
ss
adc
fdivr
push
inc
pop
push
mov
mov
mulps
mov
sub
inc
ss
idivb
ljmp
imul
jmp
or
js
inc
shlb
fcmovu
push
jb,pn
sub
mov
sbb
in
mov
inc
add
pusha
lcall
shr
push
push
ljmp
push
xchg
divl
stc
loope
lods
lds
lock
mov
sbb
arpl
dec
lods
mov
cmp
or
rolb
xchg
xchg
xchg
add
addr16
push
push
inc
or
or
scas
inc
aas
data16
jmp
loop
movsl
movsl
cmp
sub
pop
jae
dec
jb
push
add
ljmp
jmp
dec
add
add
and
or
adc
stc
sbb
pop
inc
in
mov
mov
xchg
dec
hlt
ret
pop
iret
jg
decb
shll
or
mov
ja
and
jmp
cmp
xchg
mov
dec
pop
ret
imul
aas
inc
jmp
or
xor
sub
mov
sbb
in
cwtl
cld
mov
sbb
jns
mov
nop
sub
jle
xchg
xchg
jle
lock
cmp
add
fs
lret
mov
out
imul
and
push
xchg
pop
adc
mov
imul
push
clc
loop
jne
fsubrs
fwait
daa
pop
mov
out
gs
dec
jbe
or
sbb
in
in
pusha
mov
negl
test
pop
xchg
je
pop
gs
rorb
js
icebp
push
pop
mov
adc
movsb
jp
dec
cli
stc
je
sub
lcall
mov
psrlw
lods
jg
push
and
mov
sub
hlt
mov
jge
fisubrs
scas
sti
shrb
push
sbb
in
leave
adc
dec
loope
mov
jg
bound
lret
jno
into
dec
push
xor
and
out
jno
dec
mov
and
aad
inc
mov
mov
cmp
pushf
inc
roll
xchg
stos
ret
xchg
fsub
mov
push
in
push
jae
icebp
mov
out
int3
outsb
aad
pop
cwtl
in
mov
xor
loopne
lods
push
mov
jo
push
push
ret
cmpsb
mov
imul
pusha
mov
mov
das
rol
jecxz
inc
insl
push
mov
in
icebp
add
mov
inc
inc
jp
in
mov
or
sub
or
sahf
sbbb
cmp
mov
test
xchg
pushf
jmp
stos
xchg
jp
xchg
push
in
and
fiaddl
jne
lock
daa
ljmp
mov
lods
push
adc
shrb
lods
nop
imul
and
xchg
loopne
push
sub
mov
clc
mov
ror
pop
cmc
jecxz
lret
sbb
scas
or
jo
xchg
pop
pushl
push
cli
fdivrl
adc
sub
loop
fists
fstl
dec
and
lcall
jmp
push
mov
das
push
pusha
jno
or
inc
sub
mov
sahf
or
inc
scas
insl
addr16
push
scas
or
push
adc
mov
push
mov
int3
xrelease
imul
ja
adc
iret
dec
repnz
testb
jge
add
aam
and
inc
repz
jge
cmc
add
jae
adc
lcall
mov
mov
shll
xor
jbe
stos
js
jg
cwtl
mov
pop
loopne
mov
cmp
push
cmp
test
clc
xor
mov
pop
mov
insb
add
fdiv
bound
cmp
aam
sub
cmp
hlt
std
fsubrp
fistpl
mov
pop
bound
mov
and
nop
mov
jmp
mov
xor
lods
xchg
ficompl
mov
jne
lods
cwtl
aas
push
idivb
data16
leave
sahf
sbb
mov
lcall
scas
stos
aaa
mov
or
and
call
pop
jl
ret
or
cmp
iret
or
filds
dec
stc
movsb
xchg
loopne
dec
daa
insl
add
cwtl
jb
test
js
scas
push
jmp
mov
pop
pop
out
dec
mov
popf
adc
cmp
jecxz
xor
mov
ds
sbb
sbb
sbb
mov
ret
cld
and
hlt
test
mov
imul
xor
dec
jmp
stos
pop
and
cmpsl
adc
inc
rcrl
dec
push
and
add
mov
inc
push
pop
cmp
aaa
scas
stc
adc
stos
divb
aad
cmp
add
mov
fadds
jo
add
loope
imul
sar
inc
mov
outsb
mov
or
xlat
add
pushf
and
aam
dec
inc
out
sbbb
mov
and
inc
jb
aad
dec
cmc
fstpt
icebp
push
jge
sub
mov
bound
mov
data16
repz
insb
sbb
rcrb
lea
mov
adc
fnsave
popa
inc
or
push
loopne
lcall
iret
dec
xchg
mov
movsl
mov
cld
fwait
cltd
add
push
cmpl
xchg
jnp
cld
jno
call
les
aaa
movl
lods
inc
or
icebp
jne
mov
repnz
retw
add
fisubl
pop
jp
mov
inc
sti
test
jae
lods
mov
xchg
add
outsl
inc
gs
xor
lods
xor
shll
call
test
pmuludq
gs
ret
scas
dec
xorl
sub
popa
sbb
out
pop
stos
mov
mov
shr
and
xchg
dec
lea
cmp
out
mov
dec
mov
repz
sub
popf
aas
ljmp
sbb
xchg
sub
sbb
mov
inc
inc
rolb
fwait
jo
shrb
and
adc
mov
scas
lods
mov
xchg
push
pop
fwait
addr16
cmpsl
fildl
mov
loopne
nop
cli
ret
add
sbb
and
mov
add
jno
gs
neg
pusha
inc
and
jo
cltd
fldenv
push
mov
jno
addl
push
and
push
call
mov
icebp
jp
mov
fidivl
cwtl
jg
sub
call
cmc
jp
mov
lret
jl
sbb
xchg
jmp
mov
stc
xor
cmp
xchg
inc
scas
and
xchg
fs
mov
aaa
add
ficompl
xor
call
xchg
mov
mov
movsb
loop
xchg
fcomp
call
inc
pop
jmp
leave
imul
lret
and
imul
sub
lods
in
stos
sub
les
xor
jl
rolb
or
push
mov
fwait
pop
push
out
mov
out
mov
add
loopne
jle
or
add
jl
pop
imul
cmp
cwtl
stos
jp
jmp
jl
xchg
lds
mov
lcall
inc
cmp
ret
loope
call
sbb
xchg
ja
or
stos
mov
dec
imul
sub
mov
mov
lods
push
jae
ds
lret
fstps
mov
pop
movsl
aam
cmp
push
lods
pop
inc
mov
pop
inc
js
enter
pop
loop
xchg
jmp
push
pop
iret
dec
fisttpll
fldl
or
mov
add
pop
mov
jne
shrl
ret
sub
push
cmp
mov
xchg
add
and
movsl
clc
out
mov
lds
and
xchg
push
add
je
or
cmp
mov
enter
test
jp
xorl
jmp
rcll
xchg
and
dec
dec
subb
test
adc
sbb
xchg
adc
int3
cltd
les
stos
outsb
ja
jmp
outsb
nop
lds
pop
add
jb
mov
and
ror
out
xor
lret
jg
xor
pop
int
rolb
jnp
popf
scas
pop
and
push
sub
pushf
loop,pt
add
push
nop
insl
sarb
sub
push
in
les
or
mov
addl
mov
jno
jno
pushf
inc
aas
mov
mov
pop
sub
insl
push
dec
testl
inc
adc
mov
addb
mov
mov
mov
aaa
push
out
int3
lea
mov
scas
out
mov
ljmp
call
loope
pushf
clc
mov
or
cmp
cmpb
cmc
push
xor
push
lods
mov
push
add
out
add
cmp
and
xor
lock
lcall
clc
inc
xor
jnp
pop
and
xor
outsb
lahf
out
cmp
or
pushl
repnz
mov
sbb
mov
sub
mov
mov
call
cmp
outsw
lock
fcos
cwtl
lds
popa
mov
push
or
sbb
inc
sbb
sbb
jp
cmp
mov
mov
and
sahf
mov
fwait
fs
adcb
xor
mov
nop
cmpsb
sbb
imul
mov
adc
dec
push
adc
fs
or
gs
lods
sbb
xor
sbb
mov
pop
enter
jno
jp
xchg
cmp
and
je
xlat
js
fwait
sbb
je
jg
mov
sub
mov
cmp
lea
and
popa
icebp
icebp
pop
pop
sub
push
stos
nop
mov
and
testb
mov
xor
mov
clc
dec
push
scas
push
and
hlt
mov
add
mov
testb
cltd
test
es
mov
popa
sub
dec
repz
push
repnz
hlt
test
push
rcrb
or
xor
and
push
inc
mov
sti
xchg
mov
imul
movsb
aas
movsb
sbb
fistl
jle
movsb
push
and
push
sarb
sbb
enter
or
js
dec
cmp
cli
mov
jecxz
adc
fcmovu
jmp
xchg
daa
test
aas
jp
negb
mov
out
push
shll
lcall
repnz
clc
mov
add
dec
adc
mov
rol
notl
mov
xchg
insl
jb
add
dec
mov
jbe
insl
notb
fstpl
mov
adc
dec
xorl
rclb
jns
fcmovne
lcall
and
xor
mov
push
push
fistpll
push
push
xor
aas
and
xchg
lret
cmp
fwait
pusha
inc
repnz
lods
inc
xor
mov
sub
popa
ret
loope
cmpb
arpl
addr16
or
sub
or
and
mov
mov
sbb
daa
push
xchg
inc
sub
inc
dec
or
pop
cmp
xlat
ja
fcmove
cmp
out
lea
mov
stc
and
or
push
and
cmp
pop
xor
mov
imull
cli
les
pop
gs
stos
adc
int
pop
mov
fs
sbb
mov
stc
inc
imul
out
pop
rcrl
cmp
not
out
stos
cmpsb
adcl
loopne
sub
jnp
and
std
push
jmp
push
fwait
xchg
sub
xchg
rorl
adc
pop
xor
sbb
push
ds
mov
fidivrl
mov
repnz
dec
push
push
xlat
lock
stc
fst
xor
loope
mov
adc
sarl
add
sub
push
mov
cmpl
jmp
cld
out
mov
mov
inc
dec
mov
mov
push
fidivs
lock
mov
add
mov
inc
leave
sub
push
jp
mov
movsl
mov
aad
and
stc
push
jbe
or
xchg
jle
push
std
andl
stos
jl
inc
add
fwait
cwtl
mov
mov
mov
inc
out
mov
pop
jae
shld
jecxz
mov
push
rcr
je
loop
sahf
ljmp
lods
sub
pop
arpl
xchg
jb
movsb
cltd
and
in
dec
cmp
xor
push
xor
jbe
fimuls
outsb
data16
and
int
sub
stos
add
dec
cli
scas
mov
mov
add
or
leave
push
xor
mov
jmp
clc
mov
imull
test
mov
mov
adc
into
dec
pop
out
push
jmp
shrb
mov
jne
ds
xchg
inc
cmc
cmp
add
pop
scas
bound
jnp
jl
in
outsl
jge
and
das
sub
jp
not
cwtl
mov
xchg
push
push
mov
jl
pop
pop
bndldx
adc
addr16
pop
ror
lods
dec
scas
mov
loopne
xor
sub
stc
xor
subb
scas
dec
and
hlt
jp
adc
add
jp
cwtl
xchg
mov
adc
add
pop
adc
repz
and
int
stc
out
sub
dec
mov
outsb
les
pop
mov
lds
or
mov
and
xor
in
sub
lds
test
dec
fcomps
mov
clc
jl
in
xchg
inc
pop
mov
or
daa
cmp
fistpl
cmp
xor
inc
and
dec
mov
sub
fucomp
add
stos
jo
bound
push
push
add
push
jp
bound
ficompl
xchg
iret
mov
xor
cmp
mov
or
or
pop
dec
lods
ret
rcrb
sub
stc
outsl
in
sti
repz
stos
mov
les
stos
pop
sub
xor
push
or
jmp
ja
mov
mov
adc
mov
xor
shll
dec
mov
leave
adc
cmp
outsb
mov
lcall
dec
cmc
ret
into
push
pop
imull
pop
add
ja
inc
fidivl
mov
out
fistpll
lea
in
mov
push
les
mov
add
adc
in
std
popf
xchg
cmp
mov
pop
aas
es
out
push
sub
cli
push
sub
out
pop
mov
imul
mov
ja
cmp
fbstp
mov
lcall
je
addr16
stos
fbld
and
loope
lods
xor
sbb
sub
mov
cs
popf
stos
imul
and
pop
inc
adc
jle
add
xlat
insb
bnd
add
test
mov
mov
or
lret
in
ss
icebp
jae
ljmp
mov
mov
mov
pop
jnp
mov
jo
push
loopne
push
add
aad
sub
or
inc
add
mov
cmp
sub
and
stos
in
repnz
in
push
testb
pushl
pop
pop
pop
inc
xchg
repnz
ss
mov
movsl
adc
mov
scas
loop
sub
sub
add
das
sub
inc
dec
arpl
cld
mov
test
nop
add
push
outsb
inc
cli
pop
inc
add
and
and
adc
mov
xchg
push
dec
test
dec
dec
fcompl
int
lahf
mov
in
test
cmp
int
jbe
lods
adc
ret
aas
mov
dec
sub
pusha
adc
scas
xchg
addr16
adc
pop
shl
cmp
and
pop
ja
outsb
filds
loopne
ljmp
ss
push
sub
sub
adc
mov
js
es
push
sbb
leave
inc
dec
fadd
sti
scas
cld
std
cmpsl
xor
mov
cmp
stc
mov
or
cld
rolb
xlat
test
das
xchg
mov
cltd
scas
and
and
sbb
inc
push
jb
mull
test
fmulp
flds
loop
pushf
ja
cmpsl
fiadds
fistps
jg
addr16
cs
sbb
test
pop
movsb
push
fprem1
mov
add
or
int3
int3
mov
inc
into
cwtl
pop
inc
xor
add
mov
jno
out
sub
or
icebp
cmp
sbb
mov
into
cmp
xor
lds
or
verw
add
adc
sti
cmp
adc
sti
xchg
neg
mov
inc
mov
sub
and
inc
popf
cli
jb
fdivp
nop
mov
or
pop
lods
fsubrl
push
out
xor
in
sub
mov
pop
add
xchg
mov
cwtl
movsl
and
movsb
pop
xchg
cli
clc
mov
push
mov
add
call
shll
sub
insl
cmc
inc
adc
inc
push
inc
fdivr
lock
cwtl
xor
test
mov
push
mov
xchg
fs
shlb
mov
and
popa
loope
imul
notl
fcoml
sbb
xchg
sti
aad
or
xchg
mov
pop
pop
clc
aam
in
jmp
lret
add
xor
enter
ljmp
test
stc
push
cmp
nop
xchg
cld
push
and
mov
lret
xor
mov
loop
or
add
and
ret
das
jns
push
popa
or
pop
cmp
mov
es
in
cmp
cli
mov
ja
jne
push
pusha
mov
add
push
xchg
jne
push
icebp
popa
inc
and
movsl
or
outsl
ds
mov
inc
mov
jmp
stos
xchg
jmp
rorl
fildl
and
xor
sub
cld
out
sahf
ja
int
aam
mov
inc
or
imul
pop
dec
mov
mov
cmp
pop
inc
sarl
mov
sbb
in
or
mov
push
in
pop
ljmp
stc
or
out
aam
sbb
mov
movd
fsubrl
jmp
pop
mov
out
jl
mov
in
pop
sbbl
adc
mov
test
push
or
xchg
or
jmp
mov
ss
test
lcall
dec
dec
add
pusha
pop
push
popf
or
and
xchg
inc
mov
xchg
push
push
push
mov
mov
dec
mov
jg
stos
gs
sahf
sahf
and
into
mov
inc
push
je
inc
xlat
jnp
arpl
push
pop
addb
sbb
add
push
xchg
cltd
pop
test
mov
cmp
inc
jmp
mov
sbb
test
aad
push
dec
loopne
pusha
loopne
decb
mov
scas
xor
in
mov
inc
rclb
stos
cmp
je
xchg
or
nop
popf
or
fsubs
mov
dec
popa
ret
push
inc
jmp
pusha
sub
dec
dec
and
xor
repnz
jae
jbe
sub
pop
push
mov
mov
mov
lock
gs
mov
cmp
pop
push
adc
adc
mov
in
mov
in
pop
shrl
or
cs
cmp
mov
clc
jl
mov
addr16
adc
rcrb
mov
xchg
adc
pop
lods
aaa
movsl
add
dec
hlt
push
sahf
loopne
sbb
shlb
es
xor
sahf
int3
hlt
out
loope
or
insb
into
or
cltd
cmpb
out
nop
or
aas
fcoml
arpl
jo
cmp
dec
and
arpl
jno
cld
scas
rcrl
mov
out
sub
adc
cs
cmp
clc
push
jbe
inc
aad
jno
push
inc
sahf
in
icebp
add
lea
fwait
adcl
sarl
sub
xor
les
xchg
dec
insl
fwait
gs
stos
sub
dec
scas
cmc
cwtl
shr
or
lcall
out
repnz
rep
aaa
movsb
in
gs
ljmp
repnz
test
popa
xor
add
push
xchg
push
lret
mov
pop
cmp
ss
fidivrs
add
popf
push
shl
or
xor
icebp
insb
sub
les
insb
push
mov
in
ss
sub
pop
repnz
aas
lret
lods
clc
movl
dec
clc
mov
icebp
xchg
subb
int3
push
sub
xchg
lgs
pop
jecxz
outsb
mov
mov
imul
ret
sahf
or
mov
dec
aaa
shll
popa
push
jo
xchg
xor
push
icebp
das
insl
jno
adc
leave
lds
xor
jno
and
int
or
lcall
adc
sub
sub
cmpsl
jo
cmovo
aam
faddl
cmp
xchg
pop
icebp
fistl
in
ss
rorb
or
jb
mov
mov
pop
test
dec
outsb
nop
mov
int3
bound
mov
fsubrs
in
sbb
adc
push
outsb
das
jns
jb
lock
arpl
and
sub
jne
inc
mov
jge
cld
in
jne
mov
pop
cmpsl
iret
lea
or
xor
imul
shlb
adc
scas
fmulp
gs
push
jnp
fldenv
icebp
jo
sub
in
scas
jmp
mov
lock
mov
mov
dec
fld
pop
inc
mov
mov
add
and
xor
bound
and
cld
dec
nop
int3
mov
sub
mov
movsl
rolb
loop
getsec
pop
push
test
scas
lods
pop
dec
lcall
pop
xor
fisubrs
and
push
lahf
jo
popa
pop
mov
jl
sbb
addr16
sbb
inc
into
mov
nop
xchg
cmp
sarl
xor
test
xchg
mov
add
clc
les
in
and
pop
cmp
lock
filds
popa
hlt
adc
xor
stc
jnp
pop
and
sahf
dec
in
and
mov
cwtl
sarb
adc
stos
ds
jmp
mov
xchg
out
cs
sbb
enter
xor
jmp
jns
jns
mov
ret
xchg
fwait
insl
sbb
dec
xchg
popa
orb
imul
sbb
insl
jno
lret
es
dec
sahf
in
clc
push
addr16
in
and
xchg
stos
ja
pop
push
adc
mov
pushf
dec
jle
js
mov
dec
fwait
testl
sbb
aam
xor
mov
xchg
sbb
xchg
rcrl
or
nop
xchg
push
psubsb
jmp
movsl
lods
or
mov
xor
adc
ret
iretw
lds
int3
xchg
push
push
cld
inc
sar
add
mov
pop
cmp
and
xchg
je
loope
bound
pushf
ficoml
popf
inc
sub
js
out
jp
cmc
adc
aas
mov
aad
pushf
fnstsw
jno
and
xor
loopne
xchg
movsl
cld
mov
pushf
jle,pn
loopne
leave
mov
push
sahf
add
add
push
in
mov
enter
out
pusha
or
les
sbb
dec
sbb
ret
push
pop
xchg
nop
mov
mov
mov
leave
fisttps
pop
and
call
frstor
imul
adc
push
repz
and
lock
jns
mov
into
lret
sub
jnp
jbe
mov
mov
mov
fwait
mov
sub
cs
aam
mov
scas
cmp
outsb
adc
sahf
mov
inc
popf
fstpt
lds
rol
icebp
test
dec
dec
push
sub
aam
push
pushf
inc
xor
xor
xchg
jmp
push
in
mov
cwtl
fdiv
test
daa
xchg
jl
sub
dec
dec
jecxz
jne
sub
jecxz
lods
mov
subl
xchg
in
movsl
insl
sbb
jns
lret
rorb
outsl
ret
mov
inc
outsl
add
sti
sub
xchg
and
add
aaa
aas
cwtl
mov
subl
cmp
mov
inc
aam
fwait
pop
or
mov
xor
xchg
push
aam
test
repz
jl
xchg
xor
out
and
xchg
cli
in
pop
dec
lock
imul
pusha
mov
ficomps
into
cmp
xchg
mov
gs
pushf
in
inc
jo
add
aaa
push
call
bound
scas
jne
inc
mov
add
iret
lret
mov
pop
lret
cmp
inc
sbbl
sbb
mov
pop
and
sbb
jns
lods
aas
push
out
jb
jg
cmc
shrb
jnp
shr
push
xchg
shlb
cs
aaa
add
ret
shr
pop
jle
cmc
je
shlb
test
sbb
jecxz
icebp
pop
xor
jo
and
nop
lahf
adc
sub
adc
add
inc
push
mov
or
and
xor
jo
cmpsb
dec
jmp
loop
popl
dec
sbb
mov
sub
lcall
divl
pop
in
fcompl
fs
cmc
in
pop
ja
scas
mov
pop
shl
ficompl
push
pushf
add
xlat
push
pop
dec
mov
lahf
mov
xor
pop
cmpsl
xchg
sbb
pop
or
lds
repz
sub
sbb
mov
orb
mov
dec
call
test
mov
add
mov
sbb
imul
scas
adc
aad
ja
add
arpl
rorl
push
fs
mov
movsl
jae
test
or
cmp
xor
mov
cmpsb
cmp
stos
ret
dec
mov
out
dec
push
mov
mov
je
fs
out
js
iret
push
sbb
pop
or
sub
aaa
mov
sbbl
out
leave
add
cmp
cmp
outsl
div
ds
out
in
insb
xchg
enter
stos
cmpsl
mov
jl
notb
sbb
sahf
pop
push
xor
xor
sarb
imulb
xor
pop
xchg
sub
jo
arpl
cmpsl
dec
sbb
mov
adcl
arpl
lcall
pop
jnp
outsl
sarl
dec
sbb
sbb
push
push
push
ss
inc
jno
inc
mov
dec
inc
adc
mov
fwait
loop
rorb
xchg
cmpsb
clc
cmc
mov
pusha
jns
or
lret
subl
cmpsl
mov
push
jns
into
sub
lods
dec
adc
addr16
cs
clc
sub
nop
jg
in
xchg
inc
mov
mov
inc
jmp
je
popa
jns
xor
rolb
cmp
push
jae
std
push
std
mov
dec
sbb
dec
pop
inc
mov
push
add
mov
mov
out
inc
mov
sbb
dec
sub
inc
ret
out
sbb
out
cmc
daa
mov
fistl
daa
dec
mov
dec
rcrb
sbbl
lds
aad
push
mov
ret
adc
sub
cmp
mov
shl
push
ror
and
push
out
rol
rclb
xchg
cmc
pop
dec
sbb
adc
cmpsl
add
and
pop
push
les
adc
or
push
sub
ja
push
mov
loope
imull
sub
rcr
mov
add
push
jp
ja
mov
sbb
sbb
cmp
rcrb
les
adc
lret
jb
xor
nop
sub
inc
shl
push
dec
add
in
xchg
pop
pop
or
mov
push
or
sub
pop
jne
sub
add
add
mov
loopne
popa
inc
pop
fdivrp
mov
push
sbb
sbb
inc
int3
je
dec
push
std
hlt
ja
jge
out
cmp
arpl
mov
movb
sbb
mov
repz
roll
ficompl
xchg
push
adc
lock
sub
xor
clc
push
dec
arpl
push
add
push
sub
ja
mov
xchg
and
sbb
dec
rorl
jo
es
mov
dec
fsubr
dec
ja
daa
push
mov
xlat
mov
mov
mov
mov
movsl
inc
pop
inc
mov
pusha
dec
pop
ss
inc
fidivl
outsb
inc
out
dec
idivl
int3
call
dec
xor
or
sbb
or
mov
out
bound
push
mov
gs
jns
push
mov
cmc
les
xor
jno
test
mov
mov
stos
in
jb
divb
dec
cmpsl
inc
cmpsl
aas
mov
jno
jb
jp
imul
daa
std
fnsave
aas
lods
xor
adc
nop
arpl
data16
mov
cmp
in
test
and
mov
fisubrs
adc
pop
mov
les
xlat
xchg
pop
or
fwait
aaa
icebp
rclb
mov
adc
mov
adc
jno
bound
mov
jne
bnd
inc
inc
mov
inc
imul
mov
ss
cmpsl
and
sbb
mov
adc
cmp
push
ds
or
ss
pop
lds
sbb
aaa
nop
test
popa
out
lahf
mov
and
fnstcw
dec
imul
hlt
clc
dec
shrl
leave
xchg
jge
subl
movsb
jo
repnz
faddl
mov
movl
push
or
mov
jo
into
or
out
outsl
arpl
cmp
in
pop
mov
cmp
shlb
pop
callw
es
cli
jno
mov
pop
jmp
mov
mov
mov
inc
pushf
inc
push
jnp
pop
lret
insl
pop
call
daa
mov
mov
xor
in
shrb
pop
mov
mov
dec
jo
mov
shl
pop
pop
mov
repnz
fs
fsubrl
das
ss
xchg
stc
sbb
and
fs
mov
in
mov
data16
popf
inc
or
jmp
pop
mov
dec
fstl
add
bound
jle
pop
cli
loop
into
jne
sub
lds
ret
cmp
mov
push
nop
dec
ljmp
icebp
and
push
cs
add
dec
pop
outsl
fisubl
subb
and
mov
mov
subl
decb
sub
sub
jp
mov
ret
push
xor
data16
aaa
sub
test
mov
arpl
out
andb
scas
mov
cmp
mov
jns
ja
or
adc
out
inc
gs
lcall
lahf
test
sarb
cmpsb
scas
filds
jno
or
push
lahf
inc
or
mov
xchg
imul
hlt
or
and
data16
daa
mov
push
sub
cmp
xchg
mov
mov
scas
in
add
add
test
or
testl
xlat
rorl
xlat
lock
and
imul
push
or
push
sub
negb
inc
fmull
pop
movsl
push
and
xchg
dec
cmp
cmpb
dec
insb
ja
inc
and
inc
push
nop
stos
js
in
jecxz
mov
mov
pop
aaa
xchg
push
cmp
add
mov
ss
or
pop
pop
out
and
push
mov
divb
je
test
aad
ljmp
xchg
lock
scas
in
scas
cmp
andl
jp
cld
stos
push
insb
mov
rcr
fnstcw
movsb
mov
and
mov
repz
mov
jge
nop
mov
fiadds
and
cs
xchg
push
sub
clc
mov
push
xchg
xchg
xor
xlat
daa
movsl
data16
lret
out
jb
mov
enter
xlat
rcrb
mov
sub
popa
push
xchg
cmpsl
lret
jg
nop
fldl
adc
je
loop
cltd
ja
xchg
pop
loope
clc
xor
mov
paddsw
xchg
sbb
add
sarl
add
outsb
xor
lods
mov
pop
mov
mov
leave
jns
mov
push
rcrb
inc
and
and
mov
sbb
pop
lds
and
popf
mov
dec
dec
test
push
mov
lock
cmp
xchg
cld
pop
adc
fistl
shlb
adc
mov
pop
ficompl
lea
mov
sti
and
pop
mov
jge
sub
bound
mov
int3
mov
push
ljmp
or
clc
imul
cmp
loope
fisubrl
popa
mov
sbb
scas
sbb
dec
std
lods
sbb
cmp
push
mov
xchg
cmp
mov
pop
xor
scas
lahf
arpl
std
mov
push
dec
pop
roll
xchg
and
testb
cmp
push
std
adc
add
jp
and
cld
cmpsl
daa
dec
fistpll
sub
mov
enter
push
mov
xchg
movsb
mov
push
jo
aaa
hlt
les
outsl
jmp
into
pusha
push
pop
push
fistpl
and
sar
outsl
push
ljmp
sbb
cwtl
mov
push
xchg
sub
adc
loope
jmp
into
subl
pop
lcall
inc
mov
les
push
and
jo
dec
or
or
xor
mov
dec
fwait
adcl
icebp
sub
outsl
clc
cmp
lds
je
test
cmpsl
or
cmp
mov
int3
xor
push
aam
aaa
mov
call
enter
bound
push
pop
push
cmpsb
shl
cmp
cwtl
leave
test
xchg
mov
aad
sub
lret
rorl
add
sub
xor
daa
fildll
idivl
ret
ljmp
and
jp
inc
fxch
xor
std
xchg
jns
testl
and
dec
sub
cmp
xadd
sub
scas
sarl
add
insb
rclb
mov
imul
fwait
icebp
pop
sbb
jg
cltd
jno
inc
aam
out
jmp
mov
jbe
pop
sub
sbb
dec
mov
ljmp
pop
fldcw
mov
mov
jl
jmp
pop
pop
and
rcr
neg
fwait
bound
mov
add
jecxz
cld
pusha
pop
ljmp
jb
push
incb
js,pn
fistps
or
add
pushf
mov
pop
stc
push
outsb
mov
cmp
loope
xchg
sahf
cmp
popf
inc
mov
scas
mov
in
imul
inc
test
inc
inc
out
test
xor
shlb
adc
pop
mov
push
out
fisttpl
cwtl
pusha
lods
push
callw
cmp
push
loope
cli
cmp
icebp
adc
or
pushw
push
movsl
ja
pop
scas
shr
sub
fisubl
mov
repnz
adc
mov
cmp
jbe
xor
mov
std
scas
and
xor
subb
shlb
and
nop
xor
mov
popf
insl
rcrl
fimull
and
push
out
arpl
loopne
out
mov
lods
inc
int3
popa
cld
sbb
mov
push
dec
sbb
dec
mov
imulb
inc
jbe
fcmovb
aaa
das
sub
xchg
pop
mov
jns
and
dec
imul
and
adc
popf
push
aas
ljmp
sarl
ss
cmp
lods
sbb
push
scas
or
mov
pop
in
mov
and
ret
dec
cmp
mov
cmc
push
leave
mov
xchg
popa
out
ljmp
push
pop
ja
inc
jmp
pop
jns
inc
ret
outsb
insb
add
mov
push
dec
push
insb
mov
ljmp
cltd
pop
xchg
dec
nop
jae
into
hlt
sbb
lret
jbe
and
mov
push
lea
or
movsl
pop
jl
cmp
dec
mov
jae
jg
inc
add
adc
ret
mov
call
es
jl
mov
or
or
loopne
rolb
in
gs
fisubrl
and
dec
pop
inc
inc
jae
cs
sub
and
repz
ret
xchg
jo
aad
add
or
xchg
ds
sub
jmp
in
stos
sub
iret
popf
insb
rorl
dec
sub
or
out
imul
mov
adc
add
dec
pop
dec
sub
mov
pushf
cltd
sub
mov
jmp
shrb
lea
add
xchg
dec
pusha
les
sbb
fnstsw
xchg
mov
xorl
xchg
xor
jns
xchg
pop
mov
mov
xchg
jne
mov
xor
lret
fisubs
push
pop
aad
mov
das
dec
cs
shlb
daa
mov
pop
in
loop
jnp
sub
call
cmp
leave
mov
shlb
test
and
cmpsl
insb
push
jno
aam
aam
in
das
scas
sarb
mov
repz
fucomp
push
xorb
xchg
std
insl
jmp
xchg
out
cmc
bound
in
pushf
push
cs
test
adcb
es
mov
xor
or
clc
cmp
xor
cli
addr16
pop
and
jle
add
insl
sar
xchg
mov
xor
fwait
xchg
pop
add
mov
pop
jne
out
jp
xchg
sti
mov
push
and
out
mov
loopne
ja
inc
jle
mov
dec
lea
xchg
mov
pop
jnp
int3
ret
enter
cmp
cwtl
popf
lahf
dec
jmp
or
test
push
jns
xor
pop
push
loop
cs
dec
mov
sub
add
imul
pop
aad
addr16
jno
pop
adc
test
cmp
sub
or
out
ja
xor
flds
jne
mov
popa
sarl
xor
cmp
jne
arpl
inc
jns
clc
add
ret
stos
lcall
imul
push
js
jmp
js
sbb
fsubs
daa
in
movsl
int3
in
scas
sbb
test
movsl
fdivs
int3
fadds
xchg
cmp
js
aad
sbb
int
pop
ja
xchg
cs
icebp
sbb
sub
push
rcrb
jae,pn
sarb
jecxz
push
icebp
mov
mov
cli
cmc
mov
push
rclb
sub
outsl
mov
fldl
je
push
pop
inc
jecxz
sbb
hlt
out
sub
mov
inc
jp
or
jae
lods
push
or
ret
sbb
jmp
and
push
clc
sbb
xchg
int3
cmp
rcr
adc
test
shll
xor
out
jne
and
dec
loopne
inc
xor
mov
adc
xchg
lea
scas
cltd
push
sbb
popl
stc
mov
sub
inc
in
push
jb
in
inc
add
ja
imul
loope
aam
add
adc
fs
jle
test
sbb
add
pop
out
jge
xchg
xchg
jbe
loop
mov
pop
push
xchg
out
js
fsubp
sbb
add
cmp
fisubs
stos
xor
cmp
xchg
lock
rcr
xor
adc
es
sbb
pop
cmp
fs
outsl
popf
jae
dec
roll
fistpl
cmp
fdivl
pusha
push
enter
scas
insb
in
push
pop
mov
subl
mov
mov
pushf
sti
dec
jb,pn
cld
jo
adc
loope
xchg
rcll
add
push
mov
push
lods
dec
fildl
jbe
imul
add
cmp
mov
idivb
loope
or
inc
push
pop
push
imul
dec
mov
insl
xor
sub
sbb
mov
adc
rcr
sbb
cmp
and
lcall
pop
jge
sub
test
cmp
pop
cmp
jno
mov
test
clc
cs
mov
jcxz
xor
inc
ds
aam
dec
lock
filds
sahf
into
pop
leave
xchg
lock
push
or
dec
pop
sbb
xor
and
xor
popf
push
loopne
repz
outsb
cmpsl
sub
in
jp
push
mov
jbe
add
and
mov
cmpsb
lock
sbb
xchg
ljmp
pop
pop
pop
aas
in
or
fwait
subb
stos
out
xor
mov
xchg
jl
es
shrl
lods
movsl
add
sub
minps
jne
mov
dec
ret
in
push
pop
push
aam
xorb
sbb
fdivrp
add
cmp
inc
fcomps
xchg
sbb
jb
mov
hlt
jp
xchg
cmp
lea
ljmp
imul
cld
push
mov
cmp
lods
adcl
cmp
inc
js
mov
and
pop
mov
jle
out
call
test
jno
loope
mov
test
test
rcrl
fdivrs
jnp
adc
jg
xchg
cs
loop
mov
or
fimull
fwait
mov
pop
test
or
in
mov
inc
pop
push
xor
jg
cmpsb
push
test
pop
addr16
incb
and
int3
iret
jb
mov
ds
push
aad
call
lcall
leave
cwtl
and
cli
mov
pop
sbb
jb
insl
negb
push
leave
cli
sbb
cmp
dec
lea
push
adc
sahf
jmp
mov
std
jae
adc
push
xor
aam
les
ret
fdivs
mov
ds
mov
and
stos
adc
jno
lods
movsb
rcrb
testb
pop
xchg
jne
imul
nop
and
mov
xchg
shrl
lcall
out
adc
rolb
cld
fldenv
mov
adc
insb
outsb
inc
push
jmp
mov
data16
xchg
ljmp
and
xchg
jl
in
and
ret
jecxz
in
push
fisttpll
mov
dec
dec
shll
or
dec
xchg
sub
fisubl
fldln2
xor
test
rclb
fbstp
adc
sub
mov
lret
test
sub
push
inc
pop
rol
mov
arpl
cmpsl
enter
add
sti
repnz
insl
push
std
and
stos
outsb
or
jecxz
dec
cmp
mov
hlt
das
in
cmp
ret
movsb
sbb
mov
js
sbb
push
out
std
pop
sbb
sub
xor
mov
inc
cmpsb
jns
pop
into
cmp
cmpb
dec
xchg
repnz
sbb
rorb
aas
dec
jl
cltd
sbb
test
addr16
lret
adcb
fwait
outsl
xor
xor
leave
cmp
ficoml
mov
pop
or
dec
jmp
mov
pop
outsl
das
loope
mov
jmp
ss
lods
sarb
out
pop
insl
or
cmp
cli
and
sbb
xlat
loope
subb
aas
out
lea
push
mov
iret
sti
ja
jno
inc
bound
xchg
jns
lcall
push
add
sbb
shr
xchg
sahf
adc
scas
push
das
cld
or
inc
stos
lahf
jnp
fwait
dec
and
lock
mov
or
int
pandn
inc
push
xlat
addr16
aam
xor
mov
mov
pop
mov
mov
out
xor
mov
mov
jmp
mov
cli
dec
gs
nop
call
fidivrs
in
movsl
and
outsl
aas
inc
enter
imul
ja
div
adc
out
aad
xor
dec
dec
pushf
sbb
hlt
xchg
mov
enter
ljmp
adc
cmp
mov
leave
data16
imul
mov
adc
outsl
loop
xchg
cmp
fnsave
or
nop
dec
mov
pusha
and
ficompl
aas
movsl
shlb
mov
jp
rcl
test
mov
mov
mov
clc
fcompl
out
mov
cmpsl
add
jno
rcrb
mov
cmp
jp
add
jg
and
pop
out
in
fwait
lea
xorb
in
add
lods
and
pop
xor
out
pop
push
inc
adc
lock
out
repz
mov
xor
mov
inc
adc
mov
push
jo
sub
sbb
stc
test
sub
inc
pusha
jnp
mov
push
pop
ret
jge
jge
mov
jb
cmp
bswap
mov
dec
fsubrs
pusha
cmpl
push
sbb
inc
frstor
xchg
xchg
int
sub
add
in
adc
sbb
xchg
mov
pop
or
clc
mov
in
mov
sub
aas
mov
pop
push
push
test
test
loope
or
cmp
fisubrl
std
es
das
outsb
in
das
bound
adc
dec
mov
cmc
jle
xor
pop
adc
sub
mov
in
jmp
mov
call
push
stc
jns
test
test
adcl
push
or
cld
or
dec
adc
clc
mov
add
pop
data16
xchg
push
sbb
sahf
cld
leave
xor
mov
sahf
xchg
pop
fsubrs
push
adc
xor
pushf
cmp
or
sarb
jo
int3
xchg
and
imul
bound
or
clc
xlat
adc
sahf
lcall
pop
fbld
jp
pusha
test
cmp
xor
dec
stos
int
clc
nop
or
mov
push
into
mov
in
push
fwait
sub
jmp
fwait
sti
push
mov
adc
pop
adc
mov
dec
sbb
pop
jl
mov
xor
xchg
mov
mov
mov
test
mov
cmp
jge
stc
cmpsb
pop
js
icebp
jge
or
dec
mov
and
pop
or
retw
adc
stos
and
xor
sbb
xor
jp
inc
add
lods
mov
aam
es
lods
sbb
out
test
mov
sbb
adc
push
mov
mov
mov
xchg
lret
sahf
cmp
push
pop
fmuls
loopne
ja
mov
test
and
cmp
cli
inc
das
pop
lods
or
fsubrs
call
xor
adc
jl
jne
sub
jp
pop
cmpsl
xchg
sbb
scas
jo
loope
insb
ficomps
push
or
stc
push
nop
test
jl
les
lahf
pop
in
push
mov
mov
loopne
push
in
jnp
sti
sub
clc
inc
xchg
push
mov
xchg
pushf
adc
add
pop
pop
pop
sub
inc
lods
adc
cltd
sbb
mov
dec
in
pop
es
gs
mov
mov
jmp
mov
ficomps
cmc
pop
jecxz
bnd
sub
sub
jg
stos
test
jno
push
dec
shrl
push
jle
testb
mov
sarb
sti
push
ja
and
sub
mov
cmp
subl
shlb
mov
movsb
or
push
push
xor
testl
xchg
mov
push
xchg
mov
sub
jo
in
cld
sub
cmpsl
add
pop
mov
test
push
loope
aam
pop
and
sbb
or
mov
add
ret
jns
inc
pop
call
es
inc
mov
mov
int3
ret
pop
mov
cmp
adc
add
test
repnz
mov
mov
sub
fsubrs
mov
or
sub
xor
pop
dec
push
icebp
jnp
inc
out
lods
add
and
jg
int
lret
rorl
xchg
push
pop
mov
nop
mov
test
out
mov
outsl
dec
dec
or
arpl
and
mov
pusha
mov
jg
mov
movsl
pop
rclb
pushl
std
lea
popa
jb
mov
add
pop
lods
lods
in
jmp
js
clc
aaa
shrl
aaa
adc
lock
out
outsb
and
aad
inc
ljmp
or
cmpsb
gs
mov
ja
rorl
cmp
ret
and
xor
jbe
fnstcw
out
jp
aas
adc
mov
lea
mov
pusha
hlt
vxorps
cs
or
pop
inc
test
jmp
insb
pop
lcall
filds
rclb
jge
aad
or
pop
dec
dec
xor
pop
lret
mov
mov
sbb
mov
xchg
int3
jmp
nop
jle
popa
pop
xor
pop
cmp
push
leave
in
dec
push
scas
dec
fisubl
jns
es
and
jae
sub
outsl
in
mov
jg
leave
pop
je
sub
fnstcw
jl
mov
xchg
scas
push
and
lcall
jge
mov
bnd
sub
jne
push
rcr
out
mov
mov
push
mov
push
sub
cs
enter
fidivs
mov
rorb
xchg
notl
lods
pop
or
inc
sbb
inc
mov
or
adc
mov
xlat
push
inc
fisubl
xchg
jle
cmp
jge
pop
jecxz
mov
lds
popf
aam
das
shlb
lods
jbe
or
xor
shrl
daa
out
lret
dec
fwait
out
int3
push
add
out
mov
push
xor
cmp
and
jne
lods
adc
dec
dec
lret
push
cmp
arpl
pop
push
pop
jg
mov
sub
mov
out
cmp
shlb
push
scas
std
cmpsl
or
and
mov
rorb
out
popa
in
cltd
rorb
mov
mov
insb
lds
loope
push
dec
shrl
imul
pop
fidivrl
mov
add
and
popa
pop
into
mov
popf
ljmp
lods
inc
inc
rclb
out
movsl
cmp
clc
xor
outsb
inc
enter
aam
jg
inc
aaa
cli
xchg
cmpsb
sbb
dec
popa
scas
sti
stos
jne
sub
movl
out
cmp
iret
imul
popa
subl
sahf
das
jns
ds
pop
cs
xor
fxch
hlt
or
cmpsl
dec
or
stos
mov
xchg
xchg
sub
sar
imul
cmpsl
or
mov
test
pop
in
lock
push
negb
daa
cli
hlt
pop
adc
dec
ret
add
imul
inc
mov
mov
scas
inc
ret
push
aad
push
pusha
int3
inc
sti
cmp
xchg
add
int
inc
scas
addl
mov
fldl
lods
mov
and
pop
jge
imul
adc
movsb
xlat
xchg
jle
or
imul
mov
scas
mov
mov
movb
mov
data16
adc
or
pop
mov
jno
clc
lahf
jg
mov
xchg
mov
ds
push
add
test
nop
jle
mov
cmp
roll
aaa
lahf
jle
sbb
pop
cld
push
in
push
pop
adc
arpl
test
stos
inc
fdivl
scas
sub
sbb
xchg
imul
fistpll
and
pop
outsb
adc
mov
or
outsb
mov
rorb
imul
lea
jno
scas
push
xlat
repnz
leave
movsb
sub
add
lods
xor
les
inc
mov
push
data16
inc
jge
lock
mov
or
sub
inc
shrb
fs
stos
mov
shlb
push
jmp
sbb
imul
inc
sbb
fisubrs
das
nop
inc
jnp
fnstcw
movsl
pop
dec
arpl
sbb
fdivs
loopne
or
popf
rolb
push
push
fildll
mov
dec
cmpsl
cmpl
movswl
push
jle
pop
xor
enter
icebp
mov
in
ret
out
and
push
stos
push
sbb
or
dec
and
flds
sbb
mov
push
or
pop
adc
jmp
or
shrl
xchg
sub
xchg
cmp
mov
add
dec
imul
ret
rcpps
testl
loop
fiaddl
insb
cltd
repnz
dec
push
mov
xor
pop
jl
push
imul
mov
jmp
ret
cwtl
mov
lods
inc
icebp
shrl
bound
out
and
mov
int
xor
jo
lret
dec
mov
stc
test
sub
hlt
cmp
xchg
mov
sub
dec
cmp
lea
adc
shll
out
mov
ret
inc
in
mov
xor
jae
fdivr
or
movsl
out
push
aaa
adc
dec
jno
add
cmp
sub
cmp
cmp
cmp
sbb
push
and
mov
gs
pop
inc
test
sbb
insl
mov
dec
dec
in
or
jnp,pn
xchg
repnz
leave
mov
bound
shlb
imul
push
push
out
adc
push
mov
and
adc
sbb
sbb
jle
push
cltd
jp
dec
add
addr16
sbb
dec
scas
mov
inc
pop
cwtl
jge
loope
jecxz
inc
add
fiaddl
fnsave
xchg
inc
mov
mov
dec
mov
in
out
in
xor
leave
and
daa
mov
jae
lods
or
mov
mov
xchg
mov
fdivl
lret
xchg
dec
adc
mov
std
test
cmpsl
fildll
stos
and
push
or
xchg
out
jl
inc
fwait
movsl
add
inc
jp
lods
sbb
inc
outsb
std
andb
in
lds
roll
das
pop
xor
and
xor
lret
fisubrl
test
test
adc
lret
jns
dec
and
leave
cs
fmul
dec
scas
notb
push
fstpl
out
rorl
aam
inc
lea
test
cmpsb
xchg
xchg
pop
adc
hlt
jg
imul
insl
insl
jmp
adc
jle
jns
popf
mov
bound
cmp
or
sahf
dec
adc
mov
iret
jno
test
jg
test
push
into
imul
dec
out
xchg
xor
xchg
test
jno
dec
add
jle
lret
jle
xchg
jbe
xor
sub
lods
dec
push
rclb
sub
cmc
ljmp
inc
lret
fdivrs
icebp
pop
insb
push
test
int
lock
lahf
inc
ds
test
mov
notl
mov
and
dec
dec
adc
push
mov
test
out
sbb
sbb
sbb
push
movzbl
bound
mov
jb
rorl
negl
decl
bound
jl
xchg
push
les
test
dec
sbb
push
inc
add
mov
repnz
sti
addr16
nop
repnz
jno
cmp
lcall
cmp
sbb
ljmp
inc
xchg
popl
popf
mov
clc
loopne
jg
mov
scas
adc
dec
add
mov
loope
gs
frstor
lret
loope
test
imul
lretw
fdivs
cmp
xchg
int3
xor
adc
xor
adc
aad
cmp
inc
out
inc
or
lcall
push
add
out
out
stc
inc
je
negb
adc
test
shrl
mov
movsl
push
xor
fs
push
mov
xchg
push
mov
pop
add
insb
jg
sub
pop
subb
add
sti
inc
adc
addb
jge
stc
push
push
int3
shlb
ss
jecxz
mov
mov
mov
inc
lcall
push
mov
lods
mov
das
insl
pop
repnz
jge
cmp
sbb
hlt
icebp
xchg
testb
jb
inc
dec
out
jg
repz
mov
jmp
sbb
xor
ljmp
andl
dec
sub
pop
dec
mov
and
lds
lods
test
push
in
pop
test
aam
push
jae
cli
and
fldl
shlb
mov
add
inc
adc
scas
mov
jb
jb
dec
adc
or
stos
lods
sbb
mov
or
fcmovu
xchg
int
dec
cld
movsl
aam
add
push
sub
cmpsl
mov
mov
mov
add
std
push
cs
ret
xchg
mov
mov
mov
jne
lret
mov
ret
orb
loopne
sar
inc
jnp
cmp
mov
add
into
notl
mov
cmpsl
in
inc
ss
push
jbe
jo
and
addl
inc
dec
roll
dec
mov
stos
xchg
lcall
fsubrs
sahf
pop
mov
inc
loopne
movsl
testl
jmp
mov
ret
icebp
fisubs
mov
sarl
fdiv
sbb
mov
aam
dec
ret
cwtl
out
jmp
dec
sub
push
push
push
push
cmp
addr16
push
adc
icebp
ret
cwtl
mov
xchg
xchg
push
out
add
mov
pop
stos
mov
adc
sub
jl
es
mov
jae
ret
xchg
xor
cmpb
sub
lret
sbb
jge
xchg
fidivs
test
cmp
mov
sub
mov
xorps
mov
pop
decb
adcb
add
jle
scas
leave
pop
daa
or
hlt
and
iret
xchg
adc
loop
push
lds
ret
and
pop
jae
sub
jne
sub
lcall
adcb
mov
sub
push
adc
std
inc
clc
pop
loop
inc
jecxz
mov
inc
test
dec
xchg
sti
stos
jae
fmul
add
cmp
pop
in
in
stc
in
out
movsl
jne
jns
mov
and
push
aam
inc
mov
add
mov
xchg
clc
shlb
pop
pop
fwait
scas
xor
nop
loopne
fs
roll
sub
jecxz
setne
sti
mov
add
mov
jg
dec
cwtl
repnz
cmp
fisttps
sbbb
fprem
call
add
jecxz
pop
arpl
dec
xor
cltd
pop
dec
cwtl
adc
mov
mov
push
inc
pushf
dec
adc
lcall
mov
mov
mov
inc
xor
adc
fisubrs
push
pop
xor
lods
inc
jmp
ljmp
mov
out
rorl
inc
xchg
sub
jb
pusha
mov
push
pop
and
cmp
out
inc
sub
std
jo
dec
jbe
bound
cmpsb
pop
invd
dec
pop
mov
push
mov
mov
sbb
cmpsb
add
das
add
rcrb
adc
add
mov
jl
mov
jmp
ds
and
out
bound
cmp
pop
inc
fld
mov
mov
outsb
push
adc
sub
xchg
lret
dec
or
outsb
enter
and
adc
push
pop
test
mov
push
adc
dec
or
addl
scas
sbb
mov
ja
es
mov
adc
mull
mov
divl
test
leave
and
out
gs
inc
dec
in
insb
jnp
popf
cmp
mov
sub
pop
inc
loop
clc
xor
ds
aaa
jmp
sti
sbb
sti
mov
scas
mov
sbb
pusha
std
enter
orb
xchg
add
inc
sbb
pop
mov
mov
cmp
test
pop
pop
repnz
or
or
js
adc
sbb
insl
orb
mov
aaa
mov
or
fs
xchg
or
leave
push
jle
jnp
daa
nop
loop
fsubr
hlt
cli
and
fistps
mov
lods
hlt
imul
popl
aad
pop
jno
jb
dec
dec
sbb
adc
fstps
subb
ljmp
xor
add
or
push
cmpsl
stc
shll
mov
mov
je
fwait
repz
cmpsb
add
cli
mov
js
lods
or
and
cli
mov
add
in
adc
daa
mov
cli
fwait
push
les
sti
cmpl
fstps
loope
inc
jge
hlt
and
xlat
pusha
aad
cltd
jp
push
pop
ljmp
imul
pop
ret
arpl
mov
add
aas
insb
das
cwtl
sub
icebp
cwtl
push
xchg
inc
stos
jmp
xchg
fldt
xor
jo
pop
pop
mov
xchg
jnp
inc
jbe
cli
mov
sub
xchg
leave
stos
ret
sub
push
push
sbb
pushf
nop
and
cld
cwtl
out
dec
cmp
jl
xor
bnd
fdivs
sub
dec
xlat
xor
shll
pop
jno
in
je
xor
hlt
sub
gs
shlb
push
add
push
stc
rol
sub
loop
jl
cmpsb
out
aad
pushf
xor
mov
push
xchg
dec
aas
push
mov
or
stos
shlb
pushf
dec
pop
cmp
dec
jnp
jecxz
pop
faddl
mov
push
loope
add
inc
mov
cltd
pop
or
pop
ljmp
add
test
movsl
push
inc
ret
bound
and
jno
sbb
or
lahf
sbb
imul
mov
ret
repz
mov
fadds
cmp
mov
addr16
nop
mov
inc
lock
dec
sub
addr16
inc
stos
in
pop
pop
daa
sbb
mov
pushl
repnz
sbb
or
fs
in
xchg
leave
mov
sbb
xchg
sub
loop
loop
xchg
fmuls
ret
sbb
cmp
add
push
mov
clc
dec
jo
sub
or
into
jecxz
sahf
cmc
xchg
fiadds
mov
scas
inc
cmp
enter
inc
inc
xlat
jmp
add
cli
pop
and
pop
in
lods
mov
data16
test
push
cmpsb
jnp
addb
cmp
inc
ja
lcall
push
jns
pop
out
out
aam
or
mov
sub
rorl
repnz
and
cmp
jbe
sbb
xor
lcall
sbb
sahf
outsb
push
push
mov
adc
cmp
js
dec
push
imul
bound
icebp
sub
cmp
pop
ficomps
sahf
adc
lods
jne
fsubr
hlt
mov
xlat
insl
sarb
sbb
or
jmp
sbb
lea
sub
cmp
add
jbe
mov
loopne
mov
sbb
icebp
mov
xchg
xlat
cmp
mov
xchg
call
das
xlat
push
ss
pop
cli
sub
out
add
stos
mov
sahf
int
xchg
mov
stc
mov
rcrl
pop
orb
scas
adc
ljmp
mov
out
std
or
lods
addb
jnp
fisubl
out
adcl
loop
jae
loop
fstps
xchg
cmp
sbb
mov
adc
lret
sub
sbb
jns
jbe
in
testl
fcompl
or
iret
mov
dec
mov
mov
push
out
inc
pop
popa
cmp
cmpsl
adc
sbb
adcl
scas
sbb
call
sbb
icebp
cmp
fidivs
pop
icebp
adc
mov
xchg
xchg
mov
cmp
sbb
das
cmp
je
add
out
push
xchg
push
frstor
negb
adc
sarb
add
mov
sbb
fsubrl
adc
in
mov
cmpsb
add
sub
mov
ss
std
loop
pop
mov
outsb
bound
out
js
fstps
stc
cmc
roll
roll
and
pop
jo
push
out
mov
insb
dec
adcl
int
cmc
jl
ret
sahf
test
pop
les
ja
in
mov
xor
lcall
jo
and
lret
dec
test
mov
mov
cmp
stos
test
sbb
into
and
mov
icebp
xlat
add
imul
push
arpl
in
lds
pop
ds
lds
sub
and
xor
das
outsb
arpl
lock
stos
cmp
sub
fld
and
in
sub
sbb
push
xchg
xor
inc
test
push
mov
pop
cmp
hlt
mov
mov
scas
mov
fwait
sub
and
ja
pop
jp
mov
inc
jns
cmp
cwtl
mov
ficomps
or
dec
pop
testl
hlt
sub
stos
sub
shll
imul
mov
les
fwait
std
xor
xchg
inc
fldl
out
jae
pop
jno
inc
fldcw
ss
lret
fisttpl
xor
inc
add
cmp
outsl
sbb
les
pop
outsl
rorl
adc
test
mov
pop
push
lret
out
xchg
push
sar
das
mov
mov
lcall
push
xchg
and
mov
imull
add
std
icebp
std
pop
popf
pop
jecxz
and
mov
xchg
inc
cltd
dec
mov
add
dec
mov
mov
mov
outsb
mov
sub
mov
and
ret
aam
add
outsb
mov
int3
orl
hlt
lds
popa
int
cmp
cmp
inc
pusha
setns
adc
push
mov
mov
loop
mov
fistpl
add
cmp
sub
imul
and
mov
aam
jg
ljmp
push
xchg
cmovg
xor
or
pop
shrl
jp
xchg
out
jp
dec
or
loopne
xor
pop
sbb
mov
xchg
fucomip
or
ljmp
or
sbb
push
mov
test
pop
jl
fidivrs
pop
mov
add
out
or
or
aad
int
cmpsl
ret
xor
loopne
inc
cltd
adc
jg
jp
push
lods
dec
sbbb
mov
sub
dec
lock
loop
push
adc
bound
mov
fsts
shrl
xlat
push
loopne
jle
jnp
test
xchg
adc
mov
xorl
push
jp
xchg
in
les
xor
je
mov
adc
push
fiadds
scas
mov
int
enter
gs
xchg
jp
out
adc
fwait
in
outsl
loopne
add
mov
xchg
xor
call
aad
dec
cmpl
icebp
scas
or
mov
cmp
popa
jae
imul
inc
rorb
pop
mov
inc
jne
pop
movsl
cmp
in
xchg
xchg
xchg
inc
cwtl
jo
arpl
test
and
push
xor
ret
cmp
setns
out
shlb
push
test
std
loope
enter
mov
cmp
inc
mov
test
scas
insb
fwait
movd
subl
test
popf
rcrb
mov
xor
cwtl
gs
std
push
or
rorl
inc
add
xchg
sahf
shll
mov
stos
test
pop
cmp
or
inc
dec
imulb
or
aas
outsb
fcompl
xorb
addr16
test
push
push
std
out
xlat
mov
push
and
ja
xchg
fistpll
add
sub
popa
movsl
popa
mov
pusha
out
mov
lods
adc
inc
test
loop
add
hlt
sahf
or
sbb
push
xor
xor
cs
mov
mov
pop
mov
mov
cli
roll
pop
mov
push
test
int
das
pop
mov
data16
sahf
enter
add
push
inc
orb
stos
cmp
inc
test
bound
into
fnstsw
movsb
addb
in
test
cmp
cmp
lods
sar
fisubrl
push
stc
mov
gs
add
aam
ss
fwait
jnp
jae
mov
mov
jbe
cmp
ds
aas
push
scas
jl
nop
stos
mov
add
adc
jmp
or
sub
adc
aas
mov
cmpsb
or
mov
cmp
xlat
and
add
mov
dec
and
and
add
xor
lcall
inc
pop
jb
int
sub
mov
mov
mov
or
push
push
jmp
ret
adc
es
lcall
cwtl
rcrb
fnsave
xchg
or
call
sbb
or
cmp
in
test
jno
out
add
xorb
gs
fimull
test
int
cmp
punpckhbw
cmc
arpl
pop
mulb
dec
pushf
mov
test
scas
scas
mov
pop
pop
cld
lds
jl
mov
das
push
mov
ret
shl
cs
cmp
lret
inc
xchg
mov
push
lret
jmp
std
iret
mov
hlt
ss
sub
jp
adcb
sub
imul
or
je
mov
es
sahf
rolb
mov
jns
xor
in
cmpsb
xor
cmp
aad
ja
aam
or
lock
jecxz
fprem1
and
clc
or
and
xchg
adc
enter
mov
jg
mov
jae
fisubl
in
in
fists
inc
div
push
fadd
lcall
cmc
mov
mov
adc
jne
jp
xor
out
je
lock
pop
xchg
xchg
lods
stos
clc
pushf
arpl
jg
or
sbb
mov
daa
add
int
xchg
out
fiadds
leave
jmp
mov
jne
insl
xchg
int3
jo
clc
test
cmp
and
push
add
shl
pop
jnp
push
in
fcoms
jb
clc
xor
popf
sti
test
pop
mov
or
mov
in
cmpl
jle
mov
xchg
pop
push
pop
ret
jnp
sti
fnsave
fisttps
mov
rcrb
out
jle
mov
push
xor
outsl
bound
test
dec
cli
cld
jge
daa
aam
or
insb
cmc
xlat
pop
push
dec
jp
incl
sub
mov
ret
push
and
push
adcb
dec
or
sbb
pushf
ss
push
mov
mov
inc
lods
idivb
roll
ja
scas
loopne
pop
loopne
out
repz
jmp
lcall
sbb
or
cld
lcall
jnp
mov
pushf
push
or
or
bound
call
jmp
dec
das
push
add
mov
mov
inc
out
bnd
xchg
sbb
dec
inc
mov
iret
test
imul
mov
lock
xchg
mov
add
rcll
cmp
xor
push
stc
inc
fstps
add
rcr
xor
imul
nop
lcall
icebp
loop
loopne
filds
sbb
push
sub
pop
and
into
repnz
stc
or
xchg
shrl
mov
push
inc
xor
fs
aad
lahf
imul
and
cmp
jne
dec
inc
ror
dec
push
pop
mov
sub
out
inc
inc
subl
pushl
cmp
and
idivl
adcb
mov
and
inc
in
jmp
jno
js
and
insb
sub
out
and
push
dec
idivb
mov
push
mov
nop
out
pop
in
pop
jno
mov
mov
rol
inc
xchg
aam
or
mov
in
sub
test
xor
dec
jmp
sbb
dec
rolb
gs
inc
or
add
adc
mov
daa
pop
mov
loope
loope
lret
lods
mov
and
mov
pop
pushf
inc
lret
jmp
jge
mov
jmp
sbb
inc
int3
fwait
jnp
in
sbb
jg
push
jmp
repz
xlat
les
dec
out
repz
push
movb
mov
adc
lods
adc
cli
js
lock
nop
xor
pop
enter
inc
ja
mov
es
ljmp
scas
sti
adc
adc
xchg
jecxz
idiv
rolb
lods
jns
addr16
jg
pop
cmp
mov
jg
loopne
sub
cli
adc
jb
mov
push
mov
cli
push
mov
movsb
stos
pop
pop
out
mov
jmp
nop
or
xor
jbe
mov
scas
jmp
div
insb
ds
pop
push
sti
dec
test
xchg
cmp
sbb
stc
jle
cmp
pop
cltd
pop
movsl
pop
movb
or
pop
les
lods
push
ljmp
dec
fnstenv
cs
cmp
data16
stc
xor
jl
test
pop
lock
lock
and
pusha
pop
int3
shl
sub
in
pop
add
add
sub
dec
or
adc
or
and
adc
inc
dec
popf
les
or
dec
push
adc
mov
iret
jl
or
pop
push
ret
leave
ja
repz
inc
jmp
add
lds
mov
or
andb
pop
js
addr16
adc
sbb
mov
adc
cmpsl
repnz
aad
sbb
aad
lret
mov
mov
imul
mov
icebp
sbb
loop
les
dec
outsl
lcall
stc
insb
adc
mov
lcall
hlt
cli
jns
cmpsb
pop
or
push
stc
movsl
adc
push
mov
shrb
pop
das
pop
outsb
push
andb
bound
mov
sub
inc
arpl
jl
and
hlt
jge
fnstenv
pop
hlt
add
lock
adc
nop
js
sarb
push
or
movsl
xchg
sub
hlt
test
repz
movb
lcall
xchg
outsl
mov
sub
insl
sti
into
orl
add
add
insl
mov
push
xchg
jb
cltd
xchg
ror
mov
fimull
add
or
lds
jb
sub
out
pop
loop
cmp
xchg
fdivs
pop
movsl
sub
push
xchg
pop
outsl
imul
push
push
pop
mov
mov
fstpl
sbb
adc
sub
adc
loop
dec
in
data16
icebp
cmp
mov
in
fcmovnbe
dec
divl
sahf
dec
inc
inc
out
test
lahf
push
xchg
pushf
mov
or
lea
dec
movsl
scas
loopne
push
je
push
xor
mov
sub
inc
mov
adc
dec
into
pop
ds
daa
mov
imul
xor
stos
cmp
xlat
adc
repnz
jb
push
addr16
mov
icebp
inc
pop
out
jge
cltd
sahf
jg
test
cld
mov
adc
pusha
mov
js
mov
mov
sub
in
ret
insb
pop
xchg
ret
jmp
mov
outsl
aam
call
bound
test
xor
and
sbb
pop
int3
xchg
or
add
repz
outsb
cmpsl
push
andb
mov
data16
movsl
inc
lret
lods
mov
call
sti
sub
fcoml
int3
jg
loopne
sti
push
or
xchg
adc
adc
xchg
in
inc
out
jg
or
test
mov
sbb
rcrl
pop
xor
xchg
mov
or
jle
adcl
sub
in
inc
sbb
hlt
xchg
or
lahf
or
or
pusha
xchg
mov
jbe
push
xchg
test
sbb
jne
loope
sbb
jmp
sbb
mov
dec
stos
cmp
jle
push
jl
xchg
clc
jp
mov
sbb
ret
push
in
jmp
xchg
dec
rcr
dec
xor
or
or
in
movsl
fiadds
icebp
push
jge
inc
mul
pop
inc
in
inc
jmp
add
imul
dec
cs
jge
xor
jg
aad
or
cltd
popl
mov
testl
lock
loop
into
inc
mov
jp
stos
mov
xor
pop
daa
aaa
test
push
filds
enter
push
cmpsb
lret
cmp
sti
or
enter
mov
es
inc
push
inc
xchg
testl
cwtl
dec
and
pop
mov
ljmp
mov
jg
xchg
lahf
lcall
aaa
xchg
xor
pop
push
cmc
insb
hlt
inc
xlat
add
or
add
add
fimuls
xchg
cmp
cli
or
out
ja
sub
jne
test
idiv
jecxz
movsl
stos
out
aam
sti
sbb
xchg
dec
cmpsb
adc
mov
stc
pop
xchg
fcomps
sub
mov
pop
fs
lock
push
dec
aaa
or
psrlw
and
dec
aaa
mov
mov
xor
sub
imul
mov
aad
xor
icebp
xor
cmpsl
lds
xor
data16
gs
push
jns
cwtl
dec
jle
mov
mov
stos
cld
or
cmc
push
into
call
fidivrs
inc
inc
add
or
out
pop
stos
ret
icebp
aad
mov
popf
add
pop
jle
cli
mov
loop
mov
dec
push
push
sar
jne
lret
cli
aam
and
leave
mov
mov
cmp
gs
push
inc
add
cli
popf
sub
pop
inc
sbb
sarl
out
int3
or
add
cmp
adc
push
lods
mov
popa
sahf
daa
shrb
jmp
jne
jecxz
ret
jecxz
adc
and
scas
push
imul
pop
jbe
sti
out
fs
aaa
js
shl
fldcw
cmp
movb
fisubs
insl
xor
movsb
mov
sub
lahf
dec
lcall
pop
pop
pop
decb
daa
mov
or
mov
push
mov
jmp
jb
or
into
xchg
push
ss
in
out
data16
std
outsb
ret
cmp
sbb
jp
push
xchg
jbe
daa
stos
stos
or
loop
sbb
jmp
pop
mov
int3
rcrl
fwait
inc
repz
lret
push
inc
push
scas
push
inc
inc
add
fwait
idivb
aas
shrl
icebp
or
push
leave
pop
mov
fldl
mov
aaa
scas
mov
mov
addr16
aad
subb
push
jnp
insb
xchg
mov
fidivl
inc
sbb
adc
pop
loopne
xchg
jne
adc
lret
xor
addl
ja
sbb
add
fwait
nop
mov
sub
scas
cli
and
lret
sbbl
pop
sbb
sbb
movsb
fidivl
inc
aam
xlat
and
push
in
inc
pop
data16
enter
sbb
xchg
icebp
pop
and
push
inc
add
sub
rcl
mov
inc
jl
fucomi
sbb
inc
lcall
addl
xor
xchg
or
sti
inc
mov
inc
dec
dec
out
push
push
jmp
scas
adc
mov
jle
mov
fidivrl
in
lret
inc
push
test
mov
inc
push
outsb
aam
push
in
lock
push
xlat
bound
jp
lcall
jp
and
push
andl
daa
mov
rolb
in
inc
int3
jb
lods
shlb
mov
in
daa
test
nop
lock
addr16
div
outsb
ss
daa
mov
dec
cltd
dec
mov
xchg
subb
repz
mov
pop
sub
std
ds
jo
and
and
int3
adc
mov
sub
jo
out
clc
repz
mov
mov
test
ret
push
repnz
fsubrs
xor
ss
mov
add
xorb
pop
pop
dec
lret
cs
pop
cmp
negb
sbb
js
and
mov
test
xor
rcr
int
call
mov
popa
ret
stos
fcomp
jge
sti
scas
sar
cmp
fwait
mov
sahf
cmp
imul
inc
rorb
mov
data16
stos
scas
lds
aas
jnp
mov
int3
dec
cmp
fidivl
dec
lret
mov
pop
imul
lret
add
inc
arpl
setl
cmp
repnz
pushf
jae
dec
out
sub
xchg
or
pop
cmpsl
push
test
cmc
jg
dec
push
pusha
out
into
mov
push
stos
push
iret
mov
movsl
add
xor
in
mov
sbb
xchg
sbb
lahf
out
fisttps
popa
rorb
add
dec
sbb
cmpsl
orl
jecxz
inc
mov
leave
xchg
inc
push
and
mov
cmpsb
test
sti
add
es
hlt
ficompl
cmp
test
mov
sub
and
cld
out
mov
add
push
sahf
push
std
rolb
aam
insl
mov
mov
xor
dec
je
rcll
fisttpl
or
mov
and
inc
mov
sbb
in
cmp
or
mov
jbe
pop
jnp
sbb
movsl
enter
or
push
rclb
jo
mov
pop
xchg
in
xor
xchg
dec
and
sahf
scas
adc
mov
bound
add
jmp
aaa
ljmp
mov
loopne
mov
mov
jbe
mov
test
mov
out
mov
je
pusha
cs
mov
mov
and
adc
inc
mov
xchg
jp
sarb
adcl
insl
in
dec
nop
into
jmp
das
sbb
lahf
mov
fsubrp
outsl
stos
fwait
adc
outsb
jae
repnz
in
loope
dec
mov
mov
dec
add
mov
jnp
dec
loopne
push
dec
inc
popa
mov
jecxz
lar
add
cmp
adc
xchg
jns
stos
subb
xchg
movsl
mov
mov
nop
int
test
leave
sti
cmp
daa
in
jb
push
fsub
mov
daa
fistpll
and
cwtl
cmp
or
fistpll
fninit
xor
xchg
loope
lods
adc
iret
mov
sbbl
rolb
lret
jno
xor
lcall
jge
jnp
fildl
movsb
mov
adc
fsub
pop
lock
hlt
int
rorl
pop
gs
cmp
or
jns
insb
jmp
add
jo
notl
sbb
jne
in
mov
leave
inc
popa
pop
jne
cwtl
popf
ja
rorl
in
sub
int
clc
lods
and
cmc
pushf
mov
mov
mull
test
push
mov
push
inc
shlb
mov
adc
add
sbb
lods
jno
inc
push
repnz
in
ror
les
in
sti
xchg
sub
cld
imul
add
pop
jns
adc
push
rcll
cmp
daa
pop
scas
loopne
jp
add
adc
cmp
mov
xlat
mov
out
testl
dec
daa
mov
lods
inc
enter
popf
adc
mov
xlat
and
pusha
fisubrl
loope
inc
or
xor
das
fsubr
gs
fistps
sbb
ror
movzbl
xor
dec
xor
insl
out
or
data16
xor
leave
jno
adc
mov
jp
sbb
addr16
lret
rorl
int
cld
int
and
es
iret
lods
fdivrs
adc
fimuls
fdivs
sti
push
mov
das
out
outsl
or
jno
inc
popa
scas
add
cmp
xchg
adc
daa
jae
fs
test
mov
xor
jp
cmpsl
inc
sub
jmp
add
mov
and
jne
sub
outsb
cmpsl
or
xchg
lds
jb
mov
mov
mov
or
ja
mov
fisubs
in
push
jmp
fs
sub
adc
lods
insl
icebp
mov
xchg
sahf
pop
mov
fisubrs
cmp
fwait
sub
mov
sbb
rolb
jno
sub
aam
pop
or
sub
lea
xor
enter
sbb
ljmp
ret
jo
mov
jae
cmp
out
loope
add
lahf
mov
push
jge
pop
xchg
test
mov
lret
fnsave
inc
fdivrl
xor
aad
std
or
aas
pop
ljmp
push
xchg
inc
sub
xchg
call
jge
and
shrb
mov
push
cmpsb
pop
xor
fildll
loop
daa
nop
daa
out
pushf
xor
shlb
roll
inc
sbb
test
mov
fldcw
nop
add
mov
mov
shlb
popa
mov
mov
or
enter
cltd
cmp
fs
mov
into
enter
lods
fnstcw
jge
add
cmc
mov
sub
xsave
lods
push
jb
xchg
not
dec
mov
movsl
push
test
bound
leave
incb
loope
jp
aaa
orl
cld
shlb
cmp
sbb
xchg
mov
mov
mov
aaa
inc
rcr
fdivs
push
push
stos
sti
icebp
loopne
es
and
cmc
test
popf
mov
sarb
shrb
add
in
stos
aam
arpl
in
mov
mov
mov
stos
jge
cwtl
jge
outsb
daa
in
jns
jnp
add
outsl
jnp
fs
jnp
enter
mov
push
fdivrl
rcll
cmpsl
popf
into
pop
cmp
push
pop
popf
clc
mov
sbb
cmp
xor
in
lods
add
mov
jle
scas
cltd
sti
mov
out
inc
sub
out
and
and
lcall
fiadds
sub
adc
mov
pushf
repz
aad
repnz
popf
pop
mov
dec
dec
add
jno
cmp
add
mov
cs
xchg
outsb
inc
mov
cmp
iret
insb
mov
jmp
jmp
and
inc
mov
mulb
testl
mov
fistl
xchg
scas
dec
in
aaa
xchg
push
ja
adc
sub
loopne
mov
sub
push
out
sub
push
ror
add
xchg
and
lret
push
movsb
hlt
add
mov
xor
mov
repz
mov
mov
pop
add
cmc
lahf
pop
negb
cmpsl
xor
imul
adc
repnz
push
fmul
inc
lods
es
cmp
int
push
jmp
or
nop
imul
notb
xchg
xchg
push
or
add
add
xor
xor
in
iret
fst
inc
jnp
cmp
roll
in
sub
sahf
pop
mov
sahf
mov
mov
in
dec
adc
loope
pop
mov
fs
hlt
addb
jecxz
xor
mov
cmp
sbb
js
lock
in
mov
movntpd
dec
jbe
mov
dec
sbb
lea
sbb
adc
xchg
aam
stos
je
jecxz
cwtl
mov
bnd
ds
sbb
jb
inc
out
push
pop
loopne
mov
jns
out
cmp
call
andb
js
push
fsubrs
cs
stos
rorb
test
call
or
jb
pop
in
push
dec
dec
or
or
cld
pop
stos
stos
scas
inc
aam
into
imul
xchg
sbb
jecxz
mov
xor
sti
loop
and
jle
ret
fistps
xor
and
lret
rolb
aas
xchg
pop
stos
push
adc
pop
mov
mov
pushf
insl
sub
int3
inc
out
push
dec
mov
xchg
push
out
mov
int3
insb
insb
fiaddl
adc
push
js
mov
sbb
cs
add
mov
adc
xchg
or
outsb
cmp
sbb
popf
sub
push
push
popa
push
test
sub
or
cld
pop
movsl
scas
lods
cmpsl
icebp
dec
xchg
in
stos
imul
enter
xor
das
mov
ja
or
faddl
stos
movsb
imul
fwait
cmp
sbb
lock
sbb
add
pop
mov
fisubs
lea
inc
pushl
ficompl
sbb
aam
adc
mov
push
loope
adc
mov
ja
push
pop
inc
sub
mov
stos
iret
clc
xchg
mov
mov
cmp
jns
add
cmpsl
jno
or
mov
lea
and
add
sbb
jns
mov
mov
negl
pop
jns
xchg
add
jle
clc
icebp
movsb
sub
pop
lock
pop
push
insl
add
mov
dec
ret
xchg
jl
xor
mov
pushl
daa
mov
push
movsl
xlat
bound
ret
clc
test
mov
arpl
or
in
xchg
push
loop
xor
stos
add
cs
jno
inc
sahf
mov
inc
test
imull
xchg
outsl
xchg
es
das
ds
ja
jno
push
inc
enter
scas
push
sub
xchg
ficompl
cli
sub
jne
mov
sub
add
fistps
dec
fs
or
or
daa
push
rcl
pop
pop
in
sarl
loope
outsl
push
mov
stos
testl
jmp
outsl
std
mov
sbb
pop
aas
xor
idivl
push
sbb
mov
adc
arpl
pop
out
adc
add
ss
xchg
xchg
and
shrl
enter
lahf
repz
and
out
cmc
xchg
and
push
in
mov
dec
daa
pop
insl
push
sub
mov
sahf
xor
inc
stos
inc
and
jle
push
adcb
pop
insl
mov
mov
pop
xchg
in
cltd
sub
xlat
hlt
rorl
xchg
xlat
mov
fbld
xchg
xchg
add
int3
jbe
mov
mov
xor
xchg
notb
cmp
and
and
and
aaa
loop
gs
gs
or
inc
add
pop
sub
cmp
imul
imul
pop
sbb
test
outsl
lret
and
sti
das
pop
nop
mov
adc
fidivrl
jl
sbbl
stos
adc
mov
repnz
out
shll
repz
inc
xchg
inc
inc
cmp
sub
xlat
test
es
sbb
jl
movsb
adc
push
ret
push
adc
test
jbe
xor
inc
and
jno
scas
negl
cmp
xchg
sbb
gs
mov
div
sahf
repnz
push
push
sbb
pop
out
xchg
adc
pop
push
jmp
dec
mov
leave
mov
dec
xchg
lcall
jo
stc
ljmp
notl
and
inc
dec
cld
add
fmuls
pop
mov
mov
scas
pop
mov
mov
push
xchg
cs
mov
pop
pop
ficomps
ljmp
mov
mov
lods
lahf
mov
loop
mov
fcomip
into
add
mov
push
push
ss
out
mov
mov
pop
dec
test
push
movsb
insl
enter
data16
sar
cmp
mov
jp
adc
es
dec
mov
ficompl
inc
cmp
mov
jle
jp
test
inc
dec
andps
or
mov
mov
cmpsb
xchg
lcall
adc
mov
and
adc
in
inc
jecxz
fdivl
mov
mov
or
ret
mov
shrb
and
jecxz
testb
ret
push
push
xchg
lahf
out
insl
shll
test
stos
mov
test
push
pop
daa
mov
enter
or
push
sub
cwtl
xlat
repz
cmp
mov
sub
lcall
insl
mov
inc
jp
jo
mov
paddsb
push
test
out
jmp
jbe
ss
frstor
and
mov
xchg
cmc
sbb
add
loope
lret
or
out
xlat
cmpsb
dec
jne
cwtl
and
mov
and
lret
out
pop
pop
or
xor
adcb
xor
in
add
mov
cwtl
data16
cmp
pop
mov
xor
loop
sti
inc
dec
inc
mov
out
add
sub
nop
xchg
jnp
xor
mov
ljmp
and
cmp
mov
sbb
sbb
mov
sbb
xor
sbb
push
mov
inc
daa
mov
cmp
dec
jb
cmpsb
ret
test
or
xor
lret
fdivl
std
lret
call
xchg
or
inc
sarb
or
and
xor
cmp
adcl
cld
pop
lret
mov
inc
mov
jae
rcrb
mov
mov
shll
sarl
sbb
xchg
jle
pop
imul
mov
in
push
jmp
sbb
jns
into
xor
shl
xor
sub
pop
pop
stos
mov
notb
push
decb
inc
sub
lds
int
lret
add
test
xchg
inc
or
scas
insb
inc
adc
ss
fadds
push
push
sub
jecxz
jne
notl
cmp
gs
push
jae
inc
out
loopne
test
pop
inc
jo
cld
mov
mov
lret
pop
es
movsb
ficoml
sar
cltd
adc
dec
xchg
pavgw
movsl
movsb
aas
jp
out
sbb
outsl
movsb
xchg
add
xchg
jbe
add
and
cwtl
popa
xlat
loopne
shrd
pop
sub
mov
out
xchg
sahf
mov
orb
lret
sbb
std
jp
sbbl
dec
nop
mov
js
in
xchg
or
sub
test
repz
movsl
cltd
mov
inc
lods
mov
mov
lcall
mov
fildll
das
add
or
inc
aam
cmpsl
clc
pushw
add
stc
sahf
out
ret
je
adc
in
int3
sahf
call
add
adc
pop
jle
lods
mov
ss
jbe
dec
stos
scas
lea
mov
mov
arpl
lods
popf
mov
and
push
xor
sbb
int3
lret
ret
dec
int3
movsl
xor
sub
pop
mov
sbb
das
mov
andb
cmp
nop
in
and
xchg
pop
lret
dec
cmpb
adc
jle
stos
xchg
push
or
or
jmp
ja
cs
cmc
push
sbbl
jno
pop
pop
lret
jbe
push
dec
lcall
aam
sbb
or
sub
sub
mov
jbe
xor
into
idiv
int
mov
aas
out
jns
jnp
jp
push
negb
sub
rcrl
mov
mov
inc
ror
inc
lret
sbb
pusha
xor
push
push
cmc
xchg
ds
mov
lods
pop
das
mov
and
mov
aaa
dec
nop
push
or
nop
cmp
add
adc
mov
cmp
push
movsl
cmc
push
or
or
cmpsb
xor
cltd
mov
pop
and
sbbl
xor
ss
cltd
mov
jo
xorl
ja
cmp
jno
push
mov
and
lcall
or
mov
cmp
in
xor
cmp
subb
xor
fistpll
icebp
fists
pop
xchg
push
mov
cs
je
jno
add
adc
mov
jmp
inc
leave
and
mov
dec
fcoml
leave
fildl
nop
and
mov
icebp
clc
fisubs
cmp
or
testb
inc
xchg
mov
add
xor
sub
sbb
std
cmp
xor
sub
pop
loop
or
mov
inc
mov
xchg
push
ljmp
mov
push
adc
gs
in
fildl
movsl
ds
push
add
push
adc
adc
sbb
dec
mov
cmp
cmp
xor
mov
add
or
daa
adc
jl
out
test
inc
les
xlat
nop
jns
fcmovbe
cld
fidivs
insl
jo
jle
fcomps
mov
mov
dec
inc
inc
push
dec
shll
test
lock
outsl
loope
inc
insb
push
pushf
pop
sub
xchg
pop
cwtl
mov
mov
and
mov
nop
adc
and
stc
xchg
nop
jecxz
mov
nop
or
mov
or
test
xorb
in
pop
jmp
add
je
gs
add
pop
mov
int
pop
cwtl
loopne
mov
test
in
mov
dec
cmpsb
repnz
and
adc
iret
mov
insl
out
push
stc
outsl
into
sub
in
ret
je
imul
ret
dec
or
cli
int
mov
subb
mov
test
lods
mov
jno
mov
sub
mov
jle
loopne
add
push
addl
sub
inc
adc
fsts
inc
xchg
aad
mov
sub
jecxz
lods
sub
les
pop
test
mov
popl
les
mov
lods
aaa
call
inc
lds
mov
xor
pop
mov
dec
push
cli
or
incb
xchg
fisttps
fimull
shlb
bound
scas
pop
jle
stos
mov
cmp
lock
cmp
cmp
jp
test
iret
aad
test
aad
push
xor
pop
jecxz
push
fsub
mov
lret
and
adc
negl
shrd
lock
into
inc
mov
cmp
clc
je
jne
pusha
mov
sbb
fdivp
scas
sahf
jmp
pop
sbb
mov
sbb
xchg
dec
movsb
icebp
mov
push
sub
cmc
aam
js
pop
mov
xor
or
insb
call
loopne
mov
mov
inc
add
nop
add
add
pop
sbb
icebp
cmpsl
mov
add
lods
fidivs
stos
jp
mov
pushf
mov
cmpb
loopne,pt
push
push
int
jmp
cmp
pop
mov
jecxz
inc
repnz
stc
xor
cli
arpl
outsl
jecxz
jo
clc
sbb
arpl
pop
imul
xchg
imul
xor
jl
ret
push
ret
out
call
dec
outsl
xchg
imul
push
xor
dec
pop
out
xchg
xchg
mov
sub
testl
and
fidivrl
xor
cmovb
add
sub
mov
sbb
inc
dec
jmp
rcrb
jnp
fsts
jecxz
into
xchg
sbb
jp
xchg
push
dec
mov
sub
push
addb
addr16
pop
sub
int3
iret
push
add
sub
mov
sti
sbb
adc
pop
dec
or
scas
add
enter
in
mov
lcall
sub
sbb
mov
imul
scas
scas
cmpsl
dec
xor
clc
int3
jo
aas
cmpsl
pushf
adc
cs
cmpsb
xchg
cmc
cmc
ss
push
ja
adc
lds
cmpsl
cs
icebp
sahf
daa
negl
xchg
imul
push
xor
into
mov
xchg
xchg
cmp
adc
sbb
arpl
inc
adc
mov
mov
inc
stc
movsb
out
call
push
movsl
pop
orb
mov
xchg
pop
or
ljmp
clc
divl
popf
int
cmpsb
jns
into
mov
jle
addr16
imul
xchg
lods
pop
test
xchg
and
jne
daa
jle
adcl
les
in
add
aad
test
lahf
sbb
imul
repnz
jnp
test
popf
jns
and
jg
push
and
and
mov
inc
sti
ja
push
sarl
pushf
push
sub
adc
push
inc
cli
mov
daa
push
xorb
test
cmp
imul
nop
repz
jg
cmp
mov
fcompp
lock
imul
in
jle
test
aam
lods
scas
ds
imul
sbb
cwtl
push
mov
lcall
ljmp
xchg
loope
adc
add
pusha
int3
insl
pushf
mov
or
inc
sub
xchg
out
clc
arpl
xchg
int
mov
out
push
lret
xor
ret
jp
xor
push
arpl
lods
pop
div
push
sub
mov
je
pop
lods
inc
scas
ret
mov
jnp
in
out
hlt
fsubs
fisubs
test
jge
xchg
out
or
mov
cmp
out
pop
add
mov
lea
sbb
lahf
stos
mov
cltd
stos
mov
pop
outsb
inc
stos
ja
aad
in
stc
sbb
add
out
loop
fsubrl
mov
mov
ret
out
lcall
xor
and
pop
dec
push
pop
xorl
filds
and
mov
inc
mov
or
jbe
push
addr16
lahf
loope
lcall
pop
fisubrl
test
arpl
out
movsl
movsb
sub
cmpsb
jg
arpl
fdivl
add
xor
ret
jp
ret
xor
cmpsl
dec
test
dec
jecxz
lea
lahf
add
cvtdq2ps
lahf
jno
xor
leave
aaa
add
xchg
stos
inc
push
cmp
outsl
daa
test
pusha
xor
mov
test
data16
adc
push
jl
repz
shrl
dec
repnz
outsb
daa
mov
jg
mov
add
add
mov
test
adc
lret
xchg
fldenv
push
out
loopne
jnp
sub
sbb
or
int3
sbb
adc
pop
dec
aaa
mov
jne
inc
mov
lds
repz
and
push
mov
jl,pn
dec
cmpsl
leave
mov
cmp
scas
jae
mov
and
inc
pop
inc
or
dec
xchg
fs
fiaddl
inc
sbb
inc
mov
lods
gs
jle
clc
leave
dec
jecxz
lcall
sub
sub
mov
xor
popa
rolb
hlt
stc
add
push
cmpsb
mov
xchg
xchg
dec
out
out
repz
pop
xchg
jecxz
mov
cld
mov
sbb
inc
lcall
mov
ror
rcrl
ljmp
push
ret
data16
xchg
divb
inc
mov
aas
lcall
or
outsb
push
cmp
loopne
das
leave
lock
into
cmp
fmull
jecxz
stos
imul
popa
test
pop
add
aad
std
push
add
mov
push
scas
shrb
push
jmp
punpckhwd
bnd
clc
adc
jbe
push
push
cmp
inc
pushf
divl
jl
pop
add
push
jbe
sub
push
hlt
hlt
cmp
lods
mov
lret
sbb
sti
rorb
jb
mov
sarb
xor
scas
test
mov
test
test
dec
jecxz
xchg
addl
inc
xchg
or
mov
cmp
pop
xor
mov
or
xchg
ljmp
negb
stos
aad
jo
push
fldt
xchg
hlt
xchg
jnp
inc
xchg
sbb
lea
imul
fsubrl
mov
ljmp
add
jg
push
xor
filds
jl
ds
pusha
xchg
fimull
les
and
mov
xor
mov
out
lcall
mov
enter
icebp
jo
repnz
out
inc
adcl
inc
inc
out
into
hlt
inc
lea
inc
inc
mov
mov
insl
cli
jnp
xchg
mov
lods
scas
mov
jmp
icebp
add
enter
and
ja
leave
pop
lcall
dec
int
push
std
shlb
push
outsb
test
div
xor
lods
sbbl
xor
inc
jae
and
jp
ss
scas
dec
jecxz
es
push
xchg
fisttpl
xor
jmp
xor
push
arpl
pushf
jge
jle
jmp
and
scas
lret
or
lret
mov
andl
push
out
cld
push
xchg
adc
cmp
shrl
mov
popf
int
repz
push
test
cmpsb
jle
dec
mov
notb
dec
sbb
and
sub
push
inc
mov
fnstenv
imul
adc
psraw
pop
mov
imul
inc
sbbb
xchg
or
leave
cmp
movsl
movsb
or
or
pop
cmpsl
insl
mov
push
rorl
jnp
fwait
aaa
mov
addr16
repz
dec
xor
shrb
cs
std
ds
mov
xlat
subb
add
push
pop
in
movsb
mov
addr16
jmp
cmpsl
shlb
adc
cmp
push
in
test
xor
add
testb
mov
les
pop
rorb
xchg
pop
inc
fcomps
adc
aas
push
lret
jnp
mov
es
xchg
jbe
dec
lret
mov
flds
movsl
jae
adc
inc
shr
test
jno
lcall
cmpsb
add
sub
ds
fs
mov
pop
popf
clc
cli
xchg
daa
repz
jg
out
cmp
sub
ret
notb
pusha
js
enter
sbb
xor
and
cmp
and
push
bound
mov
fs
shll
inc
xchg
lds
mov
inc
dec
fsubrp
mov
aaa
inc
pop
fcompl
xchg
adc
xchg
and
push
fcompl
fldcw
pop
xchg
sub
sbb
mov
push
arpl
bound
movsl
cmp
into
insb
add
lods
test
ret
sbb
push
outsl
into
dec
dec
xlat
inc
out
movsl
lcall
push
imul
jg
mov
in
lcall
lods
mov
rolb
push
adc
inc
in
cmpsl
cmpsb
incb
cmp
mov
and
or
movsl
rcrl
sbb
mov
repnz
mov
jne
push
or
mov
cmpsb
int3
mov
daa
into
pop
aad
mov
cltd
and
mov
mov
and
movsl
int3
stc
pop
lock
xchg
fisubl
pop
adc
imul
mov
sub
mov
xor
mov
test
loope
cmp
pop
inc
ljmp
sti
aad
push
jg
sbb
leave
std
aaa
das
imul
adc
jnp
jnp
dec
mov
xchg
test
push
cmp
xchg
push
dec
and
xor
pop
clc
sbb
jae
cld
sub
adc
mov
xchg
repz
je
fbstp
jae
add
sar
push
stc
sub
bound
jge
pop
jmp
mov
lock
cwtl
pushf
and
push
xor
les
decl
sahf
js
negl
cs
push
insb
inc
test
pop
nop
jmp
adc
sub
jnp
stc
daa
inc
xor
js
popa
push
lods
and
in
jg
subl
out
jmp
loopne
xorl
jnp
and
cwtl
loope
mov
leave
xchg
lcall
fbstp
pop
out
mov
jb
mov
fs
rcrl
add
clc
lds
jle
dec
sarb
mov
lret
je
shrl
mov
push
xchg
andb
push
es
addr16
enter
outsb
lcall
push
sub
sbb
dec
add
repnz
pop
fnstsw
sbb
adc
xchg
repz
arpl
stc
pop
inc
imul
fmuls
jb
mov
andl
xchg
or
dec
sbb
dec
loopne
or
push
clc
adc
out
or
dec
fld1
sbb
shll
popa
add
sbbl
mov
ljmp
adc
in
frstor
in
ret
arpl
cmc
xchg
and
fbld
popf
stc
daa
lea
mov
mov
fistpll
jnp
in
pop
int
mov
xchg
inc
iret
shlb
in
stc
scas
inc
imul
cmp
pop
orb
jmp
data16
stc
scas
push
ds
add
jp
cmp
or
cmp
dec
fwait
adcl
jge
cmp
add
push
push
inc
sub
outsb
insl
or
jns
mov
sub
adc
push
nop
cmp
ficoml
mov
xchg
inc
andb
outsb
pusha
ret
scas
bound
call
out
pop
mov
addr16
aas
negb
fwait
sbb
in
pop
xor
sbb
or
or
adc
jne
jns
adc
cs
outsb
daa
int3
test
jmp
dec
jo
jbe
or
int3
and
xchg
std
lock
ret
xor
addb
push
rorb
jl
fstl
push
jnp
in
xor
in
xor
js
dec
mov
fistl
movsl
inc
out
movsl
jbe
push
xor
sub
inc
xlat
pushf
negb
insl
stc
mov
cmp
push
mov
fbstp
fidivl
in
loop
stos
into
call
xchg
std
mov
xor
gs
in
je
add
pop
jne
fdivrl
rcrb
cmpsl
push
je
andl
in
or
jl
fcom
sub
and
cmp
pushf
lods
outsl
push
pop
into
cwtl
sarl
push
mov
push
mov
add
outsl
inc
xchg
aaa
insb
out
js
jo
in
jne
das
stc
mov
lret
push
int
sub
mov
loopne
iret
test
cmp
mov
gs
or
xchg
pop
sub
pop
in
in
stos
sub
nop
mov
loop
cwtl
ret
sub
mov
cmc
pop
lods
or
rcrb
repnz
outsb
xor
int3
push
and
fiaddl
dec
pop
inc
push
or
das
in
cld
in
xor
inc
inc
cmp
imul
ljmp
xchg
js
mov
sbb
sbb
xchg
daa
aad
outsl
cld
fstl
lds
imul
aas
lret
sub
pop
aad
es
xor
mov
inc
push
cltd
jecxz
sub
cmp
jb
sub
mov
enter
or
adc
incl
add
in
cmp
mov
add
daa
or
in
sub
test
js
pushw
out
cltd
pop
sub
ffree
popf
imul
mov
xchg
addr16
imul
push
addb
addr16
outsl
mov
add
hlt
enter
jge
icebp
sbb
add
pop
pop
xchg
outsl
sbb
and
mov
shl
cwtl
enter
and
neg
dec
data16
int3
ds
popf
xor
pusha
lret
add
rolb
cwtl
mov
lahf
push
out
pop
xlat
xchg
out
pushf
jnp
jl
sahf
xor
push
jb
mov
pusha
dec
shrb
pop
or
cwtl
push
mov
or
int
pusha
dec
jg
xchg
inc
jae
mov
cwtl
pop
sub
add
cmp
sbb
add
sbb
lds
mov
out
addr16
and
xor
pop
aaa
pop
push
add
pushf
jae
cli
fwait
into
adc
fistps
int
mov
jmp
mov
lret
popa
jo
sub
mov
add
int3
das
and
xchg
add
dec
stc
fwait
stos
cmovnp
cmp
shrl
mov
or
inc
out
xor
jecxz
decl
in
or
mov
sub
out
inc
mov
ror
add
sbb
repnz
push
popf
push
xor
imul
aas
push
lea
pop
pop
sbb
or
sub
sub
sub
repz
aas
sbb
and
or
test
xchg
inc
mov
movsl
pop
daa
push
sbb
adc
jae
fbld
hlt
xor
roll
add
jbe
jnp
cwtl
add
lret
pop
test
dec
sub
add
flds
and
ljmp
and
fdivrs
popf
and
enter
xchg
push
js
loope
daa
nop
aas
xchg
lret
adc
int
cmp
nop
mov
cwtl
and
adc
cld
dec
cli
jge
adc
fsubl
js
addb
push
or
in
mov
add
adc
jl
pushf
ret
daa
decb
mov
add
sbb
cmp
sahf
add
add
das
mov
fwait
nop
ss
xchg
sub
mov
loope
sbb
jne
dec
push
or
das
push
mov
jb
and
pop
jbe
fisttps
movsb
lods
mov
or
imul
dec
jae
inc
push
xlat
mov
pop
ja
lret
lock
mov
enter
dec
jecxz
jl
rcr
inc
mov
addr16
push
ljmp
sub
mov
test
jp
xor
imul
das
xor
and
out
adc
dec
cld
add
jae
ret
stos
cmp
inc
dec
xchg
gs
addr16
and
lea
lock
fcmovnu
cmp
sub
dec
dec
pop
mov
add
shlb
jg
inc
pop
xchg
in
jg
and
xchg
hlt
lea
ret
gs
sbb
push
cmc
jno
aad
pop
cmp
testl
shl
or
dec
jbe
xor
xchg
loop
sbb
pop
xchg
push
pusha
enter
insl
lods
push
aas
aam
push
dec
adc
nop
test
aaa
jo
mov
mov
sbb
dec
push
enter
or
and
or
inc
add
dec
test
cmp
add
outsb
pop
mov
lods
sub
inc
imul
pop
xchg
outsl
js
sub
ljmp
int3
pop
subb
out
xchg
sub
fistpl
stos
leave
sub
mov
jg
lds
outsb
push
cmp
inc
insl
lahf
dec
xchg
test
movsl
sbb
mov
lret
testb
push
pop
xchg
or
call
test
jb
xor
cmp
lahf
sbb
fists
clc
sub
into
jns
mov
and
test
sbb
pop
stos
fistpl
jnp
rcrb
mov
sub
cmp
jb,pt
dec
movl
lret
jae
push
cli
scas
fidivl
cld
sbb
adc
jmp
imul
lahf
mov
aam
popa
xlat
cli
cmp
cmpsl
or
lret
add
mov
push
enter
bound
adc
test
test
cld
pop
lret
cli
movsb
xor
data16
push
dec
and
dec
lods
xchg
mov
outsl
cmp
addb
mov
mov
mov
sub
add
dec
and
leave
pop
jp
ret
popa
in
add
inc
push
pop
jecxz
xor
rol
test
in
mov
jnp
nop
xchg
pop
fs
in
xor
packsswb
mov
lahf
ljmp
leave
je
leave
int
inc
sub
fwait
mov
cli
daa
cmp
jbe
inc
inc
popa
insl
imul
incl
pop
xchg
loopne
xor
pop
push
test
add
sahf
mov
inc
cmpsl
mov
pop
add
adc
iret
clc
adc
push
add
xchg
xor
stc
or
jg
pop
loop
sahf
mov
adc
push
gs
loope
nop
pop
and
lods
sbb
aas
inc
in
pop
out
mov
add
loop
rclb
shlb
push
data16
adc
sub
and
fisubs
cmp
mov
push
and
sbb
adc
icebp
gs
dec
movsb
jo
fdivrs
out
sub
incl
xchg
iret
inc
or
cltd
int3
aas
sti
nop
subb
and
add
mov
inc
sbb
test
aam
dec
lods
sub
mov
sbb
push
add
incb
dec
cli
pop
aad
mov
jns
mov
inc
mov
cmp
pop
xchg
lahf
aas
adc
mov
fistps
push
inc
clc
mov
into
jnp
out
pop
jle
cli
adc
mov
ret
es
push
push
stos
xchg
shll
add
add
pop
inc
enter
xchg
sbb
adc
ja
icebp
rcrb
xchg
popf
std
add
out
push
in
jnp
push
cli
adc
test
divl
cmpl
xchg
mov
jae
pop
sub
cmc
std
popf
rcll
stos
add
popf
inc
cmp
add
inc
xor
xor
xor
xchg
insl
fdivr
or
pop
pop
std
sub
mov
std
and
cmp
cmpsb
lahf
cld
mov
xchg
js
aas
aaa
adc
push
or
fildl
frstor
dec
bound
cmp
mov
pop
or
mov
out
mov
xchg
pusha
cli
push
sti
xor
ja
xor
and
and
ret
clc
pop
int
and
mov
enter
xchg
cli
sbb
bound
mov
ret
cmp
inc
insb
insl
jl
sarb
push
pop
adc
sbb
mov
jbe
jb
jne
test
lret
jmp
push
enter
or
addr16
cmp
push
nop
testl
pop
es
mov
jno
mov
adc
sahf
pop
int
push
mov
arpl
jge
and
stc
mov
loope
push
adc
push
mov
mov
pushf
sti
sub
pop
icebp
outsb
pop
addb
and
fsubs
das
inc
or
xor
xchg
movsl
sahf
pusha
push
pop
out
add
jb
push
arpl
cli
ror
jae
sub
das
sub
or
sti
mov
pusha
jge
clc
shll
and
jns
mov
xchg
mov
cli
jnp
lahf
pop
mov
js
lcall
pusha
mov
in
int3
push
sub
jle
movsl
shll
jecxz
lods
lods
lock
inc
scas
imul
add
cmp
iret
push
enter
pop
sbb
iret
inc
mov
xlat
sahf
dec
mov
inc
scas
scas
lods
sub
xchg
and
in
xchg
push
mov
psllw
popf
fldenv
sbb
fs
add
in
int3
xor
mov
dec
ret
jmp
aam
leave
pop
cli
fisubrs
pop
cwtl
daa
xchg
jg
subl
icebp
add
mov
iret
in
aad
call
orl
pop
cmpsb
daa
in
push
inc
pop
pop
mov
and
repnz
cmc
inc
mov
dec
mov
imul
cmpsl
mov
inc
insl
pop
iret
pusha
adc
sahf
jg
rcrl
sub
adc
jae
mov
cmp
pop
mov
aam
xor
sub
out
pshufw
outsb
int
mov
and
mov
sub
mov
es
jl
fsubrp
cmpsl
mov
cltd
sub
mov
pop
les
mov
leave
test
fcomps
repz
stc
mov
movsl
pop
mov
mov
xchg
mov
aas
jmp
das
mov
add
jecxz
ss
pop
dec
sbb
push
pusha
test
sbb
lock
mov
lods
daa
jecxz
pop
out
sbb
test
sbb
outsb
and
pop
loope
pop
pushf
ss
cmp
cmpl
imul
cmp
cmp
jl
pop
je
imul
inc
andl
in
jmp
or
inc
xor
inc
push
popf
addr16
pushf
push
call
add
xor
pop
mov
pop
int
lret
mov
in
je
xchg
push
rcl
xchg
dec
out
rolb
xlat
es
bound
push
ret
xor
gs
jmp
and
xor
mov
sub
scas
xor
int3
adc
enter
pop
inc
mov
or
xchg
dec
mov
in
mov
mov
scas
loop
repz
cmp
add
lds
fs
repnz
xor
or
sub
outsb
add
cmp
lret
ficoml
cmpsb
stc
xorb
imul
jg
jle
btr
mov
movsb
aaa
lock
subb
mov
inc
xchg
dec
nop
pop
dec
ret
sub
mov
mov
fcomip
loope
add
or
add
and
push
movhps
adc
and
test
cmp
in
test
loop
es
call
sub
jl
es
ror
cld
dec
sti
mov
hlt
mov
dec
dec
aad
mov
mov
test
ja
jb
mov
ja
jmp
shll
xor
sbb
int
pop
mov
enter
inc
push
adc
add
pushf
iret
les
insb
ffreep
jns
jo
rcrl
sub
test
adc
mov
in
cmc
jmp
add
xor
cs
dec
mov
add
daa
cmp
pop
sbb
xchg
ljmp
jae
jmp
rcrl
stos
push
xchg
ljmp
int3
inc
xor
mov
xor
or
jl
ffreep
jge
mov
or
add
cmpl
mov
outsb
and
mov
and
mov
jle
call
popa
or
push
push
lods
shr
daa
inc
jne
cmpsb
cmpb
pusha
mov
xchg
add
and
sbb
xchg
std
or
inc
mov
ja
sahf
mov
sbbb
clc
movsl
int3
sub
mov
out
xchg
cmp
pop
push
popa
add
out
in
add
mov
arpl
jo
inc
mov
je
push
jl
ror
pushf
fs
xlat
jp
aaa
xchg
and
mov
push
xor
pop
xchg
cmp
jmp
dec
mov
inc
or
mov
mov
mov
fs
push
lahf
outsb
xor
ljmp
sbb
aam
pop
iret
pop
fisttps
adcb
popa
xchg
dec
cmpsl
rcr
or
or
sub
shl
pop
iret
lea
xor
mov
call
cmp
stos
and
pop
push
cmp
lea
xchg
scas
in
and
pop
xlat
cmp
adc
nop
mov
jne
cmp
mov
add
mov
scas
add
dec
in
jbe
lods
add
loop
mov
iret
mov
mov
mov
push
lock
and
mov
sbb
jge
bound
xchg
leave
loopne
sbb
fcompl
repz
enter
rclb
jo
daa
jbe
je
xor
mov
cmpsl
ja
xchg
sbb
pop
imul
lret
dec
push
or
or
bswap
jl
in
jnp
mov
inc
cmp
rcll
ret
jmp
dec
mov
and
dec
popa
push
xchg
arpl
and
pop
gs
insb
scas
lea
enter
mov
jno
jmp
jae
xchg
in
in
pop
scas
cmp
mov
je
cmp
scas
cmp
mov
pop
jno
out
cld
xor
test
jbe
add
xor
inc
pusha
mov
bound
fimull
lcall
mull
mov
inc
gs
jbe
xlat
and
ret
jmp
jae
aad
mov
push
test
js
inc
cmp
icebp
rolb
js
ds
mov
enter
arpl
int3
xchg
sbb
push
sub
dec
jne
sbb
cmp
adc
xchg
add
inc
jns
pop
push
ror
pop
outsl
clc
repnz
std
test
mov
mov
inc
repz
push
mov
or
std
lea
fst
sub
xchg
dec
popf
mov
inc
mov
mov
mov
in
inc
inc
adc
aam
or
sub
push
cs
push
test
cmp
fdivrs
push
push
xchg
sub
xor
mov
mov
jge
add
dec
push
mov
push
push
xchg
sub
and
loope
fcoml
in
sbb
call
xchg
xchg
rolb
enter
sbb
lahf
mov
xor
ret
daa
xchg
jmp
sbb
cmp
lcall
dec
sub
ss
mov
test
sub
out
outsb
dec
add
fdivrs
mov
in
stos
pop
popf
pop
adc
lahf
orb
push
fisubl
mov
sub
add
out
cmp
pop
sub
mov
movsl
pop
xlat
gs
dec
adcb
and
adc
dec
iret
and
cmp
xchg
sub
jl
and
cmc
test
sbb
mov
arpl
pop
pop
inc
mov
xor
decl
pop
mov
and
xchg
cmpsb
test
inc
inc
lcall
stc
test
xchg
inc
mov
scas
leave
mov
gs
cmc
shrb
mov
rcrb
out
and
sbb
jge
or
xor
push
inc
adc
inc
mov
imul
sub
dec
push
rcr
jecxz
adc
mov
out
adc
sbb
or
cwtl
stos
dec
pop
xchg
sub
mov
setns
pop
lcall
and
adc
ss
aaa
mov
fnsave
cmpsb
xor
jl
inc
pop
adc
xchg
mov
stc
jne
add
sti
es
ds
mov
fstl
inc
lret
push
push
stos
int
sbb
iret
inc
mov
xor
pop
add
je
pop
dec
in
mov
pop
in
addr16
or
pusha
dec
popf
pop
sub
jle
push
mov
aam
add
ds
sti
sbb
lret
pop
mov
inc
scas
loop
sbb
cmp
loop
or
mov
sbb
push
clc
fnsave
sbb
jne
adc
adc
cltd
popf
push
sar
repz
into
movsb
add
jecxz
inc
cmp
adc
adc
push
push
adc
mov
fisubrs
jb
sbb
pop
xlat
inc
add
data16
push
cmp
or
mov
xchg
pop
inc
imul
or
jle
test
dec
ret
pop
adc
push
sub
push
cmp
jo
push
xchg
popa
lods
and
xchg
or
sub
mov
and
mov
mov
lret
pop
cwtl
adc
lahf
int3
add
mov
jmp
or
je
add
ss
in
insb
sahf
or
or
test
int
pop
imul
xor
inc
pop
sbb
test
out
shrb
mov
push
adc
pop
dec
jbe
inc
gs
out
insb
and
mov
std
sub
in
xchg
mov
or
jno
leave
sbb
enter
cld
fwait
aad
dec
imul
pop
aam
in
notl
mov
aad
push
loopne
mov
not
mov
iret
or
push
xchg
stc
fisubrs
cmp
jns
mov
dec
mov
and
lods
or
fdivl
mov
jb
imul
divl
mov
dec
aam
out
mov
or
subl
lret
dec
lods
jmp
jmp
pop
push
lock
pop
mov
sbb
lock
das
jb
lea
adc
hlt
inc
loope
stos
jle
jl
push
fcom
pop
mov
jnp
aad
pop
or
cld
scas
xchg
xor
outsl
cli
push
xor
mov
ret
cmpsl
push
lock
cwtl
out
leave
pop
push
mov
inc
loop
movsb
xlat
loopne
adc
xchg
jnp
push
cmp
scas
cli
jge
pop
pop
push
sbb
mov
fnsave
shll
mov
mov
pop
push
addr16
fxch
in
jb
xor
or
les
xchg
leave
fdivrs
pop
addr16
lahf
xor
test
push
jo
mov
adc
sbb
inc
fwait
mov
aam
out
sub
in
popa
dec
cmp
cmp
mov
xor
aaa
shll
int3
mov
je
icebp
xor
adc
mov
push
ret
mov
xlat
and
pop
mov
and
es
stos
lret
test
outsb
sbb
inc
out
mov
mov
adc
add
mov
xlat
jecxz
adc
adc
mov
int
jecxz
insb
mov
shlb
sub
mov
scas
dec
mov
pop
mov
int3
adc
mov
test
pop
scas
adcl
mov
popa
xchg
inc
clc
pop
mov
fidivl
xor
jge
sbb
into
mov
pushf
xchg
cwtl
stc
dec
push
push
mov
or
add
push
aaa
std
outsb
out
xor
pop
add
lds
addl
adc
sub
cld
std
dec
add
stos
movl
push
jne
add
xchg
cmpsb
fld
jae
psadbw
aaa
cmpsb
dec
hlt
inc
xor
test
shl
xchg
mov
outsl
xor
fldenv
dec
dec
jne
add
inc
mov
ret
dec
nop
cmp
jo
clc
je
jle
and
movsb
jl
sarl
mov
fcmovu
dec
das
inc
mov
pushf
inc
inc
hlt
stc
dec
ss
inc
iret
dec
fcmovnb
into
mov
sti
dec
sbb
sbb
sub
inc
mov
cmpsb
pop
aaa
out
xchg
aad
xchg
jp
push
xchg
aas
pop
xchg
pop
cmp
and
cs
fimuls
pop
jg
inc
sbb
push
cwtl
scas
aam
stos
xchg
xchg
or
xchg
lea
loop
inc
jp
push
pushf
push
es
dec
cltd
ljmp
xor
push
xchg
daa
pop
sub
ja
fists
xor
cmp
xchg
inc
roll
out
stc
mov
stc
xor
imul
jbe
je
add
into
rol
inc
loop
push
imul
mov
sahf
xor
push
inc
fadd
inc
mov
adc
lods
sbb
roll
sti
test
mov
repnz
mov
push
lahf
shrb
std
fistl
push
mov
js
mov
inc
mov
or
ds
mov
dec
stos
inc
jl
add
or
lea
xchg
rcrl
ja
push
adc
xor
insl
movsl
add
sub
push
lahf
in
xchg
cld
lcall
inc
cmp
push
sbb
add
jo
push
sbb
jae
rcrl
insl
pushf
insl
les
in
pand
in
add
sub
fnstcw
mov
pop
xchg
push
sub
lods
lret
sahf
fst
pop
scas
mov
xchg
mov
int3
mov
mov
cmp
cltd
enter
jp
inc
add
ljmp
mov
out
add
sbb
and
invd
aaa
pop
sti
add
pop
add
imul
adc
cli
add
icebp
xchg
xchg
xchg
inc
mov
or
xchg
cli
mov
adc
ja
mov
stos
sahf
jmp
mov
pop
adc
inc
sti
sub
sbb
adc
addb
stos
push
jle
pushf
cmp
cli
lret
imul
mov
shl
mov
movsl
arpl
fwait
insb
sbb
std
aas
sub
xchg
mov
mov
lods
outsb
lds
lods
fs
push
negb
lret
dec
pushf
movsb
ja
adc
out
dec
jb
in
or
push
sub
xor
mov
fstpt
mov
sub
add
testb
cwtl
add
dec
stos
ret
arpl
in
xchg
mov
sbb
mov
icebp
jae
mov
dec
je
iret
jnp
dec
mov
lea
nop
scas
in
sub
cs
lret
push
es
adc
jl
hlt
jno
push
mov
pop
in
lea
addr16
sbb
pop
stos
popf
aas
xor
std
sub
mov
movsl
add
or
xlat
xchg
dec
sti
stos
add
movsb
popf
adc
pusha
bound
dec
cli
dec
push
and
and
pop
adc
adc
xchg
mov
mov
mov
js
adc
and
pop
daa
pop
jne
cmp
scas
call
outsb
dec
mov
pop
sbb
and
fisubrl
mov
imul
jbe
xchg
shll
into
mov
cmpl
add
imul
addb
hlt
test
out
shl
inc
xor
push
inc
dec
mov
pop
movl
push
inc
mov
rcll
xor
jne
sti
insl
ja
cwtl
pusha
ret
add
sbb
jecxz
cli
mov
fnstsw
xchg
insb
sbb
jns
sub
repnz
sbb
fsubrs
cltd
xchg
dec
mov
lahf
xchg
sub
sbb
jge
es
mov
in
repz
arpl
sub
cmp
shll
loop
cltd
xchg
or
movsb
leave
push
cmp
jns
std
je
in
imul
sub
adc
fidivrs
pop
or
jae
psllw
ja
cwtl
lods
je
andl
cmp
enter
xchg
push
sbb
loopne
inc
mov
inc
cld
mov
xor
cmp
loope
xchg
sub
out
mov
sahf
scas
bound
in
pop
test
sub
xchg
adc
loopne
fs
out
pop
stc
roll
pop
pushf
movsb
cwtl
fs
mov
ljmp
xchg
jae
daa
bound
adc
add
enter
sub
rcr
imul
jbe
push
jle
xor
daa
sti
dec
cmp
jno
inc
addb
xchg
add
bound
pop
push
push
adc
mov
sti
mov
xchg
hlt
cmp
pop
std
sti
movsb
push
mov
lea
fdivl
movsl
mov
pop
in
mov
fcoml
movsl
insb
jb
int
cmp
xchg
jb
and
call
bound
addr16
lret
inc
shlb
in
addl
or
push
aam
mov
cli
aas
inc
inc
sbb
notb
sub
xorb
jnp
out
icebp
ljmp
push
rol
push
inc
xchg
adc
dec
leave
in
sub
je
rcrb
mov
inc
arpl
ja
ret
mov
loopne
imul
popf
cwtl
jg
aaa
fiaddl
sahf
jg
fildl
pop
loopne
sub
push
push
test
dec
fmull
pop
cmp
add
pop
aad
lods
cmp
cmp
arpl
mov
inc
lds
mov
or
sub
xchg
push
inc
loope
dec
in
cmp
frstpm(287
int3
cld
call
insl
pop
in
test
punpcklwd
outsl
dec
fbld
jl
sti
inc
xor
xor
fdivrs
rclb
jns
push
add
jmp
popf
inc
stc
cmp
push
imull
mov
cmc
mov
push
pop
jle
xor
push
cmc
pusha
into
rclb
mov
jae
dec
mov
fdivs
dec
pushw
adc
loop
sahf
ret
push
out
and
mov
jecxz
adc
adcb
rorb
mov
cmp
cmp
leave
insb
jmp
es
cmp
or
push
fistpl
rcrl
pop
mov
sbb
cmpl
sbb
out
std
xor
mov
jg
xlat
outsb
jns
nop
sbb
cmp
jo
adcl
shll
cmpsl
push
fmull
scas
pop
ja
jnp
pop
add
lret
mov
aam
sub
sti
les
lahf
insl
rorb
xor
faddl
and
stos
xchg
or
push
scas
add
jl
repnz
ret
rolb
arpl
fiaddl
ret
mov
cmpl
adc
stc
int3
cld
cltd
in
mov
jbe
ret
in
adc
push
jb
int
mov
scas
mulb
dec
push
and
xor
xchg
push
adc
outsl
out
data16
pop
push
dec
inc
bsf
daa
outsl
outsb
xchg
cmc
sbbb
stos
rcrl
sub
sbb
cmp
push
pushl
cld
ja
add
pop
scas
pushf
mov
out
cwtl
mov
rcl
mov
or
cld
test
jno
push
add
ror
leave
pop
inc
jne
sbbb
test
add
mov
iret
mov
mov
lcall
sbbl
loopne
jge
shll
and
adc
fwait
jmp
test
fnstsw
outsb
xor
pop
push
mov
jns
lahf
or
lea
dec
cwtl
data16
mov
enter
and
or
mov
clc
mov
cltd
fisttpl
mov
or
xchg
or
xor
add
shll
hlt
add
xor
test
icebp
xchg
je
rolb
nop
mov
clc
fsub
push
clc
cltd
insl
fiadds
ss
fwait
pop
jo
testl
insl
movsb
push
cmp
mov
xor
adc
pop
xchg
dec
je
lcall
int
inc
inc
dec
sub
lcallw
pop
or
sub
push
aad
sub
cmc
mov
repnz
lret
leave
sahf
xchg
leave
mov
imul
dec
sub
aaa
xchg
sbb
rorb
inc
jecxz
adc
subl
cmc
push
and
movsl
xor
rorb
xor
adc
and
rcrl
dec
repnz
add
adc
or
xor
add
xor
push
iret
mov
xchg
jecxz
jns
aas
iret
jne
loop
sub
js
xor
add
dec
pop
adc
loope
or
pop
shlb
test
sub
mov
sub
cmp
pop
fwait
jb,pt
hlt
negb
aad
arpl
adc
xlat
sub
fbld
or
push
ret
or
subl
inc
ret
std
push
mov
dec
xchg
pop
pop
jle,pt
adc
pop
mov
test
xor
dec
sbb
stos
int3
ja
cmp
int
fwait
insb
add
rcr
cmp
pop
mov
cmpsb
jae
ja
adc
in
pop
imul
cmp
adc
scas
inc
cwtl
cmpsb
sub
push
movntq
fdecstp
cmpsb
mov
loopne
adc
imul
jno
lret
push
popa
jno
std
xchg
gs
push
js
xor
xchg
stos
mov
lea
shlb
add
inc
dec
add
push
or
in
ja
mov
mov
lret
sbb
mov
adc
stc
cmp
mov
imul
ss
mov
flds
jmp
jp
lret
ret
jnp
cmpsl
push
js
adcb
sub
inc
xorl
pop
jne
pop
add
or
mov
adcb
push
ja
mov
mov
dec
push
cmp
push
add
ss
ljmp
loope
jbe
xor
inc
xchg
cmc
lods
jns
stos
push
and
mov
push
in
pop
and
xchg
je
ds
fidivrs
repz
das
push
stc
add
mov
dec
fwait
push
fwait
cld
dec
test
fnstcw
lahf
push
mov
and
insl
fs
stos
push
pushl
js
shll
subl
push
cmp
or
dec
add
std
add
sbb
mov
mov
aam
sbbl
jmp
rorb
ret
cmpsl
popa
and
adc
mov
or
subb
jno
icebp
repnz
lahf
leave
lret
icebp
mov
hlt
sarb
stc
mov
adc
sbb
call
les
gs
sub
pop
adc
cmp
scas
in
lods
fs
add
adc
arpl
push
dec
leave
out
leave
adc
pop
arpl
gs
inc
xchg
pusha
nop
jmp
inc
xlat
cli
or
xor
std
js
stc
lret
jge
dec
inc
dec
testl
cwtl
dec
pop
or
leave
je
rorb
shr
sub
cmp
mov
adc
sub
xchg
jmp
mov
jge
xchg
lret
add
mov
stos
adc
dec
cmp
out
dec
ret
sbb
enter
jno
psrlw
sub
icebp
in
mov
out
das
xor
dec
push
xorb
lret
cmp
push
cmp
jp
cmp
mov
movsl
push
jae
out
sti
bnd
mov
jle
ds
fldz
add
adc
lock
mov
mov
dec
les
cmp
clc
mov
dec
fs
sbb
xchg
fbld
sti
adc
push
xchg
mov
cli
cld
mov
jbe
cmp
ss
mov
lods
out
out
lods
push
dec
fwait
add
sub
cwtl
sub
mov
mov
sti
jne
adc
lcall
enter
ret
push
cmpsl
aaa
ljmp
mov
pusha
popa
ret
clc
mov
je
es
dec
pop
mov
xchg
push
shlb
sti
mov
sub
stc
add
sub
aaa
inc
add
sbb
aam
fstl
push
leave
inc
dec
jne
aaa
jbe
sub
xor
inc
fwait
and
xchg
xchg
aas
out
mov
and
and
lret
pushl
push
popa
jmp
mov
ret
ret
hlt
pop
cmp
dec
cmp
mov
fmull
incb
xor
scas
cmp
mov
es
push
ljmp
int3
insl
hlt
xor
cltd
jge
jle
cltd
dec
cld
pop
push
in
outsl
std
test
iret
mov
insb
xchg
cld
push
mov
fisubl
int3
sub
jmp
push
push
je
and
shlb
pop
jo
mov
rcrl
mov
movsl
dec
mov
in
jl
or
push
or
loop
into
dec
rol
push
xchg
jo
outsb
icebp
sub
shrl
sub
out
cmp
dec
int3
mov
rorb
shlb
inc
jae
xchg
and
pop
dec
shlb
adc
ljmp
js
repz
pop
xor
add
jnp
ficompl
push
mov
xchg
dec
jg
mov
jmp
scas
cmp
push
inc
mov
leave
pushf
and
mov
fdivrl
xor
es
clc
fucomp
gs
mov
loope
xor
movsb
je
popa
fnstenv
adcl
pop
test
pop
mov
cmpl
fcomps
stos
cmc
mov
js
cmp
js
dec
icebp
push
insb
jecxz
push
mov
sub
dec
inc
jns
and
cmp
mov
out
aam
mov
pop
arpl
pop
mov
xchg
push
fdivrs
sub
cmp
jle
stos
clc
ljmp
mov
shlb
add
pop
mov
js
cli
out
mov
cmp
sti
pushf
or
iret
mov
movsl
jecxz
fiadds
mov
cmc
in
shrd
es
negl
inc
xor
inc
or
mov
or
dec
add
mov
cmp
or
mov
dec
das
dec
push
lret
inc
dec
jns
loopne
popf
cmp
es
push
jecxz
dec
cmpsl
jno
fstpl
lods
rcl
dec
sub
or
test
pop
cmpsb
arpl
xor
movsl
cmc
dec
add
jnp
or
push
or
int3
mov
es
mov
int3
or
push
sar
enter
inc
push
push
push
inc
cmp
in
es
sti
xchg
pop
lea
cmp
pop
sub
popa
xchg
stc
sti
neg
xchg
mov
and
mov
insb
inc
lods
idivl
push
imul
insb
adc
mov
dec
inc
aam
ret
xchg
cmc
test
pusha
sar
jno
push
insb
mov
pop
jle
insb
or
or
loop
movsb
repz
sbb
or
enter
pop
inc
xchg
pop
aaa
push
jecxz
sbb
xorb
pop
jp
push
inc
jl
jnp
inc
jle
insb
rcrb
fcomp
push
xchg
xor
pop
mov
sub
nop
jmp
mov
add
push
sbb
jb
lods
lahf
or
fucomp
push
scas
xchg
leave
aad
repnz
sub
dec
push
loop
out
xchg
pushf
jge
dec
fcomp
stc
or
jp
repz
xlat
rol
daa
mov
sbb
cwtl
mov
sbb
sub
xor
push
push
mov
js
lock
es
stos
mov
out
out
push
xchg
stos
jle
fstl
dec
push
mov
cmpl
cwtl
adc
pop
popf
shl
jecxz
push
neg
adc
sub
mov
roll
add
inc
dec
inc
jae
push
hlt
adc
sub
adc
or
int3
inc
mov
movsb
mov
std
hlt
mov
mov
sbb
mov
jle
mov
mov
in
mov
or
stos
ss
lock
mov
jge
test
mov
int
adc
dec
pushl
inc
out
sbb
js
mov
add
rcll
mov
mov
in
cld
and
clc
add
stc
call
push
push
dec
inc
mov
cli
cmpb
in
adc
jmp
popf
or
xor
and
lcall
jb
sbb
push
sahf
fcomps
mov
comiss
adc
nop
add
pusha
addr16
jb
bound
test
ret
pusha
in
cmp
repnz
add
xor
in
jmp
das
push
cmpsb
lret
pop
cmpsl
cltd
mov
aaa
lret
mov
imul
adc
ret
rcrl
test
les
cld
sub
aas
mov
in
xor
scas
repz
or
xchg
and
push
repnz
mov
mov
lea
pop
mov
std
pop
adc
jbe
jl
test
mov
fstl
imul
adc
sbbl
js
clc
pop
ja
gs
fcomps
sti
sbb
cmpsb
out
leave
jle
xlat
mov
shrl
sarb
or
sahf
out
out
xorl
imul
push
out
push
xchg
mov
pop
or
fistl
push
add
dec
cmp
movsl
adc
ljmp
repnz
cmc
add
mull
mov
icebp
pop
hlt
icebp
sbbl
pop
push
insl
mov
mov
lret
lahf
cmp
dec
aaa
in
jo
jo
cmc
jo
cmp
imul
mov
test
push
jg
aas
or
add
cmp
sub
in
add
stc
fcoms
add
in
xor
push
mov
mov
or
lret
test
nop
or
ret
mov
sbb
stc
push
and
mov
sbb
mov
sub
push
popa
das
inc
out
incl
sub
add
mov
adc
pop
cwtl
cmp
xor
hlt
push
dec
aaa
add
xor
push
je
rol
jnp
aaa
rol
test
imul
roll
imul
pusha
dec
aad
rorb
jb
in
cmp
sbb
mov
or
pop
int
cmc
ss
xor
aad
nop
loop
push
push
ljmp
out
and
mov
inc
dec
pop
xchg
out
mov
cmp
sub
fs
jecxz
inc
dec
inc
test
sub
add
lcall
fstl
pushf
add
adc
xor
jns
movsb
aad
pop
pushf
data16
sbb
mov
jp
orl
pop
sub
push
ljmp
loop
mov
or
sbb
cmc
enter
lods
ja
pmaddwd
sbb
add
mov
ja
push
leave
inc
sbb
sbb
xchg
jp
jne
mov
adc
mov
in
stc
sub
xor
jno
pop
fwait
xchg
jle
std
adc
je
stos
xchg
lret
mov
add
or
repz
mov
data16
fldenv
pusha
add
push
pop
cltd
repnz
mov
inc
fiaddl
cmpsb
cld
push
sti
xchg
cltd
add
rorb
jecxz
pop
mov
inc
jmp
cmp
loop
jg
dec
cmp
inc
inc
ds
enter
or
loop
pop
sbb
scas
fistps
mov
stc
lret
int
xchg
int3
jl
xchg
xchg
add
into
fxam
in
adc
pop
mov
outsl
ljmp
fsubs
das
loope
pop
mov
in
fdivs
scas
pop
cmc
mov
mov
lret
adc
xor
push
jmp
inc
mov
jg
jg
adc
jge
cmpsb
pop
sbb
pop
leave
cmc
pop
insb
push
pushw
dec
loop
pop
pop
xchg
cmpl
insl
jmp
dec
add
or
or
fidivrs
sbb
push
lods
jecxz
and
inc
mov
mov
pop
sub
ja
mov
xchg
cmp
push
pusha
jne
xchg
fstps
clc
jg
repnz
repnz
sbb
int
and
and
scas
aas
test
lock
sahf
int
mov
mov
dec
cmpsb
orl
fmull
pop
mov
loop
in
mov
pop
pop
push
call
lods
jmp
test
sub
pop
cmp
in
idivl
xchg
and
loope
call
jl
addr16
int
sub
jge
gs
fistps
jp
rcrb
mov
pop
ret
pop
insl
outsb
push
xchg
call
cltd
sti
shll
dec
cmc
popa
mov
mov
mov
mov
xor
push
hlt
cmp
cmp
cmc
xchg
mov
jl
add
fistps
cld
ficoml
dec
cmp
test
or
and
fiaddl
mov
outsb
aad
cwtl
into
hlt
sbb
xor
xor
cli
adc
jge
loope
sub
xor
int3
sub
int
or
and
sbb
mov
arpl
cmp
jg
mov
lock
sbb
cmpsb
loop
jp
cmpsl
cld
ficoms
iret
addr16
ret
leave
cmp
cmpsl
push
pushf
adc
iret
sub
popa
push
bound
dec
pop
jl
xchg
mov
inc
mov
fdivs
dec
cwtl
or
and
inc
out
push
mov
mov
dec
int3
mov
push
pop
movsb
fmulp
lea
dec
in
outsb
lret
mov
xchg
aas
push
aas
fnstenv
pop
push
mov
idiv
cld
sbb
mov
inc
xchg
popa
fimuls
pop
scas
inc
ds
std
cmpb
in
inc
cld
push
pusha
jge
out
outsl
cmp
repz
inc
sub
int
pop
push
pop
cltd
adc
sub
loop
lea
add
sahf
call
int3
xor
mov
fcomip
int3
fistl
lods
pop
sahf
lods
push
ds
pop
pop
add
mov
cwtl
add
xchg
mov
and
add
and
test
lcall
and
xchg
mov
push
inc
xchg
sub
int3
ja
rcll
inc
adc
lret
lret
xlat
inc
add
sub
repnz
data16
nop
jb
cmpsb
and
outsl
jmp
cmp
inc
inc
sarb
pop
sub
xchg
xchg
nop
push
out
push
and
lea
fisttps
das
push
pop
in
push
call
addr16
jmp
mov
lret
xchg
or
or
in
lods
call
je
adc
xchg
cmp
xor
fdivrl
add
mov
aaa
fs
dec
sahf
pop
and
cld
mov
cmpl
orb
mov
dec
adc
ss
sub
add
jns
dec
gs
xor
lock
fsubr
xchg
aam
pop
ret
lret
rcrb
mov
shr
xlat
ss
adc
mov
mov
adc
bound
cs
xchg
jmp
dec
mov
push
lret
jns
dec
dec
stos
lds
int
sbb
repnz
inc
mov
subl
xchg
push
lcall
clc
popa
and
xor
add
and
push
jae,pn
sbbb
or
in
pushf
push
inc
sbb
mov
bound
clc
sbb
jecxz
clc
daa
jmp
and
sub
fmull
or
orl
adc
pop
rcll
sahf
jbe
addr16
push
jecxz
push
popa
push
sub
mov
stc
jp
pop
pop
insl
fsubs
int3
cmp
add
sahf
or
ret
mov
inc
sub
adc
inc
push
cmpb
add
divl
lds
arpl
pop
fstps
xchg
jb
sarl
push
adc
in
sub
push
cmp
pop
orb
xchg
sbb
ret
stos
movsl
xchg
xor
mov
iret
lods
fldenv
cli
loop
fistpll
out
sbb
jl
add
insb
stos
popa
cmpsl
scas
es
jle
sub
fmull
dec
js
fiadds
out
cmc
and
sbb
dec
xor
and
sbb
insb
nop
hlt
jg
mov
mov
inc
ds
jl
and
inc
fmull
push
dec
xor
and
mov
data16
mov
dec
stos
mov
cmpsb
pop
or
fdivs
fldenv
sub
insl
int3
fs
aad
loope
pop
jb
sbb
xchg
daa
ret
or
ljmp
xchg
and
inc
mov
xchg
imul
jecxz
ret
mov
lcall
adc
rcll
cwtl
ds
loop
in
adc
out
in
aaa
aam
fsubrl
out
mov
mov
dec
sahf
bound
testl
lds
sahf
fucom
pusha
lret
outsb
out
mov
mov
cmp
inc
out
mov
sub
sub
notl
fs
push
pop
sbb
rcpps
lea
add
pop
lods
add
js
or
push
pop
lahf
cli
dec
fsubrp
clc
loopne
push
scas
loopne
adc
repz
push
int
repnz
cmpsb
outsb
mov
xchg
dec
in
sbb
cs
rorb
fs
cmp
jnp
add
lea
std
sahf
imul
and
cltd
test
add
add
inc
scas
cltd
sbb
in
and
jp
fcomip
insb
pop
cmc
xor
cmc
rol
sbb
sub
mov
nop
in
sub
icebp
out
cmovp
pop
scas
inc
mov
and
lea
jno
mov
movsb
inc
push
cmp
jge
stos
pop
adc
arpl
inc
and
fnstsw
pop
repnz
movsb
addl
push
into
xchg
jl
pop
cld
push
mov
loope
shl
mov
pop
cwtl
mov
inc
jmp
add
call
out
and
jecxz
mov
push
add
mov
pop
push
lcall
lcall
pop
pop
mov
addr16
je
adc
test
punpckhbw
sarl
add
mov
sbb
mov
movsl
out
jmp
cmpsl
xchg
inc
push
aam
mov
imul
popa
adc
cmpsl
inc
ret
int3
lods
mov
and
lds
pusha
or
leave
push
mov
call
cmp
push
cld
rorb
xchg
mov
dec
add
fiadds
mov
in
add
das
pop
daa
dec
mov
mov
push
xchg
pop
movsb
sub
aam
mov
andl
bound
and
addb
mov
call
pop
nop
clc
jle
inc
movsb
cltd
adc
mov
mov
xchg
das
or
je
subb
mov
les
pop
or
adc
int3
loope
pop
add
mov
push
cmp
movsb
insl
push
scas
out
push
loopne
popf
jns
es
sbbl
and
add
popf
call
inc
push
into
inc
fdivrs
inc
mov
shlb
daa
mov
sbb
fcomps
pop
test
xor
add
shlb
popf
daa
cmp
loop
orl
movsb
jmp
inc
inc
dec
jecxz
in
jb
lock
roll
fwait
scas
mov
xchg
arpl
xor
sub
xor
popf
dec
mov
inc
decb
xchg
pop
jo
int
pop
adc
jge
dec
adc
and
push
and
adc
mov
fucomp
sbb
imul
cmp
cmpsb
sub
into
xchg
ljmp
inc
xchg
outsb
and
aaa
fdivrs
popf
mov
repnz
xchg
xorb
les
repnz
jl
lret
push
scas
push
mov
sbb
test
pop
mov
cmp
popa
pop
test
jle
aam
or
xlat
push
fisubl
xorb
es
fcompl
cli
mov
iret
ljmp
loope
orps
jg
jg
movsl
outsb
divl
push
cmpsb
ljmp
addl
ret
shll
push
insl
xchg
push
jae
push
pop
xor
shll
and
imul
add
jo
push
push
mov
pusha
xchg
push
fwait
out
iret
pusha
or
and
std
shld
mov
and
jo
push
je
jnp
popa
inc
jg
mov
ficoml
loop
mov
loopne
adc
adc
mov
outsl
arpl
pop
fisubl
jae
pushf
cmp
xchg
in
mov
dec
icebp
jns
pop
cld
sbb
fbld
cmp
jne
sbb
lods
or
jnp
scas
les
mov
jne
adc
cmpsb
or
sbb
cmp
fs
mov
bound
dec
mov
outsb
fstpl
and
pushw
add
shrl
mov
rclb
cmpb
aad
setg
ret
push
xor
add
mov
add
inc
xor
iret
ret
sub
cmpsb
cmp
add
fldt
outsl
xchg
call
or
add
rolb
ja
cmpsb
aad
orb
popa
ret
mov
push
jnp
pushf
jp
xlat
mov
test
jo
ret
add
imul
push
sub
adc
jle
mov
in
mov
call
ret
xchg
xor
rcll
in
ja
or
inc
adc
cmpsl
inc
scas
out
pop
or
lret
out
and
aas
mov
pusha
dec
xor
pop
dec
outsb
enter
pusha
ds
pop
js
mov
jb
in
and
jno
mov
adc
add
adc
sbb
sub
dec
sbb
add
xlat
mov
mov
es
insl
sub
mov
sbb
mov
cltd
jle
shrl
mov
lcall
cli
out
add
sub
add
jns
mov
inc
add
loopne
dec
jnp
cs
nop
into
outsb
outsb
je
mov
inc
insb
aaa
or
repnz
clc
push
or
lea
unpcklps
insb
orb
adc
mov
mov
jle
icebp
stc
mov
mov
addr16
jns
jmp
add
jns
in
sub
cmp
xchg
push
mov
and
push
cmp
push
sub
cmpb
aam
enter
pop
and
cmp
ja
xchg
test
push
aaa
mov
jge
xchg
imul
ss
cwtl
xor
cmp
xor
inc
xchg
sbb
pop
or
aam
aaa
loopne
lds
aas
pop
push
sbb
dec
xor
sub
les
pop
sbb
and
out
push
clc
mov
fisttps
jnp
loope
out
je
and
adc
insb
push
sahf
roll
lods
xchg
mov
or
xchg
cmpsl
arpl
pop
jne
mov
scas
in
dec
pop
xchg
out
and
lds
jo
mov
xor
iret
enter
es
pop
jmp
movsl
hlt
inc
in
lcall
cmpsl
pop
gs
push
add
or
test
pop
inc
sbb
nop
das
and
push
out
mov
in
iret
call
cwtl
ds
cmp
add
sbb
lret
rorb
ret
cs
push
subb
sub
or
mov
hlt
roll
mov
push
mov
loop
data16
sbb
inc
pop
in
stos
out
jae
jae
mov
push
push
xor
mov
test
push
inc
stos
jp
mov
in
sub
in
mov
test
xchg
shlb
xchg
dec
cltd
adc
fs
mov
arpl
adc
je
arpl
sub
xchg
dec
push
lods
test
jle
fstps
lds
mov
incl
adc
mov
xchg
adc
cmp
scas
subl
popf
jecxz
jle
cmp
stos
nop
imul
adcl
and
sub
imul
cli
cltd
add
push
adc
jmp
mov
fbld
sti
cld
js
xor
or
out
sti
xor
adc
into
adc
stos
xor
sub
push
loope
jl
sbb
mov
mov
mov
pop
fldl
mov
andl
movsb
xchg
add
aaa
xchg
insb
lahf
xchg
ljmp
rcrl
mov
lods
pop
or
pusha
push
cwtl
xchg
mov
pop
mov
bound
jl
sbb
cmp
lcall
scas
inc
jae
mov
cli
rcrl
mov
push
popf
out
add
mov
sub
subb
pop
and
cwtl
mov
stc
inc
or
add
flds
adc
out
es
jae
loopne
fimuls
je
lahf
rcrl
jg
decb
xchg
add
cwtl
xor
mov
pop
or
xor
clc
or
pop
mov
add
loope
mov
add
lret
pop
js
sbb
cmp
shll
gs
add
cld
loopne
add
in
js
out
mov
jae
or
mov
dec
testb
push
xchg
and
in
mov
ljmp
mov
sahf
outsl
stos
daa
pop
popa
repnz
adc
ficompl
test
add
dec
or
adc
inc
cld
mov
xchg
mov
mov
cmp
outsb
add
ljmp
and
jmp
mov
xor
imul
icebp
dec
rcrw
jle
outsl
xchg
jmp
push
push
cmovge
out
push
mov
mov
outsb
bnd
les
jle
xchg
xchg
faddl
arpl
andl
mov
pop
in
mov
outsl
or
add
imulb
and
xchg
mov
xor
fmul
add
mov
cmc
add
inc
in
push
xorb
ja
jno
jge
clc
jge
pop
mov
stos
popa
dec
jnp
and
cmp
aas
jg
jne
cmp
daa
fisttps
jecxz
mov
addr16
jb
jge
jo
mov
or
aaa
cld
xchg
mov
jne
push
mov
mov
cmpsl
daa
jmp
pushf
sub
mov
xor
pop
sbb
cmp
repnz
cmp
lahf
pop
loop
shll
stos
adc
shrl
push
pop
imul
and
cltd
mov
mov
fldl
cmp
mov
scas
mov
add
cmp
lods
jge
fbstp
jnp
mov
and
cwtl
jecxz
outsb
mov
fst
mov
pop
jbe
dec
push
mov
popa
push
xchg
mov
daa
stos
xchg
dec
imul
subb
lock
dec
pop
ret
dec
cmp
sahf
std
pusha
stc
adc
adc
jmp
and
adcl
jne
in
jg
inc
nop
inc
and
mov
sbb
ljmp
xchg
stos
andb
stos
sti
pop
sbb
inc
aaa
and
inc
jno
lret
jp
push
mov
add
fwait
inc
in
loop
jb
cmp
adc
mov
adc
scas
pop
pop
or
out
das
mov
movsl
stos
sahf
std
imul
cmpsl
das
shlb
xor
adc
cmp
sahf
inc
lahf
or
jne
js
and
stos
shll
shll
lcall
pop
loope
addr16
sbb
stos
icebp
add
or
in
jl
mov
negl
pop
ss
add
mov
push
test
insl
lcall
div
push
jp
fadds
sub
lcall
inc
mov
lret
cwtl
out
div
psubusw
std
dec
inc
lods
frstor
or
sbb
xor
sbb
jl
inc
adc
subl
pop
lods
fnclex
enter
out
daa
inc
or
ja
aaa
inc
or
cmp
adc
push
inc
leave
fs
ds
jnp
and
movsl
repnz
dec
mov
adc
daa
jge
mov
stc
mov
mov
push
pop
and
jo
xchg
add
or
cmp
dec
jle
stc
dec
ret
mov
cmc
stc
cmp
push
mov
ffree
test
sti
pop
aas
les
in
jbe
mov
xor
mov
notb
imul
pop
rcl
push
loope
push
mov
aaa
addr16
jbe
out
cltd
inc
jmp
dec
scas
addr16
sbb
rcll
or
ljmp
xor
jge
mov
outsl
lea
sahf
ljmp
push
ret
lods
jecxz
lea
out
imul
sahf
in
and
cmp
and
fs
push
hlt
sub
cltd
inc
imul
pop
jno
dec
push
xchg
aaa
jle
scas
xchg
repnz
add
imul
js
in
pand
sbb
repnz
push
add
xor
je
and
cmp
or
test
gs
mov
mov
in
add
add
sub
test
fcoml
js
fistps
sbb
add
jno
outsb
les
xchg
fcmove
mov
xchg
xor
cli
lods
inc
mov
sub
sbb
loope
push
mov
cltd
sahf
rcrb
movl
fwait
aaa
movsb
mov
sbb
mov
xor
xchg
mov
pop
movb
pop
mov
add
add
cmp
rorl
stos
jg
dec
in
test
xor
mov
push
lcall
jne
aad
pop
aaa
data16
inc
jae
aam
inc
bound
test
dec
lret
sub
or
push
cs
jl
mov
into
movsb
sub
fcomp
push
repz
neg
mov
in
pop
cmpsl
popf
test
pop
inc
xchg
loope
mov
push
iret
gs
dec
inc
mov
imul
leave
out
sub
dec
dec
and
test
shl
push
pop
outsl
addr16
fimuls
mov
push
or
test
cmp
das
adc
fnstsw
aam
mov
or
test
leave
fdivp
or
outsl
push
test
movsl
lret
xor
mov
xchg
and
xor
testb
sti
test
inc
insb
lahf
xchg
cmove
das
mov
jno
mov
push
dec
fwait
je
or
pop
das
outsb
mov
mov
daa
movsb
xchg
xor
cmc
sti
dec
scas
or
dec
adc
fnstcw
sbb
in
jno
sub
mov
jecxz
cmc
adc
and
test
add
cmp
cs
hlt
insb
ficoml
xchg
data16
fdivrl
dec
mov
adc
mov
xor
cmp
adc
movsl
ficoml
loopne
add
out
sar
frstor
es
das
lods
imul
jecxz
fwait
or
shll
loopne
dec
or
mov
fdivrp
xchg
ret
std
xchg
out
clc
sbb
cmpsl
mov
mov
mov
xor
hlt
add
int3
out
adc
daa
sbb
inc
push
call
add
int3
jo
gs
sub
movsl
dec
out
add
sub
test
movsb
lret
pop
add
stos
and
sbb
ljmp
cmp
adc
jg
ds
ss
pusha
and
popf
pop
fisubrs
popa
sbb
fidivl
adc
xor
jle
xchg
jl
scas
das
xchg
or
dec
scas
mov
rclb
lds
arpl
push
pop
or
lock
inc
sbb
push
pop
mov
pop
xor
mov
adc
jnp
in
push
add
jl
movsl
ret
adc
sub
xor
aaa
push
xchg
sub
stos
mov
test
mov
lds
scas
repnz
jnp
insl
xchg
lods
push
mov
xor
push
das
cs
idivl
mov
cmpsb
sub
cli
sub
sbbl
jo
push
cltd
decl
xor
flds
push
orl
ds
xchg
into
lods
ficoms
xchg
les
sarb
jge
addr16
xchg
dec
lds
data16
fcompl
and
push
mov
push
dec
into
cmp
mov
lahf
cmp
outsb
leave
sub
push
fistps
lret
mov
out
pop
ja
push
jb
jb
mov
bound
mov
bswap
mov
xor
out
lret
push
mov
scas
fnstenv
lahf
pop
sahf
testl
test
xchg
push
mov
imul
jge
loop
ret
jmp
cmp
pop
pushf
mov
push
scas
jne
sbb
subb
dec
sub
std
insb
xchg
push
imul
movsl
aas
mov
in
je
dec
jnp
into
sarl
test
push
push
stos
push
xor
push
fimull
mov
jo
insb
lock
sbb
dec
push
dec
insb
out
push
dec
xor
mov
and
lea
mov
xchg
mov
push
cmovne
mov
nop
fcmovbe
icebp
sahf
push
int3
xchg
mov
mov
inc
ror
loopne
xor
pop
lahf
in
push
xor
mov
call
or
push
push
stos
loop
push
outsl
xchg
sbb
orl
mov
cmpb
jl
push
pop
jns
nop
sbb
stos
mov
call
mov
lcall
dec
cs
xor
xorb
xchg
daa
xchg
enter
xor
js
jb
dec
loope
hlt
dec
xor
add
testb
das
ret
mov
push
and
sbbb
cmp
mov
scas
and
cmc
push
adc
and
out
jo
push
jmp
insb
jg
jp
mov
sbb
add
inc
testl
xor
aad
pop
test
pushf
sbb
or
hlt
sub
push
or
add
lcall
jne
jmp
jb,pt
leave
dec
lret
sub
xor
cmc
aad
iret
lahf
cld
sbb
pop
loope
mov
add
lret
pop
loope
push
push
daa
mov
mov
mov
or
std
mov
xchg
scas
lods
repz
pop
cwtl
fstl
pop
jns
jb
int3
lret
cmpsl
sti
aaa
mov
add
or
cltd
ja
jno
and
xor
sub
cmc
pop
fwait
das
pop
dec
in
sbb
test
push
mov
gs
imul
loopne
mov
add
rorl
int3
enter
icebp
jb
iret
mov
lods
or
mov
mov
subb
leave
push
fcompl
cmpsl
xchg
loop
add
jbe
fstp
ss
sub
sbbl
shlb
mov
out
and
inc
sub
xchg
in
mov
add
je
sub
in
je
arpl
or
dec
pop
arpl
int3
vmovq
cs
fstps
mov
outsb
ficomps
jbe
mov
adc
leave
push
jmp
jl
or
and
negl
gs
or
icebp
push
in
and
movsl
cmp
mov
test
in
push
jbe
arpl
jae
test
and
mov
push
lret
push
mov
push
xlat
in
arpl
and
adc
sub
lods
mov
push
add
xchg
rcl
inc
inc
push
ss
sub
jg
idiv
lcall
arpl
pushw
outsb
movsl
add
shlb
lret
test
lret
rcrl
das
aad
adc
jmp
sub
ljmp
test
add
lods
lock
mov
insl
cmc
sub
fnstcw
mov
mov
lods
add
lret
iret
addr16
cmp
dec
cltd
std
arpl
push
shrl
test
icebp
das
sub
mov
mov
dec
xchg
gs
std
mov
jae
mov
lods
cmc
sub
loopne
pop
aam
push
repnz
frstor
xor
js
mov
fucomip
pop
fs
mov
in
fs
or
inc
push
movsb
or
push
popf
dec
jo
scas
sbb
and
in
movsb
pop
ss
clc
mov
sbb
lods
in
lcall
rorb
cmpsl
lcall
jmp
add
outsb
stc
jns
lods
movsb
cmp
cmp
add
aaa
push
mov
add
adc
push
sbb
call
ljmp
cli
add
lods
rorl
in
dec
xorl
cld
pop
adc
dec
in
and
sbb
cltd
lcall
nopl
shlb
popf
inc
pop
call
dec
xchg
xchg
out
pop
sbb
xchg
pop
into
ficoml
rorb
inc
adc
jb
inc
sub
mov
sbb
jmp
jo
pop
add
push
push
inc
aam
xor
imul
in
ljmp
mov
jmp
sub
scas
xor
or
imul
xchg
pushw
les
mov
xchg
adc
push
int
dec
jne
xchg
adc
sbb
adc
cmpsl
lods
cmp
insl
hlt
mov
popa
push
push
lret
adc
xor
data16
loope
inc
push
inc
fstpt
pop
aas
xor
sub
ja
push
sti
fistps
adc
jae
mov
cmp
repz
sbb
dec
cmc
pushf
addl
add
xchg
cmp
and
flds
ds
movsb
pop
mov
ds
jl
adc
mov
hlt
pop
pop
fsubrl
mov
mov
mov
inc
sbb
lock
clc
imul
stos
push
mov
jecxz
loopne
in
cs
ret
xor
add
add
lods
inc
or
sub
dec
or
jno
pop
fnstsw
lds
jns
pop
test
push
leave
stc
jno
mov
lds
shrb
or
pop
dec
pop
aad
jecxz
negb
push
in
mov
mov
lods
push
jp
adcb
cmc
js
out
pop
and
or
xor
cmpsl
jae
lds
pop
push
shlb
sub
shll
cld
lret
popf
ja
dec
clc
mov
sbb
insl
sbb
add
sbb
sbb
adc
sbb
pop
and
bound
mov
cmpl
js
and
cmp
jns
rolb
sub
leave
mov
cmpsb
add
mov
imull
cmpsb
add
push
jecxz
js
mov
add
and
cli
pop
sub
and
or
and
fstpl
xchg
or
pop
pop
jmp
data16
out
or
out
sbb
je
dec
mov
mov
jns
pop
push
addl
mov
or
or
pop
jb
out
nop
mov
popf
xor
ljmp
scas
adc
push
or
testb
push
cmp
lods
sub
add
mov
sub
sbb
push
mov
mov
stos
xchg
pushf
xchg
xor
test
xchg
dec
int
lcall
lahf
xchg
inc
dec
sbb
sbb
xchg
cld
cmp
adc
lret
jne
pop
mov
cld
sub
xchg
int3
xchg
push
in
imul
shrl
aaa
mov
push
inc
cld
popf
cwtl
xchg
sbb
test
faddl
adc
push
clc
sbb
mov
xor
sahf
repz
cmp
pop
fwait
daa
mov
cmp
rolb
les
push
mov
aaa
cmp
jo
cmc
xchg
mov
sahf
cs
push
mov
push
or
pusha
add
mov
out
cltd
push
hlt
mov
pop
cs
insl
sub
mov
mov
adc
add
mov
test
call
lock
test
jbe
popa
outsl
lea
ret
inc
shll
aam
ds
cmc
sbb
hlt
filds
out
sbb
jmp
cmpl
mulps
and
dec
cltd
inc
scas
pop
or
ljmp
lock
mov
add
mov
and
fsubs
dec
repnz
cmp
out
mov
push
stc
jns
hlt
sbb
adc
push
push
xor
hlt
jg
push
cmp
cmp
js
sbb
lds
inc
mov
mov
cmp
xor
fwait
add
int3
mov
push
stc
sarb
fisttpl
fwait
mov
mov
cmpsl
out
sbb
push
xor
mov
icebp
cs
jno
repnz
inc
lret
js
sbb
push
xor
dec
outsb
cmp
andb
push
push
mov
frstor
sbb
push
xchg
test
mov
xchg
imul
leave
or
jg
xchg
xchg
cmpb
pop
pop
or
add
sbb
fwait
pusha
inc
xchg
data16
mov
adcl
jae
sbb
xchg
cmpsl
cmp
lret
pushf
movsb
aam
cld
ret
xchg
pop
cmpb
ljmp
movsl
mov
push
jle
pop
bound
jb
in
out
test
arpl
imul
lea
jg
add
mov
jne
enter
lock
inc
std
sub
push
jo
pushf
dec
mov
test
cwtl
mul
xchg
mov
jne
xchg
push
fisttpl
sti
mov
sbb
jp
or
aad
dec
xchg
add
daa
cs
int3
inc
lret
mov
xchg
addr16
mov
push
ja
imul
andl
push
stos
sbb
pop
xchg
jg
or
xor
and
sub
add
mov
out
mov
ja
scas
ret
mov
dec
addr16
mov
push
pop
aad
jo
and
inc
mov
pop
ds
aas
add
inc
cmp
push
dec
insl
cmp
rcrb
mov
imulb
sub
sub
mov
cltd
outsl
out
cmp
outsb
js
enter
mov
pop
mov
lods
mov
xchg
xor
jno
jge
div
mov
sub
jmp
xor
sbb
xchg
lret
ret
adc
cmp
mov
orl
adc
mov
adc
sbb
adc
add
add
push
cmp
and
cmp
addr16
jg
lock
ret
or
lahf
sub
in
nop
push
out
adc
mov
sbb
andb
test
movsl
pop
lcall
mov
icebp
lds
mov
loop
push
and
fistl
aam
cmpsb
out
mov
jae
cmp
js
ret
les
and
loopne
loope
push
push
imul
xchg
cmc
dec
sbb
das
imul
push
addr16
cmpsb
cmpsl
inc
and
into
mov
sub
cmpsl
stc
dec
cs
push
inc
mov
and
imul
rcl
test
pop
lods
adc
mov
lock
inc
fwait
sahf
ss
movsb
pop
xor
inc
iret
insb
enter
imul
adc
testb
pop
cmpl
dec
in
pop
inc
mov
sbb
lret
call
test
pslld
sub
aad
loop
sahf
mov
scas
stc
adc
mov
mov
jge
inc
push
jo
mov
and
cmp
inc
mov
jge
ds
xchg
inc
ss
pop
sub
sbb
adc
mov
std
dec
cld
jmp
jg
call
test
test
std
dec
ja
pop
add
lods
fcmovbe
lret
sub
scas
xlat
or
mov
and
fsts
movsb
andb
push
sub
or
push
pushf
pusha
popa
in
pop
push
xchg
fisubs
pop
jo
aas
addr16
adc
loopne
enter
add
cmp
xor
dec
outsl
stos
in
mov
adc
and
dec
imul
mov
mov
mov
out
js
insb
pop
sbb
lds
jno
je
orl
mov
sub
test
ret
jmp
xchg
loope
cs
jne
divb
jae
aaa
insl
jl
sbb
cs
sahf
or
fisttpll
lahf
lods
xchg
xor
cmp
pusha
sbb
and
in
popa
ror
call
fidivrs
out
push
adc
inc
adc
adc
cmp
loop
rorl
lds
add
xchg
push
and
add
in
mov
dec
icebp
push
lds
in
xchg
mov
test
jno
or
jne
cmpsl
cmpsl
movsl
inc
ror
lds
push
into
fcomip
movsb
jl
xchg
xor
dec
xchg
cmpsb
call
sub
push
fwait
dec
inc
out
out
sub
jo
xor
sub
xor
aas
push
jp
imul
sahf
or
lods
int3
sub
mov
or
sbb
inc
pop
fs
cli
sub
enter
dec
addr16
sbb
and
adc
scas
ret
out
sub
movsl
mov
stc
mov
movsl
aaa
int3
sbb
mov
outsl
in
pushf
pop
fimull
adc
jg
icebp
cmp
xchg
xor
idivb
xchg
or
sbb
mov
iret
insl
pop
push
addr16
sbb
jne
fnop
and
adc
out
mov
jbe
xchg
decb
inc
in
mov
insb
adc
mov
push
lret
xor
fsubl
mov
mov
imul
push
out
push
sub
loopne
ret
adc
in
aam
cmp
test
pop
mov
pop
xor
arpl
shrb
xchg
outsl
cmp
jno
mov
fs
enter
xor
insb
jecxz
movsb
fstps
adc
pop
das
pop
jns
sbb
into
cmp
lahf
les
xchg
and
loop
aad
jge
xchg
pushf
fdivl
loop
sbb
ficompl
cmp
push
inc
out
push
int3
xchg
aas
push
push
add
mov
repnz
pop
mov
adc
push
fidivrl
inc
push
idivl
jae
movb
sub
sbb
push
or
cmpl
push
xor
add
xor
lods
mov
sub
cmp
xor
es
jmp
out
mov
aam
dec
fistpl
or
mov
adcl
js
dec
in
mov
or
add
fs
nop
lods
push
scas
sahf
sbb
adc
mov
add
mov
pop
outsb
mov
jae
clc
std
rcl
jg
adc
std
inc
mov
dec
mov
inc
jnp
pop
mov
sbb
and
jae
movzwl
or
sub
fistpll
or
xchg
mov
mov
mull
test
cmc
ds
or
sbb
pop
data16
jecxz
rorb
jnp
dec
inc
mov
jl
mov
jbe
loope
ss
cltd
mov
fidivrl
mov
test
mov
lcall
xorl
mov
ret
cmp
xchg
xchg
xor
dec
sbb
into
sub
lret
jnp
fmuls
call
mull
outsb
ficompl
hlt
jmp
ss
push
div
lcall
je
cmpsb
pop
xor
shl
xchg
inc
or
push
mov
mov
rorl
loope
sbb
mov
dec
mov
ljmp
dec
dec
sbb
fs
stos
fwait
ja
pop
je
es
fisubrl
aaa
lea
adc
xor
outsl
pop
sub
scas
lahf
movsb
mov
popf
add
stos
mov
pop
stc
pop
adc
mov
sub
add
out
sbb
push
repz
popf
mov
adc
andl
ret
dec
in
std
mov
adc
pushf
cld
out
inc
popa
scas
mov
or
adc
dec
cmc
pop
mov
sub
sbb
mov
push
test
gs
gs
fisubrl
mov
dec
test
movsl
movl
in
int
mov
daa
mov
xor
dec
jl
ds
mov
jle
mov
dec
lret
dec
aam
addl
repz
or
aas
incl
lahf
cmpsb
dec
push
pop
sub
jns
or
repz
je
pop
pop
sub
mov
cltd
push
std
ljmp
sbb
and
mov
fsubl
xchg
push
pop
push
outsl
movsl
adc
sbb
test
xor
rcl
cmp
mov
enter
rcll
cmp
ljmp
es
inc
test
cmp
mov
mov
repz
test
jle
push
cmpsb
in
stos
pop
int3
repz
sbb
xlat
lods
sub
lods
ret
mov
cmp
test
sub
insb
pusha
inc
test
cmpsl
xchg
les
dec
clc
lcall
ret
cmp
mov
mov
lret
pop
mov
add
mov
inc
xchg
xchg
ja
test
xorb
cmpsl
bound
or
inc
int3
rclb
lret
std
inc
popa
aad
mov
scas
adc
test
sti
and
jle
enter
inc
pop
mov
fsub
jnp
shll
in
out
sbb
outsb
xor
fsub
outsl
movsb
ret
dec
jb
inc
popa
hlt
popf
gs
push
xchg
jg
mov
fadds
daa
addr16
inc
sub
adc
xchg
rcll
stc
add
fimull
mov
push
fbstp
scas
cltd
and
push
stos
xor
ljmp
nop
mov
push
les
jae
push
aad
add
jb
outsb
sbb
pop
mull
adc
movsl
and
cmp
sub
mov
push
pop
imul
mov
aam
cmp
inc
lock
mov
mov
mov
mov
pop
xchg
jno
aaa
cltd
push
push
or
icebp
mov
jecxz
addr16
frstor
mov
dec
jecxz
mov
in
inc
test
or
in
and
fadds
pop
and
and
fwait
jecxz
jle
dec
iret
je
and
push
mov
jne
into
decb
cwtl
into
sub
inc
mov
decb
xor
stc
push
rol
adc
and
xor
dec
pop
push
int
push
add
outsl
loopne
push
adc
xor
xor
dec
mov
xor
jae
daa
ja
mov
xor
and
xor
pop
add
fadds
sbb
mov
pusha
movsl
cmp
sub
add
repnz
enter
es
cld
inc
pop
push
pop
cmpsb
jl
test
mov
mov
dec
enter
xor
xorb
jecxz
nop
fwait
xlat
add
in
ret
arpl
adc
cmp
mov
mov
mov
pop
cmp
push
jge
pop
aas
daa
lcall
and
mov
mov
test
ljmp
mov
and
mov
outsb
or
mov
hlt
jae
ficomps
push
xchg
and
cmpsb
mov
jae
mov
pop
dec
xchg
xchg
push
mov
data16
pusha
aas
xchg
shll
or
stos
cmp
rorl
cmp
mov
cltd
push
icebp
pop
jl
sbbb
jno
jle
sub
iret
sub
and
pop
or
fbstp
jp
xchg
mov
rcll
dec
ret
mov
fsubrl
pop
mov
movsl
mov
fldcw
mov
inc
xchg
sbb
loop
orb
xor
addr16
lcall
xchg
mov
cltd
imul
pop
pop
pop
pop
inc
cmp
mov
sub
cmp
cmp
cmp
pop
das
fcmove
mov
insl
sbb
jg
inc
jnp
xor
imul
xorl
lods
sbb
out
xchg
out
cltd
ljmp
jecxz
test
movsl
inc
sbb
mov
mov
sbb
es
popf
sbb
adc
or
or
add
mov
xchg
repnz
xchg
inc
test
ss
fimull
mov
mov
mov
stos
test
xchg
xor
pop
mov
mov
mov
test
outsb
pop
outsb
nop
sbb
je
leave
jge
push
push
stc
sahf
pop
outsl
and
sub
fnsave
pop
fidivrs
lret
dec
sbb
adc
lret
daa
jbe
cs
push
incl
jmp
insb
leave
push
loope
subl
mov
movsl
jb
ds
aad
adc
and
xchg
lds
scas
add
testl
adc
push
jg
repnz
int
ret
or
inc
and
and
pop
mov
pop
dec
shlb
lret
mov
xor
jo
pop
jecxz
xor
mov
inc
scas
clc
pop
cmp
add
sbb
mov
pusha
sub
jb
sub
push
leave
inc
adc
addr16
fwait
pusha
push
cs
sbb
insb
cmp
inc
rolb
inc
add
push
mov
mov
bound
lcall
add
fisttps
xchg
sbb
push
push
add
xor
div
stos
jp
das
cmp
pop
out
loop
scas
xor
int
aam
div
cmp
cmc
jg
and
sarl
adc
dec
movsb
lods
sub
jno
hlt
das
push
jno
setne
mov
and
push
xchg
pop
out
add
xor
push
daa
ss
add
lahf
mov
int3
jge
std
mov
xchg
adc
test
xor
cli
adc
xchg
test
xor
adc
roll
inc
and
mov
jae
imul
outsl
sub
pushf
sbb
pop
inc
xchg
xchg
pop
push
out
je
jnp
stos
leave
cwtl
fmull
aas
jbe
in
fwait
adc
jmp
push
rorl
in
inc
addl
outsl
out
imul
scas
dec
and
sti
pop
dec
cltd
shlb
rcrl
shll
mov
push
or
pop
negb
mov
and
sub
sub
mov
pop
lods
push
and
add
in
jnp
lahf
push
push
mov
jb
scas
aad
call
push
and
inc
mov
and
adc
jp
lds
iret
mov
sti
pop
in
lock
ss
xlat
sbb
lret
dec
jp
aas
popf
sub
pop
xchg
ds
loope
inc
cmp
icebp
push
and
mov
std
jbe
dec
arpl
inc
dec
inc
xor
test
jg
nop
rolb
hlt
mov
jns
or
fstpl
pop
test
mov
cmp
xchg
loopne
outsl
repz
dec
or
hlt
jmp
popa
and
pop
or
pop
adc
push
add
mov
dec
shll
ljmp
daa
pop
or
in
sub
or
scas
mov
cmp
push
sbb
lcall
cwtl
mov
xor
arpl
dec
pop
mov
dec
xor
call
sub
mov
adcl
call
mov
xor
mov
mov
ds
fisubrl
xor
mov
mov
cmpsb
clc
and
xor
or
loopne
cmp
fnstsw
insb
icebp
push
daa
out
cmpsb
lret
loopne
xor
rorl
cltd
mov
adc
hlt
sar
adcb
sarl
aas
out
cmp
leave
push
jmp
xor
mov
dec
sub
xor
lods
add
mov
sbb
loope
xchg
mov
cld
lret
push
mov
pop
movl
hlt
imul
ret
std
add
nop
inc
out
xchg
sub
cs
insl
js
mov
xor
inc
jle
jle
or
mov
dec
ja
fistpll
mov
mov
mov
mov
push
adc
loope
daa
int3
fldenv
push
lcall
mov
in
dec
insb
mov
cmp
dec
push
rcl
adc
dec
jo
popa
icebp
mov
xor
and
lods
mov
and
ljmp
fists
addl
dec
or
out
pop
mov
out
fcom
dec
inc
dec
push
cwtl
ja
jae
repz
enter
jb
call
shrl
push
dec
sbb
pop
unpckhps
xor
jecxz
pop
cmpsb
call
cmp
loope
cmp
addr16
loopne
dec
in
push
add
test
movsb
xor
inc
push
add
jge
out
dec
jp
adc
daa
sub
jmp
jl
dec
jle
cwtl
test
test
jae
les
push
int3
push
daa
and
sub
or
and
push
push
fldcw
cmp
pop
cmp
outsb
push
std
dec
mov
mov
push
out
shl
loope
stc
dec
dec
sub
aas
aad
and
add
dec
cltd
fiadds
movsb
mov
inc
or
int
sbb
or
pop
in
lock
rcrb
cmp
fstps
mov
clc
aas
xor
mov
pop
stos
cmp
push
ljmp
or
cmp
dec
hlt
les
push
jbe
repnz
lds
in
cmp
rorb
adc
cli
ret
cmp
pop
bound
imul
rcll
add
aaa
jb
sbb
fincstp
dec
or
andb
lret
mov
shlb
jo
xchg
lock
movsl
jno
sub
vunpckhpd
leave
push
outsl
rclb
mov
ss
inc
pop
cmp
test
mov
stos
ficoms
dec
pop
add
adc
insl
mov
outsl
xor
xchg
test
std
dec
movsl
xor
pushf
jmp
dec
adc
lret
test
stos
or
jmp
sub
out
in
in
in
dec
push
sahf
js
mov
xchg
push
mov
rcrl
lret
cmpsb
mov
data16
lret
movsl
xchg
add
cld
bnd
dec
cmp
push
cmpb
pop
jmp
xor
add
inc
push
sub
pop
mov
add
lahf
mov
sti
sbb
fbstp
std
and
mov
and
sbb
or
xchg
sbb
shlb
xchg
lods
xchg
lea
or
shrl
jae
dec
cmp
adc
mov
ljmp
dec
mov
addr16
aas
in
scas
ret
cmc
sahf
imul
inc
rcl
addb
ja
rcrb
pop
add
ret
pop
inc
pop
push
pop
sub
into
jbe
mov
and
mov
dec
out
loope
push
or
pop
sub
lock
jns
mov
inc
nop
imul
xor
rcll
mov
mov
or
inc
xchg
iret
mov
pop
adc
dec
sti
fcomip
enter
mov
sub
inc
cltd
imul
push
jecxz
push
dec
sbb
or
mov
inc
std
push
adc
orl
sbb
push
int
lret
jae
mov
sbb
or
clc
mov
pop
stos
push
inc
dec
push
sub
add
mov
xchg
repnz
scas
leave
mulb
gs
mov
jl
std
xlat
loopne
dec
cmpsl
pop
and
xchg
cmp
popf
aas
scas
mov
cmpsl
sarl
shll
add
fisttpl
popf
scas
movsl
mov
sub
rcl
movsl
jb
insb
xchg
fxtract
sti
xchg
sub
insb
xchg
ljmp
test
aad
leave
cld
cmpsb
cmc
orb
pop
sahf
mov
push
push
icebp
inc
mov
mov
shl
jl
xor
sub
mov
push
loope
xor
insl
cltd
mov
sbb
out
aad
xor
cmpsl
lret
push
xchg
xor
push
adc
stc
sbb
sbb
loop
rorl
mov
sti
xchg
mov
decb
popf
loop
stc
xchg
insl
ror
or
sbb
jmp
stos
pop
mov
outsl
outsb
mov
ds
cld
push
jmp
inc
clc
sub
fnstenv
pop
sub
pop
pop
movsl
mov
loopne
aas
jae
leave
sbb
loope
inc
mov
pop
push
cs
insl
psubsw
nop
push
xchg
sub
cmpsb
stos
das
push
add
loopne
dec
jns
or
jns
repnz
add
mov
sub
scas
test
ds
cmpsb
test
mov
mov
int3
fidivrl
jle
push
std
jge
jecxz
fdivs
or
shrb
cli
lods
dec
hlt
push
jbe
xor
xorl
xor
mov
add
pushl
push
jp
xchg
bound
mov
outsb
lcall
hlt
inc
sti
mov
pop
int
and
or
shll
lods
imul
stc
int3
push
mov
or
cmp
sub
mov
cmpb
or
dec
xor
mov
mov
popa
mov
ret
mov
and
fwait
std
es
adc
push
inc
or
and
mov
arpl
sbb
pushw
jae
cmp
adc
ds
js
sub
push
lahf
sahf
push
je
dec
mov
xchg
add
push
adc
outsl
cmp
arpl
add
adcl
mov
cmp
mov
jg
mov
imull
pop
iret
and
iret
cli
leave
das
sub
sbb
jo
lret
lods
mov
fildl
push
inc
mov
fcmovbe
scas
incl
dec
inc
imul
xchg
mov
loop
inc
or
cmc
adc
adc
das
out
cmp
push
fiaddl
inc
pop
mov
dec
mov
sub
cmp
dec
in
add
std
popa
sarb
or
or
int3
sub
push
jl
or
lds
add
mulb
in
mov
jbe
mov
or
mov
push
or
push
mov
jnp
dec
mov
sbb
and
pushl
pop
mov
mov
cmp
pop
mov
jge
iret
inc
jecxz
mov
shll
sub
ds
inc
push
add
push
inc
out
adc
cmpsl
pop
hlt
mov
daa
mov
fwait
arpl
popf
sbbb
inc
nop
pop
xlat
int
xchg
pop
inc
mov
pop
lret
or
lahf
push
cmpsb
scas
jne
xchg
mov
or
push
in
pop
lret
pop
add
lods
push
in
mov
mov
dec
fs
xor
cld
ret
in
push
dec
lret
sbbb
cmc
cmp
movsl
cwtl
out
sub
addl
or
nop
neg
mov
lds
clc
not
add
ds
push
bound
or
lock
sbb
outsl
sub
call
aas
divb
test
xlat
cmp
ret
iret
jl
inc
out
mov
mov
addb
sbb
pop
push
mov
pop
xchg
ja
arpl
adc
dec
jne
and
or
xchg
je
push
mov
jo
pop
mov
push
ror
ljmp
fwait
xor
inc
sti
icebp
push
add
jne
scas
add
adc
aaa
jle
nop
cs
fwait
insl
mov
aas
pushf
pushf
and
movsb
xor
or
inc
xchg
in
cmp
dec
clc
lods
pop
cmpsb
fnstcw
ja
subl
cmpsb
push
je
sub
clc
push
call
xchg
jno
insl
or
outsb
push
mov
mov
jmp
pusha
jne
jl
cs
aaa
in
dec
xchg
stos
adc
xchg
add
jne
je
pop
rorl
cmp
cmp
push
mull
std
mov
adc
clc
les
mov
cmp
bound
mov
loopne
dec
shll
call
and
cmp
imul
daa
popa
add
cmp
mov
sarb
fsubs
inc
pop
xchg
mov
dec
dec
lcall
dec
mov
in
xor
fstl
pop
adc
or
and
xchg
push
push
xchg
ss
leave
xchg
cmpsl
ret
jbe
loop
mov
stos
add
xor
repnz
sbb
and
mov
sbb
es
fcomps
xchg
cmp
mov
sub
xchg
fiadds
adcb
mov
lret
sbb
dec
lods
fs
iret
jo
sti
loopne
movsb
mov
cmp
test
loope
call
jae
out
mov
out
sub
ja
sti
adc
sbbl
in
pushf
pop
out
jge
mov
test
enter
test
mov
add
outsb
mov
cmpsb
adc
jl
imul
int
push
imul
cmc
fs
sarl
jae
lcall
and
mov
sub
dec
push
outsb
push
cld
xor
mov
xor
xchg
addb
sub
ret
jp
push
scas
jb
out
aaa
add
in
ss
mov
dec
sub
add
test
adc
stos
pop
std
nop
mov
hlt
ret
adc
fs
xor
cmp
add
sbb
rcrb
xchg
rcrl
lods
jg
mov
fistpll
sbb
add
addr16
lret
mov
pop
inc
push
push
cmp
fmull
xlat
in
push
ds
mov
fwait
dec
inc
lret
add
cmp
dec
or
les
loop
cmp
fimull
into
loopne
cmp
mov
cmp
scas
loop,pn
add
xor
lods
repz
add
dec
pushf
jmp
jecxz
out
rclb
je
fldenv
ret
mov
jne
push
mov
mov
xor
push
outsl
add
imul
sbb
out
rcrb
stos
lods
idivl
and
pop
cli
pushl
mov
loope
mov
mov
and
lods
aad
pop
outsl
ret
cmp
in
inc
jmp
je
inc
xor
pop
pop
pop
int
test
pusha
push
out
idivl
cmc
cmp
mov
inc
cmp
xlat
dec
sbb
xor
dec
xchg
iret
sbb
add
mov
mov
xchg
pushf
ret
add
mov
loop
cmp
loope
sub
divb
das
mov
sbb
cmp
aad
lcall
fmull
fs
cmp
aam
repnz
inc
sbb
ljmp
jg
std
test
mov
inc
inc
xchg
pop
int
or
lods
test
and
int
xlat
xchg
jbe
cmp
xchg
rorb
jb
push
and
push
cmp
arpl
nop
fiaddl
lods
sbb
inc
dec
mov
scas
fisttpll
sbb
xor
je
or
xchg
mov
cmp
mov
and
adc
fucomp
push
jg
imul
sub
daa
cmpsl
outsl
insb
shrb
das
mov
cmp
in
adc
shl
mov
pop
addr16
in
cwtl
cmpsb
in
cmpsl
mov
aad
cld
enter
test
insb
mov
inc
mov
stos
xchg
mov
mov
loope
cwtl
aad
sbb
arpl
sub
push
lcall
fnsave
xchg
cwtl
es
stos
push
imul
out
adc
push
mov
inc
imul
dec
test
shl
outsb
inc
mov
aam
pop
jecxz
andb
cmp
add
sti
sahf
mov
aad
mov
push
dec
rcrb
stos
into
test
outsb
cld
leave
dec
ljmp
mov
rcrl
mov
and
mov
dec
sub
inc
fdecstp
ss
es
sub
cld
mov
and
xor
pop
shl
jmp
add
pop
enter
xor
in
jbe
stos
fwait
pop
xor
sbbb
xchg
xor
mov
lret
xlat
cwtl
mov
mov
fidivs
xchg
lcall
popf
shlb
jl
fstl
ljmp
dec
xchg
add
push
sub
mov
in
inc
aas
pop
push
lds
loope
jmp
cmp
repnz
std
in
jne
sar
fstl
add
xor
lock
test
mov
fs
rcrb
repnz
mov
pop
xchg
hlt
and
xchg
outsb
mov
push
mov
dec
out
fnstcw
mov
addr16
mov
and
jecxz
hlt
adc
push
adc
sbb
push
out
mov
lds
outsb
xchg
fdivrl
test
pop
xchg
and
xchg
cld
xchg
push
popf
add
idivb
xchg
cmp
cmp
adc
pop
insb
push
sbb
xor
aas
inc
pop
ret
add
mov
les
push
xor
mov
es
mov
mov
bound
jne
sbb
adc
xor
nop
bound
push
int3
jecxz
sbb
addr16
data16
mov
dec
imul
pop
idivb
jl
jo
xor
pop
cmp
mov
es
ja
ret
pop
sbb
mov
adc
dec
scas
jge
dec
clc
int3
adcl
icebp
aad
inc
lret
mov
push
jmp
lahf
mov
sbb
jge
jae
lret
mov
pusha
xchg
loop
sub
pop
mov
in
leave
xor
mov
je
js
jmp
cmp
rcr
mov
lds
mov
addr16
or
fidivrs
addr16
lock
fldl
mov
cs
dec
pop
dec
xchg
mov
push
mov
push
ljmp
sub
xchg
stc
ret
inc
ss
xchg
xor
push
jg
mov
loopne
aad
mov
pop
imul
cmpsl
insb
mov
pusha
out
cmpl
les
popf
into
imulb
jno
fcmovb
add
clc
xor
aam
fistpll
mov
lock
ja
xchg
push
aaa
adc
lret
and
cmp
pop
cmpsb
outsb
inc
pop
pop
lods
xchg
sbb
adc
xor
push
lahf
or
int
dec
or
and
pop
fwait
xor
jmp
mov
lahf
out
sti
stos
adc
cmpsl
push
mov
mov
dec
xchg
mov
xchg
xchg
pop
dec
mov
inc
or
ret
out
int3
lods
outsl
push
sti
or
addl
jno
cli
inc
mov
ret
pop
jnp
shlb
inc
ret
push
insl
sub
int3
push
out
mov
int3
fdivr
adc
xlat
stos
cmpsb
inc
fwait
into
repz
mov
idivb
scas
add
adcl
fcomp
and
pop
or
leave
mov
out
sbb
in
repz
hlt
data16
xor
dec
mov
mov
out
int3
test
out
jl
das
push
gs
xchg
cwtl
call
xor
sbb
fnstenv
inc
cs
jge
ds
scas
aas
rorl
ficoml
push
jae
jnp
sbb
scas
bound
daa
ret
mov
xchg
inc
mov
or
xchg
mov
popf
movsl
add
jp
jle
fmull
xor
ret
fcoml
dec
popa
cmp
fs
jbe
fldcw
psubb
lods
push
aas
lahf
cmpsl
not
in
push
lods
movsb
mov
out
add
call
testb
fs
dec
adc
mov
sbb
std
decl
sahf
push
gs
xlat
in
test
repnz
pop
out
adc
adc
lods
sbb
or
scas
loop
mov
sub
repnz
inc
dec
nop
sahf
push
push
xor
les
fmuls
and
sarl
popf
pop
add
ret
push
addr16
loopne
test
popa
lods
inc
mov
jl
cmc
sub
cmp
rolb
addr16
cmc
push
ss
mov
sub
std
push
dec
nop
fwait
stos
push
mov
and
xor
nop
mov
jmp
pop
dec
mov
jnp
mov
xchg
insl
das
cmpsb
adc
inc
push
stc
mov
mov
movsl
stc
das
arpl
inc
mov
fdivs
push
ficoml
mul
push
cli
scas
hlt
jmp
pop
aaa
ficoms
pop
in
or
lock
dec
xor
test
outsb
mov
dec
leave
sbb
sbb
sbb
rcl
adc
std
xchg
mov
mov
movsl
xlat
jmp
and
mov
or
cmp
push
push
testl
cmp
clc
push
insl
addb
pop
pop
add
sbbb
or
stc
jl
or
jno
add
out
rol
mov
jb
fadd
cmpsb
adc
jno
pusha
sub
pushf
outsl
pop
sbb
push
inc
inc
call
sub
and
inc
pop
test
hlt
in
and
pop
sub
pop
add
xor
push
fiaddl
xchg
je
jb
mov
adc
aad
cmp
dec
jb
xchg
sarl
sub
mulb
rcrb
adc
repz
sbb
mov
pop
sbb
addb
push
mov
sbbb
and
lcall
xchg
jno
xor
scas
jb
pop
add
dec
xor
sbb
in
mov
or
inc
jecxz
dec
dec
mov
inc
and
aas
dec
or
icebp
jl
add
pop
push
cld
xor
xchg
jnp
data16
rclb
xchg
push
fnstenv
mov
jns
seto
sbb
push
cmc
cmpsl
nop
add
dec
orl
pop
cmpsl
lret
pop
sti
loopne
push
fistl
add
dec
repnz
in
imul
je
pop
add
sub
sub
in
and
mov
xchg
or
push
xor
fstps
es
pop
pushf
sbb
push
sbb
cs
cwtl
insb
rclb
cmpsl
jnp
repz
and
repnz
xchg
sub
movsb
dec
sbb
cli
notb
out
xor
push
mov
xlat
sbb
mov
aam
add
ss
mov
imul
fwait
addl
popf
add
push
mov
std
jmp
scas
or
inc
xchg
loope
jmp
sbb
iret
sbb
cmc
xor
dec
or
shll
dec
add
fistpll
xlat
lock
arpl
fstpt
imul
ja
call
xchg
ficoml
lahf
add
js
jno
cmp
test
pop
lahf
popf
test
inc
mov
jp
dec
rcrb
sbb
xor
inc
adc
push
jp
popa
cmp
jno
loopne
inc
push
jne
xchg
inc
psubsb
leave
mov
gs
cmp
or
out
or
dec
mov
lock
aad
sti
xlat
ss
jecxz
mov
in
jge
fisubl
in
mov
out
xchg
lock
fs
fisubs
mov
insl
jae
push
inc
mov
js,pn
jo
push
push
out
out
aaa
pop
fs
addr16
outsb
add
jl
sbb
push
add
xchg
leave
xor
xor
push
addr16
flds
outsb
push
and
add
pop
in
xor
add
xor
popa
dec
pop
repz
subl
lea
call
mov
pop
ljmp
dec
dec
movsb
sti
inc
xor
or
lds
sti
mov
imul
arpl
mov
dec
mov
pop
xor
cwtl
xlat
ds
xchg
inc
dec
in
aas
pop
int
scas
lock
xchg
js
loop
xor
repnz
lret
daa
xchg
rol
add
int
in
push
and
lds
adc
inc
jbe
scas
sti
mov
and
push
xchg
fistl
std
imul
cmpsb
ret
rol
out
jmp
aam
ja
and
rclb
push
or
lea
xchg
mov
pop
in
sbb
or
fmul
jo
cmp
jg
push
scas
jns
sub
lea
or
enter
adc
sbb
insl
imul
add
mov
loopne
mov
pop
mov
lahf
sbb
xor
fildl
fmull
pop
sub
fisubrl
add
insb
pop
pop
jbe
test
mov
clc
stos
sbb
xchg
xchg
into
xchg
es
decb
inc
adc
stc
jo
lods
xor
xlat
dec
jecxz
scas
push
jmp
aam
push
sub
and
imul
push
lcall
test
addr16
jl
inc
sahf
push
inc
pop
xchg
pop
mov
call
add
andb
lret
jo
push
cmp
out
xchg
xchg
push
pop
out
pushl
jp
mov
cltd
jb
daa
jg
daa
push
fnstenv
or
es
in
cmp
test
pop
sarl
ds
pop
jbe
lods
pop
pop
cld
push
cmc
xchg
int
cmp
rcrb
lods
push
cwtl
mov
sub
out
mov
push
sti
push
mov
add
mov
sub
stos
cvttps2pi
pop
cmp
into
or
pusha
out
pop
or
into
aaa
pushf
fnstcw
lret
sub
pushl
loop
pop
cmp
or
xchg
stc
lret
adc
iret
and
push
repz
ds
call
mov
dec
pop
mov
scas
jmp
push
xchg
aad
lods
cwtl
xchg
mov
out
stos
shll
loop
out
push
dec
jbe
cmpsl
fwait
sbb
cwtl
cmpsb
popf
clc
stos
xchg
rclb
xchg
es
pop
pushf
movsb
or
inc
and
dec
pop
jl
dec
cltd
scas
push
jge
cmp
iret
rcl
cli
notl
daa
leave
pop
bound
cmp
js
clc
ljmp
cmp
xchg
pop
lret
and
cmc
mov
fs
mov
lcall
push
mov
and
movsb
mov
mov
jne
push
ds
pandn
inc
loope
pop
cmp
or
inc
push
xor
add
xchg
popf
scas
leave
or
push
aad
pop
fcompl
ja
shll
insl
xchg
adc
and
idivb
aad
sbb
dec
mov
sub
out
sub
push
push
jbe
inc
aam
jle
jae
scas
pop
cld
xor
loop
mov
or
sub
xchg
push
jne
cltd
ds
into
jae
rorl
pop
test
add
int3
xchg
inc
dec
int3
sbb
pop
inc
xchg
jae
mov
adc
stos
sbb
inc
jo
movsb
pushf
fadds
loope
scas
mov
add
xor
outsb
inc
int3
xchg
mov
lahf
nop
ss
adc
sahf
hlt
cli
mov
test
push
jb
fsubrs
cwtl
push
inc
insb
jl
movsl
loope
sub
mov
pop
mov
mov
push
sub
rorl
adc
sbb
fimuls
dec
sti
push
mov
aaa
mov
mov
and
clc
lock
xor
jmp
pop
and
jecxz
mov
hlt
in
cltd
mov
xchg
ss
rcrb
mov
xchg
add
jle
add
rcrb
add
pop
jns
mov
out
jbe
mov
lock
sub
mov
sahf
out
rclb
aas
sub
xchg
cmpsl
js
and
xchg
loop
pop
sub
adc
filds
dec
adc
pusha
fbld
enter
mov
fdivs
pop
imul
ret
scas
rcrl
lret
scas
mov
imull
idivl
xchg
lock
aas
cli
mov
call
pop
pop
xor
in
jo
xor
cmp
decb
pop
mov
je
fcompl
rorb
push
add
cmp
or
fmulp
out
cmpsb
sti
cmpl
xchg
add
pop
and
cmc
repz
dec
jge
adc
fdivs
push
jp
mov
cmc
inc
sub
inc
jbe
cmpsb
cmp
jge
pushf
enter
gs
addr16
iret
mov
repz
add
cltd
pop
pusha
cmp
jge
icebp
imulb
pop
les
or
icebp
notb
iret
adc
hlt
stos
cmpsl
and
mov
mov
adc
push
inc
mov
insl
jno
mov
fs
or
mov
and
push
push
lock
cmpsb
xchg
shrb
out
stos
sbb
iretw
xor
mov
xchg
and
xchg
fisubs
inc
lods
jo
pushf
stos
pop
scas
xchg
jns
inc
loope
fwait
sarb
inc
leave
jecxz
sub
xor
xor
push
xor
mov
ja
mov
inc
jmp
adcb
jp
ljmp
imul
into
and
insl
lods
aad
cmpsb
mov
rolb
mov
in
mov
push
test
mov
xchg
pop
push
lret
sub
lock
push
into
bound
jecxz
push
push
xor
sahf
lahf
mov
dec
jecxz
stos
les
push
int3
push
hlt
sahf
fisttpl
push
ss
ljmp
test
insl
gs
bound
inc
cs
mov
vrsqrtss
xor
and
pop
aam
inc
xor
push
jne
cli
scas
lods
scas
cltd
in
inc
xor
xchg
pop
iret
mov
adc
inc
pop
sub
or
jne
dec
fstpt
cltd
std
repz
mov
scas
ljmp
pop
lods
es
divl
mov
or
mov
lea
ja
pusha
outsb
sti
fcmovne
iret
or
dec
out
rorb
or
loopne
ss
loop
ss
loope
mov
cltd
inc
mov
mov
or
or
inc
pop
or
imul
out
je
add
loopne
int3
dec
jns
sub
sub
call
hlt
aas
xchg
mov
in
arpl
push
sbb
inc
das
xlat
inc
cmp
push
das
adc
adc
xchg
les
cmp
loop
les
ja
xchg
clc
rorb
mov
int
sbb
xor
mov
fcmovnbe
inc
sbb
and
jecxz
sub
pop
pop
ret
sbbl
or
adc
and
sub
sbb
pusha
pop
add
xor
repz
jb
sbb
add
push
and
xchg
ja
ja
jbe
cmp
stos
inc
sbb
int
lds
xchg
xchg
and
cmp
cmp
lahf
xor
neg
sahf
xchg
mov
arpl
cltd
dec
cmc
push
sbb
test
cmc
pop
cmp
push
push
int
sub
sbb
into
add
enter
xchg
adc
adc
jne
jg
push
cmp
jnp
cmpsb
sbbl
movsl
or
sub
and
sbb
mov
cmp
loope
cltd
mov
pop
sub
mov
add
into
nop
push
jmp
in
xchg
int3
and
xchg
imul
pop
push
test
cwtl
fsts
out
mov
jb
not
jae
lret
mov
inc
lahf
xorl
nop
sbb
mov
dec
cmpsl
idivb
sub
push
push
mov
adc
and
cmp
pop
xchg
ficoms
and
popf
sub
mov
cmp
or
loope
jae
movsl
xchg
jb
daa
ret
mov
movsl
mov
inc
leave
dec
bound
inc
pop
fisttpll
cmp
out
dec
cmp
repz
and
lret
fidivs
and
sbb
fidivrl
fcmove
jno
daa
lock
add
pop
or
loopne
popl
jae
fs
add
jne
sbb
pop
loop
jp
add
or
mov
sarl
push
mov
dec
adc
and
inc
or
sahf
adc
shrl
ja
add
outsb
and
cmpsb
mov
in
in
jmp
stc
insb
jle
dec
push
xchg
iret
int3
mov
gs
call
pop
cmc
inc
dec
je
adc
mov
scas
icebp
push
jge
jne
jmp
fdivrl
xchg
sbb
imul
mov
push
es
incb
insb
cmova
xchg
xchg
pop
rolb
xor
jo
lods
inc
and
xor
scas
push
inc
outsb
sub
fldcw
mov
pop
sub
filds
into
fs
and
adc
pop
jb
iret
push
sbb
lods
fisubrl
cmp
sbb
fdivr
popf
fbstp
xorb
pop
xchg
jne
xorb
stc
les
mov
jl
mov
out
and
xor
movl
fldl
or
pop
push
loop
or
cld
sbb
and
or
xor
adc
cli
lcall
add
dec
xchg
inc
loope
cmp
mov
mov
and
mov
sub
pop
xchg
les
adcb
call
ss
lret
out
sarb
jno
daa
mov
mov
pop
and
sbb
push
xchg
shrb
add
sahf
popa
xchg
dec
adc
bound
lahf
xor
sub
fwait
cmp
push
mov
add
daa
cmp
lahf
lcall
mov
adc
inc
testb
ret
and
cmpb
sti
dec
arpl
mov
or
stos
lea
jo
or
push
iret
and
movsl
movsl
push
sbb
scas
stos
movsl
ret
repnz
push
clc
mov
fbld
leave
and
dec
or
and
push
repnz
mov
into
push
sbb
arpl
dec
or
and
xchg
mov
or
lds
cwtl
add
sbb
jmp
mov
scas
es
and
jmp
dec
xchg
das
cli
std
mov
or
mov
pop
aad
outsb
jb
or
sbb
mov
push
push
or
mov
xchg
mov
and
mov
mov
xor
xchg
ja
stos
pushf
rcr
add
fildll
leave
iret
xor
insl
mov
xor
jl
shlb
sarl
sbb
jge
lcall
fisubl
adc
inc
pop
jne
adc
in
cmp
sub
sti
clc
add
or
add
mov
fdiv
stos
mov
and
lahf
sub
cwtl
mov
pop
or
or
outsl
pop
mov
mov
andb
js
mov
arpl
mov
jno
jl
int3
ljmp
xchg
push
das
adc
inc
mov
adc
pop
int3
ficoms
add
scas
push
jo
minps
out
xchg
insl
cwtl
lahf
stc
nop
pop
nop
jge
inc
push
mov
sbb
mov
sbb
xor
xlat
popf
jo
inc
or
jecxz
divl
inc
lods
stos
mov
fdivl
push
pop
push
loopne
aad
cmp
test
repz
inc
test
inc
mov
dec
cmp
loopne
shrb
push
adcb
push
ljmp
pusha
fmull
mov
pop
xchg
out
rcr
popa
xchg
jb
pop
fists
rcrb
jg
lcall
jp
hlt
lods
mov
pop
mov
sti
pop
mov
lea
dec
dec
rclb
mov
hlt
sub
aam
mov
jmp
add
sbb
or
das
add
add
jbe
pop
test
sbb
loop
dec
mov
pop
sti
dec
pop
lahf
cmp
pushf
sahf
cmp
leave
adc
in
aam
lcall
hlt
nop
adc
adc
vdivss
imull
ret
lods
loop
jmp
scas
push
xchg
pushf
ja
jp
out
data16
pop
adc
cmpsl
cltd
ret
mov
mov
mov
icebp
in
sbb
insl
movsl
or
jns
adc
aam
repz
loop
inc
out
frstor
add
mov
movsb
mov
xchg
xor
jge
xor
jno
jns
pop
xchg
pop
push
nop
dec
movsb
xchg
pop
outsb
push
push
jg
mov
mov
neg
push
push
mov
pop
cmc
xor
or
insl
iret
inc
sarl
arpl
hlt
mov
repnz
xchg
es
subb
mov
loop
cmp
outsl
sti
push
or
xchg
dec
adc
dec
ljmp
mov
aas
xchg
fdivrl
stos
sub
mov
or
mov
xchg
sbb
xorb
cmp
fs
in
mov
mov
mov
mov
lahf
sbb
pop
jns
pop
lcall
inc
mov
insl
fisubrs
push
push
xchg
pop
jle
sbb
lds
daa
pop
outsl
cli
xor
adc
ret
push
loopne
or
xchg
dec
pop
data16
mov
iret
rolb
aaa
imul
cmp
xor
push
das
decl
in
mov
fsubrp
scas
xchg
jne
lods
jbe
lcall
pushf
jne
fsubl
jb
inc
dec
cmpsl
subl
fucomip
jbe
adc
jo
ret
lods
fs
push
sar
lods
in
outsb
push
shll
fsubrp
popf
ror
jge
popa
xorl
add
push
nop
jmp
pop
aad
xchg
mov
mov
sbb
push
push
addb
enter
cli
jle
rorb
mov
adc
lcall
mov
sarb
sub
jbe
repnz
pop
dec
lods
mov
or
sbb
adc
fisubl
stos
jp
jne
aas
jle,pn
jge
push
fidivl
out
cmp
sbb
int3
inc
ja
jns
inc
dec
jle
xchg
pop
faddl
jno
clc
xlat
loope
inc
call
into
lret
push
loope
push
cli
ret
inc
xor
jl
adc
imul
lock
imul
hlt
fistpl
mov
mov
or
mov
mov
inc
inc
pop
inc
mov
aam
adc
loop
adc
jae
popf
enter
daa
xor
test
adc
cmpsb
add
push
sub
xor
cmpsb
push
inc
ljmp
cmp
lret
jo
leave
rcll
stos
je
inc
sahf
mov
pop
mov
lahf
popa
mov
xchg
cltd
xlat
data16
mov
shlb
lods
les
dec
mov
adc
pop
pop
pop
shl
push
add
jmp
jecxz
out
jo
in
rcll
lds
xchg
cmp
push
pushf
adc
popf
sbb
sub
push
imul
lea
push
sarl
das
mov
cmpl
sbb
pop
jmp
imul
in
mov
ret
imul
jbe
sahf
xchg
mov
xor
push
mov
ror
push
or
xor
and
insl
xchg
dec
xor
cmp
cmp
repz
ret
dec
mov
outsb
jne
mov
jecxz,pn
inc
push
pop
mov
push
adc
sbb
push
roll
mov
fbstp
mov
xchg
add
notb
clc
iret
lcall
mov
js
popa
dec
xchg
cmp
and
outsl
jbe
ja
imul
stos
shrb
mov
adc
rcr
dec
mov
mov
ret
mov
jge
ror
mov
in
ss
test
fdivl
js
push
cltd
repz
mov
shlb
cmc
adc
scas
movsl
xchg
lds
faddl
lds
sarl
pop
leave
arpl
and
pushf
inc
xchg
sub
jno
lods
or
movsl
clc
and
mov
into
sbb
inc
shrb
lea
mov
aas
dec
test
jmp
xor
cli
repnz
lock
pop
push
mov
xchg
pop
add
scas
inc
xchg
cmp
push
stos
js
jne
jge
les
push
adc
or
pop
jmp
mov
push
inc
pushf
subl
pop
push
sub
mov
or
leave
shrl
mov
repnz
sub
inc
xor
push
das
sbb
push
cmp
or
pop
cmp
xor
or
adc
xchg
adc
movsl
cmpsl
cmp
fwait
dec
mov
subl
cmp
aad
popa
push
out
jo
pop
pushf
adcb
jo
cmp
jle
je
das
test
xchg
int
add
jno
inc
jle
xchg
sbb
in
xchg
std
pop
sub
test
sbb
jbe
mov
or
push
ret
fsubl
and
pop
adc
test
lret
push
sarb
sti
xor
sbb
gs
out
pop
or
sbb
add
sbb
push
dec
call
mov
pop
stos
pop
inc
in
push
xor
sahf
icebp
pop
in
repnz
sub
lret
add
sub
dec
idivb
aas
sub
cmpl
lahf
test
js
fidivrs
shll
jge
mov
xchg
sbb
insl
rcrl
in
and
lcall
stos
ret
xlat
fidivs
dec
xor
jecxz
push
in
hlt
add
bound
mov
push
dec
sub
test
aam
imul
cmpsb
subb
jae
lea
jl
sub
dec
fadds
js
aas
fisubl
fldt
mov
pop
push
imul
jns
nop
fcoml
mov
inc
cmp
adc
mov
mov
test
xor
push
dec
push
es
sbb
mov
outsb
cmp
iret
mov
push
sbb
test
cltd
xor
add
icebp
xchg
test
aaa
loop
cmp
sub
mov
out
add
rorl
pop
negl
loopne
repnz
mov
inc
sub
dec
stc
repnz
add
jbe
xlat
adc
push
jne
dec
sbb
push
ljmp
push
popaw
into
lahf
sbb
cld
divb
jl
mov
push
or
inc
ljmp
or
dec
popf
xor
pop
add
mov
inc
popf
ljmp
xor
inc
fwait
sbb
jg
xchg
pop
addb
dec
inc
stos
adc
shl
sub
repnz
mov
cld
scas
icebp
mov
cmpsl
or
push
lods
jnp
xchg
and
mov
pushf
xlat
lahf
clc
in
cwtl
rorl
lret
into
mov
icebp
mov
jne
cli
lods
mov
fbld
popl
lret
imul
and
ja
push
popa
cmpb
mov
mov
mov
xchg
cmp
cltd
scas
cmpsl
lahf
loopne
cmpl
sbb
jbe
lret
loop
pop
lcall
mov
andl
xor
mov
scas
xlat
inc
imul
adc
adc
dec
popf
std
ljmp
loope
push
cmpsb
mov
fsubl
fmull
mov
loop
push
sub
in
jnp
lock
cmp
cmp
dec
pop
mov
arpl
montmul
cmpsb
add
pop
fisttps
cmp
or
mov
push
in
inc
rclb
cmp
mov
sub
addr16
add
and
jp
mov
cs
push
test
inc
cmp
les
xor
mov
mov
mov
jmp
fsubl
idivb
hlt
lahf
mov
sahf
push
add
shl
inc
out
outsl
out
cmp
mov
adc
pop
xor
xchg
arpl
arpl
or
adc
int3
fs
cmp
outsl
or
push
ret
xchg
fisttps
inc
scas
mov
mov
or
lock
mov
mov
cmp
xor
lods
lock
jmp
mov
push
out
out
add
dec
pop
add
out
jnp
aaa
xchg
push
sbb
das
pop
mov
pushf
mov
sub
fildll
cmc
int
cmpsb
ds
add
push
stos
inc
lahf
fnstsw
cmp
adc
ret
mov
mov
leave
outsb
inc
stc
dec
dec
aas
into
push
jo
xchg
xor
imul
push
xchg
test
inc
or
dec
push
sub
pop
enter
inc
cmc
pop
mov
and
xor
test
adc
xchg
pop
push
scas
cmpsb
or
push
dec
xlat
repz
pop
repnz
sbb
mov
addr16
dec
loope
int
xchg
or
je
jecxz
testb
add
out
in
xor
js
pop
popa
push
pusha
sahf
stos
and
dec
or
push
out
cmc
mov
imul
arpl
mov
insb
pop
or
lds
xor
sbb
je
neg
movsl
mov
sbb
xchg
fidivrl
pop
jbe
dec
scas
hlt
hlt
icebp
jnp
xor
popa
mov
pop
outsb
mov
inc
cs
jmp
test
subb
add
cmpsl
sub
xchg
lret
pop
jge
movsb
dec
push
jge
xlat
sti
jecxz
stos
mov
sub
mov
pop
stc
mov
push
sbb
icebp
test
cmpsl
lods
cmp
pop
add
sbb
in
pop
mov
outsb
aas
or
popf
xchg
xchg
adc
mov
gs
and
decb
sub
and
pop
cmp
xchg
push
mov
xor
and
pop
ret
lds
sub
mov
xlat
je
int
jns
lock
jg
shlb
mov
jl
mov
lods
insl
hlt
fs
mov
push
or
ja
test
dec
in
mov
jb
xor
pop
xchg
fimuls
enter
mov
insb
clc
xchg
pop
bound
cmpsb
sbb
mov
mov
repnz
outsl
push
sbbl
les
lds
call
pop
push
aad
fsts
xor
movsb
jbe
out
jmp
inc
pop
addr16
mov
loopne
sbb
insb
push
mov
jo
mov
sub
shll
jns
cmp
scas
test
cwtl
adc
sbb
xchg
aad
add
mov
pop
test
cmp
jo
insb
xchg
cmc
mov
pop
mov
je
aaa
add
xor
push
in
pop
mov
scas
roll
cltd
into
mov
and
cld
mov
hlt
or
add
lcall
add
lcall
and
leave
iret
and
and
cmp
outsl
jo
sbb
lret
lods
pop
push
pop
dec
stos
cmp
jne
test
mov
cs
repz
and
mov
aas
mov
shlb
into
xchg
ss
lret
arpl
leave
das
sahf
scas
add
push
pop
rcr
xchg
call
inc
pop
cmc
repz
and
inc
test
xchg
sbb
sub
inc
lret
enter
in
lahf
dec
mov
push
dec
sbb
sub
in
sub
xchg
xchg
xchg
mov
clc
sbb
bound
mov
je
dec
mov
sahf
call
cmovle
test
insl
push
pop
jbe
mov
jb
xor
in
insl
mov
leave
shlb
fucomi
inc
adc
xchg
xor
mov
aad
push
data16
cli
cmp
xchg
sbb
js
ret
inc
jo
imul
inc
lock
std
cmp
or
loopne
pusha
popa
xlat
js
stos
and
mov
ds
cmp
dec
sub
shll
sbb
mov
pop
arpl
shrb
pop
push
xchg
xor
jl
xchg
sarb
aad
ljmp
int
dec
std
sub
aas
push
sbb
popa
cmp
xor
mov
pop
scas
aas
adc
xchg
out
jmp
inc
les
movsl
and
pop
jg
stos
xchg
mov
dec
into
rolb
inc
adc
adc
push
xor
movsl
pop
adc
dec
lret
add
and
lds
xchg
or
push
push
out
pop
push
mov
pop
jne
inc
scas
sbb
repnz
dec
das
idivl
add
sbb
inc
dec
sub
push
pop
shrb
sub
out
mov
sbb
push
clc
je
loope
jecxz
in
sbb
jb
sbb
ret
lret
inc
mov
icebp
fnsave
xchg
pushf
fistps
cmp
xor
adc
adc
mov
and
test
mov
das
sbb
jmp
test
adc
xchg
aaa
xor
mov
sbb
mov
loop
pop
scas
pop
inc
dec
inc
popa
mov
xor
xchg
fst
pop
enter
into
pop
pop
sahf
sbb
in
fs
ds
jne
je
lds
push
sahf
movsl
xchg
mov
jb
lahf
dec
shrl
inc
fcoml
fstpt
lods
sub
push
fs
jne
lea
or
stc
or
scas
js
xlat
add
pusha
jge
daa
xchg
xor
add
dec
or
xchg
pushf
mov
in
jle
lds
sbb
cli
xor
out
cmp
int
ljmp
add
xor
or
jecxz
inc
jno
rorb
inc
imul
pop
or
jns
sbb
xor
push
xchg
fcmovne
pop
orl
cmp
lea
jnp
iret
fdivrs
add
cmp
xor
lcall
loope
loopne
sbb
stos
js
stc
pusha
cmp
cmp
lret
push
psllq
dec
divb
and
pop
in
add
cmpsl
push
lret
je
mov
ficomps
add
ja
in
push
push
inc
jne
mov
sub
xchg
int3
pusha
or
sub
mov
add
mov
lock
add
lahf
adc
sti
inc
and
push
cwtl
adc
xchg
cwtl
xor
movsl
xchg
or
les
push
pop
mov
mov
adc
and
lret
xor
push
insb
sti
add
sub
dec
movsb
cli
iret
push
ret
addr16
pusha
fmulp
idivl
xchg
outsb
mov
outsl
lcall
push
mov
lcall
push
push
out
insb
push
ds
pop
dec
jl
repnz
mov
jae
push
out
xchg
adcb
push
adc
adcl
sub
cmp
push
arpl
jno
inc
push
mov
orb
mov
fdivr
push
xchg
pop
in
mov
adc
std
and
push
xchg
dec
mov
pop
sub
aaa
mov
lcall
push
jo
jl
out
or
sbb
insl
or
mov
xchg
ljmp
fldt
out
sbb
xchg
xchg
mov
sbbb
xchg
aas
push
or
popf
lea
mov
cmp
mov
mov
mov
mov
out
push
dec
roll
cmp
es
sti
ja
jle
jge
in
stc
adc
test
xchg
xchg
jmp
mov
arpl
inc
scas
and
sbb
mov
adc
sub
mov
cli
jbe
scas
mov
dec
jbe
scas
push
jns
pop
mov
pop
insl
pushf
inc
das
xor
mov
mov
int
add
lock
push
add
rcl
iret
push
cmp
lds
push
mov
leave
dec
idivl
add
push
cmp
faddl
adc
push
testl
pop
in
pop
mov
popf
loopne
cmpl
dec
arpl
add
mov
push
call
dec
and
push
push
xchg
xor
sti
pop
and
outsb
mov
ja
into
and
fdiv
out
inc
lock
and
jb
rcll
or
loop
subb
scas
pushf
mov
std
xor
xchg
cmp
test
pop
jmp
pop
addr16
shrb
inc
xlat
inc
push
xchg
cmp
stc
jne
dec
fisubs
cmp
cmpsl
add
push
xchg
jle
cmp
jmp
cs
loope
xchg
jmp
xorb
data16
in
ja
js
sub
bound
push
call
cmc
pusha
imul
sub
sub
outsb
mov
xchg
fucom
shlb
cmp
movsb
and
adc
scas
mov
adc
mov
in
mov
sbb
imul
insb
test
andl
lahf
lods
loopne
mov
push
pop
lock
xor
cmpsl
adc
shl
loopne
mov
rorl
cli
add
pop
pop
mov
arpl
inc
repnz
je
jmp
loopne
imul
loope
pop
sub
lds
cltd
jmp
shll
push
or
loop
xor
add
mov
inc
sub
mov
scas
push
leave
shlb
push
hlt
jae
mov
jae
or
adc
ja
in
mov
mov
test
cmp
mov
xchg
push
sbb
inc
lret
iret
pop
xchg
jnp
jae
orl
sub
pop
arpl
aad
stos
cmp
and
rclb
cmpb
lret
dec
mov
and
push
inc
push
sahf
aas
push
pop
dec
pop
xor
out
add
push
rorl
push
repnz
mov
push
rolb
xor
or
cmpsb
rcr
push
jns
dec
repnz
lock
in
imul
cmpsb
mov
mov
mov
add
mov
pop
flds
add
sbb
in
jle
mov
mov
addr16
and
mov
mov
pop
nop
fnstsw
mov
aad
jno
pusha
mov
mov
mov
xchg
jo
pop
jne
orl
iret
out
xor
jmp
popa
loope
les
mov
xlat
mov
sbb
xor
cmp
mov
jbe
pop
cs
sbb
fwait
lahf
xchg
scas
or
sub
cmc
insb
sub
mov
jp
adc
push
es
or
ljmp
adc
mov
das
push
fwait
mov
and
mov
or
dec
aad
and
cmp
mov
xchg
and
int3
mov
cmpsl
inc
jb
gs
cmp
lahf
dec
mov
cmpb
dec
push
stc
scas
addb
inc
dec
leave
popf
jge
pushf
cmc
cltd
add
jae
sti
inc
add
sub
sti
dec
aas
jl
loope
xor
xor
jg
sub
lock
push
push
adc
and
jns
dec
jecxz
jg
in
pop
push
lahf
add
dec
adc
pop
lcall
outsb
push
jg
mov
scas
stos
inc
shlb
jp
mov
imul
in
fwait
mov
add
sbb
jecxz
dec
mov
inc
lods
pop
notl
int
aam
adc
icebp
and
pop
mov
adc
sahf
lret
xor
addb
pushf
jne
in
push
lret
sub
aam
in
push
mov
fsubs
int
adc
jl
dec
and
lock
xor
dec
cmp
mov
pushf
sbb
ja
popa
je
sbbb
jb
shrb
bound
dec
popf
loopne
outsl
loope
xchg
sub
pop
sbb
mov
jae
pop
into
or
push
popa
jge
lods
mov
or
inc
pop
cs
pinsrw
lods
daa
sub
jp
pop
push
fimull
and
inc
mov
sub
ss
addb
add
test
cmp
sub
sti
jge
mov
mov
sub
xchg
insb
jno
clc
sbbb
xor
leave
cmp
push
dec
mov
inc
sub
xchg
rolb
adc
jb
fcmovnbe
rorb
pop
push
clc
mov
push
pop
aam
cli
cmp
dec
filds
sub
inc
notl
aas
pop
cmpb
test
xchg
movsb
pop
add
mov
scas
scas
ljmp
cmp
jl
lods
mov
and
cmp
in
or
mov
mov
jg
popa
mov
cmpb
sarb
cld
sub
jecxz
arpl
or
sti
dec
hlt
in
sub
jno
pusha
sarb
jmp
push
mov
jmp
call
jo
mov
xor
stos
pop
ret
shlb
inc
pop
add
jg
mov
sbb
xor
jae
fnsave
pop
sti
aam
dec
arpl
pop
jb
loope
xor
lds
mov
int
jo
sar
mov
cltd
repnz
jno
loopew
mov
and
sahf
test
or
xor
push
push
nop
push
lret
xor
xor
xchg
push
lcall
jbe
and
fsubs
in
push
xor
in
jb
jg
bound
and
dec
outsl
xor
sti
fisttpll
and
cmp
movsl
lahf
cmpsb
icebp
inc
xchg
push
sti
mov
ljmp
movsl
xchg
jp
cmp
out
in
test
lret
cmp
out
push
cmpsl
andb
les
mov
pop
and
jo
fbstp
loope
cmpsb
decb
nop
xor
adc
sbb
out
call
push
dec
inc
and
mov
test
jne
push
push
cmp
in
jge
loop
repnz
aad
push
fimuls
cld
cltd
fdiv
pop
pop
and
push
enter
dec
out
jle
lds
inc
cmp
push
jl
ret
mov
shlb
add
add
pusha
sbb
xchg
jbe
fbld
test
pusha
inc
pop
rclb
scas
mov
jno
mov
nop
out
xor
sbb
mov
lret
push
es
not
cld
les
adc
mov
mov
push
xchg
jl
lock
cs
es
ret
or
push
mov
sbb
sub
mov
hlt
inc
or
cltd
call
loop
std
aad
imul
mov
mov
jg
rolb
inc
fmuls
fdivs
adc
push
mov
mov
mov
adc
mov
in
pop
mov
push
nop
mov
mov
ficoms
push
pop
sarl
aad
imul
stos
scas
mov
mov
or
stos
popf
fwait
popa
inc
mov
popf
fdivrl
xor
std
mov
pop
add
cmp
psllq
mov
in
mov
cmp
arpl
pop
push
clc
mov
arpl
and
dec
daa
mov
xor
shlb
arpl
xchg
adc
aam
into
lods
pop
mov
popa
cwtl
imul
pop
mov
cmpsb
cmp
mov
call
jp
icebp
in
push
roll
bound
adc
push
or
push
gs
sbb
jb
fnsave
imul
ret
iret
xlat
jp
or
push
mov
lea
lea
lcall
lret
cld
push
lcall
adc
cmp
cli
fwait
push
push
aam
cmp
pop
jmp
pop
pushf
pop
add
fildll
js
add
xchg
xchg
inc
sbb
in
sbb
cli
mov
dec
and
lock
imul
clc
idiv
stc
rclb
addr16
pop
data16
loopne
xchg
mov
mov
push
inc
nop
std
outsb
mov
fsub
fwait
pop
arpl
jnp
ret
sub
ds
lods
or
push
ss
gs
mov
daa
xor
out
cltd
push
pop
push
xor
mov
dec
dec
add
inc
dec
js
xlat
adcl
xchg
dec
mov
xchg
adc
loope
lahf
test
aas
mov
stos
ret
xchg
stos
scas
add
or
sub
pop
sbb
lahf
sahf
xor
mov
cmp
fwait
adc
mov
push
or
out
ds
pop
cltd
sbb
popf
aaa
xlat
cmp
adc
test
sbb
push
xchg
adc
pushf
dec
js
adc
rorl
sub
cltd
and
lods
shlb
pop
gs
push
and
sarl
jne
pop
jnp
enter
mov
inc
cmp
test
jg
adc
jge
mov
xorl
mov
in
repnz
xchg
add
jmp
xor
xchg
scas
or
fbld
add
cld
dec
mov
aaa
mov
push
lds
push
mov
loope
out
inc
add
clc
cld
xlat
sub
push
jmp
mov
jnp
cmpsl
xor
ret
adc
inc
mov
aam
adc
push
add
dec
or
pusha
ret
mov
movsb
ret
lods
out
xchg
int3
mov
popf
fcmovbe
pop
in
cwtl
pop
dec
xchg
mov
xchg
repnz
iret
xchg
or
imul
xor
aam
jns
nopl
test
mov
xchg
jb
adc
pop
sub
cli
sub
lea
fisttps
flds
mov
ds
or
and
jne
mov
cmc
stc
lcall
push
xchg
xor
sub
dec
jno
mov
or
rcr
daa
call
jg
mov
in
addr16
mov
cmp
add
aad
xor
in
sbbl
popl
stc
jmp
inc
shlb
cmc
fisubs
imul
and
or
sbb
orl
fxch
push
xchg
dec
mov
sbb
int3
and
pop
adc
aaa
std
xchg
xchg
in
arpl
pop
xor
ret
imul
xchg
xchg
sbb
sbb
cmpsb
rorl
jp
fdivrs
mov
popf
jne
dec
or
pmuludq
dec
lcall
xor
outsl
aam
test
or
xor
jmp
movsl
mov
inc
mov
inc
hlt
and
inc
sbb
pop
push
jl
sbb
cmp
mov
out
call
push
xor
loopne
xacquire
dec
jmp
arpl
sti
mov
xchg
enter
enter
mov
xchg
mov
sbb
mov
sub
mov
pop
and
cld
ret
sbb
adc
cmp
add
hlt
cmp
xor
into
popa
les
cli
push
jno
scas
mov
xor
xchg
cmp
hlt
xchg
jno
inc
mov
and
pop
in
mov
cmp
pop
ss
inc
pop
inc
jecxz
mov
out
push
call
xor
in
hlt
inc
xchg
inc
mov
test
int
lods
pop
leave
add
lcall
sub
bound
cwtl
shlb
inc
and
test
jns
sahf
sbb
ss
or
shl
push
jl
jle
cld
sbb
or
xchg
xlat
fcompl
outsl
mov
mov
sub
mov
push
sahf
sub
xchg
addr16
pop
and
pusha
mov
sub
mov
les
xchg
outsb
sub
or
ja
xchg
test
test
jne
push
repnz
fnsave
call
inc
sti
push
lret
lds
rolb
fs
jle
bound
pop
aas
xlat
pop
js
mov
xchg
pop
repnz
and
pop
aas
imul
in
addb
es
add
enter
fdivs
add
out
stos
pushf
repnz
stos
iret
jmp
xchg
lods
loop
aam
sbb
inc
frstor
cmp
inc
xor
dec
fadds
xor
pop
in
inc
in
ror
aad
mov
std
or
insl
jns
stos
inc
jmp
mov
and
lock
lds
jo
aad
push
pushf
es
aas
push
cmp
and
xchg
inc
rol
testb
loopne
sbb
fidivrs
repnz
std
lahf
xlat
int
inc
lcall
mov
dec
ss
xlat
xor
testb
sbb
cmp
xchg
mov
aad
adc
push
cmp
mov
push
movsb
inc
popa
push
xchg
stos
xor
or
push
or
sub
mov
pop
jge
scas
lret
or
jns
mov
fs
mov
add
movsl
imul
das
pushf
pop
out
xchg
arpl
sub
sysret
add
add
xor
hlt
cltd
mov
jbe
push
pop
mov
mov
cmpsl
fwait
ret
inc
pushf
movl
shlb
clc
fcomps
in
lcall
das
jp
sti
push
jge
inc
addr16
bnd
out
iret
and
adc
clc
pop
and
cmp
lods
gs
and
stc
fdivl
pop
jo
cmp
or
add
xor
in
xchg
dec
adcl
add
stc
xor
jbe
ret
sub
mov
nop
lret
loop
adc
dec
xor
sbb
mov
inc
sub
or
ja
mov
cmc
add
jno
and
fildll
ss
test
push
mov
cmp
cmp
je
hlt
out
data16
jecxz
dec
mov
jge
mov
cmp
mov
int
aam
mov
std
xchg
fidivs
std
lahf
sub
or
insl
fisubrl
cli
jae
stos
fs
das
xchg
fs
xchg
dec
int
inc
ljmp
push
jge
fists
cwtl
pusha
mov
mov
movsb
rol
aad
out
push
pop
dec
push
add
mov
mov
jnp
dec
test
sarb
dec
lret
popf
or
insl
sbb
sti
jno,pn
lret
arpl
xchg
adc
pop
add
jbe
call
sub
fs
fcom
xor
push
movsl
cwtl
rcrb
dec
mov
dec
cmp
and
mov
push
call
nop
and
lock
push
sub
push
inc
xor
sahf
out
jmp
mov
stos
cmp
mov
inc
push
test
xor
pusha
dec
stc
inc
divps
or
je
movsb
cmpl
lods
stc
pop
fsubr
mov
or
aas
sub
cmpsl
testl
loope
sub
lret
psadbw
ljmp
repnz
sub
aam
and
movsb
add
int
gs
jbe
rolb
jp
sbb
push
inc
sbb
arpl
pop
or
inc
mov
enter
xor
inc
das
icebp
aad
xor
push
testl
dec
dec
roll
aas
mov
dec
dec
push
outsl
cmp
andb
lret
mov
lcall
jl,pt
jp
popa
cmp
jno
mov
int3
cltd
sub
fcmovu
nopl
inc
mov
push
dec
jae
cwtl
add
sahf
test
jns
jle
lds
sbb
int3
fidivs
push
mov
xchg
insb
arpl
add
add
jno
and
in
stc
sub
fisubl
test
sahf
xorl
xor
add
sarb
ja
cli
mov
mov
mov
fstpl
cwtl
lods
fiadds
jl
push
add
ja
jns
dec
jmp
fiaddl
add
mov
imul
gs
mov
sbb
sbb
aad
mov
decl
cld
leave
pop
and
in
mov
jmp
cmpb
cmp
xchg
sub
leave
and
push
mov
out
or
pop
lret
lret
scas
jl
scas
lcall
xor
lret
push
ret
rcr
mov
out
aad
sbb
call
stc
push
cmp
jns
mov
jecxz
sbb
out
mov
mov
jnp
into
imul
xchg
mov
frstpm(287
imul
clc
fldt
dec
aam
xchg
cmpsl
xchg
xor
jbe
mov
inc
out
fbstp
push
rorl
imul
bound
xor
push
mov
sub
add
orb
cwtl
rol
pop
rclb
mov
into
dec
jge
dec
sbb
out
xchg
xor
mov
mov
fnsave
cmp
lds
push
pause
fldenv
bound
fsubrs
rclb
ljmp
mov
push
cs
mov
nop
mov
dec
push
push
or
cwtl
pop
jae
xchg
cmpsl
sahf
into
std
int3
fbstp
jge
or
enter
scas
pop
xchg
test
outsl
leave
inc
mov
leave
xor
xchg
xchg
fnstcw
fnclex
es
cmp
scas
mov
mov
arpl
xchg
popf
into
into
leave
mov
mov
and
sub
repz
stos
dec
addr16
inc
and
mov
out
push
and
insl
mov
mov
negl
dec
movsb
repnz
adc
add
and
jbe,pt
and
pop
and
pop
pop
xor
jp,pt
sbb
jns
push
mov
inc
out
jg
sbb
lahf
loope
sub
aad
das
and
xor
sub
mov
jb
imulb
push
mov
test
inc
das
xor
cmpsb
push
test
mov
stc
xchg
add
sub
icebp
sahf
cmpsb
pusha
push
testl
adc
scas
inc
in
test
xor
fisubl
js
mov
fisubl
sbb
fsubs
shrb
add
cmp
and
clc
xchg
lcall
orb
sarb
lret
movsl
sub
pop
add
cmp
popa
lret
icebp
testb
out
arpl
aam
mov
int
push
leave
mov
sbb
mov
adc
std
xlat
sbb
cltd
mov
inc
add
jno
jb
cltd
or
inc
mov
push
js
fadd
bound
adc
imul
test
sbb
lahf
cltd
dec
nop
xor
je
insl
mov
adc
inc
out
icebp
das
in
sarb
loop
lods
jge
mov
and
cs
sub
ljmp
and
mov
into
pop
push
negl
mov
pop
cmpb
cmp
dec
xor
hlt
inc
stos
aam
sub
cmp
subl
call
clc
adc
cmp
pop
lods
fiadds
shlb
enter
aas
and
mov
shl
xchg
or
scas
mov
out
ja
cmp
cltd
pushf
push
mov
adc
push
outsb
dec
popa
jl
pop
jmp
lret
mov
jnp
div
inc
shll
jmp
insb
add
leave
jns
cmpsl
push
push
mov
cmp
int3
xchg
sbb
loop
push
int3
ja
je
out
mov
xor
aaa
jecxz
or
ficomps
jbe
inc
cmpsl
mov
jns
ret
insw
xchg
adc
fst
scas
es
dec
cltd
inc
push
inc
sti
in
xor
sahf
xchg
mov
lea
movsl
aaa
mov
mov
dec
or
mov
jne
sbb
repnz
loopne
std
or
and
decl
test
pop
xor
mov
dec
mov
or
push
xchg
pop
test
mov
pop
inc
dec
hlt
sbb
jmp
and
rorb
jnp
and
or
or
fs
std
rcrb
mov
lock
ss
mov
out
add
lcall
xchg
inc
shll
aas
add
scas
insl
xchg
out
push
jmp
pop
bound
mov
dec
cwtl
fmul
or
enter
xor
rclb
nop
sbbl
outsb
sub
adcl
pop
fmull
adc
jmp
ret
jnp
mov
or
dec
ds
je
adc
mov
repz
xor
jecxz
fwait
mov
jmp
dec
xor
and
popf
imul
or
shlb
dec
je
add
sbb
fs
xor
arpl
pop
enter
arpl
negl
mov
out
ret
dec
prefetcht1
add
mov
sub
sub
lahf
cmp
cmp
loopne
outsb
stos
scas
insl
sbb
push
pop
jb
cld
test
out
add
inc
and
pop
fwait
mov
neg
sbb
pop
push
std
adc
mov
in
mov
pop
in
in
js
rol
inc
and
xchg
xchg
adc
mov
sub
into
out
jg
fadd
stos
cld
mov
push
and
jg
movsb
sbb
and
fcom
add
push
dec
out
ljmp
stc
das
js
fstpt
jns
adc
stos
push
pop
pop
mov
gs
dec
or
aam
roll
int
mov
xchg
nop
mov
movsb
pop
in
inc
test
outsb
pop
jne
or
pushf
mov
inc
jg
sbb
and
xor
mov
inc
test
xor
sti
pop
xchg
mov
divb
aad
sbb
movsb
fadds
mull
push
mov
sbb
adc
and
scas
add
fistpll
or
or
sub
sub
lea
push
lcall
pop
sub
repz
inc
push
xchg
pop
or
loope
and
lret
fldenv
nop
sub
clc
rorl
dec
dec
in
xchg
lret
dec
sbb
lods
mov
sbb
es
popa
mov
adc
pushf
push
sbb
loop
or
sub
ljmp
les
jns
jl
or
pusha
pop
test
dec
lods
repnz
sbb
pop
push
enter
ret
sbb
jp
push
xor
dec
mov
sti
in
cwtl
fsts
mov
add
sahf
mov
movsl
ret
ss
pushf
enter
xchg
jge
fadd
jnp
addr16
inc
cmpsl
imul
sub
jp
clc
pop
repnz
adc
sbb
data16
jne
mov
jp
sbb
clc
cmp
mov
fidivrl
push
or
ficoml
fimull
test
fwait
or
ficoml
lret
pusha
int
xlat
imul
dec
mov
lea
mov
sbb
std
pop
push
cmp
outsl
dec
cmp
mov
loopne
pop
idivb
sbb
lock
add
inc
jle
push
ljmp
pop
dec
subl
rcll
jne
aaa
stos
cmpsb
mov
mov
jno
push
shr
fidivrl
or
push
leave
sub
outsb
imul
je
pushfw
mov
xor
jae
push
pop
lods
jb
cmp
push
test
leave
lock
dec
std
test
mov
xchg
les
mov
test
leave
shlb
ds
jo
inc
aaa
jns
out
in
adc
sub
rolb
cmpsb
xor
lods
jo
lea
loope
inc
or
mov
je
xchg
inc
cmp
inc
pop
sar
jl
dec
mov
cmc
pushf
loope
or
inc
sub
iret
fisttps
push
push
jg
shll
flds
push
cmp
or
or
sub
mov
cmpl
inc
dec
add
adc
dec
cmpsl
pop
fs
aad
cmpsl
inc
pop
and
mov
xor
mov
push
mov
sbb
arpl
outsl
push
loope
adc
xor
jno
mov
mov
push
mov
jle
jge
mov
hlt
or
add
das
ficomps
loope
out
rorb
cs
lds
das
xor
mov
and
mov
mov
dec
sub
in
or
iret
lock
jnp
jl
mov
or
repnz
jle
fcompl
or
notb
and
mov
mov
imul
xchg
adc
aad
or
and
push
fwait
ja
cmp
or
push
add
adc
xchg
dec
push
fwait
cmc
pop
test
and
mov
loope
jne
sub
and
outsl
fcoms
out
arpl
or
lods
jnp
clc
pop
mov
cmc
leave
rcrl
into
insl
rcrb
daa
cs
sub
popf
mov
dec
dec
mov
sahf
outsb
inc
dec
hlt
enter
call
les
scas
jno
int3
cmp
aad
ds
imulb
push
jb
push
lret
add
loopne
add
sbb
hlt
sbb
out
sti
push
dec
btc
fcoms
cmp
dec
test
and
push
stc
mov
mov
inc
push
jne
daa
jnp
out
pop
scas
scas
mov
rcll
cmp
mov
outsl
xor
jne
inc
ljmp
inc
dec
lea
sbb
or
jge
sti
or
mov
mov
dec
sub
lods
push
orb
dec
add
rcrb
bound
pop
mov
xor
and
cmp
sbb
pop
pop
jge
jnp
cltd
xor
cmp
sahf
jns
popf
jae
push
testb
sub
or
xchg
xor
int
hlt
scas
and
mov
xchg
xchg
cld
data16
fincstp
scas
std
mov
ret
cmp
push
mov
xchg
mov
iret
sbb
mov
hlt
mov
mov
rorl
push
pop
sub
adc
add
lds
dec
sub
clc
in
adc
mov
add
sbb
jl
sub
mov
lret
xchg
dec
pusha
xchg
stos
inc
cwtl
ss
shll
cwtl
jle
xor
adc
add
cmp
add
mov
shll
movsl
aas
flds
sbb
roll
xor
aad
jne
cwtl
xchg
jp
push
cli
jmp
jno
lcall
xchg
inc
rclb
pop
or
movsb
pop
stos
sbb
sub
xchg
xchg
hlt
add
out
cmpsb
enter
xchg
inc
jnp
into
jl
inc
lock
shll
rorl
clc
sub
add
dec
int3
mov
jl
adc
popa
pop
lcall
push
stos
addr16
mov
into
clc
rcrl
scas
je
xchg
mov
in
dec
test
cltd
test
adc
ficoms
jo
pop
jns
xchg
mov
dec
xchg
push
lret
push
cmp
popf
add
mov
pop
jg
dec
fmul
mov
jno,pt
add
jg
bound
mov
add
fsubs
sub
sbb
jle
cmpsl
cli
dec
mov
das
adc
dec
cmpsb
and
and
repnz
mov
aas
ljmp
inc
inc
daa
jecxz
int3
push
mov
ds
test
xchg
inc
enter
testl
test
outsl
repz
fsubs
mov
and
sub
ret
ds
inc
lret
jmp
push
jns
mov
aaa
outsb
and
cltd
xor
cli
dec
sti
enter
sbb
jl
push
or
imul
push
jbe
jmp
xor
sub
loope
stos
das
sub
fsubl
push
lret
cmp
loop
mov
stos
pushl
arpl
aaa
mov
clc
and
cwtl
cli
pop
int3
das
mov
push
adc
mov
repz
sahf
cmp
lahf
cmp
xchg
testb
sbb
std
fucomi
push
sbb
xchg
xor
jmp
push
adc
pushf
and
fistps
adc
in
pop
mov
xchg
inc
jge
int
cmp
rcl
pop
hlt
jns
add
xlat
enter
popa
xor
jg
dec
pop
pop
test
push
jae
inc
mov
adc
xor
push
jl
xchg
scas
mov
push
orb
adc
push
sbb
cmp
in
addl
xchg
call
mov
or
adcb
or
sahf
mov
push
movsl
imul
mov
fsub
into
xor
mov
in
out
test
push
lret
cmc
jnp
sub
dec
call
popf
jge
shl
sbb
sbb
popa
out
sbb
insl
adc
or
test
dec
lcall
icebp
test
fdiv
pop
pusha
xchg
stos
push
lock
dec
add
lds
xchg
xchg
lock
adc
loopne
inc
mov
out
and
xor
push
push
xor
nop
push
out
xor
cmpl
adcb
aaa
leave
pop
rorl
leave
push
sub
mov
hlt
cmpsb
xchg
adc
aas
enter
push
fstpt
cld
xor
jmp
shl
clc
leave
sub
and
lret
sub
inc
movsb
call
jnp
loope
push
lods
xchg
dec
jne
jb
push
test
push
test
das
or
repnz
mov
mov
jo
call
pop
fsts
pop
mov
js
gs
sbb
leave
out
cwtl
inc
ret
jge
and
fiaddl
jnp
lods
xchg
dec
insb
sub
or
lods
loopne
hlt
xor
insb
rcrb
dec
sbb
test
mov
aaa
int3
or
andb
sti
push
cmp
xor
adc
jp
mov
pop
dec
dec
les
xchg
notb
mov
pop
imul
in
and
mov
adc
sbb
sub
out
pop
xor
loopne
pop
movsb
pop
pop
fwait
iret
cmp
pextrw
cli
add
pshufw
and
mov
fstps
xchg
dec
push
and
push
testl
ror
mov
xor
adc
fwait
dec
test
cs
test
out
jmp
mov
mov
mov
scas
jae
inc
data16
nop
movsb
leave
or
pop
xor
inc
push
push
sahf
sbb
es
rorl
jne
test
ss
add
xor
add
shrb
add
xchg
xor
aad
loopne
mov
jle
popf
jne
xchg
cmovo
iret
xchg
bound
stos
jne
repz
stos
loopne
dec
inc
pop
call
cld
push
imul
cmp
in
xchg
pop
mov
adc
inc
mov
pop
sub
jg
jno
push
mov
and
call
xchg
scas
mov
push
adc
jl
cmc
jns
xlat
int3
mulb
pop
scas
sbb
add
fimuls
popa
or
orb
fnstsw
jg
fnsave
mov
adc
lcall
imul
aam
pop
pop
sub
ja
xlat
inc
outsl
loop
mov
ret
lret
fwait
mov
sarl
pop
xchg
lock
xor
pop
xor
push
xor
xor
fstps
push
mov
fwait
sub
jle
fcoms
jno
iret
and
xchg
es
xor
mov
cmp
cli
push
adc
movsb
jmp
pop
leave
push
pop
dec
icebp
into
or
add
movsb
mov
fsubs
push
aam
loopne
jecxz
rol
add
push
dec
cmp
mov
mov
daa
sub
push
cmpsl
aam
push
leave
fiaddl
sub
int3
inc
icebp
rorl
inc
mov
inc
adcb
jbe
or
add
dec
test
lea
outsl
inc
test
out
xchg
or
out
gs
insl
enter
or
mov
mov
dec
fcomp
push
push
repz
dec
stc
mov
shlb
xchg
rcll
fcoms
pop
dec
mov
mov
mov
and
and
xchg
pop
cmp
lea
pop
es
xchg
lea
mov
xor
mov
fsubrl
mov
jle
cs
loopne
repnz
xor
xlat
adc
sub
xor
cwtl
test
xor
dec
jb
jmp
lcall
les
ja
xchg
dec
mov
push
pushf
add
push
mov
mov
loopne
cmp
pop
leave
mov
insl
enter
pushf
xchg
add
popf
mov
push
jbe
mov
lods
test
cld
push
xlat
imul
dec
or
jg
push
test
mov
mov
adc
xchg
aas
lret
cmc
stos
in
arpl
hlt
rol
dec
aaa
push
test
ljmp
cmp
ss
mov
mov
sar
shl
push
adc
xor
fidivs
push
or
in
add
mov
fwait
mov
jge
cmp
mov
popa
adc
addb
jle
aad
pop
sub
mov
sbb
rep
sub
sbb
inc
mov
test
std
outsb
popf
push
or
imul
push
jae
mov
xchg
dec
lahf
pop
pop
lret
dec
xchg
xchg
ds
and
sbb
andb
inc
nop
sub
jnp
inc
je
pusha
repz
cli
push
jmp
mov
ffreep
mov
incb
jb
cmc
push
xchg
sub
aaa
je
or
mov
inc
fiaddl
cmpsl
xchg
daa
jnp
sub
adc
xor
jmp
pop
sub
jle
sahf
lods
sbb
xchg
jp
lahf
pusha
push
out
sbbl
adc
enter
xchg
mov
mov
jle
push
cmp
test
test
popa
shll
mov
imul
andl
inc
hlt
pop
sub
xor
popa
sbb
dec
rcrb
insb
and
pop
xor
add
das
inc
mov
test
iret
lret
out
and
jp
add
sub
jae
jmp
outsb
dec
stos
imul
add
je
xchg
dec
inc
xor
cltd
ljmp
fcomps
enter
repz
xchg
jg
stc
sub
cmpsb
out
and
push
and
or
in
mov
cli
add
push
jbe
jle
jb
je
and
or
in
inc
pop
push
imull
mov
or
mov
fsubrl
sbb
or
mov
jnp
in
in
shll
jmp
and
insb
cmp
repnz
into
out
mov
cmpsl
inc
mov
sti
movsl
xchg
dec
push
mov
aaa
jnp
filds
insb
cmc
inc
or
jo
cltd
insb
hlt
cmp
dec
jmp
scas
cli
mov
push
jne
sub
mov
xchg
fidivrs
sub
ds
xchg
add
aas
les
sub
aas
sub
sub
mov
or
dec
outsb
fs
cmp
xor
les
cli
sbb
sub
sar
add
pop
jecxz
xlat
inc
pop
add
scas
jae
cmp
out
lret
push
jno
cld
popa
popa
lret
hlt
ds
mov
jecxz
pushf
adcl
fstl
es
xchg
jp,pt
and
mov
and
push
mov
dec
cmp
xchg
sub
scas
mov
jmp
pop
sbb
jmp
mov
insb
iret
fadds
inc
jnp
pop
sbb
stos
gs
push
scas
test
sahf
and
or
hlt
cmp
sub
pop
and
add
loop
popa
cmc
fisttpl
cmc
lret
dec
fsts
movsl
pop
dec
mov
mov
cmpsl
mov
push
dec
adc
xchg
leave
inc
rolb
lcall
lret
rol
dec
repnz
std
popa
leave
mov
inc
lods
fistpl
push
outsb
cwtl
into
cmp
or
or
sbb
or
mov
cmpsl
lcall
push
xlat
xchg
sbb
mov
ds
loop
mov
cmc
cmc
push
jae
sbb
aas
xor
dec
mov
xor
jne
sbb
pop
movsl
xor
fildl
push
xchg
es
inc
ret
outsl
inc
aam
sbb
loopne
xchg
fimuls
movsb
in
ja
fcompl
cld
jge
xchg
and
xchg
mov
pop
or
adc
xlat
adc
cmp
jae
test
pop
sub
xor
in
call
push
mov
outsb
std
in
lods
adc
or
scas
mulb
sbb
cmp
cwtl
mov
adcb
dec
popa
xor
or
dec
dec
xor
dec
push
sbb
jno
roll
xor
pop
cmp
lods
push
push
divl
sbb
lea
jno
xor
dec
pop
adc
into
sub
and
ffree
dec
push
rclb
xor
inc
inc
fsubl
push
inc
call
cmp
jnp
and
outsb
mov
dec
push
leave
mov
int3
scas
ds
movsl
addr16
sub
pop
cs
jp
mov
js
insb
out
add
pop
sub
out
dec
inc
mov
aaa
pushf
inc
sbb
and
cmc
push
addr16
inc
cltd
mov
pop
insl
xchg
lock
jno
adc
cmp
mov
out
fyl2xp1
push
fnsave
lret
mov
sub
pop
mov
inc
dec
call
mov
rorl
daa
push
cld
sbb
push
fdivrl
stc
test
dec
add
push
out
pop
movsl
test
jae
js
jns
sub
push
and
xchg
push
push
in
jno
lds
outsl
jbe
fisubrl
aad
jmp
cmpsl
mov
repz
inc
jecxz
mov
imul
jno
aam
lock
movsb
jne
or
mov
push
addr16
mov
sub
les
fbstp
jge
push
add
or
into
adc
mov
nop
insl
lods
adc
xchg
add
nop
and
mov
lahf
lock
sbb
adc
adc
jp
cwtl
mov
imul
cmp
add
cld
lods
fdivr
mov
dec
mov
pop
ficompl
outsl
sbb
sbb
mov
jae
loope,pn
sbb
jno
jg
push
xchg
icebp
addb
in
jb
and
dec
cs
mov
adc
sarb
imul
push
movsl
dec
js
dec
popf
dec
fwait
xchg
pop
test
daa
cmpsb
shlb
ljmp
pop
int
pushf
lods
test
push
mov
fdivrl
imul
xchg
inc
scas
test
movsl
adc
mov
cltd
and
jp
and
xor
xor
insb
jecxz
sub
call
dec
insb
imul
xor
sub
push
xchg
mov
test
lcall
repz
aas
in
pop
into
bound
test
xor
outsl
sbb
popa
ret
outsl
adc
jo
inc
data16
add
lret
mov
mov
ficoms
jmp
test
xor
popa
or
cmpsb
push
jecxz
inc
add
pop
lahf
test
loop
sti
lds
shlb
arpl
scas
cmp
jle
jno
lret
adc
mov
cli
out
add
out
adc
nop
outsl
lret
movsb
ljmp
mov
sub
xchg
mov
adc
jae
hlt
loop
fstps
int
lret
das
xchg
std
repnz
movsl
je
stos
sub
push
nop
mov
insl
in
loopne
lods
loope
mov
mov
sub
pop
lea
ret
xlat
mov
std
stc
js
mov
fs
aas
fs
pop
mov
insb
inc
mov
cmp
and
cmp
pop
xor
inc
xor
dec
jmp
ret
pop
xchg
imul
push
fdivs
hlt
addr16
aam
stos
xchg
sbb
jg
pop
jp
movsl
iret
cmp
call
shr
lcall
cmp
cmp
sbb
sti
mov
jno
dec
cmc
mov
push
jmp
xor
sub
cmpb
testb
cli
xchg
mov
xchg
stos
fs
mov
test
ja
adc
mov
add
jp
shlb
dec
cs
out
xchg
in
popa
mov
adc
mov
dec
push
lret
out
aaa
repz
adc
rcrl
adcl
cmp
cmpb
mov
mov
aaa
negb
xchg
out
bound
cmc
adc
imul
inc
dec
mov
mov
inc
mov
rolb
pop
lcall
cmp
fistps
jecxz
rcrb
inc
and
rclb
sbb
push
loope
lcall
fbld
in
rclb
sarb
push
and
jle
inc
scas
push
mov
icebp
pop
xor
jns
imul
int
jo
sbb
sub
mov
idivl
shrb
jb
push
xor
scas
xchg
xor
pushf
iret
mov
lea
fcoml
jnp
test
sub
xchg
lods
mov
arpl
mov
leave
decl
xor
ss
push
or
push
stos
dec
ljmp
insl
in
mov
mov
scas
xchg
dec
stos
test
inc
jge
shrb
cmp
test
fadds
fadd
je
cmp
cvtps2pi
arpl
shrl
push
or
dec
fistl
inc
jo
lds
sub
inc
imull
je
rorl
into
mov
lods
xor
addr16
lea
push
pop
jle
mov
jo
xor
dec
mov
mov
adc
sbb
pusha
xchg
or
or
jg
fsubl
cmp
cmp
or
fstpt
lods
into
mov
xchg
bound
mov
inc
pop
repnz
sbb
ja
cmp
sbb
inc
or
push
addl
aad
ficomps
fisubrs
loopne
mov
push
mov
hlt
in
scas
out
mov
pop
jae
notl
cltd
or
test
fisubs
rorl
stos
mov
mov
cmpsb
imul
cmp
mov
add
pop
push
and
dec
lock
loop
xchg
sub
dec
outsb
mov
out
mov
out
add
mov
inc
jo
call
and
xchg
adc
sbb
scas
cwtl
nop
jl
je
clc
daa
dec
jns
pop
xchg
pushf
fstpl
cmc
fnsave
scas
xchg
jo
lea
mov
and
jns
sbb
mov
adc
pop
fdivl
dec
and
subl
pop
jge
int3
xchg
inc
jo
cltd
mov
fprem
fwait
ret
in
inc
loop
test
xlat
push
adc
push
or
push
lods
dec
jae
mov
and
ja
sbb
sbb
sahf
sbb
loopne
and
cmp
xchg
into
insb
nop
les
sbb
or
lret
mov
daa
xor
gs
inc
push
inc
ss
jbe
mov
inc
mov
add
or
aam
fimuls
paddb
out
in
incl
pop
mov
mov
clc
inc
fmulp
mov
aam
sbb
mov
pop
pop
or
out
fxch
es
icebp
subl
lcall
jmp
add
mov
inc
mov
into
sub
jns
fldcw
arpl
adc
add
push
ret
arpl
jg
outsl
push
mov
dec
jne
cli
xchg
mov
imul
stc
cmp
movl
enter
std
mov
loope
loop
mov
mov
stc
aad
cmpsl
mov
sbb
push
adc
and
pop
std
xchg
or
and
stos
xlat
pop
fiadds
aaa
sub
pop
lods
jmp
xor
pop
adc
push
bound
insl
jmp
xchg
dec
jne
sub
inc
lcall
xor
pop
aas
xchg
neg
int
dec
sbb
js
inc
popf
push
enter
cmp
adc
popf
arpl
pop
mov
sti
or
rdtsc
pop
jae
jp
call
pop
movsb
mov
je
outsb
jo
icebp
cli
aam
addr16
mov
enter
loopne
xorl
inc
inc
arpl
rcll
push
popf
ja
out
adc
cmp
sbb
push
adc
hlt
sbb
loope
sbb
sub
ret
addr16
push
ret
pop
pop
sub
pop
cltd
clc
inc
ljmp
push
jmp
sub
adc
dec
xor
inc
add
jae
fs
fnstsw
dec
faddl
inc
je
int3
xor
pop
cmp
inc
sub
push
or
pop
or
out
roll
jne
inc
and
cmp
adc
pop
mov
jmp
fistpl
jns
push
mov
mov
icebp
and
jmp
aas
sahf
idivl
add
mov
dec
adc
lret
mov
bound
push
inc
pop
lock
push
xchg
test
fwait
pop
cli
mov
and
sub
dec
or
into
and
dec
popf
mov
idiv
cld
incl
add
push
scas
push
aaa
cmp
shll
gs
fcomps
sub
add
add
mov
jb
scas
gs
jp
ret
inc
aas
popa
ja
jle
jb
clc
and
and
adc
xchg
sbb
push
mov
xor
fidivrl
cwtl
lods
addl
jecxz
pop
jbe
mov
sub
sbb
cmp
icebp
mov
dec
or
int
movsl
jmp
push
adcb
xor
shll
ja
push
jp
insb
orl
sahf
out
aam
test
std
test
xor
and
aas
popa
adc
mov
in
xchg
enter
sub
les
test
fsts
pop
xchg
sti
xorl
cmpl
imul
inc
xchg
lds
push
loop
or
fwait
stc
adc
or
dec
dec
inc
mov
sub
iret
inc
sbb
gs
orl
or
scas
push
jle
pop
movsl
pop
inc
mov
sub
jge
or
add
jg
insb
sub
pop
clc
loope
aas
imul
pop
fidivl
cmc
pop
xchg
pushf
arpl
divw
push
cmpsl
jmp
xor
sbb
movsb
jp
xchg
fs
inc
xchg
loopne
movsl
add
jne
shl
mov
clc
pop
sbb
fcmove
pop
sbb
mov
data16
and
mov
push
xchg
rorb
jnp
jns
mov
insb
add
or
sub
push
dec
jne
sbb
xchg
or
bound
mov
out
repz
jbe
rcll
out
jae
cltd
pusha
push
lods
pop
int3
inc
xchg
sbbl
movsl
dec
repz
push
outsb
mov
xor
test
test
shlb
mov
dec
aaa
adc
cwtl
outsb
cwtl
push
and
and
adc
sub
clc
mov
scas
dec
xor
iret
fldt
dec
xchg
sti
dec
stc
adc
cmc
decb
leave
cmpsl
pop
add
cmp
mov
pop
dec
cmp
test
fadds
jbe
xchg
dec
jne
sub
scas
jo
rcrl
dec
cli
mov
or
fs
adc
iret
adc
sbb
jge
test
and
adcl
int
dec
xchg
xchg
add
sbb
imul
push
pop
sub
xchg
iret
xchg
mov
orl
adc
xchg
sbbl
mov
sub
or
ja
hlt
shll
jnp
daa
xor
inc
adc
push
fnstenv
or
pop
pop
bound
sbb
inc
in
imul
or
popf
adc
loop
mov
out
jmp
jne
bound
pushl
add
cs
push
cmp
cld
insl
jmp
sbb
arpl
xor
xchg
sbbl
clc
shr
insl
inc
push
inc
sbb
or
mov
mov
inc
xchg
mov
test
fmulp
xchg
ficomps
inc
and
cmp
sbb
add
xchg
sub
xor
shl
or
scas
stos
sub
hlt
sbb
mov
pop
ds
stos
dec
std
ror
or
xchg
inc
pop
or
cmp
xor
icebp
rcrl
lods
xor
lds
dec
test
pop
xchg
cmp
push
xor
inc
add
in
and
mov
into
insl
cmp
mov
test
pop
icebp
outsb
test
jl
cmp
enterw
cmp
sbb
sahf
xor
js
js
leave
xchg
mov
cli
lahf
loope
jl
sub
notb
jge
cmp
pop
out
adc
mov
sbb
xchg
loope
and
push
les
sbb
pop
fmuls
xchg
mov
mov
aam
std
loope
stc
xchg
xor
xor
mov
stos
xor
xlat
mov
jge
push
jae
jb
stc
add
stos
pusha
dec
stos
sbb
sub
pusha
cmp
push
stos
dec
inc
push
add
sti
dec
pop
or
mov
es
jmp
mov
or
sar
imul
imul
out
xchg
icebp
push
push
das
dec
dec
fimull
mov
andl
aad
imul
jno
enter
sub
and
ficoms
jle
in
push
add
imul
test
jge
shll
dec
scas
mov
mov
jne
push
pop
inc
repz
and
pusha
xchg
mov
push
leave
jb
lret
adc
aam
orl
fdivr
in
or
movsb
mov
inc
scas
inc
pop
sub
mov
cvtps2pd
or
pop
aam
cs
and
sbb
int3
dec
or
push
fdivrs
jno
jbe
or
xchg
jge
ja
and
or
push
add
mov
add
mov
repnz
popl
push
in
hlt
bound
inc
or
cmp
xchg
fsubrs
mov
or
ret
std
push
sub
push
cs
sarl
adc
loopne
je
in
add
jle
movsb
pop
fwait
sub
inc
mov
int
mov
loopne
add
or
test
hlt
add
push
mov
frstor
enter
mov
pop
arpl
push
es
push
sub
test
jmp
mov
cmp
aad
pop
sbb
xor
outsl
push
push
pop
lahf
lret
popl
add
inc
jbe
and
mov
test
repz
rcrb
in
add
xchg
mov
lods
outsb
inc
adcb
lret
inc
xchg
in
loope
and
and
xchg
int
cltd
je
adc
push
rorb
repnz
add
mov
outsb
roll
mov
rorb
dec
cmpsb
xchg
add
or
dec
and
mov
dec
mov
lret
add
dec
mov
and
xchg
mov
xchg
cmpsb
outsb
int
mov
push
in
in
mov
add
inc
sub
aad
in
in
push
pushf
inc
fidivl
dec
dec
out
stos
pop
dec
lods
dec
ds
lock
adc
in
stc
ret
ret
clc
push
sahf
and
lcall
adc
push
or
icebp
addr16
push
cs
inc
xor
inc
stc
movsl
xor
or
fidivl
in
lea
rorl
in
xor
cld
dec
sbb
fcoml
pushf
cltd
inc
or
cmp
push
adc
or
icebp
sbbb
xor
or
cmp
jnp
jge
mul
mov
rcrl
jae
push
aas
xchg
pop
adc
int3
scas
std
out
mov
jp
loope
add
in
lret
or
push
pushf
inc
aas
inc
sbb
insl
mov
les
loope
xor
fwait
xor
and
fisubrl
fldl
mov
xchg
neg
cltd
enter
cli
imul
ret
mov
mull
std
push
sahf
sub
dec
sub
lret
fs
sbb
push
or
lret
sti
js
je
adc
fildll
dec
test
pusha
jmp
sbb
icebp
cs
pop
pop
fmulp
dec
cmp
lahf
cltd
mov
pop
cmpsl
cmpsl
cmp
mov
adc
or
jb
jmp
mov
shrb
cmp
and
and
jae
jmp
mov
push
cmp
jg
fiaddl
jp
cli
gs
les
jnp
mov
shr
fcoms
mov
lods
rolb
call
rol
ror
test
jg
or
fstpl
stos
mov
dec
mov
lret
xor
loop,pn
loop
or
outsb
scas
gs
mov
bound
sub
mov
xor
repz
cmpsl
cmp
lahf
clc
mov
in
out
xchg
xlat
shr
js
push
in
jne
inc
es
pop
imul
fists
in
jg
outsb
push
std
lock
sub
lret
out
pop
mov
jne
mov
ljmp
pop
stos
lcall
jb
les
outsl
enter
aad
mov
xchg
or
icebp
push
gs
push
sub
ficoml
mov
lret
xor
push
cmp
pusha
xor
sub
jmp
mov
cli
cmc
push
and
mov
cld
pop
xchg
daa
sub
or
aad
mov
fdivs
jl
sbb
xchg
sub
ret
call
jmp
and
and
out
je
adc
lock
test
sub
sbb
add
mov
sbb
mov
push
test
out
jl
daa
inc
std
jmp
sti
mov
stos
cmpsb
mov
xchg
push
lea
jl
test
fst
fildll
insb
sbb
mov
rcll
pushf
int
je
dec
add
lret
adc
pop
pop
jmp
pop
aam
fiaddl
or
add
cmp
jl
jmp
movsl
jns
adc
mov
dec
add
sbb
xor
or
dec
mov
outsl
clc
stos
es
and
fldl
movsb
or
stos
sub
fidivl
loop
stos
xlat
sbb
jmp
aad
fsts
jge
and
leave
mov
cmc
in
jns
lds
in
fldl
sbb
test
rcl
cmp
popf
cmp
pop
add
hlt
or
inc
int
addr16
fdivl
lret
xchg
aaa
mov
pop
adc
xchg
jle
xchg
ffree
sub
dec
clc
fimull
aad
mov
cld
xor
sub
ds
jle
lea
inc
xlat
mov
sub
stos
jge
sub
mov
loop
testl
mov
cwtl
jb
test
inc
cld
cwtl
insl
mov
decb
mov
push
cmpsl
aam
add
add
fldl
xchg
insb
or
ficoms
inc
jne
movsb
outsl
or
add
mov
sarb
xor
mov
jecxz
iret
sub
lret
mov
sbb
clc
mov
gs
stc
dec
mov
in
jbe
scas
pop
mov
call
test
enter
sbb
add
cmpl
enter
inc
jl
mov
xchg
or
sbbl
push
into
sub
fmul
lds
outsl
das
push
ds
sub
scas
movsb
jb
adc
test
outsb
inc
imul
xchg
xor
repnz
les
mov
mov
mov
mov
cld
int
xchg
stc
mov
cmpsl
push
or
push
insl
xor
or
mov
xor
aad
jae
add
adc
mov
cmp
insl
mov
mov
aas
je
xchg
mov
aad
mov
aaa
out
dec
sub
mov
or
lcall
mov
or
out
ds
pushf
xor
push
fisttpl
add
jmp
inc
mov
mov
pop
and
cwtl
mov
dec
and
push
cld
adc
mov
jecxz
cmp
push
ss
cmp
hlt
test
mov
je
xor
xor
out
ret
loopne
or
mov
cmp
add
and
push
push
in
cmp
outsl
rclb
sbb
add
sahf
push
cmp
mov
insb
pop
aas
cmpsb
jl
iret
insb
and
push
cwtl
pop
enter
outsl
inc
mov
pop
fnstenv
adc
add
inc
inc
sub
ret
pop
arpl
and
pop
mov
xor
lret
sub
sub
in
push
cli
xor
inc
cmova
fs
sti
inc
sti
in
dec
xchg
push
mov
jp
dec
xchg
xchg
pop
gs
loope
jl
aas
pop
roll
push
movd
les
mov
bound
xor
xchg
xchg
and
mov
xor
mov
idivb
cmc
pusha
fsubrs
pop
xchg
adc
cs
hlt
cli
cmpb
ret
jmp
add
loope
clc
adc
sbbl
adc
jno
dec
out
ds
add
ret
adc
xchg
lock
sub
jo
xchg
ficompl
xchg
jbe
add
pop
repz
adc
data16
xor
adc
mov
mov
jge
and
mov
loop
xor
outsb
adc
inc
pop
sbb
cmp
xchg
fwait
xchg
rclb
ss
sub
loope
cmp
lret
les
mov
aaa
data16
xor
cmp
roll
push
decb
push
xchg
inc
jo
mov
insl
dec
mov
lret
lock
call
mov
imul
aas
aam
repz
push
mov
inc
dec
push
or
mov
xor
xchg
arpl
test
iret
push
lods
into
loopne
xchg
cmpsl
jne
sub
int3
or
sbb
jg
push
lock
sahf
stc
pop
jno
or
call
sbb
sub
pop
out
dec
cwtl
lahf
in
cmp
cmp
mov
jno
pop
dec
mov
jmp
push
xor
daa
mov
mov
jecxz
ds
sahf
enter
xor
xorb
filds
push
shrl
jae
push
and
int3
or
pop
sub
outsl
inc
jmp
scas
push
xchg
xor
ret
adc
and
pop
scas
lods
push
clc
mov
lahf
xor
cmp
jne
mov
jmp
aam
push
cld
out
cwtl
push
loope
pushfw
js
jbe
fimull
movsb
dec
popa
insb
dec
lds
dec
cwtl
sti
aad
ficomps
leave
pop
push
test
or
fidivs
inc
pop
cmpl
test
xchg
cld
dec
pop
aaa
inc
imul
das
enter
pop
dec
lock
in
das
es
aas
popa
es
xor
mov
mov
or
sub
in
les
insl
ret
out
movsl
stc
xor
movsl
mov
and
mov
xchg
sbb
sub
ss
and
cmpl
int3
mov
adc
test
lods
mov
jge
push
inc
fdivs
inc
pop
adc
pop
sub
sbb
mov
sahf
cmp
jo
mov
aam
adcb
out
ljmp
push
jl
jmp
cmp
movsb
lods
sub
cmp
jns
adc
cmc
push
test
gs
and
mov
jmp
clc
jne
jmp
cmpsb
cmc
pop
adc
lods
xchg
outsb
sti
jg
push
repnz
das
or
cmp
adc
cltd
negl
iret
xchg
cmpsl
adc
lret
xchg
pop
clc
cmpsl
push
addl
cmp
mov
icebp
fwait
loop
repnz
xor
dec
popa
inc
sub
cltd
aam
fbld
cmp
push
jb
cmp
into
ror
and
mov
loopne
mov
jmp
ljmp
and
add
in
cmp
sbb
dec
decb
or
mov
in
or
dec
outsb
and
pusha
push
mov
mov
pop
add
mov
mov
mov
movsl
push
enter
cmp
or
test
inc
pop
push
rcrl
sub
rdtsc
clc
push
cmp
pop
xchg
fnsave
dec
add
movsl
std
sti
clc
mov
sarb
sbb
sbb
repnz
push
lock
mov
int
fnstcw
aaa
stc
sbb
daa
jo
or
cmc
push
dec
setae
or
mov
repz
and
sarl
ret
or
dec
inc
lea
cs
and
ret
inc
mov
ficoms
mov
sbb
movsb
pop
adc
rcrl
sub
sahf
pop
js
dec
cwtl
add
mov
jbe
or
sub
jmp
sub
ret
cltd
mov
sub
jl
enter
int3
mov
pop
sbb
pop
scas
mov
add
mov
lods
jne
cmp
cli
inc
adc
jp
xchg
shr
fistps
push
mov
sbb
rcll
or
pop
jae
pop
rcrb
out
je
jp
cli
mov
jecxz
scas
pop
jle
cmp
clc
xchg
fnstenv
les
push
mov
iret
in
and
sub
inc
mov
inc
inc
xchg
out
je
cmpsb
pop
orl
and
shr
dec
lret
test
outsb
push
inc
cltd
popf
or
in
nop
cmp
sbb
pop
cld
test
push
imul
pusha
jb
cli
and
mov
cld
cmp
or
out
sti
xor
testb
ret
in
sub
pop
sbb
cmp
push
stos
jae
push
add
test
xchg
pop
aas
popf
cwtl
insl
add
addb
push
mov
push
loop
mov
adc
jmp
pop
ds
lea
cmp
mov
sub
ss
mov
movsl
push
mov
add
sub
ja
je
icebp
jns
xchg
incl
or
js
xchg
pusha
adc
clc
push
xchg
pop
leave
xchg
aas
imul
ret
in
cmp
cmc
pop
clc
mov
mov
xchg
or
jb
mov
inc
mov
adc
shrb
ficomps
out
sub
inc
adc
mov
pop
mov
imul
lods
mov
dec
jo
fldl
mov
and
pop
pcmpgtw
adc
sub
sar
mov
cld
dec
or
loop
cld
imul
push
fdivs
push
ret
push
rcll
popf
test
repz
xchg
mov
jp
push
adc
jmp
mov
ljmp
fnstsw
and
pop
in
aad
cs
jo
xor
adc
pop
notl
ljmp
sbb
imul
jg
cmpb
or
sub
adc
jp
sbb
mov
je
add
jb
sub
adc
jns
sbb
repz
sbb
xor
add
mov
ss
jns
inc
xchg
fidivrl
and
mov
outsl
dec
outsb
sahf
push
aad
inc
out
and
in
jb
inc
pop
jnp
add
lret
inc
xor
imul
repnz
cmpsl
std
mov
xchg
fcoml
dec
sub
adc
lock
out
cmp
leave
pop
mov
push
repz
idivb
xchg
je
fbstp
cmp
inc
inc
stos
jle
lret
addr16
mov
lcall
mov
jo
push
jnp
xchg
outsb
jg
mov
dec
mov
sahf
test
imul
enter
push
xchg
subl
cwtl
mov
xchg
lret
dec
sar
fadd
mov
dec
or
pushw
out
pop
dec
push
xor
adc
cmpsb
xor
test
push
jnp
mov
cs
icebp
outsb
pop
xchg
pusha
push
cmp
leave
xor
fs
cmp
dec
ja
cmp
dec
inc
push
cmpsb
stc
pusha
test
mov
nop
xor
in
push
cmp
fwait
mov
push
mov
fildl
loop
mov
and
push
mov
adc
mov
loop
out
loope
dec
inc
clc
mov
fldenv
cli
add
mov
inc
daa
loopne
jno
data16
clc
in
cmpsl
shll
fdivl
add
pusha
inc
xchg
lret
in
push
in
jno
inc
andl
pop
in
add
jp
incb
pop
daa
rorb
dec
bound
cmc
inc
je
push
lret
loop
ss
rcll
lret
cltd
in
cmp
dec
out
roll
stos
push
xchg
aas
mov
ds
aam
cmpsl
hlt
sub
pop
xor
xor
loopne
sbb
test
dec
mov
xor
inc
inc
shrb
fstp
xor
sbb
aaa
sbbb
lods
sti
in
push
cmp
stos
ret
mov
mov
popf
adc
mov
in
mov
pop
fnstsw
xchg
cmp
mov
lret
or
pop
out
and
pop
popf
jnp
movsl
push
outsb
test
xchg
lret
jp
cmp
negl
data16
adc
jno
es
pop
test
jo
mov
xor
sub
mov
in
adc
test
cs
dec
xchg
mov
mov
aam
lret
mov
push
test
pop
push
arpl
or
ret
vcvtsi2sdl
push
jmp
xor
pop
mov
cmc
js
shll
or
cmpsl
loope
xchg
add
xchg
lods
leave
sti
fstpt
and
push
mov
je
lret
mov
bound
adc
jae
sub
icebp
cwtl
add
nop
repnz
lret
pop
push
inc
stos
inc
mov
gs
fistpl
jecxz
test
sub
mov
mov
jbe
xchg
pop
cmp
ss
and
out
push
cltd
inc
in
jg
lds
js
push
fadds
mov
dec
leave
jo
mov
lock
xor
xchg
mov
hlt
or
xor
cmpsb
hlt
je
push
xlat
stos
mov
iret
popf
enter
mov
std
jns
rcr
jg
mov
xor
popl
jle
sti
mov
push
dec
int
stc
sub
movsl
sahf
xchg
popa
push
mov
insl
mov
adc
xchg
das
push
sub
inc
sub
test
cmc
adc
and
xchg
out
or
pusha
inc
sbb
cmp
sub
or
outsb
mov
pop
repnz
xchg
add
out
sbb
pop
cmp
xchg
and
cmpsl
repz
jne
lock
or
push
sahf
adc
dec
sbb
hlt
pop
pop
lcall
lods
mov
cmp
icebp
mov
stos
inc
insb
stos
pop
or
pop
jbe
cmp
inc
cmpsl
xor
sub
movsl
jmp
cmp
pop
jg
mov
pop
adc
movsb
fisubl
xchg
xor
push
xchg
push
neg
insl
lea
pop
mov
das
stc
cs
sbb
add
cwtl
stos
xchg
xor
add
fbstp
popf
and
shll
sub
push
scas
sub
cs
div
dec
xor
lds
in
clc
jo
pop
leave
pop
repnz
dec
sbb
and
int3
fwait
mov
and
dec
jno
cmpsb
test
mov
dec
inc
pop
cmp
repz
sbb
fldcw
cmp
xchg
fiaddl
mov
add
imul
out
hlt
mov
jg
and
mov
fs
out
daa
pop
push
test
sub
add
push
test
data16
xor
ja
jmp
jno
insb
xchg
dec
adc
testb
lcall
mov
sti
xor
mov
daa
ljmp
sbbl
sub
cld
dec
mov
imul
in
arpl
adc
gs
decb
sbb
iret
psraw
fistpll
clc
call
loope
fmul
insl
nop
adc
pop
pop
sub
outsb
mov
jbe
or
lea
adcl
cmp
add
cs
hlt
cmpsb
cmp
pop
xor
mov
pop
jecxz
stc
leave
mov
cltd
lods
xor
fadds
repnz
push
fidivrl
imul
xchg
inc
cwtl
rcrb
sbb
in
sbb
sub
or
xchg
or
jmp
inc
std
fistpll
test
mov
jae
jle
scas
sar
cld
xchg
imul
daa
hlt
mov
mov
jnp
lret
ss
repnz
push
lock
pop
in
jle
out
stc
pop
push
jbe
inc
adc
gs
mov
cmpsb
movl
add
cmc
mov
cmpsl
inc
add
mov
sbb
loop
adcb
in
xorl
into
arpl
test
cmp
xchg
outsl
mov
pminsw
iret
ja
ljmp
push
sbb
or
push
cwtl
iret
stos
jl
lods
mov
sub
movntps
add
adc
jns
inc
js
bound
idivb
push
insb
hlt
movsb
mov
loope
jno
ja
cmp
lret
call
arpl
lahf
out
lret
popl
add
adc
mov
cmpsl
jl
daa
xor
cmpsl
dec
pop
sbb
cmp
and
in
push
imul
mov
jns
xchg
cmp
push
dec
inc
inc
hlt
push
mov
add
and
mov
inc
push
in
sub
int3
push
pop
mov
inc
pop
in
mov
scas
cltd
xchg
sub
in
insb
hlt
ljmp
sub
les
and
cmp
sar
fimull
daa
lret
mov
faddl
xchg
push
adc
ds
xchg
sub
addb
or
adc
and
add
and
push
jnp
cmp
cli
push
dec
cmp
lahf
fistpll
xor
pop
fnstenv
call
mov
in
xchg
ret
scas
movsb
es
mov
jle
into
jge
or
pop
loop
loope
mov
pusha
fcoms
adc
pusha
sub
mov
orb
or
mov
push
adc
mov
push
inc
ja
add
sub
fs
lret
push
mov
add
lret
mov
xchg
pop
mov
and
pop
lret
sbb
mov
aaa
jp
lahf
popa
pop
pop
insl
cmpl
sbbl
pcmpgtd
call
xchg
cltd
stc
fimuls
dec
outsb
popf
pop
in
sub
std
push
push
cmc
mov
lods
decb
aas
dec
sar
loopne
mov
add
and
gs
xchg
xor
js
mov
mov
std
sarb
fwait
mov
into
cmp
mov
lea
push
jl
stos
data16
daa
mov
stos
lahf
fdiv
cmc
jb
mov
cltd
mov
dec
cli
mov
dec
xor
pop
add
xchg
hlt
xorb
dec
popf
mov
lods
icebp
incl
test
cmp
out
push
push
push
gs
cmp
add
mov
pushf
addb
imul
ret
mov
xchg
cmp
dec
out
inc
cmp
daa
in
mov
jae
mov
xchg
stos
dec
imul
daa
fisttpll
aam
xchg
je
mov
sub
es
cmp
bound
aaa
ret
iret
mov
inc
add
js
or
fwait
and
mov
or
cmpsb
mov
nop
cwtl
xchg
fdivr
lret
cmp
mov
mov
fprem
enter
sbb
mov
arpl
dec
jo
cmp
cmc
mov
sub
cmpsl
push
test
and
out
out
outsb
pop
lea
inc
xchg
mov
xchg
mov
jl
inc
mov
mov
inc
mov
repnz
stos
out
jmp
dec
pop
nop
inc
jbe
push
lcall
or
movsb
int
in
lcall
shlb
nop
pop
int
addr16
lds
lcall
movsl
push
cmp
sbb
add
jp
sbb
dec
in
inc
clc
mov
ss
push
test
cmp
sub
mov
sbbl
or
movsl
pop
inc
mov
hlt
lods
movsb
aam
add
push
stos
xchg
dec
mov
mov
ss
pop
pop
aas
scas
mov
fsub
push
lods
out
mov
push
cwtl
cwtl
sub
dec
shlb
xchg
cmpsl
lock
dec
cld
js
in
mov
dec
test
push
jno
dec
xor
push
mov
cmp
inc
rcl
xor
mov
test
push
mov
iret
cld
es
inc
xchg
fincstp
or
inc
ja
cmp
adc
decb
or
add
add
add
popa
mov
sbb
ficoms
loope
jb
data16
les
add
pop
pop
loope
dec
into
hlt
outsl
push
xlat
xor
mov
dec
mov
sub
andb
cld
repnz
sarb
mov
xor
cld
cltd
mov
cwtl
jg
sbb
mov
push
pop
mov
add
lods
xchg
out
adc
in
mov
push
jge
xchg
dec
test
in
pop
pop
mov
mov
bound
inc
dec
test
dec
and
call
into
stc
gs
lret
mov
push
fs
lret
iret
loope
cmp
imul
ret
push
daa
inc
jp
jae
adc
inc
gs
movsl
idivb
sub
jnp
clc
repnz
loopne
push
inc
fnstcw
popf
movntq
in
in
jnp
test
xor
xchg
dec
mov
xchg
push
int3
mov
movmskps
jno
push
imull
aam
ss
xor
ljmp
daa
and
jp
popf
inc
enter
inc
sarb
push
sbb
push
dec
mov
nop
pop
popa
test
sbb
or
cmpsl
jns
pop
fidivrs
xor
hlt
jge
mov
mov
mov
outsl
xor
inc
xor
add
dec
incl
mov
add
ss
test
and
lret
rorl
outsb
popa
pop
addr16
roll
clc
cs
aad
dec
aas
insb
mov
cmpsl
fs
outsb
fld
and
cltd
jecxz
gs
mov
insl
aad
mov
sti
jns
dec
lods
scas
out
outsb
jns
inc
xor
pusha
in
movl
xchg
leave
faddp
ret
data16
addr16
cs
sarl
test
mov
imul
cli
sub
or
mov
cmp
sub
pushf
mov
insl
movb
leave
insb
cmp
xchg
outsb
dec
cmp
add
fdivrs
cmp
inc
pop
out
ret
adc
cs
insl
add
push
lods
dec
ret
in
push
imul
aas
sti
pushl
jno
xchg
imul
or
shll
dec
mov
adc
pushf
fildll
aam
aas
xchg
inc
cmp
sub
jle
mov
aaa
add
je
ret
push
push
mov
les
lock
pop
pop
cmp
dec
mov
call
cmp
in
mov
dec
insb
dec
push
mov
lods
mov
hlt
roll
leave
pop
mov
and
mov
jmp
cmp
mov
je
inc
sti
int3
lcall
mov
movsb
js
jne
movsl
cmpsl
pop
xor
xchg
add
mov
and
sub
cmpsl
xchg
adc
and
cmp
push
dec
add
lods
in
dec
mov
ret
mov
mov
cmc
and
notb
sbb
and
xlat
je
jge
in
insb
ljmp
test
xchg
lods
mov
lcall
pop
cmp
adc
push
or
fbld
and
push
hlt
pmaddwd
les
mov
outsb
hlt
mov
iret
xor
nop
pop
pop
pop
xchg
cs
not
in
sahf
cmp
cmc
jmp
mov
pushf
aaa
aas
xor
and
fistpl
xlat
rcl
xor
shl
nop
jns
xchg
mov
in
movsl
leave
pop
idivb
mov
shll
push
test
jecxz
rcr
gs
imulb
mov
imul
dec
push
loop
inc
fnsave
aas
imul
jle
test
into
mov
negb
ljmp
pop
xchg
adc
out
inc
jmp
mov
dec
push
movsb
iret
les
movsl
add
pop
stos
push
pop
fstpt
in
mov
xchg
test
xor
sbb
jno
enter
lret
in
push
mov
jmp
cmp
jo
push
xchg
leave
push
mov
mov
dec
out
and
jnp
insb
ret
xchg
enter
adc
sbb
mov
insl
jne
push
dec
enter
test
andl
mov
data16
lods
jo
cmp
mov
jmp
inc
xchg
jno
cs
add
or
mov
and
test
sub
pop
push
incb
divb
mov
push
shl
jo
cmc
cmc
out
icebp
aam
pop
pop
pushf
int3
sub
add
into
lock
icebp
adc
adc
vunpcklps
pop
adc
gs
push
mov
insl
js
cmp
inc
inc
data16
lret
cmpsl
popf
movl
inc
std
fisubs
push
push
outsl
cmp
bound
sub
bound
inc
inc
mov
xor
pop
mov
jno
lods
cmc
pop
aam
in
scas
mov
inc
dec
out
rcl
scas
shrb
out
and
mov
dec
test
or
shrl
jmp
ja
mov
xchg
and
pop
aad
sub
rcrb
xor
xor
outsl
adc
nop
shlb
adcb
ret
scas
xor
sbb
mov
pushl
and
push
sub
cld
mov
fsubrp
jb
and
mov
cltd
xor
outsl
push
pusha
pusha
adc
inc
mov
rolb
push
pop
orl
jae
test
pop
fwait
inc
add
pop
sbb
lds
xchg
jns
sub
lret
sahf
cmp
push
dec
fdivrs
xor
not
lds
cmp
pop
jmp
notl
dec
shlb
jae
jbe
stos
idivb
jmp
mov
ret
push
je
pop
mov
hlt
inc
cs
aam
and
shlb
int3
push
inc
aam
int3
xor
gs
pushf
or
repz
dec
int3
adc
inc
add
sbb
cmp
loopnew
add
jns
sbb
mov
mov
cmpsb
lods
or
dec
int3
sbb
nop
dec
mov
in
lret
outsl
int
or
or
pop
mov
fcmovbe
xchg
pushf
stos
in
xchg
enter
mov
sbb
pop
mov
popa
pop
push
push
inc
or
aaa
movsb
xchg
mov
out
pop
ror
paddw
or
movsl
loopne
inc
lock
fbstp
mov
sub
std
fadd
in
push
popf
sahf
mov
es
roll
loope
imul
xchg
or
aad
cld
cmp
movsl
jle
lcall
mov
xor
jle
xor
xchg
xacquire
cmp
loope
stos
clc
int3
adc
xlat
push
fneni(8087
iret
enter
lods
cs
pop
jne
xor
add
push
fcmovu
mov
push
cmp
cmp
loop
int3
cmp
jge
ja
push
hlt
cmp
adc
pop
cmp
aaa
mov
repnz
or
dec
mov
or
and
in
xor
cltd
fcmovnb
leave
into
imul
push
inc
mov
filds
sbb
out
es
xchg
and
dec
sub
xchg
add
es
lret
push
outsl
mov
test
xchg
add
and
data16
push
arpl
mov
and
inc
mov
and
rolb
cs
mov
enter
dec
sbb
dec
mov
xchg
and
push
sub
out
mov
loopne
jge
fnstenv
mov
rcll
popf
jbe
pop
popf
sbb
out
clc
in
jge
jb
add
xchg
cmpsl
mov
sti
cmp
mov
ljmp
adc
and
xchg
lret
jb
xchg
ret
mov
hlt
jge
cmp
mov
jl
imul
ja
hlt
xchg
pop
push
and
or
pop
cmp
lret
out
cli
roll
cli
or
ss
push
mov
add
add
jb
add
rcr
testl
mov
lahf
jmp
jg
push
out
mov
lahf
imul
in
sub
shrb
or
loop
xchg
inc
push
mov
push
leave
pop
sbb
mov
inc
mov
cmp
mov
mov
lret
adc
or
add
jnp
mov
mov
movsl
sbb
mov
outsb
stos
mov
xchg
cli
inc
pop
push
sbbl
mov
stos
and
lods
xchg
in
pop
ds
scas
inc
dec
push
mov
gs
daa
push
dec
sbb
sahf
test
cli
in
inc
jns
cmc
and
jo
sbb
ja
lret
mov
call
hlt
ret
push
out
fisubl
fistpl
jl
cmp
ret
rcll
and
cltd
push
pop
sbb
mov
sbb
je
imul
loop
jg
dec
je
push
cmp
ljmp
jns
stos
lret
pop
sub
mov
and
mov
sub
pop
gs
dec
sarb
js
out
into
test
add
xlat
xchg
push
jno
cltd
jecxz
fsubl
xchg
mov
lock
lds
jmp
xor
pop
idivb
mov
push
jecxz
int3
cli
dec
xchg
mov
rcrb
cmp
push
in
pop
lds
jnp
js
call
fsub
sahf
test
jecxz
into
xchg
aas
cmp
mov
hlt
cmp
cmpl
loopne
jmp
push
outsb
push
clc
repnz
dec
test
adc
ja
jmp
inc
or
cmp
push
outsb
sbb
xor
push
sub
or
pop
popf
inc
andl
sub
mov
jge
hlt
scas
arpl
add
add
fwait
lods
cmc
jge
imul
cwtl
jb
mov
mov
add
mov
add
in
add
xor
leave
xchg
xchg
xchg
and
add
add
push
jg
mov
mov
shlb
in
ljmp
xor
enter
push
int3
pop
gs
sarl
push
fs
das
clc
dec
mov
ljmp
subl
gs
pop
stos
and
lcall
jmp
leave
mov
pop
shrl
dec
sub
jbe
sub
pop
subl
mov
in
bound
mov
int3
mov
mov
push
sub
iret
add
orl
fsub
xchg
outsl
outsl
push
add
fdiv
notl
sub
faddl
dec
sbb
and
movsb
dec
push
inc
add
in
mov
and
add
jae,pn
stos
mov
add
insb
cmpsb
clc
mov
push
xchg
pop
test
push
out
icebp
or
leave
in
int3
fdivrp
std
rcll
lock
clc
outsb
mov
lods
mov
jbe
in
mov
inc
mov
divb
jno
fnstsw
add
pushf
pop
xchg
and
xor
fwait
sti
imul
add
inc
mov
test
push
mov
jg
sbb
int3
test
and
add
call
pop
xor
scas
inc
push
xlat
ds
cmp
push
lock
jne
pop
arpl
mov
inc
outsb
jo
lret
ds
sub
mov
pop
and
enter
das
mov
cmpsl
call
inc
ljmp
xrelease
test
and
arpl
call
or
pop
and
add
mov
inc
movsl
out
mov
popa
sub
mov
call
fmul
mov
and
idiv
sub
sbb
enter
cltd
mov
push
xorl
or
pop
std
add
mov
sbb
or
fisubrs
push
pop
sub
add
mov
sub
inc
stos
push
ds
mov
outsb
pop
adc
cli
aad
dec
fisttpl
sub
loop
dec
imul
mov
mov
bound
aad
pop
mov
and
or
mov
aas
aaa
jae
std
int
fcompl
leave
xor
sub
push
lea
xchg
ljmp
out
dec
stos
out
or
repnz
jno
or
pop
push
push
ss
lods
mov
xchg
cmc
adc
fistpl
add
bound
arpl
push
mov
jmp
cs
jle
nop
inc
xor
cmc
mov
mov
jge
sbb
jae
iret
mov
stos
stos
xchg
lods
push
mov
push
lds
mov
out
cmp
shll
frstor
jo
xlat
ljmp
add
fs
adc
xor
sbb
cmp
and
outsb
aad
cmpsb
inc
xchg
nop
addr16
lods
jno
lret
sub
push
sahf
or
roll
cmpsw
mov
lahf
stc
shlb
insb
in
iret
cmp
in
movsb
or
xchg
cli
movsl
sahf
inc
pop
xor
and
add
mov
daa
lret
fwait
cli
addr16
repz
cmpl
mov
fs
xchg
fsubrs
shrb
pushl
xchg
insl
das
jb
pop
sbb
mov
das
inc
sub
push
or
int
jae
bound
jl
pop
cltd
xor
js
or
aad
adc
mov
jae
fstl
push
lcall
out
repz
mov
xor
rorb
pop
mov
stos
fldcw
add
inc
sub
pusha
inc
add
lds
jmp
mov
mov
xor
jl
and
mov
jb
mov
mov
loop
pop
push
sar
imul
mov
push
dec
iret
mov
das
mov
inc
loopne
sub
mov
test
mov
hlt
xchg
test
sbb
ror
repnz
adc
stos
cs
push
pop
mov
or
fstps
xor
pop
sbb
les
jmp
test
lods
push
and
mov
jb
mov
inc
cmp
sahf
ja
rcll
jae
sahf
mov
pop
inc
xchg
xchg
sub
lahf
mov
cmp
mov
movsb
cltd
scas
cmpsb
fs
xchg
cmp
sbb
ret
dec
mov
push
lret
ret
lds
aam
mov
loope
xchg
ret
pushf
popa
leave
add
xlat
addr16
leave
in
push
jmp
adc
into
iret
js
push
xlat
or
sbb
pop
pop
aad
pusha
jnp
mov
and
inc
out
out
dec
dec
sti
xor
scas
aad
and
dec
pop
sarb
repnz
je
lret
jecxz
enter
arpl
imul
mov
dec
mov
jo
dec
xor
inc
enter
iret
pop
cmc
cmpsl
ja
fsubp
daa
int3
fs
dec
fwait
popa
mov
and
adcl
ficomps
int3
pushf
jae
sbb
cmpsl
adc
sub
jmp
add
push
leave
mov
rclb
or
push
sarl
aaa
mov
jb
dec
mov
mov
push
cltd
test
inc
add
lds
arpl
outsl
sbb
pop
or
test
dec
daa
mov
cmp
xchg
ljmp
les
das
xor
add
xchg
jle
sub
orb
inc
enter
mov
mov
mov
jno
daa
or
pop
jg
pop
sub
call
dec
das
xorb
inc
mov
sub
sbb
mov
hlt
mov
push
add
je
fsubrs
push
negl
inc
fildl
shll
fadd
adc
in
lea
sahf
inc
sbb
iret
mov
fistl
add
inc
cli
ss
dec
sar
pop
inc
jmp
mov
push
mov
adc
dec
mov
add
cmp
imul
mov
sahf
lock
mov
pop
in
dec
mov
inc
mov
loope
pop
lea
call
out
rorb
daa
pop
daa
mov
fs
sti
xchg
dec
mov
test
xchg
add
mov
mov
popf
mov
mov
push
jno
call
sti
push
push
push
hlt
mov
pop
jl
imul
push
push
mov
push
inc
xor
or
fdivs
fwait
mov
dec
fldenv
cmpsl
cmp
lods
rorb
cmovs
popl
adc
sti
jg
movsl
mov
sub
or
jp
or
jl
add
jae
aaa
in
iret
mov
lcall
adc
or
cmp
call
push
jmp
loope
pop
cwtl
or
xchg
lahf
mov
outsl
push
mov
cmpsb
sub
js
mov
mov
lods
aas
insl
push
add
xchg
cld
sub
jmp
dec
jae
inc
cs
adc
js
out
inc
sub
out
xchg
cmp
int
hlt
in
sub
fs
cltd
mov
dec
xchg
or
pusha
sub
sub
nop
or
sbb
jo
andb
fimuls
aam
xor
fnstsw
orl
adc
ds
adcb
inc
sbb
jl
dec
sbb
dec
test
stos
or
repz
sbb
popf
sbb
mov
sub
jge
out
mov
leave
mov
sti
mov
jmp
dec
imul
arpl
cmp
loope
mov
std
cmc
push
xor
xchg
outsl
sbb
fs
jle
dec
jne
xor
imul
fildl
lods
fistpll
fsubrl
fs
fadd
lea
inc
jp
nop
ret
nop
adc
cmp
adc
cmp
dec
cmp
sbb
addr16
push
pop
mov
or
movsl
mov
adc
aam
mov
test
pop
es
inc
cmp
jbe
push
rclb
pop
or
lret
dec
adcb
mov
loop
bound
mov
sahf
test
iret
push
jecxz
sbb
fistpl
push
mov
pusha
pop
push
mov
jb
push
sti
mov
inc
leave
loope
xchg
jg
mov
arpl
and
mov
pushl
sarb
outsb
movsb
mov
insb
pop
jge
dec
jbe
jae
fs
ljmp
mov
fcos
push
jmp
sub
pop
xchg
xchg
orb
dec
outsl
jp
ret
sbb
out
or
jnp
sbb
stos
rorl
lahf
and
idivl
fistps
je
cmp
cmp
int
adc
pop
loopne
test
test
pop
or
pop
jns
int3
mov
inc
fidivrl
in
or
sbb
mov
pop
add
fdiv
pop
sar
cmp
xlat
dec
lret
scas
cmp
addb
sub
lods
sbb
aas
repz
push
in
pop
lods
loope
loopne
sub
pop
bnd
pop
repnz
scas
adc
in
aad
fistps
inc
add
sbb
iret
rcrl
xchg
mov
insb
lds
cli
movsl
fldenv
test
fidivs
sbb
test
outsl
mov
stos
inc
mov
mov
cmc
pop
mov
inc
lahf
pop
outsl
add
test
call
repz
nop
stos
sbb
mov
mov
push
cmp
ret
xchg
xor
out
pop
xor
pushf
shlb
push
inc
test
sub
clc
cmp
arpl
stc
in
sahf
sub
imul
es
sub
jns
xchg
push
test
shll
mov
dec
inc
scas
xchg
jne
mov
adc
movsl
aas
mov
ljmp
imul
jae
mov
cli
xor
add
push
add
mov
inc
shl
ret
ss
pushf
imul
insl
xor
push
es
cmp
inc
shrl
clc
pop
mov
and
cmc
inc
add
dec
mov
pusha
dec
sbbb
pop
or
lret
jns
stos
xor
inc
lret
hlt
mov
mov
add
jno
jmp
dec
or
jno,pn
or
mov
imul
xchg
jae
mov
adc
rclb
out
pop
or
sbb
lea
ffree
data16
in
jecxz
aaa
xchg
xchg
inc
ja
es
stos
mov
scas
inc
aas
cmp
push
cmp
or
outsl
xor
outsl
popf
xchg
shll
pop
and
xchg
int
stos
adc
loopne
mov
jno
mov
and
in
arpl
sahf
mov
mov
inc
iret
test
fisttpll
ret
dec
and
mov
sbb
mov
sub
sub
imul
add
adc
mov
mov
xchg
adc
lea
cmp
imul
ss
or
dec
adc
or
fsubr
sbb
pushf
xchg
es
mov
cmpsb
rcl
and
add
es
leave
add
adc
fldcw
sub
in
popf
or
cmpsl
pop
jg
inc
rorl
loop
shrl
sub
sbb
dec
in
aam
lret
lahf
mov
ret
add
sti
daa
clc
ror
test
mov
ja
mov
push
mov
and
test
je
mov
fistps
mov
xchg
add
pop
cmp
xchg
mov
adc
loope
stos
icebp
mov
xchg
sti
cmp
pop
mov
xor
fwait
or
jp
clc
int
stos
out
xchg
xchg
inc
popa
xor
jecxz
aad
xor
pop
mov
int
cmpsb
test
dec
push
and
scas
incl
or
sub
lds
sti
ja
add
add
push
pusha
xorb
sub
lret
ds
and
cmp
cmpsb
push
icebp
aam
nop
sbb
dec
jmp
push
in
mov
push
icebp
in
sub
mov
mov
lret
fwait
mov
mov
push
clc
jae
lock
mov
or
notb
cli
adc
cmc
jge
mov
ret
negl
test
outsb
movsb
xor
xchg
rcll
bound
in
insb
fwait
mov
inc
sbb
adc
clc
shl
fwait
adc
adc
imull
sti
jmp
fs
icebp
mov
xchg
fnstcw
push
jne
call
xor
insl
mov
shlb
xor
pop
push
lcall
imul
ljmp
lahf
cmp
outsb
cmpsb
xor
sti
icebp
sbbb
lahf
insb
or
repz
pop
add
pop
test
mov
or
fiaddl
xor
dec
popa
sbb
xor
cs
gs
loopne
movsb
push
call
je
or
sar
pop
xor
mov
daa
dec
ja
sub
fs
insl
int3
xchg
pop
jle
filds
cmp
xorl
andl
adc
mov
jno
sbb
pop
std
ficoml
cmp
pop
loope
jmp
ss
lea
repnz
sub
mull
push
imul
or
cmp
shll
sub
cs
pop
mov
sbb
nop
es
leave
cmc
repz
pop
shlb
add
mov
add
subb
or
stos
movsl
and
jle
cwtl
lods
sbb
or
fs
pop
jbe
push
les
call
mov
cmp
sub
add
sbb
imul
stos
lcall
into
or
in
pop
icebp
inc
addr16
ljmp
mov
jle
pop
mov
test
je
movsb
jle
mov
jmp
or
dec
lods
jl
cmp
add
jl
fstpl
push
test
lds
mul
nop
sub
int3
cmc
enter
imul
pop
lock
and
pop
cmp
rcl
push
es
dec
mov
aas
cmp
push
repz
insb
xchg
lret
mov
xchg
shlb
xchg
je
mov
sub
lcall
mov
xor
dec
adc
scas
mov
stos
xchg
mov
test
xor
and
cmpsb
xchg
arpl
js
inc
gs
pop
out
inc
mov
mov
jbe
repz
cmp
or
dec
sbb
pop
jo
xor
inc
jl
mov
push
or
sti
xchg
xor
jne
enter
xchg
rol
sbb
or
dec
lcall
js
in
pushf
jge
push
pop
popf
add
pop
push
sub
loop
sbb
loope
push
dec
arpl
mov
test
rcrl
push
cmp
pop
sahf
std
dec
xchg
inc
dec
mov
fidivs
out
shrb
stos
mov
insl
aaa
stos
cli
lds
mov
sahf
rcll
shlb
movsb
bnd
sbb
mov
mov
clc
cmp
pop
ja
pop
testl
mov
mov
div
mov
cmp
mov
mov
imul
xor
hlt
ret
pop
cmp
rol
xor
adc
movsbl
flds
xor
pop
dec
and
outsb
xlat
sub
xor
popa
cmpsl
inc
pop
mov
scas
fiaddl
mov
out
loop,pn
adc
add
mov
ds
push
cmpsb
lahf
or
movsb
inc
sub
hlt
push
xor
imul
imul
mov
xchg
cmp
inc
jecxz
xchg
pop
int3
mov
fcoml
mov
jl
mov
inc
xor
shrb
mov
and
out
adc
push
cmp
stc
xor
sahf
aam
arpl
addr16
cmp
pop
mov
jge
loop
negb
cmp
pop
loopne
sbb
gs
and
shll
sbb
mov
shll
add
ss
js
xchg
push
push
cmpsl
xchg
jb
pop
pop
jmp
sbb
ret
add
add
sbb
xchg
fisubrl
ret
adc
push
add
das
arpl
pop
pushl
lock
sub
jnp
mov
jnp
je
push
test
out
sti
pop
mov
inc
lret
adc
fbstp
out
gs
jp
in
inc
sbb
fwait
mov
andb
jp
cmpsl
xor
in
imul
ds
jb
ss
adc
jmp
fisubrs
cwtl
and
mov
xor
stc
xchg
jmp
ljmp
rcr
dec
push
ret
jne
cwtl
inc
or
adc
or
sub
jb
int3
icebp
insb
ss
xchg
or
xchg
stc
movsb
outsl
sub
mov
pop
ja
insl
add
mov
stos
std
mov
cltd
js
fistps
pop
adc
andb
mov
add
cmpsb
shrb
hlt
in
pop
popa
test
push
not
test
inc
lods
lods
fiaddl
cli
out
push
adc
push
push
pop
mov
sahf
cmp
xchg
movb
test
add
push
sbb
lahf
aam
test
das
mov
loope
push
mov
je
addr16
inc
jnp
outsl
shll
push
ds
sti
inc
mov
push
mov
adc
stos
repnz
add
das
xor
mov
insl
xchg
pop
call
jo
xchg
sub
pusha
sub
fcomps
xchg
mov
mov
or
cmpsl
fldcw
loopne
pop
mov
pop
sbb
clc
mov
xchg
push
insl
pop
pushf
enter
inc
push
loope
sbb
cmpsb
jne
xchg
pop
jle
jns
cs
out
dec
mov
jne
lock
inc
loopne
mov
pop
jmp
xchg
outsb
add
clc
leave
mov
dec
cmp
fcoms
add
iret
lds
pop
sbb
inc
sarb
lahf
lods
sti
stos
sbb
add
jne
test
icebp
repnz
cmp
int3
pop
and
sti
mov
outsl
in
and
xchg
daa
push
inc
call
sub
and
cmp
jnp
jecxz
int3
lahf
lods
prefetch
repz
rorl
out
pop
pop
test
popa
test
psllw
daa
sbb
adc
xchg
xchg
add
fisubrl
in
and
into
mov
sti
daa
cmp
int
mov
std
insl
push
xchg
in
sub
push
mull
dec
push
daa
lahf
inc
pop
aaa
xchg
shlb
lods
subl
bound
mov
nop
arpl
ret
mov
icebp
push
out
dec
add
pop
pop
das
xchg
je
ja
pop
inc
imul
add
push
pop
or
xchg
sub
outsb
out
push
mov
jns
mov
mov
pop
add
adc
push
inc
pop
inc
rorl
lret
mov
cltd
clc
pop
adc
mov
daa
xchg
ss
rclb
adc
cltd
out
test
cmpsb
cmpsb
orl
lock
das
push
pushf
add
loope
cmp
ljmp
rcrl
ret
bound
addr16
sub
add
cmpsb
test
cmp
cltd
add
repnz
cmpsl
scas
mov
xchg
imul
sbb
inc
jmp
or
scas
popa
mov
subl
jns
test
add
clc
jbe
fwait
sub
mov
mov
out
sub
fsts
stc
iret
and
push
pop
push
xor
rcr
mov
jl
rcl
sub
add
mov
ret
std
add
mov
popf
and
adc
fwait
inc
rorl
int3
lods
imul
add
inc
dec
cmp
xchg
pop
outsl
test
mov
call
mov
pop
cmp
mov
sbb
xchg
sbb
xchg
sarl
and
cmp
into
sbb
ljmp
ret
xchg
cld
aam
fadd
out
and
inc
add
sbb
sub
pop
jb
fsubl
xchg
pusha
xor
fldcw
dec
aaa
pop
push
mov
lea
or
cmpsl
xor
movsl
aad
nop
mov
es
je,pt
add
mov
fsubrp
lahf
add
push
xlat
push
divl
push
stos
in
out
add
data16
ljmp
xchg
dec
push
lods
pop
int3
jae
aam
ja
xor
mov
mov
scas
or
adcl
iret
and
int3
adcl
push
dec
jg
or
push
or
jl
jg
mov
das
sarl
aam
jae
and
push
xlat
gs
sub
iret
cmpl
daa
int3
mov
mov
adc
inc
and
iret
lea
sbb
adc
xchg
cmc
js
in
inc
or
inc
orb
je
inc
and
gs
or
bound
jnp
sbb
cmp
xchg
pusha
cmp
repnz
stos
mov
sbb
jne
sub
movsl
jg
mov
arpl
outsl
mov
out
or
mov
mov
mov
push
sbb
sbb
and
inc
sub
dec
xor
sbb
out
mov
fidivl
lods
out
and
lods
call
xchg
shll
mov
or
pop
push
pop
test
data16
cmc
stos
cmp
rorb
xor
cmpsb
mov
cmp
inc
cmc
and
xor
ljmp
std
jb
xlat
popf
shll
and
add
mov
in
jno
push
outsb
test
xchg
pop
push
scas
cmp
repnz
lds
arpl
pushf
rcll
ss
push
inc
movsl
pop
inc
push
loopne
push
inc
jg
popf
in
lcall
jnp
jecxz
sub
dec
movsl
loopne
inc
mov
ja
ret
jge
mov
movsl
cmpsl
je
push
adc
jmp
clc
mov
scas
insl
or
mov
xchg
stos
pusha
data16
es
add
bound
pop
jns
cli
xor
inc
fsubrp
repz
cmpsb
inc
sarl
mov
adc
jnp
xchg
stos
mov
add
and
jbe
mov
mov
or
adc
scas
xchg
xor
dec
in
neg
cmc
lock
and
or
push
lods
loop
mov
push
sub
nop
ljmp
daa
pop
jecxz,pt
add
fchs
push
sub
sbb
or
and
fsin
pop
jge
out
push
xor
xchg
ds
jp
dec
popa
jg
out
aam
sub
xchg
shrb
sbb
imul
adc
bound
lret
js
xor
sti
test
mov
lahf
fwait
lods
pop
ja
or
in
sub
insl
inc
adc
fs
mov
xchg
jb
insb
and
sbb
ljmp
pop
jo
adc
scas
adc
loop
fidivrl
into
sbb
xor
push
inc
inc
shrb
mov
mov
fidivl
mov
and
push
out
mov
nop
dec
push
in
mov
test
push
xor
fadds
int
outsb
rcrl
mov
lahf
xor
dec
push
push
loopne
ss
ja
pop
lcall
sbb
je
lds
adc
ja
mov
clc
dec
xchg
shll
scas
idiv
push
out
es
pop
push
popf
cmp
scas
loopne
xor
mov
inc
add
fnstsw
fsubrl
adc
shl
fbld
inc
ds
sbb
fidivrl
xchg
fmulp
outsl
pop
addr16
cmp
pop
cmp
icebp
cmp
div
dec
jne
addr16
std
inc
mov
mov
dec
push
mov
push
ja
mov
mov
faddp
dec
xchg
pop
adc
cs
push
jmp
xor
push
pop
mov
and
cmp
les
add
pop
in
add
lds
cmpb
movsl
xchg
sub
and
int
daa
adc
jecxz
mov
sub
mov
and
nop
pop
and
and
arpl
pop
addr16
jmp
inc
aam
dec
or
adc
xor
popa
lret
jmp
push
or
shlb
mull
fcmove
jnp
in
sbbb
shrl
das
and
adc
lret
flds
fdivrl
mov
hlt
std
es
inc
in
cwtl
or
cmp
pop
div
push
or
decl
fimull
sbb
iret
add
aas
sub
cmp
addr16
mov
gs
std
dec
ss
filds
mov
and
jae
fsubrl
jne
in
ss
xchg
js
cmp
arpl
xor
mov
data16
lcall
popa
out
ret
xor
add
push
pop
sub
inc
inc
rcll
mov
xor
xor
and
xor
push
mov
dec
in
jle
in
div
and
xadd
add
inc
inc
ret
cld
push
inc
and
push
inc
test
mull
xor
stos
mov
fldl
ret
push
xor
sub
orl
and
mov
dec
dec
mov
jp
loop
repz
lea
pop
mov
fcompl
gs
xor
fnstenv
icebp
aaa
cltd
xor
xor
imul
incb
pop
xchg
cmpsb
mov
pop
inc
push
jne
mov
mov
shrl
xor
lret
mov
jmp
pop
aad
or
jo
mov
hlt
pop
dec
pop
fidivs
mov
xorl
add
or
divb
and
in
scas
jbe
stc
fcoms
jg
lahf
pop
xor
inc
lock
pop
cs
cmpsl
mov
out
shrl
fucomip
add
jecxz
decb
mov
aaa
inc
sub
fists
push
enter
mov
xlat
mov
push
inc
test
pop
jp
cmpsl
pop
enter
nop
gs
sbb
push
jg
push
shlb
incb
xchg
lea
and
in
aam
jl
xor
push
bound
or
dec
lret
test
fistpl
xorb
push
scas
int3
rclb
addr16
stos
or
lret
mov
js
add
mov
phaddd
ret
cmc
jb
stc
sti
dec
mov
mov
xor
adc
inc
sbb
mov
call
sub
and
bound
je
mov
mov
out
notl
stos
shll
fucomp
rorb
xorb
and
iret
popf
js
dec
pop
push
or
xchg
out
and
adc
and
fwait
lcall
daa
push
gs
xlat
mov
jecxz
xchg
mov
sarb
dec
aad
adc
fst
inc
imul
or
in
mov
call
pop
mov
jnp
lcall
jg
stos
mov
xchg
in
mov
mov
aam
push
cmc
in
popf
cmp
pusha
push
je
jno
scas
mov
inc
inc
push
imul
sbb
mov
jbe
add
fcmovnb
mov
push
fnstenv
lahf
loopne
dec
jmp
add
adc
pop
dec
bound
imul
jns
out
mov
mov
mov
mov
pop
hlt
mov
pushf
cmpsl
mov
xchg
js
scas
push
mov
jle
daa
or
or
mov
sub
frstor
sbb
mov
jno
or
scas
repnz
pop
enter
test
js
fdivs
imul
in
fwait
ss
es
je
andl
xchg
xor
mov
popa
andl
dec
fwait
sbbl
mov
push
in
popf
sbb
bound
sarb
test
rcll
in
dec
lods
pusha
mov
sarb
out
popa
add
rol
repnz
sbb
mov
scas
fsubr
or
jl
and
lods
mov
cmp
xchg
cwtl
xchg
mov
lret
leave
aad
inc
addr16
imul
or
jmp
dec
or
jae
sub
cs
adc
mov
cmc
aam
sahf
ret
dec
pop
popf
hlt
imul
out
xor
fidivrs
sbb
ljmp
mov
int3
pop
nop
jno
popf
sub
loop
xor
pushf
xor
test
test
bound
xchg
aaa
out
and
mov
adcb
ss
mov
arpl
and
outsb
in
nop
out
out
xchg
es
and
push
pop
mov
xchg
cmp
mov
pop
xchg
mov
and
icebp
add
orb
shl
adc
scas
cmp
stc
mov
xor
mov
mov
jb
mov
xchg
insb
add
dec
xchg
in
xorb
sahf
xchg
mov
mov
arpl
xlat
insb
pushl
push
daa
sub
mov
pop
push
movsb
das
das
and
dec
call
mov
out
mov
pop
mov
psadbw
xor
incb
icebp
jmp
inc
loopne
jae
mov
mov
xchg
stc
ss
xchg
xchg
imul
stos
xchg
out
jo
cmp
pop
add
movsl
repnz
inc
in
in
nop
mov
leave
push
incl
add
es
enter
decl
cld
insb
and
les
inc
xlat
sbb
mov
push
mov
mov
out
add
cltd
dec
rcrb
out
out
jbe
fbld
mov
jnp
mov
mov
arpl
fstpt
or
sbb
sbb
pushf
mov
jp
and
sti
std
jnp
addr16
arpl
xor
lahf
pop
daa
cmc
addb
lods
arpl
xchg
sub
shrb
jbe
jge
push
sbb
inc
pop
pop
xor
iret
lcall
pop
test
mov
fidivrl
add
or
mov
in
fbld
bound
mov
jge
add
adc
jl
push
xor
add
repz
pop
mov
in
rcl
dec
add
adc
cmp
xchg
test
lock
or
in
outsb
cwtl
push
mov
out
jg
ljmp
mov
mull
push
add
lods
call
jge
fwait
in
pusha
jae
lock
pmaxsw
sbb
sub
lahf
xor
add
jecxz
sub
sti
call
jns
int
xchg
mov
scas
xor
inc
sub
repz
mov
push
test
jb
add
pop
mov
jno
rcll
sahf
sbb
fs
pop
sub
sub
popa
movsl
test
sbb
sti
icebp
mov
stmxcsr
cmp
xchg
loop
xor
inc
imul
imul
out
das
or
mov
pop
mov
call
arpl
aam
rcl
add
xor
inc
jge
jae
xchg
xlat
lods
jmp
pop
jge
pop
cmp
and
test
and
xor
daa
fnstsw
push
cmpsb
jns
or
pop
fucomp
dec
jns
aad
sub
mov
xor
mov
imul
push
or
fmul
xor
or
shll
push
pop
push
fsubrp
push
test
xorb
and
enter
inc
out
sub
push
dec
and
cmp
addr16
mov
cltd
movsb
in
xor
sub
mov
inc
dec
sub
pop
xor
lahf
dec
push
pop
hlt
inc
sti
push
pop
leave
cmc
cmpsl
pop
adc
repnz
scas
lods
movsl
call
pop
mov
mov
cmp
mov
test
xor
ljmp
test
mov
jns
div
push
mov
cmpsl
test
or
pop
pushf
cmc
cld
idivb
test
or
push
push
and
in
push
testb
sbb
rolb
test
add
inc
jae
fsubl
sti
mov
jp
fistps
gs
mov
inc
mov
gs
out
aaa
scas
lods
mov
repnz
fs
add
adc
fisubl
iret
dec
xor
fwait
dec
xor
lods
ljmp
adc
lret
jmp
push
insl
cmc
cltd
aaa
addr16
mov
mov
test
add
or
in
xor
test
xor
mov
pop
jbe
lods
sub
and
mov
out
lret
mov
cmp
popa
xor
loop
xchg
in
js
cmpsl
pop
xchg
sbb
stc
notl
in
movsl
add
xor
int
xor
cmp
hlt
jo
sbb
mov
cmpsb
mov
stos
push
sub
rol
dec
cmp
push
mull
mov
or
jl
cmpsb
push
mov
sub
mov
jb
mov
scas
stos
ljmp
fildl
adc
sti
jecxz
arpl
insl
adcl
enter
pop
inc
add
xor
mov
mov
not
ds
dec
sub
mov
out
pop
gs
add
rclb
jecxz
xchg
and
pop
not
movsl
and
js
inc
aas
js
roll
popf
std
push
cmp
or
push
mov
cmp
pop
mov
shrb
rcll
sbb
into
dec
xor
mov
mov
shll
pushf
test
add
add
push
cmp
ret
mov
or
iret
mov
xchg
fisubs
icebp
ret
cmp
push
fdivs
or
subb
rclb
sub
les
inc
push
mov
push
xchg
cld
in
addr16
test
push
push
and
shl
jmp
mov
in
sub
icebp
xchg
leave
pop
cmp
mov
in
mov
mov
sub
cmp
jno
push
add
sbbb
or
xor
adc
pushf
pop
cmpsl
or
and
pop
fcmovbe
loopne
xchg
sbb
pop
jmp
out
or
stc
aam
in
or
mov
and
push
cmp
pop
pushw
xchg
je
jo,pt
stos
add
call
xchg
jp
movsl
ja
mov
loopne
xchg
pop
cmp
jo
or
bound
mov
mov
pop
movsl
dec
movsl
jg
stos
sub
mov
jns
cltd
shlb
stos
jne
mov
adcl
dec
sub
sbbb
ret
lds
cs
mov
aas
sub
shlb
pop
xor
fistpll
shrb
movsb
add
and
je
xchg
ja
mov
mov
mov
ljmp
lea
mov
push
inc
inc
jb
cmp
mov
and
cmp
dec
mov
sti
xor
xchg
call
test
aam
push
mov
or
daa
inc
pop
movsl
mov
test
and
repnz
mov
xchg
outsl
fildll
inc
or
and
sub
push
movsb
orl
mov
cltd
mov
inc
add
std
aaa
in
ds
push
cld
mov
dec
xor
adc
sub
jmp
sub
scas
or
jns
les
gs
sbb
sub
cmp
dec
adc
push
mov
or
in
mov
test
xchg
dec
lret
pop
push
add
jge
fidivrl
test
cmp
int
icebp
mov
pop
and
mov
adc
jbe
std
dec
xor
cmpsb
test
cmpsl
or
imul
pop
shll
lods
xlat
mov
in
xlat
shrl
in
xchg
add
dec
xor
mov
lea
popa
or
cmc
inc
movsl
xchg
leave
cltd
jle
movsb
fnstenv
js
leave
mov
inc
in
pop
fs
aam
pop
ljmp
dec
enter
pop
dec
int3
pop
pop
aaa
negb
cmp
nop
and
lcall
add
xor
aaa
lret
push
mov
dec
movsb
pop
cli
dec
dec
cld
stos
in
and
push
dec
test
ret
cmp
ljmp
xor
mov
mov
mov
dec
cmp
add
jg
leave
or
rcrl
das
pusha
aad
and
decb
xor
out
inc
subb
adc
jp
adc
mov
adc
out
mov
repnz
jge
cmp
push
iret
insl
sbb
xchg
dec
es
mov
pop
mov
out
adc
sub
sbb
jb
insl
push
mov
mov
xor
lret
sub
in
test
imul
cmp
inc
dec
loop
pop
rorb
lret
inc
pop
inc
or
jle
addl
mov
push
jae
mov
pop
fimuls
call
pop
jmp
adc
xchg
jmp
cmp
cmp
inc
or
insb
aam
jns
push
inc
sti
cmp
pushf
scas
clc
cmpsb
jnp
rorl
jnp
inc
pop
pop
shlb
test
or
push
insb
pop
les
popf
imul
and
clc
sarl
js
mov
pop
jle
sbb
mov
aas
xchg
lea
push
ss
pop
dec
fwait
mov
rep
xor
pop
outsb
mov
push
adc
add
mov
push
arpl
xchg
cmpsb
out
loop
xchg
and
shll
sbb
mov
push
push
pushf
push
cmp
lahf
push
insl
pop
dec
hlt
nop
test
pusha
popa
push
out
mov
sbb
aas
xchg
addr16
sub
test
js
add
push
in
arpl
ja
test
cld
ljmp
pop
cmpsl
adc
lret
mov
mov
shrb
and
dec
insl
rcrb
sbb
add
xorl
in
xchg
add
divb
jne
insl
in
add
adc
inc
dec
add
push
push
sub
mov
xchg
inc
mov
test
sbb
in
mov
inc
jmp
test
push
mov
cli
dec
sbb
mov
sub
inc
mov
jmp
push
or
repz
fistps
xchg
jmp
movsl
dec
xchg
and
dec
fmuls
loop
jns
leave
xchg
sub
jecxz
lds
mov
mov
mov
idivl
cmpsl
scas
mov
cld
imul
push
mov
sbb
pop
sub
sbb
add
jle
or
pushf
push
and
dec
jg
jmp
popf
and
cmp
xchg
and
sbb
roll
push
outsb
push
add
pop
pop
mov
cmp
sahf
sti
jb
out
jbe,pn
cmp
push
xchg
jp
lahf
xor
sbb
mov
sub
loope
je
push
push
sbb
xchg
push
js
sub
xor
mov
insb
add
jae
hlt
sub
int3
das
es
xor
inc
sub
test
aas
popf
divl
jecxz
loope
mov
and
mov
in
mov
std
lret
pop
ret
or
inc
aas
cmp
popf
jo
dec
insb
mov
outsb
pop
sub
pop
cmp
xchg
int3
xor
lahf
mov
out
pop
push
lods
jbe
cmp
fcmovb
jmp
call
popf
loope
mov
ret
jb
shll
bnd
lods
aad
shll
and
mov
rcl
lods
sbb
lock
push
xcrypt-ecb
cmpsl
dec
inc
jnp
ds
xor
push
out
cmpsl
faddl
xchg
cmp
mov
mov
aad
mov
mov
movsl
mov
mov
jae
out
hlt
xchg
pop
popa
mov
stc
ja
insl
and
cli
mov
xor
xchg
in
insb
jp
out
fnstcw
xlat
push
outsb
inc
adc
xchg
cmc
or
adc
add
or
cli
ret
test
cmp
push
scas
in
cmpsb
iret
add
pop
scas
or
cwtl
sbb
ficompl
mov
movsl
push
js
lret
xchg
sbb
cmpsl
lea
insb
or
xor
shll
add
fcompl
push
jb
in
sbb
sbb
mov
xlat
push
out
pop
lock
pop
cmc
xchg
and
and
or
addl
mov
mov
sub
push
fmuls
adc
scas
imul
imul
shl
fstps
mov
mov
cs
outsb
rol
adc
dec
fnsave
adc
mov
fistpl
mov
adc
jne
movsb
daa
dec
xchg
repz
rclb
ret
push
sub
inc
mov
or
sahf
test
adc
pop
pop
pop
inc
jmp
pop
pop
lcall
repnz
dec
jo
notl
mov
aad
adc
cmc
std
fmull
add
xor
or
out
pop
dec
lea
fildll
aas
insb
adc
mov
mov
mov
lds
jb
add
inc
adc
fimull
cwtl
fdivl
lds
pop
lcall
push
insb
das
std
fdivp
sbb
xchg
cld
xchg
cmpsb
sti
imul
cmp
and
cmp
xor
imul
int
add
insb
add
pop
sub
sti
mov
sub
mov
cld
ljmp
in
pop
xchg
negl
lcall
loopne
pop
jne
je
xchg
sbbb
lock
pop
shlb
repz
adc
inc
into
imul
jno
adc
sbb
andl
jo
push
arpl
adc
into
ss
xorb
xchg
aam
cmc
aad
inc
xchg
xchg
nop
sbb
sbb
mov
jmp
insb
dec
dec
iret
lahf
fimull
mov
mov
sub
push
push
xchg
movhps
xor
repnz
xor
pop
jae
jbe
mov
imul
jmp
mov
rol
mov
pop
out
mov
sub
repz
outsb
add
sub
in
int3
cs
or
fidivrs
sbb
insb
js
ljmp
mov
xchg
arpl
lods
jbe
repnz
scas
lahf
adc
icebp
adc
adc
cwtl
xchg
push
adc
ss
mov
inc
lret
jp
ficomps
shl
rcrl
jo
xchg
mov
cwtl
sub
sub
mov
cmp
pop
inc
mov
aam
add
sahf
std
cli
bound
fsubs
js
aad
mov
repz
not
push
mov
decl
ret
inc
je
mov
in
aam
clc
or
arpl
pop
ss
mov
push
enter
cmp
mov
push
popf
adc
inc
stos
sbb
aaa
pop
mov
inc
test
dec
mov
inc
test
mov
dec
scas
inc
sbb
or
jle
xor
xchg
aaa
fidivrl
jle
mov
sbb
int
lcall
mov
dec
or
dec
mov
pushf
jbe
adcb
fistl
out
dec
jae
inc
mov
push
ljmp
jecxz
cmc
push
xchg
cmp
pop
xor
add
ret
or
jns
cld
icebp
les
ja
daa
shrl
loopne
cmp
fisubl
insl
cld
xchg
cmp
loope
fwait
ljmp
lahf
sub
call
lods
push
lret
and
int3
mov
out
ss
and
stos
xor
outsb
mov
pop
fdivrp
insb
pusha
cmp
mov
sub
mov
mov
testl
icebp
mov
icebp
pop
lcall
cwtl
clc
es
fs
add
ss
imul
mov
daa
out
jg
adc
pop
sti
daa
int
in
test
repz
push
aad
shlb
push
lret
mov
jmp
testl
mov
mulb
dec
imul
xchg
xor
in
testl
jo
or
in
xor
xchg
test
or
js
xor
arpl
xchg
fdivs
idivb
xor
test
push
add
cmpsl
dec
test
arpl
lods
jae
xor
std
xor
fs
lea
loope
in
adc
sbb
es
adc
xchg
push
and
scas
mov
xor
push
mov
sbbb
jmp
push
cmp
into
fwait
pusha
mov
js,pt
in
std
inc
xor
lods
sub
shlb
lahf
das
lock
inc
mov
or
dec
lods
inc
es
leave
arpl
stos
fsub
je
lea
sbbl
dec
adc
cmp
mov
jbe
mov
sub
cmc
and
cs
testb
lods
pusha
and
cmpsl
outsb
jns
xchg
jae
push
pusha
pop
xchg
mov
xchg
sbb
jae
lods
leave
sub
divb
clc
or
insl
mov
stc
push
roll
pop
mov
jle
and
lods
jl
sbb
inc
cmp
xchg
cmp
in
movsb
loope
push
scas
mov
negl
push
daa
add
rcl
popf
xchg
xor
mov
gs
xchg
push
xchg
ss
jmp
inc
lods
into
jp
int
fwait
cmp
cmpsl
lret
inc
rcll
and
fcomip
push
xchg
cmp
fistl
xor
sub
jmp
add
into
jle
out
ljmp
test
les
mov
leave
mov
jbe
pop
ret
bound
dec
inc
push
ficoms
jge
int
jp
adcl
mov
ljmpw
inc
mov
addr16
mov
adc
pop
loop
mov
cmpsl
and
jnp
rcr
lds
add
adc
and
and
shrl
jno
mov
pop
push
inc
mov
push
and
ss
or
popf
andb
or
stc
cmc
push
lahf
jno
ds
pop
adc
scas
aad
pop
sub
lods
repnz
ljmp
movsb
sahf
cmpsb
fildl
jecxz
inc
cmp
daa
adc
insl
lea
movsb
cmp
test
push
xchg
pop
cmp
and
stc
mov
xchg
or
pop
jmp
mov
mov
dec
imul
and
punpckhbw
and
push
jae
and
sbbl
inc
pop
sahf
mov
addr16
fimuls
hlt
pop
subl
mov
sbb
cmp
dec
imul
sbb
orb
cmpsl
iret
mov
icebp
scas
adc
lock
xor
call
bound
pop
jp
adc
xchg
mov
mov
filds
js
xor
push
aas
mov
push
push
movsb
sbb
xor
cltd
pop
std
cmpl
and
lods
xor
and
push
insb
stc
std
mov
jmp
test
in
lds
pop
push
jmp
pop
nop
scas
add
subb
mov
jns
sub
xchg
daa
mov
or
push
dec
mov
xchg
outsl
lods
or
sbbl
cld
mov
xchg
mov
jecxz
push
mov
xor
push
mov
mov
arpl
push
icebp
adc
push
fidivl
int3
xlat
lods
add
xchg
cmp
cmp
xchg
mov
push
xor
icebp
cmp
mov
xor
test
sub
addr16
cmp
test
sub
leave
mov
sbb
add
jno
lahf
add
jge
enter
cmpb
mov
rcr
outsl
lret
lret
outsb
mov
in
shll
test
sbb
cmpsl
lods
leave
adc
fimull
test
out
out
pusha
pop
xchg
movsl
jne
xor
sbb
xor
jg
jge
mov
pushf
mov
fisubrl
inc
cmc
and
mov
nop
orl
lret
stc
outsb
ds
clc
mov
pop
cmp
pop
loope
sub
pop
daa
jnp
leave
out
sub
je
jno
cmp
out
mov
in
or
pop
negl
mov
cmp
sbb
insb
negl
sbb
test
mov
dec
lds
ret
out
ret
insl
adc
les
or
cli
xor
pusha
jmp
subl
lock
addr16
sub
sahf
ss
mov
lods
ja
pop
push
fs
dec
and
ds
jmp
sbb
push
cmpsb
fcomip
xchg
jmp
pop
dec
mov
sub
out
cmpsl
push
sub
je
gs
aaa
in
scas
fisubrl
data16
hlt
movsl
adc
sub
fiadds
lds
jmp
or
out
push
sbbl
outsb
add
mov
bound
jo
mov
sbb
sub
push
testb
jno
fistps
fldcw
inc
or
or
adc
mov
aas
cmpsb
mov
sti
mov
dec
lret
and
dec
imul
testl
xor
mov
adc
push
inc
inc
popf
jg
jo
xor
inc
push
push
pop
lea
cmp
or
adc
test
sbb
ret
fadd
out
not
mov
push
loopne
popa
sub
outsb
add
aas
mov
xchg
aam
pop
add
les
xor
push
fisubs
fistl
repnz
mov
pop
arpl
inc
jmp
in
je
out
faddl
jnp
addr16
sbb
mov
pop
jae
ja
out
and
loopne
pop
xchg
out
sub
mov
inc
dec
test
sbb
push
int
dec
sbb
mov
cltd
mov
rclb
in
inc
cmpsb
nop
xor
stc
xchg
push
mov
add
dec
cmp
adcb
push
icebp
add
sub
cmp
test
popa
mov
inc
fwait
or
inc
lret
ficomps
push
cmp
add
xor
imulb
js
mov
push
jns
pop
clc
cmp
mov
mov
mov
data16
push
add
mov
gs
jg
mov
cmp
popf
pop
or
cmc
cmp
into
or
fcomps
pop
mov
out
cwtl
bound
cltd
testl
push
fadds
xchg
sbb
ja
mov
mov
or
push
test
dec
cld
data16
mov
and
fnstsw
rcl
xchg
mov
in
jb
sub
fadds
add
mov
mov
xor
adc
scas
dec
mov
jg
neg
and
xlat
fdivl
test
das
and
push
cmpsl
jg
test
pop
call
mov
xlat
adc
or
push
movsb
sbb
out
add
cmp
or
inc
aad
loop
sub
pop
sbb
rol
inc
adc
cwtl
rcll
adc
jb
enter
xor
or
iret
sahf
adc
push
sbb
mov
movsb
sub
scas
mov
mov
xor
push
aam
popa
push
insb
ljmp
push
adc
clc
jp
mov
lock
test
mov
cwtl
int3
cmp
sub
sub
pop
push
shrl
cmpsb
loopne
push
jl
int3
jmp
repnz
mov
test
movsb
jg
hlt
push
cmpsl
ds
clc
mov
cmc
add
push
cmpsb
sbb
pop
fisttpl
ficomps
cmp
scas
fidivrs
xor
adc
fiadds
add
outsl
loopne
pop
enter
pop
loope
push
inc
andb
xchg
mov
fistl
dec
cld
bound
fildl
andb
mov
fwait
and
stc
mov
sbb
jb
aaa
stos
test
and
lds
cli
idivl
or
pusha
into
sbb
rcl
stos
sbb
xchg
insl
xchg
xlat
scas
enter
and
repz
push
jbe
addb
pusha
fisttpll
mov
add
adc
and
inc
into
in
in
mov
movsb
pop
cmpl
dec
push
or
movsl
rcrb
ss
sbb
dec
sbb
lahf
test
xor
jnp
clc
fistpl
pushl
inc
dec
lcall
cs
repz
loope
les
imul
or
scas
leave
es
dec
es
mov
fwait
repnz
maxps
sbb
imul
dec
popf
adc
mov
and
fs
push
add
inc
push
sbb
jl
ret
lahf
ljmp
dec
xor
frstor
mov
lahf
mov
push
jne
add
cmp
test
inc
mov
hlt
pop
cli
xchg
jge
mov
xchg
test
js
setno
or
in
cwtl
or
call
ja
inc
or
lds
aam
outsb
sub
scas
jle
dec
or
dec
inc
fldcw
pop
notl
mov
mov
dec
mov
bound
das
xchg
rcll
fwait
add
adc
xor
ret
push
mov
mov
jne
push
mov
jbe
and
ret
mov
push
inc
ret
movl
lret
push
clc
cld
das
shlb
xor
rcl
mov
pop
and
jns
adc
pop
test
inc
ss
dec
fistpl
jecxz
pop
push
pop
cmp
xchg
enter
fdivrs
dec
rolb
sbb
dec
lods
decb
stos
adc
bound
ficoml
push
cmp
xchg
into
test
mov
clc
imul
cwtl
int3
test
or
pop
nop
inc
inc
daa
sub
and
lret
mov
leave
popa
sbb
mov
lahf
push
push
xor
pusha
jns
add
icebp
scas
shlb
xchg
mov
mov
out
lret
arpl
or
mov
fiadds
movl
fsubs
stos
mov
mov
add
cltd
mov
loope
lods
lea
push
xchg
jecxz
mov
jo
out
shll
jmp
mov
ret
fsts
mov
sub
and
sbb
lret
mov
shlb
inc
lods
mov
mov
popf
sbb
mov
lods
rorl
outsb
jnp
repz
aas
pop
sub
js
sbb
test
mov
scas
dec
jmp
fldt
mov
and
arpl
rolb
shl
mov
inc
mov
lds
out
out
inc
xchg
mov
xchg
adc
mov
push
cltd
add
insb
mov
push
lock
pop
mov
jge
mov
shrb
adc
mov
jg
push
inc
mov
arpl
mov
add
mov
nop
push
mov
pop
cmp
loopne
push
out
push
sbb
mov
mov
repz
adc
movsb
inc
repnz
repz
and
lea
mov
pop
cs
popa
dec
xor
out
sub
outsl
cmp
or
das
add
cmc
adc
outsb
pushf
out
cli
mov
movsb
cmp
fldenv
or
pushf
inc
add
mov
pop
clc
jle
adc
dec
mov
mov
jecxz
cmp
mov
add
je
mov
fwait
sahf
scas
dec
and
xchg
push
addl
in
cvttps2pi
stos
and
push
test
cmp
popa
cltd
fsts
mov
lods
xor
pop
test
data16
mov
mov
and
loope
push
inc
mov
out
lahf
pusha
jb
inc
stos
hlt
aas
mov
mov
pop
movsb
stos
lds
dec
pop
cmp
cmp
push
sub
xchg
inc
or
pop
cmpsb
sahf
push
repz
pop
sbb
and
jg
lea
call
outsl
add
and
push
mov
xchg
inc
xor
push
es
sub
pop
ja
adc
sub
dec
sahf
dec
jmp
ret
ror
or
sub
dec
mov
xchg
pop
nop
sahf
lock
add
mov
ja
lret
mov
sahf
lcall
cmp
cmp
out
mov
popa
insb
clc
or
mov
ljmp
inc
push
negb
arpl
push
std
cs
out
push
adc
xchg
push
fwait
push
lea
add
imul
into
std
std
cwtl
into
mov
or
pop
fcmovnb
xchg
movsb
mov
mov
into
pop
les
dec
adc
and
fistpl
adc
cs
lret
xor
outsb
jecxz
and
adc
mov
ljmp
sub
loop
les
sbb
incb
in
mov
cwtl
in
sbb
pushf
and
filds
nop
enter
outsl
mov
inc
pop
inc
pop
lds
cmc
cwtl
mov
mov
pop
shrl
xchg
push
xor
sahf
push
dec
adc
sbb
cmp
inc
jns
in
adc
insl
mov
and
mov
aaa
loope
ficomps
inc
ret
push
inc
das
sarl
xor
or
or
fxch
test
xchg
sub
mov
insl
dec
in
adc
lock
push
movntq
pusha
lds
movsb
jbe
std
idivb
xor
or
loopne
lods
daa
icebp
ret
popf
xchg
or
push
lods
xchg
popf
sbb
mov
pop
pop
jp
xchg
loope
push
dec
adc
cmp
adc
inc
mov
addr16
sub
loop
sub
stos
xchg
mov
jns
mov
arpl
out
jg
and
xor
xchg
adc
mov
stos
pop
mov
sahf
xor
cmp
ffree
push
jae
inc
inc
movsl
push
les
cli
inc
mov
lods
ja
mov
or
mov
fsub
outsb
ret
push
adc
ret
or
ds
mov
pop
mov
pusha
adc
pusha
mov
push
dec
xchg
or
jb
pop
fisttps
jno
daa
lock
sti
fwait
iret
icebp
rcll
ret
mov
cmc
and
cmp
lods
je
lods
out
iret
outsb
ret
jno
aad
jl
aas
fcoml
adcb
dec
popf
xor
or
test
scas
push
out
and
into
adcl
movsb
jmp
bound
xor
add
daa
gs
pop
lcall
stos
xchg
sbb
lret
jg
xchg
mov
push
inc
or
cmp
fdivr
arpl
mov
xor
jnp
xchg
push
xor
cmp
mov
out
shlb
mov
outsb
ftst
ja
addr16
mov
mov
xor
adc
jne
inc
fsub
int
mov
mov
jl
dec
cmp
shlb
fcmovu
in
aaa
or
xchg
scas
or
mov
cld
cli
push
xchg
sub
lret
mov
and
jbe
in
xchg
loop
pusha
in
or
lock
fstps
sub
dec
call
js
sbb
sti
pop
test
jg
jecxz
arpl
mov
ret
or
dec
sbbl
test
fcompl
addr16
jg
ja
jbe
mov
fcmovne
into
pop
push
xchg
add
adc
pop
hlt
int3
fcompl
stos
call
imul
sub
push
pop
cmc
mov
rolb
add
adc
mov
test
xchg
rolb
lods
in
and
subl
popf
in
cmp
jae
sbb
sahf
test
insb
or
sub
jle
fdivrs
sub
fidivs
xchg
fidivrl
dec
push
fs
xor
xchg
mov
pop
sub
aam
pop
cmp
nop
cli
xchg
mov
test
inc
test
and
int3
cmp
or
add
bound
je
lcall
push
imul
loopne
xchg
pusha
inc
jno
add
cwtl
je
cmc
pop
mov
push
cmpsb
inc
popa
stmxcsr
into
push
scas
or
and
sbb
out
popf
stos
mov
fprem
jb
je
jmp
in
mov
ficoml
fidivrs
mov
sahf
add
sub
adc
popf
pop
shlb
lahf
xchg
and
loope
push
xor
enter
dec
mov
sub
rcrb
xchg
fstps
jl
cmpsb
mov
cmp
push
push
pop
decb
mov
jae
pop
add
add
push
test
leave
mov
and
inc
cmp
enter
jnp
mov
test
jmp
sbb
out
push
sahf
or
les
js
cmp
or
inc
ss
add
or
dec
jne
cmpsb
aaa
mov
test
lcall
jecxz
loope
mov
pop
roll
popa
or
mov
in
dec
addl
mov
push
push
mov
test
inc
in
xor
inc
loopne
test
dec
xchg
cmp
cs
or
pop
movsb
outsb
jnp
nop
cld
stos
in
dec
push
in
sbb
insb
daa
out
shl
loope
sbb
test
sbb
sbb
fisttpl
dec
jns
push
pop
sahf
rcrb
shrd
mov
gs
pop
cmp
clc
lahf
sbb
aam
xlat
insb
pusha
cmp
dec
in
aas
sbb
push
daa
in
clc
inc
ret
mov
jp
sub
add
rcll
and
call
into
cmp
test
cs
dec
cmc
fiaddl
jg
shlb
jae
cmp
sub
inc
sbb
inc
leave
mov
rolb
stc
adc
mov
scas
loop
mov
stc
movsl
mov
sub
outsb
in
repz
ljmp
mov
xchg
inc
push
xchg
sub
jae
mov
loop
and
sbb
std
pop
xlat
cmp
scas
scas
jae
push
scas
xchg
in
xchg
sub
xor
scas
insl
lods
call
inc
cld
jl
fbld
decl
push
or
stos
fiaddl
lret
and
std
sarb
mov
add
sbb
cmp
subl
es
daa
dec
mov
and
in
testb
add
xchg
cmp
andl
pop
inc
xlat
jg
mov
cmp
xorb
sbb
repz
mov
jp
lods
fsubl
sahf
jecxz
ja
fsubrp
xor
add
movsl
xchg
es
je
mov
jp
adc
adc
fcomip
imul
push
fs
shrl
or
xor
xor
data16
movsb
enter
insb
orl
call
mov
fldl
fstps
testl
popa
mov
fsubrs
scas
mov
addr16
movsl
mov
xor
int3
pop
imul
or
push
jbe
inc
xor
mov
or
cmp
sbb
add
je
or
jbe
adc
ja
push
add
push
pop
popf
dec
push
sub
paddw
sub
push
mov
cmc
popa
or
inc
lods
pop
shl
ja
addr16
test
mov
xchg
cmp
xchg
dec
enter
mov
cmpsb
rclb
lea
sbb
insl
pop
push
adc
cmp
int3
aaa
aam
dec
jg
inc
jno
xor
inc
jo
jne
jnp
and
int3
xchg
popf
mov
and
xchg
pop
jae
inc
jg
inc
jne
or
push
hlt
pmulhuw
arpl
fisubl
out
xchg
imul
popa
pusha
rep
jne
lock
inc
out
dec
repnz
fs
pop
adc
pop
ret
pop
notl
or
jbe
addb
sub
dec
movsl
out
ds
sbb
movdqu
sub
or
pop
enter
add
cmp
or
mov
rcll
enter
test
fldl
leave
mov
out
cs
dec
add
ss
lcall
adc
repz
arpl
mov
jo
mov
jne
push
mov
add
fisttpl
mov
inc
adc
das
fimull
push
cmp
xchg
lret
insb
inc
popa
push
and
fsqrt
sti
adc
adc
sbb
repnz
test
push
and
xadd
mov
mov
and
pop
or
fs
adc
fisubs
leave
or
aam
dec
cltd
cmp
push
ja
xchg
mov
cmp
pop
fsubl
ja
call
loop
popf
pop
jno
mov
outsl
nop
jg
aam
and
pusha
or
mulb
cli
and
movsl
dec
add
jae
mov
in
pusha
sti
scas
pop
stos
mov
jg
mov
test
xchg
cmp
inc
mov
data16
sbb
mov
adc
inc
mov
push
push
or
mov
push
mov
mov
fnstsw
loope
imul
push
push
mov
adc
fprem1
loopne
mov
negl
mov
dec
shrl
repnz
cld
insb
push
pop
cmc
cmpsl
call
fs
roll
gs
cld
cmp
movsb
add
lret
mov
aas
xor
aad
cmp
lea
or
cs
lret
cld
inc
jecxz
xor
or
jne
sub
popf
push
add
mov
adc
pop
push
adc
in
pop
adc
jne
inc
dec
push
insl
cmp
sbb
fs
aam
pushf
out
sbb
aaa
cli
movsl
scas
lds
mov
test
int3
cmp
mov
pop
lret
lahf
div
cs
mov
inc
stc
xor
mov
dec
push
xchg
es
mov
in
mov
mov
sbb
fnsave
out
outsb
enter
inc
mov
sub
movsb
or
movsb
faddp
dec
inc
and
test
loop
and
test
gs
loopne
add
in
cmp
dec
je
sbb
mov
push
jno
in
in
cmp
sti
fwait
jl
mov
jmp
cs
cltd
jle
jns
out
imul
or
scas
xor
imul
test
mov
push
test
pop
pop
add
lods
sub
cs
xchg
dec
cli
scas
mov
outsb
out
dec
lods
repz
pop
sub
sbb
push
fdivs
out
xor
dec
fdivs
mov
aam
imul
xchg
push
dec
push
mov
sub
xchg
movsl
push
xchg
and
insb
mov
leave
lcall
in
xor
pop
in
sbb
je
dec
xchg
dec
pop
xor
mov
xchg
mov
aaa
rclb
test
mov
movsl
sbb
popa
xlat
int3
jg
int
add
cs
adc
sub
outsl
mov
fdivrs
sbb
sbb
ds
loope
xor
xor
mov
roll
mov
les
push
cwtl
les
cli
dec
aam
mov
pop
sarb
jnp
mov
ret
xchg
pop
jle
repnz
insb
mov
bound
or
push
popf
jbe
in
mov
mov
subb
sub
ljmp
je
jb
push
imul
sub
and
mov
inc
mov
testl
scas
adc
sarb
fs
add
sub
sbb
cmc
xor
sbb
xchg
cmc
roll
xor
mov
push
pop
mov
pop
sub
pop
cmpsb
test
int3
negl
rcrl
js
dec
xchg
fmul
mov
pushf
pop
outsl
push
sub
stos
jle
shll
popa
rol
mov
dec
insl
push
addr16
or
lret
shll
cmp
rcll
imul
jl
push
mov
mov
call
imul
out
sub
dec
jg
xorps
cs
or
ds
cwtl
push
call
fcoml
mov
pop
push
repz
aas
lahf
push
push
shll
jg
dec
cli
or
add
inc
dec
inc
gs
cs
arpl
jb
mov
cli
mov
data16
push
mov
xchg
dec
inc
adc
inc
ret
mov
subb
sbb
mov
shlb
sbb
movsl
fiadds
iret
hlt
pushf
and
movd
imul
or
adc
add
rcll
mov
mov
and
pop
lahf
adc
mov
jb
idivb
xorb
insl
mov
jbe
mov
jecxz
mull
mov
sub
inc
sub
sbb
jmp
imul
icebp
mov
pop
fwait
je
push
xchg
je
add
lret
push
cmp
pop
ljmp
jno
aad
cmp
add
and
mov
lcall
cmp
mov
aam
cmp
cmpsl
adc
and
xchg
dec
sbb
icebp
lret
jge
sarb
inc
pop
xchg
jae
xor
mov
mov
pop
xchg
std
cmpsl
lret
in
scas
repnz
pop
popl
xchg
or
aaa
iret
xchg
xor
loope
sbb
stos
sub
jne
mov
push
pop
lcall
jo
std
pushf
gs
loope
or
xor
leave
popa
push
xchg
sahf
call
test
jb
adc
and
xchg
xlat
xor
out
lods
sahf
and
imul
fbld
mov
sahf
rcr
mov
adc
sbb
mov
rcrl
popa
and
repnz
das
jge
mov
aam
pop
in
xor
xchg
faddl
loop
jecxz
mov
jo
int
mov
movsl
dec
xchg
inc
xchg
xlat
jno
fsubr
dec
subb
cs
mov
inc
rcll
shll
ljmp
cmp
add
outsl
adc
and
imul
xchg
inc
add
fdivl
push
mov
mov
sub
popa
mov
addr16
cwtl
inc
not
ficompl
push
jo
mov
popf
xchg
mov
ss
popf
repz
mov
test
add
pop
mov
test
mov
xchg
mov
pop
jecxz
or
js
jle
xor
imul
cmp
out
dec
cld
inc
shll
pop
std
iret
jmp
mov
dec
or
inc
jecxz
cli
ror
scas
repnz
mov
or
and
sbb
mov
lods
cmp
pop
dec
adc
cmpsl
push
rcl
pop
or
int3
int
or
pop
lds
jp
outsb
rcrl
les
mov
in
dec
jae
call
ljmp
loop
imul
data16
aas
xor
outsb
in
mov
in
ret
mov
js
push
shrb
or
les
jno
call
sbb
sbb
int3
lcall
jg
dec
test
dec
cmp
and
mov
ret
outsb
cmc
ds
fcompl
lock
inc
sbb
out
outsb
call
xor
rcll
aam
mov
mov
jge
out
fcmovb
adc
inc
fucom
dec
das
jecxz
or
leave
movsb
lret
mov
ret
ret
xor
pop
xorl
and
adc
ds
jae
sub
dec
mov
insb
leave
jo
jno
negb
in
cmpsl
mov
jo
call
adc
mov
jns
fisubrs
fsubl
scas
sbb
xor
cmp
mov
out
and
mov
jne
jbe
or
out
pop
or
add
ja
icebp
mov
js
fdivs
pop
cltd
push
and
jle
inc
gs
ret
mov
fnsave
push
or
cwtl
push
clc
pop
cmp
out
iret
or
jg
popa
loope
mov
mulb
loope
imul
pusha
pusha
push
add
test
mov
int
pop
subb
mov
imul
inc
mov
sarb
mov
push
mov
mov
jle
lock
pop
shrl
cli
mov
mov
lods
push
jns
cmp
lds
mov
sub
adc
inc
mov
hlt
xor
push
js
sbbl
mov
xchg
mov
jecxz
in
pop
imul
int3
adc
enter
xor
jle
adc
movsb
iret
mov
push
inc
fsubrl
sbb
das
jae
testb
jmp
andb
mov
in
ficoml
out
xchg
push
mull
jne
jnp,pt
push
scas
xor
les
mov
les
push
lret
mov
mov
stos
sub
dec
add
mov
push
push
cld
out
popf
shlb
push
test
hlt
stos
popl
cmpsb
mov
and
push
aaa
jecxz
or
popa
cs
iret
adc
mov
daa
sub
dec
cmpsb
inc
pop
add
outsl
push
mov
push
mov
stc
sbb
aas
rorb
add
orb
popf
into
mov
or
mov
push
xor
fstps
repnz
cltd
xchg
dec
int
mov
jno
pop
clc
mov
movsl
dec
lea
cmp
jbe
jo
in
xor
fidivl
test
icebp
scas
jle
add
loope
sub
cld
fs
or
inc
xor
cmp
lcall
ss
pop
test
inc
ret
cld
jno
pop
pop
lea
mov
aaa
mov
test
pop
xchg
into
xchg
pop
inc
cmp
or
imul
and
leave
testb
rclb
xor
and
push
mov
mov
stos
js
jmp
test
test
arpl
pusha
out
movsl
setno
sti
les
fnsave
movsl
jmp
js
jg
je
jbe
jae
les
pop
icebp
inc
subb
add
mov
rep
aad
mov
mov
mov
leave
incb
push
xchg
mov
or
in
xlat
rol
mov
mov
dec
stos
adc
adc
mov
scas
sbb
xchg
jae
jae
sbb
push
pop
adc
lock
jns
push
nop
mov
add
xchg
loopne
sub
shlb
scas
sub
adc
filds
and
fdivr
scas
cmpsb
addr16
mov
je
imul
ljmp
and
enter
cmp
stos
mov
sub
add
out
pushf
adc
addr16
loope
mov
lea
mov
ret
add
sub
data16
lods
jle
xor
pushf
inc
push
dec
arpl
mov
jo
faddl
sbb
push
int3
dec
adc
js
mov
push
inc
inc
jne
jge
and
mov
add
cmp
inc
sub
mov
mov
fxch
jns
aaa
cli
add
sub
inc
adcb
sbb
cmp
xchg
mov
cmp
aad
cmpsl
in
aam
test
sub
push
fnstenv
cwtl
sub
or
les
ljmp
imul
aad
cmc
jp
mov
scas
sub
push
xor
fcompl
sbb
sti
sbb
fidivrl
es
push
dec
push
pop
insl
jae
mov
add
addb
pop
outsl
bound
rorl
imul
sub
jge
iret
mov
sub
add
mov
xor
loope
aad
shrb
sub
mov
sbb
xor
and
fldl2e
and
jbe
jg
mov
mov
adc
mov
movsl
pop
pop
stc
xor
fnstcw
push
loop
leave
sti
push
sub
pop
sbb
repnz
cmpsb
inc
out
ss
add
popf
xchg
lcall
dec
jl
or
fstpt
mov
xor
ret
cwtl
push
les
adc
cli
jb
mov
ss
stc
cltd
push
out
lods
inc
push
sub
cli
push
pop
cmp
ljmp
jmp
sub
pop
lcall
aaa
xchg
je
jg
sub
inc
les
dec
fxch
xchg
or
mov
push
cltd
and
ljmp
js
mov
repz
and
adc
dec
scas
scas
mov
ret
fs
xchg
mov
add
pop
ja
push
adc
cmp
into
stos
mov
cwtl
inc
movsl
xchg
fnsetpm(287
es
jmp
cwtl
add
jecxz
push
cmp
inc
outsb
ret
rcll
mov
mov
add
popa
fldt
clc
and
addr16
mov
loop
test
popf
mov
dec
mov
pop
faddp
lock
scas
aas
cld
jns
repz
faddl
push
sbb
out
xchg
sti
pop
fcmovbe
cld
and
pushf
scas
pop
push
push
lea
js
pop
pop
inc
cmp
mov
jns
in
js
pop
decl
mov
std
stos
ss
leave
lahf
stc
outsl
out
mov
in
push
das
pop
or
xor
cld
dec
stc
xchg
pop
lods
xchg
push
jo
cmpsb
rcr
movsb
dec
pop
or
rcll
sub
pusha
ja
or
ret
imul
push
enter
and
test
mov
mov
dec
pop
sub
xchg
xor
vpunpckhbw
je
aas
mov
imul
push
insl
sub
into
inc
mov
xchg
cwtl
mov
dec
mov
fdivrp
imul
mov
mov
mov
insl
int3
cmpsb
lods
mov
sub
test
movsb
fucomi
cmovge
fstl
lcall
lods
adc
dec
or
mov
pusha
jo
push
in
xlat
insb
inc
lds
xchg
inc
nop
xor
insb
enter
std
bound
and
rcr
repnz
scas
cltd
repz
je
sub
xor
lods
push
xchg
or
xlat
les
data16
lea
inc
jb
and
dec
cli
pop
add
mov
jmp
mov
loop
lea
jg
mov
dec
aaa
mov
mov
xchg
in
outsb
pushf
les
mov
fwait
cmp
fmuls
pop
mov
enter
clc
scas
test
sbb
fisubrl
out
outsl
movsl
insb
inc
fs
cmp
jb
dec
out
aas
jg
je
bnd
jge
and
cmp
add
arpl
ljmp
mov
xor
stc
pop
aam
std
loop
xor
int
ljmp
je
movsl
adc
fsubrs
aas
dec
dec
idiv
sbb
enter
jl
xor
rol
sub
dec
movsb
cld
lret
cmp
inc
inc
in
jle
cli
lds
cwtl
xchg
xor
cwtl
xor
dec
jp
jno
dec
aad
bound
cmp
fnsave
outsb
rclb
mov
push
push
ret
jg
cli
mov
movsl
into
fmull
mov
pop
sbb
jbe
inc
mov
test
jns
mov
cmp
cli
orl
mov
mov
adc
mov
and
xor
aam
push
mov
dec
and
or
add
test
jo
sbb
addr16
dec
loopne
dec
add
push
sti
mov
xor
mov
cmp
mov
call
xchg
rep
aaa
jle
hlt
adc
mov
fidivs
push
call
ss
iret
imul
shrl
and
daa
fcomps
mov
cltd
insb
cs
das
popf
movb
pop
leave
mov
sbbb
lret
mov
rcr
push
ret
std
cmp
rcr
jo
pushl
mul
or
pop
icebp
hlt
add
mov
adcl
rolb
clc
push
mov
cld
jb
adc
fcmovnbe
adc
cmpsb
dec
addl
add
adc
jmp
cmp
fisubrs
loop
push
cmpsl
or
push
lcall
nop
cmpsl
imul
fcmovnbe
sub
cld
gs
int
push
cmp
outsb
stos
and
fnsave
int
sarb
jle
pushf
ss
pop
shll
rorl
nop
pop
sub
xor
mov
scas
pop
mov
fstl
mov
xchg
xchg
cmpsb
arpl
dec
push
xlat
hlt
jns
xor
inc
std
bound
subb
ret
cmpsl
inc
outsb
ret
in
mov
pop
sub
sbb
stc
outsb
lods
jo
xchg
jne
jae
sbb
inc
dec
lcall
jmp
add
sahf
fcmovu
les
mov
xchg
fs
add
fisttpll
lahf
fdivrl
and
cli
notl
mov
std
fs
add
imul
pop
xchg
mov
cld
cmp
lahf
xchg
jp
inc
xor
test
dec
jmp
push
push
or
in
inc
xchg
lret
xor
jb
fldl
jns
dec
xchg
inc
scas
lahf
insl
xchg
mov
imul
sub
push
and
out
sarl
or
fdivl
movsb
fcmovu
xchg
mov
or
lret
test
arpl
dec
into
xchg
inc
add
icebp
sti
sahf
int3
popa
jo
scas
mov
push
or
inc
xor
or
sub
lea
jmp
cs
cwtl
mov
rorb
aad
icebp
add
aas
daa
push
pop
outsl
movups
rcr
jecxz
loop
aad
loope
and
jae
decb
jg
and
sbb
jbe
pop
add
mov
add
pop
pop
jmp
jae
stos
sbb
xchg
cld
jge
adc
addl
push
mov
xor
pop
ja
lds
jae
mov
pop
aad
jno
fbld
xchg
rclb
pop
xor
pop
rclb
repz
fdivl
push
sub
cmp
out
mov
pop
lods
jns
and
fwait
jae
mov
and
sub
mov
or
inc
out
and
insl
add
add
inc
repnz
pop
fcom
cmp
loopne
test
jle
popa
aas
nop
dec
out
mov
andl
or
dec
mov
fimuls
fcoml
adcb
lds
call
incb
add
loop
stos
or
lods
cmp
mov
iret
shr
sub
mov
push
arpl
aam
pop
aam
adc
xchg
dec
xchg
adc
sti
and
sub
add
add
fstps
dec
sarb
adc
out
adc
insl
sub
cmp
xchg
lods
imul
mov
imul
out
orb
rorb
loop
xlat
cwtl
push
xchg
aaa
jmp
add
dec
xor
and
jno
je
addr16
adc
adc
xchg
dec
xor
test
jge
push
push
push
jmp
adc
xchg
movsl
rcll
arpl
imul
loopne
push
adc
xchg
inc
adc
push
icebp
icebp
xor
jne
daa
sbb
loopne
int
and
mov
mov
out
inc
or
sbb
cmpsb
das
sub
rcr
dec
jmp
adc
mov
arpl
outsl
fs
mov
loop
addr16
idivl
ret
xor
pop
sub
pop
nop
imul
xchg
lahf
dec
adc
call
in
jnp
test
test
mov
pop
sub
imul
sub
in
out
lds
test
push
or
pop
lret
cmpb
ds
int
add
adc
jnp
imul
stc
testl
mov
fs
loop
mov
inc
shrl
xchg
ljmp
lret
lock
fisubrs
popl
fmuls
outsl
test
dec
andb
jg
push
into
cs
aaa
div
inc
xor
mov
add
pop
xor
imul
leave
pop
popa
inc
sub
in
lcall
mov
push
xchg
pop
mov
push
aad
int3
lcall
push
call
ret
mov
push
add
sbb
pop
cmp
outsl
jnp
xchg
fldenv
pop
push
les
ret
mov
cli
push
rcl
and
push
inc
bound
mov
mov
dec
adc
push
hlt
adc
xor
shll
arpl
jns
scas
jae
out
push
pop
or
in
jmp
sbb
stos
out
mov
push
enter
imul
enter
and
mov
insb
and
xor
pop
mov
mov
pushl
xor
mov
mov
or
jno
out
push
xchg
loope
bound
and
jl
pop
mov
xchg
mov
enter
mov
push
jmp
sub
mov
jl
push
jns
das
sub
out
es
jo
sub
mov
test
or
xchg
ljmp
mov
jg
push
mov
cmpsl
in
and
and
int
xor
mov
add
cs
outsl
xchg
add
xor
xchg
and
dec
jle
shrb
inc
cmp
add
jns
lods
push
mov
add
mov
into
in
dec
mov
mov
sbb
pop
test
inc
in
pop
js
loopne
jmp
sub
xchg
inc
sub
xchg
je
lds
jp
xchg
xor
jecxz
mov
xchg
ljmp
jbe
out
in
dec
and
and
rol
mov
adc
sub
jbe
mov
imul
popa
popa
xor
push
stc
je
sub
sub
fidivl
cmpsl
inc
mov
nop
or
add
xchg
mov
mov
pop
jmp
lcall
mov
adc
cmp
dec
repnz
aaa
mov
inc
negb
iret
idivl
inc
popa
cld
mov
inc
xchg
mov
inc
cmp
mov
movsl
pop
ror
mov
inc
mov
mov
andl
mov
scas
sbb
xlat
cwtl
and
insb
imul
aaa
jmp
mov
std
fwait
sub
sbb
rolb
cmp
negb
movb
insl
enter
out
mov
jmp
mov
mov
repz
mov
aad
mov
adc
xchg
clc
aas
mov
push
sbb
cmp
repnz
lock
mov
test
mov
imul
ds
push
push
rorb
and
ret
mov
dec
es
push
pushf
inc
les
lret
in
sub
mov
in
and
movl
jmp
cli
jbe
xchg
pushf
cli
iret
subb
or
mov
xlat
nop
movsb
jp
xlat
jo
ror
outsb
mov
lahf
pop
cmp
arpl
movsl
loopne
clc
mov
jp
sarl
int3
aaa
mov
rclb
jp
sbb
pop
sbb
push
nop
shlb
cwtl
call
je
jbe
cmp
stc
mov
sub
xor
subl
gs
xor
or
dec
out
inc
jbe
jo
insb
mov
dec
or
in
inc
sub
and
fisttpl
push
adc
das
mov
cltd
fildl
sub
scas
add
fs
js
push
xor
int3
nop
loope
sbbl
fstps
jb
add
jg
mov
and
movsl
fisubl
or
stos
and
mov
or
add
xor
movsl
shrb
negl
add
out
xchg
adc
cmc
and
loopne
icebp
daa
or
jbe
js
mov
mov
add
pop
mov
bound
push
adc
lahf
mov
cmc
or
ja
push
ss
push
icebp
sbb
into
mov
sti
cmpsl
imul
cmp
je
sub
or
addr16
cld
mov
mov
mov
inc
push
lcall
sub
inc
sub
cld
sbb
out
test
sbb
hlt
push
jo
in
ja
or
aam
jge
mov
decb
mov
call
or
cmp
sub
lods
cmp
inc
pop
inc
mov
cwtl
and
aam
xor
sub
outsb
cli
rclb
push
movb
push
xchg
xchg
or
cmp
pop
movsb
jnp
pop
lds
and
shl
push
fwait
sbb
and
and
mov
mov
or
out
lcall
ret
scas
loope
into
stc
pop
cld
jl
in
jl
aad
sub
and
shlb
cwtl
inc
xor
rcr
mov
testb
and
mov
iret
mov
fiaddl
cmp
data16
test
jne
arpl
lods
scas
stos
addl
inc
cmpsl
mov
fimuls
inc
mov
out
ds
iret
mov
dec
fmul
bound
mov
inc
mov
pop
shll
mov
mov
fadds
cs
add
or
dec
cmp
cmp
cld
adc
and
and
push
je
mov
imul
mov
mov
shll
into
arpl
fnstsw
jecxz
std
decl
data16
xchg
pop
loopne
dec
inc
loope
ret
and
loop
cmp
push
jae
mov
and
cmp
sbb
jae
jae
mov
push
scas
andb
orb
imul
sti
scas
js
clc
or
mov
std
add
shrl
aas
mov
mov
adc
sub
sar
gs
mov
popf
cmc
and
es
and
lds
or
adc
inc
shlb
pop
xchg
and
aas
fsubrs
aam
sub
and
pop
dec
cmp
test
fdivs
out
test
add
and
jne
mov
and
fcmovu
xchg
jge
out
fidivrl
and
orb
aad
je
scas
inc
xchg
mov
pop
push
es
xchg
or
stos
or
addr16
inc
pop
xchg
testl
mov
stos
ret
fcoml
ljmp
pop
testl
mov
and
jns
xchg
sub
mull
or
adc
sbbb
pop
outsl
adc
mov
xor
fldl
in
clc
stos
shrl
fsubp
jmp
fisubs
aas
xchg
mov
pusha
pusha
dec
hlt
push
ret
or
inc
or
mov
mov
roll
add
mov
arpl
in
dec
mov
out
push
jmp
jecxz
jge
xchg
fsubr
sbbl
pusha
fcmovb
les
xor
cmp
add
dec
pop
lcall
jno
add
mov
jp
cltd
out
jae
pop
xchg
in
outsl
arpl
shll
jo
add
cmp
lret
aam
fs
dec
fdivrs
xchg
lcall
outsl
cmp
jle
iret
clc
pop
cmp
out
in
adc
ja
xlat
jnp
cmp
push
cli
mov
push
frstor
push
js
mov
and
pop
sbb
out
adc
adc
sub
or
mov
pop
std
pop
scas
cmp
xor
mov
inc
ficompl
inc
fisubrs
mov
mov
fidivrs
add
or
and
cld
mov
test
xor
leave
add
test
mov
inc
shrb
dec
jo
mov
dec
stos
aas
fnstsw
data16
jmp
dec
cmp
std
mov
jns
push
cmovo
fst
out
add
aad
nop
push
iret
iret
inc
xchg
ret
adc
out
add
jo
push
mov
mov
or
xchg
pop
cmp
fidivrl
mov
pop
sbb
xlat
and
ret
push
jmp
push
lcall
and
adc
jae
stos
fldenv
adc
pop
movsb
xchg
xchg
xchg
test
data16
imul
jo
cmp
test
roll
and
idivl
push
dec
or
aas
orb
pop
cmp
aas
les
xchg
lock
cmpsl
adc
push
orl
or
mov
fiadds
pop
jmp
int3
xor
mov
inc
les
ret
bswap
call
cmp
mov
and
cmp
dec
loop
sbb
inc
jg
or
rcrl
adc
sarb
xor
push
jbe
test
inc
enter
enter
or
insb
xor
sub
mov
jp
sbb
pusha
incb
xor
rclb
adc
push
loope
data16
pop
arpl
xchg
ss
out
or
leave
adc
inc
repz
xchg
insb
lods
xchg
push
cmp
sahf
lods
jne
rcr
cmpsl
into
xchg
testl
mov
sub
ret
mov
xchg
dec
sahf
xchg
inc
call
shlb
sbb
nop
stos
faddp
test
mov
mov
jne
jl
mov
lcall
jne
lcall
push
mov
sbb
pop
orb
test
fildll
fisubl
repz
insb
out
pop
mov
dec
xchg
xchg
ret
add
ret
jg
data16
lret
fsubrl
addb
ljmp
arpl
add
push
mov
scas
or
and
jo
mov
nop
adc
cld
mov
mov
and
xor
adc
xlat
daa
loope
inc
push
mov
sbb
ret
lret
pop
mov
test
scas
mov
push
into
scas
and
popa
lcall
pop
xor
mov
push
popa
mov
clc
add
jne
int3
push
roll
inc
xor
mov
and
dec
fisttpll
add
icebp
pop
int3
aaa
sbb
xchg
xor
add
mov
mov
fsub
xchg
mov
cli
sbb
fimuls
xchg
fstps
lahf
adc
sti
ds
push
sbb
lret
xor
dec
leave
loopne
xor
push
xor
repz
inc
inc
lods
pushf
mov
dec
jg
daa
insb
xchg
arpl
xchg
out
mov
xchg
add
ds
leave
cmp
mov
mov
out
adc
jne
adc
jl
push
ficompl
jae
ret
mov
sub
and
mov
lea
hlt
and
xchg
mov
xchg
aam
imul
lds
insb
scas
lods
cmp
mov
lods
divb
nop
pusha
mov
bound
and
and
mov
fnsave
sub
and
lret
dec
xor
arpl
sahf
adc
aas
xor
sub
insl
sub
repz
ds
dec
mov
add
fsubl
fdivl
cltd
mov
lcall
mov
std
mov
call
loop
and
sub
dec
dec
push
hlt
clc
xchg
xchg
mov
pop
xchg
pop
jb
or
icebp
sbb
or
pop
add
pop
fbld
loopne
call
iret
lods
mov
xor
insb
movsl
cmp
xchg
arpl
pop
inc
jns
dec
mov
lret
fwait
inc
mov
out
out
jae
ret
popf
shlb
andl
xor
test
int
push
jns
subl
adc
jne
jb
ja
hlt
stos
daa
in
int3
xor
xchg
dec
in
sub
xchg
in
rcr
fbld
lock
mov
rorl
xor
loop
add
and
mov
les
and
and
add
fcoml
ret
lods
or
inc
hlt
add
dec
push
loopne
or
cltd
inc
aad
xchg
pop
enter
mov
push
out
push
dec
mov
das
ss
das
sbb
dec
cmp
lcall
sarb
push
mov
arpl
stos
fdivr
push
test
pushf
sbb
push
sti
push
xchg
rcl
push
fwait
jecxz
sti
fldl
clc
das
in
pop
mov
pop
fwait
aam
jmp
movsb
push
push
enter
pop
mov
dec
nop
sbb
adc
test
imul
or
jbe
ds
push
ret
in
cmc
fmulp
jecxz
out
push
sub
in
xchg
hlt
xchg
xor
or
loop
cmc
sbb
sahf
lea
mov
xchg
mov
add
jp
test
xchg
lods
adc
cmpsb
roll
pop
or
out
pop
pop
push
push
mov
sub
sti
clc
and
call
fbld
shr
mov
sbb
bound
ss
pop
dec
enter
jnp
loope
jne
insl
xchg
fsts
sub
add
and
mov
pop
loopne
test
es
outsl
mov
pop
ljmp
or
icebp
mov
xchg
dec
testl
jae
fisubs
push
push
movsb
daa
add
rclb
shll
imul
addr16
ret
mov
fsubl
lret
sbb
adc
jnp
or
add
mov
add
roll
cwtl
shrb
loopne
cmc
aaa
loopne
pop
add
xchg
dec
mov
add
pop
cltd
xor
daa
sub
mov
loope
add
cmpsb
scas
mov
push
pop
fwait
xchg
movl
ret
dec
js
outsl
xchg
sub
cltd
rolb
jle
mov
adc
jae
fisubs
inc
lea
dec
cli
or
arpl
jae
adc
imull
fwait
loopne
fists
xor
jne
or
leave
mov
sbb
movsl
repz
cmp
sahf
or
rorl
cltd
xorb
add
loope
fdivrl
pop
mov
mov
add
lods
aas
in
cwtl
mov
xchg
cmp
dec
push
ljmp
inc
dec
pop
mov
sbb
inc
call
push
nop
push
pusha
out
pop
push
or
push
sahf
loop
outsb
xor
out
and
es
pinsrw
mov
aaa
sahf
imul
push
insl
ret
mov
xchg
push
xor
stc
jg
lock
iret
xor
lock
xor
xor
sub
mov
sbb
mov
pushf
add
leavew
repnz
mov
psllq
lcall
popa
and
add
pop
int3
lahf
dec
inc
rcr
cmpsb
decl
cmp
mov
inc
cmc
lret
adc
nop
and
xchg
pop
clc
in
std
or
sub
std
adc
lret
cmp
pop
adc
inc
mov
test
out
xor
add
shlb
cld
inc
xor
cmp
mov
inc
fimull
push
add
lret
jae
cmp
je
mov
jne
je
pop
push
repz
mov
test
mov
lods
mov
cmp
imul
cmp
jp
jne
popf
sub
dec
xchg
insl
jp
icebp
iret
mov
bound
add
or
rorl
xchg
xchg
mov
out
insl
dec
mov
xchg
out
and
pushf
cld
not
lret
dec
lahf
and
mov
je
dec
add
cmp
pop
add
out
test
cwtl
popf
xor
push
push
hlt
pusha
test
fmull
push
in
jmp
pop
insb
iret
sub
js
xchg
mov
lahf
push
jp
mov
ljmp
loop
sbb
xor
jl
shrb
or
enter
gs
out
stos
insb
adc
popa
shrb
xchg
mov
xor
push
lock
aam
das
mov
or
sub
cmc
lret
jge
sbb
cltd
xor
mov
int
loope
mov
dec
fdivrl
mov
je
pop
mov
mov
std
jnp
adc
pop
pop
mov
dec
or
sub
mulb
cwtl
int3
xchg
and
ljmp
scas
adc
xchg
cmp
jg
repz
jge
push
popa
xchg
pop
clc
pushf
in
leave
sub
shlb
lock
jmp
cs
push
adc
je
ds
mov
pusha
lret
pop
adc
xor
push
out
push
push
jl
mov
repz
popa
fwait
sbb
jle
dec
cld
faddp
lahf
mov
out
test
dec
add
icebp
scas
push
mov
shrb
adc
push
sarl
ds
das
in
scas
jecxz
fadds
enter
add
lcall
fbstp
or
push
mov
popa
bound
inc
push
xchg
push
pop
call
dec
inc
mov
push
sti
mov
mov
add
push
scas
cmp
daa
dec
sbb
test
out
bnd
repz
xor
xchg
and
jl
xchg
pop
scas
xor
add
adc
pusha
mov
icebp
repz
or
pop
dec
ja
lods
sbb
xchg
dec
push
mov
ja
stos
imul
add
fs
pop
lods
inc
sub
push
fildl
rclb
popf
inc
icebp
paddq
add
cmp
push
stc
sbb
jae
into
pop
lock
jbe
call
xchg
push
mov
and
push
sbb
fcoml
sarl
ds
fdivs
in
call
cmpb
mov
mov
jns,pt
jo
push
iret
ja
popf
jge
xor
dec
ja,pt
call
xlat
mov
sub
xchg
mov
cli
imull
aam
jl
out
mov
pop
jl
dec
xor
jle
fwait
adc
xchg
jp
fwait
xchg
and
jp
or
imul
mov
test
imul
rclb
push
sbb
adc
enter
mov
xchg
xor
cmp
lcall
inc
hlt
dec
push
cmp
test
insl
les
shrl
inc
pop
movsb
dec
clc
in
js
enter
daa
mov
popa
aad
popa
dec
cmp
sti
pop
rcrb
inc
in
cmp
push
pop
add
enter
cltd
sti
stos
sub
mov
pushf
mov
xor
pop
sbb
push
mov
cli
fildl
mov
mov
xchg
inc
hlt
je
or
jno
push
inc
fs
cld
sub
orl
or
push
scas
dec
xchg
repnz
sbb
enter
mov
adc
jbe
pushf
nop
fildll
in
pop
sub
mov
xor
sub
adc
add
jl
out
cmp
push
insl
lock
jecxz
jnp
xchg
adc
out
mov
or
mov
popf
sbb
jle
pop
lret
dec
xor
mov
jo
or
mov
decl
fbld
sti
push
sahf
mov
imul
xchg
mov
outsb
pop
fs
pop
cmpl
xchg
aad
faddl
jne
jg
pop
mov
sub
and
pop
aam
addr16
jbe
ret
js
mov
in
add
movsl
cli
push
das
insl
clc
mov
adc
sub
lahf
xor
or
clc
lods
imul
xchg
add
imull
bound
stc
flds
add
or
mov
dec
adc
mov
out
cld
sbb
pushf
scas
jnp
jbe
cs
xor
push
adc
jmp
xor
jle
adc
int
push
xchg
out
pop
jecxz
leave
and
lret
push
popa
ds
xor
rcrl
and
fadd
and
inc
orl
mov
mov
xchg
int3
push
rolb
js
mov
xor
mov
jo
jmp
cmp
mov
addr16
icebp
jecxz
sub
push
ret
xchg
inc
jmp
ror
les
mov
jmp
cli
jmp
notl
inc
ss
xchg
pop
aas
lea
sahf
jmp
jg
data16
sar
jle
test
mov
out
xor
jecxz
lahf
sarb
and
fisubrs
in
xchg
cmp
fdivl
cmp
fisubs
mov
or
cmp
sub
loopne
sub
subl
out
push
jg
pop
in
xchg
adc
add
into
xor
push
sub
mov
cmp
mov
jbe
xchg
imul
or
loop
sub
shlb
insl
pop
ss
jno
xor
lret
mov
mov
sbb
xor
pop
push
or
dec
outsb
test
push
push
sti
fst
adc
and
fidivl
sarb
mov
popa
mov
xchg
mov
sub
ret
js
rclb
das
jbe
adcb
fwait
xor
xor
in
jne
xor
stc
inc
xchg
cmc
jmp
imul
xlat
les
cmp
mov
dec
lret
daa
cltd
push
lahf
lods
mov
movsl
xchg
mov
mov
jbe
sbb
adc
mov
pop
in
mov
clc
fs
pop
inc
shrl
adc
add
xchg
insl
cli
lds
jne
outsb
cwtl
dec
mov
or
or
mov
inc
test
cmp
je
mov
dec
std
cmp
xchg
mov
add
push
jp
pop
sarl
inc
cmpsb
sbb
outsl
push
nop
push
inc
dec
mov
mov
jne
xchg
sbb
mov
ss
in
and
add
dec
dec
andl
loop
lds
xchg
fidivs
push
movsb
or
loope
mov
sbb
mov
jnp
dec
daa
jo
andl
jno
sbb
aas
push
push
jecxz
ficomps
lcall
pop
push
jl
jge
movsl
and
repnz
into
int
pop
adcb
xchg
push
sub
in
fldenv
xchg
xor
enter
dec
adc
xor
xchg
xchg
xor
push
in
inc
std
pop
jb
push
pop
cmpsl
les
add
lods
mov
xchg
clc
jb
dec
mov
pop
push
mov
or
cmp
fmull
ljmp
daa
or
xchg
scas
adc
fnstcw
enter
pop
imul
push
cmpsb
cld
sbb
add
mov
orb
mov
es
mov
or
repz
add
aam
inc
jno
daa
sbb
dec
lods
adc
and
pop
or
pushf
addr16
aaa
popl
pop
popf
add
xchg
call
fldl
es
mov
rorl
adc
lock
insl
jo
sub
jne
pop
xchg
shll
pop
outsb
add
dec
enter
push
mov
rclb
push
push
scas
mov
jns
inc
cmp
sbb
stos
xor
mov
mov
mov
das
sbb
call
sub
push
xor
bound
test
shll
out
imul
push
xlat
or
or
icebp
cmp
pop
rcrl
sbb
mov
inc
xor
mov
lds
shlb
pop
fstpl
insl
arpl
mov
mov
jp
dec
clc
xchg
adc
sti
into
dec
mov
sub
cld
xchg
and
cmpsl
cmpsl
sbb
out
push
mov
mov
pop
jno
xchg
fisubl
roll
ds
les
dec
push
jge
enter
popl
xor
sbb
inc
add
jmp
jae
mov
stc
incl
adc
inc
mov
push
ret
adc
or
jbe
shl
inc
cltd
data16
sub
mov
dec
lret
jp
mov
push
jne
jo
test
lds
clc
mov
push
xchg
repnz
jl
cld
js
popf
inc
lock
xor
outsl
jns
push
movsb
sbb
pushf
or
shl
outsl
mov
sbb
outsb
loope
cmp
into
xchg
inc
mov
cmc
fdivrs
cs
xchg
in
fimull
and
xchg
inc
shll
xchg
pop
outsb
jb
xor
lret
daa
sbbb
es
xchg
jp
mov
imul
sbbl
add
cltd
cmp
addr16
or
mov
sub
dec
dec
mov
cmp
dec
pop
int3
jb
in
pop
lahf
or
dec
mov
pushf
leave
add
sbb
pop
or
ds
jecxz
jp
mov
mov
add
nop
into
and
or
pop
xor
out
jmp
shrb
cmc
pushf
jae
fnstenv
rcll
fwait
movsl
xchg
inc
test
frstor
jmp
aaa
mov
adc
lahf
dec
lea
fisttpll
inc
xchg
adc
jns
lahf
mov
inc
lret
pop
rclb
call
mov
xchg
add
pop
mov
pusha
movsb
and
repnz
and
lock
mov
xchg
repnz
sbb
add
push
std
mov
mov
mov
add
dec
mov
jo
out
and
shll
loope
xlat
fdivrs
jo
cmpsb
lret
setno
rcrl
loop
xor
rcrb
in
sub
xchg
loope
ret
cmc
mov
jo
push
dec
adc
repnz
push
inc
or
xor
loop
jne
daa
xchg
pop
and
fisubs
mov
sbb
xor
in
shrl
jecxz
es
loope
enter
dec
cmpsl
jg
mov
dec
sahf
mov
jmp
mov
idivl
movsl
mov
pop
dec
ljmp
lcall
adc
shrb
push
push
mov
xchg
in
js
inc
ret
sbb
fsubp
dec
jmp
add
mov
sub
ja
decb
sbb
xchg
dec
push
shll
fucomi
mov
cmp
mov
stos
lods
adc
push
pop
imul
cmpl
jge
jo
mov
push
add
cmp
xor
jns
les
dec
stos
xchg
leave
fisttps
inc
fcmovbe
les
popf
xchg
enter
insl
cs
ss
jp
jg
pop
xor
mov
pusha
lahf
negb
dec
push
lcall
sbb
pop
push
rolb
popf
ret
orb
mov
jecxz
bound
daa
mov
mov
mov
xchg
decl
fdivrp
in
mov
jl
ret
jae
dec
movsl
aaa
dec
sbb
xor
subb
std
mov
inc
jbe
pop
xchg
dec
fcoml
out
or
cmpl
imulb
nop
add
daa
stos
mov
pop
lock
hlt
orb
movsl
pop
sub
fs
insb
mov
daa
push
inc
and
or
shl
xor
loope
je
lods
mov
ljmp
jne
nop
mov
iret
mov
or
lock
dec
push
xor
mov
out
dec
daa
outsl
scas
and
pop
cmpsl
sbb
sti
mov
std
in
fcompl
add
xchg
scas
jmp
mov
and
lret
mov
and
stos
jmp
xchg
lock
roll
mov
lcall
mov
in
pop
shll
lods
int
andl
imul
shrb
inc
enter
out
lock
xchg
mov
js
pop
movsl
jl
hlt
jmp
dec
lret
xor
aas
arpl
lcall
dec
xchg
test
mov
cltd
dec
leave
fsts
idivl
lods
jnp
sbb
ljmp
mov
push
std
mov
jno
pop
iret
xchg
push
mov
imul
popf
testb
das
jns,pt
aad
cmp
xchg
aad
outsb
xor
fcmovb
cmpsl
mov
xchg
pop
pop
and
test
mov
mov
std
push
lret
or
popa
pusha
test
cmp
je
or
es
mov
mov
add
lcall
and
fildll
sar
mov
fadds
sbbb
aas
mov
imul
cmc
ficompl
outsb
imul
adc
mov
rcrb
sub
pop
lds
lret
or
dec
std
cli
dec
jbe
cmp
jl
xor
pusha
fnstenv
xchg
je
inc
cmp
add
scas
ret
fdivs
jmp
push
lahf
lds
dec
stos
data16
fiadds
jbe
in
push
or
dec
cwtl
movsb
mov
xchg
and
notl
mov
outsl
jbe
mov
sub
sub
ficomps
xchg
sarb
aaa
push
dec
movsl
loope
arpl
and
cmpsl
pop
test
jno
outsl
and
loope
je
clc
xor
cmp
shr
push
cli
mov
in
loope
arpl
mov
pop
xchg
xor
sbb
inc
divb
shlb
aaa
xchg
adc
ret
rcl
enter
repz
or
ret
je
imul
in
mov
mov
stos
jp
sbb
imul
cmp
lcall
in
je
insl
hlt
ljmp
push
lods
push
aam
mov
out
repz
push
add
sub
cmovns
jbe
fimull
fisubs
cmpl
enter
fmuls
fidivs
adc
xchg
pop
pop
mov
inc
stos
cmpb
or
rol
mov
in
mov
push
aad
clc
jecxz
dec
scas
test
xchg
cmpsb
mov
mov
and
setns
xor
and
and
add
aas
repnz
and
cltd
jne
sbb
mov
fcoml
xor
mov
addr16
xchg
push
scas
negl
imul
jnp
lock
loop
movsl
cld
sahf
out
ljmp
cmp
ljmp
sub
nop
jo
mov
sahf
dec
mov
jne
mov
ds
out
or
push
fidivrs
lret
sub
stc
jl
cmp
and
xor
dec
dec
add
enter
mov
std
pusha
sbb
push
mov
mov
arpl
jg
test
out
pop
insb
sbb
inc
in
lret
out
insb
daa
xor
out
loope
push
imul
hlt
sarl
inc
push
cmp
rorb
dec
aad
fwait
mul
addl
pop
aam
imul
ds
fnstcw
mov
lods
cli
jmp
push
push
and
jne
adc
or
xchg
lock
cmp
loop
lock
lods
mov
imul
push
cmp
push
jmp
push
lret
jle
jge
pop
inc
jl
iret
cmpsb
xlat
call
iret
push
push
lret
inc
sbb
icebp
push
xchg
hlt
or
dec
test
cmp
cmc
and
push
pusha
add
xchg
mov
mov
push
and
aas
mov
jge
push
iret
aam
sbb
cmp
movsb
dec
cli
xchg
cmpsl
push
pop
jnp
pop
fcomp
loopne
xor
mov
ja
fwait
and
xor
out
mov
movsl
xchg
and
cmpb
xor
popa
sub
rcr
out
sar
lret
mov
adc
mov
loope
sar
jge
fsubr
bound
ror
add
mov
les
scas
enter
cmpsb
movsl
cmc
ret
sarb
insl
loop
int
mov
test
lahf
dec
and
push
enter
inc
sbb
into
mov
xor
gs
cltd
and
sti
fidivrl
xor
sub
ficoml
rolb
ss
ret
push
cmc
insb
mov
mov
sub
hlt
enter
mov
dec
std
test
icebp
movsl
aam
addps
dec
sbb
sahf
sbb
jae
jo
shll
in
in
mov
into
xor
and
jmp
jbe
lea
mov
ret
cmc
aam
add
sbb
rcrb
lahf
and
leave
cli
je
cmp
xlat
lods
push
lea
movsl
jge
lods
xchg
mov
lods
test
jge,pn
pop
cltd
cmpsb
sbb
enter
call
xor
inc
sub
arpl
mov
lahf
arpl
or
xor
mov
cmovnp
jb
stos
shrb
int
addl
push
dec
stc
je
pushf
sub
push
cmc
push
movsl
das
jg
jmp
fwait
out
inc
mov
cmp
jae
mov
shlb
sti
fsubrl
imul
mov
stos
or
inc
push
inc
fimull
popf
jg
repnz
jg
jno
icebp
sbb
imul
xchg
stc
clc
mov
push
sbb
adc
jge
cltd
inc
mov
dec
sub
jae
int3
rcr
ljmp
testb
lahf
inc
sbb
es
xor
cmc
mov
pop
aas
imulb
out
adc
jle
ficompl
sahf
add
sub
cmp
in
mov
pop
mov
daa
outsl
add
hlt
jbe
or
stos
push
push
std
lods
cmp
in
adc
jecxz
adc
and
sbb
adc
neg
inc
jmp
roll
push
das
inc
mov
data16
lock
test
rclb
cs
dec
mov
mov
cwtl
mov
mov
pusha
icebp
sbb
pop
push
xchg
mov
sub
pop
insl
in
xchg
pop
bound
mov
pop
sub
push
dec
mov
jp
imul
les
mov
xor
daa
xorl
shlb
out
out
scas
scas
popf
and
adc
dec
aam
mov
jno
xchg
loope
mov
mov
ja
sbb
shl
fidivs
repz
jns
mov
mov
push
es
das
sbb
ss
mov
mov
xchg
mov
pop
mov
sbb
jae
push
xchg
mov
fsubl
mov
cmp
add
imul
jge
cmpsb
pop
mov
repnz
cwtl
sahf
lods
fsubl
je
add
mov
ret
sbb
fnsetpm(287
mov
ret
pop
pop
je
arpl
jle
pop
sbbl
jns
pop
push
xchg
mov
cmp
pop
jle
adc
stos
dec
jle
pop
jb
sub
add
sub
xlat
test
xchg
stos
incl
cmp
xchg
cltd
mov
fcompl
cmp
and
outsb
or
in
dec
xor
xchg
je
xchg
lods
aam
jb
mov
pusha
lods
fchs
xchg
sbb
ja
les
ss
cmp
dec
inc
jge
pop
fcoml
mov
cli
shll
add
xchg
xor
clc
outsb
add
dec
inc
mov
push
scas
arpl
gs
pop
data16
xor
cmp
outsb
gs
mov
dec
rcll
mov
testl
stos
addl
shlb
inc
mov
mov
xchg
daa
push
jne
mov
and
mov
mov
aaa
scas
in
dec
daa
popa
rolb
jno
jb
mov
ja
in
jle
and
xor
pop
call
lds
lods
repnz
cmp
leave
push
dec
test
mov
clc
test
jae
adc
es
in
jle
adc
movb
jecxz
push
nop
jl
aas
pop
imul
inc
addb
orb
sar
sbb
mov
push
test
pop
mov
xchg
xor
jp
mov
and
mov
jae
rcrb
jmp
testl
mov
add
rcl
lret
jecxz
out
xchg
cmc
xor
jbe
or
dec
lods
push
cmp
xchg
popf
inc
sbb
aam
jne
xor
lretw
push
jo
dec
cmp
arpl
in
call
mov
ds
mov
into
mov
fdivs
pop
adcl
test
outsl
mov
pop
movsl
xchg
rorl
int3
dec
jg
push
cmc
in
lds
xor
icebp
mov
or
cmc
enter
cwtl
in
nop
stos
rclb
push
daa
jne
test
xchg
flds
pusha
sbbb
addr16
jp
add
outsl
or
cmc
subl
cltd
pushf
xorb
lret
xchg
pop
mov
push
cmpsl
sbb
inc
jb
fildl
in
dec
hlt
in
ljmp
jge
repnz
push
dec
aad
push
bound
pop
inc
mov
push
push
mov
cmp
imul
or
inc
loop
sbb
inc
and
mov
aaa
push
mov
sub
add
cli
aas
inc
ja
inc
cmc
lahf
loop
mov
jmp
lock
add
iret
movsl
jb
sub
fwait
arpl
in
scas
pop
pop
inc
insb
xor
and
insb
cwtl
repnz
mov
xchg
sub
push
dec
sbb
std
lock
and
jnp
push
loop
mov
lret
dec
nop
cmp
push
je
cmp
cs
add
add
pop
push
cmp
out
sbb
mov
mov
mov
test
out
insl
daa
pop
das
jnp
mov
mov
dec
add
jge
movl
outsl
mov
rcll
fimull
sbb
pop
sbb
jge
xchg
sub
dec
subl
in
xor
jp
shl
aas
iret
insl
and
push
dec
push
mov
negl
out
shr
ja
inc
outsl
adcl
aad
sbb
pushf
sbb
sub
sub
lret
and
je
popf
mov
sub
add
inc
and
loopne
add
pusha
aad
or
testl
repz
sub
mov
gs
jns
jmp
adc
mov
rorl
mov
sahf
mov
jnp
lcall
inc
test
pushf
xchg
stc
lret
push
and
inc
aas
inc
inc
mov
xchg
mov
dec
ljmp
jle
sub
xchg
icebp
mov
sub
jmp
sbb
sub
inc
enter
mov
xor
xor
je
lods
testl
lods
aaa
cmc
dec
les
jb
fldcw
mov
fwait
test
jnp
dec
mov
sub
movsb
fimuls
xchg
shr
xchg
les
out
mov
loopne
fiadds
xorl
test
loopne
ret
in
pusha
pop
outsl
xor
ret
int
ret
iret
mov
lods
ljmp
and
mov
fsubs
mov
jno
pop
stos
pop
inc
sbb
jns
inc
out
sub
addl
xchg
push
lcall
adc
mov
xchg
repz
repnz
outsl
ljmp
lock
adc
sbb
pop
cmp
sti
sub
mov
push
nop
push
adc
adc
push
sti
and
sahf
or
hlt
xor
loopne
pop
fwait
xchg
add
and
xlat
push
jge
mov
cwtl
add
sub
add
rcll
movsb
push
insb
insl
or
mov
mov
mov
fwait
jnp
clc
insl
sub
std
icebp
clc
sub
jmp
pop
out
pusha
pop
push
lock
sbb
pop
add
inc
mov
lods
loop
addr16
lret
cmp
rol
fldl
cmpsl
ljmp
call
scas
adc
into
adc
out
adc
mov
fildll
sub
mov
dec
insl
movsb
inc
pop
negb
cmp
add
xchg
ljmp
and
jnp
cmp
sbb
gs
mov
push
add
insb
mov
mov
scas
cwtl
push
dec
jnp
push
addr16
mov
loope
lods
enter
arpl
inc
sti
inc
xchg
test
push
arpl
pop
mov
sarb
dec
shll
dec
stos
test
jo
test
and
adc
sub
lods
pop
das
push
inc
xchg
push
das
sbb
rcl
in
int3
je
push
add
xchg
scas
mov
call
jns
pop
adc
inc
xor
nop
or
fstl
lret
fists
flds
pop
jp
into
cmc
arpl
push
fdivrs
outsl
dec
pop
xor
mov
xor
jb
cmp
xchg
or
fwait
insl
add
testb
out
mov
scas
xchg
clc
jne
mov
icebp
pop
je
mov
push
cmp
pop
mov
xor
jl
pushf
std
sbb
or
sti
repz
mov
mov
sbb
sbb
es
rolb
mov
xlat
xchg
pop
or
dec
lock
inc
mov
shl
jge
sbb
pushf
shll
out
leave
fs
fsubrp
xchg
cmp
and
andl
add
mov
ds
ss
jno
cmp
lret
cmp
push
ret
mov
aam
scas
sbb
adc
shll
xchg
fcmovnu
out
in
push
addb
jecxz
dec
sub
sub
xchg
rcr
adc
sub
das
dec
inc
xchg
mov
mov
call
imul
sbb
inc
sbb
cli
push
test
scas
mov
shlb
sbb
xchg
leave
dec
adc
adc
fcompl
mov
dec
cmp
aam
dec
jo
es
and
push
lea
sbb
fisubl
stc
and
and
cmp
mov
out
in
ret
sub
jmp
jns
and
faddl
inc
cmc
cwtl
dec
and
sub
inc
leave
icebp
repz
dec
rol
ret
aam
lahf
fimull
stos
je
dec
out
mov
scas
btr
jns
in
in
jp
mov
jle
and
xchg
popl
cmp
sbb
stc
xor
xchg
test
stos
dec
nop
inc
dec
rorb
jne
mov
adc
mov
or
jp
sbb
jle
add
ror
jno
repz
cmp
mov
dec
dec
lret
and
xor
ljmp
cld
add
fidivl
nop
sbb
orl
sub
and
in
push
sub
dec
cltd
dec
in
jp
test
rorb
pop
mov
mov
mov
bound
cmp
mov
jne
cli
rolb
fiadds
lret
out
xor
xchg
test
jl
xchg
mov
or
js
or
mov
sbb
ja
test
cmp
ret
pop
push
push
xchg
mov
in
cmpb
ja
push
addb
sti
js
fucomp
sbb
loop
arpl
lods
sbb
subb
ror
push
orb
push
xor
daa
incl
bound
xor
add
data16
inc
or
add
cmpsl
adc
ret
lcall
and
jno
xchg
xor
pop
adc
mov
scas
filds
pop
cmp
icebp
sti
shlb
dec
dec
jp
jno
sbb
sbb
cmp
out
add
inc
push
jle
mov
repz
xor
sti
insl
push
scas
pop
and
jne
pop
mov
mov
loope
dec
ret
inc
decl
mov
hlt
cmp
pop
lock
add
inc
ds
mov
ret
xchg
ds
ret
adc
hlt
stc
and
fadds
cmp
das
cmp
in
inc
pop
movsb
xor
sbb
pusha
cmpb
inc
ret
jno
pop
mov
and
test
push
int
mov
imul
in
mov
push
loop
cwtl
push
or
cmp
sub
pushf
xor
shlb
pop
mov
lds
in
decl
jbe
mov
or
dec
sub
xchg
push
fiadds
sbbl
pop
lret
inc
scas
adc
andl
es
popa
mov
lods
and
cli
inc
filds
imul
daa
stos
sahf
mov
jg
cmc
rorb
pop
fsubrl
or
inc
inc
inc
and
sarl
and
add
jb
xchg
mov
mov
pop
inc
sub
inc
dec
pop
sbb
or
mov
icebp
scas
cwtl
mov
test
xor
adc
or
stos
mov
pop
fwait
aaa
push
outsl
lahf
shl
out
mov
adc
mov
cli
test
add
sub
aad
jge
cmp
imul
dec
inc
jle
add
clc
add
stos
dec
out
inc
sti
orl
adc
pop
sbb
push
js
cld
mov
iret
insl
push
jns
ret
out
jbe
imul
jp
sbb
mov
lods
sbb
icebp
sub
test
notl
in
outsl
pusha
mov
insl
or
mov
sub
cmp
jl
test
insl
mov
mov
xor
mov
xorb
loop
adc
add
repnz
push
push
loope
mov
hlt
lahf
jp
pop
leave
xchg
mov
sbb
adc
movsb
in
xor
pop
orb
pusha
mov
push
out
test
jnp
test
and
shrb
out
pop
adc
ret
pop
mov
mull
rol
fxch
in
test
out
jns
rcll
fiadds
lods
pop
dec
outsl
pop
mov
xchg
dec
ret
clc
cmp
push
outsl
and
lock
xchg
stc
daa
xchg
adc
mov
insb
inc
aas
jle
ljmp
dec
pop
test
repz
sbb
pop
insl
mov
scas
and
decb
loope
aam
xor
shll
fdivp
adc
int
sub
pop
mov
adc
test
jg
dec
das
sub
mov
xchg
xchg
mov
shlb
sub
adc
or
xchg
add
out
out
pop
lds
cmp
inc
stos
imul
insb
and
leave
xchg
xchg
paddusb
scas
mov
outsb
dec
or
data16
notb
sub
jp
inc
in
mov
ss
out
aas
push
cltd
fldcw
cmpsl
lods
stc
dec
jno
jo
loopne
xchg
jge
or
nop
shl
push
repnz
out
stc
out
inc
push
aad
orb
ret
mov
fs
scas
adc
sbb
push
repnz
xor
in
push
pandn
daa
sub
lret
test
mov
popf
into
les
sbb
dec
xchg
xchg
cltd
jnp
cli
lret
icebp
pop
mov
daa
mov
adc
xchg
outsl
enter
mov
and
mov
mov
nop
or
test
fbld
test
mov
orl
cmp
sub
inc
dec
or
mov
push
ljmp
popf
jne
mov
dec
jl
addr16
mov
sub
sbb
lret
cli
sahf
cmp
pop
insb
push
and
cmp
ret
in
pop
lods
hlt
cld
into
sbb
sub
mov
dec
arpl
sbb
shrb
xor
cmp
cmp
xchg
or
rcr
mov
pop
xor
or
or
loopne
sbb
out
jb
xchg
test
adc
sbb
mov
enter
popf
lock
arpl
cwtl
pop
mov
repz
and
jle
mov
adc
outsb
cli
dec
stos
int
jbe
mov
ljmp
cld
or
shll
mov
mov
mov
in
sbb
sahf
in
sub
inc
inc
jle
push
imul
insb
sbb
and
and
jo
and
cli
outsl
mov
cwtl
dec
lock
std
pop
sbb
inc
jno
mov
inc
shr
stc
stos
xchg
loope
fldenv
das
shlb
add
jg
int3
fwait
xchg
mov
mov
inc
enter
push
outsb
fwait
cmp
leave
dec
inc
cltd
pop
pop
mov
xchg
pop
clc
in
test
loop
dec
pop
sub
movsb
test
pop
pop
in
mov
call
sbb
and
inc
mov
and
cmpsl
lret
enter
data16
rcrl
and
pop
and
out
arpl
sarl
lods
in
popf
xchg
sarl
mov
fwait
out
add
add
lahf
hlt
lahf
fxch
or
dec
adc
jp
xor
rolb
inc
mov
sahf
xor
fisubs
jno
popa
insl
out
subl
or
xor
int3
mov
push
fidivs
sub
popf
jbe
cmp
xorb
loopne
adc
push
xor
sub
mov
scas
stos
repnz
and
add
dec
popa
mov
jbe
xchg
dec
data16
mov
pop
scas
inc
xor
pop
sarb
in
pop
mov
aam
popa
insb
push
idivb
imul
daa
inc
sub
fstpl
inc
xor
aas
sahf
cld
cmp
outsb
ret
call
sbb
in
iret
adc
lcall
adc
dec
or
mov
add
fldcw
push
sub
or
inc
and
xor
sbb
inc
loopne
mov
in
and
stos
cmpsl
or
or
sub
shl
xchg
and
inc
xor
insl
pop
stos
dec
mov
add
mov
xchg
int3
cwtl
xchg
sbb
call
cld
or
jge
fiaddl
sahf
jne
lods
jno
stos
adc
sub
mov
test
pop
or
stos
ds
daa
cmp
cmp
inc
push
int
or
push
cmpb
int
popf
aad
loope
popf
add
or
nop
push
xor
jmp
dec
mov
push
xchg
testb
xchg
or
or
or
jo
test
jb
push
xchg
andl
dec
jmp
jo
into
shl
in
jle
or
repnz
fstpt
sbb
stos
xchg
add
xchg
xor
inc
sub
inc
mov
testb
pop
mov
or
lds
push
arpl
xlat
mov
loopne
sysexit
xchg
nop
adc
das
mov
add
mov
cmpsl
mov
stc
jbe
jmp
lods
imul
pop
inc
mov
rcll
add
loop
js
fsubl
popa
pushf
in
aaa
jae
jp
mov
push
jne
test
pop
xchg
sub
add
or
pop
mov
sbbl
inc
ss
aam
in
sbb
icebp
dec
inc
divb
xor
rcll
sarl
stc
fstl
inc
push
pop
xor
add
inc
jle
orl
adc
neg
push
jnp
dec
sub
mov
inc
aas
jl
adc
push
sbb
dec
jecxz
mov
jecxz
sub
stc
xchg
addr16
loopne
fsubrp
movsb
cmp
add
xorb
sarl
icebp
dec
jg
ss
jo
mov
push
jo
mov
sub
jmp
cmp
std
fdivrl
jnp
fwait
sub
fcmovbe
call
and
pop
aad
imul
adc
jmp
sbb
inc
aas
daa
inc
xchg
lahf
inc
daa
aaa
jg
push
dec
fdivr
imul
and
je
mov
xor
aad
xlat
and
ljmp
cli
jnp
cmpb
fnstcw
mov
mov
adc
cwtl
rol
dec
mov
outsl
iret
xchg
cwtl
mov
shll
or
xchg
sub
add
lds
lretw
outsb
jno
adc
xor
mov
imul
ja
es
or
data16
dec
pop
mov
fsubs
out
adc
push
adc
jo
push
movsb
or
loopne
inc
inc
push
mov
xor
pop
sbb
sarl
mov
or
jge
out
fs
insb
out
jae
pop
push
mov
and
sbb
mov
xchg
es
pop
and
cs
mov
subl
and
out
outsl
adc
xchg
push
add
cmc
jo
fwait
mov
bound
ss
pop
and
push
rol
jne
jae
mov
sbb
sub
daa
gs
je
jb
aaa
pop
call
ret
xorb
stc
cwtl
ret
mov
xchg
and
push
sti
icebp
push
shrl
xchg
xchg
test
hlt
dec
push
dec
sahf
dec
out
dec
sarl
shlb
jns
or
mov
ss
bound
stos
add
out
jbe
or
das
jo
flds
push
js
mov
xchg
push
lea
dec
pop
mov
push
lcall
imul
test
fldcw
mov
in
mov
lea
cmp
adc
arpl
sbb
test
rol
scas
mul
int3
cmp
leave
cmp
stos
inc
lahf
lret
ljmp
push
jns
popf
lret
les
push
scas
imul
dec
xchg
in
fstpl
sub
dec
xchg
xlat
mov
jns
or
mov
sub
insl
sub
cmp
inc
popf
cld
data16
mov
insb
mov
scas
sub
pushf
mov
js
pop
or
sbb
loop
xchg
jne
ret
xlat
int3
or
ficompl
mov
dec
mov
sub
and
insb
xchg
pop
fcmovb
std
xor
cmp
pop
loop
icebp
jnp
in
pop
mov
and
xor
fnstenv
aam
cmp
or
xor
push
cmp
push
mov
fdivs
movsl
sbb
inc
cmp
aad
in
movsl
in
dec
mov
jb
ret
aaa
pop
fimull
ret
cltd
leave
cmpsl
fidivrs
rcll
int3
xchg
in
je
xor
rorb
lock
add
imul
xor
add
push
nop
or
jnp
loope
dec
jmp
cmp
les
stos
cmpsb
mov
adc
ja
repz
or
aad
in
sahf
jmp
iret
inc
mov
out
in
and
lcall
sahf
lds
jbe
stos
add
or
cld
dec
leave
push
ret
jnp
fwait
push
cmp
inc
insl
or
xchg
lods
shlb
daa
and
popf
jno
es
enter
inc
jnp
loopne
dec
or
stc
mov
flds
std
and
or
pop
adc
and
add
ficomps
aaa
mov
arpl
and
lods
dec
pop
outsb
xchg
ljmp
sbb
aad
je
insb
dec
out
pop
int3
es
loopne
mov
pop
mov
xchg
les
shl
push
inc
pushf
pop
mov
xchg
jecxz
andb
cli
xor
or
iret
lret
cmpsl
addb
lods
xor
nop
lea
data16
cmp
pop
sbb
sbb
pop
lea
lret
inc
stos
rol
jae
call
aas
pop
imul
pop
repz
mov
mov
dec
push
xlat
pop
mov
out
int3
mov
mov
in
xchg
xchg
mov
faddp
lods
andb
mov
inc
loopne
push
xchg
cld
xor
or
icebp
and
inc
push
mov
pop
sbbb
and
dec
inc
pop
shl
pop
adc
or
mov
mov
adc
outsb
loop
xchg
pop
fimuls
mov
sbb
jns
fstpl
hlt
xchg
cmp
pop
pop
outsl
add
push
or
sub
mov
notb
pusha
rclb
pusha
inc
mov
cli
sbb
cmp
iret
sub
jnp
cmpsl
inc
jne
out
sbb
nop
imul
cwtl
icebp
lds
inc
daa
fimuls
repnz
jl
push
or
fninit
sub
cld
scas
add
cltd
add
sub
in
inc
clc
loope
adc
repnz
call
lds
sbb
pop
std
aam
orl
and
ret
xor
ss
sti
shlb
adc
sub
push
mov
or
jg
mov
clc
outsb
mov
sbb
cmpsl
sbb
pop
add
adc
das
outsb
adc
push
mov
aaa
inc
mov
stos
jl
inc
xchg
dec
xor
mov
push
mov
dec
mov
es
inc
pop
cmp
and
push
dec
lock
in
inc
cmp
lcall
leave
or
jle
jl
jo
stc
push
es
xchg
int3
push
movsl
xchg
insb
daa
andb
and
in
mov
inc
xlat
orl
add
mov
mov
xlat
fidivl
imul
xor
sbb
aam
dec
mov
ja
test
mov
xchg
sbb
lock
push
stc
popf
add
jmp
push
lds
lret
cmpb
inc
fstpl
rcrl
shrl
cmpsl
add
xchg
sub
inc
mov
in
jp
ficompl
xchg
aas
push
insb
int
sbb
sub
ja
sbb
cmpsl
sub
sti
sbb
or
sbb
xor
jg
sub
cs
or
cmp
xor
xchg
mov
sbb
adcb
aam
dec
inc
add
js
jg
stc
jnp
push
cmp
imul
mov
mov
arpl
and
push
sahf
pop
xchg
push
xchg
test
inc
push
inc
shll
inc
push
mov
lea
push
insl
add
pop
pop
stos
les
mov
push
pop
daa
mov
and
in
hlt
pop
mov
push
dec
push
xchg
or
xor
or
mov
aas
cmpsb
cld
test
sub
arpl
jo
mov
mov
icebp
dec
movsl
add
add
jl
or
push
scas
inc
insb
lahf
mov
xchg
orb
jnp,pn
bnd
in
jp
sub
rcl
fldt
xor
outsl
mov
stc
sub
mov
imul
dec
cmpsl
or
fmul
loopne
daa
popa
das
into
in
cmp
or
xchg
cltd
adc
ss
mov
jo
jl,pt
int3
mov
test
insl
xchg
inc
mov
lods
lods
js
xchg
mov
xlat
sub
clc
fisubrl
scas
test
sbb
movsb
test
into
mov
jo
dec
pop
mov
les
add
lcall
insl
lret
repnz
cwtl
adc
movsb
addr16
outsb
sub
mov
jne
add
shlb
fcomip
cld
rorl
jno
cmp
fldt
divb
adc
mov
shll
and
imul
out
lods
sbb
dec
out
aam
lds
fs
or
inc
cld
or
mov
test
mov
enter
xchg
mov
sub
lret
ficoml
aam
clc
scas
test
pushf
adc
scas
lds
movsb
and
add
jmp
jle
xor
adc
es
lds
std
sub
pop
insl
pop
hlt
xchg
push
sbb
sbb
sub
push
dec
mov
and
xlat
jo
sbb
sub
dec
pop
lods
push
xor
jl
les
ljmp
jl
pop
xchg
sti
xchg
sbb
jnp
cmpsb
xchg
push
inc
shrl
cmp
mov
cmp
push
xor
cmp
cwtl
jno
push
jmp
nop
sub
push
popa
adc
xchg
insb
xor
jmp
lods
enter
inc
mov
mov
icebp
mov
mov
cld
cmp
movsb
mov
dec
xor
dec
sbb
sbb
mov
xchg
mov
rcl
cli
fisubl
repnz
lahf
jmp
je
lahf
inc
inc
fisubrs
mov
inc
loop
fwait
cmp
push
fwait
lds
push
push
lret
scas
adc
je
daa
xor
mov
or
daa
jns
in
sbb
loope
rorl
and
inc
in
addr16
sbb
orb
push
inc
jmp
jnp
adc
sbb
dec
ret
outsl
loop
frstor
push
lods
mov
clc
mov
aad
enter
ljmp
mov
add
dec
fnstcw
incb
pop
loope
xorl
ljmp
push
mov
enter
inc
rorl
sub
sbb
pop
add
add
int
jecxz
sub
push
test
pushf
or
xchg
cmp
xor
adc
add
xchg
loop
in
xor
mov
cmpsl
pop
adc
lock
dec
pop
pop
jnp
cmp
stc
lret
loope
jo
fdiv
sti
and
lock
push
popa
inc
sti
lock
popa
add
sti
js
jbe
jmp
ljmp
inc
shl
dec
mov
sbb
int
jae
xchg
add
add
mov
in
aam
cmp
leave
push
and
push
cmpsb
jno
lret
pop
rolb
cmp
pop
mov
pop
inc
sbb
lods
xor
mov
inc
scas
sub
push
mov
sub
fldcw
or
stos
sbb
fisubs
and
fiaddl
inc
sbb
sub
mov
mov
or
mov
inc
jae
outsb
jecxz
stos
xchg
in
add
mov
aad
ljmp
ret
cmp
push
mov
adc
jge
mov
in
aaa
inc
xor
arpl
mov
mov
in
mov
xchg
cmp
xchg
lahf
mov
imul
jmp
sub
jg,pn
xchg
mov
push
mov
out
sub
xor
xchg
int
mov
mov
mov
inc
add
outsb
int3
repnz
es
sbb
xor
pop
lahf
shr
lahf
adc
or
pop
ret
lret
mov
xor
mov
pop
cmp
out
sbb
dec
mov
fsubp
pop
je
cmp
dec
xor
jle
xchg
push
jo
sbb
and
test
lret
out
or
push
mov
nop
fidivrl
in
pusha
aaa
xchg
or
cmp
mov
negl
mov
cltd
mov
mov
mov
sahf
xor
pusha
fs
xor
adc
lahf
sub
jmp
mov
pusha
push
std
ret
cmp
sahf
add
or
mov
push
jmp
inc
or
mov
insl
sbb
mov
jne
ss
mov
push
inc
imul
xor
pop
fsubrs
call
lds
aaa
das
data16
push
movsb
stos
adc
jecxz
xor
test
adc
out
xchg
pop
stos
leave
sti
addr16
adc
mov
mov
notb
inc
mov
adc
lods
cmp
sub
cmp
sets
cli
sub
das
sub
push
or
push
les
dec
js
nop
fimuls
pop
xor
out
ljmp
aam
arpl
loop
mov
push
or
xor
inc
cltd
sub
test
lods
aaa
jmp
and
mov
xchg
xchg
or
arpl
in
pusha
fsubs
xlat
inc
dec
das
shlb
inc
fbstp
adc
inc
xlat
icebp
and
pop
cld
sbb
repz
or
ret
outsb
scas
xor
loopne
xchg
sbb
xchg
pop
or
mov
andl
pusha
sarb
aas
jl
xchg
push
fstps
mul
sti
pop
test
ficoml
cmp
xor
fisttpll
aam
push
enter
jle
or
test
ret
int
scas
or
in
cs
pusha
mov
jle
or
test
scas
adc
rorl
fcomp
mov
jno
insl
cli
cli
ljmp
stc
or
jnp
cmp
gs
pop
not
mov
inc
and
in
hlt
pop
cmp
and
inc
inc
pop
push
jmp
inc
xchg
cmp
jg
arpl
scas
rcr
cmc
mov
jnp
das
pop
clc
pop
rcl
lods
rcl
fcoms
inc
or
jbe
inc
sub
lret
cli
decl
out
jl
pop
sahf
shll
add
outsb
fisubl
dec
jl
xchg
xor
lcall
mov
add
jo
and
mov
pop
xchg
jb
negl
jecxz
cmp
pop
mov
enter
shrl
je
fs
dec
gs
pop
jae
fldt
ss
mov
mov
push
cwtl
test
loop
mov
call
and
mov
cli
pop
lods
adc
pop
xor
pop
pusha
scas
cltd
idiv
mov
xor
dec
notb
pop
rol
mov
inc
sub
xor
and
push
or
jmp
int
and
test
sbb
and
adcb
push
mov
call
es
mov
push
outsl
jnp
leave
xchg
rcrb
mov
jmp
pushf
add
aaa
mov
js
divb
sbb
mov
adc
in
iret
rolb
sbb
lahf
test
add
sub
outsl
stos
and
lahf
push
insb
push
out
xchg
je
int3
mov
cmpsb
jae
aad
push
mov
ds
std
pusha
in
push
mov
popa
lcall
mov
out
mov
mov
inc
inc
in
xchg
mov
adc
sti
insb
lds
mov
xchg
iret
sti
lret
fs
push
nop
dec
rclb
push
cmp
call
aam
pop
or
scas
dec
dec
mov
repnz
xchg
dec
and
pusha
fmull
push
in
sbb
sub
sub
cmp
loope
testb
fldcw
or
ljmp
ret
loopne
or
pop
xor
sarb
lret
add
into
arpl
inc
std
mov
push
test
xor
mov
or
push
xlat
repnz
daa
jnp
jecxz
push
je
lds
sub
xor
push
int
push
jl
popa
hlt
jno
adc
sahf
mov
fsubrl
mov
aas
nop
xchg
pop
xchg
rorb
rcrl
adcl
jmp
xchg
lret
gs
push
mov
add
outsb
cmpsl
cmp
clc
enter
mov
push
test
xor
sahf
push
insb
adc
sti
scas
fmull
cli
sub
scas
mov
fsubs
push
rep
or
or
adc
subb
out
sbbl
xor
enter
inc
push
mov
lcall
lods
add
imul
jns
rol
push
push
addb
xchg
pop
insb
popa
adc
sahf
movsl
inc
nop
insb
cli
push
das
xchg
dec
cmp
mov
nop
xchg
xlat
adc
xchg
popa
cmpsl
lods
mov
cmp
negb
daa
xchg
mov
pop
adcb
push
sub
xchg
sbb
inc
sub
mov
jecxz
shrb
pop
enter
push
lret
push
movsb
repz
pop
rorl
xchg
les
push
mov
test
add
loop
nop
lock
push
push
loop
ss
cld
mov
mov
fs
pusha
outsb
sub
mov
mov
gs
icebp
inc
inc
xchg
push
sub
clc
xchg
pop
inc
insl
iret
rcrl
inc
xchg
jne
hlt
xchg
loopne
pop
jecxz
cmp
jl
bound
xorb
sub
ss
sbb
mov
fisttps
ret
cld
imul
adc
ja
cmp
xor
lea
push
imul
sbb
sub
fsts
add
das
rcll
inc
adc
lret
hlt
or
popl
mov
pop
pop
sub
pop
xchg
mov
push
imul
test
stc
decb
xchg
mov
js
pop
aas
mov
sub
sbb
fldcw
xor
aad
xchg
ja
test
mov
jo
nop
cmp
mov
clc
mov
adc
lretw
negl
xchg
lahf
mov
mov
jns
lea
enter
jo
roll
cmp
ja
aam
movsl
sub
in
pusha
fiadds
inc
mov
add
jg
test
sbb
and
push
icebp
rcrb
dec
popf
add
iret
mov
jle
push
mov
mov
dec
cmp
movsl
push
in
hlt
or
les
cmp
out
pop
pop
cmp
mov
test
add
sub
add
test
adc
inc
cmp
lea
jg
inc
cmpsb
inc
stos
das
xor
nop
fst
fstpl
sub
bound
aaa
inc
mov
int
or
rorb
xor
push
rorb
sub
xchg
mov
popf
xchg
pop
inc
dec
xor
clc
jb
xchg
insl
rcrb
fistl
mov
adc
fcoml
pop
xchg
sbb
ret
leave
dec
adc
pop
jp
sub
imul
lret
mov
pop
pop
and
movsl
cld
movsb
mov
mov
sub
in
push
push
fisttpll
andl
mov
lret
pop
adc
dec
fsubp
xchg
lea
lahf
pop
add
cmp
jmp
inc
mov
fwait
mov
adc
push
mov
addr16
mov
xchg
ss
mov
stc
xlat
xchg
sarb
push
mov
int3
and
adc
enter
imul
insl
cmp
rcrb
or
les
add
cmpsb
in
inc
pop
add
rcll
inc
lods
lahf
js
or
sahf
push
or
mov
push
or
fnstsw
frstor
jbe
insl
jl
push
fldcw
hlt
int
sbb
pop
mov
rcrb
lret
cmp
adc
lock
jne
cmp
mov
imul
and
and
or
pop
das
xchg
imul
popa
fidivl
jecxz
icebp
dec
movsl
jb
mov
jle
mov
xchg
jle
push
push
pop
add
lds
jecxz
push
jbe
inc
add
cltd
cmp
js
setl
add
aam
sub
adc
mov
inc
mov
jl
ret
adc
jo
fs
test
mov
and
push
fsubs
xor
imul
popf
jns
fmulp
sub
dec
sub
xor
ljmp
rcll
lahf
movl
push
jg
mov
xchg
push
mov
fwait
dec
sub
push
sub
gs
add
rorl
and
add
pop
testl
fsubs
sbb
adc
xchg
and
rcr
push
xlat
xchg
cltd
clc
jge
push
fucomi
and
jl
pop
and
scas
jecxz
not
test
cltd
in
jnp
movsb
jo
sbb
lea
and
sahf
push
inc
inc
adc
cmpsl
inc
mov
lcall
stos
in
jge
loopne
sbb
adc
adc
scas
mov
in
adc
adc
push
scas
cltd
sbb
adc
out
fldcw
jmp
repnz
call
pop
cmp
jae
or
pusha
jo
test
xor
stos
sub
fcmovnb
aaa
pop
mov
jno
jbe
push
or
scas
jp
push
mov
xchg
cmp
mov
pop
js
std
mov
movsb
sub
push
popa
dec
test
inc
mov
scas
fstpt
cmpsl
pushf
scas
lods
mov
ret
cs
pop
lock
mov
loop
out
mov
sbb
cmp
lock
cli
add
sbb
popf
and
hlt
out
xor
jno
xchg
shll
int3
add
shl
enter
ret
and
ljmp
sarl
adcl
push
mov
dec
bound
imul
or
popf
andl
hlt
out
stc
ret
ja
push
mov
fcoml
mov
in
out
lret
push
rolb
xorl
xchg
roll
js
std
or
xlat
mov
scas
mov
test
nop
adc
jge
sbb
scas
push
sub
sti
mov
sbb
ljmp
adc
cwtl
sub
cmp
push
add
pop
hlt
push
enter
out
and
out
mov
or
mov
xchg
adc
popf
out
lods
inc
xor
lahf
rcrl
cltd
fdivs
push
mov
mov
sbb
notl
lcall
call
xchg
mov
je
xchg
popf
push
test
pop
sbb
mov
pop
push
cmc
mov
jns
cmc
leave
or
push
sahf
mov
aam
icebp
cmpsb
lret
adc
pop
roll
pop
ds
cltd
mov
xor
js
push
dec
and
lods
pop
sbb
and
or
test
lock
repz
in
lds
sub
outsl
adc
or
dec
iret
mov
dec
call
mov
fldt
xchg
pop
mov
mov
orb
loop
or
xor
sub
insl
lds
xchg
js
pushf
mov
mov
sbb
fs
loopne
xchg
pop
xor
pop
leave
or
icebp
push
cmc
nop
mov
lock
pop
push
cltd
sbb
xchg
adc
sbb
ja
fstps
jg
mov
jge
mov
cmpsl
mov
ret
sti
push
jmp
dec
jge
popf
adc
outsb
stos
jg
xor
and
and
adc
ss
jne
jns
addr16
ret
add
shlb
std
sbb
mov
push
and
leave
loopne
fdivrs
xor
lret
ret
push
cmp
or
out
cwtl
popa
or
repnz
dec
xchg
sbb
jp
cmp
add
lods
inc
orl
push
sub
mov
fisttpl
mov
xor
xchg
es
aam
dec
arpl
mov
fcoms
sbb
ja
shll
push
or
test
shlb
pusha
ret
add
pop
and
sbb
leave
data16
and
adc
scas
mov
cmp
mov
into
out
inc
aam
fidivs
popa
sahf
add
mov
outsl
dec
pop
sbb
xchg
adc
pop
popf
sub
jae
pop
jmp
mov
aaa
scas
push
in
data16
add
movl
scas
push
dec
in
push
nop
mov
pop
fildl
je
xchg
getsec
fsubl
pop
and
dec
cmp
mov
mov
xchg
in
es
popf
cltd
addr16
xchg
pop
xor
dec
test
xchg
push
xor
push
push
test
packssdw
notl
and
pop
psrad
push
outsl
mov
hlt
pop
sub
xor
sub
aad
pop
stos
ja
fisttpl
aas
test
pop
in
aam
icebp
xchg
addr16
orl
push
test
xor
lcall
pop
jp
dec
inc
push
push
arpl
fdivl
cwtl
aam
cs
add
icebp
mov
mov
mov
lret
adc
imul
lock
sbb
push
cs
and
frstor
sbb
scas
jmp
in
testl
es
fwait
xor
rorl
add
and
mov
pop
sub
movl
das
dec
popf
je
xor
adc
pop
cmp
push
inc
mov
and
xor
cwtl
pop
inc
mov
in
sub
lds
sub
and
push
and
mov
fwait
test
rcrb
aad
jns
stc
cwtl
das
test
fistps
mov
adc
pop
pop
pop
loopne
xorb
leave
jge
pop
push
or
rclb
push
scas
jg
dec
enter
cmpsb
jae
mov
and
into
lcall
mov
jb,pn
mov
call
cmpsl
xor
stc
mov
mov
test
sub
pop
pop
cmpb
sbb
fadd
loop
adc
jnp
pop
leave
sbb
addb
jg
and
or
xchg
in
fstps
xor
add
sti
cmpsl
mov
in
negb
cmpsl
cmc
mov
cmp
inc
daa
or
rcll
mov
ljmp
jmp
mov
fs
add
adc
xor
sbb
addb
out
mov
inc
cwtl
aam
mov
dec
pop
xchg
xchg
sti
ss
ficoms
leave
pop
dec
add
and
loope
or
stc
shlb
sub
popf
push
adc
or
aad
pop
cmp
mov
in
xchg
xchg
loope
outsl
mov
push
std
jmp
lret
fisttps
xchg
insl
add
ss
hlt
ja
mov
outsb
mov
data16
cmp
sti
ljmpw
cs
xor
lahf
daa
popl
mov
les
aam
mov
loopne
sahf
es
jmp
insl
sbb
push
out
pop
sti
outsb
adc
movsb
push
mov
cwtl
inc
int3
mov
sub
cltd
addr16
fldenv
xchg
and
call
jbe
sub
sbb
xchg
pop
add
daa
scas
loope
out
or
adc
hlt
jg
ret
movsb
popa
pop
pop
jecxz
xchg
push
pop
ret
xor
xlat
sbb
xchg
dec
dec
popa
cld
ja
sub
xchg
dec
jnp
das
cmc
xchg
fs
fildll
enterw
mov
sbb
mov
jle
movl
mov
shl
push
dec
subb
or
xchg
cs
jns
bound
xchg
mov
scas
enter
loope
sahf
and
sahf
or
pop
sbb
xchg
scas
jp
mov
cmp
mov
ljmp
lret
push
mov
loop
adc
lcall
sub
cmpsl
push
je
pop
lret
lea
iretw
rol
sub
xchg
mov
stos
mov
ret
and
mov
and
and
inc
jmp
repnz
sub
ja
add
inc
xchg
jle
je
fsts
popa
cmpsl
ret
and
xchg
jle
lds
lret
sub
and
jno
xchg
and
sub
or
or
lret
mov
jmp
jmp
mov
ds
push
pop
js
dec
insb
test
push
divps
jns
leave
mov
mov
lret
add
lret
ror
cltd
cmp
mov
movsb
jecxz
cmp
xor
jmp
inc
test
mov
dec
mov
adcl
jns
stc
dec
pop
out
gs
sub
jmp
and
adc
mov
adc
es
stos
lret
and
jcxz
pop
bnd
cmp
mov
mov
lcall
cmp
sbb
and
xor
xor
push
iret
loopne
lds
test
or
pop
aas
dec
adc
add
mov
dec
adc
jbe
fistpll
lods
cmp
pop
lods
inc
xor
jge
dec
xor
movsb
imul
jg
mov
inc
movsb
fs
cwtl
jnp
push
jge
lea
sbb
push
mov
or
das
push
sti
xor
jne
push
inc
sbb
push
fwait
arpl
lods
arpl
push
ret
int
data16
or
test
cmp
ds
push
mov
mov
scas
cmp
test
ja
jae
jmp
mov
dec
xor
or
fistps
mov
cmp
movsl
jae
nop
xchg
add
sub
jl
out
daa
push
xchg
icebp
inc
push
scas
shl
rol
aas
xchg
std
imul
lds
adc
dec
popf
fistpll
clc
sub
mov
rcrl
js
adc
mov
xor
pushf
pop
ljmp
stos
adc
movsl
dec
dec
add
ds
shll
lods
lcall
xor
test
push
movsl
cmpb
mov
mov
jge
ds
das
test
out
sub
loopne
dec
push
outsb
jle
adcb
mov
mov
dec
jp
jg
pop
lods
push
pop
ja
mov
shll
sti
fildl
shl
das
dec
stc
pop
cmpl
movsb
in
mov
outsb
stc
sub
xchg
mov
mov
xchg
push
inc
push
push
adc
pop
fildl
inc
cmc
cli
cmp
push
addr16
movsl
jge
lods
nop
test
daa
dec
inc
add
in
arpl
inc
dec
cmc
clc
xchg
popa
mov
loop
jns
data16
xor
dec
das
lods
mov
mov
pusha
dec
jg
mov
lret
hlt
pop
push
mov
negl
push
leave
xor
stos
repz
mov
mov
mov
data16
adc
cmc
inc
push
fldl2t
fwait
jo
mov
out
dec
adc
pop
add
cmpsl
movsl
aas
and
lods
or
outsb
jo
das
shll
or
mov
dec
mov
outsb
and
xchg
mov
mov
mov
pop
sub
sahf
int
sbb
aad
cmp
es
test
mov
dec
stos
mov
test
ljmp
addb
cmp
iret
ror
mov
push
mov
fisubrs
dec
int
xchg
or
movb
or
lret
movsb
push
mov
mov
dec
xchg
and
push
ds
xlat
mov
pop
or
popf
ljmp
push
sbb
lret
add
mov
push
rol
nop
add
mov
dec
mov
stc
scas
xor
test
pop
mov
iret
mov
jl
ljmp
loopne
mov
lods
data16
fwait
dec
sti
sahf
nop
repnz
and
iret
jno
lcall
sarb
or
mov
mov
sarb
mov
repz
lods
xchg
ss
mov
ret
fs
dec
push
and
rorl
add
pop
aad
pop
sub
aas
cmp
cmpsl
cmp
loop
cwtl
das
jnp
out
xchg
lret
add
adc
daa
or
enter
and
push
xchg
inc
mov
push
stos
mov
arpl
nop
popf
dec
cmp
outsb
leave
or
jno
cmpsb
into
push
xor
sub
pop
xchg
add
adc
sarb
or
mov
xor
filds
cmpsb
push
mov
mov
push
repz
dec
sti
sbb
pop
mov
shlb
stos
cmp
outsl
pop
ss
adc
daa
mov
mov
xchg
pop
cmp
popa
push
add
adc
lret
out
push
sti
bound
in
jl
test
loope
push
les
jmp
dec
pop
inc
push
dec
mov
in
dec
cmp
imull
pop
mov
add
adc
sti
inc
fwait
sbb
in
dec
insl
inc
cmp
imul
xchg
int3
stc
dec
inc
xor
fisubs
insb
jb
cwtl
dec
pushf
outsl
test
insb
ja
add
movsl
arpl
jbe
push
xchg
xchg
ja
scas
push
sub
out
loopne
fistpll
pop
pop
cmp
outsl
xchg
mov
test
mov
loope
cmpsl
mov
mov
xor
inc
aad
lahf
ds
fdivs
stos
xchg
test
fyl2x
dec
push
cmpsb
dec
out
fnstenv
in
test
mov
ljmp
shlb
push
push
lahf
aaa
outsl
pop
int
jl,pt
xor
xchg
mov
mov
or
bound
xor
mov
sahf
test
adc
pusha
adc
sbb
pushf
or
movups
and
or
and
cmp
pop
xchg
sub
shll
das
cmp
sub
jp
xchg
hlt
dec
mov
mov
mov
es
mov
mov
std
bound
aas
pop
pop
sarl
lea
roll
arpl
sub
inc
inc
and
adc
fs
in
mov
pop
int
jns
out
mov
and
adc
cli
sti
or
push
lret
or
lods
lods
lock
mov
mov
dec
cmp
test
and
fisubs
cmc
test
insb
inc
das
fnstsw
inc
lds
sub
or
in
push
rorl
mov
jl
mov
nop
xchg
and
insl
add
or
or
push
roll
and
fsts
stc
jo
jmp
shll
rorl
mov
mov
inc
sub
cmp
sbb
outsl
aaa
sub
push
xchg
imul
in
or
jl
and
mov
into
inc
xchg
xchg
and
xchg
jno
dec
test
adc
out
add
jae
divb
fmul
push
pop
into
inc
or
movsl
sub
push
cmp
or
jne
faddl
in
sbb
dec
aas
adc
gs
outsb
pop
cmpsb
jl
mulb
in
push
mov
popf
imul
and
pusha
insb
js
xor
outsl
stos
adc
cmc
sbb
add
movsl
sbb
pop
dec
sbb
out
or
cmp
bound
mov
jns
add
mov
outsb
out
xchg
push
push
pusha
addl
das
adc
xchg
sarl
je
sahf
shr
lcall
or
data16
cmpsl
in
ds
mov
xchg
sub
xor
sahf
jecxz
pushf
cmpsb
xor
lcall
test
stos
repz
outsl
dec
add
and
rorl
lods
addl
mov
ret
mov
and
decb
in
pop
outsb
jmp
dec
mov
mov
cmc
aaa
ss
and
test
sub
fs
adc
push
jle
adcb
call
pop
orb
fistps
mov
inc
decb
loopne
jg
xor
pop
mov
add
sbbb
lock
stc
out
repnz
xor
add
inc
jb
stos
fcomps
cmp
call
fnstsw
pop
enter
add
inc
push
sti
pop
mov
ret
psubusw
daa
lods
movsl
dec
mov
sahf
xor
nop
roll
sbb
xchg
mov
in
jae
xor
cmp
fwait
xor
std
mov
push
cmp
cltd
xchg
xor
mov
imul
push
push
nop
out
ret
or
pop
mov
dec
cmp
test
decl
pop
or
loope
jnp
sub
jo
xor
cmp
add
xor
dec
in
daa
mov
popa
and
pop
add
inc
xor
jb
sbb
lods
adc
repz
sub
pop
add
imul
inc
addr16
in
dec
sarb
test
xchg
adc
cmpsb
or
pusha
pusha
adc
sti
xor
gs
sar
cwtl
xbegin
xchg
adc
mov
clc
xchg
or
or
add
jbe
ret
adc
idivb
add
cmpb
mov
cld
testl
mov
fcoms
lea
int
fwait
sub
enter
push
xchg
int
xchg
imul
or
or
jnp
loop
mov
lahf
je
push
dec
std
cmp
xor
in
mov
movsb
aad
mov
popl
add
add
out
push
mov
out
cmp
adc
sub
inc
mov
sbb
out
jp
push
subl
cld
shrb
sbb
push
in
popl
sub
test
push
lods
cs
pop
fstl
mov
ret
dec
adcb
push
add
pop
pop
cld
stos
adc
mov
jnp
loope
add
testb
lahf
test
mov
scas
das
cwtl
sub
sarl
xor
pop
sub
push
xor
cwtl
dec
inc
lcall
mov
mov
jmp
sti
lcall
jbe
push
dec
aad
cmp
mov
and
test
lcall
aas
push
loopne
movsb
shlb
cli
or
sub
popf
add
outsl
jbe
lods
jle
popf
ds
push
cmp
cwtl
or
dec
gs
das
cmpsb
js
push
jnp
and
jae
xor
sbb
rclb
fildll
idivl
fcmove
fistps
xchg
jno
dec
jb
dec
jecxz
adc
dec
insl
mov
xlat
mov
mov
mov
in
jg
add
xor
sbb
fcomps
clc
mov
xor
jo
mov
mov
roll
mov
sbb
jge
add
out
adc
inc
adc
mov
outsl
pop
mov
sbb
sti
push
push
push
movsb
mov
fdivrp
cmp
pop
dec
jae
rcr
xchg
jl
shl
jmp
ss
push
pop
jg
push
jo
test
sti
dec
and
add
rol
jo
jge
loop
xchg
movb
push
xchg
pop
shlb
stos
stos
not
fdiv
aas
std
stos
imul
mov
fstp
ret
stc
cmp
or
cmc
or
push
rorl
int3
loope
insb
inc
pushf
ljmp
fcompl
mov
shrb
rcrb
loop
sub
mov
jl
mov
inc
or
jno
ret
insl
pop
je
scas
push
in
mov
cmp
ljmp
xchg
cmp
es
and
in
and
jmp
js
push
sbb
cmpsb
movd
fwait
cmpb
sub
movl
test
roll
je
mov
jp
mov
mov
loop
mov
repnz
roll
jae
nop
clc
ja
int
inc
inc
out
xchg
mov
mov
mov
orb
cmp
movsb
mov
mov
cmp
xchg
pop
jb
xchg
aaa
and
arpl
add
adc
je
bound
cmp
push
lahf
dec
mov
mov
mov
hlt
adc
loop
cmc
push
in
and
push
xchg
lret
add
xchg
aam
in
in
push
ds
inc
inc
sbb
shrb
shlb
xchg
daa
jae
mov
inc
and
pop
sarl
or
jo
lret
adcl
xor
imul
jmp
mov
jge
push
jno
xchg
xchg
push
leave
xor
mov
iret
loop
mov
in
push
or
popf
pop
cli
ds
pusha
xor
inc
cli
fists
popf
std
test
mov
flds
cld
cmpsl
lahf
insb
xchg
loopne
inc
cmp
popf
mov
dec
mov
inc
lods
and
ljmp
test
stc
mov
mov
inc
rcl
jne
inc
dec
imul
sbb
rcrl
lcall
mov
pop
imul
das
idivb
cmp
fwait
inc
pop
gs
push
lahf
fstl
stos
xchg
cmp
mov
and
dec
pop
pop
push
dec
cmpsl
adc
and
js
pop
pop
mov
repz
mov
sbb
jp
out
int
mov
mov
movsl
dec
test
sub
shlb
pop
push
inc
lods
adc
js
aas
xorb
insb
outsb
jno
fisubrs
inc
movsb
dec
aad
dec
mov
dec
cwtl
mov
cmc
stos
adc
lock
inc
jbe
mov
sbb
insb
inc
mov
or
mov
jno
scas
sarl
pop
adc
cmovb
mov
call
mov
jmp
mov
dec
js
test
out
cmp
adc
shrb
loopne
stos
pop
jne
ds
sub
or
push
ja
test
cmp
cmp
xor
xchg
mov
std
cmc
lret
outsl
ss
and
cmp
sbb
jo
mov
pop
mov
pop
xchg
sub
inc
xchg
jno
mov
add
out
cmp
sub
das
lds
pop
add
add
lds
push
cmp
bound
imulb
lret
in
inc
jns,pt
sub
add
cmpsl
stos
fwait
mov
iret
repz
mov
sti
push
and
adc
addr16
lock
sbb
sub
inc
shll
repnz
pusha
xor
mov
sbb
ficompl
or
icebp
push
dec
shl
jo
mov
ljmp
xor
nop
out
add
nop
cmc
out
xchg
ret
jle
lahf
pop
jmp
push
clc
aas
and
and
rcrb
nop
adc
and
sahf
cmc
dec
mov
out
fs
fwait
jo
mov
pop
scas
mov
dec
or
clc
rcrl
sbb
inc
jbe
or
cmc
adc
add
icebp
clc
cmp
js
call
inc
and
jnp
lds
jno
and
sub
bound
pop
fdivrl
sub
mov
pop
mov
mov
lahf
jle
enter
adc
pop
call
xchg
call
addr16
adcb
shlb
divb
inc
xor
dec
cmc
mov
lret
imul
pop
mov
shrl
dec
sahf
jno
fdivrp
jae
lar
fwait
insb
pop
test
aad
mov
sbb
mov
insb
dec
jne
xchg
divb
pop
mov
sub
sbbl
adc
loopne
loopne
and
push
sub
and
lret
repnz
push
fmulp
aad
xchg
lods
aas
jae
pop
test
push
mov
jle
inc
test
cmp
mov
fmulp
notb
pushl
jp
xor
cmp
enter
jmp
out
mov
add
inc
mov
xchg
jg
xchg
test
mov
pop
jecxz
pop
push
and
inc
fcomp
sub
mov
sub
push
stos
sub
add
jecxz
shlb
and
rol
outsl
sub
push
push
cltd
in
adc
inc
jno
sarb
imul
pop
scas
mov
mov
adcl
push
cmp
xor
mov
rorl
cmp
bound
lods
push
sbb
xchg
sbb
mov
rcrb
pop
dec
fbld
mov
test
lock
hlt
adc
dec
xor
pusha
add
ret
pop
adcl
in
pop
iret
pop
xor
pop
std
lea
push
pusha
pop
push
push
pop
mov
lret
jo
adcl
stc
push
and
jne
fwait
popf
rcll
loope
pop
or
int
das
in
test
jno
imul
les
mov
adc
std
xchg
push
push
sbb
push
rcpps
pushf
int
mov
sbb
xor
jno
imul
leave
mov
mov
adc
sbb
pop
mov
clc
rorb
mov
lret
jle
push
scas
out
push
call
cmp
cmpsl
push
inc
in
imul
jge
mov
add
cmp
push
ret
jae
inc
stos
rcrl
and
or
out
xchg
push
inc
test
sbb
ret
xor
mov
test
aas
or
mov
fmul
inc
je
das
aas
sarb
ljmp
int
ss
cli
cmp
imul
inc
cmp
fdivs
xchg
lods
sbb
adc
test
mov
sti
jnp
sbb
insl
es
adc
pusha
fistps
addb
sub
inc
cmpsw
mov
inc
test
jae
sub
inc
lds
sub
push
pop
rcrl
cmp
fisttpll
mov
xor
scas
jle
push
inc
pop
mull
ret
ljmp
mov
jo
push
jne
pop
mov
inc
arpl
in
dec
ss
fmull
lret
ficompl
popa
icebp
ret
fstpt
frstor
scas
inc
call
push
in
pushf
cmp
lods
fdivl
sbb
jg
mov
mov
jle
js
inc
loop
ret
aaa
xchg
cmp
jmp
cltd
mov
test
push
sbb
icebp
idivb
push
mov
inc
scas
or
pushf
mov
fistl
pop
jns
lret
xor
mov
mov
and
jmp
cmp
xchg
push
loop
sahf
bound
stc
stos
loope
lret
xchg
pop
xorl
dec
push
fldl
and
push
ret
pop
lret
inc
sbbl
rolb
pop
rol
enter
sahf
sbb
mov
lock
sbb
or
add
fisubs
mov
cmp
in
jns
xor
aaa
arpl
scas
xchg
mov
stos
inc
icebp
pop
xchg
sub
pop
add
adc
out
mov
push
push
mov
xlat
sti
inc
push
sbb
fimuls
daa
movsl
idivb
mov
pusha
push
push
sub
fs
mov
mov
decb
fidivs
in
add
das
cmp
inc
push
arpl
and
rcrl
shll
cwtl
mov
cmc
or
inc
dec
jge
adc
pop
dec
or
pop
inc
add
mov
push
cmc
push
cmp
aaa
xchg
add
je
hlt
push
or
pop
sbb
push
adc
mov
sub
inc
aad
sarl
mov
xor
fadds
jge
flds
mov
aad
fsub
jne
mov
je
xor
mov
fsubrs
cltd
stc
sub
dec
xchg
fs
jnp
hlt
addr16
cmp
call
cmpsb
push
ja
xor
fs
mov
cmpsl
push
ljmp
insl
mov
jno,pt
ja
xor
enter
and
das
rcll
xchg
cmp
xor
add
out
cwtl
add
cmp
mov
jo
mov
inc
mov
cmp
aas
pusha
xchg
push
xorb
add
mov
mov
loope
inc
inc
mov
fwait
daa
pushf
push
mov
cmp
lea
pop
call
lods
dec
pop
or
mov
scas
xor
fistl
rep
cmp
outsb
or
popf
ja
adc
cmp
es
out
fnstcw
xchg
loope
pusha
jmp
inc
or
push
cld
mov
js
scas
addr16
push
enter
ds
leave
mov
repnz
cmpsb
js
jb
nop
leave
stos
pop
add
test
rcrb
sbb
orl
test
add
mov
mov
mov
bsf
mov
in
or
insb
cmp
gs
push
and
pop
inc
add
out
xchg
into
push
mov
cwtl
mov
lea
cmp
sbb
add
rorl
dec
jecxz
popf
mov
mov
sub
sub
icebp
inc
lahf
sub
pop
out
call
xor
hlt
mov
dec
jnp
sahf
add
sti
mov
xchg
clc
lret
jge
pop
jnp
les
jmp
and
add
lods
xchg
cmp
adc
cmpsl
xchg
dec
fs
test
push
push
adc
int3
lret
dec
cltd
in
inc
jge
pop
pop
mul
iret
stos
cmp
std
add
dec
push
or
out
push
cmp
xchg
inc
scas
dec
test
je
fidivrs
movsl
or
cs
sub
push
pop
cmpl
out
add
inc
xor
mov
fs
mov
cmp
in
stc
fidivrl
and
sbb
int
loope
mov
xchg
jae
sub
aad
dec
aad
or
mov
jle
xor
clc
imul
hlt
pop
test
mov
imul
cmc
ds
push
jecxz
mov
addl
push
mov
lahf
jnp
mov
add
ret
mov
stos
ja
fdivrl
imul
dec
out
sub
push
jnp,pt
cld
jle
addr16
gs
fildl
nop
es
test
xor
fcoml
shrb
into
adc
ror
mov
enter
mov
aam
inc
negb
jecxz
jmp
mov
mov
pushl
dec
jge
movsb
dec
xor
clc
ja
jecxz
or
push
stos
jmp
nop
adc
fsubl
leave
xchg
sub
inc
negl
outsl
xor
pop
sbb
xlat
dec
adc
data16
inc
or
popa
dec
inc
dec
push
inc
mov
xor
mov
add
mov
movsb
shll
mov
inc
and
pop
test
enter
adc
shrl
jl
ds
mov
adc
rolb
add
xor
or
sbb
or
mov
or
pop
int
jo
stos
sub
sub
fildl
mov
insb
push
inc
xor
cmp
mov
xchg
jb
mov
pushl
mov
icebp
mov
and
in
das
jae
ds
outsb
int
inc
das
jecxz
sub
lret
ss
add
xor
sti
mov
jns
lods
pop
in
jno
push
lret
cld
mov
cmc
loopne
shr
inc
je
mov
in
add
aas
cmp
inc
inc
data16
lret
and
arpl
loopne
lahf
cmpb
add
mov
ret
scas
xchg
mov
or
jg
fnsave
push
pop
inc
fwait
dec
shll
inc
mov
aas
inc
stos
loop
jno
inc
push
jge
sbb
scas
in
sti
test
jle
mov
pop
call
xchg
ficompl
inc
jo
inc
nop
xchg
inc
fldt
push
std
cmp
jmp
mov
jecxz
cld
idivl
mov
imul
enter
int
cmc
mov
rcrl
pop
inc
fsts
add
jno
jg
dec
mov
mov
xor
mov
inc
push
pop
aas
xlat
arpl
inc
shlb
aam
cmp
xlat
rcrl
sub
ret
popf
in
xchg
pop
pop
jle
pop
nop
call
mov
add
mov
adc
mov
cld
dec
mov
xor
xchg
gs
dec
mov
cmpb
enter
pop
imul
cmc
sbb
adc
mov
xchg
sbb
mov
int3
movsl
filds
scas
int
xchg
mov
icebp
int
shl
mov
mov
mov
ljmp
cli
xor
adc
cmpb
mov
sub
add
inc
pop
pop
fs
shll
inc
sahf
lea
outsb
aam
bswap
push
inc
pop
inc
inc
cmpsl
dec
jae
fildll
mov
cs
mov
cmp
xor
jg
clc
mov
push
inc
or
iret
xchg
or
icebp
cmp
mov
out
testl
xchg
inc
in
rcrb
adc
gs
mov
xchg
dec
rdmsr
and
mov
sbb
dec
cmc
cmp
loop
sub
adc
mov
fstpl
bound
adc
add
sub
push
pop
xchg
adc
pop
mov
ret
inc
pop
cmp
mov
dec
jge
pop
loopne
inc
js
loope
repz
xchg
mov
xorb
sahf
cs
repnz
sti
xor
mov
int3
cmpsl
add
lret
push
idivb
jp
data16
test
call
scas
daa
cmp
mov
movsl
sbb
daa
jg
js
arpl
push
fsubl
and
daa
add
out
mov
or
xor
es
and
int
sub
aam
sbb
or
stos
mov
popf
cmpsb
ss
addr16
dec
push
cmp
sub
ds
scas
adc
cmc
iret
add
ja
xchg
repz
xor
stos
xor
jo
push
and
popa
rcl
inc
mov
fsubl
xchg
push
mov
mov
pop
bnd
pop
pop
out
iret
stos
clc
out
test
and
and
pop
push
sbbb
sbb
clc
ss
scas
imul
lea
or
xchg
daa
xorb
mov
cmpsb
cwtl
fs
xchg
incl
jne
and
frstor
ljmp
mov
push
iret
out
adc
add
and
shrb
dec
mov
int
fwait
mov
mov
mov
imul
sub
int3
mov
dec
je
sub
ficompl
dec
xor
lea
xlat
lock
mov
sti
cmpsb
outsb
in
dec
in
pop
cs
sbbb
in
sub
jo
and
stc
add
lcall
cld
mov
sbb
lods
addr16
push
pop
sub
xchg
add
popa
mov
addb
mov
lea
cmp
sub
sub
fistpll
cmp
xchg
imul
xor
cmp
mov
mov
push
push
cmpl
pop
add
data16
push
xchg
int
cmpsb
adc
sub
and
push
adc
push
or
leave
test
je
mov
mov
rcrb
pop
sbb
cli
mov
lods
sub
and
ljmp
jo
arpl
adc
pop
push
push
out
mov
push
imul
pop
mov
mov
mov
shll
push
dec
adc
pushf
leave
or
lret
repz
test
enter
out
cltd
push
fidivrl
sbb
adc
call
orb
mov
xor
and
push
mov
imul
adc
xlat
adc
nop
imul
cmpsl
test
aam
aas
mov
mov
push
add
mov
orl
gs
lret
out
movsl
or
inc
mov
add
jnp
es
out
push
out
stos
mov
arpl
mov
cltd
push
call
out
leave
outsl
shrb
push
push
pop
fcoms
cmp
iret
pushf
imul
test
daa
sub
fiaddl
fucom
stos
cmpsb
jp
cmp
and
icebp
into
daa
cmc
add
lock
cwtl
scas
cmpsl
sub
inc
add
gs
dec
mov
adc
cmp
adc
dec
int
mov
cmc
sbb
push
xor
push
je
out
rcll
movl
cmp
mov
insb
test
adc
push
push
sub
or
aaa
push
add
jo
jge
das
inc
pop
xchg
adc
int3
cmp
add
pop
mov
cmp
add
cltd
lret
adc
xchg
in
push
iret
xor
fs
arpl
push
xchg
dec
rcrb
leave
das
les
lds
sub
mov
loope
push
inc
cltd
btr
lret
push
mov
iret
sub
push
mov
mov
sub
out
ds
pop
lea
sub
mov
jns
daa
daa
into
es
fnsave
fnstenv
cmpsl
adc
push
das
mov
push
dec
mov
ror
sub
pop
push
push
arpl
xchg
inc
add
mov
shrb
push
or
int
push
mov
popa
jno
ds
iret
lods
mov
dec
loopne
push
mov
lret
dec
mov
push
jmp
hlt
lahf
es
jno
add
fstpl
aaa
daa
lret
inc
scas
cmpsb
loope
cmp
jecxz
scas
in
fisttpl
rorl
fistps
gs
pop
push
insl
in
daa
fimull
dec
test
sar
cmp
fwait
stos
push
dec
out
pop
or
jp
outsl
sahf
sub
and
mov
shll
sbb
imul
xor
in
pop
mov
arpl
adc
sub
lahf
in
daa
dec
jecxz
arpl
xchg
dec
xchg
in
leave
xor
outsb
insl
bound
pop
sbbl
mov
jne
addr16
mov
cld
andb
outsl
or
pop
out
cmpsb
shrl
enter
repz
dec
mov
lods
lea
and
push
xor
jb
ret
negb
jb
fisubrs
aaa
imul
fiadds
dec
lods
jge
clts
pop
lds
add
mov
outsl
dec
sbbl
adc
lods
in
leave
orl
stc
mov
daa
mov
and
lock
into
inc
popf
add
cltd
sub
jge
scas
mov
out
xchg
or
stos
pop
insl
aaa
enter
jge
pop
jg
mov
mov
jnp
lret
popa
pop
or
push
mov
sbb
mov
movups
dec
in
outsb
xchg
adc
shlb
or
lods
dec
push
les
in
rorb
cmp
ret
insl
xor
dec
mov
mov
sub
scas
mov
gs
int3
nop
or
stos
and
adc
mull
ds
fnstenv
icebp
jno
nop
sbb
push
test
fwait
push
dec
fstps
lods
pop
les
popa
scas
loopne
lods
neg
pop
insl
int3
movsl
pop
add
push
lods
mov
leave
sub
lea
testl
inc
jg
lods
mov
sbb
std
lock
ret
rcrl
dec
popa
jnp
mov
rorl
xor
sbb
adc
mov
sbb
xor
pushf
stos
xchg
cmp
xchg
test
icebp
inc
sbb
dec
mov
popa
aam
lahf
mov
cwtl
idiv
inc
pop
mov
and
dec
lret
adc
test
xorl
push
add
sbb
bound
mov
xchg
jb
stc
cwtl
push
inc
xchg
mov
sbb
push
jne
aaa
xor
test
jae
mov
mov
loopne
outsb
fs
dec
jbe
push
cwtl
movsl
pop
imul
mov
xchg
orl
mov
jnp
or
mov
or
mov
lock
push
inc
loop
xchg
int
add
cs
and
mov
pop
mov
jae
into
and
sar
mov
pop
lahf
push
je
or
cmpsb
push
cmp
mov
jnp
dec
xor
sbb
add
pop
xchg
stc
lods
sub
aas
leave
fsubr
movsl
sbb
subb
rcl
or
or
mov
pushf
add
push
or
ds
nop
call
dec
ds
or
push
arpl
inc
push
shlb
dec
adc
lea
add
jno
sahf
fucom
pop
notb
imul
pusha
aam
icebp
pusha
adc
cmc
mov
mov
shrb
aad
icebp
insl
sub
enter
mov
mov
mov
pop
lea
js
das
testb
and
sub
jge
ficomps
sub
mov
pop
xor
cmp
mov
push
inc
push
std
fdivs
push
je
das
xchg
mov
pop
pop
data16
aaa
lock
mov
push
pop
mov
scas
loopne
mov
aas
cmpl
jae
and
negl
fidivrl
hlt
add
scas
fistpll
and
int
int3
and
mov
mov
dec
jae
xor
dec
in
mov
pop
sub
or
fnstsw
adc
or
or
pop
and
addr16
pop
cmpsl
lret
pop
lahf
test
adc
push
mov
addr16
ja
push
subl
mov
aaa
inc
dec
repnz
fistpll
out
push
mov
mov
jne
fwait
xchg
jge
xlat
xor
mov
pop
and
call
xchg
shll
xor
adc
arpl
or
aaa
repnz
out
push
inc
xchg
push
gs
inc
xchg
subb
inc
pop
xchg
enter
nop
ja
pop
add
and
pusha
js
aas
adc
push
lea
mov
cmp
aam
pop
mov
jb
mov
xorb
pop
add
insl
mov
jns
das
inc
pop
arpl
aad
cmp
add
pop
push
insb
addr16
inc
into
int
popf
pop
pushf
xor
jae
loopne
cmc
fdivrl
dec
clc
mov
jecxz
repnz
movsb
inc
sarl
xor
push
mov
inc
repnz
addr16
push
and
push
aam
dec
push
cld
out
ficoms
dec
cmp
or
mov
mov
mov
cmp
jne
push
inc
inc
fxch
push
dec
pop
out
cli
dec
pop
mov
test
loop
out
push
sbb
or
inc
cmpsl
xor
xorl
jl
imul
outsb
mov
pop
movsb
push
aas
push
jl
ds
sub
fisubl
jb
jbe
add
add
dec
push
jnp
ss
mov
or
mov
jns
sub
push
push
fucom
pop
lret
fsubs
dec
mov
les
ljmp
cmp
test
xor
sub
mov
sbb
lock
lods
rorl
daa
sbb
pop
mov
and
push
inc
cmp
repnz
mov
pop
pushf
xor
sahf
lcall
test
jno
push
xchg
push
leave
sub
push
xchg
bound
xor
jle
in
repz
inc
sbb
add
xor
sub
add
cltd
inc
or
sub
int
pushf
mov
push
lock
xchg
xchg
and
mov
cmp
xchg
mov
jbe
sub
rcl
mov
shll
cld
jl
fcmovne
psubb
fdivrl
xor
mov
mov
mov
mov
mov
lock
cli
cmp
push
cmp
leave
adc
mul
pop
mov
mov
arpl
inc
popf
sbb
xchg
shll
scas
or
fsts
stos
rorb
lods
xor
xlat
lock
adc
push
clc
mov
lret
xchg
shlb
scas
mov
negb
mov
rcrl
jns
sub
cmp
adc
xor
lods
sub
leave
xor
inc
mov
fisubs
push
cmp
or
cmp
clc
pop
into
mov
mov
jne
iret
xchg
imull
add
popf
stos
jmp
or
lds
lret
out
js
mov
mov
pop
fdivs
pop
mov
ret
jmp
and
cmpsb
mov
outsb
xor
sub
pop
pop
push
movsl
popf
daa
mov
enter
in
jno
inc
mov
adc
push
fisttpl
adc
loopne
call
aad
and
popa
bound
pop
testl
incb
loope
movsl
stos
std
jg
jbe
decl
and
pushf
cmp
adc
stc
mov
push
push
xlat
lcall
sub
jecxz
jmp
mov
loope
iret
adc
addb
push
inc
adc
dec
jmp
xchg
stos
jl
sbb
pushf
sub
xchg
int
jmp
cmp
aaa
repz
leave
jno
xchg
imul
fistpl
mov
stos
xor
outsb
add
lods
xchg
xor
adc
out
loope
dec
repnz
sub
ljmp
mov
nop
mov
inc
pop
sbb
mov
dec
pop
inc
or
push
pop
in
bound
sbb
iret
sahf
and
pop
xchg
xorl
jne
andl
push
push
lock
out
lcall
inc
jge
pop
adc
lcall
imul
push
repz
mov
jns
insb
fwait
jo
dec
adc
sub
jle
and
mov
add
test
sarb
inc
mov
add
jl
cli
dec
or
sbbb
push
sbb
aam
jne
fcmovne
enter
imul
lods
shlb
nop
sbb
fcmovnb
roll
iret
pop
das
dec
mov
test
popa
inc
or
pop
push
push
imul
mov
mov
xchg
lret
dec
xor
ds
mov
test
sbb
sbb
out
pop
cmp
fiaddl
jae
push
mov
push
mov
jae
dec
add
lods
jo
pusha
mov
cmp
aaa
mov
js
xor
mov
push
mov
rorl
jge
out
add
stos
and
or
mov
jne
int3
insb
lahf
sbb
leave
add
test
lods
stos
sbb
in
jle
sbb
lret
inc
xorl
pop
mov
cli
xor
pop
adc
mov
push
adc
push
push
ds
jnp
out
dec
pop
sbb
or
insl
pusha
popl
jp
mov
mov
daa
jne
cmp
xor
xchg
push
je
ljmp
mov
insb
add
sub
adc
bound
sbb
ljmp
fidivs
ret
and
jmp
test
jle
rcr
gs
mov
inc
push
jb
or
and
repnz
testb
pop
add
mov
scas
or
cmp
aas
test
stos
cmp
pop
and
int
ljmp
sub
xchg
mov
cmp
out
inc
pop
jo
adc
ja
leave
dec
jle
mov
or
out
dec
jae
inc
adc
mov
mov
xchg
dec
cmpsl
mov
pop
pusha
rcrb
add
xor
and
insl
test
pop
mov
jmp
out
clc
inc
inc
jbe
es
popf
push
cmp
cmpsb
hlt
pop
dec
fisubrl
loop
into
lret
ret
insb
jae
rdmsr
fcomps
sbb
push
mov
dec
add
adc
js
movsb
ljmpw
and
sti
mov
and
repz
push
jl
xchg
imul
lahf
aas
xchg
test
mov
dec
mov
xor
fwait
test
scas
sbb
nop
mov
or
dec
inc
or
adc
loop
ret
ficompl
cmpsb
pop
inc
mov
push
ret
dec
push
jmp
fisubl
out
aas
mov
outsb
dec
cmp
push
sub
add
jnp
in
or
pop
mov
scas
cmp
in
das
cmp
jo
sbb
fistl
sbb
or
dec
and
out
loop
sbb
xchg
xchg
adc
sub
roll
fs
cld
and
aaa
cmpsb
sti
adc
pop
call
rcll
jmp
push
sbb
int3
xor
push
outsl
stos
xchg
mov
lret
in
flds
js
or
outsb
jp
adc
pop
add
add
out
into
faddl
nop
cs
mov
adc
mov
sub
mov
lret
int3
test
int
and
jb
loopw
dec
enter
mov
xor
add
cmp
sbb
pop
push
pop
adc
cli
mov
add
lcall
dec
adc
fldcw
iret
or
xchg
pop
sub
dec
cmp
ja
add
repnz
xchg
push
icebp
jge
fadds
stos
cli
or
inc
adc
pop
ret
fisttpll
mov
ret
in
mov
xor
sub
loope
or
push
adc
xchg
add
add
add
scas
dec
or
popf
push
dec
sub
xor
in
popf
pop
dec
sub
xor
mov
mov
xchg
jp
scas
arpl
inc
sbb
or
mov
mov
lret
mov
add
imul
jle
mov
movb
pop
or
nop
and
adc
negb
sbb
sbb
mov
cmp
pop
add
cmpsb
aam
cld
pop
scas
enter
mov
enter
push
inc
imul
xor
pop
stos
pop
push
test
jp
pop
xor
sub
packsswb
xchg
xchg
pop
mov
jae
mov
aaa
les
lret
or
xchg
xor
fwait
push
jb,pt
mov
enter
pop
test
xlat
loop
pop
pop
stc
push
fldcw
cltd
sti
subps
js
xchg
andb
add
jp
incl
pushf
push
and
sub
push
mov
imul
mov
xor
push
arpl
fimuls
enter
pop
mov
sub
push
mov
insb
dec
rcll
inc
mov
arpl
or
cwtl
int
xor
or
pop
fcoml
xchg
push
imul
cmp
popa
mov
jo
or
test
jmp
insb
or
popf
enter
cs
out
test
das
sti
mov
lret
std
sbbl
pop
cmp
addr16
add
push
mov
icebp
gs
nop
lds
das
inc
aaa
dec
jmp
or
jne
fidivrl
pusha
xor
adc
mov
or
inc
mov
lahf
fisubs
gs
pop
sti
and
cs
popa
mov
mov
js
std
into
push
arpl
cmpsb
cmp
jne
ss
pop
sub
sub
shrb
pop
iret
sbb
adcb
nop
int3
or
out
into
dec
add
xlat
call
cmp
mov
movsb
pop
adc
les
ljmp
rorl
in
leave
and
ror
push
sti
loopne
inc
sbb
jecxz
cmpb
dec
mov
dec
fisubl
addr16
lds
das
pop
mov
xor
scas
sbb
inc
fldt
loop
add
inc
xchg
sbb
sbbl
jmp
sbb
popa
mov
mov
push
cmc
imul
int
mov
test
push
movl
dec
mov
in
mov
in
jle
sub
mov
daa
dec
inc
mov
enter
movsb
pop
cmpsl
adc
pushf
rcr
mov
rcll
mov
jp
ds
in
neg
pop
xchg
mov
movsb
ljmp
cmp
clc
add
add
mov
sub
or
push
adc
push
push
out
xchg
loope
push
hlt
inc
jnp
jo
mov
jae
lret
daa
rcl
jmp
sarb
imul
iret
cld
notb
js
mov
or
aaa
lock
jb
mov
pop
inc
ja
sahf
mov
mov
imul
das
leave
dec
testb
ror
and
xor
mov
sub
jmp
mov
sti
pop
add
paddb
iret
add
xchg
add
test
add
mov
jle
ss
push
popf
and
jns
mov
inc
arpl
cltd
sbb
or
aad
stc
pop
test
test
iret
add
jmp
aaa
addr16
lret
enter
daa
lock
popf
inc
jne
pop
dec
or
mov
jnp
mov
ss
inc
bound
mov
sbb
mov
cld
insl
sarl
enter
push
lock
fnstsw
loope
scas
mov
iret
mov
out
vmaxps
fs
ljmp
xchg
arpl
outsl
fbld
movsb
cltd
lock
add
mov
cmp
jl
lods
add
int
mov
pop
loop
inc
daa
das
dec
push
inc
push
dec
fldenv
pop
jecxz
xchg
aas
push
cmp
rcr
pop
jmp
aam
or
xchg
dec
adc
and
movsl
dec
adc
mov
inc
sub
xor
ljmp
push
es
xor
cmp
ja
sarb
sub
rclb
pop
hlt
and
push
aas
insl
sub
mov
or
pop
jae
sub
repz
adc
push
cmc
sbb
mov
sbb
in
inc
rclb
imulb
pop
inc
dec
adc
jmp
into
pop
fcomps
inc
lods
and
mov
inc
jo
subl
mov
testb
xor
cmp
leave
psrlw
rcr
in
mov
inc
push
test
test
sahf
xchg
mov
hlt
or
rolb
cld
push
fs
sbb
lods
fmuls
fimull
in
push
scas
addl
cmp
or
adc
out
mov
mov
rol
push
adc
and
mov
pop
iret
stc
mov
mov
loop
xor
lods
movsl
push
lcall
fcoms
orb
xor
icebp
hlt
inc
push
pop
xchg
js
inc
popa
or
std
xor
aaa
mov
es
mov
insb
xchg
adc
les
insb
cmp
jmp
inc
cltd
aas
scas
imul
mov
daa
dec
and
in
dec
and
ja
mov
push
scas
mov
mov
jbe
inc
in
pop
push
add
inc
rorb
jae
call
mov
cwtl
push
in
push
cmpsb
cmp
cli
sub
push
jge
jo
mov
pop
sub
loop
hlt
push
dec
push
pushf
insb
and
call
fwait
and
cmp
sbb
jb
cmpsl
test
jo
dec
inc
jl
push
popf
and
push
add
cltd
imul
sti
rol
add
cmp
or
nop
push
shrl
inc
std
bound
outsl
lcall
stos
loope
dec
mov
fs
shlb
mov
cmc
scas
aas
mov
popf
pop
push
jo
adc
push
es
stos
test
inc
arpl
sub
mov
arpl
xor
xchg
jge
push
jb
sbb
jns
shrl
xchg
mov
jmp
mov
fs
outsb
dec
ja
das
mov
inc
ret
mov
out
les
ret
inc
and
xchg
cld
scas
xor
cmc
std
imul
sub
lea
xor
cmp
inc
lods
jno
loop
inc
pop
push
stos
mov
sub
repnz
mov
lret
cmpsl
jl
jae
dec
cmpb
mov
or
ret
add
mov
pop
adc
sbb
jnp
push
xor
pop
adc
push
stos
aaa
lret
iret
into
xchg
in
and
inc
xchg
push
sub
fdivp
dec
jb
cmp
xchg
xchg
pop
mov
pop
pop
xor
pop
mov
pop
and
mov
les
cltd
ljmp
push
nop
adc
mov
inc
loopne
leave
stos
insl
ret
clc
cmpsl
imul
adc
dec
dec
and
dec
orl
gs
adc
push
cmc
cmpsb
iret
jge
ret
push
stos
imul
sub
sub
pop
test
gs
add
mov
or
adc
push
mov
loopne
mulb
jge
aas
cs
lret
sub
mov
test
lcall
aam
cmc
rcll
aaa
inc
out
sub
adc
lods
fldenv
or
fimuls
les
bound
call
sbb
xor
xor
cmpl
sub
sub
xor
fs
int
jge
cmc
enter
mov
lret
sbb
outsb
mov
cwtl
fs
push
jae
aas
orl
ds
daa
cmpsb
adc
das
fucom
and
scas
adc
add
add
enter
mov
push
out
ret
sub
push
cld
loope
jo
jge
jo
push
cmc
lret
jns
pop
pop
add
jmp
test
cmp
cwtl
adc
out
aam
xor
stos
addr16
xlat
dec
fs
iret
sub
inc
sahf
jmp
and
xorl
orb
lret
lods
or
outsl
or
mov
mov
shl
gs
push
ret
mov
xchg
pop
jne
push
pusha
lret
xor
pop
add
mov
pop
test
ljmp
into
push
fdivl
sub
pop
test
mov
xchg
pusha
cli
adc
addr16
or
invlpg
out
in
js
jl
cmpsl
fbld
push
int3
push
push
pushf
and
jne
fwait
inc
hlt
push
das
lret
sbb
dec
fidivrl
pop
cs
flds
jno
movsl
jl
test
test
xchg
sub
xor
add
stos
sbb
sub
pop
jns
loopne
pop
call
mov
jbe
enter
out
xor
inc
roll
mov
loopne
pop
dec
iret
mov
pop
aas
ss
test
test
lret
lea
sbb
das
pop
into
data16
outsl
dec
movsb
xrelease
cmpsb
icebp
mov
shlb
fdivr
jnp
lods
decb
adc
cmp
inc
inc
xor
imul
hlt
dec
add
dec
cmc
push
ljmp
adc
aad
xor
dec
in
xchg
pop
xchg
sbb
fs
xor
sbb
aaa
cwtl
cld
pop
inc
adc
sti
sbb
shll
mov
jp
mov
jle
clc
imul
adc
jo
subb
int3
dec
pushf
std
jl
mov
mov
lods
cmc
dec
loop
repz
jge
cltd
ret
loop
mov
push
imul
scas
out
pop
or
sub
in
inc
in
cmp
mov
ret
movsl
stos
mov
or
mov
std
fcoms
je
inc
stos
push
push
fistl
imul
sbb
sub
push
jg
mov
cmp
push
or
add
mov
into
ds
push
xchg
xor
ret
pop
aaa
jno
stc
add
stos
cs
icebp
mov
mov
sbb
pop
mov
add
and
test
mov
sbb
mov
call
jp
or
cmp
mov
test
add
dec
in
mov
jnp
dec
fistpl
rclb
sbb
mov
mov
mov
popa
dec
mov
mov
mov
fcompl
push
daa
sub
sbb
and
loope
out
rorl
dec
push
and
in
pop
pop
mov
je
jb
lock
jbe
mov
or
aad
in
xchg
lods
and
mov
pop
mov
lcall
mov
sub
das
out
sub
sub
fsts
popf
loopne
sahf
sub
fmuls
cli
sbb
mov
mov
in
jae
lret
jo
mov
push
mov
jb
jbe
adc
jle
ss
dec
ljmp
dec
shrl
jb
je
insb
mov
call
mov
mov
push
cmp
fsubr
sbbb
mov
sbb
rolb
dec
pop
out
addr16
pushf
push
lock
pop
rolb
shrl
gs
es
rorl
test
jecxz
sbb
xor
push
xchg
das
sub
add
push
push
cmpsl
dec
mov
pop
add
test
dec
ds
sub
cmp
gs
sub
sub
inc
push
in
or
sahf
xchg
push
inc
mov
clc
dec
je
fisubrl
xchg
rcl
arpl
jp
or
lds
fldt
add
sub
loope
xorb
inc
mov
out
mov
mov
jmp
in
out
lods
sbb
jge
outsb
push
aaa
sbb
or
repnz
jno
lods
mov
sub
lahf
fucomi
shll
mov
dec
popa
sub
lods
adc
dec
imul
dec
and
inc
add
sub
in
xchg
pop
sti
lods
mov
ljmp
adc
ja
mov
jl
ret
rclb
cli
xchg
mov
test
cmp
pop
aad
les
mov
push
stos
sub
lret
or
out
xor
iret
adcl
sbb
cltd
dec
mov
inc
lock
mov
inc
loop
in
shr
push
js
lcall
adc
dec
sub
dec
shl
test
or
cs
outsb
or
mov
and
das
dec
xchg
lahf
mov
adc
lds
shll
push
call
xor
add
add
lret
fistps
xchg
lret
mov
pop
jo
push
inc
sti
adc
push
in
and
fcoms
pusha
or
aam
xchg
scas
scas
cmp
cltd
pusha
fldcw
shll
inc
testb
movb
dec
nop
push
ja
imul
mov
mov
sub
ljmp
out
inc
jge
jo,pt
daa
mov
popa
mov
sbb
mov
jecxz
and
jns
lahf
lea
sub
adc
dec
adc
popa
vmovlpd
mul
out
sbb
orl
dec
pslld
jno
push
dec
ja
add
inc
aas
sbb
lcall
adcl
scas
lcall
cmp
testl
mov
jo
fsubr
add
out
call
dec
lahf
inc
lret
sub
mov
push
mov
loopne
lods
idivl
data16
push
inc
clc
or
add
mov
fs
xlat
pop
sbb
inc
out
adc
pop
xchg
jno
push
sbb
cltd
aaa
add
sub
fwait
push
rol
inc
ja
sti
fdivl
xchg
imul
test
adc
inc
ret
mov
rolb
xchg
frstor
mov
and
stc
sub
insl
jecxz
mov
jnp
test
mov
adc
addr16
add
jp
sarl
jmp
jmp
aam
imul
shrb
mov
rclb
vpsrlq
push
in
mov
add
movsl
lcall
shlb
push
es
add
pusha
dec
pop
cmp
xchg
jbe
jmp
mov
std
or
and
cwtl
test
fnstcw
imul
scas
mov
mov
fidivl
inc
lcall
icebp
stos
jg
sub
cltd
or
dec
out
xchg
xor
dec
mov
cmp
inc
dec
and
ds
movsl
cmc
out
pop
in
inc
push
je
in
mov
loopne
mov
xor
or
mov
sub
or
fdivl
add
hlt
cwtl
repz
mov
mov
cmp
mov
xchg
push
aas
jge
xchg
adc
pop
cwtl
inc
aas
stc
sub
sub
repz
into
jno
in
addr16
mov
aam
lds
sbb
pop
incb
dec
mov
cli
push
lods
fidivrl
and
shrb
or
xchg
sbb
sub
push
add
testb
mov
mov
sub
call
mov
xchg
cmp
mov
sub
inc
sbb
adc
push
in
jmp
dec
xchg
fadd
pop
call
pop
jmp
sbb
jle
imul
enter
test
pop
out
rolb
sub
leave
sub
jl
pop
inc
fsubl
sub
push
arpl
xlat
dec
cmc
gs
and
fdivrs
movsl
sub
xchg
fwait
cmpsb
fnstsw
fidivrs
outsb
aad
lock
int
or
and
stos
pop
pop
sub
dec
inc
jbe
add
call
push
and
mov
cmpsl
sub
dec
push
jl
inc
dec
arpl
cmpsb
sub
push
adc
pop
mull
loopne
inc
outsl
jne
test
shrb
lahf
repz
test
xchg
repnz
and
cmc
xchg
xor
dec
in
dec
xor
out
ss
fsubs
xchg
ds
push
cwtl
int3
adc
xchg
rol
and
dec
add
arpl
xchg
repz
out
xor
and
in
adcb
int3
mov
mov
pop
jne
dec
pop
sti
pop
dec
dec
push
mov
jo
mov
jno
adc
sub
jmp
jbe
repz
cmpsb
stc
inc
add
mov
sbb
sub
push
outsb
dec
inc
xchg
lods
test
repnz
dec
mov
mov
leave
cmp
stos
push
fadd
and
cmp
in
pop
and
lcall
and
jle
testb
imul
and
out
inc
pop
lods
pop
push
adc
sbb
dec
nop
sbb
or
dec
repnz
sbb
mov
mov
stos
int
aad
add
scas
xchg
leave
call
pop
out
repz
xchg
mov
imul
test
out
insl
and
pop
mov
mov
in
sbb
inc
mov
scas
sub
imul
sbb
jne
pop
jbe
add
dec
or
xor
cmp
scas
out
mov
inc
stos
insl
sbb
sbb
sahf
lret
lahf
sbb
adc
fbstp
scas
add
mov
sbb
andb
shlb
ret
cwtl
mov
add
insl
test
xor
fistps
rcll
stos
mov
ss
add
mov
rcl
js
sub
adc
jo
adc
adc
jp
iret
adc
lods
xchg
mov
jl
jbe
leave
mov
das
dec
pop
mov
adc
jge
adc
pop
adc
cmp
stos
ds
pop
jnp
xchg
dec
cmc
popf
fdivrs
cmpsl
sub
inc
cmpsl
shl
xchg
mov
push
fstpl
pushf
xchg
dec
jp
js
mov
mov
push
in
out
sub
or
pop
jne
lret
cmp
add
xchg
mov
adc
lods
lret
and
add
sub
or
outsl
and
xlat
pop
cmp
dec
imul
cltd
cltd
pop
outsb
ja
mov
inc
out
cltd
js
jle
add
out
xchg
rolb
stos
lock
shl
add
xor
ja
or
insl
jae
adc
subb
dec
clc
ljmp
popa
clc
cmp
in
add
div
fisubrs
mov
andl
inc
rcll
or
adcb
mov
inc
and
in
dec
fdivrs
leave
push
mov
pop
xchg
lcall
or
int
push
scas
int3
sbb
stos
mov
push
add
mov
or
daa
mov
ds
mov
or
hlt
aas
hlt
mov
dec
inc
pushf
ds
test
imul
out
movb
jmp
movsl
or
pop
sbb
xchg
mov
xor
mov
xchg
mov
or
aas
data16
or
loopne
testl
dec
push
and
and
add
cmp
imul
or
xor
test
dec
sbb
adc
negb
into
mov
mov
jno
xchg
sub
pusha
pushf
aaa
scas
dec
inc
lahf
pop
pop
mov
std
adc
testl
call
mov
scas
jmp
dec
dec
repz
jo
push
sbb
cmc
mov
in
and
and
mov
fbld
inc
cmp
clc
aas
cwtl
addr16
out
inc
cmp
lods
idivl
sub
js
xchg
and
loopne
repnz
aad
stos
loop
mov
and
add
sub
cmpsb
push
insb
aad
shrl
repnz
mov
mov
push
scas
mov
pop
sbb
cmp
pusha
dec
loope
sub
mov
mov
das
push
pop
roll
repnz
pop
or
push
inc
out
fiaddl
add
scas
pop
mov
pop
add
sbb
add
xor
push
fs
sbb
adc
repz
jl
mov
loopne
js
pop
call
or
subb
jp
ret
fdivl
in
xchg
xchg
xchg
out
mov
into
subl
aad
add
fwait
loope
repnz
push
cmp
adc
lea
jns
insb
test
das
je
dec
push
cwtl
push
jle
cmovbe
ja
cmp
loope
mov
in
adc
push
loope
enter
or
sbb
push
sub
popf
dec
sbb
pop
iret
fcmovb
jo
cmp
enter
leave
scas
incl
sub
mov
das
test
adc
add
push
repnz
loop
arpl
sbb
jb
orl
xor
arpl
orl
or
xlat
shll
icebp
inc
bound
fcompl
jge
or
mov
mov
jmp
xor
or
je
out
push
and
insb
pop
movb
jmp
xor
sub
add
sbb
xorb
xchg
sbb
and
inc
fiaddl
jno
cmp
xchg
sub
cmp
stos
dec
xchg
xchg
inc
push
and
push
mov
inc
cmpsb
mov
mov
pop
int3
xchg
dec
jns
inc
pushf
mov
xor
mov
in
mov
jb
int3
bound
daa
out
js
push
in
outsl
add
xchg
loopne
andl
loopne
xchg
mov
pop
adc
stos
pop
lret
jns
push
xchg
xchg
lret
sbb
mov
roll
lock
jbe
into
jmp
push
dec
xchg
aas
sub
sahf
dec
add
push
lds
mov
imul
addl
mov
xlat
add
mov
ret
imul
stc
add
lahf
jo
fisubs
lea
stos
inc
aaa
or
jmp
out
xor
push
mov
test
aam
pop
xor
mov
sub
lock
pop
out
or
mov
cmp
push
daa
mov
or
sbb
outsl
test
pop
clc
mov
mov
cmp
pop
test
in
loope
out
loopne
push
dec
or
movsl
into
aas
add
aaa
lods
mov
or
clc
dec
bound
xor
adc
aad
inc
sti
roll
cltd
dec
lcall
leave
clc
or
aaa
sti
leave
fisttps
xchg
mov
inc
fisubl
inc
sub
rolb
push
sbb
inc
dec
or
lock
pop
cmpsl
jne
xchg
das
pop
mov
or
add
stos
push
sub
pop
in
inc
inc
stos
or
sub
cmp
inc
fisttpl
not
pushf
fisttpl
pop
leave
imul
sbb
pop
push
push
jns
xchg
scas
mov
jae
jg
push
xchg
call
or
cmpsl
adc
lret
in
lods
and
aaa
mov
adc
nop
sub
int3
outsl
pop
cli
sbb
jbe
mov
jmp
aad
xor
pop
pop
xor
lcall
mov
stos
dec
adcb
mov
stos
adc
jo
ficoms
outsb
arpl
inc
outsl
pop
jmp
jle
inc
dec
inc
lock
std
lahf
jne
pop
inc
inc
ret
scas
inc
mov
push
gs
xorl
push
leave
xchg
les
sub
test
repz
inc
mov
cmp
ljmp
pop
adc
movsl
daa
adc
loopne
sbb
sub
imul
mov
sbb
sbb
test
int
inc
xor
test
add
rol
repnz
and
or
add
xchg
jle
inc
popa
sbb
push
movsb
mov
fcmovbe
sub
xor
mov
add
cli
rol
adc
inc
sub
pop
daa
pop
dec
mov
mov
or
jbe
and
rcl
bound
push
push
jmp
popf
daa
mov
jmp
add
in
adc
or
out
sbb
int
outsb
and
sbb
enter
pop
dec
cli
and
cld
mov
adc
popf
dec
das
mov
jle
mov
fnstsw
jmp
into
xor
icebp
push
sub
adc
outsl
inc
mov
aad
lods
cmp
out
or
jae
daa
ds
mov
add
push
rcl
dec
jbe
mov
cmp
xchg
cld
addr16
jbe
cli
neg
push
popf
xchg
cmc
imul
mov
mov
dec
sbb
add
popf
pop
les
adcl
shll
xchg
push
adc
add
inc
aas
mov
repnz
push
cmp
int3
popa
notb
mov
push
out
cmc
mov
jmp
sti
sub
fstpl
jo
aaa
sbb
lcall
filds
inc
std
add
fdivs
push
mov
jno
mov
fnstenv
cli
fimuls
pusha
fiaddl
loope
jg
add
cwtl
fnsave
lds
dec
call
into
cmpsb
mov
pusha
jg
sbb
inc
mov
loopne
gs
and
das
lcall
sbb
imul
aad
mov
inc
mov
mov
add
mov
rorl
mov
xchg
ja
mov
movsb
outsl
shll
cwtl
mov
loope
movsb
aad
xor
scas
sti
aad
sbb
cs
out
sbb
mov
inc
jg
adc
movsb
mov
add
insb
mov
outsl
movsb
cmc
repz
inc
cmp
mov
inc
mov
clc
leave
cld
imul
mov
mov
adc
gs
pop
fwait
out
fcomps
pop
lahf
adcb
mov
push
and
call
dec
stos
rcrb
push
sbb
push
scas
push
xor
cmp
clc
std
out
insl
sub
pop
or
push
adc
adc
inc
adc
test
xchg
lcall
in
sbb
movsb
enter
and
mov
insl
pop
xor
pop
mov
dec
clc
sub
push
push
sbb
pop
mov
loop
sub
mov
jo
shll
popa
ret
dec
daa
lods
loopne
push
scas
lods
ljmp
sbb
push
xchg
addl
jmp
cld
push
mov
mov
cmp
push
push
push
hlt
jbe
mov
bnd
stos
in
ffree
aam
jns
mov
pop
cltd
pop
data16
repz
dec
mov
je
sub
ljmp
add
mov
scas
arpl
inc
pop
sub
jbe
inc
xchg
sti
js
repnz
jle
pop
dec
mov
inc
jecxz
inc
into
movsb
call
push
cmp
fdivs
test
cmp
xor
push
mov
push
sbb
hlt
out
pop
and
stc
shlb
je
adc
orl
movsb
mov
loop
mov
mov
ss
add
pop
in
fimull
adc
scas
lods
fldcw
push
cmpb
or
test
or
jae
cli
je
out
out
lock
cmc
pop
sub
inc
mov
fnstsw
imul
jle
sbb
shrb
adc
lea
sbb
out
insb
and
imul
enter
cmpsb
push
dec
xchg
les
ss
xchg
dec
movsl
inc
les
xchg
dec
xchg
or
mov
lret
and
adc
xchg
iret
jnp
mov
stc
imul
gs
shl
push
rcr
mov
loop
js
jge
adc
push
aam
mov
inc
and
aad
sub
mov
push
mov
sbb
or
jbe
pop
into
lret
mov
cs
inc
sbb
xchg
or
xlat
dec
aaa
and
xchg
xchg
push
sub
cmpb
lahf
stc
scas
jae
xchg
xor
sub
gs
popf
rorl
cmpsb
shlb
and
sbb
hlt
stc
inc
mov
mov
adc
cmpb
mov
and
push
int
sar
jbe
xchg
stos
fildll
lods
ret
mov
mov
loope
stos
xor
ret
or
ss
mov
dec
mov
hlt
pushf
cmpb
lea
ret
jg
sbb
icebp
xor
andl
std
dec
push
sbb
stos
jae
xchg
jg
scas
out
sub
lahf
popa
mov
xor
in
mov
dec
push
rcrb
out
test
dec
leave
hlt
mov
mov
cwtl
inc
xchg
xorl
ljmp
cld
dec
das
ret
sbb
add
aad
lods
andb
add
push
imul
jecxz
adc
insl
xchg
sbb
pushl
pop
or
mov
xor
jp
fdivrl
int
jg
pusha
es
enter
pop
aas
clc
dec
into
fnstsw
ja
dec
push
push
sbb
ljmp
ss
sub
ret
shrb
idivb
outsl
sbb
pop
inc
xchg
add
in
bound
mov
cld
stos
jae
hlt
pop
cmp
jo
push
mov
add
xchg
dec
jb
fcompl
insl
adc
jbe
sub
jno
mov
xchg
cld
sahf
adc
pop
in
call
in
mov
fdiv
sub
fs
stos
test
inc
jle
insl
stos
mov
jmp
xor
xor
dec
and
loope
sub
pop
adc
sbb
cmpsl
in
jmp
push
push
sbb
or
daa
lods
mov
sahf
push
mov
inc
andl
imul
mov
inc
cmp
dec
in
cmp
pop
nop
mov
inc
mov
fs
jmp
movsb
push
repz
mov
and
mov
push
mov
dec
pushf
fisubrs
pop
je
mov
mov
aaa
push
and
shlb
and
mov
movsb
mov
mov
xchg
inc
push
xchg
sub
insb
xchg
mov
hlt
movsl
lcall
pushf
in
outsl
repz
jle
lods
mov
fs
and
das
add
pop
jmp
aam
inc
xchg
xchg
dec
cmp
mov
push
pusha
mov
mov
pop
fmuls
sahf
call
xor
xor
mov
dec
out
mov
mov
mov
imul
fdivl
inc
pop
mov
or
xchg
idiv
xchg
sub
or
dec
lods
pop
stos
popa
xchg
mov
mov
mov
popa
push
aad
mov
push
call
cltd
and
sub
pop
ljmp
hlt
lret
dec
jns
mov
sub
ret
push
and
or
jb
ja
mov
shll
mov
addr16
les
mov
mov
dec
xchg
outsl
cmp
in
inc
push
pop
xchg
xor
hlt
mov
out
mov
ljmp
loopne
pushf
in
aaa
cmp
aam
addr16
jnp
push
sub
inc
mov
mov
mov
cmp
sbb
mov
adc
shrb
jno
enter
in
push
add
mov
iret
jo
lock
mov
jae
sbb
out
aam
jb
div
xchg
ds
cld
fistpl
in
scas
ret
cmp
hlt
push
arpl
lahf
inc
mov
out
mov
pop
daa
cmpsl
repz
sbb
mov
lcall
mov
shrb
jo
cmpsl
addr16
jne
mov
imul
mov
or
xor
test
mov
cmpb
outsb
push
in
push
dec
out
mov
sahf
jae
cs
jmp
cmp
shrb
arpl
lods
push
aam
stos
bound
enter
fldl
aad
jecxz
mov
push
mov
push
outsl
ror
or
loop
repz
lods
test
cmp
rorl
and
jno
iret
lds
fwait
test
idivb
sbb
adc
out
insb
int3
clc
out
sahf
and
test
jge
pusha
add
je
jb
push
fwait
addb
in
dec
add
sub
imul
xchg
mov
mov
mov
xor
pop
cwtl
dec
out
jnp
push
mov
stos
dec
jnp
test
mov
int
loop
daa
cmp
lret
jnp
stos
popf
fst
push
jecxz
repnz
mov
push
and
out
mov
pop
sbb
das
lahf
add
adc
mov
cwtl
mov
fisubrl
push
out
test
xchg
scas
mov
mov
out
dec
pop
sub
adc
outsl
lret
aaa
cs
insb
stos
sbb
mov
std
cwtl
and
loop
inc
cmp
or
lret
or
xchg
int3
xchg
sti
pop
in
cld
idivl
and
repnz
add
data16
push
sbb
and
jb
add
push
aam
lcall
push
ja
mov
icebp
popf
cmp
xor
fs
sbbl
movsl
xchg
cmpsb
pushl
idivl
inc
mov
or
ljmp
mov
mov
les
adc
pop
xor
jmp
sub
cltd
push
sbb
outsb
jno
mov
cli
scas
mov
push
shrl
push
sti
pop
xchg
in
dec
cmp
xchg
fisubrs
xorl
mov
scas
stc
mov
int3
mov
and
jno
xchg
mov
dec
lcall
insb
cmp
mov
adc
or
loopne
std
xchg
adc
xchg
lods
dec
mul
lds
mov
adc
jno
add
mov
pushf
dec
xor
xchg
bound
fidivrl
jp
xor
mov
lcall
loope
xor
fadds
mov
pop
jno
js
add
jp
mov
loop
sub
or
add
sub
pop
xchg
icebp
jae
je
push
adcb
pop
pop
loopne
add
pop
mov
lcall
or
sbb
jmp
push
adc
outsb
imul
mov
xchg
xchg
mov
lds
push
enter
stos
subl
jg
orl
fimuls
mov
jne
hlt
loop
cltd
xlat
mov
add
loop
ds
repz
test
jl
imul
and
jl
aas
sub
fidivrl
cmp
call
insb
gs
pop
lds
cwtl
js
clc
cltd
pushf
sti
jno
gs
aaa
xchg
jb
jnp
push
push
aaa
dec
dec
subb
xor
scas
gs
aaa
jno
int3
fstps
loopne
cwtl
push
es
add
aam
sub
and
push
ds
insb
out
fwait
repz
jmp
out
ret
jns
sahf
add
dec
sub
cmp
xlat
int3
lock
call
loop
mov
push
pop
sbb
mov
enter
js
mov
jnp
jae
jp
push
sub
add
cmc
pusha
ror
gs
mov
scas
insl
stos
out
lret
add
and
inc
adc
test
add
pop
push
inc
movsl
enter
in
mov
lcall
xor
mov
push
enter
rcl
clc
sbb
push
repz
stos
mov
jne
loope
rolb
std
out
ret
sbb
repnz
push
push
loope
mov
jmp
pop
out
xor
pop
aaa
cmpsl
xor
fildll
or
jmp
add
mov
dec
movsb
adc
hlt
test
jle
sub
loop
or
sbb
push
mov
loope
inc
xchg
xor
or
dec
out
mov
dec
push
jmp
pop
in
rcll
fdivrl
and
mov
dec
or
ljmp
pushw
imul
cwtl
iret
adc
in
adcl
mov
mov
push
addb
pop
push
push
add
movsb
call
jecxz
dec
sub
adc
jl
loope
and
ja
mov
enter
jecxz
fldenv
or
jge
stc
out
inc
fildl
mov
dec
ret
push
adc
xor
lcall
add
push
loop
out
loop
jnp
ret
and
les
or
lds
cli
cltd
jp
fmuls
xchg
push
repnz
add
sahf
stc
arpl
ljmp
ljmp
mov
jbe
data16
or
lods
out
jae
cld
inc
adc
jbe,pt
mov
test
cld
je
xorl
pop
sbb
andb
jnp
icebp
ja
push
mov
rorl
cltd
adc
sub
loope
pop
mov
dec
clc
popa
push
xor
add
jp
addr16
xor
mov
sahf
and
fwait
adc
push
sub
fldenv
icebp
loope
cmp
cli
repz
add
outsb
sub
lcall
cltd
push
lds
out
into
sub
lea
rcrl
fsubrs
in
sar
and
xor
jnp
iret
sub
ret
xor
sbb
shrb
pop
and
and
jl
xchg
cld
fsubl
mov
push
gs
xor
sub
test
push
lret
cs
stos
mov
cli
cmpsl
pop
cltd
movsl
sbb
ror
pop
insb
movsl
mov
sub
sub
in
jbe
push
dec
out
dec
inc
jmp
insl
sub
lods
inc
dec
sbb
incb
add
lahf
mov
mov
inc
rclb
les
push
lret
lds
jmp
pop
and
xchg
xorl
inc
leave
in
push
push
fcmovne
dec
scas
xchg
test
dec
mov
sahf
and
jg
dec
faddl
notl
out
inc
sbb
xor
enter
xchg
gs
push
inc
add
lods
mov
adc
dec
sbb
xchg
mov
dec
add
inc
jae
pushf
push
stos
fiaddl
lds
ret
jne
loop
and
mov
aam
xchg
lret
jns
and
sbb
jp
jmp
xchg
xor
mov
and
js
mov
xor
fwait
pop
lret
add
add
jbe
ja
jecxz
into
jb
inc
push
xor
arpl
imul
pop
xorb
sahf
in
mov
jne
and
call
fwait
jnp
jae
fwait
cmp
dec
stos
mov
cs
dec
imull
stc
or
sbb
xor
mov
dec
popf
cmp
ja
push
xchg
test
pop
pop
lods
sbb
aas
repnz
mov
stos
lret
imul
add
test
or
mov
out
fcomps
dec
jecxz
xor
sahf
inc
xor
push
fisubrs
xor
scas
je
push
comiss
push
sub
inc
mov
xor
sar
aad
pusha
fs
rorl
mov
mov
dec
pop
push
add
jno
ffree
movsl
xorb
cmc
repz
and
cld
shll
cltd
aam
and
in
std
mov
jmp
ret
repnz
mov
jg
xlat
mov
cmp
dec
sub
mov
fcomp
lret
pop
lods
outsb
mov
add
mov
adc
pop
dec
dec
lea
out
mov
jle
mov
or
jo
jo
push
cmp
add
loopne
es
mov
mov
mov
je
inc
mov
sub
cwtl
je
imul
lret
xor
pop
xchg
loope
lods
dec
mov
mov
pop
add
xor
or
mov
outsl
xchg
jbe
fsub
add
frstpm(287
and
ftst
push
cmp
mov
repnz
jl
sahf
mov
sbb
fwait
mov
repnz
cltd
gs
notrack
ret
sub
stc
rcl
jmp
cmp
cmp
cli
sub
xchg
cmp
adc
daa
push
mov
and
pop
and
sub
out
mov
jne
or
ret
sub
out
xchg
dec
pusha
scas
mov
mov
xchg
mov
loope
jno
mov
jb
mov
push
subl
fstpl
movsb
and
test
dec
cmp
or
aam
xchg
into
and
aam
cltd
cs
daa
ds
cmp
lock
jnp
mov
ss
aaa
lret
aaa
clc
mov
bswap
fimuls
and
jg
sub
cmp
and
arpl
dec
and
pop
notb
jmp
andl
push
xchg
pop
push
push
outsl
add
push
cmp
popa
inc
iret
xchg
push
adc
add
insb
pushf
mov
arpl
ret
mov
imul
pop
mov
repz
nop
cmp
ret
sbbb
jge
repnz
pop
call
int
dec
push
inc
cmp
cmpsl
imul
fidivrs
dec
xchg
or
mov
xchg
sbb
mov
sub
xor
lcall
xchg
push
xor
imul
mov
sbb
jne
cmpsb
xchg
repz
push
lcall
mov
mov
ds
or
mov
inc
push
push
rcr
popa
nop
jle
xor
dec
and
jno
and
sbb
call
roll
push
cmp
inc
mov
mov
inc
icebp
mov
adc
lock
stos
in
subl
cmpsb
lret
pop
in
cmp
cmp
inc
std
das
clc
cltd
shr
out
enter
sbb
fcmovnu
push
ds
pop
cmpsl
pushl
sarb
add
and
adc
pop
jle
dec
mov
pop
je
or
lea
ja
sti
js
movb
fnsave
icebp
in
xor
rcrb
add
out
test
clc
and
add
xor
orb
adc
jns,pn
idivl
insb
inc
sub
mov
mov
push
mov
iret
popa
push
clc
lds
cmc
fstpt
mov
cmp
jo
icebp
stc
push
sub
lret
stc
jno
lea
adc
repnz
mov
cmpsb
lret
push
jne
dec
fcoms
cwtl
xor
stos
pop
xchg
iret
shll
xchg
addr16
sbb
sbb
shrl
jl
jne
sbb
and
ret
add
aaa
push
push
cmp
and
adc
cmc
cli
test
in
ds
pop
outsb
pop
test
inc
aaa
xchg
or
cmp
xor
fsub
mov
aam
insb
xchg
push
popf
sbb
mov
pop
mov
int
bnd
xchg
push
mov
and
cli
xor
imul
mov
repnz
jne
push
fs
pushf
jns
fcompl
rcrb
enter
mov
stc
popf
push
sub
leave
xlat
mov
adc
repnz
pusha
xor
ja
in
mov
in
sbb
push
ja
std
in
and
mov
and
push
std
and
xchg
push
in
fdiv
cmp
xlat
out
daa
popf
cmp
jp
sbb
or
clc
ss
stc
mov
add
rcr
loop
cmp
inc
test
pop
loop
push
or
orl
movsl
mov
lcall
insl
test
insb
lock
stos
shll
test
in
int3
sub
sbbl
cld
scas
and
cli
sub
and
repnz
fisubrl
in
push
mov
push
sbb
movsl
jno
lds
sub
in
sbbb
fwait
ljmp
inc
cmc
addr16
sbb
mov
push
icebp
rorl
out
shll
mov
pop
stos
push
movsb
jo
lods
insb
xor
cmpsb
fidivs
xchg
or
inc
push
ss
xchg
inc
pop
mov
fisubrs
xchg
xlat
adc
jb
jge
ss
aaa
and
jns
sarl
sub
insb
rol
pop
xor
cmp
xchg
cmp
jecxz
into
in
cmp
cld
movsb
cmp
outsl
sub
daa
notb
clc
jbe
lret
jl
push
jmp
xor
xchg
clc
es
add
jg
or
ret
jl
pop
ljmp
loop
cmpsb
leave
rep
stc
xor
mov
and
iret
jl
fs
mov
mov
sahf
lret
mov
test
aaa
std
or
jl
mov
ret
jle
mov
fwait
mov
movsl
xchg
and
nop
pop
and
movsl
push
int3
fs
xchg
cmp
fdivs
push
repz
xchg
arpl
ljmp
cmp
dec
lret
xchg
push
pop
fsubrs
mov
lea
mov
aaa
jns
adcb
mov
xor
ret
dec
push
outsl
out
dec
dec
movb
das
jnp
testb
pop
nop
ret
jmp
sub
insb
test
add
mov
movsb
cmpsl
and
adc
pop
shll
je
pusha
cmp
test
sub
pop
push
jg
push
popf
pop
into
negb
pop
mov
or
jmp
arpl
or
xchg
adc
push
test
paddusb
xchg
test
cltd
xor
jae
fidivl
clc
mov
stc
lock
mov
loopne
bound
add
inc
cmc
jbe
scas
sbbb
pop
out
xor
stc
mov
push
xchg
pop
movsb
mov
shr
or
aas
sahf
mov
iret
inc
inc
jge
hlt
pop
repnz
leave
arpl
sarl
mov
fidivrl
mov
cmp
inc
mov
fucom
rcrl
lds
ds
mov
shll
xchg
xchg
jnp
jnp
sbb
pop
sbb
aam
pop
jae
pop
mov
xchg
jl
js
sar
int3
mov
shll
adc
and
pause
xor
jno
inc
loopne
movsb
ja
sub
out
pop
sub
mov
and
mov
les
push
push
xor
mov
pop
shl
xor
or
out
clc
lds
jge
aam
add
mov
dec
pop
jnp
iret
mov
xorb
dec
sbb
sahf
pop
leave
adc
in
or
and
xor
cs
outsb
fnsave
adc
add
pushf
movsl
jl
pusha
push
lods
outsb
lcall
ds
sub
adc
addb
or
insl
mov
and
and
mov
fcoml
aad
jb
dec
repz
cld
aas
fcoml
xchg
in
cmc
clc
jge
icebp
ror
jg
pop
fsubp
insb
repz
or
cmp
or
mov
mov
roll
pop
sbb
sti
jbe
xchg
jnp
mov
imul
mov
adc
push
and
cmp
add
rol
mov
das
mov
push
push
lods
in
aam
pop
decb
jle
jb
pop
xchg
pop
pop
jae
sub
subb
into
sbb
aas
mov
add
enter
jmp
in
mov
cli
mov
push
imul
jbe
test
and
adc
lods
aad
sub
push
sbb
call
mov
ds
pushf
jl
inc
cltd
dec
outsl
repnz
out
gs
sbb
push
in
jnp
ror
mov
sub
ret
test
adc
mov
or
adc
lea
jg
dec
push
mov
xor
es
movsb
lcall
xor
cld
push
push
sub
in
ficoml
lcall
push
loop
sarb
mov
repz
or
enter
pop
std
lods
sub
mov
sub
pusha
jp
stos
popa
mov
push
adc
lcall
test
je
mov
fistpll
ret
loop
cmp
lds
js
cmp
stos
pop
arpl
filds
fdivp
es
pop
mov
aam
or
or
jns
in
lock
mov
xchg
push
not
push
fimull
imul
int3
push
adc
movsb
out
jnp
loop
and
arpl
jbe
pushf
jl
mov
repz
scas
lods
add
in
lods
adc
jge
cmpsl
xor
cmp
adcl
cmp
dec
dec
leave
add
add
popa
sarb
movsl
fbld
and
lret
sahf
xor
pop
pop
outsl
mov
ret
fdivs
lock
push
pop
pop
ja
adcl
shl
popf
scas
xorl
nop
ret
clc
cltd
mov
sarl
mulb
push
inc
je
arpl
int3
mov
into
cwtl
jno
loop
out
jle
sbb
cmp
fnstcw
enter
mov
mov
mov
popa
sbb
lock
in
sub
iret
call
aaa
out
mov
in
sbb
mov
xchg
in
cmpsl
and
int3
aam
push
shl
frndint
movsb
scas
test
or
mov
cmp
jl
xchg
sbb
push
mov
jg
pop
insb
pusha
add
jb
leave
in
scas
lds
faddl
pop
and
cmp
fistpl
nop
jb
lret
push
andb
in
rcr
test
mov
rcl
jae
in
test
mov
and
or
push
inc
jo
push
ss
mov
dec
sahf
mov
je
and
xor
loop
mov
bound
sub
pop
pop
and
arpl
jb
loop
popf
sub
scas
push
clc
jp
enter
cmc
or
mov
pushf
pusha
lods
push
fists
or
cld
loop
scas
fucomip
pop
inc
pop
and
mov
pushf
jns
fcompl
cwtl
and
jecxz
mov
cmp
rolb
lods
mov
push
push
xor
pop
inc
fwait
sub
pop
push
or
iret
mov
mov
mov
mov
cli
ficompl
mov
sbb
mov
mov
mov
enter
lods
mov
cmp
mov
and
mov
add
scas
xor
pop
xchg
ljmp
imull
rorl
fwait
cmp
cmpb
loope
mov
lds
cmpsb
inc
out
push
in
mov
fldt
push
push
sub
fdivl
in
adc
clc
adc
test
std
sbb
testl
xor
pop
ret
cwtl
lret
sub
test
adc
repnz
movsl
ja
int3
out
push
jl
lods
pop
sbb
testb
repz
out
sbb
cli
cwtl
jbe
sbb
pop
jnp
mov
inc
or
push
or
repz
popa
bound
xor
mov
add
and
cs
scas
scas
ret
push
fadds
shr
scas
in
sarl
dec
dec
ss
sbb
negl
test
mov
sarl
shl
stos
das
jbe
loop
pushf
sub
dec
stos
xlat
in
lock
mov
aaa
jg
fwait
jnp
lahf
or
add
or
ret
stos
jg
loopne
push
adc
mov
pop
dec
sub
pop
add
cmp
outsb
ljmp
cmp
or
pop
adc
dec
nop
xchg
out
xor
es
out
in
jg
cmp
adc
lcall
or
adc
fs
mov
iret
je
mov
scas
pusha
jno
and
sub
jmp
in
adc
mov
ja
mov
test
mov
iret
stc
sahf
cmp
mov
jle
sarl
jne
fnstcw
jmp
clc
mov
push
mov
dec
fabs
fdivrs
inc
cmp
leave
jmp
sub
cltd
loope
adc
adc
shrl
and
out
sbb
inc
add
xor
jae
dec
mov
pop
mov
xor
xorl
sub
sub
dec
les
adc
jmp
and
mov
pop
ja
sbb
mov
fcoms
or
in
adc
mov
inc
sbb
xor
push
cmc
mov
jl
negl
mov
jb
popa
xchg
shrb
fisubrs
jnp
out
xchg
and
insb
decl
fsubr
je
push
js
sahf
pop
push
outsb
lds
lahf
fwait
cmp
int
out
in
xor
push
pop
push
ljmp
inc
mov
cwtl
das
mov
jb
in
pop
andb
mov
sub
stos
out
cmp
pop
cmpsb
xchg
xor
movsl
mov
fists
or
jb
sbb
lock
das
lret
and
lods
and
cmpsb
mov
xor
xor
xchg
mov
add
arpl
push
adc
out
dec
dec
data16
daa
add
cmp
xchg
fdivrp
cmp
or
dec
adcl
inc
xlat
pop
adc
aam
jl
mov
call
ds
sahf
test
push
ljmp
call
push
mov
repnz
outsl
int3
xchg
inc
sti
scas
push
xchg
loop
jbe
cmp
push
sarb
test
jl
lahf
roll
xchg
mov
xor
cwtl
ljmp
adc
mov
cmp
shrb
and
pop
mov
mov
hlt
sbb
pop
aad
ret
in
or
fwait
pop
cli
push
stos
add
jmp
bound
ret
fistpll
fimull
dec
les
xor
mov
loopne
push
call
xchg
xchg
test
and
stos
jg
pop
subl
jp
add
pop
push
out
or
mov
insb
insb
das
jns
adc
arpl
push
xor
leave
pop
pusha
add
jbe
jmp
cmp
scas
testb
jbe
ss
arpl
inc
ds
cmp
xlat
hlt
pop
pop
frstor
inc
cmc
cwtl
aad
test
int
push
inc
in
test
inc
dec
stc
cmp
dec
in
sbb
stc
movsl
aas
lds
and
push
push
dec
jmp
lods
mov
fistpll
cs
push
and
mov
out
into
xchg
push
and
jl
test
mov
dec
sbb
pop
in
mov
test
inc
imul
data16
jl
imul
pop
cmp
lea
fidivrl
lds
dec
sub
ljmp
repz
pop
mov
popa
fsubs
sbb
mov
inc
pop
mov
jmp
sbb
pop
hlt
pushf
cmpsb
xor
pop
adc
adc
daa
or
jl
int3
pop
jns
incb
bound
pop
loop
mov
adc
mov
jle
cli
jmp
or
pusha
mov
and
std
mov
cld
scas
mov
mov
cmp
xor
vmovss
jae
mov
int
mov
cwtl
or
mov
outsb
aam
pusha
pop
and
jg
enter
mov
imul
sbb
pop
mov
sbb
ds
cmp
mov
mov
popa
push
fwait
rol
mov
icebp
stos
cmpsb
pop
dec
hlt
mov
mov
in
iret
sbb
popa
mov
pushf
cmp
push
pop
cmp
push
imul
int
and
mov
cmpsb
cwtl
push
add
mulb
inc
or
lea
or
outsb
std
int
xchg
xchg
mov
and
stc
xor
cmpl
fnstcw
cli
push
dec
repnz
inc
cli
jb
xor
dec
xchg
dec
popa
imul
dec
add
mov
sub
rcrb
xchg
mov
adc
xor
imul
adc
jne
into
push
push
aam
inc
xor
push
and
jno
icebp
es
pop
or
xor
addb
dec
outsl
mov
jne
or
push
shll
adc
add
cmpsl
and
notb
arpl
cmp
jno
pushf
sbb
push
and
pop
daa
je
lods
movsl
negb
cmp
shll
fucomp
les
lods
ret
mov
push
xchg
mov
arpl
jns
test
lock
scas
aaa
pop
dec
cmp
scas
sub
insl
xor
mov
test
fsts
enter
fimull
push
insw
mov
in
xchg
dec
push
fidivl
int3
scas
scas
mov
or
aad
xchg
lret
mov
pop
mov
sub
inc
mov
jne
push
pop
xchg
or
dec
dec
sub
jbe
fcmovnbe
cmc
fs
gs
xor
pop
dec
and
inc
sbb
mov
add
inc
dec
sbb
or
mov
add
push
lahf
clc
mov
imul
mov
fs
mov
sbb
jno
fistpll
sbb
dec
xchg
movsl
mov
push
andb
jnp
dec
mov
sahf
stos
mov
insb
fistl
mov
xchg
mov
push
movsb
loope
pop
add
cmp
cs
push
dec
lcall
mov
lret
jge
dec
es
mov
test
xchg
add
mov
jle
inc
mov
mov
pusha
cmpb
in
or
roll
dec
lods
hlt
je
and
xor
iret
clc
lods
push
roll
xchg
test
bnd
inc
into
dec
aad
std
dec
fistpl
ss
std
mov
popf
xchg
insb
adc
fwait
nop
cs
subl
mov
out
ljmp
push
sbb
xor
jge
pop
push
xchg
insb
fwait
push
xor
inc
sbb
and
aaa
jmp
mov
ret
push
pop
addr16
xor
icebp
add
adc
clc
cmp
ficomps
sub
out
sub
int3
mov
or
imul
cmp
mov
es
mov
push
repz
xchg
mov
mov
jnp
adcb
mov
insl
push
mov
bound
stos
jb
xchg
repz
mov
insl
cmp
movq
xorl
rorb
xchg
lcall
xor
mov
aaa
call
cmp
divl
inc
push
and
ss
mov
jo
and
mov
mov
mov
cltd
mov
lods
jno
scas
or
gs
jmp
fnstcw
fs
movb
mov
dec
hlt
xor
stos
sbb
sbbb
into
into
repz
daa
shrb
movsb
xchg
mov
push
cmp
cmp
rolb
add
push
roll
das
cmp
pop
add
push
in
lret
pop
add
inc
push
or
add
roll
test
outsl
inc
add
lcall
or
push
sbb
jo
movsb
fsubs
pop
cmp
sbb
neg
push
fcomip
mov
lods
sti
pop
jnp
lcall
je
dec
stos
xchg
loope
jg
lock
shrb
add
xor
cmc
push
lahf
fs
sahf
leave
add
shrl
jno
mov
sbb
mov
mov
jnp
pop
in
in
sub
and
imul
divl
dec
push
dec
aaa
loope
mov
lret
int3
inc
push
in
sbb
jb
jb
stc
push
sub
repnz
pop
fldt
xchg
push
push
add
push
jns
mov
nop
add
pop
xor
jo
jecxz
dec
cmpsl
pusha
movsl
sbb
and
mov
outsb
daa
fcomi
out
sbb
jl
out
jne
jl
hlt
lds
push
lds
repnz
inc
push
fdivrp
lahf
icebp
call
in
fadds
add
shl
pop
xchg
cmp
roll
cmp
push
mov
rorl
jno
out
push
cld
movsb
adc
dec
sbb
jl
repnz
repnz
pop
std
inc
sbb
or
inc
push
or
pop
fucomi
xchg
sahf
sub
lret
cld
fnstenv
mov
mov
jo
mov
aad
sub
inc
lea
inc
rcrb
pop
addr16
ffreep
dec
insl
repz
xor
xor
in
jno
mov
cli
pop
lcall
push
mov
adc
adc
stos
or
pop
nop
cld
or
sub
jge
lret
and
mov
mov
push
add
fs
xlat
mov
stc
cmpsl
cmp
in
aad
mov
rolb
jo
mov
bound
pushl
fisubrs
adc
out
mov
cmp
subb
xorl
in
jmp
sahf
cmp
pop
cmpb
in
mov
xor
pop
mov
aam
dec
mov
loope
push
xor
aaa
fisttps
xchg
pop
pop
adc
sub
mov
leave
mov
test
shrb
sbb
mov
fisubs
imul
arpl
lret
sub
js
inc
cmp
std
jmp
inc
push
xchg
jmp
ds
sbb
jl
fldt
repz
xchg
sbb
ja
mov
hlt
sub
mov
add
xor
jns
xor
int3
repnz
push
shrl
mov
inc
fstl
sbb
xchg
mov
stos
cmc
sub
popa
inc
dec
jae
sbb
out
repnz
sbb
and
ja
push
adc
les
sbb
arpl
int3
sub
mov
pop
lds
dec
xor
xlat
mov
xor
jnp
fninit
adc
xchg
jne
pop
gs
sbbl
jecxz
shrb
mov
mov
nop
cmp
dec
and
test
aad
orl
xchg
adc
fcoml
scas
pop
push
out
aam
cmp
jo
insb
test
mov
cmp
popf
adc
jno
nop
fsubl
in
lahf
jbe
adc
push
rolb
xchg
mov
dec
shrb
jno
jge
sbb
fisttpll
jae
pop
push
test
movsl
sahf
mov
sbb
sub
or
loopne
push
cmpsl
mov
cmp
insl
ret
dec
dec
fstpt
je
adc
int
adcl
data16
mov
and
sub
sbb
and
sahf
jb
inc
cmp
pop
and
jl
sub
imul
jle
xchg
idivb
call
mov
mov
pop
cli
dec
push
sahf
jle
fcomp
test
ja
xchg
dec
bound
cmp
push
jne
and
jmp
in
pop
mov
fnstenv
leave
out
jno
xor
xorb
int3
jno
mov
push
aam
test
fs
sahf
sub
mov
sub
push
lret
mov
xchg
jl
add
mov
xchg
mov
sub
push
and
test
cs
dec
mov
div
push
pop
cli
aam
insb
jmp
jle
stos
jne
xor
mov
pushf
jecxz
and
in
repnz
mov
push
dec
nop
pop
cs
dec
pop
push
adc
adc
sub
push
mov
repnz
pop
push
mov
int3
adc
ja
mov
fimull
cmc
fstl
pusha
aaa
stc
enter
dec
test
inc
outsl
lahf
jnp
pop
mov
jle
inc
addr16
stos
divl
pop
stos
out
adc
and
js
mov
das
cltd
es
mov
sbb
loopne
jne
cmpl
rcl
or
bound
lcall
cmc
add
enter
loop
sbb
mov
pop
cmpsb
cli
hlt
arpl
xchg
clc
xlat
std
movsl
ret
xor
sbb
shll
sub
jmp
pop
and
ror
inc
dec
cmp
lret
clc
aaa
ds
wrmsr
es
fwait
xchg
cs
mov
dec
arpl
orl
test
jg
mov
mov
les
or
dec
xor
pop
in
and
pop
mov
cmp
mov
jmp
pshufw
sahf
or
xchg
or
int
push
and
mov
dec
repz
pop
xchg
push
push
stos
push
int
ljmp
jg
or
xchg
and
mov
dec
std
adc
mov
out
adc
jmp
lods
sub
mov
imul
insl
jmp
test
insb
cli
shlb
cld
xchg
and
outsb
fs
stos
and
sbb
ss
outsl
jo
dec
cld
lahf
fs
test
push
dec
xchg
scas
jmp
push
mov
and
shlb
add
inc
cwtl
cli
push
insb
pushf
jo
push
ret
iret
out
aad
ds
jmp
sbb
adc
filds
test
cltd
test
sbb
bnd
rorb
repz
and
push
pop
sbb
inc
ret
add
outsl
ficompl
sub
sahf
imul
jae
xchg
pop
dec
fs
lea
out
imulb
jae
jp
sbb
dec
mov
cs
lahf
loop
mov
and
hlt
cwtl
sbb
sub
xor
pop
and
cmp
xchg
sbb
fimull
repnz
int
lods
jmp
dec
jnp
inc
mov
decb
push
stc
repz
lods
pop
mov
nop
roll
push
scas
ret
sahf
inc
movsl
jns
roll
cmp
xor
push
jne
mov
clc
or
lret
je
sub
xchg
mov
movsl
stos
adc
xor
jecxz
movsb
das
or
loop
and
mov
push
jle
add
nop
sub
jns
sbb
in
fbld
repnz
mov
dec
popa
leave
in
scas
xchg
sub
outsb
dec
adc
nop
out
scas
scas
adc
es
sub
inc
sub
lods
iret
inc
iret
and
aad
sti
mov
sub
push
arpl
xorl
push
push
xchg
iret
adc
xor
push
inc
mov
mov
mov
scas
aas
cmp
push
push
inc
das
adcb
dec
ja
mov
int3
mov
pusha
aad
xor
movsb
mov
jmp
aas
pop
testl
cmp
into
inc
stc
adc
inc
out
and
pop
fstl
insl
fwait
ljmp
sar
data16
mov
sbb
jle
in
sub
fadd
mov
sbb
mov
icebp
pop
clc
xor
popa
mov
dec
cmp
stc
fcomps
adc
xchg
cs
mov
jle
jge
mov
fisttpll
loopne
stos
fidivs
cmp
jp
movsb
sti
popa
cmpsb
sub
jle
sbb
sbb
inc
hlt
sub
cmc
roll
sbb
div
cmp
leave
lret
jg
ror
inc
and
es
and
daa
mov
test
mov
dec
in
ret
push
cmc
je
jle
out
loop
xchg
pop
cmpsb
push
push
ret
int
aaa
adc
repz
sub
lea
add
lret
mov
rorl
fistl
pop
jb
ret
xchg
mov
add
xor
int3
xor
inc
add
pop
cltd
sbb
adc
leave
outsb
xor
pop
inc
fnstcw
fistps
cltd
jp
popf
popa
cwtl
repnz
iret
cmp
popa
mov
test
sub
jnp
dec
test
mov
into
dec
push
mov
dec
ret
sub
lods
pop
push
shrl
and
jbe
inc
mov
ret
int
xor
imul
xchg
loopne
jno
fisttps
jae
lret
ja
mov
pop
jne
inc
ja,pt
pop
enter
repnz
subl
add
ja
lods
mov
lea
in
outsl
pop
fadds
aad
cwtl
xchg
out
sti
pop
in
data16
or
pop
cmp
or
shrb
movsl
fwait
outsb
mov
mov
cmp
sti
push
adc
es
daa
inc
das
dec
xchg
adc
lcall
movsl
inc
dec
fwait
push
push
mov
add
and
add
pop
cmp
inc
andb
sbb
bound
add
lcall
shll
in
insb
cmp
add
add
xor
mov
or
stos
popf
jg
mov
xchg
cmpl
rclb
gs
imul
adc
out
fwait
out
movsb
pop
inc
mov
and
cli
fcoml
mov
dec
pop
inc
pop
inc
xorb
ss
sbb
out
jae
inc
or
cwtl
push
lods
push
dec
jae
pop
lods
push
lcall
xor
sahf
inc
hlt
gs
cmpsl
mov
lahf
out
mov
add
repz
int
hlt
and
mov
outsb
movsl
jle
test
xor
inc
aaa
sbb
test
mov
fdivp
sbb
jbe
xor
and
orl
adc
push
sub
xor
mov
pop
iret
cmpsl
sahf
pop
in
or
xchg
push
jno
mov
inc
mov
cmp
scas
pop
add
mov
shrb
rcll
sbb
sbb
push
jb
dec
add
and
jle
fidivrs
ljmp
shll
aad
fistpl
inc
js
mov
sbb
rolb
mov
lods
mov
popf
push
mov
ljmp
into
scas
jp
adc
pop
and
jl
sti
pushf
mov
lret
ja
movsl
mov
mov
leave
incl
stos
sub
repz
mov
fildl
movsl
out
rolb
or
rcll
sub
outsb
sti
sbbl
dec
inc
xchg
cli
inc
test
sbb
cwtl
push
cmp
decb
mov
lret
cmp
and
jecxz
xor
ret
jns
std
scas
xchg
pop
or
sbb
jae
fistpll
xlat
mov
lret
in
add
xor
nop
jle
popa
mov
push
jno
xlat
mov
or
fnstcw
movsb
jmp
xor
mov
popf
mov
xchg
xor
fsubrl
fyl2xp1
xchg
cmpsl
test
cmp
adc
push
pop
in
inc
add
mov
dec
insb
xchg
outsb
cwtl
xor
lret
loopne
sbb
jge
leave
jecxz
lahf
mov
add
cmp
fucomp
inc
cmp
mov
cmp
iret
outsb
mov
jae
add
sti
xchg
push
imul
cmpsl
inc
xor
xor
jp
sbb
push
enter
je,pn
rolb
mov
cltd
push
or
sub
pushf
cmp
arpl
mov
in
dec
lds
mov
xchg
jmp
js
ret
das
mov
fisubrl
out
push
mov
ja
pop
popa
inc
iret
lods
push
pop
repnz
xchg
pushf
loope
in
sbb
jge
les
add
jns
cli
fisttpl
fcmovbe
xor
add
lret
xor
push
test
sbb
arpl
mov
jo
adc
cld
aam
and
mov
mov
mov
aam
dec
aaa
mov
subb
aad
xchg
push
adc
or
sahf
popa
inc
popf
sub
pusha
jp
ljmp
mov
shll
dec
jg
push
mov
pop
adc
jp
bound
sahf
push
mov
cltd
cmp
cltd
mov
call
fildll
push
fs
push
leave
int3
adc
push
sbb
pop
push
mov
int3
aam
xor
in
shlb
std
test
xchg
outsl
inc
lahf
outsl
jmp
rclb
cwtl
cmp
ja
cld
cmpsl
jecxz
xchg
nop
mov
fadd
scas
loop
inc
sahf
mov
nop
fs
and
movl
xchg
out
xchg
jle
fst
movsl
mov
push
mov
test
inc
xor
cld
scas
sbb
xchg
repnz
cmpsb
mov
sub
rcrb
setle
pusha
daa
push
outsb
add
mov
lret
repz
adc
loope
adc
fsubrs
lret
lods
daa
dec
inc
mov
leave
xchg
movb
fcmovbe
test
in
rcl
lahf
sbb
icebp
or
push
lods
js
pop
jp
push
fbstp
pop
sti
xchg
sahf
sti
in
cmp
inc
push
sbb
and
cltd
lcall
mov
les
scas
icebp
loopne
ret
pop
mov
xchg
fwait
inc
mov
scas
add
push
cli
xchg
out
scas
xchg
popf
pop
pop
popf
lcall
sbb
cmp
dec
ljmp
nop
ret
xlat
lahf
arpl
pusha
cmp
gs
xor
pop
sub
dec
pusha
sbb
sahf
xchg
add
sbb
and
in
mov
pushf
cmp
repnz
aad
ss
cli
xor
mov
mov
adc
mov
addr16
xchg
jno
stos
push
andl
incl
mov
call
fdivl
push
push
pop
mov
adc
sbb
sbb
mov
sub
out
mov
jle
push
mov
shr
mov
xor
sub
sub
and
and
add
dec
cld
leave
jnp
push
outsb
sbb
in
cs
mov
lods
mov
sub
adc
adc
je,pn
cmc
movsb
hlt
sbb
mov
push
sbb
sbb
in
mov
jns
adc
xchg
jae
jle
cltd
je
insl
pop
jnp
cmp
cmp
in
jp
add
sahf
push
dec
mov
mov
xchg
inc
dec
test
nop
sub
push
jo
mov
ret
jp
mov
aad
jg
test
mov
or
dec
dec
or
pop
xchg
movsb
ret
test
or
or
scas
xchg
xchg
hlt
mov
mov
inc
repz
pause
sub
clc
mov
iret
cmp
push
mov
leave
incl
movsb
pop
xor
mov
cltd
ljmp
das
or
adc
icebp
enter
xchg
mov
inc
stc
or
pusha
mov
mov
jle
and
and
dec
sbb
adc
mov
into
cmp
into
push
xor
jge
lea
enter
inc
inc
mov
add
and
stc
push
and
xor
dec
cltd
mov
pop
andnps
jmp
fst
xchg
mov
dec
xchg
inc
and
adc
mov
out
sbb
test
pop
dec
mov
or
jne
dec
adc
jnp
push
cld
xorl
jns
ror
stc
ss
ds
aad
clc
mov
loope
mov
push
or
mov
nop
lret
movsl
or
xchg
hlt
push
orb
xchg
pushl
scas
pop
mov
xor
ret
xchg
mov
dec
push
call
lea
jno
inc
not
mov
jmp
lock
mov
bound
das
jl
dec
jne
das
mov
and
mov
mov
test
cmp
das
addl
jmp
pop
inc
pop
lahf
pusha
mov
push
mov
es
fcomip
mov
leave
mov
adc
mov
into
mov
dec
imul
je
pop
repnz
pop
int3
loope
mov
pop
leave
mov
leave
push
push
movb
addb
mov
cmc
mov
add
or
cmp
loope
or
push
or
dec
jmp
test
std
in
repnz
popf
inc
dec
mov
push
stos
mov
loope
gs
cli
popa
dec
cmp
push
dec
icebp
push
jb
and
movsl
out
add
cmp
adc
in
into
test
stos
ret
aas
or
fmul
sub
cmp
aad
adc
add
pushf
push
pop
imul
std
xchg
lds
and
and
jecxz
push
rcrl
loop
sbb
leave
sub
mov
orl
icebp
iret
add
push
addr16
loopne
ss
das
mov
inc
mov
inc
sub
les
adc
addl
int3
sub
add
inc
shrl
scas
ja
popa
loope
inc
jo
push
icebp
fstpt
xchg
sbb
push
and
cmp
xor
je
jle
xlat
pop
cmp
add
in
jle
test
lahf
daa
retw
mov
cmc
mov
jnp
enter
ficoml
jg
mov
ficompl
cmp
dec
mov
ja
push
aam
sbbl
loop
jno
pop
mov
cmpsb
inc
lret
bound
and
adc
mov
insb
cmp
lret
imul
scas
pop
dec
sbb
gs
mov
lahf
pushf
mov
xchg
ret
jmp
or
pop
testl
push
mov
and
lcall
push
mov
imul
aaa
pushl
mov
ja,pn
sti
adc
stc
jo
in
hlt
outsb
fcmovne
inc
imul
jecxz
test
test
mov
xor
std
insl
dec
xchg
in
and
mov
int3
addl
cmpl
or
jge
stos
add
sbb
adc
mov
popa
jo
int3
daa
jmp
fadds
push
lock
cmp
int3
push
inc
xchg
daa
ficoms
into
cmc
out
inc
test
repz
sbbb
ffreep
mov
dec
jae
test
mov
cmp
fistps
dec
inc
pushf
aas
add
enter
push
nop
push
push
out
xchg
fldenv
fisttpll
add
dec
push
addr16
nop
andnps
xor
xchg
mov
es
mull
insl
test
add
ljmp
push
add
xchg
sbb
cmp
lods
lock
ds
and
xor
jp
es
xchg
sbb
imul
adc
dec
subw
repz
notl
xor
sub
cmp
push
jmp
mov
push
mov
sub
pusha
outsb
xor
ret
dec
and
push
sbb
mov
cmp
outsl
sub
sub
das
loop
movsb
dec
jmp
add
aad
push
pushf
movsb
jg
mov
push
pop
icebp
hlt
xor
sub
ljmp
sbb
adc
add
lret
leave
shll
fidivs
dec
or
push
lock
mov
push
or
loop
mov
jle
rclb
pop
push
jne
add
sbb
in
and
xor
mov
cltd
lret
fidivs
pop
loope
add
scas
mov
fiadds
pop
push
in
mov
add
mov
jle
or
sub
add
imull
xlat
clc
jecxz
jp
pusha
jno
cs
mov
call
test
push
pushf
cmp
subb
pushf
inc
jle
jmp
adc
lahf
sbb
push
push
inc
stc
aad
out
sub
mov
dec
mulb
mov
cld
out
scas
lahf
push
mov
dec
jnp
dec
dec
mov
sbb
fstl
inc
fiadds
rclb
mov
hlt
cmc
ret
decb
mov
push
rorl
ss
mov
or
in
mov
inc
lods
std
flds
outsl
lds
push
addr16
dec
icebp
cmp
push
in
adc
jno
add
push
int3
cltd
inc
insl
sbb
xchg
sbb
cmp
jle
les
les
fdivrl
xor
ret
lret
sahf
push
insl
lcall
mov
test
fwait
sub
xlat
push
mov
cmc
pop
sti
out
andb
iret
or
stc
call
dec
pop
nop
jp
nop
gs
repnz
or
sbb
mov
addl
pop
mov
into
mov
mov
out
lea
cmp
lea
xorl
addr16
mov
pusha
stos
mov
sbb
out
mov
pop
in
mov
fdivrs
hlt
ror
pushf
dec
sub
cli
sub
xor
pusha
mov
pop
pop
popf
out
aam
mov
mov
cli
mov
data16
push
xchg
dec
das
mov
jp
sub
test
dec
sbb
cmp
jo
jno
push
bound
out
inc
xchg
jns
imul
sbb
mov
pop
add
pop
je
insb
fmull
and
mov
icebp
shrl
fwait
jmp
jl
add
aad
cmpl
call
test
lret
rorl
ret
add
push
je
jne
push
ja
insl
xchg
or
jecxz
das
cmp
stc
mov
mov
inc
jns
loope
push
icebp
clc
mov
mov
push
scas
stos
iret
mov
sub
add
adc
mov
inc
cmp
sbb
cmpsl
nop
mov
stos
in
jns
sub
js
notl
add
mov
mov
repnz
popa
cli
inc
and
or
out
jmp
in
lds
subb
sahf
inc
iret
xor
bound
push
inc
jae
cld
xchg
insb
add
xchg
mov
pop
pop
pop
pop
jne
movsb
mov
mov
adc
jl
mov
sbb
out
sub
pop
xor
arpl
jbe
iret
std
movsb
aam
pop
pop
xchg
mov
sub
fistl
pop
mov
inc
ja
sbb
scas
repnz
xchg
xor
dec
loope
in
test
fnsave
or
cs
jl
mov
or
aad
ret
fisubrs
stos
pusha
mov
inc
cltd
mov
out
js
stos
and
or
lds
jne
inc
push
int3
js
repz
sbb
jns
adc
sub
mov
adcb
sti
mov
ret
mov
dec
enter
mov
inc
jmp
or
loopne
jecxz
push
jp
jl
sbb
repnz
cmp
dec
in
loop
stos
cs
push
xchg
mov
mov
or
push
sub
ret
mov
and
mov
divl
into
and
call
lcall
out
cmp
push
adc
mov
int
pusha
mov
sub
jp
std
imul
cmpsb
cmp
and
cmp
test
mov
xchg
imul
fcoml
int3
inc
ret
mov
mov
fnstcw
data16
or
ficompl
test
mov
enter
sbb
insl
in
fldl2t
add
sub
lds
mov
in
idiv
pushf
sbb
adcl
cmp
sbb
or
mov
add
add
sub
ret
movsb
sub
jge
int
adc
popa
cmc
iret
je
cmp
repz
mov
movsl
mov
jp
mov
xchg
and
push
loopne
lcall
xchg
adc
out
push
inc
mov
inc
mov
call
testb
in
scas
or
adc
jmp
int
lods
scas
daa
nop
clc
mov
sbb
sub
lods
pop
xchg
mov
emms
fs
imulb
es
push
and
cmp
rcl
sbb
xor
fistpll
jp
popl
stc
mov
sub
or
dec
ret
sub
int
add
into
mov
int
sti
xchg
jnp
or
adcl
sub
inc
sub
sub
cltd
cmp
mulb
leave
and
mov
fwait
jb
rolb
shlb
cwtl
in
ficomps
ljmp
jge
movsb
mov
mov
mov
fdivl
outsl
or
jg
dec
sahf
xor
push
rcrl
ss
int3
xchg
inc
out
mov
xlat
mov
or
enter
inc
imull
test
ffree
adc
pop
imul
push
adc
jmp
aaa
mov
sbb
add
cmp
lahf
shrl
sub
or
jns
and
and
jb
cmp
lahf
gs
cmp
adc
lcall
add
test
push
sbb
sub
jecxz
nop
sbb
sbb
outsb
mov
ret
out
outsl
dec
incb
rcl
adc
mov
pop
lret
ret
mov
faddl
clc
or
xor
add
mov
mov
push
mov
sbb
cmpsl
dec
push
mov
jne
inc
dec
pop
arpl
aam
pop
adc
pop
daa
pop
sar
fistps
dec
fldenv
arpl
jae
mov
mov
fistpll
cmp
or
pop
pop
adc
xor
lods
lret
cli
out
call
jae
push
or
or
xor
mov
lds
ds
cli
adc
inc
dec
or
cmpsl
push
lock
fcoml
into
in
xchg
cli
mov
in
adc
iret
sahf
jmp
sti
movsb
or
sub
movl
jns
fildl
leave
add
es
addr16
imul
dec
push
push
hlt
ficomps
adc
or
mov
sub
mov
sub
push
xchg
xchg
dec
dec
outsb
inc
jge
mov
pop
nop
xchg
add
jb
bound
lret
mov
ds
pushf
push
daa
cmp
dec
orl
popa
jae
out
roll
aas
and
jecxz
lcall
loop
jmp
sahf
movb
je
repnz
retw
adc
adc
sbb
mov
cs
daa
mov
mov
dec
je
cmp
mov
fwait
adc
add
fsts
push
add
xchg
rcrb
jecxz
cmp
xchg
jge
mov
pop
fcoms
or
mov
push
scas
or
hlt
xchg
xchg
xchg
ja
arpl
mov
fisubrl
lods
cmp
mov
jo
in
into
pop
pop
mov
dec
pop
mov
mov
dec
std
aaa
xor
xchg
xor
dec
lock
xchg
sbb
call
int3
mov
cltd
push
int
cmpsl
popf
xchg
fs
daa
fildll
lret
adc
lret
ss
dec
dec
or
mov
sbb
mov
jns
inc
loope
mov
mov
jmp
mov
pop
and
push
sti
push
push
adc
icebp
movsb
dec
jns
movsb
dec
andb
dec
dec
xchg
out
cmp
sub
dec
bswap
mov
push
cli
imulb
sbb
movsb
out
sbb
dec
cmpsb
xor
cmc
inc
cmpsl
lret
xor
mov
pop
int3
cs
mov
cltd
pop
pop
out
cwtl
iret
pop
or
cmp
shrb
push
xor
outsl
ret
xchg
out
jmp
mov
mov
inc
and
mov
sub
das
mov
les
cmp
mov
stos
insl
je
lret
xor
mov
pop
aad
or
cmp
push
xor
cmp
shll
push
mov
sbb
mov
adc
cmpsl
dec
push
mov
repnz
jl
jg
cmc
test
fistps
leave
mov
and
mov
ljmp
sarl
mov
mov
dec
add
les
mov
add
dec
cmp
int3
push
mov
add
cmpsb
cmpsl
mov
xchg
cmp
daa
inc
sub
loop
cld
in
mov
cmp
mov
lds
xor
lret
je
mov
ljmp
dec
lret
xchg
imul
hlt
dec
jne
cmpsb
add
pop
pop
push
push
xchg
ja
mov
mov
aad
pop
push
inc
and
cmp
fildll
repnz
insl
imulb
lods
mov
into
pop
push
mov
adcb
das
inc
sbb
mov
fsts
inc
jle
xor
mov
pop
adc
rorb
subb
pop
lret
inc
out
and
add
outsl
sbb
mov
inc
nop
push
xchg
dec
cli
xchg
mov
cmpsl
and
loopne
leave
and
pop
cmc
xor
inc
gs
xchg
sqrtps
add
xor
sub
flds
scas
jp
or
icebp
mov
std
hlt
shl
iret
repnz
sarl
and
sub
lods
mov
outsb
shl
xchg
mov
and
sbb
or
or
divl
mov
inc
jg
xor
ja
jns
cmp
xor
outsb
fcomps
dec
aas
or
cmc
cmp
popf
repnz
aaa
popl
aam
test
daa
jl
jle
xchg
cmp
gs
into
movsl
xlat
xchg
inc
mov
cwtl
cmp
push
push
mov
test
jp
and
jge
icebp
sub
push
mov
mov
loopne
incl
pop
sbb
dec
insl
xor
mov
lahf
rcr
repz
xlat
adc
sahf
stc
jle
cmp
cmp
jge
lock
fadds
jne
dec
inc
aaa
sub
mov
xchg
dec
dec
jo
cltd
cmp
sbb
js
cmp
mov
xchg
and
and
dec
sbb
inc
adc
mov
lods
push
data16
jnp
pop
cmp
xchg
push
adc
mov
fucom
inc
cwtl
dec
or
mov
cmp
cmp
cmp
subl
xchg
imul
into
push
push
outsb
and
cmp
iret
mov
out
mov
adc
inc
mov
aam
dec
cmp
std
jl
dec
int
addl
mov
xchg
jp
sub
cmp
jge
cmp
adc
std
jns
inc
lds
mov
sub
shll
xor
int3
movl
mov
cmp
cmp
dec
nop
push
ret
loop
push
aas
out
jp
xor
sbb
and
lods
inc
scas
or
fwait
lcall
xlat
sub
jl
adc
push
and
movsb
push
loope
mov
push
cmp
cmp
adc
push
mov
add
mov
enter
dec
cmp
neg
cwtl
and
jo
repnz
arpl
mov
adc
pop
dec
mov
call
jp
jae
dec
in
and
mul
pusha
jo
dec
and
lods
xor
or
sub
nop
and
mov
fdivs
add
leave
fcomi
in
sbb
push
loopne
add
cmpsb
int3
out
jbe
adc
mov
cmp
sar
pushf
xor
mov
xor
rep
bound
cmp
es
mov
pop
aam
and
mov
sbb
dec
xchg
inc
loope
mov
jecxz
enter
lods
adc
jg
xchg
in
add
jb
push
or
adc
psubq
adc
adc
in
cs
shlb
inc
xor
and
cmp
fadds
xor
jns
lods
in
sub
xchg
insl
and
add
outsb
and
sbb
fsubrl
xor
lods
inc
mov
jbe
dec
pop
pusha
xor
lahf
shl
xor
test
outsl
sub
cltd
xchg
or
movsl
cmp
push
scas
in
aaa
loope
jbe
pop
in
cmp
mov
pushf
clc
test
out
xchg
data16
imul
inc
iret
call
test
mov
jp
inc
xchg
mov
out
lcall
mov
repnz
pop
jmp
mov
cltd
icebp
sahf
out
and
xchg
sbb
adc
cmp
pop
dec
dec
or
cli
out
jnp
int3
xor
into
pop
jge
cmpb
shrl
inc
neg
dec
mov
inc
std
pop
sbb
aam
minps
mov
mov
mov
pop
movsl
pop
or
xor
inc
cmpb
je
sarl
fisttpll
ja,pn
pop
and
gs
fnstcw
push
hlt
and
das
jo
fists
imull
cmpsl
push
jno
jnp
mull
hlt
inc
lcall
push
jo
je
xor
sub
push
jae
aaa
pop
testb
ret
in
sbb
sbb
cmp
inc
inc
sub
lcall
into
out
mov
xchg
aad
repz
cmpsb
sub
sbb
stos
stc
mov
pop
pop
fcmovb
jns
and
adcl
insl
fcomi
test
push
push
mov
sbb
lods
aad
or
xchg
mov
loopne
mov
lea
arpl
sbb
outsb
xor
ret
ljmp
clc
mov
xchg
repnz
inc
inc
adc
icebp
push
setne
and
mov
shrw
mov
test
rcl
pand
fwait
xchg
test
jnp
sub
outsb
jb
sbb
fldcw
pop
lods
cmpsb
add
out
sti
sub
jae
das
iret
inc
mov
xor
add
or
push
iret
fdivl
lods
rorl
dec
xchg
push
or
dec
lods
cmp
mov
cld
insb
mov
in
xchg
xchg
add
xchg
mov
lcall
test
jnp
cmc
call
ds
cltd
popa
push
jo
inc
iret
icebp
pop
and
popa
nop
push
sub
and
jno
scas
insl
mov
scas
inc
inc
das
or
test
xchg
xchg
mov
ds
divl
sub
mulb
ret
fbld
xor
mov
add
mov
ljmp
xchg
push
dec
out
jle
xchg
pushf
dec
cmpsl
in
sbb
pop
lret
enter
add
mov
lret
mov
lret
cmp
js
pop
sbb
or
test
out
sbb
das
into
xor
ja
mov
std
jmp
mov
js
xchg
gs
inc
roll
scas
fldl
or
xchg
push
cmp
xor
sbb
mov
cmova
xlat
out
push
fisubl
fdivl
push
in
insl
sarl
xlat
add
ja
mov
cmp
lods
mov
in
sbb
sahf
imul
jb
lods
and
pop
movsb
inc
ret
scas
je
js
subb
aad
shll
inc
cmp
push
outsb
and
test
cltd
ficomps
daa
xlat
repnz
add
or
test
jl
inc
inc
sbb
inc
xor
xchg
je
push
aam
shlb
inc
adc
add
sbb
jl
xor
push
dec
sbb
inc
dec
dec
push
or
mov
sub
nop
and
push
decl
dec
pop
stos
out
fistpl
pop
push
outsl
in
ljmp
popa
test
pop
push
or
inc
xor
rclb
jmp
mov
pop
pop
movups
inc
cmp
sbb
movb
subb
push
or
jnp
pop
and
gs
popl
mov
mov
adc
mov
test
adc
cwtl
inc
dec
cltd
ljmp
fs
sub
push
ja
decb
sahf
cmp
xchg
push
test
pusha
lahf
adc
cmp
xchg
sub
dec
ljmp
cmp
mov
mov
xor
call
lods
adc
xor
jne
mov
js
daa
js
jae
push
inc
fwait
ret
push
cmp
lds
jbe
loope
xor
stos
mov
ror
ds
clc
lahf
cmp
dec
int3
dec
mov
lds
bnd
xchg
into
stos
popf
in
sbb
ss
icebp
xchg
adc
mov
imul
stos
pop
gs
loope
fiadds
rcrb
push
pop
shlb
addr16
int
insl
sbb
ret
fs
scas
mov
dec
mov
mov
int
lret
aam
aaa
mov
dec
ljmp
jne
fs
or
sbb
lods
pshufw
fisubrs
and
icebp
jle
addr16
test
lods
and
pop
xchg
hlt
jne
jle
mov
arpl
mov
outsb
sub
jmp
xor
mov
xor
xor
sbb
fdivs
sbb
flds
mov
movsl
pushl
sbbl
adc
aam
pop
aaa
testb
push
pop
dec
stos
or
into
fwait
mov
xchg
adc
push
addr16
mov
repz
cmpsb
adc
cltd
paddusw
mov
jmp
xlat
sbb
fcoms
sub
leave
pop
push
jae
lret
mov
or
fwait
pop
inc
jle
xchg
stc
push
and
inc
sbb
loop
xchg
stc
push
scas
or
xor
pop
or
test
cmc
sbbl
xor
dec
les
cltd
mov
adc
les
inc
xor
mov
push
dec
push
movsl
pop
sbb
int3
push
sbb
ret
out
popf
add
cs
sbb
enter
nop
lcall
dec
xchg
xchg
lret
push
or
xchg
lcall
stos
nop
inc
notl
cmp
cmp
addr16
cs
xor
sub
dec
add
xchg
sahf
orl
lods
mov
pop
and
xchg
or
outsb
ds
adc
mov
adc
adc
jp
cli
xor
pop
push
dec
dec
mov
fmull
cmpsb
lret
dec
out
rcl
mov
stos
mov
pop
pop
inc
push
or
aas
movsb
ret
test
add
jl
mov
mov
xchg
adc
mov
pushf
rolb
dec
fs
and
movsl
xor
and
and
or
sbb
xor
sub
xchg
ret
mov
lea
sbb
push
sarb
xor
rorl
lahf
push
aas
cmp
loop
fistpl
cmpsb
imul
push
mov
in
out
arpl
test
test
jg
lret
adc
fbld
pop
xor
mul
push
cmpsb
jmp
dec
lea
xchg
xchg
mov
pop
lcall
scas
adc
repz
std
sbb
fadds
fidivs
je
jg
shrb
sub
loope
in
bound
lret
jg
cmp
enter
js
stc
es
fcoms
cltd
xchg
or
stos
stc
xor
pushf
add
sbb
pushf
aam
fadds
test
test
jge
rol
not
out
adc
sahf
out
mov
fstpl
repz
dec
and
mov
or
jle
and
out
in
sbb
nop
mov
pop
paddd
pop
iret
jmp
cmp
sub
pop
cs
out
jmp
push
mull
mov
jb
lahf
push
in
and
sub
movsl
movsb
fsubrp
mov
sbb
cmp
aas
rcr
mov
scas
das
movsb
out
pop
sub
lcall
int3
dec
fbstp
xchg
sti
mov
in
lret
cmp
push
roll
ja
mov
mov
cmpl
sbb
scas
inc
iret
pop
push
out
push
mov
cmc
enter
mov
fdiv
andb
cli
inc
mov
repnz
jbe
and
lock
mov
xor
out
pop
push
jnp
pop
jae
aaa
lds
shl
sub
mov
mov
loope
loope
inc
ljmp
push
mov
outsb
pop
jo
or
outsl
incb
pop
xchg
xchg
dec
sub
pop
clc
in
mov
test
adc
aaa
iret
or
cltd
popf
out
popa
sbb
imul
mov
jae
lret
mov
push
xor
sub
xor
or
negl
fistl
arpl
imul
int
pop
lret
or
mov
insl
lret
rorl
mov
jbe
lds
lea
push
pusha
adc
in
sub
sahf
inc
in
cwtl
inc
setge
dec
push
cmp
mov
and
push
mov
fnstsw
jns
popa
pusha
jecxz
xchg
cli
push
aad
cli
cli
pop
rcr
imulb
cmp
pop
leave
mov
outsl
pop
sub
push
mov
ljmp
push
push
xor
push
mov
mov
push
sub
jnp
lret
jl
pop
sbb
fwait
fwait
icebp
lret
ljmp
test
push
imul
push
jbe
sti
cmpl
xor
jg
xor
imul
lock
push
loopne
aas
xor
enter
loope
xchg
test
lds
mov
cmp
test
mov
ja
sbb
jbe
cmp
rdmsr
cmp
mov
js
sbb
fcmovnb
xor
leave
scas
in
das
jnp
push
fcmovnbe
leave
fcoml
dec
mov
loopne
ds
fcmovbe
inc
in
mov
shl
and
into
and
push
adc
and
adc
jo
int
sub
jno
push
mov
lahf
out
xor
cltd
addl
das
cmp
imul
test
jle
cmp
in
and
add
scas
movsl
ljmp
rcr
cld
sbb
push
outsb
adc
scas
stc
ror
xor
jo
push
mov
push
xchg
mov
popf
jl
ror
jl
loopne
mov
mov
cwtl
sub
nop
push
push
call
ds
icebp
cltd
ja,pn
imul
pop
mov
or
or
mov
cwtl
scas
inc
out
jp
push
cwtl
or
incl
ds
push
mov
cmpsb
jae
and
rcr
sbb
enter
cltd
movsl
cmp
sub
pusha
push
dec
dec
jns
xor
sbb
fidivs
mov
cltd
and
sbb
xchg
iret
xchg
xchg
xor
cmp
aad
xor
sarl
cld
adc
lock
pop
inc
aad
subb
ljmp
test
ss
js
gs
fwait
jg
xchg
sbbb
data16
cmpsl
roll
add
out
lods
push
outsb
mov
test
xchg
mov
mov
decb
jg
push
or
cmp
xchg
mov
sub
mov
sbb
lret
stos
lods
sub
pop
jae
aad
and
outsb
mov
lock
ljmp
test
test
inc
sbb
sbb
mov
stos
je
or
mov
idivl
mov
ds
sahf
inc
xorl
sbb
ljmp
lcall
mov
clc
popf
imul
loopne
cs
adc
test
cltd
aas
call
add
push
subl
jbe
lods
mov
adc
insl
pop
jmp
pop
mov
movsl
adc
lods
cmpsb
adc
nop
push
push
mov
jnp
xor
adc
lahf
jge
sbb
cmp
mov
lods
jno
in
push
mov
fisubl
adc
jge
dec
push
adc
add
insl
adc
icebp
movsl
inc
sbb
aam
push
inc
xchg
addr16
mov
ficoml
inc
add
stc
call
test
cmp
hlt
mov
aas
mov
mov
ds
js
pop
insl
and
mov
pop
dec
aas
in
dec
lods
fnstenv
ds
dec
pop
call
lods
es
mov
adc
push
jmp
adc
push
pop
mov
pop
in
adc
sub
sbb
sti
in
xchg
lods
jae
movsb
inc
faddl
repz
cmp
jmp
iret
sub
daa
jnp
loopne
int3
adc
scas
jns
fistpll
fs
movsb
enter
pop
xor
test
pop
mov
mov
push
gs
xchg
mov
xchg
push
call
scas
iret
les
and
and
cmpsl
int3
test
int
sub
aad
inc
imul
cltd
push
cmp
pushf
ljmp
cmp
pop
adc
jmp
insb
imul
dec
add
sti
push
inc
fcmovu
dec
insl
and
push
dec
add
xchg
imul
arpl
inc
mov
and
dec
lea
aas
and
and
mov
xchg
push
enter
ret
dec
aas
sbb
js
fwait
lea
movsb
clc
into
push
ds
jg
sahf
push
pop
test
shrl
jp
jle
xchg
dec
sti
xchg
pusha
lcall
sub
push
jecxz
pusha
lods
xor
gs
cmp
loopne
movsb
push
inc
pop
fdivl
cmpsl
div
ljmp
jg
je
scas
inc
adc
and
les
xchg
adc
sub
or
xchg
mov
pop
shrl
mov
test
cli
add
mov
aaa
jnp
sbb
add
pop
int
out
mov
push
pop
and
mov
jle
sub
xor
in
jae
ficompl
pop
mov
or
addb
pop
push
insb
cmc
repnz
ja
movsb
repnz
fucomp
divb
sub
or
xor
mov
rcrb
sub
gs
orl
fnstsw
popa
mov
xor
adc
sub
rcll
outsl
xchg
mov
inc
ficompl
inc
loop
fisttpll
add
xor
mov
adc
mov
inc
sbb
mov
sub
adcb
ret
jo
xchg
jo
mov
xor
mov
ljmp
shrb
pop
in
cmp
pop
pop
or
test
js
lods
adc
lods
mov
maskmovq
negl
xor
out
jns
test
dec
jp
xor
iret
pop
pop
push
and
adc
mov
push
push
stc
mov
test
mov
pop
sarb
cld
sbb
add
cwtl
mov
test
and
rcrb
or
xchg
xor
aam
mov
add
cmp
rcll
xor
sub
ja
js
jg
pusha
push
and
mov
xor
adc
sub
pop
add
pop
mov
inc
mov
mov
les
pusha
call
mov
push
in
cmpsl
pop
xchg
jb
add
adc
xlat
adc
cmp
cltd
ss
push
pop
ss
xor
in
rclb
fs
mov
jo
cmpsl
xor
repz
lock
push
pop
adc
fs
cld
fwait
adc
cmp
test
js
ficomps
movsb
cli
les
xchg
add
mov
cld
fidivs
mov
push
addr16
and
mul
sub
insb
xor
mov
add
adc
sub
dec
sbb
cmp
mov
movsl
lret
pop
push
loope
jl
sbbl
inc
xor
add
pop
xchg
or
mov
orb
ret
mov
adc
imul
mov
xor
outsl
sub
decb
or
inc
mov
test
cli
pop
dec
jb
movsb
js
mov
imul
sbb
cmpsl
jae
cltd
push
in
pop
and
inc
imul
inc
addr16
push
stos
and
lret
push
dec
xchg
adc
aad
xchg
nop
sti
mov
ja
mov
mov
insl
scas
shrb
or
js
mov
cli
cltd
in
fs
scas
mov
sbb
adc
mov
nop
jecxz
xlat
push
xchg
mov
cmpsl
xchg
jae
cmp
addb
cli
sub
addr16
mov
cmp
fisubrl
lods
loope
lea
test
mov
cld
xchg
dec
test
cltd
popf
rorl
adc
xlat
xchg
add
cmp
xor
mov
xor
lods
inc
idivl
aaa
mov
xchg
dec
mov
push
jle
lods
sub
sbb
adc
scas
xchg
push
in
mov
in
xchg
cli
scas
add
add
sahf
xor
pop
mov
xor
adc
jb
add
and
mov
cwtl
jecxz
int
xorl
idivb
lret
pushl
xchg
ss
int
and
popf
adc
ds
mov
jge
shlb
scas
fildll
mov
pushf
jecxz
jne
sbb
or
fistl
int
cmc
hlt
dec
dec
pop
jns
adc
push
cmpsb
popa
arpl
push
inc
mov
dec
std
test
sub
mov
mov
mulb
cmc
jecxz
scas
sarb
add
imul
push
add
adc
mov
scas
in
sub
rcl
push
sbb
test
cmp
mov
and
ja
in
idiv
lret
push
xchg
and
xchg
stc
jns
xchg
mov
je
adc
enter
mov
int3
and
mov
mov
inc
lret
mov
and
xchg
int3
and
or
xchg
jbe
pushf
dec
xchg
xchg
clc
out
mov
std
cltd
inc
or
add
lret
shll
jbe
outsb
xchg
sbb
popf
jne
and
call
mov
mov
xor
and
mov
push
xchg
insl
pop
cmp
mov
mov
jae
sbb
dec
cwtl
fcompl
or
ficompl
std
mov
mov
dec
lahf
or
lds
mov
aam
outsb
jmp
repnz
dec
jecxz
xlat
jecxz
push
and
fistps
push
rcrb
and
push
mov
add
addr16
cmc
rcll
lods
and
mov
xlat
ret
enter
rep
push
and
adc
scas
lret
mov
dec
pop
or
movsb
inc
mul
sub
out
mov
cmpsl
push
adc
mov
mov
pop
int3
xor
mov
aad
mov
xchg
mov
cltd
popa
fsub
int3
pushf
fdivl
insl
or
roll
cli
push
scas
nop
push
pop
in
pop
repz
shrb
sbb
scas
enter
push
cmp
fidivrs
xchg
cmp
mov
test
inc
sbb
clc
jb
fadds
adc
xchg
pusha
bound
mov
xchg
mov
xchg
sahf
mov
data16
mov
dec
fildll
jg
lods
xchg
leave
loop
jg
lock
cmp
pop
sub
lahf
jg
mov
out
push
pop
cmpsb
aam
jmp
xchg
clc
and
lods
les
addr16
aas
mov
addl
add
pop
jp
gs
mov
outsb
add
jae
cmp
fildll
xor
cld
cmp
arpl
out
sub
stos
dec
mov
psubusb
mov
cwtl
pushf
push
pop
loop
pop
outsb
imul
adc
cld
lahf
mov
adc
cli
mov
ficoml
push
or
xchg
xor
gs
fildll
xchg
clc
push
xchg
push
mov
mov
cmp
xchg
mov
xchg
adc
cmp
insb
jae
mov
jle
hlt
mov
or
mov
movsl
mov
or
roll
mov
xor
push
ret
pushl
incl
test
adc
mov
lods
cltd
hlt
mov
imul
mov
daa
jno
lahf
rcrb
adc
dec
testb
stc
inc
sub
push
popl
iret
prefetch
ljmp
or
cmp
adc
loop
jle
mov
xor
mov
sbb
xor
push
out
sahf
enter
cmp
pop
xchg
les
out
inc
ficompl
cld
sbb
int
xor
jmp
xlat
int
pop
dec
pop
dec
cmp
iret
mov
lcall
movsb
sarl
add
pop
or
jno
jo
incl
aaa
xchg
xchg
aam
cmp
fildl
jmp
mov
leave
aaa
jo
test
inc
lods
push
mov
and
sbb
cli
jp
adc
mov
push
fcomps
ret
shlb
mov
fisubl
mov
mov
stos
bound
mov
fsub
jno
cmp
cmp
jno
pushf
aas
and
int
into
sbb
jmp
cmpl
data16
cwtl
mov
inc
in
ficoms
sbb
mov
rorl
adc
xchg
aas
push
test
and
cmpsb
add
push
sbb
mov
sub
mov
push
lock
xchg
jo
xchg
sbb
test
pop
jp
fcmovnbe
and
aad
hlt
mov
jge
test
or
ficoms
cld
clc
jge
xor
xor
scas
gs
call
push
std
ret
fdivr
imul
push
xchg
adc
stc
clc
icebp
xchg
and
jmp
jae
lret
shll
adc
inc
ret
sbb
repnz
cltd
mov
out
jb
mov
push
mov
out
test
cltd
mov
nop
int3
scas
jmp
sbbb
or
aad
pop
sub
lret
and
push
lods
ret
popa
mov
pop
push
stc
out
das
inc
pop
jg
std
lods
shlb
push
lahf
add
sub
cmp
or
stos
pop
jns
xchg
loopne
lods
cmpb
inc
mov
mov
div
out
push
negb
in
xchg
aaa
lock
xor
insb
mov
ljmp
or
push
mov
cmc
sbb
dec
sub
and
xchg
push
fdivl
pop
sti
jp
fwait
sub
cmp
popa
push
and
movsl
cmp
dec
jb
stc
and
push
cmpsl
movsl
iret
sub
jno
or
jl
inc
ret
aad
sbb
sub
adc
shr
xchg
sbb
cs
add
shlb
sahf
adc
ja
add
orl
out
cltd
fldcw
jmp
cmpsb
add
sub
and
or
dec
outsb
mov
cmp
mov
jg
push
dec
push
and
lds
daa
mov
dec
or
cmp
jl
es
xchg
flds
dec
sbb
out
aas
addr16
mov
mov
loop
lock
mov
nop
out
xchg
dec
mov
shl
cmp
cmp
pop
bts
or
jb
xchg
ret
sti
sbb
mov
mov
xlat
pop
out
cld
pop
in
mov
aad
loop
fstps
dec
xchg
sub
jns
push
aas
lods
cmp
jo
or
xchg
mov
mov
pushf
mov
adc
inc
cld
xchg
sbb
xlat
movsb
adc
orb
loop
lock
xor
mov
mov
push
adc
push
jno
test
or
lods
mov
js
sarb
lret
icebp
push
addr16
test
mov
mov
pushf
cld
into
or
repz
mov
movsl
pop
or
add
js
cmpsb
cmp
dec
iret
add
fst
dec
or
and
test
jbe
stos
push
mov
loop
inc
idivl
cmp
pop
pop
lods
insb
xor
xor
mov
addr16
outsb
lods
sbb
ja
mov
testl
hlt
cmp
fmul
and
and
lock
jnp
pop
sbbl
push
fildll
push
test
mov
scas
adc
cmp
sbb
cmp
pop
out
scas
dec
jb
jl
xchg
cmp
shrl
mov
or
and
mov
dec
add
jge
movsb
add
in
adc
pop
dec
ficomps
stos
inc
imul
push
cwtl
push
cltd
xchg
std
sahf
cmc
sarb
bound
and
scas
xor
notb
cli
imul
pop
sub
xor
mov
daa
inc
add
mov
test
das
jbe
cltd
cmpsl
fisttps
into
gs
and
les
int3
and
sbb
test
xchg
xor
push
iret
sub
inc
lea
xchg
jo
cmpsb
add
push
gs
icebp
lea
cmpsb
sbb
imul
push
xor
jno
push
xchg
mov
xchg
lret
fimuls
adc
cld
insb
fs
mov
dec
push
inc
mov
jno
xchg
pop
fwait
pop
xchg
pop
test
pop
cmp
mov
pop
jmp
sub
insb
rorl
adc
stos
add
inc
std
mov
in
push
roll
and
rol
into
cs
dec
jg
xor
pop
cmp
xor
push
push
and
jmp
jno
je
inc
or
scas
rcrb
fnstcw
addr16
pusha
outsl
sub
push
lds
cmp
sub
inc
lea
and
mov
xlat
xorl
stos
and
xchg
cmp
cs
xor
std
stc
inc
cmp
cli
add
jecxz
mov
rolb
jae
sbb
mov
ret
shlb
jbe
pop
and
lods
jl
in
stc
jle
popf
pop
insl
mov
insl
push
mov
push
fisubrl
inc
and
and
addr16
push
data16
outsb
lods
int
les
xchg
pusha
daa
sbb
xlat
dec
adcl
jno
cmc
dec
imul
add
mov
sbb
adc
scas
push
mov
fwait
sbb
cs
in
push
jecxz
imul
lcall
and
push
in
push
dec
pop
ret
sbb
je
adc
out
and
pop
sahf
or
leave
test
into
mov
lret
call
sub
cld
mov
add
je
ja
adc
outsb
xor
lds
fsubl
mov
lret
mov
or
lret
cmp
test
add
std
cmp
inc
mov
pop
or
fs
pusha
mov
xor
js
outsb
cmp
mov
inc
or
pop
sub
jae
ja
and
xor
test
push
out
inc
mov
mov
adc
mov
jns
push
out
loop
mov
sbb
loop
pop
mov
cli
jae
clc
push
xchg
push
repnz
adc
pop
mov
xchg
ret
sub
cmp
lds
pop
xchg
push
xor
sub
fldt
push
jmp
xchg
pop
subb
push
cmc
jae
test
call
test
sarl
test
jle
arpl
daa
arpl
loope
mov
dec
cmp
sub
popa
push
icebp
int
fimuls
fistpll
ja
aas
lods
jbe
insb
push
stc
sahf
jl
mov
lods
xchg
lods
aad
mov
mov
cltd
sbb
sarl
cmp
push
lret
pop
leave
aad
sti
or
cmpsb
push
std
jae
push
popa
push
mov
int3
inc
xor
enter
mov
rolb
xchg
sub
mov
adc
add
repz
cmc
and
jmp
xchg
push
imul
das
adc
loopne
mov
jne
sub
in
popa
es
pop
arpl
cmp
pop
or
push
dec
pop
push
sbb
push
lock
sbb
daa
test
dec
xchg
loop
jns,pn
clc
fwait
xchg
popa
mov
lcall
push
inc
or
or
jmp
int3
pop
sub
xchg
test
insb
cmpl
mov
hlt
jne
in
shll
dec
pushf
add
and
cmpb
lret
and
mov
or
inc
sub
sbb
or
mov
jp
imul
int
sbb
aad
call
add
cmc
push
sub
iret
or
pop
ffree
outsb
xchg
mov
adc
mov
hlt
pop
pop
mov
cmp
sti
dec
push
sbb
mov
cmp
ja
icebp
sbb
call
cltd
data16
dec
mov
push
fldt
or
jg
mov
pop
mov
outsb
mov
mov
pop
dec
clc
jbe
js
push
mov
lret
lret
jl
sub
test
pop
ljmp
sbb
mov
xchg
dec
sub
iret
fbld
add
dec
sbb
adc
mov
cmp
ficoml
and
push
cmp
leave
lcall
int
cltd
xchg
cmpsb
sub
xchg
sbb
inc
lahf
push
dec
lea
loopne
in
fwait
mov
sub
test
pusha
cmpsb
or
pop
jmp
pusha
or
cmp
imul
adc
and
ljmp
loope
jne
outsl
rcrb
ljmp
cmc
push
xchg
inc
push
jl
insl
push
ljmp
cmp
dec
pop
shll
dec
push
sbb
push
jno
or
adc
cs
jae
xchg
pminsw
je
xchg
push
dec
fwait
mov
xor
adc
outsb
xlat
and
and
lahf
dec
adc
push
in
or
aas
jg
leave
push
cltd
les
mov
and
xchg
xor
cmpl
cmove
das
hlt
call
mov
fwait
mov
xor
jp
adc
push
mov
or
arpl
push
int3
ss
fildll
jle
testl
inc
push
fwait
jne
dec
xchg
aam
stos
idivl
popf
cmpsl
push
decl
xchg
sbb
mov
aaa
sub
bound
mov
out
bound
inc
add
xchg
mov
pop
ss
cmp
cmp
mov
push
lock
mov
push
mov
jg
or
fcomps
stc
add
and
iret
mov
pop
cmp
push
gs
jne
add
fistpl
jne
sub
pop
add
in
sub
fstl
pop
sub
popa
jecxz
mov
fisttps
xchg
sub
sbb
ds
scas
test
xor
add
test
pusha
iret
dec
xchg
mov
imul
cmc
insb
add
xor
add
add
push
loop
push
mov
mov
push
xor
ds
gs
mov
idivl
cmp
je
cwtl
xchg
lods
fwait
adc
xchg
adc
inc
ss
add
jecxz
cmp
call
adc
pop
mov
cmc
cmpb
loope
pop
outsl
xchg
jbe
adc
fcompl
test
int3
aad
dec
das
adc
fisubrl
sti
pop
int3
dec
pop
icebp
lock
lds
lds
or
sub
pop
in
stos
or
mov
or
pop
insb
xchg
pop
fdiv
sbb
push
aas
shll
xchg
ficoml
ja
jo
push
imul
add
lahf
pop
fwait
xchg
jnp
add
orl
inc
int3
mov
adc
popl
fwait
mov
inc
int3
push
sub
or
stos
pop
jo
loopne
inc
dec
adc
cmp
inc
or
dec
cmp
sub
loop
lret
fidivs
mov
enter
imul
push
pop
jmp
fnstcw
stc
sarl
mov
jecxz
movsl
pushf
stos
js
cmp
insl
xlat
sbb
and
xor
dec
pop
pop
ret
or
jecxz
lahf
lcall
ljmp
fsubrl
in
fucom
popf
test
jle
jl
push
mov
xchg
add
pop
mov
adc
sub
int3
aaa
lret
rcrb
and
pop
or
in
pop
and
or
inc
mov
push
xor
int
pop
push
dec
fisubs
mov
or
fldt
movsb
and
mov
outsl
rolb
cmpsl
push
neg
mov
ficomps
dec
stc
mov
pop
addb
aad
sbb
xor
adc
mov
rclb
xorl
xor
pop
mov
es
ret
sbbl
push
pop
push
shlb
mov
mov
add
jno
adc
lret
lcall
xor
mov
mov
mov
push
adc
sbb
mov
vmovdqu
mov
mov
stc
mov
push
dec
in
mov
and
mov
xor
and
out
mov
add
xor
mov
leave
mov
inc
dec
cs
fs
cmp
push
mov
or
pop
ljmp
in
inc
imulb
or
adc
push
in
out
ja
sbb
dec
inc
shlb
lods
sahf
popf
push
imul
addr16
ss
out
mov
pop
xchg
jecxz
xor
jnp
inc
xchg
enter
rorl
cmp
cmp
cmc
or
outsb
adc
mov
and
push
cmc
xchg
test
arpl
jo
pop
cs
rcrb
insl
or
out
cmp
mov
cmp
fsub
sbb
mov
insl
xorb
xlat
add
add
outsl
loop
mov
ret
iret
and
push
out
cmp
lret
jbe
loop
outsb
cmp
pop
mov
out
xchg
test
xlat
sub
cli
inc
add
lock
outsl
imul
popa
imul
mov
jg
mov
rcrl
inc
or
lods
loop
or
rorb
push
test
push
jecxz
movsl
clc
ret
loope
fwait
dec
mov
movsl
fdivrl
repnz
insl
jl
stos
push
shlb
xlat
push
jp
test
es
ja
aaa
push
in
orb
lahf
je
push
jae
jp
mov
push
mov
mov
imul
shrb
test
iret
cmpb
mov
test
sub
aas
aam
stos
imul
pop
in
fiadds
xor
pop
or
fdivr
bound
jmp
ljmp
inc
rcl
mov
fwait
sbb
and
sub
cli
jo
mov
dec
adc
push
loopne
lret
pusha
inc
jmp
pusha
jg
or
sub
dec
push
pop
adc
aam
mov
push
cmpsb
mov
jbe
ljmp
mov
jmp
imull
inc
jo
jb
std
cmp
into
out
gs
adc
inc
inc
sbb
or
sub
push
out
dec
or
popl
cmp
test
cmpsb
mov
mov
rclb
cmp
cmp
pusha
sahf
sbb
insb
mov
imul
xchg
ret
shlb
or
lea
lock
and
mov
call
pop
jnp
lcall
lea
mov
mov
addr16
fistpl
jecxz
arpl
add
sbb
pop
ja
push
addr16
lret
xchg
and
lea
add
movb
sub
push
dec
or
cmp
dec
in
shrl
sub
je
fisubrl
into
dec
and
push
cmpsb
scas
adcl
or
movsbl
push
das
jno
out
outsl
int
xlat
mov
sbb
xor
ja
icebp
pop
push
push
sahf
fldt
mov
xor
or
add
pop
push
cltd
mov
data16
jne
cmpsl
ret
outsb
test
icebp
mov
sahf
std
fisubl
fcmovb
ja
xchg
bound
rcrb
aaa
xchg
xchg
lea
mov
sarb
leave
into
mov
sbb
ljmp
pop
xchg
mov
lret
call
scas
std
or
or
out
add
aam
aam
pop
fists
push
cmc
into
out
loopne
sbb
fsubrl
cltd
out
xchg
pop
imul
jb
mov
sbb
sub
mov
insb
jne
mov
enter
xchg
shl
hlt
nop
inc
movsb
add
int
add
rcr
mov
shlb
dec
jle
sbb
jl
cli
nopl
sbb
mov
xlat
sbb
imul
mov
dec
je
mov
adc
push
and
sbb
inc
mov
xchg
xor
mov
scas
hlt
inc
out
mov
mov
fisubl
push
mov
mov
mov
sbb
push
jmp
pop
clc
mov
mov
out
mov
dec
ds
adc
pop
xor
or
fs
jge
cmp
cli
out
stos
das
push
and
dec
dec
cwtl
bound
test
ret
pop
inc
fisubrl
mov
xor
pop
addb
in
jecxz
in
mov
push
scas
mov
je
mov
pop
jge
in
jl
lret
lea
push
jns
lods
sub
and
inc
std
inc
and
jle
xchg
sbb
sbb
pop
loopne
inc
inc
jno
int
cwtl
das
addl
adc
cli
add
das
dec
sbb
and
cmp
lahf
int
jl
cmpsl
inc
dec
xchg
jnp
mov
sbb
scas
mov
xchg
xchg
mov
inc
pop
movsl
pop
mov
ret
cmp
sti
push
mov
mov
cmpsb
push
lcall
clc
push
icebp
mov
push
cmp
adcb
scas
fcmovb
les
rcrl
inc
fdivl
mov
or
xor
fs
data16
lahf
and
adc
pop
sbb
popf
ret
nop
in
sub
cmp
repnz
inc
jmp
into
mov
inc
lods
inc
add
addr16
rclb
loope
jg
mov
lock
add
mov
mov
mov
movsl
rcrl
adc
sub
fwait
xor
pop
fcmovne
xchg
cs
lahf
sub
mov
dec
repz
mov
jmp
jns
ljmp
push
pop
cmc
stos
or
cmpsb
rcr
andb
lcall
mov
lea
mov
adc
jbe
popa
push
in
xchg
insb
and
out
iret
divl
sbb
mov
dec
test
and
sbb
or
dec
loop
sbb
or
cmp
test
movsb
xor
cmpsl
pop
ret
mov
cmp
repnz
stc
out
cmp
mov
aam
mov
mov
inc
add
scas
ljmp
push
jnp
mov
ret
cmp
repnz
cmp
jnp
into
out
cmp
imul
jno
sbb
cltd
cmp
pushf
rorb
addr16
jns
mov
lock
jp
scas
insl
test
sbb
cmpsb
neg
cmpsl
xchg
cmpsb
stos
jo
mov
jg
mov
sbb
aas
test
jmp
push
mov
data16
mov
pushf
dec
shll
sub
mov
das
push
xor
stc
insl
xor
es
fst
push
imul
dec
pop
psubsb
sbb
and
jl
sbb
jnp
rsqrtps
jb
dec
shrb
sbb
ret
repnz
mov
push
jg
mov
jle
inc
scas
iret
sub
cmp
mov
sbb
in
jns
std
pop
pop
lods
nop
cmpsb
aam
imul
subl
jbe
cld
out
shl
or
push
pop
sahf
sti
shll
sub
push
cli
cmp
mov
fmuls
jl
mov
push
sub
jb
and
in
les
pushf
mov
push
scas
fs
jae
inc
cld
xchg
and
enter
jg
xchg
jl
or
pop
iret
mov
sbb
adc
movsl
jle
int3
mov
sub
outsb
out
ds
cmp
cmp
pop
xchg
mov
dec
push
ja
mov
js
divl
out
lret
ret
push
add
sbb
push
inc
repnz
dec
data16
dec
movsl
loope
cmp
pop
sti
sbb
inc
pop
mov
int3
fsubs
sti
inc
xchg
sbb
das
pop
cmc
jle
fistpll
outsl
jp
fucomp
insl
cmp
push
sbb
mov
stos
push
les
rcll
stos
xchg
or
mov
inc
cmp
or
loop
inc
push
inc
stos
testl
inc
adc
cmp
jmp
cmpsl
jne
insl
adc
cmpsl
bound
mov
mov
inc
or
xlat
jl
add
push
iret
rcll
and
js
je
mov
lcall
leave
mov
ljmp
ja
popa
and
repz
popa
adc
sarl
daa
negb
fsubs
jmp
add
js
insl
hlt
stc
push
add
cmp
out
xchg
mov
or
xchg
sbb
mov
cmp
inc
mov
xor
mov
jbe
fildl
sub
xor
insl
inc
out
xchg
arpl
movb
xlat
xor
ljmp
xlat
pop
jg
js
and
cmc
add
dec
bound
mov
and
xlat
push
sub
clc
or
stos
lcall
negl
insb
outsl
scas
push
push
loop
iret
sbb
jne
mov
pop
adc
sbb
or
sbb
pop
jp
out
push
xor
jo
jne
xor
call
in
aam
loope
movsb
fcmovbe
add
jnp
add
scas
adc
push
pop
mov
adc
arpl
xchg
mov
sub
scas
rorb
push
jp
xor
push
sbb
cmp
mov
scas
mov
push
cwtl
je
jp
repz
xor
lods
jmp
and
fsubl
add
out
dec
repz
push
lret
or
je
jmp
stos
cmp
push
or
imul
sahf
inc
mov
subl
pop
loop
cmpsb
jle
mov
xchg
ldmxcsr
int
add
adc
test
adc
ljmp
jae
ret
or
fnstsw
inc
add
jmp
sbb
ljmp
mov
adc
rorl
push
push
movd
inc
loop
cltd
lods
fbld
movsb
xchg
adc
scas
icebp
mov
loope
outsl
daa
sbb
add
jp
xorb
jbe
inc
adc
mov
or
dec
ret
cltd
pop
mov
sbb
and
fwait
mov
pop
or
mov
fbstp
nop
cmp
ljmp
dec
sbb
cs
ja
cs
imul
fisubrl
outsl
loopne
popf
jne
shlb
lcall
push
ljmp
jnp
cmp
add
loop
out
mov
lahf
fmuls
xor
or
jge
insb
sub
sub
out
xor
lock
xchg
addr16
loope
adc
and
test
popf
iretw
dec
mov
rcl
aaa
and
cmp
movl
mov
or
insb
scas
cmp
xchg
jge
xchg
lea
dec
xor
movl
ljmp
lcall
mov
imul
arpl
jge
cmp
mov
ljmp
jp
fisttpll
aas
jp
movsl
gs
shll
fs
loope
cmpsl
push
int3
outsl
fisttps
ret
ret
xor
mov
test
rolb
xchg
dec
test
popl
je
lcall
cld
sub
vpsllw
arpl
adcb
movsb
popf
movsl
sbb
hlt
adc
dec
shl
jb
xor
sub
or
lds
movsl
loop
ja
cltd
mov
push
sub
pop
xlat
rcrb
test
fidivrl
imulb
jmp
add
push
dec
add
in
in
dec
cmp
fidivs
loope
and
imul
pop
xlat
cwtl
push
xchg
cmp
cmc
xor
lock
adc
mov
mov
mov
sub
js
and
mov
addr16
pop
outsl
sbb
dec
sub
popf
cwtl
rcr
cmpsb
sahf
mov
push
mov
mov
pop
mov
dec
and
repnz
push
mull
loopne
jmp
mov
push
test
mov
inc
inc
cmc
inc
mov
and
mov
mov
std
adcb
hlt
ss
nop
lods
addr16
orb
lcall
cwtl
fidivrs
dec
mov
test
imul
mov
add
or
sub
add
mov
inc
ret
cmp
call
outsl
add
das
dec
mov
std
lea
in
daa
dec
fs
test
dec
sbb
adc
imul
and
into
adc
repz
aam
jge
mov
add
inc
jle
mov
jbe
push
lahf
enter
fidivrl
push
mov
jmp
jecxz
sub
jl
pusha
push
jae
icebp
mov
xchg
mov
and
add
dec
clc
cmp
inc
push
cmp
addr16
pop
lods
mov
scas
adc
sub
cmp
and
inc
push
cmp
imul
ja
jns
cmp
in
push
iret
adc
lret
pop
icebp
pop
pop
std
sub
pop
dec
jb
add
lock
pop
out
pop
mov
popa
std
jnp
lea
and
in
jle
jmp
sbb
mov
push
lret
cmp
leave
imul
shll
call
push
add
push
inc
fsubrs
mov
inc
ds
or
fwait
jmp
jp
movsb
rorl
bound
testl
cmp
sbb
imul
fucom
sahf
inc
jmp
mov
xor
les
stos
mov
jle
call
mov
pop
iret
dec
aaa
sbb
cltd
jno
cmp
mov
and
subl
lret
scas
ss
pop
mov
repz
mov
mov
xchg
xchg
xor
in
sbb
push
cmp
inc
dec
sub
add
xor
aam
imul
iret
in
es
lret
iret
rol
xor
add
adcl
enter
dec
bound
test
xchg
xchg
dec
add
insb
push
mov
dec
icebp
mov
daa
loopne
xchg
sbb
lds
sub
enter
adc
push
mov
pop
scas
loop
sub
pop
outsl
jecxz
dec
mov
jb
dec
std
mov
xchg
fisubrs
and
gs
xor
test
jbe
dec
sti
mov
push
and
cmp
cmc
sub
xchg
loope
ret
mov
test
out
daa
xchg
mov
mov
fwait
dec
sub
jne
fmul
ds
push
mov
loope
int
je
stc
mov
sbb
pop
in
in
mov
pop
insb
push
inc
push
adc
jge
lret
adc
mov
cmp
pop
adc
imulb
fldt
sahf
push
mov
insb
add
cs
and
push
sbb
pop
fisubs
or
aad
fists
mov
and
les
add
xor
mov
xor
pop
gs
add
pop
cmp
xchg
or
cmp
outsb
fldcw
mov
int
addr16
sub
cmp
mov
add
xchg
fxch
push
sbb
outsl
inc
scas
mov
pop
cmp
into
test
cwtl
jnp
ljmp
leave
xor
in
popa
jge
sub
dec
push
std
cmp
push
insl
mov
xchg
mov
imul
mov
out
adc
jnp
push
gs
nop
xchg
rcrb
jbe
lret
xor
mov
jb
shr
mov
inc
add
sub
insl
nop
jo
adc
dec
dec
cwtl
push
adc
cmc
add
icebp
or
in
and
xor
mov
or
jl
shll
sub
lods
imull
lahf
xor
test
arpl
inc
test
movsl
dec
sti
adcb
movsl
leave
dec
mov
daa
push
test
repnz
push
bound
and
test
xchg
lea
adc
pop
add
jg
movsl
mov
loopne
jae
mov
jge
push
fcmove
lahf
mov
mov
shr
rcrl
mov
out
in
pop
inc
and
jne
xchg
int3
loopne
push
cli
iret
push
mov
jne
dec
icebp
test
xor
popf
mov
cmp
or
add
adc
sbb
dec
push
pop
xchg
js
sub
pop
jnp
nop
leave
pop
jecxz
mov
scas
das
imul
pop
insl
sbb
jno
stos
fstl
stos
insl
cmp
or
add
and
adc
out
dec
dec
mov
das
outsb
jbe
dec
dec
aam
xor
pop
aad
xor
lods
sbb
sti
sarl
sub
insb
or
in
pop
push
notl
cmp
mov
cwtl
dec
add
xchg
or
push
adc
cltd
xchg
gs
inc
popf
popa
jg
in
outsb
mov
repz
lcall
jnp
dec
dec
adc
fdivrs
xchg
inc
insl
popa
jne
fwait
stos
pop
xor
pop
push
dec
mov
xor
sub
leave
jns
sti
mov
mov
test
adcl
and
lock
scas
cmpsb
add
jno
cmpsb
pop
adc
pop
repz
inc
mov
and
jbe
roll
xchg
lret
xorl
outsl
mov
push
pop
popa
inc
sub
mov
adcl
bound
cld
loopne
pushf
clc
insl
cmpsl
pop
push
in
loop
movsl
pop
xor
dec
sub
sub
jl
mov
or
push
dec
jae
stos
jg
ja
leave
mov
cli
xchg
imulb
arpl
enter
or
dec
pop
int3
mov
xor
xchg
stos
dec
push
rcrl
aaa
inc
repnz
repnz
mov
cmp
rcrb
xchg
iret
fisttps
inc
push
push
fnstenv
loop
ss
push
inc
pop
bound
ret
push
aas
jns,pn
in
push
jl
add
call
in
xchg
into
dec
push
ret
pop
outsb
xchg
mov
push
adc
pushf
dec
jp
pop
push
inc
push
ljmp
mov
push
adc
cltd
addr16
mov
add
cld
call
or
cmpsb
lcall
push
aam
dec
mov
cmpsb
das
sbb
outsl
and
cwtl
push
adc
mov
add
test
loopne
push
adc
xor
dec
test
sub
fidivs
mov
cmp
jb
ds
jbe
movsl
iret
call
cld
inc
sti
es
push
into
pop
test
sbb
fbstp
dec
dec
fnstsw
pop
push
pop
jnp
arpl
add
daa
ja
jns
pop
sbb
mov
in
add
das
fnsave
mov
lret
push
sub
movsb
fldt
mov
lret
lods
inc
lahf
pop
je
mov
mov
jecxz
or
cmpsl
adc
rcr
dec
fisubrl
jge
jne
aam
xchg
inc
jnp
in
and
mov
jmp
jle
cli
and
mov
insl
mov
add
fsubrs
cmpsl
loopne
add
rcr
aas
nop
mov
or
jl
jno
push
lods
xor
or
sbb
ss
cltd
or
dec
fwait
cld
and
xor
icebp
add
jg
rorl
mul
xchg
cmpsl
xor
nop
sbb
push
cmpsb
jae
clc
scas
jnp
loopne
ret
bound
ret
test
inc
cmp
inc
roll
rolb
jne
push
push
push
sub
cltd
inc
cmp
movsl
shrl
mov
ja
dec
pop
xor
push
or
bound
xchg
lret
sahf
fstps
sbb
and
lcall
dec
test
ljmp
push
in
jne
xchg
add
sub
std
xchg
cmp
push
and
add
fdivrl
ja
dec
add
xchg
aam
out
lret
iret
dec
adc
arpl
sub
js
ss
cmp
jb
inc
mov
sbb
mov
cs
leave
adc
inc
subl
dec
and
dec
cmpsl
adc
adc
test
int3
test
dec
fldenv
mov
movsb
popa
mov
test
adc
or
dec
and
outsl
push
lds
add
dec
mov
dec
mov
pop
xchg
loopne
dec
xor
push
iret
popf
and
in
or
sub
jnp
inc
pop
mov
lock
fsubr
mov
push
pop
xchg
cmp
daa
faddp
icebp
and
mov
xor
ldmxcsr
xor
add
hlt
sbb
negl
add
fdivrp
int3
jecxz
xchg
mov
push
pop
fwait
jnp
scas
movsb
int3
in
jno
xlat
repz
iret
shrl
lcall
mov
push
sub
enter
xlat
rorl
sub
xchg
inc
mov
and
mov
cli
and
lret
stc
or
xor
aad
into
movsl
sub
lock
xchg
and
pop
dec
mov
and
sub
xor
nop
pop
pop
cmp
dec
aas
testb
inc
incb
mov
or
push
cmpb
loopne
add
sub
aam
or
in
xor
test
repz
mov
dec
sbb
out
imul
xchg
addr16
and
ja
adc
aam
jle
ret
ljmp
pop
cmpsl
xor
cmp
push
pop
jge
lea
or
pop
cld
mov
nop
orb
popf
mov
or
cltd
je
fists
call
js
push
das
stos
xchg
aaa
push
or
mov
sti
imul
push
clc
cli
dec
nop
test
xor
out
jle
dec
mov
xchg
in
mov
das
xchg
jmp
jb
jno
sbb
xlat
jg
inc
and
or
and
icebp
fnstenv
or
lahf
outsb
dec
add
ficomps
cmp
jbe
push
lcall
sbb
and
ret
or
into
mov
sbb
push
mull
add
lds
fimull
and
xorb
cli
jecxz
jmp
call
and
aad
inc
lret
pushf
jae
sbbb
mov
mov
xchg
fisttpl
jnp
dec
movsl
adc
pop
cmp
imul
jg
add
sub
and
jle
stos
aam
jae
xor
hlt
adc
test
nop
das
xchg
push
mov
incl
adc
imul
fwait
lahf
movsb
in
scas
inc
popa
int
inc
dec
fucomi
movsb
in
dec
push
xchg
test
aad
ljmp
in
ds
imul
xchg
jg
sti
test
pop
or
jo
add
jp
adc
add
scas
jo
test
scas
test
mov
jnp
adc
leave
xchg
in
dec
xor
sub
dec
pmaddwd
aaa
xlat
fsubs
inc
xchg
cmpsl
mov
push
mov
andb
out
cltd
mov
mov
mov
fistpll
jo
mov
fcom
mov
sbb
jne
lret
loopew
aad
mov
and
jg
push
xor
in
in
and
cltd
mov
lea
in
push
mov
sub
xor
jb
outsb
mov
ret
push
pop
in
negb
into
mov
enter
daa
adc
loopne
stc
fmull
xchg
dec
int
rcrb
lea
cmp
divb
neg
sbb
cmpsb
add
iret
cmp
add
jle
xchg
push
jg
ds
repz
lds
fisttpll
and
lds
adc
jno
push
lret
cmp
jns
loope
sub
jp
cli
inc
inc
mov
cmp
xor
enter
sbb
fnsave
mov
imul
jnp
cmp
jp
or
xchg
mov
out
jbe
xlat
lock
dec
mov
mov
add
ljmp
into
std
add
aam
movsb
sbb
imul
sarb
rcrl
jns
mov
stc
movsb
push
jge
stos
sub
cld
xchg
arpl
mov
mov
sbb
sub
or
and
ret
rclb
sub
fcompl
mov
jbe
bound
xor
and
xchg
ds
push
cld
movsb
cmp
ss
sub
out
orb
test
jbe
cmpsl
aaa
lret
push
lcall
cmp
scas
jl
or
stos
add
xor
cli
je
pop
movsl
sub
mov
fwait
xchg
test
xchg
add
push
xchg
push
push
mov
mov
xchg
imul
xchg
leave
imul
jns
sbb
aas
cmp
das
or
mov
inc
mov
jmp
insl
mov
push
rol
sahf
sbbl
leave
mov
pusha
jns
ret
dec
lds
aam
stos
adc
pusha
xlat
mov
shll
orl
bnd
loopne
mov
xchg
sbbb
sti
push
mov
xor
mov
push
push
fistpll
inc
mov
and
addr16
lcall
ds
sbb
mov
xor
sub
loopne
sub
loop
mov
and
mov
mov
jns
das
gs
repz
pop
insl
adc
cmp
and
push
inc
push
rolb
fwait
adc
les
imul
pusha
sub
inc
in
repz
leave
test
sbbl
std
mov
mov
outsb
sbb
mov
push
xchg
fwait
cltd
lds
fistpll
adc
mov
outsb
mov
int
into
in
or
lcall
xlat
data16
imul
or
jae
lret
jnp
mov
popf
push
div
mov
mov
arpl
inc
xor
mov
adc
mov
inc
stos
xchg
jl
xchg
gs
push
stos
sub
push
push
std
adc
add
cli
mov
sbb
and
fimull
jl
push
add
mov
push
mov
test
stos
cmc
scas
mov
push
mov
cmpsb
cmp
gs
mov
cmc
inc
cli
mov
fistl
sbb
ja
push
xchg
xchg
fsubrs
jge
into
push
fmull
aad
lods
shlb
inc
aas
pushf
fbld
or
sub
sti
out
test
ljmp
into
or
cmp
sub
test
xchg
fidivs
sbb
in
cmp
in
and
mov
push
sub
dec
mov
cmp
rcll
mov
mov
inc
sub
in
push
jmp
mov
mov
cmp
in
lods
int3
sub
mov
fcompp
or
cmp
fwait
inc
clc
jge
ljmp
add
test
mov
inc
mov
adcb
push
movntq
out
push
insl
cmpsl
cltd
movsl
xchg
jmp
ret
movsb
imul
jmp
test
inc
stos
sbbb
div
jle
aad
nop
in
call
sbb
xor
lret
cmp
js
jmp
cmp
cmp
add
lods
pusha
inc
popa
dec
imul
scas
xchg
adc
xchg
call
icebp
mull
mov
xchg
fisttpll
ljmp
dec
mov
inc
pop
out
inc
test
cmp
movsb
lahf
pusha
sti
push
stos
movl
dec
fistps
or
and
sbb
bound
mov
std
mov
xlat
int3
icebp
sub
add
sub
xor
mov
inc
push
or
jnp
mov
outsl
jp
add
dec
jle
cld
jp
xchg
lret
push
imul
push
add
addr16
lahf
clc
lods
fstpt
dec
lret
sub
dec
mov
push
test
in
out
out
add
inc
sbb
sub
iret
and
aad
push
mov
jb
ror
adc
lea
lock
or
das
mov
pop
dec
cltd
jge
cs
xor
ret
push
test
xchg
xchg
adc
pop
mov
fcomi
mov
add
ret
mov
dec
lret
jl
inc
xchg
or
xchg
dec
cs
sub
out
mov
mov
push
aaa
pop
test
test
adc
imul
clc
xlat
adc
iret
shll
sbb
mov
mov
mov
mov
pop
or
push
js
pusha
punpckhdq
js
cwtl
pop
jecxz
cs
in
popf
es
shll
icebp
stos
cmpsl
test
inc
ja
push
notb
aas
dec
jecxz
inc
mov
push
decl
sarb
sbb
fisttpll
cmp
cs
jbe
outsb
xor
or
mov
loopne
inc
xchg
leave
insb
xchg
add
sub
call
cwtl
shr
negb
lods
mov
sbb
jo
imul
imul
inc
in
dec
sbb
cmp
rorl
daa
into
inc
pushf
xor
pop
pop
mov
shrb
int
mov
mov
push
sub
mov
dec
data16
clc
cmp
aad
dec
adc
pop
xchg
mov
xchg
pop
cltd
dec
aam
inc
sti
leave
jne
repz
xor
leave
pusha
xlat
and
mov
dec
pusha
arpl
outsb
in
inc
jge
es
sub
fwait
pushf
cs
sbb
cmp
lock
sbb
stc
icebp
jecxz
shll
add
mov
inc
orl
inc
loope
add
iret
cs
pop
push
or
pop
gs
add
addr16
mov
sbb
lret
stos
dec
dec
cld
push
pop
jmp
frstor
and
sub
jge
ljmp
aaa
lss
in
add
or
sarb
in
or
inc
call
pop
out
scas
mov
test
mov
popf
sarl
jb
and
sbb
nop
fwait
movsl
dec
pop
cltd
loope
xchg
stos
loop
pop
jl
or
inc
into
cwtl
cmpl
add
repnz
mov
je
mov
mov
iret
mov
push
orb
shll
pusha
pushf
sbb
mov
mov
mov
out
fs
push
bound
jmp
push
dec
xor
adc
push
dec
sbb
adc
xchg
push
jbe
outsl
lods
dec
pop
sbb
or
pop
xor
inc
movsl
pop
pop
xchg
xor
push
pop
cmp
sbb
imul
data16
hlt
lods
in
mov
jmp
ret
lds
idiv
daa
sahf
sahf
sub
add
inc
mov
sbb
sbb
and
mov
je
add
out
jns
repz
add
xchg
mov
pop
sti
adc
cmp
and
mov
and
pop
mov
dec
push
outsl
adc
or
ja
orb
in
xchg
sbb
mov
rolb
sub
xchg
rcrl
int3
mov
lcall
mov
ja
int3
inc
or
sbb
ss
mov
cmp
mov
or
int
xor
jae
push
and
loopne
or
push
sbb
data16
movsl
aaa
ret
fwait
mov
insb
idiv
imul
sub
or
clc
das
sbb
xor
sub
jb
mov
fs
jb
aad
je
fldl2t
push
and
getsec
and
xchg
mov
add
cli
and
mov
insl
jle
cltd
je
inc
sbb
je
add
sbb
push
or
bound
add
in
sub
bound
adc
insb
and
fsubs
movsb
lods
fcmove
mov
rcl
rorb
in
mov
int
adc
mov
adc
in
pusha
std
xchg
icebp
push
cli
jnp
sub
rolb
xor
jl
pop
cmpsb
in
mov
xor
frstor
add
lret
aad
leave
sbb
dec
in
pop
in
ficompl
inc
test
cs
fucomp
pop
mov
and
adc
shr
or
test
jnp
shll
add
xchg
adc
nop
dec
inc
dec
xchg
in
cmp
jne
mov
mov
jge
mov
addl
xchg
ret
mov
xor
or
push
outsl
comiss
jecxz
adc
jbe
clc
adcl
enter
ds
jecxz
aaa
jno
and
push
stc
xchg
lcall
in
add
ljmp
imul
fildll
inc
cmpsb
or
inc
push
or
xchg
inc
lea
shl
fimuls
mov
jg
inc
pushf
mov
mov
andl
outsb
ja
daa
mov
sub
mov
mov
clc
ffreep
push
mov
xor
dec
sub
pop
sub
sub
push
insl
jmp
test
and
xor
pop
fistpl
inc
lret
lret
inc
dec
movsl
pop
divl
pop
loop
adc
js
or
cmp
in
sahf
lcall
inc
dec
pop
pop
xchg
imul
dec
leave
cwtl
lcall
mov
push
insl
mov
jbe
cmp
ljmp
loopne
or
dec
scas
jmp
mov
mov
push
sub
push
cmp
push
js
pushf
pop
sbb
sub
cmp
mov
adc
or
in
iret
cmp
jecxz
lret
out
jmp
xchg
icebp
jmp
push
stc
mov
sbb
xor
and
push
or
add
push
cli
push
and
test
clc
dec
sub
stos
data16
rolb
and
add
inc
sub
les
push
push
cmpsb
jnp
pop
push
pop
sub
pop
imul
mov
roll
insl
loopne
mov
pop
sbb
test
adc
cld
xlat
push
adc
sbb
xor
sbb
add
imul
add
push
rclb
add
or
fnstcw
test
jo
pop
test
sti
mov
mov
and
sbb
dec
iret
inc
mov
fwait
mov
pop
inc
jmp
cmp
sub
mov
mov
mov
out
pop
rolb
dec
push
and
and
xchg
push
in
mov
lods
aad
movsl
icebp
sub
mov
mov
cmp
aaa
dec
sub
movsb
push
or
rcll
push
icebp
cmp
stos
mov
pop
pop
mov
test
shrl
out
inc
ret
lahf
in
inc
inc
xlat
pop
mov
sub
dec
fists
icebp
cld
rcll
cmp
mov
icebp
mov
into
pop
sub
dec
cs
ret
or
iret
xor
xchg
mov
cmpsb
cmp
ja
popf
dec
inc
insb
xor
mov
test
dec
in
iret
add
push
or
mov
adc
fwait
enter
repz
adc
lahf
jp
dec
mov
test
pop
stos
stos
xlat
push
leave
mov
dec
mov
push
int3
and
xchg
out
mov
loop
or
test
lods
jne
mov
mov
push
mov
push
add
enter
pop
or
inc
jb
sbb
jno
fdivl
xchg
mov
mov
pop
fidivrs
inc
js
push
push
mov
xor
pop
lea
adc
push
adc
loop
clc
push
inc
mov
imul
test
int3
cmovo
arpl
xor
in
lcall
stc
and
jbe
int
add
lods
int
int
out
or
shlb
mov
push
outsb
sub
jae
pop
adc
xchg
adc
aad
xor
insl
xor
insb
push
cwtl
insb
sbb
inc
sti
dec
xor
jmp
cltd
leave
xchg
mov
fsubrl
and
sahf
sarb
mov
stos
mov
iret
sbb
aad
xor
adc
jge
xchg
sub
xor
sbb
mov
mov
or
add
dec
push
adc
test
mov
xchg
mov
imul
imul
inc
jno
les
out
mov
or
cmp
push
pushw
dec
adc
mov
fisttpl
loop
xor
or
push
fsts
mov
jnp
push
cmp
sub
cmp
repz
cmp
outsl
xchg
scas
jecxz
addl
dec
add
sub
push
xchg
and
mov
fwait
mov
ds
add
jbe
dec
lods
rcrb
xchg
and
das
push
pop
sub
outsb
adc
sbb
inc
inc
fsubrs
xchg
insl
mov
and
sbb
jb
xchg
inc
lds
add
mov
mov
ds
leave
pop
lcall
mov
mov
jg
mov
sub
jmp
sahf
pusha
outsl
sbb
ucomiss
test
or
jecxz
push
fdivl
xchg
std
push
mov
push
dec
divl
fucomp
cmc
push
sbb
adc
pop
cmc
maskmovq
imull
rcrl
pusha
enter
dec
jecxz
xchg
push
insl
fabs
sbb
xchg
inc
adc
int
je
test
jecxz
rolb
or
pop
xor
fs
xchg
inc
inc
and
mov
mov
sbb
inc
in
in
sub
cmpsl
mov
cmp
push
mov
xor
popf
lods
insl
aad
sub
pop
rorl
frstor
inc
hlt
push
lret
out
sti
pushf
fcoms
or
xchg
inc
pop
out
adc
push
xor
je
mov
cmpsl
fldt
jnp
pop
mov
movsl
inc
adc
cmc
outsl
mov
jo
add
fs
fs
enter
pop
aas
and
sti
loopne
mov
mov
mov
or
pop
insl
jae
hlt
mov
push
stos
cmpsl
sti
xchg
xchg
std
mov
jp
pop
mov
mov
jne
std
xchg
repz
xchg
js
adc
push
push
push
adc
movsb
fucomip
lea
adc
and
jns
jns
in
ja
inc
and
add
out
jo
cmp
psrld
test
dec
pop
in
jbe
sbb
arpl
inc
ljmp
ret
loope
sbb
xorl
add
cmp
or
xchg
paddusw
adc
mov
iret
test
fistl
jns
pop
jb
pop
cli
mov
pop
out
test
mov
mov
dec
jmp
out
addr16
nop
cmc
or
fs
out
pop
shl
add
inc
mov
adc
add
and
sbb
inc
jmp
scas
stos
loopne
adc
mov
ds
repz
leave
fistl
cli
bound
imul
inc
test
popa
outsb
pop
lcall
clc
inc
fildl
jnp
jmp
arpl
clc
pop
and
push
push
adc
jnp
or
jno
cltd
pop
cld
setne
movsl
popf
add
inc
out
dec
adc
into
or
fcmovu
je
xchg
rorb
sbb
into
iret
or
or
inc
aas
sbb
stc
stos
bound
imul
jle
mov
add
add
fstpt
pop
mov
call
repz
push
scas
jle
add
jne
push
cmp
push
push
dec
sti
jge
mov
dec
shr
push
and
and
mov
mov
mov
adc
push
lahf
outsl
add
sbb
ds
int3
cmpsb
push
adc
aas
ljmp
outsl
mov
or
push
ljmp
cwtl
push
int3
cltd
mov
jle
dec
testl
addb
adc
out
and
out
inc
iret
inc
mov
dec
sub
mov
jp
and
rolb
mov
mov
pusha
shlb
loopne
mov
jne
lods
fucomip
and
push
mov
fcomps
or
arpl
lock
insb
leave
mov
lahf
sbb
xchg
movsb
test
outsb
out
push
inc
mov
xchg
mov
push
sarl
inc
mov
popa
imul
mov
movsl
dec
jne
out
movsb
adc
fcompl
insb
cmp
mov
stos
add
loop
add
or
lods
xchg
dec
test
adc
mov
sbbb
sbb
pusha
jl
and
mov
addb
std
or
xor
dec
sub
dec
call
pop
lret
inc
jp
cmpsl
pop
test
sub
in
stc
lcall
sbbb
push
xchg
dec
mov
jle
mov
lahf
xchg
xchg
je
push
ret
xor
cs
and
sbb
sbb
fidivl
xchg
lds
cmp
mov
cld
sahf
push
sbb
xor
sahf
aam
xchg
or
in
mov
ljmp
hlt
dec
and
adc
ds
stos
jo
mov
pop
adc
and
inc
mov
popa
mov
push
sarl
push
and
or
scas
pop
lea
out
sbb
pushf
test
mov
pop
jbe
out
cmp
mov
dec
adc
fsts
cmp
das
outsl
lock
shrb
jnp
stos
test
decb
mov
jge
negl
pop
pop
sub
fisubrl
into
imul
push
inc
xor
mov
sub
outsl
stos
ss
movsl
aad
inc
xor
jbe
mov
sub
xchg
repnz
int3
and
push
fistpl
subl
pop
pushf
adc
stos
shr
or
sbbb
sbb
jo
push
push
xor
fldl
test
sarl
dec
pop
cld
scas
lods
aaa
es
flds
inc
pop
add
fisubrs
lods
mov
ret
popf
ret
mov
jl
aas
fs
int
popa
outsb
cs
mov
stos
cmc
loopne
mov
add
mov
lahf
in
sub
adc
xor
push
dec
es
sbb
inc
sub
cmp
jb
movsb
imul
mov
movsb
mov
mov
jnp
pop
cwtl
inc
mov
inc
fcmovnb
pop
faddp
int3
jecxz
sub
push
cmpb
in
sbb
test
ret
lea
and
sahf
fstl
jno
inc
ret
and
jbe
dec
pop
stos
test
pop
or
mov
cmpsl
movsb
das
mov
sbb
int
xor
nop
in
andl
out
sti
shlb
jb
adc
sub
inc
cmc
int3
pop
fldt
fadd
pop
cmp
int3
dec
cmc
mov
push
inc
mov
xor
ljmp
cmp
jbe
fsub
jge
dec
inc
insl
insb
and
jb
mov
into
push
add
loope
iret
pop
gs
xor
mov
mov
sub
mov
cmp
rorl
jp
aad
push
movsb
and
cmp
inc
divl
sarb
xchg
aam
inc
out
and
cmpsl
cmp
icebp
data16
and
pop
xchg
pop
mov
xchg
sbb
hlt
inc
hlt
gs
add
test
push
jmp
mov
lods
in
push
icebp
cwtl
xchg
push
rclb
data16
mov
cld
xchg
popa
push
inc
inc
lea
jbe
js
lret
fcmovb
cmp
int
xor
cs
jp
movsl
inc
sbb
clc
jae
ljmp
jg
insl
adc
dec
cmpb
ret
sahf
clc
sbb
push
push
mov
dec
lea
ret
imul
insl
cli
cmc
add
fisttpll
xor
sub
and
sbb
mov
adcl
test
pop
mov
xor
pop
inc
jns
pop
add
jno
in
push
adcb
sub
push
sahf
loope
pop
mov
push
mov
fs
insb
outsb
pop
mov
lds
jl
push
sarb
add
hlt
movsb
std
test
add
xor
rcl
mov
lods
stos
cmp
sbb
das
out
std
push
jns
lcall
addr16
mov
rorb
scas
shl
outsl
push
test
inc
pop
dec
mov
dec
fwait
stos
cmp
nop
mov
sti
mov
stc
fsubs
add
jo
xlat
icebp
shl
push
xor
jb
mov
cmp
es
pop
imul
jle
shlb
xchg
push
jg
sbb
pushf
pop
or
imul
push
movaps
mov
ds
push
adc
mov
cmpsb
xor
test
lea
jnp
pop
dec
rorl
push
pop
xchg
adc
xchg
mov
icebp
cwtl
subb
xchg
mov
out
xchg
loopne
xor
shlb
xchg
mov
lcall
fbstp
call
cmp
test
fcomi
insb
or
imul
frstor
cltd
sar
or
mov
push
add
cmp
pop
leave
aas
adc
adc
movl
cmp
insb
push
mov
push
cltd
pop
sub
aaa
add
mov
rclb
cmpsl
lret
test
cwtl
jae
aas
sbb
iret
adc
jle
lods
mov
mov
jb
stos
jl
jle
mov
outsb
inc
or
mov
das
push
push
jns
test
xorl
loopne
and
jae
jmp
adc
and
inc
fistpll
mov
push
mov
mov
xchg
scas
shlb
mov
add
jmp
inc
xchg
ljmp
fcmovbe
jecxz
das
in
mov
pop
orl
lds
push
enter
add
filds
test
jle
push
sarl
inc
stos
adcl
mov
gs
xchg
ret
lock
pop
sub
xchg
xchg
in
pop
adc
dec
imul
or
push
fcomp
loopne
fwait
pusha
sbb
cmpsl
xchg
fs
sti
rorb
out
adc
lahf
cmp
andb
sub
xchg
xchg
jbe
pop
ficoml
pop
xor
iret
shl
mov
aad
fdivrl
aad
adc
mov
jae
fbstp
fidivs
decl
mov
add
and
je
dec
sarl
test
out
popf
cltd
clc
xchg
rcll
arpl
push
je
or
add
cmp
push
in
ret
in
sbb
mov
mov
imul
inc
jle
inc
iret
jno
loopne
icebp
ret
jl
mov
into
inc
test
sbb
xor
add
lret
jae
test
into
mov
or
scas
inc
push
outsb
sarl
nop
test
cld
mov
sub
fdivr
aad
mov
out
mov
les
adc
cmpsb
adc
push
mov
dec
lods
adc
out
popf
pop
sbb
xchg
inc
movsb
jl
incb
xlat
bound
bound
aad
push
mov
cmp
jecxz
sbb
aas
stos
adc
addl
movsb
int3
sarl
mov
clc
inc
dec
sar
daa
xchg
insl
fucomip
mov
xchg
mov
push
jno
xchg
test
xlat
and
outsl
nop
cltd
push
sahf
aas
nop
dec
test
enter
or
decl
rcll
pop
bound
in
mov
xchg
std
bound
xlat
cmpsl
mov
ljmp
loop
insl
leave
mov
aaa
or
cmp
clc
sahf
pusha
xchg
negl
pop
xchg
insl
mov
mov
call
shld
out
mov
mov
rol
push
stos
mov
mov
adc
lds
fbstp
cmp
cmp
gs
sub
iret
icebp
or
mov
xor
inc
adc
add
mov
ret
dec
lahf
hlt
add
ljmp
std
mov
pop
mov
xor
mov
mov
fcomps
bswap
ljmp
sub
jecxz
xchg
dec
jge
lods
out
sbb
shlb
sbb
dec
jbe
js
mov
jp
out
fistps
outsl
mov
push
data16
xlat
in
pusha
insb
push
cli
push
fcoms
imul
adc
inc
mov
repz
inc
cmp
dec
jae
jl
insb
js
push
pop
std
into
mov
push
xor
mov
mov
es
ret
and
loope
xchg
js
popf
adc
sub
scas
les
sbb
sub
pop
push
adc
out
call
in
stos
out
mov
sub
mov
cltd
loope
arpl
mov
lahf
or
scas
cmc
sahf
dec
xor
fdivr
push
sarb
imul
xchg
lret
pop
inc
xor
jl
call
inc
xor
frstor
lret
lods
xchg
sub
push
xchg
xchg
imul
xor
push
or
fcoml
sbb
jl
push
sbb
and
movb
sub
inc
aam
lret
in
lods
cli
mov
pusha
xor
jne
roll
movsb
cmp
pop
cwtl
imul
push
and
add
inc
adc
clc
gs
loopne
sbb
ss
sahf
mov
aaa
mov
fists
sub
mov
test
ja
out
xchg
cli
xor
dec
and
int
and
jg
jl
xchg
push
xchg
sub
stos
push
cmp
jp
jo
adcb
push
xchg
jo
addr16
repz
int
and
or
sub
jmp
cmpsl
sub
mov
jl
dec
in
outsb
imul
sbb
lahf
cmp
ret
jmp
cmpl
jge
leave
jmp
inc
mov
sbb
aaa
push
call
mov
pop
pop
sub
into
andl
stos
ljmp
std
xchg
stos
fmul
jae
in
mov
mov
dec
test
fdivrs
je
icebp
inc
xchg
cmp
jp
add
xor
cwtl
scas
mov
mov
xor
icebp
inc
cmp
call
pop
pusha
jecxz
cmc
loopne
mov
and
in
out
out
pop
adc
loop
or
adc
and
dec
sbb
mov
inc
frstor
fistpl
sub
sbbb
dec
sar
add
pop
ss
push
daa
push
mov
lahf
addr16
fs
xor
jne
cmp
fstpt
sti
out
or
push
icebp
push
add
sub
repz
pop
sub
sbb
pop
stc
ss
mov
xchg
test
pop
cld
test
movsl
roll
dec
push
ja
imul
leave
mov
add
int3
xor
sub
sbb
fninit
mov
jge
lret
jns
or
or
sbb
outsl
out
cmp
popf
push
push
pop
loope
sbb
pusha
insb
jmp
das
out
xchg
lods
insl
cld
jbe
sub
push
push
shll
add
sub
xor
sub
pop
pop
ffree
enter
push
mov
push
sti
insl
sbb
dec
je
xlat
cmp
xchg
ds
stc
add
adc
movsb
fcmove
add
push
insb
ret
inc
je
pop
outsl
lret
das
jge
ret
call
in
push
enter
int
imul
sahf
aaa
sbb
mov
xchg
jnp
loop
dec
lret
popf
addr16
mov
push
aam
dec
adc
dec
mov
inc
jecxz
std
ret
mov
jnp
push
addl
sub
cmp
push
mov
xor
repz
shll
push
cmp
das
stos
mov
jge
movsl
pop
repz
xchg
dec
mov
test
orb
movsb
fcomps
test
xchg
cmp
mov
xor
mov
sbb
cmpsb
js
pop
std
jmp
or
mov
jle
push
dec
ja
lods
dec
popa
movsl
sbb
push
out
movsl
js
mov
add
push
lret
jge
and
stos
mov
xchg
lret
addr16
and
or
data16
xor
leave
jo
inc
mov
add
mov
out
test
stc
push
sub
stc
call
or
mov
adc
test
xchg
iret
cmp
jbe
cltd
mov
cld
out
xchg
fsts
jnp
and
mov
and
pop
or
inc
xor
cs
mov
pop
faddp
cmp
ds
and
xchg
inc
jle
dec
mov
xchg
data16
clc
or
jp
add
and
enter
inc
clc
or
xchg
mov
pusha
mov
inc
mov
add
xchg
jbe
aad
add
xor
fmull
fnstsw
jmp
ljmp
out
sub
pop
adc
scas
popf
xlat
fistpll
aas
shll
mov
imul
sbb
push
jb
xchg
fildl
testb
pop
fwait
int3
jbe
fsin
roll
jo
dec
inc
test
sub
in
lret
pop
stos
scas
inc
insl
mov
and
inc
mov
lcall
test
lock
es
cmp
and
or
push
fsts
pop
mov
mov
add
jb,pn
out
mov
call
cmp
dec
xlat
out
mov
mov
sbb
in
xor
out
or
push
in
sub
sub
dec
lods
aas
lods
xchg
xor
aaa
mov
xor
inc
in
dec
sarl
add
addr16
or
gs
adc
sti
push
es
jl
ror
push
push
scas
sbb
enter
stos
inc
or
mov
push
sbb
rclb
inc
shlb
mov
lea
pop
jno
rcr
xchg
mov
add
daa
lods
cmp
sahf
ret
mov
das
or
push
pop
xchg
sub
fwait
xor
daa
sub
call
mov
mov
sbb
dec
xchg
jb
push
xchg
dec
pop
sbb
cs
mov
add
mov
add
std
stc
ja
or
cmpsl
imul
test
xchg
dec
xorb
aad
mov
jb
add
fwait
hlt
xor
mov
cli
imul
nop
out
movsl
pop
sub
pusha
into
arpl
mov
mov
sbb
rcr
mov
add
lds
dec
push
fcomps
leave
adc
sub
xor
xor
shl
xor
imul
jnp
mov
push
es
fiaddl
adc
lcall
mov
push
mov
arpl
dec
and
notb
pop
pushf
aam
pusha
popa
sbb
stos
dec
lock
jo
push
jo
push
mov
add
into
mov
sbb
cmp
mov
inc
adc
or
jmp
inc
stos
shll
pop
or
mov
cmp
je
je
and
sub
das
push
pop
mov
enter
and
dec
ret
pushf
and
arpl
and
jb
pop
out
cltd
pop
mov
adc
dec
lret
sub
dec
fldt
mov
ss
push
add
adc
movsb
das
add
shrl
jl
pop
pop
push
inc
xchg
shrb
cltd
repz
insb
push
xor
leave
inc
loopne
jle
add
pop
sub
pop
imul
mov
push
pushf
push
jle
mov
jmp
adc
test
pop
xchg
inc
sub
fldenv
mov
pop
cld
repz
shll
movsl
ret
ds
jp
xchg
stc
sbb
pop
popa
pop
cmp
sub
stos
ljmp
arpl
jo
test
stos
mov
mov
dec
add
xchg
jo
lcall
test
out
and
sbb
cmp
mov
fstl
xor
push
push
test
jg
in
jp
cmp
mov
adc
mov
sbb
xor
into
xlat
stos
fs
aas
outsl
mov
xor
outsb
adc
dec
icebp
pop
ss
test
mov
pop
pop
fbstp
mov
add
sub
mov
test
call
fs
jp
out
jl
xchg
push
ja
add
mov
fsubs
inc
cmpb
ret
sub
mov
rolb
scas
loope
mov
dec
xor
sbb
into
pop
repz
dec
insl
js
and
sahf
jmp
or
mov
pop
push
pop
or
sub
lods
mov
cs
je
and
fldcw
push
sub
inc
shlb
push
pop
push
adc
xchg
popl
loopne
test
fisttpll
aam
inc
cmp
pusha
stc
mov
mov
pushf
pop
in
leave
into
out
insl
insl
lock
sub
out
dec
cmp
leave
jae
movsb
pushf
fstps
mov
int3
jne
and
test
add
mov
dec
aad
sbb
ljmp
or
aas
or
out
add
xchg
xor
popf
inc
jnp
mov
push
lods
mov
mov
std
pop
mov
scas
jb
pop
lcall
lods
test
fs
xchg
push
bound
loopne
pop
ret
mov
subl
adc
shl
loope
dec
out
out
out
into
std
dec
out
int
out
jle
filds
adc
inc
cwtl
aaa
repnz
test
loope
les
pop
mov
push
lcall
out
imul
lods
movsl
sahf
xor
xchg
je
jle
insb
push
lret
ret
sbbl
shlb
orl
lret
popa
xor
aad
scas
push
repz
loop
insl
cmpsl
fimull
mov
cmpsl
mov
dec
jnp
dec
mov
cmp
mov
bound
inc
sarw
lock
out
scas
inc
sti
push
cli
or
or
rorb
and
sarb
xor
mov
dec
pop
push
test
arpl
imul
out
sbb
inc
cmp
inc
outsl
pop
push
and
iret
std
push
mov
sbb
shll
lods
mov
lret
cli
jmp
mov
test
xchg
and
cmp
or
rclb
lahf
jae
lret
xchg
xlat
les
add
gs
push
movsb
test
push
scas
push
dec
pop
addb
xor
shll
outsb
jecxz
jbe
cmp
daa
mov
pop
pop
push
add
fidivrl
push
pop
nop
xlat
imul
push
pusha
jnp
loopne
std
test
adc
ret
mov
dec
ds
lods
leave
mov
bound
mov
push
inc
test
xchg
arpl
movsl
sub
xchg
out
push
and
jno
push
sbb
or
pop
rcr
dec
xchg
xchg
cltd
lret
pop
xor
inc
es
rclb
addl
ret
push
lods
push
xchg
insl
add
sarl
ds
sbb
loopne
xchg
popf
inc
scas
cmp
sub
repnz
cli
rcrb
cmc
mov
jb
cwtl
loop
arpl
mov
dec
lods
int3
or
dec
pop
xor
cmp
cli
aas
fnstcw
mov
xor
and
scas
rol
push
inc
dec
push
adc
mov
leave
imul
rcll
movsb
sbb
movsl
cli
jle
es
outsl
ret
data16
xor
inc
fildl
loope
or
fsubr
aas
pusha
inc
xchg
sub
mov
cmc
dec
jnp
adc
mov
cmpl
adc
ja
jbe
pop
and
add
mov
mov
test
daa
add
cmp
gs
jae
outsl
cmp
repz
sub
das
movsb
std
cmp
into
adc
clc
stos
xchg
outsl
mov
dec
cwtl
stos
cmp
jo
mov
loop
mov
xchg
cld
outsl
jo
or
mov
pop
sub
pop
fsts
out
xor
jg
loop
imul
cmp
dec
xchg
outsl
jns,pt
push
bound
xchg
dec
aam
in
aaa
das
inc
imul
mov
in
test
xchg
cmovg
adc
push
ss
pop
lret
cmp
sbb
pop
mov
repz
aas
insb
cltd
data16
imul
jbe
loope
icebp
jp
ret
or
inc
lret
mov
test
pop
rclb
jge
add
enter
cmp
dec
or
in
out
inc
idivl
outsb
push
popf
cli
stos
dec
xchg
jmp
push
pcmpeqd
pop
insl
or
stos
jb
xor
enter
mov
shll
xchg
ror
dec
sti
popa
inc
or
lock
in
and
push
jg
push
aam
bound
push
sbb
cli
push
or
add
js
popf
imul
add
xchg
stc
out
call
push
mov
sbb
test
sub
pop
cmp
xor
sbb
test
ss
out
inc
adc
popa
mul
dec
pop
xchg
aaa
mov
push
inc
outsl
lcall
dec
sub
jmp
pop
push
sbb
pop
scas
push
mov
jb
arpl
mov
ficompl
decb
xor
push
gs
ss
inc
fdivs
int3
out
fmul
add
mov
pop
mov
sbb
sbb
add
pop
repnz
nop
xchg
clc
lea
in
add
sbb
dec
pop
call
push
scas
cwtl
pop
push
mov
jl
pop
das
xchg
enter
add
pop
pushl
push
xor
daa
push
and
cli
xchg
incb
orb
test
in
adc
ror
mov
dec
negb
xor
mov
imul
movsb
shlb
movsb
mov
mov
insb
push
add
shll
or
dec
xor
aas
roll
mov
stc
fadd
loopne
out
inc
imul
sub
gs
and
fs
es
inc
fdiv
mov
mov
dec
imul
cmp
sbb
dec
cmp
xchg
or
push
sbb
xor
ret
jl
aam
add
pop
xchg
testb
cs
leave
jbe
sbb
jge
test
movl
cmp
cmc
loope
enter
jge
scas
leave
sbb
or
insb
mov
push
fstps
adc
ss
fdivrl
sub
mov
ja
in
mov
xlat
roll
test
and
mov
mov
adc
jnp
jge
sbb
inc
dec
pop
int3
lods
popa
push
sub
push
in
push
les
sub
test
cmpsl
jmp
inc
fmulp
sub
enter
mov
pushf
xchg
test
xor
mov
cmpl
mov
mov
xlat
cmc
mov
push
inc
enter
pop
mov
and
sbb
shlb
ret
lret
dec
xor
or
clc
or
pop
pop
loope
dec
jle
add
mov
iret
mov
fadds
or
sub
mov
adc
fstps
jmp
lods
sub
jecxz
cmc
mov
adc
incb
pop
shll
xor
arpl
add
sar
call
imul
mov
sbb
lds
js
je
push
and
mov
sbbl
fcmovne
xchg
and
push
aad
in
xor
lods
jo
popf
imul
cmpsl
or
popa
sub
insb
aaa
or
jmp
lcall
push
cld
outsl
fnstenv
adc
imul
cmpsl
les
sub
lahf
push
mov
ficompl
movsb
hlt
aaa
clc
lret
jge
add
pop
and
test
jg
or
repnz
cmp
bound
out
pop
les
mov
sbb
aam
add
sub
lods
imull
adcl
js
jmp
and
daa
pop
movsl
pop
or
outsl
mov
mov
mov
mov
sub
xchg
in
cli
add
sub
addr16
or
jp
and
lods
lahf
mov
mov
fiadds
cmpb
int3
jae
jg
jg
out
lods
les
mov
leave
cmp
jne
pop
mov
xlat
xchg
or
call
int3
shr
stos
xlat
insl
inc
ret
pop
or
aam
jmp
mov
sub
shlb
push
mov
xor
inc
xchg
pop
ds
xchg
fisubrl
cld
sti
dec
xchg
packsswb
adc
dec
and
ljmp
jle
inc
std
push
out
aad
test
call
dec
inc
rcrb
inc
or
jmp
dec
movsl
xlat
and
jne
outsb
sbb
xchg
std
cs
ret
pop
xor
nop
movsl
shll
mov
push
fucomi
into
loopne
ret
xchg
test
inc
and
pop
mov
subl
test
inc
push
hlt
push
push
sbbb
and
mov
mov
or
ffreep
fldt
mov
lret
mov
cmp
dec
xor
push
mov
cwtl
in
cmc
in
in
lods
out
sbb
mulb
and
sub
xchg
je
enter
test
and
jae
and
push
sub
xchg
aam
std
insb
push
or
in
fsub
dec
push
cmp
sub
pop
pop
or
and
push
mov
add
jg
push
adc
clc
push
cmpsb
lahf
in
shrl
lea
lods
xchg
adc
hlt
jmp
addr16
test
or
loopne
out
mov
xchg
inc
adc
mov
data16
insl
fstpt
movntps
cmp
sub
xor
xchg
scas
pop
out
shr
xlat
xor
stc
hlt
dec
jg
push
and
add
ja
bound
lahf
dec
inc
xor
hlt
adc
xchg
xor
add
dec
xchg
pop
push
mov
pop
push
aam
shrl
fildl
fcom
roll
lods
lret
loopne
mov
inc
lahf
or
add
jl
in
scas
sahf
roll
sbb
mov
xchg
adc
cmpsb
inc
push
push
sbb
cli
fsubr
andl
push
fldl
xor
pop
mov
sub
lds
ja
jmp
scas
dec
push
test
sarb
dec
push
xor
popa
mov
sbb
loop
xchg
and
les
push
int3
inc
xchg
mov
scas
adc
or
pop
add
inc
enter
xor
sbb
jo
lods
ret
add
push
sti
adcb
add
and
iret
lock
ret
test
adc
lock
repnz
mov
mov
test
mov
or
stc
lcall
xchg
pop
push
jo
xchg
dec
pop
clc
loopne
fbld
imul
mov
fs
jge
dec
cli
push
jge
adc
add
ficoml
je
push
add
pop
adc
insb
and
jl
mov
xorl
in
movsb
pop
lea
mov
xlat
sbb
push
and
shrl
js
jle
in
push
enter
incl
into
xor
xor
jg
xchg
push
push
cmp
mov
add
aad
add
jp
lret
fcoml
movsl
push
out
fidivrl
or
xchg
test
psubw
mov
cmp
std
push
lcall
das
ret
fsubl
inc
mov
dec
enter
out
fstps
sub
adc
imul
rclb
push
xchg
cs
test
negl
xchg
and
js
addr16
and
xchg
lods
jcxz
xchg
pop
lcall
pop
test
add
pop
imul
lods
xchg
out
or
push
push
sbb
call
cmc
out
idivl
shl
jns
rcr
xor
push
lods
and
call
lock
or
subl
mov
lods
into
cmpsl
cli
frstor
sub
jle
xchg
push
or
divl
rcrl
shlb
xchg
repz
xor
dec
add
add
xor
fisubl
arpl
inc
sbb
fsubl
mov
rorb
xchg
icebp
out
jbe
jle
dec
stc
and
arpl
stos
aam
imul
sub
cmp
das
es
cltd
lea
mov
test
int3
mov
dec
mov
adc
add
aaa
dec
sbb
fistpll
add
lds
xchg
je
lods
lea
xor
xchg
or
xchg
or
loope
push
add
pop
push
mov
jmp
mov
mov
and
xchg
arpl
pop
mov
jnp
jnp
jbe
sub
sbb
out
and
pop
cmpl
xor
mov
ljmp
scas
push
aaa
aam
insb
inc
pop
das
lock
outsl
les
leave
rcrb
sbb
cli
xchg
jne
inc
and
imul
and
mov
ret
mov
mov
add
shrl
mov
inc
nop
adc
pusha
test
in
fnsetpm(287
mov
outsb
iret
in
js
xchg
andl
cmp
addr16
xchg
cmpsb
cmp
sub
push
dec
sub
sbb
push
cs
sahf
cmp
pop
mov
loop
xchg
js
mov
xor
cmp
in
mov
out
mov
movsl
mov
adc
repnz
movsb
mov
notl
or
nop
pop
sub
or
sub
jnp
mov
fsubp
adc
pop
cld
aaa
into
sub
sub
loop
push
mov
xchg
shlb
inc
loope
inc
loope
xchg
jae
jae
stc
nop
lea
pop
xor
mov
push
mov
pop
pushf
mov
inc
mov
lret
int
sbb
shll
pop
mov
lock
sub
jne
lahf
add
or
lods
add
cwtl
or
mov
mov
fnsave
clc
iret
pop
js
inc
insb
pushf
mov
icebp
inc
or
std
idivb
or
int3
cmpsl
cmp
jge
xchg
xor
lret
in
test
push
jb
push
jg
shrl
neg
std
fistpll
mov
hlt
rorl
xorb
cmp
divb
pop
xor
inc
fnsave
es
xor
add
lret
xor
and
sub
jno
aaa
mov
jbe
arpl
push
adc
or
mov
add
lahf
fsubrl
add
in
stos
add
out
insl
or
pop
push
vfrczps
adc
pop
sahf
dec
sbb
dec
lds
sti
ret
ret
ss
sahf
daa
daa
stc
push
and
icebp
neg
jmp
cwtl
sub
int
xor
inc
testl
pop
inc
jecxz
loopne
sub
das
or
pop
iret
loope
in
pop
js
fcmovnb
or
ret
imul
mov
or
sub
push
inc
and
mov
sbb
aas
sahf
lcall
aaa
or
dec
call
adc
pop
sbb
mov
xor
push
test
idivb
inc
pusha
es
loopne
fdivrs
mov
jle
xlat
push
xchg
loop
mov
xor
cwtl
aaa
out
ja
push
jns
test
in
insl
and
fildl
out
stos
in
repnz
mov
xchg
lret
or
out
ret
enter
int3
cmpl
cmp
add
ret
icebp
adc
mov
scas
xchg
sahf
push
push
outsb
or
xor
test
and
aaa
in
mov
push
sbb
xchg
mov
shr
clc
cmc
movsl
inc
ss
aaa
dec
stc
decb
pop
jbe
js
push
mov
dec
dec
mov
subl
push
rorb
mov
in
aad
je
dec
xchg
out
xor
jno
xlat
jmp
int3
xor
adcb
mov
and
add
xor
xchg
inc
mov
push
xlat
cmp
loopne
fimuls
push
add
repz
xchg
xor
pop
sub
loop
mov
pop
cmpsl
xor
jmp
lock
cwtl
inc
cmpsl
fucomp
aam
and
shll
imul
push
insb
data16
insl
ret
fildl
cmp
add
ret
fcompl
push
ficomps
outsb
jmp
sub
lods
or
xchg
inc
test
lods
imul
cld
cmp
and
add
addr16
mov
pop
in
sbb
mov
jle
mov
leave
mov
movsb
lds
loop
lret
push
orb
cmpsl
and
jnp
mov
mov
sbb
sub
or
push
mov
enter
push
lock
lret
xorl
inc
sti
push
rol
movsl
pop
push
ret
hlt
jns
addr16
sub
push
xchg
sub
leave
lret
or
out
xor
mov
dec
add
je
mov
sub
fsubp
loope
stos
mov
xchg
jge
pushf
push
repz
xchg
cmpsl
or
push
mov
aam
out
sbb
es
jle
xor
sub
sbb
dec
scas
push
pop
mov
sub
mov
enter
push
in
mov
mov
inc
jl
cmp
jns
sbb
and
jo
xor
sbb
pushf
jae
icebp
ds
mov
das
jne
scas
xchg
arpl
xorb
in
xchg
ds
pop
dec
lods
cli
cltd
jecxz
and
xor
dec
sub
mov
daa
ret
andb
inc
jg
sbb
outsb
mov
pushf
dec
sub
loop
dec
mov
mov
cli
mov
dec
sub
test
push
stos
out
nop
lds
out
mov
into
lods
push
aas
and
mov
xchg
dec
mov
jle
cmc
push
leave
dec
mov
out
inc
enter
dec
xchg
push
faddl
arpl
pop
cmp
and
pusha
cmc
in
stos
xchg
inc
xchg
push
push
cmc
int3
mov
popf
mov
mov
push
es
rorl
fcomp
sbb
stos
or
cwtl
hlt
mov
sub
clc
cmc
xchg
dec
pop
in
sarl
lds
std
push
aas
out
sub
mov
sar
sbb
in
addr16
cmp
push
pop
cmp
ret
push
arpl
mov
mov
iret
sarl
sbb
mov
push
xchg
adc
sbb
inc
inc
jecxz
jne
loopne
pop
clc
lea
out
sbb
push
filds
mov
mov
popf
jb
mov
pop
enter
test
adc
inc
pop
sbb
lret
data16
jmp
inc
mov
adc
push
les
lds
mov
jns
addr16
add
or
jmp
jae
xor
lock
call
dec
push
fldl
mov
pop
cmpl
and
xor
xor
adc
bound
sbb
cltd
sarl
cmp
icebp
cmp
push
js
and
out
jno
xchg
lcall
les
mov
imul
gs
clc
mov
push
pop
les
sbb
aad
movsb
insb
mov
sar
fadds
addb
jecxz
push
into
push
adc
dec
in
fstpt
xorl
sub
xor
push
push
jno
push
stc
mov
arpl
mov
push
in
aaa
scas
cld
ss
xchg
popf
sub
repnz
test
adcl
dec
mov
mov
pop
mov
sub
fidivrl
fwait
push
dec
mov
dec
add
les
pop
divl
into
testl
mov
xor
xchg
dec
adc
lds
adcb
loopne
add
xchg
add
jb
fwait
hlt
in
push
icebp
mov
mov
faddl
xor
movsl
data16
inc
mov
sub
push
ljmp
fwait
test
sub
fstps
pop
sub
add
inc
xor
out
fdivl
aam
fidivrs
xchg
push
testl
ds
push
push
xchg
dec
adc
mov
jmp
push
fs
ss
cmp
adc
push
sub
or
sti
mov
out
mov
xchg
mov
mov
pop
push
and
adc
mov
repz
out
fs
addb
daa
leave
addr16
sub
std
pop
cmp
es
mov
xorl
mov
ljmp
loopne
das
aas
out
mov
adc
and
cld
cmp
push
jl
push
dec
lcall
jmp
adcb
dec
shll
enter
mov
sbbl
push
xlat
je
es
inc
das
jae
xor
xor
ret
mov
dec
jae
or
xchg
mov
sbb
xchg
loopne
inc
test
int
mov
sahf
stos
jne
mov
lret
jp
popa
adc
sub
mov
xor
popf
jle
inc
pop
inc
out
mov
cld
and
mov
push
adc
in
lea
fwait
mov
mov
xlat
stc
jae
nop
loopne
dec
call
pushl
push
out
fxch
stos
sbb
cmp
ds
jo
ret
sbb
ljmp
imul
push
adc
and
repnz
enter
fdivrs
in
bnd
cmpsl
in
mov
imul
aam
enter
mov
into
movl
leave
dec
sbb
sbbl
mov
mov
insb
push
xchg
jmp
es
sti
pop
pop
mov
cmp
or
das
and
or
jmp
shl
add
addb
adc
push
push
insb
cmp
lock
cmpsb
jecxz
xchg
in
push
adc
inc
mov
jbe
out
jle
clc
sub
dec
sarb
mov
outsb
push
mov
loope
and
add
sbb
xorb
je
pop
pop
add
jle
notb
les
testb
call
mov
enter
lock
mov
xlat
mov
jno
dec
dec
cmp
push
cmpsb
mov
negl
out
jmp
out
out
sbb
shlb
int
sub
lock
aam
add
adc
pop
inc
ss
and
push
pop
sahf
and
pop
imul
mov
mov
movsb
xor
jl
push
sub
sbbl
in
mov
or
adc
cmc
repz
pop
aam
insb
insl
inc
xor
loope
popa
aad
repz
clc
mov
jbe
and
lret
and
test
mov
jns
aam
nop
pop
test
test
push
sbb
into
mov
xchg
mov
jno
pop
pop
ret
pop
jmp
mov
lahf
les
push
call
dec
dec
cmp
mov
adc
cld
aam
jp
js
push
shl
dec
repz
sbb
or
loopne
xor
mov
add
push
mov
sub
xor
mov
adc
and
call
mov
jge
jns
popf
adc
pushf
in
ss
ja
in
push
insb
jne
mov
mov
or
mov
rcr
jne
subb
xor
push
adc
movsl
subb
adc
push
jno
mov
insb
jle
movsl
and
push
rcl
js
aaa
jmp
es
adc
sbb
lcall
cmovge
shl
into
test
jecxz
ret
xchg
fidivl
rorl
test
cltd
ret
xchg
sub
jo
jecxz
scas
lsl
cmp
adc
aas
lahf
mov
push
xchg
or
or
dec
inc
cmp
add
test
sbb
jnp,pt
sbb
inc
outsb
out
orps
imul
fstpl
ret
not
mov
mov
push
cmp
inc
jne
bound
and
and
cmp
cs
add
fisttpl
fistpl
sbb
icebp
push
sub
arpl
adc
xchg
rorb
je
divb
mov
sbb
pop
ficompl
inc
call
test
sbb
push
jae
xorl
int
out
mov
pop
cmpsl
repz
movsb
push
ljmp
in
inc
inc
pop
repz
adc
rol
les
inc
mov
push
jp
pop
xchg
nop
add
mov
call
cwtl
call
mov
js,pn
dec
adc
aam
iret
decb
push
lcall
lret
sub
adc
push
dec
inc
ja
loope
jp
shr
shll
sub
ljmp
pop
xchg
out
addr16
jmp
xlat
roll
adc
std
and
push
fsubs
xor
arpl
push
mov
jns
lea
add
lea
or
addb
mov
and
fnsave
sbb
pop
sbb
ljmp
push
lods
mov
and
mov
inc
xchg
call
xchg
gs
add
pop
sbb
or
adc
sbb
int
loop
in
xchg
or
jg
dec
fidivrs
jb
out
rcl
cmpsb
mov
xor
or
addb
cmc
insl
inc
jae
inc
xor
mov
scas
pop
sahf
movsl
pop
cltd
ret
stos
inc
imul
inc
sbb
xchg
incb
aas
aad
cld
mov
testl
xchg
mov
sahf
lcall
paddsb
add
jns
enter
xor
dec
lret
jl
int
mov
lcall
push
mov
and
mov
jecxz
mov
adc
imul
test
loopne
jae
loop
mov
leave
int
jno
cmpsb
pop
xorl
cmp
sar
pop
add
xor
inc
icebp
cmpsb
pop
out
test
xchg
imul
idivb
sahf
add
dec
mov
cmp
cmp
inc
mov
push
inc
jmp
inc
in
mov
xor
orb
xor
pop
movsl
xchg
lods
cmp
jmp
sbb
sbb
insl
jl
add
das
xchg
mov
insl
jl
mov
std
lret
stos
jbe
sub
pushf
cld
jne
out
push
insb
insb
hlt
imul
sub
cltd
es
adc
shll
mov
jle
or
pop
pop
dec
aaa
into
adc
push
stc
arpl
iret
mov
mov
xchg
shr
or
hlt
mov
add
repnz
mov
frstor
lcall
notl
in
gs
fdivs
fs
xor
push
in
stos
and
scas
push
clc
js
mov
lods
aaa
push
adc
xchg
pop
subl
mov
imulb
imul
mov
fsub
insl
andb
aaa
mov
cmc
fsubs
lea
je
or
sti
paddusb
cmovbe
arpl
arpl
and
lret
pop
mov
mov
cmp
xor
cmp
bnd
scas
pop
popa
push
mov
movsb
jne
add
orb
push
mov
fwait
sub
test
lea
roll
add
dec
xchg
rcll
in
cwtl
in
out
jecxz
lods
jne
add
sahf
shrl
dec
loope
mov
push
fcomps
mov
rclb
lea
inc
or
adc
shll
dec
lahf
jb
jnp
xchg
lahf
std
fcoms
xchg
pop
sbb
sbb
fiadds
nop
inc
mov
sbb
cmp
or
popf
lds
add
adc
sbb
imul
leave
mov
hlt
in
adc
mov
push
std
mov
aam
ret
cld
inc
loopne
outsl
sbb
and
mov
or
push
xor
outsl
pop
in
mov
add
mov
lods
call
scas
in
push
repnz
push
sbb
int3
imul
fmuls
mov
scas
jge
xchg
ds
xchg
adc
mov
sbb
cmp
faddl
dec
sti
dec
jae
icebp
cmp
jge
push
nop
movsb
shll
add
fstp
cltd
push
push
and
aas
jg
dec
lcall
inc
shll
mov
out
dec
movsb
jb
arpl
mov
in
adc
mov
jnp
add
jno
xchg
ret
push
mov
sub
fwait
pushf
rcll
pop
jmp
cmp
xlat
je
pop
into
aas
clc
dec
mov
inc
in
fadds
iret
repz
jp
movsb
shl
test
mov
mov
negb
std
mov
xchg
and
pushf
cmc
repnz
fs
ds
cmp
jno
js
in
add
rcl
push
xor
inc
out
mov
dec
pop
adc
adc
mov
pop
cmpsl
fwait
es
icebp
xchg
sbb
in
xor
test
mov
test
test
ds
das
and
shrl
xchg
add
es
scas
lods
cltd
pop
mov
popw
and
or
jp
in
popa
shll
movsl
push
xchg
and
cmp
lret
xor
das
xchg
pop
sub
or
jmp
push
pushl
sbb
jle
inc
fcoms
add
or
pop
fstps
mov
xor
negl
mov
push
out
sub
sub
mov
sub
incl
add
pop
adc
jl
push
gs
enter
inc
stc
xor
jmp
int3
sbb
mov
push
outsb
push
sub
adc
data16
sbb
loop
adc
mov
outsl
subb
test
mov
xchg
and
lods
movl
add
lods
leave
xchg
lcall
push
in
and
cltd
in
int3
dec
outsl
aas
xor
push
mov
mov
mov
xor
repz
dec
sub
insl
and
mov
pop
inc
inc
cmpsb
xchg
daa
and
gs
xchg
sbb
push
ljmp
mov
shrl
or
xchg
jge
shll
xchg
jg
insl
stos
imul
shlb
jmp
pop
sub
loope
or
dec
mov
aad
in
lea
fists
nop
jns
pop
cld
push
cs
inc
inc
pop
movsl
fcoms
mov
loope
xchg
outsl
ljmp
inc
push
pop
popa
mov
cmp
jecxz
cld
mov
jo
mulb
data16
imulb
dec
in
pop
je
fildll
sahf
divl
inc
call
shll
dec
imul
push
inc
les
icebp
and
insb
pop
inc
and
es
push
subl
fdivl
lds
es
icebp
cmp
dec
into
sbb
jle
jmp
nop
cli
mov
jecxz
xor
and
popa
pop
cmp
or
adc
add
push
fiadds
inc
cld
pop
jg
push
add
bound
jbe
js
mov
jg
pop
sahf
in
inc
mov
mov
mov
sbb
std
call
xchg
add
lods
jl
imul
leave
mov
dec
dec
rorl
push
daa
xor
xor
mov
sbb
loop
xor
pop
and
pop
mov
gs
or
and
mov
fisubrl
in
pop
add
imul
fists
add
ret
out
jbe,pt
add
xor
jp
and
and
cmp
mov
add
loopne
mov
les
dec
sti
inc
inc
jns
jmp
dec
mov
ret
sub
add
gs
popa
movsb
add
mov
insb
fwait
iret
shrb
mov
test
cli
incb
cmc
cmp
jno
or
mov
add
ss
pop
cmc
and
iret
mov
jmp
flds
xchg
jae
sbb
xor
dec
test
lods
push
fs
inc
test
stos
ret
mov
xor
jl
mov
cmp
mov
jo
mov
idiv
mov
pop
mov
pop
out
inc
adc
jne
xor
mov
bound
adc
sub
imul
inc
jl
jnp
and
das
push
mov
push
sbb
inc
jge
fisubrl
test
xchg
enter
sub
sub
lods
cmp
jbe
test
pop
arpl
lds
mov
leave
into
pop
dec
arpl
cvtpi2ps
mov
rep
mov
cs
mov
jmp
repnz
call
inc
in
imul
movsb
negb
leave
adc
iret
adc
and
in
sbb
cmpsl
xchg
sub
popa
push
call
lds
outsl
test
cmp
imul
ljmp
cmpsl
mov
imul
clc
faddl
jg
fcmovu
and
fcomip
xchg
sub
movsb
pop
cld
popa
jnp
add
test
pop
fstl
pop
mov
gs
sub
aaa
addr16
jp
sbb
movsb
push
test
mov
push
andb
dec
int
cmp
outsb
adc
cmpsb
mov
or
fwait
xchg
jnp
test
jge
mov
sahf
int3
into
inc
dec
adcl
in
idivb
out
fisubrl
pop
push
adc
subl
repnz
pop
mov
lods
xchg
cmp
loope
cmpsb
xchg
pusha
adc
into
add
sub
je
pop
add
cmp
pop
mov
dec
fldl
lods
jecxz
test
jecxz
enter
pop
shl
scas
pop
sahf
cmp
sbb
dec
shll
or
or
jb
add
adc
sbb
cwtl
and
in
mov
jne
lock
xor
addr16
inc
mov
push
stc
loopne
arpl
adcl
add
sub
or
sub
add
or
mov
es
cmp
adc
mov
inc
cltd
arpl
pop
cltd
in
dec
hlt
lock
dec
mov
pop
std
loope
push
enter
call
push
pop
les
sahf
and
xor
pinsrw
dec
adc
xchg
jb
mov
iretw
imul
jle
xor
mov
adcl
fidivrl
push
mov
cmpl
mov
aam
andb
xchg
jg
cs
jnp
loopw
cmpsb
mov
adc
mov
out
jne
pop
mov
mov
in
into
sub
mov
sub
imul
inc
in
in
fs
jne
xchg
das
xor
adc
cs
in
imul
ss
or
fs
rolb
and
inc
xchg
xor
test
mov
das
fldl
push
lods
aad
rcrb
xlat
jo
lcall
mov
out
sub
jo
fs
das
sbb
stos
outsb
js
xor
fwait
daa
je
mov
adc
lods
aas
orl
mov
push
or
cmpsb
popa
cwtl
xchg
leave
xor
sbb
mov
icebp
sbb
mov
pop
sub
int
out
inc
cmp
icebp
aaa
sbb
mov
sub
pop
jae
mov
scas
push
pushf
pop
add
sahf
ds
out
mov
test
adc
push
jmp
fbld
roll
aaa
xor
popf
mov
inc
add
stc
movsb
add
pop
dec
aam
push
insb
pop
in
sub
sbb
dec
nop
js
jb
jbe
rolb
clc
lea
scas
cltd
je
loope
scas
sbb
sar
clc
push
jle
fisttpl
loopne
lahf
call
lods
gs
sarl
bound
ret
insb
or
xchg
int
hlt
ja
pop
push
cli
fdivl
or
lods
call
scas
stos
js
addl
push
push
sti
loopne
mov
into
not
test
adc
addr16
das
movsb
push
in
fs
outsb
push
lods
pushf
xor
cmpsb
lret
sbb
fnstenv
lea
fstpt
jmp
xor
fs
fwait
imul
xchg
pop
aaa
int
das
loope
fdivl
add
mov
std
lods
in
push
fdivl
inc
xchg
mov
sub
pop
aam
out
cs
iret
cld
mov
add
jbe
sarl
cmp
test
dec
shlb
insb
call
hlt
xchg
inc
inc
sbbb
xchg
pop
outsl
idivb
push
and
cmp
jns
popa
xor
enter
popa
pop
test
and
push
sbb
rorb
jg
mov
jecxz
fnstsw
out
popf
stc
aad
sub
sbb
rolb
sbb
popf
push
daa
jge
dec
jne
lods
aaa
std
sarl
or
jmp
mov
inc
test
ds
inc
lcall
and
adc
mov
test
shlb
cld
fildll
clc
or
loopne
cmp
sbb
ret
xchg
aaa
lods
push
out
test
scas
or
sbb
aaa
mov
jb
leave
xorl
mov
sbb
iret
movsb
mov
push
testl
es
push
mov
lods
cmp
mov
or
jns
mov
lds
mov
cli
insb
popf
fisubrs
ficoml
into
adc
enter
pop
fwait
add
fs
xor
sbb
aam
xchg
jg
sub
insl
mov
test
orl
aam
xchg
or
mov
sarb
mov
fcompl
mov
rcrl
inc
inc
xchg
adc
and
mov
or
jp
jns
fsub
sti
pusha
mov
lret
mov
es
stc
stos
enter
cwtl
fwait
pop
inc
cli
mov
push
push
push
mov
int
insb
mov
test
cmc
or
inc
push
sub
call
sub
pop
clc
test
call
jns
pushf
sub
mov
jno
push
ret
shlb
sbb
das
es
lcall
repz
imul
or
inc
xchg
cs
pop
movsb
leave
xor
aam
jge
addb
aaa
xor
movsb
fists
adc
divb
pop
subl
hlt
shlb
mov
cmp
cmpsl
sbb
sbb
jno
push
addr16
sbb
loop
jnp
enter
xchg
dec
jo
jmp
adc
or
inc
push
subb
dec
mov
xor
leave
imul
mov
or
add
pop
mov
pop
mov
push
or
sub
sub
jp
iret
fdivp
adc
movsb
loop
jecxz
test
push
sbb
pop
repnz
shlb
dec
add
jae
out
and
cmp
mov
fwait
pop
push
stc
in
adc
ret
cmpb
cmp
mov
xchg
xchg
jecxz
sbb
smsw
in
fildl
lcall
xlat
cmp
fdiv
pop
push
cmc
lock
or
sbb
ds
add
pop
sub
sbb
cmc
mov
inc
sbb
addb
push
pushf
pop
cmpsl
fisubs
push
addr16
push
push
or
add
lods
fldcw
cs
sbb
clc
pop
cwtl
test
div
xor
cmp
add
addr16
dec
xlat
ljmp
sub
and
adc
aaa
xchg
fsubrs
fcompl
jno
stc
dec
dec
test
cmc
mov
xchg
mov
ljmp
inc
sub
push
sarl
mov
lds
jb
pop
inc
or
repnz
sarl
sbb
fstpt
xchg
gs
sub
ret
dec
fstl
sub
cmp
aas
mov
mov
xchg
cmp
jge
fmull
sub
daa
inc
fwait
jns
adc
pop
rcrb
inc
adc
push
fisttpl
dec
test
scas
lock
dec
dec
sub
adc
adc
mov
pop
lods
repz
packuswb
fiaddl
xor
imul
pop
pop
aas
push
mov
insl
or
xor
cmc
insb
jb
loope
sub
adc
push
into
or
emms
in
mov
out
inc
sbbb
enter
dec
ja
pop
lea
dec
mov
jg
iret
pushf
push
xchg
lea
sbb
xchg
rcrl
pop
sub
xor
cmc
mov
cmp
jno
das
les
imul
jae
cmp
sub
push
cmp
push
int
sbb
add
push
push
popf
movsl
ja
shlb
push
inc
adc
outsl
hlt
inc
push
inc
pop
sbb
mov
ret
adc
inc
sub
add
push
jecxz
in
cmpsl
mov
pop
shlb
push
xchg
cld
aam
sbbl
stc
inc
and
and
push
or
mov
mov
call
int3
and
mov
push
push
pop
or
sub
mov
sub
sub
mov
stos
push
sub
mov
sbb
or
jge
mov
add
aad
loop
lds
jbe
add
aaa
mov
and
idivb
into
push
pop
pop
repnz
jecxz
add
adcl
push
std
inc
cmc
pop
clc
inc
jns
imul
pop
mov
add
lcall
adc
pop
cwtl
xchg
or
pusha
popa
mov
sbb
rorb
fisttpll
mov
push
pusha
jnp
xchg
add
sbb
loope,pn
cmp
addr16
jne
mov
pushf
pop
ds
lods
test
adc
jbe
sub
ja
je
les
out
ss
out
adc
in
mov
divl
enter
out
pop
test
push
push
jns
dec
gs
sub
aad
xor
xlat
xchg
and
or
fistpll
loopne
jg
sub
lea
xchg
cmpsl
xchg
cld
mov
ss
mov
in
fbld
leave
lret
push
lods
fwait
xchg
jne
cmp
push
daa
inc
cmp
mov
add
cmp
mov
movsb
push
movsb
pop
imul
mov
xchg
sbb
or
dec
mov
or
hlt
inc
je
add
and
jno
or
sti
pop
into
pop
sbb
or
enter
and
shr
mov
dec
addr16
pop
push
cmpsb
sub
test
jg
fsubs
loope
push
repnz
imul
popa
in
inc
dec
or
mov
xchg
or
jno
orb
out
jecxz
scas
cmpsb
push
mov
and
add
push
jo
or
or
sub
test
pop
pop
popa
call
mov
rolb
xchg
test
mov
mov
push
add
repz
call
dec
mov
or
adc
dec
jp
cmp
repnz
and
jns
mov
push
xlat
pop
imul
mov
add
leave
cmc
aad
loop
lcall
sbb
adc
inc
jp
xchg
stos
stc
mov
aaa
loopne
je
or
jge
gs
aam
shr
es
dec
cmp
mov
out
je
fcomps
addr16
cld
cmpsl
dec
pop
push
and
cld
push
sub
pop
aas
mov
lea
out
into
xor
pop
jge
pop
cmpl
sarb
inc
in
scas
dec
xor
mov
stc
notb
jecxz
clc
imul
lock
and
repnz
inc
daa
push
out
jle,pn
xchg
dec
repnz
mov
xchg
les
inc
pop
hlt
addw
shll
out
aad
jnp
sbb
jb
adc
clc
xchg
add
call
mov
pop
and
sub
dec
and
mov
lds
inc
arpl
fbstp
nop
lods
mov
fimull
out
cmp
iret
mov
xlat
inc
pop
dec
add
jge
sub
scas
jecxz
adc
inc
xor
ds
xlat
daa
jne
adc
push
outsl
jae
mov
fcomps
ss
out
popf
xor
test
cmpsb
xchg
mov
mov
test
stc
leave
jbe
test
lcall
lea
or
mov
inc
adc
or
test
jb
icebp
rcll
int3
mov
inc
and
jl
loop
outsb
stos
repz
mov
ret
add
dec
push
sub
and
std
xor
add
jle
dec
xor
int3
mov
sub
popa
mov
jnp
mov
mov
popa
mov
dec
adc
orb
rorb
mov
fistps
cmc
mov
cwtl
xor
jg
jp
ret
push
aaa
es
push
mov
sub
je
inc
jl
test
xchg
jmp
in
outsl
orb
xchg
int3
jp
sub
pop
and
mov
adc
cmp
loop
test
jle
stos
add
out
or
xchg
cmpsb
pop
xor
jmp
mov
mov
scas
popf
fwait
add
ficompl
insb
jnp
or
jo
push
push
push
or
aad
mov
movsl
aaa
mov
stos
xchg
movsb
xchg
push
xlat
ljmp
dec
mov
sbb
sbb
arpl
inc
out
lods
jb
stc
or
out
sarb
mul
leave
aam
int3
movsl
loope
popl
add
sub
jg
gs
lea
faddl
mov
cmc
sub
lret
lret
mov
ret
dec
int3
ror
pop
xor
dec
cmp
sbb
scas
int
imul
in
outsb
aas
lock
ljmp
jae
dec
andl
mov
popf
cmpsl
cmp
jl
jecxz
icebp
in
mov
xchg
inc
sahf
ffree
popa
or
pop
fistps
add
je
int3
daa
sub
mov
or
cmp
and
push
xchg
add
stos
outsl
lods
mov
stos
cmpsl
shl
xchg
pop
dec
jge
sar
add
xchg
rorl
sub
push
mov
dec
push
push
ss
mov
cwtl
test
push
fidivrl
fists
and
ljmp
sahf
and
js
mov
add
enter
inc
mov
xchg
or
mov
xor
mov
ficompl
icebp
mov
iret
push
loopne
dec
mov
nop
sbb
je
lret
xor
xchg
sbb
sbb
fwait
mov
loope
dec
and
sbb
lahf
push
ljmp
dec
movsl
push
outsb
pop
dec
sub
jb
jmp
inc
or
or
cli
add
sub
insb
mov
mov
pop
sahf
pop
sub
xor
outsb
jae
les
insb
cmp
insb
lods
pop
adc
scas
mov
mov
add
pushw
xchg
mov
mov
ret
pop
push
aas
jnp
xchg
outsl
lods
pop
ds
push
popf
and
or
sub
dec
out
or
adc
lcall
aaa
out
and
inc
push
jns
jle
int
repnz
dec
jmp
mov
js
or
jns
hlt
sub
xor
ss
cmp
add
out
imul
and
lds
jmp
xor
lods
nop
mov
movsb
push
hlt
iret
cmpsb
mov
sbb
loopne
sahf
fsts
jge
call
stos
out
adc
or
fistpll
test
sub
mov
push
lcall
add
xlat
jae
jecxz
je
aad
addl
into
imul
ss
sbb
sarb
jp
add
xchg
adc
popf
mov
pop
repz
scas
daa
test
sbb
pop
add
mov
icebp
xchg
mov
mov
mov
jno
sti
jle
mov
mov
pusha
fdivrl
push
pop
xchg
stos
push
and
sbb
add
sahf
mov
push
data16
xchg
adc
je
xor
jl
pusha
pop
mov
lahf
jne
shll
mov
sbb
jle,pn
and
sbb
sub
pop
cmp
mov
xchg
inc
pop
jae
pop
loopne
out
test
arpl
stos
push
push
popf
into
in
rolb
mov
mov
popa
call
and
insb
rcrl
std
mov
jmp
xlat
incb
notb
push
hlt
xor
cmp
inc
add
sub
das
insb
cwtl
daa
arpl
aad
cmpsb
xchg
sub
add
in
mov
xlat
xor
xchg
lret
push
rol
jecxz
mov
fisubs
rorb
scas
in
je
mov
sub
mov
fisubl
adc
inc
xor
push
mov
mov
xor
sbb
roll
push
dec
jl
xchg
push
jbe
add
pop
pop
insl
stos
into
lea
repnz
mov
repz
int
inc
mov
fdivr
clc
jl
outsb
das
push
aas
mov
or
cmpsl
mov
orb
xor
js
jno
es
les
pop
mov
adc
std
fsubrs
inc
sbb
imul
push
sub
push
xchg
xchg
ss
ja
std
pop
mov
push
jle
and
mov
push
xor
xchg
roll
jae
sahf
das
sub
lods
pop
pop
adc
dec
jae
and
sbb
in
in
sbb
mov
cmp
or
push
movsl
ret
sbb
lods
dec
int
sahf
dec
fucomip
jae
out
in
test
sbb
fistps
fildl
clc
fstl
jecxz
repz
dec
add
mov
xchg
mov
cmp
cmp
dec
mov
mov
dec
xor
xor
mov
push
and
cmp
xlat
test
outsb
adc
fstp
xorl
mov
sub
icebp
mov
push
xor
call
sbb
aad
push
rcrb
ljmp
jg
fisubrl
mov
or
mov
dec
fiadds
pop
out
test
xchg
sub
push
mov
add
pop
test
dec
shll
adc
lods
cmp
inc
ljmp
inc
cmp
xchg
xor
popf
sbb
pop
or
shll
cmpsl
push
adc
mov
nop
rcl
xchg
scas
jbe
and
cs
inc
stc
jb
ljmp
fadds
xchg
and
add
mov
pop
loopne
lea
ds
sub
sbb
lcall
xchg
dec
loopne
push
mov
add
mov
add
adc
adc
mov
cli
or
cmc
xchg
xor
add
sub
jmp
roll
int
push
in
mov
pusha
adc
xchg
call
imul
xor
imul
arpl
fwait
push
std
adc
stos
push
mov
stos
lcall
push
inc
std
sbb
xchg
dec
mov
mov
clc
inc
jbe
inc
sub
sbb
jns
xor
lock
cmp
repnz
xchg
shrb
std
aad
jmp
subb
cmc
or
mov
test
test
in
fnstcw
bound
movsb
jmp
fistpll
mov
inc
shll
arpl
push
fiaddl
movsb
mov
push
pop
or
lcall
push
cmp
in
enter
aas
adc
into
lcall
xor
or
dec
push
in
gs
xchg
jmp
out
jp
arpl
lock
or
cmp
and
jmp
push
fcoml
pop
loope
sbb
rclb
dec
rcrl
xchg
jle
inc
test
cmp
fstp
lahf
dec
xor
mov
je
fs
leave
cmp
add
xchg
in
xchg
or
sub
jb
sub
jmp
cld
cmpsl
in
push
cmp
int3
les
pop
ds
rcl
pushf
add
loop
and
cmp
xor
sub
or
test
ds
dec
test
ret
jns
push
leave
add
mov
add
jg
lahf
push
sub
xchg
adc
bound
jne
ds
and
test
fstpt
test
jp
loopne
mov
movb
add
add
shlb
fcmovbe
jmp
add
xchg
iret
xor
cmp
mov
enter
aas
mul
shll
mov
pushf
and
mov
imul
cmp
xor
cmpsb
imul
adc
mov
inc
xor
sahf
xor
in
imul
dec
xlat
mov
xchg
scas
loop
mov
sbb
mov
fildll
repz
negl
dec
mov
inc
fiadds
mov
push
jmp
mov
cwtl
xor
jae
push
mov
mov
std
xor
popf
addr16
pop
arpl
cmc
inc
jg
xchg
sub
sti
lea
push
sub
jae
xchg
pop
cltd
jge
sbb
xlat
popa
sbb
cmp
or
scas
roll
jl
fildll
mov
cmp
ds
inc
cs
sbb
lcall
fists
fnstsw
push
adc
js
test
push
sarb
or
mov
add
cmp
fldl
test
shll
fwait
les
jecxz
push
xlat
xor
jb
jl
adcl
push
icebp
repnz
outsb
xor
pop
jmp
or
nop
roll
sti
bound
mov
mov
jns
rclb
lret
cs
or
add
sbb
mov
fisttpll
ss
add
mul
mov
cmc
and
lcall
lods
cmp
add
xchg
xchg
movsb
dec
lea
adc
add
hlt
xor
xchg
mov
lock
xor
pushf
enter
lods
sahf
cmp
xor
push
aas
mov
fsubrs
lods
pop
or
loop
lcall
jnp
jmp
pop
sbb
push
clc
xor
fwait
pop
mov
inc
sbb
jbe
push
push
and
xchg
inc
pushf
std
pop
lods
mov
push
dec
int
ret
or
jmp
push
push
fimull
dec
out
leave
adc
leave
dec
mov
test
and
xchg
jmp
cli
pop
add
fwait
mov
adc
sbb
push
adc
int3
add
adc
sbb
test
mov
cltd
push
clc
jae
aas
mov
pop
cltd
xor
mov
shlb
fwait
addr16
aam
push
lods
test
add
out
mov
data16
data16
add
movsl
sub
jne
xor
mov
shr
movsl
mov
in
and
or
into
lods
inc
jg
in
add
shlb
pop
xor
dec
push
repnz
outsl
cmp
cmp
repnz
rorl
xor
mov
dec
jne
push
imul
ret
lahf
out
xchg
xchg
iret
push
cld
push
jmp
jb
rorl
push
push
stos
aam
xchg
cmp
mov
inc
bound
jg
mov
or
outsl
xor
and
mov
imul
xor
jp
inc
or
sub
push
pop
cmpsl
test
mov
cmp
pop
add
add
sbb
dec
imul
sarb
in
jge
jo
incb
je
subb
add
fwait
xor
jle
inc
in
repnz
cmp
es
nop
rorl
enter
out
adc
sub
mov
mov
xor
enter
icebp
jp
ret
pop
fdivrl
mov
shrb
pop
imul
cmc
cmp
dec
shll
jge
add
cltd
test
setge
push
stos
adc
imul
mov
xchg
add
fwait
push
mov
inc
sbb
gs
dec
mov
ror
call
popa
pop
xor
test
lret
inc
addb
jo
mov
push
les
ret
adc
jns
add
fildll
fs
mov
xchg
sub
aam
fdivrp
insl
pop
test
outsl
push
xchg
pop
cmp
sbb
sbb
pop
sub
lahf
xor
lret
jecxz
add
pop
js
and
add
jmp
aas
popa
jns
pcmpgtd
xchg
cmp
inc
popf
jecxz
ljmp
add
int
sub
fs
mov
inc
inc
in
inc
test
loope
ret
in
inc
pusha
push
xchg
jge
clc
xor
mov
imul
adc
mov
fptan
jecxz
cwtl
and
call
es
outsl
loope
sub
sub
stos
mov
xor
out
loopne
jp
cmpsl
ss
push
sar
dec
push
jnp
jl
push
out
push
daa
push
push
rcrb
in
pop
pop
inc
bnd
fdivrl
imull
or
imul
and
pushf
sahf
sbb
test
inc
push
popf
pop
sub
jle
fs
or
insl
imul
test
fldt
dec
mov
pop
dec
xchg
jae
lds
div
pop
aaa
inc
pop
jo
addr16
lahf
lret
jle
shll
outsl
inc
cmpsl
xchg
sti
push
cld
push
jp
into
jg
aad
rol
mov
add
push
imul
psraw
ljmp
xchg
jo
pop
loop
pop
fiaddl
mov
sub
xchg
jge
mov
pushl
popa
dec
lret
pop
addb
pushf
adc
sub
shll
call
dec
fmulp
fadd
xchg
sub
ret
test
ljmp
movsb
stos
leave
mov
dec
jmp
adc
cmpsb
mov
sbb
jae
dec
andl
lods
cmc
jge
dec
hlt
cli
outsl
ret
cli
cmp
adc
xor
clc
lcall
jge
sbb
shl
mov
cld
jle
mov
mov
scas
out
pusha
into
mov
jg
mov
into
mov
dec
and
in
imul
shrl
sbb
pop
or
shrb
xchg
push
pop
mov
cmp
mov
mov
jle
pop
mov
fisubrs
loope
jae
aas
inc
icebp
nop
xchg
mov
imul
sti
les
test
mov
int
movsb
mov
pop
loopne
test
fldl
pop
out
and
shlb
xchg
test
mov
lods
stos
cld
add
mov
leave
sub
cli
ss
xchg
sub
inc
push
dec
inc
push
sub
les
adc
jmp
rclb
hlt
mov
inc
jle
inc
addr16
ljmp
jbe
jp
ficomps
arpl
cmp
mov
pop
int3
or
push
inc
or
push
ret
add
lahf
xor
je
sbb
adc
sub
aaa
mov
ret
test
cwtl
xchg
andl
pop
iret
das
mov
pop
out
stos
sti
sub
test
or
mov
xchg
xchg
cs
add
mov
mov
ljmp
lret
sbb
sbb
dec
lock
cli
and
data16
cli
or
pusha
adc
cmc
ret
cltd
xchg
mov
add
pop
jno
inc
and
rcrl
or
fwait
jnp
xor
cmp
in
push
loope
fldl
xchg
lds
and
jmp
push
cmpsb
pop
scas
jmp
or
mov
sbb
sub
loop
dec
icebp
dec
loopne
sbb
in
pop
dec
std
jmp
js
cmp
jp
mov
cmove
es
pop
or
xchg
mov
jbe
das
sbb
insb
mov
xchg
inc
incl
or
add
dec
mov
dec
or
or
mov
jle
sub
sub
pop
push
loope
xchg
or
js
add
pop
push
cmpsl
arpl
pop
sub
pop
mov
fbld
inc
fs
ficoml
call
negb
fsubrl
xchg
inc
scas
icebp
pop
mov
jle
jnp
stc
or
pusha
fldenv
push
fiaddl
dec
imul
xchg
rcll
enter
dec
or
cmp
and
fsubrl
std
mov
and
fcmovnbe
imulb
jmp
imul
leave
lcall
xchg
mov
adc
in
fisttpl
add
loopne
cmc
int3
int3
pusha
mov
stos
iret
mov
adc
cmp
mov
out
std
mov
and
lods
jl
cwtl
pop
nop
js
pop
shlb
jo
xchg
adc
mov
fisubl
xor
jle
push
lcall
mov
inc
outsb
pop
add
cmpsl
fnop
insb
jge
jge
fwait
inc
inc
mov
push
jns
push
cwtl
dec
dec
inc
add
repnz
mov
inc
inc
mov
xor
movsl
dec
fcompl
mov
push
repz
lds
and
dec
xor
sbb
adcl
jp
sub
and
aas
adc
inc
aam
mov
dec
mov
mov
push
mov
das
sti
sbb
loope
enter
fiaddl
xor
jo
or
adc
cmp
stos
or
or
ss
cmp
inc
shll
xor
pop
and
ret
sti
sti
shlb
mov
cmpsb
jle
mov
lods
test
ss
out
inc
add
push
add
sub
cmpsb
test
lahf
push
inc
pop
js
mov
dec
cmp
icebp
rclb
push
sub
das
pop
es
push
add
mov
inc
loopne
xor
pand
andl
enter
cmp
mov
mov
rclb
jne
push
enter
fcmovnbe
sub
rcrl
mov
cmp
in
dec
outsl
dec
jnp
and
das
cs
repnz
fwait
sub
in
sub
push
orl
sahf
pop
insb
pop
fisubs
mov
inc
mov
jle
pop
stc
dec
scas
mulb
sarl
pop
sub
pop
fisubrs
fiaddl
cmp
cli
cmp
dec
dec
push
cltd
lods
test
fsts
inc
in
ljmp
jbe
ret
mov
adc
push
jl
addr16
xchg
inc
mov
and
popf
outsl
imul
nop
mov
cmp
cmpl
cwtl
fistpl
mov
pop
pop
je
xor
pop
cld
int
fldt
add
push
lods
and
ret
fdivrp
and
pushf
push
lret
jp
lret
cmp
enter
loope
push
shrb
jmp
pushf
xor
mov
ret
ljmp
in
and
test
pop
push
subb
leave
int3
sqrtps
cmc
push
mov
inc
or
push
repz
mov
xor
cmovbe
xchg
das
pop
sbb
jp
xchg
xlat
dec
pop
outsb
sahf
pusha
inc
xchg
repz
sbb
filds
add
xor
and
mov
jmp
test
cmpb
testb
out
mov
das
adcl
fsubrp
mov
outsl
and
push
adc
shrb
ss
push
rolb
jbe
mov
sbb
sub
or
cmpb
negb
idiv
or
cli
rcrb
mov
adc
or
mov
loopne
aam
pop
insl
mov
arpl
pushf
das
out
jno
inc
cmp
jns
xchg
mov
jp
cld
xchg
fidivrl
clc
clc
cmp
js
and
inc
popf
cmpsl
test
ljmp
cld
mov
pop
fcmovne
jge
in
jb
or
jb
and
xor
dec
pop
mov
out
popf
divl
ret
ja
fxch
mov
mov
loope
lods
cmp
xor
ret
sysret
cmpl
push
testl
iret
xchg
fists
stc
xchg
adc
xor
and
and
test
pushf
mov
aad
push
mov
outsb
insl
add
push
jge
nop
shll
cmc
stos
push
cld
sbb
sbb
out
clc
inc
fistps
std
fistps
mov
push
mov
icebp
xor
fiadds
pop
dec
mov
xor
daa
lss
icebp
xchg
cmpb
mov
sub
mov
pop
dec
in
mov
roll
xchg
mov
mov
popa
bound
cmpsb
xor
cmp
sbb
je
loope
jbe
pop
mov
fwait
cwtl
int3
aad
pop
insl
mov
cmpl
insb
cltd
sahf
je
push
decl
push
pushf
mov
pusha
test
dec
cmc
aaa
scas
add
cli
sbb
jmp
pop
push
sbb
lea
stos
imul
push
dec
sbb
dec
and
adc
in
add
push
sbb
mov
mov
mov
loopne
ljmp
lds
popl
shrl
push
cmpsb
fisttpl
jp
xchg
in
cmp
dec
pop
add
mov
xchg
and
and
cmp
faddl
xchg
mov
xchg
rcrl
mov
shlb
inc
or
sub
cmpsl
xor
mov
jno
xchg
push
fnsave
mov
push
jmp
cmc
adc
clc
ret
xor
icebp
cmp
mov
sahf
inc
sub
imul
in
das
cmp
sbb
shl
aad
add
lcall
popa
mov
ljmp
out
cwtl
mov
jecxz
lret
lahf
xor
movsl
enter
data16
sub
add
lret
inc
scas
cmpb
mulb
push
int
test
inc
imul
xchg
rcll
and
jns
mov
rclb
loope
mov
daa
shl
xor
test
into
xchg
sub
insl
or
push
cmc
loop
mov
cltd
mov
cmpsl
cs
sbb
outsb
icebp
shll
aas
sub
scas
add
mov
jno
pusha
sub
pushf
jmp
fmuls
jge
dec
adc
sbb
std
faddl
cltd
mov
test
lock
add
dec
adc
sub
out
dec
fldcw
fcmovb
mov
pop
repz
xchg
loopne
ds
roll
fmulp
adc
fmuls
inc
divl
nop
pop
or
lahf
in
popf
or
add
int3
in
out
cmp
nop
lods
ss
test
pop
adc
add
mov
ljmp
push
jns
pop
and
push
xchg
shll
data16
mov
aas
or
icebp
or
xchg
iret
adc
add
push
or
fsubrs
pop
sub
loope
insb
xchg
mov
ret
push
xchg
jle
mov
clc
sub
and
pushf
clc
andb
movsl
inc
fisubrs
xor
pop
xchg
aas
lcall
iret
fsubrl
adc
inc
xchg
sbb
jecxz
loop
mov
push
cmp
xor
sbb
mov
sahf
push
push
pop
addl
cmp
das
rclb
in
push
mov
mov
xor
xor
insb
clc
mov
lret
jno
cli
mov
sub
aaa
pop
lret
lods
pop
adc
out
adc
pop
sub
shlb
insl
sub
subb
xor
int
mov
mov
sub
or
insl
inc
mov
adc
mov
xchg
bound
push
push
mov
xor
mov
incl
lcall
test
dec
pop
dec
fcoml
mov
jl
outsl
mov
cltd
test
jnp
cmp
pop
lods
popf
ljmp
xchg
mov
insl
cmp
pop
mov
dec
mov
mov
movsl
jecxz
sub
mov
adc
or
popf
sbb
pushf
or
inc
sbb
enter
fisttpll
mov
mull
lea
adc
test
cmp
outsb
in
nop
adc
mov
xor
fiadds
push
outsb
je
and
test
movsb
gs
add
das
sub
scas
cmp
stos
ss
xchg
push
pop
lcall
movsl
mov
int3
push
movsl
ficoml
cmc
inc
mov
push
test
lret
lcall
adc
stc
stos
aam
scas
fnstcw
fcoml
pop
mov
out
dec
ja
nop
lea
arpl
jge
stos
add
outsb
mov
cmp
xchg
int
pusha
sub
xchg
roll
adc
and
xchg
adc
dec
sub
sahf
sub
ljmp
xchg
icebp
dec
dec
or
clc
lea
sub
dec
stos
roll
cld
add
repnz
sub
or
dec
nop
hlt
subl
xor
fs
mov
pop
inc
jbe
mov
jmp
out
mov
pushf
shr
jb
inc
jmp
faddl
pop
xchg
sub
addl
jg
rorl
mov
sbb
pusha
mov
sub
sub
adc
pusha
mov
data16
pop
push
out
notl
or
ljmp
fs
cmc
les
mov
fisttps
jle
enter
pop
and
nop
mov
jecxz,pt
or
into
cmp
push
pop
jno
imul
imul
push
loope
cwtl
call
xor
pusha
xchg
xor
fwait
push
fwait
dec
lea
lcall
into
sub
lea
mov
cmpsl
xchg
mov
mov
sti
and
jns
stc
fisubl
xchg
imul
cmc
nop
mov
sub
fildll
jl
pop
cmpsl
into
mov
popf
pusha
iret
pushf
push
outsb
inc
push
cltd
or
daa
xlat
gs
push
mov
ss
popf
push
loop
mov
repnz
push
les
lea
mov
aad
sub
lret
or
sub
repnz
in
testl
fisubs
ret
jg
dec
js
mov
push
xor
jecxz
addr16
add
scas
out
out
xchg
push
fisttps
and
cmp
jae
pop
lret
movsb
dec
xchg
out
fwait
cmp
and
rorl
push
add
int3
fnstsw
mov
es
insl
test
jle
fcomps
aas
js
adc
mov
xchg
lret
or
sbb
js
pop
repnz
out
clc
dec
mov
xlat
adc
ds
pop
adc
out
dec
push
rol
jp
mov
mov
popl
jo
push
ret
jnp
xlat
mov
sub
and
inc
les
add
mov
or
sarb
mov
setns
xchg
loopne
sbb
adc
int3
pusha
icebp
cmc
mov
fsubrs
mov
xor
mov
jo
sahf
mov
inc
gs
xlat
out
int
call
mov
aad
clc
shlb
rorl
mov
inc
mov
lret
mov
add
pop
adc
leave
sbb
ja
in
sub
arpl
mov
and
or
lds
in
pop
mov
add
lods
mov
test
sub
inc
iret
cmp
pushf
test
adc
inc
mov
cmovge
inc
rorb
in
dec
push
cmp
ja
mov
shrb
fwait
loope
test
push
mov
xor
add
dec
mov
push
xchg
out
fldl
sti
or
fyl2x
je
outsl
sahf
sbb
inc
push
pop
dec
movsl
mov
or
mov
jbe
jg
push
shrl
inc
and
jg
cmc
imulb
jns
lret
sbb
pushf
xor
cmpsb
mov
popf
aad
push
fs
pop
jg
lock
cwtl
in
sbb
lock
fistps
mov
push
mov
or
cmpsl
es
int3
jno
or
xchg
loop
test
hlt
push
mov
inc
lret
xor
xchg
in
push
mov
ljmp
pop
mov
xlat
inc
stc
fldl
ret
faddl
push
fnstenv
ficomps
push
aam
cmpsb
pop
stc
aam
lret
fisttpl
mov
push
rcrb
andl
pop
xchg
or
int3
jb
ljmp
in
pop
or
sbbl
pop
stos
jmp
cmp
call
adc
test
mov
xchg
jne
mov
pop
mov
push
and
inc
lods
mov
jmp
mov
out
bound
shll
sbb
inc
xchg
xchg
xor
mov
add
xorb
and
insb
rcll
xchg
incb
push
mov
aaa
xchg
xchg
mulb
into
jnp
and
jg
xlat
imul
and
pcmpeqd
imul
iret
sub
mov
fdivrl
xor
xchg
push
adcb
jle
inc
push
cmp
push
pop
cli
push
adc
stos
scas
outsb
adc
lods
mov
sti
push
rcrl
outsw
xor
or
test
scas
and
jae
xchg
cli
dec
dec
flds
adc
pushl
fs
xchg
dec
and
xchg
sub
sbb
dec
cld
xchg
ja
addr16
sbb
nop
mov
pop
mov
and
add
sahf
mov
cmpb
icebp
pop
mov
mov
aas
cmpsb
adc
pushf
sbb
out
adc
mov
cmpsl
mov
insb
xchg
movsb
je
aas
pop
dec
adc
in
and
pop
fldt
and
or
push
mov
xchg
mov
out
pop
rclb
sti
sahf
or
adc
lahf
xchg
gs
pop
ljmp
loopne
inc
push
push
cmp
es
inc
jg
add
imul
cmp
out
fisubrs
cmpsl
int3
inc
lcall
lock
out
push
test
dec
jle
sbb
sub
iret
jg
adc
in
push
and
xor
xchg
mov
incl
push
int3
dec
addl
in
outsb
add
mov
adc
out
jmp
inc
jle
inc
and
movsl
push
pop
cld
push
xchg
jns
add
mov
mov
bound
mov
out
xchg
and
mov
or
jb
dec
add
dec
xchg
adc
scas
cmp
call
and
test
xchg
bound
xchg
xchg
arpl
test
push
jmp
dec
jge
mov
ret
les
add
or
mov
arpl
xchg
jl
sub
ret
add
xchg
fistps
adc
insl
xchg
mov
pop
push
jns
push
lods
dec
xor
inc
push
adcl
xor
mov
or
pushf
adc
xorb
fwait
cmp
mov
outsl
fsubrs
cs
dec
xchg
mov
das
mov
shr
lods
jl
push
std
popf
and
xor
leave
add
insl
mov
sbb
dec
sub
jnp
fimull
imul
mov
shrb
xchg
jb
leave
add
xor
loopne
mov
in
sub
ret
mov
faddl
sbb
hlt
push
lcall
push
test
shrb
ds
repz
jge
into
push
pop
movsb
inc
pop
push
push
pop
vmovaps
rcrl
aaa
mov
sub
das
cwtl
popa
subb
insb
nop
aam
push
divl
xchg
lods
stc
sbb
xor
xchg
loop
jle
xor
insl
dec
test
jl
mov
dec
adc
push
int3
testl
push
in
iret
popa
ja
insb
sub
pusha
maxps
in
inc
fbld
xlat
insb
insb
adc
jp
cmp
movzwl
sub
nop
or
mov
popa
scas
jno
jae
mov
inc
mov
je
pop
xchg
pushf
roll
add
add
outsb
loop
push
stos
loopne
inc
jmp
mov
sbb
lret
sbb
inc
test
xchg
movsb
ja
mov
mov
xor
pushf
or
into
jmp
push
test
inc
aas
add
xchg
hlt
push
lds
sub
or
mov
adc
pop
lods
test
aaa
jbe
mov
movsb
insl
cmp
ret
or
add
ja
rcrb
imul
sub
and
fwait
fwait
xchg
mov
andb
dec
out
adc
push
out
xchg
mov
cli
cmc
test
mov
cmp
fs
xor
roll
enter
dec
xchg
mov
jle
and
pop
and
popa
test
loop
lods
sub
ret
mov
hlt
xor
push
inc
es
stos
push
jge
stos
int
scas
push
cs
ret
repz
fidivrl
mov
dec
adc
loope
lods
pop
ret
fwait
push
mov
stos
mov
xchg
cmpsl
mov
mov
aas
pop
cmpsb
inc
xchg
jbe
mov
or
popfw
data16
jnp
xchg
push
mov
dec
mov
push
andl
jecxz
imul
dec
out
pop
bound
dec
jp
and
out
stos
loopne
enter
dec
jne
pusha
in
cmp
pusha
fs
mov
mov
aad
sbb
or
or
inc
shrb
xor
xchg
jmp
hlt
and
xchg
call
sbb
dec
hlt
hlt
pop
pop
cmp
pop
div
adc
mov
shl
jmp
shr
sbbb
hlt
mov
out
and
dec
imul
lods
sbb
adc
mov
bound
popf
int
push
mov
pop
push
push
dec
cmc
inc
cmp
mov
cltd
ljmp
pop
jnp
pop
pop
mov
clc
cld
in
roll
add
mov
movsl
popa
or
and
xor
lods
out
data16
cmp
aad
out
loope
sub
mov
jl
ds
sub
xor
test
pop
stos
ljmp
mov
jae
sub
push
js
add
roll
sub
dec
jmp
aam
popa
lods
leave
adc
cmc
xchg
insb
xchg
jns
sbbl
mov
call
vmovapd
dec
adc
fwait
jle
daa
popl
push
aas
mov
test
xor
mov
cmp
pop
stos
inc
push
inc
lahf
xor
ret
mov
faddp
push
aad
into
aad
sub
sub
imul
and
mov
ljmp
popa
outsb
cli
push
jp
push
aaa
or
add
jl
cmp
mov
std
jnp
mov
mov
sti
jo
pushf
int
fbld
mov
insb
xor
out
cli
outsl
test
adc
xchg
sub
and
lods
leave
in
ds
lock
jecxz
pop
filds
xor
pop
xchg
arpl
orb
sub
dec
decb
cmp
das
les
movsl
add
and
fmul
dec
inc
std
into
push
pop
mov
clc
jle
xlat
cld
mov
push
enter
xor
out
adc
jne
gs
int
push
dec
jbe
enter
xchg
lock
push
ljmp
les
sbb
dec
mov
mov
out
stos
aas
or
loope
xchg
xor
ss
test
push
fidivs
int
jno
les
push
data16
outsl
xchg
movsb
xor
sahf
xor
leave
scas
inc
call
sti
shr
cli
das
scas
jne
sahf
adc
mov
xchg
ret
repz
sbb
cwtl
notb
fisttps
imul
mov
imul
std
sub
iret
outsb
icebp
sub
ficompl
jo
mov
loopne,pn
jp
sti
mov
in
or
dec
inc
mov
cmp
xchg
stos
sbb
add
dec
inc
jno
fsub
call
bnd
sbb
push
push
fnstsw
adc
push
lcall
sti
jo
fsubrp
sub
pop
fisttpl
ljmp
jo
or
fstpl
jp
push
push
sbb
cmp
bound
hlt
xchg
aam
icebp
and
mov
dec
subl
fisttps
ret
and
sbb
or
pop
mov
fnclex
pop
pushf
sub
or
cmp
xchg
std
pop
lret
movl
andb
loop
cmp
mov
sub
mov
or
or
dec
pop
inc
or
lret
aaa
mov
adc
fstl
ret
dec
jne
stos
cmp
testl
mov
iret
xorl
mov
mov
or
in
aaa
or
fsubrl
mov
call
mov
jo
cltd
and
js
jb
ret
xor
shrb
push
aam
jecxz
cmp
sub
scas
fldt
cmpsb
mov
lret
add
cmp
xchg
bound
flds
xor
test
pop
mov
loope
xchg
mulb
jo
jg
out
jmp
push
es
dec
mov
jp
mov
out
jnp
cmpsb
pushf
sub
out
cmc
into
cwtl
int3
in
jle
mov
xchg
repz
ljmp
fmull
mov
stc
sub
div
faddl
pop
loope
andb
dec
dec
xchg
inc
test
loope
test
inc
dec
mov
or
cmpsl
std
mov
in
and
cmp
ret
out
inc
aam
jp
adc
jb
dec
scas
add
jb
add
pop
outsb
fsts
leave
and
ss
pop
mov
xor
cli
mov
xor
dec
adc
insb
mov
das
out
and
sbb
test
aas
mov
icebp
mov
imul
test
notb
out
ja
repnz
push
cmp
in
bound
ficoml
sar
fwait
stc
rcrl
rolb
popf
pop
orb
andb
and
jne
mov
adc
ret
xchg
mov
fisttpll
cmp
and
inc
int3
nop
mov
mov
mov
and
lahf
mov
cmp
lds
and
push
inc
fmull
incb
not
inc
mov
xchg
rorl
cmp
jo
dec
sbb
shr
popa
xor
add
sub
mov
push
pushf
in
jl
jne
in
stos
sbb
rolb
pop
or
sbb
dec
popa
and
cmc
rol
inc
aad
jecxz
movsl
fsubrl
mov
fs
sub
adc
mov
pop
mov
test
ret
into
movsl
dec
call
add
sarl
dec
fcomp
testb
inc
loopne
push
pusha
cmp
es
mov
scas
fwait
mov
pop
vpunpckldq
mov
inc
mov
mov
test
mov
lds
lret
mov
aaa
movsb
ljmp
mov
ret
int
cmpsb
xchg
fwait
hlt
xor
cli
xor
jp
jae
lahf
adcb
push
cmp
mov
lds
adcl
dec
sub
dec
ljmp
sbb
jg
imul
bnd
outsb
loop
into
pop
ret
inc
lahf
push
mov
xlat
lods
mov
fidivl
push
mov
adc
xchg
jb
adc
rol
ret
pop
push
jno
mov
fcoml
in
mov
jmp
sbb
cmp
fcoms
aaa
jbe
int
add
sbb
jns
das
jge
add
pop
mov
xor
pop
xor
or
xor
inc
cmp
loopne
mov
insl
jae
xor
out
cld
lret
jmp
pop
in
mov
push
int
xchg
lcall
mov
faddl
push
les
imul
or
stos
addl
orl
test
or
popf
stos
insb
mov
adc
adc
int
notl
pop
jmp
push
leave
sbb
fstl
adcl
xchg
mov
jmp
shlb
mov
aad
add
pop
add
adc
cmpsb
ficomps
xor
sarl
cmp
pop
push
inc
and
adc
inc
or
and
xor
daa
sub
fmul
dec
data16
hlt
mov
mov
mov
mov
lret
fmul
nop
mov
pop
pop
dec
decl
pop
push
jmp
test
or
movsb
xchg
cmp
jne
dec
fsubs
pop
lret
and
dec
rep
mov
xor
cmp
call
lock
inc
mov
jno
scas
dec
and
push
call
ljmp
push
cmc
inc
inc
mov
mov
daa
ret
sub
adc
std
sbb
pop
dec
sub
mov
xchg
fmulp
mov
jp
add
fldt
and
xor
stos
and
jno
stos
pop
data16
arpl
in
mov
and
rcr
and
fiadds
popf
sbb
pop
imul
mov
jae
inc
add
add
mov
stc
or
mov
cmp
or
mov
aad
mov
cmp
adc
ds
mov
loope
inc
clc
sub
mov
or
add
leave
lret
imul
scas
or
in
cli
jbe
sub
xchg
fisubl
scas
scas
lahf
sub
and
push
ss
cmpsb
fidivrl
testl
jbe
enter
jb
sub
inc
shrl
xchg
shr
into
cmp
add
fdivrp
lret
sbb
fcompl
dec
rolb
andb
sarb
repnz
push
out
mov
mov
imulb
fs
pop
mov
loop
add
roll
xchg
popf
dec
pop
pusha
sbb
clc
popf
inc
in
mov
lcall
iret
cld
rorb
push
ficoms
jno
sbb
stc
in
inc
icebp
add
aaa
cmpsl
repz
add
or
add
je
rorb
clc
push
add
stos
lods
jne
push
mov
sbb
pop
mov
lods
movb
sub
loop
add
cmpb
pop
addb
xchg
sbb
adc
xor
stos
fcoms
and
dec
pop
xor
push
outsl
repnz
lock
sarl
test
popa
movsl
shl
scas
jecxz
push
inc
ljmp
daa
push
dec
out
mov
cmp
lahf
mov
fbstp
xchg
std
call
filds
int
imul
lret
sbb
push
lds
test
int
jp
lds
push
push
mov
stc
pop
insb
cld
vmptrst
add
repz
xchg
data16
popa
outsl
into
mov
popa
adc
mov
out
jo
sbb
loop
outsb
mov
xor
cs
inc
pop
das
mov
sub
cmp
jae
aad
cmp
jnp
pop
push
imul
inc
ret
js
mov
xchg
jle
pop
xchg
lret
jnp
fs
inc
ret
dec
cmp
cmp
pop
outsb
hlt
in
movsl
fildll
push
jmp
xor
add
pop
cmp
bound
fcmove
ja
sbb
cmp
add
hlt
and
pop
out
jb
mov
and
ret
into
xchg
je
adc
mov
sarl
mov
mov
gs
adc
in
fists
sbb
fsubl
jl
popa
inc
shrl
inc
sti
pop
outsb
stos
les
aad
jae
arpl
jnp
mov
mov
adc
add
cmpsl
insl
push
xor
sbb
mov
jg
push
jmp
imulb
sub
push
pop
mov
jp
or
cmp
cltd
imul
cmpsb
and
jb
push
hlt
jnp
cmc
stc
mov
xchg
dec
js
dec
cmp
inc
fwait
mov
mov
fs
in
les
jno
incb
test
mov
jp,pn
lret
popf
xchg
outsl
push
incb
sbb
into
outsb
lock
mov
jbe
aaa
inc
sub
push
adc
push
cs
ror
enter
push
out
gs
into
xor
sbb
xor
inc
xor
rolb
je
inc
fisubs
mov
or
arpl
dec
push
mov
leave
lods
adc
leave
lds
pop
lock
sahf
push
int
lods
push
faddp
sahf
push
or
jo
adc
adc
add
mov
std
dec
push
insl
das
lods
les
cltd
lods
inc
stc
xchg
pusha
popa
xchg
insb
push
xor
test
fldt
xlat
scas
cld
inc
leave
loop
jge
sub
xchg
test
bound
dec
sbb
ja
xchg
and
adc
not
jnp
pop
jp
ja
out
push
xor
aaa
out
xorb
dec
mov
push
cld
fldcw
xor
dec
push
fs
jg
and
ljmp
sub
cltd
mov
in
xlat
jle
test
and
push
jbe
sahf
push
pop
adc
add
icebp
adc
inc
xchg
and
mov
add
cmp
mov
adc
pop
sahf
or
test
push
sub
dec
jle
dec
xchg
dec
sbb
add
xor
lret
adc
xchg
mov
mov
iret
cmp
cmpsb
mov
cmp
hlt
in
movsb
ret
xor
cli
dec
adc
xchg
lret
insb
neg
cli
lret
movl
outsb
mov
mov
aaa
popa
sti
ljmp
sub
ds
ret
pop
and
adc
pop
xchg
sbb
adc
cmpl
rolb
sub
sbb
mov
std
sbb
jmp
push
sti
notb
pop
mov
lcall
lret
inc
pop
xchg
outsl
add
cmc
int3
fcomps
jae
lret
pushf
fcomps
dec
mov
mov
ss
repnz
xor
je
sub
xor
aam
or
lret
andl
bound
jae
push
outsl
xchg
xchg
orb
add
push
jo
repnz
pop
xlat
test
add
cmp
test
adc
fdiv
xchg
aaa
xchg
dec
out
dec
add
mov
inc
testl
and
or
pop
bound
xchg
dec
adc
push
cld
mov
or
je
loope
or
adc
notl
xchg
sbb
std
cwtl
xor
jecxz
mov
sbb
popa
cmc
sti
xchg
subb
pop
adc
es
push
xchg
test
out
and
comiss
add
into
ds
mov
mov
push
jg
jl
or
sahf
cs
gs
movsl
icebp
push
js
push
jno
pop
xor
mov
stc
or
sbb
mov
mov
add
mov
sub
in
data16
sub
stos
xchg
and
shlb
inc
jo
stos
xchg
mov
pop
dec
adc
jp
out
sub
test
fisubs
es
mov
sbb
add
repnz
stc
mov
fmull
add
and
adc
dec
and
push
sbb
mov
inc
imul
pusha
adc
jl
pop
shl
push
push
sub
lretw
jnp
enter
adc
mov
lahf
mov
movsl
xchg
movsb
pop
cs
cli
jae
xlat
pop
or
sahf
mov
aaa
push
aaa
xchg
xchg
shl
or
mov
movb
popf
push
sub
sbb
arpl
in
mov
scas
fbld
push
mov
add
adc
cltd
pop
in
iret
xorb
adc
xchg
lret
jno
outsb
out
leave
mov
or
test
push
mov
insl
cmp
dec
push
inc
xchg
mov
push
adcb
push
out
mov
popf
lods
adc
aam
jbe
pop
jne
repnz
jns
jle
in
push
clc
pushf
data16
sub
pop
pop
add
mov
mov
stos
jge
jnp
scas
es
mov
int3
flds
sbb
sub
and
dec
and
push
fndisi(8087
pop
or
adc
cwtl
popf
push
pop
xchg
sti
outsb
or
mov
pop
and
ja
jns
sbb
imulb
lods
adc
cmp
cwtl
test
cmp
push
sbb
notl
call
xchg
push
xchg
sbb
enter
jecxz
popf
and
or
adc
xchg
in
and
shll
mov
mov
aam
inc
cli
jnp
movb
xchg
cwtl
jle
or
jmp
mov
iret
test
xchg
mov
pop
mov
loop
stc
mov
pop
int
std
lds
divb
adc
fsubp
add
mov
call
pop
outsl
pop
lahf
scas
daa
mov
sbb
sbbb
mov
push
pop
das
bnd
movsl
cmc
push
aad
addr16
push
mov
add
loop
dec
insl
xor
dec
or
aad
test
imul
outsb
cwtl
int3
push
aaa
out
sti
pop
mov
jo
lds
and
popf
arpl
add
sub
test
leave
mov
mov
inc
stos
insb
mov
sub
inc
add
aas
pop
xchg
push
xor
mov
addr16
inc
fcomi
lahf
cmp
fcmovnb
fildl
sbb
les
xchg
lds
je
rcr
cld
loop
jb
adc
ret
lock
lds
repz
inc
inc
iret
call
jbe
gs
and
jbe
outsb
jmp
in
cld
mov
sbb
outsb
dec
dec
cmp
xor
jge
mov
push
push
in
push
std
mov
in
sbb
pop
and
sub
mov
pop
sub
sahf
adc
cwtl
stos
push
push
gs
dec
fwait
lods
cmc
fcoms
pop
dec
xchg
xchg
pop
sbb
inc
dec
cld
mov
sahf
xlat
aaa
pushf
push
adc
mov
rcrb
push
jmp
inc
mov
stos
xchg
jp
inc
int
repnz
push
scas
aam
dec
sbb
push
xchg
adc
test
js
les
pop
add
push
dec
int
push
mov
mov
data16
hlt
lret
sbb
ss
in
add
sbb
add
push
lds
jge
ja
lods
addr16
add
lds
inc
mov
aaa
popa
jno
mov
sub
cmp
fcoms
imul
dec
xlat
aam
jge
sbb
add
push
push
push
mov
clc
gs
out
std
mov
aam
js
in
inc
adc
data16
sahf
into
enter
sbb
fsubp
xchg
cmp
in
adc
nop
nop
mov
add
out
dec
nop
repnz
inc
fnstenv
or
push
das
lret
or
aad
mov
jle
out
sub
xor
xor
xor
popf
mov
and
outsb
insb
xor
add
subl
inc
xor
and
mov
out
inc
in
int
int
inc
je
xor
and
mov
hlt
push
jecxz
mov
mov
mov
cmp
mov
mov
aam
xchg
xor
loopne
inc
bnd
pop
xchg
xchg
dec
test
xor
scas
add
sub
icebp
clc
mov
and
push
loop
or
outsb
mov
out
stos
les
sarl
aad
dec
sbb
aam
movsb
js
push
stc
in
add
loopne
cmpsb
int
fbstp
jl
xor
dec
int3
paddq
cmpsb
rclb
sub
std
cmp
xor
aad
cmp
mov
mov
dec
dec
inc
dec
ljmp
xor
jp
in
orl
in
sub
sub
jb
lock
cltd
and
movsb
xor
add
in
sbb
mov
dec
out
into
mov
fdivp
daa
xor
sub
outsb
push
cmp
in
shrb
sbb
sbb
lods
and
test
push
je
cmp
xchg
sub
lcall
mov
xor
out
push
nop
inc
jb
mov
int3
jecxz
jle
orb
or
and
leave
jae
test
sti
inc
mov
xchg
jle
sbbb
leave
sub
out
cmp
das
das
inc
stos
and
and
mov
dec
pop
in
dec
repnz
cli
mov
aaa
xchg
sti
nop
dec
xchg
ret
jbe
xlat
pop
xor
out
xchg
enter
mov
push
dec
repz
je
push
sub
adc
call
cmp
push
es
mov
or
out
cmp
push
mov
out
and
xchg
lods
insl
dec
lret
je
pop
scas
jmp
xchg
and
data16
inc
add
bound
std
mov
cmp
cmp
cmp
and
into
mov
sbb
dec
mov
push
ret
lcall
adc
or
add
mov
sub
icebp
sub
enter
sbb
sbb
and
mov
in
xor
out
xchg
xor
rol
mov
in
mov
push
pop
pop
pop
add
gs
movsl
xchg
ljmp
hlt
xchg
fwait
roll
insl
fcomps
adc
mov
mov
xchg
mov
outsb
insb
stos
leave
pop
fisttpl
cmpsb
mov
aas
and
lret
and
aas
mov
repnz
adc
in
inc
popf
sub
lahf
sahf
leave
aas
mov
or
stos
sti
cwtl
jmp
cmp
mulb
push
pop
lock
loop
jns
jmp
rcr
or
popf
adc
js
adc
push
push
bound
or
test
test
lds
jmp
jo
cli
fdiv
pop
inc
and
out
xor
mov
mov
pop
or
mov
fcmovnbe
and
xor
iret
adc
pop
leave
iret
mov
shrb
pop
mov
mov
inc
arpl
dec
push
xchg
mov
das
jmp
test
push
cwtl
lcall
pop
cli
imulb
jb
jle
shlb
mov
stc
pop
cmp
cltd
jb
add
enter
imul
hlt
sbb
push
mov
cmp
rcll
cmpsb
xor
insl
sbb
jp
and
and
icebp
inc
sbb
mov
xor
lea
dec
jno
inc
in
and
xor
jle
lea
fnstenv
cmp
mov
sub
adc
mov
test
rclb
stos
loopne
sbb
jne
dec
adc
and
cmp
pop
add
into
jp
rcrb
or
shll
xlat
clc
imul
cmpsb
mov
pop
shll
xchg
and
push
and
in
xor
jnp
jne
outsl
and
jno
rcl
pop
push
add
dec
dec
jmp
int
clc
sub
fistps
movsb
stos
and
cs
jne
fsts
xor
arpl
push
adc
cmp
daa
mov
push
les
lea
int3
lahf
xor
aaa
adc
test
add
push
ljmp
outsb
movsb
pop
ja
aas
pushf
xor
jb
aad
mov
xchg
hlt
xchg
dec
fdivrl
or
out
pop
int3
xchg
push
sar
jp
loopne
lea
nop
add
sbb
sbb
fisttpll
adc
mov
xchg
sbb
xchg
aam
lea
dec
pop
cmp
fmull
out
fdivl
cmp
mov
repz
outsb
cld
daa
popa
xor
jmp
stos
adc
mov
mov
rcll
lret
push
sub
pushf
loopne
pushf
popa
je
stos
adc
stc
mov
mov
mov
or
mov
jp
addb
pop
mov
neg
jns
in
inc
rep
inc
out
movq
roll
xchg
adc
movsb
or
stc
mov
mov
leave
outsl
and
add
push
xchg
pop
mov
jb
fldenv
xchg
jb
test
in
pop
or
inc
cmp
insb
add
lea
loop
jae
leave
pop
fimull
xchg
loop
fidivrs
mov
enter
repnz
int
mov
cmp
add
outsl
std
cltd
scas
stos
rorl
mov
mov
and
jno
scas
cmp
pop
lea
jecxz
inc
movb
loopne
ficompl
jmp
inc
pushl
jecxz
jae
ret
sbb
pusha
in
inc
aaa
lds
lds
data16
adc
mov
je
mov
orl
sbb
aaa
cmp
ret
cmp
add
jle
xor
lcall
popa
push
jp
sbb
mov
and
mov
mov
js
pop
mov
xlat
cmpsb
dec
jo
mov
xchg
add
mov
orb
popf
icebp
add
or
cmpb
andb
mov
rorl
nop
mov
andb
sbb
fs
dec
stc
rcrl
and
daa
cmpsb
scas
and
xor
sti
test
mov
mov
push
mov
pop
lods
jle
pusha
test
pushf
push
jmp
in
ja
int3
ss
pop
fistps
movsl
fistl
and
xchg
mov
orl
stos
push
jecxz
ds
pop
mov
dec
sub
xchg
mov
add
test
mov
mov
push
outsl
stc
stc
push
xlat
pop
test
int
mov
cmp
popa
jecxz
sbb
push
nop
lock
fldt
mov
js
stos
negb
dec
movsb
std
push
loope
flds
xchg
out
jmp
loopne
mov
dec
out
pop
and
xchg
mov
xchg
inc
in
outsl
push
push
mov
push
add
hlt
mov
imul
push
jmp
add
pop
xchg
cmc
mov
mov
add
fildll
orb
nop
xorb
lahf
mov
aas
and
aam
fcoml
hlt
insl
mov
mov
jo
mov
add
jno
cli
xor
mov
jns
push
cs
icebp
cmpsl
or
jl
in
pop
add
inc
mov
inc
ds
arpl
scas
cmp
or
ja
xchg
mov
push
fucomip
pop
push
or
popa
jns
mov
mov
nop
sbb
ss
push
xor
sbb
push
repnz
cs
xchg
cs
dec
out
adc
jo
je
inc
mov
xchg
fcoms
insb
loope
pop
pop
jnp
mov
xor
push
out
sbbl
cmc
sub
jl
fnsave
movsb
imul
fisubl
clc
imul
sti
in
fwait
lcall
cmp
pop
movsb
pop
xchg
int
mov
jno
sub
ret
sub
push
sub
pusha
stos
mov
test
cmc
les
ret
sub
fcmovu
sub
shlb
call
push
popf
jno
mov
xor
mov
dec
je
push
push
dec
push
jnp
push
sub
jae
dec
testl
inc
es
or
inc
jo
sub
stc
mov
movsb
outsb
jge
pop
cmpsl
daa
adcb
imul
and
es
add
jmp
testb
jmp
xchg
out
sbb
stos
movl
test
loop
mov
mov
cltd
adc
jo
cmp
out
add
in
adc
dec
test
cmp
xlat
enter
sahf
mov
mov
into
in
jmp
jecxz
jl
cmp
mov
insl
pop
daa
neg
mov
in
cmp
insl
faddl
js
loop
xor
mov
test
xchg
pop
lods
bnd
notl
shll
sbb
int
dec
push
xchg
scas
xor
adcl
or
sbb
arpl
rcrb
shlb
push
dec
push
pop
adc
div
sbbb
movsl
test
stos
xor
inc
js
icebp
cli
inc
repz
lcall
idivl
pop
mov
or
push
mov
sub
lea
inc
pusha
jno
lock
or
fldt
sub
xchg
mov
rcll
fwait
pop
jmp
mov
popf
sub
push
bound
mov
xor
push
jg
or
xor
and
xor
sub
ljmp
dec
loope
out
adc
gs
or
int
push
xor
mov
ds
cltd
into
cmp
pusha
sub
xor
je
jbe
sub
mov
add
mov
jg
bound
add
add
outsl
sub
js
pop
dec
sbb
xorb
jno
mov
scas
popf
aam
mov
mov
add
pop
je
loope
popf
ret
inc
push
in
aaa
pop
addl
hlt
stc
push
jecxz
gs
enter
push
pop
mov
or
in
pop
or
out
mov
or
ljmp
and
loope
out
lds
or
daa
ljmp
push
fdivr
lret
adc
xchg
jb
mov
imul
popa
fists
sub
pop
mov
aas
jnp
ds
jmp
mov
ja
addr16
xchg
cltd
test
sahf
loopne
fistl
or
jmp
mov
movsl
push
loopne
loop
lcall
ljmp
xor
xor
ja
daa
in
push
loop
sbb
lahf
pop
push
push
jl
fcmovne
or
fiadds
pop
dec
loopne
in
cmp
add
mov
or
dec
enter
add
rclb
insb
roll
shl
sub
push
rorb
pop
lahf
add
addr16
adc
inc
mov
xchg
movsl
icebp
test
pop
rcl
pop
add
test
cmc
cmp
xor
mov
popf
add
mov
das
xchg
xchg
shrl
xor
mov
int3
push
adc
mov
jo
sub
sbb
imul
cmp
push
xchg
inc
mov
adc
xorl
pop
mov
loop
hlt
mov
sbb
sub
or
lcall
jge
mov
xor
jbe
jmp
aaa
je
cmp
inc
test
daa
xchg
aad
mov
add
inc
jecxz
xchg
shrb
xchg
add
leave
loop
mov
test
andb
mov
int3
sbb
iret
lahf
push
test
rol
xchg
xor
test
inc
das
mov
mov
js
jno
nop
aaa
dec
jno
punpckldq
mov
xchg
arpl
mov
dec
push
es
lea
ret
out
sub
push
fisubrl
xorb
and
push
push
or
inc
and
xchg
call
iret
nop
js
bound
pop
inc
int3
in
jle
xor
shr
jp
pop
mov
cmc
push
out
sbb
test
and
popa
dec
mov
fcomip
jbe
xor
xor
sbb
int3
push
into
sub
add
stos
sbb
fwait
jo
loopne
loopne,pt
insl
jb
jp
rcll
fs
or
in
mov
xchg
lahf
cld
out
cmp
pop
into
aas
push
adc
jp
scas
clc
jb
pop
ja
cs
jo
arpl
mov
jns
das
aad
std
mov
fcmovbe
add
imul
or
test
pop
cwtl
cmp
jno
and
mov
xchg
sub
inc
sbb
bound
lret
inc
cmp
mov
mov
pop
push
nop
in
stos
enter
jecxz
lret
mov
jecxz
cs
stc
out
fistps
jle
leave
and
mov
jnp
popf
mov
push
mov
sub
sbb
das
mov
mov
clc
scas
test
out
xchg
sbbl
mov
test
xchg
mov
xchg
push
shll
loope
orb
stc
pushf
xlat
and
insl
xchg
or
jge
repz
push
xchg
mov
lock
test
in
mov
adc
test
enter
int3
jg
sub
xchg
cmpsl
push
inc
dec
fwait
test
in
cmp
out
sub
xchg
mov
imul
clc
or
sbb
fwait
mov
sub
sbb
inc
or
jnp
popf
pop
mov
cmpsb
mov
outsb
push
jns
cmc
mov
add
or
imul
leave
sbb
iret
adc
scas
std
repz
jp
fsubrl
pop
sub
into
and
cltd
loopne
pushf
jae
adc
pushf
pop
out
cmp
xchg
push
push
cmp
test
sahf
or
jb
xchg
std
mov
dec
inc
daa
lods
sarl
sarl
push
das
movsl
jbe
into
sbb
sbb
ss
sub
aaa
cld
lret
jle
fiaddl
out
add
push
insl
divb
sub
aad
adc
insb
rcr
xor
dec
je
mov
ret
testl
nop
adc
jno
ficoml
outsl
fnstsw
adc
mov
push
jp
jg
or
cmovnp
jl
xor
insl
in
xchg
js
adc
add
mov
inc
shrb
loopne
sub
xchg
pushf
mov
out
adc
into
mov
fisttpll
ja
cli
mov
dec
mov
inc
int3
loope
dec
pop
xor
fs
adc
jb
xor
repz
adc
sbb
add
push
call
pushf
mov
ja
int3
jmp
dec
inc
and
les
stos
push
repz
std
aad
rol
xchg
xchg
outsl
and
das
nop
jo
iret
cmp
int
xchg
out
dec
xchg
stc
scas
mov
push
and
test
stc
imul
daa
dec
fstl
or
aad
mov
cli
movsb
jns
ficoms
test
outsl
inc
popl
fwait
arpl
pop
iret
mov
aam
outsl
pop
mov
out
add
sbb
loope
dec
xchg
push
shlb
icebp
les
inc
addb
xchg
xchg
rcrl
and
ret
fisubrs
push
pop
add
jb
aas
sub
push
push
scas
push
js
je
xor
lock
je
xchg
dec
adcl
fwait
mov
cltd
lds
jecxz
fwait
pushf
mov
lods
or
movsl
xor
mov
mov
cs
rorl
mov
out
jmp
and
cli
jp
cmp
pop
pop
int
cmp
dec
ret
das
pop
vprotq
ret
fbstp
mov
es
jno
dec
cmc
pop
pusha
int3
cmp
xchg
daa
enter
pop
xchg
inc
push
stc
jmp
enter
sahf
ljmp
clc
cmp
add
xchg
cwtl
popf
push
jecxz
inc
mov
aam
or
jecxz
scas
cld
jmp
jg
out
lahf
dec
movsb
and
imul
dec
xor
xor
leave
push
enter
jb
dec
call
call
nopl
bound
push
out
add
test
insb
ds
inc
js
jno
jnp
push
and
jle
inc
in
pop
push
push
and
lcall
jbe
mov
dec
jbe
ss
scas
ja
idivb
cltd
mov
push
sub
sub
fsts
std
repz
in
aad
clc
adc
push
xchg
push
fcmove
adc
jns
ret
mov
sub
mov
sahf
push
ja
push
in
lods
adc
negb
sub
jg
outsl
jns
in
inc
add
or
or
pop
frstor
fwait
call
lock
push
pop
or
lock
test
and
lcall
test
sub
mov
or
or
pop
insl
jmp
cwtl
fildll
aam
dec
mov
mov
std
in
imul
and
add
mov
add
or
push
sahf
sub
sbb
xchg
test
loop
sub
lods
cmpsb
xor
clc
pop
fidivl
inc
fldt
adc
or
cli
pop
or
clc
iret
sar
sbb
das
sub
arpl
jmp
cmpsl
stos
lcall
mov
pop
lret
cwtl
in
pop
jne
xor
inc
dec
jae
add
pop
cmc
jno
andl
jns
inc
inc
flds
or
jo
scas
xor
test
imul
stos
jp
lock
das
xchg
cld
mov
adc
dec
inc
imul
jge
add
cltd
xchg
into
test
repnz
call
repnz
lock
dec
ror
push
lock
jge
jo
je
repz
and
adc
xor
mov
call
orl
or
adc
in
mov
sbb
push
or
decb
jecxz
lret
push
adc
fwait
das
repnz
lcall
fisubrs
jbe
push
jle
push
or
dec
sbb
sbb
int
mov
xor
push
mov
and
pop
inc
pusha
mov
xchg
sbb
int3
lret
push
shll
pop
jae
mov
outsb
mov
dec
std
jecxz
inc
pusha
dec
outsl
je
test
arpl
mov
mov
cmp
lcall
in
mov
mov
cmc
scas
js
sbb
dec
mov
pop
sbb
ja
andl
mov
cwtl
stos
dec
orl
insb
lret
movsl
fiadds
fs
add
adc
jge
xchg
test
fadds
lret
jbe
fists
sub
mov
repz
in
imul
push
data16
sub
mov
fucomp
inc
jns
sub
xor
arpl
lcall
or
inc
xor
xor
cltd
imulb
sbbb
pop
js
pop
push
mov
scas
fimull
js
xchg
arpl
cmp
or
fimuls
mov
pop
sub
or
mov
pop
inc
and
aad
sbb
ljmp
rorb
orl
cmp
fildll
daa
push
aas
fistpl
sbb
cltd
jge
js
cmp
fsubs
push
push
insb
lods
imulb
mov
ds
jns
pop
xor
mov
int
repnz
and
push
mov
cmpsl
lods
rcrb
call
push
jmp
out
mov
fwait
pop
shlb
cmp
bound
lods
jg
mov
xchg
lods
push
mov
fbstp
roll
xchg
jbe
je
sahf
lret
and
mov
add
xchg
lahf
sub
push
fbld
aas
out
adc
jae
sub
sbb
push
aas
lcall
mov
mov
cmp
stos
insl
lock
mov
pop
pop
mov
call
daa
mov
xor
xor
inc
jae
cmpb
ss
jb
push
inc
repnz
xchg
sbbb
add
test
insl
jns
jmp
ret
inc
jne
and
xchg
dec
outsb
push
scas
pop
imul
jp
sti
xchg
es
mov
loop
cs
dec
pop
inc
pushf
test
in
test
pop
aad
movsl
cmc
loope
push
sahf
stos
outsb
fisttpll
lcall
dec
imul
pop
jo
imul
and
test
push
out
mov
add
cmpsl
inc
sub
sbb
add
test
lret
dec
jbe
push
lret
int
dec
jno
mov
xor
in
or
das
xchg
sub
aaa
adc
aaa
insb
inc
lret
lahf
sbb
pop
pop
test
movsb
fnstenv
jno
dec
insl
and
inc
add
cmc
mov
inc
aas
inc
lret
mov
in
stc
dec
push
rcrl
mov
xor
movsl
fnsave
lods
inc
sbb
aad
push
je
out
les
xor
sub
data16
ds
movsb
mov
ret
test
pop
pop
rcrb
fs
pop
fcomp
mov
add
mov
xchg
xchg
mov
sub
loopne
int
iret
loopne
rorl
testl
loopne
push
das
pop
sbb
add
mov
ja
mov
pop
lock
push
jg
cmp
int3
and
btc
lahf
out
push
pop
and
scas
nop
ret
rorb
je
mov
cmp
arpl
jae
aam
in
push
xor
frstor
dec
push
xlat
shll
add
sub
lds
adc
xchg
push
add
push
push
mov
mov
roll
leave
cmp
gs
jecxz
inc
jo
mov
mov
push
bound
pusha
dec
adc
mov
inc
aaa
ss
lock
ja
adc
lret
jp
xor
jbe
enter
xchg
dec
pop
enter
push
adc
ret
mov
cwtl
daa
aad
xor
flds
dec
cwtl
sub
inc
xchg
add
jp
xchg
push
lods
lds
addr16
into
cld
mov
xchg
mov
cmp
mov
dec
xor
cmp
js
mov
pop
dec
add
das
sbb
xorb
inc
or
xchg
lahf
sbb
aam
jmp
loopne
jnp
push
pop
imull
fisubrl
cltd
cs
pop
and
mov
jns
or
divl
fldt
sbbb
sub
mov
sbb
inc
stos
bound
mov
xchg
inc
aad
enter
inc
pusha
aas
das
xchg
out
mov
int3
ja
inc
gs
out
mov
jb
mov
cmp
fnstcw
xor
push
cmp
in
mov
inc
pop
inc
popf
push
adc
aad
test
xchg
insl
gs
data16
call
nop
js
loop
imul
or
jmp
mov
add
push
xor
pop
test
xor
jno
arpl
xchg
enter
jno
adc
test
pop
and
cltd
out
test
mov
mov
ss
stos
cmpb
jmp
and
je
pop
test
sahf
fldcw
shlb
inc
sbb
mov
push
test
inc
cmp
iret
ss
je
xlat
repz
xchg
insl
out
pop
jecxz
cli
push
and
mov
inc
dec
cmp
mov
xchg
xor
add
adcb
and
cmpsb
test
xchg
fdivrs
in
loop
gs
movsl
sub
lcall
xchg
fisubs
sar
cmp
arpl
and
push
jp
add
test
mov
push
dec
xor
insb
and
push
movsb
add
out
add
insl
inc
les
mov
inc
mov
test
sub
pop
aaa
push
jno
insl
jle
dec
je
add
into
mov
ljmp
add
bsr
imul
inc
jge
push
in
pop
scas
sub
subb
xor
sub
repz
std
in
sarl
push
int3
lea
pop
pop
lock
pop
add
push
stos
fistl
push
dec
push
scas
clc
and
cmp
aas
rorl
cmp
fcmovu
inc
pop
sub
bound
and
mov
dec
push
orl
mov
repnz
and
mov
sub
in
and
cmp
push
inc
and
inc
je
out
mov
xor
inc
mov
enter
jo
inc
mov
mov
dec
jecxz
pop
adc
idivb
lds
or
decl
mov
les
push
push
dec
inc
dec
mov
ljmp
pop
nop
call
jge
rcl
insl
sbb
sti
sub
out
fsubrs
cltd
gs
insb
cmc
in
xor
push
pop
stc
xchg
push
pop
stc
loopne
js
sub
popa
dec
idivl
pop
testb
les
popf
aam
sbb
xchg
shl
pop
jae
dec
xor
ljmp
pop
mov
xor
mov
rolb
aaa
cmp
push
mov
or
popf
adc
loopne
pop
pop
hlt
sti
cwtl
ret
aaa
lret
js
sbb
pop
push
into
mov
mov
lcall
xorl
push
sbb
push
rcl
or
xor
xchg
loopne
push
xchg
ds
cmp
xchg
fildl
mov
jp
pop
cmp
jle
sub
je
push
sub
mov
xchg
jle
mov
lret
call
sub
clc
lahf
cmp
jno
push
ret
in
or
ss
cmp
jb
mov
xor
std
cmp
repnz
lock
movsl
pop
pop
loopne
insb
orl
xchg
jns
mov
mov
jp
test
sub
out
icebp
sahf
loopne
jo
int3
mov
cmc
mov
nop
xor
shr
lock
fidivs
or
mov
gs
test
and
cmp
pop
rcrl
dec
xchg
mov
cwtl
sbb
fucom
xor
jbe
repnz
push
adc
jle
xchg
xchg
mov
sbb
mov
xchg
call
dec
incb
movsb
mov
jmp
jecxz
scas
add
jecxz
mov
inc
push
daa
jae
scas
cmp
or
adc
jl
jne
nop
xlat
mov
jp
ja
cmp
xor
jge
mov
outsb
bound
or
hlt
pop
ret
popa
popa
push
stos
sbb
pop
cmp
mov
stos
dec
and
sub
loope
leave
adc
pushl
std
jbe
sbb
es
fsubr
cwtl
insb
out
pop
fcoml
push
jns
mov
sub
cwtl
leave
push
sbb
aaa
cwtl
pop
and
add
test
xor
cmc
mov
push
xchg
jle
rclb
mov
ds
sub
cwtl
negl
inc
je
mov
cmpsb
ss
jae
das
xor
xchg
outsl
sbb
das
cmpsl
mov
lock
in
and
and
cmpb
push
cli
fldl
ljmp
push
inc
pusha
dec
xchg
jecxz
or
mov
sub
data16
jno
rorb
mov
mov
sbb
adc
pop
out
mov
mov
imul
pop
adc
sbb
xchg
and
jae
subb
movsb
cmp
out
inc
arpl
pop
adc
pop
or
pop
jle
jnp
loopne
xchg
adc
xlat
imul
inc
es
jbe
or
inc
inc
fwait
outsb
repnz
push
shl
jns
enter
pusha
in
mov
add
or
js
hlt
inc
cltd
fildll
xor
pop
je
pop
sbb
sbb
cmp
xor
ljmp
or
out
fs
pop
lods
xchg
out
daa
scas
pop
cld
dec
addr16
clc
push
add
push
inc
inc
sti
push
cli
aam
push
mov
push
xor
xchg
jns
cmp
int
in
test
sub
cltd
popa
jp
fwait
mov
mov
fcomps
and
cwtl
in
xor
cwtl
dec
repnz
ret
xor
out
xchg
stc
xor
pop
xor
rorl
cmp
sbb
push
ja
jns
add
mov
push
lods
pop
aaa
out
xchg
push
inc
pusha
pop
notb
xlat
push
cmpb
sbb
inc
mov
and
divb
loope
push
mov
sbb
lock
add
fistps
lret
sbb
dec
out
test
mov
scas
loope
fmull
out
pushf
hlt
jae
das
cltd
stos
pop
or
add
insb
xor
ja
mov
aam
jae
mov
cmp
add
icebp
sar
loopne
or
or
jnp
xchg
cmp
adc
aaa
sbb
push
xor
xchg
loop
sbb
cmp
mov
idivb
lods
mov
xchg
jnp
imul
outsl
mov
sub
mov
inc
mov
mov
shll
aaa
pop
nop
daa
push
outsl
inc
pushw
les
sub
inc
sbbl
fwait
das
xchg
imul
imull
mov
lahf
mov
adc
push
mov
ljmp
jle
inc
jno
jge
xlat
or
inc
jb
sub
enter
pop
dec
push
sub
mov
adcb
mov
inc
jecxz
dec
data16
in
xchg
fsts
inc
push
cmc
iret
adc
push
dec
in
and
push
push
loop
leave
das
dec
cmp
xlat
fldt
sti
push
aaa
imull
sti
sub
add
mov
repnz
add
loop
fwait
xor
add
jbe
or
ret
xchg
xchg
addr16
inc
addr16
sub
push
rorb
jmp
pop
cwtl
dec
mov
push
in
add
je
shll
xor
cmp
int3
pushf
mov
enter
mov
movsl
cmpsl
xor
hlt
imul
dec
insl
cmc
cmc
push
in
out
mov
or
or
mov
test
jmp
ljmp
sbb
mov
pop
and
adc
jb
fistps
mov
and
addl
push
loope
iret
sahf
insb
push
pop
call
push
inc
dec
pop
popa
jno
pop
add
xchg
popf
xchg
fwait
sbb
adc
sbb
pop
inc
dec
popa
stc
loope
imul
add
cmp
add
imul
mov
or
test
jb
in
sbb
int3
loope
sbb
fdivs
fstpl
loopne
icebp
pop
pop
adc
mov
aad
lret
mov
int3
mov
in
mov
mov
cwtl
scas
push
mov
and
jmp
push
in
mov
js
pop
icebp
xchg
es
shrb
sub
jnp
sbbb
lcall
cmpsb
pop
mov
in
fiaddl
mov
mov
outsb
xor
outsb
movsb
outsb
adc
sub
rol
push
loope
inc
inc
inc
ret
jbe
jg
pushf
xchg
dec
fs
sbb
or
lahf
ffreep
icebp
cmpsl
out
add
pop
push
inc
or
orb
adc
leave
or
push
cli
es
andb
rcrl
push
inc
outsb
mov
mov
dec
inc
fwait
pop
test
dec
stos
xchg
or
fsubr
push
daa
add
jle
dec
ja
cld
jae
or
and
inc
repnz
xchg
jg
mov
je
adcl
dec
cli
std
or
and
fstl
stos
sbb
scas
mov
sbb
shl
into
mov
sub
add
xchg
shll
xchg
push
faddl
iret
sub
mov
addb
and
mov
insb
ljmp
test
xor
jbe
in
js
mov
ja
mov
cwtl
data16
and
imul
loop
jg
nop
jl
shr
push
dec
mov
add
jge
mov
int
subl
mov
jbe
push
shrl
out
and
mov
aad
aaa
push
sub
jnp
fld
lret
push
jb
int3
pusha
insb
inc
dec
fists
or
stc
inc
inc
xchg
mov
out
pusha
out
in
cld
add
jo
cmp
or
xchg
pop
lods
inc
sub
pop
aas
cli
dec
stc
lcall
adc
push
mov
inc
inc
mov
scas
das
dec
mov
xchg
jmp
xlat
ficomps
or
adc
and
fiadds
xor
mov
push
shr
mov
or
jecxz
inc
adc
adc
mov
mov
mov
dec
jge
mov
aas
sti
inc
pop
mov
out
mov
and
adc
push
xlat
mov
xchg
mov
inc
mov
xchg
add
mov
xchg
jp
or
adc
ljmp
rolb
mov
dec
aas
stc
jmp
es
test
leave
test
xlat
xor
sti
adc
push
enterw
ficoml
pop
scas
dec
mov
movsb
mov
cs
cwtl
dec
push
ret
mov
xchg
xchg
xchg
rol
adcl
pop
mov
cld
mov
lahf
shll
mov
out
mov
lods
repnz
sbbl
xchg
sbb
popa
repnz
js
push
stos
jbe
out
cmp
mov
sbb
adc
sbb
or
lcall
lret
xor
out
inc
cmp
jnp
sub
sub
imul
push
mov
scas
sarl
sub
xchg
jb
pop
adc
cld
js
imul
xor
pop
mov
int3
sti
fisttpll
add
xchg
out
dec
pusha
rclb
icebp
and
xchg
mov
cmp
fistpll
push
insl
sub
dec
jge
fs
jnp
lret
push
xor
repz
outsl
adc
adc
push
sarb
movsl
xor
shlb
xor
pushf
and
mov
int3
adc
ret
fsts
pop
or
call
sbb
mov
cmp
mov
xchg
xor
dec
jl
lcall
test
je
jno
jnp
ljmp
cmpsb
xor
adc
sbb
aas
xlat
pop
outsl
and
xchg
or
add
or
aaa
pop
or
jae
into
mov
mov
mov
dec
xchg
dec
js
push
xor
cld
dec
pop
scas
dec
push
dec
cmp
pop
mov
adc
es
in
aaa
ret
sub
xchg
pop
xchg
sbb
mov
cld
mov
add
test
movsb
lds
mov
scas
punpcklwd
std
dec
push
pop
pop
add
loop
mov
adcb
mov
mov
mov
mov
inc
cmpsb
leave
mov
pcmpeqw
dec
jne
xor
ja
sbb
pushf
sub
jmp
add
out
loopne
pop
cltd
enter
add
ror
fwait
ds
mov
orl
push
jne
xor
clc
xor
arpl
sbb
fldt
sahf
or
icebp
or
jecxz
gs
aas
mov
mov
aad
adc
push
and
stc
out
lods
push
stc
les
push
push
lods
out
ror
leave
imul
je
fprem1
push
xor
jne
in
stc
pop
sahf
xor
mov
sbb
out
jns
fdivrl
inc
inc
mov
idiv
ss
or
pop
and
pop
lret
jbe
xchg
sub
shrl
jge
mov
jecxz
push
sub
testl
xor
sub
jl
loop
movsb
xchg
push
pop
insl
test
sahf
test
int3
pushf
clc
mov
lcall
lret
add
roll
lcall
cli
adc
js
mov
addr16
test
pop
dec
cmp
mov
gs
or
daa
jae
jae
mov
mov
movsb
xchg
lahf
psubd
scas
sub
adc
lahf
add
cmpsl
mov
jl
stos
pop
and
mov
flds
or
add
xor
pop
jge
mov
cmp
inc
daa
negl
enter
jo
sbb
lea
shrb
dec
ret
adc
jmp
pop
jne
push
in
push
add
add
aaa
xchg
inc
cmp
jle
xor
les
jle
test
mov
std
std
ja
add
into
movsb
sbb
cli
jno
lods
push
mov
ret
mov
add
adcl
jge
popa
fcmovu
lods
push
nop
pusha
add
iret
jg
sti
ljmp
js
mov
cmp
cmp
dec
fstpl
and
jne
cmp
cmp
or
push
stc
in
mov
mov
mov
sub
std
or
mov
jbe
mov
mov
sbb
cltd
xchg
mov
push
dec
dec
popf
aas
mov
adc
mov
xchg
stos
pop
test
add
push
mov
lret
add
fucomip
sub
sbb
movsl
std
jp
push
push
inc
mov
pusha
mov
clc
mov
popl
stc
sahf
xchg
fwait
pop
push
pop
xlat
jne
insl
push
push
add
fwait
pop
jp
adc
insb
and
daa
mov
mov
lret
mov
arpl
ds
ficomps
orl
mov
fsub
sbb
fyl2x
in
xchg
dec
loope
cmp
add
xor
sub
sbb
sbb
data16
sti
mov
adc
sbb
leave
xor
sub
addl
inc
rcrl
mov
cmc
jecxz
cmpb
negb
xchg
repz
sbb
jns
xor
jb
and
inc
or
shll
scas
loopne
call
push
repnz
xchg
xchg
sub
in
xor
test
or
pop
or
imul
jge
jmp
test
or
mov
pop
adc
rclb
push
rcll
mov
sub
pop
and
and
aas
pop
cld
or
or
ljmp
jl
xor
xchg
outsl
inc
ficoms
inc
scas
pop
xchg
enter
push
imul
pop
into
sub
sub
shl
gs
mov
sbb
xchg
add
inc
fdiv
das
mov
iret
xlat
or
push
pop
jne
push
loop
sub
or
scas
pop
push
orl
loope
sbb
test
inc
mov
call
jle
js
add
cmpsb
mov
pop
xchg
adc
stc
scas
mov
nop
stos
mov
jge
mov
or
stc
inc
pop
icebp
test
inc
mov
add
mov
mov
xor
xchg
jge
push
pop
push
dec
je
mov
mov
cwtl
iret
out
out
jmp
cmpsl
cmp
mov
xchg
or
lahf
or
cltd
dec
mov
outsb
or
ja
push
ja
pop
inc
adc
mov
out
movsl
test
mov
pop
aaa
fwait
mov
mov
mov
xor
mov
adc
mov
fsubrs
imul
fdivrs
push
adc
gs
mov
cmp
cwtl
imul
pop
pop
lods
nop
jbe
and
jns
rcrb
sbb
les
jp
loope
jnp
dec
mov
sbb
aaa
xlat
push
les
push
sahf
sahf
pop
xchg
shll
loopne
mov
in
push
inc
test
in
pop
mov
inc
inc
insl
inc
xchg
ret
in
loop
push
or
add
mul
xor
aad
scas
push
out
lcall
rol
jne
sbb
sub
xor
aaa
lods
in
or
movsl
lahf
subb
dec
js
inc
dec
lea
pop
add
loope
and
ljmp
inc
mov
jae
and
arpl
icebp
sub
sbb
in
lods
and
mov
xor
pop
stos
cmpsb
cld
rol
inc
jmp
into
imul
pop
mov
inc
sarb
jns
scas
sbb
xchg
arpl
les
loopne
push
mov
imul
scas
addr16
jmp
stos
loopne
xchg
mov
outsb
mov
pop
jmp
aad
lds
cmp
or
pop
jl
daa
iret
jnp
pusha
sbb
xor
and
movsb
push
inc
lret
ss
mov
ds
and
add
lea
xchg
clc
sub
xor
sbb
and
popf
popl
jae,pn
push
sbb
sbb
fwait
lock
cld
and
pop
mov
dec
daa
mov
sarl
add
outsl
in
xchg
jg
or
pop
inc
adc
and
fstp
push
insb
xchg
into
out
push
cmp
test
and
loope
jo
sbb
xor
in
bound
rcll
xchg
sahf
adc
fs
in
xchg
lea
aas
inc
cmc
adc
leave
add
mov
xchg
xor
pusha
cmpsl
jae
out
inc
cwtl
mov
imul
mov
gs
sub
aaa
fcoms
xchg
pushf
int3
scas
movsb
test
pop
sarl
push
inc
outsb
fsubl
ret
cld
pop
insl
orl
mov
into
and
adc
sahf
xchg
sbbl
push
cmovb
shrl
daa
loop
jl
popa
mov
mov
mov
adc
inc
fwait
xlat
ljmp
scas
xchg
xor
add
lods
adc
hlt
sbb
out
ljmp
aam
pop
lock
jb
movsl
add
adc
stos
xchg
pop
cmp
cmp
jle
push
orl
int
ja
add
stc
and
mov
cmp
and
popa
pop
sub
jns
shl
mov
adc
rorb
adc
adcb
pop
inc
cmp
jg
outsb
aad
ljmp
frstor
leave
cltd
cmp
mov
ret
pop
ljmp
sub
test
mov
iret
out
dec
adc
and
repnz
mov
push
bound
loope
insb
adc
jl
mov
jmp
cmp
xchg
sub
and
lahf
out
mov
aaa
pop
daa
lock
ficoml
cmp
pop
mov
addl
pop
xchg
movsl
dec
sahf
or
add
adc
xor
pop
aam
aad
sub
sti
pushf
out
js
in
lds
sub
inc
pop
lret
jne
push
adc
cli
fcom
sbb
or
push
daa
cltd
sbb
sub
or
std
stc
xchg
sti
cs
pop
mov
lahf
sub
in
fnstenv
jno
out
mov
ss
and
sub
xlat
adc
cmc
cmp
jno
lods
cmpb
sbb
adc
adc
pop
or
and
sahf
flds
adc
gs
sub
and
mov
mov
mov
je
je
jmp
or
loopne
push
ljmp
xlat
aaa
cmp
mov
sbb
and
test
xlat
addb
shrl
sub
iret
cmp
mov
jne
cmc
imul
daa
orl
push
mov
xchg
frstor
mov
jae
shlb
push
inc
cmp
aas
mov
xor
cmp
sahf
inc
mov
jecxz
pop
cld
push
sbb
fdivrl
jno
dec
jb
xlat
mov
mov
in
jg
pusha
xchg
scas
dec
pop
jae
inc
sub
shrl
pop
in
sti
xor
lds
js
inc
stos
movsl
pushf
dec
mov
imul
in
adc
sub
je
add
and
mov
sub
clc
or
ja
mov
mov
sub
jns
mov
movsl
scas
cld
sti
xchg
out
lcall
movsb
and
sbb
cli
hlt
mov
inc
scas
xchg
or
jmp
roll
mov
xchg
mov
xchg
outsl
adc
push
dec
xchg
movsb
mov
loop
arpl
mov
in
cltd
fdivr
daa
xchg
sbb
pop
test
mov
loopne
xchg
add
jle
adc
sub
cs
int
mov
cmpb
in
mov
jmp
data16
insl
enter
adc
push
inc
hlt
mov
pop
imul
mov
in
lret
icebp
inc
cmpsb
push
out
lds
je
stos
xchg
icebp
std
test
push
xor
aad
or
repnz
xchg
or
sub
and
jb
dec
outsb
cmc
not
push
jecxz
adc
push
ret
das
test
cmpsl
push
icebp
jnp
sub
jno
outsb
inc
jne
jle
dec
inc
and
jae
cmp
and
aad
jl
mov
jae
loopne
inc
out
outsl
pop
lea
into
and
jne
pop
inc
lcall
nop
sti
loop
mov
mov
aaa
cld
iret
pop
or
sbb
fmulp
out
aas
adc
and
sahf
jae
and
mov
mov
repz
cmc
add
xor
scas
fcoml
shlb
shrl
push
sar
test
outsl
jnp
popf
mov
enter
fisubrs
push
sub
cli
xchg
sbb
xchg
sbb
sub
std
les
push
iret
movsb
jbe
or
mov
out
xchg
pop
int
dec
jo
mov
or
and
push
out
sbb
xor
imul
repnz
dec
dec
jl
xchg
out
incb
adc
mov
mov
sbb
xor
adc
or
inc
or
inc
lea
xor
jp
push
cwtl
xchg
cmp
test
insb
mov
pop
push
lods
cmp
test
lret
adc
push
cld
subb
shl
dec
add
pusha
xchg
add
mov
xor
cmc
or
sahf
pop
xchg
enter
and
fcompl
imul
dec
cltd
test
dec
sarl
inc
inc
in
test
or
test
sti
xchg
daa
xor
ficoml
into
xchg
cld
pushf
pop
adc
and
mov
mov
or
push
aas
jmp
sbb
lds
pop
xchg
push
in
ret
pop
mov
mov
decb
cmpsb
in
add
in
clc
ljmp
pop
fs
enter
jns
mov
shlb
sbb
xchg
in
pop
or
xor
cmpsl
bound
mov
and
lret
xchg
ljmp
inc
jmp
call
lcall
xchg
xor
je
inc
mov
pop
adc
iret
xchg
cmp
push
cmp
es
in
clc
lds
mov
mov
cmpsb
pop
test
xchg
jno
ds
mov
stos
inc
jne
shrl
or
adc
sbb
adc
mov
lahf
cmpsl
inc
fisubl
xor
or
push
mov
loope
repnz
mov
leave
jo
fidivrs
sub
shlb
sbb
pop
outsb
dec
push
std
dec
cltd
mov
out
outsl
mov
jge
push
xor
fmuls
cli
sbb
mov
popa
bound
stos
fmul
push
loope
cmpsl
popa
xchg
outsl
add
mov
xchg
jmp
sub
xchg
and
sub
pop
rcl
ss
sbb
mov
fstl
or
dec
sti
addr16
adc
cltd
aas
sbb
mov
pusha
rorl
mov
imul
push
inc
fstl
xchg
ljmp
les
dec
jmp
daa
jb
es
mov
push
or
aad
pop
jle
rcl
push
lcall
cmc
push
lea
sbb
jae
andl
aam
inc
ficoms
mov
loopne
pop
pop
jne
cmp
xorb
lea
add
std
xchg
xor
shlb
shll
mov
rcrl
inc
jge
ret
les
shlb
mov
adc
cmp
into
aad
insl
adc
dec
cmp
sub
sub
adc
sbb
or
fnstsw
lcall
lahf
enter
xchg
push
cltd
mov
mov
out
dec
loop
les
mov
sub
cs
mov
and
popa
xor
inc
popa
mov
js,pt
fisubl
insl
int
add
sti
xlat
cmpb
xchg
fdivrp
outsb
pushf
cmp
and
testl
jle
cmp
sub
xchg
sbb
jge
pop
movsl
out
inc
inc
mov
push
test
jmp
loopne
jmp
adc
dec
and
repnz
nop
add
repnz
and
push
cltd
push
lock
ss
in
mov
mov
jns
std
sub
sub
push
iret
cmp
cmpsl
out
or
xchg
cmp
aad
and
aad
js
cmc
xchg
pop
int
inc
shr
stos
sbb
fldenv
xorl
stos
mov
or
adc
dec
push
xor
or
jle
in
mov
les
sbb
mov
test
jnp
sub
mov
inc
roll
fisubrl
movsb
movb
sub
sub
and
sub
int3
test
add
or
insb
fistpll
inc
or
frstor
gs
inc
les
inc
shrl
mov
add
pop
mov
mov
xor
jp
in
jge
sub
cmc
pop
pop
fsubrs
std
cmp
scas
push
mov
mov
lcall
adc
inc
sub
leave
push
or
mov
mov
mov
xorb
jbe
dec
repz
loop
and
sub
xchg
jge
cmp
xor
mov
rclb
hlt
fs
push
sub
imul
fldcw
mov
cmp
insb
mov
and
xchg
int
dec
mov
int
ss
out
pop
stc
pushf
test
xchg
push
aam
xor
push
cmp
mov
aam
cmp
fcompl
add
push
xorb
mov
push
les
stos
push
test
mov
ret
popa
es
fsubrl
loopne
lret
in
das
jge
cmp
test
pop
push
inc
rol
fidivrl
add
jle
hlt
ljmp
sbb
dec
jle
sub
lret
add
mov
adc
fdiv
sub
jne
mov
popf
popf
xchg
sub
fisubrs
arpl
adc
pop
and
cmpsl
in
or
ss
xor
jmp
jle
popf
jbe
jecxz
in
popa
mov
lret
enter
into
out
push
xchg
in
mov
and
fbld
and
cmc
sbb
imul
scas
outsb
lods
mov
clc
xor
out
mov
push
or
cmc
xor
jne
mov
push
sub
xor
dec
jbe
fwait
loope
retw
orb
mov
adc
adc
negl
insb
add
dec
dec
std
inc
fldcw
int
filds
lods
xchg
outsb
sub
mov
push
filds
roll
push
pop
out
push
mov
in
fmuls
xchg
dec
in
lret
add
orb
and
inc
adc
add
push
xchg
cmp
cli
in
xchg
and
push
sarl
jo
idiv
cmpsb
test
je
pop
sub
sbb
mov
lret
push
dec
cmp
add
ja
add
add
fwait
lahf
insb
add
fcmovnbe
ss
mull
lret
push
xor
stos
sub
repz
cmp
mov
xchg
cwtl
fstpt
mov
adc
pand
xor
fcom
sbbb
sub
nop
sub
xchg
xor
dec
outsb
pop
add
xchg
dec
xor
pop
jbe
xchg
add
lods
pop
mov
imul
arpl
or
or
insl
fldenv
push
loope
xchg
sbb
sbb
xchg
sbb
repnz
mov
loop
fcomi
repz
ss
fnsave
or
push
ret
push
jecxz
xlat
push
xchg
scas
sbb
mov
mov
sbb
push
repnz
inc
aam
loop
hlt
iret
fnstsw
xor
leave
std
xchg
in
in
xor
xorl
jne
dec
or
lret
in
rolb
add
pop
out
add
imul
xor
mov
sub
jo
repnz
add
fildll
fmuls
sbb
xchg
dec
inc
ja
ret
mov
mul
xlat
lock
pop
jo
ljmp
dec
dec
jp
xchg
sub
pop
stc
inc
xor
cmp
mov
ss
xchg
sbb
lds
out
xchg
pop
pusha
aas
push
jecxz
fidivl
ret
push
int
sbb
js,pt
mov
cmp
xchg
jecxz
in
arpl
pop
xchg
je
lea
mov
push
mov
popl
iret
aad
rorl
jge
in
cmp
and
sub
ljmp
inc
test
ret
lods
xchg
outsb
out
shl
int3
pop
stc
sub
jns
mov
daa
and
sub
ljmp
jmp
out
das
sub
clc
and
pop
cmp
mov
xor
and
lret
xchg
lea
jb
ret
inc
xor
fldcw
push
dec
arpl
add
loope
sahf
mov
les
aas
in
testl
mov
outsl
mov
xlat
sub
sti
jbe
adc
hlt
xor
sbb
ja
cmp
inc
jb
aam
sbb
les
test
inc
pusha
push
fwait
push
loope
leave
pop
fmulp
mov
out
pop
pop
test
cmp
mov
xor
mov
test
lock
jb
bsr
sbb
std
cmp
add
mov
test
cmp
xor
sub
in
xchg
add
push
shlb
pop
and
push
rol
stos
inc
jne
sbb
add
js
out
jnp
in
jle
je
sbb
adc
out
and
call
mov
xor
push
data16
or
cmp
icebp
in
sbb
jns
addr16
cld
add
adc
or
xor
ja
jbe
ret
adc
hlt
in
push
pushf
pop
dec
lods
mov
lret
in
pushf
roll
jg
sbb
ror
jne
inc
push
mov
push
mov
adcb
cli
sub
popf
xor
loope
or
pop
cli
fmulp
ljmp
rol
fsubrl
push
push
addr16
xor
sub
ret
inc
jno
int3
loopne
loopne
adc
xchg
sbb
fnstcw
dec
xor
inc
cmpsl
adcb
insb
adc
loop
cmp
in
mov
jno
mov
sti
int
cmp
sbb
cmpsl
es
in
fadds
push
movsl
inc
arpl
sti
in
test
insb
xchg
push
in
and
daa
mov
shl
repz
pushf
xchg
cmpsb
insl
aaa
cmp
adc
adc
stos
cmp
jmp
std
std
bound
repnz
dec
iret
lahf
pop
bound
mov
xor
test
lret
ret
dec
mov
dec
pop
xchg
mov
mov
xlat
test
or
xchg
ss
sub
fists
jmp
adc
mov
movsl
mov
sub
cmpb
jbe
add
sbb
xor
push
pusha
jnp
test
xchg
cmp
jmp
cli
sbb
insl
sar
adc
jp
adc
mov
rcll
aam
sbb
add
jae
leave
ja
jae
ja
jge
cld
cmpsl
dec
lods
dec
cld
cmpsb
jne
movsl
jmp
lea
jbe
xchg
ret
test
jmp
pop
sub
std
xor
cmpsb
pop
fistpll
xchg
adc
push
pop
test
dec
cmp
jecxz
add
test
shld
jbe
inc
jmp
jge
stos
mov
jno
xchg
push
es
xlat
add
repz
mov
les
sbb
add
loope
lods
jns
pop
xlat
sub
in
sarb
aaa
pop
out
or
popa
cmp
loope
xor
sarl
xchg
and
adc
lret
rcr
lahf
cwtl
cmpsl
dec
jle
mov
jp
sbb
dec
adc
lds
das
adc
pusha
call
sbb
cmp
mov
cld
ss
in
stos
jle
jmp
ja
push
pushf
lock
inc
adc
mov
icebp
xchg
leave
in
int
jg
dec
mov
or
cmc
and
outsb
adc
add
xchg
xchg
inc
push
and
xchg
mov
outsb
jbe
adc
std
xor
aas
shrb
mov
add
adc
stc
push
fimuls
or
stos
dec
pop
mov
inc
popa
push
add
lock
dec
xchg
lds
out
xchg
std
pop
mov
es
ret
fs
fisubs
imul
push
inc
sahf
and
xor
ficompl
in
in
jecxz
test
jno
repnz
add
dec
cmp
gs
jge
add
lds
mov
and
sahf
aad
and
enter
icebp
movsb
mov
ss
push
sbb
dec
lods
sti
adc
aaa
adc
addr16
lahf
sbb
lret
aam
xor
add
adcb
cmpsl
dec
lock
into
js
popf
orl
enter
bound
inc
std
push
cmp
mov
fidivrs
mov
and
test
aad
fisubl
mov
mov
mov
cmpsl
add
lret
push
add
cli
inc
es
push
cmp
rcl
pop
push
jge
xchg
push
pushf
inc
insl
push
lahf
stos
xor
ds
insb
mov
shl
aad
fmul
xchg
xlat
sbb
xchg
xchg
jno
push
in
lcall
rol
dec
inc
daa
dec
pop
xchg
cmp
cmp
cmp
addr16
mov
adc
jmp
in
pop
jb
jne
das
push
push
cmpl
test
aad
jmp
sahf
pushf
cmp
iret
xchg
rcl
pop
xor
jne
test
aam
pushf
ds
lock
mov
xor
mov
popf
xchg
and
aas
scas
jb
sub
mov
xor
inc
fisubs
lret
es
aad
xchg
push
push
lcall
lods
sbb
cmp
push
xchg
cmp
cmpsb
sub
xchg
loopne
rcrl
sti
mov
fwait
rcll
mov
dec
sub
xor
rolb
jle
mov
mov
mov
into
add
nop
sbb
and
inc
repnz
mov
cmpsl
jl
xor
cmp
vrcpps
call
dec
dec
and
and
inc
inc
imul
sahf
stos
adc
in
jbe
lea
add
mov
add
mov
push
insl
pop
jle
jo
repz
cwtl
ljmp
or
out
imul
push
sub
push
xchg
pop
xor
xchg
movsb
icebp
test
xor
mov
dec
hlt
or
adc
sub
dec
or
stc
sbb
push
into
rorb
ret
decb
dec
les
nop
cwtl
ret
sbb
sti
into
xor
xor
test
jae
and
pop
mov
stos
mov
dec
fistpll
arpl
movsl
mov
shl
and
cmc
pop
lret
cltd
sbb
scas
cmp
fstp
enter
push
mov
aas
mov
stc
jo
push
test
test
adc
les
push
mov
sub
xchg
mov
jmp
xor
shll
mov
test
in
xor
mov
fiadds
stos
das
sub
into
lcall
pop
rorl
xlat
pop
dec
pop
repz
pop
scas
mov
pop
inc
cli
js
es
sbb
mov
mov
inc
add
das
pop
lcall
fisubrl
lock
lods
add
inc
mov
adc
ds
dec
push
pop
mov
leave
nop
dec
lcall
sti
cmp
mov
pop
fistpl
inc
rcll
sbbl
dec
cmpsb
cmc
xchg
xor
fistps
xchg
fs
ret
add
mov
fimull
sbb
push
and
stc
imul
out
testl
mov
push
rcll
jmp
mov
fcomps
pop
mov
xorl
popa
lock
jb
int
adc
mov
lods
jmp
sbb
lret
mov
inc
cmp
sub
xor
pop
cmc
xchg
inc
jno
cld
mov
inc
cmp
cmp
mov
jge
loop
sbb
lahf
pushf
imul
ds
push
mov
imul
adc
dec
mov
mov
mov
jno
mov
xchg
mov
lahf
dec
std
mov
cmp
sub
jle
and
jle
je
rep
aad
lods
gs
jle
mov
stc
add
cmp
mov
fistpll
cmp
mov
pushf
jge
jmp
outsl
xor
cli
pop
rcl
or
fs
test
and
ret
dec
lretw
lods
mov
push
sbb
negl
jl
add
shl
adc
cmp
loope
lahf
dec
mov
mov
fldl
mov
idiv
ret
cmp
mov
dec
and
push
sti
cmpsb
into
loopne
shlb
ja
shll
rorl
popa
push
scas
adc
loopne
outsb
jmp
add
push
shr
aad
into
xor
movsb
dec
push
imul
lock
cmp
fmuls
mov
cmp
xchg
cmp
dec
lea
sub
es
sbb
push
cmpsb
mov
mov
roll
mov
fldcw
sbb
addr16
lcall
fsubr
xchg
sub
mov
sbb
int
or
sbb
inc
lods
leave
cltd
mov
rolb
repz
mov
enter
sub
test
pop
movsb
lods
inc
adc
pop
sub
dec
aaa
dec
pop
shl
stos
pop
mov
dec
jle
add
mov
adc
fsubl
enter
xlat
inc
xchg
sbb
push
outsl
stc
mov
icebp
pop
add
push
inc
jecxz
into
or
pop
push
xor
loope
xor
jecxz
lds
fwait
inc
out
int
in
add
mov
insl
lret
cmpsb
enter
or
mov
xlat
mov
xchg
mov
pusha
in
xor
test
xchg
nop
rolb
imul
jns
mov
test
jnp
push
mov
hlt
sbb
add
lock
and
push
popf
push
pusha
insb
dec
mov
sahf
cli
pop
dec
lods
or
xchg
jno
stos
mov
cmpsl
outsl
addb
push
sahf
roll
push
dec
inc
mov
inc
repz
cld
jno
into
sub
sub
mov
pop
lds
repz
in
cmpsb
movsl
xchg
pop
xor
aam
or
sub
push
inc
xor
mov
leave
mov
fimuls
iret
test
call
push
push
ja
mov
shrb
out
std
inc
cmpsl
or
sbb
scas
jo
repz
cld
loope
inc
jle
rclb
adc
fisubrs
lahf
adc
test
loope
ret
cmc
pop
sbb
inc
test
jle
popf
lods
in
adc
loopne
movsl
or
test
into
in
ficoms
xchg
cmp
mov
ret
mov
popf
int3
cmp
cmp
subl
rolb
icebp
xchg
pushl
pushl
and
push
mov
sbb
cmc
insb
mov
add
dec
pop
or
xor
jp
pop
sbb
xchg
rcrl
and
pop
gs
ljmp
adc
push
cmp
mov
jmp
into
mov
icebp
pop
rorl
adc
dec
and
scas
enter
cmp
add
aaa
ljmp
xchg
aaa
mull
and
mov
mov
lods
es
lock
mov
addl
xchg
inc
mov
outsl
add
push
fisttpl
cs
loop
shll
mov
mov
add
test
pop
sbb
in
sahf
scas
fs
push
dec
pop
and
xchg
fcomip
xchg
rorb
fadd
mov
outsb
fsub
icebp
mov
mov
es
push
pop
pop
and
xor
stos
dec
dec
add
std
adc
adc
xor
inc
xchg
or
mov
pushf
and
jl
cld
lret
cs
pop
out
mov
pop
mov
or
push
and
mov
jb
in
and
push
adc
dec
sub
out
xchg
sbb
cmp
xorl
enter
outsl
and
cmp
add
jle
aaa
sbb
sub
ficoml
cwtl
push
pop
gs
in
imul
aas
add
mov
icebp
adc
stc
xchg
mov
inc
or
push
hlt
sub
lcall
imul
pushf
push
fisttps
adc
sub
and
mov
jbe
push
push
xchg
adc
orl
dec
pop
cmpps
andl
cmp
mov
push
lea
and
pop
push
and
xchg
mov
cmc
into
imul
mov
fcmovnu
dec
and
ret
xor
data16
jge
xchg
out
test
jns
mov
orl
imul
data16
in
push
sub
cs
cmp
in
dec
push
das
push
cmp
cs
mov
mov
cmp
jl
push
mov
mov
and
jmp
or
inc
jmp
nop
sbb
lods
faddl
jg
mov
pop
push
aam
ret
push
xchg
enter
jmp
mov
inc
repz
cs
faddp
push
ds
fwait
mov
push
pop
dec
mov
scas
aaa
mov
jae
xor
xor
add
dec
popf
cld
addr16
inc
dec
mov
adc
dec
daa
dec
inc
adc
shlb
inc
mov
addr16
jle
insl
jecxz
mov
insb
mov
cli
push
xor
imul
push
sbb
adcb
or
aaa
dec
pusha
stc
xchg
cmpsb
andl
mov
js
sbb
lods
hlt
xchg
out
xchg
inc
into
insb
lods
inc
and
xchg
pop
add
sbbl
out
scas
mov
pop
push
sahf
lea
lock
inc
ljmp
into
mov
mov
push
call
fsubrs
ds
daa
sub
icebp
loop
xchg
lahf
andb
ret
or
sub
std
xor
imulb
mov
jae
scas
dec
pop
pop
sub
inc
mov
daa
push
fildl
je
xchg
inc
xchg
sub
jmp
iret
mov
out
jne
sbb
mov
sub
adc
rep
in
mov
aaa
lea
lgs
cli
jle
push
addr16
out
movsb
mov
ja
jbe
adc
sbb
mov
jecxz
dec
fimull
jp
jns
xor
andb
push
xchg
xor
cltd
mov
call
jp
fdivrl
ret
cmp
ss
mov
cwtl
dec
dec
xchg
lods
sbb
mov
shlb
loop
and
push
stos
cmpsl
mov
pusha
or
sbb
test
out
int3
inc
movsb
pusha
jno
shrl
cmp
add
add
data16
inc
push
sbb
inc
inc
cmovne
cmp
lret
test
rorl
imul
and
jns
lods
mov
or
push
and
out
mov
add
or
pop
mov
mov
mov
pop
mov
xchg
stos
push
cmp
insb
jb
xchg
cmp
xchg
fmull
cld
sti
cmc
bound
mov
jbe
das
in
shl
aad
fwait
imul
scas
adc
xchg
enter
or
lahf
or
ss
jecxz
pop
xchg
pop
inc
insb
add
shll
mov
stos
mov
xacquire
or
and
js
hlt
mov
sbb
inc
enter
ljmp
aaa
movsb
lods
add
push
inc
nop
xor
and
shlb
add
add
xor
es
stc
das
or
sub
mov
dec
in
les
arpl
adc
shrb
sub
xor
shr
or
ficomps
int3
jecxz
or
es
pop
rcr
pop
fstp
ds
int
jns
push
jge
out
mov
pop
cld
test
test
jle
xlat
addl
mov
xlat
add
or
push
int3
jmp
in
push
repz
xlat
cli
mov
xchg
je
xor
decl
sti
inc
fwait
insb
lret
sbb
xlat
or
in
inc
jmp
call
inc
push
mov
sti
out
push
test
add
jns
mov
push
and
lcall
mov
ljmp
filds
rcl
popa
pop
xchg
push
ret
or
jno
shll
enter
dec
shrb
add
lods
dec
fsubs
shr
sbb
and
pop
call
shll
ljmp
hlt
adc
gs
insl
push
lods
daa
fsubs
test
and
push
cmp
inc
int
ja
inc
xchg
stos
aam
adc
dec
or
clc
mov
lcall
pop
cmp
sbb
repnz
clc
xchg
fistpll
pop
popa
loopne
sbb
shll
cs
cmpsl
jno
pop
test
sbb
leave
sub
and
mov
popf
jg
pop
mov
repz
test
xchg
xchg
cmpsb
add
pop
mov
and
jle
fucomp
mov
xor
inc
jno
les
add
repz
pop
aam
roll
sbb
sbb
mov
cmp
inc
sub
mov
push
in
xchg
sub
out
pop
jnp
sbbl
mov
adc
pop
fisubrl
jne
popa
mov
inc
pop
sub
stos
pushf
pusha
js
and
fcmovbe
insl
xchg
sub
mov
jp
in
push
mov
out
and
mov
push
or
int3
call
dec
dec
lods
cld
sub
in
adc
sub
push
push
and
sbb
fdivl
in
push
dec
mov
and
popa
mov
mov
sub
mov
pop
stc
and
xchg
cmp
pop
jae
pop
pop
xor
pop
xor
addr16
inc
popl
push
mov
pushf
jle
dec
and
into
adc
mov
orl
or
pop
out
push
sbb
outsb
push
push
aaa
in
test
lock
pop
fwait
aad
in
mov
fnstenv
movb
sub
push
clc
sti
push
sub
dec
cwtl
push
inc
pusha
enter
sub
push
out
mov
sahf
pusha
lock
ret
inc
pop
out
icebp
jbe
hlt
cmp
lret
ja
cli
test
cmp
and
pop
mov
mov
mov
arpl
cpuid
or
or
dec
std
out
jb
adc
fs
std
and
dec
test
mov
jb
jo
std
sbb
cld
or
mov
mov
push
loopne
push
jno
ss
cmpb
gs
push
sub
js
imul
aaa
mov
jb
lret
add
icebp
xlat
mov
jnp
daa
into
test
je
scas
cmpsl
shrl
dec
mov
loop
sub
bound
mov
les
sub
inc
xchg
or
out
xchg
mov
lea
lahf
int3
jmp
stos
pop
push
mov
shrb
addr16
add
push
test
inc
push
xchg
insl
push
xor
fwait
pop
insb
adc
dec
in
xor
jns
inc
xchg
cmp
sbb
cmp
lds
cmp
add
lock
mov
dec
and
stc
out
cmc
sbb
mov
push
pushf
xor
je
iret
inc
imul
inc
dec
aaa
xor
ds
loopne
lock
pop
ret
clc
xchg
jl
sbb
xlat
movsb
pop
cli
xor
scas
imul
push
rorl
jl
adc
lock
mov
cmp
jmp
cwtl
aam
ds
mov
push
repnz
xor
adc
rolb
xchg
mov
dec
adc
std
xor
sbb
add
mov
movl
push
int
dec
outsl
xor
or
fdecstp
adc
mov
ret
lahf
add
xor
sbb
sub
shll
ljmp
jg
pop
sub
xor
mov
pushf
cmpsb
adc
scas
mov
push
mov
aad
in
inc
cmpsb
push
and
inc
rorb
adcl
inc
in
std
out
stos
mov
or
rcr
mov
bnd
xor
mov
fcom
jno
ds
adc
aas
cmp
dec
inc
push
xor
scas
addr16
or
pop
push
subl
or
js
test
mov
mov
dec
out
jge
lods
jne
sbb
jns
xor
iret
aas
cli
xchg
scas
mov
shrb
mov
rolb
push
fs
adc
das
xchg
adc
ret
or
jae
jae
js
jp
jle
js
sbb
dec
hlt
pop
inc
jecxz
pop
xorb
fcoml
fstl
cmp
stos
loopne
cmp
push
into
in
push
mov
inc
inc
jnp
and
sub
fstp
in
lcall
sbb
jl
mov
sub
stc
rcrl
xor
data16
imul
ficomps
rorl
mov
jmp
mov
aaa
push
and
cld
in
outsb
sqrtps
push
pop
stos
xchg
fld
sub
dec
or
push
imul
in
stos
push
popa
lock
dec
ja
jecxz
sbb
jne
sub
or
jbe
mov
fiaddl
int3
es
adc
push
out
in
jle
jmp
cmp
lds
idivl
lds
loop
les
mov
jge
mov
dec
rclb
fmuls
cmp
push
arpl
sbb
pushf
or
inc
sub
outsb
dec
sbb
stc
pushf
mov
and
aas
das
add
xchg
jb
cmc
int3
fsubrp
das
ja
stc
dec
xchg
inc
or
mov
mov
mov
sub
xchg
mov
cmp
xchg
mov
push
push
clc
add
xchg
dec
jecxz
int
int3
sbb
and
push
sub
lret
push
push
je
xchg
in
ret
outsb
push
sub
cld
mov
inc
addr16
mov
xchg
xchg
pop
outsl
jmp
xor
push
mov
and
adc
mov
orl
add
inc
mov
xchg
push
pop
jg
push
push
push
dec
mov
jne
adc
aad
mov
mov
xor
aaa
jns
xlat
sahf
call
clc
aam
add
pop
stos
movsl
push
sub
push
sub
sbb
jnp
cmp
fucomi
mov
inc
aaa
xlat
pop
adc
cmp
jns
inc
push
add
ret
mov
mov
push
sbb
mov
arpl
lahf
nop
cwtl
in
insb
inc
aad
scas
shrl
clc
data16
xlat
mov
push
cld
adc
mov
sarb
ret
push
and
pop
mov
dec
mov
or
ret
lahf
enter
add
mov
inc
leave
repz
cli
cld
or
jle
test
in
adc
mov
push
jle
pop
mov
clc
mov
int3
fidivrl
fmul
push
dec
jb
adcl
mov
shlb
insb
pop
inc
inc
push
pop
sbbb
mov
int3
loopne
fbstp
insb
mov
push
movsb
sub
adc
mov
gs
scas
popa
ret
and
sub
cmpsl
cltd
movsb
ret
xor
dec
mov
push
pop
loope
arpl
pop
shll
pop
mov
xchg
aad
dec
sbb
arpl
lods
fwait
push
stc
pop
fisubs
sbb
pop
cmpl
fs
jl
adc
mov
or
enter
jns
inc
popa
loope
add
add
iret
adc
push
imul
add
sbb
subl
out
cli
xchg
xchg
arpl
adc
mov
jne
and
dec
js
ds
dec
or
adc
and
cltd
pop
mov
js
mov
cmp
stos
jp
jle
jle
cmp
pop
out
xlat
push
and
shl
test
mov
cwtl
hlt
leave
lea
cmp
jle
sbb
pop
push
lods
mov
or
cmp
xor
test
push
into
iret
sar
orl
mov
mov
sbb
aaa
mov
jle
in
xor
ljmp
out
aad
inc
lds
sbb
shll
sbb
scas
clc
lret
mov
push
jle
inc
fs
into
in
ret
ret
mov
dec
cli
ljmp
mov
adc
leave
shll
mov
aas
jl
popf
jae
and
xchg
mov
into
mov
in
test
cmc
out
jne
ret
or
push
orb
shll
pop
out
call
inc
mov
outsb
xchg
dec
xor
les
out
dec
cmc
cli
xchg
leave
in
push
sbb
jns
das
push
pop
inc
xor
loop
push
dec
loope
cmpsl
ss
jo
mov
pop
lock
adc
icebp
dec
lcall
mov
mov
addb
lea
sahf
push
inc
cmp
addr16
jecxz
je
xor
lods
ljmp
adc
push
rcrb
pop
jge
mov
aas
leave
and
leave
bound
js
data16
adc
out
outsl
add
and
dec
sbb
cmp
mov
test
mov
fbstp
fsts
in
xor
jle
mov
lods
pop
mov
dec
add
xlat
pusha
lods
daa
out
out
adc
pop
or
addb
and
ljmp
stc
stc
jbe
pop
sbb
aad
iret
call
imul
bound
cli
aad
inc
lahf
push
ds
mov
pusha
aam
add
add
popa
cmpsl
jo
fbstp
sub
int3
sbb
cmpsb
fmull
fcompl
push
dec
lods
xchg
out
xchg
sbb
push
out
std
jo
loope
sbb
inc
bound
cwtl
sbb
mov
xchg
lahf
fldt
test
in
fstpt
cmpl
jb
stos
pop
adc
push
xor
out
std
jb
sub
inc
mov
addr16
xchg
mov
inc
rcl
mov
jnp
inc
out
inc
cmpsb
aad
lcall
aas
pop
das
into
testl
das
cmp
jl
cmp
mulb
fs
and
push
vmread
jmp
dec
in
sahf
outsl
push
pop
fildll
lret
adc
out
lcall
nop
inc
cmpsb
rol
pop
mov
mov
pop
add
dec
int
loop
inc
jns
lret
xchg
mov
fdivs
push
push
mov
mov
cmp
cmpsl
push
xchg
dec
int
std
xor
scas
and
fistps
mov
addps
mull
ficomps
cmp
daa
in
cld
and
shlb
add
mov
mov
push
push
push
test
outsb
js
mov
das
inc
adcl
inc
mov
pop
scas
mov
lods
or
lahf
and
loopne
mov
imul
push
in
mov
adc
pop
push
sbb
and
dec
or
sti
xlat
xchg
popa
ret
scas
fisubl
adc
mov
jg
loop
xchg
mov
outsb
into
pop
mov
mov
push
jecxz
lods
stos
hlt
cmpsl
ds
inc
adc
push
sub
lock
mov
les
mov
xchg
lahf
add
push
outsb
lds
mov
mov
js
out
insb
xor
sub
fldenv
sub
inc
movsl
mov
mov
fisubs
fbstp
and
in
push
sbb
jmp
jecxz
mov
sub
dec
add
or
dec
or
rcll
jne
adc
andb
lret
jb
xor
adc
fs
testl
sbb
adc
les
push
inc
xor
das
dec
and
lods
jge
test
idivl
stos
mov
je
notl
xchg
fmull
inc
gs
mov
outsl
add
mov
pushf
pop
and
ja
dec
fimuls
add
lret
aas
icebp
jl
loopne
adc
mov
stos
clc
shrb
push
jo
push
jp
adc
jmp
xchg
xchg
xchg
fnstcw
ret
push
and
sub
sbb
mov
xor
jb
and
clc
gs
lret
dec
ficoml
out
xor
sub
pop
xor
hlt
ja
cli
mov
int
xlat
rcrb
dec
mov
mov
shll
add
test
mov
pushf
jbe
inc
lret
add
pop
and
mov
movsl
negb
mov
and
add
repnz
ds
xchg
inc
dec
pop
dec
pop
dec
int
rcll
or
hlt
sub
cs
and
xchg
aad
popf
sti
push
je
int3
out
test
adc
xchg
adc
pusha
mov
sbb
movhps
jbe
fucomip
add
cmc
aam
and
add
insb
leave
addr16
xchg
ds
fadds
adc
repz
aaa
andl
and
pushf
push
fisttpl
sbb
xor
push
in
mov
outsb
or
push
andb
popf
push
je
mov
out
xor
test
ret
xor
mov
je
add
and
sub
scas
xor
sbb
lahf
outsb
aaa
hlt
test
mov
cmpsl
int3
mov
mov
js
pop
inc
jbe
cmpsl
jns
mov
jb
roll
mov
mov
inc
gs
mov
lds
cmp
push
popa
inc
cltd
andl
xchg
mov
xchg
push
addr16
mov
push
sub
and
popf
outsb
mov
pop
xor
ja
aas
pop
and
ds
mov
cmp
scas
fucompp
jo
das
xchg
aad
out
andb
push
shll
sbbb
es
inc
int3
pop
movb
cmp
dec
cmp
mov
inc
mov
je
into
push
fdivrs
data16
clc
jbe
jp
dec
sub
dec
and
hlt
jecxz
mov
loope
push
hlt
gs
sbb
jl
cld
adc
cmp
out
adc
outsb
outsl
int3
mov
hlt
jmp
insb
xor
adc
adc
cltd
scas
addl
stos
or
pop
loopne
mov
or
mov
loope
dec
jg
fidivl
ja
sub
ja
loopne
inc
cli
mov
lea
sbb
mov
or
push
sarl
mov
iret
sub
int3
pop
ficomps
adc
cmp
jp
das
cld
aas
rcll
or
fdivrs
xchg
adc
mov
pop
xor
aaa
ret
jno
xor
loop
xchg
popa
xor
adc
add
mov
fldl
xchg
mov
loop
push
mov
pop
xor
test
fs
fdivrp
loope
stc
mov
cmpsl
test
pusha
pop
pop
pop
or
dec
mov
pop
push
mov
rcl
je
xor
push
jg
jnp
mov
popf
js
shl
ljmp
repnz
push
mov
bound
jmp
leave
jg
fisttpll
mov
dec
mov
pop
fs
mov
dec
lods
pop
and
mov
adc
and
xchg
ja
mov
or
pop
movsl
mov
cld
jp
push
jo
jmp
add
pop
adc
mov
push
ss
xor
sbb
cmp
push
xchg
mov
jg
pop
pop
jg
sbb
call
mov
loop
mov
lods
add
stos
loop
and
inc
add
aaa
mov
mov
cmp
aas
bnd
and
sahf
pop
lods
xor
arpl
dec
cli
jno
out
rcll
xchg
cld
add
adc
lea
leave
fdivrl
jnp
lahf
xchg
xchg
ret
mov
push
mov
inc
cmp
and
stos
movsl
cmp
call
nop
adc
nop
aad
mov
addb
fcmove
imul
xchg
add
sti
mov
or
lods
push
pop
add
int3
jecxz
mov
mov
imul
sbb
fbld
adc
push
mov
and
mov
jb
and
adc
add
pop
adc
cmp
jns
mov
pushl
test
jno
movsl
cs
scas
push
dec
fidivs
sub
or
adc
mov
int
insb
push
inc
pop
dec
push
iret
fs
adc
and
jb
sti
es
mov
mov
sbb
ficompl
ror
mov
loopne
in
adc
iret
inc
add
aam
adc
pop
sbb
cmpsl
movsb
push
sub
fdivrs
decb
call
xchg
in
jp
xor
mov
test
cmc
and
push
fwait
popa
idivb
push
xchg
imul
pop
rolb
xchg
jns
sbb
repz
out
inc
sub
mov
pop
jno
gs
lahf
dec
or
jb
pop
mov
push
and
adc
mov
ds
out
scas
mov
mov
into
lcall
outsb
xchg
je
jb
data16
rcr
stos
adcl
mov
or
lret
repnz
cmpsb
test
inc
out
xchg
sbb
dec
xchg
add
nop
jae
push
int3
mov
mov
inc
ror
add
ret
add
or
stos
adc
xor
arpl
jnp
cmpsl
xor
xchg
add
into
push
movsl
xchg
lods
cmp
aam
xchg
mov
aad
xor
loope
aaa
fldt
sti
repnz
push
imulb
sub
fldt
cmp
mov
les
push
sub
dec
hlt
clc
push
push
sub
ret
daa
mov
push
testl
out
insb
or
xlat
dec
dec
jb
scas
pop
cmpsb
jo
call
lret
or
icebp
aam
inc
push
mov
fs
cmp
jae
add
ror
mov
pop
repnz
sbb
scas
sub
add
xor
insl
sarb
shll
les
mov
sbb
adc
pop
movsl
push
sar
gs
sbb
cmpsl
jbe
hlt
js
mov
add
jp
cmp
mov
divl
stos
dec
xchg
decb
incl
ljmp
push
jge
mov
mov
iret
gs
add
cmp
popa
add
mov
jns
or
and
aad
or
loop
xor
imul
sbb
cmpsb
mov
int3
icebp
dec
in
insb
sarb
lods
jecxz
jle
mov
cld
std
mov
dec
inc
push
sbb
mov
mov
cli
and
xchg
pusha
pop
mov
mov
dec
incb
int3
add
outsl
jae
push
leave
testl
adc
repnz
or
jmp
cmpsb
xchg
enter
out
dec
fdivr
popf
mov
repnz
xchg
andb
shlb
or
mov
push
movsb
push
mov
nop
sbb
push
dec
mov
jecxz
pushf
jl
in
add
lret
sub
mul
dec
pop
ss
or
cmc
fildl
pusha
jmp
iret
dec
inc
sbb
clc
divl
jp
test
lds
push
mov
inc
mov
inc
mov
fisubrl
in
mov
jmp
mov
cli
in
gs
out
push
pusha
mov
dec
mov
add
cmpsb
add
mov
push
das
dec
add
incl
jge
shll
pop
test
cmp
adc
aad
jno
mov
fcoml
dec
adc
add
les
xchg
sbb
jecxz
scas
idivb
mov
pop
out
push
jge
push
inc
out
dec
jae
dec
push
mov
mov
sbb
adc
sub
shll
push
jle
adc
sub
lods
popa
mov
cs
cmp
mov
movb
outsb
rcrl
out
push
jmp
mov
jg
fcompl
push
inc
aam
leave
cs
sti
xlat
sbb
xchg
jmp
clc
jmp
inc
pop
pop
mov
cmpsl
fstps
imul
divl
sub
leave
int3
popa
loop
aam
cli
or
lahf
iret
cwtl
push
cmp
testb
jecxz
repnz
in
inc
ret
push
mov
jns
push
jae
adc
repz
int3
popa
loope
cmc
xlat
xor
scas
jb
push
mov
jns
cmp
sub
scas
pop
call
adc
and
mov
xchg
test
cmp
mov
pop
int3
popa
mov
sub
mov
jne
adc
test
fstpt
testl
mov
shll
add
jo
sub
pop
in
xchg
xor
cmp
cmp
cmp
mov
movsb
xchg
pop
inc
test
pop
movsb
mov
mov
cmpsl
add
ljmp
stc
cmp
jle
inc
or
jns
shll
lret
pushf
test
mov
cs
notb
adc
jns
out
rclb
mov
cmpsb
mov
add
mov
inc
lea
popf
pop
push
call
les
int
mov
dec
in
jmp
mov
bound
int
movsb
dec
inc
fnstsw
inc
push
ds
mov
push
cmpsb
loopne
xchg
pop
addb
testb
testl
test
inc
xchg
aaa
push
adc
add
out
aam
xchg
inc
ficomps
inc
cmp
pop
jns
lcall
xor
jbe
mov
adc
mull
lods
inc
loop
fmul
test
ss
inc
cli
dec
lods
mov
call
shlb
fistpl
push
je
push
mov
add
mov
jmp
mov
mov
xchg
add
cmpsb
mul
mov
dec
stos
insb
lea
sbb
push
popa
xor
ss
in
push
out
cmp
pop
aaa
xor
orb
movsl
adc
lcall
sti
and
jmp
jo
or
jl
dec
sbb
dec
out
je
xor
icebp
adc
jae
mulb
pop
lret
imull
bound
mov
int
les
arpl
cmp
cltd
add
sub
insb
fxch
inc
or
lock
xchg
adc
xchg
pop
nop
mov
cmpsb
cmpsb
mov
mov
xchg
clc
add
fisubl
sbb
lret
or
or
subl
pop
lahf
testb
mov
inc
pop
push
lahf
add
ljmp
dec
arpl
jg
inc
mov
mov
inc
arpl
mov
mov
loope
push
adc
jle
cmpsb
add
mov
xchg
adc
mov
das
imulb
mov
cmp
subb
clc
jecxz
in
dec
stc
inc
mov
mov
out
lds
daa
sub
pop
pop
clc
into
out
xchg
push
fstpt
jnp
pop
lret
mov
push
cmpsb
repz
xor
add
out
adc
mov
lock
xchg
xor
adc
mov
or
mov
mov
xor
and
jno
mov
pop
mov
test
jmp
aas
loope
xchg
fnstsw
sbb
into
inc
mov
cs
sub
rorb
xor
pop
int
and
call
adc
cli
and
mov
and
sbb
xchg
and
jge
je
mov
mov
inc
inc
sub
scas
and
cltd
jp
add
repnz
rol
inc
test
mov
sbb
push
stos
sub
pop
mov
test
xchg
mov
cmpsb
push
cmp
sub
mov
or
lcall
orb
roll
add
in
mov
or
clc
in
sti
add
jle
jne
cmc
inc
cmpsb
pop
mov
clc
fs
stos
mov
or
ret
add
inc
sbb
fdivrl
dec
jno
inc
cmpsb
push
shl
add
aaa
mov
addr16
dec
cmp
xchg
out
dec
cmp
dec
jnp
jl
loop
in
pop
cmp
adc
pop
dec
adcb
sub
inc
loopne
sbb
push
clc
push
ds
push
lods
adc
mov
iret
push
push
movsb
sub
mov
shlb
loop
in
cmc
imul
and
popa
fisubl
push
cmpb
fs
leave
xchg
ret
inc
insl
lods
out
shll
fiaddl
pop
mov
xchg
adc
outsb
jns
insb
xchg
add
addr16
movsl
or
dec
add
test
pop
adc
lods
mov
push
sbb
adc
xchg
push
pop
jmp
stc
sbb
roll
sbb
push
rol
xlat
call
mov
je
push
add
add
aam
mov
sbb
out
idivl
les
dec
gs
or
rcrb
push
popf
xchg
int3
fs
out
inc
lock
mov
jecxz
sub
rolb
sbb
ja
arpl
mov
lahf
mov
das
dec
mov
imul
or
test
movb
dec
outsb
notb
jbe
pop
mov
mov
lock
dec
pop
mov
mov
sahf
jl
xchg
aaa
stos
call
pop
sbb
out
jge
in
aad
std
jmp
outsl
mov
cwtl
insl
adc
je
mov
xchg
inc
sub
jnp
add
lods
cmp
pop
mov
scas
popl
xchg
mov
mov
push
mov
xchg
movsb
bound
std
out
mov
sub
out
sbb
rcll
dec
out
xchg
outsb
xlat
mov
xor
decl
push
scas
mov
int
adc
aas
aam
outsb
mov
cmc
mov
movl
cmp
pop
push
sbbl
fnsave
lods
mov
cmc
enter
inc
sub
rorl
movsb
sbb
mov
mov
jmp
cltd
jecxz
cs
and
sub
fisttps
fsts
test
jbe
sub
pop
mov
sbb
bnd
xor
pusha
clc
mov
mov
mov
mov
fdiv
mov
mov
test
adc
aas
sub
pop
mov
pop
stc
add
rorl
cltd
xor
outsb
popf
fcmove
in
imulb
lahf
adc
cmpsl
je
jbe
ljmp
sbbl
je
adc
inc
cmpsw
dec
aaa
loop
mov
out
adc
xchg
jo
in
test
gs
repz
jb
push
push
adc
mov
daa
aam
mov
dec
hlt
insb
jle
mov
out
push
mov
sahf
je
cmp
fdivrl
mov
adc
mov
sbb
lods
add
orb
es
sub
insl
out
and
adc
dec
pop
iret
fwait
jns
xlat
data16
adc
or
xor
stos
cmp
xchg
rcll
jecxz
inc
fwait
cmpsl
lret
mov
push
jp
sub
fisubs
cmpsl
dec
fidivrs
bound
push
iret
mov
push
dec
adc
add
xor
imul
enter
scas
mov
push
sti
inc
mov
sahf
out
mov
insl
cmpl
ljmp
cmpsb
mov
in
pop
sbb
les
cwtl
sahf
sbb
test
into
push
int
xchg
fists
push
stc
xchg
push
clc
inc
inc
mov
push
lock
hlt
pop
out
sub
add
jecxz
jmp
and
daa
and
lods
push
xchg
into
pop
int
push
xor
stos
je
loope
jno
daa
pop
icebp
and
xchg
mov
push
clc
xchg
xor
xlat
stc
rcl
insl
pop
adc
dec
inc
mov
test
movsb
xor
push
jecxz
cld
cmpsb
jl
adc
xchg
xchg
cli
jecxz
xlat
nop
loopne
pop
fisubl
mov
out
andb
into
add
push
inc
test
js
shll
sbb
pop
jmp
mov
xlat
pop
pop
cs
sbb
ret
sub
cli
adc
loopne
stos
shr
popf
popa
pop
sub
xor
or
pop
sub
in
xor
repz
xchg
and
sti
ljmp
dec
xor
inc
push
inc
inc
push
push
push
mov
clc
sub
test
cli
inc
into
andb
lea
ja
clc
lds
test
inc
jnp
insb
mov
mov
aas
scas
mov
mov
nop
jecxz
or
ret
push
adc
loop
jl
xchg
cmp
mov
jns
imull
and
in
imul
cs
adc
outsb
outsb
dec
xchg
jge
jmp
cs
shll
xchg
add
rcll
sbb
adc
cmpsb
inc
lds
push
jmp
icebp
cmp
mov
clc
outsb
dec
mov
orl
push
test
movb
pop
roll
imul
lret
dec
in
mov
fcmovne
jne
int3
or
shll
add
push
inc
ds
int3
mov
call
pop
ret
or
jnp,pt
arpl
adc
btr
pop
sub
in
into
push
and
cmpb
cmpsb
push
mov
loope
inc
pop
hlt
mov
outsl
test
pop
aam
jns
xchg
dec
ret
cmp
jne
add
cwtl
xor
std
repnz
xor
push
into
aas
inc
movsl
insl
les
adc
cli
aam
loop
dec
es
imul
mov
push
or
addl
xor
or
arpl
push
sbb
xorl
std
push
xor
push
cmpsb
add
pop
xor
test
std
int
add
mov
aaa
les
sbb
xchg
cltd
cmp
icebp
ret
out
sub
cmp
aaa
xchg
jecxz
pop
pop
mov
pcmpgtw
sub
lcall
mov
mov
lds
xchg
mov
dec
out
cmp
pusha
mov
or
dec
out
mov
mov
push
pop
cmpsb
cmp
mov
xor
xor
sbb
mov
cmp
and
add
inc
push
bound
in
ficoml
ss
push
xchg
jmp
ret
ffree
subl
or
adc
iret
enter
out
insb
adc
punpckhdq
mov
inc
jae
subb
mul
mov
add
mov
mov
inc
push
cmpb
dec
sub
or
incb
pop
mov
cmpsb
stc
cmp
les
shlb
decl
mov
mov
mov
in
and
inc
into
inc
pop
add
ljmp
sbb
inc
dec
out
add
mov
insb
add
mov
and
inc
and
sub
test
ss
cmc
jl
push
stos
xchg
lret
stos
out
pop
addr16
insl
and
dec
idiv
sub
push
jecxz
jb
and
ret
jecxz
inc
into
pop
jg
popa
sbb
ljmp
mov
jle
dec
jb
xchg
lret
out
xor
sbbl
fwait
out
sti
pop
lahf
mov
sbb
imul
aam
mov
in
push
mov
sahf
and
xor
cs
add
xchg
xchg
add
je
sbb
rorb
lcall
repnz
iret
xor
mov
adc
sub
lea
rorl
pop
xchg
and
pop
cmp
dec
xor
shr
inc
stc
sbb
ret
popf
gs
push
cs
push
cmp
mov
fcmove
xchg
movsl
add
int3
dec
xor
sub
bound
arpl
jae
xor
pop
negb
sbb
xor
les
cltd
ficomps
test
mov
sub
aad
push
jne
das
js
pop
mov
fisttpl
sti
decl
test
fwait
jae
mov
sub
or
popa
inc
mov
cmp
daa
dec
fnstenv
add
ret
or
xchg
adc
rolb
rcll
xlat
xor
pop
aaa
pop
mov
inc
sub
lock
lcall
andl
mov
pop
xchg
sbb
ret
jl
sub
dec
fildll
pop
cmp
cwtl
jle
daa
loopne
aaa
mov
pop
repnz
cmpl
push
subl
mov
out
es
loope
adc
sti
or
rclb
ret
dec
rcr
push
inc
shrb
inc
js
xchg
xor
ret
or
add
or
cwtl
cmc
loope
bound
faddl
mov
mov
pop
push
mov
xchg
mov
xor
fidivs
sub
jno
rcr
dec
mov
xor
and
sbb
dec
rclb
fidivl
xchg
mov
cmp
repz
lahf
jo
test
jnp
subb
xor
fcoms
popa
add
fadd
or
add
xor
ret
xor
add
or
rcl
adc
loope
movsb
pop
xchg
or
call
and
fwait
roll
icebp
lret
fiaddl
add
adc
sahf
xlat
or
lret
aam
repz
adc
insb
imul
lret
out
imul
mov
int3
out
sub
lock
movsl
inc
test
fcmovu
out
fnsave
mov
lock
leave
inc
push
es
xchg
push
es
dec
mov
lods
loop
fwait
movsb
fisubl
dec
push
jnp
mov
sbb
cltd
popf
imul
push
xchg
into
shrb
cmp
xchg
aam
jo
pop
mov
mov
lret
aad
mov
dec
sahf
jmp
mov
sub
dec
mov
int
and
lret
aas
das
fildll
lock
loop
xchg
in
cmp
push
inc
jne
mov
mov
call
jne
pusha
lds
jp
fldl
cmp
xchg
enter
adc
call
stos
mov
push
or
xor
push
sub
outsb
mov
cmc
jl
out
out
push
dec
loope
add
sbbb
mov
xlat
xor
ret
sar
fisubrl
nop
sub
push
cld
inc
in
aaa
test
popf
fwait
cmp
mov
cli
inc
dec
inc
popf
xor
lods
test
jl
shlb
jne
loopne
jge
mov
aam
mov
stos
ret
lock
xchg
cmp
adc
gs
xchg
jne
jp
push
cmp
sbb
push
pop
sti
leave
in
int
jge
fwait
jne
pop
movsl
adc
jmp
ds
push
inc
dec
sahf
push
jecxz
jo
daa
ficoms
in
nop
dec
lea
xchg
or
cli
pusha
mov
fisubl
hlt
iret
cmp
enter
sub
rorb
sub
sbb
sub
sub
sub
decb
mov
and
xchg
add
sub
cwtl
andl
jge
stos
stc
fbstp
pop
sahf
xor
inc
sti
xor
mov
clc
leave
sbb
dec
jge
dec
mov
cmp
jecxz
scas
or
outsl
dec
cmpsb
sub
scas
fistpl
dec
adc
mov
sbb
stc
adc
xlat
xchg
stos
mov
inc
and
mov
push
inc
pop
push
fbstp
lret
je
sbb
inc
adc
addr16
mov
or
ficomps
push
xlat
mov
fwait
mov
loope
call
mov
mov
add
cmp
xchg
adcl
test
dec
adc
push
scas
add
dec
shl
inc
inc
inc
mov
pop
dec
dec
je
lods
popf
inc
mov
jnp
and
test
add
mov
adc
je
int
out
mov
add
daa
lods
mov
and
ja
push
push
rcrb
add
lahf
fistpll
inc
cmpsb
mov
stos
push
xlat
adc
lcall
andb
jmp
mov
bound
arpl
imul
and
mov
mov
repnz
mov
adc
inc
mov
sub
dec
sbb
sbb
cmpsl
imul
xlat
push
in
mov
rol
jl
aaa
repnz
jne
cmp
push
cmp
sub
mov
je
and
pop
or
int3
xchg
xchg
xor
push
callw
aaa
lcall
push
sahf
cwtl
lret
pop
inc
fdivl
mov
mov
xchg
scas
cwtl
mov
xor
or
push
fs
jp
stc
xor
outsl
xchg
lret
mov
pop
outsl
in
pop
lock
mov
cmpsl
adc
fstpl
mov
xchg
insb
mov
pop
dec
jae
sbb
mov
sahf
insb
add
cmp
inc
dec
and
lods
int
xchg
fcomp
sbb
jb
in
mov
push
dec
push
and
dec
ret
xchg
test
test
out
sbb
pop
pop
test
mov
sbb
mov
mov
push
sahf
call
movsl
bound
sbb
shl
push
push
mov
addr16
cmp
pop
mov
mov
sub
out
mov
dec
iret
loope
idivb
or
rorb
out
xchg
xor
lods
lock
movl
jp
ror
jecxz
lods
ds
test
inc
inc
dec
xchg
xor
movsb
scas
rcrl
mov
sbb
pushf
ljmp
ja
cmp
sahf
xor
mov
repz
adc
addl
loope
sub
stos
das
mov
cmp
scas
clc
loope
lods
inc
pop
fisubrl
sub
dec
mov
and
adc
inc
add
push
dec
or
mov
clc
aad
sub
in
popa
test
jp
xor
pusha
sbb
cmp
movsl
sbb
gs
pop
popa
mov
xchg
lods
mov
dec
and
push
rcrb
cs
pushf
inc
scas
add
push
inc
mov
arpl
mov
mov
and
pop
adc
shlb
xchg
mov
jecxz
jne
push
fmull
and
and
mov
push
pop
lahf
pop
inc
sub
outsl
jns
xor
mov
jbe
dec
es
mov
mov
jmp
xor
sbb
leave
es
repnz
sbb
mov
imul
lret
dec
loope
dec
cwtl
stc
std
sbb
and
aam
lds
jns
and
inc
or
and
sub
jno
test
jge
int3
sub
xchg
pop
push
hlt
repnz
pop
fdivs
mov
sbb
push
jne
adc
ret
subl
mov
push
dec
adc
bound
pop
loope
xchg
fsubl
fcomp
popf
push
add
out
iret
out
roll
addr16
add
pushf
mov
jne
mov
dec
xchg
aas
pushf
jp
rcrl
pop
jecxz
mov
sbb
add
sub
add
nop
jbe
push
insb
add
mov
int
lea
outsl
pop
fidivl
mov
sub
cli
cwtl
pop
aaa
shr
pop
push
jb
or
add
xchg
push
fdivl
popa
int
repnz
out
sub
adc
movsb
dec
fwait
mov
pop
ret
in
loopne
mov
fcmove
and
jnp
fisttpll
out
dec
xchg
hlt
fs
jg
outsl
cmpsl
dec
or
cmpsb
jo
int3
jb
fisubrl
mov
adc
js
cmpsl
shl
int3
lcall
leave
js
stc
xor
arpl
inc
dec
enter
adc
fs
pop
dec
int3
sub
dec
mov
pop
sti
mov
xor
out
insl
pop
push
ficompl
negl
dec
in
les
loopne
push
mov
pop
sti
les
lahf
jne
test
add
lahf
fmulp
pop
sarl
add
loopne
mov
scas
mov
pushf
fwait
leave
test
add
push
lods
pop
push
fs
push
ficoml
sub
repz
out
cld
lret
jmp
int3
dec
rol
incl
addr16
pop
add
xor
orb
xchg
cmp
sub
sbb
call
addl
sbb
sbb
xchg
jecxz
enter
inc
cld
or
sbb
out
punpcklbw
jmp
call
pop
cmc
popf
rcrb
mov
push
aam
jo
push
cmpsl
jne
inc
sbb
pop
sub
jg
fimull
cmpsl
and
popf
fstl
mov
pop
jg
mov
mov
loop
inc
adc
insl
lods
faddp
cmp
pop
push
dec
lea
xor
gs
les
cwtl
jge
sti
push
pop
xor
idivb
dec
cmp
jae
mov
mov
sub
jp
mov
popf
xor
fmuls
xchg
adc
pop
idivl
pusha
push
pop
leave
dec
mov
es
nop
out
adc
or
mov
aam
fidivrl
and
sbb
outsb
je
jnp
sub
cltd
sarb
cs
mov
dec
jecxz
sbb
sub
popf
push
push
rol
scas
sub
jle
ret
xor
mov
testb
mov
xchg
sahf
pop
aas
jnp
cmpsl
mov
out
lods
ret
pop
mov
cwtl
cmpb
lods
out
mov
jge
sbb
mov
test
cmp
fsubs
imull
and
pop
xchg
nop
daa
cmp
cmp
lock
ss
aam
scas
dec
xchg
adc
cli
pop
sbb
xorb
cmp
push
sbb
in
sub
ss
mov
push
xchg
inc
sti
jns
hlt
mov
andl
std
push
push
sub
sub
ret
frstor
cmp
sub
cs
sub
fdivrs
push
std
cltd
add
jl
and
push
fadds
lret
bound
dec
push
pusha
aad
mov
loope
int3
mov
inc
xchg
mov
inc
push
mov
push
fsubr
fnstenv
or
mov
aad
lods
xor
xchg
fdiv
repnz
fdivl
imul
int
and
popf
sub
fcomps
lods
ds
mov
mov
loopne
repz
pop
sbb
jo
adc
adc
sbb
aam
les
xor
pop
shll
stos
clc
sbb
aas
lods
ja
jp
dec
fwait
mov
pop
cld
and
fadds
mov
aaa
and
mov
sbb
pop
xchg
and
xchg
mov
push
ja
or
or
xchg
incl
add
sbb
sub
pop
in
push
jg
mov
sbb
mov
cld
testb
ficompl
leave
mov
pop
and
cmp
fdivl
loopne
cmp
adc
pop
or
int3
pop
xchg
mov
idivb
mov
push
gs
dec
ret
test
int3
hlt
cld
push
dec
mov
lret
or
cmc
std
adc
xchg
cmp
or
stc
xlat
icebp
cmp
cwtl
ds
add
mov
or
icebp
sub
or
cld
ja
mov
call
pop
sub
fsubl
xchg
jl
iret
in
cmp
inc
mull
pop
jl
faddl
lret
je
jge
inc
pop
jno
push
sub
mov
imul
cmp
inc
pop
mov
xchg
fdivrl
inc
mov
jne
pop
pusha
inc
imul
aaa
shr
jmp
xlat
dec
inc
data16
add
cmp
lea
inc
pop
fiadds
fiaddl
or
movsl
pop
insl
lret
inc
jmp
cs
mov
les
and
push
dec
cmc
add
mov
into
cltd
les
or
jp
pop
pusha
lds
int3
out
dec
jmp
test
mov
jl
mov
pop
in
testl
cmp
popa
xlat
into
pop
jl
mov
aas
cwtl
hlt
add
push
fisubs
adc
scas
mov
iret
pushf
outsl
inc
cmp
cld
mov
scas
ds
into
add
sub
addr16
push
stos
cmp
xchg
mov
sbb
into
add
push
xchg
inc
push
xchg
xchg
push
mov
test
sarb
dec
mov
add
lret
jp
push
jecxz
scas
mov
ret
mov
xor
or
rolb
and
cmp
push
sbb
out
loope
test
sbb
or
jp
js
sub
insb
cli
add
or
in
adc
push
pop
jns
cmp
ja
es
sbb
push
fs
xor
adc
pop
mov
sbb
pop
cld
mov
icebp
jp
mov
loopne
pop
mov
xchg
jae
out
sub
test
cwtl
notb
in
mov
sti
das
loopne
sti
aaa
add
scas
das
mov
jg
mov
mov
cli
jmp
push
mov
test
dec
push
mov
jge
adc
push
mov
movsb
sbb
hlt
ljmp
cli
mov
rcll
sub
adcb
pop
mov
mov
leave
or
out
ja
dec
test
loope
fsubl
rorb
and
sbb
cld
jnp
jmp
dec
mov
into
ljmp
cmpsl
sbb
repz
cmp
or
mov
xchg
xchg
dec
lock
insl
xor
xor
cmpl
xchg
stc
pop
frndint
push
cmp
jmp
push
stos
mov
add
mov
add
pop
insb
pop
jb
mov
stc
jae
push
cmpsb
xchg
test
pop
or
cmpsl
pop
scas
sbb
repz
ljmp
cmc
xchg
fstpl
xlat
pop
loop
fimuls
dec
jo
push
cmp
fadd
mov
inc
add
mov
inc
out
jmp
mov
js
or
push
jge
sbb
xor
rcll
mov
xchg
push
hlt
out
xor
fsubl
mov
lcall
out
push
cmpsl
in
andb
xor
jecxz
push
shlb
andl
shlb
fcompl
shrl
shlb
popf
push
leave
pop
inc
fstps
push
sub
movsb
xchg
xor
cltd
idivb
cs
mov
jbe
cs
mov
or
sub
ljmp
loope
sub
test
xchg
sbb
fucomi
sbb
movsb
imul
jnp
pushf
push
xor
mov
popf
adc
scas
fwait
ret
xchg
gs
icebp
add
jns
xchg
mov
or
test
in
cmpsl
mov
hlt
jb
movsl
push
lods
stos
in
sbb
mov
lock
scas
scas
xor
cmc
xchg
or
sahf
movsb
push
outsb
add
call
aaa
dec
cmp
aas
cmpsl
sub
push
xor
loop
pop
outsb
mov
xor
popa
add
pushf
and
pop
mov
icebp
out
jo
test
out
mov
mov
xor
imul
sar
push
jge
or
faddp
sti
ljmp
dec
pop
xchg
pop
sbb
push
dec
add
mov
xchg
mov
adcl
sbbl
dec
cmpsl
sarl
fs
xchg
outsl
or
sub
dec
mov
aaa
insl
fsubs
aaa
lods
jge
imul
dec
mov
movsl
popl
enter
clc
outsb
out
test
outsb
mov
mov
lds
mov
jns
cmp
jae
out
xchg
test
jg
and
scas
or
rorb
lods
dec
std
fdivrs
inc
xchg
sub
inc
stos
push
jno
jl
bnd
inc
pop
test
popf
or
inc
movsl
aas
or
jg
mov
mov
jns
mov
shlb
scas
jnp
inc
cltd
or
inc
out
xchg
pop
dec
and
out
jnp
push
lret
dec
repnz
fisttps
cmpsb
pop
mov
ret
jg
hlt
out
dec
jno
sub
pop
jecxz
xchg
mov
add
pop
pop
mov
sub
lahf
pop
push
bnd
and
dec
test
push
pop
xchg
enter
mov
pop
shlb
subl
movsb
and
xorb
sbb
negb
jp
adc
testl
or
cmp
xor
loope
cmp
and
xchg
cmp
jno
sub
pusha
aad
test
and
shr
mov
lods
hlt
decl
adc
dec
stos
mov
leave
xor
imul
sub
shl
pop
push
dec
test
sahf
fmull
fnstsw
popa
adc
xchg
lahf
divb
mov
pop
xchg
mov
shll
jbe
pop
pusha
fisttpll
jb
ficoms
jge
pop
jl
pusha
mov
imul
sub
mov
push
push
shlb
aaa
mov
pop
sar
push
mov
sti
insb
pop
fcmove
jbe
imul
mov
inc
adc
inc
ret
addb
mov
pushf
push
mov
xor
fdivrs
sbb
movsl
sbb
daa
xor
push
pop
shrb
and
jo
lret
pop
mov
push
mov
inc
jmp
mov
shll
mov
mov
adc
cmpsb
jns
fidivl
bound
xchg
mov
cmp
cmp
or
stc
adc
es
dec
pop
imul
or
sbb
daa
mov
clc
ja
outsl
push
stc
stc
or
call
std
scas
pusha
xchg
mov
sub
fadds
add
cld
mov
or
shlb
test
xor
fcomps
pop
cmp
pop
xchg
jo
mov
inc
jge
stc
jb
mov
mov
ss
pop
test
scas
sbb
loop
sub
sub
mov
jp
sar
sarb
cmp
cwtl
push
ja
jnp
pop
mov
in
fdivp
xchg
xor
jmp
mov
sub
dec
rep
inc
mov
push
push
mov
push
mov
leave
js
push
add
test
ret
jnp
and
mov
testb
nop
aad
jmp
jp
sub
loop
leave
in
loopne
fwait
scas
icebp
sbb
sbb
push
imul
dec
sub
adc
das
adc
add
sbb
popa
pop
inc
add
ss
fcompl
xchg
into
sub
mov
shlb
test
jae
fcmovbe
add
loope
popa
xchg
out
adc
jb
cmpsl
loope
jb
xor
sub
lret
fisubrl
cwtl
dec
adc
xchg
dec
xchg
push
popf
lea
mov
cmpsb
dec
call
std
outsl
pop
mov
adc
outsb
lods
cltd
in
jl
mov
bound
push
out
dec
cmp
je
dec
sub
cmp
push
push
fcompl
mov
add
arpl
out
cmp
iret
jle
stc
mov
popf
in
push
scas
xchg
sbb
push
jle
mov
jnp
stc
or
out
fadds
jle
test
arpl
cmpsl
adc
sbb
inc
pusha
leave
fstp
in
or
aaa
frstor
in
jbe
mov
sbb
xchg
fiaddl
dec
scas
outsl
push
test
fisttps
jmp
add
outsb
sbb
hlt
push
or
or
dec
push
xor
je
push
mov
test
dec
js
das
and
or
mov
cltd
dec
stc
rorl
mov
and
mov
pop
fnstsw
ds
xchg
jo
cs
push
mov
xchg
mov
pop
daa
sbb
sahf
mov
maskmovq
imull
xchg
stc
rorb
outsb
pop
push
lods
adc
xor
leave
and
stos
jp
inc
std
mov
lock
pop
sub
pop
sbb
jae
shlb
shlb
lahf
jbe
or
testl
jb
fisubrs
push
pop
mov
jb
in
inc
lahf
loopne
mov
mov
sub
cmp
push
sbb
push
shrl
mov
mov
and
and
cmp
fimuls
push
or
mov
xor
cs
mov
fwait
jge
pop
xor
hlt
xchg
push
in
shlb
sti
outsl
imul
mov
mov
cltd
aaa
aad
jo
mov
pop
jns
mov
mov
mov
enter
push
xchg
out
cmp
push
inc
andb
mov
mov
lret
pop
into
enter
and
inc
addl
les
push
fdivrl
ja
mov
in
inc
or
stc
ret
lret
cmp
adc
lock
sbb
dec
mov
adc
inc
pushf
pop
add
push
test
in
ret
loopne,pn
or
mov
sbb
test
hlt
mov
and
cli
inc
lret
xor
mov
sbb
fimull
lock
mov
mov
pushf
int3
pushf
pop
jae
std
call
sbb
lds
cmp
adc
cmc
pop
ja
cmp
xchg
and
test
cmpsl
adc
lds
lock
jmp
adc
pop
das
cmpsb
mov
jae
cld
adc
and
jno
push
lahf
jo
jg
jb
mov
fstpt
mov
in
fidivrl
ret
push
lds
shr
pop
mov
pop
pop
lahf
or
shlb
push
add
cmp
mov
cltd
mov
dec
xchg
mov
pop
imul
mov
test
xchg
stos
xchg
aad
mov
adc
mov
sub
std
cmp
jb
es
dec
mov
nop
shll
mov
pop
pop
xchg
cmpsl
sub
mov
cld
pop
stc
dec
add
adc
xlat
push
enter
mov
xor
lds
sub
es
mov
mov
ja
imul
adcb
fsts
outsl
repnz
insb
mov
push
imull
xor
adc
daa
jp
jns
ja
imul
rorl
jp
jb
shl
fildll
sub
cli
test
movsb
mov
rcll
cmpsl
sbb
add
mov
in
mov
clc
sub
and
arpl
bound
mov
std
mov
lea
mov
sbb
int
or
mov
in
dec
mov
xchg
cld
add
and
xchg
inc
push
dec
add
lods
add
das
orl
fs
dec
add
fxam
dec
pop
and
stc
jge
and
push
sbb
hlt
repz
stc
ja
add
decl
outsb
sub
adc
adcl
pop
lods
dec
push
insl
pop
inc
pop
stos
imul
mov
aad
insl
addl
cltd
cli
xor
imul
mov
push
cmove
cmp
xor
dec
inc
test
push
stos
aam
and
pop
insb
scas
add
inc
out
xchg
lods
jo
xor
dec
fadd
push
inc
pop
pop
mov
add
out
scas
cmpsb
out
cli
mov
addl
mov
xchg
jae
mov
jb
scas
push
test
loop
out
mov
xchg
fildll
push
test
fcoml
fcmovne
jnp
push
lahf
adc
iret
mov
fs
rolb
rclb
and
sub
cmp
sahf
inc
pushf
roll
push
adc
xor
adc
jo
mov
loope
jmp
out
loope
cmp
xchg
in
mov
mov
mov
add
lahf
dec
mov
aam
orb
sti
sbb
mov
push
enter
aaa
adc
into
dec
dec
mov
adc
mov
sbb
inc
test
mov
dec
imul
loop
mov
inc
movsb
xchg
jnp
rorb
rcl
mov
fisttpll
pushf
scas
fwait
xchg
mov
loop
ljmp
lcall
fs
iret
xor
jl
es
and
outsb
lcall
pop
divl
adc
ret
jmp
or
gs
xchg
lcall
inc
pushf
sub
pop
idiv
xor
mov
loope
push
inc
push
pop
movsb
and
cmp
push
test
push
ja
insl
lods
pop
sbb
int
insb
mov
jle
ja
mov
nop
call
movsb
mov
pushf
or
call
cmp
scas
in
ja
dec
lods
pop
push
cli
pop
cmp
test
shll
pop
iret
outsw
ficoml
mov
test
loopne
loopne
xchg
std
mov
ret
movsb
cmp
mov
jns
daa
int3
inc
stos
clc
hlt
adc
mov
mov
cs
jbe
in
or
nop
pop
add
lods
outsb
inc
mov
or
cltd
fsubr
inc
mov
imul
dec
dec
mov
push
pusha
popl
lods
push
and
or
aas
negl
pop
push
cmp
cmp
sub
or
pushf
repz
stos
in
dec
push
gs
pmaddwd
pop
mul
push
into
iret
es
or
or
sub
push
js
jg
jns
mov
int3
pop
pop
int3
lods
mov
fbld
adc
rolb
pop
popf
lret
dec
ljmp
jg
adc
lahf
pop
fwait
in
imul
add
cmpsl
loop
fidivrl
sub
jg
insl
test
cltd
sub
stc
jmp
scas
pop
sub
ljmp
stos
outsb
and
mov
xchg
and
aaa
jmp
cmp
filds
shrl
push
mov
cltd
pop
push
test
push
imul
in
dec
jge
nop
loope
sub
fdivrl
add
cwtl
stos
fcomps
sub
into
mov
stos
clc
xor
dec
test
and
push
scas
add
jo
popa
mov
test
in
sbb
jp
inc
jo
mov
inc
arpl
xchg
xor
loope
repz
pop
or
push
or
mov
add
ss
fistps
loop,pt
jae
push
cmpl
dec
ja
scas
popf
lea
mov
loope
mov
add
enter
xchg
jbe
es
mov
xchg
mov
sub
pusha
stos
mov
dec
mov
cmp
popf
jmp
mov
pop
cmp
cmp
jne
std
sti
adc
mov
shrl
add
je
movsl
mov
ja
popa
ret
sarb
insl
xchg
and
sbb
mov
leave
scas
orl
add
inc
xor
mov
adc
push
popa
dec
out
push
sub
sbb
mov
mov
les
or
lods
pop
call
mov
cs
imul
mov
or
ljmp
fidivrs
scas
ja
test
incb
rcrl
mov
or
add
mov
icebp
stos
cltd
mov
loop
pusha
cmp
dec
mov
jp
xchg
ja
cld
test
int3
mov
xor
mov
sub
jl
or
mov
cmp
cmp
daa
push
lods
or
push
cmp
fisubs
pop
mov
stos
push
jbe
imul
dec
xchg
movl
pop
bound
adc
cwtl
cmpsl
adc
shlb
cwtl
add
cmp
mov
fs
xchg
adc
or
fiaddl
lcall
into
adc
out
pusha
out
dec
je
test
pop
mov
cmp
das
les
pop
xchg
pop
mov
jle
push
push
mov
js
out
ret
sub
push
out
in
dec
leave
mov
es
push
pop
hlt
xlat
lods
add
pop
xorb
xor
out
jbe
adc
loope
sbb
add
push
xchg
das
cli
pop
rcrl
jl
daa
or
popa
lcall
jecxz
rcll
pop
fwait
sub
aam
add
lcall
sbb
and
lcall
lret
dec
push
lret
mov
les
vaddsubpd
mov
sub
jo
jb
mov
fimuls
pop
por
push
fistpl
jmp
outsl
jbe
sbb
cmc
mov
or
int3
ror
mov
xchg
cmpsb
call
jae
push
dec
addr16
fbld
sarl
mov
loop
or
pop
xchg
call
test
add
scas
addl
mov
xor
fstpl
and
or
icebp
push
cwtl
scas
dec
aas
mov
and
insl
sub
enter
lcall
sub
loop
lretw
test
int3
arpl
popf
sub
sbb
push
aas
or
mov
dec
adc
nop
mov
loope
sub
pop
inc
dec
out
or
mov
lock
mov
xor
or
not
test
stc
push
cltd
cmc
pop
and
aaa
jmp
push
lock
mov
jae
je
or
sub
inc
out
xor
ja
jno
ss
into
je
pusha
or
sbb
push
lock
jl
rcl
inc
adc
xor
repz
jl
sbb
sub
rcrl
mov
xlat
movsb
or
jge
jne
inc
repz
mov
mov
inc
mov
jbe
jnp
in
push
mov
movsl
and
fwait
sbb
ret
stos
jg
pop
lock
push
jbe
into
or
xor
jp
adc
fwait
lods
push
test
and
push
dec
mov
sbb
lock
dec
sbb
fsubr
xor
mov
and
xchg
stc
jp
lods
sub
loop
push
dec
loope
mov
jno
add
rcll
cmp
pslld
imul
cwtl
loop
or
dec
fldl2e
sbb
mov
aam
push
scas
loop
push
jno
cwtl
push
sub
popa
cmp
test
dec
add
shl
push
jbe
add
insl
jp
sarb
sahf
rol
cs
inc
and
xchg
je
cmp
flds
loope
push
pop
ficoml
push
dec
test
in
dec
adc
sub
in
ljmp
xchg
dec
mov
popa
pushf
sarb
lods
sub
daa
mov
jb
inc
push
test
push
pop
testb
sbb
xchg
es
int3
xchg
cmp
dec
addr16
mov
out
inc
jnp
and
cmc
ja
fnsave
sarb
mov
fldenv
sti
push
mov
jae
addb
push
in
xchg
adc
enter
gs
add
fsubrl
mov
pop
test
imul
lahf
movsl
nop
and
aas
ljmp
stc
sub
xchg
aas
mov
test
push
invd
add
jge
mov
fisttpl
add
push
test
adc
xchg
std
inc
cmpsb
xor
ja
xlat
clc
aaa
test
ret
stos
cs
sbbl
stc
add
loop
inc
rolb
adc
pop
outsb
xchg
pop
mov
ret
xor
lret
aam
inc
int3
xchg
inc
or
add
test
mov
lods
and
icebp
je
icebp
mov
mov
pop
in
pop
xchg
ficompl
fistpll
pop
pop
sbb
sub
sbb
mov
fcmovne
xchg
pop
pop
scas
dec
out
pop
mov
mov
in
mov
imul
xchg
fidivl
jns
xor
repz
add
lahf
cltd
xor
fisttpl
clc
mov
adc
cmp
mov
sub
dec
movsb
jnp
mov
loopne
mov
int
loop
push
add
aas
out
loop
sbbl
into
cld
mov
fcmovu
scas
sub
fisubrl
or
jae
adc
push
scas
jge
std
dec
jl
out
jns
fldl
bnd
ljmp
scas
std
cmp
int
inc
imul
or
lea
lret
add
push
xor
sbb
out
sub
ret
lcall
mov
imul
dec
arpl
push
fisubl
lcall
call
mov
mov
mov
imul
pop
sbb
fldl
xlat
push
jmp
adc
sahf
sbb
xor
lods
xor
movsl
add
fldt
cmp
xorl
push
mov
fmuls
sub
and
sub
ss
icebp
sbb
or
adc
rolb
into
cld
in
mov
jo
je
outsb
in
fsub
xlat
sub
mov
dec
sbb
xor
icebp
mov
dec
xchg
pushf
rcrb
add
and
idivb
cmp
sub
mov
or
fwait
mov
mov
loopne
push
lret
jecxz
push
in
iret
outsb
repz
fs
ret
jbe
loope
pusha
cmpsl
ficoms
pop
jmp
icebp
cwtl
repnz
inc
std
add
arpl
push
cmp
jb
sbb
mov
mov
pop
pop
ret
cmp
add
xorb
nop
pushf
stc
or
jne
insb
roll
test
push
test
outsl
stc
adcl
into
inc
xor
sbb
xchg
popf
sub
enter
fsubp
xchg
sbb
loope
in
pop
lock
mov
pop
es
je
pop
pop
ss
loopne,pn
xor
popa
dec
shlb
cli
lahf
mov
push
xchg
roll
xchg
and
pop
data16
sub
sbb
push
das
sbb
je
inc
popa
jp
push
pop
jg
mov
imul
add
and
push
dec
inc
mov
push
push
mov
pop
lea
out
add
lds
lods
shlb
std
push
mov
adc
jo
sti
test
push
js
push
fistps
scas
in
or
and
xchg
cs
mov
aad
add
out
inc
call
cli
sbb
mov
gs
loopne
gs
sbb
sub
popa
mov
fwait
inc
fildll
push
sub
out
int3
push
push
jmp
pop
xchg
in
inc
jns
loope
nop
in
mov
add
mov
or
shl
cmpsb
cmp
add
neg
xor
lods
jge
imul
scas
je
out
push
adc
lds
fs
cltd
and
fwait
inc
xchg
sub
lret
test
sub
inc
add
pop
mov
lea
mov
xchg
jbe
xchg
sbb
or
push
repnz
mov
cwtl
cmpsl
jp
jp
and
dec
inc
test
mov
jmp
js
lea
rolb
in
orb
sbb
fcmovb
mov
mov
rcll
std
sub
cmp
ja
pop
xchg
sbb
pop
pop
pop
in
pop
adc
jg
outsl
pop
aas
daa
arpl
iret
adc
repz
ret
xchg
xor
pop
push
aad
pop
fsubl
push
and
pop
aaa
mov
jno
out
cwtl
loope
mov
fwait
and
fbld
inc
add
decb
sbb
mov
push
sub
dec
mov
lods
jb
dec
cld
jbe
sbb
rorb
pop
repnz
push
push
or
inc
ficoms
loopne
sbb
lods
cmc
fldenv
dec
xchg
aas
test
push
std
aaa
sub
push
pop
rolb
sahf
aam
aaa
push
or
xorl
je
dec
subb
in
jmp
lods
loope
in
push
sub
sub
add
xor
int3
movsb
daa
aam
xor
or
jmp
push
cmp
adc
leave
jge
push
in
xor
add
xchg
sub
in
mov
inc
nop
mov
cwtl
cli
inc
cli
int3
adc
movsl
push
leave
or
inc
pushw
loop
jne
inc
inc
dec
das
ficompl
arpl
outsb
flds
push
mov
shl
addr16
testl
cmc
popa
xor
xor
xchg
imul
xchg
sub
or
or
pusha
fldcw
sub
mov
mov
fistpll
cli
loop
inc
test
mov
or
mov
dec
pop
xor
shll
shll
sub
popa
lret
xor
push
bound
lcall
ss
loop
fcomi
gs
fisubl
lahf
xchg
lcall
mov
cmove
jge
sub
push
in
push
mov
mov
rolb
mov
insb
dec
sbb
movsl
out
iret
xchg
push
jns
push
or
inc
pop
fs
cmp
xor
adc
popf
sbb
mov
sahf
mov
push
in
aaa
les
fldl
lock
imul
daa
fisttpl
push
or
pop
dec
daa
mov
call
in
adc
icebp
jo
lea
out
dec
addr16
into
gs
and
in
mov
gs
dec
inc
ja
adc
shr
int3
push
cmp
hlt
sub
sbb
xchg
test
or
add
lcall
repnz
loope
imul
xchg
mov
fwait
aad
xchg
ljmp
xlat
pop
repnz
into
fwait
jo,pn
sub
jg
push
pop
jns
aaa
jge
insb
cmp
xchg
inc
dec
pop
pop
sbb
jp
mov
in
orb
and
in
imul
cmp
sahf
mov
inc
pop
lcall
add
dec
mov
nop
xchg
jmp
mov
insb
mov
mov
enter
inc
fstl
pop
stc
jg
sar
lcall
mov
inc
mov
xor
jnp
shl
push
pusha
divw
mov
std
fs
sarl
sub
inc
pop
mov
sub
push
jle
sahf
scas
jae
sub
add
xlat
daa
inc
mov
pop
unpcklps
fldt
push
les
fldt
outsl
inc
dec
shll
mov
mul
cld
fsubrl
insl
xlat
dec
sub
popa
sbb
mov
pop
push
out
mov
push
pop
lret
push
xchg
lock
sbb
xor
adc
in
es
adc
mov
sub
jl
push
add
pop
shrl
arpl
scas
insb
jmp
call
ds
cld
ja
xor
shrl
cltd
dec
into
inc
je
mov
dec
jne
mov
xor
test
sub
rcr
outsb
mov
int
fld
gs
xchg
std
or
sub
push
or
push
aad
cmp
jmp
imul
jge
pop
aam
jo
mov
ja
aam
push
loop
mov
push
rcrb
sub
mov
ret
cmpl
cmpsb
inc
popa
lea
loopne
push
cmp
or
pop
pop
nop
addl
scas
cmc
test
aad
popa
pop
adc
add
cmp
clc
aam
int
adc
push
nop
mov
repnz
dec
inc
shl
or
lock
and
fsubs
ljmp
or
dec
gs
mov
and
cmpsl
push
jg
aas
xorl
mov
scas
add
mov
js
cmp
sar
and
or
cmc
int3
jmp
iret
imul
xchg
adc
insb
lahf
cmpb
incl
cmc
jns
adc
sbb
loop
xchg
ja
and
iret
out
jbe
lret
mov
push
xlat
test
mov
lods
adc
push
iret
idivl
lods
cmp
rcll
movsl
call
pop
mov
insb
pop
pop
popf
jle
ret
out
out
lds
shlb
xor
cld
enter
int3
ja
sub
daa
jne
dec
sub
dec
sahf
xchg
mov
test
hlt
push
inc
lds
in
les
inc
cwtl
aaa
or
fs
jecxz
and
fcomps
pop
xchg
sbb
jne
in
sbb
add
fildl
and
xor
xor
cmp
sub
or
jns
mov
in
ss
lods
fcmovbe
loopne
idivb
sbb
pop
cmp
imul
outsl
lods
mov
stos
call
xorl
sahf
iret
test
jg
lds
into
and
pop
subb
add
scas
mov
out
xor
dec
dec
fcoml
pop
enter
stos
push
xor
test
insb
xchg
lahf
lods
lahf
push
loope
jnp
inc
nop
fucom
pop
mov
out
ffreep
andl
cmp
sbb
jle
sahf
lea
adc
sub
gs
jb,pt
adc
xor
popf
push
loop
cmp
inc
clc
add
ficoms
ds
jmp
js
mov
xchg
xor
outsl
sbb
mov
scas
cmp
sbb
cmp
andl
insb
push
fbld
inc
and
or
and
insb
pusha
push
insl
pop
stos
repnz
jne
cli
sub
test
or
imul
add
mov
pop
ficomps
insl
cli
test
cmp
nop
pop
stos
adc
dec
cmove
int3
cltd
movsl
insl
add
jbe
addl
outsl
add
or
int
xchg
xchg
xchg
mov
mov
push
lcall
lret
jl
cwtl
cs
sub
shlb
jno
push
into
fnstsw
lods
mov
fdivl
in
cwtl
adc
mov
pop
or
inc
xchg
es
mov
mov
repz
ja
stos
jl
mov
xchg
mov
jbe
aas
mov
out
xlat
cs
test
aaa
lahf
aam
mov
mov
add
sub
jge
xor
icebp
push
add
mov
jmp
popf
scas
mov
ss
push
clc
jae
pop
lcall
rcrb
imul
rorl
icebp
fisubl
in
icebp
fwait
cs
sbb
adc
stos
test
rcll
hlt
add
je
ror
jne
dec
ret
insb
adc
pop
les
xor
popf
and
sub
outsb
addr16
or
fcmovne
mov
cltd
mov
hlt
pop
mov
mov
insl
sub
jbe
out
je
sbb
outsb
cltd
and
test
mov
out
icebp
cmp
call
loop
ret
push
dec
xor
iret
movsl
mov
scas
dec
cltd
push
out
mov
pusha
dec
jne
fs
xor
sbb
in
mov
sub
or
test
fcompl
xchg
inc
mov
pop
add
imul
pop
pop
xchg
loopne
push
mov
adc
cmpsb
mov
je
in
xchg
add
mov
fwait
mov
imul
inc
mov
mov
dec
cmp
add
andl
loop
lods
mov
aaa
mov
and
mov
andb
ljmp
fnstsw
icebp
out
jns
fst
pop
mov
xorb
jbe
push
loop
or
mov
add
loope
xchg
iret
je
mov
add
dec
lea
cmp
into
push
jle
loop
rclb
sbb
jmp
test
and
lock
pop
mov
aas
and
sahf
addl
call
pushf
fnstsw
xlat
push
test
and
in
adc
ljmp
loope
loop
mov
movsl
jns
movsl
je
ss
push
xchg
pop
lahf
negb
or
test
rcl
mov
or
dec
push
jp
in
mov
fsub
test
xchg
sub
outsb
xor
push
aas
jle
inc
xchg
inc
cmp
push
add
icebp
mov
cmc
xchg
mov
mov
cmpsl
in
iret
jecxz
ja
xchg
loop
ss
add
push
push
jne
push
cmp
lock
jno
xchg
clc
sub
jno
cwtl
lods
inc
xor
pop
pop
jl
mov
and
inc
push
inc
xchg
ss
xchg
mov
sub
mov
and
sti
adc
or
adc
nop
ret
rcr
and
pop
and
jmp
shlb
test
pop
cltd
arpl
push
pop
fsubr
repnz
mov
jae
sti
pop
orb
push
jge
imul
sbb
mov
add
shlb
push
mov
fnstenv
lcall
mov
lods
outsl
movsl
mov
add
ret
in
pop
mov
and
push
sub
loopne
add
cli
sbb
sarl
cmp
push
fnstsw
imul
out
je
or
add
push
popf
pop
pop
and
push
inc
das
ud1
enter
inc
mov
shll
xchg
imul
cwtl
sub
push
push
dec
dec
mov
dec
cld
clc
or
or
shlb
jns
cltd
inc
push
test
or
inc
mov
mov
leave
sbb
sub
lods
psubusb
addb
mov
sub
je
push
pop
sub
les
adc
lea
imul
mov
mov
sbb
jg
out
push
lock
mov
repnz
out
aaa
sub
xor
subl
loopne
insb
mov
std
add
cs
jnp
xor
pop
fsubrs
test
test
pop
loop
cmpsb
enter
sub
sbb
cmp
dec
cmp
add
cmp
ret
cmp
dec
lahf
repnz
pop
test
push
mov
fadds
inc
shlb
cld
scas
repz
mov
mov
inc
std
push
incb
or
call
jl
popf
fstl
mov
ret
sub
mov
push
pop
pop
scas
push
or
lods
sub
push
jl
dec
pop
sbb
push
rcll
push
arpl
fstpl
cmp
enter
or
sahf
xchg
cmc
mov
lret
pop
push
xchg
adc
xchg
pop
pop
fs
push
cltd
data16
mov
and
xchg
mov
cwtl
daa
adc
cs
incl
repz
mov
pop
ds
nop
fdivs
xchg
pop
and
adc
in
out
frstor
or
nop
aaa
test
fstpt
mov
fs
ds
add
push
and
divb
cmpsb
pop
mov
repz
addb
jp
ret
shll
test
xchg
cmp
es
out
add
fstpt
adcb
mov
pop
pusha
xor
xchg
lods
jmp
jle
or
pop
in
xor
bound
dec
addr16
jmp
pushf
and
das
lret
pop
mov
lods
outsl
jge
mov
and
shufps
push
inc
xor
shll
aad
cmpb
cmpsb
jbe
jo
cld
mov
pusha
or
cmc
orl
nop
xor
arpl
cmpb
push
insb
mov
add
aas
gs
bnd
lea
jnp
stos
nop
shr
mov
cmp
notb
mov
mov
ds
mov
add
out
pop
mov
push
out
xchg
pop
sbb
lahf
xorl
or
push
jae
movb
xor
out
cwtl
sub
adc
lds
cli
mov
sbbl
rorb
call
mov
mov
fnsave
mov
xchg
je
daa
movsb
negb
jmp
pop
xorb
sarl
push
sub
jp
jmp
in
mov
pop
jle
and
adc
jo
jno
jg
sti
mov
inc
icebp
pop
xchg
inc
nop
pop
xor
in
fstps
les
out
stc
insl
lds
fimull
sub
jb
jge
xchg
fcmovnu
xor
xchg
unpcklps
and
daa
sbb
pop
and
mov
addr16
or
out
jae
sub
test
inc
push
add
add
push
xor
xchg
inc
inc
jle
mov
hlt
sub
xlat
sbb
out
lds
inc
push
cmp
add
jo
scas
sbb
sbb
pop
xchg
icebp
pop
out
inc
jns
pop
imul
fsubl
das
lret
test
xor
mov
pop
jne
mov
lret
pop
xchg
inc
pop
and
sti
data16
jae
and
push
inc
loopne
add
adc
nop
mov
jp
ljmp
add
or
add
or
icebp
pop
test
movsl
dec
inc
std
xor
lea
fmull
add
dec
bound
fbld
push
mov
or
pushf
cmp
clc
bnd
jecxz
sub
xchg
cmpsl
jg
fwait
shlb
jge
mov
pusha
repz
dec
loopne
inc
sbb
xor
pop
shlb
sbb
mov
jp
arpl
mov
fnstenv
add
mov
push
push
ljmp
push
xor
jb
or
xchg
cmpsl
aaa
jae
inc
cvtps2pd
or
mov
jp
sbb
and
mov
test
scas
iret
ret
sub
cmp
xchg
inc
inc
jb
or
mov
mov
push
pop
outsl
shr
in
cmp
cmp
mov
lea
bound
out
jo
outsl
dec
pop
add
call
int
sbb
inc
dec
pop
xchg
stos
jb
cli
leave
ds
jg
jo
push
mov
push
xchg
xor
movb
and
fstps
in
roll
sti
std
xchg
mov
stos
or
mov
mov
push
or
test
jmp
pop
imul
mov
push
movsl
pop
ret
hlt
out
pop
push
in
dec
xchg
sub
and
test
clc
into
or
ss
inc
andl
or
mov
std
popf
negb
xor
loope
hlt
push
xlat
bsr
js
nop
in
and
inc
test
test
or
cmpsb
out
sbb
jle
or
dec
subl
sbb
jno
and
ds
mov
or
js
rolb
cltd
cltd
jns
jno
mov
out
cmp
xchg
push
ficompl
dec
fdivs
cwtl
xor
loopne
xor
pop
jo
mov
sbb
xlat
in
mov
cmp
es
adc
inc
sbb
sub
sub
mov
ret
jmp
pop
xchg
jbe
mov
mov
and
sbb
pusha
bound
sbb
mov
push
xchg
test
add
jg
loopne
cwtl
pop
sbb
dec
jg
jp
push
jne
nop
sub
push
xchg
out
sar
mov
fscale
mov
sub
xchg
imul
scas
fists
jae
sti
sub
push
push
test
inc
int
mov
fnstenv
xor
out
in
push
cs
inc
aaa
je
xlat
pop
xchg
hlt
fldt
fstl
int3
out
mov
xchg
add
xchg
pusha
sti
lock
daa
or
jl
stos
loopne
std
sti
push
fsubrp
push
mov
xchg
icebp
pop
repz
fstps
ljmp
mov
push
or
repnz
jne
inc
insb
jge
rol
int3
or
add
xor
fldcw
add
push
dec
mov
aam
add
mov
fdivrl
mov
mov
ds
xchg
push
dec
int
jp
inc
icebp
scas
mov
scas
fidivs
xor
sbb
mov
call
loopne
jns
fidivl
popa
mov
cmp
leave
cmp
sbb
mov
xor
adc
or
data16
movsb
pusha
leave
cmp
fsubr
sbb
ljmp
jns
adc
cmpsb
scas
ds
push
mov
xchg
mov
pop
pop
mov
es
repnz
in
lcall
filds
and
cli
aas
fidivrs
pop
incb
inc
shrb
mov
sbb
ss
imul
xlat
enter
nop
xor
cmpsl
jne
pop
cld
loopne
rolb
inc
and
cmp
lds
jns
movsb
sub
sub
aas
pop
or
mov
jmp
push
push
xchg
cs
fs
dec
push
jmp
xchg
xor
dec
cmc
add
sub
bound
xor
int
popa
and
mov
daa
and
push
inc
rorb
and
lock
cmp
loopne
je
jl
push
out
xchg
int
pop
loop
scas
xchg
std
sub
xchg
mov
mov
nop
out
shll
hlt
sub
shlb
xchg
push
pop
sub
int
push
inc
push
xchg
popa
aad
cwtl
mov
rclb
xchg
push
jecxz
dec
inc
mov
pusha
add
mov
sbb
pop
fsubrl
and
out
or
add
mov
fucom
bsr
and
jne
mov
ljmp
imul
aad
popa
decl
cwtl
cmp
clc
adc
lahf
test
test
push
pop
mov
inc
sbb
sbb
and
dec
inc
sub
pop
inc
push
lahf
jnp
jg
inc
arpl
sub
jmp
gs
and
mov
shlb
dec
push
dec
into
cmp
ret
xchg
out
or
int3
mov
inc
mov
stos
lret
testl
sub
test
std
mov
pop
inc
scas
and
out
xchg
mov
lcall
stos
pushl
jmp
addb
dec
je
stos
add
mov
ljmp
push
rcrb
aam
fs
cmpsb
insb
js
push
xlat
int3
leave
je
ret
sub
cmpl
cmc
daa
rorl
push
gs
mov
aas
or
test
adc
mov
lret
pop
and
push
push
inc
cmc
push
sahf
loopne
scas
mov
jp
mov
lea
or
push
adc
sbb
xor
cltd
dec
cmp
mov
xor
sbb
dec
mov
fisttpll
ret
xchg
inc
cmp
insl
inc
int3
mov
jae
into
mov
out
daa
hlt
ret
arpl
stos
pop
inc
sub
lcall
add
mov
rclb
pop
js
mov
pop
out
sbb
pop
xchg
pop
jg
lds
and
nop
mov
mov
stos
outsl
push
adc
add
addr16
clc
ret
pop
mov
ret
mov
in
jae
jp
scas
movsl
jg
clc
out
inc
mov
sub
sub
daa
and
jecxz
xor
xchg
jne
mov
fnstenv
scas
push
mov
sahf
push
dec
or
add
mov
pop
cli
pop
fistpl
xchg
cli
scas
add
add
out
inc
pushf
inc
sbb
mov
mov
adc
xchg
iret
fdivs
les
jmp
subl
int
xchg
mov
stc
outsl
cld
mov
ljmp
mov
repz
mov
xchg
stc
xlat
mov
inc
push
push
out
lds
cmp
aaa
dec
push
std
pop
mov
sub
mov
das
pop
jbe
sti
test
cmp
push
push
pop
int3
iret
popa
subl
or
jae
cmp
outsb
imul
and
cmc
mov
lods
mov
mov
dec
out
stc
jns
test
pop
dec
sti
mov
pop
adc
dec
or
nop
cli
fldt
imul
loop
pushf
js
jbe
pop
fdivl
sub
loopne
pop
push
lretw
inc
jle
loopne
mov
sub
add
insb
push
xchg
mov
mov
xor
sbb
das
xor
ljmp
add
orb
lahf
sbb
sarl
adc
xor
fwait
ljmp
or
fwait
dec
cmp
and
push
stos
inc
cmpb
add
xor
mov
rcl
jle
ret
arpl
mov
lods
add
scas
inc
fwait
lcall
test
sbb
pop
adc
dec
push
fistl
sbb
xor
pop
ljmp
sbb
push
repz
jne
push
push
push
or
fildll
xor
repnz
ds
out
and
movsb
out
imul
mov
pop
enter
cs
movsb
inc
or
adc
adc
add
cld
xchg
and
sbb
mov
movsb
jno
in
pop
mov
nop
mov
fcoms
cmpl
ret
add
pusha
sbb
mov
mov
loope
int
mov
jmp
pushf
jnp
sbb
pop
add
mov
fstpt
sbb
pop
pop
test
imul
mov
mov
lock
mov
xor
adc
mov
int
test
fidivrs
cltd
mov
subl
mov
loopne
or
mov
pop
pop
dec
adc
mov
incl
test
mov
add
arpl
sbb
sub
xchg
pop
xor
sar
repnz
pop
addr16
imul
cli
mov
mov
sub
loope
mov
divb
cmp
sbb
clc
xor
out
xor
insl
test
pop
ljmp
loop
jmp
scas
push
cmp
and
cs
add
or
ds
sbb
ficomps
add
add
xor
push
lea
and
xorl
mov
roll
or
xor
mov
stc
cmp
cmpsb
test
pop
sbb
adc
fiadds
push
cmp
icebp
in
jg
mov
out
and
xchg
xchg
insl
pop
out
fisubl
out
mov
lea
in
sarb
ja
mov
mov
stos
bound
addr16
xchg
aad
cltd
mov
xor
mov
jge
inc
push
add
js
cltd
js
adc
jge
out
loopne
das
push
aas
int3
inc
sbb
cmp
bnd
lret
inc
lcall
jmp
and
inc
add
or
movsl
vcmppd
movsb
jns
sbb
add
fsubrl
daa
add
daa
jl
xor
dec
cli
xorl
add
push
cltd
cmp
adc
add
int
mov
jmp
fnstcw
lds
push
mov
xchg
les
jp
nop
inc
fs
in
das
repz
dec
mov
insl
pop
shrb
in
pop
push
mov
mov
mov
jp
push
sbb
cwtl
in
aas
push
dec
fldcw
cmc
jmp
adc
call
xlat
arpl
dec
add
jae
mov
mov
mov
movsl
jo
pop
fldenv
sub
xchg
and
flds
arpl
mov
loopne
jecxz
addl
pop
mov
mov
sti
jg
subl
add
ds
imul
add
pop
jl
lods
icebp
ficompl
fbstp
lret
cli
jp
sbb
test
inc
add
adc
pop
jmp
ret
or
sbb
xor
pop
dec
xor
add
je
fdivrs
lea
pop
ss
jg
xor
inc
js
loop
out
clc
hlt
or
xor
ficoms
and
int3
sti
stos
pop
inc
out
std
ds
adc
daa
sbb
ret
and
mov
gs
jge
fbld
and
rolb
imul
clc
cwtl
hlt
out
inc
and
dec
mov
mov
outsb
inc
mov
sbb
fsubp
add
stc
jmp
xchg
aad
cli
mov
mov
or
cmp
inc
mov
into
addr16
pop
push
test
mov
push
push
insb
pop
push
pop
ljmp
add
sbb
bound
stos
fsubrp
rorl
scas
add
or
movsl
xchg
add
das
lock
xchg
push
pop
repz
mov
popa
sbbl
and
inc
adc
pop
jb
lret
adc
enter
aad
xlat
push
mov
ret
inc
cmp
add
pusha
jmp
leave
fwait
inc
push
mov
mov
ljmp
into
ds
cltd
inc
insb
xchg
pop
pop
inc
jnp
call
bound
mov
jl
adc
inc
lods
or
push
mov
mov
loope
orl
mov
dec
int3
or
dec
push
adc
pop
pop
or
lret
imull
push
scas
xchg
sti
popf
rcl
push
lahf
sub
xor
jmp
adc
xchg
pop
pop
xor
push
dec
mov
jmp
pushf
jg
sbb
outsb
outsl
mov
lahf
push
push
mov
push
stos
pop
jle
sahf
add
add
cli
add
mov
fsts
inc
cmp
push
loope
mov
jle
dec
add
aad
sub
mov
mov
inc
pop
xchg
and
enter
int
adcl
xor
sbb
fwait
adc
mov
stc
lock
mov
clc
inc
shl
push
mov
loopne
mov
clc
ret
xorb
bnd
xor
lods
fstpt
xor
push
adc
push
jle
cmp
mov
dec
hlt
cld
xchg
mov
lret
push
xlat
xchg
add
out
jle
cmc
inc
rcr
cmpsb
dec
nop
sahf
pop
lds
and
add
sub
jge
sub
test
icebp
adc
inc
fsubp
scas
sahf
sub
jne
mov
or
cmp
jne
repnz
bound
xchg
js
cmpsl
inc
push
scas
lret
cs
jae
xor
gs
mov
mov
call
pop
int
ja
js
cwtl
lret
adc
mov
ds
jecxz
cmpsl
pop
pop
or
test
ljmp
out
test
imul
cli
dec
dec
push
loope
shlb
sbb
sub
shlb
fcmovb
icebp
jmp
les
arpl
mov
out
sbb
outsl
inc
movsb
mov
xchg
pop
lock
cli
pop
jl
sbb
dec
pop
sub
and
push
sub
mov
aaa
fildll
sbbl
movsl
jns
ret
scas
jecxz
cmp
test
inc
daa
cmpsb
sbb
or
jne
cmp
mov
repz
jae
loopne
or
dec
stc
pop
cmpsl
xor
fistpll
divl
icebp
bound
data16
pushf
inc
pop
arpl
sub
cmpsb
mov
push
jl
push
out
pop
sar
popa
push
fsubrs
mov
fldenv
ret
add
movsl
jae
fwait
cmpsl
fnsave
aas
das
mov
mov
fcompl
adc
inc
imul
xchg
sub
jae
bound
leave
scas
int3
les
lahf
adc
inc
adc
xor
mov
inc
movsb
push
jg
cmp
push
inc
and
andl
xor
inc
leave
sti
push
jbe
pop
jg
das
add
cmp
xchg
push
push
test
pop
sub
mov
jle
int3
add
out
insb
xor
xchg
div
mov
scas
dec
inc
es
in
popa
cs
sbb
pop
test
aam
cli
fsubs
insl
cld
std
movsl
xorl
pop
pop
jno
shrb
stos
fldt
popa
jl
aas
shll
jl
nop
ljmp
push
repz
or
push
push
xchg
mov
mov
mov
outsl
push
test
daa
fimull
shrl
into
ds
les
rcr
subb
cld
outsl
jge
fidivl
pop
test
push
in
pushf
cltd
arpl
imul
xor
cmp
xchg
push
insb
ljmp
out
xor
or
add
fs
fcompl
lock
int3
fisttpl
cmp
or
mov
inc
lahf
out
enter
sti
xchg
pop
in
leave
daa
and
aad
and
adc
arpl
mov
gs
pop
fdivs
mov
sbb
sub
call
lret
insb
sti
cltd
jne
ljmp
ja
fs
ds
sbb
aas
imul
sbb
jnp
push
rolb
pop
xchg
inc
jne
subl
push
mov
call
out
bound
call
cwtl
xchg
cwtl
bnd
add
jae
jb
adc
div
test
ds
xor
pop
pop
adc
ljmp
popl
pop
lea
ds
mov
xchg
cmp
jl
pop
jo
out
dec
dec
mov
das
jo
int
fwait
fwait
dec
notl
mov
or
adc
insb
jb
in
and
adc
ljmp
leave
cli
dec
mov
mov
stos
mov
lahf
mov
inc
jns
cmp
lret
or
jl
adc
and
ffree
dec
push
es
ljmp
push
mov
mov
lcall
xchg
addr16
push
jmp
and
sbb
push
incl
int
sub
jmp
sbb
xor
das
mov
or
add
mov
cmp
insl
fisttpll
test
add
adc
mov
and
mov
jecxz
ja
pop
pusha
sbb
out
sub
roll
lahf
jnp
xor
mov
out
popf
cmc
mov
xchg
das
aad
pop
add
fmul
inc
and
test
mov
out
ret
push
and
inc
adc
das
fsubl
stc
mov
xchg
mov
aad
add
daa
add
aaa
dec
popa
adc
ds
mov
push
inc
int
pop
cmpsb
testb
mov
enter
leave
mov
push
pushf
stos
sub
aaa
in
or
mov
test
addb
daa
test
movb
shrl
test
ret
mov
repz
test
pop
out
test
imul
pop
in
xchg
dec
jno
stos
lret
test
aas
push
jmp
in
jae
mov
hlt
sub
pop
lods
cmp
mov
add
mov
dec
pop
enter
push
sbb
add
daa
jb
mov
mov
pop
inc
test
dec
out
push
jge
push
ficomps
in
cli
xchg
jge
je
sbbb
push
stc
divb
lds
jnp
push
jl
ss
ljmp
dec
push
daa
sahf
fwait
leave
sbb
imul
test
xchg
insl
arpl
mov
add
xrstor
cmpsl
jg
lods
in
mov
addr16
cld
mov
mov
pop
sub
test
mov
cmp
jno
sub
adc
add
fwait
add
cmp
daa
add
push
xchg
lcall
pop
push
cmp
divl
jg
repz
jmp
loopne
sbbb
sbb
imul
in
arpl
lods
jae
push
cld
pop
ret
sbb
gs
sbb
rcrb
clc
and
ret
push
mulb
stc
push
xor
xchg
xchg
add
dec
and
add
iret
aad
mov
stos
push
cmc
mov
xchg
xchg
jb
subb
out
arpl
lds
push
push
and
xchg
push
out
call
jge
inc
lret
pop
das
aaa
pop
mov
mov
sbb
fiaddl
clc
jecxz
xor
sbb
pop
xchg
ja
outsb
sbb
adc
adc
xor
xor
mov
jp
push
fs
xchg
sub
mov
inc
jp
lret
sbb
repnz
lcall
fs
test
sub
scas
and
sahf
mov
sbb
dec
and
cmc
loopne
nop
popf
xchg
mov
js
xchg
jl
lea
mov
daa
inc
jmp
mov
dec
inc
and
xchg
shrb
ret
xchg
and
mov
adc
inc
push
inc
out
outsl
testl
xchg
out
int3
jne
inc
sbbl
adc
cltd
jmp
std
sbb
inc
insb
movsb
rolb
dec
dec
shrb
cmpl
dec
push
mov
test
rorb
jecxz
or
pop
lahf
int3
xorb
dec
outsl
lcall
call
mov
das
or
mov
out
cmpsl
popa
nop/reserved
enter
int3
sti
ss
and
and
cmp
lods
fimull
addr16
or
jbe
sub
imul
dec
movsl
mov
int3
push
inc
call
jmp
mov
in
lea
pop
xor
nop
jne
mov
insl
sti
aad
mov
mov
mov
sarl
call
out
in
push
jecxz
popa
loopne
nop
jmp
sub
loop
rorb
mov
dec
push
sbb
xor
pop
mov
and
mov
push
shlb
stc
lock
sub
push
das
pushl
xchg
dec
aam
lea
call
fistl
test
idivl
stos
sti
jnp
cli
jg
mov
sub
push
sbb
lods
cmp
adc
push
push
clts
push
cs
push
mov
rclb
dec
stos
pop
shlb
pusha
pop
xchg
mov
lret
xchg
repz
icebp
mov
xor
sbb
sub
jo
sahf
add
in
aam
mov
fisttps
cli
dec
divb
jp
xchg
inc
or
call
outsb
jmp
cmp
xchg
inc
les
dec
rep
cmpsl
jo
push
jb
mov
jg
lahf
mov
mov
enter
mov
add
push
adc
adc
out
and
adc
or
bound
lds
cmp
sub
xchg
fnstenv
dec
outsl
mov
cwtl
inc
mov
adc
les
add
or
jl
popa
clc
push
aaa
adc
popa
fnstenv
jb
in
enter
adc
clc
dec
pop
dec
idivb
stc
gs
outsl
cs
sahf
ljmp
mov
fadd
test
adc
and
pop
sbb
cmp
loop
adc
les
push
push
fcomps
dec
mov
sahf
xchg
mov
sbb
repz
lds
outsl
xor
mov
sbb
stos
fs
inc
inc
inc
dec
cli
jns
or
ret
stc
push
xchg
mov
outsb
or
lret
dec
sub
mov
clc
mov
fisubrs
outsl
cmpsl
leave
sub
mov
inc
pop
out
jl
jns
aas
dec
call
pop
stos
or
jl
scas
shlb
cltd
adc
add
movsl
xchg
outsl
inc
test
cmp
mov
addr16
push
cmp
inc
es
in
rcrb
test
push
ss
or
stos
jno
sbb
mov
cmpsl
ret
xor
out
mov
inc
mov
xorl
mov
aad
cmpsb
ss
inc
mov
ja
jle
mov
push
or
loop
push
sub
mov
fnstcw
inc
xchg
jno
and
xor
mov
mov
mov
sub
lret
pop
add
outsl
inc
and
rcrl
cld
dec
mov
pop
lret
push
pop
into
push
ret
pop
aad
out
rcrl
stos
add
lret
jns
xchg
pop
repnz
jbe
mov
je
repnz
orl
push
fildll
comiss
jbe
mov
mov
es
add
xchg
or
and
je
cmp
negb
loope
xor
mov
enter
xchg
movsb
fildll
dec
aaa
xchg
psubb
cwtl
in
out
push
daa
or
sub
and
addr16
icebp
in
movsb
or
imul
ss
test
test
jmp
rorb
and
movsl
dec
cltd
inc
es
sub
mov
inc
fdivrl
cmp
loope
mov
cld
xchg
scas
mov
push
dec
pop
adc
mov
or
loop
jmp
ret
jb
adc
test
or
mov
sbb
cmp
add
mov
iret
xor
jl
lock
insl
jnp
jl
mov
out
rclb
mov
out
imul
ud2
mov
pop
xchg
dec
ljmp
jecxz
scas
lock
dec
sti
rclb
push
jp
adc
cltd
sarl
jno
hlt
adc
push
push
or
and
mov
mov
ficomps
and
popa
jb
jae
fisubrl
sti
lods
xchg
lret
dec
js
lods
xchg
add
lods
add
cltd
pop
cwtl
pop
shlb
push
push
dec
out
xchg
iret
sbb
add
dec
pop
mov
pop
out
mov
lret
imul
sub
adc
cmpsl
cmp
mov
hlt
dec
idiv
pop
imul
js
std
push
and
dec
imul
push
and
mov
lock
dec
andl
scas
xor
push
js
out
outsl
repnz
or
xchg
add
mov
jo
sub
mov
lret
inc
ja
inc
mov
sub
jb
shrl
sbb
mov
mov
push
lods
add
fidivs
jno
push
mov
mov
test
mov
test
insl
leave
jge
xchg
xor
xchg
jle
jmp
js
div
pop
cltd
adc
flds
scas
icebp
pop
sbb
jae
into
xchg
inc
push
insl
faddl
pop
js
mov
and
sub
aaa
fnclex
or
mov
std
dec
or
xchg
ret
pop
fcomps
imulb
ja
addl
repz
mov
bound
stc
daa
clc
mov
xchg
fildll
sbb
divb
dec
jo
jb
nop
adc
jbe
dec
lea
lcall
lahf
fsubl
mov
pop
jno
add
mov
pusha
sbb
rol
mov
lods
out
sbb
xor
mov
cli
popa
push
pop
shrb
push
pop
mov
lock
inc
sahf
lods
jmp
xchg
jo
jns
js
jno
call
jle
mov
pop
add
xchg
xor
arpl
mov
cltd
adc
mov
lret
cmpsl
movsb
dec
scas
cmp
inc
mov
mov
fisttpll
cmp
adc
cmp
dec
xchg
add
adc
lcall
jne
shlb
test
dec
dec
pop
adc
addl
and
jmp
dec
mov
out
nop
clc
push
sub
or
xchg
sarl
fildl
inc
pop
testb
mov
ljmp
cmp
mov
dec
inc
add
cltd
fcoms
inc
inc
pop
sahf
aam
adc
out
add
insb
sahf
pop
scas
pop
mov
mov
push
jge
mov
push
movsb
cmp
in
sbb
or
dec
and
loopne
push
jb
cmp
mov
pop
sbb
fbstp
inc
push
push
int
xchg
addb
jge
sub
mov
mov
js
in
daa
xchg
dec
xchg
mov
dec
sahf
cmp
xor
lret
inc
aam
adc
adc
stos
mov
xchg
sub
repnz
ret
dec
popf
mov
bound
add
rclb
jg
lock
out
cmc
fwait
mov
mov
mov
movsl
xor
ss
xor
sub
jl
mov
push
sub
mov
ja
cmp
pop
mov
add
pop
cmp
incb
and
divb
push
aad
das
xor
das
lock
daa
outsb
hlt
add
and
dec
xlat
in
jb
rcll
push
imul
mov
ret
lret
repnz
sub
sub
sti
cmp
hlt
xchg
or
test
xchg
sbb
js
xor
cmp
cs
xor
loope
add
cld
decl
mov
push
and
push
das
mov
cmp
lds
cld
out
flds
and
jns
icebp
sub
mov
mov
xor
cmp
aam
xchg
lock
scas
cmc
and
sbb
popa
push
stos
and
mov
lock
into
sub
adc
push
and
sbbl
xchg
mov
jbe
cmp
push
push
or
das
or
inc
subb
pop
pusha
xchg
or
mov
pop
test
hlt
dec
lods
inc
mov
test
cmp
fld
xchg
es
push
cmp
ret
inc
cmp
dec
dec
jno
mov
and
xor
imul
bound
and
lcall
in
dec
xchg
xchg
xchg
loopne
dec
mov
subl
pusha
xor
popf
adc
ja
es
addr16
pusha
push
das
pop
sub
push
push
jno
fadd
rorl
mov
fiadds
xor
jnp
ret
outsb
imul
add
xor
add
movsb
or
imul
push
arpl
xor
in
testl
in
std
or
out
xor
movsl
mov
jae
sbb
in
add
sub
fildll
mov
icebp
and
ja
sub
sub
push
jecxz
xchg
stos
in
sbb
mov
es
stc
ficoml
xor
pop
mov
sbb
jbe
es
pusha
inc
mov
ja
xor
stos
mov
int
xlat
data16
dec
mov
adc
or
inc
pop
xor
mov
dec
icebp
adcb
push
loope
stos
ds
pop
sub
fcomps
xlat
jo
lods
add
sbb
ss
outsl
lods
lods
and
mov
cs
test
jbe
xlat
or
dec
pop
sbb
ja
testl
std
dec
jp
and
pop
aad
push
sahf
in
gs
mov
enter
cmpsl
mov
hlt
test
mov
or
pop
or
mov
inc
in
fwait
aas
xchg
inc
into
repnz
adc
mov
mov
mov
cmp
mov
iret
imul
push
dec
movsb
mov
pop
cmp
sub
out
ljmp
xchg
xlat
rclb
jb
cld
in
add
xchg
insb
loopne
popa
mov
jmp
iret
xor
mov
cmp
leave
es
ret
jb
lds
mov
pop
cld
pop
addr16
dec
jp
mov
ret
xor
imul
repz
sti
mov
cmpsl
pop
outsb
fnstsw
push
adc
daa
and
out
sahf
int
mov
xchg
jmp
fstpt
mov
and
dec
jbe
pop
xchg
leave
sub
inc
dec
shrl
pop
std
es
fwait
out
int
sbb
stos
push
mov
and
imul
aad
xchg
in
push
xchg
rep
rcrl
mov
gs
lods
pop
mov
das
aaa
stc
out
mov
jp
dec
addr16
pusha
popa
xor
xchg
inc
jnp
inc
inc
imul
nop
push
and
push
inc
add
mov
inc
push
pop
push
add
pop
jne
rol
xchg
scas
clc
adc
mov
mov
imul
daa
pop
jp
xor
mov
ficomps
mov
lods
int
daa
jmp
and
movsb
cld
pop
inc
leavew
xchg
sbb
scas
movsb
push
add
push
in
test
shrb
push
jno
dec
mov
mov
cmp
sbb
test
mov
lds
or
test
xchg
loope
dec
fwait
pop
adc
loop
mov
push
cmp
in
mov
shlb
mov
pop
pop
xchg
xor
jb
sub
xchg
jg
jmp
ret
pushl
mov
test
dec
or
xchg
inc
sub
cli
xchg
cld
mov
or
cmp
xchg
fildll
loop
pop
sbb
xchg
xchg
in
sub
mov
pop
dec
lds
mov
sbb
xchg
or
fmul
loopne
and
inc
and
imull
stos
fisubs
pop
sbb
scas
push
sbb
divb
loopne
fs
cmp
jle
sbb
cmp
lods
mov
xor
jg
push
xchg
nop
push
inc
in
ss
in
xchg
repnz
pop
jle
jno
jbe
filds
adc
int
jnp
decb
mov
xor
decl
pop
xor
cmp
ljmp
inc
stos
out
sub
push
mov
fwait
mov
mov
pop
xor
push
mov
xlat
xchg
subl
push
xor
mov
xor
jns
cmp
sub
and
sbb
jp
pusha
adc
adc
jg
dec
clc
and
nop
push
mov
in
jp
pop
lds
dec
mov
push
mov
xor
outsb
jp
pushf
and
in
sbb
fstpt
inc
pop
jge
xchg
aaa
push
mov
sub
lock
mov
xchg
sub
aaa
adc
imul
stos
test
mov
daa
xorl
and
mov
dec
dec
mov
or
jno
lea
leave
outsb
repnz
push
push
loop
push
imul
subl
or
popa
xchg
lahf
xor
cli
cmpsb
sub
push
mov
outsb
mov
push
sbb
in
rcrl
jge
jmp
mov
cmpsb
cmp
push
dec
stos
jp
hlt
ret
js
cmp
adc
rcrb
push
in
xor
daa
mov
jns
dec
gs
mov
cs
jg
stos
enter
fstpl
cmp
add
aas
add
adc
mov
pop
out
jne
dec
repnz
pop
int
lods
gs
dec
shll
sub
pop
leave
mov
movsb
test
jae
and
rol
push
add
call
das
hlt
arpl
cmpsl
push
js
xchg
mov
loopne
adc
movsb
sbb
sbb
jne
push
xchg
sbb
mov
push
fdivr
add
jae
iret
adc
call
daa
aad
jge
addl
mov
fbld
cmp
inc
clc
or
pusha
int3
pushf
out
pavgb
cwtl
push
repz
xor
mov
mov
adc
test
push
sti
pusha
push
jns
add
mov
sub
sbb
jbe
stc
dec
mov
mov
and
inc
aam
sahf
lds
push
popa
fcompl
or
jns
dec
mov
lock
mov
fisttps
cmpb
mov
fwait
push
dec
out
push
sub
lea
fcomps
adc
mov
inc
cmc
cs
inc
addr16
mov
xor
mov
mov
test
test
mov
out
or
mov
lcall
add
or
lea
jno
into
adc
jae
aam
addl
cmc
or
mov
in
iret
cmp
aam
push
xchg
mov
xchg
xchg
jns
dec
sub
rcl
scas
and
ljmp
pop
sbb
pop
int
cs
dec
xor
pop
pop
sbb
sahf
sub
and
mov
sub
jnp
dec
das
fwait
xor
jno
scas
adc
push
and
in
pop
loopne
je
dec
mov
repz
push
out
jbe
push
dec
and
push
xor
inc
arpl
mov
setns
push
inc
mov
fistpll
loop
lcall
jle
outsb
inc
scas
sub
xchg
fstps
mov
in
sar
mov
xorl
aas
pop
cs
lds
cmpl
fsubl
out
repz
stos
test
sbb
xchg
mov
push
test
ror
nop
mov
nop
test
sbb
lret
cmp
mov
mov
add
out
xchg
or
sub
stos
dec
jge
nop
fildll
jecxz
jo
insb
aam
mov
cmp
mov
push
xchg
int
pop
push
sahf
out
push
lods
fcomi
jbe
lcall
push
mov
les
sub
inc
cs
add
icebp
sbb
dec
push
negl
adc
mov
scas
aad
push
cmpsb
or
aam
mov
mov
add
and
cmp
lods
xlat
cmp
mov
sbb
dec
mov
sbb
pop
inc
test
adc
or
arpl
xchg
pop
xor
nop
loop
pop
inc
popf
lret
shl
ret
xchg
push
xlat
addb
inc
das
adc
scas
jg
icebp
pop
lcall
imul
loop
aad
push
pop
jb
mov
loop
dec
mov
mov
sub
mov
sahf
cmc
mov
lds
xor
dec
push
dec
cmp
in
mov
and
rep
jle
or
push
sub
scas
hlt
jecxz
pop
inc
or
mov
xor
jo
repnz
push
mov
pop
xchg
pop
sbb
sar
dec
pop
clc
sub
xchg
fs
enter
jb
add
mov
push
test
and
repz
jb
and
pushf
jns
ja
vpsubsb
aad
cwtl
dec
das
xchg
cmpsb
mov
and
xor
xor
daa
icebp
push
loop
push
fistpl
cltd
fwait
out
dec
and
cmp
repz
mov
mov
hlt
sub
adc
inc
cmp
nop
and
mov
imul
mov
aas
mov
adc
iret
fisubs
mov
in
mov
cmp
in
ja
fdivl
add
lock
aam
addr16
sbb
cmp
lods
mov
push
dec
hlt
pop
in
std
cli
xor
out
mov
test
adc
add
out
jb
cld
mov
sbb
xchg
adc
xchg
aad
outsb
add
ds
and
and
test
inc
mov
lock
imul
xchg
xchg
fscale
add
add
xchg
push
sti
pop
pop
negb
lea
pop
das
cmpsb
lods
mov
repz
lds
cmpb
mov
and
lret
in
sti
rcrb
mov
shrl
add
lret
das
int
out
push
adc
inc
aas
pop
mov
mov
testl
lret
jne
adc
xorl
sub
inc
dec
stos
shrl
pop
adc
or
push
insl
pop
ffreep
pop
dec
pop
push
fnstenv
jnp
add
sub
push
loopne
pop
adc
out
push
pop
jp
jmp
pop
mov
sub
push
daa
pop
mov
inc
xchg
out
das
push
leave
sbb
lock
fdiv
outsl
aad
sub
inc
inc
mov
xchg
icebp
pop
sbb
leave
jge
pop
sub
enter
add
int3
push
repz
inc
jge
add
popa
ss
mov
pop
movsl
cmp
push
lea
adc
in
push
cli
xchg
or
and
xchg
arpl
push
pop
or
shlb
mov
fbstp
sub
push
xor
xchg
mov
inc
or
icebp
cwtl
and
xchg
jle
popa
or
mov
mov
mov
fnsave
mov
sbb
fwait
or
cli
cmp
xchg
push
dec
adcl
mov
pop
mov
pop
xchg
insl
xor
and
xchg
es
sbb
adc
arpl
rclb
xchg
jne
enter
outsl
xchg
inc
ss
xchg
xchg
xchg
scas
inc
push
lret
ds
push
jo
ljmp
sbb
pop
push
test
enter
jo
jge
cmpsb
ss
sbbb
push
sbb
dec
pop
mov
aaa
cltd
adc
test
mov
adc
mov
int
add
inc
and
into
push
les
int3
das
push
jnp
jb
movsl
inc
lods
mov
lret
popa
inc
clc
adc
push
out
arpl
pop
inc
mov
cmp
or
xchg
xor
loopne
lcall
jns
push
mov
jmp
mov
idivl
sub
dec
mov
stc
sbb
inc
imul
into
xor
insb
add
lret
je
nop
adc
jg
add
aaa
jne
aad
push
lcall
dec
test
jmp
and
jmp
xchg
call
jle
les
jl
add
sbb
push
shr
pop
clc
push
cmc
and
sbb
scas
movsbl
fildl
scas
mov
adc
and
shll
pushf
xchg
or
ficomps
fucomi
and
lcall
xor
jecxz
cmp
sub
fs
add
mov
jae
out
lret
dec
inc
adc
cmp
adc
sarl
pop
outsl
mov
shlb
sti
out
push
pop
push
jne
adc
lahf
jne
pop
aas
popa
gs
fstps
lret
inc
adc
loope
sub
xor
sub
rcrb
stos
xchg
mov
push
jp
paddb
dec
add
fs
or
std
icebp
mov
mov
shll
je
adc
arpl
jmp
xor
imul
outsl
sahf
mov
sbb
xchg
nop
adc
jp
into
push
mov
adc
out
lret
inc
jno
fisubrs
shll
ja
xor
testb
test
mov
xor
or
das
inc
pop
cld
cld
sub
xchg
loopne
in
incb
lods
daa
insb
int
in
movsl
mov
push
push
jmp
clc
lods
addr16
lea
push
pop
jno
pop
daa
test
pop
cmpsl
test
cmp
mov
aaa
ficoms
mov
aas
or
cmp
dec
push
jge
pop
mov
or
or
loop
adc
xchg
add
pop
bound
scas
pusha
jnp
aas
clc
testb
mov
clc
outsl
aad
mov
mov
xor
jns
into
cmp
lea
lahf
xor
enter
rcrl
mov
cmc
movsl
inc
rcrb
sbb
in
stos
mov
dec
and
push
outsb
iret
xchg
mov
fwait
inc
icebp
sbb
or
inc
xchg
push
inc
or
out
xor
and
mov
fdivl
sub
sbb
jp
lahf
dec
jnp
sti
and
push
addr16
xchg
mov
nop
cmp
adc
cmp
in
mov
mov
jmp
sbb
imul
inc
and
sbb
jg
mov
adc
jge
mov
jle
imul
rorl
jo
lea
mov
jne
inc
cld
jns
int
push
jmp
dec
fsub
mov
sarb
dec
insb
lahf
js
icebp
cltd
aad
fwait
sbb
jae
inc
movsl
dec
mov
cmp
jl
negl
cltd
dec
roll
cld
pop
push
jae
push
xor
das
pop
mov
into
cmp
mov
fildll
dec
cmp
test
aam
inc
mov
pop
sub
in
in
scas
pop
sub
mov
aas
cmp
js
lahf
mov
dec
lahf
xchg
insl
mov
subb
daa
sub
lcall
sbb
test
imul
cmp
dec
clc
and
inc
pop
mov
dec
jbe
fidivrl
push
inc
dec
mov
jne
mov
aam
fnstsw
in
sbb
rcll
adc
push
imul
jb
testl
cltd
out
js
jecxz
sbb
pop
inc
sbb
fnstcw
jnp
cmp
outsl
mov
push
ja
mov
cltd
cmc
fsubs
repz
adc
sub
test
hlt
jae
sbb
sbb
mov
mov
lock
jl
and
stos
clc
ljmp
inc
sti
icebp
std
or
test
lret
sub
jae
xlat
mov
int
xchg
dec
jmp
addb
inc
jnp
inc
mov
or
enter
jne
sub
loop
adc
dec
outsl
adc
inc
fs
ljmp
sbb
lret
mov
and
bound
mov
insb
fisttpll
xor
int3
daa
dec
or
sub
push
pusha
add
inc
xrelease
mov
mov
lcall
lret
xlat
rclb
in
cmp
and
mov
push
sub
icebp
loop
ret
lock
rcrl
out
add
sbb
mov
in
fcomip
std
scas
fstl
mov
bndldx
leave
loope
dec
or
sar
fstl
jg
sub
fwait
jnp
inc
adc
ljmp
ficompl
fucompp
cmp
inc
pop
mov
jp
pop
shr
adc
mov
loopne
mov
insb
popf
lcall
mov
cwtl
cmpsb
sbbl
mov
or
cmp
push
push
and
iret
jns
and
popf
push
jno
pop
cmp
notl
das
test
leave
push
xchg
clc
mov
jl
ljmp
adc
mov
add
insl
mov
jl
mov
mov
ja
dec
pop
leave
mov
aas
mov
sub
push
mov
jecxz
leave
sub
xor
lss
mov
add
fisubrl
add
mov
dec
ljmp
scas
js
xor
sub
aad
les
loop
xchg
pop
or
mov
gs
nop
sub
dec
fucomip
mov
inc
fidivl
push
test
stos
outsl
lret
xadd
loopne
push
inc
pop
xchg
call
cmp
mov
movsb
mov
xor
cmp
pop
sub
popa
pop
lods
sahf
idivb
mov
and
add
and
jp
out
push
jmp
ljmp
pop
dec
sarl
lods
xor
mov
and
mov
inc
or
loopne
cmp
insl
daa
ficoms
iret
cmpsl
rorl
div
jp
inc
xchg
fidivrl
cmc
incb
push
or
add
xor
jp
sub
das
scas
es
xorl
sbb
xchg
lds
mov
ret
daa
out
and
pushf
sub
outsl
clc
xlat
movsl
push
in
inc
test
and
pushl
mov
and
ljmp
inc
ja
insb
sbb
js
call
xor
test
testb
pop
loop
js
mov
or
cltd
ds
hlt
jg
mov
andb
mov
xchg
out
adc
jo
mov
ss
sub
aas
cmp
mov
cmc
push
jmp
xchg
and
lea
add
inc
shl
cmp
mov
xchg
scas
xor
sbbl
out
js
add
call
mov
aad
inc
cmp
inc
stc
xor
xchg
mov
jmp
pop
xchg
add
pop
test
xor
jg
mov
xor
das
ret
mov
cmc
scas
push
adc
imulb
mov
cmp
lock
aam
jmp
pop
sub
add
outsb
movsb
nop
xchg
or
sti
aad
loopne
inc
insb
cmp
mov
push
scas
iret
ret
mov
lods
in
movsb
inc
cmc
pop
pop
ljmp
inc
jns
aaa
add
lock
and
push
aas
pop
cmp
mov
adc
inc
dec
dec
repnz
stc
test
fcmovnu
mov
lods
lods
add
js
xchg
cmp
jo
sbb
dec
outsb
mov
pop
addr16
push
inc
jmp
jo
cmpsb
or
sbb
add
cwtl
push
imul
outsl
lret
addb
shrl
loop
lods
jne
sbb
fbld
flds
add
add
gs
es
jo
xlat
gs
insb
lds
mov
cmpsb
xchg
fistl
insb
loop
xchg
mov
mov
jg
inc
mov
popf
inc
mov
ror
and
pusha
int
daa
add
or
xor
pop
pop
pusha
inc
es
lock
lods
pop
xchg
add
lret
adc
aas
loop
call
cli
fldl
jns
pop
jg
cmp
faddp
scas
pushf
push
dec
shrl
mov
hlt
out
dec
cli
mov
jns
sarb
jmp
add
or
sahf
mov
data16
mov
cmp
pop
dec
bnd
mov
daa
xor
test
xorb
lea
adc
or
les
pop
mov
xor
sub
incb
scas
push
data16
mov
jg
je
loop
movsl
in
sub
and
in
in
clc
cmp
js
fistpll
adc
pop
jl
insl
xchg
xor
out
hlt
ret
add
std
leave
and
pop
mov
xchg
dec
sub
cs
mov
insb
cmp
cmp
dec
jns
imul
jae
das
and
movsb
pop
rcrl
sub
push
in
lods
sub
mov
or
std
dec
add
jle
sbb
add
cmp
ror
movsl
lret
jns
jl
mov
add
sbbl
xchg
add
test
xor
es
lea
movsb
rcl
xor
inc
adcb
jecxz
mov
push
pop
lret
inc
mov
std
pop
push
push
negb
push
dec
mov
mov
adc
mov
cmp
xor
push
xchg
mov
dec
das
mov
adc
movsl
mov
shrl
sbb
shll
xchg
push
xchg
call
cmp
xor
into
mov
andb
movsl
movsl
leave
jbe
cmp
lret
call
into
orl
int
or
subb
mov
sub
outsl
mov
push
jbe
mov
cmpb
popa
push
shr
xlat
jb
push
adcl
xchg
cld
pop
and
popf
cltd
lret
pop
mov
aad
adc
out
push
add
jecxz
fs
in
mov
stos
lock
add
cmp
dec
push
xchg
mov
and
iret
fadds
mov
ss
mov
cwtl
xor
rcrb
or
call
int3
imul
pop
jbe
jecxz
nop
xlat
inc
out
mov
int
jae
sub
mov
jle
xor
outsb
or
data16
setp
push
jge
mov
pop
in
ss
inc
mov
pop
cmp
outsl
cmp
push
or
jle
mov
in
scas
cs
in
adc
cmp
lret
es
test
dec
and
fsubs
mov
leave
nop
sub
adc
cmp
mov
dec
subb
mov
sub
xor
lret
adc
xchg
out
testb
adc
leave
jp
negb
jecxz
xchg
adc
dec
jns
fwait
adc
popf
cli
jns
bound
adc
popa
aaa
or
xchg
shlb
pop
ljmp
decb
and
sbb
rclb
movsl
js
push
sbb
inc
cltd
pop
lcall
stc
repz
jns
in
daa
testl
push
stos
inc
sarl
jge
in
inc
jmp
xor
in
call
in
or
jge
push
cmp
addr16
mov
jl
and
add
pop
daa
cmp
push
fs
adc
cmpsl
adc
sbb
shrl
and
adc
push
out
icebp
shll
push
jp
sbb
in
sbb
jge
ds
out
rorb
or
lds
mov
sub
or
scas
pop
dec
sbb
out
adc
ds
xchg
int
and
or
sub
cmc
pop
xor
shlb
lret
cltd
cmp
popf
das
jb
outsl
test
mov
ljmp
cmpsl
pop
pop
jo
mov
das
cmp
movsb
test
xchg
js
sub
cmp
adc
aas
lods
pop
or
shl
arpl
or
add
or
lret
lahf
out
popf
je
and
rcl
cs
jnp
xchg
aas
aam
mov
fwait
addr16
adc
xchg
jl
sub
xchg
dec
int
or
add
je
sub
aad
xlat
fbld
rorb
cmp
push
popf
or
repz
xor
sub
pop
or
jo
or
pop
inc
adc
sbb
jmp
dec
aaa
push
sti
lahf
sbb
and
mov
es
push
es
fwait
imul
nop
test
jmp
push
movl
sbb
sbb
fdivrp
pop
cmp
clc
fcmovnbe
ret
and
xchg
hlt
shlb
xor
add
imul
ret
jmp
lret
loope
in
cmpsl
mov
mov
fcmovb
pushf
mov
push
xchg
popa
or
fisttpll
loope
push
imulb
mov
int
adc
fwait
in
jecxz
xchg
cmc
out
inc
cmc
jb
mov
xchg
mov
ret
out
jmp
pop
int
jge
sahf
scas
cmp
test
push
xor
add
fmull
lods
jl
je
sub
in
mov
ljmp
xchg
xchg
orb
inc
or
jmp
xchg
movl
xchg
std
sub
push
addr16
pop
pop
jmp
cmpsb
sbb
adc
cwtl
aad
dec
lret
out
cmpsb
test
sti
and
std
add
pop
lret
push
divb
ja
push
sub
or
add
shl
mov
arpl
sti
aaa
jle
outsl
pop
push
iret
sbb
cwtl
arpl
lods
lods
or
mov
adc
clc
adcb
inc
xor
ffreep
inc
mov
mov
scas
in
ja
insb
adc
mov
jg
or
shrl
clc
repz
loope
lret
popa
imul
incl
push
ja
push
sub
mov
inc
and
dec
ficompl
sub
hlt
int3
adc
adcl
or
sarb
xchg
popa
loope
mov
outsb
add
jno
sub
mov
dec
popa
paddb
sbb
lods
arpl
loope
popa
leave
sbb
pushf
xor
aam
mov
in
jnp
xor
in
movsb
clc
mov
push
or
out
aas
ffreep
mov
mov
push
call
ret
xor
pop
and
rcll
setg
les
mov
adc
push
icebp
outsb
int
xchg
cltd
mov
clc
push
in
popa
add
popf
nop
loope
push
sahf
stos
adc
cmp
or
movsl
sti
or
cwtl
push
add
dec
mov
loop
jae
pop
hlt
scas
inc
or
lcall
push
les
sub
mov
fnstsw
inc
inc
shr
por
rcll
cmp
jl
lock
mov
rorl
fstpl
dec
loopne
mov
mov
sarl
mov
sub
sbb
mov
or
fcomp
fldt
in
fmulp
hlt
and
sub
pop
sub
mov
idivl
jae
jl
movsb
and
sbb
jecxz
movsl
cmp
xchg
push
int
mov
movsl
dec
sbb
xor
mov
subb
pop
xor
mov
add
sti
xchg
inc
testl
shrb
dec
incl
mov
call
ljmp
aad
adcl
test
int
dec
xchg
push
mov
addr16
mov
push
fstpt
stos
push
leave
cmp
fwait
sub
jecxz
or
push
out
xor
shl
test
ret
xchg
aaa
jnp
mov
int3
pop
xchg
icebp
outsl
xor
and
sbb
jecxz
scas
xorb
sti
mov
sbb
lock
mov
push
pop
sub
sbb
ss
divb
stos
mov
xchg
jmp
add
mov
mov
push
or
xchg
jae
xlat
lret
jge
aad
cmp
mov
inc
rclb
adc
xlat
mov
xor
mov
in
mov
cmp
and
mov
jl
or
cmpsb
in
push
mov
fwait
cwtl
push
xchg
xlat
gs
daa
dec
loopne
xchg
xchg
iret
loop
adc
push
test
inc
pop
loope
cmpsl
aaa
xchg
out
pop
pop
inc
sbb
fs
repz
mov
or
push
sbb
inc
data16
ret
scas
mov
int3
mov
pop
fs
xor
jge
xor
enter
test
pushf
roll
push
cmp
mov
or
daa
xchg
mov
clc
cmp
mov
fs
test
add
cmc
mov
loope
ja
or
adc
lock
push
sbb
popa
das
mov
movsb
cmp
cmpl
inc
cmp
mov
pop
mov
add
sub
test
jg
xor
mov
cmpsl
pop
mov
popf
mov
test
add
pusha
mov
mov
mov
jmp
xchg
out
adc
mov
dec
ud0
rcrb
mov
dec
call
lock
adc
outsb
fstpt
or
insb
pop
andb
add
and
mov
mov
mov
jmp
pop
mov
mov
fucomi
scas
ja
inc
rcrl
cmpsb
or
pop
pushl
cli
outsl
mov
cmp
ud1
xchg
fld1
mov
xor
sbb
fdivs
mov
cmp
cmp
clc
test
pop
cmp
mov
shlb
mov
mov
pop
mov
out
add
mov
jecxz
out
and
jle
test
mov
mov
push
pop
dec
sti
adc
inc
ret
inc
lcall
inc
or
inc
fcmovb
xor
testb
fldcw
cmp
pop
mov
iret
mov
movsb
inc
insb
jns
mov
insb
testl
inc
iret
jnp
mov
fbstp
outsb
lahf
push
xor
inc
in
sub
sub
hlt
cmpsl
int3
test
jecxz
and
mov
xchg
ficoml
jge
add
inc
xor
aas
arpl
stos
aaa
data16
jle
adc
dec
ret
ljmp
cmc
loope
fldenv
popa
imul
fidivl
mov
xchg
repnz
andb
inc
xchg
cmp
popf
mov
pop
outsb
add
dec
pop
push
mov
movsb
push
dec
idivl
mov
in
subb
sbb
mov
adc
leave
fcmovb
dec
mov
push
imul
aam
adc
pop
jg
imul
in
push
xchg
test
and
inc
dec
xor
sub
sub
imul
das
rcrl
mov
pop
or
sub
add
imul
dec
jg
xchg
adc
cwtl
cmpsl
in
cmc
mov
xor
sub
adcl
cmp
lret
es
outsl
inc
into
sub
inc
pop
movsl
dec
or
jle
icebp
je
xchg
sub
test
mov
ret
sarb
roll
pop
inc
inc
adc
mov
inc
inc
cmpl
sub
adc
jg
jne
dec
scas
sti
pop
pop
pusha
add
add
mov
into
jge
mov
xchg
xchg
ljmp
mov
and
inc
loopne
addr16
cmpsb
cwtl
in
jb
ficompl
mov
jge
dec
push
push
fcmovnb
push
mov
out
popa
and
jmp
mov
call
mov
lods
pop
mov
pop
jp
loop
mov
jl
daa
mov
push
icebp
inc
fucomp
adc
mov
and
pusha
mov
not
out
jecxz
std
cmp
add
lret
pop
xor
insb
mov
xor
int3
and
sub
mov
xor
jge
jo
addb
loope
jmp
test
out
add
nop
xchg
adc
pop
mov
das
ret
dec
lock
mov
cmpsb
gs
and
aas
adc
test
dec
lods
cwtl
aam
test
jmp
dec
mov
adc
lock
sub
sarb
and
lahf
xchg
sub
push
add
outsl
inc
hlt
xchg
lods
pop
jp
je
test
decl
shlb
jae
jae
xchg
pushl
pushf
les
push
seto
jnp
sub
lret
aam
push
push
adcb
cmc
push
inc
sbb
test
sbb
iret
lea
mov
ja
adc
push
aad
push
les
iret
bound
mov
jle
loope
mov
stos
iret
fcomps
sub
mov
inc
repnz
loopne
imul
aas
ret
inc
mov
push
adc
push
or
fs
add
jb
sti
jl
mov
sahf
sbb
xchg
idivb
into
leave
dec
and
ret
fimull
and
loope
jg
sti
test
xchg
pop
bound
sbb
out
sbb
add
addr16
out
cmp
push
lods
fbstp
sub
mov
pop
cmp
add
movl
push
arpl
lcall
sub
pop
adc
movb
add
fcomps
sub
pop
fucomip
in
mov
sub
and
or
pop
fmul
aam
dec
sub
sub
fcmovne
addr16
cs
jae
mov
xor
mov
and
push
out
lcall
aas
push
add
aam
ljmp
adc
test
inc
lds
mov
push
pop
mov
sbb
aaa
jnp
orl
jl
rcrl
adc
dec
pop
mov
add
jns
mov
sti
gs
dec
repnz
gs
push
mov
and
sbb
mov
arpl
mov
xlat
fucom
mov
pop
cld
aad
xor
xor
mov
outsb
mov
ljmp
mov
iret
jbe
cmpsl
mov
push
dec
arpl
jb
inc
fcompl
pop
call
insl
cmp
loopne
xchg
sbb
shlb
sbb
shrb
icebp
push
push
dec
push
push
fcomp
sub
sti
inc
jae
xchg
lahf
xor
rcr
adc
push
js
fwait
jns
xchg
jmp
xor
fdivrs
orl
jbe
push
mov
xor
lods
cld
lret
jmp
xor
test
inc
mov
cld
iret
pop
adc
in
cmpsl
jmp
lds
fdivrs
arpl
js
scas
stc
xchg
pop
inc
icebp
or
sbb
push
cld
in
mov
add
pop
jnp
sbb
or
push
sub
stos
mov
xor
nop
mov
imul
adc
movsl
push
pop
outsl
adc
add
sub
inc
inc
scas
xchg
sub
jns
sti
mov
les
ss
fucomip
jbe
insb
rclb
or
push
in
adc
xchg
sub
pop
inc
xchg
pop
and
jle
int
fbld
lods
mov
cmp
inc
sbb
add
or
outsb
stc
mov
test
xor
and
aas
sbb
xchg
pop
loopne
call
ss
sub
pushf
add
mov
dec
test
fbstp
ficomps
push
sti
mov
jmp
push
mov
in
dec
add
and
add
into
and
outsl
xor
cltd
cmpsl
fistpl
dec
arpl
faddl
and
cmpsb
sbb
mov
xor
bound
push
mov
sub
or
xor
pushl
or
and
movsb
xor
nop
or
push
mov
cli
cld
xchg
push
xchg
push
xchg
xchg
sbb
test
xorb
das
dec
add
out
sti
and
arpl
jae
test
cmp
fcomps
and
jle
and
out
stc
mov
jp
sub
add
ds
xchg
stc
xor
cmp
pusha
push
jmp
jge
fnstenv
cmc
sub
lods
mov
xchg
cs
and
adc
mov
loope
cwtl
dec
xchg
dec
sbb
dec
adcb
aam
test
nop
push
lret
or
int3
and
mov
imul
pop
xchg
sarb
sbb
fmull
lahf
pop
xchg
adc
add
ss
ljmp
ror
dec
inc
cmp
jmp
pushw
movsl
xor
jecxz
cmp
push
ret
fidivl
loope
jl
inc
xchg
andb
inc
repnz
adc
or
push
pop
cmc
enter
es
lods
jo
mov
std
outsl
ret
lea
adc
outsb
test
dec
lret
js
fwait
lock
mov
ret
jecxz
jl
inc
cmp
mov
ret
mov
jns
out
addr16
xor
iret
cwtl
call
push
enter
mov
inc
sbb
inc
inc
cmp
es
jns
xchg
popa
cwtl
inc
mov
popf
mov
add
scas
mov
jbe
pop
push
dec
fisubrl
inc
mov
addb
stos
jnp
mov
jmp
std
cmpsb
adc
int
mov
adc
mov
test
jb
movsl
arpl
sbb
in
xchg
filds
out
add
ret
lret
pop
dec
jns
jbe
out
add
or
lods
jg
dec
sti
jne
jno
popf
jae
fsubrp
jle
loop
call
jge
dec
aad
div
int
sbb
jns
cmp
xor
pop
jmp
fs
cmpsl
or
popf
sub
jge
pop
inc
ret
imul
pop
mov
mov
and
icebp
add
fucomp
xchg
jbe
push
and
cli
and
mov
repnz
sti
dec
stc
mov
mulb
popa
clc
loope
push
lea
dec
cmp
jp
or
mov
out
adc
arpl
negl
or
fwait
popa
mov
pop
rorl
mov
rep
cmpsl
rcll
sti
pop
pop
lea
pop
sbb
sub
dec
pushf
and
xor
gs
pop
pop
sub
sub
cmp
xor
fcompl
aad
data16
and
rclb
inc
scas
push
jl
leave
and
fwait
sbb
push
mov
or
sbb
push
int3
daa
ds
insb
inc
xchg
mov
pop
arpl
gs
mov
mov
sub
adc
inc
aam
ljmp
insl
shlb
ucomiss
js
inc
pop
mov
aam
mov
cmp
aad
and
hlt
fyl2x
in
repz
cmp
addr16
add
xchg
outsl
cmp
movsl
push
lret
les
mov
mov
mov
je
mov
xchg
inc
mov
sbb
test
outsl
ret
sbb
jns
push
stos
loopne
ja
es
xor
jno
fsubs
addl
adc
sub
sbb
jle
shrb
fbld
cmp
sub
xor
mov
mov
es
dec
cmc
jae
sub
out
and
mov
xchg
add
mov
sar
mov
and
std
popf
sub
jle
hlt
mov
shlb
xor
lcall
push
stc
mov
in
or
adc
mov
aaa
fwait
pop
addl
mov
test
inc
push
push
test
xor
lea
jge
lock
push
sbb
adc
add
gs
stos
dec
push
push
data16
jg
adc
shlb
mov
fmuls
ret
inc
jns
mov
out
fcompl
lea
sbb
add
sbb
cld
idivb
ja
idivl
mov
jl
inc
push
stc
fucom
ja
imul
loop
mov
sub
push
test
push
and
aad
or
or
push
jb
idivb
aam
xor
jle
mov
cmp
cmp
rclb
int3
shll
mov
jg
pop
fistpl
push
push
mov
std
lret
push
hlt
lea
js
bound
jp
lds
jae
hlt
jno
rcll
std
xchg
add
das
in
pop
ljmp
add
gs
pop
pop
jb
mov
mov
scas
mov
push
pop
mov
adc
or
sbb
inc
jecxz
ret
loop
push
inc
dec
dec
jb
outsl
xchg
pop
das
sbb
xchg
lea
jns
xchg
add
lods
sub
cmp
dec
mov
fs
ja
and
mov
mov
cs
adcb
push
adc
jmp
shll
jae
in
push
jno
inc
outsb
test
dec
daa
and
inc
pusha
ja
ficoml
ja
pop
in
leave
lds
mov
inc
add
mov
mov
adc
lock
mov
mov
lock
or
movsl
pop
add
add
out
pop
cmp
add
xorb
mov
ds
pop
xchg
nop
sub
sub
push
aad
cmc
enter
sub
cwtl
scas
push
and
push
sti
sbb
shr
xchg
mov
dec
es
and
stos
jecxz
or
inc
sbb
jle
outsb
push
fs
rcl
ja
push
jnp
les
adc
jge
lds
or
repz
cmp
daa
xchg
sbb
mov
cmp
sbb
inc
arpl
and
adc
fildll
add
pushf
add
imul
movsb
jnp
xchg
lret
clc
out
imulb
xchg
push
ficomps
jbe
mov
call
lods
int
jg
inc
cmp
cmp
lds
sbb
scas
mov
data16
and
loopne
sbb
hlt
mov
in
ljmp
push
pop
cmpsb
sub
ss
lret
xor
nop
mov
push
popa
fucomp
xchg
pop
inc
loopnew
jmp
dec
jecxz
cmp
dec
push
mov
xor
les
mov
in
fdiv
mov
and
push
pop
les
repnz
into
or
stos
adc
loopne
inc
mov
fwait
test
outsl
fdivl
xchg
mov
dec
jg
js
aam
sub
inc
hlt
movsb
cmc
jns
repz
add
jmp
out
stc
rclb
negb
or
divb
in
in
mov
ja
leave
cwtl
int3
xchg
leave
daa
aaa
push
fimull
xchg
mov
sub
cmp
or
mov
mov
mov
mov
aam
inc
imul
sbb
hlt
push
xchg
incb
inc
cmp
jb
mov
mov
mov
pop
push
mov
mov
sub
lret
adc
dec
and
pop
cmp
shlb
push
fisttps
xor
jb
pop
add
roll
pop
fs
mov
mov
ss
ss
mov
sti
sti
imul
push
fwait
outsl
and
cmpsb
dec
sub
jnp
jmp
inc
idivl
jg
mov
aaa
jmp
and
test
sarb
pop
sbb
repz
imul
xchg
movsb
idiv
test
mov
stos
xchg
sub
and
lods
push
add
pop
loop
mov
jp
xorl
movl
gs
sbb
addb
sbb
js
outsl
xchg
int3
test
std
mov
xchg
cwtl
aad
adc
mov
icebp
into
subb
dec
outsb
xor
push
or
dec
or
adc
xlat
loopne
pop
mov
je
cmp
jmp
xchg
out
imul
jmp
aad
lahf
bound
mov
jl
xor
loopne
mov
and
xchg
sbbb
ds
lods
add
cmp
adc
fidivrs
xchg
mov
repnz
adc
add
cmc
cli
push
dec
sub
lea
xor
inc
nop
push
lods
xor
mov
and
push
outsl
lods
sbb
inc
enter
xchg
jle
out
sub
dec
lea
cmp
pop
mov
xor
push
movsl
popf
mov
sbb
mov
pusha
pushw
pop
cmp
sbb
mov
adc
inc
jb
sbb
dec
sub
cmp
mov
mov
test
jns
mov
insl
inc
cmpsb
std
pop
mov
push
cmpsl
push
or
lcall
imul
in
jg
cld
push
mov
add
outsb
jecxz
push
hlt
sbb
imul
inc
push
cwtl
cmp
mov
jge
xchg
cli
xchg
or
push
call
xor
inc
add
jno
sub
xor
xchg
add
scas
pop
iret
lods
fwait
js
and
mov
mov
pop
lret
je
repz
mov
lret
pop
inc
movsb
mov
inc
cld
inc
push
dec
inc
test
xor
loopne
mov
aad
sbb
mov
inc
cmp
cwtl
xchg
lret
fcmovb
cmpsb
sbb
xchg
or
jb
push
adc
lret
es
pop
fwait
jnp
rolb
lods
pop
cwtl
sub
pushf
mov
xor
mov
inc
pusha
jne
adc
xchg
int3
nop
dec
mov
ljmp
adc
sbb
cmp
mov
aas
cwtl
pxor
lcall
pop
xchg
cmp
and
cmp
xchg
push
loopne
xchg
cmp
insl
jge
mov
sub
aam
es
ljmp
xchg
adc
xchg
jp
push
mov
jb
repz
lock
jmp
jbe
xchg
inc
inc
inc
cmp
mov
in
and
lds
xchg
inc
int
pop
push
mov
push
repnz
push
call
loopne
pushf
out
jb
xchg
jmp
nop
jne
imul
sbb
or
pop
sbb
dec
fnstcw
and
out
push
push
mov
dec
adc
dec
and
push
stc
pop
fcomip
lret
sarl
adc
mov
int
jle
jb
jmp
sahf
dec
addl
or
repz
mov
cmp
jne
xchg
or
xor
je
lock
mov
adc
cld
sbb
out
nop
jno
jecxz
icebp
jne
gs
xorl
xor
jns
pusha
rcl
xor
adc
mov
sbb
lcall
aam
mov
addr16
lret
imul
sub
pop
stos
mov
aam
clc
xor
addr16
xorl
je
add
jg
adc
adc
lcall
and
rcrb
pop
inc
in
jle
dec
jge
fiaddl
sarb
rsqrtps
push
or
jl
or
inc
dec
cmp
pop
rcrb
mov
sub
mov
mov
push
push
enter
adcb
enter
loop
shl
sbb
inc
sbb
and
insb
mov
enter
lea
push
mov
adc
sbb
iret
or
cwtl
shll
enter
int3
sub
ficoms
mov
mov
dec
mov
pusha
jae
push
test
cmpsb
dec
sbb
inc
xor
mov
ret
int3
xlat
dec
fwait
iret
push
insb
pop
data16
lock
jmp
ds
out
sub
test
imul
and
in
adc
ljmp
pop
repnz
add
lea
add
insl
stos
mov
test
repnz
jle
dec
jnp
out
inc
out
pop
je
sub
lret
or
sbb
pop
enter
call
sbb
mov
sbb
jmp
out
ss
daa
into
std
jns
scas
push
mov
dec
mov
xor
mov
mov
mov
pop
jne
push
xor
jns
or
pop
add
push
in
jge
jne
inc
ss
enter
addr16
rorb
in
mov
cmpb
inc
xchg
pop
out
hlt
add
pop
cmp
sub
pop
cmp
adc
daa
aam
lock
aad
sub
mov
jne
jno
incl
and
les
aas
adc
push
inc
data16
mov
jno
jo
xor
sub
sbb
add
xor
dec
mov
test
jmp
inc
int3
pusha
mov
push
jbe
aam
and
js
or
rol
test
add
push
loope
imul
daa
pop
sar
add
jbe
dec
push
hlt
jbe
cli
fldcw
nop
lcall
and
fsubrs
call
xchg
clc
inc
sub
cmp
jmp
fildl
idivl
add
mov
mov
add
cmp
mov
xor
mov
icebp
push
pop
mov
jbe
repnz
pop
fistpl
fimuls
rcl
aaa
fnstenv
inc
int
dec
movsl
mov
mov
cmp
adc
jl
mov
add
cwtl
mov
xor
fcomi
xor
pop
or
clc
sbb
sub
sbb
jle
mov
add
cld
sub
inc
shll
dec
jns
ret
cli
out
call
and
sbb
xchg
push
out
sub
lret
mov
pop
lea
or
mov
shr
fwait
sub
ss
pop
ss
imul
and
cmp
dec
aam
sub
xlat
cmc
cmc
cmp
je
inc
mov
lret
fdivs
push
test
xchg
ds
ror
add
dec
dec
mov
jbe
lds
movsb
dec
outsb
mov
mov
dec
rclb
push
pop
push
aad
inc
xchg
push
mov
mov
dec
stos
mov
test
mov
and
xor
mov
andb
xchg
cmc
sub
mov
jge
imul
testb
int3
cltd
aaa
fmul
push
rcll
mov
push
fcmovbe
push
mov
xor
and
fisubl
test
push
jecxz
jge
jecxz
dec
pop
pop
jns
test
xchg
js
push
jl
aam
cld
cltd
ja
fsubs
add
dec
cmp
ret
push
ret
stos
push
cmp
mov
lcall
or
push
es
jmp
fsubrp
push
mov
arpl
add
ret
test
mov
aaa
sub
inc
xor
sbb
jbe
jg
out
sub
leave
sbb
cmpb
idiv
xor
xor
xor
imul
pop
dec
and
aas
mov
jns
sub
lods
stos
sub
cmp
cs
lods
data16
inc
sub
test
mov
pmaxsw
jecxz
dec
add
es
xchg
lea
iret
cmp
in
into
and
icebp
rol
xor
mov
movsb
cmp
inc
cmpsl
sbb
imul
dec
cmp
dec
jo
jno
movsb
jns
jge
adc
repnz
jecxz
neg
aad
mov
imul
and
mov
lds
rclb
stos
test
pop
adc
pushf
add
popa
bound
dec
adc
lods
nop
mov
xchg
push
pop
or
push
jle
mov
dec
adc
or
sub
nop
es
adc
movsb
push
in
push
lea
dec
xchg
jecxz
mov
dec
sbb
push
nop
cmc
mov
pop
hlt
aas
sti
subb
add
and
adc
cwtl
es
lods
loope
jg
hlt
cli
ret
loopne
xchg
sarl
repz
xchg
mov
cmc
test
xor
add
sbb
mov
stos
test
fbstp
lock
inc
in
mov
jle
call
cmp
iret
jne
lret
adc
mov
decb
fs
xchg
or
inc
test
and
outsb
test
jbe
mov
sbb
pop
cmpsl
pop
int3
xchg
pop
add
push
rorl
cmp
and
movsb
xchg
sub
les
dec
mov
mov
mov
ss
iret
jb
mov
sbb
push
lds
out
xlat
pop
nop
scas
repz
dec
and
or
xchg
mov
dec
xchg
xchg
mov
in
sahf
pop
push
or
add
xchg
sub
fdivp
mov
or
jg
fimuls
jnp
rcrb
or
test
mov
cmp
cmp
add
into
adc
and
xor
sub
and
add
andb
lcall
jmp
test
lret
outsb
xor
cmp
cwtl
and
mov
notl
fwait
inc
std
iret
movsl
sti
movsl
or
cmc
sbbb
sub
je
mov
mov
fdivr
lea
sbbb
shlb
mov
xchg
mov
mov
mulb
push
xor
enter
in
push
jle
sbb
shrl
inc
jmp
mov
and
and
inc
ss
and
push
fnstcw
xchg
dec
adc
popf
pop
mov
imul
cmpsb
and
push
gs
mov
imul
push
add
jge
mov
adc
push
push
js
xchg
fldcw
popa
scas
das
loope
rcrb
bound
pop
fimull
aad
lock
or
xchg
lcall
clc
mov
dec
popf
and
out
sahf
imul
fistps
cmp
sarb
mov
insl
into
outsl
cltd
mov
cmp
repz
ss
push
les
sub
pop
jae
hlt
adc
xchg
jp
jecxz
enter
cli
or
adc
out
dec
push
or
jecxz
adc
sub
popl
lret
insb
jns
dec
pop
or
pop
pop
jmp
mov
cmp
push
loop
je
mov
push
xlat
inc
push
dec
jecxz
xchg
mov
outsb
rolb
mov
push
or
test
lret
out
sub
add
ret
pop
add
mov
sbbl
fbstp
mov
call
mov
add
ret
or
bound
dec
jnp
jg
das
cld
dec
jmp
xor
and
in
push
jecxz
mov
iret
xorb
loope
fcmovbe
ret
xchg
movsb
repz
jge
and
cmpsb
fadds
pop
mov
sbb
xor
in
adc
push
fwait
push
bnd
ss
sbb
dec
and
jp
mov
mov
mov
popl
and
ret
mov
mov
jno
jmp
sbb
xchg
es
imul
mov
clc
in
sub
test
xchg
pop
mov
mov
shrb
outsb
or
les
dec
int
fistl
jno
stc
push
inc
and
and
mov
sahf
aas
mov
out
push
fidivl
lock
push
xor
mov
xor
cwtl
cmpsl
mov
cmp
or
notl
hlt
push
adc
mov
fnstenv
mov
hlt
shll
inc
lahf
jnp
pop
mov
imul
lret
jp
int3
mov
ljmp
ss
daa
and
or
pop
pop
and
imul
inc
rolb
mov
pop
repnz
xor
cltd
cs
loop
js
fcoms
sbb
cli
mov
enter
mov
ljmp
sbb
das
popa
push
cmpsb
pusha
jle
stos
movsb
and
fistl
rcrl
xchg
mov
sbb
jmp
xchg
mov
jmp
inc
mov
pop
fsubs
mov
mov
movsb
clc
imul
in
jns
jb
sub
cmp
nop
int3
dec
es
mov
lret
pop
and
dec
push
mov
inc
mov
cmp
mov
mov
add
aas
mov
adc
jg
scas
icebp
xchg
sbb
mov
in
push
enter
adc
pop
mov
lds
xor
and
fwait
sahf
imul
into
out
pop
sub
cwtl
movsl
mov
xchg
lea
mov
pushf
push
inc
dec
xor
inc
movsb
mov
pop
jne
pop
add
add
mov
lret
mov
cmpsl
mov
or
aad
sbb
leave
xlat
and
call
dec
rcll
pop
inc
rcr
pop
sbb
jbe
aaa
add
in
test
lea
jge
cmpsb
in
icebp
cmp
dec
int3
pop
pop
inc
pop
push
arpl
rclb
movsb
dec
jle
lock
adc
aas
sbb
sbb
loope
cmp
loop
and
sbb
andb
roll
mov
mov
aaa
pop
dec
je
mov
xchg
and
js
xor
cmc
inc
fwait
jne
sbb
insb
jbe
pop
cmpsl
jge
jecxz
add
jb
sbb
adc
roll
lea
add
sub
stos
jmp
jg
add
push
push
sub
adc
arpl
stos
pop
lret
clc
cli
cmp
lcall
xchg
push
ss
cld
xchg
pop
lret
fildll
jmp
xor
fsub
aas
mov
rorb
movsb
test
xchg
rcrl
out
enter
sbb
stos
insb
cmp
push
enter
bound
inc
jo
in
flds
scas
sbb
repnz
mov
insl
xchg
mov
xchg
into
jmp
xor
mov
and
adc
rorl
scas
pushw
sbb
stos
mov
push
mov
loop
aad
dec
sbb
or
daa
loope
lock
les
adc
pop
aaa
push
bound
cmc
add
sbb
insb
mov
cmp
fwait
out
mov
int
lds
add
pop
rclb
rcl
movsb
test
test
repnz
ror
out
ret
lea
sbb
xchg
fcoml
mov
pop
iret
enter
es
lds
ljmp
mov
xor
mov
daa
scas
sahf
adc
mov
inc
jne
dec
call
into
push
or
sbb
dec
insb
rclb
mov
cmc
out
inc
xlat
js
jmp
fsubs
pop
repnz
dec
sbb
dec
jecxz
int3
xchg
lods
jmp
and
leave
lods
int3
sbb
xchg
mov
mov
add
lds
call
icebp
cmpsb
push
bndstx
fwait
mov
push
fnstenv
and
lods
mov
subb
add
std
imul
sub
xchg
je
mov
and
in
int
push
lds
jecxz
in
arpl
inc
test
cli
les
add
sub
inc
movsl
cmpsb
xor
cmp
dec
jp
jecxz
js
sub
or
add
lods
mov
loopne
inc
fimull
mov
jnp
js
and
pusha
jne
rcl
das
pusha
dec
test
cmp
pop
out
fbld
push
scas
mov
and
inc
or
movl
dec
mov
add
out
push
mov
loope
daa
outsl
es
mov
sbb
lods
sbb
aad
sti
mov
das
xor
cli
aad
jp
aas
add
mov
js
add
cmp
pop
jnp
repz
lcall
jnp
adc
cmpsb
lds
mov
inc
jecxz
pushf
mov
or
decb
and
pop
push
or
int3
test
dec
ss
testl
pop
shrb
and
jne
out
fwait
cmp
call
pop
out
cmp
sbbb
repz
mov
xchg
mov
mov
mov
adc
loop
aaa
in
pop
cmp
repz
or
or
adc
inc
xor
popa
inc
sbb
nop
sbb
and
test
dec
add
mov
loop
mov
add
iret
pop
inc
stc
sbb
and
or
xchg
mov
sbb
hlt
pushf
lahf
repnz
mov
mov
add
fsubrl
cmpsl
push
sub
adc
sub
addr16
cmp
xchg
jno
sbb
sbb
subl
lock
mov
repnz
gs
test
sti
insb
test
xchg
pop
in
scas
sti
dec
jle
insb
jo
pop
fistpl
mov
cmp
loopne
push
fisttpll
icebp
adc
inc
xchg
cmp
jne
ret
xlat
lock
pop
int
mov
mov
in
roll
scas
aad
sahf
icebp
and
push
dec
fadds
adcb
mov
into
xchg
xor
fs
test
jle
imul
jne
orb
shll
fst
push
sub
xor
or
iret
adc
into
add
cltd
movsb
mov
pop
xchg
mov
in
xchg
daa
insl
rcrl
sbb
arpl
icebp
sahf
int3
jecxz
jg
dec
push
shll
xchg
xor
aad
mov
xor
xchg
fnstcw
data16
xor
dec
aam
lahf
call
out
cli
and
fdivl
adc
outsl
dec
shll
into
rorb
sti
mov
dec
insb
icebp
aas
cwtl
lods
xchg
sbbb
jnp
enter
ret
arpl
cmp
inc
adc
lea
dec
push
push
iret
cli
pop
neg
enter
stc
loope
push
int3
adc
push
xchg
mov
test
out
mov
or
inc
mov
and
inc
inc
fsts
push
lcall
pushf
and
pop
psubq
lods
mov
cmc
rorb
rcl
stos
stos
jge
jg
xchg
sti
mov
mov
sbb
push
mov
sarl
inc
rcll
ret
add
jge
lea
cltd
pop
outsl
es
push
mov
dec
dec
jp
mov
lcall
mov
dec
mov
rcrl
les
test
sbb
pop
fbld
fmuls
icebp
and
iret
sub
add
int3
pop
push
popa
cwtl
int
or
pop
loope
aam
jo
iret
negb
xchg
popf
cmpsl
enter
xchg
icebp
lods
add
and
pushf
clc
loopne
rclb
adc
add
ss
pop
stc
mov
cmp
outsl
push
dec
sub
cmc
repz
cmpb
mov
push
stos
scas
sub
xchg
bnd
insb
mov
inc
inc
fnstsw
pop
push
sar
in
aas
dec
cmp
mov
in
fnclex
sub
es
xor
push
inc
fdivrl
fsubl
std
clc
daa
mov
mov
mov
mov
pop
lret
or
das
adc
and
cmc
pop
mov
adc
dec
xor
sub
and
data16
fnstsw
fistpl
outsl
lods
mov
cmpsb
and
sti
mov
add
lea
shrl
out
stos
pop
mov
ret
ss
xor
repnz
or
dec
mov
aas
test
xor
inc
int3
ret
jg
enter
jne
add
loope
adc
sub
xor
and
cli
data16
das
movsl
mov
or
and
dec
das
bound
xchg
lods
xlat
mov
cmpb
shlb
inc
out
jle
dec
cld
xor
dec
pop
in
dec
mov
bound
xor
pop
ds
aad
jecxz
test
dec
sti
arpl
jp
jecxz
in
jne
mov
mov
orb
cwtl
loope
mov
cli
adc
xor
xchg
dec
adc
sub
inc
mov
inc
scas
xor
or
or
jno
add
insb
push
pop
stos
jmp
cmp
or
movsl
cld
sbb
sbb
daa
sub
imul
adc
lcall
pop
push
sbb
sub
sbb
out
cmp
pusha
push
jge
mov
aad
cmp
pusha
pop
xchg
nop
std
xlat
xchg
out
and
mov
fistl
out
cltd
sub
pop
push
fistpl
rorl
mov
inc
jo
ljmp
xchg
je
scas
scas
sarl
xchg
mov
inc
sub
mov
mov
int
movsb
inc
push
add
and
jg
fdivl
movsb
xor
dec
pop
cmpsl
jmp
adc
fnstcw
ja
fsubp
xchg
mov
fsubl
test
xchg
push
repnz
pop
or
outsb
jb
mov
call
jae
mov
inc
rcr
jns
fdivs
int
or
add
leave
mov
pop
fld
sbb
add
insb
mov
sti
movsb
xchg
xor
sub
dec
jno
faddl
mov
jb
xchg
out
pop
jl
aad
push
ds
cmp
sbb
or
test
cmp
jp
push
aas
das
rcll
fwait
iret
out
push
jmp
in
fidivl
pop
xchg
cmp
dec
dec
shlb
mov
in
mov
inc
ret
push
int
lock
fmull
cltd
sti
mov
xchg
jge
jo
pop
into
jno
jnp
lds
pop
jnp
push
scas
test
andb
inc
dec
add
mov
push
mov
cwtl
rorb
pushf
jle
push
test
jno
and
inc
cmp
mov
xchg
movsb
insl
jo
xchg
mov
sbb
push
mov
rclb
aaa
mov
nop
insb
mov
jmp
mov
cwtl
fldcw
nop
stc
cmc
sub
cltd
sbb
inc
daa
sahf
es
pop
push
dec
dec
cli
mov
sbb
adcl
test
daa
imul
das
mov
mov
push
std
push
daa
xchg
mov
mov
lds
dec
xor
movsl
xlat
repnz
inc
cs
xor
jo
pop
mov
je
mov
pop
nop
xor
popf
popa
or
mov
jg
cmp
pop
mov
and
jb
xor
ja
jmp
ljmp
or
push
addb
jb
enter
add
xor
mov
stos
loopne
xlat
cltd
repz
inc
js
mov
pop
test
leave
out
mov
cmpl
xorl
inc
jg
cmpsl
popa
addr16
add
ja
stos
push
data16
xchg
imul
sbb
test
scas
iret
add
pop
jb
stc
fs
jmp
and
mov
bound
rolb
es
dec
pop
dec
jle
xchg
dec
mov
sarb
out
adc
push
jl
arpl
and
test
and
dec
test
cmc
insb
push
mov
xlat
mov
jno
mov
adc
mov
jge
mov
jecxz
fs
cmp
add
stc
mov
jmp
pushf
pop
sbb
push
movsb
das
push
addl
addl
repnz
into
xor
sbbl
dec
popa
movsb
add
or
lea
add
and
ficoml
add
cmpl
lcall
dec
daa
jo
add
imul
insl
sub
xchg
rcrb
adc
dec
in
cltd
mov
inc
fs
push
cmp
push
rorb
or
cmc
xor
mov
inc
pop
and
aam
push
jno
std
int
popf
adc
ss
push
outsl
sub
jp
pushf
cmp
add
pop
cli
in
push
push
mov
and
push
lods
mov
movsb
outsl
xor
adc
push
stc
pusha
mov
dec
mov
add
push
adc
in
out
mov
push
dec
test
push
cltd
sbb
xchg
sub
ret
iret
int
jno
rcr
adc
pop
lock
hlt
jne
pop
inc
mov
test
bound
pop
sub
sahf
or
or
xor
je
pop
test
push
insl
adc
cmpsl
pop
pop
sbb
xor
pop
arpl
sbb
inc
or
fstp
lock
xchg
ds
add
repnz
pop
mov
jns
dec
sub
xchg
outsl
orb
or
scas
push
aad
pop
mov
cltd
fsubl
cmp
fldt
aam
sub
lock
pop
pop
sti
loopne
imul
shll
inc
adc
pop
sbb
cmpsb
mov
insb
and
mov
pop
rorb
adc
lret
or
and
les
xor
pop
lods
outsl
pop
inc
mov
sahf
jbe
sbb
push
out
pop
test
add
lds
inc
out
stos
fsts
lds
add
ss
out
and
mov
mov
jo
loopne
test
js
popa
jbe
and
or
das
cmc
int
jns
or
fldt
fstpt
jg
xchg
adc
lea
bound
stc
or
and
fnsave
imul
pop
ljmp
into
mov
dec
incl
lds
pop
push
incl
out
fwait
mov
fwait
loope
cld
dec
or
arpl
xor
inc
cmc
loopne
xchg
and
sbb
jp
pop
or
ja,pt
pop
dec
fiaddl
xor
push
sti
lock
jmp
lcall
sub
orl
into
test
jnp
and
or
xchg
aam
lods
mov
mov
push
adc
shl
jnp
jle
fidivrl
mov
fs
aad
add
imul
sbb
push
rorb
rcrl
rcr
lahf
pop
outsl
std
lret
mov
rcll
cmpsl
enter
std
add
jecxz
call
mov
bound
out
pop
sbb
inc
notb
insl
cmp
pop
cmp
pusha
je
or
cmp
and
jb
dec
lcall
test
dec
std
out
lret
pusha
xlat
dec
xor
sub
jp
mov
out
aam
sbb
or
mov
cltd
jns
dec
repnz
jecxz
repz
daa
lods
stos
aad
xchg
lret
sti
ficomps
jns
xchg
jmp
or
and
cmc
sbb
mov
sbb
das
xchg
iret
jg
mov
mov
das
scas
xchg
imul
jae
in
mov
in
dec
mov
lds
icebp
rcll
jmp
mov
adc
mov
gs
pop
jae
push
jne
leave
mov
mov
imul
cmpsl
sbb
shrl
lcall
in
cmp
inc
orl
icebp
bound
sbb
scas
popf
fld
sub
outsl
movsl
lds
jl
jns
lea
sub
sbbl
inc
rcr
inc
adc
es
out
sub
leave
and
bound
out
fiadds
popf
pop
mov
sar
mov
paddb
xrelease
xor
inc
sub
jge
ficoms
loope
xchg
inc
dec
idivl
pushw
shr
outsb
lods
push
sar
lret
add
cld
mov
jnp
sahf
jns
repz
dec
jo
pushf
cmp
stc
sub
dec
xor
push
add
clc
lods
push
inc
pop
pop
dec
inc
clc
adc
and
sahf
fwait
jns
xchg
cmp
scas
shl
jnp,pn
sub
xchg
call
dec
xchg
repz
outsb
cmp
aas
rorl
cs
dec
ret
lea
xor
sub
xor
adc
in
out
push
fs
rcr
loopne
popa
inc
outsl
ss
jl
mov
cmp
jnp
mov
add
xor
and
movsl
sub
mov
mov
or
adc
dec
mov
jle
sbb
mov
aas
lds
test
ljmp
adc
pusha
jns
fiadds
jl
shll
adc
jmp
shlb
push
adc
push
xlat
sub
ja
lods
mov
sti
js
and
sbb
cmp
xor
push
push
xorl
mov
adc
pop
jnp
cmpsb
movsb
xor
inc
loopne
lods
push
jo
sub
insb
sub
pop
and
lods
lds
push
sub
jge
pop
divb
in
adc
shrl
jecxz
out
ffree
loopne
loope
mov
rclb
movsl
aad
sub
mov
and
fwait
cs
xchg
out
and
mov
jg
sbb
int
mov
mov
inc
inc
and
mov
ja
xor
jnp
stos
adc
sti
mov
mov
or
notl
push
sub
in
xor
push
bound
mov
mov
popf
xor
test
sar
cmpsl
les
out
jmp
shrb
add
dec
and
ds
or
out
iret
int
pop
popa
movsb
je
fiadds
xchg
xor
imul
pop
test
inc
sbb
mov
ljmp
out
cmc
sbb
int
xchg
rol
sub
jecxz
or
call
stc
or
outsl
mov
mov
in
sub
test
jmp
push
push
xchg
or
mov
and
loope
dec
dec
cmp
stc
cli
mov
js
mov
fists
pop
jno
jo
stos
loop
popa
dec
cmp
shlb
stos
or
push
frstor
sbb
mov
xchg
pop
jp
popf
xchg
fisubrs
not
mov
sbb
fisubrs
sbb
sub
test
iret
jecxz
push
add
xor
pop
mov
xchg
dec
bound
icebp
xchg
mov
fnclex
add
xlat
out
icebp
or
mov
jns
in
mov
and
je
orl
movsb
jg
ja
fwait
rol
jl
sub
out
rcll
sbb
dec
xchg
mov
fimull
pop
in
sbb
add
test
xchg
popa
and
les
sti
out
lods
inc
in
push
repz
xor
cmp
add
cmp
jmp
outsl
fdivl
ret
cmp
mov
cmp
bound
inc
enter
push
in
movsl
insl
cmpsb
xchg
ror
decl
mov
cmpb
push
mov
push
in
cmp
pop
shll
or
lret
cs
bound
fisttps
push
mov
aad
mov
sub
les
pop
cmc
xchg
and
jmp
pop
pop
mov
insl
js
cmp
mov
aam
aam
xor
fsubrp
mov
fs
jecxz
dec
les
cli
sahf
sub
out
pop
mov
dec
mov
popf
xchg
subl
neg
xor
jl
icebp
and
pop
push
dec
xor
pop
lds
jmp
pop
sub
sbb
into
hlt
cwtl
imul
sub
mov
inc
cmpsl
add
sub
movsl
inc
movlps
mov
add
inc
sub
loope
in
into
pop
imul
es
sbb
repz
push
push
xchg
push
ss
pop
cmova
stc
pop
sub
es
hlt
nop
leave
dec
pop
jmp
and
shrb
test
loope
das
lds
pop
cmpsb
mov
mov
xor
and
xchg
iret
test
adc
xchg
out
rolb
jg
pop
mov
mov
outsb
sti
pop
insl
in
cld
mov
je
or
filds
push
jg
pop
das
shl
je
out
rclb
cli
shlb
sahf
mov
std
rcrb
xor
sarl
xor
jmp
sbb
and
ret
sbb
in
gs
ljmp
mov
xchg
cld
fistpll
shl
and
pop
faddp
pop
mov
push
mov
movl
rolb
mov
bound
gs
aam
in
adc
pop
jmp
cli
xor
ljmp
repnz
pop
data16
outsl
push
mov
scas
leave
pop
fisttpl
pop
pusha
xor
xchg
mov
xchg
or
fwait
dec
xlat
out
add
xor
mov
lret
push
sub
push
inc
mov
imul
dec
lret
ja
jbe
dec
mov
lds
stos
jle
outsl
icebp
xor
out
inc
ljmp
sahf
add
addr16
jle
out
adc
adcb
nop
add
adc
xor
bound
test
je
inc
adc
jb
sub
sub
jecxz
push
fadds
lret
repz
popl
shlb
xor
inc
cmpsl
or
adcl
ret
add
add
mov
dec
jge
sub
pop
ja
jbe
or
in
xchg
test
mov
sub
aam
add
mov
sub
sub
mov
test
jmp
cltd
in
jno
jge
jnp
and
iret
jg
push
push
pop
nop
sub
cmp
push
leave
sbb
loop
sbb
jne
mov
shrb
cwtl
ret
or
mov
inc
inc
dec
je
push
jp
sub
cmp
in
fs
dec
mul
arpl
ss
test
mov
insl
pop
stos
jo
add
xchg
mov
std
or
jle
or
int
rorb
fisubrs
pop
leave
xor
push
pop
js
fwait
push
idivb
xor
pop
movsb
xor
ja
pop
jecxz
out
inc
mov
fidivs
insb
in
pop
sahf
and
adc
cld
bound
pop
insb
cs
push
and
sub
xchg
inc
adc
mov
fildl
sub
dec
lret
lock
push
sar
js
rcll
or
jp
push
mov
nop
shlb
jecxz
push
push
sbb
mov
add
adc
push
push
repnz
inc
andl
add
bound
mov
cmpsl
inc
or
xor
inc
fs
addb
mov
cmp
rorl
mov
cld
inc
daa
xchg
cld
enter
sarb
push
push
add
in
gs
in
arpl
jae
mov
stc
out
dec
cmp
xor
xor
push
repz
daa
mov
pop
push
pop
jae
ja
and
mov
lret
mov
jp
subb
cmc
test
lods
ds
sub
stc
xchg
jno
shrb
mov
sti
xor
mov
ljmp
mov
mov
mov
adc
nop
xchg
pop
outsl
lods
fisubl
aad
cs
loope
imul
or
dec
pop
iret
fbld
pop
test
sbb
jg
sahf
insb
call
addr16
das
and
sahf
imul
aaa
jl
inc
jg
inc
xchg
adc
adcl
inc
xchg
mov
adc
in
pop
paddq
push
inc
dec
pop
and
pop
sbb
cmp
bound
adc
clc
jecxz
cld
rolb
int3
fwait
popa
dec
mov
cld
mov
fists
clc
cmpb
or
popl
test
add
addb
sub
pop
int3
pop
mov
mov
outsb
subl
shrb
add
mov
imul
pop
insb
lahf
in
in
movsb
add
dec
aas
add
jge
push
mov
jb
inc
xorb
filds
movsb
in
mov
sub
pop
inc
adc
push
mov
lcall
pop
push
pushf
adc
movsl
out
test
test
mov
sbb
adcb
ljmp
lods
xor
jge
add
push
in
addr16
and
pop
imull
popf
pop
push
js
popa
rcrb
jl
fs
push
pop
and
das
scas
ret
xlat
mov
xchg
das
fimuls
push
mov
or
pushf
mov
daa
shl
mov
out
mov
imul
in
push
out
fs
dec
pop
push
dec
addr16
stos
push
stos
loope
sbb
pop
aaa
out
xor
or
mov
mov
pop
test
push
pushf
jno
pop
fistpl
xchg
jns
scas
jp
sbb
das
mov
int3
pop
in
xor
ss
mov
int3
inc
xor
je
pop
call
test
add
pusha
popf
fcompl
inc
pop
inc
xchg
fsubrl
pop
push
pop
pop
sbb
mov
push
add
out
dec
sahf
mov
mov
xchg
or
push
fiadds
mov
sub
cs
mov
ja
leave
cmp
mov
mov
mov
popf
mov
xor
test
jmp
mov
cmp
repz
push
lods
xchg
fisubl
ljmp
movsl
push
cmp
mov
ss
ret
pop
and
scas
add
add
rorl
pop
lahf
inc
fstpt
faddl
loop
sub
scas
out
lahf
jp
faddl
push
fnstcw
pop
das
adc
enter
pusha
cli
cltd
jo
add
pushf
sub
push
cmp
sbb
je
stos
leave
lds
jecxz
shr
test
sbb
fsts
test
mov
push
or
or
das
push
js
inc
pop
and
jg
stos
dec
dec
cmc
imul
mov
jg
dec
cwtl
ret
shrl
sub
ret
mov
jmp
adc
in
dec
das
testl
pop
cmpsb
jmp
ds
cmc
pop
jae
movsb
mov
lahf
arpl
and
pop
add
push
push
ficoms
push
mov
sbb
adc
dec
cmp
pushf
sub
in
and
in
or
xor
hlt
ja
bound
cmp
add
dec
adc
xor
aas
loopne
fsincos
xchg
inc
sbb
aad
push
cmp
call
pushf
inc
fsub
popf
push
mov
and
outsb
fisubrs
pop
cmp
sub
inc
out
xor
in
xchg
inc
sbb
jle
and
repz
loope
out
in
mov
xchg
or
pop
mull
int
scas
jl
dec
jmp
sub
test
mov
icebp
xchg
jl
stos
jbe
xchg
lahf
or
in
jmp
sub
and
into
xor
dec
pop
mov
inc
push
add
outsb
push
xchg
mov
std
mov
mov
push
pushf
push
out
and
repz
xchg
aas
dec
mov
push
dec
jge
daa
addr16
inc
mov
ret
mov
shl
xor
insl
adc
cmp
sub
mov
mov
and
push
pop
stos
aaa
xor
xchg
shrb
xchg
xor
xchg
push
pop
xchg
mov
sub
es
or
mov
sub
pop
add
push
push
cmp
adc
push
int
pop
mov
mov
dec
es
dec
inc
xchg
and
repz
test
xorl
ret
jo
adc
popa
mov
mov
xchg
loop
and
je
into
push
adc
mov
jl
ljmp
lock
ss
popa
aaa
ss
test
insb
jge
loope
dec
loopne
inc
pop
xchg
cmpl
cmp
dec
sub
fistpll
jns
cmp
inc
dec
lock
mov
add
or
push
les
icebp
sbb
jle
mov
aam
fdivrl
jo
stos
xor
xor
popf
sbb
push
add
pop
xlat
fmull
pop
aaa
adc
jl
pop
stos
je
int
ss
cmpl
sub
ret
push
stos
popa
lahf
aaa
fstpt
sub
in
fstl
dec
shrl
dec
sub
cli
adc
addr16
in
stos
test
rcll
jbe
push
movsb
ss
xchg
inc
scas
or
cmp
movsl
call
arpl
xor
cmpsb
outsb
int
mov
mov
pop
sub
sub
jnp
fisubl
xchg
stc
mov
xchg
cmpsl
ds
out
jns
repz
in
jns
inc
in
testl
vmread
push
cmpsl
lret
push
mov
imul
rclb
lcall
sub
mov
sbb
fsubs
ss
gs
fimull
and
mov
or
xchg
jno
test
loope
loopne
call
incl
dec
fnclex
in
pop
cmp
fidivrl
js
stos
jecxz
icebp
mov
push
xchg
fwait
jmp
lds
inc
inc
out
xchg
loop
cmp
mov
scas
nop
shrl
into
xor
aas
mov
mov
lcall
lahf
cmp
ljmp
pusha
lock
sbbb
add
mov
jp
fldt
shl
out
dec
mov
pop
inc
inc
push
adc
sbb
pop
pop
and
dec
mov
push
mov
adc
shrl
std
mov
sahf
out
lahf
pop
push
jbe
push
xchg
cli
jmp
xlat
push
cmp
mov
cmpsl
inc
and
icebp
push
dec
mov
jmp
insl
stos
lods
fstp
cli
push
std
fisttps
fsubrl
sub
adc
and
shl
push
jge
cwtl
dec
test
into
jg
mov
es
sub
rcrb
aad
sbb
mov
xor
sub
fcmovnb
fmul
pop
mov
xor
dec
push
push
add
movsb
loopne
sub
sahf
lret
bound
push
scas
or
out
repz
ljmp
mov
gs
dec
mov
ret
aam
xchg
add
jne
push
xor
mov
xchg
je
dec
orb
push
inc
add
loopne
fnsave
sub
push
jmp
aad
out
sub
and
pop
leave
mov
pop
aad
xchg
add
push
adc
stos
mov
pop
or
dec
dec
in
xor
mov
mov
sbb
cmc
mov
cmp
lock
fsubr
clc
test
in
mov
adc
pushf
cmp
dec
in
shl
std
imul
xchg
mov
in
inc
xor
mov
jecxz
inc
sub
xchg
in
add
mov
adc
and
stos
or
inc
pop
adc
sbb
data16
stos
jb
popl
inc
cli
in
cmpsb
shll
mov
cmp
sub
sbb
sbb
cmpsl
xchg
xchg
arpl
mov
into
insb
push
mov
lea
lahf
inc
mov
sbb
push
clc
mov
pop
pcmpgtb
mov
pop
rorb
fsubrl
scas
in
rcl
ret
fiadds
adc
or
fidivl
xor
jae
insb
mov
popf
dec
add
mov
enter
test
mov
insl
enter
xor
mov
dec
dec
out
or
mov
out
mov
inc
popf
leave
mov
out
gs
cmp
shrb
jae
xchg
cmp
pop
push
hlt
pop
aaa
pop
sub
shr
cli
test
push
add
movsb
test
cs
pop
and
mov
sbbl
mov
dec
mov
lds
adc
or
addr16
jge
push
mov
ljmp
xor
call
xchg
xor
imul
push
inc
fwait
and
rol
jbe
loopne
aas
sarb
push
xor
push
and
sbb
icebp
jnp
mov
mov
orb
aas
psllw
jae
pop
and
out
fdivrp
pop
jno
cltd
ss
mov
xchg
add
push
pop
daa
dec
rcrb
dec
lret
sarl
lea
mov
sub
fisubl
repz
mov
lods
xor
daa
cwtl
pop
pusha
jmp
adc
or
fmull
fildl
mov
fcmovb
sbb
sub
sahf
push
ja
cltd
imul
cmpsl
scas
push
cmp
ds
aas
sarl
mov
mov
add
sub
iret
clc
pop
mov
xchg
jne
add
imul
or
daa
dec
dec
negb
jno
push
push
pop
lret
testl
push
stos
aam
mov
push
ds
or
ret
imul
cld
into
lahf
outsb
xchg
dec
imul
push
sbb
int3
push
inc
inc
fs
mov
aaa
or
xchg
add
out
out
into
sbb
adc
popa
dec
mov
clc
jb
sbb
notb
leave
hlt
ret
dec
fisubs
dec
lods
dec
and
outsl
ljmp
xor
jp
shl
cld
push
ljmp
es
pop
xor
out
mov
cmp
es
fs
repz
enter
push
ret
or
adc
sar
nop
push
push
mov
out
negb
jp
mov
das
scas
cmp
and
dec
in
ss
mov
push
cmp
rclb
xor
cmp
out
lahf
pop
into
mov
shlb
aas
je
or
insb
fs
mov
sub
cmp
je
das
jmp
pop
mov
ja
pop
push
and
cmp
nop
mov
aas
xor
and
mov
mov
pop
adc
loop
ret
call
in
call
dec
inc
stos
push
repnz
inc
push
sahf
push
dec
dec
dec
subb
or
push
add
mov
cltd
jl
hlt
mov
xchg
lds
inc
mov
andl
hlt
fdivrs
add
lahf
clc
insb
rcrl
xlat
insl
jno
hlt
sbb
andb
lods
adc
js
int
orb
cmp
sbb
cmp
mov
out
mov
aaa
int3
out
sbb
push
push
sub
shlb
mov
pop
sbb
int
in
in
out
mov
ret
movsl
push
mov
enter
stos
cmpsb
sbb
call
les
mov
jne
mov
dec
and
das
std
jle
lock
call
inc
jecxz
jg
add
xor
cmpsl
pop
sahf
ja
cmp
fnstcw
inc
gs
inc
shlb
in
add
sub
push
xchg
push
push
sarl
and
fnsave
sahf
es
pop
cmp
stc
dec
insl
mov
jp
lahf
roll
insb
dec
lret
std
push
cmc
xor
scas
test
or
push
cmc
pop
pop
scas
sub
addb
mov
xor
outsl
or
add
xor
jmp
mov
pop
jae
sarb
mov
cmp
sub
dec
cmp
add
les
stc
insl
mov
test
mov
adc
adc
pop
jbe
dec
repnz
pop
dec
xchg
cmp
rorb
adc
cmp
test
add
sbb
rcrb
sub
jl
adc
add
fwait
push
or
into
test
int3
int3
stos
int3
test
xchg
adc
xor
rol
sti
out
out
push
or
add
aad
jle
mov
or
add
mov
lret
daa
mov
push
in
lds
mov
pop
sub
int3
and
push
adc
or
adc
and
imul
or
jb
mov
fwait
xchg
cmc
subl
push
lods
push
mov
pop
xorl
adc
dec
mov
insb
lcall
inc
lahf
fnop
daa
pop
sbb
xchg
adc
xchg
pop
aas
cltd
fs
push
fldl
daa
out
mov
outsl
cmpsl
mov
fisttpl
cs
mov
rolb
test
fmulp
ret
inc
or
mov
bound
and
pusha
sub
out
or
lcall
jl
fdivrl
stos
sti
stc
leave
adc
out
cmp
push
or
inc
adc
pop
sub
pushf
shl
fcos
mov
pop
dec
mov
and
or
add
dec
int
out
sahf
xlat
push
hlt
lcall
or
daa
stc
fistpl
add
data16
and
mov
gs
mov
out
pop
mov
loop
jge
scas
jp
shlb
repz
in
lds
pop
sbb
sti
push
faddp
icebp
js
mov
repnz
cwtl
iret
or
sub
out
inc
xchg
jae
inc
jl
js
aam
add
and
mov
jecxz
out
fcmovnbe
fsubrp
cmp
movsl
add
xchg
xchg
mov
pop
pmullw
jle
xor
inc
dec
jnp
and
push
cld
adc
test
xchg
arpl
add
fidivl
inc
dec
jno
cltd
mov
inc
int3
adc
lret
mov
pop
jno
inc
sti
lahf
loop
aas
xor
push
push
fbstp
sub
xchg
jg
shll
std
mov
stos
shll
jle
aam
mov
cmp
mov
sub
xchg
cwtl
imul
out
scas
movsl
shll
push
stc
sahf
and
pop
xor
push
and
mov
icebp
dec
push
in
cmp
arpl
outsb
push
dec
xor
mov
sub
fnstcw
testb
jno
mov
mov
push
ret
nop
adc
xor
call
dec
sub
sar
pop
jnp
pop
dec
push
sahf
hlt
push
adc
sbb
lds
cwtl
mov
cmpsb
lds
les
mov
stos
mov
push
pop
pushf
or
xchg
shlb
sbb
jb
fidivl
in
mov
je
sub
frstor
lods
dec
push
mov
out
jg
adc
int
dec
loopne
mov
ja
mov
daa
jg
aaa
sub
push
in
xchg
les
mull
insb
cmp
push
out
lret
jg
cmpsb
int3
aad
push
push
add
mov
fwait
dec
ljmp
fwait
inc
pop
jp
jecxz
sbb
mov
cmp
pop
mov
sub
cmp
into
dec
mov
dec
repz
rcrb
jbe
test
jg
xor
stc
movsl
cmpsl
sbb
add
xorb
jne
in
xor
pop
adc
dec
jmp
shrb
addr16
mov
in
das
and
int
adc
jecxz
inc
inc
sbb
cltd
push
jl
mov
xchg
cltd
insb
add
call
icebp
xor
inc
lret
imul
cld
movsb
and
xchg
sbb
cmc
inc
inc
inc
fsts
into
inc
int
jbe
insb
jmp
lods
xor
cld
sub
and
mov
pop
adc
int
jae
add
sarl
xor
add
sbb
and
xlat
arpl
test
mov
repnz
or
mov
icebp
and
cmp
popa
sub
andb
fs
ja
test
push
mov
adcb
dec
pop
movsb
scas
sbb
push
xor
cmp
xor
fcmovnbe
adc
loopne
les
mov
lea
in
cmovno
stos
lock
sbb
lock
fsubp
aaa
scas
fcmovnb
lahf
arpl
push
dec
es
xchg
cltd
push
or
and
mov
stos
mov
test
pushf
fadds
gs
mov
sbb
add
fcoms
xchg
mov
repz
cmc
adc
mov
incl
push
imul
out
xor
push
movsb
ret
and
fwait
mov
fisttpl
xor
insb
ret
cmp
icebp
loopne
inc
adc
addr16
movsb
out
pusha
mov
sbb
pushf
cmpsl
pop
out
dec
cli
in
dec
outsl
inc
js
faddp
and
mov
lods
and
pop
and
mov
push
inc
jo
sub
dec
iret
stos
mov
or
sub
mov
outsl
jo
enter
scas
push
push
xchg
xchg
pop
lahf
outsl
and
mov
cmp
aam
daa
pop
cmp
int
sub
mov
std
ss
push
fwait
lock
mov
adc
cwtl
mov
mov
add
popa
xchg
mov
inc
add
popf
mov
mov
enter
push
adc
and
mov
test
mulb
jge
sbb
xchg
jp
xchg
imul
pop
cmc
mov
jo
mov
mov
out
les
dec
jbe
movsb
cmpsb
popf
ret
mov
sub
ds
in
pop
repz
bound
jg
xchg
dec
adc
xchg
dec
mov
push
xor
out
add
jnp
or
sub
mov
neg
pop
sub
xchg
sahf
in
aam
int3
jp
sub
dec
es
or
sub
bound
push
xor
in
daa
enter
cmpsb
or
mov
repz
les
test
fcmovnbe
xor
and
fstpt
jp
mov
mov
cli
sbb
push
dec
xchg
xchg
xor
nop
lea
jnp
mov
mov
mov
mov
pop
mov
mov
dec
add
cmpsb
inc
scas
cld
mov
xchg
fwait
and
fisttpll
out
add
mov
gs
clc
jo
pop
push
dec
xchg
cmp
xchg
xchg
mov
shll
mov
xchg
xor
subb
jle
jmp
shr
outsb
enter
std
mov
mov
jge
test
jb
in
dec
stos
fbstp
and
out
lret
xor
mov
aas
sub
xchg
push
sub
popf
mov
std
push
or
mov
pusha
inc
lods
mov
fdivrs
test
adc
and
aad
pop
or
adc
pop
pop
adc
ffreep
shl
sbb
lcall
jecxz
lds
and
jecxz
mov
dec
mov
mov
loopne
add
orb
mov
and
sub
ror
sub
push
je
xchg
sbb
push
jne
mov
adc
mov
mov
cmc
mov
dec
popa
scas
mov
lock
stos
cmpl
std
mov
or
iret
mov
hlt
lea
aas
inc
out
lods
cmp
xchg
je
adc
arpl
fidivrs
push
movsl
pusha
test
sub
jbe
bound
jb
sub
mov
inc
ret
mov
xor
mov
popf
inc
mov
dec
std
push
dec
and
push
push
sahf
mov
dec
mov
rolb
and
into
mov
sub
dec
loopne
test
in
inc
push
sub
dec
js
pop
push
shlb
fildll
push
and
jecxz
aas
iret
mov
fld
mov
mov
push
aam
xchg
xor
sub
lret
aas
push
push
imul
fidivs
mov
push
sub
or
test
or
add
mov
xchg
popa
jge
push
addl
jno
test
pop
xor
out
cmp
aad
insl
mov
adc
cld
sbb
push
dec
cmpl
popl
lds
and
and
sub
les
mov
out
push
or
outsl
or
shrl
xchg
ficoml
fdivrs
add
lcall
sahf
outsb
xor
or
lods
repz
mov
movsb
sub
pop
add
popa
cmc
lds
jb
js
cld
sahf
xor
inc
lock
lcall
xchg
andb
call
subb
inc
fwait
dec
call
aaa
push
inc
fcmovne
mov
push
jl
sbb
pop
jo
sti
sub
mov
stos
sbb
fisubrl
mov
mov
inc
pop
jg
jmp
lods
xlat
push
ss
xchg
cs
and
mov
fists
xor
shl
add
pop
sar
jne
ja
repnz
pushf
pop
rorl
mov
int3
jmp
pop
cmp
jne
cmp
icebp
js
mov
inc
imul
adc
mov
popf
mov
push
movsb
pop
mov
cmp
mov
aam
mov
imul
cltd
push
cmp
std
imul
in
cmp
shrb
xchg
dec
ljmp
sar
jns
mov
pop
cli
loope
dec
movsb
xor
mov
hlt
pusha
divl
nop
popf
cli
ficomps
sub
pop
jp
dec
fisttpl
lcall
rorl
int3
pushf
push
cmp
stos
mov
push
ret
inc
imul
cmp
mov
xor
add
shl
cs
pop
mov
test
rolb
stos
cmp
push
sub
and
xchg
push
or
arpl
sub
add
xchg
outsb
xor
push
mov
jno
mov
fsubrs
pop
cmp
es
jp
imul
popa
fistps
mov
bound
jle
insl
lcall
insl
lret
loopne
mov
jae
and
mov
pop
sahf
mov
cltd
cmp
aas
es
jg
es
lret
roll
leave
mov
xchg
dec
xchg
pop
ljmp
scas
xor
lcall
mov
xchg
sti
out
pop
enter
dec
ss
lcall
cmp
jmp
xchg
jo
stos
jo
and
jp
mov
xor
inc
cmp
jmp
nop
inc
hlt
ret
dec
dec
scas
clc
adc
mov
mov
popa
bound
test
jb
outsl
lahf
pop
iret
in
fs
or
push
int3
jno
stos
pusha
gs
sbbl
sbb
xchg
scas
gs
inc
rcll
dec
push
cmc
stos
mov
shll
and
adc
sub
dec
and
add
cmpsb
lea
repz
add
jecxz
jbe
daa
repz
aad
add
adc
subb
inc
xor
dec
js
cmc
dec
call
je
insb
ds
dec
cmc
push
jb
mov
cmp
mov
or
shrl
int3
xor
mov
ret
icebp
lods
mov
pop
in
loopne
mov
cld
jp
sub
pop
ror
dec
jmp
or
inc
sahf
cmc
sbb
mov
daa
fidivs
inc
popa
push
push
jg
push
or
aad
sbb
ss
push
fisttpll
lret
ret
and
ret
bound
and
incb
incl
aas
adc
lods
mov
ja
cmp
push
clc
lds
push
xor
cmpb
cmp
or
jae
lock
inc
or
sub
pop
push
nop
arpl
cmp
fwait
out
shll
fcoms
ljmp
mov
jno
mov
not
adcl
loop
sbbb
hlt
cwtl
mov
dec
push
push
cmp
into
movsb
cs
popa
cmp
mov
in
lret
test
scas
cwtl
pop
push
cs
add
inc
dec
jle
push
mov
nop
cmpsb
jae
insb
subb
fmulp
add
xor
aam
ret
sub
call
test
pop
lcall
popf
push
sub
arpl
jns
loope
jae
cltd
xor
test
addl
loope
mov
pusha
and
jo
shr
push
daa
out
xchg
jl
mov
push
stos
out
adc
test
popf
bound
std
jg
sub
les
xorl
mov
pop
jbe
adc
cmpsl
aam
popa
push
iret
hlt
sbb
sbb
rcl
icebp
sbb
lret
sub
inc
pop
push
lahf
mov
dec
fistpl
stc
lahf
adc
push
in
fwait
dec
int3
cmp
and
dec
push
add
jg
lods
add
dec
rorl
pop
jle
pop
xchg
in
out
ds
sbb
mov
mov
scas
sub
aam
popf
lods
int
add
sbb
push
mov
and
and
scas
lds
lock
dec
pop
xchg
jp
ret
lret
jnp
or
jmp
icebp
out
out
rcrl
std
inc
rorl
mov
push
push
imul
xchg
out
jns
in
sub
lea
mov
mov
out
test
je
sub
inc
cs
cmp
and
sub
pop
xor
sbb
jb
mov
loopne
test
or
push
mov
cmp
sbb
mov
int3
or
loop
xchg
aaa
scas
outsb
push
add
out
cwtl
inc
testl
and
repnz
jne
test
subb
std
imul
push
insb
stos
nop
out
pop
or
adc
add
push
lcall
jle
xchg
fbstp
addr16
cmp
push
movsb
jp
jecxz
je
sub
push
sbb
adc
push
mov
xchg
push
mov
stos
or
adc
faddl
in
ret
out
mov
pop
dec
xor
mov
pop
mov
movsl
fnsave
or
fldl
xchg
stc
mov
sbb
adc
loop
mov
aaa
lret
fmuls
mov
cltd
xor
pusha
lods
ljmp
loop
pop
mov
test
push
insb
mov
mov
mov
lods
rcll
popa
lea
sti
dec
sub
ja
movsb
rolb
cmp
xor
or
jae
pusha
xor
movsb
sbbb
mov
pop
rorb
sbb
int3
dec
push
ret
xchg
jge
xchg
mov
cmp
ret
jp
outsb
adc
jb
das
sbb
cmp
stc
outsl
jg
cmp
add
dec
fnstcw
loop
insb
pop
aam
pop
jae
imul
icebp
jp
clc
push
imul
pop
sub
pop
adc
cmpb
and
fs
cmp
movsl
sbb
mov
subb
xchg
pop
push
add
int
or
jecxz
pop
dec
xor
test
movsb
test
pushf
cli
dec
stos
fisubrl
and
jnp
dec
icebp
pushf
sbb
in
rclb
or
xlat
fistps
out
xchg
ja
out
sahf
shll
test
iret
add
pushf
sub
jbe
fadd
and
xor
or
jmp
push
sbb
bound
cmpsb
and
es
or
ds
mov
das
xchg
enter
adc
lahf
test
rorl
jo
rcr
cmpsb
add
andl
jge
daa
mov
stc
cmp
std
les
out
sbbb
sub
in
pop
jbe
mov
push
call
scas
leave
or
add
mov
pop
mov
lret
cmp
pop
push
pop
mov
data16
repnz
out
jns
mov
inc
int3
pushf
jb
test
mov
pop
imul
cmp
sub
js
into
ljmp
jp
sahf
sti
fiaddl
dec
mov
xor
push
js
push
cmp
insb
cwtl
out
inc
dec
out
scas
sbb
inc
in
push
inc
cmp
pop
sbb
std
and
out
lea
sti
sbb
or
fwait
cmp
pop
xor
mov
fsubs
and
push
push
shrl
shll
xor
xchg
clc
cmp
jl
mov
out
into
or
int3
fs
add
push
mov
iret
les
cmp
pop
mov
push
xor
stos
and
sub
jb
push
addr16
or
scas
cmpsb
stos
lods
cwtl
adc
push
test
or
pop
sub
adc
jnp
ss
imul
push
and
ds
notl
sub
xchg
cmp
pop
pop
scas
sub
inc
int
mov
dec
jb
mov
and
add
mov
or
test
sub
aam
lret
xor
xchg
subb
push
push
xor
sbb
add
int
cmpsb
aas
popf
jne
rcrl
adc
dec
fsubrl
shlb
shr
stos
push
fsubs
jb,pt
insl
mov
fs
dec
jg
shlb
sti
xlat
mov
push
pop
xchg
sbb
mov
popf
shll
pushf
imul
leave
loopne
and
ss
sub
pop
mov
jae
ret
jno
outsl
clc
or
xchg
pop
dec
mov
and
cmp
mov
dec
popl
aam
nop
in
cltd
pop
dec
addr16
notl
mov
mov
adc
jg
sub
pop
iret
cld
cmp
in
je
shl
dec
mov
test
push
xchg
sub
sbb
jns
add
adc
ror
xchg
mov
xchg
add
mov
and
pop
clc
loopne
dec
cmpsb
adc
adc
je
js
loop
cltd
enter
adc
dec
bnd
mov
lods
rolb
aaa
idivb
insb
sbb
movsl
scas
or
inc
add
jge
pop
dec
frstor
inc
aam
pop
enter
sarb
js
mov
mov
sbb
mov
dec
mov
or
or
out
pusha
insb
leave
in
cli
int3
pop
scas
mov
dec
sahf
fistpl
hlt
js
lds
add
lret
pop
or
mov
imul
test
mov
xchg
or
mov
pop
loopne
mov
mov
mov
inc
out
cltd
cmp
mov
das
or
in
push
leave
push
jno
jb
adc
jmp
xor
sahf
lods
arpl
lods
mov
jmp
icebp
lcall
cmpsl
cld
sbb
hlt
xor
xchg
inc
cmp
data16
mov
inc
or
add
sub
inc
divl
bswap
je
inc
adc
das
inc
inc
adc
mov
mov
jo
adc
lock
andb
loopne
ret
loope
cmp
push
push
cli
adc
mov
rcl
imul
sub
hlt
mov
ja
icebp
jmp
sbb
shrl
bound
adc
and
pushf
cwtl
stc
jecxz
cmp
pop
pop
mov
rcl
nop
jmp
sbb
cmp
push
jae
out
add
mov
xchg
jl
movb
pop
sub
idivl
lea
push
push
femms
repz
or
jmp
pop
loop
aas
mov
dec
mov
and
jg
fcmovbe
gs
mov
popa
lds
adc
aad
rclb
or
cmpsl
adc
dec
mov
decb
sub
loop
and
and
out
daa
push
test
imul
pop
icebp
rorb
mov
scas
stos
aam
addr16
sbb
ret
and
das
jbe
mov
pop
movsb
mov
lea
sbb
or
cmp
jl
mov
divb
push
mov
fildll
xchg
jbe
sbb
shl
jns
xchg
lahf
ret
mov
xchg
mov
dec
sub
cmpl
xor
add
mov
fwait
sub
ficoml
movsb
adc
add
hlt
dec
popf
out
jle
ret
and
fsubrl
jae
aaa
ljmp
scas
ss
ret
shl
out
in
rorl
dec
iret
inc
pop
dec
je
movsl
lcall
xor
or
inc
insl
out
loopne
mov
and
cmpb
inc
xchg
sub
xchg
mov
push
or
mov
push
dec
ret
xchg
mov
mov
xlat
addr16
movsl
xchg
clc
mov
or
sub
xor
in
stos
xchg
ljmp
cltd
rclb
mov
push
mov
js
loop
dec
movsb
fneni(8087
pop
cmc
push
sarl
pushf
ret
sub
ljmp
xchg
jp
aam
or
push
cmp
push
insb
push
xchg
shll
test
outsb
subb
jnp
xchg
lret
mov
push
out
scas
mov
jl
sbb
pop
or
xchg
bound
jbe
repz
sbb
inc
xchg
or
xchg
icebp
adcb
and
jbe
ljmp
cltd
dec
lock
xlat
out
sub
roll
daa
xchg
or
imul
jb
adc
add
pop
xchg
xchg
test
pop
cmp
jl
cwtl
add
mov
pushf
shr
jle
sbb
cmp
dec
push
shlb
idivb
or
xor
cmp
insb
pusha
xchg
stc
xor
shrl
and
pusha
mov
cmp
xchg
repnz
inc
movsb
negb
xlat
push
cs
imul
xchg
pop
mov
pop
jns
stc
div
mov
sub
and
rolb
adc
clc
shrb
iret
dec
jnp
mov
adc
sbb
lock
fildl
jecxz
jl
sar
or
jo
xchg
xchg
sbb
mov
mov
xchg
in
popa
and
xchg
loopne
inc
test
or
mov
jg
out
mov
or
ss
dec
adc
cmp
mov
sarb
movntps
lcall
add
daa
xchg
sbb
mov
mov
dec
xlat
mov
push
xchg
mov
addb
mov
ret
ret
scas
jg
dec
sbb
dec
lret
mov
dec
inc
nop
fs
test
nop
addr16
bound
js
das
dec
test
dec
adc
lret
push
mov
dec
adcl
dec
mov
mov
sbb
mov
mov
mov
loope
or
arpl
mov
sub
xchg
std
add
push
arpl
ret
adc
pop
inc
mov
sbb
dec
int3
mov
fisubrs
xor
xchg
cmpsl
xor
or
popf
mov
popl
mov
test
mov
icebp
fcoml
gs
sbb
xchg
jae
into
cs
sub
popf
xor
pushf
lret
mov
mov
mov
jb
xchg
sub
mov
dec
cmp
addb
add
outsl
ret
xchg
cli
xadd
xchg
sbb
leave
in
test
je
jbe
pop
ljmp
insl
pushl
rolb
sub
inc
aam
std
sarl
dec
stos
insb
pop
or
add
das
sbb
icebp
and
aaa
dec
je
sbb
or
and
add
imul
jne
adc
lea
test
mov
pop
dec
pop
xchg
les
or
pop
inc
add
ja
fistpl
dec
filds
lahf
and
push
jl
jmp
mov
loopne
rcrb
add
int
dec
mov
jmp
testb
das
inc
outsl
mov
sbbl
imul
jno
mov
lods
bound
xchg
inc
fnsave
ret
fs
and
rorl
and
add
cmpl
rcr
aaa
xor
sbb
data16
shrl
rol
jg
sbb
out
popf
je
sub
cmp
ss
cwtl
lock
add
mov
push
cmpl
ss
out
mov
and
int
stc
repnz
jmp
push
jecxz
lret
in
lds
icebp
xor
popl
xchg
out
lods
aas
fcmovnb
mov
adc
xor
mov
mov
leave
cmpsl
cltd
xchg
push
xchg
fsubs
cltd
mov
add
push
add
je
sarb
enter
mov
dec
sbb
add
loopne
adc
jbe
mov
push
sbb
xchg
mov
jle
xchg
scas
stos
lea
jmp
adc
adc
pushf
mov
mov
daa
jo
pusha
xchg
fs
cmp
aas
cmpsw
outsl
add
sbb
adc
leave
pushl
and
jmp
or
mov
bound
mov
mov
arpl
jne
std
fdiv
lock
dec
fs
jnp
loop
xchg
sub
add
jno
pop
mov
cmp
mov
lock
inc
pop
sub
pop
stos
ds
push
push
repz
fdivrs
mov
adc
xor
pop
cmp
insl
fwait
xor
push
or
fcomps
sub
jns
fsubrl
je
scas
sbb
testb
fidivrl
rorl
xlat
sbb
jae
jmp
inc
loopne
mov
rcrb
inc
jle
mov
fnsave
daa
cmp
cmpsl
inc
mov
push
push
sub
pop
mov
add
inc
xor
or
pop
adc
or
aaa
add
je
scas
adc
jl
add
imul
inc
jae
bnd
ret
ficompl
jl
shll
ljmp
out
daa
inc
sub
sbb
xchg
out
into
gs
daa
leave
xchg
test
mov
or
mov
push
add
jmp
jp
pop
mov
mull
or
jb
insl
sub
jge,pt
xor
pop
loope
mov
inc
mov
stos
xchg
mov
sbb
mov
pop
add
cltd
aaa
in
mov
jg
adc
nop
lock
cvtps2pi
in
sbb
in
xchg
imul
jae
stos
dec
mov
jle
dec
stos
or
push
and
mov
and
or
sub
hlt
sbbl
fcmove
push
mov
and
mov
divl
dec
popf
sub
xor
cmp
and
cmp
pusha
test
lods
jge
xchg
pop
mov
xor
enter
flds
arpl
sbb
mov
lret
mov
mov
fildll
dec
cmp
pop
imul
mov
xchg
insb
into
fcompl
cmp
insb
and
pop
idiv
dec
stos
xorb
insl
std
je
pop
mov
les
sti
push
jo
dec
xchg
jge
or
outsl
in
std
lea
jl
pusha
and
aas
dec
sbbl
int3
arpl
dec
pop
pop
fs
mov
push
push
fldt
push
lret
xchg
scas
dec
xchg
es
xchg
jno
loopne
iret
pop
dec
mov
xchg
fucomi
stc
mov
xchg
push
dec
mov
xor
addl
add
pop
add
or
push
sti
ljmp
nop
insb
pusha
jp
sub
mov
push
imul
add
imul
adc
inc
fimuls
fmul
fcmovne
mov
sub
fcomps
aam
and
inc
out
add
xor
es
fimull
jp
add
fistps
jp
dec
xor
out
scas
pusha
out
sub
lcall
cmpsb
mov
test
sub
cmp
out
in
sbb
cmp
push
inc
push
mov
popa
pop
insl
fistl
sti
sbb
inc
adc
arpl
aas
jb
pop
fnstcw
add
xchg
push
jbe
cs
cmp
adc
pushf
mov
pop
push
mov
enter
adc
inc
fscale
push
vlddqu
xor
lea
in
es
add
mov
ficoml
rolb
aaa
lcall
pop
test
imul
pop
adc
pushf
dec
dec
mov
addr16
cmp
testb
mov
lds
xorb
in
push
sbb
nop
stc
and
iret
les
jae
mov
mov
mov
ror
shl
dec
lods
xor
cwtl
imul
stc
ja
cmp
shlb
mov
mov
inc
cli
xchg
repz
std
dec
sbb
ljmp
popf
pusha
out
mov
mov
mov
jmp
jae
xchg
cmc
xor
sbb
rorl
or
shrl
mov
test
or
mov
and
fsubs
mov
mov
cs
pop
cmpsb
adc
xchg
data16
xor
fs
push
jb
and
fsubs
lret
movsl
push
outsl
insb
test
stos
mov
add
lea
scas
xor
cmp
mov
cmpsb
cmp
out
dec
adc
jl
test
sub
int3
push
ret
das
jp
js
xchg
mov
shlb
imul
imul
and
push
push
mov
cli
mov
in
pop
sbb
cwtl
das
inc
imull
mov
mov
jmp
adc
loop
dec
pop
xor
sbb
loopne
pop
cmp
cld
mov
cwtl
mov
cmp
cmp
and
pop
loopne
push
add
pop
push
pop
jno
movsl
adc
or
mov
dec
push
leave
add
pop
xor
jle
push
in
mov
push
add
aaa
cmp
adc
sbb
mov
or
cmpsl
pop
adc
repnz
or
arpl
add
add
aaa
pop
lock
push
popa
and
or
mov
adc
mov
fadds
out
push
inc
lds
jecxz
stos
mov
das
div
mull
popl
xchg
inc
mov
push
fdivp
loop
cmc
pop
in
cmc
sbb
cmp
ja
popa
xlat
lods
add
test
daa
pop
xchg
mov
adcl
fsubr
imul
imul
mov
cld
lods
bound
push
jns
shrl
push
jno
mov
adc
inc
sbb
inc
add
xor
pop
pop
outsl
mov
ss
fisubrs
add
mov
movsb
push
inc
xchg
pop
push
orb
and
mov
cs
hlt
out
ret
hlt
sti
pop
lcall
jp
rol
fidivrl
dec
lret
xchg
out
jecxz
aam
in
pop
lock
xor
repz
clc
lret
imul
loopne
repz
scas
ljmp
in
lods
cwtl
ret
jle
mov
pop
push
sub
jnp
push
mov
mov
dec
stos
jecxz
jl
dec
push
and
arpl
and
fldl
pop
out
cmc
outsl
jae
or
popa
popf
leave
imul
adc
je
insb
adc
jnp
inc
and
sti
xor
cld
pop
mov
inc
jl
js
jge
add
pop
cwtl
ret
push
push
pusha
ljmp
inc
or
test
mov
cmpsl
adc
jae
cmp
push
jl
pop
movsl
add
sbb
lcall
ds
dec
jae
jmp
mov
mov
jb
fucomip
mov
std
lods
mov
lahf
push
shl
lds
test
aas
mov
shrl
mov
lret
sti
and
jae
add
fs
lcall
enter
mov
pop
adc
pop
jecxz
push
mov
aad
and
cmp
lret
xchg
or
mov
mov
iret
inc
pop
adc
movsl
xchg
mov
jl
mov
mov
scas
cwtl
nop
pop
clc
push
push
cmp
lds
mov
addr16
ret
aas
popa
mov
adc
pop
mull
rcr
dec
data16
rorl
ds
cmpsb
rcrl
out
ror
mov
stc
dec
cmp
out
adc
dec
insb
mov
push
ret
xor
les
dec
push
pop
adc
dec
mov
mov
or
sub
xchg
xchg
cmp
mov
pop
sbb
sub
data16
insb
cmp
cmp
aaa
and
lahf
in
xor
xor
repz
push
pusha
js
adc
or
inc
jecxz
mov
mov
mov
push
xchg
mov
mov
popf
fwait
rorb
aam
sbb
add
in
jg
pop
dec
push
mov
lods
dec
lahf
cmp
pop
mov
mov
dec
mull
jo
mov
fisttpl
stos
adc
and
cmpsb
out
cmpsl
ss
xchg
mov
push
pop
mov
xlat
insl
or
cmp
sub
pop
arpl
mov
inc
mov
insl
sub
es
cmp
cs
xor
fdivr
cmp
jae,pt
dec
add
clc
jle
sub
lahf
push
cmpsl
cmp
cmpsl
lret
cwtl
aam
mov
outsb
adc
jle
adc
pop
daa
lods
aad
aaa
sub
add
xor
outsb
lahf
call
loop
sub
and
into
xchg
rcll
in
inc
add
out
jle
push
sbb
pop
inc
add
dec
sets
or
dec
into
pop
andl
or
pop
mov
cmpsb
adc
push
fstpt
mov
mov
popl
out
jge
leave
or
jecxz
cli
in
and
icebp
mov
cmp
in
scas
mov
fidivl
loopne
sbb
mov
sub
std
leave
mov
cmp
loope
mov
adc
mov
pop
js
push
or
xchg
mov
shll
mov
xlat
mov
cmp
ss
mov
inc
jbe
mov
fstpl
popf
push
sbb
pop
imul
outsl
mov
lret
push
adc
test
xchg
sub
add
int3
mov
outsl
mov
movsl
push
je
lret
adcb
mov
jae
sub
jle
dec
repnz
and
sbb
inc
mov
add
and
mov
stos
inc
mov
jns
mov
pop
loope
jmp
add
push
dec
mov
loope,pn
mov
push
daa
lock
call
fs
jo
movb
xor
es
mov
inc
nop
ljmp
repnz
adc
std
cwtl
adc
pop
mov
movsb
jp
sub
ret
inc
xor
stc
lret
push
pop
inc
icebp
inc
push
jmp
xchg
jnp
push
xor
mov
cmp
mov
aam
mov
aaa
mov
mov
mov
mov
out
jno
loop
cmpl
jmp
adc
dec
les
mov
stos
shrl
push
and
inc
cmpsb
das
lret
mov
aam
mov
mov
mov
repz
jcxz
pop
pop
int
mov
jnp
inc
pop
mov
jge
inc
ds
jne
push
nop
int
jbe
lods
ss
scas
cs
hlt
dec
and
in
lahf
imul
mov
call
mov
xor
inc
add
mov
inc
jg
icebp
cs
stos
loopne
imul
cmpl
in
test
cltd
ja
cmc
test
xchg
fisubs
rolb
out
push
mov
in
scas
sub
test
push
mov
sarb
push
ret
mov
xor
mov
push
incb
and
mov
clc
rorl
vprotq
les
mov
lds
xor
dec
addr16
sbb
jl
out
fsubrl
loop
sub
mov
scas
adc
add
pop
xor
nop
mov
jno
mov
popa
cmc
ja
lea
sub
add
out
or
mov
adc
adc
mov
adc
cmp
ficomps
ds
jno
out
pop
in
pop
xor
lods
sub
push
xor
cld
lahf
ljmp
repnz
cmp
and
ljmp
xor
scas
daa
push
enter
mov
mov
pop
insb
cltd
stos
jge
add
xor
daa
pop
rorl
pusha
ss
and
outsb
sbb
nop
mov
push
push
mov
dec
add
lods
cs
fldenv
jp
jmp
mov
mov
push
imul
xchg
adc
mov
pop
cmpsb
jno
scas
mov
test
sbb
xchg
movsl
negb
push
mov
dec
ljmp
mov
icebp
les
or
mov
and
push
ds
daa
and
mov
add
xchg
mov
xorl
sarl
es
inc
in
out
je
or
adc
jecxz
xchg
cmp
clc
cmpsb
jno
imul
int3
out
sub
pop
cli
nop
repnz
in
out
pusha
enter
daa
or
cli
pop
jns
push
mov
in
fiadds
rclb
mov
and
inc
ffreep
test
mov
lret
dec
or
mov
sub
mov
aam
pusha
call
sarl
imul
push
aaa
inc
fadd
popa
arpl
pop
mov
inc
adc
cwtl
das
mov
mov
enter
xchg
jecxz
outsl
das
adc
xor
jne
ljmp
out
mov
lds
mov
push
jbe
push
out
jle
jecxz
adc
in
inc
pop
mov
in
or
insl
xor
and
push
clc
sbb
jg
add
sub
cmp
dec
addr16
movsb
sar
pop
aas
addr16
adc
push
aas
inc
gs
fsub
pop
inc
mov
dec
stos
mov
movsl
hlt
xor
inc
dec
fldcw
scas
push
push
add
movsbl
enter
nopl
xchg
repnz
cmp
aad
pop
clc
leave
sub
dec
xchg
fdivrs
arpl
orb
mov
xchg
fsubr
mov
and
fs
sub
ror
roll
xor
imul
push
or
push
dec
adc
adc
jmp
sahf
lret
fs
mov
std
test
mov
push
xor
lcall
pop
inc
mov
pop
loopne
cmp
clc
pop
mov
js
cli
iret
std
outsl
lock
ret
mov
push
mov
cmp
in
sti
xchg
ds
in
xchg
popf
imul
xor
cmp
dec
stc
mov
mov
xchg
pop
punpcklwd
sub
fdivrl
js
jae
ss
jns
push
xrelease
xor
xchg
or
mov
loopne
xchg
mov
aad
movsl
scas
imul
in
mov
das
js
flds
leave
jns
leave
pop
dec
sti
test
loopne
cli
or
mov
pop
xchg
cmpsb
orl
andl
mov
xchg
jp
std
xor
sbb
test
imul
or
pop
fcomip
hlt
cmp
and
mov
pop
pop
imul
cltd
mov
outsb
adc
call
mov
es
test
xchg
or
cmpsb
push
filds
jl
and
mov
jle
mov
test
push
or
mov
xchg
stos
cli
add
aas
call
idivb
push
es
cmpl
dec
clc
or
hlt
xchg
ds
add
decb
cmp
mov
mov
pusha
mov
shlb
lret
arpl
insl
in
inc
push
test
xor
gs
cltd
rorb
loopne
sub
mov
inc
dec
repnz
sbb
lock
sub
dec
xor
push
xor
xor
lea
pop
decb
inc
lcall
popf
pop
ret
or
inc
iret
pop
jae
add
or
push
xor
ljmp
ljmp
mov
nop
xabort
dec
and
cltd
jecxz
pop
add
mov
pop
test
lea
lahf
hlt
xchg
arpl
jecxz
sub
lea
push
cwtl
in
cs
sahf
cwtl
sub
jmp
daa
jno
dec
popf
jle
les
xchg
mov
lods
aas
xlat
pop
es
orps
call
ja
mov
mov
rcrb
pop
or
mov
xchg
jb
and
pop
dec
inc
ficoml
movsl
mov
scas
cmp
pusha
mov
lea
xchg
in
add
mov
sub
xor
fistl
mov
xchg
xchg
sub
scas
icebp
ds
shll
cmpsb
scas
ret
mov
push
ja
add
cs
pop
std
loope
cmp
cmp
mov
or
arpl
rolb
shlb
outsl
cmp
mov
xor
pop
jno
pop
add
pop
sub
outsl
xorb
aad
jmp
push
and
nop
ret
out
cmp
test
cmc
fistps
sbb
mul
dec
std
arpl
rcrl
push
push
in
test
push
ret
sbbb
negl
mov
div
shlb
movl
es
adc
push
hlt
xchg
sbb
jnp
mov
add
adc
jmp
or
cmp
and
cmc
cwtl
push
into
lahf
das
and
lods
ret
fcomi
adc
addr16
push
xchg
enter
push
jnp
jbe
nop
or
scas
or
xor
addr16
out
sub
jae
inc
or
mov
xor
or
stos
xor
cmc
enter
leave
outsl
xor
adc
out
fsubl
inc
mov
mov
ja
and
repz
mov
push
sbb
xor
andl
dec
pop
push
pop
cmp
xor
mov
scas
lahf
mov
mov
lock
ret
divl
ror
mov
pop
pop
push
jge
leave
ret
dec
in
lret
lret
jne
and
leave
jnp
inc
into
sbb
jno
idivl
push
nop
and
test
test
sbb
mov
cmp
jae
ret
mov
lcall
pop
loopne
pop
fbld
adc
ret
xor
je
push
fimull
in
cmpsl
cmp
mov
xchg
push
test
jle
mov
lahf
jle
mov
gs
ds
xchg
jle
test
mov
mov
addr16
popf
push
fsubrl
mov
daa
les
fcomip
cmc
pcmpgtb
das
loop
push
insb
cld
cld
sub
mov
sbb
subb
push
cld
pop
or
mov
mov
sub
inc
shrl
stc
push
inc
jg
dec
dec
das
aad
fs
cwtl
shll
and
sbb
xchg
xlat
cmpsb
icebp
sub
sub
jecxz
iret
ficoms
mov
stos
add
stc
insb
sbb
inc
pop
loopne
ret
push
pushl
into
out
mov
add
xor
push
mov
jne
mov
push
scas
lds
mov
negl
mull
dec
std
add
cltd
mov
inc
mov
lret
hlt
push
inc
fldt
sub
mov
mov
and
mov
cmp
pop
test
inc
inc
adc
mov
aam
out
sub
mov
sbb
xchg
push
jno
cmpsl
insl
or
or
vpunpckhwd
sub
dec
ljmp
add
jae
leave
jecxz
out
mov
add
cmp
fldl
push
pop
js
mov
stos
mov
pushf
jl
repz
ret
mov
mov
jge
loop
dec
fucomip
repnz
dec
pop
data16
daa
mov
lahf
cmpsl
dec
mov
repz
adc
push
sbb
ds
pop
jne
push
jmp
mov
xlat
jno
minps
lock
dec
sub
dec
shlb
dec
cld
enter
push
pop
jno
and
iret
in
or
xor
out
xor
lret
xchg
sub
dec
dec
lahf
xchg
out
fistps
outsb
pop
xor
jnp
mov
adc
dec
push
arpl
sub
subb
roll
mov
icebp
pop
jle
sbb
mov
shll
or
lret
mov
push
mov
xor
xor
xchg
and
dec
daa
or
outsl
enter
and
mov
mov
cld
addr16
mov
mov
mov
xchg
es
imul
ja
dec
jg
imul
xchg
scas
hlt
push
inc
xchg
inc
ret
add
aad
imul
fists
and
mov
inc
nop
push
repz
xor
inc
xor
jb
movsb
test
jg
jp
das
lcall
lods
pop
in
mov
xor
lcall
inc
and
push
sbb
xor
movsb
xlat
jne
mov
pop
xor
test
push
rcrb
aas
iret
mov
in
mov
pop
dec
sahf
mov
mov
add
xchg
cmp
popl
adc
das
xor
lea
outsl
xor
and
pop
push
inc
push
cmp
aaa
mov
pop
jp
loopne
jno
mov
lea
ja
fadds
jns
xchg
push
dec
or
aad
inc
test
mov
sarb
mov
repnz
adc
pop
lods
sbb
jecxz
cmp
lods
add
enter
adc
ret
cmc
sub
or
adc
inc
das
stc
notb
dec
enter
cmpsb
fstpl
leave
test
jbe
add
outsl
cmpsb
jb
jl
aas
arpl
and
mov
repnz
pop
pop
cwtl
dec
fdivr
mov
sub
or
or
cmp
xor
ror
rclb
sbb
inc
xchg
cmpsb
fcoms
dec
int
or
lds
cmp
jmp
or
xchg
inc
pushf
fiaddl
insb
sbb
andl
out
mov
push
dec
push
cmp
je
aam
sbb
xor
jne
dec
cmpsb
daa
mov
and
push
out
inc
les
bound
rorl
in
mov
call
and
push
push
rcll
push
cltd
and
push
or
mov
cmp
jmp
add
push
jle
pusha
pop
insb
or
icebp
jne
dec
inc
dec
mov
jno
dec
shl
mov
jo
adc
sahf
icebp
sbb
push
fsubrs
adc
jb
insl
mulb
inc
adc
cmpsl
xor
mov
xlat
cmc
mov
inc
jle
or
adc
push
jne
xchg
push
cmp
insb
out
pop
aas
fisttpll
push
xor
pusha
lcall
je
std
wrpkru
mov
jo
mov
mov
adc
movsl
fwait
lock
inc
gs
mov
ljmp
cmpsl
push
cmp
pop
cmp
push
cmp
cmp
das
aad
pop
xor
rcrl
or
ret
fisubrl
into
mov
movsb
call
fnstsw
inc
pop
mov
addl
jge
das
push
out
adc
xlat
shlb
repnz
adc
mov
adc
sti
adc
adc
lcall
jle
pop
cld
shrl
adc
pop
lahf
mov
mov
fisubl
push
lea
sbb
adc
jge
dec
aaa
popa
jge
notl
and
mov
lcall
sub
xchg
iret
mov
dec
push
lcall
das
scas
dec
mov
add
clc
dec
add
ljmp
andl
add
int
mov
shrb
add
idivl
sbb
xchg
icebp
adc
mov
fidivrs
xor
lock
arpl
jp
fs
adc
add
sahf
sub
jg
bound
mov
cmpb
push
adc
cmc
cmp
bound
test
adc
mov
adc
lock
out
mov
fcompl
sbb
lcall
mov
das
push
xchg
xor
jp
adcb
sbb
andl
add
pop
mov
int3
mov
sbb
jae
mov
cltd
pushf
hlt
sub
mov
out
adc
fiaddl
and
mov
into
cmp
std
lods
mov
mov
xor
pop
add
fadd
fidivl
mov
push
cmpsl
jecxz
cmp
mov
lret
pop
push
push
add
xor
daa
test
inc
xchg
sub
out
in
mov
sub
in
mov
adcl
pop
stos
pmaddwd
jle
les
aaa
xor
jmp
ja
insb
add
cmpsb
or
mov
subl
subb
jg
xor
test
inc
shl
mov
sub
test
call
pop
cmp
add
lret
pushf
in
mov
inc
dec
mov
dec
lcall
pop
xchg
and
mov
jle
xor
mov
add
test
mov
repnz
cli
and
xor
addr16
cmpl
jnp
movsb
fs
push
xchg
sbb
jle
ss
pop
jo
in
jp
xchg
jbe
aam
sbb
pushf
dec
ss
adc
jl
sbb
sub
stos
arpl
mov
push
pop
or
dec
les
pop
fucom
sub
mov
dec
jnp
mov
cmp
mov
fwait
inc
cmp
nop
cmpsl
or
rcll
inc
xor
and
pop
and
push
lods
mov
or
cmp
cld
pushf
inc
sti
int
jge
push
adc
xchg
in
notl
jp
sub
xchg
jbe
push
ja
test
pop
test
pop
shlb
inc
mov
cmc
push
outsb
mov
sub
pop
mov
jnp
cmp
cli
out
test
cwtl
sbbb
push
dec
testb
aaa
pop
dec
lret
sbb
inc
iret
cmp
cli
sbb
and
std
iret
mov
push
cltd
pop
xchg
sub
test
cmp
pop
out
xchg
addr16
mov
mov
pop
fldt
mov
add
test
ficompl
pop
nop
cs
push
add
leave
es
mov
sbb
push
add
add
inc
enter
cmpsl
cmp
sbb
xchg
out
mov
dec
mov
clc
mov
add
push
into
popa
mov
sub
cwtl
and
or
shr
mov
mov
sbb
insb
cmpsl
add
testb
rcll
ret
jns
cltd
test
popf
xchg
inc
ja
or
sub
sbb
mov
orl
mov
mov
bound
xor
cwtl
and
pop
cmp
inc
gs
ret
adc
stc
cmc
rorb
pop
xlat
enter
jmp
xor
data16
jne
in
push
push
sub
add
inc
leave
or
lock
sub
mov
out
int
fiaddl
stos
push
xchg
push
test
jbe
ficompl
cmp
adc
lods
repz
je
cltd
clc
cmpsb
and
xchg
cmp
jl
add
lcall
xchg
sub
rcl
sub
mov
mov
or
mov
mov
push
repz
fdivs
lcall
fcoms
daa
outsl
fdivrs
jl
jo
inc
sub
mov
or
es
popa
js
inc
jp
mov
lret
fldcw
pop
push
cmpsl
push
xchg
test
xchg
iret
jge
jg
mov
add
xchg
cs
sub
lds
mov
cltd
std
and
mov
adc
adc
orb
xchg
lock
out
push
daa
sbb
sbb
orb
add
mov
hlt
xor
sbb
xchg
jae
dec
jmp
addl
pop
ret
cli
mov
stc
fdivl
cwtl
cs
cmp
nop
xchg
pop
jmp
dec
mov
je
adc
sub
inc
popa
jo
and
test
cmpsl
jnp
je
cli
clc
jb
cmp
or
sub
pushf
outsl
add
out
decl
mov
xchg
or
lock
inc
icebp
mov
and
mov
sbb
lock
in
subb
mov
xchg
mov
inc
icebp
cmp
mov
adc
mov
mov
pusha
or
stos
dec
push
gs
push
hlt
dec
pop
sbb
mov
mov
xor
cmp
mov
outsb
cli
arpl
out
pop
push
enter
sbb
sbb
adc
test
mov
jp
fcmovnb
jge
push
enter
iret
lahf
movb
cli
out
out
popf
adc
mov
fstpt
xchg
cmp
cmpsb
xchg
push
mov
sti
rclb
scas
pop
jo
mov
xchg
loop
rcr
repnz
mov
adc
inc
xchg
cmp
mov
ror
mov
jge
lret
cwtl
inc
mov
pop
fidivs
and
out
lret
jns
push
dec
push
pop
btr
pusha
cmpsl
stc
rcr
xchg
push
movsb
out
inc
in
fidivs
mov
push
sbb
ret
mov
fistps
test
lret
mov
icebp
movsb
jno
cwtl
nop
push
sub
adc
jb
jecxz
mov
mov
or
or
pop
jmp
and
and
js
stos
sbb
inc
filds
out
xor
imul
popf
add
imul
aad
fldl
test
fcomip
pop
mov
xor
mov
mov
in
sbb
mov
mov
je
cwtl
push
push
xchg
ja
inc
ret
call
mov
mov
push
sub
fnstsw
outsl
int
sub
pop
je
dec
pop
xlat
push
pop
jne
test
movsb
pop
jne
or
test
mov
data16
mov
aad
test
xchg
cli
sbb
shrb
sbb
dec
sar
fisubrl
xchg
adc
ljmp
or
jb
sbb
sahf
mov
inc
pop
int
stos
mov
ficoms
in
repz
andb
pop
sbb
fwait
imul
fmuls
jne
cwtl
xlat
cld
lcall
and
or
lcall
gs
inc
pop
cmc
lea
test
sbb
outsl
push
imul
pop
jae
ret
jnp
and
mov
daa
lret
js
jbe
dec
imul
lods
mov
stc
fldenv
lock
jmp
cmp
sub
pushl
mov
xchg
test
xchg
or
jbe
fnstenv
dec
xor
decb
ds
fisttps
mov
movsb
scas
push
pop
mov
pop
or
ret
mov
addr16
sbb
dec
shr
call
push
jecxz
repnz
push
inc
mov
sub
cltd
fwait
sbbb
push
data16
ss
jle
or
adc
mov
fistpll
loopne
repnz
clc
and
cltd
lds
enter
inc
fsubrs
adc
add
mov
js
mov
pop
sub
add
ds
in
ljmp
xor
loope
mov
lahf
into
ret
pop
jle
mov
aaa
mov
les
xor
push
insl
cmp
mov
sbb
in
les
jle
jns
lock
mov
mov
push
xchg
ds
dec
adc
repz
sbbb
adc
push
fs
xor
xchg
dec
out
mov
pop
dec
push
int3
cltd
add
cld
lret
xchg
out
out
push
and
adc
xor
and
ficompl
movsb
mov
cmp
xor
xorl
adc
lock
fwait
int3
sahf
popf
icebp
aam
cmp
test
fnstenv
xchg
xchg
push
pop
pushf
push
loopne
jo
jne
dec
shlb
xor
nop
mov
xor
ljmp
lret
jbe
or
cmp
test
stos
inc
repz
cmp
cwtl
or
push
lods
mov
fisubs
xor
icebp
outsl
lea
stc
aam
fwait
xchg
in
xor
pop
xchg
adc
push
mov
push
sub
mov
cmc
mov
adc
sahf
xchg
push
sub
and
adc
push
and
jp
xchg
pop
sub
jne
je
jg
int3
sub
xor
ret
mov
xor
out
enter
mov
and
push
ja
test
push
sub
insb
je
test
pop
sahf
push
sbb
arpl
fwait
push
sbbb
sarb
int3
cmpb
xor
jmp
xchg
sti
outsb
or
nop
mov
sub
cmc
cmpsl
outsl
adc
dec
insl
fidivrs
inc
testl
ds
ror
shll
roll
fcmovne
cmp
enter
xlat
jge
cltd
mov
fstpt
push
inc
scas
and
jl
cmp
lock
lret
fnsave
push
movsb
icebp
mov
repnz
pusha
lods
aad
jnp
shlb
ljmp
push
nop
cmp
cmpsl
pop
rol
rcrl
ljmp
pop
sbb
inc
inc
jae
adc
push
and
adc
xor
fs
adc
pusha
mov
push
jne
out
mov
ds
iret
lock
jl
lret
popf
mov
repz
rorl
lahf
cltd
nop
sub
lods
xor
adc
inc
enter
mov
sahf
dec
and
or
xchg
je
add
push
cmp
bound
daa
add
push
mov
cmpsb
cmp
ds
call
mov
adc
pop
repz
add
jae
lds
mov
movsb
cmc
cs
pop
test
cmp
jb
xor
subl
cwtl
iret
outsl
mov
or
xchg
jbe
and
imul
inc
push
mov
out
pushf
faddl
and
fxch
or
xchg
jge
jmp
jecxz
xchg
add
inc
dec
pop
test
mov
out
push
xchg
adc
jge
cltd
sub
inc
cmp
xchg
outsb
pop
xchg
mov
insb
mov
subl
and
ret
outsl
out
fcomp
adc
lahf
cmp
cwtl
mov
and
into
cltd
xchg
inc
lds
je
negb
pop
stos
fiaddl
pop
xor
jle
in
xlat
mov
mov
testl
fadds
pop
mov
fucomi
ret
lods
je
les
cmpb
or
cmp
outsl
jg
in
jecxz
es
leave
or
jmp
push
and
inc
cmp
test
pop
inc
add
ja
bound
xchg
pop
mov
div
je
daa
cwtl
cmp
stc
in
shr
mov
sbbl
lret
mov
mov
fnstcw
addr16
stos
in
push
push
lahf
adc
ret
into
xlat
mov
leave
cs
mov
or
push
repnz
mov
jnp
int
push
sbbl
mov
fisubs
out
mov
xor
dec
mov
lods
cltd
xor
push
clc
lea
cwtl
pop
test
int
mov
enter
mov
push
and
fdivl
push
jbe
out
insb
and
arpl
stc
outsb
insb
sbb
adc
or
and
fs
fcmove
mov
jle
xor
aas
hlt
cld
push
add
mov
iret
add
movsb
movsl
mov
test
lock
cmp
hlt
push
pop
out
int
std
scas
adc
mov
cmp
fs
test
and
mov
mov
adc
pop
cld
lea
jge
aad
fildll
pop
dec
jp
sub
and
sbb
dec
stos
arpl
in
in
call
sti
push
push
fnstenv
je
fldenv
mov
cltd
pop
insl
pop
pop
pop
int
fdivrl
xorl
sbb
xchg
mov
xor
mov
sub
cmp
adc
push
subb
jmp
mov
dec
gs
jnp
fsubrp
jmp
test
fwait
dec
jge
jecxz
in
addr16
cmp
add
sbb
pop
addr16
sub
sarb
iret
mov
mov
mov
sbb
mov
addr16
loopne
addr16
or
add
cmp
cltd
fcmovnbe
ja
fidivrl
adc
cmpsb
fimull
imul
ss
cmpsb
lcall
mov
push
xchg
inc
cs
cmp
inc
or
mov
mov
stc
imul
xchg
fisubrs
sub
fwait
xchg
sbb
push
ds
leave
mov
cmp
clc
repz
mov
sub
clc
xor
mov
mov
push
movsl
or
xchg
test
roll
popa
mov
repz
lahf
jmp
rcrl
inc
movsb
jns
or
xor
lea
data16
mov
imul
mov
cmpsl
shl
jns
add
sub
adc
ficoms
pop
push
add
adc
popf
in
mov
xchg
les
ret
cmp
inc
dec
loope
inc
aam
mov
sub
sub
add
fs
inc
push
push
mov
loop
das
mov
repz
cmp
sti
andl
popf
out
xor
ljmp
add
adc
jge
ffree
push
cmpsl
add
shr
popa
push
jmp
push
sbb
ret
fcomps
enter
loop
les
push
inc
repz
xchg
loopne
jnp
mov
ds
dec
sbb
call
stc
mov
lahf
mov
inc
xchg
cmpsb
das
out
mov
pop
cmp
insl
adc
cmp
xor
cmp
lods
cli
aaa
ds
xchg
repz
mov
lock
loop
inc
stc
adc
adcb
add
push
cmp
cmpsb
jge
lods
stos
mov
xchg
lds
inc
test
lcall
fs
add
pop
repnz
or
subb
push
lcall
inc
push
xchg
cwtl
sub
pop
lret
popa
pop
ds
xor
add
stos
das
int
insb
inc
mov
pusha
dec
mov
cmp
stos
in
add
mov
sub
dec
cwtl
inc
pop
inc
mov
mov
sbb
push
push
jns,pt
add
and
adc
aas
sub
jmp
mov
mov
mov
arpl
inc
sbb
fisttpl
test
pop
lods
dec
dec
inc
scas
sub
inc
inc
cmp
add
shlb
dec
fisttpll
mov
stos
out
in
jg
fwait
pop
fstp
pushf
shrl
sbb
xchg
lods
adc
mov
inc
mov
orb
jae
movsl
xor
xchg
cmp
dec
sbb
mov
mov
jae
mov
push
aad
out
mov
push
mov
es
dec
cli
aas
sbb
push
shr
das
add
rcll
adc
cmp
fisubrl
inc
stos
mov
out
sub
in
push
adc
outsl
js
out
or
sub
mov
push
jno
aaa
jns
dec
mov
in
enter
adc
cmpsb
adc
xchg
ss
push
insl
adc
cmp
cli
cmpsb
cwtl
adc
loop
mov
dec
js
nop
pop
and
jnp
insl
xchg
jecxz
in
push
imul
movsb
stos
sub
sub
mov
loopne
test
out
idivb
pushf
inc
push
fildl
testl
cmpsl
or
inc
lds
out
icebp
sbb
add
inc
rorl
lahf
xlat
lock
std
push
ja
xlat
push
adc
jbe
daa
add
jg
pop
adcb
jns
jb
aaa
jecxz
fwait
xchg
out
ja
mov
xchg
pop
negb
mov
mov
mov
gs
cld
xor
into
in
popa
test
jmp
fisttpl
and
lret
mov
pop
xchg
mov
add
dec
cmp
outsl
int
in
mov
push
inc
mov
fwait
xchg
xor
out
loop
lods
xor
in
adc
adc
inc
xlat
ror
inc
xor
lds
les
addr16
loope
ljmp
push
movsl
add
xchg
sahf
aad
cwtl
mov
jg
fld
ljmp
scas
mov
sbb
push
jp
mov
cltd
mov
mov
xchg
fcompl
sub
mov
and
fdivrl
sub
xchg
mov
cmc
scas
mov
stos
mov
xor
push
insb
lds
pop
lock
cmp
sbb
or
jns
inc
mov
xchg
enter
add
mov
cld
movsl
sbbb
dec
or
inc
adc
push
outsb
xor
push
int3
jne
push
push
add
cmp
xchg
sbb
fists
inc
xor
popa
xchg
xor
sub
dec
scas
xchg
ficomps
lahf
in
dec
es
ljmp
sub
mov
push
adc
testl
je
fwait
jg
push
fdivl
mov
mov
inc
aas
xlat
ds
scas
sbb
mov
and
out
lds
andb
addb
dec
test
hlt
xchg
dec
in
mov
test
mov
mov
in
rorb
jp
call
xchg
push
in
hlt
xor
nopl
fldt
sbb
imul
mov
xlat
xchg
pop
mov
mov
clc
cltd
push
xchg
pusha
dec
sbb
mov
lods
mov
fisttpl
into
dec
pop
lods
fstpl
movsb
int3
fs
cltd
data16
dec
int3
mov
or
xchg
sub
sub
sarl
cmp
nop
jl
ret
aas
sub
popf
fcomps
mov
jle
mov
in
adc
ss
pop
ja
pop
add
subb
lahf
std
sub
inc
xor
ds
bound
add
stos
or
popf
das
mov
add
adc
mov
adc
test
push
fs
sbb
sbb
or
jge
xorl
dec
cmp
pop
sti
inc
add
nop
mov
push
int
nopl
fisubrs
fsubr
imul
lret
js
cltd
lea
pop
xchg
mov
jnp,pt
inc
xor
and
mov
push
cmpsb
jp
sub
scas
in
mov
sub
lahf
imul
xor
inc
inc
pop
inc
lea
jl
test
inc
cli
jbe
mov
mov
sbb
jb
push
aam
jecxz
aaa
cmc
add
fsubr
subl
ret
xor
mov
pop
sub
push
mov
jle
imul
mov
jge
aam
leave
lods
sub
inc
jl
xor
out
fdivrl
cmp
je
out
mulb
sbb
inc
inc
inc
enter
mov
inc
inc
sbb
mov
call
iret
pop
sbb
sub
mov
lds
dec
cmc
push
push
movd
pop
sbb
ja
pop
jbe
push
mov
aam
js
cmp
cld
mov
mov
dec
cmp
adc
sbb
cmp
hlt
gs
adcb
xor
iret
outsl
sub
sbb
loopne
xchg
mov
mov
cmp
lret
mov
jo
inc
xchg
sub
pop
andb
and
pop
jle
rcll
sbb
lods
popa
and
pop
nop
loope
hlt
jecxz
sbb
dec
inc
gs
fdivrp
fstl
push
and
test
push
stos
xor
inc
sbb
inc
imul
sbb
xor
fwait
cld
mov
movsl
movsl
ja
and
mov
xchg
bswap
xor
test
mov
ja
jne
mov
fsubrp
rcl
leave
mov
sbb
insb
mov
out
adc
xor
bound
sbb
mov
sbb
push
ffreep
dec
iret
dec
xor
std
lods
dec
cmp
jbe
pusha
mov
insl
loopne
scas
cmp
xchg
mov
inc
pushf
fucomi
aad
and
or
repz
outsl
mov
in
dec
or
ud2
sub
push
cwtl
into
mov
sbb
ret
mov
push
test
loope
pushf
sub
call
test
mov
ds
and
lcall
cmp
xchg
or
xchg
insb
xorl
shl
mov
shrb
sbb
or
push
mov
add
xchg
pushf
cld
lods
popa
fstpl
or
dec
in
rclb
push
js
jmp
daa
cmp
out
xchg
mov
mov
mov
mov
xchg
pop
test
jnp
inc
imul
add
push
mov
sub
sub
scas
and
mov
xlat
push
xchg
pop
int3
sub
pop
pcmpgtw
test
dec
mov
xchg
icebp
in
dec
cmp
das
arpl
aas
fldcw
lock
or
dec
stos
ljmp
dec
xor
mov
lock
mov
xchg
add
jg
inc
mov
das
inc
daa
push
cmpsb
test
stc
xchg
aas
or
mov
adc
mov
push
pushf
cmpsl
adc
add
hlt
and
pusha
mov
or
jns
sbb
or
daa
outsl
sbb
adc
xchg
ficoms
cmpsb
push
fimuls
scas
pop
mov
mov
andb
dec
movsl
xor
clc
nop
mov
pop
repz
push
clc
dec
out
adc
cmp
lock
rclb
mov
inc
mov
xor
xchg
subb
jb
outsb
pop
lret
xchg
out
mov
push
ds
ja
xor
sti
jbe
imul
mull
sar
aaa
cmpsb
and
jg
rcll
pop
cld
jg
dec
add
or
or
out
leave
loopne
test
mov
cmp
loope
aas
or
push
mov
out
add
sbb
cltd
push
push
ljmp
jp
fisubrl
jne
push
repz
into
ja
mov
dec
lret
fwait
in
and
in
xor
push
push
jp
dec
pop
imul
popf
fs
in
push
cmc
into
movsb
xchg
push
cmc
repnz
out
mov
decb
lds
cmpsl
or
sbb
xor
or
xlat
xchg
xor
mov
mov
jbe
mov
jle
insl
pop
xor
shlb
movsb
out
jmp
daa
call
jmp
in
gs
and
mov
in
mov
adcb
push
pop
sbb
repnz
mov
ja
jecxz
or
ljmp
cltd
das
cmpb
test
call
inc
inc
popf
inc
cmpsb
mov
cli
scas
lea
fs
std
xchg
mov
cld
sbb
cmp
out
in
das
cmp
ficompl
jne
arpl
adc
insl
je
xor
in
aad
repnz
mov
shr
int
inc
inc
sti
fwait
xor
sbb
or
sbb
xchg
add
add
iret
mov
mov
loopne
mov
std
mov
pusha
fimull
iret
lret
aas
scas
add
jl
push
loop
fwait
loop
pop
ffree
mov
mov
inc
fwait
clc
lret
xchg
in
daa
adc
shll
imul
xor
sbb
pop
xor
dec
insb
add
sbb
sbb
push
push
inc
test
jno
loop
out
shlb
push
test
push
push
mov
adc
addb
xchg
inc
rcrb
pusha
mov
nop
pop
pushf
orl
inc
lock
jl
push
and
stos
fcoml
data16
pop
sahf
mov
xor
mov
push
sarl
dec
jo
push
inc
push
xlat
nop
in
push
and
add
xchg
xor
test
xor
xorl
shr
push
push
in
jo
add
cmpsl
pop
sub
in
clc
adc
pop
or
push
xorl
jecxz
jle
stos
push
aas
or
jmp
int3
pop
or
icebp
iret
push
and
or
cs
std
fwait
sub
push
fsubrs
inc
outsl
jbe
adcl
xchg
int3
push
ds
fdivrs
lret
cmp
not
test
scas
loop
es
sub
pusha
popa
xchg
and
popa
and
pop
stc
movsb
loope
insb
add
mov
es
push
in
add
es
lds
jp
iret
pusha
mov
fisubl
loope
ja
ret
jae
mov
mov
pop
adc
leave
dec
pop
in
mov
das
sub
sub
cmp
fs
add
lcall
mov
add
pop
ja
sub
inc
pop
repz
ds
cmp
sub
mov
add
xchg
sbbl
sbb
mov
and
aad
pop
cmpsb
or
pop
adc
jo
ds
pusha
jle
pop
stos
mov
xor
test
mulb
push
out
aam
filds
mov
cmp
jne
sub
lcall
cmp
lock
pop
loopne
je
loop
xor
and
sbb
xchg
push
mov
lods
dec
sub
iret
std
mov
popf
or
push
stc
outsl
js
imul
cmp
and
jg
adc
lahf
cmpsb
lock
mov
or
dec
add
test
push
dec
pop
call
cmp
int
je
cmp
insb
mov
stos
mov
dec
outsb
push
mov
shlb
or
out
xor
out
js
sub
fwait
and
fstpl
hlt
push
les
bound
popa
cmpsb
sbb
cmp
imulb
pop
adc
ljmp
idivb
fwait
sbb
out
addr16
mov
jnp
fwait
rcl
or
lds
ret
cmp
inc
dec
jbe
lcall
xlat
xor
xchg
clc
aad
inc
fdivs
and
or
clc
push
ret
fsubr
lods
lea
test
xor
xlat
aas
imul
outsb
cmp
jae
mov
push
mov
sahf
fldcw
add
out
push
mov
dec
jmp
cltd
and
push
and
mov
call
xor
in
sub
out
addr16
and
xchg
adc
jecxz
dec
aas
outsb
push
call
int
in
aas
sbbl
loopne
sub
jl
shl
push
jb
push
adc
enter
fwait
bound
xlat
push
icebp
cmc
das
inc
mov
mov
adc
in
sti
rcll
enter
sub
shlb
js
test
push
imul
mov
xor
call
or
cmp
cmp
cmp
dec
sbb
pop
jg
mov
xor
subl
les
leave
or
push
mov
or
scas
sbb
mov
insb
daa
mov
pop
xor
dec
dec
dec
nop
xorl
mov
sbb
jbe
xchg
outsl
leave
sub
je
mov
sub
jge
add
ds
mov
mov
add
cwtl
push
adc
aam
sti
cmp
xor
inc
outsl
popa
mov
push
adcb
jecxz
in
pusha
sub
mov
shrl
test
sahf
neg
lds
divb
inc
test
push
adc
adc
add
mov
in
lcall
jmp
dec
inc
into
leave
shlb
xchg
shll
ss
and
cmp
adc
loop
mov
jb
in
or
xor
xor
sub
xchg
insl
dec
mov
adc
push
pushf
xchg
fs
xor
pop
lret
cs
pop
sbb
pop
fidivl
inc
fiaddl
pop
mov
int
aas
pop
cli
push
xchg
loop
mov
push
mov
je
dec
pop
negl
adcl
lahf
or
sbb
adc
pop
xor
imul
out
mov
adc
sub
adc
adc
pop
sahf
in
inc
enter
jmp
repz
outsl
add
mov
mov
loope
xlat
jge
insl
jae
mov
and
or
xchg
xor
jno
sub
mov
mov
aas
rcrl
std
jmp
es
cmp
jb
nop
push
inc
fcomps
test
mov
repnz
mov
popa
hlt
pop
in
or
cmp
aaa
movsb
add
js
ljmp
fdivl
jp
pop
fnstenv
inc
std
leave
iret
insl
repz
insl
fildl
jo
jmp
jns
mov
test
lcall
mov
enter
mov
lock
fsubrs
mov
sbb
add
mov
lods
cmp
jb
mov
in
lcall
repnz
cwtl
out
test
mov
pusha
stos
popa
out
sbb
mov
mov
icebp
sbb
scas
sbb
les
cltd
int
and
insl
mov
jp
inc
popf
add
jns
sbb
fcoml
icebp
shl
loope
push
pop
cmpsl
sub
jg
ret
loop
xlat
aas
out
fsts
enter
jbe
addr16
xchg
mov
push
lahf
add
and
pushf
cmp
mov
in
fs
xchg
cli
dec
inc
push
lret
mov
mov
and
ret
bound
lods
sbbl
push
push
jle
ret
iret
inc
popa
inc
cmp
cmp
pop
fcoml
lcall
mov
mov
xor
pop
or
push
int
fsubrl
jl
shlb
in
pushf
je
jecxz
aad
mov
xchg
mov
jnp
and
adcb
mov
test
pop
subl
ljmp
add
xchg
int3
dec
push
inc
dec
insl
inc
xor
jge
and
sbb
iret
mov
int3
es
fucomi
push
loope
and
ret
cmp
mov
sbb
sbb
in
mov
rol
sbb
push
jb
cmp
ret
or
rcr
pushf
mov
xchg
or
mov
gs
mov
jns
loopne
mov
lods
push
dec
sbb
xlat
lock
dec
cmp
jle
or
les
push
push
jl
test
lret
popa
scas
addr16
outsb
mov
cs
adc
or
out
out
mov
mov
or
test
add
subb
mov
mov
ss
add
arpl
nop
sub
pop
xchg
in
imul
push
cli
adc
cmp
out
insb
in
xchg
pop
cli
sub
mov
lret
imul
push
call
lds
pop
jns
clts
rcrb
push
stos
cmp
add
movsb
mov
jb
loopne
mov
cmp
fstpt
fidivs
js
push
sbb
mov
mov
out
adc
dec
mov
xchg
push
loope
xor
jne
pop
xchg
push
push
inc
pusha
sarb
shlb
and
insb
loop
in
dec
sbb
je
cmp
xchg
dec
cwtl
cmp
or
xchg
in
mov
push
nop
xchg
popf
shlb
push
adc
pop
loope
or
imul
add
loop
push
stc
xor
inc
cmp
idivl
mov
mov
int3
je
rol
and
gs
lcall
sbbb
inc
idivl
and
push
je
iret
je
rcr
sub
gs
pop
stos
aad
lahf
adc
aas
cmp
ret
pop
mov
and
rorb
fwait
outsb
icebp
xchg
mov
pop
es
popf
cwtl
xchg
ss
and
jo
add
int3
outsb
sub
dec
nop
sbbb
jecxz
jno
bsr
and
or
mov
lret
add
cld
push
sarb
pop
pop
pop
nop
lret
xorl
stos
xchg
and
lds
inc
jge
or
cwtl
mov
cli
mov
add
std
jnp
jnp
cmp
inc
push
inc
and
inc
mov
or
sub
movsl
xlat
add
mov
sbb
xor
xor
push
ret
jmp
mov
sbb
aad
mov
cwtl
mov
jns
stos
fildl
rcrb
mov
sti
js
in
cmp
jo
push
sbbl
nop
cmpsb
gs
push
scas
in
jecxz
sahf
or
jmp
int3
jae
in
sub
mov
lcall
jg
adc
pop
cltd
cltd
ror
daa
mov
pop
and
imul
jge
inc
lcall
lock
jo
mov
sub
adc
pop
or
je
pop
dec
xchg
ja
jmp
jmp
push
ja
cli
hlt
mov
add
hlt
lods
insb
mov
mov
xor
inc
dec
iret
jg
iret
lahf
jne
ljmp
or
mov
lret
daa
aad
push
int
pop
pop
xchg
pop
adc
sub
pop
sar
pusha
lea
sub
ret
cmp
pop
in
cmp
test
repnz
cmp
push
jle
test
mov
pushl
mov
xchg
scas
int3
lods
in
xchg
dec
stos
and
jge
imul
and
out
popa
scas
sbb
out
inc
in
mov
sbb
mov
pusha
mov
inc
movsl
lea
sub
pop
lcall
leave
pop
subl
repz
and
nop
ds
in
dec
xchg
aaa
test
dec
push
and
cli
jno
lahf
xchg
mov
mov
mov
imul
push
repz
frstor
mov
xor
push
daa
mov
jp
rcrl
cmc
call
clc
dec
js
pop
adc
loopne
sti
sub
add
xchg
mov
mov
mov
jmp
lods
cltd
add
loopne
mov
addr16
lods
push
mov
mov
pop
pop
aad
frstor
hlt
pop
jnp
pop
and
xor
clc
xor
insb
das
mov
les
fcomps
mov
jno
fimuls
xchg
xor
dec
rcl
mov
push
sub
jbe
dec
xlat
xor
lock
je
sub
xlat
xchg
pop
sub
movsl
sub
dec
aas
stos
jmp
pushf
push
xchg
or
dec
mov
in
xchg
js
push
imul
aaa
cmp
dec
sub
mov
fcmove
fnsave
mov
dec
das
lds
xor
pop
aam
mov
sti
stos
mov
inc
inc
data16
iret
sub
fistl
int3
sub
cmc
and
mov
scas
xchg
in
das
in
xor
int3
adc
push
arpl
pop
addr16
mov
loope
cmp
adc
dec
ficompl
xchg
repz
cmp
mov
imul
push
adc
popa
mov
jecxz
stos
dec
out
cmp
movsb
lds
cmpsb
push
push
and
and
xor
lcall
sti
std
xchg
popf
dec
jp
fsts
mov
add
hlt
xchg
xor
jne
aas
out
std
clc
jp
icebp
sbb
loope
add
mov
subl
scas
imul
and
mov
lea
int3
pop
mov
jmp
push
loopne
add
test
add
aad
xchg
and
dec
xchg
cld
xchg
jg
shll
sub
test
mov
jp
hlt
pop
jo
loope
in
jnp
dec
mov
bound
inc
sub
xchg
idiv
mov
pop
xchg
je
stos
roll
pop
pushf
out
shl
inc
pop
push
out
xor
pop
aam
sub
clc
cwtl
mov
test
testb
sub
test
xlat
xchg
retw
adc
cli
pop
add
adc
fs
sti
jne
inc
or
sub
cmp
and
inc
jb
popf
xor
mov
xchg
xchg
scas
xorl
mov
or
iret
sub
pop
mov
jno
cmpsb
sbb
addb
mov
dec
arpl
in
repnz
mov
fwait
lahf
in
mov
dec
dec
or
lods
loope
push
loopne
add
add
mov
and
push
inc
push
sub
test
lea
jg
in
jno
sbb
cs
push
hlt
fistpl
scas
pop
test
mov
mov
sahf
inc
add
and
push
jmp
and
mov
sti
inc
dec
out
lock
loopne
cld
pop
cmp
fiadds
mov
adc
dec
and
sbb
push
mov
dec
out
adcl
adc
lods
std
push
pop
cmp
jae
mov
and
jmp
and
sub
jbe
xor
in
lcall
cmp
aaa
fistps
jg
lds
mov
les
mov
mov
push
aaa
aaa
outsb
and
cmpsb
and
into
jecxz
ret
push
sbb
and
aad
push
in
xor
inc
aaa
pop
addb
das
call
sbb
xor
dec
push
fs
and
or
leave
jmp
fdivrs
mov
jbe
push
sarl
jnp
outsl
dec
iret
pop
add
inc
jns
in
out
adc
push
cmp
sbb
pop
and
lret
adc
fisubrl
movsb
push
mov
push
mov
addr16
sbb
and
jno
sub
mov
loope
popf
or
loop
xor
dec
pop
rcll
fbld
mov
sbb
andb
in
xchg
jg
std
mov
int
dec
das
mov
cmpsb
jns
push
xor
fwait
lock
fs
test
scas
mov
jb
mov
shrl
outsb
in
fmulp
jge
sbb
cmp
outsb
sti
js
mov
push
aas
ret
shrl
push
rcrb
insb
adc
call
icebp
icebp
lods
outsb
add
sub
test
jno
mov
int3
lods
stc
add
mov
or
fisubrs
movsb
adc
inc
push
stc
mov
pop
dec
and
mov
fimuls
jo
shlb
iret
insb
loope
pop
ss
insb
mov
adc
inc
sahf
push
and
xor
inc
mov
mov
imul
mov
hlt
push
jno
cmpsl
inc
jo
aam
sbb
rclb
mov
mov
aas
icebp
shrl
mov
out
cld
or
stc
mov
sub
xlat
arpl
xor
cmp
movsl
push
lfs
lock
jb
cmpsb
scas
arpl
push
or
shrb
aaa
sbb
xchg
pop
cmp
das
mov
cmp
cmp
sti
lcall
lcall
inc
out
fwait
mov
sbb
add
aam
jns
xchg
adc
popl
jno
inc
or
pop
xchg
add
jb
in
xor
movsl
add
fwait
sbb
lahf
rcrl
mov
ret
popa
add
sarb
mov
push
rorl
or
xchg
mov
sub
inc
fsub
aaa
sbb
sub
push
dec
test
std
dec
js
fstl
pop
loope
mov
shll
insb
mov
cmp
iret
pop
jmp
push
sbb
enter
mov
hlt
add
add
push
aad
jne
and
iret
cli
int
dec
popa
idivl
hlt
ds
in
cld
repz
outsb
cmc
adc
lcall
popa
jb
xor
push
push
and
aaa
popa
push
les
pop
ss
nop
loop
add
jae
xchg
jo
xchg
mov
std
fists
pusha
push
push
mov
outsl
jg
cmp
sub
adcl
and
add
and
ss
movsb
mov
fs
add
push
out
pop
int3
sub
mov
inc
sahf
in
mov
int
mov
fcmovne
push
data16
sbb
pop
cmp
dec
xor
testb
fidivrl
pusha
mov
xchg
mov
xchg
and
daa
repz
sar
jne
mov
mov
xor
ja
outsl
int3
in
fwait
dec
adc
mov
push
es
sub
xchg
insb
or
inc
pop
xlat
repnz
xor
jae
inc
mov
gs
mov
mov
fbstp
or
cmp
mov
pop
mov
or
add
iret
fistps
sub
mov
push
fbld
cmp
add
xchg
push
adc
sub
dec
leave
adc
dec
insl
jno
jb
inc
sbb
in
cwtl
cmc
popa
or
pushf
push
das
insl
fwait
jbe
jle
xchg
cs
mov
sub
jo
mov
or
enter
test
add
adc
and
xchg
push
pop
cmc
test
xchg
aam
lcall
jg
outsl
pop
push
popf
andl
mov
stc
repz
cmp
mov
fadd
push
and
xor
mov
fadds
add
sbb
mov
fs
je
nop
aas
or
jg
fisubs
dec
xor
ljmp
sbb
sbb
dec
fs
lods
mov
pushf
lods
lds
dec
xor
push
pop
stos
mov
cwtl
fs
mov
xchg
mov
xor
adc
jnp
leave
sbb
out
mov
idivb
cmp
adc
and
xchg
push
ja
out
xchg
xlat
lcall
jnp
mov
push
dec
js
jae
sbb
cmp
lock
add
inc
pop
adcb
cmp
hlt
mov
xor
mov
cld
xor
lds
in
popa
xchg
pop
xchg
push
cs
movsl
lcall
aaa
nop
mov
pop
mov
xor
adc
nop
aas
into
sub
data16
fdivrl
push
loop
clc
ret
les
mov
imul
jmp
jg
jne
out
jo
adc
sti
inc
stc
jnp
xchg
cmc
jecxz
mov
dec
xchg
ret
cmpsl
call
jbe
popf
mov
int3
ret
mov
add
sbb
movsb
rclb
xlat
dec
dec
adc
pop
ja
jmp
ret
or
cmp
popf
xchg
add
lahf
aam
lcall
pushf
push
addr16
ja
in
mov
out
int3
jge
jmp
int
lea
data16
popa
push
je
sub
jecxz
test
push
ja
orb
leave
xor
outsl
add
xor
xchg
into
movsb
fisubs
mov
xchg
adc
iret
insl
mov
adc
flds
mov
js
out
push
inc
test
clc
mov
cwtl
mov
hlt
mov
inc
mov
push
pop
inc
sub
add
dec
sbb
leave
jge
and
mov
pop
fs
mov
jne
fisttpll
pop
push
xlat
out
les
inc
cmp
sahf
shlb
mov
xchg
add
sbbb
loop
inc
add
sub
in
orl
add
into
in
test
sub
sbb
int3
dec
test
daa
cmp
mov
test
pop
clc
stos
rorl
pop
js
mov
inc
inc
inc
xchg
test
mov
fistps
cmp
sub
cld
stos
sbb
sbb
sub
pop
mov
and
sbb
imul
dec
arpl
lret
psubb
pusha
mov
mov
xor
dec
mov
jl
xor
cmp
in
xchg
xlat
xchg
push
or
and
movsb
ss
stos
aam
push
adc
pop
and
push
aad
add
loope
xlat
sbb
dec
cli
out
push
push
rcll
pop
aaa
mov
pop
incl
and
out
push
inc
inc
cwtl
jnp
mov
pop
ficoms
pop
jmp
in
xor
xchg
out
stos
cld
aad
fnstsw
in
push
mov
xchg
xor
push
lock
stos
lods
out
sbb
cs
filds
pop
lock
movsb
sub
hlt
mov
xor
sti
pop
mov
pop
push
inc
imul
aaa
ja
mov
pop
into
adc
jbe
add
mov
add
stc
jnp
dec
mov
pushf
int3
in
lock
mov
push
shll
adc
hlt
xor
nop
and
imul
add
inc
loop
mov
gs
iret
adc
test
xor
pop
adc
inc
and
jle
fstl
jno
jbe,pt
jmp
jb
flds
lcall
push
and
cltd
and
jl
lahf
mov
xor
sar
inc
pop
inc
loopne
mov
mov
imul
push
jge
ss
add
wrmsr
rorl
les
jne
sti
push
cmp
jae
lock
and
mov
jle
adc
mov
icebp
xor
lcall
cmp
popa
inc
jne
ds
mov
sbb
xchg
jno
mov
es
test
mov
or
push
sub
and
xchg
lahf
add
in
stc
pushf
roll
ja
sub
inc
ss
cmc
imul
ret
lahf
jbe
sub
jno
test
mov
inc
push
jae
jns
sub
insl
jle
wbinvd
psubw
das
neg
mov
add
movsb
jmp
add
sbb
into
xor
addr16
inc
icebp
orl
out
mov
jae
or
mov
test
enter
inc
add
int3
ljmp
outsl
enter
xor
pop
pop
mov
jnp
mov
mov
inc
cwtl
nop
cld
std
push
and
imul
mov
sbb
mov
push
mov
fs
add
push
out
jb
rorb
call
movsl
ljmp
fmul
out
push
mov
fwait
shrb
dec
mov
mov
or
sbb
ljmp
cmp
scas
pop
sbb
push
mov
push
ja
lock
sbb
jne
imul
aaa
xor
sub
push
add
sub
lds
and
scas
out
inc
push
lahf
test
scas
mov
pusha
xchg
mov
mov
movsb
cmp
sbb
call
inc
sar
jg
push
jns
push
xor
sbb
clc
lcall
xor
mov
mov
add
out
mov
dec
cmpsl
xor
sub
test
mov
inc
xchg
xlat
repnz
or
push
cmp
fisubs
fwait
bound
jb,pt
bound
lock
ja
mov
mov
adc
test
adc
or
sub
fstps
pop
fstp
sbb
sub
or
adc
ljmp
push
popa
and
xchg
jo
aaa
pop
pop
mov
cli
pop
icebp
sbb
mov
stos
jle
push
mov
xor
mov
add
cmp
pop
loop
jg
hlt
pop
fldenv
push
mov
mov
mov
dec
leave
fimull
xor
mov
xor
pop
leave
mov
inc
dec
xor
mov
mov
mov
or
and
shll
lds
movsl
mov
lret
std
or
cmp
adc
sbb
call
dec
sub
popf
out
pusha
dec
adc
es
inc
mov
pop
jnp
mov
aam
jg
sub
popf
xor
cwtl
dec
mov
pop
paddq
dec
outsl
mov
int3
bound
stos
test
dec
sub
cmpsl
repz
inc
push
push
push
dec
cs
push
dec
inc
push
jmp
repz
ds
ret
lods
xchg
push
ss
jns
aad
mov
ds
sub
jle
push
loope
sbb
adc
sub
lcall
lods
xor
mov
aas
push
addr16
dec
xchg
adc
dec
mov
ret
and
lret
pop
inc
bound
mov
call
pop
pop
jbe
adcb
popa
mov
inc
or
movsb
daa
bound
inc
sbb
mov
and
ds
mov
or
push
fdivrs
jbe
repnz
shll
les
in
and
mov
pusha
jno
adc
mov
pop
dec
aam
push
incl
jle
mov
shlb
jne
inc
inc
push
in
push
lock
in
in
outsb
jmp
sub
cs
lods
aaa
cmp
repz
mov
jns
fs
hlt
out
mov
cwtl
push
imul
stos
cmp
push
push
xor
sub
jno
fidivl
adc
and
stc
add
push
out
xorb
arpl
std
cmpsb
aas
jb
mov
jne
ficoml
pop
out
adc
outsb
pop
inc
pop
scas
xchg
push
mov
fimuls
mov
inc
iret
mov
pop
imul
lock
loopne
mov
test
dec
xor
pop
insl
jno
jbe
push
jae
sbb
mov
sbb
test
cmp
aas
xlat
mov
mov
pop
sbb
push
inc
push
cwtl
or
inc
xor
lods
mov
pop
sti
sbb
test
dec
pop
loop
jle
in
addr16
jge
add
cmp
dec
enter
push
dec
cmp
add
aaa
xchg
div
in
cmp
dec
lret
fldl
jmp
scas
inc
and
fldl
iret
adc
lods
cmp
pop
dec
lret
cwtl
sub
and
push
cli
mov
and
out
cld
xchg
sbb
sti
mov
add
lahf
test
mov
ror
inc
ja
adc
sahf
and
test
cmp
lods
data16
out
ljmp
push
lods
nop
jl
test
xor
jno
lahf
xchg
jl
test
sbb
pop
dec
lret
add
dec
insb
mov
xchg
cmp
fs
cmp
pop
pop
or
lret
pop
into
dec
out
bound
push
jbe
cmp
aam
repz
inc
or
add
adc
adc
inc
nop
sarl
lahf
xchg
jp
xchg
pop
jb
pop
xchg
dec
xchg
fbstp
out
cmp
ret
jp
xlat
shl
pop
fildll
subb
popa
stc
dec
cmp
imul
cmpsb
sbb
adc
inc
xchg
imul
pushf
std
or
push
fmull
mov
mov
inc
pop
pop
mov
push
pop
or
xor
stos
push
xchg
sbb
repz
popf
sahf
cmp
fistpl
ror
dec
arpl
cmp
mov
dec
mov
cmp
inc
push
push
dec
test
pusha
jnp
bound
pop
sub
js
rcrb
push
fsub
pop
shl
pcmpeqd
sbb
sub
aam
lock
lret
mov
push
mov
sarl
jg
dec
or
adc
ja
sahf
loop
mov
and
jae
pop
roll
lods
xor
jge
jne
gs
sub
sbb
notb
lahf
or
jmp
scas
pop
movsb
push
inc
fbstp
push
stc
add
pop
xlat
jg
push
and
stos
iret
xor
xor
scas
mov
movsb
fidivl
cs
add
adc
mov
stos
addb
xorl
push
aaa
push
in
mov
mov
mov
loope
enter
inc
fsubrs
mov
inc
stos
dec
lods
and
add
enter
lahf
fstl
ss
push
fs
aaa
cmp
test
sbb
push
test
lock
imul
repnz
mov
or
push
mov
xchg
pusha
test
mov
pop
test
ljmp
subl
jns
outsl
insb
inc
or
push
cmp
cmc
mov
icebp
ds
xchg
outsb
shll
or
sbb
ret
rolb
mov
inc
push
jno
loopne
test
rorb
mov
bound
pop
xorl
in
loopne
das
adc
in
test
adcw
inc
sub
pop
test
cmp
adc
push
fs
loopne
scas
dec
cwtl
out
cwtl
sar
fwait
adc
mov
sbb
es
sub
in
ret
insb
xlat
jp
aaa
ret
gs
adc
and
imul
fnsave
andl
mov
data16
nop
jecxz
je
popa
scas
cmp
lret
divb
enter
mov
test
movsb
subl
fsubr
outsl
pop
in
das
jae
fidivl
xor
mov
loop
dec
fnstcw
mov
ja
test
in
call
mov
add
aam
pop
and
cli
jmp
mov
sbb
ja
mov
in
fwait
enter
mov
push
imul
pusha
mov
inc
xorb
rcrl
mov
sbb
ljmp
push
pop
icebp
scas
xchg
push
adc
adc
xlat
adc
and
jns
scas
cs
mov
sub
xchg
adc
hlt
xlat
sbb
cmp
pop
je
pushf
inc
push
lret
icebp
push
jbe
js
mov
and
mov
pop
fimull
cli
and
xchg
adc
inc
adcb
push
sub
mov
jno
leave
ret
pop
addr16
push
mov
ljmp
rol
in
in
cli
out
andl
insb
xchg
xor
mov
inc
mov
mov
ljmp
jecxz
popl
lret
sbbl
jl
outsb
jp
loope
xchg
ljmp
xlat
xchg
or
movsl
adc
out
dec
jno
push
sbb
int
and
or
gs
jge
lods
mov
outsl
loope
int3
push
mov
in
mov
dec
and
outsl
push
sub
xor
iret
mov
mov
repnz
movsl
sub
push
jne
push
xrstors
movsl
hlt
and
push
lea
adc
test
test
add
dec
lock
mov
stos
push
pusha
jl
mov
rcrl
idivw
shl
sub
sub
dec
dec
sub
cld
sub
jnp
movl
mov
mov
andl
mov
into
loope
xchg
inc
stos
fs
imul
pop
aas
in
pop
jg
outsb
imul
dec
lret
cwtl
mov
push
negb
lds
mov
pop
ljmp
adc
mov
dec
adc
mov
test
insb
clc
add
rol
push
daa
push
bound
scas
pop
nop
dec
stos
cltd
rolb
inc
sti
insl
fstl
out
aad
cmp
pop
in
subb
faddl
add
mov
mov
test
or
std
inc
scas
and
lea
lods
add
or
cmp
pop
sti
mov
int3
jne
lahf
std
roll
xchg
xor
inc
int3
clc
dec
and
sbb
xor
cltd
stos
sbb
adc
es
xchg
bnd
mov
mov
xor
xchg
cmp
dec
xor
out
pop
inc
in
popf
outsl
pop
mov
mov
and
test
pop
int3
sti
mov
mov
ljmp
fsub
in
xchg
jle
jp
in
pop
adc
and
jns
sub
negl
orb
rclb
mov
mov
dec
add
stc
fwait
cmp
and
xorb
ror
jmp
cmp
or
mov
mov
pop
xor
cmp
mov
pop
loopne
xchg
and
pop
mov
cwtl
lcall
sahf
call
cli
mov
movsl
ds
jle
or
mov
xchg
mov
addr16
add
sbb
cmp
or
mov
icebp
scas
mov
popa
addr16
jg
arpl
mov
jbe
push
shlb
iret
pop
lock
adcl
in
cmp
adc
das
test
push
xor
in
sub
rcr
pop
das
addr16
push
dec
cmc
ret
cmp
popf
out
pop
lock
pop
mov
hlt
cmp
jp
ss
rorl
adc
sub
ds
or
xchg
fistpll
and
js
outsb
sub
mov
pop
mov
js
xlat
or
push
push
mov
adc
jae
push
lea
and
xchg
dec
pop
lahf
push
pop
xchg
das
pop
packuswb
mull
stos
fs
push
aaa
inc
imul
mov
xchg
add
shrb
jecxz
mov
cld
fcoms
mov
imul
mov
dec
dec
push
or
jecxz
cltd
push
push
lret
push
sub
popf
jne
jne
das
push
pop
sub
cmp
loop
mov
data16
or
jmp
sar
jns
loopne
inc
push
mov
jg
idivb
dec
sbb
inc
test
jb
scas
insl
lds
cmp
scas
loopne
in
cmc
decl
fwait
cli
mov
adc
or
mov
push
es
push
or
inc
fidivrl
pop
popa
mov
fistpll
in
cwtl
ss
subl
lods
lcall
lcall
xchg
or
insb
inc
push
sub
das
icebp
jecxz
cs
mov
and
repz
push
mov
adc
rcll
mov
pop
movsb
iret
mov
divb
mov
push
mov
sahf
test
mov
sarb
pop
sahf
movsl
mov
lret
or
imul
imul
push
lcall
dec
jle
mov
add
cs
cmp
mov
cmp
pop
add
add
ja
xchg
lret
push
xor
movb
fistps
repz
mov
xor
movsb
pusha
lret
out
sbb
es
fnsave
or
in
xchg
das
cmpb
sbb
push
jecxz
xchg
mov
cltd
jp
jae
and
mov
xchg
xor
outsl
call
dec
jge
movsb
into
sbb
je
dec
sbb
cmc
jo
inc
add
not
outsl
mov
add
sub
and
insl
enter
jno
arpl
int
cmp
push
cmp
xchg
ja
movlps
mov
dec
lret
in
jbe
mov
mov
imul
mov
xchg
dec
imul
push
sti
add
fistps
cmpsb
inc
fldcw
push
pop
iret
mov
jmp
xor
or
jns
xchg
fldt
inc
or
sub
test
shlb
cmp
mov
pusha
sub
dec
cmpsb
adcb
pop
in
into
mov
sbb
pop
shl
mov
cmp
daa
or
adc
jne
mov
loop
movsb
inc
push
pop
into
and
std
mov
xor
xor
cmp
rorl
jnp
xor
push
mov
mov
adc
and
mov
add
xchg
pop
ret
pop
das
mov
jmp
pop
in
xchg
jl
ja
and
xlat
dec
call
popa
mov
inc
xchg
sbb
sub
mov
mov
dec
shlb
mov
fidivs
jo
mov
mov
loopne
popa
scas
in
aas
dec
bound
xor
out
add
sub
and
fcomps
mov
rcpps
out
sub
dec
push
lret
xchg
jno
xchg
stos
into
push
jg
test
push
jmp
into
push
dec
pushf
call
cmp
sbb
push
out
imul
aas
enter
inc
mov
aam
mov
jae
jle
and
fldl
insb
mov
or
aaa
outsl
xlat
stos
inc
push
jmp
idivb
inc
inc
ss
mov
jo
push
ds
and
push
pop
shr
inc
mov
pop
dec
push
daa
sub
ds
sbb
push
fildl
mov
cmp
leave
stc
aas
push
sbb
push
daa
pushf
mov
jns
mov
and
mov
sub
xor
cmp
mov
mov
jge
pop
add
sub
aas
das
sbb
in
add
jp
inc
cld
cmpb
fwait
dec
pop
pop
or
inc
movsl
pop
jmp
add
add
imul
push
ja
cmp
sbb
push
je
pusha
jbe
fldenv
loope
xchg
pop
outsb
inc
cmpsl
es
pop
imul
adc
push
ret
sti
out
jge
pusha
test
repnz
ret
movsl
sub
loopne
mov
mov
fsubl
push
xor
or
out
jns
push
pusha
mov
push
inc
add
dec
stos
cmp
movsl
insb
pop
xorl
adc
inc
add
push
xchg
mov
xchg
movl
in
jmp
pop
gs
mov
xchg
stos
mov
jl
mov
sub
in
inc
xchg
movsl
push
in
outsl
lret
inc
pop
cmp
jg
imul
inc
push
and
push
sub
mov
cmp
cmp
ftst
sbb
push
scas
addr16
jno
push
cmpsl
and
mov
fisubrs
imul
and
adcb
jbe
popa
imul
pushf
popa
xchg
jge
xchg
push
xor
mov
xor
jle
or
mov
jl
rcll
bound
cld
insl
sbb
shlb
int
mov
push
xchg
lret
jg
ss
divb
aas
leave
les
pop
push
pop
add
popa
and
das
pop
push
jge
xchg
xchg
lret
mov
aad
mov
das
addr16
inc
ret
xchg
sbb
scas
and
inc
fiadds
movsl
sarb
leave
dec
jge
xorb
test
mov
sbb
and
fwait
mov
push
sub
stc
pop
push
push
insb
mov
out
movl
fidivrl
shll
rcrl
inc
shlb
pop
and
outsl
hlt
jbe
cmp
cmpsl
adc
jge
aas
xor
push
aad
xor
jg
sahf
or
test
rcr
sub
xor
cli
cltd
jecxz
in
cltd
dec
mov
add
jmp
movsl
rcrb
fs
lahf
or
jb
lods
jmp
cmp
enter
dec
mov
cmp
iret
fcompl
subb
ret
insb
lds
inc
imul
into
mov
jg
ja
lea
pmulhuw
mov
xchg
mov
pop
sub
js
and
push
and
outsl
mov
stos
jmp
es
push
repz
outsl
dec
mov
fld1
push
leave
sub
lcall
shlb
mov
mov
or
adc
xor
sti
mov
jae
rcll
push
adc
mov
jns
pop
js
mov
pop
into
fists
call
cld
xor
iret
mov
cmc
and
scas
lret
or
mov
insb
insb
test
push
pop
pop
xchg
xchg
ja
or
dec
js
dec
movsl
add
rcrl
mov
lods
lret
adc
pop
dec
fisubl
jge
out
cs
aad
pusha
jb
pop
dec
jmp
dec
rorl
pop
inc
dec
xor
xchg
mov
test
add
movb
cmc
adc
cmp
sahf
push
popa
sahf
cs
jge
stc
ret
push
and
mov
mov
enter
in
call
repnz
pop
insb
jns
out
jmp
cmpsb
jno
jge
or
enter
cmc
or
mov
mov
stc
push
xchg
cmc
stc
stos
push
push
push
push
jmp
or
lods
inc
xchg
or
sub
dec
fiadds
jmp
movb
aam
xor
xor
adc
cmpsl
adc
aaa
jne
les
jb
gs
jl
andb
lcall
push
xchg
sbb
mov
and
mov
repnz
mov
dec
aas
mov
mov
rol
insb
fildl
mov
lea
and
xchg
xchg
dec
repnz
mov
cmp
inc
or
je
in
lret
mov
test
push
push
mov
ret
xchg
and
int
mov
dec
aad
xor
iret
pop
inc
xor
push
push
and
pop
arpl
pop
fsubrs
mov
out
jle
inc
jo
out
test
sbb
mov
dec
repnz
xor
mov
jnp
popa
sbb
mov
mov
es
inc
xor
xor
je
inc
sahf
xchg
iret
push
scas
outsb
push
inc
inc
cmp
fwait
nop
sti
les
lcall
ds
jbe
inc
rclb
and
inc
enter
xchg
dec
pop
insb
addr16
int3
roll
mov
jnp
sub
loope
inc
or
push
adc
push
pop
nop
into
adc
add
add
and
cs
add
xlat
push
cmp
jmp
inc
stos
popf
sub
jle
mov
imul
or
rcrb
pop
push
xchg
ret
sub
iret
dec
js
add
jbe
movl
or
mov
in
sbb
push
cmp
sub
inc
lret
in
stos
pushf
mov
enter
pop
leave
push
xor
out
dec
mov
int3
cmc
cmp
cwtl
fadd
ja
xchg
leave
arpl
dec
popa
and
roll
movsb
pusha
or
sub
xchg
clc
arpl
and
mov
add
push
pushf
mov
mov
mov
loop
pop
stc
mov
dec
jnp
xchg
inc
mov
jmp
cwtl
mov
pop
push
bound
fwait
lea
leave
test
aam
sub
mov
das
dec
dec
sub
sbb
cli
jnp
ds
fldt
inc
out
jmp
and
in
int3
icebp
fcmove
rcrl
jg
fbld
in
fistpll
jns
fs
gs
mov
pushf
lret
xchg
ljmp
inc
jb
mov
adc
push
fadds
fsubl
scas
pop
push
aad
jno
push
mov
or
sbb
insb
bound
push
cmp
fnsave
ds
roll
xchg
and
and
mov
dec
add
cmpsb
dec
ljmp
or
push
jno
xor
mov
test
jno
inc
imulb
ret
mov
sub
add
jnp
imul
mov
mov
pop
pop
sbb
xor
dec
mov
js
fsubs
mov
shlb
cmpsb
fildll
xor
or
inc
xor
loopne
arpl
jecxz
in
aam
jae
dec
sti
in
mov
xchg
push
sbb
lea
and
jmp
jg
cmp
mull
aam
inc
push
add
push
outsb
dec
pop
cmc
add
jmp
cmp
in
cmp
pop
insb
insb
adc
ljmp
jae
lahf
fxch
and
or
push
inc
gs
dec
shl
lock
jp
mov
icebp
jge
mov
cwtl
leave
adcl
jne
std
xor
xor
pop
fdivrs
dec
adc
fstpt
jl
fisubs
xchg
cmp
out
ja
cwtl
lret
mov
ss
push
jne
fldcw
aas
sbb
test
out
enter
adc
pop
call
sub
sbb
xor
pushf
pop
insl
scas
add
js
mov
fnop
pop
int
jl
leave
pop
negl
idivl
cli
jecxz
lods
int3
xchg
adc
sub
imul
inc
clc
pop
cmp
adc
movsb
cli
in
mov
xor
lods
loopne
inc
jnp
mulb
push
lret
jecxz
push
mov
insl
pop
xchg
cli
outsl
or
mov
popa
js
hlt
out
jmp
cmpsb
dec
fwait
daa
out
xchg
inc
clc
jb
fdivr
fistps
sti
ja
movsl
cli
gs
ret
bound
add
jge
mov
sbb
and
lret
fsub
cmp
shlb
stc
lods
decb
add
data16
enter
insl
cmp
dec
sbb
and
cltd
xor
lods
add
inc
out
jecxz
test
mov
inc
mov
out
dec
dec
mov
xchg
inc
mov
call
repnz
dec
stos
pop
test
stos
pop
and
fistpl
jecxz
pushf
mov
jg
cmpb
pop
pusha
das
ljmp
sbb
pop
cmp
das
daa
push
push
loope
adc
or
cmp
sarb
stos
pop
lret
push
inc
aam
mov
in
sahf
pusha
dec
leave
scas
mov
inc
mov
data16
adc
addb
sbb
ljmp
shll
dec
lret
mov
test
shll
xor
out
jg
mov
and
adc
adc
ss
pop
jbe
fldcw
cmp
je
mov
mov
insb
mov
aad
aaa
stc
mov
jb
mov
inc
push
push
push
ljmp
fucomip
xor
fiaddl
js
jae
adc
or
movsb
mov
and
mov
sbb
adc
adc
jns
pop
sahf
call
lret
inc
stc
jmp
hlt
xchg
ret
dec
insl
push
add
inc
stc
mov
shll
sub
fwait
or
cli
or
cmpsl
fs
cwtl
lock
arpl
pop
subb
rcrb
pop
jmp
imull
mov
enter
adc
pop
push
xor
repnz
popa
ret
jmp
jmp
and
xor
mov
inc
jmp
inc
dec
mov
test
and
std
decb
sbb
popf
pop
dec
decl
outsl
add
cmp
inc
add
and
test
pop
cld
insb
xor
xlat
mov
mov
mov
inc
pop
xchg
jmp
in
xchg
or
clc
out
adc
pop
mov
xor
adc
inc
xor
sbb
rcrb
mov
jp
add
mov
xchg
daa
mov
aas
mov
lret
rcrl
lods
ja
mov
fdivs
repnz
xchg
pop
mov
cmp
fmul
sarl
mov
sbb
inc
sub
or
mov
push
movsb
out
jg
mov
in
inc
xchg
sbb
cs
dec
and
in
mov
dec
sti
stc
loop
sbb
mov
cld
mov
sahf
hlt
enter
push
mov
mov
push
jnp
and
mov
inc
push
outsl
xchg
popa
ljmp
and
testl
sub
pop
icebp
sub
add
xlat
mov
mov
jl
test
and
cmp
sbb
mov
dec
or
jmp
and
std
xor
push
loop
mov
lea
push
jle
ret
sbb
xchg
xor
aas
mov
add
loope
adc
jmp
repz
xor
sub
add
push
add
fcmovb
jecxz
enter
orb
dec
xchg
sbb
cmc
fistpll
movsl
test
cld
dec
movsl
mov
mov
in
mov
add
mov
out
jo
in
jg
xor
jno
cmp
push
fs
mov
popf
bound
inc
movsl
test
jg
adc
mov
jno
nop
popf
sbb
mov
fucomp
scas
pop
insl
jmp
mov
adc
dec
mov
rorl
xor
cmpsl
pop
shll
and
xchg
dec
mov
cwtl
pop
mov
popa
ret
or
jle
dec
mov
jno
dec
and
mov
xchg
mov
bound
test
push
xchg
mov
xlat
subl
push
int3
xchg
jge
and
push
movsb
sub
icebp
xchg
pop
dec
and
cmp
and
fisttpll
sub
sub
jmp
mov
insl
mov
sbb
mov
adc
xchg
fdivl
pop
inc
push
and
xchg
sbb
fiaddl
in
aam
adc
and
dec
imul
shlb
cmp
pop
cmp
mov
out
push
dec
sbb
pop
adc
cmc
cmp
lret
inc
inc
out
sti
rolb
inc
stos
xchg
cli
sub
inc
loope
jns
movsl
fcoml
mov
lock
int3
add
int3
xchg
or
or
xor
add
testb
mov
std
push
imul
mov
xchg
xor
dec
push
jmp
test
pop
jg
sub
inc
sbb
mov
jo
mov
div
movl
fstps
into
sbb
lods
cmc
dec
jne
xchg
add
jbe
subb
add
repz
lods
pusha
and
call
cmpsb
push
inc
xlat
pop
cmp
inc
in
dec
cltd
bound
xchg
mov
int
imul
nop
enter
rolb
loopne
mov
mov
inc
das
jnp
adc
push
and
mov
jmp
jg
jg
les
sub
ret
cmc
xlat
mov
xor
sbb
jnp
and
arpl
testl
shlb
xor
mov
stos
lods
jne
pop
pop
bound
xor
cmp
loope
sahf
out
enter
inc
or
jmp
mov
sub
daa
pushf
sahf
cmpsb
fidivrs
xor
adc
mov
fs
xchg
dec
jb
xchg
ss
xchg
adc
enter
jo
fisttpll
push
daa
sub
mov
cmp
xchg
pop
cld
lret
pop
stos
popf
js
mov
xor
push
sbbb
imulb
cld
cli
inc
icebp
sub
xor
fwait
out
jb
jg
jbe
aas
jne
inc
mov
loopne,pn
ja
rcrl
mov
js
lret
xchg
pusha
push
inc
aas
xchg
popa
in
out
outsl
mov
and
repz
cld
fcoms
pusha
sbb
sti
mov
iret
push
mov
mov
sbb
dec
stos
pop
fldcw
mov
enter
test
lcall
shll
adcl
inc
add
xor
pop
sbb
es
sub
jb
in
test
movsl
stos
sub
insl
out
mov
pop
and
push
add
test
mov
mov
mov
adc
lahf
and
into
andb
fwait
cmp
jns
fisttps
jne
pushf
pop
rcl
inc
xchg
jge
out
popf
jno
adc
sub
pop
mov
mov
cmp
scas
and
adc
out
dec
xor
adc
pop
mulb
sub
shl
cmpsl
outsb
test
sarl
sbb
out
add
lods
test
mov
pusha
cltd
iret
data16
data16
ffreep
mov
dec
daa
inc
sub
out
push
es
mov
lock
xchg
rolb
or
xlat
mov
in
mov
stos
cmc
repz
in
insb
mov
cmc
sub
mov
bound
mov
les
push
xor
in
ret
in
enter
rorb
or
xor
mov
sbb
into
cmpb
sbb
sbb
xchg
int
cmp
mov
mov
add
xchg
imul
mov
loop
popf
clc
mov
aas
fwait
sahf
xor
or
sahf
cmp
aam
adc
stos
repz
jg
add
inc
jmp
cmp
pusha
addr16
ss
xor
push
ss
fdivs
cmp
std
pop
hlt
jl
movsl
sbb
scas
cwtl
scas
enter
push
imul
add
pop
jecxz
xlat
add
sub
test
and
out
dec
aaa
fidivs
mov
xor
lds
pop
int
das
int
es
xchg
adc
inc
pop
fidivrs
adc
insl
or
jp
mov
js
in
stc
popa
inc
or
test
add
or
mov
movsb
cltd
sbbb
test
aaa
mov
and
adc
mov
inc
in
sbb
cli
loope
push
xor
aas
inc
das
idivl
adc
mov
mov
std
shl
cmpsb
aaa
cmpsb
insb
mov
adc
js
jp
jle
aam
sahf
xchg
sub
lock
and
inc
jle
lret
adc
sbb
shll
mov
popa
aas
xor
xchg
mov
out
xchg
mov
lea
mov
or
adc
adc
lahf
nop
inc
jo
lahf
lret
sbbl
mov
rol
pop
shll
leave
rcll
sub
pop
mov
sbb
daa
adc
cmpsb
and
sbb
dec
xchg
loopne
xchg
jb
out
fidivs
pop
xor
add
nop
pop
inc
mov
fcomps
lret
out
jle
inc
jno
push
movsl
xchg
in
insl
adc
inc
pop
mov
das
cltd
pop
pop
lret
lods
ret
or
jb
iret
mov
push
mov
jmp
mov
in
pop
test
or
push
xor
movsl
jo
out
jg
cltd
movsl
inc
sbb
xor
fidivl
testb
adc
cmp
jmp
out
push
loope
pop
imul
bsf
push
cmp
cwtl
outsb
test
leave
and
outsl
test
fcomps
lahf
cmpsl
packsswb
popf
or
outsb
shl
adc
mov
dec
movsl
in
xchg
mov
sahf
daa
jns
pop
lret
repnz
xor
adc
xor
xor
mov
dec
pop
inc
pop
pop
mov
int3
and
test
mov
inc
mov
add
cmc
mov
les
cmp
shrl
shr
push
fistl
std
pop
xchg
pop
pushf
sti
unpcklps
cmpsl
test
jle
or
jno
roll
adc
test
adc
adc
xchg
hlt
testb
dec
out
pop
or
add
fisubl
sub
outsl
dec
sti
sub
dec
pusha
sub
push
push
in
push
xor
cltd
mov
xlat
fsubl
add
sahf
bound
in
sub
call
and
cmp
loopne
cmp
or
les
imul
dec
jp
lods
pop
cmpsl
jno
lahf
pop
jnp
cmpl
loop
mov
dec
or
mov
push
fmull
add
test
dec
jnp
sbb
xor
daa
and
lret
sar
mov
lods
movsb
in
lcall
xchg
inc
cmp
adc
outsl
mov
mov
cmc
ds
aam
imul
xor
push
add
add
sub
mov
gs
popf
mov
sbb
push
jecxz
popl
xchg
cmp
sbb
setne
inc
orl
sub
and
lds
xor
push
add
mov
mov
fnstsw
adc
pop
adc
lock
rorl
jle
xor
mov
inc
ret
push
mov
ja
loop
and
mov
cmp
pop
bound
fsubrl
pushf
mov
cmpsl
sbb
pop
dec
jnp
jno
mov
sub
in
loop
orl
mov
jg
lods
cmp
cmp
lods
clc
xchg
cmp
mov
mov
repz
mov
pushl
fistpll
out
sti
inc
and
sfence
jb
and
test
sub
xor
iret
inc
shlb
mov
mov
push
pop
testb
fcomip
mov
std
pop
pushf
jne
out
adc
push
push
xchg
idivl
and
leave
inc
pop
jne
mov
pop
cmpsb
int3
or
adc
dec
iret
jp
cmp
pop
cmp
pop
cs
pop
jo
aam
xchg
adc
mov
out
mov
out
lahf
or
fidivrl
repz
outsl
mov
adc
sub
xchg
add
cmp
gs
cmc
adc
out
xchg
add
mov
loop
bound
imul
movl
dec
xor
push
les
mov
jp
sbb
sbb
dec
and
cli
pop
test
jmp
jns
add
out
jne
mov
mov
cmp
cmc
xor
mov
mov
jg
notl
or
add
imul
xchg
jl
cld
sbbb
imul
sbb
ficomps
inc
mov
das
xor
imul
loope
jnp
xor
push
in
cmp
add
loope
or
addl
stos
inc
jo
daa
sbb
xchg
jns
inc
bound
dec
lods
xchg
outsb
push
notl
dec
sbb
lcall
pop
mov
in
ds
pop
inc
jmp
pop
add
adc
cmp
dec
dec
lods
cli
das
pop
cld
hlt
movsb
mov
out
lock
wbinvd
sbb
add
mov
aad
sbb
std
test
fisubl
test
jae
inc
xor
pop
pop
xorb
push
mov
insl
jns
int
pop
jo
mov
incl
inc
ss
cli
lea
divb
sub
sbb
add
scas
jp
jmp
je
lret
ret
inc
sbb
fdivs
xor
xlat
inc
push
jle
out
sti
mov
sbb
stos
aam
pop
sub
popf
scas
sub
push
ucomiss
or
push
sti
dec
add
repz
inc
adc
mov
aas
mov
dec
out
adc
inc
xchg
mov
add
or
jl
lods
sti
mov
imul
mov
mov
repnz
insb
sub
adc
iret
stc
jmp
sub
xor
cli
jp
jb
and
and
loopne
cmp
ja
das
xor
sahf
cs
jno
loopne
push
loope
shr
dec
mov
mov
sbb
lds
adc
into
xor
ja
scas
aaa
sbb
push
lcall
addr16
jbe
pop
fcoml
imul
and
sub
pop
scas
ss
add
ret
sti
mov
out
out
rorl
into
mov
fldcw
js
test
jbe
mov
add
cmp
adc
push
pop
inc
enter
pop
in
pop
dec
add
aas
cmp
jo
jae
fadds
int
mov
and
stos
xlat
cli
xchg
xchg
dec
movsl
dec
push
fiadds
call
pop
xchg
insl
and
push
addr16
push
jbe
pushf
push
negl
adc
aam
mov
or
lahf
jno
mov
fistpl
ret
cmp
sub
push
jle
out
addl
jle
daa
add
cmpsb
fisubs
mov
outsb
jns
jmp
into
jl
or
dec
lods
ljmp
push
shlb
in
daa
sub
lods
adc
cli
ja
and
cmc
mov
mov
in
pop
repnz
or
pop
mov
mov
out
xlat
sub
jge
cmp
mov
ret
inc
and
inc
call
loop
ljmp
and
mov
push
dec
adc
divl
fidivs
cld
cmp
fildll
dec
stos
aaa
loope
push
int
hlt
adc
add
lock
shll
pop
xor
stos
sahf
sbb
movups
lahf
or
lock
xchg
leave
cltd
push
fcoml
jbe
bswap
mov
mov
arpl
and
cmpsl
cwtl
dec
dec
cmp
inc
stc
or
add
add
jno
adc
jo
mov
pop
inc
outsl
jno
ja
stos
xor
das
cli
lret
inc
adc
jbe
xor
push
xchg
jo
fldcw
pop
pop
and
fisttpl
ret
jno
xchg
test
into
imul
cwtl
adc
sbb
inc
cwtl
js
dec
js
xlat
xchg
std
hlt
xor
sbb
jmp
nop
dec
insb
jp
bound
xor
push
mov
enter
xchg
lods
dec
mov
cmp
ss
fnsave
mov
push
push
sarb
leave
adcb
subb
movsb
loop
filds
rep
mov
inc
pusha
jnp
fs
leave
xchg
jo
pop
xchg
cld
mul
sti
adc
andb
out
stos
cmp
sub
pop
jl
and
or
pop
aas
push
fcoml
sub
add
addr16
pop
dec
cli
outsl
pop
push
xor
inc
lret
adc
cmc
test
xchg
movsb
data16
sub
fstpt
mov
and
es
out
bound
int
pushf
jge
cwtl
xor
pop
cmp
in
add
cmp
lods
mov
xchg
mov
repnz
mov
test
adc
test
imul
mov
mov
stc
adc
cmp
mov
pop
aad
sbb
push
lock
pop
movsl
imul
adc
test
std
outsb
iret
cltd
lahf
pop
leave
sbb
mov
dec
movl
arpl
or
dec
loopne
lock
mov
movb
xchg
jae
or
jl
inc
inc
arpl
fstl
in
mov
mov
pop
add
add
sub
push
popf
adc
mov
mov
popf
push
jno
insb
jmp
xchg
shrl
pop
hlt
repnz
out
lret
sbb
lods
insl
jno
ss
lret
test
popf
mov
mov
in
jecxz
dec
enter
popa
pop
fistpl
mov
js
or
nop
and
sub
sbb
adc
fidivrl
test
insl
out
or
loopne
mov
iret
into
xor
sub
loopne
call
cmc
dec
in
push
mov
and
mov
test
dec
push
lcall
dec
mov
mov
and
adc
push
cmp
imul
iret
sub
out
or
ret
inc
dec
mov
xchg
lds
push
push
jb
add
pop
mov
pop
add
testl
les
sub
mov
xorl
jno
adc
mov
nop
out
das
stos
dec
call
insb
inc
mulb
js
imul
cld
push
and
scas
aam
jecxz
and
sahf
push
add
out
int
mov
push
mov
js
or
int
xchg
sub
nop
mov
sbb
inc
jnp
dec
gs
cmp
or
in
fs
incb
clc
or
mov
xor
pop
add
cmp
sub
dec
sar
and
dec
dec
push
fidivrs
stos
cmc
mov
int3
imul
inc
mov
mov
jge
stc
xchg
lea
or
andb
negb
mov
fsubrl
push
out
roll
es
sub
jg
mov
xchg
cmpsb
jmp
inc
lock
mov
popf
ds
cmpsb
insb
mov
faddl
mov
and
lds
sub
push
lret
pop
push
jle
les
jae
mov
fldt
pop
push
imull
pop
mov
sarb
nop
subl
nop
bound
push
test
pop
or
or
sub
jp
lahf
jne
ljmp
les
leave
mov
fs
aam
jmp
mov
or
repz
repz
idivl
xlat
aam
add
addr16
jnp
out
test
jg
stos
jne
stos
sbb
jno
jno
adc
out
repz
push
push
ret
aas
loopne
cmp
jne
in
dec
rorl
les
xchg
jmp
xchg
mov
aaa
inc
repz
mov
jecxz
daa
xor
scas
js
jge
js
xor
nop
lods
std
ja
in
push
mov
notb
jne
sbb
add
ffree
cmpsl
push
xor
popa
lret
inc
jb
inc
mov
out
notb
leave
pop
fucomp
sbb
xchg
call
mov
xchg
lock
sbb
sbb
cs
scas
mov
mov
xlat
cs
mov
jo
sbb
std
cwtl
mov
push
dec
inc
dec
adc
cltd
mov
xor
subb
das
outsb
mov
das
sbb
add
lahf
mov
jbe
int3
clc
sbb
xchg
adc
bound
or
fstpt
jbe
lret
pop
mov
pop
out
push
push
push
sbb
sub
adc
inc
or
ror
mov
adc
cmp
xchg
xor
push
mov
adc
daa
add
call
lret
fs
mov
stc
shl
inc
andb
lret
out
test
sbb
repnz
mov
cmpsb
cs
jns
ljmp
jle
pusha
xor
inc
jo
jl
add
mov
hlt
orl
sub
mov
sub
repz
inc
and
leave
jnp
cmpl
mov
xchg
jae
sbb
jnp
aas
aaa
push
aaa
inc
pushf
loope
add
negl
call
lret
scas
xor
cmc
fnsave
or
inc
sub
add
ret
pop
xchg
ss
fwait
aam
mov
xor
sbb
pop
jle
bound
sub
divb
dec
rorb
cmpb
add
sahf
lret
and
push
rorl
jge
xor
leave
cli
aaa
sbb
cwtl
sahf
and
lret
mov
ss
mov
sub
fs
xchg
addl
lret
or
repnz
lret
mov
cmp
lds
out
cli
xlat
fs
arpl
ror
sti
int
loope
popw
inc
sub
adc
outsl
inc
and
hlt
loop
jmp
cs
in
stos
adc
lret
test
lcall
pmovmskb
xor
sbb
gs
xor
in
leave
call
daa
sub
sarl
mov
cld
daa
stos
mov
add
and
sbb
rol
xor
cmp
sbb
rclb
jnp
mov
adc
stos
inc
inc
jae
mov
jmp
and
fnsave
pop
lret
jo
mov
call
add
mov
pushf
and
or
pop
pop
pop
xor
icebp
lods
adc
cmpsb
mov
dec
mov
pushf
mov
cmp
aad
in
mov
in
movsb
and
lock
mov
cmc
repz
gs
out
fildll
lods
lock
push
inc
das
mov
jle,pn
jecxz
movsb
or
adc
lahf
and
push
push
lcall
sbb
pop
repz
xor
loop
ds
dec
and
data16
mov
xchg
test
aam
jne
and
mov
lds
push
fisttps
adc
andb
xchg
push
or
xchg
addl
mov
cwtl
enter
mov
mov
or
aam
inc
frstor
stos
fisubrs
loope
xchg
or
insl
add
or
dec
movsb
pop
aaa
outsb
cmp
fadd
aam
push
cmp
andb
ret
or
dec
imul
and
or
pop
dec
jo
or
xor
fimull
scas
loope
add
lds
push
xchg
insl
mov
pop
inc
cmp
lahf
xchg
pop
mov
fcmovnb
leave
ret
push
stos
in
pusha
push
cmp
adc
mov
cmp
mov
add
int
out
jns
push
mov
leave
insb
fisttpll
fdivs
out
sbb
dec
inc
test
js
in
xor
jecxz
xchg
xchg
iret
or
aaa
ljmp
fstps
in
xchg
popf
popf
inc
rcll
pop
sbb
mov
popf
mov
xor
push
mov
push
lock
les
xor
jno
cmp
dec
adc
out
dec
stos
or
in
test
addr16
jbe
jg
mov
int3
insl
push
in
push
xchg
jmp
and
mov
push
or
mov
cld
push
js
icebp
sbb
add
stc
jle
or
movsl
add
ja
cmp
out
test
movsl
dec
jp
test
xor
cmp
pop
js
cmp
add
pop
mov
cmpsb
jp
aas
mov
movl
mov
cld
cmp
arpl
ficompl
push
mov
inc
loopne
sbb
mov
leave
fldl
enter
or
repnz
lods
cmpsl
mov
push
into
das
bound
sub
or
xor
out
fwait
gs
pushf
dec
xchg
mov
cmp
incl
popa
push
mov
sbb
ret
xchg
or
and
xor
cli
pop
out
sub
stos
jecxz
and
mov
mov
into
mov
clc
adc
xchg
lock
xor
push
mov
add
movsl
push
lods
jae
sub
mov
fbld
adc
int
cli
out
shrl
sbb
jg
xchg
fcomps
ret
push
stc
sahf
pop
fdivp
and
jl
daa
movsb
jmp
push
adc
xorl
jno
ljmp
xor
in
nop
and
loopne
addl
or
sahf
rcll
scas
or
xchg
jmp
mov
popf
lods
or
fidivl
sbb
sbb
ret
inc
repz
push
ret
jl
pop
out
xchg
mov
dec
fisubs
scas
push
xorb
aam
xchg
xor
xchg
cmp
mov
testl
lods
stos
mov
into
fisttpl
lahf
xor
add
aad
mov
cwtl
or
mov
and
pop
inc
mov
outsb
cmp
lret
das
lds
shrl
outsb
and
insb
xchg
pop
adc
pop
dec
clc
mov
mov
shll
das
int
ret
cmc
rcll
dec
add
pop
mov
cmp
jb
fidivl
jp
push
cmc
shrb
sahf
test
xor
xlat
sbb
jne
clc
adc
lret
mul
mov
adc
lods
lock
mov
xor
mov
sub
add
cmp
inc
imul
orb
sub
mov
xchg
adc
cmc
cmp
sbb
bound
cltd
lcall
pop
pop
es
inc
xor
inc
adc
xor
shrb
mov
in
xchg
sti
ljmp
sbb
pushf
movb
cmp
adc
mov
or
adc
jmp
in
add
pavgw
cltd
insb
mov
inc
les
test
mov
aas
clc
ja
adc
sub
les
xchg
jmp
into
or
cmp
mov
and
insb
jle
mov
loope
daa
roll
mov
pop
outsl
push
sub
in
stc
arpl
loop
in
pop
dec
jb
adc
mov
lods
push
sub
addr16
sub
lret
out
push
xor
push
test
dec
in
mov
popa
lods
into
jbe
add
sbb
mov
test
ds
xor
xor
inc
cltd
push
test
cli
mov
add
xor
jp
dec
sbb
jg
stc
mov
push
in
aas
sub
daa
out
stc
es
ljmp
test
xor
lea
cmp
fiaddl
dec
lret
or
dec
dec
insb
push
ffree
dec
and
pop
mov
jbe
jns
xchg
mov
stos
loopne
sub
insl
test
jmp
mov
popa
jb
mov
jecxz
inc
jl
push
xchg
mov
inc
imul
jl
mov
push
xor
faddl
mov
aas
and
insb
xlat
pop
in
les
into
cmp
and
imul
jl
outsb
inc
jg
inc
fwait
sbb
xlat
in
pop
mov
mov
sahf
pop
mov
jle
xchg
ret
xchg
inc
push
lahf
sbb
adcl
xchg
lcall
xchg
mov
dec
dec
dec
ds
lcall
push
lock
push
fmuls
rol
iret
icebp
or
push
ss
enter
pop
in
jbe
insb
cli
pop
push
xorb
add
mov
inc
mov
pop
pop
jg
aam
xchg
inc
mov
pop
jns
and
jae
outsl
shl
sbb
loopne
or
clc
push
jne
loopne
jb
cmp
stc
dec
sbb
dec
fisubs
bound
test
mov
jb
in
add
mulb
scas
rorb
cmp
in
lds
inc
mov
mov
es
imul
push
mov
pop
sbb
lcall
pushf
mov
dec
in
cmpsl
inc
or
fsubrl
jno
add
test
add
enter
xlat
xor
mov
xchg
or
sbbl
sub
xchg
sbb
insl
and
dec
aam
and
mov
jno
pusha
mov
inc
es
pop
inc
or
fidivs
xlat
push
int3
pop
jl
ljmp
xor
ss
cmp
std
call
inc
cmpsl
outsl
sub
jae
outsb
jo
mov
shll
into
lods
sbb
cmpsl
pop
bound
andl
cmpsb
mov
int3
popf
loopne
dec
scas
or
push
pop
into
adc
xor
cmp
popf
imul
mov
orl
dec
imul
push
testb
pushf
dec
fdivrs
jne
inc
ficompl
pusha
ret
jno
or
repnz
testl
scas
jae
dec
ja
popa
fwait
jb
je
daa
inc
jp
lock
xrelease
push
mov
mov
inc
test
imul
jbe
jmp
int3
ret
inc
cltd
roll
addb
pop
inc
push
jmp
aam
sbb
pop
pusha
jne
sub
cmc
test
and
mov
mov
shrb
movsl
outsb
xchg
pop
mov
sub
push
push
in
in
aad
mov
rorl
jg
mov
push
push
jp
xchg
movsl
cmp
pop
cmpsb
add
inc
lods
notb
add
pop
sar
push
jnp
testl
fnsave
push
arpl
ret
push
ja
loope
jmp
add
xchg
hlt
arpl
stc
xchg
push
mov
inc
dec
jns
jg
inc
mov
jns
es
in
mov
cmp
andb
in
mov
lock
sbb
pop
pop
call
xor
jp
and
and
pop
pop
inc
gs
sbb
das
insb
pop
je
sbb
sbbl
arpl
xor
mov
dec
outsl
sub
loop
push
mov
sub
pop
orb
inc
adcl
lret
dec
add
mov
jae
mov
push
test
sbb
iret
jmp
dec
mov
repz
movsb
gs
mov
push
mov
jl
push
mov
mov
testl
sbb
sub
lcall
cmpsb
cmp
push
mov
scas
xchg
jo
fistpl
mov
mov
add
mov
mov
mov
sub
add
xor
dec
scas
in
ds
xor
je
inc
jmp
fwait
push
mov
add
daa
data16
shrl
xor
xor
ja
and
xchg
push
fsubrl
cmp
js
adc
mov
push
cmc
push
loope
aas
enter
jg
push
mov
aaa
inc
or
test
shrl
add
test
aad
cmp
add
pusha
lcall
pop
mov
dec
enter
test
adc
or
cli
popf
aaa
cltd
cmp
daa
mov
mov
cli
lcall
jbe
mov
sbb
cli
add
ja
leave
dec
add
out
mov
fdivs
fisubs
jbe
adc
fld
scas
mov
jp
lods
or
test
mov
inc
add
imul
sbb
sbb
cld
aaa
sahf
or
fucomp
scas
fcmove
sub
aad
cmp
inc
andb
popf
test
cs
cmpsb
adc
in
pop
xor
mov
out
out
and
mov
xchg
mov
fadd
dec
leave
aad
aaa
push
jns
repnz
rol
add
or
or
je
push
and
lea
aad
rcrl
mov
cld
arpl
mov
out
daa
cmp
jnp
add
rcll
enter
inc
sbb
pop
pushf
xor
scas
leave
or
jp
mov
jge
lods
dec
frstor
icebp
cmc
filds
xlat
inc
push
stc
mov
xchg
lret
das
loop
rcr
lahf
out
mov
inc
cld
mov
mov
pop
inc
cmc
jnp
lea
dec
inc
inc
mov
sbb
sbb
cmp
js
testb
mov
fcoml
cmc
divb
cmp
push
ffree
lods
je
jp
les
pop
lret
sbbl
jo
sbb
push
or
dec
sbb
push
jg
mov
mov
add
outsl
iret
xchg
ds
xchg
jae
fldenv
ds
pop
je
xorb
addl
push
es
mov
bound
mov
out
int3
movsl
in
sbb
sbb
iret
dec
fwait
pusha
or
stc
add
int
jnp
push
jb
hlt
xor
mulb
mov
jg
push
push
sahf
imul
ret
movsb
shll
xlat
pop
xor
mov
mov
ja
adc
sub
popa
lahf
push
ljmp
mov
jg
pop
add
nop
mov
push
imul
xchg
outsb
outsl
mov
mov
xor
jmp
pop
add
sti
or
cmp
jne
hlt
scas
push
sub
cld
clc
mov
imul
das
cs
movsl
inc
dec
cmpsb
ja
xor
push
adc
cmp
push
sarb
jae
imul
divl
inc
mov
iret
das
fldcw
jnp
scas
xchg
or
push
jae
pop
mov
cmpb
xchg
mov
dec
xchg
std
mov
xchg
inc
xchg
sub
test
dec
lcall
add
cli
and
out
inc
pop
push
ret
and
fistl
mov
push
xor
adc
jae
sbb
cmc
pop
js
es
fwait
sbb
sub
inc
mov
mov
push
in
and
push
shr
push
sub
inc
imul
out
sub
dec
ret
aas
fsts
stos
pop
fwait
dec
lcall
sub
xor
or
push
jo
outsl
xchg
arpl
xchg
mov
dec
xchg
jp
stos
fcmovb
out
dec
push
idivb
test
cmp
pop
cmpl
stc
jp
pop
fnstenv
sub
je
inc
je
push
xor
movsl
and
fwait
pop
lea
pop
mov
iret
sbb
sahf
push
push
sbb
test
pop
imul
and
outsl
insl
cs
mov
sub
outsl
fs
lods
mov
sbb
jae
adc
add
hlt
test
leave
mov
jns
cmc
mov
pop
mov
inc
shlb
lret
lar
in
jae
lods
inc
ljmp
sbb
mov
scas
sbb
sub
ret
push
jns
hlt
addr16
jl
in
push
cmp
and
pop
or
call
jnp
xor
lahf
imul
imul
stos
ja
icebp
faddl
dec
dec
push
stos
push
daa
hlt
push
push
xor
shl
cmp
and
out
xlat
movsb
aas
repnz
lods
push
rcrl
xchg
sub
cmp
aas
pop
lea
push
jbe
sbb
xchg
xchg
addr16
jo
testl
jb
hlt
xchg
sbb
std
push
inc
pop
push
mov
mov
or
or
push
dec
push
out
mov
push
add
mov
cmp
add
icebp
xchg
sbb
pusha
xor
and
jecxz
je
or
xor
sub
frstor
in
jmp
dec
sub
adc
int3
outsb
rcl
subb
xor
pop
ret
lods
push
mov
repnz
aam
cmc
icebp
ljmp
inc
push
push
lods
mov
mov
adc
int
xchg
fs
xor
cmp
psubd
test
cmp
and
ret
sub
mov
sbb
pop
pop
lcall
aaa
scas
fwait
cld
and
lea
mov
jmp
scas
gs
mov
and
and
jbe
cmpb
leave
pop
cmpb
jae
or
pop
dec
dec
xchg
cmp
mov
jo
pop
cmp
jbe
icebp
fiaddl
lock
test
test
xchg
push
and
iret
fwait
or
mov
jbe
mov
mov
dec
sahf
mov
push
int3
je
mov
shrb
roll
pop
mov
fs
imul
repnz
xor
movsb
xor
in
fmuls
scas
mov
adc
rol
sub
sahf
js
out
jl
arpl
adc
out
outsb
mov
rcr
sub
sbb
sbb
test
xor
mov
sub
dec
and
pop
push
jp
filds
xlat
iret
pop
or
pop
int
and
cltd
loope
lds
cmp
push
lret
adc
leave
addr16
inc
cmp
lods
call
enter
mov
jb
cmc
pop
add
fildl
mov
mov
inc
jle
adc
lea
lcall
lods
ret
push
cmpsl
inc
cli
sub
outsb
or
adc
add
xor
pop
sahf
adc
insl
in
imul
scas
inc
bound
inc
push
test
aas
popf
mov
inc
mov
cltd
push
sbb
and
lods
and
dec
stos
xchg
ds
push
icebp
adc
cmp
fildl
pop
push
mov
mov
into
and
into
sti
lret
cltd
iret
push
xchg
jmp
insb
jbe
xchg
mov
shlb
popa
bound
not
jae
div
push
popa
nop
push
inc
ret
dec
nop
insb
sbb
push
test
mov
lock
data16
mov
scas
mov
mov
test
adc
test
lea
sub
push
mov
mov
or
leave
pop
testb
lret
xlat
inc
ss
scas
insb
mov
lahf
out
push
jge
xor
inc
lret
or
mov
jge
xchg
lret
aas
adc
push
cmp
ret
pop
cli
xchg
jecxz
inc
sbb
xchg
ffreep
pop
pop
faddp
shrb
aad
add
mov
clc
fisttpll
mov
lahf
test
or
pusha
test
popl
shlb
repnz
xor
or
es
adc
add
dec
lods
mov
inc
or
jl
lahf
ficoms
adc
loope
cwtl
popa
mov
insb
out
or
or
scas
push
dec
mov
fisubrs
mov
fildll
jmp
xchg
mov
leave
inc
in
and
repz
loopne
dec
push
inc
mov
dec
adc
shl
sbb
mov
imul
mov
mov
sbb
out
xchg
push
fildl
lods
mov
ret
mov
test
inc
xor
das
sub
fwait
xchg
incb
lods
sub
and
popa
lods
jle
int
dec
xor
pop
mov
fldenv
jmp
outsb
inc
dec
faddl
push
fucomip
and
or
cmpsl
clc
dec
out
inc
push
ds
sbb
or
push
gs
mov
sub
push
cmp
pop
xor
pusha
sbb
jl
xchg
movsl
or
iret
imul
int3
mov
mov
jg
pushl
test
dec
xorb
adc
inc
inc
ss
test
arpl
ljmp
imul
cmp
test
hlt
or
test
ss
cltd
loop
push
std
xchg
js
lods
clc
cmpsb
orl
xor
push
cld
mov
loop
inc
and
xor
xor
loop
or
inc
int3
or
int
sub
lods
mov
pop
xor
shll
cmpsb
lcall
popa
or
rorl
sarl
xlat
mov
jo
mov
je
jae
repz
repnz
push
push
mov
call
int3
mov
xlat
mov
mov
jle
pop
ss
pop
into
pop
fucom
sbb
daa
jp
jbe
push
jp
nop
jle
adc
pop
sub
jmp
sbb
xchg
mov
aam
or
scas
or
sub
loope
dec
lods
sbb
cmp
push
repz
push
mov
xchg
fldcw
aaa
ret
xor
repnz
test
fcomps
pop
adc
cmp
int
out
cltd
xor
add
mov
mov
mov
and
hlt
daa
add
aas
push
lret
or
mov
jle
sub
jmp
aam
mov
adc
mov
sbb
jmp
loopne
enter
jmp
roll
push
fisttpll
in
adc
lock
dec
enter
dec
push
mov
out
jno
sbb
scas
mov
pop
xchg
icebp
inc
test
repz
fisttpl
and
sub
mov
mov
scas
mov
test
fcoms
sbb
mov
jp
or
mov
addr16
movsl
iret
push
aad
pop
subl
adc
ds
roll
stos
xor
sti
jne
nop
sub
inc
lcall
dec
loop
and
inc
bound
push
xchg
push
rcll
jb
fwait
jl
popa
mov
ret
xor
out
test
rcll
sub
xlat
pop
adc
jne
mov
popa
jge
cmpsl
loop
rcll
dec
inc
push
and
push
lds
xchg
push
adc
loop
pop
jle
jg
mov
jne
sbb
arpl
call
pop
data16
push
insl
lret
in
ret
cmp
add
and
mov
ljmp
stos
lea
jns
jo
jg
adcl
xchg
call
xchg
push
or
ret
and
jecxz
decl
cmc
aas
int
scas
xchg
iret
lods
jecxz
xchg
ret
xchg
scas
ret
fwait
cwtl
and
leave
fwait
inc
cltd
aam
fcomps
pushf
movsb
sub
add
push
lods
repz
loope
mov
loop
xor
insb
push
adc
xchg
xchg
rcr
stos
or
imul
data16
add
negl
mov
sub
pop
scas
fldcw
mov
jne
push
xchg
hlt
mov
dec
mov
xchg
jns
or
iret
mov
scas
mov
add
mov
test
cwtl
sbb
movsb
bound
test
inc
out
divb
jle
sbb
pusha
sti
test
and
and
lods
cld
jg
sbb
lahf
fidivl
ficoml
sub
fwait
xchg
lock
adc
jmp
adc
mov
ror
dec
mov
jo
sub
jmp
mov
fcmove
cs
inc
jecxz
adc
push
imul
mov
popf
dec
out
xchg
cltd
jmp
cli
aad
or
mov
cmp
cltd
add
aam
xor
cld
enter
inc
dec
and
fadd
loopne
push
call
scas
js
fnop
xchg
mov
dec
sub
cmc
jbe
or
jo
sub
sahf
call
std
cmp
add
push
xchg
bnd
push
lret
les
jecxz
ljmp
push
inc
scas
fstpt
inc
xchg
das
bound
cmp
nop
inc
adc
push
xchg
lods
mov
aad
mov
and
addl
les
pop
test
jg
repz
jae
jmp
dec
push
sub
cmp
popa
lcall
imul
mov
push
idiv
lods
lahf
sbbl
push
sbb
inc
pop
push
in
dec
or
cmpsl
and
test
xor
pop
xor
jl
leave
call
sbb
in
hlt
sub
in
xchg
push
inc
jge
ja
mov
repnz
leave
dec
dec
push
push
fidivs
lcall
js
inc
imul
push
cltd
das
xchg
xor
es
or
jge
int3
or
mov
xchg
std
outsl
in
nop
dec
pusha
sarb
popa
xor
dec
mov
mov
push
sbb
cmp
mov
mov
dec
jns
pop
lret
jno
and
mov
out
fistps
inc
sub
and
mov
and
rol
das
loope
adc
mov
adcb
ret
mov
bound
mov
das
aas
popa
ja
pop
cli
sbb
shr
in
adcb
arpl
test
in
cmp
enter
test
fimuls
ret
push
sbb
inc
lret
jg
or
push
lcall
test
add
out
xor
mov
adc
xchg
mov
xor
cmp
push
imul
xorl
jmp
cld
ja
popa
sahf
xlat
rep
mov
cld
je
inc
push
lea
jmp
mov
ret
bound
nop
subb
xchg
mov
nop
in
scas
sahf
mov
adc
inc
push
ror
cltd
inc
push
jae
cmovl
outsb
jg
in
mov
xchg
pop
jge
lret
cmp
mov
stos
insb
inc
or
or
push
jns
dec
or
in
xlat
stos
sub
repnz
fsubrs
out
cmpl
pop
sub
rcrb
idiv
push
pop
jnp
mov
pop
fstpt
addl
call
mov
push
pop
in
in
cli
jecxz
test
xlat
sub
mov
sti
imul
mov
mov
dec
loop
dec
test
clc
sub
cmpsb
stc
je
jns
add
sahf
push
push
xor
and
xchg
push
ret
push
sbb
gs
je
iret
lods
aam
cli
ds
mov
cmp
jae
pop
mov
hlt
push
jge
jnp
ret
mov
loop
pop
jb
pusha
jno
xor
pop
cmc
push
cmp
mov
lcall
in
cmc
ja,pn
test
pop
sub
mov
mov
insb
push
daa
ljmp
cmpsl
xor
pop
or
ret
jge
mov
jnp
loop
sub
aad
and
mov
pushf
mov
es
stos
nop
aad
popa
imul
pop
ss
xchg
into
cmp
jmp
sahf
pop
pop
push
push
in
movb
jns
hlt
mov
jne
fdiv
push
daa
popa
dec
stos
xchg
xchg
cmpl
int
add
inc
notb
pop
js
jecxz
aaa
push
ret
test
mov
inc
adc
je,pn
add
jno,pt
dec
aaa
cmp
pusha
mov
fcoms
inc
mov
mov
les
cltd
jo
shll
mov
popf
cmp
mov
and
and
cld
out
shrb
mov
sbb
decb
jno
iret
jge
add
loope
loopne
or
bound
xchg
mov
lds
xchg
repz
scas
rorb
test
sti
xchg
sarl
and
div
std
cld
cmp
les
mov
xchg
adc
adc
subl
mov
xor
lods
cld
xchg
and
in
mov
mov
adc
pop
loopne
or
movsb
jmp
negl
xchg
roll
adc
xchg
sbb
addr16
mov
cli
inc
mov
arpl
pop
or
repnz
push
xor
jb
ljmp
xor
mov
jl
pop
push
shll
xor
xchg
hlt
xchg
xchg
mov
mov
mov
sub
cld
leave
dec
rclb
push
shr
cwtl
imul
sub
dec
test
xchg
xor
lds
mov
cmp
sti
lcall
cmp
adc
cwtl
dec
adc
cmpl
cmp
lret
popa
orl
mov
push
inc
popf
and
jg
or
xchg
in
xor
push
dec
imul
out
pop
mov
jp
jns
jg
repz
dec
aaa
pop
loopne
and
call
mov
cmp
daa
sbb
rcrl
std
jb
push
jo
addr16
ja
mov
jge
mov
leave
sbb
adcl
cltd
cltd
cmp
jo
mov
push
aaa
mov
outsl
lahf
pop
pop
push
cmp
xor
js
jo
arpl
mul
fstpt
test
jecxz
push
sub
sub
or
shrl
in
imul
cld
loop
and
jecxz
sub
dec
jb
or
push
test
rclb
dec
push
shll
ljmp
mov
cmpsb
stos
mov
lods
mov
adc
js
stc
inc
ljmp
in
xor
dec
out
sbb
fs
jmp
test
pop
xor
stos
push
mov
loopne
jl
xchg
mov
mov
dec
sbb
sti
pop
pop
gs
outsb
jne
ficomps
aad
lods
mov
or
dec
push
adc
jne
gs
add
push
dec
out
pop
or
dec
mov
dec
mov
mov
stos
jno
add
sbb
imul
shlb
faddl
data16
into
ljmp
mov
das
ja
pop
xor
filds
or
sbb
xor
mov
addr16
imul
xchg
jne
ret
out
xchg
aaa
or
imul
addr16
mov
mov
les
jmp
mov
cmpb
aam
lret
rcrb
and
or
and
hlt
pop
pop
mov
fisubrs
filds
std
pop
xchg
lret
or
stos
out
fildll
mov
adc
gs
sbb
inc
adc
xchg
repnz
xchg
outsl
push
stos
arpl
stc
mov
mov
sahf
mov
mov
mov
mov
lock
inc
mov
adc
xchg
or
ret
xchg
xor
mov
shll
fldl
mov
mov
and
fs
push
mov
loopne
in
cli
xchg
not
add
in
jp
stos
push
jae
mov
push
jae
inc
sub
mov
mov
pop
adc
jae
neg
or
pop
pop
js
pushl
push
jp
fwait
dec
int3
sbb
adc
xchg
xor
xor
insl
mul
dec
dec
iret
add
mov
jge
ja
pop
fsubr
cwtl
xor
pop
loope
enter
push
mov
movsb
mov
xchg
notb
cltd
jb
push
dec
mov
loop
mov
test
dec
addr16
dec
test
dec
jp
xchg
xchg
xchg
leave
rcll
pop
or
popf
into
out
js
pop
pop
xorl
mov
lret
cld
sub
mov
xchg
pop
xchg
xorl
aad
pop
add
cs
dec
jle
pop
stos
inc
adc
xchg
sub
cmp
cmp
mov
insl
rorb
xchg
outsl
xor
loop
jmp
cmpsb
fsubrl
jg
sub
cmpsl
jns
popf
cli
xor
leave
sub
out
cmpsb
adcb
jo
or
cmp
ror
icebp
mov
xchg
fwait
scas
mov
jno
xor
and
sbb
mov
or
imul
and
adc
bound
push
rorl
mov
cmp
outsl
or
ficoms
dec
shrb
lea
xor
arpl
mov
repnz
and
ljmp
xor
and
js
xchg
jnp
pop
inc
pusha
sbb
out
fs
imul
lret
mov
adc
cltd
jmp
cmp
bnd
push
and
out
shrb
int
push
fadd
adc
test
cmp
adc
mov
jo
out
cmp
movups
inc
clc
inc
jle
or
xorl
arpl
adc
enter
cmpsl
stos
icebp
fstl
and
in
pop
rcr
cmp
xchg
and
sbb
lods
int
push
popf
lods
xchg
push
sbbl
dec
lret
adc
rol
mov
int3
adc
mov
aad
scas
push
and
cmp
push
ret
aam
inc
cmp
lret
xor
or
mov
mov
stos
shrb
arpl
and
lods
mov
xor
dec
movsb
sub
pop
ret
mov
pushf
clc
nop
mov
popa
int3
scas
js
mov
mov
repnz
lahf
cld
push
les
outsl
and
and
test
test
orb
inc
pop
loopne
js
dec
clc
and
jl
pop
cwtl
das
das
pop
jno
shrl
pushf
mov
add
cmp
xchg
jb
mov
mov
icebp
mov
mov
fisttpll
repz
sub
ret
mov
dec
push
dec
xor
hlt
fdivr
or
sbb
jle
iret
inc
pop
repz
push
adc
dec
es
or
testl
inc
xor
sub
test
jne
mov
adc
mov
pop
add
mov
mov
aad
cli
es
dec
or
mov
push
or
mov
pop
dec
cmp
jo
loop
jae
shll
xchg
ja
pop
in
lea
mov
pop
insl
dec
and
and
bound
add
jg
cmc
cs
mov
jg
inc
adc
sub
in
in
jmp
cmp
inc
mov
loope
in
in
pushl
jae
sbb
pop
push
sbb
jnp
aam
dec
test
inc
mov
stos
je
jae
mov
or
lahf
pop
add
push
cmp
inc
sub
sbb
mov
jo
xchg
out
pop
inc
cmp
je
jl
mov
jae
xor
mov
mov
push
pusha
mov
sub
and
sub
dec
or
fwait
icebp
add
dec
pop
fsts
pop
sarl
jb
add
pextrw
or
ja
cmp
pop
call
dec
mov
testb
std
cwtl
hlt
in
fs
cmpsb
mov
xor
push
jl
mov
lds
add
outsl
sti
push
call
mov
xor
cmp
cld
mov
mov
js
cltd
data16
out
jl
lahf
inc
inc
or
and
imul
call
adcl
fwait
cmpsb
pop
add
sarb
mov
push
xorl
rclb
adc
or
add
xchg
pop
jne
or
idivb
aaa
roll
fildll
cmp
jb
fwait
enter
incl
inc
jb
sub
push
pop
adc
or
loope
jb
stos
pop
incb
ljmp
scas
cmp
stos
mov
test
sbb
mov
sbb
push
addr16
fidivs
pushf
cmp
mov
fwait
fs
xchg
push
xcrypt-ctr
add
icebp
pop
sub
push
jbe
insb
mov
xchg
lea
mov
stc
sti
dec
subl
mov
enter
or
add
rcr
gs
hlt
lret
nop
bound
lcall
sub
lods
and
dec
dec
jno
movsb
pop
std
imul
mov
pushf
sbb
popf
testl
shr
pop
add
out
popf
dec
mov
lock
leave
in
sub
and
sahf
cmp
test
gs
mov
pop
shlb
aam
fdiv
lret
pop
rclb
outsb
loopne
add
push
mov
pop
mov
not
and
mov
add
adc
and
popa
dec
adc
mov
jle
shl
fisttpll
cmp
mov
sbb
fldcw
out
out
pop
mov
testb
outsb
rorl
or
cmpsb
and
cmp
pop
jns
imul
mov
push
cmp
in
xchg
out
out
push
inc
in
aam
add
in
mov
popf
inc
dec
adc
xchg
ficompl
dec
xchg
jp
std
jg
data16
cmp
mov
ret
lret
nop
sbb
out
fwait
in
fsubr
or
push
aam
mov
leave
xor
dec
ljmp
lret
das
add
mov
cmp
add
movsb
push
inc
adc
les
in
jb
or
stos
and
ja
xchg
adc
in
orl
imul
push
nop
test
adc
and
mov
inc
xchg
fsts
and
or
cmp
or
subl
xchg
mov
jp
scas
mov
pop
or
cmc
faddl
in
outsb
aam
fs
push
out
out
cltd
ret
shrl
adc
je
push
js
or
dec
out
jne
push
xchg
inc
xor
jmp
aas
int
lods
xchg
mov
shlb
clc
mov
jge
push
mov
ljmp
xorl
jg
sbb
incb
loope
cltd
dec
sub
cltd
push
in
loop
std
out
mov
jbe
popa
popa
adc
outsb
rclb
sbb
sar
hlt
mov
sbb
inc
sbb
sub
lret
adc
cwtl
clc
shll
pop
inc
jecxz
push
mov
insb
pop
push
std
mov
xchg
and
ja
mov
xor
xchg
add
enter
sbb
std
div
les
jns
out
push
or
data16
test
bt
cmp
inc
or
fcmove
mov
push
sar
pusha
mov
loop
push
inc
inc
dec
push
cmc
jbe
mov
mov
push
cs
dec
call
repz
push
sbb
mov
das
push
bound
subb
xchg
adc
mov
or
xchg
inc
jns
test
aaa
call
jb
test
mov
adc
icebp
xchg
testb
cmp
push
jp
flds
add
pop
jae
shlb
xor
or
mov
stos
test
adc
add
xor
roll
cwtl
jle
xor
cmp
sbb
repnz
cs
insb
mov
insl
add
icebp
insb
jmp
outsb
inc
pushf
popl
hlt
cmp
sub
test
pop
cmp
cmp
subb
inc
testb
or
push
cmp
push
mov
arpl
insl
ret
mov
adc
adcl
scas
jl
mov
add
enter
insl
mov
clc
pop
test
xor
dec
jae
arpl
mov
xchg
cmpsb
xchg
mov
mov
jo
cld
xorb
jb
pop
out
pop
addr16
and
das
addr16
or
loope
shl
adc
js
xchg
scas
jmp
pop
lahf
scas
aas
repnz
sub
cmp
sub
sub
sbb
mov
fisubs
in
xor
rclb
sub
in
stos
mov
sbb
sbbb
int3
or
sahf
jno
pop
cmp
fisubrs
dec
stos
sub
inc
dec
lcall
mov
pop
aam
dec
ficompl
xchg
in
aaa
imul
inc
xorb
and
push
push
bnd
xchg
pusha
ret
inc
outsl
iret
imul
imul
inc
pop
push
repz
inc
cs
lods
add
out
fiadds
mov
pusha
pop
xor
or
cltd
sub
aaa
jno
cwtl
mov
pushf
push
or
insl
jae
dec
test
inc
adc
leave
js
jbe
andb
or
pushf
push
test
add
jge
sbb
adc
push
push
or
cld
mov
adc
mov
push
palignr
sbbb
shll
repz
pushf
shr
cmpsl
outsb
in
je
adc
mov
aas
push
sub
inc
mov
rorb
push
pop
fdivs
loop
mov
push
add
inc
mov
xor
popa
lock
call
pop
xor
cmp
mov
shll
push
je
add
push
sub
xchg
inc
les
gs
xchg
call
pop
and
popf
sub
mov
ret
xlat
aad
in
outsl
in
cmp
mov
or
mov
popa
shr
test
test
cmp
cs
test
or
push
sub
pop
xor
pop
jg
mov
jne
push
push
cmp
pusha
adc
xor
cmp
cmc
loope
mov
cmp
jge
mov
jg
and
es
jo
sahf
jle
aas
scas
jno
xor
xor
icebp
and
popf
dec
in
xor
pop
mov
or
mov
in
stc
mov
mov
sahf
sbb
out
jae
outsb
pop
gs
lret
jg
pop
mov
dec
fldl
pop
outsb
push
es
pop
ja
jbe
rcll
ja
iret
test
sbb
sahf
jbe
jge
test
aaa
push
mov
dec
jle
dec
popa
cmc
pop
dec
mov
adc
decb
xor
pop
jmp
ret
sti
mov
call
aam
jnp
push
les
pop
aaa
ljmp
cmp
sub
mov
adc
adc
cmc
mov
xchg
repz
lret
sbb
mov
jecxz
rcrb
fsubr
cmpb
movsl
mov
dec
rcr
int3
cltd
cmpsb
add
pop
pop
mov
in
mov
imul
inc
push
popl
test
fs
jle
or
shr
in
mov
insl
xchg
addb
mov
xchg
cli
jb
ret
test
jmp
mov
mov
lods
mov
lea
enter
aas
into
out
adc
enterw
stc
mov
cld
ljmp
cwtl
int
mov
mov
sub
cmp
push
cmpb
das
xor
test
dec
mov
pop
movsl
dec
jecxz
ss
loope
sti
stos
sub
cmp
inc
in
xchg
jb
lods
xor
push
mov
push
and
addr16
xchg
mov
sbb
decb
test
push
pop
sbb
lret
add
stos
sbb
pop
pushf
jae
mov
addr16
sub
sbb
push
repz
or
test
cld
ficoml
lock
lahf
test
mov
fldl
ret
nop
scas
sub
insb
lret
aad
pop
ja
mov
cmc
mov
cmc
mov
in
cwtl
das
mov
sbb
add
xchg
inc
int
call
iret
xchg
repnz
inc
inc
into
adc
mov
xchg
cmp
cltd
add
jo
scas
scas
pop
or
shll
andl
xor
sbb
dec
sub
aad
push
outsl
adc
mov
inc
cmpsl
bsf
or
or
dec
xchg
pop
stos
sub
push
lds
push
pop
inc
lock
or
mov
mov
pop
mov
clc
dec
outsb
fildl
inc
push
fsub
stos
call
and
fs
mov
insb
or
mov
add
stos
out
scas
movsl
mov
xchg
sbbb
lods
cmp
mov
or
lds
movsb
andb
mov
mov
bsf
cmp
ret
push
notb
and
and
sar
stos
pop
lret
jns
das
andb
ds
in
or
rorb
and
jmp
mov
loop
stc
dec
fcmovu
es
pop
jg
pushf
std
sub
xchg
loope
mov
cmp
int3
cmp
dec
add
push
fmul
jnp
mov
and
sub
test
xchg
jo
hlt
ret
or
sbb
lret
popf
xchg
ds
rclb
cmp
cmp
xchg
jae
jne
icebp
mov
dec
data16
or
test
popa
into
pop
inc
adc
outsl
dec
mov
jno
scas
outsl
lcall
lock
sbb
adcl
push
sbb
popf
lds
mov
mov
sbb
stos
lret
xorb
in
mov
scas
mov
xchg
xor
xor
iret
fistps
or
stc
push
cmp
mov
jnp
and
push
icebp
adc
ret
and
outsb
xor
cld
or
add
cmpsl
sbb
cmp
or
push
aam
enter
jcxz
popa
ljmp
dec
rorl
leave
cmp
cmp
and
xchg
inc
das
fs
test
pop
es
pop
into
and
sub
imul
pop
clc
lds
inc
dec
xchg
adc
jmp
ss
aas
lret
push
xchg
sarl
jge
cwtl
dec
mov
lret
cld
les
push
xchg
xchg
addr16
test
dec
decl
js
cld
mov
in
repnz
xor
rcl
bound
into
inc
add
sbb
adc
push
mov
test
sbb
addr16
xchg
mov
nop
sarl
iret
in
cmp
je
test
shrl
outsl
sarl
fmuls
loopne,pn
pop
fwait
mov
fdivl
fldt
cmpsb
js
mov
xchg
sbb
lret
mov
gs
jecxz
stos
push
jl
xor
jp
shll
mov
push
and
fmuls
adc
sub
stc
and
dec
pop
and
add
mov
les
sbb
mov
push
repz
imull
sbb
fdiv
lret
jnp
or
cld
cmp
or
shrb
movsl
inc
imul
mov
fists
and
push
shrb
enter
jecxz
pop
push
xlat
add
pop
or
xchg
mov
pop
inc
push
cmpsl
std
sub
outsb
add
jno
adc
hlt
jmp
sbb
dec
sahf
mov
cmp
sbb
pop
xchg
jns
pop
fwait
lock
inc
jnp
orl
fsts
inc
jp
mov
or
in
scas
roll
add
jmp
subb
mov
pop
jo
arpl
cli
mov
stos
imul
xlat
test
xchg
mov
pop
mov
xor
cmp
push
sub
sub
fxch
lods
adc
lods
xchg
pop
cmp
divb
rcr
or
outsb
mov
mov
mov
push
sahf
inc
jg
imull
clc
out
insb
rclb
or
stc
cld
adc
stos
cltd
call
ret
test
or
aam
adc
mov
outsl
and
sar
pop
push
aad
stos
adc
bound
mov
lret
stc
popf
fidivl
mov
xchg
sub
test
add
mov
push
or
xchg
jbe
leave
or
loopne
push
hlt
xorb
add
iret
lods
scas
mov
jo
addr16
lods
pop
or
mov
in
insl
cli
int3
out
into
movsl
mov
call
sbb
cmp
sbb
pop
mov
sub
cmp
popf
or
inc
ret
test
mov
lret
je
andl
lcall
cmp
lea
mov
js
sbb
cmpsl
dec
mov
mov
data16
mov
jge
pop
push
loop
lret
pusha
fadds
ljmp
jg
ljmp
in
inc
xchg
inc
call
mov
xchg
inc
enter
fsubl
gs
rolb
fldt
mov
dec
xor
rorb
testb
jns
cmp
sbb
pop
lret
bnd
xchg
push
mov
enter
pop
and
fs
mov
into
inc
add
push
push
cs
dec
scas
mov
imull
push
jle
inc
fmull
push
add
ljmp
push
scas
fnsave
shrd
lock
pop
aam
push
fstpt
cmp
mov
pop
lret
movsl
lods
imul
fstpt
leave
test
pop
cmp
int
jle
push
test
xor
pop
push
sub
call
lea
mov
lods
mov
ret
push
dec
scas
add
xor
pop
das
sub
dec
aas
fsubp
mov
mov
sarl
push
scas
mov
dec
lock
inc
lods
push
pop
out
dec
mov
pop
mov
add
in
les
fmulp
int3
shrl
xchg
push
into
xor
ds
js
pop
idivl
cmpsl
ret
aam
xchg
xor
mov
dec
mov
push
test
cmp
fldl2t
cmp
xchg
add
cmp
or
fcoms
mov
cmp
int3
cmp
ja
xor
xor
mov
push
adc
sarb
mov
testb
jg
mov
jo
xchg
arpl
jp
icebp
mov
in
rorl
es
fmull
aas
repnz
mov
ret
xchg
add
pop
jo
xor
mov
popf
inc
dec
mov
adc
jmp
sbb
sub
or
test
jae
mov
xor
mov
aas
xor
xor
in
repnz
insl
adc
aam
mov
leave
mov
push
mov
sbb
cld
inc
pop
jae
bound
incb
add
les
or
xchg
test
mov
cmp
test
lock
pop
inc
and
jge
clc
push
fildll
shr
loopne
aas
out
push
fwait
stos
mov
popl
sbb
mov
in
daa
mull
leave
stos
aam
pop
mov
loope
cmp
xor
xchg
lea
inc
jae
push
out
mov
adcb
mov
and
pop
xorb
mov
mov
mov
dec
mov
call
adc
stc
ja
xchg
mov
mov
inc
inc
scas
je
fnstcw
push
push
addr16
jg
jp
adc
pop
mov
inc
enter
movsb
sub
loop
lcall
jle
les
push
andl
dec
test
add
movsl
fists
jnp
push
mov
cmpsl
sbb
cs
jnp
ljmp
xor
jo
out
xor
sub
xchg
jne
out
xchg
aad
inc
jl
jbe
mov
fldt
and
stc
mov
ss
movsl
xchg
sub
jmp
sbb
out
push
sbb
add
mov
push
andl
sbb
scas
push
and
cmpsl
xchg
lahf
jae
sub
aam
mov
sbb
push
push
lea
test
sarb
xchg
shll
movsb
jl
mov
notb
xorb
push
test
loop
lods
add
cltd
sbb
frstor
aaa
shll
jmp
push
daa
loope
rcr
push
daa
in
mov
ja
mull
or
mov
jmp
xchg
nop
insb
sbb
pop
xchg
std
push
mov
cmp
insl
push
jge
jmp
adc
gs
nop
aam
cmpsb
rcrl
xchg
rolb
cmc
cld
ljmp
mov
xchg
pop
mov
ror
fisubl
hlt
push
sbb
adc
sti
pop
lods
aas
out
mov
cmc
pop
cmpsb
inc
push
jne
test
test
cli
stos
mov
add
xchg
nop
push
jne
jge
test
xchg
xlat
shll
mov
xor
cmpsb
jl
jmp
mov
mov
jns
add
and
out
xchg
arpl
in
outsl
or
dec
mov
cli
es
ljmp
inc
and
dec
sbb
lret
jb
inc
push
dec
arpl
fistpl
dec
push
pop
test
mov
xchg
mov
push
loopne
xor
pop
std
push
xor
call
mov
icebp
or
pop
enter
stos
pop
push
fdivl
cmp
popf
enter
lock
ss
jl
test
dec
jns
cmpsl
sbb
mov
shll
mov
push
out
jns
popa
add
or
cmpsb
adc
mov
sbbl
jecxz
aad
and
lock
inc
cltd
cli
or
or
mov
cmc
dec
jne
push
push
subb
leave
dec
test
dec
fsubr
mov
or
mov
xchg
dec
in
lret
imul
and
pop
scas
push
sbb
pusha
andl
fs
call
in
mov
mov
jno
add
push
pop
lret
mov
cmp
inc
or
jne
cmp
ds
dec
jbe
and
bound
and
shll
jnp
xor
fsubl
stc
loopne
xor
mov
loop
sub
pop
adc
fwait
pop
pop
scas
mov
shrl
test
mov
jl
jp
icebp
movsl
int
mov
fnsave
jl
mov
mov
fimuls
and
xor
test
lret
fldenv
mov
sbb
ljmp
inc
leave
ljmp
dec
aam
adc
sti
push
bound
popf
push
cmc
ret
cmp
jmp
jbe
mov
sti
popa
insb
mov
push
int
jle
pop
cltd
inc
push
xor
sbb
xchg
jno
test
jo
int3
cli
adc
xor
sub
push
hlt
call
jae
dec
jbe
mov
cmp
mov
movsb
je
frstor
and
test
in
sbb
jle
leave
scas
push
repz
mov
inc
cltd
pusha
imul
js
and
lea
arpl
out
xor
imul
push
mull
mov
jo
mov
push
andl
inc
sbbb
lea
lods
popa
test
dec
jnp
std
pop
add
cmpsb
and
inc
adc
sub
xor
adc
das
inc
in
jae
out
dec
adc
add
add
loope
loopne
push
dec
popa
mov
into
inc
mov
or
stc
or
icebp
xor
and
aad
sbb
les
push
cmp
mov
inc
lods
and
ret
mov
scas
dec
out
jmp
aam
push
or
aas
mov
xor
loopne
pop
fwait
adc
xorl
or
gs
aad
lods
mov
jmp
mov
sahf
shlb
xor
cs
pop
leave
inc
sar
shlb
shll
shl
sub
and
push
lret
xchg
cmpl
mov
cmp
ret
mov
lock
icebp
and
xlat
fdiv
xlat
cmc
test
push
mov
cmp
or
int
inc
in
pop
push
mov
cmp
sub
push
sbb
les
sbb
pop
pop
xor
sbb
imul
dec
in
jle
sub
sbb
xor
mov
mov
push
ss
lret
mov
es
xor
mov
push
sahf
push
repnz
dec
leave
notb
mov
adc
mov
and
mov
sbb
pop
adc
fs
xchg
add
das
sar
jmp
xor
pop
or
mov
in
push
mov
push
inc
mov
pop
test
cmp
jmp
test
lds
mov
mov
shr
arpl
mov
fdivr
addl
push
ljmp
in
nop
fsubrl
pop
and
addl
xor
dec
adc
mov
sti
imul
fwait
rorl
fiadds
pop
sbb
add
arpl
cld
aas
and
test
mov
dec
pop
ss
test
imul
pop
adc
scas
xchg
iret
shl
std
and
pop
out
scas
dec
or
cltd
imul
rcrb
jne
pop
es
mov
lea
sbb
xlat
out
stc
imul
fdivl
adc
mov
cld
mov
jmp
scas
imul
add
rclb
dec
cmp
ret
popf
cmp
out
jmp
scas
lods
call
mov
xchg
mov
lock
lret
loopne
pop
push
add
sub
dec
inc
in
adc
lds
test
popa
testl
pusha
cmp
repnz
mov
mov
cmc
sti
sbb
jge
sbb
idivb
xor
push
aaa
shlb
fnstenv
addb
dec
push
xchg
adc
jg
jmp
mov
fwait
cmc
pop
mov
outsl
pop
stos
shrb
mov
out
out
jp
dec
xor
pop
jns
outsb
inc
add
push
repnz
bound
sarb
jne
call
mov
ficoml
mov
lds
xor
mov
adc
push
mov
xor
cmp
ret
sub
sbb
push
mov
mov
jp
xchg
cmp
js
sub
fadd
fscale
mov
je
push
xchg
sub
dec
cld
ret
ficompl
je
cmp
notl
mov
popf
and
lods
insl
js
lods
and
ljmp
aas
inc
adcl
and
sbb
xchg
mov
cmpsb
jae
nop
push
cs
sub
pop
mov
jecxz
inc
stc
fwait
and
fsubrl
pop
and
call
loope
add
xor
and
mov
sbb
ret
mov
sbb
call
sub
icebp
fiaddl
scas
sbbb
stos
jno
cmp
mov
push
lods
pop
movsl
mov
out
ljmp
in
adc
incl
jns
daa
pop
das
xchg
aad
in
les
scas
test
jg
fcoml
mov
js
rcrb
fsub
mov
imul
jg
mov
cmp
and
or
jmp
xchg
or
pop
mov
pop
bound
mov
push
push
lock
data16
loopne
incl
xor
dec
pop
icebp
mov
pop
int
mov
imul
fyl2xp1
sbb
popa
addb
lahf
mov
int3
es
outsl
lock
sbb
outsb
cmp
push
scas
push
lcall
xchg
inc
out
dec
xor
cmp
xor
mov
pop
sbb
mov
inc
fsubrs
mov
cmp
lahf
push
cmpb
cmp
fisttpll
mov
push
sbb
enter
loope
roll
out
test
adc
xor
xor
and
mov
xor
loope
and
xchg
xchg
xchg
sbb
test
ret
and
and
popf
call
scas
test
repz
add
ss
in
lea
iret
add
int
jp
pop
jne
inc
aam
cmpb
mov
push
adc
fs
in
nop
pusha
xor
mov
xchg
imul
fldcw
loop
add
push
push
sbb
ret
adc
aad
xchg
lds
ja
movsl
aaa
movsl
and
mov
movsb
mov
lods
cmp
rcr
aam
lret
loopne
repnz
push
imul
sub
push
jne
es
pop
push
loop
lock
push
neg
jae
cmp
cli
push
bound
mov
fnsave
rcrl
or
and
dec
pop
out
outsb
in
adc
mov
sub
clc
add
imul
push
sbb
lcall
mov
push
push
xchg
ja
cmp
addr16
push
xchg
enter
jg
jge
mov
jge
jl
cmp
pusha
cmp
in
inc
rcll
adc
pop
sbb
repz
xchg
push
inc
cmc
repnz
arpl
sahf
mov
pop
mov
scas
fildll
shr
mov
mov
xlat
xchg
sbb
ljmp
sub
push
ds
je
adc
mov
shll
dec
in
test
mov
and
jne
sub
mov
iret
xor
lahf
ret
js
cwtl
adcb
push
or
cmpsl
ficompl
jecxz
std
pop
adc
cld
push
aad
addb
adc
cmp
pop
in
les
cmp
in
xor
insb
inc
jg
daa
push
enter
push
es
ljmp
mov
mov
adcb
ja
add
push
add
xor
and
cmpsl
lock
cmp
xor
daa
add
ret
lock
pop
jge,pt
sub
push
and
sub
push
loope
mov
xchg
insb
cli
xor
out
pushf
xchg
jle
xor
mov
sub
int
cmp
leave
sub
or
adc
jb
stc
inc
mulb
clc
push
and
cmpb
mov
push
int
mov
inc
lods
jnp
xor
pop
mov
or
jne
icebp
les
pop
lods
xor
mov
push
xchg
roll
cmc
add
adc
mov
les
idiv
adc
cld
lcall
push
js
mov
push
cs
test
andb
mov
mov
les
sbbb
sub
jl
jns
pop
out
ror
xchg
add
xor
lock
jo
and
dec
movsl
stos
pop
outsl
mov
movsl
out
adc
or
loop
adc
mov
jo
sub
fidivrl
stos
pandn
adc
imul
add
and
push
and
aam
sub
sub
and
imul
pop
ja
sbb
cltd
cmpl
xchg
fxch
add
rclb
es
or
lret
loope
cmpsb
xor
and
cmp
mov
inc
xor
cmpsb
pop
cmp
pop
mov
mov
xchg
mov
call
fnsave
aaa
dec
sbb
test
add
xor
push
inc
std
push
lods
lods
add
or
jo
in
aad
fistpl
sub
cwtl
cmp
mov
mov
xchg
sbb
pop
add
sahf
push
decl
mov
je
push
mov
sub
jne
stos
addb
jge
mov
xchg
iret
arpl
xchg
xor
jb
movsl
movsl
pop
fists
int3
push
jl
orb
and
pop
or
cmp
shlb
xor
lock
and
bound
sarl
xchg
adc
mov
cltd
sub
outsl
subl
push
sbb
std
fbld
loope
icebp
push
mov
cwtl
pop
sub
gs
jbe
sbb
or
and
add
rorb
loop
es
lock
outsb
enter
adc
jmp
pop
es
cltd
inc
or
push
es
mov
add
leave
addb
sbb
movsl
mov
and
add
xlat
fwait
cmovl
lcall
mov
bound
mov
sub
ss
push
xor
sub
int
push
dec
aas
arpl
test
cmp
bound
push
push
sarl
inc
mov
push
ret
push
loope
push
lods
imul
jg
test
mov
pop
out
cmc
or
jno
in
imull
sbb
adc
sub
dec
lret
jle
jne
mov
add
lahf
xchg
test
mov
fcom
fcompl
jmp
adc
inc
mov
int3
or
adc
pop
pop
xchg
push
stos
adc
out
push
push
adc
xor
rcrb
mov
lcall
push
call
addr16
cmp
out
xchg
int
cli
jns
xlat
or
bound
and
shl
adc
cltd
ss
sti
into
xchg
aad
xchg
pop
lcallw
xor
das
scas
pop
fcoms
sub
repz
xor
push
pusha
jmp
xchg
test
or
inc
dec
repz
popa
jl
mov
ficoml
sbb
mov
adc
xchg
lock
fwait
gs
rorb
in
popf
push
cmp
rolb
adc
or
sbb
lea
js
pop
add
and
lahf
xchg
lods
daa
stos
push
bound
push
arpl
pusha
mov
cmp
xchg
scas
sub
inc
dec
ljmp
ffree
rep
mov
sarb
xchg
mov
push
cmc
mov
les
xchg
jecxz
and
cld
dec
cmp
arpl
inc
lcall
xchg
push
push
push
inc
leave
fstp
cs
enter
add
decl
jbe
icebp
jle
int
xchg
sbb
xchg
push
scas
pop
or
mov
flds
orl
mov
mov
out
push
loopne
jne
pop
sbb
andb
rolb
mov
jno
dec
and
add
mov
rorb
fwait
or
cld
enter
mov
clc
outsb
add
pop
insl
jno
mov
push
jnp
in
lock
push
dec
lods
or
mov
and
dec
sbb
mov
add
or
push
or
idivb
adc
inc
add
mov
sbb
adc
incl
stos
je
cwtl
fdivrl
mov
jb
sti
xchg
jmp
insb
or
arpl
daa
cs
pop
insb
outsb
in
lods
scas
sbb
dec
cmp
cld
xchg
int
mov
jmp
fimuls
push
fldcw
cld
jb
mov
cmpsb
loop
in
or
and
sbb
cwtl
adc
out
aaa
lock
stc
les
cwtl
xor
sbb
sbb
scas
aam
xor
dec
int3
jecxz
iret
xchg
fs
scas
jp
fists
fmuls
icebp
mov
lret
xchg
mov
cmc
ret
push
ret
xor
gs
xor
in
adc
mov
xor
loop
sbb
mov
in
aas
mov
mov
adc
and
adc
stc
scas
cmp
outsb
mov
outsb
xor
jl
adc
in
filds
clc
aam
mov
mov
xchg
stc
push
cmp
scas
add
mov
out
push
push
mov
inc
xchg
mov
push
outsb
addr16
mov
movsl
jge
xchg
out
sub
xchg
aas
cli
pop
xor
pop
jle
test
mov
daa
sub
sbb
stos
push
push
movsl
add
xor
adc
mov
mov
mov
sub
xchg
push
adc
nop
pop
push
sti
into
cld
pop
fisttpl
std
dec
stc
xchg
data16
fnstenv
or
cmpsl
loopne
cwtl
dec
push
add
mov
fildl
jnp
lods
xchg
fildl
paddb
shl
jnp
xchg
call
movhps
rolb
iret
in
testl
xor
aaa
inc
xor
stc
mov
fcomps
out
iret
enter
or
adc
mov
sbb
sti
push
or
loop
aad
pop
jno
clc
push
jl
sti
and
xor
popf
sti
inc
mov
loop
add
je
sbb
mov
add
xor
push
int
or
int3
sbb
sub
cmp
lcall
cli
add
inc
jle
fisttps
pushf
movsl
xchg
jne
dec
mov
in
out
jbe
faddl
es
ffreep
loop
cmp
ret
mov
dec
vmovupd
sub
mov
inc
jl
dec
push
mov
push
dec
and
repz
and
sbb
xor
and
sub
dec
clc
test
xor
xchg
fcoms
sub
insl
push
or
xor
jae
push
in
jnp
pop
sbb
in
leave
push
cmc
ret
imul
jo
scas
pop
clc
test
mov
pop
imul
sahf
lahf
xchg
dec
nop
mov
stos
es
adc
mov
xor
popl
lods
aam
lahf
js
jne
or
add
in
into
dec
test
inc
xor
test
inc
dec
mov
scas
bound
mov
sar
mov
push
dec
and
fsubrs
out
mov
lcall
test
cmpsb
cwtl
sbb
negl
sbb
and
fimuls
push
push
insb
mov
jg
pop
jno
jl
xchg
test
or
ss
mov
push
mov
add
loopne
sub
jle
dec
inc
pop
push
push
or
sub
mov
outsl
push
loope
lahf
cmpsl
iret
mov
sbb
cmp
jno
or
in
mov
cltd
cltd
pop
sbb
fadds
test
or
mov
pop
push
adc
aaa
xor
lahf
add
inc
push
and
xlat
dec
pop
sub
add
test
insl
arpl
jecxz
sub
xchg
test
in
pop
shr
in
ja
sub
xor
push
push
cwtl
adc
mov
fcmovnu
dec
dec
or
insb
push
cs
cmpl
or
push
mov
lahf
xor
cmp
testb
push
leave
sub
xor
addl
stos
add
out
or
mov
sub
adc
add
push
out
pop
xchg
dec
pop
and
movsb
push
sub
dec
xchg
ljmp
data16
xchg
stc
mov
lods
adc
aam
pushw
jmp
in
xchg
add
mov
cmp
inc
mov
iret
cs
mov
sahf
frstor
add
and
xchg
jb
adc
and
ret
jbe
out
add
push
sub
jl
test
fisttps
xlat
xchg
shr
in
into
je
pop
cmc
and
push
jle
leave
outsb
pop
call
push
test
push
in
xchg
psubusb
sar
or
adc
mov
dec
negb
push
xor
aas
xor
add
and
aaa
mov
push
push
loopne
or
cmpsl
jecxz
mov
push
sub
sub
daa
inc
into
mov
into
xchg
push
jecxz
pop
inc
xchg
pusha
mov
mov
popa
cmp
ficomps
xchg
or
dec
inc
and
fisttpl
repnz
inc
mov
bound
adc
and
and
mov
sar
pusha
test
jmp
xchg
dec
imul
ret
xor
and
leave
roll
popa
sub
arpl
test
loopne
iret
dec
mov
push
mov
and
jg
and
or
test
cmp
adcb
cmpsl
inc
js
and
bnd
orb
inc
or
fnstcw
inc
je
ja
xlat
xor
dec
ss
pusha
cltd
push
mull
test
hlt
fsub
pushf
mov
dec
sahf
imul
dec
push
mov
inc
icebp
shrb
pop
inc
or
or
scas
leave
and
push
xor
orl
inc
bsr
xchg
adc
sub
or
ss
pop
xchg
les
movsb
cmp
pop
adc
sbb
adc
jo
addr16
stos
or
pop
pop
dec
aad
push
xor
push
pop
test
xor
aam
mov
ja
inc
cld
xor
cs
jl
aas
pop
or
mov
popa
pop
mov
push
repz
jb
and
cli
arpl
out
jno
dec
jns
adcl
add
lods
int3
loop
push
pop
mov
cmp
adc
outsl
nop
fstpl
stc
inc
adc
outsl
adc
add
xor
gs
mov
outsb
out
push
out
sysret
push
lods
sbb
ljmp
adc
aam
mov
pop
xor
mov
outsb
dec
shlb
dec
xchg
fldcw
add
push
inc
out
das
push
daa
mov
jecxz
add
cmp
hlt
jb
mov
stos
and
popf
mov
outsb
aam
loop
sbb
scas
sbb
nop
cmp
mov
sbb
out
sub
xchg
mov
cmp
jnp
mov
lcall
out
sbb
sahf
mov
cmp
out
and
pop
jno
test
sub
imul
jmp
hlt
cwtl
jle
mov
mov
stos
out
inc
pop
mov
mov
loop
mov
cmc
sub
inc
xchg
iret
xchg
sub
cmpsl
leave
jno
mov
mov
addr16
dec
mov
sti
mov
dec
fcoms
adc
shll
popa
or
adc
pop
xor
inc
es
xor
xchg
test
insl
sahf
icebp
outsb
pop
mov
les
dec
std
les
arpl
loop
xor
cmc
mov
inc
les
stos
repnz
mov
inc
jae
in
repnz
xor
sub
mov
cmp
sbb
sbb
cmp
jmp
scas
jb
dec
mov
stos
stc
andb
and
push
jle
jnp
addr16
outsb
jb
lods
jp
xchg
push
popa
rorl
rorb
lret
pop
std
int
mov
stc
test
std
aad
pop
cmc
xchg
cmc
scas
ror
int
push
stos
cmp
out
vcvttss2si
inc
into
mov
mov
and
cmp
xlat
cmp
pop
pop
ja
insl
mov
xchg
mov
lret
jno
mov
mov
xchg
push
clc
pop
fbstp
test
jl
je
mov
pop
jnp
add
mov
imulb
mov
fcompl
xchg
xchg
and
mov
xlat
out
scas
fcoms
mov
and
lds
adc
mov
mov
js
popa
pop
adc
lds
cmc
cmp
sub
ret
xor
cltd
sbb
cmp
js
out
test
insb
jo
inc
and
lcall
or
add
push
mov
mov
dec
inc
out
dec
fcmovu
insl
cld
adc
inc
push
mov
jno
cmp
cld
pop
jp
jo
jbe
cld
lahf
into
xor
mov
cmp
cmp
add
xor
jg
test
ficompl
sub
push
dec
out
push
ret
stc
adc
nop
jbe
jmp
dec
cmp
inc
lock
les
les
sbb
dec
sub
mov
test
mov
or
loope
scas
adc
ja
stos
mov
cs
add
sar
arpl
sahf
movsl
cmp
inc
xchg
push
lods
mov
stc
push
sti
jno
stos
xchg
repnz
jo
xchg
scas
std
js
add
inc
jp
aad
sahf
adc
mov
shll
pop
push
decl
pop
xlat
xor
lods
ljmp
push
or
mov
sarl
jno
insl
push
jmp
pop
call
and
and
inc
xchg
mov
in
xchg
jb
xchg
inc
sub
mov
mov
and
cmp
outsl
int
ret
inc
sti
stos
scas
pop
mov
shrl
push
mov
or
aam
aas
lcall
and
jae
sbb
iret
pop
add
jno
cmp
outsl
mov
mov
dec
fwait
cmp
ja
insb
call
xchg
pop
and
dec
xor
mov
insl
push
push
std
gs
pop
xchg
pop
shlb
mov
lea
movsl
pop
jp
mov
sbb
adc
mov
rorb
push
xor
jp
and
cmpsb
jl
pmaxsw
rol
sbb
fsubrs
mov
adc
sub
jo
lods
popa
mov
setle
cmovns
xor
and
cs
lods
adc
add
popa
jb
inc
inc
sub
sub
or
xor
adc
mov
std
es
jge
push
fisubrs
cltd
dec
fadd
call
pop
sarl
dec
cli
sbb
cmp
notl
jge
jecxz
out
loope
lods
fadds
jle
xchg
and
test
cmp
inc
das
cmp
xlat
cwtl
add
sub
cs
lods
lds
scas
int3
xchg
subl
in
arpl
pop
in
lcall
push
mov
dec
push
pop
outsb
adc
mov
xor
fisubrs
fnstenv
push
into
lea
pop
call
adc
fidivrl
inc
mov
js
scas
jb
push
movsl
movsl
or
les
push
push
in
cmp
add
je
movsb
add
addr16
push
lret
jo
fidivrs
sbb
jo
inc
push
int3
adc
mov
std
call
cmp
mov
jmp
popa
js
andb
loopne
sub
fmuls
dec
mov
lds
int3
push
mov
push
sbb
repz
call
rclb
mov
mov
pop
or
in
mov
je
out
or
dec
in
popa
nop
loopne
cltd
push
dec
push
add
ss
dec
adc
pop
int
fists
testb
xchg
jae
mov
mov
pushf
rol
call
mov
aas
lock
sub
ds
dec
push
xlat
cwtl
mov
dec
pop
call
push
or
int3
cli
out
fwait
js
dec
push
xchg
adc
inc
add
loopne
clc
pushf
aad
adcl
jecxz
jg
inc
jnp
sub
jmp
sbb
or
or
stos
mov
mov
dec
mov
push
dec
push
outsb
fiadds
cmp
xchg
icebp
push
xchg
jmp
add
dec
xor
cmp
out
sbb
sti
mov
xchg
pop
rorb
ret
mov
jns
inc
aaa
sbb
and
in
cmpsl
lea
sub
cmp
push
and
fsub
mov
pushf
lret
movl
js
push
dec
adc
mov
fs
cwtl
mov
xor
ror
pusha
aas
sub
mov
xchg
dec
shlb
sub
fsubs
xorb
sub
test
cwtl
lock
push
mov
sub
sub
pushf
fdivr
negl
add
xchg
shl
xchg
mov
gs
mov
xor
fistpl
jae
sbb
sti
aam
loop
hlt
dec
mov
cltd
xor
or
add
out
adc
enter
loop
in
pop
mov
daa
cwtl
divb
incb
xchg
mov
sbb
in
leave
mov
xchg
pop
adc
mov
mov
xchg
mov
lcall
in
movsl
dec
rorb
sub
leave
push
sub
jb
inc
sbb
xchg
sub
sub
sbb
dec
movsl
sub
pop
mov
dec
aad
dec
in
ret
sbb
sbb
jns
jb
icebp
fimull
lret
mov
jbe
mov
mov
xchg
pop
into
outsl
repnz
jb
out
mulb
jns
xor
xor
xchg
jmp
jecxz
fistps
ds
cmp
daa
push
mov
negl
add
test
and
mov
dec
mov
clc
xchg
rclb
xchg
dec
std
inc
sbb
push
pop
cmpsb
aas
movsb
pop
xchg
push
ret
xor
jle
inc
sbb
mov
dec
mov
push
lcall
mov
into
adc
int
sub
repz
pop
push
into
mov
xchg
add
sbb
pop
mov
dec
inc
xor
das
cmp
inc
lods
in
push
add
mov
mov
mov
mov
loop
outsl
bound
dec
adc
xor
adc
std
add
xor
inc
das
rcll
mov
mov
push
loope
push
jecxz
inc
mov
jle
inc
insl
outsl
inc
xchg
lret
push
icebp
adc
mov
outsb
jo
sbb
js
sub
lds
sbbl
arpl
lret
cmp
or
stc
and
inc
cmp
test
fucom
xchg
call
imul
mov
xor
xchg
ficoml
cmp
pop
mov
stos
mov
mov
mov
jp
lock
rcr
or
test
cld
push
clc
push
cmp
pushl
lods
aam
sub
lret
xor
xchg
and
inc
sar
push
pop
aad
xchg
ja
popf
loopne
pusha
insl
ret
rorl
ret
outsb
stos
and
stos
in
cwtl
test
scas
pop
cmp
mov
int
mov
mov
in
xchg
shrb
in
sbb
ljmp
push
imul
mov
mov
std
jl
fisttpll
push
adc
out
ss
lcall
jnp
hlt
out
jbe
mov
add
jno
and
repnz
and
scas
mov
out
sahf
pop
xor
mov
sub
sbbl
adc
in
cmp
pop
push
push
cli
add
pop
add
push
cmp
pop
dec
out
imul
out
bound
mov
pop
rclb
fimull
arpl
jns
movsl
pop
pusha
jne
test
xchg
sub
pusha
add
cmp
sbb
faddl
adc
shlb
popf
rclb
outsb
popf
lods
mov
mov
subl
out
cmp
xor
roll
xlat
shrb
or
add
and
mov
pop
stc
std
outsl
push
ret
inc
jb
shrl
loopne
push
pop
cmc
mulps
cmp
pop
sbb
arpl
js
mov
test
lods
mov
push
aam
orl
or
inc
pushf
mov
jge
test
ds
cmp
adc
pop
in
mov
push
jle
mov
and
mov
jno
xor
pop
mulb
or
andb
and
fildl
adc
popa
jno
mov
add
insl
and
mov
push
xor
fbld
test
xor
mov
loope
sbb
mov
add
push
lds
shr
orb
ss
mov
ficomps
sarl
pusha
hlt
lods
outsb
dec
imul
lret
sbb
cmp
ficomps
shrl
sar
sub
popa
sbb
popf
or
mov
int
lods
clc
leavew
and
xor
inc
jmp
pop
pop
pop
arpl
pop
push
xchg
sub
scas
adc
pop
cmovno
enter
cmp
push
repnz
movsl
adc
addr16
adc
jnp
sahf
das
xchg
mov
sbb
or
and
or
ja
cmpsb
mov
mov
mov
ret
xor
xor
jge
cmp
mov
call
in
dec
add
push
cli
or
aad
xchg
int
inc
ret
cmp
adc
shrl
xor
fmulp
or
outsl
loop
pop
mov
les
subb
enter
fs
or
lahf
sbb
or
fdivrp
mov
in
enter
add
into
scas
and
lods
dec
xchg
ret
dec
nop
xchg
and
sbb
or
lea
jb
sti
and
jmp
adc
fildl
hlt
shl
sub
pop
out
and
fwait
inc
cmp
mov
adc
mov
js
inc
xchg
cmp
push
sbb
lods
mov
aaa
mov
lock
iret
dec
and
ds
lea
int
repz
stc
sbb
xchg
mov
repnz
and
mov
push
pusha
shl
pop
insl
enter
sahf
mov
cld
stos
push
adc
jbe
repnz
pop
stos
stos
shl
stos
mov
push
repnz
cld
lock
or
pop
fmull
sbb
outsl
adc
jl
xor
sub
les
push
dec
hlt
xchg
in
std
and
jo
imul
and
cmp
mov
add
and
scas
xor
dec
adc
lret
xchg
lods
popf
xor
sbb
inc
inc
mov
inc
add
sub
mov
sub
scas
es
and
je
icebp
adc
mov
icebp
outsb
or
int3
mov
sbb
mov
pop
inc
sbb
lcall
sarb
push
sub
pusha
add
mov
mov
sbb
jae
test
faddl
mov
call
push
dec
jb
sahf
push
rcll
push
fbld
push
push
ret
mov
sbb
and
int3
popf
sbb
jecxz
xor
pop
sub
fstpl
cwtl
fwait
shll
jmp
push
and
das
jp
ljmp
xor
sub
fsubrl
fistl
scas
in
lods
dec
rol
or
cmp
pop
shll
xchg
cld
in
in
mov
sarb
paddsw
sub
je
fadd
gs
sbb
xchg
xor
lret
leave
pop
sub
and
into
sub
jmp
je
mov
in
sti
mov
xchg
shrl
test
fdivr
mov
cmp
pusha
shlb
call
pop
jle
pop
sub
mov
sub
mov
xor
pusha
aas
mov
push
in
or
jae
test
je
mulb
sub
mov
add
or
pop
dec
mov
or
aas
out
imul
movsl
jbe
mull
cs
test
adc
mov
adc
pop
xor
fbstp
js
add
pusha
mov
shll
push
loope
mov
aad
xchg
or
add
nop
jle
inc
int3
or
addb
adc
movsb
jmp
jne
xchg
outsl
lock
insb
mov
mov
in
pop
push
fbld
stos
inc
sub
inc
js
jl
repz
cltd
mov
mov
mov
imul
stos
push
jl
push
insl
in
mov
stc
dec
dec
mov
mov
jp
inc
loope
push
and
aad
jnp
xor
dec
js
sub
mov
pushf
ss
mov
xchg
push
sub
in
leave
aas
icebp
call
adc
shll
ss
or
jo
add
fidivrs
fadd
or
mov
mov
pop
xor
out
leave
dec
lahf
mov
cmc
pop
rcll
mov
das
adc
outsb
decb
addr16
mov
js
xchg
or
sub
inc
pop
stc
aas
icebp
lahf
mov
push
lahf
enter
movsl
xorl
int3
jg
xchg
inc
xchg
add
push
lds
jecxz
fisubrs
push
mov
nop
mov
xchg
sbb
cmp
dec
sahf
pop
scas
std
test
jge
add
dec
fidivs
pusha
scas
ds
bound
sub
or
pop
or
out
fsubl
sahf
jl
mov
xchg
jns
lock
out
push
mov
cmp
cld
mov
ret
jnp
jns
test
xchg
mov
add
in
insb
sbb
iret
xor
mov
sub
movsl
lods
inc
xlat
stos
daa
scas
fnstcw
cmp
scas
sbb
fcompp
lods
hlt
mov
sub
movb
mov
aas
daa
andl
in
call
pop
xlat
inc
jp
mov
sbbb
or
cmpsl
lods
mov
fcmovbe
mov
imul
push
rcrb
stos
pop
gs
jmp
jecxz
lock
jo
dec
testl
in
pop
dec
fcomps
jecxz
lret
mov
js
sbb
inc
sbb
and
inc
dec
sti
arpl
loope
push
xorb
sti
and
mov
add
sub
bound
jecxz
pop
xor
fwait
js
and
sub
add
jg
xor
xchg
ss
jb
xor
adc
addr16
adc
lock
pop
ret
repz
es
cld
adc
push
xlat
sti
inc
dec
pop
fsts
hlt
mov
and
cmp
mov
cmp
les
jae
sub
js
fstl
scas
push
fisttpll
inc
out
fucomp
xor
or
ljmp
push
pop
dec
jge
sbb
ljmp
je
adc
popa
iret
mov
ret
les
pop
inc
jno
dec
mov
sbb
js
and
push
xlat
pop
es
fmull
push
movsb
jb
and
fs
dec
dec
in
pand
add
lea
scas
sbb
ds
nop
mov
push
jge
inc
add
add
mulb
cmp
jp
icebp
gs
mov
addr16
xchg
mov
mov
push
mov
dec
rorl
sub
add
mov
mov
sub
mov
lock
in
call
xlat
mov
and
mov
push
popa
and
adc
dec
jbe
add
call
in
sbb
sub
cmp
cmpsb
ljmp
lcall
xchg
ds
fcoms
push
or
sub
jg
and
es
sbb
dec
push
outsl
stos
sub
fcmovb
loopne
push
mov
test
add
xchg
stos
shrl
push
sbb
aad
js
insl
sub
pushf
add
lods
add
cli
sar
and
jle
addl
arpl
jae
leave
ljmp
jge
push
add
gs
jmp
filds
lcall
or
pop
push
sahf
lock
xor
adc
mov
and
out
sbb
xchg
or
ror
add
mov
ds
jae
cmp
icebp
jns
mov
jae
cmp
cli
popl
movsl
adc
fistpll
inc
jnp
xorl
cmpsb
xchg
out
mov
call
js
and
add
pop
sar
and
push
in
ret
push
loop
std
mov
int
sub
loopne
orl
adc
je
rorb
outsb
xor
in
xchg
pop
enter
xchg
lret
sbb
pushl
dec
std
cmp
out
out
repnz
aas
js
mov
jge
jbe
add
fisubrs
fnclex
in
sbb
pop
hlt
iret
add
and
cwtl
and
scas
popa
repz
mov
mov
lahf
mov
cs
lods
icebp
cmp
jae
jmp
ljmp
in
dec
je
pop
add
fwait
out
movsl
inc
nop
cmp
pop
ss
call
scas
ret
add
mov
aam
movsb
sbb
dec
jb
mov
fdivl
jg
jbe
cltd
aad
insb
ss
fadd
pop
mov
pop
mov
sbb
jnp
push
ljmp
jecxz
jne
nop
jnp
mov
outsl
xchg
pop
lret
push
sub
in
rcrl
scas
push
aad
xor
add
pushf
insb
push
push
mov
adc
test
dec
sbb
test
sub
or
sub
jmp
idivb
scas
loopne
pushf
popa
leave
cli
out
sbb
lret
adc
sub
xchg
or
pop
and
cwtl
popf
mov
cld
adc
fidivl
test
loopne
cmpb
fwait
adc
daa
cmp
test
pop
inc
xor
inc
push
mov
test
jmp
lock
cmp
sbb
cmpsb
icebp
mov
test
out
pop
push
cwtl
dec
jne
cmp
jp
das
je
jl
cld
adc
popf
mov
xchg
cmp
ret
cmpsb
jecxz
sbb
jnp
jmp
inc
jbe
out
cmpsl
sub
xchg
outsl
js
test
push
push
dec
mov
sbb
sub
xor
jl
jo
mov
push
out
mov
pop
arpl
push
inc
jmp
or
aam
pop
adc
mov
cmpsb
xor
sub
leave
gs
bound
cmp
std
rclb
pop
xchg
cmp
movsl
jecxz
jl
mov
xor
loopne
jnp
mov
shlb
dec
ficompl
loope
dec
test
jae
pop
jne
stc
addr16
test
ja
push
jne
popf
sub
and
lods
adc
mov
push
out
adc
mov
cltd
mov
in
mov
cli
rorl
hlt
arpl
sbb
push
mov
std
and
push
lret
jno
imul
mov
pop
or
dec
bound
xor
inc
test
jge
pusha
mov
inc
push
pop
sub
fstp
mov
repnz
cmp
and
jge
hlt
outsb
fstpt
sti
mov
jbe
inc
cmp
pusha
pop
cmp
adc
scas
shlb
push
cmp
rorl
pusha
cmp
adc
adc
jg
add
sbb
imul
addr16
sub
aas
add
icebp
lods
ror
dec
push
or
sub
ds
inc
push
hlt
in
clc
adc
pushf
xchg
xchg
test
dec
cmp
cmp
popa
sbb
jb
xchg
lds
dec
mov
xchg
popa
cmp
inc
test
scas
push
and
mov
cmpsb
pusha
sub
dec
out
mov
push
rcrb
shlb
or
mov
dec
ds
filds
leave
pop
out
je
aaa
mov
mov
push
jne
push
inc
outsl
pop
ljmp
ja
fcomi
out
push
cmp
push
iret
fs
lret
or
movsl
mov
out
ds
dec
mov
out
add
sub
sub
jl
pop
aas
mov
incl
mov
cwtl
inc
decb
pop
or
js
jmp
in
cmp
dec
and
jno
mov
hlt
jle
dec
inc
in
xchg
aad
outsl
jl
dec
mov
adc
das
mov
mov
fwait
ja
cmp
cmp
jge
aam
push
in
cmc
clc
cmc
outsl
fldl
movsb
ret
push
cmpsb
outsl
jns
push
mov
out
fcmovnu
imull
and
enter
pushf
outsl
icebp
stc
bound
lock
shl
negb
xchg
testb
mov
aad
inc
rcrb
inc
rclb
mov
into
sbb
mov
leave
xor
xchg
adc
push
subl
and
test
in
dec
adc
shrb
xor
sub
insb
fmull
jmp
push
outsl
bound
mov
int3
dec
push
nop
pop
stc
fstp
sub
rcl
xchg
cmpsb
add
daa
xchg
and
cli
lcall
and
out
repnz
cs
daa
sarb
in
fistps
loop
mov
mov
loope
adc
adc
ds
dec
jns
mov
test
lods
lods
jae
loope
sub
mov
roll
mov
jns
jb
flds
xchg
cld
ja
loopne
cmp
stos
fstpt
fwait
and
adc
fisttps
lcall
call
sbb
adc
cmp
outsl
int
lcall
aaa
leave
add
mov
xchg
pop
pop
cmpsl
cwtl
cmpsb
adc
icebp
jns
jmp
or
adc
mov
addr16
push
int3
mov
mov
repnz
push
push
or
sbb
and
stc
xchg
mov
cltd
push
push
inc
adcb
add
sub
mov
dec
aaa
leave
fidivs
arpl
icebp
inc
popl
mov
mov
daa
pop
cltd
mov
push
mov
icebp
das
fnstsw
sub
int3
xor
pop
ret
insb
cmpsb
push
add
push
arpl
pop
repz
cmpsl
les
outsl
xor
dec
mov
rol
jo
cmp
pop
and
push
mov
ja
aad
mov
and
push
pop
test
imul
popa
jle
add
sbb
dec
cmp
inc
mov
pop
pop
test
add
cld
xlat
scas
pop
mov
mov
cmp
ror
arpl
inc
pop
test
sub
mov
popf
ja
and
add
add
cmpsb
stos
cmc
das
pop
in
sbb
lds
scas
mov
insb
dec
cltd
clc
jge
lret
sahf
and
es
adc
mov
insb
sub
out
shlb
and
test
stos
inc
ror
test
jp
addr16
and
dec
cld
test
sub
loop
adc
xchg
or
mov
std
pop
cmc
mov
push
adc
cmp
fwait
ljmp
mov
xchg
cli
in
inc
ficoml
stc
push
int3
sbb
sub
lahf
mov
mov
imul
fists
pop
xor
adc
cli
cmp
pop
or
dec
and
dec
dec
loope
test
sub
mov
jns
popf
dec
das
xorl
repz
cltd
xor
push
jb
pop
test
ja
ffree
and
daa
in
lret
add
ljmp
and
lods
rcll
jg
scas
fstpl
jecxz
mov
jmp
xchg
in
and
ret
pop
in
int
into
jns
jecxz
xor
pusha
xchg
outsl
sbb
sti
dec
rorb
imul
and
sub
cmc
lea
cmp
aaa
insb
std
pop
pop
push
mov
or
mov
je
ljmp
pop
scas
cld
int3
add
mov
inc
mov
jo
cmpsb
leave
cmp
lahf
push
into
inc
shlb
out
xchg
int
xchg
adc
pop
mov
xchg
ljmp
hlt
dec
int
das
jnp
xchg
sbb
jns
push
jns
mov
sar
cmp
mov
mov
or
xlat
xchg
mov
popf
and
xlat
mov
add
movsl
add
popl
push
mov
mov
sub
repnz
loop
frstor
loopne
or
rcrb
out
test
adc
or
and
repz
mov
or
ja
jecxz
popf
out
or
sbb
and
lea
fimuls
rcr
dec
ds
jmp
jmp
inc
aas
inc
jmp
scas
pop
cmp
mov
mov
adc
adc
xchg
test
aad
xor
jae
sub
arpl
bound
sbb
push
inc
xor
adc
arpl
bound
test
push
test
xchg
sub
cld
mov
and
icebp
lods
into
jne
xchg
jl
or
sub
jns
sub
mov
outsl
repz
js
test
cs
dec
cwtl
lods
subl
xchg
repnz
out
xchg
add
pop
loopne
fs
sub
jp
cmp
movsl
xchg
dec
test
xor
divl
xlat
jmp
bound
push
inc
ljmp
dec
pop
jne
dec
rcrl
repnz
jae
pop
mov
add
cmp
clc
or
int
mull
leave
addr16
cltd
push
xchg
fistpll
sbb
mov
jne
add
addb
das
pop
add
jns
mov
add
sub
pop
pop
jbe
sub
jle
inc
hlt
shll
scas
xchg
mov
ljmp
test
movsl
cmp
jno
ficoms
push
sbb
dec
popa
adc
shrb
shrb
mov
dec
enter
adcb
fiadds
out
in
inc
cmp
ret
and
cmp
fsubrl
jp
xor
dec
mov
and
inc
test
cmc
rol
out
pop
mov
sbb
scas
ja
les
shrb
rolb
sbb
add
fldenv
xchg
jbe
adc
addb
mov
or
cld
inc
mov
sub
movsb
outsb
xlat
adc
jbe
cmp
mov
jb
inc
mov
adc
add
ja
ret
mov
scas
lock
pop
outsl
imul
mov
mov
cmp
pop
cmovg
cltd
jnp
dec
fwait
enter
cmp
js
jl
jb
bound
popf
cmpsl
jb
sbb
and
inc
loop
lcall
xchg
dec
mov
lods
cmp
dec
mov
movb
dec
mov
mov
mov
jb
fcoms
add
or
ds
aaa
in
cmp
insb
stos
movsb
arpl
fisubl
pop
cli
shrl
fwait
xor
xor
sbb
xor
pop
xor
sahf
mov
pop
push
or
xchg
adc
in
sbb
test
in
call
popf
rorl
mov
int
aam
ret
scas
aad
add
jno
aam
sbb
lcall
fisubs
xor
push
jg
mov
cld
cmp
push
jmp
xchg
and
adc
jg
fsub
aaa
pop
mov
push
int
pop
fwait
jbe
enter
dec
divb
or
decb
daa
sahf
lods
js
xor
adc
xorl
into
jge
pop
jnp
xlat
or
dec
adc
jb
push
ss
bound
jg
sub
fs
lret
mov
push
push
push
push
outsl
mov
mov
and
dec
dec
pop
adc
shl
in
pop
shlb
popf
sub
and
sbb
mov
mov
push
lods
inc
push
stc
out
fisttpll
cli
mov
es
pushf
in
lods
push
fsubl
add
adc
test
movsb
pop
push
mov
mov
push
or
mov
add
mov
out
mov
cmp
sbb
sbb
push
test
jns
xor
inc
mov
jl
xor
int
xchg
inc
rcll
adc
icebp
cmp
or
movsb
xchg
push
jne
in
inc
aas
push
outsb
pop
mov
or
rcr
sbb
sbb
inc
mov
ficoml
push
leave
fxch
mov
stos
mov
mov
enter
push
xchg
and
pop
mov
mov
cmp
sbb
icebp
xchg
pop
in
jnp
sub
shrb
insl
inc
popa
xchg
movsl
scas
pusha
add
pop
pop
push
push
mov
and
outsb
push
lods
daa
mov
scas
mov
test
cld
xchg
cs
aam
ret
scas
jle
stos
cmc
movsb
sbb
jl
inc
mov
arpl
outsl
cld
aad
mov
push
imul
xchg
stos
ret
mov
or
xchg
popa
pusha
jns
popf
fwait
xorb
add
pop
adc
movsl
xchg
idiv
fwait
add
sti
adc
mov
mov
xlat
sub
out
dec
into
inc
cmpl
mov
mov
andl
cmpsb
loopne
imul
stos
mov
stos
pop
jge
xchg
xchg
xchg
xor
and
mulb
cmpsl
mov
sub
jb
add
sub
jmp
clc
enter
ljmp
jmp
xchg
cmp
sbb
es
nop
adc
cmp
mov
std
lds
iret
es
jle
pop
cmpsb
add
push
dec
mov
push
test
loop
add
mov
xor
sbb
inc
xor
xchg
in
add
jge
iret
adc
cmp
cmp
test
pop
out
push
or
and
jo
cltd
stos
lds
ret
scas
repz
mov
inc
jmp
mov
fdivs
add
cmpsl
and
xchg
push
push
or
es
jns
jg
push
ds
test
js
push
divl
cmp
xorb
sbb
into
inc
xor
dec
leave
jo
sti
jbe
out
icebp
sub
or
jo
xlat
test
jne
rorl
cmp
aad
fwait
aaa
cmpsb
xchg
jge
mov
xor
xchg
cld
fisubl
inc
mov
pop
push
and
pop
jno
inc
or
sub
int3
mov
aad
mull
push
loopne
test
dec
lock
andl
pop
and
cmp
movsb
mov
sbb
aam
cmpsl
out
in
dec
jo
cmpsl
dec
leave
ja
adc
incl
insb
mov
xchg
leave
mov
rclb
jmp
daa
xchg
sbb
jb
loope
push
adc
scas
outsl
sarb
or
mov
es
or
dec
shll
mov
mov
call
mov
add
mov
repnz
arpl
decb
cmpsl
enter
andl
mov
xchg
aaa
ret
mov
inc
lea
sbb
jl
xchg
push
pop
add
push
ja
mov
fstpt
jno
jno
xchg
dec
mov
popf
ret
sub
sub
lret
jne
scas
pop
pop
movsb
sub
inc
push
lret
jle
bound
or
mov
imul
push
xchg
lret
call
stos
icebp
xlat
dec
inc
lahf
cmp
dec
addl
test
lds
sti
cmp
dec
adc
xchg
mov
sub
jl
frstor
cld
js
leave
mov
sbb
sbb
scas
dec
dec
subb
xlat
mov
aaa
int3
xchg
adc
cltd
push
mov
push
push
pop
leave
clc
inc
pop
sbb
xchg
mov
dec
mov
mov
movsb
mov
add
in
int3
and
pop
jno
rcrb
pop
adc
mov
fistl
arpl
or
int3
std
mov
or
sti
rorl
aaa
pop
mov
mov
out
ret
iret
pop
xor
dec
mov
push
rcr
loope
xchg
xor
jle
fistps
mov
js
sub
sbb
jbe
pop
dec
mov
jmp
test
adc
pop
lret
xchg
std
fld
mov
jnp
xor
adc
and
mov
adc
lods
scas
sub
int
rclb
mov
mov
test
sbb
addb
fsts
xor
hlt
dec
mov
adc
lds
sbb
adc
sub
repz
das
pusha
mov
out
arpl
xchg
les
sub
out
in
adc
sbbb
roll
int3
xchg
inc
subb
jge
rcl
jmp
gs
pusha
or
movsb
mov
out
xor
lahf
sub
mov
add
adc
fidivrs
mov
inc
ret
hlt
loop
mov
mov
push
test
xlat
mov
lods
inc
jae
or
icebp
xchg
jns
add
dec
dec
push
jp
cmp
sub
stos
in
xchg
in
in
dec
insb
cmp
fwait
pop
and
push
repnz
aam
das
ret
push
leave
and
xchg
push
inc
cwtl
imul
push
pusha
push
dec
rcll
fwait
pop
out
cmpsb
lahf
popa
mov
cltd
mov
pop
dec
ja
jp
mov
lods
loop
mov
adc
scas
inc
and
mov
mov
adc
ljmp
shll
iret
pop
pop
cwtl
test
cli
daa
push
ljmp
test
je
sbb
jl,pt
jle
xchg
loop
ficoms
cmp
or
and
mov
push
jmp
arpl
mov
orb
hlt
mov
movsb
test
ds
stos
adc
cld
fs
cmpsb
cld
mov
in
jno
rcrl
or
js
adc
ret
int3
cmp
push
jp
xchg
push
mov
dec
stc
leave
outsl
pop
ja
add
xabort
adc
ja
lret
test
xor
shl
sub
aad
adc
inc
xchg
push
call
test
xor
sub
aad
cmp
lahf
int
gs
sub
push
sbb
scas
mov
sbb
push
popa
iret
arpl
dec
dec
dec
cmp
or
xchg
add
push
test
pusha
xchg
inc
mov
lock
pop
mov
add
pop
bound
in
lcall
and
jl
pop
xchg
and
fwait
rol
rolb
int
sub
pop
cmp
pushf
lods
popa
inc
shrb
mov
add
or
xchg
sbb
sbb
lock
test
add
lahf
aad
rcl
lods
cs
sub
add
std
arpl
jmp
jmp
ss
sbb
cltd
adc
mov
lret
aaa
dec
pop
and
xor
lret
stos
lods
js
lods
jne
add
popl
and
mov
pop
or
add
ret
mov
andl
and
cmp
lds
jmp
push
and
in
repz
mov
outsb
cmpsb
andl
push
iret
shl
or
jne
cmp
mov
mov
cmp
xchg
sub
lods
rorl
pop
out
pop
lods
inc
lret
sub
rcl
cltd
inc
shlb
cld
sbb
nop
cmpsl
xor
fwait
dec
push
push
mov
cmp
packuswb
xor
mov
cmp
rcrb
push
aam
inc
cwtl
lahf
popl
gs
cwtl
push
xchg
das
mov
cli
pusha
jmp
and
pusha
std
xlat
lea
jnp,pt
cmp
push
mov
xor
adc
out
sub
or
and
sbb
push
dec
ret
mov
dec
dec
lret
test
xor
mov
hlt
sub
adc
cmp
cs
lret
mov
jbe
hlt
in
rolb
and
sub
mov
test
xor
mov
repnz
insl
push
cwtl
loope
ss
sbb
xor
stos
movsb
dec
cmp
dec
add
mov
adc
cmp
add
mov
add
mov
add
rorl
pop
adc
push
or
loop
ficoml
or
add
filds
jae
and
mull
sarb
repz
int3
pusha
negb
mov
push
xor
mov
push
ja
inc
pop
sarb
mov
loop
clc
lcall
pop
mov
test
push
xlat
aaa
jb
int
pusha
and
xor
aam
jge
movhps
and
or
outsl
dec
ja
lret
cli
sub
lock
daa
or
and
in
mov
xor
mov
popf
sar
jle
imul
dec
inc
push
idivb
mov
inc
jae
adc
cmp
sub
jb
jecxz
mov
in
jle
ljmp
rorb
bound
mov
pop
sbbl
or
sbb
ljmp
lret
jbe
fmuls
cmp
fisttpll
jmp
lcall
pop
jne
jp
jae
sbb
int3
ja
push
mov
es
pop
jle
xchg
shrl
mov
mov
cmp
stos
fbstp
push
push
in
add
pop
jo
inc
cmp
aaa
cmpsb
shlb
loop
pop
fistl
mov
xchg
scas
dec
fadds
add
in
repz
xor
scas
fwait
inc
ret
aas
outsl
xchg
outsb
push
sbb
in
and
xchg
aam
xchg
pop
or
hlt
popf
xor
in
pop
sti
inc
push
rorb
scas
adc
faddl
dec
clc
push
std
xor
add
push
lock
dec
adc
jns
jge
jmp
divl
popa
push
cld
mov
push
int3
pop
push
mov
out
das
jl
jmp
popaw
mov
aam
filds
jle
loope
clc
test
jbe
enter
mov
into
inc
mov
mov
jbe
or
and
pop
adc
out
xlat
scas
int
scas
je
mov
adc
jecxz
add
lret
loopne
cmpl
xchg
xor
mov
cmpsb
test
mov
sbb
dec
insb
cwtl
fsubrp
mov
adc
dec
add
push
mov
xor
mov
popa
in
or
adc
in
mov
mov
mov
sti
xor
xchg
sbb
std
mov
dec
dec
out
leave
inc
xor
xor
mov
add
xchg
lock
js
out
jno
mov
es
in
cmp
jg
inc
divl
jne
fwait
push
int3
cmpsb
clc
nop
xchg
lfs
pop
pop
movsb
not
cmp
sbb
sub
jge
inc
out
jmp
push
or
push
pop
adc
xchg
pop
jecxz
sbb
fidivl
gs
xchg
in
dec
jg
cmp
pushf
jae
outsl
xchg
xor
mov
nop
hlt
shlb
pop
sub
lahf
add
sbb
stos
or
dec
adc
sti
lcall
jae
lods
dec
pop
aas
mov
out
lcall
aam
sbb
sub
push
mov
fbstp
sub
jno
mov
fistpll
mov
and
andb
mov
lret
inc
add
pop
xor
outsl
xor
aaa
test
daa
adc
mov
mov
mov
inc
xchg
pop
int3
adc
sub
pop
and
outsb
add
ja
add
data16
xchg
push
adc
insb
lods
std
imul
shr
in
xchg
xor
clc
test
cmp
lcall
fiaddl
xor
push
pop
rcrl
dec
lcall
and
fistps
in
mov
inc
aad
mov
and
sbb
ud1
sub
int3
xchg
clc
dec
cmc
cmp
ss
push
push
fbld
dec
gs
fldl
adc
mov
and
fisttps
pop
mov
adc
lock
add
push
mov
xor
mov
jb
cmp
sbb
in
icebp
jp
xchg
cli
je
xor
mov
xchg
ljmp
mov
mov
into
cmp
push
inc
add
pushf
sub
aam
and
mov
add
cld
xlat
gs
loopne
or
cmp
sbb
mov
outsl
outsl
clc
xorb
loop
std
jmp
fidivl
mov
jge
mov
xchg
ss
dec
ss
imul
mov
rcrb
insb
mov
push
dec
push
mov
mov
sahf
data16
or
shrl
pop
add
jecxz
add
push
push
dec
sub
sbb
cmp
sar
inc
push
stos
pop
add
insl
inc
scas
dec
and
xchg
loopne
jle
or
add
mov
std
push
jge
xlat
nop
mov
arpl
add
in
ja
lret
xchg
divb
cmp
push
lret
jecxz
cmpsb
insb
adc
arpl
mov
jns
pop
pushf
mov
mov
pop
cmp
dec
xor
xor
fsubrs
not
xchg
addr16
int
jne
cld
push
ja
jmp
sbb
inc
cmpsb
bound
cmpsb
push
sub
fmulp
pop
push
fbld
dec
movl
int3
inc
stos
sub
test
outsb
shl
mov
jo
jns
xchg
fisubrl
in
js
mov
push
xorb
cmp
jnp
jns
push
jne
jl
cmp
mov
adcb
cmp
sahf
xor
inc
pop
mov
addr16
pop
dec
pop
sbb
test
dec
inc
jae
lock
inc
mov
inc
add
xchg
and
adc
adc
iret
inc
cwtl
push
nop
std
frstor
inc
push
dec
sahf
or
xchg
mov
lret
push
cmp
stc
inc
in
xor
lahf
mov
dec
sbb
out
xchg
repnz
mov
and
or
sbb
xchg
lcall
dec
push
in
push
mov
call
mov
daa
mov
dec
jae
lock
or
outsl
adc
movb
jns
repz
mov
sbbl
lret
bound
sbb
insb
gs
mov
cmp
or
mov
aad
std
nop
pop
xchg
nop
xchg
mov
mov
sub
out
jne
mov
loopne
in
in
test
jp
out
inc
fsubr
cld
lock
int
or
pop
fwait
push
or
loop
or
out
pushf
adc
or
jp
or
xor
dec
arpl
sbb
push
xchg
add
xor
cmp
in
jmp
insl
jb
mov
mov
sub
dec
es
xor
mov
add
cltd
xchg
adcl
add
int
fildl
fwait
mov
js
sub
dec
or
stc
sbb
in
and
dec
aad
cmp
mov
dec
xor
add
jecxz
daa
and
add
sub
inc
pop
cmp
push
sbb
xchg
mov
int
xchg
jl
xchg
and
hlt
out
pop
mov
mov
or
xor
jnp
inc
jnp
clc
mov
xchg
pop
push
cmp
int
xchg
idivb
outsl
push
movq
cmp
jae
xor
mov
lret
mov
js
icebp
and
lret
cs
mov
cmpsl
adc
mov
test
cs
cli
and
jecxz
jbe
xor
pop
and
adc
pushf
outsl
mov
cmp
nop
pop
push
dec
sbb
in
xor
jae
or
das
adc
mov
loopne
insb
adc
out
inc
jle
mov
jge
add
mov
cwtl
pop
mov
mov
addr16
jmp
fsts
add
mov
pop
subl
aad
popf
aad
cmp
or
inc
jl
lret
lea
insl
pushf
mov
mov
addr16
lods
jmp
mov
mov
add
or
push
xchg
sahf
jb
inc
das
push
xchg
out
jge
dec
fdivrs
outsb
fldenv
fisttps
add
jns
dec
jno
scas
mov
out
daa
shlb
adc
das
aaa
cmpsb
or
inc
nop
dec
dec
mov
fldcw
push
mov
fdivrl
jb
sub
outsl
inc
inc
sbb
notl
inc
scas
add
nop
pop
aam
aam
cmpb
jecxz
jg
lahf
xor
inc
loope
push
cmpsl
movsb
pop
outsb
or
lds
sbb
sbb
int3
std
lds
cmc
lds
and
and
imul
aam
adc
inc
cmp
scas
rol
pushf
pusha
xchg
hlt
lahf
enter
mov
imul
dec
jle
orl
mov
ret
out
fs
movsb
out
test
jno
or
cmp
repnz
dec
xorl
neg
lret
inc
movsl
xor
fdivs
jno
mov
push
jns
leave
mov
and
outsb
std
lds
mov
pop
inc
push
cli
insl
call
call
jno
imul
dec
inc
hlt
jge
dec
adc
shl
dec
jge
mov
dec
test
or
adc
xor
jle
pop
push
das
cld
mov
mov
xor
inc
push
add
mov
dec
adc
xor
and
push
mov
mov
sub
in
jmp
sbb
cwtl
push
push
out
scas
mov
jge
lods
enter
cmp
mov
repz
mov
icebp
xchg
repnz
outsl
dec
lds
data16
fistl
ret
mov
test
cmc
pop
jmp
inc
test
mov
lods
jmp
pop
adc
lea
mov
mov
pop
jge
jae
mov
imul
ljmp
dec
fistpll
sbb
jg
or
daa
sbb
cmp
or
aam
das
mov
xchg
or
std
inc
cmp
and
flds
mov
add
outsl
in
imul
and
sub
decl
xor
pop
jl
in
rorb
addr16
sub
int3
out
adc
jb
add
negl
sarl
mov
sti
in
rolb
call
mov
orl
movb
xchg
rolb
xor
adc
or
sti
pop
repnz
mov
jns
jne
sub
inc
xchg
pushf
inc
test
cltd
adc
in
repz
push
sti
push
popl
leave
repz
xchg
push
jge
xchg
cmpsb
pop
mov
aas
in
jge
in
push
pop
repz
pop
pop
outsb
adcb
push
push
arpl
sbb
std
cmp
imul
xlat
outsb
iret
fstpl
mov
cmp
sbb
rorl
daa
outsl
mov
popf
mov
xor
fs
andb
addr16
jmp
add
pop
jb
popf
in
popl
call
out
jne
xlat
sahf
iret
push
and
sub
test
cmpl
shlb
es
cmp
jl
ficoms
or
filds
mov
sbb
inc
or
add
iret
inc
xchg
push
add
ljmp
movsb
mov
adc
dec
jnp
insb
sbb
add
arpl
popf
or
rcrb
fucom
hlt
cld
jp
xchg
cmp
rol
pop
adc
enter
mov
jmp
sbb
push
test
std
shlb
ret
or
xor
inc
xchg
push
imul
pop
adc
cwtl
sub
xchg
add
hlt
xor
adc
dec
fcomps
pop
out
lahf
pop
dec
inc
pop
pop
sbb
rcrl
ss
xor
in
push
cwtl
push
push
xchg
mov
aad
xor
mov
inc
jns
fcomp
push
andb
adc
ja
lcall
in
popf
jecxz
fidivl
cmpsb
adc
cltd
xchg
cmpsb
ret
jb
mov
add
aas
pop
mov
shrb
cmp
sub
cmpsb
pop
lcall
or
out
mov
lret
jp
leave
sub
or
lret
jno
jne
fadd
pop
jo
push
fldl
fcom
add
cmp
in
inc
hlt
dec
lret
call
imul
mov
pop
lret
pop
popf
fsubr
xchg
cs
outsl
arpl
shlb
icebp
cmp
stc
push
xchg
cmc
jo
mov
sub
fldl
dec
mov
jnp
loopne
negl
sahf
test
xchg
inc
dec
and
inc
andl
xchg
jbe
hlt
pop
add
push
stos
cmpsl
cs
or
add
std
enter
cwtl
mov
sub
lcall
popf
jl
out
xchg
dec
in
dec
push
xchg
outsb
jecxz
lods
xchg
cmp
adc
add
mov
es
mov
out
sbb
adc
loop
push
jecxz
adc
insb
aas
push
testl
mov
arpl
lret
cmpsl
sub
push
sbb
test
or
inc
inc
das
addr16
and
push
dec
sbb
decb
into
sbb
fsts
mov
adcl
daa
inc
bound
add
hlt
mov
xor
sub
inc
mov
fsubrp
test
shlb
add
push
sub
jbe
enter
test
arpl
mov
repz
mov
xor
or
or
lret
push
test
pusha
pop
pusha
add
mov
les
int3
xchg
push
out
addr16
jo
cld
xor
push
push
add
sbb
sub
mov
push
pop
ret
jge
ffree
rep
dec
es
icebp
aam
mov
push
jl
mov
push
dec
adc
push
and
sub
int
lock
or
inc
jge
fistpl
mov
or
and
xor
popf
cld
mov
add
xchg
inc
repz
mov
dec
es
out
dec
ret
orb
rdpmc
test
jae
in
and
xor
or
loopne
sbb
shl
imul
push
cmpb
jnp
clc
popl
mov
jp
dec
pop
cmp
dec
rcll
jp
cmp
jg
inc
xor
lods
mov
stos
rcr
scas
fisttpll
cmp
ror
and
jle
pop
mov
sub
rcrl
lret
mov
sets
cwtl
push
hlt
dec
shll
enter
sub
push
stos
je
movsl
mov
pop
sub
or
mov
dec
xor
imul
add
sbb
xchg
repz
pushf
jns
nop
sub
nop
stos
dec
xchg
pop
mov
out
insl
xchg
ss
pop
adc
or
pop
mov
cmp
lock
add
jle
sti
mov
aas
daa
iret
gs
shl
push
stos
das
fldl
in
js
lds
xor
daa
adc
push
mov
xor
sarl
pop
loopne
mov
and
and
imul
roll
dec
mov
in
imul
inc
aad
xor
jge
mov
sbb
mov
inc
xchg
add
enter
and
rcrb
xchg
sbb
sub
mov
dec
test
xchg
xor
cmpsb
or
sub
out
cli
test
into
mov
mov
icebp
jne
and
sub
xor
add
mov
jo
xchg
std
jne
lahf
ret
jne
cs
sbb
dec
push
inc
xchg
mov
arpl
aaa
inc
fwait
loope
pop
bound
jae
arpl
ja
push
dec
pusha
popa
into
push
jge
mov
shr
xor
xchg
lea
dec
jl
and
loope
cmp
movsb
outsb
or
xchg
ret
xchg
sub
addr16
xchg
inc
repz
inc
gs
jge
inc
inc
call
inc
pop
pop
imul
outsl
lret
mov
inc
jnp
stos
add
mov
ss
repz
mov
cmp
xor
aad
push
sbb
mov
icebp
icebp
out
mov
stos
inc
daa
into
enter
mulb
scas
adc
mov
jp
dec
inc
imul
loope
hlt
aad
insl
mull
fiadds
or
aaa
or
mov
gs
jge
movsb
test
add
sbb
dec
mov
insl
lret
cmc
pushf
jge
mov
rcl
ret
mov
dec
fs
push
inc
or
or
mov
test
pop
je
adc
cmp
mulb
inc
sub
shr
pop
adc
clc
daa
cwtl
jl
adc
in
rcrb
cs
cmp
adc
repz
inc
mov
push
inc
insl
incb
shrl
popf
mov
pop
les
jnp
cwtl
pusha
ffreep
and
xchg
lret
push
cmp
cmpl
outsl
adc
fcmovnu
push
shlb
mov
ljmp
jge
lock
lock
scas
jle
nop
cmp
rol
mov
fwait
mov
shll
dec
popf
sub
call
xor
push
and
addr16
inc
lcall
cli
cs
pop
shlb
or
std
pop
enter
repnz
cmp
mov
pop
dec
jbe
outsl
mov
jge
stos
loop
cmp
mov
sti
enter
mov
jp
cwtl
sub
xchg
xchg
lcall
movsb
or
dec
xor
and
das
pop
and
xor
sub
cmp
adc
jo
xchg
add
pop
add
cwtl
dec
test
dec
dec
mov
and
dec
adcb
fldl2e
and
xor
jae
inc
mov
int
pop
mov
dec
and
cwtl
imul
xchg
int3
fidivrs
mov
xor
loopne
mov
and
loope
add
shl
daa
mov
adc
insl
fs
jle
cmp
movsl
lcall
iret
mov
adc
cmp
bound
test
call
inc
daa
mov
push
out
insb
sub
cmc
enter
push
sub
mov
push
sub
out
pop
push
jo
int3
in
stc
int3
hlt
hlt
popf
out
or
and
fwait
stc
add
movsb
and
pusha
fstps
hlt
sbb
cmp
das
add
and
xor
mov
sub
stos
arpl
mov
mov
and
outsl
scas
sbb
sbb
imul
imul
add
jmp
cmp
hlt
inc
inc
jnp
inc
arpl
adc
cltd
sub
popa
inc
enter
nop
and
fsubl
xor
shl
lret
mov
aad
das
xchg
shrb
xlat
push
sbb
jl
cmpsl
jbe
ret
mov
sub
gs
stc
or
xlat
mov
sar
cmp
data16
jl
out
clc
xchg
inc
out
imul
xor
pop
loope
mov
aas
aas
mov
cmp
outsb
shrl
push
or
icebp
push
cmpsl
adc
ror
pop
mov
jle
cmp
sbb
test
mov
outsl
loopne
mov
jno
inc
lods
fbstp
lds
push
add
push
cmpsb
adc
sarl
into
xor
inc
sarb
push
ljmp
or
dec
pop
mov
sbb
jge
outsl
lret
ror
adc
and
and
adc
filds
fcoml
push
mov
nop
or
mov
je
mov
inc
pop
sub
adc
mov
repz
movsb
cltd
les
hlt
push
jbe
or
xchg
cmp
sbb
xor
jl
cli
lods
fnsave
mov
adcb
shrb
sbb
out
jno
pop
in
sub
les
sbb
push
mov
inc
call
xchg
bound
clc
adc
fs
getsec
inc
sbb
imul
arpl
mov
xor
adc
push
lods
push
insl
pop
sbb
xlat
icebp
cmpsl
xchg
jbe
cmp
andb
xchg
xor
test
cmpsb
inc
mov
stc
icebp
sahf
popa
push
cmp
std
cmp
pusha
push
ror
mov
data16
sbb
pusha
shl
insl
pop
adc
add
stos
jecxz
in
cli
pop
shrl
cmp
cli
les
ljmp
xchg
and
jb
push
inc
mov
xchg
fildl
mov
dec
outsb
cmp
mov
mov
hlt
fbld
sbb
cld
xor
rorl
dec
dec
fdivl
cmp
cwtl
out
in
test
scas
add
aaa
ljmp
add
dec
mov
int3
ja
js
jp
enter
add
cmc
lock
lret
dec
mov
sub
xchg
ret
aad
push
sbb
add
popa
mov
mov
dec
in
xor
adc
sbb
xchg
enter
or
pop
arpl
xchg
xchg
inc
and
fs
mov
mov
popa
sarb
jb
mov
pusha
mov
dec
sub
insb
hlt
jg
jmp
lret
std
sbb
fldcw
lods
cs
iret
rcrl
out
sbb
dec
jnp
std
mov
insl
ficomps
sub
mov
mov
xchg
mov
push
or
inc
pushf
rolb
and
fsubl
lds
ljmp
loope
jp
jg
fsubl
and
or
dec
ljmp
lea
mov
sub
and
and
mov
xchg
jnp
xchg
add
add
fcmovne
push
inc
mov
sub
aaa
ljmp
xor
mov
out
sti
sbb
mov
mov
mov
mov
mov
clc
sub
stos
mov
jnp
adc
pop
xchg
mov
xchg
imull
jge
stos
aaa
addr16
dec
cmc
jnp
pop
pushf
xchg
je
aam
adc
cld
jne
iret
sti
rcrl
js
inc
or
sub
cli
jne
or
shlb
aad
pop
push
ss
push
push
dec
rcrb
dec
and
xor
shlb
fcoms
fcomps
jbe
jo
dec
mov
in
arpl
inc
pop
in
mov
fdiv
pop
sarb
sbbl
add
mov
jecxz
cmp
cmp
lea
popf
dec
mov
sub
loopne
sbb
push
ds
adc
push
pop
jo
andb
jo
rorb
shl
mov
lds
and
leave
jbe
stos
pop
fsubs
or
sbb
jecxz
mov
add
fnsave
xchg
hlt
arpl
lahf
cmp
fldl
jecxz
adc
sub
dec
sarl
mov
push
pop
into
mov
jmp
outsl
and
test
mov
repz
cmpps
xchg
jae
lods
sahf
adc
mov
cmpb
fs
xor
popf
sbb
jnp
or
adc
nop
mov
mov
push
jo
inc
mulb
inc
or
xchg
les
movsl
jb
out
ret
push
fisttpl
jge
repnz
xlat
mov
test
mov
fisttps
fidivrl
sub
xchg
sub
stos
mul
pop
sbb
in
nop
lahf
mov
pop
lock
xor
outsb
jo
leave
out
es
in
xchg
stos
lea
imul
stc
leave
lret
sbb
frstor
and
jp
pusha
icebp
push
incb
mov
xor
aad
mov
push
or
rorb
popa
lds
cli
sbb
mov
mov
mov
xchg
cmpsb
cmp
loope
cli
add
call
push
cmpsl
mov
jg
ja
and
enter
arpl
mov
mov
push
iret
pop
xor
test
or
cli
sbb
and
pop
sub
ret
pop
pop
add
fwait
ds
mov
push
in
das
stc
stos
insl
lret
pop
lcall
arpl
xchg
pusha
mov
loope
mov
jp
fs
dec
test
std
es
push
add
pop
jge
xorb
lea
outsl
mov
jle
cwtl
in
jbe
stos
push
mov
test
into
lea
inc
dec
sub
inc
push
pushf
jmp
mov
lea
fsts
sbb
test
jo
jo
in
mov
jno
cwtl
cwtl
jl
ljmp
and
xchg
or
int
mov
cmpsb
dec
inc
icebp
jp
iret
sarb
cwtl
ret
pop
int
imul
repnz
push
or
xchg
mov
mov
iret
sbb
push
push
cli
lea
mov
inc
fldl2t
les
stos
adc
imul
mov
or
push
mov
and
mov
insb
jle
jne
xchg
bound
aad
jp
aad
push
loopne
jne
subl
pop
lock
push
cmp
xchg
por
mov
scas
adc
xchg
pop
push
mov
and
cmp
or
and
push
mov
stos
push
rcrl
pop
jb
clc
out
sahf
fldcw
pop
sbb
or
shr
add
cwtl
add
sbb
xor
mov
jl
in
cmpb
mov
mov
sbb
xor
in
adc
testb
out
add
mov
sti
stos
jecxz
fs
inc
jnp
and
ds
mov
lahf
icebp
ret
lock
xchg
ret
loopne
inc
lock
mov
dec
or
mov
test
ds
xor
cmp
into
lods
and
ret
cmc
outsb
aas
jns
xchg
cwtl
push
pushf
lcall
add
and
into
xchg
dec
and
fs
mov
inc
addb
clc
mov
movsl
mov
dec
dec
xor
pushf
xchg
add
mov
call
push
imul
or
enter
jo
mov
insb
lret
sbb
push
iret
cmp
lcall
pop
insb
sbb
cli
sbb
add
das
jbe
call
cmpb
mov
jae
push
add
mov
push
out
jle
sti
push
dec
xchg
outsl
adc
mov
mov
sub
int3
xorb
lahf
or
sbb
bound
outsb
sub
hlt
and
mov
mov
jle
cltd
or
jg
jae
and
and
mov
add
nop
mov
jle
mov
jae
and
xor
adc
adc
rorl
sti
mov
cld
in
pop
push
rcrl
lods
jbe
add
pop
jae
push
div
scas
scas
dec
or
rol
in
les
shrl
lods
jns
add
cmpsb
cmpsb
push
ret
jbe
mov
and
scas
data16
mov
cmpb
mov
clc
sub
mov
xorl
adc
ja
push
aaa
sbb
push
mov
mov
push
cmp
jno
das
mov
pushf
movsb
icebp
inc
mov
rcrl
ret
outsl
mov
mov
cmpb
lock
pop
mov
jmp
cmp
push
cmpl
fstpt
adc
jmp
popf
mov
xor
jnp
into
loope
es
jge
xchg
pushf
xchg
testl
cmc
push
push
jo
insb
pop
mov
adc
outsl
xor
mov
push
add
enter
inc
cmp
xor
dec
xchg
jmp
sbb
xor
add
xchg
cwtl
push
fsubl
inc
mov
xor
fmuls
lds
pop
mov
cmpsb
ficompl
pop
out
fsubrp
add
sub
xchg
cmp
in
out
sahf
dec
xchg
and
push
das
test
gs
shll
push
mov
test
scas
fdiv
in
mov
add
stos
mov
dec
mov
shrb
aaa
and
pop
add
xchg
jle
and
push
lds
lret
cmc
add
xor
adc
fs
cmp
push
das
out
test
fdivr
mov
push
adc
shl
imul
mov
mov
fcmovnbe
dec
jl
mov
dec
pop
fistps
push
dec
fisubs
int
mov
add
adc
or
xchg
adc
mov
jne
icebp
adc
mov
insb
cmpsl
xchg
mov
sbb
sub
xlat
mov
ja
jae
lret
sbb
insb
mov
call
add
js
push
outsb
xchg
add
in
mov
test
insb
dec
aam
add
or
sub
call
jmp
sbb
ficomps
and
pop
sbb
pop
sub
cltd
mov
or
mov
pop
jbe
adc
inc
nop
mov
mov
cmp
in
pop
mov
and
adc
xor
addr16
call
lahf
je
rorb
rolb
pop
out
adc
sub
pop
stc
daa
inc
lods
int3
fldcw
es
push
pop
je
daa
aam
lret
mov
adc
xchg
sub
mov
xchg
push
cmpsb
cmc
repz
cli
mov
pushl
jno
xor
fbstp
bound
sbb
cmp
lock
jmp
push
or
mov
out
mov
lock
mov
jle
push
daa
data16
jns
loop
js
or
nop
inc
jmp
dec
xorb
das
inc
repz
popa
sbb
mov
mov
xchg
jp
mov
scas
scas
dec
mov
mov
fdivs
aas
xchg
add
and
mov
test
pop
sbb
xchg
fstps
add
mov
sti
dec
mov
sbb
add
adc
xchg
push
inc
sub
sbb
ss
mov
cmp
testb
push
sub
xor
and
jg
push
sti
rclb
mov
call
sub
out
sahf
insl
add
push
mov
dec
and
push
ja
xor
mov
sbb
leave
mov
imull
repz
jb
test
orl
inc
push
sub
gs
out
out
daa
popa
in
mov
pop
outsl
inc
push
jae
rcl
and
mov
jle
ljmp
shrl
repnz
mov
insb
push
inc
icebp
push
dec
cmp
jl
movl
lock
or
scas
push
push
js
out
orb
shlb
mov
mov
in
fistpl
fisubrs
pop
enter
shl
adc
xchg
and
cmp
mov
movsb
jbe
inc
ret
pop
jp
add
adc
fucomip
test
inc
fwait
adc
lret
xchg
ret
xchg
dec
pop
push
test
insl
xor
sahf
dec
mov
add
add
outsl
int
mov
push
out
inc
fdivrl
adc
scas
xor
imul
decl
movsl
test
cld
call
fwait
imul
xchg
rcrl
in
scas
out
pop
out
jge
lock
mov
lods
mov
and
lahf
je
dec
mov
cwtl
test
cwtl
imul
shlb
das
jge
mov
xor
pop
xchg
scas
call
es
outsl
mov
mov
aad
insb
mov
inc
scas
mov
ljmp
xor
or
sub
add
pop
leave
mov
stos
add
push
fistpl
ds
cmp
lret
sub
mov
cmp
pop
out
lcall
ret
test
push
loopne
stos
fisttpl
fistpll
push
lcall
mov
jmp
push
imul
movsb
mov
call
sbbb
mov
ret
repz
lahf
jge
lds
loope
imul
mov
sub
mov
pusha
xor
rorl
and
fisttpl
ret
xchg
mov
dec
aas
sti
sub
adc
arpl
mov
lea
pop
stos
cmp
or
cwtl
sbb
aas
cmp
sbb
lea
adc
pop
popf
inc
mov
inc
je
test
xchg
mov
add
dec
mov
mov
lret
sbb
xchg
and
neg
lcall
inc
mov
jo
rolb
xor
repnz
ret
mov
dec
dec
mov
sarl
mov
inc
std
jle
rcl
or
aaa
adc
xchg
aas
jecxz
or
rcrb
stos
mov
int
push
insl
outsl
pop
loop
std
mov
das
mov
cltd
iret
pop
int
daa
pop
lcall
mov
pop
cmpsb
imul
and
adc
push
out
cld
dec
push
jo
roll
jnp
jbe
das
scas
in
mov
push
push
lods
clc
orl
cmp
ret
or
mov
jl
sbb
xchg
sub
ss
loope
cmp
cld
push
jmp
jp
iret
pop
insb
enter
cli
add
leave
lret
imul
lods
scas
dec
test
stos
cmc
or
jbe
arpl
inc
gs
mov
mov
in
xchg
inc
or
in
dec
test
jae
cmpsb
sub
das
outsb
dec
fistps
ds
push
call
push
xor
sbb
in
repz
push
mov
pop
pop
pop
cmpsb
inc
rorl
mov
shr
add
inc
rclb
push
jmp
mov
push
sub
test
mov
call
cltd
pop
and
mov
mov
inc
mov
fisttps
lret
adc
insl
add
jle
daa
gs
xor
mov
jmp
mov
mov
es
cmpsl
xor
inc
xor
incl
pop
loope
push
int3
sbb
in
jnp
leave
sti
mov
jp
mov
int
dec
pop
jnp
imul
mov
outsl
mov
scas
inc
jae
mov
sub
adc
jge
mov
mov
repz
xchg
jg
jl
or
cltd
mov
insb
nop
in
push
jo
inc
jnp
or
or
cltd
cmpsb
dec
push
push
rcl
and
fsub
mov
sub
movsl
addl
shr
cmp
cwtl
into
fsubs
lcall
mov
test
cmc
lds
popa
test
clc
mov
mov
push
rorl
add
inc
dec
bound
xchg
jg
mov
dec
xchg
std
xchg
push
xchg
cmp
lds
cli
sbb
xor
xor
dec
add
pop
movsl
or
clc
insb
or
xor
psubd
jp
jo
sub
xchg
xor
popa
push
add
xchg
lret
cltd
or
scas
pop
lea
and
in
mov
in
fcomi
xchg
daa
cmp
dec
pop
rcrb
xor
and
nop
test
push
inc
push
push
ret
jl
xor
in
ljmp
testb
data16
jge
adc
rcll
mov
dec
mov
rcrl
push
dec
mov
scas
inc
adc
cmp
scas
lcall
jb
pop
rcrl
hlt
sub
pushf
or
aad
or
mov
inc
es
imul
pushf
movsb
fcmove
je
lcall
xor
hlt
scas
jae
mov
fistl
xor
pop
add
xor
sub
out
ja
cmp
les
mov
mov
fisubs
int3
jecxz
xchg
bound
cmpsl
jb
mov
push
sub
push
std
icebp
pop
lcall
mov
lock
pop
popa
pop
mov
in
rorl
shll
push
shl
call
popa
ja
jmp
ds
add
fsubl
out
or
mov
inc
pop
xor
mov
fdivl
lahf
out
int
movsb
sub
mov
cwtl
push
scas
pop
in
test
push
jecxz
inc
jnp
xor
daa
mov
or
adc
sbbb
push
xchg
sbb
add
enter
out
lds
je
xor
pop
cmp
aas
mov
jb
dec
pop
out
jecxz
mov
add
ljmp
xchg
mov
stos
int
push
push
dec
cli
jge
jle
xchg
inc
mov
jns
inc
ja
cs
lahf
inc
fcomps
xchg
jmp
inc
adc
jle
ret
fwait
and
int3
dec
js
xor
fidivrl
pop
sbb
lds
pop
ss
sub
lods
insb
mov
push
ljmp
cmp
jl
inc
and
sbb
addl
sbb
fists
pop
movsl
sbb
push
out
mov
sahf
fsubrs
pop
ret
ljmp
ret
fs
addr16
jle
call
add
not
data16
fldcw
jne
stos
aam
nop
add
dec
mov
push
fs
and
pushf
dec
inc
or
orl
iret
loope
bnd
enter
push
cwtl
xor
mov
push
adc
enter
inc
popa
and
xchg
icebp
xchg
and
lock
aad
cmpsl
mov
int3
mov
add
fisttpll
scas
shll
add
push
xor
movsb
jae
cmp
jo
inc
cmp
cmp
mov
push
mov
insl
sbb
mov
push
push
neg
add
imul
in
arpl
cmp
cmc
fcmovnu
imul
gs
xchg
aaa
iret
cmp
add
insl
push
cli
imul
mov
lcall
insb
outsb
pusha
dec
mov
mov
xlat
sbb
sub
mov
push
int
xor
pushf
adc
cld
xorl
jnp
xor
push
mov
out
mov
ret
jbe
iret
jns
cmpsl
adc
dec
in
jnp
add
inc
xchg
dec
sub
jg
xchg
inc
cmp
in
cmp
jo
sub
gs
les
negl
and
adc
aaa
pop
icebp
enter
out
mov
push
dec
mov
pop
mov
xchg
popa
ss
sub
add
mov
in
inc
mov
out
push
cmpb
test
inc
int3
iret
fxch
aas
pop
ret
mov
lret
add
insb
mov
jno
stos
lahf
fs
mov
pop
or
mov
enter
loop
jmp
aam
and
scas
xchg
cmp
jns
out
push
sbb
jg
mov
xor
push
pop
sub
add
ds
sbb
mov
pop
jecxz
rcrl
dec
xcrypt-ctr
cmpsl
pushf
mov
pop
xchg
popf
lcall
aam
jl
push
daa
test
jne
pop
movsb
ficomps
pusha
lea
inc
scas
adc
in
out
movb
inc
arpl
orb
sbb
lock
popa
cwtl
cmp
stc
jge
add
inc
mov
popa
sbb
fdivrs
mov
aad
xchg
decb
inc
push
mov
mull
mov
in
pop
xor
push
pushf
jmp
out
cltd
xchg
or
ret
loop
inc
ds
imul
fdivl
aaa
push
dec
inc
insl
pop
das
push
outsl
rcr
inc
sub
setnp
fwait
aas
mov
push
sbb
enter
mov
loopne
mov
scas
xchg
leave
nop
js
fwait
mov
adc
fsubs
jno
push
mov
mov
mov
or
cmp
cs
sti
xchg
pusha
cld
call
or
psubq
xchg
stc
gs
dec
dec
adcl
sub
scas
in
dec
xchg
xchg
mov
sub
push
sahf
lea
xchg
mov
adc
aam
sub
cmc
leave
pop
xor
call
sbb
ret
outsb
sub
mov
rorl
jne
ret
addb
cmp
cmp
in
outsb
in
stos
add
mov
scas
or
pop
mov
fidivrs
inc
add
rcll
push
std
es
shrl
dec
lods
stos
repz
cmpsb
cltd
movsl
xor
pop
pop
mov
pop
push
cmc
jo
jbe
mov
orl
cmpsb
xchg
add
push
push
out
xchg
imulb
bound
lss
fimull
fildl
jl
jno
ss
xrelease
ret
sbb
lahf
dec
xchg
mov
sbb
xchg
push
xchg
stc
cs
xchg
clc
or
divb
fsubrs
mov
imul
inc
sub
fnstcw
jg
mov
call
xchg
sbbb
orl
mov
cmp
xchg
mov
jecxz
and
xchg
test
sahf
xchg
aad
xchg
outsb
arpl
add
and
sti
cmp
sbb
push
dec
inc
add
lcall
mov
xchg
jnp
mov
out
pop
test
out
test
dec
dec
dec
cmp
add
stos
lock
add
test
cmp
movsb
cmp
jle
xor
xchg
fcoml
push
test
movl
je
aas
sub
pop
dec
bound
filds
xchg
lods
out
cmpsb
outsb
dec
mov
sbb
xor
cmpsb
or
popf
jmp
dec
stos
dec
mov
mov
adc
lea
mov
imul
iret
adcl
pusha
ret
adc
sub
jae
mov
fucomp
cli
call
or
cltd
mov
mov
into
jne
fldcw
push
adc
outsl
shl
pop
adc
mov
dec
add
adc
cmp
pushf
adc
mov
sbb
cltd
push
imul
shlb
shll
std
sub
jno
fidivs
movsl
push
xchg
mov
sub
sldt
sub
mov
orl
rcl
enter
out
js
test
push
addl
inc
pop
das
mov
xor
xor
cs
cs
shrl
sub
loope
shr
inc
mov
pusha
adc
scas
mov
and
xchg
lea
jnp
jp
mov
cmp
out
xchg
mov
sbb
pop
js
xor
imul
xchg
ret
xchg
dec
stc
dec
inc
mov
sub
jle
dec
xor
mov
mov
ss
pop
pushf
and
sub
mov
js
adc
cs
pop
and
cmp
pop
xchg
xchg
pop
add
sub
push
cld
jns
stos
and
mov
pusha
imulb
pop
jnp
jl
test
xlat
xchg
sub
mov
lock
cmp
orl
dec
mov
xchg
aaa
xor
out
out
insb
xor
sbb
mov
lds
adc
cmpsl
int3
mov
ficomps
rclb
xorl
imul
nop
push
jns
lea
aam
lock
add
or
adc
mov
add
cmpsb
cli
jecxz
add
andl
mov
aam
push
addb
ss
lcall
test
xor
in
cmp
mov
push
mov
xorb
or
jg
sbb
or
filds
cli
push
and
subl
mov
outsb
int
jns
pop
inc
test
movsb
rcrl
repnz
jb
inc
lret
ja
ljmp
or
sub
mov
jecxz
into
mov
mov
in
xchg
imul
cmp
stos
lret
pop
mull
xchg
push
arpl
inc
jbe
and
mov
movaps
nop
inc
test
stc
adc
xchg
cmpsb
sbbb
pop
leave
cld
mov
adc
and
pop
stos
call
pop
xchg
sbb
pushf
push
ja
scas
push
jno
out
cmp
jns
mov
stc
mov
shlb
aas
cmp
xchg
sub
scas
inc
dec
xchg
jns
rcrb
outsl
jp
cltd
lods
mov
mov
adc
repz
movsl
sti
fwait
outsb
mov
mov
addr16
inc
push
mov
pop
mov
inc
js
mov
lret
roll
xchg
mov
jle
or
pushf
adc
dec
xor
cli
push
pop
popf
cwtl
jnp
jnp
aaa
out
or
xchg
mov
incl
jecxz
mov
aas
fistps
mov
test
mov
xchg
xchg
xor
neg
mov
inc
insl
inc
int3
mov
sbb
push
jo
cmpsb
mov
int3
mov
xor
mov
or
jnp
dec
shlb
jg
psllw
in
sbb
dec
lcall
adc
add
adc
adc
pop
mov
mov
mov
xchg
movzbl
fists
push
sbb
add
fdivs
lcall
inc
loop
sbb
js
stc
add
repz
push
stc
mov
jno
dec
lahf
test
das
mov
aaa
dec
inc
fcoms
mov
jns
std
add
in
and
inc
int3
in
fiaddl
push
adc
ret
lahf
adc
push
bound
lret
scas
addr16
xor
adc
or
std
iret
push
daa
es
xchg
mov
and
mov
pop
test
and
rep
popa
fdiv
sub
out
outsl
loop
cmp
jge
test
xchg
in
cmp
xor
xor
data16
xlat
xchg
sbb
xchg
iret
or
xor
dec
cltd
out
push
lahf
int3
cmp
mov
daa
xor
lods
xchg
loop
jb
xchg
movsl
or
sbb
lods
dec
imul
mov
cld
std
shll
jae
or
call
jle
aaa
in
imul
inc
pop
dec
iret
mov
cmp
jp
test
sub
inc
mov
shlb
mov
sbb
fcmovnb
sub
daa
mov
cmc
or
stos
lret
mov
jno
inc
and
adc
in
icebp
cmp
add
and
adc
cmp
fstps
addr16
dec
cmpsl
cwtl
pop
xchg
popa
mov
mov
sbb
shrl
and
mov
add
iret
pop
dec
in
les
lock
loopne
in
int3
addr16
call
mov
test
mov
jecxz
jge
or
add
mov
mov
arpl
mov
sub
dec
cltd
into
loope
jne
shl
mov
inc
xor
xor
push
test
int
cmp
xor
insb
jae
mov
inc
sahf
popa
pop
int3
cmp
jge
jle
push
add
inc
jle
mov
xchg
lret
pop
fmuls
outsl
mov
repnz
mov
jns
test
pop
sub
mov
sbb
arpl
sbb
rcll
shll
add
repz
scas
pop
inc
xchg
repz
or
test
xor
sub
add
jne
and
inc
jecxz
sub
and
add
std
fs
jns
test
or
cmp
enter
mov
adc
ja
aad
out
stos
jecxz
ud2
xchg
arpl
push
lahf
xor
jp
mov
inc
movsl
and
jne
pop
pop
jecxz
icebp
je
andl
sbbb
pop
bound
jnp
inc
pop
fsubl
lock
scas
cmpsl
xlat
jg
push
pop
adc
lahf
adc
jg
jne
lahf
push
sahf
fwait
jg
xchg
enter
pop
fisttps
xor
repz
lret
jmp
cltd
aad
add
cmc
movsl
stc
cwtl
inc
mov
movsl
shll
in
cmp
hlt
pushf
jnp
jge
dec
js
in
stos
adc
cltd
and
cltd
jno
mov
add
lds
push
sub
fsts
cmp
in
push
lods
out
xchg
mov
gs
enter
mov
xchg
dec
bound
cmc
cltd
dec
nop
rcrl
ljmp
aam
aad
jns
jg
cmp
xchg
add
sub
rcll
inc
cwtl
jmp
pop
fistpl
cmp
outsb
push
push
inc
dec
cmp
mov
ljmp
sbb
jge
fsubrp
movaps
gs
bound
xchg
sbb
push
mov
and
sbb
xor
das
jmp
jno
xchg
xchg
clc
mov
push
mov
pop
cmp
pop
pop
ret
sub
jmp
dec
pop
test
and
lock
jbe
in
sbb
inc
sub
jo
pop
add
dec
mov
pop
pop
and
cltd
sub
inc
add
aad
xlat
inc
out
out
clc
pop
faddl
jb
in
iret
sbb
jle
jnp
loope
sbb
gs
mov
std
push
xor
cmp
dec
das
jno
in
mov
into
xor
xchg
pop
lret
cmp
into
pcmpgtb
pushf
push
int
sahf
push
std
xor
in
mov
or
cmp
fcomp
int3
inc
int3
cltd
push
inc
rcll
xchg
add
xchg
jb
pop
out
jae
xorl
mov
js
aaa
je
scas
or
adc
mov
mov
push
sbb
xor
pop
je
sahf
jno
jns
and
inc
ds
adc
push
test
pop
xchg
mov
popf
test
repz
xor
cli
add
jl
lods
dec
stos
add
xchg
in
data16
mov
in
cmovae
lds
negl
push
cmp
add
push
dec
and
pop
bound
in
cmp
sub
cld
fld
sub
pop
data16
sbb
je
fisttpll
iret
sub
adc
dec
aaa
mov
imul
jg
cltd
stos
sarb
push
popf
pop
or
jp
mov
cmpsl
sub
jo
jle
rcr
adc
adc
std
or
pop
jmp
and
fldt
lret
or
mov
sub
xor
pop
xchg
movsb
iret
mov
add
add
ret
dec
mov
jmp
insb
pop
inc
repz
xor
pop
cmc
xor
mov
jp
sub
adc
cmp
lcall
cld
pop
add
inc
lea
cltd
dec
mov
xchg
sub
insl
adcb
add
es
adc
and
and
cltd
mov
push
cld
or
adc
addr16
add
testb
scas
int
xor
push
xor
mov
xor
lret
addb
push
mov
ficomps
cwtl
sbb
push
enter
aaa
imul
jg
jne
pop
inc
and
seta
xchg
cld
add
inc
pop
cmp
push
cltd
xor
imul
cld
leave
subl
sub
pop
mov
xor
dec
push
mov
pop
jl
movl
test
icebp
push
fldcw
push
jae
jno
sub
popa
addl
inc
adc
dec
jl
icebp
jl
sub
mov
jecxz
jo
mov
add
ret
movsb
mov
bound
iret
insl
jl
out
into
pop
daa
cmp
aad
imul
repz
cmp
daa
pop
dec
test
dec
mov
sub
xchg
outsb
cltd
jg
lea
adc
push
cmp
push
and
cs
fwait
sti
andb
mov
scas
sbb
pop
nop
cmc
dec
mov
jmp
and
mov
jecxz
adc
add
test
jo
sbb
sbb
inc
sub
ret
push
sub
xchg
andl
mov
insl
or
push
into
imul
jne
mov
shll
push
stc
nop
adc
cmp
mov
xchg
ljmp
lea
loope
cmp
mov
mov
xchg
adc
xchg
jp
adc
sbb
scas
xchg
orl
out
inc
rcll
adc
sbb
mov
sbb
mov
jns
faddp
pusha
cs
je
add
or
filds
mov
movsb
xor
pop
notl
push
cwtl
rcrl
cld
push
lods
xchg
scas
push
xor
mov
pop
jle
xchg
push
cmp
jo
cli
mov
xchg
mov
rcrb
mov
pop
jmp
lods
mov
popa
loope
jp
mov
loop
jge
dec
jg
cmp
or
jns
or
push
subb
ret
adc
dec
cltd
jbe
or
aad
cwtl
rol
cmp
xchg
jne
mov
xor
cmp
add
xor
xchg
sub
push
pop
mov
rcl
jb
arpl
jmp
in
mov
je
nop
rcl
arpl
inc
in
push
and
cmc
adc
lahf
mov
retw
add
xor
les
repnz
clc
clc
mov
es
clc
pop
adc
fisubs
lods
pop
movb
xchg
jno
xlat
loope
iret
mov
adc
jle
cli
out
movsl
push
ror
push
fmuls
xor
push
inc
and
in
insb
jo
lcall
lock
mov
mov
dec
dec
repz
jne
lds
dec
aaa
sti
mov
jns
sub
mov
pop
pop
push
mov
push
inc
mov
add
shll
sub
add
jmp
pop
push
dec
sbb
xchg
addb
jne
cmpsl
mov
jmp
push
fwait
and
or
outsl
push
fisubrs
loopne
add
jno
mov
imul
popa
sub
add
push
mov
pop
into
mov
inc
nop
pop
clc
cld
decb
xchg
ficomps
int
movsb
insl
mov
aam
das
pop
or
xor
in
ljmp
repnz
mov
sub
cmp
add
dec
in
lods
jne
hlt
jnp
lret
enter
pop
stc
stos
sub
int3
cld
es
jl
movsb
pop
enter
cld
filds
dec
xor
or
xchg
sahf
cmc
jno
mov
loopne
jnp
or
mov
mov
xchg
mov
adc
mov
mov
cmpsb
xchg
adc
stos
jmp
je
rcl
push
mov
mov
lds
test
shll
orl
jnp
icebp
bound
mov
mov
in
jmp
data16
cmp
pusha
nop
xor
idivl
das
subl
pop
incl
mov
out
sbb
mov
outsb
fs
test
pop
inc
sub
xchg
add
add
jl
sub
imul
repz
inc
and
daa
int3
fs
cmp
ret
sub
ret
mov
adc
mov
adc
cmp
sbb
fsubrl
in
cld
sbb
jbe
and
cld
dec
aad
and
roll
adc
je
cmp
lea
fbld
fs
pop
jne
dec
pop
mov
sbb
jne
dec
add
mov
pop
xchg
repz
or
mov
lret
mov
out
push
fimull
add
add
out
mov
pop
pop
fadds
jns
add
xor
adc
shrl
mov
push
out
out
les
loope
cltd
out
mov
ror
sub
xchg
and
shrb
dec
mov
lahf
andl
es
fisubrl
and
gs
int
loope
enterw
sahf
clc
enter
lret
sbbl
out
xchg
clc
fidivl
ficoml
ret
mov
loopne
out
lcall
test
lods
jp
out
lods
cmc
fdivrl
add
xchg
xchg
sub
cld
jno
cmp
or
stc
imul
push
data16
andb
cmp
jmp
rolb
cmp
push
mov
push
fwait
xchg
xchg
mov
mov
or
pop
add
loopne
adc
xchg
mov
inc
sub
pop
pushl
dec
ljmp
push
adc
push
mov
sahf
arpl
dec
cmp
mov
ret
mov
sub
xor
iret
mov
testb
aas
push
arpl
add
inc
sbb
sub
out
add
cmc
faddp
xor
sahf
xchg
testb
cmp
std
sub
enter
fiadds
mov
filds
out
jge
cmp
sub
sahf
xor
adc
dec
mov
shll
test
xchg
pop
inc
andb
mov
mov
scas
cltd
mov
mov
push
inc
out
in
jae
aas
inc
popa
sub
sub
inc
das
xorl
cmp
cmp
mov
popl
loop
lods
inc
int
cmp
out
mov
and
pop
loopne
mov
and
adc
aad
fiadds
sub
push
in
xor
adc
push
pop
in
add
gs
in
aas
in
daa
outsl
arpl
pop
mov
je
repnz
popa
adc
popa
icebp
imulb
movsb
lret
jmp
mov
xor
cmpsl
pusha
rcrl
cmp
icebp
cmp
push
shlb
hlt
jl
mov
jg
sub
bswap
stos
stc
insl
sbb
cmc
ror
mov
stc
sbb
inc
icebp
mov
fmull
jecxz
scas
and
sbb
mov
daa
dec
cmc
dec
scas
mov
jp
pop
testb
pop
jo
arpl
jnp
js
adc
mov
push
push
pop
sbb
arpl
mov
addr16
mov
je
inc
test
xor
fildl
pop
sbb
sub
dec
lock
test
mov
ret
cmp
pop
mov
out
or
cmp
arpl
aad
push
cld
fildll
xor
xchg
mov
pop
push
gs
sbb
mov
pop
aad
sbb
lcall
inc
push
nop
inc
icebp
mov
mov
sahf
lahf
daa
lahf
mov
ja
or
pop
sub
fisubs
gs
push
dec
icebp
mov
subb
scas
xchg
jg
xchg
xchg
inc
cmpsl
dec
call
aam
loop
popf
out
fldl
fldl
mov
movsl
fnstsw
pushf
sbb
inc
xchg
pop
js
pushf
add
and
cmp
fmulp
push
cmpsl
pop
adc
and
lahf
fucomip
or
hlt
dec
cmp
jmp
jbe
call
dec
add
scas
pop
shl
mov
negb
into
lret
cld
add
mov
mov
scas
jg
clc
cwtl
dec
jp
mov
push
nop
test
mov
rorl
cmp
sti
xchg
sbb
cmpb
inc
mov
insl
gs
lret
xor
push
mov
sub
mov
imul
ja
xchg
popf
or
jbe
mov
sbbl
or
scas
push
pop
nop
sbb
xchg
aas
int3
hlt
std
ret
fisttps
jecxz
fdivl
mov
xchg
mul
ja
scas
call
and
xchg
xchg
mov
inc
cmc
sbb
push
jmp
push
pusha
dec
fstps
popl
sbb
imul
lea
pop
lods
inc
mov
push
sub
add
sub
shll
mov
jmp
inc
xor
and
rclb
mov
push
mov
ljmp
jmp
mov
sbb
daa
inc
pop
je
test
imul
pop
cmp
ss
mov
push
adc
jae
fwait
add
inc
aaa
jns
mov
inc
aad
imul
cwtl
xchg
mov
inc
xchg
cmp
ss
cmp
and
int3
mov
loope
sub
cli
daa
out
fsubs
addr16
jbe
cmpsb
xchg
xchg
or
sub
outsb
pop
je
mov
movl
jge
jge
cwtl
xlat
mov
lret
fcmovnbe
push
xor
loop
cmp
and
mov
in
push
dec
jno
push
je
cmp
jae
mov
outsb
sbb
daa
mov
negl
push
andb
xorl
repz
push
lcall
cmp
cwtl
mov
or
pushf
mov
push
mov
in
pushf
xor
sub
clc
out
sub
and
sbb
int3
mov
jp
mov
xor
xor
push
mov
mov
adc
dec
adc
imul
mov
xchg
cmp
loop
mov
jo
pop
data16
bnd
mov
cli
jne
data16
sarl
adc
xchg
or
imul
add
aad
cmp
fs
mov
stc
int
lods
cld
xorb
xor
add
mov
stos
fwait
daa
jecxz
out
or
inc
ss
fidivl
rorl
xor
es
or
fisttps
bswap
pop
xchg
test
movsb
jle
mov
mov
lock
cwtl
mov
mov
cmp
inc
call
pop
push
out
clc
sbb
shr
mov
lret
xchg
outsl
ss
test
inc
mov
test
add
test
sahf
lahf
push
gs
add
filds
cmp
lds
test
je
repz
inc
lret
popa
sbb
sbb
sub
cmc
push
sub
xchg
push
push
jmp
mov
loop
sbb
mov
mov
cmp
in
xchg
fs
jo
sbb
mov
sub
inc
push
xchg
lahf
out
rcl
xor
pusha
in
subb
pop
jbe
scas
test
push
or
mov
je
mov
pop
pop
sbb
lret
cltd
add
and
jmp
fndisi(8087
mov
push
mov
xchg
sub
and
cmp
pop
fistl
or
push
lahf
or
movsb
push
xor
or
adc
fisttps
into
push
add
or
fidivs
inc
mov
dec
cmp
mov
or
add
lahf
in
and
fadd
mov
add
ret
stc
ret
test
sahf
pop
jg
add
jo
in
push
xlat
adc
sub
sbb
jno
pop
add
pop
mov
sub
cmp
aaa
jno
jle
jb
je
scas
adc
push
and
sub
stos
clc
pop
mov
in
sbb
inc
dec
fimull
scas
nop
adc
js
repnz
lock
in
push
nop
add
cmpsl
cmc
or
cltd
cld
mov
lds
aam
cltd
loopne
sbb
or
add
iret
jp
out
inc
insl
in
jne
xchg
test
loope
sbb
push
jne
loopne
pop
fcmovne
aaa
dec
fwait
sti
addr16
dec
gs
pop
test
mov
lock
jp
ret
lds
ljmp
cmp
int
sub
mov
aaa
mov
fildl
and
mov
imul
sbb
scas
xor
aad
add
aaa
stc
add
mov
pushf
push
fildll
jno
mov
jmp
push
xlat
adc
dec
into
sbb
xlat
les
fisubl
lcall
test
outsb
sub
mov
xor
mov
insb
add
jge
dec
out
sub
test
dec
dec
xor
test
push
in
mov
inc
dec
enter
and
sbb
dec
lahf
and
jp
popf
sti
fwait
andl
xor
lret
frstor
stos
dec
outsl
cld
arpl
ja
stos
add
dec
addb
pop
ja
lret
push
jae
sbb
test
xor
xchg
fistpl
movsl
lds
icebp
lods
aas
or
testl
xchg
imul
or
stos
imul
add
lds
sub
cwtl
ljmp
push
les
add
ja
inc
call
and
cmp
lock
push
loop
in
pusha
cmp
pop
cmp
ds
xchg
ffreep
mov
inc
rcr
mov
xor
xchg
repnz
sub
xor
enter
cmp
cmp
orb
xor
xor
pop
into
out
sub
mov
jle
call
daa
test
outsl
dec
movsb
cmp
cmp
ror
xor
stos
insb
fistpll
pop
lea
xchg
sbb
xchg
hlt
push
sbb
cmpl
xchg
aam
outsl
pushf
lahf
inc
cmp
mov
insl
std
add
mov
imul
and
dec
mov
sub
bound
popf
movsb
xor
lret
sub
mov
push
dec
in
jmp
add
out
pop
lock
xor
movsl
and
add
in
or
xchg
jae
mov
inc
xchg
jmp
pop
inc
sbb
xchg
enter
std
ljmp
fdivs
mov
andb
cwtl
mov
mov
ja
mov
ja
cmpsl
add
dec
push
aam
cmp
push
jns
int3
pop
inc
or
dec
ror
push
call
cmp
cmpsb
mov
mov
cld
aas
in
scas
sbb
loopne
in
out
into
das
jns,pn
test
scas
js
aaa
add
mov
lcall
xchg
js
sbb
xlat
pop
int3
stos
push
outsb
jbe
addr16
nop
bswap
mov
int3
out
mov
or
jae
dec
in
pop
into
popf
xorl
ss
sar
push
stc
mov
hlt
insl
leave
aaa
add
push
fisubrs
xchg
cmpb
mov
ficomps
sbb
push
out
fsubrl
les
or
jns
xchg
sbb
mulb
xor
outsb
cmpl
mov
movsl
sub
xchg
mov
in
inc
add
add
mov
inc
add
rorl
lahf
jb
mov
insl
dec
fnstenv
jl
jmp
add
push
jmp
sub
dec
cmp
mov
sahf
jp
push
cmp
jge
test
dec
pop
dec
das
dec
xor
pop
xchg
jmp
test
push
fnstcw
xchg
jg
mov
pop
cs
nop
mov
cmp
leave
ljmp
push
inc
adc
icebp
cli
fs
and
xchg
inc
nop
xor
and
pop
xor
sbb
addb
jecxz
popa
xchg
cmp
in
or
pop
xor
imul
mov
push
mov
or
add
fs
mov
inc
aad
rclb
in
inc
mov
or
mov
xchg
je
jno
xchg
adc
loopne
xchg
pop
fs
push
push
sub
xchg
hlt
adc
sub
sub
push
mov
xor
pop
iret
xor
xchg
mov
jl
push
pop
loop
iret
lret
mov
or
and
mov
push
dec
mov
push
sti
mov
imul
bound
pushf
hlt
outsb
pusha
pop
add
sti
int3
mov
les
ret
js
std
inc
rorl
ret
addl
jb
jb
lock
xchg
outsl
jns
outsl
fmull
jbe
es
add
lcall
dec
adc
sar
pusha
movsl
lds
pop
mov
inc
leave
in
mov
and
lock
pop
xor
jge
js
int
and
ficoml
outsb
mov
xor
adc
inc
dec
push
xchg
test
mov
adc
or
sahf
in
out
sub
stos
pop
mov
sub
icebp
sbb
and
jno
ror
mov
lock
aaa
imul
xlat
jmp
xchg
mov
repz
or
or
fdivl
dec
mov
sbb
dec
lcall
mov
mov
fsubl
push
ret
jl
add
enter
fdivl
mov
and
pop
push
sbb
push
mov
cmp
mulb
lock
or
test
sbb
mov
fcomi
aad
xor
scas
dec
pop
cmpsb
adc
inc
in
mov
shlb
sahf
mov
cwtl
testl
pop
in
xor
movsl
pushf
mov
adc
call
addr16
cs
test
stc
fdivrp
cwtl
sbbl
fs
mov
mov
cli
add
xchg
jl
stos
add
testb
add
mov
jae
ja
sarl
nop
rol
jl
pop
addr16
mov
push
push
sub
cmp
leave
fcompl
in
pop
lock
das
push
std
mov
and
inc
push
iret
ss
cmp
loopne
or
lahf
test
jmp
stc
cmp
and
rcl
push
ret
dec
dec
sbbb
std
int
lahf
cli
push
jb
arpl
push
popa
in
mov
fidivl
std
mov
pop
add
sub
mov
and
mov
lds
push
fnstcw
mov
mov
adc
sbb
push
sub
add
sahf
iret
dec
xchg
nop
aam
mov
std
es
das
ret
mov
xchg
pop
shrb
xor
cld
add
dec
inc
xor
mov
mov
xor
mov
cmp
jg
leave
xlat
imul
lcall
jp
push
mov
scas
les
sbb
push
fistpl
je
mov
imul
les
rcrl
sbb
jo
push
arpl
dec
es
bound
das
pusha
dec
mov
sbb
les
loope
bound
push
push
cmp
std
test
sti
addr16
sbb
aam
sarb
sbb
add
inc
pop
inc
xor
scas
dec
test
lods
in
clc
inc
stos
dec
dec
pop
cmc
jl
adc
add
repz
mov
ds
cmp
jbe
and
sbb
aad
jg
into
jmp
sbb
stos
clc
hlt
mov
vmovsd
ja
mov
fsubrl
cmc
es
mov
xor
pop
jae
iret
inc
xchg
push
xchg
mov
mov
test
cmp
push
fimuls
aam
inc
scas
sbb
adcl
out
or
sub
aaa
rclb
mov
andl
mov
sub
in
int
and
inc
mov
lods
lret
sbb
push
out
gs
movsl
stos
push
mov
jns
js
mov
lods
push
int
xor
dec
dec
stos
sub
lea
add
out
outsl
cmpsl
add
std
rclb
add
jns
xlat
mov
sbb
gs
push
xor
divb
test
pop
xchg
add
add
add
aas
jbe
sbb
das
dec
mov
mov
xchg
out
rcl
mov
enter
mov
fwait
mov
rorb
xor
pop
push
and
addr16
mov
mov
and
mov
or
test
jne
aam
jo
les
out
xchg
test
sbb
push
mov
test
in
ror
inc
mov
insb
fistl
push
mov
mov
adc
pop
inc
out
sbb
dec
movb
jmp
or
inc
inc
mov
je
xchg
loop
adc
adc
sti
mov
push
sub
jo
adcl
push
loope
adc
pop
mov
pop
pop
jmp
loopne
scas
lret
sbb
aaa
aas
push
mov
add
push
pop
pushf
outsb
xor
out
lret
inc
sub
pop
add
push
mov
fs
mov
mov
xor
jne
mov
mov
mov
addr16
push
dec
cmp
arpl
fadd
jmp
fwait
lret
pop
add
out
push
outsb
addr16
clc
pop
mov
or
mov
or
popa
iret
shlb
ficoms
or
xor
repnz
outsl
sbbb
inc
sub
cltd
in
lcall
loopne
scas
mov
int3
sahf
dec
ss
adc
into
mov
dec
sub
mov
and
lahf
cmpsl
sub
std
test
dec
adc
and
sbb
mov
mov
xor
pop
mov
iret
in
test
mov
stc
sub
dec
jno
add
movl
dec
pop
and
push
sbb
adc
scas
jo
fwait
push
dec
push
cs
jl
aaa
sbb
sub
sub
sti
adc
jbe
in
mov
jle
hlt
ficompl
push
and
inc
xchg
dec
stos
push
dec
sub
or
pop
pop
cmp
jmp
xchg
popa
xchg
jp
jo
dec
jg
xor
test
pop
je
je
es
into
stos
hlt
jbe
xchg
stos
mov
jne
in
iret
cwtl
mov
imul
mov
decb
es
aam
cli
fidivs
inc
jns
call
adc
xchg
push
lea
xchg
add
lods
repz
je
dec
insl
mov
scas
sub
add
adc
stc
push
sbb
daa
mov
push
sbb
mov
jecxz
cmp
jg
rorl
and
shl
addr16
imul
mov
inc
in
lret
or
insl
adc
repnz
mov
cltd
adc
cltd
rolb
pop
mov
mov
sbb
or
scas
dec
jno
adc
lcall
rcrl
xchg
jl
mov
jns
and
inc
and
test
sub
gs
sub
lods
lods
into
xor
sub
mov
push
aas
mov
dec
iret
fiaddl
mov
and
inc
lcall
mov
mov
sbb
adc
xchg
cmp
aad
mov
mov
inc
dec
orl
jnp
or
push
mov
xchg
push
imul
repnz
adc
mov
dec
add
jle
jg
fucom
out
leave
pop
cmc
mov
test
mull
imul
xchg
lods
pushf
sub
fistpl
jo
andl
cli
paddusb
shl
xchg
sbb
adc
pusha
js
ss
imul
lock
push
aas
ss
imul
jle
and
imulb
xor
inc
pop
xlat
pop
push
pop
int
lcall
out
pop
outsb
lahf
mov
mull
nop
xchg
or
push
xchg
cvtps2pi
mov
shlb
imul
xlat
mov
movsl
addr16
pushf
fsubrl
xchg
test
arpl
inc
testb
jo
mov
mov
and
scas
sub
or
sub
sbb
sbb
push
ret
dec
mov
loope
in
mov
loop
mov
aam
fadds
mov
cmp
mov
dec
and
aaa
loope
cltd
dec
xor
in
push
cmp
mov
test
les
mov
xor
pop
lahf
jbe
mov
sub
adc
in
es
into
test
mov
inc
mov
in
mov
scas
xor
int3
out
adc
sub
sub
icebp
push
mov
sbb
aam
jbe
sub
js
shlb
jb
pop
mov
push
xchg
mov
jle
cwtl
sbbl
out
enter
pop
inc
shrb
sbb
bound
mov
imul
pop
cmpsb
mov
add
stos
mov
test
mov
sbbb
aam
stos
push
or
imul
hlt
sbb
iret
out
cli
lods
jb
xlat
imul
es
sbbl
pop
cmpsl
fldcw
enter
mov
dec
xchg
mov
lds
addb
jbe
js
test
dec
inc
stos
outsl
cmpsl
in
shll
incl
sub
xchg
aas
jne
mov
add
inc
inc
mov
out
shll
ret
mov
int
lea
movsb
lret
mov
push
scas
ds
sbb
pushf
mov
mov
adc
gs
mov
fbld
scas
inc
mov
idivb
dec
and
pop
lods
cmp
or
hlt
mov
not
inc
add
cmp
or
pop
or
rorl
cs
mov
mov
and
cmp
pop
xor
mov
or
jmp
fdivrl
in
cltd
mov
inc
in
test
xchg
addb
inc
rcrl
fprem1
inc
pop
lock
xchg
dec
mov
test
addl
add
adc
xchg
cmp
imul
dec
or
inc
scas
rol
or
or
leave
std
test
fldcw
push
out
mov
xlat
aaa
icebp
lret
stos
ljmp
andl
cmp
add
das
es
jo
mov
sub
mov
pop
aad
jmp
mov
mov
movsb
ret
add
sbb
sub
addr16
mov
mov
mov
cmpsl
adc
mov
nop
xchg
mov
cmpsl
nopl
jecxz
push
mov
pop
sbb
or
push
inc
adc
sbb
jbe
aad
sub
ret
test
xchg
out
and
or
aam
inc
push
test
or
and
mov
mov
cmpsb
jl
xchg
push
xor
adc
jnp
sbb
out
and
int
xorb
lcall
leave
mov
cli
insb
adc
imul
dec
movsb
sbb
imul
insl
push
sub
jno
xchg
ljmp
push
lods
jb
ds
pop
test
shr
or
lods
mov
mov
jmp
int
push
xchg
push
js
stos
repnz
ret
mov
cmpsb
push
jecxz
dec
mov
jne
shll
das
xlat
or
daa
lods
movsl
orl
ljmp
push
cmpsb
js
xchg
mov
pop
push
div
mov
je
add
mov
ret
mov
sahf
jnp
test
xlat
xor
inc
int
sbbl
movsb
sub
lods
inc
mov
jo
scas
js
pop
xchg
xor
lret
movsb
dec
mov
add
fwait
xchg
popa
xor
push
cmp
pop
sbb
sarb
adc
cli
addl
dec
push
gs
cmp
jmp
mov
loope
scas
mov
stos
arpl
jae
imull
xchg
xchg
inc
push
xor
and
mov
shl
jb
gs
mov
shll
repz
sarl
stos
popf
add
das
fs
adc
xor
jl
or
and
push
nop
in
ss
inc
stc
jecxz
outsb
ror
push
sub
test
or
fwait
ss
jl
imul
dec
push
ds
sti
scas
in
pop
xlat
pop
and
fimuls
testb
xor
mov
adc
mov
shlb
xlat
ret
pop
lock
test
scas
movsl
push
je
adc
aam
das
mov
cmpsb
mov
jae
jge
stos
aam
lcall
jnp
pop
sub
xchg
and
or
out
sahf
mov
xchg
mov
and
jp
mov
incb
icebp
pusha
push
stos
pop
hlt
ss
fisubs
movsl
int
filds
and
pop
int3
enter
rcrl
cmp
test
and
add
sahf
and
stos
mov
mov
mov
das
cld
daa
test
cs
adcb
cmp
std
and
jg
cmp
xor
inc
jl
incl
out
lahf
or
or
subl
movups
test
scas
add
inc
push
mov
pop
xor
pop
mov
dec
ficoms
cmp
jae
cmp
push
pop
cmp
andb
pop
or
imul
or
jge
imul
leave
mov
fcoms
xchg
cmpsl
xor
test
mov
dec
sti
repnz
jb
pop
ja
adc
pop
insl
insl
dec
ljmp
push
cmpsb
mov
imul
cmp
cmp
fistpll
dec
ud2
mov
sub
mov
jmp
scas
loop
hlt
jno
clc
addb
fisttpll
shlb
or
jmp
inc
leave
divb
xchg
push
cmp
bound
not
sub
push
and
push
shll
sbb
mov
pop
aad
sti
xchg
mov
or
outsl
out
aam
jp
insb
adc
jno
xor
loope
dec
inc
jo
aam
cmp
mov
xor
jmp
pop
mov
push
push
sbb
out
popf
or
inc
add
mov
cmp
mov
mov
dec
insl
xor
mov
in
xor
scas
mov
test
imul
jg
shr
fimuls
les
dec
inc
addr16
pop
add
mov
scas
jp
jne
outsb
call
jmp
jp
leave
lret
sti
add
cmpsl
jl
data16
daa
arpl
mov
icebp
push
mov
add
sbbl
sub
clc
pop
sbb
dec
dec
sbb
out
adc
enter
xor
adc
out
push
jg
aad
or
scas
pop
add
xlat
mov
or
mov
add
out
mov
fstpt
mov
leave
xchg
pop
aaa
mov
les
cmp
pop
mov
fisubs
imul
outsb
mov
mov
mull
pop
pop
fistpl
orb
scas
pop
test
adc
dec
mov
outsb
scas
pop
cmpsl
dec
jge
outsb
movsl
int
shlb
jne
mov
lret
mov
ret
and
inc
cwtl
repnz
xorl
push
or
jno
fiadds
dec
lcall
lea
mov
or
js
rolb
outsb
rcr
adc
fidivs
shll
popf
loopne
test
ds
out
jecxz
fcomps
hlt
sarl
xorl
hlt
sahf
into
pop
lods
mov
fidivrl
and
mov
aam
jo
into
push
je
stos
stc
inc
push
dec
xchg
ss
adc
and
outsl
lahf
movsb
push
inc
lret
adc
nop
or
add
sbb
fiadds
mov
das
mov
adc
pop
ret
jo
jge
lods
sbb
inc
pop
neg
push
mov
and
mov
pop
dec
scas
jnp
leave
aaa
mov
je
sbb
inc
repnz
xchg
dec
jns
in
lcall
insl
iret
outsl
mov
lock
mov
movb
test
rorb
pop
jp
mov
mov
jb
adc
into
or
mov
jmp
mov
xchg
les
stc
and
into
add
shl
cmp
bound
push
int3
aas
sti
lahf
dec
add
xor
in
test
test
push
jno
xor
dec
adc
xchg
jge
mov
mov
fcoml
pop
gs
int3
shrb
xor
xorl
inc
ds
ret
xchg
popa
dec
jns
push
adc
xor
int
and
sti
gs
add
mov
inc
mov
jmp
and
leave
mov
dec
mov
rcrb
iret
stos
jne
arpl
movsb
push
icebp
mov
sti
jno
push
shrb
test
sbb
out
ss
push
jl
out
xchg
std
fnstsw
dec
or
jp
incb
add
pushf
addb
mov
call
clc
jmp
pushf
jne
imul
adc
xor
mov
inc
xchg
push
and
stc
in
fldl2t
in
lcall
xchg
lock
mov
adc
jecxz
sbb
sbb
xchg
adc
aam
popl
test
add
push
int3
idivb
fcomp
or
or
adc
fld
lods
mov
mov
push
enter
mov
inc
sti
inc
daa
add
mov
dec
jle
into
lds
aam
les
inc
into
jne
mov
dec
adc
popf
jnp
xchg
stc
cmp
mov
jne
pop
or
sub
push
loopne
push
jp
call
aaa
lahf
add
xchg
sub
fisttpl
adc
xlat
aaa
xor
cltd
jb
data16
jg
test
jecxz
sbb
data16
sbb
stc
aaa
rcrl
enter
psraw
in
xchg
mov
mov
test
addb
rolb
test
pop
stos
jns
and
adc
orl
es
inc
outsb
push
in
pop
inc
dec
mov
cli
imul
dec
inc
mov
fabs
movsl
push
shll
push
add
or
cmp
cmpsl
shlb
stos
adc
pop
out
lret
jl
mov
mov
rclb
imulb
fcomps
dec
mov
outsb
xchg
jl
push
xchg
xor
and
or
xchg
push
xor
push
push
mov
ljmp
jmp
jo
dec
imul
jae
stos
and
jae
rcll
cmpsb
jge
mov
pop
jge
cmp
lret
repnz
out
inc
xchg
ficoml
call
adc
out
cli
jb
loope
stos
dec
cmpsb
rcrl
clc
sub
cmc
xchg
and
lcall
pop
mov
lahf
fiaddl
jae
pop
gs
add
mov
mov
ss
in
test
in
or
adc
pushl
lret
xchg
and
or
pop
popf
sbb
inc
jg
fldcw
jno
js
pushf
pop
and
push
data16
push
insb
lea
test
and
fdiv
lods
aas
pusha
mov
pop
mov
add
jmp
mov
clc
inc
and
push
jne
cwtl
xor
icebp
fists
inc
jg
mov
loop
rcrb
pushf
jbe
xorl
cmc
mov
mov
mov
mov
mov
mov
std
fidivs
adc
enter
or
mov
dec
gs
inc
fstpl
mov
stos
mov
add
mov
lret
push
or
xor
pop
pop
hlt
inc
mov
out
nop
insl
shrb
sub
ss
cwtl
enter
fisttpll
je
in
idiv
fcmovnb
push
xchg
nop
add
loop
inc
jmp
mov
pop
dec
pop
cs
negl
cmp
jne
in
stos
push
loop
push
shr
fldenv
insb
dec
cmp
xchg
and
push
lea
cmp
push
test
int3
mov
xor
mov
lock
pop
ja
mov
insb
or
push
fxch
sbb
sbb
std
mov
andb
sbb
inc
call
inc
sub
daa
and
mov
push
or
xchg
sbb
in
adc
cmpsl
sbb
jbe
scas
mov
int
stc
test
mov
das
dec
mov
cmp
xchg
or
jmp
jb
lods
dec
inc
lds
js
outsl
imul
stc
dec
lcall
aas
lret
shrb
inc
cmp
enter
jbe
sub
cmp
jecxz
mov
push
xchg
mov
dec
test
and
jnp
xchg
pop
clc
inc
gs
out
and
imul
jbe
sbb
scas
push
repz
icebp
fcoms
jnp
addl
rcrl
sub
movsb
push
lods
loope
aam
mov
jnp
mov
adc
cs
mov
xchg
xlat
adc
xchg
push
mov
pop
adc
lea
gs
aam
jns
mov
ljmp
fmul
mov
add
lods
mov
sub
pop
test
stc
lock
outsl
xor
sbb
cmpsl
push
push
imul
mov
and
and
sti
imulb
fwait
in
mov
inc
in
xor
cld
sbb
sub
push
popf
mov
jbe
rolb
push
rolb
je
and
jecxz
jb
dec
test
push
stos
mov
cmp
out
outsl
data16
cwtl
sub
pusha
jl
xchg
jge
cs
fwait
dec
into
stos
lcall
jg
sbb
ljmp
adc
xor
push
out
jne
mov
in
int
fucomp
sbb
sub
mov
in
adc
mov
hlt
cmp
bound
flds
push
sbb
loopne
mov
test
adc
test
pop
jecxz
call
adc
clc
inc
in
or
scas
jb
pop
push
xchg
icebp
popf
insl
jae
arpl
or
mov
inc
and
or
cmp
xchg
inc
pop
ja
pusha
fimull
arpl
adcl
imul
ret
push
adcb
adc
js
mov
sub
push
sahf
popf
adc
mov
hlt
subl
push
xlat
loop
outsb
pop
and
dec
inc
push
dec
ljmp
mov
loop
stos
cld
cmpsb
icebp
imull
pop
andb
inc
outsb
mov
imul
sbb
inc
inc
arpl
ljmp
mov
xlat
test
jmp
jl
scas
iret
in
shl
push
mov
dec
mov
dec
js
ret
shrl
jl
leave
fstpl
cmc
out
and
movsl
push
lret
inc
xor
jp
ror
cmp
hlt
divl
ljmp
mov
push
pop
jns
lods
scas
in
adc
aad
inc
aaa
inc
icebp
or
out
lock
or
adc
xchg
cli
scas
dec
rcrb
pop
lret
xchg
lcall
loop
cmpsb
leave
jmp
test
std
mov
call
aas
dec
insl
jne
or
mov
mov
mov
aad
mov
jns
push
jge
push
pop
bound
cltd
mov
shlb
gs
inc
mov
jp
cmpsl
or
cmp
jl
jl
add
or
mov
outsl
xlat
scas
jl
pop
arpl
fisubrl
std
pop
dec
sahf
or
xchg
push
sti
mov
adc
or
lds
xchg
fwait
sub
int3
sbb
cmp
test
pushf
adc
movl
xchg
add
xchg
aad
add
xchg
xorb
or
sbb
mov
add
xor
or
aaa
in
test
mov
mov
or
pop
pop
ss
pushf
add
jne
mov
inc
sbb
push
icebp
lods
in
test
push
in
je
insl
into
shlb
test
lods
jae
xlat
xor
rorl
sbb
in
mov
shl
testb
iret
pop
xchg
push
fidivrl
ss
outsb
out
stos
out
enter
pop
je
loope
pop
mov
and
xchg
pop
or
pop
pop
daa
ss
in
adc
sub
je
gs
cmpl
enter
fldcw
in
lods
push
sbb
and
pop
jp
mov
insb
test
cwtl
sbb
movsl
xchg
xor
pushf
push
sahf
repnz
loop
push
mov
cmp
inc
jo
sub
xor
cwtl
das
in
dec
xor
in
enter
je
in
push
dec
bound
add
push
cmp
pusha
push
stos
or
lds
xor
and
aam
fmuls
sti
ja
add
adcl
icebp
test
cmpsb
mov
push
xchg
cmpsl
push
hlt
stos
push
ret
je
add
jae
xchg
imul
out
testl
mull
add
mov
cmpsb
inc
in
out
leave
out
adcb
jnp
lock
mov
xchg
clc
test
out
sbb
out
rcrl
cltd
cmpsl
and
sub
sub
aaa
dec
jmp
mov
jnp
push
jecxz
cmp
inc
pop
fimull
pop
out
and
inc
repnz
outsb
mov
sub
dec
dec
inc
nop
mov
cs
test
push
movsl
jmp
dec
jno
mov
push
xor
sbb
or
pusha
fs
add
pop
cltd
int3
inc
and
add
and
rorl
hlt
mov
cwtl
adc
add
movsl
sahf
xchg
stos
jl
xchg
js
enter
lods
inc
inc
pop
insb
mov
into
sbb
mov
and
jnp
shlb
in
adcl
xchg
jo
xor
push
or
cmp
into
sub
scas
movsl
int
mov
repnz
pushf
inc
xor
sbb
hlt
les
ss
aad
sub
xchg
leave
sti
xchg
movsl
je
mov
lret
test
xchg
cmp
xlat
jns
mov
pop
xorb
loop
cmp
dec
inc
push
std
movsl
js
out
mov
and
pop
cltd
data16
mov
mov
int
pop
hlt
xor
xor
jb
cmp
test
mov
sub
sbb
pop
push
bnd
loope
addr16
icebp
sub
dec
add
or
incl
popa
adc
outsb
cld
out
push
adc
jae
jae
in
or
jno
fidivrl
jp
daa
out
dec
sub
cli
call
fidivl
std
cli
setp
mov
inc
ja
xchg
dec
ss
mov
and
ljmp
aas
push
rol
adc
adc
loopne
in
adc
pop
lahf
int3
out
push
xor
xor
push
bound
insb
push
sbb
inc
lods
test
xchg
push
push
fadds
mov
out
push
push
mov
nop
lds
push
repnz
or
fwait
dec
mov
adc
xchg
inc
sbb
movsb
inc
lods
pop
repnz
inc
insb
lret
imul
xchg
cmp
subl
xorl
into
aaa
mov
scas
push
daa
shl
cld
xchg
pop
cwtl
sub
and
sub
aas
out
inc
scas
decb
pusha
fsubl
or
loopne
sbbl
cltd
repnz
push
jno
xor
in
loopne
loop
inc
pop
sub
sbb
ret
adc
ds
es
stc
mov
cmp
xor
cmpsb
sub
sub
adc
out
rolb
jbe
pop
push
loopne
pop
mov
in
push
dec
xchg
xor
in
jecxz
xchg
mov
add
mov
add
cwtl
jns
aaa
xchg
andb
fmuls
sbb
subl
out
in
lea
push
xchg
sub
xor
push
ficoml
pop
xchg
out
mov
movsb
imul
test
jecxz
leave
cmovae
es
inc
pop
out
xchg
or
xor
cs
sbb
js
sbb
je
xor
jb
or
xchg
icebp
clc
mov
pop
mov
xchg
sub
js
ret
lods
ret
test
fs
sbb
xor
rcrb
nop
xlat
movsl
push
adc
lcall
sbb
dec
les
je
pop
ljmp
mov
lock
ja
pop
rorb
ljmp
mov
shll
xchg
mov
icebp
inc
cwtl
cmpsl
lds
mov
sbb
sbb
mov
pusha
in
inc
loop
sbb
and
addl
and
sbb
repz
inc
cli
dec
in
mov
pop
xchg
inc
pop
test
cmp
and
iret
dec
test
xor
rclb
sahf
sahf
stos
jl
rorl
lret
jmp
push
in
push
lret
into
cmp
sub
fdivr
push
inc
jo
stc
adc
jl
mov
sub
adc
sti
popa
popa
adc
push
shll
aaa
mov
imul
and
xor
push
andb
lcall
lret
dec
sub
ror
or
test
pop
sbb
cmpsb
push
sub
test
jg
enter
xchg
pop
inc
cmp
xor
lret
mov
xor
mov
mov
int
sbb
gs
sbb
mov
aas
insb
mov
push
aam
rcrl
jge
pop
pop
sbb
mov
scas
sbb
cmpsl
add
stos
not
lock
jno
lds
ret
adc
and
jns
fnstsw
xchg
xor
fcompl
adc
fidivrl
sub
daa
lods
repnz
aad
mov
shll
loopne
xchg
cmpsb
pop
pop
xchg
inc
sbb
jne
lret
inc
mov
cwtl
dec
and
push
pusha
int3
jmp
loop
je
jno
mov
cmp
cmp
cmp
sub
cs
jp
fidivs
push
xchg
xor
xchg
and
fisubrl
dec
pop
cmpl
adc
jbe
rorb
and
cmp
lret
sbb
xchg
cmpb
pop
adc
xchg
add
mov
daa
mov
popl
mov
pop
inc
mov
jge
fstps
das
xor
dec
aas
out
cmpsb
xchg
push
pop
xchg
bound
mov
add
imul
pop
pop
mov
loop
roll
cli
xchg
sbb
repnz
sub
adc
ficoms
xor
jge
pop
iret
mov
loope
xchg
int
cmp
enter
lret
es
arpl
xor
nop
shll
push
push
cmp
or
out
jp
cli
stos
or
or
mov
dec
imul
movsb
fnsave
cmp
or
loope
loope
dec
notb
lock
dec
dec
leave
sbb
jge
repz
loope
out
mov
js
and
lcall
notl
push
pop
xor
cld
push
sub
add
jnp
sub
push
xchg
fmuls
jecxz
add
dec
mov
inc
sub
sbb
or
outsl
rcll
cmc
cs
adc
mov
push
mov
ret
aas
adc
pop
add
clc
mov
cmp
jnp
insb
dec
inc
push
pop
daa
dec
repz
push
jae
jmp
adcl
mov
mov
icebp
nop
jns
adc
adc
in
mov
repz
mov
dec
ljmp
mov
std
div
ja
negl
sbb
sub
adc
push
or
add
test
cmovae
mov
movsl
mov
je
mov
decl
add
mov
lret
pop
imul
lea
adc
lret
xchg
mov
push
cld
pop
push
pop
adc
inc
sub
iret
push
sahf
ljmp
out
cld
gs
scas
daa
mov
lcall
or
jo
in
mov
daa
iret
cli
leave
ds
cs
xor
in
dec
jo
int
ret
sub
subl
sbb
jle
dec
add
and
mov
and
pop
cs
inc
pop
jno
sub
fldl
jb
enter
xor
mov
or
fisubrl
mov
inc
push
pop
in
stos
into
mov
icebp
dec
jl
or
push
daa
add
jecxz
outsl
push
lock
adc
jae
shrl
or
pushf
sti
and
leave
movsb
out
inc
enter
es
lods
scas
bound
mov
mov
mov
adc
cmpsl
or
dec
mov
xlat
negb
sub
push
negb
mov
aam
ljmp
pop
or
or
adc
pop
jnp
sub
and
sarl
pop
nop
ss
das
popa
cmpsb
nop
test
lods
ss
cmpl
scas
rcll
or
popa
addb
mov
dec
mov
adc
jne
sub
push
rcll
dec
sbb
jae
cltd
dec
push
dec
jbe
dec
mov
test
movq
and
scas
push
aad
dec
add
sub
jle
jnp
popa
int
inc
cwtl
subb
pop
nop
pop
dec
jb
je
hlt
xchg
cmpb
mov
mov
jb
dec
mov
mov
fs
inc
dec
insb
das
rcrl
test
cmc
mov
push
xor
push
mov
inc
imul
push
je
rcr
fnsave
mov
aad
lret
xor
gs
mov
or
inc
les
mov
jo
in
mov
mov
popf
sti
jecxz
fildl
sahf
popa
lds
out
out
aam
sub
in
xchg
movsl
mov
test
stos
dec
mov
call
pop
and
fs
add
mov
lds
hlt
nop
addr16
sbb
mov
add
mov
movsl
mov
jne
ljmp
mov
sub
mov
test
dec
bound
or
inc
add
push
loope
int3
enter
jle
add
movsl
or
mov
mov
inc
push
push
lea
into
jnp
leave
ss
mov
adc
test
daa
cli
lods
stc
push
mov
dec
mov
mov
lods
xchg
jb
lods
mov
hlt
pop
adc
jecxz
pop
add
push
mov
sub
inc
lret
js
cs
incl
das
test
aas
jg
mov
push
out
loopne
adc
dec
inc
ds
fidivl
sbb
fstpl
sub
push
movb
fcomip
jecxz
sub
les
add
lret
xchg
sub
scas
addl
mov
fmull
inc
fwait
js
lock
jg
shll
ret
shll
mov
shrl
or
mov
xor
aaa
jno
test
arpl
inc
add
in
movsb
mov
sar
clc
add
fidivl
mov
fsubl
pop
dec
scas
repz
shlb
inc
or
fldenv
bound
cwtl
add
adc
sbb
xchg
bound
xchg
bound
sti
jo
sbb
pop
ljmp
inc
into
cmp
jbe
repnz
pop
add
movsb
gs
test
ret
dec
jno
sbb
popa
sarl
jl
mov
mov
leave
loopne
aas
or
pop
mov
add
adc
int3
pusha
dec
stos
push
addl
shrb
test
and
lahf
out
jg
aas
inc
push
sub
test
jbe
and
xchg
mov
mov
stos
pop
in
sub
xor
call
inc
loopne
arpl
jne
push
sbb
dec
cmp
push
mov
xorl
sbbb
mov
test
xchg
sub
lds
dec
ja
and
dec
cmpsb
inc
sbb
cmp
lret
mov
call
adc
xor
cwtl
mov
push
arpl
bound
insl
xchg
and
sub
gs
jae
add
sbb
hlt
mov
cmpb
or
daa
popf
xchg
sub
or
mov
out
and
call
aaa
in
mov
sar
mov
popf
imul
imul
aas
arpl
cltd
dec
and
pop
ss
jge
loope
jns
fnstcw
pushf
or
mov
rclb
push
dec
lds
ljmp
mov
xchg
dec
imul
dec
sub
movsl
addr16
jnp
and
xchg
out
cmp
mov
xor
movsb
add
xchg
inc
sbb
push
dec
cmp
bound
imul
mov
rorb
xchg
pop
mov
mov
and
pop
fnstsw
out
bound
push
add
cmp
outsb
xchg
and
hlt
and
sbb
fstpt
or
xor
mov
dec
dec
xchg
mulb
xorb
mov
pushf
addr16
aas
les
adc
arpl
push
adc
cmp
xchg
lods
clc
sbbl
pop
addl
out
cwtl
xor
inc
hlt
outsl
pop
mov
sub
adc
and
andl
stos
inc
inc
andb
mov
jo
sbb
push
into
fnstenv
lcall
fmul
adc
adcl
data16
xchg
lcall
sbb
cli
or
fs
nop
jnp
pop
sub
cld
inc
rorb
xor
dec
jp
mov
push
mov
fdivrs
mov
dec
popf
xchg
push
imul
sbb
shrl
mov
or
inc
out
push
xchg
ret
push
pop
dec
dec
cmpsb
test
and
mov
inc
mov
cmpsb
inc
jp
nop
je
push
gs
dec
inc
insb
pop
movsl
xlat
add
fcmovbe
cmp
sbb
hlt
lods
push
and
cmc
lods
or
xchg
test
and
loop
sub
sub
je
sub
push
jno
adc
flds
jecxz
jg
addr16
jns
test
lahf
clc
punpcklwd
xor
sbb
sbb
imul
bound
xchg
mov
aam
add
mov
gs
sub
xor
bound
pop
jmp
mov
adc
sub
nop
xchg
push
call
push
cmp
jecxz
sbb
aam
push
xor
dec
mov
ret
push
adc
or
sbb
movsl
mov
xor
mov
xorl
mov
inc
mov
test
nop
cmp
loop
popa
cmp
out
imul
pop
aaa
dec
xlat
add
movsb
and
cmp
mov
xlat
stos
in
mov
xor
test
jg
ljmp
or
jns
cmp
jb
movsl
inc
pop
rorb
push
ret
jae
dec
mov
push
jge
push
std
scas
lds
cmp
mov
stos
pop
ljmp
bound
in
lcall
mov
ret
dec
mov
cmpsl
test
add
mov
cmp
nop
movsl
jbe
push
mov
and
xor
test
mov
mov
jecxz
aam
pop
pusha
and
mov
mov
in
cmp
xchg
ss
lds
add
jecxz
shl
icebp
cmp
dec
pop
pop
sub
jnp
outsb
mov
arpl
and
pushf
inc
push
xchg
mov
mov
pop
mov
jmp
test
mov
jl
test
ljmp
imul
sub
jl
fstpt
cmpsl
icebp
lahf
neg
add
call
and
push
inc
pop
jge
mov
mov
ds
xchg
std
clc
mov
jbe
in
adc
icebp
lds
stos
fdivrl
jl
mov
lahf
mov
repz
gs
aam
adc
and
leave
inc
mov
or
scas
mov
cmp
pop
fistpll
lret
out
jnp
jb
mov
popf
mov
stc
or
arpl
inc
or
movl
cmpsl
sub
lret
sti
roll
mov
inc
call
xlat
ret
rolb
dec
xchg
outsl
jb
js
xor
mov
inc
jo
out
fadd
clc
scas
dec
ds
pop
mov
fwait
lds
mov
loope
jno
sub
inc
dec
push
bound
or
icebp
int3
out
xchg
push
push
mov
jmp
pop
lahf
mov
jno
xlat
and
addr16
lods
mov
addr16
mov
add
loope
jno
pusha
scas
add
sbb
std
lcall
mov
jmp
and
jle
push
arpl
imul
ret
push
sbb
adc
xor
into
sub
inc
fsub
test
dec
hlt
fnstsw
mov
cltd
add
stos
mov
insl
push
or
sbb
shl
xchg
test
stc
jle
jg
lea
in
rclb
popf
gs
xchg
sbb
repnz
stc
sahf
rorb
cmc
dec
sub
mov
push
jo
mov
sbbb
jbe
fsub
aam
frstor
xchg
fmuls
xchg
jp
jns
jmp
scas
adc
andb
jb
sbb
jmp
std
xchg
mov
xchg
push
cwtl
int
les
mov
bound
xchg
pop
jl
pop
xchg
sarl
jle
xor
cltd
adc
mov
inc
std
adcl
mov
lods
sbb
and
lods
sbb
and
inc
enter
rcrl
inc
push
arpl
jle
arpl
add
sub
rcrl
outsb
jle
pop
and
xor
jb
shrl
fidivrl
add
stos
ljmp
lock
inc
and
push
pop
das
dec
fldpi
andl
xchg
xchg
push
dec
add
test
mov
into
sub
inc
in
repz
lea
arpl
cmp
cmp
mov
jmp
subl
shll
xchg
sbb
xchg
rcr
aad
jp
cmp
push
fidivrl
loop
push
aad
adc
xor
pop
sti
mov
cmc
shll
nop
push
xor
ret
xchg
mov
pop
and
lock
lea
repz
sbb
push
sbb
or
push
pusha
test
notb
ss
sti
fmulp
inc
adc
or
lea
bound
icebp
sub
inc
cmp
sbb
les
pop
jl
xor
lods
hlt
xor
ljmp
pop
fcomps
jne
mov
add
dec
jg
xor
mov
negl
pop
lock
frstor
dec
enter
xchg
addl
scas
jecxz
cmp
psraw
lea
sbb
adc
in
xchg
insl
pop
mov
dec
ljmp
pop
dec
and
mov
into
sbb
lret
loope
es
lock
mov
daa
sbb
or
mov
mov
dec
jns
inc
jg
jns
repnz
or
xchg
movsl
sub
sti
lds
fwait
xchg
mov
xchg
sub
push
pop
divl
mov
jbe
push
loop
in
dec
jno
loop
inc
jg,pt
mov
xor
sbb
lock
xchg
popa
jae
sarl
xchg
data16
push
icebp
push
push
pushf
sbb
adc
cmp
sbb
data16
hlt
outsb
vshufpd
in
arpl
dec
or
imul
xor
xor
xchg
test
out
xlat
xchg
lret
fucom
test
inc
lods
push
push
cmp
pop
iret
insl
push
mov
cmpb
jb
insb
cli
jne
jle
jl
mov
mov
xchg
mov
xor
mov
std
enter
loope
cmp
aas
add
rclb
cmpsb
push
stos
or
cmp
push
xchg
popf
add
jo
cld
cwtl
xchg
fucomip
mov
pushf
mov
iret
add
iret
enter
xchg
jle
jp
jne
notl
stos
lret
inc
rol
into
mov
cli
cld
ja
cmp
sbb
lahf
ret
insl
mov
scas
mov
xchg
and
adc
cmp
add
addr16
rcrl
mov
mov
push
pusha
repz
cwtl
cmp
ja
sbb
adc
sbb
mov
aaa
lret
sbb
daa
subl
add
test
or
es
and
in
and
outsb
arpl
aas
ret
addr16
in
mov
push
dec
inc
fs
stc
stos
cmp
cmpsl
xchg
jmp
filds
or
jbe
push
push
sub
jl
xchg
outsl
cmpsl
jg
hlt
xor
pop
insb
movsb
lock
pop
cmp
jmp
data16
jle
stos
scas
xor
rorl
ljmp
call
dec
cmp
cmc
and
imul
test
add
sub
insb
and
pop
ss
sub
negb
jo
shl
mov
fcmove
sbb
daa
pop
adc
aam
popf
push
mov
stos
lods
xchg
aam
mov
mov
mov
test
clc
adc
add
xchg
and
jmp
fists
cltd
adc
clc
inc
xor
xchg
mov
imul
cmp
ljmp
nop
lds
jnp
xchg
push
int
movsl
sar
ljmp
js
je
lds
add
cs
add
dec
pop
cltd
iret
add
sbb
pop
popa
rcrl
push
xchg
adc
imulb
ficompl
dec
pop
push
xchg
mov
dec
push
movsb
cmp
xor
aam
imul
test
dec
addr16
push
or
sti
mov
sub
add
add
push
rcrl
lcall
push
sbb
mov
pop
inc
aad
jecxz
mov
jmp
mov
adc
pop
lret
sub
lret
adc
pop
xor
dec
fwait
sti
mov
mov
jl
fiaddl
std
sub
pop
pop
cli
xor
bound
insb
lcall
stc
mov
mov
inc
pusha
shl
mov
xchg
fstl
adc
fwait
mov
jbe
xor
sbb
adc
out
test
mov
dec
aas
in
mov
je
loopne
mov
pusha
outsl
ret
push
or
push
shll
sbb
or
inc
insb
pop
lods
fisttps
rcr
jnp
jmp
call
mov
clc
test
adc
fists
fadds
sub
pop
push
gs
das
rcl
stos
sbb
xor
jbe
scas
add
jmp
pop
and
test
push
dec
lahf
adc
inc
jbe
aaa
lods
subb
addl
and
mov
mov
das
movsb
and
fnstcw
lret
mov
xor
sbb
out
fbstp
test
push
idivb
mov
adc
testl
pop
movsb
or
fildll
xor
les
cwtl
arpl
aaa
adc
stos
mov
fwait
jnp
cmp
inc
jmp
test
sahf
popa
pop
loope
add
sbb
ret
ret
jge
insb
pop
inc
loope
ret
arpl
bsf
xor
roll
mov
stc
mov
sbb
ljmp
mov
lret
cmpsl
call
lods
fwait
and
jge
jmp
cmpsb
scas
or
es
cmp
pop
mov
out
inc
aam
sahf
out
imul
hlt
popf
fs
inc
pop
cli
mov
clc
int
push
jl
mov
lret
stos
mov
or
stc
movsb
sbb
mov
dec
clc
jne
push
jmp
mov
jmp
and
cld
jne
into
cmp
add
pop
push
ljmp
jl
sub
into
shl
push
adc
jl
into
fwait
lahf
xchg
dec
cwtl
mov
scas
jae
inc
adc
lock
add
fists
xchg
sbb
rcll
sub
in
or
enter
add
sub
pop
lock
cmp
fs
mov
pushl
orb
nop
sbb
jno
pop
add
xchg
sub
adc
inc
jnp
mov
dec
pusha
repnz
inc
or
cld
repnz
out
fildl
in
aad
inc
and
loop
repnz
push
add
shll
xchg
sbb
sbb
aas
into
cld
rcll
fs
fstl
in
outsl
aad
lret
xchg
cmp
mov
lds
push
jmp
pop
pop
mov
add
repz
push
outsb
inc
lock
aam
or
das
dec
push
xlat
fimull
into
mov
adc
push
xor
insl
shl
xchg
fcompl
add
xor
scas
cli
sbb
inc
push
sbb
jne
aas
mov
inc
mov
stos
jge
dec
insb
fists
lret
nop
dec
stc
push
ja
inc
in
fptan
xchg
dec
call
push
sub
cs
push
pop
adc
call
sub
ljmp
xor
jg,pt
js
gs
or
mov
int3
adc
stos
fwait
jg
shll
fldenv
loope
testl
jmp
mov
push
notl
rorb
mov
js
leave
sbb
imul
mov
les
ljmp
jae
mull
nop
dec
call
insl
outsl
jbe
icebp
lods
popl
cld
fmuls
test
cmp
insl
xchg
test
je
push
add
packuswb
jp
xchg
jne
out
scas
sbb
add
insb
les
fadds
sbb
xchg
stos
lds
ja
and
inc
sbb
loope
daa
inc
sbb
aam
outsl
scas
out
adc
jl
sbb
jo
jmp
sbb
adc
push
out
jle
dec
xor
mov
mull
cwtl
sub
and
sub
adc
pop
das
inc
fbstp
add
movsb
cltd
das
add
mov
xor
and
push
inc
xor
mov
mov
cmp
lahf
imul
adc
std
cmp
inc
lods
cmc
out
sbb
add
std
sbb
sbb
out
leave
ljmp
popf
add
or
sbbb
mov
bound
data16
mov
mov
out
adc
add
dec
pop
dec
sbb
inc
xor
mov
inc
lret
xchg
std
push
repz
dec
and
imul
loop
aaa
dec
inc
inc
mov
out
dec
sbb
add
xor
arpl
scas
ljmp
lcall
es
jle
xchg
adc
mov
outsl
xlat
cmp
call
adc
loope
jno
out
pop
movsb
jle
inc
popa
popf
daa
outsb
out
inc
fdiv
imul
dec
xchg
roll
ret
lret
cwtl
fidivrs
test
dec
fisubrs
mov
mov
movsl
lea
jb
loopne
fdivr
dec
in
in
lret
push
sbb
push
push
jge
cmp
in
out
std
pop
push
pop
imul
cmpsl
mov
ja
pop
popl
mov
sbb
repnz
xor
imul
scas
mov
movsb
sahf
lds
test
cwtl
dec
mov
sbbl
pop
jp
adc
cmpsb
push
clc
dec
shlb
aad
subb
stos
in
out
mov
sahf
ds
popa
mov
push
pop
xchg
push
pushf
mov
es
loopne
mov
std
adc
lret
jl
sub
mov
or
push
daa
cmc
loope,pt
scas
les
arpl
rol
in
rclb
xor
mov
mov
call
lea
pop
into
aad
xor
sbb
fs
jb
lret
cmp
mov
dec
dec
out
mov
call
sub
and
ficoml
scas
arpl
clc
repnz
and
adc
ror
pop
jmp
dec
sub
lahf
or
loope
cmpsb
out
lret
cwtl
in
inc
pop
shll
pop
lea
dec
aad
fsubr
and
add
sub
scas
call
and
rcll
out
mov
xchg
insl
mov
aad
inc
lret
push
sbb
and
cld
lods
loopne
sub
outsl
int3
xor
push
mov
fcmovnb
jle
sub
sub
dec
call
or
test
repz
xchg
mov
mul
sbb
sub
pop
adc
shlb
xor
mov
out
cld
inc
int3
outsl
andl
pop
mov
xchg
jle
jo
sti
pop
mov
mov
fisubrs
daa
adc
test
hlt
pop
rcl
push
dec
es
popf
mov
fsubs
das
dec
cmp
xor
xchg
mov
sbb
cmp
lret
cmc
nop
jae
fs
jecxz
movsb
dec
or
stos
xorl
in
pop
iret
leave
jae
fmull
ja
popf
jle
sbb
iret
outsb
xchg
jmp
dec
pop
xor
adc
mov
fwait
push
pop
inc
inc
mov
cmp
in
adc
lahf
or
add
aam
or
dec
test
mov
out
stos
icebp
jge
add
and
lock
scas
enter
mov
je
dec
push
cmp
dec
rcll
fidivrl
pop
push
stos
bound
add
jbe
aad
pop
sbb
dec
or
sbb
or
jns
ss
add
lock
xchg
xchg
pop
bound
and
mov
negl
or
jmp
mov
xlat
aas
repnz
data16
add
dec
mov
gs
push
jmp
inc
loop
mov
adc
mov
xchg
ret
sub
mov
enter
pusha
addb
mov
add
loopne
enter
sub
sub
pop
push
movsl
lods
pusha
mov
out
sub
jae
roll
mov
push
jno
mov
push
sbb
add
scas
xchg
mov
aas
inc
ss
popf
rol
popf
stos
loopne
xor
out
dec
cmpsb
push
sbb
mov
test
push
sub
and
sarb
pop
and
enter
xlat
adc
jnp
cmc
lods
push
mov
or
stos
mov
out
ss
lret
push
movb
xor
ja
jo
and
int3
pop
dec
pop
xchg
push
lret
push
stc
cld
xchg
add
xchg
repnz
jl
inc
xchg
std
fnstenv
mov
fwait
push
push
fcompl
sub
jecxz
fnstenv
cmp
insb
pop
cmc
fmull
pop
and
ret
cli
cmpsb
jle
das
mov
sbb
dec
xchg
cli
sub
lds
fwait
mov
icebp
mov
sub
dec
addr16
daa
and
dec
xchg
les
pop
rorb
cli
xchg
mov
push
js
push
pop
add
jb
int3
ret
adc
popa
icebp
mov
inc
sub
cs
in
jl
popf
sbb
cmpsl
out
and
pushf
and
mov
or
cmp
mul
mov
pop
into
bound
into
and
repz
adc
cvtps2pd
fisttpll
mov
xor
je
or
push
jle
js
mov
add
add
push
aam
and
xchg
je
xor
jecxz
xor
int
stos
insl
mov
jo
fmul
int
xchg
inc
and
decl
sarb
mov
cmp
sbb
rcrl
clc
inc
push
cmp
lock
push
adc
ret
dec
and
testb
in
bound
int3
movsb
cli
inc
fstpt
fistps
or
dec
inc
cli
hlt
inc
inc
sbb
ror
jecxz
xchg
popa
adc
push
clc
pusha
push
mov
lahf
std
clc
fildll
ret
subb
inc
adc
rcr
rcll
dec
stos
inc
inc
push
sub
add
aaa
gs
xlat
inc
mov
ss
cltd
pop
add
les
xor
or
call
sbb
stos
nop
xchg
jp
aas
mov
lods
fiadds
jp
jecxz
outsw
pop
inc
push
dec
jecxz
push
cmpsl
sarb
test
mov
sbb
cmp
push
lcall
bound
and
sbb
xor
in
test
push
dec
jmp
adc
js
fstpt
xchg
pop
cmp
rol
inc
or
dec
xor
fwait
stos
push
xchg
cmp
gs
push
popf
std
iret
xchg
lods
cli
sbb
lret
imul
in
lret
fs
sub
adc
jne
inc
pop
bound
pop
cld
push
test
clc
jbe
push
pop
stc
insb
dec
in
sub
int
dec
lret
iret
inc
sbb
push
adc
and
inc
cli
cwtl
mov
xorl
push
cmp
push
jl
imul
mov
mov
ret
add
daa
xchg
push
ljmp
sbb
pop
mov
add
jns
ja
sbb
std
test
sbb
ret
shl
cmp
sbb
xchg
xchg
mov
es
lea
push
inc
push
push
jno
int
dec
pop
lea
push
or
loope
pop
fnstcw
outsl
or
cmpsb
push
push
xchg
orl
jno
mov
into
adc
sbb
aam
rcll
mov
dec
scas
jb
mov
add
ds
jmp
nop
aas
in
adc
test
xchg
cli
jb
sahf
jp
ljmp
add
cmp
mov
test
in
fsts
mov
push
add
adc
repnz
dec
xchg
loop
sub
adc
in
jmp
xchg
mov
in
and
movsb
cmpsb
sbb
xchg
out
sbb
mov
loopne
push
pop
push
fwait
insb
icebp
lret
fs
data16
jp
and
adc
or
xor
out
mov
leave
dec
mov
or
ret
mov
loope
jno
fsubrp
mov
aad
enter
inc
fs
les
xor
sbbl
test
and
incb
dec
out
push
push
inc
out
inc
adc
push
cwtl
sbbb
and
jge
xor
mov
add
and
xlat
mov
xchg
cmp
stos
lea
mov
inc
jmp
push
roll
pop
dec
fistl
pop
andl
inc
sbb
sub
aam
ljmp
sbb
roll
jns
repnz
or
sbb
lahf
add
mov
xchg
ficoms
and
xor
les
add
aad
movb
inc
fs
sub
jmp
dec
movsb
xor
mov
iret
aam
lret
cs
cmp
scas
mov
inc
adc
sahf
mov
sub
clc
adc
jmp
movsb
mov
sub
and
xchg
int
xor
fs
or
scas
mov
iret
jno
pop
xchg
movsb
insb
or
dec
cmp
shr
mov
mov
mov
inc
aaa
jae
adc
xor
in
push
xchg
pop
cld
test
xor
icebp
mov
mov
sbb
mov
jno
jge
or
daa
pop
jae
ja
jb
scas
push
arpl
sub
jbe
and
leave
call
add
lret
mov
fnstenv
add
push
sub
xchg
imul
jl
dec
cmpsb
or
or
dec
lods
sbb
cmp
lods
push
push
mov
stos
pop
js
add
fmul
mov
pop
xor
pop
loop
dec
inc
inc
cmpsb
movl
or
inc
push
adc
pop
scas
fcmovu
jo
jb
nop
jno
sub
js
das
push
sub
mov
fwait
imul
dec
cmp
movsb
les
push
movsl
and
gs
out
test
mov
sub
leave
cmp
ret
push
cmp
pushf
les
push
rolb
fcom
dec
xchg
dec
cmp
push
cmp
ljmp
and
roll
cmp
aaa
loop
xchg
push
es
scas
mov
cmp
jbe
lea
nop
push
sub
dec
sub
imul
and
mov
inc
fisttpll
daa
dec
out
repnz
cmp
outsl
out
dec
and
pop
scas
pop
lcall
mov
inc
cmp
loopne
or
pop
pop
out
int3
dec
jns
sub
adc
jge
or
mov
in
aam
jne
nop
idiv
data16
adc
xlat
push
mov
add
xor
aad
dec
in
sbb
sti
jb
xor
out
in
pop
pop
repnz
dec
jmp
push
mov
pop
and
adc
add
aas
imul
mov
mov
sbbb
movsl
push
add
dec
ljmp
inc
nop
jb
jno
cmpsb
cs
bnd
ret
lea
jp
mov
and
imul
add
sub
pop
xor
imul
inc
cld
cltd
pushl
call
jl
sub
or
inc
jne
enter
adc
jae
mov
inc
pop
push
mov
add
push
push
repz
adc
jg
enter
dec
mov
outsb
int3
mov
mov
and
int3
ljmp
jne
dec
jno
in
xchg
push
sbb
pusha
in
lds
imul
ja
clc
push
scas
jle
push
cmp
add
jnp
sub
push
out
or
sbb
xchg
add
lea
mov
insb
jmp
imul
outsb
cmp
jg
repz
push
aam
arpl
dec
mov
dec
push
cmpsb
outsl
clc
fucom
mov
das
in
loop
sbbl
int3
inc
arpl
jbe
leave
fwait
inc
xorb
inc
pop
rcrl
daa
mov
loopne
mulb
add
xchg
repz
xor
sbb
mov
lcall
inc
jb
mov
dec
pop
test
sahf
cmc
xchg
sbb
in
imulb
cs
fistl
imulb
lahf
test
xchg
inc
jecxz
sub
push
mov
pop
sbb
xchg
sbb
mov
xchg
ds
jno
sbb
scas
cs
adc
mov
fstpl
sbb
fisttpll
imul
aaa
fldcw
call
pop
cmpsl
leave
push
jb
in
test
dec
push
insl
mov
nop
push
movsl
or
jno
shlb
sbb
cwtl
push
push
add
and
push
outsl
adc
xor
out
in
xchg
push
sahf
sub
bswap
sbb
xor
and
sbb
flds
inc
jae
pop
inc
int3
shrl
or
xor
arpl
or
jmp
mov
sub
mov
pop
pop
cmp
xor
movsb
push
mov
out
popf
dec
loop
xchg
cli
cmc
gs
les
pop
cmp
inc
jmp
pop
sub
daa
xor
in
dec
cmp
addr16
sub
pf2iw
fsub
adc
stc
fildl
pop
in
cmc
nop
ja
cli
push
inc
fs
sub
inc
dec
mov
popf
lock
gs
jg
aad
adc
loop
inc
pop
adc
jmp
mov
into
aam
and
cmp
fistpl
mov
ret
std
pop
mov
dec
inc
mov
and
in
xor
inc
pop
iret
lret
ret
sub
shlb
in
cs
das
in
repnz
jo
mov
add
xchg
push
fidivl
hlt
mov
mov
adc
outsl
ljmp
mov
adc
hlt
add
inc
iret
xchg
mov
or
pushf
js
mov
xchg
es
pop
into
mull
lcall
adc
xchg
shrb
push
icebp
xchg
mov
mov
sbb
and
es
fcmovnb
sub
mov
ja
push
jecxz
jp
out
aam
xor
push
mov
jmp
fisttps
sbb
dec
push
aam
push
ret
add
aad
dec
sbb
and
fimuls
popa
cmp
shr
subb
cld
shlb
cmpsl
mov
fwait
dec
xchg
dec
shrb
push
push
or
call
xlat
out
stos
and
dec
pop
icebp
and
mov
dec
xor
sti
stos
mov
scas
cmp
pop
add
mov
jp
mov
andb
add
fwait
mov
rcl
lahf
push
dec
ja
sub
pop
sub
add
xor
sar
mov
sbbl
movsb
add
and
jne
es
sub
ret
dec
push
cmpsb
push
dec
jo,pt
cltd
push
cld
femms
jmp
push
jl
hlt
or
xchg
and
lret
mov
test
jmp
scas
cmpsb
fs
push
testl
shlb
pop
lcall
inc
aad
add
sbb
cmp
jns
fbstp
jb
in
and
ds
dec
dec
sbb
add
cmp
sub
arpl
loopne
jle
int
iret
cmc
cmpsl
pop
outsb
sbb
mov
shll
nop
nop
cmp
lret
test
push
xchg
pop
inc
lsl
xor
xor
movsl
and
sub
fbld
test
jecxz
popa
inc
push
mov
in
out
ja
std
into
pop
and
cli
jl
popf
dec
cmpb
jmp
pop
call
add
jbe
push
popa
ss
js
push
mov
ja
pop
ss
dec
adcb
add
out
xor
xchg
jecxz
and
stc
lods
mov
xor
mov
in
xchg
dec
ljmp
sbb
jle
push
dec
mov
add
dec
jnp
jmp
lret
in
fcomp
jae
jno
aam
dec
push
mov
fisttpll
iret
dec
lahf
dec
push
int
pushf
test
push
fldenv
jmp
inc
sbb
mov
adcb
sti
lret
adc
dec
and
adc
sub
add
jo
jmp
mov
pop
push
xchg
lods
aaa
inc
jle
dec
inc
sub
push
and
fdivrl
mov
inc
insb
pop
and
xchg
or
movsl
loop
mov
or
sbb
mov
pop
mov
mov
sbb
scas
sahf
iret
in
ljmp
xlat
add
out
das
sub
pop
rol
xorb
pop
mov
or
or
cmpsl
jns
loope
std
push
pop
sbb
mov
or
add
inc
pmaxsw
add
mov
adc
push
jg
pop
cmpb
fsubs
jb
cmpb
ljmp
push
repz
mov
js
mov
ret
in
pop
cmp
cltd
push
or
addb
xchg
xchg
cmp
inc
push
cmpsl
shll
sti
dec
pop
ret
clc
mov
enter
aam
jae
stc
test
stos
aas
clc
push
lret
xor
call
xor
inc
push
jo
ja
and
mov
lods
test
and
aas
push
xchg
test
test
shrb
jp
mov
ss
aad
call
jno
aaa
cltd
push
in
shlb
mov
scas
repnz
push
jns
js
into
xor
pushf
pop
sub
ret
sbb
call
add
jmp
add
sbb
push
gs
mov
test
clc
mov
jo
cwtl
mov
in
les
dec
jb
mov
cld
xor
fidivrs
xchg
push
adc
arpl
jecxz
popf
stos
std
aad
sub
sub
sbb
sahf
aas
or
sbb
div
in
push
pop
adc
cld
mov
fisttpll
cs
xor
xchg
adc
sbb
jnp
and
mov
push
xorl
push
mov
mov
out
adc
loop
leave
shrl
sahf
nop
insl
jmp
js
leave
push
int3
dec
mov
ss
sbb
add
jmp
rcrb
adc
js
cmp
or
fwait
clc
adc
xchg
push
push
das
jg
popa
cwtl
mov
test
jno
imul
pop
rcr
movsl
lcall
scas
out
test
mov
loopne
pop
in
test
lea
lahf
mov
and
stc
push
imul
aas
pop
and
jb
dec
fptan
xchg
pusha
fsubrl
cmpsb
pop
cmp
pop
stos
inc
mov
out
mov
sub
mov
jo
aas
push
repnz
stos
fcompl
jge
fsub
push
or
int3
fnclex
xor
out
add
mov
mov
push
fisubrs
fwait
add
and
test
insb
or
cmp
xchg
push
add
fbstp
shlb
inc
loop
out
popf
or
clc
xchg
xor
das
mov
aam
lahf
in
push
sub
mov
fwait
aas
xor
out
and
rol
fs
outsl
and
movsb
xor
push
mov
cwtl
out
mov
test
lods
adc
repz
subl
mov
in
popa
push
das
mov
insl
and
push
or
in
pop
push
stos
add
clc
es
jl,pn
jg
repnz
xlat
ja,pn
gs
push
int
idivl
xchg
cld
ljmp
loopne
pcmpgtd
adc
aas
hlt
ss
adc
mov
jle
out
test
mov
ss
shlb
lret
ret
mov
addr16
mov
dec
sbb
sub
mov
ficoms
pop
outsl
sbb
bound
pop
popa
call
lods
mov
inc
add
sbb
cmp
loop
popa
adc
cmp
roll
incl
or
cmp
insb
mov
lret
jb
cmp
loope
or
movsb
xor
pop
ret
mov
jg
lods
test
lock
mov
add
fimull
das
cmpsl
pop
cmp
ds
dec
enter
mov
mov
push
leave
stos
push
inc
mov
lods
div
shl
jl
test
sbb
xor
les
out
sbb
lcall
mov
ss
pop
pop
add
sarl
jne
rcll
xchg
mov
dec
in
ds
mov
sbb
mov
lcall
pop
mov
ljmp
adc
test
pop
xor
inc
rcrb
shlb
mov
std
xor
xchg
mov
enter
insb
div
xchg
stos
dec
and
xchg
movsl
std
loop
hlt
push
mov
bound
fnstcw
loop
jecxz
adc
jg
add
cmp
dec
stos
scas
jb
push
mov
int3
mov
or
xor
pop
xor
pusha
lret
push
jle
arpl
cs
xchg
jb
xchg
fbld
pop
pop
popf
cmp
aam
push
movsb
adc
cs
push
mov
ret
xchg
adc
sub
fwait
inc
loop
call
jne
mov
negl
outsl
rol
sub
icebp
lods
cld
repnz
cltd
sub
adc
or
lods
int3
lds
xchg
mov
inc
ds
cmp
in
pop
jns
enter
stos
mov
test
mov
pop
jne
add
jno
xchg
or
sub
insb
shrb
dec
insb
cmp
shl
ljmp
stos
mov
xchg
jbe
jl
nop
adc
xor
mov
fs
pop
pushf
sbb
in
xchg
xor
inc
mov
mov
xor
dec
rcrl
popf
xor
loope
add
xor
xlat
in
push
xor
lret
mov
neg
adc
pop
iret
sub
mov
std
scas
sbb
ret
in
dec
dec
lret
test
mov
sub
popa
xor
dec
das
pop
cs
xchg
jge
jae
stc
pusha
fnstenv
nop
scas
add
loop
jge
inc
mov
out
adc
in
jge
ja
mov
mov
in
cli
loop
cmp
adc
pop
push
int3
inc
mov
add
sub
xchg
movsl
xchg
jle
mov
stos
je
push
mov
push
aas
cmc
clc
rclb
mov
test
sub
in
setbe
add
jns
leave
repz
mov
push
xchg
sub
dec
xor
xchg
mov
xchg
enter
jns
add
js
or
add
repz
push
push
mov
push
out
sub
sbb
mov
inc
popa
pusha
push
mov
out
or
cmp
sbb
popf
push
test
in
out
lock
push
lds
lahf
loop
push
fwait
lock
nop
cld
and
mov
test
mov
push
stos
jecxz
aas
push
mov
xchg
test
out
lcall
cwtl
xorb
out
jp
or
loopne
xor
aam
fistpl
jb
sbb
sbb
test
xor
jne
adc
xor
and
mov
xchg
enter
cmpsl
test
mov
sub
cmp
sub
test
outsb
or
add
roll
lahf
jl
iret
fidivl
mov
add
dec
rorb
mov
push
push
fs
jl
call
scas
xor
mov
je
sub
and
orl
add
or
test
ret
cmpsl
insb
mov
sub
pop
lods
ljmp
out
pop
mov
pop
test
movsb
mov
push
pop
popf
daa
cmp
push
cwtl
jl
jg
pop
mov
ret
aas
push
lock
jns
sub
mov
call
cltd
mov
in
mov
cmp
add
std
cwtl
sbb
das
popl
push
jmp
shll
fistpll
mov
or
adc
mov
sub
aam
mov
fwait
mov
dec
jae
mov
jb
test
push
and
stos
in
xor
or
lea
stc
jmp
and
repz
jge
and
mov
hlt
jbe
add
sub
xchg
fstl
fcoml
mov
arpl
inc
cmp
jg
insl
scas
ret
sub
ret
mov
push
call
faddl
fwait
cmpsl
or
xlat
mov
mov
xchg
mov
aad
xor
daa
repz
add
scas
mov
lea
lods
rol
pop
mov
shrb
sarb
out
fdivrs
test
ljmp
xor
mov
or
xor
push
mov
es
std
lock
sahf
adc
dec
xchg
lods
adc
or
testb
jbe
std
in
mov
pushf
mov
int
enter
inc
test
mov
test
lret
pop
mov
movsb
add
push
mov
push
push
jne
lds
cld
or
jb
jb
orb
xchg
push
fs
pop
flds
les
jae
lret
mov
mov
push
leave
sbb
fnstenv
mov
clc
sbb
int
sub
test
aaa
add
sub
divb
js
lock
add
inc
cmp
and
xchg
aad
jno
cs
cli
loop
mov
mov
inc
out
outsl
cs
sbb
repnz
ficoml
push
subb
sub
aad
movsl
cwtl
add
lods
test
lret
adc
mov
cmc
add
fisubrs
lcall
ret
jmp
pushf
add
jno
in
add
repnz
in
aas
inc
cmp
xor
xchg
push
iret
push
mul
push
lret
dec
test
sti
popf
push
adcb
sbb
je
call
aam
lods
out
iret
scas
add
fstps
adcb
and
mov
popa
or
jno
addb
xchg
inc
es
aam
lock
mov
jg
out
pop
prefetch
shrb
scas
sub
ss
and
pop
jno
inc
ja
mov
pop
and
cmp
lret
jns
bound
inc
jnp
imul
movsb
insl
mov
mov
shl
xchg
mov
int
jmp
mov
inc
sub
dec
pop
xchg
sbb
popa
xor
xchg
ss
lods
jb
inc
pop
xchg
mov
imul
aas
push
dec
mov
push
test
repnz
sub
and
popl
fisubl
mov
outsb
dec
fidivs
cmc
fmul
std
out
js
mov
dec
mov
lret
sahf
adc
loopne
lret
cmp
jle
jnp
repz
loop
adc
adc
mov
lahf
push
arpl
mov
jns
ja
les
xor
push
and
inc
lods
test
out
mov
dec
call
repz
and
mov
out
cmp
repz
shl
stc
jo,pn
cwtl
push
xor
gs
xor
jg
jns
daa
inc
cmc
and
push
sbb
jl
enter
mov
inc
and
cmc
outsb
dec
xor
jb
shll
pop
les
mov
xchg
dec
sti
sub
ss
sbb
mov
scas
sbb
shl
xchg
jmp
xor
inc
ss
push
jecxz
les
add
or
sub
call
mov
dec
insl
jno
adc
mov
cmp
fsts
fisttpl
and
xor
mul
xchg
or
pop
cmpsl
ret
aad
enter
pop
nop
lock
inc
dec
andb
sarb
sub
lods
mov
jns
pushf
xlat
inc
pop
into
out
cmpsb
push
imul
outsb
cmpsl
pop
int3
or
out
push
or
inc
jg
lea
lds
dec
jns
pop
or
mov
das
clc
jmp
pusha
sbb
xchg
cs
pop
xor
adc
cmpsl
mov
adcb
out
inc
and
xor
inc
push
icebp
fistl
push
cmp
xchg
dec
fs
cmpsb
int
cmpsl
std
inc
cmpsb
loop
fs
adc
mov
push
out
cmp
loop
and
and
cmc
or
cltd
fdivl
fists
stos
insb
shll
int
xor
fildl
call
adc
mov
xchg
pop
adc
dec
xorb
leave
cmpsb
pushf
pop
ret
inc
cmp
jo
xor
imul
xchg
in
push
xchg
out
out
repz
jnp
jp
mov
into
push
cli
pop
shlb
push
fsubs
mov
add
imul
adc
dec
push
push
faddl
push
xor
mov
add
inc
sub
out
mov
pop
out
jae
lock
xor
int
jg
mov
mov
mov
cmp
cmp
mov
hlt
loopne
sbb
scas
mov
inc
dec
mov
add
addb
clc
mov
notb
dec
mov
xchg
adc
add
pop
sbb
repz
sub
arpl
mov
das
push
mov
dec
js
fsubr
scas
or
int3
adc
push
rcrl
aas
lahf
test
xchg
add
and
lret
es
call
adc
pop
stc
nop
cld
inc
xor
xchg
enter
jge
call
je
out
cmpsl
adc
dec
cmpsb
incb
movsb
ja
inc
daa
sahf
cli
or
mov
and
lahf
cmp
stos
andl
in
jne
lds
mov
inc
into
push
movb
je
addb
in
dec
sub
push
lock
or
cmp
jno
cs
mov
xchg
xchg
outsb
mov
mov
sub
std
cmpsb
inc
out
add
imul
aas
pop
pop
push
xchg
ljmp
xchg
mov
xor
or
sub
ja
pop
int3
and
push
mov
inc
adc
les
pushf
das
push
mov
mov
idivb
out
fdivl
mov
xchg
daa
cli
mov
jns
scas
orl
mov
pop
sbb
or
int
xlat
mov
hlt
dec
movsb
mov
clc
imul
add
into
add
fucomip
into
cmp
stos
imulb
loope
push
loopne
jle
imull
ficomps
mov
loope
xchg
cwtl
jl
and
jne
lods
repnz
xor
adc
popa
call
pusha
cltd
mov
inc
xchg
sbb
mov
daa
add
or
xchg
jl
push
popa
adc
mov
ljmp
cmp
pushf
pop
bound
data16
int3
dec
mov
or
jae
lea
pop
div
shl
stc
out
mov
jae
std
data16
into
or
mov
jp
out
cld
shlb
pop
or
or
out
popa
adc
inc
icebp
mov
sti
xor
movsl
mov
lods
mov
dec
mov
imul
dec
dec
and
sub
pop
pop
mov
mov
sbb
das
pop
jmp
mov
out
inc
xchg
adc
out
fldl
fnstcw
pop
andb
dec
inc
popf
push
icebp
mov
ds
jp
shl
mov
icebp
sti
add
sbb
inc
stc
in
loopne
pop
popf
sub
sub
xor
fs
cmpl
inc
lret
push
push
dec
cmp
cmp
push
es
push
xor
add
fcmovb
add
stos
shl
xchg
fldcw
xchg
and
icebp
mov
or
push
jae
jo
and
and
pop
add
mov
ret
add
popl
and
jecxz
cmpl
repz
inc
sbb
jge
mov
ret
insl
push
push
pop
sub
pop
xchg
js
sbb
cmpsl
ljmp
call
scas
cs
sbb
xchg
cltd
aad
test
lret
lahf
mov
aam
test
push
adc
and
test
push
sub
lock
cmpsb
xor
insb
xlat
cld
xchg
xchg
xlat
daa
and
loop
pop
mov
xchg
push
or
aaa
lods
fs
std
or
adc
xchg
adc
jmp
pusha
mov
int
mov
rorb
dec
mov
add
les
in
sbb
and
add
sahf
cmpsl
cmpsl
mov
inc
scas
cwtl
mov
and
cld
mov
inc
aam
scas
sub
jno
data16
loopew
pop
movsb
xor
or
xchg
jns
stc
dec
shrb
cltd
dec
in
push
sarb
stos
je
sbb
mov
dec
fs
adc
lds
xor
cs
shrl
outsb
decl
xchg
jo
es
mov
cmpb
xchg
cs
es
mov
jge
jmp
addb
fsubp
or
mov
stos
mov
rcl
dec
jl
inc
shl
add
fdiv
test
pop
icebp
test
sub
push
test
fisubs
xchg
adc
sbb
and
shl
pop
movsl
pop
fistpll
cmp
cmp
sahf
cli
shl
sub
je
cltd
subl
popa
mov
int3
clc
mov
call
pop
push
mov
rcll
jbe
stc
shll
or
fidivs
dec
rclb
mov
xlat
mov
pop
xorl
mov
outsb
jns
out
dec
lea
rcll
jne
cmp
into
ffreep
pop
mov
cmp
xor
outsb
cli
roll
mov
dec
fimuls
fistpl
nop
jbe
dec
mov
jl
jl
test
pop
stos
jmp
push
push
lods
xchg
inc
sub
sbb
stos
jb
push
leave
push
filds
insl
insl
loop
push
mov
mov
mov
mov
pop
jno
add
add
insb
pop
cld
or
mov
jnp
mov
mov
das
jecxz
mov
xor
mov
int3
cmp
loope
cli
jae
rcll
test
test
fmul
xor
push
mov
jne
sbb
mov
dec
pop
icebp
in
pop
jno
out
test
shrl
movsw
add
in
pop
push
ror
clc
pop
sbb
popa
or
push
mov
mov
mov
jg
xor
sbb
pop
aaa
sub
mov
sahf
cli
roll
inc
sbb
sub
mov
test
imull
lea
mov
in
fsubs
into
addb
out
jp
xchg
xchg
xchg
ss
call
loopne
in
shll
pop
pop
bound
jl
clc
pop
rol
add
xor
xchg
lds
stc
testl
jge
pop
xor
inc
cmp
test
inc
xor
outsb
in
cltd
fwait
mov
mov
sbb
xchg
shlb
insl
dec
test
mov
fiadds
ror
mov
out
subl
shrb
jo
or
dec
cmpl
dec
mov
lahf
lcall
out
jo
aaa
imul
shll
mov
inc
shl
mov
pusha
stc
xor
add
push
imulb
dec
add
sbb
sbb
push
adc
int3
xchg
test
pop
fwait
push
rclb
xor
clc
add
or
inc
cs
shl
mov
cmc
jb
mov
rorb
fcomps
xchg
std
cltd
pop
mov
repz
ds
or
xor
shll
call
xchg
sbb
mov
inc
sbb
fs
loop
cwtl
cmp
rcr
inc
out
rcll
out
jne
aam
sub
mov
add
sbb
xor
jp
jno
cmp
aam
iret
jnp
popa
or
lret
out
add
and
sub
mov
je
xor
push
icebp
add
nop
int
inc
jmp
dec
ret
jmp
lret
iret
jecxz
and
and
int3
mov
inc
jp
addb
pop
dec
or
adc
cvtps2pd
popf
hlt
xchg
cli
xorl
outsb
or
outsb
inc
ret
jnp
cmc
iret
sbb
pop
popa
adc
aad
ret
loop
cmp
xchg
cmp
xor
cwtl
inc
and
sub
jp
and
xor
jle
add
aaa
jge
mov
shr
stos
int3
into
push
xchg
daa
lea
xchg
repnz
mov
and
inc
push
roll
mov
inc
cmc
xchg
ret
or
mov
cld
push
sbb
cltd
mov
xchg
cmpsl
or
or
push
mov
inc
fmuls
aaa
sbb
clc
xchg
cmpl
pushf
mov
movmskps
lock
or
pop
cmp
jnp
arpl
xor
pop
loopne
fwait
push
mov
dec
sbb
lods
xchg
aad
ja
xor
dec
cli
xor
mov
icebp
sub
mov
mov
mov
xchg
cmp
fs
mov
fistpl
lea
fldl
push
repz
aaa
sub
daa
sbb
mov
test
adc
mov
add
xchg
popa
ss
inc
rclb
fcomps
mov
sbb
pusha
cltd
subb
sahf
ret
in
dec
rclb
mov
lds
stos
sahf
sbb
movsb
leave
movl
daa
push
mov
shr
and
inc
in
add
sahf
jbe
xchg
hlt
outsl
test
scas
lcall
cmpsb
mov
mov
lahf
push
shll
lds
addr16
or
cmp
int3
cmp
in
sub
ja
inc
nop
test
out
andb
jle
or
push
jge
xor
sahf
aas
in
pop
xorb
faddl
cli
fistpl
clc
pop
jmp
mov
xchg
cmp
dec
gs
cmpl
pop
mov
cmp
sub
xor
sbb
stos
xchg
incb
push
inc
adc
int3
sarb
ja
cmp
shl
add
fstpt
mov
and
lods
sbb
pop
ds
mov
repnz
xlat
iret
dec
loop
es
jns
test
dec
dec
jp
xorb
popf
cwtl
adc
rcll
sub
mov
jbe
push
lret
mov
sub
lret
mov
inc
jb
sub
stos
iret
repz
dec
mov
out
adcl
pop
mov
pop
xchg
gs
jo
xchg
sub
insb
imul
xor
mov
inc
xchg
push
or
mov
and
les
pop
imul
lods
mov
scas
lcall
sub
cld
adc
fldcw
scas
dec
dec
adc
ret
mov
pop
pushf
inc
mov
out
dec
jge
or
mov
jmp
dec
andl
xor
std
push
adc
gs
je
repz
psadbw
fisubrs
cld
xchg
mov
les
sub
aam
adcb
jne
outsb
xchg
scas
sahf
cmpsb
adc
mov
or
sbb
xchg
jge
sub
sbb
adc
mov
sub
mov
popf
mov
pusha
jne
mov
popf
cmp
dec
adc
shrl
fisubl
xchg
sahf
sbb
cmp
notl
inc
jecxz
insl
stos
fadds
mov
incb
cmpsb
bound
call
sub
ljmp
push
mov
js
aaa
pop
fwait
lret
aaa
addr16
or
sbb
mov
jbe
and
ljmp
setns
pop
push
xchg
xchg
push
ret
int
dec
mov
sub
jge
into
das
mov
rolb
test
pop
cs
popf
xlat
loopne
sbbb
mov
sbb
add
pop
nop
push
test
or
adc
bound
or
and
adc
adc
push
pop
je
mov
in
ss
xor
andb
mov
ret
out
cli
sbb
or
add
inc
mov
pop
push
dec
sbb
inc
aam
sub
xchg
push
or
lahf
mov
xor
test
jmp
cltd
les
mov
or
stc
add
scas
xor
icebp
mov
scas
push
push
icebp
push
mov
dec
rorl
or
or
popf
xchg
in
sbb
cmp
mov
add
cli
or
adc
fistpll
mov
test
mov
add
mov
out
fcompl
dec
pop
rcl
jno
lret
mov
insb
or
subb
push
insb
mov
push
adc
stc
and
sub
shll
frstpm(287
imul
mov
sbb
xlat
push
and
jmp
mov
sbb
cmp
loop
push
dec
jbe
xchg
mov
enter
insl
jl
sub
cltd
push
sti
out
jbe
mov
add
ja
fwait
mov
mov
push
nop
sub
in
sub
aam
inc
das
mov
movsb
and
pop
popa
cld
mov
int3
push
out
add
xchg
inc
mov
adc
push
imul
fwait
lods
and
fcmovnb
mov
and
push
inc
sub
add
xor
mov
sar
dec
pmaxsw
pop
xlat
inc
adc
add
and
mov
insl
out
mov
ret
inc
ljmp
aad
aaa
dec
mov
adc
int
divl
jo
je
pop
xor
adc
mov
jmp
aas
lea
xorl
gs
inc
dec
inc
or
cmp
xor
pop
xor
dec
les
cmp
je
add
insb
mov
dec
notb
add
test
jno
fwait
jno
out
scas
xor
push
mov
mov
jp
sbbl
shlb
pop
jae
mov
jmp
push
pop
in
lret
addb
push
sbb
adc
in
out
push
addr16
stos
iret
jecxz
cltd
daa
mov
sbb
fnstenv
cld
dec
stos
ja
cmp
cmp
jl
repnz
ljmp
dec
out
cmp
adc
adc
in
popa
fistpll
or
xchg
les
inc
mov
push
ljmp
cmp
call
xchg
js
cmp
push
pusha
lret
inc
xchg
sbb
rcl
sub
add
push
aad
lahf
stos
sbb
adc
jne
xor
inc
cli
fcomps
adc
mov
out
ret
aaa
jb
fists
popa
dec
jo
aas
inc
ficomps
push
pop
lods
imul
test
push
or
xchg
jbe
loope
mov
arpl
enter
ficoml
sahf
and
and
push
jp
popf
mov
dec
mov
or
pop
or
or
cmp
push
pusha
cs
push
fwait
jmp
cmp
andl
rorb
loopne
push
test
jp
repz
pop
lret
mov
or
cli
rolb
dec
aaa
repnz
lahf
inc
scas
cli
mov
xor
adc
ficomps
cld
frstor
add
call
mov
cmc
xor
gs
movsb
or
sub
dec
rep
xor
lcall
out
test
loopne
pop
fldl
add
pop
pop
stos
inc
cmp
cmc
or
ret
push
add
fstps
xchg
and
pop
cmp
stc
push
xchg
pop
jg
gs
adc
mov
mov
sti
ffreep
jnp
and
outsb
in
mov
xor
mov
mov
xchg
js
fcmovnu
stos
mov
pop
and
mov
rcll
pop
scas
mov
xchg
pop
mov
inc
arpl
sbb
jo
mov
xchg
push
pop
xchg
jne
or
mov
cmp
xchg
aad
out
inc
loopne
shufps
inc
loope
popf
jle
mov
push
mov
pop
xchg
loop
and
xchg
jno
cmp
or
das
sti
and
xchg
out
sbb
cmc
neg
ja
xchg
fbstp
mulb
dec
xor
pop
mov
fisubl
mov
pusha
std
cmc
xor
jmp
aaa
fwait
inc
xchg
shll
sbb
jecxz
ja
pushf
add
pop
pop
mov
xchg
mov
imul
jb
jp
cmp
loope
ja
sbb
insl
dec
stos
out
mov
in
mov
sub
outsb
mov
insl
outsb
inc
inc
dec
in
repz
lret
or
xchg
dec
lock
lcall
mov
into
jmp
movsb
mov
xor
mov
vpmaxub
push
pop
adc
sbb
push
ljmp
mov
xor
jo
mov
pusha
cmpsl
pop
scas
into
mov
stos
pop
imul
jge
test
fistl
bound
cmp
xor
cwtl
sub
shll
mov
mov
addl
js
dec
stos
in
out
push
leave
or
sub
aas
pop
clc
mov
lds
jns
dec
sbb
insl
and
adc
sub
outsl
in
push
xchg
jl
daa
cmpsl
dec
int3
push
imul
stc
cmp
bound
jns
push
lds
in
lock
loopne
mov
nop
mov
cmc
in
add
int
mov
mov
jle
jno
and
mov
cmp
mov
xchg
out
and
sbb
fmull
mov
rclb
ret
jns
push
cmp
lea
cmpsl
int3
pop
pop
and
jb
in
sahf
leave
mov
cmp
add
sub
in
stc
adc
dec
das
les
lock
roll
mov
inc
xor
xchg
or
aaa
lahf
fsubrl
test
movb
dec
xchg
jne
jp
xchg
rcl
push
mov
xor
out
dec
and
std
push
mov
add
adc
lret
dec
popf
insl
xlat
cmpsl
fcompl
adc
jbe
jl
mov
xlat
fbstp
mov
cmpsb
xor
loope
into
mov
and
fisttps
dec
fisubrs
cmp
mov
add
or
pop
push
push
std
pop
jle
dec
fwait
or
and
mov
inc
fidivs
cmc
xchg
movsl
sub
mov
mov
cmpsl
and
pop
push
lods
fs
inc
ss
pop
fcmovne
pop
call
inc
xor
jl
inc
jo
test
sub
sahf
lret
cmpsl
xor
and
xor
xchg
out
popf
outsb
fmuls
test
inc
sbb
fs
nop
decl
adc
test
jns
lods
das
cmc
cwtl
imul
imul
rcrb
cs
jne
clc
push
push
pop
jnp
xchg
or
dec
out
mov
add
std
sbb
test
stos
arpl
aad
jae
cmp
mov
dec
lods
rolb
sarl
sub
leave
mov
decl
adc
jg
xchg
fbld
mov
adc
stc
or
sub
jmp
sub
imul
cmp
in
movsl
in
sub
movsl
insb
in
inc
rorl
inc
and
mov
sub
testl
jmp
int
push
test
adc
lcall
mov
repz
ljmp
cltd
xorl
mov
loope
lds
cs
push
int3
jns
gs
leave
lahf
xchg
pop
sub
dec
cmp
dec
mov
ljmp
pop
add
and
xchg
rcrb
fs
sub
cmpb
jnp
mov
idivl
ljmp
dec
push
or
mov
sbb
out
incl
inc
push
mov
cmp
cmpsl
mov
jge
mov
xlat
mov
lods
dec
cmp
cmp
shrl
sub
iret
mov
mov
sahf
sbb
notl
mov
push
mov
sbb
inc
outsb
icebp
jg
test
cmp
push
pop
mov
mulb
sbb
cmp
inc
sbb
insb
cmc
or
ds
lret
jns
aas
outsl
jns
insb
push
dec
mov
int3
pushf
sub
xchg
or
sbb
mov
icebp
jno
sub
sub
ret
cltd
gs
outsb
aas
mov
add
mov
aaa
and
in
or
inc
repnz
or
daa
jmp
and
push
shrb
push
adc
and
cltd
sbb
jl
fisubrl
jl
repnz
inc
pop
adc
repnz
ds
pop
out
lds
cmp
loope
xchg
dec
imul
mov
mov
ret
decb
and
test
aad
sti
fsin
mov
pop
mov
jb
inc
in
push
push
push
sbb
fwait
popa
in
inc
sub
adc
sbb
cmp
es
xchg
jecxz
out
mov
addb
gs
hlt
sub
push
mov
and
mov
arpl
mov
je
push
dec
xchg
cli
mov
pop
ja
xchg
int3
jmp
insb
out
or
sub
add
enter
dec
imul
xchg
push
mov
fisttps
push
or
andl
adcl
or
or
jb
lahf
cmp
jne
or
fistpl
cmc
pop
mov
les
jb
dec
into
popf
andl
inc
pop
lock
fcoms
rcr
nop
fistl
xor
icebp
insl
lret
ret
popf
sbb
mov
xchg
adc
pop
jo
sub
cwtl
out
jne
adc
vpaddb
pusha
pop
clc
dec
dec
bound
dec
insl
jp
jl
pop
movsb
pushf
push
xchg
insl
leave
aaa
cmp
inc
cmp
jnp
sub
and
movsb
lahf
lret
xchg
inc
adc
and
lock
cmp
or
js
and
sub
pop
mov
cmp
cmp
xchg
adc
mov
cli
mov
in
jp
xchg
mov
int3
jbe
mov
jmp
xchg
mov
bound
daa
and
fistpl
or
pop
mov
in
dec
sbbl
and
outsb
pop
insl
dec
push
xchg
insb
js
sub
sbb
push
outsl
push
cmp
cli
das
xor
dec
sbb
fldl
cmp
in
push
dec
imul
inc
and
pop
ja
mov
out
enter
neg
sahf
pop
jno
sbb
sbb
fisubrl
outsb
stos
sti
ss
int3
or
in
mov
mov
lock
cmp
popa
test
inc
mov
in
mov
xor
adc
pop
sub
jb
push
xor
mov
shrl
inc
jge
adc
aas
or
or
adc
cmpsb
pop
lods
cmp
je
ficoms
push
mov
out
mov
mov
imul
and
scas
jp
bound
mov
xchg
es
push
sbb
push
add
test
and
repnz
xchg
imul
mov
enter
mulb
mov
movsl
les
jmp
and
pop
mov
xor
mov
arpl
sbb
and
push
cmc
bound
frstor
mov
adc
rolb
ret
jno
push
mov
push
sbb
sbbl
movsl
or
popl
pop
loop
pusha
xor
mov
mov
repz
loopne
jae
fisttps
inc
leave
cli
jg
insl
dec
add
loop
inc
insb
out
cvttps2pi
jbe
loopne
jns
lcall
jo
lret
xchg
imul
test
pop
loope
std
mov
sbb
cmc
push
popa
sahf
shll
pop
repz
push
cmp
icebp
mov
bnd
jg
out
cli
scas
rcrl
into
into
cwtl
inc
inc
test
movsl
mov
xchg
fisttps
imul
addr16
test
mov
repz
out
divl
and
mov
xchg
ljmp
test
daa
pop
out
sub
ja
mov
popa
nop
dec
stc
ret
xor
bound
ljmp
popf
lret
out
test
add
mov
sbb
inc
inc
mov
jne
pop
ljmp
jno
orb
xchg
movsl
rol
xlat
sbb
stos
imulb
js
cmp
push
lods
fnstsw
xlat
lods
ds
hlt
mov
ret
lock
cmpsb
dec
in
jne
mov
pop
jp
dec
cld
dec
mov
add
adc
inc
push
aas
sbbb
out
in
mov
sbb
int3
xor
push
pop
or
jo
mov
add
out
push
jl
fldt
xchg
arpl
jae
adc
xor
mov
sub
dec
les
stos
jmp
fiaddl
pop
jne
add
jo
test
out
sbb
jp
testb
data16
mov
push
mov
push
xor
sub
and
out
mov
add
dec
lret
adc
loop
and
cs
mov
xchg
cmpb
lods
fistps
adc
jle
in
je
nop
std
insb
test
cmpsb
jge
xchg
je
fsubp
in
sbb
adc
mov
repz
pusha
add
movsl
mov
xor
adc
ret
inc
das
fistpl
pop
mov
pop
cli
push
or
push
dec
mov
dec
and
add
add
xor
loopne
inc
mov
add
shl
fcoml
inc
dec
insl
mov
bound
sarl
lea
mov
stos
pop
imul
std
in
and
int
out
add
pop
pop
test
sub
push
xchg
rclb
mov
pop
in
cmpsb
enter
xor
jo
dec
iret
dec
rcll
out
mov
insl
aaa
sub
mov
or
repz
aas
pushf
jg
es
mov
push
push
popf
daa
push
or
push
sarb
inc
xorl
mov
fs
scas
pushf
inc
push
jbe
icebp
dec
adc
xor
mov
xchg
lods
imul
xchg
movntps
addr16
and
mov
mov
movsb
mov
mov
mov
stos
dec
mov
or
clc
push
sahf
sahf
sbb
aas
int
test
jg
std
lcall
jne
mov
repnz
mov
out
mov
push
xchg
lea
and
loop
divb
or
mov
jle
push
test
xchg
nop
jp
les
push
pop
add
ret
xor
adc
cmpb
or
dec
cmpsb
outsl
adc
jbe
loope
outsl
cmp
divl
in
and
scas
fdivs
or
sti
jbe
push
ljmp
cmp
lods
iret
mov
cmp
mov
pop
inc
pop
stos
ljmp
mov
pop
pop
shll
push
inc
addr16
out
into
pop
fwait
pop
jne
pop
sub
push
outsb
inc
add
pop
and
call
mov
lock
mulb
movsb
cmp
imul
sarl
mov
es
hlt
sahf
mov
and
aam
mov
icebp
shlb
jne
es
jecxz
ret
ret
cmp
push
popf
xchg
push
icebp
std
or
inc
push
inc
loop
mov
sbb
cmp
adc
popf
mov
aam
stos
rorl
sbb
in
mov
repz
xchg
jno
adc
pop
scas
lock
push
dec
lahf
jle
add
repnz
mov
cmpsb
jg
fcmovb
ja
scas
push
jge
lahf
int3
insb
dec
push
or
push
arpl
repz
jnp
pop
push
mov
or
and
xchg
fstps
cmp
and
dec
jno
jae
jmp
sbb
mov
pop
sbb
sbb
mov
sbb
pop
xchg
ds
jo
shll
xchg
cmc
das
xchg
or
movsb
adc
icebp
loop
arpl
out
pop
mov
scas
adc
mov
ja
lahf
fisttpll
fcomip
andl
inc
xchg
call
ret
enter
xor
add
out
dec
fcoml
sarb
jecxz
jns
jle
or
rorb
shlb
add
lahf
clc
sbb
push
shlb
mov
jmp
fadd
adc
bound
arpl
movsb
and
push
cmp
rclb
mov
mov
fisubs
popa
cli
push
add
jo
push
out
push
sub
out
inc
or
pop
xor
sub
enter
daa
sahf
and
test
pop
in
test
pop
jnp
lods
xor
sbb
punpckhdq
roll
sub
add
lret
pop
pop
mov
cwtl
in
outsl
cs
jo
or
pop
lret
mov
pop
cld
lds
lods
loope
pop
sahf
or
dec
lock
mov
or
push
pop
xor
shl
jge
mov
jno
icebp
xlat
std
lret
cmp
in
popf
pop
jno
dec
mov
jle
aad
xchg
andl
pop
add
xchg
mov
jbe
pop
add
dec
dec
loopne
and
sbbl
test
mov
cltd
out
sbb
adc
ja
push
mov
and
mov
loopne
fldcw
pop
sbb
jmp
cli
and
push
call
stos
push
imul
push
sahf
xor
insl
jbe
add
cmp
sub
pushf
and
mov
mov
add
lock
jl
xor
fwait
pop
mov
into
jmp
aam
push
pop
idivl
movb
movb
pushw
outsl
mov
lock
sahf
jg
jge
call
push
cmpsb
pop
ljmp
mov
rolb
pop
flds
jno
mov
inc
pop
popa
addb
cli
fs
pop
adc
sbb
sbb
push
jmp
push
rol
jle
sbb
sub
addl
jecxz
movb
and
imul
xchg
pop
xor
into
and
and
or
daa
out
loop
pop
sbb
and
push
sub
mov
pushf
popa
xlat
fstpl
sbb
mov
sbb
scas
popf
cmp
mov
mov
mov
xchg
lcall
loopne
xchg
mov
inc
pop
mov
mov
or
sbb
loop
loop,pn
loope
int
fcoms
xchg
and
jg
dec
les
subb
lock
imul
test
pop
ds
call
daa
push
jmp
mov
popf
cwtl
sub
push
xchg
inc
out
inc
push
push
in
popf
lock
sub
pushf
push
lret
push
hlt
scas
lahf
mov
loop
sahf
lods
fucomi
ret
xchg
cmc
and
mov
jae
mov
nop
xchg
dec
mov
rclb
fs
std
pusha
xchg
adc
push
stc
movsb
movsl
stos
mov
loope
into
xor
mov
and
enter
inc
lret
fistpl
out
shrb
mov
jbe
add
or
rcrl
mov
repz
dec
jae
pop
pop
imul
pop
pop
xchg
sbb
pop
xchg
sub
pop
lret
enter
pop
xchg
scas
mov
lods
mov
xchg
and
cwtl
orb
or
mov
repz
inc
and
inc
and
pop
in
dec
fidivrs
jecxz
scas
leave
lahf
movsb
xchg
dec
xchg
scas
dec
xchg
add
jle
mov
dec
inc
fcmovb
jge
fdivs
sub
jne
ljmp
insl
dec
jp
mov
sbb
orl
cmp
adc
dec
sub
imul
sub
repz
jp
and
stos
xor
xor
add
loope
fbstp
pop
sti
xor
nop
scas
dec
mov
movsb
jmp
add
in
pop
lret
or
mov
pop
and
lret
imul
popf
aam
jle
test
fnstsw
push
pop
mov
sti
test
cmp
cmc
mov
shll
dec
mov
loopne
push
setge
in
jecxz
inc
test
cli
cwtl
xor
cmpsb
shll
fisubrl
fcmovne
xchg
gs
out
inc
pop
add
xor
mov
jne
out
lods
call
test
adc
cmp
ds
xor
sbb
sub
adc
fdivrs
in
fmull
test
in
je
dec
mov
enter
xchg
mov
jbe
push
jecxz
int3
mov
add
lret
inc
orb
insb
lret
test
xor
aad
mov
pop
jne
or
dec
sbb
int3
or
xlat
and
repz
and
and
test
mov
pop
call
addl
dec
mov
pushf
les
lods
insl
pop
orl
inc
xchg
sbb
push
rclb
lods
addr16
and
xchg
push
add
jecxz
cmp
push
jns
ss
push
es
xchg
pop
push
insl
cmp
mov
adc
daa
mov
mov
xlat
cmp
std
and
jne
dec
mov
xchg
mov
outsb
xlat
dec
in
int
mov
mov
jb
fs
insb
bound
add
xchg
mov
lcall
mov
xor
fiadds
sub
mov
adc
jnp
sub
jl
sbb
push
xchg
ud0
xchg
adc
or
adc
push
cld
jecxz
sub
dec
mov
mov
inc
std
in
pop
rcll
inc
xchg
xchg
divl
pop
mov
xchg
add
and
pop
pusha
sub
sbb
sahf
xchg
xchg
mov
push
in
xchg
and
mov
repz
push
cmp
scas
jb
les
movsb
mov
jl
xor
add
mov
cld
sbb
pop
arpl
xor
movsb
sahf
cld
ret
dec
fldt
dec
test
pop
sub
mov
lcall
ja
por
mov
and
inc
adcb
mov
mov
hlt
mov
daa
sti
sarb
mov
cmp
sub
mov
fdivrs
pop
imul
loopne
sub
mov
jle
pusha
push
das
jbe
pop
insb
negl
push
mov
cltd
jmp
inc
decb
sti
insb
fisttpll
xchg
push
mov
out
add
stos
out
cmpl
sbb
bound
das
mov
inc
or
mov
sbb
pop
shl
push
test
outsb
call
adc
jno
pusha
add
or
rorl
and
decl
stos
out
call
rcr
adc
or
fdivl
inc
jle
pop
jg
xor
dec
jo
pushf
inc
in
cmp
inc
in
push
aam
xor
fistl
dec
sub
jns
mov
sbb
pop
xor
mov
lods
je
cmp
jecxz
mov
or
shll
pushf
fwait
xor
dec
and
rolb
addl
je
test
ficoms
scas
mov
fistps
sbb
sbb
xchg
mov
mov
scas
adc
adc
adc
adc
xor
add
mov
mov
aas
pusha
sbb
sub
add
scas
pop
das
ret
hlt
pop
cli
pop
xor
push
pop
insb
inc
test
pop
xchg
test
inc
and
sbb
lret
xchg
aam
test
loopne
ss
jae
or
fcompl
push
leave
dec
push
popa
adc
loopne
mov
scas
gs
jno
push
les
pop
jne
mov
imul
inc
push
inc
shl
adc
xchg
jne
iret
daa
outsb
sti
push
ficomps
adc
aas
test
shll
stc
call
adc
mov
daa
test
sbb
movsb
mov
fldenv
mov
addr16
ljmp
stos
push
inc
scas
mov
jmp
ret
jae
cmpl
sbb
loop
xor
jmp
jp
pop
fs
mov
iret
rol
cmc
pop
je
xchg
icebp
xchg
sub
aaa
mov
push
xchg
jae
mov
or
mov
in
ljmp
inc
xor
sarl
lock
push
out
jmp
jns
mov
int3
ret
jae
sbb
clc
xchg
lret
fs
jmp
insb
rclb
dec
lock
fs
movsb
fidivrl
mov
pop
in
orb
je
sbb
jecxz
adc
jg
pop
cmpsl
sub
dec
mov
lret
cwtl
push
aas
xchg
add
scas
dec
repnz
inc
popf
adc
and
push
pop
inc
dec
mov
push
roll
mov
ja
and
pop
sub
push
push
sarl
ret
mov
xor
sbb
ret
push
imul
mov
iretw
dec
pushf
int3
repnz
mov
adc
pushf
add
in
or
inc
fcomps
push
outsb
dec
xrelease
into
pop
xchg
add
rorb
jge
mov
psraw
add
cmp
loope
hlt
repnz
dec
shll
addr16
aam
out
mov
cwtl
adc
test
cmp
cmpsb
es
xchg
mov
mov
cmp
das
in
sub
sbb
push
dec
fcmovu
rolb
hlt
test
rcrl
jge
cmpsb
xor
mov
mov
inc
xchg
bsf
push
mov
gs
jns
popf
aas
fwait
add
icebp
imul
push
mov
push
ja
stos
sub
mov
stc
cli
cmpsb
cmpsb
and
jnp
xor
fstps
mov
jp
or
mov
ss
mov
out
subb
mov
outsb
mov
sub
and
mov
jne
jno
cmpsl
xorb
loope
cltd
dec
pop
int
jg
xchg
in
icebp
lret
jg
push
pop
inc
das
mov
jecxz
rorb
lahf
push
jae
xchg
mull
js
add
add
leave
lahf
cmc
push
mov
adc
inc
jns
stc
push
out
rcr
sti
pop
mov
call
insl
test
scas
mov
rorb
sbb
cli
mov
push
jl
lret
outsl
popa
sub
pop
push
mov
mov
push
push
call
outsl
inc
jecxz
scas
dec
int
hlt
in
and
imul
mov
insb
icebp
jle
inc
repz
dec
cmp
popa
mov
mov
pop
pop
jg
xor
inc
insl
test
mov
mov
mov
repz
in
sahf
fcoml
fistps
lods
add
loopne
mov
mov
inc
pop
mov
mov
rorb
lahf
stos
xlat
das
test
cmpsb
push
jecxz
mov
mov
jl
jl
jp
stos
lock
loope
scas
loopne
add
sub
pusha
jg
dec
mov
dec
inc
out
lahf
cld
fildl
lock
dec
mov
and
jbe
bound
and
cmp
cmp
and
sarl
es
cmpsb
xchg
mov
push
int
jmp
test
add
sarb
xor
adc
add
jp
loopne
mov
jns
nop
es
push
sub
clc
cmp
int
cmp
imul
mov
es
inc
les
aad
xor
lods
out
out
ds
push
mov
lods
iret
cmpsb
and
in
adc
push
xchg
mov
pop
or
dec
adc
fcmovnu
outsb
aam
mov
sbb
and
aam
cs
lea
pop
out
dec
mov
jno
sbb
xchg
xchg
xor
call
icebp
popa
outsl
js
mov
stc
jle
dec
sbb
mov
pop
lret
out
es
je
jecxz
cltd
push
fstpl
add
adc
or
aad
jne
cs
jl
push
fsubrs
push
mov
invd
aas
lea
sub
sbb
mov
popl
adcb
cmpl
js
jge
js
mov
sub
adc
dec
scas
test
fstpt
pop
sbbb
cltd
ret
or
or
xor
aaa
lods
cwtl
dec
cmp
sbb
xor
cwtl
add
rorb
call
jecxz
ss
jne
inc
mov
sar
bound
repz
fbstp
jb
sbb
aas
dec
imul
subl
aaa
test
andl
test
nop
inc
les
mov
arpl
subb
aad
ret
jno
push
dec
leave
pop
sbb
insb
pop
cli
stos
sub
mov
sbb
mov
jmp
or
mov
lods
adc
shrl
xchg
sbb
mov
lods
jge
sub
mov
sbb
sbb
mov
inc
or
insl
js
jae
push
ret
adcb
rcrb
adc
jnp
loope
pop
add
aad
pusha
dec
sbb
adc
cmpsb
sub
icebp
lods
arpl
negl
test
bound
and
sti
mov
or
out
push
inc
lahf
mov
dec
test
ja
cmpsb
pusha
stos
jge
jae
incb
mov
pop
sarb
adc
adc
xchg
repnz
push
aad
or
outsl
aam
mov
fwait
sub
and
sub
xor
add
repnz
test
add
jbe
xchg
mov
aad
loope
je
fcmovnu
lds
jnp
std
pop
mov
movsl
mov
popf
mov
adc
mov
dec
in
pop
out
out
push
in
wbinvd
add
shlb
ja
mov
clc
xchg
scas
dec
mov
inc
inc
test
push
fcom
mov
roll
push
adcl
inc
cs
sbb
jne
push
test
xchg
cltd
xchg
cmp
add
cmc
adcb
push
xchg
pop
sti
shll
adc
xchg
popa
aad
adc
mov
cmp
xchg
jle
jbe
mov
and
test
push
add
dec
int
neg
sbbb
xchg
outsb
aas
push
outsl
cmp
sti
rolb
popa
xchg
cmp
push
test
test
dec
in
jbe
xlat
xor
xchg
loopne
mov
js
jns
jg
bound
lahf
cmp
add
cltd
pop
push
imul
xchg
push
roll
xor
outsb
test
add
pop
cmc
cld
lea
or
mov
mov
pop
add
pop
mov
daa
mov
adc
fucomp
aaa
push
xchg
repnz
push
push
or
insl
mov
in
lcall
adc
aad
dec
imul
jae
jae
jae
pop
testl
sub
dec
pop
iret
adc
jbe
popf
cmpsb
inc
insb
xor
std
pusha
sbb
dec
adc
or
jb
pop
mov
fs
xchg
mov
rorl
jl
pop
out
fwait
test
push
int3
sbb
jmp
xor
mov
xor
cltd
cld
xor
out
jnp
pop
pusha
imul
repz
jecxz
or
inc
repz
mov
xchg
jae
mov
shrb
sti
jo
jmp
stc
int3
ret
and
cmpl
out
notb
cmpsb
cmp
dec
fldl
rol
out
sub
shrl
nop
out
arpl
and
adc
inc
adc
int
in
test
inc
dec
in
lods
sbb
push
xor
ret
lds
outsb
testb
push
ss
jo
out
mov
pop
lods
mov
xlat
mov
mov
hlt
sbb
or
xchg
addr16
rorb
dec
push
data16
fld
fwait
push
xchg
rorl
repnz
daa
lcall
bnd
stc
xchg
push
inc
xor
and
notl
or
push
das
jmp
ret
rcrl
xorl
out
outsb
adc
mov
scas
mov
outsl
sahf
jmp
and
or
bound
mov
scas
movsl
movzwl
int
or
jb
cmp
sbb
adc
jo,pt
mov
fsubr
jae
jge
jl
mov
fs
cmp
inc
out
xor
test
gs
xchg
rcll
enter
mov
subb
and
sbb
xor
or
std
lock
xchg
sub
shlb
mov
jmp
loop
sbb
and
sahf
pushf
and
sti
popf
fsubrs
test
popa
fidivrl
repz
mov
xor
xchg
mov
ds
xchg
inc
mov
sub
pushf
adc
xchg
xchg
jge
loopne
ret
pop
repnz
cmp
test
out
xchg
push
cmc
enter
inc
test
scas
rcll
ja
mov
aad
arpl
leave
or
lock
cmpsb
pop
iret
jns
mov
pop
addb
push
jno
mov
push
jae
ja
adc
loopne
cmp
push
and
cmp
inc
negl
jno
xchg
mov
fst
push
das
cmpb
mov
mov
rcll
or
jnp
or
pop
test
adc
loopne
mov
mov
pop
fidivs
pop
sbb
mov
lahf
xchg
aam
ret
add
cmp
hlt
jns
les
aam
pop
les
aad
ds
sbb
movsl
sbbl
push
mov
mulb
mov
in
push
jb
inc
mov
fisubrl
cli
mov
test
sub
aam
movsb
or
cmpsb
in
rclb
or
and
ljmp
sbb
mov
pop
mov
stos
sahf
dec
xchg
test
sbb
out
insl
rorb
std
fimuls
adc
shll
test
xchg
jecxz
pop
orl
movsb
inc
add
cwtl
leave
dec
add
and
test
dec
rcrb
xor
mov
inc
pop
mov
jmp
xchg
xor
xor
lret
in
xor
cmc
test
test
sub
or
testl
push
mov
sub
icebp
sbb
scas
or
scas
push
cmp
lds
mov
add
enter
mov
outsl
push
cli
sbb
ret
pop
cmpsl
fiaddl
cmp
mov
add
test
in
in
push
lahf
sub
je
adc
cmp
dec
fwait
sbb
cltd
std
insl
or
push
fsts
ds
cltd
cmp
jo
insb
fdivr
xorb
cmp
or
add
sub
dec
subb
mov
aas
fnstsw
and
xor
pop
lcall
xor
or
and
aam
xchg
cmp
aam
pop
mov
sub
dec
push
cmp
mov
pusha
jno
subl
cmc
push
mov
aad
call
fsub
xor
cmc
lock
andl
or
sub
pop
inc
push
jno
mov
stos
test
repz
out
ficoml
push
icebp
adc
lods
jae
mov
and
divl
cwtl
jg
mov
clc
rcrb
mov
mov
adc
inc
xchg
pop
xlat
lret
call
add
lock
xchg
dec
push
jo
or
jle
ljmp
cmc
and
aaa
xchg
andl
xlat
adc
mov
push
cmp
or
lock
ret
dec
or
leave
outsb
mov
xorl
mov
js
inc
loop
dec
dec
shlb
call
popf
dec
pop
icebp
pop
adc
rclb
mov
sarb
bound
jno
xchg
int
fimull
add
ss
addr16
nop
sahf
fs
mov
addr16
scas
inc
scas
negb
shr
mov
dec
push
fmul
mov
jl
popf
mov
mov
adc
jnp
sub
fs
dec
pop
lcall
mov
scas
lods
fucomi
stos
or
adc
xor
adc
xchg
adcb
cmp
test
add
jbe
pusha
xor
push
push
int
outsl
mov
js
ljmp
cmp
pop
push
shrl
js
in
stos
mov
add
xchg
xor
push
in
cmp
mov
mov
add
js
mov
std
sti
dec
aam
pop
inc
test
pop
xchg
dec
cmc
xor
mov
lock
daa
jbe
jne
fwait
mov
mov
scas
outsl
xchg
inc
push
int
shl
pop
pop
push
or
jecxz
inc
cltd
xor
jmp
xor
adc
adc
les
xchg
mov
mov
and
pusha
lock
and
outsb
popf
xor
jb
in
or
jmp
outsl
pop
and
push
stos
inc
fisttps
cli
mov
test
push
fiaddl
push
cwtl
lret
test
testl
dec
push
jg
inc
ljmp
push
cmp
scas
in
repnz
into
push
je
data16
cwtl
pop
cltd
mov
push
out
cmp
cmp
or
cmp
cs
mov
mov
or
xchg
dec
xorb
enter
xlat
inc
insb
fwait
jl
daa
jne
data16
and
test
jnp
mov
mov
out
stos
push
jp
pop
int3
test
inc
dec
mov
or
and
add
jnp
in
and
das
movsl
jecxz
pop
decl
jbe
cmp
jo
clc
aaa
jnp
cmp
loopne
inc
xchg
aaa
hlt
or
stos
push
ret
and
dec
and
mov
mov
adc
repz
jge
push
fadd
add
shrl
cmpl
shl
iret
mov
inc
sub
sbb
hlt
icebp
jnp
js
xor
packsswb
pop
add
push
and
cmp
push
data16
bound
xchg
sbb
pop
ret
out
test
push
dec
mov
lahf
mov
and
sub
and
pop
jns
cwtl
lods
cmp
sub
mov
mov
cmpl
jle
loopne
xchg
mov
out
call
aam
cwtl
jl
divl
pop
lods
push
jg
inc
pop
icebp
or
outsb
test
ret
xor
sbb
adc
or
pop
cmp
out
pop
adc
mov
into
or
mov
outsb
in
cmp
pop
adc
dec
ret
dec
sub
fdiv
or
and
daa
jne
pop
push
ds
fsubrp
xchg
std
mov
stos
pop
int3
sbb
int
cmp
fwait
les
or
push
mov
jo
hlt
test
or
push
and
cmp
sahf
jbe
jle
rolb
andb
scas
and
pushf
xrelease
jne
sub
mov
insl
inc
pop
les
sahf
sub
insb
inc
imul
inc
xchg
xchg
lock
inc
lahf
bts
testb
fisttpl
sub
sbb
stc
jmp
jp
or
stos
jg
insb
or
mov
mov
or
dec
xchg
loop
cltd
dec
and
cmp
mov
mov
test
xor
mov
mov
test
jp
xchg
mov
cmp
or
incl
aam
scas
adc
mov
add
sbb
imul
cmp
sub
xor
fsubs
inc
push
imul
pop
fisubl
and
fwait
sbb
addb
outsl
sbb
push
pop
popa
mov
pop
push
xchg
int3
adc
mov
add
iret
sub
cmp
add
mov
sub
popf
stos
out
cli
add
arpl
psadbw
in
xor
mov
fwait
cs
enter
pop
out
mov
call
inc
cmpsl
adc
cs
push
push
push
sarl
xor
clc
jecxz
or
outsb
mov
xor
or
jbe
rcl
aad
sbb
or
test
push
mov
mov
cmp
jp
sbb
lret
or
jmp
cmp
cmp
jnp
fwait
pop
sub
mov
lahf
shll
ds
imul
insl
xlat
or
cmp
mov
adc
pusha
or
pop
sarl
test
scas
outsb
jecxz
fucom
enter
add
out
std
cmp
sbb
shll
dec
movsl
cli
daa
xchg
adc
rcl
icebp
fistl
daa
adc
sbb
repnz
fistl
fildl
pusha
mov
in
pop
out
aas
jg
mov
fwait
clc
std
and
clc
lds
mov
jge
xor
in
or
pushf
push
test
das
clc
les
sub
popa
aas
adc
adc
pop
jae
arpl
and
jbe
arpl
push
aam
mov
sti
ficompl
popf
add
iret
add
rcr
xchg
jmp
cmp
cmc
mov
and
rcll
loop
rolb
fs
pop
sub
in
jnp
pop
jno
arpl
or
int3
enter
cmp
xchg
roll
testl
mov
mov
dec
dec
insb
repnz
mov
mov
mov
mov
xor
pop
sbb
dec
mov
ljmp
pop
js
jne
in
sbb
mov
es
add
fcoml
pop
mov
mov
fsubrp
xchg
inc
xchg
push
xchg
mov
dec
repnz
sbb
aad
lret
or
fwait
mov
jb
call
push
sarb
js
imul
jg
mov
mov
outsb
je
dec
lcall
jmp
call
not
mov
push
cmp
jle
xor
pop
inc
iret
ds
mov
push
xor
jge
fs
int
and
into
dec
data16
mov
mov
push
mov
into
iret
sbb
inc
int3
xor
loopne
mov
inc
rorb
and
or
test
inc
xchg
mov
jno
push
xor
add
aas
sub
xor
jge
cmp
sbb
clc
test
data16
mov
cld
jle
sbb
cwtl
adc
xor
int3
fistl
sbb
stos
insl
aas
or
fs
push
dec
pop
pop
push
mov
or
push
mov
xchg
push
std
adc
aam
push
scas
inc
sbb
push
push
in
cmpsb
cli
ror
jns
jno
in
dec
xchg
aam
mov
or
cmpsl
cmp
add
stos
xchg
mov
mov
int3
imul
out
jmp
cmpl
jg
les
push
adc
push
adc
fsubs
inc
insb
sub
dec
xlat
test
or
paddusw
adc
dec
pop
std
sbb
sub
and
decb
dec
ret
mov
pop
ret
xor
inc
add
ja
cmp
lret
shlb
jp
and
scas
insl
or
mov
repnz
mov
mov
fdivrl
sub
jno
sub
ds
pop
test
pop
lret
add
clc
jmp
repz
lahf
sub
push
lret
fmull
adc
or
repnz
js
imul
fwait
mov
sbb
daa
cltd
movsl
mov
les
push
cmp
stos
mov
in
pop
stc
mov
push
lock
stos
fcompl
jecxz
mov
sub
arpl
adc
add
jmp
in
adc
xor
jl
ret
adc
sub
pop
cwtl
loop
je
imul
xor
mov
or
icebp
loope
push
mov
flds
mov
inc
and
cwtl
out
add
into
jmp
jbe
pop
lea
nop
or
xor
stc
outsl
adc
xor
and
clc
mov
jmp
lds
enter
scas
push
int3
jo
mov
shl
sti
outsb
and
cmpsl
fdivl
movsl
pop
push
ss
arpl
sub
mov
xchg
push
inc
cmp
or
sarl
rorl
ljmp
test
add
adc
call
stos
push
lret
cmp
cmp
sbb
sub
and
sub
xor
rcrb
sbb
stos
xor
into
test
scas
lds
xchg
cmp
jbe
in
mov
daa
pop
push
jns
fmuls
bound
popf
xor
pop
mov
or
inc
cmc
mov
out
ficoml
popf
or
dec
pop
xchg
xchg
mov
fidivs
mov
aad
or
inc
adc
int3
loop
cmpsb
pop
rcrb
fwait
add
mov
and
fldl
loopne
xchg
inc
insb
ror
sub
into
pusha
inc
popa
mov
xchg
push
mov
or
and
pop
cwtl
scas
and
subb
mov
dec
inc
sbb
mov
scas
ret
lea
aam
lock
shll
lods
pushf
xchg
pop
or
shrb
jbe
or
es
xor
dec
mov
add
and
push
dec
push
jecxz
fnstcw
adc
int
xor
fld
je
xchg
aas
inc
mov
add
pop
in
cmpsb
pop
inc
xchg
jge
mov
lret
out
mov
sbb
xchg
outsl
in
arpl
or
push
pop
pop
mov
iret
das
aad
dec
push
push
xchg
cltd
insb
push
jb
inc
cmpsl
rcrb
in
dec
cmp
out
sub
inc
insl
popa
sbb
je
jp
insb
stos
mov
cmp
aad
fnstenv
inc
cs
into
lcall
decb
cld
cmp
jo
imul
push
cs
pop
mov
fs
xchg
xchg
sbb
cmovns
and
mov
jle
mov
into
xchg
notl
push
mov
addr16
xor
mov
jo
ret
icebp
inc
inc
mov
pop
cmpsl
or
inc
or
mov
sbb
iret
cmp
pop
cmp
mov
inc
lods
js
mov
jmp
repz
out
xlat
mov
int3
mov
popa
fucom
inc
xlat
sbb
pop
rep
add
dec
mov
mov
das
leave
sub
push
cmp
jl
arpl
std
lcall
pop
jmp
repnz
gs
inc
rcrl
aam
mov
int3
sub
aaa
movsl
add
dec
dec
jle
rorl
jne
popf
mov
loope
int
xor
push
addr16
je
inc
dec
aaa
mov
sti
loopne
fidivs
scas
fsubp
nop
mov
mov
mov
mov
addl
dec
cmpsl
inc
or
mov
paddd
fs
sub
dec
lods
mov
or
lods
mov
cli
or
adc
dec
aam
add
in
add
inc
jl
push
and
flds
push
adc
enter
add
xchg
push
push
inc
test
jb
lret
sbb
mov
aad
push
add
sbb
or
jns
ret
add
sub
sbb
rcrb
push
daa
dec
mov
mov
aad
pop
sbb
xorb
sub
std
pop
cld
and
xlat
clc
and
mov
sbb
push
bound
test
push
out
loope
inc
cli
imul
push
and
sar
cmp
dec
lcall
mov
mov
mov
jge
stos
mov
or
xchg
mov
pop
insl
aas
loop
add
mov
xor
int
jbe
loope
adc
shl
clc
sub
xchg
pop
aas
push
mov
bound
loope
imull
jne
cmp
jmp
add
outsl
aam
and
filds
or
cmp
pop
mov
ret
ds
or
cmp
pop
ret
lahf
mov
and
sti
and
xor
xchg
mov
and
dec
or
dec
popa
jb
and
mov
sbb
decb
cmp
inc
aaa
dec
pop
cmpsb
pop
std
pop
lret
xor
sbb
dec
dec
aaa
loopne
int
mov
mov
mov
pop
jnp
jle
and
cmpsb
jns
ds
mov
fs
xchg
push
pop
cld
js,pt
sbb
lret
movsl
inc
push
jle
cltd
mov
mov
les
repz
test
jae
dec
cmpsb
fbld
jne
cwtl
fisttpll
hlt
mov
dec
je
repz
lods
push
pop
inc
or
scas
aam
ja
pop
push
insb
test
add
call
mov
xchg
cmpsb
scas
pop
movsb
pop
stos
and
mov
dec
xor
dec
rolb
mov
jne
jb
pusha
icebp
xchg
pop
jae
repnz
lcall
sbb
inc
popa
ds
dec
inc
push
push
into
dec
daa
jg
jne
push
test
pop
sarb
aas
inc
por
or
push
and
cmp
mov
cmpsb
xchg
mov
testb
aas
fcmovb
gs
push
mov
das
and
push
das
out
cmp
jno
addr16
ficomps
mov
cmp
dec
jbe
movsl
les
imul
bound
mov
cltd
adc
gs
mov
lock
pop
data16
sub
and
or
rol
mov
cltd
sub
addl
lret
rcrl
ds
test
movsl
jle
jg
outsb
scas
cld
mov
mov
repnz
push
clc
xchg
or
dec
in
orl
mov
push
std
push
test
sti
xchg
pop
cld
jb
mov
push
imul
cmpb
cmp
repz
push
test
fwait
adc
in
xor
add
pop
or
and
in
jmp
mov
fidivs
cmp
ret
xor
ds
push
sub
cmpsl
mov
mov
push
imul
adc
ficompl
icebp
and
out
js
lea
xchg
aas
or
fisubrl
adc
mov
mov
cmp
and
rorl
xorl
in
jbe
movsl
adc
pop
mov
movsb
mov
or
outsl
add
xorb
mov
rorb
push
pop
fisttpl
cmpsl
lcall
fildl
adc
int3
push
or
cltd
mov
xor
aad
je
repnz
lahf
fnstsw
jae
adc
xchg
imul
cld
cmpsl
xor
xorb
inc
lea
std
rcrl
dec
add
push
imul
add
es
fbld
into
push
pop
push
aaa
inc
dec
pop
inc
fcompl
push
dec
imul
fidivl
add
popa
fisubrl
xchg
clc
dec
icebp
add
scas
add
jg
test
ds
jno
jle
push
mov
imul
and
add
jl
adc
sbb
add
mov
cmp
lret
xchg
outsb
pop
push
pop
insb
xor
rorl
insb
lret
mov
pop
pop
scas
and
jg
mov
ds
push
sbb
fs
outsl
mov
xor
sbb
adc
and
mov
es
xchg
loope
pop
and
call
dec
out
imul
lea
pop
dec
hlt
bound
shr
fisttps
fs
aas
lods
jge
or
in
ss
int
xchg
ret
dec
jmp
es
fidivrl
cmc
andb
xlat
mov
mov
pop
shlb
mov
add
adc
add
inc
fdivl
mov
or
in
dec
pusha
push
dec
fldt
repnz
xchg
js
push
test
ror
adc
inc
sub
jno
lock
inc
inc
and
loope
lods
or
mov
xor
adc
push
pop
ds
pop
mov
add
pop
xchg
inc
mov
cmpsl
dec
outsl
mov
mov
lods
out
pushf
dec
out
xchg
fisubrl
je
adc
push
icebp
hlt
push
daa
out
inc
shrl
inc
jae
das
push
mov
repz
xchg
jle
mov
mov
cmp
fmul
sub
stos
popa
leave
ljmp
inc
imul
jae
jge
shrb
xchg
adc
jg
cmpsb
jns
aaa
mov
popa
pusha
les
inc
dec
cld
dec
sbb
dec
mov
int3
adc
cmc
sbb
mov
jno
xor
repnz
push
xchg
push
xchg
mov
scas
loop
xor
dec
mov
xorb
jno
pop
lds
mov
xchg
aad
add
testl
enter
xlat
mov
mov
cmpsb
aam
repnz
add
inc
test
sub
mov
dec
bound
ss
jmp
mov
aad
push
sub
sahf
dec
in
aaa
icebp
mov
into
sub
jp
ret
mov
cmpsb
sub
inc
jmp
mov
sbb
mov
cmc
sahf
lret
sbb
and
int
cmp
mov
icebp
adc
xchg
stos
jnp
jno
sub
and
jne
pop
dec
jle
jbe
or
daa
insb
jecxz
add
mov
test
mov
outsl
jb
mov
pop
mov
mov
sub
and
jg
fwait
push
aaa
dec
dec
inc
insl
je
fwait
pop
push
mov
mov
xor
int
xchg
xor
push
dec
jp
jecxz
and
xor
mov
lret
aad
adc
xor
pop
or
pop
cs
mov
fsubs
sub
lcall
gs
ret
rorl
push
call
inc
inc
sbb
xor
sbb
into
jbe
cmp
jnp
inc
test
call
xchg
das
outsl
rorl
movsb
test
fstpl
shr
xchg
lret
cld
inc
loopne
xor
push
sbb
out
xchg
int3
ret
push
xchg
pop
stc
movsb
mov
mov
add
jl
addl
sbb
or
int
adc
insl
rcrb
pop
or
push
mov
out
xchg
sub
es
or
sbb
sarl
push
movsl
add
xlat
aad
loop
push
lahf
or
push
imul
or
lahf
in
mov
lea
sbb
stos
out
add
push
fcmove
sarb
pop
lret
ja
jbe
hlt
mov
mov
push
mov
cmp
push
paddw
mov
mov
rclb
les
pop
mov
push
pop
out
popw
test
push
out
mov
mov
push
xchg
xor
mov
adc
dec
xchg
sub
in
inc
pushf
mov
aad
nop
lretw
out
roll
lahf
lds
in
lock
ljmp
idivb
repz
nop
in
into
insb
movsl
push
shll
out
mov
int
dec
out
out
mov
mov
sbb
dec
push
cmpb
mov
outsl
into
mov
shl
daa
loopne
bound
push
arpl
test
adc
stc
sahf
dec
mov
cld
xchg
sbb
fwait
imul
stos
mov
pop
lods
icebp
idiv
mov
negb
add
repnz
push
pop
popf
mov
add
mov
aaa
je
inc
inc
loope
hlt
cmp
mov
lret
xor
xchg
mov
add
les
adc
pushf
and
xor
jns
in
hlt
outsb
repz
sahf
jo
ja
imul
add
insb
push
clc
dec
or
movsb
fs
inc
mov
mov
cmpsl
sbb
push
into
popa
out
pop
ret
mov
idivl
jnp
pop
mov
aad
jp
adc
jmp
lahf
negl
pop
sbb
lea
jnp
or
and
adc
adcb
test
rcll
icebp
mov
popa
clc
ror
push
pop
adc
or
cmpsb
ret
mov
std
sbb
ljmp
jmp
test
pop
dec
push
xchg
leave
xor
xlat
mov
sbb
push
fisubs
dec
inc
sub
cmp
cmpl
sbb
xor
fwait
ljmp
notl
pop
jge
nop
or
sti
movsb
jg
in
add
xchg
or
jp
jno
cmpsb
xchg
push
mov
and
mov
pusha
into
mov
sub
or
pop
inc
leave
and
aad
add
cmp
aad
out
push
jl
mov
shlb
shll
sub
xchg
rcl
dec
nop
imul
shrl
push
rorl
lret
hlt
add
jb
ljmp
dec
test
jl
dec
rorl
fwait
or
int
cmp
stc
mov
mov
andb
mov
ss
mov
cmp
mov
pop
cmp
jo
shll
xor
pop
stos
lods
cmpl
lahf
xchg
mov
xchg
les
push
ret
mov
jle
jae
push
call
repz
xchg
pop
pop
sbb
jl
and
xor
shr
sub
subl
add
adc
cmp
mov
jl
int3
movsl
fmuls
into
iret
inc
xchg
mov
stc
mov
push
lcall
cltd
or
pop
leave
test
or
mov
insb
adcl
fdivrl
mov
test
in
test
test
fs
mov
addr16
mov
cli
mov
or
sub
js
out
push
in
mov
push
subl
call
lret
fstpt
jbe
inc
imul
fnsave
and
or
sbb
arpl
fucom
sbb
call
adc
pop
mov
dec
dec
inc
jle
out
lahf
fisubrl
jecxz
jle
dec
or
xchg
dec
sarl
and
lret
pop
mov
gs
sbb
iret
popa
shl
in
into
xchg
lret
cs
cmpsb
vpcmov
or
frstor
pusha
adc
aas
pop
inc
mov
mov
icebp
inc
or
leave
adc
nop
xchg
jb
aad
xor
dec
bnd
mov
movsl
mov
out
xor
aad
push
test
inc
sub
inc
xor
xchg
pop
inc
out
fldt
cmp
xchg
aas
sub
or
stos
bnd
ret
fidivrl
mov
das
movsl
pop
adc
pop
es
fcoml
mov
mov
nop
xchg
pop
mov
jnp
and
dec
jmp
sub
scas
xor
out
mov
test
mov
inc
fs
das
addr16
out
sti
xor
ss
adcb
lahf
jns
pop
out
sub
pusha
orb
insl
push
aaa
jg
adc
push
xchg
sbb
inc
arpl
xor
adc
push
repz
sbb
dec
push
adc
xchg
dec
mov
xchg
lds
fucomp
adc
xor
push
dec
jg
cmp
into
inc
jmp
fisubrl
lret
sbb
insb
ja
cwtl
gs
xchg
push
mov
fiaddl
cwtl
mov
lods
shlb
outsb
cwtl
subb
push
les
repnz
jecxz
sub
mov
or
jg
out
mov
shlb
shll
and
ret
bound
mov
mov
sub
inc
pop
js
call
sub
clc
aam
push
lret
insb
mov
sbb
popa
stc
pop
data16
adcl
cmp
iret
icebp
pop
scas
sub
pop
leave
ljmp
jo
lcall
mov
pop
cmp
push
sbb
hlt
push
lret
hlt
cmp
cmp
lcall
cwtl
mov
push
ficoml
hlt
mov
dec
xor
cmp
cmp
jne
cmp
inc
leave
popf
adc
xchg
cld
xorb
lds
xchg
test
mov
mov
lcall
push
gs
incl
rclb
movsl
sbb
in
inc
sbb
call
add
pop
pop
int
mov
pop
lahf
fimuls
insl
fcmovbe
xor
push
jnp
repnz
jmp
adc
xchg
lock
xor
add
idivl
pop
push
into
ljmp
xchg
icebp
cmpsb
add
stos
dec
aaa
rolb
xchg
and
lock
lock
add
mov
inc
rorl
jae
jp
xchg
insl
lds
repnz
sbb
mov
pop
pop
cmpsb
mov
jnp
lcall
fildl
push
xchg
mov
pusha
int
add
popa
testb
pop
sbb
dec
xor
lds
fmuls
inc
push
rorb
fimull
sub
jmp
jl
adc
popa
fists
xchg
adc
lds
pop
mov
jo
push
sub
sub
push
jne
and
je
push
push
mov
in
and
leave
push
ss
xor
xor
addr16
int3
loope
leave
lret
in
xor
pop
mov
xchg
xor
xchg
xchg
shrb
jmp
dec
repnz
or
mov
push
loope
inc
push
push
les
mov
cmc
or
shr
stos
lcall
stos
push
dec
dec
push
std
adc
dec
dec
ficoms
rolb
nop
xor
aam
test
fsincos
int3
xchg
test
ret
fcomps
mov
lods
js
dec
mov
lods
push
jmp
out
aaa
hlt
push
fildl
shrl
testb
or
xchg
in
add
sbb
leave
or
or
push
inc
mov
out
imul
jg
and
cltd
pushf
jecxz
mov
cli
aas
xchg
aaa
lcall
jp
jg
sub
jle
mov
push
sbb
cmp
sbb
adc
push
dec
cwtl
test
loope
or
xchg
loope
jo
xor
xor
popa
push
mov
cmp
push
fwait
movsl
in
in
mov
movsb
lret
int3
sahf
sub
sahf
cmp
outsl
test
dec
inc
shlb
lock
sbb
mov
sti
insl
mov
adc
adc
aaa
pop
jo
adcl
sub
out
mov
xchg
inc
push
jb
sub
stc
pop
fcompl
cmp
addr16
add
ret
mov
xchg
cmp
and
std
jbe
xor
call
inc
pop
negl
mov
mov
iret
das
outsl
hlt
cmp
ja
adc
mov
jge
in
cwtl
xchg
sub
adc
add
jle
push
lret
fcmovbe
sub
mov
stos
int3
js
jl
push
adc
xchg
lds
aam
stos
xor
adc
sub
mov
mov
xor
xor
xchg
cmpsl
xor
das
add
mov
out
imull
jmp
ret
inc
outsl
mov
outsl
mov
fcompl
scas
inc
jo
cmp
jp
fcoml
push
mov
fcomp
inc
adc
fidivrs
xor
fisubl
mov
lock
jmp
sbb
and
pop
cmp
mov
sbb
add
lock
xchg
cmpsb
and
enter
imul
imul
or
jecxz
addr16
test
cmp
xchg
lods
in
in
pop
loop
cmp
out
loop
outsl
std
test
loop
sbb
fsub
loop
cmp
aaa
inc
stos
pop
or
in
mov
lods
mov
out
sti
pinsrw
cmpsb
nop
sub
add
or
mov
jg
sbb
fwait
mov
sbb
stos
cwtl
nop
jnp
shr
cli
add
enter
jl
ss
pop
xor
jbe
sub
leave
lea
push
and
roll
push
jge
jae
mov
fwait
insl
scas
iret
inc
aad
bound
pop
sbb
lcall
sub
int3
clc
or
jecxz
pop
xor
adc
xchg
mov
or
sarb
jmp
repnz
rclb
shrl
mov
pop
adc
fwait
adc
jbe
loopne
dec
pop
mov
outsl
and
lahf
mov
dec
lahf
popa
xor
xor
cmp
popf
add
insb
pop
push
into
pop
addb
insl
pop
insl
jge
mov
aas
test
mov
mov
cs
dec
inc
idivb
add
pop
insl
inc
iret
jg
add
inc
add
stc
mov
scas
sub
out
lret
arpl
lfs
and
arpl
cs
lods
dec
mov
aam
sbb
sub
dec
scas
xor
sbb
imul
push
or
scas
loopne
mov
in
lock
xlat
dec
push
push
push
and
cmp
dec
cltd
jge
lret
cmp
jge
and
shl
xor
fists
or
nop
outsl
or
or
cmpb
inc
stc
popf
xchg
int
mov
outsl
xor
or
xor
subb
push
movsb
sub
dec
sbb
in
add
adc
fdivl
push
and
fnstsw
lcall
mov
mov
inc
pop
or
sbb
mov
cmpsb
lea
jecxz
jno
divl
dec
imul
cmp
shll
in
ret
push
test
call
dec
ljmp
aam
stos
pop
cmpsl
stc
lods
pop
and
mov
and
inc
cli
and
xor
and
cmp
or
sub
fucomi
or
nop
push
add
mov
add
andb
mov
xchg
push
cmpsb
sub
cmpsl
rcll
cmp
int
mov
add
es
mov
cltd
or
or
test
jmp
bound
pop
dec
insl
inc
nop
ret
out
in
push
bound
loopne
mov
sti
add
adc
test
fisttpl
xchg
pop
fdivr
into
jo
stc
xchg
ud1
inc
push
jnp
movsl
je
dec
mov
in
outsb
fcomp
jbe
stos
cwtl
in
add
test
jmp
leave
stos
pop
fs
xor
jecxz
dec
in
adc
and
sahf
inc
jbe
xor
pop
jb
test
shlb
pop
scas
lock
ret
jg
rcrb
push
xchg
mov
or
pop
lock
pop
push
shrl
jp
mov
les
inc
jae
jg
rcll
mov
fisttpll
sub
xor
xchg
mov
rorl
lret
aas
or
push
or
fsubl
lock
or
inc
xor
shll
jp
xor
push
mov
mov
enter
mov
add
ja
xor
scas
adc
add
jno
es
aaa
cld
xor
adc
or
jle
dec
shr
inc
mov
neg
cmp
push
jbe
clc
jp
cmp
xor
xor
stos
es
inc
xor
bound
xchg
mov
inc
in
jns
push
fsubrl
jno
push
add
imul
mov
mov
out
pop
scas
mov
push
jmp
les
les
scas
mov
pop
inc
and
and
pop
pop
mov
push
push
test
mov
xchg
sahf
sub
adc
stc
fsts
cmp
loope
out
xlat
mov
pop
dec
jo
ret
pop
std
sub
dec
lahf
push
mov
mov
and
pusha
shl
jp
das
stos
sti
sbb
inc
jge
lods
mov
push
cmp
push
xchg
lds
sbb
call
inc
add
pop
in
push
push
fs
fwait
mov
aaa
imulb
sahf
pop
fidivs
xchg
dec
sub
xor
and
mov
cmp
sub
lcall
sub
imul
sub
rcr
jmp
add
mov
push
repnz
cmp
adc
aaa
push
cmpsl
stos
jno
jl
adc
mov
cltd
xchg
mov
lods
xchg
dec
fsubl
pop
aam
fimuls
sub
mov
inc
mov
mov
inc
add
mov
enter
jle
outsl
xchg
mov
sbb
cmp
pop
inc
sub
pop
jle
add
push
mov
push
cwtl
mov
mov
shl
loop
mov
hlt
jne
in
shlb
mov
testb
dec
lret
jl
cmp
dec
shlb
out
fiadds
xor
int3
sti
inc
int
pusha
inc
jg
icebp
push
aam
cli
fidivrs
enter
adc
aad
sub
es
jge
lea
lret
cmp
test
pusha
lods
inc
into
nop
adcl
mov
fst
cmpsb
adc
fdivs
out
outsb
inc
or
mov
push
in
sbb
cmp
and
not
rcl
xchg
jl
push
mov
pop
lock
jb
add
call
mov
push
pushf
andb
cld
sub
cwtl
cmp
mov
sbb
inc
jno
or
sub
sbb
addl
mov
subl
fldl
popa
jl
roll
rclb
shrl
mov
mov
inc
shll
jmp
ret
mov
inc
shlb
cs
cmp
mov
test
js
cmp
push
sar
ss
daa
jnp
in
jle
insb
mov
ret
mov
test
pusha
jp
sub
adc
dec
in
scas
hlt
mov
mov
mov
and
cmp
cmp
repnz
dec
cmpsb
xchg
or
dec
aad
mov
in
or
cmc
das
jg
jmp
dec
xchg
pop
sbb
jnp
repnz
cli
mov
and
mov
inc
movsl
dec
and
mov
jns
and
mov
flds
cmp
sub
jb
jl
lret
test
mov
sarb
dec
xor
mov
pop
outsl
add
sbb
lahf
cmp
mov
outsl
adc
inc
out
sbb
dec
and
dec
adc
std
cmp
add
shrl
cwtl
push
xor
inc
in
mov
mov
andl
push
mov
ja
xchg
stos
movsb
sub
jo
out
das
inc
mov
lds
jo
push
insl
or
push
stos
adc
sbbb
ret
repnz
std
and
fisttpl
xor
push
sahf
fistpll
ds
dec
loop
inc
dec
inc
adc
ja
test
mov
mov
sub
imul
dec
mov
mov
in
adc
pop
push
subb
fisttpl
push
pushf
pop
mov
scas
sbb
loop
xchg
repnz
shlb
mov
or
arpl
xchg
or
pop
out
xchg
daa
lods
insb
lods
arpl
mov
and
addl
fstpl
inc
sbb
mov
add
sarb
in
lea
sahf
pop
xchg
xchg
mov
xor
cmpsl
idivw
xor
out
int
sub
vstmxcsr
movnti
fs
ljmp
mov
mov
in
or
cld
adc
push
push
ficoms
dec
mov
movsl
xchg
pop
gs
out
push
cmc
sahf
lahf
mov
std
sub
pop
jb
mov
out
pop
cmpb
outsl
cmpsb
inc
in
cltd
hlt
popf
jb
push
adc
mov
mov
sbb
mov
in
imul
sbb
sahf
inc
mov
jb
cmpsb
mov
lods
popa
pop
out
orl
mov
sarl
inc
dec
dec
sub
push
or
out
mov
stos
pop
loope
push
ss
aas
adc
xchg
loop
xor
dec
lds
xchg
adc
adcl
test
loope
inc
jmp
rorw
dec
and
sub
and
dec
rorb
out
dec
pop
and
push
or
lcall
sub
or
push
icebp
sarl
inc
testb
in
push
mov
leave
imul
cmp
mov
std
popf
addr16
mov
sbb
sbb
inc
jno
pop
push
lret
jecxz
jecxz
dec
aas
lods
adc
stos
inc
or
scas
sbb
lock
mov
pop
pushl
jne
cmp
fldt
or
dec
add
or
lods
das
pushf
sbb
aaa
pop
lahf
mov
adc
fwait
je,pt
fs
sar
mov
sbb
sbb
xchg
cmp
gs
insl
pop
and
cld
gs
lret
jp
popf
or
daa
bound
lods
shlb
cmc
push
mov
dec
loop
dec
daa
and
mov
push
mov
mull
add
jo
push
lds
jp
test
dec
rorb
inc
or
aad
ret
sub
mov
nop
mov
mov
mov
push
sbb
jbe
fnsave
aaa
adc
insb
xor
lret
add
cmp
add
xchg
add
in
lds
scas
mov
cmova
push
push
cmpsb
mov
mov
sub
ss
lret
movsl
or
xchg
mov
push
and
pop
cs
mov
cwtl
mov
cmp
cwtl
mov
pop
data16
xor
iret
inc
mov
rol
inc
add
add
fld
and
and
bound
and
mov
or
pop
stos
lret
push
out
pop
push
dec
or
fidivrs
mov
cmp
dec
int
xchg
stc
rcrl
jg
mov
imul
xchg
outsl
shrb
xor
xchg
push
les
scas
fists
clc
test
inc
add
ficoms
lcall
scas
sbb
rorl
in
mov
das
js
mov
lds
lahf
jo
fisttps
loopne
mov
mov
adc
xor
mov
mov
and
int3
call
jnp
xchg
mov
inc
add
scas
cmp
sti
mov
call
cld
ficoml
sti
lock
xor
mov
mull
pop
mov
popf
xor
sbb
sub
push
ljmp
mov
inc
out
inc
ret
clc
add
scas
xor
push
and
in
push
pop
add
fwait
sub
fcompl
outsl
and
ljmp
cmpsl
push
jge
sbb
aad
stos
repnz
pushf
mov
cmp
adc
cld
xchg
mov
and
into
fldcw
mov
stos
int
sub
rcll
das
add
xor
stos
xor
dec
push
and
pop
adc
sub
mov
xor
rcrb
daa
mov
or
dec
lods
repnz
imul
mov
cmp
xchg
outsb
dec
jae
inc
subb
xchg
aad
push
loope
pop
xorl
mov
pop
and
pop
push
aam
adc
repz
xchg
cmp
inc
and
fisubs
ss
into
loopne
lock
fs
inc
pop
cli
push
in
push
mov
repnz
loopne
je
push
push
sub
push
daa
pop
xchg
aad
fs
cltd
jnp
fsubs
scas
ret
imul
mov
push
or
enter
cmpsl
add
sbb
adc
fisubl
sbb
scas
xorl
push
loopne
pop
arpl
cmp
mov
cltd
or
push
lea
jmp
into
cmp
insl
sti
sti
mov
outsb
in
out
aas
fimull
xchg
imul
mov
movsl
adc
add
jns
and
ds
in
xchg
push
push
xor
leave
pusha
outsl
faddp
inc
insl
cmp
xchg
cmpsl
dec
xor
je
inc
lret
cmc
push
cmp
mov
lds
je
dec
push
push
xchg
test
sub
pop
loopne
inc
mov
stc
ljmp
pop
jnp
or
nop
mov
add
add
fsubrl
and
scas
fsubrl
add
int3
icebp
dec
jae
loop
cmpsl
imul
fwait
stc
cld
scas
sub
xlat
push
xchg
icebp
cmpsb
mov
mov
push
sbb
and
add
xchg
dec
pop
in
inc
push
fdiv
mov
push
mov
scas
cmp
imul
push
pop
scas
ret
cmpb
xor
push
mov
push
pop
add
pop
jno
lods
ds
sub
mov
fdivp
pop
dec
and
arpl
aaa
sub
arpl
popa
je
sub
mov
mov
aaa
popa
cmp
inc
jp
negb
mov
cmc
nop
adc
cli
pop
ds
div
sbb
push
mov
sub
clc
iret
out
mov
mov
and
sub
sbb
cmp
shl
cwtl
dec
out
adc
mov
mov
sub
loope
sub
add
mov
adc
pop
jnp
gs
shll
loopne
add
or
cmc
xchg
ficompl
loope
lcall
hlt
fdivs
shll
mov
cmpsb
fs
pop
out
mov
mov
add
mov
aam
jo
sub
int
loop
push
and
mull
xchg
repnz
pop
and
mov
lret
mov
cmp
xor
inc
jnp
mov
bound
or
notl
jecxz
jbe
out
xchg
sub
push
mov
dec
loop
add
jo
inc
pop
or
imul
sub
dec
sub
sub
sbb
pop
scas
or
adc
mov
test
movsb
xor
mov
into
xor
add
pop
pop
rep
adc
clc
jb
lahf
outsl
arpl
mov
add
iret
ret
sbb
and
fcomi
pop
adc
and
repnz
xchg
sbb
xlat
stos
popw
cmp
cmp
push
push
push
cmp
add
into
shr
adc
negl
xor
mov
je
ja
pop
cmpsl
in
push
fldl
jmp
mov
dec
out
into
or
rolb
loope
and
push
and
fsubs
fstpl
bound
dec
out
jge
xor
sub
jmp
lods
xchg
xor
ss
jbe
push
inc
pop
dec
add
xchg
add
fcom
mov
lcall
shll
jno
ja
and
cmp
mov
pop
ljmp
xchg
mov
ljmp
outsb
xlat
hlt
mov
xor
xor
ret
mov
repz
xchg
cmp
lcall
cltd
ljmp
mov
insl
mov
pop
jbe
adc
call
push
sahf
cwtl
push
jo
lds
outsl
pop
stos
notl
pop
sbb
inc
jo
and
jmp
xchg
hlt
jnp
cltd
push
and
cli
cmpb
call
cmp
push
xlat
pusha
jg
jne
push
mov
add
push
push
mov
jge
outsb
pop
dec
int3
notl
cld
ja
sub
pop
adc
and
inc
adc
inc
and
xor
jae
xchg
push
or
jae
mov
push
pop
pop
loop
push
mov
push
incl
jb
xchg
xor
add
arpl
daa
add
mov
inc
popa
out
pop
repnz
mov
testl
push
jne
sub
or
xlat
stos
xchg
mov
insl
sti
add
lret
add
jle
ja
pop
push
ja
pop
and
sub
mov
inc
jbe
outsl
ss
pop
cli
arpl
js
clc
les
mov
sti
xchg
icebp
xchg
shrl
add
xorb
bound
cmp
data16
fstps
dec
pop
sbb
orl
cld
gs
cmc
jl
jl
into
mov
add
popf
xor
lods
lods
dec
push
lcall
js
outsl
adc
loop
dec
mov
or
add
mov
cmp
jbe
inc
or
sub
stc
ret
inc
push
test
xchg
mov
bound
jb
push
fnsave
mov
push
inc
das
jmp
es
rorl
mov
or
cmp
pop
push
fiadds
fsts
cltd
mov
sub
xor
test
xor
fstpl
push
mov
or
es
sub
loope
pop
out
ljmp
xchg
adc
jns
adc
inc
push
xor
cltd
push
dec
dec
fs
xchg
cmp
fwait
push
js
pop
jbe
add
std
les
jg
mov
jge
fildll
mov
mov
clc
push
jae
iret
dec
and
mov
aam
pop
xchg
lods
ja
mov
adc
sar
fmuls
les
push
ds
out
mov
jbe
dec
push
push
mov
push
cmc
fsubs
xlat
clc
fxch
fidivrs
cmp
jbe
sub
je
lahf
loop
mov
jb
test
imul
xchg
andb
inc
fucom
cli
lahf
inc
out
xchg
fbld
push
sti
xor
mov
cmp
xchg
push
imul
push
lret
icebp
xor
fwait
andl
jnp
jle
es
and
mov
cmp
imul
sub
in
ret
shrl
andl
adc
sti
sbb
mov
or
fsubs
lock
rolb
pop
adc
outsl
push
stc
loopne
or
shlb
fldt
test
cltd
and
dec
jae
cmp
jmp
testb
aaa
cmp
push
jmp
push
lock
pop
outsl
cwtl
rcl
add
out
divl
daa
inc
jae
outsb
and
outsb
pop
ret
xchg
mov
fistl
in
adc
xor
stos
inc
pop
andb
inc
jbe
cld
push
inc
in
inc
xchg
in
inc
inc
ret
outsl
cmpsb
scas
sahf
aas
and
xor
cwtl
xchg
les
push
cmp
push
mov
dec
lods
add
xorb
rorb
lret
icebp
or
pop
rolb
inc
insb
test
pop
mov
jle
into
mov
jp
jg
test
das
mov
xlat
inc
pop
or
cmp
jns
std
out
loop
mov
xchg
push
or
fbld
sub
dec
dec
iret
fwait
leave
adc
mov
pop
jp
and
xchg
rcr
mov
lret
mov
add
or
sub
rorb
loopne
imul
mov
inc
or
icebp
pop
sub
mov
inc
cmp
dec
mov
xor
sahf
test
xchg
insl
sbb
mov
mov
mov
data16
xor
lock
inc
push
leave
push
imul
inc
add
cmpsb
testb
xor
fwait
and
inc
test
xchg
aas
push
cmp
bound
stos
sub
scas
cmpsl
aad
mov
xchg
jmp
shrb
xor
mov
mov
movsl
xchg
mov
push
pop
mov
lods
mov
ljmp
xchg
dec
sub
stc
mov
adc
mov
js
jo
jb
mov
dec
pushf
icebp
aaa
int3
or
daa
cmp
aas
ffreep
mov
cmp
outsl
mov
stc
test
lret
inc
cmp
and
js
notl
daa
adc
xor
and
sub
cmc
repz
inc
data16
out
test
or
ja
lea
mov
jge
mull
cmp
dec
std
adc
sarl
add
mov
fiadds
mov
insb
out
pusha
aaa
xchg
orl
jp
cmp
mov
mov
push
lods
aaa
adc
push
pop
ds
mov
and
inc
add
mov
iret
push
mov
fs
xor
jp
icebp
fbstp
jno
movsl
push
fucom
dec
rcrb
dec
std
lds
popf
cmp
jle
mov
push
out
add
stos
add
and
pop
jp
mov
pop
and
lcall
dec
out
mov
roll
ja
shl
stos
pop
and
dec
xor
xlat
daa
jbe
out
dec
insl
dec
push
or
lahf
inc
sbb
in
clc
inc
inc
test
mov
jg
push
xchg
sub
fmull
sub
pop
data16
je
mov
imul
cmp
jle
aaa
mov
dec
popa
jo
adc
pop
jmp
sti
jp
sti
pop
ds
loope
shlb
and
xchg
test
in
js
js
popa
sbb
add
push
or
out
sub
cmpsb
push
loop
inc
push
icebp
sbb
mov
mov
cmp
sbb
inc
inc
pop
inc
xor
lds
mov
ja
inc
lods
jbe
xlat
xor
roll
jmp
mov
addb
sahf
ljmp
sbb
dec
mov
subl
popl
cmp
shlb
adc
xchg
xor
testb
es
mov
cmp
fwait
ljmp
or
lea
outsl
fdivr
pop
test
xor
xor
adc
seta
push
xor
mov
lret
push
mov
mov
sub
out
xor
mov
mov
inc
mov
lahf
icebp
shrl
mov
out
mov
jo
cmpsl
movsl
aam
sbb
mov
rcrl
in
sub
inc
adc
repz
cmp
push
push
les
stos
out
and
cltd
inc
xorb
mov
jo
sbb
cmc
mov
orb
mov
imul
sbb
rorb
push
fsubr
fisttps
mov
inc
pop
sbb
dec
lea
sub
add
and
mov
sub
int
sub
cltd
and
push
cmc
sub
out
cmpsb
sti
sub
adc
mov
dec
adc
movsb
je
stc
push
icebp
pop
fcoml
insl
test
je
mov
fists
aad
cmpsb
sub
into
cltd
loop
roll
or
xchg
repnz
and
cmp
cli
movsb
and
pop
dec
inc
jmp
pop
into
test
sub
cwtl
int3
inc
jbe
mov
popf
pushf
dec
loope
repnz
push
pushl
xor
jno
aaa
stos
or
xor
into
mov
sti
xchg
js
or
imul
fnstcw
jnp
dec
dec
add
pop
jae
stos
jp
fisubrs
mov
and
xor
pusha
mov
cs
cs
into
mov
xchg
sbb
dec
jl
xchg
mov
jno
mov
insl
and
inc
ret
movsb
scas
jns
les
push
sub
add
xchg
pusha
insl
push
mov
divb
cmpsl
pop
jl
dec
test
test
and
fsub
dec
stc
imull
jnp
mov
out
pop
dec
inc
sub
mov
fcomps
addr16
mov
inc
cmp
repz
inc
sarl
xchg
std
or
or
jnp
jbe
dec
push
adc
mov
rclb
push
mov
jl
mov
in
popf
mov
jle
xorl
push
fnstcw
pop
adc
sbb
sarl
xchg
xor
pop
dec
adc
roll
cmp
repz
dec
dec
aaa
mov
fcmovnu
fsubr
mov
imul
inc
mov
hlt
pop
cwtl
add
out
ja
push
addl
out
hlt
or
int
cmp
fsubs
adc
mov
cs
aaa
xchg
lcall
pushf
rol
lock
insl
cmc
dec
popa
push
sbb
ds
jns
mov
jmp
stc
rcll
mov
inc
out
rcrb
test
call
pop
push
js
mov
mov
mov
or
add
inc
mov
cmp
addl
add
int3
cli
jae
jmp
outsb
in
jmp
jo
mov
xbegin
mov
or
lret
cmp
mov
cli
sbb
pop
adc
lea
xor
cmp
mov
xchg
fidivs
add
or
es
test
fistl
scas
xor
lods
add
mov
or
lods
into
jecxz
add
out
fcomps
mov
inc
sub
stc
or
mov
inc
adc
and
rcl
sbb
push
push
xor
and
call
inc
cmp
adc
or
mov
adc
fsubl
bound
jbe
push
cmp
fistl
and
int3
mov
ljmp
mov
or
xchg
std
lea
iret
adc
jb
jne
inc
push
sbb
fnsave
pop
arpl
jno
sbb
shl
stc
cs
pop
pop
les
push
out
adc
pushl
cld
repz
add
or
sbbl
scas
pop
stc
or
stos
sub
cltd
xchg
out
xor
jp
fistps
leave
add
pop
jb
imul
shll
lret
fs
nop
mov
cmpps
outsl
das
jbe
or
loop
xchg
js
stos
push
sbb
ror
aad
jno
rcr
sub
cli
mov
lret
fwait
mov
sbb
and
pop
stc
testl
int3
jbe
dec
test
ffree
add
mov
or
and
loop
push
mov
pop
fmulp
das
and
and
inc
pop
stos
sub
and
jge
xchg
daa
mov
add
call
add
jp
cmp
lods
sbb
or
pop
adc
pop
adc
aad
cmp
pop
lcall
int
outsl
sub
shrb
ret
mov
mov
movl
jmp
in
adc
arpl
or
add
push
cmpsb
je
insl
ss
pop
enter
ja
inc
jb
dec
xchg
negb
mov
les
out
mov
inc
jl
lock
push
int3
scas
sub
into
add
mov
testl
enter
shll
js
aad
loopne
divl
dec
sub
sub
test
cmp
and
testl
ss
xor
xor
jbe
jmp
div
mov
mov
fbld
xorl
cmp
and
sbb
outsl
sbb
and
addb
mov
push
push
mov
fimuls
cmp
mov
and
orb
test
es
mov
fwait
pop
mov
inc
xlat
push
or
arpl
lds
mov
sahf
dec
fstps
aad
dec
mov
push
pop
or
xchg
fidivl
fldt
ret
dec
insb
and
fdivrl
push
dec
cmp
frstpm(287
inc
int
sahf
fs
sahf
out
pusha
pop
leave
movsb
cwtl
jb
cmp
push
bound
movsl
decb
fwait
pop
insb
and
push
leave
xlat
push
push
xchg
in
scas
dec
sub
icebp
lods
add
jg
scas
fmulp
es
cld
into
xor
mov
sti
popf
xchg
scas
imul
and
mov
ja
xchg
add
push
and
sahf
xor
push
mov
stc
xchg
fwait
sub
dec
push
in
pop
mov
dec
xchg
inc
add
in
mov
cs
icebp
xor
scas
mov
imul
test
pop
cmc
lods
mov
test
arpl
sbb
adc
mov
pop
inc
pop
dec
lods
cwtl
dec
and
pop
andl
aaa
pop
mov
mov
sbb
sahf
bound
addr16
dec
fidivl
sub
cmpsl
aaa
outsl
arpl
or
clc
call
adc
jne
enter
daa
les
sub
push
xchg
add
lods
sbb
inc
or
test
sub
pop
or
mov
aad
sub
inc
rclb
xor
push
push
add
shlb
push
addb
mov
fdivl
insl
int
int
cmp
cwtl
bound
xorl
sub
popf
dec
shrb
ss
imul
adc
mov
xchg
xchg
jle
cmp
pop
in
fstps
rorb
jle
lret
sbb
add
and
xchg
pushf
movsl
sarb
lahf
lods
aaa
xchg
test
shll
pop
sbb
mov
in
pop
incl
xor
fimuls
dec
subb
mov
sub
insl
imul
into
lods
mov
ja
and
stos
cmpsb
cmp
sbb
ficoms
movsl
lahf
adc
cmp
lock
mov
adc
loopne
jp
sti
adc
rcl
in
insb
mov
push
add
ss
xchg
lahf
lahf
push
or
call
sbb
popa
sub
cmp
sub
cmp
rcrl
jle
dec
xor
pop
sbb
mov
repnz
scas
jne
ds
push
mov
out
adc
pop
sbb
push
pop
fldl
es
jmp
ficoms
movsl
adc
inc
setnp
loopne
stos
call
xchg
mov
add
or
push
ljmp
jne
push
cmpsb
mov
xchg
popa
lahf
xchg
xor
insl
jp
pop
push
sbb
adc
push
pusha
mov
shl
jno
jne
movsb
lds
inc
pop
fs
mov
inc
sbb
or
sbb
pop
aaa
cmp
jge
xor
loop
sub
push
mov
or
xor
push
scas
popf
outsb
mov
in
popf
cmpb
mov
cmc
add
mov
repz
insb
icebp
or
outsl
aam
mov
imul
mov
jns
cmovge
pop
pop
test
lcall
pop
push
mov
jnp
or
lret
jb
pop
and
mov
push
xor
mov
jg
mov
rcr
pop
int3
aaa
movsb
push
enter
push
shrl
jo
jle
fmuls
aas
pop
jne
das
push
cmp
xchg
cmpsl
fcompl
enter
js
mov
sbb
xor
hlt
mov
pop
sub
insb
das
xchg
cld
popf
pop
pusha
imul
push
mov
mov
sbbl
jp
stc
stos
and
hlt
adc
pop
jmp
sti
lahf
roll
mov
scas
cwtl
outsl
ljmp
jge
in
push
cwtl
add
ja
shl
mov
rcrb
and
testl
mov
mov
fucom
imul
and
push
pop
jo
inc
jge
xchg
pop
inc
call
outsl
xchg
dec
jae
rorl
call
sub
sahf
ja
lea
mov
sub
mov
xchg
int
adc
mov
cld
lcall
js
jno
clc
add
sar
in
push
pop
ret
jne
mov
sbb
stos
jle
jno
lea
out
js
sbb
sbb
fidivs
push
dec
ds
repnz
gs
loopne
pop
push
adc
shrl
ret
pop
inc
shrb
out
aad
repz
subb
add
mov
cmpsb
js
nop
jns
je
sub
dec
pop
and
cmpsl
sub
out
cmp
arpl
jle
mov
data16
dec
clc
lret
push
xchg
jno
stc
xchg
cli
sub
jbe
xorl
push
mov
lods
adc
sti
xchg
ret
add
push
cmp
sbb
imul
push
and
dec
mov
xchg
lcall
cs
repz
mov
inc
js
add
jp
mov
lea
popf
sub
fisubrs
or
test
dec
arpl
cmp
xchg
push
xor
movb
fnsave
inc
mov
cs
lahf
pop
adc
shlb
iret
clc
jne
mov
add
test
push
pop
pop
iret
popf
mov
cwtl
scas
mov
pop
mov
or
lods
jne
cmpsl
sbb
pop
fidivrs
aaa
lret
inc
rorb
cmpsb
rcll
pop
inc
adc
imul
push
inc
mov
sub
xchg
inc
inc
mov
jp
sub
nop
inc
jae
test
xor
jge
xor
mov
jg
les
jge
sbb
adc
pop
mov
add
in
and
jnp
and
je
mov
cmpsb
lods
imul
and
nop
int
in
jnp
fld
das
hlt
mov
inc
daa
push
jno
dec
or
stc
ret
movb
pop
out
pop
pop
int3
loopne
lods
add
std
adc
fisttpll
lea
loope
loopne
pop
imul
jbe
sti
daa
repz
cmp
pop
mov
push
and
test
dec
loop
xor
mov
jb
mov
sarl
dec
shlb
or
aas
mov
fldl
test
xchg
mov
loope
scas
add
sub
into
gs
ljmp
jne
xor
xchg
xor
jns
jb
mov
inc
xor
mov
test
ss
xor
lahf
xchg
jno
ds
add
pop
cmp
jmp
mov
shl
add
cld
roll
lods
fnstcw
pop
aaa
fdivs
scas
out
pushw
jbe
xorb
fnstcw
nop
add
call
jp
lock
sub
jmp
dec
mov
xchg
mov
cltd
call
jg
pop
and
ds
in
cmp
lock
add
lock
mov
jnp
aas
jge
inc
jns
gs
lods
jnp
repnz
stos
xchg
inc
movl
sbb
cmpl
pushf
aam
leave
sub
shlb
movsl
lret
bound
cmp
jge
jge
inc
mov
mov
cli
adc
or
into
sbb
mov
push
jg
cli
cwtl
cmp
movsl
jecxz
mov
ficompl
dec
nop
cmc
xchg
pop
xor
pop
xor
pop
lret
lcall
or
movsl
xlat
into
sub
aas
inc
nop
inc
cmp
mov
mov
rcrb
sub
sbb
loop
in
mov
fs
jnp
sbb
or
rcrl
dec
add
sub
mul
jb
loopne
shr
dec
mov
push
mov
mov
test
inc
add
xchg
nop
incl
or
or
xchg
push
in
insb
pop
fsincos
dec
push
imul
mov
stos
ja
sbb
jne
cmp
repz
push
push
js
pop
arpl
fisubl
sub
ret
aam
mov
sahf
lea
inc
cli
push
sub
fldl
adc
hlt
lret
shll
int
mov
negb
psubb
gs
arpl
mov
movzwl
push
push
popf
ljmp
repnz
dec
xor
mov
imul
out
inc
adcb
fwait
movsb
movsb
xchg
jb
bound
or
mov
add
popa
pop
jp
pop
and
adc
adc
rorl
inc
mov
push
icebp
xor
loop
dec
push
inc
addl
aam
xorb
mov
movsl
popa
jmp
lods
std
push
std
adc
shrb
mov
lcall
lock
dec
outsl
cmp
jp
fs
dec
push
xor
inc
test
push
xor
jo
push
addl
test
fwait
jge
pop
leave
mov
add
sahf
in
ss
popf
mov
and
stos
push
jb
imul
stc
sarb
add
sbb
data16
subb
dec
roll
cmpsb
or
push
mov
push
xor
fistpll
cmpsl
pop
cmp
das
jno
sub
popf
scas
push
or
pop
cltd
fwait
xchg
rcrl
lret
sub
and
mov
xor
out
cltd
xlat
mov
jmp
mov
or
adc
jb
test
inc
or
mov
xor
out
mov
sbb
mov
cmp
xor
into
aas
nop
add
jmp
js
imul
pusha
sub
mov
adc
jne
lret
testb
pop
jno
mov
cmc
dec
xchg
jne
mov
dec
rcrl
mov
call
dec
and
add
mov
cld
jp
fidivrl
xor
mov
cli
data16
inc
fabs
xchg
sti
out
jb
test
cli
imul
loopne
add
std
cs
pop
mov
aaa
fsubrl
data16
adc
mov
pop
ficoms
mov
and
lods
inc
dec
adc
jo
iret
mov
xor
es
repz
inc
xor
fwait
punpckhwd
sub
adc
daa
dec
mov
or
mov
pop
out
stc
cmp
sti
in
add
jno
rorb
insl
nop
adcb
insb
shlb
je
imul
jle
add
mov
cmp
mov
loopne,pn
cmp
repnz
push
repz
out
iret
clc
xorb
sub
xor
adc
ljmp
pop
mov
dec
dec
jl
repz
or
mov
xchg
adc
pop
or
inc
dec
mov
and
pop
mov
push
dec
push
in
xor
mov
push
dec
mov
call
imul
and
add
aad
xor
dec
test
push
loope
ror
mov
ss
sar
xor
dec
cld
out
pushf
mov
inc
fisttps
push
stos
jbe
sub
daa
aam
fisttpl
iret
sbb
mov
rol
xchg
call
lock
jle
jmp
stos
mov
push
jmp
enter
inc
scas
out
ljmp
jbe
or
mov
xor
fldl
adc
mov
pop
add
ret
or
data16
add
dec
je
dec
sbb
outsb
ret
daa
adc
stos
push
push
insb
xchg
xor
js
test
nop
jp
enter
lods
cli
bnd
mov
incl
cwtl
add
roll
sbb
cmc
aas
sub
sub
aaa
jno
adc
fdivs
push
ja
addb
sub
dec
cmp
test
cli
stos
push
andb
shll
mov
bound
pop
jo
imul
xlat
push
mov
loope
jo
fnstsw
repz
cs
lret
in
dec
bound
and
mov
adcl
lds
sub
mov
and
pop
es
jl
loop
repnz
hlt
rolb
imul
lret
inc
rcrb
loope
fld
or
xchg
mov
sub
sbb
adc
shrb
pop
stc
xchg
lds
push
inc
int
mov
pop
dec
inc
dec
stos
stc
scas
dec
dec
loopne
loope
inc
or
pop
lcall
push
xor
sub
dec
mov
shlb
adc
fwait
xor
pop
les
jae
inc
mov
loope
enter
dec
push
aad
jno
mov
and
cli
mov
push
adc
jp
aaa
mov
or
shll
mov
sub
push
das
or
mov
lock
insl
stos
ficompl
fidivl
pop
or
aaa
lcall
dec
sub
sbb
adc
popa
push
adc
out
mov
outsb
or
pop
sbb
jp
scas
sub
push
push
rclb
mov
je
dec
divb
pop
xor
arpl
in
inc
out
lds
cwtl
adc
sbb
or
movsl
push
sub
add
fldcw
xchg
dec
xlat
cmp
lret
mov
add
mov
jle
push
insl
mov
popf
dec
push
xorb
sbbl
adc
ja
push
shll
mov
rcrl
je
add
lret
inc
aam
adc
jg
mov
dec
ret
mov
pusha
mov
stc
mov
mov
or
pop
mov
pop
addr16
pop
mov
cvtps2pd
jns
mov
jl
jbe
xchg
scas
xor
loop
out
sub
mov
cld
pushl
pop
mov
rcrb
lahf
mov
sub
push
adc
ljmp
inc
cwtl
pop
fsubrs
lcall
shrb
mov
mov
loop
jg
cmp
pop
aaa
pushf
pop
sahf
in
repnz
sub
mov
jl
sbb
push
sbb
movsl
inc
in
mov
push
test
aam
mov
push
and
jecxz
cmc
dec
push
cltd
inc
fcmove
ss
insb
pop
jo
cmpsl
scas
rcr
dec
and
sarb
or
inc
stos
addb
adcl
pop
jno
jmp
dec
hlt
dec
leave
mov
cmp
fmulp
push
aam
data16
jne
cmp
enter
sahf
out
adc
xchg
pushf
lcall
cmp
shlb
cmc
stos
les
push
sbb
jge
cmp
lds
ds
fists
fnstcw
inc
mov
push
pop
pop
add
cmp
pop
sub
cmp
jg
addr16
inc
inc
movsl
sti
pop
shll
jmp
mov
and
push
xchg
jg
or
testb
fld
mov
addr16
adc
movb
and
ja
out
pusha
adc
pop
imul
sbb
aad
cmpl
push
mov
ret
data16
mov
jecxz
jnp
adc
xorb
int3
rorb
xchg
in
rorl
inc
sub
or
cmc
popf
pop
add
add
in
mov
test
daa
adc
out
stos
xor
jmp
mov
or
jp
jns,pn
das
or
mov
mov
aas
pop
in
pop
and
cli
xchg
popf
shlb
xchg
out
clc
lock
dec
cmp
pop
stos
mov
adc
add
into
test
scas
pop
dec
push
mov
adc
adc
or
jno
cmc
hlt
addr16
data16
test
xchg
popf
and
add
mov
add
js
add
dec
add
ljmp
mov
sbb
popa
loope
xchg
in
jmp
mov
in
mov
aam
add
sbb
push
dec
push
jp
xchg
mov
lock
shrl
lret
inc
cmp
outsl
js
adc
and
sbb
das
push
cwtl
sbb
js
sub
mov
sbb
fwait
in
xor
gs
cmp
in
andl
mov
outsb
sub
mov
testb
and
xlat
adc
cltd
stos
stos
add
adc
enter
inc
or
mov
loope
cmp
sbbl
es
xor
shlb
inc
xor
cmp
cmp
push
ret
cs
mov
mov
shrb
xchg
sbb
and
inc
ss
in
or
mov
jbe
lea
mov
dec
mov
mov
loope
movsl
lcall
into
repnz
jns
pusha
out
push
loope
cwtl
jne
xor
rol
jmp
bound
cmp
xchg
or
negl
arpl
mov
dec
cmpb
iret
inc
and
ss
test
arpl
xchg
pop
aaa
and
sub
rol
dec
popa
xor
aad
cwtl
stos
mov
inc
aad
outsb
js
xchg
shrl
addr16
xchg
cs
jne
mov
jno
push
ljmp
ds
sarb
sbb
inc
jmp
int3
idivb
adc
adc
sub
and
adc
outsl
adc
pop
ja
lret
enter
cmp
pushf
push
fmuls
jp,pt
out
iret
or
sbb
call
xlat
cmp
mov
xchg
imul
jge
fmull
inc
stos
jg
insl
es
lahf
sub
xchg
mov
sbb
mov
fisubrl
imul
push
sbb
js
adc
cmpb
jbe
iret
dec
shlb
cmp
mov
popf
fs
insb
fidivs
fistpll
fsts
ss
ja
outsl
jb
jmp
mov
xchg
xchg
jg
je
or
mov
outsl
or
inc
pop
sub
bound
adc
test
jns
mov
mov
aaa
or
mov
daa
cmc
into
fstpt
adc
jge
mov
in
cmc
lcall
xor
cmpsb
in
cli
xor
xor
sbb
push
aad
out
mov
inc
jg
loop
lods
sbb
nop
pop
negb
xlat
ljmp
stc
loop
pushf
jb
jl
int
jbe
stos
mov
ret
fcomps
mov
out
sti
repz
jecxz
adc
mov
test
lcall
mov
divb
or
loop
pop
adc
mov
adc
call
daa
rorb
cmpsb
add
or
ret
clc
pop
sub
mov
jb
out
and
add
sub
mov
in
or
int3
in
lods
test
imul
jb
adc
test
pusha
cmp
inc
dec
cld
mov
push
dec
test
orl
cmp
mov
and
push
les
or
das
lods
mov
cmp
sarb
xchg
bound
cs
jns
pop
mov
or
inc
lcall
jbe
jne
clc
or
loop
scas
xchg
int3
fnstenv
cmpsb
insl
and
testb
add
mov
ret
cmp
push
cmp
icebp
std
xchg
icebp
ds
outsl
fucomi
or
push
movsb
inc
ss
sbb
sub
rcl
out
addb
sbb
loop
jb
das
mov
repnz
lods
outsb
mov
dec
xlat
data16
sbb
test
xchg
test
stos
jg
cmpl
lret
call
jg
fstpl
cmp
jno
mov
dec
pop
sets
jg
pop
mov
dec
adc
hlt
lods
ljmp
mov
and
pop
test
cmpsb
repnz
mov
pop
sbb
jo
fs
popa
xchg
lea
cmc
sbb
addr16
jmp
cmp
mov
mov
daa
xor
aad
fwait
icebp
mov
call
jno
and
addr16
sbb
sti
jne
dec
std
fwait
adcl
mov
test
mov
mov
jo
mov
icebp
dec
push
outsb
aad
nop
fs
sarb
push
dec
loope
mov
jo
roll
call
lcall
mov
test
jp
and
jmp
iret
aas
push
jmp
in
jae
js
negb
mov
in
gs
nop
lds
push
dec
mov
cmp
iret
insb
out
push
jle
xor
sub
hlt
jo
mov
xchg
mov
aaa
ror
mov
and
dec
lock
bound
repz
cld
nop
cmc
outsb
ljmp
idivl
lods
mov
je
rcrb
stos
xchg
test
shrl
test
inc
jb
mov
fildll
sahf
loop
xorl
rorl
pop
mov
fimuls
mov
inc
jo
fsubs
xchg
xor
fldcw
test
lcall
xor
inc
mov
int
int
out
jecxz
push
mov
call
dec
ljmp
inc
sub
pop
jg
adc
lea
mov
xchg
imul
loopne
sub
arpl
pop
scas
cltd
lret
sub
jmp
faddp
sbb
psubsw
outsb
int3
push
sbbb
in
add
int3
xchg
inc
ja
xlat
out
pop
dec
ds
repnz
and
add
loope
fisttpll
jp
pop
jg
icebp
push
cli
mov
mov
mov
pop
shrl
jno
push
pop
cs
in
jp
mov
mov
pop
icebp
inc
icebp
and
add
mov
pop
mov
pop
sbb
cmpsl
pop
mov
adc
push
aaa
lods
add
bound
push
and
mov
mov
and
add
mov
and
xchg
pop
cmp
insl
es
lcall
push
jge
jl
iret
mov
in
mov
inc
sbb
pop
nop
cltd
imul
ja
test
cli
int3
adc
mov
sbb
jns
cmp
scas
mov
or
shlb
call
add
and
stos
outsl
cmp
jmp
icebp
mov
sar
lret
mov
or
cs
das
loopne
fmull
xchg
iret
leave
pop
xchg
add
into
xor
cwtl
and
lods
outsb
popa
or
sar
mov
scas
cltd
iret
sbb
and
mov
mov
repz
or
push
dec
in
jo
mov
inc
pop
adc
in
mov
xchg
pop
les
sbb
jns
sub
shlb
outsb
in
cmc
sub
cmp
arpl
idivb
out
mov
sahf
shl
xchg
sub
pop
sahf
sub
fisttpll
aad
add
test
dec
loope
and
push
sub
out
cmp
aaa
rcl
xchg
ror
sahf
adc
in
add
lea
scas
or
and
popf
in
mov
sbb
int3
ds
bnd
push
aas
jge
ss
in
cmp
out
inc
aad
xchg
arpl
mov
dec
push
inc
popf
ret
sub
shll
je
xchg
sti
and
mov
inc
sub
aad
fwait
test
mov
call
loope
stos
jecxz
mov
sub
mov
push
add
lock
dec
and
std
popl
jno
stos
popa
cmp
aam
push
out
mov
lds
int
mov
cli
test
mov
add
mov
adc
nop
jae
das
call
test
pop
ja
push
pop
out
pusha
in
dec
mov
mov
in
ljmp
idiv
sti
jne
push
jnp
add
mov
jae
push
inc
dec
dec
mov
jg
fidivrs
add
into
push
push
cltd
int
jo
sti
pop
mov
lcall
add
dec
mov
adc
subb
cmp
imul
dec
and
cmp
ret
jns
mov
push
mov
data16
data16
and
outsb
mull
test
cmp
mov
sbb
xor
notb
sbb
shll
sarb
or
and
or
clc
mov
mov
dec
xchg
cs
xchg
data16
cli
mov
sbbl
mov
enter
jge
sti
ljmp
aad
pop
iret
and
faddp
pop
pop
sub
add
mov
push
push
push
stos
jb
push
push
jne
sbb
adc
mov
lock
outsb
lods
idiv
sbb
cmc
imul
je
pop
or
ds
mov
cmpb
adc
or
mov
sbb
inc
cld
jae
insb
dec
push
in
and
scas
xchg
inc
add
xor
loop
lret
push
subb
inc
mov
lret
push
icebp
ret
dec
sti
mov
inc
insl
scas
fstpt
outsl
neg
sub
mov
dec
xchg
push
xchg
cmpsb
inc
sub
and
add
dec
pop
fs
adcl
aad
ret
dec
lahf
mov
or
loopne
mov
mov
mov
dec
popa
pop
pop
mov
xor
int
fdivr
sub
je
jno
push
xchg
stc
push
std
inc
mov
imul
leave
xchg
int3
rcll
push
sbb
nop
pop
mov
jbe
ret
fs
lods
movsl
sub
push
scas
dec
xor
outsb
mov
inc
out
and
mov
add
jecxz
push
or
xor
inc
pop
adc
jle
lret
and
lret
loop
mov
and
adc
inc
xchg
loop
pop
and
xor
mov
cmpsb
in
and
clc
ds
sub
imul
dec
fs
mov
pop
mov
js
and
arpl
lea
ljmp
aas
fistl
xchg
and
lcall
shlb
rcrb
shlb
jne
cmp
and
orb
adc
filds
or
push
cmpsb
or
push
daa
dec
in
out
es
enter
lods
in
push
xlat
les
aam
loop
xor
jl
shlb
mov
inc
hlt
jo
cmc
stos
dec
invd
rorb
cltd
or
mov
mov
cmp
pop
xor
repnz
or
pop
jno
test
ljmp
xchg
lods
fnstenv
add
call
fwait
cmp
or
testl
ret
pop
jecxz
pop
mov
in
cmp
pop
movsl
xchg
rorb
negb
shll
pop
adc
out
movsl
ret
popf
sub
push
jae
xchg
jle
test
cld
sarl
cli
mov
pushf
into
mov
adc
lahf
push
int3
ret
mov
xor
pop
pop
ret
inc
popf
mov
gs
mov
ret
xchg
add
jge
push
fisubl
add
inc
lock
jns
aaa
push
dec
jne
mov
jae
cltd
adc
sub
xor
or
and
xlat
and
jmp
js
xor
and
aaa
mov
xor
xor
les
mov
xlat
sbb
cmc
cmp
inc
icebp
mov
rcll
cmp
pop
adc
inc
xor
add
jge
inc
push
inc
cmp
test
cmpl
push
int
mov
fldcw
in
enter
jg
repnz
jge
gs
xchg
lret
adc
xchg
mov
xor
inc
sub
mov
rolb
adc
xchg
clc
int
pusha
shlb
inc
fisttpll
pop
mov
stos
or
jge
les
je
in
ret
ret
mov
popa
lfs
mov
add
hlt
cwtl
lret
mov
repnz
daa
and
mulb
mov
imul
ds
cmp
clc
jmp
and
inc
xchg
out
xor
xchg
test
clc
push
sbb
sbb
jge
cmp
pop
fisttpl
iret
repnz
outsb
out
push
or
sti
or
mov
insb
dec
call
cwtl
cmp
aam
pop
movsb
mov
dec
cmpl
out
sub
inc
or
into
cmpsb
mov
mov
repz
fcomps
sahf
or
mov
pop
das
dec
or
pop
aam
lret
jecxz
push
push
and
xor
jae
imul
dec
lea
cwtl
mov
sbb
test
fisttpl
sub
aas
jns
sti
xor
insl
ds
jle
bound
insl
pop
mov
cltd
sti
dec
imul
outsl
xor
sub
pop
jo
and
mov
lahf
psubsb
sbb
popf
adc
dec
int
mov
or
in
sbb
jnp
sahf
repnz
mov
lahf
dec
adc
jbe
pop
aam
xchg
xor
mov
mov
mov
decb
add
int
xor
aaa
dec
rorb
out
cmp
mov
pop
xor
sbb
sar
jae
mov
scas
push
stos
iret
jno
fcmovb
inc
das
jmp
mov
scas
push
andb
inc
cmp
je
sbb
es
push
in
ret
dec
call
jle
fs
mov
outsb
or
cld
clc
js
mov
jno
data16
outsb
jg
push
fnstcw
pop
dec
inc
aas
cmp
stos
les
cmp
jbe
jno
pop
int3
adc
xchg
std
loop
sbb
lcall
xchg
out
mov
cli
mov
cmp
std
inc
xorb
std
pop
mov
push
jg
mov
dec
or
loop
push
add
inc
cltd
in
repnz
dec
aas
and
pop
hlt
xor
and
xor
jg
mov
divl
mov
jns
roll
xchg
inc
mov
sbb
sub
ja
lock
js
xchg
mov
xlat
mov
or
dec
sbb
outsb
xchg
xor
gs
inc
cmpsb
outsl
hlt
pop
icebp
roll
clc
testb
stc
pop
adc
cli
add
xor
movsb
insl
stc
aas
out
cmp
xchg
or
xchg
lods
mov
jns
pop
je
xchg
inc
jno
add
and
addr16
xor
jl
jno
pop
sub
mov
push
or
xor
jno
rcrl
sub
cli
rolb
push
outsb
dec
mov
shll
test
bound
xchg
cli
leave
jb
imul
inc
pop
fwait
add
pop
and
imul
push
cs
push
mov
mov
push
pop
mov
mov
cmpsb
test
xor
push
es
loopne
shrl
inc
imul
cltd
int
or
pop
test
es
aaa
mov
subl
xchg
ss
nop
into
and
sub
cld
aaa
sar
iret
mov
loopne
addr16
xor
je
jge
sub
rorb
mov
xor
and
jp
cmpsl
or
lods
jae
sbb
test
ret
xchg
lret
jmp
xchg
xor
sarl
jp
cmc
inc
push
call
shlb
push
jo
jb
cmp
cld
push
dec
in
sub
ret
test
and
out
cld
push
bound
sub
push
sub
sbb
xchg
inc
test
adc
movsl
in
and
xchg
ja
mov
inc
sti
jno
mov
inc
je
sbb
xchg
push
dec
xchg
mov
test
int
push
push
add
int3
fcmovu
ret
imul
pop
lods
pop
enter
pop
sarl
shrl
or
faddl
mov
push
lcall
fbld
lret
jp
movsl
mov
pop
and
test
mov
inc
fsubl
mov
xor
stos
fisubrs
ret
rcrl
push
push
sub
stos
movsl
es
xor
mov
rorl
and
xchg
cs
jmp
lcall
push
mov
into
movaps
int3
icebp
xchg
push
sbb
pop
mov
xchg
xorb
popf
testl
or
push
xor
call
inc
ss
sub
mov
je
addr16
xor
es
xor
int
call
lahf
shr
sub
hlt
xor
mov
je
add
fistpl
fsub
pop
cwtl
stc
or
aas
cmp
adc
rcrl
rol
dec
out
sub
lock
aaa
add
std
fiaddl
add
dec
wrmsr
ret
call
dec
and
cmpsb
popf
insb
repz
mov
repnz
je
inc
clc
imul
push
jne
lahf
rcrb
repz
es
mov
movsb
mov
mov
xorl
dec
dec
outsb
ds
add
rorl
xor
lods
xor
loope
xor
push
sarb
jmp
xchg
push
movsl
jecxz
pop
sbb
fsubr
inc
adc
leave
insb
or
shrb
and
mov
bound
fs
xchg
lcall
mov
fisttps
mov
sub
push
adc
cmp
insb
mov
test
mov
and
fcompl
dec
cld
mov
pop
test
mov
inc
inc
lret
xor
mov
into
mov
pop
jne
sbb
push
incb
cld
aad
loope
lea
inc
push
pop
cmp
jns
sbb
in
lret
jo
rclb
das
or
or
mov
jecxz
hlt
push
fldcw
faddl
into
loope
mov
pop
xor
int3
nop
out
dec
mov
push
xchg
jbe
inc
jns
push
mov
or
dec
cld
and
out
lods
pop
shlb
push
jl
push
js
add
cltd
jnp
add
jle
xchg
add
or
bound
aaa
mov
ret
in
insb
ja
inc
lahf
push
mov
fcomps
mov
cmpsl
sbb
and
inc
rclb
lods
sbb
into
pop
jl
cmp
mov
cmc
bound
in
cs
or
sti
cltd
mov
push
sbb
je
stc
adc
xchg
pop
imul
ss
aas
mov
sub
sbb
or
jns
js
jno
inc
adc
stos
fstpl
cmpl
shrl
mov
pop
lock
xchg
iret
xadd
daa
lret
gs
dec
roll
insb
sbb
xchg
orl
jmp
dec
cld
into
pop
push
sti
dec
es
movsl
push
xchg
ja
in
or
das
in
lods
shrl
xor
jl
jb
and
icebp
inc
adc
cmp
cmp
inc
push
sbb
push
xchg
mov
sub
fidivs
test
scas
dec
into
fwait
into
adc
dec
pop
cmpsl
test
adc
push
cmc
adc
in
cmpsl
nop
cwtl
adc
loop
mov
pushf
and
outsb
cld
ja
lahf
pop
jbe
xor
mov
inc
sahf
cmp
add
sub
cs
inc
adc
sbb
aas
shlb
jle
xor
pop
pop
loope
mov
adc
inc
cmp
vsubps
lret
mov
ss
or
jmp
push
addr16
adcl
dec
and
pop
pop
not
cld
xchg
adc
xlat
out
repnz
xlat
fwait
cltd
inc
pusha
add
scas
cmp
or
dec
push
sti
inc
scas
mov
daa
push
insb
rclb
outsl
test
jle
dec
mov
ffree
or
cli
imul
cltd
in
lcall
or
mov
loope
mov
scas
xchg
outsb
cmp
rcrb
pop
jmp
ret
jb
jge
and
into
or
sbb
jmp
cli
sub
movsl
lods
pushf
iret
mov
insl
inc
push
sahf
ja
mov
push
add
aad
mov
imul
ljmp
loope
xchg
or
mov
jecxz
or
rcrb
xchg
push
sub
lcall
pop
jmp
sub
out
popf
push
sarl
sub
dec
dec
mov
inc
mov
xchg
add
lods
and
mov
mov
dec
ss
push
mov
mov
jno
cs
xchg
jnp
cld
sbb
push
jo
fstpl
jle
mov
rorb
pop
pop
mov
gs
stc
pusha
out
pusha
add
jp
sahf
popl
mov
out
pop
popa
xchg
mov
repz
mov
imul
arpl
sbb
jo
popw
hlt
mov
jp
jnp
rcl
outsl
xor
and
hlt
in
mov
lds
mov
mov
aas
mov
mov
mov
or
fwait
test
fsubrl
sub
xor
adc
test
mov
popf
pop
cmpsl
push
or
pushf
mov
mov
or
imul
pop
mov
movsb
jae
dec
dec
fbstp
mov
cltd
or
lods
roll
jae
in
decl
xchg
jmp
push
adc
repnz
xlat
data16
and
mov
std
mov
dec
out
xchg
xor
sarb
push
loope
dec
push
xor
pop
dec
mov
pop
mov
pop
cltd
pop
aad
repnz
or
fcompl
dec
sub
cs
call
or
rcr
add
aas
fcomps
mov
jae
outsl
mulb
jb
cli
inc
movzbl
pop
dec
leave
in
sub
jge
jmp
and
clc
xorb
fwait
addr16
cmpl
faddl
xchg
adc
push
mov
ficompl
and
xor
shl
hlt
stos
outsl
jo
cmp
cwtl
fwait
scas
fistl
sti
popl
push
mulb
push
hlt
xchg
subps
incb
sar
in
mov
sbb
cmp
add
inc
repz
lahf
call
add
stc
sub
idivl
pop
std
jp
mov
mov
mov
jo
shlb
pop
jge
mov
xor
in
pop
adc
popa
xor
insl
jmp
jno
jp
loopne
aam
cld
in
mov
cmp
or
or
mov
stos
data16
pop
push
out
addr16
mov
jb
mov
test
mov
stos
inc
dec
sub
and
and
sbb
repz
sbb
pop
repnz
sbb
outsl
mov
or
outsb
bnd
pusha
xchg
sub
sarb
aad
adc
loopne
xor
repnz
push
cmpsb
add
mov
dec
mov
test
jg
lret
fptan
psubb
dec
pop
xor
je
enter
loop
jl
hlt
icebp
xchg
insl
shrb
jne
xor
pop
xchg
jae
out
dec
xchg
dec
sub
in
test
xorb
sub
cmpsb
sub
sbb
pushf
sbb
flds
pop
fwait
loope
fwait
mov
pop
frstor
call
pusha
xchg
jge
subl
adc
hlt
pop
and
mov
enter
les
mov
mov
aam
xchg
ds
mov
dec
hlt
movsb
xor
dec
and
out
jl
fadds
fildll
pop
sbb
mov
or
ficompl
push
mov
in
cltd
lahf
out
cli
scas
sbb
orl
pop
mov
xor
mov
pushl
idiv
adc
shlb
cld
jae
xorb
xchg
push
pushf
stos
movsb
es
push
cwtl
or
test
push
test
fbstp
sbb
insb
shrl
or
adc
ss
or
mov
push
mov
out
dec
imul
jge
insl
and
xchg
jnp
sar
mov
jecxz
mov
push
pop
push
fidivs
mov
inc
xchg
inc
loope
xchg
push
xor
shlb
pop
or
xchg
pop
out
xchg
loop
pop
cmp
xor
mov
pop
in
jae
add
aam
roll
addr16
push
call
ds
and
lods
push
cld
fdivl
in
adc
lods
call
rep
cmp
rcl
pop
popf
daa
mov
popf
das
fs
aam
scas
int3
or
xchg
and
xchg
add
int3
fmull
inc
mov
mov
jae
hlt
mov
jg
jmp
mov
outsl
test
bound
cmp
pop
insl
das
or
jmp
test
dec
mov
lret
ds
sbb
pop
movsb
sub
outsl
pop
or
cmp
imul
sbb
insb
test
sub
scas
adc
push
xor
testb
pushf
jecxz
push
push
pusha
cmp
push
xchg
repz
jmp
sub
add
movnti
jns
mov
fs
cltd
sahf
dec
pop
jno
fwait
ljmp
out
or
data16
and
dec
add
or
push
subl
mov
sahf
inc
xchg
int
in
mov
fsubl
imul
mov
and
loop
push
lods
and
pop
out
lret
sbb
xlat
rcl
test
cmp
push
rolb
sbb
insl
pop
push
adc
or
mov
nop
pop
loopnew
push
pushf
test
mov
ret
lock
ljmp
addr16
inc
je
cmc
mov
stos
push
repnz
ss
lcall
mov
sbb
cmp
into
fisubrl
bound
adc
mov
cs
push
pop
cmp
in
cmpsb
adc
nop
stos
lods
ret
movl
sahf
daa
pop
mov
mov
inc
sti
scas
icebp
cmpsl
xor
mov
std
xchg
cmp
lds
pop
or
add
rol
shl
push
bound
gs
insb
xor
mov
jb
sbb
mov
mov
jmp
shr
fldcw
sbb
aad
xor
ja
stos
mov
cmp
push
dec
insb
cltd
sbbl
out
xor
lock
lock
pushf
mov
push
mov
aam
xchg
jno
sub
sub
loop
push
cs
cs
ret
pop
test
push
out
push
push
cltd
repz
push
xchg
movsl
push
mov
std
push
cld
mov
imul
and
sub
pushf
fcom
fidivrl
cmc
stc
pop
jae
sti
pop
fwait
hlt
mov
mov
mov
aaa
push
jmp
push
pushl
mov
andw
test
leave
xor
pop
push
scas
aad
inc
pop
inc
lea
mov
and
xor
in
mov
repz
add
arpl
add
test
shl
pushf
push
adc
sbb
sub
enter
inc
sub
adc
imul
shll
addr16
sub
je
and
cmp
in
mov
xchg
jmp
enter
mov
js
dec
add
rorb
dec
xor
jmp
push
negb
and
push
dec
ds
movsl
fadds
pop
adc
out
push
mov
pop
mov
jp
jns
inc
incl
xor
les
sub
cwtl
push
push
movsl
lret
nop
sub
xchg
push
pop
push
rorl
push
xchg
cmc
jg
orl
adc
pop
sub
mov
cmpsl
nop
adc
sbb
sti
push
and
std
aad
and
push
scas
jle
and
jno
addr16
js
xor
pop
fisubrl
lret
mov
xchg
int3
gs
pop
test
xor
notl
push
cmp
movsb
in
fildl
mov
jno
mov
mov
mov
add
and
pop
dec
inc
or
mov
mov
ja
dec
pop
push
pop
xchg
outsb
icebp
push
repz
or
dec
sub
jg
rcrl
dec
mov
and
cmpsb
stc
fisubs
popf
fldt
sbb
push
sbb
jo
push
or
jns
adcb
outsl
into
inc
repnz
mov
fs
xor
inc
xchg
in
popl
in
lahf
push
dec
pop
jle
nop
cmp
bound
and
repz
and
jmp
std
fidivl
adc
mov
mov
sub
xlat
call
out
lock
sti
inc
sbb
test
push
xor
push
jbe
push
jp
mov
jae
ficoms
add
mov
mulb
sti
icebp
loopne
fdivrl
mov
cmp
cmp
nop
fwait
sbb
pop
mov
pop
shlb
mov
push
divb
pushf
pop
jns
xor
jne
cmp
fcomps
shlb
hlt
jb
stos
pop
sub
mov
out
push
mov
es
pop
sbb
aad
stos
imul
into
cmc
cmpsb
movb
push
shrb
test
pop
mov
test
sub
or
push
aad
dec
popf
mov
mov
adc
int3
dec
shrl
adc
mov
jns
dec
test
ja
insl
rol
dec
mov
stos
in
mov
cmp
loop
arpl
jne
and
mov
cmp
pop
shlb
cli
stc
and
dec
mov
push
icebp
push
xchg
test
outsl
movsl
faddl
sub
addr16
push
lret
psubq
cmp
fidivrl
lahf
adc
lock
or
js
cmc
ss
cmp
cmp
or
stc
pushf
push
cmp
sahf
xchg
repz
cmp
mov
data16
mov
cmp
enter
rcrb
mov
dec
imul
push
jns
loop
mov
in
insl
ss
jmp
xchg
cmp
lret
nop
stc
mov
mov
out
leave
lods
mov
xchg
jo
and
mov
or
add
jg
ljmp
push
xor
jns
sbb
sahf
jmp
int3
cmpsl
rorb
inc
and
jmp
push
cmp
cli
mov
loope
add
out
dec
sub
mov
mov
pop
addr16
push
mov
and
push
std
negl
imul
mov
mov
mov
fsts
repnz
imul
xor
mov
lcall
pop
sub
movsl
sub
mov
add
imul
mov
cld
shll
es
xor
test
xor
add
imul
sub
xchg
rcr
xchg
pop
sbb
in
xchg
pop
mov
and
test
and
mov
fcompl
fdivrp
popa
fisubrl
push
repnz
lds
loopne
je
sub
lret
or
mov
insl
or
dec
out
inc
aas
fwait
and
nop
inc
loope,pn
iret
cmp
mov
and
dec
jmp
imul
sub
ret
adcb
cmp
cmpsb
add
mov
fldt
jns
adc
jle
pop
inc
jb
inc
push
popa
xchg
cmp
cmp
shlb
and
jle
jle
ret
push
mov
subl
daa
sbb
in
jo
push
mov
insl
jb
daa
pop
cmp
jg
sub
or
sbb
imul
bound
jne
aad
mov
sbb
dec
pop
sub
dec
insl
pop
jae
hlt
push
mov
mov
data16
out
sub
cmc
test
repz
ffreep
imul
negb
push
test
or
and
fldt
jp
into
xor
andb
repz
dec
ja
iret
das
add
sub
fs
pop
xchg
mov
jbe
cmp
mov
cmp
lods
push
outsb
push
clc
mov
mov
aam
aam
push
push
in
pop
cld
ljmp
hlt
lret
cli
push
jge
ja
ja
cmp
popf
test
fistpll
ret
in
gs
mov
xadd
mov
testb
push
jb
into
jns
imul
jbe
dec
pop
les
adc
mov
ret
mov
sub
jl
out
mov
insl
das
jl
pop
mov
push
or
push
pop
or
sbb
lret
push
mov
sti
mov
cmpsl
mov
adc
or
out
lock
mov
xchg
std
inc
mov
fisttpll
sub
mov
out
insb
push
popf
popf
cmp
and
fsin
popa
imul
mov
aas
inc
pushf
xchg
test
add
push
mov
cli
loop
repz
mov
sbb
in
jb
loope
mov
loopne
adc
mov
test
fdiv
nop
fwait
inc
or
inc
rcrb
cs
xchg
fdivrs
dec
es
pop
in
and
mov
lock
outsl
repnz
push
xor
add
mov
pop
mov
cli
sub
or
arpl
cmp
push
jns
or
insb
scas
int3
movsb
fldl
adc
ret
out
fisubrs
push
mov
sbb
push
enter
inc
cmp
pop
lock
jae
cmpsl
xor
and
pop
push
stc
add
filds
inc
pop
pop
mov
cmp
out
xor
push
pop
js
or
inc
aas
and
mov
gs
rcrl
mov
call
push
cmc
and
outsb
dec
lret
negb
in
repz
mov
movsb
ds
popa
ret
fstl
push
insb
scas
dec
push
aas
fdivs
loopne
jg
fstpl
nop
lcall
pop
mov
cmp
inc
in
test
dec
and
aam
daa
es
sbb
mov
out
xor
jge
jns
inc
lcall
cmp
inc
xchg
jp
mov
fstps
sbb
outsb
cmp
jl
aam
cli
adc
hlt
fidivl
cmp
push
mov
insl
xchg
and
cmp
cmpsl
and
cmpsl
loop
leave
dec
cmp
pop
lea
ret
xchg
cmp
xchg
xor
xchg
rolb
lods
adc
int
scas
sbb
jo
cmpsl
imul
xchg
cs
dec
repz
sub
loopne
inc
fsubrs
cmp
mov
sub
mov
not
in
icebp
andb
mov
sub
lcall
sti
adc
jmp
mov
adc
xchg
stos
loope
in
shlb
xor
push
mov
fdivp
dec
test
cld
pop
jg
mov
push
mov
mov
or
lods
test
sub
push
or
lock
xor
mov
inc
xchg
mov
xchg
in
mov
or
xchg
adc
pop
test
rcrl
sbb
divl
inc
scas
ds
dec
push
adc
aaa
stos
ret
ja
inc
ja
fs
sbb
mov
inc
rcrb
jne
jle
jle
add
arpl
movsl
int3
xchg
enter
xor
adc
inc
sbb
jnp
inc
gs
hlt
jge
add
and
mov
fldcw
jmp
add
loope
inc
or
mov
mov
cmp
mov
mov
roll
mov
repz
xadd
fstpl
pop
test
dec
or
xor
rclb
fildl
xor
dec
insl
je
jg
sub
ficoml
mov
rcll
icebp
xchg
pushf
out
clc
jmp
push
cmp
fwait
push
call
bound
out
mov
xlat
lret
mov
mov
outsb
push
add
icebp
mov
inc
cmp
int
mov
jnp
push
dec
outsl
lahf
mov
lret
sbb
adc
or
lea
and
lock
cltd
test
push
push
out
into
adc
jecxz
adc
push
xorb
outsl
xchg
adc
dec
mov
cmc
js
sahf
popa
in
ret
jo
in
js
push
lock
mov
mov
push
loope
cmp
pop
mov
cmp
add
and
insl
scas
fndisi(8087
addr16
fdivs
fbstp
popf
cmovne
mov
lea
push
mov
and
mov
add
push
insb
cs
lahf
add
mov
cmc
lcall
mov
mov
cmc
sbb
loopne
test
lods
cmp
sub
mov
mov
bound
add
roll
in
fdiv
roll
icebp
xchg
sti
xlat
mov
mov
mov
sar
cmp
mov
dec
sbb
lahf
mov
loope
xorb
cmp
mov
out
out
popf
mov
push
fstpt
aas
repz
ja
and
xchg
dec
out
xor
push
push
or
lds
push
sbb
jmp
inc
inc
jle
or
dec
out
leave
repz
inc
mov
repz
lret
in
mov
or
jae
jns
cmp
sbb
and
pop
daa
xor
aad
incb
xchg
aad
ret
lcall
cmp
xchg
jle
btc
les
and
arpl
xor
cmc
dec
and
inc
jecxz
and
push
and
xchg
adc
out
xor
xchg
pop
pop
fbstp
inc
or
xchg
iret
push
pop
push
push
push
mov
pop
test
mov
push
mov
xor
xor
sub
sub
push
roll
push
cmp
pop
inc
cmp
shr
popa
and
pop
sub
mov
stos
and
jb
int3
or
jb
xchg
testl
adc
jnp
stc
lret
jno
cli
std
out
adc
add
mov
push
or
fsub
sahf
and
mov
pop
push
xchg
mov
xor
cmp
sbb
and
dec
fdivr
mov
jmp
call
xor
mov
movsl
push
push
rcl
cmp
sarl
xor
sub
dec
fcomi
cld
and
mov
mov
dec
out
mov
sub
add
lret
movsb
add
jmp
jae
ret
or
in
mov
adc
bound
scas
iret
dec
pop
add
lods
les
adc
stos
cmc
outsl
mov
repnz
fstpl
push
fadds
pop
mov
data16
sub
sub
push
xor
out
stos
arpl
popf
or
adc
leave
pop
imul
idivb
dec
out
mov
rolb
push
or
lods
cmp
cmc
repnz
or
adc
dec
loop
decl
lods
inc
sti
cmp
and
pop
sub
sbb
hlt
fdivrs
cmp
pop
fs
pusha
insl
out
fadds
jb
xchg
mov
in
jo
lods
int3
mov
and
push
inc
fistps
out
pop
repnz
xor
enter
push
mov
mov
lea
das
and
shlb
cmp
ds
aad
dec
or
ds
add
xchg
dec
inc
mov
movsb
jmp
pop
jle
loop
mov
mov
dec
xlat
loop
imul
pusha
pop
mov
jl
mov
jns
scas
jbe
es
arpl
sbb
inc
push
push
push
dec
xchg
jo
int
or
frstor
daa
xchg
std
adc
movsl
int3
cwtl
incb
xlat
xor
repz
cmp
adc
xlat
dec
test
or
cld
push
xchg
rorb
dec
dec
push
sub
jmp
jecxz
dec
lock
push
std
cmpsl
into
aas
aad
jge
inc
inc
aaa
cmp
pop
jecxz
cmp
es
adcb
nop
jno
sub
jg
xor
mov
out
xchg
test
add
and
inc
sbb
in
mov
jg
hlt
push
xchg
arpl
insl
mov
int
mov
fistps
xchg
and
inc
xchg
xor
cmpsb
lahf
mov
lods
movb
jae
stc
repz
sub
inc
mov
pop
sub
outsl
repnz
dec
cltd
cmp
push
lahf
xor
push
add
out
imul
mov
lods
xchg
cmc
dec
push
pop
mov
pusha
pop
mov
add
sub
dec
call
ficoms
xchg
mov
adc
xor
repnz
add
dec
inc
add
adc
int
lods
movsl
adc
call
sbbl
test
xor
mov
popa
jb
and
ret
gs
into
outsl
mov
xchg
vpmovzxbq
repnz
pop
xor
das
xchg
inc
dec
std
stos
roll
out
mov
fnstenv
imul
mov
testl
cmp
jne
pop
dec
mov
nop
out
into
pusha
rcr
dec
push
int3
jecxz
hlt
mov
mov
sbb
sbb
subl
lcall
inc
shlb
push
ret
mov
dec
mov
and
fstl
push
push
inc
xor
aad
lea
cli
dec
add
inc
xor
mov
pop
dec
and
jmp
shr
lds
fidivrl
ja
popf
imul
cmpsl
jnp
xchg
mov
outsb
lcall
mull
push
adc
test
into
popf
mul
push
jno
rcll
rcll
sub
cmpsb
push
xchg
lahf
mov
enter
stc
fbstp
xchg
xchg
mov
mov
xor
out
mov
icebp
mov
repz
je
arpl
xchg
pop
sub
mov
or
mov
or
ret
mov
in
hlt
aad
ds
cld
mov
ret
and
mov
xor
mov
inc
leave
insl
mov
insb
pop
pop
dec
and
jb
sub
push
xchg
rcrl
pop
adc
mov
push
mov
out
lods
add
jne
adc
daa
fs
addb
xor
cltd
mov
adc
jbe
cmp
mov
ja
call
inc
xor
add
cli
sbb
pop
stos
mov
dec
cmpsb
adc
xchg
test
mov
rolb
inc
push
fdivrs
mov
popf
fwait
insb
push
idivl
xchg
stos
rcll
inc
cmpsl
mov
dec
test
push
dec
test
pop
stos
sub
jnp
fiadds
aam
roll
dec
dec
cmp
pop
sub
aad
leave
ss
lret
adc
hlt
imul
lock
loope
roll
rolb
dec
jmp
jbe
js
push
mov
fsqrt
je
ss
pop
loopne
repz
xor
sarl
cmc
inc
push
sbb
sbb
cmp
xchg
cmp
jmp
sbbl
sub
jecxz
dec
fmuls
xor
inc
jns
xchg
push
adc
movsl
cwtl
xor
ljmp
mov
push
pop
xor
pop
out
sbb
icebp
pop
icebp
je
sub
pop
sub
push
movsb
das
mov
movsb
mov
mov
adc
sub
aaa
and
mov
push
push
fsubs
mov
fcomi
notb
jg
lret
mov
ja
fiaddl
test
add
dec
push
mov
sahf
push
lds
push
or
rcl
mov
int3
out
lock
sbb
adc
xchg
jae
xchg
mov
pusha
in
mov
call
sbb
lret
sbb
scas
std
or
xchg
cmp
cmp
jmp
sub
and
and
dec
jmp
push
cltd
sub
xor
ret
lds
out
mov
ja
jl
pop
xchg
pushf
out
xchg
lds
into
sub
pusha
dec
mov
jnp
push
testb
push
subl
mov
or
xchg
movsb
and
roll
cmpsl
out
mov
inc
xor
xchg
sub
ljmp
xchg
lcall
xchg
lret
dec
add
leave
sbbl
xchg
add
add
lock
cwtl
lock
pop
xchg
or
xor
nop
ja
outsl
pop
jecxz
sti
cmp
mov
arpl
adc
aaa
jne
mov
rol
cltd
mov
and
pushf
fistl
mov
imul
mov
pop
fcomps
xchg
dec
ret
xchg
stos
xchg
iret
sbb
mov
pop
repz
dec
pop
push
lahf
out
and
das
stc
mov
into
xchg
cmpsl
mov
in
push
push
bound
xlat
mov
popf
mov
xchg
test
ds
filds
or
sub
nop
jp
jae
fcompl
cwtl
ss
mov
ds
cmpsb
out
dec
push
cmpb
lods
adcl
and
mov
add
xor
mov
imul
stos
xor
adc
rcll
jmp
shlb
adc
popf
out
mov
imul
xchg
cmpsb
mov
arpl
jne
dec
cli
imul
pop
jne
orl
imul
mov
mov
add
es
test
add
sub
or
xor
or
je
pop
mov
push
cs
nop
fmull
fstcw
arpl
jl
dec
lock
clc
mov
lahf
or
add
sub
fwait
insl
pushw
rorb
xchg
lock
add
fimuls
and
dec
pop
stos
dec
testl
pusha
call
xor
mov
call
cwtl
add
cli
cmpb
aad
xlat
hlt
fs
jb
jg
dec
out
lock
clc
icebp
jne
inc
adc
cwtd
push
aas
xchg
add
js
cmp
mov
outsl
push
cmp
jne
jge
xor
inc
insl
rclb
xchg
dec
push
xchg
mov
enter
jae
mov
adc
lock
add
cli
fcoms
and
sub
jbe
push
test
push
adc
cmp
or
lret
lods
mov
push
movsl
inc
or
jbe
imul
aas
jecxz,pn
lea
ret
movsb
jb
inc
out
mov
mov
dec
dec
jle
aaa
mov
fistl
fistpl
loop
imul
popa
std
loope
cmp
das
and
lret
adc
mov
sahf
push
sub
push
fisttpll
cmc
scas
adc
sti
sub
or
stc
movsb
loope
in
pop
aam
jp
clc
cmp
orl
jp
sub
xor
jo
data16
cld
es
lods
mov
inc
dec
and
fsubl
mov
shll
call
inc
lods
sarb
mov
fucom
add
or
outsl
adc
cs
add
or
dec
mov
pusha
enter
cbtw
jge
mov
ss
or
xor
cmp
loopne
inc
mov
insb
mov
insb
xor
sbb
sub
sub
jae
dec
cwtl
sub
push
inc
push
clc
push
pushf
sbb
aas
jp
jno
sub
cld
sub
xchg
sub
test
rcrl
pusha
mov
les
push
insl
adc
lods
xchg
loope
fs
push
mov
xor
stc
push
or
push
dec
fisttps
and
sbb
push
ret
xorb
mov
inc
out
aad
les
push
or
adcb
nop
test
int
xor
sar
mov
jle
getsec
push
push
rep
mov
and
and
mov
jmp
mov
imul
or
das
sub
hlt
add
push
pop
cmp
loope
cld
adc
jmp
in
mov
jle
out
rorl
aad
pushf
stos
out
test
mov
dec
xchg
movsb
sbb
adc
dec
lcall
movsb
jecxz
lret
lret
in
out
mov
push
sub
shll
mov
shrl
push
and
pop
push
faddl
repnz
jb
mov
jae
hlt
mov
pop
scas
jecxz
or
hlt
arpl
jg
nop
les
lods
cmp
insb
sub
pusha
testb
fstl
inc
mov
repz
or
xor
sbb
push
addr16
outsb
mov
jge
aam
scas
test
pop
rorb
cmp
outsl
mov
lea
test
stos
nop
inc
shll
aad
imul
mov
inc
js
sub
push
xor
xor
and
inc
inc
sub
pushf
test
iret
xchg
sub
cs
pop
fcmove
sub
shrl
push
add
inc
stos
xchg
pop
lods
std
addr16
xor
test
or
jnp
repz
sti
push
cmp
loop
cmp
mov
or
jnp
xchg
xor
aas
in
pop
inc
in
add
and
xchg
loop
pop
fisubrl
xchg
and
dec
push
lods
out
xchg
add
je
jae
inc
mov
clc
push
lods
jge
or
sub
fldenv
mov
shlb
jns
jbe
jp
ljmp
bound
aam
ftst
fcom
xchg
dec
sub
mov
mov
rcll
jecxz
jo
ss
or
das
push
cmp
fistps
sub
xchg
es
repz
cmc
and
ret
sub
inc
push
fsubrl
clc
jmp
insl
sub
mov
test
sbbb
pop
inc
shrl
push
xchg
cld
push
adc
lods
outsb
addb
cmp
dec
jmp
imul
movsb
mov
cmpsb
or
inc
stos
mov
dec
enter
jne
das
push
adc
test
ljmp
fidivs
sti
inc
js
test
pop
les
lock
gs
and
in
pop
sub
pushf
scas
aas
enter
push
repz
aad
stc
inc
dec
ficompl
jle
fisubl
xor
cmpsb
inc
aam
add
sub
cmpsb
fiaddl
push
jne
sbbb
icebp
into
mov
loopne
das
in
sbb
sti
xor
addr16
pusha
or
pushf
scas
pop
cmp
pop
imul
mov
mov
pusha
push
lret
repnz
push
sub
fmuls
mov
in
in
test
ret
sbb
sub
mov
jecxz
push
pop
xor
jle
push
push
aad
aaa
pop
mov
dec
lcall
data16
push
add
nop
push
pop
fildl
inc
pop
lcall
notl
sub
cli
pavgw
and
sar
mov
pop
push
or
cwtl
adc
sahf
pop
adc
scas
stos
ljmp
fiadds
sahf
shlb
test
imul
rorb
loopne
fbstp
fsubrs
sub
mov
mov
adc
clc
cmpsl
shlb
xchg
xchg
xchg
add
mov
sbbb
cmp
and
aam
xchg
cmp
out
cld
pusha
icebp
pop
and
js
sub
cltd
dec
aas
sbb
or
les
add
jnp
out
icebp
in
aad
sbb
sub
out
push
sahf
xor
sbb
push
sbb
pop
adc
loope
jae
into
fadd
pop
insl
cli
xor
sbb
ljmp
add
lea
xchg
je
popa
fs
xor
mov
mov
mov
xchg
sahf
shr
dec
push
imul
xchg
adc
lds
mov
repz
and
aaa
shlb
aam
adc
leave
pop
pop
jl
ret
pop
ret
fnstcw
jno
ljmp
pusha
nop
sbb
add
inc
mov
bound
jo
pop
push
idivl
jb
dec
pop
sub
out
jp
imulb
test
leave
je
push
das
adc
mov
jmp
gs
xchg
insb
add
aam
iret
or
or
popf
shrb
dec
sbb
out
shlb
jae
lea
cmpsb
ss
insl
mov
inc
cmpsl
pop
cwtl
sbb
nop
in
mov
cmp
rcrl
jno
imulb
test
fs
js
push
jecxz
addr16
cmp
mov
and
lret
push
fnstsw
xchg
lea
call
out
std
imul
jecxz
and
push
enter
sbb
jecxz
jbe
test
jmp
enterw
add
or
enter
pop
jns
pop
pop
jecxz
push
xchg
mov
push
aas
cmp
out
jns
ljmp
dec
clc
jecxz
stc
xorps
or
mov
hlt
push
cmp
xor
out
sbb
mov
pop
and
mov
repz
mov
stos
or
mov
loopne
andb
mov
cmp
lea
loop
mov
pop
xor
xchg
mov
lods
repnz
ret
dec
push
adc
mov
adc
or
jbe
aaa
jge
pop
inc
xchg
xor
add
jle
pop
bound
mov
adc
lret
scas
repnz
cltd
push
mov
sub
ss
push
adc
mov
fdivs
mov
ljmp
xchg
sbb
sbb
dec
push
adcl
fsubs
lds
mov
sbb
jle
jbe
nop
and
jge
mov
stc
call
jl
jns
pusha
dec
sahf
or
repnz
xor
ret
jns
dec
test
cld
stos
out
sub
xlat
cmp
mov
mov
aad
insb
sbb
push
xchg
dec
pop
shll
out
cmp
mov
mov
testb
lret
mov
jecxz
loop
std
inc
adc
sbb
push
push
push
dec
out
xor
and
or
movsb
push
mov
in
movsb
push
aas
addr16
sbb
push
sbbl
js
ffreep
scas
dec
pop
repz
pop
mov
push
cmpsl
rclb
mov
adc
xor
xchg
repz
xor
out
dec
cmp
sbb
cmp
pop
pop
idivl
and
jns
shrl
pop
loop
in
pop
insl
ds
sub
and
out
xorb
cmpsb
sub
mov
dec
push
push
test
add
mov
or
mov
data16
mov
dec
arpl
pop
lock
loope
mov
cli
nop
push
xchg
add
fisubrs
repnz
pop
lock
xor
jb
mov
test
sbb
pop
enter
mov
aaa
orb
sub
ja
in
mov
iret
xchg
push
dec
das
push
ss
shlb
scas
clc
pop
inc
cwtl
pushf
nop
lea
ds
jg
lea
dec
fidivs
rcrb
or
mov
mov
lods
pop
mov
cmp
psubsw
sbb
ret
mov
test
inc
popa
popf
sbb
cmp
loope
outsl
in
lea
mov
xchg
and
cmpb
pusha
insb
pushf
loopne
test
test
mov
movsl
lret
xchg
aas
leave
fdivrl
test
ficoml
arpl
enter
mov
jnp
pop
ljmp
mov
ss
adc
int3
push
addr16
scas
adc
sbb
in
inc
xor
adc
mov
cmp
push
xorb
xor
lods
jbe
dec
popf
cwtl
rolb
pop
add
divb
mov
and
inc
mov
ja
scas
push
subb
pop
or
sub
mov
sub
adc
in
js
mov
xor
test
xchg
dec
mov
outsb
xor
les
sub
mov
pop
inc
fs
cmp
mov
fwait
adc
in
lea
int
and
sbb
push
pop
mov
fmull
out
cmp
pop
inc
and
lock
pop
leave
call
push
push
or
inc
jle
sub
pop
nop
imul
lods
adc
fs
adc
cli
jae
loop
mov
fcoml
adc
lock
lret
sub
jecxz
xchg
data16
cmpsl
sbbb
fucomip
nop
data16
in
adc
or
pop
data16
jo
dec
popa
daa
pushf
cwtl
fiadds
cwtl
pop
imul
push
push
mov
ds
int
test
xor
inc
mov
mov
js
jp
jb
push
xor
lock
fidivl
aad
mov
dec
pop
push
fistl
and
cmpsl
out
mov
inc
jno
in
sar
ss
add
dec
sbb
fstpl
iret
arpl
add
sbb
out
add
addr16
push
pop
es
outsb
or
mov
popa
and
and
xor
cmc
fcompl
dec
fmulp
jb
imul
movsl
aam
fildl
fwait
adc
out
jbe
inc
data16
sbb
jp
adc
adc
pushf
shrl
bnd
xchg
adc
sbb
stc
sub
andl
fs
or
imull
out
shll
pop
xor
inc
jmp
not
fsubrl
push
leave
into
ss
jmp
jg
adc
push
push
daa
repz
adc
xor
add
popf
pop
pop
dec
adc
xor
jno
cwtl
mov
sub
pop
jge
pop
add
imul
or
fiadds
xor
insb
dec
cld
or
xchg
aaa
das
sti
sbb
inc
lds
stc
push
push
inc
ss
jo
lahf
stos
cs
inc
sarl
fadds
sbbl
lret
out
stos
cmp
jnp
inc
addr16
les
pop
cs
jg
rclb
xchg
inc
xlat
outsl
push
add
add
jecxz
jmp
mov
adc
test
mov
fildl
sub
dec
pop
cmp
mov
mov
mov
dec
dec
out
pop
out
lcall
sbb
loop
sub
pop
mov
add
jb
adc
das
icebp
mulb
movsl
sahf
xchg
cmp
das
movsb
dec
pushf
jl
cld
adc
jmp
loopne
jp
jle
in
xchg
lahf
loop
ficoml
js
aam
inc
nop
pop
or
rorl
int3
add
js
xlat
scas
mov
xchg
and
int
insb
pop
mov
popf
and
jg
pop
in
arpl
push
xor
add
faddp
into
push
lahf
jno
inc
mov
sbb
push
push
ja
inc
cmp
mov
sbb
cmpsb
repnz
aas
ja
or
push
inc
in
push
inc
sub
scas
push
fiaddl
les
in
cmp
lret
ret
and
and
cmp
inc
clc
mov
in
popa
cmp
out
in
xchg
mov
inc
jno
ds
mov
or
mov
addr16
cli
jne
sub
mov
decl
jno
cmp
add
shlb
inc
aam
mov
stc
dec
movsl
jge
loopne
rclb
movsl
es
ds
mov
pop
mov
add
pop
or
push
cmp
int3
mov
lock
aas
inc
stc
dec
jne
xor
out
adc
mul
or
rcrl
xor
fdivl
xchg
popl
or
mov
xchg
das
in
or
movsl
in
into
push
push
add
pop
ss
mov
mov
mov
lret
push
and
mov
xchg
subl
adc
pop
cmp
je
jge
fsubp
div
push
lods
mov
xor
ret
imul
cli
cmp
jb
sti
lret
test
bound
test
jb
arpl
xor
mov
pop
cmpsb
push
sbb
adc
popa
loop
jmp
jecxz
aaa
mov
lock
dec
test
pop
jne
mov
es
mov
adc
ret
mov
movsl
sbb
mov
pop
cmpsl
and
out
jae
lea
mov
popf
dec
mov
mov
cwtl
pop
push
inc
dec
pop
aas
mov
mov
xor
imul
jbe
pop
fists
stc
jg
les
and
xchg
in
cmp
inc
xchg
pop
call
cmpsl
ss
cmpsb
scas
or
iret
popf
inc
pusha
in
or
sbb
imul
cmp
jns
and
outsl
stos
and
pop
lds
xchg
iret
subb
sbb
aad
jmp
aam
cmpsl
cs
das
and
or
push
mov
lods
jmp
or
cmp
enter
mov
daa
push
ss
sub
ret
mov
or
fisubl
mov
dec
adc
xchg
cmp
das
push
and
cmp
adc
cmp
adcb
dec
dec
std
fs
mov
popa
ss
cld
in
cmp
je
mov
lock
xchg
inc
inc
daa
push
sub
or
aas
xchg
fs
dec
adcl
fstps
rorb
adc
lret
push
fsubrs
es
popf
ret
cmp
xchg
cmp
mov
inc
push
cmpsb
adc
popa
pop
das
arpl
ds
loope
mov
xchg
jno
imul
pushf
sahf
xchg
mov
aad
and
aas
add
mov
cmp
lret
mov
xor
movsl
pop
idivb
out
adc
lret
sahf
test
cltd
sub
dec
pop
sar
addb
dec
or
jnp
cmp
mov
test
push
imul
add
cli
push
lcall
mov
das
push
mov
dec
lret
jg
stos
int
lret
add
mov
imul
in
and
adc
xchg
push
xchg
jae
repz
popf
fisttpll
push
dec
outsl
adc
stos
xor
mov
cs
dec
cld
hlt
mov
and
fstl
mov
ss
push
mov
sti
jecxz
aaa
xlat
xchg
enter
mov
scas
dec
out
pop
scas
fisttpl
lret
out
stos
pop
aad
pop
sahf
sub
add
fisubl
cli
cmp
movsb
push
mov
push
and
adcl
or
pop
jnp
inc
mov
xor
loopne
loop
add
sub
rorl
sub
inc
mov
fs
icebp
push
jmp
ficoms
gs
cltd
insl
jmp
mov
dec
imul
ret
pop
fwait
inc
mov
push
cmpb
aam
or
sahf
dec
stos
xchg
mov
out
push
jb
lret
pop
rcrl
and
push
stos
inc
rol
sub
mov
sbb
pop
rcll
test
int
jl
jno
or
fsubs
bound
lds
adcl
jne
jecxz
stos
mov
divl
adc
rol
xor
xlat
xchg
jmp
add
scas
aad
cltd
call
hlt
out
lret
jno
sarb
subl
and
xor
lods
rcll
out
sbb
inc
jae
push
aam
inc
jo
mov
jne
addb
pushf
shrb
inc
arpl
add
jp
mov
xor
mov
mov
pop
adc
lods
dec
xchg
jns
push
adcb
jle
mov
je
mov
lret
fnsave
and
sbb
or
lock
pshufw
lret
in
lods
mov
pop
pop
mov
repnz
test
jl
mov
sbb
fcom
cmp
fadds
xchg
mov
scas
xor
cli
fisubl
out
pop
mov
xchg
adc
push
aaa
mov
ret
dec
ljmp
add
cs
cmp
lcall
js
int
lret
xor
lock
or
or
frstor
sub
add
jg
cmp
lret
sarl
daa
mov
dec
jl
dec
jae
test
lcall
fnstcw
out
sub
mov
lods
xor
call
icebp
cmpsl
jg
pop
rcrb
and
mov
cmpsl
outsl
sbb
jb
cmp
add
out
gs
outsb
out
xor
sbb
ret
es
imul
ds
stos
loope
orl
enter
les
nop
cmp
jmp
shrb
push
enter
jle
gs
xor
in
adc
mov
int
mov
jne
inc
jmp
dec
jecxz
mov
sbb
fsubs
mov
daa
in
add
repz
sti
addr16
push
sti
popf
sbb
cmp
fldenv
lds
pop
mov
sub
mov
in
mov
mov
cld
xchg
xlat
icebp
xchg
dec
xchg
or
xor
xchg
fsubrs
cs
xchg
sbb
mov
sub
dec
or
inc
jmp
in
fldenv
inc
lret
outsb
sub
mov
mov
mov
into
and
sub
mov
xor
sub
dec
xor
fimuls
shll
daa
scas
sub
jl
in
daa
sti
shlb
mov
add
into
and
adc
pop
xchg
out
adc
push
mov
mov
pop
jge
lds
cmp
mov
xchg
dec
xor
sbb
push
das
jae
lret
test
adc
dec
mov
ljmp
out
mov
insb
js
add
loope
fwait
lods
and
frstor
cmp
repnz
xlat
cmp
mov
loop
outsb
icebp
jne
repnz
or
sub
push
add
add
aam
sbb
push
nop
mov
addr16
mov
incb
mov
aas
sub
cmp
push
sbb
inc
mov
cmp
mov
mov
ret
mov
cs
imul
popa
mov
ret
pop
popa
test
push
lods
ret
out
push
scas
mov
pop
lock
fsubp
stos
push
add
add
push
nop
leave
movsl
fxch
add
pop
insl
and
pushf
or
add
cmp
lea
cmp
aad
mov
loope
icebp
adc
and
pop
push
sbb
xor
mov
push
imul
push
mov
call
mov
bound
mov
mov
cmp
inc
insl
mov
stos
xor
mov
ds
dec
cmpsl
xor
aad
scas
jl
inc
scas
stos
fildll
lods
mov
cmp
mov
imul
pop
out
cmp
or
push
and
es
pop
inc
into
or
cltd
outsl
les
cld
cwtl
push
or
mov
xchg
fsubl
daa
jg
fs
fildl
inc
cmp
push
mov
int3
adcb
pop
bnd
into
inc
lahf
imul
iret
xlat
cwtl
in
mov
inc
jp
push
cmpsb
push
jecxz
pop
adc
stos
push
fstpl
clc
popa
mov
je
add
pop
add
and
shl
sub
fsubrp
add
icebp
or
cltd
sub
inc
xor
in
pop
dec
sbb
jbe
cmp
enter
add
out
push
pop
xchg
jns
dec
mov
int3
mov
movsb
mov
jae
fadds
in
adc
push
cmc
movsl
out
cmc
mov
dec
push
clc
fcmovbe
test
int
or
mov
lods
sbbl
and
xchg
lea
jno
shll
jns
add
stc
jbe
std
and
or
adc
sbb
lcall
imul
fsubl
out
mov
movsb
test
adc
push
lds
mov
leave
sub
mov
push
scas
cmpsl
daa
xor
rorb
movsb
sarl
rorb
jl
arpl
jge
xor
nop
js
mov
adc
and
and
sarb
push
cmp
cli
lahf
lea
push
add
enter
jecxz
cmp
adc
xchg
pop
mov
pop
sub
fsubrl
pushf
adc
ds
in
mov
icebp
aam
ja
cmc
sbb
sub
js
mov
das
cwtl
sbb
lret
fdivl
xchg
addr16
fcoms
push
test
js
and
mov
pop
pop
mov
push
das
mov
lahf
ja,pn
push
inc
cmp
push
mov
push
insl
xor
push
xchg
lock
and
mov
and
out
jp
test
cmpb
inc
push
arpl
outsb
jl
loope
xchg
outsl
test
sbb
data16
add
mov
ret
xlat
rol
add
mov
scas
int3
mov
ja
sbb
fisubrl
out
dec
mov
push
dec
outsl
or
lock
or
mov
xor
xchg
dec
jecxz
mov
mov
testl
std
cmpsl
and
es
xor
push
sub
push
add
xchg
out
leave
int
out
fidivl
rcrb
jne
aas
cmc
movsb
mov
cmp
aam
mov
jl
sub
adc
js
enter
dec
icebp
mov
nop
dec
cmp
dec
jmp
push
scas
mov
push
aad
pop
data16
jne
lock
mov
mov
sbb
lret
imull
ret
fwait
mov
cmpsb
scas
pop
or
xchg
call
xchg
and
pushl
sarb
pop
push
mov
lcall
sub
mov
das
mov
sbb
shlb
in
jo
imull
xchg
int
cli
jg
ljmp
xchg
cli
ljmp
scas
adc
sub
xchg
jle
lret
addr16
fs
push
pop
jne
daa
pop
push
out
sahf
repz
mov
dec
dec
cmp
mulb
sbb
rclb
dec
xchg
adc
cmp
pop
mov
popa
jne
mov
aam
inc
addr16
and
cmovbe
xor
or
out
push
cmp
ficoml
xchg
dec
fnsave
and
mov
xor
sub
fs
mov
cmp
aas
sahf
fcoms
pop
popa
enter
mov
stc
test
push
daa
push
sbb
mov
test
ljmp
mov
adc
mov
mov
inc
dec
jle
sahf
imul
subb
fadds
into
cmpsl
jae
push
pop
adc
dec
es
in
and
cli
and
sbb
cld
psubd
aad
orl
mov
or
push
stc
dec
outsl
cmp
xchg
test
pop
je
add
cld
xchg
aas
pop
jb
insb
add
xchg
int3
sbb
shr
sub
jle
or
roll
repnz
lock
out
sub
dec
inc
and
aam
pop
ret
mov
pop
sub
sub
mov
push
stc
mov
sahf
fsubrl
push
add
pop
pushf
jo
scas
xchg
jmp
rol
sbbl
jmp
and
inc
jmp
test
pop
dec
in
and
into
int
dec
int3
cli
popf
mov
add
sbb
enter
std
clc
mov
jp
rclb
outsb
push
push
mov
arpl
repnz
and
dec
mov
es
and
or
lcall
hlt
mov
add
dec
rcll
mov
mov
out
fidivrl
cmpsb
lret
testl
or
out
add
xor
add
pusha
mov
das
lret
in
pop
ja
jns
je
and
mov
mov
mov
dec
dec
not
xor
pop
push
pusha
jae
js
jle
jle
enter
pop
sbb
and
outsb
add
out
and
shrl
jecxz
push
cmpsl
inc
add
call
inc
sbbb
sub
push
popf
jnp
cs
sbb
push
lcall
jnp
out
lea
movsb
iret
je
push
inc
add
cltd
mov
mov
fbld
xor
pop
in
or
mov
mov
insl
aad
xlat
cmc
insb
cltd
mov
sarl
push
cld
dec
mov
gs
adc
and
in
jg
call
mov
movb
or
inc
in
pusha
mov
inc
fdivrl
mov
add
fdivrs
pop
ss
sahf
cwtl
insl
sahf
cmp
pop
mov
mov
pushf
dec
cmpsl
or
repnz
mov
jnp
xchg
xchg
sub
xchg
xchg
jle
out
pop
sub
jge
rcrb
inc
xor
push
xchg
xchg
mov
push
mov
test
ss
jns
inc
pop
fs
frstor
sbb
aaa
jle
js
test
dec
jns
adcb
out
dec
hlt
jg
jns
and
jne
mov
push
fcmovnbe
cmp
mov
ficompl
fs
or
jne
testb
xchg
sub
fisttps
pop
xchg
and
xchg
sarl
or
aam
and
mov
jns
out
mul
add
dec
inc
xchg
jbe
xchg
mov
or
or
das
jg
fimuls
test
sbb
ss
push
roll
jb
dec
cwtl
popf
les
popa
or
dec
lock
loopne
arpl
xlat
push
lock
aam
add
and
pop
es
xchg
scas
stos
push
mov
idivb
enter
dec
shl
dec
test
xor
arpl
mov
mov
push
jp
push
jns
xlat
mov
fcomip
mov
add
sub
addr16
or
jmp
dec
mov
mov
adc
push
cmp
popa
std
lcall
insb
mov
or
dec
outsb
and
pop
cmp
cld
into
das
push
jno
in
mov
jnp
sub
fisubrl
mov
jl
mov
loop
out
jecxz
mov
add
inc
fidivrs
adc
pop
shll
insb
mov
cmp
xorb
mov
xchg
filds
test
fidivrl
inc
push
mov
xchg
mov
mov
and
or
aam
scas
sbb
cmp
stos
andb
icebp
lds
cmp
mov
pop
fcmovnb
enter
xor
lock
sub
ret
repnz
jp
mov
and
sub
lcall
add
cmc
mov
sub
shl
jg
adc
and
mulb
mov
inc
inc
jno
sub
rcrb
loopne
pop
shll
rorl
bound
inc
jne
xchg
lret
mov
jecxz
dec
mov
push
or
add
or
add
cld
out
jecxz
bnd
sub
pop
test
and
sub
sbb
xor
testb
sub
or
adc
leave
push
push
ret
leave
pop
iret
jl
jecxz
pop
fidivrl
les
cmc
ret
mov
cs
leave
jmp
cs
sub
jge
mov
rol
jno
mov
dec
imul
fists
push
mov
push
hlt
dec
jns
sub
lods
roll
lret
dec
aaa
aaa
mov
cwtl
push
lods
push
jnp
and
xor
faddl
jmp
push
nop
sbb
fs
aad
fsubrl
add
mov
sar
add
outsb
pop
jp
jecxz
lret
ja
loope
mov
push
dec
out
in
mov
scas
push
inc
cltd
cmp
adc
inc
mov
hlt
icebp
es
in
pop
loope
mov
femms
inc
into
ljmp
push
cmp
push
push
mov
sarb
divb
pop
mov
sub
je
sub
loop
inc
cmp
loopne
mov
pmaxsw
cs
push
sbb
mov
add
rol
cmp
mov
sahf
push
mov
jg
cmp
pop
pop
iret
in
dec
jmp
sub
jne
or
add
push
mov
lods
cmp
and
sub
mov
inc
inc
movsb
xchg
sqrtps
dec
mov
inc
fsubp
dec
daa
push
push
inc
adc
add
test
add
sbb
sbb
xlat
outsb
fisubs
push
xor
fdivl
std
cwtl
sbb
jecxz
sbb
sti
jg
xor
cmp
fists
xchg
sbb
and
or
rorb
lcall
add
jne
cmp
rorl
bound
fwait
je
pop
xor
movsb
rcr
inc
stos
mov
iret
out
pusha
cmc
pop
lahf
pop
rorl
dec
fwait
test
jg
jmp
dec
mov
pop
add
inc
loope
pop
aam
mov
xchg
dec
mov
repz
dec
dec
ja
xchg
lea
lea
xchg
clc
pop
movsb
or
sub
shlb
sbb
out
je
adc
sbb
mov
adc
push
xor
insl
and
mov
mov
mov
pop
aas
and
cmpsb
cmp
xor
fwait
inc
sbb
and
jbe
push
test
xor
pop
decb
mov
adc
jb
sub
jg
push
sbb
add
adc
pop
shlb
adc
loop
std
and
aad
xor
into
fisttps
xor
sub
std
iret
jg
test
dec
outsl
pop
push
cmp
dec
push
push
test
mov
push
sub
les
xchg
clc
dec
daa
pop
inc
adcl
repz
lcall
int3
pushf
mov
mov
and
adc
and
stos
sti
test
loopne
or
aam
add
dec
push
inc
adc
mov
mov
jge
xor
scas
or
out
pop
or
sub
push
mov
fstpl
fs
cmp
fs
pop
sbb
mov
mull
mov
mov
jns
adc
sub
pop
xchg
sti
and
jl
in
lds
adc
push
in
push
out
or
jecxz
aas
add
jge
jo
out
pop
iret
ret
and
sti
push
lock
and
xchg
aas
lods
outsl
cli
push
and
dec
push
aam
iret
stc
mov
cmp
fadds
or
rolb
push
mov
mov
add
fbld
bound
movsl
fstpl
lods
gs
das
adc
adc
shl
out
icebp
jno
inc
leave
sub
hlt
fildl
sub
mov
inc
push
imul
dec
xchg
orl
mov
mov
xor
xchg
push
pop
xor
scas
lahf
and
cmp
adc
aad
ds
lds
sbbl
sbb
inc
fcompp
sub
hlt
inc
enter
adc
adc
mov
bound
mov
xlat
das
push
jno
jno
lds
dec
dec
lea
jb
mov
xor
shlb
mov
cmp
inc
fcomi
dec
xlat
mov
adc
xchg
push
pop
mov
ss
xor
cs
cwtl
call
jbe
loopne
sahf
repnz
push
sub
mov
fwait
arpl
cmp
push
scas
dec
aam
xchg
ss
inc
int3
mov
test
inc
mov
xor
push
mov
nop
pop
cmp
pop
stos
test
pop
or
je
mov
add
adc
imul
out
ds
inc
adc
dec
fisttps
or
push
es
sub
lods
sbb
push
pop
pusha
lea
push
or
and
lods
inc
jns
into
lods
data16
push
test
ss
and
adc
push
iret
clc
or
adc
sbb
xchg
dec
adc
sub
add
pop
add
mov
ds
sti
mov
xchg
mov
movl
adc
and
sahf
ss
int3
lcall
mov
fsubrl
call
pop
fwait
mov
jns
jo
imul
pop
ds
xchg
mov
imul
jno
mov
popf
dec
xchg
lds
loopne
cmp
cmpb
testb
mov
aad
cmp
adc
or
enter
adc
adcl
les
clc
fs
cmp
xchg
pusha
lret
out
mov
iret
cli
in
cmpsl
arpl
into
mov
cmp
int3
cmp
mov
xchg
lock
push
popa
jnp
jns
xor
sub
adc
sbb
xchg
xchg
lcall
loopne
ret
fwait
and
test
xor
leave
mov
add
add
aaa
sbb
inc
mov
xchg
dec
xchg
loopew
mov
xchg
insb
imulb
push
jae
xor
aad
ljmp
cmc
and
push
sbb
mov
cmpsb
cmpsl
sbb
jae
cmp
push
mov
jl
xchg
ficomps
pop
cld
test
daa
out
or
mov
mov
push
pop
ficomps
pop
inc
xor
negl
popa
push
andb
fiaddl
push
inc
in
xchg
push
movsl
pop
mov
scas
mov
sar
jmp
inc
fxch
mov
cmpsl
gs
in
cmp
inc
leave
dec
mov
mov
repz
adc
push
pop
imul
scas
out
push
mov
adc
fdivs
cmp
rcrl
xchg
sahf
sub
lret
sbb
xchg
cmpsb
leave
fs
rcll
xchg
and
push
xor
js
adc
add
pop
adc
push
fdivs
pop
minps
repnz
testb
mov
imul
dec
inc
adc
fld
out
addl
inc
rcr
sbb
rcll
and
and
test
mov
lret
mov
xchg
cs
inc
dec
jo
sti
sbb
loop
mov
xchg
inc
orl
lds
jnp
push
in
pushf
xchg
lcall
loopne
sub
stos
dec
jb
mov
sbb
push
bound
pop
out
lcall
ljmp
js
jmp
aas
fiadds
int
push
lret
daa
insl
dec
movsb
adc
pop
cltd
sub
pop
pop
xor
addr16
add
mov
jl
pop
add
clc
das
cld
jns
xchg
add
fistps
and
mov
clc
pop
xor
xor
xor
mov
or
or
aas
jns
push
fdivr
das
jnp
adc
mov
dec
xchg
into
sub
adc
cmp
sti
xchg
cmp
mov
cmpsl
and
xchg
xlat
outsl
in
movsb
andb
outsl
in
addb
mov
les
or
fdivrs
fisubl
sbb
dec
mov
aas
jmp
inc
mov
icebp
and
sub
xchg
mov
push
adc
add
imul
push
cwtl
xchg
or
xor
cbtw
jp
insb
dec
pop
pop
mov
repz
xchg
and
test
shrl
in
xchg
pusha
cmp
lds
xor
rep
scas
sub
aam
fistpll
add
xor
fsubr
jl
and
pushl
mov
push
xchg
mov
add
rcr
and
inc
adc
add
ret
mov
sahf
jecxz
aaa
repnz
mov
jmp
pop
mov
lods
shll
cmp
jnp
lds
inc
sbb
mov
pop
test
or
jns
jne
sbbb
test
aad
sbb
stos
test
dec
dec
cmp
lret
inc
popw
cmp
pop
sub
pop
push
icebp
jo
xor
andl
cld
ret
cli
xchg
je
dec
sub
cli
dec
out
repnz
push
cmp
stos
or
sub
cli
in
divl
rcll
imul
repnz
shll
fildl
ret
mov
inc
ret
in
mov
add
push
or
loopne
in
repz
test
sbb
mov
fstp
insl
es
sub
and
jle
xchg
sub
stc
cmp
repz
add
insb
loope
add
dec
xchg
out
pop
mov
and
out
dec
inc
and
jns
ffreep
mov
mov
xlat
pushf
stos
sti
push
outsb
imul
xchg
in
lea
leave
das
or
mov
outsb
xchg
xchg
fisubrl
std
xchg
call
pop
xlat
arpl
stos
es
xchg
daa
mov
adc
imul
xlat
dec
dec
jbe
shrl
test
or
or
movsl
stc
cltd
test
insb
mov
es
test
pop
and
js
adc
adcb
mov
jmp
lea
mov
lret
stos
xchg
lods
sbb
push
push
int3
dec
and
scas
and
popa
cwtl
mov
mov
or
pusha
data16
mov
adc
popf
xor
mov
push
xor
iret
lods
ljmp
shl
imul
inc
notl
sbb
ja
adcb
cs
mov
mov
sbb
popa
and
popa
jmp
push
bound
cmpsl
je
jae
jle
sbb
adc
lahf
stos
and
imul
fwait
jne
ror
call
in
jle
pop
xor
add
lods
pop
sbb
fs
push
pop
bound
push
jl
inc
inc
add
movsb
arpl
push
pusha
or
xor
mov
xchg
lods
mov
xor
pop
add
lcall
fbstp
jae
pop
mov
xchg
rorb
or
mov
mov
push
mov
sub
cmc
pop
mov
shll
or
jge
mov
ret
push
shrb
call
dec
and
insl
mov
sub
dec
outsl
push
dec
mov
sub
add
lret
scas
scas
cmp
jb
movsl
dec
out
mov
inc
aad
or
mov
ljmp
fs
es
lea
mov
sbb
lods
xor
lahf
cmp
arpl
push
ret
mov
sub
aam
iret
out
mov
pop
cmp
dec
push
int
mov
adc
jg
jo
fldl
test
push
adc
sbb
cs
ljmp
mov
outsl
push
popa
mov
jo
push
aas
push
cmp
lcall
jl
decl
mov
out
sbb
xchg
pusha
mov
in
into
daa
adc
jg
mov
mov
sbb
jl
shrb
fcmovnb
loop
mov
stc
inc
sub
mov
mov
mov
mov
xchg
inc
mov
cmpl
scas
mov
sub
into
sub
dec
fstcw
pushf
jge
ret
cmove
cmp
in
scas
inc
jae
stos
not
jp
mov
add
dec
loope
lret
cld
push
fcoml
loope
lea
or
in
cs
dec
jg
sub
or
inc
jecxz
sbb
push
int
insb
lea
loopne
cmovp
pop
sub
nop
rcl
ljmp
in
push
inc
rolb
jecxz
cmc
xchg
mov
xchg
xchg
jae
sbb
imul
lods
and
pusha
imul
rcll
stos
idivb
jae
xchg
jmp
mov
in
fs
rcrb
pop
cmc
clc
inc
gs
dec
arpl
add
push
outsl
mov
pop
psraw
pop
push
push
mov
push
aad
and
mov
cmp
mov
mov
mov
xchg
push
stos
ss
mov
dec
lock
ljmp
mov
movsb
push
add
ljmp
push
cltd
popf
jecxz
cmp
je
push
jbe
lahf
dec
or
movsb
daa
lods
adc
or
xchg
or
pop
jge
test
test
cmp
stos
cmp
pusha
ret
fs
loopne
outsl
jbe
mov
dec
mov
cmp
imul
loope
adc
mov
sub
cmp
mov
scas
inc
sub
cmp
dec
call
aam
aam
das
fsubl
adc
add
ret
lret
outsb
cmp
pop
sarl
xor
xchg
add
out
jl
cmp
arpl
dec
loopne
repz
adc
lods
sahf
mov
push
xor
xlat
adc
xchg
jo
pop
jb
popf
xor
into
cs
out
mov
jne
stos
in
out
ficoml
icebp
jge
jle
lret
lahf
sti
cmp
aad
mov
lds
imul
add
inc
jbe
loopne
xchg
shl
xor
lret
jno
inc
jg
outsb
fwait
xor
xor
ret
iret
xchg
or
cwtl
inc
popf
jae
or
ljmp
cmp
cmp
jmp
push
xchg
ljmp
add
mov
movsl
sbb
dec
mov
add
mov
cmp
pop
arpl
loope
test
xchg
cmp
dec
jg
mov
roll
or
mov
pop
lods
aad
mov
mov
xorb
or
lret
scas
addr16
int3
xor
pop
sbb
icebp
or
jnp
push
cltd
mov
mov
dec
xchg
mull
cmpsb
cmp
test
rol
xchg
mov
rcrb
mov
add
or
les
inc
cmpsb
mov
fsts
loop
jl
mov
out
jne
call
or
or
jecxz
cmp
lret
popf
into
cmp
insl
rcl
add
out
insb
enter
sub
outsl
xchg
xlat
add
cmp
sub
cli
mov
sbb
sbb
cwtl
cwtl
jno
pusha
mov
std
repz
subb
test
cwtl
sbb
cmp
xchg
andb
mov
fucomp
fadd
cmp
test
scas
cmp
pop
jno
and
subb
cmc
scas
cmp
push
sbbb
sub
neg
pushf
xchg
jb
int3
pop
pop
jae
xchg
xchg
ret
push
cli
jno
and
in
ja
inc
movsl
lahf
jl
cmp
hlt
dec
mov
adc
xor
push
ficomps
outsl
scas
js
shrl
xchg
icebp
jecxz
pop
aaa
ret
imul
into
jle
out
lret
mov
loopne
add
mov
xchg
xchg
mull
insb
popa
sbb
xchg
loop
lds
xchg
bound
lods
xor
mov
mov
cld
adc
pop
pop
cmpsl
test
xchg
stos
fidivl
push
mov
out
loopne
adc
iret
mov
add
push
cmp
fisttpll
fcompp
iret
ret
leave
test
imull
std
pop
xchg
das
pop
arpl
addl
sbb
or
movsl
dec
add
addl
or
movsb
pusha
adc
dec
dec
and
inc
lds
and
push
es
dec
cwtl
out
dec
sbb
loop
mov
lret
pop
in
test
mov
or
inc
pop
mov
ljmp
jae
sbb
into
adc
out
push
push
dec
mov
sbb
cmc
fcmovb
or
fsubrl
cmp
and
cmp
cmp
mov
cld
leave
pop
jb
lret
dec
pop
jle
xor
lds
iret
lret
add
movsb
xchg
inc
fadds
aaa
aad
lock
fsubl
ljmp
inc
imul
iret
push
xchg
xchg
mov
idivl
decb
dec
shrl
cmpsl
sub
mov
lods
mov
sbb
push
mov
pop
mov
sub
ret
inc
jbe
rcr
pop
dec
ficomps
and
push
sbb
lds
jle
ds
mov
idivl
nop
and
xchg
orb
dec
jb
dec
pop
mov
jbe
mov
or
adc
cmp
pusha
negl
ljmp
sbb
rolb
xchg
cmpsl
pop
retw
lea
dec
call
and
outsb
lock
add
inc
and
repz
aaa
push
mov
push
subb
jns
fldpi
cmpl
jmp
cmpsl
out
push
insl
xor
clc
push
jg
push
insl
push
ret
dec
icebp
push
jns
scas
stos
pop
fisubs
lret
cmp
insb
movsl
in
jo
das
stos
orl
jne
inc
add
jno
push
ds
mov
ret
sti
pop
pop
mov
out
in
sbb
and
hlt
mov
in
imul
ds
xchg
push
mov
dec
std
outsb
add
xchg
into
push
popf
call
lcallw
lock
std
push
test
repz
sub
test
cmp
mov
mov
fidivl
stos
lret
ficoml
mov
push
push
add
mov
push
jo
pop
cltd
mov
movsl
sub
cmp
or
mov
rclb
shll
repz
jg
ss
xchg
fwait
add
pusha
cltd
fs
popa
adc
stos
mov
pushf
sbb
cmp
aad
dec
pop
push
push
mov
movsl
aad
adc
pop
mov
add
pop
sub
iret
mov
je
push
je
in
fs
movsl
ret
mov
les
add
enter
insl
call
pop
inc
jo
inc
inc
inc
fxch
sbb
and
test
mov
pushf
jbe
dec
out
xchg
stos
mov
and
jecxz
cmp
or
ds
sub
sbb
cmp
mov
cld
insl
add
enter
clc
add
or
fs
jp
test
and
xor
or
jle
mov
hlt
lods
xchg
xor
inc
sbb
cmp
ss
dec
mov
inc
das
cmp
test
notb
xchg
roll
sbb
jb
sahf
test
jp
inc
pop
fdivl
xchg
fdivl
icebp
subl
popa
cltd
xor
repnz
push
xor
shl
clc
add
int3
push
add
leave
xchg
adc
and
repnz
faddl
mov
repz
xchg
loope
jp
adc
pop
xlat
mov
sti
addl
lcall
and
jmp
dec
movsb
xchg
push
push
leave
lcall
jg
lret
adc
add
xor
popf
cmpb
pop
xchg
sarb
fwait
repz
gs
jae
mov
jl
repnz
add
mov
dec
jne
gs
lods
or
std
test
sbb
jl
subb
in
mov
popa
xchg
xchg
mov
rclb
test
popa
adc
test
cmc
sub
in
dec
push
fmull
jo
aad
movsb
pop
pop
mov
ficoml
cmp
inc
mov
jo
stc
jp
repnz
cmp
and
push
ljmp
dec
mov
movsb
and
shrl
add
mov
rclb
call
and
imul
fwait
mov
sbb
aaa
mov
xor
out
mov
sahf
or
popf
pop
jae
mov
nop
jo
gs
sbb
addr16
test
mov
scas
rcrl
outsl
pop
ja
cmp
in
push
int3
inc
xchg
mov
sub
aas
pushw
push
pop
pop
jecxz
cmc
mov
mov
or
insl
mov
ficomps
aas
daa
sub
outsl
or
mov
inc
fists
test
icebp
sahf
cmc
lods
xor
inc
ss
lahf
and
into
int
mov
lcall
mov
mov
and
int
add
pusha
xchg
and
lods
addl
jnp
inc
stos
fsts
inc
cwtl
movsb
cmc
shrb
je
sbb
sub
xchg
arpl
out
and
xor
jae
push
adc
or
mov
xchg
in
cwtl
pop
mov
push
fidivl
add
mov
xchg
pop
adc
push
jmp
pop
mov
add
and
dec
push
mov
lock
divl
jno
xor
mov
rcrl
insl
and
std
gs
mov
and
jns
jno
cmp
fs
in
sbb
add
xor
and
mov
arpl
dec
test
sahf
mov
pop
inc
sti
pop
pop
mov
stos
inc
stos
sbb
test
pop
dec
shl
lcall
imul
ja
rolb
adc
sarl
mov
push
mov
and
cmp
adc
insl
dec
pop
and
mov
adc
mov
dec
fs
mov
sbb
test
sarl
lret
xor
movsl
mov
stos
inc
mov
add
mov
add
sub
sbb
test
popf
sbb
push
inc
addr16
and
je
sahf
dec
aam
aad
push
data16
orb
stos
dec
xchg
xchg
sub
int
jmp
add
pop
dec
cld
mov
cmpl
sbb
jmp
daa
movsb
int3
fdivs
inc
in
mov
jl
orl
in
js
mov
xor
jl
mov
iret
out
add
and
xor
mov
and
jmp
mov
push
sti
push
movsl
mov
int
sbb
xchg
test
mov
sub
ljmp
insl
insb
xlat
ja
mov
and
cmc
stos
scas
out
decb
sub
add
pop
mov
add
bts
xor
leave
mov
inc
cmp
sbb
cmp
cs
push
mov
fnstcw
pusha
enter
dec
dec
popf
mov
jae
adc
mov
adc
sbb
mov
stos
out
push
subb
sub
mov
adc
or
pushf
notl
jbe
stos
out
decb
fstpl
stc
leave
push
fstpl
pop
test
xchg
sahf
sbb
sbb
sub
mov
pop
bound
add
push
fucomip
dec
in
addl
out
icebp
mov
adc
call
test
loope
jne
sbb
jb
mov
mov
or
sbb
test
sbb
and
and
faddp
xchg
xchg
popf
ffreep
sub
adc
cmpsb
or
add
sahf
pop
mov
pusha
fisttpl
mov
add
inc
dec
mov
sub
lock
cli
imul
pop
aad
jb
nop
cmp
and
sub
test
popf
pop
in
aaa
jbe
push
fimuls
test
cmc
xlat
sub
push
xchg
bound
int3
popa
cmp
movsl
aas
jnp
adc
xor
popa
cld
sbb
sarl
mov
push
cli
pop
aaa
pushf
movsl
and
adcb
andl
add
adc
insl
in
mov
jno
lret
push
pop
leave
fidivrs
rorb
pop
add
xorl
data16
xlat
into
push
xchg
xor
aam
add
movsb
mov
mov
pop
popa
dec
mov
cmp
cli
testb
ja
lock
outsb
push
inc
mov
add
jne
cmc
dec
adc
sbb
aam
das
shlb
mov
push
xor
push
mov
inc
sbb
fisttpl
movsl
shr
jmp
dec
bound
scas
lret
add
out
mov
mov
push
mov
jl
ds
and
or
push
mov
lret
adc
mov
pop
mov
dec
ja
push
ds
insl
jecxz
ucomiss
mov
or
loope
sbb
pop
fnstcw
cwtl
xchg
mov
jo
cmp
sub
or
cwtl
mov
push
test
xchg
mov
xor
fimuls
push
mov
addr16
scas
pop
stos
sub
sahf
fs
adc
add
adc
add
inc
pushf
dec
lock
lahf
rclb
stos
rcrl
xchg
popa
xor
fwait
jg
fwait
jg
mov
xchg
rcrb
sub
out
adc
and
sti
clc
neg
popf
std
jecxz
data16
es
popf
jne
xchg
scas
out
push
lea
aas
dec
loope
xor
jnp
dec
in
aas
and
test
push
imul
dec
sahf
lcall
stos
test
mov
mov
xor
xor
adc
stos
adc
cltd
xor
mov
iret
fnstenv
inc
clc
rclb
cmpsl
pop
xchg
mov
cwtl
xchg
fbld
cltd
mov
pop
add
add
gs
lods
dec
mov
imul
push
lods
test
mov
ds
orl
std
fimuls
lock
mov
sbb
or
out
inc
std
mov
cmp
sbb
adc
rorl
repz
bound
jecxz
jnp
mov
dec
inc
mov
or
jg
je
imul
movsl
arpl
mov
fs
arpl
movb
clc
xchg
push
xchg
push
jle
adc
js
push
fnstenv
push
inc
jg
les
push
movsl
push
and
lds
std
mov
imul
je
mov
push
rorl
mov
jg
mov
insb
dec
jge
push
cmpsb
insl
adcl
or
jmp
adc
mov
push
aaa
sbb
clc
sub
outsb
cmp
sbb
dec
rorb
leave
stos
push
inc
int
push
out
jae
cmp
incb
aaa
fs
push
inc
inc
cld
jg
das
ss
imul
cmp
mov
mov
and
fistl
jae
xchg
push
xor
ja
sub
xchg
mov
mov
push
sub
add
sub
push
sahf
mov
jb
mov
or
push
mov
add
adcb
mov
ds
cmpsl
push
and
add
adc
dec
push
aad
push
add
adc
aad
mov
int
dec
or
sub
lret
mov
outsb
adc
jnp
je
mov
mov
or
inc
sub
js
xchg
mov
mov
call
push
in
loope
ret
cmp
movsb
fadds
ret
in
les
jmp
mov
pop
xor
loopne
jle
mov
orb
mov
fadd
or
psubusb
pop
std
pop
aad
sbb
adc
xor
test
cwtl
cmp
pop
cmp
scas
in
mov
jecxz
in
jne
popa
push
pop
jo
je
scas
test
inc
aad
jmp
add
test
xlat
inc
ret
fsubrl
mov
fwait
push
inc
lods
push
fwait
popa
mov
in
xlat
notb
or
jno
lods
test
in
mov
jle
scas
mov
ja
leave
pop
aas
popf
push
icebp
dec
pop
into
cmpsl
mulb
loop
shr
sbb
inc
jo
imul
aad
fimuls
lock
in
cmp
pusha
ret
jge
xor
fisubs
stos
jp
pop
or
adc
andl
pop
xor
testb
in
aas
mov
clc
bound
insl
sub
insb
imul
cmpsb
out
mov
test
dec
dec
hlt
nop
sbbb
jle
add
push
jns
test
push
pop
out
cli
shrb
pop
cmp
addr16
fstpl
in
jb
cmp
lcall
xchg
and
push
fsubp
adc
xor
subl
jo
pop
xor
xor
cli
pop
mov
mov
cmp
cltd
add
xor
imul
lds
inc
cmp
xor
mov
add
jp
or
xlat
jle
js
insb
out
xor
xchg
dec
popa
cmpsb
sub
jnp
mov
addr16
mov
les
out
scas
mov
call
xchg
pop
lea
xchg
imul
mov
xor
cwtl
mov
mov
cld
push
xor
cltd
or
pop
sbb
add
mov
sbb
adcb
pop
psllw
inc
js
sbb
mov
sub
int3
test
cmpl
sub
xor
pop
cmpsl
jmp
jmp
push
xchg
gs
out
push
push
in
pop
sbb
insl
dec
lret
push
lret
ret
sti
shll
or
imul
lret
jl
pop
add
mov
sarl
and
jae,pt
sub
rorl
sub
lock
jo
mov
xchg
js
dec
push
or
or
adc
std
mov
test
sarb
lcall
mov
mov
iret
outsl
cld
arpl
pop
push
fisttpl
jb
mov
xchg
cmp
xor
adc
loope
jns
sub
out
push
sbb
sbb
movsl
mov
aas
xchg
je
stos
loopne
jl
xlat
jmp
sbb
add
outsl
sbb
outsl
fidivs
in
jg
adc
jne
adc
add
and
push
int
mov
or
cltd
xchg
int3
push
fs
ds
fisubs
inc
push
cmp
jge
ss
xor
out
push
popa
or
add
inc
sbb
in
out
push
inc
adc
imul
std
xchg
inc
test
cmc
in
xor
or
cmp
cmp
jno
mov
xor
or
adc
ret
cwtl
repnz
pushf
mov
loopne
test
out
inc
lods
mov
fbstp
test
jo
jb
mov
mov
dec
add
rcr
and
cmp
mov
add
cmp
xchg
add
insb
ds
adc
sahf
or
mov
add
mov
mov
cmc
loope
cmpsl
jbe
lds
mov
mov
dec
inc
xlat
sbb
stos
imul
nop
mov
in
pop
shll
dec
mov
xchg
mov
pop
mov
fidivs
leave
fidivrl
push
scas
pop
inc
clc
outsl
xorl
sbb
scas
test
addr16
cmp
test
or
dec
xchg
mov
push
lods
cs
loopne
shrl
sarl
fldcw
adc
frstor
xlat
cmp
jp,pt
rcrl
jbe
gs
jmp
push
sbb
mov
daa
mov
fimuls
cmp
jbe
ret
add
shrl
mov
imul
cld
add
jl
cltd
negl
jb
fisttpl
xor
test
sub
sbb
ss
fwait
and
in
stc
lahf
adc
sub
jmp
loope
push
pop
ljmp
adc
lock
xchg
dec
xlat
add
icebp
inc
out
roll
outsb
xchg
std
push
push
ret
sbb
xchg
xchg
lret
cwtl
jg
dec
bound
negl
add
in
mov
jne
popa
sbb
cmp
loopne
xchg
push
jp
mov
pushf
idiv
inc
adc
inc
and
push
push
cltd
mov
or
xor
xor
in
das
sti
mov
xor
filds
cltd
mov
and
inc
sub
mov
sbb
fsubrs
adc
cld
repz
sti
icebp
call
xor
lcall
lds
insb
jl
inc
push
cwtl
push
dec
in
mov
outsb
push
daa
xchg
les
jp
mov
cwtl
testb
and
pop
in
repnz
xchg
xorb
fxch
dec
testl
out
fs
popf
sahf
gs
fisttps
adc
data16
add
jnp
ret
adc
adc
in
loope
cmp
loop
xchg
scas
aas
or
cltd
aam
int3
push
or
and
sub
lret
xor
cmp
lods
jge
imul
mov
push
pop
sub
movsl
popf
inc
les
pop
sub
cwtl
and
in
es
dec
pop
dec
clc
push
in
ja
add
xchg
test
sti
cmp
daa
xor
cmc
and
pop
jle
call
xlat
lcall
ja
pop
cwtl
or
lea
outsl
inc
clc
lahf
jle
push
loopne
ja
mov
inc
pushf
cmp
decl
jo
jbe
jmp
xchg
aaa
repnz
orl
dec
bnd
adc
xor
mov
scas
mov
loope
inc
xor
mov
add
mov
dec
ds
movsl
xchg
xchg
stc
mov
mov
jo
icebp
mov
adc
inc
pop
bound
cltd
push
dec
add
xor
das
inc
mov
sti
or
testb
cmc
inc
sbbb
xor
xor
in
xor
or
fwait
mov
push
and
or
add
leave
out
inc
scas
negl
sbb
jno
sub
cmp
lods
pop
aad
enter
lcall
movsl
xchg
xlat
jae
add
out
cmpsb
leave
sub
cld
aad
daa
hlt
pushf
pushf
or
jb
cltd
pop
outsl
test
jno
or
pop
into
xchg
xor
into
lds
js
and
insb
jns
sub
add
call
js
cmpsb
dec
sti
pop
mov
or
add
jae
pop
iret
inc
dec
cmp
xchg
ret
mov
stos
jecxz
mov
data16
fistpll
xor
pop
fisttps
shlb
pop
lock
pmuludq
pop
jnp
fsubs
jp
xchg
aaa
cltd
movsl
sub
or
add
sbb
leave
dec
fistl
adc
inc
xor
ss
push
das
dec
xchg
in
scas
jg
movsb
in
sbb
xor
adc
xlat
xlat
mov
mov
jns
lcall
push
or
pop
fiadds
push
enter
pop
push
in
or
fistl
test
mull
pop
in
push
xchg
mov
dec
aas
outsb
dec
repnz
jmp
push
push
out
and
faddl
pop
inc
jl
insb
aad
pop
hlt
sbb
fildl
cmp
push
cld
fistpll
int
movsl
mov
ror
outsb
mov
xlat
popf
push
popf
xchg
enter
cmc
adc
arpl
jle
dec
lcall
jne
sahf
pushf
mov
insl
jo
shll
fwait
js
mov
imul
gs
jmp
stos
call
dec
out
dec
jle
mov
push
mov
test
and
ljmp
hlt
paddusb
pop
fisubs
or
jns
push
xor
aaa
adc
mov
iret
xchg
call
pop
jnp
cmpsl
sbb
cltd
sub
mov
lret
in
fldl
test
mov
push
cmp
repnz
push
adc
faddl
cmc
pop
int
inc
hlt
cli
jb
scas
push
pop
in
pushf
jl
cld
push
pop
sbb
mov
neg
sub
hlt
jb
pop
sbb
cmp
pop
adc
lods
js
lcall
pop
in
mov
movsb
in
mov
mov
sub
dec
shll
jmp
aad
jns
pop
out
pop
leave
fisttps
dec
ljmp
aam
fiadds
mov
cmp
fsubp
fmulp
sub
lods
sub
xlat
aam
insb
sub
scas
ret
cmp
push
jno
or
or
pop
xchg
adc
int
mov
add
loopne
lret
cmp
or
sarl
mov
lock
adc
fcmovnu
xor
out
jp
adc
mov
xchg
cmc
pop
ds
mov
pop
loopne
jle
xor
sbbb
sar
adc
imul
xchg
sbb
jae
xchg
fldenv
and
mov
ds
mov
cmpsl
dec
adc
xlat
or
sub
dec
or
test
nop
lock
adc
test
and
jle
or
out
out
shr
xchg
pop
mov
popf
cmpsb
ds
mov
sub
xchg
lret
adc
es
in
sub
xchg
aaa
insl
ds
outsb
outsl
sbb
sti
pop
sahf
out
sbb
inc
pop
pop
aad
inc
test
imul
cmp
dec
fdivs
enter
xchg
shll
jmp
clc
or
mov
pop
cmpsb
xor
jmp
push
jnp
mov
mov
mov
add
or
clc
pop
repnz
es
pusha
mov
xchg
mov
sbb
mov
push
push
and
ja
push
push
and
dec
jb
pop
dec
mov
mov
add
push
cmp
lock
outsl
loope
jl
mov
xchg
inc
xchg
inc
movsb
mov
sbb
or
call
je
xlat
call
or
mov
or
gs
push
push
out
ds
inc
fisubl
mov
es
add
mov
bound
mov
pcmpgtd
enter
ret
in
push
cltd
fstpt
lret
pop
xor
out
dec
xchg
cld
mov
adc
mov
dec
rorl
rcrl
push
or
adc
dec
pop
add
cmpsl
inc
dec
sub
xchg
ja
loopne
adc
xor
mov
jo,pn
les
cli
gs
data16
cmp
popa
add
lahf
in
push
adc
xor
movsb
xchg
cltd
inc
aaa
stos
outsb
cli
and
adc
and
push
or
int3
test
imul
pop
cld
push
inc
ljmp
fimuls
out
inc
cmp
lea
xchg
shrl
jle
mov
enter
jnp
cmp
xor
add
test
xlat
add
std
filds
push
cld
enter
jp
push
push
sub
sub
bound
pop
mov
cmp
imul
xor
fdivr
rorb
push
push
sub
dec
fsubl
fmuls
xor
gs
pop
add
fwait
pop
dec
dec
addr16
dec
or
mov
movsl
cld
push
imul
pop
rcll
mov
push
and
jg
ss
scas
aam
iret
push
stos
mov
pusha
jecxz
xchg
mov
xor
push
inc
push
mov
cli
push
inc
add
loopne
cmpsl
into
sub
mov
sti
mov
and
clc
jmp
adc
lods
sub
jl
inc
aas
and
test
jecxz
cmp
or
mov
lods
lock
cmp
fldcw
jmp
das
sti
int3
out
rclb
outsb
stc
sbb
ds
sbbl
addr16
inc
sbb
push
dec
fdivrl
add
lret
cmp
jge
xor
inc
and
or
sub
add
test
scas
aas
xor
lret
push
jmp
fcompl
lret
das
or
mov
and
out
mov
scas
ret
jno
leave
mov
dec
cmp
push
jb
xor
pmaxub
xchg
call
data16
or
mov
lret
shll
lahf
bound
cmp
mov
mov
sub
rep
xchg
push
stos
in
dec
pop
push
mov
cmp
lret
and
pop
pop
inc
pop
dec
repz
and
sub
mulps
xchg
shlb
ret
pop
xchg
stos
movsl
jle
idivl
mov
loop
mov
enter
imul
sub
cmp
push
ja
shll
notb
add
xor
aad
sub
inc
mov
and
xor
das
out
data16
push
mov
es
push
fwait
dec
mov
sbb
scas
mov
xor
pop
push
out
or
or
icebp
test
adc
out
ret
cmc
cmp
adc
popf
in
mov
jne
or
adc
xchg
rorb
inc
sbb
fsubrs
jmp
xchg
cmp
sub
lahf
mov
pop
mov
inc
ljmp
mov
xchg
jecxz
pushf
push
test
push
xor
cmc
loop
pushl
xor
rcl
inc
ficoml
sub
sarb
jo
adc
sbb
icebp
sbb
xchg
dec
neg
clc
xor
mov
gs
aam
fdivr
call
inc
and
fisttpl
xchg
out
in
push
jmp
dec
mov
pusha
pop
mov
js
lods
addr16
xchg
dec
loope
dec
pushl
ret
in
imul
in
cmpsl
pop
cmc
cs
and
and
mov
pop
mov
cmp
push
ljmp
fs
nop
jle
xchg
ds
mov
in
into
call
cvtps2pi
mov
adc
test
cmpsb
or
cmp
jecxz
hlt
jno
mov
dec
xchg
sbb
in
sub
push
out
std
pop
sti
ds
push
rcrl
iret
fwait
inc
mov
ret
xor
scas
mov
and
xchg
int3
ja
fsub
fnstenv
lret
and
mov
popf
mov
test
in
xchg
pop
dec
and
xchg
stos
pushf
shll
pop
pop
fcomps
addr16
arpl
xor
or
add
adc
ljmp
jae
aas
int
or
sub
std
and
xlat
or
loope
gs
sbb
jae
and
push
and
int
outsl
pop
into
movl
or
int
xor
insb
mov
xor
pop
test
loop
imul
push
fwait
jbe
aam
jp
adc
xor
and
add
adc
adc
add
dec
xor
gs
in
push
push
mov
fistl
xchg
cmc
mov
push
in
or
fwait
imul
ret
les
adc
xor
adcb
xchg
mov
jecxz
xor
dec
dec
int3
push
mov
and
push
xor
insb
fdivrl
sub
std
daa
lods
adc
dec
and
cs
add
lret
jl
ret
mov
outsb
or
cmp
in
shl
xor
ljmp
jge
pop
xor
movsl
daa
pop
dec
dec
js
ss
sahf
cltd
cmp
outsb
insl
push
mov
inc
popa
wbinvd
cmpsb
in
lds
pop
mov
jp
aad
add
stos
test
mov
sub
xlat
lret
sub
bound
mov
pusha
aas
inc
xor
in
rcrl
fisubs
mov
xchg
mov
adc
jg
xchg
mov
inc
mov
jb
daa
push
inc
xor
dec
nop
jl
dec
outsb
sub
fs
adc
mov
mov
faddp
pop
mov
les
push
mov
jecxz
jnp
hlt
ret
push
inc
shrl
push
add
mov
xor
fnstenv
fcmovbe
and
xor
mov
adc
movsb
sub
xor
lcall
test
jp
out
lret
xchg
adc
and
movsl
xchg
sbb
std
shl
in
dec
or
dec
mov
inc
bound
pop
fisttpll
add
loopne
dec
popa
fwait
xchg
cmp
xor
xor
mov
pop
fbld
jno
adc
pop
jecxz
sub
mov
dec
aas
or
inc
scas
popa
mov
in
fs
das
arpl
add
inc
mov
mov
je
xor
push
stc
pop
inc
mov
nop
out
test
xchg
mov
test
xchg
in
mov
lods
ret
inc
orb
in
faddl
out
mov
test
xchg
out
adc
mov
xchg
sub
unpckhps
jecxz
icebp
popf
fld
pop
xchg
mov
xorb
jnp
fstpl
icebp
std
aas
or
fs
xchg
fildll
cli
push
mov
add
aas
jns
xlat
cmpsb
into
xor
pop
pop
fs
xor
test
jle
add
dec
sub
mov
xor
sti
mov
jl
mov
sarb
aad
or
cmpl
and
jecxz
rol
pop
insl
test
mov
mov
adc
das
jo
int
sub
cld
sub
xor
dec
jnp
mov
mov
jecxz
sub
lret
cmp
xchg
jle
add
les
push
fildll
and
cmp
pop
xor
mov
cmp
movsb
lcall
mov
outsb
mov
lret
and
adc
xchg
pop
mov
mov
xor
in
cmp
xchg
xchg
dec
orb
rol
sub
mov
mov
rcll
jb
ss
out
mov
sbb
mov
cmp
clc
pop
lea
inc
fildll
insb
add
push
pop
out
sub
ret
test
inc
push
das
addb
lret
mov
mov
cmp
mov
jne
cmp
outsb
xor
sub
movsl
adc
rorl
and
dec
mov
mov
add
cmpsb
into
mov
push
test
mov
dec
fisubrs
aam
jbe
imul
imul
popa
inc
mov
jmp
xlat
aas
popa
stos
out
bound
fldenv
push
jp
mov
mov
jmp
dec
push
cltd
faddl
push
popl
pop
pusha
mov
mov
cltd
out
repz
fstp
mov
push
add
push
xor
and
ss
sbb
sbb
add
pusha
out
jg
dec
push
or
mov
xchg
inc
aas
dec
xlat
or
mov
std
iret
xchg
repnz
cwtl
out
xor
andb
test
loopne
daa
xor
pop
sbb
xor
mov
mov
lahf
fiadds
and
cmp
xchg
sub
out
xchg
pushf
jge
les
mov
pop
adc
in
fidivl
outsl
adc
mov
pop
pop
dec
loop
daa
les
xchg
mov
adc
dec
ja
pop
scas
arpl
aad
mov
clc
cmp
in
push
jmp
xor
sbb
dec
in
pop
cmp
es
pop
mov
or
or
cmp
dec
lods
sbb
and
mov
mov
add
and
add
add
pushf
dec
push
lahf
mov
cmpsb
insb
ljmp
push
jmp
sbb
loopne
test
or
outsl
ja,pn
xchg
mov
ja
add
mov
cmp
jnp
arpl
out
xchg
or
cli
adc
ret
movsl
jg
add
lahf
adc
in
jl
adc
and
push
nop
add
xchg
addr16
sub
shll
jns
fisttpl
and
lret
inc
fmull
jmp
enter
pop
xor
rorl
dec
js
repz
pushf
lea
adc
sub
stc
movsl
push
roll
mov
in
ja
movsl
dec
out
mov
dec
sbbl
jnp
mov
in
adc
xchg
shll
into
cmp
push
outsl
aaa
cmp
ret
xchg
imul
imulb
pop
xchg
inc
mov
sbb
mov
pop
mov
inc
pop
mov
sub
xor
push
adc
jle
andl
dec
dec
loopne
fcomps
cmc
jecxz
mov
cwtl
jns
cltd
lcall
push
bound
aaa
aaa
jmp
daa
xchg
and
mov
sbb
adc
push
pop
imul
inc
dec
daa
inc
xchg
pop
outsb
adc
data16
shlb
pop
cld
lock
orl
in
loope
pop
in
loop
loop
lock
xor
cmp
jmp
and
mov
xchg
hlt
insb
fldpi
cmp
ret
test
push
divb
rcr
push
xchg
mov
sub
iret
or
pop
jmp
int3
mov
scas
cmp
mov
mov
movsb
push
int3
dec
and
mull
repnz
pop
xor
ud0
cmc
pop
xchg
add
jle
cmpsb
stc
cmp
jg
lret
sub
mov
sbb
mov
mov
mov
mov
pop
ficoml
xchg
addr16
aaa
jge
outsl
dec
dec
addr16
shrb
mov
int
sbb
sub
dec
adc
xor
cli
pop
stos
sbb
rcrb
dec
sbb
in
add
popa
xchg
rorb
and
rcrb
aad
negl
add
push
mov
mov
int
xor
loop
cmp
leave
lock
push
int
push
pop
xorl
aaa
movsl
es
fcmovu
pop
or
lea
dec
ss
push
jns
leave
ja
cmp
mov
insb
sbb
arpl
cmp
sub
dec
push
and
enter
push
xchg
lret
jb
outsb
mov
mov
add
gs
xor
cltd
pop
dec
jge
mov
adc
or
jae
xchg
jle
inc
jae
xchg
dec
loop
mov
movsl
xor
rcrb
lock
sar
pop
and
inc
inc
fstpl
test
push
enter
dec
mov
jno
cwtl
inc
adc
insb
fcmove
into
pop
adcb
mov
push
clc
pushl
mov
daa
test
jo
add
sbb
or
mov
mov
push
mull
mov
mov
mov
sbb
mov
imull
cmp
ret
or
cmp
stc
scas
jns
je
fsubl
aaa
jae
rol
leave
xchg
lret
mov
mov
in
loop
push
lret
xor
sbb
jno
fwait
adc
jle
lds
fldenv
jnp
mov
jae
sub
icebp
dec
sub
or
jns
outsb
or
cmovne
in
dec
inc
repnz
adc
push
dec
pop
adc
mov
dec
ret
aam
mov
push
mov
jns
mov
mov
nop
fisubrl
call
rclb
pop
cltd
call
mov
rcrl
xchg
nop
mov
and
ds
das
cld
push
and
loop
xor
jg
addr16
sbb
std
sahf
hlt
add
sub
mov
outsl
scas
sub
inc
cmp
ds
pop
fcmovbe
jns
xor
cmp
ficompl
xor
add
add
popa
arpl
ret
fdivrl
sbb
cwtl
cltd
cmp
shrl
outsl
fistpll
push
mov
or
or
push
dec
and
jl
leave
movsl
xchg
fmul
jmp
xor
leave
mov
pop
repnz
jp
cmp
loope
cmp
xchg
dec
sbb
push
and
into
cs
sub
push
mov
xchg
filds
pop
je
adc
aad
shlb
adc
sub
lahf
test
xchg
sub
jge
dec
gs
je
push
dec
fcomps
pop
xchg
in
cli
cli
rcll
jge
adc
mov
xlat
sarl
pusha
in
push
jge
aad
test
aas
cmpsl
lret
or
pop
push
cmp
xor
popa
jmp
inc
adc
xchg
out
les
xor
jne
orl
jl
jne
out
adc
push
std
cmpsl
pop
inc
cmpsl
rorl
add
aas
cmp
dec
stos
cmc
mov
mov
push
or
sbb
out
out
adc
iret
cld
mov
inc
adc
mov
push
fisubs
jecxz
mov
ljmp
push
test
add
mov
adc
push
push
cltd
add
push
cltd
imul
rcrb
fidivrs
repnz
push
sub
out
xor
mov
jne
lds
pop
cmp
movups
aaa
xchg
mov
fsubrl
mov
ljmp
scas
add
pop
fwait
sub
lret
jl
arpl
xor
and
jb
scas
adc
and
pushf
push
ja
or
xchg
jle
or
fadd
push
lds
mov
jp
ja
cs
add
mov
xchg
push
int
sbb
stos
add
arpl
fwait
adc
mov
shl
repnz
lret
jmp
enter
mov
xorl
mov
stos
call
popf
cmp
pop
adc
iret
stc
xor
js
sbb
lods
sbb
pop
cltd
loop
enter
imul
mov
inc
adc
dec
cmp
jl
sub
test
and
push
movsl
mov
fwait
jno
std
cmp
add
popa
cmp
inc
daa
cmpsl
fmull
test
cmp
lcall
aam
in
xlat
pop
pusha
xlat
mov
test
pop
adc
popa
xchg
push
imulb
js
push
mov
mov
or
pop
dec
std
dec
dec
sbb
aas
lcall
scas
and
repz
pushl
sahf
and
xor
jp
movsb
and
sub
xlat
dec
leave
jno
push
jp
in
lret
fwait
pop
xchg
lods
sub
lods
mov
add
shll
push
add
push
mov
xchg
or
inc
mov
jle
int
jnp
bound
cli
xor
and
jbe
lcall
xlat
pop
arpl
roll
xchg
sub
cmp
xchg
decl
sub
xchg
push
and
aaa
ret
mov
xchg
mov
or
push
inc
fistpll
mov
inc
xlat
sub
sbb
sub
andl
hlt
sub
inc
or
cltd
or
std
cmc
xchg
ljmp
pop
mov
push
pop
out
out
inc
jne
out
neg
mov
xchg
add
push
aas
sub
cltd
fs
mov
xor
mov
and
mov
xchg
in
ds
fdivrp
jae
fmulp
and
add
xor
jnp
out
sti
into
gs
imulb
shll
mov
push
mov
or
repz
sarl
daa
arpl
mov
fdivs
jns
xchg
aas
inc
incb
ret
je
icebp
lds
sbbl
inc
pop
inc
call
cmc
or
pop
stos
xchg
inc
pop
mov
ljmp
mov
cmpsb
jge
push
call
gs
inc
xchg
ds
cmc
mov
in
repz
cli
push
popa
das
pop
out
cld
movsb
fstps
jno
inc
testb
xlat
push
clc
pushf
or
imul
sbb
pop
ljmp
xorb
pop
addr16
pushf
add
cs
das
push
mov
inc
cmp
mov
mov
sbb
mov
loope
imul
mulb
adcl
pushf
jnp
dec
orl
inc
dec
add
outsl
xchg
cld
push
xor
xchg
or
repnz
daa
jnp
dec
scas
or
push
push
ja
add
xchg
fdivrl
hlt
outsb
dec
mov
adc
cmp
cld
rcrb
sahf
out
insl
addr16
js
insb
and
lea
hlt
push
out
jns
loop
dec
jmp
jns
sbb
mov
test
add
test
cs
pop
and
xorb
ljmp
shrl
pop
cld
adc
aaa
mov
pop
xlat
xchg
movsl
int3
stos
pop
repz
je
mov
jmp
std
lock
pop
sti
add
hlt
mov
jns
scas
dec
sub
adc
stos
test
xchg
mov
sub
outsl
and
scas
jns
fisttpl
inc
pop
loop
pop
jp
movsb
fisubrl
es
xchg
push
loopne
pop
jae
out
xor
lret
pop
dec
or
push
fcomp
data16
push
int3
or
xor
xor
shll
in
or
pop
mov
mov
push
aaa
pusha
sbb
and
rclb
and
andb
ljmp
stc
mov
adc
mov
repnz
inc
lret
sbbl
lcall
aad
dec
xchg
push
dec
pushf
mov
mov
ja
inc
scas
push
mov
mov
add
mov
jge
dec
push
flds
mov
mov
lret
repz
jb
jge
mov
test
daa
adc
inc
push
or
mov
movsl
add
out
addb
and
stc
insb
pop
mov
xchg
mov
jne
out
xchg
lds
popf
stos
mov
ljmp
in
rcrl
es
dec
movsb
sahf
adc
xchg
adc
pop
and
dec
lret
daa
dec
sbb
cmp
sahf
push
je
and
les
cwtl
dec
shrl
fidivs
outsb
sbb
inc
sbb
lods
dec
movsl
cs
inc
popa
or
insl
mov
sahf
xor
mov
arpl
and
pop
push
fucomi
jo
and
xchg
push
jnp
popa
xchg
js
xchg
lods
push
jl
inc
mov
mov
add
mov
and
rol
mov
movsl
cmpsb
sti
orl
push
jge
inc
jl
fisubrl
mov
sub
jecxz
out
iret
in
push
xchg
xchg
sub
cmp
mov
cmpsb
cvtps2pi
bound
loopne
xor
pop
pop
in
add
mov
or
cli
fwait
stc
out
jo
inc
stc
mov
push
inc
lods
sbb
push
mov
ljmp
movsb
stos
sbb
rcr
repz
lea
mov
lret
sub
popf
push
arpl
leave
repnz
pop
shl
out
pop
or
mov
xchg
pop
fucomi
jecxz
mov
dec
mov
sub
sub
out
imul
test
xchg
aaa
ror
cmc
push
xchg
xchg
dec
ja
xchg
in
stos
mov
fwait
imul
push
mov
roll
inc
shll
mov
jg
mov
pop
xor
add
or
cmp
xor
pusha
push
lcall
jne
and
or
xchg
call
cmp
mov
in
fisubrl
movsl
arpl
popa
and
inc
jnp
mov
fs
push
adc
mov
push
fidivl
iret
testl
sbb
das
out
mov
or
dec
mov
sub
out
or
jnp
adc
outsb
push
out
push
inc
aad
pusha
mov
notl
sbb
jge
iret
rcll
cli
push
scas
gs
mov
gs
test
stos
and
dec
fsub
repz
mov
dec
adc
dec
jl
jp
scas
jmp
ds
inc
pushf
aam
fs
pop
enter
test
arpl
sbb
cld
nop
push
pop
adc
jg
bound
adc
xchg
mov
scas
shlb
pop
inc
ret
arpl
movsl
mov
inc
loope
xchg
jo
jg
loop
cwtl
jecxz
bnd
and
loope
jp
jle
jae
sub
popf
pop
pop
mov
sbb
or
js
add
mov
push
mov
rorl
call
repnz
lods
and
mov
mov
add
mov
sbb
addr16
add
adc
add
aam
in
jne
xor
and
sbb
xor
mov
add
stc
bound
ucomiss
arpl
jo
xchg
pop
nop
inc
pop
mulb
lret
push
in
add
ja
mov
jae
adcb
jmp
and
fs
jb
pop
mov
mov
inc
sbb
push
jle
inc
ds
sbb
aas
jae
mov
icebp
or
jp
cmp
into
push
ja
push
stos
rcr
lods
sbb
jle
mov
sbb
pop
mov
aas
add
loopne
aam
movsb
aad
adc
movsl
std
cmc
jne
dec
mov
js
es
mull
call
push
outsb
sbb
sub
dec
or
imul
js
std
add
push
mov
add
es
pop
addr16
cmp
xlat
pop
aad
sub
xor
pop
adc
gs
sub
and
jne
ss
add
in
imul
jmp
stos
jo
lret
mov
add
cmp
pop
sub
sub
mov
or
xor
cmp
mov
add
int
arpl
into
pop
sub
mov
push
pop
add
movsl
cmp
jmp
mov
std
xorl
inc
adc
ds
movsb
rcrl
adc
in
leave
iret
and
cli
sbb
rorl
call
sbb
cmpsb
test
push
and
scas
sub
jnp
pusha
sahf
ret
or
cmp
xor
push
scas
pop
sbb
pop
lds
out
insl
cmpsl
xchg
stc
mov
cmp
cwtl
das
mov
or
movsb
fwait
in
call
int3
mov
int3
test
push
hlt
dec
dec
mov
mov
dec
sbb
mov
repz
fwait
jo
xchg
addb
jnp
pusha
out
pop
lret
shr
loop
dec
sbb
ljmp
movsl
xchg
mov
cmp
mov
faddl
dec
jp
mov
pop
das
pop
daa
cli
add
dec
or
inc
fchs
dec
fs
leave
or
inc
and
scas
pusha
pop
std
sub
push
mov
arpl
cli
popa
jle
xchg
lahf
xor
jp
xchg
adc
aas
popf
insl
mov
mov
xchg
sti
sbb
dec
mov
jge
lahf
push
push
dec
repz
pop
mov
sahf
add
adc
mov
es
add
add
mov
pop
pop
pop
xor
fadd
sbb
cltd
test
in
repz
pop
mov
xor
nop
addb
push
loopne
mov
ret
aam
add
or
adc
xorl
call
dec
sbb
jg
lahf
mov
repnz
mov
loope
jle
test
test
push
jg
rolb
mov
mov
xor
inc
dec
popa
stos
ret
arpl
add
inc
push
ss
sub
sbb
pop
andb
jmp
mov
in
mov
cld
mov
adc
cmpsb
loop
inc
int
jp
push
push
push
call
popf
int
add
ret
cmp
add
loope,pt
mov
sbb
sbb
sub
mov
cmp
pop
or
mov
repnz
or
pop
fldcw
adc
or
stc
sub
jb,pt
out
jecxz
cmp
syscall
add
add
sub
jne
cmc
fstps
std
and
mov
lods
out
push
popf
jl
cs
mov
xor
or
mov
lods
ret
fwait
daa
push
push
insl
xlat
enter
or
call
sbb
jecxz
jae
hlt
cmp
dec
or
jge
and
sbb
pop
inc
fisttpll
xor
in
shlb
pinsrw
cmpsw
mov
sub
repz
cmp
enter
mov
push
pop
xchg
and
adc
xor
sbb
xchg
and
push
notl
js
cmp
icebp
je
dec
cld
and
and
add
ret
add
outsb
lret
mov
les
aas
stc
lret
insl
fistpll
outsl
pop
sbb
adc
test
int
mov
cs
stos
pop
dec
jbe
dec
loop
leave
das
test
scas
cltd
ret
pushf
aaa
mov
cmpsb
addr16
mov
sub
adc
xor
rcrl
negb
and
xchg
xchg
sbb
add
xor
mov
popf
test
in
orl
clc
clc
loopne
add
mov
lahf
push
xorb
fstl
push
sarl
inc
jbe
or
aad
loope
push
shll
enter
fnstenv
sub
mov
sbb
insb
shll
sti
inc
sub
nop
fisttps
rcll
jmp
xchg
sub
out
shll
stos
adc
decb
js
insl
mov
push
inc
pushw
cwtl
xchg
mov
outsl
inc
adc
cmpsb
add
pop
test
cmp
adc
cmc
ja
xchg
jl
outsl
test
cli
xchg
push
jmp
arpl
xor
enter
outsl
outsl
mov
push
lods
push
jle
call
sarl
call
dec
test
jge
xorl
push
jle
shrb
insb
cwtl
fistps
push
stos
push
xor
aad
dec
jg
mov
je
sbb
mov
test
rcr
testb
aad
mov
out
lret
lds
cmp
fidivrl
pop
adc
lret
and
popa
jmp
xchg
pop
cmp
push
in
clc
xchg
imulb
sub
rol
pop
lods
test
lds
lds
or
div
jecxz
imul
mov
dec
sub
or
mov
pop
int
incb
inc
ljmp
iret
hlt
sbb
fcoms
and
push
cmpl
dec
mov
xor
add
test
add
psubw
jb
adc
cmc
dec
scas
mov
fwait
cmp
lret
cmp
roll
sub
and
in
xchg
insl
pop
lock
sbbl
xchg
leave
decb
sbb
or
fstps
dec
inc
mov
xchg
adc
fs
stos
test
ja
lret
sbb
push
sbb
rcrb
mov
rol
mov
and
ret
sbb
lds
pop
inc
aam
int3
in
pop
aaa
xchg
dec
ja
jae
or
or
sub
std
bound
mov
lds
aam
pop
push
sub
int3
inc
inc
aad
and
ljmp
xchg
jmp
iret
test
jnp
mov
jl
pusha
paddsw
into
leave
push
arpl
adc
adc
popf
jno
xor
rcrl
mov
mov
fxch
push
andl
ds
nop
or
mov
out
cmc
mov
scas
mov
dec
mov
push
stos
sahf
out
test
and
mov
mov
pop
cld
out
insb
push
movsb
fnstsw
mov
test
aas
loope
pop
inc
sub
inc
fbld
arpl
sbb
es
adc
mov
sbb
push
imul
fwait
and
jno
je
test
rcrb
cmp
push
enter
adc
mov
xor
pop
ljmp
and
sahf
stc
sbb
cmp
dec
les
negl
faddp
xchg
or
add
outsl
sbb
std
cmp
clc
and
push
mov
mov
mov
data16
xor
jae
push
dec
add
test
mov
dec
int3
stos
xor
xchg
adc
ficoms
xchg
ret
imull
lret
sub
int3
stc
fcompl
cld
test
adc
fmull
nop
adc
cltd
imul
pop
jmp
pusha
and
and
pop
arpl
fs
inc
ss
or
sbb
push
mov
mov
iret
cmovb
or
in
lret
dec
mov
out
inc
sbb
pop
push
and
jecxz
add
dec
pushf
pop
int3
pop
icebp
das
arpl
inc
fs
stos
pop
xchg
jmp
xchg
push
sbb
and
mov
jg
mov
dec
mov
ret
loopne
push
test
xchg
leave
into
test
out
insb
aad
frstor
inc
xor
into
mov
addr16
or
mov
ss
xchg
lret
jnp
enter
mov
mov
sti
jbe
pop
xorb
lcall
lcall
or
xchg
subl
clc
dec
add
cmp
dec
adc
mov
clc
sbb
je
repz
cmp
or
mov
ret
popa
push
clc
or
mov
pop
sbb
xor
add
xor
std
fbld
push
stc
outsb
dec
lds
mov
push
pop
mov
movsb
into
into
ret
jb
fxtract
sar
pslld
out
pop
xchg
push
fcmovnb
sbb
stos
and
push
dec
add
xchg
rolb
lds
out
nop
aaa
pop
xor
pop
inc
fs
sbb
enter
xor
or
sub
pop
jb
lahf
mov
lds
dec
iret
adc
cs
cmc
xchg
repnz
mov
jmp
adc
in
insl
cmpsl
repnz
xor
repz
mov
mov
adc
sarb
sub
sbb
xchg
ret
mov
loop
fwait
adc
ljmp
lret
sahf
xchg
shl
jle
inc
jmp
aad
adcl
lcall
mov
push
xchg
jnp
out
pop
pusha
jecxz
stc
in
shlb
pop
lahf
pop
fimuls
enter
push
cmp
stos
mov
inc
mov
gs
das
dec
inc
xchg
out
mov
arpl
test
sub
inc
dec
pop
outsl
repz
jecxz
xchg
dec
and
sub
pop
mov
flds
dec
and
repnz
dec
aad
push
dec
or
or
xchg
adcb
add
stos
inc
inc
pcmpeqd
mov
std
dec
add
xor
xchg
adc
call
outsb
jle
jmp
jmp
lret
popf
cmp
repnz
mov
jg
scas
mulb
in
bound
inc
push
repnz
imul
pop
mov
mov
jle
pop
lret
add
ds
sub
cmpsl
in
inc
int
hlt
lahf
cmp
jno
xchg
dec
mov
pop
or
stc
mov
lea
and
imul
push
clc
out
adc
stos
popa
jecxz
jle
data16
scas
icebp
or
fndisi(8087
addr16
out
loop
shll
out
jle
cmp
imul
fnsave
lock
pop
mov
cwtl
stc
xchg
xor
xchg
add
push
inc
sbb
inc
or
out
int
in
leave
pop
push
inc
pop
xor
push
sub
fnsetpm(287
in
add
daa
das
xchg
sub
or
shrb
mov
pop
and
ss
mov
ds
out
sbb
inc
pop
and
into
rcrl
mov
les
roll
add
fstps
in
mov
push
icebp
scas
mov
in
test
push
inc
test
cmc
and
xchg
mov
loope
in
shll
push
into
sarw
and
mov
mov
mov
ficomps
xchg
jp
sub
in
movsl
xor
sti
push
fs
bound
inc
xor
jge
pop
ror
movsb
rcl
inc
filds
aam
xchg
adc
mov
pop
arpl
pushf
fisubrl
in
ja
dec
mov
test
std
jns
add
fldt
bnd
mov
mov
inc
inc
insl
mov
imul
fdivs
cwtl
adc
fisubl
dec
sbb
pop
out
jge
pop
xchg
loopne
aam
inc
movsl
mov
push
fidivl
inc
push
adc
lahf
outsb
dec
xchg
test
sub
sub
jo
stc
lds
loopne
push
dec
mov
mov
outsl
mov
jbe
mov
pop
popa
out
out
adc
pop
fs
mov
dec
dec
mov
mov
sbb
negb
mov
cmp
push
sub
push
loopne
movl
xlat
push
add
out
bound
nop
and
push
xchg
test
daa
lds
add
xor
repnz
sub
leave
jb
xchg
test
testb
clc
movsl
ret
stos
ljmp
ss
sahf
pop
insl
dec
sub
and
aaa
imul
popa
cwtl
dec
dec
and
leave
and
addr16
inc
push
or
cmp
push
jg
add
and
scas
jmp
sbb
push
mov
lcall
mov
icebp
fisttpl
push
mov
cmp
fistps
jmp
sub
out
pushf
sbb
iret
cmp
cmp
lea
lret
js
dec
mov
or
sub
mov
ss
xchg
inc
jnp
cmp
push
xor
dec
pop
lcall
mov
aam
and
sbb
das
test
push
clc
divb
mov
insb
and
jne
add
xlat
pop
xchg
movsb
aaa
xor
int3
fnsave
out
int
inc
pop
into
push
cmpsl
inc
or
push
andb
daa
dec
movsl
mov
pop
xor
scas
or
sub
es
inc
mov
xor
push
jne
movsb
push
stc
imul
xor
out
stos
sbb
mov
xor
pusha
add
call
push
jle
add
dec
aaa
iret
jne
xchg
pusha
sbb
or
stos
aas
loope
idivb
or
sbb
mov
lret
lea
cmp
scas
fs
movsl
mov
add
cmc
jae
and
das
jno
aam
add
rorl
negl
lods
mov
movq
push
xchg
das
mov
inc
pop
inc
mov
mov
pop
repnz
mov
push
lcall
fs
push
sub
sbb
pop
xchg
cmpsb
bound
mov
xchg
jno
adc
cmp
adc
lahf
inc
sbb
and
xchg
js
in
arpl
sub
sub
pop
adc
jnp
adc
mov
cmp
pusha
sub
sbb
dec
kaddw
jge
out
rcrl
aas
pop
pusha
xchg
stc
fisubl
xor
inc
ja
add
test
rorb
or
add
and
add
sub
loope
lock
jne
jae
cmpsb
pop
push
inc
into
dec
ss
sub
in
jne
ficoms
sub
test
bound
cmpsl
dec
lods
or
dec
rorb
push
ja
mov
adc
daa
xchg
mov
xor
inc
js
movb
js
js
repnz
xor
popa
jo
je
push
and
movswl
jmp
add
lcall
fisttpll
das
jns
std
stos
movsl
mov
mov
pusha
sbb
ret
sub
std
jnp
pop
and
jmp
xchg
js
xor
lds
lsl
sbb
repz
cmpsw
lods
push
scas
pop
out
jne
mov
test
loopne
and
add
sbb
jge
leave
jne
es
inc
xor
jecxz
je
ljmp
fcompl
inc
loop
bound
pop
pop
pop
in
pop
outsb
mov
pop
cmp
jae
in
add
mov
sbb
repz
lcall
xchg
lcall
addr16
pop
mov
mov
lock
xchg
push
mov
cs
pop
shrb
adc
jno
xchg
sahf
mov
mov
xor
insl
mov
dec
fisttpl
mov
pop
loope
mov
jbe
mov
lcall
mov
xchg
cmp
pop
add
outsb
idivb
sahf
jbe
stos
sbb
cmpsl
data16
adc
fistl
sbb
sbb
fs
cmp
adc
pop
insl
imul
xchg
lock
mov
mov
pop
xchg
jns
mov
add
mov
mov
test
clc
lret
cs
leave
push
rol
cmp
popf
push
sub
push
xchg
cmp
pop
push
leave
fcmove
mov
sarb
cmp
mov
push
and
and
mov
mov
dec
dec
jae
mov
outsl
dec
push
add
or
popf
lcall
std
inc
cmp
dec
push
pop
lea
xorl
pushf
mov
clc
push
mov
add
mov
pusha
inc
mov
pop
mov
out
rcll
scas
divb
dec
mov
and
in
loopne
inc
repz
test
dec
insl
jb
daa
cmp
sbb
stos
rorb
cmp
xor
inc
mov
loop
outsb
cmpsb
enter
inc
arpl
mov
imul
fldl
xor
fdecstp
add
test
cmp
iret
xor
or
or
jno
pop
loopne
pop
mov
or
or
enter
mov
mov
movsb
xor
push
pop
adcb
xchg
nop
pop
jmp
jmp
les
cmp
fmuls
push
lods
aaa
addr16
fwait
inc
adc
inc
add
and
pusha
out
int3
sub
outsb
addr16
dec
mov
add
or
sbb
ret
mov
je
jge
negb
pushf
adc
cwtl
loop
je
jecxz
jns
nop
mov
das
push
pop
inc
rcl
ljmp
add
dec
shlb
jnp
testb
push
mov
and
subb
dec
cmpl
sub
mov
out
lcall
and
jno
pop
mull
dec
push
mov
lcall
bound
fiaddl
stos
jns
pminub
sbb
cli
fsubrl
jnp
lds
popa
hlt
sub
mov
sub
shlb
add
rolb
and
jle
jle
jl
nop
mov
adc
outsl
ret
call
mov
stos
pop
push
and
cmp
or
push
jmp
scas
mov
pop
iret
mov
or
int3
insl
mov
mull
or
and
push
es
sti
xor
jo
and
pushf
add
leave
test
cli
lret
jbe
or
sbb
fstpl
xchg
dec
aas
jns
testb
rolb
shll
xor
mov
sub
xchg
lret
push
add
dec
inc
pop
jbe
scas
insb
int3
dec
mov
popa
loopne
pop
addl
push
jmp
stos
jbe
pop
sub
push
aas
in
xor
test
stc
pop
sbb
in
xor
push
in
xor
loope
jle
scas
adc
stos
or
imul
les
lret
cmc
push
pop
jno
push
andb
mov
cmp
push
int
testb
scas
call
mov
rorl
xor
imul
cmpsl
adc
in
inc
insb
jl
mov
loope
insb
test
popf
sti
dec
sbb
dec
mov
and
aaa
int
lock
fsubr
fidivrs
mov
mov
popa
sbb
jo
testb
xorb
jb
or
mov
in
daa
movsl
clc
dec
jo
movsl
cld
dec
sub
and
pop
outsb
mov
imul
sub
sub
inc
test
lret
cli
sub
sahf
iret
ss
cli
stc
inc
adc
mov
sbb
jp
je
jmp
ds
roll
mov
sub
pop
lock
cmpsb
fs
cmpsb
rcrl
orb
fdivs
push
jp
jl
clc
shlb
aad
mov
sbb
out
mov
dec
push
mov
push
sahf
ljmp
aas
sbb
aaa
into
insl
ret
xchg
cltd
in
int
pop
mov
xor
xor
ja
xchg
sub
mov
inc
sbb
inc
out
out
pop
xor
pop
aaa
mov
ljmp
jbe
push
fwait
int3
pcmpeqw
cmp
jbe
pop
push
test
sub
dec
jns,pt
cmc
rolb
pop
ss
jmp
lret
adc
int3
mov
cmpsl
ret
dec
mov
mov
xor
popf
xor
jl
das
rcrl
push
mov
jmp
inc
nop
mov
in
cld
xor
rclb
dec
cli
mov
xor
leave
pop
pop
call
mov
out
sbb
arpl
out
cmpb
fcoms
xchg
addl
xchg
add
dec
mov
dec
scas
in
mov
pop
jo
outsl
inc
je
aam
pop
lock
sbb
mov
mov
scas
push
mov
fcoms
aad
jo
out
fildll
imul
scas
jne
pop
sub
insb
popa
inc
add
fists
insb
and
cmp
ds
stc
and
icebp
or
fdivl
push
or
jl
xlat
je
pop
xor
push
pop
mov
inc
jo
stos
push
adc
movsb
and
lock
xchg
nop
cltd
jle
pop
inc
loope
dec
inc
mov
sub
jnp
pop
scas
cmp
cwtl
js
fimuls
imul
sbb
cmp
xchg
addl
mov
fs
add
pop
sbb
xor
xchg
push
pop
repnz
cwtl
mov
mov
and
push
jecxz
ret
mov
mov
sub
fdivl
popa
push
dec
dec
mov
movsb
inc
inc
incb
das
jb
lea
or
cmp
call
or
inc
sub
insb
pop
fiaddl
sbb
out
aas
inc
fsubs
hlt
jno
sbb
imul
xchg
push
xor
int3
fisubrs
jge
int3
pop
icebp
fisubrs
lcall
pop
push
adc
xlat
xor
and
and
outsb
and
jb
inc
dec
mov
test
lret
adc
ja
out
push
loope
push
sub
imul
pushf
popl
stos
inc
and
xchg
or
pop
mov
sahf
dec
jbe
xor
test
and
orl
lret
xchg
pushf
dec
mov
and
lds
push
cli
jns
aaa
hlt
jnp
mov
int
cmpsb
dec
and
cmpsl
sbb
mov
and
mov
rorb
dec
stc
xorl
inc
loopne
xchg
cmp
jns
push
jecxz
xor
cmpsb
lahf
xchg
adc
mull
je
fisttpl
xor
and
shl
rolb
sti
dec
mov
xor
push
push
push
shll
xchg
int3
pop
pop
repz
ficomps
hlt
adc
pop
jmp
add
es
jbe
pop
mov
adc
mov
jnp
jle
into
jp
push
sub
sub
and
in
sub
cmp
mov
xchg
test
cvtdq2ps
jb
xchg
loope
sbb
ja
jmp
xchg
dec
xor
xor
and
adc
shrb
ret
push
imul
mov
xor
ja
sub
inc
lahf
cmp
xor
or
xor
andb
push
je
std
in
outsl
imul
in
movsl
pop
cmp
push
mov
lds
mov
les
pop
test
ds
daa
push
das
ss
mov
add
sub
hlt
loop
inc
xor
fwait
icebp
adc
aam
fwait
sarl
and
cmc
cmp
push
xchg
sbb
sbb
pop
push
mov
pop
inc
mov
mov
stc
jno
fcompl
jg
fiadds
pop
sbb
rorl
sub
outsl
inc
fstps
jo
lea
and
movb
sti
sbb
jne
push
mov
js
ljmp
xchg
push
mov
test
adc
lods
loopne
jl
aas
iret
sti
adc
pop
fneni(8087
mov
shl
movsb
mov
out
mov
loopne
xchg
push
mov
and
inc
and
pop
sub
loop
rcrl
or
pop
or
ss
cmp
idivb
dec
inc
dec
or
adc
mov
pop
push
adc
loop
or
mov
xlat
pop
clc
notb
xchg
jecxz
dec
or
pop
clc
fildl
mov
mov
vprotq
insl
mov
sahf
mov
enter
jae
jl
push
pusha
ljmp
xor
enter
das
getsec
xchg
xor
sbb
test
push
adc
lds
push
fisubl
or
or
mov
mov
movsb
fistpll
and
push
outsb
lcall
repz
adc
loop
cmp
testl
mov
lret
cmc
mov
fwait
add
insb
push
mov
in
sub
outsl
jge
cs
pop
jne
and
dec
cmp
cmp
bound
mov
xchg
outsl
aaa
sbb
xchg
pop
pop
fldt
jns
xchg
push
ljmp
sub
jne
mov
dec
in
pop
mov
sarb
dec
hlt
rcrb
sbb
xchg
stos
fs
dec
cmp
and
add
jae
int3
sub
cs
out
sub
push
jmp
ja
push
add
dec
mov
fisttpl
bound
fwait
or
shlb
lods
aad
das
inc
or
cmp
or
icebp
outsb
inc
test
push
call
js
and
test
aad
ja
dec
mov
lods
dec
cld
mov
cmovno
dec
pushf
add
push
mov
push
out
sbb
data16
sbb
dec
in
test
sbb
sbb
inc
push
popa
push
gs
fcoml
push
in
into
and
bound
je
cwtl
push
in
ja
mov
xlat
ret
test
nop
xorl
ds
push
push
cmpl
repnz
cmp
cld
out
mov
test
push
xchg
lret
jmp
shrl
stos
and
outsl
add
insl
xlat
lret
daa
arpl
inc
jg
xor
in
sti
sahf
es
mov
jne
lret
mov
add
dec
cmp
xor
adc
mov
in
fbld
test
cmpsl
mov
jmp
mov
in
push
mov
pop
in
imul
xor
lods
sti
loopne
and
push
jo
or
in
jo
add
clc
mov
inc
loop
dec
dec
xchg
mov
pop
stos
cld
mov
out
in
cmpl
aam
pop
scas
ss
and
stc
push
imul
int
xor
je
jb
lret
arpl
jecxz
std
adc
fldt
out
jmp
rolb
xor
gs
fists
or
jne
popl
xchg
xchg
jg
test
aaa
aas
jecxz
adc
std
inc
sbb
dec
loopne
bound
es
jge
jb
imul
out
mov
cmp
negb
xlat
lahf
popf
jno
xchg
stos
call
or
xchg
enter
lock
push
mov
pop
xchg
daa
inc
xor
xchg
cli
test
lods
fs
sbb
push
or
push
push
aam
scas
fwait
js
add
das
psubq
pop
imul
lea
data16
mov
dec
lods
jbe
stc
jne
in
cmp
mov
mov
jb
pop
sub
add
popf
mov
mov
cld
clc
fwait
add
jns
stos
sbb
mov
sbb
push
and
cmp
inc
push
test
mov
inc
lods
lcall
ss
mov
test
lds
inc
cmp
cmp
mov
xchg
mov
mov
xor
int
xor
xorb
mov
fimuls
insb
repz
sub
mov
fnstcw
fsts
mov
cmp
dec
test
mov
dec
fcompl
mov
sub
inc
and
pop
cmp
cmp
gs
ret
test
push
iret
les
les
push
ret
add
push
push
fiaddl
fistps
aaa
sbb
mov
cmpl
xchg
pop
jae
jae
push
fs
stos
std
inc
cld
lds
lcall
je
xchg
adc
xchg
cmp
push
rcrl
dec
in
out
mov
imul
or
out
testl
test
popf
or
xchg
dec
jecxz
int3
add
test
inc
sahf
jns
outsl
sbb
pop
pop
xor
mov
jo
inc
loop
cmc
popf
nop
pop
dec
xor
out
sub
jmp
mov
imul
adc
loope
xlat
in
notb
mov
pusha
inc
mov
enter
jae
lock
addb
mov
xchg
sbb
xchg
mov
adcb
add
cli
cmpsb
mov
mov
mov
imul
cld
push
or
jb
mov
popf
out
push
inc
repz
and
test
adc
mov
push
sub
lahf
cmpsw
std
movsb
mov
add
mov
pop
dec
ss
jecxz
sub
ljmp
popa
pop
outsl
or
cmp
sub
cltd
es
push
decl
mov
lcall
or
add
sub
bswap
mov
or
jne
push
sub
adc
gs
maxps
pop
xchg
mov
xchg
test
jmp
and
imul
sbbl
ljmp
loop
es
xchg
push
sarb
mov
jo
shl
and
int3
inc
xchg
pop
add
mov
sub
and
xchg
in
cwtl
js
lods
xchg
pop
andb
jno
jecxz
insl
push
cmp
sbb
icebp
daa
xor
cmp
fbld
inc
and
sbb
xor
dec
mov
jae
mov
and
pushf
cmp
cmp
jb
sub
rolb
and
fwait
cs
cmp
out
cmp
add
mov
add
dec
sub
sar
xchg
out
adc
sub
aas
call
fsubl
jmp
shlb
popf
adc
fidivl
fst
ret
sub
fsubs
sbb
sbb
mov
cmp
dec
sbb
data16
cld
push
arpl
loopne
push
pop
jns
mov
ret
jge
push
sbb
call
add
sbb
adc
inc
xchg
mov
loope
out
xorb
add
and
xchg
push
rcrl
mov
adc
ret
fsts
mov
and
mov
hlt
pop
mov
sbb
daa
shll
pop
mov
sub
negb
stos
addr16
xor
cmp
fwait
sbb
scas
cmp
incb
icebp
repz
push
cmp
fisttpll
mov
sbb
icebp
inc
pop
push
sti
out
xor
fiaddl
mov
sbb
out
xchg
inc
sbb
jb
push
call
inc
xchg
cltd
out
fists
insb
and
cmpsb
fnstenv
imul
ret
inc
arpl
dec
jge
lahf
dec
adc
xchg
int
daa
dec
sub
jecxz
scas
fsubl
je
lock
xchg
pop
xor
push
or
xor
cltd
jb
les
nop
test
dec
in
stc
frstor
inc
cld
out
sub
mov
and
out
gs
std
xor
bound
xor
mov
xor
pop
add
cmp
add
mov
add
cmp
mov
mulb
mov
and
mov
cmpb
ja
dec
test
xchg
mov
fstp
dec
mov
pop
es
in
xchg
or
aaa
lods
adc
dec
add
inc
das
inc
push
orl
call
mov
fidivs
fwait
inc
fisubrl
lods
loope
icebp
aad
pcmpgtb
lods
leave
lcall
lret
or
aas
fs
push
js
sub
cmp
cmp
and
mov
push
and
pop
das
cmp
testb
sbb
lcall
lcall
sbb
and
nop
lret
sarl
sub
cwtl
push
cmp
xor
scas
sbb
xor
test
test
xchg
and
gs
imul
andl
and
aas
popf
popa
outsb
popf
jnp
test
push
jge
lcall
mov
sbb
inc
nop
dec
out
dec
lcall
into
daa
cmp
rclb
sub
es
hlt
ds
out
mov
and
sub
in
int
dec
test
int
aam
pop
mov
ret
push
icebp
adc
mov
test
cli
sti
daa
sbbb
lcall
fwait
mov
push
cmp
jl
fidivl
dec
repz
popf
loop
sbb
push
repz
pusha
inc
xor
ret
gs
push
in
out
andl
ret
mov
xchg
ljmp
popf
push
ret
and
mov
aam
outsl
ret
mov
movsb
shll
push
jnp
add
add
lret
mov
ljmp
cs
mov
repz
pop
out
ds
or
cmp
dec
mov
int3
leave
cmp
popa
fdivrs
or
mov
mov
test
orl
nop
loope
mov
sbb
sub
stos
movsb
into
aaa
and
add
pop
inc
adc
popa
xchg
shl
popa
jbe
or
es
sbb
cwtl
fstl
mov
dec
add
sahf
xor
out
mov
shrb
jl
or
mov
inc
and
sbb
adcb
mov
rcrb
ret
rorb
dec
xchg
fwait
dec
cmp
stos
and
es
cmp
ss
push
inc
divl
or
adc
mov
mov
and
stc
sbb
aad
inc
pop
dec
cmpb
xor
jne
clc
icebp
cld
dec
in
inc
lods
cld
xor
jle
or
xchg
imul
orb
fistps
add
push
test
push
popf
mov
out
pushf
bound
aas
ret
outsb
and
out
in
enter
jnp
cmp
or
add
inc
xchg
sahf
mov
mov
lea
and
sbb
lock
stos
leave
jle
imul
push
jle
loop
mov
cmp
pop
data16
in
inc
xchg
outsb
push
xchg
mov
cwtl
aam
xor
sub
jecxz
inc
jmp
or
adc
imul
and
arpl
and
jno
dec
mov
bound
add
add
push
lea
xchg
pop
shrb
mov
pop
inc
ja
inc
call
daa
xchg
push
pop
cmp
mov
adc
push
mov
inc
or
fldenv
into
aam
daa
add
shrb
lcall
sbb
stos
jae
jbe
sbb
lods
sbb
push
xchg
fisubrs
push
inc
pop
hlt
in
jo
sbb
es
imul
shlb
dec
add
in
fbstp
dec
mov
int3
sub
ret
jbe
cltd
mov
mov
or
mov
cwtl
loope
movsl
fwait
mov
ficoms
popa
sub
xorl
sub
dec
dec
xor
mov
out
outsb
cmp
aam
jns
sub
pop
push
out
sub
popa
pop
or
orl
insl
in
pushf
mov
insl
int
in
mov
push
je
in
xchg
inc
inc
push
and
sub
pop
adc
sti
imul
jmp
add
mov
jle
jno
popf
test
daa
icebp
outsl
addb
push
aad
cmp
out
cwtl
push
movsl
popa
ret
jne
dec
arpl
xor
jg
in
add
rcrb
sub
cld
and
mov
sarb
sbb
dec
add
mov
xor
notl
ret
repnz
push
daa
sub
faddl
adc
mov
loope
and
pop
ja
mov
shrl
jge
pop
je
add
movsb
mov
cmp
sbb
mov
loopne
mov
test
into
push
incb
addr16
incl
sahf
sahf
sbb
test
repz
shrb
int3
aad
jl
lods
shrl
scas
loop
fdivrl
or
mov
popf
pop
or
fsubl
cmpsb
insl
loop
in
sub
xchg
push
test
in
insb
mov
imul
repz
jno
fbld
push
orl
fimull
push
cld
xor
aas
cmp
in
mov
out
dec
mov
je
loopne
or
int
imul
cld
stc
aad
inc
adc
and
bound
aaa
stc
arpl
mov
test
and
stc
jg
push
test
imul
insl
pop
sbbb
fdiv
fsubs
ret
xor
fisttpl
mov
mov
mov
fdivl
popa
push
adc
cs
loop
out
jle
sub
jle
rcl
dec
adc
sub
jp
mov
rolb
out
fbstp
outsb
test
mov
and
jo
test
pop
iret
or
sub
lods
shl
jns
icebp
outsb
shrb
cs
fisubrs
shrl
lods
sub
out
lock
push
pop
mov
sub
inc
xchg
cmp
sbb
push
or
test
inc
jne
pop
lcall
fnstcw
stos
xchg
mov
push
mov
loop
shrd
jno
dec
xor
clc
cs
push
fcmovne
lahf
jns
into
nop
jp
aaa
ficompl
test
adc
push
shrb
push
movsl
shr
mov
sbb
sbb
pop
xorb
sbb
loopne
jno
or
rolw
test
inc
mov
xorb
cmpsb
negb
std
test
stos
pop
mov
test
sbb
xchg
push
ljmp
loop
js
pusha
add
adc
mov
sti
fwait
mov
stos
inc
mov
dec
mov
dec
outsl
inc
cmp
mov
push
mov
enter
test
inc
rorl
xchg
adc
call
fidivl
cmpb
ss
insl
mov
test
rolb
lret
out
mov
inc
inc
mov
or
dec
pop
inc
xchg
loopne
pop
pusha
lahf
pop
pop
cld
push
cmc
mov
sub
mov
jge
jl
push
jns
jb
fildll
mov
xchg
test
adc
shlb
sbb
loopne
lds
fwait
andl
out
iret
int
daa
mov
shll
xor
mov
ss
mov
repz
hlt
leave
and
jmp
cld
pop
je
cmp
fmuls
and
rol
xlat
stos
dec
adcl
mov
loop
stos
decb
mov
js
mov
arpl
jg
dec
aas
data16
pop
mov
out
cwtl
cmp
dec
scas
xchg
std
mov
test
sti
mov
xorl
mov
push
hlt
das
cmp
mov
call
int3
mov
mov
pusha
dec
mull
daa
xor
or
popw
push
test
fsubrp
cltd
adc
sahf
dec
fbld
pop
int3
pusha
xchg
or
or
push
and
mov
mov
testb
fstpl
nop
jno
xchg
leave
cld
inc
lret
jbe
es
imul
sub
dec
movsl
pop
fcomps
arpl
push
inc
lret
jnp
mov
dec
inc
ret
push
mul
inc
xchg
jle
cmpsl
sub
pop
imul
jae
dec
jmp
cwtl
xor
test
cmpsl
in
lahf
fdivs
test
sbb
outsl
or
jl
xor
stos
les
icebp
test
cmp
push
push
xchg
loopne
cmp
int
lret
adcb
aaa
hlt
push
dec
cmp
lods
sbb
cmp
dec
push
cmp
lcall
les
in
sahf
xchg
stc
imul
jl
mov
jne
push
cld
xchg
lret
adc
mov
adc
idivl
daa
jb
sub
jbe
test
pop
cld
imul
fwait
data16
scas
xor
pop
int3
pop
imul
js
mov
lods
mov
das
xor
test
test
out
push
fnstenv
xchg
pusha
adc
ja
mov
icebp
sbb
jg
cmp
mov
js
sbb
leave
ljmp
dec
push
push
subl
outsb
or
push
and
pop
sub
mov
or
repz
addr16
push
call
hlt
mov
inc
les
sub
or
sbb
insl
nop
fistps
cwtl
imul
gs
add
xchg
xor
cmpsl
add
fmul
sub
xchg
push
divl
fnsave
add
or
xchg
arpl
repnz
xchg
lock
addr16
mov
jo
ljmp
fldenv
rcrb
sub
dec
pop
clc
xchg
push
dec
push
mov
pop
fimuls
lcall
les
jo
movsl
int3
xchg
and
hlt
loope
inc
loop
rcrl
add
pop
jge
cmp
mov
hlt
imul
adc
add
out
jno
insl
xchg
push
cld
push
stos
mov
cs
xor
mov
sub
jecxz
mov
and
mov
and
rclb
xor
xchg
addl
movsl
test
and
inc
mov
or
cmpsl
dec
loope
mov
push
int
repz
add
mov
pop
inc
pop
ficompl
loope
push
pop
jl
ret
sbb
repnz
add
les
dec
and
outsb
push
sub
shll
in
push
mov
repz
jmp
pop
sarl
push
divl
jmp
adc
pop
std
imul
jno
test
insb
faddl
repz
or
insb
jo
test
test
nop
aam
insb
dec
ret
stc
test
push
pop
into
outsb
push
mov
sub
sbb
xor
sbb
es
xchg
call
repz
popa
test
inc
pop
push
push
pop
xor
fbstp
movsl
mov
clc
into
xor
outsb
mov
mov
outsb
jp
push
xchg
jno
sub
xchg
mov
push
arpl
xchg
jle
xor
faddp
adc
mov
bound
cltd
adc
dec
adc
mov
or
cmpsb
add
test
push
clc
lret
aad
imul
cmpsl
jb
push
scas
push
mov
loope
pop
mov
push
mov
mov
add
sub
cli
jl
xor
notl
fwait
jo
sbb
stos
xor
add
xchg
es
or
stc
fxch
jo
mov
mov
hlt
mov
iret
int3
inc
stc
sbb
fmuls
cmp
cld
sbb
inc
mov
xchg
divl
pusha
inc
arpl
lcall
sub
daa
jb
dec
add
shrl
fidivrl
popa
adc
out
sub
inc
mov
cmpsb
mov
lds
gs
adc
cmp
add
gs
mov
repz
push
and
jnp
sbb
mov
gs
push
jge
ret
adc
sub
fisubrs
sub
add
cmp
lahf
adc
and
out
jecxz
pop
stos
subb
test
inc
xchg
nop
and
dec
out
std
clc
push
movsl
lods
pop
call
aas
dec
mov
lods
xor
movsl
or
or
xchg
inc
mov
inc
shrb
fdivs
mov
inc
mov
test
inc
xor
in
mov
push
hlt
sbbl
cli
dec
add
xchg
push
out
fsubr
and
fbstp
lea
pxor
pop
in
mov
cmp
movsb
or
out
add
out
push
sub
test
outsb
rcrb
jle
test
div
sbb
cli
jnp
mov
cmpsb
push
jecxz
arpl
int3
lahf
in
mov
jae
inc
jp
out
sub
or
enter
xchg
gs
mov
mul
xchg
lock
sti
inc
lret
mov
xchg
shll
xor
or
mov
fmuls
js
push
hlt
mov
call
scas
xchg
outsl
add
mov
and
pop
loop
test
ret
lds
xor
ret
cmp
lds
push
mov
cltd
jbe
dec
adc
jnp
out
ret
ja
mov
xchg
fcomp
inc
jecxz
int
adc
loope
jge
mov
push
sti
aam
adc
xchg
cmp
jae
inc
pop
push
popf
cmc
test
and
ret
repnz
cmp
adc
dec
add
insb
in
xchg
cwtl
test
jecxz
or
xchg
or
pusha
into
idiv
movsl
jle
jg
out
notl
or
sub
rol
cmp
jmp
mov
lods
inc
dec
xchg
les
xchg
out
mov
cmpsl
push
jns
jo
jnp
test
xchg
jmp
fwait
add
jae
call
stos
sub
xlat
pop
and
ja
test
mov
xchg
aaa
enter
out
in
loop
sbb
cmp
push
or
pop
push
mov
push
pop
out
add
mov
test
loopne
idivl
push
jnp
scas
inc
cmc
mov
dec
mov
dec
mov
rolb
xor
mov
arpl
xor
sub
mov
jle
sub
push
loop
popa
jo
inc
fdivs
pushl
and
cmc
dec
aaa
push
sbbb
add
mov
rorl
hlt
mov
fs
imul
ret
xchg
roll
push
push
mov
xlat
shrl
or
push
into
push
cmpsb
cmp
xor
les
jle
pop
pop
test
jnp
mov
adc
jae
xor
call
mov
hlt
jl
push
jno
mov
add
push
add
and
mov
nop
cmp
dec
cs
pushf
dec
xlat
mov
adc
iret
push
shr
dec
outsb
daa
jmp
rolb
fdivrs
hlt
aas
das
out
mov
fsub
out
dec
cmp
mov
xchg
push
push
cmp
scas
arpl
or
lret
mov
or
ja
pop
cltd
int
push
sbb
xchg
rcll
pop
int3
shrb
jle
adc
pop
jne
cli
mov
in
in
or
testb
or
push
fiaddl
inc
sub
fiadds
je
sbb
or
mov
subb
sbb
negb
dec
scas
push
add
inc
inc
ja
enter
xlat
incb
push
aas
adc
adc
inc
lret
adc
xlat
das
ss
and
aad
jb
cmpl
cmp
jmp
test
aad
inc
fwait
pop
pop
mov
adc
vaddss
outsl
lock
push
xchg
adc
cmp
push
shlb
ja
gs
in
jl,pn
jmp
incb
outsb
out
movsl
sbb
cmp
iret
or
adc
sahf
fldenv
insl
imul
loope
std
add
insl
push
pop
jno
test
inc
dec
popl
mov
dec
insl
in
leave
gs
es
sbb
scas
xor
andl
std
add
mov
or
sub
int3
pop
mov
adc
pushf
fistpl
arpl
sbb
push
lods
sbb
decl
mov
pop
mov
test
or
sub
mov
xchg
fdivl
mov
cli
push
add
or
pushf
iret
mov
sti
in
cmpsl
jle
jns
dec
push
mov
mov
cmp
fwait
push
iret
fnstsw
cmp
jle
xchg
or
jle
lods
jp
cwtl
les
clc
jp
cltd
outsb
cmp
stos
jno
sbb
xchg
into
ljmp
data16
and
add
scas
insb
ds
cmp
add
jle
cmp
out
mov
fisubrs
xor
sub
xor
jbe
aaa
bound
aaa
push
sub
andl
mov
or
cmp
push
hlt
jae
xor
push
mov
dec
push
imul
jecxz
in
mov
test
std
xchg
dec
bound
add
icebp
and
pop
in
outsb
add
inc
cmp
inc
jmp
stc
dec
dec
add
mov
clc
stos
push
arpl
add
negl
jp
aas
dec
and
mov
pushw
je
add
dec
sbbl
sub
int3
icebp
ljmp
jg
jecxz
sub
fisubs
sarl
pushf
jl
je
add
pop
into
fwait
sub
mov
and
mov
mov
pop
out
mov
pop
jecxz
mov
lcall
pushf
mov
shl
ret
xor
movsb
stc
add
cmp
into
movsb
mov
js
sahf
add
add
clc
cmpsb
jb
gs
aaa
jb
clc
faddp
pop
lods
js
push
in
cmp
insb
xor
or
scas
xor
into
dec
out
xor
pop
pop
pop
jmp
ret
pop
test
fmuls
insb
int3
adc
mov
ss
cs
int
mov
cs
push
fidivrs
cmp
push
mov
mov
jge
and
pop
adc
mov
mov
inc
inc
xor
test
test
in
and
dec
xor
fstpl
pop
xor
stc
dec
pop
fidivl
dec
push
test
jnp
jl
bound
jne
jp
sahf
or
or
adc
xor
into
push
pop
sub
pop
adc
mov
push
or
loop
xchg
adc
fwait
inc
lret
adc
jb
mov
dec
roll
outsl
or
icebp
jge
ret
repz
aas
or
ja
je
dec
add
mov
adc
xor
adc
jl
xlat
xor
sahf
xor
daa
shl
mov
loopne
mov
fbstp
pop
and
sub
mov
std
pop
cmp
pop
mov
in
push
pop
js
shlw
pop
icebp
insl
push
mov
outsl
cmpsb
sub
inc
mov
or
xchg
lret
je
das
sahf
aas
xor
in
cmp
xor
loope
jecxz
mov
xchg
sub
xchg
jnp
pop
mov
add
fmuls
repnz
or
repz
lods
inc
pop
icebp
sub
jnp
cmc
jg
xchg
mov
jo
les
repz
imul
xor
dec
push
lock
aad
lcall
aam
lods
push
fbstp
loopne
popf
xor
jmp
jp
in
sub
sub
mov
cmp
push
mov
ret
cmpsb
mov
call
mov
std
scas
mov
sbb
mov
ret
fbstp
stos
lret
inc
sbb
jmp
cmc
inc
mov
jmp
cmp
negb
js
insb
stc
cmp
insl
iret
and
sti
pop
icebp
or
push
gs
clc
or
outsb
and
mov
jl
aam
sbb
movsl
lret
mov
cmc
cmc
and
sar
in
imul
lods
and
or
xor
addps
and
xchg
pop
xchg
pushf
jmp
sub
cs
jo
sbb
shll
inc
mov
dec
stos
and
in
lea
ljmp
sti
lds
or
cmp
scas
ja
mov
mov
push
enter
popa
fidivrl
mov
inc
mov
sahf
jae
xor
or
cmpl
mov
mov
push
cltd
inc
loopne
outsl
cmpsb
push
dec
aad
movsl
shl
mov
mov
push
xchg
jb
lea
pop
loop
fidivs
loopne
loop
inc
loope
and
pop
push
pop
xchg
scas
sbb
cmpsb
mov
lods
sub
rolb
push
enter
sub
lret
stos
jle
pop
lcall
test
pop
dec
inc
pop
stos
cmp
pop
insb
or
or
lods
loopne
xchg
das
gs
inc
inc
int
das
mov
adc
rorl
divb
addr16
pushl
xor
daa
mov
lods
shrd
sbb
in
test
dec
js
lods
adc
ss
aaa
and
dec
daa
test
mov
test
xor
hlt
js
clc
fildll
dec
cs
jl
push
and
pop
and
roll
mov
sbb
out
sbb
xlat
call
add
decl
or
mov
xchg
ljmp
lock
mov
cli
push
sbb
mov
mov
xchg
call
hlt
test
sub
ljmp
ret
push
fcom
rcrb
cmpsb
xchg
push
cmp
aas
jmp
cmp
fmulp
dec
pop
cs
outsb
pop
cmp
out
inc
sbb
test
fldenv
testl
das
jnp
pop
xchg
out
mov
ret
mov
gs
inc
std
sarb
jge
add
mov
movsl
jne
jecxz
aas
fs
xchg
sbb
jb
dec
int
push
mov
push
add
jne
insl
mov
pop
xchg
pop
adc
ret
cmp
pop
hlt
cltd
aaa
adcb
aam
push
arpl
insl
jb
push
mov
bound
in
sub
bound
subb
js
adc
sti
ret
xchg
enter
flds
sub
fidivrs
repnz
sti
insl
mov
xor
std
dec
mov
dec
cwtl
cmpsl
imul
int3
lds
pop
dec
or
mov
add
aaa
ret
inc
vsqrtsd
cmp
in
js
xorb
dec
pop
fsubl
mov
lds
lahf
mov
jb
jl
cltd
xor
or
sub
sahf
lcall
or
mov
outsl
cwtl
and
ja
test
ljmp
mov
int
loopne
imul
and
inc
sbb
mov
xlat
nop
aad
test
fisubs
call
xchg
jne
repz
ficomps
js
les
sub
push
enter
lds
push
arpl
jmp
cmp
pop
out
cmp
add
nop
or
aad
adcl
adc
mov
ljmp
pop
in
pop
lea
or
pop
sbb
cmp
jb
jne
hlt
ror
inc
lret
pop
arpl
push
imul
xchg
ja
cld
jbe
xchg
cld
fidivrs
mov
pushf
and
stos
dec
jnp
hlt
pusha
negb
or
orb
cwtl
mov
mov
lods
mov
imul
inc
scas
cmp
or
dec
dec
sub
fs
pop
jbe
fcmovnb
pop
inc
xchg
cs
test
into
and
data16
and
xchg
push
push
dec
ljmp
mov
cmc
xor
fistl
in
stos
pop
xor
xor
add
add
in
popa
sbb
sbb
inc
mov
inc
jmp
add
dec
out
or
inc
pop
push
faddl
mov
je
jae
repz
pop
ja
mov
or
stos
xchg
xor
pop
outsb
fbstp
pop
xchg
inc
add
repnz
push
inc
xlat
or
ss
cmp
int
add
xchg
int3
shll
lcall
mov
adc
call
xchg
std
test
sbb
or
iret
inc
xchg
cmp
or
mov
fcomp
je
ss
hlt
les
jne
push
popf
cli
pop
icebp
mov
arpl
xor
push
jmp
ljmp
in
daa
setb
dec
std
cli
xchg
in
imul
or
sub
pusha
and
mov
loop
repnz
es
lahf
and
rcll
cli
push
pop
fidivs
cltd
aam
sub
into
pop
inc
pop
and
aaa
jb
sub
negl
cmpl
mov
cmpsb
cs
in
in
pop
bound
push
adc
nop
stos
call
adcl
push
imul
adcl
push
cmp
push
ss
insl
rorb
mov
imul
push
mov
in
xchg
adc
inc
inc
out
rcrl
push
push
lahf
sub
jae
insb
daa
mov
aad
rcl
das
push
stos
jg
mov
scas
int3
aad
jl
iret
push
mov
push
pop
in
flds
subb
sub
shlb
insl
mov
mov
jbe
cmp
pop
gs
xor
sahf
jns
sbb
iret
adc
jae
adc
mov
lcall
das
mov
repnz
lret
nop
push
fldcw
xlat
es
lcall
mov
sub
sub
jge
inc
xchg
addr16
dec
scas
repz
cmc
mov
jge
call
xor
mov
popa
sti
call
scas
and
dec
xchg
je
adcb
ficomps
aam
xchg
aam
cmp
cld
sbb
stos
mov
outsl
or
leave
test
and
dec
push
inc
inc
jae
jae
int3
adc
sub
subl
loope
test
mov
insl
cwtl
dec
push
jmp
mov
inc
test
add
movsb
and
jo
and
mov
push
rolb
add
adc
push
pop
mulb
aas
sub
hlt
pop
in
repz
inc
and
sbb
cmp
cmp
sarb
hlt
lds
and
dec
mov
jmp
and
lret
push
lret
icebp
sub
ja
mull
enter
test
inc
cltd
cli
mov
push
xchg
test
inc
cmp
sbb
xchg
outsb
jle
sti
sub
clts
je
mov
out
sbb
movsb
stos
hlt
ret
cmc
add
push
in
outsl
and
xor
mov
out
subl
cld
mov
andl
aas
sub
xchg
fsts
stc
sbb
inc
movsl
notl
jmp
aas
adc
rcr
fcoml
xor
sub
outsb
inc
enter
gs
int
js
dec
and
jle
mov
fstpt
popf
xlat
leave
add
ret
nop
sahf
inc
mov
jno
add
out
enter
inc
push
bound
mov
out
ljmp
jecxz
dec
add
push
mov
call
sahf
int3
mov
lea
pushf
iret
pop
jmp
sub
cwtl
dec
mov
push
mov
loope
jbe,pt
aaa
lds
movl
jmp
pop
fidivs
dec
and
mov
stos
push
cmp
inc
idivb
lcall
notb
decl
js
bound
pop
pop
jb
xchg
int3
pop
sahf
and
clc
insl
sti
push
cmpb
mov
jg
cld
je
mov
pop
pop
mull
pop
popf
xchg
stos
in
mov
jle
sbb
sub
cmpsl
sahf
fimull
mov
add
push
outsb
push
mull
sbb
std
mov
fs
ljmp
mov
xor
ficompl
orl
in
push
test
xlat
mov
fldenv
outsb
mov
sbb
pop
inc
das
adc
dec
imul
aaa
lods
and
addl
mov
jmp
das
cmc
sub
loopne
pop
shl
jno
and
xor
xor
xor
out
in
adc
pop
js
fucomp
ficompl
xchg
es
outsl
push
nop
cmc
dec
call
cs
jge
rorb
mov
loop
inc
rolb
or
fisubrs
dec
push
imul
out
insb
sub
inc
pushf
inc
sub
out
xchg
mov
imul
push
pop
rcl
push
add
sbb
add
mov
aaa
lods
sub
push
jg
mov
ss
lret
icebp
daa
xchg
pop
outsl
popf
mov
sbb
or
lcall
ror
pop
pushf
adc
pop
je
inc
popa
cmovno
push
pop
mov
fdivl
mov
add
arpl
clc
icebp
and
pop
hlt
nop
xor
or
cmp
mov
jge
mov
pop
inc
inc
push
mov
push
lea
push
jae
out
or
imul
inc
cltd
jge,pn
sbb
xchg
mov
shlb
push
sti
ret
xor
pop
and
data16
in
faddl
lods
cmp
bound
imul
call
into
test
dec
xlat
aad
ret
aaa
cwtl
fsubs
lret
and
push
jl
cmpsl
out
neg
adc
inc
loop
test
adc
dec
dec
popa
daa
xlat
js
inc
push
pop
or
movl
push
movsl
sub
sub
adc
scas
cmc
mov
xchg
add
mov
test
rorl
cmp
cmp
mov
scas
and
shlb
xlat
into
popf
pop
scas
and
ljmp
test
imul
fistps
movsb
ror
into
addr16
ss
in
out
in
mov
data16
shl
cmp
insb
add
scas
add
inc
xchg
aaa
pusha
xorl
popa
inc
stos
gs
mov
outsb
dec
pop
xchg
mov
arpl
addr16
adc
pop
ds
sub
xchg
sub
arpl
jb
dec
mov
ja
mov
aaa
dec
fistpll
orl
or
cs
sar
xchg
mov
adc
inc
pop
pop
jno
or
incl
repz
clc
add
fstps
testl
int3
and
adc
in
mov
call
bound
test
add
arpl
in
jno
pop
xchg
aad
inc
loopne
cwtl
arpl
push
mov
rcrl
lea
adc
jecxz
jle
sub
xchg
xorb
jno
adc
push
xor
imul
xchg
add
data16
cmp
xchg
imul
jmp
outsl
into
mov
into
lcall
add
adc
fsubrs
pop
xchg
xchg
mov
jp
test
pop
pop
mov
int3
mov
call
xor
push
jg
pusha
popf
jg
ficompl
add
sbb
adc
rcrb
repz
push
dec
mov
push
frstor
enter
mov
into
mov
outsl
push
ret
imul
in
mov
das
and
mov
add
xor
add
fsub
mov
xchg
sbb
lcall
ret
stos
mov
in
mov
ret
icebp
sbb
mov
xor
out
inc
mov
cwtl
stc
fidivrs
dec
mov
jl
icebp
popa
mov
lods
adc
lock
jmp
lahf
adc
pop
data16
sub
addb
sahf
adc
cmp
insl
testb
pop
or
out
loope
mov
adc
in
das
cmp
jl
testl
add
cs
out
mov
stos
sbb
enter
or
into
or
test
div
jne
in
arpl
js
scas
popf
cmp
insl
cmpsl
fs
push
cmp
dec
jb
inc
fs
loop
and
mov
ds
mov
imul
mov
cli
hlt
pop
enter
lahf
andl
sub
aam
cmpb
iret
jmp
fprem
gs
sbb
rorb
in
dec
push
push
lahf
sbb
mov
inc
or
xorl
subb
lahf
add
pop
adcl
sahf
push
pop
out
testl
cmp
and
lods
es
pop
out
dec
adc
ja
xlat
roll
aad
dec
mov
ljmp
sbb
sub
xchg
xor
mov
adc
pop
mov
jae
xchg
jg
aas
pop
rol
xor
jle
xor
sbb
inc
filds
push
sbb
inc
mov
repz
cmp
add
rcll
xor
sub
push
xlat
mov
imul
insb
repz
sub
mov
enter
cmc
ljmp
setbe
sbb
and
inc
sub
pop
fimull
mov
sti
cmp
outsb
xchg
popf
shr
and
dec
xchg
lcall
ud2
shl
sub
cmp
and
xor
rolb
movsl
or
mov
cmpsl
xor
fldenv
ds
mov
or
dec
pop
push
cmp
pop
push
and
mov
out
into
leave
cmp
mov
jecxz
enter
jno
dec
lahf
rcrb
inc
arpl
xlat
iret
pop
mov
sub
pop
stc
dec
ja
je
stos
adc
mov
or
insl
add
or
imul
mov
xchg
sbbb
bound
addps
push
inc
pop
add
adc
mov
insb
pop
cmp
sub
gs
lcall
xchg
mov
iret
call
jb
in
popa
scas
stc
insb
gs
or
mov
inc
sbb
add
movl
dec
adc
mov
repz
movsl
in
sub
sub
inc
sarb
loop
dec
pop
inc
push
outsb
int3
mov
mov
dec
jns
insb
repz
data16
shlb
push
mov
adc
cwtl
cld
or
rcll
mov
xchg
shrl
lcall
xor
xlat
insb
hlt
cs
dec
in
push
lods
hlt
and
or
and
inc
sub
cltd
dec
pop
popf
ljmp
and
lds
or
test
xchg
lahf
jl
out
xchg
jmp
gs
imul
or
cmpxchg8b
cs
shl
sub
clc
mov
jg
mov
cmp
dec
and
rorl
nop
push
pushf
push
lcall
cmc
inc
dec
push
jae
add
int
and
fnsave
cmp
popf
push
or
pushf
ljmp
shll
or
pop
data16
pop
dec
aam
pop
pusha
jae
loopne
test
loopne
pop
int3
pop
sub
pop
mov
and
xlat
mov
cmp
jo
ljmp
ds
pop
pop
das
adc
rcrb
pop
rcr
adc
fcompl
pop
in
fwait
mov
mov
mov
pop
pop
scas
cld
aam
cs
fcomp
or
popa
icebp
fwait
popa
jbe
push
repnz
es
je
sbb
xchg
ficoml
out
jp
push
pop
jne
mov
in
jae
or
xchg
and
add
movsl
ljmp
out
lods
sub
jge
mov
xor
imul
mov
adc
mov
pop
ljmp
or
mov
shll
pop
and
fdivrs
push
jo
ret
es
out
dec
pop
movsb
aam
aad
push
adcl
xchg
sub
dec
inc
sub
test
nop
xor
sti
push
rcrb
push
jne
jnp
pop
jle
test
cwtl
mov
sub
inc
cmpsl
and
fstpt
cs
mov
cld
outsl
inc
adcl
cmpb
repz
outsl
cmp
jb
adc
mov
pop
ret
adc
scas
dec
xlat
pop
sub
push
int3
lods
pop
mov
fimull
out
iret
xchg
and
fcoms
add
mov
jb
lods
push
fldenv
xor
jl
pushf
js
out
dec
mov
call
xor
push
add
or
cli
repnz
popf
inc
dec
insl
or
xor
fadds
push
psubsb
dec
into
mov
jp
and
adc
mov
je
push
scas
gs
sbb
pop
int
insb
lea
iret
fcoms
xor
loope
pop
mov
mov
or
xchg
xchg
adc
xor
mov
jl
dec
jmp
dec
cwtl
dec
jno
jns
sub
insb
cmc
dec
add
sbb
movsl
out
cld
pop
mov
cmp
in
aas
dec
xchg
mov
cmp
js
cmp
mov
xchg
out
xchg
inc
cltd
insl
push
insb
fbstp
fwait
jb
jb
dec
pop
mov
mov
push
xor
test
lods
mov
repz
pop
push
idiv
adc
mov
idivb
push
lods
adc
jmp
lods
mov
add
add
cmpsb
jmp
ror
xlat
jl
pop
loope
jge
push
cmp
repnz
or
jae
stc
cmp
sbb
push
lahf
sarl
pop
xchg
imul
adc
sti
sahf
loope
enterw
xor
stos
xorb
push
sbb
jl
adc
xchg
pop
popf
call
push
adc
jo
inc
or
xchg
aad
mov
insb
arpl
loope
jge
pop
jge
insl
lea
cmp
xlat
mov
cmpsl
jne
jne
mov
mov
std
movb
push
stos
aas
jp
mov
jmp
fists
xchg
stos
jle
pop
cld
mov
cmp
mov
add
xchg
rcll
mov
pop
pop
dec
shl
xchg
lea
add
pushf
les
ret
aam
test
int3
xor
mov
jb
cltd
pop
iret
leave
pop
jmp
inc
dec
inc
lret
adc
xor
cli
push
lahf
repnz
lret
mov
loopne
lea
mov
xchg
dec
pop
movsb
inc
xor
mov
aaa
gs
mov
js
ficomps
shr
add
cmp
mov
jl
test
adc
cmpb
mov
in
aaa
or
or
popa
in
jecxz
mov
push
out
pop
dec
call
cs
mov
sbb
dec
mov
mov
ret
sub
jg
jbe
xor
cs
sbb
aam
sub
int
lds
sub
push
nop
pop
leave
or
inc
out
jmp
inc
je
adc
out
push
lcall
bndldx
or
inc
or
les
repz
jmp
cmc
jb
xchg
arpl
fnstcw
rolb
mov
mov
cltd
push
fists
fdivr
leave
lods
pop
int
ret
push
sahf
sbb
adc
jmp
xchg
push
rclb
jbe
sub
mov
or
lods
push
lock
ds
fstpl
mov
add
mov
inc
out
push
push
jno
xor
xchg
add
dec
nop
mov
push
xchg
sub
outsb
jle
div
and
pop
inc
cmc
push
outsb
xchg
jne
insb
aam
xchg
jl
lret
sbb
ret
mov
sbb
push
bound
and
adc
inc
adc
add
test
pop
je
add
fs
in
push
rclb
out
xor
jae
call
cmp
add
cmpsl
ja
iret
pop
fcmovnu
inc
add
sbb
mov
and
xchg
cltd
aad
popf
out
add
ja
mov
or
aad
aam
push
mov
arpl
imul
aas
cwtl
jl
es
xchg
ja
mov
lret
push
cmp
lea
out
xlat
out
and
xchg
lods
sbb
mov
add
fisttpl
jecxz
mov
push
out
cmc
cli
cmpb
and
arpl
hlt
in
mov
mov
and
sarb
jmp
xor
clc
loopne
mov
test
inc
aam
mov
add
stos
ljmp
aas
fwait
es
push
lds
outsl
and
mov
mov
push
stos
adcb
out
or
fsubrl
jbe
inc
subb
dec
add
mov
mov
xchg
gs
pop
rcrl
movsb
into
movsb
insb
xchg
outsb
out
push
fadd
fcmovu
inc
xor
sub
shll
jmp
insb
inc
aad
mov
clc
cmpsl
outsl
pop
dec
mov
inc
dec
test
cmc
pop
push
push
add
inc
push
shlb
and
in
out
sar
mov
pop
cmpsb
jmp
xorb
xchg
in
push
test
daa
xchg
jo
ja
fmuls
in
push
mov
das
cmp
ficoml
mov
jns
mov
fmulp
shll
lret
inc
test
divb
xor
call
pop
fcmovu
inc
rcll
daa
inc
jnp
repnz
sbb
scas
pop
pushf
cmp
repnz
and
ret
or
inc
mov
aaa
pop
cmp
popf
cltd
push
stc
push
leave
mov
les
movsl
jle
add
ret
jns
xor
xchg
mov
dec
ficoms
dec
mov
ficoml
or
mov
inc
insl
cltd
add
mov
cli
adc
inc
mov
dec
mov
adc
adc
cmp
cmc
push
fdiv
mov
and
jno
imul
mov
sub
pop
sbb
test
inc
test
loopne
sbb
daa
jb
sub
jge
loope
cmpsb
int3
dec
adcb
popl
insb
and
add
mov
xor
andb
mov
test
pusha
loop
in
sub
pop
xchg
pop
rcrb
pop
enterw
mov
int3
addl
rcrb
xchg
inc
js
mov
cltd
int3
push
iret
add
xchg
cmp
mov
xchg
lret
lock
push
pop
fnstsw
add
xor
js
adc
mov
cli
xor
cwtl
mov
sbb
push
sbb
jb
inc
arpl
sbb
xchg
jno
adc
sbb
inc
adc
sub
cmp
mov
jge
andl
mov
test
std
add
rorb
lods
subl
std
insb
dec
jns
jno
orl
nop
pop
dec
xchg
xchg
sub
js
iret
outsb
or
mov
in
xchg
call
les
ficompl
hlt
jno
loopne
inc
push
bound
lock
mov
sub
dec
jb
movsb
and
cli
cmp
out
inc
cwtl
cmpsb
sbb
mov
mov
inc
data16
imul
lock
xor
out
push
or
and
jae
dec
arpl
lock
push
testb
int
leave
sub
mov
mov
and
xchg
mov
outsb
add
cwtl
rorb
ret
mov
arpl
in
in
int
dec
cmp
fnstsw
inc
jle
loopne
lret
mov
jg
ret
in
pop
dec
sarb
mov
aaa
or
movsb
jmp
inc
std
mov
popa
clc
enter
jns
sbb
movsb
aam
jecxz
pop
push
lock
in
and
inc
xchg
dec
out
aad
push
lret
iret
ror
shl
ret
xchg
mov
and
sti
fsubrp
pusha
shrb
mov
dec
cmp
test
mov
sub
je
inc
xchg
out
jle
mov
pusha
les
enter
and
movsb
movsl
and
cmp
xchg
les
mov
cwtl
clc
ljmp
pop
adc
mov
je
cwtl
bound
into
rorb
xchg
fstpt
mov
adc
adcl
add
cmp
push
push
rol
movsb
lods
xor
popa
and
ja
mov
fcmovnb
call
adc
aas
ja
adc
in
idivl
xchg
aam
outsl
aaa
mov
cmp
int3
test
stos
dec
mov
jge
subb
test
lcall
push
mov
rcll
test
pop
inc
xor
xchg
in
leave
sub
flds
or
ret
inc
cltd
sbb
jle
inc
dec
bound
pop
popa
test
sub
push
push
and
mov
jecxz
mov
push
adc
outsl
or
popf
movsl
xchg
outsl
ds
jg
push
sahf
dec
roll
inc
js
repnz
lds
cmp
fs
xor
rorb
test
or
fxch
in
pop
mov
sub
lret
mov
mov
jnp
dec
add
xor
pop
cld
out
into
adc
popa
arpl
test
mov
mov
popf
in
xor
push
mov
adc
sub
es
push
mov
pop
cli
daa
jmp
pop
ret
adc
jmp
mov
push
mov
sbb
cmp
rolb
scas
fists
mov
mov
push
fldt
xchg
lea
and
sbb
xor
or
push
mov
mov
jae
xchg
inc
cli
testl
sahf
and
out
sbb
insb
mov
add
push
inc
push
xor
stos
pcmpgtb
popa
idivb
fs
es
shll
ds
ja
sti
xchg
lock
xchg
inc
or
or
clc
cmp
push
xor
jmp
lahf
mov
sbb
into
loopne
fcomi
jl
xchg
aas
enter
cs
cmp
cs
xor
push
fidivs
or
mov
jbe
sub
jp
out
sub
jl
out
sub
push
clc
ja
lret
das
aad
or
daa
mov
push
push
xor
scas
add
dec
sbb
out
pop
outsb
out
in
push
stc
xlat
pop
nop
inc
lods
and
aam
or
sarl
sbb
sti
cmc
dec
fbstp
pop
in
int
movsl
dec
sbb
mov
lock
xchg
mov
fimull
mov
push
out
mov
js
adcb
adc
xchg
int
orb
add
das
add
clc
aas
pop
aas
hlt
pop
jnp
lds
and
or
mov
lret
push
in
lods
loopne
notl
adc
ljmp
sub
lock
movsb
stc
dec
cmp
mov
sub
jmp
dec
iret
pop
inc
ffree
inc
mov
mov
out
ja
jp
int3
shll
or
mov
mov
sbb
push
jl
fistpll
or
outsl
sub
mov
aam
cmp
xchg
imul
and
mov
xor
cmp
xlat
jg
pop
lahf
popf
mov
ds
xchg
inc
pop
push
lock
fdivrs
add
mov
pusha
stos
sub
sbb
gs
inc
push
cmp
cmp
add
mov
lret
rcrb
inc
add
out
add
mov
cmp
xchg
fmuls
mov
fsubr
inc
dec
cwtl
rorl
inc
call
mov
push
xor
mov
xchg
daa
orl
lcall
cmc
mov
shl
in
andl
ss
shlb
jg
shr
rcll
fs
das
mov
ret
mov
dec
cwtl
inc
mov
loopne
xchg
inc
inc
pop
lods
or
jo
gs
hlt
lds
or
lea
jecxz
sub
cltd
dec
push
mov
ss
mov
ss
xor
popa
pop
or
xor
mov
inc
push
notl
inc
cmp
jle
mov
imul
mov
inc
dec
in
push
sbb
das
inc
inc
stos
in
or
insl
sbb
or
jmp
inc
mov
add
fcmovbe
pop
xchg
sahf
add
test
pop
sarb
mov
enter
mov
aad
jecxz
stos
push
popf
outsl
repz
add
test
out
stc
dec
mov
inc
imul
adc
cli
adc
ja
stc
andl
jb
pushf
fsubp
push
dec
loop
mov
mov
loop
xchg
outsl
cltd
xor
push
fstpt
mov
mov
pushf
fldcw
or
adc
cli
lret
jno
popf
and
pop
je
cs
loope
es
ret
mov
imul
mov
es
frstor
fcoms
loop
cmp
pop
xchg
mov
push
and
orb
icebp
add
or
icebp
aam
loope
sbb
cld
push
push
inc
orl
lods
clc
adc
dec
mov
mov
inc
jecxz
loope
repnz
nop
rolb
data16
out
lahf
xchg
popf
fcoml
pop
pusha
push
test
add
adcl
inc
nop
sub
mov
inc
adc
jne
inc
fcoml
flds
int3
pop
jae
mov
mov
mov
push
shrl
inc
jbe
xchg
fldl
nop
mov
xor
push
xor
pop
mull
sub
pop
mov
pop
scas
sub
jnp
ljmp
es
jecxz
ds
and
sub
mov
shll
pop
add
jns
mov
add
xchg
in
dec
xor
loop
dec
push
rolb
arpl
mov
mov
in
and
aaa
sbbb
ret
jne
cmp
pop
jns
stc
sahf
add
das
fwait
das
daa
fsubs
fsts
sbb
out
xor
dec
andb
xchg
sub
sbb
repz
sar
xor
sti
dec
das
hlt
sub
push
mov
cmp
cmp
repnz
nop
cld
jle
cmp
lods
cld
pusha
aad
inc
push
add
inc
sbb
jbe
push
call
xchg
or
xor
jne
mov
xchg
out
lcall
outsb
mov
sub
or
ds
mov
add
fbld
jg
jne
or
sub
stc
movsl
fildll
mov
adc
fnstenv
frstor
dec
cmp
sub
shll
or
adc
lods
lods
rorb
lods
jle
cmp
cmp
dec
sub
insl
mov
repz
insl
and
repz
negb
lret
notl
sbbl
inc
inc
ficoms
adc
shlb
push
pusha
cmc
push
insl
mov
or
negb
mov
xchg
inc
mov
mov
pop
mov
xchg
mov
sub
imul
inc
das
push
and
test
sarb
in
inc
xchg
cmp
scas
pop
pop
jmp
dec
mov
test
in
push
adc
data16
aaa
aas
or
jg
loop
mov
aam
push
inc
add
and
stc
subl
icebp
adc
lock
fs
mov
jp
jb
mov
mov
xchg
mov
stos
jg
and
fadds
scas
pop
cmc
jno
xchg
and
dec
out
xlat
cmp
pop
fadd
int
adc
subl
stos
clc
out
mov
jp
gs
mov
mov
xchg
sbb
jecxz
hlt
push
mov
push
mov
adc
sub
mov
dec
sbb
mov
push
xchg
jmp
ss
lahf
push
or
add
and
sub
out
cmc
cs
movsb
leave
mov
jmp
jmp
sub
scas
mov
jg
imul
xchg
push
cwtl
lahf
cmp
mov
jl
outsl
les
adc
mov
pop
mov
imul
inc
test
aaa
test
insb
pop
push
int3
pop
outsl
xchg
pop
mov
ss
dec
mov
icebp
fwait
cld
mov
and
cmc
fnsave
mov
cmc
jns
add
imul
jae
push
ret
and
data16
push
jbe
rcll
bound
push
cmp
aad
lods
xchg
add
cltd
cmp
push
insb
fsts
sub
and
push
les
xchg
not
sbb
or
arpl
std
or
cmp
dec
jecxz
inc
leave
and
sbb
sbb
add
cltd
and
shl
jnp
loope
cmpsl
and
and
xchg
repnz
enter
fisttps
jnp
mov
jne
mov
gs
mov
xchg
stc
mov
mov
aam
test
call
les
xchg
out
cmpsb
jnp
and
sbb
subb
sahf
rolb
push
rclb
test
sub
cmp
adc
xor
adc
daa
movsl
into
mov
hlt
int
sub
mov
nop
dec
ret
lahf
lea
movsl
enter
lds
imul
lret
pushf
arpl
mov
shr
xor
nop
mov
jbe
inc
add
pop
mov
push
cmp
repz
ljmp
ja
addb
pushf
push
test
push
lcall
mov
jp
scas
xchg
adc
mov
pop
sbb
movsl
mov
pop
mulb
jnp
lret
out
mov
aam
imul
inc
or
jb
jbe
push
jge
push
jo
lds
sti
lcall
imul
out
pop
mov
jne
js
sbb
sbb
bound
dec
add
xchg
sbb
jo
iret
sbb
lcall
out
mov
ljmp
jmp
std
mov
imulb
hlt
cs
jo
lea
arpl
xor
push
inc
aaa
adc
cmc
add
push
sbb
cmp
ret
or
repz
mov
xchg
inc
push
je
sub
jp
pop
and
or
cmpsb
mov
ret
cmpsb
adc
fsubl
stos
aaa
cmp
pop
adc
xor
jmp
pop
enter
movl
push
mov
push
cmp
stos
test
xchg
mov
jmp
daa
movl
mov
out
shll
nop
shll
adc
jl
negb
mov
fwait
inc
xchg
mov
mov
mov
ja
repz
lcall
mov
adc
pushl
cmpsb
sti
aam
neg
xor
lods
xor
jl
xchg
sub
popf
bound
ficompl
cmc
xchg
into
mov
mov
cmc
scas
mov
push
push
xchg
pop
mov
or
mov
xor
mov
arpl
sarb
ret
out
movsl
repz
mov
loope
or
dec
inc
sub
adc
jne
xchg
inc
or
popa
mov
pop
mov
or
test
mov
fstpt
cmp
sbb
mov
into
int
stc
xchg
std
add
cmp
cmc
pop
pop
clc
adc
jnp
lea
pop
dec
xchg
xchg
mov
je
in
sbb
in
or
icebp
sub
mov
in
popa
loopne
jne
test
inc
in
ret
lods
dec
lock
cmp
push
ret
add
dec
xchg
mov
adcl
sub
adc
outsl
stos
adc
xlat
popa
clc
mov
enter
scas
adc
aad
push
cmp
xchg
rorl
cs
inc
cmp
clc
xor
mov
and
jg
aad
mov
mov
mov
mov
jmp
xor
mov
sub
adc
xchg
jnp
out
jmp
es
fwait
test
sub
inc
or
push
mov
mov
daa
xor
fsubrl
loopne
pop
dec
lretw
mov
push
push
ror
and
lds
inc
or
pop
test
fsub
es
gs
mov
inc
mov
lcall
dec
sbb
adc
mov
fnstsw
les
fisubrl
fidivrs
ds
pusha
add
adc
fnsave
ficoms
jne
or
js
not
or
jo
div
inc
bound
fcoml
lea
imul
xchg
jae
push
arpl
push
mov
test
sub
decl
pop
and
int3
adc
xor
xchg
repnz
pop
mov
xchg
push
vpcmpgtw
lods
or
sbb
int3
mov
dec
push
push
or
or
pop
rcrl
sub
dec
les
mov
cld
adc
xor
push
das
pop
and
pop
jne
pop
in
lret
out
imul
pop
fsubr
and
add
mov
mov
aam
dec
lds
repnz
ss
cmp
cmc
or
lret
pop
jae
sar
pop
lcall
mov
dec
pop
pushf
inc
mov
test
mov
xchg
mov
push
inc
aaa
jle
loope
xor
in
xchg
mov
fcomps
mov
lock
sbb
cwtl
dec
sub
inc
ss
inc
ret
stos
sti
pop
mov
push
aad
adc
dec
dec
lods
daa
and
addr16
adc
jbe
push
cli
inc
jl
clc
cmp
dec
fcmovb
test
es
cltd
pushf
cltd
xor
dec
jns
inc
jnp
push
sub
shll
in
jae
shr
jo
push
and
mov
xor
jp
mov
sub
fabs
adc
movsb
cmpsl
push
outsb
fldcw
and
push
dec
in
shlb
mov
imul
ds
clc
inc
stc
int3
gs
sub
sahf
scas
lods
push
stc
inc
cmpsb
xchg
leave
repz
add
push
jecxz
adc
out
repz
push
cmp
cltd
inc
pusha
push
jle
sub
fxtract
push
pop
and
cmpsl
add
jp
dec
popf
mov
jg
pusha
cmp
inc
push
decb
push
scas
pop
pushf
pop
jne
jbe
std
insb
js
les
popf
pop
cmp
sbb
or
pop
push
cmp
bound
add
xlat
push
cli
fwait
dec
cld
test
and
mov
lds
sbb
cwtl
cmpsb
fcomp
cli
jno
aas
bound
dec
or
cltd
push
mov
mov
cld
push
pop
enter
notb
push
pop
or
inc
ds
call
lret
dec
ss
sub
jno
icebp
fwait
stos
pop
sub
addr16
lret
out
mov
push
dec
std
jmpw
mov
and
sti
jns
or
and
pop
jnp
gs
stos
sti
fwait
repnz
call
cwtl
pop
aam
daa
xor
arpl
rorb
lea
push
lea
jbe
or
mov
movsl
mov
or
push
adc
dec
test
xchg
adc
inc
xchg
test
out
and
cli
sbb
mov
orb
pop
mov
out
mov
or
pusha
pop
daa
xchg
test
mov
and
push
pop
mov
dec
int3
pop
faddl
mov
cwtl
mov
pop
dec
mov
insl
scas
in
outsb
in
rorl
mov
sub
xchg
push
aam
or
icebp
enter
push
lods
test
lea
cli
or
push
test
pop
in
xchg
lret
scas
insb
and
loopne
adc
push
cmc
jno
inc
mov
inc
lcall
adc
sbb
mov
sarl
mov
inc
mov
js
ja
lret
push
rcrl
enter
add
ret
scas
mov
rclb
and
mov
stos
sbb
sbb
inc
clc
ds
or
ja
xchg
sub
pushf
loopne
mov
mov
xor
cmp
inc
push
ja
mov
jne
aam
dec
mov
mov
outsb
or
int3
xchg
push
fidivl
iret
cli
mov
rorl
out
flds
lret
xchg
and
mov
jno
rclb
mov
jmp
test
jecxz
fisttpl
and
mov
mov
test
pop
push
lea
sahf
mov
and
xchg
push
pop
inc
cmp
sub
or
sub
inc
daa
inc
jmp
adc
test
sti
shl
scas
ljmp
adc
shll
mov
pushf
xchg
mov
push
test
mov
inc
dec
cmp
add
dec
mov
sub
xchg
fmull
idivb
dec
and
xchg
test
loopne
jg
pop
stos
clc
lcall
lcall
es
gs
xchg
outsb
stos
add
sub
inc
xor
sub
jmp
or
repnz
stos
or
push
ficoml
ja,pn
stc
ljmp
outsb
xchg
inc
imul
mov
in
xor
inc
movsb
lret
and
dec
and
sub
pop
mov
jge
fldt
jmp
adc
imul
xchg
pop
xor
or
into
mov
out
sti
inc
leave
inc
in
insb
add
ficoml
jns
cmp
fcmovnu
cmp
jns
mov
loopne
into
pop
outsb
jmp
sar
stos
push
in
jmp
push
xchg
iret
or
fs
daa
or
imul
js
out
ret
and
and
fstp
mov
lret
fs
test
sahf
xor
jle
mov
mov
dec
cmpsl
test
fistpll
dec
jge
xor
dec
enter
les
push
xor
cmp
lea
add
out
enter
sbb
loope
rcll
sbb
les
ret
xchg
mov
inc
or
sub
xchg
mov
jp
cmp
dec
inc
dec
push
jbe
jmp
pop
mov
shl
es
or
push
inc
mov
pop
jl
or
repnz
shll
add
cwtl
xchg
imul
fcmovnb
mulb
ljmp
add
xchg
dec
or
scas
mov
jo
dec
cli
mov
aas
sub
xchg
jnp
jmp
push
mov
adc
pop
int
pop
and
xchg
idivl
push
aad
dec
cmpsb
xchg
pop
enter
jge
dec
into
push
imul
sub
and
pop
bound
or
xlat
test
pop
fnsave
cmp
mov
in
and
fimuls
fwait
cmc
mov
adc
xlat
xchg
push
and
sub
daa
aaa
mov
cmp
adc
jnp
inc
icebp
jmp
data16
test
jmp
stc
pop
xor
test
out
cmp
lods
xor
bound
inc
pop
add
adc
inc
mov
jl
mov
rclb
aas
xchg
lret
movsb
jge
fucomp
and
xlat
mov
adc
dec
jge
sub
inc
xor
ret
arpl
aam
sbb
mov
sarb
jae
int
cltd
pop
push
sbbb
in
push
ret
ds
sti
mov
inc
sbb
xchg
jl
lret
sahf
adc
nop
mov
loop
and
push
lahf
push
loopne
cmp
dec
jo
inc
jbe
insb
cmpl
rcl
inc
jmp
pusha
sub
push
jp
aad
mov
daa
dec
les
lahf
jno
cmp
pop
and
dec
mov
stc
xchg
mov
lahf
sbb
mov
and
xlat
rolb
cmp
cmp
arpl
inc
sbb
xchg
adc
pop
fiadds
lcall
push
inc
pop
dec
sub
pushf
jnp
orb
in
mov
cmp
jbe
xor
ret
pop
jbe
mov
sub
cmc
cmpb
popf
repnz
hlt
movsb
inc
dec
cmp
lods
adc
popa
in
push
mov
sbb
fadds
lds
mov
in
and
clc
jl
inc
xchg
jo
stos
arpl
daa
fsubrl
jle
cltd
fsubl
cmp
fs
jl
push
pop
movb
imul
in
aam
xor
inc
and
push
mov
push
lea
push
cmp
fiadds
out
inc
in
mov
mov
and
mov
add
fstl
cs
pop
les
outsl
je
add
sbbb
cli
inc
and
call
mov
cmp
into
pop
cltd
mov
in
mov
xor
adc
sub
cmpsl
lods
mov
ja
ss
jmp
cmpsb
ret
mov
xlat
jb
add
cmp
xchg
movaps
and
repnz
xchg
or
and
or
adc
subb
cmp
or
mov
mov
cmpsl
pusha
mov
loope
xchg
dec
jge
push
sub
pop
fwait
inc
adc
lfs
pop
gs
addr16
dec
hlt
or
loope
pop
loop
jecxz
push
popf
jg
pop
lea
push
aas
sub
daa
aam
ja
daa
stos
sub
aam
cltd
in
add
pop
cmc
flds
ret
mov
mov
pop
xchg
adc
inc
jns
outsb
pop
rcll
cmp
test
insl
add
inc
mov
add
hlt
enter
int
pop
sbb
hlt
mov
pop
sub
movsb
cmp
jle
icebp
mov
dec
add
je
jl
mov
or
sub
sbb
js
adc
js
mov
dec
in
das
stos
xor
out
dec
push
clc
push
add
jne
cli
das
adc
pop
lret
push
xor
xchg
daa
push
xchg
aas
xlat
ja
stos
xchg
push
cs
popf
lds
inc
pop
add
and
in
insl
xchg
jp
push
and
test
mov
ret
add
lock
cmpsl
popf
jns
and
shlb
mov
mov
and
js
jg
or
sysexit
add
dec
push
add
nop
sbb
jno
daa
xchg
xchg
or
and
mov
cli
ret
stc
jb
adc
xchg
add
cmp
inc
insb
pop
inc
hlt
ret
out
ret
stos
ud1
adc
xor
jns
mov
pusha
fisttpll
pop
dec
jg
dec
adc
or
and
fcomp
es
loopne
xlat
jne
cs
gs
lock
xchg
pop
int
inc
or
xchg
mov
adc
mov
test
jae
test
ss
ror
sub
lds
lods
filds
ficompl
and
sti
lcall
inc
sti
inc
aas
das
dec
jle
mov
cmp
xor
sbb
js
mov
pop
aad
lods
lds
push
dec
jne
xlat
fnstenv
int
adc
push
push
daa
divb
cmpsb
sub
fnstcw
push
push
cmp
cld
roll
shl
pop
test
cmp
jne
in
and
cmp
and
sub
mov
repnz
sbb
xor
sbb
js
push
add
mov
test
lret
jno
inc
xchg
jle
adc
sub
ja
fs
addr16
sahf
pop
dec
outsl
das
xor
sbb
lcall
mov
sbb
pop
test
jg
xchg
xor
cld
jb
dec
out
into
lcall
adc
ja
inc
mov
pop
push
fdivl
dec
fstl
push
das
mov
cmp
push
mov
stc
inc
out
xor
add
jg
xchg
fadds
cmp
and
or
loopne
and
cs
lock
clc
xor
push
in
mov
mov
pop
pusha
add
into
xchg
or
mov
les
or
pop
xchg
dec
ss
dec
jbe
cld
out
mov
mov
dec
scas
dec
push
inc
dec
aaa
and
out
xor
push
add
stos
out
std
cmc
shlb
fcomip
inc
aaa
dec
dec
pop
rcrb
push
dec
int3
jmp
jle
movsl
xchg
fadds
aaa
and
lret
add
jmp
mov
clc
daa
or
add
or
cwtl
push
and
lods
insb
outsl
insl
les
jns
push
cs
jecxz
xchg
mov
insb
mov
xor
cs
rclb
mov
fs
jmp
xchg
mov
fistl
insb
jecxz
sub
push
shr
push
mov
in
loopne
pop
daa
jns
jp
ljmp
xor
jns
dec
lods
dec
adc
jae
dec
mov
push
mov
scas
cmc
sbb
nop
mov
push
sub
loop
dec
js,pt
dec
adc
push
lret
aas
test
sarb
ret
fsubp
sub
imul
inc
out
insb
inc
and
mov
sub
lea
xchg
addr16
push
push
jne
lret
cmp
out
push
test
adc
sub
sbb
sub
rorb
push
xchg
call
mov
mov
shlb
cmp
mov
gs
outsb
and
push
xchg
xor
sbb
dec
push
fcmovnbe
aam
arpl
add
sub
sub
pushf
out
cmc
adc
sub
cmp
inc
cmp
sti
mov
sbb
xchg
hlt
scas
push
je
cwtl
sub
mov
and
clc
dec
mov
mov
pop
imull
ljmp
fbstp
pop
insb
lcall
loopne
mov
mov
pop
push
jns
das
xchg
aas
sbb
les
out
mov
aas
adc
or
aaa
xor
pop
inc
popa
pop
aaa
dec
mov
xor
jae
adc
cmp
fcoms
daa
mov
rol
adcl
inc
xor
push
mov
adc
mov
adcl
xor
je
mov
jge
into
cmpsl
cli
mov
xchg
fdivl
push
mov
inc
shl
stos
xchg
cld
daa
icebp
xchg
push
cltd
scas
sub
jb
xchg
mov
in
mov
cwtl
arpl
pusha
lock
fildl
testb
pop
out
cltd
mov
lret
sbb
dec
jae
jo
mov
imul
test
aaa
sub
add
cmp
icebp
data16
dec
lods
jl
aas
and
out
sbb
xor
mov
loope
push
lea
nop
rolb
push
sbb
sbb
add
in
ret
add
gs
push
mov
ljmp
mov
adc
sub
pop
push
testl
stos
jmp
sbb
sbb
loopne
shlb
sbb
lock
add
mov
mov
lea
jbe
pop
loope
lods
jae
mov
fidivs
cmp
mov
scas
neg
jae
mov
sub
dec
mov
loope
cmc
jno
jp
stc
pop
out
test
sub
dec
stos
push
add
dec
test
outsb
clc
jp
xchg
adcb
add
mov
and
cmp
iret
cwtl
movsb
pusha
flds
mov
aam
pushfw
shll
push
int3
out
jne
dec
pop
jg
pop
xchg
adc
xchg
sub
mov
in
push
imul
dec
adc
inc
fsubrs
repnz
push
outsl
push
stc
inc
add
cmc
or
test
cmp
imul
imul
push
fcmovu
inc
or
out
rclb
mov
inc
cmp
cmp
adc
lret
test
addr16
loop
push
cwtl
cmp
dec
jmp
je
pop
mov
call
or
ret
lea
jbe
jb
pusha
jmp
test
pop
pop
lret
js
loop
outsb
fmull
cmp
dec
popf
leave
fmul
adc
leave
push
push
outsb
movsb
clc
and
mov
jns
push
out
sahf
jg
xorb
cmp
repz
pop
sub
inc
cltd
xor
mov
sub
mov
arpl
cld
pop
and
imul
fimuls
mov
lahf
test
dec
inc
push
sti
sbb
dec
loope
out
xchg
cmp
pop
sahf
mull
mov
sahf
mov
ds
cmp
cmp
sbb
jg
sbb
cmp
ret
mov
hlt
sti
aas
push
int
fcomps
xor
and
in
xchg
mov
jp
cld
rcl
enter
xor
in
adc
je
movsl
lea
and
stos
sahf
and
pusha
or
stos
lods
sahf
jb
stc
mov
add
imul
aam
xchg
and
inc
xchg
mov
mov
loop
into
std
xor
es
sbb
and
lods
out
mov
stc
mov
fwait
mov
icebp
dec
mov
xchg
or
push
xchg
out
in
dec
xor
test
loopne
and
fdivr
test
repz
scas
ja
push
dec
inc
mov
push
mov
cmp
xchg
inc
xchg
sub
or
fwait
repnz
cltd
into
enter
js
push
ret
or
cmp
lea
dec
ret
or
lret
out
xlat
and
inc
out
jnp
push
jno
sbb
fisttps
mov
cmpsl
push
fwait
adc
pop
notl
pop
fidivrl
jns
push
xchg
jg
movl
pop
add
push
in
push
int
mov
mov
xchg
clc
sbb
cmp
sbb
rcrl
icebp
inc
jno
add
repnz
jns
arpl
xchg
sub
pop
lret
jo
jmp
sub
cs
and
ret
lock
adc
inc
or
adc
or
lods
push
inc
fdivrs
pop
jg
pop
out
adc
dec
or
mov
jecxz
pusha
adc
mov
stos
and
in
xchg
pop
adc
xor
cld
fwait
js
fistpl
push
insb
dec
sbb
cld
mov
cmp
sub
rcl
movl
inc
dec
xorb
inc
push
pop
mov
adc
rcl
push
jmp
inc
jl
aad
pop
push
add
xlat
pushf
scas
add
popf
out
xchg
es
scas
and
loop
add
push
mov
pop
adc
lret
cwtl
in
pop
mov
mov
ja
daa
out
pop
mov
pop
lds
cmp
jnp
and
jp
popa
je
mov
insl
ror
mov
dec
push
mov
aad
test
mov
cld
aad
pop
sbb
frstor
daa
insl
xor
push
xchg
cmp
or
xchg
sub
andl
call
test
rorl
fwait
cwtl
push
pop
sub
fcoms
cmp
ret
and
mov
addb
sti
push
sbb
jmp
push
mov
cmp
mov
xchg
daa
sti
subb
add
mov
test
jbe
fcmovbe
mov
mov
mov
fldt
adc
mov
xchg
mov
unpckhps
xchg
pop
fsubl
cmp
push
dec
pop
loope
scas
push
int
decb
stos
pop
pop
lret
dec
fsubp
jmp
loop
inc
sbb
sub
loope
sahf
sti
or
or
jno
and
insl
pop
fmul
icebp
pushf
dec
es
mov
ret
cmp
dec
and
movsb
push
cmpsb
inc
mov
cltd
into
addr16
pusha
mov
fisttps
jns
inc
mov
shr
je
inc
out
sub
sub
or
or
mov
and
lcall
adc
lds
mov
sbb
xchg
push
rcrb
adc
movsl
das
inc
sub
popf
sahf
js
in
in
cmp
scas
mov
push
push
dec
mov
cwtl
cmp
sub
lods
pushf
add
fsubl
rolb
in
or
popa
xor
xor
sbb
lock
adcl
cmp
icebp
push
inc
sbb
cwtl
pushl
mov
jecxz
sub
and
xchg
pop
and
push
or
dec
cli
push
in
and
shll
push
xlat
repnz
outsb
pusha
cmp
leave
loope
xor
mov
mov
std
roll
adc
mov
jne
mov
dec
push
sbb
mov
adc
mov
std
sub
pause
sub
in
and
fidivs
ljmp
xor
std
push
sub
popa
das
iret
addr16
js
or
jbe
fwait
lods
bsf
lret
pop
jne
fdivrl
or
in
inc
shrl
hlt
dec
xchg
add
push
in
add
mov
icebp
jnp
sbb
pop
sbb
sub
jle
mov
and
dec
addb
jg
lret
not
loope
mov
mov
or
sarl
mov
daa
adc
sub
mov
xchg
mov
mov
nop
push
or
sbb
and
add
repz
pcmpgtw
cmp
sbb
into
jmp
xchg
ds
push
movb
fdivrs
and
cld
xchg
rorl
pcmpeqw
inc
leave
cmp
cld
xchg
sbb
and
add
ret
rclb
int
pop
popf
inc
pop
inc
outsb
js
jae
xorl
push
leave
jle
out
fildl
sub
add
aam
leave
aas
mov
adc
jp
lea
repz
imul
mov
fcmovne
sbb
jge
ljmp
jle
fisttpll
mov
ret
shrb
push
cmp
cli
jg
dec
xchg
repnz
sti
fcomps
stos
daa
lods
je
int3
xor
adc
inc
fcoml
push
inc
adc
inc
mov
loopne
icebp
inc
outsl
ds
shll
ss
pop
fistpl
lret
mov
and
mov
outsb
pop
mov
outsb
or
lock
lret
into
jecxz
sbb
insl
pop
mov
jns
jecxz
aaa
fs
inc
mov
lea
in
inc
iret
mov
push
xchg
hlt
mov
xchg
push
sti
jecxz
lret
jp
xor
add
jb
jbe
lret
mov
ja
std
and
or
sbb
ror
divl
inc
xchg
pop
mov
mov
xchg
push
push
test
mov
inc
dec
mov
fsub
les
sbb
mov
aam
jne
leave
dec
mov
mov
and
das
cmp
lret
or
dec
sbb
and
cmc
insl
je
aad
aam
sbb
mov
jnp
xor
mov
mov
mov
insb
ja
push
repz
cmp
daa
dec
push
xchg
and
insb
mov
out
loopne
cmp
mov
lock
push
jg
js
leave
jge
dec
sub
scas
mov
mov
xchg
sub
push
adc
jns
push
mov
lahf
pushf
dec
xchg
cs
loop
dec
push
add
icebp
cmpb
movsb
lcall
sub
adc
cmp
idivl
imul
push
movsl
add
mov
fcmovbe
ficompl
push
hlt
mov
push
mov
out
adc
pop
mov
push
fmull
enter
rorb
out
xchg
imul
mov
scas
fs
mov
fcmove
inc
inc
sbb
test
rcr
les
in
cli
xlat
xchg
inc
movsb
cltd
push
lea
cmp
inc
lahf
jno
cmp
call
stos
mov
jbe
sub
push
cmp
js
adc
lea
jle,pt
lcall
rorb
inc
movsl
jl
mov
adc
jae
jb
popf
mov
sub
sbb
mov
inc
fidivrl
call
mov
or
ljmp
addr16
movsb
cmp
mov
insb
pushf
in
and
xchg
rorl
scas
cmpsb
rorl
aad
jo
or
jge
push
testb
or
pop
test
sub
shlb
int
scas
hlt
adc
ss
pop
push
and
fs
test
icebp
in
sbb
ds
les
scas
inc
fwait
dec
mov
pop
rorb
dec
lods
loopne
adc
sbb
inc
imul
test
adc
je
and
fmul
adc
stos
push
outsb
sub
repz
jle
mull
pop
push
dec
movsb
leave
inc
aad
sbb
aaa
outsl
sbb
fs
lds
popa
adc
enter
mov
jb
sti
sub
mov
cli
ja
pop
dec
jge
xchg
or
xchg
andl
lods
mov
jne
iret
push
cmp
ja
std
je
ds
and
mov
into
out
cmp
stos
cmc
pop
lds
mov
mov
dec
push
fimuls
sbb
pushf
xchg
out
xchg
adc
fsubrs
xchg
popa
jge
mov
and
jecxz
lret
dec
pusha
pop
adc
je
pop
or
pushf
cli
nop
jo
push
sub
std
dec
mov
outsb
and
cmp
js
inc
mov
xchg
hlt
fldenv
pop
pop
mov
into
lock
xor
and
mov
pop
cmovbe
sbb
mov
lods
dec
xlat
xlat
xor
mov
dec
stos
jo
pop
xor
mov
jg
clc
add
jmp
aaa
test
add
imul
cld
loopne
pop
mov
push
mov
inc
test
sti
xor
imul
or
push
je
mov
pop
fcom
sahf
movb
xor
fnstenv
push
stos
pop
ret
mov
jns
into
lods
js
je
dec
or
enter
mov
enter
pop
repz
mulb
cld
lock
scas
ljmp
or
xor
ljmp
jecxz
and
into
into
inc
pop
pop
pop
scas
ljmp
pop
int3
mov
loopne
push
jns
cwtl
mov
rclb
jp
sub
and
add
push
jno
xchg
mov
aaa
pop
xchg
pop
sub
sbb
fldenv
adc
fildll
insb
pusha
ds
aad
dec
bnd
lods
cld
push
in
aas
jae
loopne
jne
lcall
sbbb
arpl
xlat
loop
mov
divb
fdivp
int
test
push
pop
mov
pusha
gs
sbb
jno
mov
xor
xlat
mov
cmp
sbb
fwait
push
pushf
inc
dec
movsl
lret
xor
int
nop
adc
test
cltd
jl
cmc
pop
call
jne
jae
lea
jmp
scas
repz
push
sbb
jae
popa
out
push
aam
adc
shlb
shrl
xlat
leave
test
aas
arpl
mov
lds
js
adc
ss
dec
mov
pop
fildll
mov
orl
jno
jp
js
push
xchg
sub
cmp
inc
inc
inc
es
scas
push
lcall
mov
daa
jae
mov
xorb
push
inc
adc
xor
xor
mov
cmpsb
ss
push
ja
leave
adc
mov
jne
mov
mov
aaa
sbb
nopl
pop
clc
movsl
push
in
mov
xchg
testl
rcrb
adc
and
scas
dec
sbb
fisubs
pop
ficoms
pop
mov
inc
push
jg
xor
mov
push
and
pop
in
addb
or
fbstp
inc
lret
push
mov
add
outsb
out
sub
out
or
js
xor
cli
lods
push
dec
loopne
xorl
jae
cs
xchg
lds
push
out
andb
outsb
cmp
shl
push
xor
or
dec
mov
mov
and
roll
mov
xchg
dec
add
cmp
jo
repnz
jae
mov
fldcw
jns
xchg
clc
icebp
mov
mov
jmp
sahf
mov
push
repnz
xchg
iret
test
inc
cmp
xchg
mov
sub
das
mov
xor
jle
add
add
scas
adc
dec
std
mov
lds
xorb
in
nop
cmpb
push
insb
mov
xchg
ret
push
push
mov
shrb
rorl
xchg
cmp
pushf
fs
in
jle
std
add
pop
mov
aaa
fnstsw
xor
inc
mov
sub
jecxz
inc
out
mov
lea
repnz
andl
pop
loopne
sbb
mov
imul
or
data16
dec
sbb
movsb
jo
add
aaa
into
sahf
mov
dec
into
cmc
out
mov
jno
add
pop
mov
or
sub
adc
out
fstpt
xor
stc
jle
lock
mov
mov
movsl
arpl
scas
leave
pop
fldt
subb
sarb
pop
icebp
hlt
xchg
shr
dec
xchg
inc
fiaddl
mov
popa
mov
outsb
das
or
popf
add
jne
or
fdivs
enter
pusha
push
loop
loope
lock
scas
push
into
push
mov
rcrl
sbb
adc
fisubs
xor
lcall
xor
insb
mov
std
xchg
test
rclb
jg
test
mov
xor
mov
fucomp
sahf
cmp
xchg
xchg
scas
rolb
or
cld
mov
sbb
insb
jb
sub
push
imul
and
sbb
jns
xchg
cltd
mov
cmp
fdivl
fnstsw
jl
and
xor
inc
stos
add
cli
pop
cmp
mov
xor
jbe
adc
daa
ljmp
push
cmc
test
daa
jg
and
xchg
mov
in
popa
mov
aas
cmp
pop
add
push
mov
mov
lahf
or
repz
rolb
in
or
mov
in
fstpl
dec
lahf
shl
or
notl
adc
mov
xor
cld
mov
xchg
adcb
adc
sbb
dec
popa
sti
imul
ficoml
stos
add
imul
sahf
lods
fwait
rcll
out
push
sub
push
mov
les
faddl
pushf
adc
add
sub
cltd
arpl
dec
fwait
cmp
xchg
push
out
xchg
and
fnstcw
outsb
pop
pop
pop
push
stc
or
fsts
cwtl
sar
lds
pop
cmp
cmp
jecxz
cmp
lea
jb
je
or
push
sarb
sbb
repnz
push
pop
mov
or
cmpb
cwtl
inc
xor
mov
cmp
les
pop
sub
std
push
negb
xchg
inc
cmp
or
fs
movsl
push
add
push
mov
cmp
cmp
and
xchg
pop
sub
dec
adc
fxch
lret
and
js
pushf
test
es
push
mov
push
jb
dec
pop
nop
rolb
xor
nop
jb
addr16
out
cwtl
dec
jg
je
dec
nop
or
mov
sub
int3
jae
xchg
jns
and
jne
sti
cld
mov
cmpsb
js
daa
jmp
xor
pop
sbb
mov
sub
inc
push
int3
mov
dec
int
mov
mov
arpl
or
add
jle
les
add
pushf
jmp
push
mov
or
jns
jecxz
mov
sbbl
or
lcall
call
add
cmp
pop
mov
cmc
repz
dec
scas
mov
sahf
sbb
and
and
mov
lods
outsl
scas
or
jns
fs
xor
cmc
pop
hlt
or
mov
add
xor
inc
mov
ja
push
adcl
lahf
ja
inc
inc
les
pop
call
movsl
mov
mov
mov
fsub
cs
mov
incb
leave
out
push
sub
pop
jb
mov
mov
jnp
stos
nop
ds
push
push
incl
daa
cmp
push
es
lods
add
stc
pop
sbb
rcll
mov
cmovs
jmp
or
xchg
mov
fwait
push
pop
or
xchg
fildl
notl
inc
push
push
divl
or
ret
dec
xchg
sbb
mov
shll
test
dec
mov
or
cmp
cmp
sub
inc
outsl
andl
lock
cmpsb
jns
or
sbb
xchg
in
addr16
fmuls
mov
jmp
into
lods
mov
xor
sbb
adc
mov
mov
fs
adc
arpl
xchg
dec
lods
lret
inc
mov
in
adcl
subb
test
push
dec
adc
daa
mov
jns
inc
enter
mov
jge
shlb
sub
int
mov
fisttps
in
mov
mov
xchg
ss
cmp
add
fs
xchg
ret
das
dec
or
test
add
fisubrs
aaa
push
dec
add
loop
loope
scas
fs
mov
ret
cwtl
in
inc
push
outsl
pop
hlt
dec
pop
add
stos
xor
dec
cmp
lods
sbb
test
mov
jae
js
movsl
mov
ss
in
and
pop
faddp
adc
xchg
xchg
aas
pop
or
cmc
mov
stos
add
cltd
pop
pop
mov
std
mov
cmp
xchg
sub
mov
inc
jge
jnp
and
sbbl
pop
idiv
dec
arpl
sub
scas
push
ja
mov
lock
pop
dec
inc
sbb
lods
push
icebp
out
ds
or
mov
mov
add
test
adc
lcall
popa
jl
jp
into
jb
push
jp
inc
inc
pop
jno
xchg
xchg
push
subl
mov
jmp
imul
fs
idivl
fistps
mov
sti
das
xor
push
xchg
and
gs
mov
pop
mov
scas
cmp
adc
dec
jge
xor
aam
int3
xchg
mov
mov
add
mov
stc
add
jns
lock
andb
lret
and
sbb
aam
lea
adc
cmc
in
loopne
or
jmp
add
cli
call
sub
xchg
mov
stos
cli
je
mov
stos
repz
sub
out
pop
ret
sub
mov
mov
addb
jno
scas
dec
fsubp
mov
mov
pusha
push
fmuls
add
inc
mov
and
push
test
in
push
lods
add
cmp
out
jno
or
mov
cmp
push
add
lods
push
loop
test
sti
sti
lret
pop
fsub
leave
mov
lock
fldenv
pop
xchg
push
add
cltd
repz
shll
es
lods
addr16
decl
sbb
lds
je
rorb
mov
inc
pop
clc
fs
adc
pop
cmpsb
pop
int3
mov
pop
cmp
in
inc
in
pop
mov
push
mov
push
rorl
dec
sub
jp
xchg
jge
mov
comiss
inc
out
dec
xchg
stc
pop
scas
sub
ret
sti
loopne
add
inc
push
rcll
das
out
movsl
cltd
dec
dec
jg
fdivs
cmp
or
lock
mov
adc
lods
inc
ds
ss
mov
movsb
mov
aaa
insb
or
mov
cmp
jp
xor
mov
adc
popa
rcrb
mov
push
test
or
loope
xchg
push
sbb
lret
mov
lods
fwait
leave
les
ja
mov
fwait
scas
cmpsb
stc
mov
repnz
xchg
cmpsl
scas
fisubs
ret
repz
movsl
push
pushf
out
pop
inc
das
pop
shlb
stos
in
clc
xchg
mov
loop
loopne
fisttps
jo
jmp
xor
imul
jo
mov
ljmp
jl
sti
cli
push
stos
das
in
cmp
adc
cmp
mov
inc
or
cmp
xchg
push
fwait
int
daa
call
mov
sbb
jbe
test
xchg
lock
add
dec
inc
and
mov
sbb
xchg
lea
lods
jl
divb
insb
test
xor
nop
xor
in
js
pop
push
shr
jmpw
mov
cmpb
mov
sub
jg
and
cmc
enter
sub
mov
sar
andl
jns
je
dec
inc
addr16
jae
add
add
imul
push
xchg
mov
fdivrp
lret
adc
cmp
test
in
mov
add
mov
mov
jns
popf
or
mov
or
pop
mov
fdivl
lret
fnsave
dec
je
jnp
adc
xlat
xchg
push
pusha
rcl
jg
push
xor
and
outsb
pop
das
das
fisttpl
sub
cli
push
xchg
pop
xlat
mov
dec
int
add
cmp
adc
pop
push
adc
cs
mov
or
ss
cmp
movsb
sub
jbe
xor
fs
sbb
scas
sbb
xorl
jg
and
ja
pop
loope
movsl
sahf
push
cmp
push
mov
or
sub
xchg
cmp
and
loop
jae
mov
fistps
sub
repnz
nop
out
in
cmp
pop
add
stc
addr16
divb
test
scas
daa
rcr
and
faddl
mov
and
add
out
leave
and
fdivrs
push
push
int3
outsb
enter
imul
mov
adc
pop
push
adc
jp
mov
mov
fwait
lret
testl
call
xor
xor
pop
es
adc
add
test
cli
xchg
pop
inc
fs
jnp
add
cmp
jo
sbb
pop
aam
aam
sbb
mov
cs
jp
pop
fucomip
jns
mov
mov
xchg
push
dec
leave
cwtl
pop
mov
test
out
push
rol
enter
sub
hlt
and
out
lea
add
xchg
push
add
addr16
mov
push
pushf
pop
pop
idiv
sahf
jns
add
js
push
mov
fcmovne
xchg
inc
pop
addb
enter
dec
pop
call
int
daa
aad
mov
inc
mov
in
xor
mov
pusha
jle
xor
frstor
cli
shl
mov
test
dec
cmpsb
mov
add
notl
sbb
add
enter
xor
mov
sub
sbb
sbb
lods
xchg
push
fs
cli
cwtl
mov
fisubrs
push
fcmovnb
cmp
rol
imul
dec
or
mov
xor
sbb
fnstcw
daa
adc
iret
lret
add
and
int3
cld
sbb
push
lds
fnsave
mov
and
mov
mov
cmc
xchg
push
xchg
and
shl
sub
adc
mov
mov
std
stc
jle
ja
and
mov
xor
lret
iret
outsb
mov
push
cmpsb
jb
push
push
into
scas
push
sbb
call
imul
inc
outsb
sub
mov
cs
imul
adc
lds
jno
jnp
mov
and
je
aam
mov
fisubl
movsbl
ja
jge
xor
push
test
outsl
sub
shrl
enter
jo
jecxz
sarl
push
push
sbb
mov
ret
cs
mov
jmp
imul
aaa
mov
inc
loope
mov
sbb
into
push
enter
mov
xor
or
mov
xorl
cs
sbb
mov
sbb
insl
mov
or
sub
loope
sub
ret
jne
mov
lret
addl
and
push
adc
lds
dec
push
cs
lea
add
jg
mov
call
and
mov
sarl
pop
rorb
pextrw
dec
lea
adc
repnz
cbtw
bnd
mov
xlat
movl
jl
push
cmp
xchg
mov
pop
sbb
insl
lea
sbb
out
fsubrl
aas
call
ror
jo
push
mov
pop
je
adc
dec
add
mov
dec
or
int3
jecxz
outsl
cmpsl
nop
xchg
or
in
jmp
jo
mov
xor
fimuls
mov
ret
mov
add
lods
and
sti
jno
push
lock
and
mov
fadd
cwtl
leave
push
sarb
mov
push
roll
insl
add
adc
dec
in
cs
sbb
inc
jae
jb
push
inc
scas
cmp
lods
jo
xchg
shlb
mov
mov
inc
push
repnz
sub
dec
inc
sub
pusha
pushf
or
popf
das
aad
lock
iret
mov
gs
hlt
cwtl
int3
cmp
outsb
mov
je
xchg
movsl
cmp
imul
icebp
mov
dec
jmp
ss
cmpsb
jg
je
or
test
xorb
jae
sahf
inc
jmp
inc
fwait
lahf
int
mov
sbb
pusha
movsb
xchg
btr
mov
aam
xrelease
mov
jnp
pop
clc
mov
loope
mov
mov
mov
mov
lds
aas
test
cmp
call
mov
mov
jnp
in
cltd
mov
or
fstpt
mov
push
mov
add
lret
shlb
mov
inc
sbb
fsubs
scas
xchg
test
jns
and
in
jbe
jne
push
testb
mov
std
cmp
sahf
in
pop
inc
sub
stc
lods
jle
sub
lret
cmp
push
xchg
pusha
arpl
das
imul
test
imul
sbbb
test
adc
sbb
dec
mov
mov
lret
fnstenv
mov
pusha
sahf
xor
cmp
and
int
mov
out
in
ret
cwtl
push
enter
xor
adc
idivl
inc
dec
mov
or
push
imul
dec
mov
loopne,pt
call
lret
or
mov
clc
mov
popa
loop
cmp
jnp
dec
mov
xlat
xor
inc
scas
enter
pop
rorl
es
sysret
cld
ret
daa
pop
int3
lods
in
pop
mov
mov
rol
adcb
mov
push
push
or
xchg
pop
and
jne
test
push
divl
into
mov
dec
xor
ds
cmp
cmp
movsb
shlb
mov
lret
fistps
ror
cmp
cmpsb
or
xchg
iret
xor
adcl
outsl
mov
push
jo
or
loope
push
xlat
cmc
popa
sub
std
flds
jecxz
adc
nop
cmp
pop
sub
or
sbb
cltd
mov
out
jle
push
sub
imul
nop
mov
imul
cwtl
ljmp
cmp
repnz
inc
aas
in
and
mov
lods
mov
push
mov
rorb
and
out
out
jb
test
les
add
into
scas
inc
lahf
or
sarb
mov
or
insb
jle
sbb
lret
mov
scas
cld
dec
mov
and
repz
sti
and
adc
mov
inc
adc
inc
jecxz
pop
test
fsts
add
add
xchg
repz
or
pushf
stos
xchg
psubb
mov
sahf
jg
gs
mov
lods
mov
fldcw
cmp
sub
cmp
loopne
lock
pop
stc
std
push
aaa
popf
mov
sahf
cmp
stc
ja
jmp
xor
shlb
inc
ffree
movsb
jns
into
xor
out
ja
call
mov
rorl
sub
mov
mov
ljmp
pop
leave
lahf
mov
int
jecxz
and
pop
cmpsl
jbe
sub
lods
mov
dec
lahf
mov
sbbl
dec
xchg
or
mov
adc
xor
xchg
xchg
push
lock
lods
cli
shlb
push
mov
rolb
push
ljmp
push
push
pop
into
test
pop
adc
sbb
test
aas
lock
mov
push
jp
loope
cs
scas
ss
jb
add
dec
test
aaa
out
and
popa
sub
jne
lds
pop
outsb
push
sbb
xor
mov
push
ds
push
sbb
pop
ss
loop
mov
mov
adc
dec
lods
test
pop
and
negl
adc
loopne
out
inc
mov
iret
aam
rcll
ret
outsl
cli
rcl
shl
jp
mov
xchg
push
lods
stc
bnd
js
xchg
out
mov
insl
aaa
cmp
adc
push
js
xor
jns
in
and
imul
add
xor
jge
mov
jle
popf
pushf
adc
inc
je
out
jno
dec
lret
jns
pop
jbe
xchg
aas
mov
dec
daa
inc
jnp
pop
in
mov
test
daa
push
push
mull
push
inc
mov
gs
xchg
mov
call
pop
cmp
enter
add
push
inc
jmp
ret
or
push
shll
sbb
lods
cmp
sub
and
rcll
outsb
es
push
pop
inc
sub
test
pushf
dec
movsb
fistps
in
cltd
jae
rorl
sbb
stc
and
xor
add
outsl
cwtl
cli
ljmp
pop
xor
and
shrb
outsl
xchg
lods
push
mov
xchg
bound
clc
rclb
jae
cs
sti
or
repz
sub
push
or
and
lods
xor
push
enter
push
jmp
push
sub
pop
mov
lds
pop
arpl
fdivl
imul
cwtl
call
jne
adc
xor
pop
sbb
pop
and
arpl
cmp
mov
inc
out
pop
popa
mov
sub
mov
inc
mov
push
sub
xchg
fsubs
call
mov
pop
or
mov
mov
std
push
mov
mov
movlps
inc
inc
pop
mov
jecxz
fcoms
xchg
shr
push
leave
std
cmc
int3
push
push
cld
movsl
in
ss
lods
xchg
mov
les
mov
popf
adc
int
shr
fcmove
adc
dec
push
cmp
int3
add
sbb
xor
mov
addr16
das
mov
sub
test
cwtl
iret
loope
xchg
outsl
jge
push
sub
imul
shr
push
nop
popa
cmp
cltd
sbb
fstpl
mov
jns
bound
out
sbb
push
inc
aaa
adc
jne
andb
jb
repnz
sub
and
or
xchg
adc
inc
pop
aaa
sub
lds
daa
std
sti
popf
data16
inc
dec
lcall
nop
jmpw
dec
sub
std
mov
sbb
lods
lods
popa
or
scas
mov
popa
sti
xor
lds
add
movsl
fs
sbb
xchg
loope
cmpsl
seto
jbe
pop
out
stos
ljmp
mov
hlt
scas
push
mov
pop
inc
fimuls
or
mov
test
mov
pop
mov
fistpl
faddp
and
das
mulb
fiadds
inc
sub
inc
leave
addr16
popf
mov
push
and
mov
sbb
mov
inc
jbe
pushf
jmp
xchg
push
inc
popa
pop
push
stc
add
shll
xchg
jecxz
mov
lods
and
mov
js
cmc
push
movsl
xor
xor
cs
cmp
cmc
repnz
gs
aaa
add
jns
sahf
out
push
repnz
dec
fisubl
xor
or
lods
fnstcw
cs
mov
dec
fstpl
cmp
das
daa
stos
hlt
push
adc
lds
in
outsb
push
cmp
sbb
push
stc
shl
insl
and
xchg
cli
fadds
in
mov
stc
rcll
sti
bound
add
push
inc
test
push
xlat
adc
or
or
xor
xor
insl
int
xor
sub
jae
mov
pop
adc
iret
jns
fistpl
mov
loop
pop
test
and
jge
insb
pop
jecxz
loope
cli
pop
push
rcrb
xchg
data16
adc
scas
jle
mov
ret
out
fldt
sub
cli
in
xchg
mov
cltd
mov
adcb
xchg
sbb
pop
loope
ret
sahf
add
aas
call
aas
movsb
mov
cld
jbe
push
pop
xor
cltd
and
inc
cmp
jbe
pop
xchg
pop
insl
mov
in
cmp
imul
mov
pop
cld
xchg
cmpsb
push
add
enter
mov
test
call
cli
and
imul
cmpl
icebp
cmpsb
pop
lods
and
idivb
test
nop
lcall
outsb
sbb
nop
and
fimull
or
and
adcl
sbb
lds
je
push
xchg
xchg
out
cmc
push
aam
fistpl
aam
ljmp
js
ds
loopne
les
lock
daa
popf
sbb
adcb
jns
ret
jno
mov
adc
and
popf
nop
mov
push
clc
fcomp
fstl
cli
xor
xchg
sahf
mov
and
push
push
in
loope
dec
sub
std
sbb
push
xchg
dec
inc
mov
cli
mov
mov
mov
aaa
sarl
dec
out
and
adc
xchg
and
movsl
lcall
int3
pop
add
pop
dec
dec
arpl
mov
mov
inc
test
ljmp
pushf
addl
imull
cmc
mov
dec
testl
pop
lahf
add
clc
ja
je
fistpll
notl
aam
outsb
sbb
fstpt
adc
movsl
or
push
test
mov
push
and
adc
mov
sub
jne
in
daa
ljmp
mov
aas
pusha
sti
jmp
imul
sbb
dec
mov
and
jb
push
inc
ja
jge
icebp
xchg
fildl
ds
cmc
aam
imul
add
xchg
test
push
cmpsb
rolb
lods
aad
mov
mov
xchg
addr16
jg
movsb
pop
aad
inc
enter
inc
mov
sub
cmp
xchg
xchg
add
fsubrp
in
jg
stos
mov
ret
movsl
stos
stc
fistpll
lods
jb
cmpsl
insb
cs
dec
lahf
fwait
insb
sub
in
mov
fnstsw
cmp
jo
jge
xlat
ds
lds
aaa
iret
es
scas
xor
nop
xor
fwait
div
or
mov
or
jp
out
inc
movsb
ds
push
cmp
xor
lret
lds
shrl
bound
daa
lods
xor
loop
dec
fnstenv
in
nop
out
push
xchg
lcall
xor
or
fdivr
or
push
imul
movsb
in
adc
out
mull
jno
cmpsl
cs
inc
add
mov
adc
mov
sbbb
mov
inc
xor
push
lret
arpl
js
test
pop
jae
sub
hlt
pop
fidivs
popf
ss
and
loope
in
movsl
xchg
push
leave
inc
fdivr
loopne
pop
repz
adc
outsb
leave
in
jne
aas
mov
jno
fcomps
movsb
jle
into
in
and
or
xchg
pop
std
mov
frstor
test
pop
cli
mov
test
jno
mov
rol
stc
fisttpl
cmpb
jnp
loope
out
cmp
dec
dec
loop
aad
int3
mov
mov
pop
fidivl
dec
xor
jecxz
push
add
es
push
aad
push
mov
mov
arpl
push
jmp
fstl
sbb
aaa
add
jp
jae
movsw
inc
idiv
mov
xchg
inc
xor
andl
pop
repnz
xlat
cmp
jno
sbb
push
inc
test
and
xchg
in
add
xchg
dec
sbb
ljmp
adc
insb
mov
xor
inc
in
ret
adc
iret
xor
jno
ret
aam
repnz
push
aaa
jo
or
and
mov
les
mov
mov
cli
ret
in
add
mov
out
jp
gs
sub
repz
leave
std
imul
test
adc
sbb
insb
sti
and
pop
cwtl
sbb
imul
hlt
pop
adc
sub
mov
shrl
dec
or
jl
ret
scas
outsl
adcl
cmpsb
mov
dec
adc
aaa
adc
pop
mov
test
repz
push
cld
lret
fcmovu
mov
mov
sahf
outsl
pop
sarl
ss
mov
stos
mov
cwtl
insl
cmp
lret
or
adc
std
sarl
mov
jae
sbb
sbb
jge
mov
icebp
das
sbb
push
or
adc
pop
scas
push
mov
subl
pop
in
fs
sbb
fsubrl
aam
scas
repnz
jge
out
cmp
jbe
push
jp
cmp
insl
pop
inc
insb
push
sarl
xchg
rcr
or
mov
das
stos
add
inc
stc
cmp
bound
in
pushf
ror
adc
bound
push
in
sbb
xor
dec
add
mov
dec
mov
ja
xor
sbb
test
enter
mov
shrl
add
mov
arpl
rcl
sarb
or
mov
dec
lret
cmpsb
ja
pop
mov
cmpsb
pop
scas
shll
inc
add
pop
xchg
ret
test
dec
roll
add
jmp
repz
movsl
js
outsb
loop
pusha
inc
mov
adc
xor
rcr
bound
lds
shll
loopw
stos
arpl
sar
mov
sti
popf
or
roll
sbb
cmp
mov
outsl
mov
inc
pop
fdivrs
gs
ja
out
out
push
dec
mov
mov
push
or
outsl
sub
lds
enter
aaa
lret
mov
mov
repz
push
cli
mov
into
scas
lock
lods
ljmp
inc
test
xchg
sbb
mov
dec
dec
mov
mov
dec
jne
cmpsl
shll
test
fadd
fcoms
lods
es
mov
test
data16
ja
pop
pop
aas
cmc
push
cmpsl
in
popf
adc
lock
jmp
sarb
scas
inc
cmp
mov
clc
mov
dec
hlt
xchg
add
jbe
push
das
adc
stc
mov
fimuls
dec
sbb
mov
repnz
add
aaa
jnp
sbb
inc
mov
movsl
mov
mov
mov
jp
fistpl
sub
pop
hlt
outsb
xor
arpl
call
jnp
or
cmpsl
lret
iret
fwait
inc
sub
push
mov
push
sahf
push
lret
mov
mov
xor
push
jmp
movsl
dec
xlat
xlat
mov
daa
loop
insb
inc
insl
ljmp
push
test
pushf
xchg
mov
sarl
dec
xchg
fildl
je
ror
jle
push
or
pushf
adc
ljmp
jbe
cmpsb
xchg
fnstsw
outsl
mov
jecxz
into
xchg
xchg
sub
pusha
pop
push
or
loop
paddusw
cmpb
pop
fmuls
out
ds
jno
inc
outsl
pop
pop
ret
lods
gs
scas
adc
mov
mov
es
cld
xor
inc
jle
lret
cmp
push
imul
sub
push
imull
add
jecxz
push
add
imul
jae
int3
mov
xchg
loop
leave
adc
lahf
lret
fdivrl
xlat
push
hlt
call
mov
subb
pop
jbe
jns
fiadds
arpl
enter
dec
mov
js
rol
int
push
movsl
cmpsb
mov
push
sbb
dec
inc
mov
popa
cltd
popa
and
fidivrl
int3
pop
imul
test
loopne
pop
int
inc
mov
xor
xchg
mov
mov
addr16
xchg
iret
mul
or
jbe
sbb
test
xchg
gs
out
test
xchg
cmp
dec
aam
mov
and
cs
mov
pop
mov
daa
sbb
div
inc
sahf
imul
jmp
sbb
hlt
sbb
cmp
adc
in
jns
addr16
movsb
icebp
mov
loope
cmp
xor
aaa
int3
sarb
or
push
loop
jnp
es
pop
xchg
cmpsl
lcall
popf
int3
imulb
outsb
pop
scas
pop
sar
push
and
or
xlat
mov
mov
fwait
bound
mov
push
jo
dec
ja
lods
mov
stc
fmull
ror
inc
ret
dec
push
mov
sub
or
mov
cmp
or
pop
sub
testb
mov
and
push
hlt
out
daa
mov
sahf
push
cmp
xchg
mov
jo
loope
test
test
jnp
sbb
call
ljmp
sub
arpl
mov
jo
add
mov
pop
out
in
push
xlat
cmp
inc
sub
mov
jle
shrb
pop
mov
xchg
shlb
dec
sub
xchg
out
fs
mov
enter
mov
test
and
shll
xchg
xchg
inc
and
push
aam
jnp
dec
sub
pop
or
and
mov
sbb
addr16
data16
mov
out
xor
call
xchg
fwait
jb
cmpsl
fs
xor
mov
xlat
push
fs
mov
out
inc
test
psrad
jo
lahf
cmp
out
adc
add
pop
cld
setno
pop
jno
les
inc
in
subl
aam
fbld
in
push
or
aad
sub
or
mov
out
pop
test
shrl
out
stos
cmp
leave
nop
popf
sub
pop
xor
jo
mov
imul
pop
xlat
mov
sub
mov
enter
jb
hlt
adc
iret
push
clc
sub
inc
pop
fnstsw
push
add
outsb
sbbl
fisubl
bound
xchg
out
out
jp,pt
cmp
cmpl
mov
jo
pop
push
shlb
popa
jg
cmpsb
scas
xchg
pop
test
dec
dec
cmpsb
adc
and
cmpl
lods
mov
movsb
adc
or
cli
movl
popf
xor
mov
lcall
xchg
jnp
fisttpll
mov
test
push
pop
jns
or
sbb
sub
call
or
cltd
mov
xor
sub
add
inc
mov
int3
lock
mov
push
call
dec
lock
out
jns
adc
lock
mov
ja
inc
add
repz
rcrl
stos
sub
xor
jg
xchg
jge
cmpb
inc
jle
loopne
cmp
xor
out
jo
push
cmovbe
hlt
add
outsl
and
mov
jg
dec
pop
mov
push
in
in
data16
and
mov
in
loopne
add
push
push
std
insl
mov
cmp
mov
aad
jae
and
int
je
loopne
fildll
call
les
pop
cs
in
stos
pop
mov
push
out
movsl
jg
add
mov
or
scas
faddp
pop
cmc
and
popa
mov
dec
data16
int3
push
cmpsb
inc
mov
ljmp
das
sub
jle
sub
or
hlt
shr
popa
cmc
shll
mov
out
inc
push
int3
fdivrl
cld
sbb
mov
xchg
je
mov
movsb
sub
fildl
jmp
outsb
stos
mov
xchg
push
cmp
in
shrb
lds
dec
icebp
shr
outsl
mov
xchg
cmc
adc
or
std
push
shrb
jmp
sub
dec
or
and
outsl
sbb
lahf
sarl
mov
mov
inc
stos
adc
pop
std
adcb
sbb
rcrb
fwait
jne
mov
sti
xor
pushf
cmp
repnz
stos
enterw
or
or
insb
xchg
xor
jbe
stc
xor
sbb
imul
in
imul
or
mov
daa
subb
loop
mov
push
sarb
mov
fs
shr
pop
cmc
cmpsl
lods
lods
bnd
mov
aaa
fnstcw
xchg
xor
test
dec
aad
adc
addl
sub
mov
mov
lods
push
pushf
loopne
rcrl
add
call
ret
inc
cltd
mov
mov
insl
inc
xlat
test
divl
pop
jno
xchg
ljmp
es
dec
rolb
jne
xchg
lods
cmpsb
mov
jp
inc
or
sarb
test
mov
push
pop
movsb
stos
dec
push
ror
cli
add
mov
mov
dec
push
xchg
pop
xchg
mov
pusha
jae
pop
mov
lods
ror
jle
mov
and
pop
lcall
andl
mov
sti
add
loop
and
cmp
movsl
fwait
mov
mov
inc
pop
lret
inc
inc
arpl
add
test
sub
iret
ljmp
rol
inc
mov
call
xor
out
jle
fsubrl
xlat
push
lret
je
cwtl
mov
push
test
je
jecxz
mov
adc
mov
imul
and
ds
loop
push
sbb
mov
movsl
adc
jne
or
js
dec
fstps
lock
dec
stos
sbb
pop
mov
and
pop
pop
adc
je
mov
pop
das
daa
jnp
jbe
scas
xchg
fadds
cli
cli
sub
jae
lods
adc
xchg
pop
shll
and
out
mov
lea
push
lock
aad
jne
xchg
aas
mov
iret
pop
stos
andb
pop
pop
jge
cmp
and
rcrb
dec
xor
xor
popf
loop
call
jle
cmp
faddp
inc
xor
fdivrl
adc
push
jecxz
sub
fnsave
dec
pop
mov
lods
add
popa
aam
inc
pop
push
sub
test
mulb
hlt
jno
pushf
iret
sahf
mov
or
outsl
nop
jecxz
jbe
push
sub
sahf
xchg
jb
sbbl
ret
hlt
loope
sbb
jnp
dec
jno
fstpt
int
mov
xchg
xchg
ds
add
sbb
adc
cmpsb
cli
mov
sbb
hlt
lds
out
mov
idivl
test
sub
mov
pop
out
bound
stos
xchg
daa
popf
add
insb
push
pop
hlt
insb
inc
scas
bnd
inc
and
cmp
loop
mov
push
fcoml
pop
add
pushf
fldenv
or
addr16
insl
loop
nop
cs
mov
mov
or
test
int3
gs
or
xchg
lahf
std
mov
imul
pop
imul
inc
cltd
out
mov
dec
push
adc
or
adc
stos
xor
cmp
xchg
call
shlb
push
clc
jno
xor
int
xchg
fmull
xchg
jne,pt
fistpl
cwtl
inc
xchg
xor
xchg
inc
jecxz
xchg
or
xchg
mov
push
or
rorb
sbb
shlb
aad
jo
call
inc
cmp
fstps
call
push
add
mov
lahf
fmulp
jecxz
mov
mov
sub
loope
mov
cld
movsl
popf
push
dec
sbb
mulb
jne
pop
rep
pop
xchg
adc
mov
stc
test
push
sub
adc
in
inc
push
ja
mov
lcall
xchg
or
insl
lea
xlat
ja
push
jl
cmp
das
fwait
scas
dec
test
jb
les
shrb
or
inc
sub
push
push
jg
loop
inc
sahf
int3
push
mov
xchg
cmp
mov
gs
mov
dec
jne
loopne
push
xchg
mov
xchg
ret
push
lret
pop
push
enter
in
sub
sarb
inc
loope
test
pop
cmc
dec
sbb
pop
inc
mov
rorl
sub
in
mov
mov
add
cmp
mov
dec
addr16
mov
mov
jl
mov
jns
popf
mov
adc
enter
cmp
aam
rcl
jbe
jno
pusha
jmp
imul
mov
and
pushf
mov
popa
dec
int3
jmp
sub
lods
cmp
inc
lock
cmpsb
scas
xchg
out
inc
and
and
inc
leave
mov
fists
pop
and
mov
mov
and
jns
out
add
bound
fwait
xchg
insl
or
push
rcrl
repnz
mov
fimuls
jb
xor
mov
into
call
cwtl
cld
and
inc
dec
cmpb
mov
adc
push
cli
dec
or
xchg
out
imul
pop
mov
leave
cmp
test
sbb
and
fucomi
mov
fs
stos
inc
call
lea
rolb
mov
shrl
xor
mov
adc
out
lods
jno
pop
pop
lds
enter
lods
and
cmp
push
jbe
aam
pop
orb
xor
mov
sub
mov
imul
hlt
and
mov
imul
mov
mov
ret
leave
cmp
les
inc
popf
rcr
inc
mov
fwait
sub
push
inc
icebp
popa
mov
xchg
lret
movlps
loopne,pn
sti
or
pop
push
jae
insb
jl
dec
orb
not
test
dec
mov
pop
outsl
or
cmpsl
es
mov
push
imul
xor
in
jno
sti
xor
inc
pop
movsl
pop
push
test
and
bound
stc
lods
fbld
test
je
dec
int3
dec
jle
jnp
jmp
mov
jae
fs
xchg
or
cmc
dec
pop
inc
repnz
push
outsl
test
push
pop
mov
in
adcl
in
loope
imul
pop
shrb
inc
pushf
aad
pop
insb
mov
ja
repnz
xchg
xlat
js
and
ja
lret
mov
pop
mov
in
loopne
rcrb
dec
adc
inc
aas
mov
xchg
imul
sti
xchg
cwtl
xor
rclb
imul
mov
fsub
out
sub
int3
jns
ret
out
mov
jne
xchg
cltd
popa
dec
pop
out
add
add
pop
stos
and
xchg
outsb
popa
and
mov
jecxz
daa
repnz
outsl
cmp
inc
mov
jnp
movl
fs
push
mov
jecxz
clc
lcall
test
push
jge
jge
xchg
hlt
pop
sub
rolb
lret
out
fbld
aas
out
test
mov
adc
rol
push
insl
sub
in
lcall
pop
push
jns
xor
es
push
xor
and
cmpsl
scas
xchg
lret
push
and
mov
dec
sahf
push
jb
stos
cmp
pusha
gs
add
mov
out
xchg
xor
cmpsl
loop
pop
clc
push
jl
xchg
jg
sub
xor
jo
cmp
pop
sub
insb
mov
lcall
lds
mov
add
push
inc
xor
jb
mov
lods
sbb
rcr
xor
sub
stos
push
pop
cmp
icebp
bound
jb
movsl
out
mov
insl
sar
test
dec
jns
push
pop
adc
pop
sbb
fldcw
icebp
add
icebp
push
mov
repz
mov
fisttpll
mov
imul
sbbl
pop
negl
repnz
cmp
push
lea
xor
sbb
ret
and
jecxz
sub
jl
cmp
dec
cmp
ret
mov
dec
fs
lea
inc
xor
cmp
int
scas
mov
insb
or
push
cmp
clc
mov
lds
pop
xchg
mov
pop
negb
push
loop
inc
mov
pusha
icebp
aaa
movsl
iret
or
cwtl
cmp
xchg
scas
into
andb
das
and
push
ljmp
cmpsl
inc
fiaddl
add
inc
js
mov
pop
dec
cli
xor
lahf
mov
mov
in
sbb
das
rcrl
cwtl
imul
mov
dec
pop
decl
lret
jge
adc
xor
mov
lods
in
mov
insl
cmpsb
inc
xlat
and
iret
mov
sub
mov
jne
lea
sub
jnp
dec
push
sti
in
cmpsb
movsl
sti
push
cmp
push
xchg
loopne
cs
fistpll
push
das
xchg
jmp
hlt
add
jo
pop
out
xchg
pop
rcll
icebp
std
and
in
imul
cmp
sbb
pusha
ja
addr16
ret
inc
rcll
int3
xorps
and
mov
mov
popa
rcl
icebp
bound
dec
jge
xor
sub
aas
shlb
cmp
mov
xor
jne
adc
fs
ret
insb
sti
jl
adc
push
shrl
pop
ja
outsb
loop
sub
stos
xor
dec
adc
in
mov
jecxz
lahf
ljmp
sub
enter
je
and
jl
push
movsl
scas
pop
repz
dec
jmp
mov
dec
push
fnstenv
or
cli
xor
xor
lahf
popf
jg
or
jno
cmc
and
int
mov
lcall
sub
leave
pop
jne
sub
xlat
dec
out
jmp
push
cltd
lock
rcl
mov
jo
psubd
push
pushf
dec
stos
add
jae
jle
scas
and
add
or
pop
cmp
mov
and
test
lods
push
push
es
out
mov
out
xchg
inc
jae
push
bound
lahf
cltd
cmp
adc
push
sar
xchg
and
imul
scas
nop
dec
cmp
inc
test
insb
lods
or
out
clc
lcall
cmp
pusha
xchg
lcall
jbe
xchg
lret
xor
pop
mov
push
repnz
loope
dec
fwait
push
mov
jne
cmp
adc
push
and
xchg
test
jo
lret
out
mov
out
insl
test
repz
push
pop
sub
mov
push
add
repz
xor
lahf
cmp
jb
dec
sbb
cmp
dec
xchg
xchg
add
and
push
sti
shlb
push
fdivrs
movsb
pop
mov
xor
fiaddl
mov
fs
shr
lahf
inc
push
pop
shl
scas
ret
ljmp
out
lock
push
lcall
aas
cmp
lahf
hlt
cmp
cmp
mov
pop
imul
dec
aam
jmp
test
xor
push
or
dec
pop
pop
pop
js
in
mov
aaa
rcll
mov
popf
out
shll
mov
scas
mov
lods
xor
inc
lds
lds
mov
arpl
mov
cmp
inc
add
pop
out
pop
fstl
sbb
sbb
adc
scas
daa
xchg
ror
hlt
mov
pushf
test
jo
push
fcmovnu
jp
pop
cmp
sbb
sbb
xchg
ljmp
xor
or
push
xchg
mov
push
aaa
jl
pop
insb
xchg
pop
aaa
daa
lods
fistpll
xchg
call
arpl
jg
push
out
pop
addr16
nop
pop
mov
shl
sti
nop
cmp
inc
movsl
and
aaa
loop
dec
sti
mov
pop
sbb
loop
push
sbb
or
aad
stos
xchg
add
inc
mov
icebp
ret
scas
and
adc
nop
xchg
xchg
pop
imul
loopne
test
push
ljmp
xchg
and
lock
mov
shrb
lds
mov
sub
mov
mov
inc
pop
clc
or
repnz
fisttpll
dec
mov
push
hlt
sbb
jmp
jle
xorl
xlat
push
nop
push
bndldx
jge
out
fisubl
popa
push
jp
pop
sub
lods
sub
jecxz
pop
fbstp
and
sub
loop
stc
imul
loop
xchg
out
push
lret
jle
xchg
lahf
jmp
into
cmp
aad
out
adc
in
subb
adc
inc
mov
mov
inc
xor
cltd
iret
jle
bound
push
aam
push
mov
mov
sarb
mov
stos
xor
xor
shll
and
cwtl
loop
xor
or
rcl
imul
cmp
or
add
mov
roll
mov
xor
out
jae
xchg
popa
add
mov
push
es
cmpsl
sarb
mov
jmp
mov
jo
pop
fs
or
jle
mov
jno
dec
jbe
fmuls
pusha
xchg
push
and
cmp
sahf
pop
popf
leave
and
gs
and
punpckldq
out
jbe
lahf
ljmp
mov
and
mov
lret
sbb
or
sbb
test
push
xor
in
int3
pop
pop
loopne
jg
jle
es
cmp
lea
mov
test
push
cmp
nop
test
mov
loop
in
mov
stos
push
mov
leave
adc
dec
mov
push
mov
mov
add
jno
mov
pop
adc
mov
mov
inc
jno
fbld
pusha
or
xor
clc
cmp
mov
nop
xor
jnp
mulb
loopne
push
clc
ss
dec
pop
popf
dec
mov
into
sti
popl
sbb
mov
jp
aad
pop
jl
inc
leave
sub
push
mov
sub
fldl
mov
jb
scas
mov
add
insl
sbb
xor
jge
popl
rorl
or
jg
push
and
xchg
jo
test
mov
iret
and
adc
and
xchg
in
jo
push
xchg
rcll
sub
rol
inc
lcall
icebp
arpl
pop
xchg
jnp
jno
stos
inc
jmp
pop
fnstsw
lods
fisubs
inc
call
js
dec
mov
jns
mov
adc
sub
ficomps
aas
adc
mov
adc
xchg
loop
fstpt
test
pushf
icebp
jo
jle
mov
fnstsw
jl
sahf
jmp
mov
sarl
in
vpcomud
mov
fiadds
gs
sbb
add
push
cli
inc
test
ret
ret
add
scas
push
inc
pop
mov
xchg
pop
pop
mov
fdivr
and
or
clc
xchg
ljmp
inc
mull
jns
sbb
clc
pop
jb
out
jle
sbb
jne
add
mov
sbb
leave
lds
decl
adc
push
sbb
pop
adc
mov
inc
sbb
int3
push
fisubrl
jmp
xor
das
cmpsb
jge
adc
fildl
push
and
cmp
mov
insl
jbe
add
fwait
movsl
daa
scas
arpl
push
push
ss
cmpsl
sub
into
dec
das
dec
cwtl
outsl
dec
ret
insb
push
adc
cmp
inc
scas
jo
xchg
add
jno
mov
xchg
icebp
addl
xor
xchg
jno
add
or
aam
pop
lods
adc
dec
in
jle
cmc
lods
pop
in
mov
lahf
lret
scas
jnp
and
jmp
fcomps
pop
pop
jle
pusha
push
dec
cs
adc
add
cmp
out
lret
jp
and
adc
loope
mov
mov
inc
mov
inc
add
pop
xor
lods
stos
push
ds
xor
dec
sub
jl
mov
adc
aaa
enter
fldenv
fildll
sub
sbbb
mov
dec
mov
inc
xchg
clc
inc
lret
or
push
mov
lds
adc
sbb
inc
daa
cmp
push
jl
pop
adc
dec
inc
push
or
fidivs
pop
mov
aas
dec
icebp
std
mov
cmp
loope
adc
mov
add
test
scas
test
rclb
addr16
sub
push
add
jno
jmp
mov
lret
adc
lods
std
mov
and
sbb
or
loop
wbinvd
sub
divl
or
mov
fdivrl
scas
push
and
add
inc
jp
inc
scas
jmp
pop
add
mov
inc
icebp
adc
mov
cmp
lock
pop
jns
in
mov
shll
dec
sub
std
mov
cli
out
lds
fs
gs
cli
dec
outsl
out
sahf
std
or
and
jae
cmc
in
popf
xchg
sub
and
inc
pop
mov
sub
movsl
and
shll
and
mov
leave
pop
fs
sub
out
cmp
mov
rorb
jmp
adc
cmpb
loopne
in
lahf
xchg
outsl
xor
fcompl
jns
adc
push
fadd
int3
jae
movsl
aam
cwtl
test
xchg
mov
mov
xchg
loope
xchg
mov
lret
inc
dec
fst
xor
xchg
push
pop
dec
sbb
test
andl
mov
xor
ds
fcmove
mov
loop
jno
cmp
or
fmull
dec
add
pop
fnsave
lret
sub
pop
pop
loope
mov
sub
fistl
inc
push
inc
inc
mulb
pop
loop
add
sbb
stos
jno
ja
adc
push
imul
out
jnp
test
mov
mov
or
dec
sub
xchg
or
add
add
in
mov
in
push
mov
add
ficoms
cmp
jl
add
rol
test
mov
pop
out
pop
in
mov
sbb
cmp
and
dec
dec
das
or
cs
dec
bound
add
aaa
xchg
and
dec
orb
mov
enter
jmp
rcl
pop
repnz
rorb
dec
sbb
fcoml
ret
stos
mov
addr16
mov
or
andb
mov
mov
test
push
dec
and
dec
and
popf
push
add
mov
add
cmp
mov
test
or
or
lods
fstps
sbbb
test
inc
test
inc
mov
push
add
add
mov
pusha
mov
mov
or
popf
jo
sbb
shll
fistpl
mov
movsl
jp
push
mov
adc
push
mov
shll
test
mov
ljmp
dec
pushl
pushf
mov
in
push
inc
sbb
add
inc
test
shll
fdivr
jb
mov
xor
je
sub
rcrb
setae
ret
or
fstpl
cwtl
adc
imul
jo
in
enter
pop
push
jae
into
adc
jo
mul
push
aad
mov
fcmove
dec
lods
push
popf
jp
mov
adc
jp
jl
mov
mov
test
cmc
mov
test
decb
add
out
sahf
or
cmp
outsb
data16
daa
dec
mov
sub
js
sti
pop
mov
mov
leave
lods
in
add
jns
je
roll
dec
and
out
pushf
xor
int3
lgs
std
out
int
lock
insl
loop
dec
stos
xlat
inc
dec
push
cmpsl
movsl
dec
cmp
aas
arpl
pop
mov
fldcw
push
scas
pop
or
mov
mov
inc
fwait
cmc
adc
clc
cmp
cs
sub
pop
cmp
fadd
loopne
push
je
pop
mov
add
or
test
push
mov
addb
sub
xor
fs
mov
inc
jo
cmp
push
sbb
mov
lea
ret
jl
stc
loope,pn
loopne
mov
adc
test
xor
xchg
mov
cmp
and
mov
sbb
push
xorb
xor
mov
push
mov
jae
or
js
and
jp
inc
and
sbb
jl
or
lret
and
je
lcall
int
lahf
mov
mov
loop
dec
pop
test
enter
mov
mov
pusha
jmp
pushf
lret
or
test
loopne
cld
cmpsl
inc
imul
sub
push
lock
sub
or
cmp
das
test
movsb
xchg
pop
mov
popa
push
jp
js
mov
ljmp
imull
pop
ljmp
sti
cmp
cmp
mov
pop
dec
arpl
pop
aas
cmpsb
mov
cmp
es
pop
xor
mov
stos
inc
pop
incl
es
popa
xchg
or
lahf
push
je
lods
mov
sti
or
mov
fildll
or
mov
inc
movsb
daa
flds
adc
sbb
popf
gs
sbb
push
and
cld
mov
orb
sahf
loop
push
or
lods
or
mov
sbb
in
cwtl
roll
repz
daa
jg
inc
pop
mov
cmp
fucom
or
inc
mov
inc
lds
sub
ljmp
mov
xor
imul
and
lahf
fcmove
mov
sbb
inc
pop
les
lock
in
pushf
and
decl
ret
inc
js
inc
int
pop
lret
outsb
movsl
or
pop
xchg
out
lods
in
loope
sub
aaa
pop
jg
cmp
pop
cmp
mov
cltd
popa
lahf
jne
lock
aas
bound
and
cld
les
push
sti
popf
inc
dec
jp
and
xor
adc
mov
push
or
mov
cli
sub
in
es
or
movb
xor
es
xlat
inc
mov
mov
lcall
jno
icebp
imul
sbb
add
xchg
cmp
cmp
cwtl
cwtl
lahf
and
pop
mov
dec
dec
xor
jns
nop
push
jb
jg
in
add
gs
fistpll
sub
push
mov
mov
and
inc
cmpsl
pop
out
xor
inc
in
jb
es
pushf
pop
push
aaa
cmpsb
movsb
scas
sti
bound
xchg
or
arpl
push
add
je
add
jecxz
mov
mov
lret
mov
frstor
cmp
mov
clc
sbb
mov
lods
push
sbb
ljmp
xor
sub
jecxz
mov
dec
aas
call
stos
jb
jmp
stos
notb
shl
lret
mov
decl
sub
fldenv
enter
mov
mov
nop
cmp
cltd
lods
enter
shlb
push
test
lods
outsl
sahf
hlt
shrb
insb
mov
mov
ds
ficoml
clc
pop
test
clc
jo
icebp
call
push
icebp
stos
or
lock
or
add
cmc
pushf
sahf
lock
mov
repz
cwtl
out
pop
hlt
negb
in
sbb
cmpsl
push
pop
xor
add
or
test
lock
sub
cs
std
xchg
inc
stc
rorb
mov
mov
aas
hlt
mov
mov
imul
jo
jo
and
inc
rol
push
pop
scas
jecxz
jle
mov
lock
jle
addb
arpl
push
mov
mov
add
xor
or
xchg
lcall
mov
push
fs
jmp
add
je
mov
lret
in
aad
and
mov
ret
xchg
inc
jmp
push
jo
in
lea
mov
or
inc
or
xchg
sub
movsl
adc
test
mov
inc
je,pn
xor
cmp
add
inc
mov
add
jnp
sbb
cmp
or
mov
out
out
lret
inc
mov
data16
movsb
push
cmpsb
aas
pop
inc
jg
jl
notb
popa
call
mov
orl
mov
or
daa
enter
mull
pusha
cmpsb
mov
pop
cwtl
mov
cmp
nop
push
jns
xor
ljmp
dec
mov
or
mov
adc
jo
mov
mov
iret
jge
jae
add
mov
pop
sbb
lods
pop
je
outsl
cmp
pusha
adc
lret
pushf
adc
mov
sbb
int
ja
or
inc
sbb
hlt
cltd
ret
andb
shrl
enter
test
daa
frstor
lods
push
outsl
mov
frstor
fisubl
pop
std
dec
cmp
lret
aaa
push
pop
pop
cmp
jnp
popa
jle
or
inc
sti
adc
ljmp
jl
test
mov
xchg
ds
cmp
in
les
adcl
pusha
lret
dec
jne
aad
stc
and
ret
inc
xchg
fs
jge
inc
movsb
jl
repnz
flds
xor
sub
mov
clc
mov
shrl
push
xchg
pop
cs
cmpsl
fidivrs
shl
xor
mov
ja
dec
shl
jnp
pop
bound
jle
test
divl
inc
movsb
shl
repnz
outsl
pop
sbb
in
push
imul
cmp
test
or
cmp
pop
xor
xchg
test
push
jg
cmp
pop
sbb
inc
lock
pop
stos
jmp
or
mov
in
cmp
dec
cmp
int3
fistpll
add
shl
adc
push
lock
mov
repz
inc
pop
and
pusha
mov
out
sbb
les
cmc
mov
push
adc
xchg
push
out
lods
leave
jmp
lock
gs
mov
cli
xchg
push
adc
sbb
int
sub
dec
xor
fsubs
xchg
gs
cmp
mov
daa
fwait
pop
test
xchg
das
ret
imul
xor
dec
notl
xor
jb
sub
cld
sbb
test
mov
fcmovu
cmp
mov
lahf
add
gs
fdivrl
lds
xor
adc
icebp
bound
mov
testl
pop
or
xlat
pop
fcoms
insb
sarb
and
insl
fs
loope
cld
push
push
jge
or
mov
stc
outsb
jno
push
sbb
dec
sti
lods
jl
mov
cmc
inc
negb
push
push
xchg
fdivl
jb
ficompl
jnp
inc
sbb
stos
xchg
xchg
xlat
xor
pushf
jo
jp
xchg
mov
dec
sbb
out
or
ljmp
ds
jae
xor
mov
jne
into
int
jns
fwait
push
loop
pop
push
push
enter
sbb
jmp
adc
rcl
cmp
xor
and
bound
aas
and
xchg
jle
divb
push
sub
sub
loop
hlt
pop
arpl
clc
sub
mov
and
and
add
inc
xor
pop
lahf
cmp
test
imul
pop
cmp
xor
test
or
dec
jle
lret
clc
or
fsts
lret
sarl
lcall
rorl
cmp
enter
bnd
cmp
scas
pslld
cld
mov
push
or
fcomp
xor
add
scas
mov
xchg
popa
push
call
movsl
pop
xor
jno
cmp
daa
and
jl
rorb
daa
test
in
mov
hlt
push
push
out
repz
mul
in
or
jo
js
popa
mov
clc
test
pop
fcomps
xlat
sbbb
in
imul
xchg
or
mov
and
xchg
pop
jbe
stc
mov
push
test
and
flds
dec
aaa
push
xchg
ret
sub
push
lcall
jne
jp
sub
mov
pop
add
and
fdiv
dec
lods
or
cmp
incl
mov
bound
lcall
mov
adc
frstor
jb
pop
jp
or
push
test
sbb
std
js
mov
sbb
sbb
lods
das
mov
movsl
test
jmp
stos
outsb
inc
sbb
sub
pusha
enter
scas
pop
cltd
xlat
cmp
adc
jp
push
fdivr
pop
lods
xlat
repz
push
pop
mov
mov
pop
fs
loop
dec
fnstenv
adc
and
fisubl
and
aaa
mov
movsl
test
loopne
call
adc
and
jp
out
mov
sbb
ret
loop
test
ds
sbb
sub
or
andb
ds
ret
dec
ljmp
adc
jecxz
dec
and
xchg
out
mov
pusha
arpl
push
pop
imul
rolb
pop
adc
sub
lcall
fnstenv
out
mov
mov
ret
cwtl
xlat
sub
pop
dec
sbb
inc
or
testb
sbb
lock
jae
mulb
or
fdivs
mov
xchg
repz
push
loop
rcrl
inc
pop
sub
add
mov
mov
push
es
dec
jmp
mov
adc
push
nop
or
jl
mov
cmp
xchg
and
jnp
pop
cmc
sahf
es
out
cmp
jg
add
pop
or
mov
out
fcomps
inc
dec
aad
cmpsl
dec
cmp
add
les
pop
imul
lods
or
repz
dec
stos
lcall
hlt
mov
pop
sbb
lods
daa
mov
push
push
sub
or
mov
pop
add
addr16
shlb
fwait
loope
xor
cmp
addl
shll
rcrb
jno
sbb
lret
shrb
mov
shll
cmp
sti
rorb
inc
mov
cmp
in
mov
or
xchg
sar
movsb
stos
and
mov
push
popf
mov
mov
sahf
mov
cmp
jno
loop
aaa
adcb
dec
and
incl
add
mov
sti
push
fisttpll
cmp
idivb
rcrl
rcrl
test
cmp
adc
lods
push
fisttps
fldl2t
in
sub
pop
cmp
out
jb
lock
inc
sub
jp
test
test
sub
gs
pop
push
xor
lods
jns
insb
mov
aaa
dec
xor
dec
cmc
xchg
mov
dec
mov
mov
sahf
xchg
rorb
ss
lods
mov
fistpll
push
fiaddl
icebp
lahf
and
push
faddl
nop
mov
imul
imul
and
fnstenv
ja
pop
mov
jg
push
adc
test
mov
push
psubusb
out
or
pushf
hlt
lods
cmp
popa
mov
into
pop
mov
iret
cmpsl
decb
lret
dec
lea
mov
add
xchg
mov
gs
add
or
aas
test
leave
or
xchg
sti
mov
jo
push
aad
cmpsl
pusha
mov
shr
cmp
inc
nop
push
aam
push
xchg
xor
jg
clc
mov
scas
inc
cwtl
sub
sub
insl
sub
ljmp
in
lret
dec
push
lods
xor
sarl
sarb
cmp
fisubl
aaa
sbb
bound
cmp
out
push
mov
mov
inc
dec
int
add
jnp
lea
das
jne
dec
rcrb
in
mov
ljmp
mov
push
fadds
in
ffree
mov
xor
iret
aaa
sti
or
hlt
out
jae
repnz
out
mov
enter
cmp
mov
add
xor
dec
lcall
cmpsb
mov
sub
and
cs
xchg
ret
aad
push
daa
ss
scas
sahf
repz
cmpsl
ljmp
aad
repnz
ror
dec
stc
xchg
xchg
push
out
dec
lret
inc
or
je
jle
mov
inc
addr16
test
adc
inc
addr16
adc
enter
xchg
out
mov
adc
adc
fst
mov
les
mov
mov
int
add
pop
xor
ljmp
cltd
sbb
ja
mov
pop
movsl
dec
or
inc
outsb
rcr
xor
fistps
mov
fcom
mov
jns
mov
adc
shr
xchg
inc
jne
and
icebp
xlat
aas
inc
adc
or
out
xor
sub
sub
pop
std
sub
or
jb
mov
adc
pop
lret
cmp
clc
pushf
scas
jb
in
push
data16
andl
mov
xchg
jae
inc
mov
add
rcrb
jnp
jg
stos
int
das
cmp
cmp
cmpb
jnp
sahf
shr
call
shlb
sti
in
insb
push
test
mov
int
pop
mov
add
jecxz
inc
and
jne
add
js
xor
fcoms
pop
adc
and
mov
push
mov
mov
aas
loopne
int3
sti
push
mov
sahf
jne
adc
daa
js
jne
lds
mov
cmp
mov
insb
jns
nop
shl
xor
or
inc
dec
push
fnclex
cmpsl
jne
jb
in
jle
and
ret
jmp
inc
rorl
iret
rcr
pop
stos
shr
ret
jbe
xorb
cmp
fisubs
pop
mov
adc
popf
sub
jo
inc
pop
lods
xlat
add
jno
jns
add
push
ljmp
adc
cmp
lea
mov
popl
xchg
and
pop
out
cmp
adcl
sub
rcr
addl
lods
insl
icebp
out
pusha
sbbl
icebp
test
repz
idiv
ret
shr
clc
sub
mov
push
mov
or
cmpsl
pop
and
cltd
in
loop
push
jecxz
mov
dec
je
shlb
aas
fnstsw
out
and
repz
outsb
jae
cli
testl
icebp
sub
xor
aam
scas
xor
cmc
icebp
pop
mov
daa
insl
out
dec
std
jae
scas
outsb
insl
dec
mov
ja
sub
jecxz
push
enter
sti
mov
dec
mov
dec
add
daa
sti
xchg
int3
sub
adc
adc
cmp
testb
or
shlb
fadds
icebp
idivb
in
xor
out
and
loop
xlat
out
stos
jo
mov
pop
fstp
sbb
filds
mov
rcrl
mov
test
and
fwait
and
xor
jmp
xor
push
jb
xchg
xor
out
cmp
ds
xchg
imul
fsubr
mov
jb
xchg
adc
bound
lret
aad
mov
push
repz
shlb
push
mov
scas
cmpsl
add
or
lcall
arpl
mov
ja
out
out
push
scas
loope
scas
lahf
xchg
mov
mov
xchg
and
adc
jmp
mov
repz
mov
mov
cld
not
sarb
pop
cmp
jnp
stos
xchg
pop
loopne
leave
addb
sub
mov
mov
mov
sbb
rcl
xor
adc
push
rorl
and
push
loopne
ss
aam
rclb
mov
mov
xor
push
dec
pop
lods
push
or
mov
xor
sub
add
cwtl
cmp
lods
and
jno
call
fcmovnbe
mov
cmp
mov
xor
sbb
pusha
lahf
mov
cmc
xor
stos
pushf
add
orl
sbb
rclb
cmpsb
push
inc
int3
mov
adc
cmpl
pop
scas
cli
jne
shrl
mov
inc
loope
push
filds
and
xor
ljmp
sti
mov
divb
fdivr
cmp
sar
ljmp
stc
xchg
nop
or
add
aaa
jmp
xchg
and
mov
xchg
dec
daa
lret
js
mov
or
mov
addr16
cmpsb
insb
mov
jb
xchg
roll
push
lret
push
adc
outsb
outsl
inc
and
mov
sbb
and
movsl
dec
std
dec
inc
sub
jnp
sub
in
adc
into
push
xchg
pop
mov
push
mov
inc
xorl
push
out
cmpsb
data16
sbb
jle
sub
scas
stos
xchg
bound
rolb
add
adc
aas
out
mov
leave
pop
adc
outsb
sarb
xlat
scas
scas
stos
adc
test
out
sbb
in
insb
add
jmp
stos
lret
aad
jp
repnz
bound
es
jns
pop
mov
call
sahf
lret
mov
mov
mov
loopne
cmp
xor
cmpsb
mov
xchg
cltd
pop
push
repnz
pusha
fwait
aas
mov
lret
mov
fldt
sbb
jp
or
mov
dec
in
jne
pop
imul
sub
movsl
add
fadd
jb
out
jo
ja
or
xchg
fldl
out
ljmp
add
pop
std
mov
push
xchg
mov
rcrb
insb
int3
push
inc
push
push
sub
das
ficompl
jp
sbb
fists
xchg
icebp
push
mov
test
xchg
lods
mov
emms
scas
add
mov
pushf
dec
shr
xchg
push
inc
pop
cs
sbb
negl
jp
les
fiaddl
ret
insb
imul
aaa
pop
ret
lret
pop
push
mov
or
movsb
mov
inc
inc
mov
fld
vmread
out
sub
sbb
aad
cmp
push
xchg
lods
loop
sahf
cmp
in
inc
sbb
lcall
rcrl
fsubs
and
das
or
sub
cmp
aas
int
lahf
cli
jmp
subb
push
inc
data16
aam
adc
push
je
mov
mov
mov
sbb
add
stos
sub
mov
ret
jo
pop
test
cmp
arpl
cmp
or
je
loopne
lods
dec
or
add
xchg
cmc
clc
fldt
icebp
jle
inc
sbb
aaa
orb
mov
or
or
pop
sub
mov
test
hlt
out
adc
jbe
inc
or
int
push
push
jb
xor
dec
ret
xchg
jbe
jecxz
jle
or
jg
out
scas
mov
loope
cmp
dec
sub
lods
or
ret
inc
leave
xchg
mov
mov
cmp
mov
add
cmp
popa
les
ret
popf
xchg
les
cwtl
lock
xor
clc
xchg
dec
fnclex
iret
lods
ss
movsl
xor
pop
xchg
xor
loop
inc
lret
and
call
cmp
aam
mov
lcall
jmp
dec
sub
add
add
loopne
mov
incl
lret
inc
rcrl
add
lock
push
and
and
add
xchg
inc
and
or
jge
push
sbb
lods
data16
fnstenv
cld
push
or
imul
mov
aaa
push
mov
adc
stos
out
cld
incl
sbb
les
adc
and
cmpsb
jns
out
mov
xor
dec
ljmp
ret
mov
daa
aad
movsl
lea
and
add
rolb
mov
pop
fs
mov
sub
ljmp
xor
repnz
out
jne
add
repz
iret
mov
dec
lret
inc
jno
dec
lds
shl
mov
daa
stos
mov
outsl
pop
or
ljmp
xor
loope
lcall
shlb
ljmp
adc
aaa
rcrl
fcoml
xlat
jnp
mov
and
xor
hlt
pop
rcl
mov
sarl
lahf
jp
addr16
dec
cmp
push
and
stos
lock
jo
pop
aam
imull
sbb
mov
mov
cmpsb
rorb
mov
pop
and
sub
adc
icebp
lds
pop
jecxz
dec
js
jle
dec
ja
in
sbb
mov
repz
and
xor
je
mov
ss
pop
add
push
adc
inc
cmp
or
or
sarb
aaa
jmp
cmp
mov
add
or
js
or
cmc
call
xorl
jne
ret
add
or
pop
ds
push
push
adc
inc
inc
sbb
mov
adcb
in
out
adc
dec
ljmp
push
dec
inc
subb
push
out
mov
cli
sub
scas
pop
xchg
es
pop
xchg
rcr
clc
and
sub
cmc
mov
adc
outsl
add
push
clc
sub
add
lods
xchg
and
aad
icebp
int
lcall
movsl
loopne
loop
cmp
pop
inc
push
add
or
xor
xchg
pop
push
fcmovu
mov
mov
ret
push
sbb
or
xor
push
nop
jmp
and
mov
aam
cltd
out
and
stos
loop
mov
std
sub
std
push
or
ds
std
adc
popf
dec
xchg
push
sub
out
pop
popa
jecxz
ljmp
mov
daa
push
jno
sbb
fcoms
sbb
ljmp
notb
lcall
mov
mov
mov
push
mov
lds
out
fsubrs
imul
ret
jno
mov
pop
jecxz
inc
je
loop
shlb
sahf
sub
scas
pop
in
insb
loope
addl
mov
mov
loop
into
insl
nop
push
add
shr
aas
in
fidivs
sbb
out
movsl
test
adc
lret
test
adc
mov
mov
gs
je
and
mov
ljmp
hlt
inc
and
pop
insb
loopne
aaa
mov
jb
outsl
sub
out
test
dec
mov
sub
mov
cmp
int3
xor
push
adc
mov
push
pop
xchg
ja
and
cld
dec
icebp
pop
pop
movsb
sbb
and
dec
faddp
mov
push
pop
mov
cmp
jns
mov
jns
or
inc
sub
mov
inc
push
iret
jg
pop
push
adc
sar
xchg
push
mov
icebp
fbstp
mov
shll
ja
mov
xor
imull
out
or
sbb
push
sbb
adc
pop
mov
xchg
fstpt
enter
test
icebp
cmp
stc
and
cmp
popf
xchg
mov
jge
mov
out
shr
xchg
jo
or
ret
ds
lcall
mov
fidivrl
out
lock
sub
dec
es
arpl
add
int
jno
clc
cltd
scas
jl
inc
in
in
stos
shrl
rol
jmp
jle
adc
int
push
loopne
test
mov
mov
in
in
fstpt
mov
xor
lods
enter
fucom
and
fstps
adc
cmp
out
dec
add
mov
shrl
add
push
and
sahf
push
pop
test
xor
cwtl
fldl
xor
mov
popf
ja
sbb
fadd
repnz
mov
push
popa
mov
push
icebp
nop
test
mov
mov
pop
cld
adc
inc
gs
jno
push
mov
scas
jno
clc
inc
dec
icebp
jne
cwtl
push
mov
fwait
or
pop
inc
pop
xorb
mov
and
icebp
inc
mov
mov
les
scas
pop
mov
inc
mov
or
adc
push
es
iret
sbb
xchg
outsl
sbb
imul
inc
pop
imul
xchg
ja
vmovdqa
sub
sub
adcb
push
pop
sub
stos
xlat
adc
std
clc
dec
push
daa
mov
loope
notb
push
shlb
sub
popa
pop
xchg
mov
popf
pop
push
pop
cmp
in
sub
movsb
test
ja
mov
ds
add
push
fmuls
mov
cmp
sbbl
ja
push
pop
call
sahf
fcompl
idivl
dec
xlat
inc
int3
and
adc
and
adc
imul
push
add
ret
mov
lock
test
push
fmuls
or
mov
jne
mov
mov
push
loope
cltd
stc
sub
jecxz
jl
into
mov
mov
enter
cld
inc
adc
fs
popa
or
mov
cmc
xlat
aas
push
push
dec
push
mov
or
push
popf
ja
and
clc
mov
popa
sbb
adcl
mov
jb
cmp
inc
lock
dec
fnsave
pop
loope
fldt
push
jns
scas
call
mov
mov
mov
arpl
sub
adc
pop
test
mov
cld
xor
sbb
lcall
in
dec
dec
jne
pushf
xchg
jp
enter
adc
adc
inc
pop
cmp
xchg
test
fstpl
mov
cmp
sbb
fs
xchg
pop
aam
not
out
adc
dec
loop
mov
data16
std
add
call
ds
std
inc
jmp
lods
repz
mov
popf
mov
insb
mov
mov
jmp
mov
std
call
fwait
ror
in
jp
das
dec
inc
pop
adc
sbb
nop
jmp
mov
shll
jl
push
add
xlat
mov
ret
inc
cs
pop
mov
orl
in
addr16
mov
inc
out
jl
cmp
sbb
icebp
inc
lret
push
xor
xchg
stc
int3
push
jo
arpl
repnz
sbb
negl
popf
lcall
push
jp
popf
aaa
pushf
popa
add
outsb
in
movsl
pop
dec
repz
add
xlat
sbb
pop
outsb
pop
sub
ret
cmp
enter
push
mov
push
xchg
cmp
imul
push
loop
push
inc
pop
mov
xor
stos
arpl
imul
sbb
pop
insl
hlt
mov
or
push
xchg
movsb
inc
mov
push
lcall
jp
popf
adc
in
adcb
mov
adc
mov
stc
repz
xchg
jp
push
js
mov
rcr
cmpsb
decb
inc
lret
inc
frstor
mov
cwtl
fstpl
sub
stc
inc
ret
movb
cmp
xorb
push
mov
mov
mov
sahf
mov
inc
ljmp
scas
sub
xor
dec
sti
inc
iret
sub
mov
sub
and
out
pop
daa
loope
inc
mov
pop
inc
data16
das
mov
xchg
shlb
lods
and
jecxz
daa
bound
sub
movsb
clc
and
adc
int3
mov
push
movsl
sahf
pop
loop
and
cltd
xchg
jmp
ret
fwait
fwait
sbb
imul
or
pop
ret
cmp
ljmp
push
outsl
push
lods
cvtpi2ps
mov
push
outsl
jecxz
xchg
int3
insb
cmp
in
test
into
jge
or
mov
cmpsl
mov
inc
adcl
mov
push
mov
inc
out
imull
fs
das
or
pop
mov
imul
push
lods
fsubrs
addr16
aad
stos
fsubrp
mov
pop
fs
pop
call
mov
cmpl
out
dec
and
pop
data16
push
lods
xor
mov
in
adc
cmp
jnp
addl
mov
inc
pop
lret
dec
stos
bnd
or
test
maskmovq
imull
ret
fbld
push
mov
setle
jno
ret
push
cmp
dec
xchg
pop
jle
enter
cli
cltd
popa
ds
push
push
push
cmc
inc
and
push
out
dec
pop
data16
dec
ljmp
inc
mov
shll
adc
arpl
jns
loopne
mov
pusha
mov
push
add
stos
xor
jb
pop
cmp
pop
push
push
clc
shll
out
mov
loopne
xor
std
out
scas
fildll
mov
inc
push
add
jecxz
adc
lock
or
cmp
test
mov
bnd
into
push
mov
cli
mov
xor
outsl
rol
flds
sbb
adc
fs
aas
jns
mov
mov
mov
push
push
pushf
cmp
les
dec
fdivrs
testb
popa
cmp
xchg
ja
cmpsl
mov
andb
push
push
sub
pop
lret
push
scas
pop
loope
sahf
fildll
jg
ja
faddl
inc
sbb
rol
pop
ljmp
xor
jle
rcll
les
int
cmpsb
cld
pop
xchg
sbb
rclb
xor
sub
ret
xchg
xchg
fisubrl
add
pop
mov
outsb
ret
sbb
and
cmpb
adc
aad
cmpb
jmp
je
pop
icebp
push
add
inc
and
jmp
xchg
push
mov
or
popa
jne
jno
pushf
sbb
lahf
shll
cltd
pop
xchg
loopne
xchg
les
pop
sub
xor
aas
pop
icebp
inc
addb
fadd
mov
shll
mov
lds
pushf
and
inc
and
and
aad
push
out
mov
pop
in
mov
push
or
jo
mov
cwtl
call
lock
push
mov
cmp
movsb
dec
cmpsl
out
shll
sar
jae
xor
int3
mov
inc
inc
or
mov
adc
in
scas
movsb
popa
jnp
std
jae
mov
jmp
and
pushf
dec
sbb
in
fsubrs
mov
xchg
xlat
repz
movsb
xchg
inc
sti
js
mov
jmp
xchg
cmpsb
pop
xorl
mov
sahf
pop
pop
jecxz
fwait
jp
pop
cmc
pop
aaa
into
data16
pop
pushf
mov
fstpt
jbe
cmp
push
cli
ds
jecxz
dec
mov
shrb
xor
cmp
shll
aas
push
mov
ds
dec
mov
dec
xor
mov
inc
outsb
dec
cltd
je
stos
jo
popf
adc
lret
cwtl
lods
mov
shr
mov
mov
nop
out
or
xor
call
and
mov
xlat
aaa
cwtl
cmpsl
pop
mov
adc
add
ja
into
mov
cltd
pop
push
or
push
dec
xchg
sub
xchg
roll
into
repnz
hlt
call
push
aaa
mov
xchg
cmc
testl
addr16
dec
mov
sti
xchg
fcom
outsl
sub
sbb
xchg
scas
jne
fdivs
mov
adc
cmp
sbbl
mov
std
jg
xor
in
ret
pop
sahf
xchg
xchg
aas
xor
jns
mov
inc
xchg
adcl
pusha
xor
hlt
bnd
jae
repnz
jns
jge
push
cmp
popa
sub
push
xchg
jecxz
pop
pop
sub
mov
pop
add
inc
addb
loope
mov
mov
mov
push
das
mov
sub
clc
pushf
hlt
repnz
push
xlat
call
mov
mov
inc
jp
jle
xchg
pop
icebp
adc
and
mov
mov
or
push
xor
sub
mov
xchg
jnp
jl
addr16
pop
xchg
dec
pop
push
in
adc
push
dec
xor
ret
outsb
adc
stc
dec
fbld
xchg
addl
aas
mov
or
or
cmp
hlt
jmp
mov
adc
pop
lods
cmp
and
push
xchg
ffreep
lods
xchg
jno
and
in
dec
iret
stos
in
mov
sbb
or
pusha
stos
cmp
into
ds
pop
pop
pushf
roll
push
add
jg
lcall
arpl
dec
mov
cmpsb
mov
in
pop
lcall
push
lods
push
xchg
movsb
in
mov
pop
pop
cmp
jecxz
sub
fildl
cmp
xchg
or
mov
icebp
je
xchg
ret
pop
scas
decl
cmp
int3
dec
jge
cmpl
inc
pop
movl
arpl
rcr
dec
lcall
mov
mov
out
sub
sbb
loopne
inc
xchg
es
pop
inc
adcl
clc
xor
xacquire
repz
inc
lock
pop
sub
cli
icebp
mov
dec
icebp
lret
ljmp
jnp
dec
mov
push
or
cmp
adc
xchg
sub
jg
inc
sbb
sub
sahf
rclb
add
xor
iret
ja
push
adc
mov
xchg
bound
scas
scas
loop
das
push
push
call
adc
add
invd
dec
test
sarb
xlat
cwtl
cli
dec
out
fs
test
and
out
andl
lcall
xor
icebp
push
loope
push
ljmp
sbb
inc
je
jge
lock
lret
sbb
jae
jae
test
xchg
iret
or
adc
pop
xchg
pop
and
fisubrl
adc
pop
test
in
xor
jne
ret
jno
xor
mov
outsb
cmp
sub
pusha
mov
xchg
in
ljmp
mov
add
xchg
mov
pop
imul
or
mov
push
shlb
loopne
dec
bound
mov
jl
shr
pop
je
inc
pushf
adc
aaa
and
es
pop
fwait
mov
ret
shrl
jno
aam
les
mov
pmullw
push
adc
stos
decl
mov
jge
sbb
daa
rolb
jo
jnp
jnp
bound
mov
pop
cs
in
mov
aaa
mov
adc
push
sub
mov
in
je
pop
in
lods
inc
aam
jb
jns
mov
aaa
popf
shll
inc
jnp
push
in
and
xchg
cmp
out
cmp
sub
cmp
mov
lcall
dec
pop
jmp
jnp
stos
sub
cmp
scas
jl
iret
es
decl
xchg
mov
mov
call
pop
fdivrs
add
subb
mov
decb
xor
xlat
xchg
daa
arpl
lock
pop
mov
inc
and
das
mov
mov
cli
dec
adc
mov
adc
stos
iret
mov
jns
jge
mov
popf
imul
lahf
cmpsl
sahf
mov
adc
lret
insl
loop
sti
adc
mov
loopne
mov
out
aad
inc
jecxz
push
xchg
xor
fwait
into
jne
fimull
fwait
out
xchg
xor
cmpsb
int
fisttpll
outsl
adc
daa
inc
xchg
pop
jae
fcompl
dec
xchg
jno
mov
push
cs
cmc
xchg
fistpl
xchg
xchg
lds
fcomip
pop
cmp
hlt
or
adc
mov
mov
push
test
repz
das
mov
imul
insb
sub
xor
rcr
adc
push
mov
lcall
mov
das
cmp
loope
movl
arpl
movsl
inc
lahf
push
pop
xchg
cmp
add
or
mov
sti
orl
insl
cmpsl
mov
sub
les
inc
div
ja
xchg
xchg
jmp
push
add
mov
pop
repnz
push
xor
fmull
lock
fstpt
mov
adc
nop
xor
or
loope
jge
scas
loop
sbb
rol
fwait
imulb
subb
leave
adc
sysret
fisubrs
sbb
mov
adc
pop
mov
dec
iret
push
ret
lret
xor
cmp
push
lcall
fimuls
into
adc
sub
push
std
int3
mov
mov
jae
jp
jo
lcall
pop
or
addl
adc
jns
adc
dec
sbb
addr16
fwait
rcll
or
cwtl
or
subb
das
xor
movsl
cltd
aad
xor
mov
bswap
pop
xchg
pusha
lea
xchg
or
mov
jle
enter
sbb
pop
dec
xchg
jbe
cmp
repnz
bound
inc
shlb
add
or
in
inc
mov
mov
cwtl
pop
clc
jecxz
aad
clc
cmp
xchg
lea
fistl
mov
and
popf
arpl
jp
mulb
daa
imul
mov
pop
mov
cmc
xchg
mov
add
ret
aaa
call
sahf
sarl
data16
cld
lea
andb
sti
add
jl
xorl
mov
int3
scas
push
fdiv
addr16
popa
lock
sbb
dec
sbb
je
mov
and
dec
sub
sub
movsb
xor
push
add
or
sub
mov
out
into
sbb
ljmp
adc
pop
int
jle
jnp
add
xchg
sbb
or
test
cmpsl
fstpl
push
pushf
test
mov
aam
shlb
xchg
dec
mov
push
jb
adc
and
incl
cmp
mov
insb
and
lret
mulb
cmpsl
nop
repnz
fsubp
ret
mov
ja
xchg
out
mov
inc
jo
pop
aad
xchg
add
or
loop
lea
sbb
mov
notl
jne
push
or
jno
mov
das
imul
xchg
outsl
xor
inc
fists
loop
pop
ja
sub
into
nop
mov
and
adc
repz
sti
fistl
jge
mov
mov
push
stos
or
test
xchg
sub
outsl
repnz
cmp
lods
mov
jb
mov
leave
lret
jo
stos
bound
les
pusha
lock
cwtl
cld
push
outsl
aas
scas
shll
mov
filds
in
or
inc
int
fwait
adc
aaa
out
mov
add
es
shl
imulb
mov
sahf
mov
pusha
scas
je
das
mov
mov
dec
add
orl
add
xor
xor
outsl
xchg
pop
inc
pop
mov
hlt
fdivl
andl
pop
cmp
jnp
or
subl
int3
shrl
lret
or
inc
ret
and
mov
add
xor
sti
or
mov
and
arpl
push
mov
add
fsubl
jo
jg
pushf
fs
inc
in
sub
pop
cmc
jno
mov
out
iret
add
cld
pop
fldt
mov
sbb
ret
jmp
jbe
push
movsb
aas
test
idivl
xor
sub
bound
xor
jnp
or
mov
pop
test
testb
jae
sbb
push
xchg
test
outsb
push
cwtl
popa
lods
dec
sahf
jl
scas
push
test
fsubl
in
sti
mov
or
sti
jnp
inc
lahf
dec
ret
into
mov
xchg
add
cmp
sahf
pop
xor
xchg
in
xor
jae
outsl
fdivs
lret
jae
inc
mov
roll
xchg
adc
lcall
xlat
sbb
jns
add
dec
data16
loope
cmp
xchg
pop
cs
mov
xor
xchg
mov
push
stos
pop
ja
mov
and
inc
icebp
dec
pop
js
not
out
pop
xchg
inc
jae
cli
and
adc
mov
cmp
into
insl
cmp
jmp
inc
mov
mov
sub
cmpsl
jne
push
stos
daa
and
ret
or
arpl
insl
in
inc
mov
or
into
cmp
aas
clc
dec
dec
push
sbb
dec
lods
mov
xor
outsb
js
xor
cmp
pop
es
jecxz
aad
insl
jmp
adc
push
jge
orl
bound
mov
loop
loop
repnz
cmp
lret
icebp
fsubrl
popf
lret
xchg
js
aas
xchg
xchg
lahf
ret
stos
aaa
mov
lods
adc
imul
lret
hlt
dec
ss
and
mov
jge
adc
mov
leave
test
sbb
and
pshufw
dec
repz
pop
mov
inc
sub
pop
mov
mov
mov
sahf
mov
cmp
es
out
fldt
mov
lock
movsb
pop
xor
nop
pop
addr16
jle
data16
movsl
int3
les
pusha
out
out
jl
aam
push
push
lcall
movsb
mov
movsb
xor
data16
cltd
cmpl
lea
mov
enter
test
push
sub
imul
daa
ljmp
sahf
inc
sub
cmp
mov
fimuls
lea
sbb
divb
sub
inc
mov
fdivr
shrl
and
mov
lods
jns
cltd
xchg
lret
sbb
mov
mov
sbb
mov
jmp
test
sub
jno
addr16
sub
movsl
pop
fstpt
mov
pop
sbb
test
mov
repnz
pop
jnp
mov
gs
jbe
mov
stos
jp
dec
loop
lds
mov
inc
or
push
or
movl
das
dec
ja
out
adc
mov
mov
dec
xor
push
outsb
aad
xchg
stos
inc
shlb
loopne
jo
fcmove
mov
jmp
addb
pop
movsl
xor
mov
es
xor
outsb
add
add
sbb
nop
jg
dec
ret
cmpsb
mov
dec
add
mov
loopne
mov
jno
mov
dec
cmc
mov
orl
aam
js
dec
jl,pn
jae
lock
dec
ja
mov
cmpsb
xchg
lret
cld
mov
cmp
out
sbb
inc
movsb
mov
dec
movsb
mov
push
inc
int3
lock
and
mov
sub
stos
xchg
shl
ss
sbb
lret
mov
cmp
mov
mov
movsb
pushf
ror
adc
fcoms
xor
sub
fcmovne
inc
mov
lods
jb
sbb
inc
push
push
repz
pop
aaa
hlt
outsb
cmp
xchg
test
jg
mov
sub
add
inc
or
jb
and
es
jl
sbb
pop
sbb
int3
add
fisubrs
orb
aaa
and
add
adc
sub
fwait
xor
into
inc
outsl
ss
xchg
jg
mov
ja
pop
in
popf
cmp
mov
mov
leave
in
insl
int
and
loope
test
xorb
test
jecxz
or
rcr
stos
cmp
jb
push
dec
mov
pop
pushf
fwait
mov
gs
dec
add
das
xor
push
sbb
lods
mov
imul
cmp
insb
icebp
jg
bound
test
cmp
rcll
pop
add
lods
mov
repz
mov
or
add
and
loop
out
lret
xchg
stos
in
jg
push
xor
xlat
dec
pop
xchg
pop
adcb
lcall
push
addl
fsubl
aad
std
push
loope
mov
into
cmc
loopne
mov
mov
pop
in
add
jae
fmuls
inc
neg
addb
xor
mov
stos
or
mov
sub
cli
daa
sbb
mov
sub
rorb
add
inc
sbb
sub
lock
cmp
or
loope
sbb
xchg
mov
mov
jb
sbb
sub
cmp
mov
dec
push
hlt
adc
icebp
lret
scas
mov
mov
mov
mov
test
xchg
gs
xlat
shll
jg
adc
mov
sub
adc
xchg
out
cmp
xchg
pop
divl
jp
or
inc
add
cld
jb
insb
and
idivb
dec
nop
lcall
xor
data16
fldl
dec
lea
mov
mov
lcall
xlat
les
sbb
or
cmp
fwait
push
pop
frstor
jg
and
sar
pop
arpl
xchg
sub
adc
outsb
leave
dec
mulb
in
rcrl
int
xchg
lret
push
test
cmpsb
lahf
add
or
in
loopne
push
jg
out
jg
xor
xor
xchg
mov
cmp
imul
lret
icebp
pop
sub
daa
andl
dec
jb
jg
dec
nop
jne
aas
cmpsl
in
push
bound
daa
ret
fs
cmp
aad
mov
jecxz
inc
test
stos
adc
mov
and
mov
test
sbb
repnz
ss
xchg
or
iret
sub
imulb
icebp
pop
into
ret
clc
sub
lods
sub
pop
call
and
jbe
dec
ds
or
jl
cmp
in
jae
cmpsb
out
int
push
pop
jmp
sbb
repnz
cmpsb
xchg
or
push
imulb
pop
add
rol
insb
mov
sbb
xchg
negl
outsb
call
xlat
add
xor
or
ja
cld
int
add
cmp
jmp
xorb
sbb
shlb
test
lea
mov
pop
inc
push
es
jle
outsl
add
mov
pop
lods
in
stc
or
inc
popa
jmp
jg
mov
mov
in
repnz
xor
fcoml
int
jmp
push
and
pushf
aas
xchg
icebp
lahf
jb
mov
jno
ds
push
mov
scas
xchg
or
cmp
xor
imul
adc
add
in
pop
icebp
lock
cmpsb
jbe
sarb
imul
gs
shl
adc
in
dec
xor
mov
and
jnp
fistpl
or
xchg
push
pop
add
jne
push
cmc
icebp
xchg
lods
mov
gs
xchg
fwait
gs
roll
je
cmpsl
test
jecxz
adc
imul
jmp
outsb
jmp
insl
icebp
cmp
or
test
cmpsb
test
cwtl
inc
aad
imulb
aaa
sub
aaa
adc
or
fildll
cmp
loop
push
pop
push
mov
leave
lcall
pop
outsl
cmp
or
push
imul
adc
xchg
ss
fisubrl
fs
int3
or
xchg
fisttpl
sbb
clc
repz
addr16
in
es
sbb
shld
ljmp
or
mov
sbb
add
mov
movsl
out
out
inc
mov
and
loopne
push
jmp
rorl
out
inc
bound
iret
fs
pop
divl
fldenv
hlt
or
shll
js
jecxz
push
sbb
xchg
adc
jmp
stc
test
mov
in
xchg
lock
cmp
jae
shll
out
sub
fwait
pushf
sbb
mov
pop
nop
pop
pop
stos
or
les
lret
inc
push
inc
pop
and
mov
pop
movhpd
dec
sub
sub
jecxz
adcl
pusha
fisubs
mov
fdivrl
mov
and
bound
testl
jb
push
xchg
cs
lds
mov
mov
lds
lods
or
push
daa
lcall
shlb
mov
stos
in
push
push
ror
xchg
adc
fxtract
or
or
mov
dec
imul
mov
mov
mov
sbb
mov
pop
repz
or
stos
xor
adc
add
out
mov
cmp
mov
nopl
cltd
jne
cs
and
jl
cmp
xor
push
icebp
pop
mov
mov
mov
call
cmc
lret
lds
out
pop
push
je
out
or
and
out
or
int3
and
sti
fsts
pusha
iret
jecxz
dec
sub
xchg
sub
or
daa
sarb
inc
scas
aad
adc
repnz
and
jmp
sbb
ja
test
aam
mov
scas
pop
push
pop
outsl
fmull
mov
xchg
out
inc
mul
pop
or
inc
ficompl
jecxz
xchg
jne
in
mov
gs
jg
dec
lahf
aas
fisubrl
sbb
dec
mov
xlat
push
dec
inc
imul
in
jl
mov
pop
mov
mov
pop
cld
xor
das
fsubrl
scas
jle
dec
mov
aad
gs
lret
lahf
jl
push
aaa
sub
and
push
in
pop
and
imul
xchg
push
icebp
xchg
xlat
ja
and
inc
adc
test
scas
in
inc
flds
inc
movsb
test
or
icebp
fstpl
aam
aam
xor
pop
add
stos
pushf
pop
ljmp
cld
and
aam
cmpsl
adc
jmp
lds
lcall
enter
sub
ss
data16
add
pop
dec
les
mov
daa
dec
fcomp
push
dec
cmp
scas
lods
stos
test
cmp
scas
insl
sbb
lret
ror
lods
xchg
jb
sbb
cmpsb
fisttpl
jo
cmp
push
testl
add
and
mov
jne
mov
cmpl
enter
daa
dec
or
jns
mov
lret
xor
shll
into
inc
mov
or
pop
loop
seta
jl
jg
mov
nop
xchg
pop
pop
jne
add
pop
push
mov
lods
adc
mov
test
nop
cmc
xlat
out
pop
das
leave
xchg
ret
or
add
mov
cltd
movsb
leave
or
js
mov
mov
rolb
loopne
sub
dec
inc
cltd
cmp
cmc
test
push
mov
cli
and
mov
pop
es
stos
cmp
cmpsb
js
adc
push
jge
inc
int
jl
fadd
adc
push
dec
popa
pop
add
mov
movsl
sub
mov
and
xchg
push
xor
mov
aad
push
cld
sbb
mov
push
inc
cs
ljmp
loopne
sub
lods
lods
push
push
adc
test
pop
lahf
lods
repz
sbb
sub
imul
mov
pop
stos
or
orl
imul
xchg
xlat
sub
pop
out
push
dec
ficoml
push
loopne
and
cmpl
pop
push
sub
lahf
test
mov
and
and
int3
pop
gs
dec
xor
mov
and
pop
int
mov
sbb
int
sub
dec
mov
dec
cmp
enter
or
in
es
mov
ds
pop
mov
xchg
and
aam
iret
mov
add
dec
int
mov
fdivr
dec
fstpt
adc
into
lock
xor
inc
xchg
xor
mov
stc
rclb
mov
mov
pop
dec
rcr
lds
cltd
pusha
in
js
dec
and
jb
int
xor
xor
out
cmp
cwtl
add
lods
sahf
cli
add
xor
mov
mov
rcll
mov
leave
mov
jmp
add
adc
repnz
or
mov
xor
jae
pop
aas
stc
add
scas
push
jecxz
ljmp
push
sbb
sub
les
pop
nop
rorl
test
sbb
popf
sbb
and
mov
loop
adc
ss
push
xchg
mov
popa
aas
xorl
mov
aad
mov
or
xchg
mov
lahf
mov
adc
sbb
mov
rorb
jl
test
inc
mov
test
cmp
fwait
mov
dec
sbb
aas
push
dec
ljmp
cwtl
testl
cltd
push
mov
mov
jnp
test
sub
adcl
pop
inc
push
stos
mov
sub
stos
lods
sarb
and
or
dec
call
inc
cwtl
jo
adc
mov
lret
cwtl
into
arpl
scas
enter
pop
outsb
lds
sbb
jmp
rcr
cmp
xchg
mov
sbb
push
pusha
aam
out
shll
xor
push
mov
mov
pop
cmp
lods
add
dec
mov
int
idivb
pop
cli
test
aad
pop
add
enter
mov
mov
ret
cmp
add
or
jno
hlt
jge
lcall
fstpl
mov
neg
fs
das
pusha
or
mov
and
ds
mov
cmpb
mov
in
rol
jecxz
fs
sbb
xchg
adc
insl
icebp
scas
mov
cmp
repnz
outsl
ss
jle
inc
mov
cmpb
subb
inc
pop
sbb
xor
test
xchg
nop
xor
test
mov
fwait
and
adc
jb
sbb
cmc
xor
mov
and
xchg
or
inc
daa
cli
xor
aas
mov
adc
jne
fxch
ud2
mov
sarb
lock
adc
jecxz
js
jne
sbb
xchg
mov
adc
xchg
ret
cmp
inc
cmpsl
aas
lret
divl
xor
imul
ss
xchg
pop
fildll
xor
push
in
sub
xchg
jo
jmp
outsl
push
in
in
fbld
xor
mov
fcoml
jmp
and
jl,pt
rcrl
mov
sbb
inc
int
je
call
xchg
push
cli
push
aas
inc
mov
mov
dec
dec
push
push
sub
mov
dec
test
xor
inc
xchg
dec
xor
stos
fwait
lcall
icebp
ja
mov
repnz
addr16
fnsave
and
inc
roll
loope
pop
pop
push
cmp
add
sbb
fdivrp
jbe
xchg
xchg
jecxz
divl
cmp
test
jge
xlat
movsb
and
mov
sbb
sub
mov
or
outsl
sub
add
out
mov
rep
pop
adc
xorl
repnz
dec
inc
mov
cmp
cwtl
cli
pop
add
xchg
sbb
mov
xchg
push
scas
test
popa
pop
sbb
xor
jo
imul
std
sti
int3
lods
pop
inc
push
inc
and
xor
ret
scas
add
bound
or
xchg
and
jb
adc
sti
xchg
mov
sub
inc
pusha
movsl
fsubrl
jns
flds
xchg
lcall
mov
shr
cmp
sub
push
hlt
or
jns
lahf
leave
pop
gs
test
mov
outsb
cwtl
push
jbe
xchg
mov
rclb
stos
cmpsb
imul
test
sub
ret
and
inc
xchg
ja
jp
popf
sub
xor
gs
sbb
outsl
out
mov
and
sti
aad
jne
pop
shll
icebp
movsl
loop
fdivl
inc
inc
xor
mov
add
frstor
nop
lcall
add
sub
imul
lods
pushf
hlt
mov
stc
repz
xorb
xor
movsl
imul
cs
popa
adc
loop
cwtl
in
push
adc
push
aas
cmp
into
cltd
pop
or
movsb
mov
jo
mov
cmp
mov
xchg
add
mov
js
lcall
loopne
mov
sbb
imul
inc
push
mov
ret
sahf
dec
xor
out
sbb
fmuls
adc
dec
in
jae
adc
jb
repz
sbb
mov
stos
mov
mov
xchg
push
jmp
mov
xor
aad
sbb
ljmp
dec
insl
xchg
loopne
out
in
test
fisubs
mov
xor
xor
leave
js
xor
adc
out
pusha
mov
imul
nop
dec
or
xor
mov
jecxz
mov
and
jle
es
pop
insb
fisubrl
loop
sub
mov
jmp
jmp
ja
jp
movsl
loopne
mul
in
mov
enter
fs
push
scas
mov
iret
fdiv
insl
add
push
jecxz
pop
jmp
inc
xor
dec
sbb
mov
push
daa
inc
pop
sahf
jb
xor
inc
fnsave
mov
push
or
int3
jmp
arpl
xchg
xchg
fwait
in
cmpsl
ljmp
jp
daa
stos
jmp
pop
xchg
adc
pop
cmp
mov
and
mov
cmpl
std
js
fadds
ljmp
push
xchg
or
shll
test
mov
mov
lret
add
insl
or
mov
jmp
in
ds
push
sub
add
outsl
dec
fisubs
push
nop
data16
in
inc
out
daa
imul
sbb
ljmp
imulb
sbb
mov
inc
push
fstpt
pop
push
jno
pop
call
sbb
inc
lods
loop
fldcw
shrb
cltd
mov
lahf
loopne
xlat
cmpsl
inc
mov
aad
jnp
in
out
jge
scas
out
shlb
jecxz
push
sbb
mov
adc
test
shll
mov
lcall
xchg
jno
loope
leave
das
mov
out
imul
push
xchg
inc
dec
iret
insb
add
negl
jbe
inc
or
mov
loopne
mov
push
cmp
sbb
cmp
arpl
push
or
popa
dec
sub
das
push
pusha
sti
insb
add
and
add
sar
xchg
lahf
data16
dec
test
xor
mov
lret
in
fabs
xor
xchg
mov
incb
jne
xor
out
or
or
loopne
xchg
jne
rclb
cmp
dec
xchg
jns
ljmp
lcall
es
pop
rcrl
out
repnz
and
addr16
pusha
movsb
mov
cld
jne
icebp
pop
incl
repz
add
pop
inc
push
fwait
jge
mov
divb
jmp
xchg
inc
xor
push
inc
pop
push
xor
adc
mov
fdiv
mov
out
pushf
and
scas
inc
cmpsb
and
sbb
and
nop
xchg
cltd
and
lret
mov
inc
bound
call
and
mov
scas
dec
loopne
in
jb
repz
xchg
xchg
pushf
adc
inc
das
test
ds
push
daa
stc
mov
fstps
bound
cmpl
xchg
inc
push
xchg
sar
mov
xor
xchg
fwait
arpl
add
outsl
repz
pop
femms
imul
imul
pop
add
push
and
mov
push
in
inc
pushf
addb
nop
je
in
push
in
push
in
das
roll
push
ljmp
jbe
xchg
jmp
xlat
rcl
scas
mov
mov
inc
mov
xorb
push
icebp
mov
sbb
test
stos
or
sub
push
mov
js
test
es
and
nopl
nop
in
add
xchg
mov
out
dec
cld
in
sti
xchg
test
and
jno
fwait
loope
mov
cmc
lret
mov
pop
pop
mov
imul
divl
data16
pop
add
sub
adc
add
orb
dec
in
cmp
sbb
sbb
sbb
in
cmp
jo
sarl
sbb
jp
ja
fabs
sahf
cwtl
adc
mov
xor
mov
jmp
in
test
mov
pop
dec
mov
adc
cmp
pop
aam
pop
test
push
or
xchg
and
clc
inc
jl
cli
jl
loop
clc
in
and
insb
fbld
fmul
jbe
and
push
jae
push
mov
fs
mov
mov
jecxz
sti
int3
ret
addb
xchg
and
sub
in
push
sahf
push
push
jae
adc
and
or
fstpt
push
dec
push
xchg
mov
or
es
int
xchg
fstl
inc
movsl
insb
push
jno
push
add
mov
test
lcall
jmp
pop
mov
repnz
adc
aaa
or
add
mov
adc
inc
sbb
cmp
jp
xor
imul
sar
popf
popa
test
sbb
cltd
jecxz
adc
jne
loop
inc
cmc
addr16
sbb
loopne
popa
rcrl
mov
imul
sub
mov
xchg
aas
cmp
sarl
and
orb
repz
icebp
lock
pop
add
sbb
aas
jne
adc
gs
sbb
cmpsl
fiadds
pusha
ljmp
lret
mov
sbb
lock
fdivs
mov
or
sar
aad
lahf
hlt
jp
push
sub
inc
rolb
out
call
in
loopne
inc
jns
push
mov
sbb
dec
and
leave
nop
ds
aaa
mov
adc
enter
sbb
sbb
adcb
dec
popa
xor
inc
sub
jo
mov
je
push
pop
bound
mov
mov
std
ret
pop
sbb
orb
sub
ret
or
pop
rcll
loop
jb
push
arpl
push
mov
add
ret
sub
xchg
fcmovbe
xchg
mov
or
cld
jecxz
lret
mov
sahf
ret
rolb
mov
emms
aam
lcall
in
sub
add
xchg
mov
add
xchg
dec
inc
mov
mov
arpl
ja
dec
daa
lods
cmpsl
enter
mov
cmpsl
inc
lret
xchg
mov
adc
sbb
inc
jnp
sub
dec
sahf
mov
ja
jp
fs
popf
out
sub
pop
cmc
loopne
nop
cld
movsl
int3
outsl
add
lock
scas
pop
nop
jg
or
inc
out
xchg
sbb
push
fcomi
pushf
cmp
call
bound
pop
adc
sub
pusha
stc
xor
sub
xchg
nop
and
in
mov
xor
lods
dec
mov
mov
popa
fimuls
shlb
mov
dec
or
in
adc
movsl
fwait
jmp
mov
fimuls
jnp
nop
pop
hlt
cmp
lret
pusha
cmp
mov
dec
pop
and
add
mov
das
vmptrld
jle
pusha
or
sbb
sub
cli
or
adc
cwtl
repnz
lods
dec
jno
daa
outsb
enter
scas
stc
inc
jp
sub
cmp
aam
jo
mov
inc
jne
xor
insb
iret
insl
sbb
gs
aad
outsl
adc
xorl
jmp
and
jp
push
stc
xchg
mov
aas
jge
sahf
inc
pop
jbe
jp
lods
dec
cmpsl
or
push
jge
out
sub
fcoml
sub
adc
cmp
fs
fcomps
cwtl
movsb
ret
sbb
hlt
adc
jle
mov
divl
sub
adc
dec
lcall
and
movsb
pop
arpl
and
fs
cmp
jne
lea
mov
mov
insb
test
test
fidivs
fistl
dec
push
ja
add
add
pop
pop
sti
adc
xlat
or
sbb
pushf
fiadds
sub
push
mov
ja
sti
rclb
fcmovb
call
pop
nop
lahf
jge
jno
sar
sbb
in
push
or
push
mov
ret
fldl
test
dec
push
lret
pop
negb
cmp
test
adc
add
jns
lds
or
ljmp
fimull
mov
jmp
sahf
push
mov
loope
xchg
and
mov
das
pop
aaa
mov
dec
cmpsl
iret
jne
inc
pushf
das
iret
push
xchg
cld
imul
adc
and
push
xchg
mov
push
imul
cs
jno
pop
mov
ljmp
sub
test
push
and
movb
sbb
push
pushf
mov
ds
outsb
into
in
rorl
lret
in
mov
dec
xchg
fcmovu
inc
push
std
ficomps
adc
movsl
push
cmp
pop
arpl
pop
xchg
popl
ljmp
pop
iret
popf
cltd
xor
inc
movsb
jecxz
mov
or
or
shrb
inc
mov
push
jo
xorl
iret
loopne
mov
mov
mov
lock
sahf
mov
cwtl
and
ja
popf
insb
mov
push
int
je
divl
dec
dec
or
leave
mov
mov
mov
int
inc
pop
fstl
xchg
out
in
jle
mov
repnz
loope
int3
pop
call
hlt
xchg
fildl
cld
xlat
dec
sbb
adcb
loop
jle
cmc
in
fstpt
imul
adc
test
pop
mov
cmp
lds
fs
incl
das
adcl
jne
fdivs
pop
sbb
xor
fwait
add
lock
jb
lods
sbbb
pop
xor
mov
js
or
loop
lret
fidivrl
push
cltd
lods
pop
jmp
rclb
repz
sahf
lods
mov
lret
mov
test
or
out
mov
sub
xchg
roll
repz
cmc
inc
or
cmp
cs
stos
popl
nop
push
cmpsb
in
int
in
iret
mov
mov
clc
sbb
xchg
or
mov
inc
mov
cmp
mov
out
lods
in
add
xchg
jecxz
mov
add
loopne
movsl
jecxz
sub
aas
fbstp
or
ljmp
sub
jp
aaa
mov
gs
je
jmp
inc
mov
sub
sbb
inc
push
test
testb
and
dec
dec
pop
rcr
jl
xchg
push
or
fsub
jne
xchg
or
mov
das
mov
subb
insl
jmp
xorb
dec
push
dec
je
xchg
js
aaa
dec
sbb
scas
in
add
repz
insl
scas
pop
mov
add
mov
lea
mov
or
mov
int
xor
leave
lock
inc
mov
mov
push
popf
movsb
sarb
xchg
in
stos
out
imul
int
js
xchg
or
xchg
addr16
notb
adc
daa
pop
pop
sbb
sbb
xchg
xlat
jnp
int3
in
lods
inc
sub
push
sti
xchg
inc
outsl
add
push
mov
xlat
rclb
push
lods
or
jge
call
sub
enter
sti
shlb
push
mov
dec
xor
outsb
jo
push
sahf
mov
mov
mov
ljmp
stos
fwait
dec
xchg
out
pop
xor
xlat
xchg
xor
mov
mov
jbe
mov
pusha
jns
xchg
rclb
push
std
mov
dec
fldt
fucomi
pop
jbe
and
test
mov
data16
shrb
sub
mov
xchg
cltd
fsub
push
mov
jecxz
add
or
add
loopne
mov
sti
sub
sub
add
imul
cmp
or
pop
add
cld
sbb
fstpl
insl
mov
sub
fisubs
and
shrl
cmp
mov
das
std
jle
aad
cmpsb
mov
dec
or
xor
mov
inc
push
and
mov
cmp
push
stos
gs
add
in
xchg
hlt
addl
call
out
adc
fistps
pop
and
roll
pop
stos
aad
adc
dec
jb
rolb
mov
xchg
enter
outsb
packuswb
adc
lds
int
jg
push
mov
and
pop
mov
stos
les
stos
bound
mov
mov
push
popf
loop
lcall
fdivs
jge
fldcw
lods
fcoms
popf
adc
pusha
xchg
pop
incb
dec
push
inc
fsubs
nop
int
sbb
push
push
and
and
test
ds
cmpl
sub
cmpsb
stos
fnstenv
in
shr
cmp
sbbb
inc
jbe
add
orl
xorl
inc
aam
xchg
xchg
loop
mov
pop
xchg
imul
cmc
incw
repz
dec
int
loop
dec
inc
sbb
les
push
fimuls
and
shrl
nop
ret
outsl
mov
insl
or
pop
ds
ss
fwait
int3
adc
fsts
mov
lahf
inc
not
out
or
mov
sbb
arpl
nop
xlat
lret
iret
in
pusha
into
add
aas
xlat
inc
adc
cltd
push
jnp
in
jl
mull
std
and
mov
rcl
jl
jmp
adc
cmpsb
out
add
xlat
mov
pop
idivl
mov
pusha
ss
jns
shl
aad
push
in
adc
sub
jmp
hlt
mov
hlt
mov
xchg
dec
pop
xchg
adc
and
dec
inc
push
les
jbe,pt
mov
sub
sbbl
out
test
add
cwtl
adc
xor
movsb
loope
mov
jb
cltd
test
push
xor
loope
out
das
and
xor
mov
push
lods
sub
mov
jle
rcrl
cmp
sbb
fiaddl
push
lret
mov
jae
pop
int
outsb
rcll
andb
lods
push
push
stc
adc
mov
repz
mov
aad
loop
shl
mov
dec
or
mov
inc
fnstcw
push
pop
xor
lea
mov
call
or
mov
adc
lods
js
popa
lea
loop
push
icebp
mov
repnz
neg
mov
add
std
scas
dec
sbb
loopne
ret
mov
and
ret
lods
mov
iret
leave
mov
sbb
fdivp
and
cld
xchg
and
and
mov
add
lret
leave
mov
mov
mov
loop
mov
orl
add
movsl
add
mov
jae
dec
mov
jl
icebp
cmp
gs
jecxz
push
es
enter
xlat
jno
push
adc
push
push
jmp
cs
push
inc
xor
pop
lahf
nop
inc
sub
lahf
push
sbb
fisubs
and
sbb
insb
arpl
ds
dec
fwait
cmpsb
in
mov
jp
xchg
and
loope
jmp
gs
mov
arpl
sti
inc
lret
flds
ljmp
lock
xor
std
popa
push
xorps
mov
stos
cmp
xchg
aad
mov
add
clc
dec
mov
or
fstps
xchg
inc
lret
lods
insl
testb
testb
pop
cmp
outsb
push
sbb
cwtl
mov
xchg
test
dec
cltd
dec
rcl
hlt
insl
sub
mov
mov
aas
xor
test
cwtl
sbb
fs
dec
sarb
dec
or
pop
repz
sub
mov
lret
cmp
mov
xchg
arpl
idivb
mov
nop
arpl
add
xchg
into
pop
aaa
sbb
pop
pop
rcrb
push
push
push
bound
pop
dec
xchg
fwait
inc
sub
and
mov
popl
mov
add
sbb
pop
stos
ror
xor
ss
int
mov
pop
leave
mov
push
mov
cmp
pusha
and
push
aaa
mov
bnd
mov
insl
mull
out
adc
imul
sub
push
cmp
dec
fldcw
imul
fwait
mov
jnp
imul
jmp
jle
sub
mulb
ror
mov
shll
xor
inc
pop
popf
pop
test
or
add
mov
aam
ds
idiv
sbb
or
test
cs
and
inc
sarb
cmp
lretw
jp
push
xchg
lret
leave
into
scas
jb
jecxz
xlat
adc
sbb
lods
iret
cmp
adc
mov
push
xor
incl
lea
jp
mov
shr
mov
jns
inc
dec
cmp
inc
sarl
enter
addl
subb
and
cmpb
cmp
push
lods
fdivrl
mov
outsb
sti
sub
cmp
mov
mov
adc
sub
jecxz
jo
repz
jbe
pusha
mov
lret
sub
jns
or
push
add
pop
pop
movl
ljmp
push
cltd
xchg
sub
and
js
and
push
sbb
cld
cmp
daa
test
stc
xlat
add
loope
mov
scas
test
fisubrs
mov
cmp
cmpsb
mov
and
outsl
jecxz
dec
adc
leave
aam
sub
xor
lahf
pop
inc
xorb
and
test
and
insl
rcr
cmp
stos
adc
inc
out
cmpsb
mov
sti
insb
mov
jne
mov
sbb
inc
lock
scas
add
out
inc
jl
aad
popa
jae
sbb
mov
scas
jle
or
adc
adc
mov
and
fwait
pusha
cs
test
sub
cmp
xchg
mov
xor
sbb
test
and
mul
jbe
dec
jno
or
lahf
xchg
mov
stos
mov
or
xchg
out
push
dec
jo
and
push
cmpl
scas
pop
out
dec
loopne
scas
jle
roll
das
sub
test
imulb
add
jle
je
imul
and
pop
add
pusha
dec
xchg
stos
xor
int3
pop
sub
in
pushf
mov
insb
sahf
push
xchg
push
fists
add
cmp
push
xor
xchg
and
and
pop
cmp
mov
xchg
mov
cmp
jmp
test
ja
or
pop
test
adc
jbe
dec
push
lds
or
iret
fcoml
sub
ret
in
out
inc
ret
cld
cmp
out
mov
call
loope
das
ss
pop
xor
pop
jl
bsr
push
popa
xchg
and
loope
xchg
addr16
not
mov
xchg
loopne
movsb
bound
icebp
pop
movsb
sub
cmp
movsl
popl
cmp
sub
sti
out
push
push
cltd
cs
push
push
xchg
or
icebp
test
lods
in
inc
mov
movl
loop
repz
fidivs
cmc
cld
pop
or
ret
fdivrs
jbe
and
jno
pmullw
shll
xchg
push
jmp
int3
fs
arpl
inc
outsb
fwait
and
mov
lahf
rcrl
out
pop
ret
repz
pop
pushf
pop
cmp
cmp
subb
shl
clc
enter
punpckhbw
xor
int
xchg
repz
test
inc
and
cmpsb
add
in
cmpsl
push
mov
adc
mov
rorb
and
push
pop
inc
push
mov
fs
lcall
jmp
test
ja
jae
mov
aam
test
sbb
stos
push
mov
add
mov
jnp
ret
rcr
aaa
inc
popa
sub
push
fnsave
push
xchg
jle
fcom
inc
sbb
ret
cmp
cmp
rcll
pop
or
jl
or
bnd
add
xor
xor
rclb
jns
adc
adc
mov
mov
addr16
pop
dec
aad
lret
mov
add
mov
daa
stc
xchg
jb
into
mov
mov
or
shrl
lods
ljmp
loop
aas
jnp
inc
mov
jmp
xchg
rcll
mov
mov
pop
mov
cmp
sti
fucomip
xchg
adc
es
fcom
push
xor
add
cwtl
arpl
nop
sbb
jbe
dec
mov
cmp
push
push
je
jbe
mov
aad
ret
into
jne
jmp
fwait
push
fdivl
jecxz
sub
test
out
gs
push
popf
in
ds
sbb
sbb
in
adcb
push
xor
bound
xchg
test
xchg
ss
leave
repnz
xchg
mov
ja
lds
jge
data16
rcrl
jp
jg
pop
jle
and
cmp
inc
and
adc
test
lea
insb
inc
sub
ja
sub
in
and
sub
lods
xor
xchg
lcall
jge
dec
shlb
jmp
pop
mov
add
outsb
test
jecxz
test
mov
cmp
scas
pushf
mov
rcrl
jbe
sub
lods
orl
and
sbb
add
sub
xchg
pop
test
sbb
xor
mov
aad
mov
inc
xchg
push
push
inc
jne
cmpsl
scas
outsb
dec
into
das
test
shrb
inc
jne
pop
jge
jo
jnp
pusha
testl
jns
pop
xor
pop
mov
imul
fiadds
or
shll
iret
dec
in
dec
or
push
loope
lods
mov
add
jl
cwtl
js
test
jo
fwait
test
mov
cmc
adc
cmp
inc
xchg
std
loop
push
shrb
dec
ret
in
mov
jnp
mov
jae
cmpsl
push
bswap
js
leave
jns
xchg
in
negl
shll
sub
int3
xor
mov
movsl
cwtl
xor
cmp
dec
clc
inc
and
out
pop
aam
sub
lds
jp
daa
dec
scas
jae
jg
dec
dec
out
mov
stos
aas
sub
test
scas
add
in
cmp
push
outsl
mov
daa
mov
mov
shrb
repnz
sti
add
push
adc
add
jbe
dec
sahf
cmpsb
mov
ljmp
sub
cli
movsb
lcall
ret
jae
add
add
rorb
adcb
jb
push
bound
push
mov
jp
jnp
sbb
rcrb
jo
pop
jmp
adc
dec
sub
mov
mov
es
rolb
aas
pop
ljmp
daa
pusha
imul
sbb
inc
popa
xchg
push
push
in
fcoml
lahf
imul
xor
cltd
insl
inc
repnz
and
test
adc
gs
repnz
and
jmp
mov
aam
lods
xchg
pop
push
clc
mov
lret
scas
fldcw
mov
andl
mov
mov
xchg
fmull
jp
nop
out
int
jo
lock
shrl
push
jno
sbb
and
lcall
mov
loop
jb
mov
mov
dec
cmp
push
insb
push
lahf
cmpsb
add
push
push
cmp
dec
and
ss
jg
mov
fwait
xorl
in
loopne
pushl
adc
mov
cmp
imul
fcmovnu
icebp
xchg
mov
movsl
mov
sub
rcr
mov
mov
addr16
push
or
xor
push
pop
xor
sti
push
xchg
xorl
push
das
and
dec
cs
xchg
adc
cs
sub
pop
pop
pop
or
ficoms
xlat
push
push
and
xchg
mov
mov
pop
lock
pop
mov
or
xor
cmp
mov
mov
gs
aam
lahf
mov
xchg
and
xlat
popl
cmc
lods
les
and
and
sbb
push
ja
and
ss
xchg
arpl
lret
cmp
aad
add
push
pop
xchg
lods
or
jae
mov
lret
cmc
or
mov
and
xor
filds
popf
sbb
mov
insb
arpl
jb
mov
test
xchg
sub
ret
fldt
adc
outsb
popf
test
or
loope
clc
fldenv
aas
insb
jbe
xchg
xchg
inc
jb
or
negl
cli
scas
push
pop
iret
mov
ss
adcb
inc
jnp
jmp
jns
mov
push
push
test
in
jno
rcrb
mov
imul
and
fmull
fs
push
popf
test
jmp
dec
dec
mov
int3
neg
push
sarl
pusha
sub
bound
inc
xchg
xchg
insl
addb
sbb
sti
dec
ljmp
jns
mov
adc
sbb
cli
dec
mov
xchg
mov
mov
movsb
xor
mov
cmp
sub
mov
jecxz
nop/reserved
xor
push
sahf
insb
aas
repnz
mov
jp
aas
test
lods
cmp
xorb
xor
lret
fcoml
pop
xor
mov
mov
xlat
adc
shl
or
push
push
and
pop
js
loop
jae
loope
sbb
jl
dec
test
lds
movsb
sahf
mov
or
int
mov
and
jo
clc
clc
movsl
push
roll
add
ja
xor
nop
jle
push
mov
add
mov
pop
dec
fnstsw
xchg
jmp
outsb
xchg
lds
xor
mov
js
xor
repnz
js
sbb
xchg
pop
pushf
aad
xchg
out
inc
enter
stos
add
scas
popl
mov
iret
mov
icebp
and
sub
xchg
mov
or
push
or
nop
xchg
mov
sub
in
mov
sub
jno
int
ja
repnz
flds
pop
sbb
pop
xor
xor
sub
cmp
mov
loopne
xchg
inc
dec
stos
out
mov
lods
sub
cld
dec
dec
adc
xchg
js
cltd
xlat
dec
inc
and
dec
negl
push
loop
xor
out
or
inc
iret
stos
xchg
sub
cwtl
fstpl
pop
cli
mov
pop
in
scas
rcl
cmpsl
lahf
mov
adc
pop
push
jp
ss
cli
pop
fwait
push
ret
xchg
push
and
loope
fisubrl
and
push
sub
fwait
xchg
jnp
fidivrl
shlb
push
cmp
movsb
imul
stos
sbbb
ljmp
call
xchg
or
fiaddl
adc
sub
das
sbb
mov
leave
mov
lds
add
inc
inc
std
scas
cld
sbb
mov
es
pop
loope
js
and
add
pop
dec
dec
mov
fnstsw
push
test
fwait
mov
movsb
arpl
out
add
push
pop
test
in
fbld
xchg
xchg
test
jecxz
inc
push
mov
or
dec
sub
fs
pop
cmc
fsts
push
pop
dec
ljmp
jl
adc
cwtl
mov
pop
icebp
sbb
inc
movsl
cmp
mov
push
mov
xchg
and
lea
sbb
sarl
lea
andl
repnz
mov
mov
inc
mov
dec
jl
dec
in
inc
add
test
push
jno
xor
cli
pop
cmp
outsb
out
mov
lods
add
ds
int3
insb
mov
cmp
cli
ror
movsl
cs
dec
mov
push
mov
mov
xlat
sub
cli
mov
xorl
fs
lcall
or
add
adc
adc
aam
sbb
sbb
fdivs
mov
iret
xchg
xchg
jle
insl
mov
dec
and
cli
jb
sbb
xlat
sub
pop
sub
or
dec
stos
sub
ds
jle
cwtl
testb
ficomps
mov
jnp
loope
movsb
movsl
fdivs
xlat
das
pushf
lcall
mov
mov
xor
mov
mov
out
aad
sbb
pop
dec
in
inc
and
mov
jl
inc
mov
int
loopne
cmpl
push
into
adc
adc
push
inc
addr16
push
pop
aad
cmpsl
sbb
hlt
nop
mov
dec
adc
xor
bound
xor
out
add
mov
mov
cltd
lea
mov
mov
nop
sahf
aas
push
enter
pop
sub
in
stos
mov
ss
xchg
jecxz
inc
or
cs
and
fadds
or
pop
xchg
xchg
mov
jbe
xchg
sti
imul
mov
or
push
pop
adc
cwtl
cld
sub
ret
pop
jp
pop
movsb
push
and
adc
mov
std
or
fildll
add
js
aam
inc
mov
lahf
cmpsl
mov
imul
fdiv
popf
loopne
or
and
mov
aas
movsb
jmp
dec
xorl
insl
and
push
push
push
clc
int
enter
ret
ljmp
outsl
xchg
jg
scas
negb
lds
test
in
adc
or
inc
pusha
insl
loopne
mov
lock
hlt
mov
sub
cs
mov
in
fcom
mov
les
test
andb
mov
in
in
iret
adc
in
in
imul
xchg
pop
xor
mov
cld
sti
sub
lock
stc
mov
pop
mov
sbb
mov
mov
adc
outsb
notb
adc
arpl
imul
or
addr16
push
xor
push
out
mov
dec
add
or
fisttps
jne
mov
mov
mov
jns
fsubrp
pop
pop
sbb
mov
jmp
inc
loope
mov
adc
fwait
dec
test
cmp
orb
and
mov
mov
clc
adc
xor
pop
add
jge
jecxz
ret
pop
xorl
xor
jp
aaa
das
and
mov
jg
aas
inc
cmp
xadd
jg
dec
lret
add
push
das
pusha
int
repz
pop
test
dec
jp
inc
insb
pop
mov
pop
xchg
inc
lock
push
ljmp
jbe
push
and
fistps
pop
pop
pop
mov
cmc
adc
jg
lds
mov
shll
jns
dec
add
out
pop
and
jg
inc
xor
out
outsl
testb
xlat
gs
jae
jg
or
mov
repnz
out
mov
mov
fidivrs
pop
add
or
xor
inc
cmpsb
mov
or
mov
out
les
fwait
jge
mov
pop
push
jne
aad
push
dec
xor
aam
push
hlt
lahf
aam
cmc
subb
inc
adc
adc
mov
lods
adc
dec
icebp
pop
mov
xchg
lret
add
mov
mov
and
xchg
xor
testb
testl
sub
jns
xchg
cmpsl
cmp
arpl
add
out
cmp
int3
xchg
push
mov
jb
adc
or
insb
lret
add
jae
jo
xchg
int3
ja
xor
sub
cmpb
mov
dec
shr
sub
out
icebp
or
add
adc
mov
enter
push
xor
es
repz
pusha
mov
pop
js
push
inc
xor
adc
ja
pusha
jecxz
adc
fistl
jg
pop
cltd
jp
sahf
lods
jnp
or
addl
pop
das
pop
icebp
popf
xor
mov
add
push
cmp
sarb
shll
mov
pop
mov
dec
addr16
cmp
and
fisttpl
mov
std
sub
insl
loope
sub
lods
scas
ss
lock
out
insb
xor
lcall
ja
testl
ret
sub
add
push
loop
fcmovu
mov
push
push
stos
pop
stos
mov
sbbl
and
nop
sbb
or
sub
adc
push
add
mov
lret
and
out
movl
add
sbb
cmp
loope
sub
or
cmpsb
cmpsl
and
mov
iret
daa
pop
andb
out
or
les
jne
int
in
decl
sub
ja
sub
inc
imul
and
out
jle
movsl
fisttpll
sub
xor
in
aad
or
push
cmp
pop
dec
push
pop
fnstcw
fs
out
xor
out
into
dec
nop
pop
mov
shll
xchg
pop
cli
loope
imul
pop
xchg
decb
rcrl
lods
cld
cmp
mov
mov
jo
test
sbb
push
add
in
sub
cmp
xchg
mov
sub
je
loop
push
mov
jbe
scas
shll
cs
orb
mov
cwtl
xchg
in
insb
cmovno
out
das
jecxz
sbb
ror
pop
outsl
pop
sub
aad
jge
xor
mov
jbe
dec
andb
sub
into
rclb
clc
ret
sahf
stos
cmp
xchg
aad
and
test
push
fcomps
stos
fiadds
mov
lahf
adc
lods
testb
xor
std
mov
mov
sbb
cmp
out
inc
cld
pop
std
lock
jl
sub
lea
xchg
adc
aaa
into
sbb
xchg
clc
mov
cmpb
xor
mov
je,pn
nop
adcb
jg
or
pop
mov
push
xchg
mov
dec
and
das
mov
lahf
mov
jg
imul
cltd
dec
jle
mov
add
or
mov
hlt
nop
loope,pn
inc
add
xor
add
mov
arpl
int3
mov
pop
push
insb
jecxz
fdivr
xchg
imul
sbb
int3
add
mov
cmpsl
push
push
push
mov
inc
dec
movsb
imul
sarl
push
test
in
flds
fsubs
fnstsw
cmp
cmp
push
and
movl
ficoml
into
xchg
mov
lock
lock
clc
jp
lcall
cmp
icebp
gs
inc
xchg
fidivs
rol
inc
xchg
or
add
aam
pop
das
inc
in
jle
jns
ret
or
inc
frstor
mov
or
xchg
adc
mov
pop
or
mov
sub
das
into
stos
pushf
push
pop
outsl
es
shll
in
mov
cmp
dec
mov
cmp
pop
mov
xchg
mov
mov
add
push
mov
in
imul
push
push
popa
xchg
lods
jmp
pusha
pop
push
cmp
dec
and
sti
dec
in
loopne
ret
mov
lods
xchg
pop
xor
test
imul
jge
adc
loope
cmp
outsl
and
jbe
scas
jo
cmpsl
es
addr16
loope
inc
push
dec
in
cltd
sbb
cli
push
add
imul
pop
ss
xchg
mov
sbb
jne
test
inc
pushf
push
and
push
lret
out
flds
sbb
or
or
pop
adc
in
inc
or
mov
xor
xchg
int3
popf
push
movsl
jns
flds
pop
cmc
popf
adc
std
cmp
icebp
add
or
or
jns
loope
daa
shr
cli
scas
in
pusha
push
js
cli
stos
aam
je
mov
cmpsl
push
gs
adc
mov
pop
sub
inc
clc
jb
xchg
hlt
sub
push
jg
push
push
fdivrl
lea
inc
mov
mov
insl
mov
xchg
mov
inc
dec
repnz
inc
stos
enter
dec
sub
je
lret
aam
pop
scas
jae
sub
push
aaa
jae
aad
scas
fdivrs
jo
dec
mov
jb
out
jns
aaa
iret
mov
pushl
mov
ret
cwtl
mov
fsubrs
icebp
push
adc
jae
dec
mov
jbe
sbb
and
aas
jnp
or
popf
cld
insb
inc
out
sub
xchg
ss
test
cltd
cli
test
jbe
mov
mov
jno
xor
ficoms
or
mov
test
loop
hlt
fidivs
cmpsl
lahf
or
jmp
xor
adc
add
les
fdivs
gs
daa
shrl
inc
add
in
cld
or
jns
or
sahf
lahf
bound
sub
xchg
ret
cmpsl
add
xchg
loopne
sbb
cwtl
push
pop
les
push
jecxz
pop
sub
and
test
xlat
sub
or
sbb
dec
fwait
mov
addr16
mov
pop
mov
sti
lret
push
pop
jno
jne
das
sbb
mov
fwait
xor
out
push
stos
inc
lds
mov
dec
jbe
lods
movsl
popf
jge
scas
cwtl
jne
ds
adc
pop
lods
loope
out
pand
pop
mov
lret
jno
mov
aam
aam
push
lret
repz
rcr
loopne
push
pop
sub
scas
jb
pushf
jp
xor
cmp
leave
pushf
push
fidivrs
cmpsb
mov
pop
enter
ret
sub
push
jge
cmpsb
cs
pop
shl
jl
subl
aaa
or
mov
pop
xor
fsubrs
stos
bound
pop
cltd
leave
imul
mov
frstor
fistpl
mov
mov
sbb
dec
lods
mov
mov
fsub
test
lret
in
fidivrl
iret
movsl
jmp
fldenv
xchg
mov
rclb
jl
lds
clc
dec
cli
lret
pop
andb
cmp
call
jl
xchg
mov
arpl
scas
pop
sbbb
xchg
cmp
dec
icebp
xchg
mov
mov
ss
rorl
inc
mov
push
jns
jle
adc
fisubl
push
and
in
jecxz
es
xor
adc
lods
loopne
pop
imul
xchg
sub
sub
jp
sbb
push
dec
call
or
mov
outsb
adc
shrl
stos
outsb
es
in
mov
add
mov
movsb
mov
pusha
pop
shll
shll
push
cmpsl
lret
pop
orb
jle
push
fcmovbe
push
in
push
sub
mov
mov
aas
push
rclb
test
and
add
stc
xchg
mov
fdivl
pop
int3
dec
divb
aaa
negb
repz
pop
out
mov
mov
test
or
test
adc
mov
sbb
scas
dec
or
mov
cmp
dec
sbb
xchg
clc
cmpsl
cmp
in
jl
jmp
push
mov
aas
dec
pop
fwait
push
add
cs
pop
pop
aas
popf
mov
test
sarl
jnp
out
cld
daa
imul
mov
pop
xor
into
lcall
sub
sub
stc
aad
mov
fidivs
rcrw
or
in
daa
ds
in
loopne
mov
out
aam
xchg
and
and
out
mov
subl
xchg
bound
ja
mov
sbb
sub
in
daa
adc
jno
int3
popa
sbb
jge
cmp
sub
xor
sub
fdivrs
mov
mov
sbb
mov
lock
xchg
shlb
lahf
icebp
subb
pushf
dec
std
leave
and
icebp
iret
mov
fsubl
aaa
insl
xchg
test
lret
stos
jecxz
mov
hlt
jbe
cmp
pop
jle
xchg
adc
ljmp
fs
cmp
mov
scas
testb
lahf
sbb
push
enter
xchg
or
adc
adc
sub
or
or
inc
test
pop
insl
sub
std
clc
mov
imul
jo
notb
mov
mov
stc
repz
mov
call
in
or
mov
push
mov
imul
vpsrld
xchg
es
mov
push
sub
sbb
lods
xor
frndint
daa
pop
call
movsb
push
imul
or
jp
pop
sbb
stc
pop
adc
lods
arpl
repnz
sub
ds
inc
testb
pusha
push
sbb
test
or
out
cmp
add
xchg
mov
inc
mov
mov
mov
inc
add
mov
adc
mov
cmpsl
movsb
int3
cmc
cmc
decl
dec
mov
ss
outsb
out
or
loope
std
popa
leave
dec
pop
pop
sub
pop
ret
test
int
outsl
lods
sbb
lret
pusha
push
sar
inc
push
push
in
jbe
mov
jmp
adc
repnz
pop
sub
xlat
test
cltd
push
lcall
leave
or
mov
xchg
mov
mov
xchg
imul
inc
lods
aaa
out
mov
dec
or
enter
push
pop
add
xchg
ret
in
add
jo
lods
loope
and
out
mov
data16
pop
add
sub
pop
test
movsb
mov
or
jo
rolb
sbb
outsl
out
inc
mov
das
adc
cmp
scas
hlt
pop
jge
and
jmp
adc
icebp
or
dec
dec
test
loopne
aam
movsl
inc
jo
xorl
outsb
jg
into
nop
mov
jecxz
fwait
fwait
aam
lret
nop
adc
pushf
sbb
xor
add
bound
add
enter
outsl
cmp
pusha
xor
sbb
outsb
mov
cmp
adc
fistps
inc
lods
aaa
mov
faddl
lret
adc
daa
out
fcmovb
jmp
lds
cmc
jno
pop
cmpsl
sub
daa
push
push
jge
inc
push
rep
into
sbb
mov
loop
inc
int
loop
mov
fidivrs
cltd
mov
in
push
inc
cmp
sbb
sub
push
orl
fidivrl
jg
sarl
and
push
push
xor
arpl
xor
mov
mov
lahf
push
xor
jne
int
fistl
gs
cmp
inc
pop
enter
aaa
dec
lds
sub
push
push
in
jbe
cmp
jmp
daa
jmp
scas
imul
dec
jl
fisubrs
clc
push
xchg
nop
lock
mov
into
incb
lcall
cld
scas
mov
sbb
sub
aas
xor
in
ret
add
fistpl
push
mov
sbb
popa
add
std
jnp
in
shll
mov
leave
popa
ss
sti
out
xor
push
sub
xchg
cltd
cwtl
push
push
push
ljmp
scas
std
inc
adc
shr
int3
jne
cmp
iret
or
dec
adc
scas
fcompl
push
ret
lea
ret
pop
pushf
sub
nop
fmuls
cmp
insb
sub
popa
mov
hlt
jl
cmc
ret
sahf
lds
and
sbb
mov
shrb
pop
adc
push
mov
jnp
cld
mov
xchg
adc
adc
test
loop
test
mov
push
sbb
int
xchg
pushf
bound
and
push
cmp
or
pop
call
loop
leave
jecxz
pop
inc
mov
adc
jmp
jno
mov
dec
out
mov
jno
cmp
and
adc
xchg
imul
rcrl
push
test
or
mov
aas
out
cmp
sbb
mov
inc
test
enter
and
stc
sbb
mov
stos
inc
sub
add
fsubrs
stos
add
jge
cld
scas
jmp
dec
fnstsw
aad
cltd
pop
cmp
cwtl
data16
iret
lret
sub
sti
sbb
in
push
je
add
mov
lock
sahf
sbb
cmp
lret
pop
push
pushf
dec
mov
imul
add
movsb
dec
sub
fmull
xor
movsb
cs
xchg
sahf
xchg
mull
mov
jge
fcoms
mov
into
jp
jge
pop
cmp
int3
xlat
inc
lea
outsb
xor
stos
mov
jno
fisubl
sub
das
cwtl
dec
pop
mov
mov
pop
cli
cld
jge
or
mov
push
popf
fsubr
push
out
rorl
pop
pop
or
sub
jmp
out
shrl
and
cli
stos
mov
popa
aas
xchg
cmp
notl
stos
in
insl
inc
jbe
nop
jbe
add
int3
cmpsb
mov
arpl
mov
stos
aad
mov
mov
mov
sub
add
fs
mov
out
subl
add
push
or
mov
subb
add
mov
xrelease
icebp
call
bound
and
jne
mov
inc
incl
mov
mull
push
insb
insl
dec
fwait
pop
loop
mov
push
inc
inc
fidivl
outsb
lret
sub
xchg
cmc
pop
sbb
out
jns
or
cmp
mov
test
jle
sar
mov
sbb
add
xchg
loope
loopne
outsl
lret
cli
aam
dec
addr16
das
sbb
cs
addr16
cmc
fisubrl
push
pop
cmc
insb
lock
hlt
out
xchg
add
pushf
lods
mov
and
sbb
sbb
and
sub
adc
jg
mov
inc
push
jp
int3
pop
mov
test
repnz
ss
cmp
jl
leave
add
cli
xor
xor
or
in
or
cltd
or
cmc
mov
add
clc
adc
lret
push
xchg
push
jle
icebp
loopne
cltd
xchg
clc
pop
push
mov
mov
stos
jp
or
cmp
sbb
pop
cs
jge
push
jl
dec
or
adc
adc
jo
mov
and
ljmp
ja
dec
mov
adc
mov
lahf
stc
insl
test
sub
pop
fildll
das
popf
out
jae
out
orl
cmc
cmp
repnz
cltd
sbb
dec
cs
mov
les
cltd
adc
repz
popl
dec
dec
mov
and
pop
pop
push
cmp
jle
decb
les
jae
sbb
divl
push
pop
movsb
cmp
xchg
push
stos
loop
pop
leave
adc
xor
mov
ds
icebp
or
cwtl
hlt
push
adc
mov
mov
aam
pop
in
js
mov
push
lcall
addr16
insb
adc
xchg
std
loopne
out
add
int3
or
dec
hlt
fistpll
push
pop
les
mov
repz
add
or
pop
and
add
mov
xrelease
add
push
loop
xchg
in
cmp
outsl
pop
fadd
adc
pop
mov
int3
xlat
jae
fidivrl
ja
imul
punpckldq
and
leave
rorl
mov
add
frstor
sub
xchg
pop
insl
xchg
or
iret
loope
lds
rcl
inc
push
sbb
inc
push
mov
adc
xchg
lcall
sarl
inc
sbb
das
jnp
mov
ror
adc
hlt
cmp
out
jle
aaa
xchg
mov
pop
sbb
adc
or
cltd
mov
and
mov
rcrb
loopne
popf
jmp
data16
mov
mov
jnp
rcll
pusha
addr16
mov
shrl
or
sbbl
pop
adc
inc
pop
pop
xchg
mov
cmp
arpl
inc
inc
sti
xorb
hlt
dec
mov
and
mov
pop
xor
sub
adc
push
and
dec
mov
fdivrp
aad
gs
inc
loope
je
sub
sahf
ret
fsub
lock
addr16
movsl
mov
outsb
pop
out
mov
and
jnp
push
push
xchg
pop
std
xlat
stos
adc
mov
insl
ljmp
inc
sbb
jp
andb
fists
mov
xlat
or
add
push
push
mov
test
inc
insb
jmp
and
push
inc
push
rclb
fisttpl
int
pop
dec
ficomps
outsb
jne
pop
push
shrl
add
out
xor
and
push
and
or
mov
fistpl
sub
mov
pop
sbb
ret
adc
aam
out
add
and
addr16
test
gs
leave
mov
inc
ret
push
fisubrs
xchg
jge
das
adc
mov
popa
sbbb
jp
pop
dec
xor
sbb
daa
jbe
pop
inc
mov
jb
or
push
faddl
insb
push
test
cwtl
in
inc
push
bound
xchg
icebp
push
jbe
iret
call
adcb
ds
jb
push
loopne
mov
pop
jp
icebp
dec
and
pop
xor
jb
mov
pushf
icebp
nop
pop
out
add
cmp
mov
daa
xor
iret
lds
lret
cmp
inc
insb
and
repnz
movsb
cmp
dec
stos
mov
in
call
fisttpl
cmp
jno
and
aas
pop
pop
pop
mov
dec
adcl
out
pop
sub
pop
xor
xor
adc
cmp
cmpsb
xchg
sub
addb
sub
test
mov
pop
mov
and
sub
adc
scas
xor
ja
out
push
cli
setne
xchg
ljmp
andl
jb
mov
dec
cmp
in
ret
popa
sbb
insb
cmpsb
mov
mov
inc
or
ret
mov
push
std
repnz
pop
cwtl
arpl
xchg
les
mov
push
sub
cmpsb
or
mov
mov
scas
jmp
cmc
lock
ja
mov
dec
shlb
movsb
dec
mov
add
xchg
sarl
repz
lahf
notb
gs
cmpsb
mov
loopne
lahf
and
lahf
pop
xor
loop
data16
and
or
jo
adc
jns
push
jp
rclb
xchg
pop
ror
outsl
push
icebp
adc
jp
ret
sbb
aas
pop
cmp
add
shlb
gs
je
mov
pop
or
mov
push
xor
sbb
push
sbb
cmp
pop
ds
sahf
popf
sbb
pop
aam
mov
fs
adc
call
test
push
sub
enter
fs
nop
pop
stos
adc
sar
nop
lods
pop
test
gs
adc
cmp
cmp
imul
inc
lock
pop
dec
cmp
cmp
jbe
outsl
xchg
pop
scas
mov
mov
push
sbb
mov
sub
push
loop
cmp
shll
pop
xor
and
pop
out
ss
push
in
push
test
and
xchg
clc
insb
lahf
jecxz
sbb
jnp
in
jb
xor
std
mov
testl
adc
out
movl
xchg
cmpsb
mov
xchg
mov
int
mov
shr
jno
je
daa
lcall
adc
popf
push
lock
cmp
ss
xchg
shll
add
push
cwtl
push
sbbl
jl
in
push
sub
inc
pop
imul
xchg
je
iret
in
ret
mov
int
ljmp
dec
inc
pushf
cltd
fcmovu
or
mov
add
iret
cmpsb
dec
dec
add
repz
pop
mov
adc
lcall
sub
ficomps
push
popa
es
mov
ret
popf
push
jl
rcll
jle
call
jo
mov
sahf
push
lcall
fcoml
mov
rclb
xlat
out
lahf
call
jo
add
dec
test
xlat
dec
cltd
int
xor
imul
js
fcomps
iret
fsubp
in
cs
mov
xchg
xchg
jl
jne
rclb
shrl
mov
cld
in
clc
add
andl
cmp
and
xchg
and
aam
add
or
dec
add
dec
movsb
adc
xchg
pushf
out
sub
fists
out
xor
and
aaa
fwait
repnz
ljmp
in
enter
pop
push
or
xlat
les
lds
adc
shrl
xchg
movsb
inc
popf
jg
mov
inc
hlt
cmp
push
in
gs
xchg
call
lahf
push
shl
scas
add
std
popf
sub
mov
clc
pshufw
shll
dec
and
cmpsl
das
enter
hlt
scas
leave
mov
dec
cwtl
mov
jae
xor
mov
aas
adc
and
filds
mov
das
push
aaa
or
xor
call
pop
adc
push
mov
gs
sub
or
xor
inc
icebp
fwait
jb
imulb
mov
out
dec
lcall
push
sbb
cmpl
and
int
data16
rorl
dec
dec
test
jp
mov
push
cmpsl
clc
or
xchg
stc
bound
xchg
cld
nop
testl
cmpsb
les
inc
xor
adc
add
jnp,pn
dec
scas
adcb
sbb
loop
loopne
sahf
adc
or
loope
add
push
push
cltd
and
fwait
push
inc
push
shll
inc
dec
icebp
xor
sbb
push
int
mov
mov
std
xchg
cltd
inc
inc
push
mov
sbb
adc
and
loop
jecxz
push
lods
into
ljmp
dec
sahf
mov
jo
mov
mov
in
jnp
jb
std
loopne
push
xlat
fs
sub
mov
jbe
jge
inc
rorb
mov
pop
or
dec
lds
icebp
lods
nop
sub
stos
xor
mov
dec
jmp
ficoms
adc
pop
lahf
into
vhaddps
push
gs
or
ljmp
jne
jge
push
negb
ret
lds
xlat
sub
rolb
and
dec
int
xchg
mov
push
xor
adc
cmp
nop
mov
insl
mov
outsb
js
std
cli
jge
andl
std
pop
push
out
xchg
out
dec
add
and
xchg
les
cmp
rep
pusha
sub
and
rcrb
enter
mov
xchg
test
xor
ds
test
loope
out
test
in
scas
sar
mov
pop
xor
add
in
lods
mov
notl
add
ja
icebp
adc
pop
sub
push
and
hlt
xchg
wrmsr
repnz
or
ret
jns
add
call
cmp
hlt
xchg
test
iret
dec
xor
loopne
clc
push
or
xor
xchg
push
xchg
arpl
mov
shlb
adc
cmp
icebp
mov
enter
testl
sbbl
xor
cmp
push
aad
sub
jp
les
or
jnp
out
repz
push
mov
xchg
xchg
fmulp
aaa
xor
daa
subb
gs
stos
inc
das
pop
push
pop
inc
push
out
cli
cld
or
jp
popf
adc
push
dec
call
sarl
cmp
sub
dec
aaa
leave
ret
and
test
jmp
clc
dec
call
or
and
int
sub
es
xor
les
mov
fcmovne
loopne
scas
data16
adc
aas
jb
movsb
add
lcall
and
in
pusha
mov
jle
leave
enter
std
ss
shl
jl
fwait
sub
jmp
adc
and
lods
add
jns
add
mov
pop
and
shll
dec
sti
xchg
cmc
out
fbstp
push
mov
xor
or
in
in
iret
fwait
mov
out
int
decb
hlt
imul
cmp
repz
in
mov
xor
xor
jns
pop
dec
aas
ljmp
dec
sbb
insb
push
paddd
inc
cmp
or
jge
xor
inc
aam
xor
xchg
mov
arpl
inc
js
xchg
loope
notl
loope
adc
cmp
adc
bound
inc
xchg
stos
out
push
or
cmp
sti
mov
mov
and
iret
sbb
mov
pop
aad
add
adcb
sarb
jb
data16
insl
sub
cmpsl
push
sub
inc
inc
xchg
shrl
out
inc
clc
jecxz
test
pop
and
out
dec
fnstcw
xor
jae
jbe,pn
pop
push
fs
stos
ret
lret
fisttps
jne
aaa
sbb
cmp
iret
add
ficomps
imul
jb
adc
fsubs
es
in
xor
lods
pop
add
mov
in
mov
adc
addl
gs
and
xor
arpl
cmpsl
outsb
add
ja
into
fs
leave
cs
jo
mov
mov
sub
inc
push
out
xor
lahf
mov
dec
sbb
sbb
sub
dec
subb
aaa
pop
dec
fdivrs
cmp
mov
punpckldq
and
push
push
call
xchg
fs
jb
scas
ja
sbb
pop
xchg
lcall
movsb
decb
mov
pop
xor
popa
sti
mov
push
scas
jae
add
mov
dec
adc
nop
mov
pop
ljmp
and
mov
xor
pop
in
push
xlat
mov
fmulp
sbb
add
js
fidivrs
insl
adc
pop
out
push
push
inc
fbstp
dec
jmp
mov
mov
adcb
sbb
bound
mov
popf
cld
sub
inc
jnp
cmp
mov
adc
mov
repnz
sbb
jbe
xor
jmp
cmp
popa
jns
cwtl
mov
mov
push
fstp
scas
xchg
hlt
dec
inc
xor
ja
lcall
jne
pop
cmp
pop
mov
sub
cmpsl
mov
or
test
nop
aaa
sub
pop
xor
or
iret
leave
jge
mov
ret
xchg
fcmovnbe
fwait
pop
sub
pop
adc
jbe
push
movsb
sub
call
mov
rcrl
mov
and
or
popa
addl
jo
rcll
inc
test
xchg
cmpsl
dec
push
lcall
iret
push
ja
jae
out
cmp
and
pop
rcrl
mov
ret
in
fsubr
fcom
push
loope
jbe
loope
mov
aaa
jmp
inc
dec
and
pop
out
sub
lea
jne
fcoml
cmp
sub
jmp
test
cmp
sub
fisttpll
adc
fld
in
loope
cmpsb
adc
cli
pop
push
cmp
cwtl
sti
mov
sti
ss
inc
in
xchg
out
in
xor
xchg
cmp
sbb
gs
into
sub
sahf
xor
test
popf
mov
andnps
adc
fisubl
push
bound
add
mov
and
movsb
pop
andl
clc
and
enter
vmovdqu
fimuls
orb
shl
and
xor
dec
repz
sub
inc
xchg
gs
int3
xor
jnp
or
jl
or
mov
das
lahf
jns
movl
addr16
scas
fs
xlat
hlt
xor
xchg
inc
push
mov
sahf
sub
sbb
dec
popa
jg
enter
mov
sbb
inc
aam
xchg
pop
addl
into
xchg
pop
fcomip
jae
iret
sub
out
jno
sbbb
hlt
jle
cmp
jo
mov
cld
int
fwait
xor
xchg
enter
pop
jmp
testb
dec
ja
adc
sbb
pop
jbe
xchg
icebp
push
and
stos
sbbb
xchg
pop
pop
in
insl
lcall
pop
jp
xchg
inc
mov
movlps
mov
jb
ds
add
xchg
mov
push
xchg
dec
ficomps
arpl
popf
ret
dec
sbb
sub
sub
mov
int3
dec
arpl
arpl
mov
mov
sti
xor
cs
or
mov
xchg
cwtl
add
lret
sub
sbb
xchg
icebp
fs
jo
cmp
xlat
mov
and
xchg
dec
fdivrs
mov
mov
xor
or
test
push
mov
xchg
sub
stos
pop
daa
rclb
int
les
cmp
mov
sub
in
push
cmpl
fcomps
test
leave
add
aad
into
fwait
mov
fimull
or
adc
mov
pop
popa
pop
inc
jmp
mov
mov
sbb
jle
and
rcrb
inc
clc
jp
fisttpl
xor
fs
adc
pop
jns
imul
xlat
imul
lret
fsub
dec
int
jb
test
cmpsb
xchg
aaa
mov
mov
fcoml
jg
imul
push
jnp
pop
adc
or
or
adc
pop
in
repz
xchg
insl
js
repnz
mov
pop
scas
sub
test
movsb
rcl
fstpt
mov
stos
push
cmpsl
mov
repz
mov
cwtl
xor
xchg
or
into
sub
cmp
cmp
sub
add
mov
sub
adc
adc
jmp
pop
cmpsb
sbb
rclb
xchg
push
mov
arpl
pop
push
fs
imul
out
add
imul
ljmp
lock
cmp
or
cmp
lcall
mov
ja
mov
icebp
pop
adc
scas
test
sahf
jb
cmp
fiadds
test
push
sbb
aas
movsl
prefetch
or
out
adc
dec
jg
adc
mov
push
mov
roll
inc
push
jle
cmpsl
dec
arpl
sahf
or
and
mov
push
xchg
adc
xor
dec
imul
inc
outsb
pop
lods
and
push
sbb
into
pop
mov
add
out
mov
and
nop
enter
pop
cld
dec
lock
xchg
ja
push
in
push
shl
data16
pop
or
cmp
add
je
pop
cmpsb
push
ja
cmpsl
inc
jne
mov
jge
pop
add
stc
mov
insl
stos
shl
fs
jb
jle
mov
cmp
ja
xchg
pusha
sbb
test
dec
cmpsl
fldl
mov
dec
lret
xor
push
push
add
mov
add
pop
iret
imul
imul
int
xchg
push
xchg
and
xchg
dec
mov
outsl
mov
sub
into
scas
pop
fdivl
push
idivb
imul
test
ds
std
add
ljmp
sub
adc
loope
mov
push
outsl
mov
fs
je
xchg
rorb
mull
in
xlat
lods
cmpb
push
pop
xor
dec
loop
ss
mov
fdiv
gs
pushf
jbe
xor
or
push
cmpsl
xchg
jmp
mov
or
push
jbe
dec
adc
push
lds
mov
outsb
clc
jge
enter
leave
sbb
dec
jmp
nop
xchg
jae,pn
jge
fiadds
mov
out
loope
pop
jo
sub
adc
sub
mov
xor
sbb
add
loope
mov
cmp
inc
clc
jbe
movsl
fiaddl
fmul
iret
popf
imul
orl
push
test
in
mov
dec
out
add
xchg
rorb
in
mov
lret
aad
xchg
shrb
rclb
and
popf
xchg
and
inc
pushf
loop
xchg
or
adc
out
or
call
out
andl
xchg
cmp
mov
sbb
subb
andb
cli
mov
jae
jmp
pop
movsl
cmp
adc
nop
cmp
mov
xchg
cmp
repnz
lahf
jg
sbb
adc
shlb
adcl
stos
rol
test
inc
test
jmp
pop
test
ss
rclb
add
jns
testl
sarl
jge
movsb
xlat
outsl
cld
lods
lock
pop
or
jle
pop
sbb
insb
mov
aaa
cwtl
imul
out
mov
mov
sub
push
int
push
lret
xchg
jno
iretw
jns
jl
int
sub
out
ljmp
dec
jae
fstpt
xor
mov
push
or
out
pop
push
xchg
test
movsb
out
jmp
and
shll
test
inc
nop
into
stos
adc
dec
mov
mov
dec
push
push
or
out
test
xchg
cmpb
xor
dec
adc
xor
dec
sub
rorl
jmp
vmovups
inc
sbb
sub
pop
jbe
popf
inc
bound
adc
lret
incl
jae
mov
or
push
or
call
and
fwait
cltd
repnz
push
loop
lods
fstps
dec
scas
and
xor
cmpsb
pop
imul
stos
out
lret
and
jno
repnz
testl
mov
insl
subb
inc
imul
inc
pop
inc
hlt
lahf
sahf
les
sbb
call
cli
ret
mov
repnz
push
loope
or
popf
and
cli
mov
push
pushf
mov
lock
xchg
mov
dec
imul
std
and
adc
sbb
dec
les
clc
adc
jg
iret
int3
mov
orb
mov
fs
jmp
adc
les
aaa
add
xchg
lahf
lods
sbb
cwtl
js
inc
sbb
pop
push
aas
push
mov
dec
jo
cmp
inc
push
testl
cmp
push
push
int3
shll
push
js
xchg
fdiv
jecxz
inc
int3
mov
vmovddup
jo
fisubs
xchg
rolb
testb
inc
cmp
loope
mov
fcmovnbe
push
int3
pop
xor
les
pop
clc
enter
adcb
cmp
test
jno
sbb
icebp
adc
fstp
dec
pop
call
out
jae
inc
add
cmp
push
popf
push
std
std
ljmp
sbb
leave
pop
and
push
inc
inc
xor
imul
dec
mov
or
int
adc
mov
or
mov
je
ds
repnz
add
push
add
pop
adc
in
sbb
test
stos
iret
mov
loopne
loope
outsb
adc
int3
loop
mov
outsl
push
cmp
pop
xor
repz
xorl
cmp
mov
cli
push
push
cmpl
out
loope
sarl
and
push
push
test
adc
pushf
mov
test
sub
and
push
push
mov
dec
cld
int
xchg
push
mov
jae
cmpsb
aaa
test
fsubl
aad
cmpsl
push
push
jmp
push
lahf
mov
pop
inc
adc
and
cwtl
pop
adc
add
jo
push
outsl
sbb
cltd
inc
sub
and
insb
jne
pusha
jecxz
sbb
rcl
hlt
xor
xor
sahf
addr16
aas
xor
pop
lret
shrb
xchg
sbb
pop
mov
notb
add
xor
push
cmp
adc
mov
mov
mov
add
push
dec
and
leave
dec
loopne
push
mov
adc
mov
sti
add
fisubl
pushf
and
loope
int
mov
sub
xor
inc
scas
das
inc
repnz
sub
shrb
icebp
mov
pop
inc
pop
test
jl
cmp
push
jae
in
inc
and
cmpsl
push
rcrb
jp
xchg
inc
mov
jo
in
ret
jge
call
inc
cmp
jmp
mov
sub
mov
xchg
xchg
enter
jb
mov
push
dec
inc
cmp
adc
sbb
cmp
mov
test
pop
mov
divl
and
xchg
sub
xchg
adc
pop
lcall
outsl
mov
push
mov
jne
shl
jo
call
dec
add
scas
xchg
mov
addl
cmp
loope
push
push
nop
cmp
movsb
xor
cmp
xor
cs
das
nop
xchg
lret
xchg
xor
adc
sub
lahf
cs
sub
mov
insl
mov
fwait
add
jg
inc
adc
xchg
lods
into
fstpt
jbe
xchg
cmpb
test
inc
or
adcl
push
ja
loope
mov
sti
sub
cld
je
fs
cld
popl
in
sbb
adc
add
push
imul
lret
mov
fiaddl
pop
addr16
adc
mov
sbb
aam
mov
jo
lsl
xor
ds
dec
frstor
enter
cmpsb
adc
xchg
into
jno
jl
jnp
fdivr
push
jmp
leave
pop
pop
jmp
sbb
insb
loopne
lea
cmp
call
adc
push
push
std
sbb
and
inc
rorb
pop
push
mov
push
xchg
in
and
mov
popf
mov
outsb
push
add
sub
push
xchg
in
sahf
in
dec
or
cmp
nop
test
ljmp
pop
inc
into
pop
out
bound
sbb
push
cmp
fisubrs
xchg
cli
es
imul
mov
aam
js
callw
fwait
andb
aaa
in
cmc
adc
push
add
mov
push
lahf
push
mov
aad
test
jo
es
ljmp
dec
dec
in
lea
mov
arpl
out
lods
sbb
fs
sub
jecxz
sub
sub
loope
ret
push
call
scas
gs
mov
ss
inc
sbb
mov
lods
jle
inc
mov
xchg
les
or
push
pop
jo
arpl
out
negb
sbb
cmpsb
push
mov
inc
mov
inc
adc
shlb
int
jno
fcoml
push
sub
xchg
in
insb
inc
pushf
bound
and
fidivrs
lods
imul
es
add
lds
adc
idiv
mov
lock
test
push
sti
sti
push
jae
mov
jmp
add
lahf
lock
mov
jmp
inc
inc
fisubrs
sbb
lret
mov
stos
in
xorl
inc
xchg
int
popa
arpl
and
cld
std
push
repz
add
lret
les
rorl
inc
ja
adc
jne
rcrb
repnz
inc
pop
cs
stc
adc
icebp
aaa
and
push
cltd
xchg
test
rcr
or
les
jne
add
xchg
adc
out
aam
rol
or
cmp
addr16
ret
test
test
pop
xchg
lds
pop
add
add
cmp
jp
fdivrs
js
xor
or
push
jbe
mov
enter
jecxz
out
cmp
cmp
inc
jno
mov
call
inc
pop
mov
xchg
out
in
sti
pop
xor
adc
cmp
mov
scas
jg
faddl
add
daa
int3
pushf
dec
inc
sti
or
lcall
mov
pop
and
fiaddl
inc
mov
scas
arpl
sub
mov
in
ret
push
push
dec
mov
cltd
in
aam
in
or
xchg
fsts
cwtl
xor
pushf
ret
iret
test
pop
jbe
dec
enter
adc
sub
jle
pop
sub
or
out
mov
mov
jbe
mov
xor
sub
outsb
mov
jnp
mov
sub
jb
clc
or
mov
inc
jge
sub
inc
jbe
pop
loopne
mov
mov
sbb
aaa
fildl
mov
out
jmp
mov
jb
mov
stos
pop
xor
mov
cmp
pop
das
mov
enter
xor
mov
dec
rolb
xor
ja
push
pop
or
add
test
jno
sbb
sahf
xor
imul
roll
xchg
add
push
adc
jle
mov
jbe
or
out
mov
xor
mov
sbb
notb
fucomip
lds
popa
rolb
test
ljmp
cmpsl
cmp
jge
out
repz
or
pop
lret
dec
push
mov
jne
pop
push
fcomp
and
push
aad
enter
push
dec
jb
das
or
scas
negl
ss
mov
daa
sbb
and
sub
add
out
test
inc
fists
push
mov
add
sbbl
in
mov
dec
out
test
cmpl
ret
or
lea
jns
add
fwait
pop
and
adc
aam
in
cld
stc
mov
push
mov
mov
hlt
repnz
fwait
or
sbb
jge
daa
dec
bound
mov
pop
xchg
jg
push
cmp
pop
mov
stos
add
rcrb
data16
cmp
pushf
lahf
lea
std
leavew
push
xor
rcrl
test
stos
cmp
mov
dec
pop
xchg
push
xor
adc
and
and
ret
daa
pop
add
cli
lret
out
testb
int3
pop
jl
or
jp
movsb
inc
jae
jp
shrb
pop
cld
das
sbb
pop
loopne
sbb
mov
inc
add
out
inc
lret
lcall
xor
jg
adc
jo
shrl
push
xlat
pop
push
lret
mov
push
das
mov
xchg
cltd
pop
decb
or
pop
test
dec
cmp
mov
loope
scas
inc
shrl
inc
push
bound
js
sahf
pop
cmp
add
lea
jnp
cmc
leave
aaa
jo
push
mov
pop
dec
mov
mov
and
loopne
or
sbb
popf
les
cmp
push
out
push
sub
pop
cwtl
fsubrs
push
add
lods
mov
mov
out
inc
or
sbb
std
mov
pop
std
pop
out
xor
xchg
pop
dec
cli
gs
roll
into
sub
or
es
sbb
outsl
popa
nop
push
inc
scas
pop
mov
movsl
dec
mov
ficoms
decl
or
loopne
jge
adc
mov
mov
imul
popa
cmc
push
data16
mov
add
dec
scas
pop
add
fwait
dec
out
loopne
test
xor
bound
jno
int3
dec
invd
fsub
mov
cli
ds
xlat
imul
addr16
pop
cmp
out
push
ss
int3
inc
or
xchg
fldenv
xchg
push
inc
lcall
push
insl
mov
add
jnp
hlt
cmp
push
icebp
test
pop
cmc
movsl
adc
outsb
mov
in
adc
fidivl
aas
jo
movsb
push
sub
xor
adc
out
sti
adc
jo
fidivrs
pop
push
aas
daa
cmp
xor
xor
ficompl
fucomip
dec
sub
in
push
cltd
cmp
data16
mov
push
xchg
scas
mov
ds
push
loope
mov
jle
out
lcall
mov
ja
insl
int
mov
xchg
mov
loope
cmpsb
and
inc
inc
lock
jg
addr16
imul
jmp
mov
xchg
das
jnp
pop
clc
nop
out
shlb
clc
jae
sub
cmpsl
lahf
jmp
mov
jae
mov
jnp
hlt
mov
mov
sbb
test
xor
insl
mov
into
mov
lock
jns
das
int3
add
xchg
mov
jne
rolb
jmp
ret
and
pop
sbb
push
hlt
insb
add
lret
loop
or
out
aas
and
and
cltd
dec
into
cmpb
ss
mov
pop
xor
hlt
push
dec
dec
add
jne
test
cwtl
fs
cld
xor
cmp
arpl
in
pop
loopne
data16
js
jecxz
add
push
jb
or
add
mov
xor
cmp
cltd
dec
jbe
mov
and
addr16
mov
mov
inc
or
movsb
lock
inc
sbbl
enter
das
adc
fdivrp
jb
shll
or
push
in
data16
pop
add
movsl
mov
xor
enter
pusha
and
cmpb
mov
out
fimuls
push
shlb
sub
rcpps
dec
sub
lods
dec
out
jmp
stc
fisttps
xor
subl
inc
aad
shll
ss
or
xor
inc
std
call
incb
push
fbstp
xorb
cmpsb
or
pop
mov
mov
clc
jno
ss
cmc
push
cmpsb
orb
ljmp
or
push
ret
leave
jle
imulb
xchg
sub
xor
ja
iret
repnz
fimuls
adc
jmp
stos
outsl
outsl
cmp
lods
fnstcw
adc
stos
repz
or
clc
cld
dec
ss
mov
xchg
or
or
inc
jecxz
aas
push
add
mov
xchg
popa
fmull
xchg
xor
test
and
cmp
inc
test
jne
cwtl
int
divb
dec
jecxz
cmp
mov
cld
enter
int3
cmp
inc
lods
sti
sbb
mov
dec
mov
test
stos
push
dec
jnp
jnp
dec
xor
pop
cmp
cmp
cmc
out
pop
xchg
arpl
fcomi
out
aas
ret
fldt
ds
test
cwtl
sub
pop
inc
xchg
xchg
pop
fwait
stos
hlt
mov
movsb
jo
pop
ja
movsl
or
mov
cmc
shr
xlat
mov
and
dec
mov
iret
add
icebp
cs
inc
dec
test
out
sbb
test
xor
aaa
jecxz
inc
fildll
adc
pop
add
bound
xchg
sti
pop
cli
inc
inc
in
into
out
xchg
dec
mov
sahf
add
fsubrs
inc
mov
out
rorb
cli
add
in
neg
ficomps
aad
ret
loopne
xor
icebp
icebp
push
or
jmp
fwait
scas
popf
mov
cmp
jns
push
jae
xor
rorl
loop
sub
test
jne
jbe
mov
jo
inc
push
test
push
add
mov
lcall
in
push
pop
jne
xor
hlt
dec
ficoml
xchg
inc
xchg
mov
cmpsl
sub
inc
xchg
aaa
aas
andl
shll
pop
adc
inc
mov
cli
ficoms
add
imul
dec
cs
popf
es
das
cmp
es
adc
repz
xchg
dec
add
enter
mov
or
mov
jne
imul
std
movsl
add
or
pop
jl
or
sub
and
sub
cmp
xlat
add
dec
jnp
push
ljmp
xchg
ljmp
movb
out
int3
sbb
cmpsb
shlb
mov
add
jle
ds
and
sbb
xchg
lods
lea
sub
ss
fs
or
int
ret
enter
xchg
addr16
dec
push
aam
push
mov
cmp
xchg
fimuls
dec
cmp
xchg
addr16
scas
loop
stc
add
and
xchg
repnz
fisttpl
sub
xor
outsl
xchg
cli
bound
pop
inc
sub
mov
inc
test
loope
adc
cmp
scas
xor
enter
sub
lcall
sbb
lahf
xor
ljmp
rorb
adc
cltd
mov
adc
sub
out
sub
ret
mov
fwait
notb
aas
dec
sbb
add
mov
push
add
inc
xor
xor
ret
popf
je
inc
and
or
jno
mov
sbbl
pop
jno
mov
and
aaa
or
pop
sub
lds
gs
push
cmp
or
dec
dec
and
rol
mov
aam
jecxz
das
movsl
scas
movsl
mov
into
add
cld
out
and
rorb
xor
fiaddl
or
dec
jmp
fildl
cmc
cwtl
mov
push
cli
fwait
xor
sbb
test
jp
inc
data16
fwait
mov
fwait
lds
andb
jnp
subb
ljmp
ret
cli
jl
pusha
setno
push
jnp
or
xor
push
fldcw
fldl
jmp
cs
lods
jae
sbb
ja
inc
scas
int3
clc
test
mov
fldpi
push
pop
xchg
inc
lret
mov
xor
fwait
add
loope
xchg
cld
insb
or
sub
mov
icebp
shl
loope
gs
push
xchg
decb
sbb
dec
pop
fdecstp
mov
outsl
sub
sub
push
dec
sub
jne
sahf
sub
in
jecxz
in
bswap
pushf
cwtl
mov
push
aaa
cmp
push
test
pop
aas
insl
push
push
js
jnp
cmpsl
pusha
lds
movd
mov
cmp
inc
inc
and
inc
jbe
and
push
sbb
inc
jno
jmp
cmp
lahf
fs
jl
mov
or
dec
xorb
je
mov
in
lods
dec
pop
jle
mov
push
push
pop
fs
cmpsb
sbb
mov
push
mov
sub
incl
dec
or
cmp
jle
inc
gs
lods
and
mov
popf
dec
mov
into
fwait
mov
xlat
in
pop
lds
call
push
cmc
adc
adc
and
mov
sbb
cltd
xchg
mov
jmp
addr16
in
ds
popf
push
cmpsb
push
roll
das
add
sbb
mov
or
pop
xchg
iret
push
iret
add
outsb
cmp
movsb
ret
sbb
mov
jg
mov
loop
repnz
iret
lret
loope
leave
lods
leave
cltd
andb
xchg
cld
bound
stos
dec
js
pop
adc
out
lods
ds
lret
sbb
dec
add
push
aad
int
mov
jp
xor
xchg
cld
push
xorl
mov
dec
outsl
adc
xor
movsb
outsl
jnp
mov
pusha
push
dec
or
adc
dec
pushw
pushf
add
in
aad
xor
and
pop
inc
pop
out
aad
pop
pop
and
or
enter
mov
fadds
mov
push
popa
cmp
jp
push
inc
adc
mov
cmp
sub
out
push
cltd
push
xchg
icebp
out
mov
mov
daa
in
xchg
sahf
incl
xchg
jo
sbb
rcrl
xor
pop
jbe
and
push
mov
adc
stos
push
and
adc
jae
pushf
cmp
test
jb
rcll
lock
sbb
pop
fbstp
adc
int3
mov
jg
cwtl
insl
adc
les
stos
sbb
push
mov
pop
jbe
push
fs
pop
push
data16
sti
repnz
movsl
jg
fstpl
in
adcl
cmpsb
jns
out
mov
movsb
rcrl
inc
sbbl
xchg
adc
cmp
hlt
inc
hlt
ret
or
shll
subl
push
mov
jo
int3
push
mov
fldl
loop
shr
inc
movsl
dec
dec
mov
scas
pop
iret
pop
scas
scas
push
pop
push
or
jae
lcall
sarl
int
mov
das
inc
xchg
push
fidivrs
cmc
fisttpll
es
cmpl
lea
push
sub
adc
movsb
cmp
dec
xchg
mov
or
aaa
cs
add
mov
jge
rcll
xor
movsl
push
aas
loopne
mov
ja
lods
dec
mov
pop
addr16
sub
add
movsl
adc
dec
mov
insb
call
stos
and
ret
push
cli
mov
pop
ds
mov
mov
push
shlb
cmpsl
cmp
pop
jmp
lcall
sub
fwait
push
cmp
mov
mov
adc
sbb
roll
fcomps
xchg
mov
shrl
movsb
pop
pop
push
sbb
and
loop
rolb
add
adc
sub
in
ret
sub
call
mov
push
cs
cmp
sbb
jnp
out
ja
and
in
lcall
loop
das
shlb
jns
ret
addr16
aas
push
cmp
mov
dec
loope
cmp
daa
inc
or
push
dec
sahf
insl
dec
pushf
ss
fldcw
and
mov
fistl
pop
add
jns
pop
jl
mov
gs
into
outsb
out
cld
pop
stos
mov
adc
add
jb
pop
aam
lods
pop
mov
lods
xchg
lock
arpl
sub
ja
push
pop
pop
xchg
in
sbb
cmp
add
adc
and
shrl
mov
jo
jge
sub
jnp
loope
jns
xchg
cmpl
aas
pop
dec
int3
outsb
inc
stc
in
cltd
lret
sub
sub
pushf
hlt
sbb
scas
sarl
xchg
ds
ret
test
lret
cld
lcall
mov
inc
scas
push
mov
mov
ja
inc
pop
arpl
sub
shlb
adc
and
clc
push
out
cmp
cli
pop
cli
pop
cmp
popf
push
mov
movb
push
inc
xor
or
loop
je
je
lahf
rcrl
dec
rorl
adc
lahf
and
je
das
mov
pop
mov
dec
inc
push
ja
pop
mov
fdiv
test
repz
sbb
mull
xorb
cwtl
iret
push
cmp
enter
inc
mov
les
pop
stos
das
mov
push
push
xor
push
insl
jge
jne
cwtl
and
xor
fists
xchg
decb
jp
into
notb
cs
jnp
test
arpl
dec
aad
out
mov
je
fistpl
lahf
xchg
int
sbb
loop
fwait
jns
test
imull
push
fldcw
sbb
rclb
dec
add
pop
out
test
mov
ljmp
insb
or
xchg
mov
sahf
sbb
mov
mov
pop
lcall
xchg
cmp
jmp
jg
out
lea
xchg
xchg
into
push
addr16
xchg
leave
mov
add
inc
paddusb
test
mov
in
push
xchg
stos
int3
sbb
xchg
mov
dec
shll
sub
sbb
pop
sbb
icebp
or
mov
idivb
scas
rorb
xchg
adc
lods
lds
jle
and
add
jns
mov
add
subl
repz
movsl
mov
jmp
mov
jle
out
fiaddl
or
sub
cwtl
lret
add
mov
scas
pusha
adc
in
xor
enter
sub
cld
pusha
mov
and
fstpl
outsb
rol
jno
cld
and
or
and
and
sbb
fcoms
add
adc
addb
add
ds
pop
test
cld
sub
mov
mov
mov
inc
fbld
cmp
mov
cmpsb
int3
outsb
aaa
test
clc
mov
rcrb
sbb
add
xchg
pusha
fstpl
fs
or
xor
adc
dec
xchg
movsb
data16
aaa
jbe
xor
neg
cmp
ret
push
cltd
mov
out
fstpl
out
inc
xorl
mov
jle
and
mov
mov
aad
call
int3
pusha
lock
pushf
or
xchg
mov
mov
lods
sbb
clc
push
adc
repz
mov
push
jmp
loop
aaa
add
jbe
push
lret
pop
adc
dec
sbb
jmp
push
pop
pop
sbb
ja
hlt
orl
dec
shr
andb
xchg
arpl
sub
mov
mov
jb
sub
adc
or
aas
fimull
fstpt
add
inc
filds
shl
fs
cwtl
lea
push
lock
add
mov
cwtl
dec
stos
dec
jp
ret
nop
mov
pop
ja
fs
push
movsl
pop
xchg
aaa
push
out
jmp
jp
xor
push
sub
outsl
cmp
jnp
push
sbb
ret
testb
imul
int3
or
roll
cmc
jl
mov
xchg
shlb
pop
test
mov
flds
pop
jae
fcompl
shll
add
out
int
pop
push
in
pop
sbb
push
insb
mov
mov
ljmp
cmp
movsb
outsb
movsb
lods
push
inc
pop
inc
lds
std
mov
enter
cmpsb
fwait
inc
and
fcom
stc
sub
movd
push
xchg
je
or
stos
push
xchg
test
sub
pop
pop
xchg
in
rcl
jbe
cmp
fstps
cmp
dec
push
mov
mov
mov
inc
mov
mov
shrb
clc
push
jmp
fcoml
fpatan
fucomi
daa
test
int
lcall
cmpsb
clc
mov
stc
cmp
decb
inc
xchg
dec
fisttps
movsb
fstl
fsubrl
push
ds
scas
test
insb
andb
int
mov
fiaddl
adc
out
gs
loop
cmp
push
mov
push
push
aaa
inc
frstor
je
mov
and
in
inc
fisubs
pop
iret
xchg
out
loop
pusha
jb
ret
inc
sbb
or
fiaddl
push
lock
movsb
dec
pushf
in
ds
stc
leave
std
out
dec
in
neg
popa
in
xchg
lahf
enter
imul
mov
xchg
jg
icebp
push
js
popf
mov
xor
lret
xchg
ret
movsl
rcr
push
loope
stos
cmp
inc
leave
stos
cs
adcb
mov
or
pop
cltd
nop
hlt
inc
fcmovnu
dec
aaa
sbb
bnd
xchg
cwtl
adc
mov
shr
cmp
gs
inc
sub
mov
dec
push
mov
ror
cmp
push
pop
punpcklwd
jno
iret
mov
cmpsb
cmpl
mov
fnstsw
in
jbe
scas
sarb
lods
ret
xor
aaa
jne
in
cmp
loope
sub
jbe
mov
mov
mov
fisubs
subb
aam
cmpsb
fmull
cmpsb
mov
cmp
pop
mov
mov
aad
and
lahf
push
pop
mov
push
fcomip
imul
hlt
dec
push
lret
xorb
mov
mov
pop
jae
xor
add
sahf
mov
icebp
int3
mov
fisttpl
sub
sub
jle
idivl
dec
into
jno
mov
hlt
cmpsb
fidivs
xchg
inc
lret
loop,pt
sbb
jle
fcomi
lods
pop
and
adc
dec
out
mov
dec
insb
xchg
test
xchg
pop
adc
sarl
inc
scas
je
aam
xchg
cltd
and
incb
sbb
addr16
mov
clc
sub
cwtl
ja
cmp
movsl
out
mov
fistpl
push
or
pop
mov
fadd
into
movsl
push
push
imul
xchg
fs
lcall
enter
xchg
stc
dec
or
sub
gs
rcl
lret
mov
in
in
jle
movsl
push
addr16
mov
push
mov
ret
xor
pop
in
lret
ss
sbb
popf
xlat
mov
jno
out
dec
pop
fcmove
repz
pop
jp
repz
push
imul
repnz
lret
xor
mov
xchg
xchg
sbb
in
sbb
mov
pop
rcll
and
in
gs
es
lahf
mov
xchg
push
mov
jns
arpl
pop
leavew
adc
cwtl
cmp
icebp
popa
gs
mov
mov
mov
inc
adc
dec
aam
jae
mov
mov
rcr
pop
pusha
out
cmp
scas
dec
sti
notl
scas
jle
repz
les
xor
sub
repz
cmp
mov
test
sub
fwait
jp
and
dec
xlat
sbb
jbe
dec
add
push
out
les
cs
ret
xor
push
vmread
roll
int3
aas
inc
mov
fistl
jnp
js,pn
call
pop
inc
push
mov
mov
sub
or
mov
pushf
sbb
xlat
mov
loope
jne
sub
xor
xchg
scas
mov
or
xor
dec
sub
xchg
push
movsb
mov
or
xchg
mov
andl
xchg
xchg
insb
and
sub
cmp
mov
sbb
test
sti
inc
jl
xchg
sbb
add
xchg
clc
lods
bound
mov
out
scas
test
inc
jmp
sub
fldcw
sub
add
in
outsl
aam
test
clc
test
lahf
lret
icebp
sbb
dec
cmp
ret
push
dec
xchg
push
cmp
jg
cmpsl
sti
sbb
xchg
add
mov
test
repnz
cmp
dec
ja
xchg
add
hlt
sub
inc
imul
sti
or
std
mov
int
lds
cli
addr16
xor
mov
scas
popf
fs
frstor
lea
inc
movsl
mov
push
mov
sarb
cmp
xlat
fstpl
mov
into
sub
cli
sbb
out
sub
xorb
aaa
push
cmpsb
js
adc
ja
xchg
xor
mov
outsb
int3
daa
and
bound
sbb
mov
out
cltd
movsl
clc
outsb
or
mov
pop
pusha
call
out
lcall
and
sub
shr
inc
filds
push
lcall
repz
jg
leave
or
push
ret
push
pop
jo
ja
push
dec
rcll
sbb
sbb
sarl
out
movsl
ja
jmp
pop
pop
in
sub
mov
pop
and
lock
sahf
mov
sub
jae
push
out
jno
int3
loopne
in
ds
rolb
xlat
xor
mov
mov
mov
mov
in
sbb
adc
gs
stos
dec
iret
mov
movsb
add
in
mov
orl
push
fwait
mov
push
movsb
sbb
test
and
mov
or
and
fdivs
and
push
out
fstpl
xchg
dec
adc
pop
test
les
out
mov
mov
negb
nop
push
sbb
aad
inc
push
daa
loop
cmpl
mov
lods
fldcw
repnz
jnp,pt
add
pop
sub
jo
mov
int
sbb
idivl
fcoms
stc
clc
dec
in
push
or
push
mov
std
dec
push
enter
jnp
jae
ljmp
iret
incl
sub
inc
decl
jmp
xor
adc
and
das
sbb
jecxz
sub
jo
xor
fildll
jno,pn
xchg
jne
out
clc
mov
pop
lock
imul
insb
jno
pop
fwait
cwtl
pop
or
pop
aas
cmp
adc
add
dec
xchg
push
dec
add
mov
arpl
iret
stc
mov
mulb
neg
xchg
fs
mov
sbb
nop
jle
in
add
inc
movsl
mov
inc
sbb
fcompl
sbb
cwtl
je
xchg
xlat
test
sti
cmpsb
xor
lret
mov
push
mov
in
inc
jno
fimuls
jne
push
jge
mov
fxch
adc
adc
jge
cmp
push
and
lods
mov
sbb
pop
sbb
cmc
ljmp
mov
sbb
jp
gs
dec
and
fs
add
push
mov
int
shlb
mov
mov
in
push
movsb
imul
mov
mov
push
adc
sbb
sbb
push
xlat
cld
pop
lods
jno
lret
movsb
push
adc
xor
je
gs
jmp
imul
jno
mov
outsl
frstor
or
xchg
mov
jmp
mov
pop
or
test
inc
and
pop
adc
orb
and
push
xor
jge
xorl
lds
sbb
or
push
and
rcll
scas
lods
lea
rolb
push
jmp
adc
sub
clc
lret
mov
jb
or
xor
sbb
sbb
out
fistps
xor
mov
lret
dec
aas
push
sub
stc
add
jae
lret
lock
mov
shrb
loope
add
inc
test
xchg
xor
inc
sub
mov
stc
jge
dec
sbb
dec
hlt
rorl
xor
cmp
sub
or
adc
pop
mov
cs
or
mov
shrb
and
popf
jecxz
test
cmp
inc
xchg
mov
push
addl
lods
lock
adc
dec
pop
call
cmpsl
push
aas
daa
jmp
sbb
cmp
and
test
jno
test
cmp
leave
pushf
or
mov
mov
mov
jbe
adc
jl
pop
aas
jo
cmc
add
aas
lods
clc
cmpsl
cmp
add
pop
test
cli
pop
loop
lods
jns
pop
ja
lret
fldt
xchg
movsl
mov
mov
iret
pop
insl
pushf
xchg
push
aas
repnz
mov
xchg
es
adc
test
inc
cmp
xor
mov
in
popa
lret
negb
pop
sub
fidivs
sbb
repnz
aaa
xchg
push
rorb
xorl
call
mov
ret
mov
jle
outsl
rorl
add
mov
push
fidivs
in
stos
xlat
andb
test
icebp
mov
mov
xor
sahf
mov
adc
je
xor
jb
or
leave
rcrb
inc
ret
stc
fstpt
mov
pop
dec
std
push
push
sbb
dec
pop
lcall
add
inc
jl
pop
ja
jno
lahf
mov
cmp
bound
add
sbb
lret
lds
subl
dec
dec
add
les
fs
inc
pushl
dec
lcall
addr16
mov
pop
or
mov
ret
mov
push
je
loop
xor
cli
mov
jl
lahf
xchg
repz
mov
outsb
pop
in
scas
das
jnp
jbe
cmp
xor
push
ljmp
mov
cmp
dec
jmp
idivb
aas
rolb
push
movsl
xchg
xchg
in
ljmp
data16
mov
cmp
inc
xchg
icebp
rorl
mov
xchg
adc
and
ffree
or
in
or
push
adc
shlb
in
push
rcr
iret
and
lock
lods
or
pop
add
mov
xchg
mov
xor
cli
loopne
rcl
aaa
lods
inc
dec
out
pop
mov
cli
aam
lods
sub
jle
dec
addr16
loopne
pop
or
add
adc
sbb
addr16
inc
adc
nop
in
flds
mov
pop
rorb
push
adc
clc
pop
jb
shlb
adc
daa
mov
sub
enter
xor
movsb
mov
push
sbbb
fs
mov
push
push
aam
jno
inc
jmp
repnz
jp
jmp
add
and
and
pusha
jb
sub
sbb
orl
popa
lock
and
xor
js
dec
push
add
cmpsl
push
imul
xor
jne
jmp
cli
and
clc
xchg
mov
adc
stos
xor
dec
xchg
insb
push
lock
add
and
cmp
add
mov
andl
jo
mov
call
dec
xor
mov
leave
fdivs
pop
cld
add
ror
xchg
cmpsl
movsl
push
adc
jecxz,pn
push
pusha
jl
cmp
jo
inc
xor
rolb
orb
xlat
mov
xchg
pop
xchg
mov
shrl
aam
cmp
xchg
scas
arpl
mov
adc
push
cmp
sbb
sub
enter
call
jbe
sub
xorl
cmp
xor
cmp
in
movb
mov
sub
daa
pop
add
add
mov
mov
dec
jns
push
cmp
mov
movsb
mov
les
stos
adc
cmp
and
add
or
add
and
and
sub
hlt
jmp
jb
push
adc
addr16
pop
in
fsubrl
das
add
sub
cmpsb
sahf
insl
repz
ljmp
push
xchg
pop
sbb
add
jg
jp
sub
add
cmp
fs
lods
sub
sbb
ss
push
or
cmp
ja
stos
lret
or
pop
aad
lods
push
call
ret
insb
andl
or
jp
mov
push
imul
mov
push
sub
decb
mov
pushf
or
sahf
mov
stc
sub
ror
movsb
adc
icebp
cltd
xor
push
mov
shr
je
push
adc
mov
jmp
fcoml
dec
out
or
jns
rclb
loop
adc
mov
sub
adc
mov
sub
ljmp
bound
loop
jmp
lcall
je
sbb
inc
jmp
mov
dec
jns
subb
popa
fimull
and
fbstp
sahf
repz
and
icebp
adc
sbb
loopne
fisubrl
and
adc
xor
sti
mov
aam
and
mov
mov
mov
in
out
daa
mov
fcoml
popa
xchg
inc
xlat
pop
inc
repz
call
and
jbe
mov
xchg
xor
hlt
ljmp
std
add
cmpsb
jg
jg
fcoms
stc
pop
jnp
in
jge
add
xor
and
pop
inc
lahf
or
outsl
loope
sub
xchg
mov
movsb
mov
xchg
dec
push
rolb
in
jecxz
sub
ds
mov
out
mov
adc
xchg
insb
dec
stos
insl
insb
adc
pop
pop
cmp
jp
jno
fmulp
xor
scas
loopne
sub
cmc
mov
xor
pop
xlat
and
adc
pop
inc
outsl
sub
jno
idivb
xchg
stos
cmp
bound
lahf
xchg
push
mov
pushl
sbb
jle
scas
lahf
enter
popa
jle
or
mov
lahf
std
jecxz
out
mov
fsts
xchg
lods
stos
cmpl
mov
mov
mov
cmp
dec
into
adc
adcb
add
push
add
xchg
insw
sub
push
outsb
nop
mov
fs
dec
mov
jmp
adcl
dec
pop
lahf
adc
jae
push
gs
push
pop
sbb
gs
jp
mov
mov
and
and
xchg
sub
pop
pop
jae
pop
repz
call
pushf
sbb
push
inc
mov
inc
pop
fcmovnbe
mov
ljmp
add
and
xchg
sti
out
inc
mov
shll
loope
test
pop
imul
lods
cmp
sub
movsl
ficomps
pop
into
cli
jecxz
xchg
jmp
rcrl
push
mov
clc
rolb
inc
rcrb
repnz
insl
out
jl
xorl
cmp
xchg
loopne
adc
inc
jnp
jb
mov
shlb
and
inc
add
lods
stc
enter
xlat
pop
enter
push
mov
fisubs
shll
fcomip
mov
lret
mov
inc
cmp
mov
sub
sbb
push
pop
push
add
xchg
aam
xchg
cmpsb
fidivs
bound
adc
cld
popa
cmc
out
cli
xor
and
mov
out
sub
mov
popl
cs
push
loopne
dec
jnp
pop
pop
arpl
mov
push
outsl
push
mov
xlat
call
adc
push
sub
push
cmp
out
push
jmp
fadd
fistps
cmp
mov
movsl
imul
xor
push
cmp
fdivl
ds
jb
rclb
push
and
outsb
or
push
push
test
sbb
rorl
ja
xchg
fwait
pop
pop
data16
or
lock
push
das
push
cmpsl
into
addl
and
hlt
rcrb
fiaddl
jbe
and
xchg
call
shrl
cld
lods
in
xlat
cmc
xor
rdmsr
or
pop
fsubr
in
adc
dec
ja
call
addl
mov
cltd
pop
mov
ja
add
mov
cmpb
fsubl
jbe
arpl
mov
dec
jecxz
lahf
icebp
push
push
lret
cmp
imul
int3
mov
xchg
dec
cld
pop
xor
nop
testb
and
movsl
sub
das
cmp
lcall
cltd
insb
cltd
movsl
dec
sti
sahf
and
test
jle
out
or
in
adc
aad
dec
divb
push
sbb
inc
inc
sbb
add
push
pop
mov
or
mov
sub
ss
lret
lds
test
orl
rcrl
cmp
dec
adc
mov
xchg
and
aam
call
aas
sub
ret
xlat
jo
dec
test
dec
pop
out
xchg
pop
and
adcl
aaa
sahf
mov
sti
xchg
jnp
and
lcall
mov
push
adc
mov
cwtl
sub
mov
push
repnz
add
into
imul
leave
mov
jmp
push
mov
test
jle
test
inc
outsb
das
add
add
push
mov
clc
mov
lds
jo
sub
inc
mov
stc
push
mov
andb
cmp
std
mov
sbb
jle,pt
jbe
add
leave
stc
push
or
mov
insl
pop
clc
adc
loope
xor
sub
mov
lock
mov
push
inc
andb
sbb
push
fldenv
test
ret
arpl
pop
dec
scas
cmpsl
imul
xchg
mov
sbb
pop
stos
mov
dec
adc
leave
int3
in
xchg
jge
sbb
sub
scas
bound
or
dec
mov
add
lea
xor
sub
das
inc
cli
les
dec
imul
push
xchg
and
jl
cmp
jmp
test
mov
sbb
inc
dec
lahf
jl
adc
jl
mov
xor
push
or
dec
das
xchg
sbb
xchg
push
add
in
push
cli
jge
jge
fcom
mov
jp
andl
sti
jne
jl
fs
adc
ss
pushf
popa
pop
push
xor
scas
cmpsb
jne
repnz
sahf
dec
aad
sub
sub
jle
xchg
xor
pop
scas
xchg
mov
push
out
out
outsb
je
push
call
jp
mov
cmp
sub
addl
xchg
pop
mov
mov
stc
cs
push
arpl
cmp
stos
scas
jmp
adc
xlat
test
push
cmp
movsl
mov
in
in
lcall
cs
in
jnp
or
lods
das
cwtl
in
test
adc
aas
mov
xor
test
sub
rep
sahf
fdivr
fsubs
cmp
mov
jp
adc
in
dec
test
mov
xor
loop
jle
pop
fsubs
int3
lcall
xor
xchg
push
popf
lds
push
jbe
dec
subb
pop
cli
push
lcall
pusha
mov
jne
cmp
out
stc
xor
sbb
dec
nop
sub
imul
sub
out
ljmp
jbe
xchg
add
lcall
sub
loop
sbbl
push
xchg
or
add
add
scas
push
mov
add
mov
xchg
cmp
or
pop
jne
add
push
pop
sbb
fnsave
adc
scas
add
xorb
aam
pop
stos
xchg
cli
pop
aas
lods
int
dec
push
jnp
les
pop
clc
aaa
enter
sub
adc
adc
incb
or
or
loop
lock
mov
mov
lcall
sub
pop
or
adcl
ss
aad
loopne
pop
adcl
jbe
mov
pop
sbbl
or
int3
rorl
and
test
xchg
cld
hlt
fdivrs
adc
aas
mov
xor
lret
pop
lea
mov
xchg
push
int
or
lcall
out
dec
pop
mov
push
fidivrl
aam
cmp
rclb
lods
or
outsl
dec
and
js
aaa
out
jge
fnstenv
xchg
scas
daa
dec
arpl
xchg
jne
lret
add
inc
aad
sbb
ret
into
xor
inc
push
fldt
in
dec
or
sub
mov
js
fildl
jae
cmpsb
in
pop
out
jb
fsts
or
cmpb
lock
sub
cmp
imul
inc
mov
sub
push
mov
js
adc
out
imul
icebp
cmp
mov
mov
xchg
inc
bound
adc
jns
pop
mov
cli
and
jns
mov
test
mov
xorb
pop
mov
dec
pop
in
cmp
movlhps
stc
mov
mov
jnp
jg
dec
hlt
stc
aad
pop
test
cwtl
neg
aad
xchg
sbbb
or
xor
cld
and
jb
lret
push
aas
push
insb
push
or
mov
mov
in
mov
bound
sarb
jb
cltd
lods
dec
pushf
jl
dec
leave
repz
repz
jnp
adc
out
mov
xchg
jb
xchg
cmp
or
xlat
loopne
out
sub
mov
test
std
in
scas
and
daa
add
pop
int
and
int3
bound
push
push
mov
pop
imul
imul
iret
cmpl
and
popf
daa
pushl
pusha
lods
movsl
xchg
enter
cmc
mov
xorb
or
sbb
inc
cmp
sbb
push
mov
add
and
icebp
mov
test
cmp
sub
mov
jo
mov
stc
push
cmpsb
mov
push
mov
xchg
jg
jecxz
sub
in
dec
cmpsb
mov
mov
js
into
ror
jmp
pop
or
cmpsb
cmp
test
divb
add
aad
mov
das
mov
ret
lahf
js
or
lods
or
mov
cs
jnp
loopne
pop
xchg
popf
inc
insl
aaa
and
in
push
sub
in
jb
addr16
test
aas
xor
jmp
cmc
in
jae,pt
popf
or
mov
dec
inc
test
mov
gs
cmpsb
loopne
add
pop
inc
mov
inc
js
insl
sarb
in
mov
in
jge
push
jle
shr
out
xchg
sti
mov
dec
rcrl
add
arpl
jmp
lret
push
into
mov
rcrb
cmp
jg
orb
sub
jge
jb
push
inc
cld
ljmp
push
stc
aaa
fsubs
rolb
out
or
mov
aam
int3
insb
pop
clc
push
pop
ret
int3
mov
mov
adc
fnstenv
add
divl
pop
inc
repnz
rclb
push
addr16
mov
outsl
cmp
notb
loopne
xlat
call
out
jno
ljmp
inc
pop
adc
inc
pop
lret
adc
enter
inc
dec
cmp
pop
loop
int3
in
popa
lds
psubq
dec
mov
inc
dec
jmp
sahf
inc
mov
jno
aaa
or
insb
or
pop
jecxz
inc
xchg
inc
fs
int
movsl
fwait
lock
sbb
ja
test
sub
add
scas
in
cmp
cmp
push
pop
mov
or
dec
bound
sbb
sbb
leave
and
ret
xchg
xlat
in
test
cltd
or
mov
xchg
sbb
pop
pop
xchg
test
xlat
mov
mov
enter
test
fiadds
fnstenv
js
clc
addr16
or
add
adc
sub
sbb
sbb
push
icebp
stc
push
sbb
sub
inc
add
fidivrl
jge
xchg
jns
imul
cmc
stos
incl
adc
inc
ja
add
lea
je
fistpll
xchg
xor
mov
out
pop
loop
push
mov
shrl
push
sbb
sub
cmp
sbb
imul
out
inc
lea
outsl
hlt
ds
or
push
sbbl
mov
lahf
pop
xchg
lock
or
sbb
pop
cli
lods
cmp
stc
xlat
stc
xchg
dec
lods
jae
xchg
incb
sbb
mov
mov
adc
cmp
mov
ror
fdivp
das
or
push
lret
mov
add
and
insb
mov
incb
sarb
mov
jbe
cmpsl
mov
clc
andl
add
cmp
int3
add
mov
aad
mov
add
cmc
push
dec
jno
imul
xchg
add
jp
or
jp
and
push
aam
xchg
cmp
sub
push
push
xor
pop
shll
fsubrs
pop
mov
ljmp
sbb
push
inc
xchg
mov
movsl
sar
loopne
call
lret
push
data16
mov
aam
in
popf
call
call
movsl
xchg
ds
les
add
dec
mov
push
ret
out
je
push
push
movsb
jg
pop
add
mov
sub
push
out
pop
lret
addr16
and
stos
xchg
dec
cs
shll
scas
and
aam
xchg
xchg
or
mov
nop
das
test
repnz
pop
jmp
push
add
push
arpl
stc
sub
mov
mov
mov
sbb
jecxz
sbb
divl
inc
mov
orb
rclb
jp
jbe
test
cmp
xchg
cmp
adc
test
aam
test
jnp
shlb
jno
dec
test
xchg
cli
movsb
xor
mov
out
and
mov
adcl
outsb
and
push
sbb
fisttpl
jae
decl
loopne
mov
fistl
add
inc
or
xchg
dec
or
sub
jbe
xor
mov
mov
outsb
lock
shr
sbb
popf
dec
mov
mov
repz
jne
pop
cwtl
jecxz
add
or
sub
cvtdq2ps
dec
les
jnp
data16
pop
add
imul
pop
bound
test
popf
int3
xchg
fdivrl
dec
daa
push
js
inc
adc
push
cmp
xchg
jae
in
xchg
je
xlat
cmp
mov
push
movsb
cli
jbe
push
and
push
leave
cmpsb
je
shll
push
sbb
inc
adc
jne
in
xchg
sbb
mov
lahf
push
faddl
and
orl
test
inc
jnp
add
mov
pop
pop
jno
push
lahf
stc
mov
out
dec
and
mov
inc
mov
mov
and
xorl
pop
inc
xchg
or
or
dec
divl
pushf
outsl
stos
or
sbb
push
bound
stc
mov
fidivrs
sahf
sbb
and
xchg
loope
aaa
out
xchg
xchg
out
imul
push
sub
leave
test
dec
mov
cmp
loop
or
leave
adc
ficomps
into
push
mov
mov
imul
icebp
test
imul
mov
push
ss
jmp
jnp
test
mov
gs
pop
push
inc
cmp
cs
mov
addr16
movsb
out
jge
xorb
test
cld
push
incl
fisttps
leave
pop
push
mov
pop
sub
adcl
cld
lcall
adc
cmpsl
or
inc
pop
aaa
sbb
fidivs
cmp
repnz
push
bound
dec
dec
lahf
loopne
insl
mov
aad
bound
jno
subb
scas
mov
out
add
sahf
cli
cmp
lret
test
add
inc
test
pop
and
and
and
xchg
stos
fistpl
adc
or
mov
rcrl
imul
dec
fcmovnu
pop
test
mov
adc
adc
mov
fnstsw
subb
sbb
jnp
test
cmp
in
add
dec
sub
add
xchg
stos
imul
imull
lret
cmp
sub
sub
cwtl
xlat
xchg
shlb
xchg
jnp
aam
add
cld
inc
add
sub
loop
push
and
test
shrl
mov
cli
xchg
je
dec
rclb
jmp
arpl
imul
dec
daa
sbb
inc
xlat
cld
mov
out
ljmp
stos
lods
push
icebp
dec
orl
sub
sbb
popf
and
fisubl
dec
adc
ror
pop
adc
push
add
pusha
mov
inc
push
cltd
or
fwait
nop
xchg
or
pop
and
out
mov
sub
pop
or
inc
xor
pop
push
fidivrl
push
sbb
mov
xchg
popa
sub
test
ret
lds
dec
jl
xchg
jb
ss
andl
lretw
cmp
jp
mov
mov
adc
das
imul
imul
vmovd
push
and
loop
mov
loop
xchg
lret
push
aad
sub
sbb
pushf
push
bound
inc
gs
cwtl
leave
sub
xor
pusha
in
movhps
lock
jno
into
ja
push
fcomi
mov
leave
ret
jle
inc
scas
mov
outsl
stos
mov
mov
dec
adc
sub
xchg
or
shrd
push
imul
adc
loopne
xchg
stos
push
adc
in
stc
xlat
cmp
mov
sub
sub
fdivrl
cmp
xor
call
int3
inc
jge
rcl
inc
xlat
out
xor
adc
push
add
push
pop
dec
in
xor
and
push
pop
aaa
and
test
xacquire
and
xchg
jge
pusha
movsl
aam
push
pushf
cmp
out
dec
pusha
xor
mov
nop
push
inc
int3
cmp
or
cmc
jp
add
sbb
inc
add
jbe
ret
mov
ljmp
xor
mov
lods
test
mov
xor
ds
or
mov
ret
push
push
loope
fsts
cmc
lods
addr16
mov
adc
pop
sbb
xor
jmp
sbb
mov
notl
int3
jmp
repnz
subl
in
in
add
into
pop
mov
xchg
es
push
or
ss
decl
adc
and
jb
push
push
xlat
lods
pop
xchg
sbb
push
adc
or
mov
stos
mov
and
inc
pop
mov
mov
cmc
ds
mov
idiv
cmpsl
mov
pop
jno
test
icebp
lahf
xchg
jp
xchg
cwtl
decl
add
lcall
sub
push
inc
sbb
loope
push
pop
out
dec
aas
mov
adc
and
xchg
xor
out
std
movsb
mov
cltd
xchg
jb
sub
outsb
pop
fwait
pop
dec
xchg
adc
int
fisttpl
fnstsw
jb
mov
lret
jne
pop
push
std
sbb
mov
dec
imul
fistps
jmp
fildl
das
mov
sbb
push
into
aam
push
neg
sbb
fwait
cmpsb
movsb
int
xchg
dec
loope
sti
lds
cmpsl
dec
hlt
sbb
in
enter
mov
xchg
sahf
aam
je
pop
aaa
mov
mov
addl
imulb
cltd
lahf
mov
add
daa
test
js
lock
cmpb
push
out
mov
xchg
or
scas
lret
push
scas
loope
movsl
in
lahf
inc
pusha
loop
pop
jmp
out
mov
jg
dec
push
xor
inc
fadd
push
gs
nop
int
mov
sbb
sar
es
xorb
mov
pop
popf
jae
out
mov
or
popa
dec
cmp
rcrb
lods
cld
jp
mov
adc
jle
out
rcrl
sub
sub
xor
pusha
mov
lret
push
xchg
jno
pop
gs
jne
or
dec
pop
sub
outsb
sbb
repnz
jecxz
rcrb
cs
ss
pop
or
ds
repz
in
repnz
enter
jnp
es
dec
repnz
lods
insl
cmpsb
filds
stos
pushf
mov
enter
dec
stos
sbb
inc
outsl
jno
xchg
lds
pop
repz
cmpsl
je
ficoml
and
out
xlat
pop
push
push
pusha
out
ss
sbb
mov
dec
int
xchg
imull
std
rcl
sarb
inc
in
and
sbb
scas
push
jne
push
nop
pop
push
test
push
mov
inc
movsb
mov
mov
mov
pop
lock
xchg
add
nop
xor
ficompl
inc
stos
imul
mov
cltd
lock
pop
cmpsl
icebp
jge
pusha
xor
addb
add
sbb
adc
fucomi
iret
in
fsubrl
scas
mov
mov
xchg
mov
pop
jns
cmp
push
movsl
pop
outsb
pop
je
mov
pop
pusha
imul
xchg
dec
into
adc
int3
rcr
imul
imul
ret
mov
sti
jg
add
mov
mov
mov
mov
mov
xor
out
jg
cld
movb
outsl
mov
push
or
mov
mov
sub
xor
mov
outsb
sub
push
cld
ds
inc
rorb
mov
jns
sarl
add
mov
cwtl
inc
mov
jp
insb
push
nop
orb
js
ds
repnz
leave
es
cli
loope
cmpsl
les
sub
ss
shlb
mov
iret
push
call
cmp
add
test
sti
sbb
es
mov
test
sub
jmp
ret
out
push
pop
xchg
mov
into
mov
jno
loopne
mov
pushl
xchg
cld
fsubr
fiaddl
in
pop
jg
comiss
pop
mov
xor
cmp
dec
jnp
fisttpll
xchg
jle
nop
push
jo
aam
and
jp
dec
stos
xlat
or
and
in
or
das
sahf
dec
mov
cmp
std
xchg
mov
lcall
sar
out
and
lods
jb
je
jg
or
xor
cmc
push
enter
add
icebp
cmpsb
test
jge
bound
jno
inc
in
mov
pop
mov
les
xchg
xor
xchg
addr16
dec
lret
dec
sti
jne
jnp
test
pop
jmp
adc
mov
in
xchg
or
repnz
lcall
clc
cmp
fildll
fiadds
xor
add
pop
negb
inc
add
int3
jo
inc
sbb
es
and
mov
xchg
lods
ljmp
cmp
clc
inc
call
mov
repnz
iret
jo
xchg
xor
push
inc
jmp
sub
mov
fwait
dec
sti
lcall
vcvtps2pd
ljmp
int3
add
sti
pop
rcrl
ficoml
or
stos
push
sbb
mov
jmp
daa
scas
insl
sahf
rol
jno
pop
clc
lock
imul
loop
popa
imul
scas
push
sbb
and
inc
mov
out
add
es
fidivrs
les
imul
jmp
ror
cli
fs
rdmsr
add
add
aas
jg
cs
sbb
ret
sub
sub
push
mov
add
push
xchg
jg
jp
int
and
aas
mov
cmp
pop
movsb
cmp
insl
shrb
loop
jb
xchg
mov
daa
push
push
pop
xor
add
jne
and
into
dec
outsl
cwtl
jl
rdtsc
dec
sbb
or
test
mov
inc
xchg
daa
jp
xchg
lea
sbb
and
loop
mov
lcall
push
or
lcall
add
mov
jecxz
sbb
mov
jne
imul
bound
mov
out
fistpl
xor
xor
mov
fsubs
sti
pop
shl
insb
rcll
test
pop
push
pop
inc
xchg
int3
test
adc
xor
add
test
mov
sar
cmp
daa
outsb
in
inc
pop
cmp
mov
sbb
push
cld
fisttpl
outsb
inc
call
loopne
adc
iret
xchg
fs
pop
mov
push
out
mov
pop
in
nop
sub
mov
xor
int
into
xchg
dec
xor
push
pop
push
sbb
loopne
jb
fldcw
loop
xlat
jnp
cmpsl
outsb
sahf
ljmp
adc
jecxz
mov
mov
fistpl
pop
mov
shrl
out
arpl
lcall
repnz
stos
ds
mov
push
popf
repnz
icebp
inc
scas
mov
adc
das
leave
or
xchg
mov
mov
add
subl
sub
nop
movsl
aaa
out
jae
ss
pusha
in
pop
loopne
dec
out
pop
je
pop
pop
out
scas
movsb
mov
jmp
or
mov
in
xchg
jno
sub
inc
jge
push
and
xor
xchg
roll
bnd
xor
mov
cmp
into
jmp
repz
mov
leave
mov
inc
jb
bound
pop
push
cmp
push
outsb
or
out
pop
xchg
sub
ficompl
push
jmp
mov
dec
xor
jle
or
push
gs
sbb
inc
pop
sbb
push
xchg
hlt
push
inc
adc
adc
leave
jne
hlt
ror
fisubrl
mov
xor
loop
int3
jg
imul
lret
cmc
idivl
or
sti
xlat
sub
ret
and
decb
add
push
data16
or
pop
loopne
mov
fxch
lds
xchg
cmpl
shll
or
cmp
pop
test
int3
lea
pop
sbbl
orl
ds
or
pusha
mov
sub
loopne
xchg
mov
sbb
aam
shrb
xor
and
rorl
mov
int3
sbb
fmulp
cmp
js,pn
daa
lods
loop
jns
mov
and
cwtl
testb
fsts
mov
lods
jg
jg
xorl
je
inc
mov
sysexit
or
push
into
mov
nop
jo
shlb
jb
lods
inc
mov
adc
xchg
cmp
push
in
or
inc
mov
xlat
lods
fcomp
jg
imul
scas
popf
inc
stc
data16
std
imul
xor
cmpsl
ficoms
mov
pop
fs
push
subl
ljmp
xlat
push
pop
or
ret
outsl
jnp
scas
stos
pop
int
iret
mov
mov
cmpsb
jp
shll
out
lret
push
cmp
dec
int
inc
cmp
xchg
fsubl
pop
xchg
fwait
xchg
cmp
aaa
and
lret
add
dec
xor
pop
cmpsl
lret
pop
dec
adc
sub
mov
inc
negb
in
xor
sbb
push
pop
jbe
movsl
cmp
enter
pop
rorl
cmp
test
bound
loope
push
sti
pop
setae
pop
jns
add
add
push
fmul
xchg
mov
jecxz
sub
shl
cmp
lahf
fbld
mov
ds
lods
xchg
lret
adc
sbb
and
shll
lcall
sbb
pusha
lock
lock
push
push
and
push
add
xlat
pop
pop
lahf
xlat
mov
in
rclb
clc
test
push
inc
loop
xor
pop
fmuls
push
ljmp
addr16
and
xchg
dec
mov
mov
sub
mov
and
insb
rcl
push
loopne
pusha
pop
mov
scas
sbb
cs
dec
dec
xchg
stos
mov
jge
rcr
xor
dec
fcom
and
push
sti
int
jl
or
cld
pop
int3
jnp
dec
test
mov
mov
mov
icebp
fildl
inc
rorl
adc
sub
mov
loope
imul
adc
fnstsw
lds
dec
cwtl
inc
lods
xchg
test
xchg
lahf
jb
aad
xor
jge
cmp
loope
pop
push
mov
mov
jge
aaa
sbb
rcrl
inc
push
ret
jg
mov
sbb
stos
jno
ds
jg
aas
rcr
aam
mov
mov
sbb
add
mov
les
or
popf
movsl
jae
jl
adc
fsubrl
mov
jne
jo
add
xlat
mov
test
push
cmc
aam
ljmp
or
getsec
push
hlt
xchg
leave
ficomps
roll
pop
lock
out
fidivl
mov
jno
sarl
fbld
push
xchg
adc
je
out
pop
in
rolb
xchg
sbb
mov
push
jbe
pop
rorl
insl
sbb
mov
mov
and
mov
mov
jno
insl
pop
or
in
xor
es
jbe
daa
jmp
popf
leave
xor
stc
jecxz
into
lcall
repnz
mov
adc
cmp
mov
mov
repz
popa
nop
dec
lret
outsl
and
add
sub
cmp
iret
sub
mov
cmp
lds
or
in
xchg
cmp
lods
jmp
ret
rclb
into
cmp
jae
mov
jne
imul
aas
dec
inc
or
sahf
xchg
std
sbb
add
mov
add
sub
arpl
loope
and
push
pop
daa
ds
lcall
push
scas
push
adc
push
imul
mov
sahf
ljmp
nop
pop
fildll
jmp
aad
fmulp
vmread
xor
inc
mov
fxch
in
les
sahf
cmpsl
dec
push
xor
xlat
aaa
sub
push
pop
xor
pop
cltd
mov
enter
dec
call
es
sar
out
and
lret
jb
and
cmp
pusha
pop
push
lods
idivb
testb
dec
or
mov
stc
lods
bound
mov
jo
icebp
jmp
int
xchg
rorb
call
aad
icebp
lds
inc
and
sub
xchg
pop
cld
js
out
das
into
js
cmp
mov
insb
jae
je
out
adc
popf
xor
mov
sti
xorb
adc
mov
fldenv
das
or
aas
outsl
bnd
rclb
inc
imul
pop
cmp
push
int
push
in
pop
or
stc
xchg
add
sub
je
aam
lret
lahf
xchg
jno
dec
loope
out
repz
fistl
int
jl
pushf
sbb
enter
mov
hlt
push
lcall
jg
divl
sbb
mov
mov
mov
cmp
fldenv
je
sbb
dec
cld
or
popa
cmp
dec
add
or
lds
lock
js
addr16
lret
fcoms
lahf
xchg
dec
or
in
pushf
xor
add
ret
addb
lret
in
xchg
lret
and
loope
or
cltd
les
xchg
ljmp
lahf
dec
std
sbb
jle
in
add
cmp
out
mov
mov
inc
out
jmp
mov
push
xchg
inc
sbb
push
fisubs
in
sahf
cmp
movsb
mov
mov
push
test
pop
cmp
movswl
cmp
dec
pop
adc
sub
mov
add
movsl
inc
in
mov
arpl
loopne
adc
inc
imul
adc
push
inc
add
js
jle
inc
loopne
mov
les
xor
testl
aam
xchg
ljmp
nop
test
xor
push
ljmp
out
jno
cmpsb
jne
aam
ret
jle
adc
xlat
rolb
push
adcb
addr16
pusha
xor
mov
xchg
jae
scas
xchg
adc
imul
xchg
or
inc
repnz
push
stos
jns
orl
ss
pop
xor
jmp
inc
dec
in
and
test
mov
or
lea
nop
mov
aad
lods
iret
lret
out
das
in
xchg
data16
enter
jo
sub
jnp
mov
or
mov
jno
insb
push
and
xchg
scas
sub
sub
in
adc
int3
mov
call
out
lds
pop
and
pop
mov
mov
in
and
bnd
pop
sbb
and
sub
leave
jns
mov
shrl
call
jmp
leave
hlt
jge
push
push
inc
push
testb
jle
mov
cmp
dec
xchg
cmpsl
sbb
pop
add
arpl
cmpsl
lods
jae
jl
aad
repnz
iret
loopne
add
jo
pop
inc
and
aam
lcall
insb
mov
jnp
std
std
mov
out
jl
sarb
test
mov
mov
in
movsb
xchg
pop
lods
and
inc
push
push
sbb
xor
pushf
pop
cmp
movsb
hlt
lret
inc
mov
fstl
cmpsl
rcrb
std
sbb
xchg
mov
add
push
push
jge
push
repz
in
inc
pop
lret
call
in
or
es
popa
rorb
mov
pop
mov
xchg
inc
push
cmpl
ret
mov
fs
sbbb
pop
adc
add
rep
aaa
hlt
loope
test
daa
sarb
or
imul
std
xorl
mov
imul
push
add
into
sub
out
sub
mov
sub
pop
add
xor
and
pop
stc
int
lcall
fdivr
xchg
sbb
and
out
jle
add
push
pop
bound
inc
iret
dec
cmp
scas
popa
les
or
mov
loop
hlt
jns
test
dec
mov
ss
fnstsw
jge
and
pop
add
int3
mov
movsb
add
cltd
das
mov
cmp
aam
loope
sub
adc
jge
mov
popl
xchg
sbb
cli
stos
outsl
call
xsaves
sbb
mov
arpl
jne
shrb
pusha
addr16
add
jp
xlat
sbb
inc
jecxz
out
dec
sahf
push
pushf
xchg
mov
nop
movsl
cmpsb
pop
jl
arpl
and
dec
insl
cmp
push
jnp
jmp
sti
mov
sub
dec
and
push
cs
mov
mov
scas
mov
lcall
repnz
inc
in
and
mov
sbb
or
mov
push
pop
fcmovb
in
mov
test
movsb
int
pushf
adc
or
pop
push
cmp
dec
in
push
and
mov
mov
or
sbb
popf
and
cmp
stos
ljmp
or
outsb
movsb
loope
mov
adc
xor
and
cmpb
bound
push
mov
or
mov
sub
or
pop
cmpsb
cltd
or
mov
jp
adc
rcrl
mov
jae
push
cmpsb
scas
pop
cwtl
in
lret
push
push
repz
imul
dec
fs
sub
lds
sub
dec
aad
scas
push
mov
lods
aaa
xor
fmulp
mov
jmp
jle
out
inc
mov
in
int
mov
in
jmp
mov
movups
in
mov
aam
push
out
int3
push
iret
ret
outsb
cmp
fistps
popa
test
mov
ljmp
mov
bound
jg
push
xchg
mov
push
popf
test
lahf
and
andl
nop
out
loop
jecxz
jmp
ss
dec
pop
xor
push
into
xor
or
mov
lods
sub
push
lods
mov
aam
mov
xchg
sti
imul
mov
pop
int3
movsl
hlt
outsl
mov
push
cmp
sbb
ficoml
pop
xlat
cmp
out
add
pop
mov
adc
jns
pushf
out
jg
insl
jecxz
add
mov
lock
mov
xchg
aad
cmp
loopne
xchg
dec
xor
mov
lret
or
icebp
in
nop
testl
in
rcrl
or
jg
fcmove
cmp
xchg
mov
dec
push
pop
shrb
movsl
hlt
pop
insb
cmp
jmp
jp
push
test
jecxz
enter
das
inc
mov
add
aaa
cmp
pop
std
int3
or
cltd
cmpsl
sti
lods
in
sub
dec
cmpsl
mov
or
and
ret
fidivrl
in
mov
xchg
loopne
test
xchg
fimuls
movsb
aas
or
pop
sub
cs
mov
loop
mov
enter
cltd
inc
add
jae
ja
mov
push
push
adc
add
lahf
mov
inc
dec
popl
and
sub
pop
subb
lret
mov
add
inc
popa
sti
call
xchg
pop
adc
ja
pop
mov
xor
mov
out
mov
inc
sbb
ret
loop
jl
dec
xor
jecxz
arpl
jg
insl
mov
mov
js
sub
lea
scas
gs
xchg
daa
lods
jne
imul
data16
cmpsb
pop
bound
dec
inc
mulb
imul
test
pop
pop
in
out
push
fidivl
insb
stos
or
xor
add
sbb
ss
fs
cmpsl
rorb
xor
in
mov
pushf
adc
mov
in
sbb
cli
sbb
ds
push
jl
dec
push
dec
fildl
pop
mov
test
paddusb
pop
sahf
mov
jle
mov
je
and
out
dec
jecxz
ret
jle
xorb
mov
and
gs
hlt
test
and
mov
push
cmpsb
aas
mov
jp
scas
scas
pop
out
ljmp
out
sub
adc
test
jae
in
xchg
xchg
add
in
mov
dec
in
stc
pop
filds
fdiv
cltd
pop
pop
imul
pand
pop
ss
test
mov
in
cld
jns
add
sbb
dec
rcll
lea
rcll
adc
push
push
cltd
ret
mov
enterw
push
add
jle
in
or
stos
xchg
xchg
pusha
adc
push
popa
fs
inc
mov
int3
je
pop
mov
cltd
ret
dec
mov
sahf
insb
push
movsl
pop
das
ss
stos
mov
out
loope
loop
loop
sub
into
popa
and
jl
loopne
out
ficompl
jle
lcall
sub
jns
mov
lds
sub
push
jae
ret
and
sub
out
dec
mov
add
pop
dec
sahf
aas
sbb
fsqrt
fisubrl
aad
mov
and
test
or
lods
insl
sbb
sahf
add
out
xlat
inc
push
cmp
rcrl
leave
ja
aas
dec
fdivl
jb
mov
mov
dec
pop
stc
or
imul
cmc
jge
iret
adc
xchg
call
push
push
in
dec
mov
jl
sbb
in
les
mov
fwait
pop
icebp
dec
lock
ret
or
loope
lods
clc
xor
mov
test
sub
pop
mov
mov
sub
fwait
jbe
xorl
xchg
lcall
inc
inc
sub
add
xchg
in
cs
xchg
gs
cmp
push
add
mov
mov
in
lea
pop
inc
dec
iret
add
add
mov
mov
test
push
cmpsb
jge
dec
fldl
jmp
in
fidivl
out
or
jge
xchg
clc
notb
lahf
mov
push
add
push
popf
sub
mov
mov
fiaddl
push
sbb
ret
outsl
leave
cld
jecxz
imul
movsl
fistps
xor
xchg
inc
and
mov
les
je
leave
ds
xchg
mov
pop
imul
pop
fcomp
xchg
push
insb
mov
test
pop
nop
sbb
cmp
cmp
enter
cmc
push
push
test
jmp
addb
mov
cmp
cmp
test
test
add
cmp
jno
adc
pop
or
adc
pop
cli
and
sub
ret
out
js
pop
int3
lret
push
test
sbb
or
subb
adc
scas
cmp
lahf
add
xor
fidivrl
add
cli
or
xchg
in
out
iret
add
cmp
and
fistpl
add
mov
test
mov
jb
or
pop
xor
add
jge
push
xor
shrl
inc
adc
sub
movsb
out
push
call
icebp
daa
iret
cmp
loopne
mov
inc
fs
mov
jo
adc
mov
lea
dec
jnp
popf
sbb
push
loope
mov
mov
cmpsb
or
adc
cs
push
add
roll
cmp
push
pop
notb
test
orl
xor
fldl
push
loopne
sbb
push
mov
mov
rcll
daa
ds
leave
cwtl
xchg
jmp
dec
lcallw
js
hlt
dec
loop
scas
add
xchg
rcrb
pop
nop
cmc
xor
jbe
jo
pop
xor
mov
add
fcmovne
aam
test
dec
sti
add
xchg
dec
xchg
pop
sbb
mov
mov
adc
dec
jb
lea
repnz
push
dec
out
es
cmp
addb
mov
stc
sahf
mov
out
insw
lret
sbb
fwait
inc
xchg
or
mov
movd
pop
jb
ljmp
push
or
sti
or
push
add
movsl
push
aad
imul
xor
pop
out
in
xor
push
in
inc
cltd
into
jbe
adc
lcall
push
and
in
or
test
ret
pop
mov
pop
fldenv
mov
or
mov
xchg
adc
or
mov
movsb
rclb
or
int3
jg
mov
sar
add
fdiv
call
xchg
adc
mov
mov
int3
mov
xchg
fcmovu
jae
inc
aas
lods
leave
loop
repnz
xchg
mov
hlt
xchg
add
out
mov
fistl
divl
push
pushf
jge
xchg
mov
jl
cmpsb
sbb
lahf
inc
mov
arpl
sahf
cmp
jl
ljmp
ljmp
or
cmp
scas
cmpsb
xor
scas
fldl
jmp
test
jb
sub
dec
cltd
out
scas
das
mov
pusha
and
mov
call
mov
jp
adc
dec
sbb
outsl
andl
mov
sub
out
xchg
cmc
mov
and
mov
pop
push
lret
dec
cltd
xor
std
inc
addr16
loop
cmp
pop
cwtl
fcomip
sub
scas
jmp
mov
inc
or
shrl
pop
lds
push
and
in
into
inc
ds
jb
cmc
test
mov
rorl
inc
call
adc
into
adc
adc
test
mov
lods
lahf
adc
and
sysret
lret
mov
pop
pop
pop
add
xchg
ja
add
xor
daa
xchg
push
or
mov
cmc
repz
or
jecxz
adc
pusha
lret
xchg
out
pop
mov
addr16
dec
cmpb
push
adc
flds
adc
mov
clc
and
movb
cmpsl
fs
js
imul
add
mov
jne
aam
rorb
stos
lods
mov
test
outsl
xchg
push
data16
scas
in
push
lods
out
mov
loopne
xchg
cmp
test
mov
xlat
xchg
enter
xchg
fmull
dec
sub
fists
cmp
fdivrs
dec
xor
sbb
pop
and
lds
dec
xchg
push
pop
add
cmp
das
scas
scas
sub
sub
test
aam
ss
sub
push
cmpsb
cld
push
arpl
jge
popl
test
pop
in
leave
add
stc
loope
imul
in
xchg
inc
gs
lock
sbb
jl
sahf
aam
nop
scas
leave
jmp
mov
sbb
stc
cli
mov
iret
or
pop
and
lods
dec
sti
fs
mov
adc
dec
test
pop
sbb
call
fs
out
or
inc
mov
sahf
hlt
cmp
shlb
sbb
sub
dec
jmp
push
push
mov
aas
dec
pushf
pop
jl
gs
sbb
mov
xlat
rcll
je
in
jle
int3
scas
adc
imul
add
fimuls
mov
test
sbb
mov
int3
jecxz
faddl
cmp
test
adc
mov
mov
fwait
js
mov
cmp
add
xorl
fstpt
ret
imul
pop
cld
push
ja
inc
add
arpl
andb
lds
pushf
sahf
iret
push
push
movsb
out
pop
in
mov
clc
movsb
mov
cmovne
push
mov
shrl
pop
sbb
fsubs
je
icebp
fwait
mov
mov
mov
test
lahf
xor
inc
mov
dec
mov
sbb
fisttps
lock
and
mov
cmp
push
inc
fldl
pop
clc
xchg
mov
iret
sub
mov
shlb
daa
test
iret
push
loope
adc
ret
loopne
int
lock
lds
int3
rclb
and
push
push
sub
and
jl
scas
ret
sub
push
mov
add
pop
call
dec
leave
in
aad
xchg
push
popf
es
bound
jns
clc
loope
mov
add
xchg
mov
cmc
or
push
adc
sub
mov
pop
adc
testb
orl
ja
loop
sbb
pop
jo
lret
adc
mov
js
je
aad
add
adc
fiadds
in
out
aas
xchg
push
mov
jbe
into
in
out
mov
rcrl
out
outsb
mov
and
mov
sbb
jbe
pop
sbb
dec
mov
aad
mov
dec
test
xorb
adc
lods
cwtl
iret
cltd
lret
xor
mov
ror
sub
or
addr16
jns
stc
and
outsl
jg
mov
int3
and
or
stos
dec
jge
cmp
mov
stos
xor
cmpsb
xor
jno
loope
hlt
mov
in
jb
mov
mov
sahf
fnsave
lods
lahf
dec
pop
sahf
pop
or
rorl
pop
cs
shlb
sub
enter
push
dec
mov
popa
cltd
push
inc
in
xor
xchg
push
mov
add
fcmovu
dec
imul
roll
push
pushf
lds
push
pop
mov
in
insb
scas
std
lods
push
add
push
aas
mov
stos
aad
icebp
mov
fcoms
lret
push
pop
imul
mov
adc
jmp
inc
cmpsb
pop
push
and
movsb
cmp
jns
inc
pop
jle
add
out
add
inc
xchg
cmp
cmc
out
dec
xor
popa
xchg
mov
dec
adc
pushl
dec
cmp
mov
leave
adc
loop
in
cmp
inc
inc
addr16
or
cmp
imul
popa
mov
jo
mov
dec
adc
pop
cmp
movsl
push
sub
add
fnstenv
ljmp
fisttps
pop
hlt
jecxz
dec
xor
push
ja
adc
rolb
mov
add
je
xchg
rcl
push
adc
cmp
pop
push
inc
push
arpl
xorb
xchg
jne
mov
adc
adcb
mov
inc
in
cmp
ljmp
imul
sub
jae
mov
fimuls
roll
dec
sbb
xchg
es
dec
xchg
cmp
jmp
sbb
call
push
neg
mov
or
xchg
mov
movsl
repnz
and
pushf
jb
pop
pop
xchg
fwait
dec
and
mov
push
icebp
daa
ret
loop
insb
ja
int3
loope
stc
test
inc
das
mov
ret
or
dec
mov
lds
dec
lahf
pop
into
into
outsl
dec
mov
push
cld
in
ret
repnz
cmpl
adc
pushf
daa
sub
sub
push
inc
lods
add
jbe
xor
subl
iret
xor
cmpsl
cmp
mov
lods
sbb
mov
stc
push
xchg
cmp
push
mov
xor
aam
or
mov
ds
jnp
mov
lcall
sub
out
or
loopne
adc
jb
xor
xor
mov
leave
lret
sbb
dec
push
lret
mov
mov
in
sub
fisttpll
xchg
in
mov
inc
mov
dec
inc
cmp
jmp
mov
lcall
ret
xchg
rclb
add
inc
mov
sbb
pop
jo
mov
lret
mov
call
push
lret
xchg
jne
sbb
mov
sbb
data16
mov
ds
inc
inc
jle
push
nop
cmc
adc
mov
scas
std
mov
in
jo
inc
stc
movsb
mov
jnp
cs
add
and
outsb
xchg
lea
in
cmpb
cwtl
xor
fnstcw
push
push
xor
jb
cmp
call
mov
pusha
pop
cwtl
popf
rorl
mov
or
bound
dec
bound
vunpcklpd
adc
add
xlat
lcall
dec
shrb
add
push
hlt
fisttps
dec
daa
mov
sbb
mov
xchg
and
shlb
out
lds
shl
clc
les
sbb
popa
ss
lahf
ja
xchg
fidivrl
xor
cmp
lea
xor
inc
xchg
mov
mov
xchg
adc
loopne
popf
shll
dec
push
popa
sahf
out
pusha
dec
aad
popf
sbb
es
loop
cmp
mov
in
outsl
cmp
cmpb
in
dec
outsl
fwait
push
shll
and
inc
mov
fcoms
outsb
lds
ret
call
pop
jp
sbb
mov
loop
or
xchg
mov
lahf
push
icebp
add
inc
push
lret
stos
xchg
fdivrs
dec
ficompl
out
sbb
push
jg
loope
sub
jp
loop
iret
mov
add
xor
mov
aaa
or
push
in
loop
addr16
pop
imul
inc
and
fisttps
inc
xchg
dec
jp
test
rcrb
aam
jno
pop
push
fwait
and
push
fidivrs
push
in
sub
shr
jb
adc
data16
into
ret
das
data16
cmp
jp
popf
mov
or
push
lea
xor
mov
pop
mov
imul
test
lcall
sahf
inc
jecxz
cwtl
pop
stc
jbe
mov
bound
in
mov
and
in
jecxz
rclb
jecxz,pt
xchg
jg
mov
rcr
inc
mov
and
inc
push
sub
test
in
scas
fcoml
add
mov
stos
jmp
andl
mov
add
sbb
cli
rolb
or
push
push
mov
fisttpll
lahf
cwtl
ljmp
loop
or
dec
sub
in
inc
data16
jns
jecxz
rcrl
scas
mov
outsb
aad
mov
mov
popf
pop
push
xor
fldcw
les
cli
push
adc
xor
int
es
hlt
popf
arpl
out
addr16
xchg
sahf
xor
and
shr
fsubrs
ss
rcrb
fisubrs
in
or
enter
dec
xchg
xchg
lea
sbb
mov
ret
mov
bound
dec
scas
inc
pusha
jl
pop
add
das
mulb
adc
jg
mov
xchg
inc
sub
scas
rclb
sub
xchg
jmp
fcomps
sub
std
das
jne
mov
mov
out
clc
std
movsb
or
sub
adc
inc
pop
dec
push
mov
and
sub
cmp
dec
add
mov
and
je
inc
lods
mov
and
xchg
inc
lret
fists
cs
push
adc
pop
pop
xor
adc
sbb
pop
jno,pt
and
jnp
inc
test
jo
loope
lds
dec
lock
jmp
cmp
xchg
outsb
sub
pusha
clc
lret
dec
ret
clc
adc
pop
insl
add
jbe
icebp
aad
or
ljmp
xchg
je
mov
sbb
inc
daa
pushf
scas
loopne
lods
xlat
and
push
mov
xor
mov
fwait
or
xchg
mov
inc
cmp
int
arpl
or
icebp
add
popf
and
daa
sub
mov
pop
xchg
adc
js
mov
inc
inc
arpl
and
jb
push
movsl
pop
pop
in
adc
inc
arpl
sub
sbb
dec
jmp
mov
daa
clc
pop
mov
push
mov
xor
mov
mov
add
loope
pop
jnp
xchg
cmp
sub
sbb
inc
inc
movsb
mov
fiadds
fs
in
pusha
testb
adc
fsubrp
outsb
jbe
sahf
iret
shll
lret
fst
mov
sbb
pop
cmpsl
pop
rorb
mov
mov
jge
jmp
loope
sahf
push
cmp
add
int
dec
test
daa
mov
mov
add
ficomps
loop
pop
scas
leave
pop
ljmp
or
cwtl
mov
jl
mov
sbb
or
nop
adc
lea
fs
and
sub
das
add
or
cmp
xchg
pop
outsl
dec
xchg
insb
aas
je
xchg
addr16
cmp
je
and
push
sub
fs
cmp
popa
scas
fs
xchg
fwait
test
stos
lret
mov
adc
mov
in
notl
inc
pop
and
push
xchg
movsb
stos
xchg
cli
mov
dec
mov
push
push
in
dec
clc
enter
mov
xchg
xor
cmp
push
sbb
mov
fiadds
popa
mov
test
push
xorb
out
in
jle
popa
inc
cmp
mov
pop
jp
sbb
cmp
andb
in
mov
push
bound
jo
pop
add
in
vpand
pop
xchg
lahf
xchg
pop
push
and
hlt
push
cmp
rorl
add
ljmp
lods
xor
mov
ret
test
imul
cld
sbb
jge
push
adc
or
pop
lret
push
sbb
mov
xor
aad
int3
mov
add
xchg
xchg
xchg
aaa
icebp
add
mov
xor
add
mov
fsubl
mov
xchg
jns
push
and
inc
gs
add
fsub
mov
xchg
add
push
or
in
mov
xor
inc
mov
push
imul
inc
and
cmpsb
loope
xchg
dec
or
ljmp
inc
clc
mov
inc
insb
rcl
std
inc
loope
incl
test
dec
mov
pop
jns
push
test
push
xchg
mov
adc
mov
xor
out
xchg
repz
out
mov
or
scas
cmp
pop
loop
sub
inc
stos
scas
scas
sub
adcb
xor
mov
adc
iret
inc
data16
pop
ss
lcall
adc
cmpsl
xchg
aas
mov
push
aaa
lret
mov
add
adc
push
jb
inc
pop
out
add
jns
xorb
xchg
add
das
lds
mov
pop
adc
dec
push
pop
pop
xchg
ljmp
enter
mov
sbb
cmpsb
push
mov
pop
and
fwait
pusha
daa
hlt
mov
jl
outsb
push
dec
push
jge
mov
xchg
xor
and
imul
push
stos
iret
pop
add
pop
xor
mov
lods
add
pop
fldcw
loopne
popa
push
jbe,pn
sub
cmp
sub
sahf
fwait
xchg
adc
popa
xor
fs
lret
loope
add
pop
mov
pop
cwtl
ret
mov
jle
sbb
sub
es
pop
xchg
jns
repnz
sbb
xlat
sub
negb
inc
cmc
lret
mov
mov
pop
sbb
inc
xchg
mov
pop
enter
and
outsb
xor
ja
les
xor
mov
mov
xchg
jge
jno
inc
add
lods
jo,pt
out
mov
pop
adc
fs
shlb
out
sub
repz
loop
add
ds
sub
xor
movl
fst
leave
sub
push
lret
adc
lahf
xor
or
hlt
nop
js
insb
jl
sub
xchg
test
sbb
inc
in
jmp
pop
cmp
and
jns
fwait
in
and
mov
cmp
add
xchg
adc
jbe
adc
mov
adc
push
cmp
fwait
jne
das
cmpsl
fstps
and
rorb
test
xor
call
jno
push
push
scas
in
lods
fists
ljmp
mov
aaa
aas
scas
das
mov
and
push
pop
mov
lret
mov
xor
xchg
enter
rcrl
in
push
andb
cmc
dec
xchg
cli
insb
in
mov
shlb
aas
loop
cmp
xlat
pop
mov
and
cmpb
ret
pop
mov
adc
ret
aaa
sarl
sahf
cmpsl
cs
popf
call
xchg
stos
jns
test
int
jecxz
int3
adc
ret
int
and
lods
inc
and
shrb
dec
pop
fldcw
push
cmp
pop
int3
in
cld
adcl
push
lret
xchg
push
or
pop
mov
fisubrs
adc
cmp
pop
cmp
clc
mov
rolb
push
shrl
ret
cli
jge
or
mov
lds
fdivrs
adc
in
loopne
add
mov
mov
stos
aad
push
mov
adc
mov
mov
fcomps
mov
loopne
cmp
sahf
repz
addr16
push
jo
lods
mov
push
cmc
test
sub
xchg
out
imul
sbb
fs
pop
stos
in
cmpsl
andb
xchg
xrelease
add
call
out
sub
shll
pop
test
sti
push
xchg
jmp
aas
mov
nop
pop
cld
popf
shrl
add
xor
jp
push
loop
pop
test
je
dec
shll
pusha
das
fildl
sarl
sbb
mov
out
arpl
jae
jmp
push
roll
dec
push
loopne
test
jo
test
into
out
mov
cs
pop
clc
or
sahf
lods
movsb
arpl
mov
and
inc
add
lock
cli
and
addr16
cmp
mov
imul
sbbb
sti
lock
cmp
fs
pop
and
and
cwtl
lahf
sub
or
fcompl
lock
inc
sbb
pop
xlat
call
addb
in
lods
mov
pop
in
fisttpl
inc
mov
sub
aam
rcrb
sub
stc
inc
push
sbbl
out
sahf
enter
push
xor
iret
test
mov
mov
aam
mov
es
cltd
add
lcall
mov
cwtl
jb
ja
adc
dec
jo
mov
sbb
push
cmpsb
xchg
fadds
pop
imul
cwtl
into
gs
mov
jl
xor
mov
gs
test
cld
sub
outsb
rcll
add
jmp
pop
push
test
cmp
ret
mov
in
mov
mov
adc
ret
cmpsb
add
mov
addr16
les
jo
mov
imul
sbb
cmp
int
sub
dec
out
cld
decb
gs
xor
dec
dec
and
stos
in
into
sbb
jl
adc
push
xchg
or
sbb
jne
and
inc
or
inc
jns
jmp
sbb
mov
jmp
adc
jg
test
ficompl
and
rorl
push
inc
mov
mov
inc
xchg
daa
lock
insb
pushf
imul
mov
lods
xor
shl
jae
fnsave
ret
popa
cmc
out
ret
sub
sub
cmp
dec
clc
inc
push
mov
add
clc
xor
pusha
cmp
addr16
add
outsb
sbb
mov
movsl
or
fidivs
stos
adc
icebp
aad
sti
and
xchg
leave
jb
pop
inc
jns
xchg
daa
cmp
daa
or
negb
or
sbb
je
mov
inc
out
in
loopne
xchg
xchg
int3
sbb
push
mov
xlat
inc
mov
jne
fisubrl
sub
aas
jge
out
insb
push
loope
xchg
jbe
pop
in
push
aaa
lret
mov
cmp
add
test
lods
cmp
push
mov
xchg
icebp
roll
jge
pop
mov
mov
dec
cmpsl
lods
inc
xor
adcb
je
jbe
repz
add
xlat
stos
and
iret
mov
test
mov
lods
sahf
xor
inc
rcll
inc
pop
pop
int
xchg
pop
jl
jp
xor
mov
int3
sbbl
adcb
dec
fcmovbe
gs
dec
ret
scas
jb
repnz
and
psllq
in
and
out
mov
jne
cli
mov
rol
pop
test
mov
mov
cmp
mov
or
xchg
sbb
das
or
bound
loop
pop
fbstp
lcall
cmp
jle
inc
leave
es
rcrl
ljmp
cs
insb
lret
jl
dec
rcrl
pop
sbb
mov
jmp
adc
test
fsubs
shrl
adc
mov
push
xor
mov
sti
pop
fldenv
mov
xlat
adc
imul
stc
in
frstor
cmp
adc
push
or
add
push
test
jmp
mov
pop
mov
cmp
pop
dec
sbb
jno
mov
push
ds
outsl
testl
xor
xlat
jle
jmp
push
xor
jne
cmp
adc
or
pop
inc
testl
sub
bound
daa
inc
cmp
mov
dec
cmp
out
xchg
dec
inc
dec
and
mov
mov
sub
xor
mov
cltd
xor
inc
cwtl
stc
sbb
mov
test
scas
add
and
sbb
mov
sbb
rcrb
sub
push
add
imul
or
cmc
sub
jb
or
jle
pop
test
mov
xchg
ds
pop
cmc
and
lods
in
add
lret
push
fwait
testl
cmpsb
xorb
mov
pop
sbb
jns
mov
add
mov
pop
xlat
or
mov
mov
repnz
cli
xor
mov
jmp
in
gs
mov
push
ret
test
jno
not
jae
xchg
cmp
imul
jno
xor
fcomi
hlt
add
in
pop
outsl
mov
xchg
adc
lahf
fwait
outsb
xor
dec
xor
or
ret
int3
lret
and
push
scas
test
adc
repz
adc
lds
insb
addr16
addr16
aam
out
arpl
dec
neg
bnd
js
outsl
xchg
testb
jb
sbb
es
popa
push
fidivrl
int
shrl
scas
lret
aam
cmp
pop
pop
dec
push
rcll
aam
dec
push
push
imul
xor
cmc
lds
inc
outsb
pushf
mov
repnz
xor
mov
mov
out
clc
xchg
sahf
pusha
ss
cmp
rolb
cltd
stos
std
cmp
dec
subb
push
cmp
jns
xor
or
insl
bts
xchg
scas
push
insl
add
mov
cmpsl
cltd
in
dec
repnz
pextrw
repz
popf
rol
repnz
push
add
lcall
and
mov
inc
adc
loope
sbb
pop
dec
les
int
lods
or
cmpsl
gs
fstpt
pop
mov
or
pop
shrb
js
aad
and
push
imul
mov
dec
xor
test
mov
mov
into
popf
daa
fcoms
push
mov
mov
inc
dec
inc
pop
mov
mov
shl
adc
push
pop
mov
outsb
cltd
arpl
out
mov
rorb
loopne
cwtl
jge
bound
hlt
es
mov
and
in
adc
mov
inc
pop
aas
add
sub
mov
xor
xor
xor
cmp
mov
outsb
mov
ss
cmpsl
cs
push
jbe
jecxz
imul
stos
inc
ss
inc
mov
mov
xchg
hlt
test
sub
push
sbb
mov
std
cmp
xor
mov
and
or
push
pop
mov
stc
pop
dec
insl
jmp
inc
fidivl
nop
in
adc
push
pop
lcall
arpl
mov
aam
mov
pop
or
mov
push
fsub
loopne
aad
fwait
in
pop
xor
in
in
cld
adc
push
lret
nop
into
jg
push
xor
xor
stos
sub
jo
rol
inc
mov
outsl
ret
or
dec
sbb
fisubl
push
addr16
xchg
into
scas
aaa
mov
int
or
adc
jmp
push
stos
aad
mov
mov
or
ja
cmp
sub
movsb
jge
add
pop
xor
mov
fwait
mov
cmp
mov
ss
push
and
test
out
or
xchg
leave
shrd
sub
ds
lahf
fisubl
xchg
mov
xchg
dec
jmp
decb
cmpb
cmpsl
inc
aas
outsb
cmp
dec
pop
outsl
push
jp
ret
mov
addb
leave
daa
lods
mov
mov
mov
cmp
in
mov
lea
scas
mov
jns
inc
mov
cmp
notb
popf
int
pop
adc
fsincos
sbb
negb
hlt
push
jg
or
loope
add
mov
fdivrl
ret
mov
ljmp
mov
hlt
sbb
out
into
iret
sub
or
sbb
mov
mov
xchg
mov
inc
xchg
sub
inc
sbb
mov
dec
mov
pop
out
mov
cmp
push
dec
loope
pop
and
sahf
xorb
nop
in
mov
pop
das
lock
jecxz
mov
mov
cmp
add
add
xchg
dec
ljmp
test
movsl
mov
jmp
xchg
js
fstps
push
stos
in
add
sti
cwtl
cmpl
test
jo
inc
sbb
lods
adc
rclb
jge
mov
pop
sarb
pop
in
sbbl
pop
inc
int
mov
inc
iret
xor
push
in
hlt
fstpt
leave
mov
push
das
jb
sub
rolb
out
cmpsb
cmp
lret
mov
xor
jae
push
mov
push
ds
pop
jecxz
outsl
xchg
cmc
mov
or
inc
cmpsb
mov
pop
out
sbb
xchg
and
sbb
inc
jg
sbb
or
movsl
lock
shrb
imul
into
pop
mov
cmpb
sub
stos
out
xor
adc
pop
loop
mov
fidivl
and
mov
popf
or
xrelease
ljmp
mov
push
mov
adc
jns
cli
push
loop
pushf
dec
ja
xor
shlb
xchg
sbb
add
stos
out
or
pop
popf
sub
in
and
mov
sbb
jo
sub
imul
iret
sub
shll
mov
repz
nop
mov
fwait
jp
nop
dec
xor
cltd
imul
js
jg
jecxz
cmp
dec
loopne
imul
mov
add
pop
std
jl
ja
pushf
xchg
or
aas
sub
mov
test
arpl
mov
xlat
cld
pop
test
xchg
jb
mov
mov
imul
add
sub
lcall
out
sahf
loopne
lcall
sbb
data16
adc
shrl
push
xchg
imul
push
xor
je
dec
repz
std
data16
pop
repz
ret
cmpsb
imul
jmp
sub
mov
subb
cmpsl
leave
lcall
xchg
or
cwtl
xchg
jno
mov
mov
orb
and
and
dec
ljmp
xchg
repnz
mov
dec
and
push
cmp
add
loopne
lock
push
iret
fstl
fwait
jl
adc
xlat
and
xchg
test
sub
aad
pop
push
mov
bound
add
mov
adc
mov
mov
mov
jmp
test
scas
or
in
aam
int3
push
std
adc
imul
mov
in
stos
mov
mov
insl
rol
lret
fucomi
pop
repnz
in
inc
hlt
adc
popa
jbe
idivb
adc
adc
loopew
or
loopne
fidivs
or
add
in
les
sbb
adc
es
iret
addr16
dec
mov
jnp
inc
out
and
adc
lret
pop
cmp
jg
jne
andl
dec
sti
mov
sbbb
adc
sbb
push
shl
out
push
aaa
sub
push
inc
adc
push
pop
insl
lret
clc
add
das
rolb
jg
jns
das
mov
jno
cli
push
mulb
sub
jo
inc
and
jae
in
movl
lods
popa
or
das
pop
insl
popa
es
adc
shrl
push
jo
out
mov
fnstsw
out
outsb
fucom
aaa
jg
jg
xchg
sbb
subb
sbb
fadd
cld
mov
sub
pop
out
fstpl
dec
pop
add
push
mov
mov
nop
pop
push
pop
ljmp
sub
test
sti
bound
xchg
inc
mov
lret
icebp
jnp
xchg
daa
mov
int3
adc
jno
roll
xchg
dec
gs
popa
aad
xor
push
cmp
popf
ss
add
outsb
sbb
add
inc
pushf
andl
mov
call
jno
mov
jne
ds
jo
push
sub
in
cwtl
mov
sbb
sub
push
nop
cmp
add
or
negl
add
fsubp
fwait
icebp
int3
xor
add
mov
adc
xor
or
aam
inc
sarb
sbb
mov
dec
pop
scas
sbb
data16
add
lea
ja
push
jl
ret
pop
pop
jp
mov
xchg
pop
and
jae
jnp
test
jnp
xchg
dec
adc
sbb
adc
push
and
xor
pop
mov
mov
add
pop
call
xor
xchg
mov
pop
inc
aam
pop
insl
pop
lret
popf
pop
andl
inc
mov
xor
shlb
jge
cmp
loope
mov
mov
push
push
mov
add
jp
push
sub
sbb
inc
dec
je
pop
adc
inc
adc
clc
test
pushf
adc
mov
je
cmpb
pop
push
sub
jl
push
clc
cmp
dec
outsb
sbb
adc
jne
pop
sbb
add
out
orb
adc
pusha
mov
xor
into
adc
xor
gs
xor
inc
adc
jb
in
cmpsb
and
ljmp
dec
or
scas
pop
daa
imul
arpl
sbb
jnp
and
cmp
stc
clc
shlb
daa
add
jl
iret
daa
andb
cmp
shrl
lock
mov
imul
cmpsl
mov
dec
xlat
loope
leave
mov
xor
push
sub
sbb
push
das
push
pusha
stos
sub
jae
aad
adc
mov
ss
xor
cmp
scas
mov
mov
sbb
adc
sub
mov
imul
lods
xchg
in
hlt
imul
mov
or
cmp
aas
inc
sub
pop
pop
sbbl
out
out
mov
subb
sub
and
ret
popf
andb
mov
xchg
adc
sahf
sbbb
xor
pop
inc
adc
cmp
movsb
lods
repnz
mov
and
sbbl
jne
in
dec
add
cmp
inc
pushf
incb
lcall
lods
mov
sub
fisubrl
push
mov
dec
mov
fs
aad
push
xor
adc
fbld
xorb
push
inc
or
inc
ret
or
sbb
es
loope
mov
nop
ja
leave
xchg
or
cmp
cli
jo
arpl
into
xchg
adc
or
cltd
sub
jmp
dec
inc
testb
fidivrl
pop
leave
dec
insl
sub
cmp
pop
inc
jmp
mov
jge
mov
movsb
cmp
loope
xor
push
xchg
xchg
sbb
int3
mov
xchg
add
push
dec
rorb
fwait
xor
in
xor
jnp
fcomi
gs
push
xchg
push
pop
mov
push
jl
inc
aaa
jbe
cmp
sarb
bound
adc
mov
cmpb
lock
pop
pusha
push
and
aaa
pushl
sub
lock
mov
fdivrp
sarl
mov
pop
in
test
mov
movsl
or
repz
orb
mov
jno
jno
inc
fbld
aam
stos
std
ds
sub
ja
decb
nop
ret
lahf
adc
fisubrs
pop
jle
ja
push
nop
sub
rcll
pop
dec
cmc
fstps
mov
sub
out
dec
push
test
cmp
mov
lock
dec
mov
mull
test
and
xchg
test
mov
scas
mov
mov
je
add
mov
ljmp
and
fisubl
cmp
add
jmp
cmp
inc
in
das
rolb
movsl
inc
push
shr
dec
hlt
aaa
pop
xor
pop
sub
add
daa
pop
out
add
adc
fwait
push
xchg
sahf
pop
sbb
and
dec
cmpsb
add
mov
jp
aaa
xchg
jp
nop
and
xchg
jno
add
call
dec
push
mov
rcll
test
roll
add
loop
jl
test
and
cmc
xchg
or
repz
pop
adc
imul
add
mov
mov
insb
sbb
cmpsb
ljmp
sub
lods
in
sub
sbb
push
jp
push
push
add
scas
rol
in
shll
cltd
sub
xchg
xchg
sub
loop
jp
fidivs
inc
push
in
mov
ss
push
out
mov
mov
lods
and
cmp
jbe
and
adc
aad
fcoms
add
ja
pop
repz
or
mov
cltd
inc
jg
fs
test
dec
push
jbe
dec
cwtl
in
pop
aad
nop
mov
hlt
pushf
cmp
dec
mov
in
roll
call
lods
mov
jne
xchg
outsl
sub
mov
mov
rol
fidivl
ds
sub
fsubs
add
jo
push
fstps
and
xchg
xchg
aad
cmp
xchg
rcll
imul
jge
pop
jecxz
addr16
adc
dec
bound
jo
jg
push
push
mov
cmp
push
addr16
cld
mov
push
sti
loopne
lahf
ja
xchg
jmp
push
nop
mov
jl
push
js
divb
xlat
sti
push
psubsb
scas
mov
cli
xchg
dec
ret
imul
stc
cmp
pop
xchg
and
out
inc
pop
cmp
sbb
scas
ror
ljmp
aas
push
cmpsb
fildl
inc
xchg
mov
iret
cld
loope
popa
repnz
mov
cmp
sbb
cmp
sarl
das
insl
cmp
je
lds
les
mov
or
data16
hlt
xor
mov
iret
or
inc
dec
push
fwait
mov
mov
js
repz
mulb
mov
xor
or
cwtl
test
lcall
leave
lahf
jae
jl
xlat
test
xor
iret
mov
mov
addb
das
test
cmpsb
xlat
mov
cmp
adc
out
rcrb
hlt
cmpsb
mov
inc
push
cltd
data16
jp
dec
lret
and
mov
in
and
jno
xor
imul
xor
icebp
lahf
jg
mov
ds
or
or
movsl
adc
pop
mov
xor
lods
fidivs
addr16
add
dec
or
out
out
pop
int3
jp
cld
sarl
cld
in
decl
sub
cmp
mov
lret
lahf
aam
ret
inc
jge
inc
lcall
clc
scas
jmp
fbstp
and
mov
cld
jae
mov
loop
repnz
dec
xchg
dec
pop
nop
pop
dec
push
jecxz
add
ds
inc
and
sub
push
mov
xor
adc
jg
dec
mov
das
pop
imull
andb
sub
add
arpl
push
xorb
dec
add
mov
shll
adc
cli
push
test
outsl
jecxz
xor
dec
in
into
xor
enter
or
mov
sbb
es
inc
movsb
inc
in
shll
bound
test
shlb
sub
pminub
inc
or
sub
jmp
aaa
jmp
xor
shr
iret
imul
je
mov
mov
pop
jnp
repz
int3
xchg
dec
add
ljmp
jmp
xor
pop
data16
jecxz
xor
jns
jg
fdivrp
push
loop
cmp
mov
mov
out
add
inc
and
hlt
jnp
push
je
rol
out
sub
push
sub
loope
mov
shl
push
stos
mov
jbe
cmp
xchg
adc
inc
sub
sub
or
mov
aas
inc
fincstp
cmp
loopne
push
and
xor
inc
lods
jle
test
add
loope
pop
adc
loope
sbb
mov
inc
idivb
xor
jns
hlt
fadds
arpl
add
cld
sbb
inc
mov
hlt
int
cwtl
jmp
pop
arpl
in
dec
cmp
mov
lret
pop
popa
out
shl
mov
subb
outsl
ret
in
ds
adc
add
test
ret
adc
movsb
popa
add
orb
inc
fnsave
or
push
inc
sub
dec
repz
lods
xchg
sub
push
mov
cwtl
dec
sub
jbe
inc
jb
xor
out
xor
hlt
scas
adc
push
icebp
jo
xchg
or
push
loop
bound
inc
mov
sbb
mov
xor
into
lahf
sahf
and
push
mov
pushw
jp
int
mov
test
dec
rcrl
push
sub
xor
xor
fadd
or
cmp
mov
inc
out
test
and
out
cltd
outsl
mov
pop
and
mov
nop
mov
dec
push
sbb
sub
or
inc
out
xchg
leave
fadd
jge
jp
aaa
and
inc
enter
ljmp
and
lret
sbb
jge
mov
pop
aaa
inc
mov
sub
cli
test
mov
adc
inc
add
jns
or
xor
enter
nopl
sub
stos
dec
pushf
fcomi
out
mov
in
ja
mov
cmp
sub
adc
fiadds
inc
pop
ret
cli
ds
clc
or
add
add
dec
jecxz
mov
frstor
mov
cmp
fstp
push
push
outsb
dec
sub
or
lock
mov
loopne
in
dec
subb
imulb
sarl
sbbl
insl
nop
add
gs
or
pop
fincstp
adc
jge
adcl
stos
sbb
and
das
imul
xchg
shlb
xchg
stos
ret
movsb
scas
push
jge
aam
std
xchg
js
dec
inc
test
jnp
call
fdiv
jbe
inc
cmc
mov
add
inc
push
add
data16
pop
sbb
out
xor
shlb
stos
mov
popf
mov
sbb
gs
mov
sbb
nop
imul
adcl
arpl
xor
xchg
jb
cwtl
pushf
clc
in
pcmpeqd
sbb
mov
adc
add
and
xor
popl
and
imul
mov
or
das
pop
inc
mov
outsb
inc
dec
mov
cli
insb
and
je
mov
jecxz
iret
push
lret
push
sti
xlat
inc
andb
xchg
jne
mov
testb
fbstp
cwtl
xorb
sbb
cwtl
std
sbb
ret
popf
mov
cmpsl
lret
push
add
int
mov
add
cli
loop
xor
mov
dec
mov
pushf
pop
adc
add
xor
int
fsubl
jmp
push
ja
leave
out
sub
xchg
mov
fistpll
mov
stc
fidivl
scas
test
fsubs
jo
std
mov
fisubrl
push
fdivr
push
das
shlb
nop
sub
mov
jne
or
xchg
xchg
pop
cmp
cmp
jns
clc
mov
adc
xor
mov
iret
and
mov
or
sbb
add
xchg
xchg
add
xor
dec
fs
sbb
pop
adc
mov
pop
dec
push
sar
adcl
mov
or
pop
lock
mov
andl
mov
js
sub
inc
sahf
mov
scas
jnp
cmp
int3
xchg
movb
xchg
inc
outsl
dec
inc
mov
and
or
add
inc
lcall
lock
pop
out
pushf
push
mov
popa
mov
inc
mov
aas
leave
inc
dec
lods
push
sub
popf
lods
xchg
fimuls
xlat
jmp
sub
xor
sub
mov
out
push
ljmp
pop
jne
xlat
cld
imul
push
rcl
cmpsb
adc
dec
adc
pop
mov
fisubs
loop
out
data16
repnz
adc
js
fcmovnbe
mov
xor
andb
push
dec
outsb
pop
orb
cmpsb
daa
popa
out
inc
dec
jg
call
sub
pop
gs
xor
push
insl
nop
mov
or
aad
sub
xchg
call
pop
sub
jbe
out
fstpl
cwtl
mov
fbld
dec
mov
cmp
mov
pop
or
dec
cmp
fcoml
in
xor
loop
xchg
sahf
popa
ljmp
xchg
in
outsb
mov
mov
adc
cmpsb
notl
lods
mov
mov
out
cmp
cmp
mov
mov
mov
int
adc
out
cmpsb
lahf
pop
dec
jns
adc
adc
add
je
cmp
aaa
xor
push
xchg
loop
testl
mov
imul
fnsave
es
cmpsl
adc
cwtl
cmpb
rolb
add
jnp
fdivrs
mov
mov
mov
adc
jmp
and
and
es
sysret
out
sahf
or
out
inc
push
pop
pushf
sbbb
out
ret
or
inc
outsb
into
movsb
jnp
cwtl
ja
add
lcall
mov
jmp
out
lahf
sbb
in
sbb
or
mov
xchg
mov
gs
adc
pop
js
loopne
int3
cmp
in
mov
jg
loopne
sub
aaa
aam
cmp
lods
and
push
icebp
repz
pusha
into
je
mov
fwait
popa
aas
push
outsb
push
adc
mov
mov
mov
popa
add
mov
push
mov
enter
dec
xor
xchg
push
mov
test
add
add
pause
stos
jmp
mov
adc
mov
adc
xor
pop
sub
lods
mov
cwtl
lret
add
or
loop
jp
lods
dec
cmp
or
mov
shrl
jb
jb
fstp
jmp
inc
mov
jl
scas
mov
pop
adc
pop
outsb
and
stos
jae
push
cli
dec
test
mov
xchg
sub
decl
divl
push
jb
adc
sub
mov
inc
push
adc
push
bound
aas
outsb
jle
sahf
xchg
push
and
imul
incl
cli
gs
int
sahf
out
lds
push
hlt
mov
push
pop
loopne
mov
mov
pop
cli
adc
jo
in
push
add
mov
test
or
jmp
fdivrs
pop
sub
add
data16
mov
xor
cmp
insb
xor
fists
sub
cs
sbb
xorb
pop
jmp
fnstsw
pusha
xor
rcl
adc
xlat
or
adc
add
xchg
dec
xchg
test
xor
arpl
mov
lea
xor
mov
lock
xchg
inc
jge
add
push
add
pop
lea
lret
or
in
int3
mov
daa
shrb
movsb
inc
int
xchg
mov
scas
cwtl
gs
sub
lret
gs
int3
pop
pmulhw
rclb
adc
mov
inc
inc
inc
pop
jle
push
fstp
or
xor
popa
and
mov
rorb
sbb
cmp
in
jne
xlat
test
pop
sbb
loop
out
loop
jo,pn
test
jne
cmp
dec
pop
test
divl
sbb
inc
lock
inc
add
adc
pop
pop
lret
das
lods
pop
push
in
add
lods
mov
or
push
cltd
lods
push
ss
fadd
add
sbb
sbb
and
cmp
sarb
cwtl
cs
ds
das
insl
js
les
cmpl
pop
xor
mov
loope
sar
repz
inc
cmp
dec
push
mov
jmp
adc
pop
mov
mov
call
and
cld
jecxz
lahf
mov
jge
mov
jo
ljmp
xor
sub
inc
mov
mov
and
pop
es
mov
or
out
fldt
fcomps
xchg
lret
adc
nopl
pop
sbb
testl
mov
mov
fldl
lret
ljmp
lret
pop
pop
das
jne
int3
dec
mov
adc
dec
or
hlt
ret
push
mov
test
mov
repnz
pop
lds
xor
xchg
sti
ja
mov
push
xchg
inc
xor
jbe
pop
xor
cmp
scas
inc
les
push
push
add
cmp
inc
xor
cs
cmpsb
test
inc
jno
rclb
leave
mov
inc
or
orb
pop
in
imul
mov
dec
xchg
push
mov
sub
inc
shlb
sbb
int3
sahf
jle
or
inc
lods
sbb
rol
pop
sub
stos
jbe
aad
and
lds
jae
in
lock
push
into
sbb
cmp
fimuls
cmpsb
rcrl
int3
xchg
pop
jp
xchg
mov
out
mov
icebp
push
fdivs
jb
loope
and
cmp
add
nop
sbb
lods
je
add
pop
xchg
cmp
xchg
out
mov
movsl
in
jnp
xlat
mov
mov
ds
lods
cmpsl
mov
jmp
aam
sahf
sahf
mov
es
or
xchg
insl
out
adc
hlt
cmc
xchg
push
bound
icebp
jle
push
mov
pop
lret
inc
adc
mov
ja
sbb
in
daa
in
xor
test
or
inc
inc
sub
cld
stos
adc
lahf
imul
mov
dec
lods
ror
push
pusha
mov
pop
sub
mov
clc
rol
fistps
jnp
or
mov
inc
nop
loop
call
imul
fisttpll
jge
leave
adc
push
addr16
stc
pop
jb
mov
jbe
icebp
in
cltd
pop
xchg
rolb
popa
cld
movsl
mov
imul
mov
inc
rcrl
popa
nop
inc
and
pop
loope
in
pop
sbb
mov
mov
addr16
das
inc
push
pop
jg
mov
jmp
xchg
mov
pop
pop
add
mov
popa
ss
push
jg
cld
dec
cmp
insb
xchg
push
pop
xor
pop
xlat
or
sarb
jnp
adc
test
fwait
rol
xor
lods
nop
iret
sbb
pop
mov
and
cli
jge
dec
inc
sbb
lock
xor
daa
add
push
jns
or
imul
in
pop
rol
lods
inc
mov
add
gs
cmp
dec
mov
and
pop
mov
lahf
mov
jo
cltd
xor
sub
std
pop
jbe
xor
out
or
vpsubd
stos
add
in
lahf
lods
mov
out
bound
jmp
add
adc
jmp
aas
out
shll
add
sub
sub
sub
xchg
sbb
adc
inc
ja
push
dec
push
dec
rclb
shll
or
hlt
xorl
mov
xchg
adc
cld
jge
in
add
mov
lods
adc
jne
mov
jmp
pop
fmull
add
addl
popf
aad
loopne
lret
in
cmpsb
cmpsl
or
gs
faddl
jl
ss
pop
mov
inc
je
sbb
lea
or
out
orb
sahf
adc
fisubrs
mov
mov
push
jg
dec
roll
sbb
lea
sbb
pop
loopne
test
adc
shl
dec
jmp
lods
inc
test
imul
lock
cmp
outsb
pop
pop
test
xchg
dec
out
les
stos
shrb
orl
cmc
cmp
mov
movsl
or
loope
repnz
je
inc
xchg
push
xchg
push
movsb
mov
fwait
dec
subl
lods
adc
cli
mov
nop
andb
xchg
mov
xchg
xchg
jns
dec
fisubrl
ss
and
inc
pop
cmp
push
mov
xchg
add
jecxz
or
out
sahf
push
enter
pop
dec
jecxz,pt
out
mov
dec
test
xor
and
inc
mov
inc
inc
filds
cmc
add
sbb
in
inc
lods
mov
jo
pop
fdiv
push
mov
jl
lahf
xchg
dec
push
out
xchg
cmpsl
sub
cmp
mov
and
pop
or
stos
sub
mov
dec
rclb
popf
out
add
incl
mov
ljmp
jbe
mov
lods
test
adc
and
lret
xchg
pop
cwtl
sarb
out
dec
xchg
mov
pop
in
js
lret
into
mov
add
mov
out
jnp
add
out
pop
into
sbb
sub
jg
aad
inc
add
dec
and
push
cmpl
jae
xor
fidivrs
pop
js
ror
stos
inc
lcall
cs
mov
mov
jmp
movsl
and
push
add
pop
test
pop
shlb
subl
out
xchg
int
imul
in
cmp
jp
lcall
xchg
add
ficoms
inc
pop
out
mov
out
je
xor
sub
ret
int3
adc
pop
out
in
pop
cwtl
inc
cmp
push
in
mov
dec
push
cld
cmp
mov
xor
outsl
xlat
std
jecxz
dec
test
cmp
js
push
arpl
jle
mov
icebp
outsb
in
sub
lahf
mov
and
xchg
sti
daa
test
sti
roll
pusha
sti
int3
mov
cwtl
stos
ret
pop
scas
pop
rcrb
push
adc
in
sgdtl
stc
or
ret
je
jb
mov
dec
orb
jae
int
in
cmp
sub
outsb
dec
imul
jmp
movsb
dec
adc
loopne
adc
outsl
rolb
add
das
dec
fdiv
movsb
adc
shlb
or
xor
xchg
jb
scas
adc
fldl
jb
call
insb
negl
insl
jge
leave
xlat
add
mov
cwtl
fisubs
ljmp
cmc
outsb
push
sub
inc
mov
mov
dec
mov
sti
pushf
repz
ljmp
xchg
cmpb
aas
lods
out
loop
shr
pop
sub
push
sbb
pop
lahf
push
push
cmp
lods
in
xchg
and
pop
pop
cwtl
mov
push
dec
shll
fdivrp
or
jmp
sbb
stc
rcrb
inc
loop
ret
movsb
mov
pusha
mov
and
aaa
imul
leave
mov
xchg
fsubl
and
cld
aad
sub
adc
mull
sub
insl
out
not
dec
in
and
sbb
icebp
popf
and
jp
adc
shll
mov
or
mov
sbb
jae
sub
push
arpl
xchg
in
imul
int3
ja
je
fwait
pop
aam
je
xor
adc
mov
lret
test
dec
cmp
loopne
lods
in
lods
pusha
testb
xor
andb
mov
jmp
jb
mov
mov
test
xor
shl
jne
add
daa
pop
push
insl
notb
push
cld
lods
adc
dec
sbb
push
dec
cmpsb
sub
cli
or
jae
pop
xchg
shll
cmp
out
pop
cwtl
outsb
or
jno
xlat
adc
mov
outsl
rclb
adc
xor
inc
in
lock
mov
or
sub
pop
cld
lret
adc
add
sbb
popa
cmp
mov
mov
loope
inc
cmp
add
addl
add
dec
ja
mov
mov
sbb
mov
mov
add
xchg
jle
cmp
dec
cmpsl
fidivs
popa
inc
iret
ljmp
inc
outsl
pop
shlb
in
pop
sub
adc
mov
fstpt
movsb
sbb
add
jo
int3
adc
mov
jbe
fdivrp
push
pop
xchg
push
fs
je
pop
lods
mov
std
sarb
sub
pop
pop
sbb
dec
add
int3
pop
lret
bound
fistl
rorl
and
js
cmp
sti
mov
adc
sbb
out
das
std
and
stos
jmp
into
imul
pop
push
ss
xorl
insb
std
imul
aad
xchg
or
push
fs
movsb
sub
lods
jecxz
xor
cmp
clc
jae
pop
xor
xchg
jle
je
in
mov
sbb
fbstp
cmp
mov
or
lret
loopne
mov
loop
xchg
fwait
call
scas
orl
pop
jbe
loope
out
inc
jbe
adc
mulb
ficoms
mov
adc
pop
push
jp
and
pusha
dec
dec
inc
sbb
mov
call
ja
in
xchg
push
xlat
jp
scas
cwtl
sub
push
pushf
std
jo
ss
test
jo
fldl
inc
dec
enter
clc
jecxz
xlat
in
andl
jae
xor
push
and
xchg
add
mov
mov
mov
jno
push
push
mov
aaa
scas
scas
arpl
jbe
in
icebp
fcoml
lds
mov
outsl
push
int
cmp
addl
fwait
xor
loop
das
popa
cmp
lea
not
outsb
pop
sub
mov
icebp
and
repz
jnp
mov
mov
nop
cmp
sub
inc
lods
mov
rorb
xchg
mov
and
dec
sahf
subb
pop
mov
sub
jecxz
pop
jae
mov
pop
imulb
add
cmp
ss
enter
jnp
xchg
inc
ss
pop
xchg
pop
push
jmp
push
call
test
js
sub
repnz
daa
cmpsb
mov
inc
pop
sub
adc
mull
outsb
and
xchg
popa
dec
out
and
pop
arpl
xchg
addr16
enter
xchg
aam
repz
push
mov
jns
sub
sbb
sbb
inc
cmpsb
dec
out
neg
sti
rorl
push
mov
pop
mov
sti
movsl
cld
loop
push
popa
hlt
out
xlat
gs
stos
xor
inc
mov
outsb
arpl
test
addr16
cmp
movb
imul
xchg
adc
mov
cmc
jae
mov
cld
lods
bound
orl
sti
sahf
dec
mov
sahf
test
roll
clc
lock
popl
shlb
mov
lret
pop
repz
mov
cmpl
lret
ror
xor
xor
out
mov
lea
rcrb
xchg
mov
mov
cwtl
push
mov
or
sub
movsl
ficomps
jle
or
jl
sbb
or
cmpsb
scas
lcall
jne
mov
popa
ficoml
xchg
bound
dec
adc
ja
imul
push
sahf
push
and
inc
pushf
outsl
stc
pop
repnz
popf
jl
xchg
mov
lcall
inc
icebp
cmp
or
out
dec
cmpsl
aad
scas
or
mov
lods
notb
in
pushf
test
pop
cmp
pusha
sahf
xchg
xor
pop
addr16
cmpsb
mov
jnp
xor
xchg
ficoms
mov
sub
lahf
and
lock
pop
lods
add
popl
xchg
stos
fldenv
push
into
shlb
mov
repz
cmp
testl
outsl
mov
roll
sbb
xchg
or
push
sbb
negb
xor
xchg
pop
xor
pop
xchg
sub
mov
push
and
cmp
and
ret
test
loopne
aad
movsl
inc
imul
dec
push
cmpsb
xchg
in
and
or
cmp
loope
aaa
cs
jo
cs
sbb
dec
mov
out
loop
and
iret
lea
adc
dec
add
pop
popa
pop
push
mov
cmp
xchg
push
ret
pop
xchg
inc
scas
cmp
xchg
pop
fisubrs
stos
sub
xchg
pop
iret
mov
xor
jno
dec
pop
jae
sbb
clc
xchg
push
sahf
mov
cmpsl
dec
sub
xchg
rcll
adc
fdivs
popf
scas
jg
pop
push
push
sbb
mov
in
mov
inc
cltd
pushf
sbb
nop
shr
fs
nop
ljmp
jge
sbbl
inc
lods
dec
mov
mov
or
or
mov
push
fisttps
ljmp
sbb
mov
pop
adc
js
ret
xchg
dec
mov
inc
push
xlat
cwtl
stos
sbbl
cmp
adc
fisubl
cmpb
mov
imul
aas
mov
and
pop
sbb
dec
inc
xor
repz
sbb
into
nop
test
sti
leave
push
dec
rcr
cwtl
or
sub
into
mov
inc
jne
push
sub
mov
mov
inc
xorl
add
push
mov
xor
lods
pushf
sub
sbb
addr16
dec
les
mov
in
xor
aam
add
fwait
inc
inc
push
mov
fadds
cmc
ret
outsl
inc
in
mov
dec
pop
scas
inc
leave
in
pop
adc
rol
or
into
dec
mov
in
lahf
add
mov
sub
mov
mov
pop
dec
hlt
mov
lock
add
mov
adc
and
lcall
daa
pop
mov
iret
insl
or
jge
push
mov
lret
xchg
cmp
jbe
out
rorb
cmp
and
lcall
inc
cmpsl
jecxz
in
cltd
fildl
xor
aam
jno
daa
sbb
insl
jno
jmp
hlt
leave
jp
and
or
fildl
fs
inc
fnstenv
push
ds
dec
adc
sarb
test
pop
rcrb
das
mov
or
lret
insb
shrb
jle
ss
cmp
aas
pop
fnstenv
push
push
add
and
lods
out
lock
add
repnz
push
pop
aaa
push
inc
xchg
sbb
cmp
mov
adc
movsl
xor
out
fabs
inc
das
push
outsb
test
pusha
xchg
cmp
add
pop
xor
pop
test
repz
adc
out
and
rorb
es
out
clc
lds
popa
das
mov
data16
pop
or
stos
push
cmp
mov
sbb
inc
xor
andb
fwait
out
adc
inc
push
xor
pop
sbb
aas
mov
leave
dec
jne
or
mov
push
jbe
addb
sub
lret
cmp
es
jmp
mov
dec
mov
dec
adc
mov
sbb
mov
pop
orb
imull
rcrl
test
cmp
xchg
out
mov
jns
in
in
push
and
mov
arpl
xchg
ds
cmp
je
mov
lds
xchg
push
and
adc
sbb
inc
xor
pop
test
and
addr16
mov
sbb
push
adc
loope
nop
aaa
jg
jl
das
in
cli
pop
shl
iret
pop
ja
adc
cmc
jnp
inc
out
sar
sbb
addl
xor
imulb
andl
enter
mov
lcall
pushf
aas
xorb
mov
mov
les
jl
xchg
rorb
je
add
adc
ret
jno
cmc
jae
xor
jle
mov
ret
bound
jns
pop
addl
aas
loopne
shll
cltd
ret
rclb
sub
push
xor
scas
add
repz
jg
dec
cmpsl
xchg
daa
pop
xor
repz
leave
mov
cmpsb
dec
lret
pop
add
inc
jge
adc
and
push
cmp
ret
lods
fiaddl
subl
lock
xchg
test
sub
pop
add
push
and
gs
repz
mov
lcall
lret
cmp
pop
div
add
dec
xor
mov
mov
xor
push
pop
fcomps
jg
js
cmp
jge
sbb
jnp
adc
sbb
fisttpl
cmp
mov
lock
mov
je
fwait
add
sub
es
dec
cmpl
negb
hlt
dec
sub
bound
mov
push
sub
sti
xchg
xchg
dec
sahf
fsubrl
pop
divl
je
ljmp
outsl
jmp
pop
fs
lmsw
dec
hlt
sub
lret
xchg
xchg
push
ljmp
imul
fisubs
pop
xchg
nop
jmp
inc
lea
sub
ret
push
dec
sahf
shr
jo
outsl
sbb
mov
cmp
xchg
mov
lock
imul
repz
adc
mov
sbb
sub
jno
xchg
pop
sbb
test
xchg
out
idivb
cmp
sbb
call
pop
shld
sub
push
sub
enter
and
jecxz
mov
push
jle
fsubrp
loope
andl
ljmp
js
and
lds
mov
and
rorl
insb
cltd
sbb
ret
jae
jb
test
test
mov
popw
mov
push
fmull
js
xchg
dec
mov
xor
int
jl
sub
jg
loopne
aaa
cmp
push
in
cli
insl
dec
dec
jecxz
ret
test
stos
jmp
inc
mov
pop
push
imul
mov
js
ffree
test
imul
xchg
dec
sub
jp
pop
jnp
sub
in
sbb
push
and
mov
je
movsb
ja
jmp
lret
inc
imul
push
pop
ss
xor
add
cmp
sub
jecxz
xor
scas
lods
nop
push
fsubl
jbe
inc
inc
lea
xor
add
jmp
mov
cmp
push
and
rcrl
cli
jbe
dec
into
test
mov
inc
lret
cld
sbb
pop
push
mov
cmc
leave
rorb
dec
add
orb
push
pop
loopne
pusha
in
push
mov
and
mov
out
xor
mov
sti
stos
inc
cmp
lret
outsb
fcmovu
push
orb
outsb
sbb
add
mov
mov
xchg
aam
cld
mov
and
fs
push
inc
jo
data16
mov
pop
mov
cmpsl
and
or
jno
in
and
aas
fnstenv
jecxz
popa
fldcw
dec
inc
lock
std
xlat
sar
xor
lahf
sbb
int3
addr16
xor
pop
push
popf
je
sti
or
lret
xchg
int
sbb
inc
orb
lods
sbb
and
shl
ds
inc
lret
stc
test
mov
jbe
xchg
fdivrl
jle
and
push
mov
jns
arpl
iret
test
ja
push
push
pop
jmp
add
sti
xchg
nop
mov
mov
jmp
cmc
add
movsb
std
loop
insl
lret
push
hlt
fwait
outsl
rclb
insl
sbbb
and
inc
jmp
out
xchg
adc
mov
in
xchg
leave
jmp
push
adc
rcll
clc
fimuls
sub
jb
shrl
xor
pop
nop
adc
push
mov
fisubrs
sub
and
jbe
call
fisubs
push
out
jnp
dec
mov
xlat
jmp
imul
xlat
or
cmp
mov
xlat
push
add
clc
xchg
insb
add
movsb
shrl
sub
int3
test
lret
pop
cmpsb
ret
nop
adc
add
sbb
pop
sbb
and
add
nop
fs
std
sti
fsubr
mov
xor
scas
mov
push
ljmp
adc
xor
pushf
xchg
push
mov
std
jbe
std
cli
push
add
mov
xchg
inc
xor
mov
pop
out
out
lahf
or
popf
outsb
push
fwait
mov
jle
add
lock
pop
es
int
pusha
rclb
ss
ffree
cmp
add
aaa
mov
sbb
mov
data16
jno
stos
push
lods
add
call
frstor
xlat
popf
jle
sbb
jecxz
test
popf
idivl
inc
push
lcall
jp
orl
mov
adc
jbe
sub
rcl
enter
cmp
push
xor
movsl
mov
fiaddl
sub
cmp
cs
movsl
fldt
test
leave
int3
shll
idiv
mov
mov
xchg
sub
pop
ret
jbe
ror
push
push
sbb
cli
sub
rcrb
cs
push
fnsave
dec
jns
mov
rcr
jmp
xor
sub
xchg
xor
pop
mov
fimuls
std
data16
lret
enter
xchg
cli
mov
jg
mov
sti
clc
mov
outsb
mov
or
idivl
sub
fcmovne
mov
add
ljmp
fsubrs
jmp
lcall
pop
and
jecxz
js
dec
popf
insb
leave
shll
cmp
jno
sbb
pop
faddl
inc
push
fisubl
shlb
dec
xor
dec
sub
inc
test
pop
out
add
xor
in
mov
sub
dec
xchg
dec
pop
push
adc
ljmp
insb
cmpsl
ja
mov
mov
test
mov
push
mov
dec
or
jp
mov
enter
and
and
out
movsl
outsl
lods
sbb
fimull
ficoml
in
imul
scas
mov
pop
pop
insl
data16
mov
hlt
ret
loop
jbe
lcall
push
stos
jl
cmp
das
jbe
push
xchg
or
dec
jl
imul
jmp
pop
add
movb
jl
in
push
jecxz
sub
fistpl
push
and
mov
jo
in
fisubs
and
lock
out
xor
inc
adc
cmp
stc
fidivrs
dec
ja
sub
scas
dec
lret
push
cmpsb
loopne
pushf
aad
cmp
testb
xchg
loop
xchg
push
dec
out
mov
es
fcmovnu
xor
sbb
push
sar
aad
lock
and
and
jmp
add
outsb
pop
mov
rcrb
fnstenv
divb
mov
lcall
jne
orl
inc
movsb
rcrl
jb
in
xchg
xchg
dec
xlat
lods
mov
pop
jns
push
ds
xchg
lahf
xchg
pusha
loop
cmp
movsb
cmp
cltd
xchg
dec
sbb
pop
cmp
jg
add
arpl
jbe
add
mov
gs
fs
pusha
push
dec
xchg
je
mov
test
nop
cld
xor
loop
jb
repz
jne
data16
ret
lret
xor
mov
clc
bound
push
push
outsb
sets
jp
xchg
out
pop
fstps
popf
sub
adc
mov
jnp
cmp
icebp
xchg
push
out
daa
clc
out
push
jnp,pn
icebp
dec
pop
outsl
call
pop
xchg
cli
leave
mov
and
daa
pop
insb
inc
sahf
ret
imul
lret
pop
mov
stos
xor
jg
sbb
fcmove
xor
aas
sub
shll
sub
cmp
xchg
mov
jp
push
dec
push
imul
lahf
xchg
pusha
in
out
xchg
push
cs
mov
jg
imul
out
out
jge
lret
pop
mov
mov
idiv
mov
pop
mov
arpl
add
sbb
arpl
sarb
mov
addr16
mov
sbb
fbld
or
aaa
xchg
xor
and
cmpsl
jno
cmp
xchg
mull
pop
mov
or
repz
push
or
std
mov
cmp
mov
xlat
inc
or
sub
fldenv
jo
push
testl
pushf
mov
jbe
mov
mov
mov
cwtl
xchg
lods
ret
je
mov
mov
mov
adc
scas
sbb
stos
sub
movsl
cmpsb
orl
test
mov
inc
push
iret
mov
loopne
lret
jnp
mov
adc
xor
mov
inc
out
push
add
lahf
ficompl
loop
mov
mov
aaa
cmp
fmull
push
fsts
pop
stos
push
lods
pop
mov
sub
and
push
mov
out
cmpsb
stos
cmp
mov
xor
outsl
call
xorl
hlt
rorb
jo
dec
test
mov
mov
xor
push
pop
insb
outsl
in
dec
pop
push
fwait
dec
ljmp
loope
imul
cmc
movsb
jl
movsb
popa
pop
pop
repz
push
std
fs
mov
push
pop
mov
lds
iret
js
mov
mov
xlat
repnz
data16
sub
cmp
aaa
sbb
adc
addr16
inc
pop
in
mov
scas
mov
jl
jge
adc
sahf
rorb
rclb
sub
inc
mov
push
mov
and
icebp
sub
mov
psubq
ficompl
fisubrs
aad
push
hlt
fstpt
cld
add
xchg
push
lcall
or
sub
jns
add
sti
pop
sub
push
js
rorb
loopne
ss
imul
insb
xor
arpl
mov
xor
sub
mov
push
fdivrs
mov
ljmp
aas
mov
sbb
out
sbb
mov
stos
les
fisubl
push
cwtl
scas
shl
sbb
insl
xlat
les
and
inc
add
rcrb
outsb
adc
mov
add
loop
inc
mov
cmp
mov
adcl
movsl
ret
inc
adc
sbb
inc
mov
jmp
cmc
repnz
lret
out
jne
dec
xorb
pusha
mov
out
lret
shrb
jle
loopne
fistps
mov
add
push
mov
fdivs
push
mov
mov
hlt
into
rcrb
lret
scas
mov
mov
scas
pop
out
xchg
fcmovnu
bound
jne
movsl
pop
dec
ret
jne
les
inc
jns
int
jecxz
cmp
push
fldl
sbb
pop
dec
dec
imul
xchg
lds
subb
fiadds
cmpsb
mov
jno
fsts
ja
out
or
cmpsb
push
lret
lret
xchg
mov
push
push
ret
cmp
data16
adc
outsb
insb
mov
cmc
sbb
inc
repz
das
fisttpll
fcomi
fiaddl
adcl
movl
mov
int3
loop
outsl
mov
and
cmp
jbe
mov
sub
pop
js
dec
or
adc
sub
or
jle
jae
pop
mov
addr16
jno
sbb
pop
fcoml
sub
mov
iret
cli
hlt
xor
dec
jge
gs
enter
mov
mov
mov
fsubrl
pop
stc
sbb
pusha
fucomip
cmc
inc
lods
cld
xchg
jo
popf
mov
or
pop
jo
frstor
mov
push
jne
mov
nop
outsl
push
pop
sbb
repz
js
cltd
aas
sbb
inc
xchg
loope
xchg
cmp
scas
xchg
mov
xchg
in
gs
dec
xchg
mov
ljmp
jo
rcrb
sub
and
movsl
arpl
movswl
into
cmp
xor
jmp
in
lods
ja
fnstcw
popf
jns
jnp
and
stos
adc
stc
jle
or
lahf
cs
lds
push
pop
pop
les
ret
and
xchg
push
dec
lcall
arpl
push
jbe
ficomps
jae
out
mov
pusha
int
mov
imul
add
push
cmp
or
jno
das
or
outsl
sarb
orb
out
jg
mov
ss
jns
ss
xchg
sbbb
sti
mov
addr16
jle
roll
push
inc
inc
mov
les
sbb
push
add
pushf
insl
stos
scas
clc
and
rol
ret
mov
pop
push
lock
repnz
iret
push
aam
icebp
imul
jg
mov
sbb
out
repz
mov
pop
mov
add
push
insb
or
into
fcom
and
popa
sbb
aam
test
push
xor
push
xchg
adc
fsin
xor
aaa
icebp
or
cs
xchg
jb
sub
std
push
das
inc
adc
jmp
jns
insb
in
scas
scas
jecxz
imul
mov
dec
lret
add
mov
jge
cmp
cmc
or
stos
sub
cmp
push
dec
dec
test
sbb
sbb
dec
aad
mov
scas
repz
in
jnp
fistpll
or
jle
mov
sbb
outsl
mov
jo
cwtl
je
mov
sub
mov
lods
cltd
xchg
out
xor
std
jbe
jg
inc
fildl
data16
mov
dec
enter
shrb
mov
mov
test
xor
jge
ret
rcr
sub
mov
mov
scas
or
inc
in
push
push
push
or
push
pop
outsl
mov
sbb
std
xchg
mov
test
jecxz
xorl
jbe
cmp
pop
das
xor
push
outsb
cs
cltd
push
jmp
jo
cmp
and
call
je
push
xor
mov
and
mov
jo
fldenv
icebp
movsl
add
fs
dec
loop
into
jb
daa
fdivp
sbb
or
jbe
pop
ret
popf
mov
pushf
and
andb
and
jmp
ss
je
jb
cmp
mov
xchg
push
cmpsb
xchg
das
sbb
fwait
lret
dec
xor
loop
or
mov
in
jnp
rorl
push
rcll
sub
jmp
pushf
sbb
popa
push
js
push
adc
mov
xchg
sub
enter
dec
adc
xchg
stos
jmp
or
jns
lock
dec
and
mov
add
sub
out
cmpsl
sbb
pop
xchg
ds
cmp
mov
test
inc
data16
add
insl
loop
inc
mov
jmp
jb
enter
in
out
pop
pop
mov
jne
rol
sbb
pushf
cmp
addr16
int3
sbb
jo
stos
dec
clc
xchg
movsl
inc
mov
stos
mov
sarl
test
shll
or
jmp
pop
insb
dec
leave
lea
or
stos
fwait
jo
mov
imul
out
xor
push
out
xor
repnz
and
sti
add
cmpsb
pop
loope
jo
mov
xor
jmp
or
push
mov
pop
ficoml
pop
loope
or
jno
pop
aad
fs
fdivl
push
cs
jmp
inc
andb
adc
popf
lea
xchg
mov
sbb
sbb
jmp
push
jae
shrl
sub
std
pop
add
cwtl
int
orb
sub
cmp
push
pop
sub
repz
cmp
mov
ss
stos
and
mov
add
inc
and
out
insl
sarb
stc
xor
sub
jne
cmp
dec
decl
test
inc
cmp
xor
mov
popa
pop
push
js
dec
mov
fs
mov
inc
addr16
sub
loope
xor
inc
jno
loope
ret
stc
mov
cmp
je
mov
jnp
cmp
arpl
in
pop
cltd
cmp
ret
cmp
xchg
dec
int
add
mov
jl
xor
mov
sub
imul
orb
roll
dec
mov
and
push
push
mov
inc
or
adc
xchg
imul
adc
jg
or
addr16
and
dec
dec
daa
lods
push
jmp
rorl
cmp
test
inc
inc
mov
xor
stos
out
call
push
sub
add
imul
scas
adc
mov
mov
dec
pop
mov
add
leave
sub
imul
movsb
mov
jge
and
or
out
movsl
sbb
mov
dec
dec
lods
and
iret
xor
jecxz
inc
cmp
out
rcl
lcall
add
mov
cmp
mov
into
jbe
adc
pop
and
pop
adc
call
add
push
in
or
dec
sti
push
jbe
outsb
or
repz
loopne
in
rcll
stc
test
pop
sbbl
bound
cvtdq2ps
push
mov
sbb
sub
cld
fidivrs
ds
pop
loop
js
dec
mov
lret
sbb
pop
pusha
sub
fidivl
iret
call
jle
cmp
jmp
outsb
stos
mov
in
ficomps
enter
in
push
pop
enter
sbb
clc
mov
call
jns
shlb
mov
dec
popw
repz
jle
filds
mov
daa
in
imul
mov
cltd
aad
imul
xor
cmp
sar
lcall
stos
pushf
pushl
push
jnp
fldt
push
call
fwait
jnp
or
aad
adc
push
fwait
push
mov
xor
dec
push
mov
mov
les
enter
and
xor
test
cltd
xchg
popf
hlt
mov
xor
mov
lret
xchg
sbb
dec
hlt
outsb
mov
int
jmp
shrl
and
ret
scas
je
jne
movsb
dec
xor
jecxz
xchg
mov
push
and
int3
dec
leave
adc
mov
mov
add
sti
inc
jbe
dec
adc
sub
dec
repnz
sub
out
mov
in
mov
and
mov
leave
scas
lcall
xor
push
lret
jno
outsb
xor
pop
lods
repnz
mov
jb
outsb
or
imul
sbb
lds
sti
dec
jmp
mov
jmp
inc
fs
iret
mov
push
xchg
jmp
test
and
cmpsl
dec
mov
xchg
lock
xchg
jle
xlat
punpcklbw
xor
faddp
rcr
pop
ret
push
je
add
cltd
popf
dec
push
sbb
loope
lods
mov
push
ja
arpl
fsubrl
mov
mov
nop
movsb
popf
add
sbb
out
js
adc
cmc
out
subb
enter
mov
push
testl
sub
stos
in
ss
stos
pushf
in
cltd
jmp
in
into
addr16
pusha
cmpsl
xor
jo
ljmp
movsl
push
cmpsl
push
sbb
mov
push
sbb
ficoms
add
aad
xor
add
xlat
lds
xchg
jae
rorl
or
enter
aaa
ja
or
das
xchg
out
xlat
mov
or
or
inc
pop
adc
add
inc
and
fldcw
mov
daa
jmp
pop
in
popf
jmp
stos
jp
aas
sbb
shl
ficoms
mov
mov
and
xor
test
aaa
cli
add
xor
das
popa
sub
jle
loop
push
mov
lret
and
mov
adc
repz
push
xor
mov
inc
sbb
js
cltd
cmp
mov
cmp
or
in
sbb
lea
cmp
mov
xchg
inc
push
mov
test
testb
loopne
or
iret
out
out
pop
jge
jns
add
inc
adc
mov
dec
fnsave
jnp
jnp
ljmp
aad
xor
imul
imul
cmp
and
fsubs
inc
mov
dec
inc
inc
into
mov
clc
inc
aad
arpl
push
sbb
jo
mov
loop
popf
jo
xor
push
imull
aaa
cmp
and
add
out
pop
sti
cmp
jecxz
insb
push
pop
es
cwtl
xor
lds
mov
mov
lahf
jp
lret
push
xchg
rcl
rolb
iret
xorb
sbb
dec
inc
test
add
push
dec
dec
adc
add
jl
push
aad
cmpsb
sbb
push
test
add
in
stos
cmp
cwtl
cmc
xlat
inc
pop
mov
jae
jle
push
pushf
xchg
mov
or
xchg
repz
pushl
outsl
xor
mov
sbbl
xchg
out
mov
div
jnp
pop
jg
test
dec
lret
mov
jecxz
fwait
push
sub
sbb
mov
orl
cli
xchg
jecxz
add
or
push
mov
or
jl
jmp
jecxz
movsl
add
push
movsl
lret
mov
mov
cmp
sub
mov
lods
outsl
movsl
ds
cmpsl
lahf
fbld
add
popf
jae
ds
test
idivb
mov
jp
movsl
mov
adc
iret
idivl
nop
xchg
int
sub
popa
sbb
cmp
push
std
fs
mov
cli
vmptrst
fwait
ret
std
mov
int3
xchg
xchg
or
jb
pop
aam
out
test
out
sbb
jns
adc
cmp
ja
ds
pushf
cld
dec
sbb
cmp
mov
hlt
roll
mov
test
icebp
aas
pop
fwait
sbb
pusha
sahf
leave
cli
lcall
pop
add
clc
jae
xor
lods
jno
and
cli
and
cmp
jl
mov
xchg
pop
cmpsl
mov
jecxz
mov
jg
push
mov
cmp
inc
push
fnsave
popa
pop
leave
movsb
lods
push
ja
sahf
or
jo
dec
mov
jmp
mov
jb
stos
or
test
fdiv
and
sbb
loop
orb
jae
dec
lret
mov
adc
add
aad
test
jl
pop
inc
nop
sub
stc
xlat
pop
imul
popf
rcl
insb
cmc
repz
push
repnz
ja
test
int3
mov
test
fcmovnbe
pop
fimuls
and
push
mov
mov
ror
cmp
pop
gs
cmpsl
mov
and
or
cld
fisubrl
inc
js
dec
dec
pushf
sbb
out
cwtl
sbb
negl
xor
xor
iret
mov
pop
xor
rol
das
repz
fidivrl
scas
pop
xor
cmc
xchg
add
cmovae
mov
mov
or
dec
dec
ud2
rcrb
xchg
push
cmp
cmpsb
pop
fs
xchg
lret
lret
call
iret
scas
and
inc
fcompl
aas
int3
xor
and
sub
out
inc
cmp
lea
sbb
lds
pusha
sbb
mov
push
push
cwtl
cmp
mov
mov
xor
das
inc
add
xchg
pop
xchg
sub
and
xchg
mov
mov
mov
pop
jae
pop
pop
mov
adc
iret
into
and
sbb
imul
out
jne
sub
rorl
mov
jmp
jne
push
out
jmp
mov
jbe
fs
mov
add
jp
cmc
outsb
fdivrp
test
inc
sub
mov
aas
xchg
push
xchg
push
mov
jo
in
mov
mov
nop
mov
push
adc
in
cmp
lahf
addr16
add
std
lock
adc
nop
xor
adc
cmpsb
mov
xchg
js
add
xchg
xor
add
mov
mov
fcoml
loopne
mulb
scas
fwait
push
pop
pop
mov
mov
stos
stc
or
xchg
loope
dec
add
paddsw
jae
push
cmc
imul
mov
xchg
push
pop
pop
sub
xchg
aas
rolb
adcb
mov
and
cmc
pop
push
pop
sahf
xor
scas
je
cmp
in
shlb
into
mov
or
fildl
jmp
sbb
movsb
testl
enter
pop
inc
stos
jl
addr16
adc
test
adc
jnp
addr16
rcr
ljmp
lcall
pop
jge
cli
cmc
sbb
lock
pop
jbe
andb
ljmp
fcomps
jp
xchg
mov
ret
cmc
arpl
repnz
or
jo
pop
mov
addr16
jl
fst
loop
jle
dec
cmpsl
std
and
sub
fmull
dec
push
int3
xor
mov
mov
mov
ss
aam
push
insb
shll
dec
xchg
push
jbe
and
popf
mov
xor
les
rol
mov
sub
ficompl
imul
and
clc
sbb
imul
mov
pop
add
or
out
loope
mov
lret
out
test
lods
stos
jmp
test
pop
sahf
cld
aam
test
adc
sbb
fistpll
lods
fcmovne
mov
mov
mov
sti
lret
jecxz
push
dec
outsl
add
fdivrl
xor
out
mov
scas
inc
xchg
cmp
jg
sbb
into
in
xchg
outsl
adc
scas
fcomip
pop
xchg
xchg
xchg
push
or
mov
mov
sbb
xchg
mov
and
ja
dec
cwtl
add
adc
aad
dec
decb
imul
mov
rcrb
jno
in
aam
add
or
inc
mov
sbb
mov
aam
cmc
push
push
or
jecxz
fcomip
mov
sub
daa
mov
pop
mov
pop
fsubrl
xchg
xchg
insb
mov
pop
dec
push
cmc
lcall
lods
or
fs
jbe
not
std
mov
aam
pushf
fistps
sbb
dec
xchg
mov
mov
aaa
add
push
push
and
and
lcall
ret
lret
inc
addl
inc
pop
pop
fldl
ljmp
sbb
xlat
jno
aaa
mov
or
orl
rorb
sarb
data16
sbb
mov
bound
push
loope
dec
dec
aas
mov
into
sub
sarl
lods
loop
mov
mov
lods
mov
push
insb
lahf
stc
xor
mov
imul
in
insl
xchg
loope
push
adc
ljmp
out
in
sbb
stos
hlt
cltd
jnp
or
sub
idivl
and
xor
sbbl
xor
xor
and
sbb
push
fucompp
cwtl
or
icebp
add
sub
mov
imull
and
loopne
jl
sub
mov
rcrl
daa
pop
bound
ja
push
push
lret
push
clc
lods
in
push
stc
pop
sahf
dec
sub
pop
cwtl
cmc
dec
adc
stos
add
ret
mov
inc
xor
loopne
fld
or
nop
add
or
jmp
and
ss
inc
add
or
icebp
mov
jle
fisttps
xchg
ds
in
bound
mov
movsb
imul
jp
iret
pop
popa
mov
cmp
lcall
xor
push
fs
mov
stos
dec
fdivs
and
js
mov
fldenv
and
iret
mov
rcll
cli
dec
dec
test
repnz
or
fmuls
lods
in
into
adc
and
mov
lods
fcomps
xor
sbb
test
cmp
fsubp
pop
inc
loopne
mov
or
jo
mov
xchg
adc
sub
pusha
pop
icebp
xor
and
in
adc
aaa
cmp
popa
push
fiadds
inc
icebp
sbb
fucomp
cmp
push
and
inc
out
adc
int
dec
adc
outsl
stc
mov
lock
push
cs
lods
xchg
loopne
orl
or
dec
cmp
lods
inc
inc
shlb
stc
add
testb
roll
mov
adc
mov
jg
test
insl
cmp
and
cmp
dec
fldcw
dec
add
shrl
pop
insl
xchg
mov
pop
jno
loopne
ret
push
insb
inc
or
or
hlt
mov
loop
test
pop
mov
cmp
cmpsl
dec
lds
mov
std
test
add
ss
sub
popf
jns
mov
fbld
sarb
testl
jl
push
cltd
inc
fwait
lret
mov
inc
or
ja
mov
nop
push
roll
xchg
xchg
addb
daa
mov
mov
dec
ficompl
test
jmp
mov
movsb
shl
mov
xchg
out
xchg
fs
adc
les
add
cmp
pop
jbe
aad
cld
push
adc
into
and
mov
dec
imul
cmpsb
rolb
aas
push
enter
xchg
add
jae
sub
or
xchg
lea
jge
jne
sar
fidivrs
pop
inc
popw
and
adc
jle
and
sbb
lret
repz
dec
push
lret
imul
add
insw
inc
pop
stos
sub
lods
mov
pop
mov
mov
adc
push
repz
fldt
or
sub
sub
int3
sti
jne
loop
test
movsb
adc
mov
popf
pop
repnz
out
jnp
xchg
enter
out
stos
jp
inc
xor
inc
add
push
dec
inc
cmp
fdivp
mov
call
int3
push
scas
lahf
xchg
scas
sbb
sbb
hlt
pop
insb
jmp
inc
mov
push
repz
ret
pusha
jmp
dec
imul
scas
mov
and
ret
inc
mov
cmp
mov
pop
inc
ljmp
mov
xchg
sub
jge
aam
test
adc
popf
add
and
mov
daa
sahf
aad
pushf
jmp
popa
push
cltd
movsb
cmp
and
out
xor
cmp
add
dec
or
pop
mov
push
fwait
push
fadd
fldenv
loop
imul
stc
adc
in
nop
not
dec
or
icebp
loope
mov
jbe
jmp
push
gs
fnstenv
xor
xor
dec
jp
and
addr16
push
ja
movsb
call
lcall
xor
xor
dec
addb
in
xchg
sub
dec
xlat
stos
dec
push
adc
daa
outsb
aad
iret
in
xchg
add
test
mov
sbbb
enter
cmp
jae
and
ret
loop,pt
arpl
mov
int
mov
push
jmp
xchg
mov
sahf
inc
rcrb
lea
add
stc
gs
pusha
jmp
xlat
pop
test
rcr
and
sbb
cld
in
sahf
out
fs
xor
inc
xchg
movb
xchg
icebp
jle
and
and
cmp
cs
and
fisttpll
fnstcw
xor
imul
loopne
mov
mov
xchg
pop
jmp
cmp
and
adc
dec
push
adc
lcall
mov
mov
jnp
adc
inc
les
jo
cmp
les
fistl
dec
sub
xchg
imul
cmc
rclb
dec
jns
pop
cmp
test
xor
fs
outsb
scas
lods
adc
fimull
add
loope
inc
lods
mov
movsl
cmpsb
jnp
fstl
sbb
xor
outsb
repnz
dec
xor
sbb
xchg
loopne
sarl
hlt
push
lahf
add
loope
cmc
stos
shll
mov
orl
pop
icebp
xchg
mov
test
call
int
inc
loopne
sbb
jns
shrl
pop
sbb
daa
jecxz
out
jb
lea
cmp
inc
mov
push
inc
sub
jmp
lret
ds
jle
jae
enter
int
jb
test
addl
je
or
add
xor
mov
mov
iret
mov
aad
aad
rorb
pop
jl
outsl
mov
and
push
dec
mov
cs
ffree
push
popf
jb
testb
xor
inc
andb
xor
clc
cmp
clc
pop
insb
pop
jnp
hlt
movsl
in
test
sub
sbb
jg
scas
pop
ret
into
in
pop
push
outsl
mov
rcrb
or
push
mov
mov
ljmp
mov
cmc
or
pushf
cmp
mov
jo
pop
cmp
stc
jnp
ds
pop
cmp
inc
push
mov
cmpsl
push
mov
add
movsb
mov
ret
rcll
arpl
iret
or
fs
les
and
xchg
and
outsb
imul
not
add
add
cmp
scas
inc
out
shlb
mov
sbb
stos
and
jnp
arpl
xchg
sub
out
test
jle
daa
out
sarl
fwait
in
clc
sub
jl
mov
dec
push
les
sbb
test
outsb
mov
rclb
pop
sub
push
dec
ret
jns
hlt
sub
test
sbb
jns
rcl
xchg
push
jg
mov
and
push
out
cmp
mov
iret
pusha
add
rclb
hlt
ds
inc
fldenv
ficomps
nop
in
cmp
cmp
pop
adc
mov
dec
push
out
sub
mov
js
push
incl
dec
adc
lock
mov
fnsave
lds
das
fidivs
das
or
je
or
add
loope
repz
cltd
push
test
loope
icebp
sti
data16
mov
pop
mov
sbb
sti
push
leave
shlb
cmp
out
inc
sub
decb
negb
pop
cmp
popa
mov
push
sub
sub
xor
cmpsb
sub
jne
mov
push
push
cli
fsubl
xchg
aaa
dec
mov
clflush
lds
sbb
jbe
mov
cmp
dec
pop
adc
jmp
mov
adc
cmpb
jae
push
jo
dec
pop
iret
inc
cmp
cltd
in
jp
mov
mov
int
rcrb
sti
daa
mov
dec
nop
cmc
mov
pop
daa
dec
xlat
cmc
stc
pushf
repz
test
jns
rorb
repz
push
fstpl
dec
sub
repz
ja
or
push
cld
dec
adc
mov
mov
pop
xchg
scas
cmp
push
push
insl
xchg
test
jle
call
adc
jo
jo
inc
loop
cmp
mov
adc
stc
iret
push
jle
fists
testl
in
cld
es
cld
movsl
xor
dec
fcompl
cmp
jae
mov
cmp
mov
pushf
push
mov
or
or
sbb
jae
and
and
push
arpl
jmp
pop
xchg
loop
mov
dec
or
xchg
dec
movl
pop
cs
jo
pop
scas
and
fldenv
mov
dec
pusha
ja
sub
xchg
mov
rcrb
mov
lea
cltd
jmp
push
xchg
stc
test
mov
pop
sub
addr16
or
insb
stos
loop
xor
ss
aam
mov
loopne
pop
stos
mov
std
fisubrl
adc
ret
stos
jae
leave
xchg
inc
mov
shll
loope
ret
in
movsl
imul
mov
jl
aam
push
test
les
mov
repz
movsl
xchg
sahf
jl
jmp
pop
stc
cld
mov
mov
mov
negl
or
pop
imul
out
ljmp
xor
jg
std
adc
push
movsb
sbb
dec
mov
loope
mov
popa
roll
pushf
int3
scas
cmc
fcmovu
mov
xchg
lods
push
push
lea
jno
in
std
mov
ss
mov
push
stos
or
push
xorb
flds
in
cltd
aas
mov
lods
out
cld
loopne
inc
ja
pop
or
pushf
daa
dec
popa
jle
mov
mov
add
dec
cmp
xchg
xchg
mov
add
shlb
pop
xchg
mov
jg
lds
out
movsl
mov
stos
cmp
or
add
ja
cs
test
inc
cmp
mov
or
or
inc
int3
rorb
cli
jnp
iret
frstor
cmpsb
test
mov
int
in
pop
xor
pop
gs
xorb
fsubs
dec
inc
mov
iret
lea
pop
addr16
ret
and
dec
push
push
ja
rolb
mov
xchg
dec
adc
cmp
nop
ja
sub
cmc
dec
cmc
mov
movsb
loope
fcompl
rolb
repnz
mov
jle
pop
ljmp
adc
inc
aam
and
xor
filds
lahf
sbb
stos
cmc
mov
pop
out
or
push
mov
sbb
imul
call
aad
out
js
popa
fmuls
mov
adc
inc
test
enter
lods
or
jnp,pn
repz
mov
mov
hlt
scas
sub
cmp
lds
call
into
cmp
addl
push
sbb
into
or
xor
ds
dec
and
js
imul
loope
xchg
push
inc
adc
lret
in
hlt
inc
loopne
xor
pop
rep
jae
xor
mov
sbb
icebp
pop
mov
sbb
pop
adc
cmc
xchg
mov
clc
inc
and
xchg
or
mov
movsl
inc
sbb
or
aad
jp
bound
inc
sbb
enter
daa
sbbl
lahf
and
es
daa
xchg
mov
mov
je
ljmp
pop
lcall
fdivrs
mov
test
jle
mov
fmull
scas
clc
hlt
andl
mov
sbb
pushf
mov
inc
jne
fs
xor
mov
out
push
push
cmp
mov
jp
add
data16
popa
jmp
mov
rclb
fsubs
mov
mov
lcall
and
push
add
ret
leave
pop
addr16
mov
hlt
sub
sub
outsb
lret
pop
jmp
inc
or
cmc
push
cmpsl
inc
adc
mov
mov
lcall
sbb
sub
mov
and
inc
inc
inc
stos
add
mov
cwtl
jb
xchg
cmp
mov
sbb
ret
xchg
nop
fisubs
push
xchg
fstl
sti
lcall
mov
stc
xor
daa
sbb
push
xor
pushf
xor
mov
push
mov
mov
flds
jae
lcall
push
push
iretw
andl
sub
ljmp
mov
add
adc
jb
ds
dec
ja
sbb
repnz
mov
mov
fnstenv
xor
pop
sub
inc
cmp
add
mov
dec
xchg
stos
test
cmp
repnz
mov
inc
xchg
pop
lea
mov
or
mull
push
jle
andb
sub
in
adc
adcl
fidivl
in
fcoml
push
jo
jns
jb
jae
scas
test
xchg
sbb
stos
scas
mov
imul
pop
push
adc
shl
mov
test
lret
sub
push
subl
fsts
sarl
nop
addb
aaa
sub
test
jge
out
dec
lahf
test
or
test
iret
clc
stos
or
fs
xor
xor
movsl
xor
xchg
fisubl
daa
aaa
pop
sub
push
insl
xchg
jb
aaa
mov
inc
push
icebp
cmpb
jl
and
inc
jle
or
and
sub
xlat
stc
stos
add
add
popa
add
aaa
pop
push
jne
outsl
mov
pop
loop
leave
idivl
or
inc
ret
scas
mov
sti
addb
in
test
test
dec
and
inc
stos
fcomi
cmp
mov
mov
or
and
push
sbb
ds
adc
inc
call
gs
or
mov
enter
mov
adc
ds
push
in
es
sub
cmp
aaa
cli
das
int3
inc
push
gs
mov
mov
jnp
fiadds
push
and
pop
pop
js
and
scas
cmpsl
repnz
shr
or
mov
and
fdivrs
xchg
dec
inc
shll
xchg
mov
xor
adc
fdivl
lcall
pusha
xchg
mov
adc
xchg
test
pop
cmc
jge
xor
mov
push
add
sbb
and
sub
mov
push
std
jecxz
sbb
dec
adc
add
jp
push
clc
setl
test
mov
push
sbbl
fisttps
push
xchg
mov
out
cld
outsl
shll
out
enter
pop
shll
jno
stc
jb
js
rorl
push
adc
mov
sub
xor
in
xchg
popf
stc
pop
push
inc
pop
and
int
fdivrs
lcall
outsl
js
sbb
cmpsl
jl
or
fwait
nop
imul
movsb
in
mov
and
loope
pop
mov
sbb
cltd
hlt
outsl
mov
lods
sbb
fwait
jbe
inc
fnsave
push
ss
jb
test
int
lds
mov
mov
mov
inc
push
stos
aad
push
mov
stc
add
sbb
mov
incl
dec
std
popa
fdivrp
cmp
sub
ret
adc
test
in
flds
fwait
lret
dec
lods
je
test
or
test
dec
jnp
imul
ds
insb
ret
lahf
dec
js
std
jno
and
inc
sub
jp
rcrl
jnp
rolb
mov
lahf
addb
cli
test
cmc
cmp
add
fisubs
mov
lcall
push
push
mov
ror
jg
xor
dec
dec
movsl
dec
dec
and
addl
jne
push
xchg
push
dec
clc
call
add
fprem1
lods
xchg
pop
add
cli
out
jnp
jb
push
inc
aad
lock
and
adc
xlat
inc
and
int
xchg
adc
adc
sbb
and
cmpsb
aaa
dec
sub
out
cs
in
lret
adc
scas
jne
cmp
in
movsl
jnp
lahf
pop
loop
std
stos
pop
pop
sub
ljmp
addr16
lock
cmp
mov
inc
push
cmp
fsubrs
xlat
in
adc
jno
sbb
push
jne
push
xchg
inc
insl
pop
popf
fnstcw
out
hlt
aad
mov
sbb
sbb
jecxz
insl
enter
dec
mov
pop
loopne
mov
jnp
repnz
testl
cld
dec
adc
sbb
sub
push
mov
out
and
or
mov
clc
rorb
orb
bound
mov
sbb
aam
xchg
push
gs
dec
aas
pop
cmpsl
inc
xor
shrl
xlat
adc
xor
nop
xor
sub
bound
sbb
xchg
pop
xchg
xor
repnz
xchg
pusha
movsb
es
push
iret
dec
imul
sbb
push
icebp
mov
lods
xchg
aam
stos
fcomi
and
mov
sub
mov
iret
fnstenv
movsl
xchg
mov
lret
mov
push
pop
mov
mov
xchg
gs
stc
pop
inc
cli
sti
bound
jge
xlat
mov
pop
and
iret
pop
and
mov
rclb
outsl
jg
pandn
insb
cmp
test
jp
rcrb
pop
xor
ret
or
inc
data16
mov
dec
dec
sbb
push
lret
aaa
imul
or
mov
mov
cmpsb
and
mov
xchg
xchg
xor
ds
pop
xor
and
test
dec
addr16
loope
sub
push
mov
xor
jle
and
test
je
adc
aam
jge
sub
pop
inc
in
mov
xlat
sub
sti
adc
stc
mov
sbb
inc
cmpsl
psraw
and
in
mov
push
mov
cmp
dec
xchg
dec
sbb
jo
das
cmp
movsb
or
cmp
shll
fbstp
fcoms
in
rcl
ret
shlb
outsl
jle
jns
push
lcall
stos
sti
dec
and
xor
or
testb
gs
sbb
sbb
idivl
insl
test
inc
or
inc
or
bound
jbe
push
cltd
gs
dec
jecxz
cmp
xchg
sub
fldz
or
or
xchg
shlb
lcall
outsl
jmp
xchg
rcrl
fimuls
sub
sub
fucom
leave
mov
sub
es
xchg
sub
hlt
inc
add
pop
mov
decb
jo
subb
inc
pop
fdivrs
fidivs
pop
and
loope,pt
dec
or
mov
nop
sbb
pop
push
mov
fcoms
jbe
mov
inc
xchg
jle
aad
add
jae
cwtl
jle
mov
sahf
xor
rorl
add
xchg
mov
dec
mov
mov
and
arpl
lahf
scas
dec
lret
sub
push
mov
sbb
pop
sbb
cmp
imul
dec
inc
jb
jbe
jp
inc
mov
and
and
shlb
mov
mov
clc
rolb
jecxz
and
int
inc
jp
clc
dec
out
sbb
jg
notl
jo
ret
lock
add
xor
subl
xchg
lahf
call
fldl
mov
xorl
and
pop
loop
xchg
and
xchg
and
mov
push
push
xor
enter
add
pop
out
out
jae
xchg
addl
mov
add
jmp
xchg
mov
lahf
sbb
loop
daa
outsl
popa
add
mov
movb
fiadds
cmp
and
enter
sbb
push
lcall
mov
cs
adc
in
push
shlb
or
adc
dec
cmpsb
sbb
dec
lret
dec
push
mov
mov
push
add
xchg
push
and
pop
sbbb
cmp
jmp
fmull
cmp
mov
push
aas
push
jp
push
insl
fisttpl
aad
lods
das
iret
test
test
cltd
or
mov
repnz
dec
stc
stos
mov
ds
mov
inc
js
dec
or
or
sub
inc
stos
out
pusha
xor
loope
stos
std
movsl
mov
and
test
jbe
jb
xor
test
mov
push
or
cmp
leave
mov
les
cmpsb
stos
int3
popf
cld
lret
pop
xor
mov
and
sbb
and
jge
push
test
push
insl
jo
in
jg
cmpsl
in
imul
je
sbb
int
call
ds
fcomps
movsl
pop
push
push
dec
les
sub
adcl
pop
sahf
lea
cmp
lock
xadd
xorl
pop
add
fistpll
insb
cld
mov
pop
or
aaa
mov
push
test
dec
cmp
lahf
mov
sti
xor
es
jo,pt
xchg
int
xorb
imull
sbb
push
sbbl
cmp
lock
inc
add
mov
mov
pop
dec
pop
adc
sbb
ret
fildll
or
js
sbb
cwtl
push
mov
shlb
stos
hlt
enter
jl
mov
ljmp
jne
ficoms
sub
push
pop
loopne
inc
or
xchg
ret
in
lahf
jne
add
in
fwait
aam
mov
das
push
daa
fmuls
pop
mull
or
sub
gs
adc
outsb
sub
testl
adcb
out
pop
pop
fildl
mov
mov
or
test
mov
rcl
inc
daa
xchg
sub
loopne
adc
shll
sub
jmp
push
movsl
fstl
or
pop
test
ret
jmp
mov
xchg
mov
mov
cmp
test
jae
fldenv
shrl
icebp
jmp
stc
movsb
movsl
loopne
mov
mov
cmpsl
popf
inc
inc
call
inc
cltd
arpl
sbb
rorb
jae
dec
clc
push
sbb
in
adc
rolb
xchg
xchg
cltd
inc
jecxz
pop
rcrb
mov
push
pop
cmp
mov
jbe
insb
test
xor
sbbl
ja
subb
lret
pop
popl
cmpl
jb
or
pop
cmpsb
jge
cmp
jbe
push
mov
ljmp
idivb
cs
sbb
nop
lret
inc
mov
aas
mov
fwait
push
pop
mov
cmpsl
cwtl
test
push
jl
or
leave
jnp
lahf
cmp
dec
inc
and
fisubl
dec
lds
je
in
dec
shll
pop
xor
stos
enter
push
mov
leave
inc
je
jmp
test
sub
cmc
hlt
add
loope
cs
mov
out
aad
inc
xchg
orl
scas
ss
in
idiv
pop
mov
es
adc
mov
mov
sub
sbb
push
lret
jbe
mov
std
xchg
pop
inc
jo
mov
cwtl
aam
pusha
loopne
sbb
jge
hlt
fcmovne
push
sbb
test
sbb
mov
xchg
shlb
sbb
repz
insb
inc
jns
rep
arpl
out
jno
push
out
pop
jne
jecxz
popf
scas
aas
jle
lock
sub
and
outsb
sahf
clc
mov
icebp
mov
lret
cmp
inc
cmc
cmpsw
mov
push
flds
lcall
loopne
mov
mov
or
cld
mov
sub
mov
in
inc
ja
insl
int
outsl
inc
dec
push
mov
popa
pop
aad
lods
or
ret
stos
xor
add
xchg
jnp
pop
ret
push
pop
mov
adc
and
sbbb
pop
in
scas
mov
or
xor
xor
cmc
mov
dec
xchg
push
push
sti
cmc
xor
pop
out
jnp
mov
es
or
dec
push
xchg
les
adc
loope
gs
cmpsb
pop
add
rclb
test
sub
inc
stos
sbb
ss
je
pushf
leave
sbb
or
adc
das
daa
jge
sbb
loopne
fs
lcall
stos
mov
cmpsb
addr16
mov
pop
add
push
in
idivl
xor
xchg
ljmp
sbb
mov
sub
out
xor
cmp
sub
dec
nop
jle
xor
ljmp
pushf
mov
rorb
xor
insb
imul
daa
dec
icebp
dec
loop
xor
sarb
dec
xor
mov
xorb
fsin
insl
adc
addr16
std
pop
fwait
push
or
mov
dec
jmp
clc
shlb
arpl
sarl
dec
or
fstl
in
xor
outsl
movsb
subb
cmpsb
add
adc
idivl
mov
cmp
or
cli
data16
mov
aaa
sbb
movsb
sub
and
pop
pop
jb
xor
loope,pn
or
sub
lret
mov
pop
ljmp
test
xlat
sahf
xchg
mov
ja
lcall
adc
or
sbb
mov
fsubrl
arpl
rcrb
inc
gs
and
dec
add
mov
imulb
pop
sbb
push
xor
lods
loop
sub
lods
and
aad
fwait
pop
loopne
daa
adc
mov
loop
or
or
hlt
or
pop
gs
in
aaa
data16
xchg
insb
fstl
test
nop
pop
adc
lods
lea
push
sahf
pop
push
mov
out
mov
sbb
pop
xchg
mov
stos
cmp
insb
in
adc
in
pop
adc
push
leave
lds
sub
adc
lea
or
and
inc
sti
sub
cmp
aad
lds
cli
xchg
aam
mov
out
repz
dec
xchg
pop
ds
cmp
fnstcw
push
sub
jge
into
add
hlt
jae
enter
movsb
mov
inc
jnp
repz
clc
mov
pusha
jmp
in
dec
or
int
dec
push
mov
fmuls
sbb
or
imul
sarl
andb
arpl
pop
pushf
cmp
lret
dec
xorl
mov
mov
into
cmp
push
jno
lea
pop
out
push
or
mov
es
addb
and
add
jle
sbb
scas
xor
xchg
and
or
roll
dec
mov
sub
cmp
lret
ss
and
mov
sub
sub
sarb
push
js
xlat
cli
iret
lret
inc
cmpsb
cltd
out
dec
pop
or
pop
mov
jno
aas
pop
and
fstps
mov
cmpsb
cmpsb
xchg
pusha
adc
push
sti
clc
icebp
daa
and
pop
ret
pop
xlat
jbe
inc
pop
jo
shl
mov
add
and
pop
call
xchg
and
adc
pop
test
out
push
imul
push
pop
out
cmp
cmp
es
push
sub
or
mov
imul
inc
xchg
xlat
mov
lcall
dec
out
pop
addb
xor
mov
sub
out
out
or
sub
nop
andl
add
mov
das
mov
jg
leave
mov
adc
xor
in
lcall
dec
test
popa
jbe
sti
nop
cmp
sbb
gs
ja
mov
out
xor
mov
lock
jp
push
shrb
pop
cmp
nop
aaa
mov
xor
nop
cwtl
and
pushf
push
jp
inc
mov
pusha
pop
gs
test
sahf
sti
sbb
scas
pop
in
and
adc
test
cmpsb
mov
subl
es
mov
xor
jne
shrl
rolb
ja
stc
ffree
ret
loopne
jns
jno
out
cmpsb
mov
push
popa
add
inc
mov
and
dec
dec
push
shlb
fdivs
inc
pusha
rclb
pop
ret
pop
ds
test
mov
dec
into
pop
jmp
ror
or
repnz
xchg
aad
sbb
mov
lds
or
roll
inc
or
push
in
mov
mov
insb
xor
mov
sarl
xor
insb
xchg
and
pop
jg
es
fstp
icebp
outsb
cmp
xchg
sub
inc
ficoms
int
imul
scas
mov
dec
mov
test
mov
or
push
mov
pushf
fnstenv
inc
pop
or
mov
imul
mov
dec
adc
iret
adc
std
lods
mov
mov
mov
ss
repnz
ret
xor
pop
int
dec
xchg
shlb
xchg
mov
mov
pop
divb
scas
cmp
push
jno
das
mov
add
xchg
pusha
fldenv
adc
stos
cwtd
popa
cltd
cmpl
in
push
pop
pop
jecxz
sahf
jg
andl
imul
rcll
mov
mov
or
dec
enter
js
dec
cmp
mov
inc
call
sbb
ret
xchg
jl
sbb
in
jmp
cld
ret
notl
je
and
dec
into
stos
add
push
jo
ja
stos
add
popf
add
int3
leave
cmc
xchg
dec
push
and
push
mov
icebp
mov
cmp
mov
pop
cmp
push
sarl
inc
lcall
xchg
repz
mov
addr16
dec
mov
or
jb
dec
stc
movl
jl
cmp
rolb
xor
stc
daa
stos
arpl
rolb
stc
xor
cmpl
pop
push
pushf
sarl
sbb
jl
inc
mov
add
sti
faddp
movzbl
jbe
test
mov
rolb
jmp
mov
mov
dec
out
add
push
push
push
jne
ljmp
int
jl
xor
arpl
push
inc
cwtl
stos
dec
xchg
sub
mov
or
push
push
jbe
sub
fcoml
subb
aaa
sub
rcll
arpl
fs
aad
in
mov
fildll
xor
inc
add
sbb
push
popa
jecxz
rcrb
mov
icebp
mov
std
das
jae
push
pop
nop
jl
fnstenv
loope
int
stos
stos
repz
push
fs
stos
jl
push
sbb
push
inc
mov
cmp
std
lea
lret
mov
xlat
pop
int3
lea
jmp
push
dec
lret
cs
jae
into
in
daa
push
inc
pop
xchg
add
lret
push
mov
sbb
lret
insb
out
ds
push
add
imul
cmp
lahf
sbb
int3
xor
push
aad
lock
jbe
xor
fisubrs
and
repnz
pop
lret
xor
add
dec
adcb
dec
mov
ds
shll
loopne
and
pusha
cwtl
dec
mov
stos
mov
stc
xor
mov
cmp
enter
addr16
stos
sbb
outsl
loope
imul
mov
popa
mov
push
jg
fs
fwait
xchg
arpl
mov
aad
out
pop
fistpll
xlat
int3
sbb
push
ret
les
lret
es
mov
jg
loope
mov
xchg
jne
clc
xor
mov
fwait
pop
dec
dec
sbb
cmp
and
or
sbbb
or
sub
cmpsb
mov
mov
xchg
js
scas
fs
or
rorb
cmpsb
lds
pinsrw
rcr
dec
enter
jno
lock
mov
insb
loop
mov
mov
int3
test
fldenv
jle
imul
aas
push
fwait
mov
push
cld
loopne
ss
int3
cli
mov
mov
gs
daa
movsl
or
inc
or
sbb
lret
cmpsl
and
sbb
sub
out
jbe
mov
pop
mov
in
dec
add
mov
aas
lcall
add
movsb
add
aas
dec
jb
pop
shrl
add
nop
fiadds
icebp
lret
and
gs
xchg
repnz
xchg
fimull
gs
xor
nop
pop
inc
xorps
or
cmc
lahf
jle
mov
jbe
or
mov
xor
pop
iret
adcl
fimuls
and
pop
lods
sbb
fidivrs
shr
lods
nop
dec
jbe
xchg
jo
rcll
jno
mov
xchg
push
es
iret
and
push
shrb
push
add
sub
divl
fstp
bound
sbb
jns
popa
sub
pop
mov
mov
push
and
pop
xchg
bnd
cld
inc
push
sbb
mov
xchg
iret
mov
cmp
sti
loope
pop
pop
movl
sub
adc
or
iret
fcomip
imul
fisttpl
cmp
pop
addl
rcll
incb
mov
sub
pop
clc
sub
pop
xchg
push
xchg
movsl
pop
outsb
add
pop
inc
fistps
aas
cld
lret
mov
sbb
mov
repnz
xor
dec
out
fs
pop
das
dec
mov
mov
jae
ja
rorl
lret
xor
mov
push
arpl
add
xchg
mov
outsl
movsb
movsl
mov
or
ficompl
push
add
movsl
daa
fstps
fwait
loope,pt
xchg
lahf
sub
cltd
cmc
ret
adc
lods
imul
mov
or
jmp
test
mov
lods
xor
mov
call
or
mov
je
pushl
or
xchg
cmp
lea
nop
jno
add
mov
clc
outsb
mov
inc
pop
pop
aad
and
out
adc
mov
mov
sub
test
xchg
cs
test
push
cmpsl
jno
sahf
sti
jae
lcall
inc
mov
ljmp
popa
or
outsl
xlat
xor
dec
loope
push
dec
popa
das
xchg
int3
and
in
fs
dec
mov
sbbb
out
cmc
push
movsl
pusha
lcall
in
lcall
add
mov
data16
mov
movsl
inc
pop
dec
sub
sbb
lret
mov
js
add
add
test
inc
sub
sbb
int
mov
int3
dec
mov
mov
sbb
jl
inc
sub
test
push
dec
adc
lahf
imul
or
popa
call
xor
sbb
cmc
cmp
ljmp
loope
sub
mov
rclb
test
mov
xchg
xchg
sub
hlt
icebp
inc
xlat
pop
and
lds
cli
adc
add
test
sub
jg
cmp
jl
or
xchg
into
nop
jnp
push
stos
fistpll
popf
arpl
rolb
jae
int3
mov
xor
aas
aas
pop
jbe
les
test
insb
lock
inc
sbb
jge
shrb
cmp
cwtl
xchg
fimull
push
pop
lods
or
inc
or
dec
je
dec
lret
popf
shlb
and
les
add
push
inc
push
adc
cmp
mov
cli
js
inc
sub
ljmp
sbb
jl,pt
fs
pop
and
enter
adc
or
mov
mov
call
mov
mov
je
inc
in
inc
fwait
jnp
push
mov
pop
lock
movsl
cwtl
inc
pop
cmp
dec
dec
jo
pop
inc
ret
jp
pop
pop
fwait
mov
dec
iret
pop
cld
pop
lock
ss
push
and
gs
test
xor
scas
arpl
test
sbb
fwait
repnz
popf
jmp
and
push
cmp
xchg
cs
and
inc
insl
mov
mov
ljmp
mov
mov
rcrl
cmp
rcrl
cltd
jno
inc
xor
add
and
sbb
xchg
sti
push
in
sub
and
outsb
scas
loop
jmp
out
xor
adc
cmpsb
out
xor
and
ret
jne
mov
jl
and
mov
mov
int
fisubrl
cmc
jne
push
jb
xlat
test
insb
sbb
pop
ds
and
xchg
repnz
mov
sbb
sbb
or
sub
sbb
xchg
enter
insl
inc
lcall
imul
es
mov
sahf
push
jecxz
sbb
je
mov
jbe
add
gs
gs
adc
cmp
cmp
xor
mov
jge
int3
in
int
sub
dec
shr
add
adc
push
popa
dec
jb
in
cld
imul
jmp
push
inc
popa
or
mov
inc
lcall
xchg
ret
pop
mov
inc
das
inc
pop
aas
test
mov
test
outsl
int3
mov
xor
adc
dec
jnp
subl
adc
test
jns
and
mov
and
cld
mov
stc
fs
rcl
push
fwait
jae
mov
sbb
out
sahf
dec
icebp
test
inc
fistpl
adc
pop
test
xor
imul
inc
subl
addb
in
js
cmp
nop
lods
jne
adc
mov
cwtl
mov
mov
nop
jg
xchg
movsb
push
or
stc
and
int
inc
jmp
pop
mov
out
sbb
repz
ljmp
fwait
mov
push
sbb
pop
rorb
sbb
into
es
lock
jne
insl
lahf
cmpsb
dec
add
mov
aad
loopne
add
cmpsl
rorb
jp
dec
outsb
or
in
inc
inc
loopne
jae
or
jo
jl
sub
pop
in
jne
leave
xor
cld
sub
aad
fnstenv
daa
and
pop
xorb
mov
insl
lock
mov
fldt
inc
aam
in
daa
fnstenv
int3
popf
inc
repz
ds
out
fcomi
loope
push
fnstenv
sbb
add
sahf
loop
sbb
mov
orl
dec
mov
sbb
pop
push
xor
int
adc
retw
sub
jp
adc
mov
test
jle
mov
test
aaa
xor
inc
mov
cmp
adc
add
aas
add
sbb
pop
lret
adc
xchg
dec
fsubrs
pop
mov
dec
cld
in
bswap
sahf
scas
sbb
repz
dec
push
jle
jl
xor
int
mov
in
dec
bound
inc
cmpsl
jl
push
out
insl
and
dec
cmpsb
insb
sti
xchg
js
fwait
inc
jle
aaa
xchg
or
pop
dec
mov
movsl
xorb
sub
ljmp
lahf
loope
push
scas
sbb
and
add
or
xor
inc
cmp
call
push
jg
inc
xrelease
shr
dec
ret
mov
cmp
movsb
pusha
add
ljmp
pop
xchg
cmp
cmp
shr
mov
pop
xor
jmp
dec
inc
hlt
mov
dec
pop
adc
xchg
mov
fprem1
sub
push
jnp
sub
lods
push
inc
sub
mov
pop
sub
ret
icebp
sbb
mov
xchg
fidivl
psubw
ret
adc
inc
mov
repnz
sub
lcall
add
sub
or
lods
add
cmp
rcrb
push
mov
dec
stc
or
jb
lcall
cmp
push
fs
mov
ds
adc
xor
ret
inc
cwtl
adc
imul
sbb
pusha
adc
psraw
je
iret
inc
xor
loopne
xchg
inc
push
mov
jmp
xchg
pop
cli
es
daa
push
mov
and
out
cmpsl
add
or
mov
mov
adc
push
adcl
and
scas
push
mov
push
leave
stc
add
daa
jmp
dec
mov
aam
mov
rolb
ret
fisttpl
jne
pop
jl
pop
fsubl
test
mov
push
jmp
mov
shrl
je
sub
and
shr
mull
test
ljmp
dec
shll
adc
int
sahf
test
dec
fldt
push
mov
inc
test
es
mov
pop
in
idiv
mov
cmp
in
test
push
jp
mov
call
jnp
lcall
push
fwait
dec
das
cs
cmpsb
fstpt
out
pop
sbb
in
jl
scas
add
mov
sub
call
movsb
and
test
pop
adc
popa
sub
push
xor
pusha
ds
cltd
pop
rcrl
scas
pop
scas
jp
sbb
push
and
scas
xchg
imul
pop
or
out
cmpsl
mov
daa
sbb
adc
xor
adc
mov
adc
in
sub
jecxz
add
in
ss
int
adc
pop
divb
lret
xor
sub
outsl
frstor
inc
pop
imul
or
pop
inc
mov
and
adc
inc
ja
inc
cmc
inc
cmp
scas
and
mov
mov
inc
roll
out
adc
adc
andl
jecxz
loopne
mov
mov
dec
nop
cmp
js
mov
outsl
pop
lock
mov
iret
jl
cmc
push
jb
mov
mov
sub
mov
aas
sub
cs
stc
jge
mov
xchg
int
jecxz
sbb
in
popa
in
inc
ss
push
addr16
icebp
pusha
dec
xor
pusha
je
jns
pushf
mov
jge
ret
fcmovb
xchg
push
aaa
jge
out
sbb
shrb
and
xchg
and
fucomip
sbb
int
insl
jb
ret
les
rcr
decb
fwait
jmp
adc
jo
inc
cmc
enter
adc
loope
jns
jns
loopne
jle
ret
or
sub
out
pushf
andb
and
bound
add
sahf
cmp
fs
test
fsubrs
bound
cmp
adc
push
mov
xor
loopne
mov
inc
cmp
sub
cmp
mov
mov
addr16
cmp
cld
gs
add
and
notb
or
pop
leave
xchg
push
sbb
movsl
mov
icebp
sub
and
xchg
dec
into
shrb
push
rorl
sbb
fyl2x
mov
iret
gs
out
mov
pop
pop
outsl
loope
movsl
lahf
loopne
push
insb
ds
cli
mov
lret
jmp
mov
or
sub
adc
jne,pt
negb
insb
daa
xchg
xor
xlat
and
int
sub
leave
ret
icebp
insb
es
int3
inc
movsb
mov
cld
aad
jns
add
mov
sahf
hlt
js
xchg
cs
pop
test
push
add
ret
jg
or
gs
adc
add
dec
repz
and
mov
lock
sbb
imul
push
nop
aas
loop
dec
push
dec
test
lret
test
inc
out
enter
push
scas
mov
mov
add
and
mov
xor
or
imul
push
dec
cmp
lcall
xchg
and
sahf
js
push
fdivr
fs
notb
xor
lock
push
lahf
imul
scas
add
mov
scas
mov
or
and
mov
mov
pop
dec
jnp
mov
mov
in
cld
sub
inc
add
mov
add
bound
ret
lods
push
addb
xchg
add
out
mov
pop
pop
sbb
into
shrl
int3
iret
loopne
pop
and
jl
jbe
xor
ja
aas
mov
aam
fidivrs
pop
pop
sbb
movsl
mov
mov
inc
xor
mov
sbbb
mov
mov
into
in
in
push
xchg
adc
cmp
mov
mov
out
mov
cmp
dec
ret
aad
push
add
mov
call
arpl
int
test
sbb
adc
out
mov
mov
pop
in
in
and
or
outsl
daa
xor
and
in
mov
imulb
adc
aam
dec
jbe
mov
addr16
sub
cs
xchg
jne
mov
xor
mov
inc
mov
xchg
loop
sub
addl
jae
cli
pop
jle
std
adc
jl
or
xor
insb
or
adc
data16
xchg
add
mov
jbe
mov
aas
sbb
mov
push
mov
inc
enter
jl
cmpsl
clc
imul
bnd
push
faddp
sbb
add
andb
push
enter
je
dec
arpl
push
xor
loope
pop
xorb
sbb
popa
and
cmpsb
xchg
push
pop
jp
daa
sahf
mov
aaa
stos
filds
sbb
sbb
ret
mov
or
mov
mov
je
and
hlt
mov
in
aam
idivb
mov
sti
push
shll
insl
jle
orl
es
lea
insb
mov
fldt
dec
fldcw
ljmp
sahf
jmp
mov
jmp
dec
and
jnp
icebp
add
aas
lea
scas
pop
aam
cltd
cmp
imul
ret
cmp
mov
and
ss
adc
jmp
movlps
rorb
add
inc
das
mov
ret
dec
add
xchg
cmp
aaa
sub
in
mov
aad
adc
lods
mov
ds
movnti
mov
sub
push
sub
pop
jns
pop
jecxz
mov
lret
sbb
inc
loopne
mov
ss
cmp
rcrl
repnz
js
data16
out
or
scas
shlb
int3
push
inc
push
push
mov
xadd
loope
testb
cmp
jp,pt
add
or
mov
divb
loope
or
out
fsubr
loope
push
mov
mov
loop
int3
cmpb
pop
jne
fsubrl
jle
pop
fldenv
mov
lods
cwtl
arpl
jb
stos
push
inc
or
xchg
and
fwait
sub
std
jae
cli
xchg
push
jle
mov
and
mov
cmc
xchg
mov
jno
xchg
ror
repz
dec
pop
jmp
sub
xor
aas
jb
pushf
ds
daa
cwtl
push
inc
xrelease
sbb
xor
xchg
and
aas
into
aas
dec
mov
ja
test
xor
lds
arpl
push
pop
add
sub
and
and
in
movsl
inc
and
xchg
mov
cmp
add
jmp
mov
sbb
mov
mov
das
movsb
rolb
insl
jl
inc
push
push
mov
cmp
shll
mov
loopne
jge
iret
insb
ljmp
ret
lock
sub
cltd
mov
clc
test
jo
xchg
loop
js
lret
jbe
sub
pop
vdivss
jmp
mov
jmp
pop
mov
dec
jbe
adc
xchg
jbe
cmp
push
enter
clc
and
push
xchg
mov
repnz
pusha
andl
push
inc
push
cmc
and
leave
fldpi
cltd
add
and
mov
push
push
es
movsl
push
jno
and
xor
stc
adcl
call
and
bound
pop
add
cli
or
inc
aad
pusha
xchg
adc
mov
scas
xor
pop
int
cmpsb
and
ss
scas
ret
lret
negb
sub
mov
xchg
adc
roll
scas
pop
mov
sub
stos
cmpsb
popa
dec
je
lahf
in
stc
mov
lds
mov
test
insl
aaa
imul
push
stos
es
adc
jb
cmp
adcl
pushl
adc
pop
jl
mov
jmp
lods
out
scas
cwtl
clc
out
push
jmp
mov
insl
das
mov
jae
loope
mov
sbb
test
je
data16
cmc
xor
jb
pop
jg
mov
pop
mov
lea
sbb
cmc
std
out
movsb
negl
out
out
leave
jmp
adcl
sbb
sbb
clc
shrl
jge
xorb
lock
movsb
pop
test
push
mov
in
insl
imul
aaa
icebp
test
pop
icebp
xor
jae
test
dec
cmpsl
lock
test
std
mov
or
repz
cmp
dec
outsl
inc
jge
cmp
loope
leave
out
or
dec
sbb
mov
push
push
mov
cmp
insb
into
popf
jmp
fcomps
aas
dec
jle
pop
les
das
mov
fldt
mov
out
pop
push
sahf
in
push
cmc
adc
pop
add
dec
ds
push
and
or
divb
sub
stos
lea
in
inc
repz
hlt
xor
enter
jbe
pushf
cld
inc
incl
jecxz
shr
jecxz
sbb
mov
pop
mov
loopne
jmp
fwait
int3
shll
sub
mov
jg
mov
push
rorl
hlt
sub
mov
jno
xchg
fbld
jg
mov
mov
aas
xor
xchg
mov
push
rorb
sub
sbb
jp
jae
sarl
ret
sbb
mov
cmp
test
adc
clc
lret
pop
push
mov
dec
dec
fsubs
in
mov
jg
stos
cld
lock
in
std
rorl
mov
xchg
mov
int3
mov
inc
cmc
pop
sti
and
stos
or
jno
jo
dec
popa
adc
aaa
cmc
popa
adcl
test
stos
rdpmc
and
push
test
push
clc
ljmp
pop
pop
sub
cmp
mov
push
fldt
aaa
inc
push
loope
subb
es
xchg
and
lahf
or
jne
push
push
out
add
je
adc
stos
pop
mov
mov
mov
cmpsb
stos
jp
push
fwait
push
fcompl
cmp
and
xchg
imul
insl
and
push
in
and
and
pcmpeqw
mov
or
cmp
sbb
jg
inc
sbb
dec
jno
mov
inc
mov
insl
int
xor
push
dec
aad
mov
pusha
sub
push
orl
inc
adc
sub
jno
loop
adc
andl
leave
xchg
hlt
test
pop
mov
push
mov
or
movsl
fisubrl
push
test
in
addl
cld
mov
mulb
xlat
in
stos
mov
xlat
sbb
leave
mov
out
icebp
shl
mov
test
jp
lret
fistl
jge
out
cmpsb
sub
cmp
inc
lea
out
enter
sub
imul
ret
sbb
mov
pop
pushf
or
sti
pushf
mov
pop
push
in
adc
pop
push
jp
mov
sub
push
pushf
std
add
je
fists
pop
cs
jnp
xchg
mov
int3
pop
pushf
daa
out
repz
scas
push
add
fldt
js
sub
and
push
stos
or
sub
mov
mov
nop
popf
inc
xor
mov
cli
outsb
push
std
cld
fwait
add
mov
gs
stos
mov
lds
inc
push
xchg
ss
mulb
stc
or
push
jns,pn
and
test
mov
rcr
arpl
gs
test
mov
dec
jmp
sbbb
aad
xor
push
dec
mov
xor
inc
addr16
test
xchg
pop
jg
popf
andb
push
inc
adc
cld
dec
outsl
loopne
jmp
jns
sub
gs
mov
mov
lret
xchg
subb
mov
xchg
pusha
mov
popf
aaa
dec
notb
ljmp
sbb
and
or
sbb
mov
push
mov
shl
incb
inc
lret
or
jl
rcrb
les
in
insb
mov
cmpsl
in
fsub
mov
jne
and
into
mov
scas
xor
xchg
push
popf
data16
cmp
inc
cmc
lods
icebp
jmp
loope
outsb
push
test
out
sbb
ds
mov
out
pop
data16
cmp
cmpsb
or
dec
fidivs
mov
stos
stos
xor
pop
push
mov
jl
and
scas
cmp
push
push
jo
adc
subb
inc
mov
sub
cltd
cmp
addr16
xchg
ds
and
sub
je
xor
sub
sub
jo
mov
das
bound
sub
sub
fstps
repz
jge
ss
or
repz
sbb
imul
push
fcom
push
outsb
mov
mov
lret
mov
enter
inc
sti
xchg
mov
imul
add
add
sub
dec
xor
add
aam
xor
cltd
ljmp
cmpsb
cld
addr16
test
cltd
mov
pop
pop
cwtl
inc
sub
aam
pop
cld
adc
xchg
fidivrl
icebp
or
jle
out
fldenv
test
mov
cmp
fwait
loopne
jmp
mov
inc
jne
cmp
iret
and
insl
xchg
mov
daa
sahf
aad
rcrb
add
sbb
push
rep
test
cli
movsl
out
cmp
and
mov
sahf
loop
addr16
xor
pop
jbe
cwtl
rclb
sahf
xlat
or
adc
ljmp
dec
and
addl
mov
hlt
loope
stos
les
xchg
add
sub
lds
fisubrs
jg
ljmp
outsl
cmpsb
out
loopne
das
repnz
outsl
cmpsl
in
cld
test
sbb
and
jmp
xlat
add
inc
loop
rorb
jb
push
les
or
idiv
nop
lret
cmp
xor
imul
stc
jp
cmc
insb
push
xor
add
movsb
dec
lea
pusha
pop
mov
jns
in
ret
adc
add
pusha
fsubl
mov
sbb
push
xchg
add
lock
cmp
xchg
adc
cs
lret
clc
jbe
mov
incl
into
add
push
inc
or
inc
pusha
and
xor
lea
push
rcr
and
cwtl
fsubp
lock
xchg
inc
lock
lahf
jbe
sahf
sti
add
lret
popa
fwait
or
pand
xor
test
mov
nop
pop
frstor
and
sub
jl
or
xchg
inc
push
xchg
pop
and
cmp
xor
xor
add
fbld
test
daa
cmp
cld
xchg
mov
fsubrs
push
dec
dec
mov
nop
shr
jmp
outsl
jno
jo
xor
add
bnd
fisttps
test
push
cmp
jbe
or
adcb
ret
push
leave
adcl
repnz
cmpsl
pop
aaa
in
pop
shlb
jnp
pusha
enter
pusha
nop
xchg
pop
fmull
mov
pop
sub
pop
jg
cmp
mov
push
xchg
and
push
addl
jge
mov
lds
shll
adc
and
mov
addr16
pop
pop
jg
fstpt
int
add
int3
mov
stc
jp
repnz
ret
mov
sti
push
sar
enter
cmp
pop
lds
fs
arpl
sub
xor
adc
adc
xchg
and
ret
jg
int
pop
dec
xchg
push
lock
pop
fisubs
mov
add
xor
or
orl
push
std
loopne
jno
pop
in
movsb
sbbb
js
outsb
add
add
in
adc
jmp
shrb
push
mov
lods
pop
push
or
inc
or
mov
cmp
testb
gs
inc
dec
pop
and
mov
jle
jo
mov
outsl
sbbb
shrb
adc
lcall
imul
dec
cltd
adc
insb
pop
xchg
xabort
and
daa
test
and
repz
cmp
add
sub
sbb
adc
jo
push
rcrl
pop
into
xchg
ss
jl
fdivr
mov
pop
jl
xor
daa
fnstenv
dec
mov
movb
insl
mov
mov
xor
adc
enter
add
loopne
and
push
sbb
push
or
adc
xchg
xchg
mov
push
sahf
sti
mov
jmp
add
mov
popa
cwtl
jne
push
imul
lcall
sbb
sub
xlat
sbb
adc
call
cmp
push
pop
fldl
mov
imul
inc
sub
mov
cld
push
ljmp
in
dec
stos
xchg
dec
jge
in
push
inc
out
je
daa
or
sub
daa
push
push
adc
clc
das
shlb
test
xchg
and
xchg
push
xchg
pop
mov
nop
xchg
addl
das
add
dec
push
mov
sbb
xor
aam
call
aas
mov
xchg
out
sbb
push
sbb
aad
pushf
cwtl
negb
jmp
cli
and
ret
push
pop
std
mov
int3
mov
jmp
push
bndldx
mov
in
loope
lcall
pusha
test
scas
push
mov
cmp
cmp
sbb
jecxz
pop
imul
inc
clc
sarb
pop
test
add
pop
jbe
out
cmpsl
dec
or
fstpt
push
xor
out
imul
jb
rorl
add
inc
sub
movsb
int3
cs
aam
xor
add
pop
push
loopne
sbb
loop
stc
xor
lea
test
loop
jbe
aas
mov
pop
scas
jne
sub
pop
aad
pop
mov
fistpl
icebp
subl
jecxz
xlat
pop
into
mov
ljmp
ds
or
outsb
dec
cli
or
push
adc
bound
stc
inc
shll
orl
pushf
bnd
xchg
shll
outsl
bound
cmp
inc
int
in
sti
das
lock
and
push
fucomi
cmpsb
push
into
cmc
lret
and
push
pop
jmp
xchg
enter
divl
cltd
rcrl
jo
mov
cmpsl
push
add
adc
mov
sbb
jg
dec
cmp
inc
xchg
je
stos
lods
xchg
push
lret
push
aam
sahf
into
pop
add
mov
fs
mov
stos
lds
cmp
adc
sahf
fnstsw
or
lods
xor
push
add
push
sbb
mov
jne
in
aad
inc
in
or
push
mov
jge
shlb
aad
pop
mov
xor
sub
cmp
incl
rolb
dec
push
jp
shrl
je
fildl
aam
add
ss
and
fcmovbe
cmc
sarl
add
stc
in
inc
push
mov
in
dec
cmp
ja
cmpb
scas
cmc
sbb
test
loope
incb
repnz
mov
repnz
and
lret
cmp
or
aad
outsb
adc
add
rclb
pop
lods
pop
jo
adc
dec
test
mov
imul
xchg
or
mov
mov
mov
inc
jmp
fwait
mov
sub
push
mov
stos
dec
mov
lock
repnz
aam
movsl
mov
push
xor
sub
push
or
pop
imul
aaa
adc
cwtl
and
mov
mov
jns
dec
pop
or
pop
push
arpl
xchg
jl,pt
jae
inc
push
or
rorl
jno
out
dec
outsb
sub
cmp
xchg
fistpll
mov
pusha
push
rolb
jge
test
cmp
xor
mov
lods
jo
int3
into
cmc
dec
sub
pop
push
scas
mov
fs
xchg
push
popf
xor
pop
fbld
movsl
test
push
jg
jns
ja
sub
pop
clc
xchg
sbb
rcl
ja
rclb
xchg
mov
loope
push
mov
xchg
test
or
and
das
jmp
mov
jbe
gs
out
inc
int3
push
dec
inc
out
lods
fstpl
dec
sub
in
mov
push
jmp
push
imul
stc
inc
cltd
sub
fdivrs
data16
cmp
cwtl
xchg
in
out
lock
mov
cwtl
cmp
sbb
and
push
in
inc
inc
rolb
lret
cltd
in
or
lock
inc
or
adcb
cwtl
loope
dec
cmc
xor
inc
jnp
cli
clc
enter
dec
push
cmpl
sahf
add
lock
push
insb
xor
sbb
scas
call
arpl
push
jmp
lret
pusha
cmp
imul
push
rolb
fs
ja
scas
lea
cvtdq2ps
add
add
popa
lds
or
mov
push
mov
test
inc
mov
push
dec
lds
jbe
addb
push
add
fsts
inc
cld
sub
mov
xor
jb
dec
sub
pop
mov
xchg
mov
cmp
cmpsl
and
cmp
push
or
sub
and
mov
aas
stos
mov
loop
dec
stos
loopne
xchg
das
jmp
mov
stc
cmc
lret
xchg
pusha
ret
fldt
mov
pop
jg
push
loop
push
cmp
xchg
repz
mov
outsb
adc
inc
cmp
imul
out
jns
lret
mov
dec
adc
leave
pushf
outsl
push
sar
sbb
jns
inc
daa
imul
lahf
or
js
popa
shlb
and
push
mov
mov
or
dec
lock
mov
andb
pop
loope
popa
inc
mov
pop
xchg
adc
rorb
push
xor
js
xor
std
pop
addr16
adc
push
mov
fst
jge
xlat
ja
adcb
lcall
push
jae
mov
or
adc
pop
int3
enter
in
mov
add
test
out
jmp
sub
jno
fwait
mov
repz
adc
ret
lret
mov
xor
and
pop
sbb
daa
pop
jns
loopne
dec
push
mov
scas
or
mov
sbb
push
out
dec
loope
sub
das
loopne
repz
outsl
xor
je
add
and
mov
lret
addr16
mov
in
repnz
cmp
sub
jmp
inc
insl
sub
scas
adc
sbb
lret
das
testb
jns
movsb
iret
jo
inc
shl
test
pop
mov
stos
outsb
popf
or
mov
stos
mov
xor
arpl
inc
dec
sub
or
orb
rcll
testl
hlt
mov
cmp
sbb
xor
inc
loopne
ja
ja
pop
inc
or
outsl
pop
fsts
xchg
pop
pop
cmpsb
lcall
fstl
ljmp
dec
sub
push
sbb
mov
dec
or
xchg
mov
inc
jne
js
in
ficomps
imul
xchg
sub
cmpsb
mov
mov
icebp
add
push
xor
in
std
jno
cmp
std
sub
xchg
daa
div
xor
test
lods
lock
and
xor
data16
pop
ret
mov
sub
in
scas
lea
jb
adc
or
cmpsb
pop
mov
movsl
inc
push
jno
addr16
xor
xor
int3
fdivr
dec
mov
add
or
lock
ja
sbb
xchg
mov
mov
icebp
inc
imul
aaa
je
arpl
adc
loop
fimull
jge
pop
xor
cmp
adc
cs
aam
ret
add
jl
inc
push
lahf
int
imul
add
adc
pop
inc
mov
jmp
shl
mov
test
sarb
daa
mov
stc
xor
int
sbbb
mov
and
dec
jmp
mov
mov
or
fwait
pop
adc
cld
ror
jnp
mov
adc
std
mov
xchg
xchg
sub
cld
jmp
aam
xchg
xchg
shll
jg
fildl
sbb
sub
xchg
mov
sbb
or
lea
add
add
xor
insl
gs
push
loope
inc
arpl
jle
dec
xor
cli
sti
test
dec
and
jmp
cmp
cmp
push
sub
push
addr16
cmp
mov
imul
lret
in
push
or
jnp
mov
dec
arpl
or
xor
cmp
ficompl
adc
xchg
sahf
mov
xor
dec
sub
jb
or
sti
cmc
fistpl
nop
aas
jge
leave
into
pop
jle
dec
inc
cmp
clc
xchg
ret
mov
cs
and
imul
loop
cmp
jle
outsb
in
arpl
mov
addl
or
repnz
lds
push
jmp
out
dec
mul
outsb
pop
jno
and
dec
popa
dec
mov
jae
shr
sbb
sar
dec
pop
adc
cmpsl
mov
or
mov
cld
test
addl
xlat
sti
movsb
push
rorb
js
xor
inc
jl
xlat
in
enter
mov
int
push
ret
jae
mov
push
xorl
xor
mov
jno
andl
outsl
inc
in
xchg
stos
or
mov
adc
add
inc
mov
movsl
push
pop
or
push
and
lods
dec
fcomip
jle
push
movb
sbb
jae
mov
popl
dec
outsb
mov
xchg
mul
cltd
ljmp
popf
jle
push
push
add
xor
and
cld
scas
cld
xlat
movsb
ds
je
xchg
imul
loop
aaa
imul
xchg
and
and
sub
mov
out
xchg
into
inc
sbb
scas
pop
sub
lret
or
mov
xchg
dec
or
mov
push
mov
movsb
das
je
data16
es
mov
stos
add
adc
pop
dec
mov
nop
aam
or
ret
xchg
das
adc
pop
in
inc
dec
lods
xchg
cli
mov
pop
or
jmp
cwtl
adc
out
jnp
cmp
push
data16
les
ss
adc
aam
and
mov
and
or
lock
push
pop
cmp
inc
rolb
clc
push
push
test
inc
sub
jb
cmp
std
cs
dec
stc
test
outsl
and
stos
cmp
xchg
jb
sub
insl
inc
push
sub
push
in
repnz
jge
inc
mov
mov
xchg
stc
sub
test
pusha
xchg
data16
sub
jg
mov
dec
dec
rcrb
xlat
dec
inc
mov
test
jg,pt
popa
int3
pop
inc
jbe
or
push
int3
cli
or
push
jle
mov
and
sub
sti
stos
xchg
inc
cmpsl
xchg
rcrl
and
push
sbb
adc
sub
sub
xchg
loope
jno
je
jmp
stos
inc
lea
inc
jmp
inc
pushf
xchg
add
xchg
add
ljmp
mov
cmp
xlat
mov
sbb
sbbb
lds
inc
inc
or
cli
push
das
dec
xchg
dec
xchg
jge
mov
movb
push
mov
std
mov
shl
or
push
and
lahf
shr
mov
lahf
enter
mov
lea
lea
fldenv
cltd
mov
xchg
mov
mov
nop
gs
cs
les
lods
mov
inc
rcrl
dec
or
cli
bound
or
mov
cmc
jne
xorl
orl
fildll
push
fcmovnu
repz
sahf
xor
ret
insb
int
mov
leave
push
ljmp
sbb
dec
cs
and
add
sub
nop
cwtl
mov
sbb
cmp
adc
fimuls
mov
push
shll
mov
sahf
rcll
add
add
shll
fdivrs
xchg
imul
mov
cld
mov
mov
decl
mov
lds
int3
hlt
mov
std
jl
lret
mov
inc
add
jne
lods
cmp
dec
out
inc
jno
inc
cmp
xchg
aas
inc
sbb
push
push
enter
cmp
bound
jl
popa
addr16
das
inc
mov
cmp
add
dec
sub
lret
inc
xchg
push
mov
pusha
fisubrs
shlb
out
pushf
idivb
lea
cmpsl
pop
dec
pop
push
ret
mov
adc
shlb
call
mov
cmp
pop
push
or
in
cs
jmp
jae
bound
ljmp
xchg
mov
add
jno
daa
icebp
push
or
test
adc
xor
mov
jo
leave
std
imul
mov
fidivs
inc
clc
pop
shll
xor
pop
mov
pop
push
insl
test
icebp
icebp
rcrl
dec
mov
test
pop
sub
and
xor
jb
sub
jae
push
dec
sub
push
loopne
movsl
sub
enter
lods
rcrl
hlt
jle
mov
mov
xor
rol
add
aad
push
and
repnz
aaa
lea
push
cmpb
shrl
xor
dec
shll
adc
outsl
hlt
in
imul
daa
adc
sub
cmp
xor
addr16
mov
mov
mov
sub
jle
ss
mov
out
pop
outsb
mov
repz
or
sbb
dec
out
jno
mov
push
cmp
loope
xor
jg
xor
dec
and
in
loope
xor
cmp
sbb
inc
loope
mov
push
jge
or
rorl
mov
sub
and
loopne
jmp
xlat
out
shrl
bound
sbb
clc
or
mov
add
jecxz
mov
xchg
adc
cwtl
adc
out
cmpsl
pop
jo
call
or
imul
aam
mov
sub
fsubrl
mov
je
inc
sbb
sub
mov
inc
icebp
lods
add
lods
cmp
in
rolb
ds
inc
insb
rcr
pop
adcl
cwtl
sbb
mov
dec
movsb
pushf
int
xor
mov
xchg
test
pop
jecxz
lret
mov
and
aam
xchg
mov
sahf
jo
cs
rcr
in
jecxz
mov
icebp
mov
pop
daa
jne
pop
mov
sahf
mov
int3
pop
mov
nop
lea
test
or
aam
xor
pushf
stos
add
imul
rol
mov
pop
push
jg,pn
icebp
jmp
inc
and
lcall
movsl
cmp
or
xor
or
sub
and
jg
arpl
insb
into
cld
loope
dec
cmpsb
cli
es
inc
or
jmp
mov
xor
repz
or
inc
int3
in
in
sbb
sub
fcoms
sbb
test
push
adc
dec
inc
sbb
sub
jle
shr
jnp
iret
mov
inc
roll
pop
xchg
push
fisubl
dec
mov
sub
dec
and
in
ds
scas
shl
sub
je
test
jmp
aaa
jmp
xchg
sub
out
in
into
adc
fldenv
repnz
jbe
iret
xchg
jg
dec
mov
mov
testl
ret
fisubl
paddsw
into
sub
cmp
sub
push
push
jge
cld
push
and
xor
repnz
movsb
rcll
jno
pop
cltd
mov
or
mov
adc
sbb
mov
adc
mov
xlat
cmpsb
repz
push
addr16
adc
test
in
xor
jns
push
xor
adc
cmp
adc
nop
push
repnz
dec
fistl
mov
fs
mov
test
mov
xor
sbb
xchg
mov
les
insl
popf
jmp
mov
mov
ds
popf
jmp
movsl
clc
dec
icebp
mov
cmp
mov
enter
outsb
adc
pop
cmp
or
cmp
js
push
fs
ja
dec
bound
push
mov
add
movsb
jnp
sbb
cmpb
inc
aaa
cmpsb
sbb
subl
jl
adc
mov
xchg
pop
jmp
add
xchg
mov
xor
int
add
xchg
lahf
insb
rcrl
aas
dec
adc
cmp
cmp
push
pushf
adc
pop
xchg
sbb
popf
mov
cs
hlt
pusha
and
cmp
addb
std
mov
pop
pop
sahf
pop
fwait
xor
dec
rorb
inc
cmpsb
dec
out
xchg
sahf
push
sub
inc
fcomp
clc
dec
and
fstpl
mov
lock
sbb
mov
jb
cs
test
sahf
adc
scas
sbb
out
jno
or
cmp
jae
mov
bound
and
dec
sbb
jecxz
shrl
test
push
sti
mov
sub
xor
add
popa
push
mov
pushf
cmp
addr16
out
mov
add
and
cmp
mov
popf
mov
pop
and
xor
leave
mov
mov
sub
jp
xor
into
fmuls
bound
push
and
ss
cmp
in
pop
xchg
adc
frndint
mov
loope
dec
push
mov
cld
fwait
out
xchg
pop
jg
lods
retw
shrb
sub
das
repnz
dec
and
pushf
aaa
pop
add
ja
cld
das
insl
dec
xorb
pop
andl
or
call
pop
mov
jno
add
cld
lea
sti
pop
in
mov
sbb
inc
lods
and
pop
sub
xor
cld
or
mov
out
add
push
mov
mov
addr16
pop
xor
and
repnz
mov
xchg
in
outsl
jmp
push
daa
cmpsl
cmc
mov
leave
insl
or
pop
add
scas
ljmp
push
rcll
divl
cmp
pop
mov
cmp
imul
les
cmpsl
xor
pop
fcomps
bound
bound
adc
xor
sbb
sub
push
cmp
add
or
jne
call
repz
sub
sbb
adc
pop
jnp
pop
fsubl
mov
sub
pop
adc
jns
repnz
xchg
or
test
imul
test
ds
mov
test
sub
pop
sbbl
dec
push
lahf
jbe
or
push
cmp
adc
push
mov
test
sbb
js
inc
mov
sbb
mov
inc
mov
dec
repnz
fs
mov
pop
inc
frstor
inc
clc
pop
push
push
and
mov
sbb
jmp
push
dec
inc
lea
xor
fnstcw
dec
out
sbb
cmc
sub
pop
icebp
fucomi
sub
xor
push
jg
and
cmp
enter
xchg
inc
jmp
add
and
inc
dec
imul
test
lret
pop
fsubl
add
push
mov
movsb
mov
inc
out
int3
ret
mov
sar
cmp
js
in
lods
sub
mov
jle
andb
pop
mov
nop
clc
arpl
jne
add
cld
inc
xor
pop
sbb
dec
lcall
xor
cmpl
jle
lahf
imul
iret
push
lds
dec
and
mov
pushf
insb
cmp
xor
jo
pop
xor
std
mov
pop
leave
into
push
jl
adc
cmp
ljmp
xor
dec
cld
pop
xor
jecxz
call
lea
and
dec
and
mov
repnz
mov
fcoml
xor
jns
lcall
sub
lds
mov
sets
inc
mov
push
icebp
std
aam
sub
ds
outsl
add
lds
std
adc
test
test
clc
dec
adc
cs
insb
inc
mov
cltd
sbb
fisttps
pop
adc
mov
pop
cmc
mov
lret
jns
inc
jno
pop
into
inc
or
cmc
aaa
andb
or
cltd
fidivrl
adc
popf
movb
lods
inc
aam
clc
cli
mov
push
aam
inc
loope
and
incl
addr16
or
jbe
int3
mov
lods
push
pushf
cmp
jle
gs
sahf
mov
mov
sbb
jecxz
cltd
ja
or
sub
insb
mov
xchg
mov
dec
loope
mov
jp
data16
out
in
test
xchg
out
mov
xchg
adc
inc
aam
dec
mov
in
fwait
lcall
ds
in
inc
ds
outsl
mov
push
insl
stc
sub
repz
or
enter
adc
add
adc
sbb
and
adc
divb
push
hlt
push
sti
cmpsl
xor
aad
mov
iret
push
mov
or
jae
sub
push
push
jo
movb
mov
and
jmp
or
cmovae
xchg
xor
and
fs
push
push
repz
push
xlat
lcall
dec
addr16
sbb
imul
cmp
cmp
fisttpll
popf
shll
push
mov
je
fldcw
jne
add
sub
and
cwtl
sti
fidivrl
mov
arpl
xchg
out
sbbb
adc
insl
imul
rcll
cmpsb
ds
cmp
push
jl
push
jo
iret
sub
inc
loopne
pop
mov
mov
mov
int
pop
pop
insl
adc
enter
xchg
jp
addr16
sarl
dec
mov
test
adc
mov
sub
pop
adc
rcrl
jo
mov
jbe
cltd
xor
test
push
js
std
mov
lret
push
or
inc
pop
sub
sbbb
jmp
inc
pop
dec
mov
in
and
fcom
sub
mov
outsl
jbe
lcall
xor
push
xor
mov
inc
ret
cmp
mov
inc
cs
cld
js
sub
push
sub
or
dec
shlb
loopne
pop
movb
rorb
es
jo
scas
lea
xchg
out
shrl
lahf
cmp
sbb
xor
mov
ret
rorb
test
jnp
sub
ret
pop
pop
mov
dec
stc
xchg
jnp
mov
stos
push
divl
and
cmpsb
aaa
or
mov
jl
int3
jecxz
xchg
jp
icebp
cmp
mov
jmp
icebp
xor
shlw
mov
ljmp
mov
call
jns
lock
adc
jl
jb
sbb
pusha
mov
lcall
out
cmp
sahf
in
enter
xchg
ret
int
xor
mov
sbb
popa
jge
cmc
in
inc
mov
cmp
scas
jmp
xor
mov
add
insl
add
js
mov
pop
and
jle
addl
aad
movsb
pop
cwtl
mov
mov
fcomps
sub
mov
or
adc
sub
mov
and
mov
idivl
mov
sub
or
test
or
ficomps
fdivs
sub
adc
mov
in
cmp
loope
aaa
mov
arpl
in
pop
cmp
adc
cmp
mov
std
movsb
in
int3
loop
mov
and
mov
xchg
pop
inc
loopne
mov
pop
in
outsl
jmp
pop
mov
pop
jmp
pop
mov
mov
in
sbb
jge
out
sahf
add
iret
test
add
and
xchg
out
pusha
loopne
lods
mov
aas
or
mov
repz
ret
adc
lcall
mov
in
pop
cli
mov
out
cwtl
inc
icebp
ss
fwait
stc
rolb
mov
dec
negb
mov
jo
jge
lock
fsubl
xchg
imul
cmp
mov
ficoml
cmp
out
cltd
sbbb
jnp
aam
mov
xchg
mov
lahf
sub
inc
je
jb
call
lret
mov
enter
jl
adc
push
pop
and
add
sbb
nop
add
sub
sbb
mov
cmp
ss
loop
jnp
jns
shr
mov
cmp
pop
loope
dec
cs
mov
in
push
scas
insb
scas
and
daa
pop
xlat
jns
lock
sub
int
push
ret
lcall
aas
repnz
rclb
mov
cmp
daa
aas
fs
jmp
fs
sbb
cmpsb
ja
jmp
adc
pop
pop
pop
cmp
std
jns
or
pushl
jecxz
repz
fnstenv
loop
loop
shll
sbb
push
cmpb
sbbl
pop
sbb
aad
repnz
mov
sbb
je
subl
mov
mov
push
pop
sti
cmp
shrd
push
out
rol
xor
adc
dec
sub
mov
mov
out
ret
xor
popf
inc
pushf
les
test
sbbl
push
or
push
push
fmull
ret
inc
les
in
push
xor
negl
jg
inc
jg
adc
push
mov
xchg
les
movsb
push
ljmp
xchg
lea
cli
add
test
add
and
xchg
lock
aas
iret
lahf
xor
cmp
push
loope
out
mov
fsub
xor
xchg
dec
adc
icebp
mov
lds
mov
xchg
test
aam
cmpsl
popf
inc
popa
and
pushf
adc
and
ljmp
xchg
imul
movsl
outsb
jno
test
inc
push
mov
mov
push
adc
jl
cmp
push
cld
pop
mov
fs
xchg
adcb
jecxz
push
loopne
shll
imul
in
fld
xchg
je
fisubl
jp
mov
jg
in
fiadds
es
insb
add
inc
outsl
mov
mov
mov
xor
pop
pop
aam
jle
add
lahf
inc
sahf
add
mov
movsb
mov
jge
ds
xor
jmp
mov
push
jecxz
mov
cmpsb
jge
test
imul
cwtl
mov
push
popa
push
jge,pt
cmc
dec
sub
in
fcompl
rcrl
aam
pop
into
std
movb
lds
aam
das
insl
pop
int3
lock
jge
subl
mov
xor
add
sbb
push
mov
pop
popa
sub
cmp
jbe
jbe
jle
push
ja
or
cmp
mov
cmpsb
mov
lock
aas
cmp
sbb
lds
in
sbbl
add
scas
cmc
cmp
and
push
and
pop
or
adc
lahf
mov
jo
test
pop
jnp
sahf
sub
lods
xchg
cs
lret
xchg
jb
cli
out
push
rcr
mov
arpl
outsb
insl
xchg
addb
lds
iret
fcomp
add
insb
mov
and
push
and
push
mov
jbe
push
cs
inc
mov
ret
cmpsb
adc
cmp
aam
loope
cwtl
xchg
imul
mov
sbb
icebp
or
jle
and
sub
or
repnz
sbb
xorb
push
mov
test
jo
movsb
gs
xchg
das
mov
test
cmp
ljmp
dec
push
pop
add
aad
jns
dec
and
xchg
push
sahf
stos
push
out
cmp
push
test
push
sub
pop
rol
rorb
mov
jg
movsl
xor
sub
pushf
lcall
loop
or
sub
sbb
mov
sbb
and
test
jecxz
cmpl
pop
arpl
sub
mov
add
sbb
stc
repnz
imul
mov
xchg
jns
popf
stc
mov
ljmp
je
jbe
nop
sbb
sbb
scas
pushf
xor
cmp
enter
or
mov
loope
or
mov
adc
jmp
bound
movntps
pop
out
mov
add
mov
push
pop
shr
pop
dec
lods
mov
inc
inc
loop
pop
sub
inc
dec
loop
dec
fs
push
push
or
ljmp
dec
stos
sar
cli
sub
cli
dec
mov
sub
aas
push
cld
fdivrl
sbb
ret
dec
mov
mov
cmpl
jg
lret
adc
mov
push
rorl
inc
mov
push
imul
out
pop
jbe
sub
push
rorb
fwait
aaa
sbb
add
and
shll
jnp
sahf
pop
ficompl
iret
xchg
pop
xor
ds
xor
xchg
and
pushf
into
mov
das
sti
xchg
sub
hlt
mov
mov
cvtpi2ps
repz
lret
inc
mov
add
ljmp
icebp
enter
mov
cmc
fidivrl
data16
cs
mov
arpl
roll
pop
add
ja
xchg
jne
scas
mull
adc
adc
dec
fbld
hlt
or
jle
cs
and
jp
jbe
fimuls
or
mov
pop
mov
push
cmp
and
aam
mov
pop
cmpsb
ret
adc
and
pop
cmp
sbb
jo
aas
addr16
aad
pop
adc
push
outsl
sbb
push
sbb
test
push
cmp
push
pusha
popa
and
inc
adc
repz
adc
add
rolb
out
int
mov
cld
cmp
sarb
data16
mov
test
and
loop
push
lret
pop
xchg
dec
aad
xchg
adc
mov
pop
lret
into
stos
jbe
pop
lea
iret
bound
sub
xchg
out
ret
cltd
gs
sbb
in
cltd
inc
inc
xlat
data16
adc
ret
fucom
inc
mov
dec
mov
arpl
cmpsl
popf
clc
jbe
outsb
roll
cmp
lods
push
fcomps
cltd
mulb
cmpsl
xor
lret
push
cld
or
jne
mov
or
gs
xor
adc
in
js
dec
pop
iret
push
loope
cmp
jne
lds
rolb
add
xor
out
pop
push
inc
loop
sub
nop
xor
mov
mov
movsl
sub
mov
inc
push
pmullw
loop
sbb
fprem1
jmp
mov
sbb
add
loopne
xchg
int3
daa
dec
les
xchg
stos
cltd
out
fwait
adc
aaa
jae
inc
sbb
push
xor
push
mov
inc
das
lods
add
imul
stc
push
cmp
fwait
cmp
or
int3
sbb
cli
ror
les
mov
test
cld
jno
lret
dec
xchg
movsl
sub
push
jge
into
dec
test
jnp
subb
test
lock
sbb
cmp
ror
cmc
mov
add
lcall
lea
push
mov
lods
jmp
scas
or
jo
and
pop
cmpl
cmpb
adc
out
int3
jne
popa
stc
sub
imul
sub
cwtl
int3
aaa
daa
cmp
adc
or
aam
fwait
mov
push
sbb
movsb
das
mov
jns
xchg
jno
adc
mov
xchg
loope
mov
fs
sbb
cmpsb
lods
lret
jno
pop
cmpsl
outsl
cmp
jnp
pusha
cmpsb
sbb
movsl
lock
dec
add
dec
jmp
stos
imul
addl
jp
push
mov
adc
sbb
xchg
dec
iret
gs
sub
movsl
mov
mov
stos
xor
and
pusha
and
add
sbb
test
push
test
mov
sbb
adc
sbb
rclb
paddb
mov
div
mov
jmp
mov
mov
out
cltd
pop
cmpsl
mov
popf
xchg
adc
scas
jp
in
sub
and
inc
cmp
ja
arpl
cld
mov
cmpb
loope
icebp
mov
and
push
sub
xchg
dec
loop
jns
sahf
dec
mov
dec
in
jmp
add
lods
ret
aaa
pop
mov
jne
dec
fwait
je
hlt
gs
mov
mov
fiadds
lock
sub
push
pop
ds
cmc
mov
xchg
pop
cwtl
mov
push
loopne
xchg
and
insl
cmp
repnz
mov
and
nop
push
fs
imul
lcall
pop
and
sbb
push
inc
mov
test
jg
mov
mov
cmp
clc
push
mov
imul
mov
xor
cmp
clc
pusha
mov
in
repz
or
test
mov
and
data16
nop
cmp
jbe
sub
push
cmpl
rcrl
movsb
xor
pop
fbstp
mov
mov
pop
push
faddp
mov
out
cmpsb
jmp
outsl
je
es
les
rclb
adc
fs
jns
mov
and
xor
adc
push
or
mov
imul
shrb
xor
or
or
aad
ret
sbb
pop
sub
dec
in
add
dec
adcb
pop
scas
jmp
jae
dec
cmc
and
int3
inc
ss
test
dec
loop
push
dec
mov
fnsave
mulb
add
pop
outsl
sti
xor
test
inc
insl
inc
out
ss
stos
popa
push
rorb
sahf
int3
jl
cmc
sbb
and
push
sbb
dec
lcall
filds
xchg
add
jg
and
sub
xor
mov
mov
rorl
or
testb
test
pop
repz
hlt
sub
cmp
shll
ret
xor
adc
inc
lret
sarb
or
mov
cs
rorb
pushf
jge
pop
mov
or
adc
mov
xchg
adc
inc
pop
repz
xchg
push
pop
daa
inc
jle
mov
rol
ret
xchg
ret
dec
lock
mov
cmp
repnz
aad
inc
das
addr16
loopne
dec
inc
jae
bound
inc
xorb
insl
mov
movsb
cmpsl
and
sti
push
data16
pop
xchg
or
clc
mov
lea
jp
adc
mov
mov
aam
lret
popf
jno
push
pop
addl
test
mov
adc
arpl
bound
push
jp
cmpsb
pop
jnp
cld
pusha
enter
mov
sub
and
in
mov
orb
aaa
pop
sbbl
pop
lcall
cmp
push
clc
addl
or
jmp
repnz
fstl
jo
dec
test
and
xchg
lods
aaa
push
xor
leave
mov
inc
dec
outsl
push
ljmp
fcmovnbe
mov
roll
sti
imul
negl
sbb
push
xor
cltd
insl
jle
imul
jecxz
ljmp
pop
xchg
push
data16
add
xor
fbld
cmp
and
mov
mov
sti
ja
iret
addb
and
scas
mov
icebp
ret
xchg
mov
add
mov
sub
popl
data16
mov
lods
push
in
adc
daa
gs
mov
iret
sbb
popf
enter
mov
data16
int3
addr16
inc
cmp
pop
ljmp
scas
dec
sbb
jmp
mov
adcl
jne
dec
add
jns
lds
cmp
loopne
mov
pop
push
ljmp
push
lds
sub
jmp
scas
les
loop
js
mov
iret
jne
ret
ja
push
inc
scas
jae
es
outsb
xor
cmp
pop
add
fdivl
jp
mov
xchg
mov
mov
mov
mov
cmp
cmc
add
pusha
notl
call
inc
sub
mov
ret
and
out
add
lods
out
pushf
mov
lret
cmpb
jmp
int3
ficoml
mov
divl
mov
daa
mov
das
jb
lahf
insl
adc
int3
orb
mov
popa
sbb
xchg
aas
xchg
adc
ljmp
inc
jbe
cmp
mov
lahf
sub
inc
dec
xchg
loope
out
hlt
scas
rcrb
mov
fldenv
loop
nop
dec
ja
ds
hlt
inc
int3
imul
negb
lock
pop
jae
push
push
rol
fldenv
push
cmc
aas
and
cltd
and
cld
insl
push
pop
lcall
push
inc
ret
jns
xchg
xor
mov
shlb
mov
mov
or
pusha
add
mov
imul
cmp
mov
std
xor
cwtl
movb
fmull
fadds
aaa
aaa
mov
sub
cmp
xchg
fiadds
xor
andl
add
test
jle
ds
xchg
mov
jno
in
dec
int3
rorl
mov
mov
adc
jl
push
jb
xor
jo
sub
push
lahf
out
imul
adc
int3
sbb
andl
push
xlat
inc
pop
fsubs
cmp
nop
jge
adc
bound
xor
mov
mov
leave
stos
lcall
mov
fiaddl
clc
fdivrs
lahf
cmp
lret
xchg
add
cmp
popf
or
and
cmp
clc
or
and
xor
xchg
add
adc
pop
push
repz
cmp
mov
fcmovne
fstps
pushf
js
xor
adcb
dec
add
mov
sub
in
iret
std
sub
inc
add
lock
or
adc
es
mov
incb
inc
sub
dec
lret
decl
repz
add
add
sub
and
cmovle
icebp
xchg
movsb
loope
dec
mov
or
xlat
push
and
outsl
dec
inc
or
or
lea
insl
movsl
pop
and
mov
cli
push
pop
push
mov
jnp
adc
add
sub
push
push
outsb
scas
mov
lcall
jbe
xchg
mov
adc
cltd
xlat
pop
lea
xchg
paddusb
sbb
mov
sub
jno
sbb
jmp
add
insl
lea
in
movsl
mov
or
leave
push
clc
aaa
outsl
dec
xor
nop
inc
stc
adcl
pop
shll
inc
inc
xchg
xchg
pop
mov
ja
iret
ret
pop
inc
inc
loope
dec
mov
test
ret
push
fwait
mov
sahf
dec
mov
aam
movsl
mov
push
ds
mov
pop
mov
jge
dec
mov
adc
cmp
sbb
mov
push
mov
jmp
mov
mov
daa
cmp
std
push
push
rorl
mov
cmp
in
mov
xchg
std
add
cltd
dec
aad
mov
fildl
out
iret
setge
js
jecxz
mov
enter
adc
push
mov
fs
iret
mov
cmp
mov
cmp
push
ret
jle
mov
aam
ret
repz
arpl
xor
mov
adc
xchg
mov
cmc
cmpsl
inc
das
lret
cltd
mov
and
xor
push
jae
xor
imul
jns
clc
mov
mov
loope
pop
jns
pushf
mov
loope
mov
mull
xor
cmp
xor
lcall
jmp
xor
or
add
cmp
sub
push
out
nop
jge
jle
and
xor
out
scas
push
inc
call
aas
jmp
aam
mov
xrelease
loope
mov
cmc
and
mov
sub
clc
mov
sub
fstpl
pop
fwait
cld
mov
arpl
pop
movsl
leave
rcrl
movsb
cmp
cld
push
jp
leave
fmuls
sbb
pop
imul
scas
mov
sarl
out
mov
insl
subl
sti
call
sbb
cmp
push
push
mov
pop
shll
mov
jno
lods
mov
add
gs
mov
mov
fnstcw
shrl
scas
pushf
pop
movsb
lahf
sbb
jo
inc
je
xchg
inc
jmp
cmpsl
into
aad
fs
imul
stos
lret
ffreep
mov
jle
xchg
inc
cmp
mov
mov
pop
pop
add
mov
xchg
inc
fcomp
xchg
push
lret
dec
or
jl
or
fsubrs
repz
in
and
mov
cmp
xorl
xchg
in
test
mov
mov
sub
xchg
pop
or
and
pop
and
in
cmpsl
sbb
xor
bound
adc
jmp
xlat
push
cmpsl
xorb
jmp
add
mov
shrl
mov
push
pop
xor
pop
test
adc
mov
rcrl
mov
out
subb
pop
sbb
ja
insb
mov
adcb
sbb
test
and
adc
mov
adc
xor
add
loope
mov
mov
ljmp
mov
lret
adc
in
test
xchg
cmp
dec
inc
fidivrs
dec
test
out
ss
stc
push
add
cwtl
lahf
into
nop
mov
nop
ss
sbb
mov
mov
jge
fcoms
insl
sarl
repnz
push
lahf
pop
and
sbb
rcrb
or
sbb
lret
adcb
lods
or
inc
sbb
add
cld
mov
fdivrp
inc
sbb
ss
daa
shll
mov
sub
and
push
push
call
das
jb
push
ja
jp
aas
roll
mov
mov
add
rclb
call
push
into
jmp
call
inc
rolb
outsl
jl
mov
or
sbb
inc
popf
cmpl
xchg
sahf
jnp
jb
pop
mov
push
add
xchg
dec
pop
push
mov
out
jnp
sbb
je
xchg
cmp
aam
nop
pop
sbb
and
jno
jge
cmpsl
jne
sub
mov
or
pop
data16
mov
jecxz
sahf
jmp
push
mull
stos
sub
das
mov
scas
negb
mov
mov
jmp
mov
ds
int3
outsl
sub
dec
jp
ljmp
sub
stos
inc
and
das
add
pop
mov
jmp
fstps
sub
pop
lret
dec
test
loop,pn
mov
inc
mov
out
or
push
xchg
cld
dec
das
enter
lret
dec
push
lock
xchg
or
aad
aam
shlb
xor
fs
fdivrs
jne
jg
push
repnz
jecxz
push
inc
jne
xchg
sbb
pop
push
mov
xor
fiaddl
rclb
test
mov
pop
adc
gs
cmp
cmp
roll
pusha
or
in
cmp
dec
xchg
lret
jbe
xchg
xor
jp
inc
push
mov
arpl
pop
in
icebp
in
mov
jle
sahf
add
into
push
enter
fsubrl
popa
lcall
imul
push
cmpxchg
jl
jle
mov
add
test
mov
jb
xchg
cmpsl
jbe
lret
xor
cmc
outsl
inc
gs
daa
imul
notl
es
mov
mov
adc
ficompl
inc
or
push
sbb
add
lea
icebp
sbb
mov
jbe
lcall
in
dec
cs
push
cwtl
rolb
xchg
xchg
mov
mov
sub
test
mov
enter
pop
xorl
dec
fwait
adc
push
add
mov
imul
pop
jns
mov
mov
jnp
push
movsb
loope
bound
std
add
jb
shrb
fisttpll
push
push
mov
or
xchg
mov
sub
clc
push
fmull
pop
mov
cmpsl
out
xlat
movsb
xchg
pop
or
mov
popf
or
dec
fldenv
lcall
bound
int3
xchg
inc
into
imul
mov
aam
adc
movsl
lea
fsubl
les
adc
cmp
sbb
adc
stc
clc
inc
mov
pop
std
sbb
mov
lret
js
or
mov
xor
xlat
xor
lahf
mov
and
mov
push
pop
push
lcall
fsubrs
popf
pop
sub
and
pop
lods
insl
xor
jge
jp
loopne
push
or
popa
movsb
in
cmpsl
sbb
sub
ret
adc
xor
adc
bound
mov
mov
xor
and
mov
outsl
jno
loop
pop
sar
dec
or
pusha
test
out
shl
rorl
inc
ror
inc
adc
pushf
and
add
or
data16
inc
xchg
jbe
shlb
adc
lcall
mov
mov
xor
es
push
fwait
push
dec
test
sbb
mov
stc
das
xchg
mov
movsl
insb
insb
in
loope
shlb
xor
and
rcr
test
cmp
and
shl
lock
sbb
idivl
ljmp
inc
push
xchg
jmp
aad
jmp
lahf
fldt
je
cld
and
pop
xor
cmp
mov
jmp
mov
lods
push
xor
dec
dec
out
mov
cmp
ret
out
subb
jae
dec
sbb
and
jg
mov
mov
loopne
inc
xchg
push
dec
xor
or
dec
xchg
bound
inc
mov
iret
push
dec
jg
sub
mov
mov
in
push
xchg
jmp
or
jl
add
dec
frstor
icebp
and
or
stos
imul
cmp
aad
pushf
sub
mov
xchg
and
jo
mov
sub
out
and
jl
xor
negl
imul
jg
pushf
inc
out
jp
lds
push
shr
int
lea
int3
push
adc
xor
or
loopne
push
xor
push
and
ficoml
loope
pop
test
jecxz
inc
addr16
sub
jecxz
out
imul
xchg
popf
push
dec
ljmp
lds
lods
arpl
pop
push
stos
pop
dec
dec
test
adc
pop
xor
scas
sbb
ja
stc
mov
iret
test
cmp
sbb
adc
iret
jb
dec
fistps
pmaxsw
sub
mov
adc
cli
mov
add
aas
mov
sarb
jnp
insb
sub
mov
xchg
mov
dec
sahf
mov
push
xchg
lods
sub
fwait
add
decl
mov
cmp
mov
mov
adc
mov
inc
pop
clc
push
repnz
xor
lret
in
dec
mov
pop
push
int3
push
push
push
jecxz
out
int3
mov
ret
jno
mov
leave
add
repnz
cs
mov
mov
imul
push
cwtl
cmp
loope
mov
into
dec
xor
adc
xlat
popfw
dec
and
rcrl
scas
xor
aam
adc
icebp
fwait
stc
adc
aaa
jns
pop
repz
xchg
sbb
aaa
pop
push
dec
sarl
adc
push
popa
inc
or
std
xchg
push
cld
stos
enter
movsl
mov
popf
dec
loop
mov
int3
or
out
leave
cltd
rolb
jp
adc
add
pop
sar
fistpl
add
xchg
out
mov
mov
addr16
push
pushf
dec
lret
in
and
mov
into
sbb
dec
mov
adc
push
jne
dec
cmp
decl
jp
pop
hlt
es
in
jle
mov
xor
mov
scas
stos
push
mov
jae
push
jb
sbb
mov
jae
mov
mov
sub
imul
inc
and
fisubrl
and
adc
dec
cmp
cmpsb
std
jge
inc
loopne
stos
sub
adc
dec
pop
sbb
int
ljmp
sub
and
adc
loop
push
and
icebp
pop
xor
int3
add
xchg
xchg
cmpsl
mov
sub
mov
push
out
repz
addr16
sub
aaa
and
jno
inc
ret
xchg
dec
lock
scas
jo
mov
add
insl
pop
rcrl
test
repz
ret
xchg
lock
gs
scas
out
inc
enter
sub
add
cwtl
jecxz
inc
mov
jecxz
xchg
comiss
xchg
fwait
sbb
push
idivl
lods
sub
mov
sub
adc
cmc
pop
add
mov
dec
test
je
loopne
jnp
mov
jno
jnp
fisubl
out
push
pop
fldl
add
inc
out
nop
pop
test
inc
and
cmpsl
aas
jg
fwait
mov
push
pop
xchg
push
bound
mov
dec
rorb
in
mov
js
cmpsl
fldenv
js
xchg
cmp
mov
adc
push
push
dec
or
cmp
leave
push
loope
ds
or
orb
scas
xchg
bound
or
lods
shlb
mov
mov
lret
ljmp
int3
cmpsl
jo
dec
out
pushf
sub
xorl
shl
cmp
jnp
or
xor
stc
cmp
imul
repnz
mov
mov
cmpsl
stc
pop
iret
sub
adc
xor
roll
shl
dec
fisttpll
cmp
int3
push
xlat
rcr
call
test
gs
mov
into
sbb
xor
ret
fisubrl
mov
cmp
xchg
push
int
mov
xor
and
mov
lcall
lcall
mov
pop
testb
xor
mov
push
das
clc
lods
test
pop
lds
jecxz
sub
jg
dec
lret
and
dec
hlt
jnp
ret
sub
cmpl
scas
in
test
jae
das
imul
repnz
daa
aaa
jmp
mov
mov
les
in
adcl
sbb
imul
push
imul
arpl
push
mov
int
xchg
in
jns
cld
add
ret
push
or
jo
fsubl
scas
jle
pusha
push
shl
and
in
dec
push
push
sahf
push
pop
jns
mov
adc
lret
sub
inc
xchg
jl
fdivl
xor
repnz
dec
imul
sbbb
jecxz
std
pop
jns
add
sti
adc
sbb
sbb
je
sbb
cmp
xchg
push
push
mov
je
mov
aas
and
clc
pop
ljmp
es
jb
cmc
pusha
addl
xchg
dec
dec
cmp
jmp
addr16
in
fdivrl
push
add
push
loope
ja
mov
std
mov
pop
mov
push
jo
push
hlt
jge
xchg
andb
mov
scas
mov
xchg
es
push
xor
or
mov
andl
push
mov
mov
filds
cmp
aad
loop
push
leave
fs
sbb
aaa
les
add
add
cmpsl
in
or
sub
push
iret
bound
popf
rcrl
pop
mov
notb
xchg
cmp
sub
sbb
pop
jmp
cmp
cli
int3
test
cmc
lcall
clc
loope
add
xor
mov
popf
jle
or
add
lods
mov
fdivrp
pop
mov
cmpsb
ret
loopne
pop
es
data16
and
je
push
std
pop
fcomi
pop
ds
mov
push
mov
addl
mov
adc
je
dec
adcl
and
out
push
fisubrs
cmc
es
adc
insl
int
add
mov
mov
inc
mov
and
rcr
push
out
push
mov
add
xor
push
ret
sbb
icebp
or
shlb
xor
rolb
add
rorb
xor
int
pop
jne
xorl
xchg
cld
push
sub
push
js
sbb
push
adc
mov
cmpsl
mov
adc
aas
dec
movsb
cmp
aaa
cmpsl
mov
gs
stc
push
popa
iret
cmp
and
and
pop
sti
inc
fcomip
popa
ficompl
lea
sti
jmp
adcb
xor
mov
cmpsb
sub
add
pop
sub
ds
dec
call
leave
mov
jg
xchg
dec
bound
es
cmp
inc
add
add
out
push
arpl
scas
jmp
mov
push
faddl
lret
cmp
or
jns
cmc
daa
inc
movsl
es
cmpsb
leave
mov
shrb
sbb
mov
cmp
and
movhps
cld
xor
dec
adc
ja
mov
inc
cmp
ja
push
pop
mov
adc
fdivr
cli
push
faddl
and
push
sub
rclb
mov
inc
mov
iret
mov
mov
push
testl
movsl
inc
hlt
mov
repz
push
out
xchg
repnz
add
inc
es
mov
push
jle
mov
mov
ret
push
add
or
cmp
insb
es
ja
movsl
minps
dec
pop
mov
inc
dec
loop
pop
mov
lds
or
lods
into
dec
test
mov
lret
ljmp
int
xlat
dec
pop
test
ja
jne
or
mov
xchg
jb
jne
ss
mov
jecxz
jae
stc
movsl
mov
out
inc
jns
xchg
lcall
mov
mov
sbb
sub
dec
gs
cmp
test
loopne
cmpsl
jmp
push
aas
mov
or
and
inc
pop
mov
repnz
xchg
cmp
in
sbb
mov
imul
mov
dec
loope
mov
sub
jecxz
outsl
mov
in
stos
ror
loop
les
push
sbb
lahf
int
push
cmp
jnp
lock
fstpl
scas
jne
xor
add
sub
mov
pop
or
jne
add
sub
inc
jle
mov
movb
mov
and
aad
add
pop
push
test
push
ret
test
jl
push
push
scas
jecxz
xchg
xchg
mov
outsl
sti
and
arpl
loope
push
jge
pop
dec
lods
dec
and
mov
mov
rol
and
mov
outsb
js
adcl
cs
movsl
fnstsw
and
and
adc
push
dec
pop
stc
andb
jge
test
repz
inc
movb
push
or
loop
scas
lods
inc
cmpsl
xor
orl
fnstcw
aas
fwait
and
adc
sbb
pop
xchg
das
push
ljmp
jp
dec
inc
mov
shrl
shll
or
cmp
or
and
add
in
pop
dec
push
push
ja
sbb
movsl
sti
jno
rcll
dec
mov
xchg
inc
inc
sub
int
pop
aam
loope
fsub
mov
movsb
daa
mov
outsb
out
push
test
push
icebp
cmc
push
les
cli
imul
fsts
cmp
leave
pop
cmp
inc
test
pop
jns
xor
loopne
cmp
and
jbe
xchg
jg
inc
cwtl
outsl
and
inc
xor
adc
cs
push
push
addr16
inc
inc
loopne
js
mov
jb
ja
pop
negb
addr16
inc
addl
lret
mov
jns
and
sbb
js
pop
or
xor
movsb
hlt
inc
mov
push
adc
cld
popa
cltd
adc
adc
addr16
mov
ds
jmp
shrb
cmp
push
cmp
adc
mov
lret
jp
mov
pushf
pop
fcmove
movsl
push
or
mov
dec
test
mov
mov
shll
cs
or
push
pop
lods
mov
and
iret
sti
or
test
xchg
sbb
ljmp
stc
es
test
sbb
sahf
push
xchg
mov
sub
dec
hlt
xchg
adc
lods
pushf
rorb
mov
js
jb
cmp
repnz
sbb
mov
dec
test
adc
lcall
xchg
repnz
and
sahf
sbb
mov
cltd
test
in
cltd
xchg
ret
outsb
test
push
mov
shl
and
lds
testb
daa
lods
inc
jge
mov
xor
or
push
fcmovb
ret
mov
idivl
cmp
xchg
jp
pop
mov
mov
mov
cmp
push
or
sbb
dec
fisttps
aam
pop
xchg
pop
jno
xorl
insb
adc
push
nop
fbld
rorb
dec
insb
int3
add
sub
push
outsb
push
loop
daa
int
lret
test
jb
shrl
mov
cltd
shlb
mov
push
pop
int
adc
into
mov
dec
inc
xchg
out
adc
jbe
xchg
and
sti
inc
mov
inc
mov
mov
lcall
jns
popf
repz
lret
scas
mov
inc
dec
jge
xchg
mov
repz
sub
outsb
push
adc
fwait
cmp
sbb
cmp
cmp
outsb
es
cmc
push
rol
or
and
mov
jl
les
inc
push
icebp
mov
fcoms
sub
push
push
loope
add
mov
mov
push
fstps
and
adc
pop
xor
sahf
out
nop
pop
insl
xor
add
popa
xor
xor
pusha
arpl
ja
pop
aaa
cmpsb
stos
fidivl
insl
call
or
cli
dec
add
adc
or
test
add
ja
je
sbb
imul
adc
and
notl
into
arpl
ss
sub
adc
add
jne
test
mov
jp
dec
mov
inc
mov
les
mov
sbb
mov
outsl
mov
sbb
decl
and
ret
push
pop
lock
aas
and
inc
jecxz
sti
lcall
add
popl
outsb
sarb
cmp
movsl
mov
jge
or
xchg
pop
stos
add
or
push
lret
xchg
ret
sahf
sub
mov
jmp
dec
inc
int
cs
cmp
cld
cmp
lret
iret
fsubrs
iret
outsl
mov
lahf
inc
sub
dec
add
pusha
dec
or
jmp
or
sahf
scas
movsb
sahf
add
jg
popa
inc
mov
jg
xor
js
arpl
hlt
add
addl
jl
cld
xchg
pop
and
mov
in
inc
in
push
inc
fnsave
out
dec
nop
cmp
inc
xorl
pop
daa
leave
adc
jg
add
jge
add
and
sbb
or
fwait
insl
mov
mov
dec
imul
shlb
lods
nop
sbb
cmpsl
dec
call
sbbb
aas
pop
dec
ja
inc
mov
sti
bnd
pop
sbb
xor
movsl
clc
mov
nop/reserved
xchg
mov
clc
stos
mov
inc
out
imul
das
sbbl
mov
adcl
sarb
adc
push
push
repnz
arpl
in
push
lcall
jne
pusha
test
fwait
push
int3
xor
loop
mov
push
mov
adc
lods
push
push
cmp
insl
and
jg
pop
push
jo
ds
outsl
and
jg
or
mov
dec
jmp
jne
out
add
cmc
nop
sahf
xorb
inc
push
xor
xor
jl
xchg
add
movl
orl
mov
jno
mov
lock
lret
mov
inc
jbe
adc
jle
cwtl
dec
push
jo
xor
dec
pop
in
out
pop
andb
dec
dec
in
mov
jb
xor
fimuls
jae
or
mov
loop
jle
mov
stos
fldt
lcall
and
lods
lods
cmpsb
pop
inc
dec
lret
es
xor
push
packuswb
ds
pop
jp
mov
rcrl
jnp
pop
inc
repnz
jb
jne
dec
add
aas
loop
gs
push
add
divl
or
scas
pop
adc
shl
shll
mov
push
xorb
jnp
loope
cmc
inc
cmc
add
sbb
cmp
repnz
outsl
fs
lahf
mov
xor
pop
bnd
cltd
jmp
cmp
and
insl
sub
mov
mov
and
flds
jmp
xchg
push
mov
aaa
lods
decb
or
lret
dec
sbb
sub
push
lahf
cmc
mov
repz
push
xchg
adc
or
dec
iret
jo
pop
sarb
aas
loope
or
shl
sti
adc
adc
and
mov
lea
xor
cmpl
dec
aaa
orb
popa
fcmovu
sarl
lahf
loop
rorl
mov
js
pop
stc
push
pop
aad
push
in
mov
popa
nop
jo
aaa
outsl
adc
aas
sub
sub
dec
or
push
std
push
push
add
das
movb
add
sub
dec
rcll
fs
push
dec
push
xchg
mov
in
dec
jmp
inc
xor
leave
notb
mov
xor
movsb
ja
adc
adc
inc
shl
std
in
jmp
scas
sub
sbb
jp
sbb
mov
pop
inc
insb
adc
mov
jmp
jmp
mov
mov
movsb
inc
outsl
testb
into
push
nop
insl
cmpsb
insb
andb
cmp
jle
cmp
sbb
mov
imul
dec
movsb
inc
sub
subb
cmp
pushf
xchg
dec
xchg
xor
sub
pop
pop
in
shr
rcrb
lods
sbb
sti
dec
test
jecxz
sbb
and
out
jmp
imul
or
inc
xlat
es
push
pop
jmp
sbb
mov
inc
test
and
nop
push
and
out
mov
fstl
xchg
mov
sbb
pusha
sbb
ss
inc
jg
scas
int3
imul
push
movsl
out
dec
mov
nop
add
ljmp
pop
pop
out
repnz
es
divl
stos
loopne
jg
pop
das
adc
loope
inc
jg
mov
stc
outsb
rcr
loope
adc
loop
int
inc
mov
in
in
and
cmp
aad
lock
shll
pop
js
loop
pop
push
mov
xchg
push
push
jecxz
dec
jbe
or
ljmp
lcall
inc
add
flds
jbe
xchg
or
mov
mov
addr16
cmp
xchg
and
push
lods
mov
sub
in
inc
lods
adc
xchg
adc
push
sub
scas
push
mov
and
into
cmp
or
push
test
jp
lret
cwtl
pusha
div
mov
ja
jae
mov
mov
mov
inc
push
xor
insl
dec
int3
icebp
push
jbe
push
sbb
out
dec
pusha
xor
jg
cltd
jno
sbb
adc
adc
loopne
pop
pop
mov
push
cli
push
cltd
or
dec
imul
ljmp
andb
scas
insl
out
inc
es
movsb
jle
test
pop
out
xchg
fiaddl
pop
push
xchg
sbb
cmp
out
out
pop
sti
push
sahf
lret
dec
loopne
mov
sub
xchg
js
dec
insb
testb
and
stos
mov
cmpb
xor
push
mov
mov
jnp
push
data16
sarl
repz
enter
icebp
shr
fnstsw
sub
call
sub
dec
rolb
push
pop
mov
inc
pop
push
out
mov
jge
repz
out
shlb
sbb
xor
sbb
jl
or
nop
out
jge
int
pop
mov
daa
roll
clc
mov
inc
sbb
pop
jmp
rcrl
push
test
jns
mov
push
call
cld
cmp
pop
outsl
dec
movsl
mov
sub
xchg
and
jo
loope
xchg
rcrb
imul
orl
out
add
pop
mov
imul
lret
int3
dec
lock
fmull
pop
or
add
xchg
sbb
mov
lret
int
sti
pop
je
call
mov
daa
mov
jge
sub
ss
dec
js
mov
insb
xor
mov
mov
out
xor
cmp
mov
sbb
cli
test
cmp
flds
sbb
clc
mov
popf
add
xor
stos
or
jo
push
cmpb
mov
andl
in
rclb
add
inc
mov
adc
loope
push
lret
sti
mov
in
inc
adcb
lret
div
jl
out
dec
xor
in
lcall
jns
aad
aad
std
cmp
in
fstpl
pushf
fiaddl
xchg
jne
mov
dec
cli
fsubrs
xor
jp
jne
xchg
aad
movsl
mov
push
adc
fidivl
jmp
test
out
into
sbb
fimuls
add
xor
add
inc
movl
sub
cmpsb
test
aad
jge
movsb
sub
out
mov
dec
shl
xchg
cmp
inc
xor
lods
cmp
subb
or
mov
cltd
adc
bound
mov
arpl
push
movsb
mov
cli
cmp
sahf
enter
cmp
ret
jmp
fwait
test
rcl
dec
dec
fs
fbld
testb
inc
dec
movsb
cmp
mov
xchg
mov
and
mov
cmpsb
hlt
shll
pop
fiadds
pushf
jnp
mov
fs
aam
ficompl
push
inc
test
mov
pushf
ret
adc
push
push
int3
js
in
leave
push
dec
push
in
fildll
lahf
mov
adcl
call
xor
nop
in
test
mov
loopne
fcom
lcall
sbb
insb
sub
pop
push
popa
adc
xlat
xchg
outsb
mulb
dec
pop
push
jnp
pop
or
lock
leave
in
sbb
xchg
jmp
adcl
pop
scas
fimuls
pop
lods
mov
loope
or
stc
inc
mov
std
and
icebp
mov
dec
push
stos
imul
sbb
mov
dec
jge
cltd
aaa
xchg
sub
or
pushf
imul
push
adc
out
pop
sbb
xor
push
xchg
jno
xor
sarl
data16
adc
loope
sbb
add
adc
xchg
sbb
popa
add
dec
sbb
jno
addr16
mov
test
mov
sbb
repz
adc
and
stos
push
out
outsb
xchg
dec
jb
call
lahf
xchg
inc
xchg
das
sub
neg
mov
sub
cmp
lods
xor
cmp
repz
mov
fldcw
or
int
rorb
sti
int
or
push
jbe
mov
out
and
push
mov
es
mov
ret
mov
mov
fcomip
push
pop
lahf
loopne
lea
lds
pop
fistpll
xlat
mov
sub
inc
or
jo
sbbl
push
addps
cmp
lock
shll
adc
lds
dec
je
mov
push
cmp
cmp
mov
cmp
add
in
mov
lcall
out
mov
ljmp
ljmp
je
jecxz
pop
addr16
in
dec
and
mov
and
popf
outsl
pop
mov
jmp
sbb
stc
mov
movsl
stos
cmp
shll
sbb
hlt
dec
pop
push
mov
stos
cwtl
test
jo
jne
jge
fdivr
inc
aam
and
mov
fmull
fs
clc
mov
and
out
jnp
cld
in
pop
mov
inc
pop
xor
and
test
ja
push
sub
iret
mov
inc
adc
inc
outsl
out
push
push
test
mov
fidivrs
or
outsl
adc
fsub
add
aas
stc
or
ret
into
rcll
loope
test
jbe
adc
repnz
nop
or
cwtl
rorl
je
pop
imull
repz
add
cltd
dec
pop
push
subb
mov
jecxz
nop
inc
pop
cmp
add
aam
mov
jne
sbb
cwtl
rcl
xchg
push
data16
pop
push
sub
cmp
fiaddl
cli
inc
pop
test
sbb
inc
scas
loope
jno
mov
dec
jae
sub
mov
fcmovnbe
scas
fistpll
repz
pop
shlb
cwtl
cwtl
stc
lods
sub
mov
out
out
adc
scas
testb
push
data16
xchg
sbb
sub
mov
mov
pop
jl
cmp
out
mov
sub
adc
std
sub
sarb
jg
sbb
xor
shl
cmp
fldenv
jo
push
push
cltd
mov
hlt
popf
jnp
loopne
fistl
nop
aas
fbstp
movsl
xorl
ja
mov
xor
lahf
data16
test
adc
dec
aaa
dec
add
into
pop
cmp
lret
or
test
jmp
imul
jbe
enter
pop
add
push
jl
jge
push
mov
sbb
mov
shll
jae
scas
fcmovne
test
insl
cltd
popf
repnz
jbe
xchg
ja
pop
and
jo
ljmp
out
shrl
and
add
movsb
into
add
imul
pushl
pop
cmp
out
mov
aas
out
movsb
and
data16
dec
mov
pop
jb
xchg
sbb
sar
lods
aas
mov
jnp
pop
fwait
ret
xchg
adc
test
xor
sub
dec
sar
jg
adc
add
or
iret
cmp
and
mov
push
fdivs
or
xchg
cmpsl
movsb
xorb
inc
cmp
mov
mov
mov
mov
negb
adc
push
push
scas
imul
mov
xor
xchg
xchg
jne
hlt
xchg
js
mov
into
adc
insl
pop
mov
test
inc
imul
fsts
cmp
mov
fwait
stos
push
sbb
add
lods
mov
and
repnz
popf
not
cld
idivl
adc
inc
and
push
mov
aaa
or
push
pushf
pushf
shr
int3
xor
mov
sbb
xchg
pop
cmp
and
loopne
into
adc
js
loope
out
subb
or
adc
pop
cltd
lret
ljmp
xor
hlt
mov
xor
jmp
pop
lahf
popf
push
sbb
test
adc
or
je
je
lret
adc
stc
mov
aas
mov
xor
pop
inc
push
or
test
out
mov
or
hlt
loopne
mov
push
repnz
ret
dec
add
jp
or
push
add
mov
in
pop
dec
and
shrl
pop
sub
fistpll
rorb
fidivs
adc
sahf
rcrb
dec
push
in
fiaddl
mov
xchg
jne
sbb
lock
or
xor
xor
out
and
stos
dec
shl
jp
xchg
and
adc
pop
stos
push
pop
jecxz
jae
xchg
push
addr16
mov
fcmovnbe
jmp
arpl
cmp
or
cmpl
push
push
sahf
jbe
out
jb
arpl
aas
mov
xor
xlat
leave
sbb
xchg
mov
sub
xchg
sbb
sbb
pop
mov
stc
push
nop
cmp
in
mov
outsl
mov
or
aad
insb
fiadds
lods
adc
out
and
sub
decl
xor
xchg
cltd
and
mov
ret
test
int3
or
and
aas
std
xor
lahf
jge
lcall
es
sub
jo
fistl
jg
aaa
test
push
hlt
fimull
adc
or
aam
cmp
pop
push
mov
sub
pop
call
inc
push
sub
arpl
pushf
shll
sti
pop
adc
cmp
les
je
into
and
into
pop
sub
clc
cmp
repz
nop
rcll
sbb
sub
push
fwait
popf
dec
push
in
int
stos
lcall
fsub
movsb
xor
imull
bound
dec
add
lret
inc
sbb
fsts
xchg
xchg
add
hlt
jg
pop
push
and
int3
es
push
ljmp
mov
xor
pusha
movsl
or
mov
sub
sub
mov
xchg
jnp
mov
sarl
add
jbe
into
mov
lods
stos
mov
add
adc
jo
xor
lods
push
pextrw
mov
mov
adc
or
sbb
mov
push
rorl
jne
pop
jo
cwtl
push
or
loop
ret
scas
adc
rcrl
mov
cmp
cmp
lock
mov
adc
fsubs
fwait
aam
fldenv
hlt
pop
pop
jbe
and
cmp
lcall
dec
leave
mov
repnz
jl
lods
out
popa
mov
out
bound
shr
ja
sahf
sti
cmp
xor
add
cmp
push
xor
lret
jl
adcb
push
ret
adc
fistps
add
out
inc
jno
and
gs
js
aaa
pop
mov
jmp
stc
dec
stos
repnz
dec
push
cmp
pop
and
ret
out
ja
loope
dec
in
push
sbb
jns
cmp
arpl
lret
sahf
lcall
adc
aas
or
test
fcoml
mulps
jb
je
xchg
dec
push
fs
mov
sarb
mov
cmp
inc
fdiv
sbbl
mov
dec
je
cs
scas
int
cwtl
dec
loope
aas
ret
fmull
pop
adcb
mov
sub
orl
jno
int
imul
rcll
pxor
cmp
xor
or
jb
enter
test
fisttpll
arpl
cmp
jb
pop
scas
mov
inc
xchg
inc
mov
sub
push
stos
arpl
sbb
gs
imul
lcall
pop
jg
sbb
sub
fistpll
arpl
sti
imul
sbb
mov
call
mov
sbb
lock
pop
sub
or
jo
int
cmp
jp
add
mov
push
adc
adc
lock
lret
jp
jg
repz
inc
sbb
repz
adc
cmpsb
mov
jmp
add
mov
repnz
cmc
mov
dec
jp
mov
out
pop
mov
mov
loopne
mov
pushf
or
rorb
or
or
daa
int3
ljmp
jp
xchg
ficoml
pop
in
cld
pop
jle
test
int3
sbb
inc
add
or
mov
out
adc
fildl
sbbb
lods
mov
mov
pop
in
ja
mov
jae
in
test
and
arpl
mov
xor
vprotw
test
mov
repnz
push
leave
cmp
mov
scas
cmpsl
pop
push
iret
xlat
adc
fwait
aam
lock
adc
aas
movl
jle
inc
mov
pop
aas
inc
xchg
in
sbb
in
cld
movsl
aad
cmpl
rdpmc
sbb
sbb
rcr
rcr
mov
jne
in
inc
pop
dec
aas
jmp
inc
into
pushf
mov
cmp
adc
in
push
adcb
and
xor
add
ret
inc
movsb
movsl
out
icebp
cmp
iret
pop
lret
leave
mov
mov
pusha
lods
movsl
xchg
push
repnz
mov
xchg
mov
shrl
in
sbb
inc
mov
mov
pushf
repnz
inc
mov
push
addr16
adc
mov
pop
ds
shlb
es
out
jns
stos
jle
data16
in
xchg
pusha
out
scas
out
and
stos
mov
imul
pop
or
push
adc
sub
add
sub
cmpsl
lods
xlat
int3
movsl
or
lahf
pop
insb
pop
and
lret
push
mov
pop
into
jl
call
lret
xor
mov
repnz
inc
negb
mov
mov
dec
inc
mov
inc
xor
adc
repnz
pop
insl
sub
fisubrs
popf
shrl
ljmp
xchg
and
pop
lock
in
arpl
ss
xchg
sbb
jns
fwait
adc
add
push
rcrb
fs
sub
stc
inc
std
push
push
call
jl
sbb
jmp
nop
mov
nop
mov
scas
dec
repnz
pop
add
scas
xchg
sbb
sub
xchg
pop
adc
loopne
je
cwtl
xor
pusha
fisubrl
push
fdivrs
sub
ds
sub
push
test
insb
stc
jb
sahf
daa
or
push
mov
cmp
lock
in
rorb
jbe
push
push
lods
jne
ljmp
int
sub
dec
in
add
addr16
lea
cmp
jecxz
mov
and
imul
arpl
adc
and
mov
inc
dec
rcr
in
cmp
and
stos
mov
scas
fsubr
popf
fwait
subb
mov
fildll
pop
cld
sub
out
cld
and
push
inc
mov
mov
jge
jnp
and
call
xchg
sbb
int3
std
stc
fcmovu
adc
or
xchg
shld
inc
aam
shrb
fcmovu
ss
add
ret
sti
fsts
les
xchg
xor
dec
mov
xchg
mov
fcmovb
mov
mov
pusha
daa
pop
aas
push
aad
lcall
mov
pop
cmp
nop
cmp
pusha
jb
out
xchg
ljmp
jb
ret
jne
outsb
rcll
mov
mov
mov
sub
or
lea
cwtl
add
fcoms
out
and
and
es
inc
push
rcll
add
and
aad
or
push
jecxz
mov
movsl
dec
push
sbb
int
das
cwtl
iret
push
enter
ds
add
stc
mov
inc
nop
push
pop
mov
push
test
stc
mov
pusha
lods
pop
lods
mov
js
add
jnp
loopne
enter
ret
xchg
adc
mov
adc
xchg
mov
in
addr16
mov
mov
cwtl
js
push
and
adc
out
sbb
testl
jg
sahf
jnp
push
inc
fwait
pop
xor
xchg
mov
in
xor
ljmp
push
mov
aaa
mov
and
adc
dec
add
hlt
jne
pushf
push
test
add
mov
addr16
mov
in
jb
adc
imull
push
dec
scas
mov
pop
adc
adc
jno
xchg
cld
daa
outsl
inc
cli
mov
xchg
mov
xchg
push
test
ds
push
add
rorl
dec
mov
sbb
sub
add
repnz
enter
shrb
gs
inc
mov
iret
call
adcb
leave
ss
ss
and
add
and
jbe
frstor
cs
movsb
popa
in
ret
lods
in
push
or
jecxz
jno
jge
mov
imul
enter
pop
inc
jnp
or
dec
adcb
push
add
pop
fbstp
pop
jge
jnp
enter
xchg
jecxz
adc
cmp
ljmp
cmpsb
adc
addl
cli
mov
add
cmp
mov
daa
mov
adc
dec
mov
and
cmp
add
or
sub
test
rorb
cmp
sbb
jae
decl
push
xchg
mov
xor
adc
lret
insl
adc
xor
sub
sub
insl
jle
jb
push
cmp
cmpsb
mov
adc
pop
nop
mov
int3
fisttpll
shrl
adcl
mov
test
pusha
stos
push
mov
fwait
jno
sbb
dec
jge
jecxz
inc
pop
mov
leave
stos
cmpsl
rcrl
xor
addr16
fimull
nop
sbb
push
dec
cmp
mov
jnp
pop
fadd
lcall
mov
cwtl
lods
test
add
inc
aam
in
fcmovbe
cmpsb
xchg
das
lods
push
addr16
in
scas
pop
imul
mov
push
sti
lret
andb
in
xchg
add
mov
pop
push
sti
fdivl
subl
iret
or
cmp
stos
jmp
inc
mov
movsl
sub
jne
xor
xor
lea
sbb
test
icebp
mov
jecxz
gs
loopne
inc
pop
fimull
or
add
fucomp
jae
mov
mov
mov
rorb
dec
aaa
ret
adc
inc
xor
cmpsb
xor
inc
adc
imul
push
mov
lea
out
add
es
iret
adc
lcall
mov
lock
or
and
add
aad
jns
mov
xchg
cld
pop
mov
inc
mov
fidivrs
lods
or
pop
arpl
and
jbe
inc
cmp
xor
add
pop
lahf
and
lcall
stos
fcmovne
sbb
push
xor
jecxz
in
cmp
pop
enter
and
pop
popa
add
mov
dec
lcall
arpl
cli
scas
fisubrs
cmpsb
sti
movsb
das
jp
pop
sub
sbb
add
lret
cmp
push
fwait
pop
cld
in
fisttpl
push
mov
popf
fisubs
mov
adc
daa
lret
cmp
nop
add
add
inc
subb
pop
pushf
cmc
lods
stos
jns
jnp
adc
sub
push
mov
jle
mov
adc
pop
cltd
cwtl
sbb
adc
cmp
fmuls
mov
pop
loope
or
sub
xor
xchg
sarl
mov
clc
iret
popa
into
and
repz
in
sahf
xorb
mov
mov
inc
mov
cmp
ret
cmpsb
dec
mov
mov
xchg
les
jmp
cltd
lcall
mov
je
cld
dec
mov
jae
stos
xchg
sbb
adc
dec
call
imul
dec
leave
notb
xor
mov
dec
sbb
cmp
xor
insb
movaps
add
movsl
int3
xchg
stos
cltd
pusha
mov
jle
dec
adc
jle
lcall
mov
ss
mov
stc
fs
mov
sbb
xchg
fucom
push
push
sub
and
inc
mov
inc
into
and
jne
adc
daa
std
imull
or
add
sbb
and
lahf
aad
jo
sbbb
xchg
aad
xor
push
out
call
mov
pop
lds
cltd
mov
stc
jmp
inc
cmp
mov
mov
inc
lahf
lock
mov
in
fmuls
call
sub
das
cli
in
cmp
sti
jno
cmp
rcl
inc
pushl
jmp
es
adc
setl
lret
sub
push
pop
jne
scas
xchg
sbb
jae
and
sub
out
add
or
jno
jb
dec
int
push
xchg
cmp
jg
sub
jecxz
push
push
je
stos
fisubl
out
push
cli
sahf
pop
adc
loope
push
dec
aaa
scas
jb
aad
cs
mov
imul
push
pop
cmpsb
sahf
jp
ret
mov
sub
sti
mov
fistpll
sbb
loope
xchg
cld
mov
xor
sub
xchg
push
sbb
inc
lock
pop
shl
push
mov
xchg
std
add
xor
out
mov
xchg
mov
adc
lods
push
ret
xchg
rcrl
popl
inc
and
and
inc
mov
shlb
stc
jmp
xor
gs
add
mov
dec
repnz
mov
lock
mov
jnp
sbb
xlat
lea
rclb
nop
and
cmp
out
scas
mov
mov
mov
jmp
fwait
cmp
test
inc
xor
push
sub
mov
mov
add
xchg
pop
mov
xor
outsb
outsb
cmp
pop
adc
jg
mov
cwtl
mov
mov
fcompl
pop
push
dec
sti
jo
fimull
faddl
insb
lcall
jb
and
or
shlb
fiadds
mov
mov
adc
mov
imul
scas
pop
scas
ljmp
jns
mov
pop
loope
lods
dec
jge
cli
or
inc
ljmp
pop
fs
imul
stc
xchg
sbb
mov
adc
jae
push
push
jae
fisttpll
dec
mov
xchg
aas
lods
add
test
sub
add
test
insb
or
push
icebp
outsb
repnz
add
adc
mov
push
out
mov
in
ficompl
push
xor
movsl
imul
cmpsl
icebp
sub
jecxz
mov
xor
into
ss
mov
js
rcrb
inc
jno
out
jno
dec
in
in
ja
shl
sahf
add
test
add
faddp
cld
sbb
cld
jb
insb
jmp
push
js
sub
lret
sbb
xlat
in
sbb
dec
fwait
cmp
aaa
push
in
xchg
lea
shl
mov
loope
pop
pop
xor
lcall
and
mov
jmp
lcall
mov
pop
iret
insl
pop
ror
jecxz
push
add
out
cmpl
mov
ret
inc
addr16
stos
popl
mov
inc
out
lea
je
and
ds
pop
or
out
repz
mov
push
loopne
lret
cmpsl
mov
into
adc
xor
jae
fstps
js
test
rorl
xor
push
mov
stc
out
out
aas
int3
icebp
insl
adc
scas
cmp
movsl
loope
cmp
das
in
je
stos
ret
test
mov
add
rcrw
loope
ret
and
adc
insl
loope
xchg
mov
xchg
out
pop
mov
jns
cmp
pop
dec
xchg
cld
lods
ja
sahf
les
push
in
mov
sahf
lret
fsts
clc
je
mov
popf
dec
orb
mov
xchg
lcall
ret
insl
inc
std
add
sub
sbb
adc
ds
xor
sbb
cltd
inc
push
push
out
andb
loope
sub
mov
int3
fidivrs
pop
or
test
and
out
loopne
push
rcrb
sbb
rorb
out
xor
mov
sahf
int3
gs
cmpsb
popa
int
test
jnp
ljmp
or
loopne
mov
sub
out
add
insl
adc
stos
adc
push
sbb
or
cld
lea
out
push
mov
mov
mov
mov
dec
jns
imull
je
test
or
ds
ds
push
rclb
xchg
pusha
loope
add
cmc
int3
sub
and
push
imul
jg
xor
stos
rol
fnsave
in
cmp
mov
bound
jge
popf
cs
sbb
dec
mov
inc
popa
imul
xor
add
loopne
mov
orb
subb
xor
dec
test
pop
aam
iret
xchg
jle
lahf
mov
cltd
dec
cmp
repz
push
push
mov
and
test
rcrl
test
or
jmp
fdivl
shrl
add
jno
ret
pushf
lods
aas
push
fisttpll
mov
insb
add
iret
mov
jecxz
ljmp
jo
xor
test
pop
mov
add
cmc
adc
popa
jmp
mov
jnp
mov
roll
pop
dec
mov
fisubrs
in
in
jl
adc
xchg
cld
push
cmp
mov
adc
mov
mov
xchg
jno
int
jp
sbb
fnstenv
sti
or
movsl
clc
cs
mov
mov
nop
lods
jle
cwtl
mov
dec
fdivrl
inc
push
shll
dec
adc
xchg
in
mov
rcrl
mov
inc
add
les
adc
mov
push
push
jbe
sub
aaa
sbb
daa
jae
into
pusha
test
fdivl
jno
or
mov
mov
and
add
or
popf
push
sbb
incb
xor
leave
or
sub
scas
xor
leave
sbb
filds
pushf
in
out
mov
mov
cmp
mov
push
push
jp
sub
mov
mov
lods
sahf
mov
push
or
xchg
je
pop
aam
lock
add
hlt
outsb
or
sub
scas
imul
pop
push
stos
xor
jp
mov
inc
lea
rclb
dec
repnz
in
pop
stos
outsl
adc
sub
inc
inc
add
clc
mov
fcomps
sub
dec
jo
aas
mov
mov
sbb
mov
orl
cltd
cmp
cmc
test
ret
inc
insb
sub
dec
aas
rcr
xor
popf
mov
jge
inc
jne
add
lds
iret
add
mov
mov
movd
negb
dec
pop
in
out
add
mov
xchg
push
pop
add
pop
sbb
and
sbb
call
mov
xor
or
int
xor
stc
add
xchg
sbb
xor
xlat
push
arpl
je
adc
add
orb
ljmp
mull
push
adc
pop
inc
pop
add
incb
pop
push
in
and
add
push
push
mov
sarl
in
lcall
outsl
and
xchg
and
test
mov
mov
stc
mov
or
out
insl
inc
xor
inc
jg
scas
sub
fwait
data16
fsubrl
loope
mov
sbb
stos
leave
ret
test
ret
adc
roll
addr16
mov
mov
les
mov
cltd
mov
outsb
cltd
xlat
lea
fucomip
in
mov
pop
cmp
idivb
sub
mov
sbb
mov
cmp
scas
sub
mov
movsl
je
ljmp
mov
add
sbb
adc
shlb
loope
sahf
imul
xchg
dec
push
pop
pop
mov
cli
scas
pop
out
sub
mov
cmp
cld
call
mov
mov
cltd
and
jmp
jnp
ss
mov
dec
insb
fisubrs
push
push
xchg
push
icebp
movsb
cmp
xor
loopne
pop
das
add
in
mov
int
ffree
call
jne
fcomps
aas
xlat
pop
inc
fstpt
inc
adc
pop
mov
add
in
ficoml
lea
jne
and
add
insl
mov
insb
lahf
sarl
inc
jns
xor
xor
pop
dec
xor
fdivp
mov
cmp
notb
adc
dec
adc
xor
jmp
loope
loope
loope
pop
or
into
sbb
mov
rcr
add
lea
sbb
jmp
sti
cli
pop
aaa
repz
mov
maskmovq
idivl
jecxz
out
lock
add
push
mov
out
xor
mov
ja
mov
pop
sbbl
cli
fstpl
xchg
and
ret
sub
mov
mov
rcrb
test
mov
inc
jg
addb
loope
push
daa
pop
adc
cmp
mov
pop
xchg
jne
pop
lcall
ret
mov
testl
cmpsl
push
push
cmp
in
mov
pop
adc
outsb
imulb
pusha
mov
mov
xchg
and
mov
loopne
shll
mov
add
xchg
insl
aaa
mov
lds
lea
lcall
lock
ljmp
int
loopne
aad
popf
sbb
fimull
jecxz
fcomip
mov
push
pop
push
jb
push
pop
xor
cmpl
xor
fcomps
sar
and
out
xchg
les
ljmp
out
xor
fcoml
cmp
xor
lods
js
adc
jg
orl
add
sti
popa
or
dec
fmuls
loop
cmpsl
xchg
jno
loop
ljmp
repnz
adc
mov
movsl
push
dec
push
dec
mov
negb
andps
or
popf
or
ss
xor
orb
test
inc
mov
loopne
adc
shll
add
sbb
in
or
int
adc
or
and
dec
xchg
nop
pushf
pusha
cs
loop
aam
dec
lds
out
jns
ret
out
adc
dec
je
mov
rorl
das
mov
xchg
stos
repz
das
sub
pop
nop
test
jns
adc
andl
jo
repnz
push
bndldx
adc
adc
fnstsw
shrb
and
xchg
push
add
ja
sub
lahf
rcrb
xlat
mov
fmuls
mov
adc
push
iret
mov
xchg
mov
inc
jmp
cmpsl
loope
jb
daa
mov
jno
enter
adc
cld
out
std
fxch
jp
sub
mov
pop
mov
xchg
hlt
adc
add
loop
mov
pop
ret
mov
out
scas
loopne
inc
outsl
dec
repz
scas
mov
repnz
repnz
inc
lea
dec
inc
push
stos
orl
jne
mov
hlt
dec
jne
std
pop
faddl
mov
push
lcall
lods
mov
test
xor
xor
in
push
in
mov
cmpsb
cli
ret
notb
add
cmp
pop
push
hlt
mov
enter
adc
rcl
sarl
push
sub
mov
aad
inc
repz
sub
mov
andb
or
sub
sub
imul
js
out
xchg
jno
rcll
cmp
jae
shlb
jge
dec
shl
mov
out
ds
add
pop
pop
addb
rcrl
xlat
pop
cmp
sbb
je
rclb
fisttpl
addr16
xchg
sarl
sahf
push
les
cmp
pop
mov
xchg
movsl
lea
sub
lea
mov
inc
pop
aas
js
popa
dec
pop
repnz
inc
cld
ret
pop
mov
mov
push
fcmovnbe
inc
js
cmp
loop
outsl
movsl
mov
and
popa
out
fs
fs
xchg
cmp
cs
jnp
arpl
xchg
push
pop
daa
cmpb
pop
fisttpl
pop
test
mov
xchg
push
or
iretw
mov
pushf
ss
sbb
inc
sbb
xchg
add
xlat
push
adc
jnp
cltd
movsb
cmc
xchg
cmpsl
xchg
scas
outsb
mov
push
mov
es
subl
mov
cld
aad
jnp
jle
mov
cli
mov
and
lods
icebp
push
jle
psubusw
movzbl
mov
xlat
mov
push
jae
mov
and
mov
lret
dec
and
aad
out
sub
or
jb
fucomp
pop
mov
cwtl
aad
push
js
sbb
xchg
icebp
out
testb
fsub
pushf
pop
lcall
pop
mov
dec
clc
aad
jno
jae
dec
dec
int3
pop
movsb
jb
shl
cmp
aam
mov
add
andb
mov
sar
test
sbb
mov
hlt
aam
pmuludq
xor
ja
daa
xchg
sbb
aam
pop
pop
push
mov
or
icebp
add
ror
fcoml
push
stc
aas
cwtl
shl
mov
scas
mov
and
test
fcompl
pop
es
xchg
mov
in
mov
cmp
jne
out
out
cmp
outsl
arpl
fcmovu
ja
mov
nop
and
dec
mov
xchg
dec
cld
push
popf
stos
xchg
repnz
loop
pop
xchg
stc
push
out
mov
repz
fldenv
aam
vmwrite
test
sub
push
adc
xchg
add
dec
mov
ret
jno
mov
sahf
in
insl
enter
xchg
add
test
cmp
hlt
cwtl
jp
sahf
jb
push
mov
add
add
in
xchg
sbb
scas
mov
out
jb
pop
lods
aas
bound
roll
jge
scas
or
ss
xchg
mov
ljmp
xor
push
fsubl
inc
aaa
push
cmp
cmp
lock
pop
and
scas
aaa
in
lods
stos
adc
mov
inc
xchg
imul
les
lret
xchg
inc
int
js
in
call
sbb
cmc
dec
inc
imulb
sub
in
xor
push
mov
xor
test
cltd
bound
icebp
jmp
pop
pop
hlt
aaa
xlat
mov
sahf
dec
or
push
jecxz
sti
jae
out
jbe
movsl
jnp
popa
add
int3
into
sub
inc
xchg
or
sahf
and
cltd
mov
jle
cmp
or
icebp
push
lea
dec
imul
cltd
inc
out
mov
xor
popa
or
mov
inc
jbe
push
inc
mov
in
scas
enter
add
fldcw
fs
push
push
inc
push
dec
jbe
in
bound
add
movsb
sti
dec
cmp
xor
pop
repnz
pushl
inc
mov
pop
pop
scas
mov
mov
cmp
sub
sbb
mov
jns
xchg
add
fadd
repnz
ss
pop
dec
sahf
add
cmp
mov
lahf
call
movsl
push
jne
cmp
adc
ret
cmp
lods
xlat
pop
fstps
jecxz
add
in
cmp
pop
pop
dec
mov
test
mov
cmpsl
mov
sarl
data16
mov
xor
cmc
and
negb
or
mov
mov
enter
loop
pop
or
jb
jmp
sahf
push
xchg
lcall
test
adc
cmp
add
push
icebp
int3
and
cli
inc
clc
xchg
inc
ja
aaa
xor
mov
mov
leave
scas
mov
push
pop
cmpsb
scas
pusha
mov
mov
jbe
xchg
mov
lcall
rcrl
movsl
push
das
lds
js
daa
jo
inc
clc
mov
inc
flds
xchg
or
or
out
sbb
sbb
pop
fidivl
mov
andb
mov
js
sti
xchg
mov
or
xor
and
mov
xchg
fisubrs
dec
fidivrs
mov
cmp
push
dec
jmp
into
lock
jnp
add
and
push
adc
push
jp
lahf
sti
cld
rcrl
repz
sub
gs
lcall
mov
repnz
lods
int3
popa
mov
out
add
fistpll
pop
xchg
inc
bound
sbb
outsb
mov
or
push
in
mov
cmp
movsb
mov
rorb
test
lds
je
daa
into
fisubrl
cmpsl
loope
in
push
lea
arpl
in
and
es
dec
jp
inc
jg
mov
in
jae
mov
repnz
add
mov
add
dec
add
xchg
pop
push
test
cmp
stc
xchg
cltd
add
lret
dec
jg
into
mov
fwait
std
imulb
outsl
aad
popf
imulb
repnz
mov
pop
xchg
outsl
xchg
das
xor
sub
dec
fwait
sub
pop
test
push
je
push
addr16
loop
inc
xor
jne
mov
leave
xchg
shlb
xchg
xchg
int3
mov
orb
in
sub
inc
push
dec
enter
or
mov
fldt
mov
je
mov
enter
add
sub
jns
mov
sub
ljmp
ss
dec
mov
mov
add
adc
inc
fdivrs
stc
mov
or
push
lret
add
mov
clc
jns
xchg
and
or
scas
outsl
inc
or
cmpsl
mov
xchg
jmp
aaa
pop
sarl
ljmp
mov
outsl
and
push
xchg
xchg
das
insb
jp
push
cmp
dec
mov
pushf
push
cmpsb
dec
ljmp
negl
pop
pushf
xor
xchg
xchg
cld
xchg
mov
gs
fcompl
pop
flds
sbb
nop
and
inc
pop
xchg
jmp
iret
xchg
adc
aam
sub
cmpb
pop
xor
addr16
movsb
pusha
add
sbb
jbe
sarl
dec
sbb
and
sub
test
xor
pusha
test
xor
fidivrs
iret
mulb
xchg
into
jle
scas
or
pop
mov
jne
fnsave
xchg
add
jmp
cmp
gs
inc
mov
js
jmp
or
jle
jbe
xor
inc
dec
ja
jo
jmp
xor
cmp
xchg
fadds
out
sbb
and
test
jl
fdiv
fstpl
and
push
push
adc
push
rol
out
movsl
pop
cmp
mov
stos
jnp
mov
push
mov
inc
pop
and
sbb
incb
cmpsb
pop
cmp
repnz
gs
stos
iret
repz
or
cltd
repz
xchg
and
aam
xchg
adc
xchg
mov
arpl
xlat
scas
cwtl
push
bound
mov
inc
adc
add
shr
or
mov
test
ljmp
repz
sbb
pop
mov
sbb
lock
xchg
jmp
insl
roll
mov
ds
pop
mov
dec
rolb
jecxz
arpl
pop
in
push
and
fldenv
mov
imul
fcomps
stc
sbb
inc
jae
lcall
mov
out
jae
enter
mov
in
sahf
in
shll
repnz
jo
pop
lcall
imul
call
mov
xchg
das
xlat
jmp
test
lea
and
iret
subb
loopne
jecxz
pop
in
add
adc
cmc
xchg
shrb
hlt
adc
sub
or
xlat
popa
test
mov
pop
lea
notb
and
iret
mov
mov
push
adc
mov
js
sub
in
xchg
nop
aam
sub
pop
js
outsl
cltd
lods
add
xchg
cs
mov
imul
call
call
je
dec
lods
pop
dec
into
cmp
movsb
neg
mov
mov
mov
hlt
cmp
pushf
xchg
mov
aas
push
mov
xchg
sbb
jbe
sti
ret
jecxz
fidivl
fwait
jge
push
fs
xchg
mov
lock
inc
adc
movsb
fs
push
push
inc
xchg
sbb
push
xor
xchg
cmpleps
iret
xor
sahf
dec
xlat
xor
ficomps
pop
dec
pop
cmc
in
cmp
jne
mov
push
adc
cmp
je
cmpsl
jo
xor
pop
fstl
pop
xor
or
mov
jecxz
add
ret
mov
mov
shr
pop
cmp
and
stos
decb
data16
ja
dec
test
jne
data16
fs
pop
add
mov
jge
lods
sbb
mov
xchg
insl
movsl
xchg
imul
xchg
sub
iret
mov
cld
loope
movsl
fistps
push
pop
lahf
movsb
call
andl
cmp
mov
outsl
lcall
mulb
into
lahf
jecxz
or
push
push
in
mov
mov
pop
ss
or
dec
sbb
dec
stos
in
pop
adc
add
inc
pop
sbb
rol
into
push
cs
shlb
xchg
sub
push
inc
pop
sbb
lret
or
outsl
adc
jmp
xor
pop
adc
pop
dec
out
jb
clc
inc
ljmp
in
jl
dec
repz
add
faddl
popf
dec
cmpsl
data16
mov
mov
push
xor
test
out
popf
push
lcall
or
sub
ds
fidivrs
inc
cmpsl
and
inc
mov
xchg
xchg
cs
movsl
in
pusha
sub
pop
mov
pop
xor
fsubl
jmp
xor
lods
daa
sub
cmpsl
fcomps
inc
jb
mov
xchg
cmpsl
and
lret
pop
ss
int3
pop
xor
gs
pop
adc
fstpt
jg
push
inc
mov
adc
and
cmpsb
dec
test
hlt
push
mov
jmp
icebp
stos
movsl
inc
inc
mov
test
xchg
hlt
xchg
pop
inc
mov
imul
lret
int3
stos
and
pop
pop
aaa
sbb
loope
in
sahf
sbb
pop
cli
insl
inc
add
sahf
jmp
insb
push
cmpsb
and
mov
inc
test
test
xor
jnp
stos
fidivs
out
sub
rcll
adc
in
push
popa
rep
mulb
das
inc
arpl
cmp
fs
pop
jae
push
lea
ret
test
inc
repz
outsb
sub
jp
lret
add
cmp
and
addr16
or
sarb
inc
cmp
out
loopne
into
xchg
rorb
fidivs
outsl
push
sub
jp
pop
fidivrl
dec
lcall
pushf
scas
pop
mov
fmuls
ss
ret
cmpsb
ds
dec
push
jmp
subb
leave
pop
inc
inc
or
xchg
out
push
imul
repz
lret
movsb
xchg
test
push
add
xchg
out
cmpsl
and
adc
jbe
fwait
jle
cld
loopne
sub
out
out
xchg
outsb
jns
rcrl
test
imul
jle
mov
add
scas
xor
xchg
cmp
mov
jne
outsl
add
mov
mov
sub
cmp
les
orl
fstps
or
stos
mov
leave
inc
jns
and
ret
cltd
pop
outsl
stos
gs
aam
jnp
pop
popf
outsl
sbb
aas
push
mov
cmp
jbe
jl
lret
sbb
and
mov
lds
sub
push
fs
xor
mov
js
mov
stos
std
scas
and
inc
mov
shrb
xor
fdivl
loop
enter
dec
xor
fsubr
enter
in
in
sub
dec
jmp
cmc
aaa
mov
jecxz
jge
mov
fidivl
iret
xchg
push
into
mov
call
in
test
cs
sub
out
xchg
test
inc
inc
mov
aad
xor
jecxz
aam
pop
jne
mov
push
out
xchg
xor
pop
mov
lea
stc
mov
fisubrs
pop
fucomi
das
cld
inc
sub
adc
sub
jnp
movsb
xorb
cli
sub
jecxz
aas
xchg
into
mov
mov
sbb
shrb
adc
sbb
push
xor
mov
das
pop
sub
daa
ret
dec
out
hlt
mov
fcoms
in
scas
adc
xchg
jo
repnz
cmp
pop
mov
cmc
inc
adc
xchg
pop
mov
pop
xorl
pusha
jns
push
fs
or
out
xchg
and
cmc
loope
hlt
mov
jmp
push
ljmp
sbb
hlt
adc
in
mov
dec
push
js
mov
jg
mov
orb
inc
mov
cmp
stc
sub
sub
std
in
jge
xchg
cld
popf
cmp
sub
jnp
sub
cmpsb
dec
push
adc
mov
rcrl
add
bound
dec
fidivs
push
icebp
loope
mov
jb
push
mov
push
fadds
daa
mov
rolb
mov
int
orb
sub
jg
mov
arpl
clc
xchg
sbb
jns
in
dec
filds
hlt
dec
mov
jnp
mov
outsl
lahf
insl
cmp
mov
sti
pop
loope
cmp
pop
dec
dec
mov
push
sbb
fwait
mov
sbb
aad
push
loope
rcll
dec
mov
push
mov
insb
idiv
into
loop
sub
add
jle
cmpsl
dec
loop
lcall
mov
adc
inc
in
lods
mov
ss
mov
imul
push
cmp
mull
popa
es
ja
pop
jne
mov
bound
pusha
inc
mov
xor
push
or
rcrb
lock
fidivrl
lds
popa
in
fstp
xchg
adc
adc
xor
jb
cmpsl
sub
insb
in
insl
xor
xchg
inc
push
xlat
lock
ljmp
sub
and
sarb
mov
lods
mov
pop
dec
mov
ljmp
aam
cltd
dec
pop
or
pop
mov
icebp
cmpsl
nop
mov
mov
inc
subb
push
cwtl
out
fcomp
orb
mov
sbb
clc
xlat
stos
xor
inc
xchg
jne
testl
repnz
push
andb
push
and
and
in
out
fdivs
inc
sbb
mov
icebp
mov
movsl
popa
rorl
stos
sub
push
gs
outsb
mov
sbb
sub
aaa
scas
adc
push
xor
xchg
push
dec
imul
cmp
mov
push
push
and
mov
jl
sub
mov
adc
test
imul
add
sbb
je
inc
push
es
aam
pop
jo
mov
cld
sub
xchg
out
jb
popa
loop
pop
out
and
sub
or
sbb
data16
out
sarb
dec
add
mov
adc
inc
leave
cmp
into
mov
jb
sbb
movsl
xchg
sub
lds
sbb
into
pushf
mov
dec
mov
movsb
aad
idivl
push
fimull
cmpsl
lret
mov
icebp
push
repz
sar
ja
or
jnp
in
jl
nop
push
in
clc
or
mov
int
adc
loopne
jp
popa
xchg
xchg
into
fs
add
and
mov
loop
fs
sbb
sbbb
or
sub
or
cmp
pop
mov
or
jle
arpl
adc
dec
add
enter
gs
out
mov
sub
psllq
mov
sub
popa
sbb
and
es
aam
cmp
ret
test
mov
cmpb
mov
shlb
lahf
mov
mov
xchg
mov
repnz
xor
addr16
sbb
xchg
inc
hlt
cmpsl
xchg
fstpl
mov
sbb
loop
pop
clc
mov
inc
add
movsl
repz
mov
testl
mov
push
adc
test
fmull
divl
test
and
sbb
sub
ss
push
cwtl
mov
sahf
cmp
or
in
cld
and
lds
xor
mov
and
adc
mov
pusha
icebp
scas
mov
dec
xchg
aas
jb
cmp
adc
xchg
into
movsb
scas
xchg
push
aas
adc
pop
movsl
rcl
fstpl
inc
lock
loopne
jle
int
and
nop
mov
adc
loopne
xchg
or
or
inc
icebp
push
mov
jns
ss
mov
pop
clc
call
push
xor
js
shll
cwtl
jns
shrb
cmpb
lock
mov
dec
and
cld
subb
sbb
stos
test
test
adc
or
add
push
out
fistps
inc
jae
std
mov
ret
jp
sbb
jnp
mov
shrl
inc
dec
fcomps
rcrb
sbb
xchg
mov
mov
dec
rol
push
popl
movsl
push
shlb
pop
jp
or
bound
enter
sbb
and
adc
dec
sbb
clc
iret
jle
lods
imul
fstps
push
sbb
lds
cmp
mov
js
push
lcall
fdivrp
in
notb
out
push
pop
xchg
push
cltd
cmp
push
mov
dec
sbb
popf
clc
dec
push
jbe,pt
jb
negl
ret
mov
mov
mov
cmpsl
push
xchg
fwait
pusha
dec
dec
std
imul
push
xor
mov
mov
and
subl
jno
sbb
adc
jmp
in
jb
test
push
adc
fildl
xor
xor
int
inc
and
xchg
frstor
mov
je
and
inc
sub
dec
notl
subl
stc
repnz
je
jp
mov
mov
adc
in
dec
or
scas
sets
cs
or
lods
xor
jl
or
sbb
aam
and
scas
int3
dec
jle
ret
and
cmp
test
andb
and
xor
lret
stos
out
clc
jo
xchg
hlt
xor
nop
sbb
ljmp
xchg
lds
ja
pushf
sub
dec
mov
mov
mov
fidivrl
popf
pop
push
addr16
pop
dec
sub
aam
aad
aas
jmp
andl
inc
cs
sar
mov
mov
in
shlb
clc
leave
into
push
lahf
int
xor
cmp
jnp
xchg
data16
add
cmp
dec
fimuls
test
adc
leave
inc
shrd
push
loope
inc
mov
push
inc
idivb
push
imul
scas
daa
dec
lret
addr16
jle
xchg
jae
mov
daa
movsb
out
mov
xorl
inc
cmpsl
and
insl
adc
popa
dec
mov
stos
ds
ljmp
mov
jo
and
aas
sbb
dec
aas
adc
pop
in
lds
in
loop
test
scas
jge
or
add
cmp
push
movb
les
inc
rcr
xchg
into
push
adc
xchg
popf
inc
or
lea
ljmp
fcomps
test
movsb
jl
xchg
dec
pop
cld
xlat
lahf
jne
cmp
out
mov
ficoms
ljmp
jns
enter
data16
fdivp
cmp
or
xchg
aam
cmp
repz
pop
mov
mov
negb
movsl
jp
jnp,pt
out
nop
je
cwtl
test
add
mov
xor
add
sub
pop
mov
js
pop
aas
popa
sub
mov
cmp
adc
pusha
and
pop
adc
jne
sbb
ds
jecxz
cmpsl
or
pop
xchg
cmp
and
test
push
mov
lahf
test
nop
mov
jns
xchg
je
fmull
sbb
les
stc
xor
out
inc
mov
lock
sbb
pushf
in
inc
in
cmp
jge
fcmovu
loop
into
or
mov
lret
push
inc
cwtl
out
and
adc
shll
and
sahf
movsb
pop
nop
imul
dec
in
xor
in
adc
mov
push
and
dec
int
mov
add
mov
sbb
xor
aad
test
mov
in
push
out
clc
ret
inc
lea
xlat
pusha
mov
sub
lret
fidivrl
nop
sbb
int3
pop
jns
cmc
mov
pop
dec
dec
jge
adc
push
adc
push
dec
lods
dec
loop
gs
fwait
int
sbb
fdiv
fildl
fiaddl
mov
shll
incl
aaa
jecxz
lcall
sbb
fimuls
loop
mov
pop
frstor
mov
out
push
inc
push
or
mov
mov
jne
xchg
and
ret
sbb
cld
fsubrp
sti
stos
cwtl
cmp
les
inc
xchg
test
int
jae
fsubrp
mov
push
mov
test
xchg
fsubrl
fdivs
in
test
les
add
orb
js
mov
std
fsubrs
sbb
aas
jae
or
pop
nop
dec
lods
xor
push
mov
divb
add
addr16
stos
mov
inc
mov
stos
adc
imul
mov
lods
addl
dec
inc
mov
iret
inc
cmp
adc
fiaddl
adc
xchg
and
jle
push
out
jle
mov
iret
sahf
push
push
imul
lret
push
bound
icebp
mov
mov
lcall
fs
adc
pop
out
mov
ss
arpl
pop
sbb
lcall
aam
pop
mov
lret
or
pop
pusha
sti
mov
icebp
movsb
cli
imul
out
gs
les
repz
ret
loopne
dec
xorb
adc
das
add
xorl
fdivrl
lods
push
fs
xchg
nop
xor
pushf
sbb
mov
dec
mov
lea
or
sbb
push
jo
daa
lock
js
fcmovne
push
xlat
loop
jecxz
inc
push
push
ror
xchg
inc
adc
daa
ds
dec
ret
sub
jle
shlb
jecxz
cli
cld
fcoms
mov
adc
js
mov
mov
pop
adc
mov
push
xorb
stos
movsl
cltd
repz
pop
ja
cld
and
std
lea
aad
mov
rclb
mov
mov
divb
outsl
mov
ljmp
int
pop
inc
or
les
jmp
leave
cmpsb
aad
mov
out
jl
call
icebp
add
cmpsl
inc
in
arpl
jo
cmp
jns
add
add
aas
std
pushf
inc
daa
jo
cld
rcrb
mov
decl
sbb
aaa
aam
xor
adc
cmc
scas
movsb
jno
push
fcomp
mov
mov
inc
test
lock
adc
scas
shlb
imul
mov
out
inc
push
idivl
adc
imulb
adc
and
mov
pusha
stos
lret
ljmp
pop
mov
cld
aam
dec
aas
jmp
std
mov
movsb
inc
les
in
push
popa
sub
aam
ds
sbb
jmp
pusha
push
out
dec
push
adc
inc
mov
xor
jb
enter
push
jbe
sbb
divps
lods
outsl
mov
sbbl
daa
mov
loopne
stos
jne
sub
enter
fldt
jo
mov
psrlq
ret
loop
jns
das
cmpsb
sbb
pop
cmp
mov
push
mov
mov
insb
sarb
inc
cmp
out
inc
mov
test
lods
pop
inc
scas
cmp
add
ror
mov
dec
and
inc
repz
xchg
sbb
fsubs
stc
test
xor
xlat
or
xor
test
in
xchg
ret
mov
notb
or
lret
and
push
sti
mov
imul
addr16
mov
and
push
dec
add
lret
mov
jle
jmp
jl
add
std
loope
sbb
addl
push
push
jne
xchg
mov
jg
mov
aad
ds
xchg
rcr
mov
jg
in
insb
movsl
lea
popa
rolb
lret
test
gs
jne
jbe
shll
mov
adc
mov
cmp
dec
push
adc
hlt
std
add
rclb
cmp
ja
scas
push
sbb
out
pop
mov
ds
ficoml
fisubl
push
adc
call
xor
xor
lcall
daa
pop
imul
or
xchg
test
or
push
sub
arpl
imul
ret
xchg
movsb
jmp
stos
cmpsl
ret
cli
xchg
xchg
jle
add
dec
int
in
adc
sbb
popa
push
pushf
lock
cmpsl
inc
int3
insb
jae
gs
nop
push
pop
fisubs
dec
mov
adc
xor
dec
or
loopne
fildll
dec
inc
fdivrs
fcmovnbe
ljmp
mov
repz
loopne
mov
dec
push
daa
aad
in
pop
push
rcrb
shll
in
call
sbb
lret
xchg
mov
fiadds
mov
push
push
dec
js
jbe
sbb
test
pop
fisttpll
maxps
nop
insb
js
pop
xor
xor
shl
inc
push
movl
cld
mov
ret
ret
test
aas
lret
lret
sub
jno
xchg
popf
hlt
adc
xchg
pop
sub
jecxz
jmp
cmpsb
ljmp
cwtl
jne
sarb
push
xor
pushf
lret
loop
xor
dec
js
rcr
inc
test
popa
ret
xchg
icebp
jmp
arpl
pusha
adc
xor
mov
movsb
sub
mov
xor
dec
popa
jne
mov
repz
mov
popa
or
sahf
jge
jp
inc
xchg
add
in
fwait
jg
mov
push
sbb
mov
sbb
std
aam
in
out
sahf
adc
mov
jb
gs
in
jb
sbb
push
jno
jb
fldl
lret
jae
mov
mov
cld
and
or
aad
sti
pop
outsl
subb
cs
xchg
insb
cmpsl
pop
enter
dec
sub
dec
and
clc
pop
mov
jo
or
push
movsl
add
insl
sub
xchg
iret
adc
cmp
dec
call
inc
addb
js
insl
loopne
jmp
call
je
int3
in
sti
mov
fsubl
dec
ficoml
ss
push
or
mov
cmpsb
pop
lcall
push
idivl
xchg
mov
in
das
or
adc
xchg
cmp
push
adc
push
out
fmul
das
cmp
dec
push
movl
lock
es
push
popl
bound
jbe
cmpsl
out
out
sub
pusha
call
in
rolb
and
test
xor
xchg
int3
in
lahf
rcr
out
in
push
pop
scas
push
jl
mov
sub
adc
or
int3
fnstsw
xor
mov
je,pt
cmp
hlt
mov
enter
inc
fidivrs
sarl
sub
insl
push
push
mov
pop
imul
jmp
push
pop
lock
stos
jns
mov
jnp
mov
jl
xor
pop
sbb
loop
gs
push
fscale
mov
xor
dec
mov
enter
fsubl
xchg
xor
sbb
xor
jb
adc
out
mov
rcl
aad
xor
in
jae
dec
dec
mov
xor
fstpt
dec
lock
je
das
fsubs
adc
jns
pop
xchg
ret
xchg
jns
fwait
inc
pop
xchg
or
jg
mov
sbb
ret
xchg
push
mov
sbbb
fisttps
ss
xor
dec
ret
hlt
pop
sub
mov
decl
ja
fdivrp
popf
les
dec
cmc
scas
pusha
sub
fxch
add
stos
in
fbld
push
xchg
insl
pop
xor
xchg
xor
lods
push
inc
xor
sarl
or
mov
push
pop
pop
jecxz
sbb
int
rorl
testl
mov
xchg
pop
pop
out
inc
jnp
iret
mov
imul
in
loop
mov
xor
add
mov
in
loope
fisttps
les
sub
adc
push
and
inc
dec
jne
mov
sbb
cmp
sbb
sti
stos
mov
cli
xlat
and
ds
xchg
inc
cmc
pop
fbstp
cld
pushf
sub
and
sub
jle
iret
sub
into
sub
mov
rcl
rol
repz
shll
xchg
inc
movhps
adc
mov
lods
stos
pop
xor
imul
bt
lock
mov
add
pop
dec
out
and
inc
adc
mov
ret
insb
mov
mov
mov
sti
shll
and
push
fcom
or
rol
cmpsl
jmp
fstpl
or
imul
sub
sub
xor
lahf
notl
xchg
add
lea
sub
cmpsl
out
out
outsb
stc
scas
movsl
mov
inc
xchg
dec
sbbb
shlb
push
pop
sbb
mov
sub
mov
inc
fnstsw
jg
add
data16
std
int
inc
xchg
ljmp
or
stc
and
scas
add
jnp
aas
notl
jbe
mov
jp
ss
inc
push
adc
jo
or
dec
inc
or
dec
aam
add
jmp
das
test
xchg
test
dec
shl
and
mov
aaa
xor
xchg
repz
mov
fdivrl
aad
fcomps
mov
mov
test
xor
stos
mov
imul
or
push
movsb
sub
mov
jge
mov
adc
movsb
inc
xchg
mov
out
clc
xor
cld
jp
mov
jbe
inc
js
ret
mov
leave
pop
jb
add
mov
dec
test
mov
arpl
je
cmp
sti
pop
lret
mov
and
cmp
outsl
loopne
dec
stos
sbb
cld
mov
jae
sbb
sub
orl
clc
adc
mov
out
fildll
xlat
mov
std
mov
outsb
idivb
outsb
dec
in
xor
in
repz
push
fadd
or
pop
cmp
jne
sub
pop
repz
incl
adc
mov
mov
push
adc
test
stc
inc
cmp
sbb
pop
lods
stos
jno
pop
jo
jge
inc
rclb
ja
fdivrl
outsl
in
test
add
addb
xor
dec
das
flds
popa
lret
fildl
mov
inc
fsubrl
jae
dec
lret
push
cmp
movl
ret
loopne
or
in
les
fistl
jg
jo
imul
sbb
fcmovnu
paddb
inc
mov
xor
mov
call
push
inc
pusha
cmp
jg
and
xchg
jne
mov
mov
jg
mov
mov
std
cs
or
loopne
cmp
aas
cmc
mov
outsl
mov
mov
jp
push
mov
or
int3
lea
fidivs
mulb
add
imul
sbb
in
jbe
pop
insb
xor
or
sbb
insb
cltd
jmp
cmp
mov
fildl
aas
push
push
stos
test
jp
pop
push
shl
ja
sahf
sub
negb
pop
rorl
push
adc
mov
cmpsl
sub
xchg
mov
or
sbb
sub
out
cmp
adc
sbbb
mov
mov
hlt
or
inc
adc
xchg
cmpb
movsb
mov
adc
xchg
mov
repnz
push
mov
push
jbe
aam
std
sub
pop
push
hlt
jle
int
push
aad
imul
mov
pop
rep
ret
jge
ja
out
sbb
pushf
popa
inc
push
fldcw
sbb
mov
mov
in
minps
pop
jbe
add
jp
call
rclb
sar
jg
cmp
shlb
or
outsl
xor
or
dec
repz
fnsave
jmp
mov
mov
inc
mov
hlt
sbb
leave
imul
jno
mov
outsl
in
orb
push
in
jnp
jmp
inc
or
fbstp
sbb
add
test
dec
add
sbb
adc
sbb
push
es
fs
mov
loopne
push
jnp
aam
cmpsl
pop
jp
mov
jns
ret
jle
orb
addr16
or
pop
mov
hlt
jge
gs
sbb
xor
addr16
cmp
xor
loope
xor
lcall
sub
push
pushf
xchg
outsb
lock
lods
insl
bound
imul
sub
push
cmp
popw
sbb
xor
cld
xchg
les
mov
nop
inc
and
xlat
push
push
shll
mov
push
add
inc
sbb
jo
sub
sub
push
rorb
pop
cmp
mov
aaa
rorb
mov
loope
lods
lock
sbb
decl
test
cmpsl
mov
fnstenv
stos
aam
push
fucom
pusha
cltd
scas
pop
in
jmp
lahf
add
mov
mov
lahf
push
scas
addl
jmp
outsl
cmp
jb
push
cwtl
pop
daa
cmpsb
mov
or
cmp
mov
subl
fisttps
int
push
mov
lods
fucomp
loope
mov
aad
push
call
out
ret
scas
loop
sbb
jl
sub
push
pop
sarl
sub
rclb
lds
jno
ljmp
jge
jmp
mov
mov
push
sub
stos
das
push
mov
mov
xor
mov
pop
mov
or
xchg
cmp
xchg
mov
or
loopne
or
mov
aad
imul
jae
cwtl
loope
movsl
popf
sub
stos
cmpsb
jp
sbb
push
push
adc
xchg
stc
nop
xor
out
mov
sbb
pop
sub
gs
jmp
cmpb
adc
jnp
incl
stos
aam
jl
inc
add
jno
cltd
pop
popf
dec
mov
cmp
ss
jle
inc
lock
enter
sub
push
sub
lret
lock
inc
sub
mov
inc
mov
push
int
rorl
add
mov
mov
cmp
add
xor
xor
xchg
push
mov
lcall
pop
subl
addb
sbb
or
arpl
ds
lea
out
xor
mov
cmpsb
lods
xor
lahf
imul
lea
sbb
sbb
aas
xor
dec
rclb
mov
adc
push
or
out
pushf
mov
jnp
lret
scas
cmpsb
roll
lcall
cmc
imul
sbb
nop
cmp
or
inc
es
mov
jns
js
test
inc
lret
in
ss
aas
dec
xor
sub
outsl
mov
adc
push
lret
aaa
adc
cmp
xchg
test
push
cmpsl
pop
jo
icebp
daa
or
xchg
xchg
das
inc
leave
imul
or
cmp
xchg
testb
sub
pop
shlb
mov
xchg
push
mov
dec
dec
mov
or
popf
cli
mov
xchg
clc
cmp
sub
popf
out
shlb
loope
cli
push
jbe
cmpsl
or
std
push
mov
dec
mov
repnz
pop
ja
sbb
out
mov
mov
dec
pop
fs
mov
or
jg
bound
sub
inc
scas
or
lods
call
sub
cmp
mov
popa
outsl
sbb
push
cltd
cmp
lock
inc
dec
mov
dec
lcall
sti
pop
mov
out
mov
je
dec
mov
push
aad
jne
xorl
and
mov
mov
ret
fcompl
loop
sbb
in
adc
or
xor
xchg
dec
mov
and
adc
fistps
cmp
movsb
out
test
or
dec
xchg
dec
push
and
inc
push
ret
stos
inc
notb
call
ljmp
imul
cmpsb
lods
and
stos
lret
div
push
mov
pop
dec
jo
push
jbe
adc
and
inc
inc
movsb
pop
pusha
pop
out
sbb
outsb
insl
pop
or
pusha
clc
jne
adc
stos
insb
xchg
shl
add
inc
mov
sub
pop
loope
aad
lret
dec
icebp
in
ret
fld
xor
aas
push
outsb
mov
pop
cmpsb
mov
jnp
out
push
loop
or
lret
fucomip
insl
jno
jecxz
pop
fwait
mov
repnz
jge
imul
rcpps
xchg
mov
rcrb
xor
sbb
in
lret
jp
dec
pop
dec
daa
xor
inc
repz
fmull
and
aaa
mov
test
push
mov
pop
lods
in
lock
xchg
dec
je
jle
mov
mov
and
ja
sbb
stos
loop
xchg
add
lods
xor
imul
ret
lahf
outsl
xchg
mov
inc
out
clc
or
cmp
flds
mov
stos
add
scas
inc
mov
inc
mov
dec
jbe
rcrb
xchg
mov
popw
mov
xchg
cmp
gs
mov
lret
inc
incl
insb
adc
jge
call
sub
popa
pop
mov
jmp
icebp
jle
mov
dec
hlt
cs
mov
xchg
push
push
and
popa
movsb
cmpsl
adc
mov
hlt
leave
ja
sub
push
or
sbb
mov
mov
insb
push
nop
jbe
arpl
adc
shll
js
push
ss
mov
inc
cltd
and
clc
data16
enter
mov
mov
dec
pop
sub
xchg
and
aam
sub
dec
mov
push
mov
add
mov
sbb
add
and
into
pop
ja
stos
ljmp
cmpsl
lock
pop
scas
adcb
out
sarb
scas
or
lea
rcrl
adc
cltd
push
dec
ret
pop
out
cld
pop
in
lcall
jbe
inc
xor
insb
adc
sub
rcr
fs
in
pusha
dec
lods
in
shlb
add
push
push
push
out
cwtl
test
jns
loopne
call
fistps
enter
cmp
ljmp
cld
ljmp
pop
dec
out
pop
cmp
push
test
dec
xor
int
sbb
cmpl
sbb
in
or
movb
pslld
icebp
imul
pop
jecxz
sbbl
or
mov
ret
dec
aam
cmp
or
es
pop
cmp
in
and
cmpsb
mov
xor
xchg
pushf
cmpsl
insb
jecxz
sub
mov
leave
jns
fcmovb
iret
dec
lods
outsl
mov
jne
adcb
mov
jnp
loope
sbb
stos
out
call
push
jno
pop
sub
and
in
cmc
xor
cld
jl
fwait
shll
shll
jns
cmp
ret
mov
mov
js
push
ljmp
mov
lcall
lcall
ljmp
cli
dec
push
mov
in
jmp
cmpsl
lds
pushf
pop
mov
loop
imul
push
es
test
mov
cmp
sub
sub
orl
je
movsb
aaa
testb
test
xchg
xchg
sahf
enter
mov
xlat
xlat
pop
cmpsb
movb
mov
mov
ss
stos
lcall
cli
in
cmp
mov
mov
cmp
pop
mov
sbb
lret
pop
jns
cmp
imul
loopne
out
pop
cmp
insl
mov
cmpsb
jmp
sbb
push
inc
hlt
and
fnstenv
push
out
cmp
data16
stos
push
cmpsb
jg
or
or
lods
jl
xchg
add
out
sarb
push
xchg
xor
out
test
cld
xchg
ds
sbb
lcall
inc
shlb
cli
mov
sub
cltd
pushf
push
push
mov
push
aas
fwait
mov
pop
js
mov
sub
mov
dec
fildl
inc
inc
sarl
push
loope
mov
lds
call
lock
mov
aam
loopne,pn
jp
xor
push
sbb
and
pop
sub
adc
or
jle
mov
add
fwait
mov
mov
stos
xchg
inc
pop
ja
ljmp
cs
pop
push
adc
mov
mov
in
push
shr
imul
push
xor
xchg
dec
sti
shrl
fiaddl
push
inc
mov
movsl
mov
sub
lahf
sub
std
mov
stc
sub
xor
inc
scas
ss
push
dec
ds
pop
xlat
popf
std
xchg
arpl
mov
mov
dec
xor
fsubs
push
insb
stos
loopne
insb
xchg
xor
sub
dec
jmp
or
imul
movsb
insb
dec
add
add
jg
pop
and
loopne
roll
les
pop
xchg
jge
jae
pop
sbb
es
outsl
jmp
popa
mov
mov
mov
xchg
xchg
out
outsb
mov
lods
test
lds
mov
lret
xchg
pop
pop
cld
incb
stos
sbb
inc
sbb
stc
pop
or
push
je
mov
pushf
mov
aam
sbb
xchg
int3
sub
mov
in
repz
mov
stos
addr16
cmp
arpl
stos
push
daa
adc
js
andl
sbb
test
int3
cwtl
hlt
jge
negl
push
pop
push
inc
dec
fldenv
sbb
shlb
push
ljmp
pop
sti
sbb
xor
outsb
outsb
sub
xor
cmp
rcrb
cmpsl
dec
push
lock
adc
enter
test
fmuls
push
imul
mov
ja
xor
cmp
dec
sbb
or
enter
nop
hlt
les
fcompl
jg
adc
scas
mov
test
ja
adcb
sbb
es
arpl
loop
movsb
and
mov
repnz
push
in
leave
sbb
xchg
fsts
mov
fdivr
stos
xchg
add
push
inc
lds
sbb
jno
jl
lret
popf
out
push
mov
sbb
scas
cmp
and
call
fcoms
imul
frstor
dec
outsb
ret
fistl
outsb
pop
aas
cmp
sbb
pop
arpl
or
and
hlt
cmp
loop
pop
mov
sub
inc
mov
lahf
xor
sub
dec
add
push
test
mov
adc
cmp
add
pop
mov
sub
inc
and
or
icebp
stos
enter
cmpsb
jo
mov
mov
nop
xlat
shll
insl
jle
mov
sbb
jnp
dec
rcrl
pop
add
mov
adc
pop
sbb
mov
aaa
pop
inc
loop
mov
or
pop
and
sub
dec
and
xchg
mov
ljmp
imul
dec
add
xor
in
fiadds
pop
test
inc
mov
add
lods
sub
inc
into
imul
lods
jae
push
cmc
stos
loope
fdiv
sbbl
jne
jnp
mov
es
aad
aaa
push
jge
shll
or
hlt
push
pop
pop
push
popa
sub
xlat
out
call
and
and
cmpsl
jo
sub
aas
aas
push
push
pop
or
aad
and
cs
out
push
int3
jb
push
xchg
sbb
add
in
mov
jb
nop
scas
pop
sub
pop
sub
pop
out
cmp
mov
xchg
push
std
pop
sub
sub
adc
cmp
in
psraw
cmc
stos
xor
push
and
cli
fdivrs
jb
sub
inc
icebp
insb
into
and
fcoml
nop
add
push
jmp
sbb
push
adc
movsl
jae
insb
mov
jg
aam
lahf
cmp
sbb
inc
divl
sarl
incl
xchg
cmp
and
mov
subb
adc
movsl
repz
shlb
mov
imul
sbb
and
flds
pop
adc
and
jg
arpl
rclb
sarb
fldl
lcall
sub
push
xor
ret
in
xor
push
add
pop
xchg
mov
imul
das
ss
lods
dec
stc
loope
jns
adc
sbb
and
and
mov
xor
fs
sbb
xor
push
jo
int3
push
int
push
cmp
rcr
fadd
test
out
mov
insl
icebp
addr16
imul
popa
shll
jns
cmp
nop
jl
push
arpl
add
test
fadd
mov
xor
dec
test
outsb
jp
xchg
out
cmp
xchg
sbb
push
xchg
push
dec
stc
mov
test
ret
dec
push
jle
xchg
rcrb
mov
mov
aas
cli
push
out
stc
or
je
jnp
nop
mov
or
pop
andb
fdivrs
imul
add
push
out
es
push
mov
inc
mov
nop
sub
addl
in
fs
int3
or
pop
testb
loop
inc
pop
repnz
mov
test
bound
push
js
mov
xor
xchg
mov
mov
xchg
clc
and
mov
jecxz
pop
lds
pop
cld
ret
jbe
fsubrl
orl
outsb
scas
push
mov
es
push
inc
cmc
and
xchg
add
hlt
xchg
enter
jmp
in
fwait
push
push
add
jmp
out
rorl
in
mov
and
jne
addl
jne
dec
mov
addb
mov
mov
mov
ljmp
push
jae
clc
dec
out
test
jae
mov
andl
jb
pop
popf
insb
xchg
pop
insl
push
mov
add
stos
sbb
out
jmp
xchg
pop
push
pop
inc
inc
mov
adc
push
repz
dec
lods
push
cltd
mov
loop
jl
mov
add
push
push
xchg
rol
mov
and
jbe
cmp
sub
jge
cmc
mov
add
adc
pop
lods
mov
lea
dec
gs
inc
jno
fsub
cmpsl
hlt
pushf
das
and
fbstp
jecxz
pop
xchg
jbe
sbb
pop
cmpsl
loopne
dec
xchg
xor
cmp
out
ficompl
jmp
pusha
add
out
shr
out
pop
xor
popf
lods
mov
fsubrs
and
sbb
dec
out
cs
pop
push
and
lret
out
jge
out
loope
inc
push
push
mov
ds
inc
dec
or
push
repz
sub
jns
jb
and
jge
cmpsb
sbb
cmp
outsb
arpl
test
shl
xchg
std
mov
mov
push
and
sub
add
movsb
hlt
imulb
cwtl
loop
arpl
fmuls
les
dec
mov
adc
or
or
gs
sbb
pop
push
push
sbb
cmc
mov
sti
loope
ficoml
hlt
xorl
xor
mov
add
pop
lock
xchg
jno
in
mov
push
test
test
cmc
inc
rorl
mov
and
xor
int3
icebp
xchg
aam
mov
and
cmp
lret
cmpsb
fmuls
pop
jecxz
sub
lock
lahf
les
push
ljmp
iret
push
rclb
sahf
dec
ss
xchg
mov
push
sbbl
cmovbe
mov
sub
fdivrl
cmp
xchg
iret
les
cs
enter
pushf
add
out
inc
imul
mov
sbb
rorb
fnstenv
scas
mov
cmc
or
sbb
dec
inc
xor
xchg
pusha
jo
sti
mov
push
mov
jg
jp
pop
fadds
in
ficomps
ljmp
inc
daa
gs
xchg
pop
fnsave
mov
sbb
push
jb
pop
mov
or
and
mov
shll
mov
rcrl
dec
je
incb
xchg
shll
jb
icebp
or
xor
adc
push
loopne
lds
push
mov
movd
xchg
es
push
shll
xchg
shlb
xchg
outsb
push
and
add
cmc
or
das
out
out
dec
out
xor
ja
push
mov
mov
adc
bound
ljmp
mov
xchg
sbb
sub
lcall
push
push
xchg
fisubl
add
outsb
cwtl
cmp
and
cmp
jmp
xor
sti
push
inc
iret
bound
loop
adc
mov
sub
pop
jno
ja
push
sbb
aas
jne
sub
scas
idiv
jne
push
aad
mov
subb
lods
or
jbe
and
gs
cmp
dec
dec
push
lret
stos
divb
ja
cwtl
sbb
mov
sub
lds
lret
mov
jno
gs
inc
in
and
mov
pop
test
sbb
mov
lea
or
mov
sub
mov
ja
sti
pop
ja
add
js
dec
xchg
outsl
aad
mov
and
pushf
jmp
cld
test
and
lret
imul
aam
loop
inc
adc
insb
fisubrl
cmovae
mov
xor
mov
ja
jno
or
loop
jo
in
push
dec
mov
inc
sbb
sbb
orb
in
pop
jl
adc
adc
or
xor
pop
adc
sub
insl
inc
sbb
or
adc
mov
aam
fiaddl
loope
or
adc
daa
rclb
imul
test
mov
or
inc
xor
inc
sbb
adc
and
dec
and
hlt
into
add
orl
pop
insb
fiadds
push
jp
push
pop
fbld
jl
mov
xor
jb
push
mov
add
jb
and
dec
fiaddl
scas
loopne
shlb
gs
ret
incb
das
pushf
cmp
cs
jp
xchg
fs
dec
push
imul
notl
hlt
js
xchg
add
fidivl
and
rorl
cld
mov
jp
adc
jge
dec
push
fisubrl
mov
mov
call
test
cwtl
add
xchg
sahf
push
or
aad
mov
fs
sub
push
mov
add
adc
aam
adc
sti
imul
mov
in
or
inc
out
pusha
loop
jmp
sti
popl
sub
pop
clc
in
jns
lea
mov
xor
sub
mov
outsb
xchg
test
sbb
stos
xchg
dec
sbb
jb
mov
xor
lods
in
mov
pop
std
hlt
shrl
inc
inc
cmpsl
push
lds
jae
sbb
xor
pop
xor
rcl
pop
and
and
mov
xlat
test
push
out
mov
jns
sbb
cs
int
inc
fnstcw
or
cmp
pop
adc
xchg
flds
xchg
add
imul
jge
push
ret
int
cwtl
scas
aad
add
sbb
ret
cmp
dec
and
xchg
xchg
dec
mov
aad
mov
xlat
ljmp
mov
sub
sub
dec
and
add
iret
sbb
cmp
jle
and
jle
lock
pop
sbb
movsl
cmc
cmp
xor
sub
adc
inc
jle
dec
jnp
jecxz
cmc
rorb
negl
stos
sbb
lds
subl
push
loope
and
imul
mov
push
adc
or
adc
sbb
dec
sub
sti
adc
and
mov
scas
push
mov
fldl
ficoms
dec
cmp
mov
jb
hlt
xchg
loop
or
mov
out
push
mov
xchg
sub
ja
hlt
inc
add
cld
ljmp
leave
repnz
lahf
fisttpll
mov
cli
inc
movsb
nop
aam
xchg
and
test
push
int3
mov
iret
std
out
jbe
sahf
sbb
out
add
sub
dec
dec
mov
daa
sbb
cmp
test
aas
fidivl
push
pop
add
mov
mov
cmpsl
push
gs
ja
js
cltd
inc
jmp
imul
inc
push
mov
out
jnp
jg
dec
push
mov
js
push
xchg
jecxz
mov
push
pop
xchg
pop
pusha
mov
insb
popa
xor
or
cs
iret
daa
push
out
or
cmp
inc
lods
rcrl
add
fsubs
mov
or
sub
popa
loope
sbb
es
push
xchg
je
es
pop
xor
or
into
inc
mov
lea
sbb
mov
xchg
push
flds
jns
jecxz
lock
cmpsb
inc
push
push
dec
mov
fisttpll
fisubl
xorl
das
fldl
pushf
sbb
jb
push
pop
lds
dec
pushf
mov
sub
subb
mov
add
jne
aam
and
xchg
lcall
pusha
scas
outsb
ret
int3
mov
add
je
cli
pop
mov
or
jge
cli
arpl
int
and
and
int
jno
and
lcall
mov
cmp
sahf
and
sbb
mov
mov
cmp
or
push
sbb
inc
jne
cmp
sbb
mov
bound
paddw
xor
lea
lret
cmp
cmpsl
js
push
and
or
sbb
fsubrs
cmc
and
mov
adc
push
or
lret
add
xor
loopne
mov
icebp
mov
out
dec
shrl
add
mov
xchg
push
mov
cmpsb
mov
inc
fildl
cld
imul
out
push
xor
push
pusha
sbb
aad
rclb
xchg
dec
fidivl
pusha
sbb
dec
movsb
fildl
mov
stos
jmp
dec
jmp
out
int
pop
mov
outsl
xor
out
fwait
add
out
sub
ljmp
xchg
pop
repnz
pop
int
push
dec
mov
sub
sub
xchg
xchg
in
sub
mov
push
xchg
xchg
stos
push
mov
arpl
insl
fistl
cltd
sub
mov
rclb
lret
pop
rolb
mov
mov
or
rcl
popf
int3
mov
fiadds
les
jmp
jge
push
pop
adc
sub
and
iret
out
cmp
cmp
adc
pop
mov
xchg
sub
jl
fbstp
nop
jnp
pop
and
ds
or
push
dec
outsl
xlat
mov
imul
repnz
inc
int3
out
int
cld
cwtl
movsl
test
int3
mov
cmc
sub
sti
pushf
lock
lcall
out
mov
jnp
add
dec
jo
sbb
jb
inc
push
ss
or
xorl
or
jmp
idivl
push
push
and
and
add
shll
bound
sbb
fwait
pusha
movsl
xor
sub
mov
cmp
or
xchg
xlat
mov
push
sbb
out
add
lea
imul
mov
push
das
aas
iret
aad
cmp
call
lahf
leave
imul
rolb
mov
pop
or
sbb
jp
pop
jnp
loop
and
sub
sub
xchg
loope
call
or
and
std
subl
mov
add
and
jl
test
cs
jg
les
test
mov
stos
rcrl
shrb
in
xchg
cmp
int
mov
jae
jbe
inc
insb
jg
mov
dec
sub
mov
push
push
hlt
daa
xchg
sub
add
cmp
pop
int3
stc
dec
jge
inc
cmp
mov
sub
ja
push
cli
addl
push
pop
pop
scas
aaa
pusha
mov
fwait
in
lea
add
data16
sub
sbb
jne
call
mov
setg
imul
sbb
jne
out
adc
cld
adc
out
jo
hlt
icebp
ljmp
xor
fwait
mov
cwtl
inc
jns
shl
xchg
sbb
add
xorl
jmp
add
loop
inc
mov
cmp
and
ret
data16
stc
fwait
rolb
jmp
std
std
ret
cltd
es
pop
stos
subb
push
jp
pop
sbb
push
fcoms
xor
testb
pop
sbb
imul
xchg
rcr
sarl
xor
repnz
sub
das
xchg
push
and
mov
rclb
jae
mov
adc
and
cmpsl
dec
sub
cmp
test
dec
add
in
notb
repz
dec
icebp
lahf
jle
push
inc
sbb
sbb
jo
test
mov
add
pop
pop
and
mov
lods
xchg
shlb
rorl
push
divb
and
pop
add
mov
loop
xor
pushl
pop
xor
call
jbe
cmp
in
js
mov
outsl
lret
inc
stos
dec
lahf
call
cmp
push
add
push
lods
or
push
cmp
test
pusha
lret
pop
pop
xor
daa
ret
std
lcall
dec
outsb
jae
fistpl
sahf
adc
jno
movsb
sbb
sub
add
out
cmc
xor
stc
sub
xor
sub
sub
inc
jae
scas
addr16
mov
pop
out
mov
inc
cmp
lods
popa
cmp
jb
add
mov
and
adc
pop
mov
filds
adc
sbb
xor
mov
pop
stos
mov
sbb
mov
sub
movsl
addr16
inc
cmp
insb
aas
xchg
mov
mulb
addr16
pop
fbstp
jg
xor
mov
stos
push
sub
mov
push
pop
inc
mov
dec
pop
jns
mov
pop
aad
xchg
mov
jb
les
jo
sub
jbe
add
and
mov
cs
jmp
jmpw
push
mov
pop
test
or
push
dec
xor
push
sub
repz
dec
cmp
aam
repz
xorl
gs
vphaddwd
xchg
adc
filds
push
jae
cmp
xor
push
add
ret
nop
call
out
push
fcoms
call
call
push
mov
jo
push
cmpsl
and
leave
mov
jge
or
xchg
out
adc
sbb
in
outsl
add
push
adc
dec
mov
mov
out
jne
xchg
inc
sbb
nop
nop
out
adc
std
pop
xchg
push
out
es
mov
scas
cmp
andb
adc
dec
daa
or
adc
in
into
aaa
cmp
xor
or
fs
out
pop
cwtl
lret
in
fisubrl
jne
and
ljmp
sar
shlb
xchg
lahf
or
test
dec
inc
jo
jbe
xchg
incl
push
mov
dec
pop
xchg
ss
dec
push
jns
bound
movsb
out
addb
int
add
rol
aaa
xlat
outsl
push
dec
fwait
sub
rclb
jo
int3
movsb
pusha
or
mov
or
cli
jp
xorl
and
pop
lods
dec
xor
or
sbb
icebp
jmp
outsl
fistps
test
mov
jne
lret
arpl
jnp
cmp
xor
lea
bound
test
in
cmpsl
pop
push
mov
jno
pop
fcompl
out
sarb
mov
jo,pt
xor
xchg
jle
mov
dec
into
sub
test
add
or
sbb
fisttpll
ret
dec
inc
testb
push
xor
mov
mov
cli
and
out
mov
icebp
mov
vcvtps2pd
push
inc
push
and
mov
xor
outsl
xorb
roll
in
xchg
mov
in
popa
inc
xchg
inc
ret
popf
add
inc
fiadds
popa
add
xor
pop
movsl
repz
push
gs
jmp
lods
addr16
shrb
jg
icebp
shll
xchg
mov
push
mov
or
and
pusha
adcb
imul
mov
cmp
add
les
xor
in
pushf
outsl
pop
add
sarl
and
test
pushf
mov
adc
fildl
lods
cmp
add
push
cltd
ror
mov
out
sahf
pop
fnsave
into
shl
adc
pop
xchg
sbb
dec
adc
add
push
inc
clc
aas
call
sarb
mov
leave
shrl
push
ljmp
ficoms
std
cli
enter
js
and
sbb
lods
lret
push
out
cmp
imul
aam
dec
jns
addl
cmp
dec
xchg
fnsave
adc
fidivrl
xor
lods
mov
sahf
adc
in
xchg
adc
xchg
sub
xchg
mov
into
xor
fdivrl
int
dec
popf
cwtl
push
add
sub
mov
push
movsl
cmp
rol
cmpsl
loop
and
xchg
adc
adc
add
fdivrl
mov
jno
mov
aaa
and
sbb
insl
or
sarb
xchg
lret
dec
mov
adc
lret
fcompl
repz
dec
cld
ret
stc
cwtl
fildll
icebp
and
hlt
pop
sub
imul
jne
sub
xor
pop
jle
xlat
xchg
outsl
pop
ffreep
ficompl
push
movsl
sub
push
jne
xchg
es
mov
iret
fsubrp
jg
cmpb
in
addl
les
pop
pop
push
pop
mov
xchg
jl
cmp
arpl
mov
xchg
dec
xchg
es
and
aas
inc
popa
in
cwtl
xor
adc
xchg
arpl
xchg
mov
rol
xchg
fsub
cmpsb
in
fisttpll
ljmp
insl
aas
adc
shlb
lcall
lret
enter
xor
ljmp
sbb
test
pushf
fisttpll
int
mov
cmp
popf
cld
movsb
enter
repz
sub
xor
inc
cmc
jle
movsb
stos
dec
mov
sbb
cmpsb
fimull
adc
subb
stc
add
pop
enter
mov
jmp
dec
popa
jle
xchg
inc
fsub
xor
xchg
or
stc
mov
push
adc
jle
pop
mov
daa
dec
add
or
xchg
push
sbb
je
or
cmp
lret
and
cli
xlat
ret
push
jg
adcl
mov
aam
test
push
outsb
scas
adc
adc
insl
sbb
mov
or
je
imul
loope
cmpsl
daa
push
lret
mov
mov
jnp
daa
sub
pop
pop
xlat
sbb
push
cmp
mov
mov
mov
dec
mov
jo
sbb
mov
sbb
xor
sti
mov
xchg
pop
out
sbb
and
outsl
mov
jecxz
or
out
sbb
xor
rcr
iret
enter
pop
icebp
mov
call
mov
xchg
cltd
inc
rclb
popf
adc
daa
inc
jnp
movsb
dec
push
stos
sub
movsl
ret
test
adc
hlt
dec
mov
xchg
imul
lds
mov
xchg
fists
mov
aam
fdivr
lods
mov
mov
sub
gs
and
xchg
imul
pushf
mov
insl
enter
stos
or
das
frndint
mov
jno
sub
push
test
shrl
les
sti
rol
or
mov
pop
mov
sub
rdmsr
into
xchg
ss
hlt
faddl
outsl
mov
lea
lcall
aaa
outsl
dec
mov
lods
inc
xchg
mov
push
adc
cmpb
rclb
jecxz
mov
out
inc
mov
cmc
int
out
mov
rcll
mov
mov
andl
sub
mov
mov
mov
dec
jae
pop
inc
or
ja
cltd
mov
pop
lock
and
lods
push
arpl
jae
popa
stos
mov
inc
adc
push
fmuls
mov
dec
in
pop
lea
sub
mov
adc
mov
iret
xor
add
les
fisubrl
in
imul
xorl
les
aaa
popa
lcall
mov
fwait
int3
test
repnz
insl
test
int3
pop
push
cmpsl
rcl
sub
pop
pop
scas
cmp
jl
ja
shrl
mov
leave
movsl
fmull
jns
nop
outsb
mov
out
sti
push
mov
dec
push
mov
cmp
sbb
jg
out
and
outsl
xchg
pop
stos
adc
xorl
daa
mov
cmp
mulb
out
xchg
sub
shll
jecxz
xchg
loopne
in
cmp
mov
in
jg
imul
int3
jnp
jnp
and
mov
lcall
add
lds
or
fstl
push
sub
xchg
mov
cmp
push
repz
xchg
dec
inc
rcr
dec
dec
pop
push
inc
add
or
push
add
mov
jmp
andl
stos
push
jl
mov
iret
dec
cmpsb
xchg
pop
add
cmp
xchg
ret
gs
sub
pop
mov
xchg
xor
movsb
ss
lods
loop
xchg
or
push
inc
out
insb
pop
out
int3
push
mov
jb
mov
aas
repnz
adc
iret
mov
fisttps
clc
mov
sub
fimuls
roll
or
add
rorl
shlb
lret
or
dec
stc
sbb
test
pop
fildl
jle
push
push
jmp
mov
xor
and
cwtl
xchg
ljmp
iret
add
out
mull
cltd
sub
jns
mov
adc
cltd
cltd
push
fsub
out
test
jae
add
mov
adc
mov
lahf
popf
push
xor
xchg
xchg
mov
cmc
jno
out
lods
loopne
cmp
sti
aam
dec
ffree
add
icebp
and
dec
add
in
inc
pop
jo
xchg
les
rdtsc
pushf
iret
loop
dec
mov
push
daa
mov
enter
xlat
lods
push
imul
xor
ret
nop
dec
scas
sub
imul
js
xlat
jl
sbb
adc
dec
out
repz
pop
out
out
add
movsb
jns
inc
test
imul
push
sub
cmp
sub
dec
dec
out
mov
mov
pushf
in
lods
mov
xchg
xchg
mov
ret
mov
sub
jl
jbe
sahf
sbb
in
cltd
lds
fs
aas
adc
sub
lret
xlat
push
insl
out
out
fsubs
clc
ja
dec
lret
push
xchg
dec
clc
aaa
std
inc
xchg
xchg
inc
lods
fdivs
add
lock
jge
and
push
or
repz
iret
inc
mov
test
inc
aas
add
lock
das
pop
arpl
xor
rolb
insl
insl
cli
repz
aad
sbb
std
loop
mov
test
and
loope
push
sub
popf
dec
pop
rorl
ret
mov
jae
jmp
lret
mov
dec
stos
or
loop
aam
cs
pop
popf
jmp
mov
ret
jl
jle
imull
insb
mov
sahf
ja
sarl
mov
shrb
cmp
cmp
inc
fcmovnb
repnz
lret
dec
xchg
jl
push
sub
daa
or
aas
mov
xlat
push
jg
inc
push
cltd
inc
inc
pop
sbb
sbb
or
rorl
inc
cmp
cmp
add
xor
adc
add
or
adc
and
cmp
lcall
scas
dec
pop
lahf
fistpll
dec
push
loop
ja
dec
mov
cmp
mov
pushf
rcll
outsb
adc
lahf
out
mov
add
pop
test
jb
lcall
mov
sahf
inc
dec
movsb
push
pop
testl
aaa
fisubs
icebp
scas
sub
add
popa
inc
pop
rcll
xor
and
xor
ljmp
cmp
pop
loopne
ljmp
inc
sbb
subps
outsl
add
clc
xchg
stos
mov
pop
mov
enter
sub
or
add
repnz
dec
in
sti
frndint
and
mov
mov
sarb
nop
cmp
rcr
in
lret
int
push
out
cmp
mov
mov
jp
pop
pop
mov
mov
roll
jmp
add
jmp
es
iret
movsl
mov
mov
call
or
das
xor
mov
xor
mov
inc
sti
add
sub
test
gs
dec
cmp
mov
cmp
mov
push
ljmp
jmp
dec
mov
xor
vpaddusb
arpl
mov
jb
xchg
fcomps
addr16
out
lcall
mov
in
jae
mov
testl
push
mov
mov
ret
inc
lcall
test
aas
lea
inc
shlb
shrl
sbb
mov
pushf
idivb
es
test
xorb
rcrb
mov
add
test
add
cmp
je
dec
rorb
rorl
xchg
daa
pop
or
and
sub
rorl
cltd
mov
iret
scas
ret
jmp
adc
sub
popf
sub
nop
adcb
fs
repnz
dec
lea
cmc
mov
ret
lock
xchg
mov
in
in
das
ljmp
mov
ret
repz
addb
lret
ret
sub
sbb
mov
fidivs
mov
in
cmp
or
out
cmp
sub
jl
lret
inc
cwtl
mov
xchg
mov
repz
dec
push
and
xchg
xchg
out
loop
mov
lret
jb
xchg
mov
aas
mov
lret
jge
inc
jmp
push
sbb
fistpl
fwait
aam
pop
push
cmp
int3
shll
xorb
dec
rcr
sbb
push
cmp
hlt
aam
enter
scas
loope
mov
sub
in
pop
xchg
cli
ret
insb
cmp
add
lret
call
fwait
cmp
dec
xchg
xchg
pop
or
jl
pop
sar
xchg
xchg
popa
mov
adc
cltd
out
mov
movsb
scas
cmpsl
add
push
xchg
dec
or
es
pusha
pusha
jmp
cmp
aad
andnps
jnp
std
fsubl
loopne
lods
dec
mov
call
mov
and
icebp
out
xchg
mov
dec
sbb
imul
iret
dec
mov
sbb
adc
out
mulb
jg
fldenv
sub
push
popa
hlt
cltd
inc
cmp
push
push
imul
nop
adc
sbb
cmpl
adc
sbb
dec
lcall
in
negl
mov
sbb
int3
mov
adc
fsts
icebp
add
adc
fistps
divl
inc
inc
fldt
xor
icebp
sbb
xchg
dec
pop
and
test
sbb
mov
mov
push
out
cmc
sub
outsb
lcall
out
sbb
and
popf
mov
mov
inc
shrb
sbb
mov
rcr
pop
cmpsb
push
mov
push
aas
imul
fisubrl
jne
cmp
push
in
dec
icebp
fnclex
xchg
dec
sub
xor
cltd
adc
mov
das
add
mov
mov
mov
jnp
out
pop
movsl
call
hlt
adc
fiaddl
outsb
xchg
and
or
jle
adc
fnstenv
add
inc
pop
cmpsl
daa
pop
mov
or
mov
pop
adc
cmp
inc
int
jne
hlt
xchg
shlb
mov
ret
sarb
and
push
pop
sahf
mov
fisubl
jg
popf
icebp
xlat
clc
mov
lods
lcall
scas
test
insb
cli
add
cwtl
push
loope
out
xchg
daa
sahf
cmp
sti
addr16
pop
mov
int
ds
shr
push
rorb
sbb
add
iret
rcrl
push
inc
mov
gs
and
xchg
jno
sub
imul
and
ja
dec
sub
cmp
pop
test
lock
mov
stc
inc
fnstsw
mov
divb
repnz
add
mov
adc
mov
imul
cmc
adc
xchg
mov
jbe
pop
in
pop
gs
cmp
shlb
shr
mov
or
incb
es
loop
and
or
xchg
les
push
fistl
push
xchg
pop
shr
cwtl
js
push
mov
pop
fcmovbe
push
fs
and
cmp
jnp
push
lods
xor
inc
mov
clc
orl
jmp
mov
add
or
mov
popf
divl
push
mov
xchg
inc
aaa
ret
out
mov
jle
int3
rcl
scas
mov
outsl
push
mov
pop
cmp
xor
jae
inc
dec
mov
mov
lret
imul
loopne
call
pop
arpl
xchg
mov
mov
and
push
nop
adc
inc
push
sbb
xor
cltd
dec
jp
inc
adc
in
out
jmp
out
push
popa
leave
mov
push
xchg
sbb
inc
ret
pop
inc
xchg
xchg
and
sahf
ret
daa
mov
mov
sbb
mov
hlt
insb
sub
stos
aam
rcll
loope
dec
sub
sub
or
adc
stc
and
inc
std
xchg
or
test
lock
les
inc
xor
dec
push
mov
xor
daa
psadbw
in
sbb
test
fisttpl
inc
xchg
push
xchg
adc
inc
push
test
pop
les
push
in
addr16
test
pop
xchg
bound
push
insb
test
xchg
dec
jecxz
test
loope
incb
inc
mov
incl
xchg
mov
pop
jl
fisubl
xlat
test
add
mov
lahf
adc
mov
add
subl
mov
leave
xchg
add
xchg
shrb
out
inc
xacquire
hlt
ss
mov
dec
out
es
and
pushf
loopne
push
mov
xchg
dec
push
movq
mov
mov
sbb
sbb
fstl
sbb
jmp
gs
aam
fldt
mov
popa
pop
addr16
and
add
aam
pop
stos
jno
movsb
out
in
dec
xor
clc
jae
or
pop
andl
inc
stc
fcmovu
ret
mov
inc
or
icebp
jae
decb
hlt
pop
movsb
jmp
mov
mov
and
lds
dec
jno
jo
out
cmpsl
mov
dec
xchg
out
inc
inc
loopne
stos
fucomi
in
hlt
ret
pop
mov
lret
arpl
inc
int3
add
push
xlat
outsb
and
insb
mov
pop
mov
and
aaa
mov
push
xchg
rclb
popf
sti
decb
xchg
leave
xchg
jbe
rclb
jbe
ja
mov
xor
sbb
jnp
push
or
insb
lret
dec
mov
fidivrs
and
pop
sti
mov
outsl
dec
ficoml
addb
insl
test
loope
pop
pop
xor
inc
repnz
sub
sbb
test
dec
fisubs
icebp
xchg
es
enter
in
inc
jecxz
sbb
ljmp
jp
push
ss
jl,pt
jnp
insb
sbb
push
jne
mov
repz
int3
fnstsw
dec
hlt
xor
test
loopne
fincstp
mov
stc
and
inc
pop
mov
arpl
divl
or
jno
andl
mov
fwait
into
xchg
imul
pop
lea
pop
in
xchg
mov
mov
int
mov
stos
push
jp
adc
xchg
push
pop
xor
out
gs
movsl
jbe
cltd
jnp
leave
je
and
fucomp
pusha
into
stos
mov
xor
negl
pop
cmp
mov
mov
ja
out
pusha
pop
xor
jp
or
sbb
out
sub
mov
sti
loope
dec
push
push
outsl
push
or
sub
jo
scas
icebp
pop
filds
test
cmp
jae
xchg
pop
ss
sbb
add
enter
out
lret
popl
xchg
mov
sub
add
xor
mov
push
xchg
call
sbb
cmc
mov
scas
xor
out
decb
ja
push
jbe
and
test
push
imul
aad
cmp
rorl
add
imul
sub
mov
cmp
mov
pop
mov
adc
enter
movsb
call
xor
mov
mov
add
push
adcl
pusha
shl
mov
mov
sahf
jmp
js
jbe
iret
jo
ds
movsl
mov
sbb
xchg
add
insb
jp
jo
lcall
or
jno
and
loop
stos
sub
sub
or
aaa
cli
lds
ror
jns
dec
jae
je
and
lcall
sbb
push
mov
iret
sti
testl
cmp
sbb
cmpsb
icebp
dec
ds
std
sub
loope
jle
dec
test
imul
jle
repz
ret
jl
jno
shlb
lea
sub
bound
addb
lahf
jno
shr
mov
movl
int
shlb
int3
jecxz
and
roll
inc
adc
stos
rclb
xor
mov
mov
test
or
rorb
sbb
pop
and
in
fcomps
call
das
iret
pop
xchg
sti
stos
sub
fwait
mulb
inc
cwtl
cmp
pop
mov
or
enter
mov
shlb
inc
repz
mov
push
mov
push
aaa
mov
stc
jne
xchg
aam
fldl
gs
add
imulb
rclb
iret
idivl
mov
bound
scas
sahf
aad
into
adc
stc
pop
je,pn
ja
and
push
mov
or
mov
out
mov
enter
sahf
xchg
repnz
iret
mov
fbstp
jmp
outsb
es
jbe
inc
imull
add
pop
xchg
lds
adc
jne
xchg
mov
ficomps
into
jg
mov
cmpsb
xchg
fcmovu
cli
in
jnp
aad
mov
pop
or
xor
shlb
mov
mov
insb
or
jl
pop
cld
pop
outsl
mov
lea
insb
add
shr
and
xor
xor
sbb
mov
jne
pop
cwtl
cmp
stos
sub
mov
mov
in
pop
fiaddl
inc
push
sub
ja
sbb
xchg
divb
hlt
into
enter
dec
jg
sbb
inc
je
fdivr
cmpb
inc
lods
mov
add
sub
mov
lock
pop
popf
neg
shlb
cltd
ljmp
xchg
jb
leave
cmpsb
pushl
or
mov
cmp
cmp
loop
mov
lret
scas
push
dec
repz
es
mov
sub
data16
cmpsb
lods
inc
mov
dec
mov
xor
mov
and
xchg
pop
xchg
stos
into
sub
inc
jne
mov
cmc
jae
mov
sahf
ret
shl
jecxz
pop
mov
xchg
push
out
notb
xor
xchg
cmp
mov
arpl
add
in
mov
and
mov
mov
jmp
adc
pop
inc
rorl
push
lcall
lcall
std
sub
lahf
lods
mov
cmp
cwtl
int
xlat
xlat
sahf
into
movsb
mov
ss
mov
xlat
jmp
gs
mov
je
sbb
add
test
popf
add
fbstp
sbb
arpl
into
aam
xchg
les
fs
lock
fucomi
cmp
push
mov
xchg
cmp
das
mov
ljmp
cmpsb
jbe
add
call
sub
mov
into
mov
dec
jge
mov
fnstenv
aas
mov
pop
adc
cltd
add
shrl
outsb
adc
iret
lock
adc
or
sbb
sbb
mov
sub
mov
push
xchg
jmp
cwtl
faddl
ret
push
ss
nop
mov
lds
out
push
inc
push
push
or
aaa
arpl
les
mov
sbb
aad
adc
xchg
lcall
fcmovnu
adc
in
outsl
mov
movsl
xchg
pop
push
push
int3
cmp
xchg
jge
push
add
and
or
mov
xor
iret
jo
sbbl
jecxz
fsubs
into
cltd
mov
ret
pop
mov
jno
dec
sbb
adc
sub
adc
inc
stc
jne
dec
fnstcw
and
pusha
out
andb
push
sub
push
push
aad
sub
inc
repz
scas
fwait
pop
mov
ror
mov
cld
sbb
mov
jb
xchg
sub
std
xchg
lods
jp
xor
add
stos
xor
ficompl
outsl
inc
mov
shl
and
xor
push
xchg
xchg
pop
push
add
mov
mov
fnstcw
dec
cwtl
es
mov
ret
out
std
pop
mov
icebp
imul
jo
xchg
cmpb
xor
xor
pusha
push
jns
jns
daa
test
cmc
test
mulb
cld
inc
icebp
mov
add
pop
push
addl
or
adc
xor
xchg
add
pop
xchg
ret
pop
shll
test
ja
lcall
xchg
push
pop
enter
mov
fdivrl
lods
jmp
dec
and
testb
stos
hlt
aaa
xchg
pop
pop
adc
sarl
dec
mov
inc
mov
pop
push
or
jnp
in
aam
mov
or
inc
mov
int
dec
jnp
cmpsb
in
xor
sbb
mov
dec
dec
add
in
mov
push
addr16
inc
popa
stos
lods
loope
int3
xchg
lods
or
mov
mov
out
cwtl
pop
out
test
aam
sar
and
add
xchg
movsb
and
nop
jmp
adc
aad
inc
cmp
scas
jg
push
enter
inc
fwait
mov
ds
add
lock
cmp
in
xchg
out
jg
mov
aad
or
fnsave
push
jecxz
push
stos
ja
mov
mov
pop
adc
push
mov
in
xor
das
xchg
and
leave
push
xor
rcl
insb
int
jno
sti
ja
cmp
pop
sbb
frstor
mov
jl
cld
out
test
jmp
push
test
sub
push
pop
jg
mov
cmp
jns
icebp
jnp
inc
inc
fnstsw
sbb
dec
fbld
std
shrl
pop
out
or
dec
ret
sahf
into
hlt
sub
push
fs
addr16
sbb
mov
lds
mov
jae
lahf
stos
lock
lcall
inc
xchg
movsl
je
outsb
subb
inc
les
push
sbb
push
push
or
and
lret
inc
sub
cmpsl
mov
sub
add
sbb
sub
dec
fwait
mov
or
adc
in
jb
test
jmp
clc
ljmp
or
enter
dec
push
cbtw
mov
call
dec
pop
jns
dec
fwait
int3
cwtl
cmp
cmp
lret
fidivrl
lock
enter
pop
jmp
xchg
xor
stos
popa
mov
imul
sbb
lods
cmp
test
adc
mov
sub
push
movsb
lds
stos
and
in
xor
sbb
fsubs
dec
sbb
jbe
lea
dec
sub
mov
rcl
mov
dec
daa
add
add
movsb
mov
inc
mov
ficoms
fcompl
xchg
and
xchg
adc
dec
push
xchg
sahf
xchg
push
and
jne
dec
out
js
ja
leave
dec
outsb
ds
inc
hlt
aaa
jp
jmp
add
dec
popa
push
add
xchg
pop
adc
mov
mov
ss
mov
scas
outsb
mov
outsl
and
adc
mov
mov
pop
mov
shrb
inc
push
add
lahf
jo
inc
xor
mov
inc
xchg
dec
or
xchg
movsl
arpl
or
movsb
mul
dec
inc
dec
and
mov
cmp
mov
adc
adc
fidivl
add
push
add
xchg
outsl
cli
add
push
sbb
sub
scas
pop
test
call
fs
jne
mov
or
stos
test
xor
sbb
xor
add
jo
cmp
orb
sarl
int3
mov
or
scas
out
inc
mov
mov
xor
ljmp
pop
pop
push
es
daa
mov
das
sub
out
sbb
jg
push
push
movsb
xchg
mov
sub
mov
push
push
sahf
or
inc
outsl
repnz
leave
add
jle
sbb
repz
popa
leave
adc
lods
jnp
mov
pusha
mov
dec
sbb
clc
mov
mov
xchg
push
aam
mov
sub
cmpsb
loopne
xchg
push
outsb
dec
ret
xor
js
mov
ljmp
inc
jmp
adc
xor
push
lret
inc
and
enter
lahf
into
cmp
cmp
xchg
push
cltd
nop
call
inc
cmp
mov
and
repnz
insl
call
add
push
push
es
push
push
stc
in
data16
je
das
mov
pop
and
push
scas
cwtl
aad
cwtl
jns
jecxz
mov
mov
pop
pop
pop
dec
cli
pop
mov
iret
adc
mov
xor
test
int3
push
into
loop
xchg
je
and
jge
mov
dec
dec
jne
push
rcrl
fisttps
ret
enter
lods
cmp
fisubl
jns
cmovnp
adc
add
push
jge
add
cmpl
repnz
jmp
dec
jns
jnp
cmp
ret
cwtl
test
cmp
lea
lcall
or
or
test
push
orl
orl
inc
lret
popf
pop
sbb
dec
fwait
cld
test
pushl
jnp
push
mov
xor
add
adc
out
push
fidivs
js
pop
cmpl
movsl
mov
or
dec
scas
pop
dec
fcoms
push
dec
mov
test
rcll
jae
cmp
mov
loop
lods
ljmp
pop
inc
stos
sahf
stos
daa
jmp
shlb
add
xor
jle
leave
js
sbb
push
xchg
out
das
shlb
jb
dec
sbb
in
fidivl
clc
adc
pop
fisubrl
hlt
int3
sub
out
aad
vpminsw
repz
adc
xchg
pop
lods
fcomps
fsts
lods
shll
cwtl
add
loope
test
push
aas
add
xchg
rcr
fisttpl
sbb
test
mov
leave
inc
mov
cmp
and
jmp
lods
xchg
push
xchg
frstor
bound
cld
dec
add
xchg
adc
movsl
inc
inc
test
shrb
fstl
out
push
aam
stos
movsl
fimuls
mov
mov
mov
cmc
cmpsb
or
xor
inc
sbb
mov
and
outsb
mov
mov
push
leave
mov
xlat
ja
or
test
sub
std
fldcw
jb
mov
cmpsl
repnz
shll
mov
sbb
cmpsb
les
cwtl
dec
andl
and
stc
push
repnz
loopne
pushf
and
in
adc
pop
fisttpll
mul
sahf
or
fisttpll
shl
mov
jbe
out
in
or
pop
sub
add
add
pop
jle
lea
sahf
push
addr16
pop
sbb
jns
les
cld
dec
or
dec
jb
xchg
scas
xor
into
cli
xor
insl
ret
das
dec
popf
dec
mov
sahf
mov
pop
cltd
into
mov
jnp
sahf
mov
push
lcall
in
sbb
loopne
jle
mov
std
out
push
push
jmp
mov
movsb
mov
decb
je
dec
std
ss
cmpsl
xchg
inc
insl
inc
repz
cld
inc
jmp
fiadds
add
ret
mov
inc
pop
or
jae
inc
sub
test
addl
cltd
inc
cmpsb
cmp
xchg
das
dec
add
mov
loopne
lret
sbb
ja
add
jne
rolb
jmp
lods
enter
out
dec
dec
movsl
negl
popa
repz
mov
inc
fbld
push
cli
sbb
push
lds
sub
fists
inc
flds
push
mov
aas
imul
adc
int3
andnps
jg
or
mov
dec
push
push
push
mov
adc
in
es
sub
stos
rcr
inc
enter
loopne
ljmp
out
je
mov
dec
push
shll
stc
cltd
inc
cmpsl
sbb
das
adc
fstps
out
mov
sub
and
xchg
cmp
sahf
mov
mov
clc
js
and
adc
aam
les
push
jge
push
imul
xor
mov
lret
jge
pop
movsl
cmc
mov
stc
rolb
push
cmp
mov
or
xor
cld
jecxz
imul
cmp
bound
int3
dec
in
sbb
jecxz
add
scas
out
es
aam
pop
ret
xchg
push
fcoms
test
or
jg
pop
into
push
scas
push
in
inc
jmp
pop
or
mov
sahf
cmp
or
repnz
ret
call
negl
sti
xlat
sbb
or
cmpsl
mov
xor
out
and
sarb
stc
lock
jbe
dec
inc
sub
push
outsl
and
lahf
outsl
int3
xchg
popa
inc
pop
int3
jle
sbb
pop
push
stos
mov
mov
scas
sub
mov
and
fwait
xor
pushf
and
bnd
mov
xchg
and
and
das
addl
fcmove
repz
imul
push
jb
cmp
mov
stc
mov
data16
fistl
mov
mov
sbb
rcr
out
idivb
daa
ret
stos
nop
dec
push
sbb
push
cmpsb
ret
xchg
scas
inc
loope
leave
mov
in
mov
jle
fistl
cs
jle
pop
xchg
arpl
adc
inc
nopl
add
jp
addr16
fisttps
andps
push
lds
outsl
int3
pop
andl
stc
jns
mov
lock
xchg
mov
nop
mov
or
shll
loopne
inc
repz
dec
add
jle
xchg
mov
in
stc
lcall
push
aad
rolb
pop
cli
into
fsubr
pushf
add
jecxz
cmpsb
stos
jnp
fisubrl
xchg
inc
mov
mov
mov
dec
lock
xchg
ds
xor
repnz
or
popa
pusha
push
fmul
dec
outsb
xor
pusha
filds
cmp
aas
pop
jno
lods
mov
cmc
cwtl
mov
out
movsb
pop
mov
pushf
jo
cmpsb
lock
stos
bound
inc
fsubr
dec
add
lahf
mov
int3
mov
aam
in
aaa
add
mov
mov
push
mov
push
aad
lods
push
adc
sbb
out
je
repz
lds
call
push
lahf
sbb
loopne
sarl
les
sti
stc
in
aad
sbb
and
cmp
add
xchg
inc
xor
mov
fisubrl
push
or
es
rcrl
cld
adc
lea
pushf
or
push
nop
cli
and
idivl
push
sbb
push
pop
lods
inc
stos
outsb
mov
mov
imul
stos
sbb
pop
mov
test
push
push
mov
and
jge
mov
add
loopne
inc
arpl
xor
adc
call
xchg
inc
jae
xlat
jbe
fmuls
pop
dec
xlat
cli
pop
je,pn
ficomps
sahf
ss
sub
js
addr16
movsb
adc
je
in
jno
add
outsb
jne
jno
fstpl
add
jp
lds
sub
fimull
pop
push
lret
jmp
adcl
lea
mov
sbb
xor
mov
xchg
fst
cmp
les
lods
xor
mov
faddl
out
rcll
aad
xchg
jl
andb
sbb
and
enter
push
or
adc
jne
sub
ljmp
int
sub
out
repz
add
dec
aad
pop
loopne
call
pop
jle
negb
leave
jge
lahf
enter
mov
ja
into
dec
add
xchg
lcall
repnz
icebp
aam
imul
mov
xor
movsl
push
sub
bound
jb
xor
xchg
scas
sub
out
or
jb
xchg
add
aaa
pop
stos
clc
and
leave
pop
pop
sbb
jge
into
push
fnsave
sbb
mov
call
push
sub
inc
sub
cmp
loope
test
mov
in
xchg
adc
mov
push
cmp
push
fwait
int3
inc
push
nop
dec
cmp
xchg
mov
movsl
imulb
add
mov
imul
clc
or
lcall
pop
mov
imul
jge
and
push
mov
cli
and
xor
cmp
roll
cmp
xchg
mov
and
mov
cmp
and
pop
roll
test
push
lods
pop
adc
pop
aad
lock
inc
mov
sub
mov
rorl
xchg
push
arpl
addr16
repz
adc
push
pusha
pop
mov
mov
adc
add
sbb
sbb
mov
lock
inc
cmp
mov
adc
test
js
push
rcr
dec
imul
fdivr
xor
addr16
mov
lds
fldt
ret
adcl
mov
dec
push
jbe
cli
ret
aas
call
sbb
sub
fs
addb
or
mov
insb
ds
push
mov
aas
in
pop
jmp
mov
ret
and
mov
out
jb
pop
pop
sub
sarl
movb
or
lret
scas
xchg
pop
les
or
xchg
orl
enter
mov
pop
loop
nop
and
lock
ja
or
lea
dec
cmp
xor
shlb
lea
and
cmpsl
aam
push
dec
cmp
dec
sub
adc
and
fsts
sahf
pusha
jnp
icebp
pusha
sbb
mov
sti
cwtl
push
sub
sub
xchg
dec
shll
stos
loop
dec
sbb
dec
or
mov
sti
jg
iret
loopne
shr
psubsb
aaa
jle
jl
aad
leave
add
mov
hlt
pop
or
mov
cmc
xor
ret
test
push
negb
leave
addr16
lret
mov
pop
or
loope
int3
add
test
call
mov
dec
das
mov
push
stc
jns
js
out
scas
dec
and
add
mov
loop
pop
jl
pop
loop
mov
or
xor
cmp
imul
ja
popf
in
xor
sub
xor
int3
nop
dec
out
mov
and
dec
push
mov
jg
in
mov
sub
in
cmc
mov
mov
in
sub
xchg
adc
lods
movsb
jge
or
jg
jmp
pushf
out
imul
pop
cmp
cmp
imul
mov
inc
mov
pop
push
lcall
jo
dec
cmc
inc
sbb
js
mov
push
lods
cmp
outsl
test
in
mov
js
mov
jg
call
inc
xchg
dec
std
cmp
sbb
loop
jg
rcll
lret
cmp
ret
adc
push
sub
icebp
and
imul
inc
in
das
outsb
inc
sub
pop
xchg
movsb
lcall
cmpsl
cwtl
inc
push
cwtl
push
cmp
push
outsb
loopne
sbb
rcrl
push
pop
mov
bt
nop
push
cli
ljmp
inc
stos
pop
inc
outsl
gs
test
fdivrl
xchg
pop
dec
add
mov
icebp
into
pop
icebp
ret
or
push
push
pop
dec
std
hlt
jl
and
mov
mov
ret
mov
inc
cmp
dec
dec
imul
adc
push
xor
cmp
aaa
ret
insl
sub
sbb
pop
icebp
ss
sbb
test
dec
stos
aaa
cs
mov
dec
das
jno
xchg
sub
mov
cmc
jb
rcrb
sbb
decl
pop
add
dec
add
or
aas
dec
dec
and
sub
subb
pop
pop
xchg
dec
mov
gs
inc
sarl
push
and
xorl
sub
or
add
imul
arpl
sub
mov
repnz
or
jns
cmpsb
int3
jae
or
mov
mov
in
mov
lret
xlat
imul
ljmp
or
cmpsb
jmp
or
jp
dec
sub
test
mov
mov
shrl
pop
fnstenv
or
in
mov
pop
repnz
scas
negl
pop
pop
jbe
jp
xchg
mov
cmc
add
adc
repz
daa
and
push
mov
adc
pop
sub
outsb
add
pop
xchg
jne
pop
pop
cs
ja
into
pop
daa
cmp
ss
ret
push
fadd
lcall
jno
push
inc
inc
lahf
fbstp
mov
sbb
pusha
jb
ljmp
pop
jge
mov
lahf
dec
xor
lods
call
pop
test
push
mov
icebp
les
sbb
in
mov
lcall
pop
xor
int3
and
ss
rorl
add
or
lea
shll
adc
stos
add
out
jae
pop
dec
insl
mov
ficompl
and
fildl
xchg
fstpt
in
jo
pop
mov
pop
xchg
aas
popf
push
mov
insl
in
and
add
fwait
loopne
hlt
jmp
xor
bound
push
jle
roll
ja
cli
sub
xchg
mov
orb
jp
add
shl
inc
dec
mov
lock
mov
xchg
flds
ds
rcrl
mov
test
dec
lock
addr16
mov
rorb
pop
lods
jae
pop
scas
and
int
adc
pop
outsl
fwait
cwtl
stos
stc
dec
mov
push
ds
add
inc
push
shll
jg
out
inc
jecxz
lahf
cmp
call
fisttpl
adc
adc
dec
mov
jbe
sar
jge
or
arpl
sub
fldl
fidivrl
cmp
ja
sub
adc
cmp
es
dec
mov
int
cmp
pop
inc
mov
xchg
arpl
jecxz
mov
rcrb
call
pop
adc
xor
fwait
adc
aad
and
subl
xlat
and
or
inc
cs
addr16
mov
aam
and
pop
sub
xchg
or
jg
ja
notb
pop
sub
xor
pop
sub
mov
iret
lock
sbb
cmpsl
sahf
sbbb
test
shrl
xor
mov
sub
aaa
loopne
pop
cs
or
mov
xchg
sbb
aaa
lret
aas
fistpll
rclb
insb
push
loopne
and
mov
xchg
test
mov
fwait
loopne
mov
cmp
rcrb
pushl
jmp
lcall
mov
cmp
pop
mov
sub
add
test
pop
data16
sbb
push
imul
test
or
cmp
sub
fmul
mov
jle
test
dec
sbb
pop
xor
repz
inc
dec
cli
add
cli
or
loop
inc
aad
xchg
pushf
cmp
cmp
pop
stos
adc
int3
je
orl
push
jae
stc
cmpsl
pop
sbb
mov
mov
aam
dec
pop
sub
popa
inc
push
and
aaa
add
jae
and
and
adc
mov
or
pop
ds
xor
dec
xchg
std
xor
outsb
dec
cmc
cmp
inc
add
jle
int3
xchg
lret
push
xor
out
orb
test
scas
jnp
and
adc
test
aaa
sbb
jb
sub
dec
andl
out
xor
push
lds
orl
xor
popf
jo
mov
mov
and
int3
loopne
ljmp
aam
es
aad
push
bound
mov
sub
mov
push
scas
add
mov
sbb
or
hlt
mov
data16
mov
mov
lea
lock
movsl
inc
fidivrl
fs
sbb
or
jge
adc
sbb
lret
nop
aad
pop
call
aas
daa
ficompl
scas
add
dec
jbe
ss
pop
xorl
icebp
out
jno
loope
cltd
mov
xchg
in
pop
nop
pop
fwait
je
test
cmp
and
pop
inc
jmp
aaa
push
ljmp
aas
scas
sar
out
jp
pop
ljmp
data16
jb
sub
sbb
adc
mov
or
loopne
in
jecxz
jae
pop
push
pop
dec
js
jns
repnz
mov
mov
pop
inc
out
or
enter
fwait
push
xchg
icebp
mov
jg
pop
pop
mov
jb
xor
dec
pop
jnp
push
push
iret
ds
icebp
stos
xor
pop
xor
in
xchg
movb
jl
out
xor
mov
jl
and
outsb
ljmp
insb
xlat
adc
lahf
sub
rorl
xor
mov
inc
pop
or
movsl
adc
jmp
sti
adc
mov
pop
imul
fldcw
mov
and
movsb
loopne
mov
sub
and
aam
lea
shlb
xchg
dec
call
adc
push
fmull
push
mov
aaa
or
int3
cmp
shlb
xor
inc
insl
push
inc
les
and
fimuls
adc
not
mov
das
cmp
sub
out
lock
or
add
sub
jg
xchg
pop
fsubrp
lahf
dec
rclb
in
mov
jecxz
and
hlt
add
rcll
fwait
cwtl
repnz
mov
ret
add
push
lahf
sarl
lcall
data16
mov
mov
mov
and
jp
fmull
les
inc
mov
and
push
dec
jo
movsl
popf
fisttpll
mov
jmp
mov
push
mov
mov
call
out
jecxz
mov
jp
mov
xchg
ja
sahf
jno
xchg
and
cmp
test
and
addr16
adc
fldl
xchg
sbb
in
repnz
xorl
icebp
mov
jl
xor
test
testl
ud2
out
repnz
push
cli
xor
cs
hlt
int3
fcompl
ljmp
fcoms
dec
stc
mov
inc
jmp
pop
inc
push
adc
in
xor
xor
mov
push
ret
cld
xchg
xor
jae
cld
sbb
sahf
mov
stc
repz
ret
inc
pop
mov
mov
cmp
mov
sti
lds
adc
mov
insb
xchg
insb
dec
in
shrl
jnp
cmp
mov
idivl
mov
mov
std
pop
or
sub
jae
dec
add
repnz
cmp
stc
mov
clc
sti
mov
cs
dec
lcall
out
call
int3
or
addr16
jnp
js
add
loope
and
and
out
or
mov
and
or
gs
pop
cmpsl
dec
xchg
les
pop
lods
popa
add
sbb
and
iret
sub
cmp
leave
bound
out
cmp
sbb
sbbl
jne
es
push
dec
push
sbb
mov
in
dec
mov
mov
js
in
push
push
aaa
mov
loop
dec
in
sub
fs
clc
stos
push
ds
and
mov
aam
test
mov
outsb
xor
es
lret
mov
add
frstor
dec
jp
pop
sbb
test
add
loope
pop
enter
mov
js
add
in
outsl
adcb
push
rol
or
mov
cmp
inc
sub
shlb
sahf
mov
repnz
into
arpl
cmpsl
dec
and
jno
test
lock
out
and
and
push
insb
in
inc
push
mov
sti
clc
fbld
mov
aaa
out
mov
xor
xor
popa
mov
add
inc
push
push
jle
cltd
xor
sbb
xchg
mov
and
xlat
cs
xchg
mov
stos
xchg
mov
jns
mov
lock
jns
add
cmp
cmc
cmp
adc
mov
roll
jno
out
mov
pop
mov
int
lret
lock
inc
inc
xchg
add
bswap
cmpsl
dec
stos
bound
cmc
and
pop
xchg
cmp
leave
sbb
and
pop
sub
addr16
mov
mov
cli
fidivrs
or
ret
std
sbb
dec
sahf
ss
jne
push
sub
outsl
mov
mov
popa
or
pusha
mov
push
ror
jb
mov
ret
mov
faddp
in
loop
imul
mov
push
in
or
mov
cmp
push
sti
fwait
jl
pushf
sub
insb
fdivp
mov
fsubrl
shl
fbld
nop
movb
mov
inc
sub
mov
repz
and
icebp
sub
out
xlat
imul
xchg
jmp
addb
cwtl
jne
or
mov
test
loop
outsb
into
xchg
mov
mov
pop
movsb
stc
push
imul
pop
mov
or
fildl
lods
gs
rorl
test
shrl
and
jns
mov
push
arpl
mov
outsl
xlat
cli
inc
mov
jl
dec
inc
dec
xor
es
out
dec
add
cmp
sub
inc
lods
loopne
outsl
inc
outsl
push
cmp
inc
mov
pop
push
ljmp
imul
shrd
dec
lcall
cli
or
cmp
cmp
mov
inc
roll
mov
orb
fdivl
lods
orl
mov
inc
push
jnp
out
adcb
mov
jbe
pop
pop
adc
mov
jecxz
scas
das
xor
fldcw
adc
jecxz
sbb
sar
mov
jecxz
rdpmc
fdivrl
push
popa
cmp
stos
or
dec
jb
dec
add
inc
js
fstpl
xlat
jb
fs
shll
push
movl
mov
pop
in
enter
out
les
mov
sbb
rcrb
pop
loope
into
sahf
jmp
orl
push
dec
lock
dec
push
outsl
jg
imul
out
pop
jle
inc
push
stos
loop
xor
xor
lret
mov
ret
dec
shl
dec
pushl
cmp
sarl
shl
scas
xor
repz
fcoms
pop
aaa
xor
lods
mov
push
mov
xchg
into
stc
loope
filds
push
je
fsubr
adc
sar
push
sbb
jp
and
incb
and
jae
mov
mov
jo
test
or
dec
mov
lea
fmuls
xor
lret
jae
cmp
test
xchg
iret
mov
fisttpl
pop
jg
inc
add
push
insb
lahf
jbe
jnp
test
stc
insb
in
jge
call
dec
shll
pop
add
adc
inc
pop
xor
mov
inc
insl
sub
cmp
jge
xor
cmp
lret
or
sti
inc
jecxz
add
rclb
push
jge
and
pop
or
jecxz
jbe
dec
sbb
xor
lods
das
push
mov
pop
aas
cmc
fiaddl
pop
movsb
sbb
les
inc
and
fldcw
sbb
xor
jno
ds
ss
hlt
adc
adc
add
cs
lods
nop
cmp
inc
inc
repnz
adc
ja
loope
pop
xlat
dec
mov
aaa
test
xchg
out
dec
xor
pop
es
mov
rcrl
stos
data16
push
andl
mov
sub
pushf
or
sub
push
and
mov
fstps
and
xchg
xor
daa
sbb
xor
dec
mov
std
sub
jg
bnd
js
xchg
jns
fsubrl
js
sbb
pop
jae
inc
cmp
mov
fstp
jmp
dec
sbb
lret
jno
stos
outsb
cmpsb
inc
out
xchg
fwait
pop
adc
pop
lods
xchg
ret
loope
movsb
nop
cmp
jno
imul
pop
cmp
scas
cs
or
mov
and
hlt
jge
data16
into
popa
loopne
inc
sbb
enter
cmp
subb
add
and
jl
jae
movsl
mov
sub
fstpl
xor
push
cs
cmp
test
shll
ss
push
das
xchg
lahf
subb
or
jne
sbb
bound
ljmp
pusha
mov
pop
dec
jp
jo
pop
outsb
and
add
mov
clc
je
xlat
push
cli
cld
jmp
xchg
lods
cli
sbb
fnstcw
lods
xorl
lock
xchg
jo
push
in
imul
inc
enter
adc
sbb
sub
push
cmp
out
push
push
lea
add
sub
cmp
jbe
in
outsl
xchg
dec
jb
hlt
stc
adc
stos
mov
in
push
fmull
push
test
jo
jb
ret
jno
mov
pop
orb
push
sub
clc
test
jecxz
sahf
pop
push
mov
push
adc
scas
push
imul
mov
adc
add
or
adc
dec
stc
cmp
pop
lahf
rol
orb
mov
mov
out
or
mov
out
movsl
pop
pop
cmp
sbb
add
adc
cwtl
push
mov
fsubs
xor
lcall
pop
mov
jmp
cmc
je
adc
adc
sub
mov
fldenv
inc
and
push
pop
fildl
insl
sti
andb
movsb
mov
cmp
rclb
js
or
test
test
xchg
lahf
mov
mov
cmc
lods
pminsw
in
cli
pop
aas
add
jb
pop
adc
pop
mov
movsbl
mov
pop
add
mov
in
mov
sub
xchg
mov
fs
xor
xchg
stc
pusha
fsubrs
fildll
imul
out
jge
mov
xchg
or
leave
xchg
and
jae
in
cmp
les
inc
xchg
jle
and
push
mov
adc
cmpsl
idivb
cmc
enter
popa
pop
and
aad
pop
int
movsb
test
jo
shrl
and
in
and
xchg
push
loop
subl
imul
int3
pop
adc
mov
jb
pop
lret
cli
and
adc
ljmp
push
mov
aas
test
jge
out
mov
movsb
sbb
jp
cwtl
ljmp
push
pop
mov
popf
jbe
push
push
sbb
or
dec
outsl
cmc
cld
or
sub
cmp
push
lods
sbb
push
dec
sbb
mov
shrl
shlb
aam
cmp
add
sub
and
sub
daa
inc
test
or
xor
jge
icebp
popf
ja
or
jmp
rcr
xchg
pop
mov
loop
xchg
aad
das
push
inc
or
test
hlt
fisttps
add
pop
pop
into
xor
xchg
fsts
test
call
test
lret
sti
fwait
mov
xor
inc
xor
push
or
test
in
out
and
cmpb
insl
sub
dec
xor
pop
mov
es
adc
jnp
jmp
mov
lret
mov
shrl
push
dec
mov
dec
jbe
adc
add
push
adc
loopne
stc
test
add
mov
ss
ljmp
mov
mov
mov
movsb
and
cmp
insb
inc
movsl
mov
in
pop
sahf
adc
adcl
int
stos
ret
mov
cmp
lret
mov
or
lea
mov
mov
sub
enter
jo
cli
pop
mov
ljmp
rcrb
cld
push
dec
icebp
pop
pop
add
adc
stos
mov
aam
ret
mov
out
pop
pop
gs
cmpl
cmc
xor
jge
adc
iret
lret
jo
outsl
fs
int3
jae
pop
push
stc
lods
inc
lret
lcall
arpl
imul
loopne
sbb
cmp
out
fs
pop
nop
iret
sahf
fldcw
cltd
lds
jnp
mov
fistpl
adc
repz
add
lds
cmovne
adc
mov
xchg
stc
push
mov
nop
or
cmpsl
inc
std
cmp
das
and
sbb
jp
popa
inc
movsb
lods
test
notl
fisttpl
shrb
xor
or
test
cli
jo
xchg
pop
nop
fstl
mov
rcrb
sub
cmp
sbb
or
cwtl
mov
mov
dec
fisubl
mov
jl
mov
rol
outsb
xor
jo
jne
jno
push
dec
cwtl
ficoml
and
iret
nop
add
jno
inc
sbb
jmp
xorb
add
and
shlb
dec
xor
test
addl
movsb
adc
push
test
sub
push
out
pop
test
lods
mov
add
and
and
push
stos
mov
adcb
std
call
arpl
pusha
or
mov
pop
xchg
movsl
idivl
xchg
sbb
test
aad
jecxz
adc
fstp
add
adc
inc
dec
xor
xor
jae
pop
mov
jl
stos
rcl
jecxz
jae
in
cmp
ret
jp
dec
mov
lahf
loop
xchg
jb
mov
in
cmp
add
pushf
loopne
lahf
outsb
cmpl
movsl
jg
mov
clc
ficompl
repnz
pop
lcall
and
rorl
arpl
inc
cmc
cmp
out
das
iret
or
aas
fidivrs
insl
push
push
dec
and
fnsave
lahf
aam
or
jns
jl
hlt
ret
out
loop
fsubs
out
mov
es
lea
sbb
fcmovu
data16
or
mov
sbb
inc
lods
xor
pop
fdivs
out
inc
sub
adc
lret
test
scas
jno
add
leave
adc
jnp
adc
dec
ja
mov
sub
dec
mov
push
jno
xchg
jno
add
or
jns
scas
int
xchg
xchg
ret
shrb
out
inc
loopne
cmc
test
mov
push
push
xor
faddl
gs
pop
inc
fucomp
push
in
xchg
xchg
dec
push
sub
sahf
and
outsb
fnstsw
jne
dec
aad
sbb
xchg
sbb
loope
xchg
jbe
xor
mov
push
inc
pop
sarl
mov
stos
les
dec
dec
mov
rclb
shll
xchg
leave
pop
push
and
sub
sub
adc
inc
mov
in
outsl
jb
cmp
adc
pop
xor
test
xorl
push
adc
dec
mov
shl
mov
outsl
arpl
loope
daa
and
out
lods
cmp
or
dec
mov
or
sbb
jns
mov
outsl
add
ss
jg
push
cmp
mov
ja
mov
andl
jno
xchg
add
ficomps
arpl
rcll
and
add
mov
and
xor
mov
mov
mov
xchg
push
out
and
mov
cwtl
inc
adcl
rcr
jne
stos
cwtl
dec
cmp
jb
mov
push
sahf
shlb
xor
inc
fcompl
pop
aam
iret
or
fidivrl
insb
pop
incl
fidivrs
or
push
mov
sbb
jmp
jae
mov
push
push
push
aam
sbb
insb
jmp
and
sbb
in
inc
out
int
mov
adc
fcmovbe
ja
dec
movsl
cli
mov
sub
mov
popa
mov
mov
icebp
call
bound
and
xchg
push
xchg
andb
dec
daa
jnp
jmp
inc
push
iret
rorl
inc
test
xchg
xchg
das
test
adc
pop
lods
outsb
movsb
push
popf
cmp
lock
je
adc
ja
xchg
push
outsb
stc
data16
cld
addr16
cli
ret
outsb
mov
andb
jg
sbb
inc
leave
adc
add
inc
inc
adc
insb
jmp
imul
aaa
jne
jg
repz
push
out
sbb
stos
adc
sbb
gs
das
std
mov
in
in
aad
push
cmp
mov
js
push
jecxz
lods
or
inc
adc
decb
stc
movsl
int3
int3
mov
xor
pushf
mov
mov
stos
rol
es
xchg
adc
fldt
aaa
cmp
xchg
push
push
arpl
jge
fildl
dec
push
or
scas
imul
jne
lea
js
je
add
call
lret
lea
cs
xor
imul
dec
jne
xchg
xchg
lahf
ret
clc
lret
or
out
adc
and
push
hlt
sbb
gs
in
sub
ljmp
popl
push
adc
icebp
xor
imul
jmp
mov
and
sbb
jo
inc
cwtl
mov
mov
mov
sbb
jnp
xchg
xchg
shrb
jbe
pop
dec
lods
pop
out
ret
insb
movsl
jb
imul
mov
lret
fxam
dec
sbb
ret
fisubs
dec
lods
cmpb
or
mov
push
lods
test
shll
iret
scas
icebp
repz
dec
dec
les
lods
pop
shl
mov
jmp
xchg
int
adc
leave
ds
adc
push
cmp
or
movsl
dec
dec
out
and
hlt
hlt
jmp
cmpsb
jle
xlat
in
sbb
xor
lea
adc
jae
lds
xlat
in
mov
je
push
xor
mov
ja
adcb
pop
mov
les
or
push
jecxz
shll
inc
jns
push
inc
icebp
aas
mov
sub
mov
xor
pop
xchg
xor
stos
lret
fcmovnbe
inc
fdivr
or
adc
xor
or
add
push
inc
pusha
adc
int
shll
push
cmp
pusha
cmc
mov
rcll
mulb
and
push
leave
sbbb
insb
jbe
dec
bound
push
and
mov
les
xchg
imul
sahf
jge
enter
lea
sbbl
arpl
push
lds
in
out
lret
lcall
cld
adc
out
push
shll
cmp
ret
xor
dec
test
push
lahf
push
rcll
mov
mov
jne
js
fwait
pop
push
mov
insl
cltd
pop
inc
inc
mov
jnp
ja
in
pop
xchg
push
jns
in
adc
inc
cmc
mov
dec
xchg
les
icebp
xchg
jb
fs
pop
fcmovne
add
cmp
cwtl
int3
jl
arpl
pop
mov
xchg
clc
lea
mov
mov
fcomip
inc
sbb
push
add
jmp
into
aas
pop
mov
popa
sbb
cmp
mov
stos
inc
xchg
xchg
shr
push
pushf
aad
test
fistl
pop
scas
loopne
jb
fldenv
push
pop
lcall
sub
cwtl
and
les
add
out
mov
cltd
mov
fbstp
inc
stos
incb
jge
cmc
packssdw
hlt
jg
out
lahf
pop
mov
inc
push
pop
mov
mov
inc
mov
lods
cmpsb
sub
xchg
and
jecxz
inc
mov
in
repz
aaa
inc
and
jp
mov
mov
popf
test
loopne
hlt
add
out
inc
insb
sbb
push
fisubrs
rcrl
jbe
data16
ss
mov
out
lcall
inc
repz
into
xchg
into
push
aam
cmpsl
jl
adc
push
cmc
inc
shlb
dec
add
or
mov
mov
rcrl
fsubl
adcl
ljmp
inc
sti
pop
add
leave
jb
xchg
mov
div
cmp
aas
jne
add
add
dec
mov
fistpl
mov
and
jge
fsubp
loop
imul
ret
jecxz
fsts
mov
lock
mov
sbb
mov
dec
test
jo
inc
xchg
xor
mov
fistpl
or
adc
jmp
xchg
or
sub
mov
and
fmuls
into
shll
cmp
cli
lcall
lret
sahf
cltd
jns
popa
cltd
jb
negl
leave
cmp
lahf
mov
lahf
xor
ret
jne
test
cwtl
jmp
and
addr16
lret
sbb
mov
push
xor
add
jo
ds
fnstsw
stc
jmp
repnz
inc
enter
cmp
xor
push
sbb
push
cmpsb
mov
stos
or
or
hlt
sbb
inc
mov
int3
jmp
mov
xor
inc
jno
xor
subl
xchg
or
and
cmpb
ljmp
fwait
push
push
and
cmc
add
sbb
dec
add
push
jae
lods
icebp
ficomps
cmp
pop
jecxz
movsl
push
les
jmp
mov
popf
jae
xor
mov
ret
sti
cs
mov
jo
inc
int3
mov
sub
dec
push
in
ret
cmp
je
dec
mov
es
pop
xorb
jle
add
and
xchg
xchg
sbb
stos
jecxz
jl
mov
mov
lds
repz
aad
sti
push
sub
cmp
xchg
lods
push
ret
ja
sbbb
add
arpl
ret
movsb
lea
inc
mov
lcall
adc
mov
mov
sbb
mov
or
sbb
lock
push
inc
push
push
mov
mov
fldcw
mov
enter
jb
ja
shlb
xchg
xchg
lsl
pop
jg
inc
and
pop
jp
aaa
out
dec
mov
insl
push
xchg
shll
js
xchg
lret
and
fmull
mov
push
in
fistpll
mov
icebp
loopne
insb
push
movsb
add
mov
lahf
enter
jbe
xchg
nop
mov
and
ret
cld
or
nop
enter
pop
sbb
rorl
sub
testb
hlt
clc
lcall
sub
out
mov
dec
mov
jbe
dec
xchg
add
xchg
xchg
inc
sbb
mov
cmpl
lods
mov
loope
jl
jno
pop
mov
mov
in
je
inc
insb
and
rol
aas
push
dec
add
adc
cld
ficompl
xchg
and
in
and
jg
mov
cmp
push
jmp
stc
xchg
pop
test
cmp
pop
dec
fcoms
xor
mov
sub
pop
test
inc
out
clc
loopne
imul
das
push
dec
mov
push
xor
inc
aam
sub
dec
imul
and
mov
pop
sub
mov
cli
jb
or
into
mov
sbb
and
dec
jnp
mov
push
mov
push
mov
jnp
divl
out
jae
icebp
leave
push
and
or
xchg
cmp
lret
dec
vinsertps
sub
dec
adc
xor
add
iret
add
inc
aas
test
mov
mov
jb
mov
loopne
int
push
inc
jp
lock
nop
insl
iret
xchg
das
sub
outsl
cs
adc
push
and
mov
out
cmp
push
adc
mov
push
and
jle
enterw
sub
loopne
sbb
cmp
hlt
pop
or
or
xor
pop
stc
sbb
cmpl
pop
cmpsb
outsl
es
jne
into
mov
test
push
xchg
test
ja
adcl
mov
imul
dec
pop
aam
sbb
mov
repnz
pusha
sbb
cmpsl
push
jle
cmp
jge
fmuls
cltd
lds
test
cmp
in
clc
mov
loopne
xor
lods
push
xchg
repnz
cmp
pusha
cld
push
mov
mov
loope
or
xchg
fldl
inc
sub
fadd
hlt
jp
inc
push
xor
add
jmp
or
pop
dec
fcompl
and
mov
jge
scas
sbb
scas
loope
pop
inc
pxor
out
cltd
add
mov
roll
cmp
iret
lds
xor
add
cmc
inc
mov
sub
jb
xchg
adc
clc
mov
clc
inc
dec
lahf
push
add
inc
xor
subl
out
cltd
dec
aaa
ret
pop
sbb
xchg
sbb
subb
inc
cmp
push
mov
outsl
pop
cmc
dec
repnz
push
jmp
in
jno
mov
in
xchg
add
mov
jp
push
lcall
dec
out
push
std
daa
mov
xor
pop
sub
inc
jbe
mov
push
fwait
add
imul
insb
add
pop
add
push
je
or
jmp
push
pop
mov
fidivrl
in
and
repz
mov
sbb
aam
rcrb
cmp
sti
mov
mov
push
hlt
or
sbb
fldcw
test
loope
shrb
inc
out
gs
fisubrl
into
and
pop
sahf
adc
xlat
xchg
pop
add
cs
mov
fdiv
jnp
pop
rolb
sub
ds
enter
ficomps
mov
push
xor
dec
dec
adc
outsb
cmp
data16
push
sahf
js
adc
add
pop
cli
pop
in
shlb
cs
xchg
fbstp
mov
pusha
cli
xchg
add
out
mov
stos
xchg
test
push
jbe
addr16
and
icebp
loop
mov
cmc
arpl
insb
inc
mov
movsb
rclb
inc
add
in
fcomps
cmp
sub
and
and
push
xlat
xor
pusha
xchg
sub
xchg
inc
shlb
lods
iret
and
ds
into
jecxz
cmpl
add
cmpsb
out
push
lret
scas
ret
out
int
ret
and
or
mov
dec
push
test
nop
dec
outsb
and
add
pushf
sbb
sub
enter
pop
or
pushf
out
mov
stc
les
aam
callw
mov
je
adc
scas
xchg
and
pop
sub
popa
xchg
mov
popf
pop
lods
cmovl
add
mov
xchg
sbb
sbb
cmp
addr16
push
hlt
jmp
jmp
push
fdivl
insb
jl
pop
mov
out
mov
push
push
fnstenv
mov
push
movhps
loope
jg
popa
gs
add
cwtl
sub
lcall
xchg
mov
pop
pop
mov
mov
cmp
mov
push
cmp
in
popa
sbb
in
rcll
pop
xchg
rcr
push
xor
pop
sbbl
lcall
jg
adc
scas
dec
out
mov
mov
aaa
outsl
xchg
out
loopne
loop
enter
aaa
jg
cli
aas
cs
xchg
jmp
out
xchg
out
and
mov
mov
cli
sbb
cmpsl
cmc
dec
pop
rcll
daa
xchg
addb
jns
xor
lods
insl
ja
sbb
jo
mov
sub
pusha
sub
push
jmp
adc
aam
jg
add
cmp
mov
mov
cmp
ret
add
fbld
mov
jle
iret
imul
outsb
push
cltd
ljmp
xchg
data16
stc
repz
mov
and
adc
cmp
mov
stos
stos
insl
sub
fwait
nop
and
test
adc
repnz
pop
xor
std
inc
inc
push
jmp
mov
div
xchg
mov
shrb
xorl
cmp
sbb
adc
xor
mov
add
sbb
pop
ja
nopl
jle
add
popa
arpl
jo
pusha
gs
push
xchg
inc
pusha
pop
and
mov
lea
add
sbb
xchg
mov
out
xchg
adc
lcall
lret
ss
dec
cli
mov
push
push
andl
xchg
movsb
xor
xor
fdivl
and
je
jmp
and
scas
cmp
push
adc
push
push
loop
add
movsl
fwait
addr16
xchg
mov
addr16
pop
or
pop
add
jge
pop
rol
int3
push
pusha
xchg
pop
fsubrs
test
pop
inc
es
dec
fsub
xor
add
jmp
push
imul
stc
or
hlt
into
dec
push
sbb
scas
movsb
mov
and
jmp
cltd
sub
or
pop
or
inc
mov
sbb
fcomip
jo
cmpsl
rcr
ja
dec
repz
mov
outsb
xor
and
les
jne
cltd
mov
xchg
push
adc
in
mov
sbb
mov
xchg
lahf
sub
sub
mov
mov
fisubs
stos
scas
dec
repnz
or
mov
adc
or
cmp
sbb
or
cmp
es
and
cmova
mov
jo
sbb
insl
dec
movsb
mov
push
arpl
iret
xchg
xchg
lds
sbb
jnp
ret
js
iret
lods
ds
fisubl
and
cmp
aam
fldlg2
cmp
pop
leave
xchg
cld
xlat
loop
imul
in
popf
sbb
add
adc
pop
dec
sbb
mov
and
repnz
xchg
and
leave
pop
dec
mov
mov
dec
je
out
sbb
sub
cmp
and
andl
push
adc
les
es
std
cmp
inc
test
add
imul
jmp
mov
inc
push
arpl
mov
add
xchg
pop
xlat
loop,pt
add
mov
outsb
psrlq
inc
pop
sarb
test
dec
jnp
pop
dec
mull
loop
push
add
jae
inc
rclb
rcrl
mov
stos
call
ljmp
mov
mov
int3
mov
stc
mov
mov
adc
and
and
or
mov
dec
xchg
leave
sbb
sub
stos
xchg
ss
adc
out
and
aas
sub
or
inc
scas
mov
jb
enter
das
and
popf
adc
mov
mov
jg
pop
int
or
mov
loope
fs
sbb
pop
enter
add
push
mov
mov
ret
fcmovb
mov
ror
rolb
cmp
mov
gs
xchg
ss
out
mov
sub
scas
and
sub
xchg
jns
xchg
clc
xor
xor
mov
mov
inc
jae
mov
cmpl
in
mov
inc
pop
cmc
mov
pop
cmpsl
iret
dec
mov
dec
ficomps
fdiv
push
push
xlat
loopne
adc
and
subb
mov
or
xchg
mov
cmp
jle
push
shlb
ljmp
out
data16
cmp
roll
xchg
lds
fstpt
testb
xor
push
stos
jg
jbe
pop
push
into
lea
or
and
data16
negb
mov
pusha
jmp
insb
pop
push
popf
fisttpll
ror
repz
sbb
sub
inc
or
mov
xchg
dec
jns
dec
cmc
inc
fsubr
lahf
sbb
lahf
xchg
repnz
dec
mov
sub
jecxz
mov
jecxz
add
pop
sbb
xor
xor
daa
imul
je
mov
sub
test
mov
push
popf
ss
int
aas
mov
aas
xchg
cmp
lcall
xor
jbe
xor
push
sarb
into
aam
xor
bound
mov
mov
loope
sub
xchg
mov
aaa
push
mov
iret
call
fbstp
fs
sbbl
inc
mov
scas
mov
cmpsl
xchg
xchg
out
dec
in
repz
in
xchg
sub
pop
ret
sbb
adc
and
jnp
popf
fistpl
aas
inc
mov
pop
iret
test
sub
mov
pop
pop
sub
push
xor
jo
mov
xchg
mov
dec
lds
mov
out
cwtl
lods
dec
jbe
pop
add
xor
std
add
pop
xchg
mov
inc
cmp
push
fdivs
dec
xorb
pop
imul
cmp
push
shlb
lret
popa
pop
push
mov
or
mov
iret
xchg
push
push
in
mov
fisubrs
mov
jmp
stos
jnp
sub
jg,pn
scas
ficoml
inc
les
sub
and
sub
aad
sbb
push
xlat
dec
jo
pop
jmp
push
dec
cli
and
adc
scas
cs
movsb
mov
imulb
xchg
xchg
popf
dec
pushl
sahf
pop
mov
lds
js
loop
jo
int3
sub
ret
stos
sub
leave
adc
pop
sub
cs
loop
dec
mov
jmp
adc
add
pop
clc
pop
inc
mov
dec
dec
mov
std
loop
into
push
and
stc
outsl
push
out
testb
ds
ljmp
xchg
xor
or
and
pop
adc
mov
jl
mov
movsb
push
leave
pop
stos
mov
jge
repnz
add
xchg
sbb
movsb
sarl
sbbl
repnz
mov
jl
aas
stos
out
rcl
popf
fcom
lock
sbbb
mov
mov
lret
jp
mov
mov
cli
xor
dec
xchg
sbbl
orl
dec
xor
test
mov
arpl
fdivrl
je
outsl
jo
test
daa
xor
pop
adc
pushf
xchg
fwait
dec
jl
push
into
repnz
or
cmpsb
int3
lods
nop
repnz
pop
pop
fimull
imul
ds
cmc
sbb
pop
dec
nop
jo
call
mov
xor
cltd
frstor
movb
mov
mov
out
push
ljmp
out
cs
jae
aad
clc
enter
and
pop
mov
sub
ror
sub
pop
jb
mov
dec
stos
loope
sub
shr
add
dec
and
push
inc
lds
in
pop
std
push
gs
xchg
dec
dec
shlb
stos
add
mov
push
xor
and
call
xchg
pop
test
mov
push
cmpsl
sbb
jle
popa
fwait
rcll
jecxz
mov
in
sub
dec
popf
sub
xlat
add
divl
jae
dec
push
mov
dec
rolb
dec
mov
cmp
or
sub
dec
sbb
outsl
dec
xchg
mov
xchg
sbb
lcall
data16
dec
add
pushf
mov
adc
jl
and
out
xchg
rol
and
aas
ficomps
jbe
pusha
loope
mov
cli
mov
dec
and
cmp
sub
daa
xor
or
pop
jno
gs
jecxz
inc
or
fildll
add
or
push
mov
sub
inc
xchg
dec
sub
loop
dec
test
stos
cmp
ds
test
or
or
imul
int3
and
out
mov
adc
lock
scas
mov
xchg
addb
mov
paddsb
lcall
bound
in
jne
push
popa
cmpsl
mov
push
mov
ficompl
out
lods
lea
cmpsl
mov
inc
je
dec
aad
push
sub
mov
out
pushf
shl
cmp
mov
push
insl
jbe
lea
pop
add
aad
push
aas
mull
rolb
lcall
inc
addb
cmc
icebp
adc
adc
faddl
cwtl
jle
mov
enter
lcall
xor
cmpsl
fdivrs
inc
adc
jp
mov
mov
and
add
mov
call
push
repnz
arpl
hlt
xor
pushf
fwait
jno
mov
popf
jl
lret
clc
xor
and
mov
mov
test
lock
adc
mov
fstl
pop
sahf
lds
ljmp
movsl
jecxz
push
sbb
lods
or
loope
inc
pushf
addr16
call
mov
data16
lds
scas
into
loopne
into
clc
mov
pop
xorl
push
jge
fisttpl
loopne
push
xchg
adc
mov
and
sub
push
adc
into
and
sahf
cmpl
mov
push
sub
dec
xchg
lods
js
xchg
ror
fadd
dec
imul
dec
adc
sahf
jno
push
mov
jg
xchg
sub
and
adc
lret
out
loope
iret
cmp
rcr
push
fxch
jle
repz
xchg
mov
int
loope
cld
cwtl
inc
mov
sbbl
insb
out
fwait
je
in
outsl
and
push
inc
insl
jecxz
in
popa
xor
add
mov
mov
daa
add
add
fsubrl
dec
xchg
push
push
jns
push
mov
mov
addb
push
aad
or
shl
sbb
cmp
imul
inc
scas
rcll
idivb
into
ds
loope
test
xchg
xlat
xchg
lods
sub
and
or
mov
mov
in
xor
sbb
push
ja,pn
sub
shll
mov
sub
lock
fwait
pop
es
jl
and
js
lcall
push
fimuls
mov
sbb
daa
insb
jbe
xor
scas
sub
cmp
or
sub
cmpsl
adc
pop
in
pop
loopne
pusha
xchg
cmp
cwtl
sbb
fisttpll
cmc
dec
mov
xchg
lret
fnstsw
ret
std
pop
sub
dec
pushf
dec
hlt
sub
push
test
in
sbb
divl
inc
sub
jo
sub
int3
test
sub
adc
movsl
mov
xor
inc
leave
xor
or
xchg
xchg
mov
mov
jge
stos
adc
add
jg
lret
cmc
int
orb
lahf
loope
jl
fbstp
push
dec
lods
jecxz
das
fwait
pop
test
adc
cmp
mov
xor
jle
xchg
jmp
inc
lret
or
lods
and
jmp
test
popa
fsubrl
fisubs
jp
xor
jb
mulb
and
xor
lods
outsb
lcall
push
jns
cld
push
icebp
inc
addl
mov
sbb
das
jb
fs
call
pop
jne
mov
cli
inc
shl
sti
nop
ret
sti
sub
xchg
pop
out
sub
and
movsl
mov
icebp
inc
jp
dec
movsl
clc
sahf
push
cmp
cmpsb
int3
pop
mov
test
insb
pop
push
and
xor
xchg
mov
lcall
dec
pop
fcoml
cmp
adc
call
push
inc
sahf
stc
movsb
and
sbb
dec
mov
cltd
out
xchg
and
jns
jl
orb
push
push
lods
push
mov
jecxz
daa
xchg
dec
push
icebp
popw
dec
lds
jmp
push
mov
je
mov
mov
bndldx
mov
dec
cmpsl
push
insl
mov
mov
arpl
xchg
popa
pop
adc
lods
pop
ret
das
adc
daa
xchg
popf
jl
sbb
mov
rorl
jl
test
add
lock
pushf
rolb
and
int3
shll
xchg
sub
aad
stos
in
sub
push
push
adc
jb
iret
adc
add
out
push
jmp
jp
cmp
xchg
xorb
cmp
mov
jb
pop
pop
clc
leave
iret
add
inc
dec
mov
repz
mov
stos
mov
bound
loopne
test
mov
cld
lock
sbb
sub
push
jo
insb
out
in
loop
es
insb
mov
inc
pop
mov
cvtdq2ps
lds
xor
in
imul
scas
rcll
iret
loopne
mov
sbb
mov
sti
jno
mov
push
subb
xor
stc
dec
in
mov
sub
call
mov
jnp
pop
rorb
jno
inc
sti
clc
jo
imul
push
mov
shlb
xlat
cli
in
and
push
out
pushl
adc
jbe
leave
int
pop
xlat
inc
jecxz
mov
or
sub
mov
fwait
sbb
inc
mov
push
movsb
add
shr
adc
and
sti
or
cltd
push
sahf
lods
inc
rol
ret
loope
data16
inc
adc
pop
xchg
or
cmp
cwtl
xor
cmc
into
xchg
cmp
out
imul
and
nop
push
stc
test
dec
dec
push
nop
stos
pusha
popa
jl
mov
cli
mov
xchg
ret
imul
cmpb
lret
ficomps
neg
adc
cmp
stos
aam
jmp
pop
adc
or
test
jmp
xor
xor
or
mov
dec
testb
ret
filds
and
int
iret
out
test
push
dec
lahf
xlat
pop
stos
jae
xchg
add
jns
test
pop
lods
xor
mov
sti
xchg
mov
sbb
mov
xchg
sbb
decl
out
add
rcrb
adc
fcoms
incl
fistl
arpl
fisubl
iret
fldcw
sub
hlt
push
les
outsl
sbb
mov
xor
pop
in
jns
lods
rorl
andb
jb
xor
cmpsl
ljmp
and
and
dec
add
out
sub
cmp
std
icebp
fbld
push
mov
lea
idivb
cmp
mov
lods
xchg
rcrb
xchg
push
lar
fwait
mov
xchg
imul
xor
mov
jmp
sbb
movswl
and
test
pop
lock
fdiv
gs
addl
in
xchg
test
mov
pusha
dec
and
ret
and
push
filds
icebp
xchg
mov
je
fdivl
sbb
xchg
jle
dec
jge
int3
xor
add
jno
pop
sbb
ljmp
xchg
jnp
rcr
pop
mov
fdivrs
lret
in
dec
lds
sbb
fwait
dec
mov
cmp
dec
in
gs
mov
mov
loope
inc
add
dec
mov
sti
leave
adc
push
ljmp
daa
mov
jnp
in
push
dec
test
in
lahf
repnz
push
arpl
ljmp
fwait
jne
and
jl
ljmp
jp,pt
outsl
imul
test
add
pop
in
mov
adc
xlat
in
scas
cmp
mov
in
mov
add
push
inc
mov
push
dec
push
add
push
cmc
sarl
dec
adcb
ss
int
xor
adc
dec
dec
xchg
mov
jo
mov
dec
or
cmp
inc
in
lahf
cli
jle
outsl
push
icebp
bound
sub
jecxz
mov
ja
stos
mov
data16
xor
cmp
fcomi
cwtl
add
mov
sbb
addr16
mov
cmp
test
jns
mov
imul
pop
and
idivl
call
ss
cmp
xchg
xchg
popa
adc
push
pop
xchg
in
xchg
mov
fsubr
add
icebp
aas
pop
shlb
ljmp
mov
pop
mov
bound
jmp
je
lahf
dec
jbe
aad
jmp
sbb
jae
jp
lret
push
mov
pop
add
in
lret
mov
or
mov
ja
xchg
sub
stos
push
dec
test
stos
sbb
sahf
xchg
push
xchg
mov
shr
lds
outsb
mov
outsl
fs
cmp
or
mov
or
sub
lods
mov
dec
pop
pushf
loope
arpl
mov
and
pop
cs
cmpsb
popf
daa
jne
push
adc
mov
sahf
add
loope
popa
cld
push
and
ret
push
jecxz
daa
loop
mov
imul
gs
imulb
out
xchg
dec
xor
push
incb
mov
mov
xor
push
xor
shll
fmull
pop
sti
xlat
xor
pop
add
test
mov
andl
in
mov
dec
test
aaa
sub
sbb
test
arpl
push
adcb
adc
lods
inc
jmp
mov
inc
inc
fmuls
jns
dec
mov
sarb
arpl
lcall
repnz
pushl
mov
pop
test
dec
sahf
mov
cli
sub
and
mov
sub
jns
mov
sbb
repnz
pop
xchg
mov
xchg
adc
bound
cmpsb
mov
or
lds
sbb
jo
sbb
loopne
pand
loopne
call
sbb
mov
jge
and
mov
sub
and
xchg
cmp
out
shrb
mov
or
inc
lret
inc
pop
ds
sbb
pop
in
rcl
jbe
cmp
xlat
clc
cmp
daa
sbb
mov
xor
xor
adc
push
nop
test
decl
addr16
aaa
scas
fiadds
xchg
mov
push
or
fwait
sbb
sbb
cmpsl
push
jae
repnz
mov
iret
pop
add
out
xchg
adc
dec
pop
mov
into
inc
fidivrl
sahf
stc
and
dec
mov
or
mov
mov
gs
push
jge
dec
in
out
adc
test
stos
xor
cmovge
adc
jae
ret
jae
aaa
lock
mov
loope
or
aam
cmp
movsl
xchg
mov
add
outsl
cmp
mov
aas
add
ja
sbb
test
test
push
mov
xchg
cmpl
jl
jl
cli
cmp
sub
jb
xchg
cmp
mov
push
cmpsb
inc
xchg
adc
jbe
and
or
pop
inc
scas
aas
in
dec
mov
sbbb
cmc
jne
dec
add
stc
std
dec
test
cld
bound
cmp
pop
add
and
pop
dec
in
xchg
int3
in
pop
sbb
stos
xchg
sbb
sbb
cmpsb
loop
das
pop
loop
lea
cmpsb
stos
pop
imul
and
mov
add
fwait
xor
arpl
pcmpgtd
loop
daa
imul
cli
sbb
jo
jge
not
cmp
test
add
outsb
push
hlt
sbb
sbb
frstor
mov
daa
shll
cli
fidivrl
lods
pop
cltd
mov
dec
jge
fucomip
ret
repnz
jge
pop
dec
inc
xchg
cli
xchg
je
jo
jle
push
cmp
sbb
stc
sbbb
call
call
outsl
sub
xor
rcrl
les
dec
orl
into
pop
icebp
sarb
or
in
mov
repz
xchg
sbb
loop
jno
xchg
mov
jb
mov
cwtl
xchg
insb
and
mov
fs
mov
sbb
push
roll
into
xchg
and
gs
push
add
in
stc
insb
mov
mov
sub
cwtl
push
iret
push
das
push
xor
popa
mov
inc
cmpsb
mov
jo
ljmp
lret
mov
jecxz
push
in
into
stc
adc
add
xchg
and
dec
aam
sub
sub
cmp
fsub
push
sti
or
push
hlt
insb
call
mov
ret
fisubs
cltd
imul
dec
push
adc
scas
test
shlb
int3
ja
sub
jl
fucom
add
out
cld
testl
add
pop
xor
and
clc
imul
movsl
sub
pop
dec
push
jge
flds
jecxz
xchg
mov
cmp
mov
xchg
mov
shlb
js
push
fwait
insl
jo
mov
sti
mov
mov
stos
dec
pop
repz
lea
add
pop
movsb
hlt
cli
xchg
scas
or
sbb
insb
fadds
cmc
hlt
mov
enter
stos
in
adc
push
popa
sti
sub
lock
sub
xchg
inc
in
pop
lahf
repz
mov
das
lods
loopne
outsl
ss
repz
imul
dec
xor
mov
dec
dec
cmp
mov
scas
movsb
int3
mov
mov
jo
fs
repnz
mov
in
into
cmpsb
pop
jmp
test
mov
jbe
xorb
in
aam
stos
ret
in
cwtl
call
push
mov
xchg
mov
pop
mov
jo
cwtl
mov
gs
bound
movsl
xor
shl
cmp
dec
push
mov
sbb
cltd
popa
jle
cltd
es
or
xchg
push
jno
fwait
jns
cs
aad
push
and
xchg
adc
pop
mov
orb
hlt
repnz
pop
push
out
je
mov
mov
xchg
bound
nop
cmp
adc
jmp
mov
pusha
xchg
inc
fisttpl
mov
hlt
xchg
lods
xchg
std
dec
repz
mov
shll
mov
xor
inc
outsb
stc
cmp
jns
ljmp
icebp
jnp
adc
push
jmp
jae
mov
add
mov
pop
faddp
adc
cld
les
adc
sub
hlt
fs
loopne
xor
pop
pop
aad
dec
dec
xor
movsb
ljmp
lret
int
in
sti
stc
pop
pop
jecxz
stos
xlat
mov
icebp
sub
and
sbb
push
lods
aad
pop
push
aad
lahf
sub
test
jnp
mov
lock
scas
mov
inc
push
js
add
or
xchg
and
xlat
repnz
push
add
fbld
aaa
sti
add
dec
sub
and
push
xchg
xor
pushf
mov
mov
mov
or
sbbb
inc
xchg
push
pop
pop
std
push
sti
mov
pcmpgtb
inc
frstor
sahf
shlb
scas
popa
out
dec
adc
out
fsubp
or
mov
pop
punpckhdq
dec
pop
inc
mov
loop
test
cwtl
mov
add
gs
lret
fbstp
ljmp
and
mov
leave
mov
xchg
dec
inc
add
mov
push
xchg
sbb
rcr
rol
fists
push
xor
cmp
rcr
mov
pop
xchg
fisttps
loopne
int
push
push
adc
cltd
xchg
out
jae,pt
pop
test
nop
lods
dec
call
notl
cmpsb
mov
rcl
fmuls
ja
mov
or
call
jg
push
jns
mov
lea
int
ret
fidivrs
mov
je
das
notl
sbb
dec
sbb
inc
ljmp
jmp
ret
jnp
or
inc
sahf
add
mov
repnz
test
insl
scas
das
sahf
jne
jns
fcmovnbe
and
test
jp
pop
movsl
ljmp
push
fwait
lcall
ficoms
jae
std
cmp
loop
jns
inc
inc
ret
int3
movsl
rolb
insb
lods
mov
lahf
lods
and
stos
dec
flds
push
jns
arpl
cmpsl
mov
lea
popf
mov
in
push
jl
sbbl
sahf
add
or
out
fnsave
xchg
jns
sbb
sub
push
loop
jno
mov
dec
lcall
add
or
and
imul
jo
mov
xchg
jecxz
inc
jle
jmp
mov
icebp
fsubs
lret
hlt
movsb
sbb
jo
aaa
es
mov
ret
jmp
xor
and
test
adc
xor
jle
or
loopne
test
clc
repnz
cmp
jno
or
scas
je
pop
dec
in
adc
sbb
and
xlat
pushf
push
dec
inc
lret
out
sahf
jg
xor
xor
adcl
inc
xor
in
loopew
and
lods
repnz
aas
cmp
cmp
imul
jae
lock
pop
push
mov
pop
insb
icebp
sub
aam
dec
add
test
cmp
pop
xor
pop
in
xor
xchg
sub
inc
mov
adc
sub
inc
cmp
mov
aam
decb
jnp
cmpsl
mov
cwtl
std
pop
push
mov
loope
mov
out
dec
jnp
push
dec
sub
pop
add
outsb
mov
lret
js
stc
pusha
xchg
inc
rorl
sub
call
pop
xor
insb
dec
rcrb
pop
cmp
ficoms
xchg
jns
in
out
cwtl
loopne
push
add
sub
fsubrs
pushf
jp
aad
pop
adc
mov
adc
sub
add
imul
and
push
movsl
jecxz
mov
and
stc
ret
mov
ja
inc
adc
sub
push
movsl
mov
push
rclb
xchg
shll
std
scas
adc
test
xor
pop
int
add
fnsave
iret
xchg
out
aas
jno
mov
xor
xchg
mov
sub
mov
push
xchg
cmp
xchg
xchg
and
pop
pop
or
mov
rclb
xchg
sbb
jp
jecxz
mov
jg
mov
mov
dec
adc
shrb
push
sub
into
orb
insl
sbb
sbb
rcr
cld
cmp
aas
out
loop
inc
or
les
jg
or
or
xchg
mov
bound
or
lcall
pop
xorb
sarl
mulb
adc
jb
outsl
ret
xchg
cmp
xor
test
sub
aad
pushf
xor
jne
jnp
fldcw
jecxz
xchg
mov
fcompl
mov
fs
mov
cmpsl
in
mov
adc
insb
and
dec
repnz
js
dec
jmp
cltd
inc
jle
sub
out
in
sahf
xchg
scas
xchg
or
in
jae
clc
push
in
push
fnstsw
push
nop
xor
push
jns
aas
mov
pop
icebp
inc
xchg
xor
mov
test
mov
adc
out
jb
sti
xor
outsb
sub
jle
in
push
mov
push
inc
stc
add
loope
jl
jae
push
sbb
add
jbe
pop
pop
rorl
sub
fidivrl
xchg
jnp
dec
mov
adc
scas
jmp
dec
xchg
dec
scas
pusha
xor
sbb
push
addr16
int3
out
mov
inc
loop
push
test
mov
ja
das
movsl
leave
call
inc
cmc
dec
sbb
inc
push
push
jmp
lods
pop
in
ds
loop
jno
ss
jae
push
cmpl
push
sub
je
lcall
push
mov
fcoms
jnp
jae
insb
mov
mov
xor
test
popa
mov
in
bound
xor
sbb
xor
add
outsl
or
das
repnz
hlt
loop
arpl
pop
jmp
cmp
mov
ror
in
add
popa
out
or
inc
ret
mov
adc
mov
out
add
mov
nop
addr16
xor
popf
pop
mov
rcll
jbe
lea
and
pop
sub
push
jle
out
shlb
outsb
xor
stos
inc
dec
dec
test
aad
ret
mov
arpl
jae
and
jge
ljmp
jp,pn
xlat
and
sbbl
sub
dec
arpl
pushf
xchg
pop
ja
or
lods
adc
add
nop
cs
rorb
mov
jge
jecxz
dec
jecxz
outsb
daa
in
xor
shrl
bound
inc
imull
scas
aam
test
and
jg
ja
xor
andl
dec
xor
data16
repnz
sti
cli
lcall
mov
sbb
dec
mov
lcall
xchg
nop
icebp
jbe
jp
adc
push
call
stos
lods
popf
ds
in
xlat
daa
mov
lock
push
sarl
into
iret
cltd
push
adc
rol
call
sbb
adc
mov
cmp
mov
jmp
cmp
pop
pop
shrl
xchg
cmp
clc
push
frstor
and
adc
sbb
dec
mov
data16
xchg
mov
scas
loop
dec
js
dec
and
and
xchg
and
repz
or
insb
fs
pop
js
mov
mov
add
push
and
in
pop
sbb
sbb
or
cmp
and
ja
testl
pop
cmp
rcrl
sti
mov
dec
sbb
cli
jp
test
mov
test
sub
mov
mov
pop
mov
adcb
in
in
pop
or
and
lea
jle
push
js
sahf
jb
cmp
push
pop
icebp
push
out
mov
xor
xlat
inc
jns
fstpt
leave
adc
push
or
lret
loope
cmp
and
xor
test
pop
and
aad
inc
and
cmpsb
add
lds
enter
xor
inc
pop
fidivl
lret
in
mov
pop
mov
test
rorl
out
xor
sbb
mov
add
pop
mov
js
adc
mov
cmpsb
mov
fmulp
sub
push
inc
mov
in
sub
push
xor
mov
in
cld
cmp
call
or
repz
bound
xchg
add
push
aad
sub
shlb
dec
mov
mov
in
adc
in
sub
outsl
stos
jns
xor
imull
test
pop
leave
dec
jmp
xchg
push
movsb
sbb
leave
jmp
daa
fxtract
cmp
jle
rolb
lods
shr
and
iret
cmc
xchg
inc
xchg
inc
xchg
out
ss
sarb
add
adc
pop
stos
xor
mov
xchg
shlb
cmpsb
cmp
cmp
push
outsb
insl
xor
cmp
shll
cwtl
aad
call
filds
mov
scas
stos
xchg
pop
sbb
jns
or
leave
rol
jmp
jl
or
cmp
add
push
adc
sub
scas
pop
stc
xchg
insl
cmpsb
inc
lea
inc
xchg
jl
jae
push
sbb
jo
je
sub
adcb
xchg
icebp
sbb
adc
dec
jmp
jmp
dec
into
imul
ss
or
inc
cmp
inc
jg
fdivrs
scas
and
test
lods
cltd
mov
out
adc
adc
pop
sub
popf
or
add
add
pop
fnstcw
shlb
das
ljmp
push
in
push
sub
pusha
insl
push
fsubrl
roll
jno
mov
std
jmp
lea
or
or
loop
outsb
rclb
or
sahf
sahf
fcmovnu
pop
ljmp
jmp
mov
inc
lods
add
aad
mov
jae
sbb
xchg
mov
std
lret
mov
popf
enter
push
imul
into
stc
lret
adc
xchg
outsb
popf
xorl
dec
dec
inc
rclb
push
movsb
xchg
lret
jmp
lock
dec
cmp
ljmp
add
dec
iret
rorl
into
rorb
scas
mov
aaa
mov
out
xor
call
jnp
hlt
and
xchg
sbb
test
push
xor
stos
push
test
fbstp
inc
jno
movsl
jge
inc
rcll
cmpsb
pop
jg
inc
sti
adc
push
sbbl
mov
xchg
pop
or
lret
pop
loopne
and
inc
icebp
xchg
pushf
leave
xchg
mov
ds
inc
aas
out
xchg
decb
mov
shrb
jecxz
sbb
shll
not
mov
mov
lret
cs
pop
add
adc
adc
push
lcall
dec
sub
jge
xor
and
push
jbe
popf
push
add
pop
jb
sbb
xchg
int3
shrb
sbb
adc
pop
cwtl
sahf
xlat
stos
sbb
pop
stc
ret
shll
sub
stos
movsl
jae
ret
enter
loopne,pt
aas
sbbb
jle
lds
cli
cmp
cmp
add
pop
daa
notb
push
in
cmp
mov
xor
lds
and
mov
repnz
push
jmp
mov
lret
sahf
aad
lods
cld
sbb
inc
test
aam
pop
scas
leave
mov
cli
cmp
lahf
out
mov
add
sub
fdivr
iret
push
or
jnp
and
lret
mov
lahf
ljmp
mov
xchg
fwait
andb
repz
add
or
orb
sti
add
adc
jno
push
rcl
ss
cmp
cmp
jnp
in
sbb
in
xchg
int
pop
dec
xchg
and
add
xor
int
jmp
cmp
jbe
mov
out
jno
out
js
popa
sbb
lods
test
or
xor
dec
int3
jo
jg
out
and
insl
xchg
stos
cwtl
aas
sbb
cld
arpl
mov
push
bound
or
dec
mov
int
idivb
cmp
call
add
pop
xchg
dec
push
cld
mov
lret
fildl
adc
xchg
or
mov
fiadds
subl
sub
dec
dec
cmp
out
jecxz
sub
mov
dec
movsl
loope
mov
inc
rcll
jge
xor
pop
mov
xor
dec
push
popf
popa
int3
xchg
and
mov
popa
inc
xchg
or
sbb
aaa
lea
out
movsl
cli
inc
adc
or
adcb
loope
dec
sahf
test
and
das
xchg
es
andb
push
je
pop
mov
cmp
icebp
loopne
xor
movsl
sub
popa
aad
test
out
or
inc
push
lods
add
dec
xchg
jmp
fstl
dec
stc
addr16
dec
sbb
bsr
xor
xor
cwtl
xor
call
xchg
es
xor
fldt
add
xchg
pop
sbb
push
sbb
jle
or
aad
in
mov
addl
jo
sub
mov
mov
addr16
pop
push
sbb
mov
jno
lret
mov
push
rol
lods
or
pop
pop
lahf
mov
xor
dec
xchg
das
aam
xor
and
loope
and
arpl
cmp
mov
push
pop
sub
add
cmp
lret
add
stos
les
iret
jecxz
lock
adc
inc
addr16
cmp
pop
jg
das
jb
xor
sbb
loop
inc
jo
xlat
xchg
lea
nop
mov
pop
push
fildl
and
cwtl
adc
cmpsl
ret
out
nop
adc
push
lret
xchg
rorb
push
xchg
out
inc
push
adc
stos
push
test
into
popf
add
in
or
and
push
add
ficompl
imulb
in
inc
repz
out
lret
aam
adc
lret
mov
subl
faddp
clc
jb
mov
mov
rclb
sbb
aaa
add
mov
mov
loop
pop
repz
adcl
xor
js
iret
jb
xchg
mov
mov
dec
mov
sbb
cmp
lahf
or
push
push
cmp
or
sarb
pusha
cmpsb
cs
in
push
cmp
negl
in
nop
add
shlb
and
lock
mov
xor
repz
repnz
cmp
sub
jp
inc
cmp
or
bound
mov
pop
cmp
adc
push
pop
inc
aad
in
gs
scas
inc
jmp
and
std
pusha
mov
stos
inc
cmp
mov
cmp
out
mov
sbb
xlat
lret
bound
in
xchg
insl
mov
popa
and
dec
icebp
add
and
push
pop
xchg
mov
and
stos
loop
mov
stos
xor
daa
lcall
push
lahf
adc
jmp
lret
push
pop
pusha
cli
xchg
insb
out
adc
mov
imul
out
pop
cld
rcrl
outsb
or
pop
pop
xchg
xorl
mov
jg
imul
xlat
pop
fldt
ja
out
jmp
xchg
inc
repz
jne
push
dec
in
lahf
cltd
push
and
sub
push
lds
xchg
xchg
xor
add
pop
cli
dec
lock
imul
iret
movsb
das
inc
fldenv
fistl
cmp
psubsw
out
sbb
push
ds
sbb
push
je
add
subl
orl
and
and
fldenv
sbbb
dec
or
add
js
cli
mov
nop
jp
test
push
xchg
test
inc
mov
test
xor
es
lock
or
mov
mov
dec
mov
stos
mov
cmp
inc
mov
cmp
hlt
inc
iret
mov
ljmp
xorl
movsl
negb
cltd
mov
mov
add
pop
icebp
xor
and
xor
mov
data16
ss
xor
inc
sub
adc
movsb
or
adc
inc
mov
cwtl
xor
cmp
jb,pn
xchg
jge
mov
jno
mov
pop
or
mov
out
cmp
or
pop
push
lods
xchg
lahf
xchg
sub
lea
add
xchg
nop
mov
bound
repnz
jp
lret
and
stos
mov
fldlg2
lea
add
orb
outsb
or
test
push
arpl
inc
shlb
les
rcr
mov
cvttps2pi
leave
mov
insb
sub
push
mov
push
repnz
adcb
xchg
mov
ljmp
xor
or
cmp
aam
pusha
push
out
je
mov
loopne
addr16
ja
in
push
jae
push
mov
ret
and
xor
dec
jmp
inc
pop
stos
mov
adcl
dec
sbb
push
xchg
fs
mov
imul
cmp
mov
xchg
xchg
enter
adc
sub
xchg
dec
push
loop
inc
pcmpeqb
sub
mov
cmpsl
jnp
sbbl
test
mov
in
cwtl
enter
imul
in
add
or
mov
mov
data16
xchg
dec
push
testb
dec
sub
sbb
adc
xor
mov
clc
xchg
xchg
call
ret
add
add
in
push
or
in
push
aas
in
or
scas
mov
xor
das
sahf
mov
std
shlb
popf
adc
test
pop
adc
push
dec
stc
adc
std
jno
int3
cwtl
inc
jmp
mov
jne
cmp
pop
repnz
mov
test
pop
xchg
push
aam
jb
repnz
imul
cmc
mov
cs
lds
jnp
int3
adc
pop
sti
pop
stc
ret
add
pop
enter
push
fdivrs
push
jo
jbe
xchg
xchg
js
inc
test
in
insb
or
lret
dec
in
int3
xor
js
add
aaa
dec
bound
rorb
cmp
add
adcb
xchg
js
inc
push
mov
stos
es
pushl
lods
lahf
rorb
mov
push
test
adc
int
push
jle
or
add
daa
jne
in
stos
ljmp
push
push
dec
xchg
jmp
and
loope
aaa
push
adc
xchg
cmp
push
jmp
aaa
les
pop
loop
xchg
or
aad
outsl
cld
mov
js
das
push
adc
mov
dec
pop
loope
mov
sbb
test
and
insb
lea
add
cld
mov
insb
cltd
or
int3
xchg
clc
jbe
test
jo
or
or
xchg
mov
push
std
stc
insl
push
loop
cwtl
adc
je,pn
rolb
push
push
mov
mov
sub
fptan
in
add
xor
sahf
adc
int
nop
or
dec
imul
in
xchg
mov
sar
or
sbb
ss
mov
push
sub
daa
jp
aas
jecxz
mov
sbb
daa
gs
fsubrs
and
sbb
orl
insl
xchg
aam
fisubl
dec
ljmp
stc
inc
cli
dec
out
loop
push
push
sbb
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
adc
mov
and
loope
jb
and
sahf
pop
stc
xor
jmp
xor
int
jae
arpl
mov
shrb
mov
mov
fisttpll
mov
lcall
push
sub
mov
ds
fwait
jmp
cld
les
adc
adc
dec
cmpsl
adc
push
dec
out
mov
mov
mov
push
jo
sub
cmp
dec
cmp
inc
inc
hlt
mov
mov
pop
sub
xchg
xor
dec
or
push
js
ficoml
leave
adc
jbe
push
sbb
push
add
fcoml
out
jnp
xorl
fdivr
and
lret
cld
lock
repnz
outsb
pop
xchg
xor
and
push
das
shll
popa
push
jmp
stos
inc
outsl
add
orb
pop
jmp
xor
sahf
pop
cmpl
jecxz
sub
mov
out
add
rcll
jbe
jp
repnz
mov
ja
push
stos
adc
clc
scas
test
int
sub
lock
rcrb
scas
loop
dec
mov
mov
pop
shrb
repnz
push
stos
sub
nop
dec
fildl
add
add
add
add
add
add
mov
add
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
sub
mov
outsb
