push
mov
push
push
mov
xor
sub
mov
and
cmp
mov
jne
sub
jmp
xor
roll
inc
mov
inc
cmp
jb
xor
pop
inc
pop
pop
ret
push
mov
sub
push
push
push
call
mov
push
push
push
push
push
push
push
call
add
cmp
jne
mov
mov
movl
jmp
mov
sub
mov
mov
and
mov
mov
imul
mov
mov
mov
push
mov
mov
call
pop
cmp
je
mov
mov
shr
mov
shl
or
mov
mov
mov
jmp
lea
push
push
push
pushl
call
lea
push
pushl
call
mov
push
pop
sub
mov
mov
imul
mov
mov
mov
cmpl
jne
mov
mov
mov
add
mov
push
call
push
call
pop
leave
ret
int3
cmpsb
xchg
sbb
int3
int3
int3
int3
int3
int3
int3
scas
xorl
mov
stos
add
ljmp
sub
xchg
sub
xor
xor
bnd
xor
int
add
mov
fimull
xchg
btc
outsb
scas
xchg
les
je
mulb
or
or
in
push
mov
shlb
cmp
adc
push
sub
dec
push
adc
nopl
movsl
aas
sbb
inc
loopne
faddl
sbb
js
pusha
or
jecxz
cld
movsl
add
fs
or
pop
lahf
cmp
mov
loope
cld
sbb
popf
mov
and
scas
mov
cmp
cmpsb
sub
sub
stos
jl
push
xchg
and
lcall
xchg
jp
jge
ficomps
loopne
loope
popf
dec
outsb
aad
xor
in
lret
ja
mov
js
sub
nop
enter
loopne
and
out
mov
int3
mov
fsubl
fcmovne
scas
aaa
xchg
sbb
mov
pop
imul
rcrb
insl
xor
mov
arpl
push
idivb
sbb
or
out
aam
insl
jne
cmp
lret
ljmp
fnstsw
add
cmp
pop
lahf
jle
mov
push
loope
cmpsb
test
mov
inc
movsl
insb
sbb
inc
and
adc
orb
pop
mov
lods
jne
daa
jecxz
ficomps
outsb
push
and
xchg
push
mull
push
xchg
das
mov
mov
data16
out
ljmp
insl
push
pop
arpl
push
cmp
adc
loope
jl
stos
push
ja
add
lock
fidivrs
xchg
xor
enter
xchg
fcmovnu
ficomps
adc
sbb
imul
adc
jg,pn
jae
mov
in
out
lods
jmp
or
arpl
add
ljmp
xchg
pop
inc
xor
testl
cmpsb
add
popa
ret
gs
mov
andl
std
mov
push
cmovo
cltd
mov
aad
lcall
sbb
xor
cmpsl
jmp
loope
or
jg
les
lea
lret
and
fstpl
mov
imul
out
testl
incl
int3
pop
pop
sub
inc
es
mov
lds
jnp
mov
mov
mov
lret
adc
pop
fstp
hlt
and
lds
xchg
scas
std
and
xor
jno
mov
loope
inc
dec
dec
and
les
and
push
ljmp
imul
dec
lcall
aad
sub
mov
mov
or
xorb
lret
cwtl
xorl
arpl
jae
mov
mov
cs
sbb
test
xlat
insb
stos
negl
aaa
dec
add
lods
rorl
bound
ficoml
mov
or
cmp
jl
je
mov
test
push
js
mov
xchg
jmp
sti
pop
into
daa
fwait
aam
std
sbb
lock
int
sub
in
mov
shrl
inc
xor
fnsave
stos
mov
pop
sub
rorb
ljmp
inc
fwait
loop
cmp
int
mov
fisubs
iret
mov
ds
push
dec
xor
and
mov
mov
xchg
test
ja
mov
and
filds
sub
cmp
sbb
nop
dec
jl
dec
mov
jbe
jmp
jmp
in
adc
outsl
sbb
ret
jmp
adc
cmp
ffree
clc
push
inc
push
addr16
adc
pop
mov
mov
and
icebp
add
adcl
ja
into
pop
subb
iret
testb
inc
pop
add
lock
adc
inc
outsb
sub
and
shl
les
adc
push
ret
mov
jle
jge
adc
lret
in
push
push
sahf
or
pop
dec
mov
mov
jmp
repz
dec
test
sbb
insl
scas
rorl
divb
push
vmwrite
fiadds
insb
inc
shrl
xor
sbb
mov
jmp
lret
pushf
mov
mov
test
pop
and
mov
out
mov
or
movsl
dec
fdivs
and
inc
inc
lea
xor
pop
pop
mov
shlb
sbb
pusha
int
pushf
stos
push
pusha
jecxz
pop
lock
inc
dec
ds
add
ljmp
jge
jl
or
or
mov
add
movsl
dec
dec
jo
mov
in
shll
sub
idivl
popf
popa
sub
sbb
sbb
insl
jae
mov
fwait
inc
dec
mov
pop
loop
xchg
jle
enter
shlb
push
ja
mov
adc
dec
fcomps
pop
dec
mov
clc
fistpl
xor
pusha
sbb
push
in
mov
pmulhw
jnp
xor
ss
fmuls
lret
jb
and
test
cld
icebp
inc
in
push
mov
adc
and
dec
lds
dec
cld
mov
cmpsb
push
lahf
pop
ss
adc
pop
mov
lcall
loopne
cmp
and
xchg
daa
xchg
xchg
in
rcll
push
js
sub
pushaw
mov
sti
or
jae
xorb
popa
xchg
inc
pop
lds
cmpsl
lods
dec
sbb
icebp
pop
mov
cmpsl
pushf
xchg
cli
xchg
or
push
ror
add
jmp
shl
stos
fstpt
js
in
pop
push
sbbb
push
enter
jle
movsl
shlb
xchg
push
sbb
dec
fiadds
je
xchg
arpl
xchg
pop
rcll
ds
cmp
mov
sbb
mov
and
fwait
nop
dec
mov
lgs
lret
sar
jbe
lret
test
inc
mov
sub
adc
inc
stos
dec
in
ret
fcompl
xor
pop
cmc
push
je
sub
jbe
cmp
popf
clc
int
dec
xchg
mov
pop
sarb
adc
mov
ret
gs
mov
daa
dec
mov
ja
cmpsb
cli
ljmp
bound
xor
xor
addr16
iret
cmpsl
inc
stos
ret
popf
xchg
int3
cld
in
flds
int
ret
cld
loopne
cwtl
xor
and
pop
push
sub
mov
push
or
mov
adc
fcomip
sub
sub
add
jae
into
push
ret
lcall
fs
test
fidivrs
fwait
idivl
aam
repz
aaa
daa
jp
jle
push
sahf
int3
es
in
fcoml
stos
cmp
mov
push
jmp
dec
cmp
lret
sarl
sbb
adc
cltd
mov
mov
xchg
mov
xchg
push
and
xchg
aad
cld
loop
mov
cwtl
shrb
les
shr
fistpll
rcll
pusha
push
cmp
subb
adc
ljmp
das
lock
stos
lret
lret
mov
adc
dec
add
pop
adc
cmpsb
add
shll
outsl
arpl
bound
push
movsl
cmp
add
sahf
jg
pop
push
dec
jle
sub
aad
inc
jbe
jmp
adc
icebp
mov
sbb
lods
cmp
std
inc
and
sub
pop
cmp
loop
clc
xchg
aas
cli
cmp
pop
rorb
call
xor
ret
mov
push
into
adc
insb
aam
sbb
adc
push
mov
shll
aaa
mov
imul
jle
sbb
dec
loope
pop
xor
imul
shlb
gs
je
mov
outsb
stos
inc
sbb
and
push
call
test
xor
push
and
fisubrs
daa
dec
ja
mov
push
jecxz
std
int3
jecxz
xchg
gs
loope
and
jle
push
repz
sub
jle
movsb
test
cwtl
and
int3
pop
cmp
dec
insl
ret
js
or
mov
cmpsl
rclb
cmp
into
bound
das
jbe
mov
mov
mov
sarb
and
loope
jp
hlt
fdivp
in
jns
lahf
int
push
cmp
jne
push
lods
fwait
loopne
sbb
sub
cli
cltd
xor
dec
pushf
popa
jne
test
loope
cmp
or
mov
mov
pop
out
jb
cs
mov
fstl
dec
roll
jmp
les
inc
xchg
cwtl
jmp
push
push
nop
lahf
inc
push
or
ficompl
mov
jg
in
mov
les
ds
fs
xor
out
or
insl
inc
imul
xchg
lcall
pop
lods
sub
sub
mov
xor
mov
mov
fidivs
cmp
xor
or
pop
jns
mov
jl
add
fstl
xchg
mov
fs
fcmovu
dec
andl
push
mov
loopne
rol
lds
jecxz
mov
jecxz
inc
dec
jle
push
sar
xor
test
addr16
xchg
mov
sahf
call
xor
int3
das
lods
bound
and
and
subl
adcl
lahf
lret
daa
or
adc
sbb
sbb
jo
scas
lods
daa
xchg
leave
arpl
or
sbb
jge
cmp
iret
insl
nop
jb
add
gs
in
jo
movsb
out
push
or
orb
pop
lds
mov
je
adc
test
and
aas
adc
sahf
or
mov
and
mov
mov
or
jo
dec
adc
xchg
outsb
mov
in
mov
cmp
dec
inc
imul
adc
movsb
jmp
loop
jnp
jns
pop
pop
cmp
call
movsb
add
stos
xchg
pusha
mov
test
or
push
js
jae
sar
rclb
fs
sub
cs
daa
xor
sbb
in
loop
ret
pop
jecxz
ror
sub
aam
or
jl
push
xor
es
pop
adc
sbb
lods
rolb
lcall
negl
out
jmp
push
mov
sub
and
inc
scas
scas
cmp
fmul
or
call
mov
adc
imul
xchg
push
into
movb
shrl
sbb
lds
sti
adc
push
lret
xchg
jecxz
push
add
ja
rorb
test
pop
int3
push
pop
push
int3
dec
or
bound
pusha
or
imul
aam
cmp
shld
test
enter
xor
lret
das
lds
bound
mov
adcb
popf
xorb
lea
addr16
imull
fisubrs
gs
pop
sub
out
add
repz
adc
lock
cltd
sub
and
push
lea
mov
sti
and
mov
lock
mov
xor
pop
addr16
jg
jp
test
push
das
outsb
outsb
sub
out
jno
mov
xchg
ret
cmp
sub
sahf
out
sbb
jb
insb
jge
lock
xor
cld
jb
push
jne
or
xor
mov
xchg
pop
jecxz
mov
rorb
test
shrl
movsl
mov
pop
stos
jno
inc
mov
fnstenv
insb
push
sub
in
push
or
mov
mov
rclb
and
add
add
rcll
pop
xor
iret
lods
mov
aam
inc
sbb
or
cmp
pushf
add
xor
mov
sbb
cmc
movsl
in
push
jne
es
xor
add
std
dec
mov
push
int
repz
ljmp
pop
repnz
sbb
sbb
insl
lcall
lea
xor
cmp
data16
jo
ret
push
mov
adc
inc
dec
dec
sub
les
add
jecxz
stc
and
add
loopne
daa
das
cmc
mov
and
dec
push
arpl
mov
xchg
jno
push
shld
mov
ret
jbe
mov
inc
push
cli
subl
enter
js
xor
adc
mov
cmp
mov
dec
mov
inc
in
ret
pop
out
pop
shll
and
cmpsb
shr
adc
hlt
pop
sbbb
fldenv
test
mov
gs
xor
loope
cmpl
jb
xchg
iret
sbb
gs
lcall
inc
mov
movsb
mov
lea
push
cld
scas
xor
mov
mov
test
fdiv
mov
test
int
mov
std
shlb
jle
mov
insl
jle
out
push
cwtl
mov
lds
push
ljmp
sbb
repz
mov
push
jg
pop
les
iret
shlb
push
xchg
rcrb
sbb
mov
sbb
mov
imul
add
pop
in
ds
pop
out
push
lock
sbb
push
fs
xchg
repz
popf
call
xor
orl
mov
sbb
outsl
nop
test
or
outsl
negb
cmp
inc
movsl
inc
repnz
stos
cmpsb
dec
mov
push
lock
rorb
int3
subl
cld
or
inc
imul
fmulp
out
shl
sbb
pusha
adc
inc
lret
xchg
out
pop
xchg
rcl
insl
arpl
jnp
aam
push
or
mov
push
insl
out
mov
dec
sbb
mov
xchg
leave
fisubrs
push
dec
das
testl
inc
xor
addl
ja
pop
cmc
jmp
xchg
inc
push
stos
js
inc
xchg
cmp
or
decb
es
in
cmp
mov
pushf
mov
push
in
inc
lahf
scas
jecxz
jmp
insl
enter
add
mov
mov
or
inc
shrl
pop
adc
into
push
out
cmp
inc
push
cli
test
pop
adc
xor
mov
fwait
cmp
mov
lahf
aas
dec
orl
rol
add
mov
pop
loope
in
addr16
cld
fmulp
push
mov
mov
fwait
test
loopne
push
repnz
mov
mov
jbe
ret
mov
in
xlat
push
aas
mov
pop
je
sbbb
cmp
sbb
cld
fcoml
add
loopne
push
loopne
out
mov
dec
or
or
nop
repnz
mov
push
ds
frstor
das
pop
xor
fucomi
mov
xor
ds
push
mov
and
cwtl
cmc
rol
flds
mov
cmp
cmp
sub
or
ja
dec
push
adc
lds
cltd
pop
out
imull
mov
mov
xchg
inc
and
ret
jae
sti
in
arpl
push
mov
aam
dec
inc
pushf
in
loope
or
xchg
xor
decl
inc
push
push
sub
int
test
je
dec
loope
sbb
fdivrp
es
in
mov
cli
sbb
xchg
jecxz
aad
ret
sub
roll
es
jge
adc
mov
icebp
jl
cmp
lahf
pushf
sbb
xor
notl
leave
fstpt
inc
adc
out
in
aaa
rolb
popf
sub
ljmp
jo
mov
lret
mov
hlt
xchg
jo
push
roll
aad
incb
aas
aas
ret
imul
xchg
psubusw
inc
pop
mov
add
mov
rcr
ror
sub
mov
and
adc
adc
ja
imulb
outsl
lret
aad
jl
fwait
roll
das
imull
inc
ficoms
pop
je
lods
rcr
es
and
gs
stos
outsl
pop
jmp
cltd
in
inc
mov
mov
cmc
mov
lock
jmp
xchg
inc
xchg
out
fadds
insl
scas
aam
movsb
or
or
and
fdivs
fldl2e
mov
xor
aad
dec
sbb
addr16
lret
and
jmp
mov
sub
gs
mov
sub
xor
cmpsb
add
filds
jl
loope
idivl
xchg
inc
xor
sahf
cmp
mov
sub
jl
lahf
mov
addl
inc
mov
fcomp
js
adcl
scas
enter
int
mov
jecxz
dec
out
and
pop
inc
scas
mov
test
push
lret
mov
nop
fsts
xchg
add
pop
ficompl
out
xor
pusha
repz
sbb
dec
int3
pop
add
or
add
push
and
sti
mov
push
js
sbb
push
xor
or
and
dec
sbb
subl
gs
cmp
cmpsb
mov
sbb
enter
ljmp
and
xchg
dec
out
jmp
pop
pusha
imul
mov
push
mov
cltd
add
fwait
cli
je
jnp
mov
jp
lods
iret
mov
stos
push
imul
rcrl
sarl
mov
inc
inc
add
fwait
popa
adc
sbb
out
inc
mov
push
jge
setb
push
les
pop
inc
icebp
in
das
lcall
mov
loop
dec
push
aam
xchg
add
std
daa
sti
adc
fcmovbe
les
mov
and
in
dec
mov
cmc
aam
xor
sbb
mov
pop
or
xchg
outsl
fbld
cs
outsl
mov
pop
movsb
test
outsl
or
dec
fwait
push
sub
fimull
jle
fstpt
and
rolb
push
jbe
pop
jbe
add
loop
addr16
test
movsb
fnstsw
lods
jl
xchg
test
mov
test
mov
or
shl
jg
fidivrl
loop
lock
xor
pop
test
jae
cmc
mov
pop
popa
icebp
and
dec
sbb
mov
xchg
jno
inc
mov
dec
rcrb
mov
push
hlt
sub
xchg
ds
add
and
xor
ret
outsl
and
mov
cvttps2pi
mov
sub
dec
mov
mov
loope
pcmpeqb
loope
out
pop
call
js
clc
negl
sbb
mov
xchg
cwtl
ja
aad
andl
mov
xchg
jae
xchg
std
mov
bnd
and
rclb
mov
or
pop
jg
add
sub
sahf
ljmp
sub
shr
inc
std
ja
out
inc
lock
ret
sbb
stos
add
jmp
loope
fidivs
sub
sub
pop
cmp
sbbl
cmp
jae
sti
dec
cmp
loop
push
movsl
sar
xor
les
sub
adc
mov
fmul
adc
insl
jp
ret
std
cmc
shlb
sub
jb
jb
or
das
adc
dec
dec
push
or
push
outsb
and
mov
push
shr
es
scas
aam
or
inc
sbb
leave
in
rcl
mov
loopne
movsb
outsb
sbb
stos
iret
ret
mov
push
cwtl
ja
cmp
inc
sub
bound
dec
sbb
add
sub
das
in
add
add
loopne
hlt
jecxz
lock
dec
call
push
sub
sbb
je
xchg
mov
sbb
mov
out
xor
movl
add
cmp
in
popf
xchg
inc
add
sbb
sbb
jnp
inc
mov
jecxz
outsb
shlb
mov
loopne
repnz
mov
nop
notb
fwait
and
jo
jo
jae
xchg
dec
add
sbb
or
fxch
push
push
data16
rorl
lret
js
cmp
orl
repz
sub
mov
jb
std
xor
cmp
jae
fwait
sbb
xchg
andl
je
insl
mov
stos
in
sbb
roll
fnstcw
pushf
jecxz
aad
adc
rcl
shr
adc
xor
mov
imul
inc
push
or
inc
jnp
mov
jle
mov
cmpsb
push
out
fs
sub
rcrb
test
cmp
addr16
movsl
sub
mov
mov
scas
mov
push
mov
inc
sbb
ljmp
les
pop
dec
lcall
dec
lret
lods
es
imulb
mov
or
cmp
pop
pop
push
imul
addr16
mov
repnz
dec
sub
pop
xor
inc
mov
mov
aas
dec
test
fisubrs
iret
icebp
push
cmp
jmp
dec
mov
or
jb
dec
pop
in
add
jae
mov
outsb
test
inc
rclb
fiadds
jl
sbb
or
stos
lods
jae
stos
cli
fs
mov
call
je
or
mov
jecxz
movsb
outsl
ret
sbbb
xor
lahf
test
cmp
dec
mov
push
insl
rcl
outsb
mov
jbe
xchg
xchg
aad
stc
aas
fsubrs
into
ljmp
ret
fdivl
fsubp
out
cmp
push
es
insl
dec
dec
mov
lods
cwtl
pop
jne
or
int3
cmp
sbb
jecxz
test
sbb
insl
xlat
les
pop
ficoml
jle
paddq
mov
inc
out
jmp
push
insb
test
push
pop
ret
inc
int
decb
adc
push
lcall
fimull
mov
arpl
mov
adc
cmp
xor
mov
iret
dec
rclb
jbe
mov
lahf
shrl
push
xor
cwtl
jmp
push
ss
adc
add
test
and
mov
xchg
cmpsb
test
jp
pop
pop
mov
into
mov
scas
cmp
xchg
arpl
scas
lahf
cmp
jae
insb
push
in
cmp
or
cltd
jmp
mov
cli
adc
rcl
adc
push
out
cmp
mov
iret
mov
lock
ljmp
es
jmp
shlb
imul
and
jecxz
dec
out
adc
shll
ljmp
mov
push
dec
or
jnp
scas
lcall
aad
push
hlt
aad
aad
mov
cmc
nop
xorl
mov
sub
in
fistpll
or
js
dec
sbb
mov
scas
scas
pop
mov
add
ljmp
mov
popf
stc
xchg
sub
jmp
dec
inc
mov
mov
ret
xchg
dec
ja
or
stos
pop
push
stc
pop
jg
sub
inc
ljmp
jmp
adc
das
sub
push
and
popf
mov
inc
jmp
cli
fisubl
mov
aas
and
fadd
pop
xorl
pop
and
push
icebp
lock
mov
loop
xchg
pushf
inc
loopne
popf
push
popa
mov
dec
stc
adc
std
pop
scas
or
pop
rorl
clc
xor
or
test
lret
and
or
push
movb
enter
fisttpl
sbb
hlt
loopne
pop
sbb
or
cmpsl
ret
xchg
mov
sub
fimull
int
je
add
rcr
jo
out
inc
negb
out
fisubl
push
mov
inc
adc
ja
mov
sbb
cmp
into
inc
je
cwtl
in
cmp
lret
adc
loopne
cli
or
jle
adc
jle
mov
sbb
xchg
fs
xchg
xchg
fcompl
les
xor
ret
out
outsl
and
and
stc
and
rolb
pop
push
push
in
mov
push
mov
mov
iret
das
xor
ret
pop
jp
divps
pop
xchg
loopne
movd
das
call
icebp
or
push
sub
xor
jp
pop
push
lcall
mov
loop
jnp
sub
xchg
lcall
xor
daa
mov
sub
push
inc
das
loope
les
jae
imul
loop
mov
mov
sbb
loopne
mov
int
movsl
in
sbbl
pop
add
outsb
adc
aam
mov
or
cltd
xlat
add
cmp
xchg
xor
out
cli
jl
in
xchg
and
or
xchg
cltd
mov
lods
das
adc
in
dec
adc
xchg
jp
stc
push
lret
dec
arpl
dec
stos
adc
dec
cmpsb
xchg
ja
add
jle
lcall
pop
inc
dec
mov
fchs
pop
pop
rclb
test
inc
leave
and
add
mov
in
mov
cmp
and
sub
and
loopne
pop
jo
xor
jnp
ds
cld
or
arpl
push
adc
and
jns
fisubrs
mov
push
pop
xchg
sbb
cmp
pushf
out
jp
arpl
xchg
shlb
inc
pop
and
or
mov
cmp
std
adc
mov
out
insl
cmpsl
movsl
negl
into
cmovl
fs
or
sbb
imul
inc
hlt
or
mov
cmpb
fldl2e
cmp
cmp
sub
aad
push
inc
mov
mov
inc
shl
addb
outsl
pop
xchg
jmp
cmp
imul
add
inc
out
repnz
mov
cmp
jp
dec
jo
mov
out
loopne
lds
sbbl
cmpsb
in
sbb
push
cmpsl
les
sub
mov
mov
xchg
stc
enter
jo
in
lea
aas
sbb
and
pop
mov
mov
sub
jb
movsb
hlt
cmc
je
call
ror
lret
cltd
pop
outsb
popa
mov
pop
or
ja
fists
int
mov
cmc
rcll
dec
xchg
and
movsb
pop
in
or
xor
sbb
push
daa
or
jb
add
xor
lds
pop
mov
push
cwtl
jg
in
in
inc
cmp
clc
add
pop
rcl
out
fiadds
sti
int
pushf
test
mov
mov
dec
jge
iret
cltd
nop
arpl
and
fldlg2
nop
pop
nop
xlat
adc
and
adc
push
lcall
jo
pop
cmp
mov
nop
adc
fistl
xor
xchg
sbb
or
decl
les
cltd
dec
xchg
cltd
jge
cmp
shlb
aam
pop
mov
mov
lret
test
mov
inc
xchg
dec
mov
movsb
aas
pop
fcmovne
add
popa
divl
sbb
out
dec
scas
fmul
dec
cmp
pop
dec
mov
ljmp
push
mov
push
mov
ret
int3
pop
shll
loopne
addb
dec
divl
jae
loope
lret
pop
cmpsl
ljmp
and
pop
into
lods
outsl
or
pop
or
rcll
aaa
push
outsl
cmp
fcmovb
pop
push
insl
pop
and
push
pop
lcall
jbe
hlt
dec
maskmovq
mov
lcall
incb
dec
inc
test
jae
aas
cmp
iret
mov
popa
mov
sbb
or
ret
pushf
and
popa
push
sarb
xor
xchg
jecxz
test
std
pop
jmp
shl
pop
push
data16
cltd
iret
arpl
and
shrl
or
faddl
rclb
sub
int3
movsb
test
sti
shl
ret
sti
sub
lock
push
push
es
adc
push
leave
adc
aaa
mov
add
sub
stos
push
cmpsl
fnstcw
loopne
sahf
fisubl
roll
mov
mov
ret
add
cmp
and
inc
jecxz
popf
mov
iret
and
sub
inc
sbb
dec
cld
dec
icebp
jns
ficomps
in
iret
xlat
imul
icebp
cmp
divl
push
loopne
js
out
add
cli
inc
xor
mov
cmpsb
mov
faddl
push
cmc
push
inc
leave
imul
inc
cltd
pusha
adc
cmp
xchg
lea
int3
xchg
test
dec
mov
or
jle
or
cmp
aad
aad
int3
cmp
push
jl
adcb
lret
popf
jmp
jg
jg
sti
shld
fwait
sbbb
mov
add
adc
push
jnp
rclb
push
ja
jnp
cmpsl
pop
inc
xlat
cld
or
dec
pusha
inc
lretw
mov
mov
dec
mov
aam
xor
sbb
sbb
xor
xchg
or
insb
xchg
or
shll
inc
icebp
fsubrp
inc
pop
int3
xor
testb
jbe
mov
es
addb
aaa
mov
mov
sub
pop
and
cld
jge
data16
cmp
add
stos
add
inc
push
lret
mov
mov
jl
jge
pushf
or
in
or
lahf
xchg
loope
ss
out
sbb
xor
shlb
outsb
movsl
xor
adc
add
scas
add
push
shlb
popf
test
push
leave
xchg
jmp
sbb
ja
sbb
hlt
jmp
lret
fstpl
aas
xor
and
je
mov
and
jmp
pop
and
mov
cmpsl
add
xor
loopne
js
nop
push
xor
lock
xchg
mov
cmp
stc
mov
sti
xor
stos
cmpsl
mov
hlt
xor
addr16
sub
add
jae
xchg
movsl
jno
adc
cmc
xchg
inc
xor
mov
jmp
cmp
sbb
mov
fildll
das
pop
pusha
mov
outsl
push
adc
in
mov
addr16
sub
subl
xor
mov
into
rol
lret
mov
addr16
jmp
repnz
movsl
out
inc
lods
jecxz
and
rcrl
add
mov
fnstcw
xchg
test
repnz
repnz
push
jle
mov
test
dec
pop
xchg
sbb
mov
pop
mov
fsubrl
jle
add
addr16
xor
jnp
loop
mov
mov
push
aas
inc
mov
and
xor
pop
add
pop
addl
sbb
repnz
cmp
mov
rorl
push
mov
dec
jge
int
xor
loopne
cmp
mov
inc
arpl
jae
sti
in
push
stos
xor
nop
fnstsw
xchg
dec
add
divb
out
jae
nop
jbe
jns
xor
in
or
sub
sub
xchg
sbb
sarb
mov
mov
out
repz
sbb
fsubl
test
push
daa
je
xchg
xchg
fwait
dec
pushf
sbb
pop
scas
ficompl
mov
mov
jnp
daa
int3
mov
mov
xor
aad
ljmp
jnp
std
lahf
mov
push
or
or
es
cs
xchg
enter
or
xchg
nop
xchg
call
rclb
jp,pt
ljmp
and
outsb
hlt
jo
roll
popf
mov
xchg
jmp
add
push
sti
and
aaa
sbb
mov
dec
fdivr
popf
adc
sbb
jo
lods
pmulhuw
jno
mov
sub
mov
sub
cli
sti
sbb
in
sarb
inc
pop
lahf
mov
and
sbb
ja
aas
push
add
mov
cld
cmp
dec
lahf
mov
je
fstl
sub
mov
jmp
or
or
decl
sub
mov
nop
lods
push
scas
push
jbe
pushf
or
scas
cltd
sbb
xlat
or
nop
jb
scas
rcrl
xchg
je
scas
jmp
inc
mov
in
jns
cmp
or
jmp
lret
or
out
aam
cmpsl
sbb
jecxz
cld
mov
push
leave
fwait
ss
movsb
les
push
xchg
jl
xchg
or
rcll
insb
lret
pop
stc
dec
aam
push
jp
in
mov
into
ret
sbb
sti
jae
in
mov
mov
pop
cmp
xor
outsb
mov
or
iret
ffreep
and
ret
jg
jmp
add
cld
mov
insb
or
lea
sub
ja
pop
cwtl
test
mov
hlt
or
xor
test
std
clc
cmp
pop
push
mov
inc
in
inc
pop
mov
sub
jns
shl
test
fldl
mov
roll
shrb
dec
or
cmp
movsb
xchg
jae
addr16
mov
add
adc
lahf
inc
inc
cmp
scas
aas
mov
sahf
cmpsb
std
or
pop
pushf
add
pop
dec
mov
or
ret
sub
mov
xor
aad
clc
inc
sahf
int
adc
fisttps
push
aaa
test
xchg
sub
push
ja
add
inc
test
subb
and
jo
xor
xchg
fadds
mov
mov
push
or
jbe
loopne
pop
jo
ds
hlt
cld
sub
or
aam
jno
test
aam
sub
adc
sbbb
pop
or
xchg
cmp
push
jno
and
dec
cmp
pop
test
jecxz
mov
pop
testl
push
xchg
push
push
cmp
lods
mov
fwait
nop
dec
pop
cs
and
pop
imul
repnz
test
cs
pop
stos
sub
jnp
mov
and
fiadds
mov
inc
and
out
xchg
bound
loopne
add
shrl
mov
notb
test
imul
cwtl
add
jg
cmp
fs
dec
int3
out
pusha
xchg
or
lcall
pop
aaa
divl
fs
mov
or
push
sub
add
xchg
rorl
push
insl
pop
dec
xor
aad
pop
push
movsb
inc
in
fldl
add
fiadds
mov
rorl
jno
aaa
cli
in
ss
ljmp
push
sbb
nop
in
jmp
out
mov
dec
daa
pop
mov
cld
add
pop
pop
int
in
stc
jle
in
outsl
xchg
imul
orb
out
insb
sub
lcall
xchg
fwait
pop
push
jg
xchg
dec
pop
xor
fidivrs
push
xor
push
test
movsb
cmp
stc
movsb
ret
scas
flds
or
test
adc
mov
shlb
mov
shr
into
ss
sti
inc
add
fnstcw
mov
mov
mov
idiv
cmpsl
jnp
push
or
imul
fmul
aaa
clc
mov
or
sbb
sbb
lods
lock
mov
xchg
inc
loope
cmpsl
xchg
adc
lock
xchg
xor
adc
orb
lods
jno
xchg
ret
in
xchg
mov
dec
shr
test
iret
je
jl
or
or
mov
inc
ret
fidivrs
xchg
nop
ffree
xor
inc
mov
sub
outsb
mov
int
fistps
je
es
rolb
pop
dec
test
jae
dec
mov
push
test
mov
inc
or
cmpb
dec
mov
je
xchg
fisubs
call
mov
cmp
cmpsb
dec
mov
dec
dec
push
xchg
enter
movl
adc
jns
xchg
push
mov
mov
insl
xchg
loopne
repnz
addr16
dec
xchg
mov
push
pop
mov
cmc
mov
nop
outsl
ljmp
dec
sbb
pop
scas
je
cmp
sbb
popa
pop
push
or
and
mov
jle
leave
lret
repz
outsl
test
mov
test
in
nop
xor
dec
icebp
sub
cmp
sbb
sbb
adc
mov
add
aad
xchg
dec
iret
sbb
push
push
popf
push
fldcw
cmp
lods
nop
sub
leave
mov
mov
inc
jecxz
mov
mov
or
or
out
orb
lcall
lahf
adc
mov
push
inc
adc
std
movsl
inc
jecxz
fists
cltd
sahf
loop
std
push
js
sub
mov
push
ds
popf
test
adc
data16
sbb
jg
and
out
adc
dec
test
inc
not
dec
ficomps
imul
dec
insl
mov
clc
jg
inc
pop
and
clc
inc
movsbl
jo
in
mov
call
add
sub
jge
gs
sbb
add
dec
mov
out
xchg
jns
loope
leave
mov
movsl
pusha
in
insb
and
in
inc
dec
mov
pop
sbb
ds
pop
mov
ja
adc
mov
insl
iret
adc
xor
push
mov
and
cmpsl
push
jb
and
enter
insb
cmc
leave
popa
out
jmp
mov
cmp
xchg
das
jb
stos
js
aas
xor
fsubs
mov
inc
mov
daa
cmp
cmp
movsl
sub
mov
hlt
adcl
push
xchg
xchg
pop
sbb
adc
and
pop
xchg
xchg
pop
ds
jg
ja
or
std
cmp
clc
inc
pop
xor
sub
jno
dec
sub
push
int
and
jge
mov
jl
adc
shll
jnp
xchg
push
push
scas
adc
mov
xchg
inc
int
jb
add
jnp
add
xor
lea
pop
adc
xlat
mov
lods
lret
or
adc
rcll
mov
xor
jg
adc
gs
std
ss
shll
cwtl
loope
cltd
xchg
cmp
cs
push
mov
push
pusha
adc
jb
or
mov
dec
mov
xchg
push
pop
clc
push
inc
dec
mov
ret
fwait
scas
icebp
cli
cwtl
das
inc
in
mov
inc
loop
jns
xlat
push
or
add
jne
mov
cld
or
enter
mov
call
repz
out
or
mov
cmp
scas
xchg
add
inc
int
sahf
subl
cwtl
pop
adc
lock
add
xor
out
or
cli
or
inc
sahf
mov
loope
rol
mov
sub
fstl
mov
andb
insb
aaa
cmp
mov
cmpsb
lea
mov
xchg
xor
lret
pop
add
rcrb
mov
cs
xor
sub
dec
or
sbb
movsl
popa
add
cmp
push
fs
and
pop
hlt
xor
jne
sbb
mov
cmp
aas
lea
jbe
fnstcw
dec
or
int
pop
cmp
xchg
jbe
or
sbb
ret
cmpsb
sbb
and
aas
pop
xchg
imul
addl
mov
test
imul
call
inc
jle
sub
xor
push
mov
outsl
fldcw
mov
clc
mov
out
cmp
hlt
loop
xchg
out
outsb
lcall
mov
lahf
test
lea
dec
dec
jne
fadds
inc
dec
push
rorl
sub
mov
pushf
xchg
out
aaa
nop
and
pushl
or
aaa
lock
jge
jns
movsl
dec
cld
test
jmp
or
and
addr16
call
add
add
in
push
jmp
xchg
push
jo
push
and
mov
cmp
xchg
jmp
shrl
rclb
and
pop
cmp
xor
fcoml
pop
fisttps
adc
sarb
pop
inc
mov
test
shrb
and
inc
dec
mov
inc
movsl
jp
push
mov
outsl
popf
shr
lods
cs
add
sub
test
out
sarl
ds
inc
or
jl
jae
repz
and
outsl
mov
pop
fmulp
data16
out
add
jmp
xlat
xorb
add
sbb
inc
xchg
xchg
lret
pop
mov
jb
lcall
dec
push
fldl
jmp
pop
je
pop
in
fsubs
fimull
aas
jp
stos
lret
mov
das
in
test
lods
add
xor
push
clc
mov
cmp
adc
and
repz
xchg
outsl
push
cmpsb
push
loopne
xlat
sub
outsl
sti
or
cmc
sbb
dec
xor
jl
iret
out
mov
stos
movsl
aaa
adc
loop
shll
cmp
sbb
icebp
add
in
push
sub
ds
enter
mov
inc
mov
pop
adc
lahf
movsb
fimull
out
pop
add
push
add
shlb
popf
jle
sahf
push
pushf
cs
scas
dec
mov
xor
dec
rol
fisttpll
xchg
mov
inc
sarb
mov
sbb
push
fldenv
mov
xor
sub
es
sub
mov
pop
test
pop
dec
arpl
popf
inc
or
out
cmpsb
test
push
mov
mov
mov
int3
ret
inc
mov
mov
jbe
aas
outsl
lock
xor
lret
and
testb
add
mov
out
stos
and
pop
cmc
lods
mov
push
repnz
cmpsl
addr16
inc
popa
jae
out
daa
movsl
sahf
dec
ret
jp
rcl
enter
push
sbb
jns
push
add
lret
xor
push
xor
fimull
add
ljmp
add
xor
int
std
push
adc
pushf
out
lcall
mov
out
mov
bound
nop
ror
or
notb
fstpt
mov
rorl
pop
sbb
xchg
mov
insl
roll
int3
push
scas
inc
pop
sub
pop
test
ja
jmp
pop
mov
inc
add
sbb
push
and
push
xchg
leave
or
sub
insb
mov
jbe
mov
movsb
sbb
or
fidivs
cmp
shr
stc
sub
mov
out
aam
loop
stc
xchg
stc
lcall
mov
mov
inc
mov
out
xchg
sbb
into
out
adc
bnd
jb
push
mov
jb
fsub
jg
js
push
sub
arpl
test
lret
in
xor
js
imul
into
shll
ret
lds
pusha
lret
cmpsl
jae
xlat
push
xorb
out
lret
mov
in
push
jp
adc
dec
or
cmpsb
je
mov
in
mov
bound
fidivs
subb
and
dec
cmp
lds
add
fsub
cltd
lds
xor
addr16
dec
sbb
add
into
cmpsb
addb
lcall
inc
andb
mov
movsb
sub
mov
push
cmp
wrmsr
lock
js
push
loope
imul
jle
xor
jl
adc
outsb
les
inc
xor
adc
inc
xor
push
cmp
and
adc
sahf
lods
bound
pop
jno
std
and
enter
sub
call
or
imul
xchg
cmp
pop
daa
js
cld
pop
aaa
data16
shl
add
mov
mov
jb
enter
mov
inc
cmp
and
mov
adc
cmpsl
mov
mov
push
inc
add
es
jnp
loopne
or
xor
adc
leave
fidivs
lock
sub
mov
loopne
jbe
mov
es
pop
mov
scas
cmc
lret
pushf
sub
outsb
in
rcl
or
add
stos
lahf
xor
out
cmp
out
aas
jg
add
lret
mov
repnz
cmp
sbb
jo
fisubrs
mov
orb
movsl
ja
dec
add
inc
sbb
decb
xchg
jge
loop
or
out
fbld
decl
xor
adc
jle
mov
mov
mov
mov
xor
fwait
mov
cmp
repz
call
inc
xlat
rcll
or
and
jge
inc
cli
test
jp
scas
cmp
cmpsb
inc
cwtl
lcall
fdivr
fiadds
inc
cmp
sub
push
mov
mov
es
in
mov
call
fnsave
or
lahf
dec
and
sub
sub
sbb
jp
test
movsb
jp
lods
clc
into
orl
dec
inc
and
mov
push
nop
mov
jle
clc
int3
pop
or
xchg
int
dec
inc
ja
cmp
inc
pusha
bound
inc
insl
aad
sbb
mov
adc
or
outsb
mov
iret
stos
push
inc
jae
add
hlt
or
xor
xchg
pop
fildll
jnp
xchg
ret
lds
int
je
test
loopne
jb
xor
mov
push
lods
rclb
dec
dec
inc
pushf
push
xlat
mov
cli
movsb
inc
sti
rcrb
mov
stos
add
mov
pop
scas
mov
fsubl
cmp
dec
inc
push
jbe
sub
push
mov
insb
jmp
outsl
inc
insb
xchg
push
push
gs
pop
out
sbb
aad
repz
addr16
xorb
mov
add
ret
dec
adc
mov
push
push
jl
aaa
sub
cwtl
mov
aad
lea
xlat
inc
mov
jb
adc
adc
nop
pop
int3
sub
imul
push
jecxz
mov
jecxz
in
arpl
pusha
jle
sbb
mov
loop
inc
jne
pop
popa
nop
sub
js
pop
push
push
lret
xor
lret
daa
cmp
movsl
push
mov
rorb
mov
mov
pushf
sar
jb
push
rcl
shl
adc
pushfw
cmp
sub
push
dec
pusha
add
fs
ret
int3
imul
ret
popa
into
cmp
adc
call
inc
ret
mov
int3
jecxz
out
mov
scas
aaa
inc
dec
xlat
outsb
sbb
mov
loop
and
pop
subb
push
shll
jo
es
sub
push
mov
and
jmp
les
adc
loope
cmpsl
and
andb
jnp
lret
ljmp
fildll
mov
je
or
popa
hlt
xor
xor
mov
popa
sbb
sbb
scas
aam
enter
pop
cld
pop
xlat
into
nop
shlb
out
dec
or
dec
jp
mov
mov
xchg
loop
push
cltd
mov
add
repz
in
mov
in
inc
mov
inc
mov
in
sub
out
movsb
mov
divb
jl
lods
lret
xchg
sub
je
outsl
inc
imul
push
shr
ret
popa
shrb
xor
std
ret
test
inc
or
sbb
and
add
inc
enter
xor
ds
push
push
into
dec
std
lret
sbb
adc
or
aam
mov
xchg
shrl
icebp
cld
xchg
add
in
fidivrl
push
out
cmc
outsl
add
xchg
clzero
xor
fwait
add
jo
cltd
rcrl
aaa
pop
sbb
push
and
xchg
in
cli
pop
xor
cwtd
or
push
mov
sub
push
cmpsb
adc
pop
pop
push
or
jae
sub
fcompl
adc
fwait
xor
xchg
jl
pop
imul
cli
pusha
or
in
adc
std
and
aad
aas
cmp
add
pop
sbb
aad
lock
daa
sbb
stc
ror
pop
add
adc
mov
mov
clc
sub
pop
xor
faddp
icebp
and
inc
pop
lret
pop
jecxz
insl
stos
add
add
imul
mov
pop
out
sub
pop
loopne
lcall
out
mov
add
xor
sbb
mov
mov
imul
jbe
xchg
lret
dec
jno
shlb
xchg
dec
jg
jne
xorb
das
and
cmpsb
dec
inc
out
pop
or
dec
test
and
popa
enter
stos
or
pop
mov
loope
pusha
mov
push
lea
push
test
popf
mov
push
mov
pop
mov
divb
cmp
pushf
cmc
cltd
sbb
dec
cmp
and
fsubs
sub
sub
mov
into
js
cmp
xor
xor
fisubrs
call
lds
push
mov
and
loopne
js
cmc
int
stos
add
mov
push
add
clc
mov
cmp
enter
inc
in
and
rcl
mov
mov
rolb
js
cltd
ss
and
mov
jmp
pop
push
sbbb
lds
lea
cmp
lret
shl
sbb
cmpb
sbb
mov
cld
gs
fs
xlat
or
stos
add
mov
mov
cli
jmp
mov
pop
icebp
ret
inc
dec
cmp
das
outsl
fsubs
rcrb
jmp
mov
imul
xchg
pop
mov
sub
aaa
xchg
andl
push
inc
ss
fwait
cmp
addr16
jne
inc
xor
call
movsl
lds
cmpsb
ret
push
mov
cmp
mov
mov
push
popa
add
cmp
cld
stos
or
or
sub
movsb
xor
push
fisubrl
mov
into
cmp
enter
dec
mov
jl
gs
loop
rclb
mov
imul
sub
test
jp
sub
mov
mov
mov
jbe
jmp
aaa
loopne
mov
hlt
pop
adc
push
or
and
pop
out
bound
sub
push
ret
in
lret
dec
loopne
into
movsl
rcrl
xchg
push
jb
mov
and
mov
enter
jns
hlt
push
andb
jecxz
rcrl
mov
inc
aas
test
push
popa
jnp
sub
in
xchg
inc
out
mov
test
test
adc
loope
loope
sub
or
mov
popa
stos
cmpsb
xor
into
movsl
jbe
mov
jae
xchg
mov
mov
adc
scas
fldcw
mov
outsl
cwtl
dec
xchg
jge
push
dec
xchg
jb
add
int3
inc
cltd
pop
dec
sub
xor
fs
cmp
mov
cmp
inc
xchg
cli
adc
push
scas
and
insl
or
pop
ss
pop
adc
xchg
int
mov
cmpsb
xchg
repnz
sahf
into
loope
in
outsl
mov
adc
pop
xchg
rcll
xchg
xchg
fwait
mov
xchg
push
cmpsl
and
int
out
bound
test
popa
lretw
adc
pop
sub
jmp
push
push
sbb
adc
add
in
fdivl
dec
loop
dec
sbb
aam
aad
cli
aas
shll
xor
test
push
add
xor
popf
mov
call
push
imul
jge
mov
inc
popf
popl
insl
adc
cmp
pop
pop
push
push
mov
lock
push
sub
sub
fwait
mov
pop
dec
jg
int
lret
mov
call
into
decb
xchg
sbb
mov
push
inc
inc
test
cld
add
enter
out
mov
push
sahf
cltd
arpl
dec
movsb
popf
or
cld
push
cmp
xor
inc
and
inc
je
imul
mov
inc
sbb
outsl
cs
and
mov
xlat
fldl2e
mov
loop
lahf
int3
jb
cmpsl
cmpsb
ret
cmp
mov
cmp
into
mov
ss
cmp
inc
daa
dec
insl
xorb
arpl
xlat
and
sbb
jle
inc
push
mov
sub
dec
cmpb
fcoms
or
cmp
and
mov
lret
cli
push
in
out
leave
stos
cli
xor
xchg
shrb
addr16
pusha
iret
fs
insl
out
pop
aam
push
cmp
test
clc
mov
gs
fs
mov
adc
lcall
out
sub
xchg
nop
xchg
push
sub
pop
out
aaa
pop
xor
inc
daa
cmp
aaa
imul
sbb
ficoms
imull
sbb
add
bound
jg
lds
out
sbb
sbb
mov
push
jmp
push
adc
pop
inc
fisttps
adc
inc
imul
icebp
lds
lods
cmc
test
sub
inc
std
lahf
insb
adc
cmp
xchg
pop
repz
frstor
stc
rol
and
pop
loop
aad
addl
xor
push
and
push
sahf
add
mov
inc
or
nop
xchg
faddp
das
outsb
into
or
repnz
mov
sbbb
jge
fisttpl
bound
gs
xorl
imul
aaa
and
divb
mov
inc
jl
popf
sbb
ficompl
cmp
inc
flds
fwait
push
pop
cmp
movsb
lods
daa
inc
add
stos
int3
jecxz
popf
jge
mov
jle
dec
dec
mov
les
lahf
jo
lahf
inc
add
out
mov
cmpl
rcll
sub
or
out
add
lret
loopne
pop
dec
sub
stos
int
mov
aad
lcall
scas
mov
push
sti
lods
cld
testl
mov
loopne
movsb
mov
cmpsl
push
and
pop
lret
sbb
addr16
imul
xchg
xor
sbb
jecxz,pt
in
inc
sub
jbe
subl
cmp
lods
mov
sbb
cmp
fsts
cmp
ftst
mov
pop
scas
test
cmpl
inc
cmpsl
add
xor
inc
imul
std
aam
mov
inc
sarb
mov
dec
pop
jbe
sahf
es
xchg
mov
dec
enter
jmp
inc
push
insb
and
mov
or
lret
popa
or
fmul
mov
xor
jecxz
popf
in
pop
add
out
fsubrl
cs
test
outsl
into
and
fwait
mov
sbb
inc
inc
pop
adc
insl
into
into
lock
push
xchg
xchg
test
outsb
popf
mov
dec
in
imul
pop
pop
add
ds
clc
add
cmp
test
push
sbb
cmc
cltd
icebp
jnp
sbb
or
ljmp
xchg
cmpb
daa
xor
lods
or
addl
mov
xor
insb
sbbb
call
mov
sub
push
and
pop
je
sarl
adc
jl
aas
mov
adc
loop
out
push
jnp
fidivs
fwait
scas
rcl
xorb
inc
mov
lods
sbb
repnz
xor
out
pop
dec
ljmp
xchg
js
in
xchg
subb
loope
mov
xor
xchg
mov
lds
inc
rcl
jae
push
rcrb
add
xor
mov
sub
leave
mov
imul
fldcw
loopne
sub
mov
sub
dec
and
test
and
fstpt
xchg
dec
js
xchg
xchg
pop
or
loop
jno
sbb
jle
xchg
scas
mov
pop
jns
shlb
lret
xchg
xchg
mov
xchg
push
repz
shll
ret
xchg
in
pop
test
stc
inc
cmp
push
pop
pop
hlt
mov
jle
and
adc
xor
jl
pop
in
sbb
shrl
mov
leave
jae
fistps
rcrb
dec
mov
mov
repz
test
mov
mov
add
outsl
sbb
nop
push
xchg
fsubrp
cmp
arpl
rolb
out
dec
cmp
mov
loope
das
mov
outsl
loopne
outsl
mov
dec
push
sub
shr
pop
mov
filds
out
dec
push
xor
sbb
int
push
sub
mov
shl
in
pushf
mov
pop
dec
dec
sbb
cltd
loop
fsubrl
pop
pop
scas
ret
mov
or
arpl
lret
jecxz
xor
out
mov
push
adc
aad
mov
mov
mov
inc
insb
idiv
push
orb
pop
outsb
mov
xchg
xor
dec
in
push
ret
in
or
in
clc
or
or
scas
pop
lcall
lea
jnp
push
rclb
pop
mov
in
adc
cmpsb
pop
mov
mov
jns
dec
cltd
jns
fistl
xchg
mov
inc
pop
jns
mov
popf
fiaddl
pop
lret
mov
xlat
lea
pop
xchg
mov
jecxz
cwtl
cmp
cmp
pop
xor
xchg
dec
inc
jecxz
lret
sub
add
frstor
xchg
test
sahf
jle
aas
jae
xchg
outsl
sbb
cs
pop
icebp
push
test
dec
js
push
popa
mov
leave
cs
jecxz
int
lret
movsb
mov
xchg
add
adc
rcrb
test
jl
inc
imul
lods
mov
xor
xchg
and
add
xchg
andb
sub
test
popa
and
mov
xchg
sub
add
sbb
adc
fs
inc
inc
lcall
out
add
dec
mov
or
push
pop
jecxz
mov
scas
xchg
dec
scas
adc
pop
into
idivb
mov
stos
ds
fucomp
dec
test
cmp
or
xchg
adc
js
xchg
pop
test
fstpl
push
mov
or
inc
push
test
jmp
add
popf
out
orl
dec
xchg
xor
movsl
in
lock
cmp
les
push
add
lret
push
pop
push
and
mov
xchg
sbb
sub
test
lea
add
int
popf
daa
setb
loopne
add
rcrb
sub
xor
imul
xor
outsb
dec
or
or
repnz
inc
cmp
movsb
mov
or
xor
jns
popf
sbb
test
lods
lods
setbe
jb
mov
sarl
mov
mov
lret
add
idivl
in
xchg
mov
xchg
xlat
adc
mov
aas
cs
push
bound
mov
mov
and
aad
arpl
addl
xor
lahf
adc
jbe
outsb
sub
push
mov
or
xchg
pop
pusha
inc
dec
mov
dec
jb
jmp
inc
ja
fisttpll
adc
lcall
pushf
push
mov
pushf
add
mov
subb
mov
loop
or
cltd
ja
mov
shlb
sub
lret
std
fmulp
and
xchg
lods
mov
fstpl
andb
or
pop
inc
xchg
sbb
dec
push
jp
sbb
sti
ljmp
cmpsl
ds
dec
imul
xor
mov
test
fucomp
cmpsb
leave
mov
mov
pop
pusha
push
dec
jne
das
std
add
cltd
pop
mov
dec
fcmove
mov
xor
popa
loope,pt
inc
movsl
cli
adc
xchg
scas
addr16
orb
mov
pop
adc
mov
ja
inc
sub
pop
shlb
outsl
pop
mov
lahf
mov
daa
aam
es
je
mov
lahf
add
leave
xor
jno
inc
lahf
popa
cmp
jg
adc
pop
mov
leave
lods
jl
cmp
cs
push
mov
or
cmpsl
in
cltd
push
jns
fsubrl
cmp
hlt
iret
cmp
xor
cmp
clc
mov
scas
sub
stos
push
sub
xor
outsb
outsl
into
and
mov
pop
mov
imul
fbstp
add
iret
push
sub
mov
sub
xor
inc
leave
mov
addl
sbb
and
jge
ret
loop
addb
jecxz
mov
movsl
fistpl
pop
mov
lds
enter
stos
imul
jne
jp
cmpsl
loope
mov
push
mov
cld
std
jo
xchg
popf
lret
lods
out
or
pop
xor
pop
fstps
push
push
dec
ficomps
in
sub
mov
cli
popf
ret
scas
sub
cmc
xlat
test
test
scas
in
mov
inc
sbb
cmp
fstpl
jg
sub
je
ret
cmp
dec
xor
mov
sbb
and
std
cmp
dec
outsb
pop
and
aaa
andl
clc
add
sbb
mov
mov
sub
dec
xchg
mov
aaa
rorl
cmp
push
pop
loopne
enter
ret
vpcomb
xchg
and
imul
nop
shll
xchg
xlat
cmp
icebp
mov
add
out
pop
shlb
addr16
stos
ja
sbb
rolb
dec
fs
adc
pop
add
jno
add
adc
xor
push
pusha
add
ss
mov
push
inc
jmp
sub
loopne
rcl
dec
mov
mov
xchg
and
mov
std
sarb
and
cmp
ja
and
enter
lods
jae
adc
repz
cmpsl
scas
lcall
aas
inc
fs
loope
mov
xchg
or
out
iret
mov
jp
dec
stos
xlat
mov
std
lea
push
pop
sbb
or
add
xchg
pminsw
pop
push
sbb
test
hlt
ljmp
gs
arpl
inc
stc
or
ret
aam
bnd
bound
jmp
inc
xor
push
pop
cmp
pusha
clc
push
pop
sti
ds
pop
in
loopne
jge
sub
dec
push
lret
push
mov
sarl
xor
and
in
icebp
addl
scas
push
lds
pop
dec
sbb
arpl
pop
sub
cmp
adc
add
insl
pop
mov
xchg
fwait
addr16
dec
addr16
push
adc
xor
fwait
and
pop
and
push
inc
lret
lcall
mov
stos
xchg
fcoms
inc
jge
mov
xchg
icebp
adc
adc
jns
push
inc
imul
sub
rorl
pop
sbb
and
xchg
sbb
testl
xor
add
or
stc
jns
test
cmp
mov
jnp
cmp
sub
push
xor
into
jbe
jg
fcomip
repnz
sub
lods
mull
aaa
pop
outsb
jno
jp,pt
pop
xor
cmpsb
xor
adc
es
mov
sti
shrl
test
inc
sub
lcall
addb
adc
mov
cmpsb
inc
sbb
loopne
dec
jle
fiaddl
jne
sub
mov
data16
cmpb
jno
push
push
and
jle
adc
test
push
loopne
or
pop
fs
ss
movsb
out
mov
inc
filds
fidivl
xor
lcall
push
sbb
fisttps
jnp
mov
jns
xchg
inc
icebp
xor
jmp
adc
adc
sbb
jne
arpl
ja
jge
sbbb
add
mov
mov
mov
dec
rcrb
push
stos
xchg
jle
cltd
dec
test
ss
aam
mov
add
inc
push
mov
test
mov
movsl
inc
in
repz
and
dec
fxch
dec
movlps
push
stc
into
cmp
dec
jae
ret
mov
mov
add
pushf
mov
mov
imul
aas
test
inc
into
jp
jmp
dec
mov
jp
jns
inc
xor
insl
fs
xchg
jns
jne
pop
aad
pop
aam
dec
lea
adc
pop
xchg
xchg
mov
roll
mov
arpl
or
inc
mov
cmpb
or
in
mov
int3
jb
stos
xor
aam
push
lods
ret
in
pop
or
or
popa
pop
jbe
jae
mov
xchg
roll
mov
or
lcall
loop
je
aad
mov
jl
mov
outsl
popa
test
cmp
adc
dec
and
mov
aad
mov
cmpsb
jge
mov
xchg
sti
mov
mov
fnop
stc
xchg
mov
mov
push
inc
popa
xchg
mov
test
lahf
lods
ret
dec
lret
and
repz
icebp
add
in
sub
pop
test
adc
fistps
xchg
arpl
dec
pop
mov
mov
cmc
sub
scas
test
jne
js
mov
xor
jge
outsb
test
in
push
jb
fstps
lret
mov
dec
dec
add
adc
movsb
inc
lcall
pop
push
pop
pushf
jno
lods
inc
and
out
inc
or
cmpsb
add
outsl
mov
loopne
cld
dec
pop
std
dec
mov
ja
dec
lock
adc
sub
pop
mov
adc
outsl
jmp
aas
imul
cwtl
inc
or
mov
lcall
push
fs
mov
jle
and
mov
xrelease
mov
es
inc
mov
pop
jns
repz
ret
ljmp
adc
shl
in
out
sarb
inc
pop
adc
fidivrl
fidivs
jg
into
mov
mov
popf
mov
jge
mov
fildl
scas
sub
jns
add
sub
adc
mov
loop
loop
pushf
icebp
shlb
add
jno
add
test
add
mov
sbb
mov
adc
dec
sbb
in
and
cwtl
js
and
push
sbb
or
push
hlt
lods
pop
add
or
inc
jae
imul
inc
test
or
mov
icebp
ja
lock
cwtl
test
jmp
shll
mov
add
lahf
adc
mov
and
xchg
xor
int3
cmp
adc
aaa
gs
mov
fiadds
rcrb
sar
popl
mov
ljmp
mov
mov
and
or
and
inc
fmulp
jb
fdivrp
mov
adcb
pop
les
or
out
sub
add
jge
jne
in
popf
pop
xor
shrb
sub
rclb
and
in
push
cltd
sub
mov
dec
xrelease
out
add
sbbl
outsb
add
mov
xchg
xchg
rcrl
dec
inc
push
mov
mov
es
das
pop
aaa
push
push
pslld
mov
gs
aaa
sbb
push
sub
repnz
negl
cltd
jl
andb
lcall
iret
mov
insl
add
gs
movsl
inc
xor
jbe
or
or
cmp
xchg
sbb
div
icebp
cs
mov
int
fimuls
hlt
inc
sub
mov
adc
inc
outsl
rol
adc
fldenv
mov
sbb
dec
shll
lods
and
aam
sti
aaa
or
mov
imul
and
jae
cld
jnp
push
bound
jecxz
add
mov
mov
xchg
sahf
imul
daa
and
pop
pop
test
ss
pop
jmp
fisubrs
add
daa
into
sbb
jno
jae
mov
pop
std
sbb
jns
xor
hlt
cld
ljmp
aaa
movsl
or
mov
xchg
subl
cmp
lock
add
jo
int
add
jns
mov
cwtd
fdivs
in
push
mov
ret
mov
jle
sarb
xor
mov
push
insb
xchg
xchg
divb
dec
sub
push
jae
test
in
aaa
test
xor
jno
leave
pop
stos
jb
dec
es
jae
or
add
sti
stos
clc
inc
pop
push
mov
add
pop
push
out
mov
sbb
xchg
cmp
lcallw
sub
and
incb
add
push
inc
popa
push
inc
hlt
sahf
pop
pop
ror
sub
cld
mov
pop
ret
push
dec
lods
jl
or
scas
loope
stos
ss
cltd
clc
aad
aad
gs
xchg
dec
and
mov
xor
ret
stc
filds
lea
clc
jbe
adc
pop
inc
pop
out
movsb
xchg
adc
sub
stos
or
mov
movsl
mov
pusha
xchg
call
jmp
pop
inc
popl
hlt
mov
cmc
adc
push
dec
out
adc
xchg
adc
lcall
aaa
rorb
jne
adc
add
dec
pop
or
ret
mov
dec
push
xchg
bound
popl
cmp
inc
gs
pop
jb
inc
mov
je
fwait
lret
push
adc
adc
mov
int
test
outsb
sub
cmp
pop
push
or
mov
data16
push
inc
lea
arpl
sbb
jmp
testl
aas
adc
in
rcll
or
jae
pop
pushf
add
and
mov
jb
jecxz
and
call
rcrb
jecxz
jecxz
or
add
mov
push
sbb
stos
out
mov
jnp
out
test
insl
int
push
xchg
stc
icebp
inc
sbb
stc
xchg
jnp
lea
ja
cmp
jne
fnsave
bound
inc
sub
lret
or
add
enter
sbb
ljmp
daa
rcrb
test
lds
fs
sbbb
jmp
jge
jns
cmc
and
xchg
pop
push
cmp
mov
or
jb
push
jmp
jae
out
add
addr16
dec
xchg
cltd
jb
cmp
bound
adc
jo
push
cwtl
sti
push
jge
add
jno
sub
cli
daa
out
mov
xchg
mov
adc
mov
out
fistpl
js
jns
jge
into
cmpb
push
jno
pop
xorl
xchg
je
popf
adc
mov
lret
fcompl
adc
lcall
xor
mov
push
xor
and
mov
mov
add
pop
repz
shll
dec
icebp
inc
mov
xor
cmp
sbb
jno
xor
aam
sub
push
ljmp
cli
pop
pop
das
mov
jbe
and
fcmovnb
xchg
xor
mov
iret
pushf
into
loop
pop
add
push
stc
mov
outsb
adc
xchg
and
je
stc
iret
not
xor
xor
add
ret
sbb
cwtl
shrb
lock
push
xchg
jle
mov
fisubl
test
stos
xor
ficoml
mov
mov
pusha
pop
jnp
add
push
lock
add
or
popa
mov
or
pop
ljmp
fucomi
jb
pop
pop
jecxz
lds
push
xchg
dec
push
xchg
in
dec
jmp
xchg
xchg
pusha
repnz
lcall
and
repnz
nop
lcall
xchg
xchg
std
sbb
int
fsubrs
push
push
xor
sub
scas
fmuls
jns
cmp
fisubrl
lods
mov
cmp
mov
cmp
dec
xchg
push
inc
xchg
push
addr16
ss
inc
stos
xor
jns
jmp
cmp
pop
xchg
adc
push
sub
jbe
orb
jg
in
push
dec
test
pop
jmp
loope
cwtl
push
mov
pop
push
sarb
scas
xor
ja
aad
sbb
ror
movsb
enter
mov
push
test
pop
mov
nop
cmp
iret
push
addr16
mov
adc
mov
cmp
div
arpl
jbe
movsb
inc
and
inc
fcoms
in
shlb
movsl
ret
loopne
xchg
outsb
loope
sub
push
xchg
inc
inc
pop
and
inc
mov
ret
sbb
in
cmc
and
dec
ret
or
pop
loop
cli
jg
push
cmp
jne
push
inc
mov
dec
test
jl
pop
push
xor
sbb
inc
scas
push
call
sub
jge
in
xchg
pop
sbbl
pop
push
inc
movsl
push
jne
nop
rorl
fistl
call
into
sub
mov
outsl
adc
test
fstpl
cmc
inc
inc
fmull
jae
lahf
aas
sbb
pop
in
cmp
fdivrl
test
xchg
xchg
lret
ja
pushf
sahf
push
pop
mov
xchg
dec
add
stos
mov
sub
mov
test
xchg
xor
cmc
aaa
test
nop
stos
iret
int
hlt
dec
dec
enter
dec
fistpll
sbb
imul
sub
int3
shrb
lods
dec
data16
pop
fnstcw
mov
loop
test
sbb
adc
scas
repz
les
dec
pop
inc
stos
and
and
mov
jo
popa
mov
in
jb
mov
aam
push
cwtl
dec
mov
out
xor
je
inc
pop
mov
cmp
ret
add
jno
sub
sbb
loope
mov
mov
push
adc
in
adc
sub
jbe
in
push
incl
insl
mov
pop
pop
shl
xor
push
xor
and
clc
je
out
push
jae
push
test
adc
pop
aaa
int
sbbb
mov
scas
incl
and
ljmp
lcall
sbb
movl
pop
adc
enter
icebp
mov
and
sti
inc
stos
out
orl
shr
adc
movsb
inc
inc
dec
mov
rcrl
push
mov
sbb
stos
jmp
jns
loopne
aas
mov
movsl
leave
pop
or
xor
xor
in
sub
ret
push
pusha
or
jnp
jae
sar
rol
cmp
stos
cmp
add
push
jmp
outsl
out
lods
scas
sbb
push
aam
stc
sub
gs
pop
mov
shrl
je
mov
adc
sahf
mov
sbb
in
push
cmp
dec
adc
xchg
aam
mov
push
push
shl
fsubrl
nop
mul
mov
xor
arpl
xor
adc
pop
in
jae
cmp
add
lret
fwait
lds
xor
add
cwtl
aaa
pop
sub
jb
sbb
imul
cmp
test
push
mov
lods
sub
adc
or
push
repnz
insb
pop
dec
adc
add
push
cmp
or
lods
xor
popa
mov
out
aas
es
movsl
inc
add
sti
in
in
pop
test
push
popf
pop
xor
gs
jae
lods
int3
inc
stos
mov
add
push
leave
mov
ss
dec
fxch
leave
push
xor
add
pusha
sbbb
dec
add
out
mov
mov
add
xchg
iret
push
sahf
fwait
aas
ror
cltd
jecxz
push
lods
mov
mov
inc
xor
push
push
test
addl
cmpl
into
loop
mov
add
lahf
gs
jle
pop
or
ds
in
fwait
jne
xor
divl
fistpll
call
fmull
stos
push
adc
jle
std
outsb
lods
call
dec
push
int
rcrb
fs
mov
and
scas
pop
xchg
lea
in
out
ja
loop
push
cmpsl
jno
push
adc
jg
out
inc
shrl
pop
test
inc
fsubs
lea
jno
or
add
pop
das
sub
push
fcompl
xchg
stc
sub
aaa
iret
ud0
push
data16
xchg
mov
sbb
lahf
mov
pushf
outsl
mov
into
mov
lcall
hlt
cmp
jge
rol
lock
cmp
aas
movsb
push
mov
call
dec
xchg
xchg
jge
pop
cwtl
pop
inc
jae
nop
pop
sarb
dec
sbb
mov
pop
push
sti
fdivrs
out
cmp
mov
fldt
mov
jae
enter
push
inc
hlt
bound
xlat
xchg
mov
mov
mov
dec
les
inc
insl
jns
int
cmp
aaa
pusha
jb
adc
xchg
negb
dec
notb
adc
xor
rep
cld
aas
movl
jg
iret
push
jecxz
sti
subl
sahf
jg
inc
mov
xor
pop
dec
shrb
aaa
in
sbb
lock
lahf
xchg
cmpsl
loope
int
cld
jb
pop
aad
repnz
xchg
dec
mov
sub
arpl
xchg
cs
adc
int
inc
xchg
cmp
mov
cmp
outsl
lods
mov
pop
mov
dec
outsb
push
repz
and
and
xlat
dec
fidivrs
mov
in
jbe
lods
lcall
mov
jbe
int
mov
inc
imul
cmp
cmp
cmpsl
shlb
mov
or
hlt
fidivrl
movsl
enter
fisubrl
dec
scas
repnz
into
mul
pop
sub
mov
outsb
lret
add
sub
sub
add
xchg
cmp
cmp
cmc
shlb
sub
test
jg
push
xor
outsb
jb
mov
mov
in
andl
adc
fisubs
lds
jge
or
call
jno
pop
dec
jmp
mov
sub
outsl
stos
push
cli
pop
cltd
xchg
rol
jbe
out
repz
pop
aam
test
xchg
sar
dec
and
dec
sarl
sub
xchg
in
out
mov
js
adc
sahf
xchg
fsubr
jmp
ffree
data16
jne
sub
or
stc
mov
cmc
and
out
call
lock
push
or
xchg
shll
xor
and
sub
mov
jle
and
fmulp
lods
jmp
or
jb
arpl
cmp
xchg
lret
add
or
xor
push
repz
int3
ja
or
aas
ds
out
cli
std
inc
repnz
pop
and
imul
outsw
test
and
aaa
cltd
mov
xor
adc
nop
or
maskmovq
negl
xor
das
cltd
jo
subl
pop
aas
scas
dec
sbb
jmp
fwait
lds
stc
ficoms
shlb
xchg
popf
mov
mov
adc
test
cmp
mov
arpl
cwtl
or
mov
mov
rolb
sub
fwait
data16
lahf
repz
add
imul
daa
cli
mov
sti
sbb
outsl
aaa
cmpsl
movsb
cmp
scas
sub
add
add
and
sbb
pushl
les
lcall
jg
add
cmp
push
cld
stos
insb
mov
pop
add
jge
xchg
sub
roll
cmp
mov
cmp
leave
xlat
xor
ja
pop
in
mov
mov
jnp
cli
sahf
testb
mov
xor
addr16
fistpl
out
movsb
xchg
xor
lret
add
or
inc
lods
lods
xor
mov
imul
dec
pop
lods
pushf
js
hlt
mov
jecxz
call
or
inc
and
cwtl
popa
inc
jg
push
lcall
out
sbb
ficoms
pop
sbb
int3
or
out
xor
xchg
ja
or
loope
or
push
leave
pop
lea
xlat
push
icebp
frstor
fadds
mov
or
popa
pop
fwait
sbb
ret
mov
fucomip
add
push
jl
scas
rorb
mov
dec
sbbl
in
adc
cmpsl
int
sub
in
test
das
jns
jno
orl
jns
mov
aam
inc
adc
xchg
and
mov
ds
int3
inc
mov
or
dec
aaa
int
mov
stos
xchg
mov
sbb
popa
mov
into
jne
dec
jge
fnstenv
daa
in
lds
xchg
jmp
pop
cmp
pop
mov
stos
inc
mov
aaa
mull
addr16
push
jge
pop
loope
pusha
dec
inc
jp
add
mov
add
or
repnz
ficompl
xor
sub
pop
fidivl
sbb
lds
das
mov
mov
push
pop
outsl
loopne
inc
in
push
lahf
es
lret
mov
pop
push
sbb
add
mov
addl
add
imulb
mov
jp
xor
call
inc
xchg
mov
jecxz
push
cmp
lods
adc
cmpsb
dec
dec
sbbb
or
sbb
sub
mov
ret
mov
jle
cli
outsb
mov
imul
js
into
imul
mov
sub
fbstp
mov
imul
xor
cmp
xchg
mov
loope
jmp
ljmp
stos
jecxz
andl
mov
cmpsl
iret
shll
sahf
aas
fisubs
out
data16
inc
in
in
inc
and
dec
icebp
and
mov
scas
ja
data16
mov
add
sub
leave
mov
push
sub
push
mov
cmp
pop
cld
cld
insb
sbbb
and
add
rolb
faddp
inc
xchg
mov
dec
scas
cmpsl
pop
lods
inc
mov
lods
and
in
subb
mov
mov
mov
and
nop
imul
sbb
add
out
xchg
sbb
adc
pop
dec
dec
cmpsl
repz
adc
test
cmp
xor
sbb
xor
popf
dec
or
outsl
pop
dec
inc
cmp
out
sbbl
scas
repnz
jbe
pop
mov
nop
out
dec
or
push
xchg
or
test
push
roll
std
xor
cmp
hlt
call
movsb
cmpsb
jg
enter
push
or
pop
movsb
push
mov
aas
pusha
daa
and
fildl
sbb
test
neg
iret
ret
in
js
sbb
sahf
dec
inc
js
dec
xchg
lods
shll
mov
dec
sahf
aad
pusha
sbb
cmp
inc
cmc
jp
insl
and
or
xchg
pop
pop
call
jae
outsb
mov
outsl
mov
jle
ficoml
sbb
lcall
out
adc
xchg
lret
stos
ret
popf
test
nop
fildl
fst
jns
mov
add
mov
sarl
adc
push
icebp
pop
jmp
in
mov
call
push
insl
mov
mov
inc
fucomp
shl
adc
pop
dec
dec
inc
lds
add
push
aam
adc
jecxz
rorb
testb
sub
stc
xor
addb
test
int3
nop
mov
iret
dec
cmp
leave
inc
push
repz
jbe
lods
pop
sbb
or
dec
and
outsb
pusha
jle
inc
arpl
es
stos
jns
popf
out
mov
div
fs
fcmovb
adc
xor
fstpl
jns
pop
or
xchg
xor
mov
mov
dec
in
mov
fstpl
int3
sbb
xchg
cmp
icebp
insl
mov
pop
sub
popa
in
xor
add
jle
out
shll
movsl
or
dec
inc
push
pop
xchg
fcoms
adc
mov
jo
nop
leave
cmpsb
movsb
cmp
xor
ret
push
je
push
mov
test
test
cmp
dec
pop
xor
dec
mov
pusha
ds
mov
fs
or
shll
es
adc
cmp
stos
loopne
lods
sub
or
ret
ds
mov
dec
into
jp
xchg
dec
push
inc
shll
movsb
repnz
inc
roll
xor
mov
imul
out
sub
xchg
cmp
in
adc
or
ds
ss
pop
dec
pusha
dec
es
sub
jmp
mov
mov
fsubrl
push
fs
mov
mov
adc
test
scas
jbe
or
insl
sub
pop
arpl
stos
loop
ja
fnstenv
mov
arpl
sahf
andl
mov
xor
pop
lock
jg
and
fistpll
sbb
and
ficompl
in
sahf
and
sti
and
dec
lcall
stc
imul
sub
aam
and
add
into
sbb
insl
push
pop
mov
mov
ret
cld
sbb
jno
enter
fistl
rorl
divb
enter
mov
and
not
loop
call
fistpl
fxch
jl
cmp
in
push
pop
jne
aam
jnp
jbe
jmp
stos
cwtl
fildll
push
js
mov
cwtl
and
xchg
les
pusha
andl
jnp
xchg
add
pop
lods
mov
sbb
test
daa
subb
pop
cltd
test
ffreep
jge,pn
stos
scas
mov
sti
loop
aas
movsl
cmp
add
xchg
xchg
xchg
fsubrs
out
xor
xchg
pusha
out
ljmp
aam
fwait
adc
jb
aas
hlt
xlat
push
or
lahf
push
shll
push
dec
fbstp
fwait
xchg
imul
inc
repnz
dec
sub
push
lods
and
or
test
and
dec
mul
ds
push
add
pop
adc
sbb
mov
sti
jb
cmpsl
pusha
filds
pushf
mov
sub
loope
cmp
rcrb
adc
sbb
and
andl
popl
mov
jne
imul
pop
or
cwtl
repnz
cmp
xchg
lahf
xchg
daa
fwait
xchg
in
pushf
int
cmp
je
pop
dec
je
pop
inc
addr16
xor
sbb
mov
mov
aam
push
mov
int
pop
fists
shrb
movsl
adc
lahf
mov
mov
cmpl
sub
mov
pop
jge
subl
cmp
and
ja
je
mov
xchg
fadd
mov
cmc
push
push
add
or
inc
lods
mov
mov
mov
cmc
adc
gs
loope
jae
xchg
push
cmp
or
xchg
out
popf
je
mull
imul
icebp
adc
inc
leave
jno
jo
push
lods
mov
movb
fwait
pop
push
xchg
cmp
mov
cmpsb
mov
mov
sahf
cmp
dec
dec
pop
cmp
xor
cli
sbb
cltd
icebp
jo
fsubp
jge
ss
push
sub
dec
cmp
nop
inc
icebp
inc
mov
push
push
xchg
and
fwait
clc
xor
xchg
or
cmpsb
into
mov
lock
icebp
xchg
push
test
add
push
mov
mov
std
call
sub
mov
and
int3
xor
aad
dec
add
jle
sbb
cld
xchg
test
inc
pushf
stos
pop
mov
xor
insl
jnp
mov
xor
ljmp
xlat
jp
nop
pop
adc
rclb
xchg
sar
pop
add
cmp
pop
ljmp
cmp
or
inc
pop
enter
gs
jmp
cmp
int3
push
xchg
aas
aad
or
jmp
xchg
cmp
jbe
inc
cmpsb
aaa
fisttps
mov
lret
repnz
rol
pusha
sub
xchg
ret
push
repz
pop
cmpsb
mov
mov
xor
push
loop
rcrb
dec
adc
fildl
inc
cs
adc
fstpl
push
sub
or
push
daa
or
je
and
aas
or
xor
repnz
leave
mov
dec
pop
cs
pop
nop
call
ret
cltd
repnz
test
lds
test
lock
inc
cmp
adc
cmp
out
popf
sub
or
fdivs
mov
cmp
mov
inc
outsb
cmp
pop
mov
or
dec
jmp
in
sarl
imul
and
sbb
push
push
xchg
xchg
fistl
test
aaa
or
dec
cltd
xchg
arpl
rcrl
mov
popa
das
xlat
sbb
int
jnp
jmp
shlb
stos
fistpll
and
jmp
movsl
icebp
pop
lahf
call
int3
cmp
mov
mov
sbb
lcall
mov
decl
inc
insb
pusha
push
xchg
rcrl
push
mov
mov
test
lcall
nop
fndisi(8087
pusha
pusha
xor
into
cmpsl
push
mov
std
pushf
ljmp
xor
inc
iret
and
fsub
addr16
dec
fwait
cmp
out
cmp
adcb
in
stos
jo
or
jp
mov
mov
pop
fmuls
mov
jle
add
pop
out
jae
push
jno
loope
push
call
or
ret
xchg
dec
into
loopne
les
out
jle
jle
sub
push
std
jne
pop
push
sti
or
mov
mov
imul
out
push
sbbl
ret
xchg
int3
or
jne
adc
sub
sahf
push
sbb
pop
aad
stc
dec
mov
pop
test
and
dec
outsl
sub
and
xchg
rclb
jne
sub
xchg
call
xchg
xchg
push
sbb
inc
cmp
push
aad
nop
or
xor
sub
dec
cli
ret
mov
add
in
or
add
sbb
push
add
js
and
mov
jmp
pop
jbe
leave
add
dec
xor
inc
inc
add
add
xchg
add
cmp
iret
in
ljmp
and
or
popa
cmp
xor
xchg
aas
daa
cs
dec
mov
lea
inc
fsubrl
lcall
push
scas
inc
dec
pop
mov
pop
lods
sbb
push
out
pop
pop
cmp
call
jecxz
lock
sbb
or
je
js
in
notb
repz
jle
or
lcall
jo
mov
cmc
iret
mov
enter
daa
insb
sbb
sub
xchg
pop
jl
pop
mov
sub
cmc
cmp
push
rorb
inc
test
sarl
movb
push
cmp
add
in
and
adc
pop
scas
mov
lock
cmp
mov
or
push
lret
subl
push
adc
xchg
movsl
out
cld
pop
cmp
pop
lret
xchg
test
addb
xchg
dec
repz
sbb
in
or
sub
imul
test
mov
aad
sbb
pop
nop
pop
push
int
add
dec
incb
mov
dec
push
cmpsl
push
lahf
je
mov
daa
xchg
popf
cmpsl
orb
flds
mov
sub
sub
loopne
out
out
fsubs
lods
in
cwtl
mov
pop
popa
xor
imul
psubsb
in
popf
stos
daa
xchg
fldcw
mov
fwait
dec
sub
cltd
jl
or
stos
test
push
loop
stc
sahf
mov
xor
hlt
mov
jo
call
jo
in
or
inc
add
stc
xchg
lahf
insb
iret
pop
push
mov
out
pop
ret
int3
out
adc
cwtl
or
nop
in
fisttps
mov
cmp
repnz
rcrb
ljmp
ljmp
mov
ror
mov
cmp
orb
sub
jb
lret
cmpsb
stc
xchg
xchg
into
fistps
popf
jnp
fs
in
and
adc
pop
add
sub
out
push
adc
imul
xchg
or
call
stos
cld
cmp
jbe
sub
jb
cmp
lods
outsl
btr
push
fwait
shr
in
stc
out
adc
and
dec
fmuls
out
mov
imul
jl
fidivrl
xchg
jl
loopne
addr16
push
fst
add
outsb
jae
sub
push
rclb
fistpl
dec
imul
leave
jno
adc
xchg
mov
lcall
sti
jl
insb
ja
adc
pop
repnz
cmp
mov
pop
out
ds
dec
sbb
sbb
loope
adc
dec
pushf
imul
call
aaa
scas
movsl
or
fistps
cmp
sti
inc
dec
jno
fidivl
sub
cmp
jns
push
jno
cmp
das
or
call
fstps
lock
std
mov
pop
inc
into
jae
fbstp
cs
fdivr
pushf
lods
inc
add
sarl
aad
push
imul
dec
ss
add
dec
cmc
xchg
loopne
jo
sbbb
rorl
and
rclb
mov
cli
into
imulb
mov
out
call
mov
cmc
stc
out
push
and
icebp
test
pop
mov
js
idivl
xor
sub
scas
ss
push
add
out
sbb
mov
mov
cmp
and
shrb
push
push
jge
xchg
jnp
fs
test
jl
push
dec
jb
or
xchg
das
xchg
das
jmp
movups
pop
sbb
cmpl
pop
mov
scas
sub
in
dec
js
xchg
stc
stc
mov
sahf
cmp
pop
pop
test
xor
popf
ja
into
sbb
inc
add
sbb
roll
xchg
sub
cwtl
popf
or
jae
cmpl
xchg
mov
lret
xor
repnz
mov
leave
lds
push
inc
sub
cmp
push
pop
xor
sub
dec
mov
mov
faddl
jbe
aad
addb
add
std
mov
cmp
stos
ljmp
movsb
xchg
mov
pushf
sbb
mov
aam
mov
sbb
dec
imul
mov
lahf
mov
arpl
or
xchg
cmc
lret
dec
inc
xchg
xor
pop
cmp
cmp
daa
fcmovne
jne
out
add
das
mov
xchg
lea
mov
fistps
mov
cs
mov
ret
sub
fcompl
outsb
xor
test
jo
outsl
lahf
xor
lahf
push
pop
push
imulb
add
mov
mov
xor
iret
xor
push
ljmp
mov
nop
and
stos
fadds
inc
add
dec
mov
pop
sbb
fimuls
fs
insb
fistpll
sub
scas
jecxz
mov
push
js
xor
inc
pop
xor
lock
mov
push
fsts
sbb
jbe
push
cltd
adc
fwait
ret
jnp
inc
repnz
sub
mov
test
cmp
jp
pop
xor
imull
mov
inc
loopne
mov
lea
addr16
movsb
inc
outsb
xor
pop
pop
jge
testb
or
addr16
clc
add
adc
dec
jae
mov
fstl
mov
or
inc
xor
inc
inc
cmpsl
iret
stos
sti
mov
cmp
je
fcoms
lret
ljmp
jmp
sub
call
lcall
lods
das
into
pop
es
in
ds
and
xor
sbb
mov
xchg
sbb
pop
shlb
repz
or
adc
pop
clc
lods
lret
pop
out
test
jmp
add
out
shll
movsl
cmp
popf
push
lahf
jge
das
jg
inc
int
pop
out
test
clc
fwait
shrl
test
movsb
cmp
fists
jno
pop
xor
and
jno
dec
sahf
pusha
sti
clc
add
add
or
cltd
call
jbe
cld
sub
inc
cli
stc
sub
push
hlt
lods
jnp
mov
xchg
cmp
mov
sub
mov
in
insb
insl
jne
adc
loope
dec
aad
repz
jge
lahf
push
inc
xchg
sbb
mov
cmp
fmull
fwait
sub
or
pop
adc
lods
inc
mov
xor
sub
test
mov
in
xor
fwait
jbe
lret
pop
movsl
out
mov
aam
dec
in
ficomps
add
inc
lock
sub
and
mov
adc
or
jge
das
daa
xor
fdiv
ljmp
adc
in
inc
fs
cmp
outsb
mov
add
lcall
mov
ljmp
out
mov
mov
xchg
cli
or
mov
pusha
dec
ficoml
pop
add
add
xchg
cmpsl
cld
je
in
sarb
int3
cltd
sti
jo
test
lds
es
push
mov
in
int3
bound
cltd
sar
xchg
in
sbb
inc
dec
jne
adc
cmpsb
pushl
shrl
jp
cld
or
popf
xchg
mov
adc
insb
fcmovnu
jae
loop
dec
mov
xchg
xor
jp
aam
test
cmp
mov
fimuls
jecxz
lea
cmp
xchg
aaa
jo
das
or
xchg
cmp
pushaw
sub
fldl
fwait
mov
xchg
lret
pusha
dec
or
adc
push
clc
out
fmull
popa
andb
push
adcb
mov
mov
add
inc
outsb
sub
imul
dec
sbb
int
fucomp
adc
adc
mov
push
sbb
add
lds
cli
dec
fs
cmc
movsl
enter
push
pop
sar
data16
jo
loopne
sub
mov
ret
xor
sub
mov
out
cwtl
incb
out
xchg
adc
and
add
rorb
popf
out
push
pop
or
jae
or
xchg
mov
mov
xchg
dec
cltd
aas
add
cli
push
unpcklps
or
out
loop
in
add
inc
push
xor
sbbl
xchg
inc
rclb
xor
adc
in
cli
rcl
daa
vcvtdq2ps
imul
sub
popf
mov
mov
jo
sbb
aad
push
mov
pusha
mov
popa
fldt
xchg
test
mov
jg
sub
xor
adc
xor
daa
aaa
aam
fildll
sarl
mov
xchg
jbe
xchg
out
or
adc
data16
fcoml
cmp
aas
push
mov
xchg
popa
js
and
cwtl
xchg
mov
inc
push
and
xchg
pusha
daa
aaa
imul
add
or
xchg
movsb
pop
sub
push
jmp
aaa
dec
jae
inc
dec
push
pop
adc
xor
adc
mov
jbe
inc
lock
adc
xchg
mov
scas
or
hlt
es
or
mov
in
out
orl
imul
sbb
out
mov
shll
scas
shlb
mov
and
and
add
mov
cld
and
stos
fcompl
mov
mov
sbb
test
cmpsb
push
adc
popa
ret
add
jbe
mov
mov
pop
jno
xor
mov
mov
sub
cmp
xor
pop
outsl
out
mov
aas
lret
data16
mov
add
ret
fsubs
mov
pop
mov
push
fimuls
push
insl
imul
pop
jo
inc
clc
insb
lods
xor
push
xor
sbb
jno
aas
or
pusha
mov
jle
adcl
pop
clc
rorl
xchg
xchg
fwait
dec
mov
add
add
sbb
or
push
mov
cmp
jnp
dec
enter
lds
out
mov
jns
fists
push
xor
jb
sub
push
sbb
xchg
shr
jmp
ss
cmpsl
je
xchg
lock
jae
sub
stc
sti
pop
pop
or
pop
and
loop
push
lock
je
add
dec
add
loopne
or
xchg
jo
xchg
dec
mov
mov
sub
add
dec
mov
insl
mov
jg
mov
pop
dec
push
mov
aas
sti
sub
sti
xchg
cmp
es
adcl
insb
leave
inc
cltd
mov
adcb
cs
inc
lret
cltd
push
sbb
in
cmp
les
inc
notb
stos
fstps
popa
mov
mov
hlt
nop
cmp
jmp
mov
dec
dec
test
sahf
imul
in
mov
rcr
shl
inc
add
rclb
je
xorb
xchg
mov
leave
xchg
cltd
push
cmp
test
lea
jae
popa
xchg
iret
xor
vmwrite
xor
push
mov
adc
push
test
dec
movsb
popf
mov
shrl
push
lea
pop
js
jge
inc
adc
pop
mov
clc
inc
les
ret
jecxz
add
in
cltd
dec
mov
inc
lcall
lret
mov
xchg
push
pushf
inc
jecxz
insl
cwtl
js
rcll
pop
fadd
sahf
mov
dec
ret
cmp
test
into
test
jbe
inc
ficomps
out
lods
fstl
adc
lahf
test
sbb
clc
pop
mov
sub
jg
mov
mov
mov
popa
fsubrs
xchg
and
sbb
adc
xchg
dec
push
cmp
sbbl
lret
test
jb
das
add
mov
mov
push
mov
scas
pop
inc
sub
popa
sbb
jmp
mov
dec
movsb
push
cmp
mov
aad
add
aas
sub
xchg
sahf
xchg
jno
mov
pcmpgtw
jmp
in
pop
adc
dec
call
loopne
jb
mov
push
sub
testb
dec
xlat
aad
and
clc
push
sub
adc
loop
mov
cmp
and
cltd
pushf
aaa
and
dec
sub
enter
push
idiv
jle
xlat
sub
sahf
push
jns
or
pop
iret
xor
ds
outsb
jae
out
add
xor
mov
mov
fstl
cmpsb
ss
shrb
movsb
in
adc
mov
jae
xchg
fwait
call
jo
aad
fidivrs
xor
xor
xor
inc
pusha
xchg
popa
xor
pop
repz
lea
inc
pushf
xchg
lahf
xchg
cmpsb
cltd
mov
pop
pop
sub
fwait
inc
jmp
push
scas
iret
xor
popf
movsl
in
or
xchg
out
cmp
dec
inc
xor
dec
or
dec
call
adc
pop
mov
adc
xchg
mov
test
cmc
ds
jle
adc
pop
cmp
divl
out
test
int3
sarb
loopne
pshufw
xor
jl
sub
shlb
mov
add
jge
rclb
les
adc
fdecstp
pop
push
sbb
pop
jg
cmp
fnstcw
dec
xchg
xor
push
sub
sbb
in
jge
sbb
in
std
int
push
pop
jl
and
movsb
mov
xchg
and
cmc
mov
loop
aam
dec
ja
mov
jg
push
test
clc
inc
dec
or
hlt
insl
xchg
jns
mov
mov
sbb
cmpsb
test
es
mov
add
rcrb
ja
loop
outsl
lock
cmp
fdivs
mov
sub
ficomps
sti
imul
scas
push
mov
adc
ds
cmc
xchg
add
repz
lds
mov
call
jae
int
fisubrl
mov
jmp
pop
test
dec
in
lds
add
loopne
enter
xor
mov
jae
test
or
pop
clc
call
out
jne
ds
pop
adc
dec
xlat
cmp
jb
xor
push
cmp
cmp
std
pushl
or
ret
fiadds
mov
andb
and
pop
int
and
sbb
jne
sub
ljmp
mov
jno
imul
fdivrl
dec
mov
pop
test
call
dec
mov
cmp
push
mov
jbe
pop
cs
jmp
mov
push
pop
or
in
mov
push
lds
ret
jle
pop
out
dec
cmpsl
sub
fs
mov
adc
stos
cld
mov
or
enter
js
aam
jge
mov
xorl
cmp
clc
ds
push
ss
shll
sub
test
out
movb
push
cmpsl
aad
sahf
mov
dec
mov
mov
mov
and
or
testl
push
int3
dec
subb
push
pop
xchg
mov
xchg
xor
sbb
and
sbb
sti
gs
add
and
pop
jl
mov
jno
insb
pushf
mov
loop
dec
mov
fildll
add
mov
popf
hlt
add
adc
call
or
outsb
inc
gs
notl
iret
sbbl
adc
jp
test
or
cmp
add
jl
cmp
or
enter
iret
push
out
lret
cmp
mov
nop
out
push
cli
dec
mov
ds
scas
mulb
pushf
setle
pop
ror
cmc
xor
push
dec
and
jp
jb
jg
clc
leave
sbb
jo
in
test
dec
jne
mov
and
cmc
sbb
sbb
addl
jge
mov
dec
xchg
push
out
pushw
out
xchg
fsub
add
sbbb
cs
add
mov
lods
cli
mov
scas
or
pop
xchg
pop
lods
push
mov
mov
gs
pop
mov
das
push
jp
enter
xchg
je
sub
mov
cmp
mov
add
dec
in
mov
orb
push
loope
and
cli
or
iret
negb
iret
call
into
pop
and
push
cmpsl
mov
add
mov
lds
cmpsl
sub
lock
or
xchg
mov
pop
xchg
sarl
daa
fisubrl
icebp
mov
das
sub
and
pop
cmp
jle
insl
and
mov
pop
cli
jle
loope
rolb
repz
dec
xchg
mov
and
mov
cld
cwtl
xor
das
shrl
or
mov
mov
lods
inc
mov
clc
cmp
xchg
test
shlb
xchg
cli
bound
popa
imul
inc
shrl
xor
adc
in
mov
mov
bound
pop
cmp
pop
sub
push
in
pop
sar
vmovntps
dec
lahf
cmp
sub
mov
daa
mov
mov
sbb
xor
sub
jns
aam
jb
or
aam
mov
arpl
cmpsb
rclb
push
imull
sbbl
sub
xchg
fadd
enter
aaa
insb
lret
and
push
inc
cs
xchg
jns
sti
ljmp
jge
cmpsb
adc
jbe
fnsave
cmpsl
das
aad
sahf
push
jbe
or
ja
inc
push
insl
mov
xchg
xchg
rcrb
cmp
mov
pushl
popa
inc
adc
mov
insb
cwtl
fsubrs
bound
push
loop
inc
les
mul
xchg
adc
pop
sbb
jns
and
lods
aam
ret
ret
adc
dec
popa
test
addb
mov
aad
inc
dec
pop
sahf
loop
xchg
pop
aas
mov
jb
filds
mov
sbb
out
jno
cmpsb
mov
test
aam
fnstenv
wrmsr
inc
push
das
mov
dec
fs
scas
mov
inc
or
pusha
sub
inc
stc
inc
addl
mov
mul
push
je
inc
push
push
push
popa
and
js
or
mov
push
or
push
inc
sub
in
add
and
loope
cmp
test
mov
push
sub
stc
fsubrp
addr16
pop
cmc
les
je
mov
fsubp
xchg
push
dec
aam
xchg
cmp
cmp
mov
pop
xchg
inc
jns
fiadds
test
jl
out
inc
pop
xchg
xor
rolb
ds
int
push
and
xchg
push
inc
mov
push
push
jbe
frstor
xor
jne
fistl
ret
xchg
cltd
outsb
push
loopne
push
cmp
xor
mov
mov
pop
test
add
mov
fisubrl
fsubrl
cwtl
popa
and
jbe
pop
lock
rcrb
add
icebp
inc
mov
jnp
mov
dec
mov
cmp
rolb
pop
xor
push
jne
outsb
dec
cld
jbe
nop
and
xor
mov
in
fwait
xchg
hlt
push
lods
fwait
je
ds
mov
jmp
outsb
test
stos
xchg
test
mov
sarl
mov
js
stos
push
mov
sub
inc
cmp
outsb
mov
sub
mov
popa
repz
cmp
leave
mov
cmc
inc
add
mov
xchg
mov
mov
inc
pop
fs
popf
push
pop
cs
sbb
add
insb
push
and
arpl
gs
lret
jo
jmp
pop
mov
add
sbb
adcb
pop
fisttpl
scas
mov
stc
mov
shrb
xchg
xlat
adc
inc
inc
out
jo
inc
mov
out
pop
jb
mov
sti
push
imul
xchg
adc
push
xor
dec
les
inc
les
pop
ljmp
inc
in
mov
add
jl
pusha
ret
or
hlt
mov
call
pop
lret
inc
mov
aaa
push
fdivs
sarb
lods
push
iret
movsl
mov
pop
call
add
fistpll
push
add
lret
push
mov
mov
sub
inc
test
nop
and
sbb
push
pop
lock
or
lods
les
add
mov
mov
lea
enter
push
cmp
cltd
mov
push
fsub
testb
add
or
pop
cmp
mov
mov
xor
in
xchg
jno
pop
xor
and
mov
xchg
mov
pop
mov
push
scas
mov
xchg
and
lret
movsl
fdivrl
cli
xor
shlb
xchg
jb
adc
daa
xor
adc
xchg
xor
ss
sbb
mov
out
mov
mov
test
insl
or
je
stos
je
hlt
inc
mov
fbstp
or
cmc
shlb
js
dec
sub
inc
mov
pop
mov
mov
repz
mov
cwtl
stos
inc
xchg
cmpb
test
movsl
and
add
fildl
pop
inc
fadd
pop
inc
ret
clc
mov
out
xlat
inc
ljmp
and
inc
push
cld
push
and
sub
sub
or
jp
mov
xchg
mov
popf
mov
lret
jmp
jno
aad
aam
adc
js
rorb
data16
repz
cmp
lret
cmp
sub
daa
call
sti
sub
fcoml
fstpl
leave
pop
sub
mov
pop
jge
pushf
out
cmpsl
mov
movsb
adc
stos
js
daa
nop
in
xor
and
lock
jge
negb
cmp
jl
xchg
fnsave
dec
adc
add
std
mov
or
in
lret
mov
rcr
pop
lods
stos
inc
xlat
mov
sbb
cld
jns
mov
mov
shr
dec
es
dec
arpl
mov
test
adc
pop
or
inc
xchg
call
daa
in
xor
xchg
xchg
xor
stos
jbe
and
lret
aam
test
fwait
cmp
cltd
mov
int3
pop
int
or
sbb
cwtl
mov
aas
sbb
call
je
mov
nop
cmpsb
pop
lds
mov
jo
or
mov
mov
and
add
sbb
das
std
pushf
dec
imul
mov
cmp
mov
rcrb
je
pusha
ljmp
inc
dec
dec
mov
lret
enter
popf
push
or
add
pop
out
mov
fdivrl
lds
xchg
cwtl
cmp
ret
arpl
pop
mov
cli
outsb
lds
roll
cld
inc
or
icebp
push
aaa
test
pop
aam
outsb
sbb
mov
repz
push
push
arpl
fldl
sub
pop
lea
das
inc
add
jne
and
out
in
jb
jnp
dec
mov
out
or
dec
xlat
push
cmp
fst
sub
add
or
adcb
mov
push
das
dec
mov
ret
test
movsb
xor
bound
mov
pop
jne
pop
ret
ljmp
das
push
jp
lods
cmp
ficoms
sti
in
insb
jae
xchg
sbb
and
call
leave
dec
pusha
fbld
popf
inc
jne
pop
push
mov
hlt
xchg
mov
aam
or
ret
ja
ds
mov
sbb
xchg
nop
sub
lods
push
jmp
lock
mov
push
dec
mov
mov
movsl
imul
push
add
xchg
sbb
xchg
mov
in
in
fs
stos
lock
ficomps
sbb
repz
sahf
int
ds
fwait
mov
insb
jecxz
adc
test
or
jnp
outsl
stc
ficomps
mov
xor
push
pop
dec
test
int3
dec
adc
pop
xchg
inc
stc
push
adc
inc
and
insl
insl
cmp
aaa
hlt
ljmp
in
add
out
xchg
iret
aad
pop
xor
push
xchg
in
push
jo
fimuls
fmuls
jge
jl
out
inc
mov
sub
inc
dec
or
jmp
sahf
sbb
pop
pop
mov
xchg
mov
dec
mov
add
call
inc
lock
leave
out
jb
outsl
stos
out
push
arpl
push
fisubrs
add
jg
sub
jnp
mov
or
clc
daa
xchg
cmp
pop
test
xor
jae
sarl
push
cmc
mov
push
pushf
daa
daa
push
and
sbb
stos
lret
adc
jns
rcrb
and
and
dec
repz
push
fidivrs
lret
test
xor
ljmp
pusha
stos
jbe
test
and
pop
fs
fwait
dec
inc
cmc
jbe
xlat
testb
shlb
ret
lcall
jne
inc
out
ret
xor
add
cwtl
ret
shr
mov
jne
jecxz
inc
iret
stc
adc
mov
test
aad
je
rcrl
imul
cmc
mov
or
mov
les
loop
lods
add
add
sub
jecxz
loop
push
inc
je
idivl
mov
lods
jge
dec
aad
std
into
loopne
xchg
popa
aaa
push
sub
sbb
sub
xchg
jge
dec
or
jbe
mov
cwtl
mov
jns
dec
or
xor
out
mov
dec
add
cmpb
es
mov
and
lock
mov
adc
adc
or
sahf
loope
and
push
shrl
or
sbb
xor
in
jno
or
xor
pop
outsl
iret
fmull
aas
loop
daa
jo
addl
push
bound
call
jecxz
dec
out
inc
add
pop
roll
pop
mov
nop
mov
pop
inc
jl
or
inc
sub
bound
imul
leave
mov
jecxz
lret
enter
and
mov
fs
rcrl
jg
push
mov
in
nop
nop
mov
xchg
std
pop
adc
mov
out
mov
or
push
test
jbe
lock
out
out
testb
test
push
stc
jmp
aaa
jle
inc
ret
xlat
sarl
add
cwtl
shrl
sub
or
and
cmp
scas
xlat
aad
aad
stos
jbe
or
mov
xchg
xchg
sbb
sub
mov
ficomps
or
int
test
add
ret
cmp
test
jle
aam
dec
call
jg
aaa
in
in
mov
push
or
hlt
je
sbb
cli
adcb
pushf
cmp
jle
fucom
fs
mov
hlt
nop
push
out
inc
mov
lret
add
xchg
mov
aas
pusha
adc
sti
fldenv
jl
ja
inc
and
mov
push
cmpsl
subb
mov
cmp
fnsave
adc
xor
test
popf
sub
sub
xor
out
mov
inc
mov
cmpsb
adc
and
lea
ret
dec
mov
and
int
ja
insl
dec
sbb
lret
daa
cmp
test
repnz
lcall
popa
cwtl
jl
mov
xchg
pop
fs
rcrb
bound
xchg
and
fs
movsl
dec
cwtl
jmp
scas
shlb
push
outsb
push
mov
enter
mov
jae
cwtl
aas
jmp
nop
sbb
pusha
cmc
loop
sbb
pop
lahf
xchg
push
cmpb
loope
pusha
cli
movsb
xchg
add
sub
jns
iret
push
daa
xlat
jg
push
sub
jmp
fmuls
js
pop
or
int3
pop
pop
lds
xchg
out
inc
push
xchg
sub
test
sub
hlt
push
ss
ljmp
test
mov
xchg
xor
mov
in
xor
dec
inc
sub
fmull
int3
cmp
fisubl
jns
stos
push
sbb
imul
pop
lock
mov
insl
xchg
jnp
repnz
pop
bound
out
adc
vzeroall
pop
dec
leave
arpl
mov
nop
mov
lods
stc
sub
cmc
ret
jno
mov
call
ret
lret
or
lret
push
popa
or
mov
and
aaa
xor
lret
push
ret
add
pop
test
int
shl
inc
lea
call
inc
mov
in
insb
lock
das
aaa
lds
fidivl
push
mov
les
mov
scas
addb
lahf
outsb
cmpl
jns
cmpsb
push
and
js
pop
inc
mov
ss
scas
mov
mov
out
jns
pop
cmp
inc
shlb
ds
push
ljmp
cmc
dec
sbb
ficompl
sarb
test
mov
sbb
jecxz
aad
std
out
jne
je
add
scas
cmp
insb
adc
mov
sarb
push
icebp
push
arpl
sub
fldl
dec
clc
mov
nop
or
jns
jb
dec
or
xor
sbb
pop
jle
xchg
sub
les
idiv
mov
add
mov
imul
inc
stos
imul
or
out
in
fucomi
gs
adc
popa
icebp
js
dec
sbb
and
pop
bnd
add
add
call
dec
ss
imul
pushf
add
out
sub
sbb
adc
inc
out
inc
mov
cwtl
and
cli
pop
mov
das
xchg
mov
pop
push
movsb
xor
pop
sub
dec
or
ret
decb
add
aad
cmp
in
arpl
ja
push
sub
sbbl
jb
xchg
push
ret
std
dec
scas
fsubrp
mov
mov
dec
out
das
cmp
sub
cmp
mov
sub
sub
or
sub
inc
outsl
inc
pop
lds
pop
pop
inc
dec
in
jg
add
xchg
in
xor
ljmp
popa
lret
add
out
outsb
dec
ret
push
push
aas
jge
push
pop
or
lds
mov
roll
pop
jns
add
jnp
mov
jne
xchg
mov
lods
gs
movsb
inc
cwtl
out
xor
dec
add
adc
mov
test
into
mov
lret
cmpl
call
cmp
pop
and
shll
and
pop
ret
loopne
inc
sarl
adc
push
fistpl
dec
adc
inc
sbb
jno
mov
push
je
sub
jp
mov
jg
add
or
enter
movsb
aam
or
mov
push
imul
in
pop
lods
add
mov
movsb
into
pusha
pop
jb
pushf
fldpi
xchg
or
xor
xchg
pop
loopne
mov
lcall
pop
xorl
add
decl
rcl
jne
sub
jecxz
stos
xor
mov
cltd
sbb
adc
fdivr
test
cli
mov
xchg
call
es
jbe
dec
and
das
pop
jl
jmp
setno
in
ret
jmp
int3
test
pushf
jne
mov
mov
pop
cmpsl
adc
mov
loopne
lret
mov
mov
fcoms
or
adc
adc
call
pop
cmp
pop
xlat
cmpsl
test
jge
lds
sbb
imul
fidivs
stc
clc
mov
leave
mov
sbb
dec
jle
push
cli
in
inc
xor
jp
lahf
icebp
push
lock
push
xlat
call
ret
adc
jle
mov
inc
test
pushf
ds
push
and
mov
inc
push
and
mov
faddp
dec
xchg
stos
int
sub
fidivs
push
cmp
jp
fwait
jecxz
pusha
adc
mov
loopne
aam
js
cli
stos
or
push
outsb
jg
mov
cmpsb
ret
fsubrs
fdiv
jno
scas
mov
lret
xchg
mov
icebp
shl
lock
jns
in
jb
imul
fcomip
fbstp
cs
push
mov
xchg
test
je
pop
lds
dec
add
add
dec
xchg
mov
cld
jecxz
jb
adc
sti
leave
rorb
xchg
jne
data16
out
jp
mov
xor
js
cmpsl
adc
cmp
mov
or
scas
xor
rcrl
jo
aas
ret
xchg
mov
jge
mov
xchg
scas
outsb
xchg
jecxz
mov
mov
cmpsl
mov
sbb
mov
pop
dec
addb
aam
lahf
or
nop
idivb
push
out
negb
mov
loop
jo
dec
cmp
push
ljmp
jbe
add
ret
test
out
inc
insl
ror
jne
push
dec
stc
inc
or
int3
leave
jns
push
jecxz
xchg
bound
clc
loope
loope
insb
int3
pop
call
xchg
add
mov
or
push
imul
pop
clc
jno
add
stos
sub
pop
fucomp
sti
adc
mov
push
lea
push
imul
sbb
addl
adc
add
insb
and
xchg
lds
data16
test
mov
and
sbb
mov
jnp
inc
popa
ss
mov
pop
fadds
fstpt
shl
pushf
inc
insb
pop
shll
add
cmpsl
das
cld
das
je
mov
fstpl
in
mov
push
mov
jg
add
mov
iret
data16
sbbl
loope
push
pop
add
jno
push
nop
push
je
mov
popf
ret
and
push
mov
ja
inc
and
lea
dec
push
ljmp
xchg
mov
or
incb
int
cmp
roll
int
pop
xor
xchg
add
scas
sub
jge
rcll
iret
push
repz
pop
pop
ret
icebp
jmp
fsubr
cld
add
mov
int3
xchg
jae
call
ds
add
xchg
push
adc
les
lcall
arpl
call
fadds
bound
lds
daa
xchg
cmpsb
ficompl
adc
mov
xchg
sbb
xor
sarb
test
aad
repz
shl
push
push
popa
or
cmpsb
jecxz
lds
loop
mov
and
add
mov
daa
insb
shlb
and
mov
jp
xor
sub
cwtl
shr
out
cmp
in
loope
lret
jle
adc
pop
dec
xchg
sbb
fsubr
xor
pop
in
xor
daa
inc
and
imul
or
adc
iret
movb
and
sbb
dec
cs
dec
add
clc
jbe
insw
jne
xor
jae
push
aaa
lret
push
mov
repz
das
cmp
dec
xlat
mov
insb
mov
inc
stos
push
fs
lea
rcrl
mulps
rcrb
xor
push
sub
aas
cmp
mov
or
ja
xchg
push
movsl
sbb
dec
mov
sub
push
lret
daa
insb
inc
pop
mov
jne
mov
cmp
or
or
xor
mov
imull
xor
xor
lahf
stc
xchg
imul
jno
sub
nop
loop
bound
mov
dec
pop
add
jb
xchg
dec
fcomps
add
cmp
lock
int3
add
out
jl
jp
repz
fsubp
push
jecxz
ja
movsl
shl
dec
das
loopne
filds
sbb
sub
inc
adc
bswap
pop
xor
test
fsubrl
xchg
push
xchg
dec
aam
sbb
jno
out
in
das
lea
lea
jnp
mov
xor
out
gs
xchg
cwtl
adc
iret
sub
xchg
or
pop
cmpsl
testl
test
xor
aam
mov
push
jno
hlt
mov
outsb
and
outsb
sbb
adc
int
scas
sub
dec
mov
jp
xchg
ja
insl
sbb
xchg
loop
jle
pop
jnp
adc
ds
mov
lcall
xchg
push
xchg
adc
enter
ss
pop
je
push
xor
adc
mov
or
push
pop
into
jmp
out
cmp
pop
stos
inc
and
inc
dec
sbb
adc
xor
cmp
mov
mov
adc
jl
xchg
sub
and
xlat
add
lcall
sbb
ss
ds
insl
or
test
pusha
cli
xchg
mov
and
xor
xlat
lret
leave
xchg
fcomps
inc
imul
std
cs
jne
or
lret
pop
lods
hlt
xlat
cs
insl
stc
mov
fwait
xor
jle
jecxz
es
hlt
jg
daa
inc
enter
into
test
push
insb
pop
inc
sahf
mov
roll
movsb
aas
push
cmc
sahf
insb
cwtl
mov
sti
aaa
std
mov
test
mov
pop
outsl
enter
repz
mov
scas
mov
pop
popf
cltd
mov
test
xchg
int
pop
mov
aaa
das
lahf
jecxz
mov
dec
push
mov
mov
or
and
repnz
enter
cmc
test
rcl
mov
mov
lcall
sbb
out
in
adc
or
inc
sbb
inc
and
mov
cmp
pop
das
icebp
rorb
sahf
cltd
sub
iret
sub
cwtl
in
and
fisttpll
int
or
cmpsb
or
adc
sti
xchg
lods
push
or
xor
sub
lret
lock
jne
push
mov
arpl
lods
pop
lock
sbb
and
add
into
mov
cli
and
mov
daa
and
loope
adc
cmc
cmc
shl
loopne
xchg
dec
repnz
cmpsb
ja
mov
mov
scas
push
es
inc
xor
xor
push
out
xchg
bound
dec
push
ficompl
sub
adcb
mov
mov
jecxz
popa
inc
xlat
push
cmp
inc
fcomip
pop
push
mov
jl
movsl
and
fmuls
fs
repnz
lock
xor
mov
push
test
call
imul
fisubrl
jl
test
inc
add
ss
in
pop
inc
adc
pushf
dec
in
mov
push
fsubs
xchg
lahf
cmpsl
in
jns
lds
lahf
mov
aaa
cmp
stos
out
jle
pop
pop
pop
repz
cmpsb
jg
push
cmp
movsl
adc
mov
jp
inc
and
sbb
insb
stos
sub
addr16
mov
mov
je
push
repnz
or
sbb
cmpl
sub
imul
jg
pusha
add
clc
xchg
push
test
rol
sbb
in
stos
out
mov
ret
adc
mov
jl
shr
push
push
and
and
lret
xor
inc
add
pushl
mov
pushf
mov
loope
jns
or
pop
lahf
test
xchg
daa
push
repnz
test
or
out
adc
cmp
mov
xchg
and
sub
or
lret
aaa
pop
add
les
inc
je
out
mov
popa
mov
repnz
mov
data16
sbb
rcrl
popf
std
jg
sbb
mov
jae
es
mov
addps
fnstsw
test
bound
sbb
les
cs
movsl
in
xor
add
popf
pop
dec
test
add
adc
rclb
out
jp
or
dec
stos
call
sti
sbb
jne
ljmp
mov
push
aas
pop
stc
cmp
sbb
jo
cmpsl
sar
pop
faddl
inc
ret
adc
cmc
fldt
add
idivl
stos
push
das
clc
xchg
ljmp
mov
cltd
les
xchg
inc
sub
xchg
lea
cmc
std
ret
fwait
jne
popf
mov
pop
nop
mov
ja
fs
cltd
mov
pop
fs
ds
lahf
mov
ret
xor
sarl
sarl
add
fimull
dec
add
mov
ds
sahf
and
xor
out
mov
adc
mov
push
leave
jg
xchg
int
sarb
dec
mov
lods
outsl
sub
and
dec
pop
xor
cmp
push
dec
fimuls
repz
and
and
pop
mov
push
loope
pop
pop
into
mov
add
push
dec
orl
xchg
ret
sub
rclb
mov
xchg
adc
lret
int3
rclb
sbb
mov
out
outsb
fs
and
out
dec
dec
xchg
push
ficomps
fistpl
das
nop
ds
in
xor
push
mov
adc
jne
jmp
fisubrs
mov
mov
dec
call
sub
test
and
into
cmpsl
xlat
jne
pop
cli
hlt
ret
inc
jle
cmpsl
loop
sbb
shll
pop
je
push
icebp
xor
push
insb
sti
cmp
dec
mov
inc
lahf
popa
jb
jnp
popf
xchg
jne
and
jns
and
das
rcll
loope
mov
or
ss
xchg
aam
and
jns
mov
lods
xchg
loopne
fdivs
pop
stc
lahf
jnp
inc
pushf
out
jmp
test
jne
ja
lods
sti
jo
addl
mov
addr16
mov
cs
xor
cmpsl
add
cmpsb
mov
test
xor
pushf
or
jb
cmp
js
jg
sub
hlt
sahf
jmp
out
ret
xchg
jne
cwtl
jns
dec
pop
pop
xchg
mov
adc
sub
jae
inc
pop
pop
js
les
lock
std
movsl
push
mov
add
lds
mov
jae
push
es
jnp
xor
adc
push
xchg
jl
lods
test
out
sbb
mov
push
enter
xor
mov
dec
ret
movsb
sbb
xchg
leave
cmp
pop
dec
mov
jecxz
mov
cli
ret
fdivrs
and
inc
je
mov
shrb
pop
or
cs
xchg
fisubs
jo
or
push
rorl
sbb
push
addr16
fs
mov
xchg
ljmp
rcl
xor
push
in
and
mov
ss
or
popa
xchg
xor
mov
sub
xchg
mov
inc
shll
xchg
mov
mov
inc
es
sub
xchg
ss
push
add
push
adcl
hlt
or
and
aas
xchg
scas
fimull
mov
adc
cmp
push
jbe
cmp
fisttps
out
aad
out
or
cmpsb
inc
pop
mov
stc
clc
insb
fidivrl
xchg
popf
ror
push
xor
arpl
adc
adc
shl
jp
mov
sbb
push
add
sub
pushf
inc
int
inc
or
adcl
stos
cmpb
or
out
rcrl
inc
icebp
jbe
mov
popa
andb
cltd
insb
add
sub
push
mov
sub
call
jl
notb
xchg
cmc
inc
and
push
sti
je,pn
dec
mov
sahf
ja
or
insl
mov
inc
lret
cmp
push
test
mov
mov
mov
testl
fs
cmp
clc
int3
mov
push
xchg
adc
push
and
movsl
aad
hlt
cmpsb
inc
imul
adc
xchg
repnz
xchg
insb
adc
xor
adc
ds
cmpl
cmpl
dec
jno
cmp
push
dec
cmp
inc
clc
xor
xchg
mov
mov
insb
mov
jb
cmpsb
les
stos
arpl
hlt
xchg
jb
or
pop
dec
fists
jmp
adc
ljmp
jp
rcr
adc
xor
repz
xor
jl
outsb
lahf
enter
gs
scas
and
pop
cld
data16
sbb
lock
push
adc
gs
mov
rol
push
push
bound
sbbl
enter
mov
repnz
fsubs
inc
loope
add
add
mov
pop
orl
addr16
sbb
gs
xchg
stos
or
push
stos
sub
dec
negl
mov
push
in
aam
imul
mov
out
inc
or
test
aad
hlt
sbbl
push
lea
jl
fnstcw
cmp
mov
into
insl
mov
mov
sarl
push
sub
mov
add
sbb
out
push
mov
pop
je
or
inc
or
push
pop
push
movsb
inc
mov
lret
arpl
cmpsb
add
leave
or
movsb
dec
pusha
enter
jbe
test
push
outsl
xor
and
cmp
sbb
int3
insb
dec
icebp
mov
cmp
inc
rorl
jle
fisttps
or
sbb
ljmp
mov
xlat
aas
pop
push
mov
imul
pop
stc
and
jp
negl
sub
add
imul
mov
imul
inc
jno
cmp
or
lret
mov
outsb
inc
push
jne
xor
cli
lods
orb
call
mov
xchg
inc
push
cmp
dec
leave
addl
jmp
push
data16
sbb
or
jne
or
ret
sbb
nop
popf
loope
loopne
jl
pop
dec
adc
rcr
cmp
jo
into
push
cmp
push
rep
push
loop
je
pop
xor
sub
mov
jo
sub
or
and
xor
or
jge
out
mov
fisubrl
and
aam
outsl
adc
aaa
pop
mov
push
sarb
add
pop
pushl
loope
pop
xchg
xchg
push
bswap
jne
aam
dec
loopne
push
and
fsub
push
xor
notb
inc
inc
loopne
jnp
jns
mov
shrb
dec
subl
ss
and
ss
addb
test
or
lret
xchg
mov
adc
and
dec
jge
mov
add
push
lds
jns
mov
cmpsb
pop
lahf
cld
sub
ja
adc
sbb
data16
xchg
sbb
jl
clc
cmp
dec
out
xor
lock
add
clc
sbb
fists
dec
insl
adc
jns
jp
ss
rorb
mov
outsb
outsl
dec
stos
inc
mov
int
daa
fldenv
dec
cmc
shll
sub
ljmp
rcrl
sti
fcmovb
mov
xlat
arpl
mov
jg
test
mov
leave
cltd
popf
xchg
fdivrs
pushf
iret
insl
into
fiadds
adc
dec
arpl
loop
out
jl
lcall
arpl
add
and
mov
cmp
xchg
call
xchg
push
out
movsl
xchg
in
imull
add
fnstcw
clc
push
mov
cltd
dec
jno
loop
outsb
std
insb
xor
adc
sbb
fisubrl
loope
cmp
and
push
loopne
int
and
in
inc
pop
push
pop
into
cmp
call
push
ret
xor
andb
stos
jg
iret
pushf
frstor
ret
popf
jns
test
repz
clc
or
mov
and
lret
adc
clc
cwtl
popf
les
mov
mov
or
add
jmp
sub
orb
push
nop
and
test
xlat
addr16
and
fcoml
xlat
xchg
xor
lds
adc
dec
push
push
mov
filds
into
push
jbe
out
jns
into
cmp
mov
sub
add
inc
inc
dec
loop
adc
push
mov
jecxz
into
imul
dec
pop
lods
dec
jns
and
rcl
push
imul
cmpsl
lahf
cli
or
sub
data16
dec
push
pop
loope
cs
and
xor
stos
and
jnp
dec
fnstcw
aam
jns
cmp
enter
inc
or
repnz
cmp
mov
push
mov
sub
cli
stos
mov
inc
fs
inc
or
jno
mov
mov
mov
add
adc
pop
out
push
aad
adc
add
mov
add
rolb
enter
jo
stos
pop
pop
stos
add
pop
mov
aam
dec
mov
or
cmp
jp
fdivp
adc
adc
andl
out
inc
adc
jecxz
daa
pushf
in
pop
scas
lret
nop
xchg
enter
add
les
out
jo
loopne
js
enter
push
test
rcrb
push
adc
sbb
out
aad
mov
push
sbb
sub
gs
cmp
loope
loope
pop
xor
imulb
orl
xor
mov
cmpsl
or
inc
lods
repnz
mov
jo
or
pop
in
mov
adc
sbb
dec
add
inc
mov
iret
jbe
xchg
mov
mov
test
ret
cmp
lret
movsb
ret
orb
push
imul
or
insl
and
inc
insb
push
mov
je
jmp
in
xchg
or
inc
cmp
mov
fidivrs
test
inc
pop
adc
pop
sbb
cmp
pop
push
mov
scas
jge
clc
stc
jno
adc
and
pop
adc
test
je
mov
adc
shll
mov
pop
shrb
in
push
jl
mov
add
jl
inc
lds
stos
enter
cmp
nop
movsl
adc
fs
fimuls
inc
jne
jmp
push
xor
enter
pop
xor
bound
in
cmpsl
mov
ljmp
inc
jno
inc
cltd
cmpsl
into
es
insb
jg
lods
dec
aam
lea
mov
and
fisttpll
nop
insl
push
aam
or
mov
js
std
loop
mov
loope
xchg
push
jne
addr16
dec
xchg
push
sbb
fdivl
add
popf
add
outsb
inc
xchg
and
cmp
inc
mov
push
in
int3
sub
mov
push
scas
out
in
pop
stc
cmp
or
push
mov
jne
idivl
ja
or
ficomps
sti
push
or
cmpl
cli
xor
jl
cmp
pop
mov
decl
push
or
push
cmp
pop
jmp
test
and
sub
xchg
roll
push
jle
fldt
addr16
mov
push
cmpsb
out
sbb
fisubrl
gs
iret
test
mov
mov
je
push
jle
sbb
jae
xchg
lahf
shlb
cmpsb
mov
mov
cmp
lret
in
push
repz
das
push
xchg
imul
mov
dec
push
popw
pop
jns
pop
std
sbb
fs
cmp
inc
filds
pop
std
xchg
adc
jae
test
je
mov
lods
xlat
lret
loop
std
stos
jge
pop
push
repnz
mov
leave
sub
push
push
xchg
adc
cmp
inc
cmp
idivb
imul
jge
sub
or
pusha
aad
pop
std
sub
fdivrl
fsubrp
mov
popf
xchg
lods
dec
cmp
mov
push
xchg
sbb
and
dec
aas
cld
in
pushf
xorl
sub
jg
scas
maskmovq
negl
sub
or
outsb
jmp
and
and
pop
or
sbb
push
idivb
xor
addr16
shrl
pop
adcb
cmpsl
fs
and
mov
sub
jb
out
mov
data16
test
pop
mov
jle
outsl
xchg
jl
mov
mov
jb
xor
fs
pop
fisubs
xchg
xchg
je
dec
leave
mov
adc
jg
pushf
sarl
cmc
sbbb
scas
nop
mov
aas
and
sbb
sbb
pop
and
adc
lods
pop
stc
outsb
pop
push
cmp
rorb
int3
shll
cs
mov
fdivp
sbbb
adc
arpl
xor
mov
cmpb
popf
pusha
test
je
aas
mov
pop
dec
cld
xor
vpaddsw
adc
push
xchg
jp
xchg
enter
jae
mov
push
lret
rcll
cli
aad
jb
pop
and
adc
sub
push
sub
jp
mov
sub
dec
decb
sbb
addb
pop
or
push
mov
repnz
testl
lret
jae
xchg
add
push
xchg
mov
xor
mov
scas
adc
adc
jp
insl
add
mov
or
adc
mov
cmp
arpl
push
shrb
rcl
jl
pop
pop
test
dec
cs
mov
cmp
fldl
test
into
pop
mov
mov
cmpsb
lds
cmp
sbb
mov
loope
pop
push
ret
lfs
ljmp
inc
ds
add
pop
daa
aam
aad
sub
mov
lods
push
fwait
rsqrtps
flds
repnz
out
gs
jp
and
inc
shlb
data16
std
movsl
mov
inc
adc
jns
or
push
mov
cmpsb
lods
xchg
addl
dec
adc
jecxz
fs
mov
cmp
cmp
pop
mov
jl
hlt
sub
mov
or
leave
xor
xor
jns
jno
jl
and
push
mov
mov
imul
lahf
add
push
scas
iret
hlt
dec
lret
lods
mov
sub
fisubrs
dec
icebp
push
sbb
or
push
daa
popf
into
push
jle
cmp
jb
mov
mov
mov
sbb
mov
cmp
shll
ds
int3
or
adc
bound
ret
mov
and
ret
dec
test
xor
push
or
imul
fsubr
daa
jno
xor
xchg
xchg
or
es
dec
mov
push
cmp
push
jp
and
pop
inc
jp
jne
out
aas
lock
pop
test
sbb
inc
jno
cs
add
mov
lret
lret
sarb
std
lcall
test
inc
hlt
sub
jo
add
jmp
es
mov
inc
stc
jnp
mov
xor
jno
xchg
sbb
fadd
fimull
push
sub
push
sub
add
push
sub
outsb
sub
adc
call
popf
and
pop
mov
mov
fcomip
jle
push
out
pop
lods
pop
mov
cli
inc
sub
or
into
fstpl
sub
and
in
xchg
repz
pop
mov
add
xchg
sbb
pop
cmpsl
nop
push
ret
add
cmp
jae
idivl
lcall
sahf
aas
loope
lds
dec
cmp
addr16
xor
mov
lret
loop
jae
pop
and
push
aaa
jbe
xor
adc
pushf
ret
imul
scas
pop
into
add
xor
and
cmp
lea
sub
xchg
push
out
jp
xchg
imul
and
cmp
and
lock
cld
bound
lds
ja
loopne
push
pop
lds
or
jg,pn
sbb
xorb
iret
repz
pop
test
roll
sbb
mov
dec
mov
lcall
xchg
or
and
cli
pushf
fcompl
arpl
mov
sbb
jo
add
and
jle
gs
inc
sub
dec
dec
xchg
mov
arpl
mov
shlb
push
pop
dec
mov
mov
addr16
shrb
xchg
jne
xchg
cmp
imul
int
data16
jge
fmull
in
ret
movd
shll
cs
bnd
jmp
jmp
add
mov
mov
jmp
inc
sbb
push
xor
add
jne
add
pop
adc
sti
sbbb
xchg
testl
push
jmp
scas
call
into
mov
mov
sub
loopne
call
mov
xor
sbb
orb
mov
jbe
stos
bound
pop
dec
movsb
xor
push
mov
mov
jno
pop
mov
add
and
fistpll
scas
data16
lock
push
xchg
sbb
mov
gs
add
lock
push
push
pop
jb
add
test
mov
shll
lea
cmp
adc
adc
mov
stos
xor
mov
sub
lock
pop
cmpsl
add
push
add
icebp
and
and
popf
jmp
icebp
mov
jb
popf
subl
std
je
cmp
mov
pusha
movsl
ret
lods
push
outsb
xlat
add
cmp
pop
rclb
sbb
add
xor
outsb
int3
pop
int
int
add
rorb
mov
add
ret
jnp
mov
mov
lret
pusha
sub
and
sbb
in
adc
dec
jne
aad
fcoms
mov
xor
pop
mulb
sub
scas
aad
mov
jg
bnd
into
cli
hlt
push
fsubrs
inc
pop
mov
icebp
pop
lods
sub
jne
insb
mov
mov
fisttpll
xchg
xchg
movsbl
popw
mov
xchg
cmpsl
cli
lcall
sub
add
leave
in
aaa
fstpt
enter
mov
data16
cmpsl
divl
add
out
jo
fs
push
loope
stc
inc
jns
imul
movsl
stos
sbb
pop
dec
jae
mov
sbb
fsubrs
xor
cmpl
test
ja
fists
mov
lock
out
pushf
jp
jbe
loop
sub
inc
push
push
mov
mov
add
fdivs
adc
sub
lds
mov
scas
inc
icebp
mov
repnz
imul
xchg
in
out
xor
outsl
cli
das
rolb
mov
inc
pop
push
stc
mov
andb
aad
out
mov
fs
mov
out
push
leave
mov
adc
call
in
fwait
mov
dec
or
add
nop
sti
jno
jae
jecxz
aas
out
cs
push
loop
add
mov
xor
sub
rorl
in
iret
pushf
adc
outsl
in
jmp
cmp
hlt
jp
mov
and
pushf
xchg
rcrb
mov
pushf
insl
mov
std
jo
aam
aas
ret
sub
push
mov
out
mov
dec
std
xchg
sbb
ljmp
add
fnsave
nop
and
pusha
push
in
les
loope
icebp
mov
mov
rcrb
cmc
jg
popf
pop
jne
dec
lods
lret
pop
out
stos
lods
loope
or
add
negb
jo
test
mov
adc
iret
popa
or
or
add
mov
mov
mov
mov
and
scas
cmpsl
cmp
call
pop
subl
dec
inc
sbb
sub
ljmp
cmpl
or
cli
dec
ss
outsl
pop
aam
inc
pop
cmpsl
lods
orl
pop
fistl
enter
dec
sub
enter
bnd
push
imul
bound
adc
test
mov
mov
xchg
xchg
and
adc
or
pop
inc
out
ds
idivl
push
cld
sub
pop
insb
jge
pop
hlt
and
push
js
xor
jnp
mov
sub
xchg
mov
mov
or
repz
iret
xchg
test
ds
cmp
pop
movsl
add
sub
addr16
push
dec
flds
ret
popf
jne
fs
cmp
pop
fisubl
fldcw
movsl
mov
test
xor
mov
ljmp
push
add
jnp
cmp
push
sub
adc
addr16
sub
adcb
imul
push
jge
enter
pop
and
rcrb
cmpsl
sub
push
cmp
push
mov
mov
sbb
dec
push
push
cmp
stos
daa
xor
dec
adc
mov
fcomps
das
lods
push
sub
ret
faddp
adc
sbb
stc
bound
adc
cmpsl
xchg
xchg
push
sbb
jg
mov
sub
adc
xor
mov
imul
test
mov
jmp
mov
push
inc
nop
push
push
inc
addr16
aam
jmp
pop
test
clc
mov
orb
sbb
dec
test
movsb
pop
lds
dec
mov
and
inc
popf
andb
cmp
inc
push
es
inc
jg
in
cwtl
test
adc
sub
mov
notl
push
mov
sbb
iret
and
shr
sbb
ljmp
lahf
mov
out
cmp
cmp
mov
subb
pop
test
stc
and
out
ljmp
add
addb
sub
xchg
jno
add
in
test
lds
push
in
cmc
fs
cmpsb
repz
add
les
mov
xchg
dec
mov
jmp
inc
xchg
dec
daa
adc
or
popa
xorb
out
sub
repnz
adc
push
push
cmp
xor
pop
iret
rcrl
fwait
sbb
sbb
imul
ds
lods
xchg
adc
or
inc
inc
out
pop
inc
in
shrb
testb
sbb
add
sbb
mov
aas
enter
push
sbb
xchg
xor
loop
xor
ret
mov
fcomps
push
outsl
add
test
clc
out
and
pop
enter
test
aaa
into
fscale
pop
xchg
inc
lods
ds
cli
mov
or
pop
lret
mov
pop
or
fcmovnb
push
clc
testb
in
call
mov
fldl
jg
adc
jl
loop
or
adc
shll
lahf
call
je
cld
sub
adc
mov
pop
push
aas
xor
dec
or
add
pop
pop
push
out
sbb
add
mov
xor
fwait
testl
xor
loopne
shrb
push
mov
push
dec
test
or
fiaddl
into
jg
push
cwtl
xor
jp
sbb
iret
mov
int
jmp
cmpb
push
outsb
nop
sub
or
jb
and
fistpll
pop
in
pusha
insl
push
pop
pop
and
ret
out
pop
push
pop
push
idiv
pop
ret
repnz
data16
sbb
rcr
test
arpl
lahf
movsl
xchg
pushf
into
push
popa
push
adc
and
mov
hlt
cwtl
jl
lret
mov
imulb
shll
lea
inc
inc
jb
loopne
cltd
ljmp
inc
int3
data16
mov
sub
push
ja
roll
adc
add
push
inc
push
xlat
rorb
pop
adc
aaa
imul
mov
lods
popf
outsb
notb
push
mov
push
scas
mov
fiaddl
pop
push
push
aaa
scas
mov
inc
iret
xor
pop
cmp
call
nop
insl
pushf
fidivrl
lods
pushf
dec
into
pop
push
call
mov
fsubrl
add
sbb
ja
add
aaa
scas
jb
repnz
rorb
sub
sbb
jge
dec
xchg
mov
out
adc
int
testb
push
sbb
and
add
and
inc
jl
sbb
sarb
int3
mov
test
push
lret
pop
mov
jb
xor
and
test
xchg
mov
movl
mov
sub
mov
repz
icebp
jae
mov
push
sbb
xchg
je
mov
jns
sbb
adc
mov
cmp
pop
push
jb
xor
add
dec
mov
adc
mov
xor
dec
mov
mov
jmp
adc
xchg
and
mov
aam
aas
sbb
out
insb
sbb
test
in
sahf
jne
dec
add
mov
lcall
xor
or
ret
jle
add
in
bound
sahf
popa
lahf
dec
js
inc
mov
sbb
std
jle,pt
jp
jmp
dec
xchg
in
sbb
mov
pushl
mov
jns
insl
adc
lahf
lea
push
cmpsb
subl
sub
pop
xchg
bound
mov
push
bound
inc
je
fimuls
cmp
add
fsub
sbb
xchg
notb
imul
inc
sub
jp
xorl
pop
nop
sbb
es
cli
leave
mov
adc
mov
xchg
adc
jne
sti
adc
jmp
int
out
repz
fimull
sbb
pop
imul
sbb
rcll
mov
adc
adc
sub
jmp
cli
lods
jecxz
sahf
divl
or
mov
cmp
and
xor
adc
testb
sti
push
hlt
leave
xchg
ja
es
pop
popa
pop
xor
pop
imul
outsb
jb
loope
ret
loopne
xchg
rcr
push
dec
jl
dec
fs
jp
sub
std
dec
ss
shrl
sub
in
inc
mov
fs
sbb
cmpsl
fxch
subl
dec
or
mov
call
xchg
cmpsl
popa
call
mov
leave
das
rol
test
sahf
call
xchg
faddl
cmp
insb
lods
int3
repnz
mov
adc
adc
movsl
sbb
cltd
loopne
mov
mov
push
nop
movsb
mov
or
xchg
push
push
mov
sub
ja
jmp
lods
sbb
xor
aas
or
xchg
jmp
jg
and
mov
sahf
mov
jbe
fwait
aam
pop
fnop
lcall
sbb
push
sbb
cwtl
push
les
inc
and
aam
push
xchg
jns
fwait
adc
push
cmp
xchg
xor
lods
fistpll
or
inc
mov
sub
pop
lods
or
ss
imul
jno
sub
pop
adc
in
aam
rclb
sub
sti
sbb
push
push
movsl
daa
push
add
pop
or
rcrl
sbb
add
mov
cmp
sbb
mov
sub
push
xchg
dec
inc
addr16
xchg
inc
imul
orb
gs
bound
sub
insl
imul
bound
jae
mov
xor
mov
push
sbb
out
push
sbb
mov
imul
outsb
in
std
jnp
ret
inc
mov
out
mov
pop
add
inc
fwait
pop
cmp
mov
fs
push
xchg
shll
nop
push
xchg
cld
or
mov
push
cmp
and
push
gs
pusha
xor
push
adc
xchg
in
mov
add
jl
lcall
les
dec
xor
pop
lcall
lods
inc
xchg
lds
loop
aad
leave
add
adc
outsl
aad
adc
push
dec
jb
push
decb
mov
jmp
cli
xchg
into
push
adc
sbb
cld
sbbb
jbe
shll
or
aam
cltd
in
sub
movsl
popf
dec
data16
test
lock
xchg
jl
inc
sub
cmovne
mov
cmp
jmp
pop
or
lcall
pop
adc
mov
and
inc
dec
stos
movsl
sbb
xchg
or
rcll
sbb
lea
insl
je
push
sub
pop
jmp
fmul
ds
movsl
fstp
call
jae
out
lret
lahf
mov
ffreep
inc
in
test
mov
cmc
adc
pop
cmpsl
sub
sub
aad
fisubl
jg
movsl
sbb
cld
movsb
lahf
and
prefetcht1
rcrl
outsb
pop
mov
std
ds
jae
pop
inc
test
sbbw
cmp
stc
ja
lcall
call
adc
test
sub
outsb
ja
lea
jae
xor
add
push
fs
cmpsl
arpl
and
inc
xor
jae
lds
mov
xchg
xchg
adc
aam
negb
in
mov
jmp
xchg
adc
adc
and
mov
rorb
adc
xor
aaa
les
pop
mov
dec
inc
jb
aam
iret
sti
pop
jmp
cmc
sub
adc
cmp
dec
out
mov
cwtl
dec
bound
flds
add
xlat
imul
int3
dec
mov
inc
fwait
nop
pop
popa
jb
mov
jmp
repz
xor
and
inc
outsl
ret
cmp
mov
sbb
bound
adc
jle
stos
outsl
mov
js
push
nop
stos
push
call
fildll
push
pop
mul
iret
shlb
pop
inc
sbb
sbb
mov
out
std
subb
cwtl
jl
cltd
xor
clc
sbb
movb
aad
sbb
xchg
pop
daa
mov
inc
xchg
pop
aaa
mov
inc
push
je
sti
mov
fidivrs
stos
sbb
ret
lock
mov
in
jmp
push
adc
xchg
fidivrl
push
out
and
push
jbe
adc
sarb
addr16
pop
bnd
xchg
cmp
icebp
cmp
int3
sbb
aam
out
jp
fidivrs
xchg
stos
sbb
fwait
inc
inc
push
push
xchg
xchg
xor
sbb
dec
je
mov
loopne
call
pop
in
push
stc
xchg
aad
push
out
pop
mov
aas
ret
mov
sbb
negb
loope
out
pop
mov
jmp
push
push
pop
aad
ds
mov
adc
xchg
shll
add
mov
mov
inc
filds
xor
mov
mov
cld
cltd
je
dec
popa
into
and
scas
ret
xchg
js
rol
cwtl
mov
leave
sbb
or
stc
inc
cwtl
cmp
xchg
fnstcw
sbb
rcr
jmp
inc
pop
push
dec
dec
cmp
xchg
or
and
icebp
les
insl
pop
xor
aas
data16
js
mov
cmc
mov
lret
out
pop
cmp
cmp
push
rcrl
dec
outsl
mov
in
out
fisttpl
in
and
loop
inc
jb
adc
pushf
mov
ja
mov
inc
out
sub
ret
nop
fcomi
or
dec
das
push
jbe
add
out
rol
xchg
sbb
inc
sub
stos
mov
dec
les
pop
aam
testl
test
sti
mov
xchg
cld
outsb
sarb
push
mull
insb
in
pop
ss
add
test
sbb
push
mov
sbb
inc
aad
insl
or
loopne
mov
push
lahf
inc
inc
shll
scas
jb
js
push
repz
push
mov
loopne
test
out
xor
gs
xor
out
cmp
adcb
pop
pop
pop
cmp
mov
out
adc
push
jne
jo
xchg
fldl
cmpsb
or
mov
jle
in
and
in
ret
rcll
push
add
movsl
pop
pop
bnd
fs
pushf
outsb
pop
lret
aam
cmpsl
fcompl
mov
test
push
bound
fs
push
dec
iret
add
mov
stos
lock
sbb
cmp
das
adc
and
sub
or
lret
aad
pop
push
jno
mov
mov
mov
inc
push
push
add
push
or
mov
lods
push
hlt
lahf
and
cmp
push
adcb
inc
cs
ja
punpckldq
xchg
jo
xor
int3
cmpsb
push
div
repz
sbb
test
outsb
cld
js
int3
test
sbb
jmp
out
fstpt
mov
cltd
xor
adcb
out
fisttps
push
jle
outsl
or
daa
pop
in
test
lcall
xchg
sar
out
push
xchg
or
daa
xor
cmpb
dec
pop
scas
int
mov
xor
enter
iret
adc
mov
mov
xchg
mov
push
jecxz
or
lock
movsb
call
aad
inc
dec
je
fs
out
inc
or
adc
cmp
xor
or
sub
dec
std
in
repnz
or
mov
jge
orl
ja
nop
clc
aaa
mov
cmpb
mov
adc
push
fcomi
mov
es
pop
and
sbb
call
rcrw
push
jo
push
or
push
insl
out
fidivs
in
movb
cmp
stos
inc
pop
sbbl
cmp
pop
in
mov
mov
push
add
jmp
into
mov
and
push
sti
lock
inc
int3
add
les
inc
push
inc
lret
pop
jle
fistpll
xor
jno
sbb
xor
dec
outsb
pop
pop
mov
inc
movsl
test
and
icebp
sub
in
sbb
jge
popa
and
daa
repnz
popf
into
push
mov
mov
movsl
fbld
shl
movsl
lods
cmpb
ficomps
enter
xlat
ret
mov
add
sahf
mov
mov
inc
mov
jbe
jmp
jle
in
les
mov
jle
roll
mov
in
dec
in
ja
repnz
push
loope
add
lods
out
cld
cmpsb
add
bound
stos
sbb
or
xchg
popf
mov
and
je
pop
maskmovq
testl
xor
push
popa
popf
push
jg
sbb
stos
xchg
aad
lahf
push
mov
jnp
imul
mov
xchg
mov
fldt
pusha
stos
and
jns
pop
push
push
std
test
lods
jns
and
ss
shlb
test
mov
popf
icebp
lods
cmp
ficomps
aas
xor
push
std
das
and
out
dec
pop
lret
dec
pop
fsubrs
cmpsl
mov
mov
les
xchg
loopne
xor
and
dec
imul
mov
je
iret
cmp
xchg
cltd
pop
pusha
sarb
outsb
mov
das
test
pop
lahf
vpsubsb
add
mov
addr16
and
cmpb
mov
inc
filds
mov
xchg
in
pop
mov
mov
subl
mov
fnsave
mov
in
aam
and
push
sbb
add
in
inc
pop
dec
stc
loopne
cli
mov
aam
jecxz
xorps
pop
push
pop
mov
bswap
and
xchg
hlt
lcall
hlt
dec
or
push
mov
xor
cmp
js
insl
cmp
mov
jno
mov
add
cmc
fs
add
addr16
aaa
dec
out
jns
xor
dec
mov
push
fisubl
shll
iret
cmp
dec
lods
imul
push
jno
adc
add
movsb
mov
bound
sub
das
icebp
pop
push
jns
pop
repz
jg
cmpsb
and
inc
gs
call
insb
mov
xor
inc
dec
mov
sub
and
sub
xor
or
push
stc
pop
dec
pop
incl
and
test
xchg
push
jns
cmp
loope
jb
in
xchg
xlat
jle
iret
cmpsb
add
cmp
jb
mov
inc
cmpsb
enter
mov
cmpl
xor
cwtl
dec
jl
pusha
in
stos
ljmp
push
rcrl
sar
push
insl
jae
sbb
cmc
adc
pop
clc
mov
adc
xchg
outsb
push
mov
rclb
bound
out
sub
sarb
hlt
inc
mov
outsl
jo
outsl
ljmp
outsl
in
in
in
sbb
fstl
or
scas
add
jae
fdivl
fildl
inc
in
push
jle
push
cli
fcoms
popa
mov
xor
jge
mov
mov
imul
ret
mov
out
or
xor
pusha
mov
fiaddl
sbb
call
xchg
fdivl
push
jnp
icebp
or
mov
dec
pop
add
pop
cld
aaa
xor
jo
out
fwait
pop
sbb
mov
scas
scas
into
outsl
xor
movsb
mov
arpl
mov
sub
lods
add
mov
movsb
sub
mov
mov
lock
and
pop
pop
mov
sub
pop
adc
mov
push
test
sbb
jg
aaa
xchg
mov
lods
push
mov
fisubl
lahf
ds
jae
test
push
jmp
fists
iret
test
aas
pop
pusha
aad
mov
xor
xor
gs
jne
mov
adc
and
xor
ds
mov
mov
inc
test
js
clc
inc
pop
hlt
fsubs
sahf
data16
pop
and
push
lds
mov
shll
loope
ficompl
iret
js
mov
cmpsb
adc
xor
sub
push
cld
negb
cmpsb
add
sbb
inc
insl
fs
cld
jb
sub
arpl
jnp
mov
or
loop
dec
and
mov
add
and
lods
lret
pop
inc
cld
mov
or
pop
or
es
cmpsb
inc
arpl
fsubrl
and
imul
out
in
roll
in
dec
or
push
fnstenv
popa
addb
xor
jno
or
cld
fsubl
push
out
insl
sbb
daa
sarl
add
mov
out
inc
xchg
out
jns
push
aaa
clc
jecxz
subl
cltd
aas
inc
ja
test
jge
popf
dec
mov
pop
mov
in
mov
fldt
jae
mov
out
push
insb
pop
xorb
pop
fdiv
cwtl
das
cmpsb
call
rorb
fcoms
push
sub
mov
into
out
xor
test
mov
mov
dec
sahf
adc
orb
outsb
stc
loop
mov
xchg
lock
movl
stos
push
mov
xor
cltd
lods
mov
sub
xor
push
popf
out
lcall
xchg
nop
jae
int
sbb
mov
add
test
scas
lods
xor
push
aas
loop
loop
mov
rclb
outsb
sub
xor
cs
dec
pop
add
mov
out
jbe
xchg
fbstp
mov
mov
mov
pushf
inc
cwtl
shll
fstpl
call
jg
ret
add
sbb
sbb
outsl
sti
outsl
fidivrl
aad
push
bound
adc
data16
pop
add
outsb
in
pushl
leave
daa
lods
mov
xlat
aam
icebp
mov
imull
jne
jge
cmpsl
ret
scas
inc
popa
int3
mov
xchg
int3
fists
push
inc
ja
orb
cmpps
mov
call
jmp
pop
jle
dec
cmp
mov
nop
je
sbb
sarb
jne
ret
mov
pop
rorl
lods
add
push
mov
push
in
push
pusha
and
mov
insl
cmp
inc
push
pushf
pop
ja
lea
sbb
pop
ret
dec
mov
jae
pop
cmp
jae
sbb
incb
mov
in
pushf
bound
popa
test
xor
jecxz
inc
lcall
fwait
lds
mov
cli
jnp
xor
es
push
pop
cmp
call
imul
sti
aad
pop
xchg
push
les
aad
jmp
mov
sub
aad
out
in
leave
clc
dec
dec
and
mov
repnz
sbb
mov
fimuls
shlb
inc
pop
jl
pushf
out
loop
mov
adc
push
fs
mov
lock
add
mov
test
sub
push
subl
xorl
add
mov
ret
data16
push
or
jle
jecxz
bound
loop
mov
xchg
out
push
mov
ss
mov
and
iret
stos
dec
jecxz
pop
cmc
adc
sahf
and
cmp
or
mov
inc
xchg
jmp
adc
xchg
adc
add
jbe
jne
leave
scas
stos
shl
roll
pop
notl
mov
pop
stos
xor
mov
mov
icebp
dec
ret
add
inc
inc
push
test
jle
cltd
lods
mov
sarl
ljmp
sahf
imul
shr
es
xor
and
and
push
icebp
insb
xchg
push
xor
add
add
sbb
add
nop
push
hlt
aas
dec
scas
and
xor
cmpsl
lods
fildl
aam
pop
cmpsb
lahf
cwtl
adc
inc
and
jo
inc
mov
mov
clc
rol
jno
fs
jne
outsl
js
push
dec
push
insl
ret
mov
xchg
lret
shll
test
adc
fwait
je
repz
fcomps
pop
inc
and
cmp
repnz
jg
scas
cld
pop
iret
jge
enter
int3
or
ud0
jo
imul
dec
test
push
pop
and
rclb
fcoms
mov
lea
adc
adc
jb
xchg
mov
stos
mov
cmc
lock
mov
mov
ja
inc
in
and
mov
das
dec
add
mov
out
ja
jecxz
loop
cltd
xor
fisttpl
aam
in
cmpsb
pop
jno
arpl
xlat
addl
shlb
push
xor
out
dec
xorl
cld
mov
fcmovnbe
sub
dec
inc
insb
mov
outsl
sub
fyl2x
jge
hlt
insl
add
xchg
je
je
nop
outsw
adc
lcall
je
push
stos
or
inc
ret
insb
fs
jae
scas
js
jmp
dec
popf
insl
stos
dec
dec
std
shrb
outsl
iret
add
je
rolb
vunpcklpd
andl
pop
jno
lods
jno
movsl
aad
div
std
pusha
push
cmp
cmpsl
jo
xchg
add
bound
cmp
arpl
insl
dec
inc
fwait
dec
pop
lahf
fs
ja
mov
pop
pop
add
test
sbb
inc
pop
out
and
ret
mov
lods
loop
ss
xchg
adc
dec
and
xchg
lret
jno
dec
mov
mov
and
lahf
test
xor
scas
outsb
jmp
mov
add
jp
and
pushf
inc
push
aas
iret
mov
stos
loop
out
xchg
push
bound
mov
xor
mov
push
pushf
cwtl
out
sbb
jne,pt
add
ss
xor
mov
sbb
cmpsl
adcb
adc
fidivs
jne
or
hlt
xor
xor
lret
testb
mov
lods
push
sub
jb
movsl
ds
repz
aas
inc
aas
dec
dec
xchg
xor
jmp
xchg
outsb
cmovl
call
inc
icebp
xchg
xchg
inc
outsl
mov
xchg
add
dec
dec
xlat
mov
lock
mov
inc
dec
enter
rcrl
add
outsb
loopne
or
or
xchg
psubb
lcall
jge
cmp
push
mov
sbb
jnp
std
fsubs
popa
jle
sahf
cli
jl
hlt
jbe
adc
push
ret
mov
fldt
mov
cmpsb
div
fldenv
add
rclb
xchg
mov
rolb
dec
mov
arpl
xor
daa
leave
dec
pop
pop
shlb
add
insl
or
mov
mov
call
dec
jne
nop
jns
xor
shlb
mov
icebp
movsl
fcoms
sahf
adc
push
or
xchg
and
scas
pop
arpl
hlt
cmpsb
daa
mov
or
dec
test
cmpsl
loope
into
insl
xchg
xchg
shl
out
sbb
pop
mov
in
jmp
jo
adc
in
cli
hlt
cmp
sub
repnz
lock
fstp
std
jne
cmpsl
xchg
out
ljmp
dec
inc
cmp
scas
add
mov
or
mov
mov
cld
pop
inc
xchg
sub
mov
mov
cmpsl
loop
dec
mov
or
mov
inc
negl
shl
arpl
jecxz
lods
scas
jle
jmp
enter
adc
sti
jae
sti
pop
lock
xchg
rsqrtps
leave
notb
sbb
mov
cli
push
arpl
jo
enter
outsb
sbb
pop
or
sarb
dec
loopne
jbe
cld
jo
frstor
int3
nop
mov
scas
mov
cmp
in
xor
das
repnz
inc
rcrb
scas
shr
mov
es
sub
repnz
jecxz
push
dec
nop
mov
and
mov
adc
call
pop
mov
fnsave
daa
and
push
xor
ljmp
pop
mov
outsl
or
fdivrs
pushf
stos
sub
mov
aam
jae
inc
sub
loop
imul
sbb
addr16
sti
or
cmp
jle
mov
dec
xor
jmp
pop
sbb
movsl
adc
mov
xchg
mov
rorb
push
mov
leave
stos
pop
mov
xchg
test
cwtl
shrb
fcomps
mov
lods
xchg
iret
mull
pusha
sbb
out
ffree
fwait
pop
div
cmp
sub
jg
add
xor
cmp
sahf
cmp
or
mov
cmp
sub
dec
das
sti
add
mov
mov
fistpll
and
xchg
test
dec
iret
cli
aad
and
cmpsb
pusha
jg
stc
sub
sub
xchg
cmp
or
pop
ret
outsl
mov
aaa
repnz
mov
jbe
iret
mov
mov
cmc
loop
insl
test
push
aam
mov
inc
inc
mov
push
xorl
movsl
ds
insb
test
xchg
in
fistpll
rcl
pop
nop
loopne
mov
and
add
pop
jb
add
dec
mov
push
and
shll
mov
int
jp
fcoms
push
add
stc
mov
and
mov
cmp
in
adc
call
ljmp
pop
mov
inc
cmp
mov
or
cmp
mov
lahf
cltd
lods
xchg
leave
add
ljmp
enter
or
movsl
gs
loope
jns
shll
mov
jbe
and
sahf
add
outsb
iret
int
imul
ja
nop
into
test
inc
repnz
mov
mov
insb
push
inc
movsl
push
xor
outsb
sub
jns
test
xchg
jp
push
and
add
pop
xchg
lods
pop
fsubr
push
sbb
in
mov
inc
lods
or
icebp
add
repz
xchg
xorl
lret
sbb
pushf
popa
xor
ret
out
sbb
sbb
cltd
repz
incl
pop
aad
and
outsl
xchg
outsl
pusha
lock
movsl
sar
dec
cmc
loop
or
dec
xchg
xchg
test
inc
lret
and
jbe
adc
push
xor
adc
pop
out
adc
int
or
cmp
fbld
add
cmc
stos
test
divb
aaa
push
push
mov
xchg
jl
scas
sbb
jg
leave
add
out
pop
data16
clc
xor
out
rcl
in
jnp
scas
fcom
fmuls
icebp
cmp
pop
in
daa
adc
movsl
sub
add
or
pop
fisubrs
cmp
push
or
mov
scas
jns
or
in
loop
imul
xor
fcmovnb
xor
jge
cwtl
pop
pop
andl
iret
jl
popa
mov
scas
movsl
add
std
push
lret
push
pushf
addl
aam
push
mov
jl
cmpsb
repz
and
aad
out
or
cld
cld
add
xchg
inc
repnz
loopne
sbb
mov
int3
in
xchg
dec
pop
imul
push
inc
add
pop
adc
dec
and
aad
adc
cld
fisttps
pop
jmp
adc
xor
data16
pop
xchg
subl
mov
sahf
jg
push
pop
push
inc
and
je
jge
shrb
push
fisttpl
je
pop
scas
mov
int3
and
lret
dec
shlb
pop
loop
aad
cmp
repz
mov
aas
jns
cmpb
xor
loopne
clc
mov
sbb
inc
ja
xor
lahf
mov
jp
xor
in
js
xchg
xchg
push
loop
ret
mov
out
add
pusha
insl
popf
nop
mov
cld
pop
ljmp
cmp
jnp
or
add
aad
xchg
push
pop
and
pop
lock
inc
xchg
inc
pop
cwtl
pop
lock
cld
push
rolb
mov
mov
lea
push
xor
scas
lret
add
out
sti
dec
and
das
xlat
in
push
inc
in
lods
xor
mov
sbb
sub
lea
xchg
and
xchg
orb
aam
gs
dec
scas
mov
dec
or
and
and
cmpsl
cmp
cld
add
mov
lahf
loopne
subl
pop
jecxz
pop
sub
stos
dec
in
mov
aas
sub
and
int
mov
dec
jl
sbb
mov
push
jo
cmc
xor
push
icebp
fcmovbe
jmp
adc
daa
mov
jl
sbb
test
ret
and
jmp
ret
and
movsb
xor
pop
fs
cli
fmuls
bound
pop
cltd
outsl
or
xchg
cmp
jo
sbb
add
xchg
les
sbb
arpl
add
or
test
xchg
cmc
or
inc
movsb
shl
xor
fcomi
adc
xchg
mov
das
icebp
addl
push
jmp
pop
lods
pop
inc
and
dec
adc
jmp
sbb
into
fisttpl
pop
cmc
jmp
sarb
in
sbb
daa
adc
movsl
psllw
xor
sbb
pop
gs
ror
loop
sub
or
mov
in
sub
mov
sub
sbb
dec
and
cmc
pushf
filds
ss
ror
add
adc
inc
sub
mov
popa
xchg
mov
xchg
sbb
cmp
mov
stc
addr16
fistl
ret
cld
push
xor
mov
push
sub
sti
xchg
popa
xchg
xchg
test
add
sbb
jb
mov
inc
push
add
push
xlat
test
inc
pop
popf
xor
cmp
inc
test
ja
cmc
dec
xchg
outsb
loope
inc
xor
sbb
xor
repnz
pop
add
push
popa
lcall
cmp
or
leave
sub
xchg
fwait
in
xchg
out
inc
shlb
mov
outsb
inc
cmp
shll
scas
adc
and
and
out
push
cmc
push
xor
xchg
out
shl
fstl
and
pop
icebp
std
xorb
loopne
loopne
adc
pop
lret
addr16
sarl
lcall
out
lret
in
mov
out
in
lock
push
mov
mov
and
test
js
sbb
push
inc
push
pop
push
sub
inc
cld
add
scas
mov
xchg
movsb
out
jno
cli
pusha
ret
jno
and
sti
dec
std
imul
fwait
jmp
in
negl
iret
inc
xchg
jns
pop
sar
xacquire
mov
fwait
loope
sbb
outsl
mov
popf
dec
int
ljmp
in
dec
pop
dec
das
nop
in
out
lret
mov
sbb
fwait
out
adc
cli
sub
inc
fildl
in
xchg
mov
push
mov
pop
sbb
sub
jp
lds
xchg
test
sbb
mov
sub
sub
jecxz
test
shl
repz
enter
ret
cwtl
cltd
add
inc
mov
cli
add
pop
outsb
fwait
int
cmpsb
or
adc
scas
mov
adc
sbb
jmp
ss
push
jno
dec
xorl
lret
lcall
lahf
cmpsb
aaa
stos
dec
sub
lds
jnp
pop
xchg
and
dec
inc
dec
jecxz
loopne
ja
inc
pop
mov
add
cli
repz
loope
pop
mov
lret
aas
rorl
xchg
sbb
leave
pop
rcrl
mov
popa
daa
pop
insb
mov
in
mov
sbb
jecxz
int3
cmp
mov
movsb
dec
mov
adc
and
mov
insl
mov
in
jmp
mov
cmpl
test
mov
ss
inc
jne
faddl
rclb
orl
pop
adc
sbb
aaa
jmp
gs
pop
mov
stc
jl
mov
orl
jbe
add
mov
mov
pop
xlat
stos
adc
jo
movsb
pop
int3
inc
bnd
adc
or
jns
mov
sub
sbb
mov
movsl
inc
out
cmpsl
stos
adc
mov
sub
add
mov
adc
sub
dec
scas
in
pop
xor
ljmp
add
popa
xchg
dec
mov
inc
pop
inc
hlt
inc
into
out
cmp
clc
or
inc
xor
inc
xchg
ja
daa
sahf
jb
mov
mov
add
ffree
out
fnop
gs
std
or
stos
ds
bnd
imulb
sub
xchg
push
repz
loope
cs
sbb
stos
test
stc
int
dec
adc
adc
inc
pusha
add
in
mov
jno
rsqrtps
xchg
pop
pusha
repnz
or
jo
cmp
pop
xchg
xor
das
lahf
outsb
sub
xor
pop
adc
mov
fwait
jbe
push
mov
xchg
xchg
lods
sbb
lock
lods
loop
movsl
pop
dec
sarb
push
pop
xchg
insl
add
int
dec
xor
stos
cltd
jge
movsb
fidivrs
cmpsl
mov
cld
testb
shrl
je
cmp
inc
dec
pop
outsb
std
sbb
arpl
test
mov
sbb
jno
out
pop
inc
jno
or
jbe
cmp
dec
and
push
test
jg
shlb
dec
pop
arpl
std
jne
aad
mov
fnstcw
jecxz
lods
movsl
test
pop
out
xor
int3
jnp
xchg
adc
cmp
es
xchg
or
cmc
sbb
mov
insb
fucomip
lods
mov
dec
xor
inc
or
int
jge
inc
mov
adc
push
shl
insb
shrl
inc
adc
aas
insl
movsb
comiss
xor
push
jae
pop
add
inc
xchg
add
jb
aam
fnstcw
test
jo
test
sti
sbb
jbe
and
mov
pushf
imul
mov
sti
xchg
pop
jle
in
cltd
xor
addr16
xchg
push
in
cmp
mov
cmp
mov
stc
shl
mov
mov
pop
xchg
add
xchg
or
pop
pop
adc
add
sbb
scas
pusha
cmp
pop
mov
xchg
mov
cmp
xchg
fwait
mov
mov
xchg
stos
adc
pop
iret
lahf
sbb
lock
stos
mov
enter
dec
or
cmpsl
fwait
rorl
xor
addb
xorl
jne
xchg
cltd
mov
sarl
sbb
idiv
in
pop
sub
add
and
push
out
ret
mov
pop
mov
aad
fstl
lea
xchg
cmc
fstl
pmullw
cli
sbb
push
rolb
push
dec
xchg
xchg
mov
jae
push
pushf
cmp
testb
nop
or
pop
sahf
xor
lds
cmp
sbb
hlt
movsl
or
pop
fs
sub
push
ljmp
xor
inc
insb
call
pop
andl
pop
imul
or
xor
cmpsl
cmp
jns
jmp
js
inc
xor
daa
sbb
orb
adcb
enter
jecxz
ljmp
push
or
mov
mov
sub
aam
cmp
nop
aad
and
in
and
jp
cmp
frndint
rorl
aaa
movsb
mov
inc
movq
sbb
enter
pop
fnstenv
sbb
adc
out
cli
fdivrs
stos
in
xchg
sub
sahf
inc
dec
test
sbb
mov
cmp
sbb
out
mov
sbb
pushf
es
scas
shr
pusha
add
adc
pop
lods
mov
mov
imul
xor
adc
push
test
mov
pop
jnp
mov
add
hlt
outsl
sub
notb
lret
pusha
pushl
fwait
cmpsb
shrl
adc
xlat
push
jne
mov
lock
jle
inc
inc
pop
fwait
mov
xor
pop
push
jp
fmuls
add
inc
mov
mov
mulb
mov
decb
es
pop
movb
frstor
movsl
adc
addl
mov
mov
mov
jae
add
dec
lds
jg
or
stc
sbb
gs
fwait
xor
push
lcall
mov
push
push
cmc
out
or
out
out
pop
mov
and
xchg
cmpsl
jbe
sub
lods
push
scas
xchg
xor
pop
aas
jge
imul
adc
imul
cltd
enter
add
ds
std
inc
ss
mov
orb
mul
std
je
xor
into
xor
int
inc
stc
out
jle
lret
pop
sti
jp
jb
adc
rorb
icebp
pop
mov
inc
mov
cmpsl
out
jb
cltd
aas
sub
pop
lds
ds
pushf
arpl
and
ljmp
loop
popf
jecxz
xchg
pop
incl
scas
or
push
mov
enter
arpl
sub
xorb
xor
das
jg
mov
in
daa
fisttpll
in
add
xor
incb
nop
and
add
add
in
push
and
xchg
xor
adc
call
push
xor
loope
popa
push
fimull
mov
xor
lcall
dec
movsl
aas
mov
cld
jae
pop
test
inc
fisttpl
mov
ljmp
aas
push
js
jb
lods
sub
notb
addr16
dec
js
fsubl
pop
push
add
das
xchg
je
push
add
jle
cld
stc
inc
mov
xor
dec
mov
out
inc
cld
popa
clc
pop
loop
daa
fdivs
arpl
push
loope
push
shr
clc
repz
xchg
mov
sbb
daa
sbb
mov
mov
push
adc
gs
dec
lock
andb
js
loopne
sub
out
sub
sti
ss
xchg
cmp
xor
sub
push
pop
push
pushl
adc
ror
mov
ljmp
loope
cld
sahf
dec
mov
es
sub
mov
imul
addr16
hlt
xor
jbe
and
mov
xor
or
frstor
in
sbb
fcmovnu
xor
mov
popa
pop
xor
or
jg
ja
sahf
mov
repz
mov
xchg
mov
fisubrs
cmp
stc
imull
dec
jp
fs
stos
xchg
mov
sub
out
stc
jne
cwtl
ret
add
jle
sub
sub
fs
stos
iret
loope
imul
ljmp
adc
shlb
loope
mov
out
lcall
xor
mov
test
and
jb
scas
fwait
dec
lea
push
lea
or
push
test
and
push
xchg
aad
cwtl
dec
add
adc
cmc
in
insw
sub
jns
fs
push
or
fcmovnu
stos
shll
in
mov
xor
adc
data16
and
test
xchg
add
push
test
jecxz
mov
fidivrs
push
cmpb
rcll
adc
xchg
push
or
rorl
cmp
fildl
repz
cmpsb
inc
and
sarl
addr16
movsb
adc
push
les
cmp
cltd
sub
loopne
dec
sti
add
adc
lret
jl
popa
jle
push
movsb
imul
cmp
dec
lods
xchg
sti
ficoms
es
push
xchg
mov
add
mov
stc
pop
mov
dec
dec
cmpsl
xchg
push
lods
sahf
cmp
mov
xlat
pop
mov
and
andb
inc
popa
or
lret
call
sbb
pop
mov
cmpsb
jge
mov
and
jg
stos
mov
outsl
es
and
in
inc
add
sub
mov
cld
mov
insb
lret
or
jle
std
mov
movsb
cmpsb
mov
jae
pushf
imul
or
jg
dec
xor
std
imul
cmp
mov
inc
xchg
push
fnclex
sbb
pop
sub
int3
or
mov
stos
push
mov
xchg
scas
xchg
adc
mov
rep
orl
hlt
jecxz
sbb
repz
cmpsl
xchg
mov
in
dec
repnz
push
mov
outsl
mov
add
mov
mov
inc
sub
adc
mov
pop
mov
mov
or
or
movsb
cmp
jg
jg
dec
xchg
negb
inc
jns
ss
pop
ror
xor
fsubrl
ret
popf
pop
xor
jge
inc
scas
jp
enter
in
jno
dec
push
fwait
push
fsubrp
fstps
mov
pop
sub
lods
sub
jb
xor
shr
fcom
or
mov
call
pop
je
mov
push
stos
mov
insl
mov
nop
add
subl
inc
lods
std
pusha
xor
cmp
sub
cli
xchg
add
stos
mov
sub
aaa
insb
push
mov
xchg
fidivs
mov
or
sub
shll
into
dec
repnz
lret
repz
push
ja
and
add
ss
sbb
sbb
sub
rcrl
enter
addr16
xchg
jns
sub
push
cmpsl
ret
cmc
in
adc
inc
sub
mov
data16
loopne
add
mov
pop
lds
lret
xor
nop
movsb
xlat
dec
repnz
enter
adcb
aam
ds
cmp
xchg
and
pop
iret
jae
xchg
in
ljmp
pop
push
pop
cld
sti
push
adc
nop
mov
inc
ds
aad
scas
shlb
and
jmp
xchg
and
adc
pop
jl
std
out
data16
xchg
jmp
jmp
lock
adc
gs
add
cmpsb
inc
aaa
add
and
push
sbb
rcr
cld
pop
push
fnstenv
dec
lods
sub
jb
mull
insl
mov
xchg
dec
ljmp
push
and
push
mov
iret
fnop
add
jns
out
sub
jge
and
cwtl
cmp
insb
pop
xchg
jmp
cltd
fldl
push
dec
inc
aad
out
shl
stc
loopne
push
mov
das
add
xor
insb
and
push
mov
stos
mov
cmp
mov
inc
lods
and
xchg
insl
add
sub
cwtl
insl
jb
mov
mov
scas
repnz
shl
jne
adc
inc
xor
sti
pop
insl
das
dec
pushf
in
fistl
xor
pop
mov
int3
imull
cld
fmuls
in
ljmp
add
ret
push
sbb
sub
cld
lock
shrb
fs
mov
js
ds
cmpsb
insl
push
sbb
xchg
aas
fs
inc
inc
or
push
repz
xchg
iret
out
std
lcall
push
mov
jb
test
pop
xor
or
mov
je
xor
mov
dec
xchg
mov
mov
sbb
jge
shrl
inc
stc
fildll
mov
add
sbb
test
xor
mov
mov
ret
mov
dec
and
push
or
sbb
bound
dec
leave
rolb
jle
mov
jl
outsb
stos
mov
rorl
push
lea
add
jmp
sar
xchg
xchg
popa
jp
push
dec
sub
sbb
mov
mov
int3
mov
js
or
iret
insl
shl
lea
out
ret
jne
subb
outsl
lret
pop
mov
add
push
cmp
pop
or
jne
imul
fcmove
ja
pop
dec
int3
movsb
mov
jecxz
ret
int3
pushf
pop
pop
push
jecxz
pop
out
xchg
adc
mov
scas
pushf
es
inc
xor
lods
xchg
dec
cwtl
repz
pop
xchg
lret
test
and
sti
and
push
out
je
stos
mov
testl
sub
pop
jno
push
in
inc
push
rcr
fs
lods
jo
aas
pop
jg
loopne
cmp
inc
scas
cmp
mov
xchg
push
add
mov
mov
jb
and
push
lahf
das
leave
cmp
cmp
sub
pop
inc
push
xor
mov
sub
imul
xchg
mov
adc
addr16
fwait
fwait
lds
pop
aad
xchg
cmp
jae
ss
imul
ja
ss
mov
xor
adc
imul
pop
inc
add
fbld
and
add
movsl
cmp
shrl
mov
lds
leave
add
ds
cltd
sbb
shll
ss
dec
nop
cmp
sbb
iret
in
es
repnz
pop
xor
lock
test
adc
or
xchg
lcall
mov
or
lods
push
icebp
xlat
cwtl
ja
adc
fdivr
cli
jmp
add
mov
or
pop
sub
mov
outsl
loop
xor
mov
popf
cli
sbb
and
scas
cmc
stc
or
pop
pushf
mov
xchg
int3
jp
mov
lods
mov
jns
sbb
mov
bound
enter
jl
fistps
inc
adc
pop
xor
jmp
or
pop
cmpsl
imul
push
loope
mov
or
jl
jle
or
inc
mov
repz
xchg
mov
hlt
stos
jns
push
repnz
dec
shr
adc
loop
jae
pop
aam
out
pushf
pop
and
inc
loopne
cmpb
leave
icebp
or
je
sbb
xchg
lcall
loop
dec
dec
jle
sub
leave
bts
std
fstl
icebp
fildl
push
inc
cltd
scas
mov
xor
add
mov
xchg
insl
pop
xlat
lcall
das
push
scas
push
mov
mov
pop
pop
int3
sub
sbb
mov
mov
adcb
nop
jns
mull
xchg
ret
es
pop
iret
add
xchg
cld
dec
iret
rorl
jle
adc
movb
inc
push
xchg
popl
inc
lcall
xor
orb
js
pop
and
xor
sbb
rcll
stos
sahf
jecxz
mov
or
sbb
push
dec
jns
mov
jo
in
dec
adcl
dec
movl
leave
sub
dec
cmp
lods
movsb
pop
aas
and
jbe
xchg
xchg
or
in
iret
pop
push
xchg
scas
or
add
pop
aam
jae
xor
scas
pushf
or
inc
hlt
andl
mov
xor
sbb
pop
cmpsl
out
out
test
imul
and
mov
std
fsubl
jp
fldln2
adc
xchg
jge
mov
es
int3
mov
add
rcl
mov
and
sbb
mov
inc
or
mov
scas
ss
aas
push
es
and
arpl
icebp
popa
cmpsl
bound
xchg
call
call
jns
push
in
sahf
push
aad
adc
adc
add
pop
sbb
ret
jmp
pushf
shr
jo
inc
out
stos
aad
loop
je
mov
pop
push
enter
gs
mov
push
divb
cmc
inc
jle
xchg
mov
inc
jle
push
jmp
lods
mov
push
sbb
sub
mov
dec
paddw
ret
movsl
and
leave
loope
cwtl
pushf
push
imulb
adc
out
inc
lret
insb
push
in
add
repz
test
pop
jns
mov
scas
imul
cmpsb
hlt
jmp
xchg
add
cmp
iret
sbb
dec
dec
cmp
adc
jne
nop
jns
movsb
and
mov
lahf
jp
or
fildll
stos
fstpl
fnstenv
pop
ds
repnz
mov
lret
repz
popf
stos
dec
xchg
adcl
xchg
push
arpl
add
in
mov
xchg
js
clc
inc
fwait
xchg
popa
imul
push
lock
in
out
sub
es
sub
pop
ret
adc
ret
push
lock
sbb
lea
cmp
push
xchg
add
add
popf
mov
xor
pop
hlt
pusha
inc
dec
push
int3
sub
sub
rcll
pop
iret
rcr
ljmp
adc
movsb
aad
pop
sbb
sub
mov
js
rcrb
pop
out
inc
out
xchg
daa
pop
sbb
jne
mov
mov
xlat
xor
inc
cld
mov
pop
and
dec
jb
cmpsb
jp
incb
and
pop
cmc
jecxz
mov
icebp
jnp
cmp
pusha
sbb
movsl
cmp
and
js
rolb
leave
mov
add
mov
and
fwait
cmpsb
aam
jnp
lds
sub
iret
adc
sti
lods
inc
mov
orb
xchg
jmp
sub
or
sub
dec
dec
lock
push
push
movsl
pop
lret
cld
adc
sbb
inc
sbb
ds
pop
lods
push
dec
xlat
dec
mov
push
push
gs
dec
pop
fs
adc
jl
xor
cli
adc
stos
xor
or
popf
mov
rcl
cmp
and
hlt
rclb
jnp
fnstsw
rorl
das
inc
out
mov
idiv
xlat
sarl
add
out
sub
imul
pop
pop
leave
js
mov
xchg
cmp
sub
inc
and
insl
imul
sbb
div
xchg
adc
lds
and
fldenv
ret
adc
ret
rclb
mov
pop
push
jl
mov
int
sbb
or
mov
stos
push
mov
jl
push
pop
loopne
clc
mov
dec
mov
loope
arpl
adc
pushf
enter
ror
mov
adc
jle
push
adc
jg
out
or
aas
xlat
jecxz
pop
and
sbb
test
repz
mov
inc
repz
dec
rcl
outsl
jl
mov
cli
mov
std
stos
xchg
icebp
adc
call
rorl
icebp
gs
mov
push
jl
fists
xchg
std
mov
ret
loopw
inc
pushf
lock
pop
mov
jno
lea
xor
inc
or
cmp
push
repz
rorl
out
jg
ds
xor
imul
jb
sbb
push
push
xchg
mov
in
das
and
xor
and
xor
aam
mov
scas
cmp
dec
mov
mov
addr16
cmc
adc
cwtl
xor
sub
fcoms
scas
cmc
into
inc
mov
xchg
jmp
adc
mov
inc
jno
test
nop
mov
mov
les
fldenv
and
inc
stos
mov
das
lret
xor
mov
fcomps
bound
pop
fcmovnbe
adc
js
ficoms
mov
push
push
xor
mov
mov
shrb
dec
test
pop
jne
pop
sbb
sbb
xchg
lock
xor
push
je
scas
orb
out
repz
cmp
out
bound
jl
mov
pusha
mov
roll
xchg
cld
push
adc
push
or
dec
leave
in
sbb
lret
push
je
dec
pop
push
and
fwait
sbb
lods
stos
add
adc
lods
gs
sbb
cmp
imul
push
test
into
shld
dec
fbstp
mov
bound
jge
sbbl
push
insb
sub
arpl
fsubrs
fisubs
std
push
mov
mov
rcll
xor
int
adc
add
mov
inc
sbb
sub
outsl
imul
mov
add
inc
mov
xor
jp
xchg
mov
test
cltd
icebp
lcall
lock
js
and
push
mov
imul
xchg
sbb
xor
lock
pop
push
lods
mov
dec
pop
xor
shlb
or
jns
xchg
inc
aaa
mov
lret
mov
mov
int
jecxz
and
add
dec
xor
out
scas
dec
in
jb
fiadds
push
bound
jbe
lods
sti
ret
in
inc
jmp
ror
cli
push
in
xlat
mov
mov
xor
sub
jb
xchg
mov
int
inc
push
adc
adc
and
mov
mov
pop
push
adc
inc
mov
sbb
cmc
sub
mov
movsb
sub
jo
outsl
add
call
lods
hlt
adc
pop
add
mov
cwtl
lds
and
movl
sbb
pushf
imul
push
mov
cmc
sub
mov
in
xchg
les
out
call
xor
stc
mov
jnp
xchg
outsb
cmp
pop
mov
pop
or
rorl
add
test
aas
pop
fmulp
inc
adc
pop
jnp
jbe
sbb
mov
arpl
repz
out
out
mov
sbb
xor
sbbl
aam
cmp
adc
jns
adc
rcrb
fmull
rorl
jp
call
or
push
xchg
cmp
fildl
lret
mov
mov
inc
or
xor
rolb
and
jle
andb
cld
cmp
dec
pop
mov
jns
mov
repnz
aaa
mov
int3
xor
cmpsl
dec
and
inc
in
fadds
sahf
sbb
int3
in
lods
push
in
pop
xchg
jp
mov
jge
push
fcompl
xor
aaa
or
push
repnz
jg
arpl
mov
cmp
dec
push
outsl
js
lahf
cmp
stc
and
cmc
push
fldenv
idivl
iret
fists
scas
mov
jno
pop
mov
iret
rcrb
sbb
dec
dec
mov
in
add
lret
dec
test
stos
jnp
xchg
inc
or
push
mov
flds
xchg
shlb
out
shrb
xchg
mov
xlat
aad
mov
fidivs
and
test
je
inc
imul
mov
adc
js
lcall
sub
pop
shr
add
pop
mov
add
cmpsb
cltd
bound
pop
xor
sbb
lahf
loope
sbb
xor
loop
aad
movsl
addr16
mov
and
push
adc
in
lea
inc
push
sahf
add
mov
dec
xchg
and
or
xchg
test
jno
mov
rcrl
cwtl
cmc
sbb
or
daa
sub
jne
int3
push
inc
lret
cmpsl
daa
call
sbb
insl
add
nop
cmova
call
aam
jae
push
mov
movsl
sub
jg
sbb
js
fildll
pushf
fisttpl
push
cmp
outsb
js
shl
lea
dec
inc
push
jle
push
bound
pop
jno
push
and
loope
inc
or
loop
pop
xchg
out
shr
test
mov
bound
adc
xchg
push
mov
xchg
sub
cli
rcrl
test
daa
mov
icebp
call
es
sub
and
inc
push
out
inc
je
dec
cmp
mov
push
fistpll
jmp
xchg
iret
rcl
je
mov
push
pop
jne
add
xor
gs
adc
push
popa
cltd
push
shrl
push
push
cld
inc
fwait
add
add
cli
mov
sbb
ljmp
imul
adc
sub
pop
mov
mov
jmp
jecxz
fldt
out
mov
mov
or
mov
fcompl
cmp
dec
mov
fnstenv
xchg
sbb
cwtl
test
xlat
and
das
int
sarb
fstpt
sarl
mov
ljmp
or
mov
pushf
sahf
rclb
stos
dec
test
lods
xchg
fisubl
sub
cmc
inc
mov
jns
ja
incl
outsl
loop
out
jecxz
pop
out
ljmp
in
pop
add
ret
pop
adc
icebp
jge
dec
out
int
ljmp
cmp
lahf
fwait
pop
mov
sbb
xor
cli
mov
and
out
sahf
insl
andl
push
mov
mov
pop
fwait
jp
push
insl
fs
fcmovbe
test
enter
les
fwait
jge
leave
outsl
mov
fistl
inc
testl
pop
fs
push
int
loopne
cmp
rorb
jo
out
add
scas
fcomip
fidivl
adc
cmpsl
pop
in
or
lock
push
mov
xor
push
jp
push
pop
ret
dec
pop
push
or
gs
or
mov
mov
ret
jo
jmp
mov
stc
daa
dec
enter
push
into
movsl
inc
nop
mov
jmp
pop
mov
jmp
pop
pop
push
xchg
cmpsb
cli
xor
outsl
sub
lods
adc
test
popa
or
jae
into
push
mov
sbbb
and
cli
mov
hlt
popa
jg
xor
adc
clc
pop
inc
push
or
push
iret
inc
mov
adc
dec
xchg
popa
jae
test
cmp
mov
bound
push
xchg
js
mov
ret
jae
cmp
push
push
mov
mov
fmulp
jmp
mov
mov
and
orb
push
jmp
hlt
push
ret
xchg
xchg
fildll
pop
inc
les
mov
xchg
es
repz
mov
data16
dec
shrl
not
push
and
scas
sub
aam
mov
pop
ret
jge
mov
add
mov
outsl
outsl
cmpsb
sub
ret
loop
xor
clc
inc
pop
out
push
and
adc
and
adc
pop
scas
adc
je
xchg
je
jne
ja
bound
mov
xor
je
test
and
fmull
dec
sub
jge
int
add
jp
mov
cld
outsb
pop
daa
pop
jo
int3
adcb
and
out
lret
jno
mov
lret
jae
jo
outsb
lcall
mov
pop
popf
es
dec
push
pop
std
sahf
push
push
jae
int3
ljmp
mov
xor
dec
repz
add
mov
lods
xlat
addr16
adc
data16
pop
insl
mov
inc
mov
add
in
dec
mov
mov
outsb
push
fisttpl
jbe
push
cmpsl
cwtl
mov
mov
lret
test
addr16
je
testl
movsb
mov
lcall
shll
bswap
inc
shlb
scas
inc
fs
mov
jno
jnp
divl
pusha
stos
pusha
cmpsb
adc
lcall
mov
dec
or
mov
stos
sub
sub
nop
stos
mov
xchg
and
or
and
daa
inc
xchg
stos
les
stos
mov
fdivl
je
and
inc
pop
int3
and
and
icebp
inc
or
insb
mov
mov
std
push
ljmp
test
add
fcoms
pop
shll
int
cwtl
lret
xchg
mov
fisubrl
jmp
jmp
fcomps
or
dec
mov
sti
jg
daa
arpl
xor
add
push
cld
mov
push
cs
mov
ds
aad
notl
int3
xchg
test
mov
sub
add
adc
jmp
pop
movb
ror
outsl
pop
stc
adc
mov
mov
nop
inc
lds
ja
stc
or
inc
sarb
sbb
inc
pop
inc
dec
leave
jg
pop
xor
and
dec
scas
sbb
rol
cmp
dec
and
ljmp
fldl
mov
jg
fadds
fstp
sub
test
jo
xor
les
addb
mov
pop
jns
and
cmp
jae
xlat
mov
movsl
js
mov
inc
aad
insb
xor
es
nop
dec
ljmp
cld
mov
cmc
jecxz
jnp
mov
mov
dec
lret
mov
ss
add
add
mov
sub
push
lcall
icebp
stc
lea
sbbb
sub
xor
repnz
call
push
lret
iret
outsl
fdivrl
sahf
or
stos
scas
pushf
cld
dec
xor
cmpsl
arpl
dec
and
aad
std
arpl
mov
mov
pop
faddl
dec
xchg
fsubs
pop
stos
mov
add
mov
mov
mov
fwait
sbb
mov
jp
int3
int3
lret
push
or
je
repz
aas
enter
pop
repnz
pop
call
fdivrl
pop
push
out
adc
dec
add
fs
out
pop
inc
test
mov
xchg
adc
loop
lea
sbb
xchg
call
inc
out
mov
outsb
in
cwtl
out
push
xchg
test
les
jmp
adc
loope
mov
jae
cwtl
lcall
mov
jecxz
outsl
cmc
fbld
or
jb
call
push
push
sub
sub
cmpsb
jns
mov
dec
xchg
call
cwtl
loopne
test
xchg
xor
test
je
add
jo
jmp
jg
jnp
cli
push
iret
xchg
popa
xchg
push
ss
std
xor
ljmp
pop
cmp
push
adc
fsubl
scas
ds
js
roll
mov
popa
shll
push
popf
aad
cvttps2pi
xchg
repz
mov
dec
mov
out
pop
sbb
xchg
mov
push
clc
jp
mov
cmpsl
pop
pop
dec
es
int3
or
lea
popf
push
mov
rclb
mov
popa
xchg
sub
into
lret
lret
push
dec
or
mov
je
mov
add
adc
jo
in
push
sti
aaa
das
push
fs
outsl
stos
enter
test
test
int
aam
push
lods
stos
dec
test
mov
lahf
xor
push
int
hlt
pop
inc
jns
dec
mov
lcall
adc
jno
mov
jbe
sbb
pusha
and
push
mov
push
cmp
fsubrs
out
and
add
rorb
std
in
cmp
add
mov
mov
mov
mulb
bound
ror
ss
sub
push
in
inc
adc
testl
call
mov
lahf
out
arpl
jmp
push
test
cmp
jno
cld
fs
adc
adc
sub
pop
ds
dec
inc
loop
add
insl
ljmp
pushf
int3
dec
mov
adc
ret
and
jno
ret
cli
hlt
and
jno
push
pushf
lret
or
mov
mov
jbe
movsl
push
sub
incl
mov
in
adc
into
xor
stos
add
out
mov
sbb
sub
pop
push
cmpsb
push
pushf
fsubrs
jmp
dec
mov
mov
outsb
out
loope
sub
std
dec
lods
jbe
pushl
mov
jl
adc
int3
test
dec
adc
fildl
bound
push
add
and
outsb
adc
sbb
lcall
add
loope
inc
lods
test
pop
add
dec
push
insb
stos
mov
repz
push
aas
push
pop
xor
and
xchg
xchg
outsb
les
pushf
cmpsb
jb
lret
dec
scas
xchg
lret
pop
in
das
dec
icebp
ljmp
push
hlt
je
mov
sbb
xchg
mov
fld
lret
dec
mov
push
rcrb
push
xchg
das
mov
ja
flds
jns
nop
lock
loopne
adc
sarb
scas
add
mov
pop
mov
imul
nop
push
push
push
loop
cmpsl
push
or
xlat
mov
adc
mov
hlt
shll
push
mov
xchg
aaa
and
mov
mov
lahf
mov
pop
sbb
jp
stc
adc
cmp
jb
dec
xorb
inc
loop
outsb
pop
mov
addr16
jmp
push
sub
jno
pop
cmpl
fmul
mov
addb
mov
aam
cltd
pop
dec
xchg
bound
cli
hlt
mov
xchg
pop
nop
adcb
mull
add
mov
scas
pop
push
fcompl
movsb
mov
mov
and
or
cmp
repnz
imul
and
pushf
daa
in
cmp
cli
repnz
aad
lds
pop
outsl
inc
gs
cli
inc
adc
pop
lcall
inc
js
imul
adc
mov
mov
cmpsb
outsl
mov
dec
lret
movsl
cmpsl
dec
inc
aam
pop
add
add
and
gs
sub
push
xor
adc
rorb
lods
adc
mov
inc
ljmp
mov
out
insb
int3
mov
outsl
jg
lods
and
enter
outsb
or
loopne
jge
pop
fldenv
outsb
jbe
outsl
sti
xor
jnp
mov
add
push
loope
sub
ss
int3
jo
dec
lock
addr16
inc
pop
fsubr
stos
push
sbb
and
xor
cmpsb
imul
sbb
mov
jmp
repnz
shlb
lret
lcall
push
int3
test
bound
arpl
je
outsl
fs
scas
rorb
and
cmp
lock
mov
outsl
pop
mov
into
pushf
lahf
js
in
daa
xchg
fwait
jle
xchg
popa
stc
inc
pop
cmp
mov
rcrb
scas
mov
repz
push
cmpsl
dec
mov
dec
pop
leave
push
cltd
add
push
loop
xchg
loop
inc
xchg
dec
loope
inc
loopne
inc
add
movsb
xor
mov
test
jecxz
insl
addl
jmp
jbe
loopne
jb
cli
scas
lds
xchg
sahf
sbb
cltd
sub
ljmp
popf
adc
inc
mov
cs
sbb
ds
cmpb
in
popa
inc
mov
inc
or
xlat
push
imul
xchg
inc
inc
ficoms
xor
pushf
fisttps
dec
push
sbb
xor
mov
push
pop
xor
cmpsb
add
xchg
adc
into
int
andl
negb
inc
fs
mov
out
add
fstp
mov
dec
ljmp
xchg
xor
out
xlat
mov
jno
ret
adc
adc
js
pop
or
sub
inc
sub
jne
cld
and
mov
xor
in
std
mov
dec
cmp
dec
jns
les
push
sbbb
push
loope
and
mov
popa
std
jbe
je
shrb
ret
dec
inc
cmp
mov
dec
jecxz
iret
or
xlat
das
stc
je
xchg
pop
xor
mov
cmc
aam
les
dec
loope
inc
pop
pop
dec
data16
mov
pusha
fistps
bound
xor
xor
adc
cltd
jo
shrb
fucomp
xchg
int
xor
jmp
stos
adc
int3
mov
incb
push
lret
lods
mov
pop
sub
stc
fildl
and
mov
fstpt
loope
mov
stos
adc
push
jge
lahf
add
ja
mov
jecxz
mov
lds
mov
jo
xor
push
sub
xchg
xchg
dec
mov
mov
aas
mov
jecxz
pop
mov
mov
shll
push
cli
jns
mov
and
fsubrs
in
and
and
in
add
inc
jl
gs
adc
stc
cmpsl
test
push
decb
jp
jne
jmp
mov
jbe
jge
in
pop
js
xor
rcr
mov
or
sbb
sbb
lret
fnop
xchg
std
adc
jae
jo
andl
jp
mov
imul
dec
mov
mov
inc
pop
sarl
mov
push
or
adcl
jne
cs
and
pop
negl
and
pop
ljmp
pop
fisubl
jb
arpl
jmp
push
and
push
js
sti
xchg
inc
repz
lea
xchg
add
pop
je
jmp
dec
rcrl
jg
mov
cs
mov
insb
rcrb
add
mov
jne
jmp
or
mov
cmc
xchg
bnd
jp
adc
rcrl
outsl
stos
xor
and
jle
jbe
jb
mov
sbb
xchg
inc
nop
imul
pop
dec
xchg
jg
enter
xchg
cmp
cmp
mov
popaw
dec
popa
ds
aam
shld
sbb
fsubrp
loope
js
das
adcb
and
iret
rolb
cs
push
mov
stos
jo
decl
xor
sbb
scas
add
or
pushf
inc
cltd
sub
cld
add
jg
aas
push
rorb
xchg
sub
fldt
dec
xchg
dec
fistpll
loopne
dec
add
sbb
push
and
push
xchg
mov
inc
je
add
nop
test
cld
lods
lock
js
cmp
jl
xor
push
jle
shl
xor
stos
mov
insb
jecxz
test
sarb
aaa
sbb
mov
pop
xchg
nop
dec
sub
js
jle
cltd
aaa
fists
push
shl
fwait
mov
and
es
dec
shrb
or
shll
xor
sub
dec
mov
add
dec
mov
addl
mov
jle
push
sub
repz
xchg
lcall
sbb
jb
mov
rcrl
pop
pushf
enter
and
shl
inc
mov
loop
sbb
adc
mov
ret
and
clc
sbb
into
jle
push
or
cmc
mov
dec
push
sub
jbe
mull
addr16
sbbb
xchg
mov
mov
push
mov
insl
pop
arpl
adc
and
je
mov
inc
nop
paddq
mov
jae
jno
jnp
push
push
and
leave
xchg
mov
sub
inc
icebp
inc
in
out
xchg
ret
fs
sub
sub
jecxz
pop
insl
add
add
jns
xlat
jne
test
scas
aas
mov
sbb
sub
stc
scas
fnstcw
in
ret
or
sbb
pop
xchg
jg
xor
jae
and
mov
xchg
inc
push
out
push
and
xchg
add
pop
xchg
jge
pop
and
data16
mov
jp
inc
jmp
mov
hlt
popl
jne
inc
rorl
lds
aad
mov
sbb
ja
sbb
aas
or
sar
jle
dec
out
fidivrs
rdpmc
stc
ss
outsb
sbb
mov
mov
fisttps
ss
nop
leave
inc
fdivrs
lcall
ficomps
or
faddl
les
mov
adc
mov
mov
pop
negb
lea
cli
out
ret
data16
mov
mov
dec
mov
adc
in
sti
data16
dec
popf
or
jns
aas
or
incb
sar
mull
cmc
and
inc
vpaddusb
stos
mov
shr
mov
shrl
xor
mov
sahf
push
and
out
adc
xor
mov
leave
aaa
or
out
add
lods
dec
mov
cltd
or
loop
xchg
sub
aas
cmpsl
dec
lret
loope
jns
ret
out
adc
push
rcr
hlt
xchg
dec
fidivrs
jecxz
fs
push
int3
jmp
mov
mov
mov
fdivs
mov
fwait
dec
mov
mov
ret
aaa
jb
scas
pop
cld
dec
int
and
dec
add
lcall
sbb
hlt
mov
cld
dec
mov
sbb
cmp
and
push
adcb
cld
cmp
or
outsl
push
jmp
mov
popa
stos
inc
mov
cmpl
cmpb
adc
sub
enter
test
sbb
loop
inc
fcomp
push
int
push
and
not
jecxz
mov
adc
jo
push
mov
enter
mov
pop
sub
inc
and
fstps
adc
pop
stc
es
mov
in
push
ficompl
adc
push
pop
adc
pop
call
aaa
fmulp
add
mov
inc
or
sub
pushf
pop
add
add
hlt
adcb
push
div
enter
xor
cmpsl
stc
rol
and
in
in
jmp
adc
xor
cmpsb
test
aad
or
scas
push
fisubl
mov
and
cmp
pusha
add
das
stc
xor
sahf
gs
in
popa
add
cmpsl
call
push
rcll
fcomps
clc
popa
mov
outsl
or
lds
add
jno
sbb
push
lock
fwait
mov
loope
test
fiaddl
xor
stc
xor
jae
fcmovnbe
push
hlt
push
stc
fdivrs
cmp
cltd
xor
idiv
aam
sbb
xor
int3
ret
sub
dec
sti
sahf
shlb
push
and
xchg
ret
jle
les
cwtl
cmpsb
mov
adc
jo
pop
aas
xlat
cld
mov
push
fwait
outsb
xchg
insb
jge
sbb
stos
lock
and
in
and
pop
pop
cli
out
shlb
push
inc
mov
xor
inc
xlat
je
lret
imul
push
pop
out
adc
scas
sub
scas
inc
ds
add
inc
xor
aam
leave
adc
in
add
das
mov
jo
inc
add
lods
and
mov
xchg
faddp
mov
sub
xchg
fidivrs
push
adc
xor
imul
rolb
cmp
pop
pop
dec
sub
rcrl
jae
dec
js
leave
dec
loope
notb
lcall
jp
cwtl
or
fdivrs
xor
push
mov
int3
pop
or
cwtl
cli
push
add
filds
xorl
dec
stos
xor
sbb
clc
test
sub
add
jl
and
push
cmp
cwtl
adc
lods
jle
ss
mov
adc
out
pop
xchg
rcll
jmp
fwait
add
cmp
mov
popa
nop
sti
pop
in
aaa
or
adc
lods
js
hlt
std
adc
std
adc
ret
adc
lods
sbb
dec
in
mov
movsb
adc
xor
bound
call
sub
cmp
nop
cld
mov
test
das
push
adc
cmc
mov
popf
xchg
gs
insb
push
pop
mov
movsb
enter
dec
and
sahf
xor
out
sub
push
and
adc
iret
mov
mov
fisubrs
push
push
mov
xchg
mov
jns
adc
aas
xchg
xor
mov
dec
xchg
pop
lea
or
push
add
mov
xor
adcl
or
movsb
mov
dec
inc
jge
fmull
pop
push
inc
xchg
insl
mov
sbb
sub
mov
into
sbb
pusha
clc
and
dec
cltd
or
divl
rep
lahf
jae
xor
in
xchg
add
jne
push
xor
push
ret
shll
mov
imul
pop
mov
rorb
xchg
das
scas
sbb
xor
out
jnp
cmp
and
mov
sbb
add
pop
clc
jbe
add
pop
in
rcrb
fnsave
in
test
aaa
sbb
jb
fstps
xchg
imul
insb
fld
cmc
cmp
mov
jbe
jecxz
scas
push
sahf
or
dec
fwait
and
push
cmpsb
mov
mov
dec
jp
inc
out
out
inc
and
std
lea
cld
dec
rorb
test
push
test
push
mov
or
sub
lcall
mov
lods
mov
push
and
jne
cmp
adc
test
sub
hlt
insl
push
jl
xor
repz
test
mov
push
sbb
enter
inc
fimuls
sti
mov
pop
lcall
xor
ds
ja
movlps
iret
pop
dec
or
sub
cmpl
adc
push
sub
mov
int
xchg
inc
add
sbb
mov
and
hlt
insb
cli
cmpsl
pop
aam
inc
stos
int
mov
xchg
push
mov
hlt
imul
lea
add
push
lea
lods
inc
bound
sbb
pop
jb
cmp
mov
outsb
retw
push
and
mov
push
scas
insb
xlat
push
js
jp
xchg
or
jecxz
add
pop
pop
mov
pop
inc
dec
insl
ret
shll
cmp
jp
pop
lret
mov
dec
sub
sbb
jg
sub
fxch
and
mov
cmp
paddw
ljmp
out
imulb
outsb
mov
jp
xchg
filds
dec
mov
xor
xor
orb
xlat
fildl
push
outsl
sbb
cld
sbb
jne
or
incb
sbb
lret
push
hlt
sub
arpl
adc
fldenv
rep
jae
outsl
stos
popf
push
daa
mov
dec
in
inc
mov
mov
or
add
sub
mov
sbb
pop
add
les
mov
repz
cmp
pop
cmpsl
out
je
dec
dec
mov
hlt
jl
icebp
push
mov
push
pandn
rcl
jg
lea
test
push
push
insl
cmc
fistpll
or
cltd
pop
sarl
stos
fadds
imul
lock
mov
jne
scas
jae
or
jne
cmp
dec
push
mov
int
pop
push
mov
sarl
cli
cmpsb
jl
movsb
dec
or
mov
cmp
add
enter
fstpl
sbb
mov
push
fldl
int3
js
jmp
cmpsl
push
test
aam
jmp
fildl
xchg
fnsave
rcr
jno
sti
jb
jecxz
outsl
popf
int
xor
inc
jns
rclb
add
xchg
push
outsb
lcall
stos
loopne
inc
aad
cmp
pop
mov
xchg
push
enter
cld
sub
rcll
testb
push
dec
pusha
aad
call
mov
loope
inc
inc
aaa
pop
sub
in
arpl
ljmp
cli
jg
fdivl
insb
insl
mov
rcl
cmp
adc
mov
daa
mov
pop
sbb
inc
or
or
fildll
pop
shrd
adc
ds
lret
push
sub
aam
ss
in
out
pop
mov
loop
push
hlt
and
mov
lock
popf
addr16
ret
sti
pop
hlt
cmovg
xorl
mov
xchg
enter
in
aam
mov
outsl
or
mov
cmp
bts
mov
push
and
aad
fsubl
popf
inc
and
ffree
test
shrl
mov
call
subb
ss
mov
idiv
push
outsl
xchg
stos
je
jnp
das
inc
adc
sbb
shrl
decb
pusha
test
outsb
push
popf
or
sub
cmp
mov
jmp
jns
mov
rcrb
pusha
test
daa
loopne
mov
sbb
aaa
xor
insl
in
adc
clc
scas
aam
or
outsb
sub
scas
enter
push
cmp
das
xor
repnz
cmp
aaa
sbb
pop
jl
cs
pop
add
sbb
fstpt
jnp
nop
pop
outsb
mov
bound
aam
jbe
arpl
out
dec
mov
or
cmp
mov
sub
and
scas
inc
mov
mov
mov
pop
nop
xchg
pop
pop
leave
mov
pop
pop
cmpsb
enter
fsubr
cmp
das
jo
push
clc
cwtl
or
cmp
in
add
mov
lahf
out
jle
test
adc
imul
push
std
xor
xchg
push
jb
fdivr
ficomps
xor
ret
popf
cmp
xor
jb
add
pop
jne
lcall
mov
dec
popa
jmp
cs
out
mov
daa
mov
movsl
ficoml
mov
or
leave
mov
jo
int
daa
inc
icebp
push
add
push
xchg
pop
add
leave
cwtl
adc
cwtl
push
cwtl
popa
hlt
sbb
cmpsb
stos
pop
loopne
inc
outsl
fmuls
pop
in
iret
inc
cmp
dec
pop
stos
mov
loop
pop
and
push
call
movsb
stos
cmp
sub
cmp
cmp
push
mov
out
dec
ja
pop
cmp
and
cltd
sti
dec
cmp
dec
xor
xchg
push
lahf
das
mov
pop
js
lods
push
movsl
adc
mov
repnz
fcmove
adc
mov
shll
mov
loope
and
mov
fcmovnu
add
int3
mov
scas
nop
testl
mov
leave
add
mov
cmp
sbb
lcall
imul
push
jno
rorl
out
cmc
dec
into
incb
dec
mov
xor
or
jnp
in
pop
cmp
arpl
adcl
nop
add
mov
aam
xor
loopne
sbb
aam
adc
icebp
cltd
jbe
dec
movsl
mov
call
int
scas
icebp
mov
into
inc
push
mov
or
outsb
mov
sub
loopne
push
andl
out
sbb
or
adc
cs
mov
andl
push
cmp
shl
push
inc
cmp
cwtl
push
fdivs
lea
xor
inc
push
clc
pop
pop
stos
mov
push
out
push
cmp
movsb
int3
js
test
dec
fcomps
dec
stos
out
and
jno
cwtl
fsts
roll
repz
pop
nop
cld
push
push
and
arpl
in
cmp
cs
incb
call
jge
mov
movzwl
adc
out
insb
call
xchg
mov
jbe
repnz
push
rcl
mov
fs
lret
insl
lods
mov
shlb
adc
mov
or
bound
mov
inc
mov
nop
push
lock
push
ror
fwait
call
pop
or
out
add
repz
push
adc
shrl
xor
push
xchg
inc
xchg
mov
daa
cmp
xor
add
push
jge
pop
mov
dec
pop
sbb
cmp
imul
xor
mov
xor
or
into
out
in
rcrb
gs
dec
idivb
inc
dec
aaa
daa
stos
or
pop
inc
dec
add
popa
test
sbb
add
ljmp
daa
scas
mov
hlt
or
pusha
into
mov
ret
sti
lret
pop
xchg
mov
lahf
in
dec
in
fmull
mov
jg
mov
pusha
mov
jp
xchg
sarb
movsl
add
pop
pop
cld
repnz
int3
sub
mov
add
aas
pop
or
insb
daa
add
ret
fwait
sbb
add
mov
adcl
inc
or
push
add
std
insb
cmp
imul
dec
or
std
cmpsb
cmp
mov
outsb
aaa
add
sbb
popa
rcl
adc
mov
sahf
fwait
lcall
adc
enter
mov
into
rorb
mov
mov
jae
sub
fs
xor
mov
adc
repz
mov
clc
dec
or
adc
scas
js
pop
loope
mov
addb
pop
imul
pop
add
inc
jne
xchg
sti
jecxz
mov
aas
aad
and
adc
scas
jge
sbb
icebp
add
xchg
enter
ljmp
jno
adc
mov
cmpsl
daa
andb
jmp
leave
jmp
mov
and
mov
aas
es
inc
stos
cmp
push
sbb
neg
mov
inc
xchg
cmc
add
inc
sub
or
ret
stc
push
ds
mov
xor
das
inc
xlat
and
dec
cmpsb
jb
sbb
loope
fcmovbe
sub
arpl
mov
mov
lods
into
cmc
faddl
adc
sub
push
sub
mov
rolb
adc
push
cmp
xor
xor
pop
xchg
push
ffree
data16
sub
loop
dec
and
cmp
pop
mov
rolb
xorl
pop
ror
push
add
pop
adc
int3
xor
mov
andb
mov
push
cs
fwait
xchg
movsl
int
into
mov
mov
mov
push
and
pop
xorl
and
xor
mov
lret
xchg
sub
rcr
movsb
add
push
or
pop
mov
sahf
xchg
lock
xor
daa
cld
pop
add
gs
mov
and
mov
aam
data16
xlat
into
in
inc
cmp
or
mov
sahf
mov
mov
cmpsl
sbb
out
ljmp
lahf
in
fmull
repz
int3
shrl
jl
shll
mov
icebp
es
push
dec
cmpsl
adc
push
adc
and
xchg
xchg
and
push
test
testb
xchg
and
push
cmp
cmp
dec
in
movsl
fsts
adc
xchg
or
mov
and
mov
and
push
xchg
mov
inc
mov
xor
pop
jp
out
add
shrb
jmp
push
and
insb
lcall
cmovae
test
or
push
push
shll
sub
lods
insl
inc
mov
sti
pushf
dec
pop
mov
imul
adc
popa
add
push
sbb
push
in
sbb
jbe
loope
fs
pop
pop
jne
xchg
xchg
sbb
pushf
add
fstpl
xorb
enter
pusha
pushf
roll
out
scas
xchg
ret
cld
jp
in
inc
outsb
mov
jae
mov
add
push
add
scas
cmpsb
cmpsb
xchg
sbb
mov
rorb
loope
sub
push
mov
pop
mov
out
cs
adc
rcrl
jns
lock
std
mov
aad
es
bound
adc
rol
jmp
les
mov
xchg
stos
sbb
mov
adc
xorl
fsubrl
jecxz
jecxz
and
in
push
add
fs
push
and
pop
in
sub
or
test
fdivl
lods
lcall
dec
pop
xchg
popf
mov
sbb
out
sub
add
shlb
sbb
repz
leave
mov
adc
lods
xchg
icebp
outsb
adc
dec
fdivp
pop
pop
stc
dec
test
or
lea
pop
popa
lock
or
fcmovnbe
test
dec
xor
idivl
mov
pop
xor
mov
lock
inc
testb
pop
cld
mov
outsl
pop
aam
iret
hlt
cmc
xlat
daa
xor
or
sub
stc
jno
pop
mov
xor
mov
sbb
stos
cld
xor
push
inc
pop
fnstcw
jo
and
jb
inc
cmp
in
sbb
mov
mov
clc
mov
fisttpll
xor
lret
push
mov
jle
dec
inc
mov
cmp
daa
mov
pushf
xchg
and
ret
mov
add
pop
cmp
pop
movsl
outsb
sub
dec
outsl
popf
push
push
je
mov
jae
les
out
loopne
int3
push
fidivl
xor
std
je
sbb
pop
xchg
jne
mov
cmp
mov
cmc
pushf
mov
push
pop
popa
cmp
mov
push
sbb
mov
sbb
sbb
roll
push
loope
mov
jne
jmp
int
jg
cwtl
push
mov
lahf
aas
add
adcb
cmpb
cmpsb
idivb
mov
ror
sub
aaa
push
and
into
mov
out
iret
mov
push
or
xchg
add
fisubs
fildl
inc
addr16
iret
std
push
pop
std
call
popf
xchg
jle
call
addr16
les
add
mov
cs
test
repnz
mov
cmp
les
sti
subb
jl
into
clc
add
or
in
sub
dec
push
sbb
mov
scas
sub
jbe
add
mov
or
push
inc
addr16
fcomip
mov
mov
addr16
add
adc
test
in
jns
mov
imul
and
cmpsb
inc
sub
testb
jl
dec
ret
stc
mov
or
fistpl
push
insl
dec
jmpw
imul
xor
xchg
lret
in
addl
test
fs
lcall
fadds
inc
out
stos
adc
mov
adc
dec
xchg
mov
rcrl
mov
mov
adc
stos
outsl
rclb
sarl
enter
add
adc
mov
mov
sti
xor
test
test
lea
jmp
adc
sbb
jne
fsubrl
sub
mov
call
dec
scas
add
arpl
loop
push
into
push
cli
sub
pop
pop
aaa
lret
cs
mov
insl
xchg
adc
int3
sub
xchg
inc
scas
pop
jmp
push
repnz
dec
loopne
mov
icebp
sub
hlt
rdtsc
push
test
cs
cli
mov
cmc
shrb
clc
mov
sub
or
clc
and
pop
mov
pusha
scas
or
push
sahf
mov
call
lret
push
shll
mov
xchg
or
shl
adc
loope
adc
cli
inc
fidivrl
orb
arpl
mov
push
call
push
mov
repnz
dec
out
push
mov
push
loopne
outsb
js
jg
roll
pop
insl
lret
xchg
cld
mov
shrb
sub
pop
stos
ja
and
sub
adc
imul
dec
fistpll
cs
das
shrb
adc
push
jns
xchg
jo
xor
push
push
lret
in
mov
mov
mov
pop
adc
xchg
or
push
insb
ljmp
push
jl
gs
popf
call
dec
lods
test
movsl
fcmovnu
sub
pop
cmp
and
stc
xchg
loopne
mov
pop
scas
mov
pop
push
js
add
repz
repnz
mov
push
mov
dec
pop
add
pop
dec
push
dec
mov
add
xchg
jge
xlat
loope
ljmp
int
pop
les
xchg
std
js
mov
dec
cld
dec
jle
adc
mov
mov
push
pop
fisubl
mov
inc
mov
push
stos
xor
pushf
test
sub
sti
adc
rcl
or
adc
lret
cs
enter
ret
test
cmp
cmp
mov
ljmp
and
cltd
adc
cmp
mov
mov
leave
mov
les
popf
dec
rcrb
cmp
mov
stc
mov
inc
mov
dec
int
push
stos
pop
sub
daa
in
xchg
sbb
rolb
dec
push
mov
mov
ja
bound
jb
and
add
and
adc
adc
std
lds
dec
icebp
mov
adc
pop
out
jmp
subb
out
xor
dec
stos
xchg
or
fwait
pushf
xchg
andb
push
dec
sahf
loopne
stos
xor
insl
jo
pop
ret
aaa
jl
in
movsl
pop
xor
mov
inc
push
jmp
rcll
cmp
cmp
enter
out
ljmp
icebp
jne
aam
jo
lahf
bound
test
dec
add
cmp
out
packuswb
sub
and
daa
aam
aad
or
push
bound
aaa
jne,pn
jae
rcl
inc
mov
cwtl
mov
es
add
cmpsb
xor
mov
pop
dec
shl
popf
mov
mov
ljmp
aaa
cmc
cmp
leave
clc
jecxz
push
outsl
dec
cltd
xorl
dec
aam
sbb
mov
mov
sti
pop
mov
cltd
push
aad
fsubr
das
add
inc
out
dec
fucomip
push
ss
xor
scas
dec
rol
sub
adc
scas
inc
mov
inc
or
sub
inc
scas
add
cmp
or
es
outsl
pop
sub
cmpsb
xor
cmpsb
add
pop
test
out
gs
dec
xor
divb
mov
push
aas
adc
xchg
pop
jns
sbb
fistpl
sti
idiv
xor
add
push
inc
insl
dec
repnz
pop
pop
xor
pop
loop
mov
mov
inc
and
mov
stos
pop
jo
lret
ljmp
sarb
imul
xor
inc
aaa
sbb
fwait
subl
mov
iret
pop
lods
orb
js
mov
stos
test
xlat
push
test
data16
outsl
addr16
push
mov
jg
daa
dec
arpl
cmpl
pop
call
cmc
aad
xchg
movsl
repz
in
xor
mov
cmp
dec
sbb
sbb
xor
pop
scas
jp
xchg
lds
and
fisubrl
jge
in
repz
xor
fiadds
repz
arpl
push
gs
fwait
aad
shlb
mov
js
mov
test
gs
inc
fldt
or
inc
push
lock
fldl
repz
mov
adc
nop
cli
lods
jp
mov
lcall
mov
popf
jo
into
aas
cmp
loop
lods
or
sub
cmp
pop
in
mov
int
lock
sbb
lret
lock
cmp
dec
jns
jb
je
add
xlat
je
dec
mov
outsl
mov
jnp
xor
hlt
xchg
lods
out
sbb
cltd
inc
adc
dec
pushf
out
xchg
sbb
lea
jle
rolb
lods
jge
popl
adc
pop
orl
cld
stos
popa
lahf
push
adc
pop
cli
out
out
mov
test
xor
inc
mov
ja
rcr
dec
and
frstor
aam
jo
dec
out
push
cmp
bound
rorb
jecxz
jg
call
cld
pop
jae
push
adc
add
cmp
mov
or
xchg
mov
push
and
sahf
movsb
ds
sub
mov
cmp
pop
cwtl
mov
inc
pop
sub
push
mov
xor
dec
arpl
pop
mul
pop
xchg
in
add
mov
mov
loope
sbb
call
jns
icebp
out
add
mov
push
hlt
cltd
or
lcall
mov
mov
call
mov
xchg
and
xor
adc
jne
mov
lock
adc
leave
lods
popf
dec
ret
inc
sbb
push
inc
lcall
scas
mov
lahf
les
js
lods
inc
test
add
in
push
fs
xchg
ficompl
jmp
mov
and
pop
xchg
or
jle
mov
dec
out
fst
repz
inc
pop
into
or
push
fcoms
clc
out
mov
sbb
push
xchg
xorb
popf
or
and
inc
sub
push
inc
aaa
mov
in
lahf
push
jnp
sahf
jp
jno
js
dec
imul
xchg
jg
jo
ret
mov
sahf
test
inc
and
jg
lock
dec
leave
jge
out
xchg
or
pop
out
adc
mov
cli
ljmp
insb
mov
mov
cltd
pop
insb
and
mov
sahf
mov
add
stos
inc
aas
in
push
movb
xchg
jae
cmpl
pop
stos
xchg
mov
aad
aam
cmc
repnz
fsubs
sub
mov
xlat
mov
hlt
dec
iret
inc
sub
and
jp
push
cs
add
into
into
jbe
repnz
stos
cmc
es
inc
fs
jmp
js
loopne
pop
adc
arpl
clc
leave
shll
push
negl
arpl
jge
jbe
xchg
mov
imul
cmp
bound
jmp
and
push
jno
dec
adc
and
lock
in
outsb
loope
mov
sub
and
jo
lret
dec
push
addr16
mov
inc
mov
adc
xor
xor
push
xor
cmp
jae
mov
popa
je
imul
sbb
push
aaa
lock
punpckhdq
dec
aam
gs
push
jns
outsb
dec
aam
mov
push
pop
out
inc
mov
lret
setbe
out
hlt
fildll
loope
push
pop
inc
fisubs
xor
les
mov
xor
scas
mov
mov
inc
sub
inc
xor
or
xchg
stos
xchg
and
adc
inc
mov
xor
mov
sub
pop
out
xchg
adc
xor
add
mov
frndint
je
addb
add
mov
dec
jbe
inc
adcl
subl
test
jle
jo
xor
xor
ja
cmpsl
rep
iret
jae
loope
fsubs
cmp
movsb
mov
xor
sub
stos
mov
into
mov
and
adc
ret
int
jecxz
nop
ret
jbe
imul
movsl
cld
adc
fisubl
jnp
or
adc
mov
out
mov
xchg
xor
inc
push
push
in
xor
ret
pop
fstpl
outsl
jno
clc
xchg
push
je
jne
arpl
rolb
outsb
push
movsb
lock
push
mov
adc
pop
fistps
inc
arpl
xor
rclb
mov
scas
pop
push
ja
lods
mov
mov
stos
aad
xchg
xor
pushf
jne
push
push
jbe
pop
lods
pop
xchg
cmp
js
out
mov
jne
dec
add
popa
mov
dec
bound
push
add
jnp
mov
adc
nop
add
arpl
adc
popl
test
in
sbb
cld
cld
mov
movsb
xchg
popf
push
loopne
test
mov
mov
std
sub
test
subb
pop
fsub
and
and
inc
xor
xchg
gs
sbb
inc
push
out
mov
xor
mov
scas
js
or
mov
xor
cmc
fmull
popf
sti
sub
adc
ja
rolb
mov
dec
dec
or
das
movsb
sbb
int3
mov
push
std
outsl
adc
xchg
jmp
lea
pop
or
jo
out
mov
xchg
ficoml
mov
dec
sbb
dec
dec
stos
fdivl
aam
data16
data16
adc
sar
jp
xchg
pop
imul
out
xlat
mov
out
sub
jmp
ja
enter
sbb
fldl
stc
fstps
fcomp
jns
out
ror
mov
cmp
shlb
mov
mov
lahf
icebp
xchg
inc
cld
sbb
fdivrs
pushl
out
bound
mov
xchg
xor
sti
sbb
sub
push
xorb
xor
daa
enterw
mov
jle
push
pop
ret
mov
sbb
sub
mov
mov
insb
and
dec
fwait
jl
into
ljmp
lods
into
addr16
ret
xchg
pop
inc
push
daa
xchg
out
sub
adc
mov
setno
daa
gs
das
mov
imul
ret
hlt
lds
test
xchg
fcmovb
mov
idivb
jnp
loope
ljmp
pop
mov
push
mov
pop
adc
cmp
ss
scas
hlt
adc
add
xchg
cmpl
push
mov
shlb
je
hlt
xor
xor
xorb
out
sbb
sbb
or
add
mov
je
aaa
js
jbe
fs
mov
mov
dec
in
dec
jg
insl
out
mov
push
es
icebp
aaa
and
pop
mov
jg
mov
xor
adc
xor
jmp
jae
push
pop
pop
std
sbb
scas
pusha
pop
xor
inc
popf
jo
inc
add
dec
jmp
aaa
clc
add
sub
push
inc
mov
das
fcoms
pushf
push
ret
popf
lea
sub
cs
sarl
fwait
test
popa
sti
xchg
test
add
lret
roll
mov
mov
loop
testb
add
roll
jnp
mov
push
jb
movsl
mulb
and
pusha
sbb
cld
or
popa
popl
addr16
stos
dec
dec
jae
ret
clc
ficoms
jae
push
nop
sub
cmp
int3
in
test
mov
push
imul
push
inc
pop
jge
xchg
and
int3
stos
outsb
stos
dec
fistpll
jle
lahf
jbe
xchg
dec
movsb
xchg
jno
leave
fidivs
es
and
rcrl
out
xchg
fistl
int3
mov
std
and
test
sub
and
xor
js
sbb
aas
adc
cmp
xchg
fisttps
sbbl
mov
inc
or
ret
add
cmp
testb
mov
mov
push
shll
test
fdivs
pop
lods
mov
popa
and
std
lret
les
and
dec
add
pop
push
push
aas
sbb
imul
jns
mov
push
dec
mov
in
es
cmp
or
jns
cmpsl
push
adc
popa
xchg
test
push
xchg
aam
ret
mov
daa
jne
inc
leave
push
lahf
arpl
sbb
jecxz
and
cmp
xchg
or
int
xchg
and
pop
fs
loopne
faddl
jbe
push
imull
jno
stos
orb
pushf
mov
push
in
and
mov
sbb
fcoms
out
shlb
and
insl
stos
icebp
cli
inc
fsubrs
dec
pop
xlat
imull
or
sub
mov
movsl
or
cs
bound
jg
test
mov
int
sbb
mov
stos
jns
out
mov
les
repz
fistps
xchg
xchg
xchg
imul
ss
and
cmp
jnp
pop
cs
shrb
or
lret
inc
pop
mov
mov
add
out
nop
jb
jecxz
xlat
lcall
mov
xor
jne
lock
jle
movsl
sub
scas
addr16
pop
adc
roll
push
add
jb
push
sub
sbb
lods
pop
mov
mov
rcrl
inc
mov
pushf
mov
sti
cmpsl
fists
je
push
dec
dec
or
fcomip
shll
call
dec
repnz
aam
addr16
and
push
shll
or
addr16
in
fildl
imul
popa
outsb
jnp
add
push
stos
fcomps
and
out
and
add
xor
ret
inc
mov
repz
mov
stos
std
mov
sbb
mov
push
pop
pop
and
outsl
fwait
outsb
mov
inc
stos
or
mov
sub
jg
pop
out
pop
dec
insb
clc
inc
pop
sti
lea
adc
scas
lret
addr16
shll
insl
in
ljmp
add
xor
pop
pushl
stos
sub
jg
mov
imul
fisttps
cwtl
or
leave
repnz
inc
pop
cli
add
xchg
jb
ret
sbb
aaa
xor
and
inc
jae
loope
jl
decl
test
add
dec
in
fstl
add
cmc
cmp
jge
cmp
push
inc
push
xorl
pop
bnd
mov
test
jns
jo
adc
stos
loopne
cmp
movsl
inc
xor
cmc
jl
mov
xchg
jnp
sub
mov
cli
cltd
and
pop
shll
pop
ret
pushf
roll
outsb
insl
sub
fs
std
test
ds
push
stc
out
enter
mov
jle
jmp
outsl
movsl
movsl
mov
adc
loopne
xchg
rcrl
sysret
inc
or
fs
pop
sbb
mov
mov
test
shll
add
cs
jnp
jge
jp
negl
jno
cmc
sub
sub
sbb
jmp
gs
mov
push
ss
xor
add
insl
sbb
lds
aam
sub
pushf
mov
in
insl
test
dec
cli
mov
xor
aas
andl
xlat
bound
or
xchg
and
xchg
mov
repz
pop
xor
nop
pop
stc
sbb
push
daa
cmpsl
out
test
jp
call
cmp
js
mov
fucomi
icebp
mov
or
lds
cmpsb
fnsave
js
lds
sti
pop
mov
mov
sbb
push
and
sub
mov
stc
sahf
xchg
stos
lret
pusha
cltd
sub
fimull
pop
mov
jb
xchg
add
mov
stos
dec
mov
pop
sbb
out
out
inc
addr16
add
imul
sbb
scas
jno
xchg
imull
sbb
imul
hlt
gs
or
in
jns
mov
out
roll
add
insb
cs
popf
out
cwtl
mov
fnstenv
mov
les
mov
mov
or
dec
test
movsl
outsl
outsl
ss
mov
cmp
in
add
push
and
sarl
add
and
imul
fs
inc
nop
push
push
inc
in
addr16
mov
aaa
ljmp
js
cmp
push
jg
clc
popf
jns
sti
mulb
test
sbb
test
xchg
out
push
fs
les
and
jae
adc
out
cli
xor
sub
pop
scas
pop
int3
andl
mov
and
mov
lods
cmp
xor
mov
push
xchg
lock
or
and
cmc
lret
ret
or
push
mov
xor
ja
int3
test
add
fisubl
ds
mov
leave
dec
movb
add
push
rcl
jno
adc
in
xor
aas
enter
lea
and
fucom
sub
push
aad
adc
sub
sub
nop
rcrb
mov
sahf
sub
mul
mov
pop
or
aad
and
xchg
lret
std
sarl
lcall
popf
xchg
aaa
icebp
fcmovnb
push
sub
icebp
imull
dec
aam
cmpsl
or
jge
jecxz
inc
ret
mov
jle
cmp
enter
push
mov
mov
pop
scas
mov
lea
xor
jmp
ficoml
nop
cmpl
or
cmc
shll
cmp
adc
jo
cmpsb
mov
dec
xchg
or
jnp
and
jp
jb
mov
jmp
pop
rorl
fmulp
mov
lret
daa
xchg
dec
roll
mov
mov
mov
jge
sbb
mov
ret
xor
shlb
xchg
mov
sbb
int3
dec
xchg
cmp
cli
mov
scas
nop
dec
mov
adc
xchg
fwait
cmp
stos
rcl
cmpsl
mov
test
cld
sub
adc
scas
push
pop
dec
int3
add
scas
ds
jl
inc
aad
out
and
repnz
sbb
mov
cmpsl
shll
sbb
hlt
in
jnp
lods
mov
jge
push
dec
mov
mov
pop
popa
test
test
mov
mov
inc
fcomi
inc
pmaxsw
jmp
push
scas
rolb
mov
adc
int
cltd
popa
push
push
scas
pop
adc
mov
sub
sbb
data16
repz
add
aam
clc
adc
dec
popf
test
test
push
cmc
in
inc
dec
pop
pusha
push
sub
jno
xor
orl
push
fildl
std
fwait
iret
mov
inc
xchg
push
popf
xchg
je
cmp
dec
and
push
movsl
lods
scas
cmp
popf
imul
pop
xchg
jo
shrl
sub
sbb
testb
das
push
loopne
xchg
pushf
stos
xor
pusha
insl
inc
imul
push
dec
scas
xchg
lods
fs
pusha
in
fdivrs
pop
mov
test
dec
popa
mov
ror
inc
xchg
rol
add
gs
mov
sub
cmp
and
iret
popf
push
cs
inc
add
imull
test
bound
fldenv
inc
xor
push
xchg
push
pop
jnp
fnstcw
cmpsl
repnz
popa
and
loopne
and
pop
popl
xchg
sahf
inc
push
push
add
aas
sbb
cmp
pop
sahf
xor
nop
call
subl
stos
or
ja
sbb
xor
adc
mov
sbb
fcmovu
gs
push
sbbl
xlat
push
lea
cmp
out
pop
test
int3
mov
sbb
pop
jge
push
test
ret
cmpl
arpl
cmp
testb
mov
into
les
fsubrs
pop
or
xchg
pop
sbb
lret
push
aad
fdivs
inc
adc
adc
pop
inc
pushf
mov
cmp
dec
outsl
daa
call
loop
jecxz
pop
push
add
jg
cmp
or
fiaddl
adc
or
add
xchg
sub
ret
sbb
sbb
ret
dec
cmp
je
out
push
in
mov
mov
sbb
dec
int3
dec
push
sub
push
xorl
inc
push
in
push
sahf
mov
pop
movsl
jo
cs
dec
push
lea
scas
lahf
cmpb
out
xchg
cmc
fchs
leave
icebp
push
pop
aaa
sub
sub
into
mov
add
sbb
sub
adc
and
shll
sarb
aas
insb
nop
mov
loope,pn
jbe
inc
lock
adc
bound
repz
notl
xor
testb
xchg
inc
repnz
movsb
xor
arpl
xor
mov
fsubrl
push
sub
sbb
push
pop
xchg
pop
jg
jp
dec
ret
mov
adcb
push
iret
jb
nop
mov
inc
add
adc
or
jge
movsb
xor
mov
mov
jl
lret
pop
sbb
imul
inc
andb
mov
mov
outsb
inc
jecxz
mov
sbb
in
pusha
or
xor
xchg
mov
or
cs
int3
lock
dec
push
pop
idivl
in
addr16
xlat
or
shl
sub
fwait
mov
cmpsl
cmp
outsl
es
lahf
add
fisubrs
xchg
sub
xor
fwait
jl
sbb
xchg
popa
xor
pop
and
xchg
aas
inc
jne
mov
mov
push
out
cmpsb
dec
mov
xchg
xor
inc
mov
lock
sub
inc
add
sub
in
push
in
jbe
pushf
add
mov
lret
enter
out
int3
bound
nop
ret
xor
xlat
popf
lock
jecxz
add
jp
out
jne
mov
mov
pop
pop
mov
outsl
movd
sbb
mov
fs
xor
push
enter
or
mov
lret
pop
call
sahf
sti
dec
fcomps
pusha
es
pop
leave
push
into
mov
or
or
mov
sbb
mov
dec
bound
sub
ds
push
sub
xchg
jl
sbb
jle
mov
push
daa
push
out
mov
cmpsb
pusha
xchg
inc
je
ds
decl
sub
adc
loopne
test
ljmp
add
sub
add
cmpsl
insl
lock
mov
leave
mov
fisttps
push
mov
popf
mov
add
jnp
lret
xor
add
dec
mov
sub
and
insb
and
jo
xchg
jb
add
in
add
lods
hlt
cmc
pop
mov
dec
popa
shl
imulb
sub
daa
or
mov
scas
clc
push
push
add
cmpsl
jno
jae
ja
aas
test
scas
lds
aam
dec
aaa
and
push
in
xchg
jp
or
add
xchg
addr16
shrl
mov
inc
ds
or
push
sahf
add
dec
xchg
and
xchg
sub
lods
xor
nop
rcrl
sub
jno
jo
daa
outsl
repz
daa
stos
pop
sub
insl
adc
xchg
adc
inc
mov
add
jg
adc
es
mov
inc
shrb
pop
adc
sarb
pushf
cmp
cmp
sbb
mov
xor
cli
jb
xchg
fs
in
in
in
push
fdivrl
test
and
into
loopne
in
stos
icebp
cwtl
loope
xchg
fmul
dec
push
mov
add
scas
inc
adc
add
test
inc
fsubrs
mov
push
loope
sarl
cmovge
xor
jb
clc
sbb
fwait
arpl
fstpt
jg
push
adc
xchg
xor
lret
mov
call
iret
xlat
rcll
sub
mov
insl
xor
dec
sbb
push
push
pusha
lea
addl
ret
cmp
sub
jp
dec
push
stc
daa
popa
daa
mov
sbb
mov
inc
cmp
lods
sti
sub
mov
mov
ret
push
pop
inc
add
imul
xchg
filds
inc
jae
xchg
xor
mov
fs
je
cmp
repz
ret
mov
and
mov
xchg
mov
inc
jbe
rcll
add
out
sbb
pop
xchg
sbb
std
or
mov
add
xchg
jg
scas
add
pop
div
xlat
adc
and
cmc
out
int3
inc
cmpsb
in
cs
xor
sub
out
fs
mov
comiss
pop
shlb
mov
ja
test
pop
or
lods
fs
cmp
out
sub
jg
mov
lretw
cmp
sub
aaa
inc
sbb
jmp
ljmp
enter
jle
dec
sub
xchg
xchg
enter
movsb
xor
xor
push
rcll
jecxz
shll
jmp
cwtl
jle
xor
jae
aad
fs
out
sahf
cmp
out
cmp
add
mov
fsubp
mov
nop
sbb
in
sbb
stos
xchg
add
xor
jl
push
xchg
mov
dec
mov
into
out
jg
daa
cld
inc
int
xchg
loope
mov
loopne
rcrl
enter
pop
outsb
sub
adc
xor
in
xchg
xor
inc
jp
leave
adc
bound
jg
mov
mov
mov
pusha
movb
jns
iret
push
lret
rolb
mov
push
push
mov
mov
insb
dec
add
adc
sbb
xchg
sub
sbb
sbb
add
popa
ss
and
sahf
hlt
jb
icebp
or
movsb
lea
mov
xor
push
iret
xor
pop
in
jge
out
mov
fsubl
push
mov
sub
mov
sbb
mov
jecxz
or
pop
xchg
jmp
xchg
movsb
and
mov
test
icebp
jg
sub
xor
stos
xchg
stc
mov
jge
bound
or
xchg
mov
jnp
paddd
fidivrs
stc
mov
sti
fdivrs
adc
fcmovnb
jno
mov
lret
int
pusha
divb
fldenv
mov
hlt
push
outsl
sub
and
enter
rcrl
mov
fdivrp
jle
mov
arpl
scas
dec
fstp
popa
test
push
xor
fistpll
scas
lods
popf
fcomps
inc
xchg
mov
imul
rorb
inc
shlb
jb
out
dec
cltd
xor
int
jg
dec
jno
xchg
fldt
jmp
sbb
lods
addr16
xor
in
gs
cmp
add
mov
adc
jo
xchg
fmull
mov
stos
rcr
fsubs
fs
cli
fistpll
pop
ss
rclb
dec
ljmp
dec
xor
sbb
movsbl
cmp
dec
mov
inc
mov
movsl
dec
mov
mov
xor
pop
jecxz
data16
stos
or
lret
push
mov
cmp
test
pop
cmp
je
jo
inc
jge
sbb
push
sub
inc
xor
movsl
lahf
loope
pusha
aaa
insb
data16
mov
xor
mov
lods
test
rol
cmpsl
daa
enter
push
adc
in
jbe
pop
or
mov
test
inc
xchg
ds
mov
test
enter
imul
sti
rcrb
cltd
in
mov
lcall
push
jle
iret
add
adc
cmp
in
lods
sbb
mov
loop
nop
xor
loope
add
inc
mov
mov
mov
jns
jae
add
and
mov
sbb
jge
es
mov
int3
mov
jb
leave
cmp
jbe
dec
roll
sbb
push
testl
sub
repz
ja
mov
inc
popf
push
aam
sub
sbb
push
mov
stos
push
cltd
mov
cmovne
and
xchg
lahf
pop
and
outsl
push
xchg
xchg
mov
mov
inc
repnz
pop
mov
or
mov
add
mov
out
sbb
cmpsb
jbe
xor
pop
mov
mov
lret
sub
fistpll
loopne
mov
and
push
cmpb
daa
leave
stos
sti
loopne
and
daa
xchg
bound
and
das
negl
mov
loope
mov
stos
lret
xchg
add
or
mov
sbb
dec
cmp
dec
mov
inc
hlt
clc
hlt
cwtl
movsl
cs
lds
aaa
out
inc
push
mov
loop
leave
enter
sub
sub
insl
faddl
jne
incl
xor
dec
sub
or
pop
mov
mov
stc
ret
adc
mov
xchg
insb
in
fwait
mov
sub
or
mov
sub
dec
xchg
icebp
xchg
xor
mov
xor
or
inc
out
dec
xor
idivb
jnp
or
std
ret
mov
jmp
cmp
adc
rcrb
or
inc
sbb
flds
das
lret
and
mov
fstpl
jno
jbe
pop
pop
cs
jo
jp
cwtl
movsl
jl
ret
loope
insl
or
shrb
pop
rcll
adc
sti
mov
loop
movsl
shr
insb
mov
enter
adc
jno
pop
push
jmp
xchg
or
or
push
fs
pop
cmp
mov
cmp
or
push
mov
clc
aaa
adc
repnz
push
cmpsl
incl
fbld
adcl
push
repz
popa
pop
arpl
push
cli
imul
jle
dec
inc
pop
jb
pop
mov
xchg
movsb
jmp
sbb
sub
fcmovnb
and
inc
mov
shl
out
and
rcrl
sarb
mov
mov
sub
and
sbb
in
stos
mov
pusha
ret
cmp
sub
pop
pop
shll
xor
aam
and
int
push
mov
lea
add
shll
lods
cltd
pop
mov
ja
xchg
out
add
ret
dec
cs
aam
jg
je
push
movl
or
mov
mov
rcl
cmpsb
hlt
xor
lock
xchg
subl
lret
int3
loop
repnz
jb
lahf
shlb
add
xor
imul
xchg
in
testl
mov
pushw
jp
pushf
add
push
insl
cmp
push
xor
repz
cmpsb
or
mov
jmp
popf
enter
mov
and
mov
ljmp
jbe
mov
sub
xchg
rclb
imul
out
iret
iret
sub
mov
test
adc
mov
jp
dec
cmc
sahf
inc
test
lods
sub
push
xor
lods
fstpt
push
xchg
push
in
xchg
lock
mov
push
pop
xor
icebp
ds
insl
dec
icebp
data16
daa
jne
cld
call
push
cmpsl
mov
test
xlat
stos
mov
orb
mov
xchg
pop
loop
sar
rcll
sbb
pop
repnz
aam
cltd
dec
dec
or
shll
addl
subb
mov
sar
push
mov
das
inc
push
jo
mov
mov
mov
mov
mov
call
and
subl
jne
je
or
frstor
or
or
dec
std
cwtl
push
test
call
leave
nop
cmc
dec
cmp
push
incb
sub
pop
pop
or
je
dec
cmp
ret
std
leave
push
icebp
pushf
psubusb
js
cmp
arpl
pushl
sbb
hlt
loope
adc
xchg
lods
imul
ffreep
mov
nop
movsl
movsb
nop
aaa
decb
pop
rolb
inc
and
mov
movsl
jge
insl
sub
fwait
dec
bound
cmp
rclb
fwait
xchg
pop
in
outsb
frstor
dec
xor
or
pop
push
mov
push
sub
rclb
shr
xchg
rolb
or
jnp
sahf
and
test
test
lea
xchg
cmp
loope
ss
loopne
ljmp
jge
bound
mov
popa
mov
add
and
inc
test
mov
pop
mov
adc
es
cld
lea
je
xor
inc
or
mov
lret
addb
das
pop
andb
call
insb
fisttps
push
xchg
test
ficoms
mov
add
pop
cli
mov
dec
mov
push
xor
xor
fiaddl
popf
and
pusha
push
adc
lahf
add
mov
adc
popa
fdivs
sahf
lods
xlat
icebp
pop
cli
jo
add
sarb
or
jecxz
mov
add
push
mov
dec
bound
jo
sti
adc
mov
into
or
lcall
repz
sub
sub
sahf
insl
pop
lcall
das
or
lock
mov
popfw
sbb
adc
inc
inc
mov
into
repz
xlat
subb
jmp
cmovns
add
cmp
loope
mov
jns
pop
sub
push
data16
popf
movb
push
adc
add
pushf
jg
dec
pop
ret
mov
cwtl
shll
das
inc
out
cmp
aam
dec
in
mov
ja
pop
push
adc
lea
sti
ss
ds
imul
xlat
scas
inc
push
mov
pop
add
pop
jle
negl
int3
add
leave
jnp
jbe
inc
mov
dec
xor
mov
fsubrp
outsb
xor
sub
xchg
std
add
mov
out
mov
cmpsb
enter
pop
mov
pop
hlt
cmp
int3
pushf
rcll
xchg
test
dec
push
imul
jmp
stos
dec
mov
jmp
inc
or
lcall
stos
fisttpl
das
push
mov
cs
nop
lret
lods
les
shll
lcall
lea
out
cmpsl
addr16
sbb
mov
mov
int
add
push
cmp
lret
ds
shl
arpl
xor
out
sub
and
fs
mov
inc
push
push
inc
cmp
pop
sbb
xchg
cmpsb
inc
xchg
sub
test
add
in
xor
and
jbe
dec
push
add
loopne
or
test
aaa
fnsave
jp
xorb
pop
push
sub
enter
gs
lahf
xchg
or
push
testb
outsb
push
adcb
add
fstpl
lcall
clc
orl
jecxz
push
comiss
dec
or
xchg
int3
mov
sarl
push
xlat
aas
lahf
and
mov
sbb
mov
ss
fildl
mov
add
sahf
push
test
dec
mov
xor
mov
fdiv
jge
xorl
mov
inc
lock
mov
cmpsl
xor
dec
popa
and
jmp
scas
or
dec
cmp
lahf
cmp
xchg
iret
js
in
rcll
dec
cmp
pop
sbb
push
out
in
out
xor
sbb
lret
lret
and
push
adc
cmp
jle
mov
mov
ffree
jno
and
shl
lods
push
sbb
int
fcoml
popf
leave
inc
ds
sbb
clc
lret
js
xor
push
jae
sarb
imul
mov
pop
sti
mov
jg
push
mov
and
cmp
cmc
cmp
fwait
inc
xchg
sub
and
lock
jne
call
out
insb
aam
sub
mov
push
xor
cmp
cld
adc
popf
cs
cmp
outsb
js
mov
hlt
hlt
push
xchg
insl
cld
test
dec
mov
leave
dec
bndldx
sub
fimull
mov
xor
mov
rclb
mov
add
popf
enter
or
stos
test
lret
fdivs
xor
xchg
aam
loope
mov
outsb
cltd
mov
mov
and
dec
rcl
mov
push
mov
inc
testb
out
jmp
jbe
sub
cmp
sarb
push
out
gs
sar
mov
mov
nop
sbb
mov
push
sti
adc
bound
outsb
mov
js
add
aam
cmp
pop
push
arpl
dec
lret
out
rcrb
enter
das
inc
xchg
pop
mov
imul
lods
sti
push
scas
scas
dec
cmp
add
fistpl
jb
cld
je
adc
lods
jne
dec
je
xlat
or
inc
mov
and
inc
sahf
xor
sti
sbb
mov
xchg
jg
cvtdq2ps
cmp
adc
popa
lcall
lahf
les
popa
addb
cmpl
jmp
add
sbb
aas
aaa
ja
mov
cs
jns
xor
jge
and
jg
xor
mov
push
dec
cmpsl
cmpb
addr16
outsl
divb
sbb
adc
or
dec
mov
js
outsb
ljmp
out
test
cli
imul
out
sub
mov
testl
lahf
jp
out
mov
test
mov
or
jo
mov
ja
mov
and
push
int3
repz
xchg
test
inc
mov
fisubl
imul
js
pop
push
push
scas
xchg
cmp
push
jmp
rcr
stos
mov
xor
lahf
inc
loop
xchg
insb
jno
subl
mov
push
mov
outsb
or
xchg
bound
nop
push
jg
loopne
lods
or
pop
or
cmp
xlat
pop
mov
sarl
pop
aaa
icebp
and
pushf
dec
test
lods
mov
xor
xlat
pusha
sub
out
push
mov
jbe
lock
mov
iret
fisubs
mov
popf
pop
fsubrl
adc
in
mov
dec
mul
jmp
xor
add
mov
cmovno
or
std
mov
outsb
dec
mov
pmulhuw
popf
nop
in
aaa
pop
push
loopne
jbe
data16
sub
cmp
cmpsb
push
ljmp
push
loop
cld
or
icebp
clc
sti
jb
aaa
pop
xor
sub
mov
mov
je
mov
cmp
fidivl
or
cmc
sub
repz
adc
xor
nop
dec
jo
mov
fsubrl
mov
pushf
or
into
cmpsb
lcall
or
lods
dec
mov
fadd
mov
mov
jecxz
jp
mov
cmpsb
dec
cmp
jge
push
pop
mov
sbb
xchg
cmp
pusha
test
clc
psubq
inc
push
sub
push
pop
fcmovne
jae
pop
ret
in
lds
sbb
ljmp
dec
pop
popf
daa
or
insl
cmp
cmc
lcall
lahf
inc
cmp
xor
mov
movsl
mov
xchg
mov
rcrl
jle
and
jb
xchg
mov
pop
mov
pop
add
adc
push
mov
cmp
test
negl
mov
xchg
aad
jle,pn
dec
mov
inc
xchg
cmp
arpl
outsl
jg
int3
and
sub
and
pop
es
mov
xchg
out
or
cmp
imulb
add
or
lcall
push
subb
popf
sbb
shlb
sbb
sahf
mov
push
flds
popa
dec
sbb
lahf
call
imul
out
into
pop
mov
roll
pop
js
jg,pn
pop
mov
shll
clc
enter
push
lods
imul
sarb
les
outsb
ficoms
adc
ljmp
lods
mov
xchg
xchg
mov
stc
jo
push
pop
sbb
push
inc
inc
fsubrl
sub
dec
push
sbb
pusha
dec
sti
cltd
sahf
les
jge
cmp
push
je
lods
cwtl
jo
xchg
xor
into
sbb
test
dec
jl
sti
jecxz
mov
mov
loopne
adc
out
jns
pop
dec
or
pop
add
ret
in
repnz
jnp
mov
and
lea
cmp
pop
subl
dec
hlt
stos
sbb
test
inc
andb
mov
mov
insb
into
lods
inc
cmp
xchg
sub
mov
lods
xor
xor
jmp
sub
or
nop
and
outsl
cmp
xchg
mov
cwtl
pusha
xchg
add
scas
sub
outsb
mov
xor
add
not
ret
fildl
dec
sahf
addb
les
mov
addr16
cs
jb
mov
shl
popa
mov
repnz
adc
mov
adc
loope
mov
aaa
push
pop
jno
mov
sbb
add
loop
dec
xchg
dec
rorb
inc
sub
shll
jge
pop
xor
mov
cmp
lahf
sbb
dec
mov
enter
scas
fsubs
cltd
jl
push
mov
add
adc
mov
mov
pop
aam
dec
scas
iret
imul
mov
mov
xor
adc
mov
repnz
inc
jl
jl
add
fiadds
out
sub
shlb
mov
add
cmp
and
lahf
cwtl
aaa
jns
mov
xchg
popa
mov
in
push
xchg
sbb
faddl
xchg
cmp
mov
push
outsl
pushf
ja
mov
cltd
and
add
mov
sbb
scas
sub
push
test
fsubl
dec
adcl
roll
mov
sub
sar
jb
push
nop
mov
sbbb
push
mov
xor
sbb
and
mov
lahf
cmc
and
xchg
lret
sti
aad
push
jbe
mov
jp
les
leave
filds
andb
jbe
jmp
jae
std
movsb
inc
rcr
testb
leave
push
in
push
jl
jg
sar
sub
cs
jl
arpl
fnsave
mov
push
mov
xchg
jmp
test
loopne
aad
sahf
push
stc
insb
mov
les
mov
pop
adc
test
and
push
mov
fstpt
outsb
and
lcall
mov
cli
dec
pop
mov
je
test
xchg
call
mov
xor
mov
inc
and
int3
sarb
gs
rcrl
lahf
inc
lods
and
iret
mov
xchg
ljmp
lods
gs
cmpsl
inc
inc
inc
mov
out
dec
xchg
std
adc
scas
test
fiadds
lds
lcall
repz
pop
lds
push
sti
sbb
dec
aas
jmp
xor
pop
sbbl
jmp
enter
ret
mov
xor
testl
pmaxub
mov
jno
dec
push
out
inc
fs
sbb
div
mov
lea
cmpsb
imul
jp
jg
ljmp
pusha
call
add
cmp
adc
add
mov
add
jnp
lods
sbb
inc
loope
es
roll
sub
cmp
sub
aad
inc
hlt
mov
or
fstl
mov
loope
mov
pop
jp
imul
testb
push
mov
idiv
lret
cmpsl
adc
mov
inc
mov
fwait
jecxz
cmc
inc
inc
add
pop
xchg
fstpl
pop
sti
lret
gs
or
testb
sbbb
jmp
int3
adcl
sbb
jbe
add
hlt
fisubrl
aam
xor
adc
test
std
call
mov
mov
cmpsb
xchg
js,pt
xor
jnp
cli
lret
les
in
xchg
xor
push
cmpsb
enter
or
adc
mov
cmp
cmp
pop
and
orb
and
mov
jns
push
repz
popa
negb
xchg
jnp
std
int3
je
mov
jle
cmp
mov
pop
out
fstl
dec
and
divl
leave
jbe
sbb
fwait
push
xor
jbe
add
divb
cmp
enter
fwait
mov
pop
dec
push
jecxz
mov
imul
pop
int
xor
fwait
and
jmp
outsb
push
mov
push
jge
inc
sahf
xchg
subl
je
pop
int
xchg
pop
push
mov
pop
popl
mov
adc
jne
std
sbb
loope
imul
leave
mov
xchg
mov
les
mov
and
lds
mov
push
jecxz
adc
pop
push
imul
jmp
test
fidivs
ljmp
mov
pop
sbbb
xorb
jns
jp
aaa
popf
cmp
lods
and
es
dec
sub
or
push
in
adc
not
jo
add
inc
fisubl
out
jb
mov
jl
loop
pop
sbb
lret
or
data16
cmp
int3
fldcw
repnz
sub
shll
mov
arpl
pop
ja
cmc
shll
xor
sti
or
xchg
fcoml
test
lcall
adc
inc
jb
cmp
test
das
add
xchg
jg
movsb
loope
mov
sub
pop
sti
or
insl
scas
sbb
push
xchg
subb
scas
inc
filds
gs
pop
frstor
test
cmp
sub
test
add
push
nop
or
imul
inc
fidivrs
add
mov
pop
mov
mull
test
sub
cli
or
movsb
dec
sub
inc
push
stc
jbe
fcmovbe
mov
imulb
xchg
dec
pop
cwtl
xor
xchg
hlt
imul
xchg
stos
sbb
add
xchg
or
mov
fcoms
inc
push
je
test
push
push
inc
cmp
daa
xchg
or
add
mov
ret
xor
jo
xor
mov
and
or
mov
lahf
jmp
ret
inc
icebp
pop
jp
sub
jne
jne
dec
addr16
xor
cmp
push
nop
lods
xlat
cli
cltd
fcompl
fwait
in
mov
or
movsl
bound
and
and
xor
rol
divl
les
jno
cmpl
mov
fsubs
subb
flds
push
fwait
loope
xlat
dec
pop
sub
mov
push
add
cwtl
sub
outsl
add
mov
leave
or
std
sub
sub
cmp
xchg
pop
fwait
jnp
jecxz
or
sub
gs
sti
mov
or
les
loopne
andb
orps
sub
shll
cld
fs
aas
push
adc
pushf
push
push
add
loopne
mov
sahf
leave
mov
sub
mov
pop
lcall
notl
inc
imull
bound
bound
outsl
push
decb
inc
mov
push
inc
pop
sbb
fsubs
pop
orb
lds
nop
cwtl
pop
lock
imull
push
mov
pop
mov
sti
inc
mov
sbb
mov
ja
sar
sbb
ret
jl
sbb
inc
inc
sahf
mov
inc
mov
cmp
icebp
push
das
dec
cmp
push
shrl
mov
dec
mov
sbb
out
xor
cmpsb
rcr
mov
sub
jmp
pop
add
pop
cmp
shlb
cwtl
movsl
iret
sti
mov
ljmp
mov
into
das
pop
inc
pushf
and
rcrl
lcall
sbb
or
and
or
xor
fs
adc
push
les
add
iret
cwtl
sbb
sub
sub
xchg
jbe
test
sbb
in
sub
mov
jg
movsl
and
aam
decb
in
test
in
sysexit
movsl
arpl
xor
js
fcmovnb
xchg
pop
mov
push
clc
xchg
mov
into
mov
test
sub
in
pusha
push
in
push
adc
test
dec
pop
cmp
sub
mov
pusha
addr16
push
push
add
pop
add
sbb
in
repnz
push
mov
in
and
dec
mov
jmp
mov
or
in
mov
xchg
push
mov
xchg
add
dec
jmp
dec
repz
sahf
jns
mov
jg
or
lret
das
imull
imul
enter
jnp
loopne
adc
push
popa
xchg
faddp
stos
xor
inc
add
xor
test
jp
sub
pop
and
mov
adc
ror
push
out
lock
addb
scas
jecxz
jmp
movsl
add
mov
cli
mov
dec
movsl
jb
pop
lahf
jl
leave
pop
rclb
xchg
das
and
xchg
pop
mov
and
pop
aaa
push
movsb
cmp
xchg
insl
sub
pop
lods
in
test
or
adc
jge
pop
mov
decl
test
xchg
jo
or
call
push
push
dec
or
push
leave
addl
pop
dec
cmp
pusha
int3
fwait
sbb
pop
ds
xchg
xor
lods
icebp
icebp
sub
add
inc
jle
repnz
mov
pushf
enter
dec
inc
jne
mov
push
or
lret
popf
push
les
inc
add
mov
push
and
loopne
inc
adc
jns
sti
xchg
jg
inc
mov
sub
in
add
inc
dec
mov
mov
sub
push
lods
inc
cld
sub
inc
negl
xchg
insb
cwtl
jbe
lret
out
add
test
psadbw
sbb
movb
jg
xor
pop
mov
pushf
lret
movsl
mov
xor
mov
sub
inc
outsb
inc
cmpsl
in
and
mov
les
xlat
test
or
fwait
lock
aas
ret
ret
lea
pop
xchg
or
pop
daa
lea
mull
or
daa
inc
sub
pop
lock
dec
pop
mov
jns
mov
push
jne
call
dec
xchg
into
mov
dec
cmpsl
aad
cmc
sub
dec
dec
ret
mov
ja
or
push
jne
int
clc
out
popa
arpl
sub
xchg
mov
ja
cmp
out
adc
push
loope
sbb
mov
add
push
shlb
cs
daa
imul
or
icebp
push
imull
xor
lcall
add
add
cmp
call
lret
aam
lds
add
jo
xor
jns
into
xchg
les
sbb
rcll
out
inc
inc
or
inc
adc
fwait
mov
cs
cmpl
add
push
xor
js
jns
stos
lahf
mov
dec
pusha
cld
pop
pop
inc
addb
adc
test
xlat
fwait
pop
es
mov
adc
xlat
int3
pop
stos
pop
ss
push
movb
adc
sbb
mov
cli
or
ret
xlat
scas
mov
fbstp
cmpsb
pop
dec
and
mov
popf
ret
xor
jmp
out
jns
shlb
lock
inc
scas
idiv
sbb
test
bound
xchg
cwtl
push
cmp
jecxz
and
pop
sub
bound
out
outsb
lods
mov
negl
cmp
pop
das
daa
sbb
int
cmp
xchg
jle
pop
mov
xor
dec
or
pop
add
jae
fildl
xor
and
icebp
and
sbb
ljmp
xchg
push
insb
xchg
xorl
into
das
jb
mov
stos
cmpsb
push
movsl
cs
jecxz
stos
dec
cmpsl
mov
sub
jbe
pushf
daa
out
outsb
roll
mov
sub
out
pop
testl
ja
jae
outsl
mov
outsb
fldenv
popf
adc
jno
aas
inc
sub
mov
iret
test
push
mov
lock
and
adc
in
es
and
pop
fiaddl
sbb
clc
in
pop
ret
mov
fs
push
cld
add
mov
test
or
mov
out
cmp
das
pop
sbb
xchg
push
btc
mov
dec
and
mov
sub
ret
daa
out
ds
jle
dec
and
out
or
xorb
stos
sbb
testb
push
pop
shrb
jne
es
sbb
int
das
dec
in
add
es
push
cs
xor
xchg
or
out
sti
aam
and
aad
inc
lods
adc
push
ret
insb
sbb
cmp
or
int3
mov
inc
ljmp
pushw
xor
fidivrl
clc
cmp
push
pop
xchg
or
sub
out
out
adc
dec
mov
and
adc
add
push
push
in
cmp
cmp
in
pushf
sti
ja
jmp
mov
or
push
inc
call
nop
adcl
fs
jbe
dec
mov
jmp
add
loopne
pop
mov
cmp
test
pushf
mov
imul
lret
jmp
leave
add
dec
sub
es
mov
pop
push
adcl
dec
hlt
shl
push
sub
jns
jmp
test
imul
lret
mov
insl
in
mov
push
je
outsb
push
dec
mov
push
cmp
or
aad
push
jp
cld
xchg
dec
das
int
push
roll
mov
sbb
dec
shr
dec
xor
cmpsb
imul
and
or
and
push
jg
cwtl
xor
xchg
inc
jns
cmp
adc
xor
dec
cmpsb
cmpsb
push
cmpsb
mov
enter
fsubs
rcl
mov
adc
mov
movsb
xlat
add
scas
xchg
jns
jmpw
adc
mov
stos
int
cld
add
cmp
loopne
push
cmp
and
jmp
rorl
sbb
push
jnp
stc
sub
stos
mov
lods
in
xchg
mov
adc
cmc
adc
jge
pop
rcl
xchg
inc
aas
jbe
adc
movsb
call
pop
jno
pop
and
call
shl
sub
cwtl
jge
clc
xor
inc
test
cld
lret
jae
jne
xchg
out
out
xchg
mov
js
js
mov
jecxz
dec
mov
sub
fisttpll
scas
testb
push
sub
cmp
xchg
sbb
movsb
cwtl
mov
sub
push
inc
mov
xchg
aas
xor
cmp
pop
xor
je
jns
jle
xor
fsubrs
iret
pop
ud0
jb
inc
mov
or
imul
rol
cmp
mov
push
ljmp
sti
sbb
cmpsb
jno
mov
das
lcall
add
mov
push
scas
imul
into
pop
ljmp
lcall
sbb
gs
jnp
les
cltd
and
pop
dec
inc
lock
mov
jo
pushf
aam
xchg
adc
enter
stos
inc
jbe
scas
repz
sti
inc
dec
sub
pushf
fistpll
cmp
arpl
cmpsl
xchg
xor
aad
out
push
add
ja
loopne
test
clts
and
or
inc
mov
in
adc
lock
gs
jb
mov
and
or
adc
inc
jp
popf
mov
or
dec
mov
pusha
mov
or
and
cli
leave
ss
add
repz
in
push
xchg
fmull
add
push
and
cmc
pop
xor
and
fsub
xor
shl
dec
xchg
ret
and
sti
mov
ja
push
mov
mov
lea
testb
cmc
mov
dec
push
es
jge
push
pop
mov
mov
rcl
daa
inc
lods
and
jns
adcb
int
inc
xlat
xchg
cmpsl
shr
lods
test
lods
lea
mov
out
jmp
mov
hlt
fcompl
les
insl
add
sub
sub
jno
adc
rcll
addr16
shl
test
inc
orb
lcall
xor
in
aam
mov
jne
dec
push
add
pop
pop
cmp
add
jmp
xchg
and
nop
popa
pop
scas
mov
mov
pop
xor
pop
test
jl
and
aas
gs
iret
ret
in
je
pop
mov
or
add
fcomps
in
or
stos
jmp
fsubrp
adc
pop
jmp
dec
sbb
rorl
xor
outsb
dec
ljmp
gs
xchg
std
lea
frstor
lods
orb
mov
aaa
jg
mov
push
and
stos
sti
push
dec
or
pop
inc
fadds
xor
mov
jl
repnz
xchg
test
push
out
ds
or
pop
into
xor
outsl
mov
into
add
sub
adc
jg
fdivrl
lret
pop
cmp
fwait
or
int
ret
sub
inc
pop
sub
mov
or
mov
mov
mov
ret
xchg
ret
mov
jbe
shll
outsl
and
mov
mov
push
pop
scas
and
add
push
jecxz
loopew
scas
xlat
push
xchg
lods
fadds
pop
mov
loope
sbb
in
mov
jmp
scas
add
inc
cmpsb
push
jbe
sti
pop
ljmp
test
sub
lret
jle
imul
adc
mov
jmp
lret
mov
je
roll
hlt
xchg
das
mov
ficomps
mov
jns
mov
in
je
mov
test
add
inc
inc
roll
push
mov
int
pop
push
cs
loop
or
fnsave
les
shlb
das
jnp
arpl
cmpsl
mov
mov
sbb
lock
lods
push
xor
rcrl
data16
repnz
arpl
decl
add
dec
sti
in
mov
jb
in
aam
sbb
xchg
out
fists
jmp
popa
jne
dec
mov
mov
jle
or
xchg
pop
rorl
insb
rclb
xchg
sahf
cmp
lods
scas
cmp
adc
sahf
jg
cmc
jae
inc
lock
scas
mov
js
sti
loop
test
mov
push
xchg
gs
cmp
movsl
mov
sahf
insl
jecxz
ret
cmpsb
mov
movsl
enter
sub
pop
dec
pop
sub
imul
movsl
nopl
dec
and
in
jecxz
dec
call
mov
daa
out
notb
pop
add
pop
sbb
int3
adc
adc
addr16
mov
mov
cmp
inc
inc
mov
pop
sub
push
sbb
outsb
sbb
idivb
or
sahf
lcall
push
xor
in
pop
jle
jbe
in
dec
sbb
ret
ss
dec
clc
pop
iret
int3
clc
jne
je
pop
aaa
xor
std
mov
mov
push
nop
in
ljmp
movsl
stos
std
jo
jne
mov
insb
pop
scas
repnz
cwtl
aam
inc
add
xchg
push
mov
adc
stos
or
mov
movl
es
insb
bound
jge
mov
jmp
or
mov
sbb
mov
pop
pop
adc
cwtl
mov
fmul
out
sub
push
addr16
xchg
pop
fmul
ret
outsl
mov
xor
push
clc
data16
xor
mov
mov
sbb
xchg
sbb
xor
es
mov
push
dec
mov
stos
and
jae
popf
jo
xchg
inc
dec
stos
push
jp
fwait
testl
shll
int
das
or
pusha
shll
and
xchg
or
sbb
xchg
push
mov
adc
adc
xchg
out
test
js
mov
lret
xchg
push
popa
sub
out
test
xchg
in
dec
leave
inc
push
push
cmp
out
imul
dec
inc
xor
out
xchg
cltd
les
out
add
test
call
cld
adcb
push
cmp
adc
mov
ret
jo
ret
test
pop
pop
dec
outsb
test
sahf
inc
movsl
in
sbb
pop
xchg
jbe
and
pop
xchg
lcall
jno
jp
cli
xchg
movsl
inc
outsl
roll
mov
mov
sub
inc
mov
inc
mov
dec
add
adc
and
sbb
push
inc
push
push
cmp
fisubrs
dec
cmp
push
rcll
fsub
out
aaa
mov
push
or
and
cmp
jae
lds
pop
test
adc
in
push
shufps
pop
push
decb
inc
cmpsb
dec
in
and
sahf
imul
xchg
dec
sbb
mov
mov
xchg
rclb
insl
sbb
test
xchg
iret
cmpsl
and
xor
inc
ja
or
ja
fisubl
jb
mov
fistps
inc
lds
jne
and
cmp
aad
movsb
fidivrl
dec
push
pop
push
les
xor
out
mov
pop
mov
pop
jmp
mov
lock
jmp
jns
jp
ljmp
add
orb
lea
loop
sub
aaa
imul
sub
jge
jb
in
mov
stos
mov
or
adc
dec
and
pop
fwait
call
xchg
cwtl
scas
cmp
add
in
insb
jne
lods
sti
adc
add
pushf
test
lcall
pop
insb
movsl
lahf
test
xor
scas
jmp
push
lahf
add
fwait
scas
add
rclb
adc
cmc
mov
in
ja
fdivs
mov
or
in
mov
pop
sbb
into
imull
mov
push
leave
test
hlt
push
dec
cmp
in
sbb
outsl
jae
popl
xchg
mov
iret
out
popa
sbb
lods
jg
imul
mov
mov
cwtl
lea
cmp
mov
jg
pop
xorb
add
and
pushw
jp
mov
arpl
or
gs
dec
jmp
idivb
adc
xor
mov
mov
out
cmp
or
sarb
ret
std
call
mov
sbb
mov
nop
insb
ds
inc
or
push
push
mov
inc
pop
hlt
ljmp
aas
xchg
in
fisttpl
pop
add
insb
add
mov
enter
dec
dec
out
shlb
cmpsl
push
out
mov
jg
or
xchg
adc
pop
xor
and
std
sbb
cwtl
test
and
push
icebp
add
mov
push
mov
lret
in
push
jmp
testl
jl
outsl
into
push
shll
and
adc
or
andl
aam
pop
dec
lods
pop
push
pushf
push
insl
popf
aas
adc
dec
in
xor
jge
rol
mov
scas
jmp
mov
push
daa
jmp
lcall
sti
jae
add
cmp
pop
add
mov
imul
lods
and
pop
jmp
clc
mov
loop
pop
cli
es
jge
bound
pop
ja
inc
imul
jmp
pop
imul
in
rorl
jb
and
mov
add
cmpsl
test
push
pop
cmp
mov
inc
or
sbbb
call
arpl
scas
repz
icebp
stos
cmc
jmp
fsubs
dec
mov
push
dec
pop
push
pop
es
repz
aas
stos
push
loop
sub
sarl
mov
ficomps
push
test
leave
cwtl
inc
push
cmpsl
or
loopne,pt
adc
mov
xor
clc
fisubrs
imul
popa
sbb
mov
jno
rcrl
inc
iret
imul
push
loopne
xchg
cmp
xor
xchg
sbb
xchg
xchg
into
xorb
sbb
add
mov
decb
sub
dec
lock
addl
icebp
xlat
ret
xlat
in
inc
enter
jecxz
faddp
push
in
imul
sahf
andl
out
pop
test
mov
and
mull
iret
repnz
xchg
aam
adc
repnz
popa
imul
xor
ret
sbb
push
push
movsl
ret
pop
addl
mov
pop
mov
jg
loopne
or
pop
pop
es
jns
add
ss
or
jae
filds
pop
or
jne
xchg
icebp
inc
cltd
shlb
or
fdecstp
xchg
adc
std
in
shrb
pop
decl
sub
cli
movsb
jae
xorl
xlat
adc
repnz
rclb
decl
jb
dec
shll
fldl
mov
or
call
decb
xchg
lds
xor
stos
insl
scas
cli
mov
lea
or
and
fsubrs
leave
push
mov
sbb
push
repz
sbb
lock
shll
sahf
clc
test
jb
cmp
and
fwait
xchg
orl
sbb
fidivl
adc
cltd
sarl
xor
bound
negb
add
xor
xor
in
pop
dec
dec
fs
cmpsb
fwait
push
xchg
mov
add
mov
imul
dec
sahf
cmpsb
ljmp
mov
lret
jnp
sahf
or
pop
sub
mov
inc
xchg
cmp
sbb
jecxz
dec
and
int3
xor
mov
jae
pop
xchg
pop
fstl
lods
nopl
cmp
loopne
pcmpgtw
daa
das
popa
cmp
clc
or
daa
push
sub
jbe
fwait
shr
sbb
cs
enter
les
push
pop
outsl
scas
icebp
movsb
call
out
imul
mov
imul
jno
fisttps
loope
cmp
mov
mov
pop
jo
ret
jg
gs
outsl
and
testl
push
sbb
insl
jne
gs
fdivs
ds
mov
jne
int
jbe
loop
cmpsb
or
jno
fs
mov
lret
int3
sbb
push
mov
scas
cs
adc
dec
jle
test
pop
jg
mov
in
push
fidivl
imul
jo
sbb
mov
xchg
cmc
popl
testl
mov
inc
jle
lods
loope
xor
rcrb
dec
ret
mov
xchg
int3
push
cli
mov
mov
inc
mov
sub
jno
imul
stos
push
pop
mov
mov
pop
mov
jmp
push
fstp
test
scas
mov
push
std
test
int3
push
push
or
in
std
leave
inc
inc
popf
mov
push
push
pop
jae
cmp
mov
sub
stos
mov
outsl
mov
mov
mov
xchg
jg
xor
sbb
cmpsb
mov
fs
mov
xor
xchg
in
cmpsl
lret
ret
mov
fs
xlat
push
sub
fwait
xor
jb
jp
xor
test
pusha
jns
push
adc
mov
les
fstps
rclb
testl
sbb
mov
ds
add
ds
movsb
cli
pop
push
mov
clc
int3
inc
scas
stos
popf
xor
aaa
dec
sbb
pop
ja
push
xor
mov
jl
arpl
mov
mov
xchg
sub
pop
loopne
cmc
les
call
sbb
popw
stc
lds
xchg
popf
adc
pop
jae
push
sub
fists
pop
jle
push
jae
rorb
rcrb
loopne
pop
push
push
pop
mov
mov
fwait
int
sar
add
push
mov
jmp
stos
pop
mov
ja
in
sub
shll
fldenv
inc
out
js
xchg
push
test
inc
icebp
mov
cmp
sub
rcll
inc
ljmp
add
add
sbb
sar
inc
ljmp
sbb
loop
in
xor
mov
xorl
pminsw
cmpsb
ror
cmp
dec
adc
stos
push
xchg
out
push
dec
lcall
xchg
cltd
rcll
dec
mov
xchg
pushl
inc
mov
stos
adc
mov
es
cmpb
sbbb
mov
inc
mov
inc
push
sbb
adc
sti
mov
inc
sub
out
add
jae
add
pop
cmp
add
mov
mov
xchg
inc
dec
mov
es
lret
imul
push
and
rcll
push
xchg
stos
push
roll
out
hlt
pushf
stos
dec
mov
dec
cmpsb
or
popa
loop
leave
add
cmp
adc
dec
push
or
sbb
fsub
xlat
jnp
adcb
inc
ss
jecxz
fsub
adc
je
rorl
fxch
cmpsb
xchg
or
enter
cmpsb
xor
mov
push
rorl
xor
sbb
and
pop
outsb
jl
in
test
pop
ljmp
lcall
or
les
xchg
jl
jb
je
xchg
iret
inc
jbe
push
sub
addr16
sahf
sbb
and
test
lahf
adc
or
jp
push
push
inc
jge
data16
out
dec
push
push
arpl
jle
xchg
testb
in
dec
iret
stos
addb
sbb
sbb
or
ss
enter
or
sub
pop
lret
add
lahf
pusha
icebp
mov
push
inc
sti
mov
and
sbb
icebp
or
jo
xor
out
ficompl
add
cmp
xor
jecxz
pop
dec
sbb
scas
stos
test
rcr
pop
aas
xor
sub
popa
inc
pop
mov
mov
mov
mov
add
fwait
push
cmpsb
lock
xchg
incl
push
enter
shlb
mov
das
aas
push
add
jns
add
sbb
ret
aam
jae
ss
lcall
sbb
fmuls
or
cmpb
cmpsl
stc
daa
add
mov
jl
dec
dec
cmp
in
xor
aam
push
lret
fiadds
test
or
mov
and
subl
pop
inc
sub
dec
mov
imul
test
xor
lea
xor
repnz
inc
jl
lahf
lods
clc
xchg
scas
lcall
lods
pop
and
and
sbb
lock
lods
outsl
push
stos
jp
xchg
shl
xchg
mov
inc
aaa
out
dec
cs
and
bound
mov
push
fwait
popf
sub
xchg
std
xchg
pop
and
dec
inc
mov
push
rorl
stos
test
sub
test
push
int
lret
pushf
push
or
sbb
dec
xlat
scas
xchg
int
shl
test
leave
fstl
adc
loope
xchg
dec
ss
shrl
mov
sbb
fcmovnb
push
push
subl
adc
rcl
loope
pushf
add
sub
add
les
mov
mov
xor
inc
sti
push
aad
iret
mov
lea
or
mov
and
xchg
std
rorl
xchg
sarb
hlt
add
pop
add
js
ds
and
and
sbb
add
rorb
mov
and
mov
in
mov
xor
cli
test
repz
sub
xor
inc
cmp
inc
stos
xchg
push
stc
add
push
into
jb
stc
or
add
inc
out
adc
inc
int3
out
popa
push
mov
std
ffree
dec
push
sahf
popf
ret
insl
fcomps
xor
jb
jnp
push
mov
push
xchg
push
cmpsl
das
xchg
fstpl
arpl
aas
jge
mov
mov
pop
out
sbb
push
xchg
pop
push
fiadds
mov
mov
jb
pop
aas
test
in
lods
cmp
mov
pop
jge
ss
lods
cltd
aas
mov
push
sub
loop
mov
hlt
fisubl
ret
inc
dec
in
mov
adc
xorb
mov
fs
xchg
sahf
inc
lods
cli
xor
mov
out
mov
mov
mov
cs
push
test
mov
rcr
push
cltd
mov
loope
or
icebp
sub
hlt
insl
hlt
out
and
sti
dec
sub
movb
fstpl
clc
int3
xchg
xchg
or
aas
or
add
jno
rcll
dec
adcl
adc
stos
int3
cmc
cwtl
cmovge
mov
xorl
pop
rorb
in
push
testl
lret
rolb
sbb
or
in
inc
shr
test
dec
aaa
leave
xchg
in
rcll
flds
imul
stos
and
push
leave
mov
bound
lcall
test
adc
cmp
repz
test
pop
sub
jmp
mov
addb
cmp
loope
push
or
pop
aam
bound
imul
push
ja
inc
xor
push
xor
pop
mov
inc
cld
jne
adc
lcall
jp
enter
clc
in
or
aad
lods
jp
rcrl
rep
pop
enter
and
jns
lret
mov
mov
popf
ljmp
int
sub
sub
and
inc
inc
clc
pop
ljmp
add
push
pop
or
fdivl
loope
sub
cli
popf
sbb
xlat
xchg
inc
ret
ja
sub
enter
jne
or
data16
adcb
out
insl
lea
mov
mov
pop
cli
scas
fildl
sub
nop
xchg
jb
shlb
adc
in
rolb
mov
jecxz
shr
pop
adc
push
jg
les
push
jb
mov
xor
inc
jecxz
imul
xor
ss
xchg
push
dec
push
movsb
iret
pop
out
pop
sbb
or
je
out
mov
jle
xchg
fwait
decb
or
push
js
sbb
xlat
bound
lret
xchg
jno
stc
aam
sbb
out
cltd
cld
jl
bnd
shl
lods
mov
lods
aam
cs
jae
sbb
das
in
adc
adc
ljmp
mov
mov
sub
jnp
mov
jne
insw
jp
ss
add
adcl
adc
call
push
ds
insl
insb
shll
gs
cli
pushf
psubusb
and
popa
jae
mov
fwait
loop
mov
call
in
cmpsb
push
and
lea
push
push
adc
and
dec
rclb
fnstcw
mov
sbb
mov
fcmovnbe
pop
xor
jne
fcoms
xchg
jmp
add
ja
ss
pop
cmp
add
push
loop
sbb
incb
jl
mov
fdivs
sub
idivl
pop
mov
push
fldln2
inc
mov
push
fildll
jb
out
ds
mov
mov
clc
or
jbe
push
data16
cmp
inc
adcl
and
cltd
mov
mov
jae
inc
cmpsb
mov
in
arpl
cmp
insl
push
scas
ljmp
idivl
test
jnp
or
lds
out
jge,pt
loope
call
in
les
cmp
push
mov
popl
int3
fdivl
rcrl
inc
mov
mov
enter
test
call
jo
sti
inc
pop
js
xor
sbb
jl
sbb
popa
jne
mov
aaa
fidivs
adc
loop
or
or
xchg
pop
cmp
andl
inc
ja
rorl
adc
lea
out
test
stc
test
mov
enter
fs
cwtl
and
lcall
fstps
lock
aam
call
mov
inc
sbb
pop
jbe
subl
ss
cli
test
mov
jg
stos
or
clc
sbb
cwtl
xchg
lcall
jns
mov
int
aaa
sbb
scas
cmp
aaa
pusha
push
shll
nop
xchg
cmp
mov
std
and
imul
call
mov
fsubr
je
push
ret
pop
in
sbb
dec
or
jmp
jno
mov
inc
in
aad
sti
pop
jmp
jge
popa
sub
sbb
pop
mov
dec
dec
add
mov
dec
mov
lods
xor
outsl
inc
push
adc
sbb
mov
mov
pop
pop
and
push
adc
mov
popf
sti
in
and
or
je
cmp
mov
hlt
imul
ds
mul
aas
sbb
sub
adc
jle
shrl
jbe
cmpsb
xor
pop
push
mov
insl
xchg
sbb
adc
shll
inc
repnz
mov
int3
lds
lods
fs
rorb
ja
or
sub
dec
fidivl
icebp
xchg
mov
mov
pop
imul
notb
add
push
mov
pushf
or
push
inc
aaa
pop
mov
out
out
or
xchg
imul
sahf
mov
jno
repz
loopne
lods
pop
pop
ljmp
stos
cs
movsb
scas
cwtl
mov
mov
and
test
mov
push
loop
mov
pop
push
push
test
imul
js
pop
mov
mov
push
repz
dec
cmp
repz
pop
mov
dec
and
loope
daa
xchg
inc
inc
fistps
jae
or
push
mov
dec
pop
repz
popf
cmpsl
push
mov
xor
mov
repnz
push
mov
add
out
mov
mov
in
out
in
xor
mul
aad
icebp
aam
sub
xchg
sub
loopne
add
mov
enter
mov
data16
mov
pop
rcl
cld
data16
in
aas
popl
divl
cmp
mov
cltd
adc
xchg
add
jb
nop
jg
notb
push
mul
xchg
push
or
je
pop
sub
repnz
movsb
mov
pop
cld
mov
cmp
outsb
and
mov
add
pusha
leave
mov
fmull
sub
or
scas
xchg
clc
inc
lcall
and
add
push
mov
xor
jne
das
dec
inc
loope
mov
mov
jl
andb
loop
pop
call
push
aaa
ficoml
pushf
icebp
xchg
int
lret
add
pop
mov
jle
loopne
not
and
push
sbb
mov
rcl
js
das
mov
mov
scas
js
adc
cmp
ljmp
in
aas
mov
imul
inc
inc
sti
cmpsl
mov
ficoms
js
sub
and
cmpsb
dec
and
mov
sbb
adc
rcl
xchg
gs
out
push
and
lods
fs
test
stos
in
in
fidivl
pop
jne
inc
sarb
inc
lock
jle
cmpsl
push
lods
xor
test
cmp
out
clc
fmull
ret
jecxz
mov
lret
pop
jmp
push
mov
outsb
in
dec
scas
cwtl
loopne
ret
int
fxch
push
nop
pop
inc
sbb
cmpsb
xor
es
xchg
adc
dec
movsl
stos
dec
out
dec
cltd
cmpsb
and
inc
rolb
sti
mov
push
push
mul
cli
sti
sbb
ds
push
push
xchg
js
or
adc
popf
sub
inc
cmp
cmp
lret
mov
push
mov
stc
mov
aaa
sbb
arpl
sbb
sti
pop
sahf
dec
mov
fisubl
sub
sub
xor
lcall
cmp
sub
es
xchg
int
cld
jns
mov
jne
or
sbb
int
cmp
push
scas
aaa
cmp
or
add
minps
andl
xorb
incb
adc
popa
mov
sub
xor
xchg
mov
loopne
pop
cmp
popf
or
les
inc
lahf
stc
xor
test
mov
addr16
mov
add
sub
mov
add
ret
pop
decl
inc
mov
inc
cmp
adc
cmpsl
test
sub
jb
into
mov
and
lods
cltd
adc
das
js
popa
pop
push
or
push
sahf
xchg
in
mov
js
outsb
sbb
mov
cmpps
lcall
dec
movb
mov
addb
pop
insl
test
int3
pushfw
xchg
sub
scas
xchg
popf
sar
adc
mov
and
jecxz
push
cmp
jge
pop
callw
in
mov
shll
int
repnz
push
cs
or
enter
mov
into
cmpb
mov
sbb
jmp
dec
add
movsb
fcmovb
or
pop
inc
sub
loopne
je
mov
sub
pop
mov
adc
fcoms
dec
jns
cmc
push
cmp
adcb
pop
es
loopne
jno
outsl
loopne
lahf
sub
loop
popf
fildl
aam
sub
jle
inc
pop
jle
push
les
or
xor
add
test
jp
loopne
xchg
leave
ja
dec
rcrl
mov
mov
dec
inc
push
mov
cmp
aad
loopne
mov
cs
icebp
dec
sbb
pop
pop
sbb
inc
push
add
nop
outsl
mov
stos
out
stos
xchg
aad
mov
lds
cli
inc
mov
imul
loopne
mov
mov
add
sbb
daa
jno
and
jnp
cwtl
aas
lcall
testl
ja
push
stc
in
test
or
adc
aad
les
mov
idivb
call
pop
push
and
or
addb
mov
or
cs
pop
mov
in
ljmp
sbb
mov
mov
xor
test
xor
mov
ret
adc
lcall
stos
xchg
sub
xor
jo
bound
pop
loop
mov
loopne
jp
sahf
pop
clc
cmp
repnz
xor
lods
scas
mov
cmp
cltd
sbb
or
inc
and
stos
push
nop
cmp
jb
mov
add
aad
adc
jl
inc
push
pop
sub
nop
xchg
sahf
sbb
pop
mov
shlb
cwtl
pop
inc
push
movsb
xor
cmp
dec
in
xchg
cmpsl
pop
pusha
jo
add
arpl
xor
and
rorl
in
roll
std
push
inc
cltd
popl
add
push
mov
pop
fs
cmpsb
or
scas
add
sbb
mov
xchg
xchg
std
sbb
xor
arpl
xor
test
std
pop
jo
push
pop
dec
pop
xchg
xchg
jb
les
mulb
sub
arpl
and
jl
mov
js
fidivrl
inc
int3
jmp
ret
mov
shll
push
sbb
jl
scas
mov
arpl
subl
addr16
adc
imulb
pop
fdivrs
xlat
fisttpll
imul
lret
pushf
and
inc
js
xchg
mov
lret
xchg
out
lret
or
pop
push
or
push
push
in
add
adc
scas
test
test
std
enter
xchg
test
popa
pop
pusha
fadd
xchg
aas
pop
cltd
paddsw
out
loop
arpl
lds
dec
bound
and
xor
daa
xchg
out
and
sub
scas
rcr
push
jle
mov
pop
xchg
aaa
mov
subb
xchg
sarl
mov
ljmp
ret
and
add
inc
and
add
popf
cmp
jb
jge
cmp
jg
lret
mov
lahf
dec
add
hlt
mov
in
lret
xchg
adc
sti
dec
sub
jno
jne
sahf
jle
mov
pop
and
fstl
int
push
dec
dec
imul
xor
movsl
xchg
ret
mov
rcr
xorl
arpl
imul
pop
pop
out
add
cwtl
and
adc
divl
jecxz
movsl
ss
sub
mov
leave
mov
xor
and
inc
rolb
int3
mov
adc
data16
add
popa
movsb
dec
stos
inc
and
daa
mov
xorl
fiadds
mov
xchg
in
pushf
adc
cmc
add
inc
aad
or
push
shr
xor
and
cmp
push
out
mov
cmp
and
pop
sbb
xchg
nop
sti
imull
stos
dec
mov
sbb
lds
std
shlb
or
cmp
cmp
das
les
mov
bound
sub
cwtl
fimull
xor
xor
or
test
lods
jmp
insl
sub
adc
jae
xchg
xlat
into
lock
movsl
lret
sub
lds
repnz
test
call
loop
lea
lcall
sub
popa
scas
lods
adc
mov
mov
fsubrs
lret
fimull
cld
sbb
orl
hlt
adc
mov
xchg
push
mov
lret
cmp
add
cmp
add
ljmp
out
mov
cs
stos
xchg
jb
subl
dec
sbbl
sub
push
jecxz
mov
push
jp
movsl
adc
xchg
sbb
adc
or
sbb
sub
add
lret
dec
lret
cmp
insl
add
add
xor
ljmp
popa
sbb
pop
fdivs
dec
comiss
cmp
cmpsb
out
lods
pop
jmp
push
xorb
scas
dec
adc
push
cmpsb
movsb
xor
ret
xchg
hlt
das
call
mov
frstor
xchg
movsl
xchg
hlt
sahf
or
mov
lret
dec
movsl
sbb
ror
int3
nop
sbb
pop
pop
mov
sarl
out
and
dec
cwtl
lods
fs
inc
xchg
inc
xlat
call
sarb
mov
repz
dec
movsl
dec
lea
adc
push
fnsave
xchg
imul
pop
xchg
inc
sbb
in
push
clc
xchg
push
hlt
or
xchg
call
aaa
loop
pop
lret
push
add
pop
jnp
fs
mov
pushf
mov
les
stos
in
movsb
jp
mov
mov
ds
aaa
call
sti
mov
nop
into
mov
jle
sub
jae
or
pushl
insl
dec
sbb
out
sub
or
in
ss
icebp
outsl
data16
inc
pop
mov
push
xor
iret
stc
dec
add
or
scas
mov
pop
cmp
mov
mov
jle
jmp
cmp
xor
mov
dec
and
jb
leave
out
lret
ja
ljmp
cmpb
hlt
jbe
dec
mov
sar
cmp
cmp
fdecstp
insw
adc
movsb
dec
xchg
mov
or
push
out
adc
xchg
jmp
daa
push
sti
test
imul
push
jb
fadd
shll
sbbl
outsb
add
fs
ss
push
mov
pop
jge
and
imul
mov
adc
add
out
dec
pop
leave
aad
les
jp
inc
sbb
cs
inc
mov
stc
jmp
andl
mov
out
dec
mov
and
int3
loop
push
dec
push
push
jecxz
mov
pop
sahf
push
inc
rcr
cmp
push
mov
shr
sahf
inc
mov
dec
adc
in
adc
xchg
bnd
dec
mov
ret
and
fcompl
jbe
ficoml
cmp
and
aaa
adc
call
mov
or
fimull
and
dec
dec
cmp
gs
xor
jg
lock
and
call
rolb
stos
push
je
xlat
pop
test
ja
test
ret
dec
xlat
stos
and
pop
jnp
or
rcr
sti
cli
push
inc
dec
je
jno
jb
and
inc
xor
xchg
test
mov
out
scas
ja
mov
jecxz
out
mov
sahf
fucomp
xchg
in
pop
das
jo
hlt
stos
cmp
add
cmpsl
xor
je
enter
hlt
clc
aas
stos
sti
cs
add
jl
jmp
mov
and
dec
xchg
aaa
int3
enter
or
inc
repnz
jecxz
cs
push
bswap
mov
pop
les
pop
xlat
add
inc
mov
icebp
arpl
outsb
cmp
xchg
jmp
xchg
mov
out
in
inc
and
mov
aas
sti
inc
pop
pop
aas
xor
pop
fmul
dec
notl
push
pop
jge
xchg
ficomps
shrl
xchg
pop
pop
dec
insl
nop
mov
mov
push
ss
lods
mov
and
cmpb
aam
or
and
dec
mov
xorl
fisubs
adc
mov
stos
in
fcmovu
aad
push
mov
sub
xchg
mov
xchg
xchg
cmp
fdivr
inc
push
fs
shrl
mov
mov
dec
repz
or
push
xor
icebp
popf
es
fists
xchg
test
sub
inc
jge
inc
repnz
and
mov
mov
add
hlt
lahf
call
iret
mov
xchg
and
mov
jl
pop
ljmp
repnz
sbb
xor
sbb
jnp
sarb
cmp
nop
inc
push
lret
ljmp
mov
and
out
pusha
push
mov
add
out
mov
xcrypt-ctr
cmpsl
sahf
sbb
or
pop
sub
sbb
xor
enter
mov
mov
xor
mov
xchg
or
adc
jl
adc
dec
mov
imul
xor
imul
mov
test
jg
inc
cmp
pop
inc
lret
aas
popa
idivb
sub
jmp
xchg
pop
cmp
jmp
aas
mov
sub
fiaddl
lds
orl
stos
dec
rorl
jne
clc
test
enter
outsb
sbb
inc
loop
hlt
push
mov
adc
pop
sahf
add
cs
mov
mov
ds
sub
dec
arpl
or
aad
pop
outsl
add
test
jb,pn
aad
fcmovb
movsw
mov
or
daa
fdivl
jmp
and
and
lcall
jnp
inc
pop
add
pop
adc
mov
adc
dec
inc
popa
mov
cli
mov
push
in
push
push
cmp
and
xlat
jb
or
fs
push
in
xchg
sbb
add
test
daa
cld
xor
add
mov
aam
push
fldcw
or
ja
dec
sub
stc
in
pop
adc
int
and
rolb
lahf
stc
sub
sub
push
lahf
dec
addb
leave
lods
enter
xlat
loope
repnz
notl
aam
push
and
les
test
add
xchg
cs
mov
mov
fmuls
pushf
faddp
stc
clc
pop
shll
mov
mov
shrb
sub
and
cld
mov
mov
mov
jmp
push
cli
jle
inc
push
dec
add
insb
xor
popa
pop
and
cmp
mov
jecxz
or
fwait
loopne
sub
iret
cmp
test
mov
mov
out
or
loopne
sarb
jge
pop
cmp
push
mov
fldenv
xor
push
mov
adcb
dec
dec
push
inc
jg
sti
sarb
pop
loop
call
pop
jl
rclb
inc
loopne
sub
pop
inc
xchg
les
cltd
mov
push
dec
out
cwtl
inc
in
ljmp
xor
dec
movsb
sub
cmp
cltd
and
push
int
dec
jle
and
sbb
aas
mov
pop
ljmp
push
dec
and
sub
xor
sbb
sub
std
sbbb
stc
pop
in
aam
adc
andb
mov
jns
mov
insb
xor
fnstcw
push
xchg
pop
subb
lods
sbb
cmpb
cli
stc
out
mov
lods
adc
ljmp
push
in
out
mov
ja
mov
shlb
jb
sbb
and
repnz
adc
adc
fwait
retw
in
pop
mov
cmp
mov
cmp
addr16
daa
shrl
lret
push
in
xchg
xor
push
and
mov
jle
xchg
or
addl
mov
je
sub
pop
outsl
call
pop
jnp
das
pop
out
fmul
mov
jg
jg
or
and
mov
test
fsubrp
jecxz
sbb
sbb
inc
hlt
jnp
int3
pop
ja
xchg
negl
jmp
imul
add
movsl
rcll
cmp
fidivs
push
adc
repz
jns
test
call
notl
dec
pop
xchg
mov
mov
adc
or
mull
call
pop
pop
shlb
mov
xchg
orb
ja
test
clc
pop
jae
cld
push
outsl
or
cli
and
test
scas
popf
out
xchg
inc
mov
rclb
int3
jl
xchg
sbb
test
inc
jmp
int3
addl
gs
cmp
ljmp
fcmove
mov
pop
add
icebp
mov
jno
fmull
stc
xchg
jb
repnz
enter
imul
dec
cmp
add
cwtl
inc
fisubrs
push
lahf
jae
push
cmpsb
adc
mov
push
inc
mov
popa
cmp
fdivrs
or
std
push
call
mov
aam
aaa
jne
push
jge
fistpl
jns
jns
mov
popa
incb
addl
push
sub
arpl
dec
insb
mov
mov
lds
orb
and
fwait
pop
outsl
xchg
cmc
popf
jbe
stos
ret
mov
jb
stc
add
pop
lcall
fldcw
imull
out
loope
scas
or
fildll
and
and
rol
sub
push
shr
sarb
jle
sbb
and
inc
cmp
outsb
loopne
sbb
xor
pop
out
gs
and
hlt
je
push
dec
adc
mov
pop
jecxz
std
mov
gs
adc
cmp
aaa
or
mov
mov
mov
cmpsb
jb
test
push
xchg
mov
dec
dec
cmpsb
push
pop
pop
insb
es
leave
push
mov
insl
push
sbb
addr16
sbb
push
adc
inc
or
xor
mov
and
scas
pop
mov
mov
dec
int3
and
or
jb
inc
mov
ss
bound
dec
push
data16
mov
out
test
jge
pop
data16
push
shlb
leave
insl
mov
or
js
gs
repnz
mov
cmp
adc
push
mov
test
pop
sub
insb
add
push
mov
cs
int3
cmp
adc
out
vpminub
inc
mov
std
in
jle
lcall
jns
pop
or
cmpsl
into
adc
cwtl
je
adc
fcmovnbe
pusha
xor
jp
adc
jne
lret
sub
notl
pop
aad
inc
push
bound
iret
adc
push
das
push
xor
stos
idivb
es
repz
jp
pandn
outsb
pop
inc
aaa
into
jbe
xchg
mov
pop
and
fildll
mov
jae
inc
cmp
inc
push
mov
in
out
push
pop
leave
movsb
out
dec
inc
les
xchg
push
xchg
push
lcall
std
mov
addr16
insl
push
xchg
pop
lds
mov
xlat
jae
push
fisttps
mov
adc
test
push
sub
arpl
movb
inc
test
cmpsb
out
dec
movsb
pop
out
into
push
cmc
insl
pop
lods
addr16
pop
push
sub
outsl
popf
rcll
sbb
imul
push
sarl
or
xchg
xchg
in
aam
lret
add
repnz
jns
pop
or
add
mov
cmp
add
scas
mov
mov
fldenv
outsl
test
ds
cld
inc
pop
xchg
in
insl
cld
and
mov
mov
lcall
clc
mov
faddp
in
ret
dec
xor
xor
or
push
xchg
or
jg
inc
xor
inc
cmp
or
pop
vunpcklpd
fistps
movsb
add
aad
xor
in
pop
ja
xchg
insb
and
into
jmp
stos
mov
adc
sbb
imul
cmc
inc
xchg
dec
mov
adc
scas
sub
insb
cwtl
cmp
clc
mov
call
sahf
data16
sbb
sti
cmpsb
adc
pop
sub
or
mov
add
lcall
cmp
sub
pop
or
inc
stc
xchg
insl
pcmpgtd
notl
iret
test
mov
fnstenv
add
aas
mov
pop
outsb
js
mov
int3
in
xor
xchg
inc
cmp
negb
mov
add
push
inc
pop
lret
and
scas
cwtl
enter
addb
lock
mov
icebp
loopne
mov
lahf
pop
pushf
in
ficompl
in
es
push
push
out
pop
fwait
in
sub
push
stc
jg
add
std
jbe
xor
scas
cli
jg
jne
inc
cwtl
mov
insb
enter
add
sbb
cltd
mov
inc
mov
push
cmc
cmp
lret
mov
push
dec
outsl
xor
jbe
arpl
dec
add
imul
sub
push
jae
xor
xlat
cmp
incl
les
mov
jns
fisttps
out
shrl
xlat
fucomip
mov
mov
das
sar
iret
bound
cmc
outsb
xchg
mov
or
sub
ljmp
out
cltd
sbb
movsb
outsb
fstpl
pop
lahf
ljmp
clc
sbb
repz
in
adc
lahf
mov
outsb
mov
jecxz
push
adc
insl
sub
int
jne
sub
push
pushf
push
cmp
nop
mov
pop
cli
subl
mov
jo
gs
and
cmpsl
lea
dec
mov
xor
add
inc
mov
daa
and
push
leave
add
xchg
jo
jbe
pop
lock
in
lods
lcall
lods
cmc
xchg
add
mov
sbb
movsb
fistps
das
rorb
rcrl
aam
test
movsb
cld
shlb
push
mov
jmp
xor
popf
or
inc
sbb
and
adc
out
adc
movsb
push
and
jge
or
subl
xchg
pop
cmp
popf
add
cmpsb
in
xchg
aas
pop
push
xchg
lods
pop
lahf
jg
push
popf
popf
mov
cmp
push
stos
cmp
mov
ljmp
push
cmp
data16
mov
and
xor
xchg
fiaddl
lods
sarb
jns
and
xchg
lret
mov
in
mov
stc
mov
mov
sbb
movsb
in
push
fldcw
stos
adc
hlt
ret
js
repz
enter
cmp
inc
xor
lret
and
mov
mov
mov
push
outsl
mov
sbb
push
pusha
pop
clc
jb
push
movsb
dec
jmp
push
xor
js
xor
mov
xchg
rolb
icebp
inc
lret
dec
test
push
cmp
movsl
fistpll
jecxz
mov
push
cmp
mov
mov
popa
test
movsl
ds
inc
cmc
ror
das
ljmp
inc
adc
aad
test
xlat
enter
mov
sbb
push
loopne
shrb
inc
cmp
shrl
int3
icebp
cs
or
or
rcll
jae
hlt
fwait
lea
add
or
push
and
rorl
movsl
push
pop
jl
outsl
mov
adc
inc
xchg
mov
in
mov
mov
adc
sbbl
imul
movsb
insl
sahf
lcall
leave
add
insl
cmp
push
shr
and
imull
in
xor
rclb
pop
xorb
fmulp
loopne
sbb
mov
ss
xchg
xchg
imul
repnz
adc
jb
fs
push
add
push
push
xor
sbb
hlt
dec
cmp
add
or
and
out
test
adc
not
fcoml
in
lods
dec
jbe
mov
jne
push
xor
or
movsl
je
daa
push
daa
arpl
cld
aad
jno
frstor
add
mov
int3
scas
sub
xchg
xchg
push
and
hlt
mov
dec
inc
out
ds
scas
aas
mov
outsb
push
insb
adc
mov
pop
sub
inc
fiadds
mov
pop
mov
daa
movsl
outsl
xchg
cmpsl
les
adc
and
ja
push
xor
dec
sahf
fiadds
dec
sub
pop
jbe
pop
or
or
imull
or
pushf
push
push
out
ficomps
lods
and
lahf
sbb
subl
xchg
and
rcrb
lcall
ljmp
or
popa
jecxz
or
rorl
inc
loop
stos
xor
xor
add
jb
push
bound
sbb
xchg
jne
movsl
cmp
insl
ss
xorb
lret
adc
add
lea
fstl
and
dec
pop
fdivl
lock
cmpsb
std
push
cmp
out
mov
inc
lret
iret
sbb
or
sbb
cltd
sbb
ret
pop
lahf
movsl
mov
iret
pop
pop
cmc
stos
mov
dec
or
pop
mov
mov
push
arpl
mov
inc
enter
push
mov
push
incb
fwait
aam
push
int
mov
shlb
test
nop
push
push
rcll
mov
xor
mov
dec
xchg
sar
shll
inc
push
xor
and
pop
flds
inc
mov
mov
ja
sar
pop
scas
pop
mov
pop
insb
xor
xor
jg
mov
fcomip
xor
mov
mov
or
out
pop
push
sub
xorl
xor
dec
fnclex
sub
das
mov
scas
add
popf
andb
pushf
sbb
sbb
aas
ret
mov
testl
data16
and
test
lcall
lret
dec
ss
in
mov
inc
jne
cmp
mov
lret
andl
ljmp
shll
mov
and
pop
sbb
mov
fistpl
xor
pop
xlat
mov
lods
sbb
ss
mov
cmpl
add
in
add
out
and
jae
push
jle
jbe
or
push
sbb
out
xchg
mov
dec
leave
add
pop
cwtl
mov
dec
xor
arpl
push
push
and
add
pop
jbe
add
femms
mov
lahf
into
std
cs
cmp
xchg
mov
mov
push
xchg
into
leave
jo
sub
pop
insl
sti
bound
jb
imul
repnz
sbb
xchg
inc
sbb
ret
imul
dec
pop
or
pop
jecxz
ja
xchg
and
sub
outsl
clc
sbb
repnz
in
jl
inc
into
push
das
bound
mov
loope
mov
push
sahf
call
scas
mov
push
test
mov
loope
mov
insl
jne
outsl
in
or
fs
insl
xor
xor
mov
stos
push
or
xchg
repz
or
dec
xchg
and
ds
lea
fcmovbe
inc
mov
sbb
pop
pop
fisubrl
jle
shr
dec
xorl
xor
mov
adc
cmp
pusha
or
xchg
movsl
popa
int
enter
cmpl
out
dec
or
rcrb
icebp
pop
pop
mov
and
xchg
jae
mov
xor
mov
sub
lods
fwait
xchg
dec
and
lret
nop
sbb
jo
ja
add
cwtl
xchg
cltd
in
dec
dec
aad
push
jne
shld
leave
sub
or
mov
xchg
or
mov
fimull
aaa
jbe
aam
xchg
inc
es
cs
sarl
icebp
push
jnp
push
add
adc
pop
xchg
pop
outsl
add
aas
dec
mov
or
jns
aad
cmc
aas
repnz
cwtl
dec
xchg
dec
mov
mov
int
int3
sahf
loope
or
pop
pop
pop
push
pusha
push
aas
push
fistl
mov
cwtl
mov
loopne
ficoms
stc
sti
dec
div
rcll
xor
aad
jp
shlb
scas
push
mov
scas
insl
pusha
clc
js
test
dec
and
inc
adc
test
xor
movhps
push
ffree
cli
add
xor
push
cmp
or
aas
out
xchg
sbb
cmpsb
loope
xor
sbb
adc
adc
and
sub
fmul
fdivs
clc
mov
loop
mov
adc
sbb
jecxz
pusha
add
push
push
mov
inc
fcomps
dec
jmp
dec
insl
shl
icebp
or
pusha
jb
xchg
push
jne
jae
dec
jno,pn
mov
out
bound
xor
insb
sub
xor
movsl
jmp
cmp
fdivrl
sbb
xlat
ja
jmp
lcall
scas
add
sahf
aad
mov
mov
jecxz
sbb
in
stos
add
je
dec
in
xor
sub
pop
push
ss
mov
push
cmc
hlt
outsb
mov
pop
xor
imul
sub
data16
xchg
adc
ficoml
mov
jns
test
popa
shlb
ret
cmp
sbb
roll
push
xor
int
into
jg
bound
ret
or
iret
mov
std
fcoml
rclb
jge
notb
dec
jmp
imul
sbb
jno
and
fmulp
dec
rolb
jge
stos
in
jmp
xor
aas
mov
lahf
stos
jns
hlt
adc
xchg
mov
pusha
mov
bound
int3
inc
cmp
addr16
sbb
fnstsw
cwtl
call
clc
sbb
mov
scas
es
out
mov
cmc
outsb
push
movsl
jl
inc
xchg
xchg
fs
leave
xchg
lcall
inc
repnz
ret
cmpsl
xor
iret
pop
fcomip
jb
sbb
inc
add
das
mov
in
sub
cmp
add
mov
inc
mov
jl
repnz
es
aad
sar
sbb
push
mov
dec
fistps
push
insb
test
clc
inc
inc
sarb
mov
outsl
sbb
inc
stos
repnz
aaa
test
decb
jle
bound
mov
cmp
jns
or
popa
loop
inc
sahf
dec
enter
cmp
aad
fwait
jo
lods
ret
mov
or
pusha
xchg
pop
xlat
test
add
adc
pop
std
pop
andl
xor
pop
jnp
movsb
pop
loop
cmp
xchg
fsubr
mov
arpl
mov
jnp
fimull
mov
iret
or
cld
xchg
jl
cmp
stos
cli
les
adc
test
add
mov
dec
out
jo
dec
divps
cld
out
ja
jecxz
push
jne
lahf
mov
xchg
mov
jnp
lahf
cmp
je
add
cs
pmaddwd
mov
pop
dec
clc
or
mov
mov
push
cmp
rcrb
pop
jecxz
mul
jb
test
ljmp
jmp
mov
popf
dec
sahf
sbb
cli
lock
notb
mov
sbb
mov
mov
loopne
adcl
mov
or
mov
mov
add
push
scas
inc
sbb
aad
fs
cli
adc
mov
sbb
mov
ljmp
mov
jns
mov
shll
out
sti
jecxz
imulb
ret
mov
mov
add
pop
int3
push
push
insb
or
cs
in
dec
mov
std
pop
jo
mov
out
jmp
jb
mov
sbb
aad
sub
shlb
jae
insb
mov
sbb
out
sub
dec
lock
imul
xor
inc
stc
xchg
mov
push
lds
jb
jge
push
scas
jno
scas
push
repnz
imul
mov
in
js
inc
or
loopne
mov
out
mov
xbegin
adc
xor
sub
and
jle
test
pop
les
out
scas
out
mov
loop
dec
mov
mov
xor
test
push
push
pop
sbb
dec
and
adc
addr16
movsl
inc
in
int3
push
imul
rclb
adc
xor
xor
pop
add
je
cltd
pusha
xor
adc
add
cli
or
test
in
push
mov
xor
dec
repz
loope
data16
idivb
test
add
mov
insb
fwait
add
arpl
addl
inc
xchg
xor
scas
in
das
lcall
lret
adc
push
xchg
imulb
loopne
daa
adc
stos
mov
mov
insb
lea
push
cld
jbe
das
inc
test
fimull
adc
or
movsb
cmp
pop
sbb
mov
lret
and
notl
imul
push
jno
leave
and
jmp
es
shl
lcall
inc
sahf
out
add
fstl
ret
sub
repz
push
nop
push
jmp
js
lock
cmc
and
aas
xor
lret
das
ret
cmc
push
call
xchg
ret
arpl
xor
dec
fsubrs
and
hlt
push
sbb
test
mov
out
es
push
loope
jno
adc
or
enter
outsl
xchg
lahf
bound
cmp
mov
adc
arpl
sbb
mov
xchg
adc
je
ja
push
lds
icebp
ret
iret
icebp
mov
xor
cmpb
lods
aas
hlt
shrl
ret
or
xchg
clc
arpl
dec
jb
pushf
sahf
mov
imull
cmpl
lret
push
push
pushf
outsb
inc
mov
repnz
mov
mov
sarb
lds
cwtl
dec
fstpl
jp
aas
imul
sub
pop
dec
loope
aas
fdivs
xchg
test
pop
popa
aam
fsubrl
or
sahf
xor
dec
sbb
lea
jbe
lret
mov
sbb
or
cmp
xor
push
push
out
push
mov
sti
cmp
fdivl
inc
outsl
test
cli
pop
aad
insl
fimuls
mov
pop
mov
ret
pop
inc
ja
sub
and
or
xor
in
pushf
loopne
and
test
cltd
mul
test
pop
arpl
jle
xchg
pushf
mov
jg
push
lret
inc
ss
sub
jae
or
cs
dec
sub
rolb
push
xor
mov
xchg
dec
push
pushf
out
pop
push
cmc
jb
mov
lock
daa
pop
fcmovb
jmp
jecxz
sbb
push
push
test
roll
push
mov
hlt
ret
ret
in
out
dec
jbe
pop
adc
and
jb
call
test
push
cmp
pushl
jl
iret
dec
mov
ja
inc
imul
ret
pop
lret
in
in
cmp
inc
adc
js
fcmovnbe
xor
mov
sbb
mov
add
or
shl
add
sub
sub
cmpsb
outsb
xorl
pop
lret
int3
mov
mov
lock
jb
imul
aad
stos
pop
add
pop
adc
iret
repz
push
out
mov
mov
gs
orb
sbbb
fstl
addr16
divl
and
mov
sub
stc
jb
je
mov
adc
mov
push
cmp
roll
scas
xchg
insb
push
mov
inc
out
mov
mov
stc
loope
call
inc
loope
lea
and
dec
sub
xlat
xor
pushf
in
dec
push
xlat
outsl
fbstp
inc
mov
lret
loope
or
or
out
or
mov
sbb
adc
pop
les
cmp
pop
mov
sbb
inc
fnsave
xor
inc
xchg
dec
out
ret
pop
cld
out
fstps
nop
mov
lds
xchg
and
mov
dec
lcall
pop
iret
and
dec
adc
cmp
sub
in
jne
mov
push
idiv
inc
mov
and
popa
mov
add
xor
icebp
fsubl
xchg
pop
push
push
ja
imul
xchg
mov
stc
test
stos
aam
adc
xor
sub
jae
sbb
je
jne
sub
push
mov
inc
jecxz
in
pop
push
pop
sub
int3
in
gs
jne
and
je
sbb
pop
sub
adc
lcall
mov
mov
in
loopne
mov
jo
pop
pop
jne
movsl
pop
js
call
mov
scas
movsl
cmpsb
mov
dec
jle
xchg
inc
enter
add
enter
adc
inc
lea
lcall
pop
or
mov
ja
mov
jmp
stos
adc
cmp
repnz
ds
inc
sub
les
shrb
leave
into
jle
lods
mov
mov
hlt
pop
cmp
ret
xor
enter
fs
mov
inc
addr16
jl
std
push
daa
imul
leave
xchg
fbld
pushf
outsb
jbe
rcll
inc
loopne
sahf
jge
add
imul
lret
repnz
mov
popf
sbb
lea
dec
pop
je
lret
pop
pusha
xor
inc
daa
leave
ficomps
inc
fisubl
and
mov
js
add
or
sbb
loopne
xor
xchg
adc
sbb
and
andb
lea
mov
decb
push
mov
and
sub
mov
imul
call
pop
out
mov
add
xchg
and
dec
mov
int3
es
mov
icebp
cmpsb
ret
add
fisttps
loopne
xorb
pusha
and
inc
mov
pop
arpl
js
push
mul
lock
jno
push
pop
insb
dec
xor
arpl
sbb
int
idivl
mov
xor
jecxz
aad
popa
scas
andb
pop
lods
sbb
sub
jb
je
iret
mov
mov
sbb
mov
cld
aam
orb
sub
xchg
mov
xchg
inc
rcrb
idivb
dec
leave
push
jns
movsb
add
test
push
fs
inc
jnp
and
dec
or
xchg
xchg
dec
mov
push
mov
je
add
jl
fnstsw
xor
push
adc
inc
out
daa
sbbb
mov
mov
inc
call
push
daa
in
je
shrb
hlt
push
mov
jecxz
adc
jle
mov
adc
rolb
aad
loop
aas
xor
add
sub
enter
int3
mov
ljmp
repz
pusha
mov
ficomps
push
outsb
out
arpl
jge
xchg
xchg
inc
mov
cltd
sarb
and
mov
fcompl
push
and
rcl
sub
mov
mov
ret
jbe
ja
sbb
jbe
scas
scas
insl
mov
jmp
mov
and
mov
xchg
ss
outsl
ss
xor
fs
fidivrs
gs
inc
cltd
aad
adc
add
imul
inc
je
in
push
in
xor
mov
ds
xchg
das
add
pop
mov
into
sbb
jl
cli
sbb
rclb
adc
jge
jecxz
sbb
jnp
pop
push
pop
xchg
loope
cltd
pushf
repz
add
out
adc
cmp
stos
mov
aam
in
and
cmpsl
outsb
dec
testb
sub
mov
mov
adc
ret
jl
inc
fisubl
xchg
xchg
mov
add
sti
dec
xor
push
sub
add
int
jmp
push
aam
jmp
xchg
decl
mov
sub
daa
sahf
cmpsl
cmpsl
decb
xor
xchg
cs
stc
cmpl
and
xor
add
fldenv
leave
aas
cmpsb
add
xor
inc
cmpsb
xchg
shlb
pop
loop
lods
mov
dec
add
ja
mov
push
ja
int3
mov
fidivrl
push
xorl
mov
xor
jecxz
clc
and
out
int3
js
jb
test
les
adc
mov
pusha
mov
adc
or
das
mov
pop
insl
sub
aas
cmp
scas
stos
mov
or
movsl
mov
mov
movsb
xchg
test
pop
xchg
in
pusha
stc
xchg
fsts
push
iret
and
mov
pop
cmp
jo
push
dec
arpl
imul
outsl
mov
popa
pop
and
add
cs
push
mov
xlat
push
xchg
daa
sub
sbb
sahf
inc
js
outsb
out
lahf
imul
inc
stos
aas
jmp
stc
cmc
or
shll
pop
mov
movsb
les
jnp
pushl
decl
aam
rorb
xchg
cmc
mov
movsl
xorl
mulb
sbb
stos
pop
or
jmp
pop
fwait
jp
lahf
pushf
and
fstps
sub
jae
mov
mov
ret
movsb
test
or
inc
push
scas
add
sti
in
sar
orb
xchg
js
repnz
aas
int
inc
ja
cwtl
mov
mov
jae
cmc
mov
stos
cmpsb
je
pop
cmp
jo
push
enter
lret
cmp
and
fwait
fwait
sbb
dec
pop
pop
mov
xchg
shll
je
cld
adc
add
mov
cmp
push
jg
call
dec
test
push
cwtl
inc
sbb
clc
call
adc
xchg
xor
xor
loope
mov
inc
adc
mov
scas
pop
stos
add
mov
cmpsl
icebp
lds
push
ds
cmpsl
dec
icebp
shlb
mov
loop
decb
fwait
add
dec
cmpsl
sti
aaa
aam
push
pop
sbb
inc
lods
or
movsl
enter
adc
inc
mov
pop
inc
ret
loope
mov
mov
rcl
adc
cmpsb
pop
sub
fs
cltd
sub
loope
pop
add
insl
stos
fwait
nop
or
mov
dec
mov
shrl
out
xchg
push
or
subb
add
shrl
pop
cli
xchg
pop
dec
outsb
and
mov
mov
mov
dec
lahf
or
adc
ficomps
push
cltd
mov
adc
dec
enter
push
mov
scas
out
imul
add
aad
adc
in
jle
in
fbld
sbb
mov
sti
outsb
out
aad
arpl
jnp
cltd
inc
inc
aaa
loope
rep
xor
outsl
adc
mov
dec
jnp
fcoms
cmpsl
scas
xor
in
imul
aaa
repz
lods
outsl
jne
pop
add
dec
repnz
cmp
add
call
aaa
in
cld
rclb
inc
inc
enter
pop
and
mov
dec
daa
xor
dec
mov
mov
stos
std
inc
nopl
frstor
mov
loop
in
mov
adc
sbb
mov
xor
lds
es
xchg
cmc
mov
add
dec
xor
adc
jnp
mov
dec
lods
insl
dec
add
xor
popf
pushl
pop
add
pop
aad
inc
and
pop
jg
mov
fs
repz
jne
cmc
insb
cwtl
cmp
xchg
cld
mov
nop
inc
adc
sub
fnstenv
test
cmp
sub
lods
sbb
jo
jns
jp
inc
stos
jge
dec
shr
stc
gs
pop
add
fnsave
pop
ja
outsl
js
mov
inc
sbb
test
ljmp
sbb
ja
sahf
mov
lea
push
insb
mov
adc
sub
add
pusha
dec
loop
std
aas
lret
xor
jnp
daa
leave
rcll
jnp
cli
sbb
xor
movsb
mov
aam
stos
cmp
xchg
pop
ja
sti
shll
loopne
jmp
repnz
das
sub
jbe
and
jp
mov
mov
mov
pop
shll
fwait
adc
pop
jecxz
push
push
fldenv
push
ret
sub
adc
xor
push
cld
mov
add
into
lods
push
cwtl
neg
push
sub
mov
adc
mov
push
stc
in
aam
cmp
push
pop
push
fiadds
imul
xchg
adc
and
push
call
pop
jmp
int3
adc
and
ret
xor
and
or
and
mov
outsb
mov
inc
repnz
push
ret
dec
dec
popf
cmp
dec
sub
ret
fs
xchg
sub
dec
pop
cltd
pop
jecxz
out
mov
bsr
mov
ja
loop
stos
dec
mov
jb
ret
xorl
cmpsb
jo
lret
filds
fcmovnbe
sub
shlb
mov
mov
outsb
in
addr16
in
sbb
xor
sub
in
cltd
cs
add
sahf
hlt
js
xlat
dec
loopne
sarl
in
imul
xchg
mov
and
jmp
sbb
inc
fdivrl
test
js
imul
out
addl
out
test
testl
mov
cmp
lea
cmp
fdivp
arpl
xchg
jae
or
or
insl
call
fwait
dec
loop
scas
sbb
push
cmpsl
lods
ljmp
popf
mov
inc
pop
cmp
ljmp
popa
lcall
xchg
arpl
repz
jae
outsb
in
push
iret
fwait
dec
pushf
int3
fsubr
das
jge
mov
cmpsb
stc
xchg
sbb
ljmp
add
cmp
testb
pop
sahf
inc
cmpsb
pop
xor
adc
mov
popa
adc
scas
stos
dec
sbb
int3
push
jecxz
cmp
and
rorb
or
daa
mov
mov
xchg
mov
addr16
lods
test
shll
jae
ljmp
adc
pop
out
mov
xchg
mov
cmp
add
loope
scas
mov
fcoml
sarl
add
mov
add
mov
xor
cmp
movsl
dec
and
add
das
xchg
pop
or
xor
adc
inc
dec
es
js
test
sub
psllq
fists
sbb
lahf
xlat
ret
pop
and
adc
pop
xor
xor
pmulhw
mov
movsl
mov
inc
je
and
push
test
mull
mov
scas
orl
mov
jno
sbb
pop
push
inc
add
outsl
add
aam
mov
jbe
mov
mov
jl
lock
push
mov
pop
fisttpll
push
lahf
push
cmp
jp
jecxz
scas
adc
mov
dec
leave
or
cwtl
push
cwtl
mov
cmp
scas
rcrl
sbb
mov
shrb
push
arpl
push
sti
mov
or
into
cmp
test
movsl
xchg
mov
mov
mov
es
push
ffree
and
jl
shr
sub
xchg
push
scas
test
pushf
push
sub
xor
jno
sbb
dec
inc
test
or
jne
lret
mov
sti
sbb
addl
lods
into
lret
dec
xchg
cmc
nop
aad
shlb
pop
das
push
xchg
jbe
xor
push
rcl
xchg
sbb
jne
pop
pop
adc
cltd
aas
mov
mov
outsl
cmc
lret
lock
jp
mov
dec
imul
mov
sub
sbb
fadds
int3
pop
mov
cs
and
mov
dec
fisubrl
mov
imul
and
cmp
test
mov
popf
lock
sbb
sbb
push
out
and
in
jnp
sbb
mov
jp
ljmp
aaa
mov
adc
sbb
xlat
lods
notb
lock
add
rcrl
ret
mov
sub
or
or
pop
ret
sbb
sub
jg
inc
xlat
ljmp
mov
out
mov
pop
jmp
and
ret
cwtl
sub
pop
gs
dec
imul
and
mov
repz
lds
cmpsb
mov
in
mov
shll
mov
ljmp
lods
stos
rcrl
cmpsb
sbb
fsubl
out
fisttps
and
in
push
icebp
dec
sub
mov
adc
cli
cmp
cmp
and
jbe
cmpsl
add
inc
add
cmp
imul
popa
cmpsb
sti
imul
insl
mull
movsb
roll
sbb
adc
fwait
dec
int
inc
cld
dec
sbb
inc
imul
fcoml
out
and
sti
arpl
xchg
and
sarb
out
push
scas
cwtl
inc
cwtl
ds
fmull
xor
or
leave
xor
jo
orb
sub
orl
adc
mov
or
xchg
jmp
pop
and
pop
loopne
add
mov
or
test
adc
push
jg
cmp
rorl
sbb
mov
std
mov
rcll
sub
or
out
sbb
or
ljmp
or
jecxz
out
and
inc
xchg
sub
jne
mov
lahf
cmc
daa
add
cmp
sahf
addr16
add
add
push
add
into
and
notb
fadds
cmpl
mov
stc
iret
hlt
mov
in
pusha
addr16
adc
mov
xor
and
adc
xor
and
cltd
xchg
push
loopne
scas
sbb
pop
cmp
fstps
cltd
bound
mov
pop
aaa
xchg
inc
mov
repz
sbb
adc
adc
add
dec
int
push
stc
push
jo
clc
cmp
lcall
sub
int
mov
mov
js
mov
push
pop
mov
xor
xlat
jl
cs
je
mov
cltd
mov
stos
xchg
insb
xchg
xchg
xor
fiadds
fldcw
hlt
pop
or
xchg
je
jb
lret
mov
push
repnz
insl
mov
lret
push
mov
repnz
or
dec
dec
pop
pop
and
mov
dec
push
xchg
lock
out
push
xchg
xchg
inc
out
push
push
xor
insb
push
cltd
add
cmp
jno
leave
cmp
cld
jae
data16
xlat
insl
and
das
lret
sbb
sbbl
jnp
in
insb
lahf
cmpsb
sbbb
xchg
and
mov
sahf
lcall
push
push
push
xchg
stc
scas
xchg
mov
sbb
aad
lret
call
nop
les
push
in
les
push
sub
cmp
pop
adc
sbb
in
and
adc
inc
call
xchg
push
pop
insb
sub
jb
shll
clc
push
fcomps
jne
mov
jno
xchg
lods
aam
inc
aad
pop
int3
push
out
or
push
and
repz
mov
xor
fmuls
push
inc
fsubrs
sti
xchg
sahf
xor
xor
add
cwtl
mov
in
xchg
addb
test
loop
hlt
arpl
imul
sub
cmpsb
rorb
lret
lds
xor
insl
out
leave
jns
or
cld
pop
pop
ljmp
enter
xchg
les
call
jbe
bound
jnp
fcoms
xor
fs
pop
cmp
pop
adcl
lret
jle
fisttpll
int3
std
fwait
stc
jno
inc
jecxz
pop
aam
icebp
and
pop
sub
cmpl
outsl
cmp
inc
sbbb
cmp
or
mov
dec
gs
add
outsl
push
leave
or
aas
jp
incl
call
lock
rclb
lock
shr
jp
loopne
imul
xor
fcomp
jnp
lea
jns
inc
leave
mov
mov
pextrw
test
push
pushf
jle
sbb
pop
daa
enter
jp
cs
mov
mov
mov
mov
pop
arpl
fcompl
dec
mov
xorl
out
inc
enter
imulb
push
je
rcrb
stos
hlt
sti
subb
clc
fs
mov
inc
lcall
lahf
fildl
aad
sub
and
aad
push
and
xlat
cmpsl
pusha
sub
in
push
xor
cltd
pop
sub
add
sbb
and
out
xchg
idivb
cmp
es
lret
sub
jo
cltd
jne
andb
xchg
xor
jecxz
rclb
mov
pop
aaa
mov
mov
in
sbb
dec
aas
movsl
lock
movsb
push
movsb
jmpw
arpl
mov
test
sbb
adc
mov
xor
mov
or
cwtl
iret
ss
lret
push
mov
sbb
xchg
inc
lods
daa
add
sbb
pop
inc
sarb
leave
aad
rsqrtps
dec
sub
outsl
or
add
add
testb
repz
push
dec
inc
dec
and
xchg
fists
decb
dec
mov
sub
clc
push
xchg
sub
mov
cmp
cmp
int3
inc
cli
xlat
popa
sbbl
inc
or
add
cmp
lahf
rcll
mov
mov
dec
mov
push
and
mov
rcrb
xor
les
push
dec
pcmpeqd
je
test
sbb
jns
bound
and
cmc
std
jno
push
or
and
mov
scas
sbb
adc
add
ljmp
insb
mov
mov
mov
or
adc
or
mov
arpl
icebp
xchg
fwait
mov
mov
ljmp
and
lds
out
cmc
push
mov
jecxz
adc
addr16
cltd
dec
imul
jno
mov
lahf
jne
xor
push
idivl
mov
fwait
jbe
int3
popf
fsub
dec
pop
fsubrs
push
pop
out
fs
xlat
das
cld
mov
cmpsl
addl
leave
insb
mov
mov
test
out
call
or
cmpsl
arpl
fistps
aad
psllq
dec
adc
xchg
stos
pop
insl
gs
mov
jo
xor
out
mov
xchg
pop
cmp
frstor
push
ljmp
jo
or
push
jnp
mov
cmp
pop
pushf
pop
xor
in
xor
push
addl
into
cmpb
rorl
sub
lret
jo
or
shll
in
jbe
cwtl
xchg
ds
popa
clc
mov
xchg
fdivrp
test
rolb
subb
icebp
jne
jge
adc
jmp
mov
insb
stc
js
lds
pop
ficoml
test
or
lock
mov
xor
mov
pop
in
arpl
gs
lea
mov
lea
js
imul
cmpsb
jmp
ret
xor
out
mov
dec
pop
test
sbb
sti
insb
jns
cmp
mov
fdivl
mov
sbb
iret
fisubrs
adc
cmp
out
xor
lods
sbb
lods
test
adc
shll
nop
push
out
inc
xor
cld
in
dec
mov
pop
push
sti
test
mov
xchg
rorl
shll
cwtl
sbb
loope
jecxz
and
xlat
sbb
push
imul
bound
inc
repz
negb
cmp
jecxz
push
or
lahf
out
mov
addr16
mov
aaa
add
in
jmp
loopne
mov
or
mov
push
movsb
add
pop
adc
sub
aad
sbb
inc
in
out
sahf
shl
xchg
std
cmp
and
jecxz
lcall
fst
dec
push
jp
dec
mov
rcll
push
dec
mov
and
add
movsl
popf
jmp
inc
cld
sub
rol
stc
js
shl
add
outsb
mov
inc
shlb
pop
jp
and
clc
push
movl
ljmp
shll
nop
ficoml
in
push
xor
fs
loope
and
lds
stos
cltd
int3
test
int
dec
stos
inc
out
jge
out
into
sti
xchg
push
and
ret
pop
or
movsbl
fs
gs
jg
fists
rorl
stos
sub
out
loope
int
inc
jnp
inc
daa
jo
rcrl
aas
ret
dec
mov
movsl
and
fcoms
repz
pop
and
dec
in
popl
xlat
lahf
imul
pop
es
lcall
sbb
fcomi
xchg
xchg
mov
dec
or
and
rolb
push
int3
sbb
and
sub
neg
movsl
push
aam
lret
ljmp
mov
lret
in
ds
mov
add
repz
shrb
mov
test
add
stos
dec
push
and
in
lock
xor
inc
and
aam
or
dec
mov
rcll
insb
loopne
xor
xchg
inc
testb
in
mov
and
mov
ds
push
inc
dec
aas
mov
mov
push
iret
add
inc
push
les
lds
lock
sbb
xor
rcrb
nop
sbb
hlt
popf
sbb
in
je
and
or
punpckhwd
inc
add
popa
in
mov
in
push
orl
push
and
lods
cmp
sub
insb
aad
cmp
cmc
and
pop
cmp
xlat
fldl
sub
repnz
fwait
outsl
fnstsw
out
cltd
repz
jmp
jo
mulb
subl
hlt
mov
clc
inc
in
icebp
inc
cs
mov
repz
add
fwait
popa
imull
or
mov
addr16
arpl
xor
cwtl
adc
int
adc
outsb
in
push
add
pop
idivl
in
enter
bound
jmp
jl
addr16
aam
int
push
xor
jg
repnz
rcl
rcl
lock
call
and
iret
pop
lds
into
adc
push
sarb
in
mov
mov
idivl
and
lcall
ds
xor
sub
fwait
das
cs
add
test
adc
loop
jbe
sar
jb
push
sub
fisttps
push
push
jae
add
orl
stc
addr16
fidivrl
xor
push
mov
fwait
inc
movhps
rorl
xor
clc
cmpsb
inc
je
mov
jb
mov
and
push
pop
fucomp
lea
ljmp
pop
sub
dec
jmp
inc
shrb
loope
jge
mov
movsb
adc
xor
and
outsb
insb
sarb
push
pop
sti
xchg
add
shrl
pop
mov
shr
xchg
cmpsl
les
inc
negb
test
cmpsl
idivl
arpl
cltd
inc
cmp
pop
jl
dec
sub
cmp
mov
xchg
addl
mov
or
addr16
sahf
aaa
or
je
adc
sub
adc
lcall
rorb
cmp
mov
or
sub
aad
jecxz
idivb
cltd
pop
in
jmp
inc
outsb
ret
pop
enter
pop
mov
mov
movb
add
xchg
outsb
enter
pop
pop
pop
sub
idiv
stc
adc
xchg
xchg
dec
cmpb
lret
into
or
pop
jp
fs
dec
sbb
lods
test
push
jmp
inc
push
jbe
mov
test
push
dec
xchg
mov
dec
lcall
outsl
or
insb
mov
xchg
mov
add
rolb
sub
lods
sbb
dec
int3
add
ljmp
lahf
outsb
mov
xlat
inc
cmp
popa
pushf
xchg
ret
sbb
ds
jl
mov
leave
mov
test
ljmp
push
sub
or
mov
and
in
pop
mov
bnd
jmp
setge
mov
aaa
clc
xchg
mov
jne
das
xor
xor
leave
cli
sub
andb
adc
sub
jne
add
test
jle
std
data16
dec
jb
cmp
mov
xchg
inc
push
lret
dec
and
jb
inc
sub
jbe
adc
call
lods
sub
xchg
jo
pushf
jle
popf
clc
xchg
xor
outsb
lods
mov
inc
movsb
jne
lahf
rol
push
outsl
pop
push
out
xor
mov
call
stc
add
pop
add
xor
adc
popf
xchg
cmpsl
gs
pop
mov
mov
inc
pusha
adc
out
inc
in
jle
addr16
jae
sbb
jecxz
rcr
jb
popa
pusha
lcall
add
lods
push
mov
les
push
pushf
addr16
or
rcrl
and
jmp
pop
or
xor
clc
or
mov
or
xchg
cmpsb
or
arpl
aad
or
inc
aas
retw
jge
pop
sarl
jae
mov
jl
dec
mov
test
test
or
lret
jp
int3
sub
sbb
test
out
jp
lea
inc
mov
xor
insl
fdivrp
sub
int3
inc
aad
insb
inc
add
ret
xchg
and
out
popa
inc
int
mov
adc
or
sbb
mov
push
jbe
push
add
add
stos
cmpsb
and
jns
insl
add
add
leave
adc
xchg
or
and
add
sbb
add
stos
push
add
sti
add
mov
pushf
lock
int
or
pop
xor
icebp
cs
cmpsl
xchg
inc
inc
jmp
in
testb
mov
je
push
rcrl
inc
adc
iret
fcoml
leave
fmulp
sub
add
fiaddl
jbe
out
ror
ret
jne
rolb
ret
outsb
push
cmpsb
sbb
push
in
jnp
jp
dec
hlt
push
movnti
xchg
imul
add
pop
pushf
mov
mov
testl
and
testl
aad
dec
inc
inc
mov
push
fadds
push
scas
insb
mov
inc
fimuls
mov
in
mov
jl
rcll
cmpsl
mov
or
in
ret
cmp
sti
in
xchg
pushf
adc
adc
dec
push
xchg
sbb
fcmovu
daa
std
and
jns
xor
push
dec
fldl2e
sbb
pop
lock
sbbl
xor
add
and
mov
inc
es
xchg
out
xchg
or
sbb
leave
jo
les
imul
clc
cmp
test
inc
and
cmp
call
lods
out
loopne
xchg
mov
xor
stos
pop
adc
repz
out
pusha
daa
aaa
and
inc
xor
add
cld
out
js
dec
pop
nop
popa
adc
nop
cltd
icebp
push
or
lcall
sub
sub
aad
adc
push
lret
std
inc
adc
cmc
cmp
in
inc
ljmp
push
mov
jo
xor
add
and
mov
inc
xor
shlb
mov
cmpsl
dec
jge
mov
sti
sti
sub
stc
push
stos
pop
cld
sahf
and
mov
cmpsl
dec
cld
and
add
mov
incl
sbb
and
lds
mull
insl
xor
pusha
or
hlt
xchg
jle
add
loopne,pt
popa
loopne
xchg
pop
sbbl
push
fstpl
mov
xor
cmp
sbb
inc
mov
sub
js
test
mov
cmp
push
fwait
sti
out
pushf
xchg
inc
and
pop
out
mov
jb
jne
dec
lret
cld
or
lods
daa
aam
mov
data16
pop
or
sar
sahf
mov
pop
push
jg
cmp
jle
xchg
sub
sbb
daa
pop
dec
lahf
mov
sbb
lods
fs
xchg
in
shll
lahf
jmp
or
mov
sbb
lret
ret
or
jecxz
popw
push
push
scas
dec
std
cmp
xchg
insl
sub
cmc
adc
iret
sub
ret
mov
or
out
repz
je
dec
test
xchg
enter
and
fsubrs
adc
jno
gs
sub
dec
imul
sub
gs
dec
jb
insb
jnp
test
into
scas
repz
lcall
jl
cmp
fsts
mov
mov
pop
pop
adc
roll
pop
xchg
xchg
mov
push
stos
out
jle
jbe
cmpsb
cmc
cmp
das
rcr
popa
jge
mov
rorl
test
cmp
dec
jp
cmp
les
repnz
mov
add
ja
xor
imul
sarl
push
jecxz
sbb
xchg
mov
ljmp
in
pop
xor
adc
idivb
loope
dec
and
pop
mov
out
xchg
or
inc
adc
dec
ss
mov
lret
je
repz
clc
stos
adc
sti
test
or
js
cmp
roll
sahf
sub
cs
adc
adc
sub
add
aaa
pop
add
mulb
into
testl
mov
cmp
imul
cmp
pop
pop
hlt
outsl
popf
jae
pop
sbb
mov
mov
sbb
stos
add
push
dec
sar
xchg
aad
ja
out
aad
sahf
sti
adc
adc
arpl
cmpsb
mov
xor
jge
sub
imul
ret
inc
movsl
outsb
xor
popa
pop
pop
arpl
stos
int
add
test
popa
xor
push
mov
or
ja
bound
sbb
fsubrp
adc
and
ret
loopne
repz
arpl
into
xchg
adc
std
and
push
cltd
mov
jecxz
jns
in
sbb
push
iret
clc
xchg
leave
je
dec
push
xor
imul
mov
or
nop
cmp
movsb
mov
loop
mov
ss
sbb
and
fsubl
into
xlat
enter
cmpsb
mov
jge
out
sub
and
cmp
mov
mov
lods
lret
lret
mov
jae
test
xchg
cltd
xchg
xchg
repnz
int3
into
sub
sbb
fwait
lods
push
repnz
cld
inc
push
mov
jo
cmc
cs
sub
sub
lret
lcall
test
test
mov
add
cli
xchg
cwtl
lds
hlt
je
lcall
xor
cltd
push
pop
sub
daa
pop
pop
sub
movsl
pop
jns
lods
jmp
in
or
lret
in
test
pop
cwtl
loope
lret
bound
and
lcall
popf
sub
fs
sti
mov
inc
xchg
lods
stos
fldcw
dec
mov
mov
cs
gs
push
xor
and
mov
mov
test
add
popa
mov
fdivl
out
push
xchg
push
fmull
pop
out
movzbl
mov
fisttpl
fcoml
push
test
cmpsl
cwtl
rcl
push
in
test
cmp
loope
enter
stc
scas
mov
jge
dec
aad
sbb
rorb
out
mov
push
call
cltd
pop
xchg
pop
cmc
cwtl
out
pop
pop
enter
in
dec
lds
push
andb
js
lds
jo
mov
ficoml
and
cwtl
call
or
pusha
shrl
enter
icebp
flds
and
mov
mov
stc
sub
sub
mov
sbbl
sub
sub
pop
xchg
arpl
cli
fisttpll
pop
cmp
aam
dec
inc
mov
rclb
call
aas
mov
mull
stos
pushf
xor
cltd
jl
adc
insb
mov
test
mov
rolb
ret
pop
add
sub
loopne
push
sbb
cmp
push
rcll
push
xor
push
dec
lea
outsb
int
inc
jecxz
jns
cli
mov
inc
sbb
movsl
movsb
inc
ja
inc
push
pop
daa
lret
notl
leave
push
icebp
nop
add
push
mov
inc
pop
inc
xlat
and
mov
test
fsubrp
xor
lret
jb
mov
mov
xchg
fnstenv
lahf
dec
or
mov
dec
jns
mov
xlat
push
out
call
adc
loopne
outsl
inc
leave
sahf
clc
rclb
xchg
mov
movsl
adc
mov
cmp
dec
nop
sub
popa
pop
adc
cmp
xorl
in
push
shlb
or
imul
arpl
aad
jge
iret
xchg
mov
data16
adc
fdivl
xor
sbb
mov
shll
sbb
or
sbb
adc
pusha
aas
cmpsb
push
inc
cmp
jmp
jmp
aam
out
lahf
stos
lods
dec
add
or
nop
fmull
adc
fidivrs
fs
pop
fisubs
sub
cmp
xor
or
push
mov
mov
stos
sub
decl
ficompl
insl
dec
dec
pushf
loopne
mov
dec
mov
insl
fwait
test
test
out
inc
pushl
xor
mov
pop
xor
mov
daa
push
fbld
dec
cmc
pop
cmpsl
cs
pushf
lret
scas
add
pop
mov
sbb
mov
xor
dec
sahf
orl
mov
subl
push
stc
pushl
fdiv
cmpsl
mov
sub
inc
dec
stos
sbb
fwait
pusha
xchg
roll
loopne
sub
or
loop
inc
cmc
push
jle
jg
into
out
out
fs
shlb
cmp
repz
pushf
pushf
pop
sub
sub
test
leave
cmp
jle
push
mov
loop
mov
push
pop
in
inc
insb
loope
popaw
and
add
sbb
xchg
in
je
lahf
out
adc
imul
imul
test
testl
xchg
movsb
lahf
int3
sub
lods
je
or
xchg
add
dec
mov
cs
fisubl
xchg
or
test
ss
sti
pop
jno
push
add
mov
scas
add
push
popa
pusha
fcmovnbe
fadds
xchg
negl
lret
and
adc
mov
andb
jmp
pop
push
push
sbb
push
int3
shlb
inc
addr16
push
enter
push
adc
iret
subl
divl
and
push
jnp
jecxz
xlat
and
fs
mov
js
movsl
fmull
fst
fbstp
jnp
adcb
xor
jle
jmp
outsl
mov
add
add
pop
ds
mov
cltd
bound
add
jmp
pusha
push
fwait
push
mov
cltd
test
mov
sti
sbb
mov
fisttpl
jl
and
test
iret
test
dec
xchg
cmc
hlt
dec
jno
sahf
cs
pop
jle
fsubl
jg
xchg
mov
sub
xchg
in
add
imul
enter
mov
pop
ljmp
xor
test
je
popf
jne
in
jb
aas
das
jb,pn
jns
fwait
mov
push
nop
fcomps
mov
add
dec
ljmp
and
sbb
movsl
mulb
loopne
push
and
out
add
dec
mov
leave
and
hlt
arpl
cmpsl
idivb
out
lahf
xlat
mov
pop
adc
ljmp
int3
outsl
lcall
jmp
and
sub
pushf
dec
and
stos
mov
xor
jo
ljmp
jmp
or
mov
cwtl
popf
xchg
mov
mov
pusha
jecxz
mov
aaa
fistpll
jbe
in
xor
adc
fnstsw
cmp
push
xor
aas
fidivrs
adc
inc
cmp
cmpl
lods
sti
aad
stos
popf
lcall
ljmp
test
push
mov
popa
out
ja
loop
mov
test
dec
mov
dec
mov
mov
add
adc
inc
loop
out
leave
test
shl
adcl
repz
insb
or
lods
inc
callw
sbb
xchg
daa
ljmp
push
pushf
dec
adcb
mov
enter
arpl
add
cmp
mov
frstor
push
aaa
inc
cmp
jl
mov
or
test
icebp
rcrl
sahf
mov
int
rolb
shll
pop
jp
test
pop
inc
fcoml
repnz
dec
inc
pop
in
inc
and
jo
mov
sbb
adc
push
sbb
jecxz
jmp
pop
aaa
pop
mov
mov
mov
jmp
gs
cs
lret
leave
cmc
xchg
mov
pop
cmp
mov
pop
in
mov
pop
inc
mov
push
mov
test
xor
out
std
das
mov
pop
jne
xlat
adc
and
sbb
imul
hlt
mov
repnz
sbb
ret
data16
pop
pop
mov
pop
cmpsb
movsb
imul
out
lods
xor
mov
or
or
cld
lods
fcmovbe
lret
test
aas
and
jp
mov
filds
dec
dec
in
addb
out
mov
aaa
jp
push
push
aas
jae
push
sbb
bound
jns
sbb
mov
test
pop
xchg
dec
setae
jp
mov
push
adc
cmp
fsubrs
sbb
jb
divl
shll
popa
sbb
js
das
fwait
frstor
pop
bound
pop
adc
movsb
mov
cmp
pop
lahf
stos
addr16
cmp
mov
mov
int
stos
repnz
cmp
push
test
or
mov
jae
cwtl
jecxz
inc
arpl
inc
pop
dec
cmp
jge
dec
xchg
movsb
fdecstp
insl
push
dec
in
rcrl
and
pop
mov
sub
ret
sbb
mov
mov
pop
out
cmp
push
cmp
nop
lret
test
mov
mov
lods
mov
dec
addr16
subb
xchg
xchg
mov
sarb
mov
jmp
leave
pop
fistpl
hlt
xchg
xor
aad
stos
jno
out
mov
ret
sub
sti
pusha
mov
mov
jg
dec
repz
das
sbb
test
xor
nop
xor
sbb
or
out
stos
fwait
mov
push
push
int3
mov
and
mov
fldt
cmp
je
std
sbb
adc
fdivl
pop
ds
mov
xor
dec
sbb
outsb
adc
pop
gs
rcll
clc
stos
cmp
sbb
xchg
mov
loopne
imul
lods
leave
cwtl
mov
outsb
and
push
in
xorl
rcrl
imul
add
mov
push
mov
aas
jae
xchg
ret
cmpsb
add
push
repz
mov
sbb
enter
popf
fists
add
xor
lahf
pushf
adc
pop
cmp
rol
push
dec
adc
pop
jle
jecxz
add
or
test
xor
xlat
es
call
jnp
dec
cwtl
mov
adcb
or
sti
dec
xchg
mov
jg
and
test
adc
mov
int3
jp
cmp
testl
jl
mov
and
push
cltd
loope
xchg
insl
repnz
sub
sbbb
or
lds
add
lods
jne
pop
popa
outsb
jmp
pop
sub
push
outsb
mov
sub
jg
jmp
or
push
fisttps
adc
sub
xchg
mov
mov
inc
das
stos
pop
outsb
pop
leave
movsb
jmp
outsb
inc
fs
jmp
out
push
addr16
push
popa
sbb
pop
cmp
mov
fidivrl
or
les
inc
pop
sub
xor
fisttpl
lds
or
adc
xchg
adc
xchg
adc
inc
pop
cmc
ljmpw
imul
ljmp
sahf
ljmp
or
mov
dec
shrb
cwtl
sbb
pop
pusha
inc
in
xchg
jbe
dec
lea
lret
sub
test
out
ret
adc
fisttpl
fisttpll
jo
cli
push
sarb
out
ret
sub
add
sbb
push
push
rol
jno
add
jg
jbe
lods
jae
xchg
arpl
cmp
mov
or
out
fisttpll
xlat
inc
subb
push
stos
out
lea
xchg
sbb
test
jns
arpl
sbbl
ja
mov
je
xchg
pop
gs
out
ret
push
lret
sub
push
aas
jns
fwait
jns
push
xchg
jmp
outsl
addr16
dec
jle
pop
xchg
and
dec
sahf
adc
daa
mov
scas
and
leave
adcl
inc
xor
push
sub
ja
mov
sub
into
test
out
xchg
xchg
mov
jge
mov
push
dec
lea
shr
sub
or
cmp
adc
in
das
mov
fidivs
popa
cmp
enter
pop
insl
rcll
xor
push
mov
mov
ror
repnz
aam
xchg
cmp
jns
push
iret
jl
aas
xchg
mov
inc
jg
xlat
mov
es
add
mov
call
mov
or
sub
cmpsb
jge
xor
cli
in
xchg
jmp
hlt
pop
mov
mov
mov
sarb
or
fimull
jg
xor
xchg
cmp
mov
mov
add
ret
sub
dec
xchg
push
add
lahf
jns
and
fcmovnbe
xchg
insl
fbstp
and
scas
test
lret
inc
in
or
and
mov
sbb
push
mov
mov
xchg
mov
mov
adc
loopne
inc
adc
xor
inc
jecxz
dec
out
int3
lea
xlat
sti
cmpsl
sahf
jne
lea
out
mov
add
lret
pop
adc
fisubrs
lahf
push
aad
mov
jno
loop
jnp
mov
inc
and
xchg
aaa
call
lahf
movsb
inc
jnp
cmpsl
fdivrl
inc
push
cmpsb
pop
out
and
aas
ja
jg
pop
mov
pop
push
fistl
outsb
push
out
mov
test
dec
dec
sub
outsb
mov
push
sub
fbstp
outsb
push
loop
dec
sbb
fidivl
or
cs
call
xchg
sub
sbb
imul
mov
jae
stos
or
inc
cmp
outsl
push
icebp
sbb
push
or
jmp
pop
rcrl
pop
outsb
xchg
idivb
lea
fisttpll
dec
add
and
jl
lahf
xchg
mov
xlat
clc
add
xchg
sbb
stc
pop
enter
lds
aas
cmp
sbb
sbb
addr16
mov
push
lds
rorl
dec
cli
push
lret
dec
jg
test
xor
add
xor
pop
mov
aam
mov
call
or
int
aad
out
vmulpd
rorb
hlt
imul
sub
inc
jecxz
in
jl
stc
nop
test
out
mov
enter
or
xchg
dec
mov
ljmp
std
scas
cmp
jo
and
insl
pop
repz
or
les
cli
sbb
pop
push
fstpt
jae
int3
daa
les
fcompl
das
push
jae
ret
inc
or
out
sbb
push
mov
mov
inc
jno
push
push
ja
jbe
jmp
inc
out
mov
xchg
out
add
add
fstpt
cmp
xchg
inc
push
push
mov
dec
jl
test
inc
ret
ret
out
mov
mov
loop
mov
xor
in
xor
mull
inc
push
outsb
or
or
cs
mov
mov
cmpsl
loope
push
fs
fidivrs
and
push
mov
in
popa
xchg
push
push
out
cmp
or
fmuls
sub
jo
mov
pusha
mov
lds
and
ss
inc
iret
call
and
ret
scas
ljmp
mov
jl
inc
fistpl
jnp
xor
push
mov
pusha
mov
scas
push
push
and
fdivrp
aad
inc
pop
and
or
out
jae
cmpl
dec
aad
mov
fildll
leave
jnp
ja
inc
dec
jg
push
or
adc
cmp
push
stc
sub
cmp
cwtl
iret
mov
mov
sub
repnz
mov
jle
mov
out
pop
inc
push
incl
mov
lret
das
mov
lahf
and
xchg
fdivp
test
mov
out
insb
mov
cmpsl
add
fs
loopne
outsb
dec
mov
iret
popf
mov
pop
mov
and
add
or
jle
jns
aam
mov
and
cmp
rol
shll
lret
fiadds
mov
xor
in
sub
adc
lcall
cmp
jle
pop
xchg
outsl
in
and
repz
or
out
mov
ds
mov
test
mov
dec
xchg
jmp
inc
dec
push
mov
aam
ret
fisubrs
mov
dec
mov
outsb
bnd
cmp
xchg
inc
hlt
loope
pop
stos
fistpl
pop
pop
and
addr16
lret
lahf
cmp
mov
jecxz
jne
mov
xchg
add
lds
or
pop
mov
in
or
movsl
sub
movsl
mov
mov
mov
mov
push
xor
roll
stos
fs
rcrb
xor
push
xchg
es
scas
dec
stos
pusha
and
or
fidivs
push
pop
idivl
jnp
cmp
aas
jb
pop
jl
mov
pop
adcb
xchg
fistpll
adc
lock
adcl
xacquire
out
fwait
rorl
hlt
cltd
cmc
outsl
or
dec
cmp
jle
pop
and
ret
test
xor
and
jno
lret
sbb
lods
lret
sahf
inc
jecxz
shl
mov
loop
mov
stos
movsl
sbb
stc
xor
imul
je
lcall
inc
mov
bound
ds
jbe
push
push
vpminub
scas
stos
xor
push
xor
push
or
add
cmp
cmpsb
insb
xchg
cld
mov
stos
inc
sub
and
andb
mov
shll
xor
sub
imul
sbb
pop
aam
int3
in
push
xchg
insb
mov
out
arpl
sub
mov
sbb
idiv
jecxz
mov
prefetchw
jecxz
jl
adc
in
cmpsl
test
mov
push
sbb
dec
call
mov
xchg
out
faddl
or
sbb
scas
ja
rcrl
xchg
sub
mov
fldenv
adc
insl
rorl
mov
test
movsl
push
adc
or
jb
stos
sub
scas
ja
orl
add
fwait
ror
pop
xchg
repnz
pop
pop
dec
test
scas
cmp
push
test
pop
mov
xchg
rclb
cmpsl
popl
sub
sub
add
mov
aam
adc
lea
cmp
scas
xchg
and
sbb
cmp
insl
and
rorb
push
cmp
lahf
dec
pusha
push
pop
mov
xor
lcall
mov
loop
mov
and
push
sub
inc
loop
xchg
rcrb
jg
dec
jmp
and
push
insb
popa
out
adc
aas
dec
roll
rcrb
fcomps
inc
shrb
xrelease
in
mov
std
ss
nop
sub
out
repnz
xchg
pop
das
add
fwait
sahf
fwait
xchg
movsl
bound
jb
sub
es
jno
int3
aam
movsb
and
inc
loope
popf
clc
cmp
stc
stc
cmp
mov
scas
aam
out
cli
and
fldenv
lret
pop
out
mov
das
imul
mov
mov
sbb
jecxz
xchg
insl
inc
and
mov
mov
xchg
and
mov
xchg
xchg
add
out
jb
sub
test
mov
pop
pop
insb
mov
jl
ret
sub
jno
cmp
push
cmp
notb
xor
dec
addr16
sub
cmpsl
fbld
pop
loop
jg
sub
sbb
push
cmpsl
inc
xchg
stos
mov
dec
dec
mov
mov
sbb
outsl
dec
out
cmpsl
imul
push
dec
imul
adc
cwtl
lds
fisubs
outsb
sub
sahf
lods
push
ss
lods
movsb
jbe
cltd
and
mov
fstl
outsb
inc
imul
xchg
mov
ja
fisubs
ja
inc
mov
pushf
jne
adc
cmpsb
jge
push
div
adc
xlat
and
hlt
adc
mov
dec
adc
sub
div
sbb
inc
or
push
adc
iret
mov
dec
rorb
cmp
cwtl
cmp
fadd
cmp
mov
lea
test
jns
stos
jbe
shl
xchg
push
jle
sub
sub
xor
nop
in
andb
inc
test
int3
cmp
daa
icebp
je
xchg
adc
in
mov
xor
mov
or
in
stos
cmp
jle
jg
or
lret
mov
loopne
sbb
ja
ret
cmp
cmc
scas
cmovb
pop
popf
cmp
jnp
in
je
mov
add
lret
jge
xchg
cmp
ljmp
int3
nop
fmuls
and
mov
out
scas
jle
lea
or
add
iret
mov
fcoms
fcomp
push
mov
pop
nop
cwtl
xchg
jge
repz
jmp
sub
les
add
sub
das
cmp
xlat
inc
jb
mov
mov
idivl
into
imul
push
les
paddb
mov
incb
imul
cmp
inc
fdivrs
fs
dec
es
arpl
out
stos
mov
push
in
movsb
dec
jne
push
jbe
mov
jge
hlt
dec
cmc
mov
xor
or
xor
jo
fs
rcl
and
xor
mov
stos
sbb
or
inc
lds
mov
out
fstpl
jno
into
jp
in
mov
xlat
out
and
imulb
jl
gs
jb
sub
pop
add
out
fldcw
and
inc
insb
pop
sbb
and
push
test
pop
stc
cmc
lock
inc
out
jp
cmpsb
sbb
out
test
inc
mov
xchg
sar
loop
lea
push
cli
leave
test
cld
test
in
cli
loopne
dec
and
mov
push
sbb
mov
in
pop
enter
mov
icebp
repnz
cmp
lods
int3
mov
das
insb
movsb
test
aad
jno
mov
mov
cwtl
cld
ret
sub
fdivrl
call
repnz
cs
sub
dec
adc
inc
sti
iret
idivb
add
cli
inc
shlb
movl
int3
mov
int
repnz
call
lods
add
inc
out
jge
fcomp
push
sub
inc
mov
gs
sub
iret
xchg
movsl
test
shl
fldt
or
jo
out
dec
jo
xor
pop
lret
xchg
adc
mov
addb
in
lods
jge
pop
int3
mov
popa
cmp
mov
icebp
inc
jmp
sub
add
dec
in
pop
dec
mov
xor
dec
xchg
add
pushf
fisttpl
cmp
mov
pop
inc
fnstenv
mov
inc
mov
repnz
mov
pusha
aaa
sbb
xchg
gs
and
es
lods
dec
das
mov
jp
mov
mov
out
xlat
jmp
add
mov
ds
into
cmp
rclb
mov
iret
jp
xchg
out
cmp
mov
stc
in
mov
dec
je
and
ret
adc
out
sub
mov
inc
xchg
loop
shll
xor
cmp
mov
push
hlt
daa
sbb
jmp
out
stos
popf
dec
outsl
mov
rcrl
xchg
out
xlat
push
jecxz
sub
lahf
out
jae
sbb
fsub
push
cmp
push
inc
mov
nop
into
mov
dec
gs
fsubs
outsb
jp
xchg
outsl
mov
or
pop
dec
xlat
jns
mov
adc
push
sbb
push
inc
fwait
in
jge
sahf
imulb
rorl
sbb
push
mov
int3
inc
daa
dec
je
push
cs
mov
gs
cmp
pop
jno
lret
sbb
mov
adcl
pop
push
or
sbb
mov
push
xchg
mov
cmp
mov
xor
jne
mov
imul
add
pop
dec
movsl
add
shlb
jnp
sub
xor
hlt
out
cmpsl
test
in
mov
insb
inc
xor
or
jbe
push
mov
xor
in
lcall
jb
dec
and
test
push
insb
mov
call
jmp
movsb
or
sub
outsl
icebp
push
push
stos
inc
clc
in
dec
in
loop
mov
scas
sub
adc
stos
push
shrl
das
arpl
mov
fcoml
jecxz
and
hlt
xor
xor
mov
xchg
and
fcoml
in
cmp
sbb
lahf
ja
cmpsl
jne
and
testb
loop
jnp
jmp
fmuls
daa
cmp
and
inc
loopne
in
adc
test
dec
jb
and
lret
inc
cs
inc
push
out
call
push
mov
hlt
leave
fwait
add
rcrl
push
aad
aaa
push
inc
xchg
push
inc
pusha
lret
cmc
sub
int
clc
jb
dec
test
je
mov
hlt
mov
call
inc
mov
jnp
jmp
jp
inc
pop
lret
xchg
xor
push
and
addr16
xchg
movsl
je
popa
loop
daa
mov
inc
cltd
cmp
imul
aad
cwtl
dec
pop
adc
int
shll
pop
pop
inc
out
into
jecxz
mov
insb
ret
pop
andl
add
movsl
lret
jo
dec
loop
sub
adc
dec
xorb
xchg
fcmovnu
mov
dec
xchg
call
fdivrp
mov
movsl
mov
cwtl
leave
mov
ja
dec
pop
sub
std
xchg
sub
sub
sub
xchg
add
mov
jne
jns
xchg
in
inc
cmp
lods
fs
and
in
push
push
push
jb
aaa
call
sbb
faddl
cli
jb
dec
insb
ss
addr16
inc
in
movsl
add
push
cltd
mov
mov
xchg
lahf
int3
je
inc
push
stos
mov
xchg
and
xor
pop
inc
lock
es
jmp
push
jo
sarl
hlt
mov
ss
aam
je
ljmp
stos
jo
imulb
sbb
call
dec
pop
inc
sti
mov
mov
push
daa
popa
test
imul
fistl
and
pop
pop
fs
aas
imulb
push
lock
sbb
ret
pop
lock
popl
out
rol
cli
inc
xorps
add
loop
pop
dec
dec
movsb
add
xchg
pop
int
add
not
cwtl
push
dec
add
jg
pop
repnz
adc
pop
test
adc
sbb
add
jge
xchg
lahf
pop
mov
enter
or
loop
cld
roll
enter
sub
pop
mov
sbb
daa
faddl
dec
add
aas
mov
dec
sbb
mov
mov
imul
test
aad
add
movsl
push
mov
jge
or
pop
out
insb
in
fldenv
sub
and
andb
sub
dec
or
xor
xchg
mov
in
fcomip
aam
outsl
movsb
mov
loop
iret
cmp
imul
push
cmp
add
fidivrl
clc
int
mov
xlat
push
into
mov
daa
loopne
imul
xor
stos
insl
mov
mov
aam
rdmsr
mov
test
test
xlat
and
mov
outsb
int
and
movsl
mov
xchg
daa
mov
jle
xchg
xchg
or
pop
rorb
mov
test
lret
mov
cmpsl
pop
call
xchg
add
dec
dec
ss
cmp
push
js
movsb
cmpsb
inc
inc
cmp
dec
ret
mov
out
jle
lcall
ja
lock
jns
jns
outsb
mov
ljmp
push
jns
mov
rorl
xchg
in
movb
cli
mov
inc
in
outsl
jbe
xor
sbb
jnp
lock
popa
sbb
pop
sbb
xchg
icebp
stos
mov
pop
inc
mov
xor
in
loope
xor
jbe
push
dec
stos
cltd
mov
lahf
mov
adc
sbb
xadd
leave
jne
shlb
adc
fmull
cmp
add
jb
push
ljmp
ja
lock
ret
minps
xchg
jo
add
jmp
test
xor
add
mov
std
adc
fwait
cmc
pop
lods
rcr
loopne
mov
mov
jne
lahf
push
cwtl
in
push
xchg
mov
mov
lcall
push
mov
out
cmp
into
or
or
ret
incl
mov
xor
inc
or
test
mov
sbb
pusha
incl
jne
mov
sbb
cmp
movq
cld
push
outsl
mov
xchg
icebp
aas
pop
subl
push
out
push
pushf
js
push
popa
add
movsl
cmpb
adc
aam
jmp
lret
loope
sti
cmp
rcrl
sbb
test
outsl
push
adc
pop
in
in
and
xor
and
icebp
loop
ss
fldl
call
fnstcw
enter
les
pop
out
jae
stc
dec
pusha
add
bound
out
in
mov
jne
scas
je
fstps
jb
adc
mov
je
inc
movsl
push
pop
dec
lahf
cmc
movsb
xchg
and
insl
std
fxch
out
ljmp
je
lods
and
aas
int
mov
loopne
ret
or
adc
cmp
adc
dec
xchg
sbb
cwtl
jge
fiaddl
add
pop
dec
cmpb
decb
out
fidivrs
je
std
inc
cmp
adc
cmp
test
out
sbb
inc
inc
ret
jecxz
in
push
jge
xchg
imul
xor
imul
rcll
sub
xchg
int
ljmp
arpl
xchg
test
adc
loop
pop
dec
push
push
es
rol
xor
cmp
push
aam
into
fcoml
sub
sub
lret
push
std
fldcw
jecxz
out
addr16
mov
popa
sbb
daa
gs
push
push
repnz
fadd
sbb
or
fcomps
jbe
aas
inc
dec
mov
mov
adc
out
lret
inc
enter
fs
adcb
outsb
loopne
out
mov
or
mov
ljmp
xlat
cmpsl
xchg
or
cmp
popf
fimuls
repnz
jns
mov
stos
push
js
inc
movsl
dec
or
sbb
dec
mov
pop
mov
pop
ret
jae
add
xor
pop
pop
hlt
cmp
mov
movsb
shrl
adc
inc
lods
lahf
push
ret
es
enter
mov
push
ret
xchg
add
xchg
pushf
psraw
push
in
imul
dec
mov
xchg
stc
movsl
push
sbb
aas
aad
ljmp
xchg
movl
mov
rcll
loopne
push
outsb
add
and
loop
jge
fadd
or
pop
xlat
xchg
add
shr
lock
sbb
out
into
xorb
cmp
add
loopne
adc
xor
sahf
fwait
in
and
shrb
dec
test
and
ror
out
sbb
xor
inc
xchg
push
icebp
push
dec
lods
mov
bound
addr16
repnz
enter
ds
jns
xor
lea
or
adc
lret
pop
push
xor
call
pusha
outsb
push
cmc
sbb
fwait
popf
js
adc
jmp
insb
int
sbb
push
jbe
add
ss
push
fcompl
mov
stc
or
lret
cmp
sub
pop
test
and
jp
popa
insb
aas
lods
divl
xchg
shlb
dec
hlt
dec
dec
xor
fiadds
dec
adc
mov
xchg
test
test
clc
lds
pop
scas
adc
pop
shlb
cmp
jae
jp
xchg
addr16
mov
shrl
fimuls
stos
push
pop
call
pop
adc
or
adc
mov
hlt
jle
and
push
ss
cmp
call
cmp
imull
cmp
xchg
jp
sbb
fsubr
xlat
popa
add
in
pop
jg
sbb
push
mov
stos
adc
xor
sbb
clc
cwtl
cli
cmp
mov
int
pop
mov
scas
add
fdivl
sub
sbb
enter
cmp
movb
jns
inc
lods
cmpsb
xchg
cmp
push
sub
int
dec
insb
cmp
test
in
or
rcll
les
adc
or
mov
cmpsb
mov
shll
xlat
cmovns
leave
je
testb
xchg
test
ror
and
test
pop
add
and
shll
lcall
xor
int3
jl
pop
cmp
in
loop
test
jnp
xlat
mov
mov
or
into
popa
scas
push
inc
mov
rolb
jb
imul
aaa
iret
in
jmp
lret
insl
jge
in
fyl2x
out
xchg
mov
xor
addr16
or
lahf
sub
lret
inc
fs
dec
arpl
ljmp
or
addb
xchg
pop
loop
clc
mov
loopne
jne
ljmp
nop
cmpsb
mov
adc
addr16
or
xor
orb
sbb
nop
push
popf
fistpl
ja
mov
jnp
out
insl
rcll
dec
inc
enter
in
aad
mov
pusha
filds
jns
es
cli
cmc
jmp
pop
add
ficomps
std
fidivrs
in
mov
mov
lahf
xor
jns
jp
xor
shlb
xchg
xor
scas
fdivl
ljmp
dec
int3
lret
pop
dec
dec
movsb
out
cmp
or
ljmp
jl
std
aaa
adc
pushf
ret
cmpb
lahf
ds
jbe
out
cmp
cwtl
rorl
jae
sar
mov
rolb
daa
negl
je
push
mov
outsl
popf
push
addr16
push
out
pop
in
and
pop
cs
push
dec
sbb
rolb
popa
test
test
mov
shrl
repz
dec
stos
sahf
fadd
jbe
jns
lret
add
arpl
mov
push
pop
mov
lret
push
mov
div
les
enter
scas
lret
insb
ljmp
jno
lea
xlat
jns
mov
jmp
cmpsl
add
jne
mov
or
xchg
je
jo
mov
aaa
xchg
test
test
add
repz
mov
adc
pop
sub
pop
jb
mov
push
es
je
sub
fsubrs
out
pop
cmpsl
fsts
inc
pop
aas
add
push
and
push
repnz
mov
xchg
gs
test
xchg
clts
addb
sbb
dec
add
lcall
and
ds
or
pop
sti
inc
std
pop
jl
aas
jb
outsl
mov
inc
lret
cld
sub
jecxz
pushf
pop
lods
mov
xchg
js
push
xchg
jne,pt
mov
or
pop
shrb
mov
cs
lahf
jbe
cltd
das
arpl
je
cwtl
ret
xchg
test
aas
adc
repz
addr16
sub
pop
aaa
jge
lcall
push
nop
dec
hlt
pop
sbb
scas
int
jle
or
mov
xlat
jecxz
push
setnp
ja
ret
or
fcmovu
sub
inc
fs
mov
push
pop
cltd
lock
dec
lcall
or
lahf
icebp
daa
pop
icebp
ficompl
loop
cmp
inc
mov
mov
std
es
fs
fidivl
mov
mov
fldt
pushf
mov
and
mov
popf
int3
pop
lahf
or
mov
js
int3
ja
cmp
movsb
adc
loopne
cmp
repz
jnp
fsubrp
loope
arpl
ss
add
mov
pop
or
insb
jg
lahf
int
std
sub
jnp
sub
fisubl
orl
add
add
pop
inc
gs
xor
aaa
push
je
mov
mov
popaw
cmpb
push
cld
les
sbb
insb
jo
push
inc
xchg
cli
xor
sbb
cmp
xchg
mov
mov
lret
cmp
sub
dec
sbb
add
mov
xor
nop
or
pop
enter
push
mov
add
xor
xchg
xchg
mov
aaa
cmp
test
lods
xor
dec
and
inc
addr16
lret
cwtl
js
or
leave
cmp
aaa
push
idivl
cli
test
cs
sbb
and
out
add
imul
inc
mov
in
push
jecxz
mov
jmp
test
fwait
hlt
adc
mov
sub
rolb
in
mov
les
xchg
push
push
out
xor
push
int3
leave
aaa
iret
jo
ds
ret
popf
shll
outsl
je
xchg
out
sub
mov
xor
mov
xchg
sub
mov
cmp
jae
mov
mov
fcoml
adc
insb
pop
out
in
popa
ficoml
dec
sub
fsubr
sahf
ficoml
lret
push
mov
xchg
add
lock
hlt
fbstp
mull
push
and
dec
repnz
xchg
repnz
jecxz
pop
in
push
and
push
mov
adc
dec
dec
xor
xchg
fcmovbe
outsl
pop
inc
xchg
arpl
dec
mov
cmp
lock
cmpsb
imul
sbb
in
adc
lods
xchg
mov
repz
jp
pop
add
xor
mov
inc
xchg
outsb
inc
imul
or
inc
sbb
ffreep
adc
cmp
movsb
or
and
lret
jp
cmp
pop
adcl
mov
les
push
dec
aas
int
call
jae
loopne
pop
add
aas
outsl
cwtl
sub
dec
jno
sbb
xlat
decl
rcrl
pop
aas
pop
jl
mov
xor
and
mov
ret
mov
shrb
iret
xor
in
xlat
test
cmpsb
imul
fisttpl
xor
ja
leave
xor
scas
ljmp
scas
fcom
pop
pop
adc
dec
adc
scas
gs
lahf
std
dec
pop
mov
mov
add
push
or
jb
fimull
hlt
mov
push
std
or
inc
pop
aas
mov
or
mov
std
mov
jb
and
mov
or
dec
sub
and
fisubrs
cli
leave
pop
sbb
xor
add
mov
adc
stc
xor
in
jo
cmp
xchg
leave
jae
test
pop
ficoml
push
out
sbb
sbb
inc
call
cmpsb
sti
das
scas
inc
pop
les
repnz
push
cltd
lret
sub
jp
sbb
imul
sub
mov
stc
loope
repnz
jmp
icebp
sub
mov
test
add
test
insl
je
xor
mov
addr16
jbe
aaa
dec
lret
mov
add
insl
imulb
lods
jp
inc
mov
arpl
aas
lret
cmp
jbe
jb
pop
fldt
scas
in
and
andb
lret
lods
cld
jg
call
ret
pop
xchg
jnp
scas
add
cmp
jle
xchg
push
cwtl
icebp
xor
add
lds
std
or
push
push
in
push
mov
sub
mov
inc
cmp
or
pop
ds
and
shl
dec
notl
or
ret
sbbl
mov
mov
loope
mov
push
shrw
ds
inc
dec
cmc
rcrb
imul
inc
push
fcoms
inc
aaa
mov
adc
cmp
add
insb
aas
scas
jns
dec
jno
outsb
cmp
int
pushf
sbb
sub
mov
cltd
jne
mov
or
stos
repnz
mov
lcall
shr
out
sub
mov
mov
fists
xor
adc
stc
jmp
or
lea
stos
sbb
sbb
repnz
out
mov
jmp
mov
cmp
ficompl
dec
gs
aaa
push
lea
dec
les
mov
sub
jnp
mov
lret
leave
inc
xchg
or
pushf
out
push
inc
mov
shlb
xchg
loope
dec
push
lock
mov
adc
push
aas
adc
inc
lahf
pop
cwtl
sbb
je
xchg
push
out
shll
mov
fdivr
jns
mov
pusha
lahf
sub
mov
je
jge
and
pushf
push
dec
mov
je
push
inc
ja
mov
xor
dec
or
dec
insb
push
xchg
inc
fldt
or
xor
mov
sbb
jge
sbb
push
pop
scas
lret
add
movsb
je
jns
shl
dec
inc
or
cltd
fwait
dec
daa
lock
out
add
sbb
or
outsl
xchg
mov
sub
xor
mov
jge
push
xor
xor
cltd
pushf
inc
pushf
sbb
xchg
es
cli
fsubl
mov
outsb
or
aaa
push
jbe
adc
mov
cmp
adc
sbb
loope
cmc
js
nop
adc
push
sti
lar
cli
cmc
call
jbe
inc
and
in
out
sbb
push
xchg
lods
dec
enter
dec
inc
jmp
mov
dec
idivl
loop
pop
ret
jo
cwtl
adc
js
repnz
in
mov
sbb
push
dec
iret
jnp
cmp
xor
shl
push
subb
jg
rolb
repz
andb
test
pop
jnp
icebp
mov
or
or
push
inc
adc
push
out
cmpl
test
xchg
sub
jb
pop
les
out
adc
jae
ficoml
arpl
je
mov
fs
mov
into
cs
in
cmp
mov
xor
testl
jne
mov
shrb
jo
call
popa
pusha
hlt
push
call
sub
sbb
jo
ds
aam
jp
adc
pop
outsl
jnp
jne
decl
int
mov
cmpsl
push
or
ljmp
sahf
fstl
push
std
cbtw
loopne
xor
scas
test
out
adc
add
inc
stc
mov
lods
test
ss
jl
push
pop
add
cld
movb
push
aas
and
pusha
push
lret
imul
xor
into
jo
mov
adc
cmpsl
pushf
leave
jno
sti
pop
inc
xlat
mov
outsb
mov
ss
sbb
push
popf
mov
jmp
jmp
or
bound
lret
movsb
insl
pop
mov
sbb
push
sarb
jp
push
lds
mov
push
lods
cmp
arpl
xlat
bound
imul
cmc
stos
inc
jb
mov
insl
mov
push
push
pop
push
iret
stc
int
lcall
cwtl
iret
ds
inc
imul
mov
add
movsl
mov
aaa
add
mov
mov
lods
mov
mov
dec
popf
push
push
inc
mov
add
fwait
mov
lret
cmp
xor
cmp
mov
loop
aam
inc
pop
fs
xchg
push
les
outsl
pop
in
les
out
cltd
xchg
cld
lcall
test
mov
push
test
xor
sbb
push
out
imul
cli
ljmp
jp
add
lahf
sub
lods
mov
stos
outsl
lock
dec
rcl
sti
aas
test
ret
iret
mov
add
cmp
rolb
jecxz
enter
add
es
xchg
pop
xlat
pop
scas
data16
bound
call
pop
pop
push
cmp
dec
roll
leave
xchg
shrb
ficoml
push
inc
and
xchg
aad
xchg
jle
dec
push
inc
push
and
daa
in
inc
mov
jp
sbb
push
or
pop
xor
and
shr
mov
jecxz
fisubrs
xchg
mov
mov
data16
sub
leave
cmp
int
jg
inc
and
imul
xlat
leave
pop
adc
push
incb
rcll
int3
insl
mov
rolb
inc
fstpt
jbe
fs
xchg
sbb
mov
aad
loope
nop
call
cmp
xchg
int3
ss
xchg
push
mov
mov
inc
adc
mov
cs
mulb
int3
call
cmp
xor
into
popl
js
jbe
leave
emms
add
aas
add
enter
jmp
inc
stc
xor
or
pop
cmp
fwait
loop
mov
ljmp
xchg
xchg
out
fdivrl
adc
pop
insb
push
adc
xor
jnp
ss
inc
xor
or
mov
pop
dec
add
lods
cmp
or
stos
xchg
xor
sub
mov
imul
mov
shr
add
or
inc
addl
lods
xchg
int
push
or
cmp
jb
dec
xchg
popl
adc
ret
stos
mov
dec
lret
cwtl
dec
push
push
xorb
outsb
xchg
jecxz
leave
sahf
mov
sbb
adc
enter
and
mov
dec
cmc
push
testb
cli
adc
mov
push
dec
lods
add
popa
jo
push
adc
cli
dec
fiadds
xlat
xchg
cwtl
jmp
nop
std
loop
paddsb
mov
loop
das
ss
sbb
orl
sub
mov
fcoml
cmp
pop
mov
jo
notl
mov
and
gs
in
inc
xlat
sub
fisubrs
add
push
cld
enter
dec
mov
int3
mov
mov
cmpsb
int
cs
mov
pop
data16
jge
jne
mov
fmul
pop
pop
mov
mov
repz
fadd
mov
cltd
push
mulb
jnp
or
inc
jnp
fnstsw
ss
fcmovu
outsb
mov
mov
sbb
in
insb
sub
push
rorl
iret
mov
jbe
dec
or
add
jecxz
xchg
xchg
inc
aad
push
sub
sub
out
les
test
pop
ja
pop
jmp
or
mov
cmp
lret
mov
scas
sbb
adc
jmp
pop
roll
fistl
outsb
jge
push
xchg
inc
jb
ljmp
mov
cmp
push
mov
add
lods
in
jl
cmp
inc
jne
nop
lcall
jo
push
pop
xchg
sub
das
push
add
inc
call
xlat
ss
and
mov
sbb
inc
ss
in
xchg
lret
adcb
and
lcall
vmwrite
sbb
inc
cmc
mov
jl
cwtl
add
inc
sti
test
inc
lahf
shlb
mov
je
xchg
pop
jno
inc
test
jg
mov
xchg
push
adc
ja
push
cmp
push
lock
outsb
cmpsb
add
stos
mov
jle
gs
stos
inc
adc
lahf
sti
inc
xor
notl
xor
testb
ja
mov
cltd
xchg
and
xchg
aam
jne
iret
rcpps
cmpsl
jnp
orl
pusha
xchg
rclb
pop
push
and
jns
push
add
popf
cmp
test
dec
jb
inc
data16
int3
scas
push
jne
popa
ret
dec
andb
pop
or
aad
mov
cs
lods
lods
aam
jae
in
jns
push
scas
jns
sub
outsl
xor
push
or
popf
xor
shlb
cltd
jmp
inc
lea
sub
test
jo
jl
gs
adc
stos
push
pop
shl
mov
and
je
cwtl
xchg
addl
mov
add
shl
pop
clc
inc
xor
xchg
mov
pop
in
xor
jl
shl
jne
mov
add
sbb
dec
mov
in
xchg
wrmsr
xor
cmc
iret
mov
push
xlat
sbb
dec
les
inc
sti
data16
mov
call
mov
loop
cmp
mov
ret
dec
js
js
sar
test
push
mov
rorl
cmp
mov
fisubl
imul
pusha
in
xchg
cmc
decl
mov
push
ficoms
repnz
and
loop
push
inc
orl
insl
or
fistpl
testl
push
jo
into
and
xchg
push
imul
sarl
xchg
jecxz
sbb
inc
xchg
shll
lcall
je
lcall
cltd
je
or
xor
pop
daa
or
mov
sub
xor
mov
shrb
js
in
lret
daa
aas
in
pop
fisubs
mov
fsts
xchg
out
and
mov
lahf
add
test
pop
mov
cltd
add
mov
inc
jle,pt
fcoms
out
imul
sbb
icebp
dec
jo
fwait
or
fsts
orl
and
add
adc
clc
jb
sahf
shl
dec
repz
cltd
loopne
mov
das
fbld
ret
push
xchg
leave
jecxz
mov
mov
fidivl
sub
lock
imul
hlt
sub
cmp
pushf
outsb
jge
shll
lret
jbe
and
into
arpl
cmp
adc
popa
popa
pusha
jne
xchg
xchg
dec
xor
adc
xchg
mov
mov
sbb
in
inc
call
jmp
mov
mov
cmp
mov
sbb
mov
rcrl
jp
xchg
lret
adc
divb
sub
jo
jo
sbb
nop
pusha
and
scas
sahf
lahf
popa
adc
scas
jbe
fisubl
xchg
mov
insb
jp
cmp
int3
cli
cmp
pop
rolb
sahf
inc
addb
push
xchg
xchg
aas
mov
mov
into
xchg
ss
and
inc
push
dec
fs
fistpll
in
jle
ja
jl
idivl
aad
leave
cmp
inc
mov
mov
mov
outsl
cltd
jns
sbb
cmp
and
adc
jns
mov
xor
repz
pop
xchg
mov
xor
mov
inc
adc
push
pop
cmpsl
mov
subl
fwait
xorl
lcall
jns
mov
addr16
pop
sbb
xor
dec
js
stos
les
setle
mov
ja
inc
inc
psrlq
lds
dec
int3
inc
or
fsub
jae
push
loopne
push
xor
addr16
loope
aam
cwtl
mov
mov
sbb
fdiv
ret
ret
or
jns
fsincos
lods
ret
imul
and
lods
in
mov
jb
xchg
ss
add
add
inc
loop
push
add
cwtl
xor
call
cli
jnp
stos
lcall
jl
mov
lahf
inc
mov
fiaddl
outsb
insb
mov
test
or
jmp
cmp
adc
push
pop
mov
sub
imul
jmp
mov
pop
xchg
lds
loope
mov
mov
lahf
ret
sub
imul
xor
aas
imul
mov
inc
aam
sub
int
or
dec
cli
into
pop
into
mov
aaa
clc
lret
pop
xor
lret
pop
repz
je
adc
sub
aaa
push
fmull
lods
add
ja
movsl
sbb
in
rolb
xlat
jmp
ja
lret
insl
cmpsl
loopne
jmp
lds
cmc
dec
push
pushf
or
ljmp
sbbb
jo
add
das
movsb
cltd
addr16
adc
nop
aaa
cmp
xchg
xchg
dec
adc
cltd
cmp
out
add
lock
std
xor
cmc
adc
jno
in
and
and
and
mov
jle
jno
xorb
scas
hlt
push
inc
cmp
loopne
cwtl
je
inc
mov
pop
icebp
sub
pop
aaa
xchg
jo
mov
mov
pop
addr16
out
xchg
and
sub
aas
cltd
and
pop
xchg
mov
sub
jg
cmpsl
mov
roll
push
fldcw
push
in
ljmp
push
xchg
add
push
sbb
sub
xor
inc
leave
cmp
and
out
xchg
jb
push
xchg
ror
dec
push
loop
add
pop
aad
insb
xchg
and
pop
pushf
cmp
insl
aad
add
icebp
pop
xchg
pop
lods
and
xchg
jmp
xor
lcall
mov
iret
pop
push
test
addl
xchg
add
addr16
xchg
js
sub
lcall
cmp
cld
subb
cmpl
mov
mov
inc
mov
add
adcl
repz
cmpsl
or
add
in
xor
dec
sti
cmp
fsts
add
outsl
mov
es
mov
das
icebp
sub
std
adc
adc
cwtl
cmp
ficoms
inc
dec
dec
dec
mov
xor
ja
lea
mov
enter
add
jno
imul
add
cmp
ja
sub
in
lret
sbb
fmull
pusha
cmp
daa
test
xor
clc
fs
pop
inc
cmp
sbb
iret
inc
lret
cltd
cmpxchg
mov
adc
imul
lea
les
push
mov
jne
push
aam
lds
cmp
adcl
out
mov
ss
push
shr
push
ds
je
lret
data16
repnz
mov
imul
inc
or
cmp
inc
int
jmp
mov
push
mov
push
lret
clc
popf
and
jae
enter
lea
pop
rcl
sub
xor
nop
aas
int
sbb
or
loope
js
fnstsw
fs
fmul
cld
add
and
scas
sub
mov
xchg
dec
call
in
outsl
lret
adc
adcb
stos
iret
imul
mov
scas
fdivr
leave
mov
aad
push
test
repnz
jp
sub
xlat
cmpsb
jge
mov
mov
mov
or
push
aad
arpl
imul
cmp
jmp
aaa
mov
pop
inc
or
insb
dec
sbb
push
leave
cmp
jnp
je
into
xor
mov
xor
hlt
add
dec
cmp
pop
add
dec
filds
sbb
or
jecxz
insl
cmp
adc
loopne
in
adc
adc
mov
add
js
int
pushf
roll
int3
in
inc
xor
and
scas
xor
mov
xor
cmp
enter
idivb
inc
sbb
push
jne
popf
xchg
arpl
xchg
inc
mov
mov
cmp
call
inc
sbb
push
jle
lock
fidivs
push
dec
lock
inc
in
inc
sub
dec
xchg
xchg
cmp
mov
js
out
jae
xchg
mov
sti
sbb
sti
pop
xorb
je
pop
mov
pop
mov
nop
dec
cmp
testb
cmp
aaa
aad
loope
add
and
jae
orb
outsl
mov
jmp
dec
ss
loope
jge
test
inc
or
aaa
je
sbb
pushl
jg
pop
ret
inc
cld
jge
sub
dec
cli
xchg
bound
or
jecxz
xor
in
pop
inc
inc
scas
xor
popa
enter
cmp
sub
out
out
sti
aas
fs
ljmp
add
xchg
in
nop
xor
inc
and
mov
mov
mov
and
pop
jne
fwait
inc
pop
div
sbb
pop
jns
ficomps
mov
xchg
inc
jmp
in
push
mov
in
add
xchg
mov
or
dec
push
xchg
sbb
testb
inc
or
fildl
mov
ret
shrb
push
cwtl
inc
pop
iret
or
or
mov
mov
cli
sub
stos
push
ficompl
or
mov
sti
cmpsl
dec
test
jbe
les
aad
add
xchg
hlt
mov
xor
popa
scas
sbb
ljmp
daa
jae
cwtl
add
xchg
mov
sub
or
mov
out
test
xchg
mov
pop
enter
lcall
sub
cmpsl
inc
mov
call
cmpsb
and
jmp
add
loop
cmpsb
sahf
push
xchg
popa
mov
xchg
arpl
mov
jp
jno
adc
xchg
cwtl
sub
rorl
clc
outsl
stos
lock
push
push
sub
imul
xchg
jmp
ret
aaa
push
xchg
mov
cmp
in
add
push
push
cmp
cmpsl
scas
push
mov
stc
mov
icebp
jmp
test
imul
push
imul
xor
xchg
or
mov
inc
movb
fistps
stos
popf
orb
jns
les
push
rcll
iret
push
jnp
mov
adc
mov
push
pop
jbe
movsb
or
out
mov
js
mov
out
add
popf
cmpsl
ret
inc
push
push
lds
pop
in
sbb
sub
lods
popa
add
fcom
dec
aaa
ret
pushf
lods
dec
and
ds
jns
imul
sbb
pop
repz
in
mov
xor
nop
clc
jae
dec
dec
jns
test
or
or
or
adc
sbb
pushf
stos
movsl
daa
inc
sahf
call
xchg
lahf
in
mov
andl
out
push
pushf
nop
movsl
inc
xor
test
and
mov
fmuls
add
imul
ret
fisttps
cmp
jne
fldenv
xchg
mov
cmp
xchg
jmp
lcall
iret
jo
mov
hlt
in
loop
aam
and
in
fdivs
or
adc
sub
or
orb
aam
jle
jnp
and
sub
daa
in
mov
fcmovbe
stos
popa
mov
int3
mov
adc
shll
sahf
es
jae
roll
jle
jns
movsb
test
aad
dec
arpl
fwait
inc
mov
aam
int
xchg
cmp
cld
idivw
lds
cli
mov
aad
inc
repnz
call
xchg
xchg
jle
stos
gs
pop
sbb
les
fcomip
jmp
or
jns
xchg
xor
popa
jg
mov
daa
test
cli
sbb
std
sti
dec
je
or
and
inc
xor
fidivrl
pop
out
lret
pushf
bnd
xor
repz
add
adc
lret
leave
and
out
insb
cmp
inc
shlb
push
filds
mov
daa
cwtl
mov
adc
fstps
or
xor
mov
hlt
ret
adc
rcrl
and
mov
ja
test
pop
push
mov
add
cld
push
sub
cmpsw
mov
cmp
dec
test
ja
std
cmpsl
pop
xor
mov
imul
mov
xchg
jns
scas
xchg
clc
ret
imul
xor
mov
bound
cmp
in
lock
mov
mov
int3
or
jo
fidivl
xor
inc
pop
notb
ss
cmpb
mov
sarl
jg
add
mov
pop
arpl
sbb
xchg
loop
or
cmp
or
mov
sbb
xor
push
jno
dec
nop
roll
mov
or
sarb
fisttpll
stc
mov
cwtl
pop
ja
ret
jnp
hlt
pushf
push
idivl
push
or
out
xlat
adc
das
jns
mov
inc
insb
xchg
mov
in
outsl
and
ljmp
jb
dec
cltd
push
adc
rcr
sub
les
xor
jnp
mov
popa
add
hlt
and
fisttps
mov
cltd
into
js
push
imul
jnp
int
cmp
adc
sub
dec
cli
cli
sbb
push
js
jle
jne
cmp
idivl
pop
ljmp
adc
push
and
arpl
scas
mov
cmp
in
ss
mov
out
sbb
pop
xchg
ja
lret
jne
add
repnz
sub
xchg
into
ffreep
jae
movsb
mov
mov
aaa
and
fistps
mov
cmp
loopne
popa
xor
or
repz
dec
in
lods
xchg
mov
xchg
pop
mov
and
divl
xor
push
gs
xchg
mov
loopne
add
adc
mov
jg
pop
push
cmc
sbb
or
adc
into
xor
mov
out
pusha
pop
movsl
sub
xchg
pop
xchg
xchg
mov
sbb
dec
gs
adcb
lret
into
inc
lret
mov
js
pop
hlt
or
test
ja
add
sar
movsb
aaa
mov
dec
jmp
scas
mov
jecxz
sbb
xchg
add
ds
jp
mov
js
das
pop
push
scas
test
push
aad
int3
or
ja
xor
dec
cmpsl
push
dec
imul
pop
mov
or
dec
inc
enter
ss
jge
repz
mov
ret
push
mov
sub
stos
or
jp
je
mov
sbb
subl
add
xchg
fcmovne
pop
adc
adc
sbb
xor
je
lahf
push
lcall
jb
xchg
cmp
dec
sahf
jb
cmp
inc
in
out
mov
movsl
rclb
stc
mov
push
shl
add
add
aas
out
loope
adc
mov
data16
push
cmc
das
push
jmp
in
lds
sub
jg
or
outsb
mov
mov
push
cmp
pusha
jb
sub
mov
aas
jb
jae
add
and
cmp
notl
icebp
orl
xor
sbb
sbb
push
cmp
lcall
rcll
cmp
popf
addl
sub
ret
icebp
int3
scas
mov
xchg
ljmp
lahf
les
push
sbb
std
ret
add
cmp
mov
inc
sub
push
cmc
cmp
xor
pop
add
aaa
cmc
mov
mov
clc
sbb
mov
cmp
inc
pop
jmp
pop
shll
int3
jg
or
xor
or
call
rcrl
addr16
pop
adc
push
mov
aad
pop
je
sbb
repnz
xchg
das
push
pop
aam
sub
mov
out
lcall
push
xor
pop
icebp
bound
js
jle
xor
mov
sbb
loopne
xchg
cld
push
imul
in
jle
inc
lods
inc
nop
popf
cli
jg
ret
addr16
mov
push
lock
jl
ljmp
stos
fimuls
sar
fiadds
je
jp
xchg
jle
cmc
insb
jo
xor
xor
popf
out
xor
arpl
cwtl
mov
ret
rorb
call
and
loopne
sbbb
pop
dec
mov
mov
pop
inc
xchg
inc
jne
push
shll
fmull
dec
mov
idivb
pop
enter
loop
mov
stos
cmp
mov
cmp
sub
test
rorl
jo
cmpsb
mov
add
xchg
pop
inc
cmp
push
or
xlat
inc
push
lahf
xorb
cltd
call
sbb
sub
sarl
sahf
js
push
or
jae
loope
inc
or
dec
or
add
or
add
push
push
fidivs
jmp
push
fidivrs
pop
dec
push
mov
add
add
int3
test
lds
and
int
cmc
repz
and
dec
aad
mov
sub
pop
sbb
xchg
out
sahf
mov
mov
jns
dec
pop
inc
arpl
or
mov
inc
mov
repz
cmp
pusha
adc
and
xorb
push
mov
or
data16
lcall
mov
xchg
cli
push
inc
add
sub
lahf
push
dec
sub
xor
push
cli
pop
inc
push
xor
pop
shrb
inc
jmp
pusha
rorb
push
popf
mov
push
pop
sub
inc
mov
sbb
cmp
js
push
out
mov
mov
pusha
notb
nop
data16
mov
insl
nop
jl
jno
fidivrs
stos
enter
outsb
push
fadds
scas
mov
and
xor
and
in
inc
out
inc
jbe
mov
or
fiadds
dec
notl
mov
test
mov
jnp
fmuls
aas
out
lahf
add
das
rcl
addr16
cltd
aam
fdivrl
icebp
pop
adc
add
mov
repz
push
jo
int
sbb
stos
rcl
pop
jle
mov
xchg
loopne
scas
adcb
sub
outsl
stc
and
repz
xchg
jle
dec
push
mov
push
xchg
sub
ret
push
mov
lock
in
sub
mov
mov
sub
popa
mov
push
push
mov
xchg
lds
push
dec
lods
lea
gs
jno
outsb
adc
ss
cli
ficoms
xor
dec
je
jb
inc
xor
in
loope
les
or
pushf
ds
pop
in
jp
leave
dec
jo
call
sti
loope
mov
cmp
in
mov
inc
lret
cmp
jb
cltd
popa
lret
dec
test
mov
add
mov
es
xchg
dec
xchg
ds
dec
pop
addl
inc
pop
pop
sbb
inc
jp
mov
mov
movsl
ss
mov
mov
hlt
dec
sti
mov
pop
je
cmp
xchg
or
out
lret
dec
in
sbbb
mov
push
int
lock
stos
std
nop
add
out
je
and
enter
dec
enter
lods
test
push
loopne
inc
sarl
push
sahf
fwait
cld
adc
je
icebp
pop
ss
mov
pop
bound
imul
jb
cmpsl
xor
xor
push
xchg
mov
adc
pop
jo
call
ds
and
mov
lock
iret
notl
dec
cmp
rdpmc
xor
fsubrs
lds
xchg
jle
les
pop
xor
push
into
sub
fidivrl
add
add
insb
aad
or
push
ljmp
js
mov
popf
fstps
or
imul
mov
or
push
and
cmp
ljmp
push
lods
jmp
mov
leave
push
and
test
adc
xchg
mov
stos
mov
cmc
jae
fnsave
cs
add
es
mov
loopne
mov
sbb
xchg
std
xor
sbbb
divb
dec
lods
subl
shl
int3
cs
mov
stos
ret
push
movsl
cld
jle
cli
add
imul
or
cwtl
jl
cmpsb
rcl
adc
inc
cmp
subb
xchg
dec
js
mov
call
mov
lods
xchg
insb
lcall
fcmove
jge
mov
cmp
mov
pop
mov
xchg
incb
mov
push
rcrb
adc
aaa
incb
lds
jns
mov
movsb
cwtl
aaa
xchg
lahf
mov
push
daa
aaa
xchg
xor
fcomps
xchg
pop
mov
jmp
xchg
xor
ss
sbb
fwait
push
mov
push
iret
out
repz
int
sub
faddp
mov
mov
lods
in
mov
aad
loope
fucom
add
add
inc
into
cs
pop
jge
pop
bound
sti
add
pop
scas
loop
sbb
inc
enter
add
fildl
mov
out
ret
fs
adc
xchg
and
fwait
in
mov
mov
mov
mov
push
dec
inc
xor
cmpsb
mov
pusha
ficoms
cltd
js
sbb
mov
ror
pop
dec
lods
or
gs
sbb
add
insl
mov
cmp
inc
in
inc
addr16
pusha
addl
sub
mov
mov
mov
jb
dec
jecxz
outsb
incl
adc
mov
dec
sar
hlt
cmp
es
aam
inc
push
jno
mov
imul
idivb
add
aas
rcrl
jnp
mov
popa
jo
ja
sub
push
xor
mov
mov
inc
jl
imul
sub
adc
test
daa
loopne
adcl
pusha
ret
dec
adc
cmp
test
add
leave
testb
inc
fs
xor
mov
push
sbb
shrl
sbbl
mov
jl
and
incl
mov
and
sub
call
xchg
bound
push
imul
loope
jl
xchg
cs
lea
call
and
jno
mov
js
loop
sarb
sbb
push
mov
xchg
loopne
jmp
add
push
mov
out
sbb
nop
push
jae
sar
xor
dec
stos
lret
xchg
repnz
xchg
or
push
ds
pop
lahf
sub
inc
ss
jns
rclb
shll
imul
fadd
ds
dec
aaa
xor
int3
movsb
or
xor
mov
push
pop
add
sti
add
xchg
fstps
mov
inc
imulb
push
pusha
clc
push
lods
jb
gs
mul
mov
inc
cwtl
fisttpll
mov
add
psubd
lds
xorb
and
popf
jae
xor
mov
cld
or
xchg
push
inc
xchg
cmc
roll
ljmp
jge
fisttpll
call
push
cmc
into
clc
popa
mov
rclb
bound
xor
or
addr16
cmp
orb
das
lds
jge
cli
call
inc
pop
filds
push
outsl
sahf
lret
fistps
mov
loopne
test
jmp
fucomi
test
rcr
pop
mov
nop
jmp
daa
inc
lcall
pop
xchg
adc
popa
and
mov
add
std
imul
push
xchg
mov
dec
insl
roll
push
addr16
mov
daa
cld
adc
xchg
scas
repz
cmp
pop
pop
pop
jecxz
lret
dec
lods
push
lods
ret
xor
jno
enter
in
arpl
push
mov
push
push
das
xchg
out
hlt
jns
sbbl
mov
fldcw
sub
xchg
loope
repnz
sbb
notb
dec
js
lock
sbb
add
jne
sbb
sub
push
jp
imul
push
lahf
mov
add
add
pop
sbb
push
jae
in
cmpsl
imul
addr16
out
icebp
push
mov
movsb
inc
enter
inc
ljmp
mov
daa
jp
and
push
cmpl
or
cmpsl
sbb
stos
movd
pop
lcall
jnp
sub
cmp
jne
sti
addb
cwtl
xlat
cltd
mov
sbb
or
cmpsb
loopne
daa
stc
rcrb
test
imul
mov
out
xchg
sub
cltd
fnstcw
sbb
fsubp
call
in
inc
aas
mov
ror
mov
and
and
aas
jp
and
mov
lgs
mov
xlat
sbb
bound
mov
nop
inc
ljmp
es
jo
mov
lea
lea
in
and
ja
mov
lock
push
fsubrs
lcall
and
fs
test
ret
int3
lock
jl
imul
pushf
inc
rorb
mov
ret
sahf
in
imul
dec
imul
shll
dec
sbb
xor
and
or
out
adc
cmp
gs
aad
lret
repnz
aad
shrl
aam
jae
aad
dec
and
inc
int3
cmpsb
jle
push
pop
lods
cmp
mov
xorb
adc
sbb
aam
mov
shll
enter
sbb
out
movsb
push
leave
inc
je
and
pop
nop
cmpsb
bound
dec
aaa
inc
push
sahf
imul
imul
cmp
push
or
test
out
or
lods
test
xchg
xor
push
and
xchg
test
js
shr
jmp
js
aad
mov
and
rcrl
nop
test
sbb
pcmpeqb
add
into
add
nop
outsb
jnp
inc
aad
rcll
stos
sarb
adc
out
inc
dec
mov
scas
inc
mov
add
xor
mov
leave
ror
mov
addr16
inc
jb
sub
mov
and
and
mov
or
mov
mov
dec
cmp
rorl
jg
out
add
adc
dec
or
shlb
and
lret
sbb
dec
cli
inc
in
sub
jecxz
jl
int
pop
mov
cmc
adc
sub
repz
ss
clc
jno
fmuls
mov
js
lds
cli
cmp
pop
ss
lods
pop
dec
divl
sub
arpl
xchg
rorb
adcl
stos
ror
test
mov
je
sbb
dec
shll
ror
sti
sarb
sarb
popa
xchg
or
dec
pop
inc
mov
jle
xchg
dec
sub
inc
ret
cwtl
sbb
daa
pop
mov
add
mov
int
shll
pusha
iret
jle
bound
scas
js
lds
jl
cmp
pop
jmp
lock
or
mov
lahf
aas
out
adc
int3
adc
sub
pop
lret
xor
cmovge
mov
inc
inc
jmp
in
jl
imul
mov
jmp
movsb
ss
fcoms
in
ret
ljmp
test
mov
cmpsl
imul
lods
pop
push
add
pop
dec
pop
push
fs
or
imul
in
xchg
sarl
mov
mov
stos
aad
imul
cmp
fs
push
xor
pop
psubusb
pusha
hlt
inc
inc
sub
and
xchg
nop
mov
lahf
loop
popa
scas
insb
mov
popa
pop
adc
out
cmp
cmp
fimuls
mov
test
mov
and
out
inc
cli
mov
mov
adc
movsl
aaa
pop
test
xor
nop
add
arpl
push
sub
fstpt
lret
in
sub
insl
pop
push
fwait
cmp
inc
outsl
in
mov
push
mov
fidivl
outsl
lods
ret
sbb
xchg
iret
negl
fs
jb
mov
xchg
scas
ljmp
fld1
mov
cmp
lods
mov
sti
in
sub
sub
inc
aaa
pop
adc
jo
sbbb
jno
cmpsl
stos
insb
and
incb
jae
mov
jmp
rclb
aad
cmp
push
loope
inc
xor
mov
lea
loop
jp
hlt
xchg
arpl
daa
sti
pcmpgtb
bound
fwait
jmp
jb
dec
lock
pop
or
or
ret
pop
push
dec
imulb
mov
inc
aaa
lock
jbe
je
movsl
push
sub
pop
push
mov
test
push
jle
add
in
fildl
fdivrl
pop
inc
add
mov
lretw
mov
lods
testb
shll
addl
pop
or
sub
dec
xlat
fiadds
add
pop
inc
mov
in
xor
loop
dec
adc
mov
fstps
sbb
stos
cmp
inc
lret
cmpsl
sbb
lahf
cmp
jl
aam
test
dec
pusha
or
and
xchg
call
pushf
aad
loop
push
cmove
daa
inc
lock
sub
adcl
sbb
adc
pop
push
sub
repnz
outsl
in
sbb
jmp
jmp
repz
out
push
je
adc
sub
mov
xor
cmp
xor
dec
jle
stc
icebp
sub
rcr
clc
inc
das
out
or
sub
lcall
in
int3
mov
mov
fldt
sti
or
sti
dec
adc
inc
test
mov
fwait
movsb
loop
jp
sbb
es
cmp
xlat
push
decl
pushf
fstps
sbb
inc
scas
pavgb
cltd
out
in
jl
in
test
xchg
xchg
cltd
jnp
mov
lods
and
divl
sbb
dec
cmp
int3
xor
xchg
clc
cld
inc
add
xchg
pop
hlt
lea
test
adc
xchg
testb
aad
pop
mov
lods
or
imul
fs
loopne
or
into
cli
jmp
lods
xchg
pop
scas
enter
xlat
and
iret
dec
and
adc
sub
test
xchg
rcll
or
lods
inc
xor
insl
cmc
insl
push
or
xchg
adc
sbb
inc
mov
fisubl
shll
hlt
and
pop
scas
xchg
or
sbb
inc
cmpsl
das
repz
outsl
push
sahf
test
adc
xchg
push
inc
push
sub
fcmovnbe
movl
xchg
sbb
mov
add
pop
int3
sbb
mov
jle
xor
sub
lret
hlt
inc
or
jle
fs
out
mov
imul
mov
cmp
pop
cmpsl
push
rcl
inc
sbb
pop
mov
add
push
inc
push
nop
jne
dec
test
jecxz
push
lds
jg
je
mov
xor
outsl
dec
cmc
inc
pop
jns
lock
mov
rcl
out
jo
nop
mov
xorb
sti
mov
cmp
sub
inc
dec
mov
test
orl
fwait
inc
aas
fmull
pop
lret
outsl
dec
out
push
xor
enter
in
mov
out
push
in
int
mov
leave
int3
mov
adc
pop
jmp
sub
loop
xchg
jle
roll
out
inc
aas
push
insb
lcall
lods
cwtl
mov
push
xchg
lret
cld
pop
pop
arpl
daa
sub
push
jecxz
in
mov
cltd
adc
and
movsl
or
xchg
xor
fsub
cmp
cmp
jmp
addb
dec
hlt
lods
outsl
and
ja
mov
push
inc
add
dec
xor
fsubl
push
movsl
pop
out
dec
enter
sbb
jno
js
mov
mov
popf
and
enter
xor
sub
test
jbe
test
iret
fucom
jbe
data16
mov
inc
and
lret
jp
mov
movsb
inc
roll
cwtl
cmc
adcl
cltd
cltd
js
fsub
adc
sub
scas
aaa
leave
filds
mov
xor
jns
xchg
mov
push
rorl
inc
xor
and
nop
pop
push
nop
xor
out
inc
adc
jno
mov
jnp
cmp
pop
std
push
mov
jb
outsb
add
inc
xchg
sahf
xor
outsb
jl
mov
out
dec
test
fisttpl
xor
popa
shlb
inc
arpl
mov
push
lcall
in
jne
jnp
push
mov
or
xchg
jp
mov
aas
pop
push
push
and
add
push
inc
cwtl
jmp
jecxz
std
ret
pop
jnp
out
sub
repz
jg
push
stos
std
ljmp
xlat
xchg
push
add
mov
adc
enter
mov
fwait
mov
mov
popl
out
and
fisubs
xlat
arpl
dec
movsl
insb
loopne
addl
mov
jae
push
push
or
push
inc
stc
imul
jbe
cmp
outsl
lea
dec
shlb
pusha
dec
mov
lods
cs
mov
pop
fdivs
data16
mov
pushf
out
jl
cmpb
into
or
mov
sbb
into
mov
lock
pop
js
mov
daa
movsb
icebp
dec
xchg
pushf
pop
jns
cmpsb
inc
minps
add
cli
jae
adc
and
std
in
inc
or
add
sub
int3
pusha
subl
pop
adc
or
out
adc
bound
popa
inc
xchg
cmp
std
daa
int
inc
inc
pop
and
imulb
or
pushf
xchg
gs
xor
lods
andb
add
lock
pop
testl
aam
mov
clc
mov
mov
xchg
mov
popl
fidivrl
ret
xor
popa
sub
cs
adc
push
sbb
xchg
das
xor
xor
jo
es
lds
leave
push
or
sub
dec
aad
xlat
mov
fdivl
lock
stos
hlt
jns
xchg
popf
lcall
cmp
cwtl
jmp
mov
lea
inc
add
dec
test
add
pop
lods
mov
aad
and
inc
pop
mov
es
cmpb
xor
and
cli
out
lods
inc
dec
lea
xor
sbb
cmp
mov
jmp
mov
lgs
lds
rorl
daa
xorb
imul
pop
inc
sub
cwtl
inc
outsb
mov
icebp
adc
or
mov
jle
int3
sub
dec
or
fisubrs
add
cmp
mov
jle
ds
loope
xor
cmp
imul
aaa
sbb
pop
jecxz
popa
sbb
sub
inc
inc
inc
ds
sti
loopne
hlt
mov
sti
repnz
and
out
std
arpl
xchg
fcmovbe
lods
jno
mov
sbb
sarl
dec
add
mov
jecxz
loope
rorb
xor
xchg
cmpsl
mov
sub
push
mov
fidivrl
push
push
and
and
inc
imulb
ret
xchg
jmp
mov
jecxz
mov
or
std
xor
dec
leave
mov
mov
out
cmp
out
mov
cli
dec
lock
sub
mov
aaa
pop
jg
jno
and
push
adc
mov
adc
xchg
sbb
pusha
pop
sbb
cmpsb
or
pop
jg
push
mov
mov
jmp
js
dec
dec
inc
xchg
mov
cmp
adc
mov
enter
push
fidivs
dec
adc
inc
mov
xor
pop
mov
adc
mov
loop
testb
jecxz
jnp
add
xor
fistpll
dec
inc
pop
jmp
jl
movsb
lods
in
xchg
sub
jbe
lahf
sub
mov
mov
rorb
fsubl
xor
cld
add
inc
aad
jg
dec
in
cld
stc
add
sbb
lcall
call
mov
mov
notl
mov
lock
shlb
aaa
cmp
mov
xchg
inc
icebp
js
pop
mov
mov
push
cmpsb
sub
adc
imul
sbb
and
add
int3
push
test
xchg
push
push
fs
xor
paddq
iret
mov
xor
xchg
push
addr16
add
sbb
xchg
or
fwait
jg
cmp
jmp
sbb
inc
and
dec
xchg
mov
adc
dec
ja
cmp
in
loopne
or
adc
jp
stos
push
mov
sub
adc
lds
inc
sbb
daa
int
imul
outsl
mov
jmp
in
add
xlat
aaa
mov
sbb
rolb
lret
xchg
loopne
sbb
adc
popf
subl
scas
xor
push
jnp
fwait
xchg
sub
loopne
ja
push
scas
or
jmp
pop
dec
jmp
mov
sarb
in
jmp
inc
pop
inc
int
inc
push
jle
lret
xlat
cmp
fwait
sub
call
or
repnz
mov
xor
and
out
daa
push
lret
rolb
je
sbb
and
add
xchg
fimull
faddl
repz
xchg
mov
adc
sbb
jne
mov
inc
add
add
cmp
and
sub
jg
pusha
rcll
sbbl
int3
mov
popf
add
or
mov
pushl
sarl
mov
fndisi(8087
inc
ret
aad
xor
sub
aad
clc
imul
mov
mov
icebp
ja
sub
sti
aas
je
or
imul
sub
xchg
jns
int
mov
xor
imul
and
cmpsb
pop
dec
movsl
mov
sub
add
xchg
xchg
je
leave
adc
pop
addb
stos
imul
xchg
sbb
rorl
jp
adc
test
lcall
push
xchg
push
hlt
mov
fdivrs
mov
shl
imul
adcb
xorb
push
sbb
leave
aad
fprem1
ss
push
out
inc
adc
xor
adc
cmpsl
lret
jl
lret
cmp
incl
aas
mov
pop
insl
adc
cmc
cmpsb
in
adc
mov
shrb
roll
les
push
xchg
lea
daa
sub
out
int3
repz
lea
hlt
lds
mov
jne
test
pushf
pop
lods
ds
and
lahf
das
xchg
mov
sahf
gs
and
adc
add
mov
or
xchg
sbb
jbe
loopne
dec
pop
lret
int3
hlt
stc
push
dec
mov
test
jbe
loope
sub
cltd
xlat
jo
bound
mov
or
add
ss
add
aaa
imul
pop
shll
sbb
pop
mov
inc
fistl
dec
cmpsb
pusha
inc
mov
insl
cmc
lock
jecxz
xchg
iret
mov
sub
sbb
cld
outsb
ja
pop
pop
mov
mov
cwtl
inc
div
mov
sbb
enter
mov
shlb
xor
adc
jmp
and
nop
push
in
cmpsb
aam
mov
jecxz
cltd
jle
sub
cmp
outsl
and
outsb
les
push
ficoms
adc
pusha
movsl
sub
les
scas
sub
adc
mov
push
cmp
jns
cmp
xchg
out
mov
xchg
cmpsl
pusha
or
jge
xchg
xchg
cmp
lahf
sub
inc
adc
lret
push
xchg
aad
inc
lock
jo
push
add
push
aam
mov
sub
sbb
and
pop
cwtl
fistpll
lea
and
rcl
addr16
data16
loop
add
push
jae
popa
jbe
and
scas
jne
xor
sbb
frstor
add
jb
frndint
dec
dec
fisubl
push
in
je
cmpsl
xor
enter
icebp
sub
and
sub
popf
out
mov
mov
rol
icebp
mov
mov
stc
fdivrl
shl
lods
or
push
push
dec
in
inc
clc
jmp
lods
out
fmul
mov
mov
inc
test
or
movsl
and
hlt
or
cmp
sub
aaa
cmp
adc
add
int
jle
stc
repz
adc
jno
js
and
and
fnstsw
stos
adc
cmp
mov
sbb
dec
and
fwait
push
scas
scas
mov
sbb
mov
sbb
fwait
js
push
ja
ljmp
mov
sti
into
pop
pop
jo
xchg
dec
xchg
cmp
add
push
pushf
lock
in
repnz
push
mov
out
jg
lods
movsb
loope
les
dec
shll
subb
orb
mov
xorl
xchg
stos
loopne
rcrb
movsl
pop
cmpsb
scas
sub
mov
sub
lcall
sub
jo
or
cltd
sub
into
sahf
pshufw
into
int
mov
mov
add
inc
add
xchg
pusha
lret
jmp
idivb
aad
aam
cmc
and
dec
insl
scas
lods
in
pop
pop
loopne
jecxz
mov
cli
push
test
dec
ret
push
cmpb
aaa
repz
mov
rcrl
imul
adc
mov
mov
repz
push
inc
imul
repz
fs
cli
lret
mov
loop
not
lea
pop
std
sbb
adc
cmp
cwtl
repnz
repz
fwait
xchg
jg
ja
stc
fidivrs
arpl
push
lods
mov
pop
inc
mov
inc
xchg
aaa
xchg
cmpsb
cmp
push
mov
sub
jmp
mov
jge
cmc
out
aaa
roll
test
cmp
popa
nop
ret
xor
push
xor
insl
xlat
xchg
inc
pusha
jbe
dec
jae
test
ret
or
imul
testl
push
mov
lock
scas
bound
push
shlb
pop
movb
mov
cmpsb
data16
nop
mov
pop
or
inc
push
pop
dec
dec
pop
add
insb
sub
fdivrs
movsl
xorl
xchg
fcompl
push
sub
mov
inc
shll
stos
pushf
sub
inc
mov
popa
je
fidivl
xchg
xchg
adc
pop
dec
cmp
xchg
inc
xchg
jne
adc
cmc
mov
xchg
mov
idivl
mov
lret
fdivrp
sbb
inc
in
inc
sahf
imul
jno
insb
popf
enter
adc
push
pop
sbb
jb
dec
in
dec
repz
stos
and
pop
adc
das
cmpl
fbstp
dec
ljmp
shll
jb
cld
mov
pop
add
testl
repz
xor
sbb
int3
jns
or
pusha
cld
sbb
add
fstpt
xchg
lret
test
add
scas
aam
scas
aad
jp
sub
outsb
push
shl
jecxz
clc
mov
mov
mov
push
mov
loop
sbb
fldt
mov
outsl
sub
shlb
enter
jns
push
fildl
es
mov
add
inc
pop
mov
jbe
cwtl
xchg
jmp
add
xor
sbb
mov
mov
hlt
js
jge
pop
mov
lret
dec
mov
test
orb
loopne
enter
popf
ljmp
stos
lock
push
sahf
xchg
inc
or
stos
push
push
add
dec
rcrl
and
imul
leave
fs
and
fisttps
cmpsb
mov
jnp
mov
dec
sbb
push
push
out
xor
dec
xor
aad
fmulp
mov
ss
pop
mov
lods
lahf
lea
pop
sub
in
ror
je
cmp
stos
mov
mov
jg
sub
sub
xor
les
push
dec
mov
sub
mov
inc
mov
xchg
fbld
ja
dec
pop
pop
cmp
cli
movzwl
dec
out
repz
add
fiadds
and
fld
pop
fsts
inc
adc
cli
call
push
lcall
movsl
xchg
inc
xchg
add
repnz
and
pusha
shrl
add
mov
cmpsb
lcall
adc
dec
test
ret
add
into
aad
jl
std
xchg
in
sbb
dec
add
xchg
data16
nop
mov
add
fwait
divl
mov
xchg
das
adc
jle
inc
stos
rcrb
inc
add
sbb
adc
stos
pop
cmpsl
mov
outsl
clc
mov
cli
pusha
pusha
test
popw
mov
dec
aaa
cs
in
in
sub
mov
in
lret
push
lea
inc
aas
push
mov
ret
loope
ja
sbb
mov
adc
nop
xor
mov
jnp
xchg
es
pop
loopne
andnps
lods
fwait
call
jecxz
outsl
div
and
dec
fstpt
xor
sub
add
xchg
mov
cmp
or
pop
xor
xor
aam
fs
push
xchg
push
cmc
or
or
mov
xor
pop
cmp
add
cmpb
mov
mov
dec
test
dec
idivb
cmp
jb
mov
enter
ja
popf
cmp
dec
ss
cmp
lahf
mov
mov
es
test
add
and
mov
xor
in
movsb
sub
pop
adc
bound
repz
sub
imul
aad
idivl
dec
xchg
jge
stos
add
test
inc
cs
mov
or
and
shrb
cld
push
cmpsb
mov
mov
adc
push
mov
xor
push
xchg
scas
sbb
xchg
scas
insl
mov
rolb
push
inc
je
inc
sarl
dec
and
and
mov
das
sbb
push
pop
mov
xor
je
cmp
xchg
stc
xor
mov
enter
in
das
or
push
lods
mov
add
test
jbe
lret
aad
icebp
xchg
aaa
mov
sbb
in
add
inc
xor
add
rolb
int3
mov
xor
jo
mov
mov
jns
jecxz
std
ret
rcr
hlt
xlat
xchg
fdivs
pop
xchg
fs
pop
jae
push
xchg
bound
and
xchg
or
outsl
dec
mov
cmp
adc
test
inc
inc
rcrl
testl
fildll
jmp
inc
inc
lcall
inc
sub
xchg
mov
fiadds
addl
faddl
mov
mov
leave
lret
or
jmp
insb
mov
mov
mov
push
sti
push
cmpb
hlt
dec
or
xor
frstor
shl
inc
dec
ljmp
add
stos
jns
xchg
jecxz
mov
push
add
inc
mov
dec
test
adc
lds
sar
xchg
jno
mov
sbb
in
mov
jle
out
jnp
inc
jmp
or
cmp
lods
and
stos
lahf
xchg
in
fidivs
jle
fcomp
in
mov
test
shll
and
sbbb
mov
les
loopne
push
sbb
jecxz
les
cmc
ljmp
pop
jns
push
lea
rcrb
dec
mov
adc
je
adc
call
add
iret
jmp
leave
imul
sbb
sbb
insl
pop
sub
xor
mov
ficoms
test
jns
mov
sub
pop
movsb
push
push
loope
or
mov
xor
loope
add
xlat
hlt
shll
mov
in
mov
stc
mov
aad
enter
scas
dec
add
xor
adc
cmp
insb
mov
push
outsb
cwtl
jo
mov
outsl
adc
sti
lods
adc
orb
addb
test
jb
icebp
dec
cmp
mov
jmp
sbb
gs
inc
push
jg
mov
mov
and
push
lcall
xor
mov
or
movsl
inc
jl
lretw
inc
fcmovnb
pop
outsb
pop
sbb
cld
loop
push
int
insl
dec
mov
xchg
mov
xchg
nop
and
test
sbb
lcall
push
cmp
or
adc
cmp
add
pop
imul
lcall
std
adc
sarb
cld
fistps
sahf
xor
lret
loop
inc
cwtl
inc
test
fisubrs
xor
sbb
sbb
push
shl
lcall
cmp
int
pop
and
sbb
mov
out
in
jmp
outsb
jbe
jnp
inc
mov
stos
aaa
mov
inc
fcmovnbe
orl
pusha
or
test
and
inc
lcall
mov
adc
inc
xorb
adc
push
sahf
push
outsl
dec
divb
insb
cmc
mov
aam
or
and
in
lea
popa
inc
sbb
push
mov
lret
add
fstps
fnstenv
insl
xor
fisubrs
pop
lds
cmc
add
inc
int3
pushf
dec
popa
insl
mov
xchg
mov
es
jae
push
adc
xor
pushf
fsubr
sbb
incb
shlb
add
fiadds
pop
mov
sbb
and
lahf
sbb
ljmp
into
fstpl
imul
push
push
leave
shrb
xor
jmp
in
addr16
lahf
and
lcall
xor
lret
jo
jo
dec
mov
and
sbb
stc
push
andl
dec
leave
mov
xor
insl
lret
outsb
test
das
rcll
sub
or
sbbl
cmp
push
sub
xlat
dec
mov
fdivrs
mov
loopne
cmpsb
hlt
test
loopne
add
out
in
xchg
cltd
sub
and
inc
mov
aaa
data16
insb
mov
mov
sub
dec
sbb
dec
adc
pop
jae
out
ss
cmp
add
push
icebp
in
push
jecxz
sbb
lds
das
stc
sbb
pop
sbb
cmp
xorb
enter
xchg
cmpsl
insb
mov
iret
cld
cwtl
imul
mov
imul
pop
xor
addl
cmpsb
pop
add
sbb
dec
scas
dec
push
icebp
push
jb
sbb
or
and
stc
shll
jae
rol
sti
or
push
pushf
mov
les
leave
adc
jb
test
pop
pop
pop
adc
and
mov
loope
mov
or
mov
movsb
dec
add
or
cs
fstl
insb
sbb
mov
mov
and
jne
or
aas
daa
push
std
stc
adc
cmpsb
int3
adc
jne
subb
cmc
out
outsl
jno
mov
fidivl
aas
aas
ss
outsb
push
int3
adc
mov
adc
push
inc
adc
mov
push
in
scas
pop
out
insb
jecxz
fwait
and
aaa
or
in
and
push
outsb
push
and
mov
mov
mov
stos
dec
lret
mov
hlt
imul
lock
lods
push
out
sub
or
loope
xchg
mov
std
pop
and
fs
and
and
inc
in
lods
cmp
cmp
faddl
pop
dec
fisubrs
mov
push
push
out
cs
cmpsb
imul
push
gs
and
lea
cmp
mov
cld
adc
gs
and
jg
leave
imul
cwtl
mov
shll
pop
push
lret
ret
jecxz
xor
push
test
xor
and
rol
jo
loope
jecxz
push
push
adc
jns
inc
fsubl
or
jb
vsubps
cld
or
sub
xchg
or
aad
mov
or
testl
mov
mov
fstl
lahf
lods
pop
sub
rorl
adc
leave
ss
ja
push
rclb
popa
fisttpll
sahf
add
and
shrb
addr16
pushf
jae
iret
mov
jmp
mov
inc
subb
out
out
cs
jmp
xchg
lret
popa
jb
daa
add
add
outsb
and
or
dec
cmp
push
scas
icebp
test
xor
inc
and
inc
shr
les
xchg
ret
dec
js
mov
jne
mov
std
cmp
enter
imul
or
fstpt
fistl
aad
dec
sub
push
mov
adc
adc
insb
daa
mov
leave
gs
jno
or
mov
cmp
push
arpl
arpl
loopne
push
pop
sub
sbb
mov
mov
bound
repz
rep
xor
adc
push
jnp
clc
push
push
pusha
sbb
xchg
out
pop
xchg
add
loop
cmp
and
out
jge
movsl
sahf
in
cld
pusha
cmp
idivl
jns
cs
jnp
and
jns
mov
in
sbb
cmp
xchg
repnz
xchg
xchg
xchg
push
push
addb
and
pop
xchg
ftst
sub
out
jl
mov
mov
add
lret
add
arpl
mov
loopne
adc
mov
dec
dec
aas
mov
decb
fwait
popl
mov
orw
adc
and
jae
xchg
push
loop
pop
inc
pinsrw
stos
pop
popf
sahf
xchg
cld
mov
dec
pop
dec
sbb
loopne
lret
dec
outsl
ret
out
shll
mov
addr16
out
and
xor
mov
sbb
cmp
scas
outsb
xchg
mov
imul
add
test
push
inc
jmp
fwait
popl
sub
call
data16
push
leave
pop
push
dec
andl
jo
mov
cltd
dec
push
dec
repz
jnp
pop
out
push
daa
inc
in
bound
add
hlt
sahf
xchg
rol
inc
or
cld
add
sbb
push
pop
xchg
in
sub
fneni(8087
popa
insl
xchg
aaa
and
mov
out
fidivl
fstps
js
mov
fwait
push
or
f2xm1
repz
mov
jl
js,pt
pop
mov
and
xchg
xor
sub
out
dec
dec
faddl
loopne
xchg
sub
lret
aas
into
xlat
xchg
mov
and
lds
imul
lahf
into
mov
xor
iret
icebp
fwait
mov
cmpsl
or
cs
adc
imul
adc
xchg
call
adc
iret
mov
aam
dec
movups
mov
popf
mov
dec
lea
dec
jl
sahf
in
test
jg
sub
or
push
xchg
sub
shrb
xchg
lods
leave
fwait
or
sub
mov
cmp
xchg
xor
std
push
sti
mov
jo
dec
rcr
jmp
mov
cld
mov
int3
movsb
ja
jb
push
pusha
jmp
add
jl
xchg
cld
and
hlt
aad
cli
jl
sub
mov
pop
jge
xor
mov
popf
push
das
mov
loopne
pop
mov
decl
push
sbb
das
out
jo
mov
push
cs
faddl
dec
mov
insl
jbe
ret
fsubrs
ja
sti
cmp
sub
lock
cmpsl
mov
or
jp
push
lods
test
je
add
loopne
test
sub
sub
pop
daa
pop
sub
pop
xchg
in
push
lea
push
in
add
jmp
sub
inc
test
fcompl
dec
push
sub
loopne
xchg
ficoms
dec
pop
bound
pop
call
stos
fnstenv
dec
dec
hlt
shll
addr16
ljmp
or
mov
scas
sbb
cmp
mov
nop
mov
repz
jg
iret
scas
push
cmp
pop
inc
dec
std
add
das
subl
repz
lock
ss
xor
inc
cmp
mov
loope
dec
dec
enter
in
imul
scas
or
stos
push
loopne
add
addb
ss
jmp
fsubr
xchg
dec
jno
mov
cmp
stc
clc
inc
push
jne
add
imul
mov
adc
inc
add
lds
pusha
in
inc
repnz
outsl
inc
pop
inc
jge
jbe
fimuls
sbb
jle
loop
xchg
imul
xchg
mov
xchg
sbb
rsqrtps
mov
aas
pop
mov
mov
jnp
adc
in
insl
mov
hlt
cmp
outsb
cmc
movsb
cltd
or
std
adc
in
jp
push
mov
mov
hlt
fstpl
pop
iret
js
shrl
pop
sub
into
cmpsb
aad
adc
sti
mov
fists
inc
sbb
add
jne
sub
xchg
les
call
roll
dec
dec
add
add
jne
push
shll
add
test
cmp
andl
dec
fistl
rclb
mov
mov
test
pop
push
adc
lret
pop
pop
pop
hlt
add
dec
lds
fsubl
and
xorl
xacquire
leave
mov
mov
push
add
lods
popf
mov
mov
and
ficomps
push
mov
push
outsl
iret
adc
sbb
ret
mov
pop
outsb
xor
inc
mov
jmp
inc
add
outsl
xchg
nop
add
divb
mov
cld
lcall
fnstsw
and
xchg
cld
xlat
fisttpl
out
mov
and
and
in
loope
push
xchg
addr16
mov
pop
cmp
jp
stc
inc
rcll
sub
xchg
xchg
cwtl
or
mov
push
xor
scas
in
mov
sbb
jne
pop
pop
sub
fnsetpm(287
sti
add
in
pop
loop
inc
jns
add
ja
scas
xchg
pop
int3
jns
mov
sbb
pop
push
js
push
and
out
repz
incl
bound
mov
dec
sarl
pop
xor
mov
out
inc
lcall
add
dec
cld
icebp
mov
push
sub
or
out
push
pop
pop
les
clts
outsl
fmull
push
sbb
sbb
cmc
cli
push
mov
lds
xor
fsubl
shl
mov
int3
mov
fucomi
jg
sub
jmp
mov
das
sbb
fadds
pop
jmp
repnz
pusha
ret
pop
scas
push
loop
and
pop
and
jp
push
pop
cmpl
jne
imul
and
lea
pop
pop
out
jbe
mov
aad
inc
cwtl
inc
mov
loop
or
dec
cmpsb
into
hlt
mov
lret
mov
mov
xchg
pop
cmpsb
jbe
xor
cmp
lret
std
orb
dec
movl
loop
in
jmp
lea
or
push
xchg
jp
cmpl
adc
xor
xchg
out
stos
push
arpl
push
xor
adc
lock
leave
movsb
sub
jns
push
ja
imul
sbb
fwait
divb
fucomp
mov
jmp
stc
movsl
addr16
cmpsl
into
adc
jae
out
mov
xchg
lcall
xchg
ljmp
lods
pushf
decb
test
les
xor
dec
sub
cwtl
lret
mov
pop
push
mov
or
cwtl
lods
pop
mov
sbb
add
push
xor
mov
mov
stc
lret
mov
jno
dec
movsb
bound
shrb
pop
mov
insl
call
sbb
cmp
sub
in
cmp
repz
outsl
mov
dec
test
nop
cs
mov
inc
lea
mov
dec
adcl
fnstsw
repnz
cs
sbbl
xor
lcall
shrb
das
fcoms
mov
mov
pop
les
sbb
add
daa
mov
sub
inc
pop
fnstcw
data16
into
int3
lea
pop
lods
pop
xchg
repz
or
imul
push
mov
gs
cld
out
aad
out
mov
mov
popf
mov
jns
xchg
or
pop
inc
js
rolb
ret
cmpsb
stc
loopne
or
scas
mov
xor
pop
hlt
mov
push
xor
jo
xor
xchg
mov
in
inc
popa
imul
pop
lods
in
cmp
aaa
loopne
jecxz
and
ljmp
nop
sahf
add
out
jns
inc
dec
mov
mov
pop
xor
cmpsl
sbb
mov
dec
mov
int
sbb
mov
out
adc
ss
aam
mov
sub
pusha
xchg
or
xchg
cmp
std
movsl
mov
add
mov
or
or
cs
mov
fnstsw
and
pop
pop
xor
dec
inc
out
mov
loop
cmp
xchg
xor
loop
out
fwait
aad
and
scas
cli
sub
jbe
xchg
xlat
bound
mov
enter
ficoml
dec
push
dec
gs
clc
stos
cs
cmp
sbb
dec
ret
in
adc
and
daa
cld
testl
xor
or
shlb
fstps
loope
dec
mov
negb
dec
push
test
push
rorb
je
mov
and
jne
xor
clc
xor
xor
pop
stos
stos
and
or
inc
xchg
pop
inc
pop
cli
sub
psubw
mov
jle
dec
sub
adc
push
lret
aas
mov
cltd
pop
fwait
cmp
jp
movsb
in
lret
loope
int
cmp
dec
sub
sbb
push
mov
addr16
nop
sub
jb
inc
loopne
add
xor
jbe
jo
mov
mov
mov
sub
add
test
shll
aaa
push
mov
jb
mov
adc
pop
or
aam
push
push
test
in
push
cmp
adc
pop
cmp
mov
inc
sub
jbe
mov
or
or
jne
into
jbe
add
andnps
pop
pop
push
ja
push
pop
pop
inc
or
in
mov
cwtl
cltd
inc
inc
sbb
xchg
cld
or
popf
or
cmp
dec
gs
sbb
cmp
dec
cmpsb
into
enter
fs
ret
lret
dec
jb
lea
push
arpl
pusha
lcall
inc
sbbb
mov
aas
pop
call
or
faddl
dec
mov
arpl
inc
orl
fsub
xchg
and
loopne
incl
aad
dec
fadds
dec
lods
mov
adc
add
ds
pop
adc
ret
adc
cmp
mov
sub
data16
jno
ljmp
pusha
lret
ss
add
test
pop
scas
js
add
or
dec
nop
push
in
loopne
lea
lods
into
inc
ss
push
adc
dec
outsb
push
add
dec
insb
add
jne
int
xor
rcll
sbb
into
lret
in
and
push
mov
das
push
sbb
outsl
sub
pop
dec
push
into
fistpl
or
jg
or
test
add
xchg
push
imul
xchg
xchg
fwait
push
or
push
es
or
push
clc
inc
sub
test
shlb
jno
xchg
filds
mov
pop
cmp
add
icebp
mov
negb
inc
and
test
or
test
rorl
pop
outsb
sahf
push
cli
xchg
hlt
in
xchg
jl,pt
jnp
and
push
enter
add
xlat
inc
and
addl
jb
mov
mov
fistpl
pop
cmp
mov
xor
das
and
mov
sub
hlt
dec
fisttps
clc
sbb
xor
jg
stc
jg
imul
lods
ljmp
mov
or
popf
out
test
pop
sbb
mov
adc
shll
xchg
jne
fwait
dec
mov
mov
or
fdivrs
out
aaa
and
mov
roll
cmpsl
mov
sub
add
popf
lods
and
push
pop
adc
dec
and
out
cmp
outsl
aam
xchg
out
sbb
dec
repz
fwait
add
pop
xor
push
inc
adc
sarb
push
mov
out
popf
jbe
or
sub
mov
sub
jmp
push
dec
cmpl
fiadds
out
jae
xor
cwtl
orb
cli
es
arpl
sub
imul
push
mov
mov
nop
mov
rorb
hlt
or
bound
jns
outsl
mov
out
mov
icebp
std
out
lock
inc
dec
mov
lret
and
mov
in
xchg
jge
sbb
ret
sbb
inc
mov
jno
lret
mov
arpl
mov
xor
dec
fbstp
fisubl
sbb
jo
mov
lds
dec
add
hlt
mov
call
pop
je
jl
dec
test
mov
lods
ja
pop
push
pop
fists
mov
push
sub
mov
pusha
js
test
dec
addl
scas
enter
fldl
in
pop
xor
cs
loopne
mov
movsl
push
mov
or
add
rcll
pop
push
xchg
aas
arpl
repz
ret
gs
fucom
jno
mov
iret
stos
mov
testl
jge
mov
push
jo
inc
sub
rcr
cli
iret
sahf
or
loope
sbb
cmp
les
addr16
ss
mov
mov
mov
lock
pop
pop
cmpsl
lds
cmp
scas
fs
xor
hlt
xchg
sar
mov
rol
movb
scas
xor
pop
fs
and
pop
shlb
pop
dec
in
gs
or
lods
mov
jp
pop
and
inc
enter
cwtl
cld
imul
fldl
cld
enter
nop
cmp
xchg
adc
sub
mov
mov
lea
fcomps
imul
jae
mov
jbe
add
sbb
sub
mov
fsub
and
inc
lahf
push
movsl
xchg
rorb
aaa
jb
add
jae
xor
int3
pop
adc
lods
int3
or
xor
xchg
out
movsb
sub
xchg
filds
bsr
pop
mov
ss
push
jnp
popf
in
movsl
jbe
lods
or
jb
adc
or
ret
inc
inc
push
mov
or
jecxz
sbb
js,pn
pusha
dec
sub
fcmove
or
adc
cmc
test
add
pop
lock
push
mov
negl
mov
inc
lods
sbb
push
hlt
mov
lods
sbb
adc
lcall
sub
dec
push
lods
sub
inc
dec
or
aaa
mov
adc
and
pop
jnp
les
bound
lea
cli
in
ret
sbb
jne
shll
xor
sub
adc
or
cmpsl
ret
ja
mov
subl
outsb
push
inc
jns
cwtl
in
scas
mov
pusha
inc
or
fdivrl
add
inc
cmp
decb
into
dec
data16
cmp
movb
dec
push
push
ret
mov
aad
sbbb
or
push
stos
addr16
out
mov
inc
and
sbbb
pop
negb
into
loope
sbbl
mov
cmp
add
std
test
lock
mov
ljmp
aaa
dec
add
daa
adc
xor
mov
inc
rorl
imul
cwtl
inc
push
mov
jge
jmp
xchg
push
cwtl
scas
cmp
mov
ret
mov
jae
sbb
fwait
jno
out
les
jns
and
jl
add
pushf
dec
pop
mulb
and
lcall
pop
loop
mov
iret
pusha
nop
cld
mov
in
inc
ja
inc
xlat
cmc
fiadds
cmpsl
cli
fnsave
enter
sub
xchg
inc
les
or
jp
sti
mov
call
xlat
pop
ljmp
idiv
adc
mov
sub
xor
lret
out
add
xor
lahf
out
jae
sbb
movsb
push
enter
divl
jnp
mov
fsubl
jmp
repnz
outsb
idiv
pop
adc
pop
fcom
adc
loope
cltd
loopne
fs
mov
mov
xchg
mov
and
popa
loope
aad
adc
pop
imull
xchg
loope
dec
imul
lds
cmp
fistl
sbb
aad
fadd
jmp
leave
cs
gs
ds
jl
adc
daa
adc
pop
imul
in
out
outsl
cmp
lods
xchg
inc
push
insl
out
icebp
lcall
sbb
aaa
sarl
jne
out
ljmp
scas
pop
test
cmpsl
cltd
js
adc
cmpsl
popa
jmp
inc
das
out
sbb
mov
add
enter
or
aam
outsb
das
xchg
shlb
and
js
push
jp
xlat
and
nop
in
mov
arpl
mov
loop
scas
sarl
jmp
fidivrs
dec
add
insl
int3
jno
dec
jmp
addr16
jecxz
mov
daa
out
int3
stc
pop
push
lcall
add
andl
sbb
sub
dec
fxtract
xor
mov
leave
pushl
mov
lds
jp
sahf
data16
inc
jecxz
mov
sbb
jmp
xlat
jno
xor
out
adc
jnp
add
push
lret
xor
ja
cmp
sbb
fimull
or
adc
out
lahf
movsl
mov
add
push
jnp
xor
aas
inc
or
fbstp
adc
sub
lds
int3
aam
shll
aaa
loope
cmp
fldl
push
mov
xchg
jb
cmpsl
inc
call
add
inc
cmp
or
inc
cmp
xor
and
jo
push
pop
jge
xor
jecxz
jo
les
movsb
mov
ret
xchg
fisubl
mov
push
fistl
push
repnz
pop
mov
pop
fld
adc
cwtl
outsl
js
repz
xchg
cmp
adc
sub
inc
ret
cli
pop
xor
or
jno
stc
cmpl
xor
xor
mov
sbb
imul
into
pop
dec
push
sub
loopne
inc
xchg
mov
movl
lods
jp
mov
in
jg
mov
xor
cmpsb
mov
stos
jns,pt
lds
mov
leave
movsb
and
xor
inc
dec
pop
addr16
repz
pop
push
sbb
loop
mov
das
pop
orl
lea
icebp
pop
test
or
inc
mov
inc
cmp
loope
clc
test
pop
push
push
gs
out
push
pop
in
int3
jne
insb
jbe
out
push
repz
dec
dec
pop
xchg
inc
mov
pop
lea
or
or
sbb
clc
xor
push
inc
mov
or
mov
jno
mov
outsl
sub
xchg
push
xchg
loop
outsb
sbb
jp
pop
sbb
xchg
out
xor
or
call
pop
out
nop
outsl
pop
cltd
out
sbb
test
inc
nop
lret
or
lahf
roll
std
icebp
mov
data16
jle
jae
nop
outsl
pop
outsl
cs
sar
inc
lea
sbb
mov
xchg
add
mov
xchg
mov
stos
and
dec
sbb
push
iret
push
xchg
inc
add
sbb
mov
xchg
scas
dec
imul
sub
scas
cmpsl
outsl
shll
jg
aad
pop
into
stos
cmp
sub
je
es
pop
push
out
roll
jo
push
xlat
jp
mov
iret
cmp
shll
sbb
push
lods
ds
pop
sub
mov
add
bound
mov
shll
sahf
sti
add
in
lcall
int
rcl
dec
test
pop
pop
in
stos
mov
mov
mov
push
bound
sub
or
test
jmp
mov
icebp
les
mov
movsl
fwait
cli
pop
insb
xchg
or
imul
and
cmp
xchg
or
xor
mov
sbb
ljmp
inc
xor
pop
xor
xor
push
movsl
jne
int3
int
test
in
jecxz
fwait
inc
lahf
xchg
jb
cmc
pop
xchg
dec
shl
mov
mov
mov
xor
rcl
mov
dec
pop
mov
roll
adc
push
sbb
jo
ret
test
push
outsl
lea
gs
and
push
std
jbe
aad
arpl
cmc
shl
repnz
cmp
insl
mov
jo
xchg
test
cli
jo
mov
xchg
mov
xlat
mov
add
dec
lock
jge
hlt
sub
stc
inc
int
adcb
sbb
or
mov
xlat
es
or
pop
lds
mov
je
mov
stos
popf
xchg
cwtl
and
cli
pushf
add
lcall
mov
dec
scas
cmp
sbb
mov
push
sub
adcl
lods
clc
adc
adc
lcall
cmpsb
jecxz
sbb
imul
aam
pop
faddl
pop
dec
jmp
les
jo
enter
or
and
pop
xchg
or
jmp
lods
out
fnstsw
sti
mov
xchg
fstl
xor
cmp
adc
lcall
rorl
cli
clc
add
negb
jge
pop
imul
popa
das
xchg
mov
call
jae
arpl
or
pop
test
inc
fdivr
inc
cli
imul
push
mov
mov
int3
popa
loop
dec
mov
in
hlt
ucomiss
ret
mov
push
jecxz
sbb
or
arpl
fimuls
test
dec
insl
adc
mov
or
test
dec
or
xor
xchg
lods
arpl
xor
lock
mov
add
xchg
pop
mov
outsl
scas
jp
mov
pop
push
xor
cmpsb
add
movsl
je
cmpsb
stc
pop
jp
sbbb
gs
xchg
jl
jg
sub
pop
daa
repz
and
mov
popf
sub
push
add
or
xor
and
sbb
sbb
mov
aam
rcrb
mov
mov
insb
addr16
and
sahf
in
mov
sbb
lret
fmulp
out
push
pop
sets
stos
pop
shlb
jmp
lahf
mov
push
sbb
or
push
leave
adc
mov
mov
mov
adc
loopne
subl
sub
pushf
dec
mov
and
loop
stos
xchg
out
push
mov
mov
insb
fucom
and
sbb
xchg
fsts
xor
scas
ds
fmuls
pushf
jb
and
adc
push
jmp
sbb
test
cmp
fisubrl
or
aaa
lcall
add
andnps
punpcklwd
push
daa
rolb
xchg
xchg
push
sbb
movsl
dec
or
adc
repnz
mov
dec
add
cmpsl
xchg
std
xor
xchg
iret
or
gs
repnz
pop
or
adcb
loope
push
jns
mov
adc
stc
pop
push
adc
and
cmp
hlt
popf
mov
push
and
mov
loope
rcrl
out
jno
sub
sbb
add
sbb
cmp
add
movsb
js
fstpl
addr16
cmp
push
sti
aaa
sbb
mov
mov
lock
xchg
mov
ret
xchg
jae
mov
notl
mov
cltd
adcl
inc
jbe
dec
frstor
mov
add
wbinvd
iret
out
jl
rep
lock
adc
cli
dec
adc
xor
repnz
les
loopne
push
stc
movsb
dec
cmp
aam
cmpsb
mov
rcll
lea
nop
and
dec
xor
loop
xchg
dec
popf
mov
xchg
insl
pop
mov
gs
mov
mov
inc
jns
mov
les
fisttpll
push
or
xor
pop
lods
es
iret
adc
je
stos
push
cmp
mov
inc
dec
xor
mov
pop
or
adc
and
cld
ret
jo
mov
push
sbb
icebp
pop
sbb
je
adc
dec
test
and
push
sbb
popf
bound
add
popl
mov
scas
pop
jne
add
out
loop
nop
lods
je
hlt
rorb
fs
sbb
or
mov
ret
dec
push
std
sbb
push
jbe
mov
cmp
loopne
outsb
lods
adc
inc
mov
or
movsl
fldenv
ja
roll
mov
repnz
add
push
popf
mov
sarb
stos
in
fiadds
ret
rcrb
leave
xchg
lret
mov
dec
sbb
ret
jmp
sub
insb
aaa
jnp
je
sub
xor
xchg
jle
out
mov
mov
ds
cmc
or
jmp
jp
iret
popa
movsb
xor
cmp
mov
sub
dec
repz
jp
arpl
inc
dec
jne
shlb
fdivr
nop
sbb
addr16
xlat
pop
subl
repnz
xor
into
sbb
add
adc
addr16
and
cli
test
loop
mov
xchg
cmp
int3
inc
dec
jnp
cmp
pop
aas
in
dec
lods
inc
fs
xchg
cmp
fimull
gs
cmpb
fwait
aam
xchg
lret
aad
ss
lds
in
sub
pop
mov
leave
and
pop
cmc
nop
lret
out
in
push
xchg
cmpl
movsl
shrl
cmp
dec
in
das
and
imul
fnstenv
or
inc
push
mov
and
xor
hlt
roll
test
mov
xchg
jb
les
enter
popf
gs
sub
mov
movsb
sub
adc
mov
push
rclb
jg
cmp
pop
dec
in
mov
dec
mov
inc
xor
movsb
mov
test
or
jo
push
or
or
xchg
cmpsl
add
sub
push
sub
loope
mov
adc
sahf
aas
and
out
or
stc
mov
aas
and
mov
push
bts
cmpsb
outsl
clc
sub
mov
or
popf
imul
pop
xchg
rorb
ds
gs
ss
testl
add
clc
pushl
mov
loopne,pn
xor
cs
adc
out
adc
negl
out
inc
lods
cwtl
inc
outsb
adc
xchg
inc
mov
add
add
jg
int
neg
sub
lret
xchg
sub
cli
push
jmp
ret
lret
xor
out
stos
cwtl
add
nop
or
push
popa
sub
jp
rorb
mov
jno
fisubrs
shl
jecxz
out
std
pop
pop
imul
xor
jae
xchg
cmpsb
mov
add
les
test
jp
decb
jne
sbb
nop
daa
jb
gs
test
push
push
and
dec
mov
xchg
mov
inc
jmp
inc
cmp
jmp
xchg
add
push
pop
js
xchg
and
lods
fimuls
push
dec
pop
dec
fcoml
aas
jnp
aad
stc
pop
cli
xchg
push
mov
add
xchg
adc
add
jp
mov
sarl
lock
mov
cltd
push
sub
cld
jecxz
xchg
aas
sti
sbb
fldenv
mov
mov
int
mov
insb
jbe
sub
dec
aaa
or
jle
xor
out
adc
mov
adc
cwtl
test
cltd
js
fwait
jbe
jecxz
andl
sahf
sbb
js
test
imul
jb
fnsetpm(287
in
cmc
push
daa
mov
test
arpl
xchg
call
mov
jne
pop
sub
call
push
xchg
cmp
cs
out
dec
push
xor
lock
push
mov
enter
mov
push
test
dec
sti
mov
sub
je
xchg
dec
dec
shlb
test
popf
push
mov
xchg
lds
popf
movsb
test
into
rcl
adc
cld
lahf
inc
pop
or
push
sub
jmp
mov
lahf
cltd
mov
cmpsl
test
outsb
cmpb
dec
lods
scas
clc
test
cltd
xlat
and
jecxz
push
hlt
test
cmp
mov
fcmovb
nop
cs
bound
cmp
addr16
push
punpcklbw
mov
mov
incl
push
dec
lret
out
in
push
mov
fdivl
cmp
mov
and
mov
sub
sub
roll
push
mov
pop
rcrb
sbb
pop
shll
imul
mov
fbstp
outsl
cmp
dec
aas
mov
negb
mov
adc
ja
mov
push
cmp
and
xor
lret
cmp
xchg
lcall
lods
lods
push
movsb
mov
subl
push
mov
cmpps
mov
out
inc
fdivrs
and
cmp
xchg
hlt
ret
cmp
pop
int3
testl
lahf
insb
sbb
mov
ret
lds
imul
dec
push
adc
dec
mov
aaa
lahf
popf
mov
js
inc
cwtl
adc
ficoms
push
pop
jno
call
cwtl
jo
jns,pn
mov
outsl
adc
sub
lret
and
xchg
lahf
movsb
out
jbe
imul
ljmp
jecxz
xlat
jns
aam
add
dec
test
arpl
imul
push
cli
jno
clc
mov
lds
je
shlb
out
es
inc
sbb
das
jnp
xchg
sahf
xchg
or
out
cmp
inc
sub
adc
or
mov
loopne
icebp
dec
sub
mov
pop
sbb
mov
sub
jge
sub
enter
mov
pop
imul
mov
lret
sub
cmp
mov
call
imulb
jno
fisubrs
lret
popa
roll
adc
shll
adc
jmp
fcomps
repnz
pop
aam
push
dec
dec
fdivl
cwtl
shrl
repnz
push
inc
gs
pop
mov
psubw
pop
mov
mov
js
repz
or
add
insb
inc
cld
cmpl
scas
mov
inc
and
pusha
jne
and
shrl
incb
subb
sub
movsl
ds
or
enter
mov
cmp
aad
out
in
push
inc
in
test
mov
out
das
dec
inc
call
stos
in
xor
push
les
dec
sbb
add
inc
aas
out
sub
inc
mov
jg
push
sub
xchg
iret
shrl
pop
pop
push
test
call
stc
jns
mov
mov
jp
jg
int3
mov
je
fstpt
inc
ljmp
push
jle
test
and
int
mov
adc
xchg
push
addr16
sub
lret
ljmp
adc
gs
or
push
jecxz
arpl
jmp
test
mov
inc
push
div
pop
dec
inc
mov
out
or
cmp
dec
filds
out
jmp
sbb
mov
in
mov
jns
lret
jmp
mov
notb
mov
inc
pushf
xchg
lea
xchg
shlb
je
cmp
outsl
sub
xor
sbb
mov
push
jne
pop
xchg
push
aaa
into
aam
cltd
lret
test
xchg
stos
push
lret
testl
push
push
subl
xchg
ret
in
popf
mov
fbstp
fdivrl
adc
pusha
lea
jecxz
scas
sbb
cmp
test
test
push
mov
scas
xchg
xchg
ss
ss
jo
add
leave
test
aaa
xor
iret
or
imulb
test
fidivrl
mov
ficoms
jge
leave
dec
repnz
mov
test
push
lds
sub
add
mov
jne
lahf
es
push
ret
xchg
sub
fsts
scas
mov
in
xor
daa
data16
xchg
cmpsl
or
and
loope
xchg
jns
dec
int
test
jns
inc
adc
into
push
fsubrl
lret
mov
jne
xchg
mov
aas
pusha
jle
lock
jne
enter
out
scas
in
jae
ss
fbld
ss
fwait
push
cmpb
repnz
cltd
xchg
idivl
shrl
test
sub
mov
mov
aaa
mov
inc
lods
add
aad
xchg
mov
loope
ret
aad
les
push
pusha
shll
scas
lods
inc
sbb
mov
std
sarb
mov
mov
sub
sbb
inc
add
imul
inc
icebp
xchg
xchg
addr16
lock
add
test
xor
jo
xor
out
loop,pt
bound
push
hlt
jb
sbbl
sti
sbb
push
or
mov
pop
push
lea
aad
arpl
je
or
call
pop
cmp
xchg
xchg
fstpt
xor
jecxz
jae
rorl
loop
xor
mov
jl
mov
loopne
or
lock
or
or
sub
sub
pop
repz
daa
das
ss
xlat
addr16
scas
push
movsb
cmp
or
cmp
jb
adc
xor
mov
adc
icebp
xor
lods
iret
jp
repnz
mov
stos
adc
decb
movsb
movsl
mov
inc
mov
dec
jg
dec
ffree
pop
shll
or
xchg
and
xchg
push
dec
sbb
arpl
sub
mov
inc
mov
es
test
add
popf
addr16
jle
shlb
pushf
test
inc
mov
cmp
sub
push
mov
jno
or
in
popa
pop
push
sub
movsl
aam
push
es
data16
add
test
out
js
stc
xchg
mov
xchg
nop
xor
jge
fidivs
into
icebp
pop
jg
clc
stc
push
test
jne
bound
daa
adc
sbb
add
popa
mov
dec
or
add
das
mov
into
mov
int
sub
jge
fst
loop
xchg
cmpsl
rcr
pop
mov
pushf
xor
test
or
add
pop
stos
jmp
pop
pop
js
pop
fimuls
mov
adc
mov
lods
push
scas
into
lods
inc
pushf
cld
mov
sbb
pop
shll
xor
jp
rcrb
scas
int3
sub
mov
fwait
jge
cmpl
pop
int
clc
sbb
lods
stc
dec
xchg
and
mov
sub
mov
cmp
aas
sbb
mov
pop
mov
mov
test
pop
inc
xchg
aam
adc
rorb
popa
std
dec
test
out
dec
iret
repz
fcomip
and
test
and
mov
xorl
xchg
mov
inc
jno
add
jne
dec
push
jae
sub
push
pop
cmp
fidivrl
outsl
cmp
jne
std
sbb
and
cmp
sbb
out
ret
pop
add
scas
stos
hlt
sbb
push
xchg
rcl
push
push
aam
and
in
push
test
dec
or
mov
push
out
sbb
dec
sbb
aas
adc
add
inc
fwait
ja
mov
pop
enter
push
jbe
pop
jns
sbb
popf
mov
sti
push
or
in
xchg
popf
stc
jg
repz
or
and
jp
mov
push
inc
cmp
test
mov
frstor
cli
or
repz
outsb
xchg
inc
nop
xor
add
out
cwtl
in
push
mov
mov
push
mov
mov
jg
out
inc
pop
xchg
sub
inc
andl
add
sub
sbb
jl
mulb
push
in
jp
imul
testb
push
push
inc
aas
ret
popf
inc
jmp
dec
nop
adc
out
mov
sbb
mov
repz
inc
mov
movsl
and
xlat
add
dec
outsb
push
pop
sbb
cwtl
and
inc
std
sub
ss
out
movb
loop
mov
mov
xor
mov
mov
lret
sahf
sub
repnz
sahf
mov
mov
fisttpl
jnp
ja
std
repz
inc
dec
rcrb
xchg
push
insb
mov
push
insb
pop
push
adc
imul
add
adc
push
pushaw
out
cmp
add
cmp
dec
mov
xchg
scas
das
test
lods
repnz
cwtl
or
popa
mov
shl
cld
cmpsb
cwtl
pop
mov
sub
xor
popa
jo
stc
pusha
mov
sub
xorb
in
sahf
jmp
icebp
lods
daa
iret
inc
and
pop
aad
cld
dec
daa
das
push
cmp
mov
inc
fucomi
sub
ds
shl
add
rolb
and
repnz
and
inc
xor
das
or
ret
lret
test
bound
lret
sbb
adc
adc
mov
cmpsl
test
jge
sub
notl
popf
nop
popa
sbb
fstpt
fwait
test
xchg
mov
testl
dec
int3
repz
add
cld
movsbl
fdivl
inc
add
ds
push
cld
ja
ds
jbe
shr
divl
sbb
inc
scas
mov
and
sub
test
test
ret
lcall
pop
xchg
hlt
sbb
repz
mov
mov
test
sbb
pushl
cld
ss
inc
mov
push
xchg
loop
dec
jb
xor
mov
and
imul
xchg
in
lcall
divb
mov
push
mov
push
cmp
fisubl
inc
popa
scas
jbe
fdivs
fildll
fsts
notb
arpl
xchg
push
mov
inc
add
sarl
in
fcompl
cmp
test
pop
inc
je
add
push
jnp
pop
mov
sub
mov
mov
add
cmp
les
push
mov
adc
fadds
test
sbb
lret
push
loop
movsb
dec
ja
sub
cmp
rcrb
pop
fiaddl
push
add
out
pop
dec
subb
mov
jnp
inc
std
loopne
jns
xor
lock
jge
sub
push
mov
jno
pushf
fsts
out
or
inc
fisubs
sub
or
in
push
push
cwtl
push
mov
or
into
imul
shl
cmp
cmp
xchg
insb
xchg
leave
les
xlat
aam
lods
faddl
mov
xchg
jbe
push
adc
mov
outsl
lds
adc
lods
lods
iret
cmp
mov
jne
push
jle
popa
xlat
mov
mov
and
sbb
adc
xor
nop
aam
imul
dec
popl
sub
xchg
fbstp
xchg
dec
fimuls
push
das
arpl
int3
lret
push
icebp
mov
sbb
stos
jb
aad
mov
xorb
insl
and
stos
mov
jae
inc
dec
mov
std
cmpsl
decl
stos
ja
or
js
inc
jg
dec
pop
xchg
aad
xchg
or
mov
ret
addps
lea
or
jl
lahf
xor
push
int
xchg
call
inc
outsb
ret
fstps
push
out
daa
movsb
adc
les
aaa
mov
jle
jne
popa
add
scas
test
and
inc
pop
aad
gs
mov
and
out
add
fidivl
cmp
xchg
js
repnz
lahf
adc
xchg
dec
pop
sub
cmp
test
arpl
push
inc
lret
jl
mov
cli
test
fldpi
push
sbbl
dec
mov
mov
inc
fsub
xchg
jg
enter
cld
xorb
pop
les
dec
xchg
mov
call
daa
out
add
sub
mov
sub
and
stos
cwtl
sub
mov
call
pop
aam
jl
repnz
cmc
ja
xor
arpl
fbld
mov
scas
nop
push
sub
xor
loopne
push
aas
push
inc
jmp
cmpsl
fsubl
sahf
aad
add
mov
fdivl
dec
mov
jmp
imul
jbe
scas
in
out
xchg
test
add
push
insl
jo
je
xor
stos
clc
ds
mov
mov
xchg
cld
jmp
fisubrs
adc
out
add
pop
or
sbb
pop
cmp
out
and
lret
push
push
or
mov
rolb
push
lret
aaa
dec
sub
pop
negb
and
in
cs
andl
sub
xchg
ljmp
out
roll
icebp
imul
ljmp
ret
std
mov
les
test
mov
daa
sbb
adc
push
push
pop
jb
popa
xchg
jl
add
cmpsl
add
arpl
mov
push
ficoml
rcrl
test
push
xchg
repnz
adc
jnp
mov
or
clc
fwait
mov
add
sti
out
add
fists
cmpl
lret
icebp
clc
scas
arpl
mov
mov
cltd
mov
ret
dec
leave
in
cwtl
sbb
fwait
or
cmpsl
jns
lret
pop
inc
push
ljmp
das
ljmp
push
jp
inc
int3
hlt
fisubs
scas
das
aad
jge
xchg
insl
cs
pop
punpckhwd
push
mov
adc
les
ja
mov
sahf
dec
jnp
adc
mov
ror
movsb
or
not
adc
jmp
stos
int
cmp
dec
scas
cwtl
pop
outsb
add
xchg
hlt
jge
jne
hlt
push
adc
imul
lds
push
mov
push
cwtl
pusha
jns
rcll
mov
mov
dec
mov
shlb
push
mov
insb
lock
jno
fsub
insl
add
imulb
mov
cmpsb
lods
mov
adc
inc
movsl
rorl
inc
std
push
imul
xor
inc
mov
decb
adc
icebp
jnp
mov
int
in
pop
imul
add
mov
push
es
jmp
cmp
push
es
in
call
je
mov
inc
sarb
bound
sbb
sbb
xchg
cmpsl
lcall
gs
pop
out
xchg
and
jge
fiaddl
sub
lods
cltd
fcmove
jae
xor
stos
hlt
rcll
mov
pop
inc
insl
fwait
cmp
xchg
sbb
mov
lock
push
lea
dec
sbb
cmpsb
inc
cmpsb
ljmp
push
sub
or
cmp
loope
add
jne
loopw
nop
mov
push
in
sbb
pop
or
hlt
imul
insb
nop
pusha
sahf
lea
push
mov
repz
frstor
fldcw
ljmp
mov
xorl
xchg
xchg
add
mov
sub
and
popa
pusha
das
callw
jmp
aaa
push
cmc
jnp
sahf
divl
test
sti
fisubrs
sahf
call
lods
es
mov
int
jnp
enter
jl
mov
dec
add
lock
fwait
sbb
fs
adc
push
addr16
test
adc
add
or
rorb
xchg
xchg
lcall
dec
mov
xchg
mov
fs
cwtl
dec
iret
rclb
in
jl
cmp
xchg
sahf
ret
pushf
xor
or
lods
gs
cmp
jecxz
fnsave
adc
and
shrl
jbe
loope
das
inc
outsl
add
test
mov
jo
jnp
inc
outsl
rclb
sbb
adcl
dec
mov
xchg
shl
adc
sti
sbb
adc
jne
mov
imul
ss
adc
rorb
cmpsl
fcmovbe
jns
fsubs
imul
sub
cmc
pusha
ja
and
and
stos
xor
add
add
mov
aam
cmp
loopne
outsb
dec
mov
out
scas
mov
jbe
mov
cmp
and
xchg
in
push
js
out
mov
shll
mov
mov
or
mov
int3
push
in
xor
int
inc
pushf
outsb
xlat
jl
lret
out
or
fadds
orl
outsb
das
outsl
and
or
push
gs
xor
das
roll
mov
pop
out
adc
pop
mov
cld
add
sub
pop
mov
push
dec
cmp
dec
sub
imul
push
enter
mov
mov
ja
inc
xor
ljmp
fwait
inc
sahf
xchg
repz
xor
sbb
add
push
arpl
cmp
pushf
pop
mov
je
ret
jo
add
sbb
inc
jmp
xchg
jae
sbb
dec
int3
mov
fildl
sbb
dec
mov
repz
neg
adc
adc
inc
sub
pushf
lods
ja
lods
daa
jg
jmp
jbe
dec
js
push
iret
pop
and
or
add
ds
out
mov
outsl
aam
cmp
adc
insl
cld
sbb
pop
adc
lock
xchg
inc
push
and
cmpsb
imul
fwait
sub
jo
push
shrl
out
sbb
add
in
sub
cli
lahf
dec
ret
mov
push
outsl
inc
imul
pop
sbb
mov
out
std
adc
in
push
jl
sub
insl
sub
jnp
insl
dec
fsubrs
int
push
sub
cmp
outsl
fs
xor
or
adc
jb
adc
dec
dec
fwait
pop
aas
sub
push
int
aaa
ficoms
in
mov
jo
xlat
mov
into
adc
pop
scas
jg
xchg
es
int
enter
mov
xor
inc
sub
mov
mov
stc
sub
loope
mov
enter
stc
add
cmp
push
aas
mov
jmp
clc
loop
inc
mov
inc
xor
in
adc
mov
mov
in
clc
pop
sbb
lahf
imul
jns
loopne
adc
add
inc
and
movsb
pop
mov
iret
jnp
xor
jo
ljmp
adc
mov
jle
xor
test
mov
jno
pop
sbb
sub
aad
cli
insb
test
loopne
sbb
push
dec
jecxz
fmul
sahf
jle
add
add
lods
repz
or
testl
inc
imull
xor
inc
add
rorl
sub
into
and
popf
dec
jmp
mov
adc
push
mov
aaa
pop
sub
lods
mov
cmp
mov
icebp
shl
xchg
mov
add
mov
xor
xor
mov
and
xchg
rcrl
mov
mov
jno
pushf
mov
lcall
addr16
movsb
adc
fsts
cmp
cli
xchg
test
cmp
mov
je
aaa
adc
jecxz
jmp
pop
loope
insl
daa
cmc
lods
aaa
pop
add
add
sub
pushf
pop
inc
test
fwait
scas
or
icebp
pop
push
mov
mov
popa
inc
test
xchg
repz
negb
lds
negb
mov
jg
add
ljmp
lock
push
insl
nop
dec
pop
andl
or
mov
in
adc
xorb
sti
inc
out
push
fcomip
mov
data16
aad
cmpsl
addb
or
sub
inc
mov
push
fistpll
cmp
lahf
movsl
jne
iret
mov
insb
or
adc
ljmp
and
jmp
rclb
out
jno
in
lds
inc
negl
ss
xor
paddsw
sbb
int3
aas
sti
and
out
xor
push
enter
js
popfw
sarb
cmpb
sbb
pop
orb
adc
lret
jmp
movsl
mov
mov
push
inc
push
add
shrb
lcall
pop
push
and
jecxz
jno
fstpt
sub
popa
arpl
mov
int
cmc
outsl
cmp
mov
and
cli
jo
lods
cs
in
mov
push
test
insl
xor
test
je
or
and
lds
mov
arpl
xor
sbb
inc
add
out
popf
pop
xor
xchg
xor
inc
jno
imul
test
sbb
fisubs
push
mov
ret
shr
into
pushf
movsl
cmp
les
xchg
hlt
je
xor
mov
sahf
sahf
scas
adcb
xchg
in
or
shrb
dec
mov
push
js
mov
out
mov
push
sbb
mov
icebp
adc
cmp
into
popa
into
popa
jne
push
ds
aam
int3
push
enter
bswap
cld
mov
or
cltd
or
fs
hlt
and
jae
cli
test
fcoml
inc
jb
cmp
outsl
sub
pop
dec
mov
jne
testl
pop
jp
mov
ds
add
xchg
and
xlat
jmp
or
cmc
ja
sbb
iret
loopne
mov
pop
push
fucomi
std
aam
mov
or
push
push
inc
lret
push
xchg
sbb
mov
xor
and
les
out
mov
dec
xor
std
jo
sbb
scas
cmp
mov
in
ss
pushf
add
jle
dec
jge
inc
idivb
cld
cwtl
mov
jmp
cltd
xlat
in
orb
dec
cmpl
cmp
ds
mov
dec
sbb
cld
pusha
pop
mov
xchg
add
mov
pop
jno
je
xlat
xlat
mov
mov
sub
mov
sbb
mov
popa
mov
pop
jae
jmp
cltd
cmp
and
mull
jo
xor
icebp
inc
gs
adc
and
lcall
sysexit
pushl
xchg
push
je
dec
xchg
arpl
call
jb
mov
adcb
add
stos
xchg
mov
xchg
movsl
repz
bound
mov
pop
aad
sbb
fs
fucom
leave
pop
jns
adc
sub
and
jnp
pop
sub
fwait
outsb
mov
rorl
cmpsb
jo
mov
inc
mov
sbb
or
sbb
push
jo
test
jl
and
mov
add
push
xchg
xlat
jbe
adc
push
dec
and
xchg
repnz
xorl
aas
push
add
adc
out
ja
fidivrs
pop
push
std
xchg
jl
sub
and
lods
jecxz
shlb
jae,pn
rdmsr
loope
test
xchg
dec
jl
ja
ja
insb
ud0
dec
pop
enter
jae
int3
lret
sub
dec
mov
xchg
leave
jae
fldcw
mov
push
sub
dec
xor
xchg
push
pop
stc
adc
add
jge
decl
aam
xor
shlb
int
sbb
mov
imul
push
sbb
rcl
lea
fwait
add
sub
pop
fists
fisubrs
sbb
sbb
test
and
adc
cmpsl
jno
packuswb
loop
js
hlt
fs
in
push
in
hlt
ljmp
outsl
xchg
sub
dec
or
mov
popf
inc
leave
clc
popw
dec
out
fstl
mov
push
xchg
add
ret
xchg
popa
push
xchg
mov
push
jo
cmp
cmp
ljmpw
lea
xchg
push
xor
popf
mov
add
jl
loopne
inc
mov
mov
pop
mov
popa
ret
ljmp
push
xchg
pop
pusha
das
xchg
mov
cmp
or
lods
std
mov
fbstp
add
std
add
xor
das
mov
mov
dec
js
cltd
pusha
jb
jg
rcrb
dec
jae
dec
jp
xor
mov
nop
sahf
in
jnp
movsl
jns
stos
jb
inc
orb
pop
mov
andb
iret
inc
sub
pop
push
add
add
icebp
setp
ficomps
push
outsl
cmp
mov
js
cltd
pop
cmpl
cmp
jb
pop
popa
push
xchg
out
pop
lods
mov
sbb
inc
jp
in
cmp
adc
push
dec
push
cmp
mov
and
xor
sub
dec
and
sub
int
iret
cmp
roll
rorl
push
les
mov
add
mov
push
push
scas
sbb
and
add
mov
xchg
or
adc
ret
add
pop
in
xchg
nop
fisubrs
fs
lret
popf
std
cwtl
mov
mov
sbb
xchg
out
dec
pop
adc
call
add
cmp
jp
push
cmp
mov
les
mov
or
jg
jmp
pop
push
das
mov
xchg
mov
mov
jno
gs
popf
roll
imul
lods
in
push
arpl
in
je
in
lret
or
push
mov
jp
dec
int3
push
out
xor
adc
out
push
xor
mov
jo
jp
lret
cmp
shr
xor
ljmp
sub
ja
out
mov
inc
adc
xchg
lock
mov
ss
inc
repnz
or
push
and
xchg
xorb
add
les
movsl
xlat
pushf
cmp
xor
mov
jb
xor
fimuls
pop
dec
insb
js
mov
pop
mov
lods
xchg
adc
xor
nop
lret
fadd
xchg
outsb
adc
les
xchg
mov
gs
scas
adcl
mov
mov
lcall
jl
mov
out
inc
pop
or
fcoml
sti
push
cmpb
push
scas
pop
lahf
in
scas
mov
hlt
push
and
jno
lea
sbb
fnstenv
cld
mov
movsl
lcall
hlt
fadd
add
sbb
loope
scas
sarl
in
push
pop
stos
in
mov
adc
and
inc
rol
imul
es
nop
push
xor
pop
shr
sbb
inc
sub
jne
cmpb
add
pop
stc
or
lods
std
adc
add
push
add
loop
sub
or
es
sahf
cmpsb
jp
push
ret
daa
andl
mov
cmp
mov
mov
jb
daa
pusha
mov
or
add
das
jg
jecxz
jl
insb
cmp
stos
mov
popa
cmpsb
sbb
sub
sbb
or
sarl
in
sbb
test
outsl
lods
out
add
imull
fiadds
imul
mov
div
arpl
gs
mov
sub
mov
dec
sub
mov
jae
and
mov
not
insb
pop
mov
test
repnz
pop
lahf
cwtl
dec
or
cmpb
mov
mov
jle
rorl
xlat
add
sub
out
mov
pusha
cmp
cmp
sbb
imul
xor
push
insb
sti
mov
ljmp
jl
pusha
inc
out
clc
cmp
aas
adc
es
cli
push
xor
mov
xchg
stc
loope
sbb
mov
mov
icebp
xchg
and
pop
mov
xor
fsubr
call
aad
insl
outsb
addr16
sub
xor
jp
push
push
cmp
aad
jns
into
jp
jns
inc
jb
rolb
iret
fcmovbe
pop
ds
adc
mov
and
cmp
mov
add
mov
popf
and
push
cmpsb
mov
cmp
test
roll
lea
pusha
test
or
mov
push
sarl
insl
or
dec
adc
std
inc
adc
xor
movsb
push
imul
push
ds
out
insl
outsb
mov
cltd
in
cltd
in
outsl
aaa
mov
mov
mov
sub
adcb
push
jne
data16
jge
pushf
imul
adc
push
or
push
mov
daa
adcl
jge
push
dec
cwtl
icebp
ret
lods
std
mov
dec
std
xorl
and
or
mov
adc
mov
lock
pop
in
rcr
push
push
fbld
test
outsl
xchg
lret
shlb
adc
sub
dec
mov
rclb
pop
std
rclb
push
pop
loop
add
mov
jb
clc
shll
push
mov
gs
cmp
adc
arpl
mov
and
mov
es
jb
mov
ljmp
imul
cli
xor
pop
popf
cmpsb
stos
jo
sbb
cli
inc
push
add
sbb
xchg
cmp
push
or
in
pop
dec
sbb
mov
push
sbb
pop
mov
sub
jo
movsl
push
aas
lcall
pusha
jb
and
jnp
imul
add
xchg
pop
dec
imul
inc
stos
jnp
bound
pop
mov
mov
inc
je
fldcw
mov
jae
push
dec
and
stos
cwtl
out
push
test
sub
das
sub
mov
mov
mov
sahf
adc
test
sahf
dec
test
dec
sub
cmp
mov
lea
jmp
inc
mov
jnp
inc
sbb
neg
test
and
xchg
push
mov
adc
or
pop
cltd
leave
pop
cmp
lods
pop
push
sbb
lock
stc
fists
fildll
mov
pop
dec
and
lods
movsb
mov
xchg
popa
mov
imul
sti
inc
js
adc
jno
and
outsb
fnstcw
jg
inc
push
or
pop
pop
sbb
push
aad
push
fsubl
fiadds
dec
imul
pop
rorb
or
dec
fmul
sti
data16
or
mov
aas
lock
cmovs
cmpsl
mov
out
leave
and
pop
xor
pop
push
lret
sub
inc
and
in
fwait
iret
sbb
lret
call
repz
mov
movsl
adc
add
push
sbb
scas
push
pop
pop
or
mov
ja
lea
nop
push
jb
pop
std
sub
int
cmp
pushl
bound
mov
out
mov
mov
je
jl
jp
idivb
jl
dec
cmpsl
jbe
popf
inc
xchg
cmp
xlat
dec
orl
pop
mov
or
lret
gs
leave
xlat
sbb
pop
mov
call
icebp
cmp
call
hlt
pop
adc
scas
mov
arpl
ret
jo
xchg
rcrl
jecxz
sbb
mov
mov
mov
push
outsl
repnz
scas
mov
push
and
rorb
idivb
mov
test
and
in
lret
mov
cmp
inc
push
shlb
xchg
inc
cli
lahf
gs
sarl
jns
cmpsl
add
insb
adc
icebp
or
jb
pushf
nop
punpcklbw
xor
jmp
inc
xor
das
xchg
sub
mov
data16
jno
fbld
sbb
xchg
inc
popa
push
mov
inc
andl
sbb
cmp
std
loope
lods
movsb
mov
stos
push
pop
rcll
jo
dec
ret
fldt
lcall
inc
mov
scas
cmc
loope
and
loopne
mov
test
in
jmp
sbb
adc
pop
loopne
popa
ud2
adc
stc
imul
aas
insl
pop
stos
lock
sub
mov
mov
mov
mov
fsubrs
xchg
cs
mov
inc
outsl
jb
pop
outsb
fidivl
add
out
sbb
stc
fs
mov
jmp
addr16
dec
aas
scas
hlt
lahf
mov
out
sub
inc
pop
popa
imul
jmp
mov
mov
pop
aam
outsb
js
push
jnp
sbb
lcall
fistps
xor
in
pop
inc
xchg
jp
cmpsb
je
cmpl
fs
pop
stos
cmp
inc
cmp
mov
sub
shlb
and
out
jae,pn
jbe
dec
push
aas
jno
push
jne
mov
es
out
xchg
add
mov
xor
pop
sbb
imul
cld
xchg
pusha
jle
aas
dec
mov
mov
out
rcll
adc
jmp
insb
jmp
in
xchg
repz
inc
stos
and
sti
mov
mov
out
sub
xchg
xchg
test
fistpl
lods
aam
in
or
daa
das
movsb
sti
fcmovb
jbe
fcoms
add
xor
pop
cmc
cs
xchg
sub
adc
inc
ljmp
mov
gs
pop
sub
mov
mov
push
faddl
dec
insl
sub
mov
add
jmp
ret
mov
shll
jb
mov
jg
or
into
inc
jns
inc
ret
rcll
test
mov
cmp
sbb
gs
sub
push
mov
aad
cmp
inc
mov
xor
lcall
popf
push
jge
mov
lret
rclb
add
movsb
mov
enter
xchg
jno
and
mov
add
xlat
adc
andl
mov
test
add
sub
ss
sti
insl
jle
adc
out
fstpl
push
cmpsb
mov
pop
mov
jecxz
mov
in
fwait
adcb
sti
mov
sbb
rcrb
frstor
fistps
outsl
mov
fistps
dec
test
dec
mov
pop
sbbl
inc
dec
jbe
xchg
test
mov
pop
dec
add
icebp
lods
and
or
push
adc
jns
lret
cmp
cli
jmp
push
sub
je
in
cmp
loopne
or
pop
aam
ljmp
sbb
cltd
in
pushf
stos
cmp
inc
out
lock
clc
mov
mov
fisubrl
push
mov
aam
jle
pop
push
in
lret
mov
pushf
aad
inc
push
int3
shrl
sbb
mov
outsb
or
and
lahf
mov
sahf
cld
and
outsl
loopne
sbb
mov
dec
cld
mov
loope
cli
mov
mov
bound
push
cmc
jae
outsb
imul
or
xor
fs
pop
ret
in
xchg
test
sub
addr16
mov
cwtl
push
rclb
jmp
dec
repnz
sub
pop
xchg
ja
in
mov
in
mov
loope
mov
xchg
jb
icebp
add
dec
adc
lods
scas
push
insl
test
mov
fiadds
and
iret
out
push
sbb
inc
loopne
jno
mov
sbb
and
iret
dec
ljmp
or
subb
cmp
or
cs
dec
scas
jl
cmp
fsubrs
lock
aad
xchg
hlt
dec
or
sub
dec
jbe
mov
in
test
or
movsl
jnp
push
ds
sbb
jg
adc
jae
sbb
sbb
adc
popa
mulb
jo
jmp
push
add
fldcw
lret
test
dec
ss
test
mov
mov
sbb
mov
push
mov
jecxz
fwait
into
or
fwait
mov
adc
cli
xor
sahf
sahf
sbb
std
and
movsb
jo
jbe
mov
pop
mov
scas
inc
iret
insl
pmovmskb
cmpb
fsubl
mov
pop
stos
and
cwtl
xchg
mov
hlt
push
xchg
fs
and
int3
jle
sub
and
xchg
popf
aas
out
addr16
imul
insb
dec
xchg
lock
sbbb
aam
es
cmp
int
sti
cmp
mov
pop
test
pop
in
dec
rol
add
imul
jmp
pusha
push
out
out
cmpsl
push
test
enter
add
adc
jg
filds
js
jb
rcll
or
pop
cmp
outsb
mov
dec
xchg
lea
inc
shrl
imul
out
lock
aas
push
jnp
cmp
adcb
fists
out
es
push
mov
inc
ret
fsubrp
lcall
and
mov
sbbl
adc
call
gs
sub
je
jns
mov
sbbb
lahf
and
sbb
cltd
fisttpll
push
cmp
xchg
cs
pop
mov
aad
stc
inc
and
adc
inc
xor
add
pop
and
inc
lods
test
das
push
into
push
out
mov
cmovns
cmp
dec
mov
and
xor
cmp
push
test
aaa
sarb
test
je
cmpsl
adc
int
out
cmp
lret
hlt
aam
push
in
mull
fucomi
pusha
loopne
adc
jne
mov
scas
jmp
lret
xor
cmp
mov
sub
pop
stc
imul
mov
xchg
xlat
inc
push
or
fsts
mov
stc
ficompl
dec
pushf
std
push
sub
frstor
mov
and
icebp
fdivrp
cmpb
rcll
and
movsl
sub
mov
pop
and
mov
inc
and
test
push
sub
inc
cmc
add
cltd
xchg
jmp
call
lcall
inc
mov
pop
jo
push
cmp
jbe
pop
not
sti
add
pop
or
mov
cmc
inc
xor
push
inc
outsb
outsb
dec
movsl
idivb
dec
and
push
cmp
ja
dec
aas
dec
repz
xor
xor
jecxz
xchg
scas
inc
fisttps
mov
adc
mov
in
fadds
stos
movsb
pop
stc
loope
jne
jb
popf
sub
pop
xchg
mov
sbb
mov
fst
jae
lock
inc
mov
mov
cmp
xchg
fcom
gs
jb
and
fs
mov
mov
and
aas
dec
dec
lahf
sbb
test
or
sub
leave
insb
hlt
icebp
fisubrs
adc
mov
and
xchg
loope
or
inc
out
idivl
mov
xchg
aam
scas
dec
outsb
andb
inc
ret
jae
jns
lret
and
add
push
in
orb
add
mov
pop
stos
fcos
popa
fbstp
push
and
mov
js
sarl
data16
mov
ret
repnz
sub
or
lret
sbb
push
notl
outsl
mov
xlat
adc
stos
inc
cmp
lret
je
cld
leave
ja
push
sub
push
push
out
fnsave
ret
stos
mov
rclb
add
sbbl
cmp
jecxz
test
cmp
call
mov
imul
adc
cmc
xchg
insl
dec
call
push
cmp
xchg
pusha
mov
pop
shll
in
pop
dec
rorb
cmc
jns
adc
imul
pushf
adc
fidivs
inc
adc
out
mov
in
lds
push
test
popa
loope
data16
pop
scas
sbb
ja
out
sbb
push
sbb
cmp
add
dec
repz
in
clc
test
arpl
xor
mov
cld
cmpsl
gs
fadds
loopne
pop
stc
inc
js
add
scas
cmpsb
aam
push
push
xchg
fldl
add
les
pop
or
out
push
sub
shr
pop
mov
push
adc
int
pushf
adc
mov
stc
inc
movsl
mov
mov
xchg
push
fisubs
insl
cmp
rcl
rorl
leave
cs
lock
or
mov
mov
das
lea
aam
and
push
outsb
and
xor
and
stos
mov
call
pop
mov
or
xchg
sbbl
jns
xchg
inc
into
jb
or
mov
mov
shlb
insl
andl
and
dec
stc
mov
les
fcomps
push
or
dec
add
dec
out
test
xchg
fwait
loop
jecxz
inc
clc
in
xchg
es
adcl
inc
int3
mov
pop
stc
push
cmc
pop
mov
push
lods
pop
rolb
mov
mov
fadd
inc
in
jge
fs
test
dec
test
mov
mov
inc
hlt
sti
lock
pushl
lret
rcrl
add
or
dec
hlt
es
aaa
and
lock
cmp
in
xor
jg
dec
pushf
xchg
enter
pop
mov
cwtl
test
xchg
jae
cmp
dec
jg
mov
push
inc
out
fisubl
das
sub
sbb
mov
fldenv
imul
and
and
inc
stc
aas
or
in
int
je
xor
mov
mov
xor
mov
adc
int3
imul
popf
lret
push
xchg
xor
pop
ds
sub
testb
repz
imul
cmpsl
ja
out
pop
sbb
mov
xchg
adc
ds
hlt
ret
shlb
hlt
xchg
cli
lods
out
sbb
enter
mov
mov
movsl
out
rcrl
fwait
xlat
adc
adc
jne
dec
push
sbb
nop
mov
rcrl
and
jp
pop
mov
mov
in
ret
sub
mov
sub
inc
mov
pop
xor
jg
lock
xor
push
icebp
mov
pop
std
and
les
pop
push
adc
or
les
test
push
js
scas
jg
insl
lods
stos
xlat
push
sbb
mov
sahf
jb
jg
xchg
test
sub
gs
push
xor
and
mov
sub
sub
pop
movsb
pop
jge
jnp
xchg
addb
ja
test
movl
cltd
lahf
and
add
in
mov
lock
pop
insl
insl
or
mov
jle
sbb
add
jo
add
cmp
cltd
out
test
push
loopne
adc
sub
lods
cli
std
pushf
pushf
inc
out
rorb
sbb
adc
jb
xchg
inc
dec
out
add
jecxz
sub
inc
xchg
push
bnd
and
dec
sahf
jmp
inc
xor
or
rol
jnp
adc
xchg
call
sub
cmpsb
push
adc
les
or
push
out
add
lods
jge
loopne
lret
lret
jecxz
fisttpll
jbe
into
test
jmp
cld
lods
mov
sub
in
cli
push
scas
cmp
inc
roll
leavew
in
repnz
jp
or
pusha
in
and
xchg
fs
add
cld
adc
repz
fldt
inc
stc
dec
mov
adc
and
mov
shll
sbb
fs
pop
jmp
jb
ds
ret
mov
push
js
mov
scas
push
ja
repnz
pop
dec
mov
mov
push
pop
push
rcll
jnp
dec
jmp
mov
inc
pop
jo
or
fs
pop
mov
or
pop
popf
pop
ja
jns
imul
popf
jb
inc
mov
push
sti
mov
lods
jle
cmp
les
mov
loope
push
push
in
cmp
jno
mov
xchg
and
jl
xchg
cmp
je
scas
fucomi
call
lock
addb
push
cmp
shll
jbe
imul
xchg
rolb
js
hlt
mov
cmp
cmp
sarb
mov
mov
mov
ret
jg
adc
dec
ret
sti
mov
mov
inc
push
outsb
in
je
gs
pop
imul
push
out
push
xor
pop
imul
and
push
xor
add
sub
dec
inc
shll
loopne
and
or
int
dec
fldenv
jns
mov
mov
sub
mov
lcall
inc
jne
ret
mov
push
into
test
es
repz
in
cmpsl
test
and
adc
shrb
cmc
je
ret
loope
mov
andl
scas
pop
inc
cmpsl
stos
fcompl
ror
pop
sbb
mov
dec
fidivl
aas
dec
jl
pop
or
and
lret
outsb
jle
mov
ljmp
lods
inc
loope
sub
sub
fisubrs
xlat
aad
pop
pop
jae
loope
sbb
add
sti
addl
in
notl
addl
ss
in
arpl
jecxz
repz
add
nop
insb
inc
leave
fs
jbe
jmp
lods
xchg
addr16
lret
and
mov
pop
pop
fadd
inc
add
js
xor
push
stos
xor
push
lods
aas
jmp
rcl
cmp
jg
xor
dec
fcoml
or
adc
ljmp
sbb
addr16
inc
lock
iret
fadds
imul
sbb
jnp
mov
add
jl
sbb
lods
inc
or
mov
cld
pop
sbb
inc
fistl
pop
loopne
jle
or
mov
out
pop
xchg
jae
sahf
fwait
mov
aad
pop
jnp
lds
arpl
test
pop
dec
scas
stos
movsl
cs
pop
mull
lret
push
loope
push
jb
sub
cmpl
arpl
jns
lods
mov
scas
mov
loope
dec
xchg
shll
shll
arpl
or
xchg
jmp
inc
adc
adc
scas
lahf
aam
cmpsb
adc
dec
mov
fstpt
int
or
or
pop
mov
leave
mov
xchg
xchg
call
scas
repz
mov
movsl
mov
ret
push
mov
fldcw
sub
sbb
popa
pop
and
pop
lret
dec
lret
fcmovne
test
fistps
popa
test
jmp
aad
and
push
movsb
popa
mov
xchg
in
dec
das
xchg
mov
adc
ljmp
dec
push
jns
stc
pop
xchg
imul
xchg
filds
icebp
cmc
and
nop
adc
mov
sbb
jne
andl
hlt
and
cwtl
jae
jmp
xchg
adc
pop
sbb
xchg
rolb
xor
int3
in
out
add
xor
sub
xchg
or
mov
insl
inc
stos
inc
xchg
adcl
addr16
mov
sbbb
pop
push
je
pop
pop
mov
cli
cld
jnp,pt
xchg
xchg
insb
jmp
call
popa
mov
pushl
outsl
notl
mov
jp
into
movsb
out
xor
push
loope
cld
inc
inc
pushf
cli
mov
xchg
adc
iret
inc
and
xor
mov
or
orb
fadds
and
daa
shl
dec
jnp
jo
in
addl
mov
sti
push
xchg
out
out
pushf
dec
orb
lods
dec
mov
mov
stc
sbb
xchg
adc
add
divb
mov
stos
push
popa
out
sbb
xchg
call
outsb
movsb
push
out
xor
cld
lret
ja
push
dec
sub
mov
lods
xchg
sub
aaa
push
in
pop
add
ss
out
cwtl
outsb
inc
shlb
or
in
lcall
mov
cmp
and
sub
ret
xor
and
push
xlat
mov
xchg
lock
push
push
cmp
and
aad
pop
cwtl
inc
out
mov
test
nop
pop
out
es
cmpxchg
jnp
pop
xchg
cmp
movsb
add
cli
pop
jae
pop
shll
aaa
or
sub
mov
xchg
jle
shl
jl
repnz
push
mov
pop
cmpsl
xor
lcall
or
ror
cmc
cli
or
pop
loopne
ds
mov
pop
mov
mov
ljmp
orb
test
push
addr16
arpl
das
xor
jne
push
dec
sub
divl
dec
stos
out
fs
outsb
fildl
test
mov
xor
push
pop
loope
lret
cmc
ror
or
mov
adc
xor
mov
fistpl
mov
cli
leave
xor
ds
pusha
adc
adc
jp
repz
and
adc
mov
pop
xor
mov
mov
dec
sti
aad
push
test
movsl
inc
pop
lcall
popa
into
es
push
and
adc
mov
jg
push
ficoml
push
dec
mov
pop
dec
cmpsl
stos
mov
inc
iret
fadds
mulb
clc
and
sbb
inc
push
sbbl
idivb
lods
pop
xor
insl
push
and
jg
inc
xor
mov
dec
xor
fdivrs
pop
adc
sbb
or
jae
mov
jno
ret
fisttpl
inc
sbbb
sbb
mov
into
mov
imul
mov
push
iret
pushf
mov
sbb
out
stc
push
cwtl
shll
jmp
xorl
stos
clc
mov
push
iret
cmp
or
pushf
push
popa
and
push
sub
jns,pt
out
push
lahf
push
mov
loopne
arpl
es
repz
or
pop
push
test
mov
dec
jne
cld
in
fstpl
getsec
xlat
sub
ret
aad
jle
sar
cltd
iret
adc
addl
inc
fs
push
lods
push
add
pop
pop
or
test
into
mov
cmpsb
mov
ret
jns
nop
jge
lea
sbb
dec
sbb
inc
pop
mov
int3
pop
mov
and
ds
mov
xorb
xor
rcll
imul
adc
mov
call
pop
mov
arpl
mov
push
enter
sbb
movsb
enter
sub
xor
inc
out
jno
push
jp
mov
pop
lahf
popf
fstpt
and
cmp
imul
push
loopne
imul
in
adc
jo
test
mov
cmp
mov
mov
cs
jae
js
mov
xor
mov
mov
xchg
out
push
adc
mov
and
xchg
cmpsl
xchg
mov
subl
dec
testb
add
lods
dec
cli
push
sbb
pop
mov
add
xor
imul
and
and
cs
lods
fsubl
je
fdivrs
aad
dec
dec
push
xchg
repz
add
xlat
fldenv
add
inc
daa
imul
fidivl
repnz
jp
std
imul
lcall
es
mov
mov
xorb
xchg
jbe
cmpsl
pop
fldpi
pop
les
sbb
cmp
cmp
adc
sahf
lock
jbe
daa
stos
dec
mov
rcrl
cwtl
add
mov
in
cmp
lock
jg
push
pop
or
cwtl
xor
dec
fs
test
cmp
cltd
lret
dec
rolb
pop
cli
mov
aad
rcrb
xor
test
inc
addr16
aaa
push
test
mov
mov
or
lock
cmp
jne
pop
mov
je
jg
and
jnp
inc
dec
cmp
popf
pop
lret
push
sub
mov
shr
dec
cmpsb
js
clc
das
iret
mov
pop
mov
pusha
gs
and
mov
adc
mov
lahf
push
dec
lcall
jmp
adc
mov
pop
lahf
in
out
push
xlat
pop
xor
ret
xor
pusha
dec
addl
data16
fdivrs
push
fwait
push
rcl
mov
pop
js
or
test
mov
ret
mov
push
pop
jg
jle
cld
lcall
mov
mov
roll
insb
push
fs
shlb
sbb
movsb
jno
mov
xchg
xchg
jp
pop
push
push
mov
pushf
add
das
mov
popf
in
dec
imul
jle
outsb
jecxz
ds
out
mov
or
pop
sub
push
lds
and
sbb
mov
scas
mov
sub
adcl
xchg
pusha
enter
dec
sub
out
xor
test
rorl
icebp
inc
and
mov
xor
aad
push
les
ror
dec
sbb
ss
arpl
les
stos
dec
jb
add
lret
fistpl
daa
sub
push
lds
test
idivb
sbb
or
and
sub
jmp
imulb
xchg
pop
sub
popf
ljmp
fldcw
into
imul
mov
jl
xlat
or
push
arpl
add
xor
leave
xor
jp
call
rclb
xchg
push
xor
mov
inc
or
pusha
std
je
sub
ficoms
mov
fdivr
jo
fstpt
sbb
iret
fcmovnu
bound
push
sarl
aaa
push
sbb
and
es
jmp
loopne
ljmp
jae
inc
scas
pop
sub
inc
das
xor
lods
mov
fmull
roll
pop
test
in
out
repz
mov
mov
rcll
ror
add
sub
cmp
jbe
adc
sub
inc
aam
clc
mov
push
repnz
icebp
in
mov
dec
scas
add
pop
popf
add
mov
mov
lahf
push
ret
push
push
cs
xchg
ja
mov
jge
sbb
xor
cmp
push
cltd
test
dec
dec
mov
aaa
mov
jno
js
push
sub
mov
jmp
mov
pop
cmp
ja
int3
sarl
pop
inc
fstp
aad
jns
pop
and
xor
jecxz
mov
das
and
adc
sbb
test
mov
loopne
mov
out
xchg
outsl
mov
test
adc
inc
idivb
test
fnstenv
lret
sahf
inc
xor
push
pusha
ror
test
fdivr
xor
pop
stos
xchg
add
sub
fs
outsb
sbb
cmp
pop
nop
movsl
jmp
adc
cmp
mov
and
add
cmpsl
and
nop
lea
ss
mov
add
insl
dec
into
leave
jp
cmpsb
sbb
mov
mov
in
jmp
addr16
lcall
mov
fstps
loope
sti
rorb
or
mov
inc
mov
mov
push
leave
pop
jmp
iret
orb
fistpl
out
je
gs
mov
xchg
imull
arpl
cltd
cmp
add
arpl
cmp
js
enter
xchg
repnz
ljmp
xorl
test
fucomp
xor
mov
in
jg
bound
xchg
cmpsb
or
add
cli
subb
std
repz
popa
leave
add
shl
stos
and
in
jg
adc
iret
xorl
lods
in
or
cmp
leave
movsb
mov
mov
dec
pop
ret
int
sarl
sbb
test
mov
cmp
scas
imul
shrl
stc
stc
int
das
push
das
cmp
inc
or
aas
out
lahf
lds
fwait
ucomiss
out
in
mov
jle
enter
fsubs
testl
add
adc
and
aam
outsb
cmp
xchg
jnp
jnp
roll
push
movsb
int3
test
imul
sbb
pop
xchg
lea
int3
rol
mov
mov
jne
xchg
lods
xchg
cmpsb
mov
test
stos
or
scas
insl
out
sbb
jmp
cmpsb
adc
adc
dec
lcall
sbb
test
ds
pop
orb
pop
mov
out
addb
insl
mov
test
add
insb
xchg
mov
sbb
pop
pop
mov
jo
icebp
jae
mov
cmp
cmp
hlt
mov
stc
mov
shlb
jp
xchg
xor
fdivl
dec
or
lahf
int3
push
add
jno
jns
mov
or
pushf
aas
les
test
cwtl
push
push
jg
or
cmp
gs
in
xor
leave
or
push
fnstcw
pop
lcall
out
sbb
jge
mov
jge
push
cmp
outsl
mov
jo
mov
xor
pop
leave
repz
xchg
bound
xchg
add
jne
test
cmpsb
incb
in
loope
cli
jnp
and
cmpsb
out
fsub
and
mov
push
cs
in
jecxz
pop
cmp
fwait
cmpsl
lock
in
lcall
xchg
ja
stos
test
and
jnp
mov
push
imul
push
test
int
dec
call
dec
ljmp
push
push
out
fwait
inc
jmp
leave
shlb
es
inc
dec
jmp
or
and
mov
push
movsb
leave
adc
cwtl
mov
jbe
add
push
fidivrl
testb
add
icebp
cld
enter
popa
scas
je
mov
repz
pushf
es
xchg
subb
psadbw
xchg
inc
ret
push
adc
call
test
testb
inc
pushf
movsl
pop
jne
roll
adcl
mov
inc
scas
mov
push
adcb
leave
inc
testb
lods
or
or
loop
or
push
test
xchg
and
lahf
out
shl
and
out
xchg
push
jp
js
adc
aam
inc
insb
lret
or
xor
scas
or
jns
mov
sbb
push
sub
pop
aas
push
loope
sti
push
sti
push
cltd
sub
adc
sbb
cld
xchg
pop
xchg
adc
mov
aad
cmpsl
pop
jmp
pop
aas
mov
lods
je
fimuls
pop
sub
mov
pop
pop
sub
xchg
inc
pop
fcmovbe
add
outsl
xchg
xor
mov
shrb
test
push
das
imul
mov
and
movsl
or
mov
roll
sub
lods
imull
add
popf
jbe
mov
jbe
and
cmc
sti
add
or
in
mov
test
std
push
insl
mov
xchg
jnp
in
add
and
test
cld
fsubs
xor
mov
sub
dec
sbb
stc
fisttpl
push
sub
push
mov
flds
add
mov
aam
insb
in
jno
mov
pusha
fsubl
jno
ret
jo
in
scas
add
insb
jnp
jbe
in
cmp
xchg
lcall
inc
inc
push
and
xchg
test
outsl
sbbb
mov
fwait
mov
popf
lahf
inc
insl
insb
call
mov
sub
fnop
pop
jnp
pop
dec
mov
dec
sti
repnz
lahf
adc
arpl
push
pop
sub
mov
cmp
adc
mov
fs
pop
pop
mov
xor
sbb
movsl
dec
xchg
mov
sub
push
jb
pop
movsb
subl
mov
and
in
adc
pop
test
pop
dec
test
mov
inc
jne
cld
sbb
lret
stos
dec
pop
inc
mov
xor
sbb
mov
dec
mov
inc
enter
cmp
cmp
xchg
dec
js
fnsave
sub
xchg
sub
adc
jbe
cwtl
out
xchg
jne
fidivrl
aad
icebp
lock
orb
cld
sub
popa
xlat
mov
in
xchg
cmc
aas
enter
mov
lcall
dec
jmp
inc
add
in
leave
pop
cwtl
sub
cmc
out
fstps
pop
mul
jne
add
sbb
mov
push
loopne
mov
psrld
xor
dec
adc
sahf
outsb
xchg
call
dec
lret
xor
or
and
dec
incb
mov
cmpb
xor
xor
faddl
sub
push
call
ljmp
dec
icebp
xor
mov
shl
mov
adcl
adc
and
push
sbb
jl
dec
test
outsb
movsb
cs
lock
adc
addps
sub
cmp
enter
cmp
popf
inc
outsb
or
lcall
ljmp
or
xrelease
lret
iret
pop
mov
pop
and
aam
xchg
mov
sbb
dec
dec
jo
sub
or
in
arpl
inc
cli
repz
out
nop
fwait
and
adc
cmc
cmp
add
mov
and
inc
in
xchg
out
jo
xchg
lret
stc
push
jp
out
xchg
mov
call
fidivs
nop
or
into
or
test
push
xchg
push
dec
cmp
int3
lcall
dec
in
out
out
ss
jecxz
xor
or
out
push
push
filds
in
bnd
xchg
bound
push
lods
clc
dec
loope
stc
lret
cmp
cwtl
dec
add
arpl
inc
das
mov
loop
adc
jp
cmp
hlt
ljmp
push
push
int
cmpsb
stos
push
xchg
mov
ss
out
lahf
or
dec
and
fildl
xchg
xchg
add
ds
add
repnz
cmp
loopne
dec
enter
adc
test
fadds
inc
cmp
loopne
dec
je
daa
fisttpl
and
mov
cld
gs
in
fnstcw
out
jp
cmpsl
ss
jbe
adc
pusha
add
adc
rcll
lods
sub
das
pop
pop
xacquire
and
mov
mov
cli
lret
sbb
bound
push
add
jb
jle
sub
lea
aas
and
insb
cmp
test
mov
xchg
adc
es
arpl
stc
or
pop
mov
inc
jge
shrb
push
adc
into
ficoml
xchg
cld
sbb
adc
popf
test
jae
les
sbb
add
movsb
xor
or
adc
cmp
lea
and
xor
nop
pusha
cmpsb
into
enter
push
mov
jg
push
loopne
add
lret
call
sbb
enter
test
cmp
imul
repnz
sti
test
std
sbbl
mov
out
push
into
xchg
mov
cmpl
add
stc
cs
mov
add
xchg
mov
cwtl
les
aas
sbb
repz
xor
test
ja
nop
fwait
mov
jp
and
xor
fdecstp
adc
xlat
orl
cltd
data16
and
pusha
ret
popa
ret
jl
pusha
jo
out
mov
loopne
pushf
das
mov
pusha
inc
test
pop
stc
add
cmpsb
and
mov
nop
dec
cmp
adc
js
cltd
mov
loopne
out
fsubrs
lcall
roll
rcrb
aas
iret
ss
aaa
cmp
jge
and
jb
jg
mov
stos
jnp
sbb
xor
push
jbe
sbb
xchg
loope
rorb
pop
mov
les
and
jl
mov
shrl
stc
nop
aas
aam
lcall
adc
push
ljmp
mov
testl
cmp
mov
ds
cmp
cmp
pusha
shll
fbstp
and
and
dec
or
inc
mov
inc
decl
sub
in
cld
xchg
stc
and
in
cmpsb
fucomip
xchg
movsl
or
sahf
pop
mov
bound
shrb
mov
pushf
add
mov
out
aad
cmpb
cltd
inc
subl
pop
call
pusha
or
fs
push
sub
cmp
push
sbb
sub
add
popf
mov
ficoms
and
hlt
or
fcom
mov
pop
je
std
cmc
xor
dec
add
mov
ret
jmp
sti
push
mov
test
lds
jge
and
jl
pop
mov
cwtl
mov
popf
push
stos
addr16
and
and
inc
lahf
imul
add
addr16
stc
jmp
sarl
arpl
push
lea
push
outsl
sub
mov
imul
pop
cmp
test
shll
sahf
lea
mov
cmpsl
int3
test
mov
clc
adc
repnz
loop
pop
inc
lahf
pop
jns
and
fmuls
jno
hlt
rcll
arpl
in
push
jno
cld
fiadds
out
jnp
cmp
orl
or
nop
sarl
mov
sahf
mov
pop
and
fisttpl
sar
int3
push
push
pop
xor
scas
add
mov
xor
repnz
push
adc
push
popa
cmpsl
jp
call
add
jae
out
push
les
aam
jg
push
clc
dec
add
les
jecxz
or
xchg
add
scas
cmpsl
xor
std
das
mov
inc
test
insb
incb
mov
xchg
cmpsl
mov
push
jne
cmpsl
inc
pop
xchg
daa
sub
jno
inc
mov
test
int
xchg
sahf
push
inc
add
test
jl
jae
fwait
loope
stos
test
ficoml
adc
and
dec
xor
add
aad
arpl
shrl
mov
stc
dec
mov
mov
push
jo
into
repz
iret
leave
bound
fs
mov
add
pop
push
in
arpl
add
fwait
and
inc
into
or
xor
int
out
test
pop
cli
dec
pop
push
xchg
insl
mov
push
xchg
xor
das
adc
loopne
inc
icebp
pop
xchg
xor
pop
mov
nop
push
nop
in
test
ficoml
insl
sbb
or
pop
or
addb
sbb
and
mov
cmp
cmpsb
pop
jge
or
pand
repz
jg
test
mov
inc
jmp
pop
dec
testb
mov
test
in
push
inc
jecxz
lret
xchg
cmc
test
mov
fnstsw
inc
std
and
mov
insl
add
rep
sub
rorb
sbb
stos
or
sbb
and
cli
das
xor
nop
setae
out
sub
inc
mov
cld
mov
and
lea
mov
aam
je
cmpsl
pop
shl
add
pusha
scas
imul
call
sub
jmp
out
int3
sahf
push
mov
into
jge
or
inc
push
sub
mov
cmpsl
xchg
ja
hlt
rorb
aad
inc
lahf
adc
jae
adc
jo
fcoms
and
xor
jno
cmp
bound
bnd
push
xchg
jle
aaa
jle
dec
stos
andb
daa
daa
stos
push
cmp
stos
popa
insb
jb,pt
stc
inc
sbb
fwait
in
pop
ret
jge
cld
cmp
dec
cmp
push
pop
bound
fldl
sahf
jae
jl
repnz
pop
stos
bound
nop
pop
mov
xchg
jecxz
fdivr
imul
xor
adc
ljmp
daa
rcl
mov
das
mov
lods
notb
lret
cmp
add
jo
loope
clc
pop
pop
mov
rcrl
addr16
mov
inc
cmp
mov
fbld
dec
sub
loop
xchg
adc
aas
mov
pop
inc
push
dec
cmc
out
dec
sti
lret
mov
out
mov
or
adc
daa
add
mov
cmp
popf
gs
pop
lds
enter
xchg
xchg
out
jno
add
pop
popa
jmp
iret
jecxz
pop
popl
in
dec
xchg
sub
push
out
jns
xor
ret
xchg
pushf
test
xchg
and
sbb
ret
gs
aaa
sub
pop
cmp
imul
sub
cs
int3
gs
gs
loop
in
cmp
adc
aas
xlat
push
xor
mov
dec
outsl
sub
sbb
inc
fdivl
mov
cmp
cltd
sub
or
jae
inc
lcall
jmp
jo
sti
mov
fsubs
aad
xchg
xchg
lahf
or
dec
imul
filds
ret
bound
orb
or
inc
xchg
lret
or
aas
mov
nop
push
das
mov
cld
mov
adc
push
cwtl
repz
jo
daa
lds
inc
push
fadd
fmul
rcrb
lret
and
mov
inc
dec
sti
xlat
mov
lods
xor
xchg
lcall
push
and
rorb
push
xchg
mov
jno
addb
call
sbb
push
lods
ljmp
and
mov
or
in
adcl
sbb
fcompl
mov
addr16
dec
cld
cs
xchg
sbb
xchg
lret
daa
adc
mov
adc
xchg
and
adc
mov
jle
cli
xchg
cmp
pop
leave
push
xor
aas
xor
cmp
in
cld
push
xchg
sbb
mov
sbb
add
pop
jne
xchg
inc
and
movsl
test
fbstp
insb
and
xor
ljmp
xchg
mov
aas
mov
dec
xchg
scas
adc
xchg
test
jbe
push
dec
ret
popa
divl
and
mov
inc
stos
mov
xor
cmpsb
int3
dec
sbb
pop
sub
outsb
das
lock
xchg
jge
cmp
mov
adc
mov
sub
jle
adc
gs
popf
orl
lock
mov
icebp
push
pop
push
mov
mov
int3
out
sar
sub
or
test
test
jns
out
sahf
xor
mov
jnp
xchg
xchg
push
sbb
add
cmp
push
fwait
cmp
cmp
pop
lds
mov
cmp
sbbb
mov
imulb
dec
js
adc
dec
xor
push
pop
outsl
pop
cmpsl
std
dec
jp
cld
add
xchg
or
sbb
push
inc
rcrl
jno
negb
aas
push
insb
add
cltd
pop
aas
fsubrp
mov
pop
cld
dec
stos
loopne
mov
addr16
push
out
xchg
into
out
scas
dec
out
mov
inc
mov
stos
jge
repz
icebp
inc
pop
sbb
mov
cmpsb
in
push
fcmovne
mov
mov
arpl
push
mov
pop
pop
shll
pop
and
in
cmp
dec
inc
inc
and
insl
cmc
jno
push
pop
cmp
sub
mov
insb
sahf
rorl
adc
mov
xor
mov
dec
call
shrl
mov
jecxz
push
mov
jnp
adc
repnz
rol
jle
in
and
nop
lods
and
gs
shlb
fcmovnu
insl
push
add
mov
xchg
gs
out
jg
xor
enter
and
out
and
pushf
movsl
inc
pop
and
test
loope
mov
add
adcl
push
mov
out
out
mov
leave
mov
insl
inc
jne
jno
jns
pop
push
mov
jmp
mov
daa
jmp
lea
int
xchg
in
adc
hlt
lods
or
dec
into
lock
pushf
aam
push
push
push
xorb
mov
xor
lcall
add
int
jns
in
fdivrl
jo
dec
sub
test
and
aas
mov
out
jecxz
xor
cmp
adc
cld
cmp
call
sarb
pop
push
ret
and
and
gs
sbb
fwait
sub
xor
fldl
xchg
xor
sbb
andb
or
jns
rorl
stos
dec
in
fwait
mov
mov
mov
xchg
dec
xchg
jbe
sti
shrb
or
add
or
jbe
or
or
fisubs
aas
pop
notl
jbe
cmc
dec
adc
jp
les
movl
cmpb
push
xchg
fdivs
inc
into
ja
les
add
cld
xor
xchg
test
adc
cmc
or
inc
mov
sub
cmp
test
test
imul
out
dec
inc
jg
repz
notl
pop
xor
gs
or
loop
sub
test
ja
repnz
jno
xor
ds
cmpsl
mov
int3
test
fldcw
dec
je
add
cmpsl
ret
aad
je
jge
pushf
mov
cmpsl
inc
outsl
mov
out
pop
out
enter
dec
xor
mov
or
jmp
and
mov
dec
sbb
fcomip
pop
push
daa
sub
ret
inc
push
outsb
aaa
je
cmpsl
gs
or
lahf
jl
ljmp
adc
cli
lea
xor
mov
lods
mov
xor
inc
bound
or
lret
jo
mov
mov
leave
ret
aad
js
lahf
loop
inc
popa
fbstp
add
enter
hlt
xor
in
sub
and
xor
stc
xor
ja
pop
pop
js
add
add
outsl
movsl
sbb
mov
jno
pop
shr
cmp
jnp
xchg
sub
fwait
negl
cmpsl
dec
sbb
in
fsubs
adc
push
push
data16
lock
mov
push
xor
out
xor
stos
lods
jae
sbbb
dec
or
or
or
pop
xchg
ret
push
or
insb
cmp
add
iret
mov
movsl
push
push
xchg
push
sub
popf
repnz
jo
enter
andb
add
repz
rcl
inc
xchg
inc
sbb
loope
movsl
lods
in
jae
sub
dec
pop
lahf
xlat
cmpsb
xchg
mov
sub
and
xchg
gs
inc
jns
sub
ret
cltd
pop
mov
fsubrs
out
push
repnz
pop
sbb
loop
add
push
sarb
mov
and
addr16
test
xlat
outsl
cmpsl
repz
inc
iret
stc
dec
lods
cli
fwait
mov
mov
hlt
es
out
mov
mov
xchg
lret
add
push
insb
in
addl
std
mov
mov
pop
pop
pop
mov
dec
in
out
jnp
pusha
xchg
outsb
fcoml
and
xchg
in
or
fdivrs
mulb
mov
push
mov
loopne
inc
cltd
xchg
and
sbb
fimuls
jb
sbb
loop
fnstenv
push
out
sti
ds
push
ljmp
das
lret
loope
pop
mov
adc
and
mov
inc
and
lret
fwait
mov
std
mov
xchg
xchg
cmp
repz
xor
jl
push
mov
mov
and
gs
adc
nop
xchg
fisubrl
stos
jns
cmp
test
dec
lods
nop
sub
mov
adc
and
in
pop
negb
iret
cmp
test
adc
mov
fwait
imul
outsb
aam
ljmp
pop
lret
or
xchg
shrb
mov
pop
mov
test
sbb
pusha
sub
lahf
ficoml
decb
xlat
mov
scas
push
and
outsb
mov
ljmp
cs
mov
fcoml
loope,pt
cwtl
or
fwait
xchg
add
pop
jg
ss
push
in
outsb
mov
movsl
lret
push
dec
cmp
xor
je
fs
inc
mov
pop
cmp
call
or
inc
push
hlt
jo
jo
out
xor
cltd
lret
lods
pop
icebp
dec
mov
popf
cli
lea
mov
add
inc
jmp
outsl
jecxz
dec
popf
ja
push
out
aaa
inc
sub
sti
or
ds
sub
dec
mov
cmpsl
xchg
cmp
mov
cmp
loope
cli
push
mov
xor
idivl
cmp
cmp
jp
pushf
push
mov
adc
or
mov
xchg
xor
inc
into
shrb
push
pop
xchg
pop
cltd
sbb
xchg
xchg
fucomi
inc
int3
adc
arpl
int3
push
inc
pop
hlt
stos
mov
mov
add
mov
jle
pop
out
jno
das
clc
lods
jno
cli
adc
or
pop
ljmp
mov
cmp
lret
jbe
sbb
push
jnp
mov
fadds
xchg
adc
mov
shlb
es
insl
push
xor
sti
das
sbb
fisubrl
jnp
xchg
mov
pop
sahf
pusha
test
or
mov
data16
mov
mov
popl
and
movsl
cs
outsl
jp
out
in
shlb
push
pop
pop
and
imul
int3
leave
movsb
mov
lea
ljmp
pop
ficompl
xor
lds
popa
stc
fucomip
dec
insb
je
dec
testb
and
jg
aam
adc
mov
pop
inc
and
jnp
ror
call
jl
inc
jno
int
push
jbe
lods
daa
test
xor
jae
push
repnz
movsb
mov
add
mov
ret
cmp
adc
xchg
insl
mov
mov
sbbb
and
aad
adc
dec
rcl
fnsave
test
add
mov
cmp
mov
stc
insb
mov
arpl
out
mov
gs
cmp
push
or
adc
xor
arpl
out
ds
mov
sbb
fsubs
nop
jg
push
push
xchg
cwtl
inc
mov
enter
xor
and
mov
push
sbb
mov
or
jmp
mov
cmpsl
fisttpll
scas
leave
or
add
sarl
push
or
fistpll
mov
pushf
jae
mov
cmc
icebp
push
stos
adc
adc
inc
or
xorl
bound
add
popf
mov
dec
cmc
xchg
sbb
lret
adc
gs
and
jo
push
add
sbbl
les
mov
cmp
xchg
sti
sti
or
lea
mov
mov
loop
insb
push
inc
sbb
and
sbb
in
sbb
mull
int3
fcoml
push
lock
ret
xchg
movsb
sub
bound
cli
sarl
movsl
scas
mov
jle
arpl
cltd
pop
aaa
icebp
bound
mov
mov
enter
xchg
mov
mov
aad
push
and
mov
lret
xor
sbb
pop
fcomp
add
sub
adc
shrl
cmp
fisttps
jns
xchg
or
mov
xor
jns
int3
inc
into
adc
decb
mov
mov
loope
mov
push
mov
inc
lock
mov
cmpps
out
cli
mov
dec
in
mov
out
mov
mov
mov
jp
outsb
jmp
shll
cmpsb
inc
mov
cmpsb
insb
push
push
les
xchg
negl
mov
sbb
adc
add
leave
jecxz
mov
sub
xor
out
fsub
inc
incl
out
add
dec
pop
ja
push
add
mov
cltd
xchg
int
ljmp
mov
insl
xor
add
xor
lock
jp
imul
subl
xchg
push
arpl
incb
adc
xor
push
adc
es
arpl
and
or
inc
int3
in
add
jp
stos
xchg
mov
mov
push
in
lds
adc
pop
sti
andl
push
ret
jns
js
sti
or
sub
imul
in
mov
jne
fisubrs
andl
add
pusha
lret
loopne
xor
mov
shll
fs
or
fwait
jns
push
cli
mov
outsl
rclb
push
les
xchg
jge
shufps
lcall
and
lcall
leave
mov
imul
nop
cld
adc
popa
add
push
jbe
dec
bound
or
xorb
fisubs
sbbl
cmc
subb
mov
jmp
mulb
push
or
or
mov
mov
adc
mov
jle
hlt
sbb
cmp
gs
pop
dec
jo
xchg
adc
dec
shrb
xor
adc
daa
stos
insb
fnsave
and
sbb
sub
dec
inc
inc
xor
fidivrs
inc
lods
in
inc
sbb
mov
test
mov
shll
pop
dec
test
insl
mov
scas
or
std
add
push
nop
and
mov
cmpsl
mov
push
iret
cmpl
rcrb
lock
mov
repnz
push
mov
pop
ret
push
push
and
push
push
push
mov
clc
lods
pop
xchg
and
rolb
xchg
inc
and
push
rep
or
sbb
lds
dec
movl
xor
fisttps
repnz
sbb
mov
inc
out
aaa
or
insl
and
push
pop
sahf
mov
mov
jp
ljmp
and
fdivrs
cmc
xor
aam
mov
dec
add
rorb
adc
jle
fdivs
hlt
xchg
lret
js
mov
push
fcoml
loopne
dec
adc
inc
fmulp
sub
cmp
int3
fisubrl
jne
mov
sbb
xchg
add
push
cmpsb
push
test
pop
sub
mov
imul
les
inc
and
push
inc
pop
gs
sub
inc
add
xchg
mov
inc
fstpt
pop
jmp
xor
mov
inc
pop
scas
outsl
fnstcw
jns
inc
ljmp
adc
lods
icebp
xor
dec
xor
daa
sarb
pop
push
xchg
pop
pop
fbld
scas
popf
shr
sbb
pop
mov
dec
enter
add
dec
insl
mov
inc
dec
fs
sbb
std
jbe
mov
mov
cmpsl
xor
bound
add
cmp
mov
fs
jae
xchg
jno
popa
inc
mov
ds
inc
push
lods
sub
std
clc
and
cmpsl
stos
ret
push
push
mov
pop
stos
mov
lock
iret
loopne
dec
das
and
lret
xor
repz
outsl
clc
push
dec
test
bound
shrb
lods
push
sahf
xchg
mov
sahf
rorl
pop
jp
pop
scas
xor
jl
insb
insb
add
test
mov
xchg
and
pop
test
loop
adc
inc
xchg
std
int3
cmc
push
jae
leave
repz
inc
inc
cs
das
cli
imull
fdivp
xchg
shll
arpl
dec
lcall
mov
notl
pop
js
sbb
add
sbb
aaa
call
sti
inc
arpl
sbb
jbe
pop
out
pop
fldcw
jb
inc
push
pop
jg
cld
cld
iret
sub
inc
jne
ss
xor
out
cmp
mov
or
push
shlb
sahf
ljmp
and
sub
mov
fdivl
in
mov
jno
sub
shll
rclb
psubsw
sbb
jl
add
sub
or
out
jmp
mov
mov
adc
jg
sarl
push
outsb
jl
push
scas
pop
jb
iret
adc
test
xchg
test
sbb
bound
in
test
popf
mov
jne
in
ljmp
cmp
pushf
add
repnz
test
mov
jg
bound
xor
xor
rol
popf
push
iret
clc
lahf
xor
test
pushf
pop
cmp
xor
mov
cmp
mov
iret
packssdw
cmp
gs
out
inc
repnz
iret
jle
adc
je
push
aas
add
and
inc
push
ljmp
pushf
adc
xchg
xchg
push
cmp
mov
movswl
test
jae
loopne
xchg
dec
jp
enter
and
add
push
int
cltd
fwait
cs
xchg
mov
dec
outsw
fwait
inc
dec
mov
insl
push
out
lcall
cs
out
fnstenv
or
push
lret
push
mov
sbb
add
mov
stos
cmp
arpl
jmp
lahf
mov
js
and
xorl
adc
jle
inc
cli
mov
and
out
in
aam
or
fisubrl
jp
fwait
jnp
loope
int3
pop
subl
sub
movsb
push
scas
roll
sahf
dec
pop
iret
int3
pop
mov
clc
adc
inc
rcll
movsb
mov
inc
push
or
mov
pop
cmp
xor
and
int3
and
xchg
xor
leave
lret
dec
and
push
rolb
movlps
jb
fwait
pop
lods
mov
sbb
sub
aam
cwtl
or
dec
cs
sarb
flds
mov
pop
das
fsts
push
pop
pop
out
xchg
dec
lea
pop
mov
aad
mov
das
movsb
sbb
adc
xchg
inc
dec
mov
xchg
lds
orb
lods
das
test
xlat
es
cwtl
dec
pop
dec
iret
sub
ljmp
dec
xor
adcl
jmp
loop
aad
idiv
or
mov
push
cmpsb
popf
arpl
push
pushf
lret
push
mov
out
imul
test
cmp
jb
test
push
dec
xchg
lret
jbe
and
jae
mov
and
xlat
sahf
add
imul
sub
adc
sbb
jge
loope
out
mov
jge
enter
xchg
mov
mov
jg
jmp
xor
xchg
sbb
stos
xchg
arpl
jl
js
xchg
lods
dec
pop
xchg
lock
sbb
mov
push
sub
dec
ret
in
in
outsb
int
call
aaa
push
pop
xor
and
or
int
icebp
fsubl
es
clc
shrl
add
sahf
pop
dec
leave
das
sahf
scas
stos
out
movsb
out
push
cwtl
mov
cmp
hlt
adc
out
and
mov
mov
cmp
adc
add
pop
shll
add
loope
mov
enter
andl
inc
test
jmp
push
nop
js
lret
push
fcoms
aad
fwait
add
dec
dec
add
adc
cmp
sarl
repz
mov
sti
movsb
rolb
aas
and
dec
push
and
jmp
sub
xchg
cld
mov
mov
outsl
cmp
mov
lods
cmpl
mov
sbb
xchg
out
repz
test
xchg
sti
adc
mov
or
mov
add
dec
dec
aam
gs
xor
loopne
jge
mov
aaa
cmp
pop
iret
inc
out
imul
mov
sbb
inc
dec
sub
sub
or
xor
js
mov
cld
jnp
cltd
cmp
nop
ja
mov
push
aaa
lcall
xchg
hlt
mov
sbb
pop
pop
and
dec
sbb
jg
insl
inc
stc
mov
out
pop
pop
out
cltd
cs
xchg
inc
jnp
jecxz
ds
aas
addl
dec
pop
lods
or
cmp
jp
faddl
and
jecxz
int
mov
push
data16
pop
sub
int3
fistps
dec
sbb
insb
gs
sbb
sbb
sahf
inc
xchg
mov
jns
cwtl
mov
push
add
sub
leave
cmp
adc
cmp
add
nop
xor
js
int
data16
imul
or
mov
loopne
call
xor
adc
and
jbe
pop
dec
lea
jae
dec
daa
push
test
mov
nop
aas
or
mov
ficoms
xor
in
and
mov
dec
jmp
and
rorb
mov
and
mov
xchg
xchg
inc
popa
cltd
sbb
lods
mov
int3
adc
dec
pop
mov
xlat
xchg
jno
lahf
pop
test
out
fldl
push
loop
pop
cs
xchg
cltd
and
jecxz
sbb
cld
inc
dec
jp
and
jp
lds
lcall
aaa
xchg
nop
shll
loope
dec
pop
mov
ret
push
or
or
mov
adc
dec
sbb
frstor
and
mov
pop
out
xchg
rorb
je
rol
cmp
iret
jge
mov
mov
jmp
scas
add
in
jne
xchg
icebp
in
mov
inc
in
jo
jne
in
push
push
adc
lcall
adc
inc
adc
and
sbb
sub
pop
sub
loop
cmc
jge
adc
divb
popf
fwait
bnd
sbb
jbe
lahf
jg
adc
dec
imulb
or
mov
mov
aad
push
cltd
iret
cmp
pushf
mov
push
test
cmpsl
aas
js
jbe
pop
test
lds
mov
xchg
aas
icebp
mov
les
add
sub
repz
call
sbb
dec
addr16
outsb
push
sbb
push
in
gs
rorb
jmp
mov
fmuls
cmp
jge
ret
jmp
xchg
dec
mov
inc
gs
out
xchg
cmp
mov
cwtl
test
nop
lret
ret
push
andb
daa
cmp
pop
arpl
fdivrs
ret
inc
mov
xchg
mov
shl
or
xor
dec
nop
jle
add
push
push
adc
xchg
or
fldt
je
imul
cmp
out
imul
xchg
push
mov
sbb
loopne
or
loope
and
push
in
mov
jns
nopl
push
pop
pusha
mov
test
add
push
mov
jne
int
aas
add
pcmpgtd
fwait
jge
cmp
add
or
cwtl
outsb
push
jg
or
pop
cmc
add
stc
ret
xchg
cmpsb
ljmp
push
xchg
push
lea
int
jmp
pop
jg
push
mov
add
cmc
adc
or
xor
cmp
add
mov
iret
lcall
jmp
stos
cltd
ret
xchg
push
mov
inc
ljmp
and
out
xor
lret
fsubp
pop
ret
push
repz
sarb
outsl
xchg
xor
cmp
push
pop
mov
je
cmp
movsl
dec
sbb
sti
out
jp
lcall
ret
addb
js
mov
push
push
push
rclb
out
in
dec
adc
xchg
shlb
xchg
ret
stos
icebp
shll
mov
dec
jge
xchg
sahf
cmp
in
jae
inc
cmpsl
adc
pop
mov
cld
fildl
add
mov
jno
inc
and
lret
jge
movl
jae
mov
nop
dec
loope
mov
js
jb
inc
cwtl
rcl
loop
sub
cld
pop
loope
adc
adc
mov
icebp
sub
les
ds
push
aad
sub
jp
andb
add
js
pop
sbb
scas
pop
popl
shll
push
xorl
push
pop
cmp
push
inc
sub
mov
pop
rorl
stc
pop
push
repz
sbb
inc
pusha
mov
cmp
arpl
mov
mov
sub
cmp
push
mov
mov
push
lods
daa
push
cmpsb
sti
mov
jo
push
rorl
in
and
xlat
or
in
lret
pop
pop
divb
imull
adcb
les
cli
ret
jg
adc
push
out
jg
leave
lods
pop
andb
cmp
or
lea
fcmovne
sbb
scas
and
mov
dec
xor
sub
shr
jne
mov
imul
and
lods
push
xlat
pop
clc
paddq
dec
addr16
xchg
jns
adc
cmp
mov
sbb
and
pop
dec
push
add
sbb
test
or
lods
cmp
xorl
mov
pop
int3
sub
cmpsb
and
push
pop
adc
adc
xlat
dec
pusha
aaa
rorl
xor
xchg
pop
jb
or
pop
mov
call
cmc
mov
push
and
and
imul
orb
fucomp
jle
nop
xchg
xchg
test
imul
xchg
jp
xchg
pop
call
jns
int3
xor
and
das
push
mov
test
out
pop
mov
mov
aam
fistpl
fldl
mov
movsb
jo
adc
dec
mov
sbb
mov
mov
std
jns
push
jmp
das
nop
jmp
fsubl
add
shrl
jge
dec
popa
cmp
xor
mov
mov
xor
adc
xchg
pop
mov
xchg
add
jnp
jmp
incb
sub
je
inc
shlb
in
push
out
pop
xchg
loopne
pusha
sti
mov
cmp
mov
mov
inc
fcompl
icebp
pushf
js
sub
js
mov
push
push
pop
es
sbb
lods
shll
pop
mov
sub
ffree
scas
add
std
das
mov
fwait
nop
cltd
dec
mov
sub
jp
aad
mov
shr
mov
rolw
or
stos
jmp
in
mov
nop
adc
mov
mov
dec
cwtl
js
imul
loopne
in
jl
fwait
out
cmp
ja
fisubrs
jle
fdivl
cmp
cli
pop
out
sub
loope
adc
test
inc
or
outsl
test
cmp
test
lods
sbb
lret
jno
popf
add
scas
ss
movsb
and
jl
sbbl
repnz
jbe
pop
adc
jne
enter
jns
ljmp
cld
or
xchg
sahf
xor
dec
pop
popa
inc
lea
lea
call
push
xlat
push
in
mov
push
mov
pushf
mov
nop
aaa
out
shrb
cltd
sbb
jmp
lock
lcall
adc
and
cmpsl
inc
push
inc
mov
jge
dec
sbb
jg
cs
sub
sub
andl
mov
mov
xchg
leave
call
pop
or
sahf
imul
negb
dec
daa
mov
cmp
insb
push
test
rcl
test
fists
subb
sub
out
sub
jl
mov
xchg
int3
mov
jno
mov
mov
int
iret
or
stos
aas
mov
insl
push
test
movsl
les
and
sub
popf
fisubrl
xchg
mov
stos
dec
into
ret
inc
add
lret
ds
iret
lret
jae
jbe
cmp
das
sbb
imul
mov
sub
js
mov
enter
enter
or
ret
pop
fwait
jb
pop
arpl
mov
mov
adc
or
rolb
pop
icebp
mov
orl
adc
inc
dec
sti
cld
arpl
out
repz
sub
mov
sbb
inc
pop
mov
xor
mov
push
leave
jmp
in
or
mov
rorl
lret
mov
popf
inc
movsb
int
rcrl
pop
leave
ret
cmc
dec
add
clc
cld
add
in
mov
mov
sub
pop
pop
cwtl
fcomi
dec
inc
mov
testb
or
xor
rclb
dec
mov
roll
jg
mov
sbb
lods
inc
enter
js
adc
sbb
es
mov
lods
cmpsb
mov
cmp
ja
sbb
push
imul
sbb
iret
xchg
jne
les
inc
aas
dec
or
or
out
push
sbb
inc
jnp
test
es
sub
in
or
stos
nop
sahf
call
cmp
cmp
clc
or
pop
setno
mov
cs
cmp
cmp
in
dec
ret
dec
add
adc
sub
adc
insl
leave
fs
xchg
and
dec
xchg
inc
jle
test
sti
gs
push
jbe
lcall
inc
sub
mov
es
push
xchg
lods
pop
mov
call
test
jecxz
mov
sub
add
mov
cli
jg
lods
je
pop
cmp
leave
cmp
pop
imul
mov
jmp
aaa
push
and
sbb
ja
adc
xchg
rclb
jmp
mov
test
ja
mov
fwait
mov
jbe
cmpsb
enter
fs
xor
leavew
jae
cltd
push
push
sbb
pop
push
xchg
inc
xor
pop
gs
mul
leave
push
ja
sbb
aaa
xor
add
shrl
add
cmp
loop
jae
aas
cmp
pop
xor
jmp
mov
out
cltd
mov
in
lret
and
das
sbb
pop
daa
jl
mov
inc
mov
repnz
cmp
mov
jg
test
or
add
ljmp
ficomps
andl
dec
inc
clc
mov
adc
push
xchg
ja
push
pop
les
mov
les
mov
xchg
clc
sahf
dec
stos
les
jmp
mov
xchg
mov
je
xchg
cmp
repz
cmp
or
fsubrl
adc
mov
and
fisttpll
sbb
in
fstps
and
das
out
lcall
popf
in
and
jo
cwtl
jnp
nop
rclb
push
cmp
push
lods
add
das
pop
push
push
aad
jnp
inc
icebp
sub
lret
xchg
or
jmp
inc
lret
test
into
cwtl
lahf
xor
sbb
xchg
inc
dec
or
mov
xchg
clc
ficoml
fmulp
jns
decl
cld
movsl
adcl
shll
loop
pop
adc
leave
shl
repnz
cmc
sarl
push
xchg
in
fmull
push
movsl
push
lock
stos
mov
enter
insb
enter
sbbb
in
xor
in
inc
or
lods
pop
lret
add
mov
js
inc
repnz
push
cwtl
lret
mov
js
xlat
cmp
pop
inc
cmp
clc
jno
out
or
push
xor
push
pop
aad
popw
push
cwtl
jge
insb
shll
cli
scas
mov
mov
loopne
mov
faddl
bound
cmpsb
movsbl
ret
mov
xchg
addr16
ret
jl
mov
pop
lds
insl
repz
stos
pushf
negl
inc
xchg
and
loopne
cmp
insl
inc
and
xchg
dec
fwait
push
lods
mov
jno
outsb
int
add
nop
popf
lret
adc
out
mov
jo
aam
outsl
mov
sub
add
insb
shlb
add
fstl
inc
in
shrb
pushf
mov
jo
or
fimuls
dec
in
xchg
cwtl
push
cmp
aas
incl
shrb
cld
mov
or
add
das
xchg
mov
fiaddl
dec
inc
aaa
and
roll
xor
stc
sti
in
add
jecxz
sub
loopne
cwtl
jne
ret
pop
stos
or
dec
iret
or
rorb
pop
jg
push
js
xor
lds
jnp
jle
sub
push
imul
faddp
in
push
push
dec
rol
mov
jno
inc
adc
xor
cmp
dec
sbb
mov
sub
cltd
mov
jecxz
pop
sub
jo
xchg
js
ja
jae
push
sbb
fistps
inc
sti
cmp
xor
subb
jp
aam
push
in
fwait
bound
pop
ficoms
mov
jns
sbb
xchg
mov
fcompl
aad
or
flds
dec
cwtl
push
and
xor
pop
sub
sub
sbb
addr16
into
arpl
outsb
xor
and
arpl
xchg
aas
jne
and
ljmp
fsubl
add
ljmp
xchg
hlt
mov
ret
into
sub
sti
pop
pop
mov
in
mov
xor
ljmp
rcrl
inc
or
popf
mov
mov
or
push
je
mov
xor
push
push
loop
shl
xchg
rolb
cmpsb
jecxz
push
mov
push
or
mov
stos
pop
call
iret
push
and
pusha
dec
icebp
pop
jno
adc
incl
repz
xchg
mov
jo
aaa
aas
ficoms
inc
cmp
jmp
cli
idivb
sub
dec
jae
and
and
push
and
mov
push
add
scas
add
add
sbb
stos
sbb
add
sub
shll
xchg
icebp
mov
es
adc
lock
call
rolb
jb
mov
jmp
in
dec
jmp
cmpsb
or
mov
aam
lea
add
and
iret
cld
fs
mov
cmc
mov
lcall
xor
ljmp
loope
cmp
imul
lahf
pop
sbb
jg
sbb
jo
testb
aam
and
push
inc
dec
xchg
fistpll
push
imul
or
mov
mov
inc
push
outsl
adc
in
cs
dec
sbb
pop
xchg
pop
dec
or
xchg
jge
adc
mov
sub
rol
or
pop
dec
xor
data16
push
sub
sub
divl
cmp
dec
mov
push
mov
loopne
cltd
lds
mov
mov
cmp
les
aaa
dec
fimuls
mov
cmpsb
int3
or
mov
inc
aas
icebp
data16
addr16
incb
out
sub
mov
les
inc
mov
nop
xchg
inc
cmovbe
lea
cwtl
jb
loope
sti
dec
and
icebp
pop
rorb
aaa
adcl
mov
add
and
mov
push
int3
sbb
mov
xchg
jecxz
jl
and
repz
ljmp
test
out
fcmovu
cs
pop
push
mov
mov
jbe
loope
scas
push
xchg
dec
push
mov
hlt
push
psrlq
mov
nop
fsubs
and
test
into
sarl
loop
loop
sub
pusha
lcall
mov
and
loop
in
sub
das
dec
adc
or
and
mov
add
sub
in
inc
add
andl
stos
jo
jno
in
in
push
xchg
out
in
enter
cmp
fistpll
ss
mov
notl
xchg
pop
test
cmp
mov
pop
lods
mov
inc
pop
mov
mov
fs
adc
bound
ficoml
hlt
cmp
sub
sarb
add
add
jmp
aas
sub
xchg
jae
xchg
mov
mov
lret
test
lahf
sub
ja
cmc
dec
or
sbb
mov
jl
or
rorl
insl
fs
aaa
ss
add
add
and
js
push
jmp
sub
aad
in
and
dec
cli
mov
cmp
call
enter
xchg
enter
enter
lahf
adc
inc
inc
sub
and
jns
lods
stos
add
inc
push
insl
push
sub
dec
xor
aas
test
mov
sti
ljmp
stos
cwtl
push
sub
rcrl
add
xor
jne
adc
ds
or
mov
repnz
daa
sbb
push
inc
xchg
test
sbb
push
mov
add
xor
push
icebp
pop
leave
bound
pop
out
stos
pop
pushf
repz
or
iret
sbb
cli
arpl
into
push
inc
dec
or
aas
in
insb
rcrl
pop
xchg
shll
mov
xchg
fwait
mov
jbe
in
incb
in
fcmovnb
test
insl
xchg
movsl
or
imul
or
sub
adc
inc
cmpsl
xlat
mov
ljmp
cmp
add
dec
out
mov
add
push
ds
or
dec
rol
cs
cmp
fcmovne
popa
jne
in
pushf
in
movsl
xchg
ds
mov
not
push
xchg
or
jl
loop
out
cmp
faddl
pop
ds
fcomp
fldenv
push
ss
mov
pop
mov
add
addl
lret
jp
fsubrp
adc
xor
mov
or
push
fdivr
mov
push
les
mov
sub
push
sub
inc
xor
mov
inc
mov
add
adc
stos
or
orl
add
scas
in
jb
jle
hlt
stos
rorl
pop
jae
out
and
push
jo
sub
aad
arpl
cmp
or
sbb
pop
sbb
mov
sbb
jno
lds
aad
add
insl
fisubrl
fcoml
push
cmc
push
daa
sbb
sub
mov
add
push
cmpsl
test
dec
xchg
gs
daa
inc
lret
icebp
mov
das
add
ficomps
sahf
push
jge
addr16
mov
adc
or
lahf
imul
sbb
in
nop
pusha
jo
inc
cmp
aad
bound
mov
inc
mov
leave
mov
rorl
inc
add
pop
sub
int3
stos
out
sub
or
cmp
movsb
insb
adc
adc
test
out
fsubrl
lods
push
dec
xchg
in
mov
sti
xor
push
mov
nop
jae
stos
cmp
sbb
test
mov
mov
jl
ja
jbe
fs
js
sbb
push
sbb
jmp
xchg
fucomp
cli
xchg
stos
loop
and
vrcpps
cmp
les
dec
xlat
pop
into
xchg
add
dec
repz
pop
push
lods
outsl
lahf
sub
mov
xor
andl
loopne
andb
loope
adc
popf
aaa
mov
or
dec
and
lock
pop
shlb
mov
mov
jbe
adc
inc
xchg
and
rol
push
pop
scas
icebp
inc
ljmp
jp
out
popa
jbe
scas
add
jl
mov
push
xor
les
daa
jp
movsb
lock
or
das
dec
pop
popf
out
push
jl
mov
jp
sub
repnz
daa
mov
push
in
pushf
inc
inc
mov
ret
xchg
std
xchg
pop
dec
in
test
inc
push
push
repnz
cld
mov
mov
dec
sbb
repnz
cld
push
rcll
jle
pop
enter
xchg
insl
mov
scas
test
std
ds
jle,pn
pcmpgtw
cmpsl
js
sub
mov
lods
sbb
fwait
cmp
inc
pop
lods
xchg
imul
sbb
aas
mov
dec
xor
div
adc
inc
pusha
js
inc
aam
add
push
push
lahf
adc
addr16
out
sti
lcall
add
pop
out
mov
push
repz
inc
inc
fs
adc
adc
cmpsl
sbb
fwait
jb
mov
scas
jbe
ljmp
in
mov
sub
rolb
fidivrs
out
ret
cltd
adc
dec
add
sub
les
or
lods
push
or
popa
popa
sbb
jae
xor
cld
mov
aas
mov
std
fisttps
pop
sti
es
and
add
stos
cmp
or
xchg
negl
fwait
data16
mov
or
scas
mov
pop
imul
out
loopne
pop
shlb
mov
ret
cmp
out
call
fs
and
fisubl
popf
aam
mov
test
and
pop
push
outsl
cmp
cmp
push
mov
mov
pop
ss
inc
ljmp
mov
fidivl
out
or
jno
sub
push
sbb
lock
dec
arpl
add
xchg
sbb
jnp
loop
add
test
jl,pt
or
insl
lcall
insb
sbb
pop
xor
cmp
das
mov
mov
loop
mov
pop
cmpb
sbb
lahf
loop
jp
inc
adc
ret
mov
pop
adc
inc
repnz
fwait
int3
dec
aaa
daa
inc
jmp
jle
je
pop
xchg
mov
inc
jnp
push
push
xorb
sub
fwait
loop
cltd
xor
push
incl
xchg
xchg
dec
and
mov
in
aad
loop
mov
stos
inc
dec
in
scas
insl
cmp
and
dec
stc
jo
enter
nop
stos
stos
pop
xlat
iret
jb
popa
std
mov
fisubrs
div
test
cld
lds
hlt
dec
dec
ret
data16
shrb
mov
jmp
stc
addr16
enter
clc
xchg
iret
push
mov
xchg
ss
les
mov
cld
push
xchg
in
inc
int3
pop
nop
xchg
arpl
xor
jmp
mov
push
jo
sbb
out
es
lock
cli
call
mov
incb
popa
push
lahf
icebp
out
xorb
stc
mov
or
jno
mov
sub
xchg
mov
insb
mov
hlt
repz
sub
xor
add
sub
popf
aas
or
loopne
data16
gs
ret
push
in
xor
insl
psrlq
jp
or
mov
mov
push
mov
std
fwait
fsubl
mov
cli
cmp
aad
pop
scas
mov
lahf
add
push
push
adc
mov
xchg
cmpsl
movups
cmp
jmp
jmp
mov
repz
add
mov
icebp
hlt
aaa
mov
mov
jl
jne
out
mov
iret
mov
xchg
adc
cmpsb
lret
xlat
stos
cmp
dec
xchg
or
pop
mov
xor
clc
lret
fsubrl
push
push
pop
nop
push
nop
jo
int3
sbb
and
aas
je
dec
pop
push
flds
inc
xor
movsb
jmp
sbb
pop
lahf
push
jnp
xchg
push
iret
in
leave
jns
cmp
test
and
pushf
push
mov
pop
mov
jae
xor
clc
popf
add
stos
scas
insb
aaa
add
xor
jns
xor
lock
cmp
and
adc
mov
mov
push
xlat
insl
inc
pop
insl
cmc
xchg
mov
mov
xchg
cltd
pop
sub
jo
pop
cmp
in
inc
cld
scas
mov
mov
arpl
out
repnz
sahf
pop
out
adc
jno
lock
cld
lret
push
aam
in
pusha
test
xor
test
sarb
add
mov
flds
cld
sub
or
cmp
xor
push
sbb
or
and
in
cltd
pop
imul
push
out
inc
nop
mov
sbb
int3
mov
ret
pop
cmp
loopne
xor
or
fwait
aas
sbb
sub
mov
aaa
std
jo
mov
dec
jno
add
aad
jmp
jge
movl
jmp
dec
lock
sbbl
lret
shrl
jmp
shrl
push
jo
cmova
adc
divb
xchg
pushf
cld
dec
je
pop
test
mov
mov
add
sti
test
xlat
jmp
sbb
test
mov
adc
pop
sbb
and
fs
sarb
cmp
mov
loop
dec
push
cmp
stos
inc
test
insb
ret
pop
fsubl
push
push
cmp
pop
and
ret
out
repnz
js
stos
jmp
daa
rorb
daa
cmp
xchg
push
cmp
pushf
sbb
cmp
in
lods
clc
mov
mov
fwait
xchg
xchg
add
adc
jne
mov
inc
ret
sub
int3
pop
or
cs
repz
or
xchg
pop
xor
repz
adc
mov
int
mov
pop
idivb
in
add
stos
das
push
mov
and
pop
in
xchg
out
ja
insb
jo
push
pusha
sbb
sub
aaa
in
bound
call
fs
sbb
orl
sbb
mov
pusha
jg
ss
cmpb
push
out
add
jmp
mov
push
mov
mov
and
xchg
int
int3
and
in
cwtl
mov
cmp
mov
in
lods
pop
sbb
popl
cmp
xchg
mov
lods
and
mov
mov
dec
addr16
push
roll
sub
jbe
mov
stc
jo
push
adc
imul
sub
sti
lret
addl
in
jbe
outsl
adc
cmpsb
pop
repnz
xor
mov
pop
sbb
aam
inc
ja
ds
mov
jo
je
aad
xchg
push
cli
jmp
popa
cs
jp
xchg
jno
repz
pushf
filds
outsl
clc
dec
inc
push
xchg
mov
and
repnz
aaa
dec
nop
lahf
inc
outsb
dec
sub
or
inc
mov
or
add
push
pop
inc
sbb
xchg
push
ja
cmp
sti
ss
lods
leave
cmp
and
movsl
jle
cmpl
ret
sti
push
shll
dec
cmp
pop
sbb
sbb
dec
popf
scas
cmp
mov
clc
negb
adc
leave
jae
pop
ss
ret
out
adc
sbb
xchg
sbb
sub
loop
nop
sub
jmp
xchg
stos
inc
or
pop
xor
and
add
xchg
inc
aam
mov
call
dec
fwait
lret
dec
adc
mov
xor
int
add
push
lock
in
ficoms
roll
rorl
sub
je
xchg
ljmp
cmp
cmpsl
int
or
jmp
fstpl
xor
add
jge
je
fimull
pop
jbe
xlat
sbb
lock
xor
mulb
mov
push
inc
insl
xor
mov
mov
icebp
fstpl
out
push
out
nop
add
adc
add
fdiv
xchg
xlat
jbe
and
jno
or
push
xchg
mov
movsl
lods
sub
or
cmp
subl
sub
push
xor
lret
mov
cmp
cmc
adc
cmpsb
adc
add
stc
enter
pop
imul
sbb
dec
mov
iret
jmp
aas
jmp
mov
ljmp
cmpsb
fnstsw
jl
dec
mov
shl
fwait
sub
pop
mov
das
jo
loope
shl
aam
sbb
cmpb
xor
icebp
sbb
ret
ds
enter
sbb
ja
pop
cmp
sbb
out
xchg
pusha
rolb
sbb
push
orb
push
fisubrs
repnz
mov
pop
stc
dec
and
cmp
xchg
into
fisubs
sub
mov
jmp
dec
push
enter
push
test
inc
cmp
or
mov
test
mov
xchg
jno
xchg
insl
pusha
bound
into
test
adcb
pop
push
jne
stos
loopne
pop
fcompp
fwait
sahf
arpl
enter
cmp
dec
xor
lea
push
and
mov
adc
repnz
inc
repnz
aam
out
scas
imul
mov
cltd
roll
mov
pusha
ret
in
pushf
or
out
and
lock
or
lahf
xchg
stc
orb
push
and
enter
cmp
dec
mov
ljmp
jmp
adc
inc
mov
orl
xchg
addr16
pop
je
cwtl
leave
scas
addb
adc
clc
inc
pusha
cmp
ret
inc
mov
sub
mov
sarb
adc
and
add
repnz
test
pop
or
mov
jl
nop
ret
cltd
movsl
in
xor
push
outsb
bound
sti
ljmp
stos
push
pushf
and
sbb
lea
mov
xchg
mov
sbb
das
cmp
dec
xor
jno
stc
data16
or
mov
repz
mov
das
sti
sub
and
or
popa
incl
pop
stos
dec
inc
mov
loope
shrb
sbb
lahf
out
and
lods
int3
int3
jo
lods
adc
mov
pop
std
push
popa
cs
mov
xchg
mov
push
sub
dec
fimuls
mov
in
dec
xchg
jo
push
mov
jg
mov
jo
pop
ds
push
inc
jg
push
bound
test
int
mov
stc
stc
cmp
and
or
jne
loope
in
mov
jbe
arpl
insl
ret
push
jnp
push
roll
bound
adc
inc
pop
xchg
jle
int3
mov
adcl
adc
mov
imul
out
inc
stc
and
imul
lret
mov
lods
adc
loopne
pop
loope
daa
push
out
imul
jl
les
pop
jl
fisttpll
outsl
adc
scas
out
into
ror
mov
or
inc
add
mov
call
js
fcomps
outsl
imul
sti
or
addl
push
mov
fisttpll
leave
inc
and
inc
repz
xor
imul
mov
cmp
rorb
popa
mov
fs
sub
loopne
adc
mov
add
aas
sbbl
xchg
jmp
and
adcb
fld
movsb
ja
cmp
nop
das
add
iret
stc
jmp
cmp
pop
mov
lods
sub
push
dec
into
fsubs
adc
dec
hlt
xchg
loope
mov
sbbb
push
repz
dec
pop
cli
push
std
rcr
nop
cs
mov
cltd
imul
fistps
cld
dec
rol
orb
cmp
outsl
xchg
test
clc
jae
or
mov
sar
or
ds
pop
je
clc
push
pop
push
lock
jno
inc
test
jg
das
and
in
stos
pop
dec
cmp
or
xlat
cmpsl
ret
insb
imul
jmp
and
jns
gs
inc
in
stos
cs
sub
shrl
or
addb
insb
pop
xchg
sub
pop
cmp
mov
test
shl
js
inc
dec
lock
jg
loopne
dec
push
sub
mov
repnz
roll
popf
xchg
xor
pop
fnstenv
test
pop
pop
pushl
popa
xor
sub
sti
dec
pop
push
cmp
add
or
xchg
sub
into
mov
loopne
in
sub
xor
repnz
xchg
aaa
push
dec
fistpl
jns
sbb
sbb
mov
push
mov
or
sub
dec
shl
push
lods
arpl
pxor
dec
xchg
imulb
jne
jno
push
mov
sbb
pop
scas
jmp
mov
dec
and
add
ja
mov
daa
mov
mov
sti
sub
adc
xor
adc
idiv
aaa
dec
jns
gs
sahf
xchg
imul
xor
loopne
or
loope
call
push
shrl
dec
rcrl
stos
jle
push
or
scas
loope
adc
push
es
xchg
das
pop
jns
xor
imul
ss
aad
jge
mov
int3
lcall
loop
cmp
shll
jns
popf
xchg
jns
aas
subb
pop
rcrb
fsub
jmp
dec
mov
sub
jmp
and
sbb
sbb
pop
js
stos
andl
out
push
fists
fstpt
iret
and
hlt
cmpsb
push
pusha
mov
dec
xor
mov
xor
repz
mov
or
repnz
cltd
stos
xchg
xlat
mov
cmp
sarb
xor
insb
cmp
jg
push
sub
xor
addr16
std
std
les
pop
shll
inc
pushf
cmpsl
jle
aaa
mov
push
fdivl
ja
adc
mov
and
cmp
loop
mov
sub
aaa
jne
imul
test
xlat
in
fstps
ljmp
xor
mov
add
fidivrs
lret
mov
or
pushf
shrb
fidivrs
movsl
fdivr
mov
push
and
xchg
jbe,pn
out
in
clc
cmpl
mov
pop
cmc
push
mov
fimull
sarb
jns
sub
scas
push
jl
fidivs
cmp
fs
ds
in
pop
cmp
sti
nop
sti
sub
leave
lcall
push
add
pusha
int3
data16
dec
lcall
dec
loopne
jmp
sub
and
adc
stc
imul
out
push
loopne
mov
lret
xor
adc
imul
stos
push
std
sub
and
add
xchg
dec
xchg
push
loope
jno
out
xor
pop
lret
sub
cmc
insl
int
pop
and
push
inc
push
enter
xlat
loope
sub
cmp
out
test
dec
fucomip
das
fsubr
lods
xlat
dec
xor
add
cmc
sahf
dec
sbb
lahf
bound
xchg
sbb
dec
dec
jmp
sarb
inc
bound
pop
rcr
mov
sub
clc
sbb
aad
test
add
lock
cmpsl
sti
loopne
sahf
shl
int3
push
shlb
fwait
int
addr16
out
sub
sub
rcl
stos
dec
dec
roll
lock
pushf
repz
cmp
dec
loopne
pmaxsw
sti
inc
mov
dec
ret
jmp
mov
mov
aaa
imul
daa
dec
call
mov
dec
pop
add
cmp
mov
and
loope
push
jmp
jg
jnp
test
xlat
das
in
jl
lds
lods
fadd
out
cwtl
orl
and
rol
pop
adc
push
ss
jg
cmp
and
dec
push
fnstenv
outsl
mov
dec
pusha
jb
daa
push
and
fs
or
or
les
and
in
inc
mov
dec
lahf
push
pop
cmp
nop
mov
jo
dec
sbb
mov
adc
xchg
push
stc
mov
xchg
xchg
add
adcl
clc
fldl
add
cli
sub
mov
adc
and
and
roll
adc
mov
sahf
push
mov
jl
pop
lahf
sub
imul
mov
ror
sub
insl
push
jns
mov
push
out
xor
call
dec
cmp
sar
into
pop
popf
mov
mov
or
or
cmp
sbb
into
fidivl
fisubrl
push
and
sbb
rcll
mov
dec
ficoml
sbb
test
or
sub
xchg
cmp
cli
ja
test
mov
xchg
or
jge
adc
lret
in
dec
push
fst
cwtl
dec
rcrb
pand
gs
mov
mov
inc
ffree
cmpsb
inc
sub
ret
mov
dec
ret
xchg
xchg
in
inc
test
xor
cli
cmpsb
imul
imul
xlat
out
adc
das
out
std
and
pop
testb
sbb
lret
popf
sub
dec
mov
pop
xchg
nop
arpl
xor
je
push
stos
xor
push
mov
add
push
dec
pop
test
push
imul
cmpsb
aas
repz
std
out
mov
rorb
das
lea
cmpsb
mov
mov
xchg
enter
cwtl
mov
xor
inc
movsl
add
ret
xchg
shll
out
push
out
add
call
sbb
testb
imul
mov
mov
xchg
push
mov
pop
adc
or
nop
icebp
arpl
or
ljmp
cmpsl
test
mov
mov
or
andb
mov
scas
sub
test
mov
xor
or
jmp
xchg
adc
mov
leave
lea
sbb
rorl
push
push
fistl
cs
mov
add
mov
push
xchg
shlb
movsl
pusha
pusha
pop
jp
push
cmpsb
sub
add
cmpsb
mov
stos
insb
inc
out
push
movsl
xor
dec
mov
mov
repz
lea
gs
insl
mov
cmp
xchg
sbb
cli
es
sbb
lret
and
fistl
sbb
xchg
xor
add
mov
pop
push
jnp
in
push
add
and
clc
mov
int
outsb
lahf
pushl
or
mov
and
iret
leave
inc
repz
inc
xchg
hlt
cmp
dec
cmp
imul
mov
xor
xchg
das
mov
adc
stos
shl
inc
sbbb
lea
pop
loopne
add
mov
xor
mov
dec
mov
jmp
stos
leave
mov
shll
pop
rcrl
xchg
lahf
xchg
movsl
repnz
sub
pop
pop
shlb
outsb
pop
pop
mov
mov
push
push
mov
jnp
add
test
xorb
mov
out
scas
adc
xchg
outsb
or
xchg
xchg
aad
shlb
pop
subl
jno
iret
lret
sbb
icebp
pop
js
xorb
ljmp
and
pmulhuw
shrb
xchg
xor
pop
in
push
ja
add
pushw
cli
inc
sbb
andb
sub
add
movsl
lods
add
jge
fcmovnu
sar
or
stc
push
imul
inc
arpl
inc
mov
sbb
pop
xor
std
or
jg
lds
icebp
ds
ret
addr16
outsl
inc
push
popf
or
mov
movsl
pop
jb
mov
cmp
xchg
add
push
mov
stos
out
add
hlt
pop
sub
adc
scas
mov
pop
or
ljmp
dec
cmc
cmp
cmpsb
sub
dec
inc
and
and
or
inc
mov
cmp
out
or
imul
pop
repnz
jne
push
mov
mov
push
xchg
aad
aaa
dec
mov
adc
xchg
into
mov
gs
stos
enter
jne
mov
or
leave
pop
jl
in
bnd
or
add
mov
push
scas
jl
movsb
push
insl
test
shlb
cmpsl
xlat
out
cmpsl
adc
pop
loope
inc
push
clc
push
and
into
or
arpl
push
sahf
mov
sub
push
mov
xor
cmc
xchg
cwtl
mov
mov
pop
mov
jb
ja
fisubl
sbb
cmpsb
sub
pusha
imul
fidivs
in
repz
popa
inc
push
icebp
std
and
rorl
cmp
int
mov
xchg
adc
dec
inc
push
adc
pop
push
mov
sahf
lock
and
outsb
iret
ljmp
mov
inc
inc
std
shll
pop
rorb
shrl
movsl
mov
add
ret
ss
push
aas
es
sbb
adc
jo
sbb
test
mov
cmp
test
mov
add
xor
sbb
test
fbstp
fmul
fisubrl
fmul
das
out
add
push
jmp
jbe
xchg
sbb
sub
movsb
nop
dec
shlb
xchg
test
jo
arpl
inc
lea
dec
dec
dec
mov
adc
jge
pop
push
lods
jecxz
jecxz
or
sbb
popa
sahf
xor
mov
fs
jl
pop
lods
sub
sahf
setae
jle
in
jbe
js
fs
xchg
sbb
rolb
cmc
adc
xchg
add
xor
gs
adc
inc
pop
push
adc
inc
lret
sbb
adc
and
addr16
pop
stos
leave
add
and
cmpsl
ror
or
xchg
or
pop
ss
mov
xchg
call
sub
adc
test
stos
aas
lret
dec
loopne
cmpsb
xor
stos
lods
imul
cltd
clc
fbld
push
mov
nop
dec
pop
pop
and
mov
scas
cmp
inc
mov
cld
mov
jle
pop
jle
add
pop
cmp
int
jbe
shlb
mov
mov
idivl
fdivp
ds
fildll
xor
stos
hlt
jb
fucomip
cmc
in
push
bswap
popf
leave
adcl
icebp
mov
in
pop
js
aas
fadd
or
addl
jns
mov
dec
push
jns
cmp
sbb
leave
imul
sbb
jp
or
scas
stos
vcomisd
mov
out
mov
pop
adc
mov
inc
and
mull
mov
push
cmp
mov
fmul
jp
xchg
xor
in
mov
dec
pmaxub
sbb
cmpsb
hlt
dec
adc
imulb
add
sbb
or
es
adc
loope
das
cwtl
inc
aas
inc
mov
cmp
into
sub
mov
cmpsl
lods
or
mov
cmp
imul
sub
cld
jg
adc
les
mov
fcoms
int3
out
inc
lock
or
fisubrs
cmp
dec
or
add
fcompl
pop
xchg
adc
sub
lods
cmp
add
cmc
mov
fcoms
lret
and
ror
sbb
inc
fdivrs
or
mov
mov
add
xchg
sbbb
pushf
fmuls
push
je
mov
mov
sub
lods
aam
std
mov
sbb
leave
push
or
mov
sub
sub
mov
and
sahf
mov
inc
mov
sar
jl
xchg
popa
lock
fcompl
inc
icebp
rclb
adc
lock
dec
ja
fcomps
cwtl
enter
pminsw
xchg
or
cltd
mov
sahf
das
loope
jmp
xchg
ljmp
push
adc
imul
gs
dec
mov
pop
in
dec
aas
fstpt
add
mov
out
sub
fstl
cmc
add
jge
lods
clc
rorl
vdivss
popf
jne
rcll
sbb
insl
dec
leave
cmp
pop
dec
jp
jbe
mov
push
pop
fidivs
and
and
clc
ffreep
add
push
lret
push
xchg
cmp
es
lods
inc
out
shr
insb
and
fldl
dec
inc
out
cmp
xchg
xchg
aas
mov
ret
and
fsub
mov
mov
std
jnp
popa
mov
xchg
into
ds
inc
insl
cli
pop
outsl
loop
and
push
push
mov
push
es
adc
inc
popf
jnp
mov
xchg
mov
inc
ret
xor
mov
mov
xchg
ljmp
rorl
cltd
insl
pushf
aas
mov
sub
test
imul
je
pop
mov
mov
cmp
and
enter
push
sbb
scas
dec
sbb
in
stos
sbbb
popf
jne
pop
push
and
and
sbb
and
adc
sar
pop
pop
mov
jno
bound
insb
out
cltd
xorl
inc
mov
xchg
sti
push
test
fmull
xor
push
mov
push
movl
loope
mov
xchg
aad
sbb
fmul
cmc
jl
fistl
jns
scas
xchg
test
stos
lret
and
aas
jb
ljmpw
cld
cmpsb
mov
push
mov
mov
jo
ret
insl
in
fdivl
cmc
sbb
test
pop
andl
inc
in
in
add
jle
call
leave
push
in
ror
and
clc
sbb
jae
mov
or
inc
pop
fstl
mov
xchg
ja
add
fucom
sub
sub
mov
adc
out
xchg
aam
nop
pop
addr16
lret
pop
mov
mov
or
pop
or
jne
arpl
inc
lods
out
fbld
mov
test
shrb
cmp
jb
repnz
in
pop
push
xor
xor
dec
cmpsl
lret
aad
test
push
dec
adcb
aaa
push
inc
inc
inc
inc
std
fwait
dec
mov
adc
mov
push
and
sahf
movsb
test
lcall
subb
lods
cmp
lods
inc
mov
repnz
fdiv
sahf
or
fs
fs
outsl
jnp
smsw
jbe
fisttpl
ds
lahf
mov
pop
fisubrs
and
mov
sbb
arpl
neg
stos
xchg
dec
imul
pop
cmc
mov
push
aaa
sbb
xlat
movsl
dec
nop
jo
mov
lahf
aam
fldl
push
dec
popf
fisubrl
aam
add
idivb
icebp
inc
xchg
sub
xchg
adc
in
test
xor
pop
lds
ja
xor
ret
cld
mov
in
and
and
gs
pusha
or
and
in
movsb
cwtl
jns
inc
pop
push
add
out
mov
sbb
xchg
lock
dec
inc
jb
stc
fmuls
je
jl
sbb
inc
pop
xor
mov
jmp
cmpsl
repz
shll
dec
call
cs
and
pop
xor
sbb
insb
sbb
out
mov
aaa
mov
xchg
cmc
jnp
cmpsl
jbe
adcb
mov
push
cmc
ds
notb
sub
std
rcll
add
add
insb
inc
mov
ljmp
ds
mov
add
cld
mov
mov
aam
dec
outsb
dec
or
cmp
adc
lret
out
push
push
stos
and
lcall
xor
dec
mov
jle
push
dec
pop
sub
jmp
sar
sti
xor
cmp
sub
push
dec
sub
or
sbb
inc
lods
mov
js
add
and
mov
test
cld
popa
leave
mov
cld
jb
fcmovu
or
adc
or
or
hlt
xchg
jmp
stc
cld
iret
add
cmove
popf
aad
mov
insl
loope
pop
stc
xchg
sub
xchg
add
jg
ljmp
sbb
dec
test
lds
pushf
movsb
in
test
sub
out
pop
out
jp
repnz
shrb
or
cmp
dec
lds
insl
xor
hlt
outsl
or
xchg
int
insl
in
int3
or
mov
gs
aas
cmp
pop
into
test
push
les
pop
idivb
jne
add
pop
data16
test
iret
xchg
stos
jge
enter
adc
xchg
rorl
outsb
test
scas
stos
popa
add
arpl
pop
rcrl
sub
dec
mov
cld
adc
lret
jbe
loop
ds
mov
fstp
mov
dec
test
mov
pop
jp
cmp
inc
shll
mov
lret
sbb
test
idivb
dec
mov
mov
dec
stos
mov
mov
into
lock
sbb
sar
fcomip
adc
scas
sbb
enter
push
adc
into
mov
sbb
out
aad
cmp
sarb
int3
fstpt
xor
lea
sbb
sub
fwait
ds
mov
mov
sti
and
int3
arpl
xor
scas
ds
mov
fldenv
subb
push
fsubs
repz
cmpsb
scas
sbb
or
xchg
mov
stc
push
push
mov
xor
push
rcrl
adc
sub
cmpsb
fisttpll
add
rorb
jp
sub
adc
sub
fimuls
sub
rcl
mov
mov
cwtl
mov
test
aaa
and
imull
out
add
enter
aaa
ds
inc
loopne,pt
bound
sbb
add
insl
or
mov
cmpsl
dec
xchg
imul
fmuls
aas
or
jno
pushf
add
xor
sub
add
or
dec
sbb
inc
sti
lock
loop
sub
pop
adc
loope
call
movsb
rorb
idivb
inc
mov
iret
movsb
arpl
jg
test
pusha
xor
mov
adc
pop
xchg
lahf
daa
outsb
stc
loopne
and
leave
push
xchg
daa
mov
stc
aam
iret
add
roll
and
or
rol
cmc
push
add
push
pop
test
adc
mov
dec
fcomps
and
pop
add
arpl
push
orb
das
nop
insb
mov
jecxz
ss
jno
jle
outsb
xchg
insb
nop
pop
mov
jnp
andl
add
jnp
pop
dec
push
sub
loop
inc
fiaddl
mov
push
mov
dec
or
shrb
push
outsl
roll
sahf
nop
scas
mov
cmpsl
fcom
fs
mov
lret
sub
jae
adc
xchg
stos
mov
cmp
subl
sarl
test
xor
sbb
fisttpll
sbb
mov
cltd
pop
lds
mov
mov
ljmp
add
xor
das
cld
sub
sbb
jle
mov
inc
push
bound
movsb
lods
push
jae
int3
lcall
cmc
and
sbb
lods
imul
sbb
or
jae
sub
pushf
mov
push
dec
lea
xchg
rcll
pop
outsl
pop
inc
mov
adcl
fmull
mov
out
or
imul
insl
ret
inc
mov
lds
and
cltd
push
add
das
adc
data16
gs
or
push
mov
mov
adc
lcall
out
out
xchg
mov
or
adc
cmpsl
inc
fmull
je
mov
xchg
aas
cmc
setle
fldl
hlt
jo
push
push
and
inc
cmp
pop
out
xor
mov
sbb
jo
arpl
rcl
jge
jp
adc
test
das
hlt
mov
xchg
mov
jnp
mov
add
and
loopne
mov
repnz
and
test
push
sub
add
jg
xchg
aad
mov
xlat
dec
sbb
inc
in
rorb
cld
mov
into
pop
sbb
pushf
xor
fidivrl
cltd
inc
push
call
icebp
mov
clc
popf
sub
add
jl
aad
inc
jo
add
cwtl
js
add
pop
mov
dec
popf
into
sub
insl
loope
dec
pminub
addr16
outsb
pop
inc
sahf
xchg
movsb
outsb
cmp
xchg
jo
hlt
add
pop
fstl
fs
xchg
cmp
mov
insb
pop
int3
push
lea
das
push
ficoms
clc
shrl
shrb
mov
pop
in
ret
push
or
mov
imull
pop
adc
inc
clc
mov
ds
jbe
pushf
mov
pop
mov
rcll
cmp
insl
push
fwait
push
xchg
loopw
or
dec
and
push
mov
xchg
aad
push
sbbb
movsb
mulb
loopne
xchg
js
jmp
jno
add
and
ret
xchg
jecxz
mov
xchg
les
aaa
xchg
jp
and
loope
in
and
push
inc
outsb
xchg
sbb
lods
adc
xor
xor
push
mov
inc
push
add
sbb
sarl
dec
mov
add
fsubl
jp
sub
pop
jbe
xchg
mov
stos
into
es
jmp
lock
jecxz
push
les
dec
ja
adc
aas
jno
outsl
add
lret
fnstsw
lret
stc
push
fwait
and
pop
dec
popf
pop
push
jl
push
mov
cltd
scas
hlt
inc
jae,pt
mov
inc
mov
jns
repz
sbb
jb
dec
sub
sub
mov
inc
repnz
xlat
insl
sub
push
and
fcoml
clc
loope
inc
pop
pusha
or
mov
pop
xchg
cmpsl
mov
jne
cmc
xchg
clc
push
cmc
rcr
addr16
pop
outsb
adc
lcall
cltd
stos
sub
gs
lret
push
scas
inc
sarb
imul
lods
imul
aam
and
incb
mov
xor
xchg
lods
cmp
lcall
mov
push
mov
jmp
mov
daa
fs
addr16
sar
mov
ss
cmpsl
pop
push
insl
xchg
rcll
scas
pop
cmpsl
adc
lea
orl
arpl
mov
clc
add
fimull
cmp
mov
scas
cmp
xchg
mov
mov
cmp
mov
loop
jle
push
adc
jl
jmp
push
scas
push
js
pusha
pop
sub
xor
mov
inc
inc
call
sbb
mov
sbb
lea
push
in
sub
imul
sub
dec
jb
jg
fbstp
jp
mov
int
jp
add
inc
xor
add
in
orb
cmp
mov
dec
test
push
mov
cmp
push
movsl
mov
push
inc
ss
fbld
int3
outsb
inc
or
cmpsb
call
sub
cs
mov
cmp
push
dec
test
mov
das
mov
inc
adc
mov
jno
fwait
adc
daa
dec
hlt
pop
cmpsl
out
or
add
lret
pop
and
xor
cmp
int3
loopne
push
jbe
dec
pop
push
int3
cld
push
lret
push
sub
out
fwait
mov
adc
mov
and
sbb
std
stos
push
push
ret
aaa
jmp
sahf
mov
mov
imul
scas
orl
mov
je
push
mov
mov
inc
aam
xor
cmp
divl
add
jnp
sbb
pop
mov
orl
cpuid
fildl
mov
pop
lcall
mov
cmc
lock
xchg
es
lods
loope
loop
xor
loop
addr16
sbb
movsb
popf
popa
pop
xor
mov
jp
int
enter
mov
jecxz
lods
mov
cltd
into
mov
imulb
idivb
cs
sub
outsb
cmc
pop
add
stc
and
sub
mov
syscall
jg
xlat
bound
pop
push
jae,pn
mov
adc
dec
mov
push
sbb
sub
push
stc
mov
mov
cwtl
cmp
mov
loopne
leave
lods
outsl
lahf
fwait
repz
xor
movsl
adc
xorb
and
push
jns
mov
xchg
fisubrl
jns
pusha
or
hlt
adc
int3
inc
pop
cmp
out
add
test
xchg
sahf
stos
dec
dec
and
sub
cmpb
out
xor
inc
and
fldcw
data16
xchg
outsb
mov
hlt
xor
jecxz
into
sti
pop
idivb
stos
outsb
xchg
test
icebp
test
jge
sahf
test
add
sarl
outsl
add
dec
adc
js
lds
jns
ret
adc
stos
dec
or
sbb
sub
cwtl
sarl
mov
subl
clc
or
mov
inc
outsl
data16
jno
cmpsl
nop
xchg
pop
jno
jmp
xchg
cmpl
mov
cmp
cmp
pop
inc
jp
add
es
pop
push
iret
mov
lock
loop
xchg
dec
xlat
int3
adc
mov
or
pusha
xchg
scas
rcrl
adc
clc
xor
dec
adc
cmp
repz
inc
mov
ds
mov
mov
mov
pop
sbb
fisubrl
xchg
jno
dec
enter
mov
jo
dec
jge
fwait
sbb
cmp
dec
dec
aaa
cmc
push
push
call
xchg
xchg
dec
out
pushf
pushf
jle
stos
sub
xchg
xor
jbe
pop
loope
mov
aam
dec
imul
inc
fisttpl
ja
popa
push
pop
mov
xchg
lahf
and
or
jae
mov
out
aaa
sub
mov
psubb
push
in
mov
push
mov
mov
inc
das
mov
jno
insb
in
and
clc
mov
imul
pop
sub
add
adc
xor
jns
adc
xor
xchg
jecxz
add
inc
xchg
pushf
int3
sbb
test
dec
xchg
or
jb
dec
ss
mov
adc
shlb
mov
jnp
cmp
sbb
test
fucom
decl
sub
mov
mov
or
arpl
stos
loop
lock
pop
mov
mov
xchg
sub
shrl
lahf
sbbl
inc
jnp
add
xchg
inc
adc
pop
adc
xchg
sbb
xor
insb
mov
iret
stos
push
arpl
mov
cli
push
jb
jl
cltd
icebp
jp
ss
push
fisttpll
out
std
xchg
pushf
popa
int3
and
lret
pop
jl
pop
pushf
sbb
lret
fsubrs
xor
xorl
sub
shrl
dec
hlt
or
fcmove
repnz
imull
test
xchg
jno
mov
lods
cmp
push
jg
aam
cmp
sub
add
leave
push
sti
scas
sub
imul
ret
adc
in
and
aas
sbb
jecxz
mov
shl
push
out
aas
dec
xor
sub
inc
or
fiaddl
cmpsl
test
movsl
xor
cmp
cld
insb
pushf
test
add
scas
daa
dec
jmp
cmp
inc
leave
jnp
ret
adc
pop
call
repz
or
shl
lods
lea
cmpsl
outsb
lds
divl
aad
mov
pop
aaa
aas
or
pop
and
or
inc
and
hlt
xor
mov
arpl
jb
push
inc
in
dec
mov
push
fcoms
mov
pop
mov
cltd
repz
movsl
add
pop
xchg
push
mov
or
jp
vpshlb
lods
cmp
dec
imul
lea
lretw
mov
shlb
aas
inc
ret
inc
sbb
mov
pop
add
pop
dec
je
or
pop
fisubs
xchg
and
jle
mov
ret
add
dec
inc
and
add
and
scas
pop
repnz
adc
push
rol
jb
pop
test
pop
les
pushf
lcall
xchg
fsubs
ret
mov
sbb
decb
sbb
divl
lret
adc
mov
cmp
std
fdivrl
xor
fisttpll
add
into
pushf
jp
ja
sub
faddl
xchg
sbb
xchg
cmp
out
push
mov
xor
cli
push
add
popa
xor
push
sqrtps
and
ret
nop
arpl
jne
jl
data16
test
cld
dec
outsl
dec
adc
sti
out
sub
jge
dec
add
rcrl
mov
jp
repz
mov
add
mov
push
push
sbb
jl
cmp
sbb
push
cmpsb
inc
cld
scas
sbb
mov
xchg
mov
dec
mov
inc
push
shll
ljmp
and
arpl
push
pop
mov
dec
dec
stos
mov
imul
sbb
or
sub
jo
jl
xchg
ficompl
add
out
dec
repz
push
push
fdivrl
cmp
add
inc
int
mov
push
adcb
sbb
mov
hlt
jle
sub
and
in
loop
xchg
pop
ds
xor
inc
xchg
jmp
add
inc
mov
in
ret
and
jns
sub
inc
mov
adc
mov
sub
add
and
pop
adc
dec
dec
icebp
mov
pop
adc
sub
mov
repz
test
jo
cmp
call
out
inc
sbb
push
ja
nop
nop
fimuls
or
lea
add
jl
cmc
xor
aas
pop
rol
push
push
loop
or
mov
xchg
or
in
ja
add
jne
shrb
xchg
xor
mov
mov
pop
adc
push
cmovne
in
add
in
das
es
cld
mov
and
daa
inc
pop
jns
int3
cmp
sub
xor
mov
xor
loope
jle
mov
out
ficoml
fiaddl
jae
pushf
sti
inc
outsb
ss
add
xor
mov
pushf
imul
push
sub
sti
fmull
test
xchg
push
pop
ljmp
sub
cli
xchg
jnp
cmp
cs
dec
sbb
scas
aad
jg
push
adc
sub
loopne
outsb
push
xchg
rcl
sub
sub
push
nop
arpl
jle
mov
push
je
mov
in
jmp
call
push
and
cmp
lret
test
fistps
pop
jecxz
call
mov
imul
adc
push
sbb
and
push
daa
mov
test
pop
popf
jbe
lret
icebp
mov
insb
cmp
or
or
jbe
lahf
mov
pop
or
lods
ret
cmp
mov
arpl
push
and
xor
sahf
arpl
into
loope
mov
divl
adc
int3
push
adc
outsb
cwtl
cmp
mov
or
pop
adc
outsl
imul
jl
push
lods
mov
mov
jge
jns
dec
or
jbe
mov
jns
pop
ret
test
mov
and
jae
dec
push
xchg
imul
arpl
daa
cmpsl
iret
jp
daa
cmp
rol
cmpsl
rcrb
mov
mov
out
pop
testl
xchg
jns
movsl
std
movsb
ss
rorb
mov
int3
dec
mov
lcall
add
push
or
xor
test
mov
daa
lds
call
lret
ret
pop
and
cmp
les
shld
cmc
add
xchg
xchg
in
add
mov
sub
pusha
sub
push
fnsave
pop
aaa
stc
mov
sbb
jae
xchg
lods
stos
xor
das
aas
outsl
pop
sbbb
sub
adc
dec
pop
scas
jo
xor
ss
icebp
mov
sbb
push
pusha
jle
ljmp
adc
mov
or
cld
rcll
fs
pop
rcll
sbb
mov
inc
pop
movsl
repz
pop
mov
insb
mov
in
nop
lcall
and
mov
dec
push
addr16
mov
imul
adc
push
enter
dec
xlat
inc
lret
out
mov
std
out
rorb
pop
nop
pop
js
lods
xchg
jecxz
out
test
sub
loop
repz
iret
mov
pop
sbb
xchg
mov
repz
in
aaa
int3
inc
add
cmp
push
jo
xor
inc
in
and
pop
out
fildl
xchg
mov
cmp
dec
mov
adc
mov
psubusw
sbb
out
mov
mov
mov
jmp
mov
int
dec
iret
jge
movl
subb
lods
test
xchg
fildl
mov
int
stos
xchg
into
add
mov
cmpsl
out
push
insb
dec
outsl
pop
xorl
xchg
or
cmp
xchg
das
ja
jp
data16
fsub
jnp
cmp
out
add
test
gs
mov
xchg
and
pop
pop
xor
in
mov
cmpsb
add
movsb
jnp
hlt
mov
push
add
xchg
lds
pushf
fcom
sub
mov
xor
in
movsl
mov
xor
leave
lock
pop
fildll
daa
scas
lods
repnz
daa
cmpsl
aas
loope
pop
mov
mov
clc
fcoml
andl
lret
loope
aas
adc
icebp
push
outsb
sarl
stos
xor
pop
add
inc
pop
adc
fidivl
gs
jg
icebp
lds
fstps
push
inc
mov
xchg
popf
imul
repz
add
imul
xchg
jge
add
and
and
movsl
mov
sub
and
into
loopne
ja
mov
das
test
mov
xchg
out
pop
cwtl
pop
bound
popa
sbb
sub
js
ja
cltd
out
dec
sub
xchg
lea
cwtl
imul
roll
or
int3
scas
push
adcb
adc
pop
mov
movsb
pushf
iret
inc
sub
push
mov
mov
ja
out
out
sub
add
loop
dec
pusha
jae
cmpsl
push
pusha
fcmovnu
lahf
push
or
mov
ljmp
add
jbe
sub
iret
fidivs
dec
and
jmp
into
out
cmp
call
fimuls
inc
pusha
push
ffreep
push
and
imul
sbb
sbb
andb
and
je
or
scas
xlat
push
cmp
lods
bound
mov
cmc
sbb
mov
push
aas
in
sbb
adc
fisubrl
inc
fwait
pushf
subl
outsb
es
sti
xchg
adc
pop
push
adc
mov
or
push
xchg
or
pmulhuw
test
dec
jmp
fwait
sbb
mov
pop
dec
repnz
arpl
add
ds
lahf
cmp
pop
int
jne
rolb
stos
repnz
inc
mov
negb
xchg
fistpl
clc
jno
and
mov
or
jnp
add
jne
sti
call
out
push
fwait
or
movsb
add
aaa
inc
mov
movsl
test
sbb
push
nop
mov
push
sub
jno
pop
dec
sbb
jl
jnp
sub
pop
lock
push
popa
cld
mov
inc
sub
fsubrl
insl
jb
push
and
sbbl
hlt
push
jb
leave
mov
pop
lds
out
fisttps
scas
cltd
leave
cmp
popf
pop
insl
pop
movl
data16
inc
mov
loopne
outsb
test
push
dec
mov
pop
push
push
bound
dec
bswap
cs
mov
jmp
ja
aas
dec
mov
dec
and
loope
sarb
adc
dec
fcoml
sub
mov
cmpsl
pop
pop
mov
clc
into
addr16
rolb
ret
adc
push
cli
imul
icebp
pop
add
adc
test
adc
shrb
out
or
test
mov
mov
aas
jb
xchg
cmp
loop
cmp
dec
push
ja
sti
data16
or
add
nop
fwait
clc
cmp
pop
dec
int
sub
mov
js
adc
sbb
jecxz
xchg
int3
ljmp
std
popf
push
mov
jp
icebp
dec
fldt
xor
rep
pop
or
inc
jp
adc
inc
les
adc
mov
lret
cmp
mov
jmp
cmp
dec
ret
adcb
xlat
cmp
jnp
in
pop
gs
mov
mov
jge
sub
fsubrl
sub
mov
mov
das
gs
sbb
mov
push
into
mov
enter
cmp
push
mov
cmp
pop
imul
sahf
in
jg
sub
ret
push
scas
adc
mov
out
pushf
mov
fisubl
lods
data16
jecxz
cmp
and
inc
hlt
cli
loopne
add
adc
data16
imul
jno
sbb
lcall
aam
loopne
add
ljmp
data16
out
mov
stos
pop
add
in
mov
into
pop
insl
inc
inc
fs
jp
pop
dec
mov
fimull
xchg
outsl
pop
push
mov
and
cmpsb
scas
push
mov
daa
lock
lock
jae
cmp
inc
xchg
popf
lahf
dec
and
sub
sub
loopne
ja
out
ret
int3
cmp
pop
popf
cmp
cmpsl
dec
inc
push
jno
dec
xor
lahf
rorl
xchg
ja
pop
scas
repz
cli
shrl
outsl
adc
adc
dec
push
add
adc
in
cld
and
inc
pop
add
adc
sbb
inc
call
sar
mov
push
jnp
xchg
aam
push
sti
or
inc
ret
movsl
pushf
lods
pop
dec
add
outsl
fimuls
pop
dec
jp
adc
sbb
stc
lret
jno
add
addr16
out
xchg
sbb
adc
pop
xchg
sbb
adc
xor
pushf
jbe
push
push
cmc
mov
fisttpll
in
jp
pop
mov
jne
sarl
inc
cmp
daa
ret
push
or
or
push
jae
pop
imul
add
orb
mov
dec
cltd
insl
in
out
ret
loope
clc
movsl
hlt
scas
adc
and
and
sub
leave
mov
inc
aam
fstpl
bound
xchg
or
xchg
push
in
cwtl
cmpl
shll
inc
or
mov
test
or
std
in
ret
dec
adc
into
outsb
in
xor
mov
dec
adc
dec
outsl
dec
aas
dec
adc
sbb
lahf
sbb
lcall
mov
mov
test
dec
test
clc
push
cmp
jecxz
notb
rorl
ret
scas
cli
fdivl
jecxz
dec
mov
push
pop
pop
push
adcb
sub
mov
mov
leave
cltd
fisttps
cwtl
inc
xlat
adc
jb
inc
scas
xchg
jae
hlt
je
mov
sbb
movsl
mov
ja
aam
hlt
cltd
mov
adc
test
div
imul
xor
notl
xchg
shrl
dec
bound
xchg
jne
xchg
dec
in
gs
les
xor
stc
cwtl
rolb
ret
dec
and
push
hlt
xchg
push
imul
outsl
sbb
gs
enter
popa
fistl
push
imul
push
xchg
push
pusha
std
mov
movsb
or
pop
ss
call
jo
cmp
out
mov
add
pop
loope
les
fiaddl
cli
pop
jg
cld
je
ficomps
xor
push
cwtl
sarl
test
mov
xchg
xor
loop
lea
int3
adc
je
leave
inc
dec
lods
es
dec
sbb
sub
mov
ds
int
sbb
or
shl
fbld
fstps
add
stos
fwait
push
push
sbbl
mov
jg
and
push
ret
out
ss
pushf
or
or
adcb
mov
sub
pop
dec
mov
push
mov
pop
mov
xchg
mov
cmpsl
stc
mov
xor
lods
and
int3
stos
loop
sub
inc
xchg
daa
fldpi
mov
dec
jae
mov
iret
xor
mov
repz
ja
stc
inc
scas
test
arpl
xchg
mov
mov
mov
pop
pop
xor
cmp
push
clc
sub
xor
sbb
push
jmp
jae
push
int
sbb
imul
or
mov
mov
push
adc
jecxz
sub
xor
and
sarb
cmpsb
lea
sbb
jns
mov
sbb
arpl
xchg
clc
or
cmpsl
mov
je
pop
arpl
loope
dec
jg
xor
and
push
lds
roll
mov
mov
xchg
insb
jle
mov
hlt
jno
iret
divl
inc
js
pop
bound
ret
stc
mov
dec
adc
cmp
cmp
pop
mov
push
shlb
jecxz
dec
cmpb
pop
pop
loop
adc
push
mov
test
std
sbb
mov
or
test
push
xchg
adc
push
pop
mov
test
add
cwtl
dec
mov
int
mov
pusha
adc
shlb
sbb
fdivrp
push
adc
sub
out
xchg
mov
popa
cmpsb
pop
in
push
cmp
cmpl
scas
hlt
push
in
xor
lods
scas
rolb
mov
mov
or
adc
and
fidivrl
dec
xchg
out
sbb
dec
lea
dec
sbb
and
iret
lock
sti
fmul
inc
js
sub
test
push
push
outsl
ja
bound
outsl
adc
pop
mov
and
push
jle
dec
mov
mov
aaa
shlb
dec
fxch
add
sub
xchg
jb
or
icebp
dec
movups
pop
inc
adc
fwait
pop
aam
jno
sub
lds
fstpt
cmp
out
call
mov
jl
and
inc
dec
sbbb
and
sub
aad
pop
int
inc
aaa
data16
and
addr16
addl
out
dec
shr
push
les
rcrb
add
ss
daa
add
rcrb
lret
and
arpl
popa
das
mov
xor
mov
orl
ss
inc
sarw
xor
jmp
xchg
sub
pop
inc
rolb
sbb
and
es
jo
insb
mov
inc
adc
aas
divb
std
call
movsl
and
dec
xor
test
mov
mov
cmc
cmp
dec
mov
out
enter
int3
jb
in
subl
ret
mov
dec
push
lret
sbb
scas
jl
inc
add
loop
mov
sbb
icebp
in
or
imul
push
dec
test
jae
js
or
sub
mov
push
sbb
mov
sbb
jl
lock
mov
inc
out
push
xor
cmp
shlb
ret
inc
loope
stc
inc
pop
push
movsb
inc
pop
call
xchg
jne
lods
sbb
push
pushf
nop
mov
repnz
test
ud0
subl
das
sbb
cli
cmpsl
push
std
pop
jb
roll
imul
mov
or
shr
or
in
xchg
or
mov
xor
pop
fidivs
lea
iret
pop
adc
jg
repnz
push
mov
xchg
push
xor
addb
cmpl
inc
stos
mov
sub
xchg
insl
iret
divl
adc
dec
push
push
int
cs
inc
lds
lahf
dec
fadds
lods
mov
dec
adc
subl
xor
sbb
sbb
repz
mov
sub
xor
and
cmp
in
imul
insb
or
cltd
mov
xchg
in
mov
dec
mov
pop
fxch
ljmp
loope
mov
test
cmp
xchg
in
ss
enter
dec
outsb
imul
fisubs
shlb
addr16
aas
sbb
fadd
jbe
cmpb
mov
pop
call
mov
jbe
addr16
int
sbb
sbb
dec
lcall
mov
ds
mov
lret
push
jp
xor
test
in
pop
jge
fdivrs
pop
sbb
adcl
hlt
hlt
idivb
imulb
cltd
repnz
jecxz
or
fldcw
mov
int3
cmp
cmp
lods
jg
adc
jg
ja
imul
out
loop
sbb
mov
pop
out
fsubrl
cmp
test
es
mov
inc
add
lock
xchg
push
popa
stc
xor
push
hlt
xchg
call
mov
into
adc
jge
out
inc
sub
mov
imul
cs
xor
dec
cld
xor
addr16
mov
mov
xor
or
andb
xchg
shlb
jns
adc
ljmp
sarb
negb
jg
pop
jmp
ficomps
sahf
ds
scas
adc
push
sbb
xchg
in
push
xchg
mov
cmpsb
pushf
push
and
es
scas
into
xlat
push
into
xchg
push
jne
jno
xchg
popf
enter
out
shr
repnz
std
mov
dec
xchg
dec
int
or
das
insl
jb
fsubrs
cmpsl
les
jnp
lock
fdivr
mov
adc
pop
push
sub
xor
ret
jg
imulb
mov
int3
sbb
and
repnz
cmc
xchg
add
ficompl
and
jne,pn
xchg
cmpsl
test
sbb
mov
dec
inc
cmp
int
test
xchg
stos
adc
test
jecxz
fistps
lods
add
push
aad
ds
imul
mov
dec
jae
lret
test
cmpsb
mov
push
in
fildl
imul
adc
lods
push
imul
mov
test
pop
ja
push
pop
movsb
movsb
add
iret
shl
daa
push
jno
jecxz
cmp
inc
loope
xor
inc
cmp
pushf
data16
pop
ss
ret
sbb
dec
cmp
je
jb
daa
ds
inc
in
loop
xchg
es
ljmp
es
sarb
dec
add
leave
xchg
icebp
roll
mov
inc
imul
ss
movsl
scas
loopne
or
fdivrs
jmp
call
int3
push
push
and
popf
leave
mov
cmpsl
lcall
push
mov
movl
jle
fdivl
inc
push
jbe
xchg
lea
push
iret
in
stc
mov
lea
xor
cs
jne
xchg
cmpsl
or
xchg
or
adc
pop
inc
dec
lods
adc
sbb
insl
les
push
mov
jmp
mov
int3
stos
cmc
cmpsb
dec
pop
pushf
pop
ljmp
mov
fcmovnu
pop
adc
push
push
xchg
jo
pop
fdiv
bswap
mov
xchg
push
ja
stos
sbb
data16
rcr
sbb
pop
push
fimull
sbb
cmp
xchg
in
imul
mov
out
mov
lcall
cmp
lods
ret
lock
mov
jle
test
or
test
pop
mov
sbb
inc
test
jmp
push
int3
pop
es
jg
sub
xor
sbb
test
popf
mov
pop
or
or
pop
gs
sbb
repnz
push
sub
and
imul
subb
sbb
rolb
dec
cmp
jp
pusha
mov
iret
or
gs
popa
rcrl
ds
dec
add
dec
mov
ficomps
mov
test
jle
arpl
cli
pop
xor
nop
mov
xchg
xor
mov
pop
icebp
andb
jge
mov
add
inc
push
int
add
mov
clc
in
lods
and
inc
and
fmulp
enter
and
push
add
lea
ret
mov
cmp
loope
dec
repnz
gs
fiaddl
ret
inc
sti
mov
add
inc
mov
repz
push
hlt
mov
cs
jnp
jno
mov
pop
ljmp
js
inc
mov
inc
fdivrs
sahf
jp
xor
xchg
imul
fnstcw
cmp
mov
hlt
stc
push
fistpl
push
andl
cwtl
lret
xchg
fsubl
cmp
enter
insl
jno
out
test
popf
rcll
pusha
fdivs
loopne
insb
lock
cmpl
xchg
jp
sub
insl
loopne
stos
mov
xor
lea
test
pop
aas
push
clc
and
sbb
pop
cltd
push
aad
dec
fwait
hlt
xor
mov
stc
xor
icebp
mov
mov
loope
push
mov
lcall
pusha
in
or
es
mov
push
add
or
loope
mov
ja
mov
pop
les
gs
cmpsb
mov
xchg
mov
xchg
xor
xor
pushf
add
pop
fwait
adc
jo
test
or
dec
outsb
ljmp
mov
xchg
orl
je
add
fisubrl
inc
aad
xchg
sub
scas
mov
xchg
cli
das
fisttpl
sub
mov
push
pop
jnp
pop
bnd
adc
jp
les
and
inc
mov
test
inc
aas
inc
mov
add
mov
push
mov
sbb
mov
scas
jno
adc
inc
mov
sbb
adc
mov
sbb
or
pop
xchg
or
push
shrl
iret
imul
sub
rclb
rorl
std
push
pop
nop
in
sti
out
mov
lcall
lahf
mov
movsl
outsl
loop
jae
sti
nop
cmc
test
fistpll
std
jg
call
xlat
sarb
xchg
rclb
dec
stos
lahf
shll
xchg
cmp
xchg
pop
aas
lods
mov
loop
mov
fidivl
mov
mov
daa
mov
sbb
test
cmp
outsl
mov
outsl
push
outsl
int3
jnp
cmp
xchg
stos
pop
pop
out
lahf
push
bound
mov
aas
rolb
fcompl
mov
xor
xchg
stos
cld
mov
sahf
or
pop
fistpl
push
out
scas
fisubs
adc
repz
pop
daa
mov
add
xchg
mov
out
inc
adc
xor
daa
push
movsb
adc
mov
test
mov
insl
and
xchg
pop
ret
data16
and
mov
push
std
pop
dec
mov
into
jle
mov
xchg
inc
flds
in
mov
pop
sub
adc
push
jns
addr16
out
lods
movsl
lock
or
fdivrs
nop
adc
mov
fisttpl
test
dec
hlt
jmp
ret
data16
mov
in
inc
lods
mov
ret
gs
bound
pop
mov
mov
in
mov
insl
imul
pusha
mov
push
mov
pop
dec
dec
and
pop
nop
fs
mov
or
xchg
fdecstp
push
js
insl
pop
mov
aam
cli
aas
pop
adc
int
fimuls
mov
and
mov
mov
test
jmp
jecxz
aam
mov
divb
sbb
adc
jnp
dec
stos
jg
pop
enter
lea
stc
ljmp
scas
inc
mov
inc
pushf
js
sbb
push
fsubrp
test
mov
pushf
dec
test
add
rcll
aam
xor
lds
stos
jl
shl
call
jno
sbb
mov
jp
dec
push
xchg
adc
test
mov
inc
sbb
aam
test
stos
cwtl
imul
out
mov
lcall
push
push
dec
adc
aas
pop
aas
call
cmp
fisttpl
pop
xchg
por
push
sbb
popl
pop
das
loope
pop
or
inc
sub
pop
popa
insl
jle
imul
cmpsb
sbb
xchg
fs
pop
lcall
xor
clc
mov
sub
inc
std
sarb
popa
jecxz
sbb
push
cmp
test
lcall
dec
mov
ret
pop
dec
roll
into
hlt
out
xchg
cmp
jge
inc
sub
insl
mulb
dec
in
clc
lcall
add
mov
cwtl
scas
lret
add
hlt
cmp
add
xchg
mov
outsb
iret
cmpsb
xchg
pusha
adc
or
jnp
mov
outsb
int
test
lcall
imul
push
sbb
ret
pop
call
imul
dec
cmc
mov
sub
push
or
sti
xor
dec
mov
pop
xorl
aam
sbb
lahf
mov
ret
jecxz
insl
xchg
add
or
xchg
leave
push
adc
push
leave
fabs
testb
out
and
int
test
mov
xchg
mov
fstpl
or
int
jmp
shlb
ljmp
sti
lret
andl
fisttpl
loope
pop
inc
clc
inc
inc
or
std
cmp
sbb
test
loop
cmp
mov
pop
jecxz
sub
inc
insb
stos
loope
xor
inc
popa
add
xchg
sbb
mov
bound
and
aaa
push
leave
or
push
jmp
or
jae
lods
xor
aaa
mov
stc
push
and
mov
insl
cwtl
popf
lods
mov
cmp
inc
inc
push
icebp
jno
aam
push
sbb
test
sub
or
push
inc
sub
repz
jg
jnp
xchg
xchg
pop
clc
scas
aad
cmp
dec
dec
dec
cmp
loop
sti
fcos
inc
cmp
sub
cli
jo
push
stos
adc
cmp
inc
je
popa
daa
sarb
inc
nop
cmp
std
out
decl
pop
xor
xchg
loope
daa
xchg
sub
sub
scas
enter
sub
aad
cwtl
dec
xor
in
or
fmul
and
test
sbb
outsb
lret
mov
xchg
jl
outsb
insl
dec
into
inc
dec
dec
jge
or
push
mov
movsb
cli
adc
flds
daa
mov
xor
out
fcmovnbe
cmp
mov
pop
mov
jge
fcoms
dec
out
cwtl
jle
dec
mov
sub
mov
cmp
mov
das
iret
jg
jb
cmp
fadds
or
sbb
and
enter
adc
dec
and
cmp
cs
or
add
cld
dec
insb
cli
or
xlat
int3
cmp
or
shr
xchg
fcmovb
adc
adc
sar
add
pop
es
or
xor
popa
add
push
clc
push
out
push
shl
mov
lea
push
pop
adc
aam
jecxz
lret
or
pop
mov
pop
fdivl
mov
mov
jbe
sbb
add
inc
fisttpl
mov
push
lock
bound
fcmove
and
imul
mov
stc
lock
loopne
das
xchg
leave
xlat
subb
and
adc
popa
ja
mov
repnz
mov
adc
lds
cmp
dec
push
daa
pushw
pop
inc
fcoml
test
scas
and
aam
xor
dec
cwtl
cmpxchg
ds
lea
rcrb
gs
xor
or
hlt
xlat
in
or
dec
xchg
push
and
insb
stos
xor
cmp
sbb
xor
scas
cmp
xchg
jl
cs
adc
xchg
xor
sub
lods
adc
mov
pop
mov
out
mov
mov
sahf
ljmp
jecxz
mov
or
mov
lods
ss
and
add
scas
js
jl
inc
and
lret
inc
rcrl
into
imull
push
xchg
xchg
ret
mov
push
inc
leave
pop
notl
leave
fsts
jb
push
add
mull
stos
push
aam
aas
and
popf
mov
or
add
push
mov
dec
inc
mov
dec
jg
xor
int
mov
int3
stc
adc
jecxz
out
adc
out
push
pop
bound
jge
mov
adc
xor
inc
out
call
pop
sbb
loopne
sbbb
outsb
icebp
popa
in
jns
sbb
mov
push
add
cli
in
loope
outsl
jae
loop
int3
sbb
and
jno
adc
pop
call
stos
sahf
xor
mov
sahf
scas
ljmp
mov
addr16
repz
fwait
xchg
and
push
jecxz
push
and
sbb
icebp
rorb
lea
mov
cltd
xchg
ljmp
xchg
mov
js
mov
jbe
pusha
ja
xor
loop
mov
into
bound
aaa
adc
fiaddl
inc
clc
loopne
ficompl
and
mov
jb
int3
movsb
aaa
xor
addr16
test
in
jns
sub
dec
jle
ret
push
sahf
jecxz
out
xchg
xor
pop
fcomps
jecxz
mov
pop
testb
or
ret
cwtl
jns
mov
aad
mov
xchg
stos
mov
xor
push
addb
loop
pop
jge
cli
rorl
arpl
sti
add
pop
sbbb
int3
enter
mov
mov
std
gs
pusha
mov
dec
pop
xchg
sbb
mov
sub
push
adc
mov
jle
add
movl
cmp
shrb
jnp
leave
sub
cmp
outsb
mov
arpl
jno
push
dec
in
sahf
fdivrs
int3
jnp
rol
stos
and
pop
int3
insl
xor
dec
mov
idivl
sbb
mov
fisttps
pop
ja
adc
push
push
jmp
scas
sub
push
lock
loope
cmpsl
loop
es
arpl
lods
sub
mov
inc
out
rorb
inc
pop
roll
std
or
mov
mov
sub
sarb
pop
xor
inc
adc
pop
sbbb
push
mov
mov
mov
int3
dec
lock
mov
lock
pop
aam
cwtl
iret
mov
add
out
cmpsb
mov
inc
jns
movb
push
sub
sbb
xchg
in
mov
imul
xchg
imulb
jbe
xchg
jmp
mov
fcmovu
pop
mov
xchg
int3
push
cs
in
xlat
int3
pop
loope
fdivs
aam
icebp
xchg
jnp
dec
dec
inc
cmp
sarb
js
mov
and
cltd
repz
adc
and
push
fldenv
xor
push
inc
push
dec
sub
sbb
cmpsb
rorl
lret
pop
js
cs
inc
jge
cmpsl
lcall
loopne
lea
int
mov
pushf
nop
pop
mov
cmp
or
mov
call
dec
out
cmp
out
push
cmp
mov
xor
adcb
pop
loope
rcrb
out
pusha
push
cmp
das
pop
jp
pushf
add
sbb
out
add
stos
ja
lahf
xchg
mov
fsubrs
jl
cmp
pusha
adc
data16
sbb
pop
gs
fisttpl
mov
adc
setno
mov
outsb
lcall
add
inc
sti
fs
pminub
xchg
sub
fwait
leave
sbb
or
pop
pop
stc
dec
jne
cs
inc
xor
xor
sbb
add
cmp
ja
lods
push
pop
ja
pop
sarl
imul
pop
sbb
ss
xchg
pusha
and
stc
in
lret
inc
imul
cmp
mov
mov
mov
cld
ficomps
jmp
imul
jge
mov
bound
cmp
je
insl
inc
popfw
cmpsl
cmpsb
pushf
jl
test
divl
sbb
inc
bound
add
xchg
test
bound
les
pop
ret
pop
ret
xor
fidivrl
inc
and
push
ss
cmp
pop
lods
jecxz
add
fsubrp
xor
test
lds
cmp
in
stos
sbb
idivb
dec
mov
push
orb
mov
mov
cld
es
loop
and
ret
fldl
leave
sbb
punpcklbw
call
sbb
mov
ffreep
cli
sub
ret
loopne
cld
subl
push
mov
jnp
xor
rclb
or
inc
imul
negl
fistpl
jo
enter
test
ret
cmpsl
push
out
mov
xchg
es
adc
inc
sbb
aaa
xchg
in
mov
arpl
add
jl
daa
arpl
jle
icebp
fimuls
pop
cwtl
inc
das
icebp
jge
lret
ds
mov
mov
cwtl
mov
push
pusha
or
cmpxchg
test
push
lods
or
inc
mov
sbb
add
aad
leave
ficomps
xor
hlt
xor
pushf
out
mov
xor
mov
jge
incb
fstpl
test
imul
pop
sbb
mov
inc
xchg
pop
and
mov
cli
aad
ret
dec
pop
mov
or
jl
sti
test
and
mov
data16
mov
dec
stc
fistps
xchg
jbe
pop
and
test
mov
xor
cmc
sahf
mov
imul
daa
outsb
or
mov
bound
js
ret
fisubl
pop
add
cmpsb
pop
mov
adc
sub
sub
dec
mov
adc
mov
pop
add
adc
vprotb
hlt
jp
fsubl
adc
mov
push
cmpsl
mov
cmp
sub
aam
push
and
cwtl
cmp
xchg
test
sarb
ja
mov
add
sbb
or
pop
jae
sbb
or
repz
xor
inc
sbb
lds
cs
fwait
cli
nop
mov
pop
fninit
cmp
dec
in
dec
xchg
push
push
sbb
fwait
add
enter
out
xor
push
add
fsts
lods
sbb
jl
sbb
push
fldl
mov
insb
mov
mov
leave
push
lds
inc
push
imul
sbb
pop
je
fwait
jb
mov
push
inc
sub
adc
mov
push
stc
int3
shlb
in
xchg
repnz
in
out
mov
xor
stos
subb
insb
cmp
out
add
mov
notl
es
iret
shl
sbb
pushf
pop
adc
aaa
movsl
leave
xchg
cmpsb
adc
push
push
inc
push
stos
fimuls
xchg
pop
bound
sbb
mov
rcrl
inc
je
sub
push
into
push
mov
lock
xchg
xor
out
clc
orb
lods
or
cmp
and
xchg
xchg
repz
mov
je
mov
and
popa
xor
cmp
fcmove
jbe
mov
aaa
mov
mov
cmp
jg
in
popa
push
jae
cmp
sbbl
adc
and
iret
dec
rcl
dec
sbb
loop
in
xchg
inc
jne
xor
shrb
test
sub
sarb
outsb
push
sub
sti
inc
or
sahf
jno
in
shr
xor
sbb
cmp
rcrl
adc
and
dec
sbb
inc
les
xorb
orl
les
inc
aaa
pushl
or
cs
aaa
and
jns
or
test
inc
cs
mov
mov
or
test
lods
jge
push
mov
jp
fstpl
sahf
mov
xchg
fwait
mov
sbb
jno
lea
out
loopne
loopne
push
test
pop
mov
jno
lea
aad
sub
mov
push
cld
nop
insb
es
fistps
aam
mov
xchg
out
push
dec
mov
mov
andl
push
sahf
lret
lods
movsl
cmp
pop
insb
scas
jb
jae
push
xor
negl
inc
mov
loope
sub
ret
xchg
adc
or
lahf
les
arpl
mov
and
cmp
xor
sbb
xorb
sub
mov
adc
lods
dec
scas
repnz
inc
mov
andb
call
ret
sub
aas
lea
dec
mov
jmp
add
xchg
dec
pop
das
and
in
fcoml
cmpsb
cld
ds
dec
dec
jle
xor
and
and
scas
cmp
mov
dec
pop
xchg
enter
das
push
roll
sbb
cmc
xor
out
stos
mov
int
insl
add
ret
sti
cltd
mov
sub
add
or
jnp
mov
divl
mov
in
sbb
jmp
or
cmp
pcmpeqd
xchg
aam
and
and
repz
pop
jae
shll
data16
pusha
xchg
inc
pushf
sbb
cltd
inc
xor
jge
mov
stos
in
clc
mov
jmp
fs
sbbl
loop
jmp
pusha
cmp
add
ss
fldenv
pop
ficoms
and
xchg
fldenv
push
adc
jb
pop
ds
js
shrl
and
jb
fadds
jns
jae
mov
xchg
mov
loope
fnstenv
xchg
insb
and
inc
jl
sub
cwtl
in
jb
inc
jnp
adc
mov
and
es
fildl
inc
stos
ja
dec
mov
lret
adc
dec
scas
enter
pop
cmc
lret
aas
hlt
push
lret
scas
inc
enter
jne
int
xchg
out
movl
lret
fadds
or
and
pop
sub
iret
push
lret
adcb
loop
shr
pop
ja
in
iret
movsb
in
cmp
mov
pop
push
push
movsb
in
jne
mov
sub
mov
mov
loopne
pusha
fsubl
testl
out
xchg
sub
and
mov
or
shl
lods
xchg
pop
adc
mov
pop
in
pop
adc
loop
scas
push
xchg
iret
fildll
mull
ljmp
fldt
nop
sub
adc
adc
in
imul
mov
xchg
mov
bound
in
adc
lock
inc
cmpb
mov
dec
lods
push
jg
or
pop
or
jge
sarb
ret
sbb
dec
imul
int3
popf
xchg
cmp
xor
mov
fldl
and
mov
outsl
js
mov
adc
pop
push
mov
rcr
data16
arpl
pop
xor
jle
fldt
and
mov
adcb
lods
pop
loop
dec
mov
pop
inc
mov
imul
les
dec
xchg
sbb
mov
bound
lret
lock
test
cmp
xchg
out
or
jge
arpl
clc
xchg
lock
add
adc
adc
add
mov
in
ret
js
clc
and
mov
mov
inc
subb
arpl
ss
sbb
push
and
mov
jp
jne
mov
lock
adc
or
xchg
mov
lcall
mov
xorb
lods
mov
test
pop
and
add
push
mov
jo
xchg
insb
lret
add
pavgw
adcb
fucom
bound
pusha
mov
xchg
fsubs
popa
rorb
jmp
cli
insb
and
and
push
xchg
push
xor
cltd
outsb
daa
sarb
dec
out
jp
mov
pop
cmpsb
pop
sub
dec
lods
or
shrl
pop
pop
cltd
clc
mov
mov
mov
shll
fmulp
sti
fidivl
sarb
outsb
mov
push
int
pop
jo
inc
clc
imul
push
gs
sbb
es
cmpsb
insb
mov
mov
stos
xor
iret
std
sti
jnp
lock
fnstcw
loop
clc
xor
fldl
in
pop
bnd
inc
outsb
and
pop
ja
mov
sbb
jne
adc
mov
sarb
or
sub
push
lret
mov
int
xchg
addr16
sub
dec
mov
mov
out
cmp
mov
mov
jge
sub
stos
mov
ja
mov
mov
cmp
incb
cmp
into
cs
cmc
les
jecxz
add
lock
dec
mov
loopne
cmc
or
and
fidivrl
add
popf
inc
jle
jae
cmpsl
mov
lret
sti
push
clc
jmp
shrl
jo,pn
mov
inc
mov
stos
lods
xchg
and
scas
dec
insb
and
and
in
aad
lahf
arpl
sub
xor
inc
out
in
push
or
imul
pop
nop
mov
dec
pop
mov
pop
xlat
or
aam
pop
adc
fs
mov
mov
daa
les
cmpb
jo
ret
sbb
cmp
push
js
mov
adc
push
mov
mov
cmp
mov
les
dec
fists
repnz
jmp
and
dec
push
jno
add
cmpsl
stc
test
xchg
pop
xchg
gs
cltd
xchg
cli
lret
dec
mov
lret
loopne
movsl
jnp
lods
dec
vmovhpd
popfw
mov
xor
mov
xchg
test
imul
jno
leave
testb
cwtl
stos
pop
mov
cwtl
les
mov
mov
mov
jo
cmp
jne
popa
xchg
cmc
or
in
sahf
out
sbb
aad
divl
aam
ds
movsb
cltd
stos
mov
inc
cs
inc
xor
xor
or
ret
mov
dec
loopne
fst
pop
data16
insl
xchg
or
gs
dec
adc
mov
sub
mov
cmp
nop
xchg
imul
mov
pushf
filds
add
out
das
testl
in
pop
mov
das
xor
call
mov
mov
xchg
stc
mov
sub
addr16
sub
fldt
or
push
and
loope
outsl
and
add
sbb
jo
push
mul
push
outsb
lock
xchg
gs
bound
scas
cmp
mov
and
pop
hlt
iret
xor
sbb
mov
push
test
das
mov
adc
pop
xor
push
push
and
fadds
test
jecxz
fwait
lea
fs
fsubrs
lcall
and
or
sbb
scas
jae
mov
sub
addl
dec
idiv
cwtl
stos
mov
pop
imul
scas
in
inc
inc
arpl
les
add
lahf
inc
mov
out
es
push
ljmp
cs
stos
loopne
aam
scas
fdivrs
bound
mov
mov
ja
fsubrs
arpl
xor
addr16
cmpsl
jmp
xchg
out
cmp
xchg
pop
fstpt
inc
mov
clc
inc
and
cmpsl
in
xorl
fidivl
xchg
roll
inc
scas
push
lret
sahf
adc
cmp
arpl
cld
mov
lahf
call
sub
es
or
xchg
jae
inc
pop
push
mov
pop
xor
cmp
xchg
and
inc
roll
mov
pop
mov
adcb
stc
add
dec
sub
inc
sbb
push
les
pusha
push
cs
pop
std
clc
lret
out
dec
lods
data16
lds
and
mov
pop
xchg
sub
dec
lcall
mov
das
jb
mov
shl
cs
add
dec
inc
pop
aam
pusha
push
fisttps
sbb
mov
pop
xchg
push
push
fmuls
xchg
mov
jne
sbb
xchg
push
ss
mov
jmp
loopne
adc
mov
es
test
out
pushf
roll
out
add
pop
repnz
jecxz
adc
and
shll
divb
sar
test
push
pop
jg
ds
mov
inc
xlat
cmp
stc
adc
pshufw
cmp
or
lret
push
mov
mov
fsub
sbb
loope
push
in
adc
jbe
arpl
push
sbb
loop
ret
jge
jno
sub
push
fildl
outsl
mov
cmpl
jae
and
pop
ljmp
add
mov
leave
cmp
or
adc
popf
lahf
cmp
and
das
mov
fsubs
nop
dec
and
fsubr
icebp
xchg
dec
lods
or
adc
jp
ds
jno
xor
je
ja
sti
add
popa
cmp
cmpsb
fnstsw
cmc
mov
xor
inc
mov
cmpsb
pxor
or
pop
fildll
movsl
jg
cmp
mov
pop
jns
fcoml
mov
push
jb
out
nop
and
pop
dec
jl
add
rolb
and
xor
idivl
xchg
sbb
mov
cmpsb
xchg
cmp
or
out
mov
and
cmp
mov
mov
mov
cwtl
push
lcall
repz
adc
aas
mov
xchg
or
pop
out
mov
pushf
inc
push
lds
cmp
jl
jns
stos
pop
add
cmp
dec
mov
sbb
fmull
in
loopne
xchg
leave
jno
imul
ror
fs
fs
cs
mov
movsb
push
icebp
jae
fildl
sahf
rcrl
rol
iret
call
push
lcall
das
in
aam
call
movsb
pop
movsl
push
or
popl
mov
aam
xlat
adc
mov
push
in
adc
je
inc
cmc
loopne
add
inc
dec
out
inc
mov
cli
aad
mov
fdivl
mov
pop
cwtl
sbb
into
xor
sub
mov
or
pop
mov
pushf
rclb
aaa
and
dec
add
cld
mov
pop
adc
cmpsl
or
inc
cmp
repnz
inc
pushf
imul
xor
xchg
and
sbb
lahf
pop
shr
jb
scas
pusha
in
pop
push
adc
xor
xor
mov
jmp
pop
imul
sub
je
xchg
js
mov
jbe
pop
dec
jbe
test
push
inc
mov
xor
mov
add
int3
or
imul
adc
gs
and
mov
stc
movsl
testl
out
add
and
cmp
push
jmp
stos
pop
dec
add
adc
test
cmpsl
add
mov
sahf
jle
pop
adc
and
pop
add
std
mov
rol
sahf
push
daa
ja
mov
loopne
mov
mov
dec
add
sub
dec
pop
int
inc
int
sbb
push
clc
or
paddd
scas
icebp
insb
cmp
xor
bound
jae
mov
push
cmp
add
adc
jo
pop
repz
or
xor
loopne
sub
repnz
ret
push
repnz
lods
or
inc
push
lret
ss
test
xchg
pop
inc
adcb
fs
and
mov
dec
movsl
xor
leave
or
insl
inc
bound
mov
lret
xlat
dec
xor
xchg
inc
adc
push
das
add
xchg
mov
aas
cwtl
mov
inc
loope
and
xor
imul
lea
cmp
leave
cmp
jne
sub
push
sahf
or
mov
es
xor
mov
imul
and
or
or
jmp
outsl
mov
inc
sti
sti
pop
sbb
lds
pop
mov
mov
movb
or
pop
adc
call
lock
cld
js
imul
xchg
int3
stos
sub
das
push
dec
jb
aad
pop
cwtl
xchg
aad
call
out
stc
int
lcall
mov
fdivrl
push
push
lods
push
sub
test
divl
out
fstl
mov
shrb
xor
xor
or
mov
in
test
nop
bound
cltd
adc
inc
iret
jg
cmc
ljmp
fstp
xor
xchg
popa
stos
jnp
cmpb
dec
pop
push
pop
jae
scas
dec
mov
adc
xor
xchg
adc
aaa
imul
xchg
add
pop
dec
cld
sub
xor
mov
pop
pop
cmp
in
lds
vaddpd
aas
sub
mov
loopne
jg
xchg
jnp
pop
dec
rcrl
adcb
adc
faddl
rcrl
es
jo
mov
mov
mov
xchg
mov
aad
cltd
push
out
ror
add
sbbb
inc
fimull
imul
fdivrp
push
xchg
addr16
or
test
int
mov
and
push
jno
lahf
daa
adc
aaa
xchg
je
mov
cmpsl
lahf
sbb
enter
clc
in
sbb
adc
inc
cmp
lret
movsl
adc
mov
icebp
or
lret
xchg
jae
mov
pop
out
mov
pop
push
cmp
cli
jg
push
xor
add
cmp
push
shll
or
pop
cs
mov
insl
rolb
ljmp
data16
dec
dec
es
shlb
dec
or
outsl
lock
adc
pop
xor
sub
loop
lret
xchg
ja
dec
dec
pop
jne
pop
mov
adc
cmp
xor
sbb
pop
sub
add
in
xor
test
cwtl
in
push
rcrl
push
push
jb
je
sub
or
das
insl
cmc
inc
insl
nop
jp
pusha
in
clc
mov
cmp
push
xor
sbb
or
dec
test
sub
stos
int3
jo
cmpsb
icebp
adc
jle
jmp
leave
sbb
cmp
cmp
dec
cmp
inc
fs
dec
inc
sarb
jbe
pusha
rcr
cltd
cmp
in
push
pop
add
sub
jp
leave
test
sbb
or
or
push
adc
in
cli
int
shll
pop
adc
mov
scas
incl
pop
mov
dec
loopne
dec
aaa
ljmp
fdivs
add
adc
sahf
ljmp
dec
popf
xchg
push
sahf
int3
inc
add
pop
jp
fsubl
inc
cmp
sbb
mov
mov
pop
out
cmp
sbb
xchg
flds
and
gs
jbe
clc
inc
ds
xchg
xor
cwtl
dec
lret
stos
scas
sbb
mov
cmp
mov
mov
cli
scas
arpl
int
jecxz
mov
cmpsl
sub
inc
fdivrl
xchg
ds
xor
shlb
arpl
push
adc
iret
push
je
into
repnz
xchg
clc
shll
jecxz
cmpps
jecxz
stos
jne
add
test
push
jl
or
fimull
subl
xor
aas
ds
cmpsl
scas
xchg
gs
jns
mov
sahf
mov
je
mov
sbb
pop
addb
stos
jns
dec
xchg
jnp
pop
adcl
add
add
push
in
enter
pushf
inc
jb
mov
dec
or
mov
lock
imulb
lds
es
shll
pushf
mov
adc
loope
test
jecxz
test
mov
je
mov
adc
cwtl
gs
aad
ljmp
mul
idivb
pushf
imul
pop
mov
mov
sahf
xrelease
mov
pop
shrb
mov
mov
test
sbb
out
jle
mov
negl
out
inc
dec
shl
add
pop
outsl
push
add
int
and
mov
cmp
ss
push
sbb
sub
mov
push
xchg
dec
lret
and
adc
inc
jecxz
shrl
cmpsb
sarb
jmp
inc
test
cwtl
cli
lret
xor
jmp
in
mov
imul
pop
in
push
nop
cmp
ljmp
mov
xchg
sbb
ss
clc
sti
xchg
add
fmull
stc
test
sub
ret
mov
bound
pop
imul
int
mov
addr16
push
or
sbb
sbb
aaa
loop
add
cmpsb
imul
cmp
testl
lcall
andl
xchg
fidivl
pop
test
leave
shll
clc
mov
inc
into
adc
xor
cmp
imull
aam
ret
sbb
pop
mov
sbb
hlt
das
adc
sub
movsl
push
mov
add
lret
sbb
gs
mov
popa
stos
pop
scas
pusha
adc
rcl
lock
or
and
in
cltd
jae
mov
test
jp
adc
dec
dec
sbb
testl
das
test
inc
lcall
sbb
cmp
mov
dec
aam
push
out
out
mov
iret
mov
repz
mov
or
sub
cs
out
mov
cli
and
mov
pop
xor
aas
int
test
inc
hlt
rclb
xor
dec
aam
xor
ret
mov
ja
sarb
test
jnp
test
jle
in
xor
scas
xchg
jae
movsl
adc
add
push
into
and
mov
jge
lcall
cmp
dec
xchg
lods
mov
push
sbb
js
es
or
addr16
cmc
jnp
sbbl
rorl
popf
leave
mov
and
sub
dec
sbb
out
sub
jmp
mov
add
adc
andl
and
out
xor
add
test
cmp
jmp
inc
in
mov
xchg
or
jg
cmp
adc
push
mov
fstps
std
inc
arpl
cmp
xchg
inc
adc
mov
call
push
icebp
ss
sbb
cmc
xchg
or
mov
enter
loope
push
add
add
add
nop
mov
dec
clc
xchg
adc
cld
shl
mov
push
roll
inc
int
ja
add
fmuls
dec
outsb
dec
push
jns
adc
fcoml
pop
sub
imul
mov
pop
cmp
mov
pop
scas
sbb
insb
add
data16
add
loopne
mov
aad
add
popa
or
mov
in
leave
aaa
and
fdiv
out
mov
nop
cmp
sub
ret
xchg
int3
addr16
xor
lret
push
mov
push
xchg
insl
mov
push
mov
dec
add
aad
icebp
pop
cmp
push
stc
sbb
pushf
jo
fs
ss
lods
mov
inc
cmp
dec
fwait
js
fs
inc
cmp
jg
loope
sbb
fucom
bound
call
inc
fwait
outsb
dec
es
or
inc
stos
xor
or
cmc
or
pop
xchg
add
jno
es
loopne
push
aaa
pusha
es
fdivrs
or
dec
xchg
push
js
ds
xor
mull
in
movsb
sbbl
dec
push
ret
mov
xlat
xchg
sti
out
outsb
lods
or
xchg
pushf
cmc
xchg
out
dec
mov
lret
sbb
negl
push
mov
jg
dec
push
int
idiv
test
mov
pop
dec
les
ja
jmp
std
push
push
iret
leave
add
push
pop
pop
mov
xlat
push
lods
inc
out
cltd
pop
ja
xor
inc
sbb
out
arpl
jb
ljmp
or
pop
mov
adc
rcrl
ret
js
jg
mov
cwtl
jmp
fldcw
lahf
pop
or
xchg
loop
mov
fisttpll
add
decb
mov
pop
ss
pop
cld
mov
outsb
push
je
andl
push
ss
mov
or
mov
shll
outsl
js
mov
test
sbb
cld
dec
sub
das
shll
arpl
and
jp
xchg
jle
mov
add
adc
push
push
sbb
popa
jno
rclb
and
jp
mov
inc
mov
push
std
sub
mov
loopne
xchg
jl
adc
or
adc
inc
bound
or
and
cmp
or
sbb
les
int
test
xchg
pop
mov
in
mov
fsubl
jo
gs
sbb
xchg
subb
iret
loopne
out
fstpt
or
insb
loop
cmp
jl
repnz
sbb
cmp
stc
xchg
outsl
ret
je
scas
daa
addr16
sti
das
sbb
sbb
scas
mov
iret
add
push
inc
arpl
add
sub
pop
insl
outsl
frstor
fldt
adc
jg
out
lea
into
jb
sub
mov
insb
sbb
cmp
dec
int3
inc
add
push
mov
cli
xor
idivl
pop
cmp
test
mov
push
repz
add
leave
add
daa
fmull
stc
stos
xor
test
inc
lods
fnsave
add
ret
mov
cmpsl
adc
in
xchg
pop
jo
xor
lds
adc
cmp
xchg
or
lock
mov
lret
mov
sub
dec
loopne
and
pop
popf
pusha
addb
sar
and
adc
mov
int
add
push
in
adc
sahf
add
fnstsw
outsb
in
mov
inc
pusha
add
inc
ss
sti
pusha
stos
nop
or
ror
push
movsl
xchg
jl
lds
xor
mov
adc
cmp
out
enter
fstps
inc
int
test
push
jge
pop
adcb
jns
and
push
jae
sbb
cmp
pop
ja
divb
imul
es
pop
jnp
cmpsb
jo
adc
aaa
repz
jmp
stc
lret
sbb
cmc
sbb
ja
mov
cli
sbb
in
lret
and
mov
cmc
sti
sbb
jp
mov
lahf
cmp
pusha
or
pop
aaa
sti
in
mov
add
inc
andl
pop
or
shlb
add
pop
rclb
adcb
shl
shll
jp
rcrl
inc
mov
sub
sti
xor
dec
mov
cmpsl
mov
xchg
dec
jo
test
cmp
out
pop
adc
int
push
pop
sahf
int3
jg
out
sub
roll
lret
addl
jns
push
fsubl
jl
jg
sub
mov
lock
test
hlt
stc
or
loop
adc
jne
jb
pushf
mov
in
std
mov
fidivrl
mov
sbbb
fs
je
pop
mov
mov
adc
or
mov
loope
scas
ds
iret
xchg
jnp
js,pt
pop
mov
movsl
mov
push
inc
cmc
xor
insb
lods
sti
sub
mov
mov
add
mov
mov
pop
sbb
mov
push
fcomps
ret
nop
pop
add
testb
jae
adc
ljmp
mov
sub
or
adc
sub
shl
inc
jbe
jp
mov
test
adc
jmp
or
in
mov
in
adc
lret
ds
mov
adc
pop
push
or
push
out
dec
jp
neg
lahf
outsb
jmp
out
lods
add
mov
out
mov
mov
mov
mov
jo
mov
out
inc
cmp
jg
xor
out
in
mov
in
jl
push
ja
push
js
or
and
sbb
jo
jg
inc
mov
and
dec
out
sbb
rcrb
push
cmpsb
push
dec
and
icebp
in
bound
add
ljmp
ret
in
in
cli
shl
mov
push
fwait
jo
fstpt
lret
cmp
jecxz
and
insl
jae
fsubrl
mov
call
add
rorl
inc
push
xor
popf
je
imul
xchg
add
bound
stc
out
ds
mov
and
cmpsl
or
enter
jge
hlt
pop
loopne
and
es
inc
adc
jecxz
mov
pop
push
inc
sbb
popa
mov
flds
je
inc
cs
call
popa
push
adc
xchg
mov
pop
xor
mov
pop
fstpt
mov
or
pop
std
out
in
into
push
push
mov
pop
sahf
mov
xchg
pop
pusha
outsl
popa
push
or
jmp
int3
int
push
mov
sarb
insl
cmp
div
repnz
jbe
js
std
dec
ret
nop
enter
push
xor
icebp
pop
jge
lods
sbb
push
shll
mov
fsub
sbb
nop
fists
mov
int3
or
mov
inc
cmp
movsl
iret
xor
cmpsb
fidivs
loopne
inc
jbe
inc
cmp
adc
inc
cmp
push
adcb
lods
loop
ret
mov
mov
scas
in
mov
mov
mov
sbb
xor
dec
push
jg
xor
xchg
push
mov
aam
or
aas
pop
stc
std
or
lea
xorl
insl
jnp
fcomip
flds
cmp
icebp
test
and
push
push
jo
sarl
ljmp
xchg
jge
pop
push
add
pop
jmp
xor
loop
mov
stos
daa
pop
add
mov
push
mov
movsb
xchg
fadds
lea
je
sbb
adc
cmp
push
xlat
out
fs
pop
sbb
inc
mov
jns
fmul
jge
xor
mov
pop
ret
enter
outsb
shll
dec
mov
ret
pop
sbb
fwait
sbb
and
cmp
cli
mov
pop
out
mov
addr16
ljmp
push
aas
adc
mov
inc
fs
hlt
cmp
mov
mov
cmpsl
insl
xor
int3
xchg
pop
shlb
iret
pop
scas
mov
ss
xchg
loop
popa
inc
mov
jge
in
fwait
add
add
lods
inc
cmp
sub
sbb
ljmp
pop
imul
shl
pusha
add
pushl
sub
push
sbb
jmp
sbb
pop
stos
leave
mov
mov
loopne
sbb
aam
es
push
sub
push
lret
or
xor
cltd
jp
adc
push
push
fwait
iret
jnp
inc
aaa
push
inc
call
fdivs
cwtl
movsl
push
xchg
jg
aaa
int3
jp
xor
and
int3
push
jge
and
cltd
inc
or
push
movsb
js
aad
push
xchg
inc
sarl
arpl
call
adc
xor
pop
pop
outsb
xchg
lret
sbb
cmpsb
sub
loopne
jle
mov
js
outsl
ret
iret
xor
loope
fsubs
add
adc
std
inc
push
fldl
dec
rcr
imul
es
pop
push
rorb
sbb
mov
mov
je
or
stos
mov
jg
push
xor
ja
add
test
sbb
jno
lods
push
lock
mov
repz
push
ljmp
or
or
and
shll
rolb
xchg
loopne
mov
and
insl
out
daa
ss
lock
lcall
xchg
rorb
adc
lahf
enter
adc
xor
xchg
mov
popa
xchg
jp
cmp
push
arpl
ljmp
notb
mov
stos
shr
cmp
ret
sub
movb
or
lcall
jmp
mov
push
or
inc
cs
rorb
sbb
xchg
popf
pop
cmp
clc
and
popa
push
mov
xor
leave
pop
sahf
push
push
push
fidivrl
pop
mov
testl
cmp
movb
lahf
jl
push
pop
cmp
jmp
add
sub
or
mov
stos
jl
jecxz
call
push
sub
pop
jnp
push
sub
sub
mov
cmp
into
add
cmpb
push
ja
stc
mov
nop
insb
shl
rcrb
mov
scas
push
mov
mov
xlat
stos
xor
bswap
add
popf
pop
dec
mov
xor
cltd
jno
mov
dec
xchg
jae
les
ja
adc
cwtl
mov
iret
cmpsb
ds
lods
out
jo
jecxz
cmp
sahf
aam
and
jo
push
out
out
movsb
hlt
or
dec
cmp
or
mov
push
sahf
pop
mov
push
push
imul
jge
call
mov
test
lcall
bound
mov
out
cmp
je
and
xor
repnz
mov
in
stc
sahf
and
jnp
pop
dec
xchg
cmpsl
scas
shll
cmp
xchg
mov
mov
mov
ret
dec
xorl
leave
and
adc
cmp
stos
jmp
or
mov
xlat
mov
std
pop
cmp
mov
push
push
out
leave
lcall
pop
ja
es
sbb
movb
sub
xchg
mov
jne
subl
and
shrb
jae
cmp
aam
mov
push
mov
dec
dec
ret
push
cmp
add
mov
inc
add
xchg
push
loope
daa
stc
test
pop
sub
jmp
jnp
and
jo
xlat
sbb
xchg
loop
xlat
movsl
arpl
cmp
push
stos
lods
mov
je
inc
fnsave
insl
jecxz
clc
enter
mov
cmp
jmp
notb
movsb
dec
sar
mov
and
es
sbb
dec
ja
xor
int
lods
out
adc
and
sub
sbb
cld
sti
or
and
mov
jecxz
xchg
jl
orl
jge
int
je
js
cmc
outsl
in
adc
xchg
hlt
fwait
push
or
cld
cmp
adc
arpl
jbe
imul
cmp
aas
sbb
pop
jno
push
pop
test
popa
mov
and
push
rcrl
mov
dec
lret
dec
xchg
cmp
mov
mov
aaa
loope
add
popf
fdivr
rcl
nop
jae
test
add
cmp
dec
cld
andl
and
cmp
imul
jmp
pop
test
int3
and
scas
clc
and
shll
mov
push
inc
and
push
ss
in
std
or
xchg
push
test
data16
imul
push
cmp
test
mov
mov
jle
mov
or
push
bound
push
ja
jp
jne
pop
mov
je
fs
sbb
fistpl
push
nop
daa
jecxz
das
movsl
js
pop
push
cmp
pop
cld
outsl
cmc
add
pusha
inc
popa
daa
mov
sub
mov
dec
cmp
jns
in
cmovbe
add
xchg
movsl
adc
test
js
mov
imul
xchg
and
push
or
stos
lret
and
data16
push
inc
push
mov
cmpsb
hlt
out
lea
mov
mov
cmp
ss
push
pop
xchg
and
push
dec
popf
jle
or
test
pop
dec
adc
dec
cs
and
test
mov
shlb
ret
sbb
stos
dec
xor
mov
and
cmp
cs
outsb
inc
gs
arpl
les
shrb
sbb
mov
scas
cltd
and
sub
mov
mov
out
dec
xchg
xchg
mov
sbb
jg
and
add
cli
int
fstpl
add
das
jp
sub
mov
js
and
cmp
aad
sub
mov
mov
dec
pop
insb
jo
lock
mov
pop
add
lret
shl
repz
xor
dec
loopne
and
and
sbb
add
adc
icebp
daa
fimull
lods
mov
lcall
out
jg
mov
pop
pop
inc
dec
fidivrl
cli
cmp
xor
sub
push
xchg
xchg
icebp
sub
push
sbb
cmp
jno
mov
cwtl
adc
pop
gs
mov
sub
leave
sbb
stos
and
jnp
loopne
jge
lcall
bound
dec
xchg
dec
rorl
sysret
or
mov
mov
inc
push
int
mov
sar
mov
inc
mov
lea
push
divl
gs
fwait
jl
test
mov
push
stc
mov
je
or
fsubrs
popa
xchg
test
imul
in
pusha
sahf
fwait
cmp
stos
push
cs
mov
xlat
arpl
jnp
pop
fisttpll
clc
das
cmp
clc
xchg
push
in
ljmp
and
mov
sbb
and
mov
mov
jmp
jmp
dec
popf
lret
mov
rcl
je,pt
test
cli
lods
push
scas
call
aam
jo
jo
insl
jo
dec
mov
int3
dec
rclb
int
or
cmp
and
dec
and
into
adc
cli
add
sub
stc
pop
adc
mov
mov
mov
cmp
and
movmskps
loope
out
cmp
outsl
pop
sbb
pop
cmpsb
push
ss
adc
data16
lret
mov
mov
or
and
cltd
pop
jle
and
mov
ret
inc
or
test
jo
dec
sub
mov
add
adc
mov
into
pop
jns
mov
mov
xor
mov
inc
je
cmp
pop
push
test
or
jmp
sub
jle
in
fsubs
cmpsl
mov
push
inc
roll
pop
xchg
lcall
push
es
aam
ss
cmpsl
mov
fisubrl
and
aaa
or
mov
xchg
or
xorb
cwtl
sub
xchg
jbe
js
ret
stos
xchg
pop
and
insl
jno
pop
pop
mov
and
inc
js
inc
add
cmp
mov
xor
jae
mov
gs
pop
and
in
popa
mov
sub
in
lret
xchg
into
sbb
pop
sbb
xor
sub
xchg
rcrb
subb
loopne
lods
add
lahf
ret
dec
ds
lods
inc
dec
testb
cmp
enter
mov
ds
mov
sub
int
add
pop
stos
xchg
fbld
cmpsb
and
jnp
add
sbbb
insl
push
dec
andb
sahf
push
std
lds
pop
mov
push
jns
pop
repz
push
ja
repz
rcr
pop
inc
test
insb
ds
cmp
dec
stos
mov
cmp
repnz
push
mov
test
aad
stc
roll
mov
mov
pushf
mov
hlt
lcall
lods
adc
mov
nop
jno
lcall
push
ret
or
es
mov
jne
test
leave
ljmp
push
mov
lods
inc
xor
xchg
mov
push
and
pop
icebp
sub
lods
addr16
mov
sub
and
xchg
jp
hlt
repz
outsl
cmp
cmp
jle
ret
ret
mov
loopne
in
cli
call
push
cld
mov
in
pop
inc
dec
repz
push
shlb
stc
mov
sbb
pop
aam
mov
sar
mov
mov
pop
test
jb
test
pop
mov
mov
push
fnsave
cs
cs
in
nop
mov
and
gs
pushf
mov
dec
sarb
fadds
mov
lahf
mov
dec
push
push
xor
clc
xchg
mov
push
hlt
add
sub
mov
or
aaa
or
scas
movsb
dec
mov
mov
xor
enter
jnp
data16
push
stos
push
lods
bnd
rclb
ja
pop
scas
sahf
daa
jg
mov
lahf
mov
xor
vmread
mov
mov
adc
test
in
gs
jmp
mov
adc
ret
aad
sbb
lock
fistpll
adc
lret
in
xor
sub
and
pushf
in
shlb
push
insb
cmc
or
or
sbb
pushf
mov
pop
xchg
inc
insb
and
shlb
fcmovnu
add
sarl
insb
push
push
test
cs
lds
je
orl
test
in
ja
jl
jg
pop
mov
jb
outsb
cli
stos
mov
imul
inc
xchg
test
fbstp
adc
add
add
pusha
cmp
test
mov
loope
push
aaa
fwait
mov
popa
popf
nop
mov
fsubs
xchg
dec
test
mov
les
inc
int3
inc
jg
and
or
addr16
jmp
ljmp
and
dec
push
jae
idiv
cld
xlat
scas
iret
pop
xor
test
loopne
dec
jbe
jmp
sub
mov
mov
scas
xor
adc
test
in
faddl
mov
dec
adc
stos
sbb
cmp
into
cmp
out
add
dec
lock
push
imul
push
clc
cmpl
sub
lahf
adc
sub
lret
js
icebp
clc
lods
stos
cmpsl
jno
inc
sahf
inc
int3
fstps
nop
cld
mull
adc
call
adc
sbb
fadd
sub
je
push
pop
dec
fistl
test
xorl
mov
repnz
pop
arpl
out
mov
imul
xor
aam
add
inc
inc
sbb
mov
dec
jmp
insb
pop
inc
push
ret
mov
cmpsb
add
adc
jno
jns
jl
adc
hlt
sub
fstl
mov
fsubl
andl
jns
pop
sub
leave
pop
or
and
and
fiadds
jb
dec
xchg
push
or
and
aas
idiv
sbb
arpl
stc
jmp
push
stc
inc
mov
shrb
int
ds
mov
sub
cmpsl
cmpsl
or
lock
or
fs
dec
xchg
pop
pop
mov
call
mov
xor
sbb
sub
adc
mov
or
out
cmp
lret
xchg
cmp
inc
jg
pop
fimull
mov
hlt
pusha
lea
jmp
imull
lds
lea
cwtl
pop
insl
movsl
adc
imul
stos
xchg
out
fdivs
iret
add
push
inc
lcall
rcr
je
insl
pop
sbb
inc
ficoms
or
test
push
push
mov
nop
add
dec
cli
fimull
mov
mov
int3
adc
cmc
pop
inc
pop
inc
or
scas
frstor
pop
mov
mov
sahf
xchg
jg
xor
add
jecxz
sub
and
or
push
sbb
dec
scas
xchg
push
insb
or
lahf
jnp
pop
sbb
iret
and
addr16
xor
test
adcb
jb
sbbb
push
or
jno
jno
xchg
fisubrl
push
mov
add
pop
imul
int
leave
fstl
or
data16
fwait
ds
inc
bound
ret
pusha
cmp
push
pop
cmp
fidivrs
pop
sub
mov
xchg
mov
jp
fstl
inc
in
rcl
leave
or
pop
sbb
lea
sub
cmp
fnstsw
inc
and
test
fildl
push
outsl
jecxz
das
cwtl
and
or
mov
repz
mov
xchg
repnz
subb
lahf
arpl
inc
sbb
mov
dec
test
jne
adc
dec
imul
add
addl
outsl
adc
dec
into
mov
fsubr
aaa
loope
fcoml
jg
adc
insl
outsb
adc
cmpsb
fistl
int
jb
cld
cwtl
mov
push
addr16
movsl
lret
mov
push
jp
and
adc
ror
ljmp
das
popa
push
mov
clc
mov
dec
sbbl
scas
insb
cli
lods
xchg
adc
scas
mov
dec
notl
std
in
dec
je
out
test
lahf
add
mov
mov
push
jb
mov
xchg
in
pop
sbb
xor
xchg
cmp
xchg
sub
xchg
negl
push
aad
mov
xor
and
ljmp
mov
out
adc
mov
push
fisubrs
adc
cmp
cwtl
repz
sbb
std
pushf
push
cmp
mov
fnstsw
mov
stc
sahf
or
lods
pop
mov
sbb
push
js
iret
add
and
mov
shl
inc
or
and
mov
sub
aad
mov
or
jae,pt
enter
cmp
inc
or
adc
add
xor
adc
shlb
lret
pusha
jne
insl
mov
jne
jecxz
aam
out
and
test
sbb
arpl
pop
sahf
stos
mov
pop
inc
jne
xchg
test
sub
dec
repz
cltd
push
or
jns
push
cmc
inc
lret
or
fdiv
adc
pop
mov
xchg
insl
sub
dec
out
movb
ret
inc
arpl
out
inc
jl
sub
fiadds
stos
out
add
pop
testb
push
push
inc
push
pop
imul
loope
js
inc
popa
stos
in
and
jecxz
push
insb
add
rorb
push
ja
push
fcompl
push
iret
scas
loope
popf
pusha
stc
dec
nop
movsb
inc
xor
push
jne
dec
sub
les
adc
xchg
pop
clc
cmp
icebp
daa
adc
sbb
gs
and
inc
sbb
fsqrt
sbb
mov
loop
pop
emms
mov
mov
idiv
lahf
das
jge
xchg
ds
dec
ret
xchg
add
xchg
out
push
or
addb
and
cmp
dec
cmp
mov
dec
rol
pushf
fsts
daa
push
and
cmp
dec
lahf
leave
pop
scas
out
popf
loop
pusha
je
xor
mov
fcoml
cmp
sbb
fildl
cmp
incb
fcmovbe
pusha
cmp
lcall
fdivl
call
mov
dec
add
popa
jbe
add
pop
loop
xchg
pop
cmp
in
dec
inc
rcll
rcrb
xchg
in
sbb
ret
inc
insb
push
sub
ljmp
push
nop
fwait
sbb
and
lods
or
push
adc
out
xchg
lahf
xor
mov
and
popf
sub
rolb
ljmp
mov
fistps
jmp
push
mov
push
enter
mov
fimuls
loope
push
sbb
xchg
in
aas
into
gs
or
jmp
xchg
add
arpl
mov
out
cmp
shlb
in
icebp
mov
movsb
and
rcl
pop
add
pop
addb
in
mov
and
cld
in
aad
insl
jmp
call
sbb
mov
xor
dec
adcl
fiadds
outsb
lea
sbb
jge
pop
xchg
lret
mov
mov
jl
insl
lds
pop
out
iret
cmc
movsl
xlat
hlt
pop
pop
cld
jl
rclb
and
push
ret
test
sahf
movsl
scas
outsl
inc
lea
cli
addr16
es
xlat
in
jecxz
adc
icebp
ds
cmp
fildl
loope
outsl
inc
mov
jb
fwait
cmp
dec
and
lret
dec
leave
lret
mov
cwtl
inc
fstps
pop
cmp
into
mov
push
imul
xor
sub
fdivl
and
nop
ret
into
add
adc
arpl
xor
jo
jne
push
cmp
mov
inc
movsb
xchg
out
xlat
and
mov
xchg
xchg
and
xor
int
in
cli
sbb
in
mov
dec
xlat
mov
dec
and
mov
leave
inc
and
add
fsubp
fistpll
push
xor
push
pop
outsl
xchg
fisttpl
pop
das
pop
xchg
pop
movmskps
xchg
mov
or
xchg
stc
dec
adc
or
lock
ret
jl
inc
imul
cli
adc
jp
jo
push
popf
jl
cmp
out
pop
mov
sbb
and
lds
shl
pop
add
fwait
xor
and
insl
scas
jge
cmpsb
stc
sbb
adc
cmp
inc
jmp
loopne
xchg
repz
aas
das
pop
add
cmp
pop
cmpsl
in
pop
movsb
imul
leave
mov
cmc
push
jne
pushl
xchg
push
xchg
jg
xchg
mov
nop
mov
pop
ret
sbb
jae
js
mov
ret
mov
fmul
stc
sbb
jg
dec
js
movsb
lret
imul
push
xor
imul
cmpb
xchg
and
imul
push
cs
pop
lock
cltd
shrl
inc
jns
out
pop
adc
lcall
push
mov
push
outsl
stc
in
pop
roll
shll
jno
adc
mov
push
xor
sbb
jbe
inc
stc
sbb
filds
mov
fbld
xchg
xor
xor
cld
mov
shl
sub
fdivs
adc
pop
lret
lock
subl
push
dec
movsb
dec
xchg
cmp
sti
mov
xor
mov
or
sti
mov
movl
pop
lret
xor
imul
arpl
in
pop
push
jl
jmp
sub
jecxz
pop
mov
xchg
dec
jmp
xor
cld
popf
jno
lcall
insb
nop
movsb
pop
fisttpll
dec
mov
out
je
lea
roll
and
cli
aas
sbb
popf
es
add
rcll
gs
push
push
out
fcoml
and
mov
add
sbb
inc
sbb
inc
jle
nop
sbb
scas
jns
lea
inc
dec
xchg
xchg
sahf
pusha
je
mov
lcall
adc
adc
add
mov
sbb
lods
fnstenv
ja
mov
sub
cwtl
sub
jo
sub
mov
aam
add
hlt
fiaddl
sub
jb
mov
jbe
int3
fdivrl
cmp
bound
mov
imul
mov
lods
stos
pop
or
arpl
cltd
gs
in
out
jle
jp
mov
pop
icebp
mov
mov
and
shlb
push
or
fisttpl
xchg
push
mov
out
fisubrs
in
stc
push
ret
inc
out
push
shl
dec
dec
out
js
lock
cld
loopne
rsqrtps
in
cmp
mov
mov
pop
jns
jb
mov
pop
in
xchg
xchg
into
fbstp
push
jns
sub
stos
fildl
pop
pop
dec
jno,pt
sbb
popa
fiaddl
jae
fiaddl
push
push
add
sahf
sub
cmp
inc
add
mov
mov
or
test
adc
dec
mov
cmp
loope
cmc
inc
cmc
sbb
pop
testl
mov
xor
inc
push
adc
xchg
in
sub
lcall
shlb
mov
pop
cmpsb
std
adc
daa
js
ljmp
roll
push
mov
enter
test
xchg
push
test
add
mov
pop
js
and
inc
push
lods
xor
pop
cwtl
mov
pop
jl
fucomp
push
lods
fdiv
imul
cli
and
fnsave
mov
xor
in
stos
jno
sbb
xchg
je
xor
inc
out
stos
lds
test
loop
in
scas
fwait
call
idivb
test
lods
rcll
loopne
test
out
sub
sbb
movsb
insl
and
sub
lret
add
je
or
rclb
xchg
out
ss
mov
scas
das
dec
jecxz
js
fsubrs
or
or
imul
in
inc
push
sbb
fisttpll
call
lret
std
dec
imulb
ret
out
cmc
loope
or
mov
cli
fdivs
sbb
pushf
xor
insb
das
into
aad
cwtl
cli
iret
jno
jb
jae
mov
or
frstor
outsl
inc
scas
sbb
sub
nop
loopne
ret
fs
std
mov
stos
pop
sahf
mov
orb
into
push
mov
outsb
repnz
aas
fdivs
test
mov
xchg
mov
test
cmpl
jo
push
dec
jae
lahf
push
push
and
sub
daa
adc
mov
push
ds
mov
push
cmp
lahf
pop
add
fimull
repnz
fdivrs
arpl
lock
fdivrs
mov
ljmp
jle
jns
mov
cmp
inc
push
out
or
jns
pop
cmpps
bound
inc
pop
xor
test
pop
jae
lds
leave
mov
and
out
jb
lret
aaa
imul
sub
xchg
sbb
adc
cmp
outsl
aam
pop
cmp
in
insl
xlat
inc
orb
negb
ds
push
fwait
dec
outsb
fldln2
or
push
bound
dec
xchg
pop
cmc
push
into
jle
dec
pop
push
out
ret
in
sub
in
inc
mov
je
mov
stos
and
and
jle
fisubs
insl
jg
mov
in
jo
gs
xor
push
call
das
xor
mov
cmp
pop
pusha
rol
test
les
sbb
cmp
outsl
xchg
int3
or
jb
insb
outsl
mov
dec
repz
push
jae
pop
add
xchg
xchg
mov
test
sub
lock
pop
adc
xchg
fs
and
lahf
addr16
mov
out
mov
outsb
sbb
pusha
inc
fsubl
mov
adcb
hlt
inc
mov
call
and
in
dec
ja
lods
jbe
movsb
fs
and
xor
dec
pop
jg
jge
mov
mov
in
push
imul
and
cmc
je
cmp
push
xchg
scas
sub
jg
push
push
fisubrl
fwait
in
jno
les
aas
xchg
cmpsb
jb
mov
add
outsb
mov
icebp
fst
lock
frstor
jns
xor
cwtl
cmp
addr16
shlb
sub
adc
les
cmc
aad
jmp
and
mov
aas
shll
iret
cmpsl
sbb
mov
push
call
jmp
or
fldcw
leave
sub
fsubl
push
xchg
jns
add
mov
add
inc
mov
and
pop
outsb
out
sub
loop
mov
int
imul
adc
ss
loopne
pop
inc
jnp
and
scas
cmp
scas
or
bound
adc
or
in
loopne
or
dec
aam
pop
push
dec
pop
int3
xchg
lock
sub
mov
sbbl
dec
push
push
mov
jp
sbb
push
xchg
or
or
mov
mov
mov
outsl
push
int
sub
cld
fdivrl
sub
mov
std
sbb
xor
fs
dec
cmp
sbb
int3
lret
mov
pop
in
add
push
adc
pop
push
jo
call
bnd
jbe
inc
and
movsb
les
inc
or
xor
jle
push
cltd
in
and
int
push
das
mov
pop
into
inc
es
fistl
xor
loopne
cmc
push
sub
mov
mov
das
push
aam
test
or
xchg
xchg
dec
arpl
mov
push
int3
repnz
in
out
xor
mov
test
loop
pop
inc
test
mov
adc
fisttpll
xchg
and
std
adc
out
pop
movsb
fistl
and
sbb
sub
cmp
loopne
lret
lret
call
mov
jnp
lods
test
cmp
and
push
cmp
repz
cmpsb
push
cwtl
addr16
sbb
out
fnsave
cmp
imulb
mov
sbb
mov
js
push
dec
mov
and
loope
pop
rorl
enter
dec
xchg
into
xchg
hlt
movsb
pop
inc
pop
in
xchg
imul
pop
xchg
pop
or
ror
js
and
mov
xchg
cmp
add
in
cld
dec
xor
pop
mov
adc
cmp
push
rolb
jmp
out
leave
pop
and
adc
test
adcb
scas
mov
mov
sahf
mov
xchg
and
jae
lcall
add
popf
adc
sub
mov
loopne
out
fisubs
mov
push
jecxz
jo
repz
jle
lock
sub
cmpsl
cmpsl
divb
lds
sbb
adc
shll
mov
mov
das
fisubl
repnz
das
adc
jmp
jg
inc
cmc
mov
cld
aam
fsubrl
pop
pushf
jge
adc
inc
cmp
into
sbb
enter
xchg
sbb
imul
ret
stc
xchg
int
pop
add
xchg
incl
mov
jbe
cmpsb
aad
jae
leave
and
and
xor
mov
sub
xchg
incb
mov
push
popa
xchg
xlat
sarb
fcmove
hlt
out
sub
fnstenv
jne
icebp
dec
jl
xor
ret
fsubrs
fld
jne
movsl
xor
test
pusha
in
jle
stc
sahf
jmp
icebp
cmpsl
leave
pusha
jecxz
pop
ljmp
cmp
sbb
pop
push
repnz
lcall
ds
loop
enter
clc
jmp
daa
pop
jo
cwtl
adc
adc
pop
sbb
in
cmpsb
pushf
and
fadd
les
and
in
sbb
mov
imull
or
sti
and
mov
and
lock
and
sub
cmp
sub
shrl
sarl
inc
and
out
dec
add
adc
inc
jmp
jnp
and
dec
mov
insb
adc
ja
mov
iret
sub
sbb
cmpsb
mov
jg
jg
jmp
or
dec
jne
loop
stc
sub
adc
jnp
mov
xor
int3
rol
fcmovnb
mov
mov
inc
pop
sub
mov
adc
mov
and
jne
pop
mov
mov
pop
sub
movsl
loop
lea
test
cmpsb
int
outsb
pushl
mov
dec
mov
jp
push
arpl
push
cmp
and
fldt
ret
popf
aad
mov
push
out
mov
popa
scas
and
pusha
mov
cwtl
imul
ss
sahf
addr16
xlat
mov
test
in
or
mov
mov
jnp
bound
stos
push
adc
pop
daa
roll
mov
inc
scas
imul
sub
inc
push
lds
pop
nop
pop
mov
jp
iret
cmc
jae
je
mov
in
test
xor
pop
jle
jg
repz
push
mov
jp
adc
lock
push
sub
andb
adc
inc
insl
xor
mov
add
or
jb
or
jno
fists
lods
rcrb
adc
enter
adc
clc
jnp
sbb
adc
or
xchg
add
sti
xchg
rorb
jmp
or
pop
cltd
popa
pop
pop
icebp
hlt
sub
test
scas
or
adc
ss
adc
add
aaa
inc
xchg
call
dec
and
daa
sbb
adc
cli
push
pop
aas
loope
imul
sbb
inc
mov
out
or
into
gs
fcomps
jne
test
mov
adc
int3
push
aas
outsb
in
adcb
xor
popf
jl
inc
dec
leave
xlat
mov
ret
or
inc
inc
shll
ss
or
sub
sub
push
stos
xor
sub
movb
mov
jge
mov
inc
and
adc
fcmove
pop
pop
rorl
jae
loopne
shlb
mov
lret
ds
mov
popa
aam
dec
and
jns
push
mov
add
ficoms
mov
rcll
pop
cmp
xor
sahf
or
dec
adc
stc
xchg
ret
shlb
movsb
mov
out
mov
rcll
push
lock
nop
sahf
gs
mov
pusha
roll
mov
inc
xchg
mov
movsl
loope
pop
fcoml
and
add
add
hlt
leave
or
icebp
outsl
push
jmp
xchg
pop
jnp
cli
push
and
fistpll
jno
fmull
jns
push
xchg
fmul
lret
js
loope
ljmp
out
jae
in
jp
cmp
jp
pop
add
fsts
push
das
xchg
pop
or
cli
xor
and
rorb
js
cmp
int3
inc
test
push
iret
in
cwtl
outsl
and
stc
hlt
lods
cmp
mov
pop
jle
inc
out
push
mov
push
cwtl
cmc
cwtl
or
xchg
stc
aam
sbb
mov
sub
mov
sbb
fisubrl
mov
mov
test
shll
in
ret
je
shl
dec
xor
pop
cmp
sbb
xchg
lods
adc
and
push
faddl
les
mov
add
xchg
jl
scas
fwait
jl
sbb
cwtl
rorb
mov
aam
sahf
mov
jae
mov
dec
ret
and
lcall
pop
pop
cmp
pop
cmpsl
icebp
xor
repz
enter
mov
dec
xlat
pop
push
andb
dec
dec
sti
jg
add
add
testl
sub
sbb
fiadds
jns
adc
test
push
sahf
hlt
lds
mov
mov
jb
aam
dec
fistps
push
cmp
sub
xchg
lods
add
mov
cmpsl
hlt
jmp
stos
aad
jl
pushl
mov
popl
dec
cli
iret
shlb
sub
pusha
pop
enter
mov
shll
dec
leave
stos
cmp
pushf
mov
fs
pop
lea
std
xor
mov
adcl
pop
and
lret
ret
dec
or
inc
or
push
pop
push
sub
add
ret
in
or
pop
out
dec
xlat
add
lods
mov
cmp
mov
out
outsl
addl
outsl
push
repnz
ret
xor
mov
stos
ret
xlat
lcall
nop
das
fs
hlt
inc
sbb
fmull
sti
repz
sub
fimuls
sbb
ds
test
mov
cmpsb
adcb
shrb
addr16
and
cmp
dec
dec
cmp
iret
jle
fs
pusha
gs
daa
imul
cs
xchg
inc
add
dec
jns
iret
sti
sbb
inc
xor
xchg
mov
mov
iret
mov
and
inc
fistps
jno
mov
mov
fnstcw
xchg
mov
movsb
mov
in
pop
loope
pop
fstl
imul
push
js
and
jmp
mov
mov
das
pop
fidivl
fcomps
jno
fistps
dec
fisubrl
cli
dec
push
mov
lret
adc
jb
or
popa
and
filds
ds
iret
sbb
dec
mov
mov
push
add
and
out
add
ffree
jnp
insb
cld
popa
mov
xchg
test
sub
testb
setb
mov
push
into
in
add
xchg
mov
pop
jl
xor
std
ret
xorl
fldenv
push
sub
inc
or
lahf
pxor
jns
cmpsl
push
fcompl
mov
or
aad
push
mov
in
ljmp
xchg
ss
ja
sahf
push
aas
fidivrl
je
inc
push
cltd
xchg
ret
std
mov
xchg
int
xchg
push
fsubp
rcrl
or
sub
rclb
sahf
ret
or
push
jo
mov
popa
shlb
lea
imul
in
hlt
pop
add
fcompl
jl
mov
mov
inc
ret
push
add
faddl
jmp
cmp
mov
or
xor
scas
add
sti
and
hlt
inc
fcomip
push
add
pop
cmp
or
in
xor
ret
sub
xor
xor
pop
mov
out
imul
aas
sbb
js
loope
xchg
stos
jge
sub
and
xchg
fwait
shrl
hlt
mov
std
mov
inc
js
xchg
mov
sbb
xor
icebp
not
cmpsb
push
push
mov
movsb
cld
repnz
mov
mov
and
push
mov
out
rclb
mov
jno
ja
outsl
loop
ret
aam
subb
jge
xchg
cld
and
cwtl
insb
push
mov
inc
sub
sub
inc
insl
stos
rcl
mov
popf
mov
psubd
pop
inc
jmp
shl
sub
pop
mov
push
mov
mov
jb
les
mov
sub
pusha
in
mov
stos
stos
mov
lock
mov
jge
out
adc
and
scas
nop
push
cmp
dec
mov
frndint
cmc
mov
mov
popl
push
jmp
dec
mov
dec
cmc
jno
ficomps
scas
jg
pop
clc
inc
sbb
jno
xchg
pop
adc
pop
jecxz
jns
daa
cmp
jecxz
sbb
or
cmp
inc
mov
cmp
rcl
or
bound
out
fisttps
lret
loop
in
push
sbb
insb
ficompl
or
movsb
or
rcll
adc
mov
fisubrl
ja
das
inc
mov
mov
sarb
ja
mov
inc
cmpsb
rcr
std
clc
jnp
sub
cmc
daa
fstpt
mov
xchg
dec
lods
push
push
dec
pop
daa
fcmove
call
out
sub
lret
inc
inc
js
mov
sbb
xor
mov
add
in
out
cld
push
jmp
idivb
pusha
rorb
negb
push
cmp
fldt
push
sub
cmpsl
adc
rcr
pop
add
jbe
lcall
std
mov
adc
mov
aad
int3
mov
loopne
ret
mov
or
adc
pop
adc
ljmp
push
or
ja
mov
fldcw
nop
xor
mov
hlt
jl
stos
addr16
fistps
push
into
or
movsb
cmp
mov
xchg
mov
xorl
or
into
push
adc
arpl
push
and
clc
out
pop
add
or
in
jle
mov
repz
xor
mov
sti
jno
sub
dec
mov
rorl
push
dec
arpl
fs
mov
push
hlt
mov
dec
inc
adc
mov
dec
mov
insl
mov
pop
cs
cmpsb
loop
enter
jp
add
imul
dec
sub
lods
sti
test
jnp
xchg
mov
lcall
cmovns
jae
ret
in
add
rolb
or
fsubrl
adc
adc
push
mov
jb
stc
ljmp
dec
mov
add
inc
jbe
cli
not
jae
leave
mov
hlt
int
test
ds
pop
ljmp
xor
dec
mov
sbb
push
jp
roll
push
add
mov
push
adc
lods
mov
gs
sahf
mov
orl
jns
test
cld
movsl
mov
clc
in
ss
adc
pop
and
mov
adc
adc
mov
mov
clc
aad
test
and
aam
dec
pop
dec
push
mov
sahf
sub
lea
test
mov
sbb
adc
clc
out
imul
add
inc
inc
and
rcr
adc
cmp
xor
cmp
fbld
add
mov
loope
cmpps
cmp
and
inc
sbb
xchg
sbb
sub
push
mov
outsb
repnz
xchg
fsubr
fnstcw
mov
push
cs
loop
pop
inc
add
stc
adcb
aad
out
inc
pushf
and
jmp
sub
fdivrl
and
cld
cmp
mov
and
rcrl
add
add
stc
push
mov
rcr
cwtl
enter
mov
inc
sbb
sub
stc
jb
fs
and
stos
negl
adc
or
pop
out
aaa
mov
adc
nop
pop
jo
lea
add
inc
dec
add
mov
cmp
mov
mov
add
dec
dec
mov
dec
xchg
mov
jecxz
fcmovb
push
fistpl
adc
sahf
rcrl
fsts
scas
pop
xor
xchg
push
pop
push
fcomps
xchg
pop
fsts
cmp
push
das
dec
shrb
or
popl
ret
mov
xor
test
cmc
mov
outsl
cwtl
mov
lcall
int
xchg
stos
push
cmp
adcb
mov
in
inc
jne
testb
lret
shrl
pop
fstpt
xlat
lahf
mov
fimull
enter
lahf
das
out
das
or
sbb
push
xchg
nop
push
sbb
bound
mov
cmp
xor
inc
cs
mov
push
testl
cmpsb
outsb
enter
xchg
jp
lods
and
cltd
enter
cmpsl
mov
cld
push
pop
inc
in
jle
mov
mov
sbb
adc
mov
mov
pusha
sub
ss
nop
mov
daa
cmpsl
xor
xchg
sub
daa
out
mov
movsb
push
ss
push
dec
in
push
bswap
insl
pop
and
xchg
int3
in
mov
lret
out
ret
hlt
int3
push
adc
cmp
jmp
inc
xchg
adc
lea
jno
fdivl
cmpsl
call
sti
mov
jecxz
add
jb
sub
iret
filds
cli
jmp
pusha
jb
in
mov
int3
push
test
add
xchg
push
pop
cmp
xor
mov
gs
cmovo
fwait
loop
imul
jle
dec
mov
jg
inc
pop
mov
in
scas
or
aas
xchg
gs
and
rorl
push
fs
adc
jmp
adc
jp
aas
xchg
sbb
fwait
repz
mov
mov
dec
shlb
inc
push
jb
add
sbb
dec
pop
addb
lea
inc
sbb
cmp
add
mov
mov
dec
adc
roll
or
fldln2
out
dec
dec
pop
pop
out
test
xchg
and
dec
push
inc
push
mov
inc
rcl
mov
sub
in
mov
jnp
sbb
rcll
mov
dec
mov
ss
xchg
or
insb
movsl
lds
lahf
popa
cmp
sub
jle
sub
and
fwait
sbb
inc
dec
clc
xchg
clc
fstl
pop
loopne
lods
popf
into
xor
pop
mov
in
push
bswap
nop
aaa
std
sti
jg
cmc
add
add
push
and
or
pop
ror
xchg
mov
xlat
fdivrs
subl
push
push
data16
push
leave
cli
incb
icebp
jecxz
imulb
pop
dec
push
test
jmp
popf
xorl
out
shrb
aam
push
or
int
mov
or
outsl
fmull
add
sti
aas
fcmovb
mov
cmp
insl
cmp
sti
or
add
mov
imul
adc
dec
pop
xor
out
pop
out
cmp
mov
stc
insb
jb
jg
int
inc
inc
out
push
aad
inc
jae
push
push
fwait
sarw
add
clc
dec
jge
dec
mov
and
bound
xor
inc
or
add
mov
add
psllw
negl
mov
sahf
jo
sahf
int3
mov
push
adc
xchg
cltd
in
fsubs
fisubrl
or
jbe
sti
fwait
punpckhbw
loop
mov
lods
lods
sub
sub
data16
sub
jecxz
pushl
icebp
lods
mov
fldt
outsl
popa
mov
lret
xchg
shrb
sub
shl
movsl
pop
mov
lret
push
jno
bound
mov
xor
stos
fldenv
and
or
add
jns
pop
cli
mov
mov
cmp
jb
xor
dec
sub
clc
push
xchg
cld
in
push
xor
xor
stc
mov
pop
mov
sahf
rorb
cmpsb
loopne
lds
arpl
aas
daa
into
sbb
gs
xor
xchg
xorl
pop
movsl
imul
pop
dec
cwtl
js
jmp
adc
in
mov
out
mov
fisttpl
mov
mov
fldcw
cld
push
ret
mov
imul
outsb
cmp
jmp
sub
xchg
js
push
and
inc
iret
sbbb
adc
mov
pop
or
mov
push
cmpsb
jg
movsb
fisubs
jo
fdivrl
inc
jmp
and
es
sbb
jns
push
mov
rcrl
dec
jg
pop
bound
daa
das
mov
xor
movsl
pop
lahf
sbb
ljmp
mov
mov
cmp
and
and
jo
xchg
xchg
lahf
xor
jnp
jp
mov
or
adc
xchg
inc
insb
test
gs
das
adc
xchg
test
adc
arpl
mov
in
push
mov
adc
test
iret
or
adc
cmp
pop
pop
and
mov
jge
push
cmpsl
adc
std
inc
adc
inc
xchg
or
inc
aam
pop
or
das
bound
cmp
mov
jae
iret
divb
negl
subl
mulb
pop
mov
jle
loope
inc
sbb
inc
xchg
xchg
xlat
push
adc
ret
push
loop
test
ficompl
sbb
pusha
jl
cmp
inc
mov
jmp
pusha
pop
dec
scas
xor
shll
adc
lcall
add
out
fs
xchg
inc
pop
imul
add
loope
adc
in
mov
shlb
add
ja
sub
jb
xor
jo
dec
sarl
or
dec
data16
insb
mov
push
loope
fldl
jmp
gs
aad
popf
xor
test
stos
and
shrl
jns
outsl
leave
mov
std
das
shll
cld
inc
xor
mov
iret
int3
shrb
jnp
out
dec
repnz
cmp
push
insb
cmpsb
lahf
loopne
test
inc
or
sbb
loop
sub
dec
addr16
clc
and
imul
in
movsl
imul
fcompl
stc
aaa
sbb
fsubrp
and
in
addr16
pushf
cmp
aas
lcall
xchg
popf
andl
cmp
testl
repnz
push
jno
icebp
mov
mov
pop
and
mov
fistl
sub
or
xchg
xor
dec
arpl
adc
test
jp
out
mov
movsl
popa
mov
dec
mov
cmp
push
fsts
push
xor
pop
mov
lds
ljmp
out
das
lock
rclb
pop
mov
mov
inc
or
fs
jg
hlt
sub
ja
xor
dec
mov
jp
jns
mov
adc
movsl
xchg
rcrl
xchg
test
stc
loopne
pop
shll
adc
cmp
out
cs
repz
pop
negb
adc
add
pop
or
jbe
xor
sti
loope
jo
sahf
mov
aam
cwtl
stos
std
or
mov
fbld
cmp
jge
insl
pop
es
pop
sbb
dec
pop
ljmp
cmp
flds
add
xchg
push
mov
mov
jbe,pn
and
outsb
das
or
lock
pop
js
or
jl
inc
mov
xchg
sbb
ljmp
and
inc
rorb
in
jno
cmp
imul
inc
sbb
jb
movl
sbb
movsb
stc
jge
sbb
add
cmp
adc
sarb
fnstenv
fcoml
jle
sub
mov
ljmp
fadds
mov
xchg
inc
out
popa
cmp
xor
push
jecxz
lods
mov
mov
mov
jo
mov
into
add
inc
int
clc
loop
rcll
rcrb
dec
mov
cmp
pop
std
nop
inc
adc
add
push
sbb
lock
pop
fisubs
dec
mov
mov
outsb
mov
xor
mov
xchg
popa
mov
out
loope
aam
mov
lahf
add
sub
dec
cmp
out
repnz
mov
notb
mov
xchg
andl
lret
lock
jg
xor
cs
aaa
ja
sub
adc
jp
or
out
inc
and
in
jge
sar
cmp
jns
aam
jmp
cmp
pop
lock
mov
jo
fxch
pusha
or
xor
mov
mov
call
add
mov
pop
mov
push
pop
mov
dec
mov
test
mov
insl
or
sub
push
sub
icebp
mov
idivl
mov
inc
xor
out
cmp
mov
addl
jnp
or
jmp
adc
dec
out
sub
fidivs
jle
fbstp
jbe
sti
xchg
pushf
xchg
das
ja
jo
std
mov
pusha
shrb
bnd
mov
inc
push
test
outsb
mov
add
idiv
sbb
dec
jb
inc
popa
push
mov
mov
test
int3
mov
sbb
mov
push
jmp
inc
mov
pusha
inc
or
jbe
and
lea
fists
cmp
into
jmp
ret
pop
in
push
pop
and
icebp
sbb
dec
ret
mov
mov
mov
rcrw
andl
lods
adc
leave
and
adc
adc
enter
in
rolb
mov
pop
aas
jne
mov
icebp
cmpsb
add
out
jnp
test
aaa
ror
hlt
xchg
shrb
pop
and
sti
xor
lret
fisttps
nop
dec
mov
test
or
rclb
call
rorl
add
add
or
std
out
outsb
jecxz
imul
fbstp
and
outsb
dec
sub
arpl
ds
push
fs
movsl
mov
mov
imul
lods
and
sub
adc
mov
push
pop
sbbl
or
xchg
popf
inc
mov
mov
aaa
mov
sbb
mov
pop
adcb
mov
cmp
adc
jl
call
test
jns
or
cmp
adc
idivb
lods
and
js
imul
push
adc
xchg
mov
nop
sbb
cmc
and
push
sub
adcl
push
dec
sbbl
jbe
dec
ja
add
rcrb
cli
pop
or
outsl
outsb
cmc
push
fcomps
outsb
xchg
add
fcompl
lahf
fdivrp
out
mov
leave
fsubs
rorl
sar
icebp
aas
fst
push
push
pop
inc
cmp
pop
aaa
std
xchg
aaa
mulb
jmp
fcomps
adc
in
rclb
fwait
mov
cld
addr16
pop
sti
mov
mov
or
in
and
and
dec
sbb
out
repnz
shlb
ja
adc
pusha
xchg
or
sub
sbb
in
sbb
test
mov
fwait
cmp
push
lock
addb
dec
cli
int3
clc
daa
dec
cwtl
jae
xchg
daa
mov
sahf
add
sahf
cwtl
loope
lcall
shrb
icebp
mov
add
and
mov
cmp
mov
test
inc
enter
pop
and
mov
cmp
nop
cld
orb
cmc
xor
inc
bound
addr16
mov
aam
mov
icebp
and
test
xlat
mov
adc
lods
shlb
sub
adc
push
mov
icebp
mov
mov
fcomi
sub
popa
cmp
or
testl
mov
in
ss
fidivrs
ds
imul
inc
jl
sbb
insl
xchg
cmp
push
dec
inc
leave
bound
sbb
jp
cltd
in
or
jns
jne
pop
clc
xor
fcmovbe
das
cmpsl
into
insb
movaps
xchg
and
icebp
int
sub
xor
add
in
push
sahf
mov
add
xor
enter
sbb
xor
sti
hlt
cmp
cmp
xchg
sub
roll
pop
push
xor
jb
scas
inc
cmp
xchg
sahf
aaa
or
faddl
add
sbb
add
nop
xor
mov
mov
movsl
fstpt
mov
pop
mov
push
fidivrl
in
gs
nop
push
ror
pop
movsb
push
fldt
push
repz
lret
xor
add
or
push
pop
jns
cmp
loop
clc
test
inc
outsl
test
cmp
add
adc
xchg
out
and
fcmovb
push
push
ret
mov
inc
mov
lea
inc
mov
or
dec
jl
mov
fdivrs
cmp
or
ficoml
push
daa
cmpsw
fistps
cmp
iret
mov
fwait
insb
clc
outsb
into
fcomps
jecxz
or
jnp
and
pushf
mov
into
test
mov
in
stos
dec
adc
xchg
adc
add
loopne
incb
or
inc
push
and
loop
sbb
test
cmp
js
cwtl
xchg
fldcw
outsb
mov
aam
inc
push
and
sbb
outsb
lods
std
rclb
mov
dec
scas
jmp
mov
sbb
adc
lock
ljmp
and
pop
fbld
xchg
jmp
mov
in
fsubrs
or
jecxz
adc
cmp
sub
lret
lahf
aas
pushf
pop
sti
jp
inc
add
je
test
pop
pop
mov
xchg
xlat
inc
nop
out
inc
out
lahf
das
push
daa
in
dec
cmc
inc
inc
jb
xorb
and
sbb
xchg
mov
mov
add
cmpsb
cmp
add
hlt
inc
fdivrs
push
xor
arpl
bound
andl
je
inc
xor
push
dec
stos
and
pop
dec
inc
in
mulb
push
adc
mov
inc
jge
xor
sbb
push
test
std
fsubrl
push
jp
mov
inc
mulb
sub
fimuls
movsb
xchg
mov
sbbb
xor
inc
sub
fcomps
mov
add
jmp
push
xchg
negl
jb
ds
or
dec
out
pop
pop
scas
fmulp
add
mov
pop
xchg
add
es
xchg
pop
out
push
pause
pushf
into
sub
adc
xchg
mov
xchg
jnp
enter
add
roll
push
rcll
loopne
sbb
pop
mov
imul
es
and
dec
mov
mov
mov
stc
inc
sbb
movsl
jne
xor
pop
mov
inc
pop
cmp
push
idivb
adc
xlat
out
rdpmc
lcall
je
push
fdivrl
dec
arpl
test
iret
mov
xchg
mov
stos
dec
add
mov
test
mov
fsub
loop
pop
loope
jg
mov
sti
xchg
inc
mov
mov
mov
repnz
imul
test
std
clc
out
push
mov
mov
orl
pop
inc
fldenv
and
ret
adc
pop
mov
fisubs
lret
xor
xlat
mov
lahf
inc
mov
sbb
lds
cld
std
lahf
pop
pop
jbe
test
iret
mov
out
ds
ljmp
or
sbb
xchg
jmp
addr16
push
jle
aam
cmpsb
cmc
mov
int
inc
ljmp
add
int
scas
xor
cmp
cmpsb
or
fiadds
cli
pusha
or
dec
mov
pusha
xchg
rcrl
mov
dec
frstor
jo
fwait
int3
movsl
repz
outsb
mov
add
push
and
mov
xchg
jge
in
and
sahf
popf
sub
stos
jnp
mov
jge
gs
popa
ja
pop
sbb
addr16
rorl
push
lcall
aad
popa
add
int3
mov
insb
ror
clc
popa
in
sub
add
je
dec
dec
xchg
push
dec
in
jno
lret
jb
mov
je
repnz
sbb
adc
shlb
pop
ss
and
aas
jmp
xlat
jns
jecxz
out
int
add
push
push
or
iret
test
push
mov
sub
mov
cmpl
orl
adc
or
or
int3
add
orl
add
xchg
jmp
ret
dec
pop
or
jge
lret
xchg
out
xchg
add
fcompl
insl
push
repz
shlb
aam
dec
xor
inc
xor
sbb
push
pushf
fmull
pusha
sub
sub
cmp
lahf
mov
orb
xchg
push
int3
fs
pop
xor
xchg
jecxz
inc
lahf
out
in
out
xchg
xchg
jmp
cltd
int3
test
add
pop
fs
loopne
jle
jle
adc
jle
pop
out
insl
popa
pop
repz
xor
out
test
mov
cmpsb
mov
scas
sub
add
repnz
scas
pop
stos
cltd
lret
adc
bound
sub
out
jbe
in
and
jne
cwtl
movsl
les
add
sub
jo
outsb
push
add
xor
ret
jb
neg
hlt
sti
xchg
insl
xor
jne
adc
xchg
loopne
call
mov
mov
pop
xor
movsl
xlat
in
fsubr
shlb
or
aas
stc
xor
es
adc
or
ss
inc
push
scas
sbb
sub
pop
push
sub
in
loop
or
div
sub
mov
pop
sub
mov
push
cmp
das
aas
and
fbstp
sti
mov
push
imul
inc
adcl
gs
andl
and
pop
dec
bound
dec
in
sub
ret
pop
mov
test
stos
ss
push
sub
sub
sub
xchg
adc
out
jne
pop
dec
mov
shrl
pop
int
arpl
xor
ret
ljmp
mov
sub
arpl
dec
add
and
das
jg
out
inc
adc
out
notb
call
mov
sbb
cmp
aam
popf
loopne
aad
mov
test
add
loop
cmp
or
std
into
push
jne
pushf
test
jecxz
ja
push
adc
jb
dec
pop
adc
or
pop
xchg
in
jbe
stos
es
in
dec
or
xor
mov
push
add
xor
xchg
cwtl
adc
repz
sub
xor
int
bound
sarb
and
lcall
ficoml
das
cmp
and
out
xlat
into
aaa
xchg
push
mov
lea
inc
stc
push
test
int3
fwait
je
pop
sub
xor
pop
jbe
popf
fldenv
lret
mov
push
or
inc
xor
out
je
adc
popf
xor
aad
jecxz
cmc
mov
icebp
push
daa
mov
mov
data16
outsb
xor
push
test
xchg
xor
repnz
mov
ret
inc
or
cmp
stos
jle
sub
xchg
mov
and
pop
mov
cld
dec
das
adc
pop
jns
lahf
cs
out
sar
fisubl
inc
adcl
jmp
ljmp
xchg
mov
testb
or
negl
je
jmp
push
adc
rorl
out
in
xchg
repnz
fisttpll
popf
leave
mov
cmp
imul
out
mov
in
xchg
push
push
ret
pop
add
test
cltd
pop
mov
dec
jg
sbb
xchg
jae
mov
dec
mov
pop
inc
push
jbe
aad
mov
jg
daa
mov
xchg
cmovne
gs
inc
aaa
stc
and
dec
test
adc
adc
shlb
pop
rolb
fistpll
inc
into
mov
inc
adc
xor
or
fists
into
inc
mov
push
mov
iret
rcll
enter
hlt
sbb
test
cmp
lret
or
cwtl
adc
mov
xchg
jle
ret
leave
das
sub
inc
je
jp
jecxz
sbb
and
popa
mov
mov
lods
adc
lret
mov
pop
add
sti
in
add
sub
stc
std
gs
lock
jl
push
outsl
cld
cmpsb
aad
and
scas
cmp
pusha
jbe
inc
mov
sahf
dec
aaa
mov
mov
in
mov
pop
mov
inc
or
fmul
mov
in
pop
scas
or
add
orb
pusha
xchg
pusha
sbb
inc
lock
xchg
pop
ret
or
in
cmp
mov
sub
pop
push
gs
cli
xchg
xor
shlb
movb
pop
mov
mov
dec
icebp
call
sub
sub
aaa
adc
bound
or
mov
dec
out
or
add
scas
push
and
push
mov
jns
or
ja
xor
push
gs
iret
data16
cmpl
mov
fldt
daa
cmp
leave
jne
jo
das
cli
jle
aam
lahf
ror
mov
ror
movsb
aam
sbb
pop
adc
repz
mov
xchg
pop
int3
fistl
xchg
push
fildl
int3
lea
cmpsb
out
jo
fs
xchg
mov
fwait
mov
repz
int3
cli
xor
mov
test
push
push
das
xchg
sahf
ja
dec
sub
push
bound
fs
insb
add
push
xchg
or
cmp
and
test
xchg
iret
repnz
popa
fldenv
xchg
dec
rcll
int3
jecxz
inc
push
and
pop
mov
cmp
popa
shrb
dec
mov
dec
stos
and
call
xor
mov
repnz
leave
inc
in
sbb
sbb
sub
xor
scas
mov
repnz
xchg
add
mov
jns
pop
inc
inc
dec
sub
inc
call
push
lock
cld
out
repnz
jb
xor
js
adc
andb
out
and
xchg
ficoml
pop
pop
in
es
mov
push
ret
add
lret
jle
xchg
jle
sub
out
int3
lcall
or
push
push
aas
jle
popf
xchg
icebp
add
fidivl
stc
ljmp
fildll
mov
insb
inc
in
and
cmpsb
jne
imul
push
lcall
lahf
insb
mov
inc
push
xor
in
scas
ret
aas
movsl
mov
jmp
cmp
cwtl
jp
rol
sub
dec
dec
or
push
adc
movl
jl
fs
pushf
mov
push
popf
inc
jb
aad
or
pop
shl
out
movsb
pop
xchg
mov
dec
int3
subl
sbb
inc
or
or
mov
sbb
mov
cmp
add
inc
fcomp
inc
imul
sub
idivb
nop
inc
test
sub
rcll
pop
rorb
repz
imulb
pop
lcall
sub
pop
mov
ss
xchg
int3
cmp
stos
lret
xor
xor
ret
fcomip
mov
fsubr
xchg
aaa
fs
movsb
loope
cmp
fcmovnu
lods
rolb
push
push
or
pop
ret
fsubl
es
ds
sbb
xchg
ror
outsb
icebp
or
mov
or
loopne
bound
mov
adc
adc
call
stc
addr16
lods
push
cs
sub
cli
jo
cmpsl
xlat
in
and
ds
ret
push
pop
aam
pop
les
sub
stos
lods
cli
dec
mov
mov
lods
ljmp
mov
or
inc
jae
inc
and
scas
inc
out
mov
adc
lods
mov
or
mov
stos
jge
push
cwtl
rorl
sub
sbb
sbb
pop
jecxz
pop
insl
cmpsl
in
jbe
popf
ja
xor
cltd
rcll
data16
push
xchg
jge
loope
dec
adc
icebp
xchg
or
hlt
frstor
es
push
cmpsb
push
cmp
loop
mov
int3
hlt
iret
or
test
mov
xchg
xor
pop
cmp
clc
dec
aas
je
dec
push
mov
mov
xor
cmp
mov
repz
int3
pop
das
mov
pop
pop
cmp
dec
or
stc
xor
or
inc
pop
test
imul
adc
adc
push
inc
shrb
in
mov
into
out
outsl
pop
rorb
mov
mov
sti
sbb
sub
push
sbb
mov
cmc
dec
mov
js
pop
mov
jp
mov
push
ret
sbb
mov
dec
clc
jnp
add
movsl
dec
cltd
cs
aas
sub
dec
out
fldl
imul
jg
sahf
mov
in
jbe
xchg
and
dec
cltd
cmp
pop
xor
mov
sbb
jp
mov
mov
sarl
or
test
call
aam
out
cli
jb
fistl
push
lods
sbb
scas
mov
in
mov
ror
mov
xor
cmp
hlt
xchg
and
jae
and
push
push
fs
xchg
mov
or
out
sbb
ljmp
ret
lods
sahf
aam
pushl
xor
dec
and
sub
stc
mov
cli
sub
lock
mov
mov
lret
adc
bound
mov
mov
jo
jg
sbb
or
daa
leave
push
inc
cltd
mov
cmp
mov
xor
dec
sahf
mov
enter
lahf
cltd
inc
and
jle,pn
sbb
or
dec
std
pop
adc
pop
mov
fisttps
sbb
inc
push
xchg
repz
cwtl
mov
cmp
sbb
test
jno
dec
out
cmpsl
std
jo
aam
mov
mov
cli
in
dec
out
add
inc
test
cltd
mov
aas
add
lods
mov
xor
movsl
cmp
cmc
leave
adc
dec
jle
lret
es
dec
sub
push
mov
add
mov
push
shl
and
jmp
mov
cmp
repz
lret
int
call
xchg
test
dec
cmp
les
or
xor
jbe
pop
pop
jecxz
xchg
push
mov
aam
int
add
pusha
push
sub
jb
adc
rol
pop
mov
cmp
iret
ret
or
movsb
or
clc
scas
push
xchg
ss
test
or
cmp
lock
xor
cld
dec
inc
int3
push
rclb
inc
andl
xor
xchg
mov
inc
jle
in
insb
push
movsb
pop
sbb
xor
daa
lcall
lret
inc
repnz
dec
push
stos
iret
inc
and
inc
or
cld
cmp
test
dec
dec
inc
test
outsl
mov
test
test
jp
in
iretw
add
pop
test
mov
dec
rol
mov
jle
pop
fldcw
outsl
out
sbb
inc
jns
stos
adc
in
add
pop
push
add
xchg
cmc
test
mov
inc
add
int
or
jo
cmp
push
ret
pop
inc
test
flds
mov
inc
rcrb
shrb
lahf
pop
dec
int
hlt
jecxz
repz
or
nop
push
lea
sub
nop
xor
fwait
neg
les
ljmp
sub
pop
sub
jp
lahf
fbstp
add
mov
pop
mov
pusha
popf
cwtl
sbb
stos
inc
pop
mov
inc
pop
mov
push
sbb
and
in
mov
push
push
addr16
xchg
pop
icebp
int3
cs
cwtl
jb
insb
mov
movnti
loop
pop
rorb
mov
aad
icebp
xchg
movsb
mov
cmp
push
jmp
pop
jne
mov
inc
mov
inc
test
loopne
xchg
gs
adc
fs
inc
sbb
xchg
push
adc
xchg
inc
ja
xchg
bound
inc
jecxz
cmp
sbb
or
ffreep
mov
mov
iret
lds
cmp
sbb
mov
out
ret
inc
jl
nop
and
int
fsts
xchg
cld
add
ljmp
lret
ret
test
pop
fists
int
mov
repnz
addr16
dec
xchg
add
iret
cwtl
push
inc
mov
cwtl
test
jg
sbb
mov
jbe
js
mov
mov
repnz
ss
sti
iret
rcrl
and
in
jbe
jne
outsl
xor
sbb
lds
xchg
ficoms
cmp
test
push
dec
sbb
fistl
cmp
test
or
dec
outsl
fnstenv
fistpl
mov
cmp
dec
xor
sub
shrb
mov
xchg
int
mov
add
call
push
repz
data16
test
loopne
jbe
call
cs
lods
gs
push
sbb
adc
out
insl
xchg
scas
push
cs
mov
fisubl
adc
mov
nop
popa
mov
insb
sub
mov
xchg
mov
movsl
xor
das
jbe
insl
movsl
pop
xchg
scas
and
mov
ret
addr16
inc
mov
loope
jno
jp
invd
ret
inc
out
pop
imul
cs
insb
cmp
sti
jo
pop
orl
pop
pop
mov
jge
sti
sbb
mov
loope
cmc
xchg
cmp
sbb
lahf
adc
in
or
xchg
pop
lds
ret
clc
adc
and
mov
adc
loope
je
cmpsl
fbstp
and
jecxz
lods
leave
push
sbb
ss
aas
subl
cltd
xor
or
jmp
xor
test
push
jle
je
mov
into
daa
sbb
or
movsb
pop
pop
in
fidivrs
jp
mov
or
inc
push
add
jnp
fidivl
out
repz
fadds
pop
mov
gs
add
dec
dec
ret
cmp
jge
or
inc
lock
pushf
xor
jle
or
cs
ja
into
imul
fsts
or
outsl
popa
shrl
xchg
jl
repnz
or
out
sbb
ss
repnz
push
mov
out
jl
mov
mov
imul
inc
sbb
out
cmpsb
std
fsubl
adc
and
push
and
adc
and
mov
sub
ret
sbb
xchg
sub
add
mov
dec
mov
xchg
mov
mov
andl
mov
adc
test
push
push
dec
dec
push
mov
iret
xchg
mov
fistpl
ja
pop
push
sub
push
outsb
push
cmpsl
std
arpl
pop
mov
lret
or
enter
push
ss
push
pop
fsubl
dec
les
into
jle
mov
adc
mov
adc
mov
or
jns
push
fsub
xor
cmp
cwtl
lahf
inc
imul
addr16
popa
lods
or
outsl
xchg
pop
loopne
pop
push
dec
jge
loop
pop
js
pop
fidivs
ss
xor
adc
jbe
mov
push
push
fidivrl
lods
xchg
fildll
xchg
lods
into
fwait
sub
push
xor
jg
xchg
jle
adc
cmp
imull
popa
cmc
pop
mov
stos
jmp
sub
inc
cmc
dec
lock
dec
addr16
mov
mov
sahf
cmpsb
stos
mov
incb
leave
cmp
dec
pop
in
xorb
xchg
adc
mov
aad
jmp
xchg
fadd
ljmp
stos
lock
adc
pop
mov
jg
mov
pop
pop
xor
hlt
sub
loope
xor
add
jmp
hlt
sti
xchg
jecxz
lcall
sbb
sbb
addr16
arpl
pusha
out
lret
pop
mov
jl
in
adc
push
jb
addr16
fsts
mov
jb
adc
ja
jmp
push
mov
mov
adc
es
xlat
sbb
mov
fistps
nop
and
sub
and
push
outsb
incb
mov
xchg
xchg
loope
mov
in
sbb
inc
lcall
and
jp
cmp
push
or
lods
jp
fwait
sub
in
xor
jp
inc
sahf
out
adc
aad
mov
jbe
xor
out
push
ljmp
or
out
outsb
cmc
push
lock
fistpl
jb
cwtl
jo
xor
mov
movsb
shlb
jbe
mov
jne
movsb
aam
or
mov
xor
pop
mov
dec
call
and
daa
sti
mov
push
dec
fs
fcomps
mov
cltd
leave
inc
fsts
sbb
in
popf
add
pushl
push
xor
mov
jb
rcrl
pop
adcb
or
int
dec
cmc
iret
int3
subl
jle
idivl
pop
fs
ljmp
jae
mov
push
xchg
sbb
inc
hlt
xor
xor
push
pushf
lret
inc
mov
scas
pop
and
inc
ja
jl
add
cmp
ja
ds
dec
int3
or
enter
divb
xlat
or
test
pop
cmp
xor
ds
pop
mov
adc
jb
jb
mov
xchg
add
push
inc
fisubl
ljmp
ret
push
arpl
pusha
pop
mov
cmp
or
push
lret
adc
xchg
mov
mov
mov
movsl
jo
in
loop
imul
xorl
mov
bound
mov
fsub
xchg
mov
jo
sbb
enter
inc
xor
mov
or
cli
cltd
xor
in
ja
insl
sbb
mov
sti
into
sbbb
into
nop
xor
xor
mov
xchg
popa
in
jp
inc
jecxz
jne
pop
cli
ja
mov
arpl
xor
push
mov
les
jp
movsl
stc
out
sbb
cs
mov
imul
inc
fisttps
fisubrs
ss
dec
mov
xchg
popf
push
xchg
das
addr16
sbb
pusha
xchg
es
push
imul
push
imul
cmpsl
push
pop
cltd
sar
aad
xchg
jns
xor
jbe
arpl
iret
jbe
call
mov
les
stos
lea
sbbl
ficomps
mov
mov
test
push
sub
ficoms
xchg
popf
cmp
pop
push
xor
imulb
mov
xchg
push
pop
dec
inc
popa
or
inc
std
popf
jp
cmpsb
lods
push
dec
test
xor
push
jno
pop
jl
xchg
mov
aad
lcall
sahf
notl
outsb
mov
xlat
adc
mov
and
xchg
shll
add
ja
cld
enter
fistpll
in
cmp
aas
outsl
add
in
js
movsb
scas
jns
and
sbb
sub
outsb
add
adc
mov
and
mov
movsl
fistpl
adc
sti
andb
sbb
mov
in
mov
mov
xor
push
xchg
movsl
mov
aaa
lods
mov
push
lahf
stc
fdivl
aad
and
xor
push
mov
push
imul
test
fstpl
add
push
and
test
pop
lock
sbb
in
push
inc
hlt
inc
and
or
jecxz
and
or
std
leave
and
imul
aam
filds
inc
or
lret
in
adc
loope
push
jns
js
arpl
int
sbb
or
cmp
sub
mov
adcl
xacquire
cmpsb
bound
push
or
imul
int3
test
mov
inc
in
dec
mov
push
das
and
ja
push
and
or
cld
sub
or
pop
add
push
leave
xlat
push
xor
sub
dec
push
das
scas
loope
scas
xor
mov
fstpt
and
xlat
nop
scas
and
ss
aas
jo
jb
stos
in
test
jmp
sub
cmp
inc
mov
pop
jecxz
cmp
int3
out
inc
test
std
xchg
xor
popf
out
inc
andb
mov
sbb
insl
mov
pop
dec
and
xor
sub
push
dec
mov
insl
roll
dec
bswap
fsubrs
fsubl
imul
call
out
aad
out
add
lret
cmp
mov
or
lock
mov
push
jno
pusha
fistl
scas
cmp
sub
nop
inc
insb
flds
imul
jo
cmp
pop
or
jae
cmp
sbb
mov
and
sbb
pop
xor
fistpl
lock
inc
adcb
enter
ljmp
int3
mov
les
cmp
cwtl
inc
xchg
in
incl
pop
jl
mov
mov
push
mov
ljmp
mov
cli
in
push
imul
push
cmpb
jno
iret
adc
xor
or
scas
gs
jbe
mov
fcmovne
mov
pop
outsl
std
ljmp
or
xchg
dec
outsl
jmp
cmp
inc
add
inc
int
popa
mov
mov
mov
adc
scas
jg
mov
jl
addb
int
mov
and
fwait
xchg
inc
cmp
loope
jg
sub
xchg
push
lcall
leave
pop
mov
stc
pop
push
inc
scas
addb
das
scas
sub
cli
adc
pop
dec
lods
les
cltd
push
lds
inc
cmpsl
in
aas
in
pop
or
jl
sbb
jae
mov
sub
cmp
mov
flds
into
das
xchg
cli
js
push
sub
icebp
inc
repz
call
lret
xor
loope
adcl
sub
in
mov
popa
mov
add
xor
mov
ret
ja
xchg
test
xor
in
jge
dec
fldt
mov
or
test
sbb
js
xchg
pop
int3
dec
cmc
mov
mov
and
lock
push
xor
mov
dec
cmp
add
pop
fldcw
add
and
sub
gs
cli
xchg
movsb
sub
mov
mov
push
cs
push
push
sbb
pop
inc
test
nop
js
out
xchg
sbb
cmp
cmova
es
test
cmp
lea
mov
dec
ds
bnd
sub
mov
lret
or
aad
mov
stos
stc
mov
and
cmp
mov
xor
cwtl
mov
lds
pushl
sbb
repz
jb
dec
pop
mov
rcll
test
shl
and
mov
adc
addr16
jl
pmulhuw
or
or
aas
jae
jle
push
clc
xchg
xchg
movsl
pop
add
loop
pop
scas
cwtl
jmp
subl
out
jmp
pop
jbe
rcrl
jnp
sub
dec
pusha
inc
pop
fimuls
test
mov
stos
xchg
stos
cmpsl
shlb
mov
ja
sahf
sub
cmp
mov
jns
push
xor
xor
out
xor
dec
xchg
jmp
aas
inc
cmp
mov
dec
pop
lods
cltd
mov
jmp
adc
dec
cmpb
mov
xchg
mov
push
dec
cmp
push
cmpsl
jle,pn
dec
sub
fsubl
mov
icebp
and
aas
mov
out
ret
fwait
in
dec
sbb
push
mov
sbb
and
cwtl
sub
push
mov
dec
rolb
or
inc
imul
and
lret
jne
imul
stos
dec
xor
sbb
lret
jnp
xor
add
out
and
jns
lods
push
xor
lds
sub
and
cli
pop
repnz
jae
inc
notb
dec
pop
jne
or
or
stos
sti
mov
cmp
js
dec
jge
mov
lcall
das
sub
add
out
adc
gs
or
adc
jbe
jns
daa
mov
push
push
subb
mov
notb
std
inc
jmp
xor
and
ljmp
es
xchg
ja
mov
mov
pop
lcall
cmpsl
mov
and
cmp
sti
or
push
orl
add
cwtl
lcall
push
in
adc
mov
test
mov
push
jp
cmpsb
in
sub
lcall
roll
dec
outsb
mov
push
or
jns
dec
cmp
and
sub
ret
in
mov
mov
xor
cltd
or
push
pop
sahf
mov
mov
xchg
gs
xchg
jg
movsb
mov
cmp
js
mov
imul
inc
rcrb
ja
mov
mov
std
scas
out
jae
pop
enter
dec
insb
cmp
push
out
fstps
inc
addl
mov
dec
addl
sbb
lcall
sub
push
and
test
mov
cld
enter
pop
imul
fnstenv
lds
add
insb
scas
sahf
dec
shrb
pop
dec
cmpsb
xor
aaa
outsl
test
jb
cmp
inc
xor
xor
inc
clc
imul
push
stos
inc
stos
aam
mul
mov
or
and
mov
jns
arpl
fstps
imul
data16
mov
leave
enter
lds
out
mov
es
xchg
shrb
xchg
add
stos
pop
mov
push
std
push
ret
xor
decb
in
push
jne
adc
aas
mov
fs
cwtl
cmp
aaa
pushf
pop
and
ret
ret
push
mov
push
bnd
push
xor
call
mov
addl
mov
sti
cmp
rcll
repz
push
lret
cli
dec
xor
notb
add
xor
lret
ss
xchg
inc
std
or
jmp
pop
ss
shll
movsl
fsubr
enter
clc
xchg
ficoml
pop
aaa
lea
cltd
push
cmp
dec
pcmpeqd
push
lret
pop
iret
pop
or
adc
jbe
lahf
jno
es
ljmp
adcb
adc
stos
sti
or
cmp
push
test
xchg
fptan
sarl
cmc
icebp
xchg
ja
movsl
mov
ret
cmpsl
nop
push
dec
call
fwait
sbb
int
cmpsb
mov
mov
xor
sbb
cmp
mov
je
mov
xchg
repz
pop
lret
jmp
mov
cli
inc
inc
addb
lret
push
rorl
std
inc
xor
pop
out
leave
jmp
test
mov
imull
orl
sbb
push
jae
mov
add
sbb
aad
lahf
fsubl
jb
adc
mov
inc
mov
xor
popf
and
pushl
imulb
leave
push
push
imul
inc
sbb
stos
xchg
lods
addb
rcl
rcr
dec
or
imulb
push
jecxz
je
ret
ss
lcall
xor
push
out
mov
jne
sar
cmp
cltd
in
fcomip
fildl
jecxz
xor
xchg
leave
sub
subb
adc
xlat
jg
and
mov
mov
out
add
sbb
dec
inc
pop
adc
xor
add
jp
sahf
pop
jge
and
mov
loope,pn
lods
mov
test
add
dec
xor
ficomps
add
adc
lahf
stos
rcrb
dec
imul
ret
scas
jo
ficomps
and
je
fnstsw
mov
les
xchg
dec
insb
dec
fstps
xlat
bound
mov
mov
outsb
loope
sbb
jmp
pop
or
es
lods
mov
in
cmp
xchg
xor
jg
xchg
xchg
dec
and
out
push
cmp
test
loope
cmp
cmp
inc
cmp
push
into
mov
cmpsb
or
add
stc
mov
fisubrl
imul
mov
test
push
and
divb
cmc
test
push
scas
ljmp
xor
xchg
test
pusha
repz
ret
lahf
ss
jnp
adc
jg
xor
inc
lret
jmp
lock
xorb
add
outsb
lret
mov
nop
fwait
sub
pop
das
sbb
popa
add
sub
mov
ret
sbb
lret
lcall
ja
cwtl
in
cs
pop
mov
cltd
imul
loopne
sarl
mov
cmp
adc
repnz
ret
ret
insl
punpckhdq
repz
add
cmp
and
ret
ds
fs
bound
cmpl
inc
ret
xchg
mov
mov
mov
int
std
add
outsl
stc
sbb
pop
pop
xor
sub
loop
std
mov
jmp
mov
or
and
lock
fidivrl
aaa
jmp
sbb
push
ds
mov
aas
rcrb
sub
test
push
cli
sarl
hlt
sahf
bound
leave
into
arpl
inc
hlt
repnz
cmc
push
or
orb
or
outsl
loope
and
xlat
loopne
not
sbb
mov
xchg
push
pop
jno
xor
shrw
test
aam
inc
jmp
les
repnz
aaa
scas
cwtl
test
test
mov
loop
ret
jns
push
push
xchg
and
add
stos
lods
adc
add
or
inc
cmpsl
sub
aam
adc
daa
loope
in
test
push
scas
enter
stc
mov
ljmp
cmp
pop
jbe
and
mov
adc
sti
daa
es
imul
int
pop
mov
lcall
dec
insl
jecxz
mov
repnz
pop
das
divl
cmc
jnp
and
out
or
bound
sbb
out
push
test
cli
insl
ret
fsubs
or
leave
imul
aas
pop
add
insb
add
popf
imul
sub
imul
ja
add
inc
cmp
imul
sub
jbe
std
cmpsb
pop
outsl
or
add
outsb
les
lahf
test
pop
int3
call
mov
sub
xlat
fsts
jle
int3
shll
test
lahf
sbb
aad
and
and
dec
testl
pop
add
jo
jl
xor
mov
jno
sahf
adc
xchg
inc
sub
inc
ds
sbb
push
cs
add
xchg
jnp
dec
jns
pop
fildll
jb
repnz
shrl
mov
loop
jmp
jne
cwtl
shrl
lretw
pop
in
cmp
out
xchg
insb
dec
ljmp
fcoml
or
add
cmpsw
xor
int
and
add
leave
push
movsb
repz
adc
dec
add
ja
push
lea
jg
push
aas
push
cmp
aas
jns
pop
das
adc
or
xor
and
sbb
leave
add
mov
cmpsl
clc
push
adc
cli
jecxz
test
test
fisubl
jnp
cmp
cmp
mov
mov
sub
pop
xor
cmp
pop
and
and
lret
lock
and
pusha
mov
mov
cmp
xchg
mov
mov
xchg
fisttpll
sbb
mov
push
pushf
pop
mov
cli
int
jecxz
dec
pop
jne
pop
fidivrl
push
out
fdivrs
pop
call
insb
mov
cmp
leave
or
cs
inc
jmp
xor
ljmp
fwait
xchg
add
cmpsl
fimull
out
and
pop
scas
fidivl
xchg
dec
ss
repz
pushf
mov
movsl
cmp
sub
lock
xor
cmpsb
test
jle
es
fs
mov
sbbb
inc
jb
fistpl
cli
ret
jge
nop
xchg
push
arpl
xlat
in
icebp
ljmp
lds
dec
repz
ficoml
pushf
in
pop
cwtl
push
push
std
shll
movsl
fcoms
movsb
cmpxchg
ljmp
sub
pop
mov
scas
push
rclb
repz
shrb
pop
cmp
pop
mov
or
stc
mov
fmull
sub
mov
mov
mov
fidivrl
pop
adcb
fisubrl
xchg
popf
push
or
lcall
stos
mov
push
jo
pop
repz
or
stos
push
and
js
and
jnp
push
hlt
les
arpl
scas
lcall
fwait
xor
mov
dec
add
lock
cmpb
dec
add
ret
fucomi
jne
jl
cmp
mov
enter
jle
pop
cmp
loope
sar
aas
mov
dec
mov
mov
adc
xor
addr16
add
lcall
adc
and
push
lods
xor
lcall
mov
xchg
pop
lret
leave
cmp
cmp
test
xchg
lret
repz
mov
pop
hlt
pop
aam
lret
cs
mov
insl
outsb
repz
sub
jbe
xor
dec
movsb
sub
mov
sahf
mov
pop
jnp
ret
data16
mov
cmp
ret
jg
aad
cmp
jne
add
sbb
mov
or
lds
push
sbb
scas
inc
push
mov
push
mov
dec
fucomp
cmp
scas
and
mov
pop
inc
mov
sti
leave
stos
cmpsl
dec
decb
cmp
scas
movl
aam
int
inc
ss
outsb
cmpsb
stos
jmp
stos
pop
or
mov
pop
das
mov
ja
jle
fbld
loopne
jmp
ret
in
cmpsl
cltd
adc
ret
jmp
push
mov
mov
shrl
sti
cmpsb
pop
and
dec
or
adc
or
add
pop
pop
push
sti
push
ret
xchg
repz
shlb
add
mov
mov
inc
mov
clc
dec
or
mov
pop
or
dec
pop
pushf
aam
add
test
add
inc
test
mov
je
clc
adc
popa
push
nop
mov
repnz
lcall
and
in
fmuls
sub
shr
hlt
andps
fists
cmpsb
adc
mov
jmp
jnp
xlat
ljmp
push
dec
push
ret
add
mov
sub
ja
jnp
rcrb
int3
mov
adc
push
nop
imul
jb
sbb
fdivrs
adc
xchg
fsub
cmpl
icebp
cmc
aam
ds
negl
add
cltd
lods
pop
mov
in
fistpll
push
shrb
xor
cmp
movsb
mov
imul
add
addr16
adc
iret
add
xor
faddp
les
push
mov
dec
lock
ja
sti
mov
mov
or
or
shrl
add
cmp
out
testb
cmpsb
jmp
dec
pop
idivb
sub
dec
pop
adc
and
js
xor
rcll
stos
int3
xor
adc
js
lea
lret
push
call
xor
mov
xor
cltd
lods
aad
or
les
out
cs
cmp
andb
cmp
pop
push
push
or
or
mov
adc
iret
dec
ret
pop
stos
mov
out
int
push
dec
mov
mov
xlat
dec
fnstsw
call
je
andl
xor
popa
mov
movsb
mov
imull
add
add
fildl
lret
jg
xchg
lcall
in
and
daa
test
fwait
cmp
mov
add
mov
jmp
js
icebp
cmp
outsb
aas
into
addr16
inc
mov
or
sahf
add
into
jg
xchg
or
dec
inc
or
popa
test
aas
mov
data16
div
out
ja
cltd
sbb
or
xacquire
stc
jb
xchg
out
add
incl
sub
sub
push
icebp
test
inc
cltd
xlat
mov
hlt
popf
and
inc
popa
push
pop
loope
into
out
push
ljmp
inc
sub
xchg
push
pop
fisubrl
sbb
imul
add
xor
xchg
jg
shl
sub
pop
fnstenv
mov
movsb
jmp
movsl
insb
cld
or
push
cmp
mov
jnp
jmp
add
inc
rol
xorb
sti
pop
pop
add
jbe
pop
inc
cmp
movsl
inc
fcmovb
fwait
inc
sub
xchg
cmp
pop
mov
push
push
jmp
xchg
mov
imul
movsb
xchg
pushf
test
in
sub
xor
mov
pop
mul
scas
sub
sbb
les
and
jo
in
cmpsb
dec
stos
mov
xchg
pop
jge
insl
push
aas
cli
sbb
inc
dec
pop
mov
jbe
cmp
and
js
das
js
xor
cld
jmp
cld
les
insb
sub
mov
xchg
nop
or
gs
pop
and
stos
arpl
xchg
jb
hlt
fimuls
push
or
jp
xor
adc
aam
es
cli
dec
push
fdivrl
or
lea
mov
adc
add
push
outsb
std
sbb
addr16
cs
rorb
int3
xchg
jbe
std
xor
pop
and
add
push
push
pop
clc
aaa
add
inc
mov
xor
gs
outsl
mov
or
lods
ja
inc
and
mov
daa
xlat
repnz
dec
pop
pop
dec
push
clc
mov
mov
aam
enter
jns
imul
ds
loop
imul
addl
repz
sbb
lret
xor
adc
ljmp
mov
out
mov
sub
rcrb
jns
mov
dec
cmpl
push
stc
sarl
inc
mov
mov
ljmp
in
pop
pop
pop
jmp
in
jmp
ds
gs
jne
pop
dec
adc
adc
cmc
jle
inc
xor
inc
data16
loope
add
jb
push
add
shl
rcl
test
int3
cmpsl
rcrb
int3
sub
pop
lods
xor
xor
mov
xor
jl
jp
xlat
xchg
sub
movsl
xchg
dec
mov
xchg
xchg
js
xorb
pop
xor
mov
popa
push
adc
mov
cltd
lea
orl
mov
aad
inc
inc
outsl
jne
dec
es
and
bswap
push
rcrb
jb
xchg
jg
xor
pushf
push
mov
xor
or
lods
fstpt
fwait
adc
repz
movsl
pusha
xchg
cmpsl
mov
or
cmp
shrb
or
sbb
fmuls
call
into
stos
mov
and
add
loop
test
and
stos
insl
outsl
pop
cmp
loope
fstps
js
inc
movsl
lods
iret
stos
popa
cmp
fbld
push
xchg
repnz
gs
mov
adc
jo
adc
sub
out
mov
jge
inc
sub
int3
bound
dec
or
pop
mov
mov
xchg
xchg
test
inc
data16
cmp
fs
cmp
jnp
mov
cmpsl
sbb
jge
scas
add
into
pushf
sbb
arpl
cmc
add
and
bound
sbb
sub
mov
pop
cmp
in
mov
and
push
insb
xlat
shrb
movsb
and
outsb
push
testb
jp
hlt
pop
inc
jp
xchg
and
mov
fldt
inc
lods
fisubs
add
mov
jecxz
xlat
insl
jecxz
mov
fsub
leave
adc
into
jno
jae
mov
cmp
lds
xor
rolb
mov
mov
add
cltd
sub
loop
rcll
and
orb
push
vpcmpeqb
or
fstl
repz
aas
push
push
pop
sbb
mov
mov
cmp
jno
pop
dec
dec
icebp
pop
jno
popf
ss
push
xor
lret
adc
aam
adc
cli
add
mov
mov
push
movsl
or
push
cld
jnp
out
jo
shl
pop
popf
xor
loop
pop
adc
notl
dec
dec
dec
lds
add
add
aad
mov
cmp
out
fcmove
sbb
sbb
add
jle
popf
cltd
js
push
mov
lods
outsb
xor
mov
mov
mov
addr16
pop
add
les
sti
repz
mov
or
loope,pn
pop
or
mov
sysexit
add
or
pop
cli
daa
xor
mov
fisttpl
fistl
push
std
cmp
fldcw
stos
inc
jle
jmp
push
xlat
pop
sub
aas
loop
and
ljmp
pushf
push
xor
mov
and
ja
pop
xor
or
jp
out
mov
cmpl
subb
push
push
inc
inc
mov
inc
out
mov
cmp
mov
xchg
xchg
loopne
sti
cmp
fsubs
pop
lods
sbb
test
sarb
cmp
fsubl
xlat
out
data16
es
cmpsb
pop
mov
and
jae
mov
mov
arpl
or
and
sub
sbb
ljmp
and
dec
mov
push
clc
sbb
cld
mov
and
fcomi
insl
mov
fucomi
in
xor
and
push
sbb
cld
popf
push
dec
daa
insb
fscale
mov
repz
cmc
xlat
lcall
pop
nop
subl
and
test
daa
mov
lods
pop
sbb
xlat
and
sbb
fcoml
jno
jae
jnp
and
decl
cwtl
jg
cltd
mov
xor
and
xchg
enter
pop
ds
cmp
add
inc
xchg
pop
pop
pusha
mov
push
mov
ficoml
ss
loope
push
dec
popa
mov
add
xor
sub
leave
and
dec
pop
mov
testl
pop
inc
pop
shlb
mov
jmp
mov
sub
js
mov
sbb
xchg
pop
xchg
nop
dec
dec
lret
inc
sbb
imul
jno
push
cmp
inc
bnd
rcl
sbb
shll
mov
xchg
pop
inc
jl
icebp
scas
mov
addr16
pop
jmp
push
ret
adc
ljmpw
sti
add
mov
imul
adc
out
mov
cmpsl
xor
push
mov
pusha
mov
fwait
and
pusha
mov
add
insl
mov
xlat
inc
leave
sbb
mov
daa
movsb
sub
adc
or
sti
pop
fistpll
xchg
add
sbb
and
into
test
push
shlb
jecxz
xchg
mov
mov
sbb
pop
lods
add
imul
xchg
clc
arpl
aad
out
aad
push
fiadds
add
fsubrs
adc
mov
jle
xchg
dec
inc
push
adc
inc
mov
cmp
fs
mov
ret
repz
add
mov
out
cmp
fidivrs
xchg
aas
xchg
scas
dec
fnsave
fsubl
enter
add
pop
pusha
loope
enter
or
iret
insl
sti
stos
and
xchg
xor
pop
loope
mov
rcrl
ljmp
jnp
icebp
lods
jle
hlt
out
sub
sub
lea
xor
xchg
cltd
or
mov
imul
pop
push
or
pop
pusha
lea
roll
cmp
icebp
testb
mov
mov
sbb
jne
jne
and
or
mov
cli
loopne
pop
fwait
bound
jns
lea
and
mov
int3
inc
negl
or
lcall
mov
xchg
xchg
lock
add
mov
imul
xorb
inc
or
in
adc
pop
jno
or
clc
leave
lock
ljmp
mov
sbb
or
outsl
cltd
and
jne
int
ss
dec
mov
outsb
inc
jae
into
sub
lock
in
add
arpl
lret
pop
ja
das
cmc
sahf
jecxz
sub
in
fdivs
js
cmpb
or
and
push
mov
stc
scas
jb
pusha
in
inc
xchg
cmp
push
popf
fwait
sbb
dec
cwtl
mov
cli
mov
cld
xor
inc
fbld
cmp
clc
cmp
ret
lods
jecxz
clc
lret
push
pop
js
xchg
add
add
dec
and
jae
fidivrl
pop
lea
xchg
out
test
mov
jo,pn
xor
fiaddl
jae
cltd
xchg
and
jle
inc
popa
mov
xlat
mov
lds
aam
test
pop
repnz
push
mov
lods
sub
sub
push
push
cltd
inc
lea
data16
bound
mov
adc
jbe
jns
and
mov
mov
fidivrl
mov
repnz
xchg
xchg
and
mov
cmp
jno
mov
loope
lret
or
and
mov
pop
xchg
xor
pop
pop
popa
mov
fs
mov
mov
and
or
add
adc
out
cltd
jle
cmp
push
ds
sbb
xchg
aaa
mov
cwtl
addr16
je
iret
ret
xor
rcr
mov
adc
push
add
adc
xor
jae
lock
sti
inc
push
xchg
push
xchg
mov
or
jnp
mov
push
imul
cmp
ljmp
mov
adcb
xor
scas
es
fbld
flds
les
add
mov
or
cltd
inc
fnstenv
push
test
or
fldl
mov
or
sub
cmp
pop
and
jne
dec
in
scas
mulb
sub
xchg
push
out
imul
imul
cwtl
xchg
pop
dec
sbb
test
or
imul
icebp
push
imul
or
mov
dec
pcmpgtd
ja
xchg
pop
mov
xor
fsubl
fldenv
sti
lahf
iret
sbb
cmc
jns
pop
cli
mov
and
mov
es
mov
divl
ss
xchg
cmp
loope
add
and
add
or
push
mov
add
rorb
ss
xor
out
fwait
subl
jno
sti
or
loop
leave
mov
enter
addb
popf
lret
pop
enter
imul
arpl
xchg
cmp
fnsave
mov
sbb
ret
adc
dec
data16
inc
mov
clc
dec
imul
inc
mov
outsb
lock
xor
das
cld
pop
pop
dec
out
arpl
pusha
xchg
dec
bound
into
ret
ds
cmp
xor
xchg
int3
inc
mov
mov
or
jns
sbbl
push
rcr
cmp
scas
dec
movsl
js
mov
mov
jmp
sbb
imul
fistpl
das
clc
xchg
add
test
leave
xor
mov
call
sahf
xlat
xrelease
ficoms
stos
inc
enter
dec
jnp
stc
pop
jg
popf
das
push
xchg
pop
mov
stc
les
mov
xlat
cli
cwtl
inc
fnstsw
push
adc
loopne
repz
movsb
daa
inc
call
mov
add
or
or
out
mov
cmp
inc
stos
pop
fnstenv
cmp
jge
frstor
rcrl
mov
sbb
dec
mov
mov
jg
push
dec
add
lods
repz
pop
sub
xor
je
inc
xor
loope
cld
jno
jns
and
rcrb
dec
cmp
and
mov
add
mov
in
fmul
sub
imul
ds
iret
jp
fs
out
xchg
push
icebp
pop
dec
cmpsb
jae
outsl
cmp
repnz
cmc
mov
mov
mov
in
stc
pop
jg
xor
adc
cwtl
fs
cmp
xlat
je
cmc
stos
js
and
sbb
je
push
sti
cwtl
jnp
movsb
cmpsl
pinsrw
adc
movsl
add
ds
out
push
xchg
mov
insb
lods
rolb
xchg
pop
jp
nop
mov
int3
imul
jp
xchg
imul
push
daa
jl
mov
loop
sbb
jecxz
dec
pop
cmpsb
lods
sbb
hlt
lahf
push
cwtl
pushw
rcr
adc
add
pop
adc
jge
jbe
ds
ss
loope
mov
and
mov
xchg
push
push
cmp
insl
outsb
cmp
jo
and
popf
fcomps
fbstp
push
mov
add
aam
jmp
add
into
mov
push
js
int
dec
leave
add
xor
in
ljmp
jno
daa
fiadds
and
push
scas
ja
int
mov
pop
sahf
or
pop
sub
hlt
fistl
mov
repz
mov
mov
es
mov
dec
test
jnp
lods
and
stos
scas
mov
inc
adcl
mov
push
adc
ljmp
sbb
fcmovbe
cmp
punpcklbw
add
jecxz
out
movsb
xchg
xor
inc
xor
repz
push
sarl
add
js
xchg
cmp
loope
rcrl
and
jne
and
test
xor
and
mov
data16
mov
inc
imul
cltd
mov
jnp
dec
fildll
jl
or
xor
sti
ja
ljmp
dec
pushf
insl
xchg
icebp
push
dec
aas
mov
dec
inc
cmc
push
xor
test
orl
popa
loope
inc
mov
jg
fistpll
jg
dec
or
outsb
imul
orb
in
push
mov
sbbb
or
mov
or
xchg
les
int
aaa
pusha
jl
stos
sti
popf
push
push
xchg
xchg
jno
cmp
out
mov
jge
mov
aad
dec
pop
push
push
int
ret
pop
sbb
inc
jp
mov
movsb
adcl
xlat
aad
xchg
and
xchg
pop
dec
xor
in
mov
pop
adc
push
xor
add
mov
movsl
inc
mov
fists
add
andb
or
cmpsb
add
sub
mov
loop
and
jecxz
adc
fs
or
gs
fcmovnbe
mov
mov
les
xchg
stos
cltd
pop
sub
shll
sub
adc
cwtl
xchg
dec
sbb
xlat
pop
pop
sub
sub
xchg
inc
xchg
adc
mov
pop
add
mov
add
stos
dec
loop
fsubrp
test
sarb
pop
xchg
pop
les
dec
aad
jge
std
xor
xchg
test
inc
and
mov
or
cmc
bound
mov
cmpsb
xor
out
loopne
call
jb
andb
mov
jbe
and
hlt
or
jl
repnz
sbb
xchg
jae
ret
pushf
pusha
xchg
and
mov
mov
arpl
call
hlt
aaa
and
rcll
cmp
mov
xchg
mov
ds
push
inc
addr16
inc
mov
enter
test
push
lds
lds
inc
mov
jecxz
loope
outsb
inc
push
test
jne
push
pop
test
adc
pop
mov
iret
enter
mov
push
insl
enter
data16
loopne
jbe
jle,pt
sub
pop
mov
mov
jle
xchg
push
in
mov
jae
mov
ss
push
jo
jp
mov
or
imul
rorl
frstor
xor
aad
sbb
popf
mov
loop
fldt
add
jno
push
popa
in
jb
scas
pop
add
icebp
ja
or
pop
push
repnz
inc
call
and
out
roll
cmpb
xor
dec
out
addr16
mov
out
or
nop
jg
pop
mul
ret
call
repz
adc
and
or
std
xor
inc
in
or
jmp
lods
imul
mov
xchg
test
cmp
pop
xchg
insb
cmp
les
out
or
jge
jle
data16
push
sbb
cwtl
mov
aas
push
jg
dec
inc
out
aas
in
fsub
rorl
fldcw
mov
xor
andl
add
or
outsl
dec
movsl
int3
fwait
outsb
cli
cmpsl
icebp
mov
inc
or
xor
mov
testl
cld
in
jge
pop
outsl
leave
enter
popf
hlt
xchg
cmpsb
adc
outsb
pop
jg
add
imul
jecxz
mov
add
pop
in
or
sub
mov
pop
inc
test
bnd
rcrl
not
mov
add
sub
inc
inc
pop
xchg
cmp
daa
add
cmp
sahf
call
std
jle
das
test
inc
pop
sub
xlat
addl
add
xor
imul
mov
lret
push
mov
dec
ret
mov
test
aam
int3
push
iret
adc
sbb
add
ret
xor
dec
sti
mov
push
pop
pop
ret
xchg
pop
push
cmp
mulb
mov
xchg
cmp
gs
cmp
cmp
or
dec
mov
loope
pop
lds
lods
add
idivb
inc
inc
test
sbb
stc
int
cmp
lcall
inc
jl
loopne
push
fdivrl
push
stc
fcmovne
sub
push
or
xor
sbb
inc
jo
xchg
lahf
jb
sub
add
int
and
sahf
xor
or
in
addl
in
jmp
cwtl
xor
mov
insl
pop
xchg
lods
sbb
test
add
inc
xor
adc
mov
jp
or
inc
xlat
xchg
push
sub
dec
cmpsl
sbbb
push
inc
inc
les
inc
mov
add
mov
dec
add
adc
addb
mov
and
fbld
out
jmp
xlat
xchg
std
add
cld
mov
xchg
inc
iret
mov
pop
dec
push
jno
enter
imul
imul
into
xchg
jbe
mov
pop
xchg
pop
jecxz
popa
icebp
lock
int3
inc
fdivs
out
fdiv
pop
cmp
jae
mov
mov
out
insb
dec
xlat
xorl
out
rorl
mov
jne
pop
loope
adc
pop
sbb
fdivr
out
sarl
rcrb
aas
mov
fdivl
jp
movsl
lret
jge
out
dec
adc
mov
insl
sbb
sbb
es
mov
cmp
push
ret
fsubl
push
cmp
sub
adc
frstor
call
pop
inc
jge
jno
mov
fimuls
mov
xor
sahf
mov
jnp
aad
fstl
hlt
xchg
scas
mov
xor
push
in
and
mov
xor
or
add
xchg
hlt
cwtl
shr
das
rclb
xchg
jo
pop
inc
jg
fdivl
adc
std
pop
xor
imul
dec
mov
flds
js
jae
cmp
aaa
pushf
ss
push
les
add
int3
lret
clc
jns
bnd
mov
dec
ljmp
pop
stos
dec
add
mov
imul
popa
xchg
cmp
ret
scas
pop
jo
sub
das
enter
and
mov
cs
loopne
xchg
mov
movsb
inc
call
ja
cmpsb
cld
add
sti
fldenv
aas
push
sbb
cmp
cli
js
pusha
pop
loop
jle
pop
xor
jg
sbb
mov
bound
hlt
jle
jns
sbb
xor
push
dec
sbb
inc
sub
cmp
add
inc
stos
enter
push
mov
and
movsl
lcall
js
push
push
add
jne
xchg
lods
jmp
push
xor
repz
insb
ret
scas
or
adc
std
int
aaa
adc
sub
mov
repz
pop
add
fldcw
xor
push
dec
sub
je
out
fstpt
push
pop
shlb
pop
and
pusha
out
shll
jle
jo
adc
std
fsubs
mov
scas
test
gs
pop
mov
adcb
or
mov
jae
dec
inc
cmp
daa
jl
inc
scas
adc
adc
push
inc
imul
lret
stc
scas
jnp
in
test
sarb
out
or
pop
punpcklbw
cmpl
adc
jbe
lret
pop
xchg
mov
xchg
test
mov
pop
push
and
xlat
movsb
push
add
shlb
xchg
push
xor
pop
lret
sarb
add
sbb
inc
mov
xchg
mov
pop
sub
enter
scas
inc
loop
int3
inc
sbb
mov
jo
pop
inc
sub
call
dec
std
mov
movsl
mov
mov
push
dec
outsb
mov
stos
cli
dec
and
notb
aaa
shlb
shrl
inc
aad
mov
push
mov
div
ret
cmp
fimuls
pop
rcrb
sub
repz
push
push
subb
mov
mov
das
in
xor
lock
in
je
mov
lcall
ret
test
xchg
out
mov
and
adc
push
fsubp
test
test
addr16
aaa
inc
sbb
nop
sub
je
mov
notb
movsb
mov
shll
shrb
insl
add
scas
cmp
jp
imul
je
ret
aad
enter
pop
lret
mov
in
mov
mov
pop
outsb
xchg
or
test
dec
dec
not
jbe
int
adc
pop
arpl
outsl
int
fildll
push
leave
and
test
pushf
cmp
int
cmpsl
jge
sub
in
xchg
int3
pushf
dec
ljmp
pop
push
lods
cmpsb
repnz
xchg
int3
ljmp
sbb
cmp
cltd
sbb
aas
lods
add
inc
adc
repz
ficoml
jbe
jno
cmpsl
mov
push
ja
rclb
inc
test
pop
popf
call
popf
dec
push
gs
and
cwtl
lea
mov
inc
mov
mov
add
pop
jbe
mov
lea
xor
pop
sbb
add
jle
cmp
xchg
popa
jns
jno
sub
push
mov
pop
cwtl
xor
jmp
jle
idiv
sub
mov
mov
lcall
rcrb
jno
mov
daa
out
jl
out
lcall
xor
je
pop
mov
xchg
push
lds
push
push
call
rcrb
sti
out
jb
xor
cli
sarl
es
sub
clc
jecxz
xchg
sbb
ds
xchg
add
fmuls
xchg
lea
cltd
cmpsl
lock
adc
je
push
lcall
movsb
rol
cmpsl
jle
and
mov
cli
imul
jle
push
js
dec
cmpsb
mov
clc
in
lds
or
pop
xor
call
out
fnstsw
mov
dec
xor
and
test
scas
jb
test
loop
mov
inc
pop
gs
adc
insl
cmp
std
add
add
and
in
push
xchg
and
ret
push
or
adc
hlt
icebp
lods
fistl
stc
jnp
lods
add
push
jmp
in
and
je
scas
or
inc
jns
mov
scas
push
mov
pop
outsb
out
push
jl
movsb
out
mov
xor
mov
inc
nop
xchg
ja
inc
leave
jmp
mov
cmp
pop
adc
fwait
cld
push
leave
mov
fcom
and
mov
xor
lahf
ficomps
push
dec
push
std
jl
pop
jl
movsb
addr16
leave
gs
xor
lods
and
jnp
cmp
mov
shlb
push
stos
lret
repz
ret
dec
jp
int
fs
push
mov
pop
mov
pop
mov
comiss
ds
jl
push
test
mov
imul
jb
stc
push
fildll
dec
lock
xor
aas
jmp
sbbb
mov
in
roll
and
or
in
fsubr
mov
xchg
mov
test
cmpb
and
clc
jo
xor
stc
adc
hlt
loop
add
jns
pop
jmp
divl
flds
ret
jbe
out
loope
push
dec
outsb
ss
jp
imul
icebp
mov
cmc
cli
cmc
jge
adc
add
cltd
loopne
mov
fxch
push
xchg
pop
hlt
fldenv
addr16
add
ret
mov
into
inc
mov
mov
lods
repnz
es
fwait
sub
sbb
std
loopne
and
or
sarb
roll
scas
xchg
sbb
mov
hlt
insb
pop
in
aam
mov
push
mov
cmp
insb
imulb
inc
sahf
and
add
push
cmp
hlt
xchg
jg
repz
jno
and
lahf
mov
cmc
xchg
adc
push
cld
aas
popa
aam
cmc
sbb
or
test
leave
add
pop
ds
mov
jbe
sub
adcl
or
jle
mov
imul
pop
xchg
sub
aam
jno
mov
pop
mov
mov
rolb
xor
int3
dec
mov
in
inc
enter
pusha
fsubl
push
pop
pushf
imul
jnp
xchg
push
or
sbb
fldt
mov
fldcw
outsl
xor
mov
imul
add
ljmp
test
outsl
leave
sahf
pushf
xchg
push
cmp
push
mov
cmp
ss
xchg
mov
pop
or
imul
fsubrl
call
cli
les
push
xchg
subb
cmovl
iret
pusha
in
push
xor
dec
arpl
push
cmp
lods
sub
out
fadd
addr16
and
lcall
xor
push
andl
mov
das
push
ljmp
aam
dec
or
rorb
cmp
xor
add
pop
push
pop
dec
movsl
daa
mov
out
and
fmul
in
rcrb
pushf
or
adc
cmc
adc
pop
sti
movsb
pop
and
mov
rorb
lods
or
xor
push
cmp
or
movsl
cmp
out
jecxz
std
sub
cmc
dec
xor
xchg
mov
xchg
stos
shl
enter
jl
push
or
out
xchg
je
sub
push
imull
and
dec
mov
scas
fsub
xor
out
add
aad
repnz
cmc
gs
fadds
mov
mov
fsubr
adc
cmp
add
dec
bound
mov
add
insl
cmp
sbb
sub
pop
nop
sub
push
adc
out
pushf
jo
pop
mov
mov
jecxz
and
insb
sbb
mov
lret
shll
test
lret
lods
or
dec
jno
mov
xor
stc
mov
xchg
xor
arpl
jno
inc
inc
inc
cmp
std
sti
jl
fisttpll
fistpll
adc
inc
jmp
push
jge
lods
mov
aad
push
dec
pop
movl
adc
loopne
call
xor
add
bound
mov
lret
inc
icebp
stos
nop
mov
idivl
mov
dec
mov
fxch
mov
insb
int3
mov
xchg
or
rorb
or
jae
leave
and
rcll
pop
sahf
pop
inc
pusha
call
enter
test
pusha
icebp
fcoml
push
pop
push
mov
popf
jns
pop
adc
mov
sbb
dec
stos
xor
jge
decb
cmp
xor
dec
jmp
sub
lods
test
jnp
mov
or
or
mov
jmp
mov
and
push
and
pusha
pushf
roll
sub
pop
not
pop
mov
lahf
dec
ss
imul
aam
jo
rcrb
sahf
or
cmp
or
loopne
cltd
stc
nop
outsl
sub
loopne
lret
xor
dec
addr16
movsl
leave
shl
repnz
jge
push
sti
int3
daa
sbb
xor
inc
mov
in
cmp
jg
and
pushf
aam
test
jo
pusha
popf
jb
fdivl
mov
negb
mov
push
fimull
fisubl
mov
fcmovb
mov
sub
dec
pop
rclb
sbb
adc
or
jle
fbld
idivb
outsb
pop
dec
xor
fisttpll
fs
cmp
rcll
pop
insb
in
in
sub
and
or
lods
data16
add
dec
add
or
mov
pushl
in
mov
lea
in
test
pop
mov
jge
dec
arpl
shl
xchg
lods
sbb
aaa
dec
jp
call
cmp
icebp
and
jo
divb
inc
lcall
mov
and
test
xor
mov
mov
ljmp
and
mov
movsl
movsb
repz
bound
cmpsb
incl
enter
mov
pop
loope
stos
adcl
sqrtps
js
dec
js
and
xor
dec
xchg
or
and
cmp
test
adc
xor
in
dec
push
dec
mov
cwtl
loop
mov
sub
pop
or
xchg
das
jmp
inc
lahf
or
mov
pop
lcall
and
fsqrt
jbe
pop
push
sub
sub
cli
scas
stos
sbb
inc
adc
adc
adc
add
xchg
pop
cmp
ljmp
add
mov
adc
jbe
sub
mov
test
push
mov
fwait
inc
jo
mov
imul
xchg
xchg
mov
and
push
fbld
sbb
jle
aad
data16
push
sub
aaa
push
dec
add
fisubrl
sbb
decb
movsl
movb
add
lods
fistps
sahf
js
push
push
inc
pop
cwtl
mov
lods
fdivrs
or
negl
pop
sti
popf
xchg
aam
dec
pop
loope
mov
in
loopne
out
mov
js
ljmp
pushf
push
or
sub
loope
mov
bound
out
push
jns
sbb
ret
lret
loopne
and
inc
jg
loopne
out
test
lea
push
lock
adc
push
mov
pusha
lea
mov
jo
inc
cmp
lret
cmp
loopne
xchg
sbb
lret
add
filds
cmpsb
movsl
mov
pop
adc
not
shll
adc
shll
test
hlt
mov
mov
sbb
outsb
das
inc
in
outsb
scas
jmp
fistl
scas
ret
sub
test
fadds
or
lods
popf
filds
push
andb
in
mov
gs
loop
and
xchg
push
push
mov
arpl
fdiv
push
test
lods
jne
jp
jo
xor
cmpsb
dec
sbb
jne
xchg
cmp
mov
dec
push
stc
sub
jbe
test
xor
mov
sbb
add
jg
aam
les
cld
push
adc
cmp
mov
jmp
pop
mov
xchg
jl
jmp
jecxz
ja
jmp
movsl
jp
dec
lahf
push
cmp
sbb
imul
dec
dec
jns
mov
testl
mov
cmp
push
mov
cmpb
or
insb
int
fcompl
int3
adcl
daa
lods
mov
scas
out
adc
xor
in
dec
out
jo
and
decl
leave
imul
aam
movsb
cltd
mov
or
loope
popf
rcr
xchg
hlt
popf
or
int3
push
ret
dec
push
mov
into
jp
loopne
out
mov
xor
xchg
or
mov
inc
dec
xchg
fiaddl
mov
xor
inc
dec
int
or
sbb
jns
adc
xor
in
jmp
in
mov
sahf
adc
push
test
and
test
pop
sub
sbb
shrl
addr16
mov
dec
xchg
xchg
mov
xor
sbb
std
xchg
addb
loope
test
loop
sahf
fmuls
sbb
xor
cmp
push
push
mov
mov
jbe
cmp
stc
push
outsl
add
inc
lcall
call
mov
std
jnp
pop
testl
shrl
push
test
popf
les
adc
in
je
cmp
mov
adc
mov
ljmp
fldt
aam
out
sbb
sarl
dec
ja
pop
popf
lret
and
mov
jb
push
sub
jg
cmpb
and
rclb
or
mov
jnp
xchg
adc
inc
aaa
xor
pop
shlb
or
jmp
and
lock
addr16
icebp
xchg
int
in
xor
lret
jae
cmp
test
lock
inc
xchg
pushf
dec
test
es
int
jbe
mov
dec
add
dec
jne
out
adc
cmc
subl
mov
inc
cmc
dec
imul
push
or
dec
cmp
mov
dec
and
lahf
add
xlat
add
mulb
sbb
fcmovbe
scas
clc
inc
cltd
call
mov
dec
popa
fnsave
dec
push
leave
push
xor
cmp
cmp
hlt
fidivl
subl
test
cltd
cmpb
ds
and
dec
cmp
mov
xchg
leave
je
push
cltd
fiadds
pop
jb
test
xor
sbb
test
cmpsb
xorl
or
xchg
push
sbb
xchg
daa
mov
mov
fistpl
rcl
xchg
cmp
fs
mov
pop
loopne
sti
mov
add
std
inc
cld
lret
mov
in
clc
ljmp
out
xchg
xchg
sub
cli
repz
and
andl
shll
or
ds
push
insl
inc
adc
fcomp
cld
xbegin
dec
cli
jge
or
xor
inc
roll
rclb
push
and
sub
lock
fsubl
add
aam
out
mov
cmp
inc
aaa
leave
cs
imull
ljmp
mov
mov
mov
cltd
mov
mov
shll
outsb
mov
lahf
aad
add
pop
aaa
sbb
mov
xor
cmp
sbb
sbb
pop
pop
movsb
jo
adc
fisubl
sub
imul
out
je
jg
and
dec
mov
fcmovu
mov
stc
jns
gs
cmp
pusha
lcall
dec
and
mov
pop
aam
mov
sahf
ss
dec
loope
imul
inc
add
jns
pop
xlat
cmp
fwait
inc
push
add
shl
stos
jno
dec
xor
popf
mov
mov
out
pop
mov
push
popa
cmpsb
adc
out
push
mul
test
pushf
or
adc
xchg
xor
lods
mov
pushl
lods
push
push
in
mulb
push
divl
add
cmc
and
pop
xlat
jg
or
dec
shl
clc
fadds
add
lret
lahf
push
xchg
call
iret
mov
leave
cs
dec
xchg
cmp
cmp
push
test
mov
pop
or
and
mov
dec
in
scas
insl
jmp
or
scas
add
lock
mov
sbb
aad
pop
cmp
jno
push
push
stos
sub
lret
lahf
std
mov
jbe
mov
pop
mov
sbb
repz
ja
jp
shlb
popa
sub
sbb
pop
roll
fildl
outsl
sbb
xchg
outsl
add
rcll
test
loop
inc
daa
or
pop
loop
lods
and
jle
iret
shll
adc
rol
xor
adc
pop
sub
add
scas
fs
mov
and
inc
mov
jns
mov
jnp
mov
arpl
shrb
decl
out
cmp
pop
mov
jae
mov
fs
cs
das
mov
fsubs
ja
adc
lea
hlt
push
cmp
mov
inc
je
daa
cmpsl
lahf
loop
or
or
leave
jns
add
inc
inc
push
xor
adc
lret
pop
lret
inc
daa
aam
jp
jb
cmp
xchg
xor
rol
sbb
jnp
or
rcr
fisubs
ljmp
inc
ret
cs
sbb
push
sbb
dec
xchg
push
mov
dec
dec
push
cmp
ds
push
hlt
cvtdq2ps
stc
imul
ss
ss
inc
iret
sti
jle
add
ret
out
pop
push
mov
and
fwait
outsb
push
std
push
aas
cld
ja
adc
sub
es
repz
jecxz
or
bound
inc
les
add
or
repz
or
mov
xchg
lahf
pop
or
mov
and
xchg
sub
adc
jae
cmc
icebp
mov
int3
mov
jp
and
adc
jo
ljmp
push
jo
das
pop
mov
push
and
jno
pop
mov
sbb
xor
or
mov
pop
test
pop
mov
jns
dec
dec
daa
loopne
inc
cmp
or
call
add
mov
stc
xor
mov
ss
incb
movsw
cmp
jbe
mov
call
push
nop
add
mov
mov
jmp
xchg
mov
add
bound
adc
jae
mov
sbb
lea
sbb
pusha
push
push
and
pop
outsb
dec
cwtl
mov
dec
dec
jns
cmp
out
pop
sarl
addr16
outsl
orl
mov
push
pop
leave
sahf
jbe
ljmp
jp
rol
cltd
jno
ljmp
sub
out
cli
pop
mov
and
int3
mov
jns
mov
xchg
loopne
or
inc
shll
jmp
rol
cmc
sub
jbe
cmp
mov
dec
rclw
jge
cmc
jecxz
sar
aad
fs
adc
movsb
cmp
adc
mov
pop
cmc
mov
lds
mov
jmp
push
sbb
stos
add
jge
and
ds
or
push
xor
pusha
movsl
loopne
jnp
fdiv
in
xchg
and
pop
lret
ret
mov
inc
icebp
loope
push
test
lret
sbb
addl
push
mov
scas
je
addb
in
inc
icebp
rcll
rcr
add
lds
repz
or
call
fs
std
add
inc
sub
xorb
and
cmc
or
in
mov
mov
mov
loope
inc
cmc
shll
int3
xchg
stc
mov
addr16
xor
lret
pop
sar
or
ja
inc
std
mov
insb
je
in
push
cmp
gs
stos
imull
or
sub
jbe
jg
outsb
push
push
rcll
aad
divl
es
lods
lahf
mov
dec
bound
or
cmp
jecxz
xorb
insb
inc
sbb
adc
pop
stos
icebp
nop
mov
mov
xchg
insl
mov
sbb
sbb
rorb
shll
jae
jno
adc
cs
push
movsl
out
or
fisubrs
push
out
pop
xor
stos
ret
mov
adc
addr16
mov
mov
mov
aaa
aaa
and
mov
aad
cmc
xor
cmovle
icebp
aas
ret
sbbl
mov
mov
jb
aad
mov
and
into
cmp
mov
dec
adc
movsb
pop
and
out
subb
fiaddl
pop
dec
cmp
movntps
or
xorb
enter
leave
test
pop
lret
hlt
aaa
cli
push
xor
ljmp
pop
je
in
out
cli
mov
cvtps2pi
aas
ret
xchg
roll
test
mov
adc
sub
pushf
jle
add
leave
and
int3
gs
mov
pusha
dec
or
outsl
shrb
inc
nop
mov
stc
xlat
and
aad
push
or
or
inc
out
jmp
and
shlb
inc
or
mov
out
stos
jns
stos
jmp
ret
lods
and
cld
add
dec
xchg
outsb
nop
rol
sub
or
adc
sbb
push
sbb
push
jns
jns
pop
clc
ss
jb
pop
xchg
outsb
pop
push
ljmp
ds
aam
lds
jg
lock
dec
or
fsts
js
dec
mov
push
adc
fwait
mov
dec
cmc
cmp
cmp
push
inc
cmp
and
enter
jne
es
lods
mov
cld
aad
push
pop
neg
in
stos
xchg
into
mov
dec
pop
cmp
scas
dec
fimuls
push
pop
push
push
outsb
mov
subl
lcall
xorb
and
mov
sub
pop
jg
mov
fistpl
mov
sub
xchg
push
or
jb
lods
movsb
mov
mov
mov
push
aas
sub
dec
shlb
jmp
int
jge
in
push
aad
jnp
push
rorl
push
adc
xchg
fistpll
fidivrl
shll
jno
in
inc
sub
iret
fs
sub
outsb
or
lds
dec
or
aas
in
out
into
stos
cmp
dec
in
out
xlat
mov
fcom
pusha
daa
and
test
or
ficoms
mov
ret
xor
add
jns
ds
stc
sub
mov
movsb
loope
aad
gs
ficoms
ja
popf
dec
dec
sbbl
mov
int
inc
in
out
popa
push
das
aas
lret
xor
ja
in
inc
jecxz
in
mov
scas
add
jge
and
cltd
xor
loope
fs
inc
xor
and
fistpll
in
mov
xchg
std
add
sub
std
jecxz
adc
pop
mov
jns
cmp
rol
adc
pop
ret
dec
add
lds
mov
roll
je
gs
data16
mov
xchg
xor
push
mov
imul
ja
add
or
dec
in
mov
insb
mov
add
mov
pop
pop
cmp
sub
cwtl
jno
daa
lds
clc
mov
mov
add
mov
aad
xchg
gs
or
and
push
mov
xchg
ds
or
push
pop
fdivrp
dec
mov
cmp
mov
xchg
and
jno
inc
or
data16
int
xchg
xchg
jb
in
lcall
push
sbb
cmp
sbb
mov
inc
xchg
add
sbb
cmp
js
inc
fadd
push
mov
or
pop
jmp
sbb
mov
mov
bound
mov
push
js
ficomps
aas
push
and
in
fstp
jge
les
mov
xor
fstpl
sub
push
in
dec
or
ret
xor
pop
pop
cmc
pusha
outsb
test
inc
sbb
mov
mov
xchg
leave
push
mov
pushf
mov
in
jmp
in
std
gs
sbb
repnz
jo
int3
mov
shlb
mov
jnp
jg
roll
cmp
dec
fildl
adc
rcll
cwtl
push
jae
push
mov
jb
lea
jmp
addr16
pop
xchg
push
ljmp
mov
dec
push
mov
mov
cmpsl
add
stc
and
addb
mov
nop
lahf
push
cld
test
adc
mov
mov
negb
pushf
mov
or
pop
and
imul
cmpsb
mov
add
imul
dec
xchg
mov
cmp
shlb
addb
testl
jae
loop
xchg
aaa
sbb
mov
outsl
pop
jmp
jl
or
inc
and
fcomi
iret
lret
pushf
dec
outsl
jo
dec
inc
ficomps
add
ret
std
clc
sub
pusha
lods
int3
rclb
and
bound
jle
orl
cmp
cmp
inc
adc
repz
jg
mov
add
cld
jmp
jns
inc
js
mov
shlb
repz
scas
xadd
aas
xchg
cltd
mov
test
insl
and
jle
cmc
mov
lcall
xorl
movb
pushf
mov
cwtl
inc
xor
sahf
adc
jb
jo
or
pop
mov
push
imul
sbb
aas
fld
sbb
lds
or
push
imul
stc
push
aas
scas
jne
cmp
das
xchg
popf
in
and
push
cmp
cltd
jecxz
pop
movsb
adc
insl
loop
cld
add
ss
js
subb
lods
fs
xchg
les
mov
xor
mov
push
xor
call
xchg
pop
in
inc
ret
jnp
mov
or
out
or
lret
cmpsl
sub
nop
into
nop
fs
aam
mov
fldl
lods
pop
lds
dec
inc
fstpl
xchg
dec
mov
repnz
cmp
and
iret
test
push
mov
sbb
cmp
mov
fs
es
xchg
dec
sub
clc
lods
jo
mov
mov
adc
add
sbb
stos
icebp
jp
pushl
test
mov
adc
mov
roll
cwtl
push
add
and
xchg
push
jo
mov
mov
jmp
dec
sbbb
insb
in
pop
data16
jge
sub
stos
xor
sbb
jae
pop
ret
out
lock
cmp
pop
std
add
mov
bswap
inc
imul
xchg
mov
jle
pop
and
jae
xlat
xor
or
inc
or
pop
fdivrl
or
mull
lahf
aam
data16
xchg
inc
mov
or
outsl
into
fsubrs
test
outsb
roll
mov
popf
jl
jp
xchg
or
outsl
mov
push
cpuid
add
push
ret
mov
testb
push
repz
stos
fldpi
outsb
mov
das
dec
sub
xchg
mov
inc
iret
push
incl
xor
and
mov
sbb
mov
sti
cmp
add
sub
out
aad
test
mov
mov
push
jl
stos
jp
movl
sbb
scas
add
int3
imul
testl
imul
sub
int
into
xor
push
or
insl
iret
dec
xchg
sub
pop
sub
pop
jbe
add
out
fidivrs
mov
pop
inc
pop
shrb
or
mov
add
sahf
cmp
cli
push
jno
jne
scas
xchg
push
jmp
and
ljmp
xchg
pushl
xorb
div
cmp
movsb
mov
push
push
mov
adc
aad
xor
and
insb
arpl
dec
push
xchg
rol
mov
add
jno
das
mov
aam
xchg
mov
mov
push
outsb
leave
fsubrl
mov
mov
jg
aam
pop
jge
mov
mov
mov
lods
mov
jnp
cli
loop
dec
lds
adc
mov
je
pop
test
insw
orl
inc
cmp
fcmovbe
push
mov
pop
lea
shrl
push
dec
adc
cld
mov
mov
fwait
mov
mov
fwait
loope
inc
mov
push
add
outsb
xor
add
mov
mov
test
lret
dec
cli
arpl
mov
data16
dec
and
pop
mov
fistpll
addr16
mov
outsl
mov
xor
fdivp
jno
fidivs
scas
xchg
ljmp
cmp
loopne
xchg
pop
mov
cmp
jg
loop
adc
adc
scas
sub
stc
sbb
stc
aam
xor
xchg
popa
jnp
lcall
jmp
pop
xchg
or
in
rolb
pop
xchg
cmp
add
mov
xor
dec
inc
cwtl
movsl
add
sub
cmp
lcall
in
pop
xor
mov
xlat
dec
insl
mov
sub
cmc
and
popa
mov
sbb
adc
cmp
xchg
pop
and
ds
lret
jecxz
push
mov
jmp
adc
or
int
lods
shrl
inc
xchg
popa
adc
xchg
mov
mov
jl
aas
mov
std
pop
out
test
arpl
arpl
orb
test
push
and
cmp
jmp
fisubs
cld
sbb
cli
or
mov
ds
lods
mov
mov
mov
and
sbb
das
push
gs
jno
sbb
cwtl
sub
and
outsl
xchg
loop
aam
fdivrs
lret
sbb
jne
push
inc
inc
pop
pusha
and
pop
inc
cmp
push
xor
mov
mov
add
and
fldcw
adc
jle
orb
adc
add
xor
mov
cli
jb
and
sbb
jns
and
and
cmp
insl
sub
add
notl
ret
call
in
adc
mov
inc
push
jg
rcrl
mov
push
enter
jbe
leave
aad
or
pop
orl
fcmovnb
dec
out
pop
je
xor
arpl
or
inc
rcl
push
mov
insl
add
and
or
stc
mov
ljmp
in
sub
jb
add
add
lds
cs
xchg
das
xor
mov
lret
pop
in
pop
push
sub
sub
inc
xchg
test
cld
stc
sub
cmp
sbb
int3
loopne
test
xor
sub
add
hlt
push
clc
and
das
inc
pusha
scas
and
pop
fs
imulb
cmpb
xchg
int
loop
cltd
dec
inc
mov
mov
or
adc
inc
shld
sbb
lret
outsb
jle
mov
mov
shlb
test
fnstcw
pop
stos
pop
mov
push
sbb
xor
mov
sub
pop
cmp
and
fsubp
fldt
movsl
pop
push
pop
dec
stc
cmpsl
mov
and
mov
mov
imul
das
dec
jmp
cld
rorl
push
cmp
in
cmc
add
shrb
mov
call
ds
add
jl
popa
inc
sbb
icebp
lret
mov
addr16
mov
pop
out
loop
mov
or
dec
or
xchg
sbb
jae
ret
add
ja
sub
stos
sbb
cmpsl
int3
jle
mov
mov
arpl
popf
fwait
out
push
out
sbb
ja
inc
pop
fsts
daa
cmp
sub
fldl
mov
ds
shll
adc
in
and
fistps
insl
mov
inc
add
cmp
add
inc
add
fs
xor
fisubrl
inc
sub
loope
or
sub
movsb
mov
repnz
in
movsb
mov
nop
rcrl
mov
inc
xchg
xor
mov
jae
add
lahf
fwait
lods
sbb
lods
push
ret
add
stos
mov
mov
lcall
xor
fwait
mov
mov
movsb
rcl
stos
iret
pop
pop
xor
cld
add
das
addb
shrb
xchg
jecxz
mov
bnd
inc
xor
test
shll
movsb
mov
cmp
ret
cwtl
push
cmp
jae
dec
mov
xorb
fbstp
into
mov
jge
sub
mov
pop
repnz
repz
jge
and
subl
decl
lret
sahf
xchg
dec
aad
pop
sahf
shlb
out
sub
icebp
mov
sbb
xor
xor
addb
imul
push
and
mov
cmp
pop
xchg
js
adc
cmp
push
iret
addr16
mov
int
and
js
inc
sub
dec
dec
cld
lods
pop
fcoms
or
adc
dec
pusha
insl
loope
sbb
ja
sub
sbb
xor
popa
nop
cmpsl
or
pop
add
jns
sub
mov
lock
sbb
imul
aad
cmp
mov
dec
pusha
cmp
nop
fidivs
dec
pop
mov
lgs
popl
dec
mov
fsubr
mov
pop
jle
lea
add
insl
adc
cmpsb
shll
jbe
xor
imul
int
push
bound
out
pop
out
lahf
sbb
ret
mov
adc
sub
pop
ds
mov
pop
sub
xchg
scas
out
and
data16
xor
mov
xor
sbb
cmp
pop
jmp
jp
and
and
sbb
xor
push
lods
scas
hlt
fldt
fidivrs
sbb
and
xchg
stc
xor
je
aad
icebp
mov
inc
fcomps
movsb
test
arpl
mull
shlb
lods
fsubrl
lcall
mov
jo
andl
cmpsl
sbb
push
inc
jp
das
int
jbe
xchg
ficomps
mov
lock
xchg
leave
test
push
sbb
iret
ret
mov
aad
push
sub
inc
lock
je
incb
loope
test
jb
adc
fisubrl
movsb
repnz
xstore-rng
cmpsl
xchg
insb
cmp
subl
pop
and
lock
loopne
addl
je
lock
cwtl
mov
dec
out
mov
cwtl
mov
lods
inc
aas
add
cld
lret
aas
mov
mov
mov
and
mov
test
cmp
pop
push
mov
or
jecxz
adc
cmpsl
cs
jnp
cld
xchg
pop
clc
push
loop
fs
pop
addl
cmpsb
or
mov
fwait
mov
pop
or
push
adc
xchg
cltd
dec
nop
pop
test
mov
push
in
mov
and
push
jle
pop
rolb
mov
sub
movsl
out
mov
pop
jns
jecxz
gs
mov
sbb
push
mov
pop
mov
fdivs
dec
mov
in
xchg
test
sub
ljmp
insb
xorl
mov
ja
add
mov
xlat
push
mov
mov
xor
jle
and
sub
inc
test
les
mov
subl
scas
in
fbstp
inc
cmp
repnz
dec
icebp
test
mov
fs
lret
cs
sbb
mov
dec
fsts
push
cmpsl
and
pop
inc
xor
shl
add
ret
inc
jl
pop
insl
cmp
push
and
inc
push
dec
jg
inc
int3
push
out
add
loope
dec
hlt
imul
and
nop
pop
jge
call
ret
or
push
lds
lods
mov
add
inc
lret
shll
xchg
add
jne
or
push
or
cmp
jge
in
jge
lret
shlb
paddsw
push
push
scas
pusha
and
in
cs
inc
jl
inc
pop
adc
add
and
jge
push
notl
in
pop
or
cmp
jmp
pop
xor
mov
adc
lret
adc
imul
pop
push
call
mov
push
ljmp
mov
int
mov
xchg
jo
sbb
pop
adc
sbb
rcll
mov
jbe
xor
push
mov
mov
stos
pop
je
in
enter
push
add
cmp
xor
mov
pusha
sub
repz
cmpsl
in
ret
xor
vpsllq
jo
ds
push
push
iret
cmp
enter
into
xchg
icebp
bound
inc
or
push
dec
mov
into
push
inc
ret
dec
dec
xchg
and
shll
adc
rcrl
pop
insb
xchg
sbb
fs
or
xchg
je
icebp
in
mov
mov
cmp
cmp
in
push
jne
in
icebp
jle
aad
lcall
mov
daa
cli
fwait
sub
inc
add
xchg
scas
inc
repnz
leave
xor
add
add
jne
inc
lods
sti
das
cltd
insl
popa
dec
sub
pushf
in
and
sbb
movsl
xor
jnp
repz
jnp
popf
mov
xor
and
fwait
mov
lret
cltd
incb
jb
pop
cs
movsb
daa
mov
out
icebp
dec
cmc
xchg
or
addr16
out
mov
mov
rol
negb
and
in
rclb
and
or
mov
es
aas
or
pop
dec
jb
cs
xchg
cs
jge
iret
and
or
push
cwtl
in
push
cmp
inc
xchg
mov
jo
pop
mov
pusha
jb
in
jno
repz
movb
sahf
int3
add
and
clc
cld
mov
orb
xor
add
es
xor
dec
add
andl
adc
sbb
mov
dec
push
mov
rcll
cld
fsubl
jge
pop
repz
xchg
pusha
ret
or
arpl
adc
dec
push
sub
lcall
sbb
popa
ja
lods
enter
push
cmpsb
inc
test
fwait
pop
ds
xchg
pop
aad
xor
lods
scas
and
cmp
inc
std
push
add
vcmpfalse_ospd
movsl
cwtl
insl
and
cmc
mov
mov
jb
jge
fwait
push
popa
cmp
lock
xchg
insb
mov
outsb
inc
xor
mov
xchg
or
xor
mov
xchg
loop
mov
lods
add
jae
xchg
into
cmp
sti
aaa
add
inc
inc
into
aad
pop
inc
adcl
fsubrs
aam
add
mov
stc
dec
lods
add
cmpl
cs
je
pusha
out
psllq
mov
dec
and
push
xor
dec
lret
lea
cmp
mov
push
mov
xor
and
lcall
popf
xchg
pop
call
mov
or
mov
adc
es
aam
xchg
inc
ffreep
mov
out
jns
lcall
jb
or
sbb
add
loope
or
dec
scas
fdivrs
or
imul
fwait
jbe
shll
xchg
cld
jbe
incl
push
push
rcrb
jne
push
jle
mov
push
enter
cmpsl
or
ret
push
int3
push
test
fcmovnu
cmp
sub
mov
xor
les
dec
outsl
push
mov
xchg
cmpsb
sub
fwait
sub
int
aam
insl
add
movsl
shll
push
lock
daa
jp
xchg
cmp
push
std
adc
sbb
in
mov
sub
mov
nop
dec
pop
xor
stc
cmp
cs
arpl
lcall
nop
out
push
stc
inc
jne
popf
filds
loopne
mov
jns
and
adc
jmp
dec
cmp
or
in
cmp
daa
sbb
inc
pop
cwtl
pop
shlb
and
inc
ret
dec
jmp
jg
sub
jb
jg
lock
insl
push
xor
xor
and
fucomp
jle
adc
dec
push
adc
mov
mov
repnz
xlat
flds
shlb
sbb
adc
shll
addb
testb
pop
xor
jecxz
pop
out
mov
add
and
repnz
mov
adc
xlat
aaa
sti
dec
adc
in
push
cmpsb
mov
inc
cmp
add
mov
iret
mov
xor
sbb
xchg
jns
imul
cli
aam
movb
cs
cld
pop
inc
scas
mov
xchg
pop
or
mov
lcall
sbbb
into
or
scas
rcr
pop
pop
in
sbb
icebp
lret
std
and
into
pop
xchg
push
das
rcrl
scas
pushf
outsl
adc
cmp
psubq
test
fiadds
cwtl
cs
subps
pop
inc
and
jp
cltd
lock
rorb
xchg
xchg
push
imul
fcompl
dec
add
xchg
dec
shlb
movsb
inc
or
mov
adc
aad
mov
pushf
popa
stos
xor
dec
out
jmp
inc
pop
and
push
rol
ds
dec
adc
repnz
ret
push
icebp
mov
jg
lds
or
das
push
lock
inc
dec
xor
xor
or
fcomp
push
adc
daa
aam
rorb
fsub
push
imul
call
in
sub
into
gs
dec
mov
dec
jg
cmpsl
mov
out
ljmp
mov
add
shll
xchg
fcomps
mov
cltd
iret
ret
or
jo
push
mov
pop
outsb
mov
cmp
mov
inc
lea
lods
pusha
cmpl
inc
mov
jb
int3
mov
and
mov
cmpsb
movsl
xlat
scas
popf
pop
pop
lock
xchg
lret
sbb
lretw
push
in
push
mov
and
dec
xor
es
movsl
push
mov
pop
inc
xor
test
xbegin
mov
hlt
jne
add
iret
mov
sbb
push
dec
xlat
pushf
lds
mov
add
add
arpl
fimull
movsb
inc
std
hlt
pop
add
insl
pop
sub
cli
pop
sbb
inc
xchg
inc
shl
xor
fimuls
mov
mov
nop
mov
adc
sahf
cmp
mov
pusha
cmp
lods
xor
push
adc
cs
sarl
incb
mov
sbb
sarb
push
fdivl
mov
aad
je
sub
pusha
fiadds
test
mov
dec
mov
inc
enter
roll
jmp
seto
rcrb
sub
mov
fucomp
arpl
lds
test
pop
mov
in
aam
push
adc
jo
cs
call
adc
dec
cmpsl
into
cmp
jno
dec
shll
fistpl
ret
aad
aad
dec
pop
xchg
adc
add
or
cmp
push
mov
sahf
int3
mov
enter
jle
mov
mov
enter
cmp
aas
vmread
xchg
cli
ss
mov
mov
lahf
testb
sub
mov
out
lcall
dec
in
sbb
xchg
lock
mov
mov
and
orb
fnsave
adc
adc
sbbb
loop
xchg
lods
outsl
inc
add
add
dec
add
or
push
add
test
add
pop
sbbb
test
daa
loopne
xchg
pop
imull
dec
or
adc
xlat
sahf
bound
repnz
sbb
add
fbstp
push
sub
loop
lock
leave
sub
test
in
mov
adc
xchg
lds
pop
arpl
idivb
cmc
shrl
sub
cmp
jge
in
and
in
ret
push
push
adc
fsubrs
mov
and
cmp
arpl
jecxz
subps
rcrl
daa
adc
or
push
mov
xchg
pop
test
loopne
fimull
test
dec
das
into
sti
fildl
repnz
mov
lea
jb
and
and
jnp
popa
push
or
scas
cmp
add
adc
add
mov
ds
arpl
test
mov
lock
mov
stos
int
push
cltd
jg
push
gs
jle
outsb
mov
sti
push
inc
mov
mov
mov
mov
bnd
insl
jno
std
inc
push
xchg
inc
ret
iret
jns
dec
aaa
push
ds
xchg
insl
cmp
in
dec
mov
xchg
out
stos
jecxz
xor
out
loop
jle
pop
xlat
jmp
inc
in
sub
mov
add
lret
sti
movsl
vmread
jb
decl
ljmp
push
push
and
in
sti
fwait
push
repz
sub
das
stc
lea
int
xlat
insb
xor
add
cmp
dec
add
hlt
ss
mov
das
xor
xchg
mov
xchg
mov
mov
fidivrl
jne
repz
sbb
pop
jmp
cmp
ror
sub
xchg
adc
dec
std
fisubl
test
popa
xchg
sub
lock
scas
and
and
jp
hlt
lods
push
and
mov
jno
nop
and
xchg
jnp
jl
ror
cmp
pop
mov
adc
dec
loop
cli
jo
jbe
xchg
push
aaa
mov
movl
cltd
push
cmp
xor
inc
out
in
stos
and
sub
insb
inc
jns
xor
mov
jns
pop
lret
dec
gs
orb
or
lret
push
mov
push
pop
pop
jns
and
in
lock
sti
mov
lret
xchg
sbb
push
scas
push
dec
sub
jp
cmp
pop
cmp
sub
cmp
jbe
inc
xor
out
das
es
rol
xchg
mov
popa
dec
dec
repz
cltd
mov
xlat
stc
pop
xchg
mov
and
mov
int
aas
ljmp
add
ds
in
in
popf
xchg
dec
jecxz
hlt
xor
pop
push
stc
popa
bound
add
sbb
gs
and
mov
js
call
movsb
mov
ss
sub
push
test
add
ficoml
sub
adc
inc
pop
ja
negl
push
push
pop
repz
xchg
push
shll
mov
inc
or
pop
dec
enter
out
jo
inc
decb
subl
add
mov
movsl
xor
push
loopne
fnstcw
sbb
imul
nop
cmp
out
jns
fsubrp
xchg
bound
cmp
in
fsubrs
inc
mov
jecxz
outsl
xor
stc
std
or
jle
sub
loopne
sub
mov
cmpsb
loope
test
out
out
inc
dec
loopne
cmpsl
int
clc
int
push
fmuls
inc
push
jne
jp
mov
cmp
repz
loope
mov
bound
fcmovnu
mov
jmp
movsl
addb
mov
fcmovnu
fcomps
mov
mov
out
daa
push
in
shr
in
dec
enter
pop
imul
mov
ds
leave
clc
xor
in
pop
jecxz
sbb
inc
jo
cmp
in
movsl
mov
jmp
cmp
xchg
mov
sti
cld
outsb
scas
sub
pop
aaa
daa
jae
inc
sti
and
push
ret
test
rorl
add
sbb
dec
ds
push
push
and
push
add
ss
and
aad
jg
push
lods
mov
and
xchg
xchg
mull
dec
adc
outsb
adcb
outsl
mov
aaa
pop
xchg
repnz
mov
rcll
xchg
jge
push
sbb
sbb
pop
icebp
cmp
fstpl
xchg
subl
aad
sub
lds
das
or
les
shl
jno
icebp
or
sub
and
mov
mov
pop
mov
inc
aad
xchg
imul
into
in
sub
pop
les
test
inc
sub
sub
or
mov
popf
cmp
imul
cmpsl
andl
cmp
sbbb
cmp
addb
lahf
imul
push
jb
dec
ret
scas
lock
dec
push
xor
out
imul
dec
dec
ja
test
or
out
or
bound
outsl
call
out
mov
pop
call
fdivrs
mov
aas
js
and
repz
xchg
mov
lods
flds
or
and
jnp
jbe
jg
shlb
mov
mov
push
es
out
cli
add
enter
jb
push
mov
fistl
mov
popf
cmpb
cmp
sub
push
sbb
mov
loope
jno
imul
dec
jae
sub
sbb
loop
scas
orl
jns
rcl
bound
and
sbb
in
xchg
es
sbb
xor
setne
or
mov
jb
push
rclb
push
mov
fnsave
sbb
div
lret
push
je
loopne
push
push
outsl
aad
mov
std
loopne
inc
xchg
mov
sbb
xlat
jno
cvttps2pi
ja
add
in
shlb
push
jae
dec
scas
ja
add
mov
dec
in
lcall
popa
dec
aaa
flds
clc
mov
lahf
mov
mov
imul
sub
cltd
xor
adc
outsb
iret
jl
and
push
mov
jle
or
xlat
daa
ds
cmp
popf
loop
jno
lcall
insb
popa
outsb
mov
movsb
insl
imul
orb
pop
in
bound
sbb
in
push
dec
cli
push
sub
lods
in
or
cltd
gs
nop
in
adc
add
adc
xor
out
or
movsb
getsec
movsl
jo
mov
pop
jne
sub
testb
xchg
movsb
enter
add
mov
xor
loop
push
ret
sbb
es
xor
xchg
imul
cwtl
dec
clc
loope
mov
mov
enter
out
adcb
cmp
mov
je
aas
adc
enter
mov
div
inc
mov
icebp
push
pop
rolb
push
lahf
dec
in
xor
mov
test
std
js
das
sbb
sub
cmc
jne
or
ljmp
outsl
mov
xorb
outsl
mov
xlat
je
xchg
rclb
push
sub
adc
addb
leave
icebp
mov
and
lahf
or
adc
int3
and
jno
sub
xchg
xor
mov
leave
sub
aas
pop
in
xor
xor
in
ret
pushf
test
sar
ja
push
push
or
out
ljmp
push
js
add
scas
cmp
out
adc
fstpl
and
testl
out
mov
jl
xor
jge
shl
fs
icebp
stc
jp
pop
fsubp
xchg
mov
pop
aas
mov
and
push
xor
loop
scas
data16
movsl
sub
fincstp
fcomps
xlat
lcall
iret
cmp
mov
popa
add
push
ds
dec
dec
icebp
enter
loopne
loopne
cs
stos
mov
icebp
fnstsw
shll
je
mov
lret
and
rolb
inc
sbb
and
loopne
jae
call
dec
pop
pop
jne
jbe
sbb
and
push
add
ret
cmp
mov
sub
negl
shlb
mov
or
cltd
pop
lret
fsubrl
adc
sqrtps
ja
repz
rcrl
pop
out
push
repz
fcoml
rcll
mov
add
mov
sahf
and
daa
mov
cmp
jo
sbb
cmp
mov
cld
ficoms
test
jle
dec
lods
dec
jo
add
cmpsb
cmp
mov
les
and
arpl
cltd
inc
and
mov
out
push
fimuls
jle
cmp
mov
lcall
jb
sbb
jne
inc
int
dec
xchg
imul
cmpsb
out
lret
js
sub
or
loop
push
lret
jns
push
adc
mov
inc
inc
mov
std
flds
insb
jge
ljmp
je
lods
sbb
iret
mov
repz
xlat
es
cmp
aam
imul
inc
aaa
and
adc
or
jnp
add
ficoml
mov
in
cmpsl
lods
ret
lea
push
pusha
out
sahf
cmp
mov
push
fsubr
adc
fadds
nop
jae
and
mov
shrl
xor
iret
cwtl
xor
jp
push
std
and
mov
jmp
jmp
ds
cli
cmp
daa
inc
sub
mov
cmpsl
xor
mov
pop
dec
push
jecxz
sub
lahf
cmp
dec
lds
dec
jno
out
scas
and
or
push
stc
lods
push
jb
hlt
lret
arpl
xchg
in
adc
sbb
xlat
pop
stos
repz
add
pusha
out
pop
cld
inc
imul
push
dec
lods
jg
ret
xchg
scas
imulb
cld
adc
mov
or
arpl
jne
inc
lock
push
adc
jle
mov
cmpsl
add
mov
add
imul
pop
scas
int3
xchg
sti
out
movsb
lds
sub
mov
mov
inc
cwtl
push
cs
adc
insb
icebp
push
je
mov
adc
cmp
adc
orl
cmp
into
clc
jnp
je
in
adc
adc
xchg
shrl
pop
ss
push
cld
jns
sbb
stc
lods
mov
arpl
xor
pop
test
les
andl
xor
lock
ljmp
xchg
jp
or
outsb
mov
movsl
sub
mov
aam
dec
push
ljmp
sti
jne
fildll
jbe
nop
sub
out
mov
add
pop
out
icebp
adc
mov
sahf
push
lcall
jnp
enter
jge
jb
insl
fistps
mov
test
sub
sub
sbb
pop
sti
les
gs
jl
jle
icebp
in
jbe
jecxz
mov
lret
testl
out
pop
and
inc
lock
adc
scas
clc
repz
out
pop
test
ljmp
cmc
pop
lret
sbb
outsb
mov
pop
sub
push
xorb
aad
lret
add
cmpsb
mov
or
repnz
inc
push
inc
loop
fwait
imul
dec
xlat
aam
xchg
dec
pushf
ret
arpl
xlat
idivb
mov
mov
je
xor
js
cmp
mov
data16
ret
xchg
pop
cmc
subb
and
or
jmp
sub
cmp
adc
inc
in
dec
add
sbb
sbb
test
test
out
cs
push
xchg
sub
cmpsb
daa
mov
fs
mov
fistps
clc
mov
or
int3
inc
test
push
add
add
popf
push
imul
adc
mov
mov
insl
xor
cmc
sbb
dec
jge
insb
cmpl
daa
pinsrw
dec
inc
ja
pop
cltd
and
sahf
mov
call
inc
roll
mov
popf
fucomp
jo
mov
imulb
cs
mov
sbb
cli
call
icebp
movsw
je
sbb
sbb
mov
and
and
add
and
clc
lret
push
outsb
or
bound
lahf
in
bound
iret
push
std
rcr
and
js
std
cmp
inc
add
jl
enter
mov
sahf
call
repz
mov
pop
sti
sbb
movsl
dec
pushf
push
in
cwtl
imul
xchg
aad
sarl
add
in
popf
push
xor
stos
xchg
out
scas
test
movsb
lods
leave
push
sub
call
inc
lret
cmp
push
adc
fcomi
imulb
lret
pop
in
ret
or
in
sbb
sbb
ljmp
fwait
or
stc
insb
jae
and
push
cmpsb
aas
les
out
pop
push
test
sti
jecxz
out
and
sub
xchg
insl
xchg
bound
mov
filds
cli
imul
jecxz
xchg
sbb
push
clc
push
push
test
xchg
movsb
dec
mov
mov
ret
jl
test
shll
jmp
cmp
hlt
rcrb
push
mov
dec
mov
push
out
sbb
inc
cmp
push
enter
cmp
sbb
into
adc
fstp
sbb
adc
inc
imul
mov
out
test
dec
xchg
mov
xchg
inc
pop
xchg
pop
pop
in
clc
pop
mov
jecxz
or
or
xchg
lods
gs
nop
cmp
sarb
xor
and
std
jl
fildl
pop
mov
roll
adcb
or
hlt
loope
out
cmpsl
xchg
call
andb
mov
stc
pop
vcvtsd2ss
sbb
loopne
jo
xor
lods
addr16
cmp
xchg
sarb
test
or
xchg
sbb
das
jmp
int
add
mov
add
shlb
add
movsl
scas
cmp
pop
push
test
icebp
mov
mov
lods
int
cmp
and
adc
int
repz
bound
dec
pop
jmp
je
sbb
push
andb
mov
inc
je
bound
rcrb
std
aad
push
arpl
es
gs
gs
or
sbb
imul
adc
and
dec
ror
or
mov
cmp
jbe
ljmp
adc
inc
rcrb
fmull
icebp
cmp
jmp
popf
das
xchg
add
and
jge
sbb
cmp
mov
cmp
sbb
cmp
xchg
pushf
dec
aam
pop
imul
call
scas
cltd
inc
sbb
or
sbb
or
popa
dec
mov
aad
cmc
xor
fistl
mov
cwtl
dec
stos
and
pop
je
aam
fldcw
jmp
mov
and
int3
aaa
mov
lcall
subb
push
sbb
lock
faddl
cmp
mov
sbb
xor
or
test
in
cwtl
jo
adc
orl
fs
jo
xorb
hlt
rorl
sub
mov
push
cmp
and
jae
mov
or
outsl
sbb
push
in
inc
pusha
das
or
pop
ja
leave
mov
mov
dec
mov
adc
mov
inc
stc
xchg
jae
in
repnz
insb
and
xchg
adc
rcrl
jbe
sbbb
hlt
adcb
cmpsl
xchg
xor
and
jo
sahf
incl
aas
in
or
mov
xor
daa
push
cwtl
out
or
mov
sub
fmull
mov
test
xchg
out
aas
hlt
data16
flds
lret
pop
gs
mov
mov
pop
das
xchg
mov
push
scas
pop
jge
sbbl
xchg
scas
and
adc
iret
call
ja
mov
arpl
je
jnp
imul
inc
loopne
ja
popf
outsl
lods
decb
test
int3
movsb
or
mov
ds
add
enter
and
dec
pushf
fs
cli
adc
std
addl
cmp
hlt
frstor
dec
push
sub
sub
jns
hlt
jg
fdivl
pop
pop
fidivl
xchg
push
in
dec
sbb
es
gs
popf
add
add
and
pop
adc
mov
jl
gs
mov
dec
insl
enter
add
xchg
pop
loope
aaa
pop
pop
mov
gs
xchg
mov
loope
das
icebp
and
adc
data16
lock
hlt
adc
sbb
aam
cmp
outsl
ljmp
pushf
sub
sub
in
loop
jle
es
fnstcw
scas
push
daa
jae
sub
sbb
loope
and
repnz
lock
add
sub
pop
lock
aas
jno
xchg
shll
xorb
mov
leave
jecxz
into
push
popa
xchg
icebp
sub
cmp
out
xor
int
sbb
jge
jp
movsl
pusha
xchg
lods
add
mov
insb
stos
push
add
inc
std
lret
orl
mov
push
lret
insb
mov
pop
cmp
ljmp
sub
and
mov
mov
out
je
sbb
adc
mov
into
mov
push
add
leave
jbe
ret
mov
shl
pop
bound
inc
pop
stos
pop
pop
inc
pop
cmpsl
inc
inc
or
pop
clc
mov
pop
push
aas
xor
mov
mov
cmc
ficomps
mov
sbb
mov
mov
xor
xchg
cs
or
insb
jnp
ret
inc
lahf
cmpsb
bound
and
and
mov
or
inc
loop
fimull
and
or
mov
push
movsb
nop
sbb
rcll
das
into
sbb
mov
mov
inc
xchg
fadds
pop
ret
cli
pop
std
mov
pop
mov
mov
cmp
mov
push
xchg
sub
in
add
mov
stos
lods
mov
cld
mov
int
mov
mov
mov
cmp
xchg
daa
cs
xchg
outsb
cmpsb
lcall
push
outsb
xchg
insl
adcl
add
mov
cld
push
push
cmpsl
repz
adc
mov
mov
lea
icebp
mov
ja
cmpsb
or
out
mov
ds
fnstsw
and
scas
loope
cmp
xchg
xchg
pop
sahf
sub
js
jne
fstl
mov
xchg
fisubs
scas
repz
xor
cmp
and
and
push
adc
adc
xor
fsub
jecxz
mov
mov
fistpll
xor
push
sti
xchg
stos
sub
lods
fisttpl
or
lret
jns
pop
fs
sti
test
mov
aas
nop
mov
lahf
add
pop
popf
mov
test
mov
mov
repnz
lret
push
insl
sub
outsb
fisttps
dec
imul
mov
lahf
jo
repnz
xor
loop
and
int3
pop
jae
ret
shll
push
movsl
cmp
imull
lret
cmpsl
daa
mov
mov
mov
in
mov
call
push
loop
imul
pop
fidivrl
nop
pop
dec
es
sub
xchg
fstps
jge
insb
decl
and
mov
test
mov
add
enter
push
inc
sub
lods
rcrb
and
jp
jmp
adc
nop
js
rep
cltd
fcoms
xor
mov
jg
cltd
or
out
dec
cmp
or
inc
pop
popa
cli
mov
sbb
das
ljmp
loop
cmpsb
shrl
xchg
lret
mov
outsl
leave
daa
dec
xor
bound
pop
and
test
jg
shr
xchg
mov
adc
lahf
sub
add
mov
push
push
rclb
cmp
mov
and
inc
push
mov
shlb
aad
int3
xlat
iret
fstpl
mov
sub
add
rcrl
sarl
out
repz
xchg
cltd
sub
add
insl
sbb
aas
push
call
movsb
cld
pop
sbb
sub
std
das
arpl
ja
arpl
and
ret
pop
mov
push
shlb
cmp
dec
mov
cmp
stc
call
dec
and
das
mov
add
inc
shrb
pop
out
lcall
sub
xchg
test
mov
mov
cmp
cmp
push
mov
in
jne
shrl
cltd
nop
mov
loop
out
xlat
mov
pushf
imul
insl
sar
or
xchg
mov
cld
push
xlat
and
pushf
rcl
cmp
ljmp
lock
lock
sbb
bound
dec
jno
dec
pop
std
dec
inc
mov
dec
fwait
mov
movsb
pop
loopne
sub
xchg
sub
cmp
pushf
jg
shlb
xchg
mov
cmc
mov
hlt
iret
pushf
dec
or
pop
sub
lret
jmp
push
in
sub
pop
inc
adc
cwtl
leave
sahf
push
sub
cld
pop
cld
ror
adc
xchg
sub
cli
mov
mov
dec
pop
loop
and
stos
loop
push
xor
and
popf
roll
lods
ss
imul
dec
mov
mov
popa
and
cltd
insb
mov
fnstcw
push
lods
cmc
repz
jae
lods
std
and
shl
arpl
mov
xchg
stos
xor
cli
pop
cmp
xchg
sub
xor
ret
push
pop
fs
push
and
push
mov
mov
push
sub
and
ss
repz
les
xor
paddusb
std
decb
roll
scas
cld
ds
xchg
cmp
aas
mov
popa
cltd
jb
adc
rcll
pop
int
dec
out
or
adc
mov
insl
dec
sti
repnz
stos
sbb
push
pop
scas
mov
pop
push
sti
shll
outsl
dec
aas
es
icebp
outsb
call
lret
mov
xchg
mov
or
jle
movl
enter
test
push
je
pop
in
lods
push
cs
cltd
sbb
cli
lahf
fucomi
outsb
push
movsb
dec
rol
jg
mov
daa
push
cmp
adc
orl
inc
or
adc
mov
push
pop
loop
xorl
add
daa
shlb
push
movsl
or
sub
fimuls
in
adc
sub
movsb
xchg
cmp
add
sbb
xor
subl
mov
jne
test
call
push
xorl
add
mov
mov
test
adc
cmp
js
xor
adc
cmp
es
cs
mov
fs
fisubs
xor
mov
mov
mov
mov
in
lods
and
mov
sub
ret
dec
pop
sbb
mov
cld
das
fisubrs
hlt
cmp
rcrb
sbb
sbbl
pop
rcll
jns
cwtl
stos
aad
lods
add
pusha
jo
arpl
pop
mov
mov
bound
outsl
push
and
sahf
mov
add
pop
shrb
in
cmpsb
mov
adc
jmp
mov
adc
pop
xchg
fprem1
loop
cwtl
mov
mov
push
movsl
sub
loopne
daa
ficoms
adc
pop
add
mov
sub
inc
cmp
in
xor
outsb
sub
and
outsl
loopne
mov
mov
ror
pop
jno
in
into
sbb
mov
mov
mov
jbe
xor
cmp
pop
lock
inc
lahf
je
mov
arpl
adc
push
or
xchg
xchg
pop
int3
cmp
mov
xchg
iret
xor
mov
pop
xchg
xor
ret
pop
jp
cmpsb
daa
push
ret
mov
xchg
sub
lods
fmulp
cmp
and
pop
leave
cmc
pop
mov
mov
cmpsb
std
inc
mov
addr16
add
arpl
outsl
outsl
xor
pop
inc
dec
cltd
lret
daa
fnsave
pushf
movsb
aaa
insl
adc
push
mov
dec
in
andb
sbb
dec
jns,pt
jbe
jmp
iret
lret
pop
cmp
add
filds
mov
lcall
mov
push
and
mov
rcl
test
sbb
fadds
push
es
add
aam
and
hlt
iret
ror
add
lret
into
jns
int3
mov
mov
je
test
xor
imul
hlt
jbe
ret
xchg
loopne
sbb
fiadds
mov
fnstenv
pushf
mov
aaa
loope
in
adc
popa
mov
lods
xchg
mov
push
inc
aad
mov
add
fcoms
dec
push
scas
mov
sbb
sarl
push
ret
mov
test
xchg
pop
or
xchg
dec
je
pop
out
hlt
sub
sbb
push
sbb
add
sbb
xor
out
aaa
add
out
mov
jnp
add
or
movsl
and
adc
and
mov
pop
pop
loopew
test
out
xchg
lret
pushf
fld
aad
mov
push
adc
xchg
push
mov
dec
jae
ret
in
addr16
sub
lahf
stos
add
xor
stc
push
adc
dec
mov
and
in
mov
or
divl
xchg
push
ja
hlt
clc
jge
dec
cmp
in
mov
xor
incl
dec
daa
xor
fbld
dec
fsubl
imul
dec
outsb
sti
test
sar
out
add
dec
lret
push
shll
sub
mov
bound
xor
mov
mov
jno
js
and
fcompl
repnz
jnp
add
call
ljmp
fidivs
adc
inc
mov
inc
inc
pusha
cmpb
stos
add
or
stc
sahf
test
mov
or
or
les
adc
repnz
icebp
sbb
pop
lods
out
inc
stos
pop
jne
xchg
xchg
mov
or
mov
xor
pop
cmpsl
and
pop
mov
add
xchg
dec
jns
sub
pop
push
dec
pop
mov
jnp
push
sbb
sbb
rcr
popa
ret
push
loope
insb
stos
push
int
and
ficoms
jmp
pushf
mov
and
push
pop
fnstenv
adc
push
push
es
pushf
jns
inc
pop
xchg
and
mov
outsl
jns
and
shlb
mov
jg
sbb
jno
int
loope,pt
xor
mov
movsb
mov
movsl
fidivs
stos
mov
sbb
in
push
adc
jae
test
xchg
dec
sbb
jmp
out
aas
lock
fistpl
dec
les
das
dec
jg
inc
sbb
mov
gs
fmulp
mov
xchg
cld
jb
mov
and
int
jle
pop
mov
jns
adc
mov
lret
loop
fsubrs
add
ljmp
cmc
mov
and
push
sub
movsb
scas
adc
popf
daa
add
push
jno
les
cmpsl
jo
push
cwtl
mov
mov
ret
sar
scas
pop
jl
xchg
xchg
jge
sbb
andl
es
in
cmp
in
cmp
lds
mov
test
jg
fwait
add
pop
imul
rorb
std
sub
pop
inc
cli
orl
inc
pop
fs
or
dec
ja
sbb
mov
out
mov
pop
inc
adc
jo
mov
int
mov
pop
inc
inc
xchg
lods
xchg
xor
into
out
inc
mov
cmpsb
les
cmpsl
or
test
pop
jo
cmp
mov
mov
adc
push
pop
push
daa
push
sti
adc
mov
push
add
add
ret
popf
sar
sarb
cs
mov
xchg
fildll
add
inc
and
sti
lods
and
xlat
clc
fnstenv
sbb
jecxz
inc
jmp
mov
test
addr16
jns
scas
test
imul
ret
insb
cs
mov
testl
ret
cli
subb
inc
andnps
mov
xchg
cmp
push
sti
or
lahf
jno
cltd
mov
clc
sahf
test
pushf
lods
testl
iret
pop
aam
add
std
add
shrb
rorl
dec
pop
rorb
xchg
mov
fisttpl
push
dec
mov
push
fmull
les
pop
xor
movsl
and
sub
out
aas
mov
push
call
xor
xchg
addr16
add
sbb
push
mov
int
lods
popa
pop
mov
push
push
mov
xor
inc
pop
dec
mov
or
push
leave
add
fdivr
push
les
push
add
fsubs
sti
fildll
xor
shlb
jle
out
insb
int3
push
push
jb
xchg
cmp
mov
mov
incl
imulb
push
sbb
jb
pop
cmpsb
inc
cmp
jl
and
clc
rolb
dec
in
bound
pop
jg
stos
fcmovbe
popf
loopne
or
push
push
cwtl
mov
sbb
jge
mov
xor
mov
in
out
cmp
scas
or
jg
mov
repnz
push
or
sub
out
xchg
rclb
or
and
or
insb
js
jo
aam
xor
add
out
mov
or
jnp
xor
ret
nop
xchg
inc
cwtl
fs
pop
clc
dec
xchg
pop
jle
lock
arpl
xchg
xor
pop
mov
and
pop
jle
cld
lea
dec
out
shlb
dec
clc
mov
mov
cld
les
xchg
aad
test
inc
leave
pop
mov
jne
xchg
fists
fsub
mov
adc
sbb
mov
xchg
xor
movsb
or
pop
and
sub
jge
mov
cmpsl
stos
xor
add
test
cwtl
movsl
daa
das
fs
lret
scas
cld
ja
shrb
jle
mov
adc
mov
xorb
fsubl
mov
jo
cmc
and
inc
push
or
adc
jmp
insl
mov
daa
mov
xor
bnd
fstl
sub
xchg
pop
mov
movsl
push
jecxz
mov
pop
rsqrtps
cltd
xor
jle
fildll
mov
adcl
push
pop
jns
mov
lods
js
in
xorb
mov
test
jge
clc
pop
mov
sub
mov
pushaw
cmp
daa
cmp
jg
inc
stos
mov
lret
shrl
jae
pop
arpl
paddb
pop
es
mov
xchg
movsl
lea
xor
xor
push
inc
in
shlb
add
imul
jae
fldenv
popa
mov
sub
in
cmp
push
dec
inc
movsl
dec
movl
add
insl
popa
clc
mov
rcll
and
add
mov
fwait
xor
push
stos
shlb
mov
or
loope
pop
divb
mov
aas
loope
idiv
push
cmp
push
decl
push
mov
repnz
inc
loopne
cmp
js
and
stos
jp
test
pop
sbb
jecxz
push
push
sub
jno
stc
jecxz
sub
pop
push
mov
aam
cmp
std
mov
sarb
xchg
ret
insl
mov
mull
xchg
pop
scas
test
pop
in
sar
mov
inc
cli
fdivr
and
aad
mov
scas
out
notb
fiaddl
outsb
pop
shl
mull
stos
lods
pushl
or
sti
inc
mov
xor
lods
pop
and
and
cmp
xor
insl
push
xchg
push
lahf
leave
mov
mul
pop
sub
pop
shl
xor
cld
scas
dec
ffree
dec
mov
xor
jl
lods
insb
sbb
insb
add
add
loope
mov
jmp
aad
or
lods
push
jmp
or
in
xchg
cwtl
ret
xchg
sub
or
jo
mov
or
jnp
rcll
enter
sti
or
jecxz
jne
repz
xor
call
xchg
and
aad
cmc
and
repz
sti
scas
aad
jb
addr16
xor
mov
pop
jecxz
xchg
adc
aas
repz
jbe
lcall
xor
add
sahf
inc
dec
fwait
mov
xor
lock
add
cltd
les
aaa
insb
add
dec
pusha
sbb
dec
xorl
shl
cmc
add
cmpsb
dec
dec
xchg
sub
cmpsb
dec
pop
sbb
push
mov
and
inc
addr16
test
mov
mov
enter
stos
xor
insb
or
pop
je
xor
push
lds
dec
test
sbb
adc
xorl
hlt
mov
jno
rclb
pop
dec
push
in
push
xchg
add
adc
jne
xchg
mov
push
jmp
xchg
hlt
aam
orb
push
cmp
imul
movl
xchg
xchg
sahf
mov
xor
pop
mov
or
es
sbb
inc
cmp
clc
imul
adc
sub
in
fnstsw
lock
cmp
inc
add
xlat
pop
xchg
xor
and
push
sbb
mov
or
mov
andl
pushl
cmp
mov
mov
das
dec
mov
loope
inc
mov
lret
dec
jg
mov
test
xor
out
aad
lret
jo
inc
pop
mov
add
pop
scas
test
cmp
cwtl
push
jmp
addb
and
mov
sahf
inc
adc
push
in
cmp
push
and
pop
mov
inc
inc
iret
jno
dec
xchg
mov
mov
aad
adc
fistl
add
ret
xlat
mov
push
or
pop
jg
test
cmp
inc
mov
add
popf
mov
add
sub
lcall
pop
push
ljmp
lock
sbb
rcr
out
lea
add
ja
jmp
cmp
loope
add
xlat
dec
addr16
jl
push
push
cmp
leave
inc
je
lret
and
insl
and
lret
xlat
adc
mov
call
lods
inc
in
aas
mov
pop
xor
stc
push
mov
lods
and
or
mov
add
fnstsw
or
add
add
inc
shl
push
mov
sbb
pop
push
fidivs
mov
movsl
stos
stc
xchg
cmp
push
jo
fs
cmp
cs
xchg
xchg
cli
stos
lret
fnstsw
int
pop
inc
cwtl
std
ret
pmaxsw
jae
xchg
shll
inc
cs
cmpsb
sub
dec
adc
cmc
loope
sahf
adc
call
push
mov
pushf
sub
jle
add
test
adc
jmp
fsubrs
add
inc
xchg
rorb
xchg
lods
cld
loop
push
stos
jg
cltd
push
insb
lock
packsswb
out
lahf
sti
imul
mov
cmp
cmpsl
fnsave
loopne
mov
lret
dec
cmp
mov
mov
push
shr
out
mov
cld
push
sarb
push
add
gs
dec
int3
fiaddl
pusha
add
ss
jp
mov
lahf
or
rorl
jae
xchg
dec
or
dec
insb
jl
add
push
or
stos
jle
sbb
aas
jg
dec
jecxz
lret
add
jmp
push
mull
lds
and
aaa
cmp
lods
jmp
test
push
movsl
inc
inc
jecxz
mov
pop
leave
jb
in
push
cmp
mov
mov
cmc
aas
pusha
popa
rclb
mov
sub
pop
in
inc
xor
adc
inc
jne
sub
pusha
mov
sbb
in
pop
adcl
xlat
and
rol
cmp
es
push
jmp
and
jp
xor
shl
stc
adc
xor
aam
idivb
add
cli
hlt
xchg
imul
pop
and
adc
sub
adc
pop
mov
inc
push
or
xchg
pop
pop
mov
sub
aas
mov
inc
dec
jnp
fbld
xchg
testl
sub
ret
push
iret
mov
or
sub
mov
ret
iret
xor
cltd
dec
pop
mov
popa
pop
scas
add
cmpsl
jae
jl
push
imul
push
aaa
add
mov
outsl
jb
fiadds
stc
in
aad
pop
fs
insl
sbb
test
mov
outsb
dec
mov
es
call
gs
mov
rclb
repz
jmp
fsubrs
aam
stc
add
jle
aas
mov
sahf
push
xchg
xchg
mov
push
je
mov
inc
fucomp
pop
cmp
pop
insb
mov
and
inc
cld
jmp
sti
jmp
push
push
test
add
in
ja
mov
adc
lods
xchg
mov
and
ja
mov
stos
xchg
movsl
push
xchg
jae
int3
jb
loop
imul
sbb
lods
fsubl
iret
orl
mov
gs
scas
mov
inc
rol
enter
xchg
push
ds
lcall
sti
jae
jno
icebp
sub
cld
jmp
push
cmp
push
jb
outsl
pop
mov
clc
push
jle
xor
dec
cld
and
test
xchg
out
pop
subl
jp
inc
mov
cmpsl
mov
movnti
sarb
jp
xchg
stos
bound
rorl
mov
xchg
pop
lahf
into
or
lcall
xor
mov
cmpl
shl
sti
lahf
push
cmp
jmp
outsl
mov
test
cmp
adc
sub
shll
pop
pop
cmpsl
js
sbb
dec
int
es
and
fisubs
mov
pop
fxch
test
daa
lods
inc
jo
push
aaa
jne
js
int
aam
es
aad
popf
fidivrs
adc
aam
add
ds
push
push
cmp
cmp
fisttps
mov
xor
xchg
xor
stos
pop
or
movl
cmpsl
cli
in
xlat
cmp
pop
movsb
rcr
dec
sbb
aam
pop
daa
aad
mov
inc
mov
xlat
rcl
cmp
sti
inc
xor
repz
stc
pusha
repnz
xlat
aas
jne
test
ret
xchg
lret
inc
repz
stc
push
xchg
cli
adc
insb
mov
cs
pusha
mov
xlat
and
insl
sarb
mov
imul
out
sub
xchg
jecxz
movsl
daa
adc
cmp
enter
lods
mov
popf
imulb
xchg
push
dec
inc
rclb
scas
push
ljmp
add
lods
mov
push
cli
call
inc
roll
fcmovnbe
movsb
mov
cmp
inc
jle
fstpt
out
adc
lods
jp
jb
pop
stos
sbb
jb
int
jnp
mov
xchg
hlt
adc
dec
data16
ret
push
cmp
push
dec
mov
xlat
mov
pop
loopne
and
jmp
lret
jae
vpaddw
lcall
dec
mov
aaa
mov
add
mov
xor
inc
xor
or
sub
add
inc
js
in
push
mov
shr
xor
cmc
mov
rcrb
roll
in
mov
sbb
ljmp
fbstp
scas
xlat
jbe
cmc
cmp
cmc
or
inc
sub
cmpsb
push
or
loop
jno
divl
cld
les
xor
and
mov
adc
movsl
data16
sti
jmp
jbe
adc
out
ja
push
addb
jno
sbb
cmp
pop
sub
push
sub
cmp
loope
pop
and
mov
inc
jb
outsl
pop
add
cmpsb
in
lods
lcall
lret
lcall
nop
lahf
xchg
test
outsb
shlb
cmp
pop
call
orl
hlt
xchg
mov
out
push
sahf
sbb
aad
dec
ljmp
jno
es
repnz
mov
sub
lahf
jp
cmp
add
lods
arpl
mov
push
fmuls
or
movsl
push
xor
ja
pop
hlt
int3
xor
je
dec
sbb
and
pushf
xor
les
sub
sub
mov
lcall
xor
and
sub
xor
jg
repz
jae
sbb
scas
mov
pop
fwait
out
pop
rorb
pusha
imul
leave
sahf
ja
and
sbb
aaa
add
push
test
dec
jl
push
add
stos
bound
insb
mov
in
lods
pop
xchg
mov
add
aaa
push
push
std
out
mov
cmpsb
mov
sub
dec
stos
mov
dec
add
xlat
out
jns
mov
or
xchg
sbb
xchg
int3
neg
lods
shlb
adc
out
xor
push
sub
inc
stos
movsb
leave
js
cmp
sub
in
add
sbb
push
shlb
lds
add
jmp
je
push
imul
test
jle
in
mov
jae
dec
adc
lcall
or
test
sub
bnd
jp
pop
xor
cmc
mov
sub
shll
movsb
jbe
push
bound
mov
inc
mov
inc
mov
adc
cmp
aaa
insb
and
cld
push
inc
and
adc
ds
mov
jbe
xor
ret
jo
adc
xchg
pop
pop
sub
scas
sbbl
nop
jnp
sbb
pop
or
mov
das
xchg
mov
adc
cmp
sbb
jmp
imul
adc
icebp
mov
pop
mov
bound
movsb
cmp
loopne
aam
je
jne
cmpsl
xchg
testb
mov
lcall
mov
es
add
pop
inc
scas
lret
add
inc
roll
orl
xchg
loope
call
push
imul
divb
jb
mov
adc
fimull
pop
adc
sub
sub
jmp
out
push
sbb
bound
enter
mov
cltd
push
fnstenv
mov
mov
jge
es
fwait
mov
adc
or
pop
or
mov
pop
pop
fucomi
daa
pop
and
mov
jp
pop
into
add
add
mov
push
aas
and
pop
or
xchg
xchg
movsb
lcall
add
es
in
aaa
mov
xchg
jne
mov
mov
xor
cltd
mov
sub
add
stos
adc
dec
adc
outsl
jle
into
jge
mov
dec
ljmp
pusha
sub
push
mov
ds
jecxz
daa
mov
xchg
out
popa
or
es
popa
popa
stos
dec
push
lea
fsub
cmp
iret
repnz
repz
cmpsl
repnz
xor
xor
aas
push
adcl
push
aad
mov
xor
cli
pop
out
arpl
push
mov
sub
daa
pop
cwtl
add
or
mov
movsl
cmc
cld
xchg
dec
mov
xor
loop
mov
es
jecxz
push
cmp
stos
dec
lods
and
sbb
sahf
mov
inc
stos
cs
and
push
jecxz
adc
cmpsb
jnp
subl
cmp
mov
leave
inc
push
jne
push
dec
cmc
pop
push
sbb
into
nop
mov
adc
aaa
xchg
xchg
mov
pop
out
out
testl
jb
iret
sub
ljmp
jnp
dec
sub
xchg
dec
xor
lcall
mov
jno
lods
pop
mov
add
shrl
inc
cmp
xchg
xor
shrl
fcompl
add
pop
add
mov
push
sbb
sub
sub
sub
enter
or
pop
sarl
test
and
xchg
subb
or
lods
popa
dec
in
and
sbb
mov
sbb
mov
sub
sbb
rcrb
loopne
arpl
mov
std
sarb
mov
dec
daa
pop
pop
repnz
add
xchg
rcr
ret
xorl
cmpsb
rcrl
je
push
pop
scas
add
pavgb
sub
dec
leave
clc
cld
xor
mov
int3
lods
jmp
test
shrb
mov
add
dec
das
repnz
cmp
aaa
push
lds
jp
inc
push
sbb
test
lods
sub
call
iret
cmc
add
xchg
mov
stc
shll
out
adc
sbb
jb
pop
dec
sub
or
add
sub
imul
mov
push
adc
inc
bound
in
aad
scas
sub
movsl
lcall
push
or
mov
popa
xchg
xchg
mov
ds
sti
nop
cmp
jl
xorl
cmc
mov
fadds
loop
adc
test
push
pop
xor
ficomps
out
adc
pop
pop
adc
stos
sub
mov
and
pop
das
subb
push
lods
outsb
int
std
add
lock
push
hlt
insb
int
loopne
dec
shll
in
sbb
lcall
cmp
adc
or
and
aad
inc
ror
je
mov
push
ficoml
xor
lds
sub
loopne
sub
add
imul
lahf
out
jo
int3
pop
pushf
test
inc
and
in
xchg
pop
cmp
xchg
lea
mov
sub
mov
push
loop
pusha
shlb
mov
data16
mov
rcrb
hlt
xchg
lret
xchg
inc
aaa
aas
inc
sbb
mov
xor
addb
cs
aas
aas
jp
mov
push
stc
cs
in
lock
mov
sub
xchg
and
add
mov
cmpsb
ss
mov
push
adc
add
lahf
adc
test
popf
xor
lods
pop
rclb
icebp
scas
and
inc
mov
cmp
dec
fdiv
add
dec
bnd
jp
movsb
xor
or
push
inc
scas
lods
jge
pop
std
les
testb
loope
data16
roll
mov
stos
pop
dec
add
pop
test
xchg
lcall
add
jbe
addr16
mov
add
adc
mov
add
mov
push
jg
xchg
repnz
std
cld
cmc
aam
dec
or
loope
rorb
orb
adc
fwait
addr16
test
add
cmp
adc
push
inc
dec
or
jmp
xor
push
pop
jnp
enter
fwait
int
lock
in
mov
cmp
push
add
cltd
adc
cwtl
push
movl
in
jle
pop
mov
add
sbb
xchg
sub
dec
dec
jg
std
mov
inc
arpl
mov
jne
daa
mov
jb
movsb
push
push
jnp
add
push
inc
scas
sbb
cmp
add
mov
sub
mul
js
in
cwtl
cmc
lret
xchg
xor
xchg
lret
cmp
jno
push
bswap
dec
fcompl
xchg
iret
repnz
out
mov
lds
xor
rorb
shlb
neg
aaa
es
pusha
and
pop
adc
mov
ja
mov
xor
jo
loopne
gs
test
cmp
cmpsl
xchg
inc
adc
lods
push
mov
gs
lret
mov
cmp
fs
push
lods
jno
mov
jo
iret
inc
aas
mov
shrl
mov
cwtl
repz
dec
js
fdivrs
imul
inc
movsb
jo
xchg
mov
shlb
push
mov
ret
pop
and
or
xor
add
push
push
xchg
and
xchg
sbb
cs
rolb
pop
sbb
xchg
xchg
hlt
js
dec
sub
or
mov
nop
dec
push
mov
push
inc
xchg
fildll
ja
xor
cmp
ficoms
nop
outsb
imul
cmc
imul
sti
int3
cmp
sbb
das
std
mov
mov
in
adc
addr16
outsl
jnp
js
jp
jae
jo
mov
add
adc
jae
rcrb
or
inc
mov
lret
jae
lods
iret
std
pushf
sub
pushf
sbb
lods
inc
arpl
pop
fadd
pop
jne
stc
mov
insb
push
ss
in
cmp
mov
lcall
xchg
add
jl
das
pusha
mov
sub
cld
mov
fsts
lcall
mov
and
mov
daa
add
pop
std
or
inc
icebp
xchg
jp
in
mov
jp
fs
sbb
push
das
inc
movsl
cmp
pop
adc
insl
or
adc
movsl
jae
mov
lea
loopne
arpl
insb
dec
cmpsb
cli
dec
sbb
call
xchg
mov
push
jo
jne
pop
ja
cs
or
add
js
mov
imul
dec
pop
push
mov
cs
mull
fdivrs
add
negb
sub
dec
and
mov
xor
cmp
push
lret
fnstsw
mov
int
sbb
xchg
mov
stc
adc
and
xor
hlt
push
adc
cmp
add
out
xlat
cmc
sbb
xor
dec
mov
gs
push
fs
push
iret
fsubrl
repnz
pop
sti
push
mov
mov
pop
outsl
jg
out
gs
mov
loopne
shrl
dec
sbb
mov
aam
mov
jl
cmpsl
nop
adc
shr
lcall
sahf
sub
js
ljmp
scas
fldl
inc
outsl
hlt
mov
inc
daa
inc
loop
add
mov
scas
int
sub
mov
cwtl
and
mov
sub
roll
and
sti
dec
test
loopnew
lret
fnsave
test
add
call
inc
fcmovnb
pop
popa
xor
ja
repz
aam
jmp
loop
data16
add
pop
xchg
jecxz
sub
ljmp
out
mov
int
lods
mov
gs
push
je
lds
popf
add
mov
sub
sbb
loope
add
xor
das
mulps
arpl
cld
pop
shlb
inc
sub
dec
cmp
cmp
and
fmull
inc
popf
cltd
jle
inc
sbb
inc
xor
jg
or
jge
sub
jb
jg
int3
jne
fst
lds
mov
adc
or
dec
dec
pop
movsl
push
mov
pop
adcl
fcmovb
ret
sub
shl
inc
mov
std
lea
mov
ds
call
pop
and
mov
push
loopne
mov
movsb
inc
push
or
add
sbb
jle
dec
xchg
inc
xor
scas
jge
pop
jb
or
out
sbb
movsb
loopne
and
adc
hlt
adc
pop
fisttpll
rcrb
dec
imul
aas
push
xchg
add
mov
lcall
mov
mov
mov
push
jns
dec
jno
fadd
int
sbb
bound
mov
cmpsl
add
jecxz
cmp
jg
loope
push
and
mov
sti
cli
mov
cli
loope
jp
in
adc
test
cmpb
stos
sub
cwtl
icebp
mov
movsb
nop
xlat
je
lock
jbe
dec
jbe
jne
in
mov
sub
xchg
shrb
mov
out
cld
mov
sub
lods
cmc
scas
xor
leave
lret
dec
cmp
daa
xchg
negl
dec
enter
mov
in
ss
loope
int
pusha
insl
mov
xchg
sar
clc
and
cmp
lcall
add
mov
loop
fcoml
sub
lds
fcmovu
nop
mov
in
sbb
or
bound
aaa
iret
mov
fimuls
xorl
cmpsb
jle
sub
sahf
les
out
loop
stc
add
xchg
adc
dec
inc
lret
lret
mov
call
test
or
ret
push
or
pop
fldl
pop
sbb
xchg
fcoms
add
repz
std
cmp
mov
xorb
repnz
push
ret
sbb
das
mov
aam
inc
push
inc
sbb
loop
jne
test
fcompl
pushf
movb
lret
repz
in
das
out
loop
mov
inc
xchg
xor
sub
cltd
inc
pop
mov
xchg
movsl
nop
repz
stc
cli
ret
data16
dec
orb
js
xchg
pushf
mov
idivb
idiv
pop
cmp
fs
pop
in
mov
push
or
sub
in
adc
imulb
stos
or
and
decl
and
into
sub
mov
insb
into
sahf
ret
sti
xchg
fcomp
jl
cwtl
jp
sbb
add
into
aaa
mov
xor
aaa
mov
push
into
xlat
inc
xor
mov
jmp
and
sbb
cmp
jmp
iret
in
ficompl
push
add
rorl
jecxz
pop
ds
pop
inc
jg
pop
lret
out
lds
sahf
push
xor
adc
fnstenv
mov
fisubrl
sbb
repnz
popf
aas
js
sub
fidivrs
rolb
in
inc
and
out
test
dec
mov
add
xlat
mov
cld
sub
xor
dec
cmpsl
xchg
xchg
dec
lahf
xchg
dec
cmpsl
mov
lds
mov
adc
xor
leave
mov
mov
pop
sub
mov
xor
mov
mov
pop
or
out
sbb
cmpsl
jle
push
pop
out
mov
xor
jp
inc
pop
cmc
rolb
xor
cmc
pop
add
or
jns
fcoms
sbb
xor
push
jp
jne
lock
movsl
push
xchg
jl
inc
and
test
push
scas
testl
and
push
inc
orl
xor
add
jo
push
push
xchg
mov
das
call
mov
lods
lods
lods
pop
or
or
push
add
mov
adcl
jno
aaa
outsb
jbe
xlat
jns
pusha
sbb
jb
jle
fstps
fucomi
and
call
stos
jne
cmp
add
pop
cmp
cmp
jle
xchg
insl
jg
push
mov
jecxz
or
sarb
sub
scas
jnp
push
lock
cmp
xchg
outsb
jns
or
push
xor
sub
aaa
pop
fadd
rol
add
in
sub
cmp
test
mov
and
cmp
enter
test
cld
pop
jl
mov
cmp
movhps
stos
xchg
int
stos
out
icebp
sub
out
movsb
push
es
scas
cmp
mov
adc
mov
insb
xor
movsl
or
or
jnp
xor
xchg
cmp
push
xor
push
cmp
int3
lret
in
mov
insb
rep
add
cli
xor
dec
cmp
jmp
loope
in
jb
and
jo
addr16
sar
int3
sub
aas
hlt
jp
push
or
cltd
adc
lea
pop
clc
imul
mov
jp
mov
pop
clc
outsb
out
ja
jo
push
dec
mov
push
xor
xchg
inc
pop
daa
test
bound
lcall
idivb
push
lret
shlb
mov
sub
inc
xchg
adc
adc
hlt
cld
movsb
push
add
test
add
into
js
xchg
or
mov
adc
lock
xchg
cld
xor
fsubp
out
scas
lret
es
sub
jecxz
and
xor
ret
sub
ja
lock
dec
adc
mov
ds
les
fadds
push
fiaddl
add
sub
les
mov
sti
cmp
jns
push
int
push
jmp
sarb
std
in
mov
lock
hlt
xchg
jmp
int3
int
mov
and
repz
mov
mov
xchg
sub
pop
into
mov
nop
jno
sub
ret
aaa
and
mov
sub
test
push
dec
dec
sbb
out
jno
gs
dec
ljmp
hlt
stc
scas
in
hlt
add
add
xor
loopne
in
jecxz
xchg
cmp
not
fdivrl
sbb
mov
std
adc
jnp
push
gs
shll
in
sar
pop
inc
mov
cltd
mov
lahf
out
popl
mov
inc
aam
mov
jnp
lcall
pop
push
xchg
pop
jge
or
pusha
div
cmc
cmp
ja
mov
pop
xchg
mov
aas
xor
adc
and
cmc
insl
push
add
fistl
jno
adc
push
outsl
push
in
in
fstpl
loop
or
mov
cld
aad
aas
hlt
rcrl
cmp
sarl
dec
mov
aad
jns
rsm
push
add
shlb
fcmovbe
pop
dec
in
stos
or
sub
sbb
jbe
add
das
lret
or
inc
push
les
ret
lds
outsl
rorl
mov
lods
int
xchg
cmp
mulb
test
cld
stos
lahf
mov
xchg
out
push
fbstp
add
mov
inc
inc
sub
xchg
and
pop
stos
bound
lods
repnz
push
hlt
je
mov
outsb
mov
in
jno
or
mov
addl
mov
lods
fiadds
inc
mov
ficoml
stc
xchg
mov
lcall
adc
inc
sub
pop
ret
add
hlt
lds
out
mov
adc
scas
cld
cmc
es
and
and
dec
les
and
lods
add
daa
mov
mov
add
scas
mov
jge
ja
subl
inc
dec
aas
xor
push
ds
xor
jge
sub
test
mov
icebp
xchg
jmp
xchg
out
xor
or
jb
or
inc
ljmp
stc
shll
mov
jle
mov
push
rcrb
dec
mov
out
push
xor
aam
inc
iret
in
jmp
lahf
in
subb
fst
cmpsl
fwait
out
or
cld
ss
loop
sub
push
xor
iret
adc
lods
repz
adc
out
int
jmp
jbe
jns
pop
in
and
aaa
notl
mov
scas
out
mov
xchg
loopne
iret
or
sahf
pop
mov
add
jecxz
repz
scas
pop
sbb
mov
sbb
xchg
lods
pop
push
ja
std
cmp
inc
ljmp
pop
hlt
push
sti
cmp
stc
pop
add
adc
inc
sahf
dec
stc
dec
push
add
shr
adc
mov
in
out
add
popf
shr
insl
xchg
xchg
pop
movsb
arpl
popf
mov
fstpt
repnz
mov
or
inc
mov
iret
fildl
div
ljmp
mov
shlb
gs
inc
jmp
mov
not
mov
orb
xor
es
jmp
xor
xchg
in
mov
mov
add
inc
jbe
inc
pop
inc
cmc
out
or
nop
addr16
std
orl
inc
mov
adc
xchg
fldt
xor
xlat
cmc
push
sub
xorl
jae
push
repz
mov
jne
je
jg
pop
mov
jecxz
scas
jbe
adcb
pop
ss
hlt
or
imul
lcall
test
mov
stos
cmp
dec
test
sbb
jle
pop
fcomip
or
inc
in
lods
inc
mov
add
jbe
pop
lret
jo
insb
inc
ficoml
js
mov
dec
outsl
popf
jne
mov
xchg
cld
jg
push
mov
mov
xor
lock
dec
mov
jmp
mov
or
into
inc
movsb
ret
imul
outsb
or
add
pushf
add
xchg
rorb
andl
pop
lds
jmp
cmp
andl
ja
adc
xchg
loopne
jno
inc
jae
shl
mov
inc
test
stc
jnp
test
xlat
test
xchg
push
scas
rolb
mov
sbb
lods
mov
jbe
sbb
adc
fdiv
test
pop
dec
cmc
addr16
jo
in
push
push
mov
jae
test
and
popa
mov
sub
ja
mov
xor
insl
sti
les
popa
pop
fwait
mov
inc
xchg
sub
xchg
sub
dec
ret
nop
sti
nopl
test
loopne
dec
and
mov
mov
pop
jnp
rcl
insl
std
fnstenv
cmc
adc
mov
pop
into
cmp
push
sar
leave
push
ja
inc
leave
and
cmpsl
mov
fidivrs
mov
ja
int3
bound
xor
inc
sbb
popf
xor
mov
das
imul
in
and
jg
repz
sbb
out
cmp
aam
dec
rclb
xor
test
mov
add
js
add
sar
push
lcall
ficoms
cmpsb
and
pop
clc
cmp
test
jmp
mov
test
mov
je
xchg
dec
sub
ja
out
enter
in
je
lock
loope
pop
adc
inc
sti
popa
int
inc
mov
dec
imul
mov
push
test
arpl
push
add
cltd
sti
cmpl
test
adc
neg
pop
loopne
out
test
outsl
hlt
xchg
scas
test
popa
iret
shl
dec
mov
add
stos
cmp
add
iret
mov
jnp
lret
in
daa
cltd
in
jecxz
fsubrl
lods
loopne
mov
add
or
inc
fwait
aas
jb
and
sbb
mov
mov
and
jnp
ds
movsb
shl
out
int3
mov
mov
add
cmpsl
clc
mov
push
stos
shlb
imul
mov
mov
mov
mov
sub
test
stc
rcll
push
dec
inc
into
loope
or
mov
or
imull
js
jns
sbb
out
mov
cli
mov
push
loopne
xchg
push
xchg
jge
lret
adc
inc
jecxz
lahf
scas
push
cs
xor
push
or
data16
lds
cmp
jle
js
std
and
pushl
sbb
aam
sbb
je
pop
mov
add
test
jbe
gs
testb
mov
aad
jl
and
sbb
jmp
stos
and
in
or
jae
js
daa
out
out
mov
popa
adc
mov
testb
outsb
mov
and
pop
jmp
daa
cltd
jle
daa
popa
stos
movsl
push
pop
aas
dec
popf
mov
fsubrl
pop
imul
inc
imul
leave
test
loop
xlat
jge
mov
addr16
cmp
sub
adcb
mov
cmpb
adc
test
xor
dec
jecxz
mov
pop
gs
aaa
xchg
call
jecxz
testl
mov
aaa
and
pop
mov
mov
pusha
jae
addr16
scas
and
in
jl
xor
and
imul
inc
stc
pop
fs
mov
mov
sti
xchg
push
test
jnp
jne
push
lret
bound
mov
out
xchg
cmp
sub
pop
sbb
test
popa
mov
jp
jmp
jae
mov
inc
push
cmc
push
es
inc
and
jl
mov
in
jge
lods
scas
pop
orl
add
int
fiaddl
sbb
pop
jge
imul
test
push
cmp
jle
outsb
shll
repz
lods
inc
and
jmp
int
sbb
je
push
les
leave
jg
adc
adc
jmp
lods
xor
mov
cltd
cmc
imul
adc
daa
adc
cmp
mov
js
xlat
pop
test
sub
hlt
stos
jg
jo
or
push
addr16
sahf
push
sub
out
dec
xorl
xor
hlt
aas
jp
mov
jmp
mov
icebp
add
loopne
fs
mov
testb
shlb
lods
scas
imull
mov
xor
mov
dec
cmp
push
ret
adc
sbb
mov
icebp
inc
loop
test
fwait
mov
je
xor
jbe
inc
mov
pop
cmp
mov
cli
sub
xchg
xor
mov
arpl
mov
adc
out
pop
push
lock
xor
addr16
pop
adc
je
or
mov
aam
xchg
mov
imul
dec
add
inc
and
cmp
jl
pop
jno
jae
and
mov
push
or
mov
fnsave
dec
or
adc
insl
pop
shrl
mov
dec
or
cvtps2pd
lret
mov
fcmovnu
shl
int3
arpl
sti
mov
add
push
movsb
in
lea
jg
hlt
xor
into
ret
fwait
mov
in
popf
movsl
dec
jp
lock
scas
movsb
insb
or
xchg
shll
adc
cmpsl
ret
push
mov
add
aad
in
fisubrl
pop
shll
xor
pushf
jns
xchg
lahf
pop
nop
jge
fstps
inc
cli
xchg
lds
fisubrl
mov
je
mov
push
outsl
mov
pop
roll
push
in
mov
lods
mov
and
xchg
stos
push
xchg
dec
or
js
in
push
cld
xchg
stos
outsl
jg
push
mov
mov
or
lret
mov
lea
jl
sub
xor
addl
int3
jle
lret
in
lods
cmpsl
aas
test
jp
xchg
mov
rorb
shrb
push
xchg
inc
inc
xor
js
adc
rolb
push
inc
cld
push
hlt
jae
es
das
loope
dec
fmuls
lock
jmp
adc
and
sti
and
call
es
shlb
clc
popf
inc
shlb
sub
mov
push
pusha
pop
jo
xchg
lock
jno
jg
push
enter
cmpsl
push
pop
or
out
lds
mov
je
ret
or
test
out
arpl
fwait
jp
das
adc
sbb
cmp
push
sar
add
push
mov
jle
loopne
xchg
inc
dec
push
enter
lahf
hlt
xchg
mov
mov
stc
lcall
push
loopne
and
loope
mov
ret
or
cmpl
pushf
fsubs
fs
inc
mov
ret
dec
pop
jb
pop
iret
sahf
mov
mov
ss
faddl
xor
mov
sub
scas
jmp
loope,pt
mov
mov
data16
movsl
rclb
xchg
aam
inc
bnd
push
mov
sbb
mov
xor
mov
jns
negl
sbb
mov
xchg
dec
movsl
scas
cmp
cmpsl
call
jnp
mov
pop
lock
mov
jbe
mov
cmp
scas
sbb
iret
add
in
add
roll
fdivs
dec
std
aaa
push
inc
sysenter
push
fwait
hlt
pop
add
xor
ss
xchg
outsb
add
add
push
cmp
fnstenv
fdivrl
mov
js
mov
enter
nop
lret
out
mov
push
es
ficoms
addr16
jae
fldt
rclb
lds
mov
int
jp
nop
lock
and
push
push
mov
stos
pop
push
mov
subb
shll
aas
jmp
shlb
stos
aas
cmp
notb
mov
test
and
mov
stos
xor
xor
pop
add
loopne
dec
lcall
sbb
and
sbb
add
dec
jo
jl
xor
mov
sbb
in
jns
into
mov
sub
push
adc
loopne
ja
lds
lods
mov
mov
lds
stos
add
pop
sub
test
int
jg
xor
sub
incl
push
sub
mov
faddp
test
xchg
test
add
lret
fsub
push
xchg
outsb
aam
push
incl
add
movd
daa
cmpsb
sbb
out
ffree
shl
sahf
in
mov
pop
xchg
xor
decl
cld
mov
jle
and
arpl
mov
lods
mov
outsl
js
sbb
mov
idivb
das
scas
mov
dec
gs
cmp
shlb
cmp
sbb
jae
aaa
add
cmc
lock
nop
add
data16
jae
add
jle
jae
mov
rolb
addr16
call
out
in
inc
jle
insl
xchg
rcrl
jbe
in
adc
xchg
mov
imul
and
cmp
xchg
or
mov
push
sbbl
and
das
cltd
cmp
sti
mov
dec
push
xchg
nop
inc
arpl
jmp
mov
cmc
mov
pop
test
xchg
jb
pop
nop
sar
roll
pushf
dec
push
sbb
push
xchg
aam
ret
mov
enter
sbb
inc
add
cli
pop
mov
cmpsl
dec
push
in
push
xor
jbe
orl
xchg
icebp
idivl
or
addr16
mov
loop
test
lds
cld
adc
jmp
gs
add
mov
int3
in
xchg
xchg
lcall
push
fdivs
dec
into
and
int
cmpsl
repnz
mov
or
rorl
outsl
ljmp
test
dec
and
jne
pop
js
jl
sub
or
divl
sub
mov
xchg
xor
adc
hlt
loopne
lret
push
and
push
std
popa
loop
or
pop
arpl
sti
fs
jmp
and
data16
jne
stc
lds
out
mov
or
add
fstp
jl
nopl
idivl
cmpsl
or
xchg
sub
fucomi
nop
cmpsl
xchg
adc
lods
call
sbbb
mov
adc
lret
ljmp
jae
loope
ss
cmp
nop
mov
lods
aad
xchg
fidivrl
sbb
mov
pop
adc
out
sbb
aaa
out
outsl
and
dec
jecxz
xchg
test
outsb
icebp
mov
arpl
mov
in
jo
pop
dec
in
or
push
cmp
pop
push
cltd
jne
add
sbb
add
je
cwtl
test
pop
cmp
mov
xchg
xchg
or
mov
inc
jns
xor
stc
sub
jmp
insb
xchg
mov
cmp
xchg
in
push
or
insl
jb
ud1
test
leave
idivb
sar
jmp
adc
adc
inc
mov
dec
sahf
sbb
lret
xlat
nop
jne
icebp
xor
int3
jp
icebp
test
cmpl
push
in
pop
aas
xor
dec
adc
add
out
mov
xchg
sbb
std
inc
fdiv
call
inc
sbb
add
stos
loopne
sub
mov
xchg
pop
sbb
add
or
push
or
push
fdivrs
adcl
outsl
dec
sub
dec
aad
imul
lods
sub
adc
stos
sub
adc
push
push
jmp
push
stos
ss
mov
mov
pop
dec
adc
push
call
pop
popa
shll
ss
loope
mov
leave
lcall
pop
push
push
push
lock
mov
mov
fs
jno
push
jge
pop
mov
aaa
inc
loop
jne
mov
jge
adc
or
in
lcall
int
xor
push
sbb
pop
movsb
notb
stos
enter
add
mov
bound
pop
cmp
add
gs
pop
cltd
roll
push
and
je
ffree
push
xor
sahf
sub
aaa
popa
adc
cmp
movsl
aam
imul
mov
stos
mov
sahf
lahf
or
ror
repnz
repnz
loope
in
cmc
rol
leave
push
lahf
inc
nop
pop
pop
jnp
cmpsb
cmpsb
adc
mov
mov
mov
fisubl
mov
jne
mov
and
xor
xchg
pop
mov
and
sbb
dec
lret
icebp
pushl
push
and
cmp
cmp
stos
cmc
es
pusha
movsl
xchg
mov
fildl
mov
mov
pop
les
inc
aaa
add
mov
mov
pop
jne
mov
cld
adc
or
mov
jg
mov
mov
jl
pop
mov
testb
xchg
add
inc
jle
xchg
sbb
or
imul
xlat
adc
mov
mov
add
aaa
or
lahf
pop
or
xor
mov
les
dec
loopne
mov
test
dec
lods
je
add
push
hlt
inc
fwait
lret
mov
enter
int
mov
lahf
push
dec
xchg
pop
fwait
aam
movsl
ss
cmp
push
lds
adc
gs
mov
dec
or
jl
mov
mov
pop
add
sbbb
jnp
xchg
lcall
xor
leave
add
ret
mov
int3
pushf
repz
adc
cli
cmp
inc
or
psubq
push
mov
loope
adc
inc
data16
ret
repnz
fistpl
jnp
sub
mov
push
mov
pop
frstor
flds
xchg
adc
mov
dec
push
pop
loope
push
jno
adc
xor
xchg
push
dec
add
sahf
add
jle
dec
movsl
cmp
pop
jne
cmpsl
das
cmp
out
sub
add
adc
ficomps
push
adc
fsubrp
xchg
push
lods
inc
mov
popf
jnp
movsb
fs
imul
dec
or
popf
jmp
inc
push
int
jge
jne
in
or
mov
or
inc
add
testl
in
lcall
repz
clc
int3
xchg
jp
ss
cltd
jns
add
lahf
mov
fimull
shrl
scas
and
and
jecxz
je
inc
aad
xor
mov
out
xchg
mov
and
in
inc
out
aam
sub
and
jno
daa
fcomi
pop
stc
mov
mov
mov
fildl
enter
mov
cmpb
mov
dec
adc
loope
js
inc
dec
jns
xchg
out
outsl
and
sub
in
mov
in
mov
test
sub
rorl
mov
lods
pop
arpl
mov
stos
out
pop
mov
jae
aas
in
popa
pop
mov
jno
imul
adc
adcb
xor
cltd
jns
pushf
or
aad
movsl
xlat
fldcw
pop
daa
pop
test
test
leave
jbe
in
orb
loope
dec
pushf
xchg
iret
dec
mov
mov
jge
jns
cli
mov
enter
insl
in
roll
dec
loope
hlt
sub
int3
jns
ja
addr16
cmc
shll
jp
and
aas
loope
cmp
test
mov
test
lods
in
outsl
fisubs
aas
lea
fstps
mov
jbe
inc
or
movsb
dec
cmp
sub
pop
add
sub
add
subl
inc
dec
fdivs
out
mov
icebp
mov
xchg
and
enter
stc
sub
sti
ret
iret
outsb
mov
push
addr16
jae
fisttps
mov
push
add
mov
loope
xchg
add
rcrl
daa
mov
pushf
loopne
rclb
jge
out
lea
mov
inc
mov
jle
gs
inc
mov
mov
fbld
xchg
out
xor
fdivl
jp
pop
and
jae
inc
clc
test
test
insl
out
xor
scas
divl
mov
in
lret
cmp
add
jmp
push
sbb
sbb
cmc
cmpsb
or
outsl
leave
and
sub
push
push
xchg
test
adc
or
icebp
jp
stos
inc
mov
adc
lcall
inc
cwtl
stos
cwtl
testl
mov
scas
int3
lods
mov
and
fisubl
adc
sbb
mov
pop
pop
dec
out
inc
xchg
pop
sahf
push
xchg
adc
jne
aam
insb
lods
test
push
push
jae
mov
inc
movsl
rorb
jecxz
stos
push
xchg
mov
out
ja
or
icebp
out
ljmp
ret
mov
mov
or
aad
mov
in
xor
push
shlb
aas
xlat
sbb
sti
aas
pop
add
push
cltd
and
mov
jl
clc
fidivs
aaa
push
xor
addr16
xchg
das
icebp
lcall
push
cmp
std
push
enter
or
xchg
andb
push
int3
and
lock
jnp
pop
xchg
je
rorb
mov
pop
push
xor
lock
mov
pop
aam
pusha
jbe
fistl
std
jbe
repz
add
insb
aaa
mov
scas
cwtl
mov
out
push
push
notl
push
cltd
stos
nop
sbb
add
push
push
movsb
imul
mov
xchg
cmpsb
sub
pop
lahf
or
ret
adcl
loope
jns
mov
fildl
jno
mov
ret
push
fdiv
stc
aam
cltd
or
xchg
mov
or
rolb
insb
lods
xchg
imul
and
push
loopne
mov
dec
or
sti
dec
push
jg
sub
pushf
loopne
and
sub
pop
jl
xor
mov
jmp
sub
cmp
jne
cmp
jl
or
sbb
xchg
in
movsl
xchg
test
add
jmp
arpl
cmpsl
test
fnstsw
popf
sti
or
adc
mov
sbb
fmuls
sbb
daa
outsl
xor
sub
scas
mov
mov
jbe
jmp
stos
outsb
movsb
iret
subl
mov
enter
gs
mov
adc
lds
mov
pop
in
push
cli
mov
adc
dec
std
add
icebp
fwait
fwait
mov
mov
pop
cmc
jnp
xchg
xchg
fstpl
pop
test
aad
mov
cs
cmpsl
sbb
testb
clc
and
or
movsb
cmpl
mull
ja
inc
je
loop
jle
repnz
cmpsl
jg
push
int
lods
cmp
xchg
inc
testb
repnz
shlb
rcrb
xor
je
mov
mov
sbb
push
movsb
addr16
outsl
push
or
jb
cmp
push
addb
mov
sub
aam
lock
dec
cmp
mov
or
push
jno
xor
rcl
push
movsb
adc
lea
mov
mov
inc
rol
stos
enter
pop
fs
jmp
sub
mov
mov
arpl
mov
mov
and
lds
jae
mov
andl
in
cld
fs
in
test
ja
fisttpl
mov
push
adc
and
pop
insl
cmp
lahf
xor
jne
test
jmp
push
fdivl
shld
mov
mov
les
jnp
sbb
push
cmpsl
pop
or
sub
lcall
insb
sahf
fisttpl
inc
xchg
lret
xchg
jbe
or
ja
int
call
dec
cmp
mov
lcall
pusha
and
fstl
jns
icebp
inc
sbb
cmpsl
mov
push
cmc
jl
insb
adc
xchg
aad
cmpb
out
mov
dec
xchg
dec
mov
les
ffreep
test
mov
mov
jne
jne
push
shrb
sbb
jo
das
push
mov
pop
and
xchg
lahf
push
daa
mov
enter
pop
pop
pop
fcoml
jl
mov
mul
cmp
movsb
out
xchg
push
ficoms
sub
add
cs
push
xchg
leave
popf
mov
mov
aad
fnstenv
aas
scas
es
stc
add
sbb
pop
adc
cmpsl
mov
xchg
push
sar
add
ret
jp,pn
or
sbb
jecxz
lret
imul
in
mov
sbb
mov
movsl
imul
and
jo
or
mov
mov
imul
jg
popf
jl
clc
repz
push
ficoml
subl
sub
pop
js
test
sbb
scas
mov
inc
int
mov
cmpsl
mov
and
and
insb
mov
adc
or
aas
mov
sbb
add
adc
or
ljmp
sbb
notl
test
in
xchg
sub
push
mov
movsb
mov
push
push
pop
arpl
cmp
into
xor
dec
scas
adc
and
adc
fs
outsl
insl
inc
outsb
ja,pt
inc
or
addr16
push
mov
cs
jle
cmc
pop
in
push
push
jo
dec
jo
and
sub
filds
out
xor
cmp
mov
inc
xchg
and
mov
lds
je
out
and
cmp
mov
inc
mov
push
pop
lods
dec
insb
andb
xchg
sbb
mov
lret
sbb
mov
sub
fsubrl
jp
mov
mov
xchg
sbb
jl
inc
out
out
aaa
mov
enter
push
fiaddl
outsl
icebp
in
inc
cmp
lock
sbb
pushf
out
push
add
dec
dec
pushf
hlt
or
lock
cmp
xchg
mov
xchg
adc
sub
daa
adc
xor
insb
pushf
sub
sub
out
adc
xchg
push
or
sub
dec
sar
mov
mov
aaa
inc
fldenv
es
mov
repz
xchg
ljmp
and
shrb
mov
push
test
cltd
mov
pop
adc
pop
or
sbb
inc
push
arpl
imull
roll
or
cmp
mov
scas
mov
push
rolb
in
icebp
and
sbbb
jge
inc
fnstcw
ret
lds
imulb
mov
shl
stc
hlt
mov
scas
xchg
xchg
cmp
andl
int
aaa
in
jae
rorb
dec
mov
push
push
je
test
gs
mov
lret
mov
test
pop
ljmp
dec
sbb
push
in
repz
std
inc
nop
into
test
lods
mov
jae
push
or
jo
aas
sbb
add
sbb
jns
dec
shrl
loop
stc
pop
pop
andl
roll
inc
dec
test
popfw
rcll
sub
inc
pop
das
and
outsb
nop
loope
inc
pop
sub
mov
movsl
lcall
lret
shll
mov
cmp
cmp
inc
mov
mov
add
je
push
mov
clc
add
jmp
add
ja
sub
ret
push
jle
or
out
outsl
fmull
pop
sub
and
cmp
xchg
dec
push
pop
cmpsl
fnstenv
lds
out
xchg
mov
cmpsl
outsl
or
jnp
jp
lods
subl
out
jmp
sub
int
mov
adcl
mov
pop
add
daa
or
fisubrl
mov
push
imul
mov
ds
scas
mov
shlb
mov
pushf
cltd
cld
pop
add
outsl
icebp
popf
and
and
push
mov
dec
xchg
mov
les
sbb
aaa
cmp
mov
inc
mov
jge
fistpll
add
lahf
stos
add
imul
xchg
cld
adc
xchg
ja
rclb
mov
push
lahf
jp
addr16
mov
mov
mov
xchg
add
scas
pop
mov
ja
inc
fwait
stos
mov
cwtl
cli
push
jge
inc
into
push
vpaddsb
rclb
cmpsb
cmp
das
popw
jmp
jecxz
mov
es
scas
sub
stos
or
push
enter
pop
adc
inc
fisttps
dec
loope
lcall
jo
and
test
call
iret
jb
out
lea
and
icebp
mov
ficoms
pop
xchg
xor
mov
cmpsb
sbb
ljmp
dec
lret
sbb
mov
shlb
test
int3
fwait
push
add
sub
mov
pushl
add
xchg
dec
mov
lods
sub
inc
or
xchg
adc
or
cmp
dec
xorb
test
testl
lods
fstpt
loop
fdivs
inc
xor
mov
add
xchg
and
adc
cli
mov
bnd
pop
sub
sbb
shrl
and
lock
cmpsl
sub
and
mov
jecxz
test
ret
sbb
ret
pop
inc
out
adc
ficoml
jecxz
jg
mov
movsb
dec
dec
pusha
mov
lods
dec
fisubs
xorl
mov
popf
pusha
jae
fstl
subb
shlb
adc
dec
push
mov
and
inc
adc
imull
outsl
sahf
cmp
mov
fisttps
pop
cwtl
xchg
arpl
push
jmp
roll
leave
mov
mov
sbb
jae
sbb
sub
xor
enter
pusha
or
sub
je
rclb
fs
movsl
pop
daa
dec
pop
push
cmp
sub
pop
lods
push
movsl
das
ljmp
pushl
pop
cmp
insl
push
dec
dec
mov
and
dec
pop
outsl
or
mov
mov
cltd
cmc
js
sahf
xchg
in
adc
push
mov
adc
cmc
in
cmpb
and
jmp
dec
mov
cs
pxor
push
pop
inc
xchg
cmp
loope
push
in
inc
int
dec
in
sub
or
sbb
sbb
inc
dec
mov
cmp
sbb
add
sbb
hlt
cmc
or
add
cld
xchg
cli
inc
loope
movsl
in
xchg
cwtl
jmp
mov
xor
psubusw
jae
scas
adc
sub
stos
cltd
xchg
movsb
pop
pop
xchg
lods
addr16
inc
push
sbbb
dec
rcr
mov
insl
add
in
fimull
push
pop
pop
lahf
dec
mov
loope
sbb
mov
sbb
fidivl
aad
gs
repnz
sbb
ror
xor
mov
ret
lds
es
in
aas
mov
movsb
lods
sub
sahf
into
mov
cmp
or
movsb
mov
push
and
ss
enter
mov
mov
mov
push
inc
push
cltd
and
testb
cmp
test
xchg
insl
shr
addb
jne
jbe
mov
cld
in
cmc
in
adc
in
dec
mov
xchg
out
xor
mov
insb
or
pushf
or
mov
shlb
cmc
pop
call
mov
jbe
cmpsb
push
test
mov
xchg
pushf
jp
jne
cmpsl
mov
mov
out
xor
mov
add
add
jo
mov
jp
and
pop
pop
dec
or
orb
subl
xchg
xchg
adc
mull
jne
gs
pop
xor
jns
lcall
popf
pop
pop
xor
or
inc
jbe
cmpsl
mov
xchg
sahf
pop
mov
das
mov
data16
pop
mov
stos
dec
cmp
fldt
sub
and
or
fisttpl
xor
int
adc
mov
adc
cmp
sub
lcall
fxch
das
dec
sub
jmp
mov
cmp
aam
scas
jae
out
cli
add
push
mov
jle
sub
mov
int3
mov
cwtl
loop
sbb
sub
cmpl
and
test
cmp
sub
js
xchg
jl
sahf
cmpsb
test
mov
cltd
mov
sub
iret
pop
shll
bound
pushf
xchg
dec
jmp
ficompl
add
arpl
add
pop
stos
push
sub
adc
lret
adc
fs
cwtl
mov
push
and
jne
sarb
into
pop
mov
popf
push
stos
xchg
lahf
pop
lahf
dec
adc
sub
mov
sarl
jmp
xorb
inc
dec
in
and
xchg
jge
std
test
pop
rcll
lret
or
adc
sub
lcall
mov
jl
or
jno
sbb
xchg
fwait
and
push
outsb
cld
ja
inc
adc
push
cmp
sbb
xchg
xchg
lds
or
dec
rorl
add
subb
pusha
adcb
and
jne
fcoml
or
iret
test
fstps
xor
cmpsb
mov
dec
sbb
mov
mov
repnz
pusha
int
dec
adc
lds
sarl
jmp
fisttpl
mov
push
frstor
cltd
sub
xchg
fldt
sub
cltd
jge
adc
and
inc
insl
cmp
and
cmpl
rolb
popa
inc
dec
inc
mov
inc
mov
out
or
daa
mov
movsl
xchg
mov
push
stos
addb
add
mov
dec
dec
test
cmp
stc
mov
jle
ss
mov
sbb
aas
sub
out
jp
sub
mov
sub
lahf
xchg
dec
inc
cli
lahf
je
packuswb
nop
inc
call
je
cmpl
insb
lods
pusha
repz
adc
out
ljmp
sub
or
test
xchg
data16
pop
sbb
int
push
je
mov
jecxz
lds
mov
je
push
mov
cltd
jno
dec
lea
mov
sbb
and
xchg
sbb
xor
popf
or
jnp
popf
fbld
rcrl
popa
jbe
mov
or
sti
fdivs
sbb
repnz
les
adc
mov
sub
nop
sahf
addb
repnz
scas
packssdw
popf
cmp
cli
jne
push
sub
in
ja
lret
add
pop
sub
loope
stc
dec
xorb
insl
inc
add
pop
rcrb
jno
cmp
popf
test
pusha
xor
mov
scas
stos
cmp
mov
push
es
clc
fisubl
mov
xchg
stc
push
movsl
loope
test
mov
icebp
sti
xor
loope
sbb
insl
and
pop
lds
push
mov
cmp
xlat
or
pop
cmp
jge
ficoms
or
pop
das
or
insl
stc
mov
ficoms
jns
push
daa
cmpsl
sbb
mov
and
xchg
cmp
pop
xchg
test
mov
aaa
push
cmp
leave
add
and
xor
xchg
sbb
inc
bound
inc
sarb
cmp
inc
push
or
ss
mov
push
mov
andl
mov
movsb
dec
or
inc
push
push
out
mov
mov
and
stos
cmpsl
mov
aas
push
and
hlt
inc
nop
in
sbb
mov
sarb
mov
xor
lds
arpl
loop
mov
mov
jl
dec
inc
les
lds
mov
jge
and
mov
mov
adc
ljmp
sub
loope
je
xchg
mov
cmp
iret
test
add
ljmp
cmc
subl
adc
or
cmpsl
mov
push
daa
xchg
pop
pusha
jns
inc
loopne
cld
xchg
xor
cmpsl
jbe
sub
mov
adc
mov
adc
push
clc
into
imul
je
add
push
or
lds
jb
sub
iret
cld
pmulhw
ljmp
shrl
dec
roll
push
outsb
mov
or
idivb
fwait
dec
mulb
in
push
jo
xlat
mov
lcall
jecxz
loopne
icebp
ud0
call
mov
inc
dec
mov
ljmp
ds
frstor
loope
push
and
sti
lcall
inc
push
inc
popf
pop
lods
loope
pop
adc
cmp
inc
enter
fcmove
js
cmp
shlb
in
scas
fwait
pop
es
adc
les
xchg
test
stos
and
out
pop
insl
imul
jg
mov
mov
adc
rcll
push
push
pop
es
test
fistl
test
pop
int3
dec
mov
add
dec
pop
mov
add
inc
cmp
repnz
pop
mov
lods
orb
cld
push
popf
imul
bound
or
jne
mov
lods
mov
stos
sbbl
jns
xor
popf
mov
in
stc
in
sbb
mov
and
xchg
out
xor
xchg
or
sub
add
jle
ret
sub
inc
pop
dec
xchg
adcl
add
in
inc
insl
mov
cld
xchg
mov
inc
movntq
dec
adc
sub
sub
movsb
sub
out
adc
ljmp
xor
sub
daa
insl
cmp
fnsave
mov
outsl
mov
push
rcrb
imul
pop
ss
fidivrl
mov
jb
inc
fwait
movsb
ja
cmp
jae
in
mov
sahf
rolb
pop
test
push
stc
enter
int3
in
mov
fwait
sub
lods
andl
adc
jl
leave
shl
fnstenv
mov
data16
mov
sub
pop
mov
cmp
jno
lea
pop
lods
cwtl
mov
ret
push
jnp
mov
xor
scas
enter
sbb
outsl
mov
stos
sub
fs
cld
movsl
inc
jecxz
mov
xchg
and
imul
pop
rcr
sub
mov
mov
cmc
cmpsl
dec
cmpsb
mov
xlat
push
dec
lods
jl
jecxz
push
lret
xchg
cli
push
hlt
pop
sbb
ja
repz
push
xor
test
sbb
mov
mov
xchg
jle
mov
jmp
loopne
cmp
dec
insb
cmp
sub
fdiv
leave
lret
aam
inc
and
mov
mov
int
sub
aam
mov
in
mov
sbb
jg
cmp
aam
or
js
test
inc
ret
jmp
leave
mov
insl
add
pop
shrb
vpcmpgtw
cmp
mov
mov
xor
inc
sti
cli
pop
jne
outsl
ret
leave
sbb
cmp
and
andb
or
pop
mov
pop
jne
dec
and
fstl
dec
pop
loope
pop
jo
rcl
pop
sub
imul
sub
adc
dec
dec
mov
mov
scas
lea
shrl
sbb
sub
sar
or
mov
inc
hlt
cmp
vcvttsd2si
test
test
repnz
inc
or
sbb
jle
mov
adc
es
cmp
andb
pop
inc
cmpsl
rcl
cmp
cmp
aam
dec
clc
pusha
nop
pushf
into
int3
cli
inc
cmp
inc
cmp
daa
into
add
clc
xor
add
sbbl
xchg
outsl
jmp
xor
pop
mov
aad
enter
mov
mov
jb
jecxz
jmp
movb
testb
pop
cmpsl
addr16
decb
shll
mov
mov
mov
jmp
repnz
push
cld
ljmp
push
push
sub
inc
insl
pop
ja
jmp
add
mov
xchg
xchg
ss
sbb
push
lds
jb
in
stos
inc
cmpsb
aam
pop
int
mov
xchg
xchg
nop
pop
test
outsb
cltd
imul
push
dec
jge
out
int
jb
xchg
lods
jl
dec
xchg
int
ss
lds
mov
xor
cwtl
mov
push
push
sbb
dec
mov
mov
add
dec
cmc
add
mov
xchg
pop
ds
icebp
lcall
sub
popa
ret
sbb
mov
enter
adc
adc
adc
ljmp
je
gs
bound
or
out
std
pusha
inc
lret
int3
push
out
or
cmc
leave
in
pop
or
stos
push
push
div
sub
das
add
push
inc
push
mov
inc
push
xchg
xor
xchg
iret
xchg
adc
inc
mov
mov
sahf
dec
push
xchg
mov
push
ljmp
cltd
cmc
dec
mov
fs
dec
lock
or
push
jecxz
je
mov
dec
enter
push
dec
pop
loopne
push
mov
dec
xor
cmc
mov
dec
and
stc
fwait
ret
movsl
push
fldenv
mov
insl
mov
std
pop
rsm
jl
int
or
sub
pop
into
mov
pop
sti
dec
data16
or
cmp
test
pushf
jmp
xchg
mov
sub
pop
xlat
rclb
hlt
add
xor
out
xchg
xchg
xchg
cmpsl
clc
mov
push
lea
dec
cmpl
idivb
or
xor
jo
sti
mov
add
xor
pop
mov
jb
repnz
inc
gs
cli
stos
or
js
outsl
add
lcall
adc
or
ss
aaa
lea
push
cmc
mov
push
testl
inc
mov
out
and
lea
adc
and
fadd
or
push
leave
dec
mov
sbb
sub
jmp
cmpl
mov
in
jb
push
add
movsb
out
and
ret
lahf
dec
leave
cld
add
and
rcrl
pop
pop
hlt
or
fs
data16
sub
mov
fucomip
and
js
cmpsb
js
aaa
or
fwait
std
xor
mov
lahf
pop
push
add
sub
pop
dec
nop
fsubrs
pusha
jne
jnp
mov
mov
push
ret
jne
imul
je
xchg
dec
cld
out
pop
stos
cvttps2pi
cltd
push
hlt
mov
push
inc
xchg
mov
ficoml
and
lods
notl
repz
push
mov
xchg
hlt
push
jg
add
lock
ljmp
mov
ss
and
aad
mov
jge
mov
aad
nop
add
jne
mov
sahf
pop
mov
lods
xchg
cmp
movsl
mov
insl
call
mov
fbld
das
cmp
test
dec
add
sbb
adc
in
pop
imul
jbe
daa
stc
push
daa
and
jo
dec
mov
insl
cmp
loop
popl
jno
sbb
in
ds
in
xchg
pushf
cmp
push
xchg
inc
aam
mov
push
xchg
movsbl
push
lods
ds
iret
in
loop
aad
addr16
xchg
adc
cmp
mov
mov
popf
js
cmp
aad
lret
xor
fdivl
testb
test
push
adc
sbb
fimull
mov
xchg
adc
cmp
shlb
daa
movsl
mov
ljmp
mov
jno
mov
sbb
aaa
dec
or
jmp
push
inc
jg
mov
adc
mov
lods
jae
adc
add
dec
xchg
adc
rol
xchg
push
sub
insl
fldenv
xchg
jne
adc
pop
fcomp
stos
jg
rcr
adc
and
pop
jbe
pushf
jmp
mov
sub
push
subb
lea
inc
cmp
sbb
xor
mov
in
popf
jno
mov
int3
and
lods
sbb
imul
shll
sbb
loop
sbb
pop
out
mov
push
fsubl
lahf
adc
and
aaa
mov
enter
pop
jmp
adc
je
xchg
insb
shll
mov
ljmp
push
iret
and
cltd
insl
int3
pop
sti
sarl
int3
xchg
ljmp
xchg
add
cmp
sub
mov
mov
adc
shrb
inc
jp
sbb
inc
mov
mov
repz
cltd
divl
inc
popa
movsb
jp
call
xchg
rcl
out
push
sub
xor
or
sub
mov
scas
cmp
gs
test
pop
test
icebp
ret
sbb
mov
mov
and
or
adc
jecxz
and
pusha
fildll
push
and
add
in
mov
push
push
lock
pop
dec
push
test
stos
xor
pop
mov
jo
mov
jnp
add
mov
out
js
adc
xlat
in
pushf
xor
lods
shll
cmp
inc
aad
or
pop
xchg
sub
cmpsl
stc
mov
mov
loope
hlt
popa
xchg
ret
inc
test
jne
repnz
leave
mov
xchg
dec
fidivs
inc
testl
ret
call
pop
or
mov
ljmp
gs
lods
rcrl
cmc
testb
dec
cmp
movsb
mov
pusha
sub
inc
notb
push
adcb
stc
mov
jo
and
mov
sbb
jne
jmp
sub
mov
adc
adc
scas
mov
shll
sub
in
dec
mov
bound
jns
enter
mov
mov
pop
dec
sarl
loope
fidivs
mov
and
pop
xor
pop
dec
inc
das
adc
cld
daa
fistpl
mov
or
pusha
mov
push
jge
push
push
or
mov
in
ss
es
or
mov
inc
ljmp
cmp
fsubs
push
dec
jge
andb
sbbl
mov
mov
in
jno
mov
pop
dec
fbld
pop
fsubl
push
lcallw
jge
ds
jne
daa
jb
cmp
and
repz
adc
mov
fidivl
push
movsl
push
rcll
repnz
fcomps
cmp
xchg
sub
std
fimull
dec
inc
outsb
pop
push
xor
add
hlt
cmp
sarl
push
popf
or
movsb
inc
lcall
test
mov
mov
ret
sbb
mov
or
sub
lcall
mov
push
add
xchg
sub
inc
lds
xor
lds
es
and
call
inc
push
repnz
or
mov
push
mov
repz
jmp
out
ret
loope
jnp
or
imul
in
inc
mov
rcrl
in
inc
sbb
cmp
or
dec
xchg
xchg
mov
sub
add
bswap
mov
fcomps
daa
sub
sub
mov
out
mov
xchg
fists
inc
jnp
cmp
xchg
mov
cmp
out
sub
sub
inc
jmp
in
jl
jecxz
sbb
pop
cwtl
dec
mov
xchg
in
sbb
movsl
test
dec
popf
bound
addb
test
neg
decl
push
cltd
lahf
lea
dec
ljmp
adc
icebp
divl
test
mov
cmp
inc
mov
mov
inc
aaa
cmp
push
sarl
dec
and
sbb
les
stc
insb
inc
xor
xor
xchg
mov
cmp
jb
mov
cli
cli
sub
jns
incl
mov
call
sbb
pop
test
in
hlt
jecxz
add
clc
xor
mov
or
push
jl
mov
xchg
jns
out
dec
push
inc
in
mov
sub
lds
ja
sti
addr16
xchg
push
loop
mov
popf
shl
test
out
add
andl
ret
fsubrl
movsl
mov
leave
fs
or
mov
pop
ret
call
sbb
rolb
add
call
imul
mov
mov
sub
cltd
xlat
fsts
mov
dec
push
adc
jecxz
mov
cmp
ds
xchg
mov
mov
push
add
lea
mov
and
and
lret
xor
xor
or
out
push
fwait
cmp
mov
out
push
xor
inc
notb
dec
loop
mov
sbb
inc
ficompl
movsl
ds
and
rcrl
loop
push
jae
xchg
insl
mov
loope
xchg
imul
insb
dec
sub
dec
cld
xor
in
or
lret
mov
lock
sbbl
pop
popf
dec
inc
rcrb
pop
loop
pushf
and
pop
fdivl
in
sbb
push
push
bound
fistps
mov
shll
in
mov
enter
adc
leave
icebp
repnz
inc
cli
add
and
movsb
jle
jns
cmp
push
xchg
mov
jo
inc
xor
xor
je
loop
gs
inc
jmp
mov
bound
rcrb
lds
roll
add
push
inc
mov
fcmovbe
hlt
mov
fiadds
cmp
xor
inc
jno
cmp
in
imul
add
push
cmp
cmpsl
pop
pushf
in
mov
inc
into
lods
or
scas
aas
js
imul
mov
or
or
or
stc
arpl
add
jle
jecxz
stos
jge
mov
bound
or
pop
fs
aam
out
mov
and
mov
sti
sbb
rcr
cltd
stos
lcall
xorl
or
inc
jp
xchg
rclb
icebp
pop
mov
jno
lahf
leave
cmp
fildl
mov
movsl
stc
aam
testl
sbb
mov
jb
mov
pushf
loopne
xor
jns
jnp
or
lret
insb
push
sbb
sahf
jnp
add
jecxz
jl
adc
mov
or
jg
cmp
mov
mov
sub
insl
jmp
and
dec
fistpl
insl
jae
iret
test
fnstcw
add
hlt
out
sub
leave
push
outsb
jno
and
lds
jge
fidivl
pop
mov
fcmovb
das
cmp
int
lret
jp
fwait
in
rorb
and
cmp
or
dec
adc
rcrb
imul
inc
je
or
rorb
lret
fnstenvs
in
call
mov
shll
sbb
call
mov
xor
in
leave
inc
inc
cmp
mov
adc
daa
sub
stos
sub
test
fldl
add
inc
arpl
shrb
adc
sahf
jae
add
mov
mov
outsl
das
mov
cs
fdivl
in
push
fwait
xchg
faddl
mov
test
xchg
iret
adc
outsb
fnstsw
jnp
fcoml
call
sub
sbb
jl
cmp
fs
ljmp
push
fyl2xp1
out
test
sbb
lahf
add
push
adcl
jns
sub
lret
fisttpl
mov
sar
xchg
mov
fwait
jbe
in
pop
push
add
stc
loopne
into
mov
or
dec
mov
cld
jbe
push
and
push
fists
outsl
pop
out
out
cmpsb
lods
arpl
loopne
outsb
fimuls
mov
mov
dec
mov
pop
jle
and
sahf
sahf
icebp
sahf
adc
imul
out
mov
cld
shlb
dec
jecxz
lcall
pop
fsubs
test
loop
dec
movsl
push
cltd
leave
dec
sub
jne
inc
nop
in
push
push
int3
adc
out
mov
aaa
xchg
stos
push
lods
cwtl
adc
xchg
mov
popf
pop
sbb
xchg
mov
or
pop
or
and
cmp
fcompl
add
xlat
pushf
sub
popa
fxtract
fldt
insl
nop
int3
lcall
mov
or
test
push
lcall
push
push
jecxz
es
xorl
mov
push
and
sahf
cld
inc
decb
push
js
pop
push
add
pop
les
popl
adc
sub
push
data16
test
hlt
gs
shll
jmp
dec
aaa
jo
mov
xchg
ret
add
out
ljmp
adc
stos
add
repnz
cmp
mov
andb
add
push
rorb
addl
mov
and
pop
xchg
shrb
xor
adc
test
bnd
dec
xchg
fs
cmovle
rcr
adc
aas
mov
xor
fldl
or
inc
popf
rorb
push
je
and
pop
sbb
jnp
leave
sar
sahf
push
lea
ja
rcrl
mov
in
adcb
mov
sbb
push
gs
and
adc
adc
jb
cmc
xor
push
xchg
jbe
in
cmp
jp
jmp
not
mov
loope
jne
or
xor
mov
into
fisubl
jecxz
ficoms
stos
call
xchg
ds
jo
jbe
out
loopne
pop
xchg
push
and
cli
incl
sbb
enter
cmp
jle
mov
jo
xchg
les
data16
cmp
outsw
andl
lea
aas
test
daa
stos
fsubp
xor
out
cmp
pop
mov
out
out
arpl
pop
xchg
out
sbb
xor
pop
bound
gs
stc
push
mov
xor
lods
clc
mov
push
fcompl
in
lret
jge
inc
and
inc
push
mov
out
xchg
movsb
ficoml
adc
adc
and
out
or
cwtl
popf
int3
sub
movl
lock
fnstenv
lods
movlhps
add
jge
fldenv
cmpsb
sbb
imul
xchg
pop
fwait
lret
adc
dec
xchg
sti
pop
sahf
or
ja
jbe
sbb
or
rorb
pushf
and
mov
xchg
pop
pusha
adc
outsl
xor
mov
adc
dec
shll
mov
dec
lock
mov
pop
jne
clc
push
or
xlat
mov
add
push
ljmp
push
test
lcall
push
das
xor
mov
cmc
mov
addr16
push
dec
call
pop
call
cs
xor
rcll
call
mulb
dec
rclb
das
add
clc
out
adc
lds
xor
mov
xor
fs
stos
mov
test
test
fadds
jb
jl
mov
sti
xchg
mov
add
loopne,pt
out
lcall
pop
jmp
stc
imul
sub
test
fisubs
xchg
pop
das
fsubrl
cmp
shlb
jmp
or
jge
fistps
adc
mov
cmp
xor
jle
outsl
jns
or
xor
loop
lret
jmp
cltd
pop
fisttpl
pop
or
and
cli
and
mov
mov
fwait
xor
push
adc
arpl
jnp
jns
and
mov
mov
or
call
pop
sub
mov
fcomp
inc
aad
dec
mov
add
pop
lea
les
adc
enter
in
sahf
insl
jo
ja
mov
pop
cli
dec
imul
leave
mov
stos
out
mov
fmuls
dec
orb
and
inc
xchg
pop
xchg
pop
movsl
dec
rcl
adc
test
add
push
pushf
test
pusha
fwait
xor
mov
sbb
mov
pop
in
add
push
sbb
cli
lea
out
mov
imul
adc
dec
jo
in
push
cli
fisttpll
or
push
push
jae
lret
test
int3
xchg
bnd
fiadds
testb
pop
std
imul
leave
sti
and
pop
inc
pop
test
jo
mov
mov
in
ss
cwtl
mov
popf
cld
pop
pop
sub
movsl
in
inc
sti
inc
fdivs
pop
std
push
add
xchg
imul
dec
pop
sub
out
pop
mov
pop
out
aam
xor
movsl
insl
push
mov
js
mov
or
xchg
inc
lock
cmpsb
push
jnp
cwtl
jmp
adc
and
test
enter
fstpl
idivb
xchg
int
push
aad
int
fxsave
scas
ret
out
cmp
xor
mov
push
xchg
mov
jne
dec
inc
push
dec
sahf
xchg
pop
push
dec
push
rorl
sub
bound
loope
fstp
or
jnp
jecxz
cmpsb
int
adc
push
lock
adc
std
subl
adc
sbb
pusha
push
int3
pop
push
xchg
add
adc
jo
inc
and
es
lret
loopne
loopne
jns
hlt
stos
adc
push
mov
dec
je
push
jo
mov
mov
ljmp
adc
mov
addr16
mov
out
sahf
sbb
lea
sub
cmp
jns
fstpt
jle
iret
fbld
mov
dec
outsb
popf
xchg
push
xchg
jecxz
sub
sbb
scas
je
out
pop
outsl
pop
pop
sbb
jmp
lret
inc
jle
loop
lcall
pop
jp
mov
or
aaa
or
cs
loop
cmp
sub
int
jb
mov
clc
shll
push
jecxz
rolb
pushf
add
add
nop
inc
jne
and
hlt
jmp
or
sarl
dec
loopne
in
rolw
mov
xchg
inc
mov
mov
pop
sbbb
sbb
rcll
test
add
daa
decl
jmp
insb
mov
adc
push
jae
inc
pandn
sahf
rorl
and
adc
inc
cmc
bts
mov
fists
or
mov
mov
and
sub
xchg
xor
pop
xor
aam
fmul
negl
sbb
pop
dec
jns
dec
mov
scas
fisubs
daa
sub
xor
inc
and
and
insb
push
lret
pop
jae
lret
les
test
fstps
movsl
cmp
adcb
jno
pop
jle
in
pop
adc
dec
mov
stos
repnz
mov
cmpsl
enter
out
push
dec
outsb
push
xchg
nop
pop
in
add
sbb
sti
test
andl
sub
add
and
push
jl
test
xor
out
add
cmp
push
xor
fmuls
in
jecxz
jp
cld
push
jmp
mov
sub
sbb
ror
jmp
and
mov
je
test
pop
mov
call
xchg
push
mov
xchg
cmp
add
or
fisubl
lods
js
loop
out
fimull
sti
lock
jno
add
out
lcall
and
call
dec
add
bound
push
test
mov
adc
sub
push
add
dec
push
xchg
out
ffree
call
negb
addb
and
xor
mov
insl
pop
mov
pushf
cmc
loopne
into
aas
sbbl
hlt
pop
lret
cs
xchg
cmp
jl
mov
xor
dec
mov
jae
lahf
jecxz
inc
cwtl
movsl
sub
xor
out
mov
cmpl
mov
xor
xchg
jb
xor
imul
mov
psraw
mov
xchg
stc
pop
inc
clc
push
repz
repnz
cmp
leave
fwait
aaa
fwait
and
cmpsb
or
adc
lock
inc
xchg
jl
mov
jl
out
mov
out
fstpt
aam
fsub
jecxz
lret
fildl
leave
xchg
dec
ret
fiadds
gs
bound
test
push
sarl
cmc
repnz
nop
call
adc
rolb
movsb
adc
mov
rcrb
clc
test
mov
ss
and
sub
mov
loop
test
fdivl
mov
stos
dec
shr
in
shl
xor
adc
cwtl
cwtl
inc
inc
lret
xor
out
pop
inc
push
lret
mov
ret
icebp
ljmp
fcomps
sahf
out
bound
call
ficompl
shl
sahf
mulb
adc
shlb
mov
jecxz
push
mov
popf
lock
pop
nop
dec
push
cmp
fcmovu
or
std
mov
lahf
or
add
pop
pop
push
addr16
cmp
test
push
rorb
adc
aas
mov
roll
shll
or
test
inc
cld
scas
push
inc
mov
xlat
add
jae
mov
sbb
into
lods
push
rorl
movsl
inc
add
adc
adc
cmp
insb
cmp
into
sahf
pop
lods
adc
and
push
cmp
and
iret
push
mov
jne
push
adc
jg
inc
scas
and
inc
ds
jae
inc
mov
jae
fistpl
adc
sarl
mov
dec
and
or
mov
pushf
les
mov
mov
rol
xchg
dec
cmp
pusha
test
mov
pop
lcall
inc
mov
xchg
outsb
je
test
movsb
cs
inc
adc
sbb
inc
adc
jne
and
pop
mov
aaa
in
or
insl
xchg
mov
pop
jbe
aaa
test
stc
pop
mov
mov
bound
mov
lds
sbb
js
dec
movsb
popa
data16
and
mov
hlt
add
stos
mov
xchg
cmp
aad
jmp
dec
jo
fucomp
sub
fcmovnb
pop
adc
mov
inc
or
mov
mov
in
fs
push
arpl
adc
dec
lds
cmp
pop
add
add
xor
or
mov
cmpsb
or
and
lds
in
dec
cmpsl
xchg
dec
dec
test
adc
shlb
nop
mov
jne
std
cmp
sub
cmc
dec
jle
outsb
sub
and
sbb
xor
cmp
ljmp
movsl
pop
ljmp
mov
aam
repnz
cmp
pushf
shrb
and
aaa
nop
scas
add
in
sub
inc
lret
adc
in
repnz
push
xor
filds
test
jns
in
cmpsb
sub
incb
mov
cmpsb
push
fabs
scas
mov
sbb
xchg
and
cmpsb
cwtl
inc
mov
fbstp
movsb
loopne
aaa
pop
dec
dec
or
add
popf
inc
push
fdivrl
mov
push
pushf
push
dec
cltd
rol
lods
mov
fisubrs
jno
inc
push
div
cmovne
leave
dec
mov
hlt
in
inc
call
js
and
pop
ljmp
jo
dec
loope
inc
outsb
pop
jecxz
sbb
aad
loope
out
mov
inc
cmpsl
jg
andb
les
sbb
mov
and
mov
aad
rol
pop
xor
lods
and
push
cli
iret
cmp
push
lock
mov
test
pop
push
inc
dec
cmp
out
dec
sti
or
cmp
inc
cmp
int
je
adc
leave
stos
cmp
je
lods
jne
or
and
stc
cmp
or
fnstcw
call
gs
icebp
adc
mov
and
popa
inc
addl
cltd
iret
loope
fs
mov
addb
jns
shlb
adc
into
pop
push
cmpsb
loop
out
xchg
lcall
pop
mov
test
inc
xchg
or
xchg
sahf
mov
mov
push
fisttps
stos
shll
cmp
dec
lret
call
jbe
lcall
popa
cmpb
sub
jae
sbb
popf
idivb
repz
loope
jge
fmull
adc
repz
push
cmp
das
shlb
jns
and
pop
in
dec
mov
rorl
lods
jmp
test
xchg
cli
loop
shr
sub
jne
and
mov
ret
mov
dec
or
sbb
fcomps
filds
sub
xchg
cld
test
pop
mov
pushl
iret
jb
xchg
dec
movsb
jns
inc
cmp
xchg
stc
bound
add
cmp
lret
add
ljmp
sub
sbb
or
fnstcw
push
fs
ljmp
hlt
insb
int3
push
popa
xchg
sarl
xchg
lahf
nop
ds
ret
sarl
enter
sar
mov
mov
in
pop
push
loope
sub
fstpt
push
add
mov
or
fwait
lcall
inc
mov
xor
cmp
dec
insl
ss
insl
fisttpl
imul
aam
enter
jle
jb
pop
cmpsb
in
sahf
or
jecxz
push
pop
dec
mov
mov
xor
jae
push
add
jnp
xchg
add
int3
aas
or
hlt
push
aad
jl
loope
scas
mov
mov
in
jecxz
negl
lahf
loop
jmp
mov
imul
shlb
push
or
lea
sub
jne
adc
or
xchg
test
mov
lcall
dec
lods
out
mov
sbb
dec
inc
pop
push
sub
dec
fwait
movsl
lods
fnstsw
pop
inc
pushf
mov
hlt
sbb
jmp
and
push
inc
lods
aam
movsl
ret
adc
mov
out
mov
leave
mov
ficomps
cmp
jl
daa
mov
jno
outsl
movsb
das
loop
mov
orb
cwtl
aad
imul
push
orl
or
rol
sub
mov
pop
dec
jmp
mov
jmp
or
dec
mov
cmpsl
subl
int3
pop
clc
ds
push
aas
push
jmp
sub
adc
add
push
data16
sbb
push
push
addr16
pop
inc
jbe
aaa
inc
inc
xchg
fstl
add
cli
iret
bound
ret
outsb
jb
js
push
lock
pusha
les
xchg
pop
jecxz
pop
cmc
sub
pusha
in
mov
orl
loopne
push
shl
push
sub
out
dec
loope
cmp
push
icebp
lods
jmp
outsl
clc
pop
mov
xor
fcmovnu
in
jle
repnz
lret
jge
stos
or
add
jb
add
inc
xchg
fsub
int3
negl
mov
mov
hlt
xor
mov
sbb
sub
lods
lret
xor
testb
mov
jg
sbbb
mov
sub
cmpl
bound
out
xchg
jns
bound
mov
sub
rcr
dec
jmp
sub
test
dec
nop
cmp
adc
outsb
mov
jmp
mov
in
mov
pop
popf
into
xchg
or
mov
mov
mov
cmp
or
pop
dec
pop
sub
rorl
and
lret
and
fs
fcoms
imul
cmp
movsb
inc
in
int3
stos
outsl
movsl
icebp
lret
jbe
jo
ds
jno
xlat
cld
insb
lods
sbb
mov
ret
adc
xlat
push
cmp
mov
add
mov
push
lods
not
pop
popa
clc
mov
scas
jne
mov
daa
inc
insb
and
adc
xchg
or
into
jnp
cmc
pop
nop
mov
sbb
xor
push
mov
push
cmc
js
or
xchg
pushf
inc
sub
enter
int3
stc
mov
push
dec
jle
int3
lret
mov
mov
and
mov
inc
dec
pop
lods
jge
or
cmp
rorl
or
fwait
xor
or
movsb
push
jge
jecxz
pop
xchg
push
pop
adc
jecxz
fisubl
or
mov
mov
pop
push
bound
pushf
xchg
clc
sub
mov
mov
mov
scas
inc
lock
sub
sarb
or
inc
test
enter
addr16
pop
and
les
test
add
push
add
jnp
push
pushf
dec
inc
xchg
ficoms
filds
pop
pop
mov
pop
xor
push
pop
inc
popf
lea
shrl
daa
lahf
or
clc
inc
nop
jg
movsb
les
lahf
fiaddl
jae
dec
jae
inc
push
cmp
jle
mov
mov
xor
xchg
mov
loop
jg
mov
add
push
adc
call
inc
xchg
jbe,pt
dec
cmp
bound
mov
sbb
add
and
mov
icebp
mov
xor
dec
xor
mov
mov
push
jae
loop
int3
int3
inc
imul
push
adc
iret
xchg
xor
sbb
sub
movsb
fistpll
xchg
lea
daa
inc
push
and
popf
insb
cs
adc
cmp
xor
jmp
mov
enter
cmpsb
outsl
xor
scas
jns
mov
in
aad
jnp
mov
or
test
add
or
daa
xchg
mov
mulb
sub
pop
fwait
push
movsb
mov
shlb
add
or
mov
mov
and
sbb
pusha
stos
int
test
push
ret
dec
sub
jo
nop
ljmp
push
push
movsl
jmp
lock
daa
mov
mov
mov
xchg
and
pusha
sbb
xchg
mov
out
mov
sub
dec
sbb
loopne
les
sahf
arpl
out
adc
ljmp
adc
dec
inc
pop
add
loop
xchg
sbb
mov
sahf
cmpsb
mov
outsb
dec
mov
dec
add
call
aad
outsl
sahf
cmp
mov
btr
repz
popa
into
mov
cmp
mov
jmp
out
ret
ret
xorl
sbb
in
jecxz
pextrw
inc
push
ds
pop
es
xchg
xor
push
sub
add
stos
out
xor
test
jl
mov
xchg
in
incb
shl
sub
dec
add
shrl
insb
popl
pop
and
push
push
mov
fcomip
dec
roll
mov
jne
dec
les
mov
sbb
dec
lret
clc
lret
mov
fsubl
icebp
push
and
stos
lods
fidivrl
sub
mov
ss
jb
movsb
and
jge
hlt
or
sub
stc
stc
mov
or
xchg
inc
mov
pop
and
jno
jo
adc
pop
outsw
int3
shrl
push
ljmp
repz
das
fsubrl
leave
adc
lcall
fidivrl
popf
lods
add
xor
jmp
xor
pusha
daa
add
arpl
aad
fwait
xchg
mov
push
sbb
imul
ret
jge
push
aas
in
adc
and
add
sbbl
lcall
pop
in
int3
andl
xchg
outsb
inc
and
xor
or
test
test
xchg
aam
pop
out
jecxz
pop
jno
std
and
sub
mov
sbb
cmp
aaa
add
sti
repnz
call
imul
sbb
mov
ljmp
sub
icebp
push
cmpsl
ss
cwtl
and
or
jns
sbbb
pushf
add
sahf
pop
adc
lods
jle
fdivr
inc
add
xchg
lret
notl
bswap
leave
sub
adc
inc
outsl
add
in
sti
arpl
cmp
or
mov
cmp
adc
lahf
iret
xchg
loope
adc
inc
cli
mov
or
inc
push
shlb
xor
sbb
push
dec
filds
cs
fmull
cld
mov
cmp
mov
and
mov
dec
sahf
or
dec
outsl
popf
xchg
rcrl
sub
xor
fcmove
xchg
inc
stc
dec
lds
ficoms
js
repz
cmp
int
push
pop
dec
xchg
cmp
out
push
jno
push
xor
cmpsl
push
sub
cltd
shll
add
push
test
lods
lods
jb
dec
stc
addr16
sub
shl
pop
aas
pop
shll
or
mov
leave
inc
notl
or
dec
push
cli
xor
outsl
mov
cltd
mov
inc
std
shll
mov
sarb
mov
cwtl
mov
popf
ret
lret
sti
cmp
adc
mov
out
or
fdivp
mov
mov
pop
jg
push
mov
pop
loop
xchg
inc
ds
daa
and
xorl
je
inc
test
call
insb
xor
das
mov
in
xchg
mov
lods
jecxz
add
or
aad
jb
xchg
push
jp
dec
sbb
push
cwtl
push
lds
cmpsl
fldcw
ficompl
jnp
stc
pop
or
and
data16
and
sbbl
or
es
sarb
insw
in
cmp
xor
add
jne
xorb
in
pusha
shl
xchg
adc
movntq
out
mov
das
and
sub
daa
xchg
add
dec
icebp
dec
jae
lock
sub
sahf
fists
popa
xchg
pop
or
fdivl
push
fiaddl
mov
inc
sbb
shlb
cmp
imul
push
and
mov
pop
mov
sbb
int3
add
adc
cld
fisubl
push
lods
xor
inc
xchg
shl
xlat
and
push
orb
sahf
sub
aas
inc
mov
jo
stos
inc
pop
push
test
ja
orb
and
cld
jbe
fs
cwtl
mov
jge
fldcw
ljmp
daa
test
test
out
movsb
ss
mov
ret
cmp
int
es
push
sbbl
sti
clc
or
shlb
mov
xor
ficoml
dec
cltd
pop
xchg
mov
mov
jbe
gs
dec
mov
jo
aaa
sub
out
xchg
std
inc
cmc
cmp
std
sbb
lods
dec
pop
dec
icebp
xor
mov
outsb
sub
lds
mov
mov
lods
jle
pop
xchg
mov
dec
mov
add
push
jb
repz
sahf
inc
sbb
inc
or
iret
repz
mov
sbb
sbb
push
jo
sbb
add
dec
cmp
js
mov
in
out
inc
and
pusha
and
mov
lahf
subb
xchg
popa
imul
loopne
ljmp
adc
inc
loop
rcl
xchg
sti
fisttpll
push
addr16
pop
push
mov
std
rcrb
push
cltd
lret
sbb
cltd
fwait
push
mov
ret
cld
sti
inc
rclb
idiv
idivb
in
js
lahf
push
lea
xchg
xor
outsl
and
pop
out
outsl
xchg
adc
xor
cmp
jmp
jg
cmp
xchg
dec
add
cmp
daa
adc
dec
mov
mov
sub
rorl
mov
xchg
jno
cwtl
xor
in
rol
jp
cmpsb
mov
rcr
lea
or
mov
sub
adc
push
or
xchg
mov
mov
pop
rorb
or
xor
sbb
movsb
imul
test
xor
movsb
enter
sbb
mov
stos
in
insl
aad
test
jo
bound
mov
pop
pop
clc
xchg
xchg
outsb
mov
int3
push
repnz
sbb
popa
mov
xchg
imul
or
sbb
jge
xchg
dec
cmpl
mov
pop
inc
sbb
mov
push
mov
fisubl
push
test
mov
adc
pop
mov
dec
js
clc
and
outsl
dec
fsubl
xor
xor
push
test
icebp
jbe
or
cld
sbb
mov
mov
push
mov
adcb
pop
sub
mov
add
mov
sub
rcrl
popa
je
cmpsb
imul
cmc
xorb
pop
xchg
mov
sbb
push
or
add
add
jg
loope
lret
sbb
movsl
xor
pop
in
nop
push
jmp
dec
mov
int3
pop
fiadds
daa
pop
mov
mov
insl
stos
mov
popa
call
push
ds
in
ret
xor
cmpsb
jecxz
push
xchg
push
pop
dec
in
xchg
in
seto
scas
pop
pop
mov
mov
jl
add
xchg
sbb
sahf
pop
adc
shlb
or
and
jle
adc
ret
bnd
jb
push
jmp
inc
cmp
xchg
mov
push
lods
popf
cld
xchg
xchg
pop
jb
and
pop
pop
lock
ss
ret
cmp
dec
in
mov
aas
sarl
lds
iret
leave
js
ja
add
mov
lret
seta
mov
jb
pop
cltd
add
mov
cmp
xor
js
in
repnz
aam
fstpt
push
fs
pop
jg
aaa
mov
jnp
lret
out
cmpsl
shl
cmp
mov
xor
lock
push
dec
pop
jle
mov
cld
dec
mov
mov
outsb
pop
cmp
cs
mov
fidivl
aam
mov
lcall
push
leave
cmp
cmpb
out
lahf
pop
push
or
or
push
pop
jge
mov
loopew
ljmp
imul
stc
adc
int
arpl
inc
jg
push
dec
sub
icebp
pop
cs
fildll
stc
or
repnz
add
out
cmp
out
push
idivl
sti
mov
pop
fwait
aas
push
adc
fdivr
cmc
das
loopne
and
mov
pop
in
mov
and
lcall
ret
lds
add
add
iret
add
jne
sbb
lahf
in
pop
adcb
mov
cmp
and
fcoml
das
inc
cmp
and
push
lods
xchg
adc
add
xchg
sub
or
and
ja
negl
inc
inc
xchg
neg
fisubrs
xchg
rcrl
adc
je
sbb
and
or
sti
addr16
add
mov
add
push
adc
pop
inc
std
xchg
jbe
loope
test
mov
lock
mov
mov
cmc
jge
xor
and
dec
cmpsb
imul
ljmp
lods
and
psubusw
adcb
cwtl
and
outsb
lods
lods
dec
int
cld
inc
adc
pop
xchg
mov
cwtl
mov
leave
test
sets
cmp
xor
cmpl
jb
lods
bound
or
ret
in
ret
sbb
push
dec
xchg
das
mov
pop
pop
add
xor
jae
repnz
outsl
xchg
jns
and
add
inc
testb
fnclex
or
shll
push
aaa
mov
push
pop
mov
pop
mov
lds
cmp
cmpsl
fldt
xchg
push
push
dec
adc
jb
loope
cmp
loope
xor
lods
ss
lods
aad
icebp
lock
data16
sahf
int3
adc
jg
lock
in
push
inc
sub
xor
ds
jmp
and
add
in
and
cli
clc
hlt
inc
int
sbb
movsl
pop
imul
mov
push
dec
or
push
inc
mov
push
mov
mov
adcl
in
sub
shlb
dec
pop
aas
jo
mov
divb
jo
xor
cmp
insb
enter
or
ss
xchg
movsb
je
das
dec
push
push
push
xchg
cmp
ds
cli
lock
cmpsl
incb
movsb
jecxz
pop
sub
inc
inc
push
mov
incl
sbb
out
lods
sbbb
push
mov
and
jge
cmp
lea
xor
jns
into
jle
push
mov
into
lods
xor
loop
int3
aaa
divl
fstl
push
lea
sbb
jp
jb
xchg
xor
sbb
js
fucomip
nopl
rcl
aam
dec
fdivs
xchg
xchg
scas
int3
mov
inc
test
mov
ret
insb
cmp
arpl
jmp
int3
jne
jno
cwtl
adc
sar
jbe,pn
jns
sub
ret
push
loop
repnz
sub
xor
lea
sub
mov
mov
dec
cmpsl
or
in
sbb
sub
outsb
cmp
lods
pushf
or
mov
sbb
pop
pop
or
adc
enter
push
iret
gs
aaa
ffreep
clc
cltd
mov
inc
sbb
int3
arpl
rcrl
inc
push
cli
cmp
pop
cmp
bound
push
inc
cld
xor
push
push
rorb
push
mov
push
add
xchg
sti
cmp
pop
mov
add
xor
fidivrs
insl
sahf
lods
gs
dec
sbb
sbbb
cmp
adc
mov
daa
pop
dec
dec
sbb
insl
pop
sbb
scas
nop
sti
xchg
dec
psubsw
add
jge
idivb
lahf
mov
push
xor
cmp
test
adc
stos
pop
sub
in
test
pop
cmpsb
inc
orl
icebp
dec
cmpsl
sbb
push
jl
sub
ss
cli
nop
cmpl
mov
dec
ss
pop
mov
mov
dec
outsl
xchg
call
into
mov
mov
push
pushf
out
sbb
pop
repz
mov
and
in
fbld
push
mov
cld
or
enter
bound
pop
xor
dec
mov
arpl
or
inc
mov
sub
and
out
mov
test
dec
shll
mov
or
add
loopne
sbb
cmp
int
loop
jge
ret
mov
into
xor
push
sub
clc
xchg
mov
and
jg
mov
fnsave
cs
cmpsb
push
gs
cwtl
xor
sti
cltd
dec
inc
je
push
cmovno
clc
lds
loope
sti
pusha
sahf
in
dec
push
add
dec
xchg
jecxz
lea
push
jg
cmc
in
sahf
scas
scas
stos
insb
dec
xor
push
icebp
repnz
dec
fiaddl
inc
push
jno
mov
dec
inc
pop
arpl
ret
lds
push
das
lds
xchg
mov
outsb
stc
out
mov
daa
lds
movsb
jb
aad
cmp
mov
mov
jo
out
icebp
ficompl
or
aad
es
into
add
jmp
mov
int
jnp
cltd
jge
pop
jae
dec
cmp
rorb
xor
inc
outsb
daa
xchg
xor
or
sahf
pop
mov
cmp
sbb
mov
outsl
xlat
and
sahf
xchg
cmp
sbb
repz
cli
iret
dec
pop
fs
ss
mov
or
or
stos
arpl
add
mov
mov
mov
and
fwait
test
loop
int
adc
mov
inc
cmc
xchg
and
mov
fldcw
or
movsb
cmp
insl
push
ficoms
ja
aad
add
cli
push
xchg
dec
mulb
stos
mov
fnclex
outsb
xbegin
ja
in
pop
xor
mov
aaa
pop
out
data16
sub
stos
sub
cmp
inc
bound
push
rorb
pusha
into
mov
push
jl
dec
rorl
sub
add
pop
stos
sub
xchg
mov
cmp
rorl
sahf
mov
out
jae
loop
pop
into
or
jno
test
xor
lret
pop
sbb
pop
out
fcmovbe
adc
sub
xlat
ret
jae
lea
icebp
ds
mov
xor
or
mov
mov
repz
sbb
sub
ret
jl
pop
mov
and
out
xlat
pop
fs
and
pop
dec
dec
sub
lret
push
jae
adc
sub
clc
lcall
xchg
push
dec
mov
iret
testb
sub
jnp
or
pusha
pop
mov
enter
aad
enter
cmp
inc
test
mov
mull
in
jecxz
aaa
lahf
sub
xchg
popf
inc
pop
add
cmc
mov
fwait
repz
or
mov
mov
push
lods
lods
cmc
addr16
add
shr
sub
test
dec
dec
loope
mov
xchg
jnp,pt
or
es
or
xchg
fs
repz
cmpsl
enter
or
mov
sbb
xchg
sbb
mov
stos
enter
or
in
mov
inc
hlt
cli
sub
pop
push
inc
lahf
shrl
adc
lea
dec
push
das
lea
push
fmull
xor
jns
lret
cltd
stc
shlb
rep
clc
data16
lods
and
pop
lahf
cmpsb
mov
sbbb
addr16
jae
inc
or
xor
dec
test
mov
cmp
shll
stos
xchg
fsubp
sub
dec
mov
mov
sbb
outsl
mov
adc
stos
sti
scas
sbb
sbb
loope
add
push
rol
lahf
into
cmp
xchg
jb
addb
sub
xchg
adc
push
and
or
divb
int
jb
sub
lcall
jnp
ret
add
cwtl
bound
sub
xchg
jl
inc
daa
or
mov
xchg
inc
fucomi
imul
cmc
xchg
cli
mulb
adc
xchg
sbb
jle
or
aaa
int
and
xchg
jl
mov
or
push
push
sbb
xchg
lea
mov
push
ja
dec
jo
mov
jmp
inc
xchg
cmp
enter
invd
inc
clc
push
mov
and
idivb
movsb
sub
cmc
testl
sub
popf
and
dec
mov
sti
jg
mov
shlb
jno
xor
fnstcw
jp
js
les
push
mov
shll
test
aad
mov
loope
out
hlt
sub
cmpsb
add
xlat
cmp
lcall
bound
shl
or
cmpsl
inc
inc
leave
jp
or
xchg
movsb
cmp
and
call
es
test
pop
jnp
sub
cmp
aaa
lods
add
xor
pop
cmpsb
add
ja
cmp
jge
xor
rcll
jnp
dec
cli
rcpps
rorl
xchg
inc
jbe
cmp
ret
inc
daa
mov
outsb
mov
mov
rclb
nop
sub
data16
scas
sbb
in
jbe
mov
lahf
sbbb
pop
pop
sbb
or
ss
nop
je
lcall
pop
mov
or
and
ret
lds
sub
iret
jecxz
pop
sub
les
xlat
jge
inc
xor
xchg
xchg
daa
cmpsl
lret
andb
lret
push
ret
mov
lahf
xorb
dec
cwtl
jmp
mov
mov
xchg
scas
lods
cwtl
js
dec
je
test
push
cwtl
std
jb
mov
mov
push
mov
xchg
stos
lods
adc
mov
push
imul
cmp
in
test
inc
cld
ret
in
jmp
jb
or
cwtl
sbb
mov
sar
jno
ss
pop
mov
pop
popa
std
adc
loope
or
jmp
mov
mov
dec
fwait
shll
iret
in
les
and
xlat
orl
js
stos
and
cmp
out
loop
shlb
mov
hlt
cmp
insl
cmc
xor
mov
in
lcall
inc
add
imul
mov
push
addr16
or
push
mov
std
sbb
into
and
dec
aas
inc
call
pushf
lods
xlat
roll
shrl
test
or
jb
pop
test
arpl
sub
in
shl
push
sbbb
fcompl
fcomi
pop
sbb
adc
imul
push
movsb
adc
xlat
es
xor
fadds
push
xchg
imul
mov
xor
inc
dec
bound
add
or
and
das
lods
fstpt
mov
arpl
daa
ss
cmp
pushf
cmp
fs
stc
add
mov
testb
test
dec
fwait
pop
sub
lcall
dec
sub
call
js
popf
dec
sbb
pop
imul
cmp
clc
xor
insb
sbb
xlat
adcb
mov
cmovl
pop
xchg
cmpsl
or
pop
fldl
popa
jle
sbb
ja
addr16
sbb
cmp
sti
jmp
xor
xor
jae
add
jae
jmp
add
div
cwtl
rolb
cmp
and
pop
les
and
int
add
pop
cmpb
pop
insb
ljmp
mov
sub
jp
fldenv
test
shlb
mov
out
lods
sbb
movsb
mov
xlat
fsubrl
inc
lea
lods
xlat
dec
mov
pop
fprem
aam
scas
add
call
popf
mov
jne
inc
fucomi
mov
sbb
sub
mov
dec
and
push
pop
gs
loop
je
cmp
jg
xor
dec
jl
or
adc
stc
fs
imul
into
pop
jno
jmp
arpl
jb
ficoml
pop
cld
sub
xchg
out
xchg
cmp
pop
lock
mov
roll
dec
cli
adc
mov
xor
mov
dec
push
jae
jp
and
nop
loop
cmp
or
fs
leave
and
fs
sbb
jnp
pop
roll
and
arpl
jle
inc
adc
fcomps
cli
sahf
ret
mov
imul
sub
sbb
loop
scas
lds
test
sub
inc
pop
fmull
shrb
fisttpl
and
loope
xor
lods
xorl
gs
add
aaa
pushf
les
aaa
pop
sbbb
inc
mov
mov
leave
lahf
pop
scas
stos
and
pusha
cmp
xchg
mov
mov
add
pop
push
test
lods
mov
cs
lahf
movsl
xchg
ret
cltd
les
daa
rcrl
cmpsb
fsts
mov
dec
imul
ja
shr
sbb
bound
insl
ljmp
jne
das
test
mov
push
push
icebp
inc
ja
lods
cmp
xchg
mov
lret
movsb
inc
imul
lcall
jae
enter
adc
mov
jle
mov
dec
inc
mov
jae
xchg
and
cmp
sub
out
mov
adc
out
int
pop
outsl
cmpb
imul
std
xchg
in
pop
xor
cwtl
jb
pop
mov
push
pop
sub
add
push
loopne
sbb
inc
push
dec
cmp
inc
or
mov
xor
mov
int3
mov
movsb
ljmp
pop
testl
lret
adc
mov
insl
xchg
aam
mov
es
and
mov
ds
test
mov
fisttpl
jp
ja
xor
sub
insb
andl
push
jbe
cmp
mov
sbb
cmp
pop
jp
dec
mov
pushf
pop
pop
iret
pop
jg
mov
and
stc
das
jp
stos
jae
fwait
sahf
and
push
imul
loop
aad
push
jo
xor
add
inc
daa
dec
jcxz
or
and
jnp
jae
mov
rcr
fiadds
adc
jbe
outsl
mov
call
leave
pop
arpl
dec
fildl
cmp
jbe
inc
cwtl
or
mov
xor
xor
and
lock
inc
lahf
cld
test
aad
adc
and
fcoml
or
push
inc
and
cmp
negl
sub
cmpsb
fs
movsl
rcl
lret
iret
xchg
cmc
scas
and
and
repz
loopne
sbb
push
int
or
xor
cwtl
xor
js
fistl
je
push
cwtl
scas
fbld
int3
out
sub
add
scas
cli
add
shll
jbe
mov
lret
dec
std
add
sub
cmc
inc
int3
mov
sbb
push
pop
lea
pop
fdivrs
dec
loope
dec
imul
xchg
punpckldq
popf
clc
sub
sbb
and
popf
inc
dec
jbe
aad
mov
pop
push
sarb
push
and
cmp
sbb
pop
das
movsb
jle
or
dec
cmc
mov
fld
push
inc
mov
inc
jo
push
enter
sbb
or
repnz
jl
xor
sbb
pop
push
aas
push
fcompl
add
pop
sbb
pusha
mov
je
int
and
cli
rol
pop
outsl
mov
in
shrb
loope
or
cmp
ljmp
push
insb
scas
jle
hlt
mov
popl
fwait
repnz
mov
ljmp
mov
cmp
jne
data16
fstl
xor
sbb
in
in
push
push
jae
hlt
and
xchg
icebp
add
mov
fdecstp
inc
repnz
mov
and
sub
mov
adc
pushf
sub
std
push
leave
test
and
xchg
popf
repnz
xchg
sub
js
fistpl
call
pop
std
fadds
lahf
test
adc
pop
andb
test
pop
pop
je
lds
or
push
fisubrs
dec
xchg
fsubl
adc
aas
mov
pop
iret
push
popa
in
xchg
and
iret
lret
mov
cmpsb
push
and
pop
inc
adc
mov
icebp
fs
and
cmc
mov
nop
xor
ds
cmp
sub
enter
cmp
nop
rcrl
ljmp
and
popf
sbb
push
in
and
pop
shrb
fdivr
pusha
and
xor
mov
imul
ss
mov
and
adc
lret
mov
mov
adc
notl
cmp
xchg
lock
or
clc
xchg
and
mov
lock
mov
int
cwtl
mov
inc
loopne
rclb
into
mov
ret
rcrl
roll
add
inc
adc
jmp
call
sti
rol
les
aad
xor
iret
xchg
les
jae
jle
fs
lods
jp
aas
outsl
repnz
mov
jmp
mov
aaa
xor
push
sub
inc
insb
inc
loop
fsubs
icebp
bound
xor
fisttpll
fistps
shl
push
out
jp
or
sub
aam
xchg
frndint
mov
fldcw
jbe
mov
or
pop
fmull
das
add
xlat
add
jns,pn
and
sub
sar
mov
or
pop
out
es
sbb
push
test
sub
mov
ret
daa
mov
mov
sub
mov
movsb
or
xchg
clc
cmp
iret
pop
dec
inc
add
xchg
jl
lods
add
jb
es
bnd
jecxz
sub
jnp
scas
fsubrs
es
ja
lock
cmpsl
aas
mov
cmp
mov
xor
push
adc
sub
add
loope
push
push
aam
rorl
xchg
pop
test
sub
jl
xor
and
xorb
mov
cmpsb
insb
jnp
adc
lret
test
aas
lret
adc
xlat
or
mov
jmp
inc
jecxz
jmp
into
xor
cltd
lret
add
jae
lahf
xor
inc
jbe
pop
jecxz
cmp
stos
in
leave
mov
stc
int
jecxz
insb
outsb
test
xchg
pop
fldl
mov
aaa
out
cmc
sub
ret
push
daa
pop
fneni(8087
movsb
ret
jecxz
es
adc
mov
pop
xor
divl
incb
dec
rcl
jle
testl
icebp
imul
add
sbb
xchg
enter
rolb
cs
mov
adc
mov
outsb
arpl
mov
fwait
das
push
pusha
cmp
mov
loopne
xor
mov
cmp
xchg
push
decl
stos
push
test
or
lret
xor
fnstsw
jp
xchg
pop
popf
pop
xor
add
jno
mov
outsl
jbe
lds
sbb
pop
popa
insb
add
cwtl
sbb
add
push
cvttps2pi
fisubrl
call
pop
addr16
adc
push
shr
pop
lret
jno
cld
decb
sub
stos
data16
add
xchg
loopne
dec
cwtl
sub
or
fisubrl
dec
mov
lret
xchg
mov
xlat
sbb
mov
mov
mov
sbb
mov
sub
insl
inc
enter
int3
faddl
cmp
cli
pop
nop
mov
arpl
subl
inc
jae
ljmp
fwait
xchg
xchg
mov
mov
nop
adc
je
ret
aad
cmpsb
rcll
fnstcw
and
and
jnp
pop
add
fstps
lahf
push
push
cmp
stc
inc
mov
xor
dec
pop
dec
and
cs
fildl
mov
bound
dec
popf
pop
mov
repnz
dec
sbb
ljmp
mov
int
rorb
clc
sbb
jno
shl
ds
jb
mov
push
aaa
lea
adc
mov
in
fimuls
jo
cmpsl
test
imulb
mov
push
rcrl
in
add
int3
or
push
lods
hlt
sub
sahf
sbbl
in
pusha
push
pop
cmpsb
ljmp
push
push
cvtpi2ps
das
pushf
xchg
jo
and
enter
daa
bound
xor
ret
pop
fbld
sub
addr16
aam
and
jge
sub
adc
push
pop
dec
test
in
mov
xchg
aad
sbb
mov
mov
aaa
pop
lods
cmp
and
lret
into
lods
jge
aas
cmp
sbb
push
xlat
fiadds
lock
fbstp
call
imul
stos
and
push
rcr
add
push
jmp
mov
ror
mov
adc
and
or
outsb
iret
inc
cmpsb
idivb
lods
mov
das
out
sbb
test
jnp
and
mov
mov
mov
mov
scas
and
out
mov
hlt
adc
pop
mov
lods
push
inc
jo
add
jns
mov
lock
cmp
or
and
imul
aaa
test
pop
lcall
or
inc
pop
pusha
and
ljmp
loope
sub
inc
outsb
subl
scas
adc
cmp
sub
adc
leave
nop
jg
cmc
cmp
negb
mov
rclb
popa
and
iret
mov
mov
push
icebp
movsl
pop
test
push
mov
lahf
in
inc
lidtl
or
iret
rcr
xor
xchg
or
xor
pop
push
lods
cs
and
out
enter
inc
fsts
dec
cmc
push
aaa
bound
or
push
cli
jae
mov
xor
mov
stos
push
js
repnz
stos
jne
xor
cmpsl
ficompl
fs
mov
ret
jns
fwait
daa
orb
ror
pop
adc
or
test
js
pop
ret
lods
inc
and
or
shl
into
je
ror
inc
std
jg
mov
addr16
mov
cmp
push
aam
cmp
inc
push
xor
mov
sbb
mov
push
pop
pushf
push
xchg
push
inc
xchg
add
sbb
mov
adc
adc
scas
loope
int3
shrl
inc
mov
lea
jo
add
jl
push
movd
movsb
pusha
and
pop
mov
insb
sub
popa
dec
mov
and
jno
push
das
arpl
and
bound
jne
andb
sub
and
add
loop
movb
repnz
sub
push
adc
mov
sbb
repnz
dec
jmp
lods
mov
hlt
outsb
jae
mov
push
push
pop
das
cmp
pop
mov
lods
fwait
aas
push
aad
mov
mov
push
mov
pop
jae
vmovhps
push
sub
enter
jp
push
jno
cmpsl
enter
xor
cli
jle
pushf
push
ret
jecxz
jge
icebp
scas
sub
test
jl
or
aam
xorl
mov
incb
clc
movsl
jnp
cmp
repnz
scas
mov
dec
xchg
mov
jo
push
hlt
fs
pop
mov
sti
pop
ljmp
bound
popf
orb
pop
push
xlat
xlat
sbb
pop
mov
fdivrl
int
sbb
jge
jnp
pop
jle
aam
mov
jg
sbb
aaa
mov
dec
add
xchg
mov
sub
jo
mov
loope
push
push
jae
lret
test
loopne
dec
repz
scas
push
out
dec
sbb
jns
jge
jle
gs
sub
mov
sbb
insb
lahf
test
mov
push
nop
or
das
rorb
push
mov
movsl
repz
or
cmp
mov
daa
sbb
stos
and
cmp
nop
cld
imul
sbb
push
push
in
aas
test
out
gs
cmp
cmp
insl
push
jmp
push
in
and
cmpsl
outsb
xor
cmp
in
xchg
sub
lds
or
push
popf
cmpsl
aas
bound
pop
in
jo
jno
xor
mov
popa
and
and
jae
jmp
xor
mov
mov
lods
imul
out
pop
iret
pop
jmp
xor
test
stos
and
repz
pop
push
dec
mov
mov
aam
sub
inc
lods
jl
movsl
add
insl
insl
push
mov
and
fwait
xchg
sbb
jl
push
add
push
mov
popa
fmul
pushf
out
sahf
out
das
outsb
fsubrl
pop
sub
out
mov
pop
add
lds
lahf
mov
test
jne
push
mov
fwait
mov
out
mov
jo
out
ret
xorl
inc
fidivl
pop
mov
cld
imul
cmp
sahf
movsb
test
stos
js
pop
loope
sbb
cltd
stos
push
je
hlt
xor
ljmp
jmp
pop
pop
cmc
aas
ret
mov
xchg
dec
addr16
jns
xor
aas
push
jl
call
out
orps
test
outsl
mov
pushf
inc
push
dec
adc
hlt
add
sbb
sbbb
cld
jmp
cmp
ss
sbb
insb
ja
mov
jo
sub
cmc
xchg
orl
into
xor
lcall
inc
jne
aam
lcall
and
pop
sbb
das
inc
mov
imul
inc
mov
stos
jo
mov
push
jl
adc
sub
dec
je
fucomip
out
bound
dec
jae
dec
mov
mov
and
pop
jbe
in
scas
xlat
mov
add
call
fwait
mov
push
pop
mov
sbbb
mov
cli
movsl
and
dec
in
in
je
mov
jg
and
inc
mov
pop
ret
popa
insl
pop
fs
inc
bound
jo
jg
std
mov
push
js
je
loop
sbb
mov
jle
or
int3
xchg
mov
xchg
xor
insl
fistps
sbbb
mov
add
xor
mov
xchg
or
push
add
jl
cmp
xor
out
lcall
push
data16
shll
loope
sub
nop
out
or
mov
iret
add
and
inc
and
mov
mov
rcll
fs
hlt
mov
shrb
inc
imul
pop
in
push
adc
into
lret
popa
rolb
jnp
gs
je
mov
daa
mov
and
enter
mov
add
jecxz
ss
jmp
arpl
negb
adc
pop
lea
and
lock
jbe
pop
nop
int
rolb
xor
jns
shll
add
add
nop
inc
leave
je
sbb
lret
out
test
mov
push
loop
mov
jnp
jo
push
xchg
popf
dec
aas
inc
add
xchg
xor
jnp
inc
mov
mov
rcrb
push
and
imul
add
xor
fiaddl
add
jno
out
outsb
insl
xchg
and
in
push
add
xorl
popf
mov
adc
cmp
clc
mov
jo
out
stos
inc
stos
pop
andb
repnz
dec
sub
mov
leave
cmpsl
dec
call
insl
fildl
mov
mov
add
jne
outsb
scas
mov
inc
push
mov
xor
lock
dec
jmp
xor
repz
jo
bound
mov
jns
fdivrl
ds
call
andl
shrb
add
xchg
jp
mov
push
in
mov
into
xchg
js
dec
stc
outsb
ja
and
dec
mov
loopne
mov
sbb
add
mov
pop
sub
xchg
mov
jge
xor
or
and
mov
inc
jmp
dec
sub
mov
popa
cmp
loopne
jb
adcl
add
lahf
xchg
lods
add
jno
push
push
inc
adc
or
movsb
imul
xchg
dec
ret
and
inc
pop
mov
lea
sub
addb
adcl
push
push
xchg
sarb
mov
add
mov
sahf
shlb
pushf
int
mov
fnstsw
push
ljmp
and
mov
outsb
and
adc
movsb
loop
pushf
int
lods
les
pop
or
jecxz
popa
rcrl
push
and
mov
insb
shrb
pop
jbe
push
js
imul
dec
js
dec
jb
jnp
and
pop
mov
testb
fcoml
mov
gs
inc
fs
or
jle
cwtl
aas
fwait
sbb
pop
pushf
inc
dec
in
jg
inc
dec
push
test
ret
cld
xlat
pop
pushf
jbe
ret
jp
setns
add
mov
xchg
add
sub
dec
mov
lods
push
popl
xchg
lret
ret
jle
scas
insb
xchg
lods
sbb
add
fsubrs
adc
jg
push
mov
mov
test
cld
jecxz
js
and
aaa
sub
mov
mov
lods
mov
repnz
mov
scas
fwait
xchg
pop
jg
aam
loopne
xchg
mov
jl
testl
movsl
imull
enter
push
sub
test
ja
movsb
aas
mov
cli
inc
and
cmp
xchg
dec
push
or
fwait
add
test
sbb
lret
test
inc
xchg
mov
icebp
xor
rclb
les
push
push
ljmp
ja
or
jno
loopne
out
dec
fldcw
enter
jns
and
flds
or
icebp
push
daa
push
mov
xor
sbb
ffree
or
push
xor
and
pop
push
test
pop
inc
add
mov
mov
sub
sbb
mov
cmc
into
lret
out
and
ja
mov
fists
mov
cmpb
mov
push
push
popf
out
addr16
and
inc
jle
jns
adc
shll
dec
dec
lock
es
rcrb
sub
pushf
sbb
add
lea
andl
lea
imul
inc
jge
call
jo
jmp
cmpsl
pop
pop
rolb
roll
and
iret
xchg
xchg
jne
ss
in
fcoml
cmp
stos
outsl
das
pop
dec
jle
sti
add
cmpsb
add
xchg
sbb
movsb
add
mov
dec
pop
clc
repnz
sub
out
inc
push
pushf
je
mov
into
lret
ja
repnz
int
jno
lret
push
cltd
jbe
pop
mov
pop
mov
xor
xor
push
stos
push
aaa
hlt
and
out
or
stc
and
sbb
lods
rorb
movl
ljmp
and
jae
lcall
insl
lret
pushf
sbb
decl
imul
jl
add
mov
cmp
cs
pop
mov
xchg
lcall
dec
add
add
inc
popa
pop
mov
bound
jbe
movsl
pop
cmpsb
cmpsl
add
jge
dec
mov
mov
jae
jo
xchg
add
int3
fwait
sub
rorl
jle
dec
jne
adc
stos
jae
cmp
ja
xchg
std
cmp
dec
adc
mov
in
mov
cmp
mov
popf
inc
cmp
cld
dec
cmp
jbe
das
mov
mov
push
popf
xchg
hlt
stos
cmp
xchg
fmuls
dec
mov
dec
or
dec
nop
and
popf
mov
inc
decl
fcoml
js
cmpsb
jle
pop
outsb
fildll
arpl
sbb
aad
dec
sbb
ja
ret
bound
inc
xor
mov
cmc
int3
out
inc
cli
cld
or
fnstcw
fwait
pop
addb
mov
push
cmp
lea
jecxz
sub
cmp
pop
bound
mov
lock
or
imul
out
and
push
sub
jne
mov
sbb
add
bound
mov
je
out
adc
jle
shlb
dec
lock
mov
cmp
call
ret
les
out
shll
repz
popa
aas
cmpsb
pop
cmpsl
inc
mov
inc
ss
xchg
sub
or
cmp
ret
mov
je
jp
or
add
ficompl
add
shrl
pop
or
aas
and
push
push
push
out
fidivrl
adc
out
cld
and
mov
push
mov
outsb
mov
jnp
ret
push
jns
pop
in
out
sti
out
add
ljmp
push
pop
xchg
leave
cld
dec
adc
daa
stc
lock
cmp
xor
dec
iret
sahf
add
mov
insb
cmp
lcall
and
dec
ret
push
cmp
sar
into
add
pop
push
mov
jp
adc
js
ret
fwait
loopne
call
enter
sub
cmp
sub
pop
test
push
push
adc
clc
push
xchg
inc
test
mov
arpl
loope
movsl
jns
fadds
xchg
mov
aam
lods
clc
inc
out
cmp
insb
push
xchg
bound
adc
mov
or
iret
loopne
add
push
shrl
push
pushf
push
cmp
jns
test
pop
jnp
mov
test
push
xor
mov
add
and
cmpsl
call
nop
in
mov
subl
sbb
xor
out
dec
pop
ljmp
mov
sbb
jg
clc
push
fmull
sti
cmp
cli
sub
cwtl
aam
jp
stos
dec
roll
lahf
inc
je
jb
inc
xor
fnstenv
rcrl
ret
pusha
lcall
xchg
dec
hlt
adc
push
jg
cltd
iret
sub
sub
add
test
cwtl
mov
or
adc
xchg
push
outsl
pushf
push
icebp
jmp
push
pop
push
sbb
loopne
cmp
test
mov
push
push
dec
in
data16
adc
add
pushf
push
lods
out
pusha
cmp
mov
mov
jle
scas
push
cltd
jg
sub
xlat
mov
push
push
push
or
sub
jne
xor
fwait
lret
xlat
and
cmp
test
divl
mov
mov
adc
and
aad
inc
cld
ss
and
jno
loopne
cmc
imul
bound
mov
jp
mov
xor
sub
and
shll
jae
in
je
fldenv
pop
dec
xor
dec
test
les
sti
hlt
mov
inc
into
ss
sbb
pop
ret
repnz
xchg
mov
dec
notb
es
lcall
negb
aam
sub
push
jbe
pop
and
pusha
das
mov
pop
stos
fcmovbe
adc
cld
imul
out
pushf
outsl
fcmovbe
aas
xor
dec
dec
sbb
xorb
aad
std
jae
in
scas
jno
sahf
mov
lock
or
ss
insl
out
fstps
inc
or
stos
call
imul
mov
in
mov
shrl
outsb
inc
sbb
adc
xlat
dec
loope
lret
mov
add
jnp
sub
pop
imul
loope
jns
popf
rcr
sub
xchg
xchg
inc
xor
outsb
popa
loopne
test
adc
inc
hlt
mov
add
fs
or
xor
xchg
sarb
mov
lods
stc
xchg
pop
dec
cmp
das
mov
pop
and
test
sub
or
andb
mov
adc
fadds
gs
addb
out
in
ret
add
add
xchg
adc
inc
fisttpll
cld
lods
mov
sbb
loope
add
aas
cmp
aam
stos
mov
mov
lcall
sahf
into
jecxz
aas
mov
test
push
ja
bound
push
ds
push
loopne
fcoms
fisttpl
push
fiadds
pop
and
aas
outsb
jl
mov
xor
scas
orb
imul
int3
pop
and
mov
xchg
stc
outsb
std
adcl
ds
push
mov
and
push
mov
adc
sub
sti
add
movsl
lret
push
or
lods
lea
jne
jae
rclb
fimuls
rcll
repz
pop
mov
sbb
mov
flds
mov
cli
jl
mov
cmp
int
xchg
cmp
sahf
cmpsb
adc
aas
and
cmpsl
sub
sbb
mov
lods
fdivp
fiaddl
or
pop
add
pop
push
into
or
cmpsb
cld
int3
jae
into
inc
sub
popa
sbb
ret
add
push
sbb
pop
pop
fnsave
pop
stos
test
cli
sbbb
fcompl
sbb
pop
inc
jae
pop
ss
push
out
inc
gs
fs
mov
lods
pusha
lea
cmp
pop
jg
loop
xchg
fcomps
mov
sti
insl
mov
test
mov
sarb
jns
xchg
pop
sbb
loope
xor
mov
mov
pusha
dec
ljmp
enter
lcall
dec
icebp
dec
mov
lcall
adcb
mov
adc
dec
cmp
in
enter
adc
mov
dec
and
sub
inc
dec
and
popa
jns
inc
icebp
cmpsl
add
fiadds
mov
jno
mov
sti
lea
lods
pop
xchg
icebp
out
push
out
and
cmp
sbb
adc
ljmp
insb
cmp
icebp
cmp
xchg
adc
xchg
mov
and
ret
lea
inc
sbb
sbb
fcompl
cmp
sarb
iret
or
mov
jns
dec
xor
dec
adc
cmp
mov
aam
xchg
push
clc
fnstcw
adc
testl
test
inc
cwtl
out
call
loop
mov
popf
test
out
add
xchg
outsb
notb
mov
push
dec
mov
jns
inc
pusha
or
jb
test
push
cmpsl
mov
mov
fs
mov
scas
sbb
arpl
cmpsl
xchg
cli
test
test
ljmp
xor
out
test
mov
xor
inc
pop
xorb
mov
popa
out
mov
jbe
push
inc
and
daa
xchg
fldl
cmc
ja
nop
sbb
shll
ret
adc
sub
lds
jecxz
push
push
jbe
out
call
inc
mov
ret
xchg
testl
add
mov
sbb
pop
inc
inc
mov
xor
mov
imul
mov
lods
mov
imul
ss
pusha
adc
inc
test
pop
mov
lahf
outsb
fidivl
fisttpl
les
adc
lcall
out
addl
add
or
xchg
inc
mov
sub
movsb
or
pop
nop
push
jg
mov
mov
rorl
ss
xor
mov
jge
sti
iret
mov
mov
adc
sti
inc
je
lds
mov
leave
jge
lods
cmp
outsb
mov
adc
xchg
sarb
fsubl
sbb
sahf
daa
pop
pop
or
push
in
cltd
xchg
xchg
imul
xor
out
jnp
mov
cs
mov
mov
ljmp
scas
cmc
mov
mov
in
popa
mov
xchg
popf
mov
dec
sbb
leave
jecxz
loop
inc
inc
ljmp
sbb
movsl
aad
es
mov
jns
mov
adc
cld
les
retw
rcr
or
movsl
les
pavgb
cld
add
inc
pop
mov
fsubl
roll
or
in
add
mov
cmp
push
mov
and
dec
flds
in
mov
rcr
lods
fs
mov
pop
add
lods
nop
ljmp
out
aaa
pop
cmpsl
pop
push
mov
fistpl
pop
insb
sbb
fdivr
repz
jnp
sub
iret
add
not
sbb
jo
ficoms
outsl
cmc
jno
mov
in
mov
pop
in
bound
scas
add
repnz
test
test
sub
or
cmp
pop
push
jmp
outsl
jo
fcmovnb
and
xor
mov
xor
flds
lock
popf
lods
jo
jle
jge
stc
int3
lret
in
and
pop
out
repz
push
mov
or
add
std
and
fcomi
adc
fisttpl
ljmp
cmp
xlat
pop
add
jbe
mov
insl
rorl
sbb
jne
mov
int
dec
fisubrs
or
cmp
inc
cld
sub
cltd
faddl
adc
add
jecxz
lods
jb
ret
mov
dec
pusha
xchg
cmp
cmp
push
sub
stos
stc
stos
arpl
cltd
jl
add
repz
xlat
mov
jecxz
data16
xor
sub
gs
out
stc
ss
mov
loope
dec
xor
ret
mov
push
adc
sarb
stos
mov
hlt
ror
xchg
xchg
xchg
nop
call
mov
or
cmp
enter
mov
lret
hlt
push
adc
imul
mov
ret
dec
dec
add
in
cs
rorb
xchg
cmp
lods
imul
int
adc
or
les
sbb
sar
mov
push
push
leave
sbb
xchg
xchg
call
sbb
cld
mov
outsl
push
bound
adc
xor
clc
imul
pop
gs
jmp
fucomp
test
andb
incl
int
fwait
jno
movsl
lret
std
test
add
xchg
ret
lret
xchg
shll
test
jb
jmp
icebp
sbb
adc
test
dec
pusha
shll
es
mov
fldt
dec
out
iret
aam
mov
xchg
loope
cmpl
cmp
jbe
cs
mov
cmpsl
and
das
ss
int3
iret
fwait
sbb
mov
and
inc
aas
shlb
imulb
jg
and
fcomi
lcall
mov
in
jno
jle
ror
xchg
add
test
add
xchg
sbb
mov
in
rolb
int
add
jl
into
ljmp
or
xor
pushf
mov
icebp
dec
or
inc
mov
xor
mov
cmp
cmp
and
xchg
adc
call
dec
and
popa
and
jo
repz
xchg
add
cwtl
dec
pop
movsl
lret
stc
push
loop
sub
pop
pop
pop
xlat
scas
insl
aam
adc
mov
mov
jp
scas
inc
inc
imul
in
and
das
ret
jg
pop
outsb
jns
xor
adc
inc
add
loopne
out
cld
jb
cmp
adc
mov
xchg
xchg
fstl
jne
outsl
push
clc
adc
pop
and
add
add
jnp
movsl
div
add
dec
jg
data16
jecxz
popa
mov
repnz
mov
mov
out
sbb
ret
adc
push
stc
fwait
test
test
inc
cmpb
cmc
shll
adc
mov
andb
dec
lea
lods
sbbb
adc
xorl
out
int3
lahf
mov
xorb
push
bound
mov
inc
xchg
adc
sarb
mov
aas
popa
les
inc
inc
xchg
push
xchg
leave
in
inc
sub
incb
cmp
movsb
pop
add
cmp
xor
sbb
xchg
dec
lods
loope
sub
inc
popa
dec
sub
test
movsl
incl
in
movsb
movsb
jle
int
mov
sahf
xor
repnz
pushf
out
xchg
xor
iret
test
xchg
int3
aam
xchg
call
cmp
and
int3
dec
add
mov
push
jnp
mov
sbb
mov
in
aam
hlt
pop
pushf
addr16
xchg
roll
cmp
pop
and
stc
dec
cmp
stos
movsl
inc
test
pusha
icebp
push
xchg
std
inc
mov
add
cmp
repnz
adc
cmpsl
das
push
iret
cmp
sub
lock
cmp
neg
sub
xchg
jle
pop
aas
hlt
scas
add
cmpsb
mov
cwtl
scas
pop
jno
mov
or
in
or
sbb
pop
call
add
ljmp
jmp
add
sbb
pusha
jecxz
les
stc
push
and
mov
fs
das
out
addl
lcall
dec
add
push
div
sub
clc
cmp
pop
roll
nop
repz
mov
push
push
inc
jno
repnz
mov
sub
dec
or
ljmp
or
call
jb
xlat
dec
into
fs
xor
test
lcall
js
fs
or
cmp
jns
add
stc
mov
movl
inc
cld
xor
mov
pop
mov
scas
loopne
xorb
cld
push
enter
movsl
mov
gs
bound
rcll
andl
and
inc
ds
inc
mov
pushf
into
loopne
arpl
stc
sub
out
pop
or
jo
js
mov
mov
repnz
movsl
jle
jne
xchg
pushf
mov
lods
jbe
push
inc
or
push
mov
jmp
xchg
pop
cltd
sub
pop
mulb
nop
popw
addb
cmpb
movsb
je
ljmp
cli
sbb
jecxz
xchg
insl
cmpsl
out
lds
pop
add
xchg
repz
or
lock
cld
mov
pop
jns
cmp
sub
adc
test
cs
mov
sahf
mov
mov
out
int3
xchg
or
push
cs
push
scas
andb
dec
push
mov
es
pop
and
sbb
test
fstpt
jle
ss
xchg
add
cmp
xor
imul
leave
sub
or
push
pop
imul
ljmp
fsubrl
push
imul
mov
sahf
popl
hlt
sub
je
sub
cli
pop
hlt
mov
xor
pop
or
mov
movsb
pop
mov
arpl
sub
in
stos
js
addb
cmpsl
push
ret
je
dec
subb
pop
pop
adc
shrl
xchg
cli
ror
lret
ja
stc
add
sbb
pop
ret
mov
sbb
mov
mov
popf
shrb
jmp
xchg
test
cmc
ja
insb
push
add
sbb
cmp
pop
inc
dec
push
test
nop
sub
pop
cmp
mov
out
inc
adc
pop
jne
dec
or
negb
jmp
mov
mov
cs
fwait
in
add
out
repz
jl
rcrl
outsb
dec
xchg
xlat
mov
sbb
or
pop
dec
lods
mov
call
cmc
into
xor
ret
mov
pop
cmp
jg
dec
mov
rorl
push
js
std
int
xchg
jno
into
fwait
jle
in
addr16
add
inc
cmp
enter
daa
mov
pop
femms
and
mov
xchg
test
aam
ror
jmp
xlat
stc
lret
sarb
or
flds
cmp
ljmp
jb
xchg
out
push
cmpl
aam
std
bound
sbb
in
xchg
ret
mov
push
pop
dec
adc
adc
scas
adc
mov
adcb
mov
or
stos
xchg
addb
out
les
push
xchg
adc
pop
lcall
cld
cltd
fisubs
mov
sbb
lock
pushf
outsb
dec
ret
fiaddl
popa
or
insb
daa
das
and
xlat
cmpb
repz
into
add
nop
xchg
repnz
out
mov
and
and
cmp
push
xchg
sub
push
rep
icebp
test
cld
push
inc
popa
lods
pop
call
mov
sti
push
add
jge
inc
ss
lcall
nop
push
fistps
mov
sub
bound
mov
pop
imul
mov
sub
in
mov
push
pop
jmp
imul
push
mov
aam
adc
test
cmc
push
add
dec
in
xor
ljmp
les
insb
cmp
xor
sub
in
inc
xchg
jb
stos
test
rcrb
xor
movsb
outsl
out
dec
ror
dec
inc
xlat
cmpsb
std
das
mov
xor
bnd
or
pushf
xchg
inc
xor
or
lock
dec
incb
fcomps
sub
jecxz
mov
adc
xor
jp
loopne
push
jae
inc
xlat
xchg
shrl
enter
jmp
dec
push
pop
lods
mov
xor
cmp
lods
sbb
push
out
test
out
push
or
scas
or
add
or
push
ror
jmp
pop
out
cmp
cmp
sarb
and
fdivrs
lret
daa
push
and
and
jne
push
lods
scas
enter
ss
mov
push
or
and
sahf
inc
and
pop
aad
adcb
in
pop
sbb
addr16
mov
sub
adc
or
nop
sub
ljmp
xchg
test
ficoml
or
dec
xchg
clc
shlb
fists
fcoml
mov
fdivl
sarb
lock
stc
test
and
mov
rolb
mov
lds
mov
enter
inc
mov
clc
xor
mov
divb
push
pushf
jns
mov
pop
add
jno
jns
mov
push
sub
leave
pop
mov
mov
out
and
aas
mov
xor
dec
ret
stos
adc
sbb
sbb
outsb
inc
jno
cld
jmp
dec
add
push
insl
sbb
push
cld
into
add
jg
adc
outsb
pop
je
pop
or
xor
test
leave
pushl
pop
pop
xlat
mov
es
cs
mov
mov
jmp
xchg
mov
mov
daa
icebp
out
cmp
test
aas
xchg
pop
or
dec
sbb
vrsqrtss
imul
mov
mov
jp
push
push
sbb
sub
in
cmp
or
ret
sub
add
pop
int3
dec
cltd
scas
ret
mov
rcl
loope
inc
scas
hlt
mov
fwait
cmpsb
sbb
push
std
add
icebp
cmpsl
cld
shr
fwait
mov
lcall
mov
scas
leave
add
stos
es
xchg
fcompl
xlat
call
cwtl
lcall
lods
mov
sub
fistpl
xor
or
jmp
mov
sahf
pop
incb
scas
mov
mov
les
scas
inc
sub
mov
add
mov
and
mov
fsts
into
mov
mov
xchg
out
mov
mov
push
stos
inc
jno
cs
outsl
std
jl
cltd
inc
adc
int3
fldenv
jb
aaa
jbe
adc
test
out
cmp
sub
push
and
in
push
cmp
cmc
in
idiv
scas
adc
lahf
popa
jno
push
mov
cmc
shrl
repz
bound
dec
jns
lods
adc
pop
lods
stos
mov
mov
push
xor
icebp
xchg
or
enter
mov
stos
insb
imul
mov
cmp
pop
add
aad
fidivrl
loope
jb
aad
cmpb
mov
call
inc
mov
insb
mov
stc
inc
cltd
jb
shrl
sub
mov
aaa
cld
xor
aad
nop
scas
jo
jge
or
mov
loope
sub
fwait
xor
adc
mov
or
or
cltd
pop
mov
pop
jle
jg
rorb
stos
js
movb
popa
pop
sbb
mov
roll
cli
lcall
daa
andl
sub
imulb
pop
cli
jb
inc
mov
ficomps
fmuls
xchg
ret
mov
mov
or
icebp
mov
xchg
pop
shll
lcall
scas
push
dec
and
jmp
mov
pop
scas
insl
jle
mov
negb
cmp
outsb
push
mov
jno
sahf
cmpsl
sub
mov
rorl
dec
loopne
adc
sti
js
lds
ret
out
xchg
pusha
movsl
rclb
sub
aad
mov
push
dec
es
mov
aaa
push
aaa
insl
jl
cwtl
mov
test
ret
pop
dec
mov
mov
xlat
mov
mov
xchg
cmp
movsb
aas
shrb
mov
pop
rolb
push
mov
lret
inc
add
xor
faddl
mov
jo
xchg
test
out
xor
sbb
ja
cmp
mov
jb
push
movsl
fsubl
cmpsl
cmp
jns
mov
xor
sbb
or
sub
test
insl
sbb
pop
movsl
imul
pop
cwtl
imulb
lahf
pusha
push
sbb
push
pop
mov
mov
mov
and
mov
shlb
xor
in
xchg
in
or
rcl
xor
aad
les
mov
xor
cld
mov
add
or
cmpl
xorl
or
push
xor
inc
adcl
mov
sbb
adc
ja
test
ss
adc
cmc
movsb
dec
mov
xchg
mov
aas
xor
xchg
icebp
push
pop
mov
inc
or
movsl
cli
cmpsl
test
enter
push
jmp
aad
stos
cmp
mov
ficoml
inc
lods
mov
xchg
push
mov
xchg
adc
popa
add
lret
push
xor
sub
dec
mov
enter
out
in
push
out
xchg
rorb
sbb
shll
cmp
add
bound
outsb
lret
cld
outsl
fs
sub
pop
adc
ret
mov
jp
adcb
into
fs
das
adc
test
sbb
fdivrl
leave
sbb
mov
popf
push
mov
lods
xor
jae
ds
add
stos
sbb
cmpsl
inc
divl
xchg
jo
aad
cwtl
xor
ss
imul
dec
jne
inc
gs
xor
mov
popa
icebp
jmp
and
popa
test
jno
sub
addr16
lods
test
js
add
dec
or
leave
pop
and
test
mov
sbb
jbe
out
sub
cld
daa
or
daa
add
imul
cli
imul
mov
add
adc
cmp
jb
ret
je
add
je,pt
ja
inc
sub
std
into
jp
aam
test
divb
mov
dec
pop
lea
push
xorb
inc
movsb
and
lahf
adc
sub
es
shlb
pushf
push
iret
push
dec
push
cmpb
ret
adc
add
clc
test
inc
sub
pushf
pop
cmp
mov
mov
rcll
sub
xchg
adc
and
in
mov
pop
fxam
jno
repnz
loope
pop
jns
shlb
pop
fistps
iret
add
outsb
jne
fisttps
add
inc
aam
add
into
inc
dec
mov
cmp
jb
cmc
dec
xor
inc
cltd
sub
out
pop
inc
shlb
bound
inc
add
and
fldenv
jnp
scas
ds
das
jmp
in
sub
bound
adc
repz
mov
in
arpl
adc
clc
aad
mov
xlat
sbb
jg
push
insb
das
into
sub
ljmp
mov
sbb
dec
pop
sub
xchg
add
pop
int3
dec
cltd
std
push
addr16
cmp
sub
xor
subl
adc
iret
pop
jl
mov
icebp
imul
dec
mov
data16
aam
fucom
mov
aad
lret
pop
mov
mov
mov
imul
and
xchg
and
add
mov
cmp
inc
or
xor
movsb
dec
out
xchg
loopne
dec
push
movsl
loopw
pop
arpl
mov
lret
add
mov
leave
das
andb
jbe
aaa
es
dec
mov
test
mov
and
jbe
sub
orl
sbb
sub
test
or
add
stos
or
inc
adc
jle
dec
lret
stos
popa
xor
out
imul
or
sbb
or
mov
pop
enter
loop
inc
xchg
test
popa
dec
cmp
ret
jle
addb
cmp
rcr
sub
sbb
jg
sbb
xchg
push
mov
jb
add
fadds
ret
add
aas
es
add
scas
in
push
and
cmp
cltd
push
mov
and
jnp
push
or
lret
xorl
jg
mov
mov
icebp
in
lahf
mov
sahf
sub
cmpl
sahf
push
pop
rclb
fmul
ja
cmp
xor
sub
push
and
and
orl
imul
stc
pop
pop
shll
daa
jg
gs
jns
sbb
mov
xor
and
fwait
and
je
shrl
adc
mov
push
andl
insb
pop
add
test
mov
leave
mov
inc
lret
clc
das
push
add
stos
mov
lahf
shrb
pop
pop
out
mov
clc
sub
or
add
dec
xchg
test
test
iret
add
stos
pop
add
xchg
enter
btr
jne
jne
xor
aad
add
push
mov
push
cmp
repz
call
ror
ret
out
outsb
mov
rclb
ljmp
sbbl
sub
int
arpl
lret
inc
ficomps
mov
sbb
ja
mov
jne
loopne
pop
sub
push
xchg
mov
jae
pop
repnz
and
mov
push
cmp
lock
mov
rorl
pop
imul
cmp
in
push
fldl2e
loope
popf
orl
call
fcom
fwait
adc
push
mov
inc
fdivrl
lock
repz
pop
stos
xor
das
popf
cmp
idivl
add
nop
cmp
cmpsb
pop
aad
in
and
inc
sub
movsb
les
mov
es
inc
int3
fwait
mov
aas
arpl
clc
ret
es
jo
mov
jb
cmpsb
push
movsb
imul
mov
dec
sbb
add
inc
fidivs
into
add
mov
mov
subl
mov
mov
ss
pop
nop
inc
add
scas
arpl
inc
adc
mov
pop
sbb
fstpl
sbb
pop
sbbb
cmpsb
sahf
iret
adc
sarb
jb
rcr
jno
ss
inc
mov
lods
mov
push
call
out
fistps
fnstsw
inc
xchg
shlb
adc
scas
xchg
mov
incb
mov
xor
xchg
and
cmpsb
adc
addr16
leave
outsb
sub
shll
sbb
adc
insb
push
out
mov
loope
inc
push
or
in
mov
and
jle
xchg
jnp
movsb
sub
adc
add
add
xchg
je
shll
mov
insl
pusha
shrl
jo
and
mov
jle
mov
stc
lock
xchg
add
sub
je
pusha
call
push
pop
cli
push
ret
inc
in
mov
push
mov
lods
lcall
int3
jns
pop
mov
xchg
mov
fists
inc
cmp
mov
rcrb
dec
inc
add
dec
mov
adcb
scas
hlt
ljmp
lcall
ljmp
add
repz
out
lods
mov
stos
sub
jge
popa
cmp
arpl
and
push
into
addl
out
jecxz
and
mov
pop
sbb
add
mov
fisubrl
mov
testb
or
inc
xlat
adc
imul
dec
push
cltd
stos
out
mov
or
dec
or
test
add
cltd
push
stos
xchg
mov
add
imul
sub
sbb
ljmp
or
lcall
mov
enter
cwtl
rclb
js
shlb
push
sbb
outsb
mov
lds
test
loop
popa
xchg
in
dec
mov
xchg
xor
cld
mov
mov
mov
rclb
in
dec
addl
call
dec
in
mov
shlb
js
adc
in
jb
stc
test
rcrl
icebp
sbb
mov
inc
and
jmp
jns
stos
out
mov
lahf
pop
out
lret
repnz
inc
xchg
xchg
repz
fsubrl
sub
sub
jns
int
push
cmp
scas
cmpsl
xor
push
pop
and
mov
jb
dec
filds
imul
shlb
aad
popf
sbb
jecxz
scas
scas
xor
push
mov
jne
xchg
inc
dec
cld
out
mov
mov
xor
sbb
push
mov
add
inc
inc
xor
xor
mov
add
mov
sub
decb
mov
test
mov
and
xchg
test
pop
enter
adc
jbe
cs
adc
clc
and
in
add
and
ret
jle
bound
jge
xchg
test
cld
out
cmp
clc
jae
cmc
das
test
adcl
or
jae
inc
inc
and
mov
pop
and
cmp
push
das
stos
in
es
fimull
xchg
pop
cwtl
mov
mov
test
sub
or
in
jecxz
mov
xchg
xor
pushf
mov
test
pop
sbbb
imul
mov
xor
cs
add
adc
mov
stos
repz
cmp
and
popa
popa
popf
inc
in
insb
stc
jo
ljmp
ret
orb
ret
popa
and
pop
das
fimull
inc
mov
fwait
std
mov
inc
int
pusha
movsl
add
cmpsl
push
xor
ss
loope
leave
iret
xchg
xchg
test
xchg
mov
jnp
shr
sbb
sub
mov
sbb
stos
out
mov
inc
push
loopne
sbb
mov
nop
mov
mov
jo
mov
dec
test
dec
push
inc
pop
out
inc
mov
cmp
and
dec
je
push
xchg
movsb
roll
jg
or
mov
lret
add
mov
jns
stos
clc
movsl
jmp
dec
fs
xchg
add
mov
cmpsb
mov
loopne
and
sub
or
js
cli
loop
xor
dec
and
push
filds
popa
sub
dec
ret
pop
mov
push
push
dec
pop
test
fcoml
popa
xchg
mov
outsl
insl
cmpsl
lods
ljmp
sub
je
mov
lds
pop
out
shll
inc
pop
xor
jle
icebp
cs
jnp
test
int
loopne
sbb
sbb
jg
fisubrs
lds
pop
nop
adc
out
push
sub
lret
out
fsubrl
dec
jle
push
xchg
mov
mov
clc
mov
add
jmp
push
pop
xlat
mov
fiadds
dec
pop
xchg
fnstsw
test
std
dec
lret
add
xchg
loope
lret
cmpsb
mov
pop
decl
in
mov
cmp
jmp
fldcw
pop
in
pop
rorb
jmp
mov
jle
jbe
lock
inc
mov
shrl
lods
imul
nop
sbb
sub
pushf
pushf
loop
and
stos
push
jg
push
in
and
push
jp
sub
sahf
xlat
push
cmp
mov
shrl
insl
adc
jmp
or
push
insb
xchg
cmc
xchg
stc
sub
loope
sbb
js
push
mov
jp
out
loop
nop
xchg
mov
mov
es
stc
aaa
mov
out
pop
lea
mov
pop
in
mov
mov
push
mov
jb
and
outsl
cmp
adc
mov
push
mov
jmp
mov
adc
add
adc
sub
imul
xor
jmp
mov
pushf
cli
das
mov
shll
sub
xchg
int3
jbe
mov
gs
mov
ret
adcl
mov
xchg
push
dec
push
nop
ds
sbb
xchg
mov
xor
fcoml
xor
cmpsb
adc
imul
sub
xchg
pop
xchg
mov
add
xchg
lahf
add
jnp
xchg
adc
and
adc
shrl
lret
jge
dec
scas
xchg
sti
dec
push
popf
and
fwait
call
jno
addl
cli
add
push
push
mov
aas
sub
push
in
aad
and
stos
js
sub
fdivs
arpl
push
add
add
arpl
outsl
sub
lods
mov
dec
aas
jg
iret
pop
sahf
pop
add
jle
mov
fdivrp
pop
out
cmp
and
jle
dec
lahf
lea
cmpsl
rorl
movb
adc
and
cmp
push
add
add
sbb
out
ss
or
data16
outsl
or
jge
loope
jmp
pop
and
cmpsl
test
cwtl
xchg
xchg
roll
div
inc
shll
aad
gs
adc
sbb
sub
push
adc
fwait
dec
or
jne
push
add
push
sti
lret
iret
push
fucomp
cmp
lds
or
loop
or
cltd
leave
pusha
mov
sub
sahf
add
mulb
cmp
cwtl
fsubrl
pusha
pop
or
jp
sub
push
rorb
add
lock
sub
push
sub
std
movl
dec
decl
sub
or
aad
insl
loop
stos
or
adc
push
mov
das
adc
pusha
inc
shrl
fimull
ret
and
jecxz
or
bound
mov
ja
loope
jo
mov
je
in
add
outsb
cmp
cli
test
sbb
jb
lcall
insb
pop
js
pop
imul
aam
dec
call
or
sti
pcmpgtw
sub
mov
clc
cli
adc
mov
shrb
or
arpl
das
push
dec
sub
or
lcall
xchg
cwtl
pop
sahf
pop
inc
fbld
jp
sarl
popa
ja
stos
insb
mov
mov
int3
int
add
sub
mov
mov
dec
insl
cwtl
inc
sbb
add
aaa
popf
and
fisubl
pushl
adc
mov
aad
jecxz
mov
dec
mov
mov
jo
jmp
adc
dec
add
sbb
or
out
jmp
dec
inc
or
mov
push
popf
fnsave
inc
ds
jne
in
sbb
jns
jbe
popa
xchg
rol
fnsave
mov
fs
mov
insl
ficoms
mov
loop
shrb
mov
and
or
rclb
shlb
push
std
mov
mov
dec
loopne
jbe
and
in
xchg
push
xor
or
popa
and
mov
aas
nop
add
push
out
pushf
inc
xchg
movsb
and
adc
insl
cmp
aad
in
sbb
jg
or
aas
ja
jl
repz
je
dec
dec
cmp
fs
pop
cmp
scas
add
cmp
mov
xchg
push
dec
jl
in
cld
xchg
push
xchg
dec
pop
and
jp
fsubr
add
cld
adc
mov
stos
xchg
lds
xorb
push
xchg
hlt
daa
mov
jle
jecxz
mov
fadds
stos
icebp
sub
cld
mov
pusha
les
pop
xchg
ja
cwtl
sub
repz
rorl
xor
jae
je
push
loope
pusha
outsb
pop
jb
flds
mov
cmp
mov
push
sub
mov
iret
jb
push
sub
rcll
ficoms
mov
mov
ss
fnstenv
push
ljmp
lret
dec
test
fsubrl
mov
sbb
flds
dec
lock
push
lods
jae
xchg
loope
dec
mov
test
shrb
bound
lock
sbb
xor
pusha
enter
lahf
outsb
sbb
shrl
sbbl
sub
shl
mov
sarb
clc
mov
sub
pop
cld
lcall
add
jp
add
cltd
sahf
mov
fsubrl
dec
test
mov
mov
cld
lcall
cmp
lods
jns
cmp
inc
pop
stc
daa
xlat
or
push
cmp
add
jle
loop
aad
push
ja
cwtl
repnz
and
inc
test
cmp
mov
mov
mov
pop
mov
lahf
adc
xchg
mov
fdivrs
fisttps
dec
sti
sahf
movsl
jne
xor
mov
pushf
ss
or
clc
sbb
cmc
aas
adcb
dec
push
cmp
xchg
xor
push
jecxz
sbb
jns
jb
adc
shll
push
lret
mov
sbb
out
adc
jae
sbb
popf
and
notl
or
xchg
cmp
fbld
push
mov
orb
test
cmp
dec
inc
mov
sbb
push
fiaddl
push
xor
sbb
std
mov
push
pushf
stos
out
mul
aad
out
sub
push
cmpsb
pop
xchg
xchg
shr
xchg
xchg
cmp
filds
shrb
ret
and
jnp
sbb
mov
mov
pop
add
mov
int
or
pusha
insb
xor
std
shl
mov
add
mov
xor
mov
das
or
mov
jecxz
in
mov
mov
cltd
ds
push
fimuls
rolb
inc
cmp
mov
jg
mov
and
test
adc
arpl
stc
ret
movsb
pop
imul
dec
and
push
sahf
cmp
inc
sbb
cmp
or
fdivl
jns
jg
cli
dec
test
pusha
xor
js
inc
fxch
std
mov
lds
lcall
jmp
xchg
aas
sbb
cmc
dec
popf
pop
push
pop
sub
enter
mov
dec
out
sub
lds
or
xorb
inc
inc
xchg
jmp
fwait
sub
sarl
and
mov
test
pop
jp
cmp
xor
clc
in
cmp
cmp
xor
fsubrl
pop
push
into
lods
jne
push
sub
imul
cmpsl
sbb
dec
pop
sbb
jno
jge
jg
dec
add
int
sub
ljmp
sub
dec
les
ljmp
stc
jns
pop
jg
jle
mov
outsl
insl
dec
aam
fdivr
lds
add
int
cld
sbb
out
jne
loope
xchg
cmp
dec
fs
mov
jp
pop
xorl
push
ret
cmp
aam
lea
mov
subb
loop
daa
je
dec
adc
js
movsl
and
xor
faddl
dec
gs
sub
nop
xlat
xor
daa
pop
dec
sub
jae
adc
cmp
in
rclb
xchg
sub
mov
xor
xchg
loope
pop
and
push
out
push
loopne
jecxz
ss
stc
in
add
imul
lds
stos
mov
incb
or
inc
sub
mov
scas
call
sbb
lahf
into
test
mov
rcrl
test
into
testl
enter
das
sahf
sub
scas
cli
push
jnp
adc
cmp
in
xchg
rcl
pop
pop
sub
pushf
and
xchg
xor
pushf
push
shlb
mov
jp
mov
pushf
fsts
test
out
aaa
and
fwait
pushf
inc
outsl
call
lods
cmp
call
sbb
repz
adc
cmpsl
dec
sub
mov
and
jo
les
pop
movsb
ja
ffree
sub
xlat
inc
adc
sahf
mov
dec
push
push
movsl
movsl
lret
ror
sti
push
mov
das
push
sub
cmc
lahf
rorb
divl
jge
cmp
dec
push
xchg
data16
cwtl
pop
in
in
xor
loope
imul
jb
push
fiadds
adc
int3
mov
lahf
mov
std
push
cwtl
mov
push
cmp
dec
daa
xchg
sub
rcrb
jmp
xor
xorl
jmp
outsl
xchg
int3
fmuls
aaa
or
and
movsb
xlat
cld
daa
fwait
pop
pusha
stos
jb
xor
rcr
xlat
icebp
mov
mov
pop
inc
dec
sbb
iret
call
push
mov
enter
inc
cld
dec
or
mov
lret
fisubrl
xor
ret
cmpsl
xchg
mov
shl
xor
inc
out
add
int
push
outsl
mov
shl
sbb
out
cmp
mov
xor
test
cmp
mov
daa
jo
test
jg
ret
mov
push
inc
inc
rolb
lea
in
lods
and
xor
fisubs
dec
daa
fcomps
push
outsl
call
data16
mov
mov
fwait
inc
mov
aaa
pop
inc
scas
enter
jmp
inc
mov
or
fistpll
and
or
popa
mov
push
leave
inc
xor
adc
dec
sbb
out
and
mov
sti
dec
sbb
add
aam
and
mov
mov
cs
sub
jnp
popf
jbe
push
addr16
mov
out
stos
jbe
dec
loop
sbb
mov
mov
mov
fmul
push
test
gs
fcmovb
sub
mov
inc
mov
sti
pop
outsb
xchg
lea
shlb
pop
xchg
xor
xchg
movsl
dec
ljmp
mov
sar
sahf
int3
adc
pusha
xchg
jo
xchg
insb
xor
mov
jmp
mov
lret
ja
cs
into
das
add
pop
push
pop
mov
es
in
jo
xchg
sub
push
inc
enter
cltd
cmp
jo
imul
adc
jbe
adc
sub
inc
adc
insl
push
mov
push
xchg
cmp
enter
sbb
mov
or
lea
mulb
and
mov
push
mov
add
pop
xchg
adc
shrb
data16
sbb
sub
arpl
mov
mov
pop
enter
or
loopne
test
stos
mov
pop
mov
daa
dec
sti
out
sub
xchg
inc
jae
cmpsl
popa
xchg
lret
sbb
jo
adc
sub
sbb
insl
test
adc
shrb
jge
mov
xchg
cmp
mov
in
or
daa
lret
dec
adc
popa
fcos
lret
repz
push
scas
shrl
mov
mov
inc
div
cwtl
xchg
je
leave
adc
pop
clc
cmpsl
sbbl
inc
dec
inc
mov
or
leave
push
and
pop
add
outsb
xor
add
xchg
inc
sbb
das
adc
push
repnz
loopne
sbb
cmp
lods
jmp
pop
sub
lods
adc
push
inc
popf
jns
sbb
frstor
push
sbb
enter
cmp
dec
mov
push
cmp
push
mov
andb
adc
lahf
ds
inc
outsb
testb
fcmovne
mov
inc
lock
mov
and
push
jecxz
push
push
sti
fnstsw
sbb
or
mov
or
test
sarb
movsl
pusha
cltd
sub
bound
arpl
in
stos
cmp
mov
jecxz
or
ss
and
add
sbb
xor
add
jecxz
inc
sub
movsl
in
add
jb
idivb
and
stc
sub
and
xchg
jbe
imul
arpl
test
cwtl
test
fldenv
aad
cwtl
cs
xlat
pop
lods
push
popa
xchg
or
cmp
inc
sub
dec
insb
in
cmp
dec
imul
jnp
push
test
and
adc
mov
sbb
lcall
pop
mov
mov
loope
adc
mov
fisubl
ds
xchg
jno
cld
xchg
mov
loope
popa
int
fcmovne
cwtl
lret
incb
int3
push
call
stos
aas
xchg
out
nop
mov
mov
hlt
insb
rorb
loope
ret
mov
rclb
cmp
fucomip
or
sarb
aaa
mov
cmp
enter
mov
pop
fimuls
or
movsb
cmpsb
mov
inc
xchg
dec
sbb
jp
enter
incl
mov
mov
sub
cli
mov
adc
xor
adc
lret
xor
pop
add
push
lahf
pop
push
adc
fmuls
or
dec
rcll
pop
push
inc
repz
lock
test
sub
adc
inc
mov
or
mov
leave
rcll
clc
mov
and
cld
cmp
ds
icebp
adc
pushf
es
pusha
outsl
sub
jp
adc
ja
loopne
cmpsb
icebp
push
xorl
push
and
or
mov
mov
or
loop
shlb
mov
mov
cmp
xor
sbb
jl
xchg
adc
xchg
cmpsl
fwait
push
inc
test
mov
adc
rcll
stos
mov
cmc
adc
or
pop
das
bound
mov
movsb
insb
mov
mov
je
rcrb
add
rcl
cmp
push
cmpsl
inc
ret
dec
pushf
addl
and
cmpsl
popa
icebp
push
mov
mov
in
xchg
inc
into
xchg
iret
insl
dec
icebp
xor
jmp
dec
adc
xor
sbb
xchg
ret
imul
stc
pop
dec
testl
sub
out
add
xor
pop
dec
xlat
jle
adc
inc
mov
outsl
rcrb
loope
pop
pop
rcll
scas
ficompl
insb
or
mov
xor
pusha
push
push
xor
inc
fisubrs
out
aad
xorl
mov
push
inc
pop
imul
xchg
inc
xchg
cwtl
mov
enter
aad
div
xorl
popf
insl
addr16
outsl
xor
pop
and
xor
mov
sub
or
adc
popf
fdivs
sub
aam
inc
testb
lds
test
test
mov
or
sbb
fs
hlt
out
or
cmpsb
aam
lock
dec
push
les
fidivs
aad
subb
mov
sbb
mov
xor
sbb
pop
divl
add
fistpll
outsb
orb
adc
mov
ds
sbb
mov
out
cmpsb
daa
lods
fistpl
out
test
pop
ja
mov
push
mov
push
cmp
loope
out
data16
mov
dec
inc
in
popfw
push
or
outsl
ja
xchg
rcrb
mov
or
out
out
xlat
cmp
shrb
push
pop
outsl
inc
mov
add
adc
out
pushf
pop
int
xchg
in
add
jle
repnz
mov
int
xor
xor
fidivrs
je
sub
push
in
repnz
inc
xchg
pop
cmp
push
loope
dec
pop
fimuls
in
inc
cwtl
xchg
int
add
fldl
inc
clc
aas
dec
sbb
out
mov
mov
cmc
mov
sub
jl
adc
fsts
notl
mov
xlat
add
popf
ljmp
sbb
push
std
add
nop
aaa
inc
jns
je
repnz
mov
clc
test
ficoml
shll
cmpsb
sbb
mov
stc
mov
loopne
out
into
add
or
psubq
add
jecxz
je
shlb
rolb
decb
test
mov
int3
sbb
xchg
or
out
dec
mov
mov
arpl
inc
xchg
and
scas
aaa
mov
in
jg
test
aaa
shll
fstp
je
inc
cmp
mov
xchg
cmc
mov
mull
fmuls
add
pop
cwtl
pop
addr16
leave
movsl
cmpb
sbb
aaa
je
push
sub
mov
and
scas
sub
push
pop
daa
or
ret
in
jne
arpl
cmp
loop
sbb
call
js
sahf
or
out
cwtl
js
cs
inc
outsl
push
call
mov
mov
mov
mov
cmp
aam
mov
in
mov
mov
mov
mov
push
js
ret
push
stos
or
arpl
stc
fs
push
push
data16
and
addr16
cmp
nop
pop
xchg
mov
out
push
xchg
xchg
inc
movsb
fucompp
pop
jne
add
inc
mov
mov
mov
int
mov
in
xchg
push
push
xchg
insb
xlat
gs
mov
xor
push
fisubrl
pop
xor
insb
xlat
out
cmp
daa
mov
add
sbb
cmp
add
cmp
les
mov
mov
xor
xchg
pop
inc
lds
jp
ljmp
sub
sbb
negl
imul
fildl
inc
rcrl
out
test
sub
test
movsb
shl
lret
jb
jl
or
cmp
xchg
leave
std
aam
test
push
fsubs
mov
inc
or
mov
xchg
xchg
enter
mov
mov
movsb
or
jmp
nop
int3
sub
sub
push
and
ja
mov
cmpsl
stc
xchg
cmpsb
pop
iret
xchg
int3
mov
scas
inc
push
cltd
xor
int3
lret
xlat
repz
xchg
cmp
loopne
cmp
pop
lahf
mov
scas
sbb
outsl
pop
fldl2t
cld
iret
aad
dec
jl
mov
movsl
jl
xchg
daa
xor
test
inc
dec
push
push
jg
ror
and
mov
faddl
fs
movsl
mov
je
add
inc
pop
adc
or
mov
shlb
sahf
rcrb
and
ja
fsts
sbb
shll
mov
shlb
jbe
lcall
xor
leave
cld
mov
testb
push
test
or
and
inc
cmp
mov
pop
xchg
jge
test
lret
cmpsl
xchg
xchg
cli
mov
xchg
das
in
add
mov
xchg
xor
push
hlt
call
fsubs
movsl
loopne
js
sbb
xorl
imul
addr16
jbe
mov
jne
sub
mov
mov
fldcw
test
sahf
cmp
push
movsb
push
in
xor
mov
shl
out
jle
ficoml
mov
jecxz
mov
in
jle
pop
bsr
xor
adc
pop
fistpl
lea
ja,pt
and
rclb
push
leave
rorl
sub
or
pusha
daa
jbe
push
mov
pop
jne
into
popl
sar
stos
mov
ret
lea
arpl
aam
ja
js
ljmp
mov
les
mov
or
inc
xor
cli
inc
mov
xchg
adc
mov
out
pop
mov
push
jae
imul
outsl
gs
inc
push
xchg
pop
jmp
adc
in
decb
in
sbb
xor
int
in
inc
adc
mov
mov
outsb
lods
aaa
inc
pop
cmp
int3
subb
pushl
sahf
xor
pop
mov
or
xchg
add
scas
test
or
adc
push
fsts
adc
pop
cs
sbb
les
cmpsb
mov
nop
aaa
fwait
jg
xchg
or
or
adc
mov
jb
mov
xchg
push
jnp
sub
out
aas
cmpsb
mov
mov
sbb
negb
lret
xor
pop
sbb
mov
sbb
fcomps
mov
adc
push
loope
out
scas
and
pop
and
outsb
jo
mov
adc
stos
jnp
fs
jecxz
jle
jl
sbb
jnp
xor
lea
mov
adcb
jmp
push
fwait
cmp
add
lds
fildl
les
dec
jbe
jns
sbb
adc
or
ljmp
aaa
inc
pop
mov
jle
es
jp
cmc
and
insl
add
mov
jmp
ret
fistpll
dec
nop
push
jnp
mov
inc
hlt
lods
jae
push
sbb
fs
mov
pop
mov
sbbb
add
inc
inc
pushf
insl
std
pop
clc
inc
idivl
mov
aaa
sub
ljmp
mov
jge
fwait
das
arpl
cwtl
repnz
push
popa
mov
dec
aaa
insb
enter
jp
mov
inc
jp
popf
sub
pop
repnz
pop
pop
clc
repnz
cmp
mov
in
xchg
pop
das
or
mov
stos
dec
pop
rorb
mov
dec
jb
mov
fwait
mov
jo
repnz
ja
and
call
pop
adc
cs
and
fidivl
jae
push
ljmp
je
sahf
and
sbb
scas
sub
icebp
fisubrl
adc
cli
cmp
mov
fs
mov
jno
into
ds
xchg
mulb
cs
in
push
dec
sbb
cmp
mov
test
cwtl
cs
fisubs
sbb
mov
mov
dec
or
and
leave
jnp
das
scas
in
jns
lret
inc
and
imul
inc
rol
shll
dec
sbb
dec
btr
addr16
inc
stos
cli
ss
sbb
outsb
out
inc
jmp
cmp
or
add
ficomps
or
cmp
fiaddl
mov
in
pop
or
pop
add
xchg
stos
sbb
add
kxnorw
addr16
lods
aas
xchg
dec
std
push
out
sti
shll
and
out
pop
or
movhps
in
or
add
cmp
add
push
mov
imull
push
bound
sub
sub
ret
scas
pop
addps
cli
jg
ret
cld
popl
mov
mov
push
dec
dec
pop
push
sar
loop
ljmp
ficomps
jecxz
inc
jae
mov
xor
mov
in
lds
scas
mov
or
scas
add
pop
pusha
decl
and
sbb
iret
out
insl
lahf
test
pop
add
mov
imul
scas
fadds
orl
inc
into
mov
cmp
xor
add
lret
add
imul
cmp
xchg
push
rcll
loopne
jo
rcrb
jge
gs
cmp
pop
sub
fisubrl
cmpsb
cli
shr
add
sub
cli
or
push
dec
mov
bound
adc
pop
scas
mov
scas
xor
out
dec
mov
mov
repz
cmp
and
add
insl
push
cs
fldenv
std
aas
das
jbe
sub
inc
jmp
pop
cmp
pop
mul
mov
outsb
out
loopne
addl
and
jle
gs
pop
je
lds
ret
stos
push
arpl
ficoms
xor
lcall
and
repnz
jge
add
mov
daa
adcb
lea
mov
cwtl
rorb
fwait
mov
popa
push
scas
lea
insl
pop
or
sub
ljmp
mov
cmp
test
fwait
pop
stos
pop
lret
adc
xchg
xor
es
repnz
xchg
and
pop
arpl
hlt
pop
mov
ds
ljmp
lds
mov
lea
sbb
mov
xor
push
xchg
jl
fs
dec
fisttps
roll
push
xchg
popa
push
in
mov
jae
addb
jo
rcl
outsb
xchg
test
pop
pop
pop
into
cmc
hlt
shl
and
jno
xchg
inc
clc
or
push
inc
popa
rcll
lds
jns
js
lcall
cmpsl
and
jp
pushf
lahf
dec
and
aad
out
or
inc
lds
aaa
adc
std
fisttps
push
aas
shrl
mov
std
pop
xlat
mov
xor
mov
cwtl
and
mov
xlat
push
jecxz
mov
xor
test
adc
rol
inc
xchg
mov
and
outsl
sub
pop
jmp
push
jmp
dec
or
arpl
int3
mov
inc
mov
mov
sbb
dec
aas
mov
dec
pusha
mov
mov
out
in
mov
sbb
dec
popf
mov
out
jmp
sbb
outsl
inc
mov
cli
mov
addr16
lret
mov
jmp
lods
mov
call
cmp
inc
arpl
add
sbb
mov
imul
mov
hlt
and
icebp
hlt
pop
es
push
int
xchg
inc
call
pop
push
xchg
sbb
push
bound
or
lock
loopne
dec
je
imul
mov
xor
fisttpl
mov
aaa
or
fsubr
push
pop
fstps
pop
sbbb
xlat
xchg
adc
fldenv
add
push
adc
into
test
jmp
adc
stos
mov
shll
pop
push
sub
xor
jbe
adc
into
mov
xchg
mov
jbe
pusha
dec
cmpsl
in
sub
or
inc
mov
sbb
dec
mov
lock
les
cmp
mov
stos
push
cwtl
mov
out
adc
hlt
gs
pop
push
mov
fbld
push
pop
loop
mov
jp
fld
scas
andl
cs
test
jecxz
jne
mov
mov
push
xchg
ljmp
mov
adc
mov
fs
js
xchg
std
mov
lret
cmpsl
cwtl
adc
adc
pop
mov
mov
aad
into
rcr
gs
sub
mov
out
bound
insl
mov
pop
arpl
jl
xor
push
enter
or
shlb
push
cmpb
xchg
popf
sub
xor
lret
push
stc
push
pop
or
loopne
insb
and
jne
add
mov
jmp
mov
push
dec
add
out
mov
test
js
int
push
push
xchg
sbb
cld
cltd
pushf
neg
jecxz
mov
jmp
in
cmpsb
insb
adc
push
addr16
sbb
push
sbb
test
or
mov
and
xor
mov
xchg
push
cmp
jnp
in
in
xor
xchg
jmp
push
sub
xor
xchg
xchg
jo
jg
lods
fildll
xchg
movsl
jecxz
cmpsl
shl
adc
js
jo
fwait
sti
arpl
jb
fdivrs
pop
push
and
enter
nop
push
inc
inc
pop
pop
fiadds
ret
ja
or
pop
mov
pop
loopne
inc
movsl
daa
and
aas
jne
test
xlat
ret
lods
xchg
sbb
popa
test
xchg
mov
and
aam
je
scas
push
jne
daa
jmp
in
pop
icebp
mov
cwtl
cmp
push
jb
icebp
rorb
iret
stos
adc
fucomp
xchg
pusha
xorl
add
dec
call
repz
loopne
loope
cwtl
rclb
shl
add
out
mov
int
sti
or
adc
fadds
aad
syscall
imul
movsl
adc
sbb
xor
loop
sub
stos
xor
fs
pop
mov
in
andl
dec
inc
aas
inc
jae
into
xchg
lret
jae
add
lahf
cltd
data16
dec
mov
mov
lret
mov
cmp
fwait
clc
fs
mov
shrb
ret
loop
dec
adcb
ret
scas
mov
mov
mov
outsb
dec
inc
dec
jno
dec
lea
mov
mov
dec
addr16
xor
aad
popa
inc
mov
insl
inc
pop
push
insl
xchg
sub
jle
adc
dec
fldt
mov
notl
adc
mov
test
out
cmpsl
js
or
and
fimull
and
aaa
ljmp
pop
sbb
lods
cmp
cwtl
test
cmp
pop
dec
outsb
or
stc
daa
arpl
cwtl
outsl
push
and
insl
jne
xchg
mov
cltd
movlps
sbb
inc
push
fldl
mov
lock
inc
in
jmp
xchg
or
sbb
je
sti
jne
mov
insl
mov
mov
xor
and
mov
xor
sub
negl
mov
push
insl
incl
and
fisubl
shll
pop
sbb
cmc
pop
sub
stos
mov
rclb
imul
jae
test
jnp
or
dec
andl
ror
loop
dec
mov
jae
mov
call
and
movsb
sti
mov
bnd
leave
push
loopne
xchg
mov
cmp
fs
outsb
sti
daa
lret
lock
call
iret
xchg
out
lret
mov
fcmove
mov
push
les
jge
cmp
jl
dec
jbe
lods
aad
inc
clc
sbb
dec
fwait
enter
push
cmp
vpxor
add
notl
jno
mov
ljmp
lea
bnd
fildll
ficoms
dec
sahf
seta
bswap
rcr
xor
push
aam
pop
add
pop
js
ret
nop
in
out
popa
sbb
sub
stos
jnp
call
xchg
add
mov
or
lret
xchg
addr16
sbb
inc
inc
push
cmc
out
in
sub
into
and
adc
mov
pop
mov
frstor
out
aas
push
xor
clc
fdivrs
fsubrl
popa
mov
pop
sub
push
jo
sub
hlt
loope
dec
lds
rolb
lret
and
fcmovnb
js
rolb
mov
dec
iret
and
sbb
test
leave
adc
loope
add
inc
jbe
stc
rcr
push
cmp
ja
sbb
int
jp
sub
jbe
sbb
pop
aad
mov
or
or
idivb
adc
mov
stos
or
imul
sbb
fldt
ret
inc
pop
fidivrl
or
mov
ljmp
cli
insl
xchg
mov
xor
and
arpl
outsl
sub
jmp
or
notb
cli
xor
inc
pop
mov
sbb
jne
insb
pop
cmp
push
ficoml
pop
insb
std
cld
push
outsl
dec
dec
inc
test
dec
cmp
fsubs
addl
mov
mov
nop
jp
add
mov
add
pop
xor
das
dec
cwtl
arpl
les
or
cltd
pop
test
mov
inc
outsb
cmp
out
repz
push
xor
xchg
daa
addr16
or
sbb
mov
adc
dec
lods
adc
add
push
jg
jnp
pop
rcrl
mov
add
loopne
cmp
jnp
cmp
sub
andl
sub
mov
fcmovu
adc
inc
jno
mov
out
jge
or
enter
sub
add
sbb
mov
cmp
jmp
cmp
add
outsb
adc
test
das
cltd
jl
pop
lods
imul
jae
mov
repnz
lahf
loopne
pushf
sbb
mov
jbe
dec
pop
add
xchg
mov
cli
push
int3
rcr
fdivl
xor
xchg
fnstcw
aas
fidivs
es
add
faddl
mov
jnp
push
pop
adc
pop
xchg
cmp
or
add
xor
xchg
pop
and
test
push
dec
rolb
fisttps
nop
movsl
jbe
and
mov
in
inc
mov
sbb
pop
inc
xchg
andb
ds
adc
xor
push
xchg
notb
cmp
inc
mov
push
adc
mov
and
imul
xor
pop
mov
jp
jne
ljmp
dec
mov
cvtps2pi
es
lods
or
mov
jo
xor
mov
push
ds
ret
hlt
je
dec
decl
adc
in
sbb
pop
pop
int
cltd
jae
or
loopne
xchg
mov
imul
test
and
lret
jb
jmp
sar
popf
inc
outsl
push
sbb
fists
loope
insl
cs
dec
pop
ljmp
jecxz
loopne
xchg
mov
fstl
adc
xor
ret
and
cmp
mov
loopne
sub
loop
add
outsl
and
ret
mov
std
lcall
mov
daa
cmp
addr16
lret
stos
inc
shlb
mov
add
and
fcomip
addl
add
adc
shrb
sbb
sbb
lea
xor
dec
push
inc
sub
xlat
mov
sbb
jge
or
stos
xchg
cmp
test
xor
xchg
xchg
sbb
cmp
jp
mov
xor
jne
sbb
inc
mov
mov
outsl
xlat
imul
aaa
fwait
push
popf
push
sbb
cli
or
fiadds
xchg
test
jecxz
cld
je
loopne
sbb
add
mov
popa
lahf
std
adc
xchg
repz
xor
mov
jmp
out
add
inc
adc
and
adc
jns
xchg
add
jp
push
push
jmp
push
pop
xlat
ret
pop
push
into
mov
mov
aaa
rcll
mov
add
lcall
rcll
xchg
outsb
xchg
lahf
rorl
pop
fidivrs
mov
stc
add
lret
cmp
andb
push
bound
lahf
inc
mov
aad
xchg
push
push
inc
xor
fsts
xor
loop
xor
insb
scas
jmp
cli
xor
rorl
and
mov
dec
aaa
into
nop
popf
addr16
and
add
inc
stos
bound
dec
lret
cmp
fmulp
out
clc
popf
or
cwtl
add
daa
mov
or
and
lcall
in
and
loope
fadds
imul
idiv
mov
les
xor
push
xor
loope
xchg
xchg
sbb
faddp
cmc
repz
jo
notrack
in
das
repnz
aam
ret
add
and
cmp
clc
out
jecxz
xlat
mov
cmp
loopne
or
jge
sbb
fnstenv
and
xlat
sbb
mov
mov
test
and
mov
into
and
repnz
in
cmpsl
lahf
lea
test
mov
arpl
int3
pop
rol
push
out
add
push
out
xchg
in
out
scas
hlt
push
and
inc
or
bound
rcl
pop
pop
jle
cli
or
insl
mov
mov
mov
jmp
mov
dec
pop
sub
insl
xchg
pop
ret
pop
scas
faddl
outsb
cmp
aaa
mov
mov
sbb
in
nop
mov
sub
test
jle
int3
and
push
mov
sbb
push
xor
fld
mov
jne
ret
fidivl
mov
mov
pop
repnz
mov
movsl
imul
jne
mov
adc
fs
loopne
push
cmp
sar
sub
push
aaa
or
loop
das
dec
or
xor
daa
scas
das
rcr
in
lds
cmp
das
adc
cli
mov
andb
jns
popa
leave
jae
mov
negl
lods
imul
dec
mov
fiadds
add
xor
in
fmull
ljmp
or
sahf
rorb
jno
mov
push
nop
call
jmp
inc
lea
and
aad
cmp
sahf
repz
mov
lcall
not
xchg
sbb
arpl
in
mov
add
hlt
and
pop
mov
sub
xchg
xor
enter
mov
mov
mov
xchg
add
jmp
cmp
imul
aaa
mov
cli
pop
pusha
push
sub
cmp
in
mov
push
scas
out
and
adc
mov
movb
lea
add
mov
js
inc
mov
sub
pop
mov
punpckhbw
pop
mov
mov
in
pop
pop
fstpl
loop
test
or
cmp
fisubrl
notl
adc
mov
std
adc
push
push
mov
mov
dec
cmp
ljmp
pushf
adc
jl
test
sahf
cmp
orb
nop
jge
mov
xchg
ss
nop
pop
jge
out
test
pop
mov
int3
int
cmp
stc
jne
add
jp
rcrb
dec
xchg
pusha
inc
sbb
jge
fwait
and
bswap
dec
repnz
stc
mov
cmp
push
pop
cli
push
mov
dec
sahf
push
xchg
out
leave
dec
xchg
imul
int3
dec
ret
inc
pop
cld
ljmp
and
dec
mov
sbb
sbb
pusha
xchg
add
dec
mov
jecxz
leave
jle
lcall
mov
inc
sub
subps
jecxz
outsl
dec
test
or
push
ss
mov
and
jno
mov
aam
jo
xor
xor
les
mov
je
lret
jp
cwtl
enter
push
xor
lods
cli
adc
pop
jne
pop
sahf
das
push
add
adc
fistpl
leave
mov
fdiv
add
adc
cs
add
add
dec
jp
or
stc
test
sbb
xchg
xor
mov
dec
sub
mov
fcomps
clc
push
add
jbe
outsb
cmpsl
dec
cmp
cmpsb
dec
enter
fidivrl
push
mov
push
ret
add
pop
xor
pop
rcl
push
add
jns
fs
rorl
popf
fnstsw
xchg
or
mov
adc
or
enter
sbb
mov
adc
ss
or
dec
sub
dec
das
push
pop
fcoml
jne
xorb
sub
jle
sbb
cli
xchg
jle
push
or
in
dec
cli
scas
xor
mov
cmpsl
lcall
push
push
mov
scas
flds
fiaddl
in
mov
cmp
adc
lock
insb
or
mov
fwait
ljmp
cmp
adc
add
adcb
lods
lcall
mov
add
lret
or
mov
sub
and
nop
sbb
jle
xchg
and
aam
dec
pop
in
mov
loopne
xchg
push
std
xchg
and
stc
push
js
arpl
int
jns
xchg
int
pop
sbb
test
test
pusha
pop
jg
stos
into
stos
mov
ret
pop
sub
lds
push
xchg
push
push
test
push
loope
or
popa
int
cmpsb
iret
sub
mov
push
outsb
gs
btr
inc
xchg
testl
lock
add
aad
jmp
cmpsb
nop
test
xor
adc
pop
dec
ds
mov
test
pop
out
outsl
or
inc
mov
pop
cmp
pop
sub
fidivrs
neg
icebp
andl
or
jge
movsb
and
inc
iret
rorb
enter
mov
aad
mov
jns
int3
adc
xor
push
xchg
push
cmp
int
loope
in
aad
xchg
xor
xor
jp
dec
mov
cs
cltd
dec
jbe
in
aas
dec
clc
cld
dec
insb
jl
int3
sbb
in
push
jno
pop
in
push
fstpt
push
pop
loopne
push
push
fisttpl
mov
or
cmp
adc
adc
inc
test
ja
cmp
push
enter
jmp
arpl
or
pop
xor
adc
inc
aas
inc
sbb
push
gs
mov
inc
jg
jg
cltd
xchg
mov
enter
push
lods
loope
cli
dec
or
sti
test
cmp
jp
sti
mov
adc
mov
push
repz
pop
movsl
cmpsl
mov
test
push
imul
cld
xor
xchg
add
sbb
fistps
pop
clc
andb
je
adc
mov
in
pop
in
data16
daa
dec
mov
mov
mov
adc
insb
js
leave
test
jne
je
add
jne
ja
cmp
inc
test
dec
test
stos
bound
outsb
jmp
jmp
sub
mov
cltd
das
ja,pt
mov
lds
dec
or
mov
int3
or
shrl
mov
outsl
clc
jp
idiv
out
test
sub
dec
fimull
pop
adc
test
sbb
push
adc
popa
fidivrs
dec
ret
ja
xor
rcll
fisttpll
pop
xor
xlat
lret
sub
pop
mov
xchg
testl
mov
test
or
push
xor
dec
cmc
in
xor
mov
xor
rcrb
lea
test
jmp
into
mov
sbb
xchg
test
sub
inc
pop
jge
insb
lret
jns
daa
adc
cld
or
dec
mov
loop
enter
outsl
xor
inc
push
jns
sub
fdiv
adc
dec
ss
push
adc
fadds
ss
pop
fldcw
xor
scas
adc
and
cmp
jle
aaa
xor
and
mov
dec
nop
adc
cmp
mov
lret
cli
mov
or
movsb
fimull
push
and
xchg
adc
mov
mulb
jle
adcb
xchg
lea
mov
inc
cmp
jne
dec
cltd
adc
dec
sub
xchg
shll
dec
lds
in
rcrb
mov
icebp
repz
movsb
dec
mov
mov
ret
outsl
scas
lcall
push
lret
and
pop
fwait
sub
push
enter
push
pushf
dec
adc
sub
pop
cmp
outsb
push
sub
daa
xchg
jp
div
lock
jnp
movsl
mov
add
stc
jecxz
movsb
jno
push
mov
loope
and
pop
sbb
cld
cmp
xchg
aas
cmp
pop
lret
jae
push
test
pop
push
je
lock
lret
xchg
pop
mov
push
sahf
out
test
dec
ss
out
dec
pop
les
insl
xchg
out
cli
adc
or
popf
sbb
aaa
xchg
sbb
clc
sbb
add
jle
sahf
pop
bound
flds
jns
sub
aam
fsubrl
ret
mov
lret
inc
fldcw
inc
push
mov
jae
and
pushf
push
into
cli
or
outsl
les
cmc
aaa
outsl
imul
jge
in
fs
testb
imul
mov
popf
mov
ljmp
mov
les
mov
stc
jge
or
push
into
jge
lcall
rcr
bnd
ret
sub
rcrb
sub
sti
lea
enter
add
pop
in
mov
mov
aam
enter
mov
adc
add
jg
dec
sub
lcall
mov
xchg
or
subl
push
loope
jl
dec
dec
in
aas
test
dec
xor
repnz
lock
mov
test
aam
inc
sbb
cld
add
in
mov
mov
jge
xor
sub
cmpsb
and
inc
cmpsl
gs
sub
pusha
mov
js
scas
cmc
shrb
push
sbb
ss
and
in
and
xor
out
into
ret
add
repz
xchg
dec
std
mov
pop
aad
cmpsl
aam
test
popa
roll
mov
mov
aaa
xlat
push
pushf
incl
bound
ret
lods
lahf
push
push
inc
pop
lods
out
adc
gs
jbe
push
jmp
shr
mov
xchg
pop
push
addr16
or
inc
les
stos
fisubrl
adc
sbb
sbbl
rcrb
out
sub
repz
jle
cmc
shll
dec
clc
mov
mov
xchg
inc
das
fisubrl
insb
jae
xchg
xor
pop
mov
mov
notb
imul
popf
cmp
cwtl
add
sub
shrb
arpl
leave
test
or
mov
dec
stc
and
ja
std
pusha
ret
push
inc
inc
inc
pop
dec
filds
xchg
fmuls
inc
inc
xchg
pop
test
cmc
pop
cmp
adc
push
dec
add
sbb
jge
mov
or
in
jge
fwait
popf
enter
mov
jb
stos
cmp
in
in
sbb
sub
or
push
bound
adc
xchg
adc
in
fcomip
pop
int
xchg
jo
sti
cmp
daa
cmp
pushf
rcr
in
cmc
lahf
fld
jnp
add
testl
inc
out
es
jns
gs
or
mov
clc
xorb
aad
movsb
jmp
inc
lahf
mov
push
out
pop
xchg
and
ljmp
fcoml
xrelease
xor
in
adc
push
aas
out
cmpsb
sbb
xor
cwtl
cmp
rcrl
mov
or
sbb
mov
repnz
xor
jp
fistps
fs
test
mov
fmull
cld
xor
mov
and
push
out
ficoms
test
arpl
cmp
mov
pop
stc
mov
rcrb
jae
and
sub
push
jnp
lods
jo
push
xor
and
mov
pop
inc
or
pushf
clc
sbb
iret
ljmp
ss
sbb
jecxz
add
shr
sbb
test
into
movsl
xor
inc
aad
inc
insl
sub
popa
nop
or
mov
das
pop
mov
add
pop
pop
mov
dec
dec
fs
adc
adc
jbe
xor
mov
cmp
mov
push
aas
lret
add
jo
inc
sbb
dec
aas
ljmp
mov
jne
xor
ficompl
mov
mov
mov
pop
add
xchg
jp
mov
push
adc
lods
stos
sub
mov
in
cwtl
mov
sti
jecxz
addb
mov
call
js
shlb
imul
sahf
int
cmpb
jecxz
sbb
out
sbb
lods
xchg
les
lock
in
shlb
imul
sub
out
jl
push
pop
jbe
pop
imul
add
les
sub
call
fcomps
xor
mov
sub
cmp
fdivl
ret
imul
cmc
mov
pop
out
pusha
cmp
repnz
rcll
cmp
inc
out
adcb
xorb
in
inc
out
push
jl
ss
cmpsl
pop
add
and
pop
add
push
pushf
subl
add
addr16
mov
es
add
pop
inc
cld
sbb
fcomps
mov
mov
cmc
cmp
jp
ret
hlt
je
fdivs
add
aam
aas
mov
and
repz
test
inc
adc
add
mov
out
scas
insb
mov
sbb
inc
daa
out
pusha
mov
mov
or
xor
loop
js
cmp
mul
push
data16
xor
ljmp
mov
xor
mov
outsl
movsl
sub
loop
lret
dec
data16
mov
les
inc
or
dec
in
fldenv
ljmp
pop
or
outsb
fwait
ss
loope
test
pushf
ret
lock
xchg
jbe
cmp
out
jle
xchg
insl
fistl
fistpl
push
sub
bound
sub
in
xchg
inc
cwtl
mov
gs
cld
aas
cmp
inc
add
pop
mov
add
lret
sub
ret
call
aam
dec
rorb
movsbl
adc
and
aaa
test
push
push
cmp
push
stos
xor
cmp
ljmp
cmpl
push
js
jb
mov
mov
insl
sub
or
out
test
sbb
mov
bswap
subl
cmpsl
std
ds
adc
hlt
jmp
push
movsl
sbb
int
sub
mov
jae
jnp
test
xor
adc
inc
fmuls
dec
add
cmp
repnz
nopl
adc
push
in
cltd
mov
sub
aas
in
xchg
and
xor
mov
sahf
mov
inc
xchg
jge
outsl
std
dec
enter
loope
xor
xchg
adc
and
dec
add
dec
imul
fimuls
addb
test
push
lahf
inc
test
into
enter
fwait
push
cmp
jge
in
into
mov
sub
jns
inc
hlt
mov
sbb
hlt
add
add
decb
jo
fildll
aaa
mov
sub
cmpsb
or
cmp
fcmovnbe
ds
aaa
push
pop
cmp
fs
leave
xor
sub
in
fwait
xchg
jno
int
call
aaa
cmp
scas
add
aas
fisubrl
pushf
jne
in
ret
mov
aaa
inc
dec
jno
aad
mov
icebp
jns
fstps
pop
xchg
inc
ret
popl
mov
xlat
dec
inc
lret
xchg
mov
pop
insl
xchg
int3
icebp
rcrb
stc
shlb
aaa
ret
fcmovnu
jl
push
bnd
push
and
inc
fs
or
movsb
push
add
leave
ret
sbb
sbb
and
add
andb
fdivs
stc
scas
mov
movsl
jbe
dec
mov
into
sbb
ret
ja
lods
lret
inc
sub
cmp
push
je
mov
jno
adc
inc
mov
add
aaa
push
loope
outsb
xchg
aaa
outsl
jp
pop
std
or
pop
or
mov
pop
insb
add
xchg
mov
js
sahf
pop
je
sbb
xor
cmp
mov
sub
jle
xor
lods
pop
add
xchg
leave
in
scas
nop
jb
stc
lret
adc
nop
jp
mov
nop
xchg
mov
popa
cmpsl
cld
enter
pop
mov
andl
dec
pop
data16
jmp
mov
mov
cltd
pop
dec
sub
sub
mov
std
fdiv
mov
dec
fsubrs
mov
jb
outsl
and
shll
xchg
pop
cmp
sbb
pushf
pop
jmp
mov
cmp
inc
add
sub
ret
data16
aas
mov
cmp
arpl
arpl
push
sub
mov
movsb
add
aaa
or
pushf
inc
sbb
cmp
fcompl
and
fwait
decb
push
aam
or
or
icebp
or
cmp
inc
int
js
cmc
jecxz
cs
clc
add
jmp
aas
dec
or
cwtl
mov
and
scas
pop
xor
mov
adc
pop
fs
jl
aaa
int
in
mov
mov
insb
mov
jo
outsb
jmp
xor
inc
inc
or
pop
in
or
or
mov
add
add
in
lret
pop
pop
rcrl
ror
jle
enter
stos
pop
adc
or
cmc
add
ja
sbb
or
adc
adc
mov
dec
jnp
fucom
int
out
mov
xchg
fisttpl
test
xchg
xchg
mov
push
imul
call
xchg
mov
sbb
cmc
push
inc
push
fucomi
or
jae
in
mov
push
jp
jp
xlat
xchg
dec
test
les
xchg
imul
adc
or
rolb
mov
xorb
adc
sbb
stc
shr
push
push
repnz
xchg
jmp
mov
pop
jle
push
xchg
cmp
aam
xor
cmpsl
enter
jl
adc
arpl
xchg
ja
outsl
cmpsl
ja
fisubl
jg
sbb
cli
xor
mov
addb
outsb
add
jg
ja
jo
xorl
mov
pop
add
cmp
sbb
mov
xchg
roll
out
jbe
fidivs
push
jns
dec
lcall
jp
stc
jmp
jnp
inc
adc
xchg
mov
das
movsb
jge
dec
inc
adc
stc
sub
and
inc
and
insl
lods
sti
xchg
gs
jbe
int3
loopne
ret
xor
jo
cld
adc
xchg
sub
push
mul
inc
rol
into
outsb
add
lods
push
daa
imul
fldcw
sub
hlt
imul
add
fwait
dec
dec
mov
in
sub
mov
sti
lcall
fnstsw
ficomps
aaa
push
mov
dec
ss
ficomps
inc
clc
out
daa
cli
sbb
adc
vmovmskps
push
mov
shl
mov
adc
xchg
jns
push
iret
add
push
cli
popa
inc
cltd
lods
mov
insb
pusha
and
and
or
ljmp
enter
das
xor
sbb
push
mov
fistl
dec
jb
mov
aaa
fistpl
or
iret
dec
ret
movl
push
dec
aas
lock
loope
sbb
icebp
xor
sbb
mov
iret
popa
dec
out
xchg
inc
mov
cmp
or
dec
or
int
mov
jnp
aaa
shll
adc
aaa
mov
test
and
jne
fwait
adc
rcrl
jb
lret
pop
jbe
shll
cmpl
jno
add
stos
lahf
pusha
fsubrp
loopne
xor
jecxz
xchg
or
lret
mov
sbb
mov
mov
add
repnz
lock
inc
inc
aad
xchg
dec
sbb
pop
das
mov
cwtl
inc
stos
xchg
popf
or
push
std
adc
imul
dec
mov
mov
test
das
repz
mov
sub
out
jle
ret
das
gs
mov
mov
inc
shlb
imul
mov
je
and
js
cld
ds
pop
js
mov
aas
cvtpi2ps
jge
call
push
jnp
push
dec
jle
ss
inc
pop
addr16
in
pop
aam
adc
dec
and
sti
aad
cmp
or
es
cmpsl
out
int3
das
addr16
fsubrs
js
test
fbld
dec
mov
fisttpl
xchg
movsl
jns
out
sub
or
pushf
mov
iret
scas
std
cmpb
xor
leave
xor
pminsw
call
das
psrlq
pop
sbb
lret
mov
lret
fisubrs
xchg
outsl
inc
in
jae
movsb
aas
pushf
sbb
cwtl
push
ljmp
out
dec
nop
xlat
inc
ret
sub
push
nop
aas
stos
inc
ret
push
loope
aaa
into
jae
inc
cmp
cmp
cltd
push
pop
mov
scas
jo
jecxz
lock
mov
bound
fistps
push
and
xchg
in
push
cmp
mov
mov
stc
stc
inc
mov
jmp
pop
xor
add
lret
pop
jae
loope
xchg
dec
hlt
adc
int
pop
into
out
jp
or
push
sar
ljmp
jle
jle
sub
jle,pt
mov
adc
and
pusha
addl
dec
movsl
mov
jbe
stc
test
in
xchg
dec
jle
mov
vcvttps2dq
jb
sbbb
inc
fisttpll
xchg
je
roll
add
icebp
stos
xchg
push
mov
out
mov
inc
popf
jmp
repnz
call
fcmovnu
data16
es
adc
mov
push
pop
cmovno
sub
sbb
negb
sbb
push
out
lods
inc
sahf
xchg
nop
sbb
mov
pop
jns
adc
push
cltd
aaa
cmp
mov
inc
mov
lods
or
testl
stos
nop
pop
cmp
int3
add
je
das
jns
ror
push
fmulp
xor
vpcmov
inc
out
pop
aam
aas
or
mov
fstl
dec
jmp
xchg
lds
sarl
mov
les
inc
lret
mov
jg
fs
in
pop
sbb
lahf
mov
shll
clc
add
mov
lods
or
ds
jl
sub
negl
fdivrs
fstl
sub
shr
test
pusha
mov
movsb
imul
lcall
or
sub
cmp
adc
mov
cmpsl
mov
sarb
insl
ficompl
aam
mov
jg
jmp
pop
pop
cmp
mov
shl
lcall
fildl
and
lret
xchg
push
ds
pop
leave
cs
push
jl
rol
ds
or
jb
iret
ss
cltd
and
es
add
stc
mov
popa
lods
in
add
mov
sti
jge
push
mov
outsb
mov
sbb
lods
add
pop
arpl
sub
cmp
out
push
inc
jge
adc
inc
sub
aad
pop
adc
ror
or
out
bnd
mov
out
cld
adc
sti
ret
pop
add
push
jbe,pn
fcmove
mov
lds
pop
xchg
push
mov
lods
outsl
sub
movsb
leave
and
lret
inc
push
movsl
push
in
xor
cmp
lret
jecxz
movsb
dec
sbb
jae
xor
push
das
les
adc
jle
in
jo
pop
adc
mov
sub
int
fimull
xor
dec
lahf
lock
lret
push
pop
sbb
push
lahf
sub
dec
mov
sub
jp
inc
inc
push
gs
call
fwait
out
lret
push
or
xlat
xchg
push
mov
add
in
shlb
cli
mov
out
or
mov
ljmp
cmp
inc
and
sbbl
outsl
mov
sbb
xlat
lods
xchg
sbb
das
jns
push
dec
loopne
out
bound
clc
bound
fisttps
mov
xor
sub
mov
call
xor
test
lret
xor
dec
jno
sbb
mov
repnz
and
mov
xlat
and
shlb
jbe
fldt
inc
jns
arpl
push
sbb
add
sub
and
inc
aam
mov
adc
cmp
mov
jno
jnp
insb
sbb
mov
stos
jae
jmp
add
pusha
mov
call
out
fcmovbe
subl
add
stc
jb
insb
sbb
sub
ss
aaa
or
pop
lods
jo
stc
subl
mov
cmc
inc
out
or
inc
cltd
data16
mov
and
rolb
fwait
in
into
rorl
mov
divb
stos
pushf
faddl
popa
jo
cs
ret
jle
int3
aam
scas
call
ret
fistl
imul
add
arpl
push
dec
xor
xorb
aas
inc
inc
push
xchg
pop
xor
insl
mov
mov
jb
iret
cs
into
insb
imul
movsb
mov
fxch
push
xchg
or
shlb
sub
cwtl
push
push
in
mov
stos
loop
jp
gs
pop
and
rcl
insb
test
mov
mov
sub
jne
jbe
mov
jmp
pop
add
pop
jb
sub
mov
adc
inc
mov
gs
push
loop
push
push
mov
cs
mov
test
xorl
sbb
daa
jg
cli
fcomps
jne
mov
mov
leave
jns
jmp
nop
hlt
scas
aas
push
jl
mov
push
mov
add
or
add
jp
pop
lea
add
movsl
ficompl
ljmp
addr16
or
push
lret
cmp
cli
adc
xchg
mov
clc
test
mov
xor
push
jns
sub
into
loope
clc
add
jo
test
and
push
bound
mov
fildll
xor
add
aad
stos
filds
std
dec
xor
into
pop
jne
fnstenv
xor
xchg
cmp
pop
jno
sahf
jle
xor
int
xchg
pusha
rorb
mov
cld
push
adc
add
add
test
mov
add
les
jbe
clc
fistpl
daa
inc
cmp
test
xor
xlat
sahf
sub
subl
jmp
ja
or
adc
sbb
popf
icebp
aas
xchg
sbb
cmp
cmp
adc
jns
data16
xchg
fsubrl
mov
imul
mov
xlat
lret
xchg
push
sub
and
inc
and
sub
adc
iret
imul
pushl
pop
fstp
and
cmp
ljmp
mov
subl
mov
ds
insl
sub
mov
dec
xchg
push
pop
add
jge
icebp
add
fimull
inc
aaa
clc
or
lds
repz
jns
out
loop
push
add
jae
cmp
xchg
jp
fwait
mov
adc
push
out
xor
adc
subl
mov
pop
mov
pop
hlt
sub
out
xchg
popa
dec
push
pop
jnp
xchg
hlt
aas
popa
bound
js
mov
fsubl
aas
adc
jmp
add
jb
fists
xor
mov
in
mov
push
out
inc
jge
lea
push
push
jne
lods
cmpsb
mov
mov
lock
cmp
jmp
lds
testb
outsb
xor
loopne
pop
push
and
lods
mov
xor
adc
or
imul
cmpsl
in
push
push
lcall
roll
popa
xchg
fdivl
jp
fiadds
dec
gs
jecxz
xchg
enter
repz
outsb
dec
shll
leave
js
mov
adc
clc
aam
cmp
sub
std
push
lock
les
stos
shr
push
loopne
adc
mov
sbb
pop
adc
cld
inc
inc
push
cld
loop
lcall
cmpsl
or
cmpsb
mov
in
fiaddl
lock
push
jmp
dec
pushf
jno
pop
mov
aam
fists
call
cmp
mov
repnz
or
test
xor
adc
fisttps
add
pop
aaa
sbb
loopne
popf
pop
loopne
sbb
sub
jle
inc
scas
pop
pop
imul
mov
add
test
mov
push
cmp
cwtl
gs
or
addr16
rolb
adc
pusha
push
lds
or
cltd
jo
dec
mov
sub
int
mov
loop
sbb
mov
cmpl
mov
cmp
mov
jle
gs
aam
push
xchg
dec
pop
dec
fdivrl
jb
mov
pop
test
out
popf
push
lock
sarb
push
movsl
fwait
sub
and
aam
lret
dec
imul
push
xor
pop
ljmp
xchg
sub
and
mov
push
jbe
adc
jl
xor
int
jmp
shrd
xor
add
mov
pusha
jmp
push
mov
lods
das
insb
fwait
push
daa
sub
or
sbb
xor
mov
aas
jae
lods
or
imul
pop
movb
cltd
dec
and
pop
in
shrb
pcmpeqb
cs
test
sub
lret
pop
and
int
pushf
jecxz
lret
pop
xchg
lahf
fnsave
mov
mov
pop
pop
loopne
lret
cmc
out
sub
add
mov
cld
scas
or
mov
mov
repnz
inc
mov
inc
ds
pop
mov
dec
push
aas
fs
sbb
or
and
pop
pop
fwait
sahf
in
or
or
sbb
jno
std
push
cmpsb
mov
in
lock
pop
cld
mov
bound
int
mov
and
push
cmp
ljmp
mov
mov
imul
jnp
xor
movsl
jo
mov
push
add
aas
cwtl
out
icebp
jmp
imul
jle
add
rorl
ljmp
fisttpl
cmpb
mov
lock
dec
dec
mov
mov
scas
mov
aad
imul
subl
addr16
in
dec
dec
push
sub
mov
in
popf
pop
push
and
fnstsw
stos
sub
sub
insb
xlat
push
ret
aaa
stc
ja
cwtl
arpl
xchg
xorb
adc
subl
push
aas
sub
repnz
xchg
in
cwtl
outsl
pop
adc
add
mov
mov
rolb
add
in
and
adc
aad
pop
lds
cli
sbb
xor
pop
sbb
pop
dec
sbb
repnz
mov
xor
xchg
aam
into
fdivrl
aaa
mov
loope
out
cmp
push
pop
ljmp
xchg
les
leave
iret
fsubl
imul
es
sub
push
lock
xchg
cmc
jl
pop
fistpl
je
push
jg
daa
das
into
enter
ret
insl
in
and
clc
leave
rol
rcr
repz
jg
mov
mov
add
imul
xchg
testl
les
xor
scas
jb
fwait
outsl
and
clc
mov
pop
lcall
imulb
inc
lods
gs
ret
test
pusha
mov
and
push
out
push
lock
mov
je
out
jg
jecxz
or
in
mov
fidivrs
pop
loop
push
inc
sub
or
or
fcoml
add
outsl
pop
or
xchg
out
ja
enter
movsb
mov
mov
push
loope
in
out
jle
dec
stos
mov
shlb
mov
xchg
mov
add
xlat
stos
mov
jg
dec
pop
popf
rdtsc
mov
mov
cmp
adcb
dec
jb
movsb
mov
mov
or
lcall
out
aad
into
in
push
cmp
or
cmpsb
mov
inc
fstl
add
mulb
icebp
push
cmpsl
jle
sbb
lods
jae
jnp
mov
mov
jnp
and
mov
push
pop
push
jmp
and
sub
jp
cmp
fcompl
repnz
jecxz
and
subl
xor
jge
test
sub
sbb
push
inc
lds
mov
sub
add
shl
fimuls
inc
cmpsb
adcl
pushf
scas
mov
and
dec
das
xchg
in
iret
rcr
mov
add
in
dec
xchg
aam
mov
aaa
out
loopne
pop
push
adc
sub
es
jl
mov
cmp
sbb
mov
mov
mov
sbb
inc
inc
push
sahf
ljmp
xlat
shrb
shll
push
sbb
aam
pop
inc
jae
pop
stos
cld
add
ret
sarb
mov
jno
xchg
into
idiv
iret
test
out
out
stos
cmp
sbbl
inc
insb
or
imul
sbb
or
xchg
mov
mov
out
repz
xor
fldcw
xlat
je
cmp
mov
inc
inc
xchg
push
iret
fmuls
mov
shlb
mov
sub
inc
push
clc
sbb
jle
mov
and
add
pushf
jno
xchg
push
or
cmp
lods
fcomps
mov
push
repnz
inc
jecxz
push
lret
xor
int
stos
ds
aaa
lret
and
add
scas
das
mov
pushf
pop
xlat
push
xor
xor
xchg
shlb
daa
xchg
jae
pop
scas
jmp
push
mov
jge
dec
pop
sbb
pop
and
mov
cmc
push
pop
jno
dec
or
xor
xchg
or
jp
lret
fwait
push
mov
lock
lods
dec
divl
cmpb
sub
stc
xchg
scas
push
push
cmp
ja
fisubrl
les
loope
xor
mov
rorb
sub
dec
mov
xrelease
imul
dec
or
mov
xor
or
or
fisubs
xor
mov
lea
pop
sbb
stos
mov
call
popl
jae
adc
lds
lds
cmovno
push
adc
or
or
scas
ds
sbb
mov
ror
xlat
popf
mov
pop
sub
jo
arpl
mov
push
jbe
push
inc
xchg
mov
cs
and
jge
xchg
push
lds
cld
aam
cmpsb
pushf
adc
sub
shll
jp
dec
or
mov
push
stos
fwait
push
lods
ret
pushf
push
daa
mov
repnz
imul
dec
ds
repnz
call
repnz
adc
incl
mov
lcall
imulb
pop
mov
sbb
mov
shr
cmp
stos
rclb
in
pop
jg
xchg
stos
stos
pop
pop
pop
andb
pop
imul
push
pop
mov
xlat
sbb
mov
pop
je
mov
push
leave
data16
sarb
out
inc
dec
push
xchg
sub
mov
dec
cmp
or
pop
mov
call
pop
jne
or
jle
js
adc
rcrl
fsub
aad
and
push
inc
mov
out
scas
inc
shrb
inc
imul
leave
mov
mov
sub
adc
dec
leave
xchg
mov
daa
fmull
outsl
jns
sahf
imul
insb
sbb
mov
loopne
inc
xchg
jnp
push
stos
xchg
popa
ljmp
push
xchg
add
jnp
jge
push
imul
or
lock
and
fistl
jle
and
popa
mov
mov
cmp
mov
push
leave
test
fwait
inc
mov
pop
cli
dec
mov
pop
fnstenv
imul
add
or
aam
pusha
fmul
jle
add
push
or
inc
out
cmp
mov
movsb
jmp
pushf
out
mov
shll
sub
stc
stos
xchg
push
scas
jmp
enter
sbb
adc
cmpb
int3
es
rcrl
xor
adc
fldt
lret
dec
xchg
push
xchg
loopne
cld
jmp
sbb
pop
je
iret
and
add
mov
loopne
add
rclb
push
pushf
inc
cmpsb
xor
mov
sarl
lea
and
or
or
fsubs
sti
inc
and
and
mov
jmp
push
cmpsl
xor
adcl
andb
jg
jne
mov
pusha
loop
inc
xor
outsl
or
jae
iret
and
jae
or
sbb
adc
add
push
inc
jp
pop
clc
xorl
sbb
push
xor
outsb
or
loope
lcall
adc
mov
inc
shll
hlt
and
les
movsl
push
stc
cmp
push
clc
jmp
add
fimuls
mov
out
cmp
inc
dec
fiaddl
ds
negl
inc
dec
or
adc
call
aas
mov
pop
dec
iret
out
jo
fcoml
ds
loop
jle
pop
dec
mov
lahf
out
and
sbb
adc
push
fidivrl
pop
mov
test
sbb
xchg
lahf
in
fwait
addr16
cli
adc
insb
pushf
ds
bnd
rcl
pop
arpl
nop
jle
jbe
xchg
jge
xchg
push
mov
in
mov
movsl
subb
imul
scas
cmp
and
lret
sbb
dec
in
loope
js
stc
mov
cli
add
shlb
push
jge
les
shll
mov
or
inc
mov
push
mov
cwtl
inc
call
add
adc
and
inc
jnp
das
repnz
in
inc
lcall
dec
repnz
mov
fldl
add
push
and
sub
or
add
shrb
inc
sbb
ja
fs
add
xchg
xchg
nop
adc
sbb
and
pushf
push
gs
push
jmp
test
in
xchg
or
xchg
in
adc
jecxz
shll
sub
push
sub
lds
sbb
mov
aad
sub
ljmp
aaa
pushf
push
neg
cmp
mov
sub
mov
xchg
inc
cmp
jmp
in
repnz
mov
fsubrs
lcall
sti
fimull
mov
repnz
gs
mov
retw
ds
xchg
xchg
adcb
jmp
sub
imull
testl
inc
inc
nop
sbb
cmc
pushf
cmp
cmc
jns
fldenv
xor
test
js
sbb
pusha
push
pop
cwtl
sub
andb
clc
jecxz
push
xchg
cmp
push
popa
jnp
mov
mov
popf
xor
nop
xor
in
cmpsl
fildll
cmp
enter
lahf
sub
fistps
fcompl
rcr
aas
sbb
mov
xor
addr16
xchg
out
aaa
mov
test
lahf
add
jae
pop
add
mov
int3
xor
and
test
mov
and
and
test
addr16
jbe
xor
inc
and
mov
cmpsl
xor
mov
ret
and
imul
xchg
and
mov
xor
pop
push
adcb
dec
es
icebp
jecxz
notl
dec
mov
stc
loopne
adc
movsl
sub
outsb
mov
and
lahf
std
cmp
jg
cld
cmp
sbb
and
stos
test
mov
or
mov
pop
test
cltd
push
sub
ja
or
xchg
mov
mul
or
lcall
or
lock
cmpl
sbb
mov
xor
sub
jp
sbb
mov
or
adc
cwtl
cmp
xchg
push
add
test
mov
mov
lea
ret
jmp
in
test
mov
cli
repnz
xchg
sarb
cmpsb
movsl
mov
in
cmp
std
adc
insl
lahf
dec
cmpsb
mov
mov
imul
lods
dec
mov
orl
xchg
and
test
mov
into
adc
jne
loop
rorb
and
out
mov
in
or
xor
jg
data16
mov
inc
mov
xchg
addr16
jbe
leave
xorl
xorl
or
in
xchg
sbbb
enter
cltd
push
fdivrl
push
sahf
jb
add
mov
cmpsb
data16
adc
movsl
jne
push
sbb
testl
mov
aam
daa
rcrb
int
imul
mov
ret
inc
clc
push
andb
loope
aas
mov
ja
mov
add
adc
mov
jecxz
addr16
roll
roll
js
push
pop
or
add
add
cmpsb
icebp
push
icebp
mov
inc
lcall
cmp
shl
sub
test
xchg
out
jo
sti
lock
push
mov
cmp
xor
jmp
test
or
data16
and
pop
xchg
ss
adc
cwtl
loopne
pxor
cltd
dec
bound
jmp
sbbb
sub
icebp
mov
pop
ja
and
sbb
enter
add
test
inc
jg
test
add
lahf
inc
mov
sub
jae
jle
adc
iret
dec
add
push
clc
rolb
xor
je
pop
pop
pop
rorb
xor
cmp
mov
dec
sbb
inc
pop
hlt
jp
adc
add
fwait
mov
jmp
mov
push
cmc
adc
pop
in
mov
in
or
mov
mov
lds
add
arpl
mov
adc
mov
mov
sub
shl
push
jno
dec
lcall
push
insb
push
sub
cld
or
xchg
std
bound
mov
and
and
pop
lods
jne
icebp
cmp
aaa
push
sti
mov
rcrl
mov
or
push
lret
jmp
fldcw
mov
dec
inc
les
pop
xchg
fdivp
xor
mov
sbb
aam
jp
addr16
loopne
push
mov
fs
or
jns
sti
shll
mov
xchg
push
mov
jb
dec
cmp
rcll
push
cmpsb
jo
pop
stc
imul
mov
in
cmpsb
sbb
int3
cmp
sbb
in
aam
and
mov
scas
xchg
sbb
mov
bound
add
icebp
icebp
mov
testb
mov
aaa
mov
add
pop
mov
mov
stos
jmp
lahf
xlat
cld
mov
sbb
xchg
aad
outsl
out
sub
dec
sahf
in
cmp
rorl
inc
jnp
stc
dec
mov
push
dec
subb
xchg
mov
cld
pop
inc
cwtl
mov
ljmp
sub
cmp
mov
clc
test
or
add
stc
aas
lcall
lock
push
repnz
mov
sti
out
cmp
adc
mov
dec
ss
pop
js
hlt
mov
and
adc
sub
pop
sbb
xlat
mov
gs
stos
inc
rorl
cmp
iret
lea
fsubr
mov
pop
fsubrl
or
jae
and
pushf
mov
daa
fs
pop
mov
into
mov
idivl
push
mov
add
adc
mov
inc
fstpt
jecxz
aas
movsb
movb
jnp
dec
adc
orl
mov
fs
or
clc
push
or
push
inc
pop
mov
int
rcl
cltd
ret
mov
in
push
or
sub
and
outsb
lret
sbbl
roll
xchg
mov
ss
push
in
outsb
jb
xchg
sahf
repnz
push
push
shr
or
sarl
push
cmp
out
icebp
mov
and
les
aas
push
shlb
sbb
and
sbb
jmp
movsb
push
pop
mov
mov
mov
adc
cli
out
cs
and
insb
daa
rcll
fdivrs
inc
xchg
add
mov
loop
dec
fdiv
fidivs
cld
outsl
pushl
and
pop
push
xchg
push
jno
and
mov
call
shrl
push
lret
mov
fbld
mov
cld
popa
mov
add
addr16
or
loopne
enter
pusha
jb
sahf
inc
fidivs
ret
mov
cmc
movsl
negl
inc
jo
push
inc
sbb
xor
mov
adc
sub
pop
mov
jne
pop
aas
xor
imul
adc
pop
fwait
cmp
or
sbb
jge
or
sbb
pop
and
sbbl
lods
cltd
inc
inc
push
mov
pop
or
in
push
inc
cmpsb
scas
out
sub
cwtl
jns
cmp
cmp
push
adc
fsubrs
shrl
add
add
cmc
lcall
mov
lock
outsb
jp
pop
jae
ljmp
cmp
add
or
enter
push
aad
cmp
mov
sbb
push
in
nop
and
pop
subl
jmp
loopne
in
test
push
cmpsl
push
inc
cmp
in
dec
ss
pop
sahf
les
mov
lahf
cli
in
lahf
insl
popa
cwtl
xor
test
rorl
fwait
lea
addr16
inc
sahf
dec
lcall
inc
push
iret
cmpsb
in
or
add
add
push
or
or
test
inc
push
and
rorl
or
sub
xor
loopne
pusha
out
push
mov
and
mov
lods
adc
jnp
rolb
adc
push
push
push
fistpl
inc
cmp
test
and
ja
jns
test
pop
dec
call
ret
loopne
cmp
shl
pop
pusha
addr16
sbb
cmp
clc
out
sub
dec
inc
mov
pop
nop
das
jg
fdivrs
add
fldt
adc
test
fwait
int
outsl
pop
or
outsl
mov
mov
sbb
outsb
mov
int3
in
cwtl
in
es
mov
mov
movsb
push
imull
pop
mov
out
jbe
push
mov
dec
cli
lods
inc
je
jle
mov
les
sbb
fbld
xchg
roll
xchg
pusha
pop
out
push
push
lret
pop
loope
jg
push
addr16
sub
or
popa
addr16
popa
push
clc
lcall
in
xor
data16
test
and
cmp
and
mov
adc
dec
mov
sti
cltd
popf
push
jo
or
imul
or
jns
lods
leave
cmp
lea
fsubrl
loope
mov
in
or
dec
mov
pop
xchg
adc
call
mov
jl
pop
mov
add
mov
xchg
jb
mov
push
stos
sub
ja
inc
ret
ja
gs
test
test
xor
stos
movsl
pop
jbe
iret
inc
loope
mov
add
mov
fistl
xor
jnp
push
and
sbb
cmp
jecxz
mov
in
adc
push
cmp
sbb
adc
jecxz
and
pop
loop
imulb
dec
add
in
outsl
sarl
push
mov
shrb
sbb
push
cmp
jg
sub
les
xlat
iret
mov
push
xchg
mov
mov
ret
mov
dec
jbe
fisubl
repz
and
mov
or
lock
adc
pop
push
mov
jmp
idivl
adc
iret
add
push
sti
adc
rclb
lods
dec
imul
insb
mov
or
flds
call
mov
mov
out
outsb
lock
test
add
cmp
inc
stos
push
stc
and
add
cmp
mov
in
jno
test
sbb
mov
iret
out
xor
or
xchg
test
xor
cmp
sub
xor
add
jg
out
jl
ljmp
and
lcall
fistps
add
test
and
fstl
arpl
daa
jp
stos
xchg
inc
or
mov
sub
sbbb
scas
pushf
pop
adc
pop
outsl
fists
fisttps
rcrl
pop
into
add
jg
push
add
push
sub
out
dec
cmp
add
cmp
and
js
fwait
cwtl
mov
or
popa
in
mov
icebp
or
pop
test
inc
pop
push
add
aaa
int
or
xchg
shrb
repz
lret
loopne
xchg
fs
cmp
das
mov
int
dec
and
cmp
jge
adcb
jl
shlb
push
mov
test
dec
xor
pop
and
cmp
adc
jb
mov
pusha
and
cld
outsb
insb
push
push
pop
movsl
xchg
mov
mov
cltd
xchg
movsb
in
jmp
in
xor
cmpsl
dec
add
sub
enter
dec
jno
cmp
mov
ret
in
jns
xor
mov
mov
adc
fwait
push
repz
push
loope
adc
loop
repz
and
fwait
repnz
pop
jbe
xchg
mov
cmp
pop
out
shll
out
int
les
sub
xlat
or
add
das
inc
mov
cmc
xor
in
sbb
lcall
rol
mov
aaa
adc
mov
jecxz
inc
sbb
mov
push
adcl
popl
push
bound
in
and
pop
call
mov
mov
pop
inc
push
shrl
and
jb
cwtl
xchg
pop
stos
add
stos
out
lahf
sti
mov
xchg
inc
pop
dec
sbb
cli
cmp
test
decb
ljmp
cwtl
mov
pop
cmp
mov
insl
and
pop
dec
ja
add
repnz
lcall
dec
inc
add
data16
dec
fisttps
add
cmp
push
mov
scas
roll
in
and
push
je
repnz
mov
sbb
je
out
repnz
mov
imul
jbe
lds
mov
movsb
add
loop
mov
mov
push
or
pushf
mov
add
push
test
pusha
das
cmp
arpl
daa
jbe
dec
mul
pop
mov
out
outsl
fwait
cs
sub
pop
xchg
mov
xchg
sub
jno
inc
js
mov
xchg
dec
xlat
jmp
pop
pop
xlat
andl
nop
xor
repnz
dec
insb
sarb
in
pop
adcl
dec
hlt
rep
xchg
mov
cld
inc
das
or
data16
and
inc
cmp
sub
xchg
cli
leave
imul
mov
popf
ljmp
or
fldl
dec
jb
lock
mov
cmove
cmp
das
push
movsl
cmp
xchg
or
scas
pop
push
sub
sub
mov
add
dec
and
cmp
cwtl
push
out
scas
jbe
imul
aam
and
dec
and
cmp
dec
cltd
fwait
test
sbb
xlat
cltd
rcr
mov
ds
xor
mov
dec
ljmp
pop
loopne
popf
inc
sub
xor
in
insb
aad
sbb
inc
arpl
jno
dec
mov
subb
or
sub
xorb
xor
mov
sub
adcl
stos
cmpsl
push
sub
or
jecxz
inc
adc
or
push
test
ret
aas
sti
stos
fstpl
pushl
xor
pusha
data16
inc
inc
cs
mov
xor
sbb
stos
lahf
movsb
sbb
xrelease
shl
add
add
cmpsl
sbb
xor
mov
lods
sbb
insb
adc
stc
adc
xor
pop
pop
out
mov
js
dec
movsb
xchg
hlt
ficoms
sub
sub
lods
xor
es
lods
bound
mov
mov
push
js
not
lahf
bound
jae
in
out
sub
fists
mov
es
add
or
xchg
inc
sbb
pop
push
cmp
mov
mov
xchg
adc
jb
in
imul
pop
repz
jmp
mov
cltd
pop
cmpsl
fcomps
pop
pop
fsubrs
daa
rolb
out
pop
call
push
pop
sarb
fbstp
xor
mov
retw
loope
mov
daa
dec
mov
sbb
xchg
push
pushf
jmp
pop
ret
push
add
iret
xor
dec
xchg
mov
lods
scas
and
lret
xchg
js
jae
dec
mov
sti
mov
adc
fisttpl
ds
nop
in
lods
and
xor
mov
push
jg
popf
push
repz
enter
inc
cld
mov
insl
xlat
call
lods
es
adc
pushf
mov
outsl
xor
icebp
inc
mov
fsub
cltd
mov
ds
sub
pop
dec
imul
data16
enter
lcall
data16
aad
sub
dec
xor
insl
adc
jp
nop
jbe
mov
xor
push
xor
pop
mov
sub
lret
sbb
jno
inc
sub
push
lar
jae
mov
les
outsb
das
cs
push
jbe
cmp
mov
ret
adc
sti
xchg
sbb
int3
pushf
into
inc
add
fcomi
jnp
add
xchg
stos
dec
je,pn
adcl
adc
aaa
add
ret
in
addr16
cmp
jp
sub
lret
mov
xor
dec
and
fldz
mov
push
jae,pn
stos
es
pop
add
mov
cmp
popl
dec
ljmp
and
lods
imul
aad
xchg
jmp
inc
pop
inc
into
mov
cs
stos
sbb
in
push
jmp
mov
ret
adc
add
jb
cmp
or
push
leave
stc
daa
push
jmp
xchg
fnstenv
add
test
push
imul
cmp
mov
stos
jbe
insb
push
fs
mov
jno
mov
mov
jo
push
xchg
push
sub
cs
xchg
test
dec
enter
xlat
dec
data16
jg
lods
cmp
or
cmp
jb
repnz
fisttpl
cltd
in
mov
mov
or
jl
mov
and
repnz
and
xchg
repz
dec
lods
ljmp
cmc
sbb
mov
adc
pop
or
cmp
push
inc
sub
jnp
dec
sbb
inc
or
repz
add
shrl
std
sbb
or
movnti
xor
js
inc
dec
lahf
add
mov
inc
stos
icebp
inc
add
mov
fisubl
js
xor
sub
sbb
movsw
push
popf
sahf
aam
popa
pusha
jp
mov
mov
and
mov
repnz
out
mov
mov
sbb
xor
lcall
shll
push
scas
leave
push
pop
adc
cmp
out
imul
or
jo
fwait
sub
jle
lock
cmp
inc
stos
xchg
insl
cmp
pushf
popa
and
mov
cmc
pusha
push
je
sahf
cwtl
xchg
setg
mov
add
sub
pop
test
fildll
and
dec
leave
pop
jle
outsl
out
or
pop
pop
imul
sbb
mov
repz
jle
mov
xor
stos
cmp
mov
jg
rcl
dec
cld
adc
mov
cmp
or
ss
es
push
lds
addr16
enter
sub
mov
clc
sbb
or
cmp
gs
jbe
je
and
xchg
testl
jmp
pusha
mov
mov
jmp
sbb
jmp
stc
lea
aad
mov
imull
jbe
int3
jmp
add
sbb
aas
adc
adcl
mov
fwait
mov
sbb
sub
mov
jecxz
call
shl
ret
out
test
clc
pop
out
add
inc
xchg
adc
jb
or
mov
aaa
dec
lret
iret
imul
inc
xorb
orl
icebp
pop
sbb
jns
cmp
dec
mov
fs
mov
aad
shll
adc
sbb
xchg
out
pop
repz
mov
repz
test
pop
lret
insl
inc
add
lds
or
fucomi
inc
cmc
flds
stc
add
stos
pop
pop
add
jge
push
sub
pop
mov
add
cmp
stos
stos
loop
xorb
xor
xchg
and
push
mov
add
xor
mov
jne
arpl
in
lahf
jno
inc
int3
push
pop
test
divl
inc
cmp
aam
sbb
jae
es
push
lods
mov
int3
rcll
or
mov
cmpsl
pop
mov
rolb
push
pop
jmp
dec
loope
pop
jge
repz
or
pop
movsb
or
ret
out
and
dec
lcall
cmp
test
clc
dec
addr16
das
stos
pop
pop
xor
push
adc
xor
loopne
dec
mov
pop
cmpsl
stc
cmp
sub
testb
mov
mov
jle
dec
mov
pop
jl
inc
pop
iret
xchg
es
mov
push
mov
sub
cmp
rorb
mov
mov
cmpb
dec
pop
add
mov
xchg
xchg
mov
fmull
pop
jb
dec
faddl
pushl
loop
mov
cld
iret
dec
xchg
test
lahf
ret
aad
shlb
jae
adc
clc
notb
sbb
outsl
in
xchg
or
in
je
icebp
sub
enter
aam
mov
pmaddwd
in
add
xchg
jae
or
movsb
xchg
push
jle
enter
pop
in
decb
insb
fsubl
add
out
mov
cwtl
outsb
hlt
add
int
lahf
push
hlt
int
movsl
ret
das
push
xchg
pop
mov
test
xchg
adc
or
movsb
push
aam
cli
or
aas
lds
jns
cmp
repnz
push
fwait
into
fistps
push
xchg
add
push
popa
loope
popf
aaa
and
push
push
lds
pushf
mov
fnstcw
mov
jl
in
mov
xchg
bound
mov
addr16
push
jge
adc
into
outsb
xor
insl
movsl
add
stos
lcall
pop
bound
lcall
fisttpl
fcoml
mov
jl
mulb
movsb
mov
or
push
pusha
xchg
add
dec
or
xchg
gs
std
push
mov
lock
cmp
push
bound
sub
adc
cld
jecxz
es
mov
outsl
rorb
cmp
clc
lods
nop
mov
cwtl
add
in
sbb
cmpsl
or
inc
stc
outsb
add
loopne
adcb
adc
pop
inc
cld
cltd
setne
andb
stos
add
rclb
adc
out
dec
aam
xor
leave
clc
dec
das
mov
hlt
in
enter
mov
repnz
cmp
dec
addr16
add
adc
pop
shll
pop
adc
cli
adcb
hlt
scas
sbb
jmp
sti
sbb
decb
mov
call
mov
push
mov
cmp
cmp
std
je
scas
sub
inc
sbb
mov
rolb
filds
dec
inc
add
dec
push
xchg
arpl
scas
xchg
rcrl
jecxz
daa
xchg
xor
sarb
adc
mov
bnd
mov
adc
mov
inc
mov
nop
jmp
cmp
xor
cmp
mov
jo
sbb
xchg
mov
xchg
adc
ss
push
sbbl
lahf
orl
xor
pop
data16
shlb
or
cld
insl
nop
rolb
sub
xorb
fcompl
rolb
lret
fdivr
fmull
xorb
sbb
shlb
adc
jb,pn
sbb
stos
jno
jge
mov
imul
out
fists
cmp
sar
sub
push
call
xchg
fsts
int3
stos
cmp
or
jle
xor
xchg
adc
sahf
es
adc
dec
jbe
inc
add
popa
mov
mov
jno
pop
lret
push
pusha
fidivrs
jno
add
inc
shlb
out
loopne
test
addr16
cmp
lret
aad
arpl
sub
gs
popa
jmp
add
ljmp
pop
test
je
sub
lret
subl
in
aas
faddl
mov
jae
push
jecxz
iret
cmp
dec
and
jecxz
cmp
dec
ret
mov
lahf
dec
pop
xor
bound
jl
inc
std
pushf
addb
in
repz
fxch
ss
and
daa
sti
shrl
fdecstp
frstor
dec
mov
add
outsl
jmp
mov
cmp
pop
loop
test
xor
mov
mov
cmp
enter
ja
sub
mov
mov
scas
xor
inc
dec
cmp
pusha
imul
xor
adc
and
pop
cmp
or
je
das
add
call
out
xor
mov
inc
es
scas
shll
movsb
mov
cmpsl
mov
ror
dec
call
jecxz
pop
jmp
leave
pusha
mov
adc
cltd
fistps
stos
fisubl
inc
or
jb
xor
rolb
and
es
jno
call
adc
mov
pop
and
shll
dec
fidivl
adc
jmp
addr16
or
ret
mov
fldcw
xor
cltd
push
fadds
fstpt
mov
bound
add
loop
mov
test
mov
repz
pop
jg
fwait
clc
fldcw
imul
mov
xchg
out
addr16
push
fcmovnbe
int3
dec
pop
out
mov
fdivs
clc
pop
dec
mov
in
xor
roll
jnp
pop
call
sbb
xor
icebp
and
cwtl
inc
paddw
pop
ss
lds
push
out
insl
faddp
dec
rcrb
push
pop
cmp
adc
fdivs
sub
cmp
pop
adc
sbb
xor
stos
inc
js
dec
jg
rorl
bnd
fildll
es
pop
inc
adc
push
dec
add
lea
jb
inc
push
xor
adc
and
pop
dec
out
xor
roll
loopne
push
and
add
andb
xor
pop
js
xchg
popa
dec
test
pop
cmp
adc
aaa
pushf
inc
pop
or
and
inc
mov
sub
inc
stos
movsl
push
ret
in
or
fdivrp
les
mov
xor
cmp
loope
and
rclb
push
push
test
sbb
int3
orl
inc
dec
idivl
adc
xchg
or
xchg
xbegin
ret
lea
roll
sbb
lea
pop
mov
stos
lret
cmp
xor
dec
push
or
dec
stos
cwtl
mov
dec
cltd
fs
pop
fcomps
nop
fsubr
add
jmp
lret
and
xor
insb
ljmp
fisttpll
scas
xchg
adc
sbb
adc
cmp
pop
jmp
and
out
in
push
decl
sub
fwait
pop
notb
xor
addr16
je
pop
out
mov
leave
dec
lahf
sahf
and
sub
leave
or
in
int3
xchg
ljmp
mov
in
adc
test
dec
jmp
adc
mov
pusha
mov
test
loopne
push
mov
cwtl
shlb
aas
call
or
test
dec
fwait
out
inc
push
cmpsl
sbb
in
push
ljmp
in
loopne
and
lods
loope
push
enter
ljmp
jl
addr16
mov
inc
pop
xlat
out
xor
popa
hlt
popf
enter
jae
mov
ficoml
dec
inc
xchg
push
popf
push
outsb
enter
sub
adc
mov
je
or
xchg
andl
test
ljmp
or
sti
leave
aaa
shrb
in
xchg
xor
mov
cs
xchg
inc
cmpsl
sbb
add
add
xor
and
add
add
insb
dec
inc
mov
sub
sti
jmp
jb
adc
ret
sbb
sub
pop
mov
jb
dec
mov
ja
or
outsb
cmp
xchg
push
xlat
cmp
loope
sub
adc
test
arpl
fwait
inc
push
cwtl
clc
xor
sahf
dec
sti
ret
out
add
inc
orl
mov
sub
cmp
fscale
data16
cmp
push
clc
xor
inc
and
sti
cli
dec
ja
aam
mov
scas
mul
imul
daa
ret
jnp
jl
and
es
lds
jge
sti
loop
inc
loop
imul
cmp
icebp
aas
sbb
fisubrl
pop
xchg
test
mov
add
ss
xor
lods
fsubr
cmp
sarb
movsl
call
add
mov
dec
mov
jle
sbb
xchg
mov
jg
or
stos
adc
out
vmovups
fstpl
adc
pop
xchg
fwait
int3
scas
adc
subb
hlt
aad
mov
je
cld
adc
mov
or
adc
or
inc
push
cmc
lds
insb
mov
cmp
dec
cmpl
add
xchg
push
daa
ret
or
add
and
adc
mov
scas
pop
movl
sbb
sbb
imul
or
daa
gs
add
das
jp
inc
jmp
inc
sbb
adc
fadd
and
inc
std
xor
stc
jg
std
outsl
jl
mov
bound
nop
test
jle
lret
or
sub
popf
hlt
and
pop
push
push
adcl
dec
sub
push
cmc
inc
mov
jge
decl
cld
dec
pop
and
out
mov
mov
sbb
stos
loopne
inc
jno
and
jl
push
mov
jl
xchg
push
sbb
mov
and
mov
and
stos
shll
out
dec
jecxz
scas
mov
mov
and
sub
jecxz
pop
adc
jg
test
pop
push
stos
data16
movsl
adc
adc
and
and
popf
jae
addb
jbe
mov
adc
lods
nop
arpl
ljmp
jecxz
out
inc
pop
and
push
clc
lahf
sbb
inc
inc
pop
loop
mov
fbld
shlb
mov
mov
jecxz
mulb
fbstp
hlt
hlt
inc
adc
sbb
xchg
scas
js,pt
inc
sti
nop
es
mov
jne
sub
xchg
sub
cmp
cltd
js
insb
push
mov
movsl
jg
jnp
dec
cld
fsubrs
jmp
fsts
addr16
jle
sahf
mov
icebp
sti
push
sub
fwait
lcall
daa
mov
ret
mov
or
push
sub
dec
add
sub
sbbb
add
sbb
mov
jo
test
test
mov
or
dec
std
jmp
daa
aam
pop
outsb
in
jnp
push
out
xlat
inc
popf
mov
mov
test
jle
loopne
mov
aam
adc
or
sub
mov
xlat
mov
std
filds
in
into
dec
fcmovnbe
cmp
sbb
jns
pop
push
mov
movsl
cs
es
inc
and
daa
mov
pop
dec
fs
lods
imul
mov
add
or
enter
hlt
push
and
mov
sbb
dec
push
jne
jmp
stos
mov
pop
sbb
fisubrl
scas
mov
mov
scas
xchg
adc
rclb
adc
xchg
sub
outsl
push
jle
push
das
lahf
cmp
fcmove
mov
jp
cmp
adc
into
test
pop
pop
mov
in
jge
mov
es
cmovnp
sub
xchg
es
or
mov
pop
cmp
lods
cmp
cmpsb
negb
subb
lods
cmc
xorl
push
data16
cmp
int
xor
insb
jb
inc
jns
lods
lret
adc
iret
lea
xor
mov
mov
pop
push
lret
leave
lods
int3
scas
aam
icebp
repnz
inc
or
jle
enter
sbb
or
cmpsl
jl
pop
add
lods
or
sub
jno
fmuls
xchg
scas
lret
cli
mov
nop
add
jp
addl
leave
or
stos
mov
xchg
lods
jmp
and
adc
mulb
mov
and
push
lret
and
cmp
ss
xor
lods
sbb
fstpl
dec
jmp
fisubl
lock
in
daa
mov
jnp
popl
mov
fistps
mov
and
loopne
xchg
test
mov
enter
fsubl
stc
adc
mov
sub
subb
inc
and
sub
fcomps
and
mov
lret
test
mov
stos
inc
pop
insb
movsl
cmpsb
pop
pop
mov
or
or
add
xor
adc
mov
bnd
xorb
shlb
pop
sbb
xor
lods
movsl
pop
mov
cmp
in
sub
aad
lret
xchg
std
dec
pop
mov
sbb
add
inc
mov
nop
aaa
lret
pop
sahf
inc
fistpl
aam
shll
pop
sbb
sbb
sbb
xor
pop
out
xor
incb
jae
or
sbb
loopne
push
or
arpl
test
xor
dec
out
xchg
adc
sarl
clc
push
stos
or
add
fcomps
cmc
mov
jmp
jns
gs
cmc
lahf
cmp
push
cli
icebp
es
dec
push
ret
cmp
bnd
xor
fsub
cmp
pop
mov
insl
sarb
sahf
dec
aas
cmp
pop
mov
int
mov
inc
add
mov
imul
sub
scas
in
mov
jb
hlt
mov
loop
pop
sub
sub
mov
inc
aaa
dec
cs
outsl
icebp
cmp
jge
cmc
lods
call
mov
push
mov
clc
cmp
jmp
repnz
adc
sahf
pushf
pusha
jp
shl
enter
rclb
and
std
dec
mov
je
xor
dec
out
cmpsl
sti
mov
and
mov
push
cmp
push
mov
rorb
pop
sbb
mov
mov
outsb
dec
sub
and
andb
sub
xor
lret
ds
mov
les
mov
dec
clc
xlat
push
popa
jg
je
sbb
outsb
lods
stos
cli
inc
sub
cmpsl
pop
stos
data16
test
nop
rcr
mov
dec
lock
lret
pop
and
gs
ds
outsb
push
xchg
xabort
roll
xor
xchg
mov
push
xor
aam
mov
rcrl
mov
jbe
mov
addr16
out
push
fwait
stc
sub
push
mov
es
test
xor
outsl
xchg
mov
pop
push
cmp
pop
push
fwait
cmpsb
loope
cmp
std
dec
adc
sbb
lock
movsb
pop
sahf
jmp
cli
push
jbe
or
jno
pushf
xor
push
out
leave
fistpl
pushl
icebp
jg
scas
adc
adc
dec
mov
mov
pop
cmpsl
data16
in
dec
call
dec
cmp
sbbl
xchg
mov
pop
mov
xor
inc
into
mov
mov
loopne
lods
cmpsl
adc
sbb
sub
xor
lea
mov
and
or
ret
mov
mov
cld
cmp
stc
jge
test
jl
popa
shll
aaa
inc
push
xor
subl
and
stc
test
in
pop
sbb
dec
std
mov
cmp
loope
pop
xchg
repz
fcmovu
int
jne
es
sub
jmp
jae
std
lea
loope
sub
xor
push
sarl
dec
xchg
arpl
aas
pop
cs
dec
shl
cmp
push
mov
jmp
push
les
addr16
add
push
test
pushf
push
and
nop
cmp
jne
aas
popf
movsb
xor
pop
lret
xchg
nop
dec
into
mov
mov
mov
add
push
lcall
xchg
rorb
popa
adc
dec
jbe
outsl
in
mov
loope
cld
fucomp
sub
rcrl
pop
sbb
bound
push
pushf
sub
add
inc
jne
push
push
mov
lahf
imul
xchg
out
lret
test
in
add
dec
mov
xchg
inc
scas
pop
outsb
out
sbb
pop
testb
fs
lods
pop
mov
pop
xchg
mov
dec
decb
pusha
shrb
pop
icebp
xchg
lds
loope
and
popa
shr
dec
fnstcw
ret
idivl
in
mov
mov
es
pop
outsl
sbb
icebp
test
or
and
push
inc
loopne
idivl
dec
mov
addr16
imul
daa
outsl
add
pop
push
add
outsl
mov
pusha
addb
jecxz
pop
into
cmp
jno
sbbb
cli
pop
addr16
movsl
mov
outsl
xor
shll
dec
ljmp
insb
loopne
pop
cmpsb
sub
sbb
push
xchg
out
push
out
rorl
xor
lcall
lods
into
or
std
and
lock
test
xchg
or
mov
push
mov
mov
addr16
cmp
push
fstp
xor
les
insl
xchg
mov
xor
mov
and
xchg
cmp
mov
pusha
xchg
push
dec
rol
sub
stc
jmp
test
push
int3
rcll
mov
lods
xor
ss
lret
sbb
add
mov
mov
mov
add
clc
fmull
pop
in
mov
jo
cmp
pop
add
cli
aas
add
pop
pop
loope
ret
pop
lcall
imul
cld
sbb
in
push
mov
mov
into
addb
aaa
test
aas
xor
xchg
enter
mov
lret
fistpl
nop
jmp
test
mov
xorl
lea
rcr
adc
out
xor
cmp
hlt
or
adc
xchg
out
add
mov
adc
add
xor
aam
xchg
jl
orl
and
cwtl
and
xor
cmp
mov
loopne
imul
pop
mov
mov
inc
dec
mov
jl
xchg
mov
and
lret
sti
cli
push
scas
test
cltd
adc
dec
push
xchg
mov
cmp
mov
hlt
lock
push
adc
dec
xchg
subb
out
stos
mov
imul
sbb
push
mov
push
adc
ja
cmp
aam
mov
push
ficoms
cmc
pop
nop
dec
pop
adc
add
in
jle
or
sti
cmp
push
shll
cwtl
add
push
push
in
pusha
and
hlt
popf
adc
mov
lea
mov
and
cltd
mov
imul
sahf
xchg
lcall
push
cmp
rol
pop
sub
lods
sub
cs
nop
pusha
lret
jecxz
inc
lods
jae
ds
push
xlat
push
jle
clc
push
xor
mov
scas
mov
mov
push
imul
or
je
push
inc
push
mov
call
divl
xchg
icebp
dec
or
data16
cs
adc
push
insl
jle
fists
sbb
ss
sahf
lds
push
je
xor
dec
mov
lods
cmpsb
mov
inc
jns
inc
pop
into
pushf
mov
and
push
into
ret
pop
dec
sub
sar
and
sbb
lods
popf
and
push
int
out
cltd
add
sbb
stos
mov
xor
pusha
stos
int
clc
mov
je
inc
push
shlb
ja
call
icebp
pop
push
ret
jb
int3
xor
or
sub
int
sbb
pop
mov
mov
out
sahf
call
lret
jmp
loop
dec
movsl
scas
leave
incl
stc
xor
mov
divb
xor
aam
dec
mov
adc
mov
arpl
jb
mov
jl
cmp
movsl
mov
std
xor
or
cmpsl
aam
nop
mov
mov
push
into
dec
cmc
scas
inc
loope
push
testb
in
daa
sub
or
adc
divb
jmp
pop
insb
lods
gs
dec
or
mov
cmp
into
cmp
in
mov
lods
mov
je
lea
dec
enter
xchg
push
mov
inc
mov
ds
sub
aaa
inc
repz
inc
or
stos
daa
ljmp
mov
inc
aam
ret
fdivrs
mov
sbbb
mov
rcrl
arpl
jnp
or
xchg
mov
inc
les
pusha
adc
es
ret
out
clc
popa
flds
jl
mov
xorl
lret
int3
ret
sbb
jecxz
fld1
push
hlt
mov
popf
in
adcb
pop
lret
inc
sbb
jns
mov
lods
xorb
push
lock
push
insl
lods
aaa
out
mov
lret
adc
jnp
push
pusha
je
pop
pop
xlat
lock
shr
ljmp
cltd
loope
add
jno
dec
jl
jbe
pop
out
repz
sahf
mov
mov
test
push
xadd
and
mov
dec
xchg
bound
and
push
faddp
cmp
pop
mov
into
clc
int3
dec
fildl
xlat
scas
sbb
fsubs
aas
push
pop
dec
repz
jmp
nop
icebp
mov
push
push
scas
and
pop
xchg
negb
fbld
push
call
adc
mov
subb
jp
repz
mov
pop
mulb
pop
sub
xor
adc
enter
js
mov
jecxz
mov
adc
test
mov
pop
mov
fstp
sbb
push
imul
imul
cs
fiaddl
cmp
sub
adcb
ficoms
pop
outsl
repnz
mov
adc
and
jecxz
xchg
push
push
dec
cld
mov
and
inc
fcomps
shl
scas
xorl
in
push
jge
xchg
inc
mov
or
and
adc
sbb
mov
repnz
mov
jbe
cmp
push
xor
clc
xchg
into
push
bound
dec
in
mov
mov
xchg
enter
lahf
sub
stc
sbb
mov
and
or
cmp
or
cmp
into
push
inc
add
lahf
mov
sahf
cmpsb
punpckhwd
add
stc
and
sbb
js
or
testb
mov
add
insb
in
or
jnp
mov
es
mov
mov
jno
mov
ja
dec
fistpl
xchg
into
ret
ret
jle
int
adc
es
and
or
add
cltd
jp
mov
sub
xchg
fsubs
stc
xor
add
mov
lret
inc
pop
and
inc
imul
mov
adc
movb
iret
mov
addb
arpl
jno
rcrb
pop
out
ss
cmpsl
mov
outsb
sub
fistpl
nop
pop
iret
in
fbld
fldenv
shr
fdivrp
pop
movsl
mov
fwait
jmp
add
cmpsl
stos
cs
imull
test
into
incl
ss
js
movsl
xchg
out
shll
sbb
mov
nop
push
mov
push
scas
outsb
xor
ja
mov
xchg
loope
fsts
jmp
sbb
ja
mov
sub
lods
and
loopne
jb
add
mov
cmp
sub
pop
addb
add
arpl
in
outsl
push
xchg
cmc
in
adc
fmulp
out
iret
xchg
scas
ja
xchg
and
pop
or
pop
cmc
mov
lret
mov
cwtl
test
push
cmp
push
inc
jge
mov
mov
lret
rorb
or
sahf
fcmove
lret
scas
imul
lods
jecxz
xor
in
clc
std
sahf
push
cmc
and
mov
jnp
or
or
mov
jg
jno
push
xchg
mov
dec
jle
sub
cli
ljmp
testb
pop
pop
pop
inc
dec
out
imul
jmp
sti
push
out
cmc
inc
mov
fstpt
pop
xor
pushf
shlb
outsl
adc
push
xchg
frstor
xor
enter
test
pop
inc
xchg
fdivrl
icebp
jno
cld
mulb
lret
adc
mov
mov
inc
jge
fidivrs
jmp
jb
fwait
mov
cmp
or
mov
mov
xor
sbbb
adc
mov
inc
cmp
inc
mov
stc
jbe
pushf
aas
dec
inc
mov
in
ds
ret
cwtl
jbe
int3
iret
sarb
cmpsl
mov
mov
cmp
mov
clc
mov
hlt
jmp
jno
stos
push
xchg
out
ds
mov
mov
jl
sbb
sub
inc
dec
or
cmp
int
xchg
out
or
imul
sub
fmul
in
xchg
add
dec
into
fdivr
jo
add
mov
or
imul
ja
push
adc
mov
and
imull
push
aas
rcr
outsl
shlb
xor
aad
ret
mov
cwtl
sbb
dec
adc
fstpt
int
add
cmpsl
inc
jno
and
push
pop
add
insl
jl
ljmp
pop
rcl
xor
adc
xchg
push
cmp
fwait
jne
mov
pushf
in
rolb
jmp
sbb
inc
aad
adcb
pop
pusha
pop
cld
daa
sbb
and
movsl
sbb
jg
icebp
repnz
mov
out
imul
and
and
stos
jle
xchg
icebp
movsb
dec
add
adc
dec
addl
pop
aam
cmpsl
sub
mov
mov
or
jno
inc
pop
mov
jae
ds
mov
ret
jmp
jo
cmp
mov
and
push
mov
je
scas
inc
dec
adc
imul
js
insl
mov
fildll
xor
shrb
out
push
jne
push
std
jecxz
ja
jmp
cmp
scas
inc
cmp
inc
jecxz
or
mov
jg
lret
xchg
scas
lcall
inc
push
mov
aam
inc
mov
xchg
aas
cltd
add
xor
fistps
xchg
sub
pop
addr16
jmp
inc
pop
sbb
pop
lds
mov
ror
jmp
shlb
and
aaa
out
dec
or
push
aad
das
ret
add
out
and
fnstsw
call
dec
ret
inc
mov
and
cwtl
jb
adc
or
cli
ss
les
push
arpl
lods
fnstcw
mov
rcl
mov
fildll
xchg
das
push
testb
push
pushf
push
in
sub
int3
inc
dec
push
mov
out
xchg
push
and
xchg
or
cmpsl
xchg
mov
gs
and
loop
jecxz
cmp
out
push
push
mov
stos
push
test
jl
fwait
pop
cmp
pusha
inc
fwait
rolb
jg
inc
xchg
mov
sahf
aas
dec
mov
cmp
or
xchg
int
outsl
pop
xchg
mov
add
movsl
movsb
les
inc
inc
repz
fnstsw
add
push
fsts
mov
in
ret
sbb
popa
lahf
mov
xchg
jb
ss
jp
out
xor
jo
mov
cmp
xor
sbb
icebp
repz
fcmovb
loop
mov
or
adc
arpl
adc
sbb
dec
repnz
js
mov
push
sub
pop
jl
sbb
and
inc
test
add
cmp
fldl
sub
ss
mov
cltd
fstpt
rcrl
xor
adc
iret
leave
fsubrs
insb
test
testb
insl
xchg
inc
fmul
lcall
popf
movsb
popa
pop
nop
dec
data16
adc
lret
xor
pop
jp
push
into
lret
pop
dec
dec
pop
inc
xchg
in
xchg
mov
xlat
mov
adc
jb
inc
inc
mulb
add
jno
xor
mov
les
lods
sbb
and
jbe
pop
inc
enterw
mov
adc
mov
and
test
cmp
sbb
andl
sahf
sub
inc
ljmpw
jge
mov
push
rorl
divb
or
jmp
int3
xlat
das
jae
andb
dec
stc
dec
out
xor
xchg
push
cmp
filds
or
jne
xchg
inc
dec
xchg
or
xor
jno
sbb
dec
jo
dec
aas
mov
sub
sarb
rcrb
and
fsts
sbbb
lods
mov
fs
jb
rclb
mov
inc
mov
out
and
mov
jecxz
inc
addb
jns
jle
push
fadd
ret
push
push
lret
lods
push
inc
or
push
aaa
es
repz
push
inc
test
jmp
cmp
pop
cwtl
mov
inc
sti
jbe
cmpsb
and
test
dec
lret
popa
push
sub
aad
sbb
sbb
js
mov
or
jo
int3
jp
cmp
add
mov
xchg
inc
jle
pop
nop
mov
shlb
xchg
pop
mov
jae
xchg
lahf
dec
inc
rep
ret
cld
mov
shlb
or
add
and
pop
sbb
mov
pop
enter
xchg
aam
lds
ds
cmp
in
push
mov
imul
inc
mov
mov
lods
test
imul
jp
sub
shll
movl
sub
stos
pushf
sbb
inc
jl
xchg
dec
cli
sbb
fwait
cmp
in
jno
and
cmc
xchg
shll
sti
arpl
cwtl
push
push
in
inc
arpl
out
push
cmp
mov
lret
scas
pop
jle
push
outsl
fdiv
xor
dec
sub
push
and
dec
sbb
pop
jg
xlat
xchg
push
mov
lahf
cltd
push
in
jne
push
xchg
subb
push
lea
dec
fsubr
mov
insl
push
push
inc
rcll
test
pop
fs
push
push
jmp
and
out
out
orb
sub
adc
mov
in
pop
dec
mov
stc
es
sti
in
jb
fistl
xchg
sbb
pop
and
sub
and
dec
ret
jg
in
and
ret
pop
inc
fsubrs
jo
sub
xchg
mov
push
add
inc
enter
cmpl
pop
push
fistpll
js
mov
nop
mov
jg
and
sahf
pop
std
cmp
rorl
cmp
shl
or
sub
adc
out
inc
mov
xchg
insb
test
cmp
negb
lock
cmpsb
out
outsb
cltd
shrl
sub
fisttpl
cltd
das
jecxz
mov
lret
orb
mov
shrb
mov
mov
cld
mov
xchg
inc
bound
inc
add
xabort
imul
cmpsl
call
js
out
notb
and
repz
je
push
jmp
mov
gs
daa
lret
jle
movsl
iret
pop
fistl
pop
push
push
mov
mov
or
out
jbe
int
cli
je
dec
adc
test
adc
out
push
in
lods
inc
call
shlb
out
andb
and
push
lods
fdivr
lret
lcall
dec
dec
pop
and
std
fmull
dec
and
outsl
ror
sub
not
roll
imul
push
cli
pop
sahf
cmp
adc
xchg
fdivrl
and
sub
push
sbb
xor
std
push
cmc
rolb
gs
dec
cwtl
mov
inc
fisttps
pop
loopne
mov
or
mov
cmp
popa
sbb
stos
jne
pop
jmp
cmp
or
es
cmpsb
sbb
xchg
jns
mov
imul
out
cmp
jmp
or
or
cwtl
mov
push
pop
jae
shll
popa
sub
push
rorl
imul
jo
je
or
cwtl
cmp
adc
sub
out
cmp
and
jp
aaa
cmc
pop
and
aam
push
jp
mov
mov
jb
mov
cmp
push
sbb
pushl
mov
negl
or
mov
fnstsw
mov
shll
das
mov
add
inc
sub
adc
cmp
sbb
in
or
repnz
int
xchg
dec
addl
push
cmpsl
lahf
xchg
mov
test
or
or
cld
data16
add
or
inc
jb
daa
dec
sbb
fs
cmp
xchg
in
mov
jne
nop
loop
std
or
bound
je
xchg
test
xor
sub
lds
or
lcall
add
pushf
xchg
jmp
into
pushl
cwtl
daa
push
pop
std
lds
lods
aad
dec
mov
in
aaa
inc
test
shrl
mov
daa
mov
in
pop
aad
xor
jnp
outsl
xor
int3
jns
inc
call
push
xchg
stc
mov
sub
add
les
popf
idiv
sub
ficoml
xchg
imul
movsb
jae
add
lret
adc
push
dec
mov
mov
add
xchg
sub
jbe
push
inc
push
ja
mov
pop
xchg
mov
lahf
push
inc
sbb
mov
andb
aas
pusha
rcll
repz
push
pop
jb
mov
dec
push
mov
jno
lods
inc
sbb
loop
cmp
in
mov
sbbb
insb
push
pushf
mov
jbe
sub
in
xchg
xorl
adc
test
pushf
mov
push
imul
jmp
loop
adcl
pusha
push
stc
xchg
xchg
xchg
scas
lods
in
leave
jo
in
add
dec
xchg
jo
out
out
rcrb
lock
ret
pop
loope
sub
sub
pushf
and
cmp
xchg
lods
xlat
dec
adc
xor
int
jecxz
push
jae
push
bound
jo
or
jae
cmp
sbbl
sub
insl
sbb
dec
and
leave
sub
repz
push
popa
pushf
out
push
imul
lret
stc
push
add
sbb
add
lea
add
pop
lds
test
fs
mov
and
push
fimuls
lcall
test
ret
or
jg
xchg
add
sub
dec
lds
in
pop
daa
push
dec
lret
cmpsl
add
sbb
pop
sahf
ret
mov
push
fcmovu
cmpsb
js
stos
push
imul
lds
add
imul
or
inc
ss
add
lcall
mov
add
fldt
mov
out
pop
stos
int3
decl
jp
sbb
into
dec
movsl
insb
adc
jle
lret
pushf
inc
pop
and
std
bound
pop
push
or
jle
sub
xor
sar
xchg
sbb
lahf
mov
ret
insb
aaa
push
dec
dec
sub
fsub
addb
leave
dec
lea
cmp
cmp
aam
shr
and
ja
aas
aam
jbe
add
jno
out
fimuls
out
xchg
cli
add
pop
mov
rorb
movsl
or
lahf
pop
xchg
mov
cmp
andb
xchg
jl
jb
repnz
in
insl
sbb
cmp
hlt
add
or
add
push
repnz
and
xor
leave
xchg
fstpt
daa
mov
sbb
mov
outsl
and
ss
cs
xor
insb
pop
js
cmp
mov
lret
test
sbb
jae
ret
push
jmp
jmp
pop
lret
outsl
in
aam
movl
pop
fisttps
inc
pop
dec
sub
dec
js
ret
pop
and
iret
inc
mov
mov
mov
insl
jmp
lods
push
inc
mov
stos
cmpsl
je
jecxz
stc
in
push
std
dec
jp
fistps
loope
push
nop
or
aam
push
xchg
push
aas
loope
jg
movsl
add
daa
std
cmp
adc
pop
outsl
jmp
sbb
fisubrs
mov
cld
test
rcr
add
in
jne
pushf
out
loop
push
fwait
cmp
xchg
pop
jp
sbb
subl
neg
jae
jle
adc
flds
loop
xchg
inc
push
fmull
ret
sbb
or
in
aaa
mov
sahf
outsb
outsb
mov
cmpsl
push
leave
hlt
or
in
mov
sti
sub
sub
mov
cmp
fdivl
mov
lods
lds
outsl
loop
enter
pop
aad
mov
or
lods
jecxz
shll
leave
xchg
jle
xor
mov
or
stc
cmpb
in
jo
dec
subb
inc
pusha
adcb
cli
rcrl
lret
je
nop
adc
clc
addb
pop
out
pop
ljmp
clc
decb
test
sti
and
decl
mov
es
push
repz
mov
adc
fldenv
mov
aas
jnp
loop
pop
cmp
jbe
rcl
orl
addr16
add
mov
push
cmp
movsb
arpl
sub
stos
fisubs
push
dec
ret
clc
jbe
inc
xchg
clc
addl
test
xchg
xchg
pusha
cmp
adc
xchg
addr16
cmp
int
xchg
add
arpl
outsb
cmp
iret
push
mov
mov
xchg
stos
mov
outsl
test
call
and
push
inc
push
dec
mov
adc
mov
lods
adc
repz
inc
pop
and
sub
fsubp
jb
push
sbb
std
xchg
aaa
jns
jle
lret
cmp
jno
push
insb
movsl
loope
xor
inc
adc
sbb
mov
rorl
jmp
lea
cli
test
shrl
xor
sub
xchg
add
mov
push
pop
dec
test
rcr
adc
jne
lods
xchg
ret
das
sbb
shl
stc
in
mov
aas
std
jge
mov
pop
mov
pop
cli
cmp
enter
push
ss
cli
loopne
cmp
gs
and
int
mov
add
lock
xor
jmp
shr
mov
loope
inc
xchg
enter
movsb
lods
mov
sub
xchg
mov
cmp
insb
dec
test
xor
xorl
mov
or
inc
loope
iret
bound
jge
jge
hlt
mov
push
sysexit
jo
js
lods
divl
pop
and
sbb
repnz
test
les
das
sbb
jmp
in
jae
mov
andb
mov
jmp
pop
xchg
push
add
jmp
iret
cmpsl
test
pushf
loopne
repnz
scas
lds
sbb
stos
sub
sbb
sub
ror
outsl
dec
pop
in
sbb
or
push
popf
test
lret
jbe
sub
or
jge
pop
push
cmp
ljmp
lahf
aam
ja
cwtl
pop
adc
dec
inc
and
fisubrl
add
popf
cwtl
scas
dec
add
pushf
fldt
lods
xchg
lock
sbb
in
xchg
and
and
in
cmp
mov
add
xchg
xor
leave
aam
xchg
mov
or
mov
and
jle
repnz
jp
loop
cmp
insb
adc
mov
sub
lods
dec
imull
xchg
dec
sbb
xorb
mov
mulb
cli
lods
and
xchg
movsb
mov
or
jle
adc
inc
xor
loopne
mov
xor
cmp
mov
mov
add
push
push
roll
mov
xchg
push
jnp
dec
push
sub
xor
or
dec
rcl
notb
movsb
stc
divb
cmpsl
and
and
mov
jne
jg
jmp
mov
je
jns
inc
test
mov
jg
and
test
adc
inc
fistl
adc
cld
cmpsl
mov
dec
xor
xchg
jb
insl
jnp
add
lcall
jecxz
ret
outsb
xchg
add
xor
fimuls
jb
ljmp
add
xchg
dec
inc
cs
filds
pop
push
dec
or
ret
dec
aaa
loop
test
pushf
cmc
inc
mov
push
add
pop
pop
or
xor
dec
inc
enter
les
nop
scas
mov
in
pop
loop
dec
mov
pop
and
dec
add
pusha
mov
adc
lret
pop
mov
scas
rolb
mov
and
pusha
mov
xor
cltd
adc
inc
sbb
or
cmpsl
sub
xor
adc
pusha
mov
loopne
or
mov
add
popf
jp
nop
shll
ljmp
popa
shll
cmpsl
sti
xchg
cli
loopne
shl
inc
mov
or
ljmp
es
and
stos
mov
test
add
push
in
ss
aas
ljmp
inc
test
mov
inc
mov
xor
cmpl
aam
out
xor
aad
xchg
je
imul
cmpsb
nop
or
inc
in
xchg
xor
pop
clc
in
add
jmp
cpuid
mov
pop
push
push
xchg
mov
pop
daa
add
orl
imul
cmpb
dec
push
rcl
stc
xlat
out
xchg
movsl
int3
mov
js
inc
shl
adc
jmp
pusha
or
in
pushf
push
sbb
push
clc
add
clc
enter
gs
xchg
jg
jnp
test
push
mov
pxor
cmp
fsts
mov
add
lods
out
lods
pop
loopne
pop
es
cltd
ja
xlat
cmp
test
push
enter
mov
mov
push
xchg
dec
les
add
scas
in
pop
add
ja
test
ret
jne
fnstsw
pop
pop
ss
clc
jl
sub
and
mov
dec
push
fadds
fcmovnb
call
push
fildll
test
insb
mov
or
shrb
adc
inc
gs
sbb
xor
sbb
lods
jp
addr16
jbe
dec
xchg
pop
popf
jp
xlat
sti
out
sbb
loope
sub
jge
mov
push
fldt
jl
rcrb
pop
and
xlat
inc
adc
mov
je
ljmp
xor
jnp
inc
daa
stc
das
inc
push
or
loopne
and
push
jl
rcrl
sub
js
out
xchg
jno
add
cltd
mov
adc
jno
and
fidivrs
andl
pop
and
lcall
sbb
repz
jbe
xchg
mov
lods
outsl
movsb
adc
aad
push
xchg
or
loope
jo
scas
stos
repz
lods
mov
loop
xchg
inc
jo
pop
cvttps2pi
inc
mov
ret
cltd
loopne,pt
xor
sti
insl
add
mov
push
jge
les
mov
xor
sahf
gs
fs
mov
add
stos
sahf
int
push
xchg
pop
push
jle
int3
or
cmp
jle
stc
outsl
add
push
xchg
inc
imul
aad
jo,pt
jno
push
shll
test
xor
xchg
sbb
in
sub
fidivs
mov
rcll
js
cmpsb
lock
lret
mov
ja,pt
or
xchg
xor
inc
mov
add
xchg
sub
mov
pop
sbb
push
mov
dec
xor
dec
rcrb
repnz
xor
or
stc
dec
cwtl
pmulhuw
sbbb
xor
dec
enter
faddl
dec
in
cld
add
xor
xlat
fidivrs
inc
scas
imul
dec
jo
cs
ficompl
nop
cmp
nop
mov
jne
jno
pusha
or
testl
test
ret
jl
insb
lds
inc
pop
aam
jnp
cmp
pop
ljmp
cmp
or
push
fisttps
push
adc
aas
xchg
int
xchg
jmp
insl
xchg
mov
mov
mov
test
pop
div
les
cmpsl
dec
aas
lcall
mov
cmc
inc
cmp
dec
adcl
cwtl
pushf
das
lea
and
pop
pop
and
fsubrs
movsb
cs
sbb
push
decl
addr16
fwait
mov
adc
cltd
jno
in
jae
pop
xchg
stos
push
fldl
ss
pop
icebp
rcrl
cmovb
sarb
mov
add
stos
push
xchg
mov
push
dec
out
xchg
push
mov
pusha
mov
mov
aam
stos
fidivl
mov
sub
xchg
in
and
stos
lcall
scas
push
movsl
gs
lea
lcall
cmp
cmp
dec
arpl
repnz
pop
push
inc
pusha
fdivrl
add
sub
fcoms
popa
cmpsb
add
inc
lcall
stos
push
adc
cmpsl
aam
mov
call
push
ret
and
fdivrs
xchg
mov
daa
adc
cltd
cmc
stc
pusha
mov
pop
mov
jb
or
sti
lret
cltd
pusha
push
scas
jnp
std
fisttps
mov
cmp
jmp
lock
call
lcall
mov
outsl
sbb
dec
jne
jmp
nop
out
addr16
pushf
outsl
jle
loope
fiaddl
pop
sub
hlt
sub
daa
sbb
jmp
aam
mov
inc
sub
mov
or
insl
push
mov
fwait
outsl
subl
sub
sub
fwait
loop
sti
sbb
sub
mov
push
sbbl
dec
add
adc
aaa
xchg
cmpsl
cmp
mov
scas
aaa
stos
insl
cld
jns
push
ret
or
test
mov
cld
sub
mov
das
or
mov
mov
shrb
sub
imul
jl
push
in
jb
mov
test
scas
xchg
rorb
lret
or
in
cmp
imul
jns
dec
jl
cmc
cli
mov
cwtl
pop
jl
call
xchg
adc
jge
xorb
bound
dec
mov
xchg
sub
insb
mov
ss
adc
ja
iret
xor
xor
fwait
int3
lret
fsubrl
aam
pop
mov
pop
mov
dec
cmp
cmp
pop
push
jb
mov
mov
stc
shr
sti
inc
pop
shlb
movsl
dec
sub
std
xor
inc
mov
xchg
lahf
or
mov
mov
popf
dec
pop
add
imull
adc
cltd
xchg
mov
repz
add
ja
add
pop
add
std
dec
pop
test
ljmp
sub
outsb
jbe
mov
lods
ret
dec
cmp
pop
mov
popf
add
sbb
xor
lahf
mov
mov
sti
sub
mov
ret
push
xor
xchg
fiadds
mov
pushf
fimuls
mov
push
jg
dec
inc
cmp
inc
popa
inc
xor
out
push
in
cmp
hlt
or
movb
loope
jl
jecxz
js
or
push
sub
cs
mov
popf
insb
shll
adc
lcall
test
loope
xchg
dec
mov
push
or
sub
mov
std
and
xchg
out
call
test
jae
xor
adc
jg
hlt
in
mov
jp
fisubl
arpl
xor
ljmp
xchg
ja
cmp
incl
add
insl
jecxz
or
into
mov
ret
jmp
cmpsb
ret
adc
ljmp
xchg
mov
scas
mov
inc
bswap
cmc
pop
xchg
mov
mov
push
pop
divl
enter
mov
mov
adc
push
pop
add
pusha
sarb
xchg
push
stos
jno
loopne
or
fcomp
movsl
scas
mov
push
loop
stos
int3
movsl
mov
imul
cmp
or
and
add
adc
xchg
aas
shrb
dec
push
and
in
xor
data16
mov
push
inc
add
pop
ret
rclb
mov
add
and
jg
push
filds
jg
push
shl
in
jmp
sbb
push
repnz
push
jb
push
nop
lahf
mov
fnsave
into
jns
popa
pop
in
lcall
and
jmp
addb
pop
ljmp
notrack
add
xchg
dec
or
test
ret
gs
mov
jl
rcll
cs
jnp
sahf
sub
jno
mov
mov
lret
sbb
inc
aam
fisttpl
xor
push
mov
sub
loope
sbb
pop
test
jno
push
mov
pop
jmp
mov
iret
aad
sub
push
mov
or
sbb
aam
mov
cmp
and
mov
aam
jae
inc
in
out
cmp
jp
mov
fisttpll
xchg
aam
xchg
mov
xchg
aaa
jnp
mov
add
jo
rclb
cltd
ja
mov
fdivrl
sbb
xchg
mov
mov
fwait
repnz
push
mov
and
push
data16
aas
mov
jno
dec
xor
fadds
mov
int3
loop
fisubs
fiaddl
fwait
scas
lahf
arpl
sbb
cmp
cmpsb
sbb
adc
andl
and
add
or
mov
or
mov
aam
scas
mov
subb
cmp
mov
lock
movsl
adc
cmp
pop
mov
inc
inc
stos
add
jecxz
mov
adc
jne
test
js
pop
cld
in
xchg
rcrl
lahf
cmp
cld
xchg
jnp
or
lret
outsl
xor
sarl
push
sub
adc
jmp
shrl
mov
inc
out
enter
jmp
and
mov
mov
scas
cmp
add
inc
shll
xchg
inc
cmp
xchg
dec
pop
push
mov
fwait
jge
gs
push
int
paddw
adc
sbb
and
fstpt
adc
das
stc
sbb
sbb
cld
xorb
nop
mov
jmp
cwtl
xor
sbb
insb
sarl
mov
enter
je
pop
icebp
fldl
lahf
xor
xchg
lds
and
pop
xor
test
inc
rol
cld
fimull
in
jbe
outsb
mov
inc
cwtl
add
outsl
pop
xor
xchg
pop
cltd
push
sub
push
test
mov
test
rcrl
mov
insl
mulb
imul
jne
sub
mov
cwtl
add
cs
and
dec
jl
rclb
in
or
pusha
mov
dec
and
mov
mov
adc
incl
inc
push
ja
arpl
lock
adc
add
adc
jno
add
mov
cli
repz
xchg
add
pop
xchg
push
adc
xchg
mov
and
int3
adc
cmc
jno
stos
and
pop
enter
mov
and
push
jno
pop
ss
pop
test
arpl
jle
fs
int3
mov
mov
stos
cltd
into
scas
xlat
mov
ret
xchg
test
shlb
andl
mov
ds
stos
push
push
and
shrb
xchg
cli
dec
add
xor
mov
je
shll
adc
aaa
mov
lret
int3
dec
jne
sub
cmp
hlt
mov
cmp
daa
jmp
add
push
pop
fsubr
lds
icebp
xor
pushl
dec
pop
jecxz
sbb
push
xchg
ljmp
ljmp
mov
fnstcw
xor
jmp
jb
shlb
jbe
loop
ja
stc
fiadds
pop
jo
pop
sti
cmpsl
adc
dec
cwtl
test
in
mov
lods
sub
mov
cli
push
jp
into
sbb
pop
rcrb
frstor
inc
add
lret
jne
and
iret
popa
inc
sahf
push
xor
adc
mov
std
divb
test
cmp
jo
mov
sbb
ja
cld
sahf
div
jl
mov
adcb
pop
mov
andb
jg
es
xor
insl
je
test
cmpsl
push
jo
mov
scas
fidivrl
push
xchg
add
ja
nop
mov
es
xorl
repz
xchg
iret
cmpsl
pop
loop
inc
and
stc
ds
or
jb
and
pop
push
lods
cmpsb
adc
lods
call
xchg
int3
aad
in
cmp
or
sub
or
sbb
in
aad
subb
mov
fdivs
dec
mov
orb
lcall
sub
inc
cmp
jg
rcr
pop
dec
push
imull
outsl
push
mov
rol
mov
enter
inc
mov
jne
fwait
push
jmp
xchg
icebp
xchg
shlb
xor
and
xchg
or
ret
xchg
inc
sbb
pop
add
imulb
negb
and
cmp
mov
xchg
cwtl
movsl
push
sbb
mov
and
lahf
inc
loopne
mov
sbb
pop
fidivrl
bound
ljmp
xchg
push
mov
xor
jecxz
in
mov
ja
leave
xor
clc
mov
das
call
pop
insb
stos
out
xchg
and
movsl
xor
mov
and
aas
jp
pop
push
lods
and
ret
jbe
mov
mov
push
insl
jmp
jecxz
je
push
aaa
pop
test
or
push
sub
lock
push
and
loopne
xlat
in
dec
cmp
mov
add
push
mov
iret
lret
arpl
jnp
add
jg
adc
inc
fbld
sub
sub
shlb
gs
lret
cmp
cmp
mov
sub
pop
push
xor
test
mov
clc
loop
cmp
les
jp
cmp
cs
mov
fisubs
push
rol
loop
mov
inc
dec
shll
inc
test
xor
pop
mov
pop
dec
xchg
and
add
idiv
in
adc
push
cmp
mov
ret
inc
negl
ret
xchg
push
mov
inc
imul
push
adc
div
in
push
add
cld
pushf
mov
es
lods
das
pop
ss
por
xor
or
pop
dec
test
inc
outsl
lret
inc
add
mov
mov
aas
mov
into
push
jp
and
mov
repz
mov
cli
mov
dec
insb
iret
pushf
rorl
inc
fcompl
jg
mov
inc
jge
push
jp
jno
mov
scas
arpl
mov
mov
loop
inc
nop
ss
out
push
dec
mov
stos
mov
dec
bound
mov
push
mov
in
pop
int3
pop
dec
xchg
mov
pusha
jle
jno
cltd
ljmp
mov
jmp
jecxz
mull
pop
adc
sahf
jg
stos
iret
out
pop
sbb
push
imul
shrl
sbbl
mov
lret
mov
stos
stos
lods
mov
pop
cs
mov
js
inc
mov
sub
rclb
fisubs
cwtl
mov
pop
pop
inc
mov
push
and
in
cli
andl
je
in
test
xor
int
cmpsl
stos
fildll
mov
push
cwtl
lea
lea
data16
stc
xchg
jge
xlat
cmpsb
test
mov
repz
sub
stos
cmp
repnz
fdivl
scas
scas
sbb
loop
inc
orb
test
frstor
lcall
pop
jle
in
stos
stos
xor
push
lcall
cmp
sbb
into
repz
mov
ja
ficompl
in
aam
test
fildll
aaa
mov
popa
push
sahf
lcall
leave
dec
daa
into
popf
jl
je,pn
inc
lea
cmp
pop
push
test
repnz
sar
not
in
outsl
hlt
ja
cmp
mov
cli
cmc
fimuls
mov
popf
mov
mov
jg
inc
decb
inc
xchg
cmp
inc
adc
sub
adc
testl
cmp
insb
mov
cltd
aam
mov
pop
out
mov
imul
out
pop
xor
xchg
mov
insl
xchg
xchg
mov
mov
sti
cld
pusha
pop
jg
add
out
test
xor
mov
mov
cmp
xor
mov
roll
push
inc
pop
mov
dec
popf
arpl
lahf
mov
push
fimuls
lahf
test
pop
dec
sub
add
push
ret
dec
jne
and
mov
dec
fnstsw
in
sub
mov
out
in
mov
lret
lock
add
hlt
pop
or
xlat
xchg
sub
loop
sub
pop
or
lret
test
jmp
cld
push
scas
push
lea
in
insl
add
lods
mov
dec
orl
lcall
jb
add
sbb
movb
ljmp
pop
xchg
and
cmpsb
sub
sub
lret
call
or
in
call
testb
xor
xchg
imul
push
sarb
sub
loopne
inc
sti
jns
gs
push
jbe
xchg
mov
test
dec
les
daa
into
mov
mov
or
xlat
loopne
int3
mov
test
test
stc
mov
mov
cli
mov
adcb
pop
sub
mov
mov
push
arpl
inc
mov
mov
test
cmp
pusha
repz
jbe
xor
in
lods
shll
mov
and
sbb
mov
mov
push
out
mov
xchg
xchg
pushf
mov
in
hlt
dec
xlat
ret
call
mov
pop
clc
jns
xchg
out
mov
lret
mov
mov
jge
add
dec
incb
xchg
add
loope
fwait
xor
cmp
jne
cli
inc
movsl
lret
push
mov
lcall
mov
fwait
ds
orl
jmp
mov
mov
imul
int3
fcmove
cmpsl
cmp
cmp
cmc
sbb
mov
sub
push
add
mov
cmpsl
fisttpll
iret
push
pop
cmp
nop
rcll
sbb
sbb
pop
add
jmp
testl
cmpsl
sbb
push
cmpsl
lods
sub
mov
mov
ja
fwait
xor
pop
fwait
xrelease
out
push
movsb
ss
shlb
fwait
enter
jns
fsubr
cld
into
scas
mov
lret
push
mov
scas
shrl
adc
jbe
ja
hlt
stos
push
jmp
int3
aas
test
xor
iret
fldl
cmpsl
cmp
and
outsb
push
rorl
insl
lock
sti
jg
pop
mov
jmp
dec
pop
jmp
cmp
mov
stc
pminsw
scas
ja
jne
popa
cmp
outsb
mov
fisubrl
lea
movsl
fidivrl
dec
jmp
repnz
scas
in
cld
cmp
cmp
mov
test
test
pop
jbe
mov
push
divl
divb
pop
sar
jne
test
sbb
lock
jnp
cmpsl
fnstenv
xchg
addl
popa
sbb
add
inc
fs
int
into
cmpsl
or
adc
addb
pop
into
imul
pop
aam
and
add
jecxz
imul
xor
loope
imul
adc
popa
mov
ss
iret
orb
and
mov
mov
leave
pusha
mov
out
lret
fisttps
out
mov
cmpsb
sbb
addr16
mov
sub
add
adc
and
mov
xchg
or
dec
xor
and
or
sbb
xor
in
dec
jns
pop
inc
add
test
loopne
in
fsubs
sbb
mov
pusha
sbb
sahf
fbstp
and
xchg
loope
inc
cmp
mov
cmp
popf
mov
je
adc
add
push
or
dec
mov
cmp
in
testb
mov
and
stos
or
xor
dec
fwait
dec
adc
add
imul
out
jae
scas
dec
or
add
stc
sub
mov
mov
pop
subb
mov
sub
out
sbb
cmp
les
adcl
push
les
cs
mov
gs
cmp
xor
dec
lds
fcoml
and
inc
push
lea
or
xlat
out
addl
subb
in
or
fwait
loop
jl
push
xor
scas
dec
sub
jecxz
insl
or
rol
mov
xor
arpl
mov
push
pop
xor
cmp
mov
rcr
movsb
xchg
xor
pop
test
int3
jbe
and
ds
aas
pop
push
les
fucomi
push
ja
int3
fiaddl
jae
addb
test
push
push
lret
pop
lret
dec
movsb
dec
loope
jo
js
aam
pop
fldt
or
pop
scas
inc
dec
sub
dec
cmp
mov
xor
into
jmp
xchg
iret
jns
inc
jp
pop
lea
sub
call
push
pop
cmp
dec
mov
imul
loopne
clc
pop
shlb
je
movsb
jo
data16
in
stos
and
lods
arpl
hlt
mov
mov
fimuls
jne
mov
aam
pop
gs
cmc
stos
jb
or
adc
movsl
adc
add
xor
lret
lods
lahf
pop
pop
cli
test
les
push
add
mov
mov
test
sbb
cmpsb
xchg
xor
lahf
add
mov
mov
pmaxub
bound
bound
xchg
push
dec
insl
stos
sbb
xchg
adc
aad
or
mov
mov
sub
inc
mov
xchg
lds
cmc
outsb
cmp
xchg
add
mov
inc
fidivl
sub
pop
aaa
pusha
daa
cmp
mov
daa
pop
sub
out
ja
shrl
sub
dec
dec
inc
dec
je
xchg
xor
cmp
out
daa
fs
sub
cmpsl
or
repz
out
lahf
sbb
popf
dec
sub
adc
and
mov
mov
push
icebp
das
cmp
pop
sbb
ret
rcrb
js
addr16
daa
jmp
rcrl
inc
aaa
stos
es
cltd
imul
ret
pop
push
or
mov
fs
icebp
jmp
push
movsb
or
sbb
xchg
sub
aaa
std
sub
lds
movsb
xlat
fabs
ljmp
and
xor
inc
outsb
adc
rorl
stc
adc
push
out
cmp
mov
pop
jno
pop
and
aas
insl
outsb
cmp
xchg
flds
pop
bnd
loope
mov
test
into
fdivl
adcb
lret
adc
leave
and
ss
imul
push
push
repnz
stc
das
scas
push
xchg
mov
in
pushf
icebp
cld
insb
mov
call
lods
push
daa
lods
icebp
lds
xor
mov
cld
movsb
out
cmpsl
fnsave
sbb
leave
das
orl
or
aad
xor
pushf
stos
ret
sbb
inc
loop
adc
or
fnstsw
xor
jg
jmp
adc
dec
in
pusha
and
orb
xchg
cwtl
sub
aam
sbb
lds
or
adc
dec
fiaddl
lret
jns
in
imul
jmp
xchg
push
in
xor
and
test
jno
daa
dec
idivl
push
jae
test
pop
ljmp
mov
or
rcrb
pushf
mov
cmp
shlb
mov
cmp
movsb
fwait
popf
leave
add
push
daa
rcr
repnz
push
mov
jae
mov
hlt
mul
cmp
mov
jbe
insb
push
divb
iret
lds
in
pop
sub
addl
into
mov
out
mov
ss
sub
and
adcl
adc
sbb
in
fs
outsb
out
repz
push
cmp
ficoml
mov
mov
cld
push
push
das
mov
das
xor
adc
xchg
rolb
ret
sbb
imul
adc
mov
nop
xor
push
adc
stos
outsl
pop
or
xor
mov
adc
pop
pop
push
cmpsb
inc
call
jo
nop
idivb
in
sbb
or
push
stos
xor
gs
fwait
mov
nop
shl
stos
scas
or
xor
mov
ficomps
je
sub
call
cmp
cli
je
pushf
js
stc
cmp
pop
jmp
and
xchg
movsl
sub
enter
clc
pushf
andb
push
js
shll
add
shl
fs
in
jbe
or
les
jne
jge
int3
jbe
cmpsb
clc
and
int
xchg
in
xor
pushl
enter
insl
xor
call
dec
xchg
data16
add
sub
cmp
mov
pop
inc
jle
adc
push
lods
sti
mov
jb
xlat
push
mov
or
enter
inc
mov
and
fldl
or
mov
mov
rolb
jbe
and
adc
or
adc
and
jle
flds
lcall
xor
or
dec
fdivrs
ljmp
push
dec
pop
scas
adc
push
popl
jmp
nop
cmp
cli
out
icebp
loop
dec
mov
fwait
xor
xchg
insl
add
sbb
push
cs
roll
in
cltd
icebp
lods
cmpsl
outsl
cmp
cld
clc
shlb
daa
xchg
fistps
in
xor
dec
inc
xor
pop
mov
fidivrl
les
xchg
mov
iret
mov
test
push
jle
in
ds
push
inc
popa
sti
outsb
push
jne
sub
stc
push
mov
pusha
adc
sub
das
dec
xlat
mov
outsb
xor
jno
cmpsb
dec
aas
das
lods
dec
jno
sub
sub
fidivrs
out
test
pop
cmp
lods
mov
cmpsb
negl
sbb
add
hlt
xchg
push
xor
push
jbe
fs
test
in
loop
and
fcmovbe
jp
add
cmp
fmull
cmp
lock
popf
xor
and
shlb
cmp
lret
pop
cwtl
fbstp
add
loop
lret
enter
mov
pop
jp
lods
popa
lahf
cli
adc
cmp
mov
outsb
outsb
push
push
adc
push
jne
push
or
repz
lret
cmpsb
fdivl
shl
cwtl
add
sub
fisttpl
loopne
push
pop
pop
jne
sbb
in
jmp
dec
cld
xor
push
in
iret
jge
notb
loop
arpl
xor
mov
fadd
fnsave
shl
pop
call
out
jns
test
mulb
ror
lcall
mov
pop
aaa
ret
mov
pop
mov
or
pop
jmp
movsl
scas
and
push
inc
daa
and
xchg
lods
pop
cmp
into
loope
jne
cmp
push
cs
mov
addr16
dec
dec
negl
cmp
xchg
xchg
mov
adc
daa
xchg
mov
inc
add
xchg
inc
stc
xchg
stc
imul
popa
sbb
ret
add
xlat
aas
fildll
pusha
bound
shlb
nop
pop
inc
sbb
jnp
jl
mov
mov
jp
cld
out
add
sub
imul
loop
dec
cmp
mov
movsl
or
lods
mov
mov
xor
test
pop
lods
out
sub
inc
dec
repz
adc
shlb
and
mov
sti
sbb
and
sbb
xchg
leave
lahf
lret
repz
adcb
into
into
and
lcall
jne
jg
fisubs
je
ret
mov
jno
sti
add
lock
dec
or
popf
js
sub
adcl
frstor
in
sbb
loope
push
cmpsl
roll
std
aaa
nop
andl
dec
or
ret
adc
mov
sub
adc
sbb
inc
mov
gs
cld
shrl
mov
insb
add
push
popa
or
test
repz
push
cmpb
sub
mov
clc
and
into
mov
dec
loopne
popa
mov
jne
ret
sub
pop
dec
add
out
push
loope
cli
pop
fwait
sbbb
pusha
push
mov
loopne
cltd
push
xor
into
pop
sbb
adc
jg
ja
test
sbbl
addr16
mov
cmp
mov
enter
push
xchg
sbb
and
xchg
out
mull
in
jl
lea
enter
aas
clc
jmp
push
test
sbb
add
xor
push
insl
add
cld
or
fdivs
cli
and
cmp
add
cmp
dec
pop
pop
out
fidivrl
add
pop
lods
std
mov
pushf
cmp
fdivrs
pop
pop
js
mov
pop
shr
xchg
mov
sbb
mov
xorb
jnp
push
out
in
sub
cmp
test
into
outsb
out
loop
xchg
adc
pop
test
cmp
aas
fidivl
mov
jg
push
les
push
ret
and
andl
lock
cmp
stos
sub
mov
imul
in
push
stos
dec
pop
sbb
jl
roll
loop
mov
pop
testb
movsl
cmp
jbe
inc
add
dec
stos
jns
movsb
xor
stos
sub
mov
cmp
push
movsl
xor
scas
leave
or
cltd
mov
pop
movsl
jo
sub
mov
push
outsl
adc
icebp
es
aad
add
mov
in
push
or
push
adc
or
xchg
enter
push
sub
decb
sbb
mov
popf
fstp
push
stos
mov
lods
insb
xchg
sub
test
sub
jge
xchg
push
sub
clc
jns
stos
cmc
bnd
inc
mov
mov
or
mov
jae
sub
loopne
mov
fnstenv
pop
cmpb
pop
sbb
jns
adc
mov
sub
imul
sbb
inc
ds
loopne
ss
out
fldcw
mov
mov
or
lea
mov
ljmp
mov
pop
es
out
xor
mov
mov
mov
mov
pop
adc
scas
shll
xchg
sbb
add
cli
repz
out
mov
push
sub
adc
in
mov
call
addr16
push
sti
push
repz
sbb
pop
mov
outsl
fs
dec
pop
xor
outsl
fcomi
adc
icebp
inc
imul
stc
mul
pop
cmp
inc
or
into
out
out
adc
or
add
or
aas
jns
jg
pop
cmp
outsl
pop
arpl
and
sbb
and
push
push
push
add
popf
xrelease
dec
xor
ds
out
lds
imul
scas
cld
push
mov
xchg
pop
arpl
add
repz
int3
mov
rcll
imul
inc
and
dec
daa
in
push
mov
jns
out
popa
sub
sbb
lock
movsb
outsb
mov
xchg
or
lret
jbe
data16
xchg
movlps
xorb
imul
mov
inc
sub
fcoms
mov
pop
adc
dec
ret
sbb
jge
push
xor
cmc
hlt
and
rcr
add
mov
jne
push
jg
jecxz
jae
mov
cmp
hlt
add
jbe
push
mov
cmp
inc
stos
lret
xor
pop
imul
mov
mov
fsubrp
push
jne
xchg
fnstcw
bound
mov
inc
or
mov
cmp
out
ja
xor
fldt
mov
int
test
ror
or
adc
sub
je
dec
sbbb
xor
mov
push
fists
pusha
scas
xchg
jmp
lock
pop
mov
mov
xchg
xchg
mov
insb
sti
lds
ja
pop
or
fistps
add
cmp
out
repz
enter
cmp
fldcw
adc
inc
push
inc
cmp
enter
inc
jnp
popa
stos
call
fldl
lret
pop
negb
inc
jo
popa
das
sub
dec
mov
pusha
xor
mov
jno
loop
pop
xchg
pop
adc
arpl
addb
sbb
scas
mov
inc
pushf
inc
fmul
xchg
xchg
mov
sti
les
lock
es
cs
lret
gs
inc
decl
cmpb
mov
xlat
xor
add
dec
sub
test
cli
out
xor
inc
mov
inc
iret
pop
jb
xchg
in
pop
jo
mov
dec
stos
mov
rclb
andb
mov
jmp
adc
xor
ds
shrl
dec
mov
stc
add
jmp
jecxz
adcb
shll
pop
imul
cltd
movsl
or
mov
cmp
push
fs
push
sahf
sub
js
dec
mov
imul
mov
dec
sbb
sbb
push
mov
pop
shrb
insl
mov
stos
inc
inc
nop
sbb
mov
add
pop
cmp
clc
loopne
inc
jl
lods
ret
int3
outsl
fdivrs
dec
cltd
pop
ja
push
int
push
add
mov
inc
inc
je
scas
sarl
xchg
push
push
in
and
ja
xchg
stc
icebp
stos
test
xchg
bound
je
outsb
jmp
rolb
out
sbbl
pop
movsl
sbb
ds
fstpt
insl
mov
push
fwait
cltd
sbb
in
push
push
cli
enter
es
sub
repnz
and
lcall
jmp
push
mov
jge
fmuls
fsts
or
stc
adc
push
xchg
push
sti
or
scas
xchg
mov
push
xchg
aad
sbb
mov
lret
dec
push
jge
mov
mov
adc
test
ret
push
push
or
xor
aad
sbb
sbb
test
cmp
or
lret
xchg
cmp
xchg
xor
test
fdivs
jl
sub
mov
add
xor
xchg
repnz
stc
sbb
scas
mov
sbb
movb
das
xor
scas
loop
jle
push
sub
jne
dec
scas
xor
out
inc
mov
push
xor
das
shrl
inc
pop
sbb
in
imul
lods
lds
inc
andl
scas
jae
mov
and
cmpsl
popa
sub
dec
lock
scas
inc
mov
shlb
cltd
mov
and
std
shrb
pusha
call
stc
lds
fcomps
lods
test
loopne
sub
xor
sbb
fwait
or
pop
push
sub
or
inc
shlb
call
xchg
xchg
or
xchg
out
lret
int3
es
mov
loopne
xchg
scas
sahf
dec
inc
inc
movsl
and
push
mov
push
sbb
stos
arpl
adc
xor
aam
dec
aad
push
sti
cltd
out
testl
clc
xchg
cmp
or
mov
add
mov
dec
cwtl
loopne
dec
adc
jne
add
mov
sub
mov
mov
insl
mov
shll
mov
in
dec
inc
int
dec
inc
pop
adc
rolb
outsb
mov
sub
sarb
push
ja
cmpb
push
and
or
sarl
out
push
mov
push
in
mov
loope
sarl
and
push
sarb
js
clc
frstor
mov
and
in
arpl
mov
imul
inc
jp
xorl
scas
hlt
jl
sbb
dec
inc
mov
push
ret
pop
ss
in
sbb
test
pop
adc
add
mov
and
push
xchg
call
push
mov
es
rcrb
push
push
add
rcrb
add
leave
orl
mov
cmp
add
adc
push
outsb
sbb
sbb
js
xor
movsb
out
sub
or
cld
jecxz
pop
mov
pop
popa
js
dec
filds
int3
mov
fisttpl
sbb
xor
in
pop
inc
adc
mov
xlat
pop
nop
push
out
call
negb
mov
or
lods
sti
xchg
or
sahf
fwait
cmp
fcmove
icebp
ds
xchg
mov
cmp
lock
in
sbb
cmpsl
mov
xor
insb
addr16
push
sub
lods
sub
inc
jmp
fs
mov
cwtl
adc
cmp
rcr
inc
fistpll
jecxz
out
mov
xor
inc
mov
adc
mov
pop
repnz
jl
in
loopne
xorb
and
jae
xor
sub
mov
test
push
insb
pop
rorb
jp
push
and
mov
mov
add
aaa
sbb
clc
cmp
mov
sar
push
add
addl
add
jb
outsb
mov
cmpsl
cmpsb
jbe
inc
arpl
push
mov
in
mov
push
leave
mov
fs
mov
xor
cwtl
fists
int
out
pop
cwtl
in
xchg
into
cmp
out
sbb
cmp
jmp
jecxz
sbb
cmc
pop
cmc
adc
inc
aas
arpl
stos
dec
inc
jl
xchg
mov
ds
xchg
subb
or
lcall
loopne
xchg
inc
adc
lods
jmp
cmp
xor
leave
adc
mov
ret
test
dec
mov
inc
out
mov
andb
in
mov
movsb
aas
cwtl
pop
adc
test
inc
test
je
add
inc
out
pushl
js
xor
mov
xor
xchg
in
inc
jmp
push
popf
sub
js
xor
adc
out
push
inc
icebp
mov
inc
mov
das
adc
stos
jg
ret
lods
lds
shll
add
mov
stc
mov
xchg
out
mov
jo
aam
arpl
imul
xchg
dec
rcrb
push
cli
cltd
fisttpl
mov
lock
loope
jbe
popa
out
pusha
imul
sub
fcoml
mov
cmp
sub
mov
in
jnp
es
pop
sub
fdivrp
inc
mov
test
fcmovne
adc
stos
int
xor
mov
std
scas
push
jge
pop
rcrl
inc
or
call
pop
inc
pop
or
fmuls
loop
xchg
push
cmp
hlt
pusha
loope
add
push
mov
xor
pop
xor
add
ja
in
mov
outsl
ss
mov
sub
aad
mov
adc
jp
call
push
or
daa
dec
xor
mov
xchg
pop
ret
cmc
pop
ret
stc
mov
fidivrl
cmp
lret
and
inc
sub
scas
aas
jg
and
stc
call
call
lret
add
pop
xchg
jbe
cld
dec
and
xchg
mov
cmc
adc
ja
fldl
ds
push
fwait
test
and
dec
loopne
adc
push
mov
or
fisubrs
push
xlat
and
xchg
mov
adc
int3
ret
outsl
lahf
xchg
jg
xchg
sarl
sbb
adc
ret
cmpsl
into
cmp
pop
lret
add
test
cmp
lahf
mov
or
lcall
mov
inc
pop
mov
add
xchg
cmp
jecxz
js
fnstcw
insb
jne
dec
mov
frstor
das
xchg
dec
fildll
jne
and
int
mov
subl
ja
mov
enter
and
fldenv
fnstsw
stos
ljmp
mov
lock
cld
icebp
ja
movsb
mov
mov
outsb
outsl
and
xchg
aaa
jmp
sub
sbb
cwtl
rclb
and
inc
jb
sub
jae
push
pop
scas
sbbl
in
test
stos
lods
pop
jne
lret
xchg
push
mov
outsl
loope
cmpb
mov
aas
popa
add
jno
dec
test
xchg
adc
jnp
jnp
int3
jg
sub
scas
jmp
fbstp
in
ret
xor
in
mov
popf
adc
jg
xchg
sub
insb
mov
mov
ja
jne
fistpll
mov
mov
sti
push
lret
imul
pop
jge
cmp
cmpl
mov
push
cltd
cltd
jge
fimuls
cmp
add
dec
insb
out
xor
lret
or
mov
xorb
int
add
aam
fucomp
push
jae
dec
or
lahf
scas
jns
or
pop
add
jg
notl
jnp
in
mov
sub
test
fidivl
cwtl
insb
icebp
aas
push
in
cli
sub
xor
in
in
xchg
xlat
cmp
arpl
or
lock
push
mov
insl
gs
jae
stos
or
xchg
xor
dec
adc
or
and
hlt
lods
xchg
call
arpl
mov
imul
dec
push
mulb
mov
lahf
push
lret
rolb
imull
pop
inc
mov
mov
pop
adc
stos
push
int
adc
mov
int3
mov
mov
push
test
pop
stos
jg
jne
mov
ljmp
push
lds
iret
mov
std
push
pop
push
cmp
jle
cmc
imul
jns
mov
mov
aas
mov
and
add
add
xor
sbb
fdivrl
scas
popa
lret
mov
mov
pop
push
shl
inc
sbb
stc
movsb
ljmp
lds
adc
inc
test
incb
into
nop
xlat
jae
jb
daa
ret
push
xchg
sub
outsb
arpl
jge
xchg
jle
hlt
cmc
shlb
sbb
xor
pop
in
xor
js
loope
mov
cmp
inc
mov
hlt
pushf
mov
mov
push
movsl
mov
std
call
insb
push
lock
mov
lret
pop
adc
sub
pop
add
in
out
ret
aaa
mov
sub
int
sti
inc
loop
ret
xchg
dec
scas
addr16
mov
mov
insb
in
pop
adc
dec
push
loop
jge
and
ret
xor
jae
or
adc
lret
nop
or
jle
adc
pusha
das
faddl
test
push
lret
and
push
mov
cmp
daa
fisubs
xchg
imul
jge
xchg
pop
push
mov
out
mov
xchg
mov
lahf
cs
loope
mov
rorb
cli
xor
xchg
xor
lock
jo
sub
mov
jno
mov
fldenv
outsb
stos
or
mov
lock
and
xlat
bound
cmp
cli
adc
enter
adc
jbe
dec
pop
stos
and
and
rorb
cli
test
add
js
xchg
inc
push
loopne
add
push
and
sub
lds
std
xor
mov
xchg
dec
cs
aad
cmp
xchg
jl
pop
jb
cli
cmovbe
xchg
outsl
inc
lret
ret
repnz
je
push
xchg
cli
int
and
jg
sub
add
gs
testl
jnp
loop
mov
jne
jo
sti
adc
xchg
sub
rorl
stos
daa
mov
sbbl
or
lret
fmull
ljmp
adc
movsl
insl
xchg
lcall
mov
add
jp
inc
pushf
call
inc
in
push
lret
push
push
cmp
addl
js
ja
adc
inc
sbbb
inc
mov
stc
movsl
nop
outsb
push
iret
sbb
add
dec
jnp
dec
dec
adc
mov
xor
mov
mov
push
subb
or
mov
push
test
mov
data16
xor
ljmp
cli
lds
pop
dec
push
lock
outsl
xlat
sbb
xorps
pushf
fnstenvs
negl
add
lods
xchg
xlat
loop
sub
xchg
jg
sti
adc
or
mov
jp
jbe
xchg
into
testb
sti
mov
add
pop
jge
lock
jmp
outsl
jecxz
jp
push
lret
rcrb
clc
ret
dec
data16
imul
sub
pop
cs
mov
pop
dec
rcrl
orl
outsl
cmp
insb
add
cmp
dec
bound
and
or
insl
fildll
inc
dec
pusha
icebp
pop
sub
or
mov
movsl
jp
mov
add
cmp
xchg
mov
fidivl
imul
iret
aam
xchg
mov
in
sbb
popf
ja
leave
jb
scas
out
movsb
mov
cmp
aaa
outsl
adc
inc
stc
cld
jns
sbb
mov
inc
and
mov
negl
call
data16
cs
mov
lret
aam
inc
sbb
ret
pop
mov
js
in
sub
mov
xlat
rcll
stos
add
sub
sbb
in
test
push
and
xchg
aad
shl
xlat
dec
sbb
aaa
hlt
mov
imul
jle
inc
insb
pop
mov
pop
aam
adc
aam
jne,pt
inc
data16
sbb
or
jns,pt
push
lods
sub
in
ret
shrl
sbb
pop
js
outsl
cmc
rcll
jecxz
inc
imul
mov
dec
dec
jmp
aas
adc
dec
out
ret
test
scas
out
fnstenv
inc
shll
ret
shll
xchg
lods
mov
insb
add
adc
sub
nop
std
in
jle
movsb
cmp
fucomi
leave
fs
dec
enter
dec
mov
fsubl
mov
pop
cmp
adc
pop
pop
mov
dec
push
mov
mov
xchg
je
call
push
cwtl
sbb
pop
das
cmp
sbb
mov
mov
jmp
lods
ss
cld
popa
push
daa
push
sbb
xchg
lcall
inc
mov
add
iret
inc
into
mov
or
sub
push
decl
fbstp
cs
repnz
adc
jp
or
iret
add
mov
xor
adc
xor
sarb
jnp
or
stc
jg
psraw
or
rorl
loopne
ss
imul
inc
xor
jl
push
xchg
pusha
das
call
nop
inc
loope
repz
inc
dec
imul
xor
loop
dec
cmpsl
loope
icebp
push
hlt
dec
and
jl
pop
add
dec
orl
add
aas
popa
imul
dec
and
movsb
mov
mov
cltd
mov
cmc
scas
inc
or
shrb
mov
test
adc
mov
mov
lcall
sbb
mov
fxch
stos
dec
sbb
cmp
fisttps
mov
xor
inc
popa
je
mov
sbb
xorl
pop
xchg
rcrb
pop
test
js
lcall
mov
xchg
push
in
adc
call
mov
call
in
adc
sub
outsl
inc
pop
orb
xor
inc
pop
rorb
dec
sahf
jae
ljmp
cmp
pop
xor
adc
mov
sbb
lret
jp
mov
dec
sub
pop
push
lds
lret
pop
mov
insl
aam
mov
jnp
inc
test
fisubs
dec
xorb
cli
adc
movsb
xchg
add
stos
test
xlat
jmp
sub
into
jae
inc
mov
jae
add
jne
lods
inc
in
leave
or
mov
cmp
fcoml
xor
mov
je
in
sub
ja
jnp
mov
push
or
xchg
scas
aam
movsl
xor
das
iret
sar
fidivs
cmc
movsb
add
inc
sbb
jns
mov
pushf
xchg
mov
dec
int3
cmp
mov
dec
shrl
scas
fidivrs
jo
xor
pop
ret
push
mov
repz
xor
inc
cmc
out
cs
xor
xchg
cmp
ficomps
cmpsb
scas
ljmp
cmp
test
leave
jle
adc
sarl
or
dec
add
cmp
add
addr16
adc
xor
fstps
sbb
jmp
cmovle
or
cwtl
ret
stos
loope
dec
cmp
push
insb
fistpl
orb
mov
dec
out
bnd
sub
aas
sbb
shrb
xchg
sbb
mov
lock
jbe
mov
scas
out
jg
cmp
dec
pop
dec
lods
mov
jmp
testb
clc
pop
mov
mov
aam
testb
and
cld
jl
push
cltd
inc
xlat
pop
shlb
jno
pop
push
xor
cmp
jmp
cmp
mov
mov
je
xchg
adc
out
mov
movsb
lea
mov
mov
in
mov
push
adc
cmp
ss
outsl
hlt
pop
aas
mov
js
pop
sub
shlb
add
test
pop
or
mov
mov
sub
cmpsb
jmp
dec
jmp
rolb
inc
int
jle
cmp
mov
and
add
mov
dec
sahf
inc
lods
insl
mov
in
jecxz
loope
es
call
sub
jnp
xchg
add
adc
repnz
sti
popa
push
outsl
out
f2xm1
shll
test
jo
xor
scas
out
jp
pop
dec
insl
or
int3
hlt
push
jns
imul
mov
cwtl
aad
pop
jo
add
jns
outsb
mov
mov
decl
stc
adcb
mov
rorl
mov
mov
mov
or
push
stc
out
andb
jle
mov
pop
mov
lods
lods
pop
cs
mov
add
ret
push
hlt
pop
pop
jno
inc
std
enter
dec
pusha
je
fwait
outsb
adcb
pop
insl
lcall
cmp
mov
pop
xor
icebp
ja
adc
mov
push
mov
jns
jmp
cltd
mov
push
fwait
sbb
fildll
dec
sbb
sahf
mov
inc
inc
idivl
add
sub
add
lahf
out
leave
mov
or
sbb
clc
push
push
incb
xchg
test
lahf
pushf
sub
adc
inc
pop
gs
mov
scas
push
push
test
mov
sub
enter
lret
les
test
iret
cmc
lahf
pop
sub
jbe
shll
pushl
cmpsl
mov
mov
mov
cmpsb
sub
and
jl
pop
and
mov
mov
pop
js
je,pn
mov
pusha
xor
fcoms
loopne
or
mov
mov
imulb
dec
xchg
daa
pop
jle
mov
adc
cmc
pop
push
jns
pop
push
and
icebp
push
in
ja
or
push
fnsave
scas
xor
jle
aad
shll
addr16
add
lahf
and
add
mov
mov
mov
cmp
jp
imul
or
mov
lea
xlat
xchg
arpl
mov
lea
out
push
lret
push
jecxz
push
test
mov
out
xchg
mov
rcrb
jge
lds
sub
push
mov
test
ret
leave
js
shlb
fldenv
shll
mov
xchg
mov
mov
aam
push
push
jge
xchg
in
or
push
notb
js
mov
lea
nop
lods
bound
int3
inc
out
xor
call
out
add
fistpll
inc
icebp
cmp
je
fistps
push
lds
stos
stos
fcoml
imul
xor
mov
rcrb
aaa
lds
push
sub
sbb
sahf
rcrl
dec
les
ds
int
inc
scas
pushl
mov
std
in
ret
std
mov
mov
jl
pop
jns
xchg
lahf
xchg
cltd
cli
dec
in
push
stos
rep
add
xor
js
mov
fucomip
in
xchg
shlb
cmp
mov
arpl
fisttpl
mov
fistpl
pushf
sub
pushf
cmpsl
push
xorl
push
adc
cmpsb
lods
xlat
or
ds
mov
int
lea
pop
sub
push
lahf
test
jmp
push
ficoms
push
ret
xchg
sar
or
push
or
mov
or
add
cmc
jl
daa
stos
lods
ficoms
add
addl
or
cmp
inc
adc
mov
decb
lods
std
nop
daa
dec
mov
cs
add
imul
loopne
and
and
push
push
or
scas
jae
sti
pop
xchg
cmp
fildll
cmp
in
push
testb
repnz
imul
fadds
xchg
mov
push
icebp
xor
test
and
outsb
adc
inc
cmp
jbe
mov
ljmp
jp
mov
mov
cs
mov
out
cmp
sti
dec
fs
cmp
enter
mov
jp
mov
jo
push
mov
mov
pop
pop
movsl
and
cmp
push
and
xchg
xchg
pop
jecxz
sub
cmp
or
jle
push
push
pop
add
pop
gs
inc
test
popf
cmc
addb
jg
pusha
cmp
adc
mov
jne
subb
in
push
jp
sub
in
pop
dec
sti
jae
es
sahf
ds
sub
mov
or
imul
inc
sub
jecxz
xchg
lock
cltd
cmc
cli
out
xor
jbe
xchg
sub
divb
adc
sbb
aaa
xchg
and
in
dec
dec
lret
scas
test
fistps
cltd
aaa
loop
cmp
call
ds
push
sahf
push
add
pop
inc
test
jp
or
xorl
sub
mov
cltd
push
enter
out
fcmove
sbb
bound
dec
add
outsl
loope
mov
jnp
xor
mov
shll
mov
les
mov
icebp
mov
gs
xor
mov
clc
fs
mov
popf
push
push
lods
cmp
pop
mov
cmp
out
or
ja
jmp
gs
cmp
arpl
mov
call
cmpsb
jle
push
xor
and
cli
ret
ja
or
arpl
adc
je
or
idivl
dec
stos
aam
sub
lds
bswap
sarb
ss
pushf
imul
cmpsb
movsl
xor
call
push
or
mov
in
in
call
mov
push
xchg
popf
push
test
adc
bound
lea
and
loope
fdivl
mov
fiadds
bound
inc
adc
xchg
shr
xor
ret
and
push
bound
push
roll
or
mov
popf
sub
popa
mov
cmp
push
ret
sbb
pop
dec
sbb
in
dec
sub
push
push
adc
and
fiadds
test
xchg
nop
mov
ss
add
lds
jne
test
mov
sbb
mov
orl
and
cmp
or
inc
icebp
inc
and
add
pushl
xor
jb
repnz
pusha
int
sti
fwait
pop
loopne
adc
jle
xchg
sbb
fldl
sbb
cld
fsub
cmpsb
sbb
dec
push
or
xchg
inc
faddp
sub
and
daa
sub
and
dec
mov
mov
mov
stos
mov
inc
out
loop
mull
ds
xchg
add
mov
ud0
adc
roll
adc
inc
jle
fcoml
sahf
sarl
movsb
adc
sub
insl
fildll
pusha
adc
sarl
push
or
or
outsl
sbb
inc
xchg
inc
xchg
iret
xor
loop
ljmp
add
jno
lret
not
jg
ja
jl
pop
jp
pop
jecxz
addr16
mov
jmp
insb
cltd
cli
xchg
push
repnz
inc
dec
stos
jne
xlat
xor
push
cld
push
test
dec
add
sub
jmp
in
call
pop
push
pushf
lods
push
cmp
rcrb
pop
daa
jle
mov
je
in
test
pop
mov
push
stos
imul
pusha
cmp
adc
and
jge
test
push
and
out
test
cltd
and
aam
arpl
push
movsl
and
sbb
adc
sahf
or
icebp
cmpsl
push
scas
adc
sbb
pop
out
lds
push
mov
test
addb
and
lret
dec
inc
jae
inc
pop
pop
inc
loop
sbb
mov
dec
adc
pushf
jge
hlt
sbb
xchg
enter
lcall
arpl
inc
push
jb
in
sti
stos
sbb
loopne
inc
cvttps2pi
mov
push
xchg
adc
insw
movsl
test
pop
test
or
test
test
std
cs
cld
imul
cmpsl
adc
insb
aaa
sarl
rcll
jbe
sub
call
lds
enterw
cmp
cs
push
xor
mov
pusha
mov
mov
in
or
sahf
and
and
add
mov
and
scas
xchg
add
fmuls
shl
mov
pop
mov
or
fsubrl
insb
xchg
cwtl
call
xor
addl
andl
gs
xor
std
sub
roll
orl
lcall
or
js
in
jbe
jno
lcall
in
mov
scas
sub
test
sub
push
and
mov
sbb
aam
stos
and
sub
xchg
and
sub
add
fstpt
push
or
je
scas
xorl
jbe
loope
push
aam
cs
stos
roll
mov
jb
xchg
push
sub
fdivrl
outsl
je
push
add
pushf
cmp
dec
lahf
mov
jmp
push
mov
rcrb
dec
inc
sbb
fsub
push
cmp
or
push
add
sbb
mov
mov
dec
daa
and
pop
xor
push
int
lds
sbb
dec
or
iret
xor
mov
arpl
test
pop
movlps
and
or
out
xor
mov
pop
dec
push
daa
sbb
in
dec
pop
das
mov
aas
jg
inc
repz
jns
xor
arpl
sub
add
sbb
adc
cmpsb
sub
outsb
arpl
sub
jne
scas
mov
pop
test
or
jo
and
leave
xor
xlat
push
jecxz
out
insb
rolb
jecxz
pushf
jbe
loope
nop
inc
or
in
xor
sub
cltd
dec
std
pop
lds
cltd
les
fs
imul
mov
add
push
mov
add
lds
lods
gs
xor
sbb
push
imul
xorb
lds
mov
leave
sbb
aam
psubsw
lock
addr16
xchg
xlat
popf
cs
sbb
jae
pop
jne
fld
popf
call
loopne
pmulhw
popa
scas
or
loopne
cs
pusha
xor
mov
lahf
xchg
decb
aad
mov
fstps
shll
pop
hlt
inc
daa
xor
mov
andl
inc
xor
xorb
push
gs
leave
insb
notl
mov
pusha
inc
or
mov
xor
xchg
cli
stos
cmp
push
xor
xchg
cltd
icebp
cmpsb
hlt
stos
inc
call
lea
xchg
jne
sbb
shll
or
in
hlt
inc
fs
in
pop
scas
xor
or
sub
xor
pop
inc
mov
push
pop
mov
sbb
adc
jnp
pop
jp
or
sbb
filds
hlt
mov
aaa
adc
add
fldenv
push
hlt
sub
inc
in
xchg
cmpsl
xchg
mov
enter
fwait
pusha
or
xchg
inc
test
adc
mov
jno
inc
jge
push
enter
push
jmp
mov
xchg
xchg
adc
nop
movsl
data16
in
xor
lahf
or
mov
pop
add
xchg
or
js
mov
pop
je
xchg
out
test
dec
dec
mov
rcll
shlb
mov
daa
dec
lods
stos
mov
mov
in
push
jl
cmpsl
pop
mov
gs
int3
aaa
daa
call
es
xchg
ret
push
stc
mov
mov
aam
cmpl
push
dec
mov
shlb
jbe
inc
jns
aaa
test
cmp
push
mov
outsl
mov
lea
mov
mov
cmp
data16
jnp
test
add
test
rcr
cmc
jbe
push
loop
lds
shrl
mov
dec
push
push
sub
lahf
aas
pop
mov
xchg
test
push
dec
test
pop
sub
mov
out
mov
xor
dec
push
adc
ss
dec
jo
pop
jge
mov
sbb
cmp
stos
or
imul
jmp
sarl
sti
jns
je
aad
aaa
jp
dec
or
lods
or
in
push
bound
stos
xchg
xchg
and
cmpsl
and
cltd
sbb
ljmp
sbb
pop
and
push
daa
or
pop
mov
aam
lods
movsb
sahf
fwait
mov
xchg
cli
sub
lods
push
inc
cli
int
imul
pop
hlt
sub
push
clc
jg
notl
fucomp
jl
fidivrl
fisttps
pop
addr16
stc
pop
leave
mov
or
out
dec
mov
xchg
push
repz
vpshab
cmp
or
dec
movsb
int
push
jp
in
jle
int3
mov
mov
jmp
cmpb
pusha
xchg
roll
andl
movsl
repnz
inc
inc
add
sub
cltd
stos
icebp
push
push
sahf
fstpt
insl
cmpsl
and
ljmp
mov
repnz
and
sarl
sbb
mov
pushf
xchg
arpl
daa
mov
inc
mov
cltd
pop
addr16
inc
mov
push
or
and
mov
inc
adc
cmpl
pop
loopne
mov
inc
addr16
bound
or
roll
hlt
ret
out
dec
sbb
aaa
mov
xchg
addr16
sbb
in
push
xor
sbb
movsl
push
pop
cs
xchg
cmp
aas
popf
cmp
test
jo
pop
adc
sahf
cmp
jmp
outsb
push
and
push
lds
pop
sub
lods
sub
inc
lea
mov
ss
lods
sbb
test
adc
cmp
cli
test
rclb
rorl
inc
addr16
hlt
sbb
or
mov
pop
or
call
adc
adc
pop
fisubrl
jne
mov
decb
xor
fcmovnu
outsb
std
inc
xchg
test
push
adc
hlt
fs
notb
fnstenv
in
mov
into
inc
mov
inc
xlat
or
testl
stc
testb
cmp
jge
jb
adc
inc
into
mov
into
pusha
shrb
adc
adc
xchg
flds
das
sbb
je
int3
mov
xor
or
scas
xor
and
std
aas
cmc
jno
loope
inc
pop
out
scas
sbb
pop
adc
jnp
fdivs
test
pop
xchg
inc
xchg
enter
sbb
xor
mov
lret
cltd
pop
add
ret
mov
ss
xor
and
bound
pop
in
xor
ja
call
and
jg
pushf
add
pusha
ficompl
sbb
repnz
stc
outsb
adc
out
scas
inc
roll
sbb
or
clc
xchg
push
sbb
jl
fsubl
in
mov
loopne
mov
stc
inc
xor
pop
fwait
jecxz
sbb
add
xor
adc
lcall
jecxz
xor
scas
or
aas
or
push
jbe
aas
mov
add
and
ret
in
pop
aas
jmp
mov
xchg
xchg
jno
inc
fadd
xchg
cs
scas
xchg
add
mov
mov
loop
xchg
jg
inc
xchg
adc
ja
inc
test
and
dec
fdivl
out
lods
mov
pop
and
out
dec
testb
push
xchg
lea
add
xor
cmp
sub
adc
shll
lods
xor
xor
jo
lods
gs
jmp
inc
sbb
xchg
stos
pop
inc
dec
outsl
cmp
xchg
mov
push
sbb
in
in
xchg
sbbl
jo
adc
imul
scas
mov
in
push
push
mov
daa
jl
cld
push
or
xchg
push
adc
sahf
adc
test
arpl
pop
movsl
cmp
jmp
repnz
sahf
push
push
xchg
fnsave
mov
ret
pushf
test
fidivs
adc
fidivrs
pusha
mov
ljmp
xchg
and
mov
push
outsb
insl
mov
and
lods
inc
xor
loopne
or
ret
xchg
pop
cmpsl
xchg
outsl
mov
add
jno
mov
jae
push
mov
call
add
popa
adc
js
imul
jmp
mov
pop
jge
test
pop
icebp
xchg
push
out
aaa
push
inc
pop
inc
push
aaa
shlb
mov
mov
or
mov
std
aaa
pop
or
pop
aad
in
inc
hlt
fdivl
dec
fidivl
lea
xchg
test
addr16
outsb
lcall
adc
or
or
mov
test
dec
pop
mov
lock
popa
repz
or
mov
stc
xlat
pop
mov
adc
mov
sub
jecxz
into
mov
sub
xor
in
mov
pop
aaa
jbe
outsb
sub
add
and
pop
mov
loope
push
insb
fcompl
adc
rclb
cmp
xor
xlat
pop
xchg
clc
jb
frstor
sahf
movb
xor
addl
push
lahf
loopne
lods
pop
add
mov
adc
xor
call
incl
jg
jp
push
jl
repnz
cmp
add
scas
test
mov
fs
int3
aas
aas
es
daa
cmpsl
fstps
loopne
cmp
clc
xchg
cmpsl
jl
xchg
pop
scas
out
pop
mov
ret
clc
add
rcll
ljmp
lods
push
mov
popa
fisubl
shll
fs
mov
sub
fucom
ficompl
fidivrl
cmpsb
call
pop
mov
icebp
adc
addr16
fidivrs
sarb
into
scas
pop
pop
test
jne
enter
das
sub
sub
loope
call
dec
int
add
push
sbb
hlt
and
movl
in
mov
repnz
push
ret
divl
dec
testb
add
adc
mov
pop
jp
mov
xor
mov
das
out
cltd
mov
add
xchg
mov
xor
flds
in
es
inc
and
rclb
jne
in
xor
adcb
inc
push
lods
and
mov
fnstenv
stos
shl
sbb
jle
pop
test
repz
push
test
pop
notl
jae
leave
sbb
js
push
mov
test
out
lods
xor
push
fstpl
push
aam
adc
sub
jo
cmpb
inc
lds
dec
jp
pop
lds
push
fistps
jns
fstpl
dec
rcrb
jo
sbb
inc
cmp
mov
inc
push
in
inc
sbb
jmp
inc
mov
inc
push
stos
into
int
adc
mov
fildll
or
mov
pop
mov
popf
ret
mov
cmp
pop
nop
sarl
nop
sbb
pop
leave
and
pop
dec
faddp
int
movsb
int
inc
sbb
sarb
cmp
repnz
repnz
aaa
or
and
xchg
repz
bound
and
push
mov
jae
cltd
xor
jno
jbe
pop
and
sbb
mov
jbe
xlat
dec
and
out
les
cmp
mov
pop
inc
outsl
arpl
mov
mov
sahf
fcompl
and
jmp
pop
fistl
mov
clc
mov
cmpsb
pop
rcrl
jo
adc
jb
ficoml
das
out
push
sti
push
adc
ficoml
xor
push
lock
push
flds
movsl
push
xchg
mov
call
rcrl
inc
and
gs
call
fldl
jae
cmp
add
xchg
xor
push
xchg
xor
add
add
dec
clc
and
and
push
lods
cmp
xchg
sub
jo
jne
dec
mov
adc
cltd
sbb
xlat
sbb
int
or
gs
pop
mov
movsb
cmp
ret
in
dec
mov
outsb
fbstp
mov
ds
test
rol
dec
jmp
hlt
aam
ja
dec
cltd
or
or
arpl
ljmp
mov
iret
pop
pop
setg
loop
cmp
and
adc
jns
mov
or
rcrl
ficomps
sbb
sub
add
pop
je
xor
xchg
dec
dec
cmpl
outsb
js
imul
in
jecxz
lret
addr16
addr16
or
jmp
fs
jecxz
movb
mov
jb
add
mov
fs
icebp
ret
popf
push
data16
xchg
mov
lea
mov
js
xor
mov
jge
or
flds
xor
je
xchg
xchg
xchg
jne
adcl
out
fmuls
xcrypt-ecb
cmpsl
into
add
mov
mov
bound
bound
sbb
mov
sub
sub
or
ja
fstps
jno
pushf
inc
into
inc
in
inc
pop
pushf
xchg
pop
bound
dec
jne
hlt
push
jmp
lcall
xchg
xor
xchg
scas
push
mov
test
xor
mov
jbe
fstps
push
xor
insl
aaa
pop
int3
scas
jle
xor
xor
sar
jns
mov
mov
mulb
push
pop
jnp
insb
jnp
lods
repz
repnz
imul
xor
lock
sarb
jns
punpckhdq
cmc
loope
test
out
mov
jg
mov
pop
sti
ds
ljmp
mov
dec
jmp
xchg
jg
jl
pop
pop
ficoml
mov
mov
dec
xlat
jb
mov
arpl
sub
ds
mov
or
lock
push
or
mov
loop
es
out
xchg
mov
push
imul
mov
stos
shrl
in
cmpsb
jge
pushl
out
mov
sti
into
stc
adc
in
adc
cmp
mov
mov
xchg
pop
jno
push
inc
sub
in
jne
loop
xlat
psubd
inc
dec
test
sub
rorl
inc
in
cmp
cmpsb
pop
in
or
gs
inc
cs
pop
scas
pushf
cmpsb
fwait
cmp
xchg
mov
cmpsl
pushf
push
rorb
push
pushf
jp
fldcw
int3
push
add
mov
aas
push
dec
lcall
rcrb
adc
movsl
add
repnz
push
jno
mov
pop
loop
das
add
lret
sub
outsb
cld
mov
stos
shll
jns
test
push
xor
mov
sub
int3
ja
es
xorl
or
mov
inc
and
lea
xor
in
lods
inc
mov
add
rorb
pop
fwait
jl
stc
js
gs
cmpsb
shll
loope
pop
lret
leave
in
push
js
add
mov
in
adc
dec
arpl
and
repz
mov
or
subb
popf
mov
adcl
fisubl
fmul
movsl
add
out
jns
lret
lea
lods
dec
div
lds
cmc
fs
inc
cmp
int
test
mov
lret
cmc
jo
cltd
es
push
gs
fnstcw
xorb
cmpb
insl
imul
pop
jl
mov
outsl
adc
mov
or
pushf
pop
cmpsl
mov
outsb
imul
inc
in
mov
pop
jb
and
sbb
mov
mov
lods
rcrb
or
adc
mov
jne
repnz
mov
incl
cli
data16
mov
mov
and
std
mov
inc
int
sbb
jp
mov
jbe
in
or
push
aad
adc
inc
cmc
or
aam
cmc
cmovs
or
pop
mov
lret
das
mov
jmp
push
lock
gs
nop
ret
and
clc
imul
int
inc
sub
cmp
fs
es
push
or
mov
pushl
orb
push
in
pop
mov
add
scas
jae
je
aad
inc
rcl
test
rol
or
in
iret
ret
mov
lcall
lret
repnz
xor
pushf
xor
es
stos
fsts
pop
xchg
mov
push
cmp
xchg
dec
jl
jl
in
adc
xchg
jmp
xchg
or
out
insb
mov
repnz
hlt
scas
mov
cmp
lds
push
inc
or
dec
jp
popa
pop
out
stos
push
addr16
sbb
out
jbe
mov
pop
pop
fcom
cmpsb
or
jb
sbb
cmpsl
out
xchg
xor
adc
cmp
add
out
je
dec
mov
push
sub
pop
and
jno
push
fstpl
sbb
fwait
mov
pop
mov
pushf
xor
out
lods
fldcw
icebp
xor
std
cmp
test
inc
movsl
jae
and
adc
or
popf
sbb
into
dec
in
out
cmp
in
dec
pop
mov
movsl
xchg
add
push
jmp
xchg
pop
and
pop
inc
cwtl
pop
adc
shrl
sub
rcr
rcrb
roll
sbb
mov
mov
jge
jmp
xor
fwait
movsl
ret
rcll
inc
jno
sarb
les
push
gs
test
shlb
dec
sarb
or
adc
fadd
shr
and
das
stc
xor
ret
sub
data16
jbe
out
les
std
inc
outsl
pop
fldcw
pop
ret
xlat
sbbb
rorl
ret
xchg
insl
fmull
push
sub
sahf
jno
mov
and
lea
inc
repnz
lods
out
fildl
pop
in
and
xchg
jecxz
aam
cmp
gs
xor
or
mov
dec
fs
ret
pushf
jns
xor
iret
jecxz
mov
sbb
and
push
add
sti
clc
leave
cli
call
lret
jecxz
rcll
cmp
xchg
dec
push
adc
jb
add
je
bound
add
jmp
mov
jb
imul
xchg
and
jle
xchg
lret
repnz
pop
or
lret
inc
push
xchg
xlat
sub
cmp
adc
mov
mov
xchg
fwait
jno
fidivs
int
inc
lods
pop
mov
clc
aad
scas
mov
push
jg
mov
cwtl
mov
popa
outsl
jp
ret
add
mov
popf
pusha
push
add
jg
outsb
jmp
jp
jge
pushl
cmpsl
push
jge
add
sti
mov
js
ja
cli
xchg
push
cmpsl
mov
mov
mov
add
scas
je
inc
je
mov
popf
test
xchg
push
adc
add
pop
pop
insb
or
out
dec
or
ror
aad
inc
mov
or
sub
pop
inc
mov
mov
xor
cmpsl
pusha
movsl
mov
dec
inc
xor
in
in
jae
mov
inc
enter
xchg
pop
cmp
or
sti
cld
movb
in
pop
or
xor
and
enter
xor
add
mov
jp
inc
cltd
mov
mov
mov
mov
xor
inc
mov
imul
adc
nop
subl
clc
xlat
push
in
pop
xor
std
aad
cli
ja
inc
mov
cmp
divb
dec
lods
ret
jg
inc
fwait
push
nop
inc
or
movsl
push
aaa
dec
dec
js
adcl
sub
xchg
out
addl
sub
sar
ss
ret
dec
inc
cmpsb
mov
popa
adc
pop
add
call
roll
pop
out
add
xlat
mov
xchg
pop
or
icebp
into
cwtl
int
mov
ror
cmp
popl
fimuls
jns
ja
icebp
add
push
sub
cmpsl
and
mov
jl
out
ss
outsl
daa
int3
mov
xlat
mov
aam
clc
dec
loop
or
mov
inc
mov
sub
sarl
jp
mov
loop
dec
cwtl
pop
subb
inc
fisubrs
xchg
xchg
sbb
sbb
sbb
rorb
sbb
shlb
adc
loop
mov
mov
adc
xor
gs
and
int
cmp
mov
pop
in
ret
lods
sub
gs
pop
or
inc
aaa
xorb
inc
mov
jo
xacquire
sub
outsl
movsb
aad
aad
ljmp
sti
imul
mov
jae
lds
sar
inc
pop
subb
in
adc
bound
add
pop
jmp
jmp
mov
sbb
add
js
into
pusha
add
cwtl
sbb
int
ficompl
jmp
pop
lcall
pop
cwtl
sahf
arpl
xor
test
lret
clc
mov
and
xorl
movsl
pop
push
ljmp
xor
jbe
inc
sub
mov
dec
mov
pop
sub
daa
dec
mov
push
fwait
xchg
xchg
xchg
add
ds
sub
ja
inc
add
push
sub
jecxz
xor
adc
or
lock
dec
fmuls
in
fs
ds
stc
jecxz
sbb
scas
pusha
xor
sub
xor
ljmp
loope
push
int3
ja
push
mov
out
sub
xor
jecxz
dec
pop
xchg
jecxz
push
xchg
cltd
imul
or
fisubrs
call
lds
add
push
dec
cld
cwtl
mov
in
fisubrs
add
mov
or
dec
cwtl
das
ja
mov
sbb
adc
cwtl
jl
mov
mov
sbb
add
pop
icebp
inc
rclb
loop
mov
inc
sbbb
jno
and
out
pushfw
scas
rorl
out
lret
xchg
xchg
mov
cltd
add
inc
test
mov
test
push
and
xchg
movsb
inc
out
cmp
mov
pop
add
add
push
jno
sti
lock
mov
sbb
out
cld
lods
stc
dec
sbb
lret
lock
jg
jo
out
jnp
fists
lds
in
xor
mov
mov
and
test
lret
fcmovnbe
loopne
mov
loope
push
push
nop
in
adc
scas
pop
mov
or
mov
out
or
xlat
int3
js
fldenv
imul
scas
mov
scas
jle
adc
lods
pop
cmpsb
pop
fs
jnp
arpl
stos
xchg
frstpm(287
cmp
mov
call
cmpsl
test
lock
jnp
sti
and
out
int
xchg
loop
push
mov
lret
lea
push
mov
and
dec
je
pop
and
pop
dec
icebp
mov
fcomps
mov
mov
out
clc
sub
clc
pop
add
stos
xlat
fisttpl
rorb
adc
xchg
push
xor
jbe
leave
pop
xor
test
sbb
leave
inc
cmpl
arpl
jno
push
mov
jnp
lret
adc
or
mov
lods
call
cltd
mov
leave
adc
int3
and
decb
pop
or
xor
lods
pop
push
test
cmp
sub
decl
fisttpll
add
sub
leave
dec
cltd
sbb
cwtl
mov
pop
pop
out
add
fcoml
movsbl
lret
lds
mov
pop
sub
dec
adc
movb
stc
nop
xor
cltd
dec
mov
lret
addr16
xchg
shlb
add
and
cmp
out
inc
fucom
jle
idivb
in
ds
faddp
arpl
xchg
jb
push
scas
dec
out
mov
sbb
pushf
cld
stc
test
jl
sub
mov
iret
xchg
jbe
nop
scas
sbbb
nop
arpl
ficoml
out
push
inc
int3
dec
xchg
sbb
clc
cmp
into
dec
cs
xchg
mov
nop
fmuls
aam
ja
pusha
jecxz
shll
fwait
or
shl
cmc
push
lods
mov
inc
mov
sub
aam
mov
xchg
cwtl
sbb
inc
adc
adc
adc
addr16
fdivrs
cwtl
fists
mov
add
call
jmp
cmpsl
int
sbbl
xchg
xor
add
arpl
addr16
int3
xchg
or
lcall
add
mov
push
sbb
cltd
mov
js
sbb
imul
testl
dec
xchg
cmp
stos
test
pop
add
jo
cwtl
mov
rorb
rorl
xchg
shl
and
sbb
les
sbb
jp
out
jns
adc
pop
push
push
dec
jle
add
xor
rclb
imul
aaa
mov
jnp
and
mov
inc
pop
repnz
nop
fdivr
hlt
mov
mov
dec
lods
nop
jle
add
inc
xor
insb
or
mov
popf
fisttpl
pop
js
sbb
call
mov
sti
mov
pop
shlb
lcall
xlat
imull
lcall
pusha
jp
lods
lret
out
cmp
lcall
and
test
mov
adc
scas
cmp
and
jns
cmp
jbe
jae
inc
dec
outsb
push
sbb
aad
scas
cmp
sub
jge
inc
insl
or
xlat
insl
xchg
fwait
call
sbb
ljmp
inc
sarb
outsl
into
jle
imul
add
cmp
insb
clc
xchg
push
loop
inc
mov
mov
cwtl
mov
fsincos
dec
ss
xchg
lahf
push
sub
negb
xor
shr
lds
and
cs
or
xchg
cmpsl
push
imul
jno
cmc
mull
push
xchg
cwtl
stos
mov
and
jmp
popa
popa
lahf
adc
and
sub
out
ja
xchg
add
divl
sub
stos
int
pop
inc
jnp
xor
repnz
jno
mov
xchg
jl
ljmp
daa
and
enter
xchg
daa
lea
or
loope
ret
jae
jbe
cltd
sub
dec
ljmp
icebp
and
mov
test
mov
jne
mov
div
push
cmpsb
cwtl
pop
out
mov
mov
cltd
xlat
add
pop
xor
mov
mov
leave
jg
dec
sub
test
sub
and
sbb
movl
jns
sub
movsb
iret
push
inc
mov
sbbl
add
cmc
jne
or
js
les
inc
push
mov
jg
mov
jnp
and
push
push
cmp
push
mov
dec
pop
and
mov
pusha
ret
inc
cmp
mov
cltd
movsl
inc
cmp
mov
outsl
xchg
or
jae
xor
mov
in
jg
ror
sbbb
sub
sub
icebp
pop
cmp
aad
pop
mov
rol
sbb
aad
mov
pusha
cltd
daa
sub
shlb
stos
pop
mov
adc
inc
and
outsb
xchg
jmp
sahf
insl
sub
loope
jbe
mov
dec
or
movsl
aad
scas
enter
xchg
mov
push
test
xchg
jns
jo
jp
jne
subl
inc
xchg
mov
jns
jb
sub
pusha
es
cmp
and
jae
mov
mov
popf
into
jo
pop
cmp
pop
inc
dec
inc
mov
jg
xor
mov
jae
addr16
adc
enter
jmp
mov
fdivrl
jmp
icebp
shl
cld
sub
fstl
dec
cmp
mov
fs
jmp
push
sbbl
addr16
mulb
xor
cs
idivb
lcall
dec
jp
ds
dec
in
cmp
cmp
repz
fisubs
fists
push
cmc
shlb
jbe
pop
insl
adc
pushf
inc
xor
enter
mov
in
mov
sbb
loope
data16
add
add
pop
push
push
dec
xchg
cmpsb
jbe
pop
pop
dec
rorb
repz
push
sbb
jge
or
scas
dec
enter
hlt
mov
jp
ret
ds
mov
mov
xor
xchg
or
testb
testb
jp
dec
mov
push
inc
jl
adc
xor
and
insb
mov
mov
mov
pop
adc
stc
push
jnp
popf
imul
mov
stos
lds
stos
stos
mov
addr16
lahf
pop
addr16
cs
lea
fldenv
and
inc
add
xor
sbb
std
or
je
pop
inc
push
mov
xor
dec
xchg
mov
cmpsl
scas
pop
lahf
movsb
pushl
lret
sub
jp
fisubs
mov
loopne
add
in
cmp
enter
into
rcll
and
fst
push
repnz
mov
dec
inc
cli
stc
data16
mov
and
movsb
mov
sbb
mov
pop
pop
push
lods
pop
inc
jg
cli
and
mov
mov
pop
push
push
insw
xchg
outsb
sub
imul
sarb
addr16
repz
je
repnz
inc
mov
pop
int3
mov
leave
stc
out
das
adc
stos
mov
lret
jle
imull
cmp
jg
or
test
pusha
hlt
mov
xchg
and
int3
addr16
popa
sub
mov
dec
dec
push
push
mov
mov
adc
lcall
inc
int
xor
sbb
push
aaa
lret
gs
mov
add
enter
jno
daa
cwtl
mov
mov
movsb
aas
js
mov
sub
fcomp
hlt
outsl
sub
pop
rcrb
or
pop
xor
dec
cmp
mov
in
mov
je
and
out
push
lds
xchg
pop
cmc
lcall
adc
dec
lret
push
add
add
fs
sub
pop
icebp
sub
ret
data16
cld
push
dec
gs
pop
mov
int
and
inc
xchg
inc
filds
sti
jl
push
dec
add
cmp
pusha
push
jo
fdivrs
lods
dec
lods
dec
jb
ss
dec
mov
shlb
push
pop
mov
mov
repz
push
dec
xlat
movsl
push
mov
xor
inc
mov
cmp
lret
in
lcall
ja
pushf
stos
pop
dec
insb
add
dec
push
shll
aas
js
and
int
movsb
inc
xor
imul
adc
shl
or
ss
push
pop
lret
addl
call
inc
dec
jecxz
push
outsl
and
mov
xchg
ljmp
lds
imul
adc
jge
movsl
mov
mov
mov
test
gs
lcall
mov
stos
dec
jo
addr16
popa
popa
aas
cmp
mov
lods
scas
je
cmp
lds
fdivrs
sbbl
or
mov
fdivrl
push
arpl
push
dec
jg
arpl
add
pop
test
scas
push
xchg
fdivs
rorl
mov
mov
call
mov
movsb
jne
push
pop
orl
inc
push
mull
mov
mov
mov
pop
sbb
data16
imulb
inc
mov
lcall
pop
pop
sbb
repnz
lods
dec
popa
popf
mov
xor
or
jmp
je
pop
and
lods
shll
xor
mov
push
and
daa
jae
fldenv
cwtl
insb
sbb
xchg
loopne
inc
sub
roll
lods
repnz
mov
jae
pusha
mov
pop
adc
dec
pop
lds
sbb
es
fwait
in
dec
pushf
mov
mov
bound
test
lds
sub
outsl
xchg
lret
fsub
or
cli
les
mov
add
mov
sbb
xchg
lcall
adc
fwait
insl
sbb
mov
inc
mov
insb
or
pop
cld
xchg
xchg
hlt
out
scas
push
rol
mov
test
ja
gs
jnp
lcall
mov
arpl
sub
rorl
push
pusha
xor
jbe
inc
std
ss
cmp
mov
imul
icebp
pop
ret
cwtl
xor
in
push
hlt
push
push
addr16
movsl
xchg
stos
cmc
add
mov
loopne
imul
pop
cmp
and
pop
dec
lret
enter
outsb
push
js
jmp
xlat
fldl
inc
push
xchg
fcomi
cmpsl
cli
enter
mov
xchg
out
dec
je
lds
out
mov
or
lret
push
inc
and
ror
jp
imul
and
xchg
stc
xor
push
xor
mov
pushf
rol
adc
push
push
aas
and
mov
push
decb
call
xchg
test
mov
add
mov
movsl
mov
sbb
inc
mov
xor
loopne
xor
ret
adc
jbe
pushf
faddl
xlat
sbb
xor
dec
push
xor
int
add
nop
popa
mov
mov
pusha
add
adc
pop
aaa
sub
rcrl
add
fistpl
out
test
rcrl
push
cmp
loope
in
push
loope
or
push
push
ret
ss
repnz
test
cmp
mov
add
jg
stos
andb
mov
push
loop
mov
pop
mov
push
sbb
push
sbb
push
dec
cvttps2pi
addr16
mov
cmp
fcoml
std
jmp
mov
mov
je
mov
xchg
xor
jnp
popa
sbb
push
out
lret
xor
mov
mov
and
mov
jp
xchg
rcr
in
mov
jbe
dec
cltd
pop
xchg
clc
push
cmp
sbb
push
cmp
sbb
sub
ds
jl
mov
out
xor
push
add
push
pop
lahf
sub
rol
adc
dec
lea
es
out
add
jns
jne
xor
sbb
js
push
sbb
shrl
sbb
call
dec
repnz
loope
mov
idivl
movsl
pop
lcall
mov
push
xchg
icebp
xor
or
inc
sahf
push
test
outsb
mov
in
sbb
mov
adc
ss
adc
mov
add
out
mov
in
jns,pt
mov
je
add
cmp
js
ret
jl
in
push
mov
loopne
cmpsl
rorl
inc
add
mov
xor
lahf
fmuls
pop
je
fcom
scas
test
mov
sbb
jecxz
push
sbb
jbe
sub
ficoms
pop
cs
movsl
mov
pop
dec
in
imul
imul
jae
fsts
add
adc
push
xlat
movsl
shll
add
popa
push
adc
inc
roll
inc
bound
mov
mov
push
push
rol
rol
icebp
jns
int3
aad
xchg
fcoms
xchg
out
or
sbb
add
outsl
cmc
xor
pop
arpl
mov
jae
fidivrl
adc
mov
loopne
nop
dec
mov
push
dec
jne
shl
add
popa
push
sub
sbb
insb
js
or
test
incl
dec
popf
dec
sbb
clc
imul
push
sahf
mov
insl
cmpsb
jb
and
and
outsl
sub
xor
str
push
mov
int3
lock
add
bswap
lret
jg
test
xchg
cltd
cs
dec
out
clc
fs
push
enter
xor
add
jno
mov
clc
lret
pop
lds
or
es
and
mov
or
mov
ret
cmp
sbb
out
outsl
nop
mov
sbb
fstps
jo
adc
test
call
ljmp
mov
push
pusha
shrl
mov
mov
add
daa
adc
rcrb
add
hlt
negl
es
addr16
outsb
dec
inc
add
rol
shll
andl
int3
mov
ljmp
leave
das
rorb
mov
aas
sub
lahf
xlat
and
dec
aas
hlt
push
xor
scas
pop
pop
das
adc
mov
push
adc
push
loopne
adc
sahf
mov
mov
adc
add
push
out
cmp
ror
cmp
iret
jns
xchg
sub
mov
mov
sub
mov
ret
lret
ljmp
push
in
mov
out
pop
lea
mov
int3
cli
dec
and
loop
mov
or
cmp
xchg
jle
sub
jmp
stos
add
stos
jmp
loopne
jns
hlt
outsb
jle
icebp
in
cmp
inc
int
xor
add
mov
imul
outsb
pop
loop
push
aas
adc
neg
ss
es
sbb
cmp
fsubrp
imul
push
inc
test
mov
mov
or
push
leave
mov
cltd
cmp
sub
fsub
adc
or
add
sub
mov
mov
sahf
pop
xchg
mov
inc
cwtl
lcall
pop
lods
jge
xchg
dec
xchg
adc
mov
push
add
cmp
inc
mov
in
sarb
jnp
mov
jecxz
inc
xor
cmp
jne
pop
push
into
lcall
mov
sahf
xlat
lret
scas
or
xor
cmp
xor
bound
movsb
cld
pop
setno
mov
sub
rcr
out
inc
lahf
cli
icebp
gs
xchg
adc
mov
xchg
push
sbb
mov
dec
jl
mov
jne
insb
dec
pop
insb
std
cmp
add
mov
xchg
mov
sbb
pop
repz
and
cli
dec
or
mov
xchg
adc
push
lcall
loopne
cmp
cltd
pop
loop
ret
aad
sbb
jmp
sbb
push
xchg
mov
rolb
out
mov
leave
enter
imul
pop
fisubrl
xchg
sbb
les
ret
adc
sar
adc
in
daa
shrl
shlb
lcall
xchg
mulb
mov
xchg
xchg
or
cs
rol
xor
in
negl
dec
scas
in
push
loope
mov
adc
cmc
scas
or
test
ja
inc
inc
add
pop
orl
mov
daa
add
iret
and
loope
ret
popf
xor
lahf
cmc
cmp
daa
push
imul
rorb
loop
or
comiss
leave
sarl
shll
sar
je
pop
lcall
loope
xchg
jg
or
addr16
inc
popa
dec
jmp
sub
jmp
pushl
ret
sbbb
test
aaa
mov
cmp
cmp
inc
sbb
ss
imul
xor
sub
data16
sub
fs
push
add
jne
hlt
ja
jge
adc
popa
out
mov
fdivs
daa
movsl
cld
cwtl
scas
in
inc
sbb
ffreep
xchg
cwtl
and
shll
lods
push
test
data16
sbbl
adc
cmpsb
fwait
bound
lock
push
push
inc
add
push
shrl
daa
cmpsl
xor
jne
sbb
jmp
cmpsb
cmpl
push
sbb
ljmp
adc
sbb
push
xor
or
rcrb
mov
mov
jo
rolb
aad
subb
ljmp
movsb
jns
mov
mov
cmc
cmp
stc
mov
pop
push
push
repz
sub
xchg
stos
in
inc
jg
leave
test
es
sub
mov
test
js
adc
cmp
mov
leave
and
sub
stos
add
outsl
or
loopne
daa
leave
cltd
push
lret
xor
les
push
leave
add
sub
push
daa
in
add
xor
inc
pushf
scas
sub
inc
jae
xchg
cmpsb
movb
cmp
jecxz
ds
imul
add
repz
lcall
sbb
movsb
sub
mov
ljmp
cmp
iret
sbb
ljmp
cwtl
imul
sbb
xor
cli
ret
cmp
pop
mov
leave
mov
mov
leave
cmpsb
std
push
mov
scas
adc
loope
mov
add
clc
inc
icebp
cmp
ljmp
int3
nop
imul
push
clc
cltd
add
jo
enter
loopne
movsl
mov
push
adc
rcl
and
out
jb
sbb
call
adc
xor
sbb
push
outsb
sub
mov
mov
mov
idivl
jge
xor
insl
cmp
cmpsb
lahf
gs
xchg
sub
jnp
jae
enter
insb
pop
and
imul
mov
push
pop
out
sbb
mov
cmp
add
fldenv
push
jns
dec
xchg
stc
push
cmp
or
ss
xor
pusha
cmp
pop
push
loopne
add
or
ljmp
add
pop
pusha
push
add
addr16
push
and
pop
insb
scas
and
mull
mov
adc
mulb
test
mov
xlat
and
jp
inc
mov
adc
fiaddl
jg
out
add
mov
lock
add
xchg
lahf
xchg
sub
incl
into
fsubs
xchg
out
sbb
in
add
fnstsw
out
xor
adc
pop
inc
xor
jo
dec
mov
sub
fldenv
pop
inc
jbe
andb
and
test
jae
mov
and
mov
mov
lods
dec
xor
adc
sub
xlat
xchg
jle
inc
negb
scas
stos
test
pusha
mov
xor
iret
cmp
movsl
xor
and
sub
add
mov
dec
decb
test
mov
cld
pop
cmp
mov
inc
popa
sub
sbb
mov
sub
mov
in
add
in
test
xor
mov
pop
xchg
les
xchg
push
aaa
ljmp
dec
pop
call
sbb
fscale
jge
adc
dec
adc
insb
cld
pusha
pop
je
jg
push
in
cmp
imul
repnz
imul
dec
fwait
dec
jg
cmc
xchg
lea
and
inc
xor
xor
bound
inc
pop
emms
push
push
jnp
clc
aas
jmp
sti
push
dec
fsubrl
xor
inc
xor
int3
sbb
ret
xchg
scas
imul
out
imul
jns
push
in
mov
jmp
mov
add
and
pop
push
subps
add
and
mov
xor
loop
pop
mov
hlt
mov
out
mov
insl
jmp
sbb
mov
cmc
xor
add
add
addr16
out
mov
addr16
out
iret
sbbl
push
clc
sbb
mov
lret
shl
xor
call
in
cmp
pop
pop
mov
add
jnp
xchg
dec
add
jge
push
cmp
int
aam
push
push
jae
push
lcall
fisubrl
mov
sarl
inc
ljmp
rolb
inc
mov
mov
dec
pusha
nop
sbb
pop
mov
js
adc
xor
pop
jns
lret
xor
and
push
loope
push
rcrl
cmp
ljmp
movsl
jl
imul
mov
std
and
aaa
mov
loop
mov
inc
inc
dec
jnp
cmp
inc
rol
je
dec
inc
adc
sub
adc
mov
ficoml
cmovp
and
decl
add
inc
dec
fwait
xchg
push
adc
hlt
icebp
movsb
aad
lcall
adc
adc
ljmp
test
inc
bound
cwtl
and
in
imul
xor
lds
inc
out
stos
icebp
dec
cmp
ljmp
lods
sahf
inc
cmp
popa
rol
dec
repz
leave
stos
sub
mov
scas
mov
push
rcrb
movsb
lret
into
push
ss
loope
fs
xchg
scas
cwtl
out
sub
fisubl
xlat
lea
xchg
fstpt
cltd
inc
in
adc
enter
adc
fwait
cwtl
rolb
adc
and
dec
mov
incl
xchg
jecxz
cmpsl
sub
jnp
lock
jmp
push
xlat
and
mov
ljmp
push
enter
lahf
xchg
cltd
cmp
jle
cmpsl
cmpsl
cwtl
insb
cli
jne
fidivrs
jl
pusha
add
sbb
xchg
mov
xor
test
ret
or
das
out
pop
sarl
mov
sub
mov
cmpsb
jmp
mov
pop
mov
int
iret
lcall
adc
mov
addr16
xchg
ja
js
test
out
push
and
xorl
push
sahf
es
sbb
cmp
js
xor
push
div
pop
pushf
mov
je
pop
stos
lret
push
push
push
aas
push
pop
les
xchg
cmpsb
mov
shrb
loopne
int3
push
dec
push
xchg
outsl
fcmovnb
icebp
sbb
scas
jl
test
rclb
mov
dec
push
fs
inc
cmp
sub
clc
mov
push
sbb
mov
fsubrp
fisttpl
stc
xlat
cmc
inc
dec
roll
sbb
mov
and
xor
sub
push
adc
jg
mov
push
push
into
out
popa
or
sti
push
lahf
jb
test
mov
in
test
fildl
int3
outsl
lods
iret
mov
jge
xor
sbb
pop
mov
cmp
mov
sarl
or
mov
or
rorb
dec
mov
shrb
shr
and
lock
jge
dec
sbb
xor
mov
insb
cmp
mov
mov
in
mov
call
pop
mov
les
sub
mov
js
sti
and
mov
sahf
mov
jne
xor
mov
mov
fistpl
test
push
cmpsb
call
daa
addr16
or
movsl
add
mov
adcl
sbb
push
and
pop
xchg
dec
sbb
adc
js
nop
pushf
mov
or
sbb
sbb
push
xchg
enter
pop
adc
dec
xlat
stos
inc
mov
pop
int3
inc
xor
jmp
loope
adc
ds
xchg
in
xor
ret
mov
das
sub
sbb
add
popa
xchg
fsubr
cmp
add
mov
inc
or
das
lret
fimuls
out
lea
out
pop
jb
je
sbbl
sub
repz
push
data16
hlt
xchg
dec
aaa
fiaddl
xchg
and
and
mov
xor
pop
jns
lret
iret
add
cmp
push
mov
cld
dec
scas
arpl
and
dec
std
or
mov
test
adc
or
addr16
lods
xchg
mov
inc
inc
jb
ret
roll
das
pop
out
sbb
or
pop
dec
sti
mov
pop
sahf
dec
outsl
cli
imul
mov
ljmp
ljmp
cli
shll
cld
sub
sbb
sbb
mov
pop
cld
mov
and
addr16
repz
jg
imulb
dec
in
popa
adc
popa
lret
test
in
lods
push
add
mov
inc
aaa
mov
lcall
xchg
add
jge
aas
xchg
add
jmp
and
movl
hlt
or
movsl
popf
jmp
sub
pop
jns
data16
daa
pop
mov
lret
rclb
aam
pop
mov
jns
inc
mov
idivb
push
rcrl
jecxz
popf
in
std
out
cmp
or
ss
aam
and
outsb
mov
cwtl
xor
push
in
out
es
mov
out
mov
fistps
jns,pt
dec
cmp
mov
add
mov
add
mov
xchg
insl
test
ret
inc
xchg
jo
popa
ljmp
xor
cli
pusha
pop
mov
adc
lcall
jbe
cmp
dec
push
leave
xor
mov
sub
cmp
lock
lock
jbe
jae
rcrl
dec
movsb
loop
push
pop
add
cmc
icebp
lcall
or
test
mov
repnz
nop
shlb
mov
push
movsl
fidivs
and
jp
xchg
int
sub
addl
shrl
and
lret
mov
clc
adc
mov
cmpsl
insl
repz
inc
xor
adc
or
movsb
mov
push
insl
xchg
rcr
fstpt
xchg
jg
aam
lahf
nop
xchg
mov
adc
or
push
stos
cli
inc
pcmpeqd
loope
add
sub
push
adc
xchg
add
loop
aas
lret
pusha
adc
pop
mov
rcrl
repz
cmp
sbb
and
dec
loopne
xlat
mov
mov
hlt
ja
or
dec
outsb
jle
inc
insl
ficomps
daa
sub
jbe
xchg
hlt
xchg
cld
jle
fsubrs
aam
add
orl
sub
arpl
mov
add
xchg
add
or
pop
mov
pop
mov
test
movsl
ret
jl
push
sbb
lods
and
xchg
dec
sbb
xchg
fwait
insl
inc
lret
jb
mov
jl
nop
jg
punpckhdq
jne
pop
and
dec
iret
inc
iret
int
sbb
sbb
out
xchg
jno
xor
ja
int
inc
fsubrl
lcall
jnp
loopne
inc
imul
jbe
add
or
repnz
lahf
pop
sbb
jge
repnz
mov
aam
pop
dec
int
andb
adc
daa
adc
sub
push
popf
mov
jmp
stos
imul
inc
lods
cmp
lods
ja
mov
imul
xchg
fnstenv
lcall
fstl
lods
pop
sbb
xor
pushf
inc
pop
jmp
cli
mov
int
adc
pop
push
push
sbb
scas
ret
cltd
add
out
add
xchg
lcall
mov
lock
imul
std
lcall
pop
aam
sbb
call
xchg
aas
call
jle
clc
or
xor
in
sti
sub
xchg
mov
mov
jecxz
fs
ss
push
aas
arpl
or
sub
xchg
fs
add
bound
pop
lds
movsb
mov
lea
dec
add
loopne
and
fstl
imul
in
lds
popf
pop
add
cmc
pop
adc
lds
call
mov
or
pop
fildl
icebp
jbe
cs
cmc
sub
push
out
lret
cmp
adc
int3
add
hlt
pop
enter
cli
shl
in
xlat
mov
jb
and
jb
js
cmc
icebp
xchg
shll
push
pop
push
ja
cmp
scas
jecxz
scas
cmp
lcall
cmp
jg
and
inc
inc
jl
xor
lods
lahf
mov
fldl
push
inc
scas
adc
inc
push
loop
addr16
xchg
out
adc
or
out
fiaddl
pop
add
frstor
or
or
testb
inc
xchg
cmp
jbe
js
or
hlt
lcall
push
iret
es
xor
ja
add
lds
or
jo
rorl
inc
stos
pop
jbe
test
pop
gs
push
cmp
lahf
dec
es
out
cltd
jbe,pn
inc
gs
fwait
sbb
mov
nop
jb
pop
stos
sbb
loop
sub
inc
jno
or
xchg
and
pop
cmp
jmp
xor
ret
and
enter
fcomps
inc
cmc
negb
rol
inc
imul
popf
outsl
fnstenv
mov
mov
incl
divb
sbbb
add
fiadds
mov
push
insb
daa
add
xchg
pop
lret
mov
sti
sub
xlat
or
fldenv
or
sbb
stos
inc
mov
stos
dec
hlt
jno
enter
jnp
and
mov
adc
sbb
popa
pop
xchg
ret
dec
cmp
xchg
xchg
push
adc
and
push
clc
pop
xchg
aam
aad
std
inc
aaa
jns
push
lds
sub
movsl
das
adc
fsubr
movsb
enter
setl
aaa
in
cmpsb
and
fwait
into
push
xchg
jl
cld
lret
dec
jle
or
inc
pop
cmpsl
jbe
xchg
push
cli
aad
sbb
fildll
mov
das
adc
xor
dec
sbb
xlat
and
dec
out
or
stc
push
xchg
dec
aam
and
cmc
and
daa
fidivrl
add
insl
inc
add
test
repnz
bound
add
lret
and
jge
sbbb
clc
sbb
std
ss
sbb
and
push
into
fmul
andb
movsl
sarl
lea
in
add
sti
sahf
mov
pop
mov
sub
adc
xchg
pop
mulb
ror
pusha
jne
lods
add
add
xchg
arpl
lret
inc
in
adc
or
flds
addb
pop
mov
in
mov
mov
and
sub
das
fbstp
push
in
aaa
inc
cs
popa
jno
or
in
bound
lcall
inc
sub
or
out
lea
and
mov
push
xor
or
sub
add
les
lcall
push
inc
aad
xor
mov
add
adc
push
in
fwait
dec
cmp
subb
push
mov
lret
into
ds
ja
popa
pop
pop
cmpl
lahf
pop
in
in
lock
int
sub
push
mul
jne
sti
mov
lock
xchg
ljmp
sub
pop
add
xchg
orl
dec
xchg
jno
cmp
xlat
aaa
lods
mov
cld
scas
into
fisubs
xor
shll
mov
clc
xchg
sbb
pop
inc
push
enter
psrld
mov
pop
push
fildll
stos
in
cld
jmp
sub
sub
xchg
mov
jmp
mov
mov
push
sub
pop
xor
dec
stos
mov
xor
cmp
bound
push
jns
icebp
or
pop
cmpsl
xor
sub
jo
repz
cltd
scas
sbb
shlb
sbb
call
call
mov
dec
loop
int
fbld
mov
dec
fcoml
lret
cmc
mov
ffreep
pop
adc
xchg
mov
cld
push
lods
xor
push
and
adcl
andb
inc
imulb
inc
shlb
adc
adc
pop
mov
jmp
sbb
lret
xchg
ret
cmpsl
jns
hlt
das
mov
lahf
add
lea
dec
mov
cmp
inc
loop
popf
test
inc
push
cmp
xchg
fldenv
cli
or
xchg
fs
insb
lret
adc
xchg
popa
je
mov
add
icebp
idiv
push
outsl
hlt
fwait
mov
inc
mov
test
xor
dec
jge
push
inc
popa
imul
xchg
int
xor
ret
int
loopne
sub
and
mull
test
aam
dec
adc
fsubr
ret
inc
std
ret
cmp
ficoms
adcl
pop
test
enter
dec
icebp
in
lods
test
sbb
push
inc
dec
imul
aad
into
push
inc
aam
cmp
mov
cs
lret
clc
scas
sub
add
imul
inc
and
pop
stc
cli
outsl
inc
ljmp
cmpsl
scas
sub
pop
mov
add
stos
fbstp
mov
xor
movsl
inc
mov
stos
add
test
clc
xlat
out
sbb
adc
fwait
pop
mov
jge
test
add
push
es
pop
and
mov
or
xchg
outsb
dec
jno
mov
movsl
sub
dec
xchg
cld
mov
jmp
rorb
popa
cmp
js
je
les
jmp
mov
in
int3
fidivs
xchg
xor
sbb
and
daa
jb
pop
lods
dec
xlat
pusha
imul
ljmp
hlt
lret
jnp
test
mov
push
adc
in
mov
cmp
stos
adc
mov
das
jne
xor
cli
pop
mov
sub
cmp
lret
sub
call
cmp
pop
adc
push
jmp
or
daa
in
xor
addr16
data16
leave
imul
push
into
enter
rorb
mov
test
repz
sbb
inc
push
mov
or
mov
js
fstps
pop
das
xchg
out
inc
mov
xlat
pop
xchg
sbb
ret
aad
mov
mov
call
dec
loopne
jg
rcl
enter
jns
cmp
sub
xchg
inc
xchg
aam
mov
sub
negb
data16
inc
cwtl
mov
pop
insb
icebp
ljmp
mov
push
mov
adc
pop
inc
xor
push
daa
aad
mov
cmp
cmp
adc
cmp
call
mov
stc
lret
pop
or
inc
cmpsl
dec
stos
push
and
cli
pusha
push
mov
pop
stos
xchg
add
add
es
movl
scas
pop
out
pop
out
sbb
je
pop
xor
mov
add
lock
lock
fcoml
xchg
inc
mov
int3
subl
or
jno
pop
js
clc
insb
jbe
fcomps
ljmp
popa
mov
pop
fisubl
xchg
addr16
adc
sbb
je
mov
ret
das
dec
hlt
pushf
dec
inc
lahf
movl
sub
fsubrl
jne
leave
add
and
loope
jns
dec
dec
test
push
js
mov
fidivrs
andb
aam
lret
sarb
rolb
inc
aad
mov
sub
stos
ret
in
cmpsb
cmp
mov
hlt
js
push
loopne
or
mov
pop
stos
in
int3
sub
outsl
push
xchg
int3
fwait
push
mov
inc
cmp
mov
jo
popa
inc
pop
out
outsl
mov
and
pop
lahf
arpl
dec
mov
fisubs
pop
inc
jg
das
mov
mull
sar
inc
std
mov
icebp
pop
mov
les
fnstsw
inc
ja
push
push
or
icebp
mov
or
jo
in
xchg
fnstenv
in
pop
das
fldt
stos
push
mov
cmpsl
mov
add
lods
xchg
lds
mov
bound
sbb
inc
gs
leave
push
jle
loop
insb
sahf
test
cmp
jb
test
out
repz
cmp
lods
dec
pop
in
das
or
in
arpl
and
cmc
add
ss
pop
sub
mov
pop
fs
in
out
xor
pop
dec
jmp
movsl
daa
je
outsl
adc
test
lcall
mov
xor
mov
add
shll
inc
hlt
add
dec
add
jnp
outsl
add
xchg
jle
xchg
adc
gs
pop
test
adc
and
flds
mov
rcrb
loope
jbe
out
fcomps
pop
mov
add
int3
dec
popfw
xchg
dec
arpl
adc
es
sbb
into
gs
scas
arpl
subb
cmpb
and
sbb
pusha
xor
fimuls
adc
push
mov
inc
mov
lods
fiadds
sbbb
sub
fwait
dec
lods
insb
jno
shlb
negl
mov
mov
nop
push
adc
les
add
dec
adc
js
bound
mov
inc
push
mov
cmp
or
call
mov
mov
lret
cmp
or
clc
dec
push
jno
test
test
mov
cld
add
and
cmp
mov
popa
jg
lea
mov
roll
xchg
int3
aaa
mov
mov
inc
lock
in
fwait
ret
jecxz
sti
sub
cmp
pop
push
push
sbb
push
pop
aad
ss
pop
add
mov
inc
pop
push
or
push
jae
mov
arpl
push
mov
es
mov
enter
bound
adc
shrl
jl
adc
cmp
pop
sub
int
jl
mov
out
insl
mov
aad
cmp
or
add
fstps
push
shlb
xchg
jns
jnp
lret
push
sub
inc
bound
in
fsubl
sub
lcall
movsb
cltd
xchg
lcall
loop
mov
lods
pop
std
ret
cmp
xchg
dec
popf
dec
adc
call
dec
pop
xchg
pop
xchg
xlat
stos
sbb
jno
nop
xchg
sub
and
cmpsl
loopne
add
jp
push
dec
fiadds
add
aaa
rolb
push
pusha
out
xor
mov
or
mov
ffree
repz
mov
nop
mov
enter
adc
and
out
out
lcall
scas
ljmp
imul
fdiv
adc
adc
xchg
or
mov
lahf
negb
mov
inc
aad
nop
and
mov
and
loopne
fsubp
jo
and
jb
shrl
shll
popf
pop
pop
repz
xor
out
xor
mov
out
sbb
rcrl
ss
xlat
adc
out
and
jg
and
and
inc
fisttpll
pop
int
out
insl
xlat
mov
movb
mov
call
and
push
test
adc
cltd
addr16
and
inc
push
and
movsb
jns
stos
cli
roll
std
mov
scas
inc
push
jae
mov
or
ret
cltd
pop
xchg
sbb
xor
ret
push
rorl
test
dec
pop
sahf
or
scas
bound
testb
fnstenv
jecxz
fbstp
xchg
cmp
imul
stos
mov
in
aaa
xor
dec
cmp
or
shll
insl
mov
mov
dec
or
and
addl
sub
std
mov
and
ficompl
push
dec
cs
iret
rcrl
push
leave
cmp
popf
xor
add
enter
pusha
mov
fs
mov
jnp
insb
push
sub
mov
test
int
orl
in
jge
xchg
lahf
sub
rclb
arpl
call
xor
fwait
mov
push
mov
shrl
out
mov
xorl
mov
paddb
inc
adc
into
ror
cmp
push
loope
xor
xlat
iret
push
lea
lcall
addr16
or
jne
cmp
mov
sbb
jns
push
dec
dec
inc
xchg
daa
jns
repz
dec
int3
cli
ds
and
dec
adc
xchg
jo
idivl
adc
ffree
sbb
dec
adc
xchg
shlb
adc
sub
push
cmp
fs
xor
xchg
scas
repz
aam
nop
inc
mov
loope
test
int
fisubs
movsl
mov
loopne
addb
loopne
mov
shrl
lret
js
mov
adc
or
xor
stos
lahf
cmc
dec
mov
ljmp
movsl
sbb
je
jecxz
frstor
test
add
imul
push
add
in
aad
rorl
adc
adc
enter
mov
mov
or
mov
mov
fs
scas
je
and
adc
push
pop
out
stos
lret
inc
add
xor
sbb
push
push
mov
ret
aam
mov
mov
popa
lahf
sub
jae
mov
pop
stc
jge
jl
lea
pop
out
and
jae
addr16
repz
mov
mov
idiv
out
xchg
ljmp
sub
fistpll
or
fiadds
xchg
out
push
dec
ss
xor
outsl
std
xchg
std
inc
ds
int
add
inc
fisttpl
dec
dec
mov
jge
loope
add
pop
add
push
push
insb
pop
sbb
and
in
imul
mov
xchg
fbld
xchg
jg
and
popf
mov
dec
stos
push
lds
fstpt
xor
cmp
adc
ret
inc
jmp
fidivrl
imul
out
notb
add
adc
xor
js
scas
jbe
sbb
data16
mov
outsb
leave
pop
push
test
mov
out
addb
add
push
inc
cltd
rcrb
lods
lods
dec
fcmovb
or
repz
or
pop
push
and
jae
in
adc
imul
xchg
xlat
test
stos
mov
pusha
inc
xor
mulps
mov
test
mov
sbb
cmp
cmp
rolb
dec
sub
hlt
cmp
js
xchg
pushf
xlat
sbb
into
aam
mov
dec
mov
mov
pop
ret
push
xchg
mov
popl
outsl
sbb
and
into
mov
and
push
fwait
jecxz
cmp
xchg
fistpll
cld
rol
inc
jp
xor
push
mov
mov
fisttps
rclb
int3
repz
xor
test
push
icebp
push
pop
andb
jbe
fsts
cld
scas
fists
mov
xorb
sub
dec
lock
stos
es
in
mov
test
jb
push
hlt
icebp
insl
in
sub
ss
stos
sub
in
jp
xorb
stc
xchg
outsb
je
negl
adc
je
fistps
jmp
pushf
loop
clc
and
or
jmp
incl
or
cld
push
lahf
push
inc
xor
sub
scas
xchg
pop
xchg
xor
xchg
ficoml
xchg
push
popa
fcoms
jmp
xchg
fistl
mov
and
or
pop
popa
mov
shlb
cmpl
test
rolb
lret
and
mov
das
test
cwtl
sub
xchg
fbld
imul
jg
ret
push
ljmpw
shll
aaa
push
pop
popf
icebp
xor
mov
dec
bound
jno
lcall
cmp
mov
push
ffree
cmp
mull
outsl
mov
cli
test
mov
mov
mov
es
stc
and
enter
xchg
inc
cwtl
popf
sbb
ret
out
sbb
xor
mov
dec
cli
hlt
fwait
dec
or
sbb
ljmp
jb
ds
and
or
addr16
push
mov
clc
hlt
lret
ret
mov
jnp
cs
pushf
push
fsubrl
aam
or
testb
cmc
out
xor
xchg
push
pop
lods
mov
add
test
int3
les
loop
jnp
add
fld1
aam
inc
movl
scas
into
mov
outsl
push
sub
inc
push
in
jno
inc
adcb
ja
or
adc
cld
jp
scas
xorl
sub
jns
mov
shlb
xchg
stos
test
das
sub
js
sub
pusha
mov
adc
clc
pop
sub
cmp
or
out
aad
les
rcl
mov
mov
rol
jns
mov
lods
add
stc
mov
jp
pop
xlat
mov
fwait
js
aad
call
mov
mov
nop
and
push
pop
fwait
jge
loope
scas
pusha
lcall
jo
add
mov
movsl
test
fcoml
cmp
stc
loopne
dec
movswl
ljmp
cmpb
ds
jecxz
lret
cmp
ljmp
inc
addr16
jl
fnstenv
mov
mov
pushf
mov
cmpsb
sbbb
fsubr
movsb
pop
orb
jo
sub
push
or
jne
xchg
jle
cmpsl
in
cmc
adc
fists
inc
pushf
and
pop
pop
pop
dec
pusha
cwtl
clc
imul
sbbl
js
fisubs
and
mov
ret
fwait
lea
ret
repnz
popa
js
loop
outsl
les
stos
mov
fwait
ror
in
pop
adc
mov
push
mov
je
cwtl
cltd
or
in
jno
cmp
loopne
int
lock
mov
sarb
popa
negb
dec
outsl
xchg
push
lea
cmp
push
test
stc
inc
loopne
push
mov
sub
xor
dec
and
mov
out
push
push
aad
sbb
dec
mov
push
jmp
data16
aad
aas
mov
insl
repnz
pusha
sub
push
pop
dec
sbb
pop
mov
jp
mov
dec
pop
shrl
outsb
aam
xor
sbb
inc
sub
jecxz
lods
push
mov
out
sbb
dec
rcr
adc
mov
jmp
jp
fisttpl
xchg
pop
jb
fcoml
inc
sub
pop
push
mov
jl
clc
xchg
leave
jecxz
dec
cltd
mov
and
mov
jl
out
gs
xchg
xchg
cmp
add
adc
inc
sahf
xchg
cmp
dec
mov
add
test
sahf
jg
cltd
ja
sub
lret
or
inc
mov
fisubs
hlt
and
sbb
inc
xor
fucom
daa
pop
pop
fisttps
pop
rol
fnstenv
fwait
ja
in
jno
in
js
dec
dec
push
jmp
addb
roll
push
imul
mov
gs
dec
xchg
fistl
in
add
bound
or
dec
and
dec
cmp
cmc
test
lret
mov
aaa
sbb
int3
push
in
sbb
and
mov
push
hlt
sub
cmp
negb
frstor
fcmovnbe
or
repz
mov
jle
fcom
jmp
add
rclb
mov
out
in
movsb
mov
je
aad
jl
or
xchg
shrl
mov
popa
or
sub
add
cmpsl
add
mov
pop
fcmovnu
pop
rorl
adc
xchg
pusha
in
xchg
adc
dec
je
lcall
aaa
aad
sbb
mov
popf
iret
pop
adc
push
dec
xchg
pop
jo
xchg
inc
adc
imul
add
bound
mov
and
movsb
mov
xchg
cmp
aam
iret
or
fmull
and
arpl
lds
dec
roll
adc
pop
ret
add
sbb
mov
test
push
adc
movsl
jae
sar
sti
loope
jg
test
mov
aaa
test
or
rclb
pusha
pop
dec
xor
sub
cmp
popf
cmp
sub
cmpsl
test
popa
adc
sbb
add
es
imul
sbb
and
adc
rcl
push
adc
ds
xchg
lock
xor
push
fidivrs
jmp
sahf
or
sub
mov
sbb
in
inc
jmp
movl
xlat
push
cltd
sub
out
sbb
in
xchg
in
push
pop
xchg
xchg
icebp
xor
push
xchg
stos
enter
push
xchg
xlat
les
call
test
call
mov
add
aad
imul
int3
mov
test
and
sub
data16
nop
jge
inc
outsl
dec
jae
scas
sub
ja
push
cltd
xchg
mov
or
movsl
dec
ljmp
push
into
bound
mov
jle
add
mov
xchg
cmp
shll
mov
dec
sbb
xor
lock
fs
mov
adc
xchg
add
or
into
inc
loopne
sbb
mov
dec
push
and
lcall
adc
test
or
cmp
enter
pop
cli
cs
adc
add
shrb
push
icebp
das
les
ja
pusha
mov
cmp
dec
push
test
adc
pop
pop
js
sub
mov
or
lds
cmp
mov
aam
jmp
inc
fwait
test
xchg
das
mov
scas
sbb
jb
mov
jg
rcll
insb
push
xchg
out
arpl
es
or
jmp
push
mov
aaa
push
fbld
sbb
fcmovbe
push
int
add
gs
roll
add
cmp
cmp
mov
cmp
jmp
push
pop
xor
repnz
pusha
sbb
test
outsb
dec
cmp
mov
dec
iret
mov
push
insl
xor
andl
ficompl
sbb
adc
sbb
aaa
es
iret
push
iret
ja
fldenv
mov
into
mov
lea
jmp
push
mov
jbe
mov
cmp
pop
lds
js
push
jg
adc
pop
pop
xor
xorl
mov
cmpsl
js
xchg
pop
cmpsb
ret
mov
dec
in
xchg
xchg
and
sbb
mov
xor
test
mov
jmp
nop
jb
mov
xchg
jno
mov
rcrb
icebp
lea
mov
adc
xorl
fstps
popf
call
cmp
imul
mov
loope
scas
add
out
rcll
stos
mov
mov
scas
jne
out
int
es
sub
push
je
mov
sbbb
nop
pop
lods
push
enter
ss
cwtl
mov
sbb
pop
test
loope
cmc
fldt
inc
int
insl
push
scas
iret
lcall
mov
arpl
lds
push
and
jo
xchg
dec
cmpsl
pop
cltd
jle
into
pop
mov
iret
lret
sti
icebp
cmp
adc
jo
repnz
jb
pusha
int3
cli
push
lcall
in
xchg
cwtl
inc
xlat
js
lea
pop
pop
psrad
cmp
mov
arpl
jl
fiadds
sub
adc
fnstenv
aam
pop
push
lock
mov
in
dec
shlb
sub
cmc
fildll
jp
mov
lods
inc
pop
or
hlt
in
repnz
push
adc
and
jae
mov
jb
scas
dec
sbb
lods
jne
xorb
shrb
xchg
mov
mov
push
inc
push
cmp
lods
xor
and
cmp
fcmovbe
ja
decb
push
adc
or
std
push
xchg
pop
fistpll
fnsave
mov
js
xchg
fistpl
inc
and
call
int
push
subl
xorl
sub
mov
test
mov
in
data16
jne
data16
mov
call
adc
pop
inc
icebp
inc
inc
lret
lahf
push
jecxz
sbb
push
je
and
les
pop
inc
jae
aas
jae
sbb
jo
mov
add
cmp
xor
xor
push
sub
mov
push
and
jmp
nop
cmpsl
jecxz
jae
sarl
push
pop
ret
idivb
jns
sub
nop
cltd
push
movsl
adc
inc
into
cmp
icebp
adc
mov
xor
xchg
sbb
pop
cmp
push
push
rclb
aam
popf
cld
and
xchg
jp
loop
inc
push
adc
xchg
push
pop
stos
out
shlb
cmp
movsb
aad
xchg
popa
add
out
xchg
loop
movsb
rolb
or
sti
sub
aas
fcompl
dec
popf
divb
scas
dec
cmc
jne
lahf
loop
test
pop
fnstenv
dec
pusha
inc
xor
adc
sub
scas
push
sbb
add
cmp
enter
lahf
and
in
cltd
or
mov
cmp
repnz
sub
bound
jge
popl
ja
leave
add
rcrl
ret
call
mov
imul
psllw
gs
mov
lahf
je
lcall
mov
divl
out
pop
stos
call
mov
icebp
sub
repz
clc
push
in
jp
rclb
std
pushf
xor
js
inc
sub
inc
ja
xor
ljmp
or
rorb
push
pop
fsubr
sahf
lahf
nop
mov
jg
push
in
mov
rcll
aaa
int3
mov
push
loope
shr
testl
cwtl
jne
mov
in
std
lss
sbb
or
sub
fistpl
ljmp
fwait
gs
xchg
stc
insl
not
push
mov
cltd
std
stos
movsl
xchg
mov
cmc
dec
inc
mov
jae
cmp
cwtl
dec
push
mov
sti
jbe
or
lock
js
pop
cli
cli
cmpsl
mov
mov
std
data16
lcall
loop
inc
cmc
adc
shlb
or
mov
fmulp
fisubrs
cmp
ret
push
inc
sub
call
dec
es
add
cmc
xchg
sub
inc
add
add
out
aad
sbb
pop
lea
xchg
rcrl
push
sti
push
and
push
add
pop
xchg
mov
sbbl
je
xor
stos
addb
or
mov
xlat
mov
jmp
jnp
stc
adc
out
pop
xchg
and
pop
cmp
jecxz
mov
jae
stos
mov
ss
mov
adc
iret
in
lock
repnz
jae
push
test
mov
mov
inc
lods
mov
mov
lods
jge
mov
mov
es
dec
stos
jp
imul
test
mov
loope
cmp
mov
adc
push
and
adc
mov
rorb
pop
mov
repnz
mulb
add
add
push
imul
xchg
xchg
jmp
rep
out
add
ljmp
sbb
inc
and
in
mov
sbb
lahf
mov
dec
mov
sub
mov
das
js
inc
and
inc
adc
fistpll
in
add
xlat
imul
jae
adc
mov
lods
pop
pop
sub
out
lret
xor
aas
mov
xchg
out
pop
loopne
sbb
xor
mov
fidivs
xor
mov
sbb
xchg
cmp
outsl
jnp
push
lahf
xlat
test
jmp
adc
mov
push
xchg
dec
divb
into
cmp
sub
pusha
xor
pop
lret
stc
jae
in
iret
imul
sbb
mov
sarb
or
fcoms
repnz
iret
clc
mov
scas
in
out
mov
cmp
gs
js
adc
stos
dec
in
jmp
push
adc
add
mov
dec
in
sbb
faddl
or
adc
push
aad
or
jp
icebp
outsl
lds
push
arpl
mov
cmp
rolb
aad
or
adc
pop
mov
sti
jo
xchg
mov
push
in
jmp
js
sbb
push
cmp
sbb
scas
jle
adc
mov
or
test
pop
push
inc
sub
ds
mov
test
icebp
pop
les
test
xor
ds
pushf
loope
jle
in
mov
ds
add
sub
mov
mov
out
mov
imulb
dec
inc
sar
xlat
sti
add
mov
mov
mov
cmpsl
lcall
mov
sub
push
push
xchg
mov
and
shlb
pop
cld
fsts
inc
mov
cmc
es
and
dec
jmp
das
jl
mov
cs
loope
add
repz
aam
repnz
iret
cmpb
sbb
sti
ror
scas
jno
sbbb
fldl
int
imul
mov
orb
les
mov
ds
jg
subl
fldt
repnz
pop
xchg
push
cli
loopne
movsl
cmpsb
stos
mov
mov
xlat
dec
cwtl
adc
dec
imul
repz
test
adc
je
fists
push
pop
add
cmc
cmpsb
pop
sub
imul
cmp
push
mov
push
out
adc
xchg
into
push
lcall
xor
jmp
inc
shll
enter
test
jo
subl
jmp
inc
sub
adc
push
jnp
sub
sbb
insb
dec
dec
cmp
fwait
sbb
sbb
or
jmp
cs
outsl
mov
lea
out
cli
aaa
out
mov
and
mov
dec
and
in
cmp
movsl
dec
mov
xor
lret
and
in
pop
adc
imul
fbld
cmp
scas
outsb
sbb
movsb
repz
loope
jae
test
dec
aam
mov
jmp
ficoml
mov
jne
stos
sbb
sub
inc
xor
jns
outsl
sbb
xchg
test
arpl
mov
mov
inc
add
push
stos
pop
pop
rcrl
in
mov
dec
stc
test
ljmp
ja
xchg
mov
xor
shl
scas
xor
int
xorb
arpl
xchg
sub
lods
cmp
iret
popf
js
pop
cs
xor
jmp
cltd
push
xchg
cmpsl
xor
popf
lret
adc
xchg
or
pop
xor
lds
jp
mov
inc
test
pop
es
dec
mov
pop
stos
inc
xchg
iret
push
or
iret
sub
loop
push
mov
movzbl
sub
jle
mov
pop
or
test
mov
cmc
xchg
enter
jmp
xor
jmp
jne
adc
pushf
sub
fistps
add
xchg
test
gs
xlat
rcl
loop
fsubrs
outsb
out
data16
xorl
out
xchg
pop
sbb
jecxz
push
arpl
outsb
pusha
cmpsl
mov
mov
sarl
ret
jp
mov
and
shll
jecxz
icebp
lea
add
ret
lret
insb
inc
jo
cmp
in
fcmovu
push
jecxz
inc
nop
shlb
cwtl
cs
std
pop
jge
jo
mov
or
dec
and
xchg
leave
pushf
or
xchg
or
ljmp
lret
xchg
xchg
iret
enter
add
mov
es
mov
or
push
lahf
sub
js
jecxz
push
fnstsw
das
inc
mov
stos
popa
scas
test
arpl
ja
sbb
jbe
mov
fimuls
clc
sbb
jnp
mov
sbb
cmp
lret
adc
adc
xchg
jl
fisubrl
mov
dec
adc
neg
fcomps
mov
push
mov
fmulp
jnp
lret
mov
loopne
stos
sti
out
jg
cmp
incb
sarl
or
mov
xor
adc
movsb
in
imul
stos
insb
mov
scas
cld
mov
cltd
nop
leave
jbe
cmp
inc
shrb
add
fcmovu
xor
sub
push
ret
outsl
lods
cmp
sbb
cs
ret
jbe
out
pusha
out
rcrl
pop
add
lods
aad
inc
in
adc
sbb
icebp
arpl
push
repnz
xor
mov
mov
loope
pop
dec
xchg
mov
stos
aam
jl
dec
mov
lahf
jo
lds
mov
jns
in
ljmp
sahf
test
cmp
add
and
popa
jp
scas
gs
sub
xchg
ficoml
lock
mov
xchg
mov
and
sub
mov
inc
icebp
rcr
jae
xchg
xchg
cli
dec
or
and
ljmp
sbb
mov
andl
mov
mov
mov
lcall
jo
loop
scas
arpl
movl
repz
xchg
mov
std
jnp
lar
addb
bound
lcall
dec
js
push
add
pop
or
and
or
shll
mov
mov
sub
jge
jne
faddl
inc
sbb
cli
xor
mov
gs
sar
loope
xchg
loopne
push
idiv
sub
sahf
xchg
or
in
shrl
fnstenv
adc
and
adc
or
unpcklps
rclb
lods
sub
aas
jno
xchg
or
xlat
mov
cmp
inc
shll
xchg
mov
and
or
imul
lods
in
push
and
inc
dec
in
negb
inc
sub
cmp
jg
xor
pop
stos
hlt
cli
jmp
pop
or
idivl
and
pop
imul
dec
icebp
outsb
loop
lods
sub
xor
cmpsb
sbb
xor
pop
mov
cmpl
sbb
or
mov
in
pop
scas
mov
add
hlt
daa
jl
sbb
xchg
push
out
cmpsb
out
dec
xchg
or
insl
jg
adc
imul
push
adc
mov
add
mov
push
xchg
and
dec
out
sbb
ljmp
loope
mov
inc
cmp
xchg
or
insw
sbb
les
and
xor
lds
mov
insb
mov
gs
xlat
nop
jp
lcall
pop
mov
stc
cmp
ss
std
mov
imul
jge
sarb
dec
pop
out
lea
push
push
hlt
cli
pop
sbb
cwtl
cli
push
push
and
data16
and
out
inc
xorl
pop
adc
in
jne
cmp
jbe
mov
lcall
fwait
nop
leave
lret
jl
lea
add
inc
cmpsb
and
xchg
movsl
push
icebp
popf
out
adc
push
lret
lret
ds
les
daa
ds
sub
stos
push
into
pop
stos
pop
jmp
das
pushf
mov
arpl
push
or
inc
mov
jns
adc
sub
dec
in
mov
stos
shll
mov
push
movl
mov
mov
or
hlt
jg
jns
push
in
jno
sub
cld
mov
xor
sbb
subb
push
cmp
inc
mov
jb
scas
mov
or
clc
dec
jg
daa
stos
jge
fisttpl
push
dec
bound
ja
xchg
or
and
jb
in
dec
inc
das
loopne
xchg
repnz
xchg
nop
jp
ret
jl
push
cmp
xor
sbb
cmp
sub
jle
push
repnz
call
fcmovnbe
vmread
das
shr
shll
adc
dec
push
fildll
or
or
dec
jge
xchg
scas
decl
daa
sub
pop
rcr
sbb
adc
xchg
rcll
les
inc
push
push
xor
pushf
jp
mov
jmp
shll
jmp
cmp
and
xlat
fsubrs
pop
xchg
dec
jg
jle
adc
jno
cld
sub
push
dec
insl
jmp
xor
test
xchg
rorl
int3
lcall
sti
xchg
cmp
loopne
mov
mov
dec
mov
das
xor
sub
mov
js
lock
push
sbb
cmpsb
neg
push
add
sbb
xor
pushf
mov
xchg
jge
pop
lahf
loopne
cmp
fsubrl
push
mov
push
jle
fwait
jge
lds
je
cmp
std
lahf
hlt
cmp
aad
mov
adc
add
push
lret
mov
nop
or
pop
ds
pop
jmp
sbb
cmc
inc
es
push
xchg
enter
mov
add
adc
mov
jmp
pushf
cmp
fisttps
out
clc
out
mov
sub
stc
xor
gs
shlb
or
sbb
outsb
adc
pop
cmpsl
pop
ja
sub
dec
inc
sbb
jmp
jbe
and
sahf
add
ja
push
out
sbb
dec
insl
fmull
popa
or
inc
inc
inc
sarl
out
dec
mov
jae
pop
fwait
or
dec
arpl
mov
fwait
mov
in
mov
into
inc
jge
cmp
lods
cltd
xor
pop
xor
loop
pushf
pop
pop
subb
pop
inc
cli
xorps
mov
or
sahf
je
cmpl
adc
mov
aaa
jp
xchg
xchg
out
xchg
arpl
imul
cmp
mov
pusha
and
xchg
add
andl
cmp
sub
mov
push
loop
pop
fimull
fdivrl
aam
mov
ror
sub
cltd
aad
in
sbb
call
lret
shlb
sbb
lret
xor
movsb
xchg
lahf
fmull
sahf
xor
inc
xor
stc
push
les
mov
and
hlt
pop
push
mov
push
jl
xchg
dec
or
push
shrl
mov
inc
filds
fsub
mov
dec
xchg
pop
add
lea
cmp
nop
jae
xor
pop
daa
lcall
dec
in
les
jl
xorb
inc
hlt
lea
iret
test
sbb
dec
push
dec
inc
sub
sbb
mov
xrelease
jle
push
add
out
in
sub
pop
cmc
push
and
pop
pusha
mov
fxch
add
pushf
test
jae
push
movsl
iret
in
cmp
sti
cmpsb
and
fsubr
sub
xchg
cmp
sub
jge
jmp
push
ja
cli
idiv
lods
out
lods
mov
add
mov
movsl
imul
jecxz
mov
arpl
adc
sbb
mov
inc
dec
pop
pop
addr16
push
repnz
cmp
jo,pn
icebp
fninit
out
push
sub
xor
xlat
cld
jmp
add
xor
lock
aaa
popa
into
movsb
mov
mov
loopne
inc
push
jnp
xor
ja
rorb
and
and
jns
push
fcoml
xchg
int
and
loope
mov
out
shlb
cmp
jmp
lahf
ljmp
push
test
nop
jae
scas
pop
dec
pusha
leave
xor
jae
imul
test
xor
cmp
insl
cmp
outsb
xchg
push
mov
sahf
xor
or
test
mov
mov
lock
xor
sbb
loopne
cmpsl
test
pop
repnz
iret
in
jnp
xchg
fsubr
dec
adc
mov
inc
inc
mov
lret
xchg
cld
or
mov
lock
pushf
or
dec
adc
pop
dec
jae
mov
push
loop,pt
xor
in
inc
in
dec
out
xor
test
cmp
iret
pop
push
jp
ja
push
adc
cli
xchg
fwait
and
sbb
data16
inc
cs
xor
push
mov
scas
mov
js
stos
enter
xchg
push
aas
mov
dec
mov
adc
jbe
int
out
setne
mov
or
and
cmp
bound
bnd
push
lret
push
aas
mov
adc
sub
js
fisttps
jge
les
jmp
addr16
xchg
jle
cmp
push
push
lock
pop
aad
call
mov
sub
xchg
xchg
jle
and
or
mov
pop
and
mov
addb
iret
jmp
iret
neg
push
cmpsb
mov
mov
bound
push
jge
sbb
cltd
mov
push
gs
int3
and
mov
outsl
enter
jnp
sub
outsl
add
out
mov
mov
in
into
hlt
xchg
das
outsb
loope
dec
sbb
sbb
popa
add
lods
repz
sbb
shl
movsb
cwtl
and
push
push
sbb
mov
lahf
sahf
clc
pop
inc
pop
adc
imul
jg,pn
cmp
mov
leave
iret
and
mov
sarb
jl
and
jns
inc
adc
les
inc
int3
insb
std
jbe
lods
mov
in
ret
ficompl
xor
jecxz
nop
sub
cmp
icebp
adc
jecxz
negb
mov
iret
in
mov
lods
rorl
jns
or
fmuls
xchg
int3
inc
in
imul
or
call
jg
jb
xchg
sbb
inc
shlb
mov
dec
icebp
xor
mov
dec
mov
or
xor
dec
mov
insl
sub
push
repnz
fisubs
les
pushf
mov
lret
mov
fsts
movsb
xlat
call
xor
mov
jecxz
xchg
fnstenv
cmpsl
jno
out
xchg
aad
or
adc
cmc
insl
mov
aad
es
jmp
pop
add
xchg
sbb
movsb
popf
sbb
outsb
scas
out
pop
loop
lahf
add
push
xlat
mov
fwait
cmp
sbb
sbb
cltd
mov
hlt
or
xchg
mov
mov
test
enter
add
push
in
fstpl
jmp
cwtl
popf
std
lret
push
mov
xor
mov
xor
test
shl
inc
mov
xor
mov
pop
dec
xor
cltd
adc
cmpsb
repnz
loop
bound
hlt
ret
out
add
fsub
loopne
lods
pop
inc
shll
out
mov
shlb
pop
or
aaa
mov
aad
sub
mov
cmp
push
int3
fcmovnu
dec
out
aas
jmp
das
out
and
xor
ret
lock
cmp
daa
push
xchg
psubq
out
mov
mov
out
popl
and
xor
pusha
pop
daa
jno
data16
cld
push
cmp
sub
mov
adcl
test
sub
sub
or
dec
lret
mov
jge
sahf
jae
in
inc
xchg
outsl
jmp
and
in
jp
enter
mov
and
mov
test
adc
mov
jnp
push
jns
mov
stos
mov
and
mov
or
xor
fidivrs
push
cltd
mov
mov
movsb
stc
adc
in
mov
inc
comiss
sub
int3
mov
mov
into
cli
mov
sub
xlat
push
clc
fsubr
call
loop
inc
fsubrs
test
arpl
stos
push
lock
adc
xchg
xchg
or
xchg
aam
xor
push
push
pushf
arpl
sub
push
xor
add
movsb
push
loope
inc
push
pop
mov
aaa
dec
lcall
jl
add
cmpsb
jl
popa
adc
mov
inc
jmp
mov
xlat
andps
pop
jp
jns
push
cmp
push
xchg
bound
add
sub
imul
jne
test
and
adc
mov
jge
aas
sbb
dec
xor
lods
add
or
push
rcl
aad
jae
rorl
mov
ljmp
mov
out
cmp
sub
mov
dec
xor
mull
push
inc
daa
and
sahf
frndint
pop
leave
inc
dec
push
rol
cmp
push
aaa
sub
or
mov
cmpsb
add
push
icebp
inc
xlat
cmp
xchg
aas
popa
jmp
sahf
rcr
inc
int3
sbb
shl
pop
pop
out
insl
mov
nop
cwtl
outsb
mov
xchg
pusha
idivl
push
lahf
pop
mov
iret
jno
inc
and
bound
jecxz
mov
sbb
push
fninit
and
aam
loopne
jge
addb
in
icebp
shlb
ret
xchg
sub
mov
dec
cld
cmp
mov
das
add
test
mov
and
aas
cmpsl
dec
test
pop
mov
cmpsl
xchg
orb
inc
inc
mov
push
sub
xlat
pop
mov
fwait
push
push
xchg
mov
bound
hlt
sbb
or
push
lcall
push
and
xlat
aaa
and
pop
dec
out
loope
stos
andl
and
outsb
dec
add
or
xor
out
inc
push
leave
sub
jecxz
jo
outsb
cmp
leave
sbb
in
inc
inc
daa
jnp
push
xchg
stos
repnz
push
shl
mov
lock
jno
adc
scas
test
add
jno
lret
sbb
cmp
rcrb
xchg
inc
imul
pop
aas
add
ret
fs
popa
outsb
pop
mov
xchg
inc
jge
scas
jecxz
pusha
push
xor
push
cltd
mov
xchg
push
cmp
repnz
les
push
loope
pop
sub
mov
mov
rcll
mov
add
sub
inc
imul
lret
mov
jbe
insb
mov
pushf
push
add
shlb
xchg
test
mov
in
jp
and
dec
jne
insl
push
bound
jo
pop
mov
jbe
daa
gs
inc
bound
cmp
ds
mov
scas
mov
cmp
mov
fs
test
inc
jno
ret
les
jmp
xchg
jp
cld
aaa
add
in
jae
in
notb
lea
iret
js
hlt
sub
aaa
dec
push
pop
mov
dec
xchg
mov
xchg
inc
sbb
pushf
popf
imulb
add
in
mov
mov
or
mov
sar
or
bound
jecxz
sub
test
int3
lock
or
xchg
shrb
push
rcrb
inc
imul
xor
push
jle
dec
add
push
jge
add
adc
ret
mov
int3
je
cli
ficoms
adc
pushf
leave
add
jg
daa
xor
orb
jae
clc
les
jb
and
mov
mov
out
pop
add
add
sub
lcall
mov
mov
pop
pop
adc
movsb
lea
xorl
lret
and
adc
test
and
rcl
data16
inc
add
and
cmp
pop
cwtl
popa
imul
ret
in
ret
cmp
clc
shlb
mov
mov
mov
leave
out
ret
push
push
pop
inc
repnz
and
cli
cli
xchg
sub
int3
dec
int3
aas
cmpsl
movsb
je
mov
lods
aas
cwtl
insb
in
mov
jnp
dec
jbe
add
pop
cs
xor
clc
je
adc
xchg
lahf
jmp
sbb
popf
push
cmp
out
and
out
jecxz
imul
aaa
pop
out
sahf
mov
pop
mov
push
stos
mov
stos
cmp
or
aas
sbb
inc
xchg
out
adc
out
adc
adc
lock
jo
mov
sahf
test
add
aam
cmp
rorb
mov
roll
in
xchg
add
inc
mov
dec
add
cmpsb
orb
pop
std
dec
mov
jg
stc
sub
lock
inc
cmp
pop
scas
ret
xchg
sub
sar
or
push
repz
int3
xchg
dec
insb
cs
gs
jg
out
cmc
popa
mov
and
mov
aas
push
outsb
mov
mov
add
out
push
jl
sbb
in
sbb
xor
pop
mov
pop
jno
repnz
sub
lret
cs
flds
lahf
ds
pop
or
leave
add
sub
add
jmp
push
daa
inc
push
push
mov
leave
imul
adc
aad
mov
mov
out
lods
mov
lock
and
notl
pop
movsl
mov
sbb
mov
push
fnstenv
pop
ja
fwait
cmp
dec
sahf
mov
lcall
ja
add
cmpsl
popf
mov
fmuls
inc
lock
fst
imull
jg
pop
dec
test
xor
jne
jnp
mov
leave
test
cmp
es
adc
mov
repz
jp
mov
and
sbb
dec
mov
orl
xchg
lret
test
mov
bound
dec
popf
sti
lcall
xchg
xor
push
dec
lahf
adc
push
fwait
and
outsl
shll
xchg
arpl
xchg
lea
jb
add
mov
rorl
lods
or
push
sbb
gs
and
mov
shr
arpl
and
in
jo
fcmove
pop
cwtl
push
jmp
test
es
push
lods
push
mov
fcoml
popa
pushf
push
bound
adc
pop
xchg
in
and
pop
test
dec
mov
stos
int
orl
sbb
mov
in
mov
jmp
jg
pslld
sbb
adc
popa
inc
pusha
clc
sarl
push
lahf
stc
mov
push
jl
sub
stos
in
incb
mov
push
movhps
fldt
xor
test
nop
adc
xchg
stos
imul
xchg
fdivl
adc
push
outsb
adc
mov
insb
inc
test
xor
fsubrl
jae
pop
mov
sub
mov
loopne
push
cmp
aad
das
movsl
xchg
mov
xchg
sbb
xchg
jne
aaa
fwait
int3
sbb
repnz
jge
sub
cwtl
test
mov
ljmp
and
lret
stc
dec
movsl
je
cmp
test
sub
sub
xor
xchg
scas
aas
xchg
sti
inc
movsl
enter
call
insl
cmp
test
das
ret
iret
xchg
fistl
sahf
xchg
outsl
icebp
daa
adc
xchg
cmp
add
cltd
sti
insb
sub
lcall
xchg
flds
jno
adc
scas
lcall
pusha
notl
leave
fldenv
std
pusha
jmp
cli
imul
jno
inc
inc
pop
sbb
sub
push
pusha
lcall
sarl
fsubs
scas
sub
push
test
push
cmpsb
aas
inc
dec
and
cmp
inc
test
test
popf
mov
inc
lods
inc
pop
dec
xor
pop
mov
pop
cmc
loopne
xchg
mov
pop
jb
xor
xor
fs
aam
insl
jl
jno
or
mov
cmpsb
fcmovu
mov
inc
ds
es
sub
hlt
dec
mov
jg
out
push
pop
leave
push
jge
pop
mov
mov
mov
or
mov
mov
or
adc
pushf
mov
bound
mov
test
out
lds
popf
sbb
or
andl
addr16
jo
mov
mov
adc
cmp
xor
popa
push
xchg
sub
xor
pop
and
sub
jbe
nop
xor
insl
push
pop
adc
jno
jbe
nop
test
and
cmpsl
mov
inc
and
ss
cwtl
in
flds
pusha
movsl
jmp
sub
bound
pop
cmp
sbb
mov
mov
nopl
and
sar
push
mov
clc
lcall
out
cs
push
stos
xchg
xchg
cltd
fdecstp
cld
mov
aas
push
cld
ja
sub
sbb
push
orl
orl
xchg
loop
cltd
xor
or
pop
dec
jne
or
aaa
shlb
inc
int3
xchg
cltd
add
pushf
out
repnz
sbb
xchg
mov
dec
inc
test
jp
gs
push
push
jge
or
insb
in
xchg
je
pop
in
sbb
cmpsl
int
xchg
xchg
add
xbegin
jecxz
xor
popa
push
idivb
popf
call
mov
insb
sbb
insb
inc
sub
repz
mov
sbb
or
sub
mov
xchg
bound
sarl
ret
loopne
add
sahf
pop
dec
push
adc
stc
push
ret
enter
loope
ja
lcall
popa
mov
xchg
lods
fldt
push
scas
xchg
sbb
cmp
rorb
movsb
in
jecxz
mov
in
lahf
sub
pusha
leave
psubsb
cmp
fstpl
add
addr16
pop
adc
xor
repz
movsb
sbb
ljmp
push
stc
mov
sarb
fadds
pop
cmpsl
add
out
inc
mov
xchg
cmp
mov
pop
jp
mov
imul
cmc
fwait
push
addr16
adc
lods
mov
or
add
int3
pop
out
pusha
or
pop
lret
sti
and
das
mov
addl
cli
xor
mov
pop
mov
jmp
sbbb
sbb
mov
dec
sar
ret
loop
or
cmp
aas
adc
and
sbb
sub
mov
into
js
andb
mov
cmp
jae
addb
jns
aaa
pop
xor
and
mov
loope
ljmp
aas
decl
sarb
add
mov
fcomps
bound
div
push
lods
pushf
andl
fsubr
test
nop
push
out
rolb
jle
mov
out
scas
loopne
fmuls
or
jl
fimuls
inc
ljmp
sub
and
ss
mov
jne
inc
fstl
mov
mov
and
int
out
hlt
je
or
jno
cmp
repz
in
adc
repnz
sbb
jge
add
icebp
push
scas
xchg
test
push
adc
jb
pop
push
ljmp
jnp
sar
mov
xlat
cmpsl
push
xchg
stos
xor
mov
and
jecxz
cmpsl
aas
push
add
loopne
jge
sti
out
cs
lods
push
cmc
rolb
mov
jp
divb
pop
fcmovnb
sbb
pushf
sub
mov
push
lret
popa
mov
sub
mov
jmp
and
sub
mov
mov
call
lcall
add
push
mov
xchg
push
shrl
sbb
arpl
xor
push
xor
cmp
in
push
xchg
jl
adc
in
hlt
gs
mov
pop
cmp
or
dec
ret
xchg
pop
aam
sbb
fisubl
mov
push
imulb
les
sarb
xchg
sahf
mov
out
adc
push
xor
ret
ficomps
dec
or
add
or
into
in
fwait
popa
gs
jne
pop
lods
jb
jp
rorb
lods
push
sbb
in
xchg
arpl
cli
lds
notb
and
orl
scas
adc
repz
sbb
jmp
mov
lock
sub
int3
sbb
pop
mov
dec
mov
mov
lods
lods
test
dec
xchg
rorl
repz
movsl
aad
push
leave
aad
xchg
scas
lods
jp
mov
and
outsl
cmc
sub
iret
mov
pop
push
pop
nop
sbb
scas
je
fnsave
fistpl
mov
popf
cmpsb
sub
dec
pop
scas
adc
clc
sub
in
hlt
push
clc
fwait
add
lods
aad
les
mov
mov
xor
push
arpl
adc
popa
orl
ret
daa
data16
stc
sub
ficompl
rol
andl
sbb
cld
loop
fwait
insb
shlb
mov
xchg
in
pop
mov
incl
push
dec
daa
mov
ficoml
fs
es
dec
aaa
imul
mov
push
push
sbb
sbb
mov
js
aaa
push
lea
jns
and
sbb
sbb
cli
ljmp
sub
mov
sub
pushf
jo
test
repnz
add
les
in
bound
int
out
sbb
xchg
in
out
iret
push
leave
jg
mov
adc
mov
lea
push
mov
jbe
mov
or
mov
jp
xchg
sarb
stc
sbb
pop
pop
repnz
jo
pop
mov
and
and
popa
call
and
test
xor
fldcw
out
mov
push
lock
call
ss
test
pop
and
adc
sbb
decb
dec
xchg
rcrb
jmp
jae
sub
cwtl
stos
mov
sbb
cli
inc
in
sbb
inc
pop
popa
adc
adc
sub
je
push
inc
adc
dec
inc
xor
dec
add
inc
aas
les
jl
pop
hlt
arpl
and
cs
mov
in
mov
mov
sub
lods
dec
sub
test
push
clc
mov
or
xchg
loope
and
mov
sbb
xchg
or
les
cmp
mov
xchg
mov
dec
repz
popf
cmp
jnp
or
xchg
xor
add
cs
sbb
lods
dec
imul
inc
aaa
add
loopne
out
and
mov
dec
leave
in
bound
xor
jecxz
jbe
push
sub
daa
jmp
cmp
jecxz
cli
xor
aas
jmp
sbb
fwait
xlat
inc
push
sti
inc
les
call
fucomi
iret
lods
insb
inc
xor
or
mov
or
ss
mov
insb
mov
dec
hlt
lods
cmp
jbe
in
or
jmp
mov
lret
cmp
outsb
cmc
cwtl
add
mov
jnp
jo
xlat
xchg
xlat
loop
fldenv
mov
cli
adc
jb
repnz
sarl
int
mov
xchg
out
adc
test
push
xchg
cwtl
out
push
repz
lret
or
add
cmpsb
in
pop
mov
push
cli
rorb
pop
or
mov
sbb
or
ficoml
mov
sub
call
movsl
dec
lock
cs
cmpsb
xor
pop
dec
cmp
jae
js
imulb
and
jl
fisubs
outsb
js
sub
xor
push
lret
or
jmp
stos
in
adc
insl
xor
pop
dec
mov
push
out
jo
test
mov
sbb
insb
int3
pop
adc
xor
inc
outsb
dec
and
ret
mov
out
inc
adc
or
ds
mov
or
test
xchg
and
cmp
outsl
cmp
push
add
adc
loopne
mov
sarb
test
sub
stos
mov
xchg
sbb
pop
ret
jp
in
daa
pop
push
fwait
adc
and
and
call
cltd
cli
imulb
out
dec
lock
and
dec
cli
jg
out
jo
and
mov
rol
ds
cmp
call
xchg
pop
push
icebp
lcall
adc
inc
mov
inc
sbb
mov
outsl
inc
inc
sub
shrl
pop
out
popa
dec
test
jno
push
inc
repz
out
ja
pop
outsb
aam
mov
inc
ret
cmpsl
jne
cli
repz
sbb
sub
or
rol
dec
jecxz
sbb
adc
push
xchg
jns
sub
aad
adc
out
test
mov
test
into
sub
mov
sahf
fnstcw
inc
dec
and
sbb
test
jge
push
inc
ljmp
push
dec
fnsave
pop
pop
filds
adc
adc
scas
rorl
prefetcht2
dec
xchg
jg
xchg
sub
adc
icebp
push
fmul
outsl
cmp
dec
pop
and
fildl
in
aam
xchg
sbb
movsb
insb
es
cmc
lods
into
cmpsb
ja
jne
xlat
jg
inc
mov
mov
and
insb
sbb
or
push
repnz
into
stos
cmp
ja
pop
outsl
xchg
jecxz
inc
loope
jle
dec
das
idivl
sub
test
aam
pop
pusha
movsl
lret
or
sti
or
add
scas
jnp
faddl
sub
mov
or
iret
js
xchg
pop
aam
sub
jmp
dec
or
test
xchg
insl
pop
js
adc
movsl
test
outsl
scas
xor
outsl
and
out
and
je
add
jae
mov
sub
sub
push
idivl
fs
sub
repnz
pop
std
icebp
mov
pop
and
ret
xor
push
and
inc
div
sbb
mov
out
fsubrs
add
addr16
out
std
xchg
aad
xchg
cmpsl
sub
dec
mov
fistl
lea
push
notb
pushf
outsb
cs
xchg
jl
dec
jmp
imul
out
adc
xor
dec
clc
pop
jb
loop
sub
std
jl
cmp
push
fwait
push
fiadds
cld
inc
cmp
push
mov
lea
shll
pop
ds
jne
jb
lods
in
mov
lock
push
lods
ds
or
mov
imul
gs
dec
xor
mov
ds
and
scas
es
daa
or
xchg
jne
or
rcrb
push
insb
lods
enter
mov
mov
lahf
push
lds
mov
sbb
rclb
xchg
fnstenv
ja
out
xchg
inc
movsb
aaa
hlt
mov
mov
jb
dec
xchg
dec
mov
mov
fidivs
adc
outsl
xchg
shrb
xor
sub
and
scas
outsb
ljmp
sbb
scas
xor
subl
mov
out
lahf
ljmp
mov
sub
pushl
rorl
ds
aas
je
in
xor
pop
jo
and
cmpsl
out
gs
add
stc
repnz
into
lock
cmpb
mov
int3
mov
out
jle
mov
callw
out
inc
pop
cli
cmpsb
xor
or
fistl
imul
lea
jnp
mov
jo
aad
in
fs
test
xchg
cmpsl
mov
adc
in
fidivrs
fisubrs
jecxz
outsl
sbb
pop
push
mov
cli
loopne
pusha
cmp
daa
insl
jmp
cltd
shlb
aad
inc
imull
jae
adc
ret
push
xchg
lock
push
dec
inc
jb
mov
cltd
int
lods
sahf
mov
sub
ljmp
jle
and
pop
sub
cs
add
scas
mov
inc
fcmovnb
ds
inc
pop
sbb
dec
in
mov
sbb
push
pusha
cmpb
clc
mov
ret
xor
ds
iret
jno
nop
js
mov
or
adc
mov
xchg
push
sbb
cmpsl
hlt
mov
xchg
mov
add
mov
xor
inc
int3
adc
ret
cmc
mov
and
add
lock
mov
add
mov
into
sub
in
rclb
fcmovb
adc
xor
cmp
out
shl
adc
adc
sbb
jmp
stos
push
fistpl
mov
ds
out
jmp
xor
shl
jecxz
jge
cmp
mov
inc
push
fildll
call
stos
jae
xchg
fisubrl
mov
or
ds
fld
dec
out
addl
loop
call
add
xchg
call
cwtl
jb
rcrb
and
sbb
or
add
outsb
inc
lret
or
xchg
in
fwait
sti
adc
sbb
cmp
outsb
mov
xchg
ficomps
cmp
loopne
pop
leave
pop
mov
mov
inc
cmc
cmpsl
enter
out
cs
jmp
dec
mov
add
mov
push
imul
inc
sub
dec
ds
pushf
shrb
xchg
lea
cltd
pop
mov
hlt
jae
cltd
mov
ja
and
aas
cmp
and
push
xor
addb
mov
jne
loop
call
sbb
je
or
adc
mov
nop
xor
cld
pop
cmc
add
jmp
ret
xor
clc
imul
xchg
icebp
mov
dec
xchg
stos
fnstsw
in
adc
push
pop
adc
dec
pop
cs
cmpl
les
fdiv
add
xchg
fldt
testb
sbb
neg
es
icebp
fwait
push
arpl
lahf
cmp
xor
call
cmp
add
rcll
dec
xor
jmp
hlt
mov
out
jae
push
push
add
xchg
push
jg
sub
fisubl
hlt
mov
leave
in
out
in
and
inc
leave
xchg
test
ret
pop
lea
push
aas
in
jns
ds
mov
xchg
dec
pop
push
push
mov
jnp
jl
xchg
fisubrs
and
inc
and
loopne
movsl
adc
add
add
aam
xor
loopne
fwait
ds
dec
lret
jns
ret
ret
inc
pusha
cmp
imul
mov
or
aas
ret
xor
int3
xor
push
push
mov
test
cmc
unpcklps
adc
push
aas
jb
subl
or
loopne
sub
repz
int
jno
jl
test
loop
aas
pop
mov
jp
jo
test
das
test
ljmp
andb
loopne
imul
adc
movsl
adc
fwait
sub
lods
ds
push
dec
shrb
shll
pop
push
mov
rorl
fdivl
xchg
orl
ret
lret
mov
jmp
lahf
shlb
shlb
jmp
test
rcrl
mov
test
imul
in
adc
dec
rcll
arpl
xchg
movsb
icebp
lods
cmp
test
adc
push
cmp
dec
pop
popa
jnp
add
jns
and
orb
out
lret
mov
and
lods
jb
rorb
sbb
stos
test
movsb
and
adc
adc
lods
adc
mov
sbb
imul
testb
in
xchg
mov
inc
mov
xchg
cld
faddp
stc
adc
sahf
outsb
mov
movsl
pop
sarl
lods
mov
pop
jp
leave
ds
cmpsb
pop
xor
stos
cmp
pop
sbb
loop
shrb
bound
cmp
dec
and
jle
or
pop
frstor
idiv
adc
pop
popf
inc
jp
fldenv
inc
and
rcl
fsubrl
out
aam
or
dec
iret
lock
movsb
daa
inc
sub
div
xor
cmp
xchg
lock
dec
sbb
scas
and
or
aas
inc
and
popf
jns
xlat
vpsrlw
mov
rolb
mov
sub
fdivs
mov
or
fcompl
push
stc
xchg
push
sbb
pop
lahf
ds
sub
jns
cmp
cltd
gs
sub
idivl
rcll
lea
aad
lret
cmp
sub
xchg
inc
push
arpl
fcmovnbe
cmp
loop
pop
jno
sbb
jmp
or
pop
inc
cmp
loopne
std
cmp
lock
push
jae
adc
stos
and
adc
push
enter
sub
rorb
inc
fwait
insl
lds
add
sub
sub
js
sub
jg
sub
or
pop
lret
shrb
out
fcomp
ret
jb
pop
mov
cmpsl
and
mov
nop
xor
fsubr
cli
jns
adc
repz
sub
lret
in
jae
jge
xlat
out
cmpsl
add
fnstcw
mov
sub
mov
xor
data16
sub
out
les
jge
pop
mov
jae
repnz
mov
and
fwait
popa
cmovle
loopne
or
sub
mov
and
les
out
stos
movsb
popf
roll
stos
cli
mov
mov
les
sbb
sub
sub
stos
cmp
or
mov
cmc
lret
push
mov
out
jno
and
inc
pop
lcall
pop
test
mov
js
out
sbb
or
mov
lods
dec
loop
shlb
fs
mov
push
cmpsl
and
or
cmp
and
push
insl
cmp
pusha
loopne
in
ja
flds
cwtl
call
je
frstor
cs
push
rcr
ss
repz
in
repnz
and
lahf
xchg
aad
xchg
xchg
ss
inc
in
adc
dec
repnz
pusha
pop
adc
ss
in
pop
dec
xchg
sbb
add
xchg
rolb
pop
dec
jno
xor
push
add
jmp
inc
pop
pushf
and
loopnew
xor
pop
push
adc
add
js
or
or
mov
xchg
mov
mov
sbb
xchg
dec
sahf
xchg
pop
lods
aas
cmp
fisubrs
lcall
lea
jge
mov
cmc
inc
lcall
loopne
cmp
loop
jp
icebp
adcb
mov
sbb
jnp
sbb
mov
shl
push
imul
adc
and
xchg
scas
adc
fsub
clc
push
insb
pop
push
xchg
mov
lea
push
jbe
cmc
dec
jb
mov
subb
sub
cmp
mov
push
fwait
test
jb
aam
push
push
sbb
mov
mov
dec
or
jnp
fisubrl
jno
ret
popa
push
mov
bound
shlb
dec
lea
fdivl
mov
and
pop
cmp
mov
push
push
testb
xor
scas
out
cltd
mov
call
les
push
pop
orl
adc
or
scas
ret
incb
jns
push
mov
dec
movsb
pop
xor
insl
es
rcr
daa
ret
mov
xchg
mov
xchg
xchg
push
dec
into
xor
pop
pop
dec
out
push
or
xlat
sub
loope
jmp
mov
or
mov
sbb
enter
sti
dec
aad
add
dec
cwtl
js
xchg
xchg
adc
and
dec
push
mov
pop
pusha
std
imull
cmc
rcl
into
fldenv
push
pusha
mov
ljmp
shrl
and
es
out
inc
mov
jb
imul
add
pop
scas
add
xchg
push
ds
pop
insb
mov
xchg
or
mov
xchg
outsb
imul
popf
xor
jmp
lock
jno
das
pop
mov
adc
cltd
pop
je
inc
mov
jg
mov
xor
inc
jmp
loopne
insb
mov
dec
pop
or
cmpb
jnp
fistpl
fld
rorb
fmull
push
jmp
dec
sbb
mov
mov
dec
mov
or
add
and
sub
scas
test
sbb
mov
cld
inc
mov
sub
lret
or
mov
xor
jnp
bound
lcall
iret
subl
jmp
rorb
jl
jmp
ds
fwait
mov
xor
dec
xchg
xor
lods
imul
sbb
sbb
dec
loop
pop
insl
sbb
adc
in
sub
ja
sub
pop
orl
mull
xchg
pop
subb
xor
and
loopne
adc
sti
jp
add
and
push
add
repnz
pop
add
js
xor
or
outsb
sub
rclb
push
loop
mov
bound
in
jae
jg
push
movsl
xor
mov
or
jmp
xor
dec
in
sbb
aas
mov
loopne
adc
pop
std
adc
sahf
fistpll
rcrb
mov
sbb
xor
test
clc
out
adc
daa
enter
mov
pop
push
repz
jnp
popa
sbb
fstp
push
mov
movsb
mov
add
mov
call
mov
jb
inc
rclb
aad
test
test
out
aas
test
mov
inc
jns
jne
mov
inc
add
pop
pushf
mov
xor
call
mov
jmp
rcrl
aas
pop
pop
repnz
pop
dec
push
mov
insb
movsb
sbb
int
pop
adc
add
sti
aaa
int
mov
jl
mov
pop
mov
inc
lea
retw
mov
mulb
pop
in
icebp
push
cld
aam
out
dec
mov
andb
cld
cs
push
arpl
lret
mov
cmp
fsubrs
mov
cs
mov
cmp
sbb
mov
jo
jo
mov
das
gs
dec
mov
xchg
push
push
loopne
push
inc
dec
addr16
inc
mov
and
stos
mov
push
pop
call
stc
mov
push
bound
insb
clc
ret
pop
xor
sub
fisubs
subb
shr
mov
inc
in
movb
loopne
add
out
xchg
xchg
xchg
gs
fwait
xor
ds
mov
mov
xchg
scas
mov
js
xchg
imul
xor
push
dec
stos
popa
negl
push
in
add
pop
jmp
pushf
mov
dec
xor
das
dec
mov
cli
mov
cmp
mov
pop
dec
push
out
repnz
ja
icebp
fs
nop
scas
adc
faddp
xchg
sahf
stos
lods
mov
sti
hlt
mov
mov
je
pop
xor
add
pop
outsb
mov
add
xor
cs
sub
add
jb
fmuls
sub
nop
lods
or
xlat
jns
cmp
aaa
cltd
je
fdivl
ja
mov
loop
inc
sbb
and
jne
pop
push
repz
pop
pop
in
push
jne
or
shlb
cs
pop
std
daa
push
xor
mov
mov
mov
clc
out
aaa
cmp
cmp
xchg
ret
xor
pusha
xor
push
scas
add
sub
loop
notl
ficoml
movsl
jno
push
rorb
fsubl
xchg
les
push
int
cltd
sarl
stos
shlb
inc
sbb
adc
or
fstps
addr16
and
cmp
pop
xchg
orb
sub
inc
pop
js
dec
inc
int
jge
ja
mov
loop
es
add
cmp
sub
adc
fdivrs
clc
repnz
adc
cmp
ficomps
inc
shrb
pop
xchg
jne
inc
mov
divl
fiaddl
das
xor
xchg
jae
rcrb
mov
pushf
mov
lods
mov
addr16
pop
xchg
mov
shll
inc
scas
sub
add
inc
aas
lahf
dec
or
rcl
test
mov
cmp
and
sub
and
lahf
pop
fcmovnb
xchg
hlt
sub
sahf
lock
popa
adc
dec
hlt
imul
fst
push
mov
sti
outsb
and
ja
push
sub
adc
insb
mov
sub
aaa
inc
pop
nop
pop
out
dec
pop
cmp
push
and
xchg
aaa
sbb
cli
push
outsl
dec
mov
jns
inc
dec
inc
push
lret
mov
in
mov
xchg
push
loopne
out
inc
daa
jl
call
push
pop
push
jle
xorb
cmp
dec
cmpsl
xchg
in
pop
xchg
insl
pushf
xor
iret
cmpl
mov
jle
out
mov
push
mov
lcall
rorb
pop
call
mov
sar
inc
inc
dec
aam
push
add
punpckhwd
sub
jns
mov
jle
sub
sahf
sahf
pop
mov
sbb
xor
aas
push
xchg
sub
aas
dec
mov
lcall
repz
jle
sub
test
mov
rcrb
daa
push
adc
cld
add
sarb
or
jge
aaa
add
test
jle
dec
mov
and
xlat
and
lret
dec
rorl
ljmp
add
adc
push
movsl
rcrl
enter
add
lods
out
loope
pop
dec
insl
shrb
cmp
and
bound
mov
push
cli
dec
js
iret
data16
jns
std
ficompl
fmul
cld
fldenv
stos
test
pop
or
out
in
imul
xchg
adc
fcoml
pop
int
loopne
insl
lea
aad
test
mov
orl
xlat
xchg
xchg
ljmp
lea
mov
add
repz
mov
xlat
mov
test
xchg
frstor
bound
loopne
int3
dec
jp
cld
push
mov
lret
leave
xchg
cmp
pusha
mov
mov
jno
xchg
sub
daa
js
inc
add
mov
xor
mov
dec
xor
mov
clc
orl
mov
cmpsl
test
outsl
int3
and
and
adc
loop
pop
lret
cmp
mov
and
mov
xchg
or
bsr
aam
mov
mov
inc
in
leave
bnd
sub
cmpsl
pushl
scas
aam
out
pop
daa
sahf
jecxz
mov
gs
lods
loope
pop
sub
out
sarl
jg
push
jl
pop
sub
in
jg
and
push
lods
imul
iret
out
push
cmp
pop
ds
xchg
and
cmpsl
inc
outsl
push
test
test
pusha
test
dec
sub
and
cld
sbb
ds
push
andl
pop
shll
and
or
xchg
out
lahf
or
mov
shl
push
cmp
mov
dec
dec
idivb
dec
nop
fadd
xlat
gs
lds
add
jp
test
sub
adc
mov
fiaddl
imul
xchg
xor
mov
mov
mov
mov
pop
mov
or
cmpsl
xor
mov
in
dec
dec
test
or
out
xor
xlat
fcmove
cmp
jnp
mov
scas
mov
cli
dec
sbb
inc
push
fmuls
xchg
push
cmp
popa
pop
pop
sbb
mov
subb
das
ror
push
push
pop
addr16
inc
push
aad
in
inc
std
cli
sub
mov
push
movsl
xor
addb
xor
jmp
xorl
sbb
xchg
pop
or
movsb
sbb
push
cmp
ficoms
mov
push
dec
cmp
pop
inc
arpl
ja
insl
stos
cmp
jbe
bound
dec
adc
ret
and
sub
decl
push
push
fists
ljmp
xor
int3
sbb
movsb
sti
xor
sahf
mov
mov
pop
fxch
add
outsl
imul
aad
out
adc
dec
and
add
xor
cwtl
xor
add
xor
sti
mov
rcrl
jmp
inc
or
xor
inc
inc
adc
mov
in
mov
xor
fldenv
loop
addr16
mov
into
pop
sub
pop
lods
stos
repz
fs
xor
inc
sbb
jecxz
push
push
and
dec
ljmp
cs
mov
sub
rclb
fbld
addr16
scas
movsb
in
pop
aas
xchg
insl
adc
pop
sub
pop
pop
in
or
daa
loope
pop
mov
cmpsw
shll
ss
std
bound
mov
add
and
mov
fsubl
jge
mov
sub
cmc
lods
pop
fwait
jp
aad
push
cltd
add
mov
fucomi
adc
mov
aad
add
orl
daa
call
cli
clc
pop
inc
and
mov
cmc
inc
mov
mov
pop
sbb
inc
dec
lock
lret
nop
jnp
ds
shrb
cmp
add
mov
jl
call
jmp
and
rorb
push
cmc
lea
mov
dec
and
mov
pop
ljmp
frstor
aas
sbb
cwtl
out
pushf
lds
mov
stc
repz
out
out
js
clc
cmp
and
stc
jo
sti
sub
int3
ja
fistpl
rcrl
xchg
or
shl
cltd
jge
sbb
and
data16
sub
dec
stc
imul
xor
mov
jp
mov
pop
out
movsb
jo
or
push
shr
inc
inc
push
aaa
roll
lods
fxch
xchg
scas
pop
mov
cli
mov
mov
sti
sahf
out
mov
cmp
sbb
sbb
xor
lock
stc
clc
cmpsl
cmp
stc
sub
inc
sub
loopne
cmp
std
enter
push
push
sub
movsl
pop
gs
lret
mov
inc
pop
addl
sar
jne
jns
mov
cltd
jne
jg
dec
fisttpl
stc
push
out
sbb
add
js
jae
jl
aas
scas
clc
jae
xchg
dec
mov
cmpl
xlat
add
arpl
add
cld
pop
outsb
pop
fdiv
dec
sbb
push
leave
adc
jmp
lret
ja
push
mov
pop
lds
call
push
mov
jmp
mov
mov
pop
sahf
add
jmp
mov
inc
arpl
bound
lods
loopne
xor
sub
or
in
jns
fidivl
adc
call
jle
loope
xchg
or
daa
cli
push
jae
push
cmc
mov
dec
cmp
shlb
push
imul
dec
xchg
fdivrs
js
cmp
or
movsb
enter
imul
xor
fdivs
inc
and
jbe
inc
and
fisttpll
shll
pushf
fsubrp
xchg
xlat
cld
daa
loope
outsl
mov
dec
sbb
xorb
mov
add
adc
rclb
insb
fsubrl
stc
xor
loop
adc
inc
fcmovu
dec
add
fwait
sbb
lret
mov
shlb
inc
aad
ljmp
cmp
cmp
mov
ret
shr
mov
push
cld
out
pop
mov
sbb
sahf
mov
sub
stc
lahf
adc
inc
aaa
sbb
in
je
fcmovnu
xor
or
push
gs
adc
xor
mov
push
cwtl
popa
dec
jns
xorl
pop
ja
call
xchg
inc
subl
ds
xchg
add
dec
ja
mov
fwait
xchg
xor
sbbl
xchg
fstpl
mov
movsl
add
dec
mov
jmp
push
dec
dec
cmp
jo
lret
mov
int
and
push
and
and
jno
rcll
popf
adc
adc
hlt
add
ret
fmul
pop
outsb
xchg
movsb
and
outsb
into
in
mov
fists
pusha
test
jge
ss
xchg
ret
xchg
cltd
movsb
jo
push
test
adc
sti
insl
cmp
call
dec
movsb
mov
push
xor
divb
push
das
sbb
jns
out
xchg
dec
xchg
adc
lcall
sti
jo
jnp
icebp
in
sti
lret
adc
adc
aas
and
stos
outsb
cltd
or
popf
pop
idivl
fsubl
js
in
lret
sarb
in
push
fstps
pop
rorb
loopne
adc
out
fcmovb
push
aad
pushl
stc
lods
cwtl
movhps
mov
adc
adc
aam
inc
out
inc
mov
imul
int3
rorb
mov
scas
aaa
repz
cmc
pop
cmpl
sbb
aaa
pop
mov
test
outsb
sub
fisubrl
dec
iret
sar
jle
stos
mov
jns
mov
clc
fstpl
xor
test
inc
andb
aam
scas
ljmp
sub
dec
xchg
cmc
dec
sbb
gs
bnd
fwait
push
and
and
mov
pusha
repnz
sbb
pusha
daa
push
dec
xchg
pop
iret
sbb
or
dec
or
xchg
aad
pop
icebp
mov
sbb
aam
rcll
mov
jg
test
stos
loopne
leave
push
movsl
jge
inc
es
inc
scas
outsb
add
sub
and
push
or
push
std
jecxz
ret
mov
adc
je
gs
loop
jge
lea
jg
repnz
pop
push
xor
cmp
cltd
sti
inc
test
mov
pop
cltd
enter
outsb
out
cwtl
and
sub
leave
movsl
mov
mov
shrl
orl
xor
nop
sarl
aad
dec
sbb
fdivrl
sbbb
or
mov
stos
ds
inc
dec
mov
pusha
fmul
inc
jbe
xchg
xchg
push
scas
inc
lods
test
cltd
mov
xchg
and
out
cmpsb
lods
sub
and
mov
adc
fdivrs
add
roll
je
pop
repz
je
sahf
sub
xchg
aad
bound
mov
xchg
jb
in
sub
xchg
loope
cmpsl
sbb
es
push
pusha
pop
lds
dec
fcomi
xchg
call
adc
mov
test
mov
arpl
push
lods
test
xor
or
fwait
sbb
mov
sub
mov
and
mov
mov
inc
mov
ret
aam
aaa
dec
mov
push
xchg
adc
daa
stos
dec
outsb
js
cmp
addr16
sub
adcl
iret
stos
dec
bound
addr16
and
jo
out
sbb
mov
cmp
setbe
clc
dec
stos
or
jne
into
cli
loopne
in
or
xor
aam
jne
scas
sbb
push
call
adc
loopne
lock
cmpsb
movsl
sbbl
hlt
mull
fwait
sbb
or
xchg
xchg
push
jp
test
outsl
std
dec
pusha
cwtl
add
push
cmpsb
inc
mov
sbbb
sbb
dec
imul
jnp
sbb
hlt
adc
and
loope
inc
mov
mov
adc
clc
popf
mov
fisttpll
sbb
xor
repnz
pushf
sub
fs
in
lcall
lret
out
push
and
std
push
push
mov
or
inc
in
mov
sbb
jecxz
stos
cmp
mov
lcall
or
mulb
cmpsl
mov
mov
cld
xchg
addb
shrb
test
jo
xor
fisubrl
jne
aas
xchg
sbbl
gs
cmp
mov
xchg
sub
sbb
lahf
rclb
arpl
mov
or
cwtl
mov
ss
adc
arpl
push
jnp
mov
jne
inc
jo
in
xchg
push
sar
ljmp
shrb
sbb
sub
call
dec
inc
cwtl
adc
jle
sub
scas
ljmp
sbb
push
mov
ficoms
inc
movsb
sbb
mov
fwait
lea
dec
cmp
add
cli
mov
idivb
addr16
pusha
xchg
popf
arpl
sub
sti
jge
dec
adc
icebp
xchg
or
push
pop
mov
fwait
les
lock
mov
fmulp
stos
dec
aad
adc
push
fcompl
mov
sbb
ret
pop
and
cmpsl
or
fsubs
insl
fs
jl
jo
jnp
cli
add
aaa
call
cli
jmp
addr16
shlb
out
mov
out
push
pushf
pop
arpl
fdivs
jno
sbb
inc
test
in
push
add
lock
or
mov
dec
enter
je
inc
in
ret
and
sbb
in
jne
les
sbb
gs
lock
dec
movb
xchg
je
mov
pop
mov
out
add
das
jecxz
cmp
jle
and
fistps
lods
xor
xchg
in
mov
not
and
in
popa
ss
and
inc
mov
lods
testl
push
sti
adc
push
jg
ret
pop
imul
xor
push
or
xchg
lods
jmp
lods
dec
mov
sbb
jns
inc
iret
mov
movsb
inc
jne
stos
inc
in
jns
jmp
aaa
insl
ret
sbbb
cmp
sarb
sbb
mov
sbb
jle
lods
fadds
fisubs
jge
gs
cmc
pop
imul
push
push
add
dec
scas
pop
in
push
or
push
push
pop
movsl
fmul
lea
jmp
dec
fsts
dec
inc
clc
pop
cmpsb
in
push
and
pop
dec
ficompl
inc
inc
push
jnp
jl
movsl
dec
loop
aas
mov
pop
mov
ret
inc
push
or
es
mov
es
leave
xchg
lahf
inc
je
movsb
lods
mov
mov
sub
sbb
cmp
sahf
and
int3
inc
push
aaa
or
test
push
inc
ljmp
imul
ds
mov
mov
mov
lcall
push
cmpsb
nop
sub
and
std
hlt
cltd
mov
popa
push
aas
stos
je
sub
xchg
insl
sbb
setb
test
stos
ja
and
les
or
aam
dec
sbbb
data16
shlb
sti
out
lret
pop
sbb
scas
sub
cmp
aaa
jne
jno
hlt
jb
pop
fadd
dec
mov
mov
xor
jmp
aad
pop
or
repnz
repz
inc
jle
pop
mov
adc
sub
stos
xchg
cwtl
jge
xchg
jl
mov
mov
aaa
push
fs
mov
cmpb
sub
test
inc
cmpl
and
mov
dec
lock
in
ret
dec
fiaddl
rcrl
mov
push
rcrb
add
pushf
cmp
jmp
push
add
aaa
int
sbbl
dec
inc
cs
pop
es
mov
cmp
pop
or
pop
ds
sub
sub
lret
iret
cmc
mov
mov
popa
inc
sub
mov
add
fisubrs
repz
adc
mov
mov
jae
sbb
jge
shr
rcr
fsubs
push
loop
rol
out
ret
lods
leave
jns
ljmp
scas
lret
xlat
notl
lock
inc
mov
shll
mov
jno
mov
in
lds
sub
sbb
xor
popl
xor
shlb
cmp
dec
repnz
jno
aad
push
in
leave
mov
pop
int
clc
or
cmpl
jne
leave
mov
xchg
add
pop
and
testl
sbb
in
mov
shl
cmpsl
int
mov
lret
mov
cmp
shll
imul
mov
ret
jne
mov
mov
cmp
fldcw
xchg
mov
popf
pushf
jge
movsb
and
sub
adc
xor
insl
fcmovu
inc
inc
push
jne
dec
pop
out
das
xlat
sbb
xor
je
inc
mov
inc
jnp
jmp
addr16
inc
cld
nop
mov
js
mov
jl
push
push
mov
push
cwtl
dec
in
lcall
popa
push
push
mov
adc
pop
jg
push
cmp
jno
and
into
jmp
mov
push
cs
cmpsl
js
cwtl
lret
ja
push
push
clc
add
xchg
stc
or
xor
ja
lret
aas
mov
inc
in
pop
stos
and
xor
mov
add
push
cmpsl
pop
orb
xor
xchg
sbb
repnz
lret
test
mov
xchg
mov
xor
sbbl
adc
inc
dec
popf
into
sub
aam
fstpt
push
push
lahf
pusha
loop
andl
adc
out
loope
push
fs
inc
test
sbb
iret
jnp
jae
push
test
or
dec
sbb
xchg
scas
inc
sub
jbe
push
adc
movsb
sub
xchg
add
xlat
or
or
cmp
adcl
hlt
fadd
nop
cmpsl
cs
sub
nop
inc
mov
dec
scas
sub
lea
or
fidivs
add
inc
cli
lret
xor
push
leave
adc
mov
mov
adc
ret
add
and
inc
mov
mov
mov
loope
imul
add
stc
ja
ffree
mov
lret
bound
movsb
fwait
mov
jl
lahf
adc
push
add
xor
xchg
aaa
stc
add
or
lret
or
inc
pushf
mov
mov
lods
int3
mov
aam
mov
sbb
push
aas
push
xor
das
push
xchg
enter
jb
xchg
inc
dec
jo
cltd
pop
test
lods
adcb
fldenv
dec
or
cltd
mov
aam
cmpsl
push
xchg
fneni(8087
fwait
test
repz
fs
out
cmp
xor
inc
ret
cmp
ret
push
jg
add
dec
in
mov
fadds
jbe
loope
inc
imul
inc
test
shll
lds
addr16
arpl
jge
movsl
ljmp
les
scas
jb
mov
ds
mov
and
xchg
mov
xchg
daa
pop
fdiv
out
sbb
ret
mov
mov
cmc
jp
faddl
mov
mov
shll
aas
and
dec
sbb
adc
aam
das
xchg
mov
pop
leave
jno
ss
lahf
inc
mov
or
xchg
sbb
sti
cmp
xchg
mov
pop
jne
into
mov
sub
fbld
jg
icebp
sub
xor
add
dec
cmpsl
push
cmp
cmp
in
sbb
xor
movsb
cmp
pushf
mov
add
xlat
jmp
inc
mov
xchg
lea
xchg
and
sbb
pusha
pop
mov
jo
xor
push
leave
outsb
ret
ret
vpmacsdqh
jmp
adc
mov
mov
inc
and
xchg
fsubl
inc
ret
nop
xchg
fcoml
mov
cmpsb
fdivr
sbbl
cmp
pop
push
sti
rorb
sbb
and
es
mov
lods
cmp
or
xchg
std
xorl
out
mov
xor
add
and
or
ret
aam
mov
adc
outsb
cmpsb
in
outsl
xchg
xchg
mov
insl
mov
js
sbb
imul
stos
sbb
cmp
popa
xchg
or
push
ljmp
mov
mov
test
push
loopne
sub
dec
inc
jmp
int
xchg
hlt
outsb
push
in
xchg
xchg
iret
setbe
int3
cld
ret
sbb
cmp
mov
push
or
push
add
xor
pop
jmp
into
xchg
bound
aad
pusha
fadd
lock
sub
repnz
lea
mov
pop
pop
mov
movsb
shld
xchg
insl
mov
sahf
popf
jns
jns
lahf
lea
imul
and
and
imul
cmp
pop
or
jle
cmp
cli
lcall
push
scas
xor
aas
je
jbe
jmp
lahf
popf
pop
insb
fadds
jle
add
stc
xor
mov
fwait
and
jg
int
and
or
test
pop
mov
jp
adc
jne
in
xchg
enter
lcall
push
mov
add
es
inc
clc
dec
out
test
mov
mov
in
in
and
mov
sub
mov
icebp
pop
stos
xchg
inc
arpl
mov
pusha
xchg
ss
outsl
out
loope
popf
in
roll
push
adc
movsl
mov
sbb
mov
sbb
jmp
pushf
adc
cwtl
mov
leave
scas
jmp
les
mov
test
jle
stos
fsubr
int3
sbb
cmpsl
pop
dec
ret
rcrl
mov
sub
or
ja
jns
push
je
subb
mov
sbb
subl
pop
into
movsl
pop
bound
mov
or
sub
push
push
cli
ds
dec
pop
xchg
jle
sbb
jnp
subb
std
mov
pop
arpl
sbb
dec
sbb
adc
in
or
pop
imul
mov
std
mov
adc
testb
mov
fdivrl
cmp
adc
je
xchg
in
js
imul
leave
aad
mov
or
jne
jne
rclb
into
mov
jo
push
rol
test
adc
addr16
cmp
mov
shlb
cmc
inc
mov
dec
pop
outsl
mov
fnstenv
pop
push
lret
jnp
inc
cwtl
out
xchg
xor
sbb
arpl
xchg
push
mov
mov
jg
in
std
xchg
mov
push
rcll
stos
arpl
dec
and
inc
jmp
inc
jno
loope
push
dec
mov
dec
add
sub
mov
xor
cmp
arpl
jo
jnp
daa
xor
sub
rcrl
std
imul
mov
call
sub
cltd
or
fwait
jl
mov
sbb
ficoml
insb
pop
dec
mov
mov
mov
dec
aaa
sub
xchg
sbb
sti
dec
aad
hlt
rclb
pop
and
mov
and
aas
loopne
data16
push
lods
pop
jle
adc
xchg
cmp
test
mov
push
cltd
adc
dec
xchg
push
cltd
push
sbb
xor
cmp
add
cmp
mov
mov
aas
int
xchg
pop
cmp
pop
mov
xchg
mov
sub
sub
into
and
es
je
jge
lahf
push
rolb
add
mov
repz
outsb
aaa
out
add
adc
sub
push
push
es
ljmp
stos
jg
push
or
add
andl
xor
and
stc
fldcw
jge
mov
cmpsb
adc
adc
out
xchg
mov
dec
loope
xchg
xchg
and
shlb
mov
jge
mov
fldz
in
push
clc
test
xchg
xchg
lahf
xlat
in
leave
testl
jno
or
mov
movhps
adcl
push
int
sub
out
aam
or
fildll
pusha
lods
dec
mov
or
aad
mov
leave
stos
xor
insl
ljmp
or
mov
jg,pn
movsb
mov
mov
pop
add
xor
adc
sub
cmpsb
adc
mov
inc
and
btc
outsb
inc
shlb
fdiv
add
mov
cmpsl
mov
loope
xor
lea
xchg
frstor
rep
xchg
shrb
fmul
sbb
pop
adc
leave
pop
mov
ret
dec
iret
fstpl
push
cmp
xchg
aad
inc
pushf
inc
js
lock
or
scas
xchg
push
xchg
inc
out
mov
sbb
or
mov
pop
add
fwait
cmp
arpl
and
sbb
iret
add
iret
mov
addr16
inc
xor
scas
inc
lret
pop
mov
add
cmp
jns
adc
mov
jbe
stc
pop
cmpsl
and
lods
mov
inc
lcall
push
push
cmpsl
cmp
imul
ss
add
mov
xor
mov
dec
mov
or
and
test
into
sbb
xor
inc
dec
in
lods
and
fsubrl
pop
cmp
xor
push
nop
addl
int3
sub
ss
mov
pop
dec
push
dec
cmc
push
adcb
mov
adc
mov
or
add
push
movsl
shrl
push
popf
pop
nop
loopne
or
and
cmp
fsubr
inc
mov
dec
mov
jp
mov
rcrb
lret
push
fiadds
rcrb
inc
das
addl
in
stos
inc
loopne
andl
rcrl
lret
dec
call
sarb
sar
lds
mov
jne
xchg
cmp
push
mov
jbe
or
inc
insb
call
xchg
inc
rorb
aas
sub
ret
sahf
dec
xor
loop
sbb
setae
inc
subl
lds
and
jle
cld
sub
nop
dec
push
adc
sub
loop
and
sub
iret
add
frstor
lock
ja
test
and
mov
adc
iret
xor
popa
aad
mov
insl
pusha
mov
lcall
out
daa
push
cmc
adc
xor
outsb
push
shrl
outsl
inc
imul
dec
data16
mov
test
mov
les
sarl
cmpsb
fldcw
push
mov
hlt
mov
das
push
push
fcomps
popa
test
insb
lcall
pop
loop
frstor
int3
aam
cld
sub
push
sbb
mov
insl
inc
gs
push
fs
xor
inc
aaa
fcmovb
cmp
cltd
ja
xlat
or
add
repz
add
pop
xchg
sub
and
lock
add
pop
scas
incl
bound
int
inc
mov
mov
xchg
pusha
dec
sub
loope
aas
inc
xlat
push
pop
xor
dec
push
pop
mov
cmp
iret
sti
cmp
mov
pop
jno
cmpsl
jmp
xchg
cmp
jnp
ljmp
jne
jbe
xlat
xor
jle
jns
data16
xlat
bound
popa
dec
lret
jne
aaa
pop
out
push
mov
stos
fadds
js
sti
outsl
testl
jl
jbe
and
push
bound
pusha
pop
dec
pop
cld
jno
sub
cmp
mov
sbb
mov
xor
sbb
pop
xchg
test
pop
xchg
lret
ja
xor
popa
adc
xchg
adc
imul
push
addr16
aad
sub
fcmovb
aad
out
mov
pop
arpl
mov
mov
cli
sbb
inc
lods
or
adc
xchg
lcall
int
popf
into
sahf
fwait
popf
cmp
jecxz
inc
dec
xchg
adc
mov
dec
hlt
cmpsb
pop
push
int
fsubrl
lds
stos
and
push
aas
inc
shrb
iret
call
icebp
int3
sahf
imul
insb
push
imulb
inc
cmc
loope
xchg
ret
or
cmp
xchg
jge
fisubrl
xchg
idiv
fdiv
mov
adc
sbb
or
push
dec
add
push
mov
nop
sub
std
mov
sub
cmp
mov
jl
jnp
nop
subl
je
stos
cmp
lock
mov
es
out
xchg
xchg
mov
mov
jl
sub
sub
cld
cmpsl
dec
scas
cs
adc
movsb
bound
aaa
push
jecxz
int3
aas
inc
and
ljmp
xchg
cld
out
fdivl
mov
cld
fistpll
shrb
and
or
aas
sarl
dec
sarl
daa
lahf
pop
xchg
iret
jmp
test
mov
inc
orb
divb
sbb
int3
in
cmp
or
outsb
out
dec
add
outsb
mov
lods
mov
ja
push
stos
cmp
adc
dec
testl
paddw
test
loopne
test
ficoms
pop
xor
aas
subl
ret
ficoms
pop
xor
and
sub
push
xor
xchg
outsb
je
or
and
lea
mov
int
rcll
inc
sbb
pop
push
shll
rolb
cmpsl
xchg
das
xchg
pop
or
fists
filds
or
jmp
out
gs
pop
push
push
fldl
movsl
xchg
imul
leave
jne
je
std
nop
loope
in
cmp
ret
dec
pop
repz
lods
xor
outsl
jnp
push
cmp
adc
xchg
insb
outsl
jmp
lods
fsts
enter
movsl
jmp
jbe
xchg
cmp
dec
inc
test
sbb
imul
dec
sub
pop
xchg
push
lret
jnp,pt
add
sub
add
flds
jle
mov
pop
cmp
cwtl
jns
in
test
nop
mov
inc
int
mov
rcr
pop
out
int3
dec
jge
scas
push
loop
xchg
inc
inc
xor
repnz
stos
jo
adc
xor
cmpsb
dec
sahf
lahf
pusha
out
lock
scas
adc
in
cmp
fldt
push
in
sbb
enter
int
ss
mov
test
lcall
xor
data16
adc
jl
push
lcall
jnp
cmp
adc
sub
pop
ja
popa
xchg
fimull
lcall
movsl
mov
jmp
mov
pop
jg
mov
movsl
std
pop
dec
jbe
add
jno
dec
add
icebp
loope
lahf
insl
aam
shlb
rclb
or
or
xchg
mov
idiv
jp
das
es
xlat
sbb
ret
inc
enter
hlt
jle
std
pop
dec
icebp
cld
dec
lea
test
mov
sub
inc
aas
faddl
rclb
jbe
mov
adc
mov
xchg
mov
mov
pop
pop
or
sbb
xchg
mov
sbbb
mov
and
mov
filds
in
or
pop
hlt
push
sahf
cmp
or
sbb
mov
cs
push
stc
add
xor
xchg
andl
inc
inc
int3
mov
insl
mov
dec
xchg
jg
push
and
xchg
out
sbb
test
mov
clc
fcmovbe
int3
fisttpl
adc
push
cmpsl
fimuls
adc
and
inc
pop
pop
mov
jne
imul
leave
or
sub
push
mov
lods
lcall
and
cmc
fst
movsb
inc
enter
pop
mov
mov
pop
push
pop
jo
push
dec
inc
add
out
add
les
inc
movsl
out
push
aam
adc
arpl
xor
lahf
jle
cwtl
sahf
and
in
sub
mov
push
ds
jns
nop
jecxz
hlt
je
aam
cmpsb
sti
add
mov
push
rclb
mov
call
lret
jb
outsb
and
mulb
cmp
pop
lcall
push
insl
xchg
xor
mov
push
sub
inc
scas
or
lds
lds
fwait
sti
xor
sbb
pop
pop
ficoms
lds
xor
stc
je
shrl
scas
inc
push
jp
subl
push
fdivrl
mov
fldt
loope
cmpsb
mov
leave
shll
ja
mov
movsl
push
and
lds
mov
pop
mov
inc
cwtl
fwait
mov
pop
and
pop
shlb
cltd
lods
shl
jg
iret
xchg
pushf
mov
cmp
jmp
out
inc
lock
ret
push
xchg
scas
jmp
push
std
push
or
pop
xchg
xor
mov
in
imull
mov
mov
popa
adc
outsb
mov
test
gs
out
sbb
lods
aas
test
sar
stc
cmc
sti
in
icebp
ljmp
pop
mov
cmp
jg
aad
cmpsl
xor
stos
call
push
inc
and
sbb
pop
outsl
add
mov
push
out
pusha
andb
inc
popf
test
cmp
mov
mov
jg
rorb
in
jmp
sbb
mov
mov
and
and
jg
mov
mov
adc
movsl
pop
int
mov
fisttpll
inc
inc
das
jb
pop
ss
test
push
mov
sub
sub
std
sahf
test
xchg
push
push
jne
xor
insb
ret
sub
push
test
xchg
js
adc
popa
pop
jo
add
lcall
leave
sub
xor
inc
mov
arpl
int3
jnp
cs
shll
repnz
and
jb
or
lcall
divl
iret
push
invd
adc
fdivr
fisttpll
jle
daa
call
cmpsb
les
pop
inc
das
xlat
push
sbb
jb
cmp
mov
fnstcw
xchg
cmpsl
sub
cmp
repnz
jbe
add
in
fiaddl
xorb
xor
jg
repz
and
jno
aas
cmc
insl
das
pop
lcall
lods
dec
cmp
je
orb
jo
jmp
popf
jns
outsl
fildl
test
ss
xor
stc
pop
mov
popa
sbb
jo
sbb
movsb
decb
loope
lcall
sahf
lock
dec
addr16
out
test
jp
adc
sbb
and
ljmp
hlt
out
sub
lods
movsb
jno
adc
sti
pusha
mov
les
sbb
jge
inc
add
test
inc
xchg
test
leave
xor
icebp
push
int3
shrl
xchg
pop
pop
in
fcom
and
jmp
push
sbb
imul
repz
leave
jmp
cmpxchg
adc
xchg
loop
mov
movsb
inc
repz
pop
stos
aas
and
mov
xchg
fs
push
rorb
mov
mov
add
push
xor
cs
jl
or
dec
mov
data16
jae
aad
int
jg
mov
pop
es
cs
push
ljmp
pop
push
xchg
push
jge
repz
cli
cli
lds
adc
xchg
dec
add
push
fldenv
jp
lock
fstp
out
in
lret
std
inc
jp
inc
sub
pop
push
idivl
jl
jns
sbbb
mov
push
jns
mov
lods
cmp
sub
xchg
sbb
fstps
hlt
and
aaa
mov
cmp
lds
cmp
cli
sahf
cmp
cmp
mov
push
xor
push
lock
lea
inc
xchg
pop
fdivl
add
mov
xor
pop
xchg
mov
xor
inc
jno
push
pop
fsubp
pop
stos
pop
and
movsl
mov
pop
jno
popa
sbb
push
subb
movl
pop
inc
into
and
dec
and
daa
jl
push
add
aaa
and
data16
push
lea
test
jg
xor
rorb
mov
fcoms
std
lret
pop
sub
mov
and
mov
sub
or
pop
dec
push
push
ret
cs
call
xchg
mov
inc
arpl
push
xor
push
aad
mulb
xor
mov
xor
push
xor
aam
mov
xor
cli
adc
adc
insb
adc
hlt
adc
daa
sub
mov
and
mov
in
pushf
dec
ret
enter
pop
idivb
aam
inc
loop
out
cmpsb
into
jns
adc
imul
notl
sub
insl
jno
imul
push
iret
push
movsb
fwait
pop
push
insl
aad
jo
push
fildll
mov
shll
rolb
sbb
dec
es
into
mov
add
lret
loop
xor
addr16
pop
push
add
jp
and
pop
sbb
adc
ftst
jae
sub
jmp
inc
xchg
mov
dec
dec
aam
cmp
nop
repnz
dec
sub
xor
jg
insb
push
test
pop
jo
mov
test
sub
and
add
sahf
aam
cmp
sbb
sub
push
or
in
jne
decb
arpl
insb
insl
rcr
stos
mov
mov
lock
cmpsl
loope
cmp
mov
push
imul
rorb
mov
push
push
push
in
popf
das
mov
scas
outsl
fstpl
aam
push
or
out
ficoms
xchg
adc
pop
inc
int3
ds
xchg
mov
cmc
xchg
pop
sub
mov
cmpsl
mov
and
cmp
sub
push
ss
loop
mov
or
les
insl
mov
sub
or
push
mov
add
mov
cmc
bound
lods
xchg
stc
pop
hlt
mov
shlb
out
aam
push
inc
adc
out
inc
in
iret
xchg
enter
cmp
fdivr
leave
scas
and
add
movsb
adc
std
adc
mov
pushf
pop
inc
loopne
cmp
and
in
inc
daa
sti
and
repnz
lret
cmp
jl
mov
mov
xor
lods
ds
into
xor
cmc
ja
push
mov
push
in
jle
fwait
push
jl
and
insl
cltd
mov
jmp
pop
iret
cltd
sbb
sbb
and
and
movl
scas
hlt
mov
stos
cmp
fidivl
xor
or
sti
pusha
test
mov
inc
push
shlb
mov
xchg
imul
shll
imull
lods
cmpsl
into
mov
mov
xchg
jg
hlt
adc
xor
sbb
xchg
int
std
ret
or
cmpl
xchg
mov
sbb
out
sub
fwait
enter
imul
push
cmpsl
mov
pop
es
mov
xor
cld
into
fbld
push
push
imul
int
fwait
in
lret
sarb
mov
add
mov
data16
or
jbe
xchg
sbb
ja
in
daa
fwait
out
or
mov
lds
movsl
loop
cwtl
fcompl
mov
sub
out
sahf
ja
repz
xchg
adc
nop
push
xchg
daa
fisubrs
jns
adc
sarb
mov
fstpl
out
aas
popf
clc
cltd
and
pop
xchg
mov
push
sbb
ror
jae
pop
and
jae
push
cmp
lock
add
cmp
jl
lcall
mov
mov
dec
push
add
or
adcl
int
mov
push
andl
stos
add
aas
add
xorl
mov
mov
xchg
add
jg
mov
adc
and
lcall
call
pop
inc
add
outsl
inc
push
mov
clc
data16
cmp
jae
dec
lods
mov
mov
mov
shl
cmp
int3
push
cmp
jne
std
mov
das
mov
je
jns
push
xchg
mov
cwtl
push
rol
mov
xchg
pop
mov
scas
sbb
cmp
xchg
inc
add
rcl
pop
and
rcrl
pop
cld
inc
loop
movsb
cs
daa
and
pop
cs
cltd
push
orb
movsl
nop
mov
les
ficoml
add
or
add
lret
insl
adc
pop
pop
out
push
adc
sub
lcall
push
aam
mov
mov
mov
outsl
adc
push
xor
test
cmp
push
adc
xchg
dec
and
or
hlt
sbb
add
inc
push
pop
arpl
cmp
popf
xchg
xchg
mov
sti
dec
cltd
pop
loop
fidivl
ret
sbb
cmp
and
fsubrp
jmp
push
adc
sub
cli
push
mov
or
cmp
jp
data16
dec
ja
or
cmp
scas
adc
lds
scas
inc
jmp
sbb
mov
fdivs
xchg
arpl
xchg
icebp
dec
lods
pop
jmp
xor
cmpsb
pop
push
mov
mov
rcrb
addr16
xorb
jb
add
push
cli
int
idivb
cmp
mov
xor
subl
sub
popa
jg
sub
clc
mov
addr16
fsub
push
jno
mov
jge
mov
adc
inc
testb
push
fs
jne
adc
mov
jae
pusha
icebp
cli
sbb
jns
lods
dec
push
jae
cs
popf
cmc
testb
xchg
xor
adc
mov
lds
inc
push
sbb
jb
or
adc
shll
xchg
int3
xchg
cmp
jns
mov
jmp
mov
out
insb
sbb
sahf
ss
movsl
pop
sub
sbb
in
ja
sub
imul
and
sbb
push
pop
inc
add
and
imul
aam
jb
cmp
je
and
rorb
and
adc
ja
inc
dec
jae
jns
add
div
cli
mov
xor
sbb
mov
addr16
dec
es
dec
sub
mov
xchg
sub
ds
out
leave
out
or
jmp
sbb
mov
iret
les
pop
aad
and
xchg
sti
push
push
data16
push
call
push
and
mov
fdivs
pushf
cmp
xchg
pop
dec
jb
gs
cmp
mov
test
int
jmp
cs
dec
push
test
test
fistps
jb
push
cmp
xchg
inc
dec
and
in
and
jne
add
rorb
rorb
js
insb
cli
ret
jecxz
idivb
and
sub
lret
mov
push
adc
cmpsl
jnp
inc
pop
jno
inc
sub
sub
rcrl
xor
jnp
in
pop
mov
pop
enter
sbb
test
in
adc
cmp
lods
mov
addr16
xchg
mov
fwait
push
xchg
cwtl
jbe
out
xlat
mov
pushf
lock
adc
test
gs
pop
push
rcl
cmpsl
mov
push
scas
xor
xchg
icebp
fistl
adc
mov
xchg
scas
mov
add
cmp
lds
pop
xchg
fdivs
push
ljmp
mov
inc
test
dec
adc
popf
inc
cmp
pop
out
es
lds
movsb
mov
mov
jbe
rorb
rolb
repnz
pop
or
inc
mov
orb
aad
push
push
dec
mov
inc
mov
inc
lret
cwtl
xor
stc
iret
in
fsubrs
xorl
adc
cmp
jnp
dec
mov
push
roll
lods
inc
jo
adc
add
sub
and
imul
bound
ficoml
outsl
cltd
mov
sub
jecxz
nop
sub
inc
testl
outsl
repz
and
xor
xchg
in
out
inc
cld
mov
lock
adc
mov
xor
sbb
cmp
rcrb
mov
cmpsb
jo
jle
jg
lahf
xchg
push
or
mov
inc
inc
mov
inc
jmp
sub
push
ds
sub
arpl
xchg
jnp
add
out
jae
mov
mov
mov
inc
mov
xor
bswap
mov
jle
sbb
scas
fsubrs
inc
jecxz
lods
fs
pop
xchg
jle
aaa
cmp
in
ficoml
cmp
pop
jb
or
xchg
daa
mov
in
mov
add
push
pop
xchg
xchg
adc
dec
inc
xor
ror
jmp
mov
adc
mov
or
cmp
push
cwtl
push
mov
idivl
jge
out
push
lods
mov
or
in
jo
pop
cwtl
mov
dec
mov
sbbb
push
push
mov
adc
test
sbb
fistpll
mull
mov
outsb
jl
pop
and
and
xchg
inc
xor
cmpsl
cli
dec
mov
loop
and
movsb
cld
and
sub
test
cmp
jg
sbb
or
inc
mov
push
sbb
and
idiv
sti
insl
dec
cs
ret
stos
arpl
jae
cmp
lods
and
lret
cwtl
sahf
push
adc
cmp
fcoml
popf
push
les
lods
hlt
test
mov
sbb
inc
test
xchg
sub
pop
fsts
ret
mov
stc
or
dec
movsbl
or
aam
sub
jns
pop
iret
negl
pop
aaa
scas
fwait
lret
lods
pop
pusha
or
dec
loopne
or
ja
mov
dec
pop
outsb
pop
sbb
inc
lret
icebp
mov
lahf
cmpsb
daa
xchg
mov
pop
mov
and
pop
xorl
rclb
xchg
xor
fwait
adc
dec
ret
push
movl
xchg
xor
shr
movsb
loope
out
mov
popf
test
mov
xor
mov
cmp
aad
outsl
mov
dec
lds
mov
inc
cmpsl
xchg
fbld
dec
inc
fdivs
fistpll
aam
stos
and
xchg
in
fwait
xchg
das
push
mov
jne
mov
js
mov
jnp
xor
add
mov
int
sbb
sbb
les
stc
jp
mov
rcrb
aad
sub
cwtl
scas
inc
sub
or
xchg
xor
pop
dec
sti
out
idivb
or
or
pop
sti
pop
xor
insl
mov
arpl
or
ret
mov
pushf
push
stos
pop
arpl
add
imul
adc
add
adcb
ljmp
jp
fsubrl
ret
cli
mov
iret
jne
jns
pop
sbb
or
jecxz
data16
ret
push
scas
fs
sarl
add
inc
mov
or
cmp
pop
arpl
outsl
sahf
aad
popl
test
leave
mov
pop
or
filds
das
lret
push
inc
roll
aas
call
sub
test
jp
mov
pop
popf
cmpsl
add
dec
or
int3
cmp
lret
fdivs
data16
icebp
inc
mov
xor
pop
mov
jmp
lret
addr16
call
lods
inc
and
bound
or
pop
xor
ss
xchg
lods
lods
cmp
clc
xor
test
jl
sbb
jle
test
cmpsl
xor
xchg
jbe
nop
push
adc
inc
data16
sbb
insl
inc
lret
push
out
pop
and
call
xchg
inc
add
fstpl
or
pop
push
xchg
mov
pop
scas
scas
in
jne
mov
lods
xchg
dec
pop
mov
sbb
cmp
inc
sub
es
out
xchg
fwait
jmp
fnstenv
clc
or
dec
je
mov
arpl
mov
scas
sbb
fstpt
adc
mov
cmc
fbstp
push
cli
sbb
ss
dec
loope
cmp
mov
or
xchg
stos
loopne
push
js
sub
test
stos
xor
cwtl
shl
and
movsb
outsl
imul
xor
cmp
in
pop
shrb
jne
lea
xchg
add
adc
rolb
data16
pop
les
or
pop
push
mov
je
push
mov
lods
and
pop
push
jno
bound
jns
stos
pop
sub
adc
pop
or
shrl
mov
jns
cmp
hlt
pop
inc
pop
inc
daa
mov
add
test
sbb
jge
loop
jecxz
add
js
or
cmp
adcl
mov
add
pop
pop
or
pop
and
xchg
test
push
mov
out
mov
pop
dec
ljmp
push
mov
add
dec
dec
arpl
sarl
jnp
jmp
xchg
ss
rclb
mov
scas
test
sub
pop
inc
stc
push
jecxz
lahf
pop
pop
sti
test
and
fldenv
fcomip
lods
inc
in
or
inc
cmp
and
clc
cwtl
xor
cmp
fmull
daa
push
nop
out
cmpsb
cmpsl
clc
dec
jg
test
dec
mov
test
push
lret
fimuls
pop
cmp
sahf
xor
stos
les
push
idivb
push
enter
cmp
std
jne
adc
adc
inc
xor
inc
mov
pop
pop
sub
jb
mov
and
pop
sub
and
ret
frstor
js
lods
xchg
ds
xlat
add
sub
pop
pusha
fsubs
pop
pop
add
and
pushf
sub
adc
pop
ljmp
lods
mov
das
and
xlat
sbb
rclb
sbb
cmp
daa
lea
add
or
not
mov
fisubrs
fs
into
enter
cld
icebp
mov
or
mov
subl
pop
insl
dec
outsb
mov
std
fstpt
repnz
cld
xor
jnp
fs
les
pop
imul
loop
add
adcb
adc
xchg
int
add
and
add
lds
cmc
cmc
pop
shl
push
je
lea
outsb
shrb
lock
jl
aas
cmp
lret
or
mov
insl
sti
mov
sub
fdivr
cmp
fists
arpl
fwait
hlt
jo
es
mov
sub
mov
cmpb
fwait
dec
pop
ret
push
jno
mov
sbb
lds
push
add
rclb
cwtl
mov
mov
jno
bound
bound
mov
adc
cmpsb
dec
mov
sahf
fcoms
in
push
popa
pop
dec
hlt
mov
clc
mov
ds
sahf
cwtl
cmp
sub
pop
rcrl
aad
mov
nop
push
pusha
jne
test
pop
sbb
in
sahf
sub
lldt
pushf
fbld
nop
inc
and
cmpl
je
mov
das
test
add
cmp
aad
sti
sub
cmp
and
pop
mov
in
inc
mov
add
xor
movsl
push
rorl
jle
push
call
xchg
mov
subb
adc
bound
pop
fmull
jno
mov
jl
sbb
movsb
xor
jge
push
or
cs
fbstp
xchg
jmp
adc
js
loope
cld
enter
jo
cmp
sbb
inc
and
movsb
jmp
addl
movsb
cld
int
inc
xchg
icebp
subl
mov
int
cli
pusha
lret
add
hlt
xchg
sub
or
sbb
sub
or
shrb
fldenv
pop
jp
cmp
cmp
enter
push
imulb
sbb
cmpsl
into
lods
mov
add
popa
xchg
xor
mov
jne
scas
gs
js
or
jle
pop
xor
sarb
aam
sub
aam
scas
push
scas
inc
jb
and
mov
lret
adc
push
cmpsl
imul
loopne
inc
push
into
arpl
movsl
jnp
std
mov
cmpsb
das
pop
les
push
cmp
add
push
cmp
cltd
xchg
pop
xor
or
cmp
test
sti
leave
xchg
lock
jae
push
cmp
notl
inc
insb
neg
sub
and
fwait
or
adc
push
dec
xor
arpl
jb
outsl
or
stc
rcll
sti
stos
into
or
in
out
test
xorb
adc
out
sbb
mov
push
xchg
dec
sti
inc
add
sarb
arpl
enter
inc
inc
add
das
std
sahf
stc
cltd
sub
aam
pop
inc
mov
aam
imul
insw
pop
mull
dec
xlat
lahf
xor
dec
cli
fisubs
aas
cmp
jbe
repz
fsubs
mov
outsb
inc
mov
ja
stos
add
setno
das
xor
insl
inc
orl
aam
mov
pop
mov
stos
xor
gs
push
mov
decl
or
dec
fxch
fmuls
or
sti
jns
adc
adc
and
sub
inc
out
aaa
cmc
in
movsl
cli
push
fcomp
add
push
adc
loope
nop
clc
xor
mov
mov
lods
cmp
mov
out
sbb
sbb
scas
add
shll
dec
xchg
data16
insb
lahf
mov
loope
sub
and
jle
lahf
xchg
sbb
push
pop
mov
shlb
xchg
jp
idivb
ja
stc
pop
loopne
mov
cmp
xor
test
daa
mov
and
and
or
in
cs
int
mov
movb
fs
inc
sbb
imul
adc
xorb
xor
icebp
adcb
repz
ficoms
aam
test
or
insl
fisttps
fildll
mov
and
mov
lcall
mov
stos
test
xchg
mov
les
aas
in
je
dec
jne
cmpsb
or
mov
add
lret
loopne
mov
mov
inc
add
sub
cmp
pushf
in
lds
ja
je
lret
push
hlt
pop
rorl
subb
add
das
jecxz,pt
xor
gs
push
mov
pop
leave
inc
xchg
icebp
push
or
test
jmp
xchg
xchg
int
pop
sub
xor
jnp
or
jnp
and
rolb
cmp
xchg
repnz
addl
or
sahf
lcall
dec
imul
outsl
add
test
mov
movsl
insl
and
int3
insl
int3
jmp
push
jge
cld
or
lds
leave
xchg
add
cmp
or
jmp
mov
sub
daa
aaa
xchg
leave
fists
hlt
adc
data16
sbb
jae
add
mov
sub
mov
mov
jmp
pop
fxch
in
repnz
ds
fnstsw
sbb
outsl
cmc
aad
sbb
inc
les
popa
les
jp
xchg
xchg
sub
jp
imul
aad
jno
sbb
ror
ljmp
bound
xchg
sarb
pop
or
or
sbb
or
sbb
pop
sbb
aad
mov
push
fld
sbbb
dec
or
ret
aas
inc
mov
cltd
aas
aam
jp
push
aaa
bound
sbb
jae
insl
aas
xchg
and
pop
mov
xchg
sbb
pop
test
insb
lcall
in
pop
mov
or
pop
addb
psubd
jl
ret
pop
mov
push
cld
stos
cwtl
push
mov
push
or
stos
test
add
pop
xor
inc
ficomps
std
fdiv
nop
xor
mov
loopne
sbb
push
mov
sbb
js
inc
mov
cmp
out
jno
pop
arpl
cld
inc
je
fisubl
cmp
sub
push
cs
roll
fsubrl
mov
xchg
test
and
bound
jecxz
js
mov
xor
and
imul
add
jb
inc
mov
inc
aad
outsl
push
lock
or
jbe
and
jae
xchg
rorl
sub
sub
xchg
mov
xor
jl
pop
xchg
pop
rolb
push
je
nop
xchg
push
xchg
addr16
shlb
jp
mov
outsb
dec
pop
cltd
mov
data16
mov
pop
xor
lds
fsubp
sub
shrb
or
inc
adc
inc
cmp
cli
xchg
pop
xor
and
mov
rol
jmp
mov
lock
and
push
push
mov
cmp
cmp
adc
xchg
mov
push
xchg
movsb
ja
mov
jmp
test
mov
frstor
test
xor
inc
mov
push
mov
adc
add
adc
ljmp
pop
and
les
arpl
andb
stc
fdivrs
fistpl
loop
shrl
dec
bound
mov
lcall
jns
out
xchg
frstor
ljmp
aad
xor
inc
scas
mov
xor
clc
cmp
and
jnp
mov
call
stc
shll
jp
xchg
fs
mov
cltd
mov
or
adc
dec
pop
jle
andl
dec
lahf
loop
fwait
lret
cltd
ja
mov
movsb
xor
inc
xor
push
aam
scas
sbb
aam
fistps
loop
hlt
inc
aam
out
inc
movsb
inc
popa
mov
mov
incb
pop
add
lahf
aam
fs
cmp
pop
das
imul
xor
dec
ret
lock
sub
mov
fldt
pop
jg
mov
iret
fcmove
mov
daa
roll
sti
loop
cmp
dec
repz
add
push
sti
lds
cmp
jmp
lahf
pop
add
stos
pop
push
into
sub
mov
gs
pop
inc
dec
lcall
stc
mov
rol
pop
mov
js
push
lea
dec
adc
popa
lock
sbb
les
sub
gs
jp
cmp
cmp
sub
ss
iret
mov
jecxz
cli
cmpsl
das
mov
mov
push
push
arpl
and
test
lods
pushf
movsb
ss
xchg
xchg
out
inc
imul
add
jne
xchg
popw
mov
dec
subb
pushf
dec
lret
cs
xchg
fwait
or
aaa
and
mov
ret
nop
popa
pop
cmp
mov
mov
pusha
fs
data16
fadd
and
jns
neg
shlb
pop
mov
imul
mov
add
inc
mov
les
push
add
das
sbb
inc
add
nop
orl
stc
sub
adc
repz
call
sub
fwait
add
mov
stos
sub
push
test
mov
push
sub
adc
pop
adc
daa
pop
pop
push
inc
jge
mov
aas
or
mov
in
cmp
es
push
fisubrs
push
adc
in
loopne
mov
mov
cmpsl
sub
sub
inc
push
lods
cmp
nop
pushf
adc
mov
into
add
xor
pop
flds
mov
and
cwtl
mov
push
sub
dec
fildl
rorb
fistl
dec
mov
pop
sub
and
imul
jg
in
push
roll
into
lods
mov
xchg
jno
push
ret
mov
lods
int
xchg
faddl
adc
ljmp
xor
js
adc
mov
dec
inc
xor
pop
test
sub
xchg
push
push
sub
mov
cmp
ds
roll
out
lods
add
test
and
cmp
cmp
dec
adc
inc
mov
in
inc
jae
cwtl
ss
in
pop
fldcw
cmp
icebp
mov
jne
movsb
sub
jbe
dec
sub
dec
xor
sub
int
pushf
clc
cld
popa
stc
aam
sahf
aam
ucomiss
mov
cmpsl
fstpt
test
ljmp
add
and
movsb
xchg
outsl
fisttpll
fidivrs
inc
aad
scas
int
mov
clc
xchg
fidivl
sub
test
pop
add
into
in
mov
jmp
jo
fisttpll
sbb
std
xor
add
or
and
test
lds
jno
jno
sbb
sub
popf
adc
jae
mov
mov
mov
adc
mov
xchg
pusha
dec
pop
leave
push
loopne
into
mov
and
push
ss
fdivrs
sub
xor
scas
jecxz
lea
out
in
pushf
imul
notb
gs
push
adc
stc
cmp
ret
daa
test
push
xor
lret
and
push
and
testl
mov
in
test
mov
shl
pop
adc
xchg
scas
fnstenv
and
and
outsl
maxps
add
pop
dec
lea
mov
xor
pop
sub
cmpsb
add
in
dec
mov
xchg
divb
inc
mov
dec
adc
pop
test
jns
push
clc
sub
cmp
cmpsb
mov
sbb
push
ss
xchg
sub
js
xor
inc
fisubs
cmpsl
pop
xor
jb
lcall
test
jmp
repz
idivl
xor
ss
push
out
mov
cmp
sub
mov
iret
mov
bound
fstps
cmp
scas
loopne
subl
add
sub
push
xor
inc
das
fisttpl
cmp
iret
idivb
cmp
lcall
push
icebp
lods
scas
adc
ret
jb
mov
mov
daa
and
and
cmp
lock
test
rolb
dec
pop
sarb
mov
mov
mov
mov
jne
mov
cwtl
mov
pop
cmp
mov
dec
in
fdivrp
mov
pushf
dec
jo
ficomps
out
imul
cmpsb
and
mov
incb
stc
test
pop
je
scas
sbb
xlat
ds
sti
insl
or
xchg
sub
aam
mov
bound
mov
aam
xchg
ds
and
push
sbb
fdivr
push
rcrl
add
inc
jne
fwait
stos
mov
push
sbb
push
das
adc
popa
xlat
add
andl
mov
into
sbb
xchg
ficoms
cmpsb
fdivrl
cltd
mov
mov
es
mov
mov
jnp
fsubl
fcmovbe
nop
xchg
or
xchg
neg
sub
ja
push
gs
aas
adc
or
addr16
sahf
adc
sti
xor
sahf
push
call
cmp
ret
mov
test
leave
cmpsb
adc
aaa
dec
push
adc
inc
fs
pop
adc
rclb
cs
cmp
add
loope
adc
mov
sub
push
push
mov
xchg
pusha
jecxz
dec
and
mov
ds
addr16
insb
mov
jp
pop
sbb
mov
dec
jbe
in
mov
aaa
or
mov
push
xlat
add
mov
dec
pop
dec
add
mov
mov
mul
insl
mov
ss
mov
jg
lods
inc
lods
lret
insb
add
fbld
scas
mov
in
ljmp
pop
push
pop
sub
ret
mov
clc
mov
push
cwtl
pop
xchg
sub
in
ds
jg
data16
cmpl
out
popf
leave
xchg
lea
das
inc
or
testl
and
xchg
sbb
incl
leave
xor
lds
pop
mov
icebp
fcomi
jecxz
mov
test
cmp
dec
jg
insb
inc
adc
cmp
scas
iret
cmp
xor
inc
or
add
cwtl
sbb
sub
testl
leave
pop
cwtl
addr16
incb
push
or
xor
mov
mov
ds
mov
daa
push
stc
xor
and
inc
les
sub
sub
or
add
adc
nop
inc
mov
mov
jp
push
and
cmp
pop
hlt
dec
jle
fwait
jmp
push
scas
test
mov
insb
jge
add
pop
sbb
and
mov
push
mov
test
in
jmp
mov
imulb
es
popf
push
pop
dec
repz
push
loopne
jno
adc
aas
mov
testb
mov
inc
push
add
ret
inc
imul
push
in
push
and
dec
xchg
xchg
call
dec
cmpsb
sahf
das
pusha
pop
out
shl
xchg
push
inc
sbb
cmpsb
loope
loope
xchg
mov
mov
xor
jp
dec
mov
push
jl
xchg
mov
enter
and
cwtl
pop
dec
cmpsl
add
xchg
or
xor
sahf
push
rcrb
xchg
adc
pop
pop
hlt
or
jge
outsb
jp
add
sub
dec
repz
inc
hlt
and
jns
enter
ret
icebp
push
ret
sub
stos
rcrb
pop
sbb
std
je
push
add
je
ret
cld
fisttps
out
push
jg
bound
enter
aam
insb
cld
cs
add
adc
cld
push
rclb
add
xchg
and
jl
pusha
lods
scas
xor
dec
ja
hlt
insl
and
lock
or
or
add
cmp
mov
mov
pop
and
fsubs
push
cmp
add
or
cli
addr16
sti
divl
loope
pop
cmp
or
movsl
push
add
xchg
sub
lcall
push
adcl
out
cmpsl
mov
addr16
aad
std
les
pop
inc
mov
mov
outsb
in
gs
adc
lods
mov
sbb
sbb
cs
jl
popf
fwait
aaa
mov
dec
movsb
mov
mov
cmp
stc
push
inc
loopne
and
aad
mov
mov
and
mov
cmp
push
call
ds
fildll
cmp
jmp
out
push
ljmp
insb
jno
pop
push
jmp
dec
lret
aam
xor
aam
jl
aam
lods
adc
jg
bound
test
addb
in
or
addr16
fistpll
and
frstor
repnz
pop
pop
dec
lcall
xorl
hlt
mov
jle
push
cs
sahf
mov
lret
xor
cmp
bound
dec
sbb
bound
and
fcmove
xor
add
movsl
mov
mov
pushf
dec
mov
icebp
dec
xchg
push
or
bound
arpl
jl
fidivs
or
lds
cmp
movsb
pusha
mov
stc
push
and
pop
arpl
stos
sub
cli
in
sub
cmc
inc
inc
rorl
lret
fsubs
sub
push
popa
cmp
jge
lea
or
pusha
andb
mov
push
adc
jp
enter
divb
daa
lcall
pushf
push
xchg
aam
sub
mov
xlat
sbb
pop
ret
jns
xor
mov
rorb
adc
leave
and
cmp
popf
popf
shl
mov
fdivl
mov
adc
rorb
xchg
sbb
mov
xchg
pop
pop
aam
xchg
je
xor
insl
xchg
fiadds
enter
inc
xor
push
xchg
cmp
xchg
cmp
ret
mov
inc
outsl
int
ljmp
and
pop
sbb
mov
pop
add
data16
push
adc
cld
cmc
ds
fldz
push
bound
push
not
scas
fwait
mov
clc
cmpsl
adc
sti
adc
shll
or
test
popa
push
imul
mov
out
adc
adc
cs
jno
jo
jae
negb
nop
rolb
xchg
xlat
pop
ss
popf
mov
xor
xchg
adc
pop
jmp
jbe
mov
mov
in
mov
cmp
daa
out
mov
adc
mov
and
push
or
jmp
insb
xlat
iret
mov
out
les
mov
rcl
outsb
in
push
sarl
aaa
or
add
jb
div
movsl
mov
mov
xchg
fst
push
add
xor
add
test
sub
jg
add
imul
popf
jecxz
cwtl
fsubl
loop
pushf
imul
pusha
jb
test
lods
adc
rol
cwtl
inc
add
push
jae
mov
std
inc
test
jnp
aam
ret
jne
or
push
mov
cmpsl
pop
loope
fldenv
dec
mov
mov
pop
scas
adcl
stc
rcrb
insl
pop
jb
divb
mov
cmp
or
push
jle
out
ja
ret
mov
mov
fsubs
inc
adc
inc
xor
adc
or
or
jae
cmp
mov
push
lahf
jecxz
repnz
push
iret
test
fdivl
enter
popa
sti
shr
jg
mov
xchg
subb
push
adc
sub
xchg
fisubl
push
add
scas
mov
and
push
insl
inc
out
shrl
xlat
push
in
nop
popa
push
push
testl
dec
insl
jo
mov
cmp
in
inc
jl
jl
roll
dec
sbb
inc
jmp
or
ljmp
stos
pop
xlat
pop
imull
inc
repz
ja
lock
xor
movsb
movsl
movsl
out
popa
test
jne
loopne
jb
roll
sbb
outsb
mov
js
adc
inc
inc
insl
aaa
shrl
pop
shrb
fnsave
add
in
mov
dec
or
stos
mov
sbb
mov
gs
jno
cwtl
cmp
clc
push
inc
shll
jecxz
mov
clc
shrb
scas
mov
test
jns
iret
js
nop
mov
mov
orb
jb
enter
xor
fsubrl
clc
sbb
stos
pop
pop
mov
pop
repnz
lock
push
and
arpl
shrl
dec
fstp
aaa
xor
and
adc
lds
cmp
lret
pop
adc
outsl
jne
mov
jecxz
in
push
lds
loope
cmp
jmp
mov
aam
adc
lds
dec
prefetch
mov
cmp
insl
popf
pop
xchg
mov
aad
sub
mov
imul
mov
pop
scas
or
rcll
shlb
test
ret
pop
cmpsl
push
sub
inc
int3
push
xlat
notl
fiaddl
xchg
pop
es
dec
push
mov
push
test
les
mov
lret
movsb
outsb
les
xchg
mov
inc
aad
ret
lods
fs
cmc
rorb
jecxz
sub
sbb
push
sub
stos
hlt
or
inc
mov
jne
xlat
cs
nop
pushf
orl
aaa
leave
and
sub
xchg
add
iret
in
out
sbb
cwtl
gs
and
loope
iret
cmp
inc
xchg
fdivs
cmp
jp
inc
pusha
xchg
movb
inc
sti
lahf
cmc
cs
jmp
jle
or
jae
shl
adc
cmp
or
push
adc
jp
js
or
arpl
into
enter
pop
jecxz
sahf
or
or
iret
sub
int
and
inc
push
sbb
negb
loopne
int3
xchg
call
ret
cmpsb
push
xorl
clc
or
jae
add
hlt
cld
repz
adc
or
cld
lea
es
inc
push
push
mov
push
inc
cmp
sub
push
int3
mov
add
sbb
das
std
scas
test
out
xchg
pop
dec
data16
clc
daa
pop
nop
ljmp
xor
mov
cvtps2pd
push
in
icebp
jae
push
dec
sbb
add
dec
ret
repnz
or
rorl
jmp
outsb
sbbb
pop
pusha
scas
sbb
dec
adc
push
idivb
fwait
out
jg
or
xor
inc
test
repnz
in
and
adc
add
inc
or
adc
xor
jmp
pop
inc
cmp
aad
mov
mov
in
cmp
adc
in
movsb
mov
add
fsubl
jno
xchg
data16
push
iret
mov
incl
mov
popf
sub
stc
and
inc
xchg
pop
mov
outsb
or
mov
and
mov
nop
call
loope
mov
jne
mov
ja
pushf
out
xchg
adc
jge
push
pushf
fstl
ljmp
ss
fcom
cwtl
leave
jle
pop
xchg
sbb
ja
add
dec
mov
pop
dec
in
pushf
rclb
push
jle
repz
negb
std
sbb
insl
in
xchg
xor
imul
dec
push
lds
cmp
loope
push
test
xchg
push
push
out
inc
add
enter
ds
and
and
xchg
int3
xchg
ret
xchg
clc
mov
sub
insl
leave
in
insb
xchg
and
jmp
or
and
dec
adcb
mov
push
cmpl
cmp
push
call
mov
pop
push
shr
adc
or
or
mov
xchg
adc
mov
mov
pop
adc
mov
outsl
inc
sbb
mov
and
push
mov
pop
cmpsb
push
add
push
into
and
loope
pop
add
les
in
test
jg
fsub
daa
dec
aad
xchg
in
or
inc
sbb
rol
inc
loope
arpl
xchg
push
jl
mov
sbb
popa
lcall
cmpl
lcall
jno
insb
adc
aaa
into
sub
sbb
jl
stc
sub
or
je
adc
jg
inc
xor
je
imul
sub
mov
repnz
xor
outsl
mov
jp
mov
cmp
imul
test
xchg
push
push
push
xor
inc
fmull
andb
jle
sarl
movsl
mov
fistpll
fs
js
xchg
mov
pop
xlat
fs
inc
push
cltd
jo
call
adcb
pop
jb
stos
in
push
iret
mov
aaa
scas
mov
push
lods
in
sbb
icebp
inc
xor
pop
pop
lahf
or
dec
dec
ds
push
jecxz
jp
cmp
sbb
lcall
lods
aas
in
inc
sbbl
dec
aaa
int3
push
icebp
push
lock
in
mov
inc
xchg
pop
and
cli
adc
xchg
es
mov
cmp
dec
loope
test
enter
repz
jge
fisubl
fs
icebp
push
lret
sbbb
jno
cmpsl
fnstcw
mov
pop
mov
lret
push
lahf
sbbb
mov
lret
iret
popf
jo
mov
xchg
pop
popf
pop
xor
add
dec
shr
mov
xor
xor
lret
push
imul
mov
inc
and
cs
inc
or
xor
sbb
cmp
pop
add
add
or
inc
lret
aam
pop
pop
lods
cmp
and
and
sub
lahf
mov
mov
mov
ss
jns
lea
pop
mov
cmp
test
clc
mov
xchg
addr16
int
pop
ljmp
and
aaa
mov
es
push
xor
mov
ss
or
pop
push
dec
jbe
lcall
outsl
scas
pop
mov
xor
or
mov
je
mov
je
out
push
adc
mov
pop
push
int
cmp
add
sahf
dec
pusha
push
movsl
mov
rcr
mov
in
push
arpl
pop
arpl
addb
inc
shlb
push
cmpl
repz
add
inc
inc
into
add
enter
aam
inc
xor
and
test
cmc
mov
into
call
out
loopne
js
stos
xchg
inc
pop
hlt
aam
mov
sahf
adc
in
add
jge
cmpsb
pushf
mov
sub
dec
mov
add
and
addr16
xorb
in
aas
das
xchg
jno
icebp
mov
or
dec
fnstsw
mov
leave
dec
and
data16
repnz
dec
pop
cmpsb
jge
sar
mov
mov
loop
out
xchg
testb
call
sti
mov
push
sub
lahf
lret
or
or
stc
sub
mov
cmpb
push
jg
push
popf
xor
mov
stos
dec
push
sub
out
dec
lds
or
stos
je
iret
mul
sbbb
arpl
cmpb
stos
sub
mov
inc
jmp
test
leave
out
sbb
fadds
es
mov
mov
ror
rorb
jnp
gs
sbb
pop
inc
mov
lcall
lock
outsb
jl
xchg
dec
cmp
xchg
rorb
pop
xchg
lret
leave
add
inc
sbb
push
add
adc
cwtl
mov
fdivs
mov
lock
nop
xor
ja
fistps
sub
or
xchg
scas
add
shl
or
iret
arpl
add
roll
jp
mov
sti
add
shll
and
iret
mov
lahf
add
jmp
xorb
cmp
lret
lods
rcrb
inc
jg
iret
push
xchg
push
dec
dec
push
xor
movsl
jl
mov
jmp
inc
add
or
push
mov
push
push
and
movsl
xchg
call
mov
sub
push
pop
cmp
stos
or
outsb
cmp
popf
ljmp
loope
ds
fnstsw
xchg
adc
add
pop
enter
push
mov
push
es
push
pop
xor
daa
dec
cmp
gs
scas
fsubrs
sbb
arpl
add
adc
dec
ss
xlat
add
push
inc
inc
not
sub
jl
and
gs
pop
sahf
lods
or
test
aaa
sub
je
xor
sti
and
sub
lret
mov
sub
sub
push
invd
shlb
mov
ja
cld
push
add
mov
pushl
je
daa
insl
mov
push
sbb
dec
pop
dec
push
mov
pop
daa
cli
fbld
xor
test
push
mov
sbb
jns
inc
cwtl
add
or
cmp
pop
subw
xchg
push
cmpsb
sub
push
int3
xor
add
jne
mov
mov
rcll
jl
popf
mov
repz
fs
dec
xchg
int3
fisubrs
cmpsb
mov
imul
dec
mov
adc
sahf
push
test
in
outsb
test
jb
rcll
fmull
sub
int
sub
xchg
mov
sbb
pushf
mov
ja
ljmp
leave
cmp
shrb
out
and
js
xchg
enter
pop
push
push
adc
ficomps
pop
rcr
mov
jae
icebp
shr
stc
out
scas
lods
sbb
inc
cmpsb
xor
sbb
lds
pop
andb
test
cmpsl
test
mov
leave
test
xchg
pop
ret
xor
mov
rorb
xorl
pop
enter
loopne
call
jb
icebp
loopne
jecxz
decb
push
push
cmpsb
sbb
imulb
and
call
lcall
cmp
mov
out
icebp
cli
pop
loop
mov
xchg
in
shlw
lahf
sub
mov
negl
add
jge
ss
add
std
lock
xor
or
bound
mov
loope
hlt
mov
xchg
adc
fimuls
pop
data16
and
adc
aaa
xchg
mov
imul
or
xchg
dec
movl
mov
aas
pop
mov
add
scas
xor
lods
mov
xchg
outsl
scas
pushf
insl
mov
mul
leave
hlt
fwait
mov
or
mov
pop
pop
stc
mov
cmp
popf
xor
add
int3
xchg
add
mov
dec
arpl
test
cmp
mov
shlb
je
sahf
adc
xchg
test
sarl
dec
adc
mov
pop
insl
enter
add
sbb
je
and
in
daa
xor
aad
flds
bound
add
pop
fdivrl
and
or
push
movsl
pop
arpl
push
inc
mov
test
adc
dec
dec
mov
pop
fildll
fistpl
push
sub
mov
test
push
mov
adc
add
add
ja
cmc
mov
jle
sti
inc
adc
fnstcw
repz
test
int
pop
dec
sbb
push
add
addr16
or
dec
add
push
jecxz
or
xchg
popa
xchg
jg
scas
scas
dec
loopne
ljmp
enter
cmp
xchg
pop
fidivrs
mov
add
inc
xchg
jne
or
and
sbb
jbe
pop
inc
ljmp
lea
cmp
lock
jecxz
outsb
lods
push
outsl
mov
out
push
aaa
imul
jp
in
sbb
dec
mov
sub
decb
and
push
cmp
pop
sub
pop
mov
push
out
pop
pop
xor
punpckhbw
addr16
and
mov
push
pop
dec
mov
add
jl
adc
sub
cmp
repz
push
push
jg
rorl
jmp
mov
imulb
mov
clc
std
cltd
dec
and
shrb
mov
inc
idivl
loopne
iret
addb
dec
mov
test
jmp
addr16
mov
push
lods
mov
stc
leave
cmp
lock
xchg
pusha
xchg
js
mov
push
call
push
add
lods
jg
arpl
add
rcl
jp
sbb
sbb
dec
stos
enter
lods
inc
arpl
adc
xor
add
mov
iret
aas
jne
or
pop
out
sbb
outsb
sub
adc
addl
subb
and
outsl
push
or
mov
lods
in
cmp
xchg
fxch
mov
mov
cmpsl
jnp
cltd
and
inc
pop
pop
stc
sbb
popf
imul
insb
sti
mov
add
mov
ljmp
lods
and
popf
inc
mov
popa
dec
add
pop
es
lock
loope
mov
hlt
mov
shlb
ss
cmp
inc
and
pop
xchg
insl
insl
loopne
jns
adc
push
push
jg
mov
sub
enter
sbb
pop
div
loopne
in
push
test
push
mov
mov
adc
xchg
arpl
or
cli
outsb
mov
ja
or
pop
les
aas
fmulp
cmp
jo
clc
mov
pop
push
dec
adc
or
push
shrd
sbb
dec
add
or
xchg
and
data16
mov
test
pop
mov
fimuls
repz
scas
imul
sbb
push
sub
lods
or
mov
mov
add
jg
push
ret
sbb
jg
xor
test
xor
loop
fwait
data16
cld
pop
cmp
cmp
out
push
ds
push
or
inc
mov
cltd
popa
lret
cmp
shlb
jl
shrb
xchg
dec
inc
add
pop
dec
mov
je
rcl
into
lea
fimull
pusha
jno
lret
jb
add
das
mov
mov
or
rclb
pop
mov
mov
lcall
mov
frstor
es
out
push
mov
cs
xchg
sbb
mov
jne
cmp
fisttpl
lods
add
shr
xchg
sub
lds
int3
sbb
das
lock
jbe
std
dec
pop
cmp
jb
push
fldl
outsl
popf
dec
fstl
mul
sbb
mov
test
sub
js
fbld
cmp
out
fcmovne
loopne
dec
insb
stc
push
cmp
movsl
ficompl
inc
cld
outsl
mov
fnstcw
jne
add
lret
test
mov
test
sahf
dec
xor
cltd
cmpsl
push
stc
jnp
cwtl
cld
sbb
loopne
mov
cmpsb
mov
inc
pop
fistpl
enter
sub
fisttps
out
in
adc
and
cmpsl
mov
pop
testb
movb
cmovg
push
lret
imul
aaa
sub
push
sbb
scas
inc
dec
stos
test
adc
inc
outsb
std
scas
adc
pop
out
scas
mov
jecxz
mulb
cmpsl
ret
icebp
xor
je
outsb
xchg
push
test
ret
imul
mov
imul
push
pop
sbb
movsl
adc
pop
jno
add
test
pop
cmpsb
unpcklps
jo
mov
mov
daa
lahf
out
pop
dec
in
fildl
inc
cmpsl
sbb
pop
ror
int
mov
xchg
popa
test
cli
nop
fistl
enter
xchg
leave
xlat
js
pop
in
mov
sbb
dec
push
sub
cmpsl
repnz
dec
sub
or
mov
cli
je
ret
sub
jg
inc
aad
lods
push
mov
pop
mov
pusha
stc
jno
out
jl
xor
sbb
test
in
add
sbb
push
ret
pop
xchg
pop
popf
and
push
in
mov
add
mov
lahf
xlat
mov
mov
stos
xchg
jns
xchg
lds
call
movb
rolb
mov
adc
testb
pop
or
jne
jns
sbb
sbb
iret
adc
clc
pop
scas
lock
inc
jp
mov
mov
shlb
arpl
adc
xor
fidivrs
mov
fs
and
outsb
inc
rcr
stos
fisubrl
pushf
and
add
push
filds
sti
mov
pop
push
adc
jle
or
xlat
jns
das
test
push
pop
iret
push
fisttps
outsb
jne
mov
mov
adc
in
add
inc
shlb
loopne
out
cmp
mov
or
ds
test
aaa
pop
push
dec
xchg
pop
notl
pop
and
push
aam
pusha
int
faddl
cmp
mov
les
jae
xchg
adc
xchg
sub
push
test
fcomps
mov
xor
and
inc
faddp
insl
outsl
dec
int
sub
sub
add
fwait
sub
jne
lret
add
loopne
cld
test
lods
and
mov
and
movsl
testl
push
jg
mov
loope
or
daa
repz
int
shlb
adc
popa
js
mov
xor
popa
sub
in
cmp
mov
or
movsb
pop
fwait
adc
mov
fisttpl
cmpb
imul
jno
cmp
xchg
push
or
push
inc
outsl
mov
jmp
add
xlat
data16
sbb
je
mov
jno
push
sub
sbb
ljmp
mov
aas
ss
add
inc
cld
xchg
in
mov
clc
rcll
adc
xchg
shlb
sbbb
daa
mov
pop
lods
je
cltd
das
jmp
mov
jns
clc
imul
xor
jbe
inc
out
lods
jl
icebp
stos
addr16
add
insl
loope
dec
shll
xchg
jmp
jo
xchg
sbbb
mov
push
fs
lcall
nop
shlb
jbe
test
lcall
mov
cmc
pop
adc
ljmp
mov
test
mov
gs
int3
das
popf
add
mov
dec
pop
int
and
leave
js
cwtl
and
dec
xchg
sbb
cmpsb
iret
and
jecxz
pushf
test
inc
test
mov
repnz
adc
std
shr
sbb
out
xchg
cwtl
xor
inc
dec
cld
mov
or
pop
aam
ja
pop
out
push
out
sbb
mov
iret
mov
adc
unpcklps
pop
test
testl
call
or
hlt
mov
scas
sub
stos
imul
lds
loope
notl
stos
mov
push
jl
mov
pop
enter
inc
push
jae
add
sbb
mov
and
lods
jge
mov
mov
and
jmp
jbe
insb
imull
pop
cmp
aas
int3
fimuls
inc
adc
in
pushf
or
cli
add
jle
mov
or
push
pop
cli
pop
and
pop
addb
inc
add
jno
int
jbe
xor
push
dec
in
cmp
lret
xchg
mov
mov
lods
out
or
jp
cwtl
std
adc
adc
pop
jbe
push
cmpsl
dec
mov
rcl
xchg
int3
es
inc
xchg
mov
and
inc
dec
sub
clc
test
dec
and
nop/reserved
lret
leave
pop
jae
dec
or
shl
popf
mov
les
aas
fwait
sarb
xchg
inc
pop
mov
cs
cld
mov
insl
ficoms
push
mov
pusha
mov
divl
call
dec
popf
and
hlt
xlat
jl
fwait
dec
loopne
xchg
xor
xor
and
pop
je
jo
push
andl
or
mov
addr16
cmp
lods
adc
pop
lds
dec
aaa
sahf
push
push
das
cli
pop
sbb
aad
xchg
out
push
xchg
mov
shl
adc
in
pop
imulb
add
and
sti
lcall
pop
js
add
into
sbbb
ja
xchg
mov
in
imulb
repz
pop
inc
roll
pop
push
mov
mov
rol
pop
or
fidivl
inc
into
inc
mov
or
cmc
sbb
cmp
and
cld
adc
sahf
iret
and
popf
iret
testb
push
sti
mov
int
inc
lods
btsl
pop
into
mov
xchg
cmpsl
adc
les
movb
insl
or
mov
xchg
loop
aad
xlat
aas
inc
imul
shl
out
lcall
hlt
int
movsl
ljmp
das
push
rclb
outsb
mov
stos
inc
into
iret
and
mov
nop
inc
sbb
cmp
xor
push
stc
mov
mov
adc
cmpsb
in
insb
jno
mov
push
sbb
sub
scas
adc
inc
addr16
xchg
in
addl
dec
pop
aas
fisubs
cmp
pop
or
inc
and
js
js
adc
add
int3
fiaddl
bound
add
lods
xlat
sub
jbe
dec
mov
mov
testb
xor
in
jp
fs
jae
into
ret
clc
repnz
frstor
test
insl
fiadds
pop
flds
std
xor
into
xchg
push
cld
scas
xor
in
sub
jmp
cmpsb
insb
iret
adc
popa
rorl
jl
xor
jecxz
mov
sbb
sbb
imul
xchg
push
icebp
push
jmp
sbb
cmp
jg
adc
data16
mov
and
mov
orb
js
jl
jg
jo
cmp
or
jge
jno
inc
xchg
xor
orl
in
push
out
push
lods
scas
cs
aas
and
out
pop
lret
sub
filds
mov
lods
add
scas
clc
mov
xchg
mov
aam
xchg
fs
xchg
bound
pop
push
xchg
dec
adc
xor
mov
mov
out
test
out
dec
pop
gs
test
push
cmp
sub
mov
and
lea
repnz
clc
adc
movsb
fsubrs
stos
inc
xchg
daa
pop
fwait
mov
push
add
nop
pop
das
imul
jnp
jno
dec
and
movsb
xchg
ja
int3
dec
scas
fnstcw
ljmp
lock
into
sti
lret
jbe
xchg
in
push
mov
loop
arpl
pushf
mov
mov
sbb
jge
movsb
or
mov
lret
mov
out
roll
call
mov
mov
in
mov
js
lds
outsb
push
inc
ds
sub
rorb
add
jnp
mov
and
cmp
test
push
std
jb
xchg
pop
mov
addr16
mov
jle
stos
xor
out
dec
mov
xor
adc
xchg
sbb
push
repnz
push
push
cld
sbbl
mov
pslld
inc
or
xchg
movsl
inc
data16
inc
imul
in
xor
subb
sub
inc
stc
stos
nop
subb
mov
std
inc
push
imulb
or
js
jp
xchg
mov
ss
ret
cmpsl
dec
xchg
push
stos
jp
push
test
movsb
icebp
stos
rorl
cs
push
jecxz
xor
mov
xchg
sar
aam
and
cmp
jne
or
sub
arpl
inc
or
lcall
push
cmp
lret
int3
bnd
dec
xchg
test
scas
mov
sbb
out
sub
cwtl
lcall
scas
cmp
push
call
sar
push
in
sti
inc
stc
jb
pop
or
xor
cmp
push
xchg
mov
mov
adc
jg
lret
jne
fstpl
ss
pop
or
orl
ss
rcrl
xchg
jnp
sbb
mov
mov
subb
mov
or
inc
mov
inc
and
icebp
mov
cwtl
xor
sub
in
sub
out
push
push
add
daa
adcl
stos
rorb
push
ret
mov
leave
add
mov
push
stos
push
in
pop
jmp
fstl
lcall
sarl
scas
in
mov
ror
in
arpl
rorl
push
add
mov
lcall
fsubrs
add
and
in
jns
in
add
testb
cli
rorb
lret
hlt
mov
xorl
xlat
jle
dec
hlt
xchg
popf
mov
sub
insl
scas
sub
imul
pop
mov
ret
stos
insb
sbb
jne
adc
aaa
movsl
xor
sbb
or
xor
nop
fcompl
lret
daa
dec
scas
mov
fidivrs
mov
add
sbbb
stos
dec
test
lfs
std
nop
jne
daa
and
mov
pusha
or
jp
subb
add
pusha
sub
cmpsb
push
pop
xor
sbb
or
sbb
inc
lea
pop
jb
push
xchg
add
fmulp
push
or
push
jb
les
iret
mov
outsb
call
data16
push
aaa
and
out
das
addb
popa
adc
cld
scas
shrb
lods
adc
jle
gs
cltd
cltd
cmpb
in
fwait
out
sbb
dec
add
std
xor
neg
ret
sbb
and
clc
or
call
cld
and
jg
out
add
cmp
xor
lea
les
xchg
mov
rclb
shl
jg
lock
aam
add
insb
fisubs
add
xchg
icebp
es
stos
pop
xor
mov
test
add
push
push
add
dec
xor
scas
push
ret
and
inc
outsl
sbb
adc
jmp
mov
nop
mov
imul
sar
pop
std
mov
mov
mov
mov
orb
or
push
imul
enter
and
cwtl
push
aaa
scas
sbb
dec
sahf
out
xor
ret
cmp
pop
cmp
shll
mov
xor
jge
es
sbb
test
into
mov
push
sub
fldt
pop
das
sub
adc
dec
pop
fs
xor
bound
mov
jp
mov
imull
lods
xor
scas
mov
sti
cmc
loop
movsb
jp
push
xchg
pop
jge
mov
dec
jp
cmp
pop
inc
ret
mov
xor
cs
out
mov
insb
jne
gs
mov
cli
inc
outsb
outsl
fstpt
xor
lret
cmp
mul
inc
arpl
push
adc
pusha
sbb
pop
push
jae
jns
pop
sbb
jecxz
cmp
ret
or
les
and
gs
sub
adc
mov
mov
rcrl
aam
cmpsb
popa
popf
test
and
mov
lods
cmp
loop
call
lock
loopne
mov
imul
add
sbb
xor
nop
pushf
bound
adc
in
out
outsb
pop
cmpsl
cmp
sbb
lods
nop
jp
xor
addr16
outsl
xchg
dec
adc
xchg
inc
xor
movsl
add
inc
push
adc
dec
cmpsl
push
inc
insb
rorl
dec
jno
out
dec
dec
xchg
jns
push
cli
cmpsb
mov
lods
call
scas
hlt
add
into
lea
loopne
movsl
stos
call
lret
mov
out
sub
mov
addl
mov
sub
aaa
sub
cmp
pop
das
sbb
pop
push
pop
pushf
add
pop
jo
loope
shlb
jmp
xchg
je
out
jb
fisubs
jmp
lret
pop
es
push
int3
or
mov
lcall
xchg
pop
inc
cmp
inc
cmp
push
pop
jbe
mov
add
push
or
add
add
insb
movsb
cli
mov
xchg
out
sbb
paddq
out
in
stos
cmp
hlt
fwait
jmp
addr16
mov
push
push
ret
xor
shlb
aam
sti
xchg
push
push
cld
mov
mov
pop
mov
mov
lahf
scas
sti
dec
movsl
sbb
addr16
imul
sahf
adc
sti
scas
mov
test
in
mov
pop
and
loope
lods
adc
popf
inc
dec
pop
dec
xchg
dec
xorl
arpl
stos
cmp
or
cmc
in
adc
jecxz
loopne
inc
repnz
xchg
add
adc
out
lock
fildll
aam
aas
mov
leave
shl
std
jb
or
je
int3
and
and
sarl
ret
pop
scas
push
shll
nop
mov
mov
int
or
pusha
adcl
pop
into
adc
xchg
out
popl
cltd
andb
out
or
movaps
mov
aam
and
sub
cli
or
and
call
jbe
lock
js
xchg
jl
xor
ljmp
jmp
add
pop
popf
inc
mov
mov
out
daa
out
or
enter
push
push
sub
ds
xchg
jmp
mov
push
fldl
lds
loop
fisubrl
insb
ficoms
push
dec
jno
inc
imul
sarl
repz
inc
fwait
dec
adc
mov
inc
and
js
repz
pop
add
pmaxub
mov
mov
inc
rolb
das
sub
inc
orl
jle
xor
outsb
dec
jp
jg
rolb
test
insb
jge
cld
mov
andl
rcr
orps
push
aaa
scas
push
pushf
push
and
cmp
ja
push
push
nop
outsb
pop
add
popa
or
shlb
mov
push
loopne
lods
cmp
mov
sbb
cmpsl
std
lea
mov
inc
mov
incb
xchg
rcrb
sub
mov
xchg
adc
dec
ret
push
jmp
loope
neg
clc
int
popa
pop
pusha
jb
in
jno
dec
mov
and
jp
flds
enter
sbb
rorl
enter
dec
pop
clc
out
cmc
inc
mov
int
pop
and
test
cwtl
addb
dec
sahf
mov
shrb
jne
sub
xchg
ds
cmp
mov
or
dec
dec
clc
insb
sti
mov
cli
pop
jb
test
aas
push
and
sbb
and
xor
movsb
xchg
test
xchg
xlat
js
lds
push
xorl
out
in
mov
popa
mov
clc
lret
movsl
sti
mov
pop
ljmp
loope
ds
jne
jl
push
js
mov
fs
cmc
sbb
cli
jecxz
popa
inc
mov
dec
push
hlt
scas
xchg
test
icebp
inc
inc
sbb
pop
sbb
xchg
clc
xchg
add
xchg
ja
add
jmp
in
xchg
aas
js
aas
and
sub
xchg
inc
mov
jl
fisubl
inc
jne
push
dec
and
adc
inc
push
pop
cltd
jl
cmp
mov
cli
adc
out
mov
or
stos
pop
out
adc
adc
mov
addl
pop
insl
mov
dec
stc
aaa
and
inc
icebp
dec
testb
xchg
cli
push
in
ret
test
add
orl
xchg
inc
rol
cld
inc
jno
mov
jo
inc
push
enter
lret
xchg
mov
cmp
xchg
dec
push
hlt
push
movsl
push
movsb
lcall
testl
xchg
inc
adc
mov
jge
sti
mov
int3
popa
inc
inc
jecxz
shrl
adc
in
jno
daa
adc
int
movsl
negl
adc
arpl
insl
fsubr
daa
test
bound
fs
out
fsubrs
cs
insb
pop
test
fsubrl
nop
dec
pop
mov
sub
clc
pop
sub
icebp
sub
adc
lods
out
arpl
clc
mov
scas
popa
mov
pop
cmp
andl
jmp
mov
sbb
in
pop
insb
jge
movsb
into
push
inc
or
notl
lret
call
xchg
mov
dec
scas
mov
xchg
fstps
dec
int
scas
pop
dec
cmc
xorb
sti
pop
xchg
iret
jecxz
pop
arpl
fisubl
in
xor
nop
inc
or
andb
and
arpl
pop
jbe
fldenv
xchg
scas
adc
iret
adc
loop
test
jne
pop
cmc
mov
xchg
fidivrl
mov
mov
or
adc
stos
pusha
mov
jp
sub
lcall
xor
loopne
repnz
mov
inc
mov
push
jl
sub
lahf
xchg
mov
push
or
sbb
out
xchg
pop
xchg
mov
mov
insb
jge
mov
dec
leave
xchg
add
rcl
shr
add
subl
addr16
enter
sbb
ljmp
repz
dec
mov
mov
adc
imull
leave
push
xchg
push
data16
adc
or
jne
jne
sub
pop
xchg
in
inc
divb
xlat
mov
outsb
mov
pop
mov
pop
jae
jne
adc
push
cmc
mov
jge
ficoms
gs
xor
icebp
push
outsl
mov
jle
xchg
repnz
movsb
sub
mov
cmpsl
rclb
mov
inc
dec
add
lea
inc
and
mov
inc
loopne
jno
or
pop
icebp
adc
fldcw
ret
adc
mov
orb
mov
fldt
popf
dec
push
cld
popf
mov
push
push
ret
sbb
mov
mov
filds
xor
cmp
cwtl
cwtl
les
mov
aad
xchg
test
std
es
js
mov
pop
loop
movsl
jno
mov
xor
sub
lret
or
mov
cmp
in
les
inc
xchg
cs
int
sbb
adc
pop
mov
sbb
das
stos
xchg
sbb
scas
mov
push
mov
push
mov
in
jl
xchg
mov
cwtl
add
or
and
fmuls
mov
or
sbb
imul
jg
hlt
lods
mov
lea
adc
ficomps
xchg
fadd
jge
pop
sbb
sbb
and
sub
fcmovnbe
cmp
push
aas
aam
xor
sti
sub
pushf
or
mov
insl
mov
lcall
mov
sbb
push
push
dec
pusha
and
into
roll
xor
mov
ror
add
push
inc
enter
fistps
int3
pop
repnz
xlat
mov
fisttpl
stc
insl
adc
stos
or
pushf
and
int3
test
out
jae
xchg
popf
push
pop
and
add
mov
mov
mov
testl
ds
pop
cmp
cmp
stc
repz
mov
insl
sbb
sbb
pop
test
xor
mov
xchg
ss
orl
pusha
arpl
xchg
push
aam
test
adc
out
dec
xor
ds
sarl
stos
popl
add
sahf
shlb
pop
or
loop
fdivrp
bound
inc
xlat
fsubrl
aaa
and
daa
dec
dec
adc
and
orb
scas
xor
fsubrl
in
je
inc
push
mov
jle
addr16
jge
ds
mov
cmc
sbb
xor
mov
jmp
mov
mov
mov
repz
leave
jnp
xchg
lret
les
pop
adc
and
movswl
push
mov
xor
hlt
sub
mov
and
xchg
mov
dec
adc
ja
test
jmp
adc
cwtl
xlat
push
adc
dec
leave
jb,pn
aas
jne
mov
cmp
dec
cli
outsb
inc
adc
sbb
mov
jns
out
in
sbb
cmpsb
inc
in
jp
lret
cmc
jp
daa
insl
push
xchg
mov
ljmp
and
adc
mov
xor
out
in
or
icebp
jno
cmp
out
loope
loopne
push
jb
push
mov
push
or
loopne
ss
shl
cs
dec
xor
fdivl
gs
mov
mov
into
xchg
lods
mov
xchg
aas
inc
das
outsb
mov
dec
loope
sub
inc
sbb
sub
sub
pop
out
mov
and
shll
je
inc
insb
or
ds
sbb
mov
stos
shlb
pop
mov
cmp
push
cmpsb
mov
mov
pop
pop
clc
mov
outsb
adc
cmp
lds
clc
imul
push
mov
stos
lahf
push
push
xor
xorl
shlb
hlt
sub
add
mov
bound
fldcw
stos
mov
adc
jge
out
dec
test
mov
es
cltd
fcompl
inc
xchg
jno
mov
negl
lock
xchg
push
xchg
pop
xor
mov
jbe
insl
sahf
add
dec
pop
loope
xor
xchg
add
xchg
or
push
push
pop
out
inc
sub
xchg
push
cmp
lods
in
shl
das
fmul
mov
push
in
fsubl
cmc
inc
sub
mov
call
mov
cmpsb
lea
inc
addr16
pop
test
mov
insl
mov
add
sub
rcr
aam
outsl
test
mov
bound
cmpsb
fisttps
cmp
jne
daa
jns
popf
add
cltd
shll
adc
push
lea
push
mov
shr
repz
call
sbb
sbb
mov
dec
mov
pop
lea
icebp
mov
ret
or
lods
add
leave
cmp
sub
daa
xchg
pop
imul
push
mov
stc
and
into
push
pop
sbb
or
inc
sub
shl
dec
jle
fdivrp
ficoml
mov
pop
mov
xchg
or
xor
or
stos
popa
ficoml
xchg
roll
mov
jmp
repnz
ja
mov
out
ljmp
lods
pop
dec
nop
fsincos
xor
sbb
mov
push
shr
xor
push
andb
imul
push
or
scas
lret
adc
and
lcall
inc
rcl
call
mov
mov
add
xor
ror
test
push
in
daa
inc
mov
cmc
int3
sbb
mov
cli
cmp
gs
das
adc
or
aaa
out
icebp
test
or
mov
sbb
mov
movsl
nop
jmp
adc
mov
pop
add
je
mov
xchg
scas
int3
fnstenv
sahf
in
push
sub
subb
dec
icebp
sahf
gs
popf
mov
and
cmp
xchg
out
jo
out
sarl
std
inc
arpl
cmp
cltd
xor
xchg
fwait
adc
adc
mov
popf
push
cmpsb
lret
lcall
negb
adc
add
ds
xor
sbb
insb
xchg
outsb
arpl
xor
inc
pop
xchg
lods
subb
sub
sbb
cltd
outsb
je
rolb
sub
insl
lock
xchg
mov
pop
sbb
mov
add
cmp
scas
mov
jg
sbb
or
lods
pusha
jbe
hlt
jmp
jae
fisubs
addr16
cmp
repnz
adcl
iret
cmp
xbegin
or
pop
push
and
sub
add
lcall
add
adc
push
scas
leave
add
sbb
xchg
and
jno
pop
stc
mov
int3
mov
in
fst
jmp
fsubl
bound
mov
or
imul
cs
rorl
pusha
lods
xor
mov
outsb
cwtl
adc
mov
fwait
lods
out
add
add
loope
dec
loopne
xchg
cmp
cwtl
mov
add
add
jae
fildll
fbld
mov
push
cmp
mov
dec
arpl
cmc
push
add
int
sahf
repnz
adc
movsl
jg
aas
ljmp
mov
and
dec
jo
aam
mov
popa
cmp
sbb
xchg
mov
leave
pop
jle
dec
and
inc
add
jns
lock
aas
xchg
or
jmp
mov
bound
loopne
nop
out
ficoml
inc
push
cs
jne
fcomp
mov
lcall
cwtl
or
sti
ds
ss
sbb
in
insl
cli
ds
sub
js
or
loopne
adc
adc
int
clc
popf
mov
movsb
stos
negb
jg
pop
push
xchg
sub
push
fs
inc
lods
sti
pop
xor
push
aad
and
cmpsb
fnstenv
sarl
cld
dec
push
dec
sub
negb
pop
nop
cmp
xor
or
xlat
in
cmpb
lahf
cli
aas
pop
pop
sti
lcall
mov
jb
pop
jns
lcall
mov
movsb
mov
daa
fcmovnbe
mov
or
hlt
xorl
mov
lea
enter
pusha
xchg
fimull
mov
bound
xlat
push
mov
rcrb
int
lea
outsb
push
inc
jo
cli
xor
and
pop
hlt
push
xor
adc
into
or
add
dec
cwtl
addr16
test
sbb
xor
cmp
adc
jb
gs
sahf
xchg
jmp
shlb
or
jne
pop
inc
inc
dec
jb
fwait
gs
mov
insb
mul
jl
cmp
push
psubsb
jl
enter
or
jno
cmp
fs
or
pusha
sub
xchg
sub
sub
fs
inc
lret
sbb
and
loopne
push
xchg
push
jno
std
test
cmp
cmp
pop
movsb
shrl
mov
or
hlt
in
test
pop
loop
sub
cs
jp
mov
cmp
sarb
xchg
or
cmp
mov
out
cvtpd2pi
incl
in
inc
mov
xchg
mov
jp
or
sub
mov
cwtl
or
cmp
rcl
dec
loope
push
jbe
out
or
out
js
xchg
mov
cmpl
jmp
jp
fdivrp
sbb
adc
scas
jo
xchg
je
shll
frstor
inc
xchg
dec
fld
or
push
fstpl
cmp
in
mov
imul
pop
xchg
mov
cmp
xchg
jmp
sub
add
test
jecxz
clc
loop
add
gs
or
loop
mov
add
js
cmp
lcall
cmp
mov
xchg
das
pop
ja
mov
jle
push
cmpsl
lahf
data16
sbb
mov
in
test
xor
dec
shlb
outsb
in
jmp
inc
push
int3
push
push
xchg
jge
cmp
jle
loopne
cmp
add
stos
cmpsl
ret
notl
ja
sbb
mov
call
ds
adc
xlat
ja
push
jo
lcall
insl
inc
repnz
or
pusha
mov
lods
adc
lret
mov
shll
xor
fistpll
and
mov
lret
popa
push
outsl
xorb
jge
sbb
inc
iret
jne
ljmp
pop
adc
mov
iret
fisubrl
pop
and
int
adc
data16
pop
movb
or
sbb
fucomip
pop
xchg
adc
bt
ljmp
fsubrl
inc
cmp
data16
add
stc
add
or
rcrb
data16
ficomps
pop
aad
dec
inc
sub
das
xor
jo
jnp
aad
sti
mov
lea
mov
dec
cmp
imul
repnz
imul
dec
inc
aam
xor
xor
mov
loopne
nop
dec
loop
add
call
mov
sub
lahf
addr16
cmp
test
stos
jns
lret
aas
dec
popf
stc
stc
inc
roll
pop
pushf
pop
lahf
out
lods
inc
test
lret
sti
and
inc
inc
aam
cmp
xchg
mov
sub
subb
dec
pop
fadd
dec
sarb
lds
lods
fdivrl
add
dec
lds
ss
xorb
xor
clc
inc
sarb
test
or
jnp
dec
cli
loop
cli
inc
or
outsl
sbb
daa
bound
loopne
fcomip
arpl
push
mov
mov
xchg
and
mov
aas
mov
scas
std
inc
jg
movsl
iret
ljmp
pop
xor
addl
lret
sti
add
xchg
addr16
rcrb
xchg
xchg
clc
lods
jae
xor
lret
sub
lods
je
adc
inc
pop
pop
fsubrl
cli
xlat
xor
pop
jnp
in
adc
cmp
lret
cmp
jg
sub
jge
punpckhbw
ds
popf
es
and
add
aas
jns
sbb
sahf
push
push
lcall
jae
into
in
xchg
mov
andb
repz
inc
sahf
outsb
inc
sub
inc
lahf
pop
int3
sub
sahf
bound
shr
pusha
and
scas
xchg
test
xor
popf
cltd
out
mov
push
mov
dec
jae
ja
test
fidivl
fiadds
jp
rep
bound
jl
jl
sub
adc
fistpll
orl
imul
dec
cli
mov
out
push
fdivr
testl
dec
fdivs
jb
push
in
dec
jp
popa
rcr
int3
loopne
aam
cmc
out
push
mov
iret
movsl
jno
xchg
nop
dec
adc
les
lea
shll
mov
and
aam
nop
cld
dec
push
pop
jg
inc
pusha
and
mov
movsl
pop
cmp
cmc
cmp
push
hlt
xlat
dec
mov
and
mov
repnz
cmpsb
pop
ror
pop
ja
ror
jecxz
int3
mov
rolb
jbe
imul
sbb
push
pop
bound
jl
sub
test
jno
and
xchg
inc
inc
jp
loopne
cmpsl
add
push
inc
mov
xchg
add
xlat
mov
xchg
mov
cmpsb
popa
mov
mov
cmpsl
fisttpl
notb
pop
and
icebp
int3
in
subl
jbe
lret
and
rcl
inc
mov
sbb
jno
imul
rorl
mov
popf
sbb
adc
in
add
lahf
adc
xchg
pop
or
and
leave
add
movsb
jo
and
mov
test
outsb
sub
xor
in
sub
inc
lods
popf
out
cmpsb
fs
stos
packssdw
mov
adc
and
fcoml
and
jg
dec
push
pusha
lock
shrl
test
adc
repnz
adc
fcoms
cld
fdivl
icebp
stos
add
mov
aaa
ja
lds
cmp
decl
inc
inc
jg
int
lea
xor
push
cmpsl
xor
imul
pop
orl
jmp
dec
aas
imul
adc
cmp
sbbb
inc
leave
stos
scas
xchg
add
cmp
std
je
cltd
inc
inc
pop
and
add
fisubrl
jecxz
dec
mov
dec
inc
push
outsl
int3
xor
jae
js
lret
aaa
inc
popa
cmpsl
lods
mov
mov
rcrb
mov
hlt
adc
mov
adc
pop
cmp
adc
int3
inc
xchg
bound
pop
in
and
push
es
lods
out
adc
movsl
inc
lret
imul
or
js
lock
jge
xchg
push
loop
mov
add
cmpsb
add
mov
mov
xor
std
adc
push
cs
test
aas
aaa
and
mov
aas
fisttps
pop
mov
push
aas
push
rcll
lahf
xor
jb
push
push
movsl
mov
push
fistpll
jno
movsl
or
xor
repz
and
ficomps
cwtl
shrw
or
xor
daa
das
ret
sbb
mov
xchg
mov
out
add
jmp
add
inc
sub
mov
cmp
jp
scas
mov
pop
cmpsl
or
push
arpl
sbbl
loopne
loop
subl
pop
lahf
sbb
enter
lods
or
jl
subl
test
scas
cli
imul
pop
clc
fsts
pushf
outsb
jmp
mov
cmc
jp
cmp
inc
out
jp
out
ret
xor
pop
fistps
mov
push
adc
cmp
lahf
xor
push
movsl
jae
cmp
insb
jne
mov
and
push
lahf
ret
pop
hlt
fdivrs
pop
aam
and
cmpsl
and
out
scas
jl
xchg
pushf
push
test
roll
mov
xchg
push
cmp
std
lea
in
and
pop
out
inc
mov
push
loop
sarb
dec
cmpsb
and
pop
cld
frstpm(287
push
inc
movsb
aas
sub
hlt
jns
push
mov
andb
fimuls
lcall
jns
mov
imul
in
and
jmp
ret
mov
sub
xlat
js
jae
arpl
in
mov
stc
in
push
aam
cwtl
cltd
push
aad
xor
cmc
lods
cmp
fcmovnb
or
movsl
lods
subl
or
xor
mov
fistps
insl
movsl
push
mov
or
arpl
rclb
jns
xchg
xchg
ficoms
jno
rcl
cmp
test
lds
imul
xor
cltd
inc
icebp
movsl
sub
int3
icebp
cmp
sbb
jb
cmpsl
lea
in
pop
xlat
fldt
pop
daa
inc
outsb
xchg
pop
psubw
push
stc
jne,pn
out
xchg
push
cltd
iret
xchg
inc
lcall
loopne
xchg
loope
push
adc
loope
pop
fcoml
xchg
mov
iret
imul
push
inc
adc
sub
lea
or
push
hlt
fstpt
sbb
cli
inc
jo
mov
mov
inc
sbb
addr16
adc
xchg
into
cmp
dec
inc
fmul
ja
mov
out
imul
insb
mov
xor
in
ljmp
fsubl
arpl
mov
and
pop
xor
aad
inc
mov
outsl
orl
sub
jecxz
push
sti
shll
jb
jecxz
outsb
bound
lcall
push
ret
xchg
jno
sbb
pusha
addl
adc
bound
aaa
dec
mov
xor
addr16
pop
jne
pusha
ljmp
dec
rcll
outsb
push
je
out
mov
mov
sarl
sarl
and
mov
ja
daa
cmp
out
or
xchg
mov
xchg
idivl
jnp
lret
loop
out
dec
jne
inc
stos
ret
fwait
cs
lret
jns
fimull
cld
shlb
jge
cmp
push
xchg
cmp
stc
jp
jbe
add
mov
popf
or
xchg
movsb
rorl
inc
and
mov
fdivrs
xchg
cmp
lret
push
aad
fdivrl
mov
pop
xor
aas
xchg
loop
arpl
mov
arpl
repnz
or
addr16
mov
jg
push
in
call
inc
sub
shl
adc
fxch
push
mov
xchg
jecxz
sub
in
pushf
mov
and
in
push
fildll
dec
stos
int3
fs
jnp
and
pushf
mov
mov
and
pusha
pop
dec
xchg
push
mov
add
sub
xchg
xchg
mov
popf
int
flds
into
or
cmp
sub
mov
movsb
push
dec
dec
lret
inc
lods
pop
addr16
scas
jp
dec
dec
scas
xchg
dec
fucomi
fs
mov
mov
mov
add
sar
push
orb
iret
jae
loop
and
mov
imull
jmp
faddl
mov
ljmp
mov
inc
and
nop
ret
das
pop
mov
icebp
sub
int
mov
jmp
loop
cli
lret
mov
cmp
add
lds
jge
sub
sub
or
dec
add
outsb
push
xrelease
dec
xchg
mov
in
xchg
and
mov
es
mov
mov
sub
adc
add
push
pop
nop
std
in
es
ljmp
jns
je
jmp
sbb
mov
push
movsl
dec
gs
inc
or
pop
and
add
push
push
xchg
insb
jmp
jns
aaa
rcrb
cli
ret
lds
xlat
jmp
fildl
shlb
icebp
push
xor
jmp
testb
cwtl
stos
dec
ret
inc
loope
arpl
cs
jmp
js
daa
lods
clc
pop
cltd
repnz
call
mov
roll
push
add
and
pop
pop
movsb
iret
lea
xor
pop
cltd
pop
xor
jne
sar
jns
push
std
lahf
sbb
cli
push
and
pop
movsb
xor
ficoml
mov
lret
hlt
and
mov
arpl
and
stos
cmp
nop
mov
rol
gs
movsb
and
icebp
add
sti
push
or
ljmp
sub
hlt
push
xor
inc
cmp
sub
les
cld
cld
test
aad
push
mov
lods
pop
outsl
popf
jmp
cmp
and
inc
mov
push
and
lds
call
jne
fstpl
repz
data16
je
scas
xchg
cmp
fidivrl
adc
xchg
sub
outsb
lods
fiaddl
or
testb
add
arpl
dec
mov
mov
adc
xor
mov
testb
mov
sbb
jnp
subb
loop
cmp
and
push
pop
pop
mov
jle
push
in
imul
adc
cltd
add
jp
divl
jo
sub
enter
jmp
jne
shr
mov
sub
ret
or
pop
cmc
cmp
push
push
fnsave
stos
mov
pop
sbb
cld
mov
xchg
es
test
lret
in
jo
pop
add
lods
pop
insb
cmp
scas
cmc
push
push
fisttpll
jne
sahf
sti
into
dec
cmpb
stos
test
nop
adc
les
ljmp
adc
xchg
test
ss
scas
xchg
mov
xor
rorb
insl
clc
mov
and
insl
mov
int
mov
fcompl
dec
sar
push
lcall
pop
mov
mov
or
imul
out
push
int3
xchg
inc
cmp
aad
mov
xchg
inc
repz
pushf
int3
movsb
pop
mov
mov
cmp
cmc
xor
and
enter
mov
movsb
or
insb
xlat
ret
jmp
jp
inc
outsb
aam
testb
mov
shlb
adc
pop
mov
ljmp
cmpsb
jl
fadd
jo
fs
xchg
mov
xchg
xor
dec
pop
push
mov
repz
jge
mov
hlt
lds
push
cmp
sbb
or
xchg
lock
push
dec
add
out
popf
xchg
int3
add
sbb
xchg
jbe
fisubrl
xlat
call
lock
xor
mov
push
add
aad
out
movsl
shlb
pop
xor
mov
mov
cltd
xchg
lods
mov
xor
test
lret
lret
pop
sbb
jb
cmp
popl
subl
arpl
cli
call
cltd
es
bswap
imul
inc
mov
lret
add
push
xor
add
je
pusha
mov
loopne
incl
loope
or
jge
in
lahf
in
sarl
mov
lahf
bound
mov
int
lcall
and
and
or
jmp
fcmovbe
cmp
cmpsl
imul
and
push
ret
lock
test
add
icebp
xchg
mulb
cs
outsl
sub
mov
dec
ds
cmp
xchg
mov
cmp
rcrl
test
lcall
or
jg
ja
lret
aad
inc
adc
xchg
dec
mov
lds
mov
insb
ss
sub
adc
test
stos
add
hlt
and
push
adc
cmp
sbb
push
or
cli
sbb
sbb
icebp
shll
jecxz
sbbb
jle
dec
sub
mov
aaa
pop
xor
aas
xlat
pop
les
xor
xchg
cltd
cmpsl
rorb
pop
or
sub
dec
es
dec
clc
into
sub
rorl
cmp
inc
dec
xchg
xchg
pop
adc
jmp
cmpsb
pop
dec
gs
iret
cmp
es
aaa
cmp
dec
sti
std
dec
ret
dec
dec
or
bound
push
inc
push
js,pn
mov
cli
movl
jmp
adc
xor
jae
and
xor
and
data16
and
cmp
ja
cmp
daa
add
gs
jmp
jnp
pop
hlt
push
cmp
adc
push
jns
push
push
sub
out
pop
and
and
add
sbb
fldl
loop
das
lret
adc
in
inc
mov
xchg
sahf
ss
jnp
in
pusha
jo
add
push
cmpsl
leave
add
adc
nop
dec
pushf
arpl
add
dec
xchg
ljmp
push
mov
lds
mov
popa
dec
cmp
pop
popa
lods
mov
pop
icebp
cvtps2pd
xlat
test
popf
fstpl
pop
jns
mov
xchg
sahf
xor
or
fildll
pop
mov
or
sub
out
pop
adc
enter
nop
call
inc
dec
cwtl
jmp
mov
outsl
dec
add
pop
xchg
push
add
sub
ret
cld
popf
inc
mov
sbb
call
push
inc
and
mov
fstpt
int3
xchg
lods
incl
test
mov
jg
ficoms
loop
cmp
test
rclb
scas
stos
add
and
jo
jecxz
test
sub
test
xlat
mov
stc
lahf
fwait
xor
inc
xchg
push
mov
add
and
push
lret
jb
mov
repz
loope
test
mov
dec
fistl
mov
jb
cld
and
push
sub
jge
jae
push
shl
cmp
or
xchg
cli
mov
sub
sub
lcall
sub
subl
inc
jge
sahf
es
xlat
mov
in
ret
xchg
push
inc
xchg
cmpsl
repz
jg
lea
fsubrl
ljmp
insb
enter
in
out
ljmp
rcrb
cs
add
xor
push
xchg
aam
into
gs
xchg
jmp
scas
push
cmp
xor
dec
loop
dec
jne
loop
popf
js
sub
jmp
push
incl
mov
repz
sbb
fdivl
into
packsswb
jne
int
push
gs
int
mov
add
out
cld
out
ljmp
ficompl
out
adc
out
lcall
sub
stos
push
in
pop
aad
cmpsl
aam
or
xchg
dec
jmp
and
or
lock
sahf
fdivrl
push
mov
push
shrl
mov
aam
pop
rorl
nop
jns
out
out
andl
mov
pop
push
add
xor
test
xor
pop
gs
out
inc
mov
je
pushf
stc
pop
xor
int3
fsubrs
adcb
xchg
aas
adc
cmpsb
pushl
icebp
sub
pop
inc
jnp
or
xchg
mov
dec
scas
jne
cmpsb
xchg
cmpl
jp
mov
ror
frstor
mov
push
test
pop
mov
jg
xchg
in
out
xchg
mov
push
mov
xchg
mov
jecxz
movsl
or
subl
mov
add
sarl
push
imul
xchg
iret
sbb
inc
test
addr16
xchg
int
pop
mov
xor
lods
gs
inc
or
ficoml
shlb
test
out
lahf
pop
sbb
mov
sbb
lds
or
push
out
aam
mov
fldl
in
lock
and
clc
jo
pcmpeqw
outsb
pop
scas
lds
scas
xchg
lds
ficomps
int
dec
js
cmpsb
test
add
lret
mov
mov
aam
gs
inc
mov
mov
sub
dec
fs
into
shlb
mov
jnp
xor
and
scas
js
fcmovbe
nop
cmp
jge
cmp
scas
mov
sub
js
xchg
xor
out
movsb
fs
xchg
fadds
es
pop
mov
loop
mov
lahf
stos
mov
int
rolb
mov
cmp
aas
adc
arpl
stc
cmpsb
xchg
add
sbb
pop
inc
mov
or
cmp
out
outsb
fcmovbe
jnp
cli
fs
and
cmc
les
mov
sub
pop
shl
bnd
pop
dec
movsb
adcl
pushf
push
push
and
sub
or
xchg
or
sub
inc
ljmp
dec
xchg
or
inc
pop
push
pop
cltd
ffreep
mov
mov
mov
cmp
pusha
es
mov
mov
inc
test
jmp
inc
xchg
fwait
xor
push
int3
les
int
mov
movb
ds
push
std
orl
stos
clc
sti
stos
dec
mov
jge
daa
sbb
mov
sbb
fstl
rcrl
push
iret
cmc
xchg
push
lahf
lea
fidivs
pop
jle
xchg
jmp
subb
fisubs
cmp
add
sbb
inc
fidivrl
fcom
popf
mov
push
and
add
adc
and
cmp
lahf
pop
dec
cmp
mov
rcrl
and
push
cmp
adc
fsts
add
push
pop
pop
lret
into
loopne
in
pushf
mov
mov
mov
dec
ds
inc
inc
pushf
scas
sbb
fnsave
cmp
loop
jns
lods
out
push
or
aam
inc
lea
mov
pop
clc
push
or
mov
inc
repz
cmpsb
aad
into
scas
push
mov
xchg
rcrl
cld
aam
adc
jmp
shrb
rorb
rol
mov
inc
push
punpckhwd
sbb
jmp
hlt
cmpsl
mulps
fst
inc
inc
je
sbb
or
push
cld
mov
push
stc
lcall
push
inc
xchg
and
mov
sbb
push
ja
sbb
dec
js
cmp
push
into
add
cmp
xor
lods
xlat
arpl
rcrl
pop
cmp
mov
std
sbb
ret
call
pop
ljmp
jge
add
gs
sub
mov
push
jo
aas
sbb
in
fnstenv
outsb
js
into
cld
je
lret
movsl
sub
stos
std
mov
or
pop
test
and
into
sub
sub
dec
sbb
pop
loope
dec
mov
repnz
jp
push
push
ret
lock
mov
test
fists
jae
dec
xchg
imul
mov
cltd
aam
push
hlt
sahf
mov
cmpsl
outsl
push
repz
adc
pop
loope
andb
test
lahf
bound
ljmp
lcall
out
push
pop
and
fxch
shr
sub
das
daa
sbb
rolb
insb
or
icebp
aas
out
out
in
cmc
mov
imul
out
daa
cmp
xchg
mov
or
fidivrs
mov
dec
cld
roll
cmp
pop
jnp
inc
loop
loope
aas
cmpsb
cmp
arpl
int3
std
pop
push
divl
insl
mov
mov
js
int3
scas
gs
jo
rcll
iret
and
and
jmp
inc
pop
shlb
jnp
sbb
sub
jmp
pop
insb
mov
inc
pop
shrl
mov
js
mov
dec
jl
inc
add
ss
cmp
sti
negb
out
movsb
scas
mov
push
daa
cs
pop
rorl
push
xchg
ljmp
jo
loop
or
jne
outsl
jae
and
pop
lahf
push
lods
int3
mov
pop
and
in
movsl
or
cmp
mov
gs
inc
pop
fidivrl
andb
xor
iret
insb
jmp
je
orl
dec
jmp
jle
add
movsb
test
or
push
mov
scas
xchg
xlat
cmp
aaa
mov
lcall
icebp
or
pushf
pop
scas
mov
js
push
stc
cmp
pushf
xchg
sbb
ja
pop
xor
lock
iret
xlat
mov
xchg
mov
jnp
sbb
mov
push
cli
mov
call
ljmp
mov
fldcw
cmpsl
hlt
jmp
and
mov
stos
mov
jno
cli
sub
mov
push
sar
enter
sbb
mov
dec
xchg
lret
sahf
orb
sbb
pushf
push
decb
je
mov
icebp
mov
dec
jle
cli
leave
push
ljmp
inc
or
fs
data16
pop
dec
loop
add
repz
mov
movsb
add
mov
xor
mov
movups
push
insb
xor
sub
je
jl
stc
ds
fs
ds
lock
pop
sarb
and
cmp
fistps
movsb
in
insl
scas
dec
add
out
pop
imul
xorb
push
mov
aaa
cmp
jno
sbb
mov
outsl
cwtl
lret
in
sbb
jge
or
dec
jg
sahf
jbe
in
dec
adc
dec
cltd
xchg
bound
sub
insl
adc
mov
cs
stos
mov
mov
and
dec
fwait
sub
or
ror
call
sub
fcmovnu
mov
fstps
push
pop
push
mov
fwait
popf
gs
xchg
aas
stos
aas
movsb
ljmp
repz
int3
mov
dec
daa
inc
jo
sbb
movq
aas
adc
and
in
mov
and
xchg
test
or
and
loop
cmp
pop
add
xor
cmc
imulb
mov
add
pop
jecxz
in
pop
push
cmp
fdivs
lahf
mov
shr
jae
cmp
and
cmpsb
and
cmp
adc
xchg
add
lock
pop
out
xor
cmpsl
jnp
loopne
mov
sbb
popf
jno
or
dec
jae
pop
sub
outsb
mov
mov
mov
in
pop
xchg
push
jmp
adc
in
jl
daa
inc
lods
sbb
mov
sub
jle
ret
add
movsb
inc
outsb
sbb
cmpsb
imulb
pop
jle
in
stos
popa
out
sub
xchg
xchg
add
push
jb
jae
push
pushf
cli
sub
cmp
add
jns
add
sub
lahf
repz
and
jbe
add
lret
scas
cwtl
fcmovu
sbb
fcoms
xchg
jmp
jl
leave
and
sbb
popa
test
xchg
std
dec
sbb
nop
sub
mov
xchg
lret
inc
fdivrl
mov
out
xchg
push
jg
shl
sub
sbb
sahf
and
icebp
cmpb
movsl
jbe
push
xor
decb
aad
scas
cmp
xchg
and
or
xor
popa
xor
test
aaa
cmp
in
ds
fcmovb
mov
lret
inc
dec
xlat
add
insb
push
cmp
dec
sub
jb
aad
jo
mov
xlat
fdivrl
pop
lea
dec
lock
out
mov
jo
cli
out
leave
test
and
lods
mov
cmpsl
clc
cmpsl
popa
sbb
frstor
jo
enter
bound
pop
adc
jmp
cmp
imul
cmc
xor
xchg
sbb
cwtl
lahf
mov
aas
je
push
mov
cmp
ficoms
cwtl
xchg
nop
add
mov
imul
int3
repnz
mov
pushl
fbld
nop
pop
cmc
arpl
mov
dec
sarl
imul
mov
pop
in
push
push
es
and
pop
dec
sbb
sub
je
pop
faddp
xor
sub
mov
call
rep
lcall
mov
xor
lock
mov
stos
aad
pusha
jbe
jo
cwtl
mov
push
arpl
xor
add
sub
jns
dec
sahf
mov
jle
pop
jne
add
insl
nop
add
jp
and
aam
cwtl
xchg
cltd
push
dec
shlb
push
ficomps
out
sbb
js
sahf
cmpsb
rcll
xor
sub
or
mov
sub
mov
pop
rorl
jb
pop
jbe
xor
adc
lahf
les
xlat
push
data16
jb
das
std
and
dec
in
ss
insb
lds
insb
in
adc
push
mov
in
iret
jo
add
add
push
dec
pop
add
rcrb
ret
ret
xchg
jno
sbb
dec
ds
cs
cmpsl
or
and
push
repz
mov
mov
je
adc
daa
add
sti
cmc
cmc
fcom
sahf
jmp
ret
cmp
xchg
cmc
xlat
aaa
xorl
pop
inc
movsl
ret
fistl
je
ret
lds
mov
and
outsb
inc
inc
test
pusha
inc
mov
jnp
mov
icebp
dec
imul
sub
lea
stc
imul
jbe
gs
pop
loop
mov
add
or
call
inc
and
iret
xchg
mov
xor
xor
or
xchg
imul
dec
mov
mov
cmp
flds
jo
movsl
mov
pop
jecxz
repz
aam
cmp
lcall
mov
divb
push
insb
dec
pop
mov
mov
inc
xlat
shlb
into
inc
shlb
jmp
mov
pop
imull
lds
movsb
imul
adc
insb
sub
int3
int3
push
sub
aad
neg
dec
push
insl
nop
daa
dec
fnstcw
adc
add
xchg
xchg
mov
aas
pop
fisttpl
aad
and
arpl
xor
xchg
aaa
inc
daa
adc
test
xlat
fistpll
pop
into
mov
pop
inc
in
pop
lds
rorl
push
mov
lods
test
pop
sarl
adcl
jae
inc
lea
scas
pusha
dec
lock
stc
mov
add
pop
lods
scas
mov
imul
lret
lret
faddl
add
mov
xchg
ljmp
and
add
and
mov
push
add
add
jae
push
scas
call
mov
fstpl
cltd
stos
mov
fimuls
pop
outsb
in
in
add
mov
mov
sbbb
addr16
push
jl,pt
fstps
xor
test
js
lret
in
jp
div
stc
je
sub
arpl
adc
nop
sub
xlat
andl
cmp
and
adc
adc
xchg
or
push
jnp
int3
inc
out
je
mov
xchg
and
sub
pop
aas
and
repz
addr16
in
jne
inc
ret
mov
icebp
test
cli
aaa
pop
xor
gs
fimuls
mov
arpl
cmp
xorl
std
dec
mov
xchg
sub
cmpsb
xchg
fstpt
stc
push
aam
xchg
mov
xor
fimull
pop
push
or
outsl
hlt
gs
pop
cmp
pusha
sub
xchg
mov
in
pop
mov
xchg
subb
out
xchg
pop
dec
jecxz
aad
dec
ret
cs
movsb
dec
stos
ja
in
ficoml
ja
lods
pop
mov
lcall
cmpsl
inc
repz
sub
in
int3
pop
or
push
push
jnp
fwait
loope
in
xchg
fstps
mov
xor
or
fwait
aam
mov
mov
xchg
xchg
insl
call
jno
xor
aam
loopne
ljmp
mov
add
push
pusha
inc
push
xchg
outsl
inc
jp
cmpsb
xchg
std
mov
pop
das
sbb
pusha
sbb
jns
jbe
sub
mov
sbb
and
xchg
or
mov
add
sub
jnp
inc
lds
outsl
push
jno
in
je
push
into
testl
mov
xor
pop
mov
mov
or
or
jno
cs
or
aas
mov
ljmp
adc
mov
aad
xor
mov
test
data16
pop
inc
dec
dec
stos
sub
cmp
xchg
xor
in
pop
xlat
das
adc
xlat
pop
add
mov
repz
mov
mull
add
mov
dec
popa
pop
add
jnp
jge
mov
mov
aad
mov
or
scas
lods
loope
jo
loopne
data16
xor
sub
pop
xor
and
mov
sti
inc
adcb
xorl
adc
xor
shl
dec
cs
jp
aad
xchg
mov
pop
lods
and
enter
adc
jns
sbb
scas
pop
add
roll
jns
add
into
push
test
mov
push
push
test
pop
fbld
adc
cmpsl
loop
out
cwtl
jns
xchg
jne
xor
jae
xchg
mov
sub
inc
lods
and
fs
repnz
js
call
push
xchg
adc
adc
movsl
loop
inc
xchg
cmpsb
int
shl
jne
pushf
add
lahf
add
xchg
and
int3
fwait
aam
fisubs
adc
pop
insl
mov
and
xor
imul
xchg
inc
hlt
out
sbb
pop
and
sub
sub
inc
mov
insl
mov
mov
daa
test
add
jb
and
dec
adc
mov
sub
push
jb
sbb
imul
lret
mov
pusha
in
in
ljmp
out
jne
mov
adc
mov
aaa
adc
push
or
fisubs
divl
push
or
movsb
pop
into
inc
ret
jg
add
inc
lret
jg
call
xchg
dec
outsb
jg
add
repz
test
xchg
mov
pop
das
es
add
bound
fwait
sub
pop
mov
ja
xchg
test
mov
sbb
scas
sub
lods
insl
mov
cmp
mov
push
and
push
xchg
cli
shrl
cmp
inc
dec
cmpsb
nop
sbb
xor
add
xlat
repnz
insl
push
sub
les
sub
enter
cwtl
test
and
inc
imul
lret
xchg
mov
mov
add
add
push
arpl
mov
adc
rcrb
mov
fcomps
dec
pop
shlb
loop
sub
mov
in
enter
pusha
xchg
inc
scas
lcall
daa
mov
mov
xchg
dec
dec
popf
lea
push
in
fbld
jle
cmp
fists
inc
dec
mov
ret
pushf
sti
scas
or
pushf
imul
rcrl
xor
nop
dec
clc
int
sbb
or
pop
nop
adc
popa
inc
rcr
xchg
je
in
pusha
nop
dec
xor
repz
sub
mov
pop
nopl
and
dec
test
les
loope
dec
addl
loope
rcrl
sbb
into
sete
or
mov
mov
idivb
ret
pop
xchg
cmp
or
into
lcall
sahf
adc
nop
adc
or
js
fwait
movntq
je
push
lahf
xchg
or
lods
xchg
sbb
push
xchg
adc
enter
sub
clc
inc
std
hlt
dec
inc
pop
or
rcll
mov
mov
ja
imul
adc
pop
jp
add
inc
inc
loopne
sti
gs
xlat
mov
popa
adc
push
push
push
scas
orb
add
cmpsl
nop
push
test
or
shlb
fistpl
add
cld
sub
data16
sub
sbb
je
mov
aas
xor
jge
xchg
xchg
inc
sub
push
pushf
jge
jb
aam
and
sti
cmp
xchg
sarb
es
scas
pop
dec
mov
xchg
aaa
cmp
inc
sub
jp
adc
add
call
mov
out
in
xor
addr16
das
and
pop
movsl
inc
sahf
mov
inc
lcall
into
fsubrs
push
imul
mov
and
loop
rcrl
cmp
into
jae
xchg
fsub
leave
jmp
jbe
jge
and
cmc
sbb
mov
test
call
xor
rol
pop
and
dec
js
fmull
jbe
pop
pop
xcrypt-ctr
cmpsl
sahf
loopne
mov
mov
mov
inc
xchg
int
push
sub
mov
push
push
insb
adc
sub
or
mov
cmp
xor
test
lret
mov
inc
cmp
dec
icebp
outsb
es
int
jb
xor
adc
lahf
clc
test
lret
and
pusha
aam
shl
enter
jle
mov
pop
hlt
mov
iret
pop
popl
jp
push
addl
jmp
out
inc
push
jo
sub
or
pop
in
std
in
outsl
shlb
and
loop
insl
sub
lods
xor
mov
insb
and
addr16
test
xlat
jge
cltd
dec
js
hlt
mov
jmp
enter
std
lods
bound
cmpsb
aam
stos
sub
outsb
adc
fwait
jmp
arpl
sbb
mov
sahf
inc
jl
rcrb
mov
inc
pop
cmpsb
cmp
dec
mov
out
adc
or
mov
xchg
jno
call
fsts
lret
ret
test
adcb
pop
test
mov
jmp
sar
sbb
jbe
scas
lods
shrb
sbb
mov
loope
add
in
cmp
jecxz
aas
mov
dec
call
fsubl
ljmp
cmpsb
xchg
leave
aad
mov
sub
cwtl
inc
and
push
sti
xor
xchg
pop
sub
aas
or
cmp
xchg
pop
leave
leave
push
mov
cli
pop
pushf
push
jg
in
cmp
cmp
ret
mov
push
add
imul
es
cmp
mov
loopne
mov
mov
sbb
loop
push
fistpll
add
out
shl
add
xlat
inc
out
pop
test
jo
pop
or
test
popa
and
adc
loopne
sub
addr16
mov
lock
rep
shll
popf
mov
push
mov
inc
gs
or
inc
ljmp
jmp
dec
mov
xor
adcl
iret
in
cltd
push
lahf
jge
sbb
cmpsb
jge
sbb
xor
fisubrs
mov
inc
sarb
jg
xorb
notb
xlat
mov
inc
int3
mov
xchg
inc
xor
or
iret
in
pop
sbb
imull
jle
jle
leave
xchg
leave
and
sub
sti
jge
adc
inc
ds
cmp
and
das
push
std
xlat
mov
jp
leave
inc
divb
add
sbb
jmp
fdivs
insb
dec
std
test
xchg
in
adc
mov
outsb
cmp
stc
pop
rcll
lea
stos
data16
in
mov
sbbl
cmp
adc
insl
jmp
xchg
stos
test
out
cmp
jb
popf
in
adc
add
or
mov
cli
call
push
jle
ss
dec
xlat
xchg
divb
xchg
push
jge
divl
shrb
js
mov
mov
ss
cmpsl
add
aas
xor
and
int3
add
test
shlb
xor
add
call
mov
lret
or
push
pop
xlat
rorl
ret
bound
xchg
jae
mov
out
sahf
fsub
dec
out
xchg
pop
push
cld
into
nop
lods
lea
push
cs
in
pop
cmc
dec
popa
jne
imul
into
test
jle
pop
repnz
outsl
lods
pushf
scas
out
push
fdivp
popa
loop
cmp
adc
fimuls
sbb
xchg
jp
dec
test
pop
adc
xchg
mov
lret
xchg
in
sbb
sub
test
lcall
inc
lcall
mov
mov
iret
pop
dec
rolb
dec
pop
pushf
push
or
mov
dec
loopne
mov
dec
aas
je
adc
adc
and
cmpsl
mov
scas
xor
adc
xor
push
mov
xchg
pop
icebp
dec
lret
arpl
cmp
push
xchg
fldl
dec
imul
cmc
lret
sahf
mov
mov
inc
int
leave
outsl
xor
or
arpl
imul
lds
and
and
sub
cli
shrb
mov
mov
rcll
enter
push
pop
adc
sarb
sbb
and
les
inc
jecxz
inc
out
pop
dec
jne
dec
and
mov
or
lods
std
inc
iret
push
xchg
cmp
enter
sahf
mov
stos
inc
test
test
push
rcl
iret
sub
dec
jae
mov
aas
adc
leave
pop
push
xor
pop
mov
popf
test
into
fs
call
mov
out
xor
arpl
roll
mov
push
mov
cmp
push
sbb
pop
sbbl
cmp
dec
adc
adc
inc
cmc
fiadds
mov
push
shrb
add
push
mov
ret
lods
dec
call
mov
loop
js
cmp
cld
aad
cmp
cmc
jle
outsb
jp
out
sbb
xor
push
or
ss
ljmp
in
nop
cmc
fnstsw
cwtl
frstor
cmpsb
decl
loope
ds
xchg
xchg
xchg
rcrl
xchg
call
test
repz
fsubs
cmp
aas
lahf
push
xchg
mov
hlt
test
mov
inc
or
mov
inc
nop
add
push
mov
daa
inc
sbb
fisttpll
xchg
cmp
cmp
and
cs
int3
cltd
xor
mov
ret
adc
ret
jne
incl
mov
fdivrl
ss
ljmp
cmpsb
pop
insb
add
sbbb
adc
push
push
xchg
sub
mov
insb
insb
fimull
iret
pop
cmp
orl
shll
mov
shrb
hlt
xchg
lcall
or
sbb
out
xchg
scas
lea
fidivrl
dec
fsubrl
outsl
mov
pop
pop
aaa
decl
xchg
bound
xor
sub
int
inc
jmp
leave
dec
test
pushf
cmp
andb
loop
jle
jbe
lock
je
sbb
notb
xchg
sub
in
jmp
dec
dec
ret
sti
inc
fwait
jl
aaa
push
sub
pop
movsl
adc
pop
hlt
cmc
mulb
dec
fisttpl
mov
ret
jb
cld
data16
lods
mov
test
mov
and
xchg
sti
jl
inc
mov
ret
mov
fildll
mov
add
mov
pop
fisubl
dec
sub
add
xor
ljmp
cli
xchg
inc
int
push
push
and
add
xchg
mov
and
insb
inc
mov
int3
add
int
shll
sub
push
dec
mov
and
fidivrl
cmp
sti
mov
ficomps
mov
dec
das
jns
jge
mov
test
movsb
jg
lods
clc
lret
mov
inc
mov
andl
xchg
lds
xor
outsl
and
xchg
pop
dec
shrl
popl
mov
sub
inc
sti
ja
dec
dec
adc
insb
jp
add
xor
lahf
js
mov
test
insb
fildl
scas
and
dec
stos
mov
rcrl
pop
push
or
or
push
outsb
out
xor
addr16
dec
cmp
and
dec
test
and
lds
sbb
cmpsb
sbb
add
xchg
add
xchg
test
dec
scas
jge
mov
dec
test
jo
add
and
lcall
push
loop
and
xchg
or
push
jb
popf
pop
xor
cmpsb
pop
mov
inc
mov
cmpsb
or
nop
push
repnz
fst
hlt
mov
cmp
push
lods
and
je
cmpsb
sub
movsb
popa
mov
mov
lods
jo
mov
test
and
sbb
out
movsb
jg
nop
scas
or
sub
subl
push
jae
lcall
jl
xchg
bound
nop
mov
das
and
std
pop
mov
cmp
xor
sbb
jbe
lds
xlat
add
movnti
rcl
inc
jle
fcoml
xchg
dec
push
rorb
repnz
adc
push
test
shlb
inc
xor
push
nop
dec
leave
adc
dec
mov
push
xchg
add
xor
push
cmp
lock
sub
sub
inc
xchg
cmp
cmp
inc
xchg
fldt
das
aad
or
fs
int
mov
dec
cmp
mov
out
pop
imul
cmp
sbb
jmp
aam
push
and
leave
into
jns
jne
int
clc
insl
adc
and
adc
lret
shll
test
cld
in
leave
xor
outsl
faddl
ljmp
fbld
popa
mov
or
xor
loop
rolb
inc
jle
lahf
jbe
mov
jae
mov
or
aam
push
cmp
cmpsb
mov
or
add
dec
sbb
jge
in
iret
fildll
into
mov
mov
inc
test
and
mov
jno
mov
pop
xchg
stc
mov
and
xchg
mov
mov
stos
lds
add
dec
cmc
pop
orl
mov
adc
ret
inc
jp
aas
sub
mov
clc
loop
sub
lods
out
inc
jne
outsl
cmc
ret
adc
fildl
sub
mov
call
out
add
xor
dec
mov
repz
push
and
pop
add
imul
enter
jp
test
hlt
jmp
push
pop
incl
lock
dec
pop
pop
sub
push
mov
add
cmpsl
leave
pop
push
jae
xorl
pop
std
sub
sbb
sti
mov
and
sbb
shll
push
add
push
cmp
movsb
push
in
xor
pushf
lcall
dec
cmp
fstl
js
test
add
rolb
push
in
fs
dec
xor
sbb
mov
outsb
ds
cmp
dec
mov
push
fdivs
mov
test
loope
dec
stos
ljmp
aas
and
in
loopne
adc
inc
sbb
sbbl
aad
xchg
sub
out
aad
ret
sub
lods
into
xchg
xchg
ret
push
ljmp
popa
mov
insl
cs
sub
popf
xchg
jl
cli
xchg
mov
out
cmp
push
sti
jg
lods
loop
dec
pop
jae
insl
jno
das
sti
jbe
jmp
xchg
xor
sub
int
sub
xlat
sbb
cmp
loop
daa
aad
fcomip
sbb
mov
fsubr
cmp
mov
push
pushl
imul
fildll
aas
mov
or
dec
mov
push
js
inc
mov
cmp
inc
mov
repz
inc
mov
mov
iret
pop
inc
sbb
mov
mov
into
and
xchg
aaa
xchg
push
dec
in
and
lods
outsl
dec
jne
jge
mov
mov
mov
cmp
int3
pop
push
sbb
out
or
shrb
sub
daa
sahf
stos
inc
les
loopne
lret
outsb
lret
aam
push
dec
mov
inc
sti
fbstp
lods
mov
dec
cmp
inc
in
in
dec
jns
sbb
std
push
pusha
push
xchg
ja
stos
pop
inc
cs
stos
lods
xorb
mov
xorl
test
or
loop
jle
and
orl
out
adcl
inc
sbb
enter
mov
imul
outsb
mov
adcb
test
insl
rol
sbb
ds
mov
cmp
dec
xchg
xchg
xlat
jne
lods
push
fnsave
push
shlb
mov
int
mov
aas
jge
shl
negl
movsb
jns
adc
inc
mov
shl
shr
mov
shlb
cmovge
sbb
mov
jne
adc
add
or
stc
in
mov
mov
jmp
inc
movsl
push
dec
daa
push
shlb
mov
inc
testl
ret
hlt
adc
xor
gs
or
sub
mov
cmpsb
cld
cmp
or
jo
jno
pop
dec
scas
or
pop
mov
lock
imul
idivb
and
xchg
or
bsf
sub
fimuls
sbb
push
pop
cld
mov
mov
daa
mov
icebp
pop
popa
pop
xchg
pop
mov
outsb
cmc
dec
jge
push
out
cmp
imul
inc
pushf
mov
pop
pop
cmp
jne
lret
jp
inc
lret
xchg
fmull
fdivr
and
outsl
aaa
sub
lods
fistpll
outsb
xchg
mov
mov
mov
xchg
insl
push
pop
mov
jae
push
push
jno
call
xchg
cmp
sub
cmpsl
pusha
mov
in
data16
push
inc
jmp
pop
jmp
out
xor
and
pop
and
cmp
mov
mov
scas
setg
push
push
divb
xchg
cli
je
mov
cltd
mov
orl
data16
ljmp
loopne
pusha
out
fadd
dec
cmpsb
xchg
test
cli
and
pop
pop
dec
adc
clc
mov
push
and
and
sbb
ror
bound
or
pop
add
jo
hlt
daa
push
aad
add
mov
mov
add
jg
movsb
xlat
mov
out
xchg
jo
bound
ja
or
sbb
int
std
fildll
xor
inc
rcrb
jge
andl
bnd
xor
shll
aaa
adc
mov
or
lock
or
pop
xlat
ror
sti
jb
popa
inc
mov
aas
xorb
repnz
sub
and
clc
and
cmp
sbb
hlt
xchg
cmp
push
sub
ljmp
push
je
or
stos
dec
mov
or
and
shr
push
xchg
dec
popa
mov
popl
and
movsb
xchg
pop
les
push
adc
sahf
mov
lret
sub
lret
push
sahf
xlat
mov
out
testl
repz
sbb
mov
jecxz
jbe
cmp
sub
cmpsb
popa
mov
test
add
mov
cmp
repz
inc
lret
push
cmp
inc
mov
mov
sbb
neg
or
sbb
insb
jmp
or
fidivrs
sbbb
scas
andb
mov
inc
sahf
jnp
insl
push
sub
jnp
or
xlat
das
lock
rsm
adc
xchg
lahf
mov
lods
add
rol
jne
dec
push
insb
add
sti
mov
shll
int3
dec
fildl
bound
enter
pop
cmp
incb
lods
lret
div
sbb
jg
or
rorl
out
xchg
dec
xchg
or
push
inc
add
out
in
mov
mov
dec
lds
stc
cmp
loopne
ja
and
add
mov
sbb
jp
mov
in
lea
sub
ss
mov
jmp
test
xchg
int
mov
jns
dec
mov
dec
repnz
sbb
xchg
sub
andb
inc
inc
xchg
push
in
mov
popa
pop
repz
mov
jne
frstor
les
pop
or
mov
and
pop
scas
cmp
mov
movsl
sar
outsl
shrl
rolb
in
out
pushf
and
xor
adc
pop
ret
xchg
stos
aas
cwtl
test
call
pop
loopne
xor
jne
rcrb
push
dec
and
add
movb
fidivs
xor
iret
scas
xchg
lods
sti
mov
test
lods
and
inc
jbe
adc
cltd
jnp
or
jno
pop
jbe
test
aaa
pop
pop
scas
mov
sub
iret
lds
loope
shll
das
int3
dec
outsl
int3
mov
or
dec
js
xor
ficomps
ds
mov
push
xchg
mov
icebp
or
cmp
fidivl
fs
notb
fisubs
in
cmp
or
xchg
scas
pop
insb
jo
mov
repnz
mov
sbb
inc
test
cli
dec
iret
into
sbb
inc
rcrl
xlat
fsubs
ret
fcmovnbe
jmp
daa
push
add
cli
sahf
lahf
enter
xchg
fcomip
out
pop
pop
mov
sub
and
pop
test
or
jl
repz
or
dec
jl
adc
pop
xor
adc
xchg
fistl
lcall
jp
jb
sbb
mov
mov
cwtl
rol
enter
mov
pop
idivb
push
dec
sbb
imul
loope
sub
fdivrs
xor
cmp
bnd
cmp
mov
loopne
add
pop
lcall
cs
ret
out
icebp
test
hlt
rclb
cmp
stos
pushf
nop
lods
adc
sar
movsb
fistpll
daa
push
adc
aaa
les
mov
xchg
sub
insl
and
sti
dec
push
add
xor
decb
aam
push
mov
cltd
pop
push
mul
add
mov
sbb
scas
or
bound
pop
and
dec
inc
mov
repnz
mov
adc
mov
xchg
movlps
inc
lods
in
stos
enter
adc
jl
shll
inc
cltd
jno
lret
sub
cmp
idiv
xchg
fcmovnbe
inc
mov
fdivl
cmp
mov
negl
xchg
ficompl
adc
cmc
push
jecxz
call
popa
ljmp
test
or
or
ds
and
aas
dec
and
fcmovne
icebp
jle
outsl
sarl
aam
mov
push
cmp
into
mov
xchg
push
js
decl
and
sub
sbb
lret
pop
fimull
mov
std
mov
push
sbb
loopne
and
pop
push
orl
sub
pop
mov
jbe
ret
cmp
sub
ficoml
jns
ljmp
sbb
sub
int
mov
adc
bound
popa
imul
popw
adc
ss
sahf
pusha
cmp
fisttpl
mov
stc
or
mov
and
shll
sti
int
jo
stos
pop
inc
outsb
incb
ja
lock
popa
xor
inc
cli
push
pop
xchg
cltd
xchg
jl
cmp
mov
sub
jno
dec
in
mov
xor
mov
mov
sbb
in
pushf
mov
sub
mov
lret
dec
mov
xchg
jbe
into
je
insb
sbb
push
out
out
xor
fimuls
xchg
jp
inc
push
mov
shlb
sbb
fstps
aam
pop
sbb
sahf
test
andb
xchg
call
lea
les
div
movaps
xchg
pop
xchg
mov
sbb
xor
inc
dec
cmc
scas
add
cld
adc
mov
mov
mov
cli
push
add
imul
test
scas
rorb
pop
mov
cs
test
inc
mov
shrl
dec
mov
mov
mov
lret
xor
das
pop
pop
inc
imul
into
pop
xor
mov
aam
xchg
mov
aas
and
jecxz
or
mov
jb
call
daa
mov
sahf
pop
sti
mov
popf
xor
mov
int3
sbb
rcrl
loop
xchg
das
mov
lcall
in
jnp
pop
jge
xor
dec
jmp
sub
sarb
arpl
call
jecxz
fnstenv
sbb
es
icebp
out
jmp
sarb
popf
mov
fadds
mov
push
or
dec
testl
js
stos
sti
push
outsl
sub
jle
popa
mov
jmp
xor
jnp
mov
popa
mov
cmp
add
andl
sub
imul
xchg
out
push
jl
and
mov
cli
loope
insb
arpl
mov
test
cmp
std
scas
subb
mov
sbb
stos
mov
cmpsb
nop
int
std
inc
dec
mov
dec
je
sub
pushl
or
fisubs
mov
or
adc
stos
cmp
adc
mov
jno
outsb
jp
dec
jbe
mov
inc
outsl
outsb
outsb
pop
mov
mov
xchg
or
mov
jmp
jae
movsb
js
jo,pn
inc
pop
loop
cmp
outsl
add
sbb
fwait
clc
cmp
inc
call
rcrb
test
inc
adc
test
loope
xor
jp
dec
nopl
lcall
cli
jns
std
push
mov
xchg
adc
push
aam
mov
xchg
push
or
or
je
testl
out
pop
adc
add
mov
lea
lds
dec
hlt
rclw
addr16
and
mov
das
lret
lock
mov
dec
xchg
daa
mov
push
mov
mov
in
mov
js
je
iret
jae
add
sbb
adc
push
jle
cmpsl
mov
rol
xor
popf
mov
mov
call
jg
dec
sub
mov
loop
dec
cmp
cmp
imul
rcrb
adc
push
std
push
jb
outsb
int3
lds
outsb
jp
cmp
or
jmp
je
ljmp
and
adc
cmp
pop
cmp
fsts
sub
pusha
mov
pop
inc
mov
jne
sub
cmpsl
add
mov
stos
sub
cmc
mov
mov
js
bound
test
dec
add
cmpsb
xchg
push
jnp
xor
jns
rcrb
jmp
adc
andl
dec
out
pop
add
out
xchg
loope
mov
pop
jg
and
imul
sti
xchg
cmpsl
xor
scas
sti
cltd
outsb
add
mov
push
out
jb
inc
mov
cwtl
xchg
insl
cmp
cmp
in
dec
cmp
pop
loopne
add
aaa
and
and
mov
cmp
pop
push
testb
call
or
pop
in
mov
or
xchg
test
or
fbstp
mov
nop
inc
in
lahf
inc
mov
sti
mov
add
push
divb
push
ljmp
mov
cmp
lea
popa
add
mov
sbb
mov
sbbb
adc
repz
mov
ret
fnsave
loope
push
cmp
sub
mov
push
aaa
jno
insl
mov
cmp
in
or
add
jmp
mov
and
std
pop
mov
push
mov
cs
dec
mov
out
and
movb
cltd
decl
dec
shlb
pop
pop
testb
ret
or
and
push
inc
in
aas
sbb
push
icebp
inc
repz
out
add
sub
shll
out
add
cmpsl
pushf
test
sbbl
cwtl
gs
scas
lock
stos
out
cs
repz
movsb
sub
inc
jg
sbb
dec
sti
test
pop
sarb
sbb
jge
xor
shlb
icebp
cli
icebp
sbb
sub
arpl
and
data16
pop
sahf
inc
push
mov
mov
fidivrl
cmpb
push
inc
testb
jae
fs
mov
adc
enter
sub
cld
mov
aas
fs
aam
mov
push
sub
rol
fdivl
xor
ljmp
lret
test
inc
xchg
adc
outsb
in
lds
adc
movsl
xchg
fucomp
mov
sahf
push
repz
mov
add
out
xlat
lods
jg
adc
jne
movsb
adc
mov
stc
cli
popa
push
mov
jns
sub
leave
daa
cmp
jnp
ss
rcll
shlb
cmp
sub
js
and
adc
push
mov
jns
scas
and
icebp
hlt
add
mov
mov
xchg
jg
xor
das
sbb
jg
pop
popw
mov
data16
inc
rolb
jecxz
lods
jg
push
sub
subb
or
dec
mov
loopne
and
icebp
clc
ljmp
push
fsubrs
aas
dec
dec
lret
cmp
push
scas
fnstcw
push
rcl
inc
nop
hlt
rolb
add
fsubrl
ret
mov
cli
jnp
inc
push
pusha
xor
es
mov
int
into
inc
outsl
inc
lahf
or
jl
push
push
xchg
adc
or
xchg
add
dec
lahf
add
in
and
pop
or
rclb
sbb
jg
popa
call
adc
adc
push
jns
xor
mov
nop
pop
inc
push
pop
xlat
fsubrs
testl
xlat
mov
sub
out
mov
and
push
testb
lcall
pop
cmp
sub
inc
hlt
outsb
adc
mov
test
xchg
mov
sbb
jb
mov
mov
mov
test
dec
pop
push
pop
int3
jg
jmp
push
ja
adc
push
adc
shlb
mov
cmp
lcall
lods
jno
cmp
in
pushf
jnp
test
mov
add
icebp
mov
js
leave
mov
pop
cwtl
xchg
outsb
pop
sub
add
cmpsl
push
fisubrs
inc
jmp
cmpsl
xor
xchg
mov
cmp
pop
add
jne
push
xchg
jns
lods
nop
xlat
lcall
jne
nop
mov
push
cmp
into
push
inc
outsl
sub
inc
mov
and
inc
adc
add
mov
mov
or
mov
push
xor
jl
and
mov
int3
push
in
cmp
mov
cmp
ss
xchg
or
xor
xchg
pop
cmc
push
push
sbb
les
faddl
sub
jbe
pop
push
pop
mov
mov
mov
fimuls
mov
pop
jnp
mov
push
xchg
push
cwtl
mov
movsl
jp
and
ds
rcrb
jne
jp
cmp
dec
pop
sbb
xorb
sbb
clc
nop
test
inc
pop
in
xor
jecxz
xor
fs
filds
fistl
loopne
dec
adc
xor
in
jmp
cmp
add
je
xchg
pusha
sarb
jl
add
cmp
pop
and
lods
mov
gs
cmpsb
fistps
push
mov
je
pushl
mov
adc
pop
inc
test
xor
loop
in
push
into
add
dec
cmp
fwait
or
push
xor
pop
fsts
xchg
sub
lea
movsl
push
cmc
mov
fmull
sbb
in
shlb
jne
loop
and
sub
jge
mov
imul
in
jge
sub
mov
jp
loop
and
push
sbb
and
jnp
cs
add
into
outsl
scas
add
outsl
in
inc
scas
popf
aaa
iret
lea
or
pop
lahf
in
add
aaa
in
hlt
mov
icebp
insb
add
add
das
test
or
jns
cltd
sbb
xchg
in
lea
mov
iret
jne
dec
inc
scas
dec
jae
xchg
fs
sbb
adc
adcl
inc
jo
adc
cmpsl
add
jmp
dec
pop
lret
adc
pxor
mov
icebp
scas
notl
rorl
or
testl
or
pop
aad
add
dec
cmpsb
or
push
jno
sub
dec
rorb
adc
gs
mov
pop
mov
pushf
fmull
call
push
scas
sti
rorb
mov
int
test
xchg
aad
xor
out
mov
imul
shll
leave
mov
loop
sbb
add
idiv
rcrl
inc
out
inc
in
mov
popa
rclb
cmc
lahf
mov
push
pop
cmp
outsb
and
outsb
inc
js
out
and
or
aas
and
mov
sbbb
cmp
je
outsb
dec
rcr
popa
dec
lret
and
push
sbb
mov
mov
mov
insl
adcb
xchg
sbb
in
stos
pusha
stos
xor
sub
add
sbb
int3
incb
out
add
hlt
sub
inc
outsb
cs
subl
jl
add
das
and
sbb
xor
imul
rcll
add
mov
cmpsl
jmp
out
imul
js
pop
xor
dec
push
cs
nop
testl
mov
repz
xchg
cmc
mov
xor
cmc
jle
pop
and
sub
int
mov
fadds
lcall
stos
stos
mov
mov
sar
xor
adcl
adc
sub
mov
ret
adc
stos
sbb
aad
mov
ficompl
call
or
arpl
jecxz
leave
pop
repz
daa
mov
mov
mov
mov
or
jae
jns
insb
popf
xchg
sbb
or
ret
pop
mov
adc
fildl
cmpsb
add
sahf
push
or
sbb
adc
aaa
aas
outsb
and
pop
push
mov
sbb
cs
arpl
roll
mov
imul
icebp
lea
scas
in
fcoml
cmpsl
movsb
sbb
les
and
dec
xchg
push
jmp
loopne
scas
sbb
adc
pushl
in
repnz
lret
lock
pushf
push
push
cld
sarl
fs
test
pusha
or
movl
stc
cmp
adc
sahf
push
and
arpl
jb
xor
pop
xchg
xor
pop
cwtl
push
jno
xchg
sbb
xor
xchg
cmp
pop
punpckhbw
mov
cmp
xchg
and
or
cli
repnz
popf
fiaddl
mov
stos
dec
pop
rcrl
test
mov
fldt
shrl
pushf
cmpl
repz
adc
into
lods
push
into
jp
xor
cltd
pop
mov
add
mov
in
adc
lds
inc
aas
mov
loop
cmp
adc
mov
loopne
and
cmp
aaa
out
mov
sub
jmp
mov
fimuls
ret
test
mov
xor
inc
popf
stos
movl
add
icebp
inc
pop
dec
jo
insb
xor
or
sbb
adc
fwait
paddsw
neg
pushf
cmp
adc
into
xlat
jecxz
movsl
fdivrp
loopne
add
cld
and
xchg
add
jnp
fldl2t
jb
aam
shll
mov
rol
imul
push
faddl
movsb
rcrb
rcr
lods
iret
xor
mov
and
or
mov
mov
and
movsb
jb
cmpsb
sub
inc
adc
inc
movsb
loope
and
and
xchg
jbe
xchg
push
inc
jmp
xchg
ficompl
mov
call
xchg
pop
jmp
push
je
loop
mov
add
mov
je
add
call
ret
outsl
les
cmp
andnps
popa
xor
movb
pop
add
andl
push
mov
ss
je
fsub
jae
icebp
push
sub
std
cltd
cmp
test
ficomps
jnp
ds
popa
decl
xchg
sahf
jmp
subb
repnz
mov
aad
xor
inc
cmpsb
xor
pop
inc
inc
imul
jmp
daa
mov
cmpsb
mov
into
mov
push
lcall
nop
inc
jnp
notb
in
and
scas
into
sahf
inc
dec
popl
fs
fs
sbb
cmpsl
cmpsl
push
push
mov
mov
cmpl
js
shr
sbb
jno
adc
sbb
xchg
push
cmp
jns
sbb
or
mov
inc
rcr
test
mov
imul
inc
outsl
pop
cmp
movsb
lea
les
add
push
pop
mov
pop
and
sbb
fistps
push
mov
push
gs
mov
sbb
int
mov
xchg
pop
hlt
sbb
sub
push
inc
cmp
lods
ljmp
loop
call
pop
cmpsb
jns
xchg
jo
or
push
lcall
imul
pop
xor
xchg
mov
int3
shl
sub
or
cs
sbb
popl
mov
xchg
xor
ja
and
lods
popf
cmp
inc
pop
pusha
sub
test
pushl
adc
inc
mov
adc
out
aam
js
fdivl
aaa
and
pop
adc
add
xchg
in
mov
mov
mov
mov
mov
xor
outsb
cld
inc
icebp
add
push
scas
pop
data16
adc
nop
push
mov
xchg
dec
aam
ss
aad
ds
jge
dec
push
mov
inc
aam
in
pop
adc
icebp
subl
xlat
fs
sub
mov
imul
jp
sbbl
mov
outsl
stos
ds
stc
hlt
inc
pop
jnp
bound
adc
rolb
rcll
cltd
fcom
push
mov
leave
cmp
test
subl
sbb
nop
jp
int
mov
shr
mov
cmp
add
adc
mov
or
jnp
hlt
cwtl
jno
in
cmc
mov
call
jbe
das
test
aaa
mov
push
cld
jo
inc
jp
fiaddl
mov
pop
push
cli
mov
push
or
or
push
or
push
or
ja
push
leave
adc
jbe
imul
sub
add
pusha
mov
jno
pusha
pushf
loopne
mov
xchg
repnz
push
mov
pop
add
movsb
aaa
andb
pop
int3
int3
cmp
mov
pop
push
jo
mov
mov
jb
lret
jmp
xor
jecxz
rol
les
push
outsl
push
dec
xchg
jo
addb
mov
jne
cmc
outsl
adc
pop
cmpsb
movsb
xor
lods
sahf
push
push
aad
xchg
push
aam
cmp
sbb
pop
xor
enter
push
add
fcompl
pop
cmp
pop
orb
or
cld
and
int
and
add
inc
inc
mov
push
data16
test
add
or
arpl
xchg
cwtl
rol
dec
cld
xchg
pushf
dec
gs
ja
faddl
fnstsw
add
ret
pop
fistpll
nop
lea
jns
jns
jp
nop
and
inc
jne
xor
and
xchg
adc
sub
clc
dec
das
std
lods
enter
aam
repnz
mov
or
rcrl
mov
ror
lcall
je
shll
ja
cltd
enter
adc
push
sbb
mov
iret
sbb
dec
outsb
xor
pop
sub
stos
fildll
imul
andl
xor
loop
movb
pop
insl
icebp
int
in
cld
sub
adc
cmpb
bound
push
stos
sti
in
mov
rcrb
cld
movsl
int3
pop
dec
lock
dec
xchg
aam
out
jp
xchg
mov
push
cwtl
ljmp
push
rclb
in
shrb
flds
mov
movsb
enter
int3
pop
and
jb
jnp
addr16
mov
xchg
push
sub
mov
lret
dec
adc
ja
cmc
int3
insl
gs
fwait
ret
dec
insb
push
adc
insl
fwait
mov
repnz
in
cmpl
cwtl
jg
les
imul
pop
mov
sub
or
fmulp
and
mov
mov
bound
xor
xorl
in
lret
jge
mov
iret
cltd
aad
lea
sub
push
imul
add
in
arpl
xchg
aas
cli
mull
mov
inc
iret
xor
sahf
xchg
pop
adc
lock
arpl
adc
push
push
push
cwtl
jo
stos
push
inc
dec
test
jne
jae
mov
jns
in
jno
xchg
adc
mov
insl
into
aam
std
jl
flds
iret
cmc
xchg
subb
jns
ja
mov
xchg
lcall
dec
mov
adc
test
fcoms
sub
push
cltd
mov
inc
je
push
sbb
arpl
fwait
movb
jge
in
aas
sbb
clc
cmpsb
stos
inc
push
inc
xchg
js
inc
mov
test
push
cmp
fldl
mov
nop
js
cmc
aam
loopne
inc
pop
xchg
arpl
lock
scas
mov
sub
or
mull
mov
cwtl
and
push
int3
xchg
js
or
push
fwait
or
shll
push
leave
daa
outsb
jne
ficompl
xchg
pop
rcrl
test
xor
sbb
stos
sbb
cld
pop
ds
mov
mov
orb
and
pushf
sub
out
and
hlt
mov
test
jb
cwtl
das
xlat
xlat
jg
pop
dec
mov
test
addr16
addr16
mov
push
divb
lret
mov
shlb
jle
inc
aad
test
loop
lcall
xor
movsl
fs
dec
out
int
lahf
cmpsl
jge
pop
jmp
movsb
jl
or
aas
push
pop
dec
pop
cmp
loopne
daa
jecxz
lahf
push
aaa
loopne
mov
pop
jbe
addr16
jp
mov
mov
cmpsl
enter
cmp
inc
sub
cmp
aad
jno
dec
aas
imul
and
jg
or
pop
test
es
idivb
je
imul
xchg
sbb
mov
out
pop
jno
fcomps
lods
mov
test
sbb
js
jmp
sub
out
mov
dec
insb
mov
insb
xchg
xlat
daa
dec
jbe
aad
and
jp
mov
mov
pusha
jecxz
leave
xor
subl
and
xor
push
jno
sbb
jge
popa
jns
adc
cmc
push
push
out
add
inc
ljmp
in
inc
pusha
fsub
aas
loopne
add
jns
das
pop
pcmpgtd
adc
stc
pop
add
and
mov
push
fwait
mov
mov
fwait
pop
xchg
dec
mov
mov
nop
sub
mov
hlt
push
lods
ret
mov
negb
addr16
mov
in
sub
sbb
mov
testl
add
jge
jns
loopne
arpl
jo
ljmp
jne
pop
sub
adc
add
pop
push
in
cmp
adc
cs
cmp
dec
sbb
mov
pop
clc
xor
cmpsl
push
cs
mov
inc
test
in
dec
repz
bound
mov
int3
movsb
xchg
test
cmp
add
push
data16
leave
xchg
jne
lret
inc
test
mov
inc
jmp
sbb
push
pop
push
push
fs
cs
mov
pop
inc
imul
mov
ja
lods
sbb
pop
das
fldcw
lret
xor
std
push
repz
sbb
or
cld
jne
fdivs
mov
mov
adc
inc
push
sub
sti
dec
cwtl
and
out
xchg
ljmp
mov
shlb
sbb
punpcklwd
aam
pushf
popf
mov
and
call
loopne
and
mov
mov
movsb
pushf
icebp
dec
sbb
js
add
xchg
dec
ljmp
mov
mov
stos
pop
mov
inc
mov
jl
pusha
aas
or
orb
aam
imul
into
call
mov
test
adc
ja
lds
fsubr
sub
lds
sub
jecxz
addl
ja
scas
mov
pop
xor
mov
xor
pusha
popa
inc
mov
inc
ss
or
sar
inc
cmp
or
push
ja
loopne
sbb
mov
mov
fsubrs
popa
cwtl
rcr
cmp
cld
inc
leave
lods
sbb
push
test
addr16
xor
fcmove
icebp
push
mov
lds
pop
add
dec
fninit
fmuls
mov
ret
xlat
imulb
xchg
sbb
fwait
pop
push
xchg
jno
pop
mov
or
scas
push
inc
fwait
mov
xchg
pop
icebp
popf
movl
popl
mov
popf
fidivl
mov
shll
stos
scas
js
fbstp
jmp
mov
sbb
imul
pop
xchg
dec
pushf
mov
sbb
std
lcall
dec
cmc
sub
icebp
push
xor
push
cli
mov
jne
idiv
cmpsb
mov
enter
repnz
xor
out
jecxz
fisttps
mov
aad
push
lret
push
ret
mov
dec
sbb
xchg
sub
inc
pop
cmp
repz
lods
push
sub
push
inc
and
xor
xlat
push
pusha
or
arpl
lds
add
push
subl
fwait
out
enter
aad
sbb
adc
test
test
in
sbb
int3
xlat
pop
mov
ja
cli
in
daa
rcrl
xor
test
add
jnp
mov
sarb
sar
lods
les
or
mov
xchg
xchg
lret
mov
lods
mov
lret
sbb
out
and
jmp
dec
cmc
gs
icebp
pusha
cltd
in
aaa
dec
lea
repnz
repz
clc
jge
cmpb
call
movsb
sub
adc
pop
mov
jp
lods
mov
pop
sub
nop
les
icebp
xchg
jmp
mov
pop
rcl
add
mov
jp
enter
loope,pn
xor
test
int3
sub
jo
mov
pop
add
fwait
pop
xorl
out
sub
cmpsl
pop
mov
sbb
lcall
rolb
jne
repnz
mov
mov
jae
shlb
xchg
fldl
sub
ss
sbb
jno
mov
push
mov
rorl
cmp
dec
rclb
dec
sbb
cmp
nop
xor
xlat
mov
sub
popl
xchg
test
xor
pop
jge
jne
mov
lcall
push
es
out
push
rcll
mov
lea
sbb
or
dec
lret
ljmp
xor
stos
sbb
sbb
shlb
push
dec
inc
inc
mov
add
daa
cld
mul
xor
xor
std
icebp
psubusw
sbb
mov
adc
xchg
pop
hlt
sbb
cmpsl
in
sub
dec
mov
cwtl
es
js
jo
inc
loopne
nop
ss
sbbl
fdivl
into
adc
fldcw
repz
clc
in
or
movsb
push
lods
nop
hlt
insb
mov
dec
test
sub
sub
adc
int3
cmp
mov
popa
push
jl
push
lahf
xchg
pop
mov
loop
js
cmp
stc
add
rclb
aad
pushl
ljmp
cmp
push
test
bound
out
mov
scas
mov
sbb
insl
add
out
jg
mov
push
pusha
cltd
fsts
mov
lods
movsb
rcrb
das
jecxz
dec
fwait
jne
add
mov
adc
sbb
push
arpl
sbb
or
pop
je
fadds
fiadds
loope
inc
pushl
sub
gs
xor
fidivs
test
adc
jecxz
loop
jecxz
aam
add
pop
dec
test
xor
pop
xchg
notb
fucomi
inc
xor
cmp
cmp
mov
jp
in
adc
xchg
xor
sar
mov
ljmp
adc
mov
jbe
xchg
lahf
mov
mov
jp
or
insl
adc
scas
jle
or
mov
add
jg
jo
sub
add
cmpsb
loop
xchg
test
xor
imul
es
jnp
jp
mov
or
or
xchg
xchg
andb
xor
out
sub
pop
in
pop
hlt
jnp
test
push
push
jl
rclb
xchg
inc
js
inc
add
mov
fisubs
xor
les
push
dec
int3
imul
mov
mov
std
lock
dec
xchg
shrb
inc
or
cltd
and
scas
insb
pop
push
sets
imul
and
jb
sbb
sbb
sub
xor
sbb
push
aam
arpl
xchg
cwtl
fstpl
xchg
shrb
in
inc
jp
test
push
sub
adc
and
pop
rcl
cmp
push
lods
out
pop
and
pop
pusha
xchg
sub
xchg
cwtl
stos
or
fadds
arpl
out
mov
cmp
xor
mov
pop
mov
inc
cmpsl
insl
xor
mov
pop
mov
in
jg
xor
mov
inc
loope
or
call
and
insl
ljmp
les
sbb
inc
cmp
jae
xor
xor
movsb
sbb
mov
js
lods
push
fists
loopne
mov
xchg
xchg
aas
sbb
movsl
xchg
or
jecxz
bound
hlt
mov
dec
mov
in
or
xor
and
sub
jns
add
inc
mov
jno
outsl
jo
cmp
fwait
push
sti
xchg
push
fst
ds
dec
xlat
dec
and
rclb
add
and
icebp
xchg
outsb
cmp
or
int
daa
mov
addb
or
push
inc
xchg
int3
aas
test
sub
xlat
ss
adc
lods
testb
adc
loop
jnp
mov
out
and
or
jle
mov
dec
int3
adcb
push
gs
out
pop
mov
xchg
push
sbb
fs
call
inc
push
adc
insb
xchg
mov
adc
aad
inc
or
inc
fdivrl
sti
dec
mov
jp
imul
lret
dec
pushf
jno
les
pushf
aaa
mov
in
int
lods
les
add
icebp
int3
and
push
fwait
push
dec
mov
lahf
jl
and
mov
xchg
cltd
or
jl
dec
loope
xor
leave
arpl
aas
rorb
lret
jle
faddl
loope
lods
shrl
into
repz
fcompl
adc
rcrl
aas
xor
jecxz
jne
pop
jae
test
jo
clc
jo
std
pop
inc
dec
mov
movsb
add
inc
lock
ljmp
pop
jle
or
stc
jb
ljmp
fisttpl
xchg
xchg
add
pop
sbb
daa
pop
inc
leave
jno
mov
mov
jno
push
subl
push
mov
xchg
lock
in
inc
repz
push
xchg
shlb
xchg
std
in
mov
loop
fdivl
imul
pop
fwait
jmp
and
lret
enter
bound
out
fisttpl
rcrb
pop
mov
add
je
inc
jns
add
adc
jnp,pt
test
jl
mov
sbb
int
pusha
mov
scas
sahf
sub
push
inc
xor
inc
ds
add
ja
imull
insb
mov
lea
or
nop
adc
frndint
lods
je
sbb
xchg
sbb
cmp
xchg
push
sub
incl
jp
rcrl
adc
mov
sbb
or
es
andb
cmp
mov
inc
or
pusha
push
insb
les
pop
push
out
subl
enter
dec
jno
notb
dec
insl
sub
mov
xor
stos
cltd
int3
arpl
repz
sahf
cmc
xchg
adc
jp
adcb
sub
and
inc
mov
mov
arpl
mov
shl
mov
mov
or
movl
int3
pop
fadds
mov
inc
shr
push
js
cmc
push
pop
add
fisttpll
and
push
jmp
or
clc
cld
je
sbb
push
push
push
cmp
add
xor
pop
push
rol
popa
inc
mov
into
fisttpll
insb
xor
pop
das
in
cli
xor
cmpsb
shrb
adc
cmpsl
sbb
int3
jl
sahf
add
xor
cli
jne
cmp
pop
test
in
fisttps
mov
lds
mov
xor
inc
sub
sub
sbb
jno
pop
push
mov
pop
lock
sbb
xor
push
jmp
mov
dec
loop
mov
and
mull
adc
cmpsb
xor
mov
sahf
lahf
mov
add
jmp
daa
mov
or
push
popf
jae
adc
cltd
dec
xor
insb
cli
lods
mov
ljmp
in
mov
mov
pushf
test
mov
pop
out
fdivp
shll
mov
enter
lds
pop
insl
add
adc
aaa
les
addr16
mov
sub
push
mov
pop
mov
ljmp
dec
lock
psrlw
pop
icebp
loop
pop
popf
ret
jecxz
inc
jns
push
pop
std
pop
and
adc
mov
lahf
shll
push
cmp
xchg
xor
xor
dec
iret
xor
sbb
shl
fimuls
scas
mul
lods
mov
cmp
dec
jecxz
push
insl
xchg
push
shrb
xchg
xor
adc
repz
inc
sbb
push
call
lock
add
in
pop
cwtl
mov
in
decb
mov
loope
lgs
aas
mov
mov
andb
in
cmc
std
mov
pop
sbb
mov
dec
jo
inc
and
mov
out
add
test
stc
cld
out
mov
inc
dec
mov
stos
push
adc
or
pop
icebp
fs
sbb
xchg
cmp
inc
xor
cwtl
adcl
das
icebp
adc
scas
imul
cmp
mov
cmp
sub
cmpsl
bound
imul
stc
fldenv
dec
jnp
adc
jecxz
mov
push
inc
popa
into
cli
ss
dec
fsubr
mov
or
call
mov
sbbl
jp
rcrb
mov
dec
fmul
jb
les
inc
cmp
sbb
xor
jl
mov
ret
pop
test
add
jns
lds
loopne
lea
icebp
push
mov
push
add
and
aas
mov
dec
xor
adc
iret
sbb
jns
pusha
jl
xorl
pop
pop
mov
jo
addr16
mov
xchg
add
pop
test
jnp
sub
mov
ds
pop
lcall
fisubrl
push
fwait
scas
pop
and
movzwl
or
mov
add
and
add
sbb
lods
sbb
dec
mov
shrb
adc
sbb
je
out
inc
sub
push
dec
jno
dec
clc
or
lods
cmp
jnp
sbb
sub
and
insl
out
sbb
lcall
je
loop
push
add
data16
shl
mov
mov
pop
dec
add
bound
out
xchg
mov
cwtl
aas
push
insb
shll
push
mov
cmpsb
mov
and
test
cmpsb
mov
addr16
push
rclb
push
mov
xchg
add
fldt
sbb
fs
pop
or
insl
popa
dec
xchg
inc
mov
int
pop
shl
push
ds
or
out
andb
and
mov
fidivrs
fwait
inc
adc
xchg
xchg
push
popf
mov
sbb
adcb
stos
mov
fwait
adc
imul
in
push
es
pushf
cmp
dec
mov
cs
mov
mov
push
pop
aaa
addr16
shlb
out
enter
dec
sti
into
jo
sahf
aaa
xor
sbb
pop
mov
repz
pop
mov
xchg
mov
cmp
xor
rcrl
cmc
shlb
and
int
ficoml
and
cmp
inc
jmp
pop
xlat
fwait
je
je
cltd
subb
jns
xor
cmp
inc
bnd
cwtl
movsb
dec
movsl
stos
jae
xchg
xor
inc
or
lods
mov
xchg
cltd
mov
int3
xchg
int3
out
test
xchg
fs
cmp
dec
ja
jns
mov
jl
push
lahf
jnp
inc
gs
push
add
fisubs
rcrl
sbb
inc
xor
test
lds
sahf
pop
lahf
push
push
adc
adc
lods
addb
add
pop
int3
rolb
das
add
pop
push
mov
mov
out
insb
xor
stos
xor
mov
mov
jl
xor
sbbb
add
pop
es
dec
push
sar
or
lcall
add
mov
pop
addr16
mov
mov
ficoms
or
lods
push
mov
mov
div
lret
bound
xor
jmp
lea
and
push
mov
jle
mov
call
push
dec
inc
imul
add
sub
insb
push
and
cmc
pop
push
out
aaa
ljmp
rol
sub
pop
lds
xchg
jae
test
mov
pop
xor
xchg
mov
lcall
scas
aam
js
fs
pop
bound
inc
in
mov
mov
ss
jbe
jmp
xchg
das
jmp
divl
test
shrl
push
rcr
repnz
clc
adc
sbb
into
sbb
push
xlat
jg
sbb
sub
shll
dec
xchg
adc
or
testb
shlb
cmp
in
cmc
out
sub
pusha
pop
jno
xlat
repz
adc
bound
push
adc
out
popf
mov
xorl
pop
imul
out
mov
adc
adc
xor
mov
enter
outsl
adc
rorb
dec
mov
fsubl
sahf
je
cmc
push
cmp
in
cmp
gs
lret
jae
outsb
aas
push
add
and
fwait
xor
push
jp
and
and
jmp
jecxz
and
jbe
xchg
jl
lods
divl
jns
inc
inc
inc
test
in
pop
mov
test
outsb
xor
mov
and
fdivl
sub
xor
rclb
pop
adc
sub
cli
pop
imul
mov
push
inc
ds
fisubs
test
and
jge
jns
mov
shll
out
cs
xchg
fwait
popa
add
jl
filds
jnp
lcall
inc
xor
mov
jle
in
lcall
ljmp
imul
lret
outsb
lods
mov
shr
or
jbe
popf
add
mov
mov
xor
cli
push
ja
movsb
loope
insb
and
xor
sub
xor
xchg
or
mov
mov
lret
shll
cmp
das
xor
push
decb
mov
rolb
int
inc
dec
outsl
push
fldcw
inc
mov
push
inc
push
das
std
enter
in
enter
insb
dec
push
mov
imul
testb
jmp
test
out
insb
mov
jns
jbe
sub
add
add
cmc
dec
sub
dec
xchg
stos
es
or
mov
nop
and
shl
fmull
cmp
mov
loope
aaa
fimuls
dec
aas
enter
inc
addr16
push
add
and
xor
ret
cmpsl
aas
cmp
or
jo
insl
push
mov
imul
movsl
mov
into
out
add
test
fdivs
lret
cmp
xchg
cmc
sbb
push
movsl
ss
inc
mov
xorl
dec
xlat
dec
movsb
and
sbb
pusha
push
mov
mov
mov
xchg
subl
mov
mov
jnp
sarl
dec
jge
fsubrl
jle
adc
mov
pop
mov
mov
lcall
fs
mov
andl
cmp
inc
push
pop
aad
sub
frstor
inc
sub
xchg
loope
sub
xchg
push
jge
dec
ret
std
jne
mov
mov
sub
loope
jp
jle
arpl
sarl
out
mov
aad
pop
sub
cmp
xor
mov
inc
and
movsb
pop
js
fnsave
test
or
iret
roll
cltd
lret
mov
xor
mov
call
sub
pop
insb
popa
inc
mov
cld
aaa
gs
loopne
mov
dec
test
movsb
test
xchg
adc
push
jns
add
or
mov
outsb
sub
lock
jbe
ss
pop
cwtl
and
pop
jbe
mov
add
push
es
cmp
loop
push
jo
cmovo
push
scas
cmp
mov
in
and
add
jns
xor
dec
add
pop
mov
shll
aaa
aad
sar
xchg
and
into
inc
adc
das
shl
xor
and
icebp
mov
std
pop
sbb
call
in
push
push
mov
test
mov
jp
push
add
xor
iret
rcrb
mov
pop
cltd
fadds
cld
out
jmp
arpl
das
xor
insl
jp
adc
es
ret
cmp
ds
pop
xor
inc
int
push
xchg
xchg
add
clc
mov
out
fst
test
sarl
shrl
xchg
xchg
sbb
scas
sbb
inc
das
add
or
mov
add
mov
adc
icebp
movsb
notl
or
mov
sahf
or
mov
mov
adc
and
cmpsl
xorl
jnp
and
loop
xchg
shll
or
js
mov
mov
rcl
adc
jb
test
cmc
sarl
dec
lret
pop
push
push
cmp
scas
aas
jno
movsb
mov
pop
cwtl
addl
inc
stos
fistpl
pop
jle
mov
and
add
insl
lods
lea
ret
or
pusha
xlat
xlat
aaa
push
and
jl
adc
cmp
pusha
je
jne
push
lcall
fists
das
add
mov
cmp
es
movsb
jle
clc
mov
add
xor
int3
std
jg
jno
mov
inc
mov
or
pop
pusha
push
in
sbb
inc
mov
scas
sti
add
mov
in
loop
outsb
xor
push
fsubrs
jbe
jecxz
imull
pop
mov
jbe
jecxz
sbb
push
out
into
fsubl
dec
lock
out
xor
push
mov
test
mov
in
movsl
das
xchg
cmp
popa
mov
mov
jo
cmpl
cld
jecxz
lret
shrl
add
cli
fdivs
jae
sbb
int
lahf
jmp
mov
lods
mov
lods
into
test
pop
orb
sbb
in
add
frstor
dec
stc
push
pushf
imul
mov
pop
stos
jle
sub
or
xor
sub
out
mov
lret
sub
add
pusha
repnz
aam
insb
mov
add
nop
mov
add
mov
or
jns
sbb
adc
push
sahf
xchg
lahf
pushf
xchg
mov
ret
mov
std
icebp
lea
popa
rorb
xchg
xor
lahf
push
test
ja
mov
sbb
push
mov
mov
int
rorb
ret
mov
mov
mov
jne
ficomps
sbb
push
xor
addr16
fwait
lock
sahf
pushl
pop
dec
adc
push
xor
inc
mov
sbb
sti
pop
aaa
imul
mov
fndisi(8087
in
add
cmp
pop
sbb
stos
and
or
test
and
jmp
jg
jmp
stos
les
sbb
push
repz
pop
mov
fwait
cmp
inc
outsl
cmpsb
sub
and
dec
xchg
dec
xor
sub
mov
mov
out
lds
mov
cmpsl
insb
int
sarl
inc
mov
mov
mov
mov
push
or
jecxz
leave
cmpsl
test
into
repz
ljmp
mov
leave
ds
pop
xlat
pop
pmaxsw
fistl
xchg
fucomp
or
and
cmp
leave
sub
fcoml
or
dec
fidivl
loop
mov
adc
push
cmpl
aad
mov
mov
inc
fstpl
xchg
adc
inc
jns
fcmovne
popa
jae
or
test
and
loopne
es
or
ljmp
sub
sub
les
cmp
or
sbb
xchg
pop
cltd
lcall
es
push
pop
pop
mov
xor
clc
sub
mov
stos
pop
xor
scas
mov
lods
xchg
push
jns
xor
std
inc
and
lock
out
je
mov
adc
dec
and
add
scas
lahf
jno
mov
js
mov
and
push
mov
imul
cmpsl
mov
dec
pop
insl
push
inc
pop
jge
leave
iret
add
mov
sahf
and
mov
mov
xchg
fldl
addb
movsl
jo
adc
mov
shll
lock
sub
push
xchg
rol
inc
lret
mov
or
out
aam
hlt
push
xlat
push
xorb
int3
or
data16
leave
xchg
xrelease
jge
mov
ljmp
inc
mov
pop
daa
iret
ffreep
pop
stos
icebp
leave
or
ja
sti
imulb
aaa
std
cmp
ja
xor
lods
jo
cmp
shlb
jne,pn
jmp
fcoms
stos
movlhps
icebp
pop
lock
in
and
fsub
enter
in
pusha
arpl
adc
sub
jo
cmp
in
add
and
push
loop
xchg
xor
cmp
mov
add
pushl
push
ret
loopne
push
popl
sbb
mov
dec
xchg
push
repz
ficoml
push
movsl
outsl
out
test
add
mov
adc
inc
push
mov
pop
fistpll
fldcw
cmp
daa
out
test
movsb
movb
pop
ret
inc
push
out
movsb
loope
xchg
test
dec
xchg
insb
ret
imul
pop
dec
in
inc
ret
push
adc
mov
mov
ret
pop
dec
push
xchg
cwtl
and
jl
sub
in
dec
out
or
mov
sti
divb
addr16
jmp
cltd
cli
lret
hlt
mov
bound
ret
pop
mov
inc
fwait
cs
lret
cli
sbb
nop
scas
sub
int
mov
push
popa
arpl
das
or
std
sub
subb
xor
pushf
test
mulb
or
dec
jnp
ja
into
loop
ret
hlt
cli
int
push
pop
mov
out
test
mov
push
cmp
insl
fwait
mov
mov
in
lods
xchg
dec
push
mov
push
fldenv
clc
outsb
cmc
pop
nop
add
adc
lods
iret
test
call
clc
push
dec
add
xchg
movsl
leave
fs
aaa
cmpl
and
jb
mov
mov
jl
out
adc
push
stc
rclb
xchg
pop
int
push
pushf
sbb
loope
leave
mov
push
fldenv
jo,pn
pop
pushf
cmp
or
aad
repz
aas
xor
pushl
xchg
jnp
fcmovnbe
pop
xor
lds
xlat
movsb
jae
pusha
daa
inc
rorl
jl
pop
mov
or
movsl
or
or
mov
inc
das
sti
mov
jge
dec
psubusw
or
aaa
insb
aam
stos
cmp
and
mov
add
repz
movl
push
mov
mov
lods
lea
jae
das
mov
xchg
sti
pop
inc
fiaddl
mov
insl
lods
enter
adc
bound
das
pop
pop
ds
or
push
stos
out
ja
fnsave
fwait
andl
rcll
dec
xor
add
cmp
xchg
adc
ficoml
aad
popf
aam
adc
aam
pop
mov
in
xor
cmp
sbb
ljmp
pop
jne
dec
sbb
adc
popa
adc
and
or
xchg
arpl
cmpsl
andb
repz
dec
sbb
sub
or
jae
lds
inc
test
mov
lcall
xor
or
and
lods
loop
xor
add
jecxz
pushf
ret
loop
inc
jbe
mov
fwait
lods
xchg
bound
or
add
dec
adc
jo
jno
add
mov
or
xor
mov
stos
add
divb
sub
movsb
or
sub
pop
jne
test
lods
xor
popa
out
shlb
sbb
jae
xchg
lods
scas
mov
aad
inc
lock
imul
call
inc
pop
scas
hlt
inc
dec
mov
test
push
add
mov
sti
add
movd
and
orb
mov
dec
sahf
pusha
pop
out
movsl
jae
and
cmp
push
addr16
popa
mov
mov
cmp
jecxz
jmp
adc
adc
push
data16
pandn
jb
aad
or
mov
arpl
int3
jle
mov
xorl
xchg
ss
xor
mov
sub
fcomps
pop
sarl
push
lahf
jecxz
cmp
bound
mov
idivl
mov
inc
cmp
xor
pop
in
cmp
je
cmp
cs
dec
mull
outsl
stos
pop
push
jmp
popf
cmp
add
test
adc
sbb
aas
cmp
or
mov
loopne
push
test
mov
mov
roll
mov
movl
out
in
dec
lahf
rorl
cmc
mov
out
and
push
addr16
cwtl
cmp
jl
and
out
mov
inc
outsb
sub
sub
sub
xchg
aam
cmp
out
mov
loop
fistps
push
mov
test
jbe
xor
jb
push
out
data16
jne
shll
dec
dec
das
cmpl
or
stc
test
mov
pop
and
push
pop
je
lods
inc
or
popf
pop
ljmp
es
nop
shrl
pusha
gs
js
inc
cltd
iret
test
mov
push
jg
cmpsb
sbbb
arpl
sbbb
popf
mov
test
sbb
enter
pusha
jns
rcr
cmp
out
cmc
jecxz
mov
in
dec
add
cmp
inc
pop
icebp
add
lret
push
outsb
test
outsb
xchg
sub
add
dec
xlat
jnp
shrl
add
mov
or
or
lds
and
dec
push
mov
pop
pushf
loopne
stc
mov
movsl
sbb
popl
lret
cmc
popf
lods
rcll
fwait
inc
cli
insb
sarl
pop
mov
mov
add
or
mov
fildll
int
inc
push
push
dec
lahf
je
das
lcall
pop
xchg
insb
dec
mov
scas
popa
cmp
or
mov
cmpsl
cld
fs
adc
add
jne
xchg
push
lds
pop
sbb
andl
ja
push
add
and
mov
xchg
and
push
sbb
ds
xchg
in
neg
and
inc
andb
push
xchg
fidivrl
push
loopne
fs
cwtl
lods
jle
lods
fmuls
dec
test
inc
mov
in
xorl
push
je
sbb
lahf
sbb
cmp
sub
scas
pushaw
mov
push
mov
sub
or
ds
cli
and
mov
stc
cmp
cmpl
faddp
add
icebp
mov
xchg
sub
adc
lea
mov
or
pop
push
adc
in
or
addr16
lcall
dec
mov
add
mov
scas
pop
jns
in
sub
jge
mov
lods
push
je
jnp
xchg
sub
lock
push
pop
sar
xchg
bound
adc
icebp
fwait
leave
cs
ljmp
stc
sahf
mov
jbe
cltd
rolb
xor
shr
mov
lods
pop
sarb
pop
lods
lods
test
dec
or
cld
mov
enter
dec
xor
inc
adc
cmp
push
fsubrs
mov
int3
mov
cmp
mov
pop
mov
push
push
xchg
mov
rolb
lds
adc
iret
jmp
test
sub
shll
stos
and
aaa
scas
int
clc
and
inc
ja
pop
fadds
out
pop
mov
pop
out
push
ss
mov
arpl
jmp
mov
and
popa
cmp
and
cmp
or
pop
shrb
imul
add
mov
loope
cmp
xor
push
aam
orl
pop
sub
mov
insb
mov
jo
pop
fwait
and
mov
lods
add
pop
push
xchg
imul
xor
adc
sbb
jp
ret
jp
mov
mov
dec
or
and
pop
sti
sbb
push
xor
pusha
mov
sub
loopne
call
mov
data16
push
sti
push
adc
stc
subb
out
test
jp
xchg
movsl
mov
mov
jae
aam
inc
xor
dec
cmpsl
rclb
xor
mov
int
lret
pop
mov
fcomps
fcomps
mov
jg
lcall
mov
xor
stos
jae
movsl
std
cmp
in
cmc
arpl
out
subb
mov
dec
mov
stos
pop
loop
mov
cld
and
sbbl
cmp
dec
dec
mov
mov
pop
scas
test
or
je
ficomps
dec
xor
fs
mov
mov
hlt
loop
xor
inc
xor
sub
cs
icebp
xchg
adc
test
iret
mov
push
jle
mov
push
sbb
mov
outsl
push
mov
dec
lahf
xlat
outsl
mov
clc
inc
into
in
push
jecxz
sub
jbe
mov
test
and
adc
push
mul
stc
loop
popa
sub
xchg
das
das
ja
lock
jae
clc
out
and
cmp
in
dec
inc
push
and
push
cmp
outsb
mov
fstl
lret
adc
lods
mov
inc
add
fs
mov
ficomps
jecxz
xchg
leave
pop
adc
lret
mov
sbb
mov
insl
xchg
pop
out
fucomip
out
push
and
xchg
add
andb
fdivs
mov
and
add
dec
mov
jge
stc
push
or
call
dec
popf
clc
mov
int
gs
xchg
push
js
cwtl
push
mov
not
sub
xor
cmp
pushf
pop
sahf
adc
iret
fsubp
push
push
test
sbb
sbb
jle
push
mov
xchg
aaa
inc
jmp
stc
push
imul
nop
push
pop
pusha
xor
enter
je
xchg
sbb
mov
dec
mov
ss
mov
dec
repnz
arpl
xor
nop
lods
decl
xchg
xchg
xchg
out
ds
fcmovnbe
mov
inc
xor
clc
sub
push
aaa
lahf
push
fsubrl
sub
jge
es
pusha
and
sub
jle
mov
int3
stos
xorb
or
gs
xor
sahf
jb
arpl
sub
pop
pop
ficompl
or
add
scas
and
jbe
mov
addr16
rolb
loope
cmpsb
jne
xchg
push
test
inc
rorl
add
sahf
cmpsl
arpl
imul
adc
out
xchg
pusha
data16
lds
xor
pop
leave
orl
es
jmp
cmp
sub
sub
rcrl
cltd
rcrb
mov
cld
in
in
inc
dec
icebp
cmc
adc
cmp
jge
gs
cmp
mov
movsl
ljmp
xchg
rcl
add
fcompl
mov
jo
adc
mov
adc
andl
clc
push
mov
add
adcl
mov
inc
fs
test
pop
dec
xchg
jge
dec
cmp
mov
repz
fwait
inc
pop
xchg
out
stos
jl
xchg
inc
arpl
push
cmp
sub
int
jp
xor
iret
xchg
and
push
push
std
or
loope
and
add
jne
sahf
lds
or
gs
pop
imul
push
mov
popa
mov
ss
inc
push
push
mov
push
dec
nop
push
adc
jb
loop
scas
jne
xchg
mov
imul
push
outsb
test
sbb
jp
jo
pop
ss
mov
out
pop
inc
cli
subl
inc
push
lods
mov
add
sbb
mov
xlat
mov
fs
xchg
or
lds
cmp
jbe
test
push
or
pusha
inc
mov
mov
mov
mov
push
inc
or
mov
mov
xor
mov
sbb
inc
pop
push
stc
push
sbb
mov
jecxz
daa
dec
movsb
push
add
cwtl
dec
sar
testb
sub
mov
jno
pusha
or
inc
cmp
push
test
inc
in
ljmp
es
add
stc
scas
bound
imul
hlt
inc
call
xchg
dec
dec
insb
add
gs
xchg
aaa
jge
shrl
popf
out
das
jmp
adc
jbe
lea
cmpsl
mov
out
fisttpl
in
popa
mov
cmp
lods
jmp
arpl
xor
jae
les
shrb
jge
stc
mov
push
mov
add
jno
fwait
in
inc
and
push
adc
xchg
inc
daa
pop
loope
add
add
lret
lock
xchg
mov
mov
scas
mov
sbb
cwtl
repnz
dec
fldl
pusha
sti
xor
cld
jae
sbb
fucomip
testl
out
xor
out
mov
idiv
ljmp
adc
dec
push
xor
inc
add
insb
adc
in
or
push
xchg
test
jno
pop
dec
popa
lods
xchg
jmp
leave
push
js
cmp
and
repz
lret
xor
sub
adc
push
xor
loope
test
xor
lret
or
add
ds
sahf
xchg
mov
outsl
cmp
cwtl
xor
clc
lahf
cmp
lods
pusha
pop
jo
mov
push
popf
xor
mov
fsubl
rcrl
fists
jge
stos
adc
fucomi
xchg
dec
bound
push
cmp
sbb
pop
jge
mov
pop
mov
push
mov
push
test
and
mov
in
sbb
scas
mov
push
add
mov
cmp
mov
fstpl
sbb
adc
pop
xlat
dec
mov
fnstcw
push
cs
out
in
pop
loope
and
insl
movsl
cmp
cld
push
inc
add
sub
dec
sub
or
pop
pop
andl
aad
sub
jnp
mov
outsl
mov
scas
pop
jbe
popf
lea
std
xchg
test
arpl
out
es
xchg
push
mov
movsb
dec
popf
aam
cmp
aas
mov
std
popa
out
adc
and
ret
stc
in
xlat
add
jl
into
int3
loopne
jmp
lods
leave
xchg
out
or
popf
fcompl
cmpsb
mov
test
hlt
cmp
push
pop
adc
dec
dec
xor
jbe
pop
in
mov
inc
test
xor
hlt
sub
daa
cmpsb
stos
inc
leave
adc
ret
inc
mov
lahf
lock
inc
mov
sub
outsl
loop
pusha
aas
mov
push
jge
pop
enter
add
jb
jbe
lea
xchg
inc
arpl
nop
jns
mov
add
sub
ret
icebp
jmp
pop
push
movb
or
ror
mull
fildll
repnz
mov
inc
mov
pop
fistpl
sbb
mov
push
mov
push
adc
lret
daa
outsl
je
cmovnp
orl
sbb
xchg
testl
dec
xchg
fdivp
jg
call
adc
inc
repz
add
lods
daa
ljmp
xor
mov
pop
adc
imul
adc
fstp
sub
xor
mov
das
mov
jge
xor
cli
jae
mov
jne
xchg
sbb
push
popf
aam
xchg
jmp
cmp
ja
jmp
scas
cmc
loope
imull
out
shll
jp
mov
fwait
icebp
adc
cmp
sbbb
and
les
mov
leave
cmc
pop
mov
arpl
flds
arpl
into
mov
mov
ret
negl
sbb
pop
and
das
xor
out
or
nop
stos
pop
dec
mov
lods
jo
negb
scas
xor
add
pop
push
ss
ficoms
test
pop
fldlg2
mov
test
inc
sub
test
jae
xorb
daa
lds
fistl
fidivrs
sub
and
notl
stos
push
aaa
movsb
mov
mov
pushf
and
cmpsb
cmp
dec
lods
ljmp
inc
pushf
and
push
xor
pop
lret
xchg
neg
mov
push
cmp
sbb
cmp
adc
addb
test
dec
mov
sbb
mov
pushf
loop
lds
push
mov
add
or
addr16
cld
js
inc
in
and
add
jnp
push
push
popa
xchg
jg
add
leave
cli
mov
jge
mov
push
ss
cli
or
push
adc
xor
inc
xor
lret
addb
jns
fmuls
mov
addr16
push
pop
lcall
cld
pop
pop
insb
sbb
jmp
ljmp
mov
fsubl
lods
das
hlt
dec
pop
push
mov
rcl
xor
adc
pop
addr16
mov
pop
xor
ret
dec
add
adc
fadds
and
sub
xor
inc
jp
loop
shll
sub
testb
add
icebp
mov
shrl
or
pushf
xchg
scas
pop
ljmp
jns
or
dec
jmp
mov
ret
fadd
sbb
dec
jmp
divb
fwait
xor
test
lret
pop
fimuls
daa
lods
aas
mov
push
pop
sub
pop
mov
pushf
pusha
ds
je
mov
mov
mov
stc
mov
xchg
push
fldcw
and
out
mov
or
pop
push
fldt
xchg
outsb
sub
sbb
arpl
xlat
mov
divl
adc
icebp
jecxz
les
out
fisttpll
xchg
inc
shll
push
xchg
jne
popf
sti
or
pop
stc
in
push
cmp
push
pop
lds
mov
jl
dec
adc
push
cmp
popa
pop
stc
mov
sbb
cmp
inc
add
xor
cmp
outsb
lods
mov
pop
test
xchg
bswap
jns
iret
pop
testb
repnz
inc
out
push
sbb
incb
xor
fldz
daa
jae
lea
xchg
je
hlt
ds
into
icebp
rcll
xchg
pop
mov
xchg
push
or
add
push
push
cmp
xchg
ss
into
shrb
or
dec
loop
fdivrs
lret
push
push
fcoms
lret
pop
iret
movsb
data16
loop
push
or
mov
sbbb
fidivrs
movsb
decl
inc
insb
push
cs
in
notb
and
test
adc
add
sbb
push
mov
aad
in
or
subl
rcrl
cmp
fildll
or
movsb
mov
in
flds
mov
or
shl
out
sbb
sbb
dec
dec
clc
incl
roll
out
mov
inc
pop
imul
inc
ret
mov
push
pop
pop
jnp
repnz
movsb
xchg
inc
mov
cltd
fucomp
loop
xchg
mov
adc
xor
jbe
sub
mov
adc
aas
mov
jb
lcall
xor
imul
xor
mov
nop
add
adc
jg
sub
inc
cmp
cmc
add
sub
jnp
mov
div
inc
test
cmp
aam
cmpsb
je
fwait
inc
rorb
arpl
lret
psraw
pusha
dec
je
xor
jo
pushf
pop
roll
test
aad
insl
jbe
sbb
in
mov
popf
jb
sbb
lock
bnd
mov
mov
pop
icebp
into
cmp
dec
dec
mov
loopne
das
pop
xor
fxch
push
jl
jmp
jecxz
outsl
pop
add
fs
and
testb
mov
pop
push
mov
scas
call
out
adc
ss
dec
mov
sub
and
std
mov
push
shll
xor
adc
inc
test
imul
aaa
imul
cmc
sti
daa
push
popa
mov
jno
fadd
mov
cld
jbe
pop
popl
xchg
mov
add
leave
xchg
movsb
testl
and
into
movsl
subl
rcll
xchg
mov
mov
pop
fwait
sti
inc
int
jmp
xchg
mov
inc
frstor
push
adc
lds
out
and
clc
cmp
xor
mov
xor
cmp
nop
imul
pushf
cmp
push
add
repnz
mov
push
inc
lock
mov
fdiv
push
cmc
jbe
cmpsl
jmp
push
sbb
dec
jbe
inc
mov
push
sub
dec
cwtl
pop
jbe
hlt
je
cs
adc
jle
mov
pop
rolb
cltd
sub
fidivrs
std
dec
insl
roll
and
lret
xor
sub
jno
jle
data16
lret
or
inc
pop
ret
pusha
ss
mov
or
icebp
mov
lods
cli
arpl
dec
in
pushf
inc
or
icebp
jecxz
mov
or
jle
lcall
mov
sbbl
sub
arpl
push
pushf
sub
aam
sarl
adc
cwtl
mov
sub
fucomp
sti
adc
mov
popw
xchg
hlt
in
jnp
loopne
adc
add
sahf
push
in
pop
fcomps
imul
sbb
call
inc
jae
out
inc
pop
jecxz
mov
mov
xchg
movb
lds
push
das
push
mov
mov
lock
sub
gs
mov
push
lahf
jmp
pop
jae
outsb
lods
mov
jno
or
sub
pop
and
pop
leave
dec
mov
inc
pop
mov
movsl
mov
sbb
dec
jecxz
xchg
out
or
push
arpl
out
js
loope
ret
cwtl
xchg
aas
out
ret
adc
adc
sarb
xchg
std
stc
mov
out
or
inc
pop
aam
test
in
xchg
sbb
ds
sub
lea
into
add
fdivl
into
jae
aam
xchg
jecxz
cmp
xchg
sbb
ret
or
cmpsl
out
fwait
inc
stos
push
out
popa
mov
mov
sahf
iret
js
add
data16
popa
mov
mov
mov
outsb
sbb
inc
adc
pop
lahf
shr
fisubs
outsb
sub
repz
lods
mov
cmp
add
lcall
flds
fnstcw
sbb
loope
pusha
in
sub
jg
pop
push
arpl
add
lret
mov
sahf
call
jno
mov
push
js
push
scas
jmp
inc
loop
push
cld
enter
push
push
repz
cwtl
jle
xchg
lods
push
xor
pop
push
cmp
test
popf
sbb
scas
cmp
popa
mov
xchg
cmpsb
aad
rcll
pop
sbb
jge
inc
pop
in
push
or
cli
jbe
lea
and
mov
adc
insl
jecxz
xor
repnz
and
push
add
add
fstl
jno
pop
shll
lock
mov
ja
faddp
and
shrb
push
or
cmpsl
cwtl
add
mov
xlat
or
testb
jbe
jle
mov
outsb
cli
stos
fisubrs
mov
jno
iret
sbb
popf
dec
push
inc
call
adcl
inc
mov
div
or
cmp
pop
sbb
repz
dec
in
int3
dec
clc
aaa
es
fiadds
inc
cmpsb
xor
leave
sahf
cmp
popf
mov
rcll
mov
enter
out
jbe
loope
test
add
in
and
sub
ss
add
sti
arpl
roll
lds
fstl
outsb
push
imul
mov
dec
wbinvd
out
or
lcall
and
movsb
mov
sbb
jno
scas
jle
cmp
pop
push
in
mov
xorps
push
inc
lret
in
jl
fcompl
stos
inc
insl
push
insb
int
js
pop
rcrb
scas
adc
lods
sub
push
mov
scas
aaa
lods
gs
pop
mov
outsb
xor
jb
rcll
loope
aad
push
push
cmpsl
xor
mov
adc
cli
cmp
test
xor
mov
xor
mov
lock
ljmp
insl
clc
fstps
scas
add
iret
cmp
pushf
cmpsl
and
pop
lods
or
es
lods
xchg
jg
cmp
sub
js
mov
in
xchg
lret
and
xchg
popf
inc
dec
mov
mov
inc
repz
mov
pop
sahf
daa
sub
scas
inc
in
fsubp
mov
std
rcll
adc
pushf
push
inc
pop
test
cmovne
inc
and
pop
adc
pop
cmp
cs
inc
imul
addr16
xchg
jmp
and
adc
jle
leave
add
mov
pop
xor
xor
in
jb
clc
sbb
shrb
in
or
mov
sahf
jae
jg
js
leave
jg
js
loop
inc
rcrb
fiaddl
lock
and
psrlq
out
push
int3
jnp
xor
ret
dec
ret
jecxz
mov
aad
je
and
into
inc
insl
daa
and
mov
add
hlt
mov
push
mov
dec
ds
xor
sub
add
std
insb
xchg
ljmp
xor
or
push
sbb
mov
imul
aad
pop
add
lret
pusha
mov
cmp
inc
sbb
and
xor
popf
adc
dec
imul
mov
jae
aad
pop
or
and
cmpsb
dec
incb
test
mov
sub
idivl
test
ret
sbb
repz
inc
lcall
in
jbe
pop
xorl
outsl
xor
imul
adc
push
adc
push
pop
movsb
fwait
pop
je
or
and
iret
and
mov
rorb
sbb
lret
cmp
or
shlb
jp
jns
inc
jns
icebp
add
into
fimull
mov
and
mov
mov
sbb
adc
or
pop
stc
aam
adc
aad
fbld
rorb
daa
test
push
xor
xchg
add
data16
xor
push
ficomps
adc
int
inc
ret
shr
cmpsb
imul
sub
shl
sbb
mov
pop
jae
inc
jge
dec
jge
pop
ds
fisubs
lods
sub
add
je
lods
or
pop
in
nop
push
and
rcl
xchg
xchg
fdivrp
inc
dec
adc
and
addr16
hlt
pop
and
mov
and
xor
pop
pop
mov
ret
cmp
icebp
and
test
sub
in
add
les
inc
repnz
jle
pop
aaa
mov
inc
dec
mov
and
or
sbb
dec
cmp
ja
dec
jle
push
push
das
or
nop
jae
out
xor
pop
xchg
jl
stos
movsl
and
add
inc
divl
mov
adc
mov
test
xorl
popa
arpl
add
mov
or
rcl
cmpsl
rcr
ljmp
mov
pop
dec
or
stos
adc
jbe
jecxz
fiadds
xor
or
push
jnp
or
or
pop
push
mov
scas
fst
stos
lods
rorb
mov
dec
lods
cli
dec
scas
enter
pop
mov
jae
popf
mov
add
or
jbe
dec
mov
jecxz
cmpl
lods
test
jo
mov
insl
adc
sbb
and
dec
pop
lods
push
loopne
xor
in
pop
or
cltd
xchg
or
test
insb
xor
lcall
pushf
adc
int3
jne
mov
inc
ret
repnz
insl
sbb
subl
cmovno
adc
inc
clc
sbb
mov
lds
jmp
and
stc
mov
cmp
jle
fisttpl
jns
shr
lods
sbb
hlt
andl
cmpl
sahf
mov
fs
out
sub
je
cltd
pop
adc
psrlq
pop
subl
mov
cmc
sub
mov
mov
ds
imulb
rol
mov
fsubs
lods
mov
das
pop
pushf
in
mov
or
addr16
jg
add
mov
es
ja
add
cli
mov
push
outsl
push
mov
pop
pop
adc
xlat
pop
pusha
push
push
or
push
push
pop
lcall
or
xchg
aad
jecxz
popf
outsb
push
aaa
push
adc
pusha
xor
aad
and
dec
jge
mov
inc
pushl
cmc
pushf
loop
stos
loope
jbe
bound
push
inc
or
repz
inc
adc
mov
mov
out
adcb
jb
push
frstor
icebp
add
js
sub
jb
int3
lahf
xlat
enter
sti
pusha
xor
les
xchg
in
xchg
xor
cmp
jns
sahf
mov
shrb
and
mov
lds
inc
add
pop
out
loopne
clc
xor
jge
mov
mov
cmpsl
jb
cmp
jnp
sub
and
mov
lahf
mov
jg
in
call
cmc
jp
inc
sbb
xor
aam
jnp
push
leave
lock
cmp
jmp
cwtl
mov
pop
out
outsl
les
mov
movsb
loopne
scas
hlt
aaa
xchg
ret
xchg
lret
in
cmp
jbe
push
sub
cwtl
adc
jmp
jae
mov
sub
jae
mov
es
push
xor
ljmp
fisubl
pop
aad
mov
in
xchg
mov
dec
inc
je
xor
add
int3
andl
adc
jmp
inc
cwtl
cmp
pop
fisubl
xchg
add
int3
enter
ss
popf
mov
lds
inc
push
cli
lcall
push
mov
orb
rolb
fldl2t
in
test
andb
lods
jbe
pop
imul
outsl
jmp
jbe
ljmp
ljmp
aam
sbb
pop
xor
push
fmuls
aam
cmp
push
lret
in
cmp
shll
push
cmpsb
xchg
dec
sahf
xlat
into
ja
inc
mov
fwait
xchg
fs
or
lret
cli
jp
and
or
push
stos
pop
test
xor
jbe
inc
lahf
enter
in
xchg
jo
jae
push
es
ja
popa
test
test
inc
imul
ret
sub
jbe
mov
inc
out
js
scas
ret
xor
mov
xlat
or
push
arpl
lcall
lock
pop
sub
push
xor
push
jp
cmp
enter
fmulp
call
mov
fldcw
div
fldt
aas
jo
neg
add
test
out
dec
dec
cmp
sarb
sbb
cmp
sub
xor
mov
adc
popf
test
test
sbb
dec
adc
imul
xor
lea
mov
out
fsubl
pop
pop
mov
iret
sbb
pop
cld
cmpl
je
xchg
in
ljmp
lock
in
cli
loop
and
mov
and
es
cmp
xchg
jle
push
sbb
std
adc
xor
jmp
out
ret
sbb
mov
mov
arpl
stos
je
inc
ljmp
aam
mull
push
iret
lret
push
inc
jl
xor
dec
cmp
jae
cmp
call
loopne
aaa
xchg
and
add
arpl
push
add
repz
addr16
mov
stc
cmpsb
add
daa
or
cmp
ss
ret
arpl
xchg
push
sub
cmpsl
jg
in
xchg
dec
out
and
inc
dec
xor
xchg
shl
push
jne
movsl
int
rcrb
cmp
cwtl
insb
cwtl
adc
sbb
mov
fadds
mov
jo
jg
movsl
push
jne
pusha
lcall
repz
fnstcw
adc
dec
push
cmpb
stos
cmp
imul
xchg
and
push
addr16
je
stos
add
test
jb
insb
popa
dec
sahf
sub
rclb
adc
sub
nop
daa
out
xchg
call
mov
and
or
or
push
pop
pop
bound
jmp
sbb
ficomps
pop
pop
and
mov
cmp
xor
xor
es
mov
mov
decl
mov
mov
out
inc
insb
cli
popf
test
das
in
ds
leave
or
mov
jg
xchg
into
lret
jno
rcl
test
mov
ret
push
loopne
insb
add
pop
gs
jle
leave
lret
iret
add
ljmp
sbb
adc
pop
xor
pop
jb
sub
xchg
xchg
inc
cmpsl
aam
sti
jae
push
nop
push
jmp
or
pop
sti
push
fstl
adc
hlt
or
pop
je
pop
mov
mov
xor
pop
xchg
addr16
iret
lds
dec
outsb
and
mov
cmp
sub
xlat
sbb
pop
add
inc
cmpsl
adc
cmc
cmp
push
adc
cmpsb
inc
nop
adc
inc
push
jge
in
out
push
mov
jl
add
or
mov
incb
aas
mov
mov
test
push
mov
and
or
xor
xor
add
sbb
leave
mov
sbb
xchg
jnp
push
sub
lods
das
sub
xor
jg
add
lcall
fisubs
xchg
test
mov
mov
out
sub
ss
mov
sbb
inc
sbb
cli
cltd
add
fcomip
std
or
rclb
test
and
in
into
mov
lret
fidivrl
push
sub
pushw
adc
xor
sbb
and
out
rcrl
test
or
jnp
pop
inc
mov
std
xorl
imul
mov
mov
cmc
push
sahf
add
push
and
jbe
xor
mov
xchg
push
packsswb
mov
or
add
sbb
imull
jecxz
stos
pop
scas
xlat
pushf
fwait
subl
fistpll
rclb
ljmp
cld
xchg
jl
adc
xchg
les
jecxz
cli
das
mov
mov
push
flds
xor
pop
clc
sti
iret
addl
mov
lea
cmpsl
mov
add
xchg
dec
jmp
xchg
xor
mov
out
jp
dec
fiadds
mov
loope
mov
stos
movsb
push
pop
insl
jg
mov
jae
shlb
sahf
pushf
xorl
cmp
mov
shl
popa
pop
mov
mov
lahf
int
add
fptan
mov
insl
or
jnp
rcr
jl
mov
add
in
test
pop
add
outsl
adc
addr16
mov
roll
aaa
mov
popf
sbb
daa
mov
add
or
xchg
dec
mov
aam
mov
push
jl
dec
jmp
decl
jg
mov
cmp
dec
dec
or
in
int
test
or
mov
aas
pop
nop
inc
mov
js
jl
aam
cmp
jl
sbb
repnz
in
inc
jbe
lahf
cmp
test
xor
sti
mov
icebp
jmp
icebp
push
pop
dec
xlat
and
add
call
shlb
stos
jne
cmp
addr16
cli
les
jb,pn
xlat
mov
add
inc
pop
inc
lods
imul
push
into
imul
repz
xor
loope
dec
pop
adcl
pop
mov
dec
ss
fistl
and
xchg
sahf
lea
xchg
fists
push
test
std
gs
ds
ficoml
or
push
test
adc
lock
arpl
or
test
test
cli
aaa
inc
data16
ret
mov
cmp
popf
ret
ffreep
mov
in
jne
push
jmp
or
ud1
adc
or
adc
insl
movsl
dec
xchg
mov
and
pop
ja
int3
loop,pn
adc
adc
addr16
scas
gs
or
mov
mul
pop
lock
outsb
cld
jae
imul
mov
test
ret
lcall
pop
adc
push
mov
inc
mov
sub
adc
mov
add
push
jo
aas
dec
sub
adc
or
outsb
test
dec
adc
or
cld
shlb
sbb
shld
jne
push
add
xorl
xchg
gs
mov
jnp
push
cmp
cltd
cmp
pop
pop
lcall
outsl
jb
xchg
push
sub
push
std
out
sbb
pushf
in
fst
mov
or
sub
cmc
fcmove
aaa
into
mov
scas
adc
xchg
mov
adc
adc
push
scas
repz
lods
push
mov
dec
jbe
mov
int
mov
in
push
test
test
jbe
dec
bound
ret
add
mov
dec
stos
fwait
jb
or
adc
jbe
xor
in
stos
mov
mov
sub
push
dec
xchg
xor
decb
in
or
adc
enter
popa
lods
mov
jecxz
xor
and
in
mov
inc
jle
mov
and
leave
and
adc
pusha
mov
inc
lret
jbe
pop
pop
pop
inc
xor
repnz
clc
pop
loopne
ljmp
push
out
push
cmp
es
test
push
insl
iret
xchg
int
aas
divb
cmc
test
push
stos
sbbb
sbb
push
notl
sub
jl
aam
cmp
pop
mov
push
cmc
and
push
sub
add
mov
pop
or
nop
rcrl
je
iret
xor
push
jmp
cmp
and
inc
enter
add
mov
aam
loop
dec
mov
sub
push
daa
xor
loopne
pusha
or
out
inc
jmp
popf
inc
leave
or
sti
xchg
out
iret
aam
pop
dec
ds
push
popa
push
or
cmp
xchg
or
scas
out
dec
shrb
frstor
pop
mov
pop
js
mov
jmp
roll
jb
pop
pop
ret
outsl
aaa
mov
orb
mov
das
cmp
in
test
xchg
mov
inc
mov
mov
cmc
xor
xchg
adc
dec
push
sub
icebp
repz
jo
pop
les
js
out
add
inc
jns
les
aas
rolb
sub
jno
add
das
xor
cs
ret
sahf
lods
or
dec
shrl
cltd
xchg
mov
pop
push
mov
pusha
test
and
pop
add
jae
int
mov
sbb
rcrl
inc
ret
mov
das
cmp
xor
imul
in
push
push
je
lods
push
rorb
in
sarb
addr16
xchg
cwtl
insb
shll
dec
ret
jb
outsl
pusha
jnp
sub
cmp
sbb
push
dec
addr16
pop
sbb
es
or
outsb
ja
cmpl
inc
cmc
dec
or
stos
pop
lock
mov
cwtl
lahf
ret
fcomp
add
enter
ja
pop
adc
loopne
out
inc
cmp
mov
mov
repnz
jecxz
pop
pop
push
xor
mov
jmp
lods
dec
pop
fmul
mov
sbb
testb
sub
dec
push
dec
lods
pop
lock
ss
mov
and
or
es
lahf
add
leave
lret
mov
mov
and
nop
mov
and
arpl
or
xlat
out
rorl
inc
insl
sbb
std
jp
xor
cmc
inc
sbb
negl
out
mov
xor
test
mov
and
pusha
loopne
je
sar
jo
or
dec
hlt
aaa
or
decb
sbb
jl
enter
push
in
sbb
jnp
push
xchg
cmpsl
out
push
jl
stc
fs
sbb
aaa
insb
dec
dec
or
insb
mov
add
mov
inc
mov
sub
fs
inc
or
add
in
add
push
mov
mov
hlt
loop
dec
jecxz
add
add
xor
enter
mov
push
sahf
mov
pop
push
popf
lea
lds
call
xchg
pop
leave
in
sbb
mov
inc
out
dec
xchg
iret
repnz
mov
repnz
dec
repz
sbb
ja
adc
pop
out
mov
mov
pop
sub
sub
out
aaa
pop
xchg
aam
push
shrl
jns
mov
cmpsb
add
and
xor
cld
int
fsqrt
popa
cmp
fsubs
lock
loope
dec
test
sbb
jbe
cmpsb
inc
icebp
mov
enter
jb
cli
arpl
fisubrl
mov
mov
rorl
adc
jno
sub
clc
fs
loopne
sub
adc
shll
xchg
imulb
cmp
stos
insb
divps
in
mov
push
fwait
js
xor
out
icebp
xchg
addr16
push
mov
test
cli
hlt
sub
xchg
or
pushf
int3
jmp
cs
outsb
aam
inc
sti
mov
std
and
inc
mov
addl
dec
xchg
dec
lds
push
adc
movsb
roll
test
iret
sarb
inc
push
inc
je
insl
stos
xchg
cli
dec
jle
lea
test
imul
xlat
jle
mov
int
in
mov
mov
sub
sbb
imul
xor
sahf
push
push
mov
movsb
ficoml
push
andb
clc
mov
add
cs
xchg
lret
sbb
or
mov
jbe
addr16
data16
jg
mov
insb
mov
dec
xor
dec
pop
fcmovnbe
mov
rcrb
roll
dec
push
mov
rcrl
xor
adcb
scas
mov
inc
adc
es
shll
and
push
in
ss
mov
push
and
jge
cmp
scas
add
inc
mov
or
xor
sbb
cmp
xchg
sbb
das
movsb
in
jns
pop
inc
sub
imul
mov
cmp
pop
pop
mov
mov
into
inc
pop
movsl
mov
in
add
das
adc
in
rcll
sbb
clc
fistl
lret
inc
in
sbb
sti
mov
in
dec
out
ljmp
jmp
push
out
jge
jge
gs
das
sbb
dec
imul
js
mov
in
jns
push
in
ficomps
leave
sarb
lods
lods
xchg
cmp
dec
movsb
sahf
fisubrl
sbb
leave
push
sarl
loopne
call
outsb
fstl
fiadds
cs
aam
dec
add
dec
xor
mov
jno
mov
jge
jb
sarb
enter
test
test
push
je
pop
xor
sbb
ss
and
mov
adc
or
arpl
call
adc
xorb
xor
adc
dec
inc
xor
push
xorl
lods
bound
nop
sub
insl
arpl
and
jmp
arpl
mov
jae
xor
jge
jnp
pop
push
jbe
pushf
lods
jl
data16
and
push
les
call
leave
mov
lcall
sbb
cli
sub
mov
pop
mov
sub
aaa
leave
andl
mov
sbb
js
inc
ss
movsl
sbb
inc
test
push
scas
xor
gs
movups
or
arpl
outsl
sbb
lea
push
pop
stc
nop
adc
mov
xor
arpl
popa
and
xor
test
dec
adc
add
xor
cmpsb
rorl
or
out
dec
outsb
filds
or
int
int
fsubs
in
pop
jnp
mov
push
test
shll
and
in
imull
imul
dec
push
fwait
jbe
fwait
push
pop
shrb
xor
gs
dec
push
or
or
pop
push
ds
jg
mov
daa
fisubrs
add
push
xlat
push
in
sub
es
jp
icebp
ljmp
fwait
shl
into
and
fimull
mov
push
scas
jnp
das
jle
mov
outsb
and
int
lods
adc
shlb
fldl
mov
push
clc
arpl
fnstenv
push
lahf
inc
push
sbb
divb
lret
out
lea
movsl
adc
stc
stc
mov
push
push
lret
cmp
xchg
mov
adc
push
pusha
push
ret
test
test
imul
addl
inc
cltd
inc
test
push
mov
mov
jnp
lods
ja
dec
cmp
push
std
into
stos
repnz
pop
pop
aam
xor
mov
adc
scas
fmul
ficoms
ret
xchg
es
dec
xor
xor
add
pop
and
les
add
int3
adc
cmp
cmpsb
cmc
pop
lret
mov
out
loope
ror
pop
arpl
fcomi
xchg
xchg
cmp
pop
sbb
or
jle
aad
xchg
mov
mov
sub
mov
aam
inc
pop
adc
aas
mov
mov
sub
ret
enter
sub
mov
ljmp
add
dec
bound
xor
jb
ljmp
aas
inc
add
cltd
cmpsb
xor
testl
insb
loopne
fisttps
insl
push
lret
or
pop
dec
repnz
jbe
mov
scas
or
jg
pop
inc
mov
loope
sbb
push
pop
mov
jmp
scas
or
push
adc
mov
xor
dec
push
addr16
mov
or
sbb
dec
xor
sbb
mov
xchg
ds
cmp
mov
xor
mov
cmp
out
or
jo
fldl
adc
xor
mov
lret
dec
pushf
mov
xchg
dec
dec
dec
sti
sbb
cmp
mov
cmp
test
dec
jle
sbb
sub
and
cld
or
inc
in
pop
test
dec
ss
scas
dec
sbb
push
xor
mov
cmp
pop
loope
sub
popf
sub
dec
jp
into
outsl
jge
xor
aas
pop
jb
xor
fwait
xor
inc
push
shrb
cmpsb
enter
mov
jmp
stos
ror
fs
movsl
mov
add
lret
out
not
or
cmp
js
int3
scas
fidivrs
jbe
mov
sub
loopne
push
lods
xorb
ja
push
jo
xor
lock
out
fidivl
scas
mov
testl
xor
int3
and
dec
loop
inc
fstps
jmp
rcr
out
cmp
mov
jns
out
arpl
daa
testl
bound
cmpsl
imul
pop
inc
push
or
mov
jge
cwtl
xchg
jge
push
in
pop
adc
imul
aaa
dec
inc
mov
js
sbb
inc
out
lds
insb
decb
push
aam
orb
push
push
lds
cld
and
into
push
cmc
lods
rcll
das
data16
pusha
sbb
add
sub
sub
fldenv
int3
out
addr16
ljmp
dec
sbb
pop
loope
imul
cmpsb
and
jne
movsb
in
insl
cld
pushf
and
ret
pop
adc
jo
fidivrs
aas
lds
lods
out
loopne
gs
ljmp
sahf
bound
ds
xchg
cs
popf
rorb
mov
sbb
test
adc
xchg
in
enter
loop
adcl
popa
push
stos
lods
popf
jl
test
mull
frstpm(287
add
sti
inc
fs
adcl
xchg
xor
insb
cmp
fadd
adc
clc
ss
or
xchg
call
sbb
xor
or
dec
pop
mov
cmp
add
or
lock
aaa
sbb
sbb
addr16
div
and
xchg
push
push
jnp
das
std
mov
mov
int3
mov
sub
aas
fcomps
je
xor
daa
out
inc
cmpsl
xchg
dec
aam
fisttpll
xchg
mov
mov
aam
dec
mov
dec
push
sarb
add
fistps
or
pop
jno
sbb
mov
outsb
and
scas
stos
cs
xchg
xlat
mov
bound
push
imul
or
xor
cmp
andl
pop
push
ds
xor
jns
or
out
pushf
sarl
pop
sbb
cwtl
and
hlt
leave
or
jne
sbb
js
mov
ja
dec
loopne
pop
jns
cli
inc
roll
xchg
out
mov
mov
xor
or
mov
test
jns
cmp
sahf
test
cmp
cmc
ljmp
lds
movsl
enter
pop
stc
inc
loopne
decl
div
pushf
mov
clc
mov
loop
pop
fwait
les
xchg
ja
xchg
fistpll
mov
jne
add
loopne
push
in
pop
int
sub
mov
icebp
pushf
jmp
test
or
out
push
push
bound
sub
stc
xchg
xchg
push
mov
mov
repz
sub
or
leave
push
jbe
popf
cld
push
icebp
jle
or
arpl
push
and
lock
and
mulb
fwait
push
daa
inc
mov
mov
rclb
aad
sbb
dec
cmp
add
xchg
pop
xchg
rcll
mov
xor
push
rcll
bound
lods
xchg
cmpsb
and
xlat
incl
xchg
lea
cmp
dec
sbb
rolb
mov
mov
dec
pop
lods
rorb
into
lret
test
add
call
mov
or
mov
repz
dec
pop
mov
sbb
xlat
mov
sbb
jbe
int3
scas
jns
movsl
fiadds
adc
imul
imul
mov
fmul
push
mov
popf
icebp
cli
test
xchg
mov
fisttps
add
inc
rclb
mov
inc
mov
fidivrl
sub
add
inc
cmp
test
movsb
or
mov
sub
cmpsl
jmp
fstl
roll
dec
and
push
pushf
insl
mov
mov
xor
cmp
subl
movaps
notb
dec
sbb
mov
inc
arpl
jne
sub
cmp
loopne
xchg
jno
jp
cmp
cs
das
js
add
xchg
mov
fistpl
rcl
movsl
roll
ret
inc
enter
lret
cmp
aas
jae
loopne
mov
sbb
push
cmp
xor
or
aas
out
cld
push
mov
repz
add
shlb
stos
and
fsts
mov
inc
sub
in
jmp
sub
out
pop
aas
fdivrp
jno
mov
test
dec
or
int3
or
nop
cmp
cmp
and
jl
pop
sbb
mov
jbe
outsb
xchg
out
addr16
cmp
aam
inc
std
add
stc
into
inc
and
sar
subb
fbld
mov
shlb
jbe
test
gs
sbb
mov
push
xlat
sub
ja
pop
jg
cltd
add
push
jge
imul
dec
ret
adc
ret
pop
movsl
data16
xor
repnz
inc
out
push
mov
pushf
xchg
dec
add
push
pusha
push
pop
mov
pop
cltd
icebp
push
repnz
bound
dec
sub
imul
cwtl
xor
aaa
mov
jp
cmp
and
mov
xchg
jbe
jg
pop
or
leave
fidivrl
xchg
add
cld
pushf
xchg
push
dec
into
nop
mov
lcall
pop
xor
fs
pop
mov
add
jecxz
les
addr16
int3
and
xor
mov
test
pop
jo
and
inc
pop
lods
aad
and
ret
add
adc
xor
mov
dec
icebp
clc
lret
imul
icebp
rolb
loopne
sarb
mov
dec
cmp
adc
push
fimull
xchg
sbbb
pop
xchg
inc
sub
push
push
rorl
adcb
mov
mov
cmpsl
mov
adc
jmp
cmpsl
pop
pop
mov
fdivs
jp
out
push
mov
je
mov
ja
cmp
lods
lods
mov
mov
outsl
xor
pop
jmp
lahf
sub
mov
lcall
lret
repnz
cli
cld
and
loopne
ljmp
lret
cwtl
or
xchg
sarl
scas
mov
mov
or
inc
lahf
mov
shll
mov
mov
call
mov
mulb
in
shlb
xchg
push
or
int
pop
mov
mov
sub
mov
scas
or
jbe
sbb
xchg
cmp
dec
inc
cmpsl
out
cltd
sub
dec
jmp
dec
enter
inc
fwait
pusha
sub
es
cld
mov
ret
xchg
or
push
cmp
clc
add
push
repz
cmpsl
movl
add
xchg
call
and
adc
lods
jle
pusha
or
mov
push
jmp
test
mov
xor
push
sbb
xchg
in
in
xor
in
adc
pop
pop
xchg
jbe
bnd
sbb
lea
add
jbe
lds
pop
inc
movsb
fdivs
scas
and
shll
or
mov
or
xlat
push
je
mov
cs
into
cmp
in
jns
stos
add
bound
imul
add
shrl
dec
pop
bound
xlat
icebp
cwtl
mov
in
addr16
pop
pop
pop
push
mov
hlt
int3
lds
cltd
mov
add
shlb
inc
cmp
movsb
mov
loopne
imul
push
inc
xor
jmp
in
inc
sub
out
loop
imul
test
push
dec
sub
fwait
test
int
mov
ss
jp
je
test
adc
sub
dec
fidivrs
inc
cs
jp
js
bound
data16
mov
sbb
lods
movsl
and
ljmp
outsl
or
dec
mov
repz
lock
push
pop
test
xchg
ret
lods
ljmp
and
xorb
daa
aam
popf
pop
lcall
cmp
dec
fwait
add
fstl
jmp
add
jb
mov
in
lahf
lea
xorl
lea
bound
enter
or
push
push
sbb
pop
cmc
adc
jg
sub
push
aas
jnp
mov
jp
scas
push
pop
or
in
in
test
xlat
ljmp
sahf
aaa
gs
mov
cmp
push
adc
or
jg
push
out
pop
jne
jno
dec
movsb
sahf
mov
xchg
pop
cli
xorb
das
test
addr16
sbb
fnstsw
mov
test
aaa
sub
call
adc
roll
nop
xchg
cmp
push
sbb
lds
pop
les
mov
fidivrl
shlb
mov
jae
int
test
mov
imul
les
pop
adc
mov
cmp
aad
popa
bnd
mov
jmp
or
popa
aas
aas
inc
add
mov
into
adc
das
loop
mov
cld
pop
pusha
mov
test
bound
lahf
mov
sub
inc
loope
xor
pop
movsb
pop
pop
xchg
and
imul
jns
rcrb
aaa
mov
nop
test
in
and
ljmp
pop
xor
jmp
sub
push
clc
int3
shrb
and
pop
pop
ret
mov
rcr
inc
cmpl
push
pop
adc
sub
pop
into
test
fadd
push
sti
jo
rcrb
shlb
movsl
or
mov
xchg
popa
je
fildll
es
pop
push
mov
cmp
pop
xorb
or
push
jecxz
scas
add
pop
pop
mov
inc
std
pop
mov
mov
loopne
dec
adcl
ret
push
je
fiadds
mov
lock
not
popa
pop
out
cmpsl
jb
inc
xor
test
dec
std
je
lock
mov
cmpsl
push
xchg
bound
mov
je
push
xchg
flds
mov
pop
rcrl
mov
daa
dec
sbb
add
out
sbb
divl
dec
loop
sub
add
jge
xchg
lock
popf
out
xor
stos
or
xor
test
xor
dec
jb
js
hlt
fsubs
sub
fistpl
jo
dec
mov
pop
rcl
cli
test
mov
pop
pop
fisubrs
pop
mov
notb
jle
cmpsb
repnz
aad
dec
data16
inc
adc
ds
xchg
les
sub
inc
das
aaa
push
or
int
call
popa
or
mov
push
and
scas
mov
jbe
and
and
test
test
xchg
push
jnp
xor
push
hlt
mov
outsb
jmp
mov
pop
xor
push
sbb
pop
inc
sbb
lods
test
xor
fldcw
std
sub
aaa
subl
pop
adc
fildll
jecxz
pop
inc
cwtl
repz
in
push
int3
loop
push
xor
leave
cltd
movsl
and
aas
bound
repz
inc
or
cmp
or
popa
arpl
shlb
and
cmp
mov
or
scas
and
popl
mov
mov
imul
hlt
pusha
pushf
dec
or
pop
or
sub
out
gs
je
dec
add
xchg
js
inc
test
jne
mov
sbb
hlt
sahf
arpl
lahf
pop
cmpsl
stos
mov
xor
cmpsb
mov
xchg
mov
jnp
xchg
xchg
sub
push
xor
xchg
shll
mov
ret
inc
xchg
sbb
outsl
test
cmp
pop
pop
and
roll
cmp
push
sub
jge
mov
pop
clc
jecxz
and
cmp
sbb
data16
mov
sti
pop
add
repz
lods
js
xchg
inc
push
lds
mov
and
jns
cmp
push
iret
xor
pushf
aaa
fbstp
mov
xchg
lock
jecxz
push
push
out
pop
mov
dec
aaa
jmp
or
jl
xchg
dec
adcb
xchg
ja
mov
mov
sarl
jnp
and
jb
cld
adc
dec
int
aaa
or
pop
icebp
inc
mov
sbbb
in
adc
inc
adc
mov
ret
scas
jle
rep
sbb
test
in
or
mov
jl
mov
bound
push
outsl
inc
gs
mov
dec
mov
pop
fcomps
xor
xor
sub
add
movsb
mov
cli
mov
in
into
nop
push
or
pop
cmp
xchg
into
and
mov
xchg
inc
popa
lcall
shl
fsub
imul
adc
test
fisubrl
and
add
sbb
jbe
loop
dec
pop
out
cwtl
sti
out
fsubrp
aad
testl
movl
iret
fsubs
adc
stos
dec
or
cmp
inc
xchg
and
cmc
nop
mov
mov
roll
dec
xchg
idivl
dec
pop
push
adc
jns
push
mov
test
sbb
sbb
mov
call
adc
and
icebp
inc
xchg
iret
sub
mov
aaa
mov
xor
fmull
add
pop
test
into
push
fs
and
testl
fs
lahf
ret
cmp
rclb
dec
sub
je
inc
add
sbb
adc
or
test
arpl
mov
sub
xor
in
sti
fs
add
push
les
andb
dec
addr16
jnp
cltd
insb
cmp
cmpsb
fcomps
add
push
lods
mov
pop
lea
push
lret
adc
negl
das
pop
or
cmp
or
pop
js
int
adc
cmc
aam
jne
repz
lods
or
jb,pt
adc
subb
repnz
dec
in
or
cmp
in
jle
insl
or
sbb
lock
adc
cld
scas
int3
popl
ror
xchg
sbb
dec
out
xchg
mov
pop
adc
pop
adc
add
insl
pop
jecxz
pusha
xor
mov
push
lret
xchg
jle
push
sub
repz
imul
add
shl
stos
jp
adc
dec
inc
pop
inc
lret
test
mov
sbb
adcb
dec
mov
jl
fiadds
adc
aad
enter
xchg
shll
aaa
das
les
popf
lret
mov
sub
or
enter
inc
xchg
ret
call
pop
and
adc
ds
sub
jl
icebp
sbb
movsl
push
or
adc
out
insl
pusha
ljmp
cmp
and
std
sub
adc
lcall
dec
jle
test
ja
and
movsb
sub
sub
gs
add
mov
dec
and
lret
inc
out
rol
xchg
daa
cmc
mov
pop
std
add
lods
xchg
fdivrs
test
repz
xor
sub
mov
jo
sub
cld
loope
push
cmpsb
jne
imulb
lods
adc
nop
sbbl
cwtl
lea
pop
pop
mov
mov
sub
jl
movsb
dec
stos
inc
sub
or
push
in
jns
sbb
cmp
push
mov
jne
fiaddl
lods
movsb
cmc
mov
in
cmp
scas
je
out
mov
rolb
rcrb
inc
cmc
xchg
mov
test
and
fwait
cmp
inc
gs
or
dec
push
pop
pop
sub
pop
and
cmp
jb
dec
cli
dec
dec
cmp
inc
outsb
jno
push
fdivrs
push
sub
jnp
mov
sub
cmp
rcrb
mov
sub
test
inc
jmp
vpaddusw
inc
sub
or
mov
cmp
mov
jnp
add
stc
xchg
adc
and
mov
aam
addr16
add
cltd
adc
sub
dec
mov
inc
addr16
lcall
jnp
aam
xor
pusha
stos
lret
push
scas
push
push
repz
aam
xchg
fldt
lcall
pop
lods
mov
lcall
out
lcall
jno
cld
push
sub
xchg
insb
pop
inc
stos
enter
aam
dec
in
rclb
loop
dec
pop
pop
negb
int
mov
sbb
pushf
sub
adc
ss
push
out
jae
pop
inc
or
jle
and
aam
sub
adc
mov
mov
push
cmp
mulb
dec
shrb
pop
orl
add
je
mov
aas
mov
mov
add
es
sbb
scas
adc
push
repnz
adc
cmp
fs
sub
mov
pop
or
cmp
sub
mov
sub
sbb
xlat
in
cmp
or
ret
or
lods
cmp
inc
pop
imul
inc
dec
xchg
sub
fsub
mov
cltd
loope
mov
push
jno
movl
push
add
mov
and
or
jmp
stc
mov
les
popa
pop
push
mov
or
arpl
out
dec
call
je
sbb
xor
or
sub
std
rorl
stos
bound
dec
inc
cltd
dec
push
xor
mov
imul
mov
cmp
inc
rcr
ret
pop
adc
insl
push
ret
popa
jbe
jmp
pop
movsl
sbb
ret
in
push
inc
inc
pop
out
lcall
fistpl
xchg
xchg
push
dec
xchg
loopne
mov
inc
cmp
in
dec
es
jne
jl
orb
aas
pusha
and
mov
lods
sbb
or
pop
sbb
pop
push
sub
xchg
or
or
xor
fisttps
jle
dec
push
repz
stos
je
ret
iret
popf
mov
mov
les
adcl
data16
pop
xchg
stos
xor
jmp
popa
dec
jle
pop
loop
mov
pop
aad
shll
and
test
loope
push
shr
cmp
sub
sahf
sub
dec
mov
xor
bound
lock
sahf
repz
les
sub
bnd
int3
push
fnstenv
cmp
lods
dec
sub
aam
js
popa
aas
dec
bound
pop
xlat
push
xor
bound
add
adc
test
mov
in
scas
aaa
ss
xchg
loopne
jle
cmp
lret
scas
cmc
pop
stos
adc
out
mov
push
in
sbb
jl
neg
enter
lea
out
aas
rorb
fadds
inc
mov
enter
andl
pop
inc
push
and
sub
aas
divb
imul
inc
jecxz
cmp
cmp
stos
lret
cmp
jo
out
stos
inc
loope
inc
xlat
sbb
cmpsb
and
inc
cltd
scas
cmpsb
in
add
inc
jmp
shl
mov
jp
push
jo
mov
dec
std
inc
lock
test
or
sub
pop
fs
dec
xchg
adc
add
adc
mov
cmp
subb
orl
imul
adc
insb
mull
dec
fsts
adc
popa
in
lods
jae
adc
scas
and
push
sub
add
cmp
lods
adcl
adc
fs
loop
imul
lahf
mov
into
stos
sbb
mov
loopne
cmp
or
shlb
pop
shl
xchg
test
out
or
dec
jne
cwtl
inc
test
add
mov
daa
adc
sar
hlt
mov
mov
inc
sti
dec
jbe
or
and
mov
adc
enter
cmpsl
repz
test
xor
int
jle,pt
fiadds
inc
in
mov
pop
lcall
pop
mov
inc
dec
je
arpl
fwait
sub
divl
testb
inc
sti
cmpsb
testl
push
rcrl
or
mov
enter
cmp
scas
dec
add
push
xor
insb
cmp
int
adc
sub
das
lds
or
mull
fwait
daa
cmp
mov
data16
test
mov
and
popa
ret
sarl
lcall
aaa
cs
mov
bound
adc
xor
dec
sub
mov
mov
sub
jno
add
mov
ret
push
mov
add
push
cs
xor
mov
lret
andb
xor
mov
cmpsl
mov
jg
adc
mov
adc
aas
fadd
push
mov
lds
sbb
subl
test
dec
push
xchg
add
stos
fs
cmpsb
mov
xchg
or
stc
or
fs
cmp
cmp
inc
lea
out
cltd
repnz
xchg
test
std
sahf
xchg
jge
inc
mov
cmp
ret
jae
push
sbb
aaa
ficoms
rorl
in
dec
sbb
cs
or
je
jl
push
xor
mov
push
push
pushf
fwait
adc
into
or
cld
pop
sbb
jns
or
adc
cmp
add
or
mov
js
sbb
mov
aam
mov
cmp
popf
jmp
jae
insl
sbb
jmp
push
push
lret
xchg
mov
iret
xchg
mov
or
push
add
dec
popa
pop
mov
dec
mov
and
sbb
int3
jp
cmpsw
or
xlat
xchg
mov
movsb
inc
push
dec
mov
mov
xchg
into
xchg
push
xchg
cmp
lds
cmp
sarl
push
jge
out
out
fdivl
in
mov
push
mov
or
in
in
xor
wbinvd
out
dec
ss
mov
adc
adc
cmp
roll
xchg
fsubrp
xchg
int3
mov
sbb
jb
mov
lea
daa
xchg
rcrb
or
fadds
pop
cs
cmp
cmpl
inc
cmp
sbb
testl
add
cmc
in
pop
sub
in
stos
xor
test
push
mov
mov
cmp
jle
test
gs
cltd
loop
and
xor
adc
insb
adc
notl
cmc
outsb
je
xor
inc
jmp
cmpsb
aaa
sbb
call
out
in
into
lcall
mov
les
cmp
sub
sbbb
and
mov
add
xchg
cmp
mov
fidivrl
sbb
int
jne
and
jg
out
add
shr
dec
repz
arpl
pop
inc
fidivrl
cmp
xchg
lea
mov
pop
push
stos
incb
enter
sub
subl
xchg
dec
outsb
jp
push
mov
lcall
psrld
mov
lret
pop
push
jg
scas
sub
aas
or
stos
inc
cmp
xchg
push
push
cmp
leave
xchg
jp
int3
mov
fs
outsl
cmovns
or
push
jle
mov
pop
out
cmp
inc
popa
in
mov
sti
dec
into
cmc
enter
add
and
cmp
aaa
jmp
nop
xchg
inc
jb
dec
lea
mov
cmc
inc
push
sahf
mov
jno
into
inc
call
test
mov
xchg
aad
xor
mov
push
scas
repnz
nop
dec
add
clc
scas
cmpsl
pop
insl
mov
out
xchg
repz
clc
fs
shlb
pop
jp
jp
sub
into
push
ds
andl
mov
dec
loopne
or
aaa
push
dec
popf
mov
arpl
and
mov
xchg
lcall
ss
rorl
xchg
sub
std
push
je
bound
inc
pushf
xchg
lret
fdiv
sub
popa
hlt
imul
loope
repnz
sbb
call
repz
xchg
jle
push
dec
mov
scas
dec
sti
outsb
daa
and
outsl
xchg
push
ja
lret
jp
jae
inc
popf
sbb
mov
fisubs
cmpsb
into
iret
fimull
popf
and
cmp
ds
or
mov
cmp
jmp
fprem
das
cltd
cli
lods
sbb
jle
push
idivb
sbb
cli
inc
jo
cmp
cmp
adc
and
cmp
into
xchg
mov
push
jle
outsl
xor
pop
les
stos
jo
jmp
mov
ret
aas
fnstenv
jge
jb
lods
and
aas
inc
adc
mov
xor
add
cmpsl
cltd
inc
das
cs
fistl
shll
clc
imul
call
push
aas
adc
lds
push
or
jne
and
fsubl
pop
xchg
pop
sahf
mov
lret
cmp
lods
pushl
test
es
mov
orl
orb
cmp
sbb
add
sahf
add
movsb
inc
gs
jmp
jge
jge
sti
int
out
daa
jmp
push
sbb
cld
aam
stos
lcall
cwtl
cwtl
lods
and
mov
js
or
pushf
mov
out
mov
inc
pcmpeqb
popl
dec
push
adc
cmp
outsl
insl
jg
xor
push
jecxz
aas
fsubr
pop
cs
cmp
inc
mov
arpl
add
dec
jnp
movsb
adc
pusha
cmp
or
jl
xor
cmc
mov
mov
pop
cmp
xor
jb
sar
adc
add
xchg
sub
add
jo
es
push
cmpsb
xor
mov
jg
jnp
dec
xchg
cmp
dec
frstor
push
shr
mov
pop
aaa
clc
mov
dec
mov
sub
decl
fs
jl
and
mov
or
pop
mov
push
mov
jge
mov
jns
pushf
adcb
rcll
in
mov
pop
dec
test
sbbl
lods
jp
mov
jb
xor
popf
push
out
mov
lcall
sbb
std
xchg
fwait
int
test
emms
mov
push
xor
sub
ja
push
mov
push
sbb
mov
into
test
shlb
js
dec
lods
jl
mov
lds
icebp
ret
push
in
mov
jbe
imul
xor
lret
mov
lock
fninit
xchg
jecxz
test
shlb
jnp
arpl
mov
pop
test
mov
push
dec
and
cmp
dec
mov
dec
sbb
or
or
xor
mov
addl
adc
mov
pop
andb
popa
imul
dec
sbb
enter
call
and
shll
fcmovu
dec
sub
fsubrs
pusha
shl
outsb
into
scas
push
aas
pushf
std
popa
je
ret
rcrb
in
or
pop
data16
rorb
jle
cli
fmuls
test
sbb
jbe
mov
mov
pop
aam
enter
push
xlat
push
cmp
out
scas
adc
xchg
xchg
es
lahf
aam
mov
test
loop
popa
jns
jns
int3
push
sub
scas
lret
in
pop
mov
mov
popf
dec
push
and
mov
imul
repnz
mov
aad
insl
pusha
add
loopne
adc
testl
pushf
mov
sbb
jae
popfw
dec
pop
xor
fidivl
inc
mov
aad
stos
mov
stos
das
xor
push
or
cmp
lea
push
dec
pusha
stos
push
jbe
push
add
xchg
das
mov
scas
and
test
push
inc
das
jmp
adc
test
mov
cltd
sahf
sbb
jbe
mov
sahf
xchg
aaa
cmp
jnp
dec
out
adc
cwtl
insb
outsb
into
xchg
xor
sub
mov
jbe
push
mulb
xor
xor
jge
cmp
icebp
xor
pop
rcr
push
xchg
insb
push
mov
pop
xchg
addr16
dec
lock
xchg
pushf
and
or
lret
push
dec
out
jmp
mov
mov
loop
mov
insb
add
movsb
dec
pushf
dec
pushf
mov
cmc
jmp
out
nop
ret
adc
sub
ret
xchg
ret
test
cmc
push
fdivrp
push
shll
mov
into
and
insl
push
fstps
cmp
int3
shlb
xor
loope
mov
sub
daa
subb
or
ret
les
push
imul
fldcw
out
mov
negl
outsl
in
pop
int3
inc
cmpsb
cltd
mov
in
cmp
sti
mov
jo
cmp
mov
mov
lea
jne
jb
int3
insl
ret
or
ds
pop
or
pop
pop
cwtl
cld
cmpsl
enter
sub
outsb
jne
mov
mov
mov
pop
dec
mov
inc
pop
dec
in
xchg
add
test
or
push
rcrb
arpl
xchg
xlat
lahf
sbb
das
inc
ret
xor
push
repnz
pop
sti
xorb
inc
gs
xor
mov
rcr
jmp
add
dec
push
or
fdivr
out
xor
shll
cmpsl
and
add
data16
jbe
pop
push
int3
sub
je
jmp
mov
xor
cld
sub
cmp
dec
fmulp
jno
fwait
sahf
xor
in
sbbl
inc
clc
fs
into
imul
cld
orl
aam
mov
push
in
cli
xor
scas
mov
push
arpl
cmp
out
xlat
add
or
push
xchg
sbb
mov
pop
loop
stos
jae
test
pop
and
das
clc
lret
and
or
insb
shl
xchg
das
mov
sub
xchg
inc
xchg
jne
jl
inc
fxch
ja
or
outsb
fwait
dec
jno
icebp
sbb
mov
adc
adcb
push
lods
sahf
ret
or
arpl
scas
lret
inc
outsl
mov
fistps
stos
fcmovnb
jbe
rcl
out
xchg
loop
cmp
xor
pushf
popa
inc
lahf
mov
movsb
add
inc
inc
test
inc
stos
mov
es
fiaddl
js
rdmsr
movl
push
pop
xor
dec
jo
push
lea
jecxz
inc
cmp
cs
sbb
aad
mov
xchg
and
clc
lcall
jno
jmp
fnstcw
inc
fcoms
push
xchg
adc
pop
jbe
arpl
andb
inc
aam
mov
das
ja
frstor
sub
fstpt
xchg
clc
or
push
daa
push
icebp
adc
pushf
mov
sbb
repnz
lret
dec
stos
add
inc
daa
gs
js
inc
rep
cmp
fwait
mov
out
xlat
adc
or
sub
and
sarl
ljmp
mov
jmp
push
inc
sub
popf
add
sbb
mov
loopne
nop
adc
cmp
lods
daa
mov
int3
test
sahf
ret
xlat
movsl
fcmovnu
popf
fs
mov
sub
nop
mov
outsl
add
or
lret
mov
aaa
aaa
cltd
inc
lret
sbb
dec
divl
or
notb
imul
movsb
jl
cmp
in
jp
sub
lods
add
insb
ficoms
and
inc
sbb
or
test
sbb
pop
aam
push
sahf
ret
jae
in
aad
mov
lods
push
dec
add
xor
sub
inc
jo
inc
add
inc
mov
jns
andl
faddl
cmpl
sub
js
dec
jp
mov
mov
mov
xchg
inc
aam
rcll
fldl
sbb
inc
stos
sbb
xchg
pop
mov
sub
leave
mov
cld
add
mov
int
pop
mov
inc
data16
pop
stos
icebp
fsubrl
push
icebp
iret
inc
lea
push
cmp
sub
aas
movsl
pop
test
jb
js
jg
push
mov
mov
dec
shlb
sbb
cmc
scas
inc
out
daa
mov
push
fwait
inc
notl
pop
xor
das
dec
cmp
adcb
subb
lods
push
fdivl
or
lds
mov
pop
popa
mov
or
xorb
jl
or
roll
mov
sbb
adc
stc
push
inc
cmpsl
loop
mov
into
ja
sub
lret
push
loope
cmpsl
lret
adc
xchg
inc
ja
mov
icebp
sub
xchg
es
inc
and
xor
rcr
jae
pop
xlat
fldt
cmpsl
push
add
sbb
jecxz
mov
adc
push
movsl
lahf
jg
negl
sbb
insb
ficomps
movsb
mov
sahf
and
leave
push
push
dec
out
scas
in
in
jge
popf
fwait
xchg
enter
rcrb
les
sbb
sub
subb
test
cli
jbe
inc
aaa
mov
sub
push
push
adc
fadd
idivl
inc
sbb
xor
mov
dec
adc
adc
jle
dec
cs
jns
cmc
pop
push
mov
jnp
mov
sbb
iret
hlt
cwtl
sub
sbb
sbb
mov
popf
push
fwait
xor
cmp
outsl
adc
and
push
mov
xchg
sub
adc
jno
imul
jnp
mov
in
and
iret
dec
dec
cmp
movntq
jae
rclb
cmpsl
and
add
pusha
mov
fs
dec
gs
fsubrs
xorps
pop
cmpsb
mov
dec
ljmp
hlt
sbb
jno
jne
or
imul
js
nop
je
adc
push
je
enter
adc
mov
push
nop
mov
mov
out
mov
lock
addr16
pop
aaa
push
mov
scas
push
mov
out
rep
fs
push
mov
fcomps
movsl
gs
adc
inc
mov
pop
jl
orb
cmpsl
xor
pop
pusha
push
xor
ja
xchg
cltd
out
out
loopne
ljmp
and
mov
jl
test
jbe
push
mov
sarb
popa
loop
fidivl
cmp
mov
sti
pop
leave
aad
imull
popf
fs
fisttps
fisubrl
nop
adc
fiadds
or
dec
fsubr
xchg
lock
rclb
aaa
mov
xchg
hlt
stos
mov
bound
jge
lret
xchg
jg
inc
mov
sbb
mov
jg
jae
fldcw
gs
mov
push
enter
sub
aad
cli
js
add
stos
mov
cmc
and
sti
pop
inc
sbb
xor
cmp
mov
push
mov
pop
or
fimuls
mov
cltd
adc
ja
out
lock
jp
push
cwtl
icebp
dec
outsb
test
pop
std
sti
or
xchg
sbb
es
insb
mov
aaa
loopne
pop
add
mov
xchg
or
inc
pop
cld
sub
outsl
cmp
mov
gs
repz
lods
shl
in
xor
imul
mov
lahf
jnp
jnp
fimuls
jo
repz
leave
loopne
sbbb
sub
mov
fisttpll
push
sbb
lds
stos
cld
inc
xor
dec
test
lret
dec
fidivl
out
add
push
and
rcll
stos
jns
fidivs
movsl
test
loope
sub
push
ret
mov
mov
dec
fildl
arpl
add
outsl
stos
pop
mov
cli
mov
loopne
int
push
cmp
and
push
push
push
imul
xchg
out
cmp
outsb
je
outsb
add
es
lcall
cmc
inc
sbb
in
loop
add
pop
push
cmp
push
call
jne
pop
stos
arpl
xchg
push
xor
test
hlt
mov
fwait
shl
mov
or
jmp
and
pop
xchg
adc
push
loope
clc
rolb
loope
rcl
scas
flds
shrl
outsb
push
jne
or
xchg
mov
jo
pop
xchg
lock
outsb
movd
mov
mov
divb
push
sbb
lret
stos
adcl
lret
insl
lock
into
shl
xchg
cmp
sub
add
dec
xor
cmc
adc
stos
out
js
push
push
cmpb
cld
loope
test
int
in
and
les
cmp
loope
jnp
push
dec
leave
jge
lahf
jae
xchg
mov
test
out
sbb
jl
mov
mov
loopne
fwait
push
pop
aas
cmp
in
adcb
andl
cmp
sub
xlat
adc
lods
push
mov
push
scas
dec
ss
ss
lods
arpl
xor
test
dec
pop
fbstp
dec
idivb
lods
bound
jmp
mov
in
test
xor
aam
fs
in
fimull
sti
fisubrs
xchg
je
push
rorl
js
xchg
sub
sub
cli
loope
aaa
jo
test
stos
xor
xchg
add
mov
pop
lock
enter
int
jo
adc
or
sbb
out
pop
mov
enter
fildl
popa
int
push
xor
sbb
or
ss
jp
sbb
repnz
and
negb
aas
mov
jle
jle
sub
iret
in
mov
out
adc
std
mov
fimull
mov
xlat
sub
mov
dec
stos
xchg
je
push
orb
fistl
mov
outsl
daa
pop
mov
mov
pop
jo
dec
fmuls
cmp
pop
pop
inc
je
decl
rcrb
scas
and
outsl
repnz
sarb
xchg
mov
mov
adc
rcrb
mov
in
mov
stc
out
jno
pushf
mov
cli
dec
lods
push
add
push
and
xor
push
dec
in
cmc
inc
enter
stos
mov
clts
movsb
mov
push
push
inc
adc
mov
and
push
int
jmp
scas
sub
loop
repz
sbb
cmpsb
pushf
lods
pop
fwait
mov
sahf
nop
cmp
fcmovb
jb
xchg
inc
or
inc
lds
out
std
push
add
sbb
xor
and
adc
iret
jb
mov
sub
mov
xchg
sahf
xorb
loop
sbb
mov
lcall
enter
ficompl
das
and
xchg
movsl
inc
add
imul
mov
notl
push
rcrb
cmp
xor
out
dec
sub
inc
repz
dec
pop
lea
in
mov
sbbl
xchg
mov
in
push
leave
push
das
or
pop
fstpl
mov
shl
ret
mov
pop
jo
cld
movsl
push
mov
adc
idivl
add
clc
sub
movsb
cmc
dec
in
sbb
cmp
scas
push
cmp
fwait
scas
xchg
arpl
int
bound
addl
cmpsl
insl
cs
mov
test
inc
dec
pop
pushf
mov
mov
jae
mov
inc
cltd
xchg
push
push
xor
jbe
jne
pop
mov
ds
mov
xor
ror
sahf
inc
jecxz
jnp
add
sbb
stc
adc
xchg
add
push
rcrl
std
insl
dec
jle
and
or
test
push
stos
test
jmp
repz
and
ljmp
jns
imul
cwtl
and
mov
ret
and
test
sbb
psllq
pushf
cmpsl
subl
call
mov
xor
inc
or
xor
mov
mov
cmpsb
jle
jae
inc
mov
adc
inc
fildl
inc
xor
cmp
xchg
test
repnz
arpl
adc
stos
int3
pop
mov
lret
xlat
shrb
rcl
cmp
lcall
pop
or
imulb
jp
outsb
sub
inc
jbe
xor
das
in
adc
cmc
out
aaa
inc
cmp
push
mov
xchg
or
mov
push
cltd
sti
stos
and
aas
ror
and
insb
std
adc
jns
jo
pop
sub
adc
adc
and
pop
pushf
call
nop
addr16
dec
mov
or
ljmp
and
xchg
test
clc
cmc
or
mov
call
movsl
pop
lods
and
popf
xor
pusha
xchg
in
inc
test
mov
int
loopne
arpl
scas
inc
rcll
fsubr
shlb
push
push
cmpl
inc
mov
aam
sbb
test
xchg
fsubs
dec
and
out
adc
jg
into
adc
lret
in
mov
cmp
movsl
aaa
aas
test
pop
mov
jp
add
mov
fidivl
loope
inc
adc
adc
inc
add
fwait
xchg
loop
gs
add
rorb
and
mov
js
or
sub
popa
mov
push
popa
mov
je
in
cmp
mov
jbe
add
les
sbb
hlt
push
mov
out
and
and
iret
icebp
fldt
test
jle
add
xchg
out
mov
cmp
adcl
scas
mov
pushf
pop
push
iret
dec
mov
or
scas
outsl
rcrb
cmp
orl
adc
jnp
gs
ljmp
xor
fbld
subb
xor
ret
adc
sbb
loop
pop
push
je
push
dec
sbb
nop
into
lods
cmpsl
lahf
ret
mov
push
adc
fidivrl
loope
shll
rcr
jno
xchg
icebp
sahf
push
iret
dec
aad
adc
les
inc
ret
dec
data16
rorl
dec
aad
out
add
pop
inc
cs
rcl
mov
out
pop
fucomp
jno
fcompl
inc
addr16
lods
cmp
dec
push
inc
cmpsb
lock
test
xchg
or
mov
lods
fcomip
int3
leave
push
repz
loopne
adc
clc
mov
jb
push
cmp
iret
in
add
mov
and
mulb
test
or
xchg
cld
int
mov
jb
sahf
aad
push
push
mov
pusha
adc
inc
sbb
sub
lds
cltd
sbb
dec
or
hlt
movsl
sbb
outsl
das
outsb
xchg
jne
ret
mov
andb
cs
arpl
sub
xchg
and
daa
movsb
dec
adc
popa
push
push
xchg
adcl
ljmp
out
mov
rcrb
roll
add
sti
add
int3
loop
push
jns
mov
jne
xlat
add
sbb
in
and
mov
cwtl
clc
jp
jge
shlb
cmp
xchg
xchg
pop
lcall
push
dec
add
mov
jle
stos
mov
push
or
xchg
jno
cmp
push
mov
cli
pushf
sti
jne
xor
in
jle
clc
cmpb
sarb
dec
jb
and
sti
jnp
scas
mov
and
pushf
inc
fisubl
sub
cmp
jmp
mov
imull
dec
push
xor
mov
js
adc
cmc
movl
adc
bound
mov
fisttpl
loopne
dec
cmpsl
test
add
sub
sub
negb
fildll
push
mov
aam
ret
lods
jae
xchg
testb
in
mov
dec
xchg
scas
fwait
push
add
popw
sbb
xchg
xchg
and
out
js
popl
cld
aam
push
cmp
push
mov
lods
sbb
xchg
mov
fisttpll
pusha
sub
push
adc
or
jg
in
rol
dec
ljmp
dec
mov
aas
jne
call
and
mov
sub
ja
lcall
bound
in
frstor
cwtl
repnz
movsl
push
push
pop
aas
pop
jo
jae
xchg
add
xchg
insl
insb
cmp
mov
std
xor
aaa
push
and
insb
push
xor
dec
add
lret
cmp
jle
mov
pop
or
push
mov
xor
push
pop
ss
inc
popa
or
mov
push
push
pop
in
jecxz
fs
out
div
ficompl
xchg
dec
inc
roll
adc
xor
mov
cltd
mov
test
mov
ja
mov
push
sarb
mov
mov
dec
lods
pop
jns
pop
fs
lret
loopne
dec
out
les
jle
popa
and
mov
pop
ror
sub
cs
hlt
sbb
lret
mov
push
ss
dec
jecxz
add
dec
sub
cmp
les
or
ss
popf
cmp
xchg
dec
xlat
lods
pushf
or
or
sbbb
nop
adc
test
popf
sahf
aas
cmp
or
cld
or
adc
mov
add
xchg
or
mov
jmp
lds
cmpsb
mov
dec
mov
and
call
inc
cltd
rcrl
dec
jmp
loopne
dec
mov
inc
adc
into
mov
ljmp
test
lcall
out
inc
sti
mov
xchg
jl
jbe
lret
ret
pop
inc
mov
paddusb
or
call
jnp
icebp
dec
fsubs
sub
sbb
in
stos
jg
jbe
ret
or
leave
mov
adc
aad
js
jmp
mov
mov
xchg
sbb
fs
hlt
cmp
sbb
pop
dec
loope
jno
cli
test
mov
je
sbb
cld
outsb
aad
cli
jmp
cmp
pop
xchg
imul
pushf
daa
mov
pushf
nop
mov
mov
test
pop
xchg
mov
loopne
aad
xor
popa
addr16
inc
std
mov
add
dec
out
clc
push
xor
sbb
add
shr
int3
movsl
inc
sti
xor
and
or
push
out
add
fldl
cmpsl
or
pop
adc
movsl
roll
cmp
pop
jb
imul
jno
pop
fdivl
clc
cmpsb
cld
and
cmp
jns
or
push
je
lea
out
lret
cli
loope
pop
shl
jmp
add
testl
mov
loopne
mov
mov
std
xchg
fnstsw
loop
sub
add
inc
insb
data16
fstps
jecxz
push
aam
pop
dec
cmp
jge
popf
fistl
xchg
push
popf
scas
int3
mov
push
mov
out
orl
jge
and
lock
out
xchg
fistpll
pushf
pushf
mov
aaa
insb
ljmp
adc
jne
xrelease
push
imul
ret
push
addr16
mov
mov
pusha
insl
loop
neg
jp
pushf
or
pusha
pop
lea
add
imul
out
push
cltd
out
jp
iret
or
pop
jb
sbbl
or
ja
in
push
sub
movsl
outsb
lret
cmp
jmp
adcb
arpl
xor
outsl
jg
inc
xor
inc
add
dec
cmp
nop
ud1
fsubs
mov
sbb
adcl
test
in
aaa
xor
jne
add
adc
out
sbb
movsl
test
rolb
insb
xchg
or
pop
filds
mov
repnz
push
inc
jmp
insb
mov
lods
push
sub
inc
sbb
imul
mov
pop
pop
add
subl
sbb
adc
pushf
mov
pop
in
cmp
xchg
xchg
mov
push
out
loope
xor
pop
jecxz
sub
out
mov
pop
stos
jae
pop
mov
lret
xchg
movsb
cli
mov
mov
test
jb
mov
mov
xchg
sahf
cmp
pop
push
outsl
js
lcall
mov
lods
dec
push
push
push
dec
ret
icebp
popa
ljmp
cmp
push
sbb
stos
pop
lret
orl
fnstsw
mov
adc
sbb
in
lret
lret
xor
test
pop
fildll
pusha
lea
xlat
push
fs
arpl
je
sub
dec
mov
xchg
movsl
jmp
rcr
stc
ss
jbe
adc
or
mov
mov
dec
push
hlt
or
and
iret
cmpsl
scas
jnp
arpl
stc
inc
test
push
push
sahf
or
ficoml
inc
roll
jno
inc
xchg
mov
push
sub
ss
leave
ds
addl
lcall
push
jp
mov
in
and
mov
jmp
dec
stos
mov
in
mov
ret
addr16
in
mov
and
iret
cmp
inc
push
testl
iret
cs
cmp
dec
jmp
fdivrs
push
lahf
gs
imul
dec
clc
push
iret
outsl
adc
hlt
popa
hlt
push
push
call
dec
pop
inc
lods
imul
stos
mov
pop
push
mov
mov
das
push
pop
arpl
les
cmpsb
xor
scas
add
mov
adc
aaa
cmpb
push
js
stos
ffreep
push
pop
pop
rcrl
shll
sti
into
lock
dec
mov
stos
imul
in
inc
inc
lahf
loop
sub
xor
mov
jns
negl
sub
dec
mov
mov
in
clc
pushf
mov
jl
imul
in
push
shll
lret
sbb
leave
gs
jmp
adc
ret
into
gs
xchg
fists
testl
roll
inc
in
or
ret
cmp
outsb
add
xor
cmp
sub
fdivs
pop
lret
fsubr
pop
dec
pop
mov
lds
leave
andb
into
xor
inc
out
popf
enter
aaa
jo
push
daa
clc
xlat
loop
ret
inc
dec
fnclex
and
xchg
popl
pop
nop
sub
jmp
mov
push
mov
sarl
mov
cs
fs
xchg
inc
insb
cmp
push
pop
test
pop
ljmp
push
lcall
cmpsl
xchg
pushf
fisttpll
mov
jbe
loop
xchg
andb
cs
lea
sbb
mov
sub
mov
push
lcall
testl
ss
pop
rorl
jg
arpl
mov
mov
jg
cmp
cmpsl
sahf
aam
orb
mov
das
shlb
push
nop
push
outsl
xchg
pusha
adc
ret
inc
shll
in
cmp
inc
mov
lret
stc
in
lds
out
sub
xchg
mov
stos
les
rcr
pop
and
shrb
jl
pusha
out
push
inc
cmp
pop
mov
jle
xlat
bound
sbb
push
lret
test
and
push
cltd
sar
or
jae
mov
cld
orb
sbb
mov
stc
clc
mov
mov
leave
adc
xchg
push
leave
pop
xor
jae
fbld
mov
push
add
call
inc
dec
and
out
mov
jle
fcomps
mov
jg
pop
xor
sub
fldenv
jge
mov
scas
adc
out
xlat
sbb
jb
fnstenv
xorb
inc
adc
jl
shlb
jnp
sar
cmpsl
adc
sbbb
or
lods
fsubl
inc
mov
gs
xlat
sbb
int3
pop
mov
adc
pop
xor
sub
daa
repnz
cltd
jp
insb
in
xchg
cmp
test
mov
dec
in
out
or
ljmp
repnz
out
mov
inc
cmp
lods
imul
or
out
mov
mov
jnp
in
xchg
das
pop
shrl
lahf
sti
cli
loop
cmp
pop
mov
xor
jne
cmp
sbb
jae
or
mov
loopne
fldl
sbb
icebp
enter
lock
mov
mov
xor
jno
inc
roll
add
jbe
xor
outsl
push
lods
mov
out
mov
lret
xor
rclb
mov
push
and
pop
mov
je
adc
ds
pop
repz
xorl
dec
fsubr
rolb
ficompl
push
cmp
sahf
mov
scas
pop
int3
cmp
jp
dec
imul
clc
cmpb
mov
inc
jmp
cmpsb
loop
cli
shrb
mov
rcll
push
cltd
subl
cs
cmp
in
sahf
addr16
cmp
in
xchg
cmpl
mov
push
test
xor
ficompl
sahf
shrl
and
xchg
push
test
cwtl
lahf
dec
xchg
icebp
insb
imul
insb
icebp
aam
and
es
jno
jmp
lds
lret
sti
popf
xor
jge
leave
test
ds
fwait
xchg
adc
nop
mov
shl
sub
jns
loopne
lods
push
fmuls
imul
andl
enter
sub
inc
xlat
cmp
push
stos
rorb
and
mov
cli
lret
sahf
mov
mov
cmp
or
adc
push
test
mov
dec
aaa
xor
cwtl
xor
xor
inc
lods
in
jns
ret
aam
shlb
mov
jge
xchg
jne
xor
out
in
fwait
loope
out
insl
das
cltd
aam
mov
outsb
sahf
push
sub
bound
cmp
daa
jmp
push
sub
out
sub
stc
xchg
inc
mov
std
aaa
movsb
sbb
sahf
dec
mov
mov
jne
imul
clc
in
shrl
mov
or
enter
test
mov
int
add
imul
sub
sbb
testb
stos
push
and
mov
sub
out
push
add
mov
inc
add
xor
loope
test
ds
repnz
jg
or
inc
pop
je
shrl
inc
adc
ficoms
fldcw
mov
mov
cmp
repz
jecxz
rcrl
inc
jle
pusha
clc
cmp
inc
and
jl
inc
ss
push
fidivrs
out
sti
or
jmp
pop
mov
mov
add
icebp
mov
scas
sar
js
inc
or
dec
test
sub
jb
in
stos
sub
ret
out
popa
roll
and
or
push
test
leave
or
cld
mov
hlt
mov
push
lret
xor
movsb
insb
add
sub
in
adc
pop
jle
adc
inc
and
daa
pop
loopne
mov
fidivrl
inc
lds
fcoml
sahf
jge
push
fstpt
jns
adc
add
or
dec
ret
jns
jecxz
inc
cmpsl
inc
stos
jp
lret
in
sbb
cwtl
mov
mov
je
xor
or
sub
popf
aaa
cmp
mov
ss
daa
push
mov
int3
sarb
push
push
std
push
push
adc
jae
push
xchg
and
pop
xor
push
mov
dec
adc
jne
dec
inc
insl
lods
mov
push
mull
add
adcl
add
ljmp
mov
lahf
ja
dec
mov
repnz
mov
clc
push
mov
add
movsl
xor
test
fsubrs
stos
and
scas
mov
push
les
inc
ss
push
cli
cwtl
mov
xlat
cmpsb
loopne
out
shl
mov
dec
mov
out
mov
clc
sbb
sbb
daa
sbb
pop
xchg
xchg
push
call
mov
xchg
inc
push
mov
cmp
jl
movsl
stos
push
sbb
gs
cmovg
stos
aam
push
cmp
adc
push
xlat
and
les
iret
imul
imull
pusha
xor
cmp
push
pop
cli
jnp
sbb
ss
repz
lds
pushf
ds
push
inc
sti
or
dec
cs
xchg
mov
repnz
lods
push
lods
dec
add
arpl
push
jmp
hlt
stos
xchg
test
dec
jnp
and
nop
std
orl
sbb
fwait
jbe
xor
les
ds
rorb
rolb
inc
scas
scas
sbb
xor
das
push
push
imul
bound
movsb
and
sbb
push
shll
sub
pop
repnz
aaa
imul
dec
cmpsb
daa
push
imul
and
xchg
fldenv
mov
imul
jnp
inc
je
cwtl
js
add
frstor
and
mov
test
inc
mul
lea
mov
clc
ret
test
ja
out
je
sarl
cli
jecxz
mov
xor
and
iret
fidivrs
and
xor
test
popa
movsb
cmp
mov
rcrl
stc
faddl
push
insb
out
mov
dec
cmp
cltd
mov
xchg
xchg
jmp
xchg
inc
jle
imul
pop
out
testl
push
icebp
outsb
push
loop
jo
and
add
aam
aas
mov
or
xchg
jno
rcl
rclb
icebp
cld
or
xlat
push
cmp
sub
add
pop
add
test
hlt
shl
xchg
push
rep
mov
jnp
leave
xlat
push
jl
xlat
add
pop
sbb
sahf
sbbl
addr16
notl
cli
jle
jns
sbb
lea
out
jb
mov
dec
cmpsl
jnp
cs
mov
scas
mulb
cmp
pop
xchg
mov
and
leave
push
cmp
adc
mov
repnz
in
cld
arpl
cwtl
ss
iret
out
cmc
mov
xchg
insl
divl
pop
inc
pop
mov
mov
mov
xchg
or
fwait
xchg
add
xor
xlat
and
or
xchg
scas
jns
rcll
lods
jl
jge
add
adc
aas
mov
insl
aad
daa
mov
cmpsl
pop
pop
add
andb
add
xor
pop
jno
pop
fisttpl
cmpsl
in
pop
mov
outsb
xchg
fisubrl
or
lcall
popa
xchg
mov
daa
mov
lock
sbb
jp
push
dec
mov
imul
add
fnstenv
fwait
pop
add
rcr
jmp
outsl
mov
mov
cmpsb
das
arpl
outsb
add
outsl
jae
xchg
mov
lods
push
and
cmp
adc
ds
jbe
dec
add
shlb
fwait
mov
fbstp
cmp
jno
ja
sbb
sub
cli
ss
out
inc
mov
mov
inc
stos
cmp
xor
cs
pop
cmp
imulb
pop
adc
pop
cs
mov
jnp
adc
leave
mov
mov
pusha
push
xchg
sbb
inc
mov
mov
xchg
xor
sub
imul
movsl
shll
xorl
jae
add
pop
fstps
inc
and
imul
adc
movsl
push
arpl
lret
gs
cmp
test
mull
into
ja
rclb
out
xor
inc
adcl
pusha
adc
jo
cli
adc
xchg
lret
arpl
cmp
add
lock
sub
outsb
pusha
lock
int3
hlt
sarb
scas
pop
cmpps
inc
add
add
push
mov
nop
mov
ljmp
add
push
sub
jno
cmp
ret
bswap
stc
jp
lds
or
outsb
lods
jecxz
rorb
sub
or
sbb
sub
pushf
enter
repnz
xchg
sahf
leave
xor
or
cmp
add
flds
jae
in
out
cmpsl
int
cmc
aad
xor
push
pusha
es
dec
ror
sbb
or
dec
jle
sub
inc
dec
sub
jne
std
and
pop
jne
repnz
shll
jnp
loope
and
fildl
jge
cmpsb
pop
inc
sahf
sub
jbe
xchg
sti
jle
xorl
cmp
testl
stos
loop
mov
movsb
mov
sbb
dec
fnstcw
scas
sub
loope
push
scas
scas
xor
mov
stos
or
sub
mov
orb
inc
jmp
jnp
xor
into
cmp
push
lret
xor
jo
cwtl
in
and
jecxz
push
call
xor
pop
push
xlat
sti
sub
pusha
push
mov
in
xor
push
repnz
mov
in
xor
inc
sbb
test
or
stc
push
les
and
jmp
pop
stos
mov
inc
dec
fstpt
xchg
cwtd
push
icebp
jae
xlat
add
pop
jge
dec
xchg
gs
clc
lock
and
jecxz
dec
jo
ss
lret
cmp
call
pop
push
cmp
std
xor
cltd
js
adc
jno
cwtl
test
fs
nop
sbb
or
in
inc
mov
and
sbb
dec
pop
mov
sbb
ret
jle
test
icebp
pushf
lret
loopne
out
push
jno
je
cmpsl
jecxz
push
jecxz
push
out
and
pop
test
pop
or
lcall
addb
movsl
jge
ror
xlat
pop
das
xchg
loopne
mov
fnsave
push
sub
jl,pt
in
in
aaa
movl
loop
or
and
pop
popa
loopne
inc
pusha
mov
sbbl
dec
pop
loope
cmpsb
mov
cmpsl
sti
dec
lods
xlat
cli
leave
jnp
mov
ret
or
xor
jno
in
cs
sbb
cli
cs
adc
cmpb
pop
inc
mov
sbb
cld
insb
adc
lds
scas
insl
sysexit
cmpl
stos
sahf
les
mov
mov
push
ficoms
mov
pop
mov
xor
sbb
dec
in
popa
fimull
xor
push
fld
xor
arpl
or
mov
dec
mov
hlt
add
add
xor
lret
mov
add
lret
pop
pop
testl
nop
imul
xchg
pop
shrl
in
pusha
mov
int
rorb
sub
jne
mov
sub
xchg
sub
add
adc
sar
mov
sbb
cwtl
loope
adcl
add
inc
aad
mov
cmp
loope
mov
jno
loope
xchg
cmp
sub
std
dec
add
push
jl
imul
loop
xchg
pop
mov
in
add
enter
mov
and
sarb
jge
add
add
shll
push
cmp
movsb
mov
cld
jb
and
sub
das
jp
testl
mov
out
ds
cmp
jnp
xchg
inc
or
das
je
add
adc
xlat
mov
jae
push
into
jg
sub
mov
ret
adcl
push
lahf
jecxz
movb
jae
jb
pop
cwtl
jmp
xchg
fisttpll
pop
adc
xorb
roll
insb
leave
sahf
les
lods
pop
dec
cmp
test
or
shrb
fstpl
stos
repz
stos
aam
inc
mov
fcoms
dec
pushl
scas
push
xor
push
cmc
jo
das
fsubrl
out
jb
lds
push
loope
into
adc
insb
std
pop
xor
ljmp
pop
add
mov
mov
xchg
mov
mov
cmp
pop
cwtl
loopne
outsl
insl
cmp
and
mov
dec
in
ret
outsb
loop
mov
stos
adc
mov
xor
lea
lods
cmp
enter
jmp
adc
inc
adc
lock
xorl
test
test
aaa
ss
xor
push
inc
rcl
and
mov
jo
pop
cmp
filds
test
fistpll
xchg
and
jl
mov
flds
imul
cld
stc
push
aaa
sti
mov
fsts
sub
cli
jb
shll
sbb
out
dec
dec
jb
fwait
mov
push
mov
sbb
insl
aaa
sbb
or
repz
cwtl
dec
fisubrs
shl
jecxz
shr
cltd
je
icebp
sahf
adc
stos
test
jge
or
push
jp
dec
dec
dec
push
sbb
sti
lret
lds
adc
sub
jno
push
mov
jmp
in
insl
negl
xchg
dec
data16
jg
mov
mov
mov
mov
fildll
lcall
mov
les
testb
lret
sub
inc
pop
mov
jg
in
adc
sbb
stos
in
inc
pop
test
in
dec
loop
jb
push
shl
inc
cmc
inc
mov
test
xor
add
lret
pusha
in
ljmp
adc
cltd
ja
lods
xchg
xchg
pushf
dec
cmp
cmp
sub
push
lcall
inc
out
sub
or
imul
std
push
imul
push
pop
ficoms
cmpsl
jecxz
clc
negb
fidivrl
cmp
je
js
clc
inc
aam
add
js
inc
add
mov
push
test
xor
adc
jae
add
inc
dec
add
cmpsb
add
dec
dec
cmp
out
push
in
jecxz
nop
aam
shll
sub
rcrb
popf
pop
ret
mov
sub
dec
lahf
push
fwait
xchg
rcr
lret
fwait
mov
add
outsl
daa
test
mov
inc
dec
or
jg
call
data16
arpl
mov
mov
ficoml
jo
mov
pop
insb
xchg
xchg
push
mov
push
sbb
inc
adc
fidivl
imul
mov
imulb
dec
aad
ljmp
outsb
nop
mov
icebp
sbb
lret
movups
add
xchg
xor
cmp
or
push
mov
sbb
sbb
test
inc
inc
push
mov
sub
inc
fsubrs
out
aas
pop
je
xor
loopne
xchg
into
loop,pn
nop
push
leave
mov
mov
and
dec
mov
mov
enter
push
sub
out
test
lock
push
repnz
and
mov
aas
aas
xor
mov
lahf
mov
jg
sbb
clc
rcr
ds
jg
mov
cmpl
add
rcrl
mov
pop
dec
andl
dec
inc
push
stc
push
sarb
add
and
rclb
cld
imul
jb
xchg
enter
out
fsubp
or
sbb
mov
mov
sahf
adc
out
mov
lahf
mov
jge
lcall
cli
cmp
in
inc
out
test
insl
mov
xchg
mov
rcrb
lea
call
movsl
push
bnd
or
push
test
mov
jp
push
in
pop
and
mov
and
push
orl
dec
lds
pop
repnz
outsb
cmc
mov
jno
adc
jae
sub
pop
clc
out
inc
sbb
ret
adc
dec
movsb
push
mov
jne
add
sbb
insb
stos
clc
aas
or
jmp
or
pop
mov
daa
stc
mov
enter
fs
and
enter
mov
xchg
lahf
cld
out
loopne
cmp
mov
ss
mov
aaa
in
mov
stos
xchg
rcr
sbb
pusha
fsubr
inc
rolb
movsl
loopne
push
adc
or
add
pop
mov
nop
push
jns
jmp
je
dec
xor
mov
sub
inc
mov
pushl
rcrl
das
push
addr16
loop
mov
jge
mov
cmpsb
jle
jb
sub
mulb
clc
xchg
imul
jg
adc
and
stos
pushf
or
mov
adc
cltd
cli
int
dec
enter
jg
push
mov
daa
sahf
in
das
mov
rcrl
imul
lea
mov
test
test
or
sbb
jmp
mov
cld
ret
or
jne
adc
jae
push
sub
std
sub
cmpsl
inc
mov
inc
jns
push
cli
imul
push
xchg
pushf
das
add
mov
pop
mov
icebp
bound
add
dec
push
xor
out
sub
aas
mov
or
pop
and
mov
pop
addr16
mov
push
jae
pushf
test
mov
add
inc
imull
call
lret
mov
sbb
mov
out
lds
push
cmp
cmpsl
mov
mov
cmp
jae
movsl
stos
scas
mov
in
pop
mov
mov
jg
loope
imul
pop
jecxz
mov
nop
leave
push
ds
mov
push
dec
das
outsl
or
or
fwait
mov
pop
mov
pop
pusha
add
iret
aas
mov
push
loopne
mov
add
push
sub
inc
leave
and
cs
pop
mov
and
or
sub
jle
push
insl
add
jo
xlat
test
sbb
lcall
imul
clc
xchg
jp
clc
push
sub
insb
sbb
or
shrl
popa
sbb
and
and
push
insb
ror
lock
das
lods
add
mov
sbb
data16
lock
call
int
outsb
pop
pop
das
sti
cwtl
dec
popa
xlat
xchg
sbb
ficoml
jmp
cli
sbb
lret
cmpsl
push
fwait
jb
repnz
cmp
jl
shl
dec
into
mov
jmp
xlat
sub
in
xlat
push
cmp
xchg
push
push
lock
cmp
cli
xchg
dec
int3
shrb
mov
push
orb
adc
es
cmc
sub
in
inc
inc
xor
jmp
jecxz
out
shrl
sarb
and
fnstenv
jo
pop
test
aaa
inc
and
sub
into
sbb
or
std
lahf
pop
mov
adc
sbbl
push
xor
sub
ss
test
stos
or
lea
pop
pop
popa
or
jne
pop
pop
cmpsb
jb
int
xor
sbb
push
sbb
inc
sbb
sub
fcoms
fucompp
pop
int3
icebp
std
cmpsb
popa
pop
mov
mov
and
mov
xchg
rol
flds
ljmp
push
shl
popf
rcll
sbb
xchg
inc
lods
std
test
sub
das
add
add
fistpll
inc
jp
xor
test
inc
add
es
nop
test
out
rcl
fxch
and
mov
jmp
jno
jne
xor
rolb
aas
inc
movsl
mov
dec
cs
mov
subl
fstpl
push
inc
pop
mov
push
xchg
xor
ror
cli
xor
push
mov
outsl
mulps
pop
test
or
pop
cmpsb
pop
imul
adc
test
int
xchg
data16
mov
jecxz
lret
push
xchg
in
std
fisttpl
mov
xchg
pop
mov
cwtl
push
sarl
xorb
into
leave
pop
in
dec
inc
xchg
mov
pop
notl
mov
jmp
adc
cli
out
pop
das
inc
sar
data16
adc
lods
xor
add
dec
jae,pt
mov
jo
xor
movsl
inc
mov
jl
pop
shrl
push
pop
lea
ljmp
fisttpll
jns
lods
pop
push
daa
pop
inc
inc
mov
mov
sub
daa
icebp
insl
mov
mov
and
popa
idivl
or
dec
xorb
push
sub
add
jge
adc
gs
lea
pop
lcall
leavew
test
pop
mov
mov
pop
pop
sub
sub
push
mov
out
test
sub
sub
xchg
sub
pusha
jl
les
sbb
mov
mov
mov
add
inc
inc
out
mov
je
mov
mov
rolb
loopne
loop
clc
pop
xor
or
add
jne
add
sub
leave
ss
mov
adc
dec
clc
push
mov
push
add
mov
xor
adc
push
and
addl
sub
xchg
and
sti
repz
jp
test
lods
aad
ret
es
jnp
incl
push
in
in
shlb
mov
dec
adc
lds
or
push
adc
push
outsb
clc
idiv
jno
adc
jo
dec
shll
leave
adc
xchg
and
lods
dec
jo
push
inc
dec
mov
imul
mov
mov
mov
movsl
shr
mov
sti
dec
cmp
mov
cmp
jle
pusha
xor
outsl
fstpl
mov
stc
dec
pop
mov
movsl
mov
outsb
mul
inc
lret
mov
xchg
hlt
cs
xor
cltd
int
inc
push
aaa
push
out
mull
xchg
add
mov
rclb
cmp
push
je
test
cmp
sbb
nop
scas
in
sub
arpl
icebp
popf
pop
xchg
pop
fwait
add
in
jb
mov
push
or
daa
add
fcmovbe
cmc
mov
in
push
ret
repnz
nop
mov
mov
push
jge
das
lds
push
das
clc
xor
inc
sbb
or
jmp
jns
inc
mov
jecxz
sbb
and
push
pop
fs
sahf
ret
jp
adc
xor
mov
jbe
add
inc
and
pusha
mov
fistl
sub
jns
push
jae
jg
add
cld
movl
rcl
fdivrs
mov
lea
jg
inc
cmp
mov
sbb
cmp
xor
imull
outsl
and
andl
cs
setae
mov
push
cmp
in
adc
xchg
shrl
adc
pop
xchg
add
jg
pop
es
xor
sbbl
xchg
add
xor
sub
es
mov
and
loopne
pop
jecxz
imull
daa
add
lea
push
aad
loopne
movsl
cmp
or
mov
call
sarl
das
ljmp
adc
mov
sahf
push
es
sbb
pop
cmp
fdivs
push
iret
dec
inc
mov
cmp
cs
popl
xor
js,pn
and
dec
sub
outsl
sahf
adc
jl
sti
mov
rorl
pop
jle
push
dec
jo
pop
data16
imul
movsl
or
jbe
push
or
sub
shlb
inc
movsb
xor
sub
dec
js
mov
cmc
xchg
push
dec
sub
push
dec
jp
les
sbb
mov
pop
mov
push
add
cmpsb
sub
lea
add
daa
aad
lret
inc
fwait
fwait
repz
ds
fidivrs
es
adc
cmpl
cmc
scas
push
xchg
jmp
adc
imul
jo
das
outsb
mov
mov
inc
in
movsb
mov
mov
loope
xchg
jecxz
add
ret
in
adc
and
dec
push
adc
sarb
jns
test
and
out
aad
dec
mov
pop
push
cmpsb
mov
aam
je
mov
push
inc
js
rcrl
push
outsb
addl
outsl
sbb
add
dec
or
outsb
sub
test
adc
mov
std
jb
nop
stos
cld
pop
lahf
adc
mov
dec
clc
mov
loopne
sahf
repnz
roll
xchg
xchg
push
adc
addb
leave
mov
movsl
mov
ds
cli
cmp
test
push
and
add
gs
mov
xchg
xor
in
flds
inc
mov
jns
mov
adc
out
dec
pop
mov
inc
jae
hlt
cmp
lds
int
xchg
pop
mov
pop
daa
push
mov
jl
mov
fdivrs
xchg
adc
or
stos
shl
js
cmp
stos
xor
push
dec
lock
addl
stc
dec
cmp
testl
jp
and
mov
lcall
and
inc
mov
pushf
js
sbb
pop
stos
and
add
jne
in
cli
push
lret
push
scas
pop
in
xchg
inc
outsb
dec
pop
fsubrs
data16
cmp
adc
dec
or
outsl
jg
cmpl
mov
dec
aad
pop
push
cmp
popf
mov
loope
push
add
ret
sub
mov
pop
add
mov
add
cmp
or
cwtl
insl
mov
jle
lret
cmp
in
inc
add
jp
call
xchg
mov
cmp
dec
mov
push
cmp
testb
arpl
insl
or
lret
mov
test
cmpsb
adc
jne
lds
jle
in
daa
jb
push
rcl
fsubl
stos
add
pop
and
xchg
clc
roll
cmp
mov
das
cwtl
or
push
ljmp
jl
in
rcpps
xchg
addb
repnz
aam
cmp
and
xor
cmp
mov
mov
rorl
adcb
in
and
lret
sahf
in
and
cmpsb
fcomps
sbb
jg
fs
fadd
lods
loop
aam
xchg
outsb
cmpsl
daa
adc
imul
imul
xchg
lret
mov
push
xchg
dec
mov
pop
push
pop
mov
cltd
loopne
pop
popa
dec
jmp
outsb
jmp
xchg
jg
sub
das
mov
pop
dec
mov
and
das
sahf
cmc
scas
aas
sbb
fucom
sbb
push
cmp
mov
scas
mov
subl
or
add
and
das
fadds
push
fldt
pushl
test
std
stc
inc
or
in
out
insl
ret
in
and
jns
or
push
lods
and
xor
xchg
popa
ss
add
insl
gs
add
outsb
push
cmpsb
inc
outsl
inc
in
fidivrl
das
int3
mov
movsl
jle
pop
jg
or
movsl
adc
fs
fs
pop
imul
into
scas
mov
sub
mov
pushl
cmp
test
pushl
mov
inc
into
mov
shll
fcoml
mov
mov
daa
insb
add
cmpl
xchg
and
insl
jbe
inc
dec
cmp
inc
stos
jmp
leave
and
out
dec
jl
rolb
pop
sub
add
mov
dec
push
mov
dec
lret
mov
and
lret
arpl
sbbl
push
sub
pop
dec
mov
js
js
jb
and
push
fs
mov
cld
dec
std
lock
fstpl
stos
cmp
out
mov
add
mov
pop
xchg
test
dec
orb
gs
addr16
add
xor
pop
or
mov
cmpsl
sahf
pop
in
dec
ret
mov
jmp
subb
xchg
xchg
mov
sub
and
sub
jmp
mov
inc
cmp
mov
jp,pn
popf
add
jl
leave
or
aas
jg
jnp
add
dec
lock
mov
xchg
js
fsts
jne
out
pop
push
inc
pop
adc
dec
out
push
sub
pop
ficomps
cli
movsl
cmp
popf
gs
mov
inc
mov
lea
ss
mov
in
leave
inc
popa
cmp
cmp
imul
repnz
popf
xchg
cmpsb
nop
cmpsb
or
stc
xchg
mov
mov
in
inc
test
mov
fsub
pop
xor
dec
pop
int3
pop
imul
fisttps
idivb
xchg
mov
orl
clc
fmuls
mov
sub
aad
pop
sub
and
pop
outsl
nop
or
or
ret
mov
aas
sub
pop
scas
adc
pop
inc
and
test
adc
popa
hlt
cltd
sbb
push
pop
sbb
jmp
mov
cmpsl
in
test
or
xchg
test
imul
push
dec
notl
icebp
std
clc
jne
cmp
jmp
push
pushf
xchg
out
les
jbe
and
mov
dec
sub
mov
xchg
stc
arpl
or
adc
jbe
sbbb
scas
subb
adc
mov
pop
mov
icebp
lock
push
xor
adc
xor
mov
add
mov
pop
jns
ds
test
lods
mov
pusha
repnz
jg
mov
mov
lock
push
add
mov
sub
arpl
push
stos
cmp
imul
push
adc
rcl
pop
push
lds
jp
int
cmc
mov
jno
jnp
cmpsb
ficomps
lock
mov
sbb
insl
jno
stc
mov
sub
inc
fcompl
cmc
fidivrs
shrl
outsb
push
and
cld
mov
push
les
mov
aas
mov
in
xchg
or
lret
xchg
test
adc
dec
stos
test
in
in
in
adc
les
xor
rcrb
stos
jge,pn
sub
mov
ja
dec
adc
int3
and
in
nop
nop
jmp
xchg
shrb
adc
push
std
adc
fmul
insl
mov
add
jb
and
pop
jae
mov
mov
mov
or
insl
les
mov
rcl
dec
lea
xchg
push
mov
js
inc
fcmovnbe
push
mov
lock
mov
xor
sub
outsb
xchg
mov
adc
xchg
mov
test
mov
xchg
in
inc
pop
inc
std
xchg
cli
dec
pop
out
xchg
mov
adc
fisttps
ret
mov
cmp
repnz
ljmp
inc
adc
lahf
push
add
push
or
sub
add
shl
das
pop
out
pop
and
fcmovu
das
adc
out
fdivrs
scas
pop
or
cli
fistpll
pop
addr16
sub
or
cmp
sti
and
dec
mov
mov
outsl
dec
sbb
xchg
in
test
cmp
pusha
mov
repz
jg
stos
xlat
loopne
xor
mov
or
dec
leave
adc
in
pop
fwait
mov
sub
mov
sub
jg
testl
cmp
fstl
mov
and
ljmp
adc
out
inc
nop
push
push
mov
mov
mov
repnz
loopne
call
cpuid
test
and
add
sbb
mov
ret
cwtl
lea
xor
push
mov
xor
adc
int
sbb
pushl
imul
cmp
push
test
not
test
xor
push
andb
test
push
filds
xchg
fmuls
adc
cmc
jns
sahf
sbb
cmpsb
js
addl
dec
push
mov
stc
sarl
arpl
sub
sbb
movsl
enter
fstps
cmpsl
loop
sti
adc
and
push
and
dec
mov
xchg
xchg
add
pushf
stos
push
ds
push
outsl
fs
or
stos
mov
sbb
and
mov
aad
in
adc
test
fisubrs
pop
and
cwtl
sbb
stc
adc
icebp
mov
push
leave
aad
pop
jmp
jle
push
xor
inc
sub
push
mov
les
icebp
lods
loope
mov
or
imul
lock
mov
sub
jg
xchg
inc
jg
dec
ja
cmpsl
cmpb
outsb
loop
xchg
ret
fcmovbe
dec
outsb
xor
inc
sub
in
jo
add
cld
or
adc
xor
notl
sbb
mov
aaa
bound
jl
sbb
inc
cs
aaa
into
mov
sbb
in
add
xor
xlat
inc
inc
xchg
jno
bound
xor
xor
cmc
fisubrs
xchg
jae
pop
lods
push
and
lcall
lds
movsb
loopnew
int
or
repnz
adc
out
in
dec
in
cmp
mov
arpl
and
scas
lahf
and
xchg
sub
sti
out
cld
cmpsl
sbb
push
imul
stos
push
xchg
sahf
mov
and
push
jno
cmp
sbb
add
lahf
pusha
jns
dec
adc
pop
loopne
mov
mov
sbb
dec
mov
shll
push
test
pop
jp
mov
adc
call
inc
push
icebp
popf
inc
lcall
mov
xor
test
fstl
cmp
sbb
out
inc
xlat
mov
mov
dec
ss
out
in
xor
and
mov
pop
arpl
sbb
push
pop
jae
mov
sbb
pop
addb
cmp
dec
pop
cmp
movsb
and
sbb
js
mov
jae
jle
sub
adc
cmpsb
stos
jge
xor
xchg
clc
xchg
fisubs
imulb
repz
mov
loope
jg
mov
clc
pop
stos
sub
in
sbb
push
sub
mov
mov
iret
pop
mov
lahf
add
lret
ja
arpl
cmpsl
adc
shrl
dec
lcall
push
push
and
sub
inc
test
push
ljmp
or
jl
clc
fnstsw
sub
sub
xchg
js
scas
jge
daa
jne
xchg
xor
push
cwtl
mov
out
mov
in
xor
lds
insb
adc
mov
stc
xor
sub
mov
shlb
cs
push
ss
cmpsl
cld
inc
cs
pop
xor
mov
xchg
cmpsl
cmp
and
lea
push
mov
push
testb
les
icebp
dec
test
sub
aam
je
cmp
stc
push
js
lock
add
ja
mov
jle
clc
or
add
mov
lcall
ret
int3
les
dec
adc
xchg
arpl
dec
outsl
clc
add
cmpsl
xor
aaa
push
or
test
je
push
fadds
mov
jmp
aaa
jl
test
lret
cmp
mov
popf
jbe
add
fnstcw
into
pop
loop
push
leave
sarb
mov
test
and
loope
mov
lret
jle
das
mov
in
das
popf
cli
outsb
rorb
cltd
and
fisubrl
out
clc
xor
dec
mov
cmpsb
add
or
lea
add
pop
adc
cld
in
xor
enter
adc
bound
and
push
mov
push
jge
sahf
cld
pushf
loopne
iret
xchg
jecxz
cmc
inc
sub
sahf
or
xor
jno
inc
adc
jns
outsb
mov
xor
lods
or
push
pop
add
pop
push
push
scas
pushf
test
es
mov
pushl
icebp
out
jb
cmp
push
test
adc
cmp
inc
aas
outsl
je
outsb
cmpb
fisubrs
insl
mov
je
testb
jnp
push
movsb
mov
xchg
sar
adc
scas
cmpsl
cmp
ljmp
std
inc
add
je
ss
xchg
in
out
popf
fs
jo
and
pop
sti
dec
faddp
dec
inc
add
dec
and
addr16
cld
inc
add
mov
mov
jnp
pop
add
inc
jp
cltd
pop
cmp
mov
jo
add
stc
cmpb
jp
mov
cmpsl
movb
mov
adc
pop
fdivr
movsb
clc
push
in
mov
sub
pushf
cmp
mov
pusha
int3
out
inc
xor
sti
mov
in
and
es
dec
jmp
scas
lea
insb
inc
std
jne
adcl
cmp
jbe
mov
incl
xchg
roll
xchg
rorb
pop
incb
test
or
aas
loope
pop
and
inc
ja
aam
imul
dec
lahf
sub
lods
jle
lret
pop
enter
inc
fs
or
arpl
fadds
add
adc
jns
lock
ret
js
ja
iret
cmp
shll
cltd
xchg
mov
pop
dec
xchg
jo
sub
pushf
pop
pop
dec
xor
dec
lock
js
push
mov
outsb
add
or
sbb
lahf
xchg
shll
dec
mov
xor
mov
lret
adc
add
lods
push
ret
mov
imul
fs
pushf
sar
sub
pop
mulb
xchg
test
xor
mov
fdivl
data16
push
sub
push
jno
lds
jmp
aam
and
lret
daa
xchg
dec
out
dec
dec
sbb
dec
sub
and
fldenv
push
sahf
mov
push
or
pop
loope
icebp
inc
inc
in
inc
and
or
push
xor
mov
push
mov
and
inc
insb
xor
aas
cmpsb
dec
test
lret
dec
lods
mov
data16
or
insl
lret
pop
mov
sbbb
push
push
sbb
jnp
mov
xchg
inc
mov
jecxz
fdivrl
lahf
dec
cs
pop
sbb
mov
mov
add
bound
dec
xor
jne
ja
dec
fs
push
es
rcll
fildl
mov
or
xchg
in
push
xchg
add
and
cmovle
pop
push
je
hlt
loopne
sbb
ss
xchg
arpl
jmp
and
inc
and
dec
loope
add
sbb
sbb
imul
into
mov
pusha
pop
or
daa
add
stos
sarb
pop
cltd
inc
pop
std
sub
lret
jno
inc
out
cli
mov
insb
sub
shrl
push
jge
mov
addr16
jbe
and
adc
mov
stos
push
lcall
or
dec
mov
push
push
pop
stos
xchg
mov
mulb
push
dec
cmpsl
xor
std
or
imul
sub
push
inc
loop
xorl
push
dec
jge
cmpsl
cmp
mov
push
shll
cmp
mov
orb
pop
cmpsl
roll
mov
mov
dec
mov
inc
fcmove
dec
jne
sbb
jp
popa
rorb
mov
mov
mov
cmc
mov
insl
cli
mov
repnz
push
inc
mov
add
test
inc
outsl
add
xchg
pop
inc
inc
movsb
pop
push
sahf
fwait
mov
sti
inc
mov
cmp
mov
pop
in
inc
in
int3
ds
pop
xor
loope
xchg
mov
popf
leave
pop
in
pop
jl
iret
leave
and
and
cli
xchg
idivb
xor
es
add
mov
loope
daa
les
rolb
mov
test
pusha
sub
mov
xlat
fistl
cltd
xor
roll
lods
out
push
sarl
inc
adc
xchg
xor
sub
imul
sti
dec
xchg
fs
xor
add
pop
add
ds
push
hlt
pop
push
dec
ja
sbb
shrb
inc
cwtl
roll
or
or
adc
sbb
jg
addb
xor
sbb
adc
leave
mov
scas
in
cmp
loope
mov
popl
sti
leave
stos
into
pop
imulb
mov
icebp
inc
push
xchg
leave
addl
dec
frstor
mov
and
fldt
push
cmc
cs
dec
push
dec
lcall
cld
mov
mov
nop
jle
mov
or
xchg
sbb
pop
out
jne
scas
add
mov
and
stos
outsb
push
sbb
mov
inc
sub
jle
in
ss
cwtl
test
int3
mov
sarb
test
ror
push
pop
sahf
dec
jnp
cmp
dec
add
and
cwtl
clc
out
in
movsl
ret
pop
jno
push
aas
jp
cmp
les
cmp
mov
mov
mov
adc
fcmovnbe
inc
add
das
push
jnp
stos
and
push
inc
inc
cmp
cmp
shlb
mov
pushf
push
jmp
mov
xlat
fiadds
rclb
into
insb
sbbl
add
lret
stc
xor
mov
dec
lea
mov
xchg
fnstsw
test
cmp
loopne
fs
stos
clc
in
mov
mov
pop
int3
push
lods
pop
or
mov
push
jns
fimuls
mov
icebp
std
push
fnsave
cmc
not
daa
jo
cmpsl
mov
js
das
fldl
sahf
lahf
sarb
fsubrp
mov
fwait
loopne
inc
ss
fwait
xor
push
in
out
loop
sti
push
push
fdivrs
stos
fsubl
mov
call
out
scas
pop
or
push
call
xor
adc
aad
insl
jno
push
jle
enter
xchg
or
cs
test
cwtl
movsl
sarl
sbb
push
jl
sub
mov
jp
jp
jmp
dec
stc
jg
sti
fwait
ret
mov
jo
sbb
movsb
push
insb
subl
insl
stc
mov
js
inc
inc
fcmovne
fistpll
mov
xorl
and
popf
push
mov
adc
sahf
lahf
xchg
push
decl
loop
pop
push
add
push
fisttpll
mov
int
inc
insl
cmp
add
jae
fbld
sub
and
or
mov
shl
sub
gs
and
jae
or
or
sub
cmpsl
push
scas
and
movsb
jle
fisubl
in
js
push
shrl
cmp
or
lret
stos
mov
gs
xor
aad
xor
push
loop
lret
sub
std
out
jo
in
test
xor
movsb
mov
stos
pop
jno
test
xor
mov
xor
stos
out
dec
and
xchg
dec
dec
jb
int3
call
insb
repnz
sub
fstpt
loope
cmp
mov
jns
in
mov
int
add
sub
cli
adc
jg
loop
inc
insl
push
adc
out
test
subb
or
iret
clc
dec
rcrl
mov
lods
aam
stos
and
inc
pop
lahf
mov
and
sub
jp
in
push
xor
rcll
insl
xlat
sbb
enter
sti
pop
inc
xchg
jp
sub
mov
sub
jne
mov
xchg
hlt
test
dec
test
icebp
and
fdivrl
pushf
and
mov
pop
fsubrl
sub
pop
imul
lods
mov
sub
adc
in
and
sub
sbb
addl
popa
push
loopne
push
xor
lea
les
dec
cmc
das
insl
lods
xchg
cmp
pop
into
dec
out
jb
nop
xchg
sub
or
loope
push
xchg
imul
mov
jae
fwait
sbb
sbb
push
mov
mov
cmp
xchg
xchg
loope
sti
cli
movsl
loope
les
mov
jne
sub
into
and
push
jmp
in
mov
dec
outsl
pop
inc
mov
inc
jg
adc
ret
mov
dec
sbb
lret
je
or
jge
fs
js
bnd
push
aaa
xchg
jl
pop
stos
mov
cli
fcoms
dec
push
or
mov
lret
inc
and
adc
xor
and
xor
lret
lret
ljmp
push
sub
dec
xor
and
mov
or
pop
xchg
not
cmp
or
cmc
mov
rcll
loopne
cmp
cmpb
stc
jo
stos
daa
mov
mov
repz
xchg
iret
test
push
xchg
or
mov
movsb
xchg
mov
testb
inc
and
lea
sub
inc
pop
nop
pop
sub
mov
aas
sbb
jge
lret
into
call
andl
sbb
and
and
xorb
mov
push
lcall
adc
test
addps
pop
inc
sub
pop
adc
into
sbb
mov
and
and
std
popa
pop
mov
push
test
in
mov
mov
sbb
xor
jmp
push
mov
add
in
fs
jnp
jo
js
inc
sti
in
mov
outsl
jg
pushf
data16
sbb
mov
lea
mov
or
int3
sti
repnz
sub
xchg
mov
xchg
pop
testb
aaa
adc
add
lock
mov
out
sbb
les
jp
fdivs
fs
cwtl
testl
mov
push
popa
dec
mov
lock
ret
sbb
xchg
ficompl
aas
int3
std
aas
mov
push
mov
add
mov
dec
je
lea
int
ss
push
mov
and
push
enter
outsb
mov
inc
pop
mov
std
xchg
popl
add
aad
mov
lods
outsb
jle
data16
pop
mov
aad
pop
repnz
je
or
dec
aaa
pop
jnp
mov
xchg
jmp
jp
loop
push
jae
pop
mov
out
mov
jle
xchg
jecxz
mov
jmp
xor
push
mov
jbe
repz
push
fistl
ljmp
jae
cld
dec
movsl
add
call
loopne,pt
out
sahf
das
jno
inc
adc
lods
and
cmp
sbb
xlat
leave
pop
insb
mov
jnp
mov
add
push
cld
inc
dec
dec
aas
sbb
hlt
hlt
lahf
rcll
aas
lock
leave
inc
cld
out
es
jns
rorl
jl
mov
nop
or
adc
push
sbb
xchg
shll
push
xor
jb
push
mov
inc
into
int
btr
mov
sub
imul
insb
and
insb
xchg
and
jmp
xor
clc
icebp
mov
nop
ds
xor
push
imul
out
sbbl
xchg
inc
nop
scas
movsb
adc
test
testb
dec
sbb
dec
dec
xor
out
stc
xchg
das
and
cwtl
mov
pop
jmp
cld
jnp
pop
jl
les
adc
fmuls
sub
fsubrp
scas
je
adc
fstpl
dec
ja
jmp
aaa
mov
imul
ficomps
push
mov
cmp
aas
in
push
or
cltd
popa
dec
jg
test
adc
and
enter
aaa
lahf
lds
push
les
push
mov
jb
mov
sbbl
gs
rep
loopne
mov
icebp
roll
testb
jb
or
outsb
mov
js
js
cmp
dec
push
jb
aas
aam
arpl
mov
xor
sarl
push
fndisi(8087
dec
sahf
pop
sub
int3
cmp
pop
inc
stc
cmpb
aam
and
push
mov
sub
mov
inc
test
stc
sbb
cltd
lea
ficomps
pop
enter
jp
pusha
mov
sbb
sbb
sub
hlt
inc
sbb
dec
add
sahf
comiss
ret
loope
movsl
jge
and
test
push
and
mov
push
xchg
adcb
aam
subb
int3
stos
fcmovne
inc
idivb
jle
mov
push
addr16
and
dec
outsb
ljmp
sub
mov
dec
add
fmul
loopne
stc
in
jg,pt
sub
xchg
cli
mov
aas
xchg
pop
or
dec
mov
sub
xchg
out
inc
pop
adc
aad
jo
jge
or
jg
ret
imul
cmp
push
jae
lcall
mov
mov
cwtl
or
mov
fcomps
sbb
jns
mov
or
sub
mov
loopne
pop
push
or
pop
loop
shll
dec
sub
cmp
mov
ds
mov
mov
sbb
xor
jbe
pusha
mov
lock
jecxz
scas
bound
mov
in
pop
lea
mov
andl
sub
xchg
xchg
ret
les
adc
lret
push
stos
mov
cs
bound
pop
sub
pop
aas
sarb
imul
inc
jecxz
js
ret
inc
push
sbb
pop
subl
add
dec
addr16
jmp
dec
std
mov
jns
leave
mov
lcall
cs
and
add
cli
and
clc
test
or
test
jle
int
subl
fnstcw
jno
mov
add
mov
xor
lock
push
testb
decl
push
lcall
shrb
fsts
cmpsb
mov
das
xor
lret
leave
cs
mov
cmp
aad
mov
or
popa
pop
add
xor
loop
addr16
stos
add
inc
ljmp
dec
push
clc
stc
lea
jae
dec
fldl
inc
call
xor
jns
and
add
cmp
out
stos
xor
xchg
dec
loope
sub
mov
add
idivl
mov
sub
mov
or
pusha
test
cmpsl
test
sub
cmp
cmp
rcrb
mov
cltd
xlat
sub
cmp
test
sub
xlat
sbb
mov
lcall
dec
cld
mov
mov
sub
lods
ficomps
cmp
jno
jge
mov
and
outsl
roll
jmp
pop
outsl
scas
out
aam
add
xchg
fistpll
out
mov
mov
call
stc
stos
adc
mov
cmp
or
dec
jbe
int3
xchg
adc
inc
mov
mov
bound
mov
mov
jnp
pop
dec
inc
or
sahf
ds
add
adc
mov
pop
cmp
test
notb
inc
rol
add
jo
fcomip
imul
sub
mov
jb
fdivrp
or
jnp
cld
outsb
inc
les
rcrl
stc
inc
and
jns
cs
sub
xchg
add
sahf
leave
pop
mov
fldt
jo
orb
jo
fisttpll
shr
bound
aad
sbb
sub
push
pop
sbb
orb
xor
mov
pop
ror
les
dec
push
icebp
adc
push
xorl
jo
inc
nop
popa
cmp
in
data16
rcl
pop
jns
pop
cmp
add
mov
sbb
pop
ss
adc
mov
xor
adc
jge
fucomi
push
and
jp
pop
push
or
bound
and
pop
test
jp
mov
xor
leave
mov
addr16
fisttpl
mov
mov
sti
dec
loopne
jae
out
testl
jno
gs
adc
fndisi(8087
es
mov
es
loope
jo
js
push
jns
pop
out
pushf
stos
fs
sub
iret
jbe
inc
push
aaa
xchg
lock
mov
mov
jb
mov
roll
mov
add
xor
jmp
sub
sahf
jecxz
pop
pop
int
lahf
xor
cmpsb
outsl
push
lock
pop
sbb
ja
xlat
mov
sarl
rcll
push
int
in
xor
insl
jp
inc
sub
or
insb
xchg
fucom
insb
out
gs
in
dec
xchg
stos
sub
jns
pop
jne
jae
cs
mov
push
lret
xchg
and
aam
xor
imul
jo
sbb
mov
xor
and
sbb
loop
sub
push
sbb
sarl
adc
mov
movsb
aaa
xchg
cmp
add
test
xor
imul
cmpsb
hlt
inc
into
imul
dec
mov
sub
push
or
shlb
jle
pushf
xor
sbb
cld
rclb
add
adcl
xchg
xchg
dec
mov
jg
out
push
inc
add
ds
jnp
std
xchg
push
leave
push
jns
mov
ds
push
clc
pop
cmp
sbb
inc
dec
or
adc
aas
xchg
sbb
loop
pushf
cmp
sub
xor
jae
cmpsb
in
dec
ljmp
lods
out
add
xor
xchg
pop
pop
ror
imulb
sbbb
lock
or
mov
push
push
rcrb
jle,pt
stos
enter
mov
js
sub
add
cmp
shll
cs
dec
scas
lods
movsb
cmp
mov
sub
or
and
push
lcall
inc
dec
jo
xor
mov
push
mov
test
xchg
clc
addb
je
cmpsl
inc
or
mov
mov
xor
repz
scas
dec
push
fs
cltd
mov
adc
cmp
dec
in
sub
fimuls
jl
hlt
daa
in
xor
ss
imul
mov
mov
cmp
sbb
add
out
daa
inc
aaa
pop
pop
loope
mov
loop
int3
mov
iret
rcrb
es
iret
sub
mov
dec
cld
jne
mov
inc
jecxz
les
jbe
pop
negl
lods
ljmp
jp
xchg
int
movsb
loop
in
push
fabs
adc
adc
je
xlat
ror
mov
push
pop
xchg
ret
popf
jge
gs
add
add
mov
out
push
pop
icebp
ljmp
and
js
iret
lock
scas
or
mov
mov
out
xor
dec
lahf
pop
sbb
dec
insl
jb
enter
mov
cli
loope
clc
sbb
jne
xchg
add
jmp
add
cwtl
jo
and
bound
not
and
dec
dec
lret
mov
push
mov
inc
out
pop
add
dec
xorl
or
stos
rep
or
cmpsb
lcall
sub
ds
cmpsl
or
shlb
add
jg
add
adc
in
cmp
jo
xchg
pop
jne
pop
xchg
xchg
inc
mov
stc
and
sub
fstps
ja
mov
or
stos
lea
cmp
mov
sti
sub
mov
test
test
dec
jmp
andb
add
ljmp
outsb
sahf
les
inc
test
js
rcll
out
inc
lret
jno
xchg
adc
mov
xchg
mov
ljmp
insl
pop
cmp
addr16
in
aad
or
out
xlat
adc
inc
mov
shll
pop
xchg
loopne
test
mov
xor
push
jne
mov
dec
and
inc
and
je
pop
scas
stc
push
add
ret
in
cmp
xchg
cli
inc
mov
lds
les
push
or
jp
adc
or
cmp
lahf
inc
xor
pop
push
fisubs
ds
cli
add
shrl
scas
lods
mov
jne
jl
loopne
loop
push
bound
inc
aam
xchg
pop
add
mov
les
mov
test
cli
dec
ret
es
sbb
inc
xor
pop
inc
stos
dec
jno
add
lods
out
and
pop
aad
test
sar
cmp
addr16
cld
cltd
pusha
repz
loop
js
lds
pop
jecxz
push
adc
rorl
fadd
test
hlt
dec
mov
cmp
sbb
cmp
sbb
subl
mov
pop
add
outsb
push
cmpsb
and
dec
fs
mov
sahf
addb
inc
leave
adc
mov
out
cmp
rorl
mov
add
aam
mov
mov
mov
inc
mov
jbe
das
inc
lahf
add
pop
inc
repnz
out
adc
pushf
enter
add
mov
jne
adc
xchg
add
dec
adc
xchg
imulb
pop
xchg
push
mov
loopne
vpshufhw
outsl
cld
jns
in
add
mov
mov
nop
xlat
inc
xor
insl
sbb
mov
scas
inc
bnd
jecxz
and
and
in
pop
fisubrl
nop
jge
ret
out
inc
dec
test
push
ja
test
push
xorb
lock
add
addl
aam
std
and
mov
push
xchg
test
adcl
mov
ds
in
pop
jecxz
push
mov
std
adc
jo
sti
test
sbb
pusha
sahf
inc
les
xor
lock
cmc
cwtl
push
notl
movsl
push
inc
shll
imul
aaa
in
or
mov
stc
bound
pop
push
loope
les
repz
adc
es
xchg
notb
imul
ret
and
pop
lock
xor
icebp
jmp
cwtl
fs
and
mov
and
cwtl
push
xchg
stc
pop
sti
sub
push
das
add
aam
cmp
push
mov
incl
adc
in
in
in
repnz
adc
dec
jo
xor
out
scas
mov
jl
dec
cmp
shrl
mov
repz
xlat
dec
sbb
add
dec
shlb
mov
popa
mov
sbb
xor
das
adc
xchg
les
jb
mov
pop
mov
nop
lret
mov
inc
rclb
cmpsb
sarl
mov
jge
add
and
adc
mov
mov
sbb
iret
movsb
inc
stos
addl
shrl
stos
adc
lcall
push
lds
test
push
mov
jo
xchg
add
xor
sbb
push
dec
push
xchg
test
outsl
das
push
lahf
aaa
test
mov
mov
and
xor
inc
pusha
add
inc
xorl
sub
mov
addr16
mov
jmp
add
out
adc
mov
cmpsb
arpl
test
test
insb
inc
sbb
and
leave
pop
outsl
sub
popa
mov
mov
pusha
jns
aas
icebp
jo
sbb
add
inc
call
fsubrp
rorl
sub
les
ljmp
jo
arpl
das
dec
mov
js
sti
aam
insl
cmp
ja
push
jne
inc
pop
sbb
mov
leave
jp
cmp
xor
mov
push
sbb
out
inc
call
mov
andb
cld
aas
shlb
jecxz
fld
imul
pop
cmp
sti
push
sbb
adc
mov
add
in
pusha
pop
imul
pop
pushf
xchg
or
movsb
les
fmull
mov
call
and
lret
ret
inc
loopne
loope
inc
fcompl
jbe
inc
lahf
add
daa
mov
jle
inc
pop
jmp
add
mov
cmp
push
push
push
cmp
pop
pop
pusha
fucomp
xor
pop
jmp
lahf
mov
mov
hlt
bound
dec
pop
inc
add
pushl
mov
ja
add
jnp
movsl
into
add
push
dec
fdivl
lods
pop
insl
fs
insb
push
cmc
hlt
arpl
inc
xor
sub
lods
xchg
bound
mov
leave
jmp
mov
jle
mov
push
int
dec
fwait
add
imul
mov
lods
mov
push
cmpsl
mov
in
cli
negb
inc
es
push
cli
in
inc
xchg
into
nop
xlat
cmp
pmullw
dec
pop
sub
sbb
outsb
pop
in
loop
pop
jmp
adc
popa
jp
dec
scas
pop
or
jb
fisubrs
dec
pusha
decb
xor
or
and
add
stos
std
cmp
lcall
sarb
pop
push
xor
add
jg
sbb
roll
scas
and
lods
inc
fwait
sahf
mov
adc
pusha
xorb
gs
mov
fs
or
imul
shll
pop
pusha
gs
test
cmp
mov
clc
inc
sbb
or
mov
out
cli
lret
sbb
pop
push
xchg
add
in
jno
pop
dec
stos
sbb
jno
or
mov
and
adc
mov
in
pop
cmp
roll
inc
pop
dec
in
idiv
jno
mov
fidivs
jecxz
xchg
push
pop
into
nop
insb
test
sysexit
mov
mov
sub
sbb
jmp
push
push
sbb
in
pop
nop
sahf
jo
popf
xchg
aas
mov
nop
andb
sbb
mov
push
push
pop
lods
fchs
mov
fsubrs
fwait
mov
cmc
dec
leave
subl
fwait
ss
testl
scas
add
mov
push
outsl
addr16
add
sti
mov
xchg
mov
xchg
mov
mov
int
sub
lock
cmp
or
dec
xlat
fcoms
push
sub
sbb
das
dec
dec
inc
mov
popa
ret
shll
xlat
or
jb
maxps
pop
dec
push
stos
testl
push
jmp
mov
mov
int3
not
push
dec
mov
scas
mov
stos
fistpll
mov
cmp
cwtl
cmp
pop
jo
jp
fucomip
jge
pushf
jle
xlat
popl
xchg
push
clc
push
mov
mov
pop
adc
xchg
dec
arpl
daa
and
test
scas
xchg
imul
scas
mov
adcb
inc
test
xchg
xor
sub
out
lods
pushf
enter
or
jge
scas
clc
unpcklps
je
bound
push
jo
jge
pop
xor
divb
test
jmp
aad
andl
mov
pop
rcrl
mov
mov
fnsave
js
cmp
scas
mov
repz
imul
mov
test
sbb
mov
xchg
mov
xlat
xor
popf
lcall
dec
xchg
ret
lock
stos
pusha
arpl
mov
daa
push
divb
insl
lret
popf
ror
cltd
out
out
stos
leave
shrb
inc
mov
arpl
ja
test
cmp
movsl
loope
bound
leave
and
in
jo
sub
ret
adc
xchg
sti
loopne
mov
out
mov
pop
mov
loop
shr
cmc
inc
pop
dec
aaa
fbstp
and
mov
sbb
jns,pt
pop
lcall
aam
outsb
sub
repnz
lods
inc
and
jp
cmc
sub
pop
xchg
les
mov
imull
rcr
add
rcll
lret
out
pop
mov
ficomps
enter
dec
dec
daa
xchg
jns
fiaddl
clc
les
jmp
sub
movsb
popa
dec
jns
mov
invd
inc
fstpl
mov
fistpl
push
out
mov
pushf
cmp
mov
push
in
rorb
test
std
ss
outsb
mov
push
lods
or
jmp
mov
or
fisttpll
repnz
loopne
out
js
fcompl
add
xchg
push
mov
and
xor
lods
cltd
movsl
aam
mov
mov
mov
lds
call
popf
inc
push
xchg
out
outsl
cmc
mov
pop
pop
sbb
or
and
popa
in
push
movsl
mov
outsb
out
stos
shrl
cli
insb
std
push
das
add
les
test
cs
jl
mov
jns
pop
movsl
mov
in
and
out
sub
xchg
dec
js
inc
iret
mov
dec
dec
push
rcl
loopne
int
or
nop
dec
lahf
nop
rcl
and
loop
mov
aas
mov
cmp
xlat
enter
shl
div
fsubrs
mov
jne
fcmovb
in
jecxz
je
jb
dec
add
test
mov
movb
push
and
rorb
je
jmp
aad
add
jmp
test
jmp
inc
sarb
and
je
dec
imul
or
fisubrl
clc
fidivl
add
add
xlat
ret
imul
imul
scas
mov
test
mov
pushf
mov
ljmp
addr16
movsl
les
pop
and
mov
pop
mov
fimuls
push
shr
in
popa
and
mov
cmp
sub
rorb
mov
clc
xor
cmpl
cs
sbb
adc
push
cmp
out
mov
popa
les
push
ret
out
mov
popa
ljmp
in
mov
sub
sbbb
stc
cmp
jb
xchg
dec
push
sub
and
pop
push
rcrl
cs
and
and
mov
loopne
dec
inc
stc
lods
push
cltd
aas
mov
call
idivb
repnz
dec
push
pop
xor
loop
jl
xchg
aad
dec
xor
adc
daa
push
mov
jecxz
dec
inc
jmp
inc
das
je
mov
mov
loop
sbb
mov
jno
popa
mov
sbb
and
xchg
xor
imul
ret
mov
sbb
cmp
test
jmp
test
or
sbb
fwait
mov
cmp
inc
push
sti
mov
test
pusha
ret
xchg
and
loop
andl
add
and
jl
loope
xor
dec
clc
xchg
mov
mov
rcr
sti
dec
mov
into
inc
xchg
inc
sub
insb
imul
orl
popa
xor
orb
fs
stos
and
or
lcall
gs
mov
hlt
sub
mov
test
iret
movsl
jns
or
jae
icebp
add
xor
nop
jmp
int
or
or
inc
mov
mov
fcoms
pop
fiadds
mov
jno
cmp
xchg
test
xchg
repz
mov
sub
je
or
inc
jmp
cmp
orb
in
add
iret
or
push
mov
cli
repnz
test
mov
dec
push
and
or
and
xchg
jno
push
rorl
in
mov
push
in
sbb
push
mov
mov
fidivs
jne
popf
sahf
jnp
cli
add
lret
cmpsl
mov
clc
inc
insl
aaa
xchg
xchg
rcrb
mov
adc
test
or
sbb
movsb
gs
movsb
jno
mov
ss
lcall
shll
push
adc
mov
add
inc
stos
sbb
jb
cmp
xchg
gs
popf
int3
mov
xor
hlt
sbb
xchg
aam
fwait
test
gs
cmp
pop
icebp
popl
mov
test
sarb
repz
scas
sbb
lret
sub
imul
or
cmpsb
cmp
add
ja
fs
hlt
sbbl
std
and
add
popa
inc
roll
les
adc
in
lock
adc
xchg
jmp
jbe
mov
ljmp
arpl
dec
mov
add
push
movsb
fsubrs
push
bound
pop
pop
cmp
lret
inc
sbb
add
sahf
xchg
mov
cmovbe
xor
in
inc
mov
loope
icebp
push
mov
mov
cltd
mov
push
add
call
cs
add
test
cli
jae
addl
sub
cli
popa
dec
insl
xor
icebp
fdivrs
fldl
jg
xchg
add
push
push
imul
js
fwait
and
cmp
inc
mov
mov
call
sub
mov
imul
sbb
pusha
js
sub
pop
fadds
cmp
mov
adc
sbb
sti
cli
sbb
in
ja
sbb
jae
filds
push
in
popf
sub
mov
jne
sub
ret
lea
push
xor
in
loop
out
xorl
aas
adc
leave
cmc
mov
stos
sub
mov
aad
imul
adc
xlat
popa
jns
mov
jecxz
jle
aam
popa
cs
clc
call
mov
jl
or
movsl
mov
dec
sbb
sub
mov
scas
cmp
jno
iret
pop
test
std
sub
adc
outsb
loop
les
xor
jnp
test
push
sub
sbb
jmp
scas
dec
popf
into
aaa
xor
arpl
es
cmpsb
icebp
mov
mov
shll
testb
test
mul
in
aam
data16
fcoms
and
and
sub
or
lcall
cwtl
push
lretw
cmpsl
add
xor
pop
xchg
jmp
lahf
pop
push
imul
mov
sarl
orb
mov
mov
pop
arpl
adc
fucomp
sub
pmulhuw
pop
pop
mov
mov
test
add
cmpsb
in
sbb
lods
pop
scas
pushf
sbbl
jnp
mov
gs
xchg
push
in
inc
ret
cmc
dec
adc
sahf
pusha
mov
rolb
push
sub
jge
cmp
add
jle
push
imul
jle
add
pop
adc
push
and
pop
dec
sub
push
popf
das
mov
dec
das
das
enter
add
sbb
jbe
add
in
out
sub
jnp
mov
sub
jge
iret
push
pop
mov
jecxz
bound
jo
cwtl
jb
inc
loopne
pop
mov
jb
xor
rolb
cmp
fwait
stos
ds
xor
adc
call
fdivrp
xchg
gs
jecxz
imul
push
adc
aas
add
ss
jg
jno
add
cmpsl
cs
cs
insb
add
cli
pop
les
jle
xchg
mov
mov
and
out
push
cmp
iret
scas
aad
xlat
icebp
leave
lods
stos
mov
pushl
pop
push
jnp
jns
sub
outsl
mov
sbb
test
pop
xchg
into
out
mov
adc
inc
insb
nop
push
fisubs
shrb
cmp
mov
adc
xchg
jo
cli
xchg
add
adc
sbb
push
scas
ret
pop
es
pop
gs
sub
push
call
cli
push
aaa
add
sub
lahf
xor
jne
mov
mov
stc
and
xchg
data16
and
or
cmp
xchg
outsb
mov
sub
enter
sbb
xlat
add
sbb
mov
add
add
jb
mov
push
js
addl
sub
push
jmp
adc
cs
mov
cmc
xchg
cmp
sahf
mov
out
pop
fsubrl
je
popa
cmovge
sti
xchg
leave
sub
pop
add
sub
cmp
xor
mov
jmp
add
push
jl
or
les
out
je
inc
sbb
and
mov
stos
inc
sub
mov
dec
xchg
mov
imul
xchg
xchg
aaa
scas
push
divl
in
and
testb
add
lock
inc
outsb
xor
pusha
sbb
data16
fadds
jne
dec
inc
aam
inc
lcall
ret
out
fld
loope
mov
and
bound
push
jmp
outsl
mov
fcoms
adc
bound
cmp
or
pop
and
test
shll
lock
mov
pand
mov
fistl
out
repnz
int
femms
mov
subl
dec
pop
inc
mov
ret
cs
mov
rcll
push
mov
stos
movsl
dec
push
dec
scas
je
jmp
cmp
lea
xchg
test
in
cmp
adc
imul
xor
cmpsb
inc
dec
bound
imul
mov
push
dec
addl
add
jb,pn
cmp
in
jmp
test
sbb
roll
fwait
jb
pushf
mov
or
mov
bnd
andb
xor
les
insl
or
loope
cmc
xchg
jns
mov
mov
inc
test
push
push
xchg
lret
and
mov
mov
jnp
je
movsb
cmp
dec
daa
jae
push
lea
imul
les
insl
cld
shrb
cmp
je
pop
popf
xchg
mov
call
inc
int
rcll
call
loope
fisttps
jge
aas
cltd
gs
and
pop
inc
and
adc
push
ljmp
mov
add
lock
inc
and
adc
jne
pop
test
out
and
cmp
cli
idivl
xchg
int
sbb
xor
addb
fwait
lret
das
sbb
outsb
cmp
pop
addl
push
mov
push
mov
ja
push
repz
mov
pop
push
xor
and
lock
cmc
jge
pushf
cmp
mov
inc
sarl
adc
cmp
sahf
dec
in
cmp
dec
out
rorl
sub
gs
sub
iret
into
xchg
into
mov
push
js
movsl
jb
or
outsb
fidivrl
push
xor
xor
xchg
sub
jg
dec
xor
sbb
pop
adcl
ret
cld
jb
insb
aas
sarb
lret
fnstcw
or
sbb
lods
push
and
mov
clc
add
in
loop
loope
jns
pop
mov
sbb
into
jge
mov
push
out
push
cmpl
cmc
imul
mov
fcmovne
test
vcvtsi2sdl
mov
popf
push
aam
push
push
pop
cmp
sbb
fnstsw
sahf
mov
negb
jne
inc
push
idivb
jnp
lock
mov
cmp
sbb
das
sub
cmpsb
insl
dec
adc
fimuls
pusha
push
imul
sahf
movsb
popa
outsb
ljmp
dec
mov
push
cmp
lock
scas
outsl
mov
mov
jg
aas
inc
scas
int
loop
push
or
aad
shl
pop
sbb
imulb
pop
shl
sub
or
clc
test
inc
sbb
int
lcall
call
pop
cwtl
movntq
out
cmpl
xor
dec
xchg
test
or
je
sub
fstpl
popa
nop
ret
aam
aas
and
mov
sub
mov
mov
xchg
and
inc
test
ljmp
fiadds
mov
xor
dec
addl
xor
add
insb
push
jp
or
push
or
stos
aas
in
stc
push
outsl
mov
add
stc
cmp
xchg
sub
repz
sahf
mov
xchg
loop
bound
jbe
aas
sahf
pop
xchg
data16
rcll
adc
fnsave
movnti
jb
cmp
ret
push
ss
clc
fdiv
cmp
fucomi
or
out
cmp
push
inc
stc
fdivl
xor
xchg
lds
js
aaa
shl
xor
lcall
xor
push
iret
in
lret
xlat
ja
add
ss
jg
and
mov
inc
inc
mov
sbb
xchg
loope
or
xchg
pop
arpl
push
sbb
or
dec
scas
ss
adc
or
jg
lods
mov
outsb
and
xor
mov
popf
sub
mov
mov
stos
and
arpl
mov
mov
or
popf
dec
mov
pop
dec
pop
and
loop
shll
or
loopne
adc
sub
mov
test
cli
and
jle
test
pop
add
aaa
cmp
fcoms
mov
push
push
or
in
lods
out
xchg
clc
xor
lahf
movsl
jb
add
mov
cmp
insb
push
cmp
pop
xor
cmp
xchg
es
jns
adc
cltd
sbb
test
pop
imul
addl
sub
inc
lods
pop
imul
jns
jle
xchg
dec
inc
and
push
data16
ret
in
adc
sub
clc
push
ja
sub
bound
inc
scas
mov
xchg
pop
xchg
jb
pop
cmp
sbb
inc
popa
scas
movsb
push
mov
push
adc
jle
in
dec
movl
leave
bound
dec
sbb
mov
cmp
dec
jecxz
in
test
mov
ja
mov
mov
cmpsl
imul
sbb
adc
bound
xchg
jne
cli
jo
push
imul
negl
shrl
cmp
xor
xchg
sbb
cld
fwait
shld
mov
lock
out
sub
or
jge
test
enter
int3
xchg
push
filds
or
jle
adc
lcall
jnp
hlt
push
mov
push
pop
push
fsubs
and
mov
mov
outsb
cs
fistpll
arpl
and
daa
or
dec
push
xorb
sbb
js
outsb
sbb
inc
jae
popa
aad
outsb
inc
aam
push
xor
pop
push
xchg
xor
pop
fmulp
jno
stos
roll
leave
in
test
pop
and
mov
add
ds
xor
dec
inc
out
pop
movb
mov
int
adc
insb
jg
je
push
xor
and
fstpt
mov
lcall
inc
insb
inc
aad
or
and
das
repnz
and
arpl
in
xor
dec
aad
pop
repz
clc
pop
stos
sbb
shll
std
jle
lock
jnp
cmp
cld
mov
and
mov
ficomps
stos
pop
scas
cmp
lods
mov
mov
scas
imul
xor
call
sbb
stos
dec
scas
jno
or
pop
repnz
pop
sub
lods
mov
call
pop
jbe
cmp
hlt
jns
fadds
stos
insb
adc
sub
add
ss
movsb
scas
iret
jb
lds
add
pop
adc
or
lds
les
test
mov
ret
inc
push
fiadds
out
push
xor
mov
bound
clc
sub
cmp
xchg
pop
push
rorb
scas
push
pushf
je
mov
fdivrs
adc
ljmp
mov
jmp
andl
inc
add
es
cmp
xchg
pop
add
or
xor
mov
lret
dec
cmp
and
lods
sub
mov
lret
pop
cli
scas
inc
push
push
inc
sub
pushf
or
jecxz
xchg
pop
pop
xlat
lock
sbb
sbb
das
pop
lahf
fistl
push
fdiv
cli
xor
hlt
jle
insb
cld
cmp
int3
in
gs
or
mov
dec
adc
jno
pop
hlt
icebp
mov
mul
stc
jl
test
not
cmpsb
call
in
fwait
lea
fwait
add
outsl
dec
in
sbbl
jl
mov
out
dec
jno
popa
xor
rclb
shrl
fs
loopne
je
mov
cltd
add
loopne
mov
xchg
rcl
mov
sbb
push
imul
mov
rcr
dec
jb
movsl
and
dec
jne
sbb
xlat
jp
mov
out
test
ljmp
adcb
in
or
movb
or
cmpsl
push
int
icebp
ds
push
add
xchg
adc
mov
fdiv
aad
add
out
or
les
adc
cmp
ror
jge
push
dec
icebp
mov
or
dec
addr16
movsb
loopne
flds
test
inc
pop
aaa
xchg
js
lods
fyl2x
aam
push
pop
jecxz
mov
out
push
pop
jne
pop
cli
add
fsubrs
dec
adc
dec
cmp
std
popa
dec
mov
or
leave
mov
mov
pop
xchg
into
push
xor
xchg
lods
xchg
sub
mov
popf
mov
adc
or
sub
repz
mov
popf
test
add
aas
pop
push
imul
cmp
orl
pop
inc
scas
repnz
dec
adc
movsl
lcall
lods
mov
mov
jnp
adc
loope
pop
sbb
daa
fstpl
out
mov
mov
sub
enter
inc
mov
xchg
into
xchg
in
aas
scas
jecxz
sbb
sbb
mov
jo
add
xchg
fwait
mov
stos
into
nop
jge
jp
shl
push
sub
jge
loope
mov
sbb
test
pusha
arpl
or
test
inc
faddl
lock
or
incl
cmpsb
dec
xchg
cmp
in
xor
jo
cmc
sbbb
call
jmp
and
push
jo
pop
inc
inc
pushf
pop
imul
mov
dec
popa
pop
lcall
insb
shll
lcall
sti
lock
push
fsub
xchg
add
jne
mov
scas
sarb
lods
popl
ror
movsl
or
pop
cmc
nop
push
into
sbb
inc
lods
cmp
fdivl
imul
jns
lret
push
sub
push
mov
add
js
dec
mov
fsubs
imul
inc
int
bound
imul
push
cmpsb
add
sarb
jecxz
nop
mov
jo
xlat
imul
stos
add
or
fists
das
outsl
inc
dec
out
pop
jmp
stos
jge
mov
sub
pop
movsb
insb
pop
lock
sbb
cmp
jp
enter
aam
scas
stos
jg
or
loop
fldenv
add
ds
dec
outsl
mov
imul
and
aaa
inc
arpl
ja
pop
iret
lock
outsb
fisttpl
fs
lods
xchg
out
fimull
pusha
in
jl
pop
shll
pop
lods
jae
in
iret
mov
repz
iret
or
xor
loope
insl
cltd
mov
notl
jnp
inc
data16
mov
lea
lds
mov
nop
push
jns
push
sub
adc
dec
or
sub
cmpsl
adc
movsl
jp
jo
jno
out
por
inc
or
adc
popf
das
xor
sarl
push
dec
inc
arpl
out
in
sbb
ss
mov
fstl
popl
xor
pop
add
cmp
out
cmp
inc
sbb
xchg
loopne
add
insb
in
arpl
cmp
add
adc
xchg
pop
outsb
lods
dec
push
add
adc
fisubs
int
sbb
and
ljmp
repz
adc
orl
pop
outsl
sbb
mov
pusha
int3
ds
iret
dec
or
fucomi
mov
std
jmp
cmc
pop
outsb
cld
test
hlt
push
xor
in
mov
jb
in
into
mov
sbb
pop
add
in
gs
outsl
ret
cli
xlat
mov
rcl
fsubp
in
clc
lret
andl
stos
cli
push
pop
jae
dec
dec
cmp
lods
negb
ret
cmc
pop
lods
mov
add
divb
not
aas
xor
jge
aad
out
lret
div
adc
jno
mov
jp
inc
inc
or
cmp
lods
repz
dec
mov
jnp
fcomps
negb
cwtl
cmp
ds
repz
adc
adc
fidivl
flds
xchg
rolb
lret
outsb
jge
loop
xor
or
mov
insl
mov
stos
test
push
mov
pop
lret
inc
stc
mov
dec
jbe
mov
arpl
mov
xchg
popa
in
adc
stc
daa
add
int3
cld
fsts
scas
jne
insl
repnz
push
jae
sarb
inc
xor
gs
shll
es
and
ss
xor
testl
popa
lret
int
mov
mov
sub
fsts
mov
std
lahf
nop
mov
dec
xor
and
jns
data16
mov
dec
or
jmp
mov
cmpsb
aam
mov
push
rcrl
in
mov
sahf
mov
cmp
cs
add
je
cmp
jmp
and
push
jns
xor
out
pop
push
lret
nop
jl
xor
dec
mov
stc
push
jp
dec
pop
je
out
mov
cld
pop
inc
and
aaa
aas
inc
pop
mov
lods
add
orb
in
dec
enter
dec
and
scas
and
outsl
sub
fdivr
xchg
jmp
sar
daa
es
cld
xchg
dec
icebp
sbb
sub
mov
addr16
leave
loope
and
rcr
or
and
inc
insb
or
inc
xchg
push
stc
push
popf
xor
jg
pusha
jge
xchg
popf
inc
jne
aaa
cmp
lods
pextrw
test
add
pusha
mov
adc
mov
mov
dec
add
imul
fdivl
jmp
or
mov
in
mov
loop
jmp
mov
loopne
mov
mov
je
mov
adc
subb
or
enter
lock
test
mov
add
mov
jne
fstpl
cltd
mov
add
mov
pop
lock
xchg
mov
inc
xor
gs
bound
xchg
ja
sbb
mov
cld
pop
inc
pop
cmc
mov
cmp
pop
mov
pop
test
xor
arpl
xor
popf
sarb
add
and
je
enter
es
or
inc
cmpsb
inc
stos
or
call
loop
out
xor
adc
inc
cmp
addr16
and
pop
add
push
cmp
pushf
jle
jae
into
subl
call
jecxz
lods
mov
and
sub
scas
dec
lea
sahf
dec
sbb
xchg
inc
cld
test
mov
inc
pop
jp
mov
sbb
xor
idivb
jno
mov
mov
loope
jne
xor
xchg
pop
stos
movsb
in
xchg
gs
in
sub
in
adc
add
pushl
ljmp
and
test
in
xchg
cmpsl
xchg
inc
aas
and
js
cmpsl
dec
cmp
js
ds
jl
cmpsl
jb
in
or
inc
lods
push
jbe
or
jecxz
movsb
test
sti
stos
rol
inc
mov
pop
inc
cmp
lods
mov
push
mov
pop
push
xlat
in
push
jp
mov
daa
ja
add
xor
xchg
jae
inc
sti
ret
cli
loop
mov
jg
jnp
xchg
inc
or
lea
and
aaa
rcll
pop
pop
ss
sbb
cmpsb
mov
mov
iret
es
adc
mov
xchg
lahf
xchg
fbld
mul
lods
pop
xchg
mov
and
test
lret
aam
and
mov
jge
call
int3
das
xchg
movsl
aad
push
push
xchg
into
popf
cmp
inc
je
in
fbld
aad
popf
sti
jo
dec
push
jp
adc
jno
lsl
cmpsb
mov
outsb
outsl
add
fsubs
pop
cmpsb
popa
adc
cwtl
inc
fists
test
and
enter
pop
pop
cmpsl
in
xor
dec
popf
aam
ds
sub
test
cmp
jns
sbb
lcall
jnp
sbbb
add
std
dec
pop
out
mov
cmpsb
pop
lds
dec
ret
int3
stc
xor
add
iret
push
clc
ficoms
pop
call
movsl
mov
cmpsl
mov
cltd
arpl
repz
loope
mov
mov
and
leave
leave
cmc
arpl
or
mov
xor
into
imul
fbstp
in
lds
jns
bound
push
jns
jne
xchg
fwait
ret
out
xlat
mov
fimuls
xchg
adc
cli
iret
push
loope
inc
sbb
jae
push
decl
dec
ss
add
dec
or
int
jnp
mulb
inc
aaa
aaa
mov
scas
cwtl
and
cwtl
push
mov
or
lods
aas
add
xor
pop
xor
xor
lea
icebp
arpl
and
popf
ss
enter
push
fimuls
add
outsb
sub
pop
dec
xchg
mov
std
lcall
sub
jmp
push
stos
iret
xchg
fwait
js
pop
push
mov
pushl
mov
adc
pusha
mov
sahf
out
jo
mov
dec
sbb
adcb
inc
mov
fidivl
xor
or
movsb
dec
cwtl
mov
sbb
inc
xor
xchg
lea
roll
mov
insb
arpl
push
and
push
mov
xor
enter
jnp
jge
popf
ret
cmpsl
xchg
ds
adc
sub
mov
icebp
adc
into
lcall
jg
mov
nopl
fwait
mov
mov
push
inc
mov
lret
int3
jecxz
lods
xor
xor
daa
pop
notl
adc
subl
int3
hlt
mov
dec
jg
push
or
lcall
aas
jp
lcall
cltd
adc
inc
sbb
mov
lcall
push
add
jno
or
imul
dec
test
push
cld
adc
aam
adc
jl
jb
aas
dec
push
inc
xchg
adc
jo
inc
lret
inc
dec
mov
sub
into
adc
xor
data16
neg
repz
sbb
fistl
push
fadds
mov
aam
sub
adc
cld
and
mov
cmp
xchg
pushf
int3
inc
dec
repnz
mov
dec
sti
lods
lods
cwtl
dec
aad
mov
pop
lcall
xchg
sbb
adc
js
mov
mov
cmp
dec
out
xor
xchg
cmpsb
stc
add
hlt
loope
pop
mov
rol
enter
clc
and
mov
gs
adc
lea
rcrb
in
mov
mov
xchg
neg
or
adc
mov
cs
sub
in
lcall
jno
and
fwait
test
xor
cli
jg
stos
xor
sbb
mov
xchg
sti
aas
and
jae
mov
addb
mov
fidivrs
push
loope
cltd
mov
fisttpll
push
imul
nop
mov
ds
jo
ja
pop
mov
lret
push
cs
adc
sbb
fidivl
stos
int3
pop
add
xchg
add
xchg
xor
fiaddl
jbe
rcl
out
movsl
cmpsb
aam
icebp
mov
jae
cwtl
pop
test
push
adc
add
sbb
jnp
push
pushf
das
cmp
inc
repz
pushf
mov
popa
ret
lods
stos
pop
push
mov
imul
icebp
rclb
nop
outsl
pop
outsb
jp
mov
and
test
cmp
outsb
mov
insl
arpl
mov
cmp
mov
lahf
movsl
mov
pop
lret
insl
adc
sub
ret
adc
push
pop
push
daa
sub
mov
lods
dec
xchg
push
bound
xchg
sbb
addb
xor
sbb
ja
out
push
jae
gs
stos
es
mov
sub
mov
xchg
mov
outsb
stc
jmp
loope
jno
adc
dec
sub
jle
xchg
repz
pop
pop
mov
push
and
mov
jno
xor
mov
cmpsl
dec
test
xchg
and
fisubrs
and
jl
push
loopne
js
pusha
rcl
ss
mov
fstpl
dec
xor
loopne
aas
mov
xchg
shlb
inc
lock
popa
pop
aam
stos
jb
clc
lds
popf
imul
in
xchg
daa
sub
cli
mov
ret
rclb
ljmp
bound
sub
in
add
nop
xlat
pop
movsb
out
mov
inc
nop
lea
jecxz
sahf
negb
insl
cmp
dec
cmpsb
lods
inc
jb
add
or
sahf
adcl
bound
push
int
pop
sahf
xchg
pop
mov
pushf
sub
ds
adc
sub
gs
sbb
push
dec
or
mov
mov
push
nop
jge
cwtl
push
cmc
mov
cmp
add
and
ret
sub
pop
jp
mov
dec
cmpsl
inc
pop
sbb
pop
cs
adc
scas
mov
xor
push
sar
pop
out
sbbb
mov
addw
addr16
cmpsb
fildl
sub
fs
add
dec
mov
ljmp
mov
popa
loope
lea
and
xor
jecxz
push
rorl
jmp
xor
adcl
je
ljmp
mov
mov
sti
push
sub
rorl
sbb
nop
mov
mov
mov
push
inc
mov
je
lea
or
adc
jns
push
loop
mov
mov
mov
xchg
jb
sti
push
jae
mov
and
mov
test
and
xlat
push
sti
mov
pop
sar
jmp
push
sbbl
cmp
cmp
mov
mov
dec
enter
xchg
sbb
sub
dec
adc
adc
jb
in
stc
into
enter
push
cmp
iret
mull
dec
cli
or
fiaddl
and
xor
pop
cmp
aam
push
jmp
cmp
sub
mov
data16
sub
lods
pop
cltd
cmc
mov
adcl
test
add
jbe
fildl
jns
xor
mov
or
sbbb
ss
mov
shrb
sbb
xchg
mov
add
cmc
stos
xchg
or
mov
mov
loope
fidivrl
xor
std
cld
repnz
mov
sub
push
add
repnz
std
lahf
cmp
mov
outsb
imul
ds
and
push
pop
daa
pop
xchg
stc
nop
ret
adc
fcoms
add
xor
call
mov
mov
mov
leave
cmp
pop
cmp
ljmp
jmp
and
cld
cltd
ljmp
test
or
and
mov
cwtl
mov
push
fidivs
aas
or
fimuls
pusha
sub
lahf
in
xor
push
xchg
cli
call
addl
fbstp
fsubs
mov
mov
xchg
xchg
cmpsb
insb
pop
cmp
ja
jp
cmpsl
jae
sub
andb
push
adc
sbb
data16
sub
outsb
subl
jne
and
fidivl
repnz
mov
xor
and
dec
pop
dec
shll
xchg
or
push
jge
scas
scas
stc
xchg
pop
hlt
and
mul
push
xchg
ljmp
push
clc
adc
cmp
sbb
cmpsb
mov
shr
mov
daa
push
jl
insb
adcb
jns
fdivl
cwtl
push
push
pop
loopne
enter
andb
lret
insb
inc
sub
xor
or
mov
lds
and
xchg
sbb
sbb
sysenter
pushf
sbb
pop
fistpl
sbb
lcall
adc
cwtl
jmp
lock
into
mov
mov
push
daa
pop
adc
mov
shll
jecxz
mov
out
add
sub
in
std
pop
out
mov
aaa
xor
jae
adc
mov
push
inc
adc
dec
imul
jge
jnp
push
and
xchg
rolb
mov
dec
xchg
dec
aaa
mov
inc
and
int3
xchg
mov
sti
loopne
stos
jl
adc
imul
ja
inc
push
add
or
nop
jp
inc
mov
aad
lods
cs
loop
push
mov
cs
in
or
enter
mov
sbb
in
stos
sub
xorb
ror
nop
mov
adc
jno
lods
in
cmp
mov
lahf
adc
test
sbbl
clc
mov
clc
push
aaa
adc
or
test
push
push
mov
cmpsb
cmp
sarb
sub
jg
cmp
cmp
mov
dec
cmp
movl
scas
push
dec
into
pop
sub
xor
lret
xor
stos
sbbl
lea
push
fnsave
sub
incl
test
cmp
xor
dec
addr16
and
dec
jle
jle
jae
jp
add
xlat
lock
out
shl
or
push
xchg
push
xor
jecxz
mov
stos
adc
dec
stos
out
cmp
cmc
ror
fwait
push
lds
je
test
ret
push
add
outsl
jnp
push
loopne
cmc
cmp
xor
call
sbb
or
fs
fistps
andb
in
out
in
mov
pop
xchg
push
mov
xlat
test
ret
bound
add
xchg
imul
jge
rcll
sub
jecxz
loopne
enter
fistpll
mov
pop
stc
inc
lret
in
cmpsb
dec
cmovle
ljmp
daa
ss
rorl
call
out
push
cmp
in
sbbb
xchg
lret
jge
data16
sub
ss
jne
push
dec
ja
pop
scas
xchg
push
or
push
jae
test
adc
aas
mov
cmpsb
push
mov
dec
hlt
leave
cmc
pop
fdivrl
lock
decl
mov
cmpsl
dec
mov
sub
mov
jecxz
pop
rorl
std
movsb
add
int
pop
pop
out
or
or
push
icebp
test
negb
xchg
mov
sti
ret
and
lock
cltd
cmc
adc
jl
add
int
ror
inc
insb
push
xorb
filds
mov
mov
jl
inc
adc
testb
inc
mov
imul
push
mov
cmpsb
dec
fsubrs
mov
stos
mov
inc
dec
std
lret
mov
ds
cmpsb
sub
leave
shlb
or
repz
arpl
inc
repnz
out
fcoml
xchg
add
adc
ret
cmp
pminsw
xor
sbb
adc
xchg
pop
dec
sub
outsb
xor
add
jae
push
lret
sbb
popa
mov
jns
add
xor
add
mov
jns
pop
mov
mov
add
fdivr
into
xlat
sbb
xor
roll
sub
xlat
or
add
ds
pusha
mov
pop
jecxz
shll
ss
push
mov
loope
arpl
scas
xchg
xor
mulb
lds
push
ret
xchg
popf
inc
cmc
lret
movb
pop
pusha
mov
cmpsb
rorb
push
push
and
inc
pop
push
sub
jnp
xchg
sahf
sbb
mov
icebp
repz
scas
loopne
cmp
loopne
mov
negl
or
dec
test
mov
sub
push
data16
jg
pop
xchg
pusha
mov
popa
gs
hlt
leave
aam
mov
mov
ret
push
lahf
dec
fidivl
ficoml
inc
fcmovb
sub
or
cmp
shrl
into
testb
lret
cmp
xchg
ds
jl
outsb
movsb
xor
sbb
dec
mov
movsb
enter
xchg
arpl
mov
loope
xor
int
push
mov
fwait
add
mov
mov
xor
cwtl
xchg
cld
jmp
call
es
jl
mov
loope
xchg
pop
push
xchg
or
pop
pop
outsb
lcall
xchg
mov
sub
and
sub
pop
push
sbb
lods
call
test
cmp
fsubrs
out
push
data16
repnz
pop
les
jg
stc
out
lds
fbstp
dec
mov
ljmp
divb
adc
mov
out
and
mov
scas
adc
pop
fadds
outsb
lret
push
icebp
jg
flds
dec
js
lcall
scas
and
push
add
shlb
add
xchg
inc
or
push
out
mov
add
cltd
andl
fdivl
test
lds
sub
sbb
adc
lea
mov
in
leave
inc
add
popf
test
or
mov
mov
add
cmpsb
lahf
or
call
mov
out
adc
mov
mov
movsb
adc
xchg
cmpsb
dec
orb
mov
inc
rcl
cs
mov
xchg
dec
mov
push
enter
lods
outsb
adc
mov
push
movsb
fwait
mov
lcall
lahf
in
mov
inc
mov
test
xor
sahf
std
cmpsb
sub
push
pushf
pop
test
xchg
mov
pushf
and
lea
fwait
out
push
mov
addr16
jb
push
xor
aad
scas
cmp
lcall
ds
sarb
mov
push
pop
or
inc
loope
subb
mov
cmp
xlat
jge
jae
popf
inc
and
aad
jae
mov
repz
lcall
pop
mov
addr16
xlat
push
push
push
sub
cmpsl
add
shlb
jl
mov
xchg
push
pop
pop
movsb
mov
jmp
push
xchg
rcrb
pop
or
int
jnp
mov
adc
xor
loope
ret
jle
xchg
push
test
inc
fwait
mov
inc
call
jg
icebp
mov
jmp
in
xor
dec
js
push
cwtl
cmpsb
aaa
mov
es
daa
test
mov
add
hlt
mov
mov
dec
cmp
push
fcomp
notl
test
test
cld
test
jp
jnp
cmp
jae
fidivl
loope
adc
and
sbb
push
push
mov
jg
int
xchg
sub
cmp
insl
pop
aas
cmc
xchg
push
push
arpl
xor
mov
mov
loope
mov
outsl
lods
jp
scas
or
xchg
in
inc
mov
push
cwtl
lea
insl
fsts
sarb
sahf
inc
rcrl
jno
add
xorb
outsl
sahf
scas
into
adcb
push
push
xchg
push
cmp
adc
repz
mov
int
insl
jns
sbb
test
xor
outsb
sbb
add
add
pop
pop
lods
pop
cmpl
mov
fidivl
ss
dec
mov
push
pop
jo
cld
icebp
loope
pop
and
sub
hlt
neg
loopne
test
xor
movsl
movl
hlt
sub
mov
mov
jmp
aad
call
push
hlt
xchg
jecxz
stc
cli
xchg
js
outsl
ja
jbe
int3
dec
adc
dec
mov
sbb
push
mov
rorb
pop
rolb
shll
negb
rclb
or
sarb
adc
aas
push
inc
or
mov
aad
and
icebp
mov
mov
rcr
adc
repnz
jno
adc
out
jns
imul
mov
add
jecxz
pop
jge
mov
jae
xchg
scas
sbb
jp
pop
ror
pushf
jb
push
mov
push
cmpsl
push
hlt
pop
out
ljmp
out
loope
adc
and
loop
mov
cltd
add
mov
mov
push
ffreep
mov
adc
xor
rcl
mov
das
divl
or
xchg
sub
lds
and
and
sahf
jle
stos
ljmp
and
fmull
xchg
sarl
jnp
fs
das
xchg
fldenv
orb
lock
test
out
dec
xorb
clc
add
int3
not
jb
jle
pop
fsub
lret
inc
fistps
dec
sub
adc
pushf
xor
inc
xor
addr16
xchg
dec
imul
je
or
loopne
cmp
fdiv
daa
negl
shrb
nop
and
mov
xchg
mov
mov
or
stc
xor
neg
das
test
test
mov
mov
sahf
and
arpl
rep
sbbb
xor
mov
add
pop
nop
rep
cmp
fs
arpl
mov
dec
adc
js
jns
xchg
in
int3
dec
xchg
pop
pop
aam
int
or
xlat
sub
in
addr16
inc
xchg
xor
lcall
cmp
aad
or
lret
mov
fisttps
mov
jp
mov
les
inc
push
mov
jae
outsl
add
dec
mov
cs
inc
imul
stos
push
out
out
sub
fdivl
mov
mov
push
pop
xchg
sbb
cwtl
and
out
subl
subb
mov
mov
pop
pop
stos
lret
add
fcoml
iret
dec
lret
push
rcrl
in
sub
or
insl
pop
insl
outsl
out
repz
insl
rolb
icebp
mov
sub
test
mov
lcall
xchg
fnstsw
mov
sbb
lret
sub
cmp
mov
and
ret
out
sub
and
test
data16
dec
add
fcomps
pop
lret
cltd
sub
shlb
dec
and
repnz
inc
sahf
pusha
mov
test
test
shr
gs
push
fisttpll
jmp
mov
add
mov
and
mov
cltd
and
push
dec
sbb
gs
xchg
ret
mov
jnp
call
stos
out
pop
fnsave
daa
in
xchg
lods
mov
push
mov
jg
mov
jg
fwait
mov
adc
insb
sbb
mov
mov
push
fs
or
cs
sbb
adc
push
ja
nop
xlat
pop
fdivl
es
ljmp
cli
dec
in
dec
cmpsb
mov
or
enter
pop
adc
push
pop
mov
cs
add
sar
xchg
insl
pop
cltd
int
mov
add
push
in
push
fdivp
sbb
sahf
xchg
sub
sub
icebp
push
popf
mov
jle
push
or
cltd
cmpsb
enter
jp
add
sub
ret
fldt
sbb
stos
test
lea
xlat
xchg
clc
out
fwait
lahf
cmpsl
add
and
jg
hlt
cltd
xor
fisttpll
jne
loope
repnz
int3
int
pusha
jg
aaa
sub
sbb
dec
mov
ret
adc
cli
xchg
add
cmp
popa
hlt
lods
adc
fnstenv
mov
divb
push
fisubs
clc
sarb
sub
xor
xor
sbb
jnp
pop
sbb
sbb
xlat
lret
mov
shrl
lahf
pop
inc
pop
stos
jb
adc
mov
mov
sbb
or
mov
insb
scas
pminub
lods
pop
inc
ss
inc
jne
stc
pop
rcrb
sub
ljmp
lret
cmc
outsl
pop
dec
xchg
loope
outsl
xor
jb
inc
xchg
outsb
lods
or
pop
add
mov
add
mov
push
pcmpgtw
pop
addl
cmpsl
shll
pop
mov
mov
cmp
fs
or
test
pop
aad
popf
cmp
scas
sahf
add
mov
imul
dec
push
frstor
icebp
lods
jecxz
int3
test
scas
int3
and
arpl
xlat
mov
adc
sbb
int
hlt
xchg
pop
xor
push
cld
or
jo
mov
cli
sahf
mov
add
mov
pop
stos
push
lret
xchg
sub
adcl
gs
cmpsb
orb
push
inc
shll
mov
andb
inc
enter
int3
sbb
cmp
std
rclb
push
insl
test
push
scas
cmp
mov
int
pop
sub
cmovns
int3
cmpb
outsl
out
pop
ljmp
mov
sub
outsl
daa
jo
cmp
mov
inc
arpl
ret
pop
push
loope
sbb
cmp
sub
lds
loope
fwait
xchg
mov
jo
mov
scas
aam
fidivrs
addl
inc
sbb
sarl
outsb
int
push
jge
mov
ds
inc
mov
xchg
lahf
cli
shll
cmp
xor
stc
aad
insb
push
fildll
jle
ret
jns
pop
adc
xchg
imul
jo
mov
popa
fidivrl
sbb
push
clc
scas
jns
sbb
sub
fsubl
repz
jmp
dec
xchg
mov
aas
jb
cmc
pushf
and
fldcw
js
scas
ret
repz
insl
mov
clc
jge
sbb
les
push
out
pop
push
dec
dec
pop
testl
inc
push
movsl
push
jb
or
push
sbb
std
out
sub
jo
push
das
xor
jns
gs
jns
push
enter
mov
outsl
adc
add
mov
sbb
mov
sti
popa
dec
pop
xor
adc
jecxz
lahf
enter
lods
xor
sub
and
pop
mov
loop,pn
int3
mov
dec
or
inc
gs
add
jo
xchg
notb
fwait
or
test
mov
jp
adc
les
adc
stos
das
loop
push
mov
pop
lcall
lods
sub
jmp
js
mov
ljmp
add
scas
ficomps
loope
cmc
test
mov
iret
or
shll
xlat
dec
mov
shl
filds
push
addr16
mov
pusha
jge
dec
xor
outsl
lea
lods
cmpsb
divb
rcll
sbb
xchg
sbb
out
loop
ds
test
xchg
pop
negb
cmp
sbb
add
enter
adc
jge
or
push
pop
mov
add
jmp
rcr
cltd
pop
lods
fisttpl
pop
fwait
into
mov
ret
adc
leave
out
mov
enter
decl
pop
mov
arpl
xor
push
sbb
mov
std
gs
lcall
ret
push
pop
dec
push
inc
cmp
shrb
mov
into
cmc
test
dec
mov
mov
or
push
xchg
mov
mov
push
mov
mov
cli
dec
or
xor
jp
and
mov
out
adc
outsl
inc
repz
mov
push
and
inc
out
xor
mov
and
in
mov
sub
xchg
popa
out
dec
ljmp
je
leave
jno
add
jg
add
icebp
ljmp
aas
jae
cmp
jno
cmpl
lods
mov
dec
lods
cmpsl
sbb
popa
sbb
flds
xor
mov
pop
mov
inc
mov
sub
lcall
ret
mov
int
inc
xchg
push
ficoml
adc
fs
jge
inc
push
jbe
ds
jo
and
inc
lds
xor
lret
or
sbb
js
pusha
mov
xchg
mov
jns
mov
or
cmp
and
or
pushf
aad
sbb
repnz
aaa
and
jns
clc
cmc
out
mov
loopne
in
clc
sqrtps
out
and
in
ja
js
lret
cmovbe
dec
add
shll
idivb
les
inc
dec
into
xchg
xor
or
pop
xor
xchg
push
push
outsb
mov
insl
mov
push
xchg
bswap
arpl
xor
push
daa
test
lcall
xchg
icebp
loop
xchg
loop
sbb
imul
pop
xor
mov
repnz
mov
lret
add
shlb
dec
xor
and
daa
lss
es
xor
dec
sbb
cli
cmp
shlb
xchg
out
out
repz
pop
xorl
lods
xchg
aad
js
push
das
ss
call
sub
sbb
bound
cwtl
jno
jbe
std
test
fisubl
mov
popf
fwait
das
incb
ret
lods
xchg
pop
or
aam
sbb
movsl
mov
hlt
bound
cmpsb
es
jl
jns
js
mov
movsb
pop
adc
js
int3
aaa
fs
jmp
adc
push
imul
and
pusha
loopew
scas
fs
cmp
shrl
iret
sbb
loope
pop
fisubl
pop
in
sar
imul
movsb
mov
or
int
fwait
insl
xchg
out
cmp
imul
fwait
ret
add
ficoms
ja
jnp
mov
mov
movsl
add
jne
lods
cld
fildll
pop
out
shlb
mov
or
icebp
out
jnp,pt
cs
cmc
mov
sbb
mov
sbb
xor
popf
pop
jns
mov
mov
push
outsl
mov
pop
mov
jl
inc
mov
cmp
jne
cmp
xor
cmc
push
scas
divb
push
mov
stos
lock
xor
xchg
lret
daa
inc
ja
xorl
mov
aam
mov
add
mov
or
sbb
push
inc
ds
stc
jo
inc
xor
push
lcall
sub
mov
adc
xchg
ds
add
clc
inc
xchg
ficoml
jo
lcall
pusha
mov
je
and
dec
cmpsl
dec
aam
jo
jo
add
ret
nop
pop
rol
mov
sahf
out
mov
cltd
adc
jmp
lods
test
jecxz
pusha
insl
sbb
imull
jmp
cmc
jg
cmp
adc
shl
inc
shll
movsl
arpl
push
in
pop
stos
outsl
je
in
cs
sarb
into
mov
or
cwtl
test
loopne
xor
sub
push
and
out
pop
outsb
sub
shrl
push
jno
gs
push
pop
cld
mov
or
popa
add
sahf
mov
sbb
xor
inc
stos
leave
sub
or
in
jno
add
lods
xchg
jmp
jb
les
test
ja
mov
fistpll
xor
data16
shl
js
lea
push
cmp
addr16
fisubrs
jne
movsb
jmp
xchg
push
sub
add
jb
iret
dec
dec
insl
push
mov
sub
push
mov
mov
xor
fnsave
push
cltd
ret
test
sub
sub
arpl
or
mov
movsb
inc
scas
jle
es
leave
adc
test
pop
mov
sbb
and
jo
dec
mov
int3
out
notb
rcrl
add
mov
mov
jbe
loopne
adc
in
pop
out
fmul
push
jl
xor
out
xor
sti
xchg
add
push
cmp
add
cmp
lea
inc
es
jp
pop
out
sbb
jge
int
or
jge
outsb
adc
mov
mov
mov
cmp
sub
icebp
lods
int
and
das
dec
xor
xchg
repnz
push
push
pop
sub
test
incb
add
loopne
ja
popa
inc
imul
xchg
push
push
lret
pop
bound
aaa
aad
or
aas
hlt
push
xchg
lret
sbb
ss
test
out
in
mov
xchg
lds
hlt
icebp
adc
fistpll
sbb
pop
lret
cmpsl
mov
clc
jp
or
icebp
lret
xchg
pop
xchg
scas
jg
push
arpl
inc
jae
mov
fcmovnbe
lods
lods
xchg
rcll
shrl
push
iret
add
movsb
sahf
push
mov
mov
add
sbb
arpl
loope
sbb
add
adc
popa
xor
fists
ret
adc
dec
xor
movsl
cmp
jns
icebp
jmp
mov
stc
loop
insb
pop
push
loope
das
pop
sarl
fmuls
stos
and
dec
jns
ficompl
push
jb
gs
decb
mov
repnz
lods
or
faddl
pop
mov
in
add
and
add
pop
lock
cmp
out
pop
int3
pop
pop
or
scas
movsl
mov
sti
pop
mov
push
js
call
lods
jae
daa
xchg
and
lods
repnz
insl
dec
or
and
mov
movsl
ja
push
pop
in
cld
add
mov
jno
addr16
push
xchg
repnz
std
jo
icebp
mov
insl
mov
es
push
into
xor
pop
lcall
mov
mov
bound
or
clc
pop
mov
cltd
add
sti
cs
sbb
dec
sti
cmp
std
lahf
les
xor
sbb
pop
outsl
and
bound
cs
inc
aam
in
xchg
jp
cmpsb
sub
and
scas
mov
jp
jecxz
insl
in
enter
mov
mov
fs
xchg
cmp
pusha
push
repz
lock
test
add
ss
fistpll
insb
sahf
dec
enter
pop
pop
adc
or
lcall
push
xchg
dec
in
insb
aaa
ss
sti
inc
xlat
int3
fstl
test
or
out
loop
cmp
pop
pop
pusha
js
sub
sbb
rol
inc
ja
and
xor
lret
cmp
and
xchg
cld
es
dec
push
test
lahf
dec
and
inc
pushf
andb
push
repz
aam
cld
mov
scas
gs
sar
push
sbb
lahf
and
inc
and
push
push
mov
mov
test
popa
lcall
push
fdiv
imul
or
pop
jge
adc
push
inc
mov
pushf
xor
ret
push
xchg
mov
negl
clc
mov
mov
ds
xorl
inc
xchg
push
fst
pop
aas
or
aaa
cmp
and
add
daa
mov
repnz
frstor
ds
sbb
sub
int
daa
xchg
pop
adc
adcb
ss
inc
xor
pop
leave
add
mov
xchg
sbb
push
add
outsl
mov
jno
adc
xor
cmp
lret
inc
jecxz
jp
pop
cmp
push
jl
mov
fs
cwtl
popa
xchg
fldenv
lock
aam
rcrb
mov
daa
sbb
pop
rorb
xchg
cmc
adc
or
std
fistpl
add
lahf
jns
fisubl
repz
pop
sub
rcrb
popa
and
insl
xchg
in
addr16
mov
aaa
mov
test
sti
inc
imul
into
jg
outsb
mov
cmc
fisttps
rcrl
push
jno
lret
ds
insl
dec
outsl
mov
andb
pop
push
adc
push
sahf
jno
lea
dec
xor
in
repz
add
xchg
add
pop
cmp
out
lret
lock
roll
negl
xor
int
cltd
push
and
mov
and
jbe
scas
mov
cwtl
pop
add
imull
aam
les
push
add
icebp
mov
les
xlat
btc
pusha
lock
cmc
icebp
outsl
push
test
icebp
pop
mov
xchg
repnz
sahf
shll
mov
test
adc
jno
pushf
int3
subl
jle
cmp
cmpsl
mov
testl
lcall
cld
mov
jae
frstor
cmp
xchg
cmp
or
lcall
jp
movsl
adc
jns
and
pusha
adc
cltd
int
sbb
xchg
xor
xchg
in
gs
push
add
xlat
test
in
outsb
ret
das
je
stos
sti
jg
add
mov
das
in
imul
imul
mov
pusha
xor
decl
pushf
sub
dec
test
aas
xchg
divb
inc
xchg
fbstp
dec
inc
icebp
sub
and
cmp
dec
inc
cmp
mov
orl
lret
sub
jnp
pushf
insb
outsb
xor
pop
lods
aam
imul
or
sub
xchg
or
inc
xor
repz
lahf
or
xchg
jno
push
pop
aaa
std
imul
negl
cmp
arpl
cmpsb
cmp
fbstp
ficomps
into
fcmovnb
pop
mov
mov
jo
inc
sahf
inc
out
and
pop
xchg
jns
sbb
aad
mov
int3
lea
call
dec
push
les
test
sub
jns
pop
cmp
xchg
sarb
ss
enter
pop
add
push
dec
loope
mov
push
sti
sahf
mov
mov
and
cld
pop
jge
outsl
mov
jb
push
cld
sub
int
lcall
push
flds
add
iret
jecxz
jae
mov
popf
push
cli
pop
pusha
cmp
and
jno
test
jnp
push
mov
rcl
inc
dec
rolb
cmp
jp
jne
xchg
pushf
and
dec
inc
add
das
mov
or
sub
pop
mov
loopne
enter
sub
cld
inc
sub
sub
je
lcall
pusha
cli
dec
cmp
xchg
mov
sbb
cwtl
addr16
jae
push
mov
aas
movsl
or
iret
push
lret
mov
je
mov
or
lcall
imul
test
mov
fstl
cltd
sbb
fiadds
jo
mov
jge
sub
rcrl
fdiv
dec
pushf
pop
push
iret
test
dec
fldenv
dec
cs
or
sbb
cs
aam
mov
and
cmp
rclb
add
aam
int
sahf
cmp
ljmp
push
cmp
dec
adc
mov
jb
scas
jge
leave
pop
adc
cmp
cwtl
cltd
adc
xchg
sub
jmp
movsb
pop
mov
mov
mov
fcomps
lods
adc
xchg
mov
sub
inc
push
xor
push
pop
jns
aam
fistl
sar
jmp
enter
dec
cmpsl
test
outsl
cmpsl
xchg
lcall
ret
adc
or
aaa
stos
in
add
leave
loop
mov
mov
stc
pushf
rcrl
push
enter
cmc
xor
shlb
or
or
xor
jge
ret
sub
popf
test
aad
mov
push
fcompl
cmpsl
in
es
dec
lods
xbegin
mov
xor
sbb
cwtl
push
into
or
push
cmpsb
arpl
loop
into
dec
sub
adc
scas
add
jg
aam
je
test
adcb
ret
push
sub
mov
xchg
aaa
xor
cmp
idivb
shll
lcall
add
pop
adc
sub
mov
call
push
out
dec
icebp
lods
dec
out
popf
out
sbb
inc
and
lret
jno
jnp
test
or
hlt
adc
mov
lret
cmp
jae
pop
cmpsl
add
data16
or
xchg
and
shll
mov
pop
jp
test
in
dec
aad
xor
add
sbb
mov
mov
mov
test
or
stos
sti
jmp
cli
je
xor
dec
into
int3
mov
pusha
push
arpl
add
pop
int3
lret
dec
ret
adc
jp
ret
and
test
add
mov
or
pop
mov
cmp
cmp
pop
pop
push
push
aas
divl
mov
fimuls
mov
imul
pop
xor
arpl
jo
aam
adc
sub
add
and
sub
xchg
lret
or
fstp
aas
movsb
and
jbe
mov
or
js
pop
mov
sub
mov
test
sbb
call
xor
adc
sub
int3
sbb
xchg
push
mov
xor
sbb
shl
shl
dec
fdivs
imul
and
xor
or
into
mov
jo
insb
xor
mov
repnz
ds
add
dec
sahf
movsb
mov
shrb
lds
in
fisubs
push
inc
out
dec
jle
mov
sub
jg
jo
test
push
repnz
push
popf
jl
jmp
and
popl
sbbb
in
not
pop
insl
push
dec
jp
cmpsl
cli
ret
or
pop
mov
pop
imul
daa
lret
pop
aas
cs
pushf
rorl
sub
lods
mov
add
fldl2e
outsl
repz
int
popf
fcoml
fs
bound
xchg
cwtl
sub
dec
int3
mov
mov
shrb
mov
aad
lods
pop
fcoml
nop
push
outsl
js
int
and
outsb
in
xchg
fistps
lock
repz
adc
aas
cmp
mov
ret
cmpsl
sbb
push
pop
sbb
or
roll
loope
jns
loopne
inc
cwtl
mov
dec
jns
test
imul
lds
push
sub
xlat
ja
scas
sub
cmp
push
and
pop
inc
out
addr16
lods
and
pop
mov
jg
hlt
inc
les
inc
inc
ret
ficoms
insb
xchg
stc
lret
aam
dec
mov
mov
jnp
lock
scas
cmp
cmp
enter
lret
adc
mov
push
pop
mov
xor
cmp
mov
sbb
adc
pop
add
adc
fildl
sub
push
js
gs
sbb
shll
sub
inc
into
rclb
insb
std
nop
or
mov
mov
or
xor
popf
subl
mov
pop
jo
cmp
stc
sarb
enter
jbe
mov
test
popf
dec
mov
aam
leave
jo
lods
les
aaa
dec
repz
testl
push
dec
xchg
dec
mov
cmpsl
mov
add
push
cmpsl
out
pop
dec
movsb
loopne
stos
cld
ja
sub
sbb
btcl
or
cwtl
jo
shll
cmpb
xor
push
movsl
sbb
std
mov
push
rclb
xchg
aas
inc
dec
enter
jae
test
mov
subl
jno
dec
and
jbe
cwtl
movsb
mov
jns
cmp
out
jb
xor
lods
add
jns
add
inc
jo
ret
pop
xorb
xor
gs
int3
pop
hlt
push
xchg
fwait
sbb
and
jg
jns
fcmovnu
push
add
cmp
je
dec
loopne
aas
dec
fstpt
fistpl
shrl
adc
jmp
mov
add
cmp
xlat
dec
adc
sti
mov
fisubl
icebp
scas
js
adc
cwtl
and
cli
lret
lock
cld
imul
sbb
or
push
jmp
or
push
imull
and
jnp
mov
jmp
fdivr
lock
leave
pop
dec
dec
gs
int
in
outsb
sub
ss
mov
mov
loopne
inc
dec
push
cmp
fsubp
xchg
push
sub
loope
int3
cmp
sbb
into
mov
cmp
xor
cs
xor
iret
mov
push
cmp
addb
stc
in
leave
mov
mov
fdivrl
mov
or
nop
stc
cmp
ljmp
arpl
push
cs
add
xor
xlat
jns
shlb
out
inc
inc
das
mov
int3
sbb
jb
sarb
adc
pop
mov
mov
loope
repz
xor
out
add
fisubrl
adc
lret
pop
inc
cltd
or
fidivrl
mov
leave
stc
jae
sbb
xor
push
pop
pop
and
xchg
repnz
sbb
xor
adc
loopne
cmpb
inc
iret
daa
jmp
mov
mov
mov
mov
lret
xor
push
dec
cmp
leave
cs
test
leave
or
mov
inc
lret
or
mov
js
mov
shlb
stc
push
rorb
stos
sti
pop
aam
imull
pushf
adc
mov
pop
add
outsb
jmp
adc
stos
xlat
sub
xchg
push
dec
std
mov
add
orl
sub
sbb
aam
dec
cmpsl
xor
mov
scas
cld
in
cmpsl
xchg
sbb
pushf
pop
jne
xchg
mov
test
mov
int3
or
insb
mov
mov
lds
clc
fisttpll
enter
adc
ljmp
xchg
sbb
loop
pop
mov
lahf
fmuls
lret
adc
push
and
fs
and
push
xchg
push
aaa
ret
call
jae
jecxz
xchg
call
pop
in
pop
mov
mov
jle
jg
sbbb
dec
cmc
sbb
xchg
pusha
push
push
push
or
pop
dec
cli
popa
and
cmp
or
push
xchg
jnp
jecxz
std
frstor
dec
ds
dec
fs
mov
add
pushf
dec
push
jo
add
add
mov
mov
in
pop
dec
push
sbb
jecxz
loop
lock
shll
jge
xor
fnstcw
je
outsl
ljmp
jae
insb
and
int3
fwait
sbb
ror
arpl
fisubs
cmc
dec
pop
jbe
shrb
inc
jle
or
fcomps
jae
sub
out
rclb
mov
fimuls
jecxz
inc
iret
and
fsts
or
into
cmovne
ja
add
sbbb
pop
lahf
jae
cmc
cmp
sti
icebp
dec
or
push
and
jg
into
jecxz
mov
mov
outsl
fcompl
push
in
ljmp
and
sub
push
xchg
sub
jbe
lds
scas
add
les
and
ret
jge
and
xor
fdiv
je
fadds
gs
pusha
adc
mov
imull
lds
mov
dec
cmp
aaa
sti
mov
jecxz
es
xorps
jae
and
inc
mov
dec
je
or
cmpsl
xor
je
stos
aad
dec
das
xchg
add
cld
sbb
in
lds
sbb
mov
inc
repnz
inc
dec
jb
bound
stos
xchg
ret
add
sub
sbb
sub
xchg
sbb
repz
scas
or
movsb
icebp
xor
test
in
xchg
add
outsb
push
jae,pt
xchg
ljmp
lret
add
sub
mov
pop
cmpsl
or
xor
inc
into
jle,pt
ja
fsub
das
adc
xor
data16
mov
and
sub
cs
jl
jge
stos
sub
aas
inc
xor
aam
jmp
push
mov
call
xchg
jl
ds
in
cmp
mov
pop
adc
out
push
add
pop
jmp
cli
mov
pop
adc
mov
adc
dec
mov
mov
dec
or
pop
ja
stos
lcall
leave
push
push
int3
loopne
jle
and
pop
imul
scas
out
inc
and
lods
xchg
test
loop
dec
mov
pop
rcl
pop
pop
nop
dec
enter
cmp
aad
std
dec
mov
out
cli
and
addr16
jmp
clc
xor
fldcw
pop
ljmp
cli
sub
xchg
and
jge
jnp
xchg
pop
leave
inc
cmpsl
arpl
fwait
cli
sbb
cwtl
data16
pop
test
or
aam
xor
fbstp
lahf
std
loop
add
jns
imul
push
sub
iret
pushl
into
xchg
dec
fbstp
std
push
lods
inc
bound
call
test
jl
out
add
inc
xchg
lds
mov
xchg
pop
popf
cmpsl
and
fsts
cmpsl
pop
sub
iret
mov
push
fisttpll
int
test
add
lret
repnz
ds
or
add
ret
int3
or
adc
mov
push
push
mov
xor
dec
ret
xor
test
mov
xchg
rorl
add
add
mov
dec
dec
mov
add
sub
pop
xor
push
mov
pop
mov
int3
pop
lea
movsb
shr
outsb
mov
dec
push
gs
adc
xor
mov
ja
jb
sbb
or
mov
sahf
cld
dec
fsub
xor
cmpl
shrl
int
add
test
mov
outsl
stc
mov
xchg
inc
movsb
cmp
test
fs
mov
sbb
aam
inc
roll
lea
enter
mov
cwtl
and
jmp
add
jmp
mov
mov
push
or
mov
imulb
sub
rol
into
iret
cwtl
jmp
pop
loope
and
jmp
mov
jae
stos
imul
into
push
lock
setnp
orb
pop
jb
inc
rol
pusha
pop
cmpsl
test
or
push
xor
push
das
test
xor
mov
movsb
xchg
nop
dec
stos
stos
cwtl
xor
ljmp
mov
fsubs
dec
cmp
cmp
fisttps
pop
pop
addr16
pop
mov
mov
daa
andb
fiaddl
rcll
outsb
stos
push
mov
hlt
jecxz
das
jle
inc
std
sub
mov
mov
lds
mov
int
lahf
inc
mov
loop
repz
hlt
add
xchg
popa
mov
xor
aad
lret
pop
mov
jmp
push
mov
iret
lds
stos
or
test
pop
push
jnp
xor
repnz
inc
xchg
jmp
lahf
gs
and
mov
adc
xor
xchg
xchg
mulb
dec
inc
cmpsb
lret
pop
mov
push
stos
popa
ljmp
add
jno
int3
add
pop
cld
cs
bound
cmp
daa
lret
movsb
adc
lock
iret
cli
pop
mov
jg
clc
mov
jbe
jge
repz
pop
out
add
rorb
inc
cmp
xor
inc
push
mov
aam
outsl
pop
push
dec
xchg
push
fcmovnu
sub
gs
sbb
and
divb
adc
es
fmull
fucomi
and
out
dec
sti
int3
arpl
and
icebp
inc
ds
clc
sti
mov
arpl
sahf
pop
in
imul
hlt
inc
jno
dec
in
imul
mov
sub
add
lods
mov
adc
jge
inc
cltd
cmp
push
test
pop
out
inc
mov
sub
imul
rcrl
push
in
or
or
lods
jne
lahf
push
fmuls
xlat
push
stos
xor
fistl
loopne
pushf
xor
data16
loopne
mov
pop
sub
mov
stos
and
cmp
lahf
fwait
pop
cs
fwait
repz
ja
mov
mov
cmc
jmp
lret
inc
xchg
mov
dec
sbb
mov
dec
xor
and
jno
sbb
iret
dec
mov
leave
icebp
add
std
jbe
stos
cmp
inc
popa
movsl
clc
lahf
leave
dec
and
inc
sbb
add
xlat
add
cmp
adc
inc
push
xchg
adc
xchg
mov
cmc
dec
stc
iret
fcomp
aas
push
loop
sbb
out
jae
shr
sbb
ljmp
rorl
jns
jmp
jns
pop
lds
dec
adc
nop
bnd
xor
test
shlb
and
negl
sbb
cmp
daa
sub
xchg
aaa
lahf
push
sbb
xchg
xchg
mov
pop
or
inc
or
add
and
pop
mov
fmuls
sti
in
jge
xchg
jns
jp
inc
test
stos
push
dec
inc
sub
test
or
cmc
enter
inc
lret
dec
mov
sub
testl
std
mov
push
lahf
out
addb
cmc
imulb
sbb
xor
inc
test
lods
ficompl
repz
pop
ret
xor
mov
xchg
lahf
push
mov
push
cmp
cld
and
jge
das
hlt
icebp
out
ss
push
sub
pop
cmc
add
or
lock
insb
sbb
out
push
sarl
mov
mov
mov
add
call
cwtl
xor
ret
test
push
rol
ja
loop
icebp
pop
xchg
dec
mov
push
jbe
test
stos
stos
aas
inc
xor
xchg
mov
xchg
push
fidivrs
loop
aam
insb
mov
out
xor
xor
push
cli
mov
out
adc
or
jg
stc
arpl
imul
push
popa
gs
enter
inc
inc
in
out
mov
fisubrs
scas
stos
out
popa
imul
xchg
jmp
mov
inc
int
daa
hlt
inc
shll
and
inc
xor
lea
dec
add
sbb
mull
popa
xchg
pop
fldt
adc
push
sbb
sti
mov
sarl
mov
imul
cld
mov
pusha
bound
daa
lds
es
ljmp
aaa
mov
cmp
lods
mov
jle
test
fwait
das
sbb
lahf
imul
jnp
aad
out
dec
dec
fsubs
rcrb
inc
je
inc
dec
and
sbb
daa
xchg
push
jge
pop
sahf
jne
out
call
sub
pop
mov
stc
fwait
sbb
lcall
int3
add
fldpi
in
dec
dec
nop
cmpsb
add
inc
sahf
push
pop
test
fimull
jo
cltd
sub
fmulp
rcrl
push
out
pop
cmp
clc
push
js
ljmp
and
sbb
jo
dec
mov
jnp
loop
and
call
push
xor
mov
cmp
sar
movsb
pop
mov
jge
mov
xchg
inc
dec
insl
inc
pop
jge
jmp
fwait
add
and
sbb
xor
dec
fs
lahf
lods
pop
add
lahf
lcall
lret
xchg
stos
in
mov
cmpsl
lods
pop
movsb
mov
rol
divl
cmp
ficompl
jne
popa
push
xchg
movsl
or
js
or
pop
stos
push
push
les
roll
mov
orl
icebp
xchg
fdivrs
pop
pop
lret
mov
push
jmp
mov
dec
dec
pushf
addr16
push
into
mov
or
mov
pop
inc
mov
xchg
push
xor
shlb
jno
xchg
push
adc
add
ss
shlb
inc
pop
ljmp
loopne
and
fcmovne
pusha
lods
cmp
testb
adc
cmp
gs
pop
gs
pop
std
flds
push
dec
or
lahf
int3
and
scas
pushf
outsl
cmpsl
icebp
dec
into
or
cmp
inc
cld
popf
mov
lret
andl
nop
outsb
adc
xor
sbb
faddl
mov
ja
jmp
fdivrs
mov
scas
xor
gs
mov
stc
ljmp
ret
cmpsl
lods
loopne
loope
clc
leave
xor
insl
cmc
in
pop
data16
cmpsl
sbb
xchg
popa
mov
arpl
cs
aam
repz
enter
leave
pop
pop
cli
push
push
outsl
cmp
test
cmpb
mov
fdivrs
hlt
add
mov
sub
push
pop
adc
jno
leave
jmp
cmp
mov
ficoms
subl
sub
xor
pop
in
int
pop
pop
pop
mov
cwtl
das
sbb
roll
xchg
jmp
inc
or
sbbb
mov
aam
xchg
fs
xor
ljmp
or
fcomps
mov
push
mov
xchg
dec
dec
sbb
fimuls
fwait
cmp
in
enter
sbb
test
adc
ds
inc
pop
jp
inc
in
xchg
mov
cmp
cltd
ds
xchg
inc
popa
mov
jae
mov
sbbb
xor
adc
mov
push
xor
and
jl
xchg
or
adc
enter
icebp
movaps
jecxz
int3
push
push
ljmp
adc
decb
cmp
icebp
mov
iret
jnp
std
gs
mov
cli
ja
sub
outsl
mov
mov
jns
mov
lahf
enter
mov
sub
jecxz
adcl
mov
decb
push
stos
pop
inc
scas
jg
aas
jmp
divps
lods
xchg
cs
mov
arpl
fisubs
and
dec
aam
ja
push
cwtl
push
das
inc
loope
sbb
imul
loope
cld
mov
xor
push
movsb
sti
adc
xor
scas
dec
popa
mov
cmp
call
inc
sbb
decb
shl
mov
mov
ficoms
scas
mov
rcrb
arpl
std
fmull
shr
sub
movsb
scas
pop
jns
sbb
cs
pop
mov
icebp
xchg
lock
aaa
pusha
outsl
ret
mov
xchg
js
push
das
xchg
mov
or
and
xchg
fst
rclb
cmp
xchg
mov
pop
mov
xorb
fiaddl
aad
sahf
aad
ss
lock
aaa
dec
jns
inc
sbb
xor
dec
out
adc
push
ret
xchg
stos
cmc
mov
or
push
xor
ficompl
leave
mov
dec
data16
mov
and
sub
sbb
das
cs
pop
loope
pop
je
mov
ds
jmp
xchg
popf
xor
js
mov
out
and
inc
stos
dec
cmpb
and
dec
repnz
cmp
mov
pushf
xchg
adc
jg
dec
aaa
or
sahf
and
popl
incb
in
rcrl
out
fidivrs
cs
sub
pop
mov
xor
mov
or
mov
dec
pop
in
push
xchg
add
sub
fs
loop
ds
dec
add
add
jg
lcall
arpl
popa
pop
or
or
pop
pop
mov
xchg
mov
scas
imul
xchg
in
sbb
outsl
or
sub
adc
xchg
popa
sti
stos
and
loop
jmp
and
push
cli
inc
mov
fbld
addr16
imul
sarl
loopne
enter
mov
push
call
xchg
push
xor
clc
adc
lods
cmp
mov
pop
and
xchg
ret
sarb
cmp
mov
test
xor
add
int
xor
xor
push
call
or
stos
dec
sub
loop
or
fcmovbe
pop
ljmp
fs
add
cmp
mov
clc
ja
outsb
aaa
adc
xchg
adc
xchg
jo
nop
mov
inc
or
pop
push
mov
sti
repnz
jmp
cmp
sti
shl
cld
dec
jbe
imul
jne
sbb
adc
fstpt
push
pushf
cltd
cmpsl
addr16
jmp
xchg
and
out
and
in
lock
jg
inc
pop
es
mov
xor
xchg
inc
nop
jae
adc
sbb
adc
fldcw
shr
cmp
jno
iret
mov
inc
xor
call
rcl
shrb
dec
mov
fsubp
subl
lods
sub
mov
testb
xor
aaa
cmp
sub
bound
cmp
and
sub
adc
leave
loopne
push
dec
jnp
xlat
mov
scas
outsl
sbb
ss
jmp
outsb
pop
ret
jns
lcall
xchg
pop
jae
xchg
movntq
je
dec
mov
push
movsb
jbe
int3
test
lcall
pop
and
out
push
pop
icebp
or
insl
jo
cmpsl
icebp
mov
pop
dec
fadds
ljmp
push
into
mov
mov
jmp
and
rclb
jno
arpl
cltd
stos
adc
cld
push
xchg
fcomps
jo
mov
adc
cmc
and
js
nop
movsb
or
xor
dec
push
jbe
jl
sub
pop
dec
cmp
sarl
push
inc
cli
pop
out
dec
inc
iret
lods
cmpsl
arpl
test
pop
pop
mov
or
or
pop
jp
rcr
pop
jno
lea
or
insl
push
sbb
pop
jg
jb
fdivrs
jb
jmp
fidivs
js
insl
inc
insb
fs
jecxz
push
inc
jmp
sbb
xchg
sbb
pop
push
cmp
fst
in
add
pop
rolb
out
jb
sub
inc
jo
lods
jle
push
scas
idiv
sub
cmp
or
mov
out
mov
mov
movsb
mov
inc
ds
cmp
pop
dec
negb
rclb
sti
and
inc
std
stc
mov
adc
push
and
mov
outsl
push
fimull
gs
fisubrl
and
xor
and
add
sbb
out
xor
jns
ljmp
xchg
mov
xor
jge
mov
jae
ds
loop
adc
sub
xor
stc
pop
nop
inc
cmp
outsb
pop
jecxz
stc
add
pushf
push
je
or
and
test
das
inc
clc
pop
inc
lret
adc
pop
xchg
outsl
andl
mov
pop
jecxz
pop
and
int
stos
int
or
test
les
loop
aas
sbb
js
mov
dec
inc
out
xchg
mov
xchg
stos
sub
or
fwait
popa
leave
in
inc
lea
lock
movsl
inc
mov
aam
clc
addr16
pop
repz
push
and
push
or
mov
jae
jnp
mov
mov
lds
mov
sub
in
mov
push
orl
sub
inc
jecxz
vhsubps
test
mov
push
loope
ja
test
scas
movsb
dec
not
iret
hlt
mov
mov
or
push
enter
loop
jle
sbb
mov
jne
lret
jbe
rolb
push
daa
jo
mov
jl
sbb
out
xor
dec
cld
xchg
rclb
adc
and
mov
and
icebp
icebp
xchg
adc
jns
es
into
js
les
add
cmp
pop
or
imul
adc
and
xchg
ljmp
ljmp
in
bound
aas
add
mov
jo
xchg
dec
jnp
gs
push
mov
mov
mov
jae
hlt
push
inc
dec
ja
xor
and
stos
xchg
push
or
fsubr
dec
mov
movsl
gs
int3
lock
mov
repz
flds
xor
inc
repnz
ljmp
stc
pop
inc
in
pusha
jb
nop
and
in
and
movsb
in
loopne
popa
je
in
xchg
xor
aam
popa
pop
fwait
mov
cmpsb
pop
xlat
inc
repnz
xchg
cmc
pop
rorl
adc
nop
inc
mov
cwtl
sbb
or
add
cmp
fadds
pop
jle
xor
jp
inc
mov
inc
and
cmp
mov
jno
dec
in
mov
lods
dec
push
fdivs
flds
ffree
lods
dec
loope
mov
pushf
cmp
push
lcall
pop
sbb
sub
fldln2
inc
arpl
push
sub
loope
fimull
push
sub
cltd
xchg
repz
dec
icebp
xchg
dec
pop
pop
adc
push
fisubrs
push
jle
push
int
push
mov
sbb
mov
pop
cmc
mov
mov
add
jmp
jp
dec
mov
pop
dec
fsubrl
sahf
or
pop
pop
and
scas
dec
cmc
ret
loopne
repz
insb
hlt
int
inc
inc
test
or
pop
xchg
ljmp
sub
adc
ss
popa
jg
pushf
mov
lcall
pop
mov
hlt
adc
fsubl
mov
xor
cmpsb
bound
aas
jno
sahf
push
mov
in
dec
push
cmp
cli
repz
insb
cmp
lret
mov
mov
not
scas
mov
dec
pop
push
sub
ret
pop
fcom
movsl
mov
add
movsl
ds
cmpsl
stos
lret
mov
xchg
jle
pop
mov
pop
arpl
xor
xchg
dec
push
and
add
push
mov
mov
xchg
push
cmp
push
sti
cmp
xchg
ret
sbb
mov
pop
hlt
dec
xchg
inc
divb
loope
std
mov
inc
clc
pushf
sub
push
mov
subl
sti
mov
sub
push
mov
xor
mov
ret
in
adc
outsb
cmp
in
in
jge
arpl
sbb
add
mov
dec
pop
mov
mov
inc
push
inc
out
sbb
pop
loop
test
pop
jne
jecxz
mov
lahf
dec
orb
pop
inc
sbb
out
jl
hlt
inc
pop
mov
sub
or
pop
leave
xor
xchg
out
hlt
xchg
loop
inc
imul
and
aam
lds
fimuls
roll
stos
add
inc
and
xor
repnz
and
pop
sahf
jecxz
mov
dec
lds
movsb
jb
push
pop
fmuls
lea
int
cld
out
pop
int3
mov
sub
fadds
sbb
sbb
ss
and
fdivl
adcb
mov
jp
xchg
rcll
jmp
or
lock
push
pop
dec
mov
sbb
inc
sarb
jae
mov
pop
cmp
inc
out
push
or
out
movsl
push
fwait
je
aaa
lret
jns
adc
loop
scas
xchg
sub
lret
and
jb
je
outsb
jl
mov
and
test
cmp
imul
adc
sbb
inc
push
repnz
fsubl
data16
loopne
ss
mov
pop
jnp
aam
xor
bound
adc
xor
test
out
stos
push
dec
subb
in
lods
mov
lcall
add
aas
aam
jno
fnstcw
pop
data16
sbb
push
mov
sbb
addl
data16
stos
subb
shrb
cmp
imul
sarb
test
int3
mov
shr
repnz
in
sub
int3
je
aad
ret
scas
and
and
ja
out
xchg
sbbl
fcmovb
mov
lea
test
in
popl
sub
in
ror
mov
inc
sub
hlt
gs
jno
lods
pop
fdivr
xchg
mov
out
inc
movsl
sub
fs
mov
mov
daa
scas
fnstsw
push
js
test
adcl
lock
jb
and
pusha
mov
mov
dec
lock
cmp
add
decl
cmpsb
inc
shl
pop
pop
cmp
je
ja
jge
movsb
into
adc
sahf
repnz
jmp
jo
lock
add
test
repnz
push
out
jmp
mov
or
and
adc
xor
xchg
push
xor
or
sub
cmp
mov
ss
lock
ret
cmp
pop
dec
adc
add
sbb
fsts
pop
lods
ret
fsubl
rcll
or
sub
xchg
and
popa
mov
nop
insb
dec
scas
jo
in
das
popa
mov
lea
dec
sub
loope
adc
les
in
cmc
out
mov
xor
imul
call
in
mov
das
loopne
stos
jmp
movsb
bound
or
xor
push
aam
movsl
push
rcr
jns
in
pop
add
shll
ja
push
mov
xchg
mov
imul
call
mov
xchg
inc
test
stos
aaa
push
lcall
jmp
hlt
dec
sahf
xor
aam
pusha
and
or
fsubrl
int3
js
cmp
sub
mov
inc
xor
pop
or
cmpb
popa
stos
rolb
xor
jns
and
dec
test
gs
sub
daa
and
test
or
pop
cmc
add
and
xchg
fisttpl
ret
cmpsb
cmp
adc
pop
and
add
dec
and
dec
jbe
ljmp
cmp
add
fs
stos
pop
dec
jae
mov
dec
jp
add
adc
lods
lds
cmp
cmp
mov
mov
cmc
icebp
test
bound
cmp
cltd
mov
js
repz
loopne
test
in
cmp
xor
push
xor
push
scas
cmovl
adc
sub
and
lods
ror
or
out
out
test
mov
jnp
mov
pop
fidivl
setbe
test
inc
sbb
std
push
aas
jle
cli
gs
rorb
inc
dec
or
and
jo
or
adc
inc
lea
push
and
inc
leave
xor
jno
push
std
ljmp
sub
push
and
jecxz
xor
movsb
aaa
popa
sub
adc
mov
pop
dec
mov
mov
dec
add
outsl
and
jge
das
push
lods
movsb
aas
xchg
int3
cmp
dec
hlt
fadds
test
xchg
pop
aaa
cmp
xor
int
ficoml
jo
movsl
inc
fidivrl
das
xor
adc
inc
inc
sbb
sbb
xlat
les
mov
xchg
lock
dec
jb
iret
in
add
rorl
cld
jnp
movsb
ret
test
sub
inc
jp
aad
push
test
nop
and
daa
pop
decb
pop
insb
or
aaa
push
lret
lods
xorl
mov
and
hlt
bound
lahf
push
repz
push
xlat
dec
and
bound
xchg
push
inc
les
lea
mov
les
sbb
fistpll
or
clc
fsts
fcoms
and
mov
test
or
aas
adc
push
outsl
mov
mov
xchg
pop
sub
xor
fdivrs
jbe
mov
jl
push
divb
ljmp
hlt
data16
sub
push
push
mov
int3
inc
adc
inc
sbb
loope
iret
out
in
test
jbe
adcl
pop
lcall
cld
cmpsl
hlt
fdivrs
cwtl
stos
dec
add
out
pop
fstpt
lret
aad
stos
fs
fimull
hlt
lods
addr16
leave
lea
add
cmc
lret
inc
adc
ficompl
pop
les
add
aaa
lods
mov
cmp
add
into
pushf
push
lods
testl
in
nop
fs
mov
jge
sub
sub
pushf
push
add
add
cmc
in
push
cwtl
adc
mov
out
jp
inc
decl
mov
adc
xor
lods
in
stos
inc
add
adc
sti
pop
outsl
das
insl
sahf
fnstcw
outsl
jno
ret
push
pop
or
pop
mov
jns
sub
sbb
faddl
repnz
cltd
lods
aaa
sbbl
mov
lds
std
ja
ljmp
aas
aas
adc
ret
je
frstor
out
cmpsl
fs
dec
add
mov
ljmp
push
popf
mov
in
xor
lret
daa
insl
bound
inc
imul
loop
lea
jnp
pop
mov
dec
into
int
mov
adc
add
push
xchg
sbb
pop
dec
sbb
bound
stos
push
adcb
pop
sbb
sub
pop
mov
mov
das
jb
test
into
or
push
popf
call
loop
inc
outsl
cmc
mov
jmp
aas
decb
mov
cmpsb
scas
mov
xchg
pop
arpl
lds
fwait
inc
xchg
jno
rclb
mov
sub
push
addl
sbb
jb
mov
scas
jle
scas
in
fimull
sub
dec
push
push
lcall
pop
in
test
dec
andb
out
lcall
fadds
lea
cmc
jne
ror
push
lcall
sar
add
into
xchg
push
ficoml
orb
outsb
xchg
pop
fisttpl
sub
mov
pop
cltd
cmp
ds
xor
add
mov
in
into
out
rcl
mov
mov
icebp
inc
push
jb
mov
es
mov
sub
pusha
cwtl
sbb
test
adc
pop
or
insl
mov
test
lea
stc
mov
in
rcr
xchg
imul
cltd
pusha
test
push
jecxz
and
push
addr16
rorb
xchg
test
push
hlt
call
inc
in
mov
push
jnp
cs
pop
and
out
imul
mov
in
dec
and
sub
pop
ret
outsb
aaa
pop
jmp
adc
push
mov
fdecstp
push
sub
mov
jnp
push
leave
sbb
scas
shr
and
fdivr
orl
ljmp
inc
add
or
hlt
arpl
sbb
jge
push
and
pop
jo
hlt
lea
mov
mov
test
fiadds
sbb
in
push
lret
or
mov
and
mov
mov
add
ficoms
dec
mov
je
add
mov
mov
push
xlat
lret
sub
out
mov
bound
lret
jl
and
les
repz
out
cli
cld
jno
sbb
sub
jecxz
loopne,pt
fiadds
push
ud1
add
mov
jnp
jne
sub
or
xor
sub
cs
fidivl
ljmp
gs
fcmovnu
push
xchg
dec
sbb
jnp
dec
es
jbe
roll
inc
loopne
je
cmp
scas
les
movsl
daa
out
mov
xor
adc
ss
cwtl
leave
shlb
pop
ds
test
and
and
pop
dec
fwait
je
cmp
and
inc
push
gs
gs
in
fwait
inc
insl
repnz
repnz
lahf
push
test
cmp
xor
lds
xor
adc
inc
in
and
jnp
push
push
cmp
mov
jge
imul
and
fiaddl
insl
mov
pop
fwait
movsb
insl
sub
add
shlb
out
push
push
repnz
stc
mov
cmp
fdivr
inc
and
popf
mov
outsb
cmp
in
cli
das
aad
push
sub
movsb
cmp
loope
daa
mov
cli
pop
mov
mov
mov
jb
cmp
adc
push
dec
out
cwtl
pop
inc
out
lods
nop
addr16
or
mov
les
push
cwtl
and
shr
sub
mov
dec
repz
les
mov
ret
mov
sub
mov
jnp
mov
pop
xor
pushf
jl
pop
lods
test
inc
repz
pushf
fucomp
lods
fistpl
leave
cs
vshufps
jl
cs
pop
inc
aam
push
xchg
add
pop
dec
cmc
cmp
xor
or
sbb
dec
pushf
pop
xchg
pop
dec
inc
jecxz
aas
adc
test
mov
pusha
pop
ljmp
push
push
hlt
cwtl
push
cmp
mov
sbb
popf
xchg
mov
mov
cmc
scas
notl
dec
in
inc
das
or
mov
push
cli
ja
pop
adc
ret
dec
cli
mov
xlat
xchg
clc
lods
pop
icebp
mov
push
xchg
xchg
out
cmp
out
cmp
pop
popl
lcall
mov
fs
sub
jno
xchg
outsl
in
inc
push
adc
ret
cmp
dec
mov
mov
out
pop
inc
in
xchg
jmp
push
bound
mov
push
rcrl
mov
enter
push
mov
popf
stos
je
outsl
jns
push
pop
cmp
cltd
ds
pop
xchg
into
push
sti
icebp
xor
mov
push
sti
lea
or
dec
lea
push
mov
dec
dec
cs
lret
pop
mov
inc
jle
mov
xchg
divb
aas
cmp
loope
in
sub
pop
mov
mov
filds
in
add
ficoms
into
xor
sahf
sbbl
fwait
and
clc
mov
inc
in
jno
fildl
jnp
sub
bnd
sti
iret
cs
xchg
mov
idivb
mov
pop
ret
adc
push
inc
push
roll
sub
arpl
and
adc
cmp
lock
pop
es
loope
xorb
sub
stos
pop
mov
fildl
fs
sub
sub
push
lcall
sbb
cmp
mov
xchg
insl
mov
aad
pusha
sub
add
xchg
fstps
dec
mov
xor
mov
mov
mov
mov
sbb
add
jb
and
cmpl
mov
stos
mov
xchg
push
std
popa
jbe
imul
add
pop
repz
pushf
xor
int3
imul
sub
xchg
push
lock
out
sub
adc
xor
push
xlat
pop
cltd
fisttps
sub
sub
je
rcrb
add
outsl
fbld
xlat
inc
mov
mov
xor
cmp
iret
jbe
aas
out
out
adc
sahf
in
cmp
fwait
or
pop
cmp
mov
sbb
sbb
pop
push
lods
stos
xorl
pop
mov
sub
lea
out
pop
bound
bound
adc
adc
in
dec
loopne
sbb
push
push
or
pop
in
pusha
stos
scas
jge
mov
movsb
pop
loope
subb
inc
psrlw
int
sub
pop
push
and
repnz
add
push
pop
push
lock
ljmp
xor
mov
inc
popf
xchg
testb
push
decl
shr
push
pop
je
adc
mov
nop
push
inc
and
fwait
lds
rorb
ds
mov
sti
xchg
sub
sub
repnz
add
insb
mov
xchg
inc
pop
or
pushl
pop
jp
mov
lods
test
or
xor
pop
gs
xchg
imul
jp
adc
adc
fildll
std
mov
sub
les
call
test
ret
cmp
dec
or
rorl
add
add
adc
aad
or
mov
jne
and
push
loop
aaa
imul
cmpsl
sti
shll
push
cli
jge
xchg
stos
push
imul
loopne
pop
cmpsl
jae
bswap
scas
xchg
xor
ret
mov
insb
enter
add
aad
mov
ljmp
lret
in
movl
or
cmp
ret
aam
sbb
sti
mov
sbb
push
in
pop
and
inc
mov
ret
addb
jle
xchg
inc
call
bound
mov
jo
rolb
fs
pop
jp
pop
pop
pop
fdivrs
sti
jnp
and
icebp
loopne
inc
fsubrs
cwtl
ficoml
dec
scas
xlat
sbb
or
pop
sub
fs
jp
pop
pop
popf
ljmp
les
outsl
mov
push
jne
int
cs
xchg
push
mov
std
insl
and
dec
roll
mov
mov
mov
nop
lcall
sbb
in
mov
pusha
sub
push
stos
xchg
jbe
jg
cmp
cmp
mull
pop
in
ja
cs
pushf
sbb
in
lahf
xchg
mov
pop
testl
subb
dec
cmpsb
shr
mov
add
inc
push
and
out
push
or
mov
test
add
cmpl
lcall
or
sbb
cwtl
cmp
jl
push
cwtl
fcmovnu
sbb
popf
mov
or
push
lods
aas
jae
xchg
dec
fcomps
arpl
xchg
mov
les
das
orl
shlb
lods
add
ffreep
push
cmp
pop
or
je
mov
scas
push
sbb
into
pop
fiaddl
rcrl
xchg
cltd
xchg
mov
pushf
outsl
loope
mov
and
jae
lock
inc
mov
int
daa
sbb
xor
cmpsl
pop
pop
cmpsb
sbb
mov
out
or
ds
pop
pop
xchg
mov
test
dec
sub
cmp
mov
loope
pop
sbb
inc
pusha
jle
outsl
sbb
arpl
adc
lock
mov
add
add
pop
fistpll
vcvtps2dq
je
push
ret
xor
jle
dec
mov
sub
outsl
loope
and
cmc
add
arpl
mov
loop
cmp
mov
jl
aad
sub
mov
push
push
imul
xor
ljmp
loope
jmp
enter
sbb
jnp
outsb
xchg
or
es
in
dec
ficomps
inc
adc
leave
shll
or
bound
out
adc
and
ss
jo
aad
jbe
lcall
mov
inc
mov
in
lcall
mov
jo
xchg
xor
mov
or
lcall
pop
fs
adc
pop
pop
in
movsl
and
inc
adc
divb
dec
movsl
jmp
or
or
into
dec
cmp
rorb
or
push
into
faddp
mov
scas
std
cmc
jb
xchg
cmp
lods
mov
in
test
gs
xor
ds
xchg
sti
ja
inc
loopne
es
push
jp
sub
cltd
or
add
cmp
scas
cltd
pop
stc
lock
or
repnz
mov
jge
aad
lock
xchg
adc
jmp
pop
ficoms
leave
jb
jg
pop
clc
sbb
and
clc
add
pusha
das
and
fsubrs
imul
add
and
lret
and
mov
lret
test
and
cli
sbb
in
cmp
and
fcoml
mov
dec
rcll
out
sbb
aaa
and
dec
rclb
pop
mov
sbb
lock
mov
pop
scas
cmp
mov
push
push
pop
outsb
or
icebp
adc
movsl
test
sarl
lret
cs
xor
aaa
push
mov
jge
into
push
loope
add
lds
shr
cwtl
pop
leave
sub
cmp
pop
xchg
orl
rol
mov
xchg
ds
iret
mov
sub
je
scas
cli
mov
cld
sbb
mulps
out
arpl
add
xor
pop
mov
dec
inc
stos
iret
adc
mov
push
inc
push
add
int3
and
xchg
imul
aad
add
test
cs
inc
lods
cmp
push
ds
or
push
jg
xor
jecxz
and
popa
xchg
mov
xor
hlt
xchg
cmpsb
or
fistpll
insb
fisttpl
faddl
pop
sub
pusha
adc
dec
dec
add
sahf
dec
hlt
sbb
or
sub
sbb
pop
int3
inc
and
push
and
jmp
or
jo
iret
ret
ljmp
add
jg
mulb
pusha
jae
mov
and
lahf
arpl
cli
fsubrl
xchg
imull
lret
leave
pop
inc
outsl
inc
pushf
popf
cmpb
es
adcl
jne
lods
pop
es
adc
movsl
repnz
enter
xor
test
fisubrs
add
jo
out
jo
mov
call
and
sub
lahf
in
pop
mov
cmp
aas
mov
xlat
xchg
jns
fdivs
push
mov
test
push
mov
jmp
and
into
adc
mov
in
nop
sti
sub
inc
cmp
lds
sub
jbe
fcmovnu
lods
pop
nop
push
cmp
or
sub
int
cmp
iret
addr16
jge
xchg
aad
push
xor
aaa
imul
std
lret
movsb
adc
xor
xor
icebp
inc
cwtl
mov
dec
sub
xchg
popa
xor
dec
in
mov
scas
sbb
push
lods
addr16
mov
and
nop
ja
arpl
mov
or
insb
inc
push
or
push
je
lods
mov
sbb
mov
sbb
adc
stc
push
mov
icebp
das
test
push
scas
ret
daa
jae
mov
imul
sbb
pushf
mov
add
stos
inc
cs
divb
cs
and
out
and
lret
mov
fmul
push
aam
lcall
push
sarl
push
xchg
pusha
ret
clc
scas
adc
cltd
mov
mov
js
lret
dec
jmp
mov
mov
test
ret
pop
gs
les
fcoml
mov
jns
cmp
mov
fidivl
scas
cmpsb
mov
xlat
pop
dec
pop
pushf
popa
loop
fs
sbb
out
lods
mov
adc
pusha
mov
dec
icebp
cmp
mov
or
xchg
cmp
xchg
loop
sub
mov
lcall
add
movsl
aaa
shll
loop
jmp
sub
xchg
or
dec
iret
pop
gs
cltd
dec
mov
movsb
les
and
shl
adc
in
outsl
xchg
pop
movsl
mov
dec
inc
clc
ljmp
cmp
pop
repz
sub
icebp
dec
xchg
movsb
mov
loop
lea
popf
pop
popa
dec
push
jbe
jl
pusha
data16
push
mov
pop
adc
jb
inc
xchg
xor
clc
or
jmp
xchg
push
sub
lds
mov
mov
sub
push
scas
mov
inc
data16
push
mov
mov
sub
fs
adc
lock
nop
cmp
add
les
fcomi
test
rclb
mov
mov
pop
xchg
lret
push
adc
adcl
and
or
lret
testl
cvtps2pd
pop
rcll
test
and
test
pushf
jl
ja
mov
cltd
fstl
insb
iret
sub
test
mov
cmpb
push
test
xchg
inc
push
sbb
mov
adc
cmc
xor
ret
and
popa
nop
sbb
leave
dec
sahf
mov
sbb
add
in
jnp
or
mov
xor
lret
add
push
or
jg
call
stos
sub
mov
pop
add
cmp
mov
hlt
fs
out
inc
out
cmp
arpl
mov
lea
out
dec
mov
cmpsl
movsb
adc
dec
hlt
push
pop
mov
lahf
out
cmp
outsb
cmp
xor
inc
cmc
insb
std
or
std
inc
insb
dec
jno
and
inc
xor
pop
jnp
les
pusha
movsl
sbb
shlb
sbb
repnz
push
jbe
sbbb
gs
enter
ljmp
mov
adc
lret
add
dec
add
add
jb
sahf
jg
lea
lret
fsubrl
or
sub
adc
outsl
cmp
ret
xor
cmp
shll
inc
out
mov
mov
ss
dec
or
loope
pop
pusha
and
cmp
push
jns
sub
loop
pushf
sub
pop
sub
push
xchg
mov
clc
cmpsl
or
rcrb
ss
push
xlat
cmp
mov
push
mov
addr16
pushf
mov
fiadds
pushf
mov
xor
std
adc
mov
lock
mov
test
fisubrs
test
insb
jmp
test
inc
mov
cmp
jecxz
aas
mov
mov
add
xor
xchg
inc
xchg
fmull
and
sub
or
cmp
shlb
filds
enter
das
jge
xchg
adc
sub
scas
fisubrl
mov
xchg
and
repz
or
add
xor
mov
call
addl
outsb
scas
aas
sbb
int3
fdivrs
inc
jae
rorl
in
jmp
fisubrs
roll
pop
jg
lret
repnz
xor
mov
fistpll
fs
cmpsb
sti
adc
out
sub
mov
adc
or
out
mov
hlt
inc
in
sbb
sub
jecxz
lahf
jecxz
es
xchg
pop
loope
adc
clc
xor
aad
pop
xor
inc
cltd
adc
adc
push
loopne
out
ficompl
insb
or
sbb
sub
addb
int3
sbb
in
out
je
adc
arpl
stos
dec
movsl
jge
es
fidivrl
fmul
push
repnz
or
out
xchg
xchg
mov
repnz
idivl
lock
dec
or
fnstcw
mov
sti
inc
daa
push
and
cmpl
cmp
stos
or
mov
shrb
add
and
adc
mov
aas
rcrl
jle,pt
sub
mov
cmp
inc
jp
push
mov
shll
mov
pop
and
cli
roll
sti
pop
push
jb
adc
add
stc
and
fcomps
add
xchg
jmp
pop
and
lds
push
test
scas
inc
pop
mov
jl
sub
pop
mov
les
sbb
stos
ds
mov
insb
insl
jnp
xchg
mov
xlat
ret
mov
or
loop
repz
fidivl
sbb
sub
enter
popf
xchg
inc
jnp
in
add
shlb
outsb
cmc
int
rcr
lcall
inc
add
xchg
movsl
ja
cmpsl
cmpsl
adc
shrb
push
mov
ret
arpl
pop
shl
pop
push
out
lods
jb
push
stos
lahf
jg
xchg
jp
mov
pop
rcrl
out
mov
jmp
xchg
outsb
sub
in
in
scas
fcmovnbe
push
shll
dec
add
adc
iret
repnz
leave
inc
mov
imul
inc
negb
test
mov
out
jmp
fdiv
ret
xor
shl
jns
cmp
inc
pushf
mov
push
cmp
sbb
leave
jmp
sub
es
inc
mov
or
jmp
push
aam
loope
cmp
xchg
cmpl
add
or
sub
shlb
xor
into
sub
pop
cmp
add
js
lods
xchg
xchg
das
scas
out
sub
shr
aas
pusha
push
push
fwait
stos
jle
pop
lret
pop
pop
or
js
or
adc
not
aam
jb
mov
add
lds
cmp
xor
mov
outsl
sahf
jge
imulb
jbe
and
out
mov
hlt
ficompl
xor
filds
mov
aas
ret
xor
aad
or
xor
or
pusha
gs
popf
loope
xchg
sub
sbb
in
and
test
sbb
ffreep
push
and
xchg
outsb
enter
fs
dec
jp
adc
mov
mov
outsb
loop,pn
lret
jmp
repnz
add
stos
inc
sub
xor
int
sarl
push
and
sub
cmp
push
jo
inc
int
add
xchg
jbe
xor
push
sbb
aam
mov
addl
mov
cltd
cwtl
out
shlb
fisttpll
stos
daa
add
mov
or
mov
mov
fisttpll
mov
mov
mov
mov
aaa
ljmp
inc
in
sahf
pushf
pop
int
mov
test
cmp
add
idivl
mov
sbbb
popa
decl
mov
out
test
insl
fldlg2
mov
dec
xchg
adc
aas
adc
loop
insl
enter
inc
or
jno
xchg
jge
pop
dec
add
hlt
jp
popa
inc
repnz
pop
cltd
pop
in
push
mov
add
mov
mov
sbb
mov
or
scas
cmp
mov
clc
pop
pop
lcall
xlat
push
pop
or
sbb
jle
leave
jecxz
and
push
adc
clc
pop
addr16
xor
scas
and
xchg
loop
cmc
aas
jg
inc
jmp
aas
and
xlat
push
sbb
in
pop
mov
addl
std
out
shlb
push
insl
test
jae
cmpsb
int3
and
xchg
in
mov
pop
clc
mov
addr16
lods
jl
sub
sbb
pusha
push
sbb
in
jle
jmp
ret
xchg
int3
outsb
in
push
out
jno
frstor
cmpsb
inc
cmp
cmp
imull
fldt
ror
adc
loop
mov
lds
push
push
lds
addl
add
lret
sar
mov
ds
mov
xchg
pusha
loope
movsb
std
jp
sahf
test
ljmp
mov
fnstenv
pop
push
roll
add
ds
adc
mov
jg
mov
xchg
int
loop
notb
inc
nop
rol
dec
cli
gs
adc
xchg
mov
dec
insl
push
pop
in
sub
mov
jp
add
mov
test
dec
mov
jmp
push
jbe
fmuls
pop
or
fmull
cli
inc
lcall
push
jo
hlt
les
mov
push
xor
inc
idivl
scas
xor
push
push
mov
pop
idiv
mov
insb
dec
xor
adc
sbb
test
sbb
pop
mov
mov
push
and
in
stos
mov
jmp
insb
aas
mov
out
in
insl
inc
or
adc
cmp
shrl
fcmovnbe
imul
loop
fsubl
rcl
cmp
lret
adc
jmp
cmc
push
mov
in
add
iret
push
or
mov
dec
ja
sub
popf
jb
mov
in
jbe
ret
in
inc
push
sub
jb
push
aas
imul
adc
loopne
mov
cwtl
push
cmp
cli
sbbb
adc
in
adc
mov
sbb
cmpsb
ficoms
popf
sti
cmc
dec
cmp
pop
mov
inc
into
es
andb
lcall
test
mov
sbb
loopne
daa
jno
fcomps
stos
xor
adc
cmc
adc
pop
cmp
and
dec
test
mov
cs
stos
mov
enter
inc
add
xor
andl
cmp
push
mov
ret
mov
cmpsb
stos
xor
ret
mov
sbb
aas
cmp
in
sub
add
sub
sub
add
fcmovu
push
mov
scas
rorb
bound
push
jp
clc
mov
pop
nop
jl
jmp
xchg
loop
imul
xor
or
sub
lods
mov
cmc
mov
popl
fucomi
ja
pop
mov
mov
mov
sbbb
leave
dec
cmpsl
xchg
inc
lahf
add
sub
sbb
push
xor
adc
pusha
pop
sub
mov
lret
insb
ss
adc
fcoml
xchg
push
rep
daa
shr
xchg
std
sti
cli
rolb
fistl
add
cmc
pop
cmp
vpunpckhdq
jne
inc
inc
lret
pop
jl
ret
mov
test
xchg
inc
pop
push
int3
das
mov
dec
das
adc
aam
lds
add
and
adc
data16
fwait
lods
ss
es
sbb
fs
adc
jmp
mov
test
xchg
pop
add
push
xchg
pop
aas
mov
fmul
mov
pop
adc
rclb
rolb
jae
idivl
lret
movsb
scas
sbb
xor
sbb
fwait
outsb
jp
dec
add
sbbl
in
ja
lock
mov
cmpsb
je
fsubs
sub
sbb
add
cltd
jb
lret
daa
lock
cld
pop
mov
xchg
xchg
movsb
xor
cwtl
cwtl
jl
mov
fldl
sbb
ret
addb
cltd
insb
call
dec
dec
jp,pn
xchg
pop
sub
cli
inc
and
jo
pop
aaa
pushf
je
addr16
xlat
sbb
xchg
iret
mov
std
push
push
repz
rolb
dec
mov
out
adc
fistl
inc
add
xchg
or
jmp
cmp
loope,pn
and
mov
push
lea
imul
push
or
pushf
push
popf
movsl
mull
push
daa
sbb
lods
cmp
dec
xchg
mov
lods
in
fnsave
loopne
xorb
lahf
cmc
sarl
inc
repz
stos
mov
inc
test
inc
push
mov
popl
mov
jno
subb
and
xor
mov
int3
lea
mov
adc
in
aad
lahf
xchg
mov
clc
push
jmp
jbe
les
mov
jno
xchg
add
jecxz
nop
push
ljmp
test
and
or
jb
dec
mov
mov
add
or
xor
push
cmc
and
sbb
push
imul
cmpsl
jp
lock
sti
pop
aaa
adc
push
movsb
std
std
pushf
dec
data16
add
dec
ficomps
xchg
jle
movsl
push
lcall
int3
je
stos
or
js
or
mov
je
bound
pop
cmpsb
in
outsb
cmp
cmove
mov
push
and
mov
daa
lahf
rclb
or
jl
stc
mov
xchg
pusha
mov
cli
imul
jnp
jne
xchg
push
incb
xor
jb
push
pop
add
push
jle
jp
xchg
pop
sarl
xor
jno
cld
dec
push
aas
xor
lds
call
clc
mov
adcl
inc
add
pop
dec
pop
mov
aas
xchg
fiaddl
addb
push
add
adc
adc
cwtl
mov
stos
popf
inc
mov
cwtl
cli
in
push
pop
push
mov
shrb
cmp
sbb
inc
mov
sbb
lahf
sahf
xchg
fnstenv
daa
cmpsb
push
out
cli
mov
imul
stos
adc
mov
fs
int3
leave
jmp
aam
pop
loop
in
test
mov
cmp
add
or
mov
cwtl
mov
mov
mov
inc
sti
xchg
push
gs
sahf
sub
sub
cld
pop
pusha
mov
and
mov
decb
je
outsb
xor
and
pop
jno
dec
movsb
test
test
fdivr
scas
loopne
sub
or
add
xchg
or
int
cmp
in
sahf
shll
jae
adc
loope
lret
mov
cmpsb
and
inc
mov
cld
ja
hlt
xchg
push
mov
lret
jmp
dec
add
pop
dec
sbb
in
lock
jg
jmp
call
sbb
dec
dec
push
jbe
xchg
mov
inc
les
pop
lea
jg
repnz
xor
aad
andl
test
pop
mov
rclb
push
cmp
cmp
pushf
stos
shlb
loop
jo
dec
aaa
push
add
push
jl
mov
popa
cltd
test
push
push
lods
add
imul
push
ret
ja
cmpsb
stos
xor
jns
in
std
adc
inc
imul
push
lcall
sbb
jne
or
push
mov
std
adc
scas
push
mov
dec
loope
rolb
fsubrl
aas
ss
pop
fists
sub
mov
sbb
enter
sbb
mov
cmp
fisubrl
je
push
push
cmpsb
and
stos
repz
jno
enter
mov
test
sbb
lcall
dec
lods
mov
add
jns
cld
mov
or
aad
mov
jecxz
cmp
xchg
stos
xchg
sub
jg
mov
sbb
dec
sub
jo
mov
and
mov
cmp
icebp
xchg
push
and
into
push
add
arpl
fbld
insb
loope
push
mov
cmpsl
cmp
xor
pop
push
xor
adc
test
popa
das
fbstp
pop
jecxz
or
mov
and
iret
cwtl
pop
xchg
fistps
jnp
mov
xchg
pop
mov
or
popa
xchg
or
sub
popa
mov
shlb
test
lea
lret
cli
nop
add
lahf
fbld
jbe
sub
cli
dec
xchg
divl
in
sbb
test
int
cld
adc
fmull
in
imul
lret
in
daa
push
js
lds
sti
dec
popa
fwait
sub
imul
stos
rorl
xchg
repnz
adc
sbb
fbld
mov
stc
in
aaa
xor
movsb
lahf
stos
jp
push
test
aaa
mov
aam
daa
pop
or
dec
add
out
or
adc
pop
jmp
sbb
inc
and
out
packuswb
mov
and
repnz
or
loop
outsl
aad
inc
cs
pop
jnp
add
sub
call
pop
add
xchg
pusha
divl
cmp
mov
std
lret
and
scas
lret
jle
popf
mov
mov
cltd
insb
hlt
inc
pop
inc
and
out
sub
mov
outsb
movsb
sbb
inc
cld
lret
scas
xor
int3
movsb
mov
jae
call
add
and
inc
test
icebp
mov
cmp
mov
mov
dec
mov
push
sub
ret
xchg
push
decb
lret
mov
jge
call
adc
aaa
out
add
mov
bound
call
or
ljmp
aam
loopne
xchg
inc
int3
mov
imul
ss
push
xor
fsubrl
imul
dec
enter
in
jno
dec
out
dec
pop
test
adc
test
xchg
mov
lret
repz
and
es
lret
rcrb
inc
loopne
xor
into
cs
mov
mov
clc
incl
inc
in
cmp
mov
dec
xor
mov
push
push
add
adc
andl
push
enter
mov
test
pop
push
mov
cmp
dec
push
add
adc
pop
into
sub
fdivrs
dec
and
jae
les
jne
dec
ja
fcom
movsb
xor
mov
loope
gs
lcall
xor
mov
movsl
js
push
sub
je
jmp
inc
shl
jne
pop
popf
add
imul
pop
cli
jbe
icebp
fsubrl
push
roll
outsl
mull
mov
mov
iret
arpl
xlat
inc
xor
daa
pusha
aas
adc
pop
fisubl
mov
push
add
xchg
mov
dec
jmp
shl
arpl
iret
mov
leave
dec
insb
cld
cs
mov
mov
xor
lret
cmc
mov
loop
mov
push
inc
subb
testl
lds
pusha
les
das
mov
lcall
jae
cltd
andb
or
enter
and
xor
aas
push
push
jge
xor
ljmp
fs
mov
scas
or
mov
mov
outsl
lods
loopne
jno
pop
pop
cltd
xchg
jp
pushf
fistps
out
push
push
js
lea
mov
sbb
pop
mov
dec
lods
mov
add
jmp
mov
fnsave
aas
out
or
ret
ss
sbb
js
push
jne
orb
xchg
dec
in
adc
repnz
mov
stc
insb
pushl
mov
std
jnp
add
cmp
dec
dec
lods
mov
movb
les
stos
repz
loopne
mov
inc
sbb
jecxz
mov
mov
sub
mov
rcl
and
inc
stc
jae
fdiv
push
push
rcr
pop
outsb
mov
and
out
mov
enter
or
mov
cmp
inc
push
addb
sub
bound
cmc
orb
scas
inc
add
and
imul
push
dec
add
inc
jne
lret
lcall
xchg
and
xchg
aaa
aad
mov
inc
and
jbe
xor
cmp
lret
jecxz
loopne
int
adc
out
aam
sub
cmpb
dec
push
or
mov
inc
cs
popf
mov
inc
in
xchg
in
mov
mov
cmpsl
inc
into
inc
jae
lahf
adc
push
imul
outsl
aaa
int
js
push
and
data16
mov
ss
xchg
mov
xchg
gs
outsl
aad
lcall
sub
lret
and
clc
mov
das
cld
in
repnz
cmc
push
mov
lods
faddp
in
outsl
lahf
xchg
and
mov
cld
imul
add
push
out
mov
aaa
fbstp
inc
loop
imul
and
out
ljmp
adc
pushl
aad
or
sbb
adc
xchg
adc
xchg
xor
xchg
mull
dec
out
mov
xchg
sbb
add
xchg
in
flds
adc
ret
insb
aaa
in
mov
adc
mov
cmpsb
xchg
push
or
inc
arpl
cwtl
dec
paddusw
push
xor
mov
pushf
outsl
imul
pop
mov
dec
sub
pusha
jg
mov
sbb
int
stos
push
pop
popa
add
push
pop
scas
mov
lahf
sub
cmc
in
xchg
adc
or
jecxz
sub
push
push
lcall
out
popa
mov
dec
scas
jne
jno
push
adc
daa
dec
test
inc
xor
jno
testl
clc
mov
add
adc
push
mov
sbb
xlat
stos
jecxz
add
jecxz
iret
cmpb
mov
jmp
cs
jne
outsb
or
rcl
pop
mov
repz
pop
mov
fsubp
cmp
hlt
push
call
dec
sbb
xor
scas
mov
and
test
leave
test
mov
stc
mov
lock
lret
ljmp
jmp
xchg
mov
shlb
push
dec
jmp
xchg
cmpsb
aaa
popf
repz
xor
test
and
test
mov
fsubrl
or
arpl
scas
mov
adc
jecxz
sarb
nop
xchg
inc
mov
fldl
or
das
mull
hlt
sub
pop
jne
and
fs
or
outsl
imul
or
mov
sbb
cmp
inc
fwait
in
add
loopne
add
sub
rclb
decl
add
imul
inc
or
add
imul
aam
or
fs
stos
add
mov
ja
mov
or
clc
bswap
push
lahf
xor
dec
push
leave
push
xor
loope
mov
les
xor
xchg
add
mov
lds
add
cmp
fimuls
sbb
enter
aad
mov
out
pop
cmp
cmp
cmp
mov
lock
adc
dec
in
call
pushf
dec
sub
jbe
std
pop
sbb
out
xchg
xor
aad
dec
cli
mov
adc
cmp
adc
sub
inc
mov
stos
jbe
aaa
dec
jmp
mov
in
clc
out
xor
add
ss
xchg
mov
mov
fs
dec
mov
cmp
lahf
xchg
push
pusha
pushf
fildl
sub
push
push
sub
int3
pop
int3
jp
xchg
push
dec
shufps
jnp
roll
xor
aam
dec
icebp
ds
jns
in
popf
sbb
js
or
lods
aaa
loop
aaa
in
xor
out
mull
in
xchg
subl
pusha
push
fwait
cmp
sbb
jmp
xchg
add
add
sti
dec
nop
cltd
and
lcall
push
mov
imul
jge
inc
or
or
mov
dec
lock
add
pop
fstcw
sub
or
xchg
and
mov
adc
mov
mov
int3
sub
sub
xlat
dec
sub
mov
xchg
mov
mov
int3
mov
mov
iret
jmp
dec
cmp
mull
xchg
aam
test
sub
int
insl
dec
mov
dec
inc
lds
mov
pop
push
jmp
sti
jecxz
out
stc
jns
jne
mov
icebp
xchg
and
sbb
testl
fs
std
jb
sub
xchg
sbb
sbb
cmp
inc
push
scas
fs
add
ret
cmp
push
je
inc
mov
test
add
cs
jno
lds
ret
cmp
loop
insl
and
inc
push
ss
rorb
cmp
repz
jb
dec
mov
xchg
cmpsb
ficoml
xchg
add
je
jmp
mov
in
jge
jne
inc
sub
push
iret
scas
nop
stos
add
popf
jo
mov
push
cmp
fidivl
dec
xor
mov
sbbl
and
inc
xor
jno
jae
decb
ss
pushf
aad
rclb
pop
jo
aas
lods
int3
orl
out
jge
add
cmpsb
or
in
fstl
fsubs
sbb
add
repz
mov
int
aas
dec
xchg
loope
pop
mov
dec
mov
test
fwait
xor
jne
xchg
cs
xchg
outsl
push
xchg
xchg
mov
mov
in
mov
push
adc
sbb
and
jg
dec
add
test
popa
jne
push
cmpb
enter
lock
leave
in
nop
es
fisubs
xchg
mov
adc
dec
insb
lret
add
mov
pop
dec
addr16
mov
fs
mov
fsubrp
pop
xchg
bound
scas
xchg
insl
lea
push
imul
into
xorb
pop
sub
rol
and
int3
insb
sub
fstp
sbb
add
fildl
dec
adc
leave
lcall
mov
mov
clc
nop
sbb
mov
test
inc
rcrl
sub
lods
out
mov
xor
outsl
aad
test
mov
icebp
mov
jae
fcom
or
out
fwait
mov
out
stos
dec
jg
imul
out
loopne
xchg
sub
adc
push
rorb
adc
lret
repz
and
xchg
ja
dec
xchg
mov
xlat
loope
push
inc
ret
or
pop
and
cmp
sub
enter
sub
jle
stos
and
addl
or
lods
sbb
daa
jle
and
dec
mov
or
pop
stos
push
xchg
clc
jp
addr16
repz
dec
mov
push
inc
push
push
or
fldt
rolb
sbb
xor
sahf
sbb
or
testl
xchg
push
dec
in
cltd
loop
sub
pushl
das
shll
scas
inc
cld
test
add
or
mov
lret
inc
jae
lea
inc
xor
xchg
cld
scas
xor
in
pop
shrl
mov
ja
cmp
dec
jno
dec
sub
lock
sbb
int3
fsubl
inc
jnp
dec
mov
cmc
les
mov
push
js
scas
and
or
in
popa
ljmp
or
mov
subb
nop
add
dec
inc
push
xchg
and
std
dec
arpl
dec
fwait
lds
shlb
xor
lods
cmp
jecxz
push
in
fists
jmp
stos
fwait
xchg
loope
mov
lcall
or
fdivr
cmp
mov
mov
test
orl
cmp
sbb
xchg
mov
xor
imul
and
and
lock
dec
lds
push
das
cmp
hlt
movsb
mov
roll
inc
in
pop
jmp
cmpsl
pop
lret
dec
jmp
mov
dec
iret
dec
add
mov
sub
mov
mov
push
jno
fs
push
loopne
push
cmpsb
add
loop
dec
leave
mov
out
xchg
mov
and
jno
push
push
cmp
jbe
sbb
push
sbb
pushf
fildl
lret
push
test
fsubp
and
xor
push
lret
mov
test
out
sbb
or
sub
rcll
aaa
rolb
stc
or
daa
push
lods
pop
cmp
stos
xorb
sub
jge
pop
or
enter
loop
pop
pop
fadds
push
repz
xchg
out
xchg
inc
and
lods
dec
mov
insb
es
sub
ja
and
sbb
jo
es
lret
sahf
add
jnp
pop
add
inc
xlat
dec
movsl
push
lret
mov
enter
xor
add
scas
mov
pop
jp
sbb
scas
inc
jecxz
inc
sub
xor
sbb
push
scas
push
cltd
rorl
test
dec
jns
sub
mov
iret
or
cld
ret
sub
lcall
test
and
lock
movsb
xchg
lock
test
xlat
jns
pop
xchg
js
imul
push
mov
jb
sbb
push
mov
daa
push
movsb
cmc
pop
mov
adc
test
lock
or
cmpsl
mov
popf
fs
mov
add
loope
testb
inc
mov
pop
cli
daa
rcrl
pop
stos
daa
mov
mov
cmp
xchg
push
int3
ja
loop
push
mov
movsl
jle
hlt
divb
inc
pop
add
out
lahf
popa
arpl
and
add
in
push
dec
popa
insl
pusha
daa
sbb
sbbb
cwtl
adc
ret
cmp
popf
mov
inc
xchg
repnz
ds
cld
jg
mov
xor
inc
jb
push
dec
xor
nop
add
lahf
mov
jno
ficomps
dec
lahf
inc
xor
cwtl
inc
call
cmpsl
popa
push
insb
fistps
fwait
mov
loopne
cs
scas
notb
ret
jne
dec
cltd
sub
rclb
mov
or
daa
adc
hlt
jmp
adcb
cmp
ljmp
push
mov
ljmp
rol
leave
lods
lock
jae
mov
les
mov
mov
adc
js
jg
mov
or
movsl
xor
cs
clc
ljmp
aas
inc
leave
aas
fistpll
jno
call
icebp
sbb
and
xchg
out
adc
dec
adc
add
cmpsl
inc
cmc
out
adc
lods
push
adc
loop
pop
sub
arpl
sub
movsl
inc
es
mov
add
or
xor
cmp
and
cmp
out
cmc
xchg
dec
push
out
repz
ds
or
imul
cmpb
pop
lock
xor
xchg
les
shrl
sub
leave
addb
sbbb
data16
icebp
mov
dec
mov
les
mov
test
xchg
cmp
pop
pop
cmpsb
imulb
xor
pop
xchg
dec
xchg
hlt
push
addr16
decl
xor
mov
inc
xchg
pop
xor
ljmp
lods
arpl
inc
mov
add
lret
pusha
repnz
and
shlb
cmp
and
mov
jle
je
out
mov
ja
dec
out
enter
fmull
xor
xor
divb
jae
nop
fwait
dec
int3
imul
and
jb
out
push
test
jle
imul
mov
fcmovu
repz
sub
xor
cmp
mov
test
rcll
mov
out
movsl
fcmove
iret
loopne
sahf
sarl
fs
and
cmpsb
pop
and
xchg
and
mov
sbb
pop
add
sbb
mov
sarb
adc
arpl
or
scas
adc
movsl
sub
push
ljmp
inc
loopne
push
mov
jb
aam
inc
fs
dec
repz
xchg
out
int
and
cmp
cwtl
lods
cmp
imul
inc
vaddpd
les
mov
nop
sbb
push
xor
fdivl
lods
dec
mov
out
mov
cmp
or
xchg
jbe
iret
scas
pop
lret
cmp
sub
and
and
aad
sub
jge
jecxz
ss
add
testb
das
sbb
sbb
push
cmpsb
and
mov
push
stos
pop
xchg
imul
xchg
imul
mov
fs
mov
rorb
lods
sarb
sub
pop
test
cmc
rcll
push
xchg
mov
push
add
ss
negl
and
pop
imul
add
add
scas
subl
push
pop
test
cli
fwait
mov
fwait
mov
mov
or
inc
das
out
and
xchg
jmp
inc
pop
in
push
incb
inc
push
pop
xchg
mov
mov
rcrb
jmp
orl
inc
push
sub
leave
xor
ficomps
imul
fnstcw
add
mov
adc
in
mov
or
test
imul
in
repz
lea
fistpl
xor
arpl
dec
add
rcrl
cmp
aad
xchg
lods
in
mov
out
mov
mov
mov
mov
mov
test
adc
inc
loopne
cmp
add
scas
jle
push
dec
inc
jno
adc
dec
or
sti
mov
cs
cmp
push
mov
cmpsb
xchg
sub
repnz
sub
cmp
out
or
mov
push
stc
pop
xchg
icebp
or
inc
lock
adc
pop
std
inc
pop
lcall
sub
pop
push
jbe
mov
clc
pop
popa
adc
insl
pop
fldenv
idivb
hlt
nop
cmp
cmp
cmp
shr
cltd
jg
call
inc
test
jnp
es
scas
test
lahf
mov
das
imul
mov
jbe
or
xor
xor
or
ret
loop
xchg
add
fsubrl
jl
mov
mov
inc
lret
sbb
mov
xchg
and
xorb
nop
repnz
mov
sub
mov
fistl
mov
mov
push
sahf
enter
lcall
jns
aas
sbb
jo
cmp
fstl
movsb
dec
xchg
pushf
jbe
and
push
negl
xchg
or
mov
sbb
pop
xor
sbb
sbb
lret
sahf
pop
call
inc
adc
pusha
lods
jmp
adc
mov
dec
int3
cmp
lcall
test
or
fimuls
xchg
test
arpl
cmp
test
add
out
adc
mov
push
push
add
jae
int
fsubl
jo
or
push
xor
add
inc
inc
shr
jb,pt
mov
lds
jp
and
clc
mov
bound
enter
bound
pop
jno
jae
jae
fistl
aad
dec
add
xchg
mov
pop
pop
cld
ljmp
inc
pop
push
dec
out
nop
xor
imull
sub
insb
lcall
lret
mov
call
out
movsl
pusha
add
loope
addr16
push
in
dec
inc
jle
sub
or
mov
dec
pop
cmp
insb
push
push
pop
fdivr
loopne
imull
out
cltd
mov
jb
pop
addl
cwtl
fstl
or
movsb
xchg
stos
ret
decb
std
sbbl
mov
in
sbb
scas
repz
mov
pushf
je
sub
inc
lret
mov
push
add
add
pop
add
lods
adc
mov
fbstp
mov
xor
mov
push
mov
sub
xor
and
jmp
test
xchg
test
mov
mov
cmp
jl
repz
in
push
in
fsubs
rol
sarl
add
mov
pop
push
popf
ror
mov
xchg
out
mov
mov
or
lock
mov
lock
jl
and
fwait
mov
xchg
pop
lods
cs
movsb
pop
pop
xor
nop
je
sbb
cld
adc
dec
mov
loope
aad
ret
inc
in
fists
push
sti
push
enter
mov
mov
cltd
in
icebp
les
lea
push
in
inc
popa
push
cmp
sbb
cmp
daa
mov
push
sub
mov
and
sub
pushf
mov
jl
inc
inc
fildl
mov
outsb
jge
rorl
cmp
jmp
aad
jle
mov
stc
sub
ja
lret
jp
mov
sarb
inc
pop
test
incb
imul
ficoml
in
ds
mov
xlat
sub
lret
xor
jb
scas
lds
xchg
inc
and
aam
lret
in
cmp
push
jle
je
jmp
jp
jnp
fdivrs
sbb
sub
adc
cmp
jl
repz
push
cmp
shl
sbb
xor
xor
xchg
push
lods
pop
pop
shrl
incb
mov
ljmp
icebp
adc
adc
sarl
out
xchg
idivb
lock
inc
lea
mov
fsts
aad
daa
push
ds
pop
push
out
in
xor
aaa
int3
mov
adc
decl
sahf
cmp
lock
push
clc
mov
rorl
jns
cmovb
in
repz
adc
lret
outsl
xchg
clc
mov
or
in
repz
divb
sbb
fwait
inc
repnz
add
punpcklbw
ja
out
sbb
cmp
sbb
adc
out
jbe
push
dec
in
in
cmpsl
mov
and
rcr
es
divb
inc
stc
fcompl
xlat
mov
push
and
sbb
add
dec
pop
jmp
cmp
cmp
pop
pop
cli
into
pop
sub
pop
fwait
orl
repnz
mov
enter
rclb
aad
push
cmp
lods
mov
movsb
ja
sub
mov
and
sbb
mov
adc
mov
add
xchg
idivl
clc
and
mov
jae
fsubrs
jb
inc
cmp
pop
rcll
inc
dec
xor
xchg
ljmp
jp
out
lcall
fsubs
fwait
mov
inc
fstps
addr16
scas
test
js
int3
rcrl
sbb
xor
lock
xchg
std
insl
cmp
sub
push
bnd
adc
lds
and
mov
or
out
push
ss
stos
fistpl
sub
sbb
cltd
sub
ret
test
or
mov
or
sbb
jo
and
sbb
sti
jmp
addr16
xor
addr16
test
jg
mov
ja
jae
push
enter
pop
into
xor
xlat
popf
adc
or
jecxz
push
scas
or
out
in
loope
and
stc
ret
push
popa
je
mov
lahf
das
mov
mov
or
inc
stos
sbb
xor
mov
jg
adc
push
xlat
sub
out
or
lret
in
dec
pop
or
mov
aam
ljmp
jmp
test
mov
hlt
lahf
pop
sub
xchg
mov
lds
cmp
jae
ret
imul
inc
pop
lahf
gs
or
out
pop
cmpsb
mov
inc
imul
je
mov
insl
jle
xor
pop
sub
add
jecxz
and
outsb
adcb
andl
add
mov
out
mov
xorps
jnp
sahf
push
and
pop
loopne
loope,pn
rolb
xor
outsl
jb
das
in
cld
subl
push
add
repz
lods
movsl
fdivs
xor
jl
lods
int
push
xlat
cmc
les
repz
test
mov
mov
xor
arpl
mov
aam
dec
mov
test
cmp
arpl
inc
inc
mov
aad
push
sub
and
or
clc
pop
mov
dec
movsl
subl
out
sub
andb
sub
ficoml
inc
push
cmpsl
adc
lcall
mov
cs
lds
push
js
sbb
xchg
mov
mov
js
lcall
mov
cld
outsl
or
push
fimuls
and
shr
je
cli
or
subb
mov
add
add
icebp
add
xor
pop
adc
lods
inc
rorl
fiaddl
ret
xchg
xchg
clc
and
mov
jb
adc
into
jg
add
insb
ss
push
push
stc
data16
pusha
cmp
push
stos
jle
test
clc
imul
shll
and
pop
pop
out
mov
fs
adc
mov
xchg
adc
and
dec
mov
jne
jle
hlt
mov
push
add
repz
push
fbstp
inc
ja
test
daa
xor
sub
inc
cmp
addl
rclb
push
cli
push
jmp
xchg
rclb
mov
mov
in
dec
mov
loop
andb
jb
xorl
lret
push
push
pop
cmpsb
out
mul
push
cmp
xchg
test
jp
fucom
mov
js
clc
mov
jle
iret
pop
rorl
jnp
xlat
push
std
loope
hlt
and
mov
pavgb
rcrb
xor
popf
mov
jp
fnstcw
clc
add
add
shlb
xlat
adc
mov
lret
xor
andb
fstl
test
sarl
lcall
out
aaa
inc
jp
pop
shl
mov
pop
pop
dec
adc
and
out
fidivrs
sbb
daa
mov
int
or
mov
push
mov
inc
sbbl
je
push
cmc
and
das
shrl
add
xchg
cmp
dec
jb
jge
mov
popa
mov
ss
cmp
pop
cld
in
dec
pop
jge
jbe
dec
sub
mov
mov
mov
jo
mov
les
mov
and
xor
test
inc
popa
lods
mov
cmp
fimull
add
imul
fistps
add
mov
dec
mov
stos
xor
nop
and
clc
adc
lock
and
lahf
sub
in
xor
repz
out
repnz
inc
xor
nop
jne
out
sarb
mov
mov
jbe
sub
pop
shlb
pusha
dec
xor
sarb
cwtl
fisubrs
cmp
push
push
jne
mov
fisubs
jo
repz
push
popa
cmpsl
fidivrl
call
pushf
dec
adc
pushf
repnz
repz
jne
jo
jg
test
outsl
leave
fnstcw
sub
add
or
mov
test
mov
std
fists
pop
repnz
call
outsb
inc
jecxz
push
negl
sbb
mov
repnz
divb
add
adc
jle
dec
sbb
imul
negb
jge
adc
jbe
mov
sbb
xor
imul
aas
dec
aam
dec
or
sbb
sbb
jo
jne
loope
repz
jo
sahf
stos
xor
call
ds
dec
mov
imul
push
mov
les
xchg
pop
int
stc
and
ds
bound
sub
adc
inc
inc
mov
ljmp
pop
fsts
cmp
sub
inc
xor
aam
lea
mov
pop
sbb
mov
mov
mov
cmpsb
mov
sbb
insl
jl
add
sarl
pushf
testl
mov
push
aas
jne
pop
mov
and
pusha
xor
rcr
and
xor
and
dec
sub
imulb
pop
psubw
enter
movsb
imul
dec
call
in
pop
mov
outsl
xchg
push
cmpsl
mov
leave
mov
jb
jns
push
outsb
popf
hlt
lock
testl
cmp
fcoms
cmc
push
inc
and
hlt
cmpsl
xchg
mov
xor
ficoml
push
xsaveopt
dec
or
pop
xor
inc
std
sub
mov
or
xor
pop
cmpb
lret
inc
in
cld
repz
add
and
cmp
or
xchg
and
inc
fxch
and
mov
out
inc
inc
or
int
loop
arpl
shlb
sbb
sbb
xor
mov
sahf
xor
cmp
push
movsl
mov
jp
in
xor
adc
mov
xlat
adc
add
loop
andl
loopne
cmp
out
add
sbb
mov
daa
xchg
cmc
data16
mov
push
mov
push
cld
divb
add
dec
leave
fs
push
and
add
mov
adc
add
into
mov
push
add
lea
lods
pop
push
shll
adc
hlt
or
orl
outsb
cmpsl
sbb
ds
mov
insl
mov
inc
push
and
rorl
adc
inc
je
cmp
hlt
insb
jl
cmp
add
jmp
mov
jmp
xchg
je
ja
mov
lock
cltd
insl
mov
mov
lods
mov
add
and
outsb
sbb
cld
lahf
xlat
mov
mov
dec
sbb
pusha
pushf
insb
std
or
push
out
sub
out
lret
lcall
and
loopne
int3
add
stos
jns
cmpsb
add
push
int
repnz
out
adc
faddl
shll
jo
fimuls
scas
or
pop
push
mov
push
mov
lods
adc
add
jp
cltd
jae
dec
inc
push
jecxz
jo
sbb
mov
sbb
mov
aad
sub
aad
push
scas
xlat
inc
adc
jne
push
loop
jae
movsl
pop
push
pop
das
idivb
sub
ljmp
jo
loope
cwtl
sbb
add
jge
insl
cld
mov
idiv
xchg
mov
loopne
pop
add
mov
xchg
sarl
and
adc
add
in
cmpsl
imul
pusha
mov
idivl
push
aaa
in
cwtl
pop
push
pop
jecxz
mov
jmp
arpl
inc
stc
stos
cmpb
push
cmp
addr16
flds
ficoms
sbb
clc
xorl
xchg
je
inc
leave
xchg
shlb
mov
test
sarl
lret
sub
mov
mov
xchg
stos
cltd
dec
push
jl
pop
mov
js
pop
adc
dec
mov
xor
aad
out
sbb
jnp
fsts
jg
cmp
cmp
subl
je
sub
icebp
test
test
outsl
int
mov
pop
int
imul
das
and
daa
call
sbb
xchg
mov
adc
sbb
dec
addr16
or
push
icebp
mov
frstor
mov
arpl
pop
fwait
or
insb
movsl
inc
pushf
push
mov
mov
mov
data16
sbb
sub
pop
push
add
and
sbb
movsb
push
cmp
xchg
sbbl
dec
push
jge
sarb
push
mov
arpl
dec
cmp
push
stos
mov
mov
inc
gs
add
jmp
mov
ss
insl
es
mov
inc
inc
adc
jb
aas
subb
add
mov
mov
push
xchg
cmp
push
mov
test
inc
jecxz
cwtl
cltd
push
ds
jmp
mov
rcrl
jmp
shl
cli
cmp
repnz
mov
pop
dec
sub
jle
fdivs
cmp
lods
loope
sbb
push
adc
xlat
adc
xchg
divb
mov
aad
jne
pop
and
test
stos
push
es
orb
mov
jnp
add
or
sbb
mov
scas
sbb
rclb
ja
pop
enter
cmp
pusha
jbe
in
addr16
fisttpll
and
mov
sbb
mov
add
dec
and
int
ds
cld
and
arpl
ror
lcall
int
sub
inc
cmp
cmpsb
roll
mov
imul
push
push
in
jp
jb
mov
mov
lods
add
aaa
shlb
mov
shlb
adc
inc
ret
jge
push
fistps
pop
pusha
popa
mov
pop
xchg
jbe
outsl
or
inc
push
fdivrs
lret
nop
or
and
xor
adc
fidivrl
push
enter
loopne
xchg
test
pusha
call
and
incb
xchg
add
xchg
jl
pop
mov
in
xchg
mov
sarb
dec
xchg
xchg
mov
cltd
shrl
movsl
dec
pusha
xchg
andl
xor
jp
enter
cmp
cmpsl
jns
jmp
mov
mov
addr16
adc
loope
mov
sbb
sbb
movups
mov
jbe
mov
dec
push
orb
mov
outsl
lods
and
lret
mov
flds
xchg
nop
int
scas
lods
adc
mov
pop
mov
cmpsl
adc
pop
jo
or
js
int
scas
cmp
add
fnsave
pop
cmc
outsb
cmpb
jnp
outsl
lea
and
shl
imul
cltd
cli
nop
xor
pop
and
mov
ljmp
and
into
fs
mov
adc
push
in
fistpll
mov
xor
add
lea
cmp
mov
out
dec
test
jmp
pop
jb
push
jmp
sub
cmp
mov
dec
mov
in
xchg
mov
fadd
push
lahf
dec
cmc
loopne
scas
lea
cmc
mov
cmp
adc
mov
push
or
loopne
je
jo
fistl
sbb
ret
cmp
xchg
cli
movsb
xor
or
in
sbb
cltd
xchg
push
scas
cmpsl
js
xchg
mov
adc
pop
movsl
cs
jg
sarb
sti
push
or
stos
aam
sbb
jp
add
test
insl
push
aaa
es
pop
sub
xchg
in
mov
or
or
call
out
decb
cmp
xor
push
mov
sahf
aam
push
lds
sub
arpl
push
jns
add
mov
notb
adc
xor
loope
mov
lahf
mov
push
test
ret
pusha
notl
mov
int
out
sub
fwait
xchg
lods
dec
sarb
adc
mov
mov
push
fsubl
push
dec
ffreep
out
push
cmp
jbe
cmp
outsl
jp
es
mov
inc
aad
test
cmp
aad
add
sbb
cli
call
mov
xchg
pop
jnp
and
sahf
adc
aam
mov
and
lret
rcl
cld
mov
lds
in
cmp
gs
mov
je
popf
es
in
add
jmp
cmpsl
call
sti
xor
daa
std
insl
push
xor
clc
sub
js
xchg
fiaddl
out
insb
xchg
push
and
mov
pop
out
hlt
cmp
pop
loope
xchg
dec
cwtl
fistpll
jg
xchg
sbb
sub
jmp
and
xchg
inc
aaa
jecxz
inc
dec
sub
int
and
xchg
pop
push
lods
jp
mov
add
stos
adc
das
daa
fcomip
outsb
adc
jo
into
cli
aas
sub
and
xchg
mov
addr16
inc
jl
pusha
icebp
xor
out
cmc
sarb
adc
and
orl
lret
cmp
aas
mov
inc
push
test
pop
cmp
roll
mov
loopne
push
jge
and
jmp
inc
add
mov
jae
in
xor
or
mov
inc
mov
jnp
subb
mov
push
sbb
xchg
and
ss
mov
daa
outsl
jne
or
jne
jle
call
lretw
movsl
mov
pop
movsb
lcall
mov
jb
ret
ret
push
imul
pop
lods
es
pop
jns
and
pop
sub
adc
inc
pop
cli
xorb
sbb
cmpsb
cmp
pop
inc
push
add
fstps
sbb
test
invd
cmp
jb
data16
adc
push
push
jmp
pop
lahf
push
mov
int
out
popa
push
sbb
push
sub
cli
pop
mov
mov
inc
cmc
int3
lret
mov
mov
das
sbb
pop
jg
popa
lcall
xor
ja,pn
aas
jo
xchg
lahf
fistps
sbb
nop
pop
adc
and
out
out
call
push
jecxz
push
pushf
xchg
movsl
sti
les
mov
inc
pop
bound
sub
insb
mov
mov
xchg
lcall
je
mov
cltd
add
jl
push
lret
loope
rcl
pop
pop
adc
jmp
pop
and
shrl
mov
dec
pop
leave
mov
pop
sti
pusha
mov
mov
mov
push
sub
xchg
scas
or
arpl
cli
jl
jb
mov
xchg
fs
add
jns
out
roll
inc
pop
jne
iret
and
jns
insl
xor
fbstp
bound
std
inc
aas
je
adc
push
push
dec
int3
sbb
dec
sub
adc
es
cwtl
xchg
push
mov
outsb
insb
jg
adc
loope
mov
dec
push
xor
pop
cwtl
aaa
pop
in
cmp
das
movsb
ret
loopne
je
xchg
iret
sahf
aaa
jge
fbstp
mov
ss
lds
push
push
xor
mov
sub
icebp
lcall
stos
gs
mov
cmp
mov
jnp
push
nop
mov
sahf
push
repnz
xor
adc
shl
mov
jmp
or
adc
mov
popf
sub
subl
push
addl
mov
ret
adc
shrb
scas
lea
and
push
cmp
popa
bound
mov
adcl
cmpl
mov
ret
pop
int
fdivl
lods
pushf
dec
jns
test
out
inc
outsl
mov
fistpl
fstl
inc
call
scas
mov
sti
rol
in
iret
jno
mov
xchg
test
leave
mov
mov
sbb
lahf
test
std
cs
rorl
movsl
mov
pop
inc
xchg
jnp
xchg
mov
lods
imul
jmp
push
test
dec
in
and
daa
xor
push
push
outsl
sbb
cmpsb
mov
cmpsl
xchg
sub
xchg
orl
sub
js
mov
mov
test
inc
cli
push
arpl
je
or
mov
cli
jns
sbb
leave
dec
xor
mov
sbb
stc
inc
xchg
mov
or
jb
push
lret
movsl
out
lret
fisubrs
inc
jp
inc
push
aam
test
mov
loopne
dec
pop
cmpl
mov
sbb
mov
inc
and
or
mov
movsb
mov
xor
enter
ja
mov
lret
hlt
inc
add
out
fcomi
fdivs
mov
dec
mov
pop
test
inc
clc
int3
pop
jl
xchg
pop
jbe
push
outsl
xchg
sub
icebp
mov
mov
cmp
xchg
mov
sub
leave
fldcw
jnp
sub
test
stc
cmp
dec
sub
cli
inc
add
aad
pop
pop
les
add
or
incl
in
mov
movsb
dec
jg
ss
push
das
push
cmp
sarb
cmp
lret
push
icebp
mov
inc
mov
mulb
pop
enter
mov
or
stc
sbb
xchg
arpl
xor
fisubl
cmp
add
dec
xchg
or
aam
daa
popf
pushf
mov
xor
fucomp
or
loope
push
adc
dec
outsl
nop
jecxz
mov
xor
jmp
popa
sbb
pushf
sbb
test
mov
push
shll
dec
sahf
xchg
push
call
cmp
rorl
loopne
imul
mov
loope
lret
push
ret
test
in
int3
ljmp
jnp
sbb
push
int
or
mov
test
mov
sbb
pop
xor
dec
lret
in
std
cmpsl
fisttpll
ja
jnp
adc
lods
and
pop
andb
pusha
push
pop
pop
mov
pop
movsb
call
sub
aad
out
lcall
sub
jo
sub
push
cli
xabort
mov
sbb
push
xlat
xor
xchg
fnstcw
cmp
leave
xor
cmp
test
jle
inc
popa
std
sub
daa
jno
mov
xor
psraw
dec
mov
into
cmp
stos
iret
js
xor
scas
cmc
sub
fidivrs
ret
and
or
adc
pop
add
mov
divl
imul
cs
out
loope
pop
leave
jno
sub
int
imul
out
das
xchg
stc
je
inc
push
adc
int3
aaa
dec
cli
mov
in
sti
repz
leave
cmp
cld
loopne
inc
insb
cmp
add
add
cmp
lret
jb
outsl
in
mov
lods
imul
fstpt
mov
or
mov
inc
and
iret
xchg
imulb
ja
mov
es
or
xlat
ljmp
orl
push
fwait
cwtl
mov
lret
gs
push
jo
test
jne,pt
sub
pop
popf
pop
fwait
repnz
daa
fsubrs
fcomp
call
jp
cmp
loopne
cld
imul
push
or
jecxz
pop
dec
fcompl
add
xor
sub
inc
rclb
div
sub
mulb
in
mov
insl
cmpsl
pushf
popa
cmpl
inc
and
mov
or
pop
mov
out
push
adc
into
jo
mov
cmp
jge
jno
push
leave
insl
cmp
mov
arpl
mov
call
mov
pop
ja
pop
aam
push
sub
push
jb
scas
test
inc
cld
scas
aad
popf
int
adc
in
fisttpll
gs
sbb
sbb
shlb
and
add
scas
int
shrl
fistpll
lods
jae
fdivr
ret
mov
jo
xor
push
test
data16
xchg
test
xchg
fstpl
mov
repnz
mov
imul
jnp
bound
cltd
jecxz
scas
xorl
fildl
cmc
sub
xchg
je
mov
adc
shlb
clc
enter
jp
dec
or
cmp
mov
jl
adc
pop
xor
in
lds
pop
decb
sub
loope
scas
aaa
sub
int
jae
addb
cltd
add
lock
xor
stos
sbb
aaa
rcll
inc
ret
and
add
mov
jle
fisubrl
add
pop
call
cmp
test
sbb
lods
fistpl
pop
sbb
xor
dec
aas
pop
dec
inc
addr16
mov
pop
testb
cmc
imul
xchg
iret
mov
cwtl
or
adc
sub
mov
les
sti
sbb
or
cli
push
jae
lea
or
and
dec
test
std
or
xchg
cltd
adc
mov
pop
dec
cmc
sarl
inc
mov
out
dec
mov
cmp
push
fidivrs
ds
imul
mov
xchg
mov
dec
sbb
pop
pop
xchg
fldt
sub
es
popf
mov
xor
pusha
push
imul
negl
mov
jo
pop
dec
fnstenv
add
ds
shl
dec
mov
jo
push
lds
mov
mov
enter
icebp
cmp
mov
arpl
sbb
idivl
adcl
adc
dec
and
mov
inc
add
mov
push
push
mov
push
shlb
ret
mov
mov
in
ljmp
in
idiv
adcl
push
adc
and
inc
and
add
inc
pop
dec
movl
or
cltd
mov
frstor
and
mov
movsl
lahf
sub
cmpsb
lods
add
mov
mov
mov
mov
fdivrs
dec
sub
mov
pop
mov
je
inc
jmp
jmp
cmp
pop
pop
xchg
inc
out
xchg
sbb
lret
lods
mov
jns
mov
sbb
push
lods
ja
mov
jo
es
xchg
lahf
add
dec
cs
jnp
cmp
outsl
icebp
adc
lock
cmc
mov
cmp
test
out
xchg
test
mov
int
jp
push
pusha
ficoml
inc
jge
adc
add
jecxz
cmpsb
dec
jl
push
cwtl
jne
in
add
cmp
pop
add
or
mov
adc
fdivl
fmull
sub
subb
inc
xor
stos
dec
mov
xor
xchg
mov
dec
and
cmpsb
mov
stos
mov
aaa
cwtl
or
push
mov
adc
dec
add
into
or
in
cmpsl
pusha
imul
les
idivl
dec
daa
cltd
adc
adc
add
int3
or
dec
inc
cltd
and
mov
mov
cmpsl
sbb
lret
sbb
dec
lds
mov
add
bnd
rcl
push
and
xchg
xchg
mov
pop
mov
in
cs
adc
int
add
test
movlhps
cmp
ret
fidivl
scas
into
jge
ja
movsb
xor
cmpsb
sub
call
rcrb
fs
enter
xlat
clc
mov
out
or
int3
push
aad
push
add
out
inc
test
mov
nop
and
lcall
testb
dec
ja
aam
daa
sub
pop
mov
or
mov
dec
in
fistpl
mov
sbb
hlt
adc
shlb
pop
push
test
lret
incb
cmp
xchg
stos
mov
vcvtss2sd
inc
dec
xchg
push
push
scas
or
jne
jb
test
xchg
jle
adc
mov
aaa
mov
add
mov
mov
xchg
mov
sbb
aam
fildll
or
pop
jl
or
leave
xchg
adc
mov
cmc
out
testb
mov
push
rclb
jbe
sub
jnp
ds
inc
pusha
and
ret
inc
mov
lcall
inc
jmp
shlb
test
loopne
sarb
mov
sub
data16
pop
inc
in
or
jnp
sbb
jp
int
dec
push
mov
dec
out
pop
pushl
xchg
cmc
int
fsubrs
push
pop
movsl
dec
in
push
or
push
cmp
aad
clc
push
cmpsb
sbb
imul
loope
add
cwtl
push
test
and
push
pop
fsubrp
out
clc
testl
mov
movsb
push
inc
out
sub
out
insl
mov
aas
push
or
jns
mov
cmp
insl
cmpsl
les
adc
xlat
sti
outsl
lahf
aad
pop
inc
jbe
push
cmpsb
outsb
es
push
icebp
pop
testb
pushf
mov
jno
cli
sbb
mov
and
sbb
mov
mov
xor
mov
ffree
jnp
jp
pop
mov
cmp
xchg
cwtl
int3
pop
leave
out
dec
push
sub
add
enter
aaa
mov
adc
clc
lods
test
pop
mov
loop
push
in
lock
mov
add
dec
loopne
scas
daa
xor
sbb
adc
outsb
inc
and
test
cwtl
loope
mov
lret
cmp
addr16
shll
push
std
std
adc
data16
xor
iret
in
xlat
jbe
imul
mov
lret
sub
adc
mov
in
lahf
push
and
push
sbb
xchg
aad
push
test
sbb
jne,pn
push
lea
shll
jp
out
leave
out
push
add
outsl
int3
daa
ds
repz
loop
int3
jo
outsl
push
fdivrl
test
stos
xchg
xor
sbb
loopne
jae
int3
insl
call
mov
fs
rcr
mov
xchg
ret
adc
sbb
mov
push
int3
stos
repnz
sbb
lods
hlt
mov
scas
mov
or
jg
sub
ljmp
fsubrs
sti
mov
xor
or
xchg
das
stos
push
cmpsl
dec
xchg
arpl
sbb
stos
mov
sbb
fsubs
test
sarl
adcl
gs
pop
aaa
xchg
clc
lods
es
in
loopne
cmp
adc
xlat
sub
dec
push
shlb
fidivs
lds
sub
hlt
mov
xchg
inc
sub
hlt
jns
data16
mov
mov
xchg
fs
inc
repnz
xchg
push
push
cltd
mov
les
mov
jmp
nop
ljmp
push
jecxz
add
lods
xor
mov
repnz
pushl
push
jo
sub
push
fs
xlat
jge
cwtl
jge
shlb
addb
add
mov
dec
stos
dec
and
repnz
repnz
out
jb
jb
shll
dec
mov
into
mov
jle
repz
sub
inc
jnp
adc
stc
orl
add
cmp
adc
add
inc
rol
inc
outsb
and
fisttpl
dec
jae
stos
loope
test
mov
xchg
sbb
fsts
mov
mov
sbb
sar
aaa
imul
push
dec
shr
push
ljmp
dec
popf
mov
add
xchg
mov
cld
or
jmp
imul
push
xor
cmp
pop
xlat
mov
js
dec
js
sub
mov
mov
add
loop
lock
imul
ret
xor
nop
cmp
jno
and
pop
mov
inc
aad
sbb
movsb
mov
add
inc
push
pop
cmp
aas
xchg
dec
popa
scas
ja
mov
sub
ret
sub
mov
pop
dec
testl
mov
and
jno
mov
int
imul
jmp
and
je
clc
lds
scas
xchg
pop
inc
add
pushf
ret
call
clc
inc
cmpsl
jp
jl
arpl
mov
ret
mov
cld
fs
and
jae
jp
mov
aad
sub
inc
scas
dec
shrl
jne
pop
mov
into
addr16
js
cmc
call
das
ja
mov
lret
hlt
xor
cs
mov
lods
add
loope
and
dec
or
push
sarb
je
jmp
inc
ret
pop
adc
subl
out
call
mov
add
lahf
mov
int
enter
push
add
hlt
jnp
mov
mov
sub
xor
pop
mov
push
mov
gs
idiv
and
fldenv
enter
mov
lcall
ret
insl
rorl
xor
pushf
dec
jg
aaa
jp
mov
push
dec
add
add
mov
stc
xchg
xor
sti
or
or
push
jmp
mov
fs
cmp
adc
sbbl
and
int
and
sti
test
dec
dec
fistpll
cmp
or
hlt
popa
and
icebp
cwtl
jns
jecxz
or
sub
out
cmp
bound
addb
sti
test
mov
sub
arpl
imul
ret
shlb
mov
out
jae
sub
push
repnz
lret
mov
ljmp
shrb
movsl
lahf
xchg
call
or
mov
add
and
xor
xchg
or
jg
adc
inc
out
add
out
out
incl
sub
cmp
mov
xchg
dec
je
lea
ret
in
insl
push
gs
rolb
popf
out
mov
jmp
adc
imul
cmp
lods
and
scas
inc
dec
sub
pop
cmc
pop
mov
sbb
sbb
dec
jae
mov
xor
or
pop
mov
in
nop
mov
lods
jmp
int3
pushl
in
subb
mov
cmpsl
pop
js
push
mov
repnz
dec
imul
sahf
push
push
pop
cmp
sbb
push
loope
mov
inc
pop
mov
adc
xor
loope
and
pop
loop
add
fildl
pop
das
xchg
mov
adc
dec
and
subb
sbb
mov
jbe
mov
sub
mov
data16
andl
movsb
dec
dec
faddl
std
outsl
ds
xchg
mov
jle
push
inc
mov
push
adc
out
add
mov
je
call
mov
mov
imul
dec
popa
push
xor
stos
fldl
xor
in
pop
scas
adc
or
sub
fcomps
or
mov
add
or
pushf
faddl
out
push
xchg
jae
cwtl
dec
adc
sbb
cmp
mov
sub
inc
out
cmpsl
adc
das
mov
add
or
addr16
mov
fimuls
xor
xchg
sbb
xchg
pop
out
std
inc
jne
lods
out
pop
mov
mov
int
pop
mov
movsl
adc
test
aaa
push
test
cmpsl
and
mov
mov
sub
xchg
cmp
cmp
xchg
insb
cmp
xor
push
and
adc
xor
mov
out
xor
dec
mov
out
adc
bound
in
xorb
mov
sbb
stos
bound
imul
int3
sub
mov
stc
or
sbb
and
scas
jbe
dec
xor
cs
push
and
jno
pop
bound
leave
pop
jae
shlb
mov
or
push
lret
and
mov
mov
sub
sbb
push
cmp
add
and
aaa
adc
es
or
out
adcb
ret
pop
inc
mov
jae
aas
xlat
repnz
sub
fldenv
xor
pop
int3
dec
cmp
leave
sbb
pop
call
sbb
or
data16
imul
jne
sub
sub
ret
mov
cmp
cmpsb
xchg
inc
inc
jmp
sar
stos
stos
or
in
pop
fmuls
add
inc
pop
sbb
dec
push
cmpsl
mov
cld
dec
dec
dec
insl
dec
scas
cwtl
mov
pop
fwait
mov
in
sbb
pop
das
mov
popf
fmull
imul
jl
inc
push
add
ret
sub
mov
cmp
inc
jo
ja
dec
cmp
dec
mov
aad
jne
movsl
jne
mov
adc
pop
push
jno
mov
mov
aad
add
fs
cli
push
sub
adc
adc
cltd
sub
cmp
mov
movsb
push
and
in
cld
cld
enter
or
jle
call
out
jo
jne
arpl
repz
or
mov
mov
add
and
push
add
or
out
fwait
xchg
lods
dec
xor
adc
into
ds
mov
push
or
adc
das
leave
fnstcw
cmp
stos
xchg
inc
stos
pop
xchg
cmp
xor
ljmp
or
jno
push
loope
mov
cmp
je
outsl
jecxz
popf
idivl
xor
popa
jg
cltd
pushf
sti
cs
jns
mov
mov
add
movaps
mov
mov
sbb
fcoms
test
jb
cmp
clts
mov
scas
sbb
pop
jl
mov
cmc
nop
and
add
sbb
xchg
ljmp
pop
pop
xchg
pop
mov
xor
roll
and
cmpsl
aad
in
cmp
mov
lods
xor
bound
push
sarb
mov
and
bsr
sbb
xchg
ljmp
loope
outsb
mov
mov
adc
shlb
ljmp
notb
fists
mov
hlt
lret
adc
shl
aad
lcall
sbb
shll
push
xchg
ret
lds
add
sub
push
addl
cs
std
xchg
mov
dec
cs
adc
xor
mov
pop
jmp
std
lahf
pusha
bound
ds
pusha
sahf
fs
pushf
stos
aam
rcll
adc
pushf
lds
adc
mov
push
push
adc
sub
fsts
lds
adc
dec
repz
mov
and
in
xor
inc
movsl
mov
das
pop
lods
js
in
movsb
pop
test
shlb
jecxz
in
and
loop
enter
addr16
dec
fsubl
into
push
scas
std
push
push
in
mov
sub
std
adc
and
ja
cli
sbb
leave
push
push
ja
lds
or
push
ds
fists
xor
inc
test
lret
dec
lcall
testl
clc
dec
scas
push
cmc
and
or
jne
iret
mov
sbb
or
sbb
data16
andb
push
push
mov
xor
dec
stos
aas
xchg
imul
cmpsl
stos
pop
sbb
push
sub
mov
and
inc
call
xor
jae
push
dec
cmpsb
sub
cmp
pushf
cmp
push
fcoml
mov
rcr
int
loope
in
xor
pop
jmp
popf
dec
rol
sarb
mov
adc
leave
movsb
mov
dec
mov
lea
sbb
cmp
xor
fcompl
test
stos
jecxz
fcmove
xchg
xchg
insl
leave
mov
fists
add
mov
cltd
aam
bswap
movsb
loope
ds
fmul
sub
push
xchg
cs
repz
leave
add
aad
sahf
xor
xlat
inc
push
add
sbb
adc
xor
cmp
pop
xchg
cwtl
jnp
dec
leave
pop
mov
aad
fisubs
and
add
imul
push
pop
pop
frstor
inc
jo
push
test
cmp
xor
lcall
icebp
lods
xchg
dec
cld
cmp
jb
xor
arpl
popf
push
sahf
cmpl
shrl
sub
mov
ret
jno
cld
pop
pusha
or
and
cmp
rorb
imul
mov
mov
dec
xor
xchg
sbbl
mov
or
dec
mov
stc
loope
in
call
fsts
mov
out
movq
jmp
push
mov
ret
fstpt
sub
lahf
xchg
shr
and
mov
xchg
inc
push
je
fmuls
ds
rcll
sbb
stos
mov
xchg
aam
xchg
scas
push
into
jmp
or
inc
pop
cs
push
pop
or
mov
popa
mov
add
inc
in
test
xchg
movsb
shrb
cmp
push
lea
pop
mov
adc
adc
aam
mov
test
jg
mov
frstor
push
loop
or
jo
xor
mov
mov
inc
rorb
ljmp
movsl
inc
mov
into
mov
push
movsl
mov
fisttpl
ljmp
pop
jp
loope
aaa
lret
inc
sub
sahf
push
daa
jno
stos
jecxz
mov
ret
pop
push
bound
dec
sbbb
cmp
cmp
jb
ds
repnz
loope
leave
sti
dec
ljmp
test
pop
inc
hlt
pusha
in
push
testb
jge
inc
loopne
sbb
and
cmp
adc
ds
popa
repz
jnp
adc
sbb
push
pop
mov
mov
push
loop
ror
loopne
dec
pop
jp
xchg
dec
cmc
xchg
xchg
mov
mov
add
push
inc
mov
mov
ret
mov
repz
push
jno
mov
out
jno
push
ret
leave
hlt
mov
test
dec
mov
or
and
fcoml
mov
andl
stos
jecxz
cmp
repz
pop
mov
push
movsb
adc
pop
add
aas
in
js
sbb
imull
mov
push
cmp
inc
and
js
negl
xor
xchg
cmc
pop
scas
fsubp
in
sub
stc
pop
pushf
lds
inc
test
inc
or
in
loopne
into
pop
arpl
sbbb
sub
test
cmpsb
imul
jg
movsl
shrl
cwtl
push
cmp
mov
and
inc
mov
and
cld
xchg
pop
shll
inc
inc
mov
jns
ljmp
jne
jl
sub
lods
mov
out
call
mov
shl
push
stos
mov
rcr
clc
sbb
in
test
push
mov
push
mov
xor
test
push
data16
adc
insl
out
scas
sti
push
into
cli
sub
fldenv
pop
ret
mov
out
ficoml
jbe
xor
jmp
ffree
dec
mov
and
jae
icebp
fidivl
jnp
stos
cltd
jmp
out
inc
pop
mov
mov
mov
push
cli
mov
xor
adc
jno
dec
sbb
in
jo
jge
pop
or
lea
ds
pop
into
adc
cli
mov
int3
out
imul
ja
fisttps
js
aas
sub
xchg
arpl
adc
sbb
fbstp
addr16
fldenv
leave
xchg
and
ljmp
mov
je
inc
fs
sti
testb
stc
mov
push
sbb
in
mov
int
pop
dec
sub
in
fbld
std
adc
inc
insb
xor
mov
cltd
pop
inc
cli
nop
pusha
push
inc
mov
inc
and
mov
add
sbb
cmp
sbb
push
mov
outsl
in
fs
int3
sbb
fxch
jecxz
dec
subl
pop
or
lea
jl
fldt
cli
jmp
jle
dec
iret
bnd
add
inc
pop
lahf
mov
sbb
nop
ret
and
lock
jmp
dec
sub
sub
shlb
pusha
mov
mov
in
outsb
dec
push
lods
lods
mov
push
pushf
leave
adc
mov
popa
push
shll
xchg
rorl
sub
adc
sti
mov
aaa
loopne
cmp
pop
mov
pop
inc
jb
ret
fwait
test
xchg
pop
int3
gs
mov
push
dec
sarl
jns
or
ret
push
push
test
pop
jb
mov
push
shl
movsl
aaa
rcl
aad
xchg
out
rcrb
call
lods
lods
pop
out
repnz
mov
xor
mov
add
dec
push
fcoml
scas
movsb
xchg
fwait
or
mov
xchg
mov
cmpsl
inc
mov
test
loope
push
mov
mov
inc
jo
push
mov
lahf
and
test
dec
add
and
hlt
mov
dec
jge
shld
mov
stos
daa
xchg
cmp
mov
fs
or
out
add
xlat
js
enter
addr16
xor
add
in
movsb
pop
mov
xchg
sub
lret
or
aad
lea
roll
arpl
daa
cmpsl
xor
test
and
hlt
mov
jns
imul
fisubrs
dec
jnp
xlat
out
xor
jg
int
test
sub
nop
iret
inc
movsb
xor
pop
shlb
dec
xor
out
pop
sar
aad
push
mov
sbb
test
adc
in
jbe
cmp
ret
fwait
sbb
into
jno
ror
repz
xchg
testl
jnp
movsb
outsb
mov
roll
testb
movsl
or
das
cmp
xchg
and
mov
int3
addr16
xchg
imul
clc
leave
adc
movb
stos
hlt
cmpsb
lds
xchg
dec
testb
mov
repz
inc
cli
cmpsb
fs
loope
loope
iret
push
filds
and
push
stos
sarl
mov
or
repnz
adc
into
lods
call
sti
inc
out
and
hlt
push
insl
mov
fadd
push
jb
mov
push
xchg
pop
xchg
cmpb
sbb
mov
push
in
mov
mov
lods
adc
and
adc
mov
inc
mov
jl
mov
cmp
mov
dec
add
lds
xor
popf
adc
and
fdivrs
icebp
mov
pop
adc
in
decl
gs
fsubrl
lods
test
loopne
lock
hlt
mov
out
push
gs
lcall
sarl
arpl
aam
jo
cs
cmp
sarl
sub
lahf
mov
adc
rclb
pop
lahf
cmp
adc
test
rcr
jns
sarl
jno
jnp
clc
shll
cmpsl
adc
lods
js
xchg
mov
mov
mov
sbb
adc
test
sahf
int3
cli
push
loop
sub
int3
or
in
imul
arpl
loope
int
scas
and
sbb
xchg
faddl
push
shl
loopne
adc
int
sti
xchg
mov
loop
pop
scas
jno
mov
jb
js
hlt
mov
inc
mov
pop
cld
xchg
inc
adc
add
adc
push
sti
rclb
loopne
push
jl
lds
or
insb
test
cmp
js
pop
sbb
test
jp
ja
aad
lahf
insb
loope
fsts
sbb
mov
loope
add
sub
pop
sub
clc
cmp
scas
or
movsb
out
movsb
scas
rcll
mov
mov
xchg
fistpll
pop
lods
stc
mov
out
loop
mov
test
clc
imul
inc
pop
shl
rcrl
sbb
outsb
lahf
mov
mov
jbe
pusha
xchg
and
ss
push
inc
sub
pop
insb
imul
jl
and
add
ljmp
or
lahf
outsb
push
sub
nop
inc
aad
int3
pop
call
push
sar
add
xchg
cld
push
sarb
inc
daa
and
jle
inc
outsl
inc
test
xor
mov
and
nop
mov
outsl
sti
sbb
test
lret
pop
ret
xchg
shr
sarl
ret
lods
pop
sub
popf
sbb
adc
cmp
sub
dec
sub
dec
dec
mov
xor
inc
in
push
cmc
xlat
into
xor
push
outsb
jecxz
imul
ret
jmp
ficoml
adcb
mov
inc
mov
stos
sub
jp
xchg
stc
imul
hlt
ss
mov
mov
mov
loopne
fs
jae
pop
roll
pop
lahf
jecxz
addr16
jg
xor
mov
outsb
adcl
mov
jp
dec
cli
aaa
push
cld
inc
sbb
mov
or
pop
shlb
fldl
adc
push
test
aam
fcmovnb
sahf
sbb
mov
push
add
push
call
xchg
pop
jno
fcmove
jo
sbb
rcrl
test
xchg
add
lods
pop
sub
imulb
mov
les
mov
mov
pop
in
fs
test
pushf
test
aas
into
mov
lahf
mull
in
inc
daa
int3
sub
xlat
lcall
imul
inc
push
fwait
mov
mov
out
je
shrb
mov
mov
mov
das
xchg
shlb
das
sub
mov
jbe
push
in
xchg
aam
mov
xchg
repz
xchg
and
scas
dec
icebp
dec
mov
add
xchg
sbb
push
frstor
ja
jle
xchg
test
inc
or
mov
push
mov
inc
inc
out
std
cwtl
lcall
cld
imulb
mov
jnp
xor
repz
push
add
cmp
mov
cmc
sub
les
addr16
mov
cmp
mov
xchg
outsl
loop
xchg
dec
mull
mov
jb
jbe
xor
rclb
call
xchg
xor
and
or
jb
shll
cmp
test
xchg
bound
das
pusha
add
popf
aad
sti
sahf
jno
shrl
clc
repz
ljmp
js
es
enter
add
and
mov
scas
cmc
outsl
mov
iret
sbb
or
outsl
mov
scas
iret
movsb
adc
orl
jne
ret
inc
and
push
sub
jmp
aam
mov
sbbl
inc
rclb
mov
mov
fadd
mov
dec
sub
jno
sub
jno
nop
jns
mov
sub
cmp
sbb
mov
pop
cmovge
ljmp
popa
jp
icebp
sbb
das
stos
jecxz
sbb
sub
daa
jnp
inc
test
scas
dec
jge
push
pop
int3
and
arpl
add
sbb
pop
push
adc
insb
popf
lahf
lods
daa
popa
push
push
cld
lret
and
movl
adc
add
dec
jae
movsl
jmp
sub
jecxz
xor
xchg
arpl
ret
fidivrs
enter
cmpsb
xchg
jmp
dec
xchg
je
out
dec
jp
pop
ss
jmp
jmp
or
hlt
cmp
sub
enter
sub
xchg
rolb
mov
in
jp
and
mov
inc
mov
or
stc
fcompl
loopne
mov
pop
and
pop
mov
dec
pop
lds
jno
pusha
outsb
pop
hlt
jl
enter
ljmp
jg
ljmp
js
aaa
cmp
int3
jl
loop
out
sbb
pop
popa
rolb
dec
sub
shll
aaa
inc
cmp
mov
aad
je
data16
in
data16
adc
mov
pop
fists
sbb
stos
push
cld
xor
push
sbbl
sub
pop
jno
lea
inc
inc
inc
jl
je
lret
out
and
or
mov
test
jmp
xchg
lods
shlb
rorl
mov
mov
mov
stos
xor
sbb
aas
push
mov
outsl
mov
cld
push
test
mov
lcall
push
mov
dec
mov
push
xchg
push
rcr
mov
je
outsl
stos
adc
push
sbb
push
push
jae
out
mov
push
mov
ret
mov
jo
outsb
repz
mov
cmp
sti
lods
jno
lock
mov
dec
dec
repz
or
cmp
jmp
pop
cmp
or
cmc
fbstp
stos
dec
pushw
push
lret
in
std
insl
mov
inc
add
cmp
jb
jmp
nop
clc
xchg
cmp
incl
iret
fwait
sar
lahf
sbb
jns
mov
fildll
xchg
inc
mov
test
push
dec
jbe
stc
dec
sub
mov
mov
mov
ljmp
cmp
and
jg
push
push
add
fs
cli
adc
add
cmpsl
inc
into
fs
in
sbb
stos
shr
or
pushf
xchg
rcl
mov
mov
pop
mov
add
dec
mov
mov
sbb
rolb
repnz
sbbl
pusha
push
cmp
stc
fidivrl
push
inc
bound
mov
mov
orb
jp
inc
or
inc
stc
in
inc
pop
sub
ja
je
aad
jg
jmp
sub
movsl
mov
sub
loopne
cwtl
outsb
xchg
mov
popf
and
arpl
push
xchg
int3
call
addb
loope
dec
and
mov
push
sbb
fxch
fmull
mov
inc
aad
adc
paddusb
xor
xchg
cmp
movsl
divb
insb
repz
js
dec
out
pop
jge
or
jb
sub
sub
clc
leave
cmc
test
lcall
mov
aam
add
nop
jnp
xchg
mov
fisubrl
xchg
lods
jl
mul
mov
push
cmp
push
aaa
leave
dec
incl
mov
loop
mov
xchg
or
xchg
dec
pop
xchg
mov
jg
push
mov
xchg
mov
mov
test
scas
rcr
lods
aaa
mov
out
mov
pop
fsubrs
aaa
push
xchg
mov
mov
jne
cmc
mov
jl
push
cs
imul
and
pusha
mov
lds
daa
inc
inc
xor
in
cmp
sbb
jecxz
stos
dec
mov
out
mov
mov
jle
fmul
in
inc
xor
add
iret
fwait
lds
inc
push
jnp
xchg
pop
xor
sahf
pop
push
lret
xor
pushf
jns
pop
enter
and
enter
les
sub
dec
adc
mov
add
loope
jno
xor
mov
in
mov
add
adc
dec
push
mov
adc
mov
cltd
push
outsl
popa
dec
not
push
lock
imul
xor
jae
jae
icebp
mov
push
sbb
das
lcall
sbb
out
sbb
insb
lea
roll
cmc
mov
xchg
call
xor
in
sbb
lret
add
out
lods
xchg
add
popa
fcmove
adc
ss
push
adc
pushf
sub
adc
dec
fistl
xor
cli
sbb
test
lret
inc
enter
mov
xchg
dec
mov
mov
ja
testb
imul
xchg
push
fisttpl
xorb
sub
cltd
xor
sub
into
push
ret
sub
xchg
lods
adc
sahf
daa
inc
insl
fmul
popf
and
addr16
outsb
ffree
mov
xor
loope
ds
xchg
lahf
inc
out
addr16
xchg
filds
xchg
out
dec
gs
mov
lods
xchg
mov
mov
sub
add
mov
ja
mov
or
repnz
por
aad
fisttpl
rcrb
mov
sbbl
mov
lods
push
in
aad
push
push
xor
ret
scas
adc
pusha
int
outsl
dec
dec
jb
mov
mov
jmp
icebp
imul
sub
xchg
add
mov
add
sbb
xchg
iret
xchg
insb
add
test
jg
and
jmp
popa
mov
arpl
out
inc
sub
add
add
adc
dec
push
sti
pushf
inc
mov
and
cmc
fwait
xor
shl
pop
add
mov
test
or
xor
mov
shrl
add
pop
out
movb
aaa
clc
lea
push
mov
jno
mov
jl
imul
inc
xlat
test
sub
adc
and
in
icebp
lods
pusha
aas
xor
ss
mov
add
jo
mov
les
push
dec
sub
mov
dec
fcoms
sub
xor
mov
ds
mov
jno
sarb
sub
mov
pop
jne
jmp
decb
pop
sarb
imul
xchg
arpl
xchg
or
loopne
push
aad
lock
lods
repz
cmpsb
pop
sbb
pop
out
pop
push
lds
xor
shrb
jno
mov
mov
and
dec
subb
add
sbb
lret
enter
jg
pushf
adc
mov
xor
dec
cmp
insl
jmp
inc
or
in
invd
jge
and
fwait
decl
or
call
sbb
mov
and
mov
fisubrs
inc
xchg
clc
fdivrs
fisttpl
sarb
pop
movsl
sysexit
lods
div
mov
or
dec
pop
aaa
jge
push
repnz
jno
push
push
jp
leave
scas
jno
cmovp
xchg
xor
xchg
sbb
push
in
popf
mov
xchg
mov
rcr
mov
xchg
test
xor
and
and
mov
lock
insb
shl
lds
test
lods
icebp
adc
xchg
daa
loopne
stos
inc
push
outsb
fadd
jcxz
xchg
adc
loop
in
add
jecxz
leave
push
jp
cmpsb
pop
push
cld
je
mov
and
daa
popf
cltd
mov
push
iret
lock
mov
arpl
and
mov
cmp
pushf
mov
adc
push
insb
addl
cs
or
xorl
pusha
pusha
inc
dec
movsl
jb
pop
mov
xor
xchg
or
andl
dec
arpl
insl
mov
add
sub
mov
mov
test
stc
cmp
imul
xchg
mov
mov
adc
in
sub
push
jmp
dec
popf
enter
jmp
jo
enter
gs
mov
xchg
imul
cmp
mov
cmpsb
cwtl
pop
lea
or
ja
shr
pop
aas
loope
movsl
lods
hlt
pop
lods
jb
dec
test
sub
mov
movsb
dec
int
inc
stos
stos
sub
mov
cmpsb
das
and
mov
mov
or
orl
jg
xchg
icebp
xchg
pop
mov
push
pop
push
sub
pop
sbb
cli
sahf
pop
mov
add
pop
int3
inc
cmpsb
ljmp
sub
mov
xor
xchg
les
repnz
mov
mov
adc
in
les
jp
or
int3
dec
orb
or
adc
sbb
xchg
cld
cmp
add
leave
mov
cmp
mov
iret
mov
add
clc
call
dec
pop
cmp
pop
insl
xor
sub
and
loopne
pop
or
pusha
ret
mov
inc
dec
sub
je
push
imul
les
or
sahf
dec
push
add
inc
ficoms
fs
mov
pop
and
js
push
xchg
dec
dec
push
test
rdtsc
add
mov
ret
scas
pop
clc
xor
xchg
stos
hlt
repz
push
mov
cli
aad
clc
out
imul
cli
lea
leave
nop
sub
rorl
or
xor
in
js
aas
dec
in
xchg
addr16
pop
fsubrl
aam
mov
pop
jbe
or
xchg
mov
sbb
popf
push
xchg
imul
xchg
shrb
pushf
pusha
out
inc
mov
jp
push
movsb
lods
lock
inc
outsb
sahf
insb
and
mov
jnp
mov
in
jb
add
out
popf
iret
dec
push
es
pop
cwtl
fdivrl
fidivl
inc
lcall
cmp
not
out
xor
push
negb
and
es
jp
mov
mov
addr16
add
xor
inc
call
sub
adc
jmp
mov
add
xchg
push
add
loopw
sub
xchg
out
das
push
cli
sarb
ret
inc
mov
xor
mov
mov
ljmp
lods
dec
ss
and
fwait
movsb
out
mov
lcall
or
push
loop
fs
ror
mov
push
add
xchg
add
call
nop
xchg
aas
cmp
fsts
dec
repnz
leave
dec
adc
mov
dec
add
pop
jnp
insb
arpl
push
in
out
cld
fcmovb
mov
fidivrl
mov
and
rclb
and
sbb
and
and
cmpsl
aaa
mov
and
cmp
inc
pop
push
scas
mov
movl
ret
aam
jp
pop
cmp
fsubl
ret
and
hlt
mov
add
jg
push
std
pop
ficomps
inc
sarb
pop
sbb
xchg
movb
int
cmp
mov
in
and
push
mov
pop
cmp
push
in
fcmove
imul
jg
fstp
fldl
adc
cs
sub
jb
lret
sub
ss
mov
add
cmp
mov
mov
sub
repnz
mov
dec
jmp
pop
fiaddl
loopne
xor
imul
dec
test
and
aaa
ds
imul
pop
jecxz
mov
outsl
push
dec
mov
mov
shll
call
in
sub
mov
jp
push
xor
cmp
sarb
add
les
add
add
jle
dec
xchg
dec
mov
pop
aam
jl
cmpsb
repnz
sub
loopne
sub
push
aam
incb
into
push
insb
adc
ret
adc
inc
popf
dec
xchg
pop
cmpsl
cld
scas
adc
mov
or
imul
out
daa
or
add
fistl
sahf
js
inc
xchg
ret
cli
loope
data16
ljmp
das
cltd
lret
mov
lods
mov
aaa
lea
xchg
mov
mov
or
push
test
sub
repz
cmc
jecxz
or
sbb
int
fisttps
mov
scas
xchg
cmpsl
xchg
xchg
cltd
adc
arpl
mov
cmp
aam
pop
jle,pt
sbb
push
jae
xchg
xchg
inc
jns
std
cmpsl
xlat
push
sub
lret
push
xchg
imul
les
xchg
sbb
cmp
xchg
add
sbb
mov
sub
inc
xchg
gs
hlt
inc
sahf
push
push
ljmp
repz
jne
mov
lods
cwtl
lahf
jge
sbb
sbbb
lret
mov
das
les
dec
sub
ds
rcll
out
sar
mov
pop
cmp
or
pop
mov
cltd
ret
jecxz
sub
ret
pop
decb
mov
mov
arpl
jno
fbstp
fildll
dec
jbe
and
xchg
aam
stos
icebp
xor
inc
lahf
pop
and
ffreep
jno
jge
mov
shrb
fdivrs
mov
ror
fs
jmp
pop
cltd
push
jno
inc
into
cmpsl
ljmp
jo
mov
mov
iret
lcall
notb
int
fmul
push
dec
ret
add
shrb
mov
push
jmp
add
mov
xchg
es
mov
mov
sub
jae
into
adc
dec
dec
gs
lods
adc
adc
popa
adc
mov
dec
mov
mov
pop
imul
xor
fildll
pop
dec
jne
dec
insl
cmp
sub
push
cld
stos
jl
add
cli
push
js
vdivss
addl
jns
mov
mov
and
inc
jecxz
int
sub
dec
imul
xor
rcll
cwtl
adc
icebp
mov
sbb
sbb
or
inc
daa
jo
push
clc
sbb
pop
movsl
push
adc
inc
int3
push
in
cmpsl
jp
add
out
insb
xor
cmp
outsl
xchg
jmp
pop
leave
mov
mov
sub
out
add
pushf
ret
ret
xor
test
pop
dec
enter
lods
mov
test
imul
out
jmp
cmp
idivl
test
xchg
mov
out
pop
inc
inc
mov
push
or
cmp
fidivl
loop
cmp
pusha
xor
dec
mov
sbb
sbb
push
push
pop
scas
xchg
jp
lahf
push
sbb
inc
pop
scas
int3
inc
cmp
cmp
jnp
notb
inc
add
imul
jnp
or
addb
es
add
aad
xchg
push
test
push
sbbl
mov
test
imulb
jp
adc
iret
jl
push
movsl
and
pop
lahf
outsb
jp
pop
jne
sub
sub
adc
sbb
negl
xor
shr
fnstsw
jl
testb
icebp
arpl
mov
pop
shll
aad
and
enter
pop
add
push
pop
inc
lock
pop
cmp
fcmovu
adc
adc
cmc
test
testb
cli
jg
repnz
mov
rcr
mov
test
addr16
in
insb
lds
arpl
vpaddusw
icebp
mov
data16
scas
shrb
sbb
int
lods
ret
push
js
in
test
lahf
or
aam
pop
int
pop
push
and
sub
fwait
cltd
mov
xlat
pop
pop
mov
nop
adc
sbb
out
mov
loop
out
or
fbstp
adc
out
cld
dec
popf
repnz
pop
outsl
subl
mov
sbb
mov
addr16
dec
xor
xchg
ret
in
jns
xchg
popf
pushf
arpl
xchg
adcb
dec
push
adc
push
or
loopne
dec
xchg
push
out
fwait
add
push
int3
sbb
je
sbb
aaa
xchg
iret
loopne
sbb
push
pop
addb
and
mov
imul
jmp
push
inc
out
xchg
dec
mov
cmp
push
mov
add
scas
add
and
out
dec
addl
mov
xchg
mov
hlt
enter
inc
fnsave
scas
pop
jb
add
rcll
repnz
and
adc
pop
fwait
sub
sub
add
mov
sbb
rcrl
stc
inc
add
in
jg
popf
mov
adc
or
jp
loope
xchg
pop
out
jmp
inc
rolb
dec
ret
mov
jo
push
movzbw
mov
aam
in
sbb
and
jns
and
sbb
inc
cmp
out
push
arpl
imul
cmp
addr16
popa
adc
lahf
jecxz
pop
push
lock
rclb
aaa
adc
pop
jp
movsl
push
lcall
ss
inc
dec
pop
dec
mov
lret
sbb
shll
fwait
je
jae
loop
mov
jmp
push
icebp
or
mov
sub
ljmp
addr16
lahf
scas
mov
mov
shll
neg
cmp
scas
push
lar
mov
pushf
sub
sub
pop
sub
jo
cmp
ret
xchg
or
sbb
adc
sub
rol
xchg
cmp
stos
inc
mov
sub
mov
sahf
cmp
inc
out
sti
mov
push
std
dec
dec
sub
push
das
mov
mov
lcall
aaa
cs
rolb
sar
repnz
std
jg
sbb
imul
andl
adc
ret
das
jbe
jns
enter
in
iret
adc
xlat
dec
scas
cwtl
bound
pop
pop
jecxz
insb
mov
lret
fisttpll
mov
aam
stos
in
push
and
mov
std
sub
in
outsb
pop
xor
inc
mov
push
data16
out
jno
adc
add
icebp
flds
sbb
stos
cmp
cmc
scas
test
movsb
fs
sahf
mov
test
fbld
pop
push
in
fisttpll
out
adc
push
mov
ja
dec
aas
dec
mov
cmp
pop
xchg
mov
call
lcall
lock
and
subl
pop
xor
enter
ljmp
jo
xor
insl
mov
dec
test
sbb
mov
xchg
xlat
mov
mov
sub
mull
arpl
dec
xlat
inc
mov
shll
mov
xchg
clc
int3
jo
dec
stos
into
and
test
dec
xchg
subb
scas
xchg
ror
xor
cmp
inc
test
jp
sahf
fst
push
mov
mov
xchg
popa
jbe
outsb
mov
adc
orb
dec
cmp
jae
inc
add
jne
rolb
mov
sbb
popa
scas
icebp
loope
and
outsb
xor
push
jbe
bound
adc
inc
add
fidivs
in
xchg
js
fidivl
cmp
addr16
jno
pushf
push
das
dec
out
sti
in
int
mov
call
adc
stos
imul
mov
xchg
imul
aas
xor
addr16
imul
leave
xor
fists
aaa
jmp
jns
mov
test
mov
cld
pop
adc
add
rcrl
fiaddl
int
inc
xchg
dec
sub
lds
push
pushf
push
mull
cmp
add
loope
jne
stos
xor
mov
jge
sbb
sbb
jmp
sahf
loope
aad
int3
adc
hlt
ljmp
ffree
mov
dec
out
xor
xchg
cmp
pusha
add
loope
jbe
imul
sub
in
pushl
sti
into
pusha
inc
scas
cmc
rorb
dec
mov
sbb
fwait
cli
pop
jg
ret
mov
mov
sbb
test
sub
sbb
xchg
movsl
addr16
test
fdivr
pop
mov
sbb
jle
mov
stc
aas
icebp
movsb
adc
and
sti
inc
xchg
ljmp
cmp
mov
jnp
jae
or
cmp
pop
adc
and
sub
xor
adc
jg
cmp
mov
pop
mov
push
subb
inc
aam
pop
mov
out
cmp
adc
mov
cwtl
lcall
call
fwait
cmpsl
lods
roll
or
mov
imul
xchg
test
imul
movsl
lahf
xor
lret
gs
xchg
jmp
movb
lcall
push
mov
mov
daa
sub
or
or
dec
mov
mov
mov
bound
aam
push
test
rclb
loop
lret
fmull
and
sbb
out
push
shlb
jg
sub
pusha
adc
popf
insl
mov
jl
inc
jno
imul
es
fidivrs
insl
popf
mov
mov
fmul
fisubs
outsl
xchg
into
aaa
ss
int
dec
rcll
pop
inc
dec
fsubr
outsb
enter
push
xchg
pop
sbb
or
mov
cmp
int3
in
mov
jb
in
scas
cmp
mov
ja
cmp
jl
call
cmpsl
push
jl
mov
or
outsl
sti
xchg
cmpl
inc
xor
push
add
imul
into
divl
sub
loop
sbb
cli
test
sarl
jmp
popf
xor
or
mov
add
ja
dec
or
dec
les
into
mov
in
adc
mov
test
rolb
sub
jnp
dec
sahf
lods
cmp
div
jae
incl
inc
dec
mov
adc
lret
sbb
lods
ljmp
inc
xchg
fstl
lods
lcall
jg
xor
xchg
xor
sarb
jmp
je
subl
lret
hlt
push
cmc
dec
arpl
sub
sub
cwtl
orb
mov
loope
nop
in
jae
push
pop
sub
sub
jns
mov
shl
sbb
fimuls
sbb
xchg
scas
stos
out
jae
lahf
push
push
cld
dec
pop
push
rorb
test
stos
xchg
shlb
xchg
push
push
popa
push
lcall
mov
inc
sbb
mov
mov
pop
js
jae
jl
outsb
daa
outsb
xchg
rcll
sub
pop
dec
in
push
jb
mov
test
dec
sahf
scas
jo
mov
add
or
mov
add
stos
pop
into
addr16
adc
out
fsubs
scas
jle
mov
sbb
pop
jmp
cli
scas
or
mov
sub
ret
repz
pop
hlt
jo
cli
out
xor
dec
movsb
stc
cmpb
hlt
nop
test
xchg
add
mov
fsts
sub
add
mov
lahf
adc
sbb
mov
movl
mov
nop
jmp
fdiv
push
out
inc
stos
pop
cmp
mov
fistpl
clc
pop
sahf
repnz
jns
pusha
enter
or
mov
mov
negl
test
dec
cmp
push
imul
fnstcw
insl
jl
iret
jo
mov
sbb
movsb
pusha
push
pushf
cli
pop
add
insb
xor
lods
icebp
dec
insb
or
jp
xchg
shll
add
mov
inc
xor
inc
push
jp
in
bound
adc
ja
push
push
pop
mov
loopne
nop
push
cmp
aam
pushf
xorl
push
xor
lcall
mov
xorb
roll
lock
test
adc
rclb
test
arpl
lret
mov
xchg
inc
or
push
int
loope
pop
jecxz
dec
fyl2x
cltd
fistps
mov
inc
pop
mov
cli
adcb
inc
cmp
and
add
adc
loop
sbb
sti
or
jmp
and
fstps
and
and
mov
cmp
dec
pop
jg
jns
pop
add
mov
loopne
mov
dec
sub
inc
jmp
or
shlb
mov
cltd
sub
sarb
mov
push
add
mov
push
mov
and
mov
mov
pop
fistpl
test
pop
cmp
adc
out
or
jo
in
mov
pop
ret
sbb
sbb
dec
push
adc
mov
or
fisttpl
fcompl
xchg
sub
xor
icebp
ret
or
les
sti
pop
hlt
in
cmpsl
adc
push
repnz
push
mov
mov
push
mov
mov
push
xchg
inc
pop
and
loope
testb
movsb
cmp
jnp
mov
xor
mov
dec
or
add
fcomps
repz
sbb
std
enter
and
push
repnz
inc
sub
in
fwait
inc
pop
pop
jbe
in
subb
mov
subl
or
mov
rorl
fndisi(8087
lcall
hlt
cmp
xchg
cli
hlt
out
pop
outsl
mov
or
aas
insb
int
popa
push
ja
fs
sub
add
xchg
mov
pusha
push
hlt
scas
or
pop
lahf
cs
push
popa
inc
test
add
enter
repz
mov
dec
cmpsl
and
xchg
in
dec
insl
mov
cmp
push
scas
and
stc
jno
push
fwait
jge
mov
jmp
cmp
sbb
mov
push
mov
sbb
dec
mov
push
mov
or
mov
mov
pushf
jmp
xchg
mov
fidivrs
and
fstpl
jbe
dec
out
push
xchg
nop
jnp
xor
sbb
lods
adc
and
jae
fidivs
push
cmpsl
cmp
mov
aas
or
int
rol
xor
pop
icebp
inc
stos
xchg
jns
mov
adc
dec
xchg
push
jmp
sbbb
rcl
in
push
cmc
mov
mov
testl
hlt
faddl
pop
mov
dec
mov
adc
hlt
lock
jns
jle
imul
shll
lods
loopne
and
pushf
pop
mov
stos
outsl
add
xchg
cmp
pop
les
push
pop
add
push
inc
nop
mov
mov
xor
iret
mov
push
negl
push
or
add
and
xchg
out
mov
clc
inc
rorb
nop
ds
scas
pop
push
mov
jl
xchg
insl
ja
ret
in
pop
sub
mov
mov
ficoml
subb
enter
mov
bound
outsb
insl
in
les
sbb
into
inc
sbb
testb
mov
addr16
lret
jecxz
xchg
pop
andl
cmp
xlat
mov
cs
pop
sahf
pop
aam
in
jmp
mov
pop
xchg
pop
fcompp
xor
fs
in
add
fildl
mov
repnz
mov
push
xor
adc
jo
xchg
pusha
mov
cmp
aad
pop
mov
mov
fistl
sub
std
jle
mov
mov
xchg
aad
sub
mov
dec
outsl
outsl
stc
adc
jae
and
lret
data16
cmpsb
dec
hlt
xchg
push
jmp
fs
popf
std
dec
jg
ss
mov
jle
pusha
clc
pmuludq
adc
dec
aam
imul
jae
add
lds
pop
mov
jle
add
aas
test
out
daa
enter
dec
sub
fildl
stos
push
push
arpl
je
jge
adc
lcall
jne
out
dec
xchg
stos
xchg
cld
push
lret
inc
mov
pushf
pop
mov
add
pop
popl
xchg
cmp
mov
andb
lea
cmp
int3
fisubrs
pop
jge
mov
sub
sahf
and
cmp
pop
xor
and
lahf
aaa
les
in
je
pop
ficomps
push
aaa
dec
dec
xchg
int
and
int
out
pop
popf
outsl
xor
adc
aas
sub
lea
es
leave
mov
and
pop
dec
and
mov
test
sbbb
ljmp
aaa
hlt
rcll
cli
jb
sti
jbe
enter
scas
sbb
mov
shrl
sti
aaa
insb
dec
cmp
sub
fcmovbe
or
inc
cmp
sti
insb
jno
xor
pop
sti
ror
or
idivb
stos
sbb
int3
pop
inc
jge
bound
pop
and
test
and
mov
push
pop
or
ficoml
cmp
and
sbb
inc
jg
jns
lret
bound
das
pop
divb
jp
push
dec
divb
insl
jns
mov
ss
mov
aas
add
loop
sarl
cmpsl
push
mov
pop
leave
lods
popf
sub
or
ljmp
pop
imul
mov
inc
stos
and
add
xor
mov
int3
xor
decb
jns
fidivrs
ja
xchg
or
lea
adc
adc
push
jmp
cld
pop
mov
inc
cwtl
fdivs
xchg
push
hlt
movb
fs
dec
shlb
iret
xor
mov
fst
popf
lds
movsb
push
and
xchg
sub
add
adc
out
loopne
and
xor
stc
jb
push
ficompl
xchg
and
hlt
xor
sub
mov
jae
mov
sbb
fs
aaa
xchg
in
sarb
inc
cmp
jbe
adc
add
shlb
mov
push
xor
mov
leave
and
aas
pop
push
stos
stos
insb
pop
xchg
jmp
je
add
mov
adc
xchg
push
lock
add
fdivrs
add
mov
sti
in
and
mov
mov
gs
lret
inc
das
adcl
xor
pop
testl
mov
mov
or
xor
push
pop
addr16
test
jmp
gs
es
adc
push
xor
pop
xor
dec
jo
insl
add
and
xor
stos
add
and
mov
adc
pop
fistps
repnz
cmp
xor
mov
xchg
jo
daa
rclb
call
push
jmp
in
inc
xor
or
es
push
lret
test
push
inc
sub
imul
adc
and
mov
mov
adc
iret
enter
jae
xor
movl
mov
or
in
rolb
loopne
fwait
mov
enter
pop
mov
mov
xchg
lret
in
dec
inc
jmp
imul
pop
rcl
lret
loope
jo
jo
insl
xlat
in
adc
sti
cmp
inc
or
ret
into
call
or
cmp
popa
ds
orl
mov
xlat
xchg
js
jbe
pmuludq
sub
lahf
mov
and
mov
cs
daa
inc
bound
sahf
stos
cmc
sub
jbe
lods
jnp
insl
push
fidivrl
arpl
rep
mov
inc
call
leave
mov
inc
pop
mov
xchg
leave
and
jle
addb
ss
xor
testb
jl
test
cmpsl
fs
cld
cmpsl
ja
jmp
aam
xchg
jno
outsb
xlat
negb
cmp
sub
jno
test
cmp
adc
ret
cwtl
and
xor
sbb
adc
dec
push
cmovge
push
cmpsl
cmp
test
mov
fmul
outsl
or
mov
or
fistpl
dec
das
mov
push
leave
xor
add
jns
mov
das
pop
sbb
pop
xchg
dec
pop
lahf
repz
addr16
xor
faddl
inc
adc
fabs
push
aam
sahf
outsb
mov
or
gs
cmpl
out
or
xchg
scas
loop
int3
lds
es
int3
mov
inc
shrl
mov
fmull
pmulhuw
sbb
adc
add
cmpsl
push
adc
ficomps
pop
xor
or
jecxz
sbb
lods
mov
scas
mov
jecxz
aaa
mov
in
cmp
inc
out
sub
cmp
jmp
dec
adc
mov
nop
xor
cli
jl
aaa
add
addr16
fs
pop
movsl
inc
mov
test
lret
cmp
popa
mov
xchg
enter
iret
aas
mov
inc
add
out
xchg
lea
aam
sub
nop
sub
insl
loopne
popa
lret
mov
imul
add
sub
mov
dec
inc
adc
push
adc
push
or
lret
out
pop
push
scas
sub
jne
sub
in
push
into
or
pop
outsl
xchg
pusha
xor
daa
cmp
sub
inc
and
pop
sbb
loopne
cmp
jns
cmc
rclb
pushl
cmp
xchg
sbb
stos
mov
outsb
add
and
mov
xchg
pop
mov
xchg
jmp
dec
push
fisubrs
cmp
lahf
popa
outsl
ja
lret
adc
movb
mov
repnz
out
xor
mov
mov
and
leave
outsl
iret
movsl
adcl
mov
mov
imul
lret
cmpsb
mov
pop
and
dec
and
or
jnp
rcrb
scas
fnsave
push
push
or
fistpl
pop
mov
lcall
inc
push
cmc
cmp
mov
rorb
and
sub
xor
andl
cltd
mov
mov
mov
xor
push
sub
ret
and
jnp
sub
pop
pop
cmp
and
scas
or
xor
pop
inc
sbb
lea
add
pop
pushf
test
pop
pop
cmp
shr
jno
push
jp
int
loopne
in
popf
sbb
mov
inc
in
fsubl
fcmovne
adc
mov
rcr
and
fiaddl
and
imulb
mov
add
mov
test
imul
sti
xor
sbb
or
aam
mov
fstpt
add
outsl
lea
popl
or
int3
in
push
xchg
push
jno
outsb
xor
arpl
repnz
rorl
lahf
pop
mov
loop
jnp
std
cmpsb
call
dec
jb
pusha
punpckhwd
or
fs
mov
adc
insb
call
dec
fbstp
ss
lods
and
fcmovbe
sbb
push
xor
and
outsb
ficoml
and
or
add
js
mov
outsl
loop
push
or
adc
leave
stos
pusha
out
mov
leave
or
ja
fs
pop
adc
cmp
loope
mov
pop
out
cs
mov
xchg
push
pushf
pop
pop
dec
xchg
or
and
ss
xor
fsubrl
sbb
sbb
cs
mov
sub
scas
hlt
pushf
nopl
dec
mov
pop
or
cmc
ret
jge
mov
mov
and
pushf
das
sti
pop
aam
out
cmp
cmp
add
mov
adc
das
mov
inc
negb
dec
aam
fdivl
cmp
lret
and
loop
cld
jg
gs
cmp
imull
or
js
jo
sbb
mov
cmp
addb
pop
mov
inc
push
adc
test
jns
jns
dec
sub
mov
adc
rcll
clc
jl
jb
and
xchg
pop
xchg
inc
ljmp
stc
xor
das
push
ss
in
pop
aam
icebp
jp
repz
push
repz
xchg
pop
scas
xor
jbe
and
mov
dec
shll
enter
dec
fcmovb
and
jbe
xor
mov
mov
inc
scas
sbb
pop
xchg
mov
xchg
loop
ficompl
mov
push
scas
dec
inc
sbb
xchg
mov
sti
push
xor
inc
or
mov
mov
fucomi
scas
cmp
clc
jae
mov
shll
daa
in
popf
xor
push
push
out
inc
jae
lods
xchg
icebp
jecxz
cli
mov
nop
inc
shrl
push
mov
sbb
inc
iret
outsl
mov
dec
subb
or
rclb
lret
fs
fidivrs
jg
rcrb
jl
icebp
hlt
sti
jl
xlat
fs
mov
xor
and
adc
fdivr
call
lods
jno
mov
jae
mov
and
in
inc
jo
or
movsl
fstl
outsb
cwtl
mov
out
hlt
cmp
sbb
mov
and
sbb
incb
roll
xchg
push
cli
inc
push
lods
clc
stos
pop
mov
inc
and
test
gs
mov
lods
or
repnz
xor
imul
dec
pop
cs
mov
sarl
xor
jbe
iret
xchg
pop
pusha
aam
xor
and
mov
mov
cmpb
cmp
sub
test
loope
pop
ss
rorb
aad
jno
mov
faddp
out
sbb
lahf
cmp
and
cli
xchg
sbb
lock
movsl
mov
das
push
jne
push
shl
xchg
pop
mov
cwtl
push
dec
daa
inc
adc
mov
call
sahf
sbb
ljmp
lods
dec
inc
fdivrl
ret
stc
outsb
inc
lret
pop
add
pop
dec
pop
outsb
xchg
movsb
stc
jne
popf
mov
sbb
mov
out
adc
in
dec
adc
idivl
push
bound
pop
pusha
dec
cli
add
xchg
push
push
mov
jge
test
push
fcmove
jae
pop
setae
xor
jge
add
cmc
xlat
mov
sub
out
aas
and
insb
dec
sti
sbb
subl
int
cmp
sub
movsl
jp
cltd
jge
sahf
ficoml
dec
mov
in
dec
out
into
test
pop
jmp
aas
or
pop
mov
inc
mov
mov
adc
jb
mov
lods
popf
push
mov
sbb
gs
push
aas
add
xchg
shll
jne
jns
cmp
jo
xor
imul
cwtl
repnz
insl
dec
pop
mov
fcoms
mov
jne
and
clc
cmc
dec
movsb
pop
out
outsl
call
rcr
adc
jle
xor
fwait
add
out
jne
imul
jecxz
fistpl
repnz
push
popa
out
scas
icebp
sbb
ret
inc
outsb
mov
sub
xlat
dec
adc
cmp
cmpsb
inc
cltd
js
out
bound
cmp
xor
pop
dec
popa
js
mov
fldl
dec
pushf
push
das
xchg
cmp
das
xchg
js
xchg
into
inc
sub
cmp
cmp
lods
cmp
mov
ds
or
or
rol
sub
insl
or
pop
dec
pop
mov
inc
int3
dec
adc
les
lea
cmp
das
lds
xchg
pop
or
ret
je
dec
insl
fs
lcall
call
aad
sbb
sub
adc
jnp
test
js
icebp
es
outsl
jnp
test
cmp
pop
add
test
dec
mov
adc
sti
cld
std
xchg
cmpsl
cmp
inc
pop
sbb
loopne
rolb
and
popf
aam
adc
cmpsb
inc
or
shrb
mov
xlat
mov
mov
addr16
mov
xor
mov
dec
mov
xor
enter
mov
mov
inc
rcl
outsl
mov
add
add
xlat
inc
mov
loopne
push
pop
cmp
lret
sahf
jmp
add
ror
mov
dec
xchg
inc
loop
inc
aas
inc
mov
sti
lods
sub
push
clc
xor
xchg
sar
and
push
fmuls
push
mov
enter
filds
and
adc
jmp
dec
or
ret
loope
icebp
ja
int3
sub
push
loop
pop
outsb
sbb
dec
cld
jns
out
rcl
jg
mov
inc
mov
sbb
lods
xchg
arpl
pop
jp
add
adc
rcr
out
push
xor
cmp
adc
mov
push
jb
stos
lock
rclb
dec
mov
pop
pop
mov
xchg
cmp
or
call
je
in
pop
fdivrs
mov
js
cwtl
int
mov
push
gs
xchg
in
xchg
shl
jmp
push
adc
outsb
dec
daa
scas
mov
lods
mov
inc
icebp
sbb
sub
cltd
push
insb
in
xor
add
or
loop
inc
mov
test
daa
jae
js
js
push
lahf
dec
jbe
mov
xor
jns
arpl
mov
movsl
fldenv
jb
jp
push
pushf
and
push
adc
and
iret
adc
js
add
mov
shrb
shlb
mov
jbe
or
jle
pusha
cld
and
xchg
aam
xor
jbe
fwait
mov
cmc
and
ret
push
push
cmp
xchg
mov
add
pop
jmp
push
xorb
out
sbbb
bound
outsl
test
add
aam
aam
pop
and
inc
sbb
pop
and
dec
ds
imul
jl
push
fs
std
inc
aaa
add
aam
pop
jmp
icebp
fisubrl
xor
xor
aas
fisttps
aad
cmp
out
jl
into
dec
ret
or
bnd
sbb
data16
int3
xor
mov
pop
repz
sub
mov
das
repnz
add
popf
add
push
adc
fcoml
fistps
add
sub
adc
insb
aad
add
dec
push
inc
scas
fwait
ds
mov
and
test
or
fwait
aad
clc
sub
loope
sub
jne
pop
xchg
int3
cwtl
and
mov
iret
pop
inc
adcb
les
ds
or
call
mov
xor
shll
fs
insl
mov
cwtl
xor
inc
lret
sti
rclb
xor
sbb
mov
jne
sub
fwait
es
and
lods
pmulhuw
imul
ss
cmp
pushf
dec
mov
lret
add
pop
jmp
adc
fcompl
mov
fcoms
data16
aaa
push
out
mov
or
sub
inc
xchg
lahf
pop
rcrb
mov
adc
cmc
pop
xor
mov
insb
shrl
and
and
fs
pushf
call
mov
push
lds
arpl
lea
or
out
testl
fwait
inc
mov
jmp
and
mov
out
xor
and
cmp
ljmp
lcall
cmpsl
pop
in
test
inc
fs
stos
dec
decl
repz
adc
dec
dec
shrb
dec
cmp
mov
loop
mov
xor
pop
cmpl
loop
sub
xor
sub
push
in
mov
dec
loopne
stos
sbbb
aam
clc
or
mov
mov
mov
js
sti
rdmsr
and
jbe
or
xor
xlat
push
std
addb
pop
clc
adc
ror
jl
cmpsl
xchg
cmp
xor
lret
sbb
xchg
push
add
dec
mov
mov
mov
scas
nop
push
dec
test
addr16
xchg
push
icebp
adc
sbb
stc
mov
stc
rorl
into
mov
scas
in
out
aam
add
inc
xor
jns
aaa
mov
push
sti
loopne
or
add
repz
pusha
jecxz
sub
sti
xor
xchg
or
dec
mov
ds
dec
fimull
push
xchg
les
loopne
jmp
roll
dec
adc
push
xorl
mov
sti
daa
roll
test
sub
cmc
out
adc
sbb
pop
xor
mov
xchg
dec
jmp
sahf
loopne
and
jne
fs
mov
test
into
lods
clc
pop
inc
outsl
mov
cld
out
icebp
scas
sub
and
jp
lods
push
leave
push
mov
mov
dec
leave
movsb
clc
lret
sti
and
xchg
jle
pop
and
mov
out
sub
loope
sahf
jp
insl
clc
pushl
imul
or
call
out
je
xchg
xchg
jl
ljmp
lds
and
xlat
xor
aaa
movsb
push
dec
push
inc
rcrb
push
push
leave
mov
xchg
loop
xchg
cltd
or
lock
scas
pop
test
sub
lods
and
sti
push
fwait
xor
shll
call
jle
inc
adc
pop
mov
jmp
jne
mov
ss
xor
mov
std
imul
fcoms
aaa
pusha
les
xchg
outsb
bound
dec
aad
idivb
gs
jb
or
push
push
or
sub
fchs
fildl
push
lahf
push
aad
mov
mov
jo
cmp
cmpsb
inc
ds
out
lcall
push
out
aad
mov
cmp
decb
cwtl
call
int
fs
mov
push
dec
dec
xchg
cmpsb
and
popa
pop
cmp
xor
movsb
fs
scas
and
push
mov
lret
sbb
pop
in
xor
idiv
pop
adc
cmpsl
xor
outsb
fucom
pop
xorb
inc
pop
add
cmp
or
test
mov
or
aam
mov
xor
sbb
lods
xchg
dec
xchg
popf
or
xor
movsl
cmc
pop
sub
xchg
adc
or
push
dec
mov
rorl
mov
pop
jbe
in
popa
arpl
jmp
mov
xor
out
mov
roll
test
ljmp
xor
outsl
mov
mov
fnstenv
and
mov
sahf
lea
add
sbb
fisubrl
rol
lahf
mov
out
bound
cli
or
pop
mov
pop
popf
lock
or
test
leave
test
jmp
popa
dec
cmp
push
pop
inc
lea
lahf
pop
sub
lock
mov
es
rorl
test
push
mov
out
subl
fnsave
sahf
push
in
jle
mov
enter
imul
gs
aam
lods
arpl
mov
in
or
push
sbb
shrl
les
mov
sbb
inc
cmpb
punpckhwd
dec
iret
xlat
or
lret
aad
push
xor
cli
and
cmp
mov
cli
and
sbb
in
daa
or
and
roll
jmp
idivb
xchg
jmp
pop
int3
mov
push
fs
aaa
adc
rorb
adc
pop
lret
in
mov
nop
xchg
cmp
aam
push
pop
jae
sbb
lret
or
add
mov
jle
les
hlt
sub
xchg
add
mov
mov
sub
aad
mov
lds
add
adc
les
aaa
inc
out
xor
xchg
pop
ret
movsb
arpl
je
pusha
xchg
jge
add
ljmp
cmc
cmc
add
sahf
cmp
hlt
shl
add
ret
pop
cmp
loop
inc
mov
mov
out
xor
and
inc
jmp
xchg
ljmp
sub
rcl
ret
cmp
bound
or
push
inc
cmp
sbb
and
jne
adc
adc
ret
mov
shrl
ja
dec
sti
data16
cmpl
adc
movsl
test
fisttpll
and
adc
scas
pusha
sub
lahf
stos
mov
push
push
adc
xchg
and
jns
outsb
fdivs
xchg
call
dec
jns
loop
xchg
push
mov
aam
and
mov
in
xchg
int
mov
mov
cmp
mov
cmp
in
jmp
icebp
leave
inc
das
nop
push
pop
mov
int
inc
adc
cltd
dec
lcall
jmp
fistpl
imul
mov
xchg
stos
jnp
sbbl
jne
xlat
and
adc
call
shrb
out
scas
cli
out
mov
testl
iret
adcl
addr16
pushf
add
out
cmp
jnp
xchg
cli
jns
in
mov
mov
dec
rcll
mov
mov
clc
pop
xchg
enter
stos
test
pop
adc
sbb
test
cmpsl
lahf
aad
xchg
arpl
dec
mov
add
scas
xchg
hlt
out
xor
jns
xchg
test
ja
movsl
mov
xor
rorl
mov
mov
inc
sarb
enter
lret
mulb
push
out
dec
inc
xchg
cmp
pop
sahf
shlb
xor
jp
popf
cmp
loope
cwtl
shlb
jne
xor
outsb
fs
stos
push
insl
int
gs
out
lea
push
mov
adcb
test
push
xchg
pusha
lret
inc
mov
xchg
into
pop
mov
mov
push
and
inc
inc
inc
pop
jmp
mov
push
lods
iret
pop
rolb
lcall
xchg
shlb
out
xchg
push
fwait
xor
jmp
inc
dec
lret
fistps
inc
dec
push
testb
jp
test
repz
cld
test
shll
xchg
outsb
cmp
into
lds
call
jno
scas
adc
or
fbstp
imul
xchg
and
loop
flds
enter
push
xlat
mov
sti
aad
xor
mov
in
mov
int3
mov
rorl
adc
insb
fisubrl
fcomp
scas
dec
icebp
int3
or
jle
imul
inc
mov
insb
mov
and
les
popa
inc
sub
orl
jmp
test
imul
push
clc
dec
mov
popa
add
inc
jnp
sbb
add
cmpsl
outsl
push
test
sti
jne
pop
mov
cmp
pushf
jae
bound
push
les
repnz
push
jns
test
pop
js
mov
mov
mov
ja
jo
cmp
cmc
jmp
pop
or
dec
int3
lea
add
sub
sti
mov
dec
mov
stos
sub
sub
pop
pushf
xor
push
or
jge
add
cwtl
pusha
jns
roll
and
cmc
dec
cli
ficoms
cwtl
rcll
fldt
addr16
dec
stos
cltd
adc
stos
movsb
fnstenv
xlat
es
enter
xlat
ss
push
mov
xor
push
inc
mov
xchg
mov
mov
or
push
lcall
orb
sub
push
lcall
rorl
add
cmp
add
iret
shlb
scas
scas
je
call
push
ss
popf
cmp
inc
mov
jo
and
push
ja
sbb
mov
sets
stc
adc
sbb
add
cli
mov
mov
inc
nop
adc
lods
xor
js
repnz
mov
push
stos
sbb
out
int3
lea
push
push
and
data16
insl
mov
loope
mov
xor
repnz
fsts
lahf
subl
mov
fs
adc
adc
cmp
loopne
or
fists
mov
lret
sbb
rcll
xchg
xchg
push
mov
pop
lds
out
fcmovu
enter
jo
jo
aam
cmp
jp
dec
mov
test
pop
jge
xlat
cli
test
jmp
jg
add
mov
pop
mov
ds
xor
push
add
or
faddl
shlb
or
iret
clc
jae
add
or
aad
lds
adc
loopne
repz
icebp
inc
pop
jg
jbe
inc
lock
sub
cmp
cwtl
cltd
stos
xchg
dec
lret
xor
or
push
jae
push
adc
cmp
popf
stc
push
out
hlt
mov
movsl
outsb
popa
cmp
lods
mov
sub
fwait
jne
mov
jmp
lea
lret
imul
mov
sti
sahf
pop
pop
dec
mov
in
mulb
mov
adc
bnd
cmpsb
cs
xlat
add
add
mov
and
inc
inc
daa
aam
mov
pushf
js
jp
xchg
stos
out
nop
jne
in
lds
xchg
popa
nop
cltd
fimuls
cmp
lret
inc
mov
and
fisubs
aaa
or
add
fdivrs
add
cmc
repz
mov
jp
cmp
lret
mov
adc
jp
and
mov
push
adc
push
out
aas
data16
push
mov
sub
popf
xor
cmp
loopne
xchg
ret
xor
aaa
xlat
jle
addr16
jg
adc
inc
adc
idivb
pop
pop
jg
jecxz
and
xchg
aad
cld
out
jp
push
xchg
push
push
movsb
mov
in
dec
cmp
lcall
pop
out
int
rcr
add
xchg
inc
aas
pop
jecxz
and
xchg
shrb
mov
xchg
push
cmpsb
fnstcw
not
loop
xchg
push
xchg
or
and
push
adc
inc
iret
push
inc
jmp
mov
mov
and
stc
adc
gs
or
xor
pop
cmp
shrb
stos
pop
faddl
and
lretw
cmp
adc
loop
adc
test
sbb
add
push
aam
or
jmp
js
in
add
pop
ficoms
xchg
push
cmpsl
push
test
cmp
dec
pop
mov
out
loop
cmp
test
and
xlat
cltd
jae
xor
test
jb
lcall
aaa
cmp
divb
cwtl
inc
ds
lock
aaa
les
dec
dec
pop
addr16
testl
mov
pop
dec
mov
pushf
jb
or
subl
insl
xor
insl
jle
test
inc
in
fdivrs
sar
mov
cmp
jo
and
adc
mov
loope
inc
mov
add
stos
test
ja
lret
hlt
jle
mov
and
push
cld
call
mov
lods
loope
push
jbe
sbb
ficoml
outsb
ljmp
aaa
or
fwait
jl
cmp
addb
mov
mov
lahf
and
jns
xchg
sbb
push
mov
pop
cmp
xchg
and
scas
or
insb
mov
fidivs
sbb
ljmp
push
dec
clc
into
add
jo
add
push
mov
scas
iret
mov
jg
movsb
fimuls
out
push
xor
and
inc
in
loope
jno
cmp
loopne
rorb
ss
loopne
mov
out
jbe
dec
daa
push
push
or
pop
dec
lds
xlat
stos
mov
cltd
outsb
cs
aam
loop
outsb
hlt
push
sub
cld
stos
dec
aaa
mov
fwait
insl
sbb
outsb
cmp
outsb
addr16
fs
lds
scas
lods
xchg
arpl
dec
jo
mov
inc
fs
dec
mov
jp
je
lds
jg
fsubs
stc
in
add
fldt
push
dec
sub
xor
mov
and
cltd
pop
ds
mov
pop
mov
inc
data16
ja
mov
push
jo
xor
mov
popf
sub
negb
push
seto
fcomps
inc
xor
das
add
inc
push
pop
test
inc
push
pop
hlt
les
push
js
out
nop
dec
mov
xor
xor
ja
jecxz
push
enter
inc
gs
xchg
scas
insl
or
arpl
or
add
out
dec
stos
xchg
pop
adc
mov
vmovmskps
xor
dec
stos
in
or
inc
aam
lods
daa
js
out
sub
ds
hlt
loope
icebp
insl
mov
decb
adcb
push
rcrb
out
inc
and
cmpsl
pushf
sbb
sbb
and
popf
dec
lods
xchg
add
inc
xchg
rolb
jnp
ss
xchg
fwait
loop
sub
pusha
sbb
xchg
sbb
subl
loope
test
repnz
push
mov
hlt
in
or
pop
and
inc
and
sbb
push
lds
adc
out
into
movb
test
testb
adc
clc
add
xchg
sbb
in
pop
push
and
in
sbb
in
pushf
shlb
mov
and
out
cmp
pop
inc
push
pop
sub
sub
enter
pop
cwtl
mov
xchg
popa
lret
jl
sbb
dec
int3
jl
add
repnz
je
push
push
notl
mov
aad
inc
xor
push
imul
cmpsb
int
adc
inc
mov
dec
cmp
lods
xchg
cmpsl
nop
cmp
repnz
loopne
xor
xchg
arpl
fstps
mov
and
fsub
daa
scas
adc
inc
mov
mov
std
ja
cld
jnp
add
lret
lds
pop
dec
xor
mov
lcall
aam
inc
mov
out
jmp
mov
adc
jg
adc
ds
mov
test
mov
mov
push
in
or
and
stos
pop
inc
or
sub
stc
shrb
stc
cmp
mov
and
jne
mov
sbb
push
xchg
pop
sti
push
mov
sbb
mov
sti
lods
sub
mov
data16
push
insl
jae
sub
push
roll
jl
mov
out
lret
jnp
xchg
mov
xchg
mov
inc
fbld
test
jp
nop
add
js
lahf
scas
and
sub
test
jg
pushf
mov
cmc
jne
or
scas
fistl
xor
cmp
pop
dec
mov
push
stos
xchg
sbb
or
ficompl
mov
or
xor
inc
add
pop
adc
pushf
insb
movsb
adc
insb
lahf
pop
imul
call
sub
mov
cmpsl
adcl
push
les
jle
xchg
inc
test
pop
sbb
je
jle
imul
mov
pop
dec
or
or
pop
fs
ljmp
mov
int3
sub
scas
or
jl
stos
out
insb
pushf
jbe
mov
lea
mov
pop
fwait
dec
push
inc
push
xor
push
jg
mov
std
cmp
xchg
insb
test
sub
inc
ficompl
lcall
mov
jbe
inc
outsl
dec
loopne
and
lret
sbb
jb
push
pop
ficompl
icebp
sub
mov
jge
xor
fsubrs
filds
movsl
and
aas
lods
dec
sbb
out
sub
pusha
jno
int3
xor
xchg
dec
stc
outsb
pusha
lds
push
je
int3
pushf
mov
xchg
push
lea
xlat
subb
data16
xchg
jo
mov
push
js
decl
jle
pusha
mov
and
mov
mov
push
ja
ret
xor
inc
dec
lcall
fmul
push
cmpsl
mov
arpl
arpl
rolb
xchg
decb
in
mov
insl
out
cmc
ss
pop
sbb
fcom
fidivs
inc
into
mov
andb
loopne
mov
xor
xchg
pop
dec
xchg
xchg
pop
iret
sbb
lods
jae
push
sub
ljmp
add
jle
mov
push
mov
clc
mov
adc
dec
das
pusha
hlt
adcb
imul
xchg
mov
cltd
pop
icebp
mov
cmp
push
add
push
cwtl
push
inc
jb
outsl
push
mov
pop
enter
add
sbb
test
ret
pop
inc
dec
jne
push
test
or
push
lret
lret
sbb
shl
sbb
loop
dec
add
repnz
movsl
inc
cmp
sbb
gs
jge
mov
or
dec
push
insl
shrl
lods
sbbl
pop
xor
mov
das
fucom
sub
lahf
imul
push
rol
xor
jmp
aaa
and
mov
fstpt
cmpsb
pop
push
ret
fldt
xchg
pop
gs
inc
cwtl
push
sarb
testl
pop
std
push
das
lcall
sbb
pop
subb
fwait
push
lods
ret
push
xor
popf
insl
adcl
in
fs
mov
pop
jae
mov
xchg
pusha
lahf
mov
pop
in
push
inc
cmpsl
jmp
sbb
rol
mov
pop
int
repnz
cltd
in
gs
clc
mov
icebp
and
test
ds
sub
mov
repnz
lret
sbb
cmp
shrl
inc
mov
push
sbb
lcall
in
mov
in
xchg
add
dec
loop
push
int3
inc
sbb
sbb
add
or
divl
cmpsb
jne
cmp
add
into
xchg
xlat
fwait
adc
push
insb
mov
lds
dec
pop
in
fdivl
test
ss
mov
push
out
xchg
cmp
xchg
outsl
addr16
adc
roll
dec
add
ret
xchg
pop
imul
dec
jo
sarb
dec
sub
jmp
xchg
mov
addr16
inc
jg
sub
adcl
and
or
pop
shlb
sbb
mov
pop
lret
les
mov
mov
jg
enter
mov
xor
pop
gs
pop
inc
scas
cmp
test
dec
cmp
pusha
inc
ret
jbe
or
loope
test
adc
push
add
jae
int
jg
mov
test
cmp
push
mov
test
sbb
add
lock
pop
adc
in
das
xor
add
insl
sub
data16
inc
inc
jns
mov
sub
mov
inc
jb
fmulp
test
rcll
sub
call
arpl
push
inc
xchg
cwtl
xchg
inc
fisubrl
icebp
mov
mov
mov
jne
jmp
cmpsl
btr
adc
mov
sbb
xchg
int
bound
dec
adc
jne
fs
ja
loop
push
mov
sub
sbb
outsl
dec
inc
enter
dec
mov
cmp
mov
std
aad
in
arpl
rcl
sbb
mov
daa
imul
pop
mov
push
push
fnstsw
mov
faddp
push
or
adc
push
dec
mov
dec
push
outsb
push
push
sub
arpl
andb
fbld
sbb
les
sub
inc
imul
imul
lahf
add
add
sub
insb
lea
std
mov
in
sbb
jecxz
cmp
lock
lds
subb
bound
loopne
test
fwait
mov
push
imul
in
xchg
stos
and
fwait
inc
jge
imul
pop
arpl
mov
test
mov
movsb
or
ja
leave
xchg
nop
lods
icebp
push
xchg
cltd
cmc
and
cmp
aad
dec
sub
loope
es
stos
out
mov
popf
lahf
in
mov
adc
mov
mov
xchg
lcall
adc
stos
daa
xor
push
ss
lock
movsb
sbb
inc
ret
sub
sti
or
jae
inc
mov
aad
add
shlb
adc
or
sbb
das
add
ja
outsb
xchg
stc
cmp
mov
dec
icebp
mov
pushf
cltd
ds
cmp
sar
add
push
lds
mov
pushl
inc
fs
mov
fidivrl
mov
pop
add
jo
mov
inc
pop
or
mov
push
pusha
adc
add
inc
pop
inc
stc
std
and
push
or
and
pushf
test
sub
or
movsl
stos
jns
cmpsl
mov
lds
in
jbe
inc
push
mov
add
in
aaa
pop
mov
cmc
xchg
jle
jp
aaa
sbb
push
sbbl
dec
ljmp
std
sub
mov
fwait
std
xor
lods
mov
jae
jmp
adc
popa
cld
sbb
xchg
lods
sub
cwtl
xchg
add
fstl
xchg
pop
mov
out
imul
mov
sti
mov
cli
pop
stos
out
std
inc
jg
std
sti
sub
adc
mov
outsl
ret
mov
add
cmc
mov
and
stos
mov
sub
xchg
jp
stos
das
cld
mov
faddl
shlb
je
jbe
in
add
dec
popf
rclb
ds
mov
rcrl
dec
inc
lahf
lods
and
cld
sub
jp
mov
lret
and
dec
add
es
sub
add
sub
inc
clc
inc
ss
outsl
fdivs
cs
cmp
in
pop
mov
aas
mov
dec
sar
xlat
faddl
loop
cmpsb
in
xchg
enter
dec
mov
sub
fistps
xor
sub
das
mov
js
mov
iret
dec
adc
adc
es
jp
xor
fmuls
outsl
pop
jnp
sbb
pop
adc
syscall
and
pop
incb
dec
test
cmp
psubd
xchg
int3
mov
mov
imulb
fistpl
mov
pop
shrl
and
stc
icebp
adc
xchg
jbe
xor
sbb
sahf
pop
mov
divl
mov
add
jmp
xchg
cs
cwtl
mov
mov
xchg
insl
data16
fwait
in
jae
icebp
jns
inc
sbb
adc
pop
mov
lds
mov
push
or
outsb
mov
jbe
jmp
ljmp
sbb
aaa
movsl
xor
aaa
cmp
or
jg
mov
xchg
inc
mov
pop
push
dec
shlb
pop
fldl
inc
mov
jp
hlt
mov
fldl
add
loopne
or
in
cmc
inc
mov
and
mov
cltd
and
mov
inc
xchg
add
in
pop
inc
mov
mov
rcrl
add
addl
ficomps
inc
addr16
mov
add
jmp
out
xchg
jo
hlt
mov
mulb
sbb
aaa
fs
dec
dec
aad
inc
loope
inc
jg
pop
jo
repz
sub
adc
mov
arpl
jae
pop
adc
pop
jp
into
jo
add
notb
xchg
xor
test
xchg
fsubrs
mov
test
fstpl
push
xlat
stos
adc
pushf
das
sub
mov
xchg
stos
subl
mov
xchg
cmc
dec
imul
push
mov
xor
aam
mov
jg
sarb
sub
jl
jecxz
loope
cwtl
scas
dec
mov
into
sti
fdivrs
das
dec
pop
xchg
ficoml
cmpsl
into
xor
out
jmp
push
mov
sub
das
cmp
fwait
and
jl
rclb
xchg
mov
rcrl
fildl
in
ja
sbb
dec
add
mov
pop
sbb
arpl
push
sbb
jg
dec
imul
shrb
nop
xor
pushf
sbb
test
std
out
gs
inc
test
aad
jnp
mov
inc
dec
xlat
push
dec
out
mov
mov
adc
lahf
mov
add
or
outsb
dec
mov
dec
jno
mov
insl
push
fs
mov
stos
or
js
xchg
je
lahf
pop
mov
xor
jp
mulb
push
insb
out
in
xchg
pop
fmull
loop
popa
cmp
inc
movsl
dec
jb
and
nop
push
push
push
mov
jno
int
push
add
push
repnz
mov
rclb
loop
ret
pop
jle
testl
xor
mov
sbb
push
cli
push
cmp
stos
dec
ret
imul
jge
test
sbb
xchg
repnz
imul
roll
mov
sub
xchg
add
sub
cmp
sub
sbb
push
pop
shl
dec
pop
negb
stos
mov
or
rcll
jae
or
jg
mov
pop
loopne
xchg
cmp
push
pop
in
cmp
sbb
ficoms
sub
int3
in
jmp
lret
mov
adc
inc
jl
jecxz
inc
ret
pop
cmpl
lock
sub
inc
jb
push
inc
xchg
cmp
popa
or
pop
ret
push
adc
lds
mov
nop
addr16
ret
fcompl
xor
mov
sahf
daa
inc
mov
fs
in
les
jp
out
xchg
sbb
lcall
mov
je
or
dec
inc
or
sbb
in
cmp
jne
jecxz
stos
jne
stc
and
jno
mov
dec
xorl
dec
hlt
sub
inc
pop
aam
dec
inc
pop
pop
pop
cmp
mov
shll
daa
decb
jo
fmuls
adc
sbb
adc
jb
mov
das
push
fistl
mov
fs
pop
movsl
jnp
jbe
sub
mov
sub
mov
aas
add
and
or
in
insl
addr16
xor
addr16
mov
xor
mov
jbe
int3
add
arpl
aas
xchg
aas
push
cwtl
mov
outsb
psrld
jmp
rorl
cmp
into
jns
mov
and
popa
xor
mov
push
aas
cltd
ss
int
mov
aas
add
lcall
aad
iret
jb
daa
scas
dec
stos
adc
inc
lds
cmp
in
dec
xor
es
mov
push
lods
inc
add
ja
pop
mov
sbb
push
dec
add
pop
ljmp
test
das
sub
and
int3
popa
sarb
clc
mov
aas
ds
push
mov
fmull
hlt
std
or
cmp
aas
fbstp
pop
mov
ret
push
sar
or
mov
sar
rcrb
mov
mov
xlat
adc
lahf
sbb
andb
push
jne
sbb
mov
mov
push
jno
mov
mov
xchg
mov
adc
add
loope
in
in
je
out
outsb
mov
neg
andl
sbb
shlb
cmpsl
leave
dec
cmpsb
fmulp
movsl
xchg
andl
sahf
push
and
mov
sti
push
std
jns
fwait
dec
ret
pop
in
imul
and
call
mov
shl
test
xor
cmp
xor
push
loope
aam
push
ror
fwait
arpl
lcall
jle
cld
mov
or
in
enter
add
pop
cmp
aad
push
lds
jnp
jmp
cmp
pop
pop
sub
dec
or
fimull
dec
cmc
pop
orl
mov
jne
jle
lret
dec
mov
aad
loop
xchg
leave
push
add
push
xor
mov
fabs
mov
cmc
mov
aam
mov
lea
popa
iret
jns
xor
lea
sti
and
outsb
pop
xor
jl
sub
imul
xchg
push
das
movsb
les
cwtl
into
and
inc
lock
xor
or
jle
out
std
jnp
in
adc
push
push
jne
scas
lret
mov
and
xchg
bound
test
popa
push
stc
dec
inc
sahf
cmp
imul
sbbb
jne
xchg
call
sbb
out
add
xor
shr
in
pop
fsubrs
mov
jne
mov
inc
adc
push
inc
test
mov
or
sub
fsubrl
enter
mov
pushf
loopne
sbb
lret
mov
mov
jl
jg
aas
mov
outsl
test
jmp
ret
push
xchg
ljmp
loopne
mov
mov
jp
jb
mov
das
jg
scas
mov
dec
pop
iret
popf
pop
leave
or
add
dec
jl
xorb
sub
jle
pop
and
and
xchg
cwtl
push
jmp
ljmp
lds
and
jb
pop
pushw
cld
push
jae
mov
test
push
mov
shl
movsl
pop
leave
sarb
pop
mov
out
fcmovb
insl
hlt
xchg
rcrb
xchg
sbbb
outsb
and
mov
mov
enter
lds
bound
inc
lea
push
inc
push
xchg
sbbb
lock
and
enter
sub
mov
dec
cltd
ds
stos
icebp
leave
negb
movsl
push
sub
mov
xlat
cmc
push
loope
int
mov
aas
cmp
mov
outsb
outsb
out
mov
aas
push
dec
or
lret
sbb
addl
pusha
into
cli
or
pop
xlat
test
mov
xchg
es
out
mov
jae
test
and
sarb
and
ficomps
mov
dec
xor
int3
loopne
stc
xchg
add
cmp
pop
or
sar
mov
lock
ret
xor
das
mov
mov
cs
inc
stos
loopne
push
add
imul
arpl
int
inc
mov
popa
je
mov
rol
mov
mov
shr
stos
shl
lods
or
das
out
mov
or
jns
mov
cmp
push
push
shr
push
inc
mov
jmp
xchg
xor
repz
sbb
jle
popa
mov
nop
rcrl
jg
dec
data16
dec
lods
out
adc
add
insl
mov
mov
fwait
sbb
jge
sbb
add
sub
push
adc
push
dec
xor
ljmp
xchg
mov
inc
ds
insb
fnsave
loopne
mov
mov
push
mov
nop
mov
lea
movsb
sub
push
test
leave
sub
ljmp
fidivs
popf
mov
adc
or
sahf
lret
dec
idivl
xor
mov
sti
cmp
in
add
popa
dec
aad
cmp
in
in
lock
sti
fdiv
jle
lock
push
addr16
mov
xchg
outsl
pop
pop
lret
arpl
loope
lret
les
xor
rclb
lahf
and
inc
sbb
cmp
xor
pusha
ret
pop
in
and
xchg
or
cmp
inc
cli
das
lahf
scas
jne
add
xchg
pop
jo
lea
shll
xor
leave
shlb
pop
mov
out
xchg
xchg
pop
or
dec
xchg
cmp
loope
and
xchg
xchg
sti
push
rclb
cmpsl
jnp
cmp
sub
pusha
add
xlat
jle
jae
xor
test
ss
pop
sbb
adc
call
adcl
inc
sbbl
inc
loopne
mov
mov
outsl
xlat
cltd
in
mov
mov
test
mov
rolb
nop
fwait
mov
sarl
mov
mov
cmp
jecxz
ds
add
add
scas
xchg
stos
dec
xchg
pop
outsb
pop
dec
ss
dec
ds
js
xchg
imul
test
cmp
dec
push
lea
dec
pushf
dec
mov
sahf
pop
mov
jbe
ret
inc
pusha
sub
fists
jle
jle
bnd
std
pop
push
cmp
test
pop
add
inc
inc
lret
shlb
sub
xchg
shll
inc
mov
in
nop
pop
roll
or
pop
lds
repz
fs
lds
notb
movsl
cld
mov
movaps
cmp
xchg
ret
xchg
dec
push
jle
call
inc
lods
test
mov
sbb
and
inc
cmc
pop
sarl
jnp
jne
xor
out
jecxz
jns
sub
es
pushf
and
inc
repz
sahf
out
sbb
fldt
inc
stos
lock
cmpsl
iret
sub
sub
nop
sub
loope
in
and
jae
push
push
sti
fcoml
mov
lret
jg
or
mov
call
in
pop
call
pop
int
sti
scas
insb
daa
mov
or
adc
and
fs
jne
mov
nop
cli
mov
push
in
mov
cmp
leave
and
iret
scas
sbb
and
cmp
and
imul
rcll
dec
insl
dec
shl
outsb
add
je
repz
or
mov
adc
push
inc
mov
inc
add
das
inc
jmp
xchg
sub
jecxz
stos
in
stc
int3
loope
fyl2xp1
shrb
add
stos
mov
sti
stos
sbb
out
mov
jmp
add
int3
cmp
rorb
movsl
fisubrl
andl
jecxz
xchg
cwtl
jne
xchg
mov
mov
cli
sar
or
clc
stos
out
sbb
cmp
push
xchg
jnp
push
fxam
lahf
sahf
mov
add
xchg
mov
dec
xor
push
jg
push
les
adc
mov
dec
mov
iret
mov
xchg
add
pop
add
mov
lods
out
inc
or
movsw
pop
jmp
bound
es
jle
int3
clc
jle
jnp
adc
ljmp
mov
cli
mov
xor
in
fldl
fs
mov
popf
push
sbb
xchg
and
pop
fidivrs
cli
dec
ljmp
lds
sbb
vpcmpgtq
cwtl
or
cmpb
mov
dec
fnstenv
mov
repz
mov
dec
xchg
or
mov
adc
movsl
in
imul
movsb
rcrl
sub
in
sub
lock
push
sbb
subl
mov
inc
nop
lret
fidivrl
popa
mov
and
das
lret
shl
out
lods
dec
imul
push
cmp
fwait
ret
aam
pusha
repz
adc
cli
fs
push
push
hlt
push
fistpl
mov
or
and
fdivrl
into
int3
xchg
pop
imul
andb
fcmove
lods
adc
inc
and
pop
int3
orb
add
add
mov
push
sub
jae
iret
jbe
jl
inc
filds
shlb
push
movsb
fdivrs
inc
sub
adc
sub
mov
sbb
jno
shl
aaa
in
popa
inc
stos
into
stos
iret
hlt
out
and
dec
push
mov
ret
test
bound
jnp
cmp
dec
xchg
shll
dec
sub
negb
mov
pusha
fdivr
jp
std
pop
cmp
jl
rcll
mov
inc
pusha
xor
mov
das
add
leave
cmp
enter
lret
aam
adc
mov
scas
filds
ret
lret
cmp
daa
ja
adc
sub
lods
jne
push
cmc
xchg
add
cltd
pcmpeqw
test
mov
jl
mov
mov
leave
call
aam
xor
cmpsb
and
cmpb
push
pop
mov
dec
pusha
scas
aas
mov
jnp
sbb
ret
mov
lods
and
cmp
xchg
pusha
call
sub
cmp
dec
lods
push
pop
lds
push
push
mov
push
cmp
mov
loop
fsubs
push
dec
mov
and
fdivl
mov
jne
imulb
insl
addr16
xchg
xor
xor
movsb
pop
lods
xor
push
inc
dec
hlt
into
stos
or
int3
in
mov
out
mov
push
mov
sub
mov
out
popa
push
movsb
dec
mov
and
sbb
jns
add
mov
mov
cmp
das
mov
mov
lods
pop
aad
xor
sub
cmp
mov
mov
mov
imul
sub
adc
je
das
out
into
pop
inc
scas
inc
mov
jmp
shl
lock
ret
orl
cmpsb
dec
mov
mov
or
jne
into
sar
shrl
mov
push
push
mov
sub
and
jbe
and
mov
imul
jo
xor
fwait
aad
pop
xchg
dec
outsl
add
aas
mov
cmp
mov
pushf
sub
mov
pop
jle
xor
inc
inc
mov
stos
mov
js
xor
jg
or
dec
sub
mov
push
mov
dec
xor
push
lret
mov
lret
stos
in
outsb
pushf
ss
shlb
mov
movsl
mov
xchg
inc
mov
clc
sbb
fcomi
cmp
pop
and
and
test
adc
mov
add
shlb
jno
sub
push
icebp
cwtl
xchg
orb
sahf
inc
cmp
aas
mov
jne
and
daa
or
mov
cmp
icebp
test
int3
push
jle
sub
fwait
outsb
jl
repz
sub
lcall
out
and
fsubrs
call
sbb
scas
mov
xlat
dec
inc
test
psubw
or
mov
adc
cmpsb
jo
icebp
push
sahf
out
lea
or
xor
cli
sub
push
mov
call
loop
jbe
call
adc
sub
stos
std
mov
fisubrs
call
divl
jne
cmp
xor
cltd
ds
jl
sub
jns
nop
mov
add
xchg
add
dec
lahf
or
in
repz
aas
xchg
cmp
and
pop
bound
cmp
xor
push
xchg
pop
shll
pop
push
cmp
lock
cmp
pop
shlb
outsl
xchg
cmp
es
add
jle
clc
loop
repnz
mov
or
out
and
loopne
push
jnp
pop
lods
pop
cli
stc
push
scas
xor
add
test
cmpsb
lods
and
xlat
je
sbbl
lock
fcmovnu
adc
fwait
pop
mov
pop
clc
adc
or
int3
mov
xor
push
pop
ficoms
adc
pop
je
dec
add
iret
cmp
fdivr
mov
mov
mov
pop
mov
stc
repz
xor
push
je
mov
dec
icebp
stos
sub
push
xchg
sub
inc
adc
jg
mov
and
test
roll
test
add
nop
lds
adc
xchg
sbb
cmp
xor
fistl
fistpll
cmp
scas
push
bound
lret
addr16
xchg
fcoms
out
xor
in
daa
fwait
and
cs
mov
adc
out
adc
inc
sbb
sahf
push
movb
iret
lods
imul
or
mov
movsb
xchg
mov
dec
dec
imul
daa
pop
nop
jb
push
mov
hlt
mov
popa
add
xor
mov
push
fsubp
sbb
jnp
push
sub
loope
inc
rol
add
movsb
arpl
inc
dec
xor
mov
xchg
test
push
shl
data16
xchg
in
add
cmp
mov
inc
rcrl
in
adc
popf
es
scas
mov
xchg
push
xchg
mov
mov
sub
outsb
xor
call
xchg
out
inc
jmp
xchg
sbb
mov
add
sbb
mov
jbe
shll
pop
daa
in
cwtl
push
mov
aaa
ret
pop
xchg
push
lahf
ret
push
adc
arpl
insl
int
popa
xchg
cwtl
fucom
mov
fnstsw
inc
xor
test
cmp
fcom
sub
push
pushf
bound
push
add
lret
sahf
gs
sbb
sub
int
flds
xor
fsubr
mov
aam
nop
fsubrl
jecxz
push
mov
mov
sbb
ljmp
xchg
ficomps
jg
repnz
sbb
insb
cmp
mov
xor
dec
jecxz
movsb
mov
idivb
dec
xchg
mov
leave
mov
pusha
and
popa
aas
jmp
pop
mov
je
cs
xor
add
leave
stos
test
stc
cmp
mov
mov
adc
dec
mov
test
das
sbb
jecxz
pop
or
jmp
je
xor
or
sarl
cmp
jle
push
sub
ds
dec
and
add
rep
xchg
lea
test
sub
ja
add
lods
mov
dec
mov
sahf
cmp
mov
mov
inc
imul
jnp
mov
in
sbb
fs
mov
xor
push
scas
xchg
fadd
or
xchg
shlb
jne
scas
xorl
mov
pushf
and
fwait
jbe
inc
dec
adc
jmp
sub
pop
je
mov
mov
xor
and
dec
out
add
xorl
fildl
dec
sub
mov
adc
sub
inc
jmp
rclb
inc
adc
aad
inc
arpl
push
jl
jb
add
xchg
jecxz
or
outsl
lahf
xor
and
jge
mov
pushf
sahf
loope
pop
cltd
fcmovne
add
jns
mov
das
repnz
jbe
outsl
adc
adc
cs
add
mov
and
fnstsw
jae
pop
mov
jecxz
mov
mov
xchg
clc
jnp
fwait
cmp
jae
cmp
pop
cmp
cwtl
jp
mov
adc
hlt
xchg
mov
xchg
insl
sub
daa
leave
dec
fidivl
add
pop
lahf
xchg
sub
sbb
adc
pop
inc
fmull
outsl
lds
rcrl
dec
jmp
jge
mov
mov
lcall
pop
incl
movsb
enter
inc
cmpb
add
adc
xor
mov
movsl
xor
dec
mov
sti
xchg
cmp
mov
xor
jge
xchg
pop
call
sub
jbe
ret
dec
jae
pop
push
icebp
sbb
sub
dec
jns
sahf
sahf
out
out
adcb
jl
add
jmp
ja
xchg
sub
push
jg
lahf
loopne
mov
imull
jp
add
or
sub
and
jbe
subb
ret
aas
lods
out
iret
push
cmp
inc
pop
jbe
loopne
insl
push
bound
lret
adc
mov
stos
pop
mov
or
pop
mov
lcall
insl
pop
add
adc
pusha
push
and
pop
add
push
jne
mov
sbbb
and
in
int3
mov
jae
mov
clc
ja
leave
mov
mov
sbb
out
push
lret
push
fwait
bound
jge
mov
mov
dec
fwait
mov
ds
int
xchg
lods
mov
sbb
pmaddwd
lret
lods
cli
lret
pop
aam
cltd
mov
push
imul
pop
xchg
rcll
addl
ret
movsb
jnp
push
or
mov
fistl
push
out
aad
mov
stos
ss
stos
cmp
sbb
xor
sbb
xchg
movsl
jp
stos
and
std
stos
lods
jb
mov
add
call
popa
aam
movsl
dec
mov
enter
dec
or
adc
jb
mov
dec
mov
push
popa
inc
loopne
push
popf
popf
xchg
leave
andb
sbb
cmp
int3
enter
add
fstps
mov
cmpsb
xchg
and
or
loope
inc
mov
test
mov
pop
mov
mov
jmp
ss
xchg
or
icebp
inc
iret
push
mov
inc
out
cltd
aaa
dec
add
xchg
cltd
sbb
add
hlt
jle
fstpl
rorb
fisttps
sarb
movsl
dec
aad
rorl
scas
or
add
iret
mov
out
xchg
or
aaa
iret
and
fildll
jb
movsb
sbb
mov
adc
mov
pop
mov
mov
add
cli
sub
push
add
sbb
roll
arpl
stos
lahf
adc
mov
rorl
fisubrl
xor
shll
jbe
xor
aam
or
inc
lret
or
pushf
sub
xlat
xchg
fisttpll
fdiv
fucom
mov
push
sub
xchg
xor
push
pop
adc
out
dec
push
or
pop
mov
mov
in
insb
mov
dec
jp
dec
test
push
fs
and
rclb
jne
mov
cs
push
cli
push
mov
sti
pop
and
inc
sub
icebp
mov
test
movsl
nop
mov
and
testb
sub
repnz
lods
movsb
mov
cmp
movsl
xor
sbb
imul
and
inc
int
push
cmc
cmc
stc
add
xchg
movsl
xchg
cmp
aas
addr16
mov
enter
ret
push
adc
test
sbbb
pop
jp
cwtl
decl
pop
pop
loop
aas
pushf
jae
add
mov
xchg
imul
loope
imul
pop
and
out
xchg
stos
test
in
pop
push
pop
shl
or
add
push
daa
mov
in
sarl
xchg
decb
adc
mov
mov
push
int3
out
lea
js
adc
ja
shrl
push
xor
dec
fs
jno
mov
jae
and
fwait
in
enter
out
cmp
add
stos
mov
or
ret
dec
in
shll
rorb
lret
push
jmp
cmp
inc
and
cltd
mov
test
ret
repnz
push
xor
addb
jmp
ret
and
ljmp
inc
lahf
in
xor
cwtl
jle
jns
ds
daa
stc
pop
sub
push
mov
cli
iret
dec
xchg
sbbb
lock
jl
mov
push
mov
popf
loopne
inc
fcoml
xor
push
imul
addr16
dec
icebp
stos
inc
mov
lds
ja
push
sbb
or
add
test
dec
movl
sbb
lock
dec
dec
add
cmpb
pop
push
sub
adc
inc
jg
jo
jl
jne
push
or
xchg
test
inc
shrl
test
rcrl
or
mov
sahf
dec
scas
jmp
add
mov
jne
and
jae
xchg
decl
inc
jno
faddp
pop
mov
pushl
call
imul
leave
pop
mov
mov
inc
pop
jbe
dec
mov
push
das
cmp
lahf
xchg
add
push
iret
cmp
dec
sub
cwtl
or
repz
sahf
mov
mov
push
sub
sub
xor
in
cmp
jge
dec
rcrl
inc
mov
imul
pop
test
mov
push
cmc
adc
xchg
mov
add
dec
pushf
cmp
xchg
movsl
inc
push
lock
stos
adcl
sub
jg
testl
fnstenv
cmp
scas
mov
fwait
mov
and
cmp
sbb
xchg
or
inc
push
inc
cmp
js
repnz
faddl
imul
stos
leave
dec
push
stos
test
adc
sub
inc
imul
jmp
int
test
jne
push
pop
xchg
rclb
sbb
add
loopne
in
filds
sbb
imul
sti
fadd
call
pop
popf
fidivs
mov
pop
push
test
sbb
es
out
mov
test
pop
xchg
sub
in
xor
xchg
fneni(8087
jmp
aam
cmc
adc
xor
cmp
fdivl
add
adc
sbb
fs
pop
out
fisttpl
xchg
call
mov
pop
ljmp
das
pop
hlt
pop
ja
movb
jl
clc
inc
inc
cmp
in
xchg
lock
enter
jl
xchg
bound
and
xchg
dec
popa
mov
jae
dec
sbb
cmp
fimuls
push
dec
cmp
popa
fists
mov
hlt
add
stos
movsl
pop
jecxz
adc
and
cmp
hlt
scas
not
mov
or
jno
out
cmp
and
icebp
sbb
push
icebp
mov
mov
pushf
test
sbb
adc
mov
iret
dec
fs
xor
shlb
repnz
jo
ds
jge
sbb
pop
data16
loopne
adc
add
cmpsb
mov
jecxz
push
fists
mov
sub
call
inc
xchg
mov
xor
xor
mov
pop
sbb
cs
xor
sbb
inc
cltd
mov
out
repz
pop
lret
push
fcomip
mov
sbb
out
test
adc
adc
out
js
int3
es
mov
mov
xorl
sbb
add
and
cmp
sbb
add
or
adc
mov
imul
rorb
or
adc
push
mov
aas
in
dec
and
inc
dec
jecxz
pop
xchg
or
sbb
xor
mov
push
cmp
xchg
outsl
push
push
shrl
and
into
into
test
inc
out
push
es
stos
test
mov
imul
ret
adc
inc
fiaddl
rcrb
sub
shl
inc
sbb
mov
ljmp
push
js
pop
aam
lret
insb
jo
dec
enter
cmp
ds
daa
outsb
or
insl
in
lcall
lret
sbb
outsl
div
loopne
and
add
xlat
mov
mov
xor
xor
dec
mov
icebp
cmp
hlt
cmp
fisubrl
pop
mov
stc
sbb
ror
sbb
ror
push
jl
out
shrl
andb
aam
fiadds
notl
dec
clc
xchg
lods
stos
inc
lds
ljmp
mov
pop
mov
ds
fwait
mov
addr16
clc
out
push
sbb
pop
lock
fisubrs
and
cltd
jmp
fldenv
ret
pop
jg
cmpl
subl
mov
xchg
push
or
mov
roll
mov
fcoms
cmp
push
lcall
mov
popf
stc
mov
mov
cmp
xor
jnp
hlt
rcl
leave
lock
pop
lods
push
nop
popa
mov
push
test
ljmp
and
and
sub
fists
es
cmp
hlt
jecxz
inc
mov
or
fsubrs
repz
mov
xchg
jl
mov
xor
mov
push
leave
lret
ret
mov
or
ds
mov
mov
mov
sahf
pop
dec
repnz
mov
or
mov
in
cmp
xchg
push
repz
mov
jle
sbb
dec
lcall
in
xchg
sbb
iret
jmp
mov
and
loop
sti
pop
xchg
imul
in
xchg
mov
mov
adc
aad
orl
test
test
leave
das
add
cmp
sub
fmuls
sbbb
pop
xchg
int3
imul
addr16
jmp
mov
xorb
scas
rcrb
jmp
mov
fldenv
sbb
lcall
cmc
outsl
jno
fcompl
mov
fwait
mov
jno
push
imull
stc
and
xor
jbe
test
lea
cmp
sbb
pop
mov
cmp
aad
pop
xchg
idivb
jle
xor
jg
cmp
jg
adc
lret
push
inc
ret
cld
cmp
lds
lret
jle
sbb
jmp
xor
and
jmp
incb
cld
into
pop
lahf
dec
test
inc
scas
iret
aad
or
pop
push
jl
scas
into
cmp
dec
mov
out
jge
popf
idivl
jg
sarl
std
add
out
dec
xchg
mov
mov
fdivr
jmp
mov
call
cli
repz
pop
fs
sbb
cwtl
and
add
in
into
sub
xorb
in
mov
mov
incb
cli
fs
addl
xor
andb
mov
fst
ret
mov
es
push
cwtl
jnp
adc
ficoms
lds
cmc
mov
sbb
adc
std
and
xorl
aas
push
outsl
xor
mov
mov
jne
mov
repz
mov
cmp
adc
arpl
adc
lods
in
fs
adc
xchg
loopne
lret
inc
xchg
testl
lods
mov
pop
jle
push
jg
push
mov
lds
add
ja
fs
int3
or
push
mov
or
jnp
out
and
dec
sbb
mov
xchg
clc
fisubs
inc
out
or
xor
lcall
enter
cmp
loope
repz
popa
push
mov
mov
add
enter
mov
andl
inc
jl
sbb
inc
ljmp
and
dec
inc
jp
test
pop
sub
add
mov
pop
sub
scas
inc
inc
add
cli
cmp
xchg
mov
sub
xchg
adc
int
mov
lods
enter
mov
stos
lcall
cmp
jg
pop
jb
test
std
or
push
inc
cmp
je
add
lcall
cmpsb
stc
cmp
xchg
mov
jecxz
mov
aam
leave
adc
adcl
test
push
and
ds
add
pop
ret
lea
fcoml
jecxz
pop
inc
jb
or
cmp
jg
shrb
xchg
inc
mov
pop
fstpl
inc
add
pop
sbb
jns
data16
imul
dec
cmp
or
in
mov
hlt
divl
add
test
jg
das
daa
imul
and
fdivr
or
mov
xchg
add
das
ret
stos
inc
mov
or
xchg
sbb
jnp
mov
cmp
jg
shr
sub
shll
jg
sbb
sbb
jg
mov
push
pop
int
cmp
jp
inc
xchg
adc
xor
shlb
jb
fdivs
iret
ds
cs
push
add
mov
xchg
mov
fdiv
das
cli
ja
les
insl
adc
sub
loopne
add
ret
call
out
ss
ds
xchg
fwait
pop
sbb
call
repz
mov
lcall
repnz
fucomip
sub
ret
subb
adc
fsubrs
enter
mov
cmp
xor
imul
int3
xor
aaa
add
insb
jae
enter
and
test
pushf
push
test
mov
out
gs
ljmp
notb
adc
push
pushf
pop
es
cmpsl
cmpsb
scas
sbb
cwtl
xchg
sti
lods
sarb
mov
xor
repnz
sub
test
in
scas
xor
mov
dec
imul
cs
xchg
or
mov
lock
push
sub
sbb
jmp
mov
ja
shlb
cmp
imul
jae
mov
cmpsb
xchg
sub
mov
mov
push
imul
push
sbb
lahf
lods
mov
adc
cmp
pop
in
adc
jp
aas
popf
adc
xor
int
push
push
shlb
sbb
bound
cmp
push
jbe
pop
cmp
lret
add
outsl
rcll
push
mov
out
sbb
das
jae
pop
fdivl
cmp
insl
popf
sub
inc
jg
cmc
shll
stc
jne
loopne
push
dec
iret
ds
xchg
cli
sbb
mov
mov
insl
mov
lods
sahf
mov
cwtl
adc
shll
inc
xchg
push
jge
out
adc
push
jne
add
out
jne
imul
stos
ds
adc
int
xor
or
mov
add
imul
in
sub
cmp
cld
cld
es
or
std
or
cli
add
loopne
test
sbbl
fwait
fs
dec
pcmpgtw
test
js
sbb
fs
or
gs
movsl
cmpsb
clc
out
imul
lahf
daa
sar
add
and
mov
jno
add
jp
scas
adc
out
les
xor
in
popa
or
adc
ret
das
dec
arpl
subl
push
cmp
and
lcall
push
push
jge
and
sbb
jmp
pushf
clc
daa
stos
and
add
sub
out
jo
mov
stc
data16
test
push
mov
mov
into
ljmp
jg
pop
dec
insl
fsubp
xchg
xor
cmp
mov
push
xchg
fadds
sub
cli
jb
mov
insb
int3
addr16
test
jle
fmul
into
lods
clc
inc
mov
xchg
dec
lret
cld
movsb
icebp
jo
aaa
jno
mov
or
or
lret
jnp
pop
jno
in
xchg
cmp
imul
mov
into
mov
add
fcomps
in
mov
adc
repz
or
fcmovnu
pop
stos
xchg
mov
cs
or
pop
scas
cmp
inc
push
pop
rcrl
push
pop
imulb
sbb
subl
xchg
rclb
fucomip
cmp
mov
aaa
js
push
mov
fmuls
icebp
mov
loop
cmp
pextrw
pop
xchg
cmc
js
fwait
inc
xchg
lock
enter
xchg
mov
jns
push
and
popa
pusha
inc
sub
xchg
in
mov
and
inc
sub
xlat
sub
adc
pop
sarb
xchg
jecxz
cmp
pop
lods
stos
cld
xchg
jg
lcall
dec
inc
loope
inc
cmp
sub
aad
imulb
and
aad
test
jae
fsubs
sbb
add
push
shrb
loopne
test
mov
lds
fcmovb
cmp
inc
cwtl
jo
mov
mov
je
ss
push
and
adc
rcrl
inc
cmp
scas
xlat
pop
hlt
sbb
pop
in
sahf
dec
pop
sbb
nop
scas
lds
cmp
dec
loopne
xor
mov
leave
idiv
lods
mov
mov
lods
lcall
in
mulb
sbb
decl
adc
mov
jns,pn
jae
data16
xor
sbb
and
jp
push
xor
add
mov
cmpsl
cmc
jmp
sub
incl
ljmp
xchg
mov
imul
xor
cmpb
jmp
int3
pop
outsl
negl
sub
mov
sub
xor
push
pop
jo
hlt
cmp
mov
adc
add
cmpsb
in
loopne
inc
int3
btr
add
xchg
into
jbe
movsl
daa
and
movsl
cli
sub
and
lds
fucomp
pop
xchg
negb
or
inc
push
xchg
add
jg
outsb
jg
dec
icebp
push
int
lods
loopne
xchg
orl
shll
lcall
movsl
loope
ljmp
inc
push
sbb
xchg
out
cltd
pop
mov
cs
sub
insl
sbb
push
mov
inc
into
std
inc
inc
adc
xchg
lret
push
fistpll
sub
enter
dec
fstpt
or
rcrb
sub
mov
mov
in
jge
js
pushf
mov
jg
bound
xchg
mov
sbb
fdivl
test
and
test
in
push
push
lods
cmp
pusha
int
mov
fldl
cmp
ret
popa
mov
hlt
push
jae
sub
cltd
stc
jmp
mov
dec
les
lods
cwtl
jl
es
cmp
push
xchg
pushf
enter
ds
arpl
inc
mov
stos
xor
outsl
adc
or
loope
pop
roll
aas
cmc
stos
int
lcallw
es
shll
or
ficoms
add
jb
ds
ffreep
mov
in
xchg
mov
data16
std
js
adc
mov
or
mov
scas
pushf
xchg
idivl
cmp
push
xchg
icebp
test
enter
out
scas
insb
cmp
das
bound
les
mov
xchg
push
mov
mov
jecxz
jae
stc
fdivrs
mov
mov
ss
lcall
pop
mov
mov
ss
adc
mov
lcall
dec
adc
rolb
add
iret
dec
ret
sub
ljmp
inc
jp
fbld
ret
clc
or
sahf
push
inc
cmp
or
mov
int3
adc
fwait
clc
dec
mov
pop
xor
sub
in
and
lcall
aaa
lea
mov
pop
xor
lcall
nop
adc
lods
xchg
jg
pusha
sub
rcll
sub
mov
cmp
jnp
xor
and
scas
and
roll
int3
andb
mov
push
js
daa
nop
cmp
cwtl
ret
lea
xlat
xor
lahf
cld
inc
mov
dec
call
mov
sub
popa
xchg
push
rorb
enter
xor
lret
xchg
je
aad
mov
pushf
add
inc
mov
lock
add
sub
rorb
imul
decl
xor
xchg
ficompl
aam
push
sub
lods
pop
pushf
int3
sub
adc
int
or
jae
es
jmp
imul
fidivrl
ja
js
cltd
hlt
cld
mov
decb
addr16
repz
outsl
cli
pop
gs
cmpsb
aas
inc
in
fnstcw
inc
inc
pushf
jnp
fadds
mov
mov
add
in
loopne
cs
icebp
lea
push
jo
jbe
lds
aad
inc
xlat
add
in
imulb
fcmovb
lods
lret
jnp
mov
bound
jae
movsl
jne
cmp
dec
lds
popa
inc
js
and
inc
sbb
xor
inc
jbe
pusha
xchg
push
sub
push
add
pusha
in
fnstsw
lods
push
mov
jb
rcrb
pop
lods
sub
fisttpll
cltd
iret
dec
mov
push
js
and
jmp
movmskps
mov
mov
push
decl
mov
mov
sbb
inc
sub
jle
sbb
test
je
or
mov
pop
sbb
imul
add
addb
sbb
pop
call
outsl
cmp
imul
jecxz
int3
jecxz
sbb
in
pop
scas
lret
mov
pop
cmp
dec
mov
dec
xor
sbb
iret
ljmp
adc
push
mov
adc
mov
xor
stc
dec
xchg
cwtl
sbb
cmp
mov
lcall
add
sbb
divl
cmp
sub
bound
or
pop
mov
sahf
negb
insb
aaa
push
xor
dec
jne
inc
pop
sbbl
push
inc
push
pushf
dec
jb
push
movsl
lret
or
out
lods
push
mov
repnz
mov
imul
sub
outsl
jbe
or
test
mov
call
notb
pop
cmc
pop
mov
subl
mov
inc
mov
insb
pusha
clc
call
imul
fs
repz
nop
or
daa
jbe
inc
stc
aas
fwait
bnd
ds
jae
mov
jnp
pop
gs
dec
aaa
and
add
cmovno
mov
pop
jmp
push
pushf
jmp
cmc
inc
push
dec
lods
aas
fs
call
cwtl
jmp
xlat
sbb
cmpsb
and
stc
ret
lret
jmp
inc
mov
pop
outsl
lcall
or
xchg
adc
dec
lahf
data16
test
cwtl
cmpsb
mov
subl
test
add
out
push
add
pop
mov
sub
jle
js
inc
mov
jge
in
orb
or
in
std
cmpsl
cmc
into
push
loope
daa
cmc
popa
cmp
xchg
or
fdivs
std
dec
push
adc
pop
mov
popf
jns
hlt
popa
mov
cld
sub
pop
stos
pusha
jg
test
jge
aaa
jmp
out
inc
ret
pop
mov
in
push
sbb
dec
ss
push
adc
or
cmp
sub
leave
lods
pushf
rolb
ja
insl
aam
lea
test
idivb
push
mov
pop
push
cmp
imul
cmp
ret
lcall
sub
jp
bound
add
adc
loope
lcall
sbb
or
inc
repnz
clc
js
daa
jecxz
dec
push
movsl
stc
dec
or
es
je
sub
outsb
jp
lahf
or
sub
xor
xchg
push
lret
xchg
xor
mov
push
jecxz
movsb
inc
xor
divb
cmp
xchg
xor
repz
lret
loop
pop
dec
lret
lods
add
pop
movsb
sub
cltd
cmp
test
mov
fsubrp
jp
jb
jno
mulb
cltd
or
mov
int3
pop
mov
mov
int
fildl
insl
jae
sahf
movsb
or
mov
or
mov
sub
pushf
pusha
mov
ret
and
sti
jmp
js
mov
mov
mov
dec
movsb
test
fidivrl
mov
mov
xor
cmpsb
pop
push
cld
adc
addr16
or
repz
out
sbb
cmpxchg8b
enter
dec
aam
imul
aaa
dec
pushf
sub
mov
sarb
repz
mov
add
out
fstpt
es
es
lret
into
outsl
add
or
xor
and
scas
add
jmp
add
lods
and
pusha
mov
add
mov
dec
xlat
fisttpl
aas
loopne
clc
sub
test
shlb
movsb
xlat
xor
jmp
imul
fnclex
loope
cmp
dec
pop
test
adc
sbb
sbb
inc
xchg
enter
and
fsubs
push
sub
add
push
arpl
cmc
imul
into
enter
push
dec
mov
inc
xor
adc
add
jge
stos
cmc
mov
testl
push
out
mov
aad
test
xlat
pop
loop
adc
cmp
fwait
sbb
iret
sub
das
cmp
add
pusha
out
jecxz
mov
repz
ja
std
cltd
mov
fsubrl
push
repnz
repz
adc
rep
xchg
int3
adc
ret
std
xlat
jecxz
xchg
rclb
mov
and
sbb
xchg
scas
sbb
hlt
insl
pop
mov
js
in
and
cmp
std
jnp
adc
fmuls
in
addr16
cmp
and
jnp
addl
push
push
pusha
jle
out
ljmp
mov
fiadds
outsl
shll
aam
pop
loop
sub
test
inc
insl
lea
pop
cmpsl
jmp
inc
inc
sarl
fwait
ss
fs
inc
jo
adc
lret
mov
pusha
sbb
xchg
jae
push
pop
pop
adc
loop
cmp
cmp
gs
mov
negb
push
xchg
cli
adc
jb
sub
pop
mov
imul
fstpl
mov
and
iret
xor
jo
les
mov
sti
leave
xor
icebp
lret
dec
rclb
ljmp
mov
in
fcoml
in
bound
mov
cmp
inc
mov
mov
ret
xchg
add
or
cmpsl
daa
add
xchg
ljmp
mov
xchg
insb
sub
out
sub
jae
fisubrs
jle
jle
push
cmp
lret
cmp
ja
xchg
lods
pop
xor
cmp
xchg
and
xor
repz
iret
int
mov
xchg
and
xor
sub
add
dec
pop
jp
loope
mov
add
adc
sub
outsl
gs
pushf
decb
jns
dec
mov
jle
pop
sbb
popa
in
ror
fwait
inc
lock
jge
pop
cld
hlt
mov
cli
mov
or
das
push
dec
lock
mov
lds
xor
jle
inc
dec
ss
xchg
sbb
divb
out
xchg
imul
movsl
cmp
roll
aad
cltd
push
scas
cltd
mov
lds
sbb
xor
into
adc
xchg
std
ja
lods
dec
xlat
pushf
ljmp
xor
mov
pop
cmp
insl
out
add
push
cmpsl
ror
and
loop
sti
mov
and
jbe
imul
sub
and
mov
das
mov
loopne
pop
ret
sub
jl
or
loopne
jno
sbb
push
ja
or
out
adc
fwait
mov
jecxz
mov
popa
xchg
cmpsl
hlt
cmp
push
das
cmp
shl
add
lds
push
aaa
cmp
fiaddl
inc
or
arpl
xchg
lahf
sub
jo
or
sub
test
mov
and
sbb
in
add
fidivl
mov
shrb
sahf
int
sbb
js
icebp
dec
sbb
pop
mov
sbb
je
sti
in
sahf
jmp
repnz
mov
xorl
dec
mov
inc
xor
arpl
jp
dec
icebp
cld
ja
push
cmp
pop
loop
enter
push
jl
shrb
loopne
rolb
sti
cmpsl
sub
aad
pop
mov
xor
aam
or
sub
test
and
icebp
out
dec
xor
ss
nop
sbb
jno
adc
mov
cltd
xor
pop
pop
ficompl
and
test
cmp
rorb
inc
adc
test
dec
ret
lret
ret
int
shll
push
sbb
in
int3
xchg
dec
addl
inc
cmp
les
das
cltd
ljmp
insl
mov
mov
mov
mov
adc
test
shll
sub
xor
movsl
fcomps
sub
gs
jno
lods
mov
insb
sbb
mov
push
inc
clc
popa
cwtl
xor
in
dec
xchg
xchg
add
xchg
daa
fs
xchg
jge
add
ja
popa
adc
fwait
or
dec
clc
xchg
filds
and
sbb
in
imul
push
pop
sub
mov
xchg
addl
mov
dec
pushf
mov
adc
inc
imul
jl
jl
inc
std
pop
nop
jae
pop
lahf
mov
add
sti
aad
call
stos
push
dec
cmp
push
pop
jge
mov
out
das
cmp
sahf
dec
push
jge
mov
mov
cld
xor
jp
push
loopne
insl
pop
cmp
jle
inc
adc
mov
cmp
lock
lea
and
jge
jp
xor
psrlq
lods
cmp
dec
insb
push
es
in
xchg
ja
pop
cmc
insl
cmp
dec
repnz
mov
icebp
xchg
rcll
enter
popa
pop
jns
inc
rorl
movl
scas
and
add
shll
push
nop
xor
data16
adc
dec
inc
jmp
flds
ret
inc
lods
stc
popf
hlt
or
add
xchg
into
mov
xor
mov
adc
xor
mov
lods
add
daa
mov
sub
ljmp
fsts
out
dec
jmp
mov
in
xchg
push
test
xor
clc
pop
mov
jo
in
mov
jge
iret
ds
add
mov
inc
inc
adc
ret
clc
pushw
clc
adc
test
cmp
cmpsl
cmovb
fadd
shll
fmuls
mov
push
scas
pop
add
jecxz
xchg
mov
mov
xchg
sbb
cld
pop
andb
sub
ds
push
bswap
and
mov
or
xchg
sbb
push
aas
mov
inc
cmc
xchg
jo
push
jl
or
mov
pushf
rcll
inc
jb
adc
adc
and
jmp
mov
fcom
push
sub
out
xchg
xor
fnstenv
das
xchg
call
adc
sbb
pop
cli
in
adc
xor
test
pop
mov
xor
sarl
ljmp
cmp
push
lahf
cli
std
es
push
pushf
push
xor
and
mov
adc
mov
cmp
xor
sub
jge
adcb
adc
fidivrs
inc
sbb
cmp
jnp
inc
cli
rolb
jle
popa
pusha
in
dec
pop
addl
xor
mov
in
mov
or
adc
or
clc
scas
inc
jne
mov
push
das
mov
mov
jnp
enter
add
pusha
icebp
add
out
inc
xchg
mov
inc
subl
shl
out
xor
les
mov
add
shr
xor
mov
lret
inc
add
in
out
xchg
pop
loopne
iret
pop
mov
test
out
out
xchg
rep
sub
fldcw
jne
xchg
gs
dec
push
js
push
out
mull
or
and
adc
dec
sub
inc
fiaddl
jmp
inc
mov
daa
cmpb
in
test
mov
mov
push
shrl
jl
jl
sub
push
les
clc
push
sbb
xchg
mov
imul
imul
xor
jo
push
cmp
adc
push
add
icebp
jmp
sub
sub
cmp
cltd
jae
les
aam
imul
ret
in
or
cmpl
pop
mov
mov
rorb
push
out
faddl
mov
inc
cmpsb
test
popa
xchg
mov
popa
pop
pop
mov
adc
and
pop
aam
shr
imul
stos
pop
aad
jecxz
adc
in
cmp
sahf
adc
test
push
mov
dec
pop
clc
xor
loop
sbb
and
icebp
sbb
test
pop
aas
js
jp
sbb
inc
add
lahf
fbstp
and
iret
mov
fistpl
sub
cwtl
iret
fildll
xor
push
push
dec
dec
loop
jecxz
and
push
and
xlat
scas
in
in
mov
popf
imul
push
pop
mov
mov
test
cwtl
sbb
mov
pop
insl
out
test
mov
inc
je
icebp
sub
push
adc
jmp
int3
bound
pop
sub
lods
pop
outsb
outsb
int3
test
cmp
add
mov
lret
sub
hlt
aaa
sub
stc
sub
faddl
mov
adc
stos
movsb
dec
cmp
inc
pop
sub
add
fiadds
push
cs
push
int3
cmpb
jb
push
clc
and
cmp
adc
and
lods
stos
out
dec
test
lods
cltd
sub
push
incl
pop
jae
cmc
xlat
xor
xlat
xor
push
addl
dec
enter
cmpsl
shll
push
sahf
sbb
lods
clc
xor
xchg
jp
popf
xor
aaa
mov
cld
push
arpl
nop
mov
jne
and
sarl
ljmp
push
out
cmp
sub
in
lahf
mov
jge
push
jl
lret
int3
push
mov
mov
sbbb
xchg
icebp
xor
test
cwtl
jmp
push
push
or
or
sbb
cmpsl
pushf
push
sub
and
lods
adc
adc
lret
xchg
je
daa
ret
sbb
stc
adc
mov
pop
push
lcall
push
repz
sub
pop
xlat
mov
jmp
ret
hlt
jmp
stc
cwtl
lcall
popf
notl
enter
xchg
cmp
aam
adc
cmc
and
and
orb
scas
cmp
lea
jnp
mov
sbb
sbb
iret
dec
and
mov
push
push
jmp
call
xchg
out
xor
fucomip
mov
xchg
cwtl
add
sbb
fucomp
mov
rcrl
jmp
pop
std
repz
outsb
xor
cmpsl
fnstcw
rcrl
movsl
lahf
inc
aaa
adc
jg
adc
xchg
pushf
loope
sbb
les
leave
adc
and
sahf
add
dec
sub
cli
mov
adc
push
mov
aad
cs
loope
dec
fmuls
jp
cmpsl
cvtps2pd
cli
mov
sub
ja
sbb
adc
insl
sbb
xor
push
add
pop
inc
pop
adc
cs
jbe
and
adc
push
sbb
mov
push
xchg
and
insl
dec
fsubr
or
cmp
mov
mov
addb
lret
mov
mov
adc
std
dec
xor
sub
lret
ljmp
sub
inc
sbb
mov
scas
sbb
jmp
and
dec
popl
nop
inc
fcom
mov
movsl
shll
inc
outsb
sbbl
mov
test
fildl
nop
mov
popa
or
mov
clc
sysexit
jecxz
adc
fsts
lret
lock
inc
lahf
js
pop
xchg
lret
mov
xor
adc
repnz
scas
int
jne
lods
sub
lret
test
pushf
loope
loope
divl
clc
xor
out
inc
and
loope
ds
in
test
mov
adcb
push
fistpl
pop
les
or
inc
gs
cmc
mov
mov
jg
or
mov
and
xor
or
sahf
ror
lret
stos
outsb
xor
data16
pop
stos
fnstenvs
sbb
fsub
aam
dec
cld
dec
out
push
adc
out
imulb
or
or
loopne
inc
loop
push
mov
or
mov
stos
cwtl
lahf
int3
ljmp
sbb
dec
fists
ss
jns
or
xor
es
add
jno
test
inc
push
rclb
sbb
js
aam
mov
xchg
cmpsb
mov
das
push
mov
nop
pop
shl
jo
xchg
mov
adc
fwait
jge
sbb
jo
filds
push
neg
fs
stos
pushf
fiaddl
sub
sub
mov
jle
xchg
push
jne
out
cld
add
out
sub
int3
jns
mov
inc
push
out
add
adc
or
pop
in
sbb
sub
dec
scas
gs
xchg
inc
xchg
dec
fsubrl
ret
xor
mov
repz
xor
cmovbe
test
mov
stos
push
outsl
push
das
sub
sub
repnz
imull
push
xlat
fwait
or
jbe
mov
lcall
jmp
jg,pn
jb
call
movsb
aas
or
sbb
iret
fisubs
and
mov
imul
push
sub
or
jne
push
addl
mov
rcl
cmpsl
addr16
flds
mov
inc
mov
mov
pop
or
mov
or
in
push
shlb
xor
in
iret
push
sahf
sahf
adc
mov
jae
jg
cmc
mov
pop
or
flds
mov
gs
mov
dec
jo
mov
mulb
sbb
xor
pop
xor
mov
and
ret
leave
add
in
add
mov
das
popa
xchg
cmp
cmp
mov
jnp
inc
faddl
out
mov
pusha
inc
mov
shlb
adc
mov
pop
mov
pop
testb
xor
dec
fisubl
xchg
stos
and
jl
imul
mov
pop
call
out
pop
and
loopne
lahf
call
jbe
jge
aad
lahf
call
rorl
rcrl
ret
dec
push
test
aam
pop
pop
mov
push
xchg
in
adc
jns
faddl
subb
adcb
rcrl
int
mov
pop
dec
bound
fbld
sub
push
xor
push
rolb
mov
inc
popf
in
xchg
das
mov
add
cmp
pop
into
fstl
fldt
subb
popa
clc
or
push
ret
gs
outsl
out
push
mov
inc
jbe
pop
clc
jmp
xchg
or
scas
adc
mov
dec
movsl
test
hlt
jp
test
les
jo
fisubs
mov
mov
mov
fidivrl
lret
pusha
pop
dec
cmp
ss
lods
repnz
add
icebp
xor
xchg
push
push
int3
or
sbb
roll
and
cld
ss
sub
fdivl
cltd
sbb
or
mov
push
insb
jae
movsb
sar
test
pop
and
ud0
movsl
cli
mov
stos
iret
mov
mov
lret
or
pop
push
lock
clc
pop
cmp
jge
subb
iret
mov
inc
adc
gs
fmuls
imul
or
shlb
lret
and
repnz
inc
xchg
cmp
repnz
lods
push
aaa
xor
cmp
das
lods
out
cmp
in
sub
inc
dec
mov
aad
xchg
aam
jb
pop
iret
jb
cmpsb
jg
fs
sub
mov
cmp
sbb
or
and
hlt
inc
lahf
jge
push
push
push
xchg
pop
inc
push
xor
push
loopne
lea
cmc
ret
jl
ds
decl
mov
shrl
push
mov
popa
adc
adc
or
mov
arpl
push
int3
call
dec
or
sub
sub
in
jle
outsb
sbb
pop
mov
in
xor
hlt
or
inc
cmp
cmp
push
and
dec
test
push
ds
sbb
cltd
icebp
ss
xchg
imul
dec
cmp
jge
lcall
dec
fstpt
mov
dec
xchg
push
inc
lcall
mov
mov
mov
int3
xchg
cli
popa
xchg
and
mov
test
sbb
into
cmpsl
loopne
sub
push
lods
jne
and
sub
sub
pop
xchg
mov
das
daa
and
out
std
gs
lret
out
das
sbb
lds
insl
xor
sub
lahf
mov
xchg
dec
pop
movsb
mov
xor
xchg
insl
addr16
sarl
sbb
jns
pop
pushf
jb
mov
scas
or
xchg
mov
inc
outsl
rorb
or
push
loope
mov
mov
pusha
jnp
lahf
scas
pop
add
scas
dec
cli
xor
mov
insb
push
jbe
pop
sbb
test
jno
arpl
xchg
jbe
pushf
or
mov
stc
je
jb
xor
mov
xchg
lret
test
add
inc
fisubl
adc
xor
pop
dec
in
sub
push
push
loopne
aaa
dec
push
sti
inc
sub
sti
outsl
aaa
popf
sbbl
loope
sub
out
sbb
mov
jne
inc
popf
sub
cmp
xchg
pop
xchg
sub
or
jecxz
add
insl
xchg
ja
fxch
loop
cmp
in
scas
dec
ret
cmp
imul
int3
or
add
shr
cmp
xchg
push
xchg
push
and
jns
insl
fwait
sbb
outsl
cmp
outsl
mov
sahf
mov
cld
repnz
dec
add
pop
sub
imul
mov
int3
test
icebp
jo
mov
cwtl
sub
mov
and
sbb
clc
add
lret
mov
out
inc
and
fwait
mov
push
mov
movsb
iret
sbb
push
std
movsl
ror
jg
cmpb
jnp
add
pushf
sbb
rcr
cmp
and
mull
hlt
xchg
pop
outsl
movsl
dec
call
loopne
shll
mov
pextrw
add
rcr
lret
cmpsl
jp
dec
mov
aam
cli
movsb
mov
sub
adc
xchg
jo
sbb
sub
xchg
stos
add
xchg
lds
push
fsub
sbb
insl
push
push
or
repz
xchg
stc
mov
in
in
xchg
scas
inc
push
test
dec
mov
or
into
push
jecxz
sub
mov
shl
shlb
xor
pop
cmp
mov
das
sub
sub
cmp
std
loopne
faddl
enter
jnp
test
mov
sub
pop
pop
cwtl
jge
cltd
insl
xchg
jmp
stc
testl
leave
aaa
sub
and
add
pop
sti
movsl
dec
push
push
push
add
ficoms
lock
mov
rorl
rorl
es
or
outsl
xlat
jecxz
out
fnsave
adc
and
mov
out
lret
jg
mov
fwait
xchg
clc
jmp
xchg
xchg
xchg
xchg
mov
lahf
test
adcl
mov
pushf
es
add
dec
xchg
dec
nop
fisttps
std
mov
sub
test
jnp
add
xor
out
and
and
sub
lods
dec
mov
cltd
fmull
je
adc
xor
xchg
xor
cmp
xchg
ss
rcrl
dec
mov
sahf
pop
arpl
and
sbb
and
leave
negb
push
mov
das
add
add
pop
cld
inc
dec
fbld
xchg
mov
sub
dec
sbb
fsub
or
ss
pop
lds
add
out
push
leave
mov
shr
jo
push
into
mov
cmp
or
cmp
in
adc
or
pushf
cmp
popf
and
push
test
iret
add
mov
incb
popa
push
cmp
inc
sti
test
xor
aas
pop
stos
jns
xor
pop
and
stc
inc
outsl
and
jns
and
adc
inc
cmp
mov
dec
stc
or
push
test
or
fimuls
les
push
xchg
push
fdecstp
adc
adc
mov
and
stos
sub
mov
sub
jmp
jb
hlt
sub
in
out
int
jno
lahf
sub
sbb
cmpsl
xlat
call
jo
add
push
out
or
mov
cli
pop
xor
or
xchg
cmp
jge
inc
ss
rcr
sub
loopne
test
fnstenv
mov
jnp
jge
ret
xor
adc
cmp
out
sub
cmp
adc
jb
sub
pop
aaa
jmp
leave
int
out
dec
aas
or
mulb
stos
mov
gs
dec
cmp
jmp
xor
xor
out
cmp
ficomps
outsb
adc
in
push
addl
lcall
xchg
pop
fstl
cmp
ret
lock
outsl
jmp
icebp
xor
jne
icebp
pop
xchg
imul
push
ret
xchg
pop
mov
xchg
stos
inc
ljmp
lret
loop
dec
adc
adc
rep
gs
push
pop
inc
insb
mov
cmp
add
aas
popf
add
add
pusha
lret
or
in
fucomp
out
jmp
cltd
fbld
mov
aas
sbb
and
in
pop
lock
cli
imul
dec
fwait
push
xor
mov
jle
xchg
popa
push
pop
pop
inc
inc
je
mov
mov
mov
ja
jp
insb
insb
out
mov
jnp
adc
mov
sbb
enter
push
xchg
in
aad
xor
ds
or
lods
sub
dec
scas
into
loopne
jge
pop
aad
xchg
jmp
sbb
subb
shrb
lods
dec
mov
jl
or
stos
adc
jecxz
pusha
rcr
loopne
mov
sub
pusha
adc
push
daa
xchg
dec
mov
mov
fwait
sub
cli
xchg
test
std
or
imul
arpl
adc
lret
stc
lods
adc
mull
or
loope
cmp
push
xchg
push
mov
outsb
in
or
or
pop
mov
xchg
pop
fcoml
jae
scas
sti
mov
sbb
mov
repz
add
pop
popa
add
lcall
icebp
add
shlb
jae
xlat
mov
add
cmp
in
sbb
xor
inc
aam
lea
pusha
outsb
mov
xchg
xor
testl
bound
mov
cmc
and
adc
rclb
adc
stos
das
mov
imulb
inc
mov
jno
clc
shlb
xlat
mov
fildl
gs
pop
pop
sbb
or
or
adc
and
int3
cmp
jmp
mov
out
inc
add
xor
imul
mov
cmc
or
inc
xor
movsb
jg
mov
mov
mov
into
icebp
scas
iret
sbb
sbb
push
xchg
into
cwtl
call
mov
inc
shrl
sbb
loopne
sub
scas
inc
jns
fists
test
loope
fildll
cld
push
insb
dec
sub
rcll
sbb
dec
pxor
jge
shlb
popf
in
mov
add
dec
xor
cld
push
shlb
out
and
std
mov
cmpsl
cwtl
dec
pop
xchg
lahf
repnz
mov
outsb
lret
push
sub
dec
movsl
dec
mov
cli
xor
repz
add
ljmp
das
or
mov
inc
pop
mov
lcall
xchg
xor
mov
mov
push
ds
stc
leave
insl
or
loope
jnp
icebp
cmc
fdivs
jge
nop
dec
fwait
jne
scas
rorl
dec
loopne
pushf
in
push
pop
js
adc
xchg
xorl
adc
cmp
xchg
pop
mov
lahf
ret
mov
xor
lea
jmp
fwait
call
lahf
sub
fs
loop
std
inc
jmp
js
add
jp
fidivl
jecxz
and
and
adc
movsl
popf
pop
ds
enter
pusha
jbe
cmp
xorb
or
and
push
pop
ss
push
pmaxsw
add
sub
xor
sahf
fadd
xchg
adc
xchg
pop
je
mov
mov
jle
aad
dec
mulb
cli
out
inc
cmp
sti
out
stc
pop
or
mov
mov
out
lock
push
out
fiadds
pop
sbb
movl
cld
push
sbb
push
test
jge
fcomi
mov
sbb
fnstsw
icebp
jne
inc
jns
insl
push
mov
jge
add
or
inc
or
scas
mov
lds
shrb
add
aad
aam
popa
sti
or
stos
repz
cld
loop
sbb
test
jg
fmuls
mov
pusha
ds
mov
pop
lds
inc
sbb
or
push
lds
pushf
adc
push
bound
hlt
inc
add
sub
loop
icebp
ffreep
cmp
inc
aam
dec
ja
push
pop
data16
add
nop
stos
cmpl
sarb
ret
flds
xchg
mov
push
call
stos
jl
cli
cmp
xor
cmpsl
push
imul
shrl
stos
cmpsb
add
lcall
push
dec
and
ljmp
in
imul
pop
sub
or
push
adc
push
dec
arpl
fmul
scas
cmp
jnp
inc
sahf
mov
emms
pop
popa
js
push
inc
int
jne
cmpsb
mov
cld
sbb
sub
call
cltd
in
pusha
jno
ljmp
repz
shrl
pop
inc
lret
mov
leave
outsb
orb
xlat
rcl
js
mov
pop
push
imul
ss
imul
fs
dec
push
dec
mov
leave
test
jmp
jg
call
inc
xchg
jmp
fwait
pop
int3
cmpsl
xchg
add
inc
add
pushf
sbb
dec
and
int
jae
mov
mov
nop
add
inc
and
pop
test
and
popa
adc
mov
mov
cmpsb
sub
jno
jno
jmp
test
mov
push
adc
xor
rorl
inc
add
mov
push
movsb
cld
ja
pop
push
sti
pop
out
jl
mov
xlat
dec
and
pop
inc
scas
sbb
ficoms
fistps
mov
loopne
and
fidivrs
cmc
shll
jns
cmp
xor
pusha
xor
mov
movsl
sub
lea
outsb
or
inc
xchg
xor
adc
in
pop
out
or
pop
ljmp
shlb
xlat
mov
stos
cmp
icebp
insb
leave
out
or
dec
ljmp
mov
pop
sti
in
out
sbb
push
test
outsl
loope
cmc
out
cmp
xor
mov
test
mov
jl
push
lahf
clc
sbb
cmp
repnz
repz
mov
arpl
jo
shrl
hlt
jns
cmp
es
push
popa
push
xchg
jns
fildll
rcrl
insl
pop
mov
ss
mov
sbb
xor
push
test
pop
movb
pop
in
shlb
test
and
xlat
adc
mov
addr16
shlb
and
sarl
dec
jp
bound
adcl
cmpsl
pop
push
lret
and
adc
or
fisubs
inc
leave
push
mov
cmp
mov
push
push
out
inc
test
enter
cmpsb
repnz
sbb
add
dec
mov
push
shl
jo
inc
mov
fs
cmp
mov
das
inc
je
fimull
lods
pop
and
jp
pushf
adc
insl
sbb
cmp
je
inc
clc
push
mov
mov
fcmovnbe
popf
pop
mov
aam
ja
push
inc
clc
jg
into
fnstcw
std
jg
jno
out
ret
xor
sbb
pop
test
test
outsb
xor
addr16
stos
mov
xor
aad
xchg
push
pop
and
pop
test
pop
mov
push
stos
ja
sti
loop
stos
sbb
jecxz
hlt
fwait
jbe
in
rcl
mov
push
orb
jp
cmp
in
std
or
ror
jp
data16
inc
call
cmc
pop
sub
or
das
out
lret
imul
mov
fists
add
jae
add
decb
or
fdivrs
ja
adc
aam
psllq
ss
mov
jno
push
xchg
jbe
mov
aas
lcall
sbb
dec
mov
fisttps
adc
lods
pop
pop
stos
adc
xchg
xor
mov
shl
loop
adc
pop
daa
sbb
xor
mov
gs
mov
lret
test
arpl
ljmp
aad
je
pushf
and
pushf
and
dec
and
push
sbb
gs
cmp
mov
and
fwait
ja
data16
addr16
sbb
xor
cmpsl
mov
popf
sbb
aas
popa
ds
jno
or
mov
jp
ficomps
push
mov
push
outsl
dec
mov
call
mov
icebp
add
icebp
pop
cmc
fidivl
pop
dec
lcall
mov
les
add
aaa
fnstsw
mov
mov
cltd
adc
sub
xchg
pop
xor
enter
lahf
js
clflush
push
pop
fidivl
in
cld
xchg
lret
testl
push
shr
setne
jg
daa
es
pop
push
nop
mov
mov
and
jge
jl
dec
out
in
xor
pop
call
daa
out
mov
loopne
sarb
mov
lds
mov
or
aas
je
mov
leave
inc
adc
divb
push
lcall
lcall
jle
cs
xor
xchg
pop
inc
insb
call
push
sub
cmp
cmp
enter
mov
dec
insl
or
lahf
ja
xor
leave
std
push
jno
rcl
inc
and
outsb
inc
mov
testl
push
and
sbb
in
shll
cld
push
mov
arpl
push
mov
cwtl
and
pop
lret
cs
lods
add
lods
add
lea
sub
xor
push
inc
push
xor
cmp
scas
inc
rclb
std
test
or
je
push
test
scas
inc
int
xchg
adc
push
lahf
dec
lcall
out
cmp
and
mov
pop
aaa
push
or
aas
mov
mov
or
movsb
out
pop
xchg
mov
push
push
mov
movb
clc
jb
dec
xchg
jne
add
jno
in
mov
mov
clc
mov
inc
loop
movsb
mov
and
cmc
fmuls
iret
xor
popa
addr16
lret
push
and
xor
pop
and
lret
xor
or
les
inc
out
mov
mov
mov
mov
mov
pop
addr16
jno
adc
stos
push
loop
mov
cmp
cmp
jmp
movsl
push
scas
sub
aaa
mov
adc
fnstenv
sub
aaa
or
lds
xor
adc
fsts
dec
test
mov
dec
xchg
and
icebp
push
outsb
cmp
sub
les
adc
fdivr
mov
rcr
mov
push
xchg
dec
sub
icebp
jnp
adc
sarb
out
in
shlb
jecxz
jmp
mov
xor
mov
mov
addr16
adc
sub
icebp
push
gs
in
push
dec
or
aas
sarb
xorl
inc
inc
mov
xchg
add
dec
popa
popf
aas
ud2
std
dec
sbb
inc
xor
daa
outsb
sbb
jge
nop
mov
loop
pop
push
mov
flds
jns
mov
xorps
jge
cmp
fmull
outsl
adc
xor
inc
push
mov
add
divl
popf
stos
xor
ja
out
pop
xor
xor
repz
or
addr16
ret
out
pop
sub
mov
and
in
call
mov
rorb
cltd
and
into
ret
cli
pushf
jnp
jl
mov
add
sub
xlat
pop
and
cmc
push
andb
lret
cmp
je
mov
out
test
xchg
dec
dec
test
push
outsb
cmp
sbb
outsb
inc
inc
jecxz
mov
pop
cmpsb
ljmp
jbe
sub
das
push
mov
lret
cmp
jmp
sbb
sub
xchg
icebp
xor
ljmp
dec
repnz
jp
and
fwait
mov
out
repnz
ss
jge
xlat
aas
or
test
test
lcall
enter
xchg
xchg
xchg
addr16
jnp
fisubl
imul
ror
push
or
rolb
or
ja
rclb
fsubs
sub
mov
enter
push
mov
dec
jl
mov
or
mov
or
imulb
aad
and
push
ffreep
divl
cmp
cmp
xchg
inc
xchg
movl
movsb
sbb
iret
inc
fmuls
mov
orps
pop
mov
add
test
sub
sub
adc
xchg
test
sub
xchg
cmpsb
clc
jl
outsb
jge
mov
inc
scas
div
int3
out
inc
iret
rcll
push
dec
jg
bound
test
jle
hlt
loop
sti
pop
adc
xor
test
sub
push
or
stos
xchg
jle
adc
jo
xlat
data16
fucomp
ret
cmp
sbb
lcall
adcl
mov
adcl
out
jg
test
ret
push
aas
insl
sub
xchg
les
mov
cmp
mov
cs
into
test
in
cltd
sbb
andb
movsl
xor
cmc
mov
pushf
cmp
bound
xlat
es
ret
push
jnp
test
repz
adc
or
movsb
hlt
adc
jge
jne
in
es
mov
jno
jle
in
sub
iret
int
push
xchg
dec
inc
enter
xor
push
mov
cwtl
sub
test
mov
inc
popf
std
jb
cld
scas
in
aad
lds
mov
mov
orl
adc
or
iret
pop
gs
inc
jmp
mov
out
incl
fstpt
in
dec
push
test
sub
data16
adc
pushf
loop
pop
pop
insb
dec
lcall
mov
and
std
call
sub
arpl
sti
mul
pop
jb
lret
pop
xchg
repnz
and
mov
mov
ljmp
inc
xchg
cmp
movsl
lahf
sub
cltd
rorb
lret
mov
add
fistl
mov
imul
inc
les
in
icebp
dec
sub
or
mov
xorb
std
inc
std
fisubrl
jo,pn
adc
inc
jg
pop
stos
pop
adc
add
lcall
sbb
xchg
or
adc
addr16
add
sub
sub
mov
mov
loope
sbb
cmp
adc
mov
mov
in
inc
add
push
movsl
shrb
out
lea
lret
out
adc
daa
movsl
mov
sbb
jnp
cmpsl
scas
mov
and
jg
dec
ret
mov
or
clc
mull
dec
dec
out
jle
jnp
imul
mov
mov
lock
int3
aam
ret
mov
jmp
shll
and
roll
out
rcrl
lods
sub
das
lds
subl
in
push
push
pop
jmp
jo
outsb
adc
cwtl
jbe
sbb
insl
out
sub
loope
mov
nop
pop
jmp
pop
ja
sti
inc
cmp
and
push
fwait
dec
shl
xchg
in
les
dec
or
pusha
ret
clc
mov
imul
popa
inc
xor
push
fdivs
adc
incb
jle
xchg
negl
xchg
scas
movsb
rcrl
pop
aas
jge
les
outsl
in
popa
das
xchg
or
xor
loopne
pushl
inc
mov
test
aaa
stos
cli
enter
fbstp
cwtl
shl
mov
aaa
popf
rcr
int
mov
jns
mov
mov
jmp
movsb
pop
hlt
shrl
jl
loop
imul
adc
andb
mov
out
stos
aaa
dec
mov
lea
adc
sub
lods
sbb
insb
iret
stos
adc
dec
fwait
cmpsb
pop
shll
ss
jae
repz
aad
add
push
cld
dec
or
scas
adc
mov
jne
jae
jns
popa
into
js
lret
add
sub
push
repnz
fcmove
mov
mov
mov
ljmp
push
out
xchg
stos
lods
movsl
jge
and
push
ja
shll
lret
push
aam
jl
int
fwait
inc
dec
repnz
fwait
popf
xchg
mov
xchg
mov
ss
mov
fs
push
xchg
mov
test
sti
xchg
aaa
fs
adc
aaa
fwait
jne
popf
jle
fists
xor
cmp
add
pop
push
jp
jae
es
ss
je
cmpsb
lds
dec
adc
sbb
and
filds
pop
mov
push
jnp
sub
sbb
test
outsl
or
popa
mov
inc
repz
fcomi
mov
jmp
clts
jge
ss
mov
out
aad
pop
out
xchg
push
pop
pop
lea
cmc
cmp
mov
outsb
cwtl
js
lret
ret
jo
xlat
xchg
or
jge
fsub
cmp
mov
xchg
push
outsb
int
sub
lods
jne
push
mov
cmp
or
pop
pop
shlb
imul
sbb
sub
lods
stc
lahf
in
cmc
mov
lret
jle
xlat
loopne
push
out
fisubs
mov
mov
cmpl
cmp
xchg
xchg
mov
je
movsl
jge
push
rcrb
psllq
outsl
ljmp
and
mov
mov
in
fistps
pusha
mov
xchg
es
cmp
movsl
ja
lock
push
xchg
adc
xlat
hlt
frstpm(287
test
enter
out
and
adc
cmp
les
in
sub
les
xor
dec
call
test
repz
in
adc
xor
fs
dec
bound
sub
addr16
xor
cmpsb
fcmovnu
sub
inc
stc
fnsave
aaa
test
add
ja
mov
cmp
xchg
or
lret
and
mov
and
aaa
inc
call
xlat
jl
icebp
sbb
data16
mov
mov
lods
cltd
clc
cmp
loopne
xor
ret
or
xor
mov
orb
sbb
mov
sbb
pop
popa
push
lahf
aad
into
mov
mov
cmp
cmp
jb
dec
sbb
lret
pop
pop
xor
dec
sub
aad
push
daa
loopne
mov
mov
sbb
iret
or
mov
xor
in
popa
xchg
sub
push
mov
xchg
mov
jl
gs
sbb
sub
push
enter
or
jnp
addr16
push
ja
sub
test
test
and
cwtl
rorl
push
scas
and
les
insb
out
add
shll
adc
das
out
sbb
add
sbb
jne
push
sbbl
ret
neg
dec
pop
fsubrl
aaa
into
pop
add
cs
and
dec
cmp
adc
fadds
daa
mov
arpl
cmp
xchg
subl
cmpsb
pop
cld
stos
inc
sarb
and
or
mov
lcall
gs
or
and
jmp
adc
sbb
sbbb
test
jecxz
pop
inc
inc
add
pusha
dec
lret
mov
fdivr
je
and
std
push
les
mov
sub
push
movsl
rcrl
pop
int3
mov
cmp
iret
mov
mov
rclb
cmp
scas
outsl
int
push
push
call
test
dec
adc
ljmp
and
shll
add
add
lock
pop
mulb
sbb
in
mov
gs
test
fdivl
push
jge
push
cwtl
loope
jae
inc
subl
or
mov
jmpw
cmpsl
push
mov
cmp
ss
xchg
xor
sub
repz
add
xorps
fnstcw
nop
jae
lret
std
cmp
cmp
push
cmpsl
xor
jecxz
scas
insb
loop
inc
faddl
inc
push
imul
ss
jmp
jns
pop
mov
je
ficoms
popf
mov
xor
outsl
push
jle
cld
jno
cmp
pop
cmp
xor
push
sbb
jbe
cmp
jae
pop
sub
sub
cmc
mov
lcall
imul
int3
aam
push
fldcw
sbb
jnp
xor
add
inc
adc
in
das
and
pop
int
cld
add
mov
int3
cwtl
xchg
jle
xchg
loope
pop
lahf
xlat
push
mov
test
sahf
addr16
sbb
popf
test
inc
dec
faddl
sbb
cld
pop
cmp
dec
mov
pop
mov
das
fidivs
sbbb
popa
push
ret
stos
push
arpl
nop
xor
adc
sub
pop
call
jg
imul
in
mov
pop
js
pusha
lahf
lcall
or
push
sub
mov
les
adc
sub
js
inc
mov
mov
xlat
xchg
add
push
or
stos
or
mov
adc
cli
repz
repz
adc
cld
adc
jbe
jnp
lcall
pusha
adc
or
std
mov
and
push
or
xchg
add
mov
ss
scas
xchg
cld
inc
shl
mov
fisubl
mov
arpl
cmp
xchg
loopne
adc
jecxz
and
push
push
or
mov
loope
jae
dec
icebp
mov
das
dec
roll
add
xchg
pop
jns
popf
mov
lods
push
bound
popf
fwait
cltd
xchg
js
pop
and
pcmpgtb
jo
es
inc
xchg
mov
dec
sub
mov
mov
rcll
inc
js
mov
mov
outsb
int3
adc
mov
pusha
xchg
pop
scas
and
scas
das
jl
cmp
push
loope
ficoms
in
jmp
jae
xor
sahf
mov
jnp
dec
xor
cmc
inc
sub
rolb
movsl
repz
clc
cld
sbb
fstps
push
push
roll
xchg
sti
je
cmp
or
mov
push
pop
int
cs
inc
fdivl
outsb
popa
lahf
mov
js
inc
xor
lock
mov
jnp
nop
aam
mov
aam
daa
and
outsb
ds
dec
xlat
cmpsb
in
idivl
pop
pop
push
push
inc
das
rolb
push
sti
decb
jl
fdivrl
mov
add
mov
adc
push
fnsave
decl
fiaddl
mov
mov
outsl
inc
jne
test
and
out
enter
pop
xchg
imul
mov
rcrb
lods
xchg
sahf
std
mov
loop
lods
scas
mov
enter
rcr
cmp
sbb
int
xchg
mov
std
mov
inc
lcall
ret
sbb
je
add
mov
nop
ret
fcmovb
int3
movsl
stos
int
jge
fsubl
add
add
mov
faddl
dec
in
mov
mov
pop
mov
test
dec
scas
jbe
rcl
mov
frstor
xor
imull
mov
inc
inc
ret
dec
clc
and
jle
imul
jl
out
insb
loop
xor
adc
ds
sbb
adc
enter
inc
fdiv
fs
xchg
icebp
movsb
ds
mov
lahf
pop
push
jnp
fisubrs
pop
mov
xchg
fs
ficompl
cmc
in
cmp
ret
repz
mov
sub
sub
pop
lods
mov
hlt
sbb
add
lcall
pusha
push
daa
sbb
ret
in
push
in
andl
daa
mov
mov
or
pushf
cwtl
mov
xlat
push
dec
addr16
jmp
and
jne
adc
fisubrs
imul
inc
out
xor
stc
xchg
jbe
jns
popf
add
xchg
dec
stos
sub
sbb
js
cmp
xor
addr16
mov
xor
jle
inc
in
rorl
int3
ljmp
ficoml
or
fcoml
inc
push
cmp
out
push
aad
xchg
mov
mov
push
xchg
mov
mov
add
xor
push
jp
mov
xchg
inc
cwtl
movsb
rcrl
xor
pop
mov
pop
divl
push
jb
push
cmc
fbld
cmp
stos
cmpsl
lods
dec
push
jns
cmp
mov
fwait
dec
loope
cmp
leave
jg
jb
shrl
jbe
mov
pop
pop
leave
pop
cmp
popa
xchg
jl
pop
push
lret
inc
into
xor
int
add
sub
xor
shlb
scas
jmp
clc
inc
addb
lahf
movsb
cmp
mov
rolb
fadd
lahf
lock
cmp
rolb
xor
js
jle
sub
jecxz
dec
imul
ficompl
pusha
dec
pop
fidivl
inc
std
ja
pop
pop
sbb
and
jae
xor
lods
pop
enter
dec
roll
jmp
lods
and
insl
sub
scas
add
and
sbb
cmp
dec
cltd
movsl
and
call
fnstsw
cmpsl
sub
out
sbb
fists
mov
cmp
and
and
inc
mov
pop
cwtl
xor
or
mov
pusha
loopne
mov
inc
jo
ds
mov
add
out
sbb
js
dec
add
push
les
ret
nop
ds
sbb
cwtl
imul
jmp
shrl
mov
shll
add
lea
sahf
xor
stc
bound
cmp
dec
jb
push
mov
sahf
icebp
push
push
into
add
into
pop
push
push
repnz
adc
push
ficompl
fsubrs
fsubrs
lea
xlat
clc
inc
pusha
popa
pop
out
dec
xor
cli
and
cli
ficoml
out
mov
jp
imul
int
push
call
cmp
test
and
xor
cld
fcompl
add
xchg
xor
fdivrp
sahf
iret
dec
fsubl
aam
xor
test
push
sbb
and
push
dec
jge
xor
int
inc
jae
dec
xchg
inc
or
or
in
pop
cmp
adc
adc
lods
sub
arpl
jae
push
movsb
jecxz
mov
sub
int3
mov
push
shlb
cmpl
into
aaa
test
data16
jbe
jns
popf
scas
or
incl
mov
or
test
imul
test
pop
lock
ljmp
lcall
pop
or
jge
jae
xor
in
mov
mov
mov
test
movsl
adc
mov
mov
push
mov
jbe
push
sub
ss
sbb
pop
test
out
loope
jl
mov
and
gs
icebp
mulb
into
xchg
roll
add
dec
dec
popa
inc
shll
dec
imul
and
fdivp
fs
aad
pop
arpl
mov
lahf
jg
rcll
jnp
ljmp
ljmp
jb
adc
clc
or
dec
sbb
sbb
fmul
lods
into
outsl
and
mov
sub
movl
mov
xchg
sti
incl
out
aas
ljmp
inc
pop
test
cli
xchg
cltd
dec
popf
inc
loop
popf
insl
dec
sbb
scas
and
mov
cs
adc
add
sbb
or
push
xchg
pop
cmp
aas
sub
int3
shl
hlt
je
addr16
lock
sbb
dec
xchg
popa
icebp
push
int
cld
sub
xchg
js
iret
clc
in
mov
lea
sahf
mov
cmpsl
cwtl
repz
nop
xor
inc
sub
cmpsl
push
pop
fisttps
imul
out
repz
cs
loop
push
jns
call
aad
lea
jno
pop
iret
shl
outsl
out
xchg
cmp
jb
movsl
ss
xchg
add
inc
pop
addr16
mov
nop
mov
leave
push
lret
rol
idivl
test
xchg
pop
mov
int
or
movsl
pop
add
clc
lods
out
fs
fnstenv
add
std
int
loop
stos
mov
push
sbb
subl
enter
mov
cmp
xchg
movsl
mov
sbb
and
cld
xchg
enter
int
mov
lcall
inc
dec
shrb
sbb
sbb
cmp
mov
cmp
sti
out
dec
orl
iret
cltd
shl
aaa
add
rorb
jecxz,pt
xor
lods
jge
ficompl
inc
jnp
int
cmp
iret
pop
addl
or
call
cmc
aas
mov
pop
in
in
sub
loopne
sbb
cmp
xchg
imul
je
adc
loopne
shlb
add
rcl
push
test
lea
pop
push
cld
sub
out
fldenv
jnp
xor
push
insl
pop
cmc
dec
sub
out
inc
push
sub
jns
les
push
xchg
ja
out
xchg
push
pop
inc
repz
cmp
sub
cmp
inc
sbb
push
xchg
pusha
dec
adc
fdivrl
shlb
xor
mov
mov
cmp
xchg
lds
mov
out
jl
fsub
and
jp
imul
out
pusha
add
push
cmp
imul
push
xchg
add
movsbl
cmp
lea
pop
dec
mov
addl
sbb
stc
xchg
es
adc
sub
ljmp
lea
pushf
pop
dec
mov
flds
jns
jnp
jns
test
jbe
pop
inc
dec
pop
dec
subl
inc
movsl
pop
arpl
popa
int
sbb
jle
mov
pop
lods
mov
dec
lcall
data16
aam
xchg
data16
movsb
jnp
das
inc
xor
jae,pn
xor
pop
mov
loope
and
and
mov
negb
sti
and
xchg
movsl
dec
mov
xchg
loope
push
pop
mov
push
dec
xchg
pop
ja
out
int3
dec
nop
sahf
xchg
or
push
scas
stc
dec
cs
xor
xchg
xor
push
xlat
jno
leave
mov
out
pop
adc
sbb
mov
aas
cli
xchg
orb
imul
dec
ds
mov
arpl
fldcw
mov
or
fiaddl
mov
push
icebp
js
outsb
jmp
int
cmpsl
and
xlat
sbbb
push
in
inc
les
nop
xchg
arpl
in
inc
icebp
mov
or
scas
mov
ret
rcll
pop
adc
popf
mov
pop
xchg
cmpsl
aas
jl
std
pop
mov
outsb
int
cmp
fiaddl
mov
loope
aad
es
fcmovu
outsl
fadds
dec
add
xlat
mov
daa
clc
movl
gs
mov
pop
jg
filds
xchg
pop
dec
das
popa
das
add
push
sbb
jnp
mov
sti
inc
and
xlat
rcr
sbb
xor
xchg
les
cmp
ror
jp
pop
addr16
test
mov
test
cli
enter
popf
cmp
lret
shll
or
adc
pop
mov
dec
adc
jns
fcoms
cmp
inc
insl
adc
mov
adc
push
inc
imul
nop
xchg
dec
mov
cmpsl
in
add
mov
jp
add
std
sub
rcll
lods
sub
xchg
test
mov
mov
mov
int3
call
mov
ljmp
mov
jecxz
add
aad
cmpsl
cmpsl
jp
sub
jno
add
shlb
subb
sub
or
adc
xchg
divb
ror
cli
cld
fs
and
mov
shrl
in
mov
push
mov
adc
mov
cwtl
addr16
and
sbb
shrb
add
inc
push
cwtl
and
lea
iret
mov
cltd
popa
cmp
jecxz
cmpsl
repz
push
cmp
cmp
jp
pushf
jb
into
pop
inc
inc
icebp
add
lds
cmp
and
push
leave
jae
push
inc
fdiv
jns
addr16
out
mov
fmuls
mov
adc
cmp
nop
in
cmp
idivl
cmp
push
pusha
test
es
cmc
lahf
dec
aad
ret
int
or
sbb
dec
dec
xchg
push
movl
into
insb
cli
mov
xor
cltd
push
dec
add
cmp
jae
cmpsb
shlb
sub
int
xor
dec
mov
sbb
aas
and
ficompl
push
orb
ror
ss
and
and
sbb
fwait
inc
stos
cmp
cmp
jbe
push
clc
pop
jno
sarl
inc
lds
xchg
out
mov
les
cmp
scas
mulb
jns
shrb
sub
dec
fisttpll
pop
xchg
dec
push
xchg
inc
cld
sub
leave
enter
mov
mov
inc
movsb
mov
sarl
mov
fists
xchg
mov
daa
jl
xchg
aaa
jnp
outsl
dec
mov
negl
pushf
je
in
jne
sbb
and
dec
int3
das
inc
aaa
push
bound
pop
add
adc
mov
bound
push
mov
and
imul
pop
ret
jmp
and
jmp
cmpsl
mov
arpl
push
imul
pop
cmp
xchg
jge
xor
add
pushf
jno
out
loop
divps
inc
xchg
cmp
mov
mov
mov
pop
mov
dec
into
or
mov
lcall
jmp
ret
add
mov
das
jnp
insl
stos
adc
mov
cmpsl
dec
add
fadds
push
sbb
js
lcall
and
jle
push
cmpsb
int
xchg
jno
pop
je
add
cmp
push
insl
stc
pop
mov
or
enter
popl
adc
jbe
jg
fnstenv
jmp
mov
stos
pop
test
push
mov
xchg
gs
out
gs
ja
filds
xchg
fwait
je
dec
xchg
scas
les
and
jbe
lds
in
aad
das
pop
imul
jp
movsb
dec
add
fisubs
inc
bound
sbb
mov
mov
fmull
ds
sahf
repnz
jne
inc
rolb
cmpsb
jg
jnp
xchg
pop
mov
cwtl
mov
mov
arpl
sti
or
and
lea
ljmp
jl
sub
inc
scas
inc
pop
pushf
pop
lcall
mov
insl
and
pop
fadds
jne
mov
mov
vunpckhpd
xchg
sub
xor
inc
mov
shl
sti
cmp
adc
or
push
dec
scas
jne
nop
mov
in
xchg
rcrb
ja
mulb
test
dec
bound
add
insl
in
mov
push
mov
xor
mov
test
mov
fwait
mov
xor
mov
adc
dec
lcall
jge
icebp
fiaddl
push
in
pop
inc
iret
cmp
pop
and
enter
fsubrs
arpl
push
pop
cltd
adc
add
fnstenv
cmpsl
imul
mov
add
aaa
sub
out
mov
sub
mov
pop
mov
mov
jecxz
repnz
mov
popa
mov
sub
das
mov
sub
adc
push
sahf
jmp
inc
push
outsl
jge
xor
mov
fistpll
int
scas
push
loopne
gs
fiadds
or
jg
movsb
xchg
imul
addb
cmp
xor
mov
and
adc
ja
mov
xor
aas
negb
jg
pop
test
jp
adc
xor
jmp
push
mov
iret
lock
fistpll
movsl
lods
mov
or
mov
push
roll
lea
in
fs
dec
dec
adc
dec
pop
xchg
mov
jbe
in
jl
cmc
or
adc
loop,pt
mov
iret
cmc
sbb
into
cmp
addr16
daa
pop
inc
stos
pop
sbb
iret
iret
aad
call
mov
rol
mov
mov
repz
hlt
push
fs
dec
dec
cmc
jb
in
lahf
or
cltd
jne
add
cltd
dec
mov
xchg
dec
add
in
test
xor
fidivl
dec
stos
roll
mov
fildll
mov
mov
call
scas
ljmp
dec
and
stos
or
sbb
xor
and
ret
and
pusha
mov
inc
mov
xchg
iret
pop
mov
dec
pop
mov
stos
inc
loope
add
sub
and
lea
pop
repz
inc
and
mov
daa
mov
add
dec
xchg
arpl
inc
add
scas
mov
mov
sub
inc
jns
lret
gs
adc
ss
rcl
enter
popa
pop
es
pop
push
nop
notl
aaa
add
and
fidivl
push
jle
in
bnd
jo
cmp
xchg
loopne
inc
addr16
jnp
ret
jp
adc
cmp
pusha
jmp
push
ljmp
dec
sub
inc
sub
insb
push
pusha
jl
xor
les
adc
pop
stos
out
lea
dec
pusha
mov
aam
jb
push
jmp
bound
mov
mov
mov
jbe
aas
repnz
or
jecxz
xor
sub
pushf
mov
mov
xor
mov
sarb
jp
frndint
push
mull
push
xor
addb
dec
fwait
stos
pop
test
aam
push
add
hlt
imul
insl
fsubl
push
xchg
in
push
decb
pop
das
xchg
jnp
pusha
and
sub
roll
inc
cmpsl
movsb
sub
rolb
arpl
pusha
sbb
divb
sub
scas
xor
fbstp
cmpsb
lds
ja
xchg
std
mov
les
sbb
xor
ljmp
into
mov
mov
int
mov
cmp
xor
ret
imul
push
xor
pop
pusha
fwait
scas
xor
push
xchg
inc
arpl
ljmpw
jmp
dec
add
jb
ds
add
jmp
imul
lcall
pop
fwait
rorb
call
push
mov
lret
and
jns
rolb
test
cmpsl
std
and
cltd
push
or
scas
dec
lods
out
cmp
lahf
stos
int
stos
addr16
shrl
add
pop
mov
loopne
iret
inc
cmp
cmp
xchg
rcl
loope
push
mov
call
dec
loop
inc
adc
add
iret
dec
and
inc
add
ja
adc
push
jp
frstor
ret
push
cmp
xor
data16
jbe
je
pop
jnp
dec
xor
sbb
test
mov
in
cmpb
cwtl
out
cltd
aam
dec
shlb
xchg
push
sbb
cwtl
cmpsb
lea
sarb
cmp
test
jle
das
jmp
and
and
js
lcall
push
call
arpl
cmp
movsl
ror
jno
and
test
cmp
int
mov
push
repnz
and
sub
push
std
sub
shrl
aam
ret
push
mov
ds
fisttpll
pop
add
xchg
add
mulb
rcl
lret
daa
shlb
xchg
jae
cli
adc
mov
adc
ja
mov
mov
inc
jecxz
or
jle
and
or
pushf
fcomps
hlt
loop
add
or
adc
mov
mov
es
xchg
dec
andl
jmp
rep
clc
sub
dec
push
xor
loope
aad
cmp
dec
pop
mov
addl
and
jnp
into
cmp
arpl
inc
mov
add
push
jns
adc
mov
adc
and
xor
out
mov
fidivrl
mov
adc
popa
or
scas
lret
stos
push
test
mov
out
mov
je
pushf
mov
rcll
mov
jmp
fiaddl
adc
and
jmp
js
mov
push
lods
lock
pop
rorb
add
sbb
mov
jmp
pushw
push
sbbl
mov
push
mov
xor
fs
sub
mov
lods
cltd
inc
mov
out
idiv
mov
scas
mov
add
or
les
aaa
movsl
test
push
data16
je
std
bound
add
cmp
movsb
iret
sub
ja
xor
adc
cmp
cmp
je
cmp
jo
fstpt
mov
jmp
hlt
pop
je
push
dec
popf
jge
into
mov
inc
ret
loope
lods
xchg
mov
sbbb
jo
mov
xchg
rorb
sub
into
mov
je
mov
lds
add
mov
mov
push
in
ror
cmp
orl
cmp
and
es
adcl
cs
lea
call
popf
shlb
cwtl
jns
mov
loop
mov
int3
frstor
popf
cmp
xchg
sub
mov
outsl
hlt
stos
jmp
or
xchg
aaa
in
bound
push
imull
fildl
lods
push
inc
movsl
ja
xchg
out
xor
loop
sub
or
push
jne
fucomp
jle
insl
lcall
mov
insb
dec
js
inc
or
and
xor
jp
push
xor
sarb
out
insb
mov
mov
ret
pop
cwtl
dec
mov
xlat
movsb
jno
enter
sub
popa
pop
fnstenv
aad
enter
cmp
sbb
sub
sbb
in
add
add
call
jo
ljmp
daa
or
repz
mov
xchg
je
fadd
invd
outsb
or
pop
ret
lea
cmpsl
adc
cmp
sbb
iret
gs
fwait
lahf
mov
lods
lds
popf
lret
lcall
cld
je
rcrl
inc
xchg
sbb
sbb
xorb
in
js,pt
adc
pop
mov
cmp
test
ret
mov
in
movsl
ja
cmc
sarb
sub
aad
ficoml
xor
ds
rcrb
imul
cld
inc
lods
sub
sub
jecxz
loope
push
adc
out
inc
jge
xor
push
in
clc
fmull
adc
pusha
scas
inc
int3
lret
jecxz
out
iret
fmuls
cmpsb
mov
jno
jg
sbbb
insl
jge
mov
or
out
aaa
and
xchg
cmc
scas
icebp
sub
mov
pop
leave
sub
cwtl
dec
and
add
repz
les
pusha
data16
mov
ret
clc
inc
dec
outsl
push
das
pop
sarb
sbbb
insb
xchg
pusha
lcall
fwait
loop
popa
cmc
loope
push
or
cmp
pop
pop
popa
xor
out
add
jb
sbb
dec
rcrl
ljmp
xor
dec
sbb
iret
or
xor
jns
and
sbb
sbb
ja
xchg
daa
mov
sub
dec
fstp
adc
jnp
xchg
push
xor
fdivrs
push
fbstp
repz
inc
or
xor
mov
je
sub
stos
div
push
mov
mov
fsub
cmpsl
xchg
xchg
mov
sub
inc
mov
jns
xor
es
or
cmp
or
lahf
test
je
xchg
jp
movsb
mov
mov
repz
mov
or
shlb
cld
sub
and
in
xchg
div
loopne
in
jne
push
clc
movups
add
xorb
adc
cs
aad
iret
mov
es
jns
test
mov
pop
mov
enter
loope
js
imul
test
or
aaa
xchg
in
ja
mov
or
add
fs
xchg
std
mov
std
fstps
adc
ds
repz
in
dec
lods
call
in
cld
push
inc
jmp
test
xchg
jecxz
fildl
int3
aaa
fdiv
jge
rolb
pop
dec
mov
push
sbb
andl
nop
push
mov
iret
push
stos
hlt
cmp
cmp
ss
mov
jmp
cmpb
or
xchg
sbbl
push
mov
ret
in
mov
jge
pop
cmp
add
clc
and
cmp
lret
cmp
adc
leave
or
push
mov
mov
mov
out
sbb
push
stc
mov
fwait
push
pop
xor
out
leave
cltd
fstl
into
jb
or
ret
jno
cmp
lfs
jne
dec
xor
jo
xor
repz
call
lret
cmp
xchg
xor
cmp
jmp
or
sbb
xor
ret
mov
ret
adc
out
jmp
lds
jmp
hlt
out
iret
sbb
test
dec
and
mov
push
mov
sahf
arpl
leave
mov
popa
std
or
xor
dec
aad
idiv
sub
or
cmpsl
xchg
add
push
cli
add
cmp
mov
hlt
add
addr16
aad
mov
leave
aaa
pusha
mov
sub
pop
test
mov
mov
lret
mov
mov
cltd
jge
jno
and
divl
pop
pop
ds
dec
sti
unpckhps
jb
jbe
and
push
ljmp
mov
dec
mov
cld
mulb
jb
push
jecxz,pt
popa
sahf
add
nop
das
mov
jnp
sbb
jp
xor
shll
and
inc
arpl
mov
in
aad
leave
add
mov
push
add
and
bound
adc
mov
fimuls
push
das
inc
xchg
pop
enter
ret
push
mulb
add
fimuls
or
movsl
stos
lret
clc
jge
jne
xor
dec
push
or
cli
cmp
emms
stos
shrb
or
nop
shrb
repz
pop
xchg
push
fstl
xor
cmp
scas
out
mov
and
mov
mov
fistpll
outsl
lcall
jns
rcrb
xchg
dec
psraw
leave
pop
int
pop
scas
pop
inc
or
jl
faddl
rcrl
dec
jo
mov
leave
rcr
stos
scas
mov
mov
mul
js
mov
mov
jmp
cmp
push
mov
pop
or
outsb
test
mov
pop
xchg
jmp
dec
out
loop
in
pop
out
mov
ficomps
enter
aad
mov
push
jle
pushf
push
add
push
or
xchg
cmpb
pop
ds
sti
insb
cld
add
mov
dec
push
jl
mov
pop
jb
mov
stos
xchg
les
jns
ljmp
ljmp
lds
push
mov
or
int3
adc
sub
test
push
shlb
push
mov
pop
mov
jne
jne
jno
cmp
es
inc
cmpsl
cmp
dec
or
xor
or
icebp
mov
stos
jg
not
mov
adc
cmpsl
cld
test
repz
int
fisubrl
push
inc
fs
das
fadd
movsl
mov
movl
mov
imul
or
mov
push
outsl
xor
mov
xor
mov
aad
sub
mov
aad
int
movsb
bound
sub
cmpsb
lret
bound
movsl
xchg
mov
imul
xor
clc
adc
dec
or
shl
or
lea
xor
inc
jne
add
in
fs
repz
inc
add
dec
mov
xchg
into
aas
dec
or
cld
push
or
push
adc
sub
sar
mov
iret
rorl
xchg
pop
out
in
dec
pop
and
pop
flds
and
pushf
shrb
mov
rcrb
cmpsl
jp
mov
jmp
pop
cltd
and
xchg
adc
xor
jo
sub
xchg
in
cltd
rcll
xor
push
sbb
into
mov
sub
jp
fstpl
mov
pop
je
out
in
ficoms
loopne
sbb
xor
jnp
pusha
ds
mov
out
insl
and
jo
shll
cmp
scas
fistpll
cmp
das
inc
pushl
bnd
jb
insb
jl
fwait
aad
and
xor
sub
sbb
stos
sbb
xor
jg
cmp
ficoml
dec
xchg
pop
fstpt
inc
and
cwtl
stos
mov
mov
pop
ja
cmc
xor
xchg
add
sub
jg
xchg
repnz
sbb
add
call
fists
xchg
aas
mov
dec
vrcp14ps
cmp
xor
fstpt
jns
push
ret
jecxz
cltd
pushf
or
jmp
outsb
aas
shl
notl
ret
adc
cmp
lcall
fmul
inc
test
cltd
divl
add
or
rorb
scas
push
popf
mov
les
mov
push
xchg
xor
sbb
sbb
lea
or
add
repnz
stos
in
lds
push
inc
pop
inc
pusha
or
jp
sahf
out
pop
inc
add
movsb
mov
and
pop
test
push
test
push
ret
iret
adc
or
sbb
repz
adc
fwait
xchg
gs
dec
jb
lahf
sbb
sbb
into
inc
cltd
es
sbb
xchg
cli
xlat
sub
jmp
jl
inc
inc
cltd
cltd
dec
or
pop
in
pop
and
into
and
push
inc
leave
fistl
leave
cmc
xchg
fldcw
add
daa
movsl
testb
push
dec
cmpb
jae
pop
jae
rorl
cmp
int
xchg
jle
sub
inc
lahf
push
iret
insl
xor
dec
lahf
sub
xor
mov
dec
clc
push
mov
jb
push
and
dec
bswap
sub
lahf
gs
loope
lcall
cmp
cmp
cmp
stos
adc
jle
test
fnstenv
loopne
clc
fldcw
aas
lds
push
mov
fimull
js,pt
imul
mov
jle
mov
popf
fdivs
in
js
mov
scas
mov
inc
pushf
push
in
and
movsb
pusha
push
fcmovnu
sub
inc
mov
stos
mov
gs
aam
add
lods
mov
and
and
inc
mov
sub
js
inc
int
addl
or
aam
sarl
xchg
dec
cld
push
out
inc
sub
or
or
push
cmp
adc
ficompl
sub
stos
dec
pusha
push
cmp
aas
push
int
jae
out
out
add
aas
pushf
ds
aas
movsb
fisttpll
es
push
sub
and
dec
lods
iret
es
mov
mov
pop
popa
push
stos
iret
cmp
pop
sub
pop
xlat
sbbb
fnop
push
dec
inc
add
rorl
add
and
add
fs
inc
push
cmpsl
icebp
jg
push
sbb
sub
mov
xchg
outsb
lcall
repnz
cmp
pop
push
push
push
mov
mov
sub
jp
mov
into
out
adcb
test
and
into
popa
pop
mov
mov
icebp
out
sbb
cmp
jnp
cmp
scas
pop
dec
mov
out
test
adc
mov
cmpsb
cmp
push
sbb
sub
inc
and
addr16
imul
mov
icebp
mov
arpl
add
nop
dec
jmp
imul
pop
push
inc
aaa
stos
out
outsb
cwtl
pop
popf
jl
xchg
jle
les
cmp
sbb
inc
sbb
lods
aas
adc
dec
jmp
popa
pop
adc
test
xor
in
hlt
fstpl
and
fwait
out
out
test
mov
push
lods
std
aas
adc
das
pop
xchg
sub
push
cld
lods
loop
pop
shrl
jmp
nop
dec
inc
dec
sub
cmc
js
lods
std
pusha
je
shll
movsl
jp
mov
mov
or
jecxz
and
mov
test
fcompl
les
scas
jg
into
or
adc
sub
rcrl
pop
jnp
clc
push
jnp
mov
xor
sbbl
adc
xchg
jmp
push
pusha
hlt
bound
inc
fucom
jns
pop
push
popa
gs
pop
pop
fsubr
les
cltd
cs
ret
pusha
and
int
bound
mov
add
mov
push
cmp
push
sbb
js
lods
inc
add
lret
test
fs
sbb
test
stos
loope
pop
mov
data16
jbe
ss
loopne
mov
adc
cmpsb
xor
in
mov
or
stos
loopne
ret
mov
xor
add
dec
das
imul
sahf
push
sub
iret
sbb
div
push
pushf
lods
mov
orb
movsl
js
jae
fimuls
test
pop
jb
jns
add
ficoml
jl
jmp
inc
jg
adc
or
pop
mov
lret
push
in
sbb
push
outsb
cli
test
bound
push
push
inc
adc
dec
stc
out
mov
stc
jne
dec
mov
jns
lds
stc
sbb
push
sbb
and
loope
mov
out
jle
ret
lds
sbb
dec
fisubs
idivl
cli
or
pop
mov
stos
negl
sbb
jbe
cmp
sbb
into
sub
jne
mov
fldl
mov
mov
pushf
lret
mov
mov
add
insl
xor
pop
arpl
xchg
sub
push
jo
inc
cs
lds
bound
jbe
mov
outsb
push
pop
in
pop
mov
rolb
jg
push
mov
loop
mov
cmp
mov
add
xchg
push
push
inc
outsl
jb
std
in
inc
and
ss
adc
adc
lods
enter
adc
push
add
into
jnp
jmp
xchg
dec
and
cwtl
xor
xor
sbb
aam
js
repz
sbb
cld
push
fisttpll
nop
test
call
lret
add
mov
dec
and
and
jmp
imul
aaa
pop
rcll
jno
out
or
mov
push
adc
pop
xor
fstpl
aam
or
cli
inc
popf
lret
addb
lock
cld
movl
fsubrl
cmp
mov
roll
inc
inc
and
xor
lock
push
cs
mov
nop
cmpsb
nop
clc
fmul
lret
jecxz
mov
std
push
sbbl
xchg
outsb
push
jl
mov
dec
mov
cwtl
inc
dec
rolb
cmpsb
arpl
push
out
add
int3
ret
push
int
fwait
cs
icebp
jb
adc
sbb
imul
outsl
dec
pusha
fucompp
lods
popf
pop
jge
pop
jb
ss
out
mov
lds
xchg
gs
mov
test
ret
ret
out
jge
addr16
inc
jbe
inc
push
in
stos
mov
pop
cmp
mov
imul
repnz
movsl
cmp
iret
jae
fwait
addr16
inc
repnz
nop
fs
sbb
jo
aam
sbb
gs
add
mov
xchg
imul
mov
lret
mov
and
or
and
incb
cltd
push
daa
sbb
ret
fmul
sahf
test
and
pusha
leave
pop
adc
mov
ret
test
mov
test
pop
cltd
pop
mov
and
lea
clc
aas
jmp
js
imul
and
in
sti
stc
insl
jge
outsb
cmp
mov
lret
divl
test
mov
xchg
sub
sub
jg
adc
stos
mov
jecxz
shll
push
cmp
out
or
repz
mov
and
test
ds
es
adc
js
in
cmp
push
out
pushf
mov
push
push
inc
mov
leave
cs
inc
mov
imul
xchg
add
gs
mov
fwait
cltd
outsb
div
inc
data16
cmp
cltd
es
loopne
jmp
ds
xor
shll
shlb
xor
ror
test
mov
loop
rorl
or
test
push
repz
bound
dec
cmp
xor
fildll
cmp
add
imull
jo
ret
in
lock
repnz
inc
daa
cmovp
addl
mov
ffreep
enter
jns
sbb
dec
lds
ljmp
add
popf
movsl
dec
adc
nop
int3
sbb
push
ja
jmp
mov
pop
mov
leave
cmpsl
lock
cmp
movsl
fdivs
inc
js
rclb
xchg
adc
cld
imul
je
cld
shrl
pop
push
cmp
icebp
pop
xor
aaa
lods
mov
jne
inc
mov
test
into
inc
mov
mov
lcall
test
sub
std
mull
push
insl
pop
lahf
sub
xchg
test
orl
xor
push
inc
iret
push
and
xchg
dec
lret
insl
pushf
stc
mov
xchg
inc
lahf
push
cmp
adc
xorl
fists
out
lock
cmp
cli
jae
roll
addr16
jle
push
lea
lcall
mov
and
in
add
negl
notb
popa
pop
mov
mov
mov
outsl
xchg
xchg
frstor
loop
mov
mov
push
jbe
cli
mov
add
test
ret
gs
scas
mov
add
data16
ljmp
fmuls
pop
inc
xchg
mov
inc
int
push
sbb
xchg
dec
mov
lret
stc
adc
nop
cwtl
stc
pop
dec
or
sub
push
pop
mov
out
test
pop
ja
xorl
insb
sahf
mov
jno
xchg
jns
inc
stc
aam
loopne
enter
outsl
add
lret
mov
xchg
sbb
mov
rcll
jb
std
jg
sub
lcall
das
lods
fnsave
push
sub
xchg
mov
cmpsl
cs
xor
sbb
xchg
les
pop
out
sub
je
test
paddd
cmpsl
addr16
sub
adc
filds
sub
adc
mov
dec
add
call
in
cltd
cmpsw
outsb
xchg
dec
inc
fsubp
daa
pop
arpl
jno
jle
pop
jmp
lods
sbb
lret
sub
jmp
enter
jb
xchg
push
or
or
add
sbb
lock
sbb
cmp
add
mov
les
cmp
push
emms
fnstenv
cltd
out
loop
sarl
popl
and
andl
test
cmc
cwtl
mov
push
out
mov
sahf
push
and
cs
decl
loopew
lahf
shrl
lret
stos
addr16
jae
mov
int
xor
into
iret
repnz
outsb
dec
xchg
movsl
pushf
cmp
arpl
stos
cld
lret
pop
mov
cmpsl
popl
add
mov
test
xor
lret
pushf
dec
jo
mov
pop
or
push
stc
jno
add
lahf
cld
addb
gs
bound
stc
aaa
call
mov
jo
in
pop
add
in
out
dec
les
mov
pop
and
sub
mov
sahf
inc
mov
mulb
call
popf
sbb
aad
insb
test
es
int
inc
popa
cmp
movsl
mov
sbb
lret
divb
dec
xor
push
mov
mov
mov
or
xchg
loopne
xor
sbb
and
sub
add
les
stos
or
xchg
jp
lcall
mov
lcall
aam
and
lods
xor
mov
pusha
cmc
push
xchg
movsl
lds
cmp
inc
lock
mov
movsb
stos
push
pushl
test
stos
push
cmp
pop
sarl
mov
movsl
mov
fsts
xchg
out
imulb
testl
lock
sarl
jnp
mov
push
jp
sbb
bound
repz
fidivl
movsl
cmp
xchg
sbb
jp
ficompl
push
shlb
add
jno
push
add
pushf
pop
lret
rclb
iret
pop
add
mov
divb
or
test
sub
mov
fcoms
leave
mov
out
jg
pop
xchg
xor
data16
push
inc
pop
shl
popf
jbe
notl
enter
mov
mov
mov
mov
mov
mov
add
lahf
push
mov
insl
mov
andb
repnz
or
test
lret
imul
pop
icebp
xor
mov
sti
fs
pop
sbb
loop
jle
andl
ja
xorl
sbb
mov
ret
xchg
pop
loope
loopne
sbb
imulb
aas
cmp
jge
and
inc
jbe
loop
mov
cmpsb
pop
adc
test
dec
cmp
mov
xchg
out
or
je
mov
cmp
xchg
imul
int3
cs
and
jae
out
outsl
mov
jns
outsl
xor
cwtl
loop
icebp
push
mov
mov
mov
int
xchg
ficoms
test
mov
movsb
in
jns
or
xlat
daa
iret
out
cmc
jl
pop
cmp
jle
pop
push
fmuls
stos
add
mov
addl
pop
mov
loope
ja
xchg
pop
xor
sahf
scas
adc
jmp
jno
and
imul
dec
aaa
push
jmp
fiadds
mov
add
sub
mov
add
jnp
mov
inc
push
jbe
addl
lret
cltd
fsubrs
xor
push
sub
sar
je
sarl
xor
leave
xchg
adc
adc
fnsave
sbb
fldcw
inc
adc
das
mov
inc
test
sbb
jmp
movsb
cmp
scas
adc
out
imul
clc
sbb
xchg
arpl
incl
jecxz
pop
pop
test
adc
fpatan
push
fldl
inc
jb
sti
inc
lock
cmpb
fst
add
in
orb
jg
int3
pop
mov
jns
addr16
cmp
fs
sbb
jle
inc
sbb
sub
pop
rcr
push
roll
add
call
push
in
or
pop
fistl
mov
push
fldenv
cltd
add
mov
and
movsl
mov
mov
test
in
sbb
mov
push
inc
lret
into
sbb
push
jp
rcrb
cwtl
pop
mov
xlat
mov
push
mov
repnz
dec
in
mov
xchg
mov
push
pop
jbe
adc
stos
adc
dec
and
push
orl
scas
out
adc
jle
mov
sbb
mov
and
fcom
jb
mov
adc
in
inc
mov
sub
mov
shlb
adc
lret
mov
shlb
mov
push
xor
jecxz
popf
scas
scas
fldt
cs
push
lea
mov
cwtl
ret
jbe
jmp
hlt
cli
shll
cmp
icebp
or
adc
cli
mov
cmc
xorb
xor
dec
mov
pop
add
add
je
cmpsb
pushf
mov
popa
push
xor
jno
das
jbe
mov
or
or
push
add
sub
xlat
add
mov
sbb
and
call
xor
sahf
in
in
scas
sub
jp
nop
fnstsw
in
xor
jne
mov
jmp
adc
push
pusha
xchg
mov
xchg
fcoms
jno
xchg
inc
pop
inc
aas
out
div
mov
jae
pop
jb
dec
sahf
fmuls
sbb
cmpsb
loope
xorl
inc
dec
lods
neg
ss
out
cmp
decb
inc
out
daa
in
outsl
jb
pushf
mov
movsb
lahf
dec
rclb
sub
cld
mov
sarb
fisttpll
adc
fstl
out
andb
roll
inc
dec
loopne
fs
mov
cmpsl
loope
or
lea
jmp
push
daa
fldcw
pusha
adc
xor
pop
jp
sub
adc
jge
sbb
xchg
mov
into
mov
and
notl
out
cli
das
rcll
mov
adcb
push
jb
xlat
push
jp
xor
in
test
fadd
push
rcl
mov
lods
add
lea
xor
add
test
sub
add
inc
test
push
fistpl
pop
std
jl
and
xor
push
fstps
sti
and
sub
sbb
enter
mov
fiadds
sub
sbb
fisubrl
data16
jb
shll
and
cmp
xchg
xchg
mov
bound
pop
jae
mov
fstpl
nop
jnp
inc
loope
es
pop
dec
mov
js
rolb
fwait
xor
lret
rolb
dec
cmp
or
xchg
push
xor
outsb
adcl
xor
inc
das
sbb
rcl
push
mov
repnz
dec
or
push
mov
or
ret
insb
sbb
cwtl
add
dec
push
mov
arpl
mov
aad
pop
jecxz
movsb
test
xchg
iret
dec
dec
lcall
fildl
inc
sub
mov
cmc
repz
mov
mov
idivl
pop
test
movsl
jae
ret
mov
mov
adc
pop
pop
sub
and
push
xor
cmp
mov
cli
lds
cmp
xchg
daa
add
sub
addl
xorl
mov
jmp
mov
pop
add
lds
idivl
shlb
lcall
cmp
lret
or
cmc
pop
das
xor
test
xchg
scas
pop
stos
insb
mov
jb
dec
jo
mov
mov
test
mov
enter
call
sbb
mov
jo
adc
push
in
cmp
sub
out
out
jo
das
daa
jge
sti
dec
imulb
sbb
nop
pop
jno
lods
sub
mov
imul
add
lret
sbb
into
xchg
and
outsb
mov
add
sub
push
lds
movsl
adc
sarl
in
adc
movsb
out
pusha
out
add
mov
xchg
call
xor
loopne
push
mov
les
xor
push
xchg
sub
rclb
adc
dec
xchg
ret
mov
mov
jecxz
add
sub
cwtl
out
mov
sbb
pop
dec
mov
pushf
push
xor
pop
mov
mov
sbb
or
xor
sbb
push
call
iret
insl
test
out
enter
sbb
mov
jmp
push
pop
xor
inc
cmp
in
adc
mov
movsb
mov
test
adc
jnp
pop
adc
jbe
jno
cmp
adc
pop
and
xor
insl
call
pop
sbb
sti
cmp
pop
xchg
mov
out
mov
cmpsb
cmp
pop
mov
ret
movsb
add
or
cld
in
cmpsl
bnd
cwtl
test
loope
mov
ja
pop
movsl
div
mov
rolb
push
xchg
mov
bound
or
aaa
cmp
pop
lods
aaa
push
rorb
xor
insl
daa
lret
mov
xchg
test
data16
lret
fcomi
lods
push
ja
loop
or
ret
addr16
mulb
repz
ss
push
stc
cli
push
jae
sub
add
data16
outsb
mov
das
cli
push
scas
outsl
jae
out
lahf
cmpsb
call
or
jae
inc
test
inc
and
xor
ljmp
stc
xchg
dec
int3
or
std
pop
jmp
jnp
adc
out
mov
addr16
dec
jmp
sub
push
mov
adc
or
cmp
sbb
sub
push
in
je
push
xorl
outsb
mul
ljmp
sub
sbb
or
fcom
and
inc
lret
mov
imul
sub
leave
loop
lds
leave
pop
sbb
xchg
mov
lock
shl
subl
loope
mov
xchg
mov
xchg
out
mov
int3
in
adc
lods
shl
and
das
enter
pop
sahf
mov
rol
shl
movsl
xor
test
scas
stos
xorl
mov
sbb
jge
push
pushf
sub
mov
mov
push
ds
int
jge
push
subl
fldcw
add
or
addb
rorl
negl
jg
mov
ret
and
jno
cmp
sub
adc
mov
add
mov
iret
inc
iret
scas
in
xor
mov
out
mov
icebp
scas
rclb
pop
pop
nop
fstp
fst
cltd
pop
xor
popa
icebp
sti
out
sbb
cmp
dec
mov
pop
mov
rcrl
inc
repz
mov
pop
out
movsl
fwait
hlt
mov
sbb
xor
stos
add
push
xor
sub
je
push
shr
mov
push
popa
pop
divb
cli
push
inc
push
leave
fcompl
xchg
jp
aaa
inc
das
sbb
std
pop
xchg
mov
cmp
add
mov
popf
jmp
cmp
and
outsb
ds
mov
sbb
or
leave
inc
insl
lods
xchg
movsb
xchg
scas
inc
xor
in
push
xor
xchg
nop
notb
xor
gs
cmp
shrl
pop
popa
inc
rolb
insb
xchg
xorl
aas
ds
testb
xor
fstl
pusha
cmc
in
ss
pop
in
out
je
jl
stos
pop
add
std
imul
hlt
push
mov
ret
daa
push
popf
sbbb
pop
xchg
fldcw
lods
push
adc
roll
push
int
ja
fimull
push
and
lret
pop
or
xor
sti
lcall
cmpsb
lods
repnz
push
mov
sub
mov
jp
hlt
sbb
mov
jle
aad
inc
cmp
xchg
or
icebp
and
jb
xchg
and
out
fmull
add
cmpsb
insl
cmc
pop
mov
push
gs
scas
fcom
test
and
orl
iret
or
and
pusha
pop
adc
mov
jne
or
sahf
push
jecxz
push
cmp
jle
cmpsl
or
push
dec
or
xor
imulb
mov
adc
inc
pushf
dec
push
out
lahf
cmp
dec
or
push
fwait
loopne
lock
sub
aad
sahf
cld
das
cmc
add
outsl
lcall
jb
or
mov
loop
fstpt
dec
sub
ja
shll
sbb
or
cmp
mov
mov
fmuls
mov
cwtl
rclb
fwait
jae
xchg
mov
scas
test
fistpl
ljmp
rcll
insb
cltd
inc
in
sbb
fldenv
xchg
cmpsl
scas
loop
test
out
mov
push
lods
icebp
outsb
xchg
pusha
fildll
xchg
lods
mov
addr16
xchg
mov
shlb
lahf
test
enter
xor
mov
into
dec
adc
mov
enter
ss
jns
xchg
inc
jbe
fisttpll
adc
lcall
pop
inc
sub
push
in
xchg
cmpsb
inc
jecxz
add
sbb
into
cwtl
mov
add
sub
mov
add
cmp
add
ficomps
cmpb
cli
test
jecxz
xchg
imul
sbb
sub
sbb
out
das
fcomps
mov
ficomps
mov
lea
test
push
xchg
dec
add
es
mov
adc
les
xlat
adc
in
sahf
cmp
inc
sbb
stos
fs
mov
jno
pop
add
or
cmp
in
mov
sbb
test
outsl
enter
insl
lahf
adc
outsb
and
mov
sub
hlt
cmp
fwait
push
push
notb
mov
or
insl
shr
xor
fstpt
cmp
inc
adc
xor
mov
jno
addb
mov
mov
sbb
and
sub
fcomps
lods
and
jl
aad
mov
addl
push
test
mov
ret
leave
adc
pop
cmpsb
cld
jl
mov
adc
dec
mov
int3
pop
sub
lret
mov
divl
stc
xchg
cltd
inc
into
sub
into
sub
push
or
adc
loop
push
icebp
insb
push
mov
insb
arpl
mov
mov
mov
inc
mov
push
arpl
push
ficoml
dec
mov
out
adc
mov
testb
mov
sti
push
inc
push
aas
ja
cmpxchg
aam
inc
fdivs
sarl
jae
dec
xchg
out
ja
pop
xor
out
insb
ret
inc
xor
mov
outsl
push
pop
push
dec
loope
sbb
jg
inc
dec
sub
movsb
inc
mov
int3
pop
xor
pop
add
stc
cs
xor
lea
jne
ss
pop
ret
setnp
imul
mov
repnz
sub
push
adc
gs
add
jns
add
and
sahf
fwait
add
stos
dec
jno
or
call
arpl
sbb
dec
jg
insl
or
xchg
shl
inc
jns
xchg
pushf
shlb
jge
adc
js
dec
in
int
mov
imul
cli
add
cmc
xorb
add
out
sbb
pop
clc
pop
xchg
or
out
in
daa
lcall
repz
mov
imul
sbb
daa
divb
cs
cmc
pop
fwait
lahf
mov
mov
inc
mov
dec
movl
out
imul
pop
stos
into
insl
nop
push
scas
pushf
imul
lcall
je
jg
jno
add
xor
xchg
and
ds
mov
pop
mov
or
flds
sbbl
adc
stos
out
enter
lods
push
rcl
insb
xchg
sbbl
and
jo
test
sahf
mov
mov
mov
pop
dec
lret
repnz
or
fwait
gs
subb
out
add
enter
adc
or
jae
paddusw
inc
inc
mov
into
ret
int
rclb
adc
cmp
imul
push
add
mov
inc
add
push
lea
push
iret
jns
imull
xchg
jbe
mov
mov
addr16
out
cli
jbe
and
fiaddl
or
outsl
cmp
jno
jle
push
aas
xor
cmp
cmp
sbb
push
flds
sbb
dec
sub
std
adc
inc
or
jmp
fldcw
mov
xchg
xchg
inc
cmpxchg
les
in
adc
call
dec
insb
fidivrs
or
pop
sbb
push
jp
jnp
jb
dec
lea
daa
loop
pop
mov
sbb
scas
pusha
ja
sbb
movsl
xchg
test
dec
cs
and
cs
fiaddl
xor
addr16
sbb
sbb
lock
dec
es
scas
out
lret
std
lods
sbb
push
or
push
imul
or
pop
add
push
outsl
and
sbb
les
in
out
push
test
les
push
rcr
ret
sarb
pop
daa
ja,pt
imulb
je
cmpsl
outsb
fdivrs
inc
push
mov
sub
pop
daa
cld
sbb
bound
cli
ljmp
push
mov
pop
stos
mov
pushw
out
aas
xor
mov
inc
inc
or
fucompp
shrb
pop
add
fldt
dec
and
xchg
mov
jo
pop
add
jno
mov
xor
scas
out
jmp
xchg
mov
fadds
ja
push
frstor
sub
ret
adc
jns
add
and
rcll
and
mov
xchg
ja
arpl
sbb
repz
pop
fstpl
lds
xchg
repz
inc
rorl
in
push
push
mov
cmp
xor
inc
insl
mov
pop
mov
and
fdivrs
push
cltd
xchg
hlt
rclb
lcall
cmovs
scas
aaa
pop
das
loope
push
xchg
dec
mov
or
xchg
pop
fiaddl
xchg
mov
movsb
pop
or
xor
mov
icebp
mov
pop
sbb
ret
jae
jge
aad
notl
mov
push
xchg
out
pop
cmp
xor
push
fdiv
insb
test
shlb
sub
dec
imul
sahf
push
cld
into
inc
mov
sahf
test
stc
jecxz
ficompl
pop
sti
pop
pop
lods
jne
adc
mov
and
mov
out
cmp
jle
popa
fstps
mov
jo
stos
dec
inc
xchg
call
dec
inc
push
shll
adcb
and
jmp
cld
sbb
push
es
cmp
aaa
and
bnd
ja
or
jecxz
cmovno
sub
inc
mov
jb
into
push
inc
lcall
adc
daa
xor
push
icebp
mov
adc
xor
xchg
call
sbb
leave
fists
pop
lock
movsb
xchg
std
mov
and
mov
int
mov
ret
xchg
fcoml
enter
pop
out
pop
gs
jns
mov
mov
rorb
inc
xchg
lret
lcall
fstps
lcall
not
mov
pop
mov
adc
cwtl
data16
push
jp
pop
insl
mov
push
jb
hlt
mov
mov
ja
mov
incl
notl
dec
fimuls
xlat
fcoml
dec
or
jns
cli
jge
jno
cmp
dec
pop
mov
inc
enter
imul
lds
popa
stos
int
out
mov
icebp
ss
not
jne
push
cmp
orb
daa
xor
js
popf
aaa
mov
clc
mov
nop
ret
insb
pop
outsl
in
scas
jmp
cmp
daa
adcl
pop
je
fsubrl
mov
insb
pop
mov
movsb
mov
xor
lret
xor
outsb
sti
and
lods
sub
pushf
push
outsl
js
push
mov
test
inc
mov
push
iret
dec
and
cmp
shll
sahf
fs
mov
scas
adc
aam
pop
mov
jecxz
pushf
sbbb
ficompl
pop
add
cmc
cwtl
xor
das
test
add
test
dec
lods
pop
fcomp
cmpsb
xchg
inc
insl
xchg
aad
and
or
pop
pop
mov
xchg
shl
inc
out
xchg
mov
movsb
outsb
mov
mov
sub
fadd
outsl
outsl
mov
fs
stc
aad
jp
xor
mov
repz
shl
jecxz
add
lds
insl
push
addb
negb
mov
adc
icebp
in
outsb
add
and
dec
into
gs
fucomi
pusha
and
pop
push
cmpsb
imul
sub
jecxz
or
fldcw
fidivrs
lahf
pop
pop
outsl
test
loop
xchg
dec
sbb
outsb
popl
sub
dec
daa
popf
xor
cmp
jno
cltd
inc
aaa
inc
enter
dec
xor
push
mov
pop
mov
aad
xor
cmp
mov
jo
aas
aaa
mov
ficoms
and
adc
cmp
mov
mov
aas
hlt
loopne
xor
sbb
or
repz
daa
pop
mov
int
mov
and
mov
arpl
nop
repnz
jmp
mov
js
and
dec
lock
sub
jg
pusha
imul
sahf
scas
mov
push
ds
in
and
je
xchg
inc
dec
mov
nop
xchg
into
xchg
fwait
ss
cmp
cli
inc
mov
pop
add
sub
pop
xor
pop
loope
push
sbb
sahf
mov
sbb
add
je
mov
xchg
test
cmp
shlb
xchg
dec
adc
dec
ds
xchg
cmp
add
orb
or
add
push
jne
fildll
xor
roll
and
js
mov
lret
out
aaa
loop
cld
insb
dec
jns
xchg
cmpsb
cmpb
jle
ss
ss
mov
sbb
mov
mov
mov
fistps
popa
loop
sub
inc
fs
xor
or
ljmp
inc
scas
popf
aam
push
fs
add
pop
and
fsubrs
jge
iret
das
or
repnz
sbb
inc
jo
and
jge
fnstsw
dec
inc
ljmp
int3
aam
lock
insb
imul
in
or
out
dec
add
dec
adc
or
sti
xchg
mov
not
loopne
mov
dec
xchg
loope
xor
shrl
mov
scas
popf
in
shlb
inc
daa
or
push
pop
jmp
lret
xor
mov
inc
fstps
pop
jle
dec
jmp
cmp
lret
pop
sub
inc
vcvtps2pd
push
mov
sahf
mov
icebp
aas
lods
sub
daa
sbb
mov
in
inc
test
loopne
mov
dec
or
fildl
fs
push
mov
xchg
cmpsl
js
xchg
sbb
push
hlt
jecxz
push
inc
iret
je
mov
cmc
lea
inc
mov
fsubrs
popf
rcrb
aas
scas
cmc
or
dec
cmpsb
es
movsl
push
sub
push
test
jno
pop
ljmp
pop
scas
add
int3
in
in
cmp
movsl
scas
push
cs
mov
mov
push
shl
lret
inc
decl
jae
dec
sub
cmpsl
jmp
inc
int3
dec
inc
enter
sbb
xchg
xor
xlat
enter
dec
sbb
push
xor
clc
sti
aad
repz
insb
sbb
add
mov
pop
inc
mov
aas
outsb
xor
shlb
push
in
movsb
shrb
pop
pop
add
leave
mov
jge
add
lods
mov
pop
pushf
and
mov
jo
fcompl
gs
or
std
cmp
sbb
adc
push
mov
ret
imul
sbbl
jo
popa
out
clc
enter
testb
stos
loope
adc
adc
inc
wrmsr
vpminub
out
out
push
fwait
sbb
inc
sti
cmp
mov
leave
cld
iret
jl
mov
xchg
in
or
test
xchg
inc
cltd
mov
xor
imulb
mov
sbb
shr
dec
jl
xor
push
es
add
xchg
jecxz
lea
cld
xchg
mov
mov
mov
leave
loope
lea
mov
nop
into
das
dec
xor
cmp
daa
push
lods
fcoms
adcl
jecxz
jne
push
les
les
or
fsts
adc
sbb
addr16
inc
xchg
push
ret
pop
leave
repz
in
pop
imul
cld
adc
in
fucomp
jo
outsl
arpl
jns
repz
out
xor
aas
or
scas
add
push
adc
or
enter
gs
loope
aad
enter
or
xchg
in
mov
xchg
imul
test
and
sub
orl
pop
and
jle
push
mov
outsl
xor
mov
leave
aas
push
mov
mov
leave
aas
loop
and
xchg
in
sub
in
inc
mov
clc
int3
pop
adc
dec
hlt
repnz
mov
insl
jbe
pop
and
add
gs
xchg
shrb
adc
stos
inc
loope
out
movsb
dec
dec
in
xchg
sub
fcmovu
into
loope
iret
and
adc
cmp
aas
pop
data16
ret
adc
daa
inc
dec
adc
lret
dec
xchg
insl
xlat
faddl
inc
sbb
add
dec
rorb
idivb
push
fisttps
and
fsubl
sarl
xor
outsl
push
sahf
and
lods
fidivrl
xchg
sbb
mov
adc
ffree
shl
jge
mov
cld
jae
or
loop
push
pop
mov
dec
xchg
or
cmp
cld
out
and
bnd
and
sbb
addl
mov
pop
daa
stos
arpl
repz
js
mov
test
mov
cmp
negb
lods
cmpsb
cmpsb
call
adc
cs
push
dec
jno
dec
inc
aaa
mov
test
mov
add
mov
loope
mov
pop
inc
or
add
inc
adc
mov
mov
xchg
xchg
testb
pop
inc
js
leave
jbe
jns
adc
aaa
sub
int3
mov
add
ret
repz
aaa
fwait
subl
outsb
test
lods
fnsave
sub
out
lods
aad
push
mov
std
sub
cmp
out
adc
ljmp
inc
test
ret
mov
es
jp
xchg
push
repz
out
push
mov
push
fs
js
mov
add
ljmp
push
jns
insb
add
dec
aas
movsb
push
popf
xorb
rolb
xchg
push
fs
notl
je
clc
fstps
shr
cmp
outsb
les
pop
in
mov
inc
orb
xorl
jbe
enter
repz
dec
mov
lcall
pop
pop
fdivrs
arpl
cmc
jge
xor
call
jno
push
push
mov
push
push
je
add
xorb
cwtl
daa
fcmovbe
mov
xor
mov
cmp
jle
fstl
fs
pop
int3
cmp
scas
lret
push
push
cwtl
push
xor
stos
cmp
cmpsl
test
mov
adc
mov
push
sbb
mov
andb
loop
xor
ss
mov
sbb
inc
popa
xchg
cmp
add
or
adc
es
sub
push
push
adc
adc
cltd
mov
adc
dec
pop
adc
rclb
inc
lods
and
jbe
or
sbb
and
test
xchg
dec
or
or
out
fwait
lods
pop
aam
adcb
out
in
scas
dec
cmc
jae
mov
pop
scas
cmp
sbb
imul
xchg
pop
and
push
popa
cld
pusha
xchg
js
sti
call
add
push
add
xchg
int3
push
sub
pushf
out
dec
jns
es
test
and
lret
in
les
push
stc
bnd
jnp
iret
daa
pop
mov
jno
loopne
shlb
fs
push
mov
fbstp
pusha
and
repz
ljmp
pop
jmp
hlt
mov
pop
mov
das
cmpsb
test
arpl
jo
jg
xchg
push
adc
mov
cmpsl
mov
sahf
pop
fisttpll
fstps
int3
out
dec
ds
mov
sbb
out
hlt
sub
cmp
push
inc
sbb
js
xor
push
stos
push
std
adc
mov
ljmp
sarl
lahf
out
out
std
out
lcall
xor
jmp
aas
imul
jo
mov
loopne
stos
cmp
sar
sbb
xchg
outsb
popa
pop
sbb
loope
insb
pop
test
call
jp
add
outsb
jg
jo
lahf
ret
xchg
loopne
xchg
inc
mov
hlt
nop
mov
cmp
aas
push
sub
mov
jecxz
sbb
fst
dec
add
mov
push
mov
cmc
sub
add
or
push
add
orb
and
cmp
jb
add
xor
jae
insb
push
rcrl
pop
test
dec
popa
cmpsb
sbb
cmp
aas
mov
adc
adc
sti
sub
xchg
pop
pop
sbb
mov
mov
pusha
pop
xchg
iret
and
and
data16
jnp
cmp
and
outsb
test
cmp
sub
xchg
mov
mov
adc
lods
loope
nop
add
push
in
adc
jle
mul
mov
mov
stos
dec
mov
adc
mov
pop
test
pop
pushf
sub
pop
dec
iret
jnp
or
xchg
jl
mov
or
fnsave
lds
mov
xchg
lcall
sbb
push
sub
jae
jae
sub
ja
ljmp
mov
nop
test
xchg
dec
pop
repnz
dec
rcll
movb
mov
and
push
nop
push
inc
mov
dec
adc
jle
sub
add
xor
outsl
mov
and
jb
mov
in
pcmpeqd
das
push
push
popa
jnp
clc
pop
jbe
sbb
cmpsb
push
scas
jo
ficomps
cmp
testl
add
dec
cmp
mov
cmp
das
out
mov
das
int3
xchg
cmp
mov
lcall
pusha
dec
pop
mov
cmp
add
test
mov
stos
mov
jnp
mov
mov
out
adc
sbb
lds
in
mov
loop
sbb
pop
fstl
sbb
movsl
pop
mov
adc
test
pop
push
mov
cmp
xchg
sub
cmp
and
sub
add
cwtl
and
jne
mov
xchg
mov
mov
xchg
outsl
fdivs
or
mov
leave
into
mov
jmp
sbb
or
xchg
clc
repz
mov
mov
hlt
add
cltd
inc
sub
mov
mull
imul
pop
mov
aas
push
ljmp
mov
in
mov
push
and
iret
mov
or
inc
movsb
in
dec
movsl
mov
call
add
cmp
push
jp
test
cltd
scas
ret
or
xor
adc
inc
dec
mov
lods
push
sub
add
or
popf
cmpsl
subb
repnz
sub
xlat
sub
jb
fisttpl
inc
faddl
shlb
xchg
jecxz
test
jns
push
movsl
jmp
cmc
js
les
dec
popf
pop
loop
js
fisttps
jno
inc
lds
cmp
call
dec
rcrl
in
out
mov
sub
arpl
push
dec
arpl
fwait
test
cs
inc
divb
and
inc
sub
mov
shll
testb
ss
test
shll
in
inc
sbb
into
in
mov
sbb
xchg
repnz
xchg
sub
pop
imul
dec
int3
xlat
jp
les
mov
test
stos
je
sahf
cld
int3
push
mov
popa
mov
cmp
test
lods
rcr
lahf
lods
xchg
lret
into
jmp
fs
mov
bound
cmpsb
mov
xor
push
pusha
imul
xchg
push
das
adc
mov
ds
sbb
mov
into
adc
bound
xchg
int
and
xchg
testl
inc
pop
call
scas
into
gs
insl
aaa
aad
jb
adc
sbb
jns
maxps
in
add
clc
lods
xchg
or
add
jl
lcall
roll
daa
icebp
xor
int3
lds
cmp
int3
mov
sub
insb
jg
jne
jge
pop
rol
mov
arpl
inc
xor
sbb
pop
add
push
pop
mov
jnp
or
std
mov
fldcw
cmp
lds
mov
mov
push
push
sbb
xor
pop
repnz
aas
fisubs
arpl
pop
pop
lahf
es
push
pop
jns
mov
rclb
sbbl
adc
and
jnp
push
and
or
add
je
lcall
sarl
cli
cltd
push
and
xlat
aaa
jge
or
adc
xor
add
lock
xchg
pop
inc
test
xchg
repnz
sub
sbb
or
popa
lahf
fcoms
ljmp
imul
inc
lods
cmc
outsl
sbb
pushl
cs
adc
bound
jp
scas
fidivl
les
aad
adc
inc
jae
or
and
ljmp
mov
sub
int
dec
cmpsb
das
jecxz
daa
dec
shl
jnp
imul
mov
and
cmp
stos
mov
aam
cltd
dec
fsubl
cwtl
sub
cmc
aam
test
dec
int3
mov
jmp
test
jbe
or
mov
movsl
lahf
push
sub
aad
outsb
sahf
push
push
das
dec
outsl
push
sub
cli
aad
mov
inc
inc
sbb
mov
mov
bound
xor
aaa
test
lcall
mov
into
push
repz
mov
daa
add
sub
add
fsts
mov
movb
int3
out
aaa
fisttpl
pop
add
dec
pop
es
mov
fistps
stos
mov
push
cld
cmp
inc
or
or
or
xor
push
cmpsl
pushf
movsl
push
mov
in
loope
mov
inc
inc
adc
and
pop
mov
xchg
push
lods
mov
push
mov
add
sub
shll
push
mov
jp
or
or
xor
xor
imul
mov
xor
push
into
aas
cmpl
cmp
jmp
xor
test
and
push
adcl
pop
je
ljmp
pop
mov
cmpsb
cmp
sbbl
les
sbb
stc
test
lds
adc
add
stos
stos
rolb
into
pusha
jbe
xchg
jnp
je
addr16
dec
xor
test
jns
int3
jl
bound
xor
lahf
xor
mov
xchg
or
pop
or
lea
sub
cmpb
mov
or
jp
fcmovb
xchg
pop
sbb
fists
imul
mov
ds
aad
jae
enter
inc
jnp
clc
dec
in
sbb
push
call
popa
roll
rolb
xorl
jbe
inc
cmp
in
push
stc
rolb
cmovge
cmp
iret
adc
cwtl
scas
mov
mov
adc
insb
pop
jo
fiaddl
add
imul
aaa
dec
sub
ja
adc
pop
jb
cmp
pop
jp
arpl
mov
dec
inc
pop
cmp
sbb
mov
xorl
xor
int
arpl
jne
stos
insl
pop
and
and
aas
cmpsl
pop
cwtl
setno
test
cmp
dec
mov
mov
and
cmp
and
mov
aam
ds
mov
mov
cmp
xor
mov
sahf
stc
cmp
jl
push
test
mov
insl
ljmp
ja
and
pop
js
int3
cltd
repz
imul
lea
stc
rcr
jo
push
fstps
std
xchg
outsb
cmc
mov
cmc
lahf
cmp
lods
add
ret
stos
cmp
cmpsb
mov
cmp
rcrb
xor
rcl
lea
push
cmp
ss
jecxz
addr16
pop
mov
in
das
rclb
add
dec
loop
gs
test
fs
lret
cmp
sahf
test
mov
stos
jnp
pusha
jp
and
add
je
jae
push
xchg
xor
sub
adc
mov
inc
outsl
push
sub
sbb
xchg
pop
sub
cmp
or
outsb
in
inc
jl
push
fistl
cmpsl
mov
push
push
sub
aaa
arpl
jns
xchg
or
pop
loope
add
test
popf
push
loop
fidivl
xor
int3
cli
sbbb
aaa
xchg
or
rcl
xor
mov
mov
inc
xorl
stc
lret
fldenv
inc
mov
sahf
mov
dec
mov
mov
mov
push
mov
dec
ret
xchg
cwtl
daa
jl
in
cmp
xchg
mov
clc
xchg
pop
add
iret
insl
pop
pop
jp
push
mov
int3
push
ror
dec
adc
out
bound
mov
and
fistpll
incb
jp
jecxz
mov
xor
out
lock
aam
cmpsl
not
pushl
push
cmpsl
call
clc
in
ret
push
add
imul
shlb
fwait
jge
pop
add
mov
mov
add
push
out
stos
add
in
adc
repz
add
push
pop
push
cmc
pop
cmp
pop
dec
cli
sub
jmp
cmpb
mov
sub
hlt
and
out
into
std
cwtl
out
mov
jno
xor
dec
pop
mov
jmp
pop
cmp
out
dec
fisubrs
jg
call
xchg
sbb
arpl
mov
jae
aaa
push
mov
mov
es
ret
xchg
mov
dec
out
inc
mov
frstor
scas
sub
push
dec
or
xchg
fsub
mov
mov
lods
sbb
popa
add
inc
ret
jnp
arpl
mov
dec
stc
pop
lds
jno
jne
jl
or
add
sub
icebp
cwtl
int
mov
movsb
and
in
adc
pop
scas
arpl
insl
popa
and
mov
fsts
push
outsb
pop
cs
cs
imul
pusha
les
sbb
lods
cld
rcll
sub
xlat
sbb
xor
jl
or
idivb
into
pop
inc
mov
xor
or
testl
push
mov
sbb
xchg
and
cmp
in
test
inc
or
lahf
xchg
imul
rcrl
mov
cmc
out
repz
lock
call
mov
jp
push
mov
mov
dec
sub
pop
movsl
dec
mov
cwtl
sub
lcall
in
adc
mov
mov
sahf
ss
add
insb
mov
pop
lock
popf
mov
addr16
cmpb
mull
adc
adcb
xchg
fstps
faddl
es
incb
pop
fsubrl
sahf
pop
mov
dec
fcmovbe
inc
mov
mov
movsb
add
repnz
sbb
sar
icebp
into
ljmp
ja
scas
push
stos
inc
out
dec
adc
xor
lock
call
jb
sbb
adc
pusha
adc
icebp
scas
lds
hlt
xor
mov
xchg
loope
mov
jmp
addr16
pop
xor
adc
filds
xor
int3
adc
push
fmulp
sub
loop
dec
rorl
rcll
lds
dec
mov
test
cmp
and
sbb
push
dec
xor
adc
rcll
in
notb
cwtl
rorb
decl
ss
addb
outsl
pop
loopne
movsl
out
and
add
clc
jne
xchg
fwait
int3
mov
fstp
jne
xor
jne
out
fs
jb
dec
push
adc
mov
inc
aam
adc
test
push
push
imul
fcmovb
lret
adc
lcall
cmp
adc
adc
cmp
fstl
jp
pop
ss
pop
sbb
jnp
stos
daa
enter
and
adc
push
cmp
xchg
jbe
adc
lods
inc
repnz
pop
inc
jg
test
and
loopne
mov
bound
in
push
popf
mov
je
cltd
stos
xor
int
fwait
negl
xor
and
lods
or
mov
imul
rclb
aaa
popa
dec
jb
adc
jne
lret
mov
cmc
sbb
cltd
fsubs
xchg
fidivrl
inc
out
jle
and
adc
cmpsb
jb
mov
and
js
xchg
fbstp
daa
push
sbb
aad
and
sar
fs
stos
bound
push
testl
cmpb
mov
add
mov
or
cmpsl
insb
enter
sbb
xchg
jp
orb
jecxz
ljmp
repz
pop
cmpsb
cmp
xchg
filds
sub
pop
or
adc
outsl
ljmp
iret
rclb
and
aaa
sub
das
aaa
notb
icebp
mov
js
cmp
out
inc
jp
jp
dec
dec
inc
outsb
or
mov
mov
loope
out
mov
je
and
add
mov
xchg
and
fcompl
cmp
es
shll
outsb
mov
lods
ss
je
movsl
rcl
xlat
pusha
push
inc
arpl
inc
fwait
mov
inc
divl
imul
mov
adc
pusha
xchg
dec
pop
hlt
inc
jp
and
dec
addr16
push
fs
icebp
rcr
adc
scas
pop
repnz
outsl
arpl
push
mov
stc
sub
bound
cmp
add
sbbl
mov
dec
sub
push
push
sub
mov
aaa
jle
nop
lds
lock
mov
cmp
sub
inc
stos
fwait
jno
imul
aam
fbstp
xchg
dec
mov
xchg
sub
pop
test
outsb
out
inc
inc
dec
jno
xchg
jmp
or
test
dec
jo
out
jb
mov
jns
lods
shr
lcall
push
inc
outsb
jl
enter
xlat
push
cmc
push
pop
out
lds
clc
movsb
std
xor
ja
xchg
enter
ss
cmp
rcrl
add
jo
sahf
sbb
push
mov
and
and
and
mull
xor
cwtl
out
cs
cli
outsl
mov
push
adc
int
imul
sbbb
mov
jns
sbb
jo
jle
fnsave
push
pop
adc
jne
mov
test
mov
inc
clc
sub
ds
xor
fs
fcmove
cld
xchg
cmp
incl
popa
insl
test
subb
mov
inc
clc
int3
inc
out
xchg
fs
mov
popf
mov
popf
add
or
bound
test
cmp
and
daa
push
in
fmuls
fdivrp
jns
inc
xor
cmp
push
add
dec
cmp
inc
xchg
int
mov
push
subl
pop
jns
in
adc
imul
sub
imul
iret
int
add
cmpsl
cmp
bound
test
aaa
or
imul
arpl
sub
jg
push
xchg
loope
push
inc
adc
std
mov
mov
sub
jne
mov
cmp
and
xchg
stos
pop
mov
sarl
jnp
test
xchg
pusha
shlb
cmp
pop
cmp
jg
mov
das
or
addr16
sub
addb
adc
jmp
mov
pop
outsb
loopne
mov
and
push
jmp
fidivs
data16
or
dec
sbb
dec
mov
cld
mov
dec
in
aas
pop
mov
mov
lods
sub
jns
cmpsb
adc
cltd
fs
cmpb
popf
addr16
dec
imul
inc
sub
ljmp
add
inc
jnp
sbbl
fidivrl
fcomp
adc
or
cwtl
xchg
outsl
leave
mov
and
push
push
adc
inc
stos
fs
push
push
aaa
jnp
pop
adc
les
fwait
mov
in
dec
iret
or
sub
jo
ss
pusha
int3
test
sar
pop
pushf
add
xchg
aam
add
out
push
nop
data16
push
sbb
jp
mov
fwait
cs
dec
in
sti
jbe
ja
or
addr16
fdivp
loop
pop
icebp
std
adcl
addr16
sbb
mov
xchg
mov
mov
inc
fsubp
fwait
idivl
mov
sbb
mov
ja
std
adc
dec
lahf
and
repnz
cltd
fldl
rorb
inc
push
xchg
test
std
btr
test
xor
add
pop
clc
pop
xor
fcmovnu
scas
lea
sub
frstor
and
fiadds
addr16
xlat
adc
mov
xchg
pop
gs
pusha
sub
push
loopne
and
fs
cmp
je
fsubrl
divl
outsb
xor
jnp
pop
push
popf
dec
sti
pop
push
notb
dec
inc
scas
sbbb
outsb
jae
js
inc
int
add
lahf
mov
jbe
clc
adc
call
mov
enter
xchg
fsubrp
fwait
xchg
dec
arpl
or
inc
jne
pushf
ret
adc
mov
fwait
ret
or
adc
jae
pushf
jmp
rclb
jle
ss
les
pop
lea
jmp
jns
lods
sub
daa
push
filds
mov
push
nop
mov
ret
clc
in
xchg
cmpsl
sub
lret
scas
cmp
dec
cmp
out
in
jb
push
icebp
ffree
sub
add
daa
insl
icebp
ds
aaa
add
mov
pop
push
or
jo
adc
jmp
out
push
aad
mov
imul
mov
jb
out
mov
test
jp
in
and
in
arpl
pop
addb
orb
xchg
xchg
test
insl
dec
jne
in
jne
push
mov
pop
pop
sbb
mov
xchg
add
popa
sbb
xor
lods
scas
dec
xchg
pop
pop
jl
int3
jmp
pop
shlb
adc
mov
faddp
mov
dec
std
jg
push
mov
dec
jbe
ret
sub
push
sbb
jns
inc
rcl
jo
jmp
and
negb
ss
pop
push
mov
pop
mov
sbb
cltd
jo
cld
mov
xchg
enter
lret
add
cmpsl
addr16
jp
or
mov
dec
and
cmp
insl
adc
ljmp
outsl
fwait
popf
outsb
scas
xor
mov
dec
xchg
inc
push
movsl
xor
scas
mov
sahf
pop
or
sub
js
test
testl
roll
dec
mov
fdivrp
pop
repnz
inc
cltd
movsl
std
stos
add
push
insl
push
fs
cwtl
aaa
add
pop
aas
sbb
cmp
and
pop
std
sub
add
negl
pop
xor
lock
sahf
in
add
mov
imul
xorb
mov
add
sub
xchg
inc
xor
scas
fldcw
cmp
mov
cmpsb
sbb
push
mov
mov
push
es
cmp
mov
std
pop
lock
inc
das
push
mov
cmp
mov
mov
test
and
mov
ss
xchg
sub
cmpsl
sbb
pusha
mov
icebp
cmp
test
ret
jb
repnz
out
and
and
mov
arpl
cmp
mov
xchg
xor
push
mov
or
jmp
inc
popa
mov
repz
fists
lret
arpl
mov
jbe
sbb
dec
movsb
and
xchg
test
mov
lds
fmull
xor
mov
cmc
in
sub
mov
data16
mov
int3
xor
stos
scas
fstpt
jns
jno
stos
cwtl
add
mov
jp
add
or
cmp
adc
xor
inc
jg
mov
dec
or
xchg
adc
ss
pop
fdivrl
ja
jo
jae
ret
adc
in
stos
push
test
xchg
adc
ss
test
stc
pop
mov
jbe
test
call
dec
lods
test
stc
js
or
cmc
pop
dec
push
ljmp
int
sarl
or
and
add
shll
lods
mov
adc
mov
jae
inc
pushf
and
incl
inc
shlb
push
pop
inc
inc
add
cmp
pop
mov
mov
cmp
sub
shll
shlb
add
out
outsb
adc
jns
push
xor
dec
nop
cmp
fildl
mov
mov
mov
sub
xor
mov
in
xchg
cmp
into
push
ss
push
test
insb
cmp
xchg
push
lds
jnp
mov
int
arpl
cwtl
int
imul
and
insb
fcompl
sbbl
inc
lahf
sub
lods
pop
out
js
mov
inc
push
inc
out
xchg
jae
ds
add
shrl
mov
dec
loop
add
test
cmc
push
rcll
enter
in
mov
das
lret
sbbb
pop
inc
out
es
sbb
cmpsl
in
push
jb
push
pop
push
into
out
call
fldl
shrl
push
imul
sbb
jl
xchg
nop
movsl
fisubrl
cltd
mov
jns
dec
popa
pop
mov
inc
idivb
pop
mov
cltd
jmp
add
jmp
cmp
inc
cmp
bound
aam
pop
outsb
cmp
aam
gs
ds
push
add
inc
push
xor
loopne
mov
in
xchg
outsl
lea
lods
pushf
push
or
test
rolb
scas
test
or
es
cmp
addl
mov
call
sahf
sub
sub
inc
sub
mov
sbb
xchg
inc
loopne
push
lret
addr16
jno
sbb
maxps
pushf
pop
dec
dec
lods
data16
push
pop
cmc
push
xor
repz
pop
mov
aam
incl
mov
mov
mov
stos
in
jb
xchg
rcrb
push
jb
ds
jp
iret
loopne
aam
pop
lock
dec
and
xchg
outsl
movsb
rclb
mov
cvttps2pi
mov
mov
mov
icebp
adc
lods
mov
and
push
cld
cmp
xor
out
or
lea
dec
inc
pushf
jge
inc
adc
in
or
and
adc
rclb
jge
jns
in
mov
in
pop
jp
sub
sar
sbb
mov
iret
mov
xchg
mov
dec
out
out
mov
mov
into
mov
add
out
out
out
out
adc
repnz
cmp
mov
lcall
lds
stos
and
push
jle
add
daa
lret
cltd
mov
movsl
jno
je
lods
clc
daa
cli
sahf
fnstcw
pop
jne
test
cld
lea
dec
in
mov
xor
sbb
cmp
cmp
mov
outsl
lods
or
test
mov
scas
icebp
dec
out
mov
out
pop
das
stc
hlt
cld
push
cmpsl
mov
mov
scas
pop
lcall
sbb
ss
sub
push
mov
lods
adc
push
movsb
js
or
in
mov
adc
bound
xchg
cmp
cmpsl
arpl
mov
repnz
repnz
inc
mov
cmpsl
pushf
cwtl
into
fdivrp
fdivrl
inc
sbb
orb
sbbb
imul
mov
cmp
push
lret
mov
mov
jnp
sbb
add
mov
mov
nop
jg
cmp
lcall
lods
ljmp
adcb
push
fstl
cmp
sub
int3
sbb
in
int
xchg
add
dec
call
loope
icebp
push
leave
add
pop
jecxz
cld
mov
adc
lret
popa
cmp
sbb
jns
inc
daa
mov
lret
push
sbb
les
testb
test
adc
jae
push
into
or
and
inc
jbe
jb
xchg
cmpb
pop
insb
rep
dec
xchg
inc
adc
fwait
push
or
sub
les
xchg
les
loopne
xchg
push
jbe
movsl
adc
daa
aad
xchg
cltd
insl
mov
mov
fists
roll
jge
adc
in
outsb
or
cwtl
push
enter
fldl
shld
iret
and
pop
push
xchg
outsl
clc
outsl
stos
sub
and
and
cmp
xlat
and
sub
push
mov
aas
push
mov
adc
fstp
lods
cltd
cld
mov
pop
cmc
mov
inc
cmp
xchg
stos
pop
or
mov
mov
push
outsl
and
es
cmp
pop
or
or
loop
inc
scas
jno
pop
in
xchg
rorb
js
inc
add
inc
or
push
lea
add
jg
push
insl
lcall
ds
andl
xchg
loopne
sbb
ja
aas
nop
or
sbb
imul
ds
mov
mov
xor
cmp
jmp
lret
push
push
popl
add
dec
jno,pn
fnstcw
fildl
sub
xor
xchg
jnp
out
xor
je
js,pn
inc
clc
call
or
js
lods
dec
xor
mov
adc
out
xlat
push
test
es
lahf
rcrl
fcomp
rolb
pop
xchg
dec
jnp
xor
dec
aaa
data16
mov
mov
jmp
mov
movsb
pop
imul
and
aam
data16
sbb
sahf
fidivrl
aad
xor
pusha
ret
bnd
sbb
and
sub
xchg
dec
enter
insl
shll
lret
fs
mov
xor
mov
cld
mov
fisttpl
xorb
cmp
cmp
push
les
cltd
xor
sbb
cmc
les
mov
and
sbb
fldt
test
xor
xchg
sti
bound
arpl
mov
out
shll
sbb
mov
xchg
jle
fs
test
fnsetpm(287
sub
fldcw
out
and
clc
out
xorl
cmp
inc
push
xor
mov
lcall
xlat
sti
and
shl
fistpl
push
cmpsl
and
jnp
push
mov
sbb
mov
mov
or
imul
push
lock
add
push
lahf
sarl
aaa
pop
jae
vmovd
and
cmp
xlat
adc
repnz
pop
mov
mov
xchg
and
pop
lods
pushl
rolb
std
add
in
adc
jne
and
clc
pop
insb
xchg
push
out
vxorps
cmp
cmc
cmp
push
movsl
cmpsb
in
xor
aam
popf
movsb
insl
xchg
and
pop
insl
stc
pushf
mov
popa
mov
and
and
leave
fs
mov
cmpsb
aaa
sbb
outsl
jg
lret
jge
cmc
adc
je
dec
fldl
pop
roll
mov
repz
and
ja
dec
sbb
cs
stos
das
imul
dec
jl
adc
xor
xchg
andl
lret
sbbb
cli
je
push
fwait
inc
stos
or
faddl
inc
add
and
inc
and
inc
mov
inc
repz
scas
cmpsl
dec
adc
sub
dec
push
ja
orb
aaa
mov
pop
repz
mov
shlb
je
push
shrl
xlat
mov
mov
add
ds
ret
jmp
ret
push
aas
mov
pushf
stc
clc
movsb
mov
dec
mov
popa
push
in
jns
mov
push
stc
mov
jmp
sub
cli
xorl
stc
fldcw
jbe
xor
xchg
call
push
dec
inc
shrl
ljmp
sbb
or
arpl
cmp
testl
aas
fists
test
jo
pop
hlt
bound
scas
repnz
movsb
and
lcall
mov
inc
xlat
adc
pushf
jge
ret
flds
jge
test
sub
sub
mov
lea
lods
push
or
stos
dec
push
daa
jl
leave
pop
dec
lret
cmp
mov
mov
mov
mov
les
inc
negl
std
iret
mov
addr16
into
and
cmpsb
mov
dec
adc
test
adc
rcrb
mov
mov
mov
cmpsl
sarb
xor
mov
add
push
out
push
or
cltd
push
mov
xchg
es
jg
mov
dec
outsb
out
hlt
cwtl
shrl
mov
xchg
add
pop
pop
and
adc
and
xchg
push
shll
mov
out
int3
filds
hlt
dec
mov
aam
fdivrs
in
cmp
push
inc
out
cmp
cmp
xchg
sub
call
cmp
iret
pop
add
xor
jle
jno
add
popa
mov
es
mov
mov
std
dec
sti
sbb
imul
andl
add
xchg
aad
lock
sub
pushf
xor
push
mov
sbb
sbb
lahf
mov
push
jne
ds
adc
jne
push
rolb
cmp
xorl
pop
add
pop
aad
cmp
dec
daa
jg
fldt
mov
mov
je
imul
pop
push
pop
stos
jl
test
aaa
cltd
mov
leave
cmp
dec
mov
les
and
scas
cs
popf
fnclex
lock
std
push
icebp
jbe
or
mov
cwtl
push
daa
pop
pop
bound
dec
fldt
test
gs
pop
mov
icebp
ret
mov
or
cmp
mov
push
ret
xlat
andl
xchg
inc
inc
ljmp
cmp
and
icebp
int3
cmp
fsubl
roll
iret
mov
ss
adc
out
inc
mov
mov
sbb
pop
xchg
in
adc
cmp
fdivs
in
sbb
stos
ljmp
daa
jne
add
and
cmp
jle
out
or
pop
out
cmpsl
add
dec
mov
mov
xor
xchg
adc
pop
stos
pop
imull
or
shrb
outsl
xlat
std
inc
xchg
test
mov
call
jnp
xchg
mov
in
push
add
dec
or
popf
mov
sub
inc
or
push
inc
std
fs
cmpsb
push
repz
mov
add
push
testl
mov
ljmp
and
cli
fs
mov
push
jbe
test
push
call
aam
bound
adc
cmp
fnstcw
fsubr
out
xchg
jne
push
inc
adc
or
sbbl
or
scas
push
cld
cltd
mov
scas
cmp
movsb
loop
into
push
mov
jne
sbb
jle
std
jno
lods
repz
jmp
test
loopne
push
xchg
pop
mov
xor
mov
dec
adc
addl
mov
loope
cmp
pop
loopne
popf
mov
adc
mov
and
mov
cltd
sub
jbe
jle
push
fstl
roll
adc
dec
sub
arpl
mov
jge
ss
call
sbb
xchg
lret
jle
ret
cli
roll
jb
scas
adc
data16
and
dec
fmull
lods
push
pop
pop
pop
add
add
push
stos
add
in
lret
clc
xchg
out
pop
mov
jnp
fcmovnb
mov
ja
sbb
xchg
adc
jnp
xor
mov
sti
xchg
jae
enter
sahf
adc
lahf
dec
xchg
jl,pt
and
mov
enter
out
shll
mov
aaa
in
mov
out
xcrypt-ofb
cmpsl
fisttpll
leave
idivl
dec
lock
or
popa
cmpsl
sarl
jg
inc
jg
test
xchg
mov
xor
mov
aas
scas
mov
xchg
sub
test
mov
pop
pop
push
push
or
cmp
sub
jo
xchg
divl
es
push
imul
add
outsb
not
ds
cmpsb
std
add
mov
adc
stc
xor
je
mov
jno
sub
sbb
inc
mov
imul
jg
mov
add
jecxz
cmp
push
bound
adc
ret
xor
push
fs
nop
fwait
in
mov
in
jnp
in
xchg
test
lds
cmp
and
dec
hlt
pop
mov
mov
rorb
mov
ja
inc
pop
in
popa
movsl
cmp
xchg
jno
stos
push
inc
movsl
and
lret
cmpsb
sub
push
xchg
repnz
xchg
lock
js
int3
push
adc
iret
inc
clc
mov
icebp
sbb
mov
or
mov
test
pushf
fstp
cmp
xchg
push
std
cli
cmc
imull
sub
pop
push
cltd
xor
cmp
icebp
mov
sub
repz
outsl
mov
iret
cwtl
jmp
xor
repz
enter
mov
and
stos
ja
xor
lret
sti
dec
add
or
jno
cmpsb
push
int
xor
int3
aam
inc
cs
test
fwait
jmp
dec
in
jno
add
mov
je
mov
sub
scas
rclb
addr16
faddl
in
loope
cmp
mov
push
and
lods
ljmp
loope
mov
push
leave
sti
fdivs
mov
dec
add
pop
jecxz
mov
or
jae
push
iret
test
mov
test
jg
inc
push
cs
mul
xchg
adc
mov
mov
in
or
jbe
jnp
cmpsl
push
cld
ja
xchg
xchg
cmpsb
jmp
sub
mov
dec
pop
aas
jno
dec
aad
test
add
fimull
int3
inc
imul
xchg
inc
dec
add
push
mov
insl
mov
icebp
pop
mov
stos
cmp
js
arpl
jne
imul
sahf
add
adc
lret
sub
cs
fnstsw
cmp
test
mov
shlb
or
in
push
sbb
or
push
dec
sbb
mov
in
xchg
add
or
xor
jl
xor
push
add
subl
scas
mov
dec
insb
sar
cmp
cmp
adc
outsl
push
inc
je
lret
insb
lods
scas
pop
and
fildll
out
xchg
or
pop
fs
rclb
sub
add
or
shl
pop
int
xchg
jg
push
rcll
or
cmpsl
mov
stos
subl
push
sti
sbb
incl
dec
xor
pushf
rorl
cmp
push
repnz
aam
insb
out
or
pop
rcrb
jmp
aam
mov
jae
dec
jns
add
sbb
push
jb
mov
dec
mov
add
outsb
clc
repz
inc
cld
cli
pushf
jp
push
mov
unpcklps
das
inc
dec
das
xor
rorb
push
xlat
out
cld
inc
add
aam
negl
mov
popw
iret
jl
xchg
cmc
pop
jbe
mov
idivb
xor
aad
dec
push
fs
sbb
mov
hlt
add
lret
adc
sar
mov
add
adc
aas
mov
test
sub
inc
jmp
or
in
scas
xor
push
xchg
arpl
insl
sbbb
jmp
adc
fwait
sub
mov
test
test
adc
fs
cmc
into
mov
inc
xor
mov
pushf
loopne
pop
scas
cmpb
fwait
or
mov
sbb
test
add
pop
data16
mov
sbb
mov
xor
out
or
fdivr
aaa
or
cmp
xchg
stos
clc
call
loope
mov
loop
fisubs
sub
aaa
mov
xchg
inc
imul
mov
and
mov
clc
bound
mov
andb
sub
mov
xchg
sub
xlat
out
bnd
cmp
mov
fisttpl
and
or
insb
mov
mov
sbb
in
inc
cmc
cmp
push
cmpsl
daa
sti
daa
das
push
in
mov
negb
shll
fcoms
loop
lods
outsb
or
in
mov
mov
xchg
lods
push
jp
mov
in
dec
decl
xor
aaa
inc
jl
leave
into
in
jg
loopne
cmpsl
in
mov
adc
sub
mov
jmp
mov
and
sbb
and
movsl
xor
ret
lret
jns
mov
xchg
pop
leave
into
xchg
mov
or
mov
ret
xchg
mov
cltd
and
cmc
lock
inc
dec
aad
and
push
push
cwtl
lock
push
pop
setb
pop
stc
loope
mov
jnp
outsl
sbb
in
xor
loop
lret
fildl
cltd
push
daa
xchg
clc
and
divl
fs
xor
enter
mov
icebp
inc
mov
pop
jns
lods
mov
sbb
jno
mov
push
xor
jno
dec
loop
int3
cmp
out
dec
mov
dec
imull
loop
cld
stc
and
scas
jle
xor
das
adc
fisttpl
xor
ja
sahf
cmp
mov
add
add
cltd
ja
pushf
mov
or
fisttpll
es
inc
mov
inc
lods
leave
ss
cmp
dec
push
fdivrs
stos
and
or
push
in
aad
hlt
cmc
jno
inc
pop
pop
jbe
cmp
nop
xchg
inc
pop
mov
sbb
aam
sbb
cmp
and
add
bnd
data16
sub
das
jb
adc
mov
aas
mov
adc
adc
orl
dec
push
scas
mov
aaa
je
inc
loope
stos
gs
cmp
push
scas
mov
jl
inc
mov
sbb
inc
enter
xchg
dec
jmp
dec
adc
int
stos
or
mov
cmpsl
int3
repz
inc
push
aaa
sbb
repz
test
push
andb
js
push
negb
adc
mov
flds
cld
test
mov
jmp
cld
push
adc
je
mov
mov
shl
lods
sub
xor
cmc
cmpsb
ljmp
jo
pop
ret
or
cli
mov
push
pop
int
ss
mov
cmp
dec
dec
dec
addr16
imul
pop
pop
adc
cmp
ja
or
and
out
gs
lahf
hlt
dec
mov
adc
test
sbb
call
scas
loope
add
gs
inc
inc
pop
fimuls
xor
into
mov
cmp
es
pop
dec
inc
mov
cmp
fildl
lds
pop
pop
lods
and
mov
fildl
sub
loopne
aad
dec
cmp
dec
push
insl
or
mov
push
mov
inc
inc
jno
mov
push
ret
out
call
inc
pop
mov
jne
xchg
add
fmulp
push
mov
incb
icebp
add
test
jae
ret
xlat
aas
mov
inc
mov
push
lcall
in
push
dec
lret
xchg
sub
in
sbb
stc
jl
pop
inc
xchg
cwtl
jno
adc
divl
push
jne
sbb
pop
fcompl
pop
jnp
push
dec
dec
sbb
cmpsb
sub
push
or
cmpl
mov
pop
icebp
lret
sbb
in
fsubl
pop
adc
mov
lret
pop
test
jmp
mov
adc
pop
xor
sub
sub
jns
pop
test
ljmp
lahf
mov
aas
rcr
or
loope
or
pop
inc
dec
add
xor
nop
test
movsl
push
movsl
pop
arpl
xchg
sbb
aad
dec
jmp
fwait
sub
adc
imul
or
insb
in
imul
imul
mov
mov
xor
fildl
test
push
add
inc
add
aas
mov
ljmp
call
mov
push
inc
sbb
cmp
dec
hlt
das
leave
addr16
fs
xor
filds
aas
sbb
aad
jl
dec
fsub
dec
cli
add
sub
outsb
addb
xchg
jmp
loope
jecxz
fcomps
xorb
inc
rorl
mov
pop
mov
imul
mov
insl
mov
or
xor
ffree
loope
push
mov
pop
mov
fsubp
mov
popa
test
pop
aaa
and
stos
xlat
and
inc
std
add
call
imul
dec
fsubs
insl
adc
sbb
repnz
shrl
stos
pop
add
xlat
cld
stos
inc
sub
add
adc
frstor
cmp
xlat
sarb
pop
sub
mov
inc
jmp
arpl
or
mov
in
cmp
loope
arpl
lcall
mov
inc
push
push
or
sub
stc
movsb
nop
in
je
aad
mov
sub
test
pop
jl
mov
jecxz
dec
ret
sub
xchg
call
ret
iret
pop
hlt
shlb
enter
jae
jle
inc
pop
push
imul
adc
or
xchg
xchg
in
orb
std
leave
dec
cmp
push
cwtl
adc
pop
es
sbb
inc
ds
xchg
mov
leave
inc
das
jl
or
std
imul
lret
int
pop
ss
pop
iret
sahf
pop
lret
daa
sbb
xorl
rcll
negl
lods
pop
lahf
push
pop
adc
and
or
fs
and
mov
pushf
out
or
scas
xchg
push
xorb
sub
sarb
clc
rclb
inc
push
fsub
mov
hlt
and
add
imul
mov
je
nop
insb
aaa
std
lea
sub
jb
cli
or
mov
test
and
mov
cmp
ljmp
or
cli
mov
inc
loopne
pop
mov
outsb
popa
arpl
sahf
setne
mov
shll
daa
movsb
jae
cmc
push
imull
fs
inc
sub
jne
pusha
cmp
frstor
ljmp
xor
xor
in
lret
mov
inc
push
xor
xchg
jae
addr16
and
orl
mov
das
dec
dec
fisttpll
mov
sbb
push
fcomp
jb
fwait
repnz
xor
add
pushf
add
mov
push
hlt
pop
ret
mov
push
and
stos
lret
cmp
xchg
mov
rcl
inc
push
in
or
xchg
xlat
adc
imul
fdivrl
insl
adc
xlat
jno
insl
mov
and
scas
std
je
bound
cld
scas
aam
clc
gs
pop
mov
sbb
fucomip
ljmp
cmpsb
stc
out
xor
call
jne
xor
add
pop
jmp
daa
push
lock
push
stc
add
push
std
sub
pop
fs
xchg
fsubrs
dec
pop
dec
push
movsl
pop
inc
or
mov
inc
dec
xor
sbb
xchg
scas
cwtl
lea
adc
push
mov
mov
popf
es
fcomps
imull
data16
or
cmpl
mov
pop
pop
add
mov
jbe
ret
out
pop
sarb
in
cmp
sbb
dec
push
outsl
mov
mov
jle
inc
adc
lds
xor
outsl
pusha
pop
mov
xor
mov
daa
scas
mov
std
mov
mov
inc
loopne
int
fdivr
sbb
fs
mov
lcall
xor
ss
pop
mov
mov
jle
mov
xor
inc
into
adc
aas
cltd
loop
mov
lds
jl
push
push
adc
sbb
fstpl
adc
adc
cli
ljmp
fwait
hlt
push
mov
xlat
cmp
jnp
fimull
mov
int3
cli
aad
mov
sub
cmp
mov
cwtl
mov
adc
xor
jbe
mov
mov
stc
adc
test
add
popa
mov
mov
jecxz
lods
mov
fwait
adc
jo
jne
mov
adc
jae
je
sub
jp
sbb
rcrb
fsubl
fdivrl
lcall
rolb
outsl
repnz
ss
mov
arpl
fs
mov
fcompl
imul
stos
push
add
add
push
dec
test
sub
into
jno
inc
in
or
xchg
sub
dec
mov
loopnew
sbb
pop
adc
jo
mov
je
data16
jecxz
sbb
pop
sub
loope
fwait
inc
sbb
jno
aad
jle
jae
nop
sbb
daa
ss
arpl
lahf
sbb
jmp
imul
xor
or
jne
jp
fidivl
mov
sub
test
cmp
in
mov
add
push
insl
cmp
gs
cmp
cmpsl
scas
jp
xrelease
cmpsl
dec
lods
rcll
mov
push
int3
push
mov
sbb
mov
jo
sub
mov
jb
out
xchg
push
std
mov
cmpsl
mov
test
add
ret
adc
xchg
int
popf
mov
xchg
xchg
mov
std
jo
mov
das
dec
jl
and
push
mov
lods
push
nop
imul
xchg
scas
push
in
jnp
aam
cli
push
mov
ficomps
add
dec
or
jecxz
lods
ja
xor
sbbb
adc
ja
push
jnp
imul
sub
pop
or
mov
or
sbb
fisttps
push
aam
pop
jno
fcompl
bound
mov
mov
inc
pop
shrl
pop
lock
shl
leave
subl
add
out
aas
push
mov
push
jmp
fisubrl
movsb
ljmp
fadd
add
cs
cld
pop
mov
rcrb
sti
mov
xlat
movsl
arpl
inc
add
pop
or
stc
outsl
pop
inc
pop
out
je
jge
add
repz
xor
popa
pop
mov
push
push
fcomi
fcmovnu
push
scas
sub
jge
das
pop
and
xchg
ss
and
stos
aad
repz
xor
lahf
fisttps
movl
push
fcomp
fmuls
and
xor
xchg
call
and
lret
pusha
lea
sub
jle
jmp
out
push
pop
incl
fs
cmp
sbb
or
outsl
dec
xchg
mov
or
mov
ds
adc
xchg
push
cmp
sahf
sbb
cld
add
aaa
push
mov
sarl
repz
cmpsb
jne
xor
rcr
xchg
pop
lahf
jl
fstp
in
mov
hlt
or
xor
scas
test
int3
lods
mov
lea
negl
cmc
out
mov
test
and
pop
into
add
sbb
bound
ss
sbb
cmp
inc
rorl
push
jbe
fs
sub
sbb
sbbl
sahf
test
ficoml
movsb
mov
dec
adc
xchg
or
movb
sbb
and
xchg
dec
je
push
in
xchg
test
sbb
test
mov
daa
sub
fwait
ret
mov
ror
add
enter
lods
pop
jae
xor
arpl
ljmp
adc
add
mov
test
test
rclb
int
call
jp
loop
mov
push
push
push
dec
cmp
mov
adc
push
xchg
dec
rcll
pusha
ret
mov
mov
sub
xchg
testb
xor
cs
std
sbb
xchg
adc
fmul
lret
aam
xchg
and
hlt
int3
les
lret
sub
add
std
fadd
push
sub
xor
push
loopne
daa
cmpsb
rorb
aam
iret
sahf
stc
arpl
adc
xchg
lds
xlat
and
jb
sbb
sahf
add
fs
pusha
cltd
cmc
mov
mov
pop
popf
test
andb
push
movsl
ljmp
mov
cltd
or
mov
push
cmc
mov
mov
daa
cmp
pop
push
sub
cltd
sub
fdivrl
and
adc
enter
sub
mov
dec
mov
push
sbb
scas
in
lea
sbb
xor
or
dec
lahf
dec
cmpsl
jg
xchg
mov
push
imul
xor
sbb
mov
es
xchg
and
jnp
pop
xchg
out
push
loopne
add
mov
adc
test
sbb
int
adc
shll
xchg
inc
adc
push
lcall
xchg
insb
push
popa
int
stc
js
cltd
pop
jns
push
jnp
sbbl
leave
aaa
jmp
pushf
fadd
pop
pop
push
add
jecxz
imul
test
lods
xor
iret
or
inc
pop
add
shlb
jg
xchg
adc
mov
jl
cmp
mov
jno
jle
xor
stos
in
jbe
lds
repnz
xor
mov
or
push
arpl
rorb
in
lods
inc
fwait
dec
sahf
adc
lods
test
adc
mov
jne
movsb
xor
xor
jns
push
xor
inc
mov
mov
add
hlt
test
xor
inc
mov
xchg
push
mov
je
cmpsb
cmp
repz
jl
in
pop
dec
mov
mov
fs
lret
jnp
lret
iret
cmp
pop
test
xor
mov
mov
mov
adc
adc
cmp
pop
movsl
xchg
out
cmp
mov
inc
xor
pop
jae
popf
mov
sbb
enter
xor
mov
xorb
ss
add
ds
cmp
adcl
sub
pop
cs
add
lahf
lock
imul
mov
xor
sbb
adc
imul
lods
fistl
mov
mov
lcall
movsl
adc
jmp
js
dec
add
aaa
mov
and
pop
dec
xchg
xchg
cmpsl
cmc
mov
add
sub
or
mov
jns
xor
lods
or
inc
lahf
je
or
shl
mov
adc
movsb
in
adc
ret
inc
std
ds
mov
lcall
or
cmp
in
aad
ja
sbb
popf
jnp
mov
cwtl
insb
rcll
cwtl
cmp
xchg
inc
das
in
inc
inc
jge
out
inc
push
sub
rorl
lcall
jle
sahf
sub
addr16
xchg
add
pop
sub
dec
mov
test
or
test
or
pop
xor
adc
subl
push
or
mov
stos
flds
inc
cmp
jno
xchg
cmp
or
ss
test
in
inc
pop
pop
in
arpl
lcall
xchg
sbb
pusha
fsts
add
shll
mulb
adc
sti
cmp
stos
mov
imul
cmc
cmpsb
mov
sub
out
mov
aad
mov
outsl
cs
xor
stos
out
push
xchg
fwait
sbb
dec
sbb
xchg
lods
push
bound
jns
sub
sbb
out
nop
dec
sub
push
int
das
scas
outsl
push
add
mov
add
daa
addr16
cmp
dec
sub
jg
repz
jae
movsb
push
out
adc
dec
dec
lret
movsl
add
cmc
inc
cmpsb
pop
adc
ret
ds
mov
push
lret
outsl
aaa
pop
add
mov
repz
scas
sbb
inc
or
sub
leave
imul
mov
xlat
or
dec
into
gs
or
mov
mov
mov
mov
push
xchg
sbb
cmp
jno
orl
jo,pn
sbb
insl
cs
movsb
rcll
mov
lods
and
pop
jns
dec
lahf
test
pusha
mov
jbe
push
pusha
mov
cmpsl
sub
jl
mov
lahf
rolb
out
cmpsb
mov
popa
cwtl
pop
cld
xchg
aad
daa
or
or
dec
out
insl
sahf
out
js
pop
dec
fsubl
loop
in
push
aaa
movsl
jo
out
cmpsl
or
repnz
bound
add
lock
test
mov
out
push
mov
cmp
sbb
cmpsl
jg
mov
mov
rorb
arpl
ds
push
lds
pusha
imul
add
jl
lret
push
sbb
imul
mov
dec
and
icebp
adc
jmp
adc
mov
xchg
setne
and
push
push
not
pusha
scas
scas
daa
addl
insb
mov
jnp
aaa
adc
divb
iret
or
dec
dec
les
bound
mov
sub
lcall
aam
dec
mov
lea
push
scas
ja
dec
sahf
inc
xchg
lahf
ret
out
out
int
and
jae
cli
pushf
adc
or
jmp
hlt
push
into
mov
lahf
xor
movsl
sbb
xchg
mov
sbb
sub
imul
sbb
jae
lods
jnp
pop
aaa
rorb
test
mov
add
or
ds
fwait
into
mov
inc
adc
and
xor
mov
push
xlat
mov
push
cs
shld
jmp
xchg
subl
lcall
mov
inc
loop
push
aas
cs
push
ficompl
test
push
jl
call
sub
mov
stos
or
sub
lods
stos
in
popa
loop
fdivrl
cmpsb
push
and
arpl
insl
adc
mov
jecxz
and
add
and
fildl
mov
orl
jno
data16
sbb
inc
scas
push
stc
insb
std
fnstsw
xchg
fnsave
dec
lcall
and
rcl
int
mov
cld
aam
adc
jecxz
loopne
jg
add
mov
xchg
pusha
mov
jb
or
orl
out
roll
test
cmp
xlat
push
jecxz
jp
and
xchg
nop
pop
xorl
cmp
push
jg
divb
dec
cli
mov
jge
sar
dec
cmpsl
nop
bound
pop
ja
sbb
je
dec
push
xchg
mov
data16
arpl
hlt
out
push
lods
shl
imul
push
lods
es
push
inc
jmp
cli
jo
cld
inc
and
fwait
jb
enter
xor
in
push
pop
imul
add
inc
mov
mov
xchg
pop
xchg
sbb
inc
mov
sbb
iret
mov
imul
in
xor
cwtl
out
jb
test
mov
dec
sub
mov
imul
or
inc
lahf
xor
adc
clc
je
push
jp
rcll
arpl
cmp
mov
mov
cmc
fildl
push
lahf
std
pop
inc
gs
int
dec
cmp
mov
inc
jo
xchg
fsubl
lcall
dec
lock
lret
fmuls
fs
ds
and
ds
dec
jnp
lret
in
imul
pop
pusha
push
xchg
adc
adc
cli
xchg
push
jg
add
dec
out
sbb
iret
mov
dec
jmp
rolb
mov
loop
xchg
stos
movsb
lahf
lahf
out
dec
clc
lds
es
push
jns
and
or
fwait
lods
test
cmp
in
and
loop
lcall
jge
lock
jno
xchg
inc
and
stos
scas
sbb
loope
push
jb
push
mov
xor
lea
loop
push
jg
addr16
sbb
rol
pop
in
scas
sarb
std
mov
adc
adc
loop
adc
mov
movsl
xor
add
sbb
mov
mov
dec
xchg
mov
in
mov
das
xchg
dec
sub
dec
push
mov
enter
popf
pop
fimuls
les
mov
cmp
push
push
ljmp
inc
scas
pop
sbb
lods
jo
push
mov
xor
pushf
mov
outsb
lock
mov
into
xor
test
in
adc
imul
jl
out
jno
roll
sub
cmpsb
pop
sub
xchg
dec
es
fisubrs
dec
push
int
dec
pusha
fiadds
dec
pop
dec
xchg
pop
ja
xchg
movsl
xchg
scas
mov
xchg
pushf
pop
cs
negb
xchg
xor
inc
sub
xchg
pop
call
jae
inc
inc
das
push
xchg
int3
mov
mov
in
test
pop
inc
or
adc
insl
push
cmp
mov
sub
clc
pusha
sbb
sti
or
ficomps
pop
cwtl
lods
adc
sahf
fsubp
pop
pop
and
xor
out
mov
mov
dec
push
cmp
iret
jg
xor
in
jne
cmp
fwait
in
mov
mov
fwait
mov
nop
mov
xchg
or
jo
lret
sbb
adc
mov
ret
int3
jmp
fs
les
sbb
jmp
mov
pop
aaa
cmp
adc
ficomps
cmp
pop
and
out
ffreep
xchg
pop
repz
divl
jecxz
mov
xchg
jns
int3
push
movsb
pop
iret
sub
mov
fdivrl
jb
adc
xor
in
repnz
adc
add
lock
cmp
ret
mov
adc
and
adc
push
sub
push
cltd
aaa
jne
movsb
inc
addr16
jmp
movsb
mov
fiadds
and
push
mov
enter
mov
repz
fs
mov
fidivrl
rclb
rcr
out
inc
push
sahf
pop
pushf
and
xor
sahf
mov
mov
cli
clc
data16
in
loopne
add
sarl
or
fistps
add
sbb
cmpsl
in
das
and
push
scas
out
pop
fs
or
data16
in
test
pushw
rclb
push
insb
ret
pop
jae
cmpsb
mov
cmp
fstl
enter
jmp
jb
nop
dec
jle
ret
insl
icebp
mov
repnz
mov
popa
mov
add
frstor
bound
inc
js
and
and
sub
testb
lds
lret
jle
call
pop
stc
jb
fnstenv
popf
jnp
dec
stos
insb
mov
mov
sub
xlat
add
cmp
mov
out
mov
jmp
test
push
dec
scas
add
lahf
jl
adc
inc
jae
in
out
jl
jne
inc
lea
inc
sti
mov
aad
jl
inc
mov
in
dec
mov
lods
xor
ljmp
add
into
sbb
dec
test
inc
xchg
lea
sub
add
ror
push
or
or
cmpsl
xchg
pop
ja
adc
pop
or
test
int
jmp
xor
jb
insl
inc
cmp
mov
lret
cld
ret
push
call
add
and
dec
hlt
pop
cmp
dec
mov
pop
dec
dec
pop
cmp
addr16
push
dec
rorl
or
test
sahf
das
jnp
inc
jle
lods
lds
es
sub
sti
dec
in
mov
sbb
xchg
mov
inc
ss
mov
movsl
sbb
inc
int
push
mov
movsb
cli
mov
lock
sbb
int3
or
add
cmp
push
xor
mov
roll
or
pop
or
inc
test
xchg
mov
test
out
cmp
lahf
add
pop
dec
push
imul
cmovge
jp
sub
and
dec
jbe
lods
test
push
sti
adc
fsubrs
lcall
sbb
cmp
lahf
loopne
cmp
pop
inc
test
rcrb
fdiv
pop
jbe
cmp
dec
pop
incl
xchg
cmp
hlt
leave
fisttps
xchg
sub
icebp
pop
negl
jo
mov
mov
inc
sub
push
mov
cwtl
sub
jns
sbb
inc
push
pop
data16
cmp
jae,pt
outsb
xor
push
jnp
or
je
call
push
ss
in
lcall
mov
xchg
aaa
aad
jne
sbbb
fsubrl
loope
xor
dec
jmp
daa
repnz
push
add
cwtl
mov
cmp
fs
mov
aas
add
sbb
xchg
out
add
xor
ljmp
jmp
mov
out
movsl
js
rorb
dec
je
scas
test
je
lret
sbb
pop
scas
xorl
cmp
cmp
fdiv
dec
sbb
jb
mov
rorb
aas
jmp
adc
adc
je
aam
jae
insl
shlb
xchg
les
test
in
inc
test
push
or
push
insb
xchg
mov
pop
daa
push
test
divb
ss
out
fistl
xor
popf
cltd
call
mov
xor
addr16
push
jg
mov
js
mov
test
enter
lods
stc
mov
jl
cmpsb
mov
adc
lret
insb
cmp
xchg
mov
add
sbb
out
ret
sbb
xchg
mov
adc
xchg
dec
stos
shll
in
mov
aas
cmp
push
jle
aam
sar
pop
push
cs
ss
lret
pop
ja
xor
fisubrl
aas
push
push
jp
or
add
and
stos
gs
jecxz
ljmp
repz
xor
pusha
movsl
inc
sbb
sbb
in
mov
in
sub
xchg
hlt
aam
push
mov
aam
loope
jne
stos
ss
fistpll
loope
into
sarb
movsl
ljmp
mov
ret
xlat
and
daa
sbb
popa
mov
mov
or
or
lret
scas
jmp
popa
fldcw
lds
pusha
cmpsl
mov
mov
icebp
pusha
mov
or
insb
fsubrp
jge
dec
movsb
aam
lods
loope
and
repz
push
sub
pop
sbb
pop
cld
out
and
outsb
jbe
adc
push
xchg
cs
push
jmp
sbb
add
inc
jl
jle
out
jp
cmpsl
dec
popf
movsl
bound
or
hlt
push
hlt
mov
adc
sub
adc
mov
cmp
jbe
fnstcw
call
xchg
mov
test
gs
mov
add
lret
sbb
mov
add
stos
mov
popa
or
push
mov
sbb
cmpsl
pop
or
xor
rorb
jmp
or
div
sti
jne
ret
lock
xchg
cmp
inc
aam
pop
mov
cmpsl
push
jno
fldenv
ljmp
add
lret
lret
inc
jne
data16
xchg
sub
pop
fstl
sbb
or
stos
aam
cmpsl
sbb
mov
testb
movsb
lret
fimuls
cs
sub
ja
mov
test
movsb
call
lcall
and
add
movsb
pop
sbb
lahf
mov
add
sti
xchg
xor
stc
enter
push
push
aas
imul
in
inc
xor
or
sub
in
cltd
jmp
pop
gs
daa
fldl
cs
mov
cmpsl
sbbl
nop
js
mov
aad
jp
dec
jo
ja
sbb
cmp
xor
or
cli
ret
cmp
add
xchg
out
pop
shll
adc
aas
sub
das
jmp
and
jo
push
sub
inc
addr16
or
lret
inc
je
jnp
loop
out
leave
mov
pop
sub
xor
pusha
add
inc
out
mov
sbb
shr
fst
cmp
cld
add
mov
jbe
test
pop
repz
xlat
movsb
xor
cmp
cmp
pop
push
add
xor
les
add
cld
dec
mov
dec
insb
adc
rcll
mov
pop
xor
hlt
sbb
ret
dec
in
movsb
adc
enter
out
cmp
xor
dec
mov
sti
pop
bndldx
cwtl
loope
add
mov
daa
lea
push
pop
mov
arpl
mov
cmp
or
sub
cmpsb
push
incb
rcrl
insb
jne
outsb
rclb
mov
mov
pop
cmp
or
push
dec
or
mov
push
dec
ss
mov
cmp
inc
dec
sbbb
push
cmc
inc
xchg
xor
pop
adc
imull
sahf
out
fidivrl
mov
pop
push
test
mov
int3
fdivl
xchg
mov
and
rorb
pop
fwait
push
int
lret
mov
mov
xchg
push
jb
imul
sbb
lcall
enter
adc
fnsave
and
repnz
inc
test
sub
push
cmc
je
fs
je
inc
or
mov
repz
xor
aam
out
pop
adc
dec
ja
sar
and
scas
xchg
ret
mov
or
scas
inc
shll
insl
cmp
dec
lea
ds
test
xor
mov
lea
adc
mov
std
mov
push
sub
jno
inc
test
bound
cs
gs
outsb
sub
addr16
push
or
je
shll
pop
dec
mov
mov
addb
adc
fld
pop
js
push
std
pusha
and
dec
aad
mov
fstps
dec
mov
push
fdivrl
push
repz
div
add
call
enter
ljmp
cmp
cltd
mov
les
lods
adcb
aad
jae
shl
fidivs
jg
xchg
sbb
loopne
sub
shll
and
mov
pop
clc
daa
cmc
jnp
push
rolb
adc
dec
in
sti
roll
sub
push
pop
inc
push
adcb
aaa
mov
mov
or
cwtl
shlb
test
adc
fisttpl
adc
push
add
push
xchg
outsl
bound
mov
jae
pop
popa
into
cmp
pop
test
outsl
jg
mov
xchg
dec
sar
mov
js
cli
andb
inc
imul
dec
stos
xchg
outsl
adc
push
popf
pop
jb
ror
cmp
xor
gs
push
je
pop
imul
icebp
xor
push
bound
in
cmpl
and
xchg
in
int3
fnstcw
push
inc
and
imul
pop
pop
mov
out
mov
pushf
in
cmp
stc
inc
cmp
test
sub
push
mov
and
ret
or
movsb
sbb
insb
loope
sbb
pop
jmp
nop
sub
insb
mov
imul
shl
es
xchg
lret
mov
mov
xchg
int
push
mov
cmpl
out
outsl
mov
lret
mov
lcall
orb
jo
in
xor
and
inc
dec
and
fisubs
add
icebp
cli
jp
xor
aaa
jbe
pop
out
or
into
jle
pushf
rclb
test
icebp
adc
mov
aad
aas
bound
pop
call
and
lret
cmp
outsl
cmc
sbb
in
mov
roll
sbb
lret
popa
cmp
jl
push
cmp
lods
stos
pop
addl
fidivrl
cltd
popf
fwait
add
mov
add
pushf
adc
mov
mov
cmpb
or
jnp
shrl
mov
sbb
ret
movsb
mov
fmul
fwait
aaa
cmp
sbb
shlb
xchg
add
inc
popf
adc
mov
adc
into
test
and
fwait
roll
lods
cs
lcall
ds
push
std
lahf
imul
jbe
sarb
jns
and
sbbb
pushf
ficomps
xchg
in
outsl
or
cmp
inc
mov
push
int
bound
pusha
mov
or
push
lea
jecxz
and
sbb
inc
repnz
and
jno
adc
mov
insb
stc
push
jle
lcall
cmp
sarl
sbb
out
jno
scas
data16
in
cmp
push
dec
fcomps
mov
movsb
push
or
xor
sti
in
sub
add
pusha
or
or
jb
cmp
cld
cmc
mov
fstpl
lret
cmp
adc
pop
movsl
iret
sar
sub
cmpsl
arpl
and
lea
mov
xlat
lret
ficoml
test
rolb
fisttps
mov
or
fldenv
mov
ds
adc
sbb
xchg
hlt
adc
loope
cmp
jo
sbb
mov
push
sub
fmull
xchg
mov
and
mov
sub
bound
push
pop
in
cli
push
leave
aas
testb
enter
jmp
xchg
push
ds
push
stc
push
imul
repnz
pop
mov
add
mull
ret
and
cmp
in
adc
lods
out
shl
xchg
xchg
xchg
add
xchg
aas
xchg
cmpsb
pmullw
mov
cld
arpl
mov
and
sbb
in
fimuls
aaa
insb
jmp
push
stc
int3
repnz
ds
ret
les
fs
fiadds
fs
xchg
jns
ljmp
les
xor
push
stos
jo
bound
jmp
or
scas
jge
xor
loope
leave
arpl
imull
cli
insb
dec
push
adc
push
xor
adc
xorl
sbb
out
in
dec
test
repnz
mov
pop
movsl
pop
mov
dec
lahf
push
mov
cmp
scas
pop
push
inc
push
into
call
mov
jae
sbb
int
inc
add
push
js
sub
fwait
test
xor
xchg
ja
subl
mov
outsb
iret
jmp
aad
in
out
inc
aad
movsb
iret
lcall
into
adc
repz
cmp
je
push
ds
adc
fwait
push
pop
repnz
push
cmp
xor
shr
cld
sub
testl
lcall
sub
push
testl
xchg
andb
rorl
arpl
stos
and
ljmp
ja
call
xor
mov
test
jg
push
mov
sahf
and
repnz
lret
add
dec
lahf
loopne
push
mov
lcall
dec
sub
enter
lea
fcom
sub
lds
cmp
cmpsb
add
add
prefetchw
mov
inc
adc
inc
in
jne
sub
cmc
mov
pop
stos
fisttpl
push
dec
cli
add
test
sub
lods
scas
ret
andb
jg
mov
cmp
sbb
push
xor
adc
pop
xchg
pop
pushf
sbb
sar
add
mov
mov
xchg
xorl
push
mov
adc
mov
xchg
ret
lock
repz
push
cmpsl
divb
mov
pop
xorl
pop
pop
cmpsl
mov
sbb
pop
xor
gs
mov
mov
test
pop
gs
jns
mov
insl
imul
xlat
push
call
loop
pop
sti
jae
cmp
in
leave
mov
cmp
out
jl
cmc
mov
outsl
mov
jmp
inc
sbb
add
sbb
adc
xor
and
test
call
dec
movsl
movsb
adc
movsb
lock
stos
push
add
inc
data16
stos
ja
int
aam
sahf
in
fs
xchg
cmp
mov
es
lcall
sbb
ja
imul
das
and
sub
std
cs
mov
js
arpl
pop
rcll
mov
add
sahf
call
in
addr16
jg
push
ret
ud1
sub
sbb
cmpsl
dec
mov
xchg
jnp
jmp
leave
adc
or
test
mov
mov
jle
xchg
fwait
test
xor
out
leave
mov
pop
loop
xchg
jecxz
add
movsl
and
inc
stos
push
push
jb
pushf
xchg
out
jmp
mov
mov
xor
pop
jnp
push
push
sub
dec
orl
jae
out
push
push
leave
jno
push
jne
out
ds
mov
mov
dec
and
xchg
in
loope
jle
fwait
adc
adc
jp
fs
inc
filds
pushf
xlat
xor
faddl
out
out
or
lcall
dec
mov
jl
repnz
push
out
mov
push
mov
stc
xchg
and
int3
popa
stc
dec
dec
shlb
push
xor
and
loope
xor
jecxz
sbb
and
popa
mov
dec
inc
imul
inc
adc
lods
testl
testb
and
xchg
mov
cmp
and
stc
divb
aad
jb
and
shlb
shrl
cltd
and
movsb
pusha
insb
outsb
adc
mov
jbe
push
inc
mov
test
jbe
outsl
jecxz
in
fistpll
and
pushf
sub
ja
mov
pop
call
sarb
pop
hlt
aaa
sub
insl
push
sub
xchg
sar
test
mov
rcl
push
push
jmp
jns
negb
xchg
jno
jns
gs
filds
andl
insb
repz
jge
fldenv
mov
mov
add
push
les
push
out
mov
sub
jle
sub
loope
dec
lock
aas
into
jge
out
mov
fs
or
ret
cli
sarb
fistpll
adcl
xor
xor
inc
cli
in
pop
lret
lret
les
addl
jecxz
mov
sbb
cmp
adc
xor
in
push
sti
addb
ss
sbb
add
cmp
out
lods
push
xlat
and
lret
int3
dec
test
sub
xchg
pop
inc
pop
dec
lret
shlb
inc
inc
fstpl
mov
mov
cmp
mov
std
jb
ljmp
push
inc
cmp
pop
mov
out
inc
mov
adc
loope
sti
fsubrl
gs
popa
jne
or
call
jl
pop
icebp
hlt
lcall
rcr
rorb
xchg
jbe
adc
ffree
adc
pop
aad
xchg
mov
fwait
loop
xchg
cmp
nop
inc
shrl
pop
inc
pop
iret
dec
mov
incl
add
aas
mov
sbb
rclb
push
cwtl
movsb
std
nop
stc
mov
aas
cs
xor
xchg
imul
mov
xchg
cmp
movsb
out
mov
fcoml
jp
mov
jo
andb
aam
mov
pop
movsb
jg
addr16
dec
sarb
call
fcomps
fnsave
mov
jecxz
xchg
int
jmp
jbe
loop
or
adc
xor
insb
adc
imul
lods
test
push
ret
jno
push
outsl
mov
test
sub
jns
into
pusha
and
xchg
lcall
in
dec
aad
test
repz
add
jecxz
lods
mov
push
and
cli
cmp
test
daa
fs
xchg
xor
aam
jbe
or
sahf
inc
mov
mov
push
jno
adc
leave
jmp
je
mov
icebp
nop
and
loopne
push
dec
ftst
es
stos
pop
xchg
mov
iret
jns
sti
hlt
lods
inc
jns
movsb
sub
lcall
into
dec
int3
cmp
sub
movsb
mov
stc
xchg
loope
xchg
jp
sub
or
and
pop
inc
mov
xchg
xchg
dec
dec
mov
jmp
enter
sarl
dec
pop
push
jl
clc
mov
add
rclb
outsl
fbstp
into
jle
add
icebp
pop
cmp
push
mov
mov
in
cltd
sub
stos
shll
pusha
cltd
mov
push
inc
es
or
rclb
adcb
nop
test
aas
inc
lcall
sbb
stos
call
inc
scas
mov
sbb
loopne
push
sub
in
into
xor
pop
shll
stos
insb
sub
insb
scas
fwait
leave
sti
jp
setns
les
inc
mov
adc
pop
sbb
mov
jb
lea
dec
shrb
mov
xchg
add
push
xchg
adc
inc
in
popa
mov
repz
cmp
pusha
push
lahf
jo
push
ss
cmpsb
outsl
and
nop
and
cli
sbb
xchg
push
xlat
iret
or
inc
jecxz
jne
addl
or
sbb
jo
push
or
or
cli
sbb
mov
push
mov
hlt
sti
mov
push
gs
dec
or
pusha
push
xor
inc
imul
push
ds
xchg
lea
test
adc
imull
jle
add
out
neg
aaa
mov
mov
lcall
fisubrs
mov
fnsave
in
pushf
and
test
inc
aam
push
fs
xor
ficomps
lret
outsl
push
fs
lret
out
and
roll
xchg
fs
in
xor
adcl
add
addb
xchg
repz
xor
xchg
mov
loopne
mov
test
cmp
pop
cmpsb
loopne
jp
or
leave
rorb
outsb
jge,pn
filds
js
adc
addr16
cmp
or
loop
xor
lcall
out
mov
push
sub
jecxz
adc
popa
sbbl
adc
ret
aas
icebp
push
shll
mov
int3
adc
pop
fildll
pop
sbb
sti
push
fwait
jmp
jecxz
mov
adc
mov
cmp
push
pminsw
in
sbb
jecxz
int
popa
inc
mov
imul
call
aas
sahf
sub
lods
cmp
xor
inc
pop
jle
rorb
or
cvtps2pd
adc
hlt
fcomps
xchg
adc
mov
xchg
shl
mov
in
push
inc
loop
mov
add
jbe
ss
push
xchg
adc
outsl
pop
rcrl
adc
xchg
data16
sbb
lds
or
fistpl
jl
loopne
adc
dec
cmovl
cmp
shlb
in
pop
in
in
enter
pop
inc
dec
mov
pushf
mov
stos
dec
mov
rolb
jg
fadd
das
and
cs
sub
cmp
mov
rep
add
mov
inc
push
in
sbb
ss
pop
dec
mov
sub
rolb
or
addr16
jmp
push
sub
lcall
ja
xchg
mov
jne
shll
push
iret
mov
inc
jb
aad
mov
or
ljmp
movsl
inc
fbld
mov
push
dec
mov
mov
int
cmpsl
dec
xchg
xchg
into
sbb
mull
rcl
int
push
mov
jecxz
push
pop
xchg
mov
mov
sti
add
in
xchg
inc
adc
ds
and
or
in
mov
arpl
add
movsl
mov
adc
mov
inc
pop
test
loop
pop
or
dec
and
popf
rcr
jle
call
jnp
cmp
ljmp
dec
sar
sub
and
inc
or
push
add
sub
js
cmp
bnd
fsubrl
inc
mov
xor
pop
push
into
cmp
pop
xchg
int
lock
mov
inc
xchg
out
les
jb
inc
stos
push
stc
xor
add
dec
sub
aaa
daa
in
nop
ret
inc
ja
cmp
sarb
add
test
and
pop
lahf
pop
subb
lahf
das
jno
outsb
and
aaa
dec
fnstcw
jb
mov
or
popa
sub
pavgb
les
jp
lret
call
mov
push
subl
dec
xchg
add
cmc
mov
mov
adc
std
repz
pop
fisttpl
in
icebp
fnstcw
adc
and
hlt
aam
and
divl
pop
gs
inc
mov
shl
mov
les
adc
cwtl
adc
push
sub
pop
in
xchg
mov
mov
enter
in
xchg
jns
std
in
rorl
fdivs
mov
cmpsl
es
dec
test
mov
lods
nop
mov
fmul
add
lcall
popa
dec
movsb
movsb
cmp
js
in
xchg
out
aam
jnp
jge
mov
les
rolb
jp
xchg
loopne
adc
test
mov
ds
loopne
int
in
mov
aaa
int3
push
std
adc
shll
popf
mov
jl
xor
stos
into
xor
lahf
fwait
push
std
jmp
out
je
mov
pop
rolb
sub
aaa
call
scas
mov
insl
int3
pop
xor
cltd
adc
das
pop
adc
popf
xlat
jbe
icebp
sub
les
ss
ljmp
fwait
mov
jg
push
stos
mov
or
fstps
pop
jecxz
clc
test
int
loopne
repnz
add
fistpll
sub
iret
data16
aaa
insb
mov
ds
loop
sbb
jle
mov
jno
sahf
push
sbb
pop
pop
mov
sbb
jp
mov
pop
or
push
push
ret
or
popf
adc
sti
inc
jmp
das
gs
pop
fcmovu
ss
es
lahf
daa
decl
in
outsb
test
popf
dec
adc
js
dec
push
and
mov
ljmp
in
mov
fs
inc
cmpsb
and
xor
call
pushf
xorl
andb
lret
jnp
adc
pop
xor
xchg
pop
sub
insl
test
sbb
push
add
lods
std
aaa
mov
jns
call
push
mov
sbb
or
jnp
pop
adc
sbb
dec
sub
pop
mov
or
mov
ljmp
ljmp
jg
push
mov
and
add
jae
inc
pushf
in
loop
cmpsb
adcl
aad
cld
dec
inc
cwtl
push
ss
hlt
adc
daa
bound
clc
scas
mov
ja
std
js
pop
jmp
and
es
sub
fldenv
pop
pop
arpl
dec
sarl
dec
ret
cmp
subl
fdiv
mov
and
adc
pop
gs
mov
push
jmp
xchg
jae
inc
jb
int3
sar
or
fstl
inc
out
fists
inc
testl
jno
adc
xchg
pop
loope
mov
add
xchg
mov
ss
movsl
jnp
add
sbb
shl
lcall
xor
test
mov
sti
aas
dec
pop
dec
fsubrl
addr16
repz
in
ja
or
dec
popa
fidivl
xchg
popl
cmc
adc
dec
sub
xlat
jb
sbb
dec
aaa
movl
les
data16
call
dec
cmc
xor
je
mov
mov
dec
stos
es
aaa
fsubr
jo
ds
movsb
push
xchg
rcll
les
js
ja
hlt
inc
mov
mov
fstpt
pop
jbe
inc
roll
pop
pop
sbb
cli
push
nop
mov
aas
xchg
mov
jnp
xor
sub
pop
hlt
sbb
inc
outsl
mov
test
or
mov
sbb
cmc
dec
xchg
cltd
jle
js
cs
frstor
pop
decl
and
or
mov
scas
je
popa
add
test
xlat
xchg
mov
jecxz
int3
dec
int
stc
inc
add
adc
js
mov
pop
mov
jnp
mov
or
ret
out
mov
dec
mov
shlb
push
cmpsl
dec
into
mov
stos
jp
nop
stos
dec
mov
jo
or
sahf
dec
fucom
loopne
cmpsb
leave
pop
lahf
and
mov
int3
cltd
pop
or
sbb
pop
call
roll
test
jae
xor
out
scas
movsl
stc
xchg
sub
movsl
aas
and
xchg
lds
sahf
mov
inc
int
mov
jg
lods
ljmp
dec
daa
fbld
lcall
fcomps
sub
pop
sub
sbb
fmull
adc
mov
xchg
sbb
mov
jbe
fcompl
into
pop
lods
daa
lret
dec
cmp
xlat
sub
cld
pop
fimuls
fnsave
les
sub
pusha
mov
adc
jb
adc
add
xchg
xor
dec
data16
inc
adc
xchg
data16
sahf
push
inc
mov
jno
push
cmp
insl
sarb
add
mov
dec
and
and
fimull
into
push
loope
add
mov
cmc
inc
push
mov
out
test
js
shrb
pop
sahf
lods
fisubl
push
xchg
pop
jo
xor
repz
dec
test
iret
cmp
and
add
mov
jns
hlt
enter
das
add
mov
out
add
sbb
imul
leave
mov
ds
lret
int3
call
adc
xchg
lret
in
xchg
add
cltd
and
fldenv
fucomip
cwtl
xor
imul
jb
push
jmp
jo
cmp
sahf
leave
mov
adc
xchg
movsl
dec
fadds
fcoml
popf
cld
shlb
and
dec
lret
shlb
mov
sbb
ja
aaa
es
mov
fcmovu
imul
push
mov
mov
fildl
inc
loopne
lahf
fsubl
or
cmp
adc
xchg
xor
xor
xchg
dec
aas
inc
cltd
pushf
pusha
jle
decl
or
sahf
loope
adc
sarl
mov
pop
or
push
sub
dec
sub
pop
xchg
dec
test
push
sub
push
ds
sbb
dec
inc
pop
xor
or
mov
cmp
dec
fcoms
mov
aam
inc
lods
stos
dec
into
xor
outsl
adc
pcmpgtb
push
stos
ds
in
testl
call
aaa
jnp
out
adc
movsb
add
std
dec
inc
imul
lods
push
dec
es
xor
dec
lock
or
xor
test
cmp
pushf
nop
pop
repz
sti
nop
stos
daa
lret
and
cli
push
and
cli
cmp
push
add
out
stos
add
push
imul
ss
inc
lds
ret
or
in
jg
cmp
pop
mov
mov
ret
dec
sub
jge
faddp
xchg
shll
jb
sbb
out
mov
loopne
mov
push
xor
cmc
shl
push
push
pop
mov
stos
and
data16
out
jmp
popa
lea
out
iret
xor
andb
xor
into
jge
mov
sbb
cmpsb
mov
add
adc
fwait
out
out
add
scas
mov
mov
jmp
and
scas
inc
push
sub
je
sti
adc
mov
xchg
into
jecxz
ret
loop
stos
pop
cmp
mov
out
es
dec
shlb
sbb
js
pushf
mov
add
sub
dec
push
into
xorl
movsl
adc
sub
leave
mov
frstor
arpl
sahf
push
push
into
mov
dec
dec
xor
int
pop
add
jno
cmc
push
imul
lock
jnp
sub
outsl
add
hlt
mov
enter
insb
push
and
xchg
mov
lock
xor
adc
repnz
int
insb
pusha
das
or
int
add
rclb
mov
adc
aad
add
fsubr
cmp
or
das
into
test
aaa
int3
adc
ficoml
push
mov
add
mov
jl
rcrl
subb
mov
add
frstor
pop
mov
push
xor
mov
ljmp
lcall
mov
xchg
jmp
out
icebp
leave
es
sub
sbb
lock
sbb
test
mov
movsb
or
lret
jo
ja
mov
mov
or
pusha
mov
mov
mov
jno
and
mov
dec
mov
shl
lcall
jne
inc
mov
icebp
pop
jl
cmpsb
adc
gs
mov
scas
pop
mov
fdivl
mov
adc
das
and
push
xor
je
sub
or
adc
lods
pinsrw
je
repz
sub
cmp
mov
ja
or
loop
and
mov
and
push
push
andb
pop
mov
jne
sahf
mov
mov
jo
lret
int3
or
xchg
outsb
ss
mov
ror
iret
xchg
jb
push
mov
mov
cmc
pop
or
dec
and
repz
sbb
mov
dec
mov
pop
sarb
xchg
into
push
adc
xchg
xlat
ret
cmp
mov
andl
jecxz
sub
or
aam
xchg
add
or
cmp
xchg
roll
sti
pushf
and
cmp
cmp
inc
dec
je
sbb
dec
iret
test
enter
push
enter
out
adc
data16
loop
pop
sub
mov
mov
lret
push
enter
movsb
jne
dec
push
shrl
dec
lea
xor
pop
and
xchg
mov
or
jl
push
aaa
jecxz
je
pop
xchg
popa
dec
repnz
test
fldenv
xchg
inc
movzwl
dec
std
xor
inc
fsubrp
arpl
jae
popf
lods
sub
mov
push
inc
push
push
jb
pushf
movsb
imul
mov
add
and
mov
aaa
adc
int3
cmpsl
cmpsl
push
fildl
sbb
inc
lret
cld
loop
dec
es
arpl
imul
idivb
imul
pop
stos
xchg
mov
inc
mov
movl
lret
jge
adc
in
dec
mov
sbb
int
cmp
fwait
lcall
in
push
mulb
and
sarb
xor
sbb
add
cmc
out
adc
mov
divb
test
into
aaa
out
shll
fcompl
loope
lret
fcomps
push
jecxz
mov
lods
incb
cmp
push
mov
cmp
cs
pop
and
xchg
push
mov
push
aam
cltd
pop
cld
mulb
push
sti
sbb
sahf
mov
cmc
insl
and
xchg
and
xlat
mov
sarb
push
iret
mov
mov
es
in
cmpsb
or
push
lcall
int3
outsl
clc
or
add
lock
mov
cmc
pop
sub
cld
mov
sub
add
movsl
cmp
std
nop
dec
test
pusha
adc
shlb
mov
pop
test
push
roll
or
mov
lret
cmp
test
mov
pop
sub
cmp
fcmovne
inc
or
push
mov
in
mov
in
rolb
or
pop
pusha
mov
jno
add
sahf
in
inc
push
int3
xor
xchg
xchg
popf
xor
mov
fs
xor
gs
cmp
out
push
and
pop
bound
test
cmc
mov
and
shr
sbb
and
dec
out
adc
xlat
cmp
popa
ror
inc
sbb
outsl
push
or
sbb
imul
inc
out
in
lds
in
outsb
cmp
xor
mov
xor
mov
aaa
mov
lret
inc
dec
xorb
dec
sub
inc
sub
mov
xchg
mov
jb
in
jp
sbb
push
mov
mov
mov
lea
xchg
push
pop
fildl
xorb
out
dec
imul
movsl
mov
stos
mov
jp
jnp
xchg
lret
mov
sub
mov
sbb
pushf
xor
push
jae
ss
xchg
cli
sarl
push
call
push
xchg
pop
popf
fs
inc
mov
loope
in
in
add
push
xor
and
xor
call
cmp
or
sub
rol
imul
adc
cmp
xchg
call
rcrb
lahf
mov
xchg
fdivrp
aam
cmpsl
in
lock
fmul
testl
sub
sub
fdivs
sub
cmp
mov
pop
andl
add
cmp
sahf
dec
adc
les
mov
popf
dec
mov
and
mov
mulb
out
push
aad
stos
addl
fstl
mov
cmp
test
sti
std
mov
roll
sbb
cwtl
or
cs
adc
ss
loop
outsb
jg
loopne
push
sbbb
xlat
popf
out
lea
sub
repnz
icebp
sbb
cmc
shrb
ltr
jb
inc
test
jmp
add
cmp
mov
add
xor
pop
jp
push
outsb
or
mov
std
shrb
inc
mov
or
fsubl
cs
mov
sub
or
mov
hlt
jg
sbb
adc
sub
cmpb
or
mov
dec
lcall
push
out
je
leave
ret
or
jbe
sub
cmp
push
in
cld
iret
test
lds
loop
mov
push
and
xor
and
xor
aam
cmp
fs
inc
loope
fcomi
cmp
notb
bound
jmp
cmp
inc
fwait
jmp
iret
test
nop
fsub
and
inc
cmp
dec
in
into
leave
adc
cmpsl
mov
pop
jae
jge
int
scas
sub
xor
inc
insb
mov
pusha
xchg
pop
inc
mov
aaa
lcall
mov
jl
dec
fdivrs
rorb
ret
and
or
xorb
leave
insb
push
shll
aas
cmp
je
add
imul
imul
loop
popf
shll
or
pop
jg
push
xlat
fwait
cmp
lods
ja
orb
add
ss
es
lret
xor
neg
xor
push
enter
fnsave
sbb
cmp
mov
fisubrs
scas
movsl
mov
or
cmp
cmp
enter
adc
scas
out
xor
fsubs
clc
adc
and
in
mov
movsb
or
fwait
add
insl
mov
movsl
divb
mov
jle
ja
cmc
and
push
mov
pop
sti
add
dec
std
daa
mov
mov
cmp
sbb
in
or
test
je
stc
xchg
pop
int
popa
dec
xchg
enter
mov
fmul
pop
and
pop
jnp
xor
dec
or
cmc
cmc
stos
dec
jl
mov
loop
xor
in
jp
out
pop
iret
test
mov
mov
mov
mov
in
lea
enter
pop
sahf
add
popa
cltd
incb
andl
sbb
push
xchg
aad
mov
add
bound
dec
push
insb
imul
mov
pushf
aam
pop
add
lock
cltd
pop
int
movsl
nop
jecxz
add
inc
adc
gs
cli
xchg
scas
sbb
inc
es
jmp
xchg
jns
and
cmpsb
jnp
push
addr16
push
mov
sub
pop
adc
mov
mov
imul
push
mov
stos
xor
mov
mov
cmp
xor
outsb
sub
movsl
jb
testb
mov
pop
shrb
dec
loopne
sub
in
popf
lea
movsb
and
pop
mov
inc
dec
inc
push
pusha
loope
cltd
add
jne
add
push
inc
mov
push
loope
or
xchg
mov
xchg
xor
pop
rcl
jae
sbb
lds
sahf
lods
lcall
pop
int3
sub
es
loope
or
cmp
into
inc
dec
int
jae
jp
push
aam
loopne
aas
mov
sub
dec
stos
sbb
sbb
pop
xchg
or
mov
mov
mov
out
cmp
test
sbb
mov
jle
pop
lret
int
icebp
push
push
mov
add
push
mov
popf
pusha
loop
fwait
and
mov
lcall
out
mov
fnstenv
cs
lahf
add
movlhps
das
jge
inc
enter
xlat
lods
add
push
fisttps
in
stc
push
outsl
mov
fs
pop
inc
adc
shlb
fwait
stc
xlat
dec
xchg
cmpsl
cmpsl
sbb
stc
add
mov
clc
inc
xor
push
jmp
xor
cld
mov
xor
scas
adc
and
jmp
fistpll
mov
pushf
inc
cmp
push
nop
push
dec
leave
and
call
dec
aad
ret
aad
out
pop
icebp
divl
loopne
push
mov
and
xchg
xchg
xor
push
popa
xor
sbb
das
ljmp
cld
imul
repnz
icebp
bound
clc
sub
mov
lcall
jns
out
movsb
sahf
mov
mov
mov
adc
cli
xchg
cmpsb
ret
push
inc
xchg
pop
aad
pop
mov
push
inc
jl
sub
jns
inc
mov
jg
cmp
in
dec
push
dec
and
cltd
test
loopne
add
aas
imul
out
lret
out
call
push
std
aad
dec
add
ja
orl
std
decb
jnp
in
sar
or
sub
cld
movsb
xor
les
jmp
mov
js
jae
fcompl
movsb
roll
arpl
and
add
out
pop
dec
std
shrl
cmp
mov
fdivrs
push
sysenter
cmp
arpl
xchg
mov
inc
int
xor
inc
test
or
inc
mov
rcrl
insb
push
in
lahf
cld
cmp
mov
or
movsl
lods
mov
arpl
sbb
test
daa
push
ja
push
aam
roll
mov
mov
mov
iret
cmpsl
jp
pop
fnstenv
ret
pop
push
out
sub
insl
ret
in
jns
les
lahf
rcrb
fs
out
and
add
pop
cmpsl
mov
call
out
shl
jo
xchg
mov
dec
pop
sbb
je
ret
pop
jnp
mov
daa
and
mov
add
adc
xchg
lock
outsl
in
push
sub
sub
pop
mov
mov
add
pop
sbb
int
mov
rorl
push
shll
xorl
pop
int
loop
addr16
mov
lds
lock
dec
and
adc
add
movsl
in
sub
inc
test
mov
or
clc
jno
call
dec
lods
pop
popf
std
push
mov
loope
add
adc
jnp
cmp
fwait
mov
sub
mov
push
in
testb
decb
imul
repz
jecxz
popf
push
loop
push
pop
sub
in
inc
mov
dec
jo
ss
ja
data16
lea
int3
imul
lea
out
cmp
mov
je
adc
ret
mov
mov
gs
stos
pop
xor
jno
daa
in
lret
add
icebp
push
sub
sub
lret
and
loope
adc
pop
mov
lret
outsb
xchg
push
mov
stc
pop
cmc
and
dec
or
push
mov
mov
jge
dec
and
ss
inc
incl
cmpsl
outsb
pop
lods
rorb
nop
lahf
rcl
arpl
jecxz
xchg
lret
nop
adc
mov
rorb
lea
adc
mov
adc
dec
imul
jno
test
rcrl
scas
leave
ror
popf
mov
stc
outsl
call
cmpsb
imul
fisttps
jl
je
js
sub
cmpl
or
cmp
arpl
inc
sub
in
add
or
push
mov
dec
push
dec
es
jno
shlb
movsl
into
xchg
lcall
sub
or
mov
sub
mov
jns
adc
mov
stos
xchg
in
pop
leave
mov
adc
das
iret
out
je
dec
mov
ror
stc
adc
insb
mul
push
jecxz
and
push
testb
test
mov
and
sbb
push
sub
rolb
add
jl
sub
mov
push
mov
jo
in
mov
jnp
sub
push
adcb
test
pop
stos
lcall
test
add
jo
pop
lods
pop
sbb
neg
pop
nop
push
sbb
xchg
js
aas
inc
andb
icebp
push
jmp
push
bound
aas
or
pop
fcmovbe
mov
fdivrs
movsb
sti
inc
lods
xor
cmpb
jns
add
lea
adc
push
cltd
mov
pop
jecxz
imul
pushf
xor
xchg
lea
dec
xchg
and
jnp
or
loop
and
push
adc
daa
push
adc
dec
sub
decb
pop
fcompl
je
sbbl
daa
shlb
outsb
jo
pop
clc
les
pushf
pop
inc
fcmovnbe
mov
ret
pop
xorb
mov
jne
xor
mov
cltd
xor
jl
xchg
mov
push
loope
into
sub
sub
in
and
pusha
sti
mov
inc
pop
sbb
xor
aas
xorb
nop
sbb
das
or
sbb
je
add
imulb
xchg
loope
scas
pop
mov
test
jge
cli
dec
lea
pop
lret
inc
push
int3
cld
rcrl
jmp
add
inc
in
jno
data16
subb
adc
rclb
popf
out
add
pop
mov
out
call
jle
mov
push
subl
movsb
xchg
mov
test
sti
out
test
inc
pusha
dec
orl
cmp
and
in
std
sub
and
imul
jbe
push
popl
stos
fmull
add
pop
mov
das
movsb
scas
jg
jb
shrb
xchg
sbb
adc
int3
mov
mov
push
sahf
je
mov
jne
push
lea
movsb
xlat
stos
je
sahf
fldcw
xor
push
xchg
loope
lock
mov
stc
push
sub
push
pop
pop
mov
jne
movsl
test
jl
addr16
dec
add
loop
fiadds
or
ds
inc
xorl
popa
xchg
fisubs
push
or
cmpl
call
icebp
mov
mov
cmp
scas
push
lret
jecxz
out
and
xchg
jmp
loope
xchg
movb
inc
decb
test
push
aad
and
xchg
dec
push
push
test
mov
cmp
cmp
add
sti
ds
push
jns
ljmp
ss
push
adc
ljmp
adc
or
lahf
adc
hlt
sbbb
adc
stos
jns
push
loop,pt
mov
rolb
shr
insb
add
jg
aad
fistps
fs
dec
les
cmp
inc
jns
aas
push
and
ja
push
cltd
imul
pop
insl
add
push
or
into
loope
fwait
lret
add
notl
outsb
enter
stc
push
scas
and
jbe
es
jne
mov
jb
lock
mov
pusha
fsubrl
popf
cs
or
xor
ljmp
movsb
lock
mov
hlt
rolb
lds
pop
ret
sbb
out
cmp
mov
xor
dec
rolb
sbb
dec
push
rcrb
out
push
nop
cmp
inc
mov
jb
lea
push
jecxz
mov
push
push
in
mov
push
sbbl
loop
jp
push
xchg
scas
push
push
xor
xchg
xor
xchg
inc
lcall
xchg
mov
or
and
scas
or
call
popa
cld
push
xor
xchg
adcb
lret
fdivrl
xor
mov
mov
enter
cmp
in
mov
imul
xchg
jle
mov
sbb
data16
std
pop
sub
and
inc
sbb
fidivl
jg
scas
jg
rolb
sbb
add
je
jl
inc
in
ds
pushf
jl
jo
xchg
xchg
jb
clc
xchg
js
dec
inc
into
int
insl
cmp
ljmp
add
pop
andl
inc
roll
mov
clc
dec
aam
divb
test
loopne
das
std
push
fwait
lret
sbb
jl
jno
dec
push
ror
arpl
mov
sub
outsl
shl
jo
mov
stos
insl
or
jl
push
push
fbld
icebp
mov
add
int3
mov
jge
jmp
push
icebp
scas
sbb
data16
xchg
stos
out
pop
mov
pushf
imul
movsl
movsl
sbb
pop
sub
dec
lahf
sahf
mov
jbe
sbb
inc
ror
or
dec
adc
inc
scas
push
shrb
jo
mul
push
mull
test
xchg
shrl
les
push
mov
imull
pop
xchg
fiadds
push
mov
jl
rclb
cmp
sub
subb
mov
pop
xor
or
sbb
jae
test
shlb
repnz
cmc
sbb
dec
adc
ss
sti
mov
mov
arpl
mov
out
adc
dec
jae
cmp
xchg
sbb
xchg
mov
pop
add
add
in
jecxz
jl
rcr
cmp
adc
push
icebp
adc
daa
lahf
int3
negl
imul
mov
fidivs
dec
sbb
jg
pop
push
cmp
lahf
add
rolb
rcrl
addr16
or
and
icebp
push
xchg
mov
or
jae
aam
adc
daa
jne
outsl
sub
outsl
adc
sbb
out
push
add
mov
ret
xor
rcrl
jle
fildll
shr
sub
aaa
fucomp
out
or
mov
mov
into
sub
xchg
xor
or
jl
sbb
lea
ret
jmp
lret
mov
mov
mov
sbb
ret
xor
mov
outsl
fnstenv
add
filds
mov
aam
mov
push
cmp
stos
add
push
lcall
jae
in
sub
mov
add
pop
sahf
push
and
out
cs
iret
pop
mov
mov
leave
push
fs
loopne
jbe
or
ss
and
mov
mov
and
or
in
xchg
and
divl
mov
jg
fmull
lods
adc
lea
inc
test
jbe
ficompl
dec
fdivp
sbb
dec
fcoml
hlt
dec
lret
aas
sbb
xor
sub
lods
fcomps
arpl
push
mov
das
bound
sbb
out
addr16
or
addl
aam
and
mov
inc
and
mov
jp
cs
xor
pusha
mov
jle
cmp
test
pop
xchg
xor
lock
jo
js
nop
sbb
or
push
xchg
pop
sbb
sub
sbb
aaa
inc
decb
sub
out
leave
cmp
fninit
adc
fistps
lcall
xchg
lahf
addr16
xchg
addb
jns
or
movsl
incl
xor
jge
in
jge
dec
xchg
test
fdiv
mov
test
not
pop
ljmp
lcall
pop
aam
hlt
adc
mov
pop
aas
test
jae
cmpsl
xchg
mov
xor
ja
loopne
mov
mov
sub
adc
sahf
lods
mov
daa
repz
sahf
mov
test
add
movsb
das
lods
popa
mov
pop
add
stc
mov
test
cmove
adc
or
pop
test
mov
sbb
dec
les
push
push
insb
sahf
mov
fcoms
or
sbb
mov
ficompl
aas
jbe
into
aam
aas
cltd
out
and
repz
sbb
mov
pusha
rol
pop
in
mov
sub
mov
pop
xchg
fucom
sub
adc
and
lods
inc
xor
inc
sub
xor
sub
jbe
dec
pop
cmpsl
mov
fsubrl
adc
adcb
xor
xor
enter
lods
dec
adc
lea
adc
adc
jb
je
popf
adcb
xchg
sub
jnp
lds
popf
cs
adcl
sub
cmp
cmp
cmpsb
dec
out
scas
ret
cmpsl
adc
mov
add
xor
cmpsb
insl
into
and
adc
xor
rcrl
jge
sarb
pop
movsl
dec
sub
xor
jae
jp
bound
inc
pushf
push
adc
pop
clc
xorl
out
out
sar
or
fmuls
add
add
sbb
mov
popf
mov
call
repnz
cwtl
jnp
sarl
aad
cmpsl
movsb
or
aam
dec
and
and
test
clc
jecxz
jg
fimull
pop
in
pushf
pop
fcmovbe
add
adc
stos
xor
movsl
pop
iret
and
xchg
inc
in
loop
inc
fisttpll
daa
into
arpl
in
into
jbe
jmp
sbb
rcr
jle
in
imul
repz
adc
push
dec
push
shlb
or
stc
pop
or
cwtl
push
sbb
cmp
jge
bound
mov
lea
cmp
movsb
bound
pop
push
popf
inc
mov
gs
mov
icebp
in
outsb
jns
xor
imul
mov
dec
cmp
sub
jae
aaa
xor
xor
jge
rcrb
xchg
sub
movsb
enter
jns
push
jg
and
fcoms
pop
cmp
popf
jle
test
or
pop
rorl
insb
lods
mov
outsl
enter
add
push
test
mov
ds
ficompl
out
and
mov
add
xchg
sub
ficoml
negl
mov
dec
sub
inc
sbb
push
xor
xor
divb
push
subl
push
jge
movsb
test
pop
iret
mov
pop
inc
sbb
pop
xor
jae
lods
pop
jns
mov
mov
xor
mov
pop
fldcw
aam
aam
adc
aas
shlb
shlb
pop
inc
sbb
rcrl
enter
sub
add
pop
mov
je
imul
mov
sbb
imul
popf
pusha
cmp
or
out
jbe
push
leave
lret
ljmp
shrb
cld
movsl
pop
mov
mov
popf
nop
jb
jae
ret
rcr
ret
fsubr
push
gs
or
fs
dec
cmp
or
push
jp
leave
jecxz
scas
mov
movsb
arpl
add
out
adc
insl
xchg
and
add
dec
add
sbb
mov
loop
jp
cltd
and
in
push
inc
and
jbe
cmp
push
mov
adc
sbb
lock
xor
add
or
shll
or
shll
addb
sbb
stos
push
rolb
cltd
movsl
clc
or
xchg
or
mov
xchg
add
mov
push
fadds
ljmp
add
dec
xchg
icebp
pop
jp
loop
fisttps
pop
xchg
dec
aad
scas
ss
ja
rclb
ds
inc
daa
xor
in
aam
fs
push
xchg
sbb
bound
stc
cmp
jecxz
pop
jp
les
out
aad
int3
in
fnsave
sbb
pop
in
mov
sahf
mov
icebp
and
mov
les
movsb
stc
out
or
shlb
mov
xor
mov
push
movsl
push
mov
inc
cmp
pop
add
jecxz
fisubs
push
pop
insl
bound
xor
inc
pop
fdiv
push
aam
stc
push
test
sub
add
mov
mov
mov
sub
adc
rol
mov
add
sbb
lock
pop
lret
icebp
mov
stos
ja
aas
and
lods
aam
cmpsl
lret
test
adc
inc
sub
jnp
mov
mov
hlt
fidivs
and
mov
andl
dec
fisttps
insb
push
adc
mov
lret
or
push
push
sub
mov
dec
enter
jge
and
movsl
lcall
repnz
dec
shrl
jmp
mov
xchg
adc
fsubl
stc
int3
test
pop
inc
adc
jle
cltd
xchg
mov
mov
fimull
ds
stc
or
jecxz
adc
xchg
mov
pop
js
add
fnstcw
aam
mov
in
xor
sbbl
ficomps
das
in
xorl
mov
sbb
mov
mov
cmp
imulb
mov
dec
jnp
js
xchg
push
clc
xor
call
inc
lods
sbb
shll
xor
out
aam
mov
xchg
sub
xchg
cmp
mov
cmp
ljmp
jb
xchg
add
jp
adc
and
sub
mov
dec
mov
and
ds
out
cmpsb
mov
mov
je
sbb
insl
pop
mov
int3
test
sbb
sbb
jnp
mov
or
ljmp
push
daa
addr16
add
inc
or
add
or
pop
xor
add
fs
je
fildl
in
add
inc
jae
mov
sbb
push
nop
idivl
sub
dec
mov
aaa
loop
dec
in
pushf
sbb
int
cmpsb
sarl
pusha
jb
sbbl
and
push
cmpsl
nop
xor
out
js
sbb
pop
adc
add
pushf
pushl
enter
mov
xor
test
sbb
or
loopne
hlt
daa
mov
or
shlb
jle
and
cmpsb
mov
and
xor
mov
imul
stos
add
pop
push
movsl
dec
popa
imul
aas
push
leave
cmpsl
xchg
mov
cmpsl
add
outsl
out
cwtl
sarl
shrb
inc
push
jg
inc
push
add
orb
mov
in
shr
arpl
test
outsb
jmp
testl
leave
int
jmp
add
adc
js
scas
orb
cmp
sti
mov
mov
imul
fcomps
dec
fwait
scas
pop
insb
jno
inc
lret
mov
mov
add
or
xor
clc
xlat
xor
int3
push
xchg
mov
add
inc
test
push
test
loop
lods
imul
cmp
orb
fsts
adc
loopne
push
mov
outsl
xchg
cmp
subb
insb
pop
lcall
pop
mov
sub
mov
dec
icebp
enter
adc
push
repz
add
clc
hlt
pop
sbb
mov
outsb
inc
jge
jbe
and
nop
xchg
divl
aaa
stos
into
jb
out
sti
cwtl
les
cmp
dec
pop
adc
inc
xor
push
loopne
cmpsb
sub
dec
enter
sarb
rorb
stc
repz
pushf
pop
pop
cld
mov
mov
int
jne
cwtl
mov
js
mov
pop
outsl
jp
push
xchg
sbb
or
nop
stos
add
cmp
mov
cmpsl
leave
jge
inc
loop
xor
push
testb
hlt
aam
shl
out
cmp
push
sub
fsubrl
xor
sbb
nop
pop
mov
pop
ljmp
xchg
out
fnsave
mov
sahf
sbb
and
mov
outsl
int
cmp
dec
push
int
cmp
jo
mov
xchg
fisubl
dec
gs
scas
lods
shl
mov
xchg
mov
jae
push
xor
jnp
or
sbb
sbb
add
imul
push
jb
daa
push
inc
ret
test
scas
sar
ljmp
pop
add
xchg
inc
shlb
stos
lods
stc
int3
push
mov
out
xchg
fldl2t
mov
in
or
in
sub
fwait
popf
enter
mov
das
sub
int3
mov
jecxz
inc
shrl
lahf
jno
dec
fidivrs
sbb
dec
xchg
mov
stc
rcrl
jg
and
pop
test
and
cmp
mov
cmpb
push
sub
pushf
iret
iret
shrb
repz
popf
jp
xchg
mov
movsb
std
loop
xchg
rolb
add
add
hlt
stc
arpl
test
add
sub
push
and
pop
movsb
je
scas
or
mov
dec
push
push
movsl
add
dec
test
dec
push
dec
mov
or
add
pop
inc
pusha
jg
sbb
cmp
or
inc
nop
pop
push
mov
mov
enter
repz
dec
xchg
xor
sbb
or
adc
scas
jo
dec
push
mulb
ret
in
iret
sub
sbb
loopne
fnstsw
popf
fldt
mov
inc
xchg
lods
jbe
xor
xlat
into
adc
js
adc
add
mov
xchg
jmp
jb
push
stos
out
call
in
orb
sub
mov
mov
js
inc
fldcw
mov
push
pop
jg
xrelease
push
cmp
and
mov
rorl
add
push
jbe
addr16
jge
jno
cmc
jg
pop
sbb
popa
pop
fmuls
imul
rclb
and
sarl
mov
out
adc
sbb
adc
pushf
cli
xchg
pusha
shll
adc
in
aam
mov
sub
addr16
sbb
mov
inc
push
gs
fcomps
add
jl
adc
push
sub
jmp
ds
pop
out
stc
and
push
jle
mov
jg
jnp
xchg
clc
fisttpl
aaa
or
pop
fnstsw
inc
jge
mov
mull
popa
loop
inc
add
sbb
lds
mov
repnz
notb
push
gs
jecxz
push
sbb
sarl
imul
jae
jl
test
ds
stc
sbb
xchg
loopne
mov
mov
mov
cmp
push
and
aaa
push
cmp
push
pop
sahf
mov
pop
cmp
inc
mov
addb
mov
aaa
lahf
mulb
divl
popf
xor
std
mov
push
dec
pop
scas
xchg
shlb
cmp
aad
fcompl
pop
ss
movsl
add
mov
or
jb
pop
in
test
adc
pop
cmp
xor
out
add
xor
lret
jmp
or
rcrl
mov
cmp
adc
lock
ja
es
xlat
popa
inc
iret
data16
sbb
cmp
iret
push
shlb
jns
inc
dec
xchg
push
and
cltd
push
div
nop
and
and
inc
mov
testb
lret
lahf
pop
mov
mov
xor
push
xchg
pop
fnstsw
in
jb
push
clc
jo
pushf
pop
addr16
call
mov
dec
mov
sub
push
and
adc
xor
inc
mov
xchg
pop
out
sbb
jp
mov
jbe
cmpsb
jb
mov
xchg
cld
mov
je
fwait
rorl
jmp
or
adc
fildll
test
xchg
arpl
push
dec
ret
push
push
push
ljmp
push
sbbl
stc
adcl
out
dec
ja
fwait
sub
popa
inc
sub
push
fcoms
cmpsb
cmp
pop
jnp
adc
mov
test
jl
ljmp
stc
frstor
lods
pop
lods
stos
sahf
test
add
mov
cmc
jbe
cmp
xorb
push
add
push
add
test
cli
push
loop
mov
arpl
std
add
and
ret
shrl
cmp
ror
loope
dec
pusha
xor
aas
push
shll
xor
mov
xchg
xchg
xchg
and
pop
lahf
in
inc
mov
aad
cmc
push
jb
lret
test
and
dec
addl
shll
jmp
aaa
ds
bound
imul
push
shr
pop
jecxz
xor
or
lahf
loop
js
and
outsb
loopne
leave
rcr
fidivl
sub
ret
cltd
push
xchg
test
add
outsl
push
hlt
add
mov
mov
push
and
je
pop
xchg
lahf
and
push
and
enter
stos
push
into
fwait
cmp
test
xchg
pop
cmp
scas
jne
dec
or
push
sub
in
cmp
sub
pop
xchg
push
jg
subl
jno
sub
inc
adc
sbb
xor
push
movsb
inc
mov
xchg
pop
mov
out
dec
jmp
lock
xor
pushf
jp
jne
fbstp
jbe
outsl
lea
imul
jbe
xchg
icebp
test
adc
mov
xor
pop
sub
jb
loop
pusha
push
lea
insb
xor
xchg
in
sub
add
sbb
jo
xchg
push
push
cmpsl
leave
pop
pop
mov
ja
movsb
sti
fnsave
or
loopne
pop
flds
xchg
fldenv
mov
scas
lahf
sbb
adc
jge
or
sbbb
fwait
sarl
xchg
test
fadds
mov
hlt
mov
dec
nop
enter
xchg
push
mov
fisubrl
test
decl
mov
cmp
lds
push
je
sar
es
mov
mov
lcall
mov
jbe
pop
imul
daa
cmc
loop
xor
rcrl
pop
and
pusha
add
sahf
rcrb
push
ret
insb
dec
aam
xchg
aad
and
xchg
and
hlt
int
in
pop
add
push
xchg
imul
pop
pop
sub
lret
or
mov
jmp
shrl
mov
popa
adc
pop
pop
rdtsc
jg
pop
or
sbb
andb
push
sub
sbb
dec
lahf
xchg
std
adc
mov
lcall
in
stos
sub
jp
js
gs
add
addr16
in
mov
jo
loop
lahf
test
push
mov
pop
xchg
mov
imul
test
loope
gs
push
sub
fstpl
les
inc
jae
adc
jg
xchg
jns
sahf
mov
sub
push
pop
shlb
lods
outsl
adc
push
mov
insb
push
loopne
xchg
shrb
outsl
aaa
scas
pop
jecxz
inc
movsl
test
insb
cmp
jge
shlb
fists
hlt
cmp
imul
aas
rol
push
jge
sub
jns
test
inc
loopne
jp
dec
mov
rolb
add
sub
push
out
ficompl
loopne
incl
xchg
scas
xchg
jg
jae,pn
and
mov
subb
loope
leave
fistpll
loope
add
adcl
jmp
sti
adcb
mov
les
xchg
aad
push
out
repz
jno
in
pop
mov
ds
mov
mov
sbb
adc
data16
std
jo
fiaddl
push
mov
or
xchg
pop
aam
sbb
je,pt
xor
scas
dec
mov
jbe
push
pop
sbb
xor
sub
mov
cmp
cli
sbb
imul
mov
lret
mov
sbb
push
scas
or
or
in
stos
dec
xchg
sub
fsubrs
pop
enter
scas
push
sbb
lds
cli
stc
ret
jge
call
lock
mov
or
dec
jb
sahf
sarb
mov
outsl
adc
es
cli
pop
cmpsl
and
pop
nop
jno
shl
xchg
ficoml
add
in
mov
rclb
xor
test
jge
dec
mov
pop
push
lds
add
pop
lcall
sbb
shrb
lods
clc
outsl
icebp
jnp
out
in
pop
push
rolb
cmp
and
mov
pop
jmp
scas
pushf
sub
jo
dec
lods
imul
out
fmull
dec
sti
inc
xlat
scas
aas
call
fidivl
aaa
mov
inc
xchg
into
cltd
xchg
and
es
push
insl
sbb
setno
mov
xlat
sub
pop
mov
jae
push
das
mov
jecxz
in
or
add
mov
test
cli
mov
cmp
out
jge
data16
xchg
pop
add
sti
lahf
mov
pusha
out
mov
mov
jns
movl
and
cld
mov
xchg
adc
xchg
adc
movb
xchg
pop
out
push
mov
mov
push
dec
xor
imul
ficoms
sub
mov
cmp
imul
xchg
push
mulb
adc
fiaddl
add
hlt
pop
mov
int
mov
xchg
or
adc
xor
outsb
jno
push
mov
fidivl
je
adc
flds
data16
in
rol
sub
inc
shll
into
outsb
stc
daa
mov
adc
andl
fistl
inc
into
popa
icebp
adc
jle
mov
loope
or
add
add
jl
dec
lods
ss
sti
ret
sub
pusha
push
pop
ja
xor
stos
outsl
pop
scas
les
xchg
aaa
mov
add
pop
mov
repz
inc
fistps
lahf
mov
repz
jg
movsl
shl
jb
jbe
adc
pop
push
mov
dec
dec
ret
ret
or
std
repz
fisttps
push
mov
lea
add
pop
les
mov
out
xchg
sbb
mov
dec
mov
lods
lea
mov
add
sbb
sub
notb
scas
inc
or
int
enter
xchg
mov
int3
xor
add
sub
aam
aaa
xchg
ljmp
push
xor
insb
push
push
repz
xor
ds
cltd
mov
inc
inc
test
sbb
insl
ror
lcall
jp
or
xchg
pusha
jne
outsl
int
aaa
pop
and
push
mov
xor
mov
sbb
push
adc
ljmp
loopne
sub
hlt
push
jp
jl
cmc
adc
mov
dec
dec
mov
test
mov
pop
sbb
imul
xor
fidivrl
fdiv
mov
pop
push
xchg
insl
jnp
stos
cld
les
and
es
adcb
and
cmpsl
addr16
jns
js
xor
xlat
movsl
cltd
inc
sub
sbb
mov
sub
pop
add
xchg
mov
out
ret
mov
and
add
test
push
pushf
es
lds
push
scas
testb
shll
pop
aam
jns
ds
pusha
jo
jne
jbe
in
rcrl
or
push
out
shrl
xchg
mov
xchg
popa
nop
stc
shll
sub
adc
fnstenv
into
adc
inc
insl
pop
dec
mov
push
and
inc
fst
ds
loope
pop
and
cmove
loope
mov
in
aaa
inc
jae
mov
imul
push
mov
std
or
fiadds
xor
sub
sbb
pop
push
imul
mov
mov
ds
fisubrs
imul
add
fucomi
push
push
mulb
repnz
push
ret
xor
fstl
daa
rorb
aad
pusha
jmp
pop
mov
cmpb
mov
sub
mov
leave
cmp
mov
call
push
adc
jbe
inc
adc
cmpsl
movb
mov
inc
test
nop
cmpsb
cld
mov
push
repnz
dec
test
scas
dec
xor
lret
and
mov
push
cmp
mov
fimuls
ljmp
push
iret
adc
mov
and
stos
out
cmpsb
adc
fisubl
shlb
lods
or
js
hlt
and
jg
sbb
sub
test
pusha
repnz
adc
sub
rcl
retw
adc
jns
fucomip
lret
pop
lods
pusha
jo
fsub
sbb
call
dec
adcb
shlb
lcall
daa
and
mov
or
and
sub
mov
rorl
ret
mov
mov
inc
sub
jae
je
mov
xchg
or
push
ja
adc
outsl
jecxz
stc
cmp
xchg
call
mov
mov
xlat
xor
push
dec
or
jo
pop
flds
and
repnz
pop
jo
nop
push
sbb
addr16
xchg
push
pusha
jmp
rcl
add
mov
sbb
sbb
pop
mov
test
inc
mov
ret
aas
data16
add
lret
jmp
mov
jnp
ror
jae
ret
std
add
cld
cmp
jmp
push
stos
mov
sbb
or
xchg
das
or
clc
sub
inc
imul
test
lods
add
xor
stos
pop
fcompl
repnz
lcall
fimuls
sub
sub
out
sbb
pop
cmp
push
sbb
pop
mov
sbbb
or
in
cmp
daa
in
dec
sbb
and
mov
fildl
pop
lcall
adc
out
dec
stos
pushf
paddsb
cli
repz
das
adc
mov
outsb
xor
test
mov
mov
testb
inc
int
mov
dec
dec
push
mov
dec
scas
xor
add
insb
fcoms
sahf
shr
cmp
roll
testb
faddp
std
repz
jno
cmpsl
add
dec
pop
inc
and
inc
xchg
cs
push
dec
pop
cmp
sbb
fdivp
out
movsl
or
xchg
movd
dec
sbb
insl
js
lcall
sub
xchg
add
xchg
rcll
mov
adc
pop
stc
and
pushf
xor
stos
push
mov
mov
jns
out
pop
lea
and
pop
pop
mov
dec
pop
jl
shll
lock
lods
lods
xlat
mov
jno
cmp
push
jne
and
push
pop
ljmp
dec
int3
loope
sbb
mov
cmp
mov
pop
ljmp
lods
lods
test
repz
cmpb
sbb
xchg
out
jecxz
je,pn
mov
aad
lahf
sbb
loop
mov
or
les
hlt
in
add
jns
rcll
inc
pop
decl
mov
out
jecxz
rcll
jns
hlt
fsts
mov
dec
cmp
mov
call
mov
stc
fwait
das
mov
pop
cld
lods
les
jno
cmp
loopne
dec
and
xor
inc
mov
out
hlt
mov
insl
push
dec
push
ret
in
mov
test
xchg
fstl
pop
lods
daa
jb
and
shrb
outsb
subl
mov
jae
add
push
addb
ret
arpl
pop
loope
jecxz
daa
push
and
cld
and
repnz
cmp
out
shll
repnz
mov
stos
aam
or
mov
and
adcb
sarl
xor
push
int3
mov
sbb
cli
mov
movsb
cmc
je
or
cwtl
mov
loope
mov
mov
imull
jns
popa
imulb
sahf
shl
add
or
inc
leave
pop
iret
in
into
or
pop
push
negb
xlat
outsl
xchg
ficoml
xor
pop
xor
mov
push
add
push
test
xor
push
dec
enter
xchg
jnp
push
aaa
push
cmp
mov
xchg
lret
push
pop
das
in
test
fcmove
rcrl
sbb
out
xchg
cmpl
push
push
sbb
mov
and
jae
sarl
pop
clc
sbb
and
and
test
lea
sub
mov
xchg
mov
je
jge
lret
jle
xchg
loope
xorl
adc
lret
fs
or
scas
ret
jae
lock
xchg
daa
xchg
fstpl
call
or
jo
mov
das
mov
das
inc
addr16
pop
xchg
lds
dec
jne
jmp
aad
push
mov
sbb
cmp
daa
dec
mov
jbe
or
in
cmpsb
ficompl
stos
mov
fcmovnu
jecxz
push
adc
and
out
orl
pushf
inc
icebp
sahf
cmp
cmp
mov
es
aam
in
js
push
rcl
pop
inc
jb
shl
jg
adc
sub
movsl
adc
push
push
icebp
add
dec
and
jb
xchg
inc
loope
or
mov
mov
pop
push
sub
cmc
push
push
icebp
mov
cmp
loop
sub
fcmovb
ja
cmpsl
inc
mov
pop
add
pop
shll
fldenv
rcll
fisubs
add
mov
or
jno
push
xor
js
lret
inc
mov
fidivrl
jge
mov
cmp
stos
sub
and
push
cmc
xor
xchg
movsl
int3
lcall
push
mov
hlt
aam
push
adc
mov
hlt
push
pop
adc
insb
int3
cli
js
in
sub
sti
mov
mov
xchg
dec
mov
lret
mov
aas
shrl
andb
jle
jg
pop
mov
adc
and
call
cmpsb
add
inc
test
sarl
repnz
xchg
cld
adc
decl
out
enter
xor
push
push
pop
loope
jnp
jno
movsl
mov
popf
and
nop
inc
adc
adc
pop
lods
mov
or
jo
lds
push
push
pop
fstpt
dec
loope
ret
cmp
andb
mov
fsts
test
cmp
outsb
inc
out
push
negl
scas
popa
mov
mov
imulb
xor
fcmovb
jbe
jne
xlat
dec
push
mov
mov
xor
or
push
aam
push
add
xchg
addl
out
aas
in
pop
pop
push
clc
data16
movsb
mov
aad
or
sub
push
push
add
lcall
stos
mov
pop
outsl
sub
mov
sbb
out
leave
inc
into
jl
test
sbb
push
dec
test
stos
mov
xchg
stos
push
sub
outsl
inc
rcrl
jp
loopne
sahf
stos
fadds
pop
ret
ja
sub
out
mov
addr16
dec
pop
icebp
xor
gs
sbb
out
lock
sub
jecxz
cltd
pop
fisubrs
pop
scas
adc
scas
pop
fdivl
and
adc
loope
push
and
and
ja
pop
icebp
movsl
push
jo
cmp
cltd
cmp
sbb
push
data16
jl
dec
sti
mov
arpl
push
in
mov
mov
dec
fisttpl
loop
jb
fld
pop
repnz
in
jl
jp
ror
push
cmc
fwait
inc
add
movsb
xor
sub
cs
xchg
call
ljmp
leave
push
mov
dec
add
mov
inc
sub
jne
mov
mov
jne
pop
push
adc
jns
cmp
test
jge
negl
pusha
rol
ret
inc
movsl
lods
inc
mull
push
pop
enter
out
insl
aad
push
dec
jbe
or
fistps
sub
lods
int
and
sub
ret
rcr
repz
pop
sbb
adc
inc
loope
jo
repz
shlb
sub
insb
in
and
push
es
jae
int
cmpsb
jne
nop
out
mov
mov
jmp
jle
push
enter
je
mov
push
cmp
mov
nop
mov
adc
lret
push
sub
inc
daa
insl
sbb
push
std
in
mov
scas
movsl
inc
aas
pop
testb
inc
popf
or
in
roll
jp
loopne
in
mov
popa
popa
push
dec
pop
fnstenv
das
scas
bnd
lret
out
outsb
xchg
xchg
xchg
stc
sbb
enter
ss
pop
dec
gs
or
aam
arpl
push
in
ja
cld
lods
mov
ret
mov
jae
into
clc
and
and
adc
or
test
loopew
sbb
fcompl
dec
push
sub
bound
cmpsl
in
aad
icebp
inc
ficoml
xchg
mov
push
xchg
sub
xchg
adc
icebp
pusha
dec
and
push
add
cmp
ficomps
adc
pop
push
push
push
lds
and
fcmovne
stc
push
fwait
jo
xchg
or
push
pop
dec
and
popa
push
int
aas
mov
mov
iret
sarl
jp
shr
jae
and
iret
mov
repnz
lods
inc
loopne
add
loopne
xchg
xor
cmp
xchg
fs
aaa
lea
xor
pop
lret
xor
jb
mov
jbe
sbb
xor
aas
xor
cmpsb
mov
out
mov
jbe
in
lret
stos
aaa
xor
mov
and
popf
cmp
mov
mov
pop
leave
pop
mov
mov
lods
sub
out
inc
icebp
sub
sub
stos
cmp
jb
push
inc
ret
dec
dec
jge
mov
push
add
mov
in
bnd
imul
sysenter
out
sub
pusha
pop
rcrb
imul
inc
orb
cld
sarb
jge
cwtl
push
scas
adc
adc
add
pop
int3
dec
mov
mov
xor
xlat
pop
jne
inc
inc
outsb
arpl
inc
orb
hlt
ds
and
adc
cli
xchg
push
ja
inc
daa
xor
aas
insb
sbb
add
int3
mov
cmp
cld
scas
xchg
pop
dec
mov
adc
or
mov
push
jae
pop
mov
out
dec
add
add
loop
dec
gs
cli
mov
rolb
aaa
shrb
sub
adc
insl
sbb
add
repnz
pushf
icebp
cmp
jmp
jbe
pop
lods
sub
cmc
adc
lods
sbb
cmp
out
je
out
adc
cmp
dec
lods
jmp
cmp
fcompl
add
dec
pushf
loopne
lcall
in
and
jge
dec
movsl
jns
ljmp
ss
out
inc
jmp
out
dec
sbbl
mov
pand
dec
out
mov
fs
mov
add
pop
inc
xor
int
inc
lret
push
idivb
mov
xchg
mov
mov
add
les
xor
sub
jo
and
insl
lret
pop
inc
cwtl
mov
je
insb
es
sub
gs
les
stos
enter
adc
push
cmp
mov
pop
pop
push
or
in
sub
loope
fcomps
fistl
cmp
sbb
sub
fiadds
push
imul
mov
int
jl
dec
push
outsl
cmp
aam
cs
inc
movsb
repnz
sub
xor
daa
and
mov
inc
or
test
jns
leave
cmp
xor
rclb
sbb
xor
cmp
mov
cs
popa
in
xchg
arpl
push
insl
cmc
cmp
adc
out
pop
mov
jae
ss
addr16
inc
jo
ss
pop
dec
enter
ret
rcrl
cltd
sub
in
cltd
inc
mov
xor
mov
or
imul
mov
lahf
xchg
adc
cld
sarl
pop
lock
lock
out
sbb
hlt
add
or
ss
adcl
xchg
rol
and
ljmp
push
push
stos
mov
jg
sbb
lret
pusha
add
pushf
cmp
lock
sbb
pop
mov
sub
xor
xor
push
int
dec
out
ja
lret
inc
loope
xor
stc
fwait
test
or
xchg
push
lret
push
icebp
cmp
push
push
cli
jb
xchg
push
and
lock
xchg
mov
fcmovne
adc
gs
jecxz
hlt
cmp
cmp
jbe
inc
nop
lds
popf
inc
gs
aad
mov
aad
sbb
icebp
xchg
xchg
dec
outsl
sbb
idivb
or
xchg
data16
mov
pop
and
cmp
or
sub
xor
inc
imul
idivl
push
xchg
sub
xchg
sbb
inc
shll
sub
stos
hlt
out
or
pop
sub
add
out
mov
stc
and
cld
out
jnp
movq
push
inc
subl
stos
mov
cld
shll
pop
stos
inc
jnp
roll
gs
xlat
cmp
cmp
lahf
nop
pop
sbb
fisubrl
and
mov
sarb
adc
das
sub
or
ja
out
cmp
inc
add
and
out
mov
shr
mov
jne
out
jle
or
or
imul
xor
mov
jo
dec
cmp
xor
push
pop
sbb
mov
bound
jg
aaa
lods
jl
ja
adc
scas
stos
pop
or
cmp
daa
lock
adc
jg
out
dec
mov
pop
mov
pop
shll
push
fmull
jne
ss
adc
jmp
pop
in
fsubrl
jne
shlb
sbb
or
call
mov
mov
pop
dec
xor
pop
je
push
ja
std
jns
pusha
sbb
jo
inc
push
adc
scas
pop
xchg
cs
push
ret
jns
sbb
mov
pop
into
dec
mov
aas
xor
push
inc
inc
cwtl
cmpsb
cmp
mov
mov
jnp
mov
push
daa
mov
lds
fs
clc
or
pop
andl
lds
aas
and
sbb
adc
sbb
scas
jb
out
ret
pop
sub
addr16
aam
aam
test
clc
pop
mov
nop
inc
nop
dec
xor
popa
call
lds
mov
sti
iret
push
push
inc
loop
mov
sub
lahf
push
popf
lret
or
lcall
and
sub
mov
cmp
mov
jge
sub
adc
xor
inc
loop
pop
dec
xchg
or
and
dec
dec
in
stos
xor
mov
and
dec
inc
ljmp
sti
add
out
mov
or
nop
aas
mov
dec
ret
mov
fsubs
mov
insb
loop
xor
in
push
jp
jg
mov
push
test
inc
sub
push
mov
nop
xchg
lods
mov
aad
inc
nop
rcrb
clc
mov
pop
loope
sub
in
es
shl
dec
mov
mov
xchg
push
dec
push
ja
xchg
int
in
mov
jnp
dec
xchg
das
scas
add
xchg
fsubrs
stos
int
in
lret
aam
outsb
lea
mov
inc
add
loope
and
addr16
sub
push
mov
leave
cmp
loope
sub
mov
pop
cmp
xor
icebp
lods
out
rorb
jb
inc
pop
mov
pop
cltd
jno
rolb
mov
inc
mov
jg
cmp
mov
inc
scas
fisubs
mov
mov
int
cli
lahf
lods
and
gs
pop
and
pop
jg
lret
std
loopne
mov
lret
push
ror
push
lock
cs
mov
or
sub
jge
inc
ljmp
mov
sahf
mov
popa
imul
or
das
sbb
xchg
in
aas
fiadds
arpl
sub
fistpll
add
jmp
fcoms
jl
cmpsb
xchg
loope
xchg
rclb
outsl
lock
rorl
and
push
rcl
sub
and
daa
inc
sbb
cld
push
orb
jb
test
daa
mov
inc
lret
jae
push
iret
sti
and
lds
fimull
adc
mov
mov
inc
dec
adc
xchg
bound
cmpsb
xchg
fdivl
and
dec
decb
jle
mov
repz
arpl
mov
or
outsb
cmp
sbb
cwtl
mov
xchg
dec
sbbb
mov
sub
push
je
cmp
inc
pop
dec
outsb
push
mov
lret
cmp
sbb
fdivrl
xor
and
mov
shl
mov
lret
insl
mov
push
and
push
add
or
add
insl
mov
pop
mov
jl
sbb
mov
sbb
sarl
mov
mov
jg
fmuls
decl
fs
popf
adc
mov
insl
jg
dec
int
pop
inc
iret
rcr
jne
inc
pusha
fcoms
xchg
or
dec
dec
mov
mov
jb
sbb
push
inc
cld
add
push
sub
outsl
stos
sbb
bound
lret
jb
movsl
push
inc
cmc
shrb
mov
jbe
cs
mov
cmp
enter
mov
cltd
push
fwait
cmp
or
adc
sbb
mov
xchg
ja
std
adc
sbb
jae
rorl
add
das
mov
push
cld
pop
inc
rcrb
or
mov
sbb
add
sbb
insb
scas
movsb
inc
and
stos
add
movsl
cmpsb
or
jmp
pop
and
cltd
jp
cmc
andb
out
hlt
push
lods
dec
pop
pop
dec
shll
pop
cli
jb
int3
mov
test
into
adc
and
pop
cmp
pop
int3
xor
push
ljmp
movsb
mov
and
testb
std
mov
mov
mov
lcall
or
inc
fucomi
test
retw
ja
lods
cmp
add
dec
call
or
jp
dec
dec
sbb
ss
jl
cmp
icebp
in
jb
and
xor
orb
pusha
jle
loope
adc
scas
mov
das
sub
mov
mov
arpl
fwait
test
cmp
mov
sbb
lock
add
subl
mov
je
and
ret
and
pop
add
mov
push
fstpl
shr
adc
shr
or
out
pop
lret
clc
stos
incb
add
push
enter
mov
clc
sub
or
mov
mov
and
pop
dec
movsb
ret
sub
jmp
cmp
std
jmp
xlat
jo
ljmp
imul
out
movsl
mov
mov
pop
dec
add
xchg
jmp
sarb
mov
loop
dec
add
movsb
lods
out
xor
jbe
sub
ret
inc
or
lcall
sahf
add
sbbl
inc
cmp
movsl
or
bound
sub
repz
aam
cmp
push
movsb
les
xor
mov
ret
mov
cltd
ja
push
stos
push
sub
loop
inc
es
dec
xchg
lea
imul
test
cld
mov
or
dec
xchg
mov
or
fnsave
iret
imul
rcrb
sub
xlat
push
ss
mov
sbb
inc
add
mov
rorb
add
fisubs
rorb
out
jbe
loopne
mov
and
push
jns
or
fsubl
sub
fistl
daa
sub
inc
jmp
aam
and
xchg
jo
push
sbb
ret
mov
sub
add
xchg
out
ret
ret
data16
loop
ss
xchg
adc
std
insl
pop
in
push
stos
lahf
or
mov
insb
adc
fildll
rclb
sbb
lret
inc
pushf
or
and
fsubrl
es
or
scas
stc
mov
sbb
insl
mov
mov
cmpsb
and
cmpb
shll
dec
mov
ja
mov
fnstenv
or
mov
pop
and
jge
mov
inc
filds
jnp
lret
lahf
mov
fcoml
test
fisubrs
divps
xchg
jns
xchg
add
testb
pop
xchg
sbb
or
xor
sbb
mov
mov
cmpsb
fcomps
cltd
or
lock
xor
test
pop
pop
mov
hlt
aas
inc
xchg
adc
xor
enter
shlb
insl
adc
xor
push
sbb
hlt
cmpsb
pop
ret
ret
mov
fdivrl
cmp
flds
mov
das
pop
and
bnd
mov
xchg
inc
push
ja
xchg
mov
rorb
jg
add
xchg
jno
sbb
mov
and
into
lock
xor
mov
iret
out
fisttpll
cmp
inc
jb
in
mov
or
sub
test
jp
rcll
hlt
push
scas
ret
in
aas
mov
stos
aaa
and
out
xchg
pop
xor
movsl
or
cld
inc
xor
cmp
std
and
mov
aad
dec
aas
test
enter
leave
inc
out
xor
in
out
push
mov
in
sub
xor
sbb
mov
xchg
inc
add
jecxz
push
mov
in
scas
and
xchg
iret
jns
mov
pusha
ficompl
sub
jnp
mov
shl
scas
in
js
movzbl
mov
movsl
stos
ja
jge
lcall
push
loope
or
sub
mov
std
fdivrs
mov
ljmp
adc
stos
xor
fwait
loope
out
cmpsl
insl
dec
jae
in
aaa
arpl
jmp
out
push
sub
mov
add
les
xchg
sub
lahf
jge
sarl
sarl
dec
repnz
dec
cmpsl
fdivl
mov
and
test
xchg
inc
mov
jnp
sbb
std
out
jge
sbb
ss
and
stos
fildl
sbb
call
adc
inc
lcall
mov
push
rol
dec
sub
push
dec
lret
and
fcmovu
sub
pushf
in
ja
movsl
xor
fcoms
xchg
stc
sbb
lret
mov
outsb
divl
test
dec
imul
adc
jmp
sbb
adc
loopne
jo
xchg
inc
popf
mov
xor
and
mov
or
ljmp
fcmovnu
sub
fdivl
pop
sbb
mov
xchg
ret
push
jp
in
dec
gs
js
hlt
mov
push
xchg
enter
lcall
in
pop
push
iret
xchg
mov
lret
pop
xor
jmp
mov
jge
mov
bound
or
adc
iret
push
andb
jb
outsl
test
push
inc
scas
pop
fcoml
fstps
cmp
das
jns
jmp
jno
outsl
imul
mov
xor
pop
push
lds
lea
and
into
lock
or
and
or
pop
aam
cmp
pop
xchg
fmull
push
pusha
ret
rclb
xchg
add
jo
mov
sti
and
jo
lret
imul
dec
popf
inc
fcmovbe
and
outsl
sti
sbb
cmp
mov
xchg
ljmp
jo
cmp
jmp
push
xor
cmpsl
cmp
cmp
add
bound
insb
mov
adc
cltd
ret
test
jp
daa
mov
mov
cmp
inc
inc
mov
lea
inc
movsl
push
imul
in
mov
lea
adc
pusha
out
dec
test
push
addr16
popa
fisubs
into
xchg
mov
fwait
rcrb
and
jbe
loope
and
imul
mov
xor
dec
jp
out
js
adc
sub
nop
jae
outsb
test
mov
inc
lock
aam
fidivl
sbb
jns
push
mov
aas
and
test
and
jg
push
repz
call
lods
and
mov
sar
inc
lock
xor
lods
dec
cwtl
stc
mov
and
fdivs
xchg
pop
or
push
js
jmp
gs
shl
fcompl
movsl
cmp
push
pusha
dec
xor
aas
mov
pop
lods
xchg
addr16
outsl
nop
sub
imul
fs
outsl
pop
xor
dec
jge
xchg
dec
cmc
cmpl
xor
jo
sbb
lock
lods
popa
lea
xor
cmp
enterw
xchg
adc
push
jecxz
sbb
xor
adc
jo
lea
and
push
insl
mov
adc
addb
scas
xchg
mov
inc
cld
jge
lret
dec
movsb
push
leave
mov
orb
fst
sti
popf
xchg
jl
das
jne
mov
cmp
stc
lret
cli
int3
xchg
dec
data16
movsb
mov
jmp
and
pop
in
push
pushf
or
imul
sub
ss
cmp
insl
call
and
rcll
push
mov
jmp
sub
jge
jmp
ss
mov
jmp
shl
popa
inc
in
mov
push
repz
xlat
dec
push
adc
faddl
add
into
sub
call
lods
jb
enter
sbb
jp
pusha
pop
dec
jle
mov
dec
lock
adc
loopne
and
ss
loopne
push
cmpsl
out
dec
xchg
xor
out
inc
cltd
out
testl
and
mov
ds
addb
into
insl
push
add
loopne
sbb
xchg
out
hlt
lcall
push
mov
dec
mov
movsl
idiv
sub
push
lret
scas
dec
xor
scas
mov
das
add
das
mov
in
dec
mov
jge
scas
es
in
cmp
mov
fwait
jecxz
lea
add
ds
aaa
shrl
js
xchg
outsb
popf
bound
decb
and
jge
fstpl
push
int3
out
pop
out
jo
jb
lock
mov
pop
aam
mov
jp
xchg
sti
jo
adc
lahf
mov
and
dec
cwtl
cmp
dec
inc
mov
mov
cmp
xor
fs
or
cmp
lea
mov
fdivrl
or
outsb
push
sub
xor
outsb
icebp
mov
inc
daa
xchg
jge
cmpsl
inc
sbb
cwtl
xchg
shlb
rorl
pop
in
xchg
shl
aad
popf
lods
fildl
pop
stos
adc
sarb
lret
cli
stos
jns
sbb
repnz
cld
inc
xor
repnz
test
push
jb
and
sbb
dec
push
pop
movsl
sub
push
dec
cmp
fwait
xchg
mov
cwtl
mov
jo
add
rcr
lcall
push
push
outsb
popf
pop
ds
xchg
mov
incb
push
std
rcr
pop
movsb
push
es
fnsave
mov
movl
sahf
jle
out
fsubrl
xor
inc
test
leave
add
je
xchg
sbb
cmp
scas
pushf
nop
push
out
xor
adcb
aam
pop
jle
pop
sti
adc
stos
jns
adc
ret
aas
adc
aaa
xor
push
mov
popa
mov
cmp
bound
sub
dec
imul
cmpsl
fcompl
xchg
pop
rcrb
fdivr
cmpsb
inc
out
iret
dec
fdivrs
lcall
clc
repz
lods
clc
push
mov
and
test
add
loopne
mov
ret
cmp
push
clc
mov
add
pop
push
movsb
mov
cmp
dec
out
shrl
pop
xlat
rcr
xchg
xor
ret
xchg
nop
in
cs
mov
sti
out
add
sahf
mov
or
adc
mov
inc
dec
enter
popf
enter
aam
fisttpl
mov
cmp
outsb
push
add
inc
int3
cmp
jb
xchg
pop
mov
mov
sar
rolb
push
adc
pop
dec
outsl
test
dec
inc
paddq
inc
pop
les
insl
dec
dec
push
aad
cmc
sub
arpl
je
inc
es
shll
arpl
cmp
faddl
sbb
and
in
ficomps
test
shlw
cmp
dec
lret
mov
cmp
insl
xor
dec
loope
mov
sub
or
jmp
mov
aas
lods
push
rorb
push
arpl
pusha
add
pop
xchg
cmpb
int3
fidivrs
push
inc
jo
jle
add
adc
or
xchg
les
cmc
jb
aam
adc
mov
mov
and
jecxz
xchg
push
dec
sbb
sub
ljmp
xchg
cmp
xor
sbb
push
cmp
push
push
pop
sub
sbb
out
push
jb
test
arpl
aas
push
and
adc
les
daa
rcr
lods
pop
adc
lods
aaa
scas
daa
cwtl
popa
out
xlat
cwtl
inc
xor
lahf
ja
lret
rcrl
fsts
push
into
mov
loop
mov
pop
mov
inc
add
insb
push
pop
push
subl
insl
push
insb
sbb
in
push
lds
dec
jo
jns
jp
mov
div
fdiv
cmp
push
push
sbb
inc
shll
gs
add
inc
mov
jle
sbb
nop
push
stc
xchg
lods
jne
test
flds
fdivl
push
std
xor
mov
bound
shlb
xor
fisttpll
clc
jmp
iret
xchg
push
nop
sbb
test
inc
add
loop
repnz
out
mov
ret
xorb
lods
popf
bound
sti
push
xchg
mov
add
gs
jb
push
jns
fucomip
push
push
pop
xchg
mull
fstpt
jo
rcrb
jnp
rclb
cmc
popf
icebp
mov
sub
aad
dec
repz
pop
add
lahf
fwait
add
mov
cmp
add
lret
lock
lret
ret
jno
incl
adc
push
lcall
dec
mov
outsl
jno
bound
xor
mov
dec
add
and
cmp
fs
cmp
mov
xor
xchg
adc
adc
enter
add
cmpsb
pop
mov
stos
sub
movsl
jecxz
fcomps
push
xchg
test
outsl
ljmp
in
pop
lods
mov
test
dec
loopne
jp
or
and
and
aaa
push
mov
add
mov
dec
add
xchg
mov
push
jno
lods
cltd
lcall
push
aas
test
ret
andl
in
and
cld
sti
adc
std
mov
sbb
xor
scas
adc
leave
rolb
mov
pop
lds
shrl
sti
shrl
mov
add
lret
mov
sub
xchg
adc
cmp
add
pusha
add
jae
mov
mov
scas
pop
dec
scas
cmp
sub
add
inc
insl
fbld
jecxz
insb
mov
cltd
xchg
xchg
pushl
pusha
push
pop
jecxz
xor
or
enter
mov
jo
fcoml
push
ljmp
call
stos
xchg
push
mov
popa
sbb
aaa
rolb
fsubp
fs
pop
mov
add
test
xor
les
pop
sbb
dec
mov
or
cmpsl
test
fisubl
nop
out
push
inc
sbb
and
dec
dec
insb
out
push
aaa
sbb
dec
jbe
lret
ret
inc
pop
nop
mov
arpl
addr16
iret
popf
call
addl
cltd
pop
test
xchg
jae
stc
cwtl
insb
lea
outsl
ljmp
mov
cs
mov
or
mov
xchg
fildll
shrl
repnz
xor
or
stos
loop
mov
arpl
ret
ds
rcrl
sub
mov
dec
xchg
leave
mov
pushf
xchg
and
add
outsl
jb
mov
in
test
push
sahf
stos
mov
adc
test
data16
dec
mov
jno
xchg
adc
cmpsb
mov
std
dec
decb
shll
ss
adc
xchg
sub
adcb
cmc
mov
in
imul
sbbl
daa
roll
xlat
dec
addr16
loope
pop
and
pop
pop
or
xor
adc
sub
sahf
jmp
cmp
jnp
cwtl
shl
gs
sahf
movsl
push
mov
jmp
ret
and
sbb
push
cmc
push
add
mov
out
icebp
cmp
push
mov
or
mov
adc
mov
pusha
ljmp
and
gs
loope
les
bound
pop
ret
sbb
mov
movsb
out
out
sarl
les
xchg
or
imul
addr16
mov
fld
leave
std
pop
icebp
sbb
xor
out
btr
ljmp
sarb
cmp
lock
and
xchg
jmp
adc
mov
or
or
and
cmp
jo
in
adc
xchg
scas
enter
add
ret
add
xchg
push
cmp
jp
stos
xchg
inc
cltd
add
mov
scas
movsb
lods
jle,pt
jmp
push
xor
cli
arpl
testb
stos
jno
mov
jl
lock
push
sub
fmul
adc
mov
dec
or
lahf
cmpsl
clc
pop
dec
xor
shll
adc
aas
mov
fucomp
mov
mov
lods
movsl
adc
les
xorb
cwtl
in
cmpsb
mov
push
mov
test
cmp
mov
cs
lds
fisttpl
or
inc
mov
repz
inc
cld
loopne
scas
enter
in
ds
sbb
push
cld
xchg
jo
test
adc
aas
inc
ror
cmp
stos
xchg
jno
jns
imul
jmp
and
cmp
imul
lret
xchg
enter
add
mov
sti
ficomps
es
idiv
xor
ds
sbb
push
ljmp
xchg
dec
cmp
scas
mov
xor
cltd
and
bound
xor
pushf
sbb
call
push
mov
jnp
or
push
and
call
mov
stos
fs
pop
adc
fsubp
mov
jle
push
pop
in
or
pop
jecxz
clc
cmp
cmp
cmp
sbb
in
bound
mov
mov
jno
negl
sub
push
rcrb
jmp
ljmp
bound
out
mov
lret
jecxz
out
add
fildl
testl
hlt
cmp
xchg
xor
rorb
xor
mov
or
mov
out
test
shll
ret
dec
es
jg
imul
pop
and
outsl
popf
in
les
xor
mov
into
hlt
jo
das
and
inc
sbb
pop
sar
jle
cmpsb
add
aad
jl
add
mov
push
loopne
jle
sub
mov
inc
ret
sbb
outsl
dec
inc
jp
dec
das
push
mov
mov
inc
pushf
popa
add
test
mov
sti
lret
mov
je
or
ja
fsubrp
out
mov
in
aad
addr16
subl
sbb
mov
xchg
jnp
int3
fcomps
cld
ljmp
pushf
cmp
lahf
lret
push
sub
mov
push
daa
cltd
movsb
dec
nop
popa
call
and
xchg
mov
lret
xchg
jecxz
and
hlt
jno
add
ss
lcall
adc
rorl
xchg
mov
add
mov
xchg
inc
insl
ja
xchg
or
jecxz
dec
sbb
pop
jbe
adc
inc
clc
mov
adc
push
xchg
mov
sbb
fdiv
dec
xlat
fs
addb
add
xor
sub
ljmp
bound
aad
fmul
movsl
out
flds
push
jno
lods
mov
add
scas
jg
mov
push
rolb
jne
mov
jbe
inc
dec
test
mov
divl
insb
idiv
fstpl
imul
add
out
mov
xor
sarb
lods
fnstsw
add
jnp
sbb
shll
xchg
fldenv
pop
xchg
inc
xchg
push
dec
sbb
xor
sub
shll
fwait
dec
adc
push
nopl
push
inc
icebp
cmpl
movsl
push
xchg
xor
inc
inc
stos
out
idivb
imul
sbb
adc
cltd
aam
adc
bound
mov
jo
arpl
test
pop
out
mov
aam
xchg
jmp
sub
push
bound
cmp
fs
xchg
mov
add
test
pop
ret
loope
fiadds
push
subl
pusha
aaa
stc
pushf
push
cwtl
fs
fbstp
jo
jg
mov
enter
inc
in
dec
xchg
and
es
xor
pop
fisttpl
outsb
imul
xchg
out
jno
jle
pop
mul
enter
repnz
mov
insl
fwait
call
mov
rol
div
insl
movsb
xor
ss
jb
xchg
sub
mov
int
shr
cmp
cmp
gs
sbb
cmp
shrl
cmp
jmp
xchg
dec
or
xor
popw
jge
jmp
cld
push
xchg
jmp
cld
push
cmpsb
test
fst
adc
sbb
sbb
stos
popa
sub
jmp
or
lock
mov
aas
pop
cld
imul
or
je
fxch
jo
mov
daa
add
dec
cmpb
int
jp
outsl
inc
jle
or
mov
cli
movsb
in
or
mov
adc
jo
dec
ljmp
aam
je
sbb
or
aam
fistpll
xor
aas
nop
roll
lcall
aaa
xchg
mov
out
pop
movsl
adc
and
xchg
push
out
mov
xor
push
clc
int
mov
and
push
bound
jmp
bound
inc
shl
ret
test
out
ja
mov
push
xchg
arpl
test
inc
jnp
andl
fsubrl
loope
subl
sub
dec
daa
ret
stos
rorb
js
pop
or
and
sub
jns
lret
jnp
pop
aad
outsl
repz
lock
sbb
insb
dec
and
xor
addb
push
jp
jnp
out
mov
dec
jnp
cmpsb
lods
cmpsl
jae
cmp
faddl
and
jbe
or
jl
adc
sbb
repnz
jns
add
push
loopne
jne
push
dec
test
iret
mov
add
outsl
mov
xor
mov
imul
addr16
inc
pop
cwtl
scas
or
push
jg
and
cmp
sbb
fstl
jge
cmp
les
js
insb
sbb
push
jl
jmp
stos
mov
mov
sub
repz
push
pop
outsb
mov
movsl
dec
notb
jle
pop
les
sbb
idivl
xchg
cmp
nop
loope
iret
sti
jmp
or
std
testb
and
and
insb
mov
inc
scas
cmp
addr16
les
lods
jg
out
jle
fildl
sbb
neg
mov
aam
rol
jb
call
lods
and
pop
and
iret
loop
sub
out
sbb
cmp
inc
insb
pop
mov
mov
cmp
int
popl
sub
add
sub
andb
rorb
test
jne
or
mov
cmc
aaa
dec
jle
push
ljmp
icebp
push
loope
cmpb
test
push
repz
xchg
ret
mov
insl
test
jge
out
jge
sti
repz
shll
lea
bound
cmc
cmp
xor
or
pop
mov
sub
push
out
rolb
or
pop
push
fbld
adc
mov
aaa
inc
lds
iret
cmp
clc
in
dec
mov
mov
mov
cmpsb
push
mov
xchg
sarl
push
lea
mov
repnz
rcr
sbb
xchg
cmp
jbe
mov
dec
xchg
add
in
pop
fsubl
insb
push
sub
xchg
push
dec
mov
cmpsl
stc
movsb
jnp
mov
scas
rclb
add
inc
add
push
in
ds
mov
jl
or
lds
das
sub
cltd
jno
cmpsb
or
mov
mov
jg
xor
push
les
sti
scas
iret
xchg
fstl
inc
aaa
in
xchg
dec
cmpb
movsb
frstor
pop
repnz
add
test
jle
cmp
cmpsb
push
cmp
mov
mov
xchg
mov
loope
or
test
ret
mov
xchg
sub
jecxz
add
orb
je
or
cmp
or
and
js
repnz
jp
les
jb
ret
push
pop
daa
and
aad
sarl
and
lret
stos
cmp
aas
mov
mov
xor
ret
lret
fidivs
cltd
test
mov
arpl
std
clc
add
mov
jmp
or
imul
pop
mov
jno
push
stc
xchg
cmp
in
scas
push
lock
stc
lods
test
pop
and
leave
push
mov
stos
mov
dec
jo
sahf
out
cmc
push
icebp
movsl
cmp
sbb
jmp
pop
sbb
pop
dec
jno
xor
ljmp
mov
xchg
adc
cs
pop
std
cmpsl
mulb
mov
adc
inc
shll
adc
enter
aas
dec
arpl
mov
ret
imul
outsb
add
sahf
pop
jp
jo
mov
pop
add
ret
icebp
xor
lcall
rcl
jmp
pop
xchg
xchg
mov
jge
neg
in
int
outsb
cmp
cs
and
stos
aad
inc
imul
dec
dec
pop
pop
nop
outsl
les
or
jo
std
scas
and
mov
cmpl
mov
inc
incb
js
adc
mov
xchg
ja
inc
and
xchg
adc
sub
mov
pusha
inc
sub
mov
enter
jmp
rclb
hlt
popf
dec
add
bound
push
or
std
fs
pop
les
js
mov
cmpsb
mov
in
push
fdivs
pop
hlt
in
lea
int
fst
adc
decl
movsb
movsl
cmp
andl
insl
ja
or
mov
sub
mov
add
shrb
insb
ljmp
xorl
in
or
ljmp
inc
xchg
in
sbbl
inc
or
xchg
shrl
nop
inc
stos
es
pop
mov
fisubrs
sahf
and
in
mov
push
adc
mov
push
lods
clc
xchg
xchg
lret
push
enter
pop
inc
adc
xchg
decl
psubusb
add
cwtl
xor
cmp
pushw
add
popf
push
mov
sbb
mov
mov
and
mov
mov
push
sbb
fld
aam
push
stc
and
fsts
fstpt
in
das
js
mov
jge
or
pusha
push
fnstenv
jle
aaa
sub
addr16
lret
fstpt
outsl
and
push
add
imul
inc
lds
scas
push
out
aad
dec
sub
repnz
clc
jnp
dec
jecxz
cmp
jp
adc
lock
cmp
adc
fldl
jg
jbe
sub
iret
jmp
in
lods
sahf
sbb
insb
repz
nop
dec
pusha
je
sbb
ficompl
mov
sbb
dec
jne
dec
leave
int
xor
test
and
jbe
int
dec
test
data16
mov
pop
fwait
pop
test
scas
lahf
jle
inc
push
scas
xchg
pop
xchg
jecxz
pop
xlat
push
fwait
dec
mov
cmc
pop
jae
out
or
dec
push
cltd
push
mov
and
xchg
inc
clc
lret
cmp
sbb
repnz
dec
mov
ljmp
cwtl
sbb
adc
sub
pushf
stos
or
add
cmp
or
insl
xor
jmp
scas
or
ja
in
pop
cld
js
sarl
gs
movsl
fdivrl
mov
inc
xchg
out
das
push
sub
idivl
fs
sahf
push
notl
jne
xchg
repz
dec
jmp
mov
mov
xor
mov
mov
adc
in
out
sbb
loope
pushw
inc
or
or
xorl
xchg
pop
das
repz
in
scas
add
lcall
int
or
insb
xchg
or
pop
fsubs
cwtl
test
fnstenv
loopne
sbb
mov
jp
ja
ds
xor
jg
sbb
mov
rcrb
mov
enter
mov
push
iret
inc
mov
stc
sbb
cltd
int
movsl
jmp
gs
fbstp
sbb
dec
sbb
mov
cmp
lret
pop
jbe
xchg
enter
popa
add
jle
dec
sub
inc
jle
push
hlt
int
push
fadds
add
lods
lret
and
das
insb
stos
xor
aas
pcmpgtw
cwtl
cmpsl
adc
jne
dec
sbbl
aad
and
dec
pushf
jmp
shrb
push
fsubrs
dec
scas
aam
lret
cs
sub
lds
or
add
in
inc
jns
pusha
inc
cmp
pop
pop
fs
sbb
fisttpll
inc
or
and
and
push
mov
sub
xchg
jmp
stos
mov
mov
mov
lods
stc
lret
xchg
leave
mov
test
cmpsl
es
and
xchg
clc
fidivrl
lcall
mov
in
xorl
cmp
test
mov
xchg
test
nop
repz
fidivrl
lock
pop
xor
out
xor
add
add
mov
jne
mov
or
sbb
out
movsb
cmp
lds
cmpsb
out
inc
sbb
scas
repnz
imul
and
ror
or
mov
push
sbb
push
mov
sbb
mov
sub
dec
push
sub
shlb
cmpl
test
into
mov
jo
adc
dec
adc
ja
pop
jmp
ret
adc
lds
je
popa
jg
int
inc
into
fildll
pop
imul
loop
xor
or
jne
xchg
rcll
dec
addr16
adc
test
add
mov
xchg
ss
out
mov
xchg
xor
inc
popf
cmpsb
lock
ljmp
mov
or
jno
fldenv
jg
inc
or
or
lcall
jmp
mov
jno
loope
inc
jns
in
inc
jp
imull
inc
out
fimull
out
loope
les
pop
pop
push
rcll
add
cmp
and
cmovle
shll
in
int
sbb
cmp
pop
enter
movsb
inc
or
push
shrl
xor
add
invd
jecxz
aas
sbb
push
orb
xchg
addb
mov
xchg
xchg
cltd
push
dec
pushf
jns
inc
cmpsb
inc
jbe
popf
mov
lret
xor
mov
push
movsl
std
add
pushf
push
fbstp
jmp
lods
jns
xchg
dec
adc
inc
jae
outsb
jo
inc
push
push
dec
leave
stos
cmc
xchg
jle
fimuls
pop
sub
lods
mov
mov
jo
push
das
in
aad
ret
mov
cld
fcmovbe
arpl
xor
sub
stos
stos
add
xchg
ret
sub
loop
out
push
jo
push
mov
movsl
mov
and
scas
addb
invd
cs
jno
cmp
sbb
mov
mov
cltd
push
lods
and
pop
jno
fiadds
or
test
cmp
out
adc
fnstenv
mov
xor
mov
lods
rclb
mov
inc
mov
nop
or
dec
xchg
stos
mov
fwait
pop
sbbb
dec
in
ss
ljmp
testb
jnp
scas
call
jae
dec
add
sub
outsb
or
mov
sarb
insl
push
dec
lock
add
jecxz
imul
test
dec
insl
sbb
shrb
or
test
xor
lods
lds
push
push
fiadds
cld
cltd
dec
in
push
test
sbb
push
mov
arpl
push
push
inc
mov
push
xor
add
sbb
je
pop
aad
jp
pop
jecxz
mov
xchg
in
loope
mov
xchg
adc
iret
mov
in
jmp
or
jmp
mov
mov
das
sti
sub
add
outsb
repnz
cmpsl
sub
test
sbb
adc
xchg
push
dec
dec
std
fsubrs
cmpsl
movsl
lods
arpl
ret
jp
dec
adc
sub
cmp
ja
pop
inc
js
push
or
mov
push
mov
out
leave
daa
popa
push
mov
ja
and
xchg
fsubs
jl
jbe
and
in
cli
in
or
stos
sbb
imul
mov
mov
aam
jns
cltd
push
dec
push
arpl
sti
mov
lret
lret
mov
and
sub
stos
out
mov
cli
insb
mov
sub
push
decb
lret
mov
xchg
popf
cmp
adcl
nop
ja
mov
sbb
jl
or
adc
xor
orl
out
loope
xlat
rol
dec
mov
sahf
pop
jbe
jnp
add
mov
into
das
mov
jmp
adc
or
jmp
and
stos
out
stc
ja
stos
mov
push
std
subb
iret
mov
push
add
ror
inc
out
cmp
sub
add
cmpb
paddq
push
jne
inc
lret
or
or
pop
sub
dec
movsb
orb
cmp
cmp
stc
and
shlb
sbb
jge
xlat
sar
xorl
mov
or
mov
inc
enter
inc
loopne
inc
cmp
loope
push
shll
daa
jns
mov
fstpt
add
pop
nop
adc
cwtl
daa
pop
jb
enter
ds
std
shll
out
loope
adc
push
or
sbb
adc
sbb
je
fcom
and
push
cmp
xchg
adc
out
nop
ljmp
xor
movsl
les
in
hlt
add
fildl
nop
fidivrl
aas
mov
out
and
outsb
imul
fstpl
sub
cmp
xorl
inc
xchg
pop
aaa
loop
lds
fwait
mov
loopne
cld
sub
and
push
dec
jp
mov
push
mov
mov
jb
sbb
mov
mov
mov
jmp
arpl
push
lret
mov
sub
das
addr16
mov
aam
and
mov
jae
sbb
push
jno
insl
shll
cltd
mov
dec
cs
inc
jecxz
out
mov
movsb
sub
negl
lods
addr16
jae
and
insb
lret
test
xchg
mov
in
mov
cltd
shr
inc
xchg
sub
mov
cmpsl
mov
adc
adc
adc
call
loope
adc
jb
test
popf
or
mov
je
ljmp
stos
mov
sbb
aam
cmpsb
ret
and
mov
xchg
pop
or
jnp
nop
xchg
iret
add
mov
mov
add
insb
mov
hlt
push
cmp
dec
movl
pop
xchg
outsb
test
push
testl
jp
mov
inc
add
cmp
lods
insl
sub
nop
outsl
pmullw
add
ds
add
mov
fs
bound
imul
out
jns
nop
or
ror
sub
subl
and
add
cmp
hlt
xor
andb
mov
dec
icebp
imul
clc
test
jns
mov
jg
mov
jge
dec
movsl
inc
mov
cmp
pop
jge
or
xchg
pop
scas
fists
or
jbe
popf
and
lcall
arpl
ficoml
fildll
call
fnsave
jecxz
lret
pop
jnp
push
lds
cltd
scas
mov
dec
cmc
repnz
push
insl
push
data16
ret
add
push
xchg
and
mov
jae
lods
mov
aad
fsubrs
mov
pop
fwait
sub
sub
jns
add
add
negl
dec
pop
inc
push
xchg
mov
dec
fstl
cs
jnp
aas
mov
xor
sub
push
jb
cltd
add
data16
mov
dec
stos
mov
ljmp
lahf
xchg
test
ss
imul
xchg
dec
daa
jbe
mov
jne
or
addb
xor
adc
xchg
int3
push
mov
adc
jns
bound
rcr
scas
sub
repz
insb
insb
and
xlat
lods
jmp
jne
xor
cmpsb
sub
xor
ret
jmp
test
data16
out
push
decl
push
stc
and
mov
fdivrs
mov
adc
insb
lret
and
ss
in
adc
idivl
add
xor
dec
sbb
mov
sub
aas
xor
sarl
sub
mov
add
subb
dec
or
rcl
inc
and
and
andl
icebp
jl
data16
fnstsw
xor
imul
adc
popf
out
fcmovnb
orl
mov
add
xor
pusha
push
push
lods
jmp
fsts
ljmp
mov
mov
push
jmp
or
mov
push
jmp
inc
mov
mov
data16
sub
in
mov
int3
rolb
gs
pop
rcll
mov
add
add
xorb
adc
loopne
jns
adc
out
or
scas
leave
adc
jns
sti
mov
cltd
xlat
lcall
push
stc
push
mov
jne
sub
bound
pushf
lds
cld
out
lock
jne
push
scas
mov
pop
mov
orb
fcmovne
push
repz
push
and
popl
sti
mov
filds
sbbl
aaa
jb
stos
add
jno
mov
xchg
aas
jmp
inc
popa
add
mov
add
loope
in
mov
scas
push
inc
pop
je
stos
lods
nop
jp
mov
test
fs
push
inc
push
xchg
adc
shlb
pusha
xor
mov
out
loop
stc
out
cwtl
or
cmc
mov
js
ret
les
adc
sub
inc
lcall
mov
add
ss
mov
fistps
sbbl
scas
in
fstpt
mov
sbb
fwait
in
or
out
mov
daa
jp
aaa
rclb
stos
fcom
jo
popa
movsb
fnstsw
popa
in
xchg
or
and
dec
imul
gs
mov
scas
scas
and
pop
cvtpi2ps
aas
jle
lret
sbb
aaa
cld
xchg
xor
xchg
cmpsl
dec
pop
sbb
fs
or
pushf
out
mov
mov
sbb
test
sub
mov
ds
sub
xchg
pop
mov
bound
sub
sbb
test
cmp
add
pop
mov
arpl
fs
in
xor
repz
jmp
inc
lcall
in
movsl
mov
cmp
test
ret
jno
jne
sti
fs
repnz
mov
cmp
mov
test
popa
cmp
sub
in
mov
or
push
repnz
fnsave
jmp
int3
test
fs
and
ret
aam
iret
cwtl
lea
add
mov
sub
cmp
out
fbstp
stos
roll
mov
or
shlb
out
pop
adc
out
rorb
mov
adc
jle
mov
lea
cmp
aas
les
sbb
add
shrb
push
sti
push
int3
cmpsb
movsb
inc
adc
adc
mov
add
add
xor
lret
ljmp
sub
dec
or
jle
movsb
or
sti
in
outsl
stc
inc
daa
lods
outsl
aaa
add
ss
cs
imul
icebp
xchg
mov
cwtl
in
and
repz
orl
add
adc
jmp
loope
mov
lret
out
sbb
int
fmull
xchg
dec
inc
push
js
sbb
push
mov
push
add
mov
in
jecxz
or
test
movsb
push
mov
mov
scas
add
fsubrs
ljmp
addr16
pop
jne
mov
mov
xchg
mov
fidivs
lgs
xchg
jns
lods
adc
fistpl
out
movsb
mov
out
in
mov
mov
push
push
divps
or
mov
hlt
stc
pop
pop
cmc
ret
sub
cs
xchg
push
bound
sub
js
popa
push
adc
mov
xlat
mov
stc
addl
insb
mov
pop
mov
adc
xor
addl
add
loopne
ljmp
mov
push
fisubrs
or
sbb
dec
leave
mov
cs
mov
lock
cmp
xor
sbb
jb
push
sbb
add
xchg
call
rcll
hlt
mov
les
mov
mov
repz
mov
sbbl
test
aad
insb
jb
fadds
sbb
dec
out
or
and
pop
bound
cld
icebp
into
mov
sub
jecxz
movsb
jns
iret
inc
cli
loop
jmp
push
adc
mov
sub
pop
inc
callw
pop
insb
out
repnz
fs
insb
insb
mov
loope
inc
inc
push
int3
lahf
sbb
push
into
jb
popa
xlat
sti
mov
cmp
scas
fldt
shl
jno
sbb
sub
sub
cltd
lock
pop
or
mov
and
movsb
adc
ficompl
xor
dec
fnsave
in
mov
insb
lahf
add
pop
out
pop
inc
push
pushf
mov
lea
shll
adc
jmp
push
jle
jle
mov
addr16
xor
imul
outsb
fmulp
xor
mov
pop
clc
jecxz
dec
push
jno
pop
dec
adc
sar
mov
add
cwtl
xchg
pop
xchg
mov
imul
arpl
push
ficoml
or
xlat
jae
mov
mov
sbb
enter
pop
negl
cmpsl
sbb
and
lahf
push
or
sbb
adc
mov
dec
cmp
mov
or
dec
mov
test
fwait
shr
imul
enter
mov
mov
jae
pop
xlat
sub
iret
pop
mov
int3
popf
inc
lods
imulb
rorl
dec
or
or
in
dec
dec
mov
cmpsl
fisttps
in
or
repz
pop
push
cltd
cmpsl
sub
xlat
inc
gs
out
orb
cmpsl
sti
mov
add
andb
mov
sarb
push
fwait
push
out
cmp
dec
mull
cld
or
cmp
insl
sbb
fnstenv
in
xchg
xor
cmp
enter
ja
pop
dec
stc
mov
fs
fwait
fs
test
test
mov
and
sub
add
add
mov
adc
adcl
fstps
pop
jb
outsl
orl
push
add
cmpsl
jne
push
lret
clc
scas
sbb
lds
and
mov
jg
cli
enter
jle
add
stos
inc
and
xchg
xor
cmp
or
add
sti
aam
scas
enter
shl
lret
mov
inc
inc
dec
cltd
cmp
test
xchg
call
cli
lods
out
lods
loop
outsl
cld
pop
test
pop
aam
test
sbb
push
cmpl
in
bound
xchg
and
mov
cltd
outsl
xor
mov
out
js
jb
popa
adc
jl
iret
or
sub
je
movsb
repnz
inc
xor
sub
mov
inc
addb
cld
and
shll
outsb
and
lea
pushf
and
ds
in
in
iret
out
or
js
insl
add
lods
or
add
sti
mov
in
xchg
xor
outsl
stos
sbb
sub
fsubrl
mov
loop
jno
aas
sub
jno
sbb
mov
push
cmp
lret
push
test
xchg
stos
fst
mov
jmp
pop
addl
ret
pusha
loope
adc
fwait
in
dec
scas
sbb
loop
push
cld
sbb
and
sti
out
pop
lock
cwtl
cmpb
popa
imul
push
lret
daa
push
rorb
jp
testb
sbb
pop
testl
inc
jg
pusha
out
mov
cmp
test
mov
add
pop
xchg
cmp
sbb
xorb
pop
jb
dec
int3
mov
xor
leave
push
ljmp
jo
pusha
jae
jl
adc
lcall
fadds
mov
and
and
sarb
lea
addr16
incb
repz
sub
push
repz
rcrl
mov
jbe
mov
sub
and
mov
std
rcl
icebp
ja
mov
cmpb
ja
dec
incl
and
hlt
ret
pusha
mov
push
and
jecxz
stc
push
icebp
adc
sub
popa
leave
mov
pusha
clc
and
jp
mov
mov
leave
sub
jl
in
xlat
inc
xchg
subl
push
nop
mov
mov
fs
sbb
jp
stos
loope
xchg
repnz
pop
cmc
xor
pop
dec
bound
mov
fimuls
mov
test
add
into
push
callw
in
pushf
cmp
cwtl
stc
push
and
aaa
pop
je
xor
inc
stc
aam
inc
cmp
call
pusha
lahf
shrl
mov
dec
into
adc
push
push
or
das
gs
xorl
scas
push
pop
pop
lods
pop
jge
cmpsl
loop
or
push
cmp
outsl
jbe
cmp
xchg
iret
dec
ss
repnz
jns
cmc
cmpsl
sbb
xor
int3
jp
pushf
fcomip
movsl
jg
fbstp
xlat
jmp
out
mov
hlt
lcall
lock
cmp
push
cmp
call
imul
test
loopne
push
fcomps
pop
test
in
call
loop
dec
test
sbb
mov
fcompl
insl
jmp
loopne
test
and
pop
jmp
push
test
inc
jle
js
lods
jae
clc
xchg
jp
call
adc
mov
aaa
cmp
add
nop
dec
mov
sbb
addr16
cltd
cmp
adc
pop
add
int
in
data16
mov
xchg
shlb
lock
imul
or
jns
mov
push
xchg
pop
inc
xchg
imul
std
jp
int
xlat
sbb
pop
adc
enter
adc
cmpsb
sahf
repnz
cld
mov
add
enter
xor
cmp
inc
vandnps
out
enter
xor
or
jl
es
jge
jmp
lret
pusha
xchg
dec
inc
inc
mov
sub
sub
mov
adc
inc
jne
jae
xchg
mov
imul
mov
push
gs
and
mov
and
sbb
imul
cmp
add
les
mov
pop
mov
je
xchg
xor
mov
pop
mov
inc
jmp
xchg
or
cwtl
aad
push
aam
push
cld
and
jg
addr16
dec
movsb
leave
and
and
out
into
jle
fidivrs
mov
xchg
jmp
divb
mov
sbb
dec
xchg
jne
sbb
addl
pop
mov
outsl
loope
daa
add
mov
dec
repz
adc
dec
ljmp
das
xchg
aas
xchg
mulb
outsb
inc
pushf
stc
ret
fdivs
std
pop
out
push
cltd
rclb
cmpsb
cmpsb
sbb
sub
test
mov
hlt
cld
lods
loopne
mov
push
insb
jg
lret
arpl
aaa
hlt
stc
push
pop
pushfw
icebp
enter
pop
shll
add
mov
adc
mov
jne
inc
inc
sbb
pop
jb
inc
pop
jno
add
in
dec
mov
movsl
out
sbb
imul
dec
push
shl
cmpl
mov
dec
xchg
or
mov
xchg
pop
sbb
jmp
jno
aas
rclb
mov
xchg
pop
jns
ljmp
lret
ret
push
pop
es
fldl
insb
mov
lcall
les
imul
adc
xor
cmpsl
ljmp
jo
cmp
mov
flds
out
dec
aad
stos
je
mov
adc
sub
addl
jl
jmp
mov
shr
out
fcmovnb
mov
pavgw
repnz
push
iret
das
js
jae
inc
xchg
push
xchg
sub
loope
push
sub
mov
mov
mov
cmp
fucomip
adc
je
outsl
pop
push
sbb
push
or
daa
push
ret
add
xchg
mov
mov
jne
xor
js
fs
mov
mov
or
jp
sub
cld
fnstenv
enter
push
mov
ret
fldt
leave
data16
sub
ljmp
dec
insl
add
jne
xchg
out
and
and
xor
cmp
jae
dec
cmp
loopne
rcrl
adc
es
les
add
and
in
mov
out
jg
in
mov
loope
pop
or
imul
sub
xor
mov
pop
jl
call
add
gs
adcb
lea
std
scas
dec
fidivl
data16
js
lret
movsl
popa
inc
movsl
leave
push
cmpsl
dec
sbb
mov
inc
mul
sub
fstl
jno
fcoms
imul
mul
test
and
movsl
mov
movsb
push
or
inc
sbb
imul
jp
mov
cwtl
clc
push
pop
mov
mov
outsl
int3
fstpt
xor
xchg
mov
pop
ja
dec
sub
repz
stos
ret
mov
ljmp
in
jg
dec
and
lods
adc
pop
mov
sub
inc
cmp
out
push
mov
pop
fnstsw
sub
es
ja
int3
sub
into
inc
es
int
mov
dec
repnz
arpl
fucomp
icebp
les
cmp
pop
xchg
notb
js
outsl
roll
das
xorl
pushf
jp
jge
scas
or
or
xchg
push
cmp
das
in
jl
xor
cmp
into
out
push
inc
jp
mov
xchg
loopne
ret
lret
sbb
fdivl
jne
mov
jge
mov
rorl
cli
lret
icebp
out
mov
mov
dec
cld
dec
mov
out
xlat
aad
sub
xchg
aaa
mov
xchg
cwtl
adc
jb
pop
adc
mov
mov
dec
or
pop
cli
mov
into
xchg
mov
push
sub
scas
ljmp
cmc
test
mov
aam
mov
dec
fdivs
aam
loope
mov
test
call
into
lahf
loop
cli
jmp
xor
pop
stos
adc
sub
int3
lcall
sbb
arpl
xor
nop
daa
mov
mov
data16
fdivrs
sub
fldcw
and
aam
leave
movsl
adc
mov
lods
jo
add
outsb
xchg
xchg
ficompl
mov
mov
dec
push
dec
dec
sti
inc
ja
push
push
stos
dec
clc
or
pop
outsb
add
gs
mov
adc
jg
mov
jp
push
mov
es
jno
loope
cmp
aaa
or
aam
jo
sarl
and
jge
mov
jmp
dec
mov
lret
in
enter
push
shlb
add
mov
mov
push
mov
push
cmp
fstl
repz
iret
repnz
insb
mov
divl
push
jne
in
and
xchg
inc
pop
and
int
or
rclb
fstps
push
jmp
and
loopne
jo
sahf
jno
movsl
ds
mov
push
adcl
xor
lcall
ret
sub
mov
or
cmp
dec
push
xor
call
push
xchg
lods
insl
dec
or
xor
aad
lret
nop
xor
aad
rorb
lods
cmp
jb
inc
test
ss
xchg
inc
lods
adc
negl
dec
movsb
sahf
jmp
cmpsb
inc
pop
stos
mov
sub
shlb
inc
and
inc
test
stos
out
jl
pushf
ret
daa
call
aad
sarl
cmp
xchg
lret
in
sub
arpl
pushl
insl
and
fdivrl
pop
push
inc
xchg
nop
lods
xchg
js
xchg
push
lret
test
aaa
imul
cmp
call
jno
cmp
cmp
adc
inc
mov
movsb
test
mov
xor
mov
mov
inc
ja
imul
mov
or
lock
call
adc
stos
adc
pusha
mov
les
mov
push
push
aad
pop
or
mov
jno
fucomi
fldenv
pop
fwait
and
out
xor
scas
adc
jl
or
or
stc
mov
in
test
fsubl
xor
jno
jp
ret
mov
loop
sbb
popf
jno
dec
jae
dec
aas
cmpsl
mov
dec
cs
sbb
jp
out
scas
mov
jne
sub
loope
and
in
rorb
movsb
sub
daa
xchg
out
insl
xchg
test
test
jp
push
push
xchg
jl
xchg
sahf
xchg
arpl
inc
cmp
sub
lret
cmpb
mov
mov
negl
jo
xor
push
inc
cld
std
nop
in
push
jmp
and
cmp
mov
dec
or
mov
jno
js
adc
adc
icebp
imul
or
mov
sbb
outsl
gs
jbe
ds
push
nop
xor
mov
sahf
in
ret
pusha
incl
pop
outsb
leave
jb
xchg
inc
lods
lcall
mov
or
in
call
xor
dec
add
jnp
xlat
and
pop
leave
test
add
xor
shr
pop
addb
insl
mov
cmp
push
cmc
cmp
push
add
sub
out
xchg
and
movsb
scas
jo
fisubl
imul
cmp
sub
xlat
iret
sahf
sti
jl
mov
push
xchg
push
cmpsb
xchg
addr16
sbb
es
add
data16
arpl
or
mov
mov
push
repnz
fidivrs
into
mov
aas
pop
lret
jg
mov
call
jo
add
out
shl
cli
leave
dec
or
ror
scas
xor
xor
or
mov
in
icebp
sbb
inc
dec
rol
sub
mov
xor
loopne
jg
dec
fldl
adc
imul
movb
add
lahf
sub
xchg
lods
pop
cmp
push
or
adc
loopne
xchg
push
aaa
mov
pop
imul
out
into
adc
mov
jne
pop
cmp
outsl
xchg
inc
sub
ja
mov
push
add
cmp
insb
and
les
pusha
int
fcoml
sub
inc
adc
cld
mov
aam
fs
into
sbb
mov
or
mov
dec
pop
cld
cmp
aas
and
movsl
mov
mov
rcrl
ret
test
ret
sub
and
loope
shrb
gs
stc
mov
jnp
outsl
mov
pop
insb
xchg
subl
push
mov
xadd
mov
push
movsl
and
not
mov
inc
imul
hlt
jp
xchg
mov
cmpsl
lods
sub
jno
andb
xor
jne
bound
inc
sub
cmpsb
dec
hlt
cmpsl
mov
adc
xchg
mov
sbb
in
movsb
dec
adc
out
mov
sub
xor
sub
lret
jle
add
enter
rcrl
movsb
out
aad
addl
jnp
hlt
call
xchg
cwtl
sarl
or
aaa
in
xor
inc
cmp
or
data16
ds
sbb
outsb
in
fimull
adc
pop
cmp
cli
push
or
out
mov
jae
lcall
int3
pushw
ret
adc
popa
addr16
in
cwtl
jle
inc
sub
and
js
mov
repz
sarb
push
lock
into
idivl
std
and
loop
jle
inc
jo
sbb
lret
ljmp
dec
adc
mov
cmp
ret
fucomi
cmc
xchg
insl
push
jge
push
fcoml
rorb
xchg
mov
clc
hlt
lock
sub
mov
out
cld
in
dec
mov
lods
xor
loopne
fidivrl
jo
push
push
in
mov
icebp
mov
fisubl
adc
jecxz
fdivs
in
mov
iret
push
pusha
lods
mov
setno
data16
sbb
in
clc
shrl
insl
lret
dec
cmp
mov
dec
enter
lret
shrl
xor
ret
xchg
adc
ljmp
push
in
push
sbbb
jmp
in
xorb
dec
xchg
mov
sub
adc
js
mov
xor
add
cmpsb
adc
adc
inc
cwtl
js
call
std
sub
pop
xchg
dec
lods
stc
repnz
popa
push
bound
iret
lods
aam
std
sub
aaa
fmuls
jne
jne
hlt
pop
aam
jbe
pmaxub
add
sub
jl
jp
jo
or
shr
sbb
negl
mov
mov
fmull
js
xor
fmuls
pop
sbb
push
dec
adc
aam
push
sahf
pop
lahf
jmp
sub
in
fstpt
cmp
outsb
lahf
or
push
xor
mov
xchg
mov
div
jno
mov
xor
pusha
imul
mov
cs
sti
push
mov
ret
push
dec
or
and
out
mov
dec
xchg
mov
fimull
xlat
mov
stos
movsb
mov
pop
insl
add
jae
test
outsl
hlt
ret
cwtl
cmpsl
inc
test
dec
xchg
test
adcb
adc
imul
pusha
adc
sbb
pop
inc
adc
xor
jmp
cltd
fstpl
pusha
adc
les
adc
cvtps2pi
cli
push
jns
push
lods
xchg
subb
popf
cli
or
or
mov
jecxz
lahf
xchg
arpl
xchg
hlt
nop
xchg
es
mov
decb
mov
xor
gs
xor
je
sub
inc
push
lret
cmpsl
nop
fcmovnbe
sub
inc
pop
cli
in
iret
sub
ficoml
fdivs
ret
lds
hlt
mov
push
bound
out
ja
jne
sbb
call
hlt
sub
mov
add
mov
and
dec
add
arpl
scas
xor
pop
mov
and
shrl
les
ljmp
movsb
outsb
lret
pushw
mov
and
pushf
iret
nop
arpl
movsb
push
adc
push
imul
mov
cmc
mov
outsl
ret
jbe
or
scas
loopne
icebp
mov
inc
lea
lret
pushf
jne
roll
out
inc
iret
jne
xchg
sbb
loop
lods
mov
cltd
jo
jecxz
mov
fsub
int3
movsb
mov
cmp
out
pop
cmp
mov
inc
fidivrl
sbb
push
je
mov
and
mov
dec
shrb
je
hlt
add
jbe
push
stos
xchg
outsl
imull
xor
adc
push
icebp
xor
pop
push
sahf
jp
jo
inc
cmp
lcall
daa
aam
mov
test
outsb
push
icebp
mov
enter
aas
fs
stc
jne
stos
mov
paddd
ret
popl
mov
lahf
add
xchg
push
cmpb
push
loopne
cld
pop
repz
pop
mov
aaa
lods
clc
add
outsb
ficoms
scas
movaps
mov
data16
rcl
icebp
dec
jo
mov
lock
adc
xchg
cld
cli
pop
mov
andl
or
jnp
cld
ret
insb
xor
inc
push
pop
add
fisttpl
sub
movsl
sub
fildl
es
and
in
movsl
mov
icebp
in
add
push
mov
push
push
mov
mov
cltd
mov
jns
jl
lahf
filds
push
mov
or
inc
or
sbb
xor
mov
inc
or
jne
inc
inc
cmp
in
jl
inc
fcompl
dec
jb
sub
popa
xchg
push
dec
out
push
jp
xchg
aam
xchg
adc
sub
jp
cld
add
jge
mov
dec
mov
sti
shlb
pop
jl
sub
jp
pop
pop
out
mov
enter
mov
and
cmpsb
inc
sarb
test
or
inc
jnp
jns
and
xchg
rcrl
inc
sbb
pop
mov
cmp
test
or
push
addr16
aaa
xor
dec
fisubl
push
mov
cmp
rorl
adc
xor
jg
pop
stos
push
out
es
sti
mov
fwait
mov
add
push
mov
out
jg
push
dec
sub
divl
loope
cmp
cwtl
mov
lock
sahf
cwtl
cmp
lea
into
loop
lret
pop
fistl
xchg
sahf
lret
movsl
inc
cmp
jns
mov
cmpsb
mov
xlat
popf
push
lahf
cld
call
ret
fdivrs
dec
mov
cmp
ret
std
push
add
xchg
jmp
mov
out
push
jmp
mov
mov
mov
cmp
test
leave
stos
test
lcall
sub
mov
dec
movsl
add
test
inc
nop
mov
sbb
cmpsb
sti
inc
loope
dec
dec
inc
lds
enter
mov
loope
imul
dec
pop
jno
pop
fidivs
pop
adc
int3
sti
psllq
dec
push
sub
dec
cmp
xor
push
ja
shll
inc
pop
cwtl
push
xchg
ljmp
pop
loop
push
lods
pusha
pop
cmp
std
popf
fucom
mov
xor
cmp
daa
mov
pop
fdivrp
jno
cmp
jecxz
adc
arpl
pop
sarb
cmpsl
adc
lds
jns
movsb
adc
std
in
mov
pop
aam
outsl
pcmpgtb
xor
xchg
xchg
cmp
ss
in
movsl
idivb
or
dec
jge
fwait
xor
arpl
mov
shll
shrd
xlat
orl
jbe
pop
lea
loope
jae
aam
push
aas
scas
gs
out
ret
inc
daa
push
out
or
cwtl
lock
fstps
in
dec
insb
sub
push
push
push
sbb
mov
and
aam
mov
outsl
add
pop
xchg
inc
mov
filds
lock
arpl
push
jmp
lods
add
mov
les
fdivrs
jno
outsb
fadd
cmp
movsb
mov
add
sahf
xor
dec
clc
inc
mov
rcll
jo
ficoms
jo
hlt
jno
jmp
sub
int3
in
dec
inc
lods
push
or
lret
add
pop
dec
fsubr
xchg
and
imul
lcall
or
ret
adc
leave
out
and
fldcw
dec
inc
rolb
es
ror
sub
xchg
mov
aaa
aad
sarb
arpl
xchg
inc
add
daa
and
and
or
scas
mov
fs
pop
add
popf
xchg
inc
push
in
sub
xor
push
decb
dec
dec
mov
mov
adc
xor
shrl
cltd
inc
stos
icebp
in
fidivl
cmp
dec
sub
jb
call
or
lret
pop
inc
std
jno
pop
clc
xor
inc
sbb
cmpsb
movsl
stc
gs
push
addb
cmpsl
fnsave
cmp
jno
into
mov
xchg
jnp
lock
repz
mull
leave
scas
add
testl
ffree
xor
push
xor
pop
xchg
xor
rorb
mov
loope
outsb
mov
jecxz
cli
cmpsb
loope
add
hlt
out
repnz
xchg
outsl
dec
cs
push
repnz
push
adc
mov
jb
call
jae
pop
je
pop
adc
imul
jo
mov
stos
inc
jle
lods
into
or
sti
cmp
sbb
xor
sahf
xchg
sbb
xchg
push
lret
and
inc
jmp
sub
dec
mov
mov
inc
stc
xor
shll
xor
daa
inc
shll
cltd
xchg
fs
mov
or
dec
fisttpl
ret
inc
jl
hlt
and
cmp
sub
push
push
xchg
pop
arpl
call
movsb
pop
jg
mov
cmp
mov
mov
popa
adc
ljmp
jns
in
xor
iret
fcmove
scas
aaa
or
mov
inc
jmp
bound
add
ud0
insl
aam
loop
call
cltd
inc
cmp
lcall
js
xchg
cmpsb
fwait
push
mov
ror
out
mov
das
mov
jno
pop
xchg
mov
aaa
in
aas
xchg
pusha
roll
cs
pop
in
xchg
int3
and
push
aad
outsb
jge
sbbl
or
push
fistl
adc
push
dec
ret
xchg
ljmp
xchg
in
mov
jo
outsl
jae
out
sbb
jns
inc
push
jb
test
xor
dec
pop
push
in
xchg
lcall
into
gs
pop
repnz
pop
das
lock
fwait
shl
lock
jne
or
mov
adc
push
mov
shl
jo
mov
dec
stc
xor
adc
and
movsl
ret
insb
addr16
imul
or
scas
mov
into
out
cmpsl
popa
sbb
cli
outsl
rcrl
dec
jle
fnstcw
mov
loope
call
lcall
int
mov
popf
xor
inc
popl
pop
sub
mov
jecxz
xor
ret
lods
outsb
loopne
cli
adc
jb
ja
leave
jmp
shll
xlat
mov
push
roll
and
xchg
pop
or
imul
mov
addb
sbb
xor
pop
xor
or
mov
or
mov
inc
aad
push
mov
sar
dec
mov
inc
push
loop
fwait
mov
dec
pop
xor
shlb
or
cmp
mov
xor
pop
lret
ds
add
or
adc
clc
jo
lret
stc
and
fldt
xchg
rcrl
enter
popl
sahf
popf
push
jae
push
addr16
jmp
stc
mov
or
sbb
xchg
add
es
jp
xchg
nop
push
jle
cld
shll
aad
add
jp
dec
rclb
jo
cli
or
cli
mov
roll
push
testb
dec
mov
add
jne
popa
pushf
testl
xor
nop
divl
xchg
pop
xlat
cmp
ret
mov
sarb
mov
push
subl
movl
mov
push
cli
xor
aas
pop
hlt
negl
mov
in
daa
add
sbb
mov
adc
imul
and
fsubrs
mov
test
push
jno
ss
add
mov
pusha
pop
out
pop
xor
stc
xor
adc
ljmp
mov
xchg
xchg
repnz
hlt
xchg
push
lret
pop
push
ret
or
jg
mov
scas
push
cmp
jl
jne
stos
jnp
adc
cwtl
xor
and
leave
push
dec
out
rcrb
dec
iret
imul
stos
sbbb
xor
dec
lahf
in
push
into
mov
es
aaa
pop
dec
in
aam
ret
mov
lock
sahf
push
aam
movl
cmp
mov
shl
arpl
nop
stc
xor
outsb
mov
int
mov
xor
pop
pop
test
cmp
add
inc
cli
mov
icebp
cmpl
test
add
enter
sub
xlat
mov
in
push
mov
inc
scas
in
adc
popa
dec
cmp
pop
mov
xchg
add
or
mov
inc
mov
xlat
les
ja
outsl
xor
bswap
lock
fdivs
into
bound
sbb
adc
outsl
pop
inc
daa
test
arpl
mov
imul
out
sbb
fsubr
nop
xor
mov
xchg
loope
iret
pop
xchg
xchg
hlt
pop
scas
mov
xor
test
mov
sub
cld
data16
mov
out
imulb
data16
adc
inc
test
inc
jg
in
das
icebp
push
int3
insl
adc
ja
mov
jl
adc
js
pushf
add
cmp
push
xchg
mov
jbe
nop
sbb
fidivrl
adc
pushl
daa
lods
in
adc
and
mov
imul
movsl
mov
push
push
jae
call
xor
jne
mov
popa
imull
sbbl
in
or
mov
xchg
xchg
repnz
mov
add
jb
mov
xchg
icebp
shlb
iret
push
nop
mov
mov
dec
jo
mov
xchg
push
inc
add
inc
push
in
test
in
push
test
cmp
and
sbb
loop
pop
push
lcall
jbe
jae
call
clc
test
pop
cmp
rcrb
cs
call
sahf
jp
sbb
addr16
dec
jge
iret
out
inc
shr
xor
or
pop
shlb
lock
jae
dec
je
notl
int3
cmpb
test
cmc
xor
lret
aas
mov
in
cmp
mov
ljmp
pop
mov
mov
ja
ljmp
xchg
aam
jb
lods
pop
mull
and
cld
pop
and
popa
arpl
xchg
mov
rolb
iret
negb
in
mov
push
stc
xor
pop
xor
pop
mov
dec
mov
jle
mov
push
inc
rol
ds
pusha
loope
scas
les
mov
imul
into
les
add
pop
imull
fwait
sbb
jle
popf
imul
paddb
jns
outsb
or
scas
dec
xlat
imul
or
pop
push
lahf
sbb
mov
imul
add
mov
pop
add
mov
ja
call
incb
fwait
out
xchg
adc
inc
pop
adc
das
cmc
fcmovu
push
dec
ret
in
jg
outsb
mov
out
xchg
sub
and
rorb
adc
cltd
scas
in
cmpsb
into
cs
dec
lcall
xor
movsb
mov
jae
xchg
cmp
push
jg
imul
and
mov
cmp
push
and
aaa
imul
sbb
test
cmpl
or
add
push
sub
lods
rcrb
or
mov
das
shll
aas
cld
data16
pop
scas
jl
dec
sahf
pop
sbb
jno
aaa
rcl
mov
repz
or
loopne
pop
pop
imul
sbb
out
mov
sbb
dec
mov
stos
fdivrs
pop
cmp
lods
mov
aaa
inc
add
adc
cmp
cld
movsb
das
mov
imul
push
out
ja
testl
dec
orl
cwtl
insb
mov
push
pop
loope
jle
mov
imul
mov
lahf
outsl
adc
adc
push
pushf
push
hlt
es
in
push
fcompl
sub
test
cmp
lock
lcall
sub
jb
fsub
sbb
rorb
sub
testb
pop
fcoms
in
mov
push
sub
mov
dec
inc
sub
xchg
push
ja
imul
cli
bound
lahf
inc
std
adc
clc
adc
or
scas
pop
jl
and
outsl
mov
out
sub
xchg
rcrb
out
fisttpll
aaa
popa
xor
rol
nop
xor
fdivrl
sub
xor
ds
push
inc
xchg
xchg
inc
adc
repz
lea
shll
out
arpl
mov
cwtl
push
loope
pusha
xchg
dec
add
idivb
cmp
out
push
icebp
ds
lds
mov
mov
sub
xchg
pushl
xlat
inc
pop
or
add
mov
jmp
jb
mov
addr16
and
lret
jp
enter
push
mov
inc
std
pop
sbb
mov
pop
cmp
cmpsl
sbb
xchg
aas
xor
aas
divl
cmpsl
fcompp
mov
lods
lahf
aas
fldl
mov
and
popa
inc
aas
pop
and
aam
inc
pop
sahf
into
inc
mov
adc
push
aad
dec
mov
int3
jecxz
or
lahf
or
mov
jns
aas
sbb
loopne
test
add
inc
shrl
mov
fists
or
mov
shrl
dec
clc
lds
dec
test
pop
inc
out
cmc
sub
std
pop
sbb
repz
pop
in
adc
sub
imul
js
dec
sbb
pop
xchg
notl
mov
jbe
and
inc
pop
idiv
mov
xchg
jecxz
out
pop
in
inc
daa
das
iret
xor
xorl
movsb
cltd
dec
int
sbb
dec
mov
mov
cwtl
xor
mov
cld
push
jle
rol
shrb
xlat
pop
sub
mov
outsb
adc
push
in
mov
imul
xor
mov
loop
inc
in
repz
mov
cmpsl
xchg
ljmp
test
push
pop
rcl
lds
inc
jg
bnd
push
xchg
int3
mov
das
pop
mov
aaa
gs
and
cltd
bnd
sbb
inc
xor
fs
mov
mov
out
push
in
lcall
jno
pop
or
push
add
mov
pop
out
inc
push
push
in
pop
push
mov
ret
mov
pushf
xchg
gs
mov
add
dec
pop
xchg
sub
scas
xchg
fstps
shll
cli
adc
into
in
adc
repnz
leave
les
fwait
ljmp
mov
pushf
loopne
xor
jg
adc
lods
pop
in
outsl
loopne
inc
in
pop
dec
fidivrs
sub
cld
out
pop
cwtl
or
xor
mov
add
imul
fistpll
mov
fmul
mov
jl
xchg
pop
addr16
sbb
pushf
jp
dec
movsb
mov
les
enter
mov
add
js
jno
add
nop
or
lcall
sub
adc
call
cli
inc
cwtl
fsubs
mov
mov
movsl
gs
dec
and
push
or
xchg
andb
push
mov
movsl
push
push
mov
inc
push
jp
pop
jns
sub
int
insl
xchg
mov
push
insb
daa
cwtl
adcl
sub
inc
or
sar
cld
mov
enter
lods
clc
jns
cli
jle
push
or
ss
cmpsl
push
inc
jno
mov
cmp
push
popf
xor
xchg
mov
ljmp
adc
jmp
dec
or
cmpsb
jo
test
fisttpl
lds
push
out
scas
cmp
lods
dec
movsl
dec
out
jge
jl
fstl
sbb
jnp
xchg
jbe
adc
test
jmp
and
out
mov
push
and
mov
pop
roll
sbb
dec
mov
aam
cmc
jae
lcall
dec
cli
mov
mov
or
or
push
jo
mov
adc
mov
sbb
notl
kmovw
imul
inc
pop
mov
sub
jns
lock
subl
or
pop
fnstenv
mov
ljmp
insb
inc
push
jne
sbb
inc
push
pop
hlt
lea
inc
in
push
je
jmp
cltd
pop
push
dec
outsl
jne
cli
fwait
pop
add
jb
xchg
scas
push
cmp
xor
popf
and
xor
sub
in
testl
sub
and
std
dec
mov
jl
add
cmc
jb
mov
test
pop
insb
mov
add
cmp
repnz
inc
orl
idivb
push
jecxz
stos
fisttps
pop
xchg
add
cs
cmp
fsubrl
or
or
pop
inc
mov
xchg
into
dec
jns
sti
jmp
xchg
loop
xor
je
xchg
cmp
jle
mov
jnp
nop
sahf
sub
mov
outsl
popf
xorb
stos
jg
fistl
xor
or
sbbb
std
xor
mov
lret
cmpsl
icebp
mov
sub
and
sahf
or
stc
push
fmuls
jb
mov
mov
out
stos
scas
dec
mov
test
push
mov
mov
data16
sahf
xchg
mov
inc
insl
xchg
std
out
xchg
pop
or
cmpsb
outsb
lock
call
stos
mov
mov
fldcw
mov
adcl
pop
stos
and
and
sarl
cmp
add
les
cmpsb
in
lcall
adc
cli
scas
cs
cmp
inc
mov
shrl
push
cmc
xor
jo
pop
pop
ss
sbb
imul
add
add
cmp
jbe
mov
andb
mov
lret
fstps
outsb
ds
push
jno
inc
xchg
mov
loop
xlat
mov
shl
xchg
movsb
stos
int
outsb
mov
xor
icebp
icebp
icebp
mov
jns
jp
loopne
pop
sarl
jmp
ja
xchg
cwtl
icebp
jb
push
and
rolb
mov
cmp
sbb
sub
shrb
aas
mov
fsts
aam
shll
xlat
mov
add
aaa
inc
pop
mov
scas
sbb
mov
bswap
cld
pop
pop
mov
jmp
test
mov
mov
fwait
popf
cltd
ss
sbb
and
xor
les
mov
xchg
push
sbb
outsb
icebp
lds
jo
jmp
mov
cmp
dec
inc
popf
add
sub
test
mov
ret
mov
fucomp
sbb
pop
xchg
icebp
jo
sbb
jo
ljmp
fmuls
cmp
cmp
mov
and
fstps
mov
fiadds
sbb
jle
and
mov
sahf
dec
xor
and
shr
xor
jns
pop
lds
xchg
mov
xchg
arpl
pushf
adc
xchg
cmp
dec
push
sub
pop
jne
popa
sbb
stos
aas
icebp
ds
pop
jecxz
add
jge
movsl
in
sub
dec
inc
orl
and
lcall
cmp
rcrl
fmulp
testl
in
data16
push
aas
test
leave
adc
lret
clc
ds
jne
rolb
rolb
inc
js
repz
js
aaa
mov
icebp
loope
jg
xor
subl
jb
mov
stc
in
mov
pop
sarb
jae
jmp
jnp
pop
jecxz
lcall
shr
mov
out
inc
test
das
mov
notl
fstpt
adc
call
cli
cs
adc
dec
out
adc
jecxz
push
pop
pop
popf
iret
sub
mov
in
loopne
add
hlt
jo
dec
pop
popl
mov
mov
insl
adc
mov
daa
in
psubsb
lret
mov
fwait
inc
scas
iret
xor
xor
jae
outsl
push
jmp
mov
pusha
rcll
stos
test
inc
test
cmp
mov
dec
loopne
mov
or
inc
push
add
jge
adc
imul
ja
or
sub
pop
adc
adc
cmp
inc
mov
mov
in
push
and
xchg
int
imul
mov
inc
or
movsb
sub
pop
jl
flds
mov
sbb
fildl
or
xor
sub
cmc
jo
popf
into
xor
fnstsw
add
mov
addr16
addr16
pop
cltd
push
push
movsb
popa
je
div
xor
mov
mov
or
ds
gs
fistpl
fadds
imul
faddl
adc
jae
push
lods
outsb
jns
mov
sbb
push
mov
mov
pushf
pop
mov
std
daa
out
pop
orl
outsl
inc
pop
rorl
test
out
xchg
cwtl
imul
add
repnz
outsl
jmp
push
adc
jp
std
mov
pop
adc
jp
aad
fildl
andb
arpl
aad
push
out
dec
aad
xchg
sahf
sbb
push
xchg
and
adc
ljmp
decl
stc
loopne
fidivrs
enter
mov
cmp
sahf
or
xchg
lret
lahf
cmp
mov
idiv
xchg
mov
mov
sub
daa
lret
xchg
ljmp
push
rorl
into
nop
jge
pop
cltd
repnz
xchg
mov
subb
mov
jbe
push
iret
pop
repnz
nop
aam
jae
sub
jo
mov
int3
cld
test
in
adc
mov
or
sub
outsl
xorb
shrb
mull
or
iret
andl
jns
dec
int3
dec
lahf
and
adc
cmp
jnp
inc
xor
aaa
ja
je
mov
mov
mov
int3
inc
iret
xchg
sahf
movups
dec
ret
xor
sti
add
inc
and
divl
imul
fs
jo
fidivrl
addb
mov
ljmp
cmpsb
jae
iret
xor
pop
rcll
jecxz
fisubl
or
call
cltd
int
push
lret
inc
or
es
and
in
jp
fcomps
std
test
es
or
inc
ja
popa
pop
popf
add
jl
dec
cmp
out
ss
push
mov
sbb
and
push
loope
shlb
call
xor
pop
aam
lahf
aas
std
addr16
es
cmp
mov
in
pop
mov
loop
stos
fdivs
or
or
shll
push
push
popl
test
lods
or
mov
sbb
test
mov
lods
in
je
fwait
add
loope
jmp
pop
fsubrl
sub
jg
iret
xorb
aas
mov
in
inc
das
push
xchg
pop
shll
adc
shll
hlt
add
cwtl
mov
push
and
mov
in
mov
in
xor
popa
cmc
mov
xchg
cs
ss
scas
xchg
lea
in
or
shll
sbb
mov
ja
and
cmp
inc
sbb
pusha
aad
ja
jo
inc
push
incl
inc
lret
out
ret
lea
mov
cmp
xor
or
loop
lods
xchg
cmp
xchg
faddp
into
jo
cltd
pushf
sbb
inc
data16
mov
rcr
inc
sbb
fcmovnu
jo
dec
inc
cwtl
mov
push
and
cmp
out
int
xchg
fstpl
out
cmc
and
and
pop
ljmp
insl
ret
add
popf
fdivrp
fisttpll
or
mov
int3
imulb
jo
test
jae
adc
push
add
dec
jnp
xchg
outsl
and
pop
add
jmp
cmpsb
xchg
aad
cmp
add
jg
pop
mov
js
in
cmp
push
or
iret
stos
test
inc
in
push
mov
sub
xchg
adc
or
sbb
aam
or
inc
push
mov
cltd
mov
icebp
loopne
arpl
pushf
adc
insl
jecxz
mov
divb
es
push
lahf
jle
sarb
movsl
lods
rclb
addb
ds
les
adc
add
icebp
sub
adc
adc
sbb
jmp
ds
push
or
mov
dec
inc
ret
fwait
out
je
mov
inc
mov
push
std
test
sbb
push
stc
stc
test
jle
shll
cmp
shl
pop
push
sbb
orb
fs
outsb
mov
fbstp
sbb
pop
adc
sbb
mov
push
add
scas
sub
jo
repz
loope
pop
pop
sub
cmpsb
aad
xor
and
sbb
pop
mov
es
test
mov
das
mov
add
mov
dec
mov
xor
inc
push
test
sbbl
hlt
pusha
int
test
stc
mov
movsb
sbb
adc
fistpl
flds
mov
out
sbb
daa
sbb
push
push
mov
addr16
mov
in
mov
arpl
mov
push
aaa
mov
adc
lahf
ja
mov
rcl
dec
shll
jecxz
xor
test
loopne
push
xchg
std
frstor
jmp
data16
lahf
je
and
sbb
inc
test
aam
mov
lods
xchg
mov
push
mov
clc
sbb
cmpsl
in
lret
mov
in
test
imul
sbb
sub
rclb
inc
icebp
push
inc
ds
add
rcll
push
sbb
inc
iret
pop
jne
xchg
cmp
sahf
subl
or
mov
push
mov
movsl
and
bound
mov
cld
fildl
inc
shr
sbb
movsl
xchg
dec
das
push
subb
mov
loope
cld
test
pushf
negb
and
ficoml
jo
ja
cli
aam
pop
add
adcl
sub
add
lods
xlat
add
jecxz
pop
ss
std
xor
aad
xor
inc
mov
ljmp
jbe
or
iret
xchg
in
mov
xchg
jae
addr16
dec
mov
in
dec
sub
mov
into
xchg
jnp
jo
mov
out
mov
xchg
imul
popf
add
cmp
cld
daa
pop
std
push
xchg
mov
int
xchg
sub
jge
stos
or
int3
cmp
cs
test
std
mov
push
iret
or
cmpsb
loope
or
sar
shlb
xorl
cs
test
addr16
les
sub
imul
loop
dec
jg
xor
out
cmp
push
mov
cmp
outsl
sub
mov
push
arpl
jecxz
xlat
pop
insl
push
insl
jae
xor
push
in
adc
mov
jo
scas
xor
or
jo
push
add
xlat
and
scas
pop
cmovb
jno
xor
mov
out
icebp
mov
pop
dec
cmp
sub
jg
mov
sub
push
test
insl
out
adc
fimuls
or
xor
test
loopne
xlat
js
test
imul
gs
add
push
cltd
pop
bound
or
sub
pop
and
or
pop
test
jmp
enter
push
push
jge
pop
icebp
lcall
add
or
cld
in
pop
outsl
aaa
cmpl
adc
xchg
bound
dec
cli
adc
and
xor
push
and
into
cmc
cmp
sub
mov
add
pop
jge
repz
or
fsts
cltd
je
pop
out
jle
test
enter
sbb
inc
out
daa
pop
out
mov
pop
dec
imul
lcall
sub
loopne
adc
sbb
dec
popa
fstps
xor
scas
mov
cmp
add
ja
ret
adc
popf
push
dec
jg
out
adc
mov
sub
xchg
cmp
int
xor
inc
fs
dec
xor
test
cmp
jae,pn
outsb
inc
gs
and
xor
inc
loope
mov
jge
in
sbb
push
add
fsubs
xor
jbe
adc
xor
jnp
cld
scas
jg
ja
loope
clc
or
cmp
lock
hlt
jle
or
dec
mov
and
dec
dec
lds
dec
loope
pop
mov
push
push
cmp
mov
in
data16
cwtl
data16
push
pop
imul
dec
add
aam
sub
and
in
xchg
leave
cli
sbb
push
mov
testl
inc
pop
lock
out
dec
or
fwait
test
aaa
ret
fsubl
inc
loopne
lahf
or
jmp
inc
into
movl
cld
sbb
cmp
cmp
ficompl
outsb
dec
insb
mov
cmp
cmp
repz
xor
lgs
lret
jmp
cmp
sub
push
jb
sub
jg
sbb
sub
jecxz,pn
mov
sbb
push
inc
mov
mov
out
and
xchg
push
rsm
add
fs
popf
aad
movsl
sarl
push
pop
loope
add
dec
incb
jbe
cld
jge
gs
leave
mov
iret
mov
aad
cltd
inc
imul
mov
dec
sarb
jl
push
mov
xor
dec
and
push
nop
or
in
mov
aad
xchg
lahf
daa
enter
and
fwait
in
xchg
imul
fisubrl
sbb
jne
pop
scas
add
push
notb
mov
push
rorl
dec
addr16
rclb
jnp
jecxz
xchg
in
es
push
aas
ja
mov
mov
cltd
imul
mov
xor
aas
push
push
sbb
cltd
push
in
adc
loop
jmp
inc
clc
adc
decb
mov
lea
testl
fadds
in
inc
out
ja
sarb
enter
lahf
sbb
daa
mov
sub
xlat
stos
inc
je
mov
jle
clc
push
sub
xor
and
test
lcall
inc
mov
js
sub
push
out
jp
mov
bound
pop
inc
jo
pushf
push
ds
fldenv
sub
sti
xchg
subb
xchg
pop
dec
mov
xor
dec
sbb
pushf
xor
mov
jne
out
mov
xorb
out
dec
sub
inc
loop
or
jae,pn
jl
enter
in
cmp
shll
test
fwait
lcall
jnp
sbb
mov
mov
jb
add
hlt
or
pop
mov
jo
mov
dec
jae
xchg
jnp
mov
xlat
shrb
aam
les
xlat
hlt
mov
out
test
rcrb
mov
das
int3
int
ss
iret
fcmovnu
in
pop
pop
hlt
xlat
mov
sbb
fnstenv
mov
or
rcrb
in
push
jecxz
stc
xchg
shrb
test
jns
xchg
jmp
adc
mov
and
xor
adc
enter
pop
pop
addl
movsl
fnsave
ret
cwtl
add
out
out
jne
push
jg
daa
xor
adc
or
push
xor
cmp
ss
loope
cmpb
jge
mov
cmp
subl
cltd
xlat
loopne
xchg
lds
jb
mov
test
push
call
mov
sbb
xor
pop
aaa
inc
xor
dec
dec
mov
test
adc
leave
cwtl
aad
iret
adc
mov
and
xor
jp
sahf
mov
outsl
mov
and
sub
arpl
jmp
scas
push
in
nop
testb
roll
adc
add
lods
xchg
cmp
lock
jl
pop
cld
pop
mov
jne
aas
or
test
adc
lods
lock
mov
jns
rcl
mov
mov
fcmovu
push
xor
push
in
jb
mov
mov
xchg
shrl
or
test
stos
and
arpl
pop
in
pop
daa
test
or
sahf
outsl
repnz
and
xor
mov
scas
outsb
sub
mov
mov
test
nop
addr16
mov
or
fs
icebp
jae
cmpl
inc
dec
add
and
push
rcl
xchg
pop
int3
jbe
mov
fsubrl
and
test
xchg
fisubs
push
cmp
xor
xor
out
shrb
and
sti
imul
outsb
jne
xor
aaa
mov
sub
mov
sahf
in
loopne
shl
aas
fsubl
inc
test
jmp
ja
pop
test
mov
mov
xor
or
mov
cmpsl
gs
out
mov
lods
loopne
lahf
push
icebp
cmp
pop
inc
add
add
jge
mov
sub
mov
or
in
jbe
hlt
sbb
xor
xchg
dec
mov
and
xor
inc
push
icebp
mov
imul
cmc
mov
popf
mov
sub
addl
add
ficoml
jle
js
or
fbstp
xor
mov
or
loopne
push
fimuls
fdivs
mov
add
adc
bound
test
xchg
pop
cmp
fwait
jl
test
dec
dec
scas
mov
mov
pop
push
sub
mov
mov
sub
cli
xor
test
imul
mov
dec
in
and
inc
mov
push
sub
into
push
lods
cmp
xor
daa
mov
movsl
sti
jb
int3
sub
jp
sbb
clc
jp
or
hlt
rcrl
or
push
jmp
cmp
cwtl
test
mov
pop
cmp
ficoms
mov
mov
push
jns
add
cwtl
push
jmp
fildl
cli
add
dec
data16
dec
sub
mov
xor
mov
imul
push
popf
sbb
adc
inc
sarl
in
or
fidivrs
pop
jge
loop
mulb
cli
xor
push
cmp
outsb
mov
jb
mov
mov
xor
sbb
pop
mov
push
xlat
adc
sbb
fimull
loop
out
outsb
jmp
xchg
or
or
movsl
adc
ljmp
and
adc
imull
in
pop
dec
sub
dec
or
sti
fsts
cmpsb
lea
pusha
push
mov
sbb
add
popw
loopne
call
stc
jb
arpl
in
in
cltd
jp
mov
mov
and
mov
mov
push
stc
out
cmpsl
jne
xchg
xchg
iret
outsb
lcall
dec
cmpsb
mov
in
fisubl
popf
mov
popa
repz
dec
loop
add
inc
scas
test
pop
dec
lcall
pop
push
push
cld
jecxz
scas
lahf
jbe
and
adc
in
dec
push
hlt
mov
sbb
negb
add
insl
sti
or
push
pop
rorb
imul
cmp
hlt
stc
and
shll
cld
push
or
je
loop
in
sbb
cmc
stos
out
fstpl
lods
dec
xchg
sub
push
filds
sbb
and
out
add
test
mov
cmp
mov
sub
fadd
fistl
gs
inc
into
jecxz
mov
insb
outsl
test
sbbb
fcmovne
shll
adc
ds
hlt
or
mov
aam
mov
in
push
or
dec
and
cltd
ss
pop
add
push
gs
mov
popa
mov
inc
or
or
and
orw
into
call
in
adc
call
sbb
stc
mov
je
xor
mov
or
push
enter
repnz
cmpsb
sub
pop
sbb
imul
dec
inc
ror
leave
dec
test
add
shlb
outsl
push
or
jbe
rorl
jo
test
out
cmp
or
incb
adc
inc
aas
and
in
dec
cmpsl
mov
dec
jg
fwait
and
add
xor
inc
inc
dec
shll
in
notb
nop
daa
jmp
cmpl
in
sbb
lods
mov
fistpl
dec
adc
rclb
sbbb
sub
fbld
mov
dec
scas
ss
xor
mov
or
repnz
mov
sub
loop
xchg
bound
sub
sbb
pusha
jns
sbb
push
out
in
fwait
scas
inc
icebp
sbb
xor
jno
push
stc
in
fadd
popf
dec
and
jg
test
aaa
jge
jae
push
mov
jb
and
adc
xor
mov
outsb
test
cmp
mov
rorl
mov
cmc
jne
sarl
adc
push
ret
addr16
cmc
cs
stos
mov
xorl
in
pushf
mov
inc
imul
pop
lock
xchg
fsubrs
cmpsb
xchg
aad
xchg
cmp
loope
jg
jmp
fisubrs
push
out
jl
mov
lds
gs
iret
xor
ret
sbbl
int3
or
outsb
bound
sub
xchg
jne
or
xchg
dec
xchg
xor
dec
push
in
lods
scas
add
mov
in
dec
pop
cmpsl
es
imul
incl
xchg
shrd
mov
sub
aam
jle
sbb
inc
jp
dec
xchg
or
mov
jbe
xchg
cmp
add
cs
mov
es
xor
pushf
sbb
out
and
std
fnstcw
mov
push
addr16
jnp
movsl
push
jae
push
add
sbb
pusha
arpl
into
sbb
cmc
mov
jns
repz
mov
xchg
inc
cmpsl
inc
mov
cmp
and
pop
js
dec
jle
add
aam
adc
cmc
xor
mov
lret
jnp
sbb
jno
popf
push
inc
xor
js
push
aaa
pop
icebp
cmc
lcall
cmp
fcomps
pop
ds
and
aam
xchg
pop
repnz
xchg
cltd
pop
je
cs
daa
or
stos
dec
mov
xor
pop
dec
out
sub
add
aas
push
fisubl
pushl
aad
xlat
jmp
movsl
push
sti
adc
insl
repnz
jge
test
xchg
or
aam
jecxz
movsl
subb
xchg
push
mov
mov
cli
push
adcl
bound
rcrl
fidivl
mov
mov
lds
pushf
orl
popf
dec
pop
pop
mov
xchg
and
dec
push
pop
not
icebp
inc
adc
out
scas
rcll
ss
mov
or
js
inc
sti
test
dec
and
or
adc
daa
mov
scas
push
in
or
sub
xor
lea
ret
mov
iret
stc
fsubp
ss
int3
cmp
jb
movsb
test
xchg
bound
int
xchg
pop
pop
sarb
aas
push
cmp
jo
mull
xchg
pop
in
add
scas
mov
scas
lods
loop
insb
les
mov
insb
cmc
ficompl
adc
xor
mov
add
dec
cli
push
sub
xchg
push
jg,pn
add
adc
lret
xchg
jecxz
call
and
xchg
mov
dec
push
push
adcb
add
pop
jb
mov
and
out
mov
push
xchg
xor
js
pusha
push
lods
ret
jno
dec
fwait
add
mov
xchg
jnp
add
pushf
loop
rolb
cmp
jle
stc
mov
inc
inc
lods
das
sub
pop
xorl
add
ss
daa
pop
jbe
stos
jno
xchg
push
outsb
mov
sbb
iret
push
cmpsl
repz
notb
mov
imul
sbb
sbb
pop
mov
dec
fwait
leave
cwtl
xchg
jg
adc
popa
inc
bound
dec
je
scas
jmp
sbb
sti
add
sub
sarb
mov
jecxz
cmp
test
adc
bswap
push
out
aaa
xchg
orl
loopne
xchg
pop
ljmp
fistpl
jo
jg
pushf
sub
and
and
pop
stc
and
out
pusha
or
outsb
loope
cmp
scas
sub
mov
pop
insl
pushf
mov
stos
jge
out
aas
push
mov
adc
sub
sub
pushf
insl
adc
iret
lods
pop
xchg
popf
xchg
int3
ret
sti
mov
jecxz
xchg
nop
subb
jbe
scas
daa
push
fcmove
imul
xor
lods
lea
or
movsb
xor
and
cmp
pop
cmovp
sub
inc
arpl
stos
loopne
mov
and
aaa
push
mov
mov
mov
clc
lea
imul
stos
lcall
fadds
cmp
pushf
mov
ffreep
lret
or
enter
js
push
inc
mov
into
aad
popf
or
movsb
sti
xor
dec
int
test
jg
cs
cmpsb
inc
inc
pushf
and
sarb
test
jb
std
imul
add
aas
mov
sbb
sub
mov
mov
xor
decl
sarb
cmp
push
frstor
jno
cli
mov
mov
jmp
fstl
lret
pop
sbb
adc
out
pop
pop
mov
ret
mov
shlb
xchg
cmp
push
mov
imull
push
loope
mov
sub
imul
inc
mov
test
pusha
and
push
not
sbb
cmp
mov
and
addr16
mov
pop
or
stos
dec
inc
cld
sub
mov
insl
adc
fsubrs
imul
adc
pop
inc
inc
dec
mov
jo
les
mov
loope
adc
jl
das
shlb
into
rorb
mov
add
in
or
mov
xor
jno
or
lock
iret
add
js
inc
cli
ss
push
dec
rorb
jmp
jp
adc
mov
ret
push
out
dec
sti
jle
sbb
icebp
and
stc
adc
push
push
ds
fcmovnb
add
fcom
lds
mov
sbb
fs
popf
sub
shlb
cmp
pop
jge
jnp
lods
xor
sub
pop
mov
int3
imul
imul
andb
push
mov
mov
or
xchg
sub
and
fidivs
mov
movsl
mov
movsb
sahf
jecxz
cmp
ss
push
in
pop
out
in
sti
dec
out
mov
push
dec
scas
hlt
out
pop
fwait
cmp
adc
inc
mov
or
flds
rcll
rcrb
cmp
imul
stc
pop
xchg
insb
add
out
popf
pop
xor
loopne
outsl
mull
mov
aam
mov
mov
jb
mov
ja
mov
stos
adc
mov
sub
cmp
scas
aaa
mov
sbb
sahf
xor
mov
add
idivb
mov
int3
dec
lret
mov
pop
mov
adc
mov
int
jecxz
mov
push
jl
int
test
xchg
inc
insl
imul
pop
push
jg
or
mov
adc
add
out
adc
and
out
imul
inc
enter
es
repnz
inc
mov
fnstsw
adc
sub
pop
mov
push
xor
lahf
and
pop
ds
xor
cmp
outsl
movb
shr
outsl
cwtl
int
jbe
das
mov
aaa
sbb
sub
adc
lock
push
mov
ret
and
or
insb
iret
mov
pop
int
popa
push
cs
jg
or
mov
mov
ja
mov
jns
popf
lret
arpl
xor
sub
push
stos
mov
xchg
ss
xor
mov
xchg
dec
int3
call
pusha
push
xchg
pop
daa
ljmp
loope
jnp
sub
negl
xor
insb
xor
sub
loopne
flds
pop
lahf
pusha
adc
and
adc
fisubs
test
jp
push
pop
mov
sahf
jo
cld
scas
xchg
mov
push
pop
push
shl
sbbb
mov
dec
and
dec
stc
push
hlt
inc
cmpsb
ss
shlb
adc
pop
cmc
fwait
call
ljmp
rclb
push
scas
dec
cmp
or
jge
ret
ja
push
addl
stos
push
inc
frstor
testb
mov
or
xor
jb
jnp
aam
jg
lcall
adc
inc
jb
xchg
push
test
sub
mov
sbb
loopne
into
and
add
cltd
mov
xor
mov
fs
push
out
sbb
pop
js
xchg
and
mov
in
js
add
sbb
into
aaa
jae
mov
insl
test
out
xor
and
xchg
cmp
push
cs
pop
call
dec
xchg
sub
adc
or
sbbb
mov
mov
mov
dec
pop
test
push
xor
lock
rclw
cmovg
and
ljmp
loopne
data16
fstp
popf
test
ljmp
lock
cmp
scas
mov
push
dec
fistl
add
mov
scas
jl
inc
pop
push
lcall
dec
bnd
mov
hlt
lcall
out
ds
lret
push
in
lds
lock
xchg
insl
movsl
outsl
xor
icebp
leave
sbb
test
jne
bnd
movsb
sahf
mov
sti
push
jnp
sub
popf
mov
aam
outsb
xchg
movsl
xor
or
inc
enter
pop
dec
mov
push
je
mov
rclb
inc
push
pop
movsb
aam
xchg
jge
add
mov
inc
push
sub
xchg
gs
loope
movsl
dec
pop
fldenv
or
jb
push
mov
mov
inc
dec
adc
outsb
rcrl
push
in
xchg
pop
inc
sub
std
dec
pusha
jns
jbe
shrb
dec
mov
pusha
movsb
cmp
cmp
loope
outsb
cmp
out
cmp
lds
xchg
scas
jp
dec
loopne
cmp
insb
jle
in
sar
inc
out
lcall
or
xchg
or
insl
jge
mov
add
cmp
xchg
sub
fcompl
jmp
xor
mov
adc
mov
sbb
and
cmovno
test
shll
fnsetpm(287
add
adc
lds
sub
sub
das
fldl
dec
sub
es
push
and
dec
jno
outsb
nop
popf
sbb
pushf
push
adc
adc
mov
xor
popa
shr
jge
sti
add
in
push
fiaddl
clc
cmp
ljmp
inc
jp
out
call
push
jp
lcall
inc
mov
xchg
adc
fsubrl
lock
in
std
lret
adc
fstpt
add
outsb
sti
test
push
je
mov
pop
pop
in
xor
insb
pop
js
sub
test
stos
rorl
dec
out
xchg
adc
pop
and
orb
xchg
lea
dec
adc
push
imul
mov
int3
popf
inc
iret
sbb
push
lds
mov
push
icebp
mov
fimull
mov
popa
and
rol
push
rep
push
cmp
fmul
pushl
push
pop
ss
or
pop
mov
fucomi
jl
inc
test
xor
adc
idivb
adc
popf
xor
out
pop
sbb
ds
pop
ljmp
pop
cmpsl
and
cli
cmp
lods
mov
and
jo
mov
les
pop
cwtl
rdtsc
jp
push
push
xchg
jo
repz
test
sbbl
lods
dec
inc
faddl
in
pop
sub
pop
jno
cmpsl
and
sub
aam
loope
and
push
mov
pop
xlat
in
lret
push
inc
aam
add
dec
jne
out
aas
popa
fcom
mov
cmpsl
cmp
jb
xlat
adc
lods
push
sbbb
dec
lods
or
aaa
scas
imul
into
fwait
scas
icebp
mul
les
sahf
xor
aad
jae
jnp
pop
mov
bound
insb
int
imul
mov
jae
aad
ljmp
xlat
xor
dec
cmp
test
sbb
lret
add
in
lods
mov
fildl
push
flds
dec
dec
mov
jb
xor
sarl
cmpsb
add
dec
outsl
sbb
flds
inc
dec
inc
xchg
dec
sahf
cmpsb
out
inc
jmp
and
out
adc
clc
aam
in
fsts
insb
in
popf
sahf
sbb
xchg
xchg
icebp
jne
test
push
inc
pushl
jge
mov
jmp
outsl
bound
out
mov
mov
andb
pop
mov
fstl
aas
jp
adc
mov
repz
fdivrp
inc
lods
pop
push
or
imul
adc
int3
inc
arpl
sahf
inc
pusha
lret
cli
or
lods
push
mov
sub
and
repnz
mov
repnz
mov
ret
or
je
sbb
cwtl
sub
aad
sarl
and
mov
mov
xchg
inc
xor
dec
sub
dec
sub
sahf
ds
pop
mov
sahf
or
loope
push
mov
imul
jno
cmp
adc
jmp
das
fsubrs
xchg
mov
jbe
mov
gs
mov
repz
cmc
inc
dec
lea
pop
adc
add
cmp
test
fadds
jne
mov
jne
or
cmp
inc
in
in
shll
out
or
jae
std
mov
std
cs
aas
xchg
addr16
dec
stos
outsb
mov
inc
pop
pop
dec
daa
test
pop
aaa
pop
jp
xchg
and
push
xor
xchg
out
cmpsb
dec
dec
or
lds
fimuls
push
adc
movsb
mov
je
jno
ss
xor
les
lds
subb
stos
inc
push
xchg
mov
cs
pop
mov
pop
fcomps
in
xchg
cmp
pop
and
mov
dec
push
aad
jge
inc
lret
out
or
mov
into
fstpt
hlt
fildll
subl
imul
or
aas
push
leave
cltd
jne
xor
repnz
xchg
popa
pop
dec
ficompl
in
shll
jne
mov
loop,pt
fs
sbb
jg
xchg
inc
jae
xor
mov
jp
popa
mov
xchg
adc
es
into
dec
cld
fstl
and
jl
ds
sub
cltd
das
int3
sub
fnstenv
add
jp
out
test
enter
mov
ja
push
in
rep
nop
dec
xchg
int3
push
test
vpsubsw
and
call
je
cmpsb
pop
dec
leave
jb
fs
gs
lcall
je
in
into
ljmp
pop
test
aad
mul
out
mov
dec
imul
dec
push
divl
in
pusha
movsb
sbb
nop
test
mulb
xchg
addb
loope
mul
rcrb
stos
add
outsb
leave
mov
sub
sti
pop
mov
dec
test
out
mov
std
leave
mov
pushaw
rorb
movsl
gs
dec
sub
adcb
inc
fimull
rclb
mov
cmp
jecxz
xchg
inc
mov
dec
lcall
mov
shlb
inc
lret
push
test
fcompl
jne
push
add
push
ja
outsl
xlat
scas
adc
in
mov
cli
mov
in
mov
pop
mov
cmp
out
mov
jmp
fs
dec
xor
cmc
call
pusha
adc
pop
loope
xchg
jb
xor
inc
cmp
adc
stc
push
pushf
fidivl
imul
sub
xor
push
mov
push
sub
inc
mov
shr
adc
pop
pop
sbb
mov
js
jg
into
fidivrl
into
and
xchg
sub
dec
push
aad
mov
jmp
loope
sbb
mov
add
aad
es
dec
inc
aad
aam
or
and
out
xchg
icebp
out
jno
hlt
or
cmc
fildl
stc
dec
fstl
xchg
test
mov
or
mov
scas
mov
and
dec
ds
and
mov
out
adc
xchg
fcomps
into
pop
xor
mov
insl
xchg
xor
fwait
jge
fcmovnu
nop
mov
push
sbb
idivb
clc
leave
sbb
mov
cs
sbb
sub
and
dec
xchg
mov
and
add
rcll
sub
xor
pop
cmpsl
pop
arpl
iret
jbe
jns
adc
adc
sbb
cltd
test
mov
mov
inc
push
push
adc
lods
sub
dec
adc
lods
push
inc
das
jecxz
inc
mov
loop
push
int
aaa
pop
jg
enter
out
dec
frstor
pop
dec
out
pusha
mov
jnp
dec
scas
mov
or
jb
loopne
cs
push
pop
push
add
jns
adc
repz
outsb
sub
mov
lea
add
jno
es
lret
std
cli
push
xchg
inc
adc
inc
cmp
shlb
sbb
ja
fwait
mov
jo
push
fnsave
stos
fwait
mov
pushl
movsb
std
loop
xchg
xchg
fsubl
lds
pop
sub
cwtl
int3
cwtl
das
fcoms
and
and
cli
call
sub
cmp
push
addr16
imul
fsubl
cli
imul
shll
adc
jo
scas
loopne
out
aas
ja
mov
repz
loopne
inc
fistl
loopne
rcll
inc
aaa
gs
insl
xchg
cmc
xchg
and
mov
jns
sbb
push
test
outsb
mov
push
mov
lods
mov
sub
testl
push
les
or
subb
mov
jp
test
mov
stc
divb
xor
xor
adc
std
cli
jno
negl
lds
into
push
test
jmp
and
or
sahf
inc
jae
jecxz
or
test
sub
jl
aaa
adc
adc
outsl
pusha
loope
xor
cld
int3
repnz
cmpsb
mov
out
pusha
mov
fs
mov
xlat
inc
movsl
mov
cmp
dec
xchg
clc
aas
ja
fsqrt
inc
or
fnstenv
inc
rcrl
adc
jp
les
pop
dec
push
pop
and
mov
push
in
xchg
adc
sarl
sub
adc
pop
imul
enter
clc
pop
jnp
aaa
jecxz
cltd
sub
mov
sahf
cmpsl
push
mov
mov
inc
stos
push
sbb
push
lahf
clc
ret
push
enter
popa
mov
test
aam
arpl
adc
jo
dec
movsb
idivl
arpl
pop
addr16
ljmp
mov
mov
jecxz
add
or
add
xor
gs
add
xchg
dec
or
stos
mov
lock
dec
lahf
adc
cmp
movsl
fldl
sbb
mov
inc
pop
ss
imul
or
add
fnstenv
in
gs
rcl
test
add
mov
mov
xor
lahf
mov
push
push
add
xchg
aad
push
mov
mov
out
test
dec
xchg
pop
adc
scas
mov
xor
jae
shrb
mov
inc
fildl
aam
enter
push
hlt
test
mov
ljmp
pop
lahf
je
push
ja
cmc
sub
test
cmpsl
jne
repz
sub
lahf
mov
xchg
fmuls
and
mov
rcr
stc
or
mov
arpl
stos
stc
mov
dec
ret
inc
insl
mov
push
popa
or
sbb
xchg
mov
jle
push
fmuls
stos
pop
enter
mov
and
jle
adc
test
mov
scas
cwtl
in
mov
in
xchg
in
out
cmp
in
sub
enter
mov
jl
or
pop
loope
mov
push
cmpsb
xchg
aaa
and
andl
mov
add
sti
jp
movsb
cmp
iret
pop
xchg
xchg
addb
fwait
cmp
fsubrs
lcall
lods
dec
mov
dec
je
into
push
fldt
cmpsb
cltd
xchg
inc
inc
outsb
pusha
jl
insl
xlat
sbbl
mov
imul
cmp
outsb
mov
outsl
lahf
sub
push
xchg
popf
inc
adc
jns
scas
cmp
inc
enter
mov
mov
es
flds
dec
lods
int3
xor
repnz
lret
test
je
out
icebp
push
xchg
push
mov
xchg
lea
addr16
mov
adc
mov
inc
stos
jecxz
adc
lods
pop
xor
fmull
jae
dec
mov
sub
loopne
ret
push
lds
aaa
mov
xor
in
ret
jecxz
ds
in
je
aaa
adc
and
mov
dec
sub
add
mov
ja
stos
cmp
cmc
mov
mov
ret
add
sub
pop
adc
push
mov
outsb
push
xchg
push
jecxz
insb
mov
int
data16
call
xchg
popf
in
cmp
mov
movsl
shrl
pushf
cmpsb
add
jb
ja
leave
adc
int
fwait
cmp
fdivrs
insl
or
ja
lock
xchg
sub
aad
mov
popa
jle
and
call
cmpsb
dec
into
loop
cmc
fdivrl
push
pop
out
jecxz
cmp
jmp
push
or
jae
add
mov
into
dec
out
repz
test
xchg
data16
xchg
adc
out
stos
mov
les
sbb
mov
out
jp
pop
into
mov
inc
out
out
loope
mov
push
jno
imul
inc
add
push
xchg
mov
stos
dec
je
add
scas
fcmovnb
add
lcall
inc
icebp
and
les
in
hlt
push
xor
ror
inc
stos
stos
dec
dec
pushf
push
test
enter
in
mov
outsb
sub
sub
loope
scas
outsl
xor
into
out
sbb
pop
jecxz
std
addr16
iret
jle
push
fwait
dec
loope
xchg
mov
inc
cld
jnp
daa
add
inc
jecxz
daa
cmp
add
popf
sti
movsb
sbb
push
addr16
leave
jge
mov
sub
pop
lods
lret
cld
xchg
lea
mov
sar
and
mov
push
lods
mov
and
mov
out
fadds
fldl
in
fcmovnb
cmp
loopne
jno
sub
shlb
rclb
repz
andl
add
ss
inc
int
mov
cmp
pusha
lock
sub
int3
mov
ds
aad
mov
outsl
loopne
sarb
fdivs
adc
insl
jnp
mov
out
dec
mov
pop
mov
arpl
rorl
xchg
insb
add
pcmpgtw
add
xor
dec
pushf
imul
pop
xlat
scas
sbb
enter
daa
in
inc
xchg
jp
mov
outsb
cwtl
xor
dec
rolb
enter
ja
pop
adc
std
leave
das
test
jl
xchg
mov
jo
xor
sbb
inc
sti
sub
add
xchg
mov
out
int3
dec
mov
test
in
dec
jmp
pusha
fdivr
mov
addr16
jp
xchg
fcmovu
push
push
push
decl
sarb
fdivs
iret
fnstsw
xchg
sub
adc
mov
adc
cmp
aam
daa
test
loope
decl
jb
mov
mov
push
out
mov
pop
aam
and
push
hlt
xor
in
push
mov
aam
adc
stc
mov
push
add
rolb
fdivp
lods
push
add
push
push
xor
adc
cmp
test
dec
scas
inc
out
inc
mov
mov
push
dec
rep
xor
jle
loopne
pop
mov
and
adc
jp
add
mov
cltd
sbb
xchg
in
pop
lds
scas
push
lcall
ja
arpl
adcl
stc
pop
cmp
mov
or
iret
jno
xchg
lock
scas
fmul
mov
in
notl
int
les
cmpl
pusha
int3
jno
cmp
jge
scas
jno
pop
push
iret
sahf
icebp
pop
mov
dec
shrl
js
loop
push
push
int3
push
lcall
cmp
shrl
mov
cwtl
lods
or
cld
bnd
and
hlt
and
or
mov
pop
cmp
sbb
call
lret
rorb
mov
xor
jae
roll
je
pop
mov
test
lahf
test
mov
icebp
cmpb
das
filds
mov
das
negl
mov
mov
test
pushl
mov
movsl
inc
push
pushf
xor
cmp
call
in
pop
mov
lds
xchg
in
test
shrl
sarb
addr16
incl
aas
stc
dec
pop
outsb
adc
out
je
scas
imul
ret
cli
mov
lcall
test
jbe
cmpsl
addr16
push
movsl
test
js
xlat
sbb
jo
incl
inc
shll
arpl
inc
addr16
je
call
insb
das
or
push
jl
xchg
push
fadd
popf
dec
ffreep
movsl
nop
xchg
or
sbb
lret
sbb
jp
dec
jle
pop
fdivp
adc
push
rclb
ss
jg
dec
lock
adc
ja
cltd
dec
cmp
jae
arpl
ja
fs
add
cmp
sub
in
xor
push
or
ss
rcrb
icebp
sbb
mov
and
das
in
fisttpl
sahf
mov
cmpsl
xor
ja
aad
xchg
loop,pt
mov
fistps
je
mov
sti
mov
movsl
subl
aas
outsb
jmp
rclb
shrl
pop
adc
negb
js
hlt
fcomps
fistpll
xchg
fwait
jecxz
outsl
inc
cmp
insb
lods
pop
fldcw
mov
cmpl
imul
sub
iret
out
popa
lods
ret
jbe
xor
mov
pop
repz
dec
sbb
adc
xor
mov
leave
popf
jno
out
lock
and
jmp
in
aam
dec
in
xchg
xchg
sbb
sti
in
push
add
push
imul
push
cmp
enter
or
fdivrs
pop
jo
js
fnstenv
mov
bnd
xor
cli
popf
jo
hlt
out
adc
mov
lea
adc
adc
cmc
mov
cmpsl
adc
jle
fs
fimull
pushf
mov
pop
loop
pop
fs
xchg
or
neg
aam
pusha
push
shl
push
incl
cmc
xchg
cmpsb
pop
loop
sbb
pop
ret
sbb
lods
ficoml
mov
push
pop
rol
jno
outsb
or
lahf
dec
ljmp
in
and
push
mov
fdivr
cmc
movsb
jge
mov
inc
xlat
filds
push
xchg
mov
push
iret
shrb
or
inc
xchg
lea
ljmp
test
or
arpl
repz
cmp
mov
cmp
xchg
mov
popa
xor
fdivl
pop
jmp
decb
push
adc
xchg
incl
jne
cmpsb
mov
fcoms
add
shr
stc
es
xor
add
int
cmp
pop
and
pop
enter
mov
mov
int3
dec
aam
xchg
popf
out
or
adc
mov
cmp
bound
jg
divb
dec
sbb
clc
cltd
scas
daa
sbb
std
lock
cmp
lret
adc
sbb
mov
add
dec
lea
jb
arpl
clc
and
in
inc
or
mov
fwait
stos
inc
stos
sub
jecxz
inc
les
mov
addb
jl
outsb
in
loope
fidivl
lds
dec
pop
gs
loop
jns
mov
mov
sub
les
in
dec
and
mov
jp
pusha
dec
and
flds
inc
adc
imul
shl
out
inc
push
sbb
push
popa
or
xorb
mov
enter
jno
roll
cmp
xor
daa
cmc
xor
mov
daa
cmp
adcb
or
mov
mov
lods
add
dec
shlb
and
aas
mov
xchg
dec
dec
jbe
cmp
add
stc
push
outsb
sbb
adc
orl
jmp
cmpsl
lahf
cmpsb
mov
cld
or
stos
rorb
and
clc
js
dec
and
or
xchg
vcvtsi2sdl
aad
nop
and
and
call
roll
adc
ljmp
pop
aas
int3
add
or
mov
jle
sbb
mov
ret
cmp
mov
scas
cld
rol
cmpsb
push
ret
sub
or
pop
adc
pop
jmp
lahf
pop
repz
xor
ljmp
gs
sbbb
or
mov
jns
fdivp
andb
loop
sbb
jg
inc
imul
in
pop
or
xchg
in
loopne
decl
lret
xchg
popf
add
inc
pop
pop
or
xchg
call
push
arpl
out
addr16
push
js
xchg
adc
std
subb
jne
iret
mov
inc
clc
testl
jg
inc
out
sbb
imul
dec
test
ja
fidivs
push
dec
jge
mov
ret
dec
dec
sub
js
pushf
dec
mov
pop
mov
sbb
mov
jl
adc
idivb
pop
imul
inc
mov
add
aad
xchg
lods
xchg
xor
and
mov
cmpsl
arpl
mov
orb
mov
hlt
lret
pop
test
push
or
movsb
in
out
scas
or
imul
cmp
cs
xchg
shrl
enter
test
rcrl
xchg
jmp
mov
lret
cmpsb
es
hlt
je
mov
push
push
mov
lock
jge
mov
jne
or
xchg
fwait
int3
ret
and
cwtl
xor
adcl
repnz
cmpsl
sub
xchg
lods
cmp
sub
mov
leave
lods
inc
test
cmp
fidivrl
out
fwait
or
rcll
jle
ret
jg
out
push
mov
xchg
sub
scas
into
or
sub
add
fidivrl
subl
push
lcall
xorl
lods
ret
adc
jnp
ds
fwait
adc
xchg
cld
cmp
mov
ds
xorb
cltd
lea
pushf
movsl
lea
aam
cmp
mov
fsubs
adc
and
and
sub
push
cltd
outsl
mull
jno
ds
flds
push
shr
outsb
fmul
test
jle
jo
out
test
mov
sub
andb
icebp
push
fisubl
cmpl
frstor
in
cmpsb
cwtl
imul
data16
out
cwtl
out
inc
adc
lret
adcl
mov
or
jbe
in
mov
jge
sub
cmp
stc
and
or
sarb
mov
sti
in
sarb
lods
cmp
xchg
jle
pop
and
pop
ljmp
cwtl
lods
sub
push
inc
push
testl
sbbl
xchg
sbb
data16
add
mov
bound
dec
stos
movsl
jae
stos
jl
and
leave
sti
test
inc
aam
cld
into
dec
dec
into
in
jns
xor
stc
jecxz
mov
mov
iret
push
les
sub
add
pop
dec
inc
shrb
mov
in
xlat
xchg
jno
mov
pop
gs
mov
andb
push
sub
sti
lods
mov
icebp
cmpsl
mov
or
push
aam
inc
rcrl
int
push
aaa
loopne
xor
push
dec
fisubrs
mov
xor
xor
cld
aaa
inc
sbb
mov
jp
imul
rorb
dec
iret
or
insb
fisttpl
pop
jae
addr16
inc
fimuls
fistl
js
or
rcrl
fmuls
std
mov
sbbl
decl
inc
cmp
fnstenv
push
inc
outsl
imul
scas
push
aam
or
arpl
push
fnstenv
sti
imul
into
sub
test
mov
int
dec
ss
mov
xor
inc
pop
push
add
fistpl
loop
sbb
js
push
in
jmp
aam
push
mov
popf
aad
repz
pop
enter
xchg
fldl
cli
jns
jmp
test
mov
or
adc
xorb
loope
int
xor
add
shrl
loop
cmpsl
adc
dec
arpl
push
adc
rolb
es
bound
or
lahf
daa
lcall
cmp
das
xor
shlb
sbb
and
fisttps
jl,pt
pop
pop
fidivrl
andl
jno
inc
push
pop
fcomps
imul
xlat
xor
mov
sub
adc
clc
sbb
insl
lahf
lods
es
outsl
pop
mov
ret
sub
mov
mov
iret
pop
inc
xchg
jle
cmp
inc
pop
and
pop
aam
sub
add
lea
leave
jno
or
int3
pop
xor
repnz
push
je
jp
jl
test
sarl
repz
jge
mov
jae
and
and
or
mov
loopne
imul
inc
xor
adc
sub
adc
insl
sahf
xchg
lods
test
test
jp
inc
js
imul
ja
or
enter
sub
pusha
test
outsl
sbbl
fwait
std
cmpl
pop
je
xchg
mov
loop
add
stc
inc
shll
sahf
sub
add
mov
xor
cs
loope
fisubs
test
sbb
js
cmp
ficompl
in
lods
add
data16
sti
in
cwtl
movsb
lret
dec
or
mov
sar
movsb
push
mov
add
stos
in
sbb
into
push
repnz
scas
push
mov
sti
mov
add
stos
jne
push
sbb
or
stos
fs
lcall
int
sub
or
and
jns
popf
mov
xor
shlb
pop
inc
insb
cltd
addr16
xor
mov
and
icebp
dec
insb
test
cld
pop
cli
cmpsl
je
jmp
dec
push
andl
repz
popa
pop
int3
out
aas
jno
push
std
rorb
adc
pop
cwtl
push
int3
cmp
mov
mov
xchg
in
in
and
fsincos
xchg
push
iret
add
adc
pop
rcl
mov
cmpsb
cld
mov
jns
xchg
pop
repz
scas
orb
dec
mov
je
add
mov
pushf
adc
push
popf
adc
xchg
push
ss
or
mov
mov
mov
jg
jge
clc
es
mov
imul
dec
pop
xchg
fs
fisttps
bound
cmpsl
dec
or
out
and
add
fildl
dec
add
test
cli
loopne
fs
cmpl
mov
scas
or
sub
lock
cmc
pop
pushf
sbb
in
mov
popa
and
out
repnz
stos
push
insb
out
mov
popa
jl
movsl
leave
cs
out
xchg
iret
popa
mov
lret
pop
movsl
adc
mov
push
xor
loopne
inc
repnz
fmuls
push
out
cwtl
in
fnstsw
or
cmpsl
xchg
sub
sbb
sti
daa
mov
push
push
lret
outsl
or
mov
fistpl
pop
in
or
push
outsl
sbb
aas
notb
xor
inc
add
rorb
and
xchg
xor
bound
push
orb
repz
out
sarl
sahf
jae,pt
ret
data16
xchg
outsl
in
enter
dec
inc
xor
mov
pop
dec
cld
sub
jb
das
xlat
add
aam
inc
pop
cld
clc
pop
int3
fs
call
shlb
adc
mov
jecxz
sbb
into
add
or
jg
pushf
mov
stc
mov
xor
mov
add
shlb
add
and
out
cltd
xchg
aas
cmpsb
fldcw
loope
loope
movsl
xchg
jbe
test
lock
push
arpl
stc
or
pop
sbb
adc
mov
out
add
in
add
mov
lods
mov
lods
lea
pop
les
sbb
or
movsl
call
jg
jl
sub
cmc
imul
dec
xchg
mov
insl
pop
cmp
aas
iret
mov
loope
lahf
sbb
xchg
inc
cmp
shrb
lahf
pop
jns
add
scas
inc
imul
lcall
jg
sarl
xor
and
or
cmpsb
add
pop
jle
loopne
outsb
mov
lock
jmp
push
ja
iret
sub
repnz
jmp
cmpsl
xor
scas
call
add
cmpl
adc
sbb
push
push
insl
mov
hlt
jo
sub
sub
and
ret
xchg
aad
loopne
loope
ljmp
xchg
inc
in
mov
cmp
call
les
aad
mov
sbb
mov
sti
push
and
push
pop
mov
push
mov
pusha
popa
lods
jno
ficomps
rcrb
test
mov
mov
jp
lods
fisubs
sti
lea
in
stc
mov
cmpsb
ja
outsl
outsb
cmc
test
or
cmc
dec
flds
call
hlt
ret
lock
push
xor
mov
jne
dec
cmp
jns,pn
inc
cmp
mov
mov
cwtl
int
inc
push
jg
pushf
sahf
mov
lahf
push
mov
in
test
fcomp
adc
cmp
mov
pushw
lods
or
cmp
test
jle
iret
jae
cwtl
mov
movsb
mov
pushf
dec
mov
and
add
mov
inc
push
inc
sbb
push
sbb
ds
loope
cwtl
lcall
and
movsb
and
sbb
pop
in
lock
into
test
push
out
das
push
iret
and
nop
inc
daa
push
mov
add
adc
inc
or
sbb
in
mov
pop
add
pop
sub
xor
pushl
adc
add
pop
xor
lcall
and
insl
sub
fstpl
push
test
mov
and
push
add
jmp
dec
mov
fmuls
or
jns
and
adc
mov
xor
jmp
push
fadds
cmp
aaa
clc
mov
mov
mov
stos
and
mov
sti
sub
jg
and
xor
xor
xchg
int3
jbe
lcall
scas
xchg
pop
lock
inc
cmpl
or
push
pop
test
pop
pop
pop
into
movq
loop
loopne
in
mov
scas
cs
lods
mov
mov
push
sbb
and
sub
cmp
push
xor
lahf
push
dec
pop
jne
mov
mov
lret
loopne
push
push
imul
cmp
sti
mov
dec
sbb
add
mov
jg
xchg
lock
dec
dec
sub
dec
dec
fwait
inc
jg
test
dec
inc
xor
imulb
pop
mov
pop
jg
les
aaa
pushl
dec
pop
mov
into
fistl
stc
jnp
jns
sub
das
cld
jno
xlat
sbb
xor
es
cwtl
ficomps
sbb
inc
test
jbe
dec
mov
xor
test
scas
aam
int
adc
pop
mov
add
sub
hlt
xor
or
aad
push
repz
jo
int3
jbe
jae
aam
cmpb
sub
and
ds
dec
cmp
sbb
push
push
dec
inc
sti
push
jae
sti
sub
fcmove
int3
mov
test
scas
cltd
popf
hlt
js
cmp
pusha
mov
mov
sbb
loope
mov
mov
mov
push
inc
out
mov
faddl
xchg
push
out
add
xchg
fcoms
fisttps
xchg
push
scas
enter
jo
jae
stc
nop
movsl
add
stos
call
fs
call
out
sbb
add
fs
xchg
outsl
lahf
jnp
add
in
lahf
std
fsubrl
mov
lret
inc
loop
loop
lret
pop
data16
rorb
pop
push
inc
stc
xor
in
dec
ja
loope
ds
jecxz
movsb
sbb
cmp
pusha
jbe
and
mov
dec
push
mov
push
fistl
pop
nop
rcl
mov
sub
pop
aam
std
or
lods
add
jns
mov
sbb
aam
and
cwtl
cmp
mov
loopne
inc
cltd
and
pop
shll
icebp
pushf
es
push
imul
xchg
and
js
pop
not
mov
add
sbb
int3
stos
fisttpl
arpl
adc
mov
je
jmp
cwtl
push
in
fucom
loope
arpl
repnz
lods
add
hlt
cmpsb
es
fcmovbe
jb
clc
push
pop
arpl
rcl
les
repz
sbb
daa
vmwrite
lods
mov
test
cmp
cli
pop
daa
mov
sbb
adc
mov
xchg
add
sub
xor
rolb
js
xor
jno
mov
inc
data16
enter
sub
out
sbb
in
test
or
adc
lea
mov
repz
fnstcw
inc
ds
push
or
cmp
or
push
je
cmp
lcall
pop
add
cmpsb
jae
or
mov
adc
adc
inc
sahf
dec
fnstenv
sbb
shlb
ret
inc
sahf
lods
fdivrs
sahf
pop
sub
outsl
xchg
aaa
xor
mov
dec
push
call
sub
aad
std
sbb
shl
add
xchg
mov
loope
pop
jl
ret
add
ror
and
aas
aam
xchg
ficomps
in
jo
xchg
cwtl
add
mov
insl
pop
lock
stos
or
mov
push
testl
and
cmp
mov
jbe
mov
pop
pop
int3
lods
adc
adc
pop
jmp
inc
sbb
stc
mov
lea
xchg
xor
pop
pop
xchg
push
and
in
inc
cmp
ss
rorb
setno
adc
sbb
test
sbb
xor
rcr
cld
xlat
loopne
push
jg
hlt
cmp
add
stc
jmp
add
inc
mov
jbe
movsb
call
xchg
xor
xor
adc
mov
xchg
pop
rol
in
cltd
sbb
push
das
jmp
jns
or
subb
mov
lcall
or
lea
lret
mov
sbb
adc
lea
repnz
into
cld
xchg
pop
int3
lret
in
movsl
cmpsl
or
xchg
stc
mov
dec
mov
xchg
ljmp
mov
xlat
pop
sarl
mov
dec
xchg
mov
iret
cmp
fildl
push
imul
ds
outsb
sub
sub
popa
test
cmpsb
add
mov
jl
sti
xor
rcrb
jle
loop
inc
insl
inc
xor
aaa
cmpsb
push
jb
xor
test
cmpb
into
pop
fisubrs
mov
mov
repz
xchg
sbb
push
sbb
stos
shll
inc
dec
into
push
je
xlat
nop
test
push
shlb
mov
cmp
ja
mov
or
push
es
je
push
xchg
rolb
push
mov
mov
cmpsb
cmc
mov
push
iret
cmp
jns
mov
popa
sbb
or
jl
sbb
sbb
xor
pop
orl
out
jl
inc
xchg
fidivrs
push
loopne
shll
push
and
ja
mov
jnp
iret
in
stos
outsl
sub
sbb
dec
push
movsl
dec
lret
in
mov
inc
push
ret
mov
sbb
nop
pop
mov
push
in
jbe
adc
jbe
pop
loop
push
sub
dec
mov
pop
jb
idiv
lock
inc
sbb
xchg
in
mov
mov
xor
push
push
inc
gs
imul
push
push
sbb
dec
shlb
cmp
scas
add
cmp
shll
fs
mov
push
jnp
jae
pop
arpl
sbb
mov
out
pop
mov
test
cs
out
shll
dec
mov
mov
pop
out
shrl
or
xchg
xchg
sahf
sub
mov
mov
mov
pop
decl
test
testl
and
lcall
movsb
pop
fs
mov
jl
imul
mov
call
pop
pop
pushf
pushf
ljmp
sbb
stos
inc
hlt
stos
jnp
mov
pop
mov
push
adc
ds
popa
jo
shrl
jg
mov
xor
lods
cmp
fs
sub
andl
repnz
test
fistpl
and
jl
xchg
loop
in
cmp
loope
add
test
pop
sbb
jne
inc
add
push
mov
lods
mov
aam
cmp
jo
sbb
aad
scas
nop
clc
jp
fwait
xchg
ret
jg
in
jp
xor
adc
test
jno
leave
dec
fildl
imul
aam
enter
je
sti
sub
loope
ja
fisubrs
daa
in
dec
push
leave
xorb
inc
dec
cmp
cmpsl
fldcw
div
or
out
lahf
xor
scas
cwtl
sbb
out
xchg
push
icebp
cmp
mov
xchg
lea
xor
cmp
xor
mov
mov
sbb
xchg
mov
sub
mov
ret
dec
hlt
xor
xchg
out
adc
and
js
sub
adc
cltd
sti
bound
pop
stos
fs
test
pop
mov
push
nop
into
sub
rcl
pop
fstps
orl
push
push
or
push
in
aaa
fldenv
ret
cmpb
cmc
lea
pusha
icebp
and
mov
inc
shl
out
sbb
or
das
ljmp
repz
mov
out
mov
outsl
je
das
fstl
jne
out
iret
es
out
dec
cmp
dec
lahf
jmp
pop
test
mov
inc
sub
stos
sbb
leave
imul
cmp
xchg
out
mov
in
clc
fs
inc
inc
push
inc
dec
mov
or
and
cmp
push
or
orb
fs
pop
sti
iret
xor
inc
add
mov
jns
bound
movsb
inc
inc
and
xchg
inc
and
inc
lds
pop
inc
add
fiadds
divps
iret
scas
jp
stos
xor
jle
fisttpll
sub
mov
mov
cs
inc
mov
add
repz
rolb
icebp
cmpsb
jno
sbb
adc
add
popa
xchg
fwait
adc
loope
mov
faddl
fldcw
cmp
mov
lahf
call
data16
mov
pop
xor
sbb
mov
sti
lahf
pushf
int3
xchg
cmc
or
test
xchg
or
push
sub
mov
mov
movsb
or
mov
and
out
rcrb
jbe
jmp
xor
in
xchg
mov
jb
pop
ja
shll
imul
cltd
xchg
and
sbb
adc
es
sbb
mov
mov
push
inc
testb
test
mov
jle
add
sub
test
or
test
sub
mov
mov
ds
mov
pop
flds
inc
and
mov
pop
bound
inc
xlat
jg
lret
sbb
adc
lods
inc
sbb
jo
pusha
jns
and
rolb
cltd
jp
les
cwtl
fcoml
mov
dec
mov
adc
sbb
fs
test
or
pop
inc
adc
enter
ja
xor
nop
inc
ss
lcall
inc
in
sahf
xor
rcr
es
pusha
jmp
cmpsb
sbbl
js
push
stos
cmp
inc
arpl
pusha
sub
pop
loope
leave
pop
mov
jl
pandn
sahf
cmp
lret
cmp
gs
push
xchg
add
pop
dec
adc
movsb
stos
inc
lea
outsl
push
repnz
mov
stc
shll
fwait
jae
or
test
pop
mov
std
adc
xchg
jns
stos
call
or
jg
mov
mov
data16
mov
daa
iret
mov
lret
lock
jno
cltd
mov
lock
mov
ds
jae
cmp
out
shl
aas
shrl
jnp
lock
add
outsb
pop
lret
pop
xor
jp
pusha
testb
sbb
rolb
mov
adc
jl
test
int
sahf
jmp
out
dec
mov
and
icebp
iret
ja
and
bswap
in
push
jecxz
fsubs
push
out
pop
mov
pop
push
out
lods
clc
mov
sbb
push
imull
mov
insl
ljmp
lods
dec
mov
jg
jo
les
clc
in
movsl
jmp
sti
jge
shl
ds
push
cmpsb
and
movsb
sbb
divl
out
dec
or
mov
mov
sub
mov
xchg
and
xchg
cmp
xchg
jle
sbb
mov
pop
and
out
insb
jae
push
cmpsl
aad
aam
inc
pushl
loop
in
dec
adc
out
xlat
push
mov
dec
xor
shll
jae
xchg
add
dec
jp
pop
sbb
xchg
mov
and
iret
jnp
ljmp
cmp
nop
pushf
aam
sub
push
ds
fwait
into
adc
aas
dec
hlt
jne
mov
dec
add
mov
sub
and
in
mov
xchg
iret
add
mov
mov
push
das
stos
sub
in
xchg
and
int3
data16
adcl
fdivrl
xchg
test
outsl
out
adc
fdivrp
mov
pop
outsl
jo
ds
xchg
mov
insb
subb
add
jg
lahf
les
mov
shrb
push
out
dec
cld
cmp
mov
xchg
std
cmpsb
xchg
imul
mov
call
xor
sbb
icebp
lcall
sti
cmpsl
jb
loope
mov
fbstp
int
mov
jbe
push
movsl
mov
loop
fdivs
es
ds
mov
cld
popa
in
test
xchg
push
dec
ljmp
xchg
push
data16
push
lds
add
xchg
clc
ret
sbb
lcall
rorl
ljmp
sub
adc
cwtl
inc
movsb
push
sbb
push
lahf
xlat
lea
mov
xchg
scas
test
push
cltd
mov
std
or
or
dec
loope
xchg
inc
pop
and
pop
jp
mov
std
or
or
jmp
inc
fisubrs
enter
hlt
dec
mov
mov
lock
jb
inc
adc
jns
pop
pushf
pop
inc
jecxz
jo
out
fadds
in
in
xchg
shlb
mov
lret
xchg
mov
xlat
xor
sub
xchg
int3
scas
call
pop
rcr
adc
bnd
sub
mov
ret
mov
xchg
cmpsb
ja
imul
push
and
adc
or
push
push
sarb
dec
sub
jmp
or
stc
out
dec
stc
gs
pushl
pop
pop
adc
jmp
shrb
loopne
fimull
cmpsl
out
les
jno
aad
jo
push
mov
lds
push
or
sub
aaa
out
test
pusha
daa
cmp
inc
test
cmp
sbb
call
outsb
pop
jo
ja
or
lods
popf
cmp
int
std
test
pop
adc
push
jmp
lods
dec
jl
dec
pop
in
jmp
test
out
jnp
leave
xchg
pushf
push
sbb
ret
ja
scas
add
fbstp
sarl
jb
lret
dec
inc
or
sub
push
sbb
out
pop
cmc
cmp
jo
das
push
mov
and
imul
orl
jg
shrb
int3
jle
hlt
mov
lret
jb
orl
pop
inc
mov
xor
and
mov
inc
je
dec
cmpsl
lcall
push
xchg
lret
ljmp
rcll
dec
adcl
mov
or
movsb
add
lahf
arpl
sub
out
aam
cld
sub
pop
mov
mov
gs
enter
popa
xchg
test
mov
xorl
fmull
dec
inc
jg
inc
dec
xor
xor
sarl
mov
or
aaa
pop
dec
mov
mov
or
dec
aad
cmpsb
into
push
push
mov
or
outsb
std
imul
jb
push
xor
xor
movsb
adc
das
movl
mov
xchg
rcr
cmp
pop
sbb
inc
or
sbb
mov
inc
or
rclb
inc
xchg
sbb
dec
pop
dec
push
test
std
mov
dec
in
push
cld
test
inc
inc
out
mov
jb
int3
out
adc
popa
movsb
dec
cmp
inc
imul
lods
lret
cmp
sub
lahf
push
aaa
sbb
cs
pop
flds
mov
dec
and
push
rolb
das
test
das
stos
xchg
adc
cmp
ss
out
or
sub
or
jle
adc
test
adc
mov
sub
fistl
mov
dec
jo
negl
push
insb
loop
push
sub
xchg
stos
test
fists
jnp
lea
sti
sbb
aam
int3
adc
nop
sbb
out
cltd
push
sbb
mov
and
out
scas
bound
pusha
mov
mov
xor
pop
xchg
dec
ds
aam
rolb
ljmp
cmp
mov
arpl
dec
rorl
mov
mov
lods
call
push
cmpsl
sbb
jmp
gs
stc
or
movsb
jae
and
in
imul
std
imul
stos
mov
xlat
mov
pop
loope
dec
mov
pop
test
rdpmc
dec
push
inc
xchg
mov
jle
movsl
shrb
nop
fisttpl
jl
outsb
gs
sahf
fmull
insb
mov
push
xchg
repz
fdivl
xor
sbb
inc
dec
iret
mov
sbbb
add
fldcw
xchg
add
cmpsl
dec
fldenv
jbe
fsubp
or
insl
cli
clc
mov
add
andb
inc
xchg
adc
xchg
movsl
add
ret
and
pop
int
fstp
inc
pushf
cmpsl
arpl
and
lods
push
leave
aam
sbb
imul
pop
testb
mov
adc
xchg
and
jno
outsl
lea
pop
jns
pop
int
mov
pop
mov
stc
mov
pop
in
cmp
ret
test
sarl
mulb
inc
mov
add
sahf
xchg
xor
mov
adc
adc
fs
and
cmp
or
cmc
ja
xchg
gs
pop
mov
mov
out
add
out
rol
mov
jns
insl
xchg
sti
cmp
lods
pop
mov
not
scas
and
iret
leave
sbb
lret
arpl
sahf
imul
mov
dec
fs
jne
mov
movsl
jl
and
iret
js
pop
out
push
cmp
inc
sbb
adc
sub
imul
xchg
call
jae
loop
mov
aaa
push
orl
leave
pop
outsl
pop
into
sbb
fwait
enter
push
stos
aad
dec
mov
imul
dec
xor
nop
fwait
cmp
imul
sbb
mov
lods
int3
repnz
mov
mulb
in
in
mov
test
mov
sbb
pop
fisubs
mov
inc
dec
mov
xor
adc
shl
pop
cmp
int
cltd
pop
jae
cs
sti
flds
jbe
inc
mov
mov
mov
inc
xor
push
ret
sbb
xlat
mov
es
adc
out
lods
in
rorb
ror
in
mov
lds
cli
sbb
lods
scas
ror
js
xor
nop
test
pop
mov
std
and
adc
pop
pusha
fwait
jl
jmp
sbb
lds
insb
jae
out
lods
sbb
xchg
loopne
mov
pop
sub
jb
cmp
mov
jle
or
je
mov
sbb
loope
cli
sbb
xor
dec
mov
mov
lock
mull
mov
aam
mov
ja
pusha
xor
pop
push
inc
sbb
repz
xor
push
xor
or
mov
shl
dec
pop
ja
sbbl
sbb
mov
push
mov
sbb
inc
mov
lcall
jns
and
pop
mov
cwtd
lret
jae
mov
mov
mov
leave
lcall
popf
repnz
into
dec
fcmovnu
sbb
sbb
push
fcomps
adc
add
scas
jl
cmp
lcall
rorl
xchg
clc
pushf
pop
adc
mov
sbb
movsb
stos
mov
ljmp
push
jns
xchg
pop
loope
xorl
insb
sub
lods
inc
and
xchg
sub
cltd
pop
push
rorb
fidivrl
dec
dec
cmp
push
sbb
data16
cli
mov
or
sbb
jp
rcr
and
xor
sub
push
cmc
mov
stos
mov
ja
pop
inc
mov
testl
mov
and
inc
mov
add
adc
pop
xchg
mov
sub
mov
inc
push
decl
cmp
notl
inc
push
jb
call
cwtl
xchg
das
enter
or
push
lahf
stc
mov
mov
test
ds
cmp
mov
in
mov
enter
daa
pop
xchg
push
xchg
ds
fdivs
push
mov
cmp
cmp
jns
push
stc
es
sbb
adc
mov
ljmp
fidivrl
xchg
mov
mov
adc
adc
mov
add
fidivl
addr16
mov
pop
orb
pop
sti
mov
inc
aaa
addr16
sbb
fcmovb
cld
int3
popf
addl
xor
push
sub
dec
xchg
add
add
jge,pt
sahf
xchg
mov
scas
leave
shrl
adc
pop
add
rep
mov
leave
jg
dec
pop
pop
in
pop
sbb
test
fadds
dec
mov
aam
ret
mov
in
test
lds
clc
fnstsw
jle
sub
or
sarb
and
sub
ret
aas
jbe
mov
adc
inc
adc
cmp
sahf
popf
xor
jg
icebp
push
or
mov
cmpsb
sbb
outsb
cmp
cmp
mov
shlb
cmp
fmuls
cmpsb
pop
in
jmp
push
pop
js
das
lods
push
icebp
in
into
xchg
cli
inc
or
sbb
inc
mov
leave
adc
ss
pop
and
arpl
popa
enter
push
xchg
mov
mov
mov
mov
pop
pusha
push
xorl
adc
pop
mov
dec
ss
xchg
in
inc
inc
in
sbb
jne
ds
adc
or
and
add
iret
cmp
xchg
add
sbb
outsl
arpl
inc
pop
fwait
inc
jg
call
mov
mov
add
out
pop
jge
dec
cli
clc
pop
mov
cmp
imul
pop
ds
pop
popf
popf
std
adc
dec
mov
lock
popf
pop
sbb
nop
fdivrl
adc
dec
sub
test
out
jno
mov
out
testl
int3
adcb
in
into
sbb
lods
pop
stos
in
jb
in
int3
push
pop
incl
cmpsl
sbb
xor
pop
jmp
adc
imul
mov
jo
mov
xchg
cmpsb
scas
sub
add
lret
mov
cmp
ljmp
cmpsl
add
and
shrb
add
mov
test
and
push
cmp
inc
lahf
add
adc
cmp
xchg
cmp
add
add
lea
xor
mov
imul
mov
add
gs
adc
iret
sbb
mov
daa
push
ds
inc
adc
mov
jmp
push
decl
enter
adc
imul
pop
out
xchg
into
inc
enter
sub
fs
jns
int
xor
inc
ja
mov
xchg
shrb
mov
push
pop
shrb
rcll
andl
mov
mov
pop
out
xchg
inc
or
movsb
or
cmc
xchg
je
into
stos
pop
jb
addl
xchg
leave
adc
dec
roll
out
pop
cli
shrb
and
out
jecxz
push
xchg
xchg
sub
fimuls
lret
inc
pop
out
js
dec
jnp
mov
cld
and
pusha
hlt
xorb
outsb
xor
xchg
out
sub
divps
push
lret
adc
cli
stc
frstor
call
cmpsl
in
ror
rcll
aaa
adc
je
mov
rorl
call
and
jb
in
pop
mov
and
jmp
mov
inc
int
movhps
orb
add
push
mov
sbb
or
in
sbb
ret
popf
xchg
mov
rolb
dec
mov
dec
mov
cmp
fs
in
add
pop
fdivrl
mov
cs
popf
fildl
cmpsl
enter
lahf
sub
jp
mov
xor
sbb
jbe
jl
aaa
daa
int
or
jb
dec
rorl
lcall
in
lret
xchg
popf
xor
out
je
inc
jle
ficomps
jb
mov
fs
dec
js
sbb
fwait
jno
cmp
fistps
cmp
std
or
lds
sarl
nop
adc
push
add
js
mov
out
push
pushf
idiv
loope
shl
xchg
popf
add
or
jecxz
dec
or
insb
or
adc
dec
movsb
stos
cmp
push
sbb
or
and
stos
popf
loope
js
ret
mov
sahf
sbb
mov
mov
aad
mov
fildll
push
test
nop
sbb
test
mov
pop
jnp
lods
or
insl
cmp
push
test
push
sti
pop
mov
js
xor
cmpsl
and
lret
lahf
dec
jge
aas
pavgw
cmp
add
or
mov
popf
fs
dec
sbb
xchg
insl
pop
fadd
mov
push
sbb
ja
sub
adc
and
arpl
cs
int3
daa
xor
std
test
or
flds
jmp
and
dec
sti
js
shlb
adc
jl
push
mov
rorl
sbb
pop
int
lods
pushl
repnz
dec
sbb
mov
in
in
xor
retw
mov
addr16
dec
xchg
repz
dec
icebp
push
mov
mov
rcrb
sub
jnp
xor
sub
pop
dec
ret
aad
sbb
in
xor
pop
mov
adc
jne
imul
mov
es
test
lods
mov
and
ficompl
inc
mov
xor
lds
push
mov
aaa
out
jb
add
ret
or
mov
inc
cmpsl
into
daa
sbb
dec
mov
mov
cmc
mov
push
das
fnstenv
add
sub
ljmp
aaa
outsb
lret
enter
fstp
push
jns
clc
test
in
push
sub
lahf
jne
andb
adc
xor
pop
sbb
repz
sbb
cmc
add
jle
push
ljmp
add
push
lods
and
or
jle
xchg
int3
pop
mov
sahf
jnp
cmp
and
push
mov
and
jge
scas
inc
sbb
mov
push
sub
mov
xchg
sbb
cmpb
test
jo
into
loopne
out
call
movsl
push
loop
ss
mov
xchg
movsb
mov
jecxz
aam
jmp
xchg
sub
roll
pop
mov
stc
sub
xor
xor
lret
jne
pushf
pop
adc
add
add
cmp
cli
fistps
imul
ljmp
mov
pop
test
push
pop
push
sub
aam
aad
stos
in
in
push
push
sub
and
mov
dec
add
mov
adcb
push
pushf
jno
imul
aaa
mov
mov
sbb
out
lods
sti
add
ljmp
call
adc
mov
das
and
add
cmp
test
data16
mov
xchg
lods
aas
das
test
inc
mov
iret
mov
scas
fwait
imul
sub
add
pop
imul
jbe
fninit
sti
lods
sbb
mov
inc
rcrb
rolb
push
enter
pop
call
sbb
mov
cmpsb
loopne
sti
jmp
mov
xchg
outsl
sahf
fnstsw
ret
mov
mov
pushf
mov
mov
xor
jnp
adc
mov
mov
pop
out
add
push
mov
pmaddwd
mov
pop
dec
sbb
cltd
ret
sub
out
stos
mov
cmp
fwait
jl
cmp
jne
jbe
fisubs
and
addl
jne
add
fidivs
push
mov
xor
in
jecxz
vpmaddwd
aas
jl
into
decl
pop
scas
subl
pop
xor
in
push
adc
mov
jne
and
ret
adcl
jnp
outsl
subl
xchg
aas
dec
cmp
aad
or
lods
mov
mov
push
jo
xchg
cmpb
bound
and
sub
xor
or
loop
sbb
fistl
xor
mov
xor
loope
loope
sub
cmpsl
fdivl
stos
add
in
test
inc
int3
aaa
jge
test
cli
jnp
lcall
mov
roll
fs
addr16
clc
lea
jbe
xchg
mov
xor
out
jnp
rclb
push
test
adc
xor
sub
jl
push
addl
mov
test
loop
push
mov
push
out
cld
xchg
cltd
rol
xchg
adc
loop
mov
loope
fwait
mov
aas
fbstp
bnd
jns
pop
cs
stos
les
sub
mov
pop
sarl
and
mov
mov
std
into
jle
xchg
xor
idivb
xor
in
sbb
das
test
in
clc
mov
in
out
push
cmpl
ret
adc
push
xchg
mov
mov
scas
jbe
imul
dec
lahf
push
leave
sub
andb
and
mov
lock
outsl
lret
fidivrs
psllw
sbb
aad
lret
push
add
mov
fmuls
and
pop
aas
out
jl
nop
mov
nop
adc
aad
lahf
call
jl
sti
test
rorl
stos
ja
stos
sbbb
pop
mov
lahf
push
lock
roll
lahf
add
cwtl
lock
je
stos
sbb
int3
jbe
arpl
out
loop
stos
or
mov
mov
mov
mov
push
push
push
insl
xchg
rorl
xor
pop
fld
and
push
inc
and
push
stos
lret
outsb
xchg
cmp
mov
jg
iret
bound
push
cwtl
icebp
js
mov
movsb
out
mov
js
out
js
test
add
sbb
jp
cmp
mov
or
outsl
lret
push
add
adc
adc
push
mov
add
add
sbb
mov
cli
cwtl
ljmp
dec
and
data16
bound
fwait
cmpsb
jle
fstl
add
push
adcl
mov
loope
outsl
sub
rorl
cld
mov
xor
sbb
add
out
push
scas
adc
inc
mov
ficoml
jb
ror
xchg
je
mov
dec
fstpt
cmp
cs
inc
sub
sub
jecxz
pop
mov
out
push
pop
lods
mov
mov
clc
add
lods
les
and
jecxz
adc
dec
cwtl
lds
jge
push
ja
cltd
inc
sbb
xor
inc
xor
fisttpll
adc
insl
add
mov
aas
adc
inc
mov
mov
add
lods
add
push
add
xor
xchg
fprem1
dec
cs
xchg
ds
cmpsb
and
shrb
jns
shlb
daa
inc
int3
and
jnp
dec
aaa
xlat
push
jae
xor
mov
pop
enter
ss
jg
pop
notl
bound
pop
add
dec
inc
pop
fstp
les
xchg
repz
sti
inc
cmpsb
mov
mov
and
mov
jp
sbb
adc
sbb
inc
xchg
push
dec
fdivs
inc
fwait
add
sarb
adc
mov
sarb
jns
rol
xlat
add
lods
cltd
mov
lock
sbb
and
es
mov
pop
mov
or
pop
js
stos
fs
mov
push
adc
adc
xchg
jo
into
das
je
cmp
inc
sub
cmp
add
mov
int3
pop
push
sub
jmp
inc
pop
cmp
mov
dec
or
or
es
stc
push
mov
sub
in
mov
push
lods
mov
hlt
pop
notl
stos
inc
push
sbb
push
xor
and
jg
jne
scas
xchg
sbb
push
dec
ret
faddl
aas
clc
sbb
dec
ja
test
inc
jge
mov
mov
jne
cmp
push
icebp
imul
jmp
ret
xor
pop
sbb
jmp
add
jne
daa
repnz
in
outsl
xchg
movsl
ret
inc
fdiv
enter
fdivrs
bswap
cld
jbe
dec
or
jns
and
out
xchg
inc
aad
jmp
ds
stc
in
lds
cmp
mov
inc
loope
xchg
cld
and
lcall
mov
add
in
shrb
aas
xor
sub
or
in
mov
push
nop
mov
jae
shll
aaa
add
or
xchg
mov
in
stos
cld
bound
mov
movsb
dec
push
and
cli
stos
adc
cmp
gs
and
adc
enter
pushf
sbb
cmp
repnz
push
adc
aam
lock
xchg
mov
and
mov
lods
in
mov
std
pop
xchg
sub
mov
adc
mov
in
addr16
faddl
inc
fisttpll
mov
mov
push
mov
mov
mov
cmp
pop
scas
int
mov
sub
push
arpl
push
and
pushf
jnp
pusha
sti
cmpsb
pop
vmovshdup
mov
dec
adc
dec
das
jbe
xor
jae
movsl
mov
scas
in
test
inc
rolb
pop
and
mov
jbe
or
repnz
cmp
hlt
inc
movsl
sahf
fbstp
dec
dec
lock
loope
sahf
or
sub
movb
dec
aaa
es
loope
and
sahf
mov
lret
sbb
dec
cmp
aas
out
and
fxch
sbb
pop
add
pop
rclb
outsl
jge
push
or
pushf
std
lea
pop
push
leave
cmc
shl
mov
add
dec
insl
test
push
mov
cmpsl
cs
add
xchg
add
cli
jnp
sti
scas
mov
hlt
ret
pop
sti
or
mov
out
push
test
dec
pop
sbb
dec
stc
notl
daa
jb
sahf
sbb
std
out
add
addb
imul
mov
int3
sar
and
sahf
jmp
cmpsb
add
pop
jns
add
jb
movsl
lret
lahf
idivb
push
mov
push
and
pushl
cmpsb
aaa
cli
stc
sub
jo
cli
dec
ret
fs
push
movsl
mov
xor
cli
add
arpl
fmull
test
daa
xchg
das
movl
in
out
and
fdivrs
in
or
call
mov
fcom
lds
ficoml
out
adc
pusha
inc
bound
pop
add
inc
mov
clc
push
mov
cwtl
xchg
jo
cltd
fidivrl
mov
out
adc
psadbw
inc
scas
icebp
cmp
xchg
test
out
out
mov
jl
popa
push
arpl
sub
push
xor
xor
imul
jl
nopl
sub
sub
daa
add
mov
push
push
inc
mov
or
xor
icebp
add
add
out
jmp
out
dec
inc
in
gs
push
mov
cltd
iret
xlat
mov
add
inc
mov
nop
jle
xor
pop
push
and
xchg
push
movsl
add
mov
xchg
inc
jle
inc
jg
fisttpl
mov
mov
ds
rcl
mov
lret
or
cld
fisubrs
jo
mov
dec
rorl
addr16
xor
icebp
and
clc
lcall
mov
cmp
dec
pop
push
cmp
je
sub
das
sti
repz
mov
xchg
pusha
mov
lea
repz
aam
pop
sbb
cld
mov
and
jecxz
adc
mov
mov
adc
cwtl
lods
ret
adc
xor
ss
lcall
lahf
loope
xchg
jns
xchg
loopne
xchg
frstor
dec
leave
push
cwtl
pop
push
ja
js
ret
mov
cmp
jo
inc
mov
js
lcall
jle
adc
lret
mov
mov
fmul
je
enter
mov
add
push
cmc
push
xor
movsb
jb
cmp
xor
and
mov
mov
jns
movsl
ret
cwtl
cs
insb
inc
mov
aaa
pusha
test
push
adc
daa
into
insl
pop
into
js
push
movsb
ss
and
cmp
jae
das
arpl
addr16
jg
lahf
push
mov
out
or
and
addb
xchg
push
cmpsb
xchg
pop
aad
adc
sub
mov
and
sahf
jns
das
loop
movsl
mov
jne
mov
aas
mov
in
mov
pop
xchg
test
cltd
movsb
and
lcall
push
pop
xchg
adc
insl
adc
mov
arpl
pop
dec
dec
je
pop
sbb
es
inc
es
insl
push
iret
ficoms
dec
sahf
fs
push
mov
outsb
mov
test
inc
out
test
cmp
push
fsubrl
mov
jb
adc
out
pusha
clc
adc
rcrb
push
push
int
sub
lcall
fimull
out
outsl
aas
mov
rorl
push
rdpmc
std
rorb
popl
hlt
mov
les
test
icebp
cwtl
adc
cli
mov
insb
bound
mov
rcr
cwtl
ficompl
or
ficomps
mov
je
and
pop
push
clc
and
in
divl
sbb
jp
rcrl
sub
cmp
add
xchg
ss
mov
xchg
adc
movsb
dec
sbb
data16
dec
jb
lea
pop
mov
push
ret
or
cmp
adc
xor
sub
sbbb
ja
inc
mov
mov
mov
add
jp
adc
fs
adc
jno
daa
cmpsb
dec
dec
adc
jnp
pop
sbb
cmp
movsb
inc
ret
daa
bound
xchg
addl
loopne
dec
and
in
pop
or
add
negl
adc
pop
sbb
icebp
xor
push
imul
pusha
rclb
jne
mov
xor
movb
ror
div
std
push
mov
cmc
mov
pop
mov
mov
in
fildll
out
or
out
xor
mov
je
scas
fwait
push
inc
cmp
jg
test
push
aad
sub
sub
outsl
mov
hlt
sahf
xlat
lods
add
mov
test
jnp
jge
pop
jns
ret
xchg
lea
sbb
shll
push
sub
lret
add
fidivl
pop
inc
shll
sbb
inc
jno
out
jp
xchg
xor
mov
or
xchg
test
ds
mov
notb
xor
sub
and
ret
pop
daa
and
popf
subl
mov
sub
and
test
pop
and
pop
jmp
jns
or
mov
in
test
dec
cmc
in
push
lods
lds
sbb
outsl
mov
xchg
ljmp
cmc
shr
scas
xchg
fisubrl
mov
in
popf
pop
mov
or
pop
jno
sbbl
daa
int
xor
scas
adc
lahf
out
lock
inc
push
loope
mov
rcrl
or
mov
orb
je
lods
and
jle
xchg
inc
sbb
div
in
inc
adc
mov
adcl
addb
inc
rorb
pop
jg
xchg
dec
outsb
aas
repz
cmpsb
xchg
mov
call
cs
push
mov
jl
add
andl
cmpsb
cmp
lret
pop
jge
stos
inc
dec
mov
or
or
lea
mov
sbb
push
mov
pop
sbb
push
mov
add
clc
adcb
adc
or
pop
into
stos
lods
leave
fucomip
movsl
repz
mov
aam
sub
ss
lcall
stos
jl
call
inc
cmc
sub
sbbb
lahf
or
mov
inc
aam
push
cli
scas
dec
mov
fiadds
xor
outsb
push
repz
outsb
icebp
in
and
mov
imul
xor
gs
int3
out
sbb
das
lock
pop
mov
jge
mov
pop
adc
int3
in
imul
inc
mov
fsubl
fdivrl
cli
inc
ljmp
imul
js
loopne
mov
sahf
leave
dec
popa
pusha
push
mov
mov
xor
mov
mov
jo
imul
adc
jnp
pop
es
sub
popa
insb
iret
loopne
lret
mov
int3
sub
aam
xlat
loopne
mov
and
xchg
dec
jno
mov
push
in
fs
mov
imul
repz
jne
xor
cmpsl
into
out
testb
sbb
scas
ret
loope
push
pop
sub
sbb
les
sbb
outsl
dec
inc
mov
ljmp
lods
adc
push
sbb
hlt
mov
dec
and
aam
push
mov
and
das
push
incb
xor
jo
cmp
jb
jg
sti
jp
sti
gs
pop
push
add
cmpsl
lds
mov
xor
scas
mov
push
cs
add
or
repz
or
and
xchg
pushf
pusha
jbe
shl
rcrb
xchg
add
xchg
sub
adc
xchg
test
pop
leave
and
push
xchg
rol
cmp
scas
adc
fidivrl
adc
xchg
mov
inc
jnp
mov
jecxz
loope
and
xchg
es
addr16
aad
xor
outsl
rolb
sbbl
mov
add
jmp
arpl
mov
lock
popf
lret
mov
mov
addl
jmp
cmp
ljmp
push
sub
mov
cmp
dec
in
jmp
icebp
fcoms
sub
test
mov
pop
xor
shll
icebp
std
in
and
mov
cmp
js
inc
test
xor
cmp
stc
fninit
xchg
xor
or
test
and
lods
les
pop
cmpsb
jb
or
scas
add
sbb
sbb
cld
inc
cmp
mov
rcrb
sbb
insl
mov
sub
test
in
int
adc
shll
shrb
je
pop
test
push
leave
jecxz
popa
loop
cmpb
sbb
fdecstp
sub
je
xchg
mov
dec
sbb
call
add
mov
jns
add
fiaddl
enter
adc
js
pop
adc
or
push
xor
pop
std
xchg
pop
test
add
pop
jo
into
movsb
adc
loop
stos
fadd
mov
iret
sub
mov
imul
adc
sbb
mov
mov
jnp
icebp
js
sti
icebp
xor
mov
xchg
jns
jg
sbb
cmpsb
sbb
fstl
push
push
adc
pop
lahf
int
sub
lret
pop
cltd
popa
adc
movsb
mov
pop
imul
inc
cmp
lock
xor
push
cmp
in
mov
insl
pop
frstor
insb
adc
lds
mov
and
push
mov
jmp
dec
stos
test
loope
pushf
and
cmp
insb
add
jae
mov
jnp
out
dec
cld
mov
mov
and
mov
xchg
adc
sub
enter
nop
shrl
test
das
js
popf
push
fcmovnbe
add
and
iret
mov
stos
mov
lahf
inc
out
sbbl
mov
test
mov
fdivrl
icebp
xor
fs
cmp
jp
icebp
jmp
xor
cmp
mov
loop
push
lods
push
in
jmp
dec
ds
jbe
jge
sub
mov
test
aaa
mov
pusha
out
mov
sti
sbb
lds
leave
cmp
jns
lahf
jae
mov
rolb
push
roll
pop
sub
or
xchg
shlb
or
xor
push
adc
into
fwait
pop
xor
mov
cmp
or
lcall
push
aaa
in
cmp
inc
mov
inc
pushf
not
sub
ja
icebp
in
add
dec
jbe
cwtl
xor
aam
jecxz
jg
jecxz
sub
clc
mov
jb
nop
adc
dec
push
scas
outsb
inc
cltd
cmp
ret
test
inc
inc
lea
mov
and
and
jae
cltd
mov
cs
xor
jge
int3
sub
push
mov
leave
cmp
aaa
jmp
bnd
jle
aam
bswap
and
and
mov
ror
jns
les
insb
andl
nop
and
dec
pop
imul
jg
std
in
shl
dec
adc
push
ficompl
xchg
sbb
fidivrl
mov
sub
adc
sbb
xorb
popf
or
xchg
pop
push
pop
lock
test
outsb
test
mov
popa
popf
mov
jb
popa
imul
lods
cld
pop
mov
and
xchg
xchg
dec
inc
cmpsb
test
inc
cmp
jno
daa
push
mov
clc
cmc
xorb
push
mov
jp
fdivrl
ret
add
hlt
mov
sub
loop
mov
daa
push
cmp
cmp
or
in
bound
stc
in
mov
rcrl
cmp
push
movsb
xchg
jg
fnstcw
fcmovb
xchg
stos
movsl
jnp
add
xchg
add
jge
addr16
sub
add
mov
xor
ret
push
test
fs
repz
and
push
xor
xlat
jmp
jecxz
je
push
mov
xorb
leave
mov
mov
jmp
mov
and
push
mov
dec
mov
jg
std
bound
mov
fsubs
dec
xchg
dec
mov
out
orl
popf
cmp
pop
jp
movsb
lahf
add
hlt
addr16
xchg
out
divb
mov
sbb
cmpb
mov
xchg
fdiv
mov
loop
cmp
jae
and
push
int3
rcl
cwtl
push
popf
jmp
push
inc
das
add
adc
push
adc
test
daa
mov
and
mov
js
das
and
fs
mov
fistpll
xor
push
mov
mov
pop
xor
adc
in
dec
jl
adc
mov
rolb
xchg
push
sarl
pop
lds
cmc
rclb
add
push
cmp
jne
fsts
movl
cmp
xchg
bound
imul
es
or
push
pop
dec
sbb
jno
adc
loopne
fldenvs
dec
push
or
mov
mov
mov
hlt
adc
sarb
add
xor
insl
pop
xchg
sti
mov
sub
sub
push
mov
mov
cli
inc
mov
mov
xlat
outsb
mov
out
add
sbb
add
xchg
stos
dec
cmp
mov
scas
repnz
fbld
cmp
mov
cmp
fs
inc
icebp
xor
xchg
sbb
std
enter
fnstenv
mov
and
push
xor
xchg
lret
and
orl
in
clts
sbb
adc
std
sub
and
loope
mov
dec
in
inc
pop
sub
mov
jg
jb
lock
mov
lds
dec
pop
sti
sub
xchg
iret
xchg
push
adc
fisubrl
dec
add
test
or
add
jmp
out
or
enter
dec
addl
jno
xor
push
mov
fistpl
lcall
sbb
sbb
fscale
jl
jg
lods
push
jge
cmp
movsb
movsl
fcoms
mov
or
mov
pop
addr16
imul
stos
cwtl
in
mov
dec
add
push
dec
push
inc
xlat
fcoms
out
andb
sub
sbb
pop
fisttpll
inc
cmpsb
js
and
aam
push
mov
mov
pop
push
mov
clc
jae
xchg
lods
and
mov
jmp
push
hlt
add
pop
xchg
and
stc
pushf
cmp
in
pop
es
mov
inc
es
aas
jbe
enter
cmp
idiv
sbb
mov
mov
fs
or
dec
in
cmp
movsl
jmp
xchg
xor
xor
inc
adc
subb
js
test
mov
inc
cmpb
pop
jle
sbb
outsb
jle
stos
mov
jbe
mov
fbld
pop
mov
pusha
inc
mov
scas
pop
lret
mov
xor
push
sub
xor
dec
sub
jmp
movl
iret
and
inc
sbb
lret
xor
int
in
shll
jno
cmp
fdivrl
out
jge
mull
lret
jbe
addr16
and
xor
sub
dec
test
jbe
dec
lcall
sbb
jo
adc
cmp
add
cmp
push
in
mov
mov
pop
shlb
pusha
ret
add
xor
aas
inc
leave
repz
xor
mov
icebp
les
fisubs
iret
xchg
cmpl
daa
xlat
test
in
mov
add
hlt
fdivl
incl
cwtl
mov
xchg
test
ljmp
add
leave
sbb
shlb
in
mov
insl
arpl
nop
and
sbb
filds
out
orl
cmp
lods
sbb
jbe
push
sub
and
push
jne
jno
or
push
jb
jge
lcall
pop
mov
jb
jo
and
hlt
into
or
sub
sbb
jecxz
fcoml
push
xor
sub
xchg
jbe
and
jge
mov
jbe
push
stos
out
rclb
test
sub
icebp
mov
sub
jns
add
sbb
out
sbb
sub
cmc
outsb
stc
add
xchg
icebp
xchg
and
push
sub
jns
addl
pop
cmp
leave
shrl
sub
add
and
and
mov
add
scas
test
mov
dec
addr16
in
dec
pushf
add
icebp
sbb
pop
shl
pusha
in
xchg
mov
shl
jge
fcompl
insl
cmp
rolb
jno
push
dec
pop
dec
mov
orb
mov
sbb
jns
mov
fdivrl
cmp
out
pop
dec
xor
inc
cmp
jbe
rolb
test
sar
dec
sub
int3
int
popa
shl
and
sbb
ja
shll
cli
lods
iret
push
imulb
mov
aad
hlt
lcall
aas
adc
jmp
push
pop
mov
sti
movsb
cmp
sbb
inc
push
enter
mov
test
jge
cmpsb
jge
add
pop
and
jae
sub
cmp
fsubl
and
inc
fbld
push
call
sarb
jl
pop
or
jmp
shl
jl
dec
add
add
movsl
pop
push
pop
inc
lods
jne
inc
sub
ret
lret
rcll
shll
fs
hlt
xor
xlat
jl
cmpl
and
add
rcrb
or
pop
push
push
pop
ret
xor
dec
adc
cmp
stc
cmpb
mov
aaa
xchg
mov
sub
inc
into
outsl
mov
dec
pop
nop
imul
sti
inc
stos
inc
jge
sbb
mov
incl
sbb
push
push
jp
inc
xchg
insb
jns
pop
popf
adc
dec
cvtpi2ps
cmc
shlb
ss
and
add
int
xor
enter
sbb
fs
inc
push
xchg
sbb
les
push
add
jecxz
dec
jno
insl
mov
pop
repnz
cmp
sub
adc
sbbb
scas
dec
mov
adc
mov
xchg
ja
cmp
xchg
decb
das
stos
mov
fsubrl
pop
xchg
call
pop
cmp
hlt
mov
daa
les
outsb
pop
xchg
dec
scas
push
sub
shl
ret
and
inc
mov
iret
lods
sarl
dec
push
or
daa
jb
dec
or
cwtl
fcmovnbe
scas
popf
ret
dec
test
jne
adc
pop
mov
mov
scas
xor
sbb
inc
lret
add
fstl
and
mov
mov
stos
fistpll
pop
xchg
sahf
out
pop
mov
or
jno
push
push
lahf
adc
sub
sti
push
sti
mov
enter
mov
decl
loopne
rol
lock
push
aaa
xor
fcomps
imul
popf
in
mov
aas
push
les
jne
mov
mov
xchg
sub
inc
pop
jmp
js
cmpsb
rcl
push
movsl
mov
push
mov
sbb
pop
fnstenv
in
sub
inc
enter
jg
mov
and
dec
xchg
mov
sbb
stc
in
mov
xor
adc
cli
pop
js
jge
push
ret
jb
jns
bound
sub
pextrw
sub
icebp
lcall
and
or
in
mov
mulb
or
fwait
out
jo
xchg
and
mov
fsubs
aad
lock
sbb
pop
inc
popl
sub
xchg
fsubrp
mov
aaa
inc
jo
fwait
pop
jae
cwtl
or
mov
cld
and
insl
and
int3
sub
mov
mov
shlb
imul
mul
in
adc
add
adc
xchg
popf
cltd
inc
rorb
sbb
push
dec
adc
rol
mov
cmp
pop
push
data16
pop
nop
add
cmpsl
push
cmpsl
fists
bound
lea
scas
fwait
sub
pop
cmpsb
pop
iret
mov
out
stos
pop
pop
sar
lods
and
dec
lds
xchg
cmpsb
xchg
dec
sahf
insb
xor
stos
sub
inc
repz
dec
xchg
sbb
xchg
cmp
call
push
add
out
cwtl
push
xchg
std
or
push
push
iret
jnp
loope
xchg
mov
out
fldcw
xchg
cmp
cmpl
cmp
enter
loopne
stos
jle
jno
xor
cmpsl
mov
cld
mov
inc
pop
dec
inc
fsubrl
je
xor
std
shrl
fstpl
mov
and
test
shrl
dec
cmpsl
add
imull
jne
pop
mov
pop
xchg
cmp
sbb
cs
rolb
sub
or
mov
add
jg
movsl
outsb
sub
mov
mov
ficompl
fistpl
hlt
and
ss
int3
adc
repz
jg
pop
pop
cltd
loope
cmp
bound
cwtl
and
jg
ds
sub
in
mov
out
xlat
push
mov
adc
lods
xor
jbe
cld
dec
out
daa
jb
es
clc
mov
inc
mov
mov
cltd
jbe
movsl
imul
xorb
orl
pop
faddp
or
out
cltd
mov
xor
in
and
lods
and
xchg
and
inc
stc
jl
jb
shrl
cmpsl
cmpl
dec
pushf
jns
sub
pop
mov
cwtl
lods
xor
fstpl
mov
shl
mov
lret
jnp
pop
pop
jp
add
jmp
leave
jo
cld
add
outsl
inc
out
mov
push
insl
mov
adc
testl
jmp
push
mov
mov
repnz
jmp
cmp
scas
add
push
add
iret
addr16
imul
das
rcrb
inc
bound
stos
jno
jecxz
mov
das
dec
or
sbb
sub
xor
xchg
inc
mov
test
rcll
jns
inc
jnp
mov
cld
mov
call
fisubrl
add
js
movsl
sub
xchg
mull
jno
sbbb
jnp
push
dec
jecxz
mov
gs
inc
movsl
movsb
lods
fnsave
lods
data16
fisubl
out
loop
mov
into
inc
in
adc
out
xor
pop
adc
or
jae
and
xchg
dec
mov
xchg
scas
inc
sahf
push
addb
xchg
enter
fisubrl
outsb
arpl
lods
mov
and
push
lret
dec
xor
call
xor
mov
lods
imul
sbb
dec
aas
cmp
xchg
mov
jns
icebp
sub
inc
xchg
js
mov
sbb
data16
lock
dec
inc
xchg
pop
sbbl
dec
repnz
bnd
cmc
jb
sbb
test
lods
jge
subb
insb
int
das
lods
test
mulb
bndldx
lret
jg
mov
mov
inc
out
dec
jmp
rcll
jl
sbb
xchg
mov
lret
adc
pop
cmpsl
xchg
addb
mov
sahf
mov
call
sbb
clc
mov
mov
ret
and
inc
dec
and
xchg
push
lods
xchg
mov
and
or
jl
sbb
adcl
add
lods
iret
out
cmp
and
bound
fs
dec
jbe
inc
test
bswap
gs
daa
test
lods
mov
mov
push
cwtl
jl
fsubl
popf
sti
sbb
push
sarl
hlt
clc
mov
fs
cmp
dec
and
pop
xchg
hlt
outsl
imul
mov
in
push
xchg
inc
sarl
mov
repz
cltd
sub
xor
test
dec
dec
cmpsb
aaa
adc
arpl
sub
jge
sbb
int
jae
cld
dec
dec
mov
fwait
push
mov
enter
xlat
mov
cmp
inc
js
repz
aad
dec
loopne
pop
xor
popa
cmp
imul
loopne
cli
call
pushf
std
add
cwtl
stos
mov
icebp
fcmovb
xchg
fstpt
pop
mov
shlb
inc
add
pop
or
pop
or
cmc
movl
cmp
mov
sub
iret
test
jl
sti
loop
filds
push
jnp
add
dec
xor
loopne
in
sti
cli
clc
scas
lods
cmp
jle
pop
push
push
lock
insl
push
mov
push
clc
sub
jmp
test
sahf
pusha
dec
jmp
cmpb
js
popf
out
popf
gs
inc
mov
sub
inc
ljmp
fstp
mov
cwtl
push
pushf
inc
stos
fstl
dec
flds
aad
lret
mov
pop
xor
bnd
or
int
adc
idivb
xchg
insb
stc
sbb
clc
in
aad
adc
or
insb
ss
cmp
lods
xchg
imul
jl
loope
cli
jle
mov
xchg
add
ja
mov
out
mov
outsb
cmp
andl
ficoms
lds
fidivrs
insl
data16
sbb
mov
mov
pop
mov
scas
cld
jbe
cmpsl
imul
sub
testb
shrb
aam
ret
fisttpl
repz
push
xor
xor
stos
ficompl
repz
fildl
out
jb
fstl
pop
ret
dec
cmc
lods
pushf
sbb
fisubs
es
xor
cltd
jmp
mov
lret
adc
loopne
pushf
sti
divb
ds
push
aas
jnp
xchg
sti
mov
lret
and
cmp
lea
push
mov
in
aas
ds
sahf
inc
lahf
push
icebp
mov
xlat
dec
sub
cmp
lahf
mov
fwait
adcb
je
dec
rolb
nop
insb
mov
lock
ret
cmp
jne
incl
inc
jecxz
movsb
xlat
fildll
cmpsb
xchg
mov
arpl
pusha
testb
pop
cmc
dec
pop
push
or
and
xchg
fwait
sbbl
mov
push
fnstcw
mov
outsl
or
repnz
ret
add
sub
sbb
adcl
or
and
push
rclb
xor
fcomps
push
dec
out
xlat
cli
fsts
gs
cmp
lret
add
insb
cmp
roll
dec
movsl
subl
mov
dec
dec
inc
nop
imul
inc
pop
sarb
imul
loope
mov
call
idivl
xchg
insb
mov
insl
iret
inc
add
ret
sbb
sbb
das
test
outsl
lea
push
mov
sbb
imul
popl
sub
mov
fidivl
sub
sarl
mov
icebp
or
sub
psubq
xchg
mov
ds
push
mov
push
mov
or
in
cli
in
call
cmpl
rolb
pusha
insb
sarb
and
loope
mov
sub
lret
xchg
cltd
xchg
addr16
call
xor
imul
lds
ds
and
in
jne
incb
lds
cltd
mov
pop
orb
movsl
push
repz
lock
xor
imul
sarl
xchg
lds
or
add
push
sbb
push
mov
inc
roll
jne
loop
aad
lret
test
pop
lret
sbb
pop
push
dec
fs
dec
ds
mov
pop
xchg
lcall
das
pop
sbb
les
and
popa
sti
aad
imul
test
pop
call
loop
xor
ret
jo
and
in
notl
xchg
pushf
lds
push
jmp
aam
call
ljmp
ret
aaa
loopne
inc
out
in
pop
jno
mov
jnp
dec
or
jl
incb
mov
into
test
push
sti
add
mov
adcl
aaa
ja
js
dec
aad
cmp
lock
stc
sub
cmp
orl
push
mov
jp
mov
push
fisubrl
fldl
xchg
mov
adc
push
pop
ret
push
test
sarl
ret
je
ret
test
nop
xor
addr16
and
bound
popa
fs
push
orl
mov
dec
sbb
pushf
das
mov
in
cs
sub
push
pop
mov
inc
daa
int3
test
aaa
and
pop
aam
inc
xchg
call
popa
dec
xchg
cmpsl
dec
xchg
cmp
xchg
pusha
iret
shl
add
xor
sub
xor
negb
jns
rorl
xchg
rcrl
call
mov
je
xchg
loop
loope
scas
inc
pop
sbb
ljmp
jmp
mov
jge
cmp
mov
clc
cmp
shl
ds
pop
or
rolb
aaa
sbb
shll
cmp
jg
mov
xor
mov
sub
int3
dec
and
dec
mov
pusha
sub
jl
aad
add
stos
pushf
xor
push
adc
pop
jp
rclb
out
cwtl
jmp
adc
push
ja
xor
int3
adc
mov
sub
push
out
sub
in
or
test
subl
jb
mov
fucom
dec
jge
or
xchg
jl
or
in
pusha
ja
xlat
and
push
mov
mov
shll
dec
jge
inc
push
rol
addr16
dec
inc
mov
aaa
int3
sbb
fsub
fmul
push
add
jecxz
lcall
and
cmp
roll
movsb
and
push
ret
mov
sub
sarl
cmp
cmpsl
lock
mov
cltd
insb
or
lds
mov
idivb
dec
or
mov
dec
and
dec
push
popa
mov
arpl
iret
out
gs
sub
and
pop
loop
add
gs
out
mov
leave
sub
and
int3
sarb
jns
cmpb
adc
cmp
mov
jle
push
adc
push
adc
pushf
push
cmp
pop
or
push
iret
dec
mov
sub
adc
jae
pop
mov
fcoml
sbb
push
lret
xchg
imul
ret
jg
inc
mov
test
int
negb
incb
xor
add
or
ljmp
push
cmc
xchg
xlat
cmpsb
push
movsb
stos
cmp
idivb
jg
sub
add
ds
out
sbb
cmc
cmpsl
fdivr
xor
mov
add
int3
jb
sbb
or
jb
pop
sub
cld
mov
mov
cli
repz
sub
sarl
adc
cmp
and
inc
jno
mov
xchg
dec
rclb
stc
clc
es
xor
leave
sarb
jno
and
xlat
loop
and
test
ret
jp
iret
inc
addr16
adc
pusha
out
sub
sbb
aad
push
sbb
mov
sbb
aaa
imul
into
stc
out
xor
clc
or
lods
and
pop
scas
lea
pop
add
xorl
sbb
dec
mov
gs
jp
ret
pushf
mov
in
sub
stc
sti
in
inc
mov
mov
lea
or
jb
xchg
and
repnz
popa
sub
xchg
push
lea
pusha
mov
cmp
ret
mov
dec
iret
dec
push
shll
adc
movsb
pop
jne
push
sbb
xor
push
mov
hlt
inc
scas
pop
dec
sahf
xchg
mov
out
pop
mov
add
subl
popa
sub
mov
jae
add
aas
and
cmpsb
in
mov
les
js
hlt
iret
movsb
xor
mov
int3
lahf
and
in
js
pop
pop
rcrl
push
inc
pop
mov
sub
gs
iret
jns
and
mov
fcomi
xchg
xchg
fmull
xor
rorl
add
ret
jmp
mov
int
imul
dec
adc
mov
roll
imul
fisttps
sbb
dec
shr
xchg
push
jne
jne
push
lret
test
xor
dec
sarb
mov
xchg
shlb
cmp
jg
xor
test
and
sbb
dec
fisubs
inc
mov
mov
faddl
push
in
fmuls
and
sbb
and
xor
test
dec
testb
test
sbb
icebp
fwait
push
and
jge
adc
mov
add
addr16
pop
or
push
mov
call
xchg
loopne
dec
adc
push
push
adc
dec
fcmovnbe
in
mov
mov
lretw
cltd
cmc
pop
rcrl
pop
icebp
xlat
push
call
xlat
sbb
popf
dec
sub
cwtl
push
out
xchg
stos
mov
loope
xor
testb
xchg
cmpsb
les
arpl
xor
out
nop
add
enter
aas
cmpsl
add
lds
push
fwait
test
dec
popf
scas
es
fwait
sub
mov
and
out
int3
in
cmp
push
inc
repz
dec
addr16
sbb
mov
ret
ljmp
cwtl
push
addr16
icebp
imul
nop
or
jbe
adc
not
ficompl
sub
adc
inc
lcall
push
cmp
fstpl
in
gs
cmc
movsb
pop
adc
xor
sbb
xchg
ds
mov
psubsb
repz
mov
xchg
in
mov
pushf
test
rcll
call
xchg
scas
in
fildl
dec
repnz
jg
xor
fsubrp
out
test
lds
scas
or
jnp
fbld
fildll
or
pushf
lock
outsb
es
loopne
lods
repz
test
cmpsl
inc
pop
popa
lods
mov
mov
jmp
lds
shll
ljmp
sub
adc
enter
add
jb
shlb
ds
in
int
xchg
adc
push
inc
sub
lods
sub
bound
xor
fdivr
jg
jecxz
leave
dec
jo
mov
xor
icebp
out
jp
sub
clc
repnz
mov
shlb
dec
loop
dec
ljmp
outsl
in
iret
fsubr
adc
xor
sbb
xchg
push
jl
iret
xchg
xor
hlt
hlt
pusha
and
lds
and
xor
test
mov
les
cld
pop
cmp
ja
mov
mov
scas
mov
addr16
idiv
loop
pushl
adc
shlb
loope
dec
ds
xchg
ds
jge
pop
frstor
cs
popa
scas
out
scas
xor
mov
xchg
out
jl
add
push
xchg
stc
mov
ds
xchg
movsl
addr16
jo
lods
in
pop
dec
cli
popf
jmp
enter
mov
mov
icebp
out
mov
pop
outsb
mov
shlb
add
mov
push
dec
cld
sub
and
loope
dec
jp
adc
pop
clc
dec
push
push
adcl
int
sub
mov
lahf
inc
mov
movsb
inc
arpl
adc
cmp
jb
ss
or
pop
stos
and
push
stos
push
pop
cmpsl
cltd
dec
insl
test
mov
lds
sbb
mov
ss
sbb
push
or
int3
cs
shrb
adc
dec
push
imul
mov
dec
xchg
enter
sbb
ret
mov
sbb
sbb
shll
lods
mov
push
cwtl
dec
out
es
fistl
mov
push
stos
je
or
push
sbb
fsubrs
sbb
icebp
and
cmp
jno
sub
pop
push
insb
jle
popa
xor
out
cmp
lahf
xor
dec
dec
andps
idivl
fstl
xor
das
data16
dec
cmp
popa
cmp
int
xor
fiaddl
sti
mov
add
xor
fistpll
bnd
int3
jecxz
dec
dec
ss
inc
jo
scas
inc
mov
dec
fsubl
sub
shrl
add
lock
pop
das
xchg
push
mov
push
inc
fstpl
mov
xchg
cmp
push
mov
cmp
bound
push
ret
out
cmp
xchg
addb
mov
fxch
push
mov
nop
mov
cmp
data16
lods
loope
bound
adc
push
into
movsb
add
scas
xchg
inc
push
cmp
lds
push
into
sbb
ret
and
gs
and
mov
add
adcl
adc
bound
test
out
xor
add
das
ret
pusha
xor
nop
popf
pop
shr
add
sti
adc
jnp
cmpl
sti
sbb
adc
cltd
out
sbb
add
sub
jae
fnsetpm(287
inc
maxps
lret
mov
xor
lret
stc
stc
mov
mov
popf
pop
and
into
push
pop
pop
cmc
mov
ss
fdivrs
call
mov
mov
cmp
pop
mov
test
jbe
add
daa
push
in
push
punpckhdq
push
gs
jp
and
pusha
idivb
fcomp
add
fwait
test
cmp
mov
sub
jns
add
mov
sub
xchg
cmp
push
dec
xchg
push
dec
insl
mov
imul
mov
cwtl
xchg
and
dec
add
push
sub
ror
inc
lds
jne
or
mov
loope
fwait
lcall
inc
data16
add
xor
fldcw
adc
movsb
and
pop
mov
cmp
push
lock
fimuls
cmp
daa
pop
cmp
adc
imul
push
imul
mov
mov
jecxz
out
repnz
fistpll
push
out
arpl
cmpsb
in
je
xchg
int3
mov
mov
xor
xchg
pop
fsub
xchg
jle
xchg
dec
aaa
xlat
imul
pop
movsl
xchg
popa
pop
or
dec
data16
movsl
fisubl
adc
iret
xor
rcrb
lea
out
nop
sub
pop
fiaddl
into
xchg
or
or
clc
out
pop
loopne
push
xchg
aam
adc
aas
sub
dec
push
jns
or
pusha
out
dec
imul
adc
mov
mulb
les
lock
hlt
mov
jne
sbb
hlt
mov
enter
dec
xchg
rclb
arpl
sbb
movsb
mov
pop
dec
nop
cli
cmp
es
xchg
popa
xor
stos
sub
sbb
aad
jbe
mov
aam
push
cmp
add
cli
scas
jg
mov
shrb
rorb
push
fdivs
push
cwtl
adc
push
int
sub
out
cmp
insb
idivb
mov
incl
cmp
cmp
and
rsqrtps
cld
dec
push
mov
sbb
jg
push
pusha
push
pop
test
push
sub
sub
and
sbb
pushf
cld
sbb
push
popa
pop
out
shl
xchg
jl
mov
das
fisubrl
lods
fsubrl
decb
aad
jge
and
cli
cld
test
mov
inc
and
ds
addr16
cmp
mov
js
daa
sti
sbb
andb
jg
push
add
shlb
push
aam
mov
mov
jns
mov
push
dec
clc
dec
jns
push
fcomps
and
sbb
cmp
mov
stos
push
inc
xor
aaa
out
mov
les
mov
paddusb
push
mov
stos
and
outsl
sub
test
ljmp
repnz
sarl
inc
jecxz
sub
arpl
add
pop
das
mov
mov
js
push
scas
clc
test
repnz
cmp
cmp
lahf
out
mov
sarl
push
cmc
enter
mov
jmp
pop
jb
loopne
mov
xchg
idivl
cmpsl
out
mov
dec
lock
cmp
movsl
cmp
push
insb
inc
aad
pop
xorb
jmp
in
pop
sti
sarl
jmp
or
ja
mov
pushf
mov
mov
stos
xchg
test
fistl
add
push
sarl
ss
js
mov
das
aad
cmp
jp
mov
xchg
mov
add
sub
mov
enter
sbb
mov
insb
jbe
rolb
jne
fildl
pop
sub
mov
adc
fld
dec
shll
es
loopne
add
push
imul
push
mov
leave
shl
lea
xchg
inc
sbb
and
ficoml
jbe
dec
dec
mov
jno
data16
negl
sbb
movhps
or
jno
mov
mov
sub
cs
repz
outsb
adc
add
les
pusha
push
dec
stos
bound
out
fs
rcl
pop
jo
pop
mov
mov
insl
jl
test
inc
ret
pop
jecxz
mov
jl,pt
andb
rcrl
dec
add
push
sbb
fwait
dec
imul
sub
dec
pushf
outsl
sub
imul
inc
mov
sbb
ljmp
sti
or
sub
sub
in
loope
fldenv
push
xlat
add
lret
mov
leave
jb
or
mov
popf
mov
enter
popa
inc
mov
xor
rcll
and
stos
lahf
mov
daa
cmpsl
mov
push
loope
fldenv
jno
aaa
les
dec
and
bound
lods
inc
hlt
pop
rorl
pop
gs
aaa
jne
pop
add
jg
jle
addr16
inc
icebp
sub
fistpll
repz
cmp
adc
lock
mov
in
sbb
repz
xor
pop
stos
addr16
scas
push
cli
les
lret
xor
add
testb
xchg
insb
push
sbb
add
push
or
aas
inc
rcrb
sahf
xchg
ss
or
add
adc
rolb
mov
cmp
inc
xchg
ror
pop
inc
repz
push
aas
sti
shrb
cwtl
pop
movsb
sbb
sub
nop
adc
loop
bnd
fistps
lret
shll
dec
das
insl
dec
shl
fiadds
sub
xor
inc
add
mov
ljmp
mov
adc
jmp
roll
loopne
sub
push
push
add
clc
jecxz
das
lret
ds
jp
cmp
sbb
dec
adc
xchg
call
add
xor
or
pop
pop
mov
sbbb
lods
sub
push
test
push
int3
pushf
jns
push
fsub
mov
out
mov
jg
jecxz
ss
aas
stos
into
sbb
add
xor
sbb
ret
cmp
dec
inc
inc
lea
pop
scas
stos
sbb
jne
xorb
adc
fs
sbb
mov
rclb
and
aad
mov
jae
inc
shrl
xor
push
bound
pop
addb
adc
data16
cmp
sbb
mov
jns
rcr
jno
lods
push
mov
stos
outsl
hlt
sub
in
loop
mov
pusha
jg
pushf
push
and
sarb
addr16
pop
xchg
insl
cmp
in
sbb
fldcw
pop
push
bound
cmp
or
fistl
int
mov
imul
jno
pop
cmpb
xchg
pop
mov
enter
outsb
mov
push
mov
hlt
or
inc
xchg
mov
mov
rcll
xchg
xor
add
call
pop
cmpsl
push
or
dec
outsb
idivl
sbb
sbb
sub
cwtl
test
sbb
lcall
push
lret
or
mov
aas
in
insb
jl
movsl
gs
sub
inc
cs
xchg
out
shlb
cltd
jg,pn
loope
mov
pop
add
cmp
dec
lods
cmp
adc
sbb
xor
cmpl
push
xor
repz
push
mov
sbb
ret
ja
popl
cmpsl
xor
ljmp
sub
push
and
imul
sub
lea
call
ja
sbb
mov
inc
negl
inc
nop
pop
test
and
add
xchg
jnp
mov
movsb
incl
nop
testb
les
arpl
fidivl
push
mov
ds
lcall
js
pop
dec
ret
movsb
decl
xchg
gs
or
cmp
mov
adc
ss
push
loop
dec
ret
pushl
push
cmpsb
and
das
push
pop
jbe
xor
cmp
pop
lods
mov
fiadds
jmp
add
xchg
int
nop
mov
mov
cmpsl
mov
sbb
push
rorb
call
test
jno
inc
notb
or
test
inc
mov
or
fucomi
mov
sti
xchg
pushf
cmpsb
lahf
dec
mov
loope
xchg
fildl
jbe
jp
aaa
pop
mov
mov
sahf
enter
pop
addr16
xchg
pop
test
cmp
mov
push
stos
xor
iret
test
sub
dec
mov
out
adc
or
adc
mov
movsl
cmp
sbb
sbb
lds
add
xchg
aam
fcompl
lock
bnd
add
lcall
out
out
cwtl
mov
mov
mov
mov
ja
pop
lret
stos
lods
movl
fnstcw
mov
adc
push
jb
and
out
or
sbb
cmp
jnp
into
int
cli
cli
mov
mov
jecxz
sbb
pop
adc
dec
dec
lea
mov
xchg
or
out
in
test
subb
fwait
mov
inc
sbb
sub
mov
cmp
cmpsl
leave
pop
jno
mov
int3
sub
pop
cmc
adc
cmp
jge
sti
movsb
stc
js
imul
xchg
shll
lods
dec
test
jmp
push
orb
dec
jmp
pop
cmp
pop
int
fstpl
sub
fucomip
jb
or
lahf
aas
adc
xchg
cltd
out
cmp
imull
dec
pop
sub
push
sub
cmp
ds
mov
sub
pop
xchg
in
rcrl
repz
add
push
mov
out
repnz
loopne
mov
ds
cmp
je
loopne
xlat
and
fcomip
aas
xor
inc
sub
arpl
jl
dec
stos
std
jge
add
jmp
pop
int3
out
dec
lock
add
adc
shlb
int
popa
ret
sub
aam
je
call
scas
int
jno
xchg
lret
notl
pop
pushf
lahf
inc
mov
cmp
or
push
in
pushf
and
lods
scas
mov
jmp
jno
jb
lods
outsl
repnz
in
push
sub
nop
mov
add
data16
lods
int
mov
idiv
dec
inc
push
jno
mov
stc
push
je
cmp
dec
jbe
insb
adc
cmp
xorb
sub
nop
xor
dec
xor
stc
inc
jns
jnp
pop
push
mov
inc
fstpt
xchg
fnstcw
lock
jb
adc
rclb
mov
or
mov
xchg
pop
inc
jbe
shlb
mov
movsb
repz
pusha
mull
movsb
dec
inc
gs
es
ljmp
inc
mov
loope
jecxz
adc
xchg
out
xchg
arpl
dec
push
cmp
adc
push
aam
xchg
dec
pusha
cld
add
fimull
fisttpll
mov
jnp
in
gs
xchg
sbb
cmp
xchg
jl
lret
in
aas
jecxz
cld
sub
sahf
or
imul
das
jmp
pop
push
add
adc
lods
out
shrb
test
std
pop
out
sbbb
lods
and
dec
fwait
shlb
movsb
sub
ret
pop
enter
ja
jl
es
fcompl
sbbl
xor
cmp
es
lock
inc
xor
sub
inc
movsl
clc
scas
xchg
jne
sub
in
js
ss
ds
mov
push
lret
movsl
test
xlat
and
push
cmpsl
addr16
cmp
jecxz
out
or
fistpl
test
jne
xchg
xor
xchg
jl
insb
mov
mov
xor
dec
sbb
sbb
adc
xchg
and
mov
xor
arpl
jo
cmp
loope
xchg
sub
xchg
sbb
mov
loop
imul
loope
xor
shll
pop
pop
in
fimull
clc
cmp
subb
jo
andl
insl
sub
mov
and
xchg
ret
mov
mov
push
adc
movsb
es
pop
jae
sub
mov
xor
xchg
aaa
lods
sti
insb
imul
in
mov
aaa
ret
lret
dec
pushf
push
int
iret
mov
mov
stos
lock
iret
sub
mov
jle
jge
jecxz
movl
mov
addr16
cmpsb
sub
xchg
inc
jne
pop
lock
stos
ret
in
mov
xor
sbb
fdivr
xor
dec
add
xor
daa
sbb
out
add
aad
mov
mov
sarl
mov
or
cmp
xchg
mov
loope
xor
sbbl
sub
jmp
or
shll
jmp
jbe
hlt
lcall
fidivrs
dec
ds
inc
mov
stos
clc
xchg
movsb
dec
sbb
mov
pop
repnz
mov
popa
cs
adc
pusha
pop
lods
std
inc
sti
inc
std
pop
jo
pusha
pop
insl
mov
mov
cmp
pushf
pop
mov
fsqrt
dec
popa
lea
jl
mov
test
mov
stc
mov
ds
xchg
and
add
fisttpll
popa
add
ret
adc
pop
add
in
popl
iret
out
and
inc
xchg
aas
cs
or
inc
movsb
daa
mov
mov
gs
xchg
dec
repz
sbb
andb
adc
add
aam
mov
fdivrs
dec
xor
subb
mov
sbb
pop
scas
dec
push
mov
hlt
int3
fsub
inc
addr16
fdivs
mov
bound
addr16
lret
inc
jo
cmc
and
jo
jns
mov
pmaddwd
pop
sbb
lret
mov
lea
jb
testb
ret
cmp
or
pop
popa
lret
jmp
cmp
add
inc
inc
mov
fsts
aam
data16
loop
push
jecxz
jmp
lds
rcr
mov
sbb
jg
je
insl
clc
loope
addb
pop
dec
stc
imul
push
push
int3
mov
dec
imul
ja
sbb
inc
out
and
scas
mov
mov
repnz
lahf
lods
xchg
out
repz
or
cmp
mov
mov
outsl
mov
sub
in
sbb
dec
fwait
out
andb
test
add
inc
popf
stos
imul
jb
mov
sub
lock
int3
fs
sahf
cmp
sbb
push
into
sub
xor
jl
out
andb
xchg
xor
out
push
stos
popa
sti
mov
xor
lods
int3
out
dec
stc
inc
jne
inc
jbe
cmpsl
repnz
and
imul
fidivrl
incl
xor
pop
mov
mov
inc
mov
pushl
mov
insl
fs
pushf
lcall
and
fwait
add
or
sub
out
inc
clc
out
andb
pop
cs
lock
testl
fstps
xchg
mov
mov
sti
sbb
js
mov
xchg
cmp
jns
outsb
sbb
repz
in
push
xchg
loope
and
in
or
sbb
stos
jno
int3
ret
js
mov
popf
std
addr16
sbb
imul
add
and
xchg
movsb
mov
jmp
and
and
out
dec
cmpsl
ds
data16
xor
roll
mov
out
xchg
scas
cltd
jbe
add
cli
call
dec
loope
dec
mov
inc
cld
ficomps
pop
inc
je
rcrl
clc
push
in
mov
cmp
dec
dec
mov
ret
xor
stc
mov
movsb
adc
cmp
jno
or
nop
push
popa
sub
adc
outsb
sti
mov
jp
into
out
mov
mov
sbb
mov
sarl
pop
mov
cmp
or
inc
cmp
pop
jle
xchg
rorb
shlb
repnz
cs
mov
mov
cltd
xchg
mov
mov
jg
std
inc
hlt
movsb
xchg
push
mov
ret
adc
bound
mov
aad
jno
test
xor
pop
std
daa
cmp
divl
les
pop
sbb
fdivrl
daa
adcb
cmp
cltd
mov
cmp
and
bound
and
bnd
stos
cmp
addb
pop
mov
cli
cmp
idivb
je
cltd
adc
jmp
loopne
seta
and
push
jns
out
jne
pushf
pop
and
ror
orb
subb
in
xchg
nop
add
xor
mov
lret
sarb
pop
mov
and
rol
cmp
jg
sub
test
in
mov
sbb
inc
outsl
pop
lret
mov
in
cmp
cmp
push
pop
loope
bound
pop
push
mov
leave
popf
mov
mov
addl
movsl
repz
add
cmp
outsl
xchg
push
pop
push
fcomps
lret
in
mov
cmp
call
push
push
push
repnz
jae
or
in
cltd
add
cltd
jge
jge
dec
cmpsl
pop
test
mov
cwtl
mov
add
xchg
push
dec
int3
jg
fstl
jmp
mov
mov
mov
dec
outsl
loopne
push
mov
imul
in
or
test
lret
and
imul
in
sub
icebp
add
out
pop
xchg
mov
repnz
jmp
es
in
inc
and
aad
mov
lret
loopne
rorl
scas
inc
out
in
cmp
inc
ret
dec
scas
out
sarb
test
arpl
sub
adc
jns
outsl
iret
cs
arpl
sbb
and
dec
inc
cmpb
pop
ds
in
add
sbb
jmp
mov
sbb
in
cmpsb
adc
loopne
in
adc
scas
sbbb
ror
in
loop
pop
mov
lret
mov
or
xchg
test
fdiv
ds
sbb
jl
std
je
sbb
jo
mov
mov
mov
jmp
mov
lods
idivb
in
std
fcompl
pop
loopne
mov
movsb
cmpsb
mov
jecxz
mov
icebp
xor
lahf
dec
lock
push
loope
or
and
dec
imul
bnd
pop
adc
movsl
pop
movsb
insb
pop
das
mov
daa
mov
inc
leave
cmpsb
ret
xor
xchg
ret
ljmp
xlat
bound
jb
cltd
dec
insb
and
push
fisttpl
mov
addr16
lret
dec
cltd
inc
negl
mov
xorb
xor
fwait
adc
fists
sbb
lds
sahf
dec
lods
ret
add
test
jecxz
mov
aaa
test
cmc
mov
arpl
aas
mov
inc
xor
add
add
or
cmpsl
in
scas
ja
rcl
pushf
in
fcoms
lahf
loope
adc
cmp
mov
sbb
mov
pusha
and
pop
mov
das
mov
mov
orb
push
aad
sbb
or
test
movsb
out
imul
iret
jmp
sbb
dec
adc
cmp
jbe
fnsave
lahf
int
shl
sub
inc
mov
jmp
sbb
loopne
inc
jae
stc
pop
xchg
mov
pop
imul
into
imul
mov
mov
notb
pushf
push
test
pop
jmp
inc
pop
or
std
cmp
bnd
in
test
mov
into
pop
adc
cmp
jle
sub
subb
xchg
fimuls
mov
addr16
and
outsl
xchg
pop
and
and
scas
stc
jae
data16
adc
mov
cld
jo
daa
mov
dec
insb
pop
pop
int3
stc
insl
inc
dec
addr16
sti
and
xchg
sbb
lods
adcb
int
popa
adc
out
xlat
lea
mov
into
add
mov
mov
push
dec
test
add
sub
data16
movsb
xor
add
jmp
cmp
mov
push
mov
xchg
mov
leave
mov
sbb
cltd
dec
insl
cmp
outsb
movsl
sbb
jne
mulb
out
pop
hlt
outsb
sub
add
cmc
cmp
push
cmpsl
xor
mov
repz
jmp
xlat
stos
ret
xchg
jmp
pop
sub
xchg
mov
push
cmc
push
pushf
mov
jp
mov
in
scas
jecxz
push
push
imul
in
clc
jge
or
ljmp
cmp
jnp
js
lahf
cmp
mov
sar
les
mov
insl
cmpsl
mov
aad
lahf
arpl
and
add
and
test
notl
lret
outsb
lods
mov
lds
push
popf
mov
mov
adc
cmpsl
clc
popa
mov
outsl
outsw
xchg
jne
mov
pop
dec
or
icebp
into
push
or
psraw
mov
test
mov
daa
xchg
xchg
mov
in
sub
or
lret
lret
mov
push
cmpsl
cwtl
fs
and
add
or
or
mov
inc
sub
popa
sub
jmp
pop
mov
gs
cmp
jns
adc
aaa
sbb
and
addr16
cmpsl
dec
loope
dec
sbb
jp
dec
fisttpll
jmp
jle
icebp
ret
bound
sti
ss
pop
bound
pop
and
pop
push
imul
mov
xchg
hlt
add
cli
inc
sub
sbb
and
pop
and
mov
cmp
dec
sbb
ja
inc
jle
cld
adc
and
ja
lea
in
or
push
jecxz
inc
dec
ret
lock
dec
mov
in
rcrb
mov
xchg
arpl
mov
daa
les
fimuls
pushf
mov
jae
stos
pop
daa
lret
mov
xor
mov
jecxz
ljmp
leave
mov
movsl
negl
nop
out
test
jg
xor
pop
push
inc
xor
xchg
negb
and
divb
xchg
mov
stos
xchg
jl
pop
mov
jmp
jb
aam
outsb
iret
aam
push
push
faddp
movsl
rorb
mov
test
test
dec
or
dec
mov
pop
cmp
fwait
js
or
and
xor
in
imull
pusha
icebp
and
jb
cmp
stc
dec
lcall
mov
sub
cmp
pop
and
insl
sar
rcrl
iret
fucom
cli
rclb
inc
fwait
inc
xor
pop
jo
xor
cmpsl
push
enter
test
int
shl
push
aam
add
loop
int
das
notb
and
pop
insb
int
pop
mov
out
out
or
call
hlt
jnp
add
pushf
rol
jmp
jmp
mov
adc
ficoml
data16
pop
ds
sahf
pushf
hlt
add
cmp
sbb
std
aas
sbb
mov
mov
sti
rcrl
xchg
sti
sub
icebp
enter
sub
pop
pop
mov
in
int3
fs
and
repnz
inc
pop
mov
push
xchg
mov
out
push
pushf
in
inc
mov
sub
clc
mov
jecxz
push
gs
sti
nop
or
js
cli
andl
cwtl
cmc
js
xchg
loope
sub
dec
xchg
mov
rorb
in
mov
arpl
arpl
push
push
push
push
nop
jmp
xchg
fisubrl
pop
sti
mov
cmp
jle
sub
pop
mov
adc
fwait
push
and
shlb
jbe
sbb
mov
mov
cli
sbb
cmp
mov
repnz
fisubs
insl
mov
jne
arpl
hlt
cwtl
jmp
cmc
jge
loope
arpl
sub
mov
pop
add
hlt
sub
cmp
and
inc
jg
xchg
push
sbb
and
lods
inc
adc
mov
xor
xchg
pop
adc
jno
leave
sti
ja
lret
dec
adc
and
xchg
cli
mov
jns
add
lret
mov
dec
and
divb
pop
inc
insl
xchg
cld
pusha
sub
gs
mov
fldz
daa
stos
or
icebp
aaa
and
stos
test
mov
hlt
cmpsb
inc
lds
fsubl
inc
dec
mov
hlt
ss
bound
mov
or
mov
loopne
xchg
lds
push
mov
mov
enter
xchg
ret
jecxz
movsl
push
xchg
lahf
inc
jg
int3
es
push
aam
and
stc
jg
jb
rcl
adc
and
or
and
inc
mov
ficompl
mov
mov
jbe
dec
cmpsl
test
fldt
lcall
out
je
popa
imul
lea
adc
mov
mov
out
lods
int
aam
test
xchg
mov
push
mov
hlt
mov
daa
out
and
mov
arpl
repnz
dec
ss
out
adc
cwtl
lcall
pop
scas
push
mov
sbb
mov
aam
ja
xor
pop
cld
ds
and
stc
cmp
mov
and
inc
dec
xor
mov
jl
mov
cmp
pop
mov
cltd
xchg
push
push
mov
insb
test
dec
mov
pop
rolb
and
push
cmpsb
and
sbb
add
sbb
insb
and
jae
jp
or
js
xchg
in
lods
fldl
push
int3
push
aas
xor
or
mov
xchg
sarl
jae
fs
push
cmp
stos
outsb
xchg
fdivr
sbbl
pop
mov
cmc
jnp
and
xchg
xlat
jg
inc
cwtl
push
notl
jae
and
adc
ret
fwait
mov
push
and
test
or
mov
imull
and
cmp
cmp
add
sbb
test
test
push
movsb
sub
mov
mov
imul
jno
mov
nop
aaa
jb
fnop
ljmp
stc
pop
or
in
xor
add
out
std
shr
sbb
inc
cltd
cmp
imul
jecxz
mov
xor
mov
in
movsl
call
mov
daa
loopne
jmp
das
mov
lcall
cs
jmp
jne
mov
xorb
mov
mov
mov
jno
mov
sbb
je
add
sbb
popa
test
and
aaa
inc
and
dec
mov
cltd
addr16
or
hlt
ficompl
hlt
mov
mov
mov
pop
mov
sbb
dec
dec
sub
repz
insl
leave
xlat
inc
inc
pop
jae
push
ds
fwait
sub
flds
cltd
sbb
lea
inc
add
lock
cli
sbb
inc
and
lea
lahf
and
sbb
ds
pushf
inc
hlt
mov
and
cld
pop
ret
rcll
lret
clc
add
adc
aam
in
fs
sub
push
sbb
mov
dec
pop
inc
xorl
inc
adc
pop
mov
mov
add
xor
push
adc
icebp
xchg
fs
inc
and
insl
sub
xchg
mov
sbb
dec
out
and
loopne
je
mov
enter
js
add
lea
fisubrs
fdiv
shll
push
push
stos
adc
cwtl
lahf
out
sti
ret
sbb
or
dec
lahf
or
push
mov
sub
add
repnz
adc
mov
lahf
xchg
or
add
stc
push
jmp
mov
sbb
jns
ss
les
mov
pushf
outsb
movntps
ret
shlb
adc
cmpsb
cltd
addr16
sub
das
and
imulb
outsb
sub
test
add
dec
repz
xchg
push
test
mov
stc
mul
mov
pop
xchg
and
push
out
jb
aam
xchg
cmp
xchg
rclb
push
pop
ret
push
push
int
gs
cmp
je
mul
jmp
add
xchg
lds
ficoml
fisttpl
idivl
int
jp
cli
xchg
shl
scas
jp
insb
jns
add
or
xlat
icebp
xchg
ljmp
fs
mov
dec
insb
ljmp
push
push
fdiv
sbb
adc
jo
cmp
xchg
sti
add
add
ret
lret
rorl
xor
mov
adc
divl
xor
inc
xchg
loopne
sti
into
add
mov
cld
dec
sub
or
clc
lret
xlat
sbb
jno
pop
sbb
loop
jmp
push
out
or
add
inc
es
pusha
cmp
sar
mov
clc
arpl
ficoms
push
dec
daa
mov
cmpsb
lea
sub
das
pop
and
ficomps
ds
shr
popa
orl
shl
push
pop
sub
xchg
xchg
aaa
aad
and
mov
jge
push
sbbb
push
js
daa
scas
cmp
into
sbb
jo
adc
clc
test
or
xchg
pop
std
mov
icebp
out
jg
xchg
inc
in
mov
movsl
jecxz
inc
fwait
lods
mov
adc
int
mov
jmp
movsl
sbb
dec
dec
aaa
dec
mov
push
dec
lea
aas
push
mov
in
arpl
xchg
int
sbb
and
inc
in
cmc
repz
jge
push
pop
push
test
popl
rol
arpl
lret
js
pop
aam
sbb
jecxz
mov
cmp
sbb
xor
addl
out
xchg
mov
testl
adc
cmpsl
lods
iret
and
mov
imul
xchg
out
outsb
aas
sub
mov
sbb
cmp
jo
repnz
daa
ss
packuswb
pop
cli
stos
frstor
rolb
mov
dec
dec
xor
fmull
xlat
pop
shrl
pusha
shrb
and
xor
leave
pop
mov
lea
or
cmpsb
jmp
pop
push
mov
data16
and
aas
test
cwtl
popf
mov
jp
and
mul
pop
inc
outsb
lahf
out
lret
imul
jnp
mov
sbb
roll
adc
push
ds
mov
daa
lds
sbb
pop
mov
bound
sub
dec
decb
fwait
jle
or
pop
push
arpl
add
dec
mov
popa
inc
pop
xchg
and
push
cmp
sub
jmp
inc
and
jns
mov
and
sub
cmc
stos
in
push
mov
gs
hlt
xchg
inc
lods
mov
daa
pmuludq
mov
mov
inc
dec
and
cmpl
mov
mov
movsl
mov
xchg
jg
inc
dec
addr16
pusha
push
shrl
sbb
lret
mul
sbb
mov
test
sub
inc
out
and
pop
jp
shlb
mov
pushf
sub
pop
lea
cmp
sub
jb
xchg
push
push
jae
popf
in
lcall
sub
fisubl
inc
mov
or
add
das
pop
mov
push
fadds
xor
cli
fs
cmp
pop
push
insb
or
negb
aaa
mov
ficoml
adc
orl
ficoml
adc
cwtl
iret
jmp
or
les
int3
imul
sbb
imul
or
stos
push
leave
xorl
mov
outsl
xchg
lds
mov
dec
test
push
jmp
jge
repz
pusha
xchg
and
jmp
mov
mov
or
adc
jge
sbb
mov
inc
sbb
popf
aaa
adc
cli
test
pop
mov
ret
xchg
test
pushf
in
cmpsl
leave
inc
mov
add
mov
dec
jecxz
xchg
inc
ja
cmp
movsb
sbbl
xor
cmp
lds
jle
sub
mov
lock
inc
mov
mov
mov
imull
and
adc
jo
mov
or
jnp
mov
scas
sub
rcl
test
fwait
xor
sbb
out
sbb
out
loope
test
in
cmpsl
popa
mov
into
addr16
mov
std
or
out
or
pushf
je
clc
icebp
push
movsb
xchg
sub
int
mov
fldt
movsl
and
and
or
xchg
mov
int
pushf
ds
jns
add
sub
lret
lds
sub
popa
push
popf
outsl
stos
sti
clc
test
push
xchg
adc
iret
movsl
outsl
jg
adc
js
gs
movsl
fwait
cmp
cltd
daa
outsl
shll
test
insl
or
and
iret
stos
cltd
cld
adc
ja
mov
jmp
enter
jns
rorb
test
jo
xchg
mov
cmp
xchg
rorl
frstor
jl
movsb
jne
loope
mov
repz
mov
sbb
sub
fwait
or
xchg
fidivl
mov
cltd
movsb
fdivp
std
mov
jp
push
jmp
cs
mov
movsb
jle
add
pop
cld
lea
pop
clc
xchg
sti
popf
mov
cmpsb
jecxz
push
or
out
fldpi
jmp
adc
mov
cmp
jecxz
mov
mov
fldenv
jmp
das
nop
push
xchg
dec
je
mov
mov
push
shlb
jbe
adc
divl
fst
nop
std
pop
xchg
jmp
mov
int
and
push
and
mov
pop
cmc
xor
mov
shrb
push
cld
scas
aad
in
jecxz
sbbl
out
or
sub
adc
adc
adc
outsb
mov
dec
sbb
jnp
call
pop
mov
adc
popa
and
sbb
xchg
cmp
or
pop
push
in
sbb
xchg
test
mov
fistl
mov
cmp
loop
push
aaa
mov
fcmovnbe
mov
add
out
mov
add
mov
mov
test
xchg
jg
jle
nop
xchg
lods
jb
push
xchg
push
andl
mov
fnstcw
loop
bound
pop
xchg
xor
popa
repz
out
call
jns
cmc
fchs
cs
mov
xchg
sub
jmp
popa
mov
mov
bound
loopne
xor
enter
sub
adc
or
adcb
hlt
clc
mov
sub
mov
fcomi
mov
xchg
ja
push
and
nop
mov
or
mov
add
push
sahf
pop
sub
inc
jecxz
mov
inc
and
insb
bound
mov
outsl
in
pop
push
pop
rorl
pop
jb
and
ret
mov
ss
enter
inc
es
inc
pushf
rcrb
sbb
mov
shl
aam
push
leave
xor
adc
adc
and
pusha
mov
and
mov
jno
cmp
xchg
push
out
mov
push
sbb
into
xchg
or
outsl
and
xchg
mul
jmp
cmpsl
pop
jns
inc
in
pop
popa
and
inc
aam
inc
jns
push
and
mov
mov
or
or
dec
dec
into
outsb
mov
repz
jae
imul
inc
xchg
stos
xor
shl
xor
pop
mov
enter
js
cmp
mov
xchg
in
sbb
inc
adc
aaa
fisttpl
mov
add
and
test
cmp
int
xor
adc
roll
into
jg
sub
js
scas
lret
bound
sbb
add
pop
fs
aaa
loopne
xchg
int3
js
sub
out
popf
test
jnp
incb
clc
lock
out
jmp
fstl
arpl
cmpsl
ret
call
mov
das
xchg
sub
xchg
push
bound
mov
cld
sbb
jnp
bound
cld
mov
pusha
xor
xor
sti
loopne
pushf
rorl
or
sub
ja
shl
push
ja
repnz
push
xchg
cli
add
xchg
lock
push
int3
mov
cmpsb
fwait
push
pop
aas
xor
mov
xchg
mull
jae
cwtl
xchg
fisubrl
movsb
lcall
and
inc
mov
xchg
mov
sbb
shr
arpl
jnp
bound
iret
jo
add
mov
in
stc
jo
out
inc
add
cltd
sub
pop
xlat
mov
mov
in
test
test
sub
push
sub
push
xchg
push
out
xchg
jp
mov
shlb
test
sbb
add
push
les
sbb
mov
subl
inc
je
pop
repnz
xchg
dec
jno
sbb
xor
outsl
dec
mov
gs
jo
pusha
adc
sbb
and
mov
and
dec
sbb
mov
xor
bound
cltd
test
in
clc
inc
insb
jnp
dec
mov
dec
jno
cli
fwait
jle
and
andb
sets
sbb
lods
inc
movsb
movsb
mov
movsb
xorl
cmp
and
cmpsb
fnstcw
pop
test
mov
pop
xor
cmpsb
dec
in
dec
mov
ljmp
xchg
ds
mov
popl
cmp
int3
roll
pop
mov
enter
sbb
cmp
repz
jp
nop
das
mov
jle
mov
cmp
scas
faddl
push
cs
jecxz
inc
stos
push
mov
rolb
push
mov
pop
nop
out
test
pop
xor
xchg
or
mov
mov
out
lahf
fists
jnp
notb
cmpb
fists
dec
jmp
jg
mov
call
pop
imul
lock
scas
or
xacquire
test
nop
xchg
test
cmp
dec
fldcw
loopne
xlat
ret
mov
repz
loope
mov
mov
sub
outsl
jl
daa
or
adc
push
outsb
in
pop
inc
jmp
push
lock
nop
rcrl
jo,pt
adc
scas
out
fstp
cmpsb
mov
inc
sarl
mov
mov
mov
push
ret
adc
ret
xor
dec
roll
fsubr
ficompl
mov
push
mov
mov
mov
cs
fimull
ss
ret
and
sub
icebp
mov
popf
add
rclb
xor
and
mov
jno
and
call
flds
push
push
cs
push
dec
roll
or
in
dec
dec
push
pop
cmp
and
cli
scas
test
dec
lcall
or
jns
cmc
pop
hlt
inc
lret
lret
jecxz
cmp
adc
ljmp
aad
xor
push
push
xlat
mov
jg
es
sub
clc
jno
and
in
pop
sbb
fimuls
adc
js
loope
mov
je
clc
mov
pop
dec
insb
jae
in
test
sub
loope
dec
ljmp
je
mov
xor
fimull
daa
leave
int3
jae
shll
push
pop
fnsave
xchg
mov
iret
add
inc
lahf
pop
into
or
ret
mov
int3
ljmp
push
sbb
dec
or
and
inc
decb
icebp
movb
jp
and
jnp
ret
xor
push
or
mov
cmp
mov
sbb
push
mov
cmpsl
fidivl
and
and
xchg
jge
push
or
lods
fisubrl
mov
xor
sbb
std
mov
sbb
insl
aaa
xchg
popa
dec
roll
jmp
cmp
push
cli
movsl
rcr
cmpsl
push
pop
mov
imul
jae
fnstsw
sbbl
mov
dec
aaa
sbb
mov
inc
jecxz
jl
shl
jmp
inc
sbb
and
dec
mov
lret
push
push
or
and
xorl
int3
dec
push
pop
cmp
into
test
push
cmpb
mov
pusha
sbb
push
adc
push
or
adc
test
push
int
movsb
mov
add
xor
inc
repz
test
movsl
push
sbb
jae
mov
and
sbb
sub
pusha
sub
lods
and
outsl
push
add
stc
mov
iret
or
jge
scas
ret
mov
psrld
mov
mov
dec
adc
mov
push
imul
iret
xor
iret
push
lods
mov
mov
xchg
jecxz
xchg
sbb
fcmovnb
jno
dec
sti
push
out
jge
icebp
or
lret
cmp
mov
fimuls
ret
dec
cmovb
sbb
sub
inc
lods
popa
nop
repz
push
dec
stc
fdivr
inc
bnd
sbb
mov
cmp
movb
inc
pusha
push
ljmp
insb
int3
mov
inc
pushl
adc
cltd
push
push
jp
sahf
out
jns
call
cmp
push
cwtl
cmpsb
movsl
inc
lret
nop
jne
mov
lods
mov
push
xchg
mov
insb
sahf
mov
arpl
test
sbb
cs
punpckhbw
jl
pop
push
xchg
out
mov
lret
or
cmp
mov
les
je
dec
adc
fadd
jmp
popa
call
int3
push
adc
ss
cmp
xor
outsl
push
xor
dec
mov
fbld
int3
in
mov
cmp
and
movsl
pop
push
push
pop
push
sbb
jne
scas
sub
ljmp
enter
push
pop
repnz
mov
adc
stc
dec
ljmp
add
inc
rcl
sub
cmc
mov
add
dec
pop
mov
xchg
popa
adc
pop
ja
notb
rclb
add
add
push
in
inc
out
xor
lcall
int3
sbb
stc
add
dec
mov
mov
rcrb
sbb
negl
out
out
hlt
std
rclb
fldl
sub
fs
add
popf
cmp
std
jnp
jmp
sbb
add
lret
jno
dec
test
jmp
mov
xor
cmp
mov
pushf
pop
mov
push
mov
mov
ret
jp
lret
and
bound
cltd
and
mov
mov
loope
movsb
fs
fs
in
adc
pop
and
or
es
repz
mov
dec
fldln2
and
sub
pop
mov
out
stos
inc
jg
mov
lods
push
fistpll
add
cltd
mov
int
mov
repz
add
mov
sub
mov
push
mov
cltd
jle
aas
in
jg
fstpl
mov
pusha
mov
andl
out
mov
scas
sarb
mov
adc
rolb
cmp
mov
in
test
rcrl
dec
aad
sbb
leave
and
daa
std
in
push
lock
les
lcall
popf
aad
fwait
in
or
aaa
cmp
push
lret
data16
enter
push
std
xor
xor
addl
jmp
in
lahf
sahf
call
lea
shll
leave
sub
iret
cmp
ret
imul
push
sbb
sbb
jecxz
pop
pushf
lret
mov
lcall
faddl
inc
mov
dec
add
and
mov
lcall
sub
and
xchg
dec
mov
aas
push
push
mov
and
xor
ret
push
sbbb
shlb
and
and
xchg
addr16
inc
sbb
jmp
or
pop
je
gs
pop
mov
stc
out
cmp
sahf
sarb
pop
stos
adc
cmpsb
and
ljmp
push
shlb
add
and
lods
rclb
pop
imul
lds
xor
or
or
call
push
mov
ja
imul
repz
xchg
jns
jp
pop
test
popa
mov
jo
les
popf
jns
push
or
push
push
cmp
sub
outsl
or
sbb
mov
or
mov
push
xlat
add
dec
mov
movsl
dec
test
dec
xchg
mov
or
sbb
pop
push
fistps
test
push
ds
mov
inc
sbb
cld
cmp
out
push
cli
outsl
pop
sbb
jle
inc
xchg
lea
idiv
mov
fbld
adc
je
out
into
scas
in
dec
sbb
cmp
or
mov
scas
adc
adc
add
cmp
hlt
sub
push
ja
pop
sti
xchg
xchg
jns
sbb
mov
lods
repnz
test
xor
pop
lret
and
scas
mov
movsl
inc
cmp
jmp
fistps
mov
mov
sar
cmpsl
dec
insl
pusha
nop
mov
sti
aas
and
insb
push
xchg
jmp
dec
test
sub
xchg
or
sub
scas
jmp
xor
movsl
dec
icebp
xor
stc
mov
mov
pop
mov
xchg
insl
mov
cmc
push
or
cmp
dec
adc
es
repz
push
xchg
mov
movsb
cwtl
das
fs
xor
xlat
ljmp
jp
mov
sub
mov
out
or
xchg
and
push
sbb
inc
cmp
pop
into
cmp
jne
or
sub
dec
jmp
xchg
inc
push
popa
xorl
mov
push
inc
hlt
fimull
into
mov
movsb
into
cltd
mov
scas
cmp
or
pop
sub
and
push
jmp
cmp
inc
fwait
mov
mov
rorl
leave
test
push
inc
outsb
mov
fimull
mov
aam
in
lds
aaa
mov
dec
sbb
adc
fwait
pop
dec
push
stos
pop
inc
add
jp
dec
scas
cwtl
dec
fwait
and
lods
scas
icebp
inc
fistl
push
mov
xchg
rcll
pop
imul
mov
pop
push
xlat
push
cmp
sbb
add
pusha
add
pop
and
mov
inc
jp
xor
out
xchg
mov
shl
out
inc
ficoml
dec
pop
into
dec
sub
pop
fisttpl
sbb
subl
addr16
dec
and
mov
adc
mov
jl
insb
es
adc
jle
cltd
loop
inc
mov
pop
call
lret
jecxz
adc
dec
adc
cmpsb
movsl
xchg
ret
mov
add
jns
leave
es
mov
sub
jnp
push
add
and
ret
push
out
xor
cmp
inc
cmp
je
roll
call
repnz
cmc
fwait
dec
sbb
pop
mov
sbb
push
or
and
fisubrl
call
stos
stc
ret
mov
cli
in
push
fwait
and
and
mov
adc
xchg
jmp
pop
into
mov
mov
jo
fildl
sub
call
out
cmp
in
sub
dec
mov
pop
cmpsl
cmp
popf
push
or
aas
push
cmp
mov
and
arpl
or
cli
icebp
cmp
and
rorl
add
in
mov
fadd
inc
addr16
stos
or
movsb
test
mov
mov
pushf
ret
mov
je
mov
sub
cmp
nop
imul
scas
sbb
loop
pop
push
mov
int3
scas
aas
sub
test
divl
xchg
push
mov
cs
push
cmc
sbb
dec
adc
pushf
sub
in
mov
inc
js
fdivp
push
nop
lret
lahf
lods
into
xchg
xchg
mov
popa
es
lods
in
dec
sbb
xchg
mov
jecxz
fisubl
xchg
add
lea
std
push
in
cmp
sub
fbld
sbb
jle
add
and
jns
sbb
fucomip
adc
repnz
test
mov
leave
push
hlt
cwtl
adc
sub
add
xor
and
in
xor
inc
cmpsw
pop
xchg
cltd
cmp
adc
inc
mov
sub
or
jge
and
sbb
dec
jbe
pop
mov
sub
movsb
sti
push
es
repnz
aad
outsl
or
loop
sub
mov
jg
aas
imul
or
repz
sbb
jns
mov
cli
es
xchg
lcall
xchg
xchg
dec
test
in
pop
jno
xor
aad
inc
push
in
dec
jmp
add
xchg
arpl
cmp
mov
jg
rcrl
sub
aam
repnz
xchg
pushf
neg
mov
test
mov
mov
dec
mov
lcall
sub
les
sbb
dec
cmp
cwtl
sub
sbb
pop
xor
add
sbb
fistpl
inc
sub
adc
adc
jl
jns
push
and
or
repz
xor
scas
push
mov
lods
mov
and
sbb
jle
mov
adc
icebp
orps
jns
fcomps
xchg
into
push
clc
inc
leave
cmc
in
xchg
ret
dec
fsub
in
xchg
xchg
les
sbb
pop
adc
lcall
pop
jns
mov
in
out
mov
cmp
mov
jge
and
dec
inc
out
mov
sbb
lea
adc
test
les
jns
mov
in
adcb
sbb
rorb
hlt
inc
xor
or
outsb
push
aas
mov
or
arpl
jge
hlt
cmp
stc
xchg
sbb
lret
out
jo
mov
lcall
adcb
adc
xchg
adcb
cmp
lret
arpl
gs
or
ret
add
pop
inc
mov
xor
loopne
inc
jns
roll
jnp
ret
daa
inc
mov
dec
ljmp
aam
hlt
pop
jp
or
aas
stos
test
addr16
push
sbb
add
mov
mov
and
dec
data16
ficomps
outsl
fs
aas
push
mov
loopne
arpl
cli
leave
sbb
xchg
andb
rolb
inc
fistps
inc
popa
lret
push
adc
pop
aam
rolb
mov
add
in
xchg
aaa
int
scas
insl
outsl
jnp
outsb
lcall
xor
mov
fimuls
sbb
mov
dec
mov
sarl
fistpll
or
iret
icebp
les
imul
jo
inc
ljmp
fistl
fcom
mov
mov
xchg
fstl
scas
cmpsl
mov
and
insl
stos
decb
pop
pop
icebp
dec
adc
dec
jbe
ror
pop
push
mov
pop
call
xorl
pop
cmpsb
mov
mov
mov
into
es
inc
js
shlb
out
sub
test
int
mov
mov
or
cmp
xchg
addr16
dec
filds
xor
cmpsb
ja
jl
push
lds
pop
scas
inc
jb
repz
add
insb
add
jmp
and
jbe
lea
inc
lret
sti
cwtl
int
cli
add
jne
mov
jle
arpl
shll
adc
iret
dec
out
xor
xor
jbe
arpl
mov
dec
rcrb
or
push
jae
pop
xchg
mov
cmpsl
pushf
mov
inc
mov
mov
iret
test
lret
push
inc
pop
or
les
jne
dec
incb
xor
aam
mov
arpl
mov
lcall
daa
out
dec
addr16
push
sub
or
mov
pxor
data16
sub
cmc
insb
test
mov
xor
sub
icebp
sbb
addr16
dec
rcr
andb
ficoms
iret
enter
int3
xchg
popa
stc
xor
add
mov
data16
nop
xor
movl
adc
mov
inc
and
mov
dec
xor
loopne
out
mov
out
rorb
mulb
pop
cli
mov
out
mov
addb
pop
sbb
push
mov
jge
out
jae
addr16
jmp
cmpb
and
mov
adc
movsl
dec
testl
mov
xchg
lock
out
fbld
aad
sbb
dec
add
push
cmp
mov
jnp
mov
push
test
push
adc
leave
mov
adc
mov
sbb
xchg
mov
fdivp
push
ror
lods
js
out
jbe
jmp
sub
cmp
inc
loopne
in
jl
ret
sub
cmp
arpl
enter
or
aam
cltd
jmp
bound
cwtl
movsl
iret
test
aas
lods
add
out
xor
mov
add
xlat
lods
add
pop
mulb
or
iret
sti
ror
out
repnz
xchg
in
pop
adc
jb
jl
push
or
inc
push
mov
movsl
inc
cs
cli
stos
add
or
int3
popa
fidivrs
je
xchg
jns
pop
add
lret
xchg
loopne
dec
inc
cmp
roll
jns
mov
test
adc
hlt
xor
ret
push
mov
inc
stos
std
cmp
icebp
icebp
stos
jge
and
dec
push
push
insl
cmp
mov
leave
rolb
mov
xor
xor
and
test
pop
shlb
adc
xor
adc
xor
jnp
ss
sub
sbb
or
pop
jle
xchg
xchg
jbe
add
repnz
mov
push
mov
mov
push
popa
daa
cld
fsts
test
aas
and
imul
pop
jb
addr16
pop
mov
pop
inc
push
movsb
mov
lret
cltd
rorl
movsb
cmpb
dec
lock
popf
loop
sti
mov
dec
in
cltd
sbb
xchg
movsb
xor
sbb
inc
inc
adc
xchg
fsubrs
mov
gs
mov
dec
mov
nop
andl
sub
hlt
fstp
xor
cwtl
and
adc
mov
cmp
sub
fwait
add
inc
std
xor
dec
loope
jae
dec
andb
jg
sub
outsl
pop
imulb
ds
mov
mov
stos
jno
jb
stos
cmp
test
cmpsb
cld
out
mov
inc
repz
out
outsb
fiadds
xchg
xchg
outsl
lock
jnp
imul
out
mov
push
push
fwait
stc
lods
lret
sbbl
add
addb
aam
cwtl
sub
arpl
jnp
jns
add
add
mov
mov
je
add
mov
jb
xor
inc
pop
push
pushf
push
lea
imul
sbbl
inc
aaa
es
mov
repnz
addb
mov
in
push
xchg
mov
push
xchg
ret
mov
out
xchg
in
mov
insb
test
mov
xor
sbb
movsl
cli
and
popa
scas
push
mov
ret
jae
outsl
add
mov
pop
mov
sarb
push
int
adc
pop
mov
mov
dec
dec
faddl
shrl
mov
add
cmp
mov
jl
cwtl
mov
sbb
pop
dec
pop
ss
scas
daa
out
sbb
insl
push
mov
mov
mov
xor
jecxz
es
dec
cmpsl
mov
sbb
jnp
mov
mov
jecxz
aas
jb
mov
xchg
imul
push
mov
imul
cmpsl
push
aas
outsb
inc
mov
inc
push
add
xor
dec
jg
fisubl
fidivs
outsl
add
loop
or
icebp
dec
add
cld
lahf
jge
mov
sub
push
mov
push
or
cli
or
sbb
data16
dec
xchg
pop
ret
bound
popf
xchg
push
mov
nop
rcrl
outsl
mov
and
sbb
cmpsl
popf
fdivrl
or
das
sub
mov
popa
jo
pusha
add
adc
fsubrl
iret
leave
repnz
gs
push
bound
outsb
mov
fwait
cwtl
iret
cmp
adc
cmp
mov
insb
pop
jnp
cld
or
cltd
mov
jno
xorl
mov
dec
leave
sub
lea
push
into
sub
jnp
adc
pushf
lock
jno
test
inc
add
jmp
rolb
out
jno
inc
xor
cmp
sub
int
shl
or
mov
or
out
imul
add
iret
nop
iret
add
dec
lret
xchg
sahf
and
call
mov
lods
push
loope
jo
repz
push
movsb
test
stos
cmp
cmp
daa
or
stos
xor
js
stc
mov
daa
and
insl
es
rorb
cmpsl
mov
mov
cmp
xchg
mov
push
xchg
pop
jle
or
imul
lahf
inc
add
xchg
cmp
xchg
jmp
adc
loopne
mov
push
out
jmp
std
mov
dec
das
or
out
pop
and
mov
sbb
dec
add
popa
add
lahf
and
xchg
loope
add
add
das
inc
mov
repz
shl
mov
mov
and
jno
xor
jg
enter
cmc
scas
in
xor
sub
mov
call
sub
jmp
adc
mov
lea
push
adc
inc
push
xchg
rcll
mov
leave
mov
cmc
and
rcr
imul
nop
jge
std
scas
lcall
mov
xchg
mov
xor
dec
mov
jne
pop
and
push
aas
cmp
pop
cli
cmova
popf
push
pop
ret
sbb
mov
lret
aam
add
sbb
mov
sub
f2xm1
and
mov
pusha
mov
dec
jp
sbb
dec
stos
mov
cmp
xor
insl
push
int3
pop
leavew
sub
cltd
sbb
and
imul
dec
in
sub
into
adc
sbb
sbb
xor
dec
ds
dec
lods
test
cmp
inc
popa
arpl
in
outsl
or
clc
push
divb
inc
nop
sub
pop
sub
mov
inc
sbb
mov
add
mov
into
mov
aam
lock
mov
fucomp
addr16
cmpsl
lea
mov
pop
adc
jbe
jb
push
xor
and
add
mov
gs
testl
addb
subb
scas
sbb
fstpt
adc
lds
pop
mov
imul
movsl
and
cmp
or
call
xchg
in
into
idiv
rolb
add
test
jp
dec
cld
js
push
sbb
push
aam
movsl
inc
rclb
mov
movsl
mov
aam
jbe
fisubl
pop
mov
mov
shl
inc
jb
mov
sub
test
std
scas
shlb
fucomp
inc
cmp
mov
mov
call
fcmovbe
repz
sarl
into
std
sub
test
adc
push
dec
ljmp
lahf
es
mov
pop
dec
push
mov
sub
sub
bound
mov
pop
in
mov
adc
scas
dec
push
xchg
das
jge
loop
adc
pop
cmovb
mov
shll
xor
mov
jb
jecxz
lods
fcomps
mov
lcall
xchg
ss
bnd
xor
mov
aad
push
and
loope
das
call
cmpsl
pop
pop
mov
mov
inc
xchg
mov
cwtl
gs
mov
pop
stc
push
fxam
jmp
dec
insl
std
pop
daa
scas
scas
pop
sbb
cmp
inc
cli
aad
insb
out
inc
push
cmp
cwtl
dec
outsb
mov
out
jbe
mov
test
and
out
jbe
insl
xchg
daa
in
rorb
xchg
mov
lret
popf
sbb
ret
and
add
xchg
movsl
aam
xor
adc
gs
repz
mov
dec
pop
stos
test
ficoms
jl
fldcw
jge
push
adc
notl
cltd
jno
js
jg
out
fnstenv
mov
fs
pop
sub
inc
cmp
or
clc
inc
lods
loopne
mov
mov
add
xor
repnz
adc
mov
and
cmp
jnp
add
xchg
xlat
jne
mov
jae
inc
mov
rcrb
jp
cld
aaa
mov
mov
fsub
sbb
mov
jne
jnp
cmp
and
fnstenv
cmpl
es
push
inc
mov
add
xchg
cmpsl
btc
push
enter
jns
mov
lret
mov
rcrb
mov
dec
outsb
pop
out
fnstsw
jne
pop
in
jmp
mov
jmp
inc
ret
scas
inc
xchg
int3
lretw
dec
cvtpi2ps
mov
xchg
jmp
pusha
add
lahf
inc
cmp
sub
push
shr
pop
add
in
pusha
add
aas
fisttps
mov
mov
int3
int3
pop
enter
sbb
shlb
and
add
pusha
dec
call
adc
cmc
mov
jmp
aas
shlb
cld
sub
fildll
sti
add
mov
mov
add
fistps
fimuls
dec
push
in
mov
enter
in
cmp
add
mov
mov
repz
ds
xlat
push
jno
ss
cli
addr16
inc
std
in
insl
scas
inc
jl
sarb
add
xchg
cmp
fiaddl
dec
rcll
ret
jmp
xchg
push
xchg
cltd
or
push
and
mov
adc
xor
dec
push
imul
and
lret
xchg
outsb
mov
mov
lahf
imul
push
mov
ds
push
cmp
xchg
lret
inc
lcall
imul
ds
ret
push
das
and
inc
mov
push
dec
inc
xor
sub
inc
jle
mov
pop
fwait
add
aam
jb
aam
sub
jle
loope
xor
sub
xchg
les
out
mov
mov
test
repz
jmp
inc
outsl
int3
cmpsl
cli
xchg
jns
js
daa
lods
push
in
inc
aas
mov
lock
mov
fs
rcll
shll
mov
cmp
add
mov
jns
push
dec
mov
loope
ret
mov
loop
jg
or
loop
shl
or
cmp
jns
jo
out
or
test
es
sub
dec
pop
outsl
lods
sahf
push
lds
cmp
xchg
inc
out
add
adcb
mov
jecxz
fldt
jb
xorl
push
in
xchg
push
inc
xchg
pop
aas
lods
stc
subb
xor
les
int3
cltd
cs
loop
xor
js
neg
mov
sbb
add
test
cmp
andb
sbb
cltd
push
jo
in
add
cmp
and
fsub
dec
hlt
jbe
fcomi
adc
jp
mov
jne
sahf
es
lahf
int3
sub
inc
movsw
dec
sarb
lds
mov
cmp
or
mov
test
mov
inc
sub
jne
dec
add
dec
iret
mov
jnp
sub
inc
les
mov
out
popf
movsb
push
and
mov
ja
and
xlat
lods
lret
loopne
lret
stc
dec
sbb
lcall
jmp
cmp
in
sbb
dec
pop
aam
jmp
or
movsb
imul
int
hlt
loope
pushf
dec
out
dec
imul
subl
out
pop
fbstp
adc
sub
fcomps
inc
adc
add
js
jae
les
push
aas
and
jl
pop
sbb
fisttpll
pminsw
mov
push
jbe
or
jp
inc
adc
jns
int
lahf
cmpsb
imul
lahf
cmpsb
mov
mov
inc
arpl
fisttps
addr16
nop
adc
mov
fucom
jae
fstl
mov
stos
lds
sub
sbb
inc
test
sub
stos
inc
rcrl
mov
pop
mov
mov
mov
mov
or
fnsave
cmpl
mov
in
push
inc
test
pushf
lds
inc
sahf
int
adc
pop
sbb
mov
popa
pop
add
dec
mov
dec
or
and
sahf
add
movsl
int3
ret
sbb
mov
jmp
mov
cld
pop
stc
nop
sarl
pop
fldln2
icebp
in
repz
xchg
sbb
clc
cmp
je
push
jg
out
and
or
ljmp
ret
pop
xchg
mov
je
jmp
mov
ja
loop
push
dec
adc
or
cwtl
movsb
faddl
test
pushf
repnz
pushf
sahf
push
lret
rcl
inc
fdiv
push
push
push
sub
xchg
jg
bound
push
mov
mov
xchg
fldpi
mov
lahf
insb
cmpsl
mov
mov
or
sub
push
mov
mov
xor
jp
cld
lcall
xor
and
shrb
xchg
stc
aas
lahf
add
jecxz
into
or
loop
cmp
pop
and
repnz
sub
aam
fwait
hlt
dec
dec
sbb
push
dec
mov
add
js
cwtl
and
popf
dec
fistpl
inc
push
leave
test
fistps
cmp
sbb
jp
imul
add
lds
out
jecxz
inc
xchg
lea
ret
sahf
inc
cli
mov
dec
cwtl
jb
mov
loope
cmc
jp
cmp
loope
jecxz
and
loopne
cmpsb
in
test
push
stc
filds
roll
lock
xlat
sbb
mov
xchg
pusha
lret
insb
ret
pop
leave
or
sub
pop
xchg
adc
dec
je
fistl
loope
popfw
clc
aad
rcrl
enter
or
popa
int3
adc
jmp
push
insl
add
mov
mov
stos
push
xor
pushf
das
push
add
inc
jne
adc
add
cmp
or
fwait
jae
push
dec
jno
push
cmpsl
mov
cmp
cmp
mov
mov
push
xchg
inc
cwtl
push
pushf
mov
xchg
cmp
popf
push
clc
add
rcr
test
mov
jno
mov
out
pop
xor
jb
cmp
daa
sbb
push
xor
add
mov
fwait
mov
outsl
inc
jmp
dec
and
lahf
add
xor
adc
push
and
inc
xchg
dec
lcall
fsubl
adc
dec
dec
fistpll
and
xchg
pushf
jb
rclb
mov
loop
mov
in
adc
popa
in
addr16
fbld
in
setnp
sti
repnz
lods
mov
pop
and
enter
push
repnz
add
inc
icebp
inc
sub
pop
enter
dec
data16
js
sbb
repz
push
aas
arpl
push
pop
fstps
sysret
sub
jg
add
xor
inc
es
pop
es
push
fisubrl
fisubrl
push
push
push
neg
test
fldt
mov
mov
lea
pop
xchg
icebp
int
mov
mov
mov
aas
movsb
inc
xchg
cmp
int3
jg
lret
cld
jno
in
mov
mov
lea
gs
ljmp
push
mov
call
or
sub
repz
jae
mov
mov
dec
in
fwait
sahf
and
lods
stos
cltd
clc
dec
lds
jns,pn
pop
sarb
add
leave
adc
jecxz
sar
pop
mov
popa
dec
sbb
xor
cwtl
adc
sbb
ficoml
xchg
push
in
imul
and
rcll
movsl
xchg
jae
or
je
push
add
int3
into
xchg
fdivl
lods
mov
xor
push
ljmp
adc
and
push
sbb
cmpsb
push
and
in
imul
cmp
adc
stc
mov
sbb
mulb
push
icebp
mov
je
movsb
push
cs
in
das
mov
or
add
mov
sub
subb
jbe
push
add
and
cltd
subb
leave
aad
lea
inc
shlb
call
jp
scas
xlat
leave
or
add
and
ret
negl
push
movzwl
sub
and
mov
shlb
sbb
pop
mov
scas
flds
out
pop
add
icebp
jecxz
repz
jg
mov
xchg
ss
scas
clc
pop
xchg
xor
pushf
inc
in
ret
mov
pop
rorl
mov
add
cmpb
pop
inc
sub
add
inc
cmc
shlb
push
jl
inc
sub
xchg
mov
inc
jno
sub
xor
in
sarl
jl
cmp
jns
xor
je
jp
sbb
clc
pop
adc
stc
and
sahf
data16
pop
fstl
vunpckhps
or
aaa
nop
lds
repz
mov
fs
loope
xchg
test
es
pop
dec
decl
xor
or
mov
scas
xlat
aad
scas
arpl
jo
sbb
nop
lcall
dec
fwait
cmp
or
in
out
and
lcall
mov
jo
mov
adc
sti
lahf
push
mov
movsbl
add
rolb
adc
cmc
cmpsb
out
xor
and
imul
imul
jbe,pt
mov
mull
insb
xchg
cmp
or
xlat
aas
jae
mov
push
pop
je
out
imul
pop
out
pop
enter
pop
hlt
cmp
mov
sbb
pop
mov
nop
xchg
loope
test
inc
sbb
shl
mov
push
sarl
inc
add
inc
pop
xchg
mov
nop
lds
inc
inc
es
or
cmp
xchg
cmp
test
pop
sub
mov
mov
xor
jmp
or
inc
rolb
stc
pop
cmc
out
mov
xor
mov
jno
push
mov
arpl
movsb
mov
pop
shlb
inc
lock
pop
std
xchg
or
push
fwait
lods
shr
fistl
jge
and
mov
or
sub
pop
add
dec
xchg
mov
stos
insb
popa
pushf
loopne
adc
imul
mov
sbb
sbb
xchg
adc
orb
fnstenv
stc
pushf
das
mov
pop
adc
out
ret
es
loop
mov
inc
mov
mov
lret
addr16
clc
das
fldl2t
mov
gs
jp
dec
cli
mov
int
jp
push
cmp
mov
and
test
popf
insl
push
xchg
and
mov
add
xchg
or
xchg
sahf
mov
or
rclb
pop
imul
xor
int
les
loope
sub
pushf
pop
ficoml
cmp
test
push
mov
sub
dec
dec
cmp
cwtl
jae
dec
pop
xchg
repnz
xor
lret
sbb
xor
popf
and
xchg
ret
cs
repz
cltd
test
jg
popf
pop
shr
mov
or
mov
cmp
lea
adc
lret
fmuls
call
cmpsl
int
mov
shll
dec
jge
arpl
cwtl
arpl
sbb
push
adc
jg
into
movsb
sbb
icebp
rclb
and
lret
icebp
sahf
ficompl
sub
repnz
pop
in
adc
inc
mov
push
and
inc
iret
fbstp
lea
leave
sahf
in
mov
xor
mov
out
mov
push
ds
mov
pop
cltd
sbb
push
lods
pop
mov
fadd
loope
xor
in
adc
std
sub
iret
cmp
inc
cmp
cld
dec
movsb
add
mov
mov
xchg
stos
leave
jne
icebp
lds
xchg
push
repnz
jae
cli
jmp
dec
lods
add
in
out
sub
stc
cmpsl
mov
push
clc
pop
xor
repz
in
ljmp
sub
jo
repz
sbbb
dec
std
sbb
inc
add
pop
data16
push
push
or
mov
test
mov
jae
lret
in
nop
cli
jg
test
mov
mov
inc
inc
stos
test
mov
mov
mov
xchg
loop
movsb
cmpsl
pop
repz
jl
and
sti
movsl
or
adc
mov
xchg
out
arpl
or
jg
scas
mov
in
lods
sbb
xchg
sbb
pop
pop
add
lock
lcall
cld
push
and
or
sbb
out
das
inc
adc
fstpt
mov
negb
sbb
cmp
insl
mov
test
mov
cwtl
mov
call
jmp
lds
in
adc
call
cwtl
lods
movl
out
mov
xchg
outsb
fmuls
mov
rcr
out
cmp
dec
fst
push
cmpsb
xchg
adc
cltd
cli
lahf
or
bound
sub
mov
lods
cld
cmc
xchg
mov
inc
jno
push
fiaddl
add
jl
jno
or
or
pop
push
ja
xchg
pop
ret
xchg
mov
jmp
daa
mov
sub
adc
ja
and
lods
rol
mov
jle
pop
dec
cmpl
jg
pop
dec
push
mov
mov
cmp
loope
push
lcall
jo
pop
ficoms
bound
xchg
bound
in
divb
ret
in
test
popf
push
adc
outsb
xchg
dec
add
stc
and
rcrb
jns
xor
popa
pop
movsl
fucomip
movsl
inc
and
mov
cltd
add
inc
repnz
ffree
out
pop
in
sub
lea
into
aaa
adc
stc
dec
pmuludq
xchg
mov
and
lret
or
sbb
cmp
out
add
sub
aas
mov
jp
jl
jo
arpl
jle
mov
movsb
and
aam
outsb
shlb
pop
out
pop
pop
mov
leave
lock
test
jge
mov
inc
aad
adc
add
shrb
pop
xchg
add
in
ss
ds
xor
xlat
cmp
fildll
cmp
dec
push
es
out
lock
adc
nop
inc
iret
aaa
ret
repnz
sbb
jae
pushf
mov
rcll
loope
call
add
fnstenv
int
rol
mov
pop
xchg
jg
inc
adc
push
mov
push
adc
test
cmp
xchg
pop
and
test
movsl
xchg
shll
pop
sub
adc
xor
imul
fistpll
roll
pop
fwait
addr16
xchg
pop
add
add
pop
xchg
ljmp
xor
mov
inc
test
lcall
fisttps
iret
insl
stc
xor
xchg
in
mov
adc
clc
fisubrl
push
imul
or
pop
cmp
sbb
jb
inc
roll
jnp
pushf
dec
xchg
xlat
push
cltd
ret
lahf
mov
lret
icebp
cmp
dec
cmpsl
inc
in
mov
mov
stc
imul
movsl
mov
pop
and
or
add
mov
push
push
push
popa
div
fstp
cld
in
les
notb
cmc
movsl
mov
les
stc
sub
adc
rorb
arpl
leave
pop
dec
cli
jp
push
fildl
test
jle
jge
xor
inc
push
mov
push
pusha
shll
add
mov
dec
mov
shr
xchg
enter
popf
push
repz
mov
push
mov
adc
xchg
mov
out
pop
dec
fldl
xor
pop
cmpsb
pop
mov
fwait
jae
stos
sub
scas
cli
int
int3
loop
ljmp
jnp
loope
jno
cmp
sbb
aam
outsl
dec
pop
int
out
popa
stc
scas
fs
rclb
mov
pop
inc
icebp
mov
xlat
xchg
shll
sub
in
push
test
popf
ficoml
scas
mov
aas
fmuls
pop
jge
enter
inc
cmp
sbb
ja
mov
push
cmp
in
imul
jmp
ret
ljmp
iret
pop
lea
mov
mov
jns
mov
jecxz
rolb
xchg
xchg
sbb
sbb
leave
mov
sarl
add
and
gs
xchg
push
mov
cmp
mov
les
shr
pop
fnstenv
xor
xor
adc
mov
aam
jmp
push
loopne
adc
mov
hlt
add
sahf
cs
arpl
ror
dec
es
mov
loope
sbb
and
pushf
lods
push
push
pop
xor
sub
cld
scas
outsb
or
icebp
iret
lea
or
jl
push
aad
xor
adc
test
addb
leave
lret
cltd
dec
jns
mov
xchg
mov
test
jg
jle
test
or
cmp
cmp
les
adc
int
mov
sbb
cmp
ljmp
outsl
inc
cltd
jle
jno
adc
sbb
xor
lods
or
ja
dec
jle
inc
scas
xor
incl
das
pop
xchg
outsl
cmp
add
sbb
jo
jecxz
push
mov
and
xlat
cmpsb
fsubrl
dec
ja
repz
or
inc
out
fidivs
daa
sbb
mov
push
push
inc
call
pop
bound
out
in
jno
mov
jns
mov
cltd
rcrl
iret
sub
fcomp
ja
js
mov
push
popa
lcall
clc
push
mov
rorl
sbb
xor
dec
adc
xchg
cli
lods
mov
sbb
or
repz
or
jp
inc
hlt
pop
jnp
jge
mov
or
dec
mov
fs
mov
outsb
and
dec
rcrb
xor
xor
lret
push
cmp
sbb
leave
test
orl
mov
add
mov
iret
dec
sbb
cmc
push
data16
inc
push
fidivrl
popa
sbb
adc
sbb
aam
adc
shrl
inc
mov
xchg
pop
xchg
jns
cmc
xorb
inc
inc
movsb
lods
push
pop
mov
fisttpl
cmp
repz
xchg
mov
ret
int3
in
jnp
aad
movntps
call
lods
aam
sub
mov
jb
and
aad
push
xor
pop
pushl
fiaddl
xor
xorl
insl
mov
rcll
mov
repnz
xchg
cmp
insl
mov
js
dec
inc
fmull
xchg
mov
aaa
repz
pop
popa
iret
or
insl
cmp
clc
jnp
add
add
ret
cwtl
dec
in
stos
mov
jae
rcl
cmp
lahf
lret
mov
aad
cmp
mov
push
andb
xchg
insl
adc
cmc
mov
out
or
cmpsl
test
sarl
scas
dec
adc
sub
int3
orl
xor
fdivrp
and
push
orb
ds
int3
cmp
dec
scas
mov
push
xchg
jo
scas
nop
imulb
push
lods
lods
xchg
jg
mov
sahf
nop
out
sub
ficoml
push
dec
cmpsl
and
rclb
insl
push
jp
xchg
or
rorl
xor
shlb
add
ror
jno
fldt
aad
outsl
clc
jp
out
int
sbbb
or
iret
adc
add
sbb
mov
enter
sub
jnp
mov
cmpsb
loope
push
jg
clc
les
mov
hlt
out
int3
inc
and
ja
mov
xor
or
cmpsl
les
push
push
mulb
add
inc
lcall
int
jmp
nop
mov
sbb
mov
xlat
inc
outsl
push
lret
pop
cli
into
aad
gs
lret
xchg
insb
cmp
aas
shlb
push
pop
enter
lods
jnp
leave
out
out
push
mov
xor
fcompl
out
nop
mov
ss
mov
mov
sub
insb
mov
cmpsb
inc
pop
fwait
sahf
ss
call
add
mov
adc
pop
fcomi
cmp
xchg
cmpb
mov
dec
test
mov
add
cmpsl
adc
pop
pop
mov
sbb
xor
test
sbb
cli
adcb
xchg
popa
loope
or
sbb
dec
cmpsl
test
pushf
lods
cmpsl
xor
mov
cmpsl
daa
test
enter
mov
movsl
lret
jne
shr
pop
icebp
aaa
jo
out
dec
inc
lret
mov
les
les
or
or
enter
call
cli
inc
bound
adc
jecxz
xchg
push
lds
mov
adc
sbb
je
xlat
mov
push
cmpsb
mov
in
inc
xor
addr16
ss
sbb
push
lods
cmp
xor
stos
adc
pop
sbb
es
mov
in
dec
adcb
pop
or
add
bound
pop
stc
jge
cmp
or
outsb
jb
jns
hlt
out
xchg
ret
int
cltd
inc
lcall
sbb
cmp
xlat
add
add
sbb
and
mov
dec
sub
dec
push
pop
dec
push
iret
mov
adc
flds
dec
fstpt
cs
outsb
mov
stc
add
push
dec
and
inc
call
repnz
int3
int3
add
xor
cld
push
cmc
push
cmp
fidivrl
or
mov
inc
int3
mov
clc
lea
jae
test
test
dec
cli
loopne
adc
leave
imul
sub
push
loope
inc
sarl
sub
push
stc
and
cmp
sbb
jmp
and
jns
ds
bnd
xor
push
push
aad
xchg
sbb
mov
sbb
stos
mov
and
xchg
pop
std
mov
xchg
or
scas
sbb
daa
mov
es
ss
movl
arpl
frstor
and
imul
cmp
adc
mov
jne
mov
jno
pop
cmp
jbe
ret
and
mov
into
xor
call
sbb
fisubs
add
pop
or
mov
pop
jg
lods
cmp
int3
cmp
aad
aam
push
adc
push
aas
cld
je
and
adc
sbb
push
mov
inc
jb
insb
lahf
std
mov
pop
jns
dec
adcl
cwtl
cmp
das
out
sbb
cmp
jne
pop
mov
mov
cmp
mov
mov
xchg
sbb
lods
shrl
pop
loopne
scas
out
sbb
cmpsb
out
sbb
loop
xor
imul
enter
loop
jle
enter
movsl
or
pop
xlat
mov
insl
jg
fs
bnd
jg
xor
lods
mov
push
inc
data16
icebp
sub
cwtl
mov
sub
mov
inc
dec
pop
xor
repnz
sub
testb
insb
and
scas
add
stos
frstor
lods
and
mov
popf
or
mov
and
or
fcom
rclb
insb
call
inc
repnz
repnz
cmp
leave
adc
lcall
scas
mov
sbb
aad
cmp
pop
sub
push
and
adc
adc
push
ficoml
cmp
out
or
inc
fdivl
sub
pop
ss
xor
mov
xchg
jo
mov
or
sub
adc
inc
sbb
mov
imul
lcall
jmp
mov
jle
push
rcrl
pop
or
xor
ljmp
xor
adc
push
jb
out
cwtl
jmp
dec
je
adc
aad
cmc
enter
arpl
subb
jne
int
dec
invd
cmpl
stos
cmp
pop
cmp
sbb
in
loop
push
inc
gs
in
push
repz
aaa
mov
adc
loope
repz
ds
inc
sbb
add
sahf
mov
push
movsb
sbb
add
test
sar
jmp
push
mov
lock
lret
pop
xchg
jno
adc
and
imul
xchg
in
cmp
add
mov
arpl
inc
mov
mov
dec
sub
jge
aad
in
cmp
pop
mov
mov
movl
jecxz
xor
xor
mov
jns
loopne
jle
add
out
adc
fwait
cmp
inc
dec
jae
mov
iret
ljmp
imul
inc
jmp
addr16
mov
rcll
std
sub
bound
and
sbb
lahf
test
or
mov
cmp
cmc
or
call
jno
insb
adc
es
fsub
and
xor
in
mov
and
sub
fwait
aaa
loope
cli
adc
mov
enter
mov
scas
rorl
sbb
xchg
mov
in
cmpsb
imul
sub
movsb
or
ret
sub
mov
xchg
sar
mov
lock
test
pop
push
or
push
cwtl
imul
xor
icebp
jnp
mov
jl
push
in
ljmp
cmovbe
mov
jge
repnz
ds
je
sub
shrb
pusha
and
or
lcall
ret
mov
not
in
stc
jb
fdivrp
imul
push
stos
repz
pusha
stc
and
pop
mov
addr16
scas
mov
push
addl
add
xchg
punpckhbw
stc
xchg
pop
imul
pushf
sti
or
mov
inc
inc
lcall
sub
cmpsb
dec
xchg
aam
stc
push
ror
push
mov
and
mov
clc
sbb
loopne
not
sahf
pop
inc
je
cld
sarb
or
or
cmp
ds
test
and
test
or
and
xchg
imul
add
jge
jbe
out
mov
imul
les
pop
test
pop
cmp
pop
imul
sub
lods
jns
adc
insb
stc
ret
call
or
ret
mov
lea
aaa
in
cmpsb
mov
push
lahf
jle
out
mov
je
stos
and
loopne
mov
dec
test
or
push
fcmove
push
call
dec
pop
fisttpl
push
xchg
pop
out
sbb
shr
sbb
mov
icebp
mov
ja
xchg
sub
in
mov
cltd
dec
sub
sbb
push
pusha
or
int3
mov
adc
lods
popa
cmpb
pop
mov
std
nop
test
insb
lcall
je
pusha
jmp
or
mov
arpl
and
int3
push
stc
lods
ja
mov
ret
jns
pop
sbb
mov
repz
mov
push
pop
jne
sub
xchg
mov
dec
sub
sub
lock
test
add
jno
js
jb
xchg
add
gs
mov
ds
scas
mov
cmp
loope
mov
hlt
add
notb
jne
mov
mov
leave
lret
hlt
lock
dec
loopne
pop
in
cmp
or
mov
insb
xchg
popa
dec
push
jle
mov
cmp
add
sub
jle
bound
add
test
sub
loopne
aad
and
xor
pop
and
lock
cmc
shlb
fisubs
jnp
fwait
sarl
mov
cmc
mov
pop
pop
pop
sbb
sub
hlt
mov
mov
sub
jg
cmp
add
or
push
repz
jp
add
sub
push
shrl
test
nop
ret
xchg
xchg
pop
cmp
push
nop
dec
mov
sbb
dec
hlt
push
ret
imul
cmp
inc
jbe
push
js
xchg
jno
enter
std
adc
xor
push
repz
push
popa
xchg
sub
mov
es
fcoms
add
dec
int
and
ss
mov
dec
leave
stos
cmc
mov
mov
js
mov
mov
mov
pusha
xor
dec
stos
jl
out
mov
add
stc
pop
icebp
jg
pusha
and
cltd
insl
lea
jno
das
lods
dec
dec
test
dec
loop
cmpsl
jb
fmuls
mov
or
scas
inc
inc
xchg
iret
in
push
fdivs
jmp
ja
cmp
push
rcrb
scas
add
out
gs
xlat
out
cmpsl
cld
or
mov
dec
popa
js
lahf
xchg
pop
jmp
ja
jns
mov
sub
negl
leave
jg
cli
mov
std
mov
lods
out
cmc
sbb
and
in
pop
cmpsl
pusha
loopne
stc
enter
push
movsb
jp
mov
cltd
push
pop
rorl
jl
arpl
sbb
pop
clc
mov
fstp
sub
mov
mov
fwait
cmp
loope
movsl
fmul
cmp
cmc
mov
xorl
xchg
pop
jle
mov
popf
gs
inc
mov
sbb
dec
inc
mov
mov
loope
test
je
mov
xor
sbb
out
push
pushf
inc
in
call
inc
fidivl
cmp
xor
sbb
daa
mov
orb
popa
adc
or
mov
pop
ja
mov
aam
lods
sbbb
js
push
jp
and
ljmp
pop
jo
ret
and
mov
lret
push
push
mov
sub
pop
add
or
inc
out
ret
dec
push
stc
cwtl
out
adc
fimuls
sbb
shrb
shll
xchg
add
cwtl
dec
xchg
xor
out
dec
mov
in
enter
addr16
repz
jecxz
fsubr
add
mov
jmp
loop
lods
les
repz
push
movsl
pushf
iret
xlat
adc
das
mov
mov
in
mov
push
rcrb
xor
mov
leave
add
jl
call
mov
jle
adc
pop
cs
xchg
scas
pop
mov
in
cmpsl
pop
dec
cwtl
insl
inc
popa
mov
pushf
pop
test
jo
in
push
cmp
xor
test
add
stos
roll
and
pusha
add
push
push
cmp
andb
mov
lods
lret
insl
xchg
lret
pop
std
movsw
push
mov
aas
add
cmc
dec
addr16
pop
ret
pop
fidivl
xor
jmp
dec
fimull
add
xor
inc
or
pop
fistpll
jecxz
cmp
cmc
sti
loopne
or
adc
mov
aam
andl
out
adc
jno
xor
lret
mov
pop
dec
ljmp
mov
out
mov
pop
mov
cmp
dec
movsb
mov
aad
pop
or
imul
add
add
jge
mov
inc
jo
pop
ret
and
insb
and
jl
sbb
pop
leave
adc
add
lock
and
lods
stos
lcall
divl
rorb
sti
or
push
and
cmp
xor
or
testb
add
cltd
insl
repz
pop
test
mov
jns
icebp
ret
and
rorb
je
out
addr16
loopne
inc
push
pusha
inc
mov
fiaddl
push
repnz
cmp
mov
push
push
sti
mov
addb
fldenv
lds
inc
ret
add
cmpsb
xor
cmp
sub
aaa
nop
adc
mov
and
push
pop
mov
push
iret
jg
inc
test
or
jge
leave
add
lret
mov
pop
movb
fildl
ljmp
hlt
jmp
jb
or
cmp
dec
sub
icebp
inc
pop
jae
mov
fbstp
mov
sti
ret
mov
aam
inc
cli
in
mov
xor
xor
repnz
mov
stos
daa
cmp
and
xchg
test
faddp
wbinvd
frstor
stos
dec
lds
hlt
push
mov
fwait
xchg
xor
test
xchg
fdivr
fisttps
mov
xor
inc
stos
xchg
fisubs
mov
mov
fists
mov
icebp
mov
adc
dec
mov
sub
inc
dec
mov
out
add
jb
divb
sub
xor
mov
cmp
cmp
lcall
pusha
sti
loope
and
mov
cmp
fsub
xchg
push
mov
mov
cmp
xchg
std
in
mov
sbb
or
subl
sbb
mov
nop
xchg
jp
daa
adc
jmp
or
leave
in
pop
dec
int3
jmp
arpl
int
icebp
inc
les
mov
jmp
mov
pop
je
enter
flds
cmp
sub
or
stos
movb
adc
pop
fistps
int
ret
cmp
inc
leave
das
test
pushf
add
xlat
or
rcr
stos
fbstp
xchg
fcomp
add
pusha
jl
adc
div
or
mov
xor
test
or
lret
jmp
int
in
hlt
jae
test
pushf
inc
or
mov
fs
in
test
mov
sbb
xchg
lods
cmpsb
xlat
lahf
testl
movsl
xor
xchg
adcl
fidivrl
cmp
imull
cmc
push
arpl
mov
subb
jle
add
outsb
push
push
ss
insb
aas
push
dec
xchg
dec
stos
in
inc
es
insb
inc
add
daa
imul
mov
mov
mov
jae
push
cld
stos
mov
inc
or
sbb
xchg
das
jg
lods
adc
push
call
jg
mov
xchg
sbb
aaa
xor
mov
adc
popf
aas
xchg
pop
scas
test
lock
aaa
add
ret
push
push
mov
pop
pop
sub
cmp
cmpsl
cli
jbe
out
outsl
clc
test
sub
cmc
std
loop
loop
xchg
repz
js
sbb
pop
push
xor
mov
cmp
jecxz
inc
jmp
cld
rcrb
mov
cmp
push
int3
xor
inc
inc
mov
xlat
jg
popa
iret
add
out
into
pop
sub
scas
insb
jl
or
jp
pushf
nop
js
decb
mov
aad
enter
lock
sbb
push
pop
vpsllq
xchg
xchg
sbb
stc
pop
jmp
sbb
pop
dec
push
repz
outsb
mov
addl
cmp
pop
push
loopne
pop
xchg
mov
mov
or
ss
xorb
imull
fldl
push
dec
stos
or
jmp
mov
mov
dec
pop
imul
movsb
rorb
mov
jbe
gs
inc
aam
sub
push
rorl
cmp
sarl
mov
or
jl
push
repz
cld
daa
mov
hlt
nop
and
mov
mov
push
pop
add
mov
xor
loopne
imul
popa
dec
insl
mov
xsave
lret
jae
xchg
movsb
inc
jbe
daa
int
push
adc
stc
ret
inc
clc
stos
scas
decl
rcrb
stos
cmpsl
sarb
xchg
xchg
filds
mov
pop
add
shll
stos
and
mov
xchg
pop
inc
push
mov
mov
pop
add
fisttpl
data16
jge
mov
jg
mov
cwtl
les
les
jne
dec
aam
or
jg
jmp
xchg
dec
pusha
in
push
jns
jmp
inc
xor
fimull
or
mov
jbe
lods
jmp
or
das
insl
lahf
icebp
mov
stos
stc
aas
repnz
mov
adc
out
push
fistps
xchg
sbb
mov
add
adc
filds
or
cmp
and
mov
jl
imul
jg
xor
fucomip
out
sahf
in
or
lret
lcall
call
fildl
out
pop
mov
mov
orl
push
test
jle
rcll
mov
dec
mov
mov
jle
cs
movsl
das
add
or
cmp
decl
or
ret
in
call
aam
in
push
out
dec
ficomps
cmp
add
addr16
addr16
fmuls
popf
jg
pop
orl
adc
mov
scas
push
xlat
jecxz
cmp
popa
les
jge
popa
clc
push
rorl
sbb
mov
js
dec
push
mov
fiadds
and
and
adc
cs
fcmovnb
in
add
inc
out
fcmovu
xor
push
sbb
data16
jo
cmp
add
inc
and
and
sbb
inc
mov
shlb
mov
adc
inc
sub
stos
sbb
dec
ret
and
aad
cmp
jl
mov
jae
sar
and
inc
jb
cld
push
jno
push
scas
inc
pop
xorb
stos
std
mov
pushw
mov
lock
lods
pop
xchg
test
pusha
adc
addl
jae
pop
and
shll
pusha
popa
pop
dec
jmp
fistps
fwait
stos
loop
add
dec
adc
bound
repnz
push
cmp
sub
mov
cmp
data16
std
imul
lret
adc
mov
xor
sub
xchg
sub
popa
mov
push
push
out
call
mov
mov
mov
clc
ret
mov
out
mov
loope
inc
push
dec
or
cld
inc
stos
jnp
stos
pop
je
scas
adc
cmp
sbb
cmpsb
pusha
mov
ljmp
cmp
mov
dec
testl
in
pop
push
cld
out
push
dec
rcll
sti
jb
pop
add
mov
mov
mov
pop
xor
sub
shlb
push
imul
dec
ljmp
mov
mov
xor
adc
in
sbb
jge
xor
ret
sub
popf
divb
mov
pop
sarl
pop
xchg
mov
mov
scas
mov
mov
fyl2x
mov
xor
inc
mov
and
adc
xor
adc
addr16
xor
clc
dec
fsts
movb
loopne
lret
xor
adc
mov
adc
shr
test
test
sub
loop
fcmovnb
push
jle
cmp
jmp
pop
jle
pop
dec
lods
mov
dec
mov
dec
popa
jns
mov
jp
fs
inc
jp
or
xor
sbb
repz
dec
test
leave
loope
mov
pop
mov
cmpb
jbe
sbb
push
shlb
and
sbb
movsl
flds
lods
pop
push
out
mov
out
add
jnp
fists
out
jl
inc
fisttpl
popf
cltd
sahf
inc
xor
mov
loope
repnz
test
lret
insl
mov
xchg
xchg
cmpsl
enter
stos
mov
cmp
je
out
insb
into
add
sbb
xchg
pop
push
mov
push
push
out
ljmp
int3
test
addr16
movsl
mov
shll
mov
shl
sbb
in
iret
jae
push
cmp
mov
in
pop
das
adc
or
movsb
lods
gs
mov
jb
dec
dec
dec
xchg
xchg
pop
inc
fs
repz
ja
iret
mov
jo
jle
in
sbb
push
push
jbe
add
roll
out
mov
aad
mov
js
es
lds
loop
cmp
daa
xor
fscale
cwtl
lea
ret
lcall
mov
outsb
cmp
addr16
loopne
dec
lcall
fsubl
stos
jp
xlat
out
xlat
mov
adc
adc
inc
lret
aas
scas
mov
dec
cmp
test
xchg
pop
xor
cmp
shrb
ror
mov
mov
jg
push
sub
pop
fsubp
pop
subl
xchg
pop
incl
call
scas
out
jle
cltd
jmp
rclb
scas
fnstsw
dec
mov
ja
inc
inc
mov
jmp
adc
and
imul
mov
cmp
cmc
outsb
mov
jnp
inc
cmp
mov
cmp
add
xchg
adcl
fldcw
xor
jp
scas
ret
std
popf
jno
in
add
faddl
ret
fdivl
mov
fs
subb
xor
adcb
fldenv
push
scas
dec
and
mov
outsl
jl
or
push
rorb
push
lods
js
enter
xchg
cltd
cmp
inc
sbb
push
mov
inc
fwait
pop
adc
add
in
xchg
push
idivb
sub
push
adc
outsb
or
inc
adcb
cmp
mov
in
ffreep
fnsave
mov
sbb
cmpsb
xchg
add
test
lds
push
mov
mov
mov
dec
sub
mov
adc
mov
rep
mov
data16
mov
jb
cmp
inc
lods
shrb
punpcklwd
leave
fbld
jnp
xchg
mov
mov
movsl
pushf
cltd
xor
mov
cli
neg
sub
jns
insl
sub
mov
iret
int3
out
jmp
inc
imul
or
in
insl
arpl
push
cmp
andl
adc
cmpl
nop
jmp
jecxz
data16
sbb
push
inc
call
or
add
jae
insl
add
imul
out
vandps
or
inc
mov
mov
xchg
in
add
lods
push
pop
aas
stos
sbb
ds
gs
testl
enter
icebp
push
sub
lret
and
imul
stos
mov
xchg
jmp
mov
cs
dec
xor
repz
aad
jp
sti
mov
jbe
cmp
mov
adc
rcl
mov
inc
lds
fiaddl
in
fdiv
push
rcll
movsb
or
cli
pop
fldt
mov
jae
aam
data16
xor
cmp
mov
jns
mov
jle
cmp
cltd
scas
mov
scas
cmpsb
popa
xchg
popa
pop
gs
inc
pop
xor
jcxz
rcrb
mov
scas
insl
jno
mov
push
xor
cltd
sahf
mov
xchg
outsl
pop
xchg
popa
mov
pop
and
cmpsb
and
inc
mov
stos
ret
ljmp
fimuls
xor
mov
cmp
inc
mov
xorl
mov
setnp
push
lods
icebp
sbb
aam
sarb
cmp
popa
push
jl
dec
xor
sub
mov
sbb
jmp
mov
add
push
jg
loop
lret
pop
inc
fistpl
rorl
pop
dec
sub
mov
mov
xchg
mov
arpl
imul
fnsave
mov
in
dec
push
push
xchg
pop
out
out
jns
mov
mov
cmp
call
mov
pop
xor
mov
dec
mul
push
jno
sti
dec
test
data16
mov
mov
fsubrs
pop
arpl
inc
imul
mov
mov
inc
jns
or
mov
jbe
xchg
or
add
std
add
loopne
sbb
cld
mov
mull
out
cmp
mov
cmpsl
push
frstor
loope
mov
cmp
int3
repnz
adc
loop
mov
xchg
mov
and
out
xor
lds
sbb
rorl
imul
popf
mov
aad
pop
mov
test
loop
sbb
jae
sbb
in
pop
std
cmp
addps
fdivrl
mov
mov
jg
pop
repnz
popa
movsl
and
xchg
outsl
test
pusha
push
cld
push
mov
push
cmp
sahf
pop
aad
sub
cmp
lret
pusha
cmovnp
sub
sub
sub
cli
inc
add
jmp
xchg
jge
xchg
dec
and
xor
dec
xor
pop
mov
dec
mov
lss
repnz
sub
sbb
xchg
imul
pop
dec
orl
jns
xchg
and
sub
mov
lods
mov
add
lcall
dec
mov
xor
scas
sub
in
arpl
loope
fsubr
fucomi
movsl
loop
sbb
jp
xor
aaa
or
xchg
inc
add
push
scas
cld
mov
pop
xorb
into
mov
mov
dec
pop
es
inc
lock
lahf
lods
enter
cmp
call
push
rorl
pop
dec
insb
jno
pop
add
lds
jno
pop
dec
pop
mov
xchg
cmpsb
in
xchg
and
push
pushf
pop
sbb
mov
ja
dec
inc
mov
or
adc
es
aad
into
in
ret
ds
xor
lea
inc
and
repnz
lret
cmp
mov
sbb
xchg
not
leave
xchg
pop
inc
dec
mov
pop
pop
add
stos
mov
cltd
imul
mov
dec
hlt
loope
and
pushf
dec
xchg
pop
mov
xlat
add
xor
test
imul
jnp
leave
cmc
shlb
sbb
arpl
or
iret
test
loope
fcompl
ljmp
jmp
test
mov
xor
imul
lcall
mov
fwait
insl
jno
jne
jno
add
jg
add
mov
repz
pop
jecxz,pt
jbe
and
and
sbb
mov
in
rorb
decl
lods
mov
or
mov
push
fcompl
lds
loop
test
xchg
loop
xor
in
ss
and
mov
push
mov
das
mov
jg
fdivl
shlb
fimull
clc
jnp
or
das
adc
inc
in
xchg
xor
cmp
and
push
and
cld
inc
nop
mov
mov
out
sbb
lahf
repz
rcl
add
vmwrite
mov
dec
push
push
mov
movsb
xchg
jge
cmp
jmp
insl
out
xchg
aas
cltd
pop
sbb
ret
lret
or
lcall
mov
adc
push
inc
push
push
lahf
lahf
fidivs
mov
imul
test
sbbb
data16
loop
lahf
jno
mov
lret
adc
sub
clc
out
test
sbb
ljmp
hlt
mov
push
mov
js
mov
pop
jmp
mov
add
cmp
jmp
inc
mov
jp
inc
cmp
lea
rorl
mov
pop
subl
push
ljmp
cmp
pop
mov
rcll
inc
push
loop
push
inc
out
adc
pop
dec
or
push
cmp
xchg
inc
inc
jg
test
adc
sbb
in
movsl
cmovle
cmp
out
div
imul
cmp
cwtl
push
dec
ja
call
imull
insb
in
and
xchg
call
lahf
push
aaa
ret
sub
pusha
ja
add
sbb
or
aaa
enter
and
lahf
pop
cwtl
cmc
fdiv
push
aad
mov
push
xchg
xor
inc
add
andl
jns
push
cmp
repnz
inc
pop
pop
mov
xchg
fs
dec
ret
adc
mov
pop
adc
mov
ds
jge
adc
push
and
xor
je
jnp
push
std
sbb
pop
mul
enter
pop
out
adc
loop
and
es
xchg
dec
addr16
addr16
sahf
movsb
cmc
push
lret
mov
cld
insb
jg
jb
sub
lahf
sbb
pop
jmp
cmc
hlt
mov
dec
aam
sub
xchg
loope
sahf
movsb
testl
lock
ljmp
ret
xchg
pop
lds
lock
mov
aam
xchg
call
outsb
mov
sar
mov
ja
inc
xchg
testb
mov
negb
aam
xorl
add
jo
sbb
cld
jg
mov
xlat
out
xchg
cltd
jmp
fwait
inc
std
bound
add
pushf
test
pop
cli
and
nop
imul
xchg
iret
inc
cmp
xor
and
or
test
mov
or
sub
push
pop
push
sub
fwait
pop
sahf
mov
add
pop
pop
push
in
addr16
sbb
out
std
push
cmpsb
mov
and
lds
call
xchg
rolb
add
mov
jl
jp
sub
push
cltd
and
mov
fcmovnb
pusha
mov
dec
sbb
pop
cld
test
int
xor
pop
inc
jge
jae
les
fisttps
leave
mov
ror
pop
inc
jnp
mov
mov
sub
xchg
or
or
cltd
and
mov
std
and
icebp
leave
iret
sti
sbb
mov
testl
sbb
hlt
fdecstp
sti
pop
aaa
jge
ja
cmp
inc
inc
js
mov
loope
sbb
ds
lods
xor
je
insb
jbe
cwtl
hlt
pop
xchg
inc
push
pop
out
test
xchg
xor
xor
call
clc
sub
add
fcoml
shlb
or
mov
fpatan
adc
add
ja
jnp
sub
testl
dec
shll
cld
dec
sbb
sbb
es
mov
mov
cli
shl
or
jl
lahf
mov
xlat
dec
insl
insb
aam
lea
fcoms
push
push
daa
pop
lods
cltd
add
repz
dec
aaa
in
addr16
inc
add
xor
push
pop
cmp
lds
mov
sbb
pop
cwtl
mov
lds
mov
js
stos
jecxz
mov
and
xor
rolb
and
pop
lock
lock
aam
les
loop
xchg
push
jmp
in
inc
xchg
mov
cmp
fdivrl
sbb
push
imul
cwtl
ja
psrad
add
fwait
addb
mov
push
cmp
stc
mov
push
sbb
adc
outsl
outsl
lock
decb
xchg
xchg
lods
call
lret
dec
stos
pop
pop
cwtl
jmp
sahf
sarb
sub
in
jns
jle
cmpsl
das
nop
adc
iret
or
pusha
cmp
dec
dec
mov
rorb
xor
stc
sub
test
stos
fs
mov
jb
push
in
mov
outsb
pop
das
ret
xlat
insl
mov
mov
mov
sub
sbb
lcall
std
cs
xlat
mov
and
pop
fidivl
mov
inc
jbe
xchg
sub
pop
test
imull
aam
out
cs
in
pop
dec
sbb
mov
mov
es
sbb
mov
adc
push
jecxz
ficompl
loope
std
mov
rolb
cmp
out
mov
sbb
xchg
enter
xchg
fidivs
scas
ret
and
lock
dec
test
imul
ret
int3
movsb
jae
dec
push
or
dec
aas
and
mov
mov
cmp
lock
ljmp
push
mov
lds
dec
int3
jge
popl
fs
das
into
lods
push
jp
dec
push
or
inc
shrb
xchg
jnp
push
mov
mov
jp
and
jne
rdtsc
icebp
sub
and
cmp
xor
dec
sti
mov
or
mov
shrb
out
fistl
rclb
mov
xor
stc
mov
pusha
test
mov
push
ljmp
aad
inc
fsubr
ljmp
cltd
xchg
mov
inc
into
add
sbb
add
mov
pop
sbb
sub
jae
or
insl
push
pop
inc
outsb
sbb
pusha
mov
lret
mov
out
push
ljmp
subl
sub
dec
jg
cmp
push
jl
nop
scas
inc
in
add
stos
bound
pop
es
mov
push
push
add
xchg
adc
mov
out
inc
adc
repnz
pop
sub
mov
rorl
cmp
add
cltd
out
add
mov
jmp
and
jnp
lcall
sub
mov
sahf
loopne
setae
mov
push
in
gs
cmpsb
iret
jae
cmp
pop
imul
mov
jge
mov
xchg
sbb
ds
cs
push
div
xor
cmp
lahf
and
ljmp
das
wbinvd
movd
xor
sti
xor
mov
add
cli
out
cld
addl
dec
jg,pt
sarl
xorl
cmpsl
popf
and
cmc
je
pop
mov
jle
mov
lds
aam
in
ds
ror
jnp
cli
adc
movsl
outsl
enter
hlt
loop
clc
test
pop
or
push
pushf
imul
add
test
push
ja
pop
sbb
shlb
push
cwtl
sub
inc
inc
fisttps
sub
or
aad
clc
mov
add
std
sti
mov
fmuls
fidivl
rcl
adc
push
jge
rcll
sbb
out
mov
int3
fmulp
popa
add
xlat
out
fnsave
imul
clc
xor
add
or
mov
cmpsl
mov
stos
repz
cmp
jge
je
push
adc
inc
ret
and
adc
insl
mov
out
lret
jg
mov
dec
fisubl
inc
pushf
sbb
repnz
loope
pop
aaa
lock
adc
nop
data16
mov
popf
jp
fldcw
fldenv
or
mov
loope
das
jns
xchg
cltd
push
shrb
lock
aad
stos
pop
xchg
inc
sub
xchg
cmpsb
cmp
aaa
lcall
xor
and
dec
mov
mov
push
in
push
ljmp
jmp
lret
jae
sub
mov
cwtl
cltd
push
mov
lret
int
cmp
inc
add
xchg
push
mov
push
jae
and
sbb
test
dec
jb
mov
mov
pop
in
jae
popf
xchg
dec
das
adc
inc
jne
sub
push
mov
mov
inc
loope
cmpl
jmp
addr16
loopne
inc
xchg
in
mov
fisubl
push
cmp
xor
imul
sbb
add
adc
shll
and
adc
jl
xor
in
rolb
adc
ret
cmc
mov
sub
jl
push
fcomps
test
xlat
add
xor
aaa
mov
in
mov
push
sarl
pushf
mov
add
jns
cmpsb
scas
mov
jmp
scas
inc
addr16
mov
push
jo
sarb
and
mov
add
pop
jp
sbb
xchg
sub
jmp
mov
out
dec
add
or
sbb
push
or
in
stos
adc
cli
sbb
lods
xrelease
inc
movsl
mov
jge
add
jl
hlt
hlt
adc
data16
or
adc
fcomp
add
pop
imul
sbb
fs
mov
jecxz
pop
fcmovne
add
mov
mov
gs
mov
mov
lock
pop
mov
sbb
xchg
daa
cmp
scas
xor
fwait
pop
lds
add
add
jl
sub
and
dec
adc
insb
jo
mov
fbstp
vucomiss
outsl
mov
pop
pop
cmp
test
xor
scas
jg
xchg
mov
pop
ljmp
inc
scas
loop
mov
pusha
sub
dec
fsub
int
jo
xchg
xor
mov
punpcklbw
push
or
jge
ds
or
xchg
adc
sub
lds
jle
cmpsb
ljmp
add
out
or
cmp
sbb
clc
outsb
fcoms
xchg
add
sub
sbb
test
adc
cmp
cmpsb
adc
or
movsl
cmp
iret
dec
lods
out
iret
add
push
dec
dec
test
adc
cld
ljmp
push
inc
xchg
roll
pop
push
mov
int
ret
jg
je
jle
les
cmp
cli
outsl
pop
shrl
arpl
pop
cmp
jge
jnp
les
pop
pop
lods
flds
shlb
mov
mov
call
dec
sub
sbb
ret
out
scas
subb
or
pop
dec
aas
add
outsb
xchg
lods
mov
mov
jbe
xrstor
adc
push
pop
push
popa
sub
js
sub
es
dec
lahf
negl
jge
bound
dec
dec
aas
icebp
rcr
jge
js
hlt
or
je
out
insl
sub
or
and
push
and
out
mov
cmpsb
cmpsb
sbbl
cli
sbb
inc
jg
mov
push
and
pushf
test
or
cld
sbb
daa
xchg
add
lds
bound
and
loop
jle
lahf
idivb
outsb
jl
pop
fs
dec
sbb
bound
inc
inc
mov
sub
add
les
push
push
push
jno
mov
rorl
shll
xchg
jbe
cwtl
or
mov
push
icebp
or
push
cmp
push
mov
icebp
popf
ret
xor
jmp
rcll
cmp
pop
xor
rclb
lea
into
pop
cmp
pusha
clc
lsl
push
sbb
mov
sub
dec
lds
sahf
orb
sbb
cmp
cli
push
cmp
cmp
sbb
sub
xchg
out
and
fsubl
ds
xchg
nop
std
movl
mov
fdivp
inc
pop
mov
inc
in
add
mov
or
adc
sbb
xchg
inc
and
sti
data16
mov
int
mov
divb
shlb
lds
xchg
mov
mov
jg
adc
mov
push
stos
cmp
sub
push
push
lea
fadds
mov
pop
sbbb
push
jnp
inc
adc
loope
xchg
dec
stos
fs
cmp
ss
push
adc
mov
pop
int
inc
xchg
mov
sbb
lea
jl
push
cmp
pop
stos
into
clc
mov
movl
sub
jbe
mov
icebp
xor
cmp
jno
int
mov
adc
mov
popa
jl
xor
outsb
xchg
pop
xor
cmp
aaa
inc
xlat
insb
mov
push
adc
or
test
iret
iret
std
ret
sbb
adc
sbb
stc
arpl
test
add
pop
aas
cli
enter
and
sbb
push
mov
popa
loope
addr16
mov
mov
push
mov
daa
mov
xchg
push
or
std
cmp
cmp
add
push
fsubr
push
fstps
sub
dec
push
sbb
mov
xchg
movsl
push
stos
out
jl
popa
adc
push
xchg
push
add
or
cmpb
data16
mov
inc
pop
add
xlat
lods
fistl
loope
cmp
ret
in
xlat
leave
enter
loope
push
pop
inc
movb
jp,pt
push
ja
xor
sti
push
cmp
pushf
les
lret
in
add
xchg
cmpsb
std
xor
out
sti
out
sti
and
test
ljmp
jae
jmp
sbbb
adc
pusha
add
fcompl
sub
mov
cmpsb
push
shl
or
sub
stc
int3
es
or
or
cs
or
inc
test
adc
call
sbb
cmp
dec
fs
add
arpl
pop
cmc
or
aaa
pusha
loopne
stc
mov
dec
divl
inc
fnstcw
cmpsl
or
and
mov
aam
pop
cmp
stc
pop
jp
ljmp
leave
ljmp
lret
ret
js,pt
nop
jmp
sub
mov
stc
pop
out
inc
loope
stos
movsl
mov
movsb
out
adc
in
cld
xor
cld
nop
prefetcht1
ljmp
aam
jbe
test
mov
stos
mov
in
stc
fs
mov
cmpsl
fs
adcl
sub
out
and
mov
pop
adc
mov
adc
shrb
dec
and
jg
in
addl
dec
mov
inc
or
jecxz
mov
mov
js
fisttpl
fmull
jns
std
push
pop
add
movsb
cmp
adc
sub
imul
sarl
xor
sti
rcl
jle
mov
jg
cmp
sbb
pop
arpl
mov
clc
dec
or
movsl
cwtl
pop
add
inc
dec
mov
jae
jle
add
pop
sub
mov
sahf
mov
cmp
push
leave
arpl
popf
enter
or
repnz
mov
pop
push
mov
popa
xlat
jnp
cmp
dec
sub
popf
sbb
cmp
lret
jno
xchg
das
pop
push
mov
out
test
adc
jno
xor
aam
push
or
cmp
or
int
test
dec
xchg
mov
andl
std
test
cmp
test
dec
ja
mov
push
fsts
inc
cmp
adc
iret
test
in
pop
arpl
jmp
or
sub
xchg
push
das
pop
jge
xchg
aam
ljmp
jbe
xor
int3
popf
pop
sub
xlat
fwait
jp
fmuls
dec
movsl
les
insl
and
fstl
push
ror
popf
sbb
scas
jl
pushf
popf
aas
dec
fs
sub
leave
add
pcmpeqd
stc
and
mov
pop
rcl
jmp
addb
ret
rcrb
and
fistpl
in
mov
sbb
fnstenv
cmp
sbb
xchg
ret
outsb
inc
xor
inc
mov
pop
inc
push
and
mov
sub
and
js
call
inc
sub
ds
movsb
pop
xor
push
in
inc
pushf
or
ror
cltd
inc
jnp
and
sbb
lods
add
add
aad
popf
mov
sub
xor
ja
jne
dec
push
mov
test
fisubrs
pop
sub
dec
les
sub
dec
int3
push
cmp
mov
shlb
cmp
xchg
test
sbb
adc
lods
out
xor
stos
dec
fmull
jo
sbb
xchg
das
inc
jne
xchg
outsb
insl
pop
or
subb
lret
xor
stos
sub
mov
sets
xchg
lods
ds
pop
shr
adc
or
add
fisubrs
jmp
pop
mull
lret
and
outsl
xchg
lahf
out
inc
rol
frstor
fs
or
inc
test
add
call
cmp
cmc
out
test
outsl
mov
ss
mov
fs
test
dec
insb
mov
inc
xchg
push
push
pop
inc
loop
sti
sbb
cltd
mov
cwtl
enter
orb
aaa
xor
in
dec
jp
fwait
daa
fnstcw
mov
fdivl
test
adc
shlb
adc
lcall
ret
jnp
sbb
insl
xchg
dec
add
xchg
inc
push
fwait
push
mov
sbb
cli
popa
push
or
ja
sbb
xchg
pop
ja
inc
jns
ljmp
xchg
add
imul
add
push
mov
push
pop
repz
gs
pop
pop
adc
in
cmpsb
sbb
scas
push
cmp
jl
jns
hlt
aam
xor
jno
das
dec
adc
les
sbbl
xchg
pop
lock
mov
sbb
dec
ljmp
test
xchg
ja
push
aas
jecxz
insb
das
in
pop
mov
imul
jl
lds
shrb
leave
cld
ret
xor
and
pop
rolb
cld
xchg
sub
lahf
jbe
sub
mov
push
pop
fs
pop
mov
shll
push
divb
test
repnz
mov
imul
fwait
in
add
aaa
adc
push
out
or
xchg
cmp
out
std
xchg
inc
sti
adc
cmp
scas
test
xor
add
divl
mov
xor
pop
lea
and
push
jle
jns
pop
cmp
inc
call
lcall
mov
out
je
xchg
pop
cmp
and
mov
mov
xor
cmp
mov
rsm
inc
mov
rorl
or
xlat
jg
push
std
dec
in
jl
and
mov
ret
jg
pop
in
cltd
shl
test
inc
xchg
aaa
xchg
psrlw
and
xchg
mov
je
arpl
cmpsb
xchg
iret
outsl
jb
aam
fildll
insl
or
stos
sbb
cld
and
jne
ficompl
sub
push
into
popa
loopne
in
xor
push
sbb
and
lret
lret
outsb
jb
add
jp
pop
cmp
test
sbb
or
aad
add
inc
std
pop
push
jmp
in
mov
daa
cmc
lds
insb
pop
loopne
roll
stos
mov
repz
dec
or
test
dec
packsswb
pop
out
and
jae
lds
loop
stos
rorb
insb
enter
add
insb
scas
jns
dec
stc
pop
roll
push
mov
sub
movsb
sbb
sbb
outsb
cmp
xor
jge
aad
sbb
jecxz
lret
in
jg
je
or
int3
ret
jecxz
in
add
in
repz
cmp
add
push
dec
jnp
ret
cli
inc
mov
sub
mov
fldenv
pop
adc
xchg
loopne,pn
pushf
es
and
in
loopne,pt
imul
test
xchg
push
movl
fildl
gs
push
mov
pop
pop
lods
or
pop
dec
jae
mov
pop
movsl
unpcklps
dec
ss
fwait
push
mov
pop
push
bound
push
or
imul
cmp
inc
xor
push
out
imul
ret
lret
icebp
fistpll
xorb
sbb
lods
lods
cmp
xchg
daa
xor
and
lahf
jle
xor
popa
inc
push
xor
jg
fwait
jge
shr
mov
xchg
in
lret
in
out
das
lods
push
and
sbb
jl
roll
jne
lret
icebp
pop
fimuls
xchg
cmpsl
cmpsl
in
adc
inc
push
fstps
and
sub
mov
fmuls
adc
leave
testb
movl
lret
scas
loop
and
lret
jp,pn
mov
mov
push
fistpl
outsl
adc
xor
test
mov
cmp
push
xchg
push
xchg
je
andl
inc
imul
test
cmc
sahf
lret
clc
push
aam
fs
mov
frstor
inc
mov
aam
xchg
iret
in
test
je
cld
clc
jne
sbb
xchg
mov
dec
enter
and
sub
aas
xor
lcall
jo
icebp
cmp
shlb
push
popa
add
pop
daa
dec
mov
test
insb
mov
jl
cmc
mov
or
xor
sarl
sub
dec
popf
daa
iret
nop
in
fwait
ja
adc
jno
aam
je
push
pop
mov
add
cltd
sbb
mov
test
pop
xor
xchg
insb
pop
loopne
mov
test
lea
shll
pop
cwtl
fst
or
jl
mov
add
xor
roll
sbb
xchg
dec
push
fcomps
push
pop
push
outsl
mov
es
mov
les
push
fs
cwtl
adc
cmp
inc
outsb
fxtract
jnp
bound
sub
das
cmp
pushf
test
movsl
leave
daa
sti
push
sahf
movsl
inc
push
enter
cltd
dec
outsl
mov
mov
xchg
ret
mov
mov
les
adc
divb
inc
out
pop
xchg
and
lcall
jo
mov
out
mov
push
arpl
inc
rcr
fdivrl
cld
sub
pop
pushf
jbe
xor
xchg
cmp
mov
jb
inc
test
adc
mov
rcll
and
stos
mov
es
cltd
pushf
cmp
dec
lahf
fwait
in
sub
and
leave
jbe
mov
lds
and
push
dec
and
aad
xor
nop
mov
pop
cmp
int
or
push
pop
shlb
mov
mov
xchg
sub
and
sbb
mov
sbb
ds
jbe
sub
push
in
cmp
jle
push
in
aam
mov
insl
outsb
mov
add
xlat
fidivs
sub
sub
cmp
stos
sub
cmp
ret
jb
cmpsb
mov
jbe
xor
xchg
flds
imull
jecxz
ss
shl
lahf
aam
xor
add
add
in
scas
leave
cltd
lcall
or
mov
daa
xor
adc
adc
cltd
aaa
add
adc
xor
xlat
imul
xchg
push
sbb
test
rorl
cmp
aad
pop
pop
cmpsb
dec
fwait
int
ret
imul
push
lret
mov
lea
xchg
mov
cmp
cmc
inc
std
mov
inc
subb
sbb
fwait
int
fisttpll
je
popa
cli
add
mov
push
xor
test
mov
xor
adc
fisttps
insl
cld
gs
mov
mov
fidivl
popf
iret
jbe
mov
test
loopne
fistl
outsb
out
mov
cmpsl
test
aaa
add
or
mov
cmpsb
arpl
xorb
lds
cmp
add
cmp
add
pop
shl
clc
nop
les
mov
test
cmp
popa
pop
dec
outsl
or
sbb
mov
repnz
insl
repz
hlt
lods
jmp
in
sbb
daa
scas
mov
aad
ja
mov
ja
push
sub
jg
dec
cmpsl
ret
inc
cmpsl
pop
hlt
inc
out
aam
xchg
sbb
sbb
or
jg
adc
and
ja
jmp
or
loopne
mov
mov
sbb
inc
and
pusha
fisubl
inc
fstl
out
cmp
test
ljmp
outsb
push
test
xor
rol
xchg
mov
mov
repnz
xchg
sbb
test
mov
andb
dec
adc
add
fdivl
test
adc
cmp
adc
mov
and
fs
dec
dec
xor
pop
mov
add
jb,pt
jb
jmp
scas
lods
and
sub
jne
repnz
enter
btc
in
int
cmp
push
inc
into
scas
lahf
jmp
popa
cmpsl
jecxz
shrb
mov
and
cmp
insb
mov
push
leave
jge
iret
and
pop
es
insl
inc
push
jno
in
mov
mov
call
iret
pop
pop
cmp
add
ret
sbb
sahf
sub
and
xor
fistpl
es
jp
xor
pop
in
loop
dec
mov
xchg
les
add
add
push
xchg
mov
add
test
outsb
call
jnp
xor
xchg
jge
sbb
and
loop
out
ds
stos
in
mov
out
sarl
or
in
fsubr
mov
mov
mov
ret
adc
dec
rolb
push
dec
sti
and
ja
sbb
push
inc
mov
data16
das
in
loope
scas
cmpsl
mov
cmpsl
loop
xchg
cmp
mov
jbe
aas
icebp
pop
or
pop
or
aad
cmpsb
adc
fucomi
fsubrl
push
jg
xor
sub
and
fcom
mov
mov
outsb
gs
or
fidivl
mov
inc
sahf
mov
sub
sub
js
mov
mov
daa
push
push
jl
iret
sar
add
mov
mov
adc
out
mov
mov
push
lahf
add
push
stos
sub
pop
fistpll
adc
jns
xchg
jns
pusha
sub
jno
add
jecxz
jb
roll
pop
dec
push
or
jb
popf
sahf
mov
adc
data16
outsl
out
stc
jno
fisubrs
xchg
adc
adc
or
in
repnz
sbbl
push
cld
xchg
lods
xor
mov
jp
or
fidivs
nop
xor
ret
addr16
cmpsb
lea
negl
xor
xchg
xchg
add
rdpmc
ljmp
loop
push
add
aam
cwtl
in
pushf
das
mov
cmpsb
negb
int3
lret
ljmp
pop
mov
mov
addr16
iret
sub
testb
leave
das
mov
or
adc
xchg
cmp
fsubrl
sub
negl
mov
lods
nop
popa
fnstsw
subl
xlat
stos
or
pop
popf
cltd
fisttpl
xlat
lahf
cmc
int3
mov
popf
stc
xor
inc
pop
sub
in
cmpl
out
mov
jmp
rcrl
mov
ret
sbb
les
pop
in
xchg
outsb
lret
mov
das
mov
mov
dec
mov
cmp
fwait
adc
jp
out
pop
fldl
jb
lcall
mov
pop
inc
sahf
sbb
mov
add
pop
add
and
loope
fildl
in
xlat
jl
mov
adc
call
cmp
inc
pop
mov
movsl
xor
nop
mov
shrb
dec
test
popa
sti
mov
or
lret
int3
or
adc
ret
pusha
js
push
pop
and
mov
mov
xchg
jnp
aaa
cmp
xchg
pop
out
sahf
jp
cmp
pop
lods
sbb
inc
lret
xchg
or
xor
cmp
and
es
mov
and
pop
xor
movsb
inc
mov
lock
dec
mov
movsb
push
xchg
out
mov
mov
mov
mov
hlt
inc
mov
mov
cmp
mov
pop
push
enter
sbb
fisttps
dec
leave
adc
int3
push
or
adc
movsb
jecxz
roll
aad
add
adc
outsb
stc
push
ljmp
cli
or
push
mov
push
mov
out
outsb
jmp
cmpsb
mov
xchg
cmp
push
fnsave
lods
mov
sub
loope
in
lcall
fidivl
xchg
adc
mov
and
lret
mov
push
stos
adcb
xchg
mov
int
lret
ror
ret
xchg
int
jno
sbb
and
mov
daa
mov
push
pop
fs
data16
xor
cld
shrl
loope
mov
cmpsl
dec
inc
cmpsb
jns
mov
lock
daa
in
js
mov
mov
sub
xchg
mov
mull
movsl
pop
push
imul
arpl
fcomps
sub
xor
dec
add
dec
insb
jnp
pop
add
add
inc
iret
cmpsl
xchg
aaa
sbb
push
cmp
iret
mov
out
push
jns
imul
ja
sbb
mov
xor
clc
cmpsl
xor
and
repnz
or
mov
lcall
cmp
cli
lock
mov
das
inc
adc
cmc
out
mov
cli
xchg
sub
pop
mov
pop
das
in
lret
push
dec
jge
jg
je
cwtl
xor
lods
out
or
mov
or
cld
ret
aaa
pop
jb
mov
dec
pop
jp
lds
popf
mov
jl
jns
mov
cwtl
xchg
pop
scas
jecxz
lcall
push
or
xchg
jge
sarl
lock
shl
xor
mov
pop
pop
fwait
mov
sub
outsb
mov
movb
push
insl
jbe
insw
aaa
test
mov
add
popa
pop
pop
ret
and
add
test
in
stos
jp
jge
mov
or
pushf
cs
imul
jns
lea
repnz
loope
insl
sub
and
push
sub
sub
sub
xor
adc
push
mov
sub
inc
insb
dec
es
mov
lret
cwtl
fdivl
cmp
pusha
gs
popf
cltd
call
fisttpl
ljmp
jle
shl
test
inc
add
adc
popl
repnz
pusha
enter
xchg
test
out
mov
aam
cmpsb
mov
mov
sub
mov
jne
adc
cmpsb
push
mov
or
pop
mov
jbe
stos
push
ljmp
mov
shrl
mov
adc
add
mov
inc
mulb
pop
jmp
pop
stos
fnstsw
xchg
or
mov
lods
inc
inc
mov
std
mov
fidivl
test
pop
push
mov
mov
cltd
into
hlt
sub
xchg
sbb
ss
inc
push
jne
insl
adc
push
aad
imul
cld
aas
dec
sbb
pop
mov
mov
dec
leave
es
cltd
jb
aaa
int3
stc
rclb
insb
daa
sub
cmpsb
mov
out
pop
subl
in
jae
add
scas
insb
addl
int
inc
es
add
or
xchg
or
mov
push
and
push
pop
std
xchg
std
jge
add
lods
movsb
jle
add
mov
lcall
js
dec
outsb
pop
sub
sbb
pop
pop
rorb
jns
and
popa
testb
mov
sub
xchg
and
jne
dec
mov
dec
mov
imul
or
movb
jmp
jmp
leave
and
mov
cli
push
inc
orb
sbb
cmp
ret
loope
stos
xor
outsb
xor
mov
fstp
push
and
sbb
lods
mov
mov
mov
dec
hlt
andl
addr16
stos
into
addr16
cltd
in
xchg
inc
cmp
mov
xor
push
and
push
jge
out
mov
mov
cs
jb
out
push
fdivr
pop
jl
or
xor
add
andb
int3
cmp
cmp
or
push
pop
bound
pop
mov
and
mov
loop
lods
jnp
xor
adc
or
pushf
sub
mov
lahf
mov
fdiv
les
mov
xchg
jmp
sbb
hlt
sbb
dec
rcrl
sbb
add
adc
jmp
pusha
ret
pop
cmp
xor
int
pop
or
jno
dec
jae
nop
sub
lods
dec
dec
mov
clc
call
out
dec
or
rcrl
mov
mov
clc
pop
shll
mov
stos
mov
pop
pop
outsl
out
mov
mov
jae
xchg
xor
cmp
sbb
repz
adc
push
adc
jno
test
lcall
and
data16
add
cltd
das
pop
sbb
in
pop
pushf
scas
bound
clc
adc
jge
out
mov
pushf
cmp
sbb
fdivrl
mov
mov
sub
jl
jnp
lret
movsb
in
stc
rcll
fisttpll
jge
or
shl
into
xor
cmp
cli
add
jecxz
cmpb
and
dec
pop
xlat
mov
jns
xchg
sbb
mov
dec
jnp
fimuls
push
stc
loope
xchg
inc
fsubrs
or
jmp
pop
mov
pop
push
xor
sub
dec
push
xchg
push
and
and
data16
jp
aad
cmpb
cmpl
lds
or
incl
cltd
add
es
stos
jno
ds
fdivrl
jb
ss
in
sbb
in
adc
popa
cmp
insl
pop
xchg
nop
rcl
push
lds
popf
pushf
out
cmp
adc
mov
in
push
std
test
into
sub
xchg
xor
loope
pop
arpl
xchg
add
cmp
pusha
jae
jl
out
ja
cmc
mov
cmp
repz
and
mov
mov
dec
insl
xchg
sbb
test
imul
pop
outsl
inc
enter
into
out
scas
push
cmpsl
cmc
sbb
add
xchg
and
scas
jbe
add
pop
pop
mov
orb
inc
xchg
orl
cmpsl
xlat
std
jg
test
in
scas
xor
cmp
dec
cmp
inc
or
in
fs
in
push
and
daa
sbb
xchg
sahf
cmpsb
mov
push
jae
pop
test
pop
in
cmpsb
add
cli
xor
mov
pop
inc
mov
pop
cmp
popl
rorl
lahf
cmp
out
sbb
cmpsl
out
add
jb
mov
mov
xorb
inc
jnp
lahf
ficoms
mov
xchg
inc
pop
ret
stos
pop
pop
lret
gs
int3
outsb
xchg
aam
shll
add
cld
scas
mov
and
cmp
mov
cmpsb
lret
push
xchg
jmp
inc
mov
test
mov
bound
rorb
or
arpl
xchg
stc
js
mov
sub
mov
lock
and
mov
popf
mov
fnstenv
in
mov
add
or
add
jno
mov
gs
cmp
pop
jae
insl
repnz
movsb
ljmp
xchg
mov
push
adc
push
mov
addr16
sbb
int
in
pop
inc
in
xor
inc
cltd
inc
xor
jnp
in
clc
rclb
xchg
aam
dec
push
adc
inc
hlt
rclb
sub
dec
jne
test
outsl
mov
cmp
sub
push
test
or
sub
imul
ljmp
or
adc
aaa
popf
scas
cmpsl
cmp
ss
dec
sub
repnz
push
sahf
lods
push
push
mov
cli
dec
insb
push
frstor
mov
push
jae
and
push
pop
xor
leave
adc
mov
or
mov
adc
mov
rcll
ljmp
mov
pop
arpl
dec
mov
cmpsb
test
and
cmp
loop
and
dec
sub
cmp
mov
insb
cmp
ret
loope
or
jnp
aad
sub
mov
push
cmp
xor
push
rorl
jo
pop
xchg
pop
aaa
sub
jg
idivl
lret
sbb
add
in
outsb
outsb
mov
outsl
in
mov
pop
imul
or
cld
les
sub
lds
mov
jno
xchg
sbb
add
das
clc
gs
out
lcall
xchg
jl
ljmp
adcl
rcl
or
notl
jb
addb
imul
adc
jbe
pushf
loopne
imul
fwait
dec
pop
clc
or
int3
jg
sub
das
out
add
adc
xor
and
repnz
sub
add
push
fstp
iret
mov
movsb
jl
out
out
xlat
mov
pop
lds
dec
mov
xor
stos
imul
daa
shlb
aas
jecxz
pop
push
fdiv
pop
jmp
sub
sbb
lahf
je
push
adc
push
sub
std
jne
mov
sbb
pop
or
add
mov
int3
jge
into
test
int
mov
xor
pop
inc
sbb
cmp
aad
repnz
or
stc
in
mov
pop
lahf
lahf
xlat
cli
cmp
mov
dec
ss
push
sub
es
in
aam
mov
mov
xchg
in
jmp
lds
out
fstpl
jp
pop
xchg
fsubrl
and
out
lds
adc
cmp
fs
inc
xor
lret
mov
cld
fbld
mov
jno
hlt
adc
xchg
ljmp
adc
or
imul
push
mov
mov
lds
out
adc
mov
mov
loope
stos
jle
je
mov
sahf
nop
adc
lods
inc
mov
stc
ss
dec
pop
ret
cmpsb
sti
jne
icebp
nop
mov
xchg
lcall
and
pushf
jno
and
addr16
inc
out
xchg
call
xchg
clc
pop
lock
and
subl
push
lcall
popf
and
inc
mov
dec
inc
shrl
jno
cld
lahf
arpl
add
aas
repnz
xchg
push
mov
rclb
jae
js
jne
call
inc
jbe
jno
cmp
ss
pop
dec
pop
leave
les
mov
sbb
xor
leave
dec
jg
inc
daa
jmp
or
inc
cmp
leave
pop
lea
shlb
insb
jge
data16
mov
pop
or
mov
aas
into
xchg
enter
and
mull
dec
lret
xchg
lret
int3
mov
mov
add
fmul
aad
dec
pop
aad
push
aas
aas
ret
sub
cmc
mov
adc
scas
jecxz
xchg
das
jle
xchg
adc
push
inc
mov
adcl
and
push
and
ret
enter
popa
iret
adc
cli
call
ror
xor
loopne
clc
adc
lods
push
movmskps
add
dec
out
sub
or
or
or
or
arpl
jb
popf
push
addb
dec
and
jb
cs
push
mov
push
pop
mov
hlt
pop
sbb
daa
mov
jge
lahf
xchg
enter
fwait
xor
inc
push
push
ss
or
gs
lock
pop
loopne
adc
xor
mov
mov
popf
je
stc
mov
aaa
aaa
mov
sbb
add
pop
cmp
jae
mov
cmp
dec
bound
loop
insl
dec
je
jmp
xchg
aam
lods
fstl
int3
fsubp
testl
pop
and
mov
adc
mov
loop
fldl2t
cmp
xor
loope
das
out
push
xor
faddl
xchg
or
data16
mov
test
dec
inc
and
xor
inc
js
push
pop
push
xor
sub
push
xlat
xor
xchg
das
ficoml
xor
fmull
xor
dec
sub
adc
test
cmp
or
and
pop
ss
xor
cmp
nop
cmpsl
jp
cmp
fs
push
push
jmp
sub
lods
sbb
push
cmp
pop
shlb
test
scas
in
or
and
sub
sub
mov
xor
sbb
outsb
mov
stos
xor
cwtl
cmp
sub
jl
pop
negb
push
loope
call
jg
inc
inc
mov
xorb
jecxz
xchg
cmp
pop
xor
dec
shl
rcr
pop
andb
cmpsb
out
push
das
xor
gs
out
mov
push
xor
pop
pop
lods
jecxz
xor
jbe
clc
adc
push
ficoms
jmp
cmp
repz
sti
push
inc
lcall
push
ss
das
jae
dec
mov
into
xchg
sbb
setbe
test
or
cmpsb
lret
xchg
dec
dec
adc
lds
insb
cmp
add
and
or
insb
in
cli
lods
sub
jl
les
and
scas
pusha
push
mov
lret
das
xlat
mov
in
mov
rcr
fisttpll
insb
xchg
add
or
inc
jne
ret
jbe
push
xchg
cmp
popa
sub
xchg
adc
lea
push
mov
fdivp
int
sub
loope
sahf
xor
ja
mov
rorb
inc
adc
cli
aad
cs
aaa
icebp
cld
dec
arpl
mov
mov
out
je
sub
out
inc
cmp
outsb
in
repz
fisubrl
rolb
test
clc
mov
pop
pop
mov
cld
incb
in
push
cmp
fbld
sub
pop
adcl
mov
jecxz
cmp
cmp
out
stos
es
movl
aaa
jo
loopne
movsl
int
mov
push
les
xchg
and
and
fldenv
mov
cli
adc
sti
cmp
lcall
push
adc
ss
pop
pop
fiadds
push
mov
inc
nop
sahf
mulb
repz
sub
or
mov
and
cmp
push
mov
or
in
sbb
outsl
add
cs
shl
or
xchg
lret
inc
div
ljmp
adc
xor
mov
jmp
nop
adc
shrl
sti
mov
mov
fprem1
push
ret
push
push
xlat
iret
dec
add
popa
sbb
movsb
testb
fs
or
fcomip
lods
fsubrs
mov
mov
sub
xor
repnz
sbb
add
cmc
rclb
insb
iret
mov
pop
adc
pop
sbb
filds
in
sub
mov
xchg
xchg
bound
cld
clc
dec
and
push
xlat
mov
imul
outsl
outsb
cmp
mov
inc
xor
inc
fisubrs
in
cmp
xor
fdivrs
out
int3
sti
mov
dec
ss
jo
pminub
sub
pop
addr16
adc
jg
mov
fdivrp
push
mov
jbe
push
sub
inc
addr16
daa
leave
outsl
xor
mov
sbb
cmpsl
mov
jecxz
scas
repz
stc
push
imul
dec
dec
pop
push
add
inc
movsl
iret
dec
xlat
jecxz
mov
xlat
mov
mov
loop
fisttpl
imul
in
std
xchg
cmp
pop
loopne
out
les
lods
repz
ljmp
lret
shl
add
data16
lret
lret
mov
leave
and
sarb
cmpsl
xchg
push
fsub
stos
ja
jbe
int3
leave
stos
sbb
push
push
iret
jl
adc
sbb
mov
loopne
or
neg
add
mov
loop
std
enter
insl
arpl
repz
in
movsl
sub
rolb
test
pop
testl
fldenv
xor
mov
xor
pop
enter
push
sti
dec
and
cmp
clc
cmp
aaa
std
cltd
dec
xchg
and
stos
cs
cmc
lea
shrb
cmp
jns
add
es
leave
sahf
xor
aaa
sub
dec
stc
dec
mov
cmp
movsb
rolb
pop
pop
lods
cli
sbb
mov
loop
add
ret
push
adc
imul
icebp
test
sbb
clc
cltd
inc
fidivl
cmp
push
push
fldl
out
aad
ds
cli
sti
or
es
sbbb
stos
les
data16
repz
lods
nop
or
rcll
outsl
mov
adc
add
mov
mov
sub
or
loop
stc
cs
call
pop
xchg
adc
out
lods
bound
pop
repz
dec
test
dec
daa
adcl
or
mov
cli
lods
xchg
nop
das
dec
jb
je
dec
ficoml
adc
mov
fisubrs
push
testb
loopne
into
jo
in
mov
in
icebp
je
dec
push
cmp
and
ja
rolb
cmc
rol
scas
rcl
out
lods
push
push
mov
push
sub
pop
cmp
pop
ror
stc
add
jb
mov
and
and
inc
mov
fucomip
xchg
outsl
lret
xchg
or
jbe
dec
bound
test
js
dec
das
jg
stos
repnz
sbb
shl
rorl
loope
mov
adc
je
out
cmp
daa
mov
pop
pop
dec
mov
mov
pop
sarl
inc
or
out
cmp
push
dec
mov
or
fs
jmp
sub
mov
jbe
fs
sbb
imul
cmp
jnp
lret
jno
jle
mov
push
push
fidivl
push
add
movsl
nop
add
jl
mov
or
sub
push
call
or
dec
jge
fldl
cs
ret
packsswb
rcl
je
mov
xor
stc
mov
loopne
test
inc
aaa
push
jmp
and
inc
sbb
or
xchg
into
jp
incb
dec
push
sti
mov
adc
pushf
pop
mov
fdivs
notl
mov
push
inc
pop
cmpsb
hlt
push
out
lret
movsb
dec
mov
das
cmp
insl
xor
mov
pop
xchg
fst
xchg
inc
jmp
cld
sbb
repnz
cmc
test
mov
jl
negb
fistpl
scas
mov
cmp
mov
cmpsb
jns
mov
and
rolb
pusha
mov
cmpsb
and
sar
xor
mov
lahf
rcl
mov
shrb
inc
cmc
out
mov
xlat
adcl
lret
mov
mov
fwait
inc
andl
idivl
outsl
jg
add
sbb
lcall
pop
aaa
pop
xor
mov
push
lock
xchg
push
sub
das
sahf
push
aas
std
repz
adc
shlb
pushf
sahf
dec
jg
mov
mov
cli
out
aas
xor
push
xor
push
adc
xchg
sahf
rorl
jl,pn
mov
ret
inc
and
pop
out
inc
mov
in
cmc
xor
dec
clc
jb
xlat
idiv
xchg
jb,pn
outsl
mov
popa
dec
jmp
stos
sbb
add
mov
mov
sbb
mov
push
jmp
shl
lock
mov
adc
hlt
outsl
xchg
sub
mov
pop
ljmp
and
cmp
and
lds
sub
jne
sub
lea
cmpb
mull
in
adc
sahf
cmpb
mov
pop
push
jg
lret
scas
mulb
xchg
arpl
sbb
sti
mov
aaa
mov
call
mov
loopne
mov
mov
cmpsl
pop
int
rcr
and
xchg
xchg
or
shl
jo
fldenv
push
outsb
sbb
sti
xchg
jg
jnp
inc
ljmp
cmp
daa
xor
xor
arpl
jno
pop
out
fdivs
and
daa
dec
movsb
mov
out
lret
in
mov
adc
pop
and
das
test
xchg
mov
lret
clc
and
ja
repz
pop
cmpsb
jb
sahf
dec
rcr
mov
lock
mov
adc
rcrb
or
pop
nop
in
int3
jns
push
loope
call
xor
gs
lods
xlat
jl
ljmp
rep
xor
into
jp
inc
je
enter
orb
mov
dec
addr16
mov
xchg
aad
popf
mov
fimuls
push
or
scas
ljmp
cmp
sbb
inc
cmpsb
add
fiaddl
out
inc
lcall
pushf
xchg
rorb
enter
insl
sub
ret
out
adc
repz
pusha
aaa
pop
add
out
setb
xchg
pop
idivb
mov
inc
hlt
jbe
into
dec
or
aam
xchg
cmp
push
adc
sbb
dec
mov
loope
mov
and
cmp
ret
and
inc
addr16
inc
ret
hlt
push
add
stos
lret
ret
mov
jns
ja
fcmovu
enter
shll
icebp
nop
and
jg
inc
and
pop
in
push
addb
sub
dec
inc
pop
ret
insl
push
test
outsl
pop
in
add
mov
mov
xchg
mov
xor
jb
ja
mov
push
pop
fldenv
das
cmp
pop
push
shl
xorl
xchg
xchg
cmp
sub
mov
aam
loope
mov
push
outsl
and
notb
jecxz
sub
stos
sub
inc
neg
fldl
mov
pop
inc
cmc
mov
mov
mov
rorl
push
sub
mov
or
out
inc
sbb
mov
or
dec
cs
dec
sbb
inc
cmpps
sub
mov
popa
mov
add
outsl
cmp
push
jo
push
nop
xchg
fildll
cli
dec
aas
pop
jne
sub
outsl
shlb
push
scas
adc
mov
push
or
or
movsl
aas
mov
call
out
rcrl
pop
jecxz
add
push
js
or
cmp
sbb
ret
mov
loope
add
mov
mov
or
insb
pusha
mov
mov
gs
inc
mov
aas
xchg
std
mov
add
cmp
pop
lock
ds
mov
push
push
mov
sub
cmpsl
jecxz
inc
jmp
xor
xchg
enter
jl
pop
bound
rolb
push
sbb
inc
scas
dec
sarb
sbb
popf
data16
or
decb
dec
mov
imul
repz
and
pop
mov
aaa
out
aam
cmp
gs
sbb
subb
test
mov
sbb
pop
inc
out
mov
test
cmp
call
dec
pushf
and
jmp
fists
add
xor
mov
adc
loope
addb
jmp
sub
jnp
sti
push
sbb
inc
inc
mov
sub
es
jp
adc
sbb
or
xlat
jno
dec
sbb
adc
push
stos
push
imul
sub
ds
mov
cs
pop
out
loopne
mov
cmpsl
gs
and
cmpsb
jae
ficoml
sti
fldenv
cld
jnp
jae
sbb
out
mov
push
aad
lock
cmp
xor
popa
dec
or
fistl
xchg
pop
repz
sbb
fiaddl
xorb
jb
cmp
xor
add
test
adc
and
push
bound
push
push
leave
bound
jecxz
sbb
out
xchg
mov
fisttps
out
iret
cmp
int
sbb
dec
sub
mov
rorl
sub
imulb
mov
test
js
jecxz
xor
mov
push
push
in
xor
xor
imul
xor
sbb
and
stos
dec
mov
fimuls
or
imul
int
mov
xchg
gs
jp
pop
je
mov
adc
xchg
arpl
shlb
clc
cmp
shll
mov
add
ret
mov
push
insl
mov
jecxz
js
xor
sti
js
dec
addr16
out
add
inc
push
mov
loope
jae
jns
xor
dec
jmp
cs
pop
or
movsl
jne
xchg
lahf
lahf
and
cmp
bsr
inc
sbb
sbb
pop
xchg
rolb
or
mov
aaa
sbb
sti
mov
dec
jge
and
outsb
mov
sbb
xor
add
push
or
inc
sub
in
mov
movsb
inc
int
xchg
or
add
imul
add
pop
in
aas
push
mov
lcall
mov
cwtl
or
push
ror
jbe
sub
pop
aam
cmp
and
loop
imul
addb
je
mov
push
std
out
xchg
add
mov
adc
and
int3
cmp
mov
mov
mov
pop
mov
cltd
aam
dec
es
stos
xor
xor
sub
mov
addb
sub
pushf
sub
jbe
xor
popa
movsb
call
insb
inc
pop
call
push
or
imul
jbe
ret
mov
repnz
inc
cmp
lods
scas
test
adc
push
cmp
in
gs
test
mov
add
iret
adc
mov
call
rcll
and
sub
fdiv
dec
imul
cmp
mov
ja
sarl
mov
dec
shl
scas
or
mov
cmp
xchg
outsb
jo
sbb
arpl
cmp
je
fisubrl
cmc
imul
push
mov
mov
pop
push
test
mov
jno
jmp
jge
fnsave
dec
pop
ljmp
jecxz
mov
add
rorl
jmp
les
adc
adc
sbb
movsl
and
vsqrtpd
repz
sub
repz
mov
cmp
inc
xor
xchg
div
repnz
sub
jne
xor
or
xchg
lock
inc
loop
shrl
lods
inc
inc
ja
imul
dec
dec
jae
aad
pop
faddl
aas
mov
adc
xorb
cld
xchg
imul
daa
xchg
enter
adc
out
pop
inc
mov
lcall
or
add
mov
into
xchg
jmp
mov
ds
mov
pop
sub
sarl
xchg
leave
cmp
cmpsb
jnp
mov
movsl
pop
xor
push
call
mov
out
dec
aas
xor
pop
lret
jb
and
jge
andb
cmp
jo
mov
lods
cmpsb
loopne
pop
insl
mov
stc
dec
repz
shr
sbb
pop
xchg
adc
pop
add
cwtl
sarl
mov
or
adcl
and
pop
fstpt
sbb
dec
fwait
and
xchg
repz
es
testb
sub
jns
sub
or
sar
mov
out
repz
nop
mov
cmp
sbb
sbb
popa
cltd
cmp
inc
push
mov
add
push
pop
add
cmp
adcb
add
bound
pop
pop
lret
jae,pn
adc
sub
adc
push
adc
aas
test
mov
loope
xor
pop
cmp
mov
mov
and
in
repnz
lds
inc
test
sbb
jbe
and
lock
das
arpl
adc
push
push
ret
cmp
mov
bound
outsb
jle
ja
jnp
mov
insl
fstp
cmp
repnz
cmpsb
mov
or
repnz
inc
and
les
ret
xor
jge
int3
fcmovu
add
fstps
sub
cmc
pop
xor
sub
stc
outsb
shll
mov
adc
mov
loopne
push
inc
cmp
or
add
xchg
jg
stc
insb
iret
int
aaa
and
pusha
repnz
stos
inc
sbb
cmp
xchg
mov
add
jne
nop
jae
shlb
and
sub
xlat
jp
xchg
hlt
push
aaa
xor
ret
pop
das
test
out
xchg
push
jae
push
sbb
sarl
lds
fdivrs
adc
jle
shll
andb
dec
xor
xor
mov
mov
fs
push
hlt
pop
insl
les
push
fiadds
enter
nop
xor
out
sub
mov
inc
xlat
sbb
cmp
xor
loop
rol
rorb
adc
push
and
fwait
pop
arpl
add
dec
test
aas
adc
cmp
mov
data16
mov
out
nop
xchg
out
pushf
jmp
sbb
sub
or
push
xchg
add
or
pusha
inc
ret
adc
je
repnz
mull
jns
jmp
inc
xchg
loop
jmp
push
push
cwtl
lcall
fsubl
subl
jnp
into
push
sti
scas
sbb
mov
sarl
rcr
mov
push
jns
jae
jb
sub
add
xor
mov
jne
xchg
inc
inc
dec
roll
and
jl
xlat
clc
movsb
adc
aaa
bound
mov
mov
divl
xchg
lods
mov
jno
pop
std
adc
rcrb
inc
push
sub
sbb
and
std
xchg
xchg
ficompl
or
cld
jnp
les
xchg
das
repnz
xlat
sbb
fmuls
and
pop
inc
in
mulb
nop
out
pop
out
test
and
fwait
pop
sahf
lret
jmp
je
mov
jno
sub
pop
in
pop
jmp
loope
mov
lcall
mov
cmp
sbb
out
fidivs
cmc
pop
sahf
fildl
cmpsl
mov
in
out
or
mov
xchg
std
int
mov
cmp
dec
mov
xchg
jo
call
int
ret
push
xchg
inc
sarl
std
xchg
fcomps
lret
stos
jecxz
out
fistpl
aad
aad
je
addr16
add
scas
xor
sbb
pop
xchg
pop
mov
dec
fsubl
popa
aas
dec
roll
jo
push
jge
xchg
xchg
divl
adcb
cmpsl
je
mov
adc
pop
push
or
ret
or
in
imul
subb
cmpsb
rcrb
cmp
fistpll
cmp
inc
pusha
ds
mov
sbb
enter
imul
addr16
lea
clc
mov
sub
fs
jl
shll
ljmp
outsl
das
loop
outsb
dec
push
add
stos
sbb
divl
xlat
mov
enter
pop
lret
sub
sub
lods
mov
insl
cmp
inc
in
mov
cmpsl
add
cld
mov
sub
cmc
mov
add
and
inc
xchg
fxtract
dec
subb
jae
fwait
call
jmp
hlt
scas
outsb
dec
xchg
sub
shlb
mov
add
inc
mov
pop
in
lods
adc
jl
sub
shrl
adc
pmovmskb
or
das
add
pop
sbb
pushf
loope
adc
pop
icebp
push
inc
pop
jle
add
dec
js
stos
subl
int3
pop
aam
lahf
out
out
and
adc
push
mov
pop
jno
popf
fsubrs
mov
mov
push
push
cmp
sub
jl
mov
push
lcall
stos
je
cmp
fwait
fwait
xlat
dec
sarl
cli
lret
inc
imul
sub
sbb
add
cwtl
loopne
jp
fisttpl
jbe
pop
xchg
dec
sub
imul
addr16
std
mov
aas
mov
mov
iret
xor
je
incl
push
call
dec
cmpsl
repz
cmp
cld
fisubrs
mov
push
dec
mov
les
mov
xor
loop
jbe
popa
mov
dec
vandnps
mov
xor
data16
movntq
out
aas
out
add
sbb
shll
lcall
mov
inc
mov
xchg
mov
jo
shll
sub
mov
sbb
sbb
iret
repz
inc
ja
jecxz
dec
lods
xor
lods
xchg
sub
cld
lret
cli
xchg
mov
pop
in
push
mov
inc
shrl
stos
pop
repz
and
ret
aam
sub
cmp
repnz
imul
lahf
mov
jl
mov
adcl
imul
movsb
sahf
test
pusha
popf
sub
and
mov
dec
xchg
mov
sti
sub
ds
int3
push
rclb
cmpsb
daa
and
mov
orl
andb
add
jne
cmpsb
shrl
jb
sub
add
insb
mov
push
enter
scas
xchg
dec
lcall
and
jbe
in
mov
ret
push
shrl
jne
cmp
xchg
dec
pop
fs
push
stc
adc
in
into
push
xchg
xor
jbe
lock
ja
pop
fistps
dec
sbb
push
push
jo
test
out
xlat
in
add
outsl
out
xchg
pop
push
jb
stos
push
int
jnp
mov
inc
enter
outsb
sbb
enter
imul
or
fiaddl
rolb
addr16
mov
in
pusha
xorps
jg
sbb
popf
ljmp
jge
repz
loope
movb
clc
cld
jl
imul
and
cmp
push
jb
sahf
dec
add
push
dec
lock
and
jnp
ljmp
arpl
outsl
xor
dec
lahf
lds
lea
out
fmuls
xor
fsts
push
xor
lahf
jnp,pn
cmp
or
push
repz
cmp
push
and
push
test
call
std
std
xchg
jp
mov
cs
sbb
sub
xchg
insb
lret
test
insl
lcall
stos
jg
adc
dec
xchg
inc
pop
push
xchg
rol
sub
jle
dec
inc
mov
clc
jecxz
gs
push
or
add
jns
adc
pop
add
cmp
mov
mov
xchg
addr16
sbb
xchg
xor
lahf
fs
mov
outsb
stc
pop
pop
mov
push
jecxz
fwait
scas
sub
xchg
imul
inc
sub
inc
pushf
add
xchg
dec
je
jns
inc
mov
pop
inc
push
lods
pop
sbb
add
mov
xchg
lahf
test
mov
lret
daa
outsl
inc
loopne
sub
and
dec
dec
cs
or
sub
pop
add
loop
lock
push
lret
push
jns
stc
pushf
movsb
mov
dec
imul
in
adc
outsl
lea
xchg
pop
sub
icebp
loop
mov
insb
pop
xchg
pop
add
mov
mov
sub
and
dec
sbb
fstps
jae
fstps
in
or
cld
xor
repz
cmp
cmpsl
push
or
pusha
pop
dec
xchg
lret
push
rcrb
pop
pop
mov
into
or
mov
in
mov
vshufps
pop
ljmp
aaa
inc
jp
roll
stos
add
aad
cwtl
adc
dec
call
mov
add
mov
movntq
out
inc
push
fldcw
sub
scas
repnz
test
mov
mov
mov
in
arpl
adc
mov
jl
daa
nop
jmp
pop
stc
sti
rcrb
push
sub
test
aad
xor
and
lods
jp
mov
adc
shrb
out
loopne
xor
aad
sub
cli
lea
mov
lock
lock
stc
push
sub
and
push
mov
in
cwtl
sub
pop
mov
stos
iret
sub
push
jmp
in
ror
push
je
cmpsl
les
fistps
xchg
inc
dec
adc
mov
push
out
sub
mov
pop
fisubl
add
mov
xor
mov
mov
pop
dec
dec
pop
xor
imul
add
dec
sbb
mov
sbb
sbb
xchg
cmovno
mov
mov
lods
lea
jo
pop
sub
fdiv
jle
dec
int3
nop
int
xchg
mov
rol
in
loopne
pop
xlat
sub
or
jne
dec
cmp
pop
cmc
mov
push
jge
pop
loope
jl
std
loope
inc
or
ja
loopne
inc
hlt
lahf
ljmp
bnd
js
xor
sbb
inc
xor
jmp
stos
int3
testl
loopne
aaa
pop
les
cmp
jbe
xorl
bound
push
sbb
and
dec
cmp
loop
pusha
sarb
clc
cmp
or
xchg
xchg
test
push
adc
mov
mov
cmp
sbb
mov
in
cmp
test
push
scas
je
sti
fwait
xor
cmp
jbe
adc
push
xor
jge
les
add
sbb
jb
cltd
xchg
stos
push
and
xor
dec
jnp
mov
and
inc
sarb
insb
and
or
imul
add
jge
inc
jg
popw
andb
stc
mov
mov
adc
jns
sub
int3
lret
ja
je
and
cwtl
inc
sahf
jge
push
movsl
xorb
ds
jp
cltd
add
xlat
and
push
pop
out
pop
sti
lods
xor
lret
add
jnp
repz
ss
jp
adc
pop
and
and
pop
inc
jmp
out
pop
xchg
or
fwait
addr16
loope
xor
or
adc
jo
movsl
aas
cmp
cld
pop
nop
xor
inc
sbb
adc
add
mov
mov
add
lods
stc
jb
cltd
xlat
jl
push
shlb
push
add
and
adc
insl
dec
lods
mov
sub
cs
out
aam
cmc
sub
fidivrs
push
je
aas
aad
mov
lds
sbb
jl
or
jne
mov
or
test
pop
xorb
test
and
aam
sub
sub
std
dec
mov
adc
dec
adc
adc
mov
scas
xchg
pop
popa
icebp
stos
cmc
pop
or
mov
lods
stos
lds
xor
aas
lret
jg
push
lcall
cmp
adc
cltd
lcall
cmp
mov
push
aad
push
int3
xchg
xchg
outsb
push
mov
sub
or
sbb
inc
pop
sub
mov
jecxz
negb
sub
lock
fdivrp
data16
mov
xor
push
mov
imul
lea
or
sbb
push
xchg
insb
aaa
xor
add
add
jecxz
push
push
insl
cwtl
mov
or
dec
mov
jns
call
dec
or
movb
cmp
jns
lds
xchg
mov
loope
arpl
mov
aas
pusha
icebp
dec
leave
xor
push
push
nop
push
or
and
cmp
push
ror
mov
cmp
pop
loop
stos
add
pop
jne
loop
xor
and
pop
mov
call
ljmp
fnstenv
mov
add
ja
push
pusha
in
pop
dec
cmp
popf
sub
iret
in
out
ds
mov
push
cmp
sbb
scas
adc
jmp
cmp
mov
lret
nop
cmp
aad
les
jg
pop
cld
push
sub
ds
leave
ljmp
and
bnd
pop
sbb
jl
inc
out
outsb
lret
cmp
nop
icebp
pop
movsl
in
jb
rolb
inc
cli
scas
push
and
cmp
mov
sbb
add
cltd
xchg
loop
add
ss
fs
push
addr16
or
loopne
mov
fstp
rcll
cltd
scas
repnz
mov
lods
mov
jecxz
ja
inc
loope
out
sub
mov
push
in
pop
mov
or
xchg
jge,pt
sbb
subl
sbbb
xor
aas
lret
adc
inc
xor
imul
lahf
roll
stos
ficomps
js
cwtl
shrb
sahf
pop
enter
ja
repz
mov
out
or
sar
das
pop
loope
mov
lcall
out
rcr
inc
inc
aas
sbbb
or
roll
stos
push
pushf
cmpsl
jo
sarl
sub
add
pop
mov
out
dec
adc
xor
xor
pop
mov
xchg
je
inc
fstpl
push
jge
and
add
cltd
test
lock
pop
and
jno
jbe
imul
sbb
lret
pop
push
push
sub
and
dec
mov
sbb
inc
and
xchg
ljmp
adc
mov
je
cmp
repnz
add
dec
push
pop
in
pop
stc
enter
mov
fsubl
xor
jo
push
cmpsb
adc
out
and
sub
pop
js
mov
jb
mov
push
clc
addr16
rorl
stos
mov
add
cltd
ljmp
bound
pop
push
in
fsts
xchg
xchg
jo
int
or
cmpsb
and
clc
jne
xchg
jp
mov
or
pop
lea
mov
mov
cmpsb
fsubr
pop
test
rcll
loopne
lock
je
ret
test
out
xor
inc
cmpsl
adc
scas
stc
stos
je
jne
mov
cmpsb
fcmove
cmp
cli
je
push
inc
jno
mov
add
stc
sub
jp
js
push
sub
insb
push
adc
push
adc
and
test
lcall
pop
test
jo
xchg
fimuls
push
push
mov
push
cmc
loop
test
insb
repnz
inc
test
add
mov
je
jecxz
fldenv
cmp
std
add
mov
sbb
stos
mov
gs
and
jecxz,pn
mov
push
ljmp
in
push
dec
lret
dec
mov
out
mov
loop
xchg
addb
stc
negb
jmp
fs
loopne
inc
cltd
mov
cmp
and
test
cwtl
cmp
cmc
jmp
ds
lea
int3
or
rcrb
repz
aaa
fisubrs
in
jns
dec
mov
in
xchg
push
cmp
or
out
mov
xchg
adc
cmp
popa
adc
fnstenv
out
sbb
push
cli
clc
jnp
repnz
push
jl
scas
daa
cmp
sbb
inc
andb
inc
mov
fsubrs
addb
mov
std
insb
add
cltd
push
shll
adc
movsb
fidivrs
outsb
lods
or
cmp
lcall
xchg
xchg
mov
sbb
push
pop
push
clc
arpl
ret
es
pinsrw
ret
xor
in
daa
lds
pusha
add
or
push
leave
cmp
stos
scas
daa
cmp
cmp
and
js
in
pop
lods
dec
inc
jo
mov
jg
jle
sub
nop
mov
enter
adc
out
mov
lahf
push
in
push
and
shll
inc
sub
mov
in
mov
lods
jmp
ret
dec
enter
repnz
adc
xor
mov
int3
addr16
inc
xchg
inc
jns
adc
out
mov
push
int
repz
inc
jno
in
mov
inc
xchg
test
push
fstpt
dec
xor
inc
pop
jle
inc
out
scas
mov
mov
das
cmpsb
in
add
lret
adc
mov
sbb
mov
fsubl
xchg
iret
xchg
jmp
jmp
push
cmpsl
xchg
lcall
mov
mov
lcall
test
je
xchg
aam
xchg
dec
xor
iret
sbb
push
icebp
xchg
les
movsl
pushf
mov
dec
push
dec
and
cli
shr
sahf
ds
sub
fmul
shl
rorl
cmp
add
shll
jbe
imul
test
fdivs
or
js
mov
sti
mov
shrb
dec
loopne
hlt
loope
hlt
cmp
jg
out
outsb
add
popa
scas
shlb
and
fcoml
pushf
stos
mov
mov
and
int
add
adc
into
xor
lds
push
jle
sbb
sbbl
stos
jns
adc
and
xchg
andl
insb
xor
cli
dec
icebp
pop
inc
xchg
xorb
outsb
push
lahf
add
repnz
sahf
mov
jg
jne
add
push
dec
adc
inc
adc
adc
xchg
movlps
add
mov
mov
mov
int3
pop
mov
nop
pop
iret
ss
pop
ficompl
dec
dec
cmc
sub
sahf
int
test
lods
cwtl
insb
out
pop
fwait
push
jp
cmpsb
add
int3
push
jne
sbb
dec
add
mov
jge
cmp
add
xlat
aas
or
inc
mov
sbb
lods
mov
mov
test
push
movsl
push
mov
mov
inc
pop
jmp
jno
aam
xor
aam
push
outsb
popf
jbe
aas
es
movsb
repnz
sbb
xchg
mov
or
rolb
outsl
jp
gs
sub
stc
xchg
out
sub
mov
mov
mov
add
adcb
fdivrs
leave
mov
lods
pop
and
mov
sbb
in
nop
jo
add
daa
adc
mov
and
std
pop
lds
outsb
adc
push
and
sahf
or
add
sub
movsl
cltd
fxch
dec
push
pop
and
and
pushf
and
das
int
push
in
inc
inc
ficompl
outsb
les
sbb
cwtl
dec
jle
ds
outsb
or
rcrl
lahf
fidivl
movsb
mov
xchg
push
dec
and
jne
inc
iret
addr16
enter
aad
cmc
ja
adc
or
xchg
dec
andl
pop
repz
fisubrl
push
jbe
mov
mov
sub
sbb
shrb
sbb
outsb
lods
fcmovnu
rcll
cs
push
xor
rcll
fildll
sub
jmp
lds
dec
or
in
punpcklwd
nop
pop
mov
mov
in
xchg
hlt
mov
xchg
pop
sbb
xorl
stos
movaps
push
jmp
mov
mov
std
jae
xlat
adc
push
push
jl
jns
fstpl
cmpsl
js
lds
lock
or
scas
scas
arpl
mov
lret
pusha
scas
sub
loop
ficomps
push
dec
pop
mov
xor
and
aam
jg
cmp
mov
inc
jg
int
stos
fs
jmp
sub
lret
add
scas
ljmp
subl
and
jle
shl
ret
and
mov
into
cs
adc
xor
sti
mov
pop
push
dec
pop
cmp
inc
sub
pop
xor
jecxz
mov
popf
xchg
repnz
faddl
outsb
sbb
add
mov
pop
xor
push
and
out
pushf
xlat
pop
mov
jbe
dec
enter
mov
pop
jns
xchg
and
mov
add
sti
sub
mov
pop
or
push
mov
xor
out
cs
and
or
imul
das
add
lret
movl
sahf
ret
sbb
inc
loopne
cltd
stos
jl
es
mov
std
fbstp
add
iret
xor
inc
adc
imul
mov
push
clc
and
cld
mov
rcll
adc
adcl
mov
lret
cld
bound
aaa
fildl
out
pop
cli
xor
xchg
push
lret
cmp
arpl
stc
fistps
jecxz
ret
push
outsl
mov
mov
or
aam
xchg
test
gs
sub
fbld
dec
inc
pop
push
dec
dec
dec
imul
mov
dec
imul
cs
sbb
add
sbb
jg
or
sbb
mov
iret
test
add
aam
sbb
push
out
pop
pop
or
jg
pop
pop
push
sub
ds
int3
repz
inc
push
stc
cmp
lcall
lock
mov
test
xchg
jae
test
cmc
sub
into
mov
xchg
pop
dec
adc
xchg
pop
inc
ror
sbb
mov
ljmp
clc
xchg
cmc
fcoms
repz
hlt
and
push
cmp
jl
test
mov
fst
bound
nop
sbb
push
sub
push
jp
movsb
cmc
lret
jg
mov
mov
or
jno
mov
mov
lods
fsubl
pop
bound
test
pop
sbb
aad
jle
push
inc
pop
in
inc
push
or
lret
dec
xor
adc
fstpt
lret
jge
mov
inc
mov
fcmovu
loop
enter
xor
int3
inc
das
mov
and
push
add
xchg
insl
into
xor
push
dec
in
ds
mov
dec
repz
jp
pop
outsl
pusha
pop
lods
subl
xchg
mov
nop
xchg
and
xor
pop
mov
and
sub
pop
mov
movsl
sar
fidivs
xchg
push
push
dec
sub
mov
sti
or
out
aam
xor
gs
ffreep
lods
loopne
xchg
fsubrl
movsb
js
pushf
jle
pop
std
sub
jge
inc
xchg
jecxz
in
push
addl
sbb
idivl
add
mov
in
cmpsb
mov
cmc
jecxz
mov
or
repz
jg
hlt
repnz
adc
xor
xchg
mov
lcall
jmp
insb
xchg
das
shll
scas
stc
and
movsl
gs
mov
pusha
jecxz
push
sub
and
xchg
mov
lods
and
popf
fst
mov
adc
push
add
mov
add
jmp
gs
push
cwtl
mov
xorl
and
aad
aam
fsubrl
mov
dec
out
lock
les
jae
daa
outsl
out
mov
lds
outsb
movb
lods
cmp
adc
insb
xlat
int3
mov
ret
mov
int
cmp
outsl
fs
jno
js
jb
ss
mov
insb
xor
xor
jle
lahf
push
je
cli
jmp
jle
mov
imul
ljmp
pop
dec
mov
pop
outsb
adc
into
stos
xchg
adc
out
dec
mov
imul
pop
or
jmp
push
mov
cmovo
out
xchg
xchg
xchg
in
into
or
movsl
ds
arpl
mov
and
xadd
rcrl
inc
jnp
push
clc
xchg
mov
jns
bswap
dec
xchg
jo
push
sub
mov
ljmp
fs
xchg
lcall
insb
push
sbb
push
adc
jb
pop
stos
mov
fildl
or
adc
jno
int3
xchg
insl
sbb
mov
std
jge
cmc
iret
mov
jge
inc
pop
push
scas
imull
gs
jo
in
sbb
pusha
xor
test
mov
pusha
mov
xor
fiadds
mov
dec
push
int
and
cs
stc
ret
cltd
dec
dec
es
add
out
insb
loopne
mov
clc
cmpsl
arpl
sub
inc
jae
pop
loope
outsl
movsl
outsb
scas
leave
lea
xor
fistpl
pop
icebp
les
xchg
repnz
cmp
mov
lret
enter
cltd
in
cmpsb
repz
jo
popa
movsb
xor
adc
sbb
add
imul
cs
inc
jmp
jmp
dec
add
fwait
dec
mov
sti
push
aad
out
notb
pop
jbe
fstpt
jae
adc
push
jnp
cmp
jmp
or
cmp
sbb
mov
push
pop
test
dec
icebp
or
cwtl
sub
ret
cmp
lock
xchg
stc
scas
lcall
mov
fwait
add
imul
add
dec
add
lods
js
aam
aad
popa
add
sbb
ret
sbb
mov
cwtl
xchg
addl
inc
mov
adc
shrl
clc
sbb
ret
xchg
scas
push
sarl
and
shlb
imul
aam
ds
out
ficomps
mov
lds
adc
push
add
shrl
push
xchg
cli
push
sbb
lock
ja
push
pop
adc
xor
mov
inc
stos
sbb
mov
xor
pop
fildl
add
movsb
mov
outsl
aas
sub
repnz
add
mov
in
shll
pop
loopne
mov
ja
and
fstl
sub
fiadds
inc
or
std
cld
in
testl
pop
push
add
lock
sub
mov
scas
or
in
adc
inc
push
mov
repz
repnz
add
cmp
ret
fwait
ljmp
xor
pushf
adc
int3
sbb
add
les
mov
shr
fnstsw
or
icebp
sub
out
repnz
shll
fstpl
inc
pop
cwtl
nop
lds
push
rolb
out
test
mov
pop
mov
daa
or
jns
cmp
outsb
test
inc
fstpt
incb
push
fcmovnu
cltd
jle
test
mov
dec
repz
ss
and
mov
xor
pop
lods
test
loop
popf
push
jmp
sarb
inc
dec
test
subl
push
ss
andl
loope
test
add
cmp
push
mov
push
imul
push
dec
movsb
mov
sbb
aad
and
sahf
rcrl
fistps
scas
scas
loope
mov
pop
fstl
dec
sub
orl
mov
fwait
dec
push
pop
js
dec
addl
jb
cmpsl
jno
push
scas
out
push
movsb
adc
sbb
lods
cmp
inc
mov
lods
inc
in
out
jns
xchg
es
pop
shrb
fcoml
stos
aas
push
add
pop
mov
stos
cmp
push
ss
stos
push
mov
subl
and
push
xchg
rcrb
sub
decb
in
or
stc
push
stc
pop
lret
pop
xor
pop
das
sbb
cmc
sbb
pop
pop
rorb
push
xorb
sub
jmp
and
mov
mov
mov
pop
loope
adc
mov
mov
lret
js
lret
test
cmp
cmp
mov
in
lret
stc
sbb
pop
add
xchg
pop
rcll
in
gs
add
and
sahf
inc
inc
xchg
std
loop
das
lahf
mov
jns
icebp
jb
sbb
sub
push
xchg
cs
sub
lods
sbb
jecxz
lds
sarb
or
shlb
cmpsb
jbe
int3
pop
mov
nop
cld
add
mov
push
and
jecxz
mov
fwait
xor
js
sub
jge
inc
cmc
jb
jl
mov
sbb
adc
sbb
pusha
int3
adcb
stos
mov
ss
add
xorb
scas
rorl
js
xchg
jo
dec
lcall
loopne
adcb
jae
add
push
sbb
fcmovu
sbb
inc
clc
pop
adc
es
adc
xor
add
scas
xchg
sbb
leave
jge
jo
loopne
pop
pop
sti
bound
mov
ret
add
std
cwtl
mov
fiadds
outsl
sub
xchg
jle
lcall
jecxz
cmp
nop
imul
cmp
and
clc
pop
adc
jle
jecxz
mov
push
inc
pop
cltd
test
push
addl
xchg
add
mov
lds
sahf
or
testl
pop
ret
xchg
icebp
sbb
iret
adc
xchg
cmp
in
je
fdivr
imul
ljmp
scas
dec
pusha
mov
pop
sbb
fnstcw
add
call
push
ret
es
faddp
fsubp
inc
jns
mov
fnstenv
outsb
push
inc
pop
fnstsw
hlt
pop
mov
ja
xor
psubsb
jns
mov
mov
roll
sti
cwtl
and
fs
push
sub
fldt
and
or
cmp
mov
mov
xchg
xorl
and
shrb
jae
xor
jle
fmulp
dec
test
cmp
mov
push
pop
adc
jge
pop
push
mov
sar
push
repz
pop
test
mov
aam
xchg
or
cmp
cli
adc
xchg
mov
pop
std
dec
mov
xchg
mov
hlt
maxps
mov
mov
cld
push
shrl
mov
push
inc
mov
push
jae
adc
test
xor
xor
mov
xor
loopne
addr16
mov
dec
jne
jns
cld
push
dec
das
push
adc
out
test
loope
inc
pop
popa
imul
jp
mov
pop
les
inc
or
movsl
fists
push
xchg
mov
sbb
enter
test
cmpl
pop
pushl
pop
jle
xchg
rcrl
mov
adc
cmpsb
sbb
adc
sbb
nop
xchg
mov
icebp
pop
sub
pop
mov
cmp
fsubp
out
dec
out
xchg
push
xchg
ja
jne
inc
push
rol
jne
imul
add
adc
add
and
xor
and
cltd
data16
lods
fnstcw
or
xor
pusha
addl
xor
popf
enter
mov
out
aas
int3
sbb
insl
ret
popa
mov
nop
add
shrl
cmpl
je
fwait
popa
jo
jo
pusha
mov
decb
push
dec
push
jge
and
push
sahf
addr16
sub
xchg
popa
cmp
mov
int3
or
and
sti
jge
mov
fbld
push
dec
ret
fcompl
or
xchg
sbb
or
jmp
fwait
mov
insb
cmpsl
push
outsb
jo
add
pop
leave
cli
add
push
outsl
call
out
js
je
sbb
out
shr
adc
dec
xchg
push
out
push
jae
pop
imul
xchg
mov
push
in
jge
xchg
test
lea
jae
or
pop
inc
pop
jle
rcr
and
icebp
xor
mov
andl
mov
xchg
stc
stos
aam
add
pop
shll
mov
scas
repnz
sahf
sbb
sbb
mov
add
out
seta
subb
in
lods
pop
add
fildl
sbb
cmp
popa
pop
inc
push
adc
shr
dec
mov
mov
iret
xor
adc
into
inc
sbb
mov
add
outsl
dec
rorl
dec
push
push
jecxz
inc
push
mov
das
js
dec
ja
xlat
clc
mov
fmuls
imul
lds
int3
xchg
out
cmpsb
jb
push
les
cmpb
fisubrl
out
and
push
data16
push
mov
add
adc
cli
out
jmp
cmp
pushf
inc
add
pop
jnp
loopne
scas
adc
sub
neg
out
jecxz
push
in
inc
cmp
lcall
out
outsl
ret
dec
or
xchg
or
iret
popf
rcrb
inc
sbbl
xlat
mov
mov
mov
mov
xchg
jecxz
pusha
js
pop
jmp
sub
lahf
cwtl
push
jge
cwtl
inc
flds
push
xor
ja
xor
and
dec
cmp
or
mov
mov
push
in
stos
fwait
test
push
xchg
int3
and
adc
sbb
xchg
xor
mov
push
and
mov
mov
mov
jns
fmuls
pop
das
es
out
mov
push
nop
mov
adc
es
sbb
pushf
outsl
sarl
push
and
sbb
cmpl
jle
pop
fcmovnbe
cmp
mov
es
lret
popl
dec
sbb
popa
adc
mov
mov
inc
lcall
xacquire
icebp
push
pop
cwtl
xchg
lea
xor
divb
sbb
cmp
inc
pop
inc
mov
xchg
inc
movsb
lods
push
mov
jno
dec
rcll
dec
adc
cli
and
or
int3
in
sahf
test
es
mov
sub
pop
mov
imul
iret
daa
or
imul
push
ds
in
pushf
gs
jg
arpl
ret
scas
jmp
out
lret
sarb
cld
adc
movsl
jae
gs
fsubrp
and
inc
xor
mov
cltd
repnz
and
sahf
out
xchg
pop
mov
in
adcb
arpl
mov
fildll
sub
insb
or
imul
je
mov
lcall
inc
mov
and
adc
mov
je
xor
mov
aas
test
movsl
bound
fiaddl
jae
outsb
fwait
inc
adc
xchg
call
imul
cmp
stos
lods
xchg
cmc
push
xor
stos
sub
or
pop
inc
adc
into
sbb
add
and
ja
out
arpl
lods
pop
jbe
jo
mov
aad
mov
adc
mov
xchg
ret
mov
data16
dec
pop
push
scas
daa
roll
mov
sbbb
mov
pop
add
mov
subb
mov
lea
notl
sbb
loopne
nop
lock
enter
cmc
cld
imul
or
sub
jp
stc
add
leave
dec
cmpsl
push
jns
adc
test
pop
sub
stos
leave
or
or
scas
jb
adc
dec
idivl
bound
cmp
cmc
adc
mov
jnp
js
pop
cld
pop
xor
in
insb
ja
dec
jl
sahf
adc
xor
or
lret
or
or
inc
sub
and
mov
cmp
inc
ret
sbb
test
sarb
lret
test
pop
pusha
sbb
and
out
aas
inc
sub
pusha
loope
inc
push
jp
and
pop
filds
fmul
cmp
or
pop
and
pop
andb
mov
into
xchg
loopne
sub
sbb
xor
cmpsl
push
and
adc
mulb
cmp
mov
push
mov
test
and
mov
aad
in
xor
push
adc
into
mov
es
fs
movsb
loopne
shlb
cld
ja
sbb
cwtl
cmp
mov
cmp
jl
dec
fucom
push
or
test
les
popa
push
ror
enter
jmp
xchg
fistps
es
aad
cmp
mov
and
jge
fiadds
cltd
jno
insb
adc
add
lock
lods
mov
arpl
ror
out
into
xor
xchg
cld
sahf
pop
xchg
ljmp
mov
push
cmpsl
pop
xchg
fwait
daa
daa
dec
rcll
mov
in
je
rcrb
sarb
push
scas
jne
fmull
push
insb
and
mov
xchg
das
les
dec
jo
mov
popa
leave
shrl
stos
cmpsl
xor
dec
cmpsl
add
call
pop
adc
add
imul
fsubl
pop
mov
lods
mov
sbb
sar
fs
sub
rolb
stos
das
outsb
mov
rcr
xor
xlat
push
xchg
xlat
sbb
dec
and
test
mov
mov
sub
and
and
shrl
loope
push
mov
push
jmp
xchg
sub
jl
pop
mov
popa
sbb
adc
enter
iret
add
ret
sbb
repnz
fmul
aam
insl
lret
sbb
or
mov
xor
jo
lret
jp
outsl
pusha
dec
and
lock
dec
scas
test
mov
push
sbb
test
out
mov
fcoml
jns
enter
pop
sub
and
xor
cmc
pop
pop
in
inc
pop
lods
and
push
inc
loop
mov
adc
in
add
testb
std
cmp
cld
cwtl
cmpl
mov
ret
pop
clc
std
sbb
lahf
mov
push
add
adc
mov
push
sub
mov
stc
mov
adc
aam
add
cltd
lahf
sbb
xchg
xchg
inc
add
add
mov
mov
xchg
enter
dec
dec
pop
add
movb
mov
or
mov
jmp
ret
repz
shll
insb
xor
punpckhbw
dec
repnz
inc
sahf
push
push
divl
and
roll
out
sbb
cwtl
jl
xchg
mov
iret
add
lret
pop
xchg
cwtl
popa
into
test
add
fstpt
divb
out
mov
aad
std
dec
aam
ficompl
fldl
faddl
mov
hlt
jge
lcall
stc
push
sbb
adc
test
push
jnp
inc
cltd
sub
push
loop
movsb
fucomp
aam
sti
or
push
pop
movsl
cmp
push
dec
test
mov
idivb
or
loopne
fmul
fsubrl
test
shll
pop
int3
dec
mov
xchg
inc
pop
out
pop
and
or
inc
imul
clc
jl
icebp
sbb
imul
sahf
or
fcmovnb
xor
arpl
mov
mov
test
jmp
dec
mov
repnz
or
fcoml
shl
sbb
or
add
aad
inc
pop
pushf
shll
pop
shlb
out
mov
fs
icebp
sub
pop
and
insb
repz
or
xor
rorl
mov
xor
mov
adc
insb
jmp
insb
add
dec
lcall
aam
mov
and
loope
cmpl
xor
iret
mov
das
jecxz
call
pop
jno
xchg
cltd
or
pop
lods
mov
push
xchg
cwtl
test
pushf
add
sbb
pusha
loopne
xchg
mov
inc
test
push
loopne
xor
mov
dec
cltd
pop
fiaddl
repnz
enter
mov
xchg
sub
mov
cs
rorb
dec
lcall
xor
fists
inc
mov
mov
mov
or
jmp
jmp
pop
add
mov
mov
inc
sbb
loope
and
dec
push
pop
mov
call
adc
dec
data16
faddl
flds
daa
test
mov
push
fwait
adcl
test
xchg
pop
pop
adc
out
insl
outsl
fsubs
test
add
push
jmp
or
rclb
jo
pop
ds
ds
sbb
arpl
add
inc
and
addr16
dec
or
addr16
popa
sbb
lcall
cmc
sbb
test
dec
fidivrl
mov
add
xor
test
mov
ret
pop
jl
test
addr16
stc
mov
pop
les
sub
mov
hlt
iret
mov
push
hlt
fiadds
stos
add
xchg
xchg
xor
xchg
lds
mov
test
es
rcrb
sub
test
dec
xor
jge
jae
popfw
push
jmp
popf
imul
ret
imul
push
insb
or
scas
adc
imul
in
adc
xchg
cwtl
cld
adcb
or
or
pop
jmp
cltd
and
jmp
negl
loop
mov
xchg
xor
xor
cli
call
lods
dec
lds
in
bound
popa
jno
pop
in
outsl
dec
mov
xchg
add
add
sub
test
jne
pop
lods
inc
mov
mov
dec
cmp
mov
fistps
popa
fnstsw
arpl
mov
sahf
jo
mov
sub
out
lcall
call
scas
or
jmp
rolb
aad
cli
xchg
inc
scas
xlat
pop
shrl
adc
xchg
in
jbe
adc
rcrb
or
lahf
xchg
rolb
cs
imul
mov
dec
dec
or
test
loopne
pop
adc
xchg
in
xor
fwait
shl
jmp
or
ror
scas
std
aas
inc
cli
popf
push
lds
ficomps
je
insl
shlb
outsb
cmp
outsl
inc
add
cld
pop
rorb
and
adc
jp
bound
cmovnp
add
sarl
bound
cmp
out
test
xchg
aad
cmp
push
arpl
adc
mov
lahf
je
out
mov
fcomps
ss
addr16
cmp
jecxz,pt
das
ret
push
cmpb
mov
rorl
sbb
jl
cmp
inc
fstp
arpl
add
sub
cmpsb
ss
mulb
jp
int3
int
xchg
mov
std
add
in
lret
jno
and
mov
push
xor
xchg
ret
mov
jne
dec
lds
jg
outsb
pop
inc
out
cmp
and
popf
insl
cmp
pushf
dec
aad
push
push
test
inc
jno
sbb
fcmove
cwtl
jp
xchg
inc
cmp
sub
add
or
push
outsb
cmpsb
pushf
test
jmp
cmpl
hlt
repnz
mov
inc
dec
sbb
mov
inc
xchg
fldcw
adcb
add
mov
adc
pop
xor
popf
ljmp
jae
adc
test
icebp
xchg
in
dec
mov
das
rorl
stc
add
mov
push
test
jl
push
or
mov
mov
add
in
mov
fistl
push
cli
test
push
dec
add
xor
popa
aad
adc
mov
andl
stos
or
divb
repz
adc
dec
pushf
sbb
push
mov
es
sbb
or
rcr
mov
jge
outsl
pop
das
xchg
and
push
insb
jb
aaa
xchg
dec
mov
mov
jmp
mov
add
sbb
mov
pop
outsb
mov
imulb
and
pop
or
out
sahf
push
pop
add
testb
dec
adc
xchg
add
fsubs
nop
xchg
pop
mov
jo
les
pop
je
push
sub
pop
xor
inc
into
pop
push
pop
addb
hlt
add
das
scas
and
or
in
dec
jb
pop
add
lahf
lea
lods
lds
pop
loopne
adc
ret
icebp
sbb
inc
mov
xchg
push
pop
stos
xor
js
or
mov
lods
sarb
jb
mov
in
cmc
sub
sub
mov
push
mov
out
test
scas
enter
push
xchg
arpl
fcomi
aad
jmp
pop
fistps
jle
popa
ss
js
movsb
mov
cmpsl
ss
sarb
outsl
jp
xchg
or
xchg
inc
mov
ljmp
mov
jb
stc
cli
cmp
insb
pop
pop
mov
and
or
xlat
jns
mov
mov
lea
dec
inc
shl
sub
sub
push
cmc
pop
idiv
push
les
jae
push
mov
ljmp
inc
adc
std
cwtl
pop
int
je
shll
adc
pop
xchg
pop
filds
cmpl
mov
sub
cmc
push
mov
cmp
sbbl
dec
push
mov
repnz
add
jmp
mov
subl
popa
into
out
push
mov
daa
mov
and
inc
sub
dec
iret
xor
es
mov
int
ds
add
bound
insb
ljmp
out
push
fcomps
push
add
mov
out
cmpsl
push
aad
pushf
sub
mov
cmpsl
dec
movsl
into
repnz
sarb
dec
js
fcmovne
xchg
loop
popa
jge
cmp
jno
pop
sub
mov
outsl
in
in
and
mov
jbe
repz
adc
jmp
shrb
jae
paddb
mov
imul
sub
sub
lret
sahf
test
rolb
mov
shr
into
fstpl
stos
div
push
pop
aam
xor
sub
rorl
stc
sub
adc
int3
push
out
nop
push
cmp
test
hlt
ja
dec
jle
pop
and
sti
mov
cmpl
lea
or
pop
xor
frstor
mov
fiadds
and
mov
mov
or
rsm
aaa
sub
decb
loopne
pop
in
add
xor
pop
aam
test
cld
inc
push
inc
lret
and
push
clc
add
sub
jae
cmp
test
jnp
testl
jne
pusha
lock
push
mov
sub
mov
pop
lods
sub
fsubr
test
sub
xchg
inc
das
int3
cmpsb
adc
leave
fldt
ret
pop
inc
pusha
ret
jne
pop
rcl
mov
lea
sahf
imul
roll
lods
rep
lcall
or
sbb
loop
xor
loope
inc
or
mov
repz
xor
xor
ljmp
jp
sbb
sub
std
xchg
imul
mov
es
cltd
jmp
mov
push
xor
inc
pop
ds
xchg
or
loopne
movsb
adc
xchg
push
push
mov
adc
aam
or
inc
test
stos
rclb
cwtl
movsl
clc
orb
mov
sub
call
xchg
sub
ss
ljmp
sub
or
pop
sbb
pop
xchg
mov
lds
out
inc
fisubrs
add
pop
shl
push
fstps
pop
or
loopne
mov
mov
jo
shlb
xor
jmp
jmp
sbb
ret
sbb
or
push
mov
repz
xor
cwtl
push
pop
inc
mov
cmc
rcll
push
and
addr16
ret
xor
fdivrs
push
and
push
jb
push
cmp
fcmovnb
das
dec
stc
pop
or
gs
test
roll
xchg
xor
pop
ret
ret
cli
fcomp
aaa
repz
fldl
scas
iretw
dec
dec
call
daa
jmp
mov
insb
xchg
mov
stc
xchg
test
ret
in
sbb
xlat
dec
dec
lahf
shll
or
sahf
push
or
cmpsb
add
or
repz
aam
insl
adc
mov
fwait
xchg
mov
shll
mov
xchg
sub
jae
addr16
inc
aaa
imul
stos
jnp
sub
movsl
sahf
je
js
adc
leave
jnp
aad
adc
in
fsubs
mov
mov
adc
shlb
and
or
popa
int
mov
jns
int
xchg
lahf
pop
cmp
sbb
das
decb
dec
loop
lcall
int3
and
pop
cli
dec
add
sub
scas
mov
call
and
std
fisubs
sbb
add
push
jge
sahf
repnz
jno
mov
ret
push
pop
out
mov
xchg
mov
jp
iret
cmp
xor
fcomip
jge
int3
pop
in
pushf
test
sahf
daa
push
ljmp
cld
fsts
in
lcall
push
mov
mov
std
push
aaa
movl
lret
cmp
es
pop
inc
xchg
test
je
xlat
cmp
inc
push
mov
cli
cmpsl
icebp
stos
icebp
call
mov
push
in
insb
adc
scas
mov
jno
dec
xchg
shr
xchg
jp
xor
mov
pop
cmpb
hlt
pop
ljmp
push
sub
ds
negl
xorb
or
div
xor
call
push
jmp
mov
mov
addr16
pushf
pop
cmpsl
adc
incl
and
adc
mov
sti
push
aas
xor
cmp
add
push
ret
imul
imul
adc
add
push
pop
pop
mov
jl
mov
shll
jns
ret
out
loop
faddp
daa
or
rcr
pop
jl
jecxz
cmp
jmp
test
mov
sub
movsl
notb
push
xchg
and
push
push
dec
add
push
repz
dec
and
add
inc
arpl
ret
lea
mov
jmp
pop
cmp
push
pop
jmp
mov
sbb
sub
push
iret
mov
je
sahf
cmp
test
call
fistl
mov
ret
imul
pop
rcrb
jp
scas
dec
adc
in
xor
and
adc
fstpl
popa
mov
sub
push
loopne
cmp
xchg
sbb
jbe
aaa
mov
mov
fs
cmp
jae
xchg
mov
jl
cmp
scas
enter
add
lock
adc
test
dec
dec
pushf
dec
cmp
dec
movsl
xor
out
fnsave
mov
jge
jg
mov
daa
xchg
cwtl
lods
pop
stc
jmp
and
xchg
push
mov
sbb
dec
notl
outsb
lret
xor
outsb
movsl
out
ja
repz
sti
clc
jno
jns
dec
pop
pop
push
sbb
mov
adc
push
sti
scas
roll
in
fcoml
mov
addl
mov
loope
push
mov
xchg
repnz
addr16
jb
xor
xchg
dec
jb
cwtl
fcompl
pop
push
fwait
lds
xor
outsb
jno
enter
cld
mov
loopne
inc
sbb
ret
cmpsl
xor
vandps
int3
mov
into
cmp
dec
scas
fmull
lds
fadd
adc
imul
ret
inc
sbb
ret
nop
jmp
or
test
sub
mov
cmp
je
les
pop
mov
mov
jmp
ret
int3
rolb
jmp
std
sarl
outsb
sbb
adc
xor
push
dec
movsl
out
hlt
lock
ja
fwait
sbb
std
loopne
dec
mov
mov
jo
lods
adc
or
jne
enter
inc
lods
hlt
cs
dec
cmp
xchg
test
cmp
fdivrs
rorb
xor
pop
cmc
and
mov
dec
mov
sub
pushf
hlt
push
lods
enter
sbb
adc
mov
mov
mull
add
push
push
sbb
mov
cli
cwtl
adc
mov
push
jecxz
cwtl
das
ficoms
sbb
mov
cld
mov
cmpsl
fsts
inc
inc
leave
loopne
xchg
lea
adc
cmp
and
dec
mov
pop
adc
aas
cmp
dec
scas
inc
inc
movsl
ja
out
xchg
loope
xor
loopne
scas
jbe
and
xor
mov
insl
imul
lock
jg
stos
fiadds
imul
test
push
test
enter
xchg
add
and
dec
aam
push
or
mov
mov
test
mov
adc
sar
repnz
xchg
and
icebp
stos
sbb
pop
mov
clc
xchg
dec
push
xchg
cltd
xor
rclb
sub
into
push
cmp
iret
sbbb
rorb
add
jge
das
mov
dec
push
sahf
or
clc
sahf
jle
mov
iret
lret
lods
sarb
cmp
sbb
into
nop
sbb
fldenv
jo
or
mov
jg
add
and
shrb
shll
shrb
inc
lret
mov
push
ss
nop
xorb
adc
pop
out
push
xor
jle
or
pushf
inc
jg
ss
in
mov
dec
ss
pop
mov
mov
leave
cmp
repz
cltd
clc
gs
add
inc
mov
cwtl
gs
cs
push
pushf
mov
ficompl
mov
dec
popa
or
repnz
cltd
aad
add
insl
in
dec
xchg
inc
inc
in
loope
xchg
add
dec
inc
sub
sub
insb
pop
push
dec
dec
rorl
pop
add
cmc
aam
and
jg
in
aam
pop
add
cmp
mov
call
mov
dec
xchg
lea
push
sbb
dec
daa
cld
cmp
into
inc
call
cli
pop
in
mov
into
push
adc
fisubl
sub
imul
pop
es
cmp
mov
mov
jle
xchg
or
rdtsc
or
push
mov
xchg
imul
lock
cmpsb
loop
insl
sbb
mov
repz
xor
pop
xchg
repz
xor
sahf
cmp
jp
scas
aas
and
dec
mov
xchg
xchg
aad
mov
das
sub
in
cmp
add
bound
add
test
jns
push
aas
mov
lret
aas
jb
insl
mov
cli
jecxz
aad
rcll
pop
inc
push
mov
sbb
lcall
pusha
jg
lods
push
jo
lds
insl
mov
icebp
dec
lcall
popf
dec
int3
gs
cwtl
dec
test
iret
int
push
mov
repnz
ret
sub
add
das
add
xchg
jns
pop
clc
mov
movsl
rorb
aaa
sub
mov
jne
push
and
ss
mov
fwait
mov
fiaddl
test
aam
stos
xlat
fdivs
add
sub
sub
enter
sub
ja
push
sub
or
imul
lret
cmp
mov
pop
xchg
lret
cmp
pop
mov
nop
pop
test
pop
adc
movsl
ljmp
lcall
add
out
inc
sub
sbb
add
movsl
out
xchg
xchg
xchg
cmp
xor
inc
xorl
shlb
xchg
xchg
test
fisttpll
test
cwtl
inc
ss
sub
xor
rclb
push
sti
or
adc
adc
mov
cmp
and
roll
ljmp
or
ss
int3
aas
test
sahf
insl
test
jb
cmp
push
shr
arpl
mov
xor
imul
or
xchg
mov
mov
fcomip
sub
xor
cmp
sahf
add
jecxz
gs
cwtl
pop
pushf
cmpsb
mov
xchg
cmp
push
sbb
xchg
add
out
mov
pusha
fcomi
inc
push
ja
ds
mov
cld
ja
push
and
sub
jne
dec
cmp
cmp
mov
pop
or
lock
pop
mov
sbb
enter
pop
les
test
mov
sub
pop
push
jp
pop
aaa
inc
lock
shlb
cmp
dec
push
adc
imul
push
icebp
repnz
mov
imul
in
das
xor
jb
popa
add
push
sub
nop
jmp
add
xchg
scas
test
mov
add
jl
dec
divb
icebp
repnz
pop
push
dec
in
jne
dec
sbb
sub
pop
dec
ds
out
aaa
xor
dec
mov
lret
fwait
mov
sti
bound
iret
mov
scas
and
imul
in
or
inc
stos
or
xor
aam
push
jmp
imul
call
shlb
and
pop
pop
cmp
iret
mov
pop
add
xor
xchg
mov
adc
jmp
sbb
jg
push
dec
fs
outsl
dec
dec
test
adc
sub
sbb
movsl
ss
add
xorb
lcall
add
fwait
jns
cmp
bound
mov
in
add
inc
pop
sub
insl
mov
iret
mov
lock
lods
pop
or
sub
ror
outsb
or
outsb
rcrl
loopne
jmp
cmp
cmc
or
pop
cld
dec
jecxz
xorb
imul
sti
or
or
push
and
inc
mov
sbbb
mov
aad
push
insb
test
shl
mov
push
push
cmp
out
xor
scas
mov
mov
cli
lds
push
mov
out
aam
jae
inc
mov
ret
add
jbe
xlat
jns
jns
adc
cmp
leave
xor
jmp
daa
fistps
sbb
sbb
fildl
daa
xlat
into
imul
jo
pushf
ret
push
jge
fnstenv
mov
adc
inc
dec
stc
dec
outsb
adc
mov
jae
mov
mov
movsl
fwait
insb
hlt
sahf
movsl
iret
sbb
mov
dec
cld
inc
mov
icebp
pop
pop
fildll
mov
ret
xchg
test
orl
jbe
inc
sbb
in
jle
movsl
test
dec
and
jns
imul
leave
lcall
scas
sbb
mov
out
fistl
xlat
and
popa
icebp
jns
sub
mov
inc
or
push
pop
test
push
insl
adc
cltd
test
or
subb
fstps
aad
xor
gs
inc
lret
mov
adc
push
cwtl
sub
lods
cmp
xchg
ret
data16
add
inc
ffree
loopne
test
in
push
decb
mov
sub
mov
inc
negl
cld
jb
and
or
cmp
xor
je
push
mov
mov
roll
add
popf
enter
popa
cmp
rorb
cmpsb
sub
add
push
cwtl
adc
inc
pushf
fwait
jge
jae
jne
std
fistl
lcall
pusha
mov
popf
pushf
pushf
shr
and
or
pop
es
or
sub
push
lds
lret
ds
out
xor
insb
aas
scas
shl
pop
jl,pt
cmp
or
mov
inc
shll
push
add
ja
mov
cmp
lcall
ja
in
fstpt
sub
mov
push
out
and
dec
jmp
dec
jbe
les
popa
andl
lock
pop
pushf
test
test
cmpsl
mov
push
ss
fs
mov
rolb
pop
add
mov
xchg
inc
lahf
pop
mov
push
cmpsb
adc
imull
ret
out
pop
pop
sub
iret
mov
outsl
sub
mov
add
jae
sbb
jge
mov
mov
aas
and
and
call
mulb
or
xor
mov
sub
xchg
lods
inc
adc
lret
xor
push
jnp
sub
scas
and
or
aad
movsb
cmpsl
jmp
cli
out
hlt
adc
or
pop
pop
inc
xchg
cmc
dec
inc
fs
cmp
pop
sub
mov
ss
cmp
mov
xchg
push
mov
fmull
out
pop
mov
adc
xchg
adc
mov
movsb
pushf
mov
xor
repz
jnp
jmp
das
jg
loope
fidivrl
test
ret
pcmpeqw
pop
pushf
js
mov
dec
insb
arpl
divl
in
or
sbb
mov
dec
adc
pop
popf
cmc
filds
or
mov
or
inc
sarl
sbbl
mov
scas
ljmp
pop
ja,pt
add
stos
jns
ljmp
cmp
outsl
pop
jg
scas
test
outsl
mov
add
ds
cmpl
hlt
and
int3
aam
jp
xlat
jge
adc
std
inc
or
push
in
fnsave
inc
jbe
clc
loop
inc
push
mov
pop
xor
or
mov
xor
sahf
inc
stos
mov
xor
mov
lcall
aam
insl
xchg
std
cmc
insl
popa
pop
int
push
iret
frstor
mov
sahf
add
popa
imul
cmpsb
adc
fucomip
dec
or
jp
push
inc
xchg
mov
and
shlb
sbb
das
sub
push
lret
adc
scas
fwait
and
daa
outsl
jge
xor
insl
stos
sub
inc
dec
bound
mov
jne
and
and
mov
jecxz
xor
or
repz
push
ror
aas
pop
sub
pop
adc
xchg
sub
pop
int
lods
aam
xchg
les
arpl
sbb
shl
ror
aam
mov
stos
push
dec
pop
lret
xchg
jmp
xchg
aas
shl
roll
mov
pop
xlat
inc
ja
mov
test
adc
xchg
cmp
jle
adcb
xchg
in
lret
adc
or
pop
add
popa
mov
jbe
mov
in
inc
and
mov
imul
push
repnz
dec
outsb
repnz
or
out
cmpsl
cmc
stos
repnz
fildl
pop
adc
mov
and
js
std
les
jne
push
mov
mov
fsubrs
dec
leave
or
rolb
repz
js
pusha
scas
cmp
xchg
icebp
jns
xchg
lahf
inc
ffreep
mov
mov
mov
scas
test
pop
sti
push
popa
mov
cli
mov
push
pop
push
cli
stc
push
xchg
sbb
push
xor
inc
aas
fbld
lahf
xor
fwait
hlt
and
clc
les
add
mov
cs
xchg
outsl
dec
sub
in
dec
in
fisubrs
popf
adc
pop
es
push
ds
jbe
and
sub
sbb
and
ds
sub
cmc
mov
lret
fiaddl
ret
cld
cmpsb
repnz
mov
xchg
movsb
jno
sub
mov
fstps
mov
lret
xor
and
jns
jb
jge
cltd
inc
das
push
movsb
nop
inc
push
adc
fcomi
out
ret
or
add
inc
push
nop
nop
cmp
push
cmc
arpl
inc
dec
stc
gs
mov
pushf
pushf
xor
std
in
xchg
movsl
mov
xchg
ret
inc
and
ret
fucomip
and
xlat
mov
jge
cwtl
xlat
mov
jmp
jp
adc
stos
pop
aam
push
pop
sub
adc
mov
setle
stc
xchg
and
mov
jl
ret
insb
sbb
int
xchg
xorb
cmp
pop
sub
js
jns
stos
mov
je
je
mov
push
jo
and
sahf
rcrl
pusha
hlt
mov
data16
sbb
in
addr16
setp
jmp
rcr
or
xchg
rcrl
ds
xor
aam
into
jae
adcl
pop
data16
movsb
loope
mov
dec
es
sarb
imull
int
jo
cmc
xchg
xlat
mov
sbb
sub
addb
fadd
imul
mov
jle
and
add
outsb
pop
mov
sbb
pop
mov
in
push
cmp
adc
sbb
popa
std
xchg
jae
dec
adcl
pusha
cld
mov
icebp
ss
jecxz
mulb
ss
mov
mov
jno
mov
add
xchg
mov
sbb
cmp
inc
into
int
jb
mov
adc
xlat
scas
mov
add
lock
jp
lock
into
inc
clc
fiaddl
xor
xor
out
enter
xchg
mov
les
add
pop
and
test
popa
mov
dec
incb
jl
mov
cmp
pop
mov
inc
xchg
mov
mov
scas
sbb
sbb
sbb
aad
sahf
add
xor
mov
bound
movsb
lret
or
hlt
and
in
jno
sarb
fisubl
lock
repz
js
leave
and
movsb
cltd
and
into
orb
test
mov
pop
or
add
je
mov
add
iret
ret
repz
and
push
sbb
cmp
pusha
ss
fwait
aad
repz
add
pop
mov
out
fisttpl
sbb
pop
cmp
test
inc
mov
sbb
pushf
xor
aam
pop
out
arpl
push
inc
xchg
dec
jmp
test
or
aas
std
sti
mov
add
fs
jl
daa
ret
popf
push
int3
mov
jmp
mov
pop
dec
xchg
mov
out
and
add
pop
jae
jl
add
mov
pushf
adc
negb
push
dec
xchg
rol
jecxz
jp
sub
or
pop
int
add
cmp
cmp
and
jo
outsl
jnp
push
xor
es
outsl
push
jno
test
pop
pop
loopne
push
lock
sub
into
jne
dec
inc
pusha
fwait
lds
xlat
xchg
ja
pop
mov
mov
movsb
sub
imul
loope
add
sub
js
repz
xchg
data16
add
xchg
mov
insb
or
mov
push
mov
aaa
arpl
int
data16
fldl
xor
fyl2x
fsubs
xor
mov
popf
mov
xor
mov
inc
jne
and
dec
cmp
popa
iret
das
cmp
xlat
pusha
stos
xor
and
daa
scas
cmp
push
add
ljmp
and
xchg
iret
jle
in
dec
inc
jecxz
int
push
fsubrl
ja
adc
dec
adc
mov
and
arpl
mov
xchg
cmp
pushf
and
pop
lock
sarb
bound
imul
dec
sbb
push
in
jo
cmp
xchg
in
mov
dec
inc
lcall
push
mov
or
push
ss
push
cmp
push
push
pop
add
pop
sub
dec
nop
mov
push
cld
cmp
dec
xchg
cs
jp
js
pushl
jle
insl
jno
xor
jns
sbb
int3
xor
jl
xor
pop
xchg
pop
inc
pop
and
stc
je
mov
adcl
or
mov
push
es
cmc
vmread
je
lods
xlat
push
xor
movsb
test
add
fwait
mov
cmp
xlat
das
or
cs
lret
ds
push
mov
mov
aaa
sbb
dec
popf
pop
fmull
js
jl
fistpl
loopne
sbb
sub
cmpsl
stos
inc
into
add
mov
outsb
push
std
outsl
sarl
push
aad
push
sbb
cld
aad
xlat
mov
test
scas
lods
repz
or
cmp
pop
outsl
cltd
loope
inc
js
mov
call
aad
push
xorb
stos
inc
out
cmp
sub
fiaddl
hlt
fs
cmc
xchg
shr
flds
xor
push
and
repz
lahf
mov
movsl
test
das
fstl
div
xor
push
push
xorb
mov
arpl
hlt
pop
xor
mov
pop
std
loope
jns
add
fs
les
test
jmp
jge
push
push
out
jge
xchg
mov
adc
push
adc
jg
mov
loop
mov
add
pop
inc
or
es
repnz
mov
jae
clc
xchg
and
pusha
cmp
mov
add
pop
fsubrp
mull
dec
pop
mov
jge
mov
jg
mov
push
enter
sbb
cli
lcall
xchg
clc
cmpl
lea
sbb
stos
sub
ror
sti
mov
mov
push
sub
movsl
arpl
leave
es
jo
jns
jo
push
fwait
xchg
pop
movsl
scas
pop
sbb
xor
in
stos
or
mov
loopne
shrb
sub
ret
je
sub
push
in
insb
pop
je
pop
pop
dec
pop
cltd
cwtl
cmp
xchg
ja
jbe
xor
cli
sub
dec
add
aad
call
pop
xchg
sahf
into
cmp
jg
sbb
inc
jecxz
pop
pop
imul
leave
push
std
mov
and
xchg
cmp
mov
mov
ds
lcall
xorl
fwait
out
lret
dec
jge
adc
pop
inc
fs
adc
nop
and
mov
shr
aas
push
inc
jbe
in
or
and
adc
sahf
fisubrs
out
insl
mov
imul
xchg
pop
sub
sub
and
lock
lret
mov
push
imul
push
adc
xor
sbb
test
test
add
sub
inc
xor
in
jnp
mov
sub
push
cld
sub
push
les
push
enter
mov
jnp
sbb
xlat
ret
dec
mov
fdivr
sbb
mov
jp
sbb
into
xor
mov
or
push
adc
daa
jne
push
loop
xchg
or
and
inc
into
hlt
push
inc
inc
sbb
fists
fwait
lods
sbb
push
out
incb
pop
cmp
iret
incl
inc
mov
aad
lret
in
mov
insl
jb
adcb
fisubrl
shlb
stos
adc
add
pop
jae
mov
out
cmp
push
jno
mov
and
mov
sbb
test
imul
lea
movsl
imul
push
out
aam
movsb
scas
push
cli
movsl
sahf
push
shlb
pop
pop
cmp
or
sbb
out
cmp
cld
xchg
inc
test
xor
dec
xor
dec
push
or
or
fdivp
mov
cmp
insb
or
fistpl
sbb
add
xchg
hlt
mov
insl
xlat
stc
scas
sarl
arpl
addr16
loopne
sbb
scas
je
scas
sbb
and
lds
ficompl
idiv
fst
cmpl
sbb
or
call
jns
pop
in
mov
sti
movsl
cmc
ss
mov
loope
jne
pop
cltd
and
loope
inc
xchg
push
jno
rcr
adc
mov
nop
mov
xorl
mov
cmp
pop
das
cmp
mov
lods
xchg
loope
sub
push
sbb
dec
jmp
pushf
or
lock
enter
pop
pop
pop
push
aam
pop
cmpsl
andl
out
sub
sahf
dec
pushf
push
ljmp
andb
iret
punpckldq
pop
mov
jge
into
mov
mov
unpcklps
mov
inc
fs
cltd
mov
lea
sub
call
fimuls
sbb
insl
in
stos
pop
mov
pop
mov
pusha
ds
push
mov
mov
xor
test
scas
les
sub
adc
stos
sub
jae
sti
or
out
roll
xlat
or
sbb
dec
test
je
imul
sbb
inc
xchg
stc
dec
fisttps
dec
fisttpl
pushl
in
xchg
xor
pop
xor
fwait
nop
pop
adc
push
mull
sahf
sahf
jb
xor
push
or
mov
arpl
pop
dec
jne
les
dec
imul
cmp
push
gs
pop
add
aam
sbb
add
pop
test
mov
add
cs
jmp
mov
icebp
je
mov
shl
cld
adc
cli
and
sbb
mov
lret
icebp
aaa
ret
jnp
je
fildll
fisubrl
or
sub
notl
addr16
rorl
xchg
cmp
push
mov
xchg
insl
cli
mov
dec
dec
add
adc
enter
mov
inc
or
psraw
add
dec
inc
inc
and
iret
ja
xchg
jne
xor
orl
push
incb
loop
jecxz
inc
lcall
addb
sbb
cs
pop
popf
rcrl
push
aas
jmp
jne
les
outsb
repnz
test
daa
js
xchg
loopne
fs
mov
pop
inc
inc
ljmp
shll
test
xor
stos
sbb
cmp
or
jg
jl
adc
cltd
pop
outsl
jl
rcll
dec
lret
xlat
fisttps
aas
and
mov
add
jb
out
cmp
pushf
in
imul
inc
fiaddl
inc
push
popa
dec
jl
mov
pusha
add
mov
xchg
insb
bound
mov
sub
lods
inc
xor
xchg
mov
rclb
mov
inc
mov
push
loop
cwtl
lcall
lahf
push
arpl
movl
jno
mov
jecxz
jle
ret
adc
lods
data16
xor
out
push
lea
or
and
ja
sub
repnz
xorl
adc
popf
mov
mov
cs
pushf
fwait
xchg
push
push
pushf
aad
xchg
jl
cmp
dec
pop
inc
and
stc
outsb
in
js
outsl
scas
cmp
push
js
addl
cmp
mov
mov
push
mov
mov
pop
mov
cmp
shll
popa
pop
cmp
mov
std
ja
mov
aam
mov
pusha
mov
lock
cmc
mov
in
or
pop
dec
sbb
inc
stos
adc
call
mov
js
mov
aam
aam
fildll
add
mov
and
insl
cs
and
or
scas
lods
cmp
push
pop
lods
push
pop
aad
ret
in
adc
dec
shll
repnz
sbb
cli
sbb
mov
mov
xchg
cli
and
and
testl
or
mov
ljmp
pop
dec
lret
imul
xchg
xor
pop
addr16
in
add
mov
js
xchg
out
imul
test
dec
fbstp
push
ret
jmp
daa
pop
movb
int3
pop
or
xchg
add
add
inc
mov
sbb
ja
or
nop
lods
je
jns
jle
test
xchg
inc
loope
dec
aas
dec
imul
dec
add
push
mov
pop
or
mov
mov
cmp
fistl
xchg
and
and
ss
int
cmp
add
jmp
or
mov
popf
ja
mov
mov
cmpsl
sbb
and
icebp
mov
cmpsl
iret
imul
stos
imul
scas
add
das
daa
pop
cs
bound
jbe
add
push
cmp
cli
testl
xor
dec
push
shlb
or
cmp
xchg
or
out
sti
fldenv
bound
repz
in
pop
or
add
in
jl
testb
lahf
xchg
push
popf
imul
stos
jle
xor
and
push
adc
cmc
adc
mov
cmp
adc
decb
xor
mov
cmp
mov
jo
pop
fsubp
lahf
lea
stos
adcb
into
fucomp
mov
shl
movsb
push
pushl
cld
cmp
ret
imul
add
lock
pop
aam
ljmp
adc
push
clc
in
je
fdivrs
pusha
in
and
repz
cmpsl
std
push
xor
sbb
and
adc
sbb
jae
pop
aam
roll
icebp
loopne
lds
in
sub
inc
or
cwtl
scas
sub
ja
cmpb
stos
fwait
jmp
sub
std
mov
mul
cli
inc
and
addl
cmpsb
andl
dec
fld
scas
sbb
mov
outsl
lds
adc
push
mov
lahf
mov
dec
dec
lods
scas
pop
jge
add
sbb
add
push
inc
sti
pop
mov
or
cmp
popa
add
jo
pop
inc
push
push
xchg
mov
sub
pop
xlat
push
xchg
pop
adc
notb
and
xor
or
add
xor
and
push
popl
rcrb
roll
data16
in
mov
xor
mov
fwait
sbb
pop
les
mov
cmp
push
fists
fs
mov
push
jb
adc
push
mov
idivl
mov
mov
mov
test
adc
shrb
xchg
cmc
cli
push
cwtl
push
test
movups
add
aaa
mov
fcomi
leave
cwtl
inc
gs
fidivrl
dec
mov
cmp
and
rolb
aaa
jle
and
push
dec
and
aas
ror
mov
add
stos
enter
lret
sbb
mov
mov
cmpsb
dec
adc
rcrb
xchg
jmp
mov
mov
xor
lea
mov
shlb
jle
std
lretw
lret
push
jmp
dec
adc
pusha
fistps
jle
adc
cmc
jle
or
inc
out
xchg
jmp
pop
out
pop
and
inc
subb
add
push
ret
pushf
push
scas
add
ret
cmp
ljmp
dec
or
sub
outsb
push
dec
outsl
xchg
sub
lret
inc
into
adc
scas
sub
in
mov
pop
cmp
jecxz
mov
mov
mov
into
roll
sbb
icebp
mov
pop
add
movsl
mov
push
push
or
push
pop
push
test
sti
jo
mov
xchg
std
and
pusha
push
je
and
sub
sti
cmp
pop
and
cmp
push
add
jb
push
dec
jl
inc
mov
xor
sahf
sub
xchg
lea
fisubs
xchg
adc
pop
push
lahf
mov
and
jmp
repnz
out
mov
insl
cli
cmp
mov
das
inc
loop
jg
repnz
xchg
xchg
shll
jge
nop
add
fld
roll
mov
in
outsb
cli
mov
xchg
adc
mov
and
lcall
adc
xchg
jo
sarl
mov
pushf
mov
flds
cs
xchg
mov
sub
sbb
fs
pop
xchg
dec
cltd
add
rorb
add
popf
sti
and
or
movsb
scas
sub
ljmp
mov
adc
mov
stos
lock
insl
hlt
outsl
pavgb
dec
mov
cmp
cmp
sahf
mov
leave
pop
mov
jno
rorb
popa
add
shll
das
xchg
mov
jb
or
jle
inc
add
dec
daa
ds
jo
push
xor
shlb
mov
outsl
popa
push
daa
nop
jns
lock
imul
mov
out
fisubrl
cmp
mov
repz
repnz
mov
xchg
addb
insb
enter
fs
add
adc
dec
and
xchg
addr16
pop
inc
ret
jae
push
or
mov
dec
cltd
fistl
dec
inc
xor
ss
movsb
cmc
sbb
sbb
mov
xor
or
jae
dec
je
dec
fwait
adcb
cmp
xchg
enter
into
fcompl
add
xchg
aad
sub
stos
add
testl
andb
jnp
lock
add
push
adcl
xor
mov
mov
jg
sarb
ljmp
mov
cmp
lods
mov
js
push
pop
cmp
adc
test
cmp
shl
mov
jae
leave
insl
push
fs
stos
sub
mov
inc
leave
out
pusha
mov
jp
ret
add
les
pop
loop
mov
fcomi
adc
sub
adc
sbb
mov
cmc
nop
outsb
shlb
dec
mulb
and
fimull
fwait
out
addl
hlt
test
mov
loopne
hlt
icebp
jle
repnz
out
sub
pop
sub
popa
cmp
add
sub
xchg
adc
cmpsl
negl
dec
popf
mov
lret
sahf
xor
scas
sub
jb
add
call
inc
dec
xchg
add
cmp
mov
xor
pop
push
jno
stos
test
andb
icebp
xchg
mov
and
or
mov
adc
ja
or
push
mov
adc
fwait
je
push
imul
insb
popa
stos
hlt
out
cwtl
ja
daa
dec
cmp
mov
popa
mov
mov
push
push
and
ret
or
mov
push
xor
leave
pop
psubq
add
add
push
fnstcw
adc
in
lea
xchg
out
mov
cmpsb
push
pop
inc
repz
fxch
test
jo
mov
xchg
dec
test
stc
mov
outsb
pop
jmp
push
lret
iret
and
mov
mov
aam
pop
fldt
mov
pop
mov
scas
push
sbb
add
out
repz
and
push
jno
call
push
sbb
push
faddl
cmc
shlb
xchg
cmp
xchg
call
clc
mov
sub
das
push
push
shl
add
push
push
arpl
movsl
jnp
and
adc
xor
mov
test
mov
test
test
sbb
mov
mov
jnp
and
push
fildl
cs
fldl
jnp
shl
sbb
sbb
aas
outsb
out
mov
sub
mov
xor
jg
jge
push
repz
sbb
and
nop
mov
testl
and
push
mov
jg
cmp
mov
jl
test
xor
xchg
in
fsub
std
mov
mov
repz
lret
lret
mov
ja
nop
sub
loope
push
xor
adc
gs
pop
mov
dec
dec
mov
or
mov
add
xchg
pusha
pop
mov
xchg
mov
and
aam
xor
xchg
fnsave
jle
jmp
mov
stc
push
or
inc
inc
pop
mov
cmp
jo
adc
dec
xchg
xlat
test
lcall
call
lahf
adc
pop
aaa
cwtl
pop
ja
icebp
xchg
lret
push
sub
mov
jns
and
cmp
pushf
test
jl
popa
sub
and
cld
xor
fs
inc
popf
shrl
inc
push
and
adc
icebp
iret
sbb
xor
pop
add
popa
jmp
inc
imul
push
push
ret
fdivs
repz
ss
lods
xchg
clc
jmp
popl
movsb
arpl
add
and
lea
and
fcomps
push
test
lea
addr16
popf
jo
push
faddl
popf
cmp
cmp
inc
mov
andb
xchg
inc
jp,pt
xlat
xor
leave
sub
fisubrl
mov
adc
les
repnz
push
and
mov
mov
rorl
or
sti
cwtl
mov
add
xlat
xlat
mov
int3
repz
mov
cmpb
sbb
inc
and
jecxz
aam
ljmp
out
out
mov
mov
or
subb
ljmp
push
loopne
xor
mov
cld
subl
cmp
shrb
icebp
add
mov
in
cli
les
add
adc
lods
popf
call
rcl
int
test
mov
test
pop
pop
mov
jae
frstor
pop
cli
fstpt
mov
mov
out
aas
or
stos
adc
inc
mov
push
push
sub
decl
dec
sub
mov
jge
dec
mov
jle
mov
mov
inc
push
cmc
or
jo
push
in
cld
movb
rolb
inc
jbe
mov
sbb
mov
adcb
adc
scas
pop
push
inc
int3
aas
pop
nop
lock
jp
xor
sub
pushf
push
andl
mov
daa
into
mov
arpl
test
into
mov
dec
push
test
out
imul
aas
outsb
xor
xchg
aaa
mov
adc
inc
dec
dec
movb
cmp
cmp
les
les
lret
cwtl
and
outsl
insb
or
loop
call
mov
sub
ljmp
call
mov
pop
nop
sub
pushf
jbe
pop
jbe
mov
mov
xor
mov
and
aaa
push
pop
das
push
xchg
push
mov
shl
inc
cld
push
jb
out
mov
dec
sti
arpl
mov
ja
cli
aad
push
push
mov
inc
mov
repz
inc
xor
popa
nop
mov
pop
xchg
pusha
and
popa
xor
push
fucomi
into
repnz
xlat
adc
je
js
inc
push
daa
sbb
insb
xchg
cld
es
jo
dec
iret
in
and
mov
fdiv
sahf
push
aaa
xor
pop
enter
and
inc
pop
dec
push
test
test
push
loope
jno
mov
mov
cmc
divb
cmpsb
mov
fldt
ja
push
jle
lock
inc
jb
les
bound
adcb
repnz
xor
adc
add
je
pop
and
xor
push
sub
mov
popl
mov
push
cwtl
mov
jge
shrl
or
mov
jg
jnp
clc
pop
xchg
fldcw
xchg
sub
pop
mov
lcall
shrl
out
or
aas
and
mov
xlat
in
shl
cltd
lds
outsl
lods
and
aaa
sahf
jnp
test
stc
mov
add
pusha
jno
aas
sub
cmp
adc
or
inc
mov
pop
cmp
dec
les
xchg
add
leave
mov
xchg
test
repz
jae
mov
cmpsl
xchg
lods
rcr
into
jge
and
icebp
insb
add
fisubs
lcall
xlat
loopne
inc
sbb
jno
out
add
daa
jp
sahf
fists
inc
insb
push
sbb
push
mov
dec
jno
rep
add
js
aad
add
scas
imul
ror
cmp
pop
or
mov
cmp
ljmp
dec
ds
adc
push
jmp
push
mov
jnp
pop
dec
sbbl
out
repz
mov
jmp
and
dec
inc
cmp
nop
jl
ja
jnp
jecxz
lahf
cmp
movsl
jb
pop
andb
push
leave
scas
cltd
push
outsb
mov
repnz
adc
adc
loop
lcall
cmc
sub
jns
in
mov
in
jmp
xchg
in
outsb
adc
push
inc
xchg
sub
xchg
jmp
movsl
fstp
stos
sbb
out
add
rcl
lret
or
mov
inc
dec
push
and
data16
stos
inc
mov
ror
mov
test
push
dec
popl
cmp
test
jo
rorl
cmc
push
popf
and
ret
fs
int
mov
jecxz
scas
push
cltd
mov
sbb
mov
add
mov
stos
jno
xchg
shll
push
mov
js
fldenv
mov
lahf
loope
push
pop
movsl
lahf
sti
mov
push
lea
cmp
movsl
jecxz
es
mov
add
or
xchg
outsb
pop
inc
lahf
inc
jge
mov
imul
sub
test
or
jmp
stos
int
dec
cli
mov
aad
loope
int3
xor
clc
sub
add
adc
xlat
xorb
roll
outsl
pusha
insl
jmp
imul
daa
xchg
push
push
dec
fldenv
fisubrs
push
push
pop
xor
test
subb
iret
dec
mov
mov
pop
mov
mov
bound
mov
mov
pop
mov
add
push
fwait
xchg
sbb
mov
inc
mov
xor
imul
cmovno
inc
lcall
loopne
mov
cmp
test
or
push
daa
dec
lock
ljmp
mov
aad
inc
int
int
inc
testb
in
mov
les
jl
fidivrl
mov
fwait
jbe
out
rcrb
mov
dec
repz
push
mov
mov
popf
test
or
lret
xor
or
add
cmp
sub
xorb
mov
lcall
push
rorl
pop
xor
rolb
sbb
adcb
sub
xchg
ljmp
pop
cmp
loopne
xor
out
loope
pop
jp
xor
inc
sub
jnp
mov
sbb
sbb
jmp
xchg
into
jno
mov
test
adc
repz
ss
das
stc
in
cmpsb
mov
mov
push
jg
lret
mov
mov
movsl
repz
cmpsl
fisttpll
mov
call
push
lods
jne
xchg
jl
xchg
dec
shl
fistps
movl
daa
arpl
cmp
xor
mov
cmpsl
cmp
mov
mov
xchg
inc
pop
mov
es
bound
sbb
mov
movsl
ljmp
add
adcl
add
jge
shll
divl
movsl
push
je
push
imul
fiadds
fs
jle
pop
aas
or
inc
movsb
mov
scas
push
adc
pop
addr16
or
xor
cmp
insl
mov
cmp
pusha
out
popa
in
xor
inc
imul
jp
aas
out
pop
pushf
sbb
sbb
mov
int3
iret
sbb
mov
sub
cmp
mov
js
mov
repz
jp
fcmovne
adc
mov
jo
or
mov
adcb
imul
mov
ljmp
sbb
sbbb
push
es
mov
inc
cmp
bnd
push
push
in
int3
jp
sbb
xchg
mov
cmp
and
push
in
mov
cld
mov
xor
repz
int
int3
pop
mov
push
or
xchg
adc
push
sbb
and
mov
scas
push
fistpl
or
jb
xor
rorb
push
pop
cltd
or
jecxz
cmp
negb
push
pop
fsubl
push
jnp
outsb
test
mov
and
pop
mov
xchg
xor
jg,pn
jb
push
sub
add
cmc
rorb
xchg
xchg
in
pop
std
mov
aam
icebp
js
jecxz
repz
sub
int3
or
es
test
pop
pop
mov
fdivrl
xor
imul
lcall
xchg
and
cmp
stos
jge
adc
jp
sbb
fimuls
sbb
xchg
data16
lods
jo
mov
out
shll
sbb
addr16
cltd
mov
xchg
aam
adc
inc
jg
addr16
es
cld
dec
dec
repnz
adc
or
inc
outsb
int3
out
popf
loop
ja
shlb
stos
adc
xorb
xor
adc
ret
mov
lret
mov
into
out
jno
xchg
daa
cmp
adc
inc
mov
add
inc
movsl
adc
loope
push
mov
push
loope
in
mov
lret
or
sbb
cld
mov
push
mov
inc
int
mov
cmpsl
dec
sbb
mov
clc
into
sub
dec
dec
push
arpl
enter
movsb
lods
stc
gs
fistps
mov
into
xlat
mov
hlt
xchg
mov
ret
out
xor
std
hlt
test
jge
iret
jne
sub
jle
repz
sub
jnp
into
stc
jb
insl
mov
imul
aad
fldenv
xor
sub
pop
mov
cs
and
mov
sub
stos
aas
jnp
jp
fcmovnu
movsl
repz
inc
sub
or
int
mov
and
sti
pop
xor
jnp
ret
gs
sahf
jl
jle
cmp
cmc
and
test
xor
mov
mov
idivb
dec
inc
sti
jb
adc
notb
xchg
cmp
mov
out
xchg
arpl
mov
stos
push
push
test
cs
mov
cmp
adcl
push
stos
in
xor
mov
inc
mov
adcb
xchg
mov
jmp
aam
pop
dec
test
cli
mov
jne
call
aaa
mov
mov
clc
iret
mov
inc
mov
test
aam
sbb
loopne
and
aas
sbb
jne
adc
leave
pop
and
cmp
and
adc
mov
daa
test
push
mov
pop
mov
dec
lret
in
or
movsb
pop
push
or
pop
ja
pop
inc
cmc
add
lock
mov
or
call
rep
jae
add
mov
add
lahf
cld
lock
mov
push
addr16
and
push
insl
jle
popf
cmp
xor
out
mov
sbb
xchg
imul
pushf
fs
inc
mov
clc
sub
jge
shl
jb
jo
sub
stos
pop
xor
rcrb
cmp
xchg
pop
push
mov
push
adc
jb
adc
ret
mov
xor
xchg
jge
in
dec
int3
aaa
mov
sbb
sti
xor
and
in
jb
daa
or
add
int
enter
adcb
dec
scas
sbb
cld
bound
jg
inc
incb
jbe
movsl
ja
inc
or
add
test
add
fbld
scas
adc
or
pop
ljmp
pop
sbb
xchg
adc
push
jmp
push
inc
popf
out
mov
sti
sub
ljmp
stos
adc
mov
dec
mov
scas
ret
sbb
dec
xchg
rcll
inc
rcrl
xor
xchg
mov
jge
push
dec
sbb
enter
and
or
stos
ret
addb
ljmp
pop
dec
dec
pushf
aas
inc
or
mov
jb
inc
and
mov
stos
je
xor
mov
clc
out
cs
std
sbb
pushf
cwtl
xchg
cmpsl
dec
mov
sbb
into
pop
fucomi
out
mulb
loopne
out
insb
stc
mov
popa
sbb
mov
test
mov
cmpsb
mov
or
sub
push
push
push
push
sub
out
mov
mov
add
sarl
xchg
xor
sti
in
push
test
loope
fnstcw
mov
bound
daa
xchg
dec
sbb
sbbl
mov
cltd
sbb
icebp
xor
ret
jo
dec
arpl
movb
loopne
xchg
ret
in
jle
push
gs
jl
sub
inc
dec
fwait
gs
imul
mov
jecxz
mov
jmp
sbb
xor
xor
pop
ret
rep
stc
push
adc
dec
fidivrl
cmp
notb
or
repnz
mov
arpl
in
xor
jmp
dec
outsb
mov
lea
adc
push
pop
adc
pop
dec
push
std
popa
sbb
dec
dec
icebp
sbb
sub
sbb
mov
pop
adc
push
jno
mov
push
lods
in
sahf
insl
and
push
mov
mov
std
cltd
xchg
inc
mov
jl
jl
mov
add
push
aas
ds
lds
std
jmp
mov
or
into
jnp
jl
add
mulb
sbb
sub
pop
push
mov
lahf
pop
sub
scas
or
dec
mov
dec
int
gs
rclb
or
out
rorl
cmc
lods
xchg
nop
add
inc
adc
and
sbbl
call
push
popa
stos
in
loop
or
ficompl
mov
xchg
adc
clc
xor
inc
inc
cld
dec
sbb
mov
sti
scas
add
mov
add
xchg
out
clc
add
cltd
fsubs
push
lds
int
int
daa
pushw
aas
add
divl
sub
push
fmull
fwait
jne
fsts
or
cli
lcall
js
pop
andb
cmpsl
sub
pusha
lock
push
sbb
cwtl
test
adc
es
icebp
dec
test
icebp
cli
sbbb
push
into
xor
jge
lret
stc
push
clc
xchg
jns
outsl
sub
adc
cmp
int3
adc
push
mov
scas
pop
jmp
push
and
shlb
adc
dec
dec
cmp
pop
out
adc
mov
push
dec
fsubs
pop
jl
f2xm1
loop
pop
or
cmp
fldcw
pop
pop
mov
dec
sub
fdivp
jbe
xchg
testl
adc
and
lods
lods
in
lock
stos
adc
cmpsb
add
jo
out
push
subl
lds
sar
mov
ret
fwait
test
cli
stos
sbb
adc
insl
dec
flds
xchg
in
gs
sbb
mov
stos
xor
aaa
stc
fstpl
cmc
add
jmp
inc
fwait
mov
push
fcmovu
mov
push
xchg
cmc
push
insb
je
subl
repz
test
xchg
test
dec
adc
push
jle
dec
fistl
sahf
dec
inc
push
dec
push
pop
sbb
repnz
add
push
test
enter
and
push
mov
pushl
and
pop
xor
push
or
push
mov
mov
cmc
jl
ljmp
repz
loope
fucomip
out
decb
pop
lret
movsb
fmuls
in
enter
sub
mov
xchg
and
mov
mov
or
push
mov
jae
shll
push
push
mov
insl
pop
jb
jne
pusha
dec
rcll
cmpsb
in
js
push
pop
mov
adc
ss
pushf
dec
sub
fstl
mov
bound
jnp
cmp
test
aad
adc
and
push
jg
dec
popl
js
jb
inc
mov
insb
mov
shl
adc
das
lea
insb
pop
inc
sub
mov
ror
adc
fcoms
mov
push
icebp
mov
mov
imulb
pop
mov
or
jb
rorl
adc
jl
addr16
jl
fs
cmp
cmp
xchg
call
and
test
push
aas
pop
mov
push
sahf
xchg
inc
pushf
adc
rorl
roll
mov
imul
arpl
and
repz
in
cmp
sbb
jbe
inc
inc
aad
out
push
and
jge
int
dec
pop
sbb
ja
pop
insl
inc
push
sub
add
sub
add
cmp
ret
mov
js
xor
out
inc
fs
lcall
scas
in
rol
ljmp
push
xchg
and
or
aad
mov
xor
and
bound
mov
loopw
es
pop
std
mov
dec
ja
cmp
pop
jg
out
stos
jge
gs
ret
test
hlt
mov
lahf
lret
fwait
mov
in
in
sub
and
pusha
fdivs
loop
in
scas
mov
ficomps
inc
adc
xchg
int3
xor
popf
mov
sbb
pushf
lods
shll
clc
addr16
rorb
inc
sbbl
mov
out
sub
add
xor
dec
fdivrp
pop
push
lods
cmpsb
leave
and
ret
std
mov
popa
sbb
inc
xchg
mov
mov
mov
pop
out
and
push
jmp
inc
pop
push
mov
jle
dec
xor
iret
mov
mov
or
adc
dec
ljmp
fnstcw
jle
int
dec
push
cwtl
mov
movsl
lds
test
popa
cld
in
int
ss
mov
jp
lret
xchg
enter
sahf
push
push
aam
fbld
pop
mov
imul
and
int3
or
scas
mov
mov
push
psubsb
popf
ror
or
cld
add
adc
inc
dec
xchg
fwait
sahf
adc
push
sub
and
clc
les
or
jno
xchg
jge
dec
lods
mov
dec
scas
mov
pop
sbb
jecxz
sub
push
sti
scas
lea
jge
rcrb
pusha
cld
loop
aam
dec
sbb
xchg
sub
and
aas
mov
stc
pop
xchg
mov
mov
shll
stos
or
jns
add
cmpsl
pop
pop
addb
int
mov
test
pop
pop
xchg
pop
mov
xchg
mov
mov
xchg
jmp
sbb
inc
xchg
jno
fsub
out
dec
bound
insl
mov
xor
or
out
loopne
jmp
xlat
jmp
dec
push
lret
pop
or
push
std
sub
pop
scas
fwait
arpl
dec
imul
jmp
and
dec
adc
inc
insb
sub
fsubrs
jae
mov
in
lods
sub
in
xchg
dec
sbb
mov
xchg
je
shl
xchg
shlb
repz
inc
jae
adc
xor
pusha
sub
sub
push
int3
lods
sub
and
dec
cmp
jle
dec
or
sbb
je
stos
fldt
sub
sub
jae
test
inc
push
cmp
mov
rcll
loopne
push
xchg
jp
in
mov
or
and
icebp
enter
loop
testl
scas
loopne
test
push
dec
mov
mov
or
pop
bound
dec
inc
mov
notl
mov
imul
sub
loopne
pop
int
pop
rcll
jne
stos
xchg
cltd
mov
mov
imul
jno
lahf
adc
mov
outsl
push
dec
loopne
cmpsb
xchg
sbb
inc
sub
movsb
mov
pop
dec
loopne
push
cmp
stos
scas
pop
out
insl
xor
insb
mov
or
sbb
sub
push
mov
int
lret
rep
call
loope
test
ret
stos
push
imul
inc
xlat
or
pop
lret
adc
jle,pt
add
pop
dec
inc
xchg
adc
daa
imul
addl
sub
test
subb
aad
add
and
aaa
scas
loop
adc
aaa
and
xchg
sbb
dec
ffree
xchg
leave
dec
rcl
fs
das
sbb
or
pop
mov
sbb
mov
sub
xchg
loop
pop
repnz
aas
mov
scas
lcall
jo
jnp
jns
scas
cmp
xchg
sub
adc
lahf
xchg
outsl
xchg
lods
push
sahf
cmpsb
test
outsb
out
test
rorl
adc
inc
cld
lods
sbb
mov
cmp
js
pop
push
pop
nop
push
and
jg
pop
push
jp
jp
adc
aas
inc
mov
jl
lret
out
daa
pop
jl
lret
inc
xlat
inc
mov
push
xor
das
pop
push
cmp
jge
movsb
lods
cli
add
sbb
add
neg
mov
imul
popa
jl
je
ret
mov
mov
push
js
fstpt
mov
out
mov
out
leave
lods
mov
mov
sub
lret
subb
sbb
lds
mov
cli
cmp
xor
daa
lds
pop
js
jecxz
jge
xor
leave
jl
stos
push
and
cli
mov
sbb
inc
push
movsl
lcall
mov
sbb
add
push
lret
mov
add
sbb
pop
dec
adc
into
ss
and
ds
dec
fildl
sbb
mov
repnz
push
and
insb
aad
jne
cld
or
lods
adc
cmpsl
inc
sbb
in
pop
push
pop
push
xchg
lods
xor
movsl
mov
jl
aam
scas
pop
pop
stc
es
push
in
push
dec
pop
cld
push
add
mov
inc
jle
push
aas
sbb
into
arpl
push
aaa
mov
data16
add
icebp
cli
or
popf
lea
loope
push
or
movsb
call
fimull
or
mul
scas
mov
mov
loop
dec
dec
ja
jae
mov
cmp
inc
pop
in
ficompl
int
cmp
dec
cwtl
fildl
inc
movsl
lea
call
sub
movsb
mull
fistl
sti
aad
test
pop
repnz
ja
xor
xor
js
dec
rclb
pop
dec
imul
mov
push
cmpsb
lods
lds
frstor
or
sbb
add
test
push
mov
stos
imul
mov
aaa
in
or
imul
ds
cmp
iret
adc
inc
in
roll
sbb
push
pushl
add
xchg
in
adc
sbb
or
dec
inc
jl
jp
xchg
aad
xor
fsubl
mov
das
int
xor
cwtl
fdivs
loop
xor
dec
int
add
push
mov
shl
pop
and
add
jo
inc
jle
pushf
mov
sbb
outsl
arpl
out
sar
scas
ret
call
dec
sub
and
jne
push
adc
sub
lretw
scas
mov
adc
imul
cmp
xor
sbb
pop
daa
jno
and
cmc
les
xchg
std
pop
add
mov
push
mov
icebp
push
dec
nop
pop
sbb
jg
imul
push
adc
clc
out
ficoms
push
push
and
push
daa
ljmp
push
ljmp
out
xchg
sahf
cmpsl
push
sub
push
mov
xchg
mov
push
lods
mov
jo
popf
cmp
or
std
or
adc
sub
xchg
adc
and
mov
jne
cmpsl
test
inc
test
shl
sub
addr16
mov
sub
ss
neg
jle
mov
jp
xchg
jmp
cmpsl
mov
icebp
ret
xor
jge
dec
push
scas
outsl
ret
push
adc
or
push
add
lock
sub
inc
out
push
adc
lret
xchg
insb
mov
pusha
add
cld
test
lea
inc
jno
cld
xor
mov
scas
mov
fsubrs
sbbl
nop
stos
in
nop
xor
mov
outsb
lods
pop
fdivr
or
es
cmpsl
scas
dec
add
push
cmp
push
lods
and
jle
outsl
adc
fldt
mov
mov
nop
pushf
daa
xchg
mov
dec
adc
lret
fcompl
dec
negb
fisttpll
xlat
shll
fidivs
jecxz
fcompl
stos
pop
cmpsb
out
add
nop
mov
push
add
rclb
and
arpl
mov
sub
push
jmp
movsb
dec
inc
jl
mov
pmullw
lahf
lods
xor
mov
push
ja
lods
inc
sub
mov
and
xchg
pusha
aam
mov
pop
adc
popa
or
lea
add
cmp
sub
callw
in
pusha
adc
cmp
movsb
inc
roll
adc
xchg
inc
xchg
popf
popf
mov
ss
ss
add
clc
movsl
in
pusha
adc
fdivs
dec
add
iret
dec
add
scas
add
cmp
inc
add
scas
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
dec
jmp
.byte
push
pop
test
pushf
add
pop
add
addb
roll
ja
pushw
add
add
pushf
ja
xor
add
jns
stos
pop
cltd
adc
pushf
jnp
jnp
addb
addb
pop
ret
add
add
sbb
pop
imul
add
pop
and
jle
jg
or
data16
pop
adc
add
dec
imul
xor
xor
ss
ss
ss
ss
ss
.byte
.byte
